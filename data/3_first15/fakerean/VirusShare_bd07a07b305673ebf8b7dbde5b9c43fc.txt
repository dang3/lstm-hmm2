push
mov
sub
push
movl
mov
shl
mov
shr
or
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
add
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
pop
leave
ret
push
mov
sub
movl
mov
imul
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
call
andl
push
push
push
push
push
call
cmp
jne
push
push
call
test
jne
movl
jmp
mov
and
mov
mov
add
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
xor
mov
mov
mov
push
push
push
call
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
movl
call
push
call
pop
pop
leave
ret
int3
repz
int
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
addb
jmp
mov
lds
int3
fcomps
xchg
cmp
adc
xchg
xchg
or
out
fstl
cmp
jnp
sahf
sbb
push
sub
inc
or
int
call
dec
xor
jg
shl
add
leave
push
jmp
jb
jne
jne
pop
cs
add
pop
sarl
jecxz
sub
lcall
or
outsb
insb
or
arpl
mov
das
fildll
mov
xor
push
mov
mov
cltd
xchg
lret
push
mov
pop
notl
or
repnz
dec
inc
jle
sarl
ljmp
fwait
loop
mov
xor
ret
cli
daa
daa
mov
mov
dec
lret
sub
pop
les
xor
jmp
stc
repnz
cld
jge
repnz
jp
mov
jp
dec
adc
out
scas
jge
nop
push
pop
xor
int
push
cmp
adc
test
cmpl
test
jno
imul
add
test
enter
add
movsb
jmp
lds
loopne
test
jge
lods
test
daa
adc
xchg
push
out
pop
sub
aaa
call
icebp
shll
std
leave
cwtl
or
in
dec
cmp
pop
fs
xor
ret
into
jl
xor
cmp
int3
lods
inc
mov
sub
rorl
mov
out
mov
pop
and
js
jns
jb
adc
push
fdivrp
cmpl
and
mov
lods
pop
mov
cmp
xor
repz
fninit
dec
pop
mov
sub
xor
inc
jge
sbb
out
and
push
dec
cld
popa
inc
jmp
xchg
lds
aaa
pushf
repz
lahf
ljmp
clc
cmpsb
adc
mov
or
jmp
mov
inc
fwait
xor
mov
dec
int3
mov
push
inc
fdivs
xor
cmc
push
clc
cmp
push
lret
sarb
push
mov
popf
adc
lea
rorl
aas
movsl
push
aaa
inc
int3
fistl
lds
push
lods
xchg
xchg
xchg
adc
sahf
out
jne
xchg
inc
icebp
or
dec
icebp
cmp
cmpsl
loop
cmp
inc
fs
adc
popf
pop
xlat
add
xor
call
aaa
jno
cmpb
inc
mov
push
jns
rcrl
mov
cmp
fldt
movl
js
out
add
int3
xor
mov
inc
xorb
jp
movsb
cmp
out
mov
inc
out
push
cs
mov
loop
cli
fdivl
shrl
push
subl
push
lds
jmp
inc
fsubl
sbbl
jbe
xchg
fwait
ljmp
dec
pop
loopne
push
rcr
add
bound
lret
js
fisubs
dec
push
cmc
jno
lret
cld
lods
inc
fsubrs
sbb
scas
mov
shrb
cli
lret
mov
mov
sbb
cmp
faddl
inc
mov
adc
xor
jmp
cmpsb
test
scas
sub
andb
push
movsb
mov
push
out
push
xor
pop
mov
mov
pop
fldt
call
pop
mov
push
xor
rcll
andb
add
out
rcrl
adc
jmp
cmp
out
mov
out
fmulp
lea
xchg
and
subb
and
and
mov
inc
jge
sahf
and
jo
pushf
mov
mov
or
in
fists
clc
lock
xor
mov
push
sbbl
imul
jo
shll
add
add
sub
cli
ficomps
mov
aad
cmc
cmp
inc
mov
shrl
les
dec
mov
fs
mov
adcl
add
jns
rorl
mov
aas
ss
test
add
cmp
jecxz
insb
or
mov
lcall
gs
dec
mov
jbe
js
cmp
gs
pslld
jb
jae
leave
ljmp
cmpb
push
stos
out
addr16
aam
mov
xor
inc
push
inc
lods
cmpl
and
repnz
and
cmp
push
pop
sub
imull
int3
addl
push
cmp
stos
arpl
icebp
jns
push
popf
test
lcall
data16
stos
adc
xor
or
push
jo
mov
out
cmp
jns
push
dec
insb
add
cmp
in
popa
fisubs
loop
in
mov
into
mov
mov
pusha
mov
adc
push
xor
jnp
les
cmp
xor
or
aaa
mov
cmpsl
bound
sahf
iret
fldt
int3
dec
ret
es
dec
sbb
dec
dec
shl
inc
inc
nop
jecxz
push
or
sbb
sbb
movsl
ljmp
add
subb
lcall
jae
es
cld
movsl
lahf
pop
lcall
adc
flds
lock
aaa
stc
stos
add
inc
adc
clc
cmp
mov
mov
pop
test
and
dec
cmc
fwait
mov
cs
and
int3
or
mov
insb
mov
fisubrl
jmp
sub
nop
jp
stc
aaa
jle
pand
and
sub
cmp
xor
xlat
test
push
cmpsb
ret
adc
adc
jge
out
les
mov
xor
and
test
repnz
or
arpl
jae
out
gs
test
mov
mov
or
dec
mov
dec
or
pop
inc
add
loop
adc
push
fdivrs
pop
es
gs
or
jecxz
mov
testl
fsub
ja
or
lret
sub
mov
mov
xchg
mov
sbbl
adc
gs
push
jae
push
push
repz
cltd
ret
sbb
pusha
pop
xchg
dec
push
movsb
es
mov
iret
repnz
mov
jne
jnp
enter
js
mov
jg
and
mov
or
mov
aaa
push
pusha
xchg
sbb
mov
xor
gs
hlt
outsb
fs
mov
and
lahf
popa
call
cs
cs
dec
enter
imul
push
cmp
xorb
call
add
inc
jbe
xchg
scas
not
es
add
cwtl
lret
adc
popa
test
inc
mov
rorb
out
mov
je
jno
orl
jbe
push
nop
fistl
rolb
add
jo
mov
sar
jmp
inc
and
aas
push
nop
and
int
xchg
pop
add
rep
es
movsb
sub
mov
jns
out
and
sub
out
shl
es
movsb
ja
cmc
lea
inc
sub
push
dec
jbe
cmp
mov
fdivrl
pop
insl
cmp
adc
sbb
jecxz
fucomip
fsubrs
pop
cmp
das
jne
aad
pop
mov
inc
push
notl
scas
xchg
movsl
xchg
or
arpl
out
mov
fimull
mov
test
lods
push
popf
dec
cmpsb
adc
imul
sbb
mov
lcall
xlat
cmpsl
les
push
xchg
cmp
mov
dec
cmp
lret
in
aam
pushf
inc
xchg
orb
jecxz
lahf
mov
jge
es
mov
in
std
and
dec
adc
leave
nop
pop
xor
jecxz,pt
xor
int
adc
int3
sbb
add
mov
dec
mov
mov
jecxz
mov
enter
mov
mov
mov
cmc
shl
mov
xchg
cmp
sbb
std
mov
es
push
jbe
pusha
add
fistpl
test
xchg
stos
daa
stos
add
xor
into
dec
pusha
fiadds
ret
stos
mov
cli
in
sbb
insb
repz
mov
mov
push
dec
lds
push
jbe
push
ds
cmp
jle
adc
xor
mov
in
xchg
fstps
scas
cmpsb
push
cmp
int3
clc
add
inc
xchg
gs
xchg
movsb
mov
int3
inc
or
jae,pt
and
shrb
jbe
or
aas
sti
out
add
xchg
in
js
and
imul
lcall
cmp
dec
aad
sub
sbb
and
cli
and
pop
add
sub
movsl
mov
out
sbb
jge
mov
mov
inc
sbb
ds
ret
lods
outsl
adc
xor
cmp
sub
in
fs
sub
test
sub
mov
imul
jae
ja
stc
les
jle
mov
mov
ja
std
fidivl
in
aaa
aaa
or
xor
and
mov
daa
loope
inc
push
es
push
mov
add
and
sbb
cmc
cmc
dec
out
lods
adc
mov
inc
dec
jmp
enter
sub
imul
das
xchg
push
rol
fidivrl
dec
aam
pop
dec
ds
xchg
pushf
push
jb
push
aas
imul
inc
dec
lahf
shrb
dec
push
fs
lret
pushf
insb
mov
scas
aas
jb
jecxz
add
out
out
ds
or
les
sub
jp
repz
call
and
push
inc
scas
lcall
or
clc
rcrl
idivb
dec
sahf
and
aad
movsb
in
decb
bound
call
inc
xor
dec
repnz
mov
xchg
cmp
jns
and
ret
jne
xchg
and
daa
cmp
cmpsb
aam
les
pop
lods
cmpsl
mov
ret
mov
jo
sub
ret
add
lds
out
cmpsl
push
mov
orb
in
cmp
jnp
push
mov
leave
mov
add
test
cmp
pop
cltd
xor
nop
pop
jg
xor
adc
mov
je
mov
test
pop
arpl
test
or
push
jg
inc
movsl
push
in
les
mov
pusha
popf
add
and
in
cmp
jno
sbb
rol
hlt
cmp
dec
movsb
testb
pop
stos
mov
pushf
xor
xlat
ficoml
in
subl
pop
cmp
pop
lods
fstpt
cmpl
lea
lret
sub
inc
pop
rorb
les
iret
hlt
jecxz
setne
ret
dec
das
and
xor
cmc
std
test
mov
rol
pusha
mov
fwait
jle
pop
cmp
hlt
aam
jmp
sbb
aas
jbe
and
push
mov
fisubl
mov
cmp
add
inc
hlt
clc
test
xchg
imul
mov
push
pop
fimull
adc
bound
dec
push
xor
push
popl
bound
fstp
and
mov
adc
push
pop
ja
xlat
stos
fwait
xchg
mov
aas
add
movsb
jge
sub
adcl
push
ret
jno
push
dec
movsl
faddl
mov
faddl
ret
and
jns
popa
adc
xchg
push
daa
rol
add
scas
xor
and
pop
mov
ret
fsts
incb
test
dec
mov
add
enter
movsb
push
dec
addl
inc
fcompl
lret
clc
and
nop
sahf
jne
sti
shrl
mov
out
insl
pusha
shrb
sbb
ja
pop
or
add
test
in
gs
and
repz
shlb
mov
jo
outsl
push
dec
pop
es
arpl
mov
add
insl
inc
std
jnp
bound
jo
cmp
shll
mov
and
hlt
adc
pushf
test
and
hlt
pop
repnz
mov
add
pop
ss
mov
outsb
push
jp
xor
scas
mov
pop
cmp
repz
push
and
adcl
popa
outsl
jp
add
jno
xchg
in
jns
fstpt
mov
cmpsb
idivb
jae
ret
clc
loopne
add
lea
leave
inc
movsb
adc
add
xorl
loop
insb
sti
pop
adc
arpl
das
imul
or
imulb
jge
mov
sub
mov
imul
sti
leave
or
push
mov
cs
jg
aaa
jg
mov
rorl
jl
or
or
andb
repnz
test
out
int
cli
mov
inc
mov
xchg
outsl
repz
pop
in
movhps
jmp
add
ss
repz
push
shll
push
and
lcall
stos
dec
movsl
cmp
loopne
push
daa
pop
sub
sub
das
lret
xor
sub
lret
add
mov
std
incb
out
sbb
rol
sub
popa
sbb
aad
xchg
cltd
gs
sbb
xor
ss
outsb
movsb
xchg
movsl
xchg
fidivs
fisttpl
lds
lods
imul
mov
fnstcw
cmpsl
sbb
xor
mov
mov
and
xor
icebp
or
pop
mov
stos
dec
enter
or
or
and
outsb
sub
and
fisubrl
shll
std
pop
sahf
and
jno
arpl
and
mov
mov
mov
and
das
jecxz
and
test
or
mov
dec
sbb
icebp
addl
pop
mov
jl
loop
test
ja
lret
or
scas
jle
fstl
xchg
inc
or
jo
movsl
ret
jb
sbb
mov
ss
fisubrl
iret
les
loope
xchg
movsb
mov
push
into
fsubl
mov
mov
lock
les
rcrl
mov
out
and
bound
adc
xor
fistps
xchg
jnp
inc
pop
jl
and
inc
data16
sub
sbb
daa
in
push
das
sbb
push
js
lds
pop
adcb
adc
outsl
jae
pop
movsb
cmp
xorb
or
lret
test
pusha
sub
push
sub
dec
imul
adc
pop
repnz
add
xor
shlb
ljmp
dec
loope
pop
push
call
dec
sti
mov
stos
mov
lock
aaa
ret
cmp
push
into
subl
in
and
dec
jp
pop
jmp
xor
push
pop
test
xor
cli
sarl
into
and
or
sbb
pop
and
or
inc
cld
mov
or
pop
add
outsb
mov
pushf
push
rcrb
or
icebp
jbe
dec
pusha
and
xchg
add
popf
xor
xchg
mov
test
test
dec
dec
pop
pusha
divb
or
push
mov
in
and
lock
je
xchg
xchg
sbb
inc
dec
shlb
enter
xchg
cmp
imul
loope
add
jmp
rorl
and
shlb
xor
mov
js
push
pop
jnp
push
xor
test
out
shr
jle
aam
int3
jno
pushf
inc
mov
gs
pushf
outsl
out
sub
sahf
call
pop
lcall
loope
push
shll
popf
xor
mov
repnz
or
stos
push
ss
cmpsl
xchg
xchg
inc
ret
mov
add
leave
mov
mov
cmp
pop
movsb
js
cmp
dec
and
mov
packuswb
lock
mov
and
icebp
imul
rclb
out
dec
xor
add
popf
mov
sub
fnstcw
sub
push
pop
outsl
dec
mov
inc
adc
into
notl
rcll
add
adc
fistl
stos
inc
repz
xchg
and
or
mov
pop
cli
pop
push
fcmovnbe
mov
cltd
fstl
pop
inc
lds
cmp
jl
aam
andb
and
mov
xchg
insb
sbb
mov
popa
cmp
inc
test
pminsw
push
xchg
adc
mov
push
addr16
mov
sbb
cmpsl
into
inc
insl
sbb
mov
or
shr
stos
pop
jne
popa
fdivrp
xchg
inc
push
inc
scas
push
test
setne
test
pop
xchg
add
sub
sub
lods
mov
jg
push
aas
mov
arpl
sbb
pop
hlt
loope
xchg
fldcw
cmp
enter
test
je
lret
adc
sbb
test
jae
jne
lret
jns
testl
insb
pop
lds
xchg
add
mov
int
sub
jae
lret
rcrl
es
dec
jb
push
xor
movsb
pushf
lock
cwtl
incl
inc
jbe
dec
pusha
push
mov
lods
cmp
mov
pop
sbb
shl
ljmp
adc
test
sbbl
pop
mov
mov
fcmovbe
xchg
sub
sub
cli
das
push
ret
mov
pop
cmpsl
movsb
or
push
hlt
or
pusha
repz
stc
mov
dec
xchg
sbb
ja
adc
aad
lds
mov
lret
sbb
gs
dec
mov
push
dec
leave
xchg
lret
mov
push
xchg
out
les
jnp
adc
cltd
mov
jne
vpackssdw
sbb
sub
xorb
cli
jne
int
inc
fisttpll
ljmp
leave
setge
lock
nop
add
adc
add
dec
or
xlat
loope
pop
inc
inc
ja
in
add
or
sbb
ret
out
jbe
xor
sahf
jl
sub
add
inc
pushl
jg
in
shrb
push
leave
imul
inc
addl
leave
out
insl
cmp
dec
ja
sub
mov
and
inc
pop
and
pop
fstl
inc
out
lret
std
sbb
sbb
push
mov
inc
mov
dec
jo
pop
insb
dec
jp
xor
inc
and
xchg
push
cltd
mov
clc
pop
inc
push
lds
jg
jg
jb
enter
mov
js
dec
lahf
cmp
aam
subb
sahf
popf
lods
mov
fcoms
xchg
fisubrs
mov
xchg
fmuls
jno
push
lock
jecxz
fs
sahf
cmp
aam
mov
pop
xor
mov
pop
xchg
push
xor
cmp
call
cld
pop
pop
fadds
sbb
sub
add
sbb
inc
inc
xchg
or
popa
xor
fisubl
pop
push
mov
pop
mov
push
push
mov
pop
ds
jo
out
out
or
sarb
push
int3
adcb
jnp
out
in
cmp
xchg
cmp
inc
and
fdivr
lock
sahf
scas
inc
cmp
es
mov
dec
mov
ret
das
out
jge
mov
mov
jle
aaa
jmp
jl
es
insb
mov
inc
rcl
xchg
pop
dec
jb
mov
in
pop
add
rcrb
inc
cmpsb
cmpsb
inc
pusha
and
sub
pop
lea
or
mov
mov
or
cli
xlat
push
icebp
filds
rcr
pop
mov
mov
je
xchg
or
xchg
sbb
pop
fs
inc
lods
into
fcom
shlb
andb
jb
mov
jae
dec
mov
inc
fs
je
inc
sarl
dec
jne,pt
mov
inc
daa
cmp
jno
jne
add
or
push
or
jne
and
push
xchg
sbb
or
lret
add
fdivr
fs
rclb
mov
clc
popf
addr16
push
or
ret
les
add
imul
push
dec
inc
adc
test
and
sbb
mov
daa
es
mov
mov
movsb
jl
mov
jb
and
xor
loop
jae
mov
sbb
outsl
mov
cmp
xor
push
ret
fcoml
ljmp
in
add
xlat
and
sub
cld
inc
out
dec
mov
sub
sub
add
lret
or
pop
sarl
pop
pushf
jbe
inc
out
sbb
clc
inc
xchg
pop
sbb
mov
mov
fmull
dec
lret
pop
js
stos
mov
mov
or
rcrb
push
rcr
push
add
es
mov
and
test
add
jns
jnp
mul
jo
pop
icebp
push
adc
fistl
jnp
push
jno
cli
insl
sbb
cmp
ss
or
sub
outsb
adc
inc
gs
pop
les
rclb
int
shlb
and
out
mov
imul
jp
cmp
movsl
ret
add
neg
scas
scas
aam
xchg
inc
out
push
inc
or
xor
mov
aad
cmp
outsb
add
add
push
add
dec
and
cmp
xchg
pusha
jecxz
pop
out
in
mov
dec
arpl
in
pop
mov
pop
fdivr
dec
stc
fisubrs
xchg
add
pslld
pushl
inc
scas
adc
inc
mov
dec
pop
adc
dec
scas
pushf
or
push
aaa
mov
xor
out
sbb
sbb
jae
cmp
sarl
mov
out
int
in
loope
and
call
pop
jbe
mov
rol
cmpsl
mov
addr16
loope
xlat
inc
mov
adc
sbb
pusha
cmpsl
dec
int
and
add
mov
pushf
sbb
movsl
and
sub
mov
pop
inc
adc
and
in
test
lretw
hlt
adc
in
add
std
data16
jnp
and
sub
subl
es
mov
add
sub
and
fwait
cmpb
xor
inc
push
arpl
daa
mov
daa
mov
mov
jl
fwait
mov
jle
jne
stos
lock
cmp
jbe
push
imulb
scas
xor
in
in
sbb
arpl
sub
nop
jbe
cmpsb
and
mov
dec
std
add
pop
add
jo
jns
rol
pop
ret
adc
fsts
in
inc
add
ffree
cmp
inc
pusha
jl
push
pop
mov
or
mov
pop
mov
fcmovbe
dec
adc
sti
mov
ficoml
dec
cmp
inc
fnstenv
sbb
cld
jle
nop
inc
dec
ja
sbb
mov
fistpl
loope
dec
repnz
leave
call
repnz
iret
repz
fildl
mulb
fs
ja
inc
sbb
inc
sarb
jle
ja
roll
repnz
xor
mov
xor
cmpsl
adc
test
jbe
ficoms
je
sub
cltd
mov
push
inc
popf
xor
pop
add
ror
inc
lret
movsb
insl
adc
jns
andb
in
iret
test
repz
add
or
jbe
dec
mov
pop
mov
ds
dec
lahf
xor
mov
lcall
lcall
pop
sbb
fdivrl
jle
sub
fs
xchg
repnz
nop
hlt
lcall
sub
popa
xor
jae
cmp
push
rol
lahf
aas
das
dec
pushf
shrl
inc
sbb
imul
xchg
xor
into
adc
sahf
jb
sahf
out
pop
fstps
push
popa
test
addr16
cmp
mov
movups
pop
js
push
sbb
fwait
add
mov
popa
out
sahf
push
aas
int3
cmpsl
mov
rolb
pushl
dec
jo
xchg
and
lods
call
push
inc
ss
pop
nop
adc
icebp
int3
push
sbb
sysretw
stos
je
and
add
sub
rorl
mov
pushf
jne
lret
or
mov
xor
mov
push
test
ret
cmp
inc
pop
push
das
dec
mov
push
adc
ret
scas
outsl
sbb
cs
addl
adc
out
hlt
jmp
xchg
sbbl
mov
mov
rcrl
sub
and
and
push
daa
ss
sub
inc
adc
pop
lods
daa
aad
mov
lods
dec
pop
pop
xlat
test
sbb
movsl
out
dec
jmp
popf
mov
aas
std
pop
mov
test
jp
sbb
insb
divl
ds
lds
fistl
push
loop
pop
or
imul
movsb
std
aas
or
push
xor
lcall
pop
aad
mov
jle
pop
ret
gs
jnp
mov
mov
pop
clc
dec
inc
pop
sbb
jne
sub
out
dec
mov
daa
lcall
pop
mov
fs
call
mov
jl
pop
add
push
mov
rcll
pop
adc
outsl
cmp
mov
jbe
xchg
push
jp
jle
pop
cmpsb
pop
add
in
mov
nop
sbb
sub
sub
xchg
aam
mov
lahf
aam
push
int
popf
sbb
out
call
outsl
out
pop
push
je
fidivs
xor
lods
ss
pop
inc
mov
push
fs
loope
fisubrl
into
inc
xor
inc
ljmp
adc
fs
or
pop
movsb
les
adc
and
mov
jg
inc
cmc
and
lock
stos
nop
cmp
cmp
push
dec
mov
mov
mov
pusha
cmp
notl
bound
cmp
in
jmp
inc
insb
fcomip
incb
sti
loope
leave
sbb
or
dec
or
cmp
xchg
incb
push
lods
aam
shlb
pop
and
xchg
scas
cmp
xor
pop
insl
jb
pusha
jmp
inc
repz
in
add
add
dec
out
xor
xor
mov
icebp
xlat
mov
sub
lea
scas
pop
xor
lret
sub
push
dec
int
mov
repz
sub
adc
or
fadd
push
xor
mov
out
jb
or
mov
and
out
push
jno
push
xor
jecxz
mov
push
xchg
mov
xor
lock
push
data16
xchg
ss
rcrl
cmc
and
xor
mov
leave
mov
lahf
pusha
sub
ret
cmpsb
or
or
loop
shlb
xor
add
xor
sbb
dec
pop
lods
push
cmc
loop
cmpsl
ds
push
frstor
fmuls
xlat
add
outsl
push
dec
mov
mov
ret
or
sub
in
pop
clc
je
inc
fldl
xchg
add
cmp
adc
lock
popl
daa
add
cmp
push
outsl
and
sbb
repz
aad
mov
push
add
sbb
cltd
and
lahf
and
cmp
sahf
fcomp
cmc
in
mov
mov
scas
mov
xor
lods
push
xchg
roll
sub
out
repnz
sub
into
dec
xor
inc
loope
test
add
sbb
pop
dec
pusha
jb,pn
xor
dec
out
adc
cmpsl
vmread
data16
cmp
jnp
insl
test
rcrl
push
add
sub
stos
mov
popf
scas
mov
lret
adc
mov
les
fwait
push
gs
in
mov
jle
je
cmp
ret
out
loopne
stos
push
cmp
stc
cmp
das
adc
xor
push
xchg
js
aas
mov
mov
andl
dec
jne
aaa
sub
mov
scas
mov
adc
movsl
nop
test
cmc
or
xchg
iret
add
std
dec
push
arpl
imul
or
iret
test
ret
mov
clc
mov
sub
mov
repnz
xchg
and
jge
and
xor
nop
mov
fdivl
add
mov
lods
loop
jmp
test
cs
dec
movsl
adc
cmp
sbb
icebp
fs
lret
dec
xor
mov
or
pop
rcll
xor
out
mov
repnz
frstor
adc
fsubs
or
out
mov
mov
cmp
push
sbb
adc
add
scas
or
mov
mov
and
ret
inc
les
in
aas
mov
in
xor
nop
xor
add
sub
popf
mov
pop
and
bound
mov
loop
fdivp
jp
outsl
ja
jo
imul
or
aam
mov
aam
cmp
outsl
mov
mov
stc
jp
sti
mov
adc
xor
pushf
jmp
push
in
pop
test
push
int3
mov
xor
mov
cli
test
in
push
and
addr16
lock
fnstcw
pusha
ja
shll
mov
loope
icebp
mov
adc
arpl
dec
push
adc
jmp
test
or
aaa
into
pop
call
mov
dec
or
sub
scas
xchg
std
lds
out
scas
xor
mov
cmp
jl
pop
mov
adc
in
into
dec
pop
xchg
pop
incl
in
dec
rcll
and
fsts
sbb
aas
add
test
push
das
and
fs
movsb
sbb
push
test
push
dec
xchg
or
shlb
or
bound
sbb
sbb
jno
fldt
push
lret
dec
insb
xchg
inc
sbb
mov
pop
scas
jbe
inc
scas
jne
push
add
icebp
add
or
add
cmp
jb
call
adc
out
lret
ljmp
mov
push
mov
js
bound
mov
xor
imul
pushf
aam
stos
xchg
and
pop
jmp
mov
xchg
sbb
fisttpl
out
lods
cmp
add
xchg
xor
addl
shl
dec
jge
xchg
cld
xchg
int3
xchg
out
jp
jae
inc
scas
and
fstps
jp
add
xor
rorl
add
sbb
xor
mov
lds
movsb
sarl
das
not
inc
loop
data16
and
fs
aad
ds
mov
xchg
xchg
add
ret
data16
addr16
pop
aam
lods
mov
int
insb
insl
mov
cs
sbb
les
pop
push
mov
std
sbb
xor
mov
inc
test
lahf
call
jae
sbb
ds
popa
stc
jl
lret
imul
mov
cmp
jo
jo
dec
cli
xor
enter
jp
leave
dec
rolb
ljmp
aad
mov
and
inc
ljmp
jmp
ret
hlt
adc
fiadds
xor
and
pop
out
fsubrs
push
inc
outsl
mov
push
cmpsl
rolb
ret
inc
icebp
xlat
adc
ss
xor
jae
jnp
cmp
pop
shl
outsl
mov
sub
sbb
lcall
mov
cmovnp
lds
jmp
pop
mov
stc
pop
iret
loope
test
adc
icebp
mov
in
add
aas
add
pop
push
mov
and
daa
ja
pop
fwait
gs
cmp
addr16
mov
pop
dec
dec
or
add
enter
in
hlt
mov
pop
sbb
cmp
adc
movb
daa
shll
cmp
ror
adc
inc
sbb
sub
cs
pop
jp
repnz
out
xchg
aaa
xchg
js
and
scas
xor
lahf
or
and
push
mov
popf
call
icebp
rol
lock
scas
jecxz
fidivrl
outsl
dec
popa
sbb
gs
add
pop
idivb
rep
push
mov
lcall
ljmp
adc
decl
xchg
das
sbb
mov
dec
or
cltd
ficomps
shrl
lahf
mov
jle
and
push
rorb
inc
mov
jo
imulb
mov
xchg
pop
in
push
mov
or
test
mov
xchg
mov
aam
fldt
stos
gs
divps
imul
dec
movsb
arpl
jg
xor
mov
movsb
or
fsubs
add
insb
in
addr16
or
add
pop
mov
repz
dec
int3
test
movsb
xor
mov
nop
cmp
lret
mov
aas
push
and
pop
pop
sub
inc
add
lods
push
inc
xlat
test
xchg
fcmove
jnp
flds
scas
jns
dec
push
jl
push
mov
ja
jg
fstl
push
jg
mov
mov
xchg
xchg
dec
in
sub
sahf
test
leave
fstl
aaa
je
xchg
in
das
insb
pop
aas
aaa
add
add
add
lods
or
jecxz
ljmp
push
ja
push
iret
or
fdivs
jle
push
stos
lock
jp
test
xor
push
insl
fldl2e
jnp
pop
mov
sub
lods
bsr
cmp
xchg
fidivrl
sbb
mov
inc
test
imul
roll
or
push
outsl
ljmp
ds
push
cmp
mov
loop
xchg
xor
sbb
test
mov
cmp
das
mov
stc
jp
ljmp
push
xor
aam
fdivs
repz
inc
add
lret
xor
push
lcall
ret
pop
inc
or
insl
imul
push
pop
lock
sbb
negb
mov
sbb
lods
js
addb
int3
orb
xchg
dec
sub
mov
rcrl
in
jmp
outsb
sahf
jns
add
xchg
jmp
push
inc
sbb
dec
xchg
loopne
mov
jno
sub
enter
inc
popa
dec
out
inc
aas
add
pop
outsl
sarb
jmp
adc
lret
in
addr16
les
mov
sub
stos
push
mov
into
jp
int3
push
sbb
sbb
mov
lea
pop
dec
lret
js
or
add
cmp
xor
sti
cmpsb
push
xchg
mov
xchg
cmpsl
push
cld
outsb
aam
add
int
test
scas
pop
pop
lds
jge
sub
xchg
add
dec
mov
popl
pop
inc
mov
in
xor
dec
mov
xchg
add
lret
dec
int
cmp
cld
fistpll
mov
push
roll
fldcw
inc
lcall
clc
mov
lods
mull
xchg
shr
mov
mov
or
push
and
jle
fdivs
shll
jbe
and
push
sub
sbb
ss
mov
cmpsl
mov
es
icebp
pop
xor
inc
xor
add
fiaddl
ljmp
inc
dec
dec
sub
jecxz
fwait
cmp
inc
dec
dec
dec
test
adc
clc
push
add
cmp
xchg
jae
mov
mov
jmp
sbb
sar
test
scas
cmp
repz
jle
pop
inc
mov
or
push
out
cmp
inc
in
fsubs
aam
xchg
mov
push
jle
stos
int
mov
cli
aam
jmp
ss
sbb
xlat
into
loopne
add
das
inc
lret
push
sti
in
out
pushf
jns
jae
sbb
push
adc
jns
sbb
fcos
aas
out
xchg
xchg
sbb
push
fcomps
scas
jae
and
xor
cmp
sarb
sub
mov
enter
iret
push
inc
mov
outsl
nop
pop
movsl
mov
idivl
je
out
ret
xchg
fs
push
loop
pop
cmp
lahf
push
sub
push
adc
mov
cmpb
in
cld
ja
div
jo
scas
push
dec
lds
movsb
les
cmp
stos
insl
lret
push
mov
int3
repz
stc
sbb
and
test
lret
sti
frstor
pop
dec
in
das
mov
push
int3
mov
mov
repz
mov
push
adc
rcll
pop
xchg
jmp
ja
adc
sti
pusha
imul
xchg
and
aaa
pop
mov
jb
dec
jmp
movsb
mov
push
xchg
aaa
dec
lods
dec
adc
or
lods
popa
mov
pop
nop
rcr
xchg
aad
nop
shr
xlat
and
jle
hlt
mov
insl
ds
cmc
fst
icebp
daa
mov
or
pop
movsl
pop
xor
lock
push
andb
sub
add
mov
incl
jmp
sub
sub
xchg
add
hlt
adc
sbb
mov
ja
icebp
sub
jecxz
xor
stos
call
xchg
or
inc
outsl
roll
dec
test
mov
punpckhdq
outsl
or
add
push
mov
insb
jp
aaa
clc
mov
ss
arpl
out
mov
jne
arpl
dec
dec
xchg
push
addr16
ss
jp
scas
and
dec
in
test
sbb
add
shlb
nop
mov
push
push
push
ret
sbbb
sbb
sbb
into
mov
push
in
jmp
outsl
jl
inc
imul
lcall
out
jmp
out
inc
xchg
mov
cmpsb
cmpsl
stc
xchg
and
ror
jno
push
call
and
add
stc
add
ficompl
insl
xchg
cmp
ljmp
xor
pop
jecxz
and
mov
push
pop
jp
aaa
or
jmp
cmpsb
cld
sub
mov
lods
cmp
sahf
mov
fimull
lods
lock
repz
xchg
and
and
outsb
rcl
xlat
lock
nop
inc
inc
out
dec
jno
pop
inc
inc
mov
aad
pop
and
pushf
mov
inc
pop
sub
out
test
out
sbb
adc
pop
call
mov
adc
fcmovnu
mov
aaa
xor
xchg
xchg
jo
inc
pop
xchg
cmp
fsts
pop
in
pop
outsl
dec
inc
mov
ljmp
aaa
lds
inc
lds
pop
loopne
pop
pop
es
out
movsl
mov
scas
lods
pop
mov
jg
jo
or
inc
lea
push
and
sub
fildl
xchg
or
jno
iret
fdiv
xlat
fisubrs
and
mov
cwtl
out
pop
or
xchg
mov
sbb
xlat
daa
loopne
adc
shlb
adc
jl
ret
add
and
stos
mov
add
fsts
lds
push
pusha
sub
mov
in
les
cwtl
dec
out
mov
mov
mov
loop
negb
adc
and
dec
cld
inc
mov
or
push
mov
ja
push
push
jmp
xchg
sbb
xor
fnsave
ss
dec
mov
ljmp
mov
sub
mov
or
mov
and
stos
dec
xchg
fdivrl
and
mov
and
movups
dec
bound
adc
repz
pop
mov
ja
cld
into
dec
pop
push
sbb
and
pop
xor
mov
mov
out
bound
pop
hlt
stc
call
out
cmp
pushl
and
test
inc
jmp
and
cmpb
push
leave
cmp
cmc
pop
test
add
mov
xchg
jae
push
mov
cmpsl
push
out
inc
jo
dec
or
sub
cmpsb
sub
out
jo
fsubs
xchg
mov
cmp
cli
data16
cwtl
sbb
je
je
push
jge
punpckhdq
xor
jle
xor
out
or
xchg
rcr
ja
mov
mov
dec
into
xchg
mov
sbb
popa
mov
bound
and
inc
test
xor
mov
or
push
jmp
or
push
sarl
insl
std
les
xor
shrb
out
cmp
lds
and
mov
popa
mov
movsl
iret
daa
and
cli
leave
nop
sub
inc
imul
mov
cmpsb
push
cmp
int3
and
gs
shlb
inc
dec
push
jno
sub
xchg
fwait
lea
in
add
xchg
pop
jb
xor
outsl
jp
and
push
out
inc
fadd
mov
adc
orl
mov
out
addr16
jno
push
xchg
mov
aas
xlat
xor
mov
mov
dec
es
or
inc
testl
add
lea
addl
xor
popa
sarb
xchg
xchg
pop
mov
lds
sub
ds
iret
js
pop
bound
pusha
mov
sbb
xchg
jp
out
andl
leave
mov
push
xor
and
jb
dec
notl
jg
xchg
mov
gs
push
xchg
pop
shlb
and
jne
in
mov
inc
and
sbb
sbb
mov
test
inc
sbb
mov
xor
fwait
mov
push
in
fisubrs
xchg
imul
dec
xor
loope
and
mov
jp
push
sahf
cwtl
pusha
nop
clc
int
into
shr
mov
or
es
sbb
adc
push
dec
je
adc
fistl
mov
mov
pop
pop
cmp
aad
mov
andl
adc
insl
pop
les
mov
xchg
cmp
sub
mov
into
push
fsubs
xchg
adc
jns
leave
push
push
add
int3
sub
fistps
sbb
pop
fisubrs
aaa
lock
mov
mov
fs
ljmp
pop
sbb
xor
incl
inc
pop
popf
inc
das
in
iret
xchg
in
mov
movsb
lock
and
adc
dec
mov
bound
es
pop
cmp
and
cmp
pop
ss
sub
out
in
jo
and
xchg
cmp
and
js
pop
mov
test
cmpsb
sbbl
xchg
sub
inc
into
mov
in
stos
dec
ss
mov
nop
js
pop
rorl
popf
push
into
pushf
ss
mov
mov
jecxz
pop
inc
cmpb
dec
loope
sbb
ljmp
pusha
out
mov
aaa
pandn
mov
jbe
imul
add
imul
cltd
inc
and
jg
call
sub
push
dec
bound
push
cmpsb
loope
jae
mov
or
adc
loop
test
hlt
mov
out
sti
mov
jno
pop
pop
mov
repnz
dec
pop
jae
cmp
bound
cmp
dec
filds
push
out
lds
mov
mov
icebp
icebp
cwtl
mov
fdivs
dec
popa
inc
mov
jge
scas
popf
mov
ret
gs
cmpsl
inc
shlb
jle
jp
test
xor
push
xor
outsl
dec
sub
add
xlat
sbb
jp
xchg
aaa
mov
imull
cmp
pop
jno
jae
mov
into
data16
test
cmp
insl
out
jno
mov
push
hlt
lcall
or
loopne
lahf
out
fcomip
loop
pusha
scas
jo
mov
test
sahf
int
test
jg
jns
and
inc
clc
mov
filds
add
lods
pushf
popa
mov
dec
or
pop
push
out
inc
xor
pop
sbb
adc
inc
enter
xchg
imull
outsl
sbbb
mov
sub
iret
rcll
pop
sub
and
es
add
push
jb
sbb
jecxz
sbb
cs
mov
dec
pop
sahf
ret
mov
scas
jne
dec
xchg
jns
mov
repnz
xchg
xor
xchg
fnop
lods
js
xchg
outsl
enter
push
jle
add
pushf
ret
jb
dec
aaa
pop
rorl
cmp
rcll
pop
xorb
dec
fincstp
cmp
dec
jl
sub
push
add
in
and
fldt
out
test
jns
test
jmp
outsb
in
rcl
xchg
cmp
shlb
or
cmp
jecxz
into
es
sbb
and
sub
popa
clc
sbb
sub
fidivs
cwtl
adc
insl
idivb
mov
add
sbb
mov
lods
lret
and
cwtl
pop
mov
cmp
pop
loopne
sahf
cmpsb
and
mov
lea
notl
xor
cmpsb
and
mov
sbb
ficoms
std
pop
add
lret
pop
loope
pop
repz
ret
jns
cmp
xor
mov
outsb
cmpsb
loope
inc
cltd
mov
in
aas
or
lods
jecxz
pop
cmp
cli
xor
icebp
xor
test
push
pusha
jnp
mov
stos
leave
mov
adc
das
mov
jl
decb
jae
mov
fildll
daa
xchg
or
cmp
pop
pop
aad
arpl
cmp
or
movsl
pop
test
jmp
cwtl
add
and
xor
dec
cmpsl
push
das
and
sub
lret
cmc
dec
pop
mov
xor
add
dec
nop
push
push
arpl
sbb
add
dec
inc
lods
insl
adc
dec
test
dec
mov
jp
cld
fcomps
movsb
xlat
hlt
sahf
dec
cmc
or
scas
jge,pn
pop
pop
movsl
cmp
jno
jne
lea
inc
adc
scas
ja
pop
ljmp
jo
adcl
jnp
imul
arpl
andl
mov
mov
and
call
and
and
pop
ja
and
cs
ret
jmp
pop
or
jg
js
in
loop
jo
dec
lcall
dec
out
or
ror
inc
dec
js
push
xor
in
inc
clc
mov
cmpsb
orb
js
pop
aas
push
mov
nop
dec
pop
ja
ja
lret
or
aad
push
sub
pop
sbb
pop
cli
xchg
push
or
cmpsb
mov
jmp
add
out
int3
fsub
or
loope
mov
jle
sub
dec
push
cld
jg
daa
mov
jb
and
mov
push
push
dec
adc
jmp
lahf
jns
push
jl
mov
pop
push
sub
xor
xchg
in
jnp
mov
enter
sti
pusha
xlat
dec
mov
or
rorl
push
popf
cmp
adc
mov
xchg
cmpl
lcall
xchg
lods
in
mov
lret
dec
and
or
or
xor
aad
add
lret
jecxz
jne
push
pusha
xchg
bound
jecxz
xor
ss
xor
jne
dec
xorb
lea
push
or
ljmp
xchg
or
je
sahf
inc
push
mov
movsb
jmp
jbe
addb
rcl
in
ret
mov
mov
lea
dec
inc
inc
jo
out
and
mov
mov
mov
xor
xor
aaa
mov
loopne
adc
rcll
scas
push
idivb
mov
push
insl
xor
mov
repnz
je
cmp
adcb
mov
push
and
add
in
in
pushf
adc
lcall
in
or
mov
aam
stos
mov
dec
push
fcompl
xchg
mov
mov
ljmp
cmpsb
jnp
jae
push
insb
in
adc
mov
mov
fsubrs
sub
dec
insb
loope
jo
pop
dec
jb
daa
dec
sti
test
mov
cli
nop
stos
cmc
or
adc
inc
leave
push
mov
fcmovne
jno
push
imul
sbb
push
lret
jle
xchg
cli
jbe
out
mov
push
push
mov
push
lea
test
lret
ficomps
adc
push
cmp
scas
push
cld
push
test
mov
fucomip
ss
sbb
or
push
dec
orl
xchg
cwtl
int3
mov
js
enter
call
dec
out
icebp
push
hlt
cmpsl
scas
lods
and
jne
xor
sub
ljmp
cmp
insb
inc
dec
stos
mov
dec
test
sub
lret
sub
and
int3
leave
jmpw
imul
and
adc
pop
mov
aas
lods
es
rcl
mov
add
pop
aaa
cmp
mov
movsl
push
int3
jl
xchg
pusha
mov
add
push
push
mov
in
inc
xchg
test
inc
gs
or
lea
test
ret
add
les
cmp
shlb
jmp
add
pop
mov
mov
fldt
and
or
in
sub
mov
jp
or
sbbl
stos
jb
pushf
dec
mov
jbe
sarb
jns
enter
adc
insw
sahf
inc
mov
gs
xor
ja
imul
xchg
scas
xchg
cltd
jae
inc
adcb
mov
mov
repnz
jl
fwait
js
aam
and
jl
stc
and
fstpt
mov
fisttpll
cwtl
subb
jo
je
in
mov
inc
testb
ss
push
jae
mov
aaa
in
add
inc
xor
lods
mov
cmp
daa
add
or
idivl
pushf
gs
or
out
inc
pop
pusha
in
dec
fadd
js
aas
std
lds
push
adc
in
sbb
xor
repz
pop
add
cmp
aas
mov
jno
inc
and
add
xchg
aas
xor
dec
push
or
sbb
loope
pushf
fcmovb
mov
add
je
dec
push
je
inc
lock
mov
xor
pop
mov
inc
jg
cmp
or
aaa
cmp
mov
or
mov
arpl
sahf
add
mov
jns
add
sbb
test
push
dec
xchg
ss
in
out
mov
jae
pusha
dec
push
lea
lret
jno
in
and
and
out
test
test
mov
xor
xchg
ljmp
ds
mov
data16
add
pop
neg
fisubrl
dec
leave
out
sbb
sbb
adc
and
daa
mov
cmpsl
and
loope
dec
or
push
inc
dec
pop
dec
and
fdivrs
push
ja
ret
jae
xchg
push
clc
into
xchg
and
push
and
jns
fldcw
pusha
sbbl
cltd
test
sbb
mov
test
push
inc
outsb
sub
test
dec
xchg
mov
mov
shrb
mov
icebp
sub
pop
inc
rcrl
push
pop
lcall
fnstcw
jge
cmp
cs
add
and
push
mov
push
cmp
adc
popa
xor
call
incb
xchg
arpl
dec
outsb
fs
mov
jmp
fcompl
push
mov
sbb
xor
lret
pop
stc
nop
xchg
jle
xchg
hlt
xor
xchg
sub
daa
ss
fldl
nop
mov
bound
jne
or
add
sbb
lret
outsl
leave
jmp
cmc
add
inc
into
mov
add
mov
loope
and
lods
mov
mov
in
and
mov
jmp
push
movsb
xchg
add
out
dec
divps
push
arpl
in
mul
popf
dec
out
sti
jmp
xchg
fs
and
shrb
push
popa
test
mov
or
mov
pushf
sub
andl
mov
sarb
add
aad
push
and
daa
aas
mov
into
icebp
jle
mov
aam
sbb
test
pusha
lock
cli
sub
adc
loopne
cwtl
lahf
sbb
adc
lds
in
sub
enter
bound
jmp
shl
or
dec
subb
lahf
xor
push
adcb
rclb
pop
cmpsb
fbstp
xor
decl
loop
adc
pop
mov
and
mov
shll
lcall
bound
std
xchg
xor
orb
testb
mov
in
inc
rol
aam
negl
std
xor
pusha
imul
adc
sub
inc
xchg
hlt
mov
outsb
xor
cwtl
mov
fcoms
fs
mov
mov
pop
pop
jmp
bound
pop
ret
xchg
and
mov
idiv
xor
adc
arpl
cmp
jb
sbb
std
jne
pushf
jecxz
push
adc
fstpt
xchg
lock
jae
xchg
das
repz
or
aam
push
and
lahf
jecxz
sar
jp
cmp
push
dec
jp
pop
pop
ljmp
mov
shll
out
push
inc
int
aaa
inc
cmp
pop
test
pusha
fistl
or
add
mov
sub
loope
notl
mov
mov
mov
adc
push
shrb
jg
cld
adc
es
or
into
pop
out
cs
sub
or
inc
scas
stc
mov
mov
hlt
aam
fwait
test
outsb
sub
xor
lods
les
or
outsb
rclb
std
mov
fcoms
fdivr
mov
xlat
mov
pop
lea
jb
stc
in
mov
mov
stc
xor
ljmp
sub
sub
mov
xchg
xlat
cmp
test
fsubrl
fs
imull
add
cmpsb
sti
cmp
mov
mov
or
int
imul
adc
rorl
xor
mov
clc
faddl
push
lea
sub
sbb
pop
dec
dec
adc
jae
dec
mov
mov
xchg
inc
shrb
sbb
xchg
lret
dec
jb
iret
cmpsb
adc
flds
stc
out
outsl
mov
add
mov
pop
fstpt
mov
jmp
mov
push
rcrb
and
dec
scas
stos
xchg
pop
sahf
shlb
xor
or
pop
insl
inc
add
scas
gs
lcall
push
xor
enter
in
es
and
mov
out
dec
mov
sub
addr16
test
decb
cmp
sbb
cmpsb
mov
sbb
xor
mov
mov
or
pushf
lods
add
outsb
or
inc
shll
rcrb
sub
addr16
jp
sub
ret
sahf
stos
lds
stc
cmp
dec
xor
inc
push
out
push
aas
jecxz
lret
data16
jmp
jecxz,pn
adc
in
mov
les
mov
push
insb
mov
pop
sub
addr16
daa
mov
daa
sbb
adc
int
bound
mov
aad
lea
adc
sbbl
insl
leave
cmp
mov
sub
lret
adc
mov
and
in
adc
xor
inc
pop
ss
inc
sub
arpl
scas
sub
mov
mov
or
lock
adc
subl
dec
lea
and
mov
add
and
out
sti
out
mov
mov
insb
imul
jp
or
icebp
or
iret
in
sti
fnstenv
lret
cmp
pop
inc
loop
jne
outsl
cmp
cmc
and
xchg
jg
sbb
ds
sub
les
sahf
imul
aas
inc
xchg
or
xor
imull
test
inc
xchg
push
movsl
mov
dec
jmp
cmp
or
push
aad
negb
xor
iret
xor
shrb
movb
push
shlb
mov
mov
jns
cltd
dec
add
adc
add
adcb
shrb
mov
inc
push
lret
sbb
rorb
add
pop
in
aam
out
xor
insl
pop
cli
aam
mov
inc
movsl
push
push
in
adc
cmp
pop
cmp
push
mov
fsubs
xchg
arpl
leave
aad
push
addr16
pop
or
jge
pop
aaa
pop
mov
cli
insb
dec
cmc
rol
mov
mov
dec
notl
xor
fmuls
mov
and
and
cmc
dec
mov
adc
pop
sub
cmp
fmull
rcl
ja
and
jecxz
fwait
cmp
in
mov
add
sahf
sarl
push
mov
adc
aam
dec
aam
jmp
mov
mov
leave
gs
imul
mov
mov
and
inc
sbb
popa
push
test
jae
stos
clc
ljmp
xchg
shll
les
test
shlb
mov
ficompl
push
subl
lcall
nop
inc
scas
daa
jbe
addr16
std
fildl
push
stos
out
pop
aas
roll
adc
mov
dec
jl
mov
ficoms
xor
and
out
jne
push
and
push
dec
sbb
cmp
out
inc
int3
mov
add
je
imulb
inc
ret
loopne
imul
cli
hlt
stos
out
xor
insb
pop
ret
shll
mov
or
mov
mov
sbb
into
cli
aad
ljmp
outsl
dec
shlb
sbb
int3
call
inc
in
jp
out
stc
jecxz
fstl
orb
sbb
jle
xchg
in
fucomi
push
lahf
and
std
pushf
jo
popf
repnz
in
mov
cld
sbb
fwait
call
adc
shl
dec
sub
rcrb
leave
int
xor
xchg
js
mov
adc
pop
in
push
popa
sbb
xchg
inc
cld
xchg
fwait
repnz
std
push
incl
push
fnstsw
cmpsl
pop
xchg
mov
cmp
inc
mov
scas
sbb
jp
repnz
adcb
xchg
pop
sub
popf
xlat
pop
jle
xchg
movsb
out
fsts
sbb
cmp
mov
cmpsb
adc
mov
repz
incb
jbe
mov
sub
xor
jne
jne
mov
adcl
dec
dec
xchg
cmpb
sbb
inc
jne
cmp
lods
push
popa
jl
jge
sbb
push
push
xor
imulb
mov
jg
push
repnz
push
mov
leave
out
pop
les
loop
in
je
xor
shrl
lock
and
and
cs
fimuls
cltd
jb
xlat
jb
enter
outsl
mov
fwait
xchg
cmp
leave
std
adc
icebp
rcrb
xchg
xor
leave
xchg
je
mov
mov
dec
ss
or
cmp
cld
in
fdivrs
pop
out
mov
mov
mov
mov
pop
in
repnz
mov
or
cmpsb
pusha
lret
or
fnstsw
cmpsb
scas
mov
test
and
andb
aam
sahf
or
cmp
cmpsb
jbe
shl
mov
fildl
sbb
xor
mov
add
lret
flds
mov
xchg
hlt
arpl
adc
push
ror
sbb
cmc
add
popa
cmpsb
daa
jl
imul
mov
jne
adc
dec
jmp
inc
iret
out
jbe
loopne
adc
cld
inc
ja
xor
xor
and
shlb
movsl
movsl
ja
mov
and
cld
in
into
ljmp
mov
js
mov
arpl
xor
lds
sub
inc
push
pop
jb
mov
pushf
cltd
mov
outsl
push
repz
stos
mov
int3
stc
push
sbb
mov
ret
addb
xchg
cmp
fiaddl
mov
jbe
pop
incl
sbb
jne
lcall
out
or
das
movsb
mov
inc
inc
push
xor
add
aaa
or
imul
testl
pop
push
sarl
push
loopne
xlat
inc
in
icebp
mov
pusha
mov
pusha
xor
push
mov
in
adc
and
sahf
daa
fcmovne
es
push
sub
scas
in
push
dec
push
pop
negl
cli
sbb
cs
mov
jno
or
jne
fwait
sbb
or
sub
pop
xchg
fisubl
mov
sarb
jnp
repnz
mov
push
lahf
sub
push
loop
xor
out
rorb
or
jne
and
lret
inc
xchg
dec
pop
push
dec
xor
stc
int
rol
inc
jnp
sahf
jno
cmpsb
and
xor
sbb
xor
incl
mov
jl
adc
xchg
div
inc
and
xchg
jb
add
stc
pusha
jbe
dec
cli
inc
add
fnsave
pop
cs
mov
add
mov
mov
aas
xlat
sahf
cli
andb
mov
fwait
or
outsl
and
mov
add
mov
and
or
jnp
jns
jecxz
mull
push
xchg
mov
add
and
in
add
sti
mov
movsb
jae
fcomi
data16
cwtl
sbb
rorl
mov
ss
sub
jmp
jbe
sub
push
repnz
gs
cmp
add
imul
jbe
sub
dec
aad
arpl
mov
outsb
mul
sbb
jnp
xchg
cmpsl
jmp
xchg
xor
dec
mov
popf
lahf
xor
mov
dec
bts
rorl
sbb
mov
gs
in
cltd
shll
pop
cmpb
dec
daa
lock
and
or
iret
sub
mov
add
fmuls
xchg
and
jg
pop
mov
mov
xor
outsl
push
xor
sti
adc
fwait
or
mov
inc
mov
sbb
fs
les
lret
arpl
jp
dec
clc
inc
pop
or
push
mov
frstor
inc
adc
lock
out
xchg
aam
imul
ds
xchg
fldenv
mov
repnz
add
shl
fdiv
andb
cli
xlat
call
dec
jo
sahf
outsl
mov
jo
ret
sub
push
mov
dec
cwtl
cmpl
jl
jecxz
xchg
add
dec
mov
imul
sbb
insl
mov
mov
ja
dec
or
imulb
sbb
push
push
std
imul
mov
push
lahf
subps
cwtl
hlt
mov
xor
add
push
mul
rcrl
jl
sbb
sub
pop
add
jl
cltd
push
in
mov
or
clc
sub
fistpll
xor
adc
cmp
cmpsl
jg
js
shrl
cmpsb
adc
mov
mov
push
xor
dec
sub
inc
les
and
sub
cmp
insb
add
pop
lret
jmp
jo
cmpsl
test
sub
xlat
cs
out
mov
pop
add
add
daa
shrb
aas
xchg
scas
cltd
xchg
mov
mov
rcrw
push
rorl
or
pusha
shrl
add
das
test
ljmp
dec
test
xchg
hlt
out
sbb
cmp
pushf
ja
aad
int
sub
dec
sbb
aad
ret
loopne
jne
sarl
xlat
mov
test
loopne
push
adc
xchg
inc
mov
mov
add
mov
in
inc
mov
sti
push
outsl
adc
add
xor
in
xchg
add
xchg
cmpsb
sub
mov
dec
inc
shrd
cmp
add
mov
rcl
shl
add
mov
xor
lcall
fdivl
sahf
push
filds
jno
dec
mov
stos
mov
dec
add
adcb
jg
imul
xchg
adc
push
mov
imul
stos
jg
mov
sahf
lcall
out
lahf
pop
push
adc
dec
ret
adc
dec
push
rorb
mov
cld
loop
and
cli
lds
mov
mov
rorl
sbb
inc
dec
sub
sub
jge
sbb
repz
lahf
inc
roll
mov
lret
sbb
add
mov
xchg
mov
test
lcall
adc
cli
and
popa
pop
push
cmp
mov
hlt
icebp
add
adc
mov
push
test
mov
add
mov
sbb
adc
push
pop
dec
jl
mov
popa
push
fstl
or
add
jmp
push
or
xor
xor
sub
sbb
fdiv
pop
and
fbld
jne
pop
sub
shlb
popf
in
lods
cmp
icebp
jge
icebp
xor
sarl
cmp
xchg
in
adcl
in
mov
mov
add
ss
xor
mov
pop
adc
cmp
adc
sub
mov
mov
push
mov
sub
xor
push
addb
mov
orb
cltd
adc
int
test
xor
outsl
icebp
dec
lret
in
aaa
js
out
add
enter
jle
mov
xchg
cs
xor
add
push
lock
cmpsb
into
mov
test
xor
inc
inc
or
dec
or
dec
stos
add
sbb
daa
fsts
mulb
dec
rcl
mov
insl
pop
test
sqrtps
push
xchg
jl
jmp
iret
jle
adc
inc
outsb
lods
add
out
shlb
mov
sti
jle
imul
cmp
out
cmp
mov
or
sub
scas
cmp
lods
scas
dec
jg
xor
mov
mov
cmp
insb
mov
mov
mov
andb
add
out
mov
clc
lcall
push
lcall
fidivrs
js
and
inc
icebp
and
sbb
jecxz
mov
sbb
fadds
aaa
cs
mov
data16
popa
mov
pop
dec
pop
mov
jecxz
xchg
push
mov
fld
in
orb
or
xchg
or
dec
adc
adc
in
lret
xor
mov
imulb
gs
jns
and
fsts
and
leave
and
and
shll
into
and
cmp
jbe
xchg
or
lods
out
popf
add
mov
push
mov
repnz
mov
fdivs
jle
mov
in
out
xchg
cmpsb
ljmp
ds
jno
loopne
mov
fists
jb,pn
and
cmp
out
and
sub
lret
movsl
pushf
add
cwtl
popa
shlb
inc
fstl
jae
push
add
jbe
adc
push
cmp
xchg
sub
xchg
xor
decl
repnz
mov
orb
ss
push
add
aas
jge
sahf
sbb
in
test
ret
mov
int3
push
mov
adc
cmp
pop
adc
mov
test
rcll
cmp
dec
pop
enter
mov
std
mov
sbb
in
fs
insb
lods
repnz
mov
mov
dec
sbb
hlt
mov
pop
cli
jns
fwait
jb
inc
sbb
cmp
or
loopne
mov
and
cwtl
out
jge
lods
adc
stos
mov
mov
enter
mov
cmp
fldt
std
adc
dec
aaa
int3
cmp
pop
dec
shlb
popf
inc
jl
lahf
push
int
sbb
cmp
stos
fildl
mov
sarb
bound
adc
adc
push
stos
inc
js
xchg
cmpsb
dec
fbld
pushf
js
mov
movsb
lcall
fnstcw
sbb
sub
pushf
xor
out
pop
mov
push
mov
in
cltd
fidivs
es
mov
pop
add
icebp
xchg
je
jl
or
out
inc
xchg
in
sarl
xor
outsb
pushf
es
andl
nop
push
cmpsb
pop
out
stc
mov
pop
jb
sbb
test
je
push
jle
sbb
pushl
test
mov
sbb
inc
addb
cmovae
jno
dec
cld
and
jg
cmpsl
pop
xor
pop
fwait
aad
pop
ret
cld
scas
shl
jl
sub
sub
jmp
lret
icebp
jl
divl
leave
shl
test
cmp
mov
push
sbb
adc
cs
mov
jno
mov
dec
xchg
xchg
push
fsubrs
pop
jb
mov
mov
mov
pop
sti
lock
cs
adc
pop
sub
jo
lock
test
jg
xchg
sbb
jns
lahf
cld
dec
repnz
and
dec
push
jbe
out
push
xchg
inc
push
aas
mov
rcrl
mov
xchg
pop
sbb
lret
xor
call
push
gs
fistps
and
and
insl
push
repz
shll
or
sbb
and
cmc
adc
rcrl
rcrb
mov
xor
mov
xchg
aas
adcb
cmp
or
movsb
push
add
sar
push
ds
mov
add
int3
mov
dec
insl
filds
jle
cmpsb
xchg
mov
xchg
insb
push
push
fdivrs
roll
incl
stc
xchg
jno
push
inc
mov
mov
inc
scas
ja
and
cs
jle
ss
xor
cwtl
out
es
popf
insb
jecxz
imul
scas
mov
jno
scas
dec
dec
xchg
adc
nop
inc
add
pusha
hlt
jmp
aad
jl
stos
jne
mov
sub
leave
push
popf
inc
dec
pop
push
aas
pop
xor
jle
pop
sbb
test
mov
sbb
sub
dec
ja
or
add
je
paddq
repnz
pop
fildl
test
sbb
rcrb
jl
xchg
mov
pop
fnstenv
sbb
int
jnp
mov
push
in
adc
sahf
mov
scas
add
pop
pop
push
xchg
shlb
jo
aas
loop
xor
or
mov
addr16
mov
jp
mov
pop
mov
cmpsw
and
out
ror
pop
jns
push
or
cltd
mov
jle
cmp
std
out
mov
cmpsb
imul
movsb
dec
add
inc
cwtl
shl
mov
scas
add
pop
cs
push
es
inc
es
mov
stos
out
jae
int3
out
or
insb
sahf
movsb
xchg
repz
addr16
scas
movsb
outsl
mov
push
sarb
in
adc
jae
sub
imul
push
popa
jnp
cmp
sub
mov
inc
call
int
jg
dec
shll
cld
mov
loopne
dec
lods
addr16
in
sarl
pop
aas
into
sub
or
mov
lea
sub
sbb
cmc
mov
sub
imul
jno
lock
pushf
insl
fmull
fistpl
mov
out
push
mov
cmp
cmp
scas
repz
and
scas
sub
test
or
sub
or
sub
xchg
and
movsb
lret
push
mov
sbb
push
mov
sub
xchg
call
idivl
rclb
rclb
sbb
idivb
add
jle
cwtl
push
xchg
dec
fadd
mov
sub
popa
push
mov
test
insl
gs
scas
cmpsb
add
sub
dec
jo
mov
inc
sub
shll
xor
adc
dec
push
sub
out
push
mov
sbb
xchg
push
adc
test
push
cld
dec
add
or
adc
cli
and
aam
stos
popa
scas
out
sbb
mov
mov
inc
inc
push
stos
xor
and
inc
and
add
rolb
pop
dec
or
inc
sbb
imul
les
pop
adc
push
in
add
inc
mov
push
sub
shlb
jb
push
add
pop
mov
mov
sub
shlb
rcrl
sub
sbb
es
push
xor
adc
pop
mov
push
jns
pop
fbld
or
mov
ja
movsb
mov
mov
or
mov
aad
loopne
call
in
pushf
or
add
jmp
mov
test
popw
push
push
xchg
cmc
xchg
mov
lea
out
or
push
pop
mov
pop
cmp
repz
cs
pop
jecxz
int
out
sub
stos
rolb
addr16
xlat
fs
add
call
pop
enter
dec
cmp
lret
into
or
sbb
cld
cmp
not
cmpsl
std
jge
fwait
cmp
jl
sbb
xor
cmp
imul
test
shll
in
cmp
popf
xor
pop
pop
lahf
push
out
xchg
dec
out
ret
adc
rcr
insb
mov
ds
add
dec
xor
mov
xor
dec
inc
out
pop
dec
das
jle
inc
mov
call
loope
mov
mov
fisubs
imul
ficomps
ljmp
push
aaa
and
xor
sub
jae
sahf
jne
mov
cwtl
jae
cli
mov
and
enter
mov
test
push
push
mov
jecxz
push
repnz
push
mov
xor
mov
sbb
inc
adc
jp
mov
test
push
cmpsl
leave
sahf
sub
out
fld
testl
call
inc
stos
test
jle
lahf
jle
xchg
mov
sub
xlat
jns
inc
ret
cmp
adc
push
ja
push
iret
insl
cwtl
jo
xor
xor
insl
fwait
and
sub
mov
es
and
scas
mov
mov
cmp
xor
les
push
jmp
gs
lock
xor
pop
inc
cli
test
fwait
or
jp
out
sti
mov
das
xor
jno
push
pop
xlat
pop
int
je
push
ljmp
cmp
sbb
imul
pushf
das
sbb
cmc
cmp
aas
mov
shll
pop
xchg
stos
std
gs
jne
shlb
popf
add
dec
rorl
push
imul
push
jg
jns
mov
inc
dec
mov
dec
push
mov
push
gs
push
jno
mov
mov
adc
mov
aaa
std
lods
push
mov
movsl
ds
out
inc
and
add
cli
mov
jno
fcompl
sahf
xchg
movsl
les
insl
cmp
ret
jno
lock
js
sub
cmpl
test
xchg
or
sbb
lds
pop
or
out
ss
fldenv
jp
int3
imul
stc
rolb
scas
stc
jle
dec
negb
je
xlat
fcompl
add
push
sbb
cltd
cmpsl
mov
fadd
cmp
jb
mov
ljmp
mov
stc
jne
xor
or
sub
ja
lret
sub
mov
cltd
fwait
or
imul
lock
and
push
add
push
lock
ds
add
imul
xchg
in
and
scas
mov
push
fstpl
sub
test
filds
mov
sub
pop
adc
icebp
arpl
icebp
insl
stc
xor
xchg
bound
push
mov
mov
ret
dec
jae
jbe
dec
dec
mov
add
add
cmpsl
xor
ljmp
lcall
push
fsts
xchg
xlat
mov
jnp
and
dec
decl
pop
adc
std
sbb
dec
mov
cmp
mov
mov
sub
subl
dec
jmp
mov
sub
daa
jle
push
cmp
out
jnp
scas
adc
push
push
sub
mov
push
insl
stos
xor
shrb
mov
ret
and
cmp
addl
nop
or
mov
les
lds
adc
add
mov
arpl
and
pop
int3
shlb
adc
mov
dec
out
aad
mov
daa
inc
push
pop
decl
adc
mov
cs
jo
jnp
cli
lea
js
xchg
xchg
jle
aaa
add
jo
aas
mov
stos
and
in
lcall
lcall
mov
pop
aas
pop
lock
and
addr16
inc
sbb
push
mov
xchg
sbb
push
adc
mov
int
add
movsb
call
mov
jecxz
or
sahf
push
or
cmp
add
adc
ret
sub
cmpsl
cmpsl
push
pop
inc
xor
cmp
fadds
pop
xor
aaa
sahf
and
xchg
loopne
push
es
push
stc
loop
pop
sbb
test
popf
fisttps
jb
adc
aas
gs
xor
adcb
outsl
dec
shrb
int3
dec
mov
negb
mov
sti
andb
addb
lods
into
dec
ja
sbb
xor
les
inc
int3
cmp
cmpsb
mov
enter
xchg
shll
test
rep
push
data16
adc
cwtl
push
mov
mov
sbb
ss
loopne
sbb
add
and
insb
push
fidivrs
daa
icebp
shll
xchg
sub
adc
test
pop
mov
cmp
out
ds
stos
ret
mov
insl
mov
in
cwtl
lods
fwait
leave
inc
xchg
push
xor
imul
push
adc
rcr
in
mov
pop
cmp
loopne
push
pop
push
xor
or
or
sbb
sub
jg
js
adc
ja
mov
fwait
jl
adc
lcall
xchg
fs
jmp
int3
int
mov
push
enter
scas
inc
add
call
jmp
xor
push
iret
aad
adc
xchg
sbb
adc
inc
inc
mov
add
cmpsl
inc
cli
pop
fisubrl
subl
xor
outsl
add
std
movsl
inc
inc
clc
push
mov
popa
cmp
mov
int
xchg
lcall
pop
mov
rolb
jbe
inc
jecxz
mov
dec
in
cld
movl
lods
mov
pop
fistl
cmpsl
sbb
xor
xchg
add
sbb
mov
hlt
iret
xchg
pop
add
in
scas
sbb
push
jae
rcr
rorb
dec
mov
ss
mov
adc
pop
lcall
adc
add
sub
mov
xchg
andnps
mov
and
lea
fldl
sbb
adc
jge
inc
sub
mov
stc
fstps
push
mov
mov
jo
fisubl
fists
rclb
adc
adc
into
loope
push
cmp
adc
xchg
in
xor
inc
call
out
xor
outsb
jns
movsl
imul
inc
add
mov
push
repz
push
dec
adc
jge
jp
pop
into
add
sub
sub
rol
stos
xor
sub
or
rcll
pushf
mov
repz
cmpsb
pop
inc
test
jle
negl
pusha
jnp
outsb
jnp
in
inc
shll
sub
pop
mov
mov
pushf
shll
scas
loop
jg
sahf
scas
push
pushf
jmp
xchg
sti
jno
jg
cmp
xlat
jo
imul
adc
jecxz
pop
mov
out
out
loop
adc
mov
sub
cmovl
lods
sub
inc
mov
mov
xchg
jne
inc
loopne
inc
mov
out
lods
fnstenv
xor
call
jbe
cmp
inc
test
pop
movsl
sub
jp
or
bound
or
cmpl
push
adc
xchg
ds
data16
push
sub
adc
inc
mov
arpl
sub
addr16
into
add
inc
adc
mov
and
leave
fs
icebp
pop
sti
gs
mov
addl
jecxz
in
jmp
mov
icebp
hlt
or
pop
xor
add
inc
and
pop
push
and
out
jecxz
aad
ja
mov
xor
in
sub
add
call
in
pusha
push
shll
lods
and
sub
xchg
test
dec
dec
hlt
subl
sub
icebp
dec
cli
cld
pop
mov
mov
jmp
mov
jnp
add
enter
dec
lock
mov
addr16
xor
gs
pop
inc
add
push
mov
les
in
rorb
fsubrs
mov
dec
cmp
cmpsb
jecxz
fbstp
push
daa
rcrb
shlb
adc
inc
mov
out
cmp
shrl
outsl
clc
call
lret
dec
das
add
mov
mov
test
arpl
subb
sti
fs
stc
cli
sbb
popa
test
push
mov
fs
sbb
pop
and
aad
js
je
repnz
sub
ficoms
jmp
xor
dec
into
jl
nop
in
add
outsl
xor
lock
daa
out
adcb
mov
jp
cwtl
lds
pop
je
or
inc
ljmp
inc
inc
inc
imul
dec
in
stos
mov
xchg
aaa
inc
mov
and
ret
push
call
loope
cmp
pop
xlat
shrl
popf
aaa
mov
addl
fnsave
mov
mov
adc
push
dec
leave
subb
sbb
and
sahf
cwtl
or
mov
sub
xchg
xor
and
sahf
push
loopne
imul
out
sbb
shrl
stos
xchg
dec
lods
hlt
aad
pop
adc
psubusb
push
and
imul
faddl
jge
in
xchg
enter
scas
mov
xchg
cmc
aam
ja
ret
enter
sbb
in
mov
push
mov
cmp
mov
push
sbb
cwtl
adc
out
es
sbb
shlb
mov
sbb
xchg
mov
pop
es
pushf
pop
sub
mov
pop
cli
cld
daa
lret
sub
jnp
pusha
cmp
xor
insl
push
movsb
xchg
cmc
mov
push
rorl
daa
mulb
xor
push
fs
lahf
nop
xchg
xchg
cmp
pop
add
xchg
lea
cltd
mov
clc
movsl
icebp
and
shrl
scas
outsl
loope
xchg
shrl
push
in
paddb
mov
imul
insb
lock
icebp
subb
ja
sbb
ds
loop
test
nop
fwait
jge
jno
mov
push
pop
fcompl
or
or
out
fwait
loope
xor
cs
test
and
xchg
movsb
jle
call
cltd
mov
rcll
pop
sbb
fidivs
push
and
std
xchg
ret
lret
aas
pop
clc
sbb
rorl
xor
inc
sti
outsb
dec
mov
adc
shrl
mov
out
push
ret
cwtl
inc
aam
fisttpl
xor
aaa
shrl
push
arpl
in
lea
mov
test
je
movsb
lret
jle
mov
xchg
jg
mov
or
stc
and
jno
inc
push
addb
mov
pop
daa
jno
adc
push
pusha
xorl
sbb
jp
cli
add
push
stos
jmp
mov
add
jl
lret
xcrypt-ofb
cmpsl
imul
movb
popf
mov
pop
ret
test
test
xorb
movsl
repz
addl
cmp
es
pop
movsl
test
push
and
ja
xor
xorb
rcr
lds
stos
xor
out
jecxz
fs
pop
dec
into
cmpsl
jns
adc
ss
aas
pop
je
and
xorl
shll
rclb
xchg
adc
mov
add
aam
mov
cmpsl
add
add
xchg
xor
push
adc
inc
mov
cmpsl
pop
push
adcb
mov
jge
pop
out
inc
lea
aas
cltd
pop
cmp
inc
push
jns
cwtl
mov
les
xchg
pop
or
add
push
orb
stos
or
movsl
pop
clc
imul
push
dec
mov
or
inc
adc
dec
inc
cmp
lret
adc
mov
mov
mov
adc
mov
in
push
out
inc
out
out
mov
stos
ret
jl
jne
loope
jp
scas
clc
push
mov
stc
inc
and
mov
xor
pop
inc
and
sarl
inc
jmp
rcl
or
or
and
push
or
stos
pop
mov
sti
dec
add
jg
das
sub
mov
fidivs
sbb
mov
fwait
or
xor
xor
sbb
stos
out
sub
sub
lock
sarb
repz
mov
and
mov
lea
adc
loop
fdivrs
adc
lock
pop
xchg
sub
sbb
lret
shll
cmp
nop
ja
inc
sub
push
popf
and
add
dec
scas
pop
inc
push
test
adcl
push
cmp
or
pop
lods
std
and
sbb
add
sbb
fbstp
es
push
call
xor
adc
xchg
sbb
mov
mov
xchg
ret
or
lock
pusha
dec
xchg
data16
test
jle
lods
add
mov
fcoml
and
add
repnz
mov
pushf
cmp
add
lds
aad
mov
stos
es
pop
sti
mov
jo
daa
sbb
sbb
adc
push
fists
aam
addl
or
cli
and
sbb
sub
jnp
add
orl
cmp
ds
push
mov
bound
add
push
cmp
syscall
mov
lods
sub
jle
or
cmpsl
and
outsl
lret
mov
movsb
iret
inc
pop
pop
leave
fs
mov
mov
cmc
push
and
outsb
loopne
mov
lods
cli
pusha
mov
mov
loopne
push
shll
in
jl
int
mov
fcmovb
sbb
jle
push
pusha
mov
mov
sbb
aam
push
movsl
or
mov
mov
test
lods
dec
stc
mov
mov
cmc
inc
cltd
pop
xchg
mov
repnz
lds
sahf
out
cmp
cmp
pop
adc
mov
xchg
movsl
add
fs
pushf
jnp
mov
xor
or
xchg
pop
mov
cwtl
dec
jnp
rol
lret
mov
add
daa
in
push
or
popf
push
fiadds
pop
out
les
rcll
sub
mov
hlt
sub
adcb
loopne
fucomp
test
mov
std
add
mov
cmp
imul
mov
aam
inc
add
arpl
pop
adc
pop
dec
std
ljmp
add
stos
xor
mov
xor
gs
test
inc
loope
sbb
icebp
bound
ss
push
add
aaa
add
aas
iret
sahf
sub
outsl
and
mov
mov
add
lods
mov
clc
sub
lods
adc
shrb
cmp
call
test
int
out
and
xchg
sub
sahf
sub
flds
cmc
mov
push
or
popf
and
and
inc
test
fcoms
shrl
sbb
adc
repz
mov
sub
jg
add
xchg
push
xor
movsl
arpl
xor
loop
repz
rorb
adc
adc
mov
and
push
add
add
push
sar
and
insl
jmp
push
gs
fistps
xchg
fucom
and
arpl
inc
rcr
or
aam
jecxz
fs
rorb
jnp
fs
mov
jno
sub
movsb
int3
jb
cmp
sbb
les
arpl
in
add
in
sub
scas
pop
mov
mov
addr16
add
sub
imul
push
mov
xlat
fstl
mov
outsl
jl
dec
jl
popf
lahf
mov
fadds
out
mov
jae
jmp
adc
shrb
pushf
ss
stos
xor
and
aaa
jb
mov
push
es
insl
add
movsb
sub
enter
cltd
jb
push
aad
and
jge
cmp
add
mov
lock
cld
mov
xchg
pop
or
iret
lods
lret
test
ljmp
xchg
repnz
mov
xor
fcmovb
and
mov
cwtl
jecxz
sub
sbb
sbb
fidivrs
mov
loope
mov
jl
les
push
add
jmp
pop
in
sbb
or
shrb
inc
decb
outsl
xchg
sbb
sbb
mov
hlt
mov
mov
out
lahf
into
outsb
pop
adc
pop
inc
and
mov
jnp
outsb
js
test
in
mov
push
daa
jmp
popa
popf
lods
push
into
jecxz
sbb
xchg
xor
fwait
or
out
jge
lea
add
xor
pop
mov
inc
imul
dec
out
je
arpl
sar
repz
add
aas
test
inc
ret
shl
dec
xchg
fstl
dec
bnd
adc
mov
cmp
and
mov
nop
jmp
loop
leave
add
out
fldt
add
and
es
iret
push
dec
dec
arpl
xchg
inc
repnz
mov
mov
sub
fsubp
das
adc
jmp
xchg
out
sbb
js
or
shll
mov
push
cld
movsl
push
pusha
bound
xchg
ret
push
cmp
jp
incl
add
lret
sbb
cmp
dec
and
pop
add
aas
xor
pop
daa
std
into
popa
push
xchg
adc
jns
call
mov
jbe
jbe
jnp
mulb
mov
shrb
adc
push
pusha
mov
loopne
jbe
in
jno
pop
movsb
lock
arpl
jb
inc
sbb
lods
and
insb
pop
aam
das
or
mov
pusha
popa
popf
jae
lds
mov
add
pop
add
adc
test
fiaddl
insl
xor
xchg
cwtl
cmp
test
jne
ljmp
icebp
mov
aaa
mov
and
out
in
clc
rolb
cmpsl
fidivs
mov
push
add
jbe
les
add
or
pop
jns
xchg
push
inc
mov
cmp
sahf
mov
or
orb
pop
lds
and
adc
out
or
jne
insb
xchg
jg
cmpsb
mov
test
push
nop
fxch
pusha
imulb
cmc
cli
push
pop
push
push
test
sub
mov
xor
dec
adc
cld
and
dec
sbb
add
out
pop
adc
xor
insb
pop
dec
mov
adc
mov
inc
sbb
cltd
les
ret
ljmp
int3
mov
insb
inc
hlt
jnp
lds
fsubl
int3
orl
fmul
push
loopne
add
cmp
and
sbb
test
add
or
data16
ret
pop
movsb
cmp
push
sahf
repz
jae
sbb
dec
aas
call
cli
pop
push
cs
dec
jmp
adc
imul
gs
sub
mov
cmp
movsb
dec
add
mov
ret
and
test
popf
pop
sbb
jbe
add
hlt
insb
adc
mov
imul
in
xor
jne
aas
out
rol
push
push
push
cmp
jo
fiaddl
sbb
mov
push
sub
push
repz
mov
xchg
adc
adcl
cmc
rolb
cmp
pop
add
dec
or
popl
xor
sub
icebp
mov
dec
sbb
aas
movsb
cld
push
shrb
repz
imulb
js
addl
fists
dec
jo
aaa
ds
outsl
cmp
jnp
cmpsb
outsb
cmovg
mov
fnstenv
bound
pop
in
in
sbb
cli
in
stos
movsl
jno
and
adc
sbb
jno
ss
add
in
xchg
sbb
xor
inc
lock
and
xor
adcb
sub
add
std
jle
fmull
scas
jge
jb
adc
lcall
mov
out
xor
sub
mov
popl
cmpsl
and
add
xchg
or
shrl
xchg
out
cltd
cmpsl
cmp
jp
push
pop
arpl
sub
sub
inc
push
add
jge
pop
leave
push
jl
in
je
aad
mov
mov
fisubs
rorl
repnz
jnp
xlat
incb
push
aas
inc
pop
push
dec
outsl
loopne
inc
pop
outsl
adc
setg
push
mov
les
lods
push
das
pop
fsubrp
test
pusha
call
in
mov
xchg
sub
inc
xchg
dec
dec
mov
fdivrl
nop
test
imul
push
cmp
cltd
scas
imul
ja
pop
cmp
mov
jo
mov
sbb
push
xchg
daa
push
aas
lock
pop
and
jecxz
sbb
jns
or
jno
incl
sbb
cltd
cwtl
pop
nop
fsubs
orl
cltd
hlt
enter
loope
lret
dec
mov
and
sarb
inc
pop
adc
jge
cs
ss
inc
and
dec
push
mov
fwait
popa
in
outsb
roll
leave
xor
cmp
push
xchg
sub
out
xchg
pop
fisttpll
test
xlat
sub
sub
dec
out
inc
push
fcmovu
dec
xor
mov
pop
cmp
ret
sbb
aaa
dec
rorb
std
add
dec
loop
lcall
cmpsl
lret
ja
dec
pop
pop
out
sub
std
push
xchg
jmp
inc
mov
pop
fwait
movl
sub
fcoms
les
xchg
ficomps
mov
push
jnp
sbb
imul
mov
mov
mov
sbb
les
dec
fmull
mov
iret
mov
push
or
pop
lret
data16
cmp
enter
mov
xchg
lds
stos
scas
sahf
shll
sub
ds
push
test
mov
pop
decb
mov
ret
enter
sbb
sbb
lock
popf
jp
lcall
inc
lock
pushf
xchg
xor
mov
dec
into
xor
test
shll
push
ficomps
dec
fbstp
adc
adc
loope
jp
test
adc
push
mov
lods
adc
sti
loopne
pop
pushf
es
jmp
mov
mov
ret
in
andb
push
sbb
mov
adc
sub
rcll
cmp
mov
inc
mov
add
fwait
fistpl
test
daa
out
in
mov
jle
push
sbb
add
mov
adc
call
jno
sub
inc
sub
pop
mov
xor
cmp
inc
stos
pop
mov
popa
inc
test
mov
or
aam
push
add
hlt
rcr
pop
pop
stc
iret
sub
sbbl
rcr
add
cmc
mov
paddsb
push
pop
add
pusha
cmpsb
movsb
ljmp
dec
imul
and
sbb
or
add
sub
fstpl
jns
stos
iret
test
mov
cmpsl
int
lods
into
fldl2e
scas
movsb
jg
das
push
xchg
insl
xchg
jns
invd
xchg
pop
outsl
in
xor
imul
push
jno
jmp
lahf
sub
push
pusha
jne
add
inc
aas
jno
addb
insb
test
jbe
push
ret
xchg
fnstcw
mulb
stc
xchg
adc
sbb
out
inc
inc
and
test
scas
dec
push
jmp
cli
out
ret
daa
lock
jg
cli
aad
mov
add
ds
adc
or
in
cmpsl
popa
pop
mov
or
stos
mov
sti
fstps
xorl
icebp
push
mov
mov
xchg
push
rcl
pop
mov
stc
sbb
hlt
jne
adc
out
sub
leave
push
shl
repz
cmp
xor
movsl
push
mov
or
ret
mov
dec
dec
mov
scas
push
jp
inc
outsb
push
or
inc
fptan
jbe
xchg
push
and
mov
jns
and
inc
std
test
in
sarl
fwait
push
pop
test
arpl
or
add
pop
mov
js
pop
mov
pop
out
movsl
fistpll
pop
fldenv
pop
mov
mov
xchg
cmp
sub
adcl
xor
js
popa
push
adc
loope
pop
adc
out
cltd
and
pop
pop
stos
mov
stc
sub
mov
adc
jp
lods
sbb
inc
sbb
inc
xor
pop
jo
stos
arpl
insl
xlat
nop
jns
pop
mov
add
lods
add
cmpsb
sar
leave
ss
pop
mov
int3
mov
ja
aad
aaa
push
jecxz
push
sti
fists
ret
nop
aad
pextrw
lods
xchg
stc
js
int
and
xchg
in
bound
std
add
sarl
xchg
inc
jbe
pop
in
mov
clc
outsb
sti
popl
lock
sub
ljmp
into
xchg
jno
pop
mov
push
sti
cs
fmul
cwtl
mov
cwtl
cmpsl
scas
push
lods
and
lahf
hlt
push
dec
rolb
les
outsb
mov
mov
hlt
jns
in
push
sbb
fmul
pop
mov
mov
push
sub
fsubrp
pop
pop
clc
inc
jae
pop
sub
mov
lea
jnp
and
out
mov
jno
stc
in
int
fs
cmc
test
fidivrs
cmp
push
adc
xchg
pop
ds
and
arpl
xor
pop
and
fists
and
int3
es
hlt
call
sub
fnstsw
test
sahf
mov
insl
cmp
mov
push
pop
adc
andb
inc
cmp
movsb
pop
lea
fsubrs
xchg
mov
ds
push
dec
lock
out
mov
std
cmc
lods
pop
pusha
mov
inc
aaa
or
inc
and
xchg
push
nop
in
or
shlb
popf
out
mov
test
sub
sub
shll
aam
adcb
rorl
fdivs
mov
sbb
lods
insl
cmp
shlb
fst
mov
repnz
dec
jbe
lea
push
sub
int3
test
popa
cmpsb
rcll
cmp
pushf
dec
cltd
in
mov
pushf
cmp
adc
mov
sbb
scas
loop
inc
lret
sahf
scas
cltd
mov
mov
sub
movsl
jg
lods
icebp
pop
add
outsb
int3
div
ficoml
or
cmpsb
jg
jle
sub
loopne
insl
xchg
fstpl
mov
or
sbb
mulb
xor
and
push
paddusb
push
stos
adc
xor
push
cli
pop
call
and
pop
test
xorl
xor
stos
pop
jl
je
lcall
ds
and
xor
stos
or
and
insl
movsl
sbb
mov
pop
aam
outsl
cmp
add
call
mov
inc
jecxz
and
pop
add
add
mov
inc
mulb
aas
and
adc
fadds
add
enter
mov
cld
enter
cwtl
and
shlb
mov
or
aas
push
outsb
call
add
cmp
clc
sub
lahf
or
push
jl
int3
pop
mov
cltd
roll
fs
push
cmp
out
inc
sbb
or
sub
sbb
xchg
push
idivl
push
out
lret
sub
popf
call
push
fcmovbe
xor
sahf
or
sbb
mov
mov
adc
cmp
jne
add
adc
fldcw
xlat
or
add
jg
inc
add
push
cmp
adc
xchg
xlat
mov
aas
sti
sahf
add
pop
sbb
cmpsb
cltd
repnz
in
mov
mov
loopne
rcr
dec
push
pop
jo
push
arpl
pop
xchg
lock
jne
je
jo
adc
rcl
outsl
add
loope
loopne
add
out
add
push
rorb
outsl
or
pop
pop
sti
loopne
dec
insl
pop
aad
mov
sbb
mov
or
iret
les
outsb
xchg
push
decb
and
js
and
xor
movsb
aaa
rol
in
pushf
ja
test
xchg
add
xchg
outsl
ret
sbb
pop
in
add
fmull
and
sub
fsubl
jecxz
dec
dec
add
jae
add
or
jl
xchg
pop
jl
cmp
push
mov
lds
adc
jb
xchg
adc
orb
sub
adc
push
out
xchg
mov
xchg
sbb
loope
jne,pn
insl
int
rorl
cmpsl
xchg
and
cmp
push
pop
cmpsl
dec
bound
mov
fdivl
cwtl
movsb
pop
mov
mov
or
ret
xor
or
leave
lcall
je
ret
and
mov
xor
repz
push
loopne
ja,pt
cld
jo
cmp
dec
xor
idivl
in
shlb
dec
cmp
ss
in
push
push
roll
adc
ret
mov
insl
cmpsb
pop
jp
popf
cmpl
aaa
dec
dec
pop
cmpb
ja
jl
cli
xor
push
js
scas
mov
cmp
xlat
add
xchg
pop
jge
out
out
mov
add
fwait
sub
mov
cs
repz
into
cltd
or
xchg
jp
mov
out
mov
mull
adc
inc
xchg
arpl
stos
sbb
aas
bound
or
mov
into
push
int
out
int3
insb
mov
add
aaa
ljmp
cmpsl
into
stos
xor
outsl
subl
pop
ss
addr16
sub
outsb
mov
lahf
mov
push
cwtl
mov
push
adc
lcall
jg
ds
cmpsb
cmp
pusha
fdivs
pusha
pop
xor
std
lods
and
ss
insb
push
rcrl
dec
shll
cmpsb
dec
shll
dec
lds
stos
sub
iret
repnz
aam
test
cld
icebp
pop
repz
push
imul
mov
sti
test
push
in
cmp
or
mov
dec
fnstenv
addb
jge
cmp
pop
cmpsl
fsubrs
in
addr16
xchg
cmc
dec
out
pop
inc
add
cwtl
popa
cmp
int3
pop
jecxz
mov
jns
lcall
scas
lods
or
sbb
jne
mov
and
jne
push
jb
inc
pop
fwait
test
test
std
lea
xchg
jno
sub
aad
rcrl
mov
xchg
or
aam
mov
ljmp
test
pop
dec
gs
test
dec
jmp
lcall
fwait
lds
hlt
scas
fnsave
sbb
imul
lock
jp
lahf
pop
mov
adc
pcmpeqw
push
imul
cli
out
pop
fstl
inc
jno
sub
push
jo
sbbb
sarl
aas
gs
movsl
int
lods
or
test
lods
xchg
jg
add
add
xor
pushf
or
or
dec
out
mov
mov
mov
in
jb
push
dec
add
dec
jge
jmp
sahf
jo
lcall
rcrl
into
popa
imul
xchg
xor
iret
test
mov
adc
jl
mov
xorl
lds
pop
dec
iret
mov
test
jae
xorl
mov
das
mov
test
pushf
add
popf
lods
xor
das
mov
jo
inc
and
andl
lods
add
lock
and
mov
ja
add
mov
and
pop
inc
repnz
in
shl
cs
rolb
dec
push
xor
xchg
popa
jmp
or
mov
aas
adc
ret
jg
mov
lds
inc
insl
repz
hlt
dec
aad
cmp
cmp
loopne
cmp
pop
fimuls
inc
jb
fs
dec
sub
or
out
push
pop
or
inc
aam
fcmovne
stos
out
jge
xor
stos
nop
cld
shll
jne
aas
add
cmp
repnz
loope,pt
pop
popa
mov
jno
push
push
mov
mov
mov
addb
mov
stc
cmp
cwtl
lea
push
cmpsb
pop
notb
mov
repz
stc
and
call
stc
out
and
sbb
pop
leave
scas
mov
xchg
cwtl
mov
pop
cmpsw
sub
jne
pop
scas
fs
cwtl
mov
pop
and
cmp
mov
pop
push
add
gs
pop
and
mov
and
data16
sbbl
mov
jp
inc
cmp
jp
jno
push
xor
inc
inc
mov
xchg
add
mov
cltd
pop
pop
xlat
pop
and
ja
cmpsb
jecxz
pop
xchg
pop
xor
das
mov
fwait
outsl
jae
mov
jle
jo
out
out
sub
int
add
push
cltd
or
inc
sbb
xchg
mov
sub
pop
in
xor
mov
js
aam
fldcw
mov
out
jp
test
and
jno
push
mov
pop
stc
jle
cmp
je
mov
adc
mov
adc
add
push
jmp
aaa
scas
jo
sub
xchg
dec
shrb
sub
inc
cltd
jne
stos
push
movsl
sub
mov
scas
sbb
sub
sahf
hlt
addl
pop
aaa
cmp
adc
inc
loopne
flds
push
nop
aam
or
xchg
mov
sub
mov
or
and
inc
jno
push
test
inc
jno
test
jecxz
pop
push
add
push
jnp
and
lret
rolb
push
and
loopne
mov
sbb
jne
pop
xor
and
cmpsl
mov
stc
or
mov
xchg
inc
out
and
lods
sbb
xchg
jnp
or
xor
mov
xchg
sub
xor
into
cld
xlat
fidivl
push
lahf
decl
cmp
or
mov
out
pop
call
mov
mov
and
mov
mov
jmp
sarb
and
jae
das
lods
cwtl
sahf
xchg
inc
push
push
jnp
pop
add
pop
mov
dec
leave
push
test
js
jb
clc
mov
stos
pusha
xor
out
mov
push
add
add
ljmp
fwait
scas
call
mov
fcoms
cli
cmc
or
dec
mov
lahf
imul
ja
sub
mov
in
mov
fsubs
mov
jno
dec
lret
orb
push
push
xchg
or
das
and
mov
pop
jmp
icebp
scas
popf
cmpsb
fdivrp
dec
mov
es
std
gs
test
xchg
popa
jne
cmc
out
scas
inc
sbb
fisubl
mov
aam
test
leave
xchg
in
or
mov
ja
xlat
pop
push
xor
shr
mov
imul
mov
or
xlat
lret
sub
repnz
sbb
add
push
add
add
mov
imul
sub
sbb
popa
push
cmp
dec
dec
rclb
fucomi
push
mov
imul
fsubl
sub
inc
pop
xor
je
jecxz
push
movsb
sub
xchg
imul
inc
out
sub
or
xchg
imul
cmp
adc
cmp
push
jecxz
mov
shr
xchg
cmp
arpl
adc
cmp
test
fisttpl
lret
adc
push
inc
dec
push
mov
pop
in
pop
xchg
jo
test
adc
xchg
test
mov
lods
iret
iret
xor
getsec
xchg
jae
int
fdivl
cmp
adc
ljmp
adc
adc
mov
push
aam
jmp
mov
jae
add
fwait
xor
and
mov
jns
sub
mov
enter
mov
fldl
nop
xor
int3
dec
pusha
sub
push
xchg
xor
ret
jb
repnz
nop
mov
or
fiaddl
jg
fisttps
sub
stos
dec
and
mov
out
cwtl
mov
jb
clc
std
mov
arpl
mov
xchg
shlb
rcrl
aaa
pop
ljmp
sbb
push
jno
test
je
int3
xor
xchg
xor
aad
inc
xor
js
fnsave
mov
adc
push
pushf
adc
out
xlat
and
and
jle
xlat
stos
mulb
inc
out
lock
icebp
hlt
dec
fwait
das
push
mov
into
call
jl
add
sub
cmp
push
xor
fimuls
aam
stos
xor
push
adc
dec
fs
shr
test
repz
shlb
in
dec
aam
inc
addb
and
das
lret
adc
mov
in
movsb
shl
mov
insl
inc
xchg
xchg
mov
fsubrl
aad
add
stos
mov
jg
rcll
jp
and
xor
rorl
shr
cltd
mov
xchg
xor
out
jle
cmp
in
mov
std
out
mov
cs
sar
dec
add
xor
clc
scas
cmp
inc
jne
std
insl
push
push
adc
ret
out
cmpsl
jno
xor
adc
insb
adc
cltd
shll
jne
insl
fcmovnb
cmp
pop
xchg
scas
shll
push
push
int
push
dec
adc
push
cwtl
lcall
call
lret
cmc
add
jo
mov
ds
and
call
lret
mov
inc
sbb
into
fisttps
mov
fldenv
jo
incl
xchg
repz
enter
add
je
or
test
sub
imul
pop
out
mov
xchg
mov
ljmp
and
add
xchg
inc
and
shl
sub
adc
lret
fistpll
rcrl
mov
arpl
insl
mov
loop
pop
xor
in
sbb
ficompl
pushf
mov
mov
mov
stos
pop
negb
xchg
xor
dec
add
cmp
xor
sbb
mov
jmp
cli
pop
mull
sub
xchg
inc
dec
in
xor
lret
dec
movsl
fidivrl
sarb
test
ja
sub
or
insl
jne
cmpsb
sbb
fnstenv
sahf
mov
and
or
repnz
test
cmovno
popa
and
mov
jnp
aad
push
jbe
xor
push
hlt
pop
stos
movsb
out
pop
dec
add
fildll
test
or
jge
cmp
xor
push
push
cwtl
push
sub
cmp
arpl
in
pop
cmp
in
imul
dec
adc
int
adc
js
cmc
shrb
mov
xor
add
in
rorb
insb
mov
mov
cmp
xchg
push
dec
xlat
pop
pop
jo
lret
xchg
call
sub
pop
dec
adc
scas
inc
loopne
jb
sbb
sub
sbb
cmc
pop
lcall
or
and
jmp
sub
sti
pop
xchg
and
popa
cmpsb
dec
mov
xor
cmp
or
push
push
sbb
adc
je
loop
fldl
push
adc
or
imul
popf
enter
ret
loope,pt
int3
icebp
sbb
mov
add
pushf
fbld
data16
lock
mov
jmp
vcvtss2sd
addr16
mov
aad
fbld
fstps
dec
out
out
or
dec
mov
inc
pop
cmp
je
sbb
mov
sbb
dec
nop
push
sub
pusha
sbb
sahf
insl
or
fmull
mov
bound
les
popa
repz
push
inc
jnp
movsb
mov
xchg
scas
ficomps
jg
xchg
xor
and
ret
shl
dec
mov
mov
popf
lret
sbb
mov
mov
into
or
mov
lock
mov
iret
sahf
aam
jo
push
and
cli
add
lds
iret
mov
cs
lods
aaa
icebp
arpl
jb
cmp
add
xchg
xor
out
pop
push
loopne
push
push
mov
pop
mov
lods
fldcw
ret
jb
lods
idivb
bound
test
mov
sbb
gs
es
mov
enter
fcoml
and
cli
aad
pmaxub
jns
and
cmpl
test
push
mov
mov
dec
mov
stc
out
mov
fiaddl
xchg
pop
aaa
outsl
cmp
je
les
in
addr16
push
repnz
cmp
and
push
fwait
shrl
ret
ds
cmp
mov
repz
jo
sbb
xor
aad
add
cmp
pop
jmp
inc
bound
fwait
jnp
mov
leave
push
mov
stc
imul
adc
imul
out
enter
push
mov
mov
fidivl
or
push
mov
push
sub
test
mov
ss
jbe
icebp
lea
dec
inc
sub
push
icebp
leave
push
xchg
sub
push
test
out
cs
jbe
sti
xchg
mov
xchg
loop
test
mov
mov
xchg
mov
fisttpll
cmpsb
jb
stos
loope
testb
fsubr
out
aad
setp
jmp
cli
aad
mov
sbb
add
push
push
lock
movsb
add
stos
lds
out
inc
mov
or
ret
jae
dec
jl
mov
xor
fdivl
jl
inc
sbbl
imul
adcb
mov
movsl
nop
ficoms
insl
xchg
clc
icebp
sbb
sub
adc
lret
or
sub
jp
in
xor
ret
andb
jne
sub
in
outsl
ret
pop
inc
add
rcl
int3
push
push
mov
dec
xchg
dec
repnz
cld
pop
iret
sub
or
scas
mov
jp
push
sub
mov
aas
pop
cli
in
and
or
loope
cmp
push
inc
scas
mov
das
test
adc
data16
xchg
movsl
addl
orb
mov
inc
lahf
sarb
cltd
push
pop
dec
xchg
fidivrl
xchg
sbbl
jp
cltd
hlt
adc
cmp
pop
pminub
jne
sub
int
es
adc
sub
out
cmp
and
lcall
adc
push
sub
shlb
test
in
push
std
jae
jge
mov
xchg
out
sahf
mov
xchg
push
mov
add
in
in
jmp
push
aam
pusha
in
cmp
sbb
ds
adc
or
jecxz
das
add
int3
leave
pop
push
xor
push
xor
shrl
loop
movsl
inc
stc
xor
mov
add
xchg
push
lock
adc
pop
jne
adc
push
or
push
je
jle
fmull
mov
sub
dec
sti
pop
push
hlt
jge
mov
imul
pop
ds
stos
das
shll
dec
aaa
jg
movsb
out
push
cmp
mov
fwait
icebp
insb
rolb
daa
pop
dec
pushf
jno
inc
dec
pop
in
mov
xchg
bound
pop
aam
outsb
and
lods
shl
insb
mov
in
enter
adc
movsl
inc
je
dec
movsl
cmp
pop
lret
shr
outsb
pop
adc
fcomps
xchg
out
stos
ljmp
mov
inc
fnstsw
jns
in
lods
inc
mov
and
xor
test
je
std
into
outsb
cmc
and
lret
cmpsl
popf
call
ret
pop
cmp
dec
and
scas
aas
or
push
stc
ljmp
orb
adc
jns
insb
push
imul
repnz
insb
xorl
fsubl
mov
imul
cwtl
sub
dec
adc
sahf
shl
sahf
int3
mov
lcall
std
cs
pusha
and
mov
add
add
repz
hlt
lock
loopne
mov
call
daa
fldl
popa
aam
mov
cs
xchg
stos
fmul
sub
pop
rclb
sbb
xchg
sub
inc
inc
scas
subb
or
xor
sbb
and
std
xchg
ss
or
popf
das
dec
cmc
lds
int3
cli
in
sub
xchg
lea
aas
ljmp
gs
adc
out
mov
jns
scas
jo,pt
imul
movsl
imul
pop
rolb
ret
mov
lret
and
mov
or
mov
shll
jnp
cld
outsb
insb
add
jl
add
les
in
int3
add
sahf
xchg
mov
pop
ret
inc
in
negl
push
push
push
sbb
test
pusha
pop
cmpsb
mov
mov
pop
adc
sub
sbb
ja
andb
mov
push
daa
or
mov
stos
dec
lods
leave
push
dec
mov
adc
ret
push
inc
sub
jp
mov
test
test
xchg
and
lahf
push
ficoml
cmp
into
ljmp
mov
mov
and
sbb
or
xchg
pop
mov
inc
mov
pushf
aad
mov
xchg
int3
or
dec
mov
inc
cld
mov
push
je
mov
dec
ja
jbe
mov
push
push
xor
mov
in
in
jmp
loop
sbb
sbb
ret
adc
cmp
push
dec
ret
sbb
inc
xchg
imul
xchg
inc
add
push
outsb
mov
int3
or
and
pop
mov
dec
andl
sbb
in
jmp
in
jg
sbb
mov
movsl
xor
sub
push
mov
aas
out
dec
ja
jno
stc
imul
dec
and
adc
iret
mov
xorb
fstpt
in
sub
lret
rorl
pop
add
lock
das
cmp
movsl
xchg
cmp
mov
cmc
scas
dec
orl
gs
pop
je
or
into
and
movsb
cmc
pop
out
stos
and
pop
pop
jbe
xor
push
cltd
ret
in
ljmp
xor
mov
test
mov
out
test
ror
movsl
in
sbb
push
mov
fisttpl
aaa
movsl
stos
scas
lea
cmp
into
sub
adc
loope
sub
mov
fisttpl
pop
jl
lret
outsl
and
sti
testb
xorb
cmp
mov
xchg
shl
movsl
add
mov
aad
push
aad
repz
inc
or
inc
cli
int3
fidivrs
adc
adc
popf
mov
jbe
movsb
cmp
andb
mov
fs
inc
fdivs
sbb
shl
inc
leave
popf
and
insl
and
dec
mov
pop
adc
ja
int3
leave
sbb
leave
idivb
icebp
gs
in
aas
decl
out
or
jle
test
fs
pop
add
jno
push
fstpt
lock
inc
enter
lods
pop
jp
fcomps
xor
mov
jb
aam
inc
xchg
mov
imul
sub
mov
sbb
adc
ret
popf
outsb
arpl
std
mov
jae
loop
sti
jmp
js
push
adc
jge
sahf
jg
pop
shrl
adc
icebp
test
sub
dec
jo
mov
vmread
imul
mov
shr
scas
adc
jbe
push
xchg
ss
and
inc
cmpsl
daa
int
sbbl
add
mov
std
dec
add
call
push
mov
sub
mov
jmp
dec
lret
daa
insl
mov
sub
cmpsb
jmp
pop
or
scas
scas
andl
pop
ljmp
outsl
scas
xchg
xchg
jno
std
cmpsb
test
mov
cmpsl
or
pop
gs
cmpsl
push
nop
sub
jecxz
mov
out
hlt
mov
andb
sbb
cli
aam
cmp
mov
test
jno
push
les
insl
or
popf
mov
fwait
xchg
out
les
adc
adc
shl
or
xlat
data16
loopne
dec
out
adc
and
imul
mov
mov
enter
loop
and
bound
xor
sub
mov
push
mov
pop
xchg
or
mov
push
mov
cmp
xor
lret
test
add
xchg
mov
lock
fnstsw
mov
daa
mull
adc
je
insb
aaa
movsb
in
and
cltd
xchg
jo
and
shl
mov
push
pop
stc
hlt
or
sub
inc
in
pop
dec
movsl
stc
in
fstps
push
add
and
mov
adc
sbb
in
xorb
mov
cmpsl
ret
mov
sbb
sti
cmp
cmp
xchg
cmp
sbb
es
gs
sahf
adc
mov
lret
inc
jns
shrb
jecxz
pushf
xchg
pop
inc
jns
int
mov
sbb
fcmovnbe
and
movsl
lea
pop
stc
icebp
cmp
push
inc
dec
push
inc
sbb
push
decl
int
xor
repnz
or
pop
mov
hlt
adc
out
popf
push
jbe
out
jle
cmp
cli
in
mov
inc
sbb
cld
jns
ljmp
push
xabort
call
sahf
or
movsl
out
mov
in
sbb
inc
pop
enter
out
lock
add
dec
in
cmp
repnz
cmpsb
push
and
rcll
dec
add
jl
cmp
imul
sub
mov
sahf
push
cmp
xor
cmpb
push
dec
pop
ret
fisubrs
dec
or
sbbl
rcrl
lahf
pop
xor
dec
call
pop
movsl
in
out
in
jge
mov
ret
bound
and
lea
fcmovnbe
test
jb
inc
js
cmpb
pop
pop
cli
jecxz
pusha
sarb
or
cmp
xor
jne
cmpsl
aas
inc
add
and
in
sub
subl
jmp
adc
mov
sbb
xor
test
mov
xor
xor
lds
push
adc
mov
in
cmp
inc
inc
in
push
xchg
sub
jp
leave
adc
adc
jo
test
test
pop
popf
push
mov
sbb
lods
xor
roll
insl
sarb
dec
jg
ret
test
adc
mov
xor
pop
wrmsr
test
stos
jne
xor
test
cmp
cmp
jo
mov
rolb
mov
fadd
cli
sti
cld
xor
mov
push
push
xor
push
or
int3
dec
mov
cmp
cmp
cmpsl
insb
daa
icebp
add
mov
mov
sahf
inc
in
or
in
aas
addr16
int
insb
cmp
icebp
insb
fwait
pushf
cld
fisttpll
jbe
call
lret
pop
lock
mov
stos
mov
adc
inc
mov
mov
dec
cld
mov
fnstsw
or
fucomp
mov
add
pop
aam
cld
scas
xchg
ljmp
xchg
mov
ja
in
adc
dec
dec
repnz
fldl
or
mov
mov
sti
loop
movsb
out
idivl
mov
arpl
ss
es
test
daa
lds
lret
into
dec
ljmp
xchg
dec
mov
jne
in
and
cmp
sbb
inc
leave
push
dec
out
and
shl
and
xchg
shl
lret
mov
sub
mov
test
mov
imul
inc
xor
lret
jb
mov
mov
inc
out
xchg
aas
xchg
movsb
pushf
push
jnp
add
push
adc
mov
cmp
and
mov
data16
push
in
push
in
adc
lahf
sub
xor
xor
push
cld
pop
xchg
dec
outsb
lcall
sbb
shl
call
jmp
cmp
jno
dec
sub
loopne
push
xor
mov
ret
xor
iret
jb
popa
orl
imul
mov
fistl
push
push
inc
mov
or
add
pop
shll
jno
sti
shlb
fldl
xor
in
sahf
push
and
jbe
xchg
jae
dec
jg
repnz
pop
sub
mov
and
mov
adc
gs
mov
cltd
jb
cmpsb
sub
iret
mov
add
xor
mov
fistl
lock
test
notl
leave
and
or
iret
fimuls
or
jg
aad
adc
js,pt
pop
jmp
cld
and
rcr
roll
mov
push
adc
fcom
jns
dec
je
imull
ficoml
dec
stos
jp
add
jmp
into
or
and
mov
cmp
in
lcall
ffree
mov
int
mov
mov
xchg
cmp
or
ja
mov
sti
hlt
sbb
pop
add
inc
sar
push
mov
jl
inc
rorb
push
aaa
xchg
sahf
movsb
sbb
data16
mov
push
pop
daa
or
stc
and
ds
push
xchg
pop
nop
imul
and
lods
xor
push
leave
cs
adc
ljmp
sti
std
not
fstl
dec
mov
xor
mov
mov
mov
ret
mov
cwtl
fldt
push
add
jno
aam
cmp
pusha
ds
lock
jg
ret
pushf
jmp
sub
sub
rcrb
cli
fsubl
sbb
adc
push
and
ret
and
nop
mov
nop
sub
int
dec
addr16
leave
add
fwait
lock
shrl
cltd
jle
ja
add
adc
arpl
mov
cmc
mov
arpl
jecxz
xchg
and
lea
xor
dec
clc
aad
jg
out
cmp
sub
jnp
lods
imul
xlat
repnz
and
jb
mov
and
rcrb
lcall
push
rorl
divl
adc
pop
out
and
mov
jmp
outsb
ret
mov
push
or
mov
fistl
cmp
jo
jge
das
mov
popf
in
push
cmp
mov
shll
and
push
dec
add
sub
or
fstps
mov
lock
mov
dec
icebp
into
out
adc
push
and
mov
inc
rclb
add
jle
sbb
fwait
add
jno,pn
and
insb
pop
sub
push
hlt
lahf
jge
inc
aam
inc
scas
add
out
ret
xchg
out
lock
in
xchg
mov
mov
loop
fisubl
jno
call
add
adc
lea
xchg
outsl
nop
fidivrs
cmp
mov
mov
jae
mov
pop
mov
inc
ja
rclb
pop
fucom
push
inc
push
cli
jae
and
mov
mov
push
cmp
insb
sbb
cs
lock
jno
mov
or
insb
dec
mov
scas
stos
mov
mov
setnp
std
fstps
jg
cmp
sub
lret
hlt
popf
imul
lds
push
es
aam
mov
and
or
cli
out
repz
out
and
cld
aad
ljmp
sub
cmc
adc
sub
mov
xchg
mov
pop
int3
mov
stos
push
popf
outsl
and
call
fld
push
push
lea
lret
mov
mov
call
into
dec
repnz
and
in
jecxz
movnti
js
fwait
push
or
inc
mov
ss
cli
shll
loop
push
xchg
xor
add
mov
xor
ds
push
addb
adc
imul
test
dec
push
add
insb
cmp
dec
loope
loope
push
mov
pop
inc
jmp
mov
repnz
inc
inc
ss
lahf
divb
ja
mov
std
mov
and
dec
mov
lock
in
mov
daa
dec
int
adc
sbb
call
mov
inc
dec
sub
stos
push
repnz
cltd
cs
cmp
js
push
jne
push
aam
mov
imul
nop
movsb
cwtl
sbb
or
dec
fwait
add
xchg
lods
adc
sbb
movsb
adc
je
arpl
into
jp
dec
push
pop
mov
mov
push
jns
mov
mov
popf
sarl
or
xchg
xor
aaa
in
lock
pushf
fsubr
lret
je
mov
fwait
pop
jp
mov
cltd
xchg
pop
xor
ret
adc
and
cmpsl
int3
or
push
movsl
out
xchg
adc
mov
jg
mov
test
cmp
push
push
out
xor
xchg
pop
addr16
outsb
popa
push
aas
mov
lea
mov
icebp
ljmp
xor
out
jecxz
out
pop
fwait
mov
mov
iret
clc
lret
cs
xor
push
out
fstpt
xor
insl
rclb
cli
imul
mov
add
lods
push
shrl
push
jbe
xlat
stos
adc
cmp
xor
mov
ds
mov
push
gs
outsb
sbbb
inc
mulb
xor
push
aaa
cwtl
mov
data16
adc
bound
add
inc
jo
fs
imul
hlt
jg
clc
decb
push
mov
loopne
mov
jp
push
outsb
mov
or
in
and
sub
add
scas
sarl
aaa
push
jnp
cmp
mov
cmc
mov
mov
pop
sub
repnz
stc
ffreep
and
cmp
fcoml
icebp
push
sub
inc
lock
int3
pop
and
mov
mov
stos
data16
sub
leave
adc
and
inc
pop
xchg
jp
push
dec
dec
loopne
das
mov
push
sbbb
or
ffree
push
sbb
movsl
pop
stc
mov
jmp
loopne
sub
les
xor
dec
xchg
in
dec
mov
adc
inc
nop
pop
xor
xchg
adc
adc
ja
pop
push
inc
adc
aam
aad
lock
and
sarb
pop
lea
add
pop
xchg
dec
arpl
in
out
pushf
push
push
sub
in
mov
scas
jae
in
mov
popa
dec
xor
mov
push
sti
les
lret
inc
jne
loopne
xor
pop
jge
enter
or
scas
sub
pop
dec
mul
es
and
in
test
rorb
outsb
lock
call
inc
push
cmp
addl
arpl
pop
insl
cmp
jge
mov
loopne
jno
push
clc
mov
sub
pop
call
pop
push
push
in
mov
ret
rcl
xchg
js
add
es
out
call
jecxz
push
cmc
xlat
sbb
sbb
or
mov
in
les
xchg
sbb
in
rolb
jae
mov
xlat
cld
js
cmpl
jae
pusha
fwait
inc
aas
fmuls
lods
dec
int3
pop
stos
out
lret
cmp
pop
std
into
icebp
shr
adc
fisttpll
in
add
insb
jg
or
aad
pop
cld
out
xor
inc
inc
pop
xchg
es
aaa
mov
or
cmp
sbb
xor
imul
notl
repnz
mov
sbb
sub
shll
sarl
push
les
icebp
and
dec
scas
aas
aas
fisttps
inc
inc
ret
mov
inc
ret
sub
inc
jb
inc
jae
fistps
add
pop
pushf
jg
dec
ja
dec
call
fmull
dec
push
sahf
xacquire
mov
pop
jmp
inc
out
test
shll
pop
leave
xchg
dec
sbb
xchg
repnz
repnz
and
sub
xlat
fwait
cmp
sbb
cmpsb
push
add
push
popa
push
popa
sbb
aas
inc
loope
mov
sub
es
cmpsb
jmp
adc
adc
mov
std
pop
addr16
pop
sbb
loope
cmpsb
fsub
ret
jns
inc
rolb
xchg
mov
cmp
insl
js
mov
or
dec
clc
sbbb
das
xchg
stos
loop
xor
fidivrs
mov
dec
test
out
jle
repnz
scas
jnp
pop
stos
fsubs
sub
pusha
dec
rcrb
std
and
push
mov
push
fsubs
jns
addr16
popf
mov
xchg
pop
pop
test
insl
mov
imul
dec
pop
fisubrs
push
es
add
fnstenv
ffree
xchg
xchg
and
mul
mov
push
inc
add
xchg
fisubrl
jmp
fidivrs
mov
rorl
jae
test
leave
push
add
inc
or
adc
push
loopne
mov
dec
aam
jge
bound
loop
adc
pop
add
loop
and
daa
fsubrs
inc
jmp
clc
lea
add
push
jmp
leave
jmp
stos
cmp
mov
movsb
jbe
les
cltd
popf
xchg
fldl
icebp
fmul
rolb
xor
pop
test
outsb
insb
lret
cwtl
daa
imul
call
inc
cli
imul
mov
xor
std
and
jbe
mov
mov
pop
sti
mov
jbe
in
pop
es
jb
movsb
ljmp
push
pop
ret
or
add
jo
scas
icebp
sbb
lods
jnp
pusha
or
mov
push
data16
mov
out
cmp
fnsave
mov
sub
lret
jnp
xor
sbb
add
xor
mov
mov
and
rcrb
push
add
mov
cs
sahf
or
mulb
iret
jecxz
movsl
das
mov
push
lock
sbb
fldcw
xorl
adc
or
jne
mov
sbb
mov
rol
add
daa
or
and
pop
out
push
pop
dec
ss
and
cmp
mov
xor
sub
pop
nop
dec
pop
pop
out
in
jp
lahf
hlt
mov
push
push
mov
mov
cmpsl
scas
pop
jl
cmc
mov
pop
aam
lods
addr16
adc
and
je
ds
xchg
int
dec
dec
addr16
jg
jp
lds
rclb
jp
cmp
mov
pop
cmpsb
in
cltd
cmp
pop
leave
in
mov
idivl
push
ljmp
fs
and
cmp
adc
sbb
icebp
scas
mov
inc
add
mov
out
shlb
xchg
or
cmp
push
xchg
inc
cmp
jl
dec
push
sahf
fdivrs
xlat
mov
and
push
xchg
stos
cld
and
out
mov
imul
dec
sbb
enter
js
bound
inc
cmpsb
adc
fwait
aad
cmp
aad
push
clc
or
or
jp
fwait
xchg
and
stos
adc
push
fwait
sahf
inc
cmc
mov
insl
lea
test
std
jecxz
arpl
xorb
ret
stos
inc
mov
in
dec
sbb
daa
push
and
aad
adc
sub
mov
push
fwait
mov
fldt
das
ljmp
negb
imul
aad
xchg
or
mov
xor
lret
dec
push
pushf
movsl
cmp
lahf
inc
adc
xchg
cmp
aas
das
repnz
outsl
sub
add
cmp
jmp
or
inc
das
xchg
or
loopne
jmp
mov
or
rolb
out
or
cwtl
add
jo
jo
and
push
and
dec
push
faddp
stc
lds
out
and
adc
fnstcw
lea
popa
mov
mov
pop
lds
mov
fcmovnbe
push
cmp
js
lock
push
pop
or
lret
aas
jns
sub
in
pop
sti
fucomp
push
icebp
sahf
and
inc
inc
cmp
jns
arpl
fwait
mov
in
out
int3
jmp
or
push
test
jne,pn
mov
dec
jb
jmp
sub
dec
in
decl
mov
dec
shrb
mov
jae
xchg
dec
sbb
sub
jge
or
fdivl
fdivrl
ficoml
addr16
fidivrs
inc
xchg
les
pop
std
dec
pop
pop
fs
in
outsb
add
insb
cmp
popl
inc
xor
out
pop
jbe
scas
aam
mov
inc
jg
jle
test
inc
scas
jmp
sbb
and
cwtl
sub
cmp
bound
mov
iret
push
lcall
shlb
subb
test
jecxz
mov
jmp
inc
sbb
test
jg
mov
test
dec
sbb
jbe
dec
add
cmpsl
js
inc
js
add
inc
insl
loopne
cmpsl
scas
int
add
std
inc
or
in
iret
into
iret
cmpsl
mov
or
inc
jmp
in
pusha
gs
mov
lcall
jne
inc
mov
shrl
cmp
in
lahf
fimull
lret
roll
cs
mov
out
aaa
loopne
jl
daa
dec
out
jne
aad
clc
fcomi
arpl
popf
enter
daa
jle
enter
add
ds
xor
pop
lret
int3
rcll
dec
in
mov
leave
nop
leave
mov
dec
pop
push
ja
test
int
in
jne
cwtl
pushf
mov
fstps
in
inc
and
jnp
cwtl
lret
push
pop
in
push
aas
clc
lretw
loopne
pop
jmp
cmp
push
xchg
jp
or
sub
clc
clc
popa
loope
xchg
cmp
es
add
mov
push
dec
data16
ljmp
cmp
push
jns
lcall
mov
pop
xor
in
hlt
cli
cmpb
cmpsb
stc
xchg
jns
push
sbb
call
add
xchg
pop
subb
or
inc
adc
sar
out
mov
out
adc
xchg
testb
repnz
movsl
xor
shr
test
and
inc
stc
adc
daa
jno
out
jnp
mov
mov
inc
mov
in
popf
lret
jno
stos
and
push
adc
mov
bound
adc
shr
pop
aas
sub
in
hlt
loop
mov
cmp
push
rcr
das
bound
inc
mov
xor
or
stos
jnp
fdivl
xchg
cmpsb
add
xchg
loopne
sbbb
mov
out
cmpsl
mov
lock
loope
ret
stc
imul
scas
ss
sbb
jnp
mov
mov
xchg
in
add
mov
popa
imulb
pop
and
test
sbb
inc
loopne
test
lock
fwait
shl
add
pop
in
jp
cmp
cld
aam
cmp
scas
cmp
aad
push
les
push
jg
cld
adcl
and
pop
inc
inc
jne
push
jns
test
and
mov
sub
mov
test
adc
jge
sub
inc
scas
jp
pop
mov
add
sarb
hlt
stc
in
fimuls
insb
lods
add
dec
cmp
inc
ja
sub
inc
lret
sub
rorl
xor
pop
push
inc
jo
mov
imul
iret
add
flds
clc
jl
mov
je
sbb
loopne
add
sbb
or
jmp
jae
jo
orb
push
test
lods
test
xchg
xchg
flds
leave
lcall
lock
imul
pop
std
js
jnp
dec
adc
movsb
inc
fsubrs
fiaddl
cltd
mov
mov
int
hlt
aaa
outsl
arpl
scas
int3
jne
data16
xor
mov
popa
push
mov
jle
repz
scas
xor
xchg
cwtl
in
jno
sub
shl
mov
add
das
iret
inc
sbb
cltd
sbb
cmpsb
dec
push
jmp
fcmove
xchg
cmp
inc
cwtl
lret
add
into
lcall
and
test
mov
lds
mov
jp
jl
mov
xor
loop
lcall
sti
adc
xor
and
pop
or
dec
sub
es
lea
mov
aas
mov
cwtl
lds
shll
lret
rcll
xchg
sbb
dec
and
pop
push
dec
nop
jle
and
out
ss
mov
xchg
dec
or
mov
mov
dec
jno
pop
fistpll
fnsave
xor
loopne
imull
mov
stc
popf
movsb
push
scas
push
test
pop
fiaddl
add
in
adc
lds
jl
xchg
clc
adc
sbb
cmp
jle
ret
pop
push
adcl
insl
shll
push
xorb
add
dec
adc
imul
aas
iret
jp
bound
out
adc
xor
sbb
mov
in
adc
jecxz
xchg
or
push
mov
xchg
popf
leave
aas
or
lcall
and
imul
ret
dec
inc
jo
adcl
add
dec
pop
shl
and
mov
lcall
dec
push
mov
int
stos
inc
out
into
adc
pop
push
popa
xchg
or
outsb
sub
cs
int
jl
repz
cmp
mov
ret
mov
mov
cmp
pop
dec
or
imul
imul
loop
cmp
jge
fs
inc
in
push
jg
test
mov
xor
mov
fs
lret
mov
jbe
dec
enter
sarl
dec
in
mov
out
push
xchg
sub
int3
dec
push
popf
sbb
std
ss
fcomp
sbb
adc
scas
sub
aad
push
dec
cmp
lods
out
xor
loope
out
aas
pop
faddl
ljmp
mov
stc
mov
ss
pop
fisttpll
neg
and
repz
mov
pop
cmpb
sub
lods
out
out
insb
xor
xor
push
imul
stos
cmp
cmc
pop
ss
cmp
addb
cmp
xorl
bound
lods
or
sub
sub
dec
lods
test
add
push
mov
and
dec
mov
imul
xchg
push
sbb
fisubs
mov
pop
xlat
movsl
mov
pop
call
jns,pt
mov
arpl
sbb
in
pop
addr16
push
inc
or
lock
into
mov
jmp
ret
add
shll
jns
jecxz
shrb
pop
dec
xchg
iret
dec
xor
test
xorl
add
jle
insl
decl
sub
adc
subl
pop
lcall
inc
idivb
dec
jb
repz
jp
test
dec
fs
in
jo
scas
mov
jb
jge
sub
stos
xor
inc
cmp
jmp
xchg
xlat
pop
lods
mov
jmp
andb
mov
xchg
jae
jae
fidivl
dec
mov
xorb
rcll
adc
jmp
jo
enter
jbe
jno
andb
fists
std
stos
and
bnd
ljmp
je
lcall
sbb
andl
and
push
mov
add
stos
movsb
dec
ret
xor
aas
push
adc
add
push
push
push
mov
inc
mov
mov
mov
add
sbb
ds
push
inc
out
gs
pop
push
scas
dec
jle
pushw
xchg
or
jp
jne
outsb
test
jbe
shl
in
xchg
xor
mov
adc
ds
sti
sub
out
mov
loop
mov
or
in
mov
mov
outsl
xchg
lea
jbe
dec
in
outsl
sbb
mov
push
adcb
lock
jbe,pn
xor
sbb
mov
imul
movsb
mov
mov
cmp
cltd
jb
sbb
lods
cmp
fldt
add
in
fwait
mov
test
dec
stos
xor
seta
stos
xor
movsl
fdiv
lahf
adc
sbb
pop
jbe
mov
mov
xor
jo
fstps
stc
std
aas
stos
cmp
pop
pop
jmp
lret
clc
push
iret
addl
jns
mov
insl
sub
pop
hlt
jae
push
popf
mov
stos
or
enter
sbb
cmp
mov
insb
out
sbb
orl
lods
xchg
call
xchg
stos
icebp
ja
fisubl
mov
stos
jns
cmp
lcall
adc
jb
and
pop
nop
lret
mov
jg
cs
loope
in
mov
or
addr16
and
testb
shll
imul
sub
lea
jl
jbe
or
in
inc
xchg
fmull
mov
dec
push
xor
cmp
dec
cmp
jno
xor
popa
mov
and
or
clc
mov
and
sbb
add
ret
pop
xlat
dec
call
out
data16
push
xchg
and
inc
inc
cltd
ljmp
xor
push
mov
dec
ds
sti
stc
call
or
dec
sbb
stos
mov
mov
cmc
idivb
push
pop
mov
js
jmp
test
lods
mov
imul
dec
sbb
mov
sbb
mov
pusha
add
pop
sbb
mov
pop
cld
cwtl
adcl
sar
push
push
in
pop
out
or
xchg
push
jns
sub
push
ret
jne
fisubl
ficomps
jae
ss
std
jl
xor
sti
push
int
loop
push
ret
divl
out
jae
mull
xchg
cmp
mov
push
je
lahf
dec
andb
jmp
gs
jmp
pop
sub
or
test
imul
das
cmp
lods
add
mov
dec
fwait
push
lret
mov
and
adc
inc
xor
movsl
shll
cmpsl
mov
lock
dec
jo
insb
and
ljmp
lock
add
mov
inc
and
inc
out
and
sbb
jmp
icebp
jecxz
adc
aas
inc
inc
dec
push
hlt
and
out
es
add
dec
ja
inc
roll
lahf
cmp
arpl
jbe
and
stc
sti
jne
movsb
xchg
pop
mov
pop
jno
idivb
in
sbb
out
mov
decl
dec
inc
hlt
sbb
popf
add
rolb
repz
sahf
in
sub
iret
push
pop
fdivrl
cmpps
leave
fstps
pusha
push
inc
pop
vmread
dec
pushf
sti
enter
dec
pop
add
stc
jnp
repnz
arpl
icebp
ja
or
and
rorb
push
mov
or
and
xchg
pop
arpl
lar
stos
imul
or
loopne
push
fidivrl
sbb
inc
enter
mov
and
inc
or
cmp
sbb
jo
lea
test
pop
mov
gs
mov
cs
scas
xor
xchg
call
cltd
push
in
dec
sub
push
sahf
cmp
xor
leave
cmp
sarl
addr16
sub
mov
sub
cmpsb
mov
das
lds
pop
mov
insb
xor
out
and
notl
mov
inc
and
xor
sbb
add
mov
inc
mov
aaa
adc
jb
adcb
dec
negl
ljmp
xlat
subb
fsubrp
xchg
cmp
cmp
mov
pop
and
shll
mov
cltd
xor
pushf
jb
jecxz
lret
fwait
jl
sub
out
pop
fadd
add
lea
xchg
or
mov
mov
adc
div
les
push
je
dec
xor
add
out
or
cld
arpl
jns
int3
cwtl
jecxz
ror
adc
inc
mov
fimuls
push
mov
adc
pop
cmp
jl
xorl
push
pop
xchg
lret
add
cmp
and
int
pop
pop
jp
add
dec
mov
cmpsl
jo
insb
mov
jp
inc
lret
aaa
cwtl
add
jge
mov
cld
jmp
add
add
pop
movsb
addl
fs
sub
pop
lds
or
jo
sbb
sub
add
mov
adc
xor
jne
pushf
inc
out
inc
or
sub
jno
inc
cmpsl
add
cltd
jmp
das
xchg
mov
sti
mov
cmc
ret
xchg
sub
or
pop
and
psubsw
sub
jnp
xchg
icebp
mov
repz
into
loop
shll
lret
out
xor
pop
stc
xor
fwait
mov
gs
sub
push
jecxz
inc
mov
sbb
inc
mov
stos
sub
mov
mov
rolb
add
push
cmp
lea
inc
out
mov
int
jns
pop
or
xchg
iret
push
es
in
cld
dec
aas
out
mov
push
gs
inc
xchg
jae
xlat
adc
ret
insl
shlb
add
rorb
dec
cmpl
into
mov
sbb
test
loopne
inc
int
jp
or
aam
in
pop
shr
int3
or
shll
test
repnz
jae
in
rcr
xor
stc
repnz
das
add
ja
test
popf
push
in
int3
dec
test
or
insb
out
push
aam
jle
mov
or
in
outsl
stc
sub
shr
xchg
cltd
and
mov
mov
mov
nop
rcr
repnz
push
mov
mov
xchg
pop
repz
mov
jecxz
or
repnz
dec
loopne
clc
clc
cs
jns
test
hlt
int
jae
and
out
dec
jge
sub
adc
cltd
mov
icebp
mov
cmp
pop
out
xor
test
cmp
aam
arpl
sub
cmpsb
jo
inc
pop
insl
cmp
scas
cmpsl
daa
jo
gs
xchg
rclb
cwtl
xchg
into
xor
outsb
ret
inc
shlb
jge
insb
or
dec
or
mov
fwait
ret
mov
add
outsl
rcr
out
cs
nop
push
out
dec
xor
decl
sbb
push
out
jb
xchg
shrb
pop
inc
pushf
pop
dec
pushf
movsl
adc
jle
ss
je
in
xchg
cmp
mov
enter
insl
and
outsl
ret
leave
jl
lcall
push
ret
lea
mov
imul
xor
mov
bound
or
imul
sbb
cmp
movsb
jb
dec
add
add
mov
mov
imul
jle
xchg
cmp
std
mov
fldt
outsl
ja
mov
adcl
rorb
call
mov
pop
pop
jl
js
pop
pop
push
jae
cmpsb
ljmp
jle
sbb
dec
and
bound
sbb
jmp
mov
sti
push
fwait
push
in
lock
adcb
push
xchg
outsl
cmp
loopne
and
add
and
jae
cli
data16
lcall
mov
cltd
lods
outsb
cwtl
dec
inc
add
xor
inc
in
cmp
push
repz
jns
repnz
dec
and
pop
cmpb
stos
mov
cmp
icebp
sarl
lret
fwait
sub
pop
adc
fwait
out
fisttps
sbb
das
lahf
je
sbb
jnp
inc
jne
xor
xor
loop
and
lret
sub
cmpsb
cltd
xor
inc
push
push
repnz
or
sbb
in
cmp
xor
mov
lret
fnstsw
mov
or
data16
pop
push
xor
and
mov
xchg
mov
das
sub
sub
xchg
imul
fistps
fcmovu
xor
inc
push
jns
in
xor
or
loope
insl
pop
lret
mov
adc
cli
imul
and
cwtl
mov
adc
aas
sbb
mov
push
lret
jbe
repz
popf
and
mov
gs
out
jmp
sti
jg
in
cmc
dec
xor
dec
lcall
out
push
popa
sbbl
clc
aam
roll
scas
jg
sbb
and
adc
lret
std
repz
sbb
jecxz
enter
je
xchg
cltd
sbb
xor
arpl
push
fcmovne
icebp
loop
push
std
pop
int3
sub
push
aam
hlt
xchg
dec
cmp
out
shll
test
sbb
mov
mov
inc
pop
xor
inc
sbb
aam
push
js
inc
xor
inc
xlat
xlat
mov
clc
pusha
popa
divb
or
cmc
into
fs
mov
lret
xor
and
add
lods
cmp
aaa
sbb
jne
pop
mov
fucom
xor
movl
cs
and
cmp
ljmp
rcrl
or
cli
push
mov
mov
stos
mov
insl
mov
jp
test
inc
out
dec
adc
dec
cld
mov
ret
pusha
sahf
dec
int
pop
jnp
or
mov
in
into
jle
dec
adc
dec
das
mov
loope
pop
ficomps
imul
loopne
pop
xchg
sbb
dec
clc
mov
xchg
or
pusha
sbb
out
mov
dec
scas
inc
mov
orb
lahf
mov
jmp
jbe
aam
aad
ja
mov
lcall
jbe
aaa
sub
add
daa
fisubs
rolb
xchg
pop
pop
rcrl
cmp
fnstsw
xchg
mov
and
inc
pop
int3
popf
sub
pop
add
push
jmp
push
jne
adc
dec
arpl
es
mov
mov
data16
insl
fcmovu
cmp
cmp
outsl
pusha
cld
adc
cmp
mov
loopne
jl
inc
sub
fistpl
mov
lret
in
nop
xor
push
jne
sbb
mov
fimull
mov
je
xor
mov
or
scas
xlat
shl
lock
push
repz
jmp
xlat
sti
pop
mov
lock
push
enter
stos
mov
ljmp
adc
popf
loope
jge
lret
sub
dec
dec
cmpsb
leave
leave
mov
jns
out
mov
outsl
sbb
mov
lahf
jp
xchg
ds
xchg
jecxz
xchg
repz
adc
stos
inc
aam
test
jne
inc
add
xchg
lret
jne
mov
lret
fcoms
test
ss
insl
aas
inc
rolb
xor
ds
fildll
mov
mull
jecxz
xchg
jne
enter
and
mov
lret
xchg
lahf
add
daa
dec
clc
jg
jg
in
clc
fsubrl
int
add
lods
ret
sub
loop
lds
push
sub
cltd
imul
adcl
ficoml
cmp
in
mov
mov
ja
ja
repz
pop
add
fbld
in
mov
int
std
cmp
cmp
pushf
jge
pop
loope
mov
sub
push
mov
mov
add
pusha
cwtl
mov
mov
jo
sbb
cmp
es
outsl
sub
jns
popf
insb
mov
xor
mov
mov
lods
push
xchg
push
shlb
aad
fisubrs
mov
das
dec
push
dec
push
imul
jle
data16
jb
mov
lret
cltd
test
repnz
jmp
and
adc
adc
adc
inc
int
outsl
int
cmpsb
cmp
pop
pop
jl
popa
mov
das
jmp
sti
scas
aad
repnz
outsl
mov
sbb
lock
add
stc
mov
mov
mov
inc
cmp
cmp
imul
or
sbb
sub
imul
add
xchg
sub
sub
test
xor
inc
std
in
nop
cmp
stc
jb
int
cmpsl
dec
lea
enter
shlb
add
sub
in
inc
or
repnz
jns
mov
dec
aas
pop
mov
pop
ret
jae
jge
sub
pushf
aam
sub
mov
fucomip
lock
add
movsw
outsl
jmp
mov
and
inc
mov
fldpi
int3
jne
or
xchg
call
dec
jo
sub
jp
into
jb
call
icebp
lods
pop
mov
jg
adc
jae
rorb
cld
mov
adc
inc
enter
repnz
dec
jae
cli
inc
scas
das
sti
xchg
lds
pusha
fldt
les
push
xor
fcompl
enter
insl
pushf
sub
jno
mov
std
shlb
xchg
rcll
xor
jbe
mov
outsl
inc
ror
pop
cmp
push
mov
xor
xchg
das
and
aaa
mov
push
and
fsubs
lock
or
das
mov
mov
ljmp
jbe
jle
mov
ret
sbb
int3
test
into
loop
or
or
jge
repz
jecxz
mov
rorb
aad
es
lret
fldenv
and
outsl
push
pop
jbe
mov
dec
add
xchg
jg
adc
add
scas
outsl
sub
mov
es
adc
xchg
psadbw
mov
imul
lods
and
and
mov
sbbb
dec
xor
out
sub
repnz
fwait
into
inc
push
popa
out
loop
jg
mov
xor
mov
and
xor
push
push
push
cmp
scas
pusha
xchg
jg
or
adc
add
or
sub
xchg
into
in
popa
mov
xor
mov
xchg
rep
jae
fsubs
clc
in
dec
sahf
out
sbb
call
xor
mov
jne
rol
rcrl
sbb
inc
lcall
popa
fxch
data16
lods
in
and
cmp
xorl
inc
xchg
leave
mov
sbb
jne,pt
fs
mov
xor
lret
lods
mov
mov
dec
and
in
jo
ret
out
inc
outsl
xchg
or
inc
mov
inc
and
lods
xor
into
fildll
pop
mov
sbb
stc
push
adc
jle
xor
data16
add
inc
dec
xor
sub
dec
fcmovnb
je
inc
mov
push
insb
je
mov
push
fimull
and
stc
sti
dec
daa
ret
xchg
out
test
sbb
push
cmp
mov
icebp
or
mov
pop
or
in
repnz
test
adc
adc
mov
jle
jae
iret
mov
inc
cmp
into
fdivrl
xor
pop
cmp
jmp
es
jmp
mov
xchg
icebp
mov
sbb
fnstenv
mov
dec
xor
pop
jmp
sbb
test
in
pop
inc
dec
in
xor
xor
sub
shlb
cld
fcomip
out
and
jne
sbb
clc
mov
mov
les
pop
call
mov
nop
push
dec
cmpsl
sub
jle
add
sbb
sbb
int
jns
shlb
jmp
out
cs
xor
pop
data16
mov
into
jbe
jg
cwtl
ljmp
test
jo
sahf
fildl
pop
hlt
mov
lret
cld
sub
mov
add
jnp
out
pushf
pusha
pop
flds
sbb
aad
inc
std
lea
or
xchg
test
int3
ljmp
mov
push
imul
outsl
dec
lea
stc
mov
movsl
dec
loope,pt
clc
or
int
mov
orl
cmp
lods
sbb
imul
add
lods
push
mov
pop
lret
dec
stos
fiaddl
fwait
jle
xchg
and
and
insl
les
mov
es
cmp
in
xor
mov
inc
jge
cmp
mov
mov
ficoml
pop
dec
aaa
dec
adc
push
mov
ds
ljmp
push
pushf
das
pop
scas
and
pop
pushf
daa
iret
push
dec
fs
mov
xlat
xchg
sbb
sbb
inc
push
mov
or
in
int3
add
outsl
fistpl
addr16
and
cmc
xchg
mov
add
movl
mov
xlat
sbb
jns
add
das
faddl
fisttps
add
cli
mov
jae
dec
jae
dec
rorl
jae
mov
out
push
fcomp
repnz
movsl
movsl
pop
xor
push
test
cli
test
cmc
mov
mov
pop
shlb
adc
xchg
and
shr
sbb
in
sub
sbb
fstpl
mov
cmp
cwtl
into
clc
push
aam
sbb
jge
out
push
pop
popf
cs
leave
adc
cmpsb
mov
aam
mov
cmc
xchg
aas
aaa
aaa
subl
ljmp
jnp
lea
jnp
jne
inc
cmpsw
sbb
dec
lcall
fisttpl
add
xor
arpl
fwait
shll
ret
or
jb
rorb
add
pop
fcmove
fisubrl
adc
mov
push
jns
popa
nop
inc
aas
add
jno
fmul
xor
mov
popf
pop
add
fwait
adc
vpshuflw
insb
int
ficompl
jnp
rorl
dec
sub
xchg
sub
sahf
fimull
jge
popf
or
jecxz
add
xor
xchg
rclb
nop
or
int3
sub
dec
mov
shrb
push
mov
jl
jno
pop
das
gs
ret
jecxz
movsl
inc
pushf
repnz
lret
mov
test
in
fistl
stos
adc
push
xchg
int
mov
xor
adc
pop
mov
lds
dec
dec
sbb
out
mov
in
popf
ss
jecxz
pop
aaa
das
nop
testl
and
jno
lock
sub
push
in
mov
ret
pop
loop
inc
call
xchg
mov
or
ficoml
xor
aad
loop
or
cs
push
je
push
xchg
data16
mov
enter
orl
and
loopne
mov
nop
out
je
push
fisubrl
xchg
jmp
movsl
out
pop
lcall
cli
inc
pop
push
movsb
jge
inc
pop
push
cs
test
pop
jecxz
repnz
jae
ret
stos
mov
pop
lret
out
sub
insl
rorb
mov
clc
mov
test
clc
sbb
call
outsb
and
es
sar
std
jns
add
div
xor
shlb
jge
mov
inc
lcall
mov
inc
clc
mov
push
ds
mov
lds
push
repnz
add
movsb
mov
icebp
addb
push
cld
pop
nop
inc
pop
fiaddl
xchg
pushf
lock
mov
std
or
scas
and
popf
insb
fnstsw
push
mov
xchg
lods
cltd
push
imul
loop
mov
stos
jmp
sbb
xor
lahf
subb
cmp
ss
nop
movsb
out
stos
inc
mov
pop
insb
ret
pop
nop
jmp
jnp
addr16
mov
xor
jo
mov
stc
dec
mov
cmpsl
xchg
hlt
and
ret
mov
jl
mov
shlb
les
fbld
xchg
mov
fiadds
cltd
es
mov
push
and
iret
or
sbb
lods
inc
data16
mov
jae
xchg
xchg
test
add
lea
pushf
bound
mov
jbe
das
lcall
insb
fildll
fnsave
and
add
cmp
adc
jecxz
inc
push
out
mov
movsb
or
aaa
clc
out
xchg
mov
mov
not
xor
hlt
adc
add
and
pop
push
daa
rclb
mov
int3
std
sarb
or
or
xor
mov
pop
ds
inc
mov
xchg
popf
xor
and
out
fmull
push
sub
out
test
mov
mov
and
leave
mov
cmp
mov
add
xchg
shlb
adc
jns
movsl
fimuls
inc
loop
xor
xchg
dec
cmp
outsl
test
shr
dec
out
xor
jmp
cmp
dec
mov
sahf
pop
mov
test
mov
gs
std
jbe
addb
data16
aad
mov
jnp
add
js
incl
sub
insl
popa
xor
mov
sahf
lcall
mov
call
inc
addps
into
sub
add
mov
push
sbb
ret
xchg
pop
xorl
adc
enter
add
cmp
add
popf
sub
dec
adc
add
insl
imul
add
out
mov
pop
pop
push
and
jg
pop
sub
add
mov
rcrb
rcrb
repnz
push
shlb
xor
and
out
lahf
out
push
jne
pop
clc
jmp
mov
aad
call
jle
loope
mov
loop
xchg
mov
into
or
pop
je
in
loop
mov
call
ret
sahf
xchg
mov
xchg
lahf
and
dec
or
xor
cmp
inc
aad
pop
daa
push
out
xchg
push
mov
dec
sbb
pusha
subb
cmpb
jecxz
dec
sbb
xchg
sub
lods
sbb
test
mov
popf
or
loope
lea
call
mov
push
mov
mov
dec
inc
mov
cli
mov
dec
incb
fnstsw
cmp
cmp
enter
jl
fistps
ret
add
inc
lods
lea
mov
in
testl
jne
and
mov
adc
notl
insb
mov
in
mov
mov
jne
fsubr
add
aam
sahf
cwtl
pusha
lock
cmp
mov
jp
and
mov
mov
adc
lock
pop
xchg
in
in
lret
fld
sbb
mov
xor
push
call
add
ficoml
push
shrb
test
jg
xor
jg
lret
sbb
movsl
adc
dec
fcompl
add
aaa
mov
pop
jae
or
and
fs
repnz
inc
mov
ja
std
inc
mov
pop
daa
dec
push
jle
and
mov
sub
pop
xchg
movsl
bound
jmp
ret
roll
aam
mov
es
cmp
add
mov
aam
stos
and
inc
test
fnsave
addr16
dec
xor
pop
cmp
fs
adc
pop
mov
sbb
jno
xor
stos
inc
mov
dec
pop
pop
out
leave
add
sbb
rcl
fdivs
ss
out
sub
orb
insl
add
dec
outsb
insl
ja
mov
stos
sahf
add
fcoml
jo
adc
imulb
insb
test
js
push
stos
mov
popa
jg
icebp
xchg
imul
or
jle
lcall
xor
jnp
cmpsb
lods
and
arpl
jne
jl
jo
pop
inc
lods
mov
sbb
out
es
mov
inc
or
xchg
inc
into
sub
jb
jle
test
xor
xchg
out
nop
jo
pusha
icebp
stos
mov
aam
xchg
ret
push
dec
das
bound
cmp
jne
push
test
scas
cmpsb
loop
enter
xchg
mov
imul
cmp
lahf
mov
mov
and
dec
mov
gs
xchg
sub
add
popa
ljmp
lcall
cli
sub
adcl
mov
in
xor
and
mov
inc
pxor
mov
shrb
and
cmp
out
aam
and
shlb
mov
xor
outsb
add
in
xor
aad
inc
ljmp
jne
ret
dec
xchg
nop
lds
xchg
xor
xchg
in
loopne
xor
or
ret
gs
hlt
adc
mov
mov
pop
jbe
aam
sbb
cld
fidivs
ss
sbbb
stos
push
mov
das
jae
test
inc
push
fwait
push
inc
push
orb
add
add
mov
loop
pushf
adc
sbb
pop
cmp
cmp
lds
adc
mov
pusha
insl
pushf
mov
push
mov
repnz
push
rcr
mov
popf
shll
or
inc
jns
sub
mov
mov
xor
mov
mov
cmp
or
das
adcl
inc
pop
repz
cmp
inc
cld
add
out
adc
mov
subb
cltd
les
inc
cmp
popf
jp
mov
fwait
lahf
push
fsubr
fs
movsl
mov
ficoml
rclb
sbb
adc
cmp
jle
xchg
sbb
sub
mov
cmpsl
jno
pop
sbb
cs
sbb
sahf
cmpsb
dec
jb
shll
xchg
sarb
test
mov
fcomps
jle
dec
or
and
outsb
mov
lahf
jns
add
adcb
mov
and
sbb
and
mov
shrl
iret
ds
mov
pop
mov
dec
xorl
adc
dec
unpckhps
lcall
daa
xchg
pop
cmp
push
jnp
mov
xorl
inc
movsb
sub
daa
lret
fcomi
jmp
xchg
pop
sbb
and
scas
push
aam
icebp
pop
test
and
pop
les
movsb
ret
pushf
mov
mov
sub
mov
xchg
ds
inc
outsl
push
mov
cs
outsb
mov
mov
test
out
xchg
je
inc
jge
loop
rorb
insl
pop
pop
mov
push
cwtl
xor
sbb
push
fldl
jmp
cli
sub
mov
aad
in
or
inc
bound
and
cmpsb
aam
movl
sub
fucomi
sti
sub
nop
cmp
xchg
xchg
jg
xor
push
das
jmp
adc
dec
in
dec
mov
sub
enter
and
sbbl
mov
inc
and
sbb
pop
mov
mov
fdivl
aad
fstp
negb
inc
jecxz
arpl
adc
sub
and
scas
rolb
or
daa
xchg
inc
add
mov
rcrb
imul
inc
fs
fsubrs
enter
push
and
les
jne
fsub
nop
pop
inc
stc
cld
xchg
cmp
js
lahf
ljmp
mov
push
mov
add
lcall
js
mov
dec
mov
pop
int
jo
scas
jge
and
lcall
call
hlt
jbe
xor
pop
mov
jno
pop
push
and
lret
push
cltd
fldcw
adc
cmp
stos
sbb
cmp
sti
adc
lds
sbbb
jno
lret
repnz
push
je
dec
sbb
dec
test
ffree
sarb
push
push
loop
inc
and
xchg
adc
mov
xchg
das
lods
xchg
mov
or
dec
mov
pop
lea
leave
idivb
inc
cmp
cmc
pop
jg
mov
lds
je
mov
fwait
add
in
jne
iret
cmp
clc
sub
and
jne
and
cltd
bt
movsl
or
pushf
ficoml
mov
jno
repz
cmp
cmc
jmp
pop
test
lds
aad
or
into
ficompl
lea
jg
cmp
int3
pop
inc
mov
and
sbb
inc
dec
xchg
or
fdivs
sub
jmp
sbb
sub
outsb
mov
cmp
push
cmc
push
out
negb
outsb
fistps
pop
inc
mov
mov
and
sub
dec
enter
xlat
pop
dec
in
push
push
pop
inc
dec
scas
pop
cmc
adc
mov
das
addr16
mov
mov
stc
test
pop
mov
xchg
pushf
lock
adc
pop
push
aad
fs
jp
jge
popa
pop
cmp
pop
or
and
ljmp
jg
repz
mov
mov
les
les
outsl
or
call
pop
test
adc
aaa
cmp
cmp
dec
daa
adc
aas
sbb
rclb
aad
cmp
lods
notb
cmp
adc
xchg
clc
dec
mov
in
jae
push
fisttps
testb
jns
ret
mov
push
cmc
test
clc
inc
in
sbbl
js
jg
pop
dec
adc
pop
insb
int3
enter
push
sbb
inc
test
dec
cmpsb
xchg
ss
popf
out
insb
push
add
pop
add
imul
fdivrl
xorl
cmpsl
sbb
popa
out
sahf
les
fisubrl
add
sbb
lcall
cmpsl
inc
jmp
mov
lcall
movsl
and
out
mov
xor
mov
sub
insl
scas
sub
push
push
xor
xchg
mov
pop
test
pop
push
jnp
bswap
cs
or
cli
and
call
mov
mov
xor
shrl
lcall
cmp
add
rcr
mulb
clc
out
repnz
popf
arpl
aam
enter
pop
cmpsb
sarb
pop
outsl
or
into
or
dec
scas
and
push
push
add
ror
xchg
xor
shll
mov
pushf
mov
xchg
add
pushf
pop
push
enter
jl
lret
adcb
clc
mov
lret
jp
add
inc
ret
cmc
xchg
out
add
fwait
adc
add
insb
lcall
in
in
mov
jns
push
inc
fistl
xchg
mov
mov
mov
js
aam
cs
inc
insb
shl
sbb
cwtl
sub
mov
sub
enter
pushf
pop
mov
xor
push
pushf
stc
into
xchg
jae
sbb
stos
ret
push
out
mov
cld
and
pop
jecxz
mov
call
and
test
mov
pop
dec
js
es
rcrl
ret
jecxz
rclb
mov
push
adc
sbb
fldcw
mov
rolb
sub
xor
movsb
aad
dec
xlat
lea
mov
mov
loope
daa
out
jnp
jl
sti
dec
sub
jns
and
inc
cmc
imul
or
or
pop
outsb
gs
add
loope
pushf
or
lcall
sahf
or
cmp
add
xchg
mov
jne
sti
fwait
mov
add
add
bound
gs
mov
ffreep
popa
sub
ficoms
xchg
inc
push
mov
pop
rolb
cmc
add
fidivrs
dec
bound
shlb
push
and
add
mov
in
mov
jns
rol
hlt
jno
mov
ja
pop
xor
sbb
int3
jb
add
mov
push
insb
or
sub
loop
and
out
orb
sbb
mov
cmc
nop
cld
divb
pop
mov
sub
addr16
fisubrs
push
cld
insl
call
movsl
sbb
lods
mov
xchg
sarl
mov
imul
ret
in
jecxz
mov
sub
pop
in
mov
add
push
out
fstps
mov
in
inc
cwtl
pop
scas
xor
insw
mov
mov
mov
inc
testb
jmp
dec
push
and
cwtl
movsl
lds
mov
mov
xor
filds
sub
mov
pusha
push
pusha
stos
andnps
xor
out
and
aad
fcmovne
js
ret
mov
fwait
pop
sbb
jb
daa
xchg
cwtl
and
ljmp
add
repz
mov
call
out
jne
rolb
pop
iret
test
push
jl
fmuls
jo
into
in
sbb
adc
or
jae
add
xor
imull
shlb
adc
ret
clc
repz
aas
xchg
inc
imul
mov
inc
jns
aas
mov
hlt
inc
jp
cmpsl
cmp
xchg
testb
xchg
loop
xor
cmpsl
dec
sbb
sar
daa
data16
daa
cwtl
aam
imul
fstps
inc
inc
cltd
outsb
arpl
ds
fbld
dec
fwait
xor
and
ret
push
mov
cmp
mov
add
xor
in
imul
popa
in
inc
or
ficoml
inc
stos
add
add
dec
mov
xor
sub
xor
rorl
je
push
lahf
jg
add
adc
hlt
xor
mov
and
int3
xchg
lods
push
inc
sti
and
cltd
lcall
movsb
sbb
or
inc
inc
fisubrl
lods
sub
shll
jne
and
pop
xor
dec
push
mov
adc
pushf
fistps
aad
into
mov
cwtl
xchg
cmp
sbb
xor
jb
imul
add
sub
ljmp
sub
push
iret
adc
daa
bound
and
outsb
add
insb
mov
outsb
push
mov
dec
rorl
lcall
mov
outsb
ja
in
add
daa
dec
in
lcall
xchg
push
mov
cs
pop
out
mov
xchg
fcmovu
mov
mov
imul
int
cld
push
pop
lods
jmp
ljmp
cmpsl
in
aas
pop
in
out
jl
andl
popa
mov
divb
enter
icebp
mov
fimuls
xor
rolb
in
cmp
gs
insb
push
rcr
inc
xchg
sarb
add
cmpsb
dec
ljmp
mov
xor
cltd
lds
mov
adc
cmp
mov
jge
add
cmpsb
jbe
add
movsl
jmp
jg
std
orl
mov
outsl
enter
dec
xchg
cs
cli
clc
subb
fstpl
cmp
mov
icebp
xchg
inc
add
add
mov
jl
clc
lcall
enter
jl
fwait
push
insl
and
insb
js
mov
pusha
pop
mul
in
and
cmp
jg
cli
adc
cmpsb
neg
push
pop
or
mov
and
jp
xor
dec
and
cltd
mov
or
mov
nop
cwtl
out
or
dec
cli
inc
xchg
or
mov
test
mov
je
sub
dec
lcall
cmp
mov
xor
cltd
pusha
adc
push
loope
rcr
mov
std
mov
xchg
xchg
cmp
dec
ret
jb
mov
mov
loopne
and
out
mov
mov
pop
fistpl
andb
fistpl
jnp
cmp
mov
jb
lcall
out
push
aas
stos
sti
sbb
mov
popa
popf
adc
leave
mov
adc
lret
adc
sbb
and
roll
out
mov
jp
test
jo
pop
jmp
je
insb
xchg
mov
lcall
xadd
out
jmp
cwtl
mov
je
arpl
in
std
repnz
and
testb
add
push
test
vcmpngt_uqsd
adc
cmc
pop
cli
call
int
frstor
inc
repz
sbb
call
inc
fistl
jmp
mov
xchg
pop
pop
adc
dec
inc
fidivl
imul
xchg
mov
sbb
test
dec
aas
jo
shll
ds
fsubl
stos
pusha
sbb
mov
pop
aas
cmp
sub
adc
daa
xor
mov
inc
pop
aas
jecxz
add
enter
mov
add
cwtl
outsl
mov
clc
sbb
mov
out
xor
test
nop
inc
pop
imul
lcall
and
push
mov
cmpb
mov
fs
data16
hlt
jo
in
inc
adc
jp
pop
in
outsb
pop
out
jo
scas
outsb
cmp
mov
mov
push
sbb
loope
push
jns
or
or
add
sbb
shll
cwtl
or
sbb
js
or
mov
adc
push
ljmp
xor
aas
add
mov
push
and
lret
mov
mov
mov
inc
arpl
push
cli
adc
mov
scas
inc
arpl
jb
je
mov
add
sub
inc
call
cmp
and
lds
xlat
jns
out
ficompl
jnp
or
pushf
adc
aaa
sti
inc
adcb
or
lret
icebp
movsb
xor
aaa
mov
jb
mov
pusha
aaa
mov
push
jb
ret
inc
les
lods
ret
sbb
push
lods
jb
xchg
rclb
pushf
sub
outsl
cmpsb
subl
outsl
fldt
xor
in
in
les
shr
or
repnz
jl
or
bound
dec
call
leave
clc
lret
cmp
pop
mov
push
loope
outsl
jl
fwait
lock
xchg
add
scas
mov
push
popf
pushf
or
adc
push
dec
jae
push
stc
add
pop
sbb
fstpt
sub
lcall
jns
jmp
sbb
sbb
or
nop
jl
sub
sub
scas
daa
adc
out
cmp
xor
push
cmpsl
push
mov
stos
loop
dec
jp
xchg
stc
dec
push
loope
pop
mov
dec
xchg
mov
push
sbb
in
bound
lds
out
adc
xor
int3
xchg
ret
fldt
mov
in
mwaitx
fs
daa
or
bound
mov
inc
adc
cmp
loop
fdivl
jnp
and
lcallw
and
mov
lea
mov
aas
sti
js
mov
add
mov
pusha
mov
xor
rcll
aaa
out
scas
adc
outsb
pop
popa
xor
mov
xlat
call
push
cmp
cmp
mov
or
in
js
cld
xchg
sahf
push
movsw
outsb
dec
aaa
dec
and
lock
dec
push
loopne
loope
or
adc
les
xor
push
mov
jnp
jb
and
and
inc
jecxz
call
testl
cmc
cld
jo
xchg
inc
orb
xchg
mov
sbb
xorl
stos
adc
xchg
testb
and
mov
xchg
mov
and
nop
mov
push
inc
ret
ficoms
les
rol
mov
dec
addr16
dec
or
adc
dec
outsb
add
mov
maskmovq
testl
popf
mov
inc
and
pop
mov
leave
and
hlt
rolb
jo
push
xchg
push
hlt
ljmp
adc
hlt
dec
sub
orl
add
sub
push
jg
mov
lock
push
movsl
dec
dec
push
lret
sub
adc
es
lock
mov
mov
daa
in
inc
adc
jmp
lds
stc
or
adcl
repz
cmpsl
ret
sbb
loop
sti
jge
repnz
or
jp
mov
cmp
cltd
pop
insl
into
inc
mov
ljmp
or
mov
adc
dec
cmp
mov
and
insb
or
lcall
imul
add
divl
push
je
cld
shl
push
decl
mov
popf
cli
dec
mov
imul
cltd
xor
cmp
pop
movsb
daa
leave
stos
insb
or
cmpsb
sub
sbb
int3
daa
orl
negl
fwait
pop
mov
mov
dec
adc
sbb
dec
and
jg
lcall
sbb
lods
pop
test
ret
dec
sbbl
cli
and
or
insl
mov
push
aaa
push
mov
inc
inc
es
aad
test
lods
sbb
pushf
test
pop
js
add
mov
and
data16
leave
add
sub
jne
and
pop
or
xor
imul
inc
push
mov
jge
cmpsl
adc
and
nop
hlt
idivl
inc
dec
hlt
adc
test
xchg
cmpsl
dec
push
mov
shlb
push
cld
xor
cld
pop
add
or
xchg
outsl
xchg
sahf
cmc
fs
jg
sbb
xchg
or
subb
out
rep
jge
in
mov
dec
lods
inc
mov
inc
nop
loope
nop
pop
cmp
nop
in
mov
ds
shrb
cmc
ja
pop
inc
outsl
and
loope
lock
in
mov
and
pop
push
mov
xchg
aaa
pushf
cli
pop
aaa
fsub
push
leave
cmpsl
mov
cmp
cmp
popa
xchg
nop
cld
loopne
sub
add
cmp
jb
movsl
in
jl
loope
jnp
or
mov
push
addl
add
enter
xchg
and
and
mov
cltd
push
xchg
cmp
adc
aad
mov
adc
bound
jg
or
ficoml
inc
clc
and
inc
add
aaa
pop
lret
rcl
call
leave
xor
arpl
dec
or
mov
mov
adc
incb
jge
inc
dec
ljmp
lret
es
data16
inc
scas
lods
sub
in
cmp
jnp
popa
pop
lret
std
ret
lods
ds
mov
sub
push
adc
out
mov
mov
add
inc
jp
rcrl
xchg
inc
into
out
adc
cwtl
pop
into
std
orl
adc
inc
sbb
and
cmp
imul
clc
mov
imul
testl
inc
sbb
inc
xor
mov
push
daa
xor
je
jle
mov
jb
pop
fisubrl
test
ja
pusha
xchg
popa
or
pop
scas
cmp
cmp
add
mov
lods
pushf
sub
sbb
ficomps
mull
daa
mov
and
xlat
ss
rcrl
add
int3
daa
add
or
jo
cmpsl
xchg
sub
fiaddl
push
out
mov
repz
enter
fcmovnbe
lret
mov
call
and
in
add
out
sarb
xchg
mov
and
inc
hlt
jle
inc
xchg
dec
arpl
inc
jns
fwait
xor
test
pop
cli
mov
push
je
xchg
andb
cs
mov
fisubl
sarb
pop
inc
dec
dec
sbb
pop
mov
adc
ljmp
xor
cmp
shlb
daa
dec
lahf
pop
adc
inc
mov
cli
je
inc
mov
daa
pop
mov
aam
cmpsl
iret
fcoms
lret
cmp
lods
gs
push
insb
push
dec
subl
into
jle
leave
es
dec
jb
scas
adc
pusha
je
psllw
adcb
es
jne,pn
fildl
test
stos
lret
mov
dec
cmpsb
leave
movsb
sub
sub
jo
sbb
ja
push
or
movsl
repnz
mov
data16
arpl
and
mov
jbe
mov
sbb
push
fildl
pop
xchg
jns
xchg
enter
cmp
cmp
aam
or
xor
ljmp
add
sahf
idivb
jp
popf
sbb
add
test
xchg
and
inc
jp
dec
rcrb
pop
out
dec
and
push
loope
lret
test
mov
mov
xor
or
test
shl
fldcw
or
inc
sub
or
in
fistpl
pop
sbb
sub
data16
fcomip
lock
push
lods
pushf
fimuls
int3
mov
mov
scas
xor
lods
dec
xor
fisubrs
sahf
or
shrl
call
out
addb
ja
push
adc
mov
adc
rcrb
mov
mov
xchg
imul
mov
add
es
iret
push
outsb
add
adc
lret
inc
sub
xor
stos
mov
out
pop
fcomps
xor
daa
push
sbb
pop
out
sub
aaa
mov
icebp
test
enter
incl
ret
in
or
cmp
jb
add
sbb
and
testb
leave
leave
test
xlat
ret
adc
push
push
adc
sbb
jmp
xlat
cltd
arpl
fstps
add
enter
ja
xchg
lret
mov
shll
das
test
ret
out
jp
or
aas
repz
jmp
xchg
sarb
add
pop
mov
mov
or
or
test
sub
stos
push
aad
ds
fists
scas
sub
inc
dec
mov
mov
sbb
jmp
roll
movsw
mov
mov
sbb
dec
inc
sub
ficompl
enter
pop
mov
sbb
insl
ljmp
mov
sub
push
mov
mov
xor
xor
xorl
fistpll
shlb
stos
jg
xchg
mov
cmovle
push
popa
mov
shlb
test
jp
filds
adc
test
jnp
dec
mov
gs
ss
fstps
lret
xor
rcl
cmc
insl
ss
xor
inc
xor
fwait
jo
or
pop
adc
push
adc
and
dec
push
mov
stc
mov
mov
mov
jo
lock
and
inc
push
daa
pop
jmp
inc
push
nop
add
jp
leave
je
or
test
repz
push
adc
addr16
cmp
pushf
lcall
orl
mov
in
test
and
sbb
adc
sub
dec
fstl
and
paddq
stos
test
lret
pop
call
in
je
push
ss
ljmp
imul
sub
pop
rcr
adc
pop
mov
inc
int3
cli
sar
add
ja
mov
mov
cmpsl
nop
xlat
stos
or
adc
xchg
cmp
clc
sbb
loope
cmc
add
shrl
dec
jge
dec
lret
in
lahf
or
das
cmc
push
jg
and
push
pop
sahf
push
stos
es
mov
cmp
addr16
dec
inc
mov
loope
jg
addr16
push
cmp
jge
and
jl
psadbw
mov
out
mov
es
pop
and
daa
fmull
out
notl
ljmp
mov
inc
stos
lock
mov
pop
mov
pop
lret
adc
icebp
push
outsb
push
xlat
mov
nop
loop
outsl
or
and
jmp
bound
mov
arpl
js
add
inc
jmp
loopne
sub
insl
les
divb
test
js,pn
mov
and
shll
jmp
imul
mov
xchg
out
sar
fidivl
sub
jmp
out
lret
mov
xlat
stc
jo
mov
inc
pop
daa
mov
lods
xchg
xchg
xchg
imul
mov
scas
pusha
jns
jne
xchg
push
hlt
in
dec
add
lods
mov
fistpl
adc
and
stc
test
sarb
pop
testb
mov
test
loope
sub
loopne
bound
out
mov
adc
pop
inc
rcrb
in
pushf
sbb
enter
cli
inc
out
mov
imul
outsb
mov
xchg
pop
int3
adc
lahf
fsubs
add
fldl
mov
mov
and
dec
mov
xchg
push
into
or
inc
das
cmpsb
inc
mov
rcll
out
jnp
jp
imul
sub
rcrl
cltd
arpl
sub
popf
jmp
cmp
data16
cli
mov
daa
sbbl
iret
out
and
jmp
lret
outsl
lcall
sti
sub
adc
inc
xchg
mov
ss
cmp
pop
push
xor
pop
int
jle
sub
sbb
pusha
loop
sti
inc
cwtl
push
sub
nop
mov
aad
pop
xor
aas
inc
clc
ja
in
adc
xchg
ss
in
icebp
add
aaa
push
fs
push
sarl
fsubs
inc
adc
push
mov
int3
lahf
inc
enter
jmp
mov
cmp
push
pop
rcrb
fwait
orl
or
cmp
and
movsl
rclb
decl
clc
out
sbb
jb
dec
loope
pop
add
push
sbb
test
mov
insb
aas
imul
cmp
movsb
mov
xchg
mov
inc
or
pusha
testl
loop
or
loop
lock
push
test
cmp
cmpsb
push
dec
push
mov
mov
sub
sub
pushw
mov
mov
pop
sbb
mov
ljmp
cmpsl
fstl
rorb
mov
aas
int
iret
cmpl
or
paddusw
clc
cmp
sub
ficoms
in
sub
lods
iret
push
jp
mov
xchg
lea
fdiv
cs
sbb
sar
sub
stos
ljmp
popf
mov
fsubrs
lea
andl
jmp
mov
xchg
pop
cld
sub
push
les
dec
lods
test
adc
ja
lret
and
leave
xor
jecxz
mov
mov
loope
repz
xorl
sti
xchg
imul
xchg
and
insl
add
fwait
inc
push
int3
push
dec
fadd
xchg
or
lods
lock
pop
hlt
or
mov
mov
popf
js
ljmp
scas
mov
inc
cmp
aas
mov
add
adc
lea
outsb
stos
sub
push
pop
dec
fstl
stos
in
xchg
inc
xchg
repz
cmp
jne
jge,pn
jmp
fabs
add
negl
out
push
mov
mov
xchg
insb
jo
imul
ficoml
cmp
mov
pushf
out
imul
mov
es
lods
cwtl
sub
jmp
iret
sub
mov
ret
std
in
test
sbb
rorb
int
imul
dec
push
outsl
xchg
lahf
adc
mov
orl
mov
add
shll
ficoms
aaa
test
jg
jbe
jae
dec
xchg
je
adc
or
xchg
in
pop
cmpb
loop
int
test
mov
ds
lret
mov
stc
cmpb
add
adc
aad
insb
sub
inc
scas
and
cmpsl
inc
cwtl
sarb
pop
sub
int3
cltd
lcall
cmpsb
sahf
inc
jmp
cmp
das
cmp
mov
aaa
xchg
orl
sub
pop
mov
ja
outsb
cmc
sub
popa
jl
dec
mov
bswap
popf
call
sub
jmp
popf
movl
pop
les
sub
mov
cmpb
xor
xchg
inc
loopne
lods
jge
decb
inc
sahf
cmp
clc
lds
lds
fldlg2
fstps
jno
test
ljmp
data16
fwait
jbe
mov
leave
inc
mov
mov
lods
stos
push
fsubrs
scas
cmc
enter
repz
cmp
cld
push
jp
or
mov
lret
cmp
sbb
lret
in
jle
push
sub
js
adc
andl
mov
leave
and
mov
or
or
inc
jno
mov
test
test
das
jbe
or
nop
sbb
cmp
mov
daa
or
std
leave
ss
popf
test
cmp
dec
xchg
sub
int
cmp
xchg
mov
mov
cmp
jno
fwait
sbb
jo
add
mov
adc
inc
add
imul
mov
addb
push
pop
scas
xchg
jbe
push
ljmp
lds
loopne
mov
add
es
cmp
dec
jge
push
test
enter
sbb
inc
sti
adc
subl
inc
inc
mov
pop
inc
jmp
cmpsb
stos
sub
push
popa
xor
pop
je
je
scas
sahf
cli
notb
sub
es
xchg
fisttpll
rorl
clc
test
imul
xlat
mov
mov
jb
and
imul
ljmp
jne
mov
xorl
neg
std
ret
inc
or
hlt
cmp
jmp
jnp
sti
xchg
adc
into
lahf
push
xor
cmpsb
or
clc
in
jne
cmp
cld
ljmp
mov
push
mov
lea
inc
faddl
mov
int3
adc
xchg
add
push
jnp
sahf
icebp
push
cmp
icebp
add
xor
imul
popf
and
or
arpl
xor
enter
jae
dec
xchg
lea
popf
sub
lock
and
push
int3
ret
daa
scas
push
cmpsl
icebp
int3
pop
inc
cmp
mov
xchg
std
push
mov
mov
pop
fldcw
insl
pop
pop
push
jecxz
dec
xchg
push
ficompl
push
sbb
mov
jecxz
test
inc
lret
inc
pop
sub
jno
scas
pop
stos
mulb
pusha
roll
mov
mov
mov
cltd
in
loop
mov
xor
test
scas
sub
popf
jne
xor
pop
xchg
mull
es
pop
sub
pop
mov
mov
sbb
ds
sub
sbb
int3
jl
inc
test
pusha
mov
idivl
outsb
mov
mov
sarl
push
dec
test
int
out
js
or
jae
mov
lods
icebp
test
push
jge
push
popa
outsb
push
repz
lret
cs
xor
add
add
jmp
mov
lret
cmc
orl
fld
jb
negl
stos
int
loope
dec
das
sahf
xorl
dec
inc
or
lods
ljmp
fsubp
ss
and
test
pcmpeqd
adc
sarl
pop
addb
or
and
xor
ja
scas
scas
or
sbb
sub
jle
lock
jnp
or
adc
rclb
push
sbb
push
mov
adc
cmp
push
dec
sub
rsqrtps
cmc
pop
loopne
in
dec
scas
xor
aad
cmpxchg
insl
cmpl
dec
push
jp
imulb
ss
out
pop
mov
repz
xchg
scas
aam
mov
or
add
add
sar
xchg
loope
and
inc
test
inc
sbb
enter
imul
ds
neg
daa
mov
movsl
xlat
mov
mov
push
mov
mov
sbb
push
jge
sarb
pushf
ja
inc
inc
jle
dec
pushf
notb
jle
mov
mov
lret
data16
adc
sbb
mov
ljmp
jo
xchg
xchg
cmp
pop
das
dec
movsb
sub
mov
enter
shl
mov
mov
cmp
outsl
icebp
daa
outsb
add
cwtl
pop
mov
imul
mov
and
jp
xacquire
xchg
sub
insb
in
mov
test
add
das
mov
jl
insb
add
stos
or
rcr
dec
cmpsb
out
lods
loope
jae
pop
fdivs
insl
xchg
sbb
dec
adc
push
lds
inc
and
jae
mov
outsb
push
or
sbbb
mov
popf
jg
loope
or
iret
push
add
sbb
sbb
sti
fldcw
jp
push
fidivs
sub
sbb
dec
mov
aam
dec
daa
mov
cmp
and
jmp
lcall
cmc
clc
xor
jg
fildl
test
dec
jns
inc
and
push
mov
mov
cs
add
adc
rclb
call
sub
stc
push
or
sbb
mov
pop
pop
fisubs
xor
inc
sti
mov
and
mov
cmpsl
andb
inc
mov
fisubs
cmp
sbb
xchg
and
gs
jecxz
nop
insl
ret
push
mov
out
sub
aas
js
inc
jo
and
push
test
sbb
dec
xor
jnp
dec
fisubl
fwait
mov
add
dec
add
mov
loop
sub
cmpsl
push
or
or
fdivs
fdivrp
xor
dec
mov
cmp
das
loope
jmp
cmc
dec
je
mov
cmp
shlb
cli
push
int3
popf
fbstp
mov
pusha
lock
cmp
es
popa
pop
and
pop
push
shll
mov
lds
pop
add
stos
sub
lret
repnz
mov
mov
inc
jecxz
and
push
xor
push
xor
mov
add
xchg
sub
leave
sahf
sbb
lret
outsl
in
test
mov
adc
push
js
test
mov
cs
and
icebp
lods
out
test
fwait
mov
xchg
inc
xchg
mov
dec
pushf
idivl
xchg
lock
fstpl
pop
ljmp
bound
mov
dec
movsl
sbb
sub
loop
sbb
mov
adc
jb,pn
icebp
pop
add
aaa
scas
nop
aas
xor
or
repz
jbe
loopne
inc
stc
cmpl
out
ljmp
mov
pop
popa
sbb
lret
mov
sti
in
js
cmp
in
inc
jg
pop
rcll
mov
xor
cmp
inc
cltd
dec
sbbl
adc
pop
add
int
lret
aam
add
scas
stc
dec
arpl
incl
sub
jmp
push
or
arpl
ja
cmp
imul
cmp
cmpsb
pop
scas
mov
out
aaa
xor
js
jecxz
or
imul
pop
xchg
outsl
mov
test
rclb
and
push
adc
loope
push
stos
fcmovbe
jge
into
xchg
loop
loopne
ret
outsb
popa
mov
loop
sub
mov
inc
jg
push
cmc
std
lret
and
outsb
dec
in
dec
shlb
push
jmp
stos
roll
outsl
mov
dec
gs
pop
adc
je
repnz
mov
add
cmc
popf
cld
cmp
xor
sub
dec
jmp
fcmovnbe
orl
mov
pop
or
shlb
pop
movsb
inc
fisttpll
inc
adc
nop
negl
sbb
push
mov
push
add
mov
pop
call
push
sbb
pop
cwtl
push
adc
inc
daa
and
arpl
push
rcr
inc
pop
mov
jno
inc
gs
push
filds
into
cltd
int3
rolb
ljmp
mov
je
gs
out
adc
stos
dec
mov
inc
imul
pusha
push
mov
popa
scas
mov
ret
mov
lea
mov
outsb
or
fld
cltd
imul
adc
xor
and
dec
fisubl
mov
pop
mov
js
inc
jp
sti
mov
adc
pop
movsl
jne
pop
fisubs
aaa
jb
aam
adc
sbb
xor
mov
shll
mov
enter
mov
inc
repnz
jb
cli
scas
xlat
xchg
popl
xlat
divl
pop
inc
mov
jne
mov
mov
mov
sbb
lahf
xor
and
xchg
xchg
loopne
xchg
xor
mov
sahf
test
es
mov
dec
fadd
pop
dec
and
sbb
in
lods
pop
sahf
out
pop
cmpsb
xor
dec
and
fidivrl
xchg
lahf
int3
not
test
jbe
sahf
push
or
xchg
pop
scas
inc
push
ret
outsl
ja
out
xor
addl
xchg
and
push
repz
lret
xlat
cmp
cmp
dec
int3
mov
mov
and
lret
enter
imul
mull
inc
mov
in
lahf
jge
and
pop
mov
mov
ds
shll
jg
in
mov
arpl
add
roll
cmp
out
test
sub
jle
xchg
sbb
outsb
jb
lods
lret
mov
icebp
scas
mov
dec
mov
sahf
loopne
or
sbb
mov
lods
and
lock
mov
jmp
push
loope
je
push
pop
xchg
mov
jmp
lret
int3
dec
mov
in
pop
mov
mov
mov
xchg
fsts
push
mov
bound
ret
es
xchg
xchg
cwtl
add
pop
popf
push
xchg
ja
add
mov
dec
rolb
cmp
cmc
stc
pusha
negl
dec
iret
cmpsl
add
cmp
int3
cs
stos
lods
sahf
cli
test
or
or
add
movsb
mov
xchg
push
add
and
hlt
add
push
mov
loop
xchg
dec
cmpsb
mov
test
out
test
popf
push
and
lds
inc
mov
sbb
xor
push
aas
out
fstps
or
testl
test
push
loop
fwait
sbb
push
lds
repnz
int
pop
push
in
inc
jp
or
out
xor
mov
and
add
sub
cltd
imul
mov
in
pop
cwtl
mov
scas
clc
les
lcall
stc
jns
loop
and
inc
call
pusha
call
sbb
stos
push
jecxz
subb
hlt
stos
lcall
mov
adc
mov
cmc
sbb
hlt
inc
add
aas
sahf
jg
fcomp
in
dec
and
movsb
sarb
dec
test
sbb
js
fnsave
mov
and
insb
mov
cmc
rcrl
arpl
pushf
out
in
or
enter
adcb
outsb
mov
mov
dec
loopne
jle,pt
stos
lock
xor
aam
and
nop
dec
and
and
jno
cmp
into
xchg
dec
insl
out
inc
pushf
aam
les
xor
cmp
repz
sahf
xchg
cmp
lods
mov
sub
adc
xchg
xlat
lea
imul
adc
pop
or
stos
out
sbb
inc
mov
xchg
cmp
shll
dec
and
xchg
lods
test
mov
ficomps
sub
cmp
ds
clc
loop
pop
push
aam
cmp
xchg
test
clc
xchg
cmpsb
inc
cwtl
lcall
xchg
jg
pop
xchg
insl
gs
mov
stos
cwtl
in
add
fisttpll
leave
iret
mov
nop
cmpsb
inc
jmp
lods
inc
adc
xchg
pop
jb
out
cltd
call
lock
xchg
push
xchg
xchg
cli
cmpsl
sbb
out
shll
xchg
shrl
dec
cmpsb
push
leave
push
add
sub
lea
dec
mov
rolb
fwait
pop
arpl
push
xchg
jle
sbb
sbb
pop
and
or
lret
stc
stos
cmpsl
add
bound
mov
jmp
inc
adc
pop
clc
repz
mov
out
icebp
lcall
out
xchg
pop
push
test
cmp
pusha
stc
pop
mov
xchg
mov
cwtl
xor
dec
nop
and
jge
add
xor
pop
repz
insl
and
xor
nop
sub
ja
popf
mov
mov
dec
cwtl
aas
mov
mov
push
dec
jmp
pushf
ficompl
mov
pop
dec
jno
rorb
cmp
or
inc
test
lds
nop
scas
arpl
mov
sub
xchg
mov
test
aam
shl
mov
iret
int
cmp
cld
mov
jo
rcll
in
sub
xchg
roll
pop
out
adc
mov
mov
xchg
sub
xor
xor
and
pop
out
in
xchg
andl
mov
add
push
add
jmp
loopne
pushf
pop
xchg
imul
lods
mov
mov
shll
inc
mov
out
fwait
push
fwait
les
add
push
and
in
mov
sub
out
call
mov
bound
roll
rcr
das
je
call
mov
xrelease
adc
mov
lret
pop
mov
flds
sub
cli
sti
cmp
aam
dec
sahf
mov
in
jle
roll
mov
jne
jb
inc
sbb
cmpsb
sub
gs
into
in
mov
jno
aad
fld1
mov
test
fldl
cmpsl
cwtl
push
repnz
xchg
leave
add
jb
sbb
pop
rorb
addr16
cmpsb
movsb
cmp
pop
push
fimuls
lods
sbb
movsb
mov
les
mov
add
xchg
pop
mov
rcr
push
in
int
loop
dec
out
es
add
inc
js
insb
rol
cwtl
cmp
lods
pop
push
in
cltd
adc
mov
call
cmpl
dec
cld
je
or
xor
mov
cmp
icebp
inc
sbb
push
add
lahf
cs
push
pop
mov
aam
mov
sti
cmp
pop
pop
add
loope
cmp
add
jg
shll
add
fnstsw
icebp
sahf
rcrl
decb
xchg
inc
roll
mov
clc
cltd
test
jp
fnstsw
xchg
insl
push
push
pop
sub
daa
sarb
pop
pop
imul
subl
aaa
and
push
ret
add
int3
xchg
gs
push
xor
add
addr16
or
xchg
jge
mov
push
push
stos
ja
sub
fs
or
xor
and
pushf
jp
xor
insb
jns
enter
mov
ds
loopne
or
lea
adc
sub
cmpsl
push
push
jb
cmp
leave
sti
jmp
jnp
push
scas
fdivr
adc
xchg
add
dec
test
shl
test
push
movsl
fidivrs
les
or
pop
stc
scas
into
insl
xor
pop
testb
push
mov
outsb
aaa
mov
aas
ljmp
or
repnz
mov
rcrb
jg
cmp
xorb
setns
mov
in
xor
roll
mov
xchg
mov
scas
daa
call
push
pusha
shll
lret
add
mov
or
and
mov
cmp
test
fsubp
and
insl
inc
jp
lock
test
add
addr16
sub
fwait
ja
dec
iret
lock
sub
shlb
bound
jne
cmp
lahf
daa
test
movsl
mov
and
mov
push
xorl
movsl
sub
loopne
mov
scas
push
shrb
inc
mov
sub
jo
movb
push
lds
pop
divb
les
jbe
sub
dec
data16
loop
loop
pop
cli
bound
cmpsb
adc
test
test
jb
jmp
mov
sbb
inc
rol
mov
sub
outsl
jne
sahf
mov
aaa
push
push
mov
pop
fisubrs
and
int
jl
or
cmp
pusha
cmp
dec
pop
frstor
ds
adcb
jmp
jo
sarb
leave
sub
adc
jno
cmp
mov
push
sarb
cltd
scas
daa
enter
inc
loopne
in
dec
add
outsl
or
mov
mov
xchg
jle
ss
mov
pop
dec
dec
push
and
dec
sbb
gs
fidivrl
inc
aaa
cld
movsb
mov
inc
xchg
mov
jmp
adc
jmp
or
mov
cmpsl
pop
add
fs
adc
push
xchg
repz
insl
mov
orb
cmp
test
test
cmp
and
in
test
xchg
mov
pusha
and
push
addr16
imul
adc
insl
movsb
jle
cmp
dec
xor
sbbb
jge
fsubrs
sub
test
push
into
cli
rorb
push
rolb
jl
and
mov
arpl
push
push
out
jge
pop
xchg
inc
dec
outsl
mov
jbe
xor
jle
sub
jo
xor
dec
jne
pop
popf
popf
aas
and
lret
mov
xchg
or
call
ds
push
mov
dec
sub
pop
in
and
cmp
dec
or
loop
das
sbb
and
and
aas
or
clc
sbb
adc
into
scas
add
int
fmul
xchg
xor
sub
jp
inc
cmpsb
add
xor
fisttps
shl
sbb
pop
sub
pop
cmp
fidivs
xchg
mov
add
pop
xchg
push
popf
sbb
imul
inc
dec
clc
hlt
movsl
mov
fildl
mov
jmp
jge
sub
or
cmp
ret
or
inc
add
pop
or
add
mov
sar
shr
icebp
push
les
loopne
push
or
jle
cmp
sbb
mov
jbe
jo
lds
pop
pop
cmpsl
mov
sarb
adc
enter
ljmp
pop
jge
gs
call
decb
mov
fldcw
pop
sub
lret
enter
mov
fucomi
and
add
arpl
xor
fmuls
mov
mov
leave
addr16
popa
sbb
lret
jns
test
mov
xlat
movsb
inc
push
leave
xchg
out
sbbl
mov
mov
rorb
and
sub
pop
inc
xorb
and
imul
into
add
lds
mov
mov
cmp
or
lock
nop
adc
fdivr
push
or
fcomps
jbe
cmp
sub
pop
adc
negl
lahf
ret
inc
leave
pop
push
bound
add
sbb
push
ljmp
out
out
jg
jb
pop
dec
insb
lods
pop
inc
mov
xchg
aam
mov
pop
outsb
test
les
shl
mov
jle
lods
loopne
stos
push
fnstcw
repnz
subb
xchg
mov
sbb
repnz
stc
ja
jge
push
popa
je
push
stc
xor
and
xchg
pop
mov
insb
push
test
fwait
mov
out
imul
cmp
push
cmp
inc
jne
nop
jno
hlt
and
or
push
mov
rcr
cltd
sub
inc
dec
mov
and
inc
add
xor
jb
movsl
ficoms
shll
stc
jne
daa
or
cmp
add
mov
jg
cmp
mov
loop
imull
push
lock
xor
xchg
xchg
nop
loope
dec
jo
lret
sbb
push
cltd
fcompl
pop
sbb
xchg
lahf
pop
jge
dec
les
jmp
mov
out
call
jl
js
loopne
cs
add
bound
and
insb
jp
mov
cltd
sysenter
dec
pop
pop
add
lods
mov
out
pop
cmp
mov
sub
push
int
mov
cli
in
sbb
sahf
mov
ficoml
pop
icebp
cmp
push
push
popf
movlps
mov
out
jae
inc
inc
sbb
call
mov
sti
int3
fistpl
test
mov
cli
pop
inc
lock
cmp
sbb
dec
adc
testl
jg
adc
xlat
xchg
ljmp
clc
or
pop
xchg
mov
arpl
xchg
aaa
dec
stc
xor
push
mov
cmp
sbb
mov
gs
jmp
les
jmp
shl
cs
push
sbb
scas
call
mov
dec
lret
sbb
loope
clc
addb
and
out
in
and
out
stos
jge
stc
stc
lods
lods
add
sub
fwait
lcall
aaa
and
repz
bound
ret
cmpsl
push
jle
mov
mov
insl
jns
mov
pop
adc
push
pop
xchg
add
out
sbb
mov
stos
push
adc
add
daa
std
xchg
test
imul
ljmp
ljmp
arpl
or
sti
clc
test
fsubs
adc
pushl
xlat
mov
lock
mov
outsb
jae
sub
das
add
int
sub
int
sbb
sub
je
jmp
dec
and
das
stos
mov
pop
iret
sti
sbb
shlb
fisubs
stos
in
xorl
fldenv
mov
cmp
and
push
int3
fldl
fldln2
std
mov
stos
popa
cmp
or
ja
insb
cmp
mov
mull
jmp
ss
cli
sbb
bound
push
stc
jp
ret
mov
aam
and
ret
subl
pushf
mov
fsubrs
sbb
adc
stos
es
adc
shrl
fstpl
shrb
fidivl
sbb
lea
pop
sbb
jae
pop
fnstenv
xor
int3
shrb
or
adc
jmp
popf
dec
rcrb
loop
cwtl
loop
in
jmp
push
pop
pop
add
lret
out
xchg
jl
xor
test
jns
xchg
scas
mov
cmp
aam
lock
in
jp
add
test
push
cmp
push
xor
jae
jbe
cld
fmulp
add
lods
jno
or
rorb
dec
es
dec
sbb
or
hlt
sahf
push
pop
stos
mov
in
bnd
fcompl
mov
and
add
and
adcl
sbb
mov
xchg
aam
jnp
jnp
cmp
dec
cmp
dec
icebp
push
imul
inc
arpl
sbb
pop
ss
dec
jbe
xchg
mov
push
aam
fcmovnbe
jns
mov
and
lds
cld
mov
aas
ja
pop
sub
xchg
xchg
gs
aaa
lock
jmp
jno
sbb
push
aam
cmp
cwtl
enter
xlat
aad
scas
or
mov
fcmovnb
mov
out
mov
daa
add
dec
inc
movsb
mov
mov
imul
test
sbb
arpl
fidivs
imul
inc
jb
sub
je
jno
jecxz
sbb
mov
lods
aam
push
cmpsl
test
push
in
lock
les
repz
add
rcrb
inc
cwtl
dec
jae
ret
cmpb
jecxz
dec
out
pop
mov
push
add
push
xchg
jecxz
and
dec
lods
aas
loop
mov
in
and
sbb
adc
xor
mov
add
mov
call
xor
mov
lds
int
jl
loope
jle
loop
inc
cmp
push
stos
nop
dec
cmc
push
fmuls
test
bnd
cmpsb
pop
rorb
and
mov
mov
adc
jnp
jne
repz
out
xchg
stc
lock
es
rolb
and
mov
jo
clc
adcb
mov
or
outsl
ss
leave
xor
fcomp
and
inc
and
push
loopne
fstp
sub
ss
cs
into
call
loope
mov
push
gs
xchg
sub
ljmp
scas
mov
mov
cwtl
xor
add
push
pushf
mov
test
hlt
dec
add
cmp
push
pop
daa
fstps
or
lods
or
xchg
pop
push
push
and
inc
pop
sub
adc
mov
cmpsb
enter
jecxz
jo
cmp
mov
icebp
dec
cwtl
aad
and
mov
sub
jge
scas
push
pop
cs
adc
repnz
dec
push
cmp
and
insl
jne
inc
enter
inc
rorb
jno
ds
repz
pop
stos
jg
ret
mov
cmp
push
or
aaa
outsl
cmp
add
mov
pop
inc
int3
cmp
mov
push
repnz
popa
jo
mov
sub
adc
add
xor
cltd
sub
idivb
leave
movsb
and
jb
mov
mov
xchg
movsb
jl
or
sub
mov
or
dec
jp
sbb
cltd
mull
push
xor
sub
xor
mov
push
cld
sub
dec
xor
mov
test
jbe
pop
aas
test
xor
shrl
jge
xor
add
sbbb
inc
loopne
push
jne
out
pop
rcrl
andb
arpl
aaa
lock
jge
xchg
stc
push
mov
mov
movsb
or
jl
das
push
mov
mov
aad
or
ljmp
push
inc
cmp
iret
repz
leave
dec
jp
movsl
insb
test
test
jbe
push
dec
pop
mov
jmp
cs
or
pop
jns
leave
lods
jae
lea
cli
mov
sbb
inc
sub
call
sub
inc
lods
cmpsb
xor
fcoml
mov
iret
xchg
xchg
jnp
dec
push
in
or
adcl
xor
mov
add
add
inc
imul
dec
cwtl
inc
lods
xchg
inc
xlat
popa
dec
loop
jae
sub
mov
mov
je
imull
movsl
stos
js
mov
and
dec
sub
das
push
jne
cltd
cmp
xchg
popa
add
out
inc
scas
icebp
outsl
xor
outsb
sub
out
fdivl
adc
adc
movsb
call
push
inc
push
test
sub
ja
push
fisubrl
aaa
inc
in
and
and
int
mov
mov
imul
test
test
stos
push
sbb
daa
test
sub
push
mov
fildl
pop
mov
test
pop
push
mov
xor
sbb
mov
bound
or
pop
jle
std
lods
shlb
xchg
inc
ja
jbe
aad
xor
das
das
rol
mov
xor
push
lahf
das
xor
sbb
or
mov
push
aam
sbb
bound
mov
mov
adc
bnd
sub
int
lret
ljmp
push
xor
jbe
cmp
mov
cmp
push
dec
outsb
xor
adcl
fcoms
pop
loop
fistl
stos
fadds
gs
popa
arpl
in
push
inc
mov
jo
pop
into
dec
call
and
jnp
das
repz
pop
add
mov
test
iret
adc
mov
daa
sub
jmp
xor
insb
sahf
mov
jp
in
and
cmp
mov
pop
leave
test
lods
push
out
in
mov
and
inc
lock
jnp
or
sbb
dec
divl
leave
xor
fcoml
sub
stos
loope
fldt
or
pusha
push
and
hlt
icebp
xorl
mov
and
fdivrl
push
mov
faddl
andb
xor
cmp
lds
adc
fsubrs
test
aad
sbb
ret
les
cli
add
je
mov
in
in
xor
sbb
clc
sub
sub
notl
push
in
in
imul
add
xchg
mov
jmp
mov
dec
aaa
push
sub
int3
lret
xchg
out
inc
mov
stc
shr
scas
push
fwait
or
inc
sbb
loop
lret
mov
rcrb
cmp
lods
repnz
xor
icebp
in
ljmp
sub
or
insl
mov
jo
mov
repnz
xor
ret
xchg
add
ss
and
stc
insb
inc
mov
mov
sub
xor
stos
sbb
rcrb
jecxz
lret
ret
jno
sbb
add
sub
dec
pop
hlt
pop
in
rcll
push
sbb
dec
shrb
out
mov
mov
aas
inc
and
lods
es
mov
loopne
mov
lds
movsl
sbb
daa
popf
outsl
dec
add
mov
mov
mov
pop
in
mov
jnp
sti
dec
mov
adc
rolb
mov
dec
adc
mov
dec
cmp
roll
pop
xchg
push
jne
fwait
xlat
add
inc
jmp
mov
sub
in
nop
jno
sarl
fsubrl
lcall
inc
fsubrs
mov
lods
fnsave
sbb
cmp
inc
dec
rol
sbb
sbb
scas
and
nop
mov
pop
rolb
in
jle
aad
cmp
push
cmpsl
dec
test
inc
cli
push
mov
mov
push
pop
mull
in
clc
rorl
sbb
pop
mov
test
mov
lret
in
jmp
jp
gs
xchg
into
add
es
out
jmp
inc
aaa
imul
jl
dec
push
jmp
add
icebp
and
shrb
jo
inc
enter
xchg
pop
xor
cmp
test
aad
filds
jecxz
mov
push
aam
add
lock
jp
sub
lret
xor
cmp
and
test
dec
sub
dec
adc
sarb
test
cs
ja
and
dec
lock
bound
dec
xchg
lahf
pop
pop
inc
test
div
cmp
adc
push
jmp
loopne
dec
call
sbb
cmpsl
bnd
push
adc
sbb
aas
mov
or
dec
jp
fwait
into
rcrl
flds
and
nop
jns
adc
mov
xchg
js
lcall
movsb
or
clc
in
scas
movsl
sub
lods
cmpb
push
mov
inc
mov
jnp
negl
clc
jle
jnp
insb
inc
rolb
test
jg
aas
pop
shr
mov
test
sbb
gs
scas
rcrl
dec
and
cmpsl
jg
cltd
lods
inc
mov
mov
movsb
cld
add
or
pushf
add
aas
in
inc
lret
in
ja
sub
mov
cld
sarb
mov
pop
fldenv
mov
pusha
mov
bt
mov
adc
xchg
shll
lods
sub
jb
xor
repz
bound
add
das
imul
imul
aad
push
mov
stos
fmul
dec
movsl
adc
add
dec
sbb
adc
jle
and
and
add
cmove
fistl
jbe
xlat
subb
scas
outsb
sub
fwait
call
nop
add
mov
loope
jno
pop
nop
dec
jle
xchg
or
pop
pop
xor
pop
in
lret
je
add
out
test
dec
mov
shll
pop
dec
cmp
pop
cmpsl
push
repz
ret
movsb
mov
shll
std
gs
add
mov
mov
xchg
sub
xor
sub
add
stc
and
loop
je
mov
shll
mov
movsb
xor
or
or
jns
pop
xor
xchg
mov
leave
shlb
fs
xchg
push
or
das
xlat
push
sbb
std
aad
xor
pushf
pop
push
jbe
push
jle
jne
pop
mov
int3
pop
gs
sub
jb
sarl
push
jb
je
jmp
int
sub
mov
add
gs
int3
out
aas
rorb
scas
push
mov
or
push
xchg
iret
pop
addr16
mov
pop
and
pushf
data16
push
aaa
lock
jl
pop
inc
pop
pop
xchg
mov
test
xchg
mov
add
mov
cmp
rolb
push
stos
cmp
repnz
or
sahf
clc
mov
loop
std
push
adc
stos
pop
in
and
push
fiaddl
sbb
sbb
in
or
bound
push
arpl
jmp
out
imul
add
popf
ds
loop
nop
push
orb
icebp
std
cwtl
mov
or
mov
sbb
add
stc
adc
cmpl
adc
jecxz
subl
sbb
js
dec
enter
mov
or
pop
or
inc
xor
loopne
pushf
pop
or
xchg
sub
add
mov
xor
or
pop
sub
cwtl
add
pop
test
xchg
mov
dec
out
jp
cmp
int
test
dec
mov
dec
pushf
push
sbb
fndisi(8087
outsl
jae
fistpl
pop
imul
xchg
lock
rcl
or
and
pop
call
push
sbb
and
stos
call
xor
aas
js
xlat
cmp
and
or
mov
dec
movsl
test
and
cmpsl
adc
std
lret
and
insl
addr16
imul
shll
out
push
or
inc
pop
push
sbb
negb
insb
mov
cmpl
cmp
xchg
pop
sbb
lcall
dec
xchg
jns
jge
arpl
lods
rcll
pusha
pop
int3
and
cli
les
int3
dec
shlb
pop
cmp
lret
std
stos
cli
cmp
push
mov
stc
int3
cmc
push
cmp
imul
or
adc
cmp
js
fiaddl
push
fmuls
or
insb
arpl
sarl
repz
jne
or
xchg
push
in
ret
or
sbb
and
iret
cmpsl
fnsave
cltd
and
mov
sub
scas
loop
inc
shll
mov
cmp
xchg
xrelease
and
icebp
add
ret
jle
mov
adc
in
outsl
movsb
out
mov
mov
dec
dec
out
xor
sbbl
out
jle
test
push
cmp
adc
cmpsb
stos
inc
mov
jne
repz
mov
flds
sbb
int3
test
arpl
outsl
shll
adc
adc
jbe
cmp
dec
sub
add
xor
scas
cs
lcall
pusha
stos
pminsw
adc
pushf
pop
adcl
dec
lock
inc
hlt
shrb
or
xchg
dec
mov
mov
popa
xor
add
push
push
jge
ror
leave
push
insl
ljmp
pop
sti
loop
adc
or
rorl
lcall
pop
je
add
inc
fdivs
loop
insb
mov
fmull
pusha
pop
and
mov
outsl
jb
mov
imul
ret
ljmp
push
in
or
sbb
mov
sbb
mov
cmp
addl
mov
arpl
loop
adc
adc
adc
dec
pop
mov
jecxz
pop
mov
dec
jp
push
enter
stc
loope
lcall
rorb
loopne
out
pop
xchg
pusha
mov
sbb
idivl
xchg
push
lret
lret
pop
jo
sbbb
sub
test
pop
pop
int
sbb
xor
push
jbe
iret
mov
add
jmp
mov
ror
mov
cmp
push
icebp
mov
rcr
add
cs
push
inc
jo
dec
lret
fldl
cmc
ret
popf
add
cmpsb
repnz
sub
scas
xchg
iret
sbb
cmp
sbb
jmp
jmp
push
lods
and
dec
data16
lcall
shrb
fdivrl
popa
xchg
stos
imul
dec
add
xchg
jno
fdivs
pop
xor
out
sub
xor
mov
int
xlat
sub
iret
add
cmpsl
rol
mov
out
stos
sbb
jmp
dec
mov
jae
cmp
ss
ret
sbb
xor
ja
jmp
jge
mov
shll
mov
mov
stos
int3
orl
subb
cli
pop
xchg
idiv
xor
fwait
push
mov
or
jmp
adc
out
jp
pop
dec
lcall
and
jno
daa
pop
mov
das
stos
jecxz
push
cmp
dec
out
cmp
insb
push
insl
or
popa
cmp
push
sbb
inc
mov
mov
sbb
das
scas
pushf
ja
pop
test
add
mov
and
shrl
pushf
call
inc
sar
cmp
popf
in
insl
movsl
jbe
inc
inc
in
mov
dec
das
add
push
cmp
aas
mov
xor
inc
fsubrp
mov
daa
cmp
cli
inc
push
shlb
pop
outsb
add
xor
aad
aam
scas
mov
push
mov
hlt
pusha
popa
mov
add
in
je
and
pop
sar
adc
jbe
mov
mov
jg
imul
push
sbb
pop
cs
aad
aad
or
out
xor
xor
ja
out
das
or
xchg
push
add
or
ljmp
xchg
adc
lahf
lret
sub
add
push
rcl
lcall
insb
mov
testl
roll
jns
das
test
mov
add
outsl
jge
or
gs
xchg
dec
pop
sbb
imul
add
shlb
push
std
inc
js
cmp
mov
pop
xchg
sub
sbb
mov
out
testb
cli
sbb
out
jns
xchg
mov
ds
leave
divb
mov
mov
bound
jmp
jge
je
int
dec
aad
fidivrl
and
sub
lahf
sahf
dec
mov
or
xchg
subl
xchg
aam
mov
mov
fldt
pop
push
mov
in
lods
mov
rol
int3
insb
dec
add
mov
sbb
push
and
sbb
imul
orl
xchg
lods
sbb
mov
cwtl
mov
or
aas
inc
int3
ja
cltd
jle
jge
mov
xchg
movsl
xor
cmp
inc
cmpsb
push
aas
jge
mov
loope
cmpsb
pop
sub
xchg
add
cmc
clc
push
cmpsl
fnstcw
gs
jae
roll
iret
adc
dec
scas
divl
mov
daa
add
and
fwait
test
fs
jl
mov
inc
loopne
lds
in
mov
add
mov
movsb
sbb
mov
mov
outsl
adc
xchg
sub
cmp
sub
push
popf
jge
mov
inc
aaa
mov
or
sahf
les
aad
pop
repz
out
mov
and
aas
inc
das
in
aas
es
out
in
testb
dec
and
insl
int
push
aaa
dec
test
and
stos
xchg
hlt
mov
test
or
in
loopne
mov
mov
adc
jl
enter
cmp
lods
pop
jge
sbb
lahf
popf
out
sbb
push
push
ja
out
call
insb
sub
jl
call
dec
add
jo
jo
pushf
cli
arpl
outsb
shrb
jne
cmpsb
mov
ret
fiadds
and
imul
xor
xchg
sub
or
ret
and
cmp
lods
inc
adc
mov
daa
in
jbe
jp
cmpsb
inc
mul
ret
test
mov
sti
or
inc
gs
mov
mov
or
test
cli
xchg
adc
or
dec
ds
call
jbe
hlt
jg
test
add
lret
adc
xchg
hlt
mov
idivb
shlb
sub
pop
scas
pusha
sub
cmp
scas
insb
es
addr16
push
add
ds
mov
dec
inc
cmpsb
fstpl
mov
ljmp
sbb
mov
pop
xor
jo
sub
orl
mov
data16
addb
rcll
xchg
adc
or
jnp
cmp
mov
xor
outsl
jle
mov
xor
ds
mov
jmp
pop
shlb
cld
cld
push
cltd
jmp
es
or
push
lret
inc
fadd
add
mov
dec
add
push
sbb
fsubr
mov
pushf
mov
inc
fs
js
das
repnz
xor
nop
enter
push
cli
mov
mov
push
lret
and
cmp
loopne
mov
out
cmp
ret
int3
add
fwait
test
pop
fildl
insb
fdivs
xchg
and
fldcw
or
and
cld
and
cwtl
je
in
jne
xchg
je
xor
mov
scas
mov
push
jbe
sub
mov
pop
arpl
mov
incl
sbb
pushf
jl
jno
insl
out
stos
cmp
xlat
gs
cli
jp
xor
mov
aad
mov
xor
mov
mov
cmp
adc
mov
daa
divb
ret
scas
dec
rcr
sub
scas
sub
xor
mov
aad
adc
jo
repnz
lahf
mov
test
std
loope
or
outsl
ljmp
cmpsb
lea
sbb
out
orb
dec
jp
push
fwait
mov
in
je
loopne
test
cmc
inc
cltd
daa
sti
addr16
pushl
sbb
xchg
lock
mov
jb
xlat
mov
repnz
cwtl
xchg
loope
icebp
test
adc
push
iret
pop
jno
pop
cwtl
mov
fwait
pop
in
je
cmp
jecxz
xor
pop
in
sub
xchg
push
insb
fnstcw
in
cmpsl
jecxz
ds
push
aaa
icebp
or
notb
lahf
in
nop
inc
add
push
mov
into
test
and
sbb
lret
lcall
push
movsl
sahf
nop
enter
jo
loope
xchg
jg
das
pop
mov
jg
push
mov
rolb
add
les
fidivs
cmp
filds
sub
xchg
mov
or
aam
in
es
mov
icebp
jnp
shr
data16
jp
add
ja
addr16
loope
inc
pop
aas
popf
or
popa
aad
call
inc
mov
aam
je
lock
or
push
push
sub
sub
inc
jne
inc
xor
mov
pop
pop
sub
add
dec
ficoml
xor
dec
cmp
or
rorl
push
add
add
in
ficomps
enter
dec
test
loopne
pop
iret
insl
xor
inc
jp
inc
lods
push
icebp
jo
iret
vpminub
jno
add
sahf
xlat
push
xchg
fmul
mov
jmp
mov
data16
mov
mov
in
pop
mov
sub
pop
and
and
sub
pop
push
pop
push
cli
aas
push
out
cwtl
dec
sbb
fisubrs
and
jecxz
sahf
out
popa
icebp
test
subb
in
xor
cmpsl
jle
and
sub
add
add
sar
incl
popa
xchg
mov
mov
mov
fwait
mov
cld
lret
fisubs
loop
mov
cwtl
shr
sub
shl
rcl
popf
rolb
or
in
pop
fdivrs
xchg
testb
in
pop
pop
add
sub
int
add
dec
mov
ja
jo
or
fdivrs
pop
lretw
xchg
jns
lahf
mov
inc
hlt
xchg
repnz
clc
or
and
add
push
shl
mov
lds
mov
nop
imul
mov
xchg
stos
push
mov
lea
pop
jg
push
lcall
in
sub
test
xor
aad
sbb
fstpt
dec
add
mov
mov
fimull
sbb
fisttpl
or
inc
shl
or
push
xchg
jne
pop
ss
adc
or
xor
movsb
cwtl
mov
push
or
arpl
add
mul
inc
and
rolb
outsl
out
jnp,pn
xor
lock
pop
jle
add
pop
adc
push
adc
or
pushw
aaa
data16
add
mov
inc
adc
inc
imul
cmp
sbb
loope
inc
xchg
das
adc
xchg
push
stos
inc
mov
pop
mov
bound
jmp
mov
pushf
xchg
sti
repnz
bnd
push
out
xchg
arpl
aas
dec
sub
mov
push
shrl
mov
in
das
xor
or
cmc
pop
dec
xchg
push
ljmp
data16
adc
sbb
dec
leave
lret
mov
sbb
sub
leave
test
stc
in
pop
push
pop
sahf
cmc
data16
repz
push
and
pop
add
cli
xchg
jae
adcb
sar
repnz
cwtl
dec
into
lods
mov
sbb
jae
jbe
dec
mov
and
cmp
fisubs
mov
add
in
mov
xor
int
cmp
jle
cld
or
dec
dec
xchg
or
lods
pop
popa
js
mov
mov
add
xchg
test
mov
push
or
icebp
xor
mov
sub
pop
iret
xor
mov
pop
xchg
je
mov
push
inc
repnz
cld
inc
div
mov
xlat
cs
and
inc
ds
lahf
mov
adc
xchg
sub
adc
jmp
jb
pop
pop
cs
mov
test
test
sbb
adc
jp
std
inc
push
sub
mov
or
push
and
cmp
movsb
bswap
sbb
dec
sarb
lret
fildl
enter
sti
dec
xlat
outsb
sbb
mov
jmp
add
in
sub
jbe
cmp
jns
repz
xchg
inc
aaa
ret
sub
mov
pusha
xchg
rcrl
jg
mov
pop
call
cmp
fs
lret
dec
insb
xchg
out
popf
adc
imul
mov
cltd
cli
cmp
add
icebp
imul
adc
negl
out
orl
aam
xchg
aaa
stos
jne
fidivs
adc
and
loopne
dec
inc
scas
sbb
mov
jecxz
jne
call
fstl
or
jp
add
stos
test
pop
icebp
jl
out
mov
icebp
stc
adc
or
cld
mov
push
movsl
mov
in
mov
mov
cs
mov
insb
out
mov
js
cltd
push
lds
xor
cmp
and
cli
add
data16
pmaxsw
int
and
inc
dec
sub
fs
jecxz
jbe
push
fs
inc
sahf
aam
jge
daa
lahf
and
xchg
xor
lahf
inc
xchg
xchg
rep
dec
rcll
adc
rcrl
sub
lods
jg
es
decb
ljmp
mov
sahf
fstpl
rcl
mov
xchg
adc
in
add
lea
adc
push
jg
jno
sahf
inc
test
pusha
ret
pop
rcll
in
jno
loop
nop
dec
rolb
pop
clc
mov
adc
imul
and
sbb
cmc
in
adc
inc
cli
cmpsb
addb
sbb
setbe
dec
sahf
out
das
xchg
out
cltd
cmc
das
mov
int3
mov
test
sbb
xchg
and
lret
pop
mov
xchg
inc
lret
mov
jle
push
push
imul
jmp
cmp
push
pusha
lret
pop
sahf
jno
repnz
jg
dec
hlt
inc
mov
movsb
push
daa
cmpsl
daa
add
outsb
dec
jmp
fcoms
sub
dec
sahf
inc
outsl
cmpsb
stc
movsb
les
call
js
mov
jg
push
mov
jle
and
js
add
or
enter
imul
test
mov
push
and
popf
and
stos
cmpsb
cmp
clc
outsb
jle
inc
mov
out
xlat
fisttpl
pop
adc
in
dec
and
int
cli
mov
sub
pop
jne
sub
fistps
into
jmp
jbe
and
sahf
cmp
xchg
scas
pop
mov
ret
es
js
fbld
pop
daa
iret
sbb
mov
mov
cs
and
jl
add
pop
sbb
in
scas
gs
out
dec
or
lock
jmp
sti
sahf
dec
notb
lock
sbb
es
cs
insb
leave
xchg
and
jne
scas
js
dec
push
push
cmp
daa
adc
outsb
adc
xchg
lcall
inc
fcoms
jmp
xchg
ret
insb
popa
sub
xchg
loope
sub
push
jmp
mov
je
in
add
cs
cld
add
int3
adc
gs
aam
mov
inc
das
push
lcall
test
cld
xchg
aad
in
or
add
je
rol
cltd
inc
cld
adcb
addr16
pop
xor
jle
pusha
rcrb
lods
fwait
or
cmpsl
mov
outsb
jae
stc
dec
or
sub
dec
rolb
call
mov
xchg
jg
and
pusha
ret
mov
push
cld
test
push
pushf
cmpsl
ja
out
mov
aam
lds
or
cmpsb
pop
sbb
frstor
lcall
or
clc
loopne
sub
mov
inc
pop
sbb
and
inc
rorl
in
das
imul
pop
inc
cmp
rorb
mov
mov
mov
pop
lret
push
xchg
cmp
cmp
cli
fdiv
in
add
push
push
sub
std
pop
mov
shlb
push
pop
movsl
push
loop
cwtl
shlb
inc
je
mov
call
ficoms
pop
test
jbe
movsb
and
pcmpeqd
lods
enter
pop
cmp
gs
test
test
outsl
lret
adcl
pop
dec
ljmp
sbb
or
addl
xchg
sahf
daa
add
push
cmp
pop
xchg
inc
mov
test
push
mov
sbb
sbb
and
cmp
dec
mov
cli
int
cmp
pop
and
add
pop
fmull
sahf
or
push
add
or
out
popl
inc
outsb
sub
fidivrl
jno
cmp
testb
stc
les
cs
rcll
jnp
push
sub
xor
jb
jns
movsl
ds
xor
pop
pop
or
fsts
mov
inc
movsb
lock
arpl
xor
addb
addl
pop
push
add
into
cmpsl
test
mov
mov
or
sub
sbb
mov
mov
push
fsubrs
sub
scas
push
push
les
fadds
jl
xor
sbb
pusha
adc
push
cmc
and
mov
cmp
sbb
mov
mov
dec
sbb
scas
sub
or
rcll
adc
outsb
divb
sub
stc
pop
push
push
jmp
push
xor
loop
lret
sub
imul
sarl
mov
mov
test
in
repz
jne
movsb
loop
pop
cmp
outsb
enter
mov
jmp
mov
xor
fdivrs
cmc
add
inc
scas
in
lahf
xor
rcrl
xchg
fs
add
lahf
or
aas
sahf
cltd
test
mov
cmp
adc
int3
push
mov
sbb
movsl
cmp
clc
mov
mov
popf
push
add
add
test
and
xchg
xchg
out
and
pop
ss
mov
sahf
cmp
xor
and
adc
sbb
inc
adc
pop
inc
scas
ret
dec
sbb
imul
adc
sbb
cli
jbe
mov
sbb
lahf
sbbl
cld
test
das
xor
fdivr
xchg
dec
cmp
subb
mov
inc
mov
dec
rorl
lea
sbb
shrl
loopne
cmp
cmp
lahf
xchg
cmp
and
int
adc
mov
dec
jns
movsb
mov
inc
or
mov
call
lcall
jno
sbb
mov
jnp
push
mov
outsb
pop
cmc
lahf
xchg
mov
xlat
lret
addr16
cmpsl
add
inc
mov
pop
mov
fisubl
add
or
in
and
and
movsb
sub
mov
xchg
out
out
out
dec
inc
push
dec
les
movsl
gs
fstpl
adc
sbb
imul
adc
loopne
mov
jno
cmp
arpl
xchg
mov
ffreep
sbb
mov
add
dec
mov
sti
cs
or
inc
mov
jecxz
jo
mov
push
scas
icebp
add
jmp
shlb
xor
or
les
fwait
and
cmpsl
dec
fmuls
jb
push
pop
test
inc
gs
fst
xchg
out
ja
mov
xchg
movsl
or
je
inc
les
mov
push
sub
jne
pop
mov
cmpsb
xchg
sti
dec
dec
push
jle
imul
and
push
jmp
push
mov
xchg
push
ljmp
rorl
jg
adc
test
ds
xchg
or
jne
rol
lret
push
movsb
out
js
nop
fcoms
dec
sarb
mov
xchg
cmp
aas
mov
icebp
pop
xchg
sub
mov
pushf
std
add
cmp
div
cmp
add
fstps
add
jp
xor
mov
cld
movsl
jle
pop
cld
pop
pushw
jg
jle
and
decl
add
into
push
mov
and
xchg
in
adc
jp
int3
jb
sarb
hlt
sub
enter
dec
repnz
dec
mov
fcoms
inc
dec
add
test
scas
jecxz
xchg
xchg
pop
mov
xlat
mov
stc
mov
add
imul
push
test
mov
js
sub
test
dec
in
adc
jae
inc
jns
pop
mov
or
das
nop
pop
ljmp
aam
hlt
sub
dec
push
cltd
addr16
lock
and
and
fyl2x
sti
lret
leave
pop
pop
push
iret
dec
dec
mov
inc
daa
add
ret
and
add
xor
loop
add
addl
test
out
xor
lea
fwait
jo
pop
in
xchg
and
push
mov
push
mov
rcll
xchg
mov
jb
subb
xchg
and
lds
daa
aam
scas
xorl
cs
add
lret
pop
jecxz
jge
pop
fstpl
or
pop
mov
aaa
and
pusha
inc
jns
pop
andb
ret
pop
mov
gs
jne
movsb
add
dec
dec
dec
mov
xlat
sbb
call
lret
inc
inc
xor
inc
out
outsl
test
rcrl
jo
cmp
inc
incb
cmp
xor
xor
inc
pop
sbb
nop
and
sub
out
dec
cmp
mov
fldenv
incl
notl
mov
mov
and
adc
or
add
add
enter
sti
lret
test
flds
ret
dec
call
add
rcrb
rcll
cmp
xor
andb
movsb
pop
jae
cmp
imul
lods
pop
add
insb
lret
in
or
dec
in
fwait
popa
addb
mov
and
fists
or
push
jge
inc
mov
rcrb
cmp
sbb
call
jge
mov
pushf
aad
mov
loopne
sub
out
hlt
xor
sub
dec
popf
shll
mov
or
in
outsl
leave
pop
les
in
rorl
mov
lods
dec
or
xlat
andl
jl
sbb
jl
enter
pop
jno
push
jns
xor
pop
cmpsl
push
out
push
pop
dec
xlat
lret
test
hlt
imul
hlt
jae
push
sub
ds
or
cli
and
cwtl
sub
jnp
test
xor
std
pop
movsl
repnz
and
stos
mov
lcall
out
xor
inc
ljmp
mov
cwtl
movsb
jne
mov
aad
or
aas
fiaddl
decb
inc
mov
cs
mov
pop
add
mov
jbe
and
movsb
int3
daa
pop
add
movsl
addr16
xchg
cli
adc
xchg
sbb
sub
sub
sub
xchg
sbb
adc
stos
mov
loopne
dec
testb
mov
adc
mov
push
dec
fucomip
mov
xlat
mov
lahf
mov
mov
insb
sbb
sub
inc
pop
dec
push
stos
fs
aad
icebp
mov
xor
push
inc
test
xor
or
popa
sbb
xchg
gs
adc
call
or
jns
fnstsw
lea
pop
dec
pop
pop
insl
pop
out
ja
in
or
fsubrs
push
xor
sbb
mov
mov
in
fs
xor
int
repnz
outsl
and
sbb
cmp
sbb
bound
mov
cmpsb
repnz
inc
cli
inc
imulb
lods
mov
mov
scas
jge
adc
adc
cs
push
shr
adc
stos
mov
sbb
repnz
inc
push
push
fisubl
es
pop
es
push
mov
mov
test
mov
daa
dec
pop
iret
or
mov
and
inc
loop
pop
inc
dec
xchg
xlat
les
push
mov
dec
scas
mov
and
inc
cmpsb
pop
or
addr16
push
pop
dec
mov
call
lret
adc
push
js
cli
adc
cmp
movsl
mov
xchg
jae
adc
out
inc
xchg
addr16
insl
add
aaa
sbb
lds
adc
cld
cmp
lret
stc
mulb
mov
and
push
mov
pop
loop
push
add
dec
movsl
jmp
scas
int
sub
pop
push
push
inc
ljmp
test
jmp
inc
sti
lock
cmc
sbb
cmp
sbb
addb
loopne
test
cmp
pop
cmp
fidivrl
fstps
sti
nop
and
xor
cli
sbb
icebp
adc
test
pop
pop
fs
in
adc
push
push
xrelease
adc
sbb
inc
push
iret
scas
cmp
xor
pop
xchg
rorb
nop
adc
iret
cmp
insb
dec
cmpsl
fstps
inc
cmpsl
or
and
sub
mov
xor
push
fstps
out
sahf
jmp
ja
out
and
mov
adc
insl
repnz
and
jo
xchg
mov
xlat
imul
mov
dec
imul
lcall
ret
pop
inc
ljmp
jnp
iret
pop
fisubrs
jae
or
js
aad
jae
mov
out
arpl
sti
or
push
mov
cmpsl
loope
pop
aam
ja
push
fadd
rcrb
pop
and
nop
sub
jecxz
in
and
out
sub
adc
data16
ds
xorb
call
cmpsl
xchg
and
mov
and
mov
mov
add
mov
push
add
imul
std
adc
dec
lahf
popa
xor
dec
sub
jecxz
addr16
sarl
sub
jg
mov
fisttpll
xchg
mov
shll
fstps
lock
ret
dec
fimull
mov
loope
mov
push
and
pop
pop
dec
stc
aaa
push
fsubrl
cmp
ror
imul
push
jne
push
jl
iret
jo
push
movsb
lods
push
ljmp
gs
ja
adc
xchg
cmp
fdivrs
sub
push
pop
sbb
push
in
imul
jmp
xor
jns
cmc
push
ret
jo
inc
dec
adc
int
insb
cmpsl
xchg
xchg
mov
xorl
sbb
xor
pop
fnstsw
mov
movsb
or
cmp
scas
jae
and
mov
sub
mov
scas
pop
xchg
andb
jl
sub
push
int
or
mov
xor
mov
push
sub
mov
pushf
test
in
ljmp
adc
mov
cltd
xchg
jns
inc
std
xchg
int
pop
mov
in
xchg
xor
fisubrs
divb
stc
or
jg
dec
xor
std
outsb
add
int
cmp
jmp
cmp
add
repz
jmp
adc
add
es
imul
push
sub
lret
add
stos
jle
fsubr
sahf
push
push
lret
pop
xchg
fildll
orl
dec
shlb
icebp
mov
pop
shrl
dec
or
in
cwtl
insb
cs
js
scas
lock
sub
dec
mov
sbb
or
shrl
push
pop
dec
push
jmp
add
jp
loop
mov
outsl
add
add
sbb
or
mov
dec
cmp
sub
fstp
repz
cmp
or
push
mov
jecxz
push
push
cmpsl
cli
jo
pop
nop
sbb
push
insl
sbb
xchg
adc
cmp
inc
insl
add
xchg
ja
jmp
jle
push
cmp
xchg
repnz
jg
enter
fidivrl
stos
test
sub
aam
or
in
pop
test
in
inc
mov
dec
xor
mov
jecxz
jno
out
xor
lret
mov
inc
out
push
push
and
and
sbb
jge
xor
sti
xchg
push
dec
and
sbb
sbb
int3
clc
in
int3
testl
loop
int
dec
pop
dec
movsb
inc
mov
rclb
mov
push
ss
inc
jl
push
and
notl
mov
and
inc
je
sbb
adc
push
push
into
mov
dec
add
xor
xchg
xchg
jbe
mov
xchg
ror
and
aaa
fsubl
pop
out
add
jge
addl
mov
in
xchg
lds
add
cmp
out
test
ret
pop
aaa
mov
andb
jae
das
dec
das
inc
cmpsb
popf
sbb
cs
imul
sti
cs
jle
shlw
push
aam
jmp
fisttpl
outsl
push
insl
inc
jl
imul
test
push
push
push
mov
add
jecxz
jecxz
lcall
lret
xor
mov
stc
sbb
jne
in
mov
xor
pushf
scas
mov
scas
cltd
arpl
xlat
xchg
or
push
dec
orb
xchg
push
jmp
pop
fcompl
and
int
rol
sbb
pop
lea
aas
push
push
cmc
push
xor
insl
fisttpl
iret
loopne
xchg
movsb
dec
sbbb
mov
mov
add
xchg
lret
movsb
xor
adc
mov
adc
cli
mov
inc
insl
test
pop
mov
dec
insb
mov
sub
seto
sbb
push
cmp
add
xor
push
das
je
ret
jge
mov
ss
xchg
adc
push
xchg
out
push
inc
daa
inc
cmp
hlt
dec
pop
arpl
fwait
daa
out
stos
xlat
aas
movsl
mov
add
fisubl
jmp
data16
ljmp
sbb
pop
jo
sti
in
pop
frstor
inc
dec
inc
fadds
or
out
push
xor
mov
xor
lret
push
cltd
loop
push
sub
xor
push
add
sub
fiadds
inc
push
imul
scas
cmp
pop
add
out
add
mov
enter
xor
xor
daa
and
subb
jg
fmul
insb
clc
pusha
lcall
addr16
aad
mov
sbb
sub
dec
stos
or
outsl
mov
repz
or
daa
lds
movsb
shlb
jnp
das
xchg
call
push
data16
push
roll
int
testl
xor
pop
mov
dec
cwtl
enter
add
repz
inc
mov
xchg
cmpsb
scas
push
lcall
repnz
out
cmp
xor
xlat
enter
adc
sub
insb
lock
inc
sub
mov
bound
sub
cmp
mov
rorb
cwtl
jno
in
rcrl
cmp
int
push
mov
int3
mov
loopne
sbb
std
stc
sbb
pop
mov
xor
and
jge
inc
add
add
xchg
pusha
mov
xor
mov
outsl
push
mov
sbb
cmp
testb
outsb
inc
loop
or
dec
dec
xchg
mov
gs
out
arpl
imull
pop
and
jl
push
sahf
mov
mov
movsl
pusha
adc
pop
mov
enter
cwtl
sbb
sbb
xor
movsl
mov
add
jno
or
cwtl
in
aas
repz
xor
ja
xor
jl
mov
fisubs
mov
push
loope
pop
mov
call
aaa
scas
aas
push
adc
std
cmp
pop
or
jbe
lcall
test
cmp
dec
mov
mov
pop
cli
push
cltd
cmpl
hlt
nop
les
sbb
bound
daa
loop
and
pop
imul
shlb
pushf
rol
addr16
fwait
je
fstpt
push
push
in
in
cmp
jbe
mov
loopne
sub
dec
push
pop
xchg
lock
adc
aad
sbb
dec
push
test
inc
xor
mov
outsb
xor
dec
into
mov
adc
insb
xchg
gs
leave
outsb
push
insl
fidivl
in
call
ror
shrb
add
pop
int
testb
in
lahf
in
add
clc
mov
stc
xchg
cmp
mov
cmp
vpaddd
hlt
out
or
and
or
or
pop
leave
sub
cltd
ret
in
pmaddwd
lds
push
xchg
xchg
adc
mov
enter
cmp
lret
or
loope
imul
push
sahf
or
mov
sbb
sub
int3
aaa
pop
out
inc
fisttpl
icebp
cmpsl
rcrb
fwait
fwait
shl
adc
enter
inc
xor
mov
mov
dec
cltd
jge
cs
in
and
leave
push
sbb
aad
out
repz
js
jle
rorl
gs
jno
fldcw
scas
stos
pop
daa
xor
add
in
xor
test
adc
xchg
in
jp
mov
jo
push
xchg
sbb
cmp
pop
xchg
lods
aad
ret
sbb
iret
nop
xchg
out
or
add
xor
ja
es
lcall
adc
insb
inc
or
enter
mov
nop
mov
sub
sbb
mov
das
in
add
lret
push
ja
xor
xchg
xor
dec
mov
dec
cmpsl
push
aam
xchg
fimuls
ret
jg
arpl
mov
pop
jne
je
fldpi
icebp
ret
into
pusha
inc
fisttpl
imul
int
test
sbb
push
mov
data16
push
aas
jbe
push
jecxz
jnp
pop
sub
cmp
fcoms
jb
or
cli
xor
imul
jecxz
push
lret
mov
inc
mov
cmp
in
es
rcll
das
arpl
mov
pop
adc
fcomp
cmpb
mov
pop
stos
shlb
lret
repnz
jmp
or
xchg
xchg
leave
daa
dec
idivb
lret
lcall
dec
inc
sub
in
arpl
mov
cld
cmpsb
and
adc
cmp
mov
std
shrb
xlat
outsl
sti
daa
pop
xchg
sbb
ret
pop
cmpsb
loopne
call
ds
arpl
push
cmpsl
es
inc
mov
aaa
lock
xchg
fsub
jge
jae
cmpl
pop
push
inc
mov
jo
add
or
je
jge
icebp
dec
sub
jl
sub
imul
sbbb
push
jne
in
add
subb
insb
xor
fistl
data16
push
adc
mov
imul
loop
mov
repz
daa
lahf
in
push
pushf
aaa
lds
add
lods
int
cmc
in
xor
cmp
fwait
inc
rclb
iret
pop
fisubrs
aad
dec
insb
inc
fildll
pop
fcompl
stc
jge
lahf
ret
scas
mov
cmp
daa
pop
test
fwait
loop
es
rcll
test
in
movsl
insl
adc
xor
adc
stos
push
jmp
daa
xchg
sub
hlt
cmp
jge
or
ds
xchg
lods
pushf
adc
mov
add
inc
decb
fmull
sbb
je
inc
dec
mov
outsb
xor
dec
and
das
xchg
xor
xor
push
jecxz
and
adc
dec
fdivl
js
out
stc
push
push
add
out
repz
mov
xchg
sbb
adc
add
pop
enter
sar
and
xor
out
mov
cmp
jne
aam
xchg
int
lds
push
xchg
sbbl
insl
xchg
sbbb
fisubrs
aam
shr
dec
mov
mov
push
sub
hlt
aas
dec
mov
or
jo
sahf
out
movsb
fs
mov
mov
cld
lds
and
in
in
add
incl
push
imul
roll
lcall
std
and
and
inc
pushf
xor
push
mov
fs
orb
js
testl
ret
and
fwait
xor
mov
pop
ja
insl
mov
test
push
mov
int
pop
cmp
mov
or
shlb
sarb
push
cmp
test
sti
dec
loope
aaa
xchg
mov
cmpsl
ljmp
cmpsl
dec
aam
jg
ret
sub
pop
pop
xchg
sbb
xor
xchg
jns
xchg
gs
cmp
adc
add
or
rolb
sbb
cmpl
scas
std
and
mov
inc
adc
adc
ss
iret
inc
rorb
mov
lret
inc
loop
icebp
sbb
pop
add
insl
out
aas
pusha
iret
xchg
shl
cmp
push
push
adc
mov
push
sti
lret
aaa
push
sub
push
cmpsb
orl
out
or
into
cmpsl
sbb
pop
add
jmp
mov
iret
push
push
cmc
inc
lcall
or
sbb
or
sub
adc
shll
push
inc
loope
mov
add
or
adc
mov
mov
stc
inc
scas
movsb
addb
dec
insb
mov
test
scas
lods
imul
test
out
dec
inc
les
lods
push
in
test
sbb
push
dec
jo
mov
and
add
cmp
scas
add
int3
clc
and
pop
repnz
iret
ret
inc
ss
into
mov
pop
inc
mov
cmp
adc
sbb
xchg
std
xor
and
inc
add
movsb
movsb
enter
je
xor
xor
inc
call
aam
lods
mov
rcl
lock
cmpsl
jo
hlt
inc
pop
into
pop
pop
cmp
lret
or
jns
lock
sub
clc
mov
pop
jbe
mov
cmpsb
out
sub
loope
and
lea
mov
mov
popl
sti
faddp
out
mov
mov
xchg
sub
jae
lret
sub
jo
call
mov
lods
je
lcall
jne
icebp
repz
cmpsb
cmpsb
sub
repz
in
iret
es
pop
sbb
mov
or
ja
outsb
push
pop
inc
cmpsb
loope
sub
inc
lods
out
jae
movsb
and
int3
dec
pushf
xor
mov
outsl
punpckldq
jnp
mov
fstps
rcl
and
and
xor
fidivrl
shlb
jge
shlb
jno
dec
push
int
xchg
xchg
jnp
stc
bound
rorl
movsb
jecxz
popa
pusha
lret
pop
stos
pop
les
aad
mov
adc
mov
sarl
xchg
lahf
insb
je
aad
pushf
and
push
repz
jl
test
pop
adc
gs
push
mov
inc
scas
addb
dec
lcall
cli
push
ljmp
fsubl
pop
fildl
or
and
sahf
dec
and
sahf
ss
das
pop
icebp
mov
mov
mov
mov
mov
out
shlb
or
repnz
adc
xchg
xchg
out
inc
jnp
lods
sbb
mov
int
jne
xor
stos
pop
and
aad
sarl
push
in
enter
mov
xor
dec
pop
xor
or
notl
test
xchg
movsb
inc
sbb
testb
ljmp
fstl
daa
inc
sub
mov
ljmp
jle
cli
mov
adc
iret
pop
insl
iret
cld
ds
dec
cmp
fidivrl
into
jne
xor
mulb
xlat
movsl
aaa
push
dec
xor
ficomps
xor
inc
orl
mov
test
xchg
movsb
es
push
movsb
push
push
jg
sarl
repz
add
cmpsb
or
lods
insb
push
dec
cmp
xchg
loope
jmp
xorl
les
or
xchg
jge
jle
mov
jo
or
sbb
fbstp
mov
test
mov
jp
jecxz
in
sub
clc
cmp
push
stos
or
mov
in
scas
in
xchg
bound
fwait
outsl
dec
sbb
pop
movsl
test
in
and
and
mov
fsubs
roll
loop
jns
cmp
hlt
adc
mov
lahf
loop
test
stos
or
cmp
ret
mov
mov
xor
sbb
xchg
dec
mov
jmp
pop
imull
sahf
aam
add
cmp
lahf
pop
push
lods
mov
dec
push
pop
or
mov
mov
jle
xchg
sub
lods
adcl
lds
ja
sub
testl
data16
sbb
inc
lea
bound
sub
aam
xchg
mulb
mov
fists
push
sarl
or
xchg
pop
mov
inc
test
push
ror
test
vpavgw
dec
dec
das
add
sbb
sub
push
xchg
push
inc
out
mov
cli
loop
push
mov
shlb
out
push
fdivrl
int3
pop
fsubl
and
lret
mov
and
xchg
push
add
lret
jne
adc
add
cmp
lret
mov
pop
stos
out
inc
jmp
jmp
jl
mov
fsub
push
test
stos
xchg
std
xor
mov
or
test
mov
xchg
add
iret
push
push
pop
jmp
cmp
lea
and
popa
cld
push
fsubr
push
or
pop
ljmp
aad
and
addl
andl
loopne
add
js
sub
sbb
and
sbb
and
add
mov
sub
lret
daa
xchg
enter
mov
lock
dec
mov
push
cmp
push
leave
inc
cmp
xchg
dec
in
cmp
js
movsl
xor
or
or
sbb
adc
imulb
enter
sbb
xor
ja
divb
add
popa
shrb
loopne
in
in
push
call
dec
stos
xor
jge
adc
test
adcl
bound
int
jp
cmp
adc
jl
sbb
dec
add
or
sub
mov
ja
dec
stos
or
xchg
mov
pop
aam
jp
adc
add
fucomi
movsl
pop
adc
sub
imul
fisubrl
arpl
fs
xlat
jmp
sub
cmpsb
mov
push
push
fstpl
add
scas
outsb
scas
xchg
adc
sbbb
cmp
mul
mov
xor
out
adc
mov
lods
nopl
out
shlb
into
cmpsl
scas
cmc
adc
and
or
fmulp
xlat
xchg
pop
and
or
pusha
mov
xchg
mov
lret
out
jmp
push
jmp
adc
popa
or
rclb
push
pop
aas
and
lds
inc
xchg
icebp
and
pop
jae
jmp
not
push
outsb
pop
or
scas
addr16
cwtl
es
call
adc
idivb
xlat
push
and
ja
adc
daa
mov
stos
pop
lock
movsb
jne
les
fst
rcrb
mov
into
jbe
inc
sub
push
int3
repnz
or
out
inc
mov
fisubrl
outsl
push
jae
push
dec
mov
mov
fcmovbe
lock
and
jmp
movsb
lock
adc
xchg
jge
xchg
sbb
gs
mov
int
or
jp
dec
mov
pmuludq
in
stos
adc
pushf
or
or
jns
lods
mov
adc
iret
hlt
pop
jne
ret
test
test
pop
cmp
sti
jle
mov
jecxz
clc
add
or
adc
test
cmp
sub
leave
je
mov
cmp
adc
mov
gs
pop
mov
addr16
xchg
loop
pop
out
adcl
out
lea
cmpsb
lock
hlt
bt
test
and
test
js
mov
out
cs
mov
imul
mov
fldcw
sub
shlb
into
cmp
out
sbb
adc
pop
fdivl
xor
xchg
xor
mov
popf
bound
les
lds
loopne
je
and
lods
test
pop
out
adc
add
cmp
push
xchg
add
dec
loop
push
loope
inc
addr16
in
add
jae
stos
dec
fsts
and
and
fs
push
dec
aam
loope
ret
pop
jno
jb
mov
outsb
pop
das
insb
icebp
js
jge
mov
jae
out
pop
jns
out
subl
push
xchg
fstpt
jns
testl
fldenv
and
inc
and
push
insb
mov
push
mov
std
xor
adc
enter
pop
loope
push
out
test
inc
addr16
imul
and
rcrl
mov
sbb
jnp
jl
sarl
lds
divb
sub
xor
fwait
xor
ffreep
into
push
push
and
imul
stos
and
pop
pxor
xor
mov
jge
adc
jmp
mov
xchg
cmp
mov
loop
loopne
mov
adc
addr16
loope
jae
movsb
pop
repnz
pop
cmp
dec
mov
pop
ss
insb
test
pop
lcall
jne
lods
cld
pop
adc
adc
je
lods
movsl
mov
lret
pop
add
or
je
imul
push
test
pop
mov
xor
adc
cmpsb
add
test
imul
icebp
cmpsl
sbb
ret
ret
add
inc
gs
and
dec
cmp
ljmp
add
insl
pop
xchg
imul
dec
lods
out
jge
movsl
sub
rcrl
mov
jae
popf
push
mov
psubusw
dec
push
xor
std
lret
mov
insl
pop
pop
sbb
das
addr16
add
outsl
pop
daa
scas
pop
pop
pop
sub
pop
jl
movsb
and
mov
mov
jecxz
adc
ret
cmp
loope
dec
add
dec
lret
push
and
and
fs
aas
shlb
js
cmpb
fsts
stc
dec
lret
addb
mov
cmp
xor
loope
shrb
pop
adc
scas
movsb
mov
cld
add
cmp
push
mov
mov
cmp
and
decb
pop
imul
nop
jge
dec
mov
cltd
int
jno
loop
mov
cmp
lret
push
sbb
divl
xchg
idivb
xchg
sub
pop
rcr
dec
aad
int
dec
or
mov
mov
out
adc
jl
std
xchg
adc
ljmp
je
rorb
jle
cmc
and
std
sbb
adc
loop
mov
aam
loopne
cmp
mov
dec
mov
std
lret
push
or
popa
ljmp
sahf
mov
add
cmp
or
mov
dec
push
add
or
xchg
ljmp
lret
xchg
sti
pushf
inc
loop
cmp
call
int3
mov
shll
push
mov
test
aad
int
mov
or
pop
xchg
in
sbb
jns
xchg
or
inc
lret
add
jge
or
icebp
lods
les
or
pop
push
pop
repz
sbb
mov
pop
cmp
jns
shrl
cs
test
out
clc
dec
inc
xor
lock
xor
filds
pop
in
mov
out
cmpl
incb
pop
inc
aam
mov
and
inc
push
cmp
std
push
adc
repnz
cwtl
and
cmp
and
nop
cmpl
push
mov
pop
popa
xor
dec
mov
repnz
sbb
mov
outsb
push
or
out
or
pop
lret
sahf
mov
cmp
and
push
pushf
mov
sub
cmp
inc
xor
repz
push
and
roll
sub
sbb
xchg
mov
inc
sub
cmpsb
push
mov
sbb
bound
ljmp
and
arpl
push
xchg
stc
and
pop
sub
daa
push
sub
lds
mov
cmp
jbe
daa
xchg
jae
jo
gs
mov
pop
addr16
sahf
repnz
pop
pop
mov
adc
shrb
or
or
lcall
das
test
sub
into
sbb
mov
push
fsts
test
call
mov
jnp
fcoml
pop
pop
popa
xlat
sbb
cmpsb
mov
movsl
ja
cmp
or
xchg
adc
lret
jg
mov
enter
cmpsb
adcl
clc
sub
lret
xlat
call
adc
add
int
test
aam
mov
addr16
ret
int3
xchg
ret
filds
dec
push
dec
fidivrs
xor
jmp
push
xchg
jmp
loop
jns
jb
inc
mov
sbb
jns
dec
in
scas
push
cmp
cmp
scas
pusha
push
shl
shl
xor
cmp
cmp
addr16
pushf
in
gs
scas
sub
movsb
aam
roll
or
sub
jle
daa
lods
outsl
stc
shlb
outsl
jg
pop
sbbl
cmp
jecxz
jg
fildl
aas
sub
cmp
jb
inc
mov
cmp
jle
subl
xchg
shrb
cmpsb
loop
in
pop
aad
movsb
les
rcrb
pop
je
and
mov
nop
ret
out
and
popa
nop
fisttpl
add
adc
aam
imulb
mov
xor
cmp
and
clc
cli
int3
rcr
mov
test
sahf
add
push
xor
sub
sub
push
jns
in
shll
sbb
pop
xchg
xor
jne
loop
sti
les
aam
sub
test
and
stos
lods
add
test
aam
sti
dec
mov
pop
push
add
mov
ss
xchg
push
ss
xchg
divl
push
cmp
xchg
data16
fdivrs
aas
hlt
jb
mov
test
inc
ljmp
ss
enter
negl
sbb
out
pop
dec
xorl
pop
mov
mov
into
and
jnp
sbb
ret
hlt
out
lods
cmp
arpl
jno
repz
add
push
dec
jl
sbb
lret
pop
push
jne
xor
sub
sahf
ss
in
ror
mov
out
push
mov
pop
xchg
jecxz
xorl
sbb
jb
inc
mov
jb
jne
sub
data16
jmp
pop
and
jbe
popf
mov
sub
outsl
lahf
mov
pop
or
pop
and
add
pop
push
ss
lods
and
nop
mov
pop
pusha
inc
jae,pn
repnz
mov
mov
mov
jecxz
xlat
or
lcall
inc
fmull
ret
pop
jnp
xchg
dec
stos
push
stos
movsl
lcall
push
test
hlt
xchg
enter
scas
cmc
mov
push
loope
or
les
and
inc
add
insb
jbe
aaa
push
pop
nop
mov
adc
clc
jno
or
incl
or
mov
bound
das
cmp
sti
pop
and
cmp
xchg
pop
test
stc
jmp
lea
bound
mov
add
lahf
clc
lsl
outsb
pushf
pop
mov
dec
push
lahf
addr16
data16
mov
or
sub
or
sub
sbb
mov
pop
iret
dec
jnp
sahf
and
xlat
daa
dec
mov
adc
mov
std
xchg
pop
ret
std
jmp
stos
fmulp
in
ret
dec
push
mov
inc
ja
nop
cmp
xor
sahf
outsl
loope
cmp
cmp
xchg
insb
mov
or
sub
jnp
bnd
dec
push
in
xchg
pop
lret
sub
arpl
fbld
pop
dec
sahf
push
into
add
dec
inc
pop
fisubs
adc
add
push
clc
addb
int
xor
and
add
xor
xlat
shrl
xor
and
clc
iret
test
cmpsb
push
out
movsb
add
scas
cmp
xchg
sbb
xchg
int3
in
push
and
jmp
int3
mov
fmull
rcr
inc
xor
pop
xchg
add
rcl
xor
test
or
push
aad
push
stos
lea
das
xor
lods
jg
nop
mov
inc
push
popa
cmp
xchg
bsr
cmpsl
mov
push
cld
mov
cmc
aas
out
psrlq
sbb
ret
popa
popf
mov
or
ljmp
ret
call
mov
arpl
call
sub
cmpsb
nop
cltd
ja
adc
loopne
cmp
xchg
test
xor
or
cmp
fnsave
das
mov
mov
enter
sbb
mov
xchg
pop
push
es
push
and
aam
out
lock
es
lods
and
adc
pushf
sub
jo
xchg
cmp
sbb
push
sahf
xor
call
add
stos
out
pusha
xchg
add
test
sub
fucomip
ss
push
jmp
push
das
mov
jle
inc
jne
xchg
bound
or
test
xor
xor
outsb
fdivs
sub
inc
outsl
mov
ficoml
loop
push
cmp
mov
in
scas
jbe
sahf
loop
mov
pusha
insb
jnp
inc
sbb
push
jo
lret
mov
stos
mov
and
pop
add
push
je
shll
loopne
cmc
jne
movsb
test
pop
out
fistl
outsb
push
in
insb
cmp
fldl
and
sub
or
pop
mov
fs
mulps
sub
lds
test
sub
in
scas
fisubs
push
enter
xor
loope
mov
adc
add
add
pmulhw
xlat
es
xchg
dec
sti
popa
jns
cmp
cmpsb
add
add
jne
gs
lds
shrl
and
out
xor
and
mov
pop
push
hlt
and
das
sahf
mov
fidivrs
adc
ljmp
mov
fucomp
xchg
les
cmp
cmp
sbb
and
das
xlat
in
adc
sbb
js
jae
icebp
das
xchg
xchg
addb
push
jmp
and
pushf
testb
mov
mov
cmp
shrb
pop
shlb
das
ss
mov
dec
aam
add
out
movsb
and
ss
sub
cmp
shlb
stos
sub
cli
movzbl
mov
or
mov
push
ss
in
dec
add
scas
xor
add
xchg
and
jge
cmp
dec
add
sbb
cmc
pusha
cmc
sub
enter
jo
adc
lahf
daa
das
insb
loop
sbb
lea
push
pusha
jp
sbb
and
leave
out
insl
repz
xor
mov
mov
bound
inc
add
shlb
push
dec
out
mov
fcmove
push
sar
cs
es
aaa
xchg
bnd
and
jbe
cmp
in
lret
movsl
push
or
in
fiaddl
lret
cmp
aas
mov
jo
lret
pop
mov
dec
loopne
mov
rcr
leave
mov
arpl
cltd
pushf
das
dec
mov
xor
loop
and
nop
mov
daa
lods
and
aad
mov
pop
jl
out
fdivrp
es
xor
lret
add
xor
mov
mov
jg
adc
outsl
xchg
int
lret
fcmovne
ud0
stos
movsl
add
cmp
jo
mov
or
out
mov
in
mov
in
sbb
xchg
dec
mov
data16
mov
pop
inc
fwait
add
js
clts
push
sahf
imul
push
scas
adc
test
fnsave
adc
adc
daa
into
sbb
insb
stos
add
repz
dec
jl
jne
xchg
fsubl
add
xor
jg
and
mov
xorb
arpl
pop
xor
ds
xor
mov
adc
lock
or
jno
callw
into
ret
enter
dec
dec
pop
jbe
mov
and
mov
inc
pop
jmp
repz
imul
jb
insl
push
jl
pop
jnp
shl
dec
sbb
mov
xchg
or
aad
fists
aaa
in
fnstsw
out
inc
scas
shlb
pop
call
jg
hlt
sbb
mov
int
lret
pop
pushf
sbb
iret
and
gs
jno
push
pcmpeqb
xor
sbb
loop
pusha
sbb
ljmp
fabs
jl
test
outsl
xor
mov
repz
ds
or
jl
adc
lcall
push
enter
cmpsl
out
mov
idiv
lock
mov
inc
insb
fld
fs
nop
js
leave
mov
jno,pt
jp
dec
sub
inc
insl
pop
cmp
pop
xor
sbb
cmp
mov
testb
sbb
pop
pop
repz
icebp
xchg
pusha
mov
fs
xchg
fmulp
fidivs
xchg
nop
mov
or
idivb
add
add
dec
adc
orb
and
inc
nop
mov
pop
add
pop
mov
das
ret
xchg
bound
sbb
testl
mov
lcall
sub
mov
mov
mov
push
in
clc
adc
adc
dec
mov
icebp
push
repnz
movsl
int3
pop
in
popf
adc
sbb
jnp
jbe
fidivs
out
dec
into
icebp
repz
aad
sub
add
test
cmp
jmp
or
ret
dec
call
and
dec
push
mov
je
ljmp
add
mov
movsl
sub
xor
jmp
xchg
data16
daa
cld
sbb
lods
fcomps
and
pop
stos
inc
sub
jge
in
or
mov
dec
and
push
cld
xchg
in
or
cmpsl
lret
call
adc
nop
addr16
mov
stos
inc
push
arpl
lea
or
jle
mov
and
decb
insb
bound
pop
lahf
les
xor
sub
clc
jnp
push
imul
adc
lods
pop
or
or
xchg
fisubrs
mov
mov
aam
imul
push
xchg
negb
jp
test
les
jp
outsb
and
iret
push
and
dec
and
in
sbb
inc
rorb
push
cli
aaa
aaa
addr16
cmp
imul
cmpsl
int
and
lcall
mov
out
int
clc
lahf
out
imulb
push
cwtl
mov
test
mov
lods
add
mov
xor
sub
inc
jmp
pop
nop
mov
pop
inc
repnz
in
lea
push
pop
inc
out
jbe
mov
jns
scas
inc
jbe
xor
in
xchg
rcrb
push
jecxz
data16
and
sub
dec
xchg
in
dec
push
fwait
jmp
pop
sub
mov
mov
mov
hlt
arpl
sub
ss
fs
loop
aam
xor
jle
scas
jge
lods
pop
ja
je
int3
nop
lcall
ja
pop
mov
roll
mov
les
pop
imul
jbe
nop
sub
je
lea
lock
es
jecxz
mov
push
stos
mov
loopne
xchg
imul
ljmp
jge
imul
cld
jle
xchg
pop
jbe
outsb
stc
rol
stos
test
push
lock
xor
test
roll
xchg
scas
adc
popa
movsl
and
js
ds
insb
sbb
cwtl
add
ljmp
sub
jl
jb
jp
sub
jbe
sahf
test
mov
adc
shrb
cmp
pop
push
stos
and
aaa
stc
add
fucom
clc
jo
adc
inc
sbb
dec
and
sub
push
and
nop
pop
mov
mov
int
lods
lret
mov
addl
sub
cmp
int3
sti
imul
lds
mov
mov
lock
adc
pop
setne
push
or
pop
stc
in
dec
mov
lock
mov
repnz
mov
cld
and
bswap
fwait
inc
inc
mov
sub
push
xchg
adcl
dec
add
cltd
jp
pusha
adc
pop
mov
mov
test
jge
jge,pn
test
ljmp
sbb
dec
inc
or
jl
mov
and
repz
mov
mov
pop
push
pusha
out
lods
xchg
and
xchg
decl
mov
test
ret
fdivp
or
jmp
imull
repz
dec
cmc
lret
scas
mov
adc
add
arpl
mov
sub
push
cltd
cmp
xchg
add
jl
iret
ss
cli
mov
sbbl
stc
push
cld
out
pop
out
or
bnd
xchg
pop
mov
sbb
sub
adc
xchg
sub
daa
ficoml
test
dec
pushf
or
lret
imul
dec
mov
add
mov
cmc
xchg
movsl
lods
push
push
das
mov
and
lock
cmp
imul
adc
stc
pop
inc
cltd
repz
sub
inc
dec
mov
inc
cmpsl
in
push
dec
iret
call
add
out
pop
addb
xor
pop
loope
mov
push
mov
ud0
sbb
push
idiv
scas
addr16
stos
add
xchg
fsubrl
push
fiaddl
out
in
loopne
cmp
mov
sub
pop
call
add
xlat
popf
cmp
or
in
mov
cli
mov
or
pushf
nop
out
sub
pop
movsl
adc
sub
ret
push
imul
shl
cld
xor
mov
fdivl
jmp
jecxz
out
cmp
push
fisubs
and
clc
rcr
nop
mov
mov
in
enter
jl
fcoml
mov
dec
xchg
in
dec
iret
lea
mov
jp
xchg
dec
inc
jae
mov
xchg
xorb
leave
lods
dec
pop
clc
fdivrp
or
jnp
testl
fcmovnbe
in
or
sbb
out
and
push
std
jno
out
lcall
xor
sarl
pop
lea
cld
pop
sbb
dec
inc
mov
scas
test
sub
out
out
cmc
cmc
cmp
lods
mov
pushw
fisttps
mov
or
cmp
jecxz
js
hlt
sbb
andb
xchg
add
mov
mov
sbb
lock
std
and
jge
rorb
xor
cmp
xchg
xor
jg
out
clc
and
xchg
in
sub
sub
dec
test
and
pop
aad
insl
scas
je
xchg
divb
sub
mov
mov
mov
enter
xor
fstpt
stc
and
mov
xor
orb
mulb
xor
mov
or
dec
mov
xlat
sbb
test
sahf
xchg
ja
testl
inc
add
mov
mov
sbb
inc
sub
adc
sbb
mov
aaa
xor
pop
test
ret
jbe
xchg
add
icebp
bound
icebp
jne
movsb
repnz
aam
jbe
in
sbb
push
xor
push
cmp
push
inc
out
and
add
mov
xor
popf
je
ljmp
inc
add
enter
cld
subl
imul
and
cmpsl
push
xchg
test
or
fidivrl
inc
dec
out
fidivrl
and
xor
inc
das
mov
lock
cmpsl
and
imul
dec
jle
mov
mov
les
jns
xor
add
mov
mov
fidivl
push
ljmp
xor
cmp
das
sub
or
inc
dec
mov
lcall
arpl
insb
mov
xor
insb
xor
or
call
insl
mov
xor
lret
cmp
sbb
add
pop
xor
jge
push
mov
cmc
jns
sbb
xchg
pushf
out
inc
sub
test
push
outsl
pop
hlt
inc
mov
pop
loop
mov
insl
mov
je
int3
cli
insb
shll
sub
push
loop
dec
xor
int
and
or
pop
xlat
mov
out
jno
xchg
jmp
xorl
xor
push
mov
xor
nop
filds
stos
add
push
adc
cwtl
xor
data16
mov
inc
frstor
pop
mov
out
mov
mov
jns
aad
jecxz
jnp
imul
scas
mov
sti
sub
jbe
and
cld
lmsw
aam
xchg
repnz
loopne
and
movsl
push
jecxz
push
mov
pop
hlt
xchg
in
hlt
jae
iret
add
adc
push
jne
jg
mov
repnz
sub
push
mov
pop
jmp
stc
adc
jae
jnp
ja
shl
sahf
xor
testb
loope
xchg
add
push
pop
cmp
add
scas
loopne
add
mov
inc
sbb
cmp
stc
pushf
jnp
and
mov
insb
dec
notl
shl
inc
out
cmp
dec
ss
repz
lock
dec
adc
cmpsb
push
push
jae
jb
ret
maskmovq
testl
push
push
adc
std
pusha
jmp
out
mov
test
jl
push
loop
mov
mov
pop
push
cmp
dec
loop
cwtl
xchg
mov
std
out
push
lods
in
cmp
cmp
dec
fidivrs
outsb
push
adc
enter
test
cmpsb
mov
ss
jnp
mov
push
xor
jns
call
cs
and
lods
data16
insl
inc
js
push
xor
jns
ret
add
je
pop
loope
lcall
or
cld
and
pop
jp
pop
scas
inc
add
idivb
repnz
pop
daa
pop
adc
mov
mov
rclb
add
inc
cmc
ss
cmp
sbb
loope
loopne
jge
cmp
lods
adc
xchg
jns
adc
loop
test
mov
jg
pop
jmp
xchg
mov
int
sbb
add
jecxz
adcl
fucom
mov
xchg
jecxz
dec
xchg
gs
aas
mov
shrb
js
andl
or
mov
mov
push
clc
data16
test
je
lods
insb
neg
sbb
jge
enter
jns
outsb
mov
movsl
push
pop
or
imul
dec
push
sbb
addr16
add
ss
xchg
insl
test
jae
stos
push
cmp
sahf
jnp
mov
imul
cs
fidivl
xor
push
outsl
sbb
or
mov
xchg
push
arpl
push
les
cmc
sti
jge
cmpsb
add
push
pop
sahf
sti
xchg
ret
popf
incl
out
loop
xor
cmc
dec
stos
stc
mov
sbb
in
adc
push
imul
add
lcall
jecxz
insl
mov
int3
mov
gs
mov
sub
jnp
insl
mov
fstpl
cmp
cmp
enter
xchg
xor
jbe
inc
jge
fwait
mov
push
sub
jne
mov
xor
lret
jmp
scas
mov
stc
and
push
xchg
lds
out
push
and
push
mov
ret
ljmp
loopne
sub
mov
cmpsl
pop
fdivrl
lret
push
or
or
loopne
mov
dec
hlt
add
pop
int3
scas
lods
insl
xchg
mov
jl
nop
push
fstpt
cwtl
movsb
jae
fldl
rol
xchg
ljmp
mov
orb
lret
adc
pop
pop
or
dec
cmp
jecxz
inc
cmpsb
pop
xchg
mov
lds
sbb
jge
std
adcb
lret
cmp
xor
add
push
jp
sub
stos
es
and
enter
mov
addr16
repnz
push
test
test
cltd
or
dec
mov
cli
xchg
xlat
cmp
out
mov
jnp
ret
add
and
jp
lock
fimuls
jg
sub
call
lahf
dec
icebp
enter
xor
jns
test
enter
and
jecxz
add
cmp
je
loope
inc
cmpsl
icebp
movsb
sub
shll
jecxz
imul
mov
pop
enter
ds
out
inc
mov
mov
scas
xlat
add
fildll
mov
or
lods
mov
lock
cmp
push
add
out
jno
scas
pop
adc
adc
mov
sahf
mov
aam
andl
movzwl
pop
mov
mov
lahf
dec
or
pop
jne
or
mov
cmp
inc
mov
cmp
orl
mov
test
daa
mov
cmp
fistl
sbb
mov
xchg
mov
pushf
pop
test
dec
dec
push
sbb
xor
int3
or
add
xchg
inc
pop
mov
inc
into
incl
mov
mov
or
push
jmp
and
lret
sarb
scas
rorb
mov
out
jle
in
xchg
mov
aad
mov
lock
subb
jmp
cltd
cmpsb
sub
in
and
and
icebp
adc
int
pop
add
jle
nop
adc
lret
lock
test
popf
inc
pop
mov
pop
cltd
push
pop
mov
jecxz
pop
aad
mov
call
idivl
push
lea
inc
ds
dec
adc
mov
gs
push
push
and
into
inc
pop
mov
sahf
call
cltd
mov
iret
sub
jno
iret
pusha
cmpsb
fidivrl
lret
scas
cmpb
scas
dec
ds
mov
push
jecxz
sahf
push
and
pop
clc
ret
dec
repnz
test
loope
mov
pushf
mov
mov
dec
jae
cltd
inc
imul
cli
add
pop
stos
lahf
and
daa
bound
jnp
call
or
inc
push
hlt
mov
mov
xchg
sub
cmpsl
sub
cmp
xchg
and
or
sub
add
and
call
mov
loope
sahf
scas
sub
stos
outsb
mov
xchg
jo
ljmp
add
mov
push
arpl
leave
mov
lahf
and
repz
cmpsl
pop
jecxz
into
pushf
cmp
test
ret
pop
inc
popa
jmp
push
fldt
sub
mov
xlat
dec
inc
inc
mov
icebp
in
mov
mov
xchg
stc
cmpsb
icebp
inc
jmp
xor
insl
fiadds
fstl
mov
sub
mov
mov
daa
into
adc
stos
jns
gs
sub
cltd
jg
cmc
aas
xchg
lret
or
aaa
mov
cmpsb
push
adc
repnz
inc
testb
mov
jge
xchg
jmp
sbb
loope
cli
into
cli
stc
aam
mov
ret
push
jne
jb
mov
mov
pop
jecxz
or
fnstsw
lret
mov
gs
mov
add
inc
fadds
jecxz
add
jmp
dec
sub
lret
adc
rorb
gs
enter
mov
std
push
icebp
jmp
outsl
test
sub
mov
inc
xor
xchg
pushf
or
ret
add
sti
jmp
subl
sbb
movsl
xchg
repnz
outsl
insl
adc
jp
adc
es
pop
aad
movsl
mov
add
jge
xchg
dec
shlb
cmp
movsb
xchg
mov
xchg
or
add
mov
mov
loop
dec
jg
xorb
mov
dec
mov
adcb
xchg
repnz
push
fldt
bound
jp
fs
sbb
rol
jle
add
xchg
sbb
inc
fwait
mov
lock
xor
insl
or
mov
mov
scas
fcoms
xor
sbbb
lret
cmc
cmc
and
cwtl
cmpsl
pushl
fnstcw
push
jg
test
jno
push
sar
aam
fidivs
lock
fs
dec
mov
lcall
std
or
aam
or
ficoml
jno
nop
sbb
les
shl
sahf
lock
out
mov
push
dec
mov
aad
add
xor
jg
out
xor
xor
pop
sub
lds
ret
lret
lods
mov
scas
insb
in
ja
or
jne
mov
jge
jl
cwtl
lock
shll
inc
subb
movl
in
jp
int3
lds
cltd
sub
push
push
pop
dec
addr16
lahf
push
je
test
fadds
daa
clc
lcall
aaa
lea
scas
xchg
cltd
lret
add
scas
jno
inc
ret
les
mov
cli
xor
aaa
add
cld
dec
dec
pushf
orb
lret
mov
fs
cmp
xchg
cli
sbb
pop
xorb
or
jmp
sbb
fsubrs
jo
jae
push
inc
shll
je
push
or
loopne
nop
xchg
lods
shrl
mov
xor
cli
stc
sbbl
mov
mov
loope
dec
pop
ljmp
lcall
push
repz
je
sbb
mov
xor
pop
pushw
jbe
insl
jmp
mov
lcall
adc
sbb
push
inc
repnz
and
mov
daa
popa
in
repnz
sbb
push
sub
lahf
sub
fnstcw
inc
jp
stc
and
xchg
cmp
sbb
pop
fcomi
repnz
adc
or
fisubl
subl
xchg
push
mov
cltd
add
inc
dec
or
ja
or
pop
arpl
or
inc
or
out
jb
jbe
lods
mov
xchg
mov
jo
xchg
and
xchg
hlt
inc
jp
jge
bound
int
sub
into
xchg
outsb
adc
fcmovbe
jb
js
fcomi
stos
pop
mov
pop
or
mov
ljmp
xor
xchg
pushf
fldl2t
mov
sub
and
bound
pop
andb
xor
call
pop
add
and
scas
adc
mov
add
loope
mov
fildl
ret
push
fsubl
int3
sbb
mov
dec
popf
or
lcall
pop
fcompl
dec
jb
iret
xchg
push
nop
jmp
stos
test
cmc
fcmovne
dec
add
loope
xchg
fisubl
mov
shl
cmp
xchg
mov
mov
xchg
jnp
mov
add
stos
jg
shll
adc
pop
clc
adc
ljmp
or
popf
xchg
cmp
cli
enter
push
add
pusha
sbb
push
subl
dec
mov
lret
adc
adc
mov
dec
popa
icebp
sub
mov
pop
test
enter
notb
add
cmpsb
aam
push
xchg
mov
add
div
cld
jbe
and
sub
xchg
adc
mov
xchg
mov
enter
xchg
jge
jae
mov
xor
or
xchg
jo
insb
push
ss
or
or
push
jle
int
cmp
outsb
inc
ret
das
xor
and
xor
xor
mov
daa
xor
push
loope
jnp
jecxz
fidivs
cld
outsl
jl
inc
xchg
movsl
xlat
outsl
xor
inc
icebp
sbb
sub
aad
clc
or
jne
nop
stos
cmpsl
jns
outsl
leave
cmp
and
add
cmp
cmp
sti
mov
aad
dec
lock
enter
fbld
cmp
fwait
stos
jg
adc
push
mov
jb
xchg
mov
jl
mov
mov
pop
jb
cli
lcall
sbb
jno
push
cmp
push
adc
sub
sbb
cmc
push
lods
sbb
test
push
sub
repnz
popa
add
lods
add
push
andl
test
push
jmp
mov
jmp
push
ss
cmp
jge
cld
enter
or
test
inc
call
je
jle
mul
and
inc
aad
icebp
sahf
or
cmp
cmpl
lds
and
mov
imul
fcomi
xor
jp
xor
jns
add
popf
out
dec
sahf
jne
imul
test
lret
movsb
ds
inc
mov
movsl
mov
pop
dec
fwait
popa
scas
shll
cmovp
aaa
jae
loope
js
popf
pop
pushf
pushl
jl
aaa
or
ficoms
sub
out
iret
add
push
and
imul
push
fstpl
dec
loope
ljmp
pusha
ds
adc
cmp
and
mov
loope
ja
push
or
sbb
in
icebp
divb
sub
push
in
int3
xor
iret
fdivrl
mov
mov
and
outsb
pop
jg
test
cmp
es
mov
test
dec
and
stc
mov
mov
jp
jne
lods
shl
jp
je
cwtl
subl
insb
or
sahf
adc
test
dec
scas
fucomip
testl
insl
std
loopne
adc
pushf
push
int
xor
lods
sbb
add
mov
mov
cli
pop
jne
popa
hlt
ja
jne
mov
add
cmp
iret
pop
scas
jl
pop
lods
xor
stos
or
inc
push
and
nop
cmp
xchg
cld
jns
gs
add
fisttpll
loop
pop
testb
mov
inc
and
sti
fimull
cmp
xor
mov
enter
lret
test
lahf
add
mov
pop
jnp
aad
ss
movsl
or
add
push
lock
mov
sti
andl
sub
insb
sbb
repnz
out
sbb
rcrb
fildll
les
ja
imul
and
mov
mov
add
lods
jmp
sub
ds
add
nop
jnp
aad
mov
out
rorl
dec
pusha
push
clc
pop
xchg
std
and
jae
es
frstor
or
imul
cmpsl
cld
mov
adc
rcrb
xchg
pop
icebp
add
add
clc
ljmp
test
cmp
mov
ss
cmpsb
stc
rorb
fwait
mov
subl
adcb
jns
test
push
adcb
push
xchg
fisubl
in
xchg
adc
pop
jae
fistl
mov
jmp
pushf
jmp
insb
cmpl
mov
pop
out
xchg
dec
push
and
add
fs
enter
mov
adc
movsb
fnstcw
mov
mov
mov
push
jmp
jecxz
jl
jnp
inc
cmpsb
sub
ss
and
shl
pushf
ret
xor
mov
dec
push
jne
movsl
mov
sub
mov
xchg
and
aaa
sarl
dec
mov
lods
adc
in
cld
pop
cmovp
and
cmp
mov
xor
xchg
lcall
mov
xchg
or
or
pop
sti
xchg
lea
imulb
fmull
addr16
gs
cli
and
imul
fimuls
push
xchg
sbb
stos
inc
add
fldenv
adc
popa
inc
mov
and
cltd
jbe
fdivs
out
dec
inc
fdivs
int
sub
ja
inc
add
sub
and
test
and
inc
pop
dec
repnz
and
leave
cmp
push
outsl
movsb
addl
pop
jns
xchg
xchg
push
call
xchg
or
mov
xor
pop
test
jmp
ficoml
cli
pop
inc
ds
int
sbb
jp
fs
movsl
push
sub
xor
repz
add
add
and
int
push
sbb
cmp
in
adc
popf
ja
leave
inc
in
fmul
push
xchg
and
add
out
jnp
ja
test
fstp
mov
add
dec
add
aad
and
dec
xor
or
fstps
sub
and
inc
mov
xchg
and
dec
neg
mov
sahf
ss
imul
andb
incb
mov
xor
pop
cmp
sbb
pop
push
dec
cmpsb
mov
pusha
mov
dec
js
pop
add
in
jecxz
iret
lahf
or
bound
test
sub
pop
aas
pop
adc
cmpsb
dec
add
jl
inc
push
inc
dec
push
jg
add
std
or
fistpl
sbb
mov
aas
inc
jo
aad
pop
dec
push
push
mov
fldl
inc
mov
daa
cltd
jge
adc
jbe
jo
nop
cmpsb
les
pop
stos
push
enter
and
adc
jo
or
sarl
add
and
mov
cmp
xchg
sbb
faddl
fidivrl
in
xchg
mov
sbb
and
js
popa
loopne
push
clc
pop
xchg
rcr
es
clc
adc
iret
stos
jo
or
stc
mov
fnstenv
xor
fnstenv
ret
jb
gs
fistl
movsl
lcall
roll
pop
jns
in
loop
arpl
adc
repnz
mov
add
out
addr16
rcrl
pop
mov
xchg
push
call
lret
into
adc
aad
adc
lock
jne
jns
mov
pop
sbb
jo
add
test
mov
fcoms
push
dec
fimuls
pop
mov
or
fldt
jno
sub
jl
cmp
sarb
fsubr
push
lods
fadd
rolb
sbb
imul
xchg
icebp
jecxz
mov
cmp
ja
hlt
mov
dec
je
leave
cwtl
jb
imul
insl
jmp
push
dec
push
inc
push
mov
inc
push
jl
push
cmpsl
iret
test
int
leave
pop
sbb
add
fcmove
pop
inc
cmp
lret
sbb
andl
pop
lcall
addr16
push
xchg
test
leave
push
lahf
js
lret
movsb
mov
adc
push
out
jo
pop
xor
push
nop
push
notl
mov
pop
insb
cwtl
jl
int
sub
insl
fnstsw
add
jb
clc
mov
aaa
aam
call
cmp
inc
xor
dec
dec
ret
cmc
shl
cs
cmp
pop
cmp
lret
jp
cld
je
sub
xchg
mov
push
xor
sub
cld
xor
insl
jecxz
and
mov
push
mov
sahf
rcrb
xchg
mov
push
fcoml
ficoms
push
loopne
stc
dec
fbld
push
sbb
jae
inc
fstl
and
add
dec
hlt
ja
stos
xchg
lea
pop
mov
ret
inc
xchg
mov
fadds
jle
popf
mov
cmp
xor
out
mov
add
xor
leave
cmp
mov
std
scas
stc
rcrl
pop
leave
cld
mov
fcomip
xor
sbb
out
and
es
shlb
pop
fsubs
dec
inc
adc
fdivr
xchg
testl
add
jno
aam
lret
pop
sub
jecxz
fisubs
ja
andb
cltd
mov
add
cmp
cmpsb
popf
add
fisttpll
push
mov
and
or
mov
jmp
inc
jl
dec
xor
cltd
sbb
sbb
pop
stos
sub
js
movsb
arpl
sub
adc
xchg
sbb
insb
dec
mov
mov
jns
clc
and
sbb
xor
test
nop
push
mov
shl
push
jg
insb
push
ficoms
adc
nop
jb
mov
inc
push
push
sbb
or
jbe
jne
mov
xchg
adc
mov
sbb
iret
push
lahf
imul
push
je
sbb
fdivrl
push
pop
add
cld
rcl
ret
adc
add
xor
fs
testl
push
or
xor
xor
and
popa
popf
push
push
jmp
scas
jns
bound
jbe
and
insl
cmp
repnz
das
fmuls
js
xchg
push
ja
fmul
mov
in
ror
icebp
dec
in
out
or
nop
or
cmc
imul
push
xor
rolb
xor
std
mov
outsb
lcall
pusha
cmc
xchg
inc
jbe
mov
xchg
dec
fiadds
popf
mov
jecxz
daa
xrelease
inc
loop
add
xchg
inc
jecxz
sbb
mov
vmovapd
pop
iret
pop
sub
push
mov
movsl
cld
je
mov
jns
aam
push
mov
in
cmp
outsl
lods
inc
mov
int
push
cld
fbld
pop
inc
mov
inc
and
xlat
ja
ss
adc
mov
loope
test
inc
jmp
lret
adc
sbb
mov
loop
je
push
lret
mov
clc
adc
pusha
pop
cld
jnp
push
cmp
int
xor
sbb
add
lds
dec
lods
push
cmp
mov
mov
arpl
loop
cmp
adc
test
adc
cmovl
xchg
xchg
xor
push
aas
mov
add
cmp
test
cmp
adc
scas
jl
push
pop
pop
or
and
in
lcall
push
cmp
jmp
fidivs
xor
mov
mov
cmp
mov
imul
lcall
shr
sbb
xlat
jge
xchg
sarb
ss
cmp
leave
mov
fsts
inc
adc
neg
add
mov
ja
xlat
jns
mov
cmp
pop
clc
adcb
push
test
test
jge
mov
imul
mov
imul
sbb
xchg
pop
shlb
fsubrs
aas
jo
xor
fdivrs
jmp
inc
and
dec
adc
gs
insb
mov
dec
ja
aad
jl
test
add
mov
xchg
pop
dec
mov
test
inc
xor
pop
gs
pop
les
aam
adc
lret
sbbb
mov
call
adc
mov
xlat
cltd
push
sbb
bound
adc
jge
fbld
mov
mov
imul
and
jns
aad
std
scas
mov
xorb
lods
popa
mov
aam
adc
adcl
rcrl
push
push
xchg
call
lods
push
mov
xchg
test
out
mov
mov
outsb
pop
adc
mov
sahf
mov
loope
inc
push
or
popa
add
out
in
loop
fiaddl
in
xchg
lret
jg
rorl
cld
push
push
add
xor
popf
jecxz
sub
clc
mov
shrl
test
lcall
orb
das
pop
jmp
sub
cmpsb
stos
mov
fsubrs
cmp
fistpll
imul
fstpl
faddl
and
clc
call
mov
pop
ficompl
cmp
sbb
insl
mov
mov
xlat
add
shlb
xchg
aaa
push
in
into
enter
xchg
pushf
jl
mov
scas
mov
cmc
push
dec
push
out
cmpsl
mov
stc
lret
fs
or
mov
mov
xor
jle
adc
add
les
push
ljmp
cmpb
sbb
les
je
dec
cmpl
and
aaa
addb
mov
mov
cmp
aam
pushf
pop
lret
daa
mov
push
lock
cltd
lahf
xchg
and
dec
push
subl
mov
dec
jbe
gs
nop
mov
int
cmpb
clc
push
mov
sbb
push
sbb
jle
add
mov
inc
shrl
inc
cmp
or
inc
in
xchg
jbe
xor
jg
into
xchg
ss
fmul
inc
out
insb
fsubrp
push
movsl
mov
push
cltd
filds
jge
adc
jecxz
pushf
shlb
leave
pop
icebp
arpl
or
aas
cmp
sarb
pop
fcomp
sarl
int3
and
idivl
dec
adc
out
mov
jbe
jnp
into
push
lcall
stos
mov
xorb
insb
adc
jmp
inc
test
push
cli
or
xchg
and
xchg
jecxz
push
sar
pop
and
cmp
inc
bsf
popf
cmp
sbb
dec
and
pop
icebp
inc
inc
inc
lret
imul
jle
sbb
sarb
test
mov
cmp
scas
das
jne
stos
outsl
sbb
in
popa
bound
mov
call
es
sbb
daa
aad
dec
imul
or
pop
sub
push
or
xchg
or
mov
stos
dec
cwtl
push
data16
stos
cmp
inc
cmp
mov
sbb
pop
filds
outsl
out
jge
xchg
das
mov
adc
mov
jo
xchg
stos
adc
pop
pop
je
pusha
out
add
hlt
xor
imul
in
dec
mov
adc
orl
mov
mov
mov
mov
xchg
sbb
ret
mov
cs
arpl
xor
inc
push
cmp
lods
or
mov
push
fmull
movsb
sahf
pop
sub
std
mov
arpl
push
xchg
imul
adc
outsb
xchg
mov
xchg
inc
out
in
xchg
jmp
inc
mov
xchg
or
cmp
dec
lods
push
lds
pop
int
add
mov
lcall
movsl
mov
insb
jae
imul
enter
fisubrs
inc
fsubl
push
xor
in
stc
xlat
sub
dec
dec
dec
dec
mov
mov
add
cli
test
cmpsl
rclb
pusha
cmp
stc
push
cmp
enter
xor
mov
add
jne
nop
jg
sub
jmp
js
leave
cld
icebp
sub
mov
lcall
jl
cld
or
enter
int3
jbe
adc
repnz
fwait
push
mov
xchg
les
mov
add
popf
xlat
stos
xor
fsubrs
fsubr
mov
or
fnstcw
mov
or
sub
sub
bound
lea
jle
je
dec
mov
jns
aam
sarb
jae
icebp
jnp
mov
add
jp
or
jg
cmc
mov
xsave
or
pushf
xorl
lcall
ds
jp
xchg
movsb
call
pop
test
outsl
lock
arpl
pop
sbb
push
or
dec
fstpl
add
ljmp
in
sbb
jns
dec
xchg
pop
inc
sub
mov
sbb
mov
sub
push
cmp
enter
mov
sbb
inc
push
or
sti
shll
stos
pop
cmp
loope
sbb
jg
cld
mov
fldcw
push
in
adc
pop
mov
cmp
push
mov
jecxz
icebp
sar
fs
mov
mov
dec
mov
cmpsb
test
ljmp
insb
int
ret
loope
dec
mov
inc
xchg
cld
cmp
jbe
bnd
dec
sbb
mov
add
pop
loope
sbb
dec
and
lods
add
or
in
das
sub
xor
dec
cld
mov
dec
icebp
inc
sub
or
mov
mov
pop
and
mov
lea
outsl
lds
pushf
and
shl
cmp
sbb
inc
jae
pop
mov
ret
lock
insl
shl
lahf
jno
rorb
jmp
adc
and
jmp
mov
sub
data16
jo
in
jne
push
lret
sub
out
addr16
sahf
push
adc
inc
mov
testl
sbb
cs
movsb
jbe
fyl2x
xor
inc
mov
mov
and
pop
stos
mov
stos
lahf
cmp
xchg
daa
push
and
push
mov
push
mov
pop
aam
jge
dec
cmp
aaa
sub
adc
xchg
push
cmpsb
jae
sub
and
jb
and
xchg
adc
sbb
test
sbb
enter
push
nop
lea
xor
fwait
and
cltd
mov
jg
push
insl
scas
outsl
pusha
into
pop
mov
js
mov
mov
add
mov
push
negb
xor
inc
add
cwtl
push
sub
jbe
mov
cs
and
pop
enter
cmpsb
icebp
and
pop
dec
adc
jae
enter
sbb
pop
imul
imul
hlt
jno
repz
mov
mov
loop
or
push
lret
xchg
lret
lods
out
sti
xchg
mov
ret
xor
outsb
mov
xor
cltd
cmp
adc
inc
popf
aaa
mov
or
mov
mov
xchg
mov
arpl
cs
mov
push
mov
or
ret
fldl
mov
shl
in
notb
push
sbb
push
std
pop
mov
icebp
dec
xor
inc
mov
mov
lods
sbb
pusha
mov
ficompl
add
ret
sub
lret
out
inc
mov
cs
xchg
xchg
mov
mov
lea
ffree
jo
lahf
jg
lods
aas
cmp
pop
stos
and
dec
loopne
sub
nop
pop
adc
sbb
rolb
adc
call
aaa
pop
inc
push
scas
insb
push
push
adc
push
fmull
sbb
inc
mov
icebp
es
push
cmpsb
loope
fwait
mov
fldcw
pushf
dec
fs
dec
mov
cmp
mov
loope
fcmovnb
enter
aas
cmpsl
xor
adc
mov
mov
hlt
jno
push
xor
test
orl
repz
negl
mov
ret
fs
xor
cmp
nop
lcall
sbb
inc
dec
lret
fists
mov
call
rolb
lock
adc
sbb
inc
gs
jne
pop
lea
pop
xchg
int
add
add
xchg
jb
adc
sub
es
leave
mov
cmc
pop
lods
or
mov
inc
enter
or
jg
jno
adc
jg
mov
lock
shlb
mov
push
mov
inc
or
nop
xchg
sbb
xor
clc
into
push
push
dec
sti
sub
mov
ss
insb
divb
scas
aaa
scas
and
lods
pop
roll
jmp
mov
scas
push
rol
push
mov
ja
mov
mov
xor
sbb
dec
ret
test
repz
mov
push
or
jle
loope
pop
addl
push
pop
jo
imul
mov
jne
shl
mov
mov
sub
xlat
out
mov
arpl
inc
stos
add
or
xlat
jae
loope
stos
mov
cmpsl
pushf
mov
and
ss
xchg
cmp
test
xchg
mov
xchg
test
aam
adc
cmpsb
inc
lods
inc
in
push
lea
and
addb
ss
paddw
in
push
setge
movsl
mov
enter
scas
xorb
mov
mov
sbb
icebp
mov
and
or
out
xchg
jno
pop
popf
addb
arpl
sbb
rolb
mov
jp
int
hlt
imul
aas
jns
dec
les
in
outsb
ret
jne
daa
dec
or
arpl
pop
movb
data16
mov
cmp
aam
dec
inc
sub
pop
push
dec
xchg
sar
dec
repz
add
or
cs
jb
sarb
push
jecxz
sbb
and
mov
ss
aad
jae
in
mov
mov
movsb
pop
pop
punpckhdq
and
test
mov
inc
hlt
mov
jp
bound
mov
inc
into
ss
xor
mov
inc
enter
dec
ror
dec
cmp
push
sub
popf
inc
inc
arpl
sub
jmp
ss
jnp
push
or
ja
fdivrp
rcll
cmp
movsl
cld
rclb
jne
mov
std
jecxz
sbb
inc
xchg
lods
lods
roll
mov
sbb
cmpsb
je
pop
imul
dec
orl
mov
mov
pushf
test
or
leave
adc
out
cwtl
pop
inc
cmp
andb
loope
or
jbe
push
stos
ss
jg
xor
jb
inc
or
xor
cmpsb
gs
fldenv
movsl
sbb
fcompl
imul
mov
jecxz
addr16
dec
mov
push
push
rcrb
ret
test
stc
xor
mov
pop
leave
lods
jg
mov
aad
stc
jo
push
mov
scas
add
mov
sbb
testb
insb
cmp
mov
mov
int3
and
leave
jg
sub
cld
or
add
mov
push
mov
int
pop
lcall
jne
fcmove
inc
fisubrs
xor
sub
xchg
int
stos
les
lea
lcall
rclb
cmp
and
pop
push
fiadds
pop
cmp
inc
test
popf
ret
inc
movsb
mov
sub
pop
sbb
pop
adc
inc
fidivl
cmp
sub
call
cld
fdivl
lea
or
cmpsl
lahf
in
lock
or
or
addr16
stc
jbe
add
xchg
fcmove
pop
adcb
jp
sbb
daa
repz
xchg
lahf
mov
sti
pop
repz
loop
mov
arpl
xor
inc
scas
arpl
pop
test
lret
xchg
mov
and
fs
mov
cmp
add
adcb
xlat
fildl
es
inc
and
out
push
lods
cmp
lea
les
mov
stos
data16
mov
test
mov
sbb
add
stos
xor
mov
imul
jnp
xchg
mov
loopne
jno
neg
lahf
sbb
jbe
xchg
out
or
aam
cmp
loop
je
mov
jecxz
mov
pusha
test
repz
lods
mov
andb
or
cli
cltd
iret
inc
or
jp
arpl
cmp
sbb
cmpsl
push
ds
or
mov
mov
or
push
push
sahf
sbb
mov
or
jecxz
mov
jbe
rcrl
mov
add
push
push
push
jae
insl
mov
mov
out
mov
pushf
mov
shll
arpl
je
xchg
inc
cmp
add
out
aaa
imul
pop
xchg
clc
sub
ficomps
insb
ret
mov
and
jbe
ljmp
loop
jne
pop
inc
add
scas
and
cwtl
stc
mov
in
push
fnstsw
clc
push
clc
mov
jae
int3
aaa
aaa
popa
fsts
or
mov
mov
sbb
int3
inc
lods
mov
icebp
icebp
es
les
push
mov
std
mov
pop
mov
mov
jno
pop
adc
fnstcw
roll
addb
mov
sbb
push
and
lcall
fwait
mov
les
pop
cmp
xchg
mov
and
imul
push
cltd
add
cld
das
pop
push
mov
test
xchg
sarb
dec
dec
sub
stc
and
cmp
sti
scas
aas
jne
cmc
push
inc
push
dec
mov
cmpsl
enter
fucomip
out
stos
cmp
adc
imulb
cmp
sub
pop
movsb
cmp
pop
shlb
cmp
cmpsb
push
dec
mov
scas
enter
push
cmc
jae
lret
jge
push
sbb
leave
inc
leave
adc
fcoml
cld
adc
nop
adc
das
inc
shl
test
fsubl
push
push
pop
sbb
fbld
dec
sbb
bound
aad
imul
repz
jo
mov
pop
fists
sbb
rorl
jle
out
movsb
jmp
je
clc
movsb
xor
xchg
gs
sbb
sub
out
fildl
es
push
inc
stos
mov
sub
add
ds
mov
jns
xor
sub
js
xchg
pop
subb
add
clc
icebp
ja
adc
sbb
mov
ljmp
cmc
xor
js
aam
sbb
jl
dec
mov
data16
pop
inc
js
insl
retw
scas
pop
sbbl
pop
adc
pop
add
mov
mov
mov
jl
jb
mov
fucomp
test
push
cmpsb
mov
fdivrl
sti
pop
add
jl
mov
loopne
repz
xorl
clc
subb
ret
jecxz
push
mov
jbe
movsl
push
sar
xchg
jne
cld
xrelease
js
jo
aad
xchg
addb
dec
xchg
inc
adc
roll
dec
push
ljmp
inc
dec
sbb
gs
push
sahf
jmp
cmpl
xor
pop
dec
out
add
sub
cltd
sub
push
cmp
sbb
jl
jge
js
les
sub
add
push
adc
stos
xlat
movb
dec
es
or
inc
jmp
std
add
mov
pop
xor
mov
dec
lods
rcl
movsb
xchg
loop
outsl
push
pop
int
call
cmc
sub
out
outsl
cmp
aas
je
xlat
adc
dec
xchg
loop
dec
cld
xor
scas
mov
je
shll
shll
lds
and
dec
mov
fdivl
or
pop
cltd
xchg
sub
cmp
push
test
pop
enter
jmp
xlat
xor
js
or
inc
sub
imul
pushf
cltd
add
insb
es
lods
mov
adc
sahf
movsl
xor
cli
lcall
cwtl
mov
cmp
hlt
add
jnp
fwait
jg
pop
dec
mov
aas
or
xor
xor
lods
pop
mov
cmp
repz
cmpsl
adc
leave
cli
add
mov
pop
imul
int
dec
in
jmp
add
pushf
jbe
jp
lods
fnsave
loop
jnp
jmp
pop
xchg
scas
xchg
cmp
sub
movsl
xor
popa
gs
sbb
je
push
into
repz
mov
push
int
fnstcw
pop
sbb
mov
cld
jne
fdivs
in
shll
dec
mov
mov
shr
sub
inc
fisubrl
sub
or
bound
hlt
adc
sub
lcall
mov
lret
rclb
sub
sbb
xor
mov
sarb
leave
dec
in
sub
add
enter
test
les
push
aas
lods
jecxz
jl
mov
fwait
mov
mov
subb
sub
push
imul
daa
int3
xchg
mov
ljmp
xor
mov
icebp
rorb
ja
pop
pushf
pop
xchg
and
in
iret
fs
repnz
stos
jg
mov
iret
cwtl
and
repnz
imul
jl
sub
negb
cmp
xchg
and
lret
pop
stos
ret
in
shrl
push
arpl
pop
mov
cmp
sahf
mov
fadd
outsl
and
mov
mov
out
es
out
roll
loope
mov
or
mov
inc
push
aam
mov
add
and
pop
ror
sub
dec
pop
lods
div
cmp
inc
cltd
jg
loopne
andb
mov
jo
in
push
lods
dec
mov
loope
cmp
aam
es
gs
test
add
dec
sub
jno
or
mov
out
jmp
jle
adc
stos
jb
push
and
ss
pushf
cltd
xlat
mov
mov
addl
nop
cmp
ja
and
iret
loopne
pushf
inc
ljmp
js
adc
cmpsl
test
lahf
gs
aam
cmp
rcrb
leave
sub
mov
data16
lock
cwtl
dec
ret
push
jg
movsb
in
xchg
lds
adc
je
dec
jbe
js
subl
aaa
lret
shl
xchg
and
dec
aas
in
hlt
rorb
aas
inc
js
mov
or
inc
out
leave
xor
and
fisttpl
push
repnz
sbb
jno
popf
sahf
dec
jne
sbb
pop
lcall
adc
add
loopne
out
ljmp
push
fcmovb
sub
aaa
inc
call
push
pop
fistpll
jmp
cmp
mov
popf
pop
dec
xchg
jg
sub
xchg
xor
push
pop
jp
mov
addr16
fwait
lcall
add
mov
cmpsb
sub
or
cli
imul
pop
jne
push
lahf
and
xchg
cs
aaa
xor
inc
fwait
mov
fs
hlt
cmp
loope
mov
inc
adc
push
jecxz
dec
inc
hlt
mov
dec
cmp
push
adc
push
scas
jns
jmp
in
imul
inc
insb
iret
push
push
cmp
aaa
or
cmpl
jge
fildll
dec
dec
pushf
movsb
test
fnsave
adc
stos
ljmp
fs
or
add
nop
pop
sub
lds
push
dec
in
inc
jmp
inc
fistpll
leave
add
stos
jle
sbb
push
mov
scas
and
ret
in
aam
mov
cmc
icebp
fstpt
mul
sbb
data16
idivl
cmp
test
or
adc
lahf
sarl
sahf
xor
push
scas
cmp
or
xorl
pop
int3
lods
outsb
aam
aaa
into
enter
orb
mov
sti
lahf
imul
rcl
sub
jl
cmp
lds
inc
mov
sub
mov
ret
mov
or
out
inc
imul
out
push
jbe
push
xor
lods
xchg
push
dec
cmp
pop
cwtl
sub
out
repnz
fsubr
mov
icebp
inc
sbb
cld
or
test
xor
push
mov
cmp
sbb
sbb
cli
sbb
pop
enter
push
push
fistl
xor
cld
loope
data16
sbbb
sub
cli
inc
in
cmp
inc
dec
test
aaa
mov
je
or
mov
cmp
fistps
jae
xor
scas
sbb
call
jno
or
push
arpl
pop
push
mov
cpuid
dec
std
mov
testb
ljmp
testb
sahf
int3
or
push
sbb
test
aas
and
pushl
mov
jp
fcoml
push
cmpsl
aaa
dec
filds
imul
pop
leave
jmp
push
mov
addb
adc
mov
inc
mov
xchg
or
shll
fstps
dec
ret
mov
fnstenv
std
out
test
cmp
jb
aam
mov
test
adc
xor
icebp
cli
mov
sbb
insb
cmp
xor
test
insl
xor
sub
adc
cmp
dec
adc
imul
in
ss
pop
pop
loope
rcl
and
sub
test
cmp
pop
movsb
pusha
jnp
ret
in
std
jp
stos
popf
fldt
cmp
fistpl
lret
rorb
push
jp
das
sub
ljmp
cmpsl
or
or
jp
sbbb
mov
test
dec
jecxz
jnp
icebp
push
dec
js
je
imul
fsubrs
lock
cmp
out
insb
add
call
pushl
push
sub
addl
sub
mov
std
imul
sub
mov
fimuls
inc
fs
ret
xor
xchg
jg
fldcw
push
push
sub
dec
ja
mov
fwait
xchg
cmp
mov
mov
verw
sbb
fnstenv
inc
enter
rcrl
jnp
ret
fcmovb
decl
mov
add
add
leave
std
mov
lcall
xchg
or
jns
push
and
scas
inc
mov
mov
inc
arpl
push
xlat
push
les
xchg
add
pop
jns
jp
sbb
dec
arpl
fmull
pop
insb
cld
mov
add
pop
mov
fstl
testb
xorb
push
and
mov
jae
call
pop
imul
in
fsub
xor
jmp
cld
out
pop
mov
adc
mov
cli
mov
jne
jl
and
test
in
movsb
sub
mov
mov
lods
outsb
mov
jae
cmpsb
fidivrs
sarl
adc
or
pushf
clc
mov
sbb
xchg
ret
adc
nop
inc
push
add
ficoml
cmc
sti
jp
xor
sarb
insb
aam
jmp
adc
sub
and
push
or
lock
lea
sub
xor
pushf
call
jge
xchg
inc
enter
jne
adc
mov
mov
fistps
shll
push
cwtl
lret
jp
loopne
fldenv
jnp
xchg
xchg
pop
and
pop
std
xor
repz
popf
mov
test
mov
mov
hlt
movsb
mov
inc
inc
mov
mov
test
das
into
addb
jge
mov
and
push
scas
pop
aas
fs
push
jb
pop
xor
jae
cmp
adc
mov
cltd
sarb
xchg
arpl
mov
das
lods
je
int3
push
inc
pop
push
rol
inc
cmp
and
fnsave
mov
and
jb
nop
push
push
imul
mov
cmp
push
push
imul
mov
mov
push
int3
int
lods
xor
mov
sbb
xchg
mov
mov
test
mov
cwtl
insl
mov
ret
xchg
rcrl
sub
leave
icebp
mov
iret
jecxz
mov
test
pop
add
or
push
and
xor
fildll
pop
jg
test
fs
or
add
pop
push
cmp
imul
js
sbb
adc
mov
jnp
fidivrs
and
sub
std
lock
mov
cmp
pop
pop
mov
sub
aad
es
fdiv
mov
out
pop
cmp
pinsrw
add
add
xchg
push
popa
out
xchg
sub
and
inc
int
push
shrl
faddl
imul
mov
sahf
gs
cwtl
aam
jno
out
xchg
or
aad
int3
xor
inc
xlat
cmp
aad
scas
testl
clc
push
sahf
fistpl
sbb
fstpt
push
mov
sub
iret
shl
adc
pop
ret
rorb
dec
add
stos
sub
xor
dec
add
mov
mov
shr
loop
mov
mov
inc
out
or
xchg
lcall
ror
sbb
mov
out
in
jmp
divb
icebp
or
cmp
movsb
mov
push
fstpl
mov
jle
mov
sbb
cmp
arpl
mov
inc
cmp
out
shr
lock
fisubrs
fsubl
xor
orb
jg
fcomp
fs
ret
mov
fnstsw
gs
push
sbb
pop
or
mov
fnstcw
xor
xchg
bound
cmc
rcl
nop
push
cltd
mov
mov
cmovo
add
in
jle
pop
sub
ror
sub
xchg
adc
dec
mov
les
js
pop
xor
pop
movsb
enter
lods
cmpsb
test
sub
fnsave
mov
push
dec
pop
sub
mov
xchg
cmp
jae
div
mov
loope
int
mov
xlat
lcall
shr
hlt
mov
pop
mov
pop
mov
pusha
pusha
fwait
jne
or
in
lods
test
dec
or
test
outsb
pop
mov
sub
mov
xor
xchg
sbb
mov
xor
out
movsb
popf
lcall
and
les
ds
push
addr16
int
and
scas
std
jmp
mov
inc
pop
lea
scas
inc
adc
mov
inc
adc
mov
cmpsl
out
jne
and
call
and
movsb
mov
lret
outsl
ja
adc
push
mov
lcall
bnd
call
loopne
ret
loopne
ja
mov
cli
adc
icebp
sub
push
and
or
outsl
mov
fsub
sbb
fcomps
mov
sbb
ret
sbb
or
pop
mov
push
mov
cmp
pop
inc
sub
test
inc
or
adc
fcompl
pop
mov
out
leave
icebp
cmp
fdivrp
nop
popa
addl
dec
sbb
test
pop
pusha
inc
loopne
dec
rclb
ret
in
mov
adc
je
mov
dec
testl
pop
push
cs
stc
jb
scas
mov
xchg
in
push
sbb
inc
int
daa
pop
daa
sub
adc
pop
jne
movsb
addr16
mov
dec
push
inc
jb
jbe
push
iret
cmp
aam
or
pusha
in
bound
sub
popa
fidivrl
add
and
aad
cs
cmp
stos
mov
xchg
int3
sarb
fsubr
popa
jge
inc
outsl
pusha
sbb
in
pop
adc
pop
ja
xor
rorl
fisubs
push
xchg
or
mov
div
xchg
es
jmp
pusha
call
xor
lds
cmp
add
mov
cmpsl
int
cs
shr
mov
jnp
movsb
fs
les
xor
test
xchg
lret
adc
movhps
mov
mov
push
xor
faddl
or
cmpsl
mov
push
cmp
wrmsr
pop
push
stos
neg
dec
fst
jmp
adc
adc
and
sbb
es
push
mov
dec
pop
xor
ret
push
loop
or
and
pop
pusha
dec
out
mov
stos
jo
mov
pop
stc
sub
lds
push
std
in
xor
aam
aad
test
jl
cltd
ljmp
lods
jo
rorl
and
pop
in
mulb
shl
jo
incl
cli
rcr
cmp
ja
shrl
push
push
rorl
fcompl
mov
or
pop
jg
test
inc
push
or
mov
mov
jbe
jl
out
jmp
adc
push
addr16
mov
cmp
mov
lea
shl
add
in
mov
aad
push
jae
jb
cmp
xrelease
mov
les
test
das
lret
jbe
and
jmp
into
mov
inc
mov
inc
lds
scas
push
inc
popf
testb
push
fadd
ret
cmp
negl
lock
testl
adc
scas
inc
enter
dec
arpl
xor
dec
push
repz
test
xchg
testb
dec
sbb
je
xor
in
mov
popa
jno
sbb
cmpsl
out
dec
js
out
cmp
cmp
out
stos
cmpsl
mov
xchg
pop
dec
cmpsb
fistpl
inc
cmp
enter
xor
mov
in
shrl
aaa
push
or
jnp
popl
dec
push
int3
enter
sub
cmpsb
repnz
jae
sub
add
call
dec
sub
adc
xor
mov
pop
mov
push
dec
push
stos
xor
ds
adc
sbbl
in
xchg
and
sahf
sbb
out
pop
mov
test
cmpsb
xor
mov
rcl
mov
idiv
mov
scas
movsl
mov
ja
test
jmp
mov
mov
into
xor
cltd
jne
outsl
sbb
jl
xchg
add
test
or
stc
pop
push
xchg
and
cmp
into
xor
repz
repz
mov
xor
fdivs
fs
ljmp
pop
repz
mov
lods
iret
inc
sbb
mov
adc
bound
ror
cmp
cld
repnz
xchg
jle
enter
ret
aas
inc
inc
lcall
nop
and
lock
ss
stos
mov
rol
cmp
loop
jp
stos
mov
pop
leave
and
and
pop
addr16
out
out
loopne
and
adc
cmp
pop
add
xor
arpl
std
pop
cmp
add
adc
mov
xor
in
mov
pop
iret
or
pop
fidivrs
imul
sub
jnp
ret
mov
xchg
add
sbb
out
inc
cmc
mov
rorb
add
jns
je
add
cmp
pop
pop
leave
adc
pop
sti
push
mov
popf
sbb
fsubr
aas
scas
add
push
fwait
rol
movsb
or
fsubl
and
cmp
push
pop
dec
mov
dec
lds
xorl
push
subb
or
adc
adc
xchg
movsl
sbb
mov
fnstenv
mov
stos
adc
lods
cmp
adc
mov
add
push
stos
mov
insl
inc
inc
fisttps
shlb
pop
jb
mov
scas
sbb
pusha
or
mov
lds
cltd
out
fimuls
xorb
xchg
popf
inc
cmp
test
dec
stos
and
dec
push
js
div
push
mov
addr16
loop
cltd
fstps
lock
pop
shll
inc
sbb
inc
lods
mov
hlt
sbb
or
scas
lahf
xor
mull
adc
adc
adc
mov
notb
xchg
sub
push
into
add
rolb
popf
push
jg
mov
adc
sub
xchg
push
add
xor
dec
mov
out
push
sub
mov
mov
inc
sub
adc
lcall
mov
mov
testl
sub
add
pop
call
in
mov
sbb
repnz
sti
push
lret
inc
lahf
mov
insl
pusha
idivl
call
or
sti
jge
xchg
les
sarb
outsl
add
add
outsl
iret
enter
push
lock
ja
aam
jae
ss
decb
inc
scas
pop
leave
stos
out
mov
loope
jp
imul
out
aaa
push
add
cmp
scas
sbb
add
add
push
pusha
adc
lcall
das
push
and
cmp
lret
lahf
mov
push
ljmp
iret
cmc
and
daa
movsb
mov
xchg
loopne
and
jg
and
xor
jge
movsb
fwait
inc
es
in
jne
jbe
jmp
jmpw
fdiv
sub
aad
je
ret
arpl
mov
ret
in
pop
cwtl
into
std
cmc
imull
stos
fadd
push
jp
jmp
mov
lcall
xor
mov
icebp
cwtl
push
cmp
adc
pop
push
push
repz
cld
out
and
jge
cmpsl
sub
je
xor
mov
stos
cmp
clc
and
dec
loopne
sar
fwait
xchg
jle
test
cmc
add
xor
popl
inc
mov
sbb
aad
lock
add
push
sub
dec
sti
pop
pusha
icebp
pop
call
jbe
rolb
and
mov
sbb
es
jbe
outsb
es
stos
pop
xchg
mov
ud0
push
lods
mov
cmp
stos
push
add
jo
lret
adc
cmp
int
leave
test
sub
mov
imul
int3
sbb
cmp
mov
sbb
arpl
scas
and
in
or
out
ja
or
fs
iret
sbb
cmpsl
cmpsb
in
jmp
fistps
ja
fcoms
xor
xchg
jbe
jns
fcoml
mov
cmp
xor
sbb
dec
mov
xor
test
rorl
push
ss
jl
mov
outsl
lock
inc
enter
test
fisubrs
dec
xchg
mov
loop
xchg
icebp
cmp
push
cmp
mov
add
cmpb
jmp
jns
lods
cmp
imul
sarb
mov
push
push
or
fcmovnu
push
sbb
repz
lcall
fstpt
xchg
push
mov
loop
jne
les
lret
push
insl
or
fwait
or
es
ja
mov
xchg
pusha
push
sbb
out
push
cmp
pop
cmp
mov
xor
stc
adc
or
add
imul
popa
jne
sti
xchg
js
daa
cmp
in
icebp
jl
test
fs
stos
xchg
mov
push
into
rolb
push
mov
xor
or
pusha
outsl
jp
lret
jnp
or
pop
sahf
lcall
es
rcl
in
inc
add
and
inc
xchg
or
out
or
xor
jae
mov
and
cmpsb
and
bound
mov
cld
push
frstor
loopne
xchg
cmc
rclb
sbb
mov
sbb
repz
inc
mov
jno
out
adc
stos
or
into
pop
stos
xor
lods
test
insl
inc
lret
test
push
int3
ss
sbb
pop
test
popf
aam
and
in
fsubs
cmp
data16
inc
shll
movsl
sbb
orb
pop
fisttpll
jb
das
std
xchg
sub
pop
int3
sahf
and
test
mov
add
divb
mull
fcmovnbe
mov
inc
out
lods
enter
std
mov
adcb
inc
mov
sub
shlb
adc
lods
jmp
jge
lea
push
add
sti
loope
dec
loopne
fwait
mov
pop
xlat
mov
mov
or
hlt
mov
inc
pop
mov
xor
test
out
xor
jbe
push
jge
in
popa
insb
subb
dec
adc
pop
push
add
push
fwait
mov
fnsave
ficomps
imulb
movsl
add
pushf
cmovns
add
xchg
js
jp
pop
xor
pop
test
pop
sub
out
enter
arpl
jnp
clc
lods
push
jne
mov
mov
xchg
mov
out
pop
mov
data16
test
lea
mov
push
mov
xchg
subb
scas
inc
cmp
loope
dec
jg
cmp
sub
jb
jmp
test
jo
pop
xchg
notl
xor
mov
and
lods
xchg
pop
dec
repnz
lea
mov
dec
push
jmp
add
xchg
cmc
ret
mov
fs
lea
push
push
outsl
mov
mov
lods
dec
test
int
leave
fwait
movsb
out
pop
fidivrl
cmpps
ret
sbb
bound
hlt
mov
sti
ds
xchg
push
push
ffree
call
xchg
mov
xchg
jo
xchg
ljmp
es
cmpsb
lret
push
jp
or
xor
aad
repnz
les
pop
inc
mov
mov
leave
mov
stos
ljmp
and
into
packssdw
add
adc
inc
repnz
leave
jns
movsb
nop
xchg
into
mov
mov
das
out
out
ss
jl
leave
icebp
ja
sbb
jnp
jg
rcll
pushf
adc
jmp
sti
out
shr
test
xor
adc
xorb
mov
lods
inc
adc
popa
mov
mov
cmpsb
add
or
fnsave
mov
lret
std
pop
cwtl
lret
jecxz
shll
pop
cmpsb
arpl
add
sbb
sarl
ret
lods
addr16
add
inc
stc
cmp
push
jo
or
int3
or
inc
mov
and
mov
ja
dec
mov
movsl
bnd
dec
mov
jae
test
sarb
int
mov
rol
inc
test
dec
xor
sbb
pop
ljmp
dec
addr16
xchg
test
mov
inc
add
push
rcll
hlt
xchg
into
js
pop
add
xchg
add
or
lock
push
xlat
push
lods
jmp
pop
ficompl
mov
sbb
mov
mov
out
jg
stos
pop
inc
and
shlb
jno
sahf
cltd
xor
test
repz
push
fwait
mov
shlb
push
sarb
push
push
popa
enter
xchg
push
and
pop
cmpsb
int
aaa
mov
xchg
loop
mov
mov
stos
add
mov
pop
mov
popa
leave
pop
sbb
sbb
mov
call
or
mov
push
jp
mov
cld
adc
dec
xlat
lcall
add
jge
sti
imul
pop
mov
rorl
out
icebp
es
popf
std
push
or
xchg
push
mov
imul
hlt
sbb
mov
lds
xchg
mov
inc
jmp
adc
cmp
inc
mov
or
jmp
addr16
mov
xchg
inc
sub
jmp
jae
pop
pop
not
jo
adc
mov
mov
jns
scas
movsl
push
sbbb
popa
mov
hlt
ljmp
mov
jno
mov
mov
popf
jge
fldt
rorb
inc
int3
imul
rorb
mov
pop
cmp
jbe
cli
jp
call
cwtl
sbb
sbb
pop
push
adc
mov
hlt
fcomp
add
les
pop
js
xor
mov
push
adc
lock
mov
sbb
push
adc
call
jmp
ret
push
adc
lods
cwtl
ret
lock
jo
in
mov
stos
pop
push
add
loope
sti
popf
or
pop
inc
sbb
je
test
push
push
int3
sub
lret
mov
movl
cmpsl
loope
test
xchg
leave
inc
fwait
pop
jno
or
nop
push
xor
sbb
mov
cmp
sbb
test
popa
rolb
xchg
jo
stos
lret
shl
sbb
mov
dec
scas
int
add
mov
fisubs
or
icebp
sub
mov
insb
add
mov
mov
fsts
xor
mov
shll
push
movsl
ja
lock
dec
sub
jbe
mulb
test
mov
mov
adc
cltd
add
fs
outsl
jp
popa
pop
or
adc
push
jmp
cmp
in
dec
and
pop
jmp
dec
sbbb
roll
fsts
dec
leave
fdivl
outsb
cmpl
pop
cwtl
pop
loope
xchg
shlb
mov
xor
repz
in
xor
into
adc
add
loope
aam
pop
test
cmpsb
and
in
pop
cmc
insl
faddl
cmpl
test
fstps
push
jnp
lret
jp
add
adcl
std
sub
mov
xchg
jle
xchg
push
andb
mov
in
sub
cmc
ss
frstor
inc
pop
decb
ret
and
outsb
xchg
mov
mov
pop
pop
js
stc
inc
in
push
fcom
mov
ret
js
daa
ds
xor
pushf
pop
inc
xchg
es
mov
lods
and
mov
adc
pusha
scas
mov
push
mov
or
jecxz
mov
inc
and
and
in
iret
aas
scas
push
dec
js
mov
loope
scas
sub
push
mov
mov
insl
dec
je
adc
orb
scas
arpl
adc
mov
xor
es
loope
das
pop
push
test
in
stos
ljmp
scas
arpl
jo
jno
xlat
xchg
scas
xor
insb
shrb
rcll
push
fsubs
dec
mov
loope
popl
push
pusha
mov
mov
das
xchg
ror
shl
push
adc
add
jnp
ret
and
in
aas
and
mov
adc
imull
insb
dec
ret
add
in
inc
fwait
mov
bound
mov
and
cltd
jp
popa
orl
jmp
push
sub
dec
jb
push
add
xorl
adc
inc
sarb
jae
pop
push
cmp
sti
adc
xor
stc
and
jb
out
shll
les
sbb
repz
mov
icebp
movsl
aam
lods
mov
mov
jae
int3
movsb
xor
ret
arpl
xchg
push
repz
jmp
xchg
test
xchg
in
pop
rolb
fcomip
aam
loop
mov
jle
mov
stos
orl
jge
jae
out
adc
inc
repnz
and
pop
sbb
dec
jno
mov
push
mov
pop
imul
ja
popf
cmp
imulb
ss
lahf
mov
aam
mov
pop
mov
test
insb
sbb
adc
out
lret
pusha
loope
cmp
jle
inc
int3
dec
sub
pop
popa
sub
and
dec
jl
jnp
movl
add
aaa
adc
push
icebp
les
in
jle
inc
popf
push
je
dec
int3
mov
cmpsb
add
sarl
ret
js
mov
ds
pop
test
push
ret
xor
dec
xchg
gs
ss
push
adc
aas
jbe
jge
test
jne
in
daa
cmpsl
sub
enter
cmp
mov
push
dec
jecxz
jns
mov
or
das
movsb
ljmp
lret
stos
cmpl
lea
loop
loope
lods
sahf
mov
jae
and
xchg
inc
xlat
lahf
out
push
rclb
iret
icebp
das
add
push
xchg
movsl
fs
ficompl
daa
hlt
out
cmpl
fdivl
adc
scas
out
or
stc
inc
inc
scas
pop
mov
leave
cmp
pop
fstpl
inc
inc
xchg
ljmp
inc
push
add
test
xchg
shll
adc
jno
fadds
cmp
add
xor
sbb
mov
xor
cltd
in
rclb
push
inc
std
push
ja
mov
fadds
xchg
scas
xor
test
mov
mov
lahf
adcb
out
add
dec
sahf
popa
arpl
inc
inc
xor
lahf
ss
dec
mov
hlt
push
jecxz
fisttpll
jg
incl
rolb
shrb
pop
jnp
test
loop
xor
int3
push
xlat
inc
arpl
dec
in
fnsave
sarb
jb
add
jp
jns
andb
dec
test
pop
dec
push
fistl
dec
inc
movsb
mov
orb
mov
loop
sub
lds
decl
bound
lods
shrb
nop
inc
inc
mov
dec
pop
jbe
js
shr
icebp
inc
adc
mov
sub
mov
xor
sub
push
xor
das
cmp
push
rol
adc
aam
push
or
in
stos
js
lret
or
aam
loop
dec
inc
xor
subb
cli
subl
loopne
pop
fidivs
mov
inc
jae
decw
pop
jb
adc
sub
cld
sbb
sub
mov
or
fnstsw
das
out
xchg
xor
fnstsw
ror
pop
jecxz
cmpsb
xchg
jb
push
push
jb
jl
test
mov
inc
movl
data16
jge
push
cli
adc
and
frstor
pop
xchg
popa
xchg
adc
lret
fidivl
dec
jge
push
inc
jmp
imul
adc
scas
ds
sbbl
cmpsb
xchg
jmp
or
stos
sub
int
add
dec
sub
imul
jbe
or
adc
pushf
scas
push
sub
jno
push
aaa
pop
fwait
out
dec
inc
aaa
adc
dec
je
scas
gs
aam
sub
adc
jne
popa
inc
sbb
ljmp
loop
jp
jb
push
roll
xor
fdivr
or
adc
test
fldt
mov
lret
fistps
push
add
or
jge
ss
mov
xchg
dec
or
mov
dec
outsl
outsl
popf
cmpsl
add
mov
ret
outsb
xor
xor
nop
jne
test
cmpsl
mov
sub
jo
cli
cli
mov
lods
imul
cltd
jb
lock
pop
hlt
bound
xchg
sub
shll
sub
jnp
addr16
xchg
fisubl
rcrl
sub
ja
div
repnz
test
scas
fisubrs
cmp
adc
fs
cmp
rcl
sahf
mov
mov
fisttpl
xlat
out
test
jb
mulb
add
test
stos
rcrl
jbe
sar
jbe
jnp
mov
sbb
outsb
push
rclb
stc
or
rorb
push
mov
cmp
scas
shl
ljmp
ficomps
adc
pop
enter
ja
mov
mov
shlb
xchg
loop
adc
push
or
cmpb
mov
xchg
ret
aam
xchg
sub
cmp
lret
mov
fdivl
inc
idivl
sbb
or
jb
pop
pop
mov
jmp
lods
adc
fcmovnu
cli
mov
shr
mov
inc
sbb
cmp
shl
cltd
int
rcrl
fbstp
outsb
adc
jp
push
je
in
adc
add
mov
sarb
push
cwtl
add
push
sbb
xor
inc
test
or
int3
xchg
dec
mov
push
stos
and
mov
push
xor
push
adc
mov
jne
jae
adc
pop
adc
or
xchg
sbb
lock
xor
jle
mov
or
movsb
popf
and
or
mov
jbe
mov
test
adc
push
mov
and
push
imul
aas
lahf
mov
or
cwtl
mov
std
add
jecxz
inc
mov
ja
iret
outsb
mov
dec
push
incb
push
xchg
sub
inc
xor
mov
nop
out
insl
inc
inc
add
cmp
mov
push
fbld
sbb
jp
enter
stos
sbb
mov
cmc
xchg
out
js
push
mov
push
je
sub
in
pop
add
xchg
scas
jb
mov
add
dec
xor
je
mov
pop
adc
inc
push
inc
adc
mov
mov
mov
xor
shll
push
inc
sub
add
sub
aaa
in
xor
test
ljmp
mov
cmpsb
out
daa
scas
negl
in
das
insl
outsb
lret
aaa
or
addr16
adc
popf
cmp
push
add
jns
mov
subb
adc
or
mov
mov
xchg
jp
in
xor
xor
rclb
or
dec
or
loope
push
mov
in
divl
hlt
mov
je
movsl
in
push
push
add
repz
sahf
lret
jb
ljmp
test
add
stos
jnp
jno
mov
cld
xchg
add
pop
sub
jge
roll
and
repnz
and
cs
cmp
xchg
xchg
sub
daa
iret
test
inc
pusha
mov
inc
cwtl
and
mov
std
push
add
shrl
imul
stos
jb
in
fcmovnbe
jne
jno
push
lret
pop
adc
cli
or
push
js
pop
stos
or
jecxz
lcall
aaa
push
fdivs
outsb
mov
imul
jb
cmp
nop
stos
popw
sub
xchg
shlb
lock
int3
xchg
or
imul
sbb
jno
sbb
pop
addr16
dec
mov
xor
xorb
iret
jl
cmpsb
inc
xor
add
mov
loope
inc
xor
mov
mov
inc
jno
mov
add
pop
jne
push
inc
lock
das
xchg
dec
in
or
mov
in
rcrl
lcall
imul
mov
lea
pop
jne
in
test
ja
adc
jp
cmp
push
jbe
fs
jg
xchg
pop
jno
mov
pop
test
fnstcw
dec
gs
push
iret
jno
sbb
mov
dec
popf
lret
mov
inc
enter
daa
or
xor
adc
aas
push
jmp
test
ljmp
fcmovne
bswap
inc
outsl
sti
test
jo
inc
stc
ret
mov
jnp
std
push
bound
iret
outsl
into
int3
test
outsl
sub
aaa
cli
mov
lds
cmp
mov
mov
dec
adc
xor
add
sbb
or
fucomip
sbb
jecxz
popa
xor
and
jg
loope
test
jo
cmpsb
push
out
push
insb
sti
scas
xor
sbb
pop
sahf
xor
pop
sbb
xor
lods
out
or
xor
add
cmc
add
jnp
mov
cltd
adc
xchg
mov
ret
test
pop
cli
sbb
icebp
or
aaa
mov
mov
add
and
mov
inc
cmp
sti
stos
add
add
popl
int3
xchg
orb
mov
fnstsw
andl
mov
or
stc
push
add
out
and
push
xchg
push
lock
out
jp
std
lods
jl
xchg
and
push
mov
mov
aaa
incb
push
ret
xchg
jne
std
sub
and
push
test
sbb
notl
das
insb
mov
add
jge
jbe
jne
jle
or
adc
cli
in
jnp
movsb
ja
cld
sbb
imul
sbb
pop
iret
mov
fistpl
loopne
mov
clc
aas
pop
popf
pop
mov
arpl
ret
jmp
jnp
inc
test
pop
subl
adc
pop
pop
mov
pop
ja
adc
rcrb
dec
xor
mov
ljmp
lock
insl
pop
mov
mov
das
ds
frstor
sbb
out
std
rclb
fcompl
xor
cmp
adc
fcomp
sub
cmpsb
leave
pop
jno
xor
scas
imul
rcrl
repnz
mov
pop
adc
imul
mov
es
fbld
rcr
aad
inc
jg
ljmp
jae
cs
pop
xor
mov
mov
mov
inc
add
add
adc
mull
pop
imul
clc
or
gs
ret
int3
cld
repnz
xor
xor
pop
roll
dec
jge
iret
in
sti
shll
or
cmp
loop
jne
icebp
dec
adc
aam
cli
sbb
mov
hlt
xchg
iret
dec
sub
or
incl
jg
jnp
imul
out
mov
mov
and
jo
repnz
leave
pop
or
mov
cmp
stc
sub
mov
dec
cmp
sarl
inc
sbb
lret
sbb
frstor
mov
push
out
cli
jge
xchg
dec
mov
in
inc
std
push
add
pop
test
andb
or
inc
inc
dec
pop
testl
shrb
mov
inc
xor
nop
dec
inc
stos
sub
int3
sub
aad
fisubrl
into
ficoms
out
mov
lds
adc
scas
jno
aaa
aam
lcall
shll
stc
daa
shrb
mov
jbe
jl
das
mov
dec
in
push
pop
mov
je
mov
cld
mov
ds
mov
or
sbb
mov
popl
jo
xor
sahf
mov
jns
test
or
jo
mov
scas
and
add
jbe
mov
push
jae
and
dec
add
daa
movsb
and
mov
out
adc
inc
xor
push
dec
add
dec
xor
xor
jp
mov
iret
mov
push
jae
enter
adc
stc
xchg
cmp
ficompl
inc
mov
pop
mov
sahf
test
in
loop
enter
pop
jno
push
and
insb
push
xchg
arpl
lret
lcall
sbb
xchg
xchg
lods
in
fcomps
lret
pop
pop
repz
sub
mov
test
test
or
pop
jle
test
sarb
pop
jns
negb
ja
pop
jbe
sub
mov
clc
mov
xchg
lods
aad
xor
scas
jns
mov
cmpsl
mov
test
or
ljmp
iret
fsubr
mov
and
push
addb
mov
pushf
loope
and
mov
movsb
lock
xor
arpl
mov
ret
pop
jne
and
dec
push
rorb
iret
cmp
sbb
mov
adc
push
inc
push
and
int
iret
pop
ret
mov
push
orl
and
jno
or
add
sbb
imul
xchg
sbb
aam
outsb
add
sub
pop
or
mov
sbb
lea
pop
or
fdivs
mov
clc
push
dec
dec
dec
shr
lcall
cmp
adc
push
ljmp
add
mov
mov
filds
lret
pusha
adc
daa
jae
nop
and
pushf
xchg
sbb
dec
jnp
mov
mov
test
mov
sbbl
dec
fmuls
lcall
es
fistpll
xchg
jno
mov
nop
ret
jge
stos
leave
cmpsl
aad
int3
inc
adc
icebp
xchg
lods
or
pop
adc
mov
xor
idivb
lcall
ret
xlat
xor
jl
jb
inc
adc
mov
dec
cmp
pop
jno
push
or
lock
scas
mov
xchg
jne
mov
icebp
mov
roll
dec
je
daa
int
mov
sbb
imul
clc
shlb
jb
push
iret
dec
pop
stos
xlat
push
pop
test
xchg
inc
data16
push
movsb
js
xlat
mov
or
dec
inc
pop
cli
bound
push
in
sub
sub
sbb
adc
mov
dec
scas
or
xchg
mov
xlat
int
aam
and
cmp
sub
inc
int3
add
shll
int
sub
mov
push
stc
xchg
inc
add
mov
bound
inc
lds
mov
sarb
into
in
adc
roll
movsl
xchg
ss
sbb
es
fisubrl
jo
icebp
jge
es
lcall
js
pop
iret
lods
xor
nop
push
stc
xor
mov
div
in
ljmp
scas
xchg
pop
mov
popf
pushf
arpl
hlt
jnp
fnstsw
stos
jnp
dec
lret
mov
mov
leave
lahf
cld
mov
push
rorl
in
insl
push
push
sub
fimuls
cmp
mov
rclb
es
add
fsubrl
add
dec
and
mov
in
add
call
push
mov
mov
jnp
pop
mov
push
push
cmp
dec
ret
ffreep
cmp
xchg
jns
and
std
xchg
test
jae
sahf
and
jg
icebp
loop
mov
ret
out
sub
pop
lods
and
popa
sub
insb
jo
and
add
nop
stos
add
and
sar
pop
shlb
movsb
mov
fstpt
push
xor
in
jg
repnz
sarb
inc
add
lahf
xchg
jge
pushf
dec
jle
mov
cwtl
lahf
xchg
push
push
out
sbb
cwtl
push
push
xchg
sar
sub
imul
test
and
jecxz
outsb
jo
inc
mov
xchg
pop
test
lret
mov
cmp
sbb
rcl
in
ret
sub
imul
mov
or
xchg
call
inc
jb
xchg
pop
test
mov
dec
sahf
jne
push
xor
cmp
jbe
ja
cwtd
or
jp
ret
sahf
sbb
lds
arpl
xchg
sbb
push
scas
push
pusha
adc
sahf
or
xor
shrb
fmuls
fdivl
int
jns
sahf
or
dec
xor
lods
mov
enter
imul
mov
push
mov
xchg
sarb
outsl
pop
sahf
in
call
test
cmp
push
jns
fldl2e
jmp
adc
in
pop
movsl
cwtl
jge
push
adc
sbb
mov
or
mov
lret
outsl
push
movsl
lret
in
push
push
mov
ja
or
ja
aad
or
xor
xchg
shrb
add
fs
out
rorb
lret
pop
scas
rorb
dec
inc
mov
popf
xchg
std
adc
ret
mov
popf
dec
push
sbb
aaa
mov
pop
stc
add
das
sahf
daa
jnp
pop
pop
sbb
mov
and
push
hlt
insb
add
mov
mov
inc
loope
popa
pop
mov
mov
sbb
scas
stos
jge
rclb
dec
inc
pushf
mov
jp
sub
or
push
fs
cli
mov
adc
xlat
inc
xchg
dec
xor
lahf
incb
test
cmp
popa
loop
divb
ljmp
pop
lock
push
push
jmp
mov
add
cmp
push
inc
loop
mov
push
inc
sarl
add
pop
loopne
mov
idivl
jnp
inc
enter
in
shrb
lods
int3
jbe
pop
hlt
stc
pop
push
mov
lods
notb
jne
ret
push
cmp
fsub
mov
xlat
jmp
inc
pop
push
jnp
je
mov
push
push
jecxz
xor
xchg
jmp
popa
cmp
push
adc
push
xchg
es
and
cmpsb
ja
dec
or
inc
cld
mov
xor
ficomps
lahf
mul
pop
mov
movl
dec
test
cmp
mov
xor
ret
sti
in
xchg
inc
mov
stc
jg
mov
push
push
jecxz
movb
aaa
pop
inc
dec
sub
mov
pop
and
mov
ds
pop
jbe
jg
jle
sub
inc
lods
or
adc
mov
enter
stos
jo
addr16
ror
pop
xchg
jnp
mov
fildll
movsb
fmulp
push
inc
scas
js
jns
lret
popf
lahf
push
sub
stc
adc
mov
fimull
xor
mov
bound
ljmp
dec
loop
push
adc
adc
pop
cmp
xchg
enter
pop
test
in
jne
mov
enter
loope
and
es
pusha
push
ret
daa
int3
or
dec
test
xchg
test
xor
das
aad
adc
xor
mov
repnz
jbe
push
push
pop
dec
fwait
divl
push
mov
dec
adc
xchg
stc
mov
jnp
test
add
aam
arpl
cmp
sbb
push
mov
fbld
mov
sbb
cmovb
cmpsb
sub
cmp
sub
sub
dec
pop
add
xor
or
lea
cmpsl
push
ds
clc
rcrb
out
iret
sbb
xchg
push
push
mov
in
mov
sbb
push
scas
mov
in
jo
dec
fisubrs
push
jns
push
fs
out
mov
xor
sub
aas
xchg
je
and
lret
jne
jp
adc
std
hlt
xchg
insl
dec
sti
arpl
mov
mov
aam
repz
dec
pop
mov
pop
xchg
lods
in
rolb
inc
pop
push
and
cmpsb
mov
pushl
mov
cmpsb
pop
dec
sub
aad
pop
pushf
int
lcall
in
movq
sbb
stos
jae
or
jg
mov
jg
movsb
enter
aad
sub
adc
mov
push
enter
inc
push
mov
pushf
dec
iret
adc
jno
dec
inc
data16
mov
dec
push
test
xor
mov
jmp
sub
sub
dec
mov
test
int
lret
clc
jle
xchg
sbb
mov
ss
divl
popf
xchg
cmpsl
ret
adc
cmp
adc
mov
xchg
pop
aam
mov
not
cld
xchg
cmp
mov
js
mov
xchg
inc
xor
push
mov
dec
adc
mov
pop
lret
inc
pop
and
outsb
or
push
cmpsl
inc
ss
xchg
add
std
mov
sbb
mov
rcr
jae
lcall
jbe
enter
out
pop
push
inc
or
xor
jmp
adc
mov
or
mov
ss
xchg
mov
inc
mov
sub
aam
std
jno
stos
push
jne
or
jg
lcall
test
jmp
ret
mov
xchg
addr16
dec
insb
add
js
test
inc
xchg
imul
fcoms
call
loope
lods
or
jecxz
outsl
xor
xchg
filds
lea
mov
pop
jle
sarb
push
adc
fisttps
imul
cli
xorl
bound
inc
outsb
fisttpll
push
and
pop
mov
sbb
sbb
mov
push
cmp
aam
stc
sub
cmp
mov
pusha
out
cmp
mov
cmp
adc
mov
jmp
fldenv
je
xchg
adc
xchg
cmc
lret
mov
into
push
mov
ret
push
lods
push
mov
jmp
xchg
aaa
and
jecxz
in
enter
aam
in
stc
xchg
push
push
shrb
jae
ja
cmp
addr16
lahf
loop
pop
lock
cmc
xchg
and
ss
cmp
jnp
xchg
je
lea
xchg
dec
ljmp
xchg
add
stos
push
pusha
adc
jmp
sub
adc
sbb
xor
sahf
dec
jg
sbb
fdivrl
stc
push
repz
pop
cmp
loopne
out
and
and
sub
push
shrl
mov
pop
in
dec
or
pop
adc
pop
mov
ljmp
in
mov
out
call
xchg
cli
mov
adc
ret
popf
hlt
rcrl
add
mov
push
aaa
add
or
insl
cmpsb
inc
xchg
or
in
jns
cmpl
ficoms
fs
ljmp
cmp
or
insl
ss
pop
push
cmpsb
iret
push
inc
in
and
mov
inc
jno
xor
js
jg
ljmp
lret
xchg
int
pop
mov
dec
mov
mov
sub
jmp
xor
inc
mov
std
lret
mov
lcall
or
lret
jp
cmp
mov
and
call
and
jbe
adc
in
jnp
mov
cs
pusha
dec
adc
rol
out
sbb
pop
cli
add
and
aad
ljmp
and
pop
jo
testl
mov
mov
add
push
insl
sbb
pop
mov
and
adc
fcoms
insb
insb
push
add
mov
scas
cmp
push
pop
mov
std
jge
mov
mov
cwtl
scas
ret
xchg
icebp
fmul
pop
or
loop
daa
cmpsl
jae
push
jno
dec
es
push
mov
jmp
insl
cmp
lret
xor
push
pop
popa
sbb
push
sub
push
adc
pop
xchg
movsl
cmp
push
xor
imul
cmpsl
in
icebp
inc
mov
ror
dec
fimull
call
test
rcrb
in
gs
xorl
lahf
xor
sub
xor
pop
mov
test
dec
test
idivl
stc
cmpsl
hlt
ss
sahf
dec
es
loope
cwtl
inc
fldt
in
out
nop
sbb
pop
lret
jl
jl
ljmp
adc
cli
in
pop
and
jmp
mov
push
or
popa
es
repnz
jmp
adc
clc
fbld
add
test
dec
pushf
insl
or
mov
std
push
push
add
divl
aas
call
and
xchg
cmp
mov
aaa
cmpl
pusha
mov
xchg
mov
imul
in
icebp
test
lret
icebp
in
jmp
mulb
push
lret
and
fisubl
adc
movsl
jae
outsb
ja
test
lahf
mov
lret
inc
jne
call
adcl
ja
push
dec
pop
push
xchg
or
call
pop
dec
pop
fisttps
jns
xor
add
bound
ret
outsl
push
and
sbb
cmpsl
repz
or
sahf
xlat
js
sbb
mov
lock
add
mov
sbb
in
jno
add
sbb
in
mov
and
fxch
mov
sbb
rorl
mov
popf
push
std
push
mov
push
ss
sbb
mov
ljmp
jmp
xorb
cmp
or
jbe
or
sbb
pop
push
push
adcb
xor
imul
cmp
xchg
add
fwait
fwait
mov
addl
xchg
cmp
jecxz
popa
lahf
jb
out
add
and
pop
dec
push
push
jl
leave
pop
cmpsb
mov
nop
ret
sahf
sbb
inc
inc
xchg
sbb
dec
cmp
fsub
xchg
mov
mov
and
cmp
shrl
lods
xor
inc
xchg
dec
aas
mov
xor
xor
ds
cmp
sbb
add
cmp
mov
or
shl
and
push
jb
adc
sarb
inc
jmp
ljmp
jns,pt
insb
ja
aas
dec
or
push
push
pop
xor
sbb
out
lock
pop
in
rcr
mov
push
or
inc
clc
jp
pop
xchg
dec
fucomi
std
cs
mov
or
mov
pop
es
inc
mov
insb
lahf
ljmp
stos
push
scas
jle
imul
orb
bound
rcrb
mov
cmp
loopne
pop
and
pop
mov
jbe
xchg
andl
repnz
jb
jbe
out
sti
pop
pop
into
xor
fdivl
insl
inc
popf
pop
add
stos
jns
xor
daa
loope
sbb
mov
jb
pop
push
and
mov
cwtl
and
push
aas
test
jnp
jl
jl
loope
daa
mov
loop
jb
push
mov
pop
pusha
inc
int
mov
push
xorl
outsb
or
ret
add
jno
mov
in
push
mov
add
addl
xchg
add
repz
insb
scas
hlt
repnz
int
sbb
xrelease
repz
movsl
out
pop
notb
lds
push
mov
sub
mov
adc
dec
mov
imul
and
sti
mov
sti
scas
xor
xor
shrl
clc
and
pop
or
repz
pop
lahf
cwtl
cmp
cmp
lock
or
insl
adc
repz
into
sti
mov
push
adc
lret
xchg
imulb
dec
sbb
mov
ja
cmp
cmc
mul
dec
xchg
cmc
int
xor
push
mov
adc
adc
inc
stc
push
fcoml
shlb
scas
mov
hlt
cli
in
xchg
or
sbb
aaa
push
adcl
stos
stc
andl
fsubl
enter
add
jecxz
add
clc
stos
push
jp
in
xchg
repz
pop
mov
push
push
rorb
imul
inc
mov
and
cld
adc
je
jno
shll
or
mov
daa
fldt
mov
fwait
push
add
xchg
cmp
ficoms
cmp
insb
xchg
popa
mov
stos
jg
lea
cmc
sbb
or
sub
imulb
notb
pop
add
xlat
ffreep
push
call
xchg
push
in
xchg
push
andb
dec
in
sbb
jecxz
es
push
in
bound
paddsw
pop
loopne
std
dec
pop
or
mov
mov
aam
push
jle
outsb
lds
cmp
cmpsb
or
mov
aaa
fcomip
clc
push
adc
xchg
pusha
data16
jecxz
mov
and
cmp
aas
rcrb
inc
fwait
in
ror
jmp
add
mov
addl
adc
mov
mov
test
filds
mov
loope
cmp
or
out
iret
jl
and
mov
jp
mov
cmpsb
imul
pop
push
fists
cmp
sbb
lods
jmp
sub
adc
lds
in
mov
in
and
or
call
stos
dec
inc
pop
mov
ss
cmc
stc
jno
push
aaa
xlat
push
push
leave
adc
cwtl
adc
dec
cs
or
rcrl
in
jecxz
daa
dec
ss
popa
mov
jecxz
sbb
fildl
repz
ds
out
das
ja
pushf
cmpsb
test
std
mov
pop
pushf
adc
xor
add
or
movsl
f2xm1
insl
xlat
cmpsb
test
outsl
sti
adc
movsl
nop
jbe
dec
repz
int
xor
pop
lods
push
jecxz
push
or
mov
inc
and
mov
clc
aas
rolb
or
add
out
fcompl
push
rorl
das
inc
addr16
mov
or
std
inc
or
pop
pop
inc
mov
into
add
popf
pushf
std
lret
jge
sti
and
nop
pop
jg
dec
cli
adc
xor
add
rol
sub
mov
in
test
aas
pop
pop
in
lock
mov
sbb
sahf
jecxz
pop
lret
imul
adc
push
test
movsl
push
sub
xor
data16
cmp
dec
adc
mov
mov
into
pop
inc
adc
and
mulb
push
and
sub
test
add
repz
cmp
or
aas
repnz
rolb
fistpll
sarl
inc
js
xchg
push
fistl
lret
divb
test
mov
jns
pop
fisttpl
scas
rcl
push
xchg
add
dec
cmpsw
scas
cltd
add
jnp
push
lahf
sbb
cmp
aas
mov
xor
dec
fwait
mov
clc
das
shl
jnp
es
popf
loope
xor
lret
aam
cmp
jle
mov
add
cmp
clc
out
and
fnstcw
push
lock
sti
addr16
jb
mov
jge
in
out
daa
movsl
fisubl
pop
inc
xchg
cmpsl
out
fstps
xor
nop
das
sub
push
mov
inc
xorb
int3
xor
jns
aas
or
stc
pop
ds
sbb
add
xlat
aad
fisttpl
inc
push
push
push
rcrl
push
sub
enter
fiadds
push
mov
xchg
iret
push
lea
push
cmp
nop
dec
jns
cmc
adc
add
pop
insl
push
fs
or
cmpsb
mov
pushf
cmpsl
jp
pop
in
push
mov
add
sub
xchg
adc
dec
sarb
add
or
imul
decb
cltd
or
test
fdivrl
pop
cltd
jo
aas
and
loop
and
lret
nop
adc
mov
aam
bound
mov
mov
jnp
or
testb
xor
or
pop
jbe
jbe
inc
lods
stos
or
pusha
scas
inc
add
subl
mov
test
jmp
and
jg
sub
cmc
cmp
out
addl
test
hlt
xor
sub
mov
out
sub
bnd
jb
xor
pusha
xor
stos
arpl
cwtl
imul
mov
push
test
cli
sbb
push
popf
or
mov
sub
shll
ret
or
sbb
xlat
iret
jmp
sub
adc
sub
sti
cld
jmp
and
fs
dec
cmp
jmp
ret
lock
add
cmp
pop
out
add
andb
or
daa
es
sbb
pop
in
mov
icebp
adc
aaa
ss
xor
in
pushf
adcb
popf
lret
pop
push
idivl
imul
hlt
or
cmp
adc
xor
pop
jb
loope
insl
es
jno
cmp
mov
cmp
pop
and
and
jle
or
fs
inc
loop
lcall
leave
cmp
xor
mov
pop
pop
fcmovnb
jl
rolb
out
mov
and
cmpsl
test
adcl
stos
popa
in
xchg
cmpb
pop
mov
std
inc
pop
js
fwait
adc
push
mov
icebp
adc
add
and
rcl
mov
cs
xchg
and
in
insb
cmp
adc
ds
mov
scas
mov
test
xchg
jae
gs
and
push
aad
sub
into
lds
mov
lret
or
push
rcl
out
in
jmp
adc
std
test
mov
std
addr16
xrelease
repnz
mov
pop
dec
mov
in
and
jno
mov
fcompp
xchg
je
dec
into
test
pop
dec
popf
or
cmp
lret
popf
or
out
cltd
xchg
leave
fisubl
xchg
sub
jecxz
mov
jns
adc
into
xchg
push
or
and
outsl
or
fisttpl
jbe
out
cwtl
lds
roll
fcomi
sub
mov
mov
sub
pop
mov
cmp
and
insb
add
pop
mov
call
lods
or
pop
inc
mov
out
jl
pop
test
aaa
inc
int3
jmp
test
mov
cwtl
mov
inc
cmp
or
add
jns
add
test
mov
lds
sbb
aas
inc
nop
mov
sub
rcl
fsts
fidivl
fnsave
push
repnz
mov
out
mov
call
mov
add
fsubrp
and
mov
addr16
stos
push
in
mov
mov
ds
push
cmp
mov
pop
cld
cmp
pop
or
jp
and
dec
rcrl
xor
dec
lods
jge
rol
mov
ss
cmp
xor
add
xchg
cld
mov
js
dec
fistl
inc
icebp
pop
cmp
xchg
loope
out
add
mov
dec
aas
add
cmpsb
fwait
sbb
pop
lods
xor
in
fdivr
dec
rolb
imul
push
and
add
and
pop
and
jne
cli
jge
test
pop
or
adc
jmp
rclb
adc
dec
mov
rclb
inc
xor
or
data16
dec
test
pop
movsl
or
cmc
jmp
ret
cmp
adc
sub
shll
jne
inc
jp
ljmp
and
addl
fimull
push
push
pop
orl
orl
imul
add
xchg
xchg
movsb
scas
dec
scas
pushf
inc
sbb
jg
lahf
mov
daa
xor
pop
pop
outsb
mov
pop
cltd
add
mov
mull
add
jne
inc
jb
mov
adc
cs
sarb
in
insl
outsb
jb
punpckhwd
adc
jle
or
jl
sub
aas
nop
test
fwait
outsl
test
or
pop
sti
lret
in
cmp
ljmp
fistpl
mov
inc
mov
pusha
lods
jno
mov
mov
lods
jno
mov
test
mov
fists
cli
mov
fistl
mov
jnp
and
push
movsl
inc
mov
je
bswap
movsb
es
leave
sbb
or
adc
fmull
adc
shl
push
sub
aas
push
sahf
adc
lea
aas
popa
and
pop
adc
into
sti
lock
lods
mov
inc
jb
push
cwtl
cmp
or
jecxz
and
inc
dec
inc
std
sar
popf
dec
xchg
lods
dec
xchg
push
icebp
mov
aas
repz
fbld
sbb
aad
jne
repnz
inc
imul
aas
mov
push
push
pop
enter
xchg
add
dec
xor
cli
rcll
pop
mov
pminub
into
xor
sbbb
mov
xor
arpl
pop
insb
mov
mov
or
and
and
sub
arpl
gs
cmp
sbb
jl
data16
mov
mov
add
out
shl
xlat
sbb
adc
test
fstl
insl
pop
stos
push
xor
rorl
lds
pop
push
jb
lahf
sarl
cmp
mov
out
test
sbb
mov
mov
pop
insb
ja
repz
mov
jecxz
adc
icebp
pop
iret
test
adc
rcrl
repz
xchg
and
fcmovnb
arpl
inc
frstor
fs
test
add
jbe
enter
stos
and
ds
clc
nop/reserved
inc
push
mov
decl
lret
or
sub
mov
xor
test
in
mov
add
sub
cmp
mov
je
cmpsl
lea
push
loope
push
pop
sbb
ljmp
loopne
xchg
divl
lret
aas
xor
ja
hlt
pop
enter
inc
mov
push
jb
mov
mov
sahf
les
test
repz
push
or
pop
mov
sbb
inc
jnp
inc
rcl
cmc
adc
rcr
and
out
mov
dec
push
test
sbb
pop
gs
rorl
and
fiaddl
pop
arpl
sub
adc
add
imul
sub
add
xlat
sub
repz
mov
ret
sub
sti
imul
call
sub
mov
cmc
mov
xor
xchg
iret
pop
pop
bnd
sub
mov
mov
inc
hlt
ds
xor
xorl
lret
stos
jae
pop
shl
mov
mov
cmpsl
test
sub
hlt
ja
cmp
pop
aas
test
aas
jecxz
sbb
push
add
arpl
ss
shrb
lods
dec
pmulhw
jecxz
iret
mov
scas
divl
or
faddl
and
sbb
test
ss
sbb
cmp
stos
fs
fisubrl
jnp
popa
jg
mov
dec
xor
push
mov
fnstenv
stos
push
ljmp
push
inc
add
addr16
inc
push
or
inc
out
arpl
lret
cs
mov
pop
and
stos
ja
or
ljmp
pop
lret
movsl
lahf
dec
mov
cmc
jo
ljmp
xchg
jo
jle
sbb
insb
pop
inc
imul
scas
push
sti
sbb
out
mov
xchg
or
out
daa
cmp
std
rclb
outsb
add
aas
mov
in
mov
jne
or
lret
mov
mov
lea
xlat
bound
xchg
ret
cmp
test
hlt
cmovle
xor
imul
or
jge
clc
add
ljmp
xchg
push
dec
out
testb
dec
mov
sbb
fiadds
movsl
in
lahf
outsl
nop
pop
movsl
ja
jne
in
cmp
jne
shr
mov
sbb
jl
inc
outsb
sbb
cmp
test
data16
fsubs
push
shlb
imul
mov
adc
sbb
repz
fdivrl
arpl
arpl
shll
dec
cli
loop
mov
inc
or
xchg
jecxz
iret
add
xor
pop
in
out
rol
dec
aaa
arpl
aad
xor
notb
cli
jns,pn
adc
dec
and
pop
dec
fwait
out
mov
lret
inc
or
stos
fcmovbe
loope
jmp
xor
insl
out
stc
and
mov
popl
je
insb
cmpb
insb
adc
in
mov
repz
in
aaa
pushf
mov
clc
xchg
cmp
push
fcoml
push
loope
cltd
inc
dec
les
daa
inc
cmpsb
mov
cmp
xchg
push
pop
sbb
mov
mov
xor
mov
jmp
lret
cwtl
add
fwait
push
arpl
dec
mov
fsubrs
out
shrl
dec
xchg
call
cs
push
scas
sub
jb
ljmp
mov
loop
dec
arpl
in
mov
ja
mov
jg
push
shlb
mov
add
mov
ffree
xchg
jp
jp
std
add
xor
jg
je
sahf
dec
pushf
inc
add
cmp
and
push
cmc
cmp
pop
inc
loope
or
jmp
imul
insl
push
fnsave
sahf
xchg
sahf
mov
xchg
notl
and
mov
dec
jbe
xchg
cli
sbb
imul
cli
filds
push
mov
std
cmp
xlat
sbb
push
test
fwait
std
mov
lret
pop
cli
cmp
lret
lea
js
in
xor
clc
test
sub
push
adc
or
rcll
cmp
jmp
sub
je
cmp
inc
pop
xchg
lods
and
and
stos
mov
or
pmaxsw
add
dec
ss
shrb
popa
int3
std
add
mov
mov
outsl
lret
push
sahf
cwtl
aam
push
mulb
movl
fistl
xor
jae
xchg
cmp
std
or
fidivrs
sub
testl
ret
in
in
jns
mov
leave
jp
hlt
cmp
pop
popf
cmp
add
mov
mov
mov
push
jne
cmp
or
sbb
jmp
push
xchg
testl
mov
inc
insl
bound
insl
insl
aaa
movsl
and
fldt
scas
pop
xchg
push
cs
mov
mov
cmp
lea
cld
xchg
cltd
and
aaa
mov
sti
addb
mov
in
cli
cwtl
cwtl
mov
cmp
add
out
push
xchg
or
mov
mull
test
into
sbb
orb
dec
out
push
gs
stos
outsl
test
test
xchg
dec
sbb
adc
push
shlb
scas
sub
sbb
arpl
ficoms
out
mov
mov
nop
adc
loop
jo
out
cmpsl
mov
sub
stos
push
add
orl
sbb
xorb
dec
mov
das
in
cmovo
fistpl
sbb
add
aas
dec
in
cmp
stc
mov
cmpsb
sbb
dec
mov
inc
sahf
add
sbb
das
ja
shr
imul
out
xchg
cmp
jno
imul
lods
mov
jmp
cli
imul
into
cltd
pop
movsl
sub
add
jl
out
inc
push
lock
push
addr16
adc
frstor
add
aam
cmp
dec
rolb
add
push
inc
ss
lods
jmp
or
mov
dec
xor
aaa
into
cmp
mov
adc
sbb
imul
das
adc
lahf
shlb
add
push
sub
call
xchg
ljmp
mov
aam
aam
xor
loop
movsb
iret
ss
add
fnstcw
mov
cs
rorb
push
mov
sbb
jp
sub
fucomp
je
lahf
pop
mov
xor
jecxz
sub
mov
fstps
cli
sbb
inc
data16
jl
in
fldl
in
test
xchg
push
aaa
das
test
xchg
dec
rorb
arpl
inc
and
adc
mov
sbb
repz
xor
jae
mov
jge
inc
hlt
mov
fadds
adcl
jecxz
xor
mov
cmpsb
leave
in
jb
mov
jp
pop
scas
mov
iret
pop
test
inc
lods
lock
jp
insb
fmuls
xchg
divb
mov
insl
enter
orps
jns
lahf
pop
mov
mov
xor
jb
pop
aam
xor
scas
scas
aas
jg
cwtl
movsl
notb
xlat
xchg
adc
mov
lahf
arpl
sbb
jge
sahf
out
or
cmpsl
or
dec
push
jb
add
rcrb
leave
sarb
repnz
clc
mov
test
loop
dec
test
insb
jmp
adc
sbb
in
mov
adc
scas
xorl
lds
fwait
bound
cmp
xchg
pop
call
popl
sub
fisttpll
sbb
sbb
addr16
or
loope
sbb
pushl
outsb
add
fwait
push
inc
or
cmp
jecxz
mov
bound
adc
mov
sbb
add
lods
pop
fimuls
jmp
lds
or
mov
pop
shll
adc
inc
enter
mov
leave
std
cmp
fucom
into
out
push
test
pop
stos
jns
adc
lret
bound
test
xor
jo
aad
mov
inc
adc
ds
call
push
stc
push
jne
jg
fdivl
sub
jbe
pop
adc
xlat
mov
cmpsl
cltd
fldcw
xchg
push
cli
pop
daa
cwtl
or
mov
scas
or
cwtl
aas
das
cli
or
sub
imul
push
push
fbld
push
stc
jp
ds
adc
adc
adc
sub
int
icebp
sahf
adc
dec
cmp
or
inc
mov
cli
jo
add
in
lret
cmp
push
dec
cmp
adc
aas
fimull
leave
je
pusha
sbbb
xchg
lods
fwait
jno
push
lahf
popf
inc
aad
mov
jecxz
xchg
mov
stos
inc
adc
repz
jbe
out
out
fdivrp
ljmp
push
ljmp
ss
movb
xchg
insl
inc
mov
shrl
xchg
dec
fnstcw
adc
out
push
lret
adc
arpl
movsl
push
cltd
adc
enter
mov
enter
mov
or
in
mov
lret
nop
cmp
xor
sbb
into
xchg
push
fidivrs
push
cwtl
jns
sahf
in
push
cmpsl
xor
jns
xchg
outsl
addr16
lcall
cltd
jmp
cld
cmpsb
clc
and
or
and
xchg
pop
fidivs
out
test
ds
lds
cmp
outsl
dec
loopne
or
sub
jnp
loop
jg
or
dec
notb
inc
mov
sub
sub
or
inc
pop
adc
xchg
cltd
popa
pop
and
jne
push
xchg
loopne
jl
xor
hlt
pop
frstor
add
mov
push
mov
sbb
xlat
pop
lods
sbb
mov
gs
jae
rcrb
gs
clc
mov
push
pop
sbb
out
mov
jns
in
push
scas
add
out
out
inc
fcompl
sub
xchg
xorb
jno
aad
xor
inc
add
fs
idivb
fwait
andb
pop
and
xchg
in
jo
imul
pop
daa
insb
sub
das
out
and
xchg
nop
mov
cwtl
je
mov
add
fisttpll
pop
and
iret
fistpll
repnz
outsb
sbb
call
jge
movsb
fdivp
push
int
pop
mov
leave
incb
movl
test
jae
dec
addr16
divb
sbb
push
jmp
cwtl
aam
mov
mov
lret
rorl
pop
push
in
pop
je
adc
add
jne
sbb
orl
pop
jno
push
mov
sbb
test
stc
sbb
push
loopne
mov
add
repnz
loopne
adc
loop
cwtl
mov
dec
filds
stos
push
sub
jne
outsl
add
sarb
jg
pop
cli
mov
xchg
sbbl
repz
mov
adc
imul
outsb
inc
mov
arpl
popf
inc
sbb
mov
add
sbb
push
lock
dec
or
fs
aad
or
push
jg
lahf
add
movsb
or
out
push
sub
test
mov
fisubs
mov
jo
repnz
jecxz,pt
out
mov
cld
imul
xchg
mov
aam
rcl
add
cmpsw
rorl
imul
cmp
inc
leave
push
imul
sbb
es
fwait
js
push
lods
pop
mov
dec
movsl
xor
adc
ret
aam
fsubr
sbb
jne
ss
test
test
aad
out
pop
xor
mov
jne
inc
cmc
loopne
mov
pusha
imul
scas
shrb
and
negb
inc
pop
repz
leave
mov
test
push
push
sub
int
std
ds
push
daa
inc
icebp
jns
test
xchg
add
push
pop
outsb
cmp
jbe
outsl
add
pop
jno
repnz
cmp
adc
xchg
jno
and
ljmp
jbe
rorb
insb
cmpsl
add
cmp
int3
jp
pop
jne
pop
ss
incl
in
xchg
and
sti
add
add
jae
xor
fcompl
adc
or
lods
adc
dec
andb
and
inc
jle
push
insb
and
out
cltd
pop
lds
dec
lods
adc
stc
inc
or
dec
out
push
pop
sbb
idivb
adc
repnz
fdiv
scas
mov
movsb
or
mov
xchg
push
pop
fs
imul
xchg
or
inc
cmc
mov
xchg
push
add
jecxz
mov
mov
lcall
sbb
mov
out
mul
ret
outsl
cltd
lcall
jbe
shl
std
popf
pusha
icebp
movsb
sbb
cltd
sbb
mov
and
xor
subb
or
sub
pop
mov
hlt
dec
hlt
push
and
cmp
sub
mov
cmp
xor
ret
repnz
push
mov
imul
sbb
mov
aaa
inc
icebp
imul
out
sbb
push
lahf
call
sub
dec
imul
xchg
add
out
jl
jbe
lds
and
popa
mov
pop
mov
sub
das
out
and
fmuls
dec
push
push
int3
xor
xor
loop
inc
mulb
pop
push
lret
fdivs
nop
arpl
fidivrl
lock
mov
mov
xchg
pop
into
and
ja
push
jae
in
sub
jmp
cld
scas
cmpb
sub
sub
dec
bound
add
lea
jb
xchg
mov
pop
cmp
stc
pop
addr16
shrl
cmp
imul
push
insb
xchg
push
jns
hlt
add
sahf
cmc
loope
lret
sub
cmp
sub
xchg
mov
adc
jl
lea
jge
ret
mov
inc
fisubrl
loop
xlat
sbb
cltd
clc
mov
inc
js
cmp
pop
mov
mov
add
mov
leave
loopne
roll
or
cld
test
call
inc
add
cs
je
sarb
in
push
ret
inc
shlb
or
jg
cmpb
push
add
xchg
les
aas
dec
in
cmpb
mov
cmp
pop
das
xchg
xor
cmp
shrl
in
mov
sahf
pop
jns
push
and
xchg
inc
mov
cmpsb
adc
out
clc
fbstp
push
sub
ljmp
in
or
insb
jne
loope
ret
test
inc
jp
insl
je
test
test
jne
test
mov
sub
cmp
or
scas
cld
fs
jno
lahf
fwait
lods
pop
stos
ret
xor
and
scas
fadd
mov
mov
into
cmp
ss
push
fistpll
cli
push
push
jle
or
cmp
sbb
xchg
push
and
xchg
fxch
dec
stos
mov
movsl
mov
cmp
loop
arpl
cmp
fidivl
pop
lock
aas
pop
mov
mov
push
ret
jg
inc
push
fldl
and
fsubl
dec
jmp
dec
xlat
cmp
mov
sub
adc
movsl
mov
adc
push
popa
inc
mov
adc
lods
xchg
cld
sbb
cmpsl
fdivl
addl
xor
xchg
jecxz
aas
mov
jl
mov
add
xchg
mov
repz
stc
sub
shll
cmp
sub
xor
sub
and
cmp
outsb
push
or
mov
les
xchg
jp
stc
lea
mov
adc
out
movsb
jg
dec
sbb
je
mov
pop
pushf
lret
insb
mov
push
jge
int
or
fmulp
mov
and
vmwrite
fldenv
mov
mov
idivl
push
jmp
aaa
mov
and
sub
jmp
inc
inc
dec
les
sbb
sub
jmp
cmpsl
sub
cmp
ja
jb
mov
lcall
stos
add
inc
shl
pop
rorb
enter
addb
popf
push
lods
fdivrp
mov
push
sub
pushf
mov
in
shlb
fndisi(8087
fimuls
mov
cmp
inc
cli
push
pop
inc
jns
xchg
cmp
clc
jmp
enter
std
fnstsw
lcall
jmp
iret
orl
pop
loopne
push
or
dec
mov
lret
enter
push
add
das
push
xchg
imul
jbe
xchg
loopne
fdivr
test
ss
or
rorl
rcrb
push
cld
lods
sbb
test
xchg
sbb
loope
rclb
mov
movsl
js
sarb
lock
in
xchg
ja
mov
xchg
mov
sbb
pushl
inc
fiadds
pop
mov
call
mov
icebp
jp
sbb
int3
stc
fcom
dec
ljmp
outsb
or
fistl
lods
sti
cmpsb
lahf
in
xor
push
imul
inc
dec
jnp
in
pop
jp,pn
js
stc
popf
ss
jns
repz
cwtl
repnz
push
adc
icebp
xor
cmc
in
into
pop
loope
jne
fistpll
aad
mov
jmp
jbe
test
jae
in
jo
mov
push
pop
loope
in
mov
fcmovu
ret
or
mov
push
fstpt
sbb
out
das
mov
and
mov
and
sub
adc
adc
out
rcrb
sub
loope
xor
xor
adc
jmp
lds
loopne
sahf
pop
sarb
inc
pop
leave
jbe
mov
fdivl
out
lods
icebp
fdivs
pop
pop
imulb
aam
dec
lods
fcmovne
in
popf
mov
fs
jno
cmp
mov
adc
pop
jge
cmp
sbb
xchg
fcomps
mov
xchg
push
adc
pop
in
mov
mov
or
fnsave
pop
sahf
inc
ds
or
dec
dec
xchg
ds
sbb
adc
scas
aam
pop
inc
lods
mov
mov
inc
shll
lods
xor
fsts
enter
flds
inc
js
push
jg
pop
push
dec
pop
fisttpl
push
push
jo
dec
jae
out
push
out
lds
shrl
push
mov
popa
js
add
jmp
shrl
imul
adcl
aaa
jns
sbb
sub
add
add
mov
pop
pop
fbld
test
ja
or
arpl
stos
jns
cmpsb
sbb
sbb
addr16
push
loopne
movsl
add
shrb
divb
cmp
dec
cmp
xchg
mov
gs
lea
mov
jnp
movsb
icebp
xchg
cmp
push
fimull
ret
pusha
arpl
inc
sub
inc
xchg
roll
int3
mov
cmp
mov
aas
arpl
sbb
xchg
into
je
rcl
lea
loop
inc
mov
fisubrs
xchg
dec
clc
cld
and
push
lea
mov
mov
out
xchg
cmp
jmp
mov
or
ffree
hlt
ljmp
pop
xchg
leave
inc
xlat
push
call
xor
mov
jle
xchg
testb
iret
aaa
test
test
cltd
stos
mov
testb
cmp
roll
and
rcrb
mov
pop
lahf
jp
jle
in
xlat
das
mov
cmp
and
pushf
addr16
jle
ret
push
adc
cmp
adc
test
mov
push
mov
das
lds
pop
sbb
cmpl
pop
call
jae
push
div
jg
mov
push
aad
in
outsl
add
test
push
decb
push
andl
test
stc
imul
shlb
lds
xchg
sbb
int3
pop
pusha
adc
jae
nop
sbb
test
subb
pop
jmp
repz
sub
pusha
dec
push
sbb
lcall
sub
xchg
ret
scas
push
call
adc
cld
rclb
shll
lds
int
popf
imul
fldln2
nop
xchg
mov
roll
repnz
jno
mov
divl
xor
jae
inc
pop
pshufw
adc
movsl
ret
jecxz
adcl
mov
dec
jle
jno
loope
dec
lock
inc
push
mov
cmp
add
test
sub
imul
cmp
push
sbb
ja
in
jmp
sti
mov
fstl
call
aaa
int3
jne
jl
movsl
push
out
dec
pop
push
clc
sub
lret
push
cld
push
insb
push
lret
fiaddl
xchg
mov
repnz
iret
movsl
and
mov
aas
dec
jge
rcrb
lods
sbbl
pop
frstor
or
xor
add
pop
mov
push
test
lods
cwtl
or
lret
jg
lods
sbb
mov
fmul
or
sub
pop
jl
ror
xor
je
pop
jb
xchg
pop
jle
aas
inc
adc
sbb
xchg
push
fdivrs
clc
dec
add
addr16
adc
mov
shl
add
pop
mov
jecxz
stc
push
dec
pop
sti
dec
push
jmp
cmp
popf
pop
sti
jae
xlat
test
imul
cmp
sbb
bound
shlb
call
addb
loope
test
stos
lret
popf
cmp
pop
sub
int
lods
rolb
mov
inc
aam
dec
ror
push
in
decb
leave
fiaddl
mov
int3
mov
jl
or
xchg
lds
mov
or
jns
add
add
lcall
mov
xchg
stc
stos
ss
jb
sahf
stos
orb
in
xor
iret
adc
xorb
lcall
aas
jg
sbb
add
pushf
in
pop
add
jecxz
lret
xchg
mov
jp
pushf
outsb
push
cltd
sahf
mov
cmp
push
and
inc
std
cmp
pop
subb
call
mov
pop
push
and
sti
rcr
imul
inc
bound
and
push
rcll
cmp
in
mov
cmc
pop
push
cmp
xchg
int3
xlat
inc
adcb
mov
out
ja
mov
cmc
adcb
fdivr
mov
pop
adc
jb
mov
in
jle
pop
scas
jg
sub
sub
mov
inc
pop
dec
xchg
jge
jns
es
fsubl
mov
xchg
dec
or
fadds
movsl
ss
jle
loopne
addb
adc
hlt
or
push
cmp
mov
add
or
pop
and
mov
pop
lea
or
add
lods
sub
jbe
pop
mov
filds
sub
pop
or
fistl
scas
inc
cmp
and
add
outsl
sar
mov
xorl
movsb
cli
add
pusha
cmpsb
adc
sbb
icebp
outsl
std
sub
inc
bnd
dec
ret
dec
movsb
stc
lods
insl
imul
mov
popf
fldenv
dec
jne
sbb
sbb
stos
cli
sbb
mov
push
push
hlt
test
std
fldl
popa
cwtl
or
fdivr
xor
daa
jecxz
or
add
mov
decb
ds
xor
cmp
out
cmp
push
fwait
aam
iret
push
pop
shrb
sub
pop
xor
icebp
stos
push
testb
or
in
mov
lahf
arpl
stos
es
add
mov
mov
leave
add
lods
xchg
add
cwtl
jl
mov
test
in
dec
cwtl
mov
push
lret
cs
pop
insb
stos
ds
jp
mov
lds
dec
repz
enter
xchg
rolb
lahf
lcall
repz
or
fwait
dec
pop
xor
outsb
fcoml
pushl
gs
stc
iret
loopne
cld
dec
or
je
inc
cmp
lret
dec
xor
daa
jg
and
inc
fisttpl
fistl
cmp
test
jp
cli
iret
dec
lock
xchg
dec
pushf
lods
shlb
fcmovnu
movsb
jae
adc
mov
pop
inc
push
inc
aaa
mov
mov
jmp
and
frstor
incl
mov
sahf
out
push
imul
dec
mov
lods
mov
fdiv
mov
std
mov
nop
or
mov
cld
mov
xor
inc
and
and
push
xchg
ja
inc
mov
test
scas
sbb
mov
pushf
sahf
adc
or
mov
sbb
addl
mov
sbb
mov
cli
dec
cmp
inc
gs
add
push
mov
inc
lds
std
pop
or
sbb
dec
scas
jecxz
push
std
scas
xchg
xor
sub
xchg
ror
cmp
xor
movsb
fistl
or
out
push
mov
sbb
dec
repnz
xor
mov
inc
fs
jecxz
cmp
pop
mov
rcl
jbe
into
idiv
and
std
sti
mov
push
cmp
adcb
arpl
sub
cmpsb
sub
movsl
push
hlt
call
outsb
in
lea
cmp
pushf
mov
jge
pushf
hlt
jecxz
adc
push
dec
lcall
cli
lock
cmp
or
lcall
sub
mov
arpl
js
popa
imul
sbb
lods
push
mov
imulb
lods
jno
lock
lods
and
xchg
and
cmp
fwait
out
nop
addl
adc
cli
lea
icebp
inc
fwait
or
sti
and
es
fldl
rolb
and
je
jge
mov
adc
loope
test
jne
sub
mov
push
repz
in
dec
mov
mov
mov
cwtl
lods
jle
push
roll
stc
push
fbstp
js
pusha
movups
adc
jne
xor
or
mov
repz
and
jbe
push
ja
push
cmp
xchg
inc
into
sbbb
mov
sahf
jbe
in
xchg
shlb
lea
aaa
pushl
dec
jg
fcoml
faddl
stc
sahf
jmp
lcall
mov
adc
sarb
pop
out
jecxz
rcrl
push
loopne
or
js
xchg
jecxz
xchg
sahf
and
mov
out
jecxz
and
mov
jl
push
out
add
cmp
ror
repnz
lret
mov
rcrl
or
mov
pop
iret
xorl
mov
in
mov
fimuls
lods
sub
mov
dec
mov
adcl
jne
nop
jne
imul
in
sbb
bound
push
cld
filds
or
xor
xchg
movsl
and
push
jbe
inc
mov
lods
andb
jl
fsubrs
dec
and
leave
cltd
push
and
jne
lcall
pop
xor
imulb
jmp
fsubrs
add
xchg
jb
dec
mov
mov
sarb
pusha
nop
jne
or
ret
mov
dec
mov
into
ss
pop
sarl
decb
sbb
iret
es
addr16
cmc
mov
sub
in
xchg
clc
loop
mov
inc
stos
out
and
pop
andb
jne
sbb
or
mov
testb
rcrb
lods
jae
jnp
ja
adc
xchg
frstor
dec
adc
call
mov
mov
in
adc
sbb
rcrl
sub
inc
add
inc
es
test
in
ss
sbb
jnp
jmp
inc
into
dec
mov
jns
je
gs
jbe
shr
jbe
icebp
and
jno
add
cmp
mov
lret
and
insl
pop
push
xor
push
sbb
inc
out
scas
mov
adcl
inc
pop
repz
jbe
sbb
sub
adc
sti
mov
pop
pop
and
fsts
mov
iret
jae
ret
out
xchg
pushf
and
das
add
push
push
sub
jo
sbb
adc
jl
sub
mov
xchg
aad
sbb
or
lret
push
jnp
xor
out
jp
xor
pop
pop
jmp
in
cli
jbe,pt
mov
testb
or
daa
pop
push
xor
nop
mov
lret
mov
mov
xor
push
ja
xor
movsl
lahf
xor
divl
je
inc
pop
test
push
lods
sub
movl
ss
mov
xor
mov
mov
outsb
cs
mov
xchg
or
mov
push
shll
or
imul
add
pop
dec
rcll
retw
shlb
in
fld
aas
xchg
add
insb
push
pop
repz
loop
iret
xchg
scas
inc
and
icebp
movsl
push
in
ret
dec
xchg
sub
pushf
mov
sahf
and
xlat
inc
iret
aaa
das
push
push
adc
pushf
mov
cmp
jno
pushf
mov
xchg
je
lds
fwait
push
jnp
dec
push
pop
fdivl
int3
in
sbb
xchg
imul
daa
sub
outsl
out
xchg
push
sbb
imul
stos
mov
jo
fcoml
mov
and
mov
sbb
lahf
fst
or
fwait
sbb
push
lea
push
jne
push
mov
ljmp
dec
in
inc
outsl
repnz
addl
loop
popf
xor
add
popa
xchg
cmp
iret
rcr
sbb
mov
scas
cmc
insl
xchg
dec
jmp
fmull
xchg
cmp
fwait
test
lock
cmp
loop
xor
scas
or
fisttpl
mov
sub
fsts
ss
sbb
or
jnp
cld
ds
lock
or
jmp
stc
ret
adc
ficomps
inc
mov
int3
pusha
popa
test
adcl
mov
pop
out
xchg
sub
sti
enter
pop
cmp
adc
int3
mov
add
dec
mov
sub
pop
pop
scas
sbb
adc
xorl
fnstenv
inc
dec
lcall
mov
add
add
mov
repnz
lock
jno
adc
negb
movsb
shlb
dec
sub
icebp
dec
and
xlat
mov
cld
aad
adc
xchg
xor
ret
sbb
push
stos
lods
stc
mov
js
movsb
in
pop
ds
fsubr
sti
mov
std
icebp
call
dec
pop
fdivs
lds
cmp
ljmp
push
int3
in
cmp
and
jge
mov
adc
mov
in
out
cltd
sbb
cmp
dec
movsb
jmp
push
adc
adc
mov
insb
test
or
inc
cld
ja
or
sub
rclb
pop
loopne
mov
jno
or
sti
sarl
sbb
das
and
cmpsb
dec
inc
ret
mov
adc
lods
aad
xchg
sbb
aaa
cmpsl
icebp
sbb
xor
adc
jecxz
fwait
cmc
fdivrs
mov
popa
ljmp
imul
test
les
cmp
adc
cmp
lret
cmpsl
cmp
ja
in
and
aaa
sbb
daa
or
test
lods
bound
jnp
sub
lret
sub
mov
push
std
aas
xchg
add
or
xlat
aam
mov
push
push
and
jb
out
addr16
out
out
jmp
adc
mov
shl
or
lock
and
scas
scas
test
sbb
and
xchg
in
fistpl
mov
add
mov
mov
mov
testb
jbe
sbb
xchg
sub
pop
jo
fsubl
sbb
ja
add
movsl
call
and
sub
lea
push
pop
hlt
fimuls
fbstp
xchg
std
aam
xchg
icebp
sarb
aam
in
sbb
sub
shlb
push
cwtl
sbbb
mov
jnp
gs
mov
or
shll
mov
inc
movsl
lret
xor
xchg
hlt
add
push
mov
add
mov
or
and
lods
cltd
les
sub
sbb
aas
testb
out
adc
lahf
mov
jmp
lcall
pop
pop
loopew
jle
push
mov
cmp
jnp
arpl
fistpl
xchg
fcompl
in
xchg
jmp
nop
imul
adc
and
xor
pop
outsb
add
and
push
adc
rorb
call
mov
mov
out
xchg
mov
sub
imul
adc
mov
or
jecxz
leave
push
into
imul
pop
mov
aaa
inc
sbb
lods
shlb
cmp
and
mov
xchg
pop
push
int3
pushf
xchg
jp
arpl
adc
mov
js
dec
aas
and
fimuls
dec
add
xchg
dec
and
fistl
lret
jle
daa
imul
pop
leave
scas
repnz
push
xchg
or
and
jae
add
int
cltd
outsl
jb
add
pop
xchg
add
dec
mov
cs
mov
les
pop
sbb
sub
adc
cmp
xor
addr16
push
es
int3
les
push
test
aas
out
mov
add
stos
jmp
mov
cmp
xchg
or
loop
pusha
xor
cmc
push
iret
adc
cmp
les
mov
outsb
gs
gs
inc
int
or
jno
add
cmpb
mov
mov
lret
xlat
mul
adc
cltd
flds
fsts
rol
xchg
popa
inc
ret
pop
rcrb
dec
dec
insb
icebp
clc
mov
add
xchg
test
inc
sbb
sub
sbbb
dec
in
je
outsb
mov
mov
add
cli
mov
in
inc
inc
mov
lods
push
push
gs
xchg
push
mov
sti
push
call
jmp
iret
int
lret
int
xchg
jo
jle
les
cld
xchg
in
xor
jecxz
pop
mov
push
dec
push
dec
and
add
aaa
outsl
mov
scas
gs
outsb
fwait
mov
gs
ljmp
and
xchg
cmp
or
xchg
mov
lret
or
adc
mov
cmpsb
inc
or
lds
popa
sbb
fptan
addr16
jb
js
mov
jl
mov
mov
mov
sbb
and
lods
ljmp
xor
repz
jge
int3
jno
push
xchg
outsl
mov
int3
cmc
jo
test
cmpsb
push
push
xor
cli
cmp
icebp
bound
pop
repnz
mov
xchg
into
mov
lret
push
mov
xchg
and
ret
jp
out
ljmp
mov
and
hlt
mov
and
mov
fs
mov
movsl
sub
and
jnp
arpl
inc
or
pop
gs
push
lea
iret
cmp
xchg
sahf
or
imul
cmc
jmp
dec
in
lods
inc
sub
cmp
adc
mov
fnstcw
cmc
cmpsl
pusha
je
xchg
add
mov
xor
jmp
sub
stc
jmp
ss
enter
mov
insl
xor
or
lods
test
jg,pn
sub
xor
xchg
xchg
movsb
push
mov
nop
pop
out
xchg
clc
jns
js
or
adcb
int
mov
jb
fildl
push
mov
pop
inc
ljmp
popa
mov
xchg
jne
mov
sub
lahf
sub
add
adc
cmp
push
stc
and
hlt
in
jmp
push
jle
cli
push
fcmove
popf
lret
sbb
pop
rcrb
shrb
daa
or
lret
lods
mov
sub
scas
inc
aaa
pop
and
cwtl
push
fidivl
enter
int3
jne
in
adc
lahf
arpl
dec
stos
inc
inc
mov
xor
push
inc
xchg
repnz
pop
dec
mov
xchg
cmp
in
idivl
cmc
push
jecxz
xchg
in
xchg
stc
adc
cmp
inc
insl
push
idiv
xchg
xor
leave
lcall
push
cs
imul
dec
lret
or
lock
inc
pop
xor
cltd
xor
cmp
cltd
adc
inc
push
repnz
lods
sub
xchg
cmpsb
popa
iret
inc
jmp
int3
mov
xlat
mov
bound
mul
mov
jp
sbb
or
dec
ret
je
push
addb
mov
cld
cld
fldl2t
rorl
or
test
fsub
lcall
xchg
or
cmpsb
mov
push
outsl
sahf
or
sarl
faddp
jge
mov
int
and
test
mov
cmp
pop
sub
in
cltd
mov
lock
iret
ljmp
popaw
aaa
xchg
mov
lcall
sub
rorb
push
mov
or
call
cmpsl
push
nop
jnp
inc
loop
iret
jnp
mov
add
cltd
divl
dec
aad
sahf
ret
xchg
jle
xor
rolb
dec
pop
push
mov
cmp
mov
and
loop
adc
dec
js
into
aas
sub
pop
inc
dec
cmp
push
insl
or
push
push
lods
aam
or
nop
xor
fistps
mov
jge
mov
hlt
arpl
cmp
sti
insb
sub
rcrl
movsl
mov
pop
fcoml
test
push
or
enter
mov
mov
movsb
pop
fsubs
mov
xor
stc
cs
xor
add
in
arpl
mov
leave
stos
cmp
inc
aas
inc
mov
adc
mov
inc
daa
pop
rolb
xchg
out
lcallw
test
inc
ljmp
push
push
xchg
add
xchg
jecxz
jae
repnz
fiadds
call
mov
cwtl
sbb
aad
adc
push
jnp
mov
and
jo
pop
out
ficoms
adc
dec
rol
sub
in
lea
or
adc
in
add
dec
ja
repnz
test
push
or
sbb
pop
lcall
or
push
lret
mov
mov
add
inc
lcall
cmc
jb
pop
addr16
popf
iret
test
mov
sub
mov
mov
xor
xor
push
push
sbbb
cmpsl
xchg
in
ret
repnz
rcll
mov
pop
cmp
mov
add
mov
fldenv
int
xchg
insb
add
sbb
sbb
inc
iret
stos
lock
fwait
adcl
mov
push
std
rcl
sub
jo
cmp
pop
es
pop
ljmp
or
gs
jb
push
cmp
leave
mov
aas
negb
mov
sbb
dec
ljmp
jl
pushf
jae
lds
inc
subl
adc
and
pushf
in
mov
adc
pop
insb
mov
sub
and
ja
mov
mov
or
fsubl
cmp
dec
add
imul
mov
add
jno
cmpsb
push
addr16
cmp
das
shl
int3
mov
lods
dec
inc
stc
iret
mov
add
andb
jge
push
inc
loop
cli
scas
mov
sarl
push
insb
ja
adc
or
dec
inc
cmc
sub
insb
push
es
jnp
dec
call
dec
sub
inc
movsl
fs
sub
in
dec
popa
lea
mov
arpl
xchg
aam
lods
call
es
jmp
out
jmp
sbb
loop
clc
sub
adc
fnstsw
gs
movsb
push
add
outsl
mov
sarb
ficoml
xor
add
cmp
adc
xchg
scas
popa
add
pusha
pop
sti
xchg
xor
adc
add
andl
adc
pop
mov
icebp
lds
push
jb
cld
push
mov
jp
push
and
and
test
in
mov
or
sahf
ljmp
mov
dec
insl
nop
cmp
out
or
mov
rcrb
call
add
lods
cmpsl
add
test
dec
xor
je
and
inc
js
inc
jb
sbb
inc
pop
xor
fldl2t
adc
in
sbb
add
add
jb
push
popf
outsl
or
fmuls
daa
add
or
test
je
pop
ss
out
xorb
pop
mov
inc
cs
leave
add
jae
loope
sub
out
gs
cld
pop
xor
mov
sub
nop
sbb
dec
push
outsl
xor
adc
add
inc
or
cmp
cmc
or
andl
inc
lods
rorl
jne
mov
mov
in
in
repz
in
imul
ja
movsb
pop
sbb
mov
adc
xchg
gs
lds
hlt
dec
xor
mov
jns
cmp
cmp
mov
fnsave
jl
inc
inc
push
in
dec
inc
scas
jbe
inc
sub
pop
xchg
enter
dec
fisubs
stc
shlb
ds
aas
jle
fnsave
lds
cmp
gs
data16
jae
xor
cld
loopne
aas
mov
or
aad
insb
cmpsb
xchg
sbbl
adc
sub
mov
insb
loopne
xchg
popf
add
lret
repz
push
dec
adc
cmc
pop
mov
sub
cmp
in
std
mov
mov
mov
popf
mov
pop
cmp
pop
add
inc
push
and
scas
scas
sub
hlt
shrb
mov
xchg
cmp
mov
and
test
sbb
insl
sti
popf
imul
xchg
add
sub
stc
pushf
scas
lahf
sub
push
popa
and
popf
mov
in
and
mov
aaa
or
je
xchg
push
push
adc
aad
stos
iret
mov
ja
cs
stc
jae
fistpl
les
stos
fbld
xchg
les
leave
ja
or
adc
shlb
ret
imul
leave
test
mov
shl
data16
in
cmp
jp
repnz
cli
sub
adc
aam
loop
adc
in
gs
jne
lods
jl
add
stos
ds
cmpsl
cmp
push
push
jnp
xor
jb
icebp
cmp
push
push
jno
lds
iret
pop
es
outsb
and
fiadds
cltd
dec
xchg
mov
negl
insb
loope
jp
sbb
fcoms
xor
pop
lea
pop
xor
data16
adc
adcb
mov
sub
popa
mov
dec
mov
dec
dec
push
inc
shll
iret
jns
imul
push
cmp
orl
fwait
movsb
lock
out
imul
sti
fildll
mov
jle
bnd
xchg
or
sbb
insl
dec
outsb
out
pushf
sahf
iret
fdivs
stos
cmp
mov
popf
loop
aam
xor
lea
lds
add
in
push
cld
push
pop
and
aam
dec
add
call
nop
sar
lret
jp
or
xor
cwtl
dec
hlt
xor
lds
aaa
movsl
imul
sbb
pop
sbb
mov
movsb
out
adc
fwait
inc
lret
adc
mov
mov
pusha
push
mov
movsb
add
pop
dec
imul
cmp
iret
cmpsl
loop
ss
cmp
push
scas
fists
clc
adc
xor
mov
mov
popf
sub
sub
int
inc
push
mov
push
loopne
or
xchg
push
jl
repnz
into
adc
sti
and
cmp
dec
in
jo
arpl
es
fistl
jae
aas
lock
adc
sub
popa
pop
mov
adc
push
sbb
dec
mov
jne
sahf
cld
cs
jne
jae
shrl
sbb
aad
pusha
std
mov
jp
jnp
movntq
loopne
loop
nop
cmc
sub
pushf
dec
and
lcall
and
in
int3
daa
wrmsr
pop
inc
jg
insl
mov
or
mov
or
cmp
inc
and
xchg
cmpsb
xchg
inc
imul
sbb
imul
movb
popa
mov
fs
mov
movsl
sarl
imul
pop
sub
adc
jp
shll
xchg
loop
in
adc
or
imul
jns
xchg
sarb
insb
jno
icebp
push
jecxz
lds
jl
cmp
or
add
sbb
mov
ret
leave
jle
mov
sbb
or
cmc
sbb
xchg
mov
jle
add
cli
out
hlt
adc
repz
xchg
xor
movsb
sub
mov
arpl
out
int
dec
jp
cmp
loope
int3
sarb
and
xlat
push
or
jnp
std
inc
inc
out
int3
cmp
mov
test
mov
enter
insb
jae
in
outsl
shl
pop
sbb
jmp
outsl
cld
dec
aad
dec
je
mov
int3
mov
mov
mov
and
push
into
or
mov
add
push
mov
or
or
push
mov
or
mov
or
call
popa
into
ljmp
pop
push
in
or
xchg
jle,pt
dec
push
in
pop
mov
insl
xor
enter
dec
data16
movsl
adc
call
mov
rcrl
aaa
and
cmp
ss
hlt
ret
mov
cs
mov
subl
sbb
dec
inc
repnz
push
pusha
insl
push
jp
subl
or
scas
rclb
ljmp
xchg
loopne
shll
mov
jno
xlat
fsts
faddl
inc
gs
and
xchg
stc
fs
jne
cld
adc
ss
jno
cmp
mov
and
adc
adc
fimuls
xchg
imulb
scas
jmp
loop
mov
jne
and
push
loop
dec
scas
scas
jo
std
lods
das
scas
xchg
aas
mov
mov
xor
into
mov
and
xor
lds
sbb
add
pop
inc
mov
fldlg2
hlt
cmpsb
cmp
stc
cmc
loopne
in
dec
pop
out
lods
jmp
and
dec
aam
pop
mov
or
je
imul
stos
mov
enter
ljmp
mov
cmpsb
repz
addr16
xor
push
outsl
rolb
or
inc
mov
mov
stos
inc
call
popf
fisubl
xchg
stos
cmp
popa
outsb
jns
add
jne
jne
xor
pop
pushf
stos
adc
addr16
aam
mov
and
jmp
outsl
outsb
and
inc
xor
xor
cltd
add
dec
out
xchg
mov
enter
xchg
jmp
mov
xor
andl
leave
sub
push
cmp
divb
in
push
imul
addr16
mov
mov
jle
dec
popl
xchg
dec
insl
jb
pop
add
push
pop
sbb
jns
in
cld
out
xor
mov
or
mov
out
xor
leave
fwait
scas
pop
add
cmp
pushf
outsl
jbe
push
xor
fs
xchg
test
movsl
popf
inc
sbb
mov
popf
cmp
mov
pop
pop
dec
in
test
ds
add
mov
fwait
inc
sti
pushf
fstpt
mov
in
cmp
movsb
in
push
out
sub
inc
adc
pxor
mov
push
dec
arpl
dec
pop
cmc
xlat
xchg
cmpsb
out
inc
mov
adc
rol
dec
adcb
push
lods
clc
mov
out
or
dec
shll
shlb
inc
sarb
outsb
rcl
xor
inc
inc
sbb
loopne
cmp
fs
movsb
mov
mov
cmovo
cmpsb
add
mov
js
lea
xlat
leave
dec
mov
shrl
ror
mov
testb
xchg
pop
addl
push
sti
sbb
movsb
ds
cmp
rcl
add
and
addl
mov
ficompl
push
repnz
call
and
sub
roll
in
xor
mov
push
cli
sbb
ljmp
stc
cmpsl
mov
jmp
test
iret
cmp
add
inc
aaa
lods
mov
push
iret
repnz
jl
imul
psrld
jnp
dec
mov
mov
cmpb
stos
dec
mov
movsl
rolb
and
push
sbb
pop
cwtl
push
mov
mov
gs
ret
mov
mov
mov
dec
mov
sbb
adcl
movsb
add
fadds
or
sub
jge
jl
pop
inc
enter
pusha
jnp
sti
in
shlb
push
sti
mov
clc
xchg
sbb
movsb
or
mov
repnz
pop
aam
in
sbb
sub
ds
sbb
mov
mov
mov
jl
mov
dec
inc
mov
sbb
push
xchg
jnp
dec
dec
cs
ss
mov
cltd
pop
imul
bound
pop
cmp
scas
xchg
rolb
pusha
testl
test
ljmp
lods
adc
ficomps
push
pop
rcll
in
scas
insb
leave
jmp
add
or
dec
mov
jbe
mov
adcb
pop
out
cld
push
sub
lret
daa
insl
sarb
faddp
into
mov
setg
sub
ljmp
leave
mov
pop
pop
ja
and
adc
inc
push
push
push
lret
iret
dec
sub
lret
loop
or
movb
pop
fsts
mov
enter
cmp
jb
rclb
xchg
cmpsb
jmp
xchg
scas
dec
xor
aam
push
shlb
cltd
loope
xor
data16
pushf
push
lret
mov
pop
adc
inc
sub
dec
or
sub
inc
cmp
aam
bound
cmpsb
lret
sub
ret
xchg
pop
call
stc
mov
mov
in
xchg
xchg
ret
cmpsl
push
push
cmp
add
pop
fcoml
lahf
dec
jecxz
cmp
cmp
adc
jbe
stc
and
rorb
ret
pusha
in
stos
jmp
sub
fbstp
sbb
mov
incl
sub
lret
leave
adc
or
aad
adc
mov
mov
mov
push
inc
js
push
xchg
js
dec
iret
pop
mov
xchg
mov
mov
psrlq
cmp
mov
jnp
andl
or
hlt
mull
dec
adc
daa
dec
push
ljmp
leave
push
mov
cmpsl
push
sbb
ret
push
push
test
sub
inc
out
xchg
push
mov
in
mov
fidivrs
xor
iret
popa
notl
loope
add
jo
mov
mov
insl
insb
push
push
push
jnp
xlat
sbb
adc
ret
dec
das
push
and
inc
xchg
jmp
xchg
sbb
in
nop
jne
mov
mov
add
arpl
sub
cmp
fsubs
lret
js
or
enter
mov
mov
cmp
mov
sub
and
cltd
xchg
in
sub
adc
pushl
in
or
xor
xor
adcb
push
xchg
ret
inc
bound
daa
jge
and
dec
in
aas
scas
enter
push
add
data16
pop
in
movsl
dec
inc
fbld
es
mov
push
jbe
xor
xor
inc
push
xor
test
mov
aaa
fst
sahf
pop
dec
addb
popf
xchg
dec
fldenv
mov
jmp
loopne
rol
jne
mov
sbb
inc
loope
icebp
or
jg
pop
bound
bound
ljmp
mov
cmp
push
push
add
adc
sub
jle
cmpsl
push
jb
fwait
outsl
pop
xchg
rorb
std
push
mov
test
push
shll
dec
daa
sbb
add
lea
adc
xor
cmpsb
lahf
sub
jnp
xchg
or
test
inc
fmul
mov
lods
mov
out
int3
fisubs
mov
and
push
mov
fwait
xor
mov
imul
add
jmp
mov
mov
mov
mov
dec
jno
push
mov
xchg
pop
mov
sbbb
pop
out
sbb
out
xor
pusha
insl
pop
xor
and
add
cltd
push
test
outsb
dec
mov
mov
lret
mov
push
mov
das
cmp
ret
shlb
mov
std
xchg
mov
mov
cli
add
ljmp
jg
jmp
lods
int
shrl
nop
jp
cld
sub
mov
stos
aaa
inc
push
and
xchg
and
cmp
add
popa
push
aam
sub
jnp
or
cltd
push
rcll
push
mov
or
imul
and
daa
enter
mov
xor
lret
sarb
cld
fnstenv
iret
mov
das
push
mov
sub
mov
and
push
pop
stc
or
mov
cltd
mov
aas
cli
ret
movsb
in
aad
jae
into
int
add
push
pop
mov
xchg
adc
jae
mov
in
rcll
popf
inc
add
jae
mov
ljmp
test
dec
xor
scas
xchg
add
cmp
imul
je
push
aad
mov
clc
idivl
inc
xchg
shl
xlat
inc
loopne
ss
jle
push
xor
push
or
sbbb
pop
add
out
xlat
pop
popf
cld
sub
push
sub
data16
and
rcrl
clc
aam
shrb
test
or
popa
shr
ds
outsl
bound
adc
clc
sarb
push
int
pop
inc
lcall
in
xchg
mov
popf
or
xchg
hlt
int3
push
sbb
add
outsb
mov
mov
popa
dec
rcr
sbb
fdivrs
fwait
das
inc
sbb
sub
mov
std
ret
adc
or
mov
iret
fisttps
jge
mov
pop
test
sbb
cmpsb
decb
add
rcrb
les
js
lret
mov
outsl
lahf
dec
xchg
scas
loopne
ljmp
mov
insb
arpl
push
inc
xor
mov
mov
cmp
and
xor
mov
insl
dec
mov
xchg
mov
aas
jns
ja
movsb
and
stc
loope
sub
inc
push
mov
inc
btr
repnz
push
dec
shrl
add
fcmovbe
xchg
lret
sub
add
int
pop
bound
fadd
cs
gs
imul
lcall
push
dec
xchg
mov
iret
adc
or
xchg
jecxz
cmpsb
add
xchg
pop
inc
dec
and
inc
dec
incl
loope,pn
pop
ljmp
mov
push
jg
cld
shrl
or
sbb
mov
flds
popf
arpl
and
loop
xor
and
cmp
or
jecxz
fnstenv
or
js
fs
pop
int
and
daa
popa
mov
outsb
ret
jae
std
loope
in
mov
in
fldenv
enter
mov
rcr
and
stos
push
adc
aas
mov
mov
pop
in
out
imul
xor
pushf
push
push
pop
insb
mov
loope
insl
lahf
xor
fdivrs
cmpsb
pop
pop
inc
rcrb
xor
inc
jg
sub
clc
add
dec
test
xor
aam
sbb
imul
popf
movl
int3
xchg
bound
mov
adc
rcl
loopne
stc
movsl
cld
mov
gs
and
arpl
rcrl
cld
leave
leave
push
dec
mov
push
fcomp
addr16
or
sub
aaa
outsl
mov
cmc
mov
add
cmp
in
mov
inc
out
andb
add
sub
or
repz
fsubrl
jae
mov
adc
jns
sbb
divb
xchg
sbbl
mov
les
cmpsl
int
xor
xchg
push
ret
cmpsb
cmp
hlt
xor
dec
mov
das
sbb
dec
sub
push
adcl
mov
mov
imul
in
subl
jecxz
pop
cmp
cmc
lret
push
loopne
shlb
js
scas
rcl
or
nop
cwtl
xor
stos
movsl
or
mov
jge
cmpsb
mov
sbbl
xor
xchg
into
sub
mov
push
mov
std
inc
lret
std
fldt
fdivl
jo
xorl
pop
shlb
add
enter
pop
test
dec
aas
lea
jnp
cld
dec
sub
arpl
and
mov
cmp
cltd
sahf
add
out
icebp
in
dec
xchg
cs
in
cmpsb
sbb
bound
xlat
adc
scas
adc
push
jl
lahf
insl
push
mov
add
or
xchg
sahf
rclb
xchg
scas
mov
dec
xrelease
cs
xor
icebp
sbb
jg
fcoms
mov
scas
adc
out
test
xchg
xor
mov
mov
add
sti
mov
and
mov
imul
or
cwtl
push
movsb
lods
add
sbb
in
cmp
mov
and
cmpb
jbe
call
lcall
in
fisttps
mov
inc
cltd
je
xchg
sbb
test
pop
jg
pop
dec
inc
aam
mov
cmc
outsl
inc
cmpsl
mov
dec
mov
ret
repz
dec
xchg
into
inc
xchg
addr16
mov
cmc
repnz
std
or
loop
das
mov
outsl
sub
jb
movsl
adcb
lock
inc
fcoml
cld
jge
or
push
pop
mov
mov
pop
aaa
jno
hlt
decb
pop
xchg
sti
sbb
pop
mov
dec
mov
push
lret
out
sbb
test
adc
insb
push
push
int3
add
dec
nop
int3
fmull
rclb
pop
dec
jecxz
adc
cli
xchg
subb
lds
or
mov
or
ja
insb
push
jo
mov
sar
mov
shl
cmp
lcall
inc
fcompl
pop
arpl
sbb
add
popf
adc
ds
out
icebp
and
jnp
pop
cld
mov
or
repz
lret
dec
cmc
pop
or
ss
lea
inc
and
cltd
rorb
jg
adc
xchg
add
js
fdivl
dec
data16
aam
icebp
enter
xor
fucom
inc
xorb
push
push
js
pop
pop
rclb
enter
test
andb
imul
cld
subl
sbb
jae
cmpsl
jns
ds
nop
adc
adc
daa
mov
or
jl
arpl
push
xchg
dec
in
faddl
cltd
pop
pushf
ret
int3
fwait
rclb
or
incb
out
cwtl
aad
aad
inc
addb
jmp
pop
push
lcall
adc
sbb
insl
mov
push
adc
popl
aaa
std
loope
in
pop
dec
out
mov
add
fnstcw
mov
ret
sbb
stc
jno
jecxz
hlt
adc
test
lock
ss
push
or
repnz
scas
cmp
push
ds
sub
add
movsb
and
inc
mov
xor
movsl
mov
and
jle
jne
xor
add
add
xchg
jbe
cmp
sub
and
inc
adc
test
ljmp
fldl2t
test
sbb
leave
mov
xor
mov
out
push
ljmp
dec
icebp
jg
cmp
pop
mov
pop
dec
or
mov
mov
mov
dec
into
inc
and
or
cld
dec
mov
push
fadd
mov
shrb
mulb
pop
xchg
cs
jno
jbe
cltd
sbb
sbb
push
mov
daa
sbb
jmp
lcall
mov
push
push
xchg
pop
ss
mov
andl
test
imul
push
int
leave
movsl
and
mov
mov
test
js
xor
mov
cmp
add
pop
aaa
or
aad
sub
jge
adc
push
jmp
cld
push
jmp
lcall
push
mov
mov
mov
sti
stos
jge
jmp
mov
mov
cmp
sbb
dec
xor
test
ds
cmp
add
sbb
mov
js
fwait
es
mov
loope
and
sbb
sahf
sti
fwait
rol
dec
test
pop
fnstsw
sahf
sbb
xor
shl
orl
fucom
jle
repz
jae
fcmovnb
xor
pop
movsl
fistl
xor
into
push
sbb
test
in
add
jp
pop
orl
mov
cltd
cmpsl
pop
out
and
pop
imul
js
pop
jge
mov
mov
adc
mov
push
mov
xchg
roll
and
sarb
clc
dec
ret
data16
repnz
pop
decb
xchg
movsb
pop
xchg
mov
fwait
rcrl
into
mov
jg
mov
jecxz
repz
clc
pop
lds
add
push
or
push
jns
pop
push
pop
scas
sbb
call
jg
fdivs
iret
and
in
stos
data16
cmpb
rcrl
sub
xchg
xchg
sbb
push
adc
pop
rol
adc
loope
pushf
add
insl
shl
pop
push
lcall
pcmpgtw
leave
sar
repnz
add
lods
leave
xchg
jl
or
decb
cmp
cmp
inc
cld
push
insl
enter
sarl
cwtl
mov
fiaddl
push
into
pop
jne
cmp
push
lret
bound
call
ss
out
insb
jb
sub
hlt
push
lea
mov
mov
std
and
push
mov
imul
or
add
insl
push
push
lds
mov
ds
mov
stos
pop
ljmp
call
imul
std
dec
aaa
bnd
fisubl
icebp
out
or
jp
cmp
decb
and
sbb
das
cmp
test
repz
out
sbb
or
push
or
push
xor
cli
bound
jb
dec
orb
mov
lahf
clc
ret
inc
xor
mov
imul
je
pop
jae
lahf
sbb
inc
adc
push
inc
cwtl
imull
mov
jecxz
dec
jb
imul
pop
dec
dec
hlt
call
repz
xchg
fs
xor
push
test
lds
cmpsl
adcl
push
adc
loopne
add
jmp
imul
sbb
jbe
cmpl
scas
mov
push
pop
imulb
loop
jp
ljmp
cmpsb
add
cmpsl
divb
jmp
cli
push
movsl
shr
jnp
sub
mov
sbb
repz
adc
pmuludq
div
add
push
or
jb
xchg
and
push
jnp
bound
test
pop
pop
add
mov
test
iret
adc
stos
fcomps
iret
xchg
pop
mov
lods
das
sub
imul
rcr
mov
mov
pushf
mov
jne
jmp
add
cmpsb
inc
cli
inc
push
xchg
xchg
mov
je
xor
test
push
xor
push
rol
sub
mov
mov
adc
fistpl
xchg
dec
add
gs
push
in
sbb
push
dec
bound
call
add
mov
es
test
pop
add
les
mov
call
or
loope
pop
cmpsb
mov
test
test
mov
ljmp
dec
xchg
cs
sub
inc
ficompl
sub
ret
adc
in
jge
mov
xor
insl
movsb
adc
rcrb
popa
and
lcall
xchg
lds
or
sub
lods
repnz
pop
out
repnz
fs
push
shrl
test
sbbb
lcall
int
rorl
ss
xor
add
movsl
jmp
popf
dec
sub
rcll
das
sub
rolb
push
dec
jle
pop
dec
daa
jno
pop
js
cmpsl
sub
or
lea
shl
push
add
mov
lret
add
cli
push
add
scas
cltd
push
dec
faddl
ficompl
cmp
pop
cwtl
mov
add
sar
call
mov
mov
out
das
sub
push
fsts
movsb
xor
mov
sub
push
adc
pop
lods
mov
mov
daa
enter
divps
mov
orl
lods
push
les
leave
loopne
jo
jnp
movsb
nop
ds
jae
cltd
je
inc
add
mov
sbb
push
rolb
sbb
lods
dec
pop
jae
sti
enter
stos
dec
sbb
xorb
addr16
popf
jae
divb
sbb
inc
popf
inc
adc
pop
aas
or
dec
or
mov
add
ja
cmp
pop
scas
xorb
loope
fmull
inc
in
inc
jl
aad
cmp
inc
leave
testb
inc
sbb
dec
mov
sbb
and
movsl
mov
sahf
test
icebp
ret
inc
add
aaa
cmc
xchg
sub
add
aas
xor
aaa
pop
das
lret
rcl
mov
lret
xor
repz
inc
movsb
dec
or
mov
xor
pop
loop
add
xchg
xchg
xor
test
mov
push
cmp
call
lret
fs
bound
cmp
xor
mov
sahf
push
addb
loope
or
jns
ss
xchg
es
mov
xchg
cmp
xchg
cmpsl
dec
stos
pop
cmpsl
fwait
push
xor
popf
pop
xor
movsl
loop
push
loopne
push
scas
xlat
inc
or
pop
sahf
mov
cwtl
out
mov
inc
fwait
mov
fimuls
shlb
dec
lahf
inc
cmp
cmc
cmp
cmpsb
mov
test
cmp
mov
xchg
jmp
sbb
dec
test
cwtl
test
bound
imul
add
pop
filds
jnp
mov
push
push
divb
jmp
fstpt
push
dec
xchg
mov
inc
add
popa
cltd
pop
cmp
inc
stos
sti
jnp
test
int3
cmp
mov
js
mov
pop
add
jg
fildl
lahf
inc
andl
sub
push
leave
nop
and
sbb
xchg
dec
xchg
sub
dec
pop
inc
push
scas
inc
jbe
cs
stc
popa
cmp
cmp
cltd
popf
test
addr16
ret
xchg
or
mov
sar
dec
add
iret
jle
rcrl
cmp
aam
xor
ljmp
or
test
ljmp
rorl
adc
lds
and
addr16
inc
or
xor
lds
les
pushf
push
loope
out
insl
or
push
dec
into
std
xor
xlat
mov
inc
mov
push
xchg
ficoms
push
xchg
mov
subl
stc
fsubrs
and
push
xchg
xor
fsubr
push
stos
push
movsb
push
cmp
jbe
push
testb
sub
in
aad
stc
dec
mov
sbb
xor
pop
jmp
pop
insl
mov
mov
xor
cmpsb
stos
mov
mov
cmp
lods
or
into
imul
pop
cwtl
or
cmp
shrl
xor
inc
arpl
mov
es
and
into
jl
xor
icebp
cmpsb
dec
inc
mov
mov
pop
data16
adc
lods
pop
adc
movl
aas
shl
jl
mov
jmp
mov
or
xor
xchg
lds
aaa
and
push
dec
cltd
and
adc
jge
aaa
repnz
dec
sub
stc
and
mov
jne
sarb
and
lods
or
and
inc
popf
arpl
mov
mov
icebp
add
sub
das
loope
sahf
pop
inc
test
ret
fnstcw
push
jmp
jno
lcall
arpl
pop
lea
sbb
push
iret
cmp
jecxz
std
pushf
sbb
xor
jmp
pop
sub
mov
jp
hlt
cmp
insb
add
cmpsb
mov
push
dec
idivl
or
std
sbb
and
dec
xor
rclb
sbb
pop
cmpsl
es
sbb
aas
daa
mov
jae
jp
loope
shr
lea
pop
inc
sbb
mov
fisttpll
fs
stos
push
fwait
cmpsb
pop
inc
test
jg
sbb
fiadds
test
push
int
sub
and
cmp
sub
pusha
jecxz
aam
in
push
idivl
dec
rorb
mov
movsb
jle
aaa
mov
xor
fdivs
into
xlat
mov
insl
jno
pop
out
out
xor
mov
enter
fnsetpm(287
mov
inc
add
ret
pop
xchg
cmp
inc
adc
inc
bound
rol
mov
fdivrl
int3
mov
add
mov
and
data16
pop
dec
push
push
inc
ret
int3
sbb
sub
xor
mov
mov
or
adc
xchg
lret
sub
and
or
cmp
addr16
sub
xor
lahf
jl
mov
jg
loop
pop
cmp
cwtl
pop
negl
movsl
xchg
shlb
mov
add
movb
cltd
popf
daa
insb
out
decl
push
mov
stos
jge
sub
add
fstl
iret
sub
movsl
data16
push
lret
jbe
jg
add
lods
scas
add
xchg
subb
jecxz
in
imul
mov
pop
mov
aad
shrd
inc
sub
xchg
repnz
push
push
pop
push
jnp
test
out
ljmp
jge
stos
popf
js
jp
adc
adc
or
sub
in
inc
dec
and
pop
ret
cmpsb
shll
call
xor
shlb
fdivl
mov
imul
pop
xor
push
test
rclb
add
and
mov
push
popa
cmp
imul
push
dec
jne
jae
push
sbb
loop
adc
push
mov
lahf
ret
inc
sub
shl
popa
mov
pop
inc
cwtl
adc
sub
xchg
xchg
jae
jae
std
pop
in
repz
cmpsb
push
out
ret
data16
js
test
fwait
xchg
xchg
aas
stos
mov
repnz
clc
push
push
in
cmpsb
xchg
or
cmp
mov
pop
dec
cmp
adc
aad
fcomps
xor
push
int3
pop
cltd
xor
mov
into
out
sub
mov
cmp
dec
adc
and
mov
fdivs
jp
inc
aam
inc
sub
sub
stos
mov
gs
bound
pop
mov
iret
mov
jb
nop
sub
movsl
hlt
sahf
shrl
sbb
nop
fsubrl
pop
push
loopne
or
adc
push
jae
cmp
xchg
shll
xchg
mov
es
leave
out
cmp
sbb
popa
jle
imul
fs
mov
das
subl
rolb
xchg
movsl
jb
ds
imul
pop
jl
rolb
add
push
dec
clc
dec
gs
dec
movsb
call
lahf
adc
loopne
lea
mov
push
xchg
sahf
popf
lcall
dec
lds
inc
add
into
aas
aas
lea
sbb
adc
pop
mov
mov
ja
sbb
popa
popf
scas
loopne
mov
add
pop
xchg
pushf
out
movsl
sub
adc
sbb
inc
loope
outsb
xchg
xchg
addr16
clc
daa
test
sahf
jae
int
les
sub
add
lock
and
inc
and
sbb
cmp
ja
inc
shll
cmp
mov
xchg
ret
push
sbb
jae
sahf
pop
jmp
sub
iret
or
mov
xchg
lods
xchg
add
xor
test
jp
adc
inc
jo
mov
mov
jge
xchg
pushf
jo
mov
sub
push
and
lods
lock
mov
pop
push
sarb
cmp
mov
mov
fldl
or
cmp
xchg
es
add
cwtl
sti
pop
movsl
je
subb
xchg
mov
mov
stos
jnp
out
sub
ret
insb
popf
loope
cli
call
push
inc
pop
or
outsb
in
sbb
adc
outsl
mov
outsb
inc
push
adc
xor
jae
adc
and
mov
rcrl
mov
pop
sbb
jl
loopne
aad
or
insl
jecxz
leave
bound
jb
ficompl
ficoml
test
lds
mov
push
dec
sub
addr16
and
add
cmc
notl
add
xchg
jle
fnstsw
jle
cwtl
mov
out
imul
subb
mov
jo
sbb
test
cmp
sbb
adcl
sti
cmc
pop
insb
dec
lcall
jbe
cmp
cmp
movsb
enter
stc
xchg
sub
js
aam
pop
fimull
add
sbbl
andb
ret
xor
shl
repz
mov
jmp
addr16
push
imul
int3
jmp
sub
enter
pop
cmp
in
sbb
adc
mov
mov
sbb
xor
jb
or
clc
dec
shld
jecxz,pt
mov
sub
pop
push
daa
insb
stc
mov
add
icebp
test
and
jb
push
xchg
pop
xchg
pusha
imul
xor
and
and
shll
sbb
xor
mov
mov
adc
jo
push
lret
ret
inc
dec
mov
jno
mov
fisubrs
cmp
xchg
xor
jge
fsubrs
cmp
dec
xchg
pop
das
push
ljmp
inc
fcomip
out
icebp
cmpsl
leave
sti
dec
sahf
cmpsb
leave
in
pop
int
jnp
pop
mov
push
mov
out
mov
inc
rolb
movsb
cmp
or
mov
lret
inc
adc
pop
lret
add
loopne
mov
fwait
stos
ret
xor
movsb
inc
cmp
mov
push
ljmp
lahf
cs
cmp
dec
in
adc
popf
sbb
cs
clc
lods
dec
push
mov
test
pop
dec
mov
iret
cmp
cwtl
and
lea
mov
psubw
aad
popa
dec
or
and
or
inc
decl
pop
movsb
mov
aad
testb
and
dec
insl
std
loopne
add
fsubl
jg
push
cmc
out
out
jno
xor
xor
cmpsb
loopne
adc
jo
mov
jecxz
sbb
fstp
test
mov
repnz
in
test
jp
and
repz
pop
sub
scas
push
jecxz
ja
inc
cmc
cmpb
inc
push
pandn
repnz
sub
fstps
ret
sub
mov
jp
rcll
xchg
jo
add
ret
and
sub
cmp
shl
xchg
sub
xchg
lahf
arpl
scas
loopne
inc
out
loopne
sar
lock
mov
sahf
cli
cmp
scas
test
add
int
sub
sub
jnp
pop
xchg
pop
repz
mov
lods
in
in
je
mov
xor
sbb
sub
mov
rolb
mov
pop
fsubrs
loopne
xchg
imul
push
sbb
addr16
lret
outsb
lcall
nop
lock
cmp
movsl
daa
pop
xor
push
out
dec
cmp
mov
daa
mov
ds
inc
xor
pop
scas
jno
in
stos
mov
inc
and
mov
mov
lret
std
fsub
xchg
loop
fisttpl
int
dec
cmc
fists
repz
aad
xchg
stos
sbb
aas
mov
dec
push
jl
sahf
popa
stos
xchg
rcl
jne
and
repz
xor
and
add
inc
push
jl
push
filds
ret
mov
aad
mov
xchg
pop
mov
fsubrl
je
test
or
mov
adc
daa
dec
xor
jle
xorb
jbe
insb
jns
cmpsl
and
mulb
sarb
cs
sub
test
test
xchg
cmp
xchg
xchg
push
and
sub
movb
orb
rorb
or
pop
or
push
jge
mov
pop
lahf
and
inc
fs
sub
cmp
cmp
lock
lods
xor
push
cmpsb
insl
jns
xor
imul
in
sbbl
iret
xchg
int3
in
popa
repz
jmp
xchg
mov
lret
jae
movsb
push
push
xchg
mov
dec
inc
push
sbbb
push
sbb
repz
ds
stos
enter
lcall
daa
cmp
sub
dec
loopne
mov
and
jecxz
jge
dec
cmpb
repz
xchg
xchg
in
arpl
sbb
loope
push
xor
and
jne
adc
cmp
ljmp
xlat
jo
cmp
push
push
cmpsl
pop
and
sar
rol
xchg
push
shll
and
cmp
xor
sub
in
cmp
push
jmpw
xchg
addr16
negl
mov
cmpsl
inc
jg
addr16
adc
push
mov
xor
call
filds
nop
mov
enter
insl
arpl
divb
xor
push
jnp
int
pop
cmp
inc
adc
and
or
push
cltd
cli
push
inc
aas
in
ret
push
and
outsl
jbe
cmpsb
daa
cmp
push
add
sub
cmc
out
mov
jne
xor
pop
or
int
das
xchg
out
icebp
shlb
and
pop
pop
idivb
mov
fdivrs
inc
pusha
mov
mov
lods
mov
lock
xchg
lret
fistl
lds
mov
test
ljmp
test
ljmp
rcrb
ret
cmp
movsl
aad
in
mov
ss
cmp
and
loop
hlt
or
push
cmp
add
push
push
mov
popa
pop
and
push
cmc
ret
and
and
mov
mov
push
xorb
popa
push
inc
stos
test
sbb
ja
mov
add
mov
sub
cli
pop
popf
push
cmp
jge
fs
mov
add
cltd
repnz
and
pop
dec
stos
and
sbb
push
xor
xchg
mov
or
mov
out
je
and
jae
push
jno
jne
jbe
mov
lret
jnp
cs
mov
roll
das
enter
popa
and
sub
iret
mov
fwait
outsb
inc
adc
adc
fldl
sbb
call
pop
jl
leave
add
xchg
aas
fcmovu
jae
sbb
and
btc
cmpl
stos
sbb
push
in
lahf
adc
pop
mov
and
xor
mov
lea
fsubrp
cmp
xchg
cmp
cli
mov
repnz
xor
clc
lea
call
iret
add
test
icebp
insb
jmp
cmc
mov
cmp
xor
mov
outsl
cwtl
lret
es
pop
push
repz
dec
into
push
pop
fstpt
add
mov
jae
push
dec
andl
jp
adc
in
cltd
mov
push
icebp
out
push
hlt
aas
gs
ds
sti
mov
mov
subb
fdivs
test
and
push
xchg
inc
testl
cltd
mov
inc
in
pop
xor
clc
clc
push
scas
ret
mov
shl
hlt
xor
cmp
dec
leave
or
call
loopne
cltd
incb
mov
lds
stc
sbb
rorb
push
leave
cmp
lds
ja
out
cmpsl
lahf
jbe
xchg
loope
xchg
fwait
repnz
xor
and
out
jnp
xchg
jg
mov
int
pushl
mov
lds
pop
adc
icebp
mov
pop
jecxz
cs
mov
out
imul
mov
cwtl
aaa
dec
clc
shrl
inc
inc
mov
jo
enter
aam
xchg
pusha
int
ret
into
pusha
arpl
mov
inc
jle
loope
push
rorb
test
pop
lods
enter
lds
inc
cmpsb
mov
aas
xor
clc
push
fisttpll
iret
sarb
push
fs
and
inc
leave
jbe
xchg
mov
cwtl
pop
incl
jnp
rcr
dec
xchg
xchg
aaa
and
dec
addr16
shll
cmpsb
imul
test
movsl
cmpsl
movsb
cltd
mov
cmp
loop
stos
sub
add
inc
cmp
and
dec
addl
inc
movb
mov
or
cmp
xchg
in
or
xchg
ljmp
in
inc
push
sub
dec
inc
sbb
lret
push
push
ret
pusha
nop
ror
jl
xor
cli
dec
sub
inc
insl
or
push
pop
pop
push
dec
inc
and
pop
stos
xchg
or
mov
insb
sahf
lret
fisubs
push
enter
jmp
xchg
stos
adc
mov
icebp
inc
push
jbe
and
push
lcall
mov
xchg
lea
int3
dec
scas
insl
pop
pop
lret
lcall
xor
mov
enter
ret
add
out
sarb
pop
mov
mov
ret
adc
pop
adc
add
sahf
xorl
lret
mov
addr16
pop
jne
dec
fsubl
mov
xor
mov
sti
pop
xchg
or
loope
mov
xchg
addr16
dec
xchg
and
cmpsl
jo
fwait
lahf
adc
push
lods
incl
movsl
jb
jp
pop
movsb
pusha
push
sub
mov
add
jle
scas
fistpll
pop
aas
cmp
sbb
test
pop
adc
mov
inc
xchg
bswap
std
arpl
sub
in
xor
arpl
mov
icebp
sbb
out
jb
mov
push
outsb
xor
roll
lock
mov
sbb
bndstx
je
push
lret
pusha
and
jg
xchg
xchg
dec
push
hlt
cmp
push
or
bound
jmp
pop
popa
xchg
clc
iret
mov
inc
adc
inc
inc
fistpll
push
popf
jge
jae
mov
mov
inc
cmp
sub
loopne
bound
sub
cmp
push
mov
pop
push
lea
and
shll
or
into
sbbb
xchg
shr
bound
pop
pusha
in
jmp
xor
sub
cmp
add
jl
shrl
jecxz
push
mov
xchg
push
mov
mov
cmpsb
push
lods
mov
cmp
pop
pop
nop
test
addr16
sbb
imul
rorl
fimuls
adc
out
fcomp
loope
mov
imul
adc
xor
gs
shlb
inc
aaa
mov
mov
setnp
inc
mov
inc
scas
pop
cmp
push
mov
jle
and
call
das
pop
pop
push
or
cmp
sub
mov
push
ficoml
push
mov
push
mov
push
les
jnp
roll
jo
out
fcmovne
lahf
addl
cs
scas
mov
xor
movsb
jno
dec
ret
and
adc
lods
in
push
call
xchg
mov
mov
pop
jge
dec
out
out
adc
mov
xchg
adc
lds
xchg
movsl
or
ja
pop
loope,pn
pushf
rorb
mov
lret
mov
in
dec
xchg
xchg
jno
sub
mov
cmpl
and
add
ret
in
repnz
adc
sbb
std
push
pop
aaa
jo
hlt
push
push
daa
jns
or
inc
nop
ret
repnz
cmp
add
fadd
xchg
sbb
dec
and
test
bound
lret
cli
push
adc
faddl
lret
js
stos
push
and
mov
sti
inc
in
bound
mov
push
ljmp
popa
daa
cmp
std
fs
call
adc
ret
xor
pop
adc
pop
push
out
sbb
insl
xor
outsl
out
mov
add
loop
xchg
mov
and
or
idiv
push
roll
test
xorl
pop
push
xchg
xor
andl
xor
mov
cmp
adc
cmp
cli
lods
movsb
pop
mov
push
pop
movsb
les
mov
jmp
test
test
cld
hlt
mov
in
aad
dec
in
lods
sbb
fisttpl
pop
test
test
xor
or
xchg
or
rcr
pushf
and
sub
repz
rorb
stc
insl
inc
sub
cmc
sbb
jns
jge
bnd
xchg
mov
or
push
daa
dec
ss
data16
adc
repz
das
fdivs
ret
xchg
test
push
int
add
dec
movsb
dec
lret
lahf
or
outsl
mov
add
out
adc
add
fldl
dec
stos
js
mov
shrb
adc
xor
mov
cld
movsl
das
fimuls
lods
mov
into
lods
sbb
mov
xlat
or
push
pushf
xchg
je
mov
jge
or
and
es
mov
data16
or
insl
push
mov
es
clc
inc
dec
and
fwait
imul
ljmp
inc
sahf
popf
adc
pop
push
rol
ss
mov
dec
mov
fwait
shrl
add
sbb
sub
fistl
les
jge
mov
mov
inc
push
xor
cwtl
inc
mov
push
inc
and
test
push
xchg
mov
bound
dec
push
add
sub
stc
fs
jmp
fistpll
test
add
add
shr
cmp
pop
dec
popa
inc
cmp
sti
rol
stos
add
aas
or
mov
xchg
cmp
repz
addr16
dec
and
pusha
jmp
call
jae
out
out
pop
mov
test
jmp
es
outsl
insl
iret
jmp
test
lods
add
mov
lock
adc
les
iret
jge
out
jle
rorl
lahf
dec
dec
dec
pushf
sti
xchg
inc
insb
pusha
fsubr
xor
mov
sahf
xchg
adc
add
das
pop
push
mov
xor
pop
push
and
or
mov
adc
mov
gs
xchg
mov
cmp
lret
dec
sbb
imul
dec
lods
sbb
lds
or
fstl
les
sub
sbb
push
pop
in
aam
or
rolb
in
mov
push
inc
and
jge
sub
add
add
push
pop
out
jmp
mov
cltd
push
mov
ret
cmp
push
test
push
ss
aam
xchg
add
mov
cltd
movsb
xchg
mov
xchg
jecxz
inc
xlat
cmp
xor
xor
aam
xchg
pop
je
sbb
mov
fimuls
ja
ret
insb
aam
cmp
lcall
pusha
mov
inc
scas
and
xor
outsb
jne
fmull
fbld
mov
fisttpll
decl
jg
add
inc
mov
push
and
cmp
mov
int3
dec
xchg
dec
jno
xor
mov
adc
imul
fisubl
cmp
sub
pop
shll
js
inc
cli
cmp
add
js
popa
lods
and
sbb
fsubl
sbb
sbb
fbld
xlat
sti
sub
cmp
lods
adc
push
ljmp
adcb
pop
aad
jo
xorb
xor
mov
pushf
clc
jns
lret
sti
sub
jecxz
jae
cmp
rcrl
lahf
mov
adc
arpl
mov
pop
cltd
mov
testl
add
test
mov
enter
lods
loopne
loope
outsb
push
mov
sbb
fucom
ror
cld
cltd
xorb
xchg
scas
fs
mov
clc
adc
xchg
scas
or
repnz
iret
mov
xlat
pop
inc
jne
or
inc
lcall
sbb
rorb
or
push
or
xchg
sbb
jmp
sub
or
lret
push
je
pusha
inc
in
push
sbb
subl
pop
je
add
pop
xchg
fldz
mov
insb
in
xor
and
aad
or
and
mov
jmp
or
jo
inc
sbbb
cmc
int
lret
test
leave
test
test
sar
xchg
xchg
and
mov
cmp
xchg
ljmp
call
roll
and
ffreep
aam
or
ss
roll
std
cmp
pop
jl
repnz
fidivl
jne
and
mov
ljmp
add
pop
testl
inc
bound
cwtl
jno
movsb
cmp
xor
fisubs
xchg
das
push
dec
out
std
out
pop
mov
in
aad
mov
dec
shll
and
lret
add
mov
out
adc
adc
cmp
aaa
inc
sub
xchg
sub
sbbb
jl
pop
cmpsl
xchg
and
je
or
and
popf
stc
xchg
fnstsw
mov
xor
nop
imul
mov
dec
mov
and
push
aad
arpl
scas
and
cmp
iret
ljmp
cmp
je
xor
rcrl
push
push
ja
cmp
sbb
enter
push
add
sub
in
punpckhwd
add
inc
loope
lahf
jnp
jmp
outsb
sahf
leave
adc
sbb
and
test
or
insl
adc
jnp
sbb
movsl
and
call
mov
jo
sbb
popf
stc
ds
mov
ljmp
jnp
or
xchg
out
adc
jnp
nop
sub
mov
mov
mov
jp
aam
inc
xrelease
sub
sub
add
nop
add
sbb
test
push
pop
push
fbld
call
mov
inc
insl
bound
mov
cli
enter
movsl
or
out
dec
lret
aaa
repnz
xchg
jp
cmp
push
sbbb
or
shll
adc
mov
jp
push
adc
jae
push
xchg
subl
out
ljmp
dec
push
push
rolb
pop
mov
ss
adc
cmp
int3
or
jmp
cli
leave
xchg
jg
rorl
mov
sbb
add
nop
push
fidivrl
jne
lret
add
cmp
dec
push
pop
call
sbb
lock
xor
push
sub
adc
adc
jge
loop
clc
movsb
mov
lods
loope
sbb
xchg
cmp
loopne
test
pop
ror
in
imul
sbbb
sub
out
cmp
aad
mov
and
jp
inc
ds
out
mov
pop
insb
push
push
fcom
and
push
xchg
cwtl
in
icebp
jge
les
add
push
leave
icebp
add
int
iret
sbb
test
imul
or
repz
mov
cmp
adc
std
pop
xor
xchg
jb
or
clc
testb
mov
bound
js
push
out
mov
sbb
mov
mov
leave
in
mov
cwtl
fisttpll
mov
pop
sti
in
xchg
hlt
pop
out
test
push
mov
outsl
movsb
jne
add
jg
push
aad
pop
fists
in
push
pop
fwait
xchg
dec
mov
fldl
movsl
adc
out
cmpsl
sarl
and
dec
sbb
pusha
push
push
fsts
cmp
scas
mov
sub
mov
in
stc
adc
xor
xor
test
adc
icebp
dec
sbb
or
cmp
movsb
sar
lods
or
or
imul
xchg
mov
dec
fsts
push
pushf
add
roll
fxch
xor
push
adc
cli
mov
cmpl
in
pop
nop
or
inc
iret
leave
cltd
out
sarl
aas
xor
test
push
mov
and
mov
jge
pop
xor
push
add
pop
std
jae
inc
push
sub
scas
xchg
jno
or
sbb
arpl
or
sti
mov
adc
inc
jg
push
sub
movsb
int3
xchg
das
mov
and
outsb
repnz
jle
mov
jo
mov
jl
xorb
test
adc
xor
sub
aam
sub
jae
inc
insl
add
out
movsl
sti
lahf
mov
pop
push
dec
in
inc
lahf
jns
cmp
inc
cli
jge
xor
jo
popa
int
adc
push
pop
sub
insb
adc
mov
push
icebp
xchg
push
and
fists
xor
loopne
pop
inc
jo
pop
push
lds
lahf
clc
test
jb
imulb
lds
inc
sub
mov
lock
cmc
ret
mov
rol
aad
mov
xchg
pusha
inc
lret
es
dec
lods
xor
jae
arpl
mov
sub
mov
cmovs
push
mov
push
ret
jo
jb
mov
pop
in
iret
xchg
xchg
and
cld
xchg
clc
pop
rcrb
insb
stc
and
and
xor
pop
rolb
cmp
inc
inc
lods
icebp
xor
push
xor
scas
push
das
xor
pop
lcall
out
cmpsl
push
mov
lea
cmpsb
lods
lahf
pop
push
pop
or
dec
pop
add
mov
pop
sahf
jmp
jge
mov
mov
add
add
jmp
test
adc
adcb
lds
xchg
popf
mov
pop
xor
sub
mov
cmp
mov
dec
mov
sbb
rcrl
cmp
pop
in
add
subb
into
adc
pop
fstl
xor
stos
xorl
insb
inc
sub
in
xor
repz
fcoml
cwtl
dec
mov
pop
mov
fimuls
dec
mov
and
fnstsw
in
push
enter
push
in
push
mov
inc
push
lahf
mov
or
or
mov
aam
fmull
clc
lret
lock
leave
ljmp
jae
mov
jne
push
and
sub
lods
xor
fistl
and
das
lods
into
outsb
pop
ret
adc
aas
lcall
out
jnp
ret
sarb
mov
sub
mov
push
jg
jle
cmp
shrb
add
jb
mov
jmp
mov
push
iret
popf
add
leave
jle
icebp
push
into
loope
leave
adc
pushl
js
lret
pop
mov
subl
mov
lods
dec
sub
mov
dec
xchg
cmpsl
xchg
xchg
je
jno
adc
hlt
cmc
nop
or
cmc
add
or
fcoms
mov
mov
xor
cs
sarb
mov
inc
jmp
add
cli
mov
pop
xchg
sub
out
int
mov
mov
dec
or
push
mov
add
dec
sbb
imull
jmp
sub
andl
xor
stc
bound
sbb
loope
fst
sbb
push
insl
push
jno
les
sub
jp
cmpsb
int3
das
pop
fstpt
scas
mov
dec
and
pop
mov
mov
push
mov
mov
aam
xor
and
cmpsb
cmc
jnp
dec
xor
push
xor
sbb
fdivp
loope
cmc
jae
movsl
sbb
ror
sub
arpl
movsl
or
mov
xchg
repnz
or
hlt
shr
std
sbb
pop
cltd
cmp
mov
jge
push
lods
push
addr16
or
aas
or
add
cwtl
sbb
aad
sbb
mov
and
push
pusha
cmp
pop
mov
mov
pop
test
ret
pop
push
sahf
into
stc
bound
inc
mov
push
repz
push
mov
pop
das
lret
jae
pop
popa
std
jno
mov
dec
jns
lds
xor
cwtl
bswap
mov
add
orb
cmpsb
test
outsl
add
xor
pop
mov
dec
aam
fistl
and
fucomip
sbbl
fisttpll
and
aas
mov
jb
push
inc
push
imul
out
subl
ret
adc
jbe
push
leave
sub
rorl
ss
push
add
lock
sub
dec
xchg
sbb
gs
mov
out
insl
and
pop
lods
xbegin
ret
pushf
cld
mov
add
and
adc
sub
adc
je
out
les
xor
xlat
xchg
mov
jge
pusha
les
mov
movsl
push
dec
lret
dec
or
cmc
stos
mov
mov
mov
les
mov
js
xor
jae
gs
leave
mov
adc
scas
add
lock
clc
insl
or
jg
jns
inc
xor
xchg
pop
or
add
bound
push
xchg
mov
inc
fistps
aas
iret
pop
mov
lds
cmp
push
mov
notl
and
lds
js
sub
sti
rcll
sarb
jo
mov
push
fisttps
sub
cmp
xchg
pop
data16
sub
pushf
out
cld
xchg
outsb
inc
cmc
stc
dec
ficomps
push
das
or
into
inc
add
repnz
sbb
jo
fdivrp
loope
xrelease
sub
and
outsl
cmp
gs
adc
xchg
out
xor
lods
sbb
jne
scas
dec
sub
cmp
fs
outsl
jb
test
push
pop
pusha
enter
mov
hlt
or
scas
out
xor
cmpsb
jnp
leave
mov
les
fcoms
cmp
adc
dec
pop
push
fstpt
cli
out
xchg
loop
mov
pusha
xor
call
scas
jl
mov
es
cmpsl
and
xchg
jno
jle
andb
loop
test
mov
or
add
xorb
fiadds
pop
fisttpll
or
dec
ljmp
mov
cwtl
pop
mov
arpl
dec
loope
push
jb
daa
mov
or
std
or
add
mov
mov
outsl
mov
pop
imul
inc
mov
xchg
cld
pushf
in
xchg
lret
sbb
test
xchg
sbb
test
pop
pop
mov
and
fisttpl
inc
daa
rcrb
aas
sbb
mov
xchg
in
fs
in
repnz
and
mov
adc
daa
mov
jne
sbb
test
xor
mov
jnp
mov
int3
mov
mov
testl
mov
dec
push
stos
mov
incl
jle
repz
dec
pushf
mov
pop
inc
aad
and
mov
les
lods
xchg
pop
popa
jecxz
or
push
cli
dec
and
and
dec
inc
pop
neg
push
jnp
cmp
ja
and
mov
loope
daa
sub
dec
add
inc
mov
cmpsb
out
je
inc
xchg
cmp
mov
xchg
adc
fidivrs
arpl
cltd
pop
cmpsl
rorb
dec
imul
stc
movsb
mov
outsb
xor
mov
pop
aam
mov
cmpsb
cmp
stos
jp
adc
xchg
lods
and
push
inc
test
and
out
add
aam
shrb
fldt
popa
adc
push
les
arpl
push
mov
int
push
inc
pop
mov
pushf
adc
cmpsl
imul
enter
cmp
mov
call
xchg
out
xchg
push
push
pop
fwait
pextrw
dec
fdivs
bound
cmpsb
stc
sub
mov
aad
add
std
pop
sahf
cmpsb
dec
shll
jo
mov
les
mov
push
xchg
dec
jb
lret
int
repz
ret
hlt
test
push
mov
xor
data16
mov
loopne
mov
cmpl
decl
jl
pop
rcrl
push
or
lcall
dec
xchg
xchg
xchg
mov
xor
sarl
pop
mov
or
sbb
pop
and
imul
jecxz
dec
lds
cmp
jnp
mov
cmpsb
push
sub
cltd
dec
xor
ss
and
sbb
xchg
lcall
in
jecxz
arpl
sbb
in
pop
mov
notl
pusha
and
mov
sbb
mov
jecxz
adc
ret
fstps
mov
push
pop
mov
sub
aam
push
adc
push
xor
cmpsb
mov
push
add
mov
pop
std
xchg
jmp
mov
xor
pop
jecxz
mov
leave
aam
fisttpl
mov
push
dec
jae
push
fdivrs
test
sahf
jle
inc
push
jo
fdiv
or
dec
scas
mov
int
cmp
mov
inc
jne
and
push
mov
lds
mov
jg
jae
pop
in
insl
add
lret
lods
pop
cmp
inc
mov
int
xor
sti
jae
push
dec
aaa
mov
xor
rorl
test
sbb
icebp
add
adc
ret
pop
pop
xor
shlb
ret
iret
lea
pop
mov
rcrl
cmp
pop
jecxz
dec
push
sbb
mov
and
xor
repnz
cmp
mov
dec
mov
cmpsb
mov
push
cmp
inc
and
xor
bound
es
push
pop
mov
ret
rcr
xor
fldl
hlt
pop
mov
dec
pushf
pushf
shl
mov
rcr
fiadds
mov
adc
mov
add
adc
fimull
jp
xor
ja
hlt
into
ss
sbb
adc
mov
cwtl
cwtl
mov
push
sub
cmp
mov
push
repz
pop
jmp
out
xlat
fcoms
stos
lret
xor
pop
xchg
jnp
ja
inc
int
add
xchg
mov
fcomps
jmp
push
lahf
aam
shr
cmpsb
lahf
sbb
pop
pop
pop
je
out
jno
shrb
outsb
jmp
xchg
fcmovbe
movsb
and
xchg
inc
mov
ljmp
jle
mov
xor
xchg
ja
aam
loopne
dec
pop
jb
into
add
ds
lret
jmp
mov
inc
fldenv
pop
dec
mov
push
pop
into
lods
adc
setns
shll
bswap
xchg
inc
cmc
xor
xchg
loop
mov
and
xorb
scas
decb
mov
jge
xchg
pop
xchg
pop
add
pop
pop
add
lock
or
push
cmp
aam
pop
mov
lea
outsl
jb
push
dec
lcall
mov
adcb
mov
inc
enter
arpl
dec
mov
int
movsl
lcall
cs
cmp
test
pop
push
jnp
sahf
add
scas
push
or
push
jmp
out
imul
das
jl
adc
push
or
fs
sti
mov
stos
adc
lfs
dec
push
sbb
loopne
movsb
inc
in
mov
lock
out
xchg
repz
dec
or
jns
clc
xor
arpl
jmp
push
lea
pusha
adc
jnp
sahf
dec
xor
adcb
mov
pop
jg
movsl
mov
daa
sbb
fbstp
sub
inc
adcl
and
repz
dec
jo
cmp
nop
adc
xchg
cltd
nop
fildll
pop
outsl
jg
out
movsb
sub
add
xlat
mov
cmp
popa
mov
pop
or
sbb
lods
inc
xor
jae
lcall
fcomp
mov
inc
rclb
add
insb
data16
add
jne
ret
mov
sti
xchg
push
mov
cmp
pop
js
fsts
dec
out
stos
repz
aam
cld
push
and
adc
push
ror
cli
addr16
adc
sbb
pushf
out
fcompl
cmp
lods
adc
lret
xor
and
popf
adc
in
insb
xor
lock
addr16
sub
outsb
ret
cmpsb
insb
pop
jge
or
aaa
sub
lods
mov
ret
shlb
ja
mov
ja
pop
filds
push
inc
pop
push
mov
and
or
jge
pop
fnstsw
lret
xlat
je
popa
cmpl
fs
or
fidivrs
ja
pop
ja
adcb
imul
fmul
xchg
imul
push
mov
and
ljmp
iret
scas
das
xchg
shrl
in
call
push
imul
jns
movsb
push
push
test
push
je
jb
adc
sub
movd
inc
jp
jmp
insl
inc
inc
or
shlb
push
pop
rcrl
insl
in
outsb
subl
in
pushf
lods
imul
js
push
and
jae
push
and
push
push
jb
pusha
inc
lret
inc
sub
pop
adc
xchg
jae
popa
mov
fcmovne
xchg
pop
divb
jnp
push
sbb
or
jbe
inc
aad
lahf
sarb
iret
out
sahf
cmpb
addr16
push
lret
dec
das
addr16
mov
mov
xchg
fistl
jnp
test
pop
mov
push
into
dec
leave
mov
push
out
lahf
fmul
outsb
xchg
mov
lods
jl
pop
mov
popa
inc
daa
dec
mov
mov
cli
scas
lods
stc
pop
not
ss
sbb
sub
aad
mov
sbb
loopne
enter
ret
sub
mov
mov
xor
movsl
dec
adc
xor
push
or
inc
insl
jge
inc
setge
pop
push
rolb
mov
sbb
lods
sti
inc
pop
mov
add
or
daa
pusha
cmp
or
and
xchg
xchg
mov
int3
jl
xchg
xchg
lahf
ret
xor
add
ss
mov
leave
or
add
inc
pop
imul
mov
aad
in
popf
in
mov
outsl
mov
push
add
xchg
mov
dec
cmp
xchg
addr16
ffree
sbb
dec
mov
inc
test
mov
imul
xchg
xchg
cmp
pop
sbb
and
mov
lret
pop
dec
adc
pusha
mov
cmpsl
clc
ds
dec
dec
imul
xchg
andl
xor
cmp
sbb
cmp
sub
jp
inc
jae
jne
mov
inc
stos
fs
sti
outsb
jb
es
sbb
aad
mov
int3
loop
jge
rol
pop
mov
hlt
cmp
dec
xchg
out
repnz
addr16
insl
xchg
loope
icebp
iret
push
jno
repz
mov
mov
mov
sti
cmpsb
pop
loope
out
mov
stos
stos
xchg
xor
lret
mov
popf
test
mov
dec
and
movsb
inc
xchg
sub
cmp
lods
xorl
pop
in
push
insb
call
bound
add
lret
lret
mov
das
cli
ds
nop
inc
push
add
cmp
mov
ds
mov
push
test
test
push
xchg
pop
movsb
addr16
jmp
push
cmp
bts
inc
pop
icebp
jno
mov
and
and
adcb
es
outsl
out
dec
test
ret
inc
sub
stos
sub
pop
inc
jp
aaa
inc
imul
lock
lds
call
mov
dec
jecxz
pop
ss
jge
xlat
mov
sbb
add
inc
cmp
test
mov
dec
jp
lods
push
pop
push
mov
xchg
and
mov
sub
inc
push
lds
imul
push
loopne
mov
push
mov
pop
shll
sbb
push
in
repz
cmp
jg
bound
push
inc
lret
xchg
int
add
imul
cmovns
pop
mov
pop
fisttpl
stc
jbe
dec
dec
das
xor
jp
hlt
sbbb
out
iret
popf
mov
push
or
cmp
xor
ss
ja
push
lods
jl
sbb
rcl
and
mov
clc
and
adc
test
rorb
fwait
mov
push
xchg
fmuls
and
jg
cs
fsts
mov
sub
push
xchg
cld
iret
pop
inc
imul
divb
test
adcb
call
outsb
and
add
jp
in
aas
push
mov
shll
push
or
and
xchg
fs
push
lret
mov
xchg
jae
iret
or
fistl
and
mov
frstor
into
lods
popa
pop
iret
loop
popl
xor
cmpsb
inc
test
push
ss
mov
ljmp
je
pop
out
inc
ja
dec
popa
aad
pop
mov
jno
adc
dec
arpl
jp
leave
inc
mov
fimull
fadds
cli
scas
mov
add
add
clc
xor
xchg
jnp
es
mov
cmp
lods
xor
dec
fistl
jl
pop
leave
inc
mov
aam
add
mov
adc
movb
loop
pop
int3
xor
xchg
adc
loop
dec
dec
xchg
aas
sub
fists
insl
adcl
bound
sub
adc
fstl
push
loop
iret
and
out
mov
pop
sub
push
call
imul
adc
mov
ret
adc
out
nop
rcll
sub
idivl
sub
xor
hlt
pop
pop
xchg
shll
jne
mov
adc
add
sbb
sahf
sub
mov
xorb
inc
mov
fistps
ja
cmp
xchg
sub
mov
andl
into
sti
jmp
hlt
and
js
push
dec
aam
sbb
pop
call
xchg
pop
dec
rolb
mov
inc
rcll
test
test
mov
push
sbbb
pop
push
popa
and
mov
or
dec
push
cli
push
mov
mov
pushf
xor
fildl
dec
adc
in
pop
sbb
dec
jbe
fadds
shl
and
lods
cs
xor
repz
outsl
sbb
sub
fnstenv
or
sahf
cltd
xchg
fs
adc
shl
mov
mov
and
cld
xor
mov
loop
cmc
or
pop
push
jle
cwtl
mov
jl
aad
stos
and
shrl
or
add
out
add
fs
jns
in
stc
jg
cmc
insb
mov
xor
xor
jecxz
pusha
mov
jmp
adc
stos
sbb
jmp
pushf
movsl
xor
xor
pop
pop
sub
mov
cmp
nop
adc
add
mov
and
in
int
daa
inc
fsubr
frstor
outsl
stos
test
fldpi
cli
fdivr
iret
loopne
jge
cmpl
adc
cmpsb
or
cmp
mov
cld
inc
jecxz
es
adc
cmp
xchg
add
cmp
cmp
test
cmpb
ds
stc
inc
sub
inc
test
out
xchg
jno
nopl
cmp
repz
xor
call
dec
dec
mov
popf
pop
psllw
out
fwait
pop
int3
popf
pop
adc
lahf
popa
in
sub
les
aam
ret
push
aad
push
lods
xchg
xchg
push
inc
andb
sbb
and
lret
mov
push
dec
or
xor
cmp
xchg
xchg
cmp
jecxz
dec
lods
add
cltd
ss
icebp
loope
out
ljmp
or
push
sub
adc
cmp
mov
pop
lods
add
enter
pusha
add
inc
enter
add
or
pop
arpl
xchg
xor
scas
cmp
bnd
push
cld
in
fistpl
mov
fisttpll
imul
ds
outsl
loop
push
mov
orl
mov
outsb
mov
shl
rcrb
push
outsl
sub
stos
mov
xor
imul
mov
mov
jle
push
xchg
addr16
jecxz
jge
fwait
ret
mov
scas
mov
scas
mov
pop
pop
jns
adc
mov
sub
push
scas
lock
fyl2xp1
in
scas
pop
xchg
fbld
push
push
es
leave
cmpsl
pop
loopne
div
mov
add
jmp
or
mov
jge
adc
sub
add
mov
dec
shrl
jg
xor
mov
dec
stos
jmp
xor
mov
scas
mov
jae
pop
inc
xor
cli
cmpsl
pusha
divl
mov
pop
xchg
fidivl
insl
mov
jno
xor
dec
pop
fcmovu
cmc
in
out
or
subb
clts
sub
and
add
lods
syscall
mov
icebp
xchg
imul
incb
js
std
cmpsb
inc
ficomps
hlt
add
rep
lahf
inc
dec
stos
jo
xchg
pop
mov
imul
ret
cld
out
mov
cmpsl
movsb
mov
aaa
mov
sbb
adc
aaa
jns
cs
lcall
push
xchg
pop
mov
mov
adc
fwait
jne
dec
sub
fs
add
add
or
adc
sub
pusha
cs
pop
aaa
cld
xchg
or
nop
je
xchg
mov
jl
push
push
lods
sbb
jle
push
push
add
or
stos
pop
adc
orl
jp
dec
pop
popa
mov
mov
test
mov
cmp
outsb
mov
cmp
adc
icebp
lret
inc
lret
test
je
andb
stc
jle
out
pop
inc
adcl
or
xchg
inc
dec
add
gs
jp
daa
icebp
xlat
push
add
and
ljmp
testl
sbb
out
addb
pop
pop
cmp
loope
cmp
aam
mov
dec
out
popf
in
out
fdivs
ja
insl
movsl
mov
jae
movsl
dec
repz
sarb
addr16
inc
int
cmp
lahf
fistpl
lret
insb
push
test
pop
lds
push
inc
das
xchg
xchg
test
outsl
xchg
cmp
jne
in
mov
sub
add
sbb
adc
sbb
cmpsl
inc
cltd
fdivrs
ljmp
stos
xchg
push
pop
sbb
cwtl
mov
dec
add
movsb
sarb
push
test
imul
xchg
popa
ja
push
inc
pop
pushf
add
lods
and
scas
or
sbb
xchg
shll
xchg
cwtl
gs
dec
sahf
dec
cld
cld
pop
mov
test
fyl2x
adc
in
cmpsb
cmp
mov
test
xor
bound
xchg
hlt
or
arpl
ljmp
mov
jecxz
sbb
and
cmpl
sub
add
lcall
flds
mov
sbb
xchg
vpcmpgtd
insl
aad
xor
xor
test
sti
sti
outsb
jb
loope
sarb
push
mov
pop
xchg
inc
shll
sub
fcompl
leave
push
fwait
or
sub
pushf
push
jbe
pop
loope
dec
jle
test
popf
sub
pop
cwtl
in
in
test
les
aas
popa
push
subl
sbb
rol
repz
pop
dec
push
jo
subb
hlt
xchg
in
adcl
cwtl
sbbb
inc
ret
loop
mov
fsubl
xchg
mov
hlt
mov
mov
pushf
jge
fstl
jmp
loopne
mov
loope
push
shr
pop
data16
jno
sub
mov
fwait
inc
inc
xor
in
cltd
ret
call
ja
or
inc
rcll
push
sti
es
testl
push
int
cmp
mov
or
fidivrl
pop
jnp
xor
jne
cmp
enter
pop
outsb
ret
jle
pop
ret
mulb
add
sub
xchg
inc
jo
js
inc
dec
out
and
sbb
mov
test
mov
jecxz
adc
hlt
in
sbb
jbe
sbb
add
jb
push
scas
inc
push
lea
cmp
or
clc
fcmovnu
fidivs
andb
shl
jne
fs
and
sahf
and
adcl
ret
and
fadd
icebp
rolb
mov
inc
mul
dec
push
movsb
push
jbe
rorl
jle
aas
sub
xor
adc
push
sar
mov
aam
in
js
scas
int3
push
add
add
cmp
mov
cmp
xor
mov
ss
dec
xor
lock
push
std
fs
adc
pop
stos
cmp
or
call
out
adc
icebp
mov
jecxz
pop
repz
outsl
addr16
mov
xchg
pop
rcll
jbe
mov
fs
fsub
adc
loop
jae
mov
out
adc
adc
subl
repnz
sub
insl
xchg
cmp
shrl
mov
add
aam
iret
jmp
pop
jne
xor
aam
jle
sbb
arpl
mov
sub
xchg
pop
sub
pop
and
and
pop
xchg
daa
rcll
ret
mov
pop
pop
into
cwtl
xor
push
mov
or
xchg
insb
in
jmp
iret
mov
push
pop
push
ret
and
pop
dec
sti
hlt
out
popf
outsl
add
mov
inc
or
aaa
xor
sub
add
mov
imul
or
mov
cmc
inc
xor
int3
adc
dec
add
push
popa
ret
mov
xchg
popa
adc
pop
inc
ja
mov
mov
and
xchg
push
mov
mov
xor
repnz
add
adc
adc
sbb
and
jns
xchg
adcb
leave
rcll
jne
pusha
out
sbb
addb
adc
push
fstps
xchg
push
adc
jo
xor
arpl
call
ficoml
sarb
test
hlt
out
dec
lock
jge
inc
xchg
lret
mov
xor
sbb
xor
test
lods
sub
mov
popa
mul
fnstcw
icebp
ljmp
push
shrb
fisttpll
icebp
and
cmp
add
dec
cld
lahf
iret
xor
movl
test
imul
push
movsb
mov
cmpsb
add
and
sub
fnstenv
fdivs
fsts
cld
lods
xor
loopne
mov
sub
push
jb
mov
or
fstps
jle
mov
sbb
orl
les
cmc
mov
mov
fucomip
mov
fisubrl
adc
in
lods
fmuls
sbb
jl
adc
mov
adc
add
inc
adc
sbb
inc
insb
jbe
sub
into
ror
pop
sbb
out
sbb
outsl
imul
push
outsb
and
mov
inc
std
add
aaa
jo
mov
xlat
lods
pop
or
pop
or
dec
mov
sahf
jae
clc
mov
adc
aaa
movsb
push
cmp
sub
sub
push
xchg
inc
leave
push
xor
add
mov
cli
or
push
push
pop
mov
scas
push
mov
adc
popf
sbbb
and
sbbl
pusha
sub
pop
movsl
arpl
popf
stos
add
jmp
inc
mov
cltd
fs
fsts
rclb
inc
xor
xor
pop
cmc
pop
push
fdiv
pushl
sbb
icebp
inc
jo
sub
call
sub
jbe
pop
clc
ret
cwtl
bnd
cs
fs
inc
mov
jbe
inc
pop
filds
sarb
jge
fnsave
arpl
js
int3
sub
test
dec
or
incb
adc
jmp
fwait
scas
xchg
bound
fildll
cmp
xor
ret
pop
sub
iret
and
and
in
lods
outsl
imul
mov
cmp
inc
leave
sub
loope
add
test
add
mov
test
mov
mov
lret
fdivl
cmpsl
or
rcrb
jae
cs
pop
cmpsb
add
inc
sarb
shll
xchg
mov
inc
jmp
icebp
nop
xchg
xchg
jecxz
call
daa
pop
adc
inc
int3
mov
icebp
dec
pop
xchg
fisttpl
arpl
sub
or
aam
jns
fisubs
push
pushf
inc
mov
mov
repz
daa
push
aad
push
mov
cmp
jmp
sti
push
jmp
ljmp
xchg
mov
jmp
loope
out
inc
cmpsl
inc
pop
fs
inc
aam
xchg
push
cmc
addr16
sub
or
pop
in
int3
gs
jl,pt
dec
and
jnp
fsts
push
and
inc
hlt
ss
cld
sbb
fimuls
mov
je
inc
dec
leave
cmp
in
outsb
jmp
rorl
push
pop
inc
fbstp
pop
add
pushf
bnd
ficoml
mov
sbb
rep
jp
pop
push
lds
and
pop
aam
pop
push
repz
clc
loopne
gs
lock
enter
clc
jecxz
nop
shll
das
mov
sbb
sbb
jo
xchg
adc
out
mov
add
jg
jnp
icebp
inc
stos
and
cltd
push
repnz
or
mov
jno
mov
lret
repz
out
ljmp
jecxz
popa
pop
movsb
rcrl
filds
cmpsl
jle
mov
imul
addl
test
movsb
fsubrp
or
mov
sbb
ret
clc
lea
xchg
outsl
int3
mov
inc
fnstenv
sarb
mov
mov
fcompl
jns
imul
call
cmpsl
cs
leave
in
call
or
shl
xor
rorl
mov
push
es
cmp
sbb
push
jmp
test
pop
mov
clc
xor
jns
inc
jge
dec
addr16
fmull
or
push
in
mov
roll
inc
cmp
js
adc
fldt
add
repz
test
dec
dec
mov
xchg
cs
push
dec
nop
pop
jp
cwtl
push
jb
mov
add
leave
jbe
insb
xchg
ljmp
xchg
js
xchg
mov
sub
test
fchs
sahf
sub
xchg
lret
cmpsb
scas
sub
test
pop
pop
inc
xor
lahf
int3
sub
jle
cmp
movsb
fcoml
inc
jl
fmull
mov
sbb
mov
jl
mov
fbld
scas
loopne
xorl
sub
and
movsl
inc
divb
mov
lods
mov
xor
in
pusha
out
mov
das
jne
pop
repnz
ret
test
or
fistpl
imul
jns
out
les
pop
lret
xchg
inc
out
jge
sub
mull
mov
jecxz
add
sub
sbb
cwtl
fisubrl
lds
lds
adc
cld
mov
mov
popf
sub
xor
adc
hlt
nop
out
push
mov
xchg
subl
cmp
call
in
loope
in
mov
repnz
into
adc
jae
jne
movsb
pop
ret
sbbl
jbe
adc
add
cmc
lahf
mov
movsb
mov
mov
mulb
cli
shrb
push
aad
xor
scas
scas
mov
lahf
mov
mov
sub
test
lods
repz
pop
mov
pusha
lcall
shl
xor
enter
enter
pop
pop
pushl
push
cmpsl
js
pop
bound
adc
mov
test
rcrb
or
addl
xchg
lods
cmp
or
pop
push
cwtl
mov
stc
add
lds
in
daa
and
xchg
mov
cmp
inc
movsb
lret
and
ret
lahf
rorl
or
out
cmp
xor
and
add
and
mov
scas
icebp
outsl
popf
xchg
loope
aaa
outsb
mov
dec
nop
outsb
lea
jae
outsl
addr16
jecxz
inc
adc
and
or
out
jns
das
add
pop
cs
xor
repz
shll
lret
loop
insb
cmp
aaa
in
ret
cltd
inc
sahf
test
cmpsb
dec
jl
arpl
shl
andb
jecxz
repnz
add
xchg
out
sarl
pop
insl
sarl
stc
xchg
adc
ds
loope
inc
adc
cs
pop
test
and
sbb
jmp
add
sbb
jl
push
sub
int
test
daa
adc
int3
lcall
pop
xor
push
imul
jg
mov
add
push
in
push
jp
mov
ja
add
outsl
mov
div
sub
jb
push
jbe
bound
xor
test
cmc
jp
jp
movsb
out
or
fildll
je
or
dec
push
or
outsl
mov
sbb
jg
cmp
lcall
lds
test
xor
xor
add
subl
out
test
adc
stos
and
outsb
es
std
xchg
and
xchg
jnp
cmpsl
subl
orb
adc
push
mov
lahf
mov
lret
call
int3
daa
pushw
adc
adc
adc
xor
adc
gs
mov
xchg
pop
mov
dec
lret
stc
int3
enter
jne
add
push
mov
xchg
ljmp
xchg
fcomps
js
popf
insl
rorl
sbb
aad
mov
lock
int3
in
xor
xchg
xchg
sbb
call
pop
adc
mov
popf
iret
add
mov
jb
lea
mov
xor
jno
mov
icebp
add
xorb
int3
in
sub
andb
shrb
push
in
xor
pushf
loop
sub
js
xor
inc
lret
xor
mov
dec
loopne
and
aam
adc
xor
gs
cmpsl
lcall
sbb
mov
dec
pop
xchg
mov
inc
push
dec
sbb
mov
outsb
cmp
mov
dec
mov
nop
js
pushf
stc
aam
sbb
fidivrl
push
add
fimuls
xor
xchg
in
pop
jmp
ret
jecxz
repnz
mov
adc
sub
mov
stc
test
inc
and
shlb
lahf
dec
inc
test
fldenv
fcoml
adc
sub
pop
js
xchg
or
adc
scas
cmp
cli
xchg
sahf
jb
xchg
aas
lods
ja
lahf
pop
sbbl
xor
xor
inc
push
dec
pop
arpl
scas
cmpsl
mov
fstpt
add
popa
rclb
fdiv
cwtl
dec
xchg
loopne
adc
xor
sbb
xchg
dec
pop
call
test
jbe
xor
xlat
add
cmp
into
push
adc
ljmp
outsl
icebp
mov
test
aad
aam
mov
int3
imul
xor
xchg
fmull
mov
cmp
xor
xchg
jle
out
cltd
loope
iret
shrl
loop
push
or
mov
pushf
mov
shrd
sub
add
push
cmp
rorb
pushf
or
mov
std
mov
ljmp
enter
xchg
cs
pop
sub
dec
sbb
lcall
leave
mov
adc
test
pusha
in
rcrb
ds
add
movl
sbb
loop
push
inc
shlb
popa
out
push
fwait
jnp
cmpsl
sbb
jle
inc
push
add
clc
into
mov
fisubrs
xlat
pop
cltd
out
cmp
inc
inc
cli
cmpsb
fidivrs
es
outsb
push
call
aaa
jns
or
roll
sbb
mov
fwait
inc
or
add
xchg
clc
xchg
in
jl
adc
out
and
mov
jne
xor
aam
or
lret
dec
pop
stos
pop
jecxz
rolb
bnd
xchg
sbb
mov
jg
sub
or
test
insl
scas
stos
adc
inc
aaa
dec
cmp
xchg
movsl
lods
xor
xor
inc
mov
adc
nop
insl
sub
push
dec
jnp
jne
andb
push
cwtl
mov
imul
inc
add
loop
or
test
push
pop
mov
inc
call
out
test
pop
cwtl
push
daa
or
ljmp
or
xor
dec
xchg
aam
sub
lret
jns
sub
in
ret
in
lds
fs
or
sub
inc
sarl
push
adc
div
psrlq
sub
rcll
sbb
cltd
sub
leave
jmp
or
gs
and
mov
repnz
jl
add
cli
daa
inc
orl
push
mov
lcall
push
cmpl
push
push
in
repz
shlb
xor
dec
or
jle
xchg
adc
xchg
and
xchg
pop
loopne
jbe
es
add
shl
cmp
rcrl
sti
xchg
cmp
test
pusha
pop
adc
push
sbb
scas
inc
xor
ret
add
mov
mov
aaa
or
sub
sti
negb
cmpsb
sbb
mov
lret
cmc
test
sarl
ds
out
hlt
adc
push
or
iret
dec
pop
pushf
std
xor
add
sub
and
push
idivl
push
dec
xchg
jb
xchg
and
mov
push
jge
push
dec
pop
ds
shlb
insl
clc
into
dec
scas
sub
imul
push
dec
sub
xor
xacquire
jmp
mov
mov
imul
mov
mov
sbb
sarl
mov
xchg
sbb
clc
pop
pop
inc
inc
cltd
in
push
arpl
les
pop
in
push
add
fistpll
add
mov
in
loop
cld
andb
mov
inc
sbb
xchg
mov
cmp
pushf
inc
outsb
test
sahf
and
mov
xchg
ljmp
imul
jge
inc
cmp
test
stos
test
cltd
xchg
mov
cmp
sub
ss
shlb
cli
mov
jne
sub
test
xorl
xchg
xchg
and
push
pop
insb
loop
arpl
cmc
pop
jb
je
mov
cmp
sub
mov
scas
mov
cmpl
in
xchg
js
add
xchg
ja
mov
mov
inc
fcompl
popf
sti
mov
sbb
and
ljmp
xchg
lahf
out
das
xor
sarl
jns
push
mov
daa
cld
push
je
icebp
cmp
cmp
ja
rorl
movsl
lock
inc
add
test
or
pop
in
push
lahf
xchg
adc
sub
add
xchg
xchg
int3
lods
jne
or
outsl
cmpsl
mov
mov
shl
inc
clc
mov
jae
aas
mov
mov
sbb
mulb
adc
lret
cmpsl
aas
insb
cs
xchg
inc
sub
push
into
pop
inc
loope
push
pusha
imul
aaa
arpl
xchg
imul
arpl
xchg
mov
and
movsb
loop
cmp
pop
incl
mov
jmp
pop
add
hlt
icebp
iret
lret
xchg
pop
cmpsb
test
xor
and
pop
mov
or
push
sarb
daa
sub
sbb
out
sbb
cwtl
jmp
mov
in
sub
pop
pop
xor
add
loop
inc
xchg
movsb
cmp
sbb
mov
add
scas
sub
mov
mov
leave
mov
lods
push
addr16
mov
and
leave
adc
aas
je
lcall
out
jmp
inc
out
or
sub
mov
rcll
add
xor
mov
mov
pop
dec
loopne
andl
dec
mov
stc
fisttps
add
adc
adc
test
xor
popf
or
cltd
xchg
add
jno
dec
cmp
sbb
mov
mov
push
cld
adcb
and
inc
cmp
sub
outsl
je
sub
inc
cmovo
xor
repnz
jge
xchg
mov
push
cmp
aaa
loop
shlb
jno
sub
cmp
testl
mulb
push
aaa
out
addr16
call
jae
xor
mov
insl
inc
out
addr16
aam
fstps
cmp
rorl
cli
cmp
inc
xor
adcb
xor
test
lret
cli
jecxz
mov
js,pt
lret
mov
add
orb
cmp
ljmp
cmpsl
or
add
cmc
jne
sbb
xchg
int3
popa
lock
add
int3
fwait
sbb
pop
add
in
mov
sub
ret
push
sbbl
cmp
icebp
pop
loope
push
pop
movsb
idivl
add
inc
and
and
add
lret
xchg
sub
pop
movb
push
adc
mov
mov
push
sbb
loope
sti
loope
sbb
loop
repnz
or
repz
push
cmpb
jae
loopne
daa
nop
divl
jns
add
or
lcall
mov
ds
mov
mov
bound
cmp
mov
loopne
pushf
pop
movsb
call
int
into
int
xchg
pop
xchg
push
mulb
sbb
cltd
call
jl
jnp
mov
dec
orl
xchg
in
jo
repz
xchg
mov
je
mov
ret
push
push
int3
insb
xchg
mov
push
xchg
inc
shr
adc
dec
add
fisttpl
in
mov
dec
test
daa
push
fcmovb
popf
std
repz
arpl
xlat
fdivr
rolb
insb
dec
nop
jns
enter
test
mov
jns
xor
cmpsl
inc
data16
ljmp
sbb
ljmp
sbb
mov
mov
xchg
pop
jmp
gs
adc
out
std
lret
xor
pushf
jge
stos
out
or
flds
jo
cmpl
mov
mov
dec
das
pop
loope
aas
mov
setns
mov
test
dec
out
adc
pop
les
ljmp
cmp
pusha
mov
jo
mov
les
mov
jbe
adc
scas
add
pop
cld
sub
push
mov
cmp
push
push
jl
testb
clc
sbb
enter
push
ftst
pop
and
inc
jns
mov
rorl
mov
fidivl
out
inc
or
xchg
pop
lahf
popa
adc
pusha
and
sub
xlat
lea
pop
mov
decl
xchg
cwtl
adc
jno
jo,pt
fisubs
sub
xchg
std
cltd
lods
and
pop
incl
add
mov
stos
in
movsb
pusha
xchg
xchg
cltd
shlb
adc
cmp
dec
out
mov
jl
and
test
push
and
ret
jbe
out
push
test
scas
xor
and
or
popf
sub
adc
test
mov
ficoml
cmp
mov
stos
push
adc
test
sbb
mov
fcomps
lcall
xor
add
mov
pushf
inc
inc
mov
int3
xchg
outsl
std
pop
lret
test
mov
test
xchg
popa
jns
lret
or
mov
in
sbb
mov
xchg
out
insb
jl
stos
cwtl
mov
inc
sbb
pushf
pop
mov
mov
fdivl
mov
mov
jl
xor
xchg
push
sub
jns
push
mov
out
in
xor
sub
hlt
pop
rol
xchg
xchg
dec
sub
pop
sub
dec
dec
popa
push
loopne
clc
pusha
jmp
fsubrs
cltd
in
scas
ficoms
and
jns
or
nop
addl
addr16
ucomiss
dec
mov
fwait
fs
dec
and
shll
lret
ret
xchg
scas
pop
add
sbb
lock
add
push
fcoms
add
inc
mov
test
loop
jge
and
call
jg
mov
mov
mov
add
pushf
pop
mov
mov
mov
ret
mov
adc
scas
xlat
ret
das
jmp
sarb
iret
dec
cmp
test
mov
cltd
jge
sbb
adc
jmp
dec
test
out
inc
xchg
inc
clc
mov
xchg
fisubrl
int
xor
and
jbe
outsb
mov
adc
ficompl
and
mov
xor
and
xchg
mov
adc
aam
add
test
in
cmp
jns
add
inc
or
cwtl
lea
sbb
inc
sbb
push
add
pushf
mov
xor
aam
repz
dec
jg
fsubrl
xchg
mov
leave
movsb
in
sbb
inc
push
popa
dec
and
popf
aam
push
xchg
hlt
mov
rcrb
repz
jmp
push
inc
in
fistl
inc
and
arpl
insb
adc
push
sbbl
in
stos
insb
rcrb
dec
stos
iret
inc
adc
pop
cmpsl
lret
repnz
mov
dec
dec
cmp
pop
sbb
test
imul
mov
xchg
xor
fs
mov
sbb
mov
mov
pop
sbb
enter
int3
int
push
push
and
and
es
daa
sub
arpl
popa
pop
sub
jecxz
adc
or
mov
fmuls
pop
jns
call
lods
mov
ljmp
bound
dec
xor
and
sub
hlt
mov
or
outsb
test
pop
pop
and
pop
imull
es
xor
fidivl
mov
enter
pop
std
sbb
lods
lods
pop
pop
cmpsl
adc
data16
fisttps
adc
inc
sub
xchg
ret
outsb
outsb
outsl
mov
and
dec
xor
arpl
fidivs
mov
jb
jnp
outsl
movsl
jg
xchg
in
daa
dec
push
sub
push
cmp
and
or
mov
test
xbegin
cmpsb
cli
push
push
insb
pop
pop
pop
xor
xor
xchg
pop
push
jnp
sub
sbb
insb
adc
and
pop
push
cmp
scas
mov
pop
cli
add
movsl
pusha
xor
arpl
fwait
or
mov
add
jl
push
pop
stos
popa
mov
ss
and
fisubl
mov
xor
jp
nop
or
and
outsb
aad
push
add
and
pop
sbb
leave
rcl
test
pop
sbb
xchg
push
cmp
inc
xchg
popf
push
pop
jl
shrl
in
sti
pop
and
dec
cmp
mov
jge
push
pop
add
cmpsl
push
inc
daa
xlat
sbb
mov
cld
add
mov
mull
loop
icebp
and
mov
push
adc
jae
ffree
ror
push
mov
pop
xchg
push
out
ss
mov
xlat
sub
mov
ficomps
test
push
pop
enter
jne
sbb
xor
mov
fdivr
pusha
es
popf
jo
adc
je
cld
ljmp
inc
adc
outsl
adc
cmc
sbb
or
fistps
jmp
pop
dec
shll
shl
xor
popa
mov
xchg
mov
inc
sub
clc
addr16
in
enterw
cmpsl
cmp
repz
dec
test
or
xchg
sub
ja
aam
push
sub
in
jge
jecxz
mov
push
stos
jle
movl
xchg
outsb
mov
xor
xchg
sbb
imull
adc
pop
pop
clc
pop
mov
sub
mov
imul
or
lea
adc
dec
fadds
sub
mov
cwtl
adc
cmp
ficoml
mov
xchg
mov
pop
and
orl
cmovge
sahf
xor
pop
inc
mov
es
in
call
or
pop
add
and
gs
sub
push
lahf
leave
mov
sub
sbb
xchg
es
mov
jecxz
fiadds
pop
ds
cs
aas
mov
cwtl
sbb
iret
adc
mov
pusha
add
lea
dec
push
fisttpl
out
mov
cwtl
inc
xor
dec
sub
mov
or
in
mov
sbb
fmull
jno
cmc
jbe
xchg
jae
les
xchg
sbb
inc
mov
hlt
int
test
insb
jg
ljmp
ret
or
addr16
push
aam
outsb
pop
mov
test
sub
jo
sbb
mov
mov
push
add
mov
pop
cld
fildl
shl
out
or
dec
addr16
xor
or
jo
rolb
dec
std
or
sub
fwait
add
sbb
insb
daa
js
inc
lea
mov
shl
fcompl
sbb
inc
mov
cmp
xchg
xor
pop
jl
out
daa
cmpb
fildl
sahf
stc
imul
out
xor
leave
or
push
jae
jns
mov
roll
xor
movsl
jmp
rcrl
stos
nop
bound
repnz
push
ret
ret
loop
inc
clc
mov
lods
cs
aam
pop
pop
shrl
mov
push
sbb
clc
xlat
imulb
xor
mov
mov
sub
loopne
dec
pop
divl
sbb
pushf
aas
add
inc
jbe
outsl
mov
pop
addb
pop
imul
inc
je
jg
dec
and
mov
sub
xorl
sbb
and
pushf
ja
sti
adc
jmp
cmpsb
outsb
cmp
lea
into
inc
ret
mov
add
xor
mov
insb
icebp
cltd
mov
fs
mov
lods
xor
inc
frstor
int
lock
std
mov
push
adc
mov
jl
inc
inc
lock
or
lret
negb
sbb
les
ficompl
cmp
jle
mov
sbbl
scas
imulb
insb
aad
divl
mov
shll
cmp
mov
jg
or
pop
scas
mov
mov
mov
xor
mov
xchg
imul
rol
movsl
stos
stos
cltd
stc
dec
sub
aas
mov
addr16
inc
sbb
push
cld
outsb
xor
pop
push
fistpll
adc
and
cmpsb
sbb
inc
lret
stc
outsb
out
ficoms
icebp
add
out
mov
shrl
cwtl
fistl
sbb
cmpsb
mov
pop
in
scas
sub
dec
fs
or
out
les
lret
sub
mov
or
inc
imul
sub
cli
outsl
test
xchg
shl
mov
fdivl
addl
ret
mov
xor
dec
lahf
and
cli
or
cli
cld
xchg
jg
sahf
lods
xor
test
jg
roll
inc
dec
and
sarl
das
fs
leave
in
push
es
fsubrl
xor
inc
and
sub
xchg
adc
lods
dec
nop
repz
scas
xchg
ds
xchg
call
iret
mov
push
lret
xor
ljmp
dec
stos
outsb
cmp
push
dec
mov
sub
pop
fstps
and
push
std
xchg
in
mov
pop
cwtl
nop
dec
jge
ja
add
add
push
push
or
mov
ret
and
adc
insb
js
xchg
or
notl
push
push
popa
insb
aad
adc
loope,pt
sub
jns
incb
jmp
popa
testl
and
push
leave
lcall
dec
nop
mov
aam
add
popa
xchg
cmc
dec
pop
ss
out
push
mov
push
or
or
sub
cmpxchg
fwait
lods
cld
loope
pop
inc
cmp
inc
or
or
pop
lret
mov
or
loope
xlat
mov
mov
mov
or
or
sub
jle
mov
clc
push
pop
mov
lds
in
aaa
je
int3
cmc
mov
jb
rorl
jbe
mov
addr16
cmp
push
punpcklwd
xchg
cmp
pop
ret
mov
adc
mov
mov
cmp
lea
ficompl
fcomip
jns
pop
in
jne
orl
popf
mov
lock
ss
sti
fcoml
outsl
into
inc
xchg
push
mov
pop
pop
out
test
outsl
fdivr
jge
pushf
icebp
sub
int
jg
pop
bound
cmp
into
jnp
mov
xchg
pushf
inc
rep
xchg
xlat
add
jne
stc
adc
add
lock
out
popf
sbb
test
adc
push
out
data16
cmp
movsl
or
cmp
cmp
fnsave
xchg
inc
add
cmp
arpl
scas
je
mov
call
test
pand
shld
or
ljmp
faddp
dec
loope
leave
into
add
lods
add
cmpsb
insb
adc
xchg
mov
pop
fstps
gs
cmp
notl
xor
daa
jbe
aaa
iret
jns
sbb
xor
sub
lods
jb
sbb
or
ror
jns
hlt
adc
not
mov
mov
lcall
mov
in
push
xchg
push
lods
in
mov
cmp
aad
inc
sarl
lods
push
and
pop
xorb
pop
and
pop
push
jne
push
push
int
fbld
xor
jl
imul
fs
xor
popa
testl
and
or
or
inc
mov
stos
cmc
adc
orl
cmp
mov
mov
mov
jnp
cmp
scas
fwait
daa
adcb
cmpb
scas
jo
not
mov
fcmovne
xchg
insl
fidivrs
mov
lcall
lock
mov
lcall
cmc
shlb
pop
lea
or
or
adc
pop
popf
iret
out
movsb
push
pop
leave
or
lcall
and
dec
mov
scas
mov
lods
lret
lock
adc
pop
cmp
cmp
jp
cmp
mov
mov
ret
lock
nop
pop
xchg
cmp
lcallw
outsl
sub
inc
into
jno
mov
push
lret
push
cmp
ss
aaa
lahf
popf
dec
je
cmp
jmp
and
cwtl
pop
es
sahf
sbb
xchg
lret
pusha
dec
stos
push
fnclex
xchg
fisttpl
mov
mov
lret
jne
rcrl
sub
lahf
mov
add
and
in
dec
adc
inc
jns
sub
pushf
xor
leave
jnp
pop
mov
mov
nop
pop
lret
xchg
ljmp
imul
pop
loopne
dec
int3
mov
cmp
ret
cmp
mov
mov
mov
iret
js
inc
outsb
jecxz
jb
mov
push
dec
sbb
mov
jl
ret
fwait
rcrl
lret
dec
dec
mov
push
pop
sub
dec
rolb
mov
sub
outsb
imul
fcoml
imulb
in
jge
shl
faddl
add
jl
cmp
dec
inc
dec
mov
xor
sbb
push
into
out
test
mov
mov
sti
popf
sbbb
add
mov
jo
lock
adc
xor
mov
jp
repnz
lea
add
cltd
push
xchg
jo
xchg
fadd
and
inc
xchg
add
adc
sub
outsb
mov
mov
js
cmpsl
outsl
nop
hlt
pop
loope
xchg
jne
mov
push
mov
pop
repz
movb
cld
ret
movb
lds
call
push
aaa
sbbb
aas
out
mov
aam
out
add
and
stc
flds
stos
icebp
jmp
mov
sub
adc
leave
inc
xlat
mov
scas
or
mov
jbe
xor
xor
aas
nop
push
xor
insb
sti
jb
cmp
xlat
shrb
jo
sub
loop
les
popf
ljmp
popf
mov
add
sbb
dec
push
adc
cmp
imul
and
cmp
push
icebp
push
aam
test
bound
cmp
pop
push
push
mov
icebp
jge
jns
std
ret
mov
jp
sbb
sub
cmc
bound
dec
loop
xchg
test
adc
jnp
rsqrtps
imul
cli
push
jmp
inc
or
mov
test
leave
mov
xchg
es
repz
or
dec
jmp
cmp
mov
repz
cmc
dec
inc
nop
std
mov
xchg
nop
and
pop
cmp
test
shll
aas
rorb
cmp
mov
aas
movsl
negl
add
ja
ja
test
sbb
ficoml
cmp
inc
adc
mov
mov
lock
mov
mov
cld
push
mov
faddp
mov
mov
jno
sub
inc
hlt
add
adcl
and
add
in
movsb
or
movsl
push
test
mov
adc
out
xchg
imul
xor
xchg
xchg
loop
in
jno
adc
outsb
mov
lods
mov
mov
cli
out
cld
push
mov
jmp
lock
inc
das
in
out
out
outsl
subb
sti
aam
pop
inc
call
sti
cwtl
sbb
cmc
out
das
fisubs
neg
or
add
mov
push
iret
repnz
xor
mov
jmp
add
sub
dec
jp
push
push
cmovp
ljmp
fsub
sti
jbe
or
dec
fcmovne
fwait
testl
push
cmc
lret
mov
mov
mov
lret
and
cmc
jns
mov
lods
or
cli
popa
dec
or
lahf
jnp
cwtl
pushf
mov
pop
sti
hlt
lds
fneni(8087
shrl
push
or
dec
push
in
dec
pusha
mov
cld
lods
jp
movsb
mov
divb
jb
xchg
fcompl
dec
jg
sub
sub
pop
and
pop
subl
pop
sbb
pop
sar
xchg
arpl
lods
in
or
rclb
out
add
popf
mov
mov
add
dec
sbb
mov
jae
mov
jb
iret
xorb
mov
push
clc
in
adc
imul
js
lds
mov
fimull
lret
mov
movsb
sbbl
mov
xchg
inc
in
cmc
sahf
fs
mov
or
xchg
aam
cwtl
loopne
ret
push
lret
push
add
xchg
push
add
mov
push
jne
add
cmp
loop
mov
test
mov
daa
fistpll
sbb
lea
test
rorb
test
dec
sbb
andb
rcrb
aas
or
mov
ljmp
xor
stos
pop
pop
or
sub
jecxz
clc
cmp
loop
add
in
aam
call
das
into
ficompl
sbb
jmp
cs
inc
loope
mov
dec
fmulp
cwtl
mov
and
cmc
leave
pop
mov
push
dec
and
jg
lret
ret
stos
dec
push
inc
movlps
stos
cmp
or
cli
pop
mov
fidivrs
xchg
dec
or
cmpsb
and
rcr
push
lock
jg
inc
rcll
sbb
insl
insl
sbb
adc
and
mov
out
inc
and
mov
clc
shl
cwtl
insb
pop
out
sub
lods
pop
clc
loope
lahf
in
dec
sar
inc
jl
dec
sti
mov
lret
fdivrl
lret
hlt
hlt
xchg
adc
mov
or
dec
inc
mov
push
inc
shrb
lods
mov
addr16
daa
loope
xor
cmpsl
inc
jge
aam
aas
mov
shll
ss
push
inc
out
test
lods
daa
sub
mov
mov
in
bsr
pop
in
xchg
pop
inc
xor
cmp
dec
popl
inc
jg
fwait
rcll
je
imul
adcl
dec
es
push
rol
mov
xchg
mov
add
mov
cmp
jg
lea
xchg
jo
add
test
push
mov
push
es
cld
ds
xorl
or
sub
cs
jo
mov
mov
add
ficomps
xor
push
js,pt
les
in
pop
or
mov
ss
mov
iret
mov
xor
inc
add
sahf
sub
fisttpll
add
push
orl
mov
dec
xor
jl
cwtl
mov
inc
enter
pop
mov
add
dec
inc
popf
mov
in
pop
pop
nop
stc
call
es
inc
mov
lret
add
imul
aam
in
mov
out
or
dec
xchg
imul
or
fidivl
and
es
inc
das
inc
subl
cmp
jo
sbb
fwait
dec
and
insb
insb
jns
inc
out
dec
mov
dec
std
mov
lock
xchg
int3
icebp
xchg
out
fs
insb
loop
mov
in
xor
or
mov
andb
mov
adc
push
imul
ja
mov
dec
je
xchg
or
pop
xchg
flds
inc
pop
fsubrl
mov
sub
daa
out
fcmovnbe
or
pushf
lret
xchg
js
std
and
lcall
jo
inc
movsl
adc
cmc
inc
lods
cs
mov
loope
repnz
dec
out
push
addl
mov
roll
cmp
push
add
and
aam
inc
sbb
xchg
rolb
idiv
out
icebp
shlb
fs
push
fsubr
popa
scas
or
outsb
cmc
jnp
add
movsl
aam
cwtl
adc
leave
push
jbe
sbb
pop
xchg
pop
ret
pop
cmp
call
xor
mov
add
fisubs
or
pop
xchg
fs
xor
lcall
or
call
sub
rcll
dec
add
leave
pop
mov
in
repz
decl
jl
pop
lret
push
add
movsl
or
aaa
pop
mov
xor
xchg
inc
outsl
cmp
mov
adc
fidivrs
ss
shrl
adc
mov
xor
jne
xchg
je
mov
loope
push
cmp
or
lahf
mov
mov
xor
call
mov
shlb
jg
xchg
xlat
call
push
pop
xchg
xchg
out
roll
cltd
iret
and
dec
ljmp
pop
in
inc
imul
mov
jp
fadds
cmp
je
cmp
mov
cmpsl
fs
popf
and
jmp
pop
push
xchg
sub
push
jmp
dec
in
pusha
push
scas
mov
repnz
in
shl
fistpl
mov
fdivrp
push
inc
add
dec
lahf
ret
inc
lods
pushf
jl
cmp
and
jle
sub
sub
in
lret
jp
or
push
sbb
mov
pop
sti
lods
imul
push
hlt
add
scas
sub
xor
popa
cmovg
idivl
push
mov
push
leave
mov
aaa
data16
jmp
aam
cmpsb
xchg
mov
mov
popf
stos
push
fsts
enter
gs
iret
jae
sub
cltd
mov
mov
fbstp
mov
lret
pop
or
lock
sbb
jo
lods
xchg
loopne
repz
faddp
ficompl
inc
dec
lods
jecxz
xchg
pop
mov
xchg
pop
or
sbb
test
lea
sarb
xorb
popa
aad
xor
add
ja
sbb
xor
stc
push
sub
mov
iret
out
loope
sub
adc
es
pop
lret
ss
stc
mov
in
int
mov
scas
in
or
jnp
fistpll
or
std
imul
push
mov
xchg
cs
pop
adc
out
addr16
mov
sarl
jecxz
shr
lahf
mov
flds
dec
jnp
inc
popf
in
xchg
stos
stc
rolb
cwtl
push
add
cwtl
movsb
add
lock
inc
testb
cld
daa
popf
mov
repz
pop
mov
icebp
add
pop
ret
sub
adc
mov
add
jne
pop
aas
sbb
jno
ret
fwait
mov
stos
cmp
dec
shr
mov
pop
push
in
ds
xor
ja
pop
jae
dec
inc
mov
xor
sbb
shlb
pusha
xchg
ficoml
int
fstps
cld
xor
repz
enter
test
pop
sti
cmp
pop
outsl
cld
aaa
testl
mov
mov
adc
push
ljmp
mov
out
jg
sbb
mov
and
lock
adc
mov
pop
lret
lds
int3
scas
test
lock
call
add
cwtl
or
dec
inc
out
lods
and
mov
push
sbb
setbe
adc
repnz
pop
cmp
movsb
lods
gs
out
pop
dec
stos
mov
jno
inc
pop
jno
icebp
push
push
hlt
jmp
push
subl
or
or
xor
or
scas
imul
and
inc
and
decb
rolb
inc
push
and
mov
jl
mov
and
sbb
xorb
scas
push
dec
mov
loopne
fildll
mov
push
movsl
jb
xor
adc
xor
orl
add
push
add
xor
dec
mov
sbb
bound
xchg
stc
xor
aaa
xchg
pop
push
mov
cmp
popf
in
mov
gs
xchg
push
adc
repz
adc
mov
aad
xchg
cmp
mov
dec
es
ss
in
push
or
imulb
in
xchg
fstps
or
xchg
adc
and
lds
mov
idivl
inc
mov
jmp
bound
idiv
push
jp
pop
clc
orl
mov
sbb
nop
jnp
xor
pusha
pop
inc
push
lock
push
add
xchg
lods
lods
push
mov
clc
and
xchg
cmc
adc
nop
sbb
dec
aad
mov
rorb
jne
mov
inc
push
negb
fisubl
aam
maxps
and
and
add
pop
jne
adc
sbb
push
je
pusha
xor
lret
outsb
sbb
xor
push
nop
sub
movsl
inc
bound
inc
sub
cld
cs
insb
hlt
pusha
sbb
push
inc
mov
pusha
push
loop
mov
mov
sbb
dec
test
fst
mov
jns
cmc
push
not
aad
jne
mov
cltd
dec
insl
xchg
addr16
ret
sub
mov
pop
xor
jne
pop
insl
cs
movsb
icebp
sbbl
movsl
movsb
rcll
mov
mov
pop
jge
std
add
mov
xorb
imul
fwait
jno
adc
fcmovb
sbb
aas
mov
push
add
mov
aad
mov
sbb
jo
fnstcw
orb
gs
jns
scas
adc
stos
mov
and
out
loope
add
sbb
pop
adcb
in
pop
fidivs
and
inc
out
xchg
dec
jbe
or
pop
fs
jns
mov
imul
enter
cmp
add
inc
mov
xor
dec
cld
rolb
jne
repz
xchg
loop
add
fs
lods
push
loop
adcb
into
into
pop
fs
pop
jl
mov
hlt
inc
inc
mov
cmp
mov
pop
loope
sti
lock
xchg
push
add
div
mov
les
or
cmpsl
sub
hlt
pop
pop
imul
fdivrl
cmp
imul
ret
mov
test
addl
jnp
adc
xlat
fcoms
aam
xchg
mov
fs
jge
dec
push
lds
and
pusha
jb
mov
scas
jmp
dec
lods
popf
jae
lcall
or
aaa
push
or
and
and
add
mov
outsl
outsl
out
cmc
rorl
repnz
loope
inc
shld
es
and
add
add
inc
repz
dec
pop
test
loopne
cmp
pusha
push
stos
into
cmp
inc
call
jno
push
jle
cmp
nop
xchg
loopne
stos
cld
loope
cmpsb
enter
add
or
es
xchg
sub
gs
mov
std
or
or
shlb
test
popf
repz
lock
cli
pop
pop
repz
mov
imul
cmc
push
jno
in
xchg
movsl
push
into
repz
scas
and
jmp
es
jg
in
mov
les
lds
xor
call
jl
fldenv
into
pushf
cmpsb
cmp
lret
fwait
push
xchg
ds
dec
push
test
cmp
adc
bound
adc
fsubrs
ja
rcll
lcall
adcb
mov
xchg
mov
pusha
out
jg
outsl
stos
mov
and
addl
cmp
clc
pushf
outsl
push
shll
xor
push
cmove
cld
dec
js
imul
mov
push
push
out
addr16
int
in
insb
push
jg
lea
inc
sbb
repz
int3
xor
push
imul
jb
notl
lds
addr16
rorl
adc
ljmp
jae
pushf
movsb
fwait
jno
movl
mov
ret
fisubrs
jno
mov
pop
jmp
cmpsl
ss
sub
sbb
in
inc
cltd
jg
mov
scas
push
sub
fdivrp
xor
cmp
pop
mov
jae
dec
mov
cmp
stc
mov
ret
outsl
negb
sub
int3
fstl
inc
mov
mov
mov
mov
xor
jge
and
loope
insb
shll
int
aad
and
fwait
imul
fidivl
xor
out
pop
stos
outsb
add
pop
fnstenv
nop
insb
add
psubd
fwait
mov
and
js
mov
rcrl
mov
pushf
shlb
imul
nop
inc
test
lret
jg
arpl
popf
daa
sbb
adc
lcall
push
pop
mov
sub
xchg
fs
mov
inc
fsubl
xchg
pop
add
fs
test
fstl
sub
roll
sbb
pop
xchg
scas
ljmp
dec
adc
jnp
repz
xor
xor
mov
mov
outsl
xor
das
adc
cmpsb
fdivs
jno
sarb
jae,pt
aas
cmp
je
xorb
add
in
mov
sbb
pop
sub
pusha
fdiv
push
js
iret
dec
ss
repz
int3
sahf
orb
adcb
outsb
insl
aam
add
sbb
push
imul
repnz
xchg
mov
pop
sub
jl
mov
int
call
gs
xchg
rcrl
icebp
cmpsl
call
lahf
rolb
mov
loop
je
xchg
and
push
and
push
pop
mov
fimull
xchg
push
leave
loopne
aaa
outsl
jg
ret
stos
push
dec
dec
int
dec
xor
mov
jns
inc
int
xchg
jae
arpl
jno
ja
pushw
cld
mov
xchg
jo
aam
xchg
adcb
sub
daa
cltd
jecxz
cmp
ljmp
out
cwtl
and
movsb
cmp
fbstp
mov
loopne
sub
lret
lahf
jge
lea
outsb
sub
fs
dec
sub
loopne
sbb
xchg
pop
sub
adc
outsb
add
push
mov
ret
ret
addr16
popl
out
jo
dec
xor
arpl
jns
pop
pop
xlat
pop
test
movsb
in
mov
sahf
xchg
mov
push
js
aad
cmp
aas
iret
daa
adc
add
repz
inc
test
dec
lods
sti
xlat
stc
dec
loope
or
ret
test
pop
pop
xlat
or
xor
pop
mov
mov
ss
mov
fcoms
jl
xchg
bound
jnp
out
sbbb
jl
or
mov
sbb
loopne
mov
in
jnp
mov
xor
bound
or
mov
fistps
jge
jp
ljmp
jne
inc
push
push
push
push
mov
roll
stc
arpl
ljmp
popa
sbb
and
in
xchg
inc
adc
inc
push
push
mov
lret
jo
movsl
push
pop
aam
pop
pop
mov
lret
push
lods
cld
scas
add
mov
addr16
sub
test
out
jecxz
sbbb
inc
jae
push
xchg
mov
mov
ja
sti
cmpsb
popa
sub
sbb
adc
and
stc
inc
xchg
jnp
mov
cmpsb
cwtl
repnz
in
xchg
cmp
andb
xor
mov
add
mov
add
mov
dec
daa
call
cli
jns
testb
pop
hlt
addr16
shll
fnsave
mov
pop
std
adc
inc
mov
jae
xchg
nop
loope
rorl
fidivrl
sbb
js
cwtl
int
xchg
test
xlat
ja
sbb
xchg
lds
xlat
sbb
cmp
cmp
inc
pop
bound
mov
pop
mov
aad
pop
insl
xchg
mov
movsl
cmp
xor
ss
jge
cmp
sbb
pop
xchg
aaa
cmp
adc
pop
ret
fs
mov
fmul
std
mov
inc
pop
cmp
aad
jns
sti
daa
loop
sub
xor
lds
xchg
mov
push
cmp
in
inc
mov
lea
test
ds
xor
mov
xchg
test
pop
bound
inc
mov
xchg
and
shll
ss
loopne
adc
les
mov
fimuls
ret
mov
mov
sbb
add
cs
add
jns
and
and
dec
pop
in
push
stc
inc
dec
iret
jnp
out
ljmp
or
mov
cmp
movsl
cmp
adc
int
and
call
push
movsl
xor
cltd
lret
addl
sub
push
lods
call
mov
scas
cmc
andb
jb
test
adc
lea
pop
lcall
or
bound
cmc
ficoms
pop
push
out
test
rorl
mov
enter
subb
filds
jo
ja
xchg
add
int
xchg
add
adc
ss
xchg
adc
loopne
mov
jb
pop
push
repnz
cs
test
adc
mov
stos
mov
imul
add
leave
inc
pop
jecxz
iret
sti
mov
jmp
jne
jb
or
in
popf
jle
pushw
into
jl
and
push
jno
push
add
inc
xor
lahf
popa
jnp
mov
popa
pop
repnz
mov
repz
add
push
dec
std
cmp
jae
mov
adc
push
sbb
jns
fldcw
jg
jmp
adc
mov
dec
mov
roll
addr16
ret
and
imul
xchg
test
jnp
lock
sub
adc
add
pop
aaa
insl
mov
pop
cltd
adc
jne
mov
mov
jg
mov
mov
daa
rcr
xor
shlb
and
cmpsl
rcr
scas
sbb
fsubrs
push
inc
pop
and
out
scas
and
jecxz
sub
adc
repnz
in
jns
push
std
add
scas
hlt
push
xor
out
jmp
inc
dec
inc
in
mov
jg
pop
cs
push
cmp
je
jo
jb
jne
dec
lds
fstps
dec
test
push
or
and
stos
jbe
or
jge
sub
sbb
cwtl
bound
inc
mov
push
movsb
in
insb
jge
sahf
arpl
sub
mov
jne
lock
and
test
fimull
mov
je
adc
mov
xchg
sbb
cmp
nop
in
pushf
add
movsb
xchg
ss
cltd
pusha
frstor
jno
jno
and
jb
insb
mov
push
adc
shrl
mov
stc
icebp
stc
test
leave
jae
nop
mov
clc
imul
sbb
sysexit
aad
insl
sub
imul
movsl
sbb
inc
bound
ds
sub
fcompl
fsub
fistl
into
cmp
mov
fnstenv
idivl
pop
mov
jge
xchg
sub
adc
inc
inc
push
mov
addb
sub
sbb
xor
lahf
push
sub
adc
mov
and
or
js
add
hlt
cmp
aas
loop
mov
rol
mov
xchg
test
mov
dec
push
lea
jp
mov
inc
xor
enter
dec
movsl
sbb
jo
xchg
cmc
imul
push
sub
sahf
icebp
adc
and
mov
aaa
es
jns
icebp
popa
or
idivl
js
aam
add
sbb
ds
mov
jb
adc
ret
jne
popa
rcrb
mov
loopne
inc
add
repnz
in
sahf
and
sub
xchg
ret
push
in
and
ret
jae
mov
jbe
daa
or
testb
push
ret
inc
inc
mov
cmp
out
sub
and
sbb
push
mov
push
mov
dec
ret
mov
mov
xchg
add
xchg
sub
nop
shl
mov
in
je
fs
mov
xor
fsubp
mov
movsl
sti
mul
int
mov
jns
jg
xchg
loope
dec
in
pop
enter
mov
jb
dec
mov
mov
test
mov
cmp
mov
ds
aas
mov
adc
jnp
popa
popa
add
add
das
sub
test
inc
cmp
lcall
ret
std
std
mov
lds
int3
mov
dec
pushf
and
gs
cmc
adc
int3
jnp
mov
dec
cltd
sbb
inc
aad
mov
add
adc
jp
xchg
cmp
int3
mov
ja
jle
loope
adc
mov
outsb
xchg
shrl
or
ds
into
mov
iret
imul
popa
and
xchg
jbe
sbb
inc
and
add
adc
cltd
nop
add
popa
sbb
and
adc
icebp
cmpsb
inc
int
in
push
push
or
leave
stos
jae
popl
iret
fwait
dec
mov
sub
in
pushf
jbe
mov
and
inc
inc
mov
les
xchg
in
inc
xchg
sub
lods
lret
add
repnz
mov
and
adc
dec
arpl
lods
test
fdivs
jb
mov
cmpsb
repnz
outsb
mov
paddusw
imull
sub
fsts
sahf
mov
popa
and
fisubl
loope
jge
arpl
std
mul
inc
xor
subb
mov
mov
pop
jp
cmpsb
dec
pop
mov
mov
pushf
xor
test
or
lcall
cltd
data16
add
pop
insb
stos
ljmp
jns
daa
shl
call
pusha
and
cmpsb
push
xchg
mov
or
mov
lret
xor
cmp
in
and
imul
addb
in
dec
movsl
andl
dec
xchg
jle
pop
mov
test
xor
mov
jae
xchg
ss
cmc
push
insl
mov
jo
mov
push
and
pop
mov
adc
mov
jbe
out
and
and
popa
pop
push
jge
push
mov
loopne
xchg
xchg
mov
fldcw
cs
inc
xlat
jle
dec
inc
lea
jne
stc
inc
dec
dec
add
notl
cmp
sbb
iret
jns
je
fs
fstpt
mov
and
subb
ja
jae
adc
or
push
jnp
sahf
sub
pop
mov
xor
mov
outsb
fbstp
fists
daa
mov
cmp
push
mov
insb
in
cmp
daa
scas
push
push
sub
loop
aam
dec
and
add
xlat
or
jno
test
xchg
or
xor
lret
inc
fs
pop
enter
sti
jge
arpl
pop
inc
or
mov
sarl
jo
cmpsl
mov
pop
test
movsb
inc
insb
movsl
fcmovne
sbb
movsb
fsubs
inc
clc
dec
and
ljmp
jg
ss
lret
cmp
and
jmp
cmc
loopne
decb
jl
int
sub
cwtl
inc
inc
pop
aaa
mov
inc
and
xor
inc
mov
push
jo
outsl
repnz
jg
cmp
pop
insl
xor
out
test
cmp
mov
push
scas
add
jle
orb
in
outsl
dec
inc
enter
ljmp
lock
sahf
mov
into
mov
dec
xor
jle
es
jno
jle
xchg
nop
mov
add
mov
cmc
jno
sbb
and
and
lea
mov
xor
mov
or
jg
inc
imul
xchg
arpl
cmc
lods
pop
rorl
mov
ja
aad
addb
adc
pop
les
aas
xor
xchg
xlat
jns
push
lret
int
and
pop
rclb
cmp
outsl
sbb
sbb
and
xchg
add
shll
xchg
adc
add
loop
addr16
mov
push
lea
icebp
out
mov
fdivr
lcall
add
into
xchg
dec
insb
or
imul
mov
jecxz
sbb
xchg
test
andb
imull
jbe
stos
and
lods
in
fnstcw
adc
outsb
sub
push
mov
pop
mov
xorl
push
loope
sub
aas
lahf
test
xchg
inc
dec
sbb
divb
xor
repz
fcom
movsb
int3
mov
sub
dec
jp
fdivrl
lret
icebp
mov
mov
fwait
movsl
adc
sub
mov
adc
ficompl
bound
scas
inc
push
dec
imul
shl
cmpsl
out
sbb
ret
rcrl
cmp
jbe
jg
dec
fnsave
bnd
ja
mov
das
adc
gs
js
cmp
hlt
int
pop
dec
fstps
cmc
das
pop
lahf
hlt
pop
in
lahf
sub
pop
andb
mov
add
out
push
push
insl
loop
sar
lock
mov
fcompl
push
or
sub
cld
jl
cwtl
jns
lret
sbb
aas
movlps
inc
sub
add
icebp
mov
std
cld
jbe
cld
sub
and
stc
sub
nop
pop
dec
jo
stos
add
inc
dec
dec
add
xor
pop
or
jae
cli
xor
inc
xchg
dec
or
cmpsb
xchg
leave
cmp
or
push
ss
inc
dec
xchg
gs
inc
mov
xchg
add
dec
mov
pop
push
mov
adc
cmp
test
mov
sub
loop
and
mov
subb
scas
in
mov
ds
jno
fnsave
pop
and
pushfw
add
outsb
fstpt
test
jno
jecxz
add
cmp
cmp
pusha
sbb
shlb
es
nop
incb
push
mov
xlat
push
jb
or
dec
stc
pop
call
sbb
mov
xchg
lret
aam
test
add
and
dec
ficoms
mov
dec
cmp
cltd
jge
mov
aaa
jp
pop
scas
in
add
and
mov
inc
xor
lahf
ficomps
mov
mov
jns
and
jle
int3
jo
mov
nop
sahf
test
push
mov
mov
mov
std
insb
scas
cmp
and
cmpsl
subl
sub
aaa
add
adc
jecxz
call
in
incb
arpl
pop
test
pop
test
jne
sub
test
pop
adc
shll
out
add
inc
insb
ljmp
repz
mov
add
lea
in
jle
mov
xor
xchg
jl
loop
adc
push
popa
mov
outsl
aaa
cmp
add
mov
sbb
insl
sbb
or
bound
mov
pop
test
jns
loope
sbb
or
mov
cmpsw
lock
mov
xor
inc
or
repz
or
js
jmp
in
push
sub
gs
shrb
mov
and
jmp
idivl
repz
jns
add
and
pop
jmp
mov
mov
shrb
std
jne
inc
cld
insb
push
aad
sbb
xor
loop
jb
imul
push
cli
xchg
sub
out
sbb
into
add
call
call
dec
pushf
outsb
in
mov
add
or
and
xchg
frstor
in
sub
scas
dec
mov
arpl
into
push
ljmp
into
jle
pop
jg
push
int
cld
lea
push
or
sub
cmp
jno
scas
iret
mov
addr16
sarb
mov
cmpsb
test
and
xchg
sbb
push
inc
mov
pop
stc
add
in
jae
lods
in
jbe
aad
or
cmp
aaa
jnp
in
aad
mov
push
mov
ret
clc
lcall
xchg
out
loop
mov
aad
lods
jo
xchg
mov
add
stc
repz
or
pop
in
test
imul
clc
mov
jmp
push
fdivr
mov
push
mov
jle
lock
dec
test
mov
call
pop
cmp
aam
mov
xor
es
pop
testl
lods
xchg
ret
lds
xor
loopne
pop
popf
mov
xchg
lea
cmp
mov
add
pushf
and
mov
movsb
sahf
inc
mov
daa
mov
xchg
add
cwtl
and
mov
cli
mov
sub
mov
gs
jecxz
stos
xchg
inc
add
inc
movsb
and
cmp
flds
sbb
pop
js
xchg
leave
mov
leave
fcom
lcall
sbb
cmp
cmp
fcmovbe
iret
or
adc
sbb
das
dec
dec
pusha
jmp
cmp
dec
iret
cmp
das
mov
cmp
cmc
mov
jmp
fwait
push
xlat
jle
in
and
push
pop
xlat
into
adc
in
adc
mov
sarb
jns
mov
push
cmp
roll
sahf
jle
sbb
aas
pop
mov
lods
shlb
mov
mov
mov
push
jg
inc
jecxz
stos
jb
mov
aas
test
ret
dec
fcomip
xor
xchg
mov
push
and
pop
dec
fwait
add
test
xor
into
cs
in
loop
lcall
xchg
adc
and
ror
and
mov
xchg
sbb
pop
or
xor
outsl
mov
jle
or
mov
inc
add
in
jb
arpl
push
rclb
cmp
addr16
mov
sbb
cmpsb
push
lret
stos
push
mov
aad
and
xchg
mov
movsl
push
mov
mov
ret
repnz
push
scas
mov
daa
adc
mov
mov
adcb
sub
lock
pop
fdivrs
outsl
out
pop
push
mov
movsb
lock
mov
inc
or
push
push
fs
jp
pop
push
leave
stos
lea
js
out
xchg
popl
jno
es
mov
cmpsl
aas
test
ret
xchg
shl
les
sub
add
mov
xor
dec
mov
dec
adc
es
jb
inc
push
adc
stos
lcall
in
mov
ja
pop
fisttpll
xor
pop
add
dec
rorb
nop
shlb
dec
adc
or
stc
xchg
loope
pusha
addr16
scas
or
sub
pop
sbb
les
addr16
add
or
mov
inc
pop
and
dec
pop
sub
bound
jno
push
or
sbb
cmc
jnp
fdivs
inc
popf
pusha
ja
divb
repnz
aas
and
mov
push
sub
pop
gs
sahf
lock
mov
jne
loop
lret
stc
daa
sbb
hlt
fisttps
jns
sub
adc
movsl
push
push
ja
inc
ret
fs
xchg
aaa
ficoms
push
cmp
add
mov
clc
in
test
xlat
dec
xchg
jmp
imul
repz
lret
emms
jnp
fcoms
inc
aad
cli
push
movsb
in
aad
bound
insl
aam
jle
push
and
cmpsl
jp
test
jp
push
xor
shll
push
in
pop
fwait
lea
dec
or
aad
arpl
jmp
xorl
scas
xor
pop
pop
loop
sub
add
push
push
pusha
mov
and
arpl
sarl
pop
js
test
cmp
sub
aam
adc
sub
lock
sub
and
daa
dec
cmpl
scas
jae
cmp
enter
fstpl
push
sub
nop
sbb
jl
mov
mov
test
mov
mov
aam
fnstenv
mov
insl
pop
es
push
cli
mov
sub
dec
imul
dec
shll
push
jge
sub
dec
ss
ss
dec
pop
jb
xchg
mov
pop
mov
xchg
fstpl
mov
loopne
imull
rcl
push
and
push
in
sahf
jnp
jle
pop
jmp
out
pusha
pop
popa
ss
cmp
inc
or
xlat
lahf
insl
lahf
cwtl
cld
es
xchg
sbb
xchg
xorl
sbb
and
mov
mov
xlat
lret
mov
mov
cmp
out
ja
cmc
dec
fadd
jb
push
push
into
shrl
roll
cmpsl
jae
mov
daa
imul
mov
insb
mov
sub
decb
mov
stos
enter
mov
lcall
mov
inc
pop
sbb
aad
insb
loopne
sbbl
dec
xchg
dec
loope
das
jb
sub
xor
jns
cmp
loop
mov
or
pop
push
outsb
sbb
pop
cmp
movsl
fnsave
jbe
dec
and
ja
pop
xchg
fildl
cmp
cmp
jmp
dec
pop
imul
lret
cmc
aad
adc
stos
mov
xchg
and
sub
loopne
cmpb
mov
jne
xor
sub
jle
mov
bound
insl
lods
sbb
and
movsl
ljmp
push
xor
popf
not
fsub
rcrl
lds
jno
inc
shlb
in
xor
dec
ljmp
out
nop
idivb
data16
addb
and
fsubr
fsubs
ja
lea
add
push
pop
ja
sahf
or
inc
sub
lahf
inc
fucomi
aam
sub
jns
or
cwtl
outsb
mov
jp
clc
mov
fs
xor
loopne
sbb
push
loop
push
add
je
stc
xor
add
sbb
gs
inc
cmp
mov
cmp
jge
mov
shrb
jb
mov
pop
mov
bnd
mov
movsb
mov
outsb
mov
add
push
cmc
and
and
pusha
imul
dec
ds
sahf
cmpsb
aas
pushf
mov
pop
enter
lret
outsl
xchg
faddl
dec
out
mov
xchg
popl
pusha
loope
movsb
in
outsl
es
mov
pop
jb
js
lock
lock
subb
adc
arpl
out
rclb
mov
mov
mov
repz
cmp
orb
je
test
iret
in
dec
cmpsb
push
out
stos
in
sahf
notb
lods
scas
out
xchg
mov
dec
loope
cmovo
adc
sbb
call
fucomi
sub
mov
imul
jp
das
loope
loope
push
mov
in
iret
ss
lods
dec
mov
orb
enter
cmpsl
mov
adc
fidivs
cltd
iret
cmp
testl
fadd
fldt
cmp
mov
mov
add
pop
mov
mov
jp
push
mov
push
in
xor
xorl
adc
out
nop
jl
push
sub
mov
push
rcrb
or
data16
pop
cmp
dec
addb
mov
rcr
mov
das
xor
mov
dec
jns
sub
fs
dec
push
sbb
mov
xchg
pop
pop
push
add
and
arpl
and
decb
jnp
idivb
jecxz
fldt
movsl
arpl
js
int3
movsb
data16
or
and
adcb
incb
stos
push
cmp
ljmp
and
fdivs
xor
add
mov
test
mov
add
cmp
outsb
dec
inc
cmp
pop
les
inc
pop
push
lods
cli
clc
gs
aam
sub
jbe
aaa
ficoml
arpl
jne
and
cmp
mov
andl
adc
jecxz
dec
sbb
test
add
xchg
iret
jmp
je
push
cmovae
pop
imul
xchg
sbbb
jle
inc
scas
lcall
xlat
pop
xchg
rolb
dec
push
fs
cltd
jb
or
inc
jo
push
fcmove
fists
push
les
dec
add
sti
mov
call
iret
call
or
test
add
outsl
lock
mov
push
lcall
xchg
push
inc
cmpsl
ljmp
cmp
fs
mov
xchg
fiaddl
mov
mov
aam
and
sub
daa
movsl
inc
dec
pop
or
scas
jg
cld
push
sti
push
mov
add
or
std
add
sbb
out
sbb
cwtl
je
mov
cli
mov
shll
shl
icebp
imul
jno
movsb
xlat
int
pop
lret
pop
icebp
xor
lods
sbb
lds
pusha
dec
mov
push
cs
adc
int3
dec
orb
push
mov
adc
inc
dec
inc
gs
fistpl
or
mov
adc
cmp
inc
cltd
jns
cltd
jno
push
scas
inc
fwait
jg
data16
xor
xlat
push
inc
bound
mov
mov
js
rclb
daa
and
cmp
xchg
lea
movsb
push
dec
nop
popa
dec
xor
jae
mov
pop
ret
scas
xor
pop
movsb
or
and
xchg
repnz
pushf
dec
stc
pop
pop
jl
lods
dec
xor
fdiv
pop
xor
dec
shlb
inc
xchg
in
lock
xchg
push
aad
adc
sub
jne
test
jno
ds
repz
add
not
jo
xchg
sub
in
cmp
in
and
cmp
jbe
imul
lea
and
cltd
inc
in
dec
inc
ret
insl
cli
bound
fwait
std
je
movsb
fcompl
subb
les
add
lea
xchg
gs
mov
in
lock
dec
iret
mov
out
sbb
fisubs
dec
imull
ja
xor
xchg
lock
pop
and
cmp
insb
lret
dec
dec
xchg
movsl
fwait
and
or
fiadds
test
mov
xor
jecxz
aad
push
inc
adc
mov
jl
inc
fsubs
fldln2
cmc
or
mov
jp
sub
xor
xchg
fdivrl
inc
lahf
call
ret
jno
jmp
xchg
mov
mov
push
int
pop
add
dec
imul
sub
cltd
into
mov
jo
inc
js
in
pop
fpatan
adc
dec
cmp
adc
jnp
das
mov
xchg
cld
jnp
int3
pop
sbb
pushf
inc
jle
mov
cmp
xchg
ja
push
jge
loope
mov
mov
jg
jns
push
outsl
int
sbb
fs
add
shll
push
test
sbb
cmpsl
push
mov
int3
mov
add
mov
push
sbb
int
je
sbb
sub
adc
and
aas
adc
mov
pop
pop
out
rcpps
lahf
ret
out
mov
mov
xchg
scas
daa
fwait
repnz
and
xchg
sahf
and
xor
adc
fwait
movl
divl
sbb
sbb
pop
call
sub
jmp
nop
mov
mov
lahf
lcall
repz
leave
jb
orb
and
repz
imul
scas
mov
xchg
out
dec
mov
xor
dec
cld
push
frstor
incb
add
out
rclb
andl
inc
ret
dec
fwait
xor
push
sub
mov
push
call
and
subl
test
inc
filds
xchg
mov
lods
rcrl
cmp
or
out
movsl
dec
repz
cmpsb
cwtl
add
jb
test
or
push
mov
gs
clc
mov
mov
clc
cld
sbbb
pop
sub
in
and
sti
dec
gs
clc
jbe
mov
adc
dec
push
stc
jge
fcmovnu
into
mov
and
inc
test
outsl
in
scas
mov
jne
and
test
stos
lahf
push
or
cmpsb
imulb
jp
cmp
adcb
mov
pop
sahf
aad
xchg
cmpsl
mov
ss
mov
das
pop
cmp
out
mov
sahf
sti
lahf
and
orb
movsb
inc
out
xor
lret
jno
and
lea
push
outsb
inc
inc
mov
adc
cmp
adc
cmpsl
pop
movsb
and
push
les
or
dec
lcall
jns
mov
scas
push
pop
mov
insb
jmp
ja
lahf
shr
scas
in
xchg
cs
divl
imul
xchg
push
fcmovb
sub
inc
pop
scas
insb
les
pushf
sub
sbb
movsl
xchg
xchg
jo
imul
cmp
jl
paddsw
push
push
xchg
push
data16
leave
jo
mov
bound
mov
and
aad
repz
mov
inc
xchg
push
add
imul
push
bound
xchg
iret
sub
aad
ds
mov
packuswb
xchg
push
mov
pop
add
arpl
shlb
mov
bound
out
lods
pop
push
fwait
pusha
mov
fsubs
fsubs
mov
sub
lahf
pop
js
xchg
mov
sbb
jnp
scas
jb
sti
sbb
sub
add
ja
imul
pushf
and
jns
in
repnz
sub
push
mov
mov
flds
popf
gs
jge
loope
stos
mov
popa
mov
lea
lahf
mov
jnp
cmpsb
sahf
dec
jae
movl
test
and
lret
mov
mov
mov
inc
or
into
sub
mov
xor
incl
out
in
fimull
lds
jno
push
jmp
mov
icebp
jbe
cwtl
push
out
xor
insb
std
cmpsb
dec
mov
and
jns
fs
push
pop
and
pop
shl
sbb
aad
mov
imul
in
mov
into
es
ret
cmp
sbb
push
mov
dec
ds
push
dec
and
jo
or
mov
push
xlat
xlat
aad
test
mov
jle
push
sub
mov
push
fsts
xor
push
sbb
std
outsl
sarl
sub
adc
mov
mov
dec
push
int3
je
dec
jp
xor
mov
test
jmp
sbb
or
mul
cmp
test
sbb
imul
mov
aad
pop
jecxz
jg
fwait
shlb
and
xor
std
std
dec
or
push
cwtl
fwait
sahf
fdiv
aad
cli
pop
stos
jmp
or
sbb
pop
lcall
inc
xchg
jp
idiv
aam
cmp
xor
imul
push
jb
adcb
mov
mov
xchg
cld
inc
pop
mov
ficoms
add
in
add
pop
shll
mov
loop
insb
fwait
sbb
es
jle
imul
ret
adc
cmpsl
sbb
scas
adc
mov
ss
addr16
ret
iret
cmpsb
pop
cld
push
xchg
mov
mov
and
adc
add
mov
push
jne
cmpsw
dec
call
leave
scas
jo
dec
sbb
das
les
fstp
jb
and
mov
sub
loop,pn
gs
outsl
adc
js
lds
xchg
xchg
rolb
cmp
mov
add
mov
xchg
pop
or
inc
leave
sub
xchg
push
je
movsb
sbb
mov
xchg
icebp
mov
xchg
mov
aaa
inc
and
dec
mov
repz
rorl
aas
scas
addr16
jmp
mov
inc
or
mov
loop
aas
sbb
sbb
or
xchg
add
cmpl
ja
les
mov
or
ror
mov
mov
inc
sahf
adc
ss
xlat
call
in
sbb
aaa
fs
movsb
xchg
or
mov
pushf
loopne
cld
dec
mov
test
sub
jmp
or
push
dec
mov
inc
popl
xchg
cmp
adc
scas
jl
nop
movsl
xchg
lock
loopne
in
test
insl
test
popf
jecxz
mov
jp
xchg
out
xchg
test
loopne
shl
inc
popf
loope
call
loope
xchg
in
leave
dec
jne
fs
fmul
mov
shlb
repnz
or
dec
xor
enter
repnz
mov
cmp
cmp
das
jbe
cmp
dec
movsl
pop
or
inc
jp
fisubl
cmp
int
jo
xchg
mov
mov
sarb
decb
dec
add
stos
inc
cmp
mov
cmp
les
andb
imul
push
and
xchg
add
add
insb
call
nop
sub
dec
pop
stos
scas
pusha
jb
lret
sbb
add
jne
je
sub
inc
mov
add
lahf
jb
fcmovnu
roll
pop
pop
inc
fs
xchg
mov
push
sub
testb
xor
lods
sub
hlt
dec
add
out
pop
cmp
push
mov
imul
insl
imul
int3
and
int
lods
repz
dec
sbb
lds
push
cli
or
mov
mov
sub
sbb
ja
into
or
movsb
ds
jle
pop
les
das
addb
jge
lcall
pushf
test
shrl
aas
call
negb
jns
or
insl
popf
mov
mov
mov
sub
out
mov
push
andb
das
xchg
scas
test
lods
nop
jns
push
or
popl
xchg
mov
push
shll
cld
icebp
dec
ss
js
push
fnstcw
mov
mov
movsb
lahf
jmp
pushf
push
cs
popa
push
or
or
and
iret
jl
insb
adc
mov
push
xchg
fsubs
pushf
stc
pusha
rol
loop
popf
cli
testl
push
mov
push
cmpsb
push
aad
jb
ss
test
loopne
xlat
scas
pop
ret
insl
stos
add
pop
mov
and
aaa
pop
jecxz
mov
xor
jb
xchg
or
call
mov
jl
roll
mov
out
test
ljmp
pop
and
das
mov
mov
les
mov
fnstsw
ss
ja
in
sbb
imul
enter
jb
pop
repz
popf
fisttps
call
aas
rcrb
sbb
test
inc
and
pop
jo
scas
add
mov
push
mov
lcall
cmp
pop
test
xchg
cmp
mov
pop
push
add
mov
add
imulb
push
leave
mov
jno
lock
push
jns
je
pop
add
inc
pop
xor
cmp
ret
sbb
push
rcll
lea
enter
pop
inc
cld
mov
pushf
sub
sti
ja
inc
dec
in
push
inc
adc
xorb
in
popa
cmp
mov
pop
stos
inc
std
mov
pop
std
lahf
xchg
cltd
out
stos
dec
xorb
adc
xorl
xor
mov
mov
cli
cmp
adc
popa
xchg
pop
dec
fwait
jae
pop
sti
in
push
mov
popf
xchg
xchg
jb
and
lea
mov
bnd
orb
push
punpckldq
faddl
xlat
cmpsl
and
mov
and
pusha
jge
dec
scas
sub
push
out
fstl
outsb
jecxz
add
jecxz
sub
lcall
push
sbb
fildl
push
stos
jno
dec
pop
jnp
stos
dec
daa
mov
cmp
ret
sti
push
xchg
lds
mov
and
cmpsb
test
or
lret
adc
fwait
mov
fmulp
jns
add
clc
inc
adc
dec
add
adc
xchg
icebp
testl
sahf
pop
out
push
fcoms
sub
sbb
fdivr
xchg
jl
adc
out
cld
stos
or
les
xchg
lea
mov
mov
sahf
frstor
lods
sub
dec
subl
add
out
xchg
push
or
stos
les
and
push
mov
jge
stos
pop
and
xchg
cvtpi2ps
es
lcall
dec
xor
daa
xor
mov
addr16
cmc
call
repz
jmp
mov
xchg
mov
push
pop
rcl
adc
mov
and
lcall
push
lods
mov
cs
stc
mov
inc
js
push
add
sub
int
dec
pop
rcrl
mov
adc
or
mov
sbb
clc
test
lahf
adc
jg
repnz
rol
pushf
repz
dec
ljmp
mov
lds
fxch
mov
xor
cmp
sub
adc
sbb
fmul
xchg
xor
push
push
ss
mov
fnstenvs
inc
enter
jge
and
leave
mov
loopne
lahf
mov
jne
imul
enter
xor
and
dec
mov
rol
pop
cmp
xor
icebp
mov
outsb
stos
fwait
sub
sub
lods
push
loope
fcomi
xchg
and
jns
aam
mov
outsl
or
xchg
popf
jl
adcl
rcll
ret
stos
lret
out
pop
gs
jnp
call
sti
iret
ret
ret
je
jmp
icebp
aam
dec
jo
add
or
dec
mov
push
jp
sbb
sbb
push
push
fwait
xorl
cmpsb
ret
or
or
push
add
arpl
movl
xchg
stc
cmp
pextrw
xchg
loope
mov
out
mov
pushf
add
add
mov
jno
daa
imul
pop
inc
insb
outsb
cmp
sbb
js
sub
jg
add
outsb
lret
mov
movsb
icebp
cmp
jl
sbb
pushf
and
and
es
loopne
or
add
in
push
out
jnp
cwtl
mov
add
ret
ljmp
push
clc
ljmp
push
lea
mov
dec
push
sub
pop
jmp
mov
mov
daa
mov
cmc
lcall
mov
inc
or
cmp
test
jne
push
adc
add
incl
xor
int
cmp
cmc
mov
and
mov
lock
inc
jmp
scas
mov
xchg
sbb
sub
push
movsb
sub
aad
icebp
in
and
push
push
add
jecxz
pop
movsl
push
fistps
jne
mov
pop
jo
mov
xor
pop
enter
mov
adc
and
and
imul
push
in
inc
xchg
jge
sar
movsl
scas
into
fstpt
xchg
push
stc
outsb
inc
jo
push
in
and
jge
aaa
into
push
xchg
outsl
icebp
mov
stos
cmp
or
and
rcrb
jae
arpl
shlb
mov
push
jmp
repz
test
rolb
xor
adc
xor
dec
xor
add
push
mov
clc
imul
mov
sahf
push
add
ja
and
jp
shrl
in
pop
iret
js
shr
arpl
xchg
pop
xchg
lahf
or
popw
push
fs
outsb
js
test
add
hlt
test
hlt
stc
mov
inc
call
xchg
movl
mov
sbb
sub
sub
imul
sub
sub
xchg
ss
orb
cmp
or
pop
jns
sbb
xchg
lret
enter
push
add
mov
cmpsb
aaa
and
pop
lret
xor
inc
hlt
in
mov
xlat
inc
lods
lret
inc
add
nop
in
bound
adc
popf
sbb
adc
out
test
sbb
notb
mov
popf
or
mov
pop
mov
shl
bound
hlt
jne
xchg
icebp
leave
fsubrl
into
pop
push
ret
jg
and
out
pop
jo
fildl
and
xlat
jmp
or
sbb
jp
sub
popf
cmp
push
push
in
test
test
add
xorl
or
push
lret
clc
xchg
add
repz
add
ss
stos
sbb
hlt
pop
jns
lcall
cmp
lock
roll
fdivr
test
jo
xchg
mov
out
out
bound
addr16
inc
test
push
push
pop
dec
push
scas
pop
ror
call
data16
sar
pushf
imul
je
inc
mov
movsl
push
cmp
popa
adc
aaa
mov
add
cmp
cltd
movsl
iret
sbb
sub
sub
cltd
jno
xchg
pop
jae
xchg
sbb
sub
mov
mov
add
xor
imul
lret
jmp
divb
xchg
jnp
pushf
mov
dec
inc
mov
mov
in
insb
push
and
sub
lcall
arpl
jg
aaa
dec
int
cmc
imul
jmp
jmp
mov
mov
sbbl
int
sbb
inc
mov
push
jle
xor
ds
mov
xor
xor
mov
rcll
pop
sti
jl
das
out
scas
dec
adc
loopne
jbe
cltd
lods
sbb
pop
shll
inc
bound
xor
ljmp
mov
cmp
xchg
mov
test
mov
in
mov
push
ret
push
push
mov
lods
lcall
pop
outsb
dec
cmc
testl
movsl
dec
inc
fs
out
cmp
xchg
mov
mov
lret
outsb
or
aas
mov
cmp
setns
sub
das
call
hlt
mov
jno,pn
mov
xlat
lret
sti
sbb
ret
lods
rcl
rorb
sub
lahf
xchg
das
cmp
mov
jns
or
roll
in
hlt
shl
xchg
es
push
les
fsub
in
movsb
push
filds
mov
mov
ss
add
lock
les
js
or
pop
scas
gs
cli
movsl
dec
or
or
fwait
icebp
mov
mov
test
mov
int
pop
cs
mov
jecxz
lock
adc
jmp
pop
std
and
mov
mov
lret
or
ss
out
inc
xor
mov
xor
lods
push
and
movsl
fdivrp
xor
lahf
sbb
mov
cmp
ss
adc
inc
lds
ja
mov
push
or
repz
cmpsl
testb
sub
sub
shll
in
nop
int3
movsl
orb
jge
int
push
sub
pop
aad
dec
pop
or
push
mov
sbbl
scas
jge
add
in
sbb
mov
lds
sub
sahf
push
mov
insb
xor
cmp
fiadds
sub
jb
xor
jle,pt
sti
cmp
je
sbb
ja
dec
arpl
int
idivb
push
clc
hlt
sub
push
push
repz
imul
mov
dec
add
repnz
sbb
dec
imul
loopne
mov
cmp
outsb
popf
jae
inc
hlt
dec
pop
data16
xor
sub
inc
mov
add
and
mov
xchg
inc
or
gs
insb
jmp
pop
xchg
dec
add
or
popa
dec
iret
mov
stc
jno
xor
aam
mov
sbb
pusha
mov
lahf
cwtl
mov
or
cmp
aam
mov
test
std
js
ja
xor
inc
jbe
mov
inc
jp
lcall
movsl
js
jg
repnz
pop
cmp
push
jge
fs
cmpsl
in
inc
sub
cs
aas
in
mov
push
mov
jl
mov
jns
in
add
pop
clc
push
fadd
add
mov
sahf
mov
jno
push
push
push
andl
pop
ds
mov
stos
jp
ret
and
jmp
adc
arpl
or
ss
pop
push
push
push
icebp
mov
adcb
ret
insl
sahf
xchg
jb
rclb
jmp
push
pop
mov
xchg
cmp
pop
leave
dec
jp
dec
repnz
mov
aaa
push
das
in
cmpl
movsb
push
add
enter
adcb
enter
mov
jo
cmp
cmc
jae
mov
dec
sbb
insb
jns
das
push
dec
sbb
cmovo
xchg
sub
aas
xchg
dec
mov
xor
pop
mov
xor
mov
mov
inc
loope
test
cmp
into
inc
dec
sahf
push
mov
enter
rcrl
aam
xchg
or
mov
jae
add
push
dec
push
pop
xor
fstpt
popf
mov
push
xor
repnz
jl
cmp
cmpsb
inc
lret
cmpsl
scas
rcrl
outsl
sarl
cmp
hlt
push
push
jmp
out
push
arpl
dec
std
movsl
mov
pop
cwtl
sub
and
mov
mov
popf
rcrl
sub
cli
fists
pop
push
jmp
addr16
popf
pop
loop
inc
pop
inc
xor
filds
addl
cmp
int3
pop
in
jecxz
movsb
das
xchg
loope
inc
shr
lret
push
decb
push
cmp
out
adc
repnz
sbb
or
jge
ss
pusha
int3
push
dec
out
rclb
daa
int
call
cmp
inc
jmp
or
loope
fisubl
flds
test
dec
xlat
fistpl
mov
iret
and
or
in
test
add
xchg
test
or
pop
adc
test
mov
adc
adc
andps
and
pop
in
lahf
add
ljmp
lcall
cs
call
pop
xchg
inc
inc
push
adc
popa
mov
cwtl
push
movsb
int3
dec
xchg
pusha
fstpt
pushf
test
push
fildll
or
loopne
das
mov
aas
pop
bound
pushf
mov
xchg
sub
shll
into
pop
pop
and
fcoml
sub
aad
dec
lahf
jb
mov
xchg
pushf
inc
inc
jle
pop
push
lods
mov
adc
push
cmp
mov
das
cmpsl
pop
roll
mov
enter
aaa
cmc
cmp
test
push
mov
leave
movl
fdivr
or
test
loopne
inc
iret
mov
dec
xor
repnz
test
pop
cmp
jp
mov
int
pushf
sub
ds
into
jns
insl
into
gs
add
inc
sbb
add
iret
pop
sub
lock
jecxz
push
mov
pop
sub
pop
pop
xor
jecxz
jns
cwtl
repnz
call
pop
dec
inc
jl
mov
and
xor
cwtl
xor
and
xchg
ljmp
cmp
sbb
pushf
loop
pop
arpl
cmc
mov
mov
sbb
int
loope
shlb
mov
das
xchg
sbb
stos
test
xchg
es
sahf
mov
int
data16
and
xor
dec
and
lock
jp
cld
pusha
or
jae
lods
inc
sbb
dec
rolb
bnd
cmpsl
xor
ds
push
mov
idivb
push
inc
jl
in
xor
xor
inc
pop
xchg
cltd
add
jo
push
sub
cwtl
mov
add
push
fidivrl
imul
insl
in
lods
cwtl
mov
xor
mov
std
xchg
lea
lret
xchg
lcall
int
loop
cmp
inc
in
jg
scas
push
fwait
push
iret
aas
pop
add
adc
mov
jl
add
jo
mov
pop
repz
pop
sarl
mov
jle
or
icebp
sub
aaa
push
add
push
mov
dec
cmc
mov
lds
inc
xchg
ja
lock
mov
idivb
lods
adc
inc
push
xor
or
addr16
out
pushf
mov
test
ss
jo
test
scas
mov
ljmp
dec
negl
stc
mov
mov
stos
loope
insb
inc
inc
scas
movsb
repnz
inc
add
xor
lret
inc
cmp
fldt
test
stos
mov
xor
cmpsb
lds
and
rolb
and
cmc
imul
cli
sbb
cmp
or
and
mov
jmp
in
bound
fadd
repnz
jns
add
pushf
push
adc
push
and
sbb
jge
push
setp
dec
push
cs
aas
mov
loope
push
das
xor
test
adc
sub
xor
imul
mov
mov
aad
pop
negl
mov
movb
aas
out
dec
leave
mov
adc
xchg
insb
and
sbb
fisttpll
xchg
gs
clc
lea
sub
aam
cmp
mov
pusha
ret
mov
imul
dec
jo
or
lock
stos
stos
dec
scas
lea
movsb
insl
in
inc
loope
ds
mov
and
jmp
shll
in
cmp
mov
sub
inc
test
mov
xor
addr16
xorb
inc
sbbl
decl
bound
dec
sbb
or
popa
adc
aam
xchg
enter
dec
fstpl
rcrb
imul
add
sbb
mov
mov
popa
dec
jae
cmp
mov
xchg
lret
in
dec
dec
xor
negb
fcompl
jb
xchg
adcl
mov
std
popa
mov
dec
leave
shr
sub
inc
aaa
lcall
add
push
pop
or
pop
xor
std
pop
sub
cmpsl
inc
out
pop
out
mov
dec
mov
cmp
push
call
mov
movsb
cmpsl
jns
xor
orb
sub
dec
arpl
and
ds
xor
add
pop
cmp
jne
adcb
rcr
xlat
cli
rcr
or
stos
jg
dec
insb
lcall
dec
lea
mov
or
not
pop
pop
pushf
mov
jecxz
jge
pop
repnz
adc
stc
test
or
mov
dec
sahf
mov
in
dec
fs
and
push
es
cmp
aaa
pop
orl
and
xor
outsl
or
nop
jle
ret
in
cmp
data16
mov
mov
test
hlt
push
in
insl
xchg
rol
test
std
mov
leave
add
call
jb
push
je
sti
mov
adc
cmp
sbb
int3
lcall
cmp
xor
xor
xchg
sti
dec
push
mov
mov
mov
flds
lcall
dec
sbb
out
in
mov
ret
cmpsb
jle
inc
adc
sahf
mov
lret
das
daa
lods
cmp
jne
sbb
rorb
das
jp
rcll
orl
inc
add
mov
in
adc
xchg
jnp
xor
scas
xor
addb
add
orl
adc
mov
cs
ds
dec
xor
jp
call
jecxz
xchg
inc
inc
mov
fdivrl
lret
or
sbb
mov
popf
adc
jns
gs
repnz
arpl
mov
mov
adc
mov
arpl
jl
ss
outsl
cli
cld
pop
movntq
push
sub
mov
nop
iret
xchg
cmc
add
mov
mov
outsl
into
cmp
hlt
add
inc
adc
imul
mov
fwait
push
sub
push
xchg
jge
cmp
enter
adc
enter
call
leave
lock
loop
pop
jno
xchg
sub
jl
pop
insl
jecxz
outsb
adcl
adc
lcall
lret
stos
shlb
movsb
int3
dec
lcall
mov
dec
or
dec
repz
int
xchg
mov
mov
or
insl
pusha
test
aam
mov
add
and
xchg
daa
push
aas
rcll
lret
xor
push
push
mov
pusha
jle
xchg
and
lock
lahf
or
lds
fwait
jb
clc
cmc
push
sbb
adc
sbb
jmp
add
stos
stc
mov
lea
in
notb
in
inc
and
leave
inc
xchg
add
int
or
mov
enter
aas
inc
daa
repz
push
sbb
cmpb
imul
repz
aad
and
ret
sub
fmuls
lock
and
mov
rolb
insl
cld
rorb
mov
mov
mov
jle
and
int3
les
mov
pop
mov
add
xchg
test
add
mov
stos
cmp
clc
sbb
cwtl
fcomps
mov
scas
mov
pop
imul
inc
lods
xchg
xrelease
scas
roll
jbe
inc
mov
lcall
pop
xchg
xor
iret
stos
pop
movswl
xchg
inc
cmp
pop
push
dec
and
inc
sbb
inc
dec
push
push
ret
push
adc
push
mov
bound
sub
mov
pop
push
xchg
push
cmc
pop
push
sub
adc
cltd
lahf
movsb
cmp
in
and
cltd
jl
add
fnstcw
shlb
jle
daa
outsl
dec
dec
hlt
jle
or
addr16
adc
mov
xchg
mov
adc
adc
neg
pop
sbb
repz
cmp
pop
mov
pop
xor
jbe
jmp
cmp
and
inc
call
xchg
nop
adc
jg
mov
mov
sub
mov
movsl
sbb
adc
push
jle
movsb
inc
incb
mov
jmp
aaa
sti
jecxz
jbe
in
dec
lret
aam
cmpsl
loopne
push
rcrb
or
xchg
cli
test
je
repnz
lods
pop
loopne
fnstenv
dec
cmp
push
push
sub
jmp
cmp
sub
les
lahf
inc
and
pushf
in
mov
inc
push
and
shlb
lahf
data16
dec
cmp
xchg
add
push
mov
sub
xchg
faddl
dec
mov
sbb
fwait
add
bound
nop
jmp
icebp
fsubrl
pop
push
in
test
notb
xchg
fdivl
mov
out
cmp
sahf
sub
imul
jo
pop
jo
in
in
stos
sub
dec
cmc
fcomip
lods
mov
loope
shl
mov
pop
out
adc
sbb
test
sbb
fbstp
cs
lea
movsb
enter
inc
push
aad
cltd
sub
aam
daa
out
cld
out
xchg
mul
mov
jmp
jns
fwait
cmp
add
mov
cmp
cs
lret
mov
call
fwait
gs
jmp
out
xchg
cmpsb
notb
testb
cmp
popa
lock
sbb
dec
mov
xor
mov
mov
sbb
test
sbb
call
adcb
mov
or
and
mov
out
gs
or
mov
je
mov
mov
jle
in
jl
mov
pusha
xchg
adc
enter
fldcw
lcall
dec
push
out
sti
cli
add
leave
lds
inc
mov
inc
pop
xor
mov
fidivrs
sar
jae
jnp
ja
add
adc
dec
and
sub
lea
push
jle
popa
jge
stc
push
pusha
mov
xor
cld
in
pop
push
addr16
mov
and
push
rcll
out
push
ret
add
adcl
stc
xchg
out
and
sub
and
negb
mov
clc
ror
jbe
add
in
lea
cmp
xchg
mov
cmp
std
xor
cmp
popa
adc
sbb
add
xor
adcl
ss
inc
stos
cltd
lods
mov
ror
and
jo
sbb
rol
hlt
scas
pusha
je
int3
push
push
stos
jg
ret
fidivrl
cmp
mov
fnstcw
lea
add
inc
mov
dec
cmp
sub
add
add
lock
icebp
mov
mov
dec
daa
mov
les
jb
mov
arpl
mov
andl
negb
adc
aaa
pop
aad
les
pop
add
divb
mov
shlb
insb
pushf
lods
lcall
and
cmp
in
stos
ret
add
or
pop
jg
pop
es
test
xor
sbb
leave
cmp
push
or
pop
add
jmp
scas
imul
call
xchg
push
lods
pop
inc
cmp
adc
imul
sub
dec
and
sbbb
aaa
icebp
mov
jb
pop
sbb
push
cmp
pusha
lcall
aam
pushf
stos
scas
and
jg
mov
test
cmpb
add
jae
fs
int
rcll
loop
cmpsl
dec
sub
sub
add
ret
jns
dec
ss
dec
les
or
iret
enter
pop
aam
pop
add
xchg
jne
sbb
insb
mov
or
cltd
mov
sbb
pop
xchg
jb
or
xchg
stos
ltr
inc
dec
cwtl
cltd
ss
pop
and
in
enter
pop
and
mov
xchg
pop
and
rcll
sbb
sub
iret
mov
scas
cmc
xchg
insb
xchg
mov
clc
sub
cli
mov
hlt
xchg
mov
lahf
xchg
test
cmp
adc
std
xchg
dec
jne
push
outsb
jno
punpckhdq
push
jo
sti
and
imull
in
xor
mov
out
mov
sti
setge
cld
xchg
sub
or
mov
push
out
xchg
xor
aad
mov
loop
pop
jl
pusha
mov
int3
mov
loopne
xchg
mov
ret
mov
inc
dec
shll
and
xchg
test
sbb
and
sar
inc
outsb
subl
jnp
shlb
sub
scas
fstpl
add
jecxz
fsts
test
jo
insl
mov
jnp
mov
shl
mov
scas
cmp
outsb
out
fwait
mov
xchg
mov
icebp
sbb
xchg
in
rclb
mov
adc
xchg
lock
fwait
test
insb
hlt
or
jno
orl
out
mov
out
sub
in
fiaddl
repz
pop
in
pop
pushf
push
lds
arpl
lcall
rcll
pop
adc
sbb
sub
adc
or
jbe
stos
fwait
dec
mov
mov
inc
adc
in
sti
fucomp
pop
insb
mov
adc
sbb
sbb
cmp
sbb
test
jne
and
ror
sub
sub
leave
jl
mov
xchg
fsub
push
jns
jo
sti
subl
add
pop
mov
movsl
pop
jmp
loope
jmp
jno
mov
or
leave
and
nop
pop
jnp
push
mov
xor
mov
jne
fmul
jns
xor
scas
inc
loope
out
mov
push
test
jb
xchg
jg
loop
xchg
lock
mov
call
adc
xchg
add
cmc
mov
sbb
push
xorb
fdivrp
and
sub
pop
pop
add
push
cld
pop
mov
mov
mov
sbb
push
loop
cmp
test
add
stos
pushf
rolb
out
mov
cs
xor
adc
mov
mov
or
xlat
addb
mov
add
sti
loopne
inc
test
test
outsl
pop
mov
jg
or
test
add
sbb
cmp
stos
nop
pop
fists
pop
add
stos
mov
cwtl
shrl
sub
fdivl
fwait
dec
lahf
xchg
cmc
jae
xchg
xor
xchg
test
push
dec
or
cmp
inc
in
bound
adc
jp
xchg
mov
dec
sub
enter
cmp
dec
xchg
sub
jnp
popa
sbb
sub
out
or
and
stc
lret
jg
movsb
sbb
jne
je
cld
cmp
sahf
int
mov
pop
in
popf
cli
sub
xor
or
stos
pop
pop
orb
cmp
pop
sbb
mov
int
cld
je
out
mov
rolb
mov
jge
movsb
fs
and
sahf
xchg
mov
mov
fnsave
test
sti
jae
mov
xor
add
inc
jmp
shll
dec
gs
call
call
clc
les
mov
push
call
imulb
mov
xor
push
mov
fcompl
icebp
out
in
cmpsb
sahf
mov
js
push
movsl
addr16
add
mov
xor
mov
cmp
movsb
mov
xchg
clc
pushw
sahf
dec
xor
outsb
and
aam
cmp
loope
jmp
dec
mov
mov
stos
pusha
dec
mov
dec
stc
cmpsl
into
ja
das
xor
jg
in
adc
sahf
xor
mov
mov
leave
aad
mov
call
cmpsb
inc
mov
push
xchg
cmp
sub
fmuls
push
mov
push
cmc
sub
or
bound
cld
outsl
push
push
add
in
and
stos
out
sbb
jg
cmp
fsubp
mov
sbb
xor
jl
mov
es
popf
xor
cltd
dec
cmc
leave
xchg
das
mov
loopne
jno
in
fistl
sti
cmp
ud2
aad
add
je
jbe
lods
sahf
sub
adc
push
pop
jge
lret
adc
ja
sti
jle
push
jno
push
test
and
addr16
lcall
divl
inc
outsl
or
lret
push
and
addb
insl
sub
stos
leave
push
insb
aam
test
xchg
jecxz
cmc
jb
popf
add
pop
push
insl
imul
xorl
dec
mov
lds
les
mov
fnstcw
and
mov
sbb
push
aam
sub
inc
lret
loop
dec
sbb
push
xchg
outsb
add
inc
jmp
cmc
pop
out
mov
pop
mov
mov
xchg
cmp
add
fwait
inc
lahf
addr16
pop
int3
lods
push
pop
and
adc
es
lahf
mov
sbb
scas
testl
test
mov
je
mov
sub
les
test
cmp
or
pop
adc
add
loope
and
push
jge
sub
hlt
inc
repz
inc
lods
ss
movsl
popa
push
sub
outsl
sbb
pop
mov
mov
pop
or
inc
jge
aam
movsb
ja
aad
lahf
lods
lds
jl
pop
lahf
lds
mov
in
sub
mov
push
pop
and
sub
mov
jecxz
sub
pusha
out
jecxz
mov
das
push
dec
cmpsb
sub
test
add
mov
jno
insb
sub
jl
xchg
jno
popf
push
mov
addr16
pop
fldl
cmpsb
fwait
dec
andl
mov
pop
add
pop
gs
mov
iret
pop
arpl
dec
and
push
mov
mov
imul
nop
in
mov
pop
dec
scas
icebp
icebp
adc
mov
xor
pop
cmp
inc
pusha
popf
mov
sub
sbb
orl
mov
bound
mov
mov
mov
add
outsl
add
and
pop
fistps
inc
lods
push
mov
mov
jns
xchg
int3
mov
mov
adc
or
mov
add
jns
cltd
add
in
mov
lahf
pushf
adc
sbb
and
jecxz
lret
mov
add
call
or
rorl
adc
pop
ret
cltd
jle
jmp
mov
outsb
mov
jno
imul
fcmovnu
daa
adc
lods
mov
out
or
jle
repnz
sub
xchg
sbb
scas
pop
arpl
es
repnz
rcrl
insb
lret
cmp
mov
fisubs
jl
adc
cmc
es
lods
or
and
ljmp
imul
pop
add
dec
and
and
sarb
jl
out
mov
lea
push
into
lret
out
dec
jg
cmovle
test
push
jne
dec
xor
mov
xlat
xorl
xchg
push
jg
or
push
cmp
js
mov
add
loopne
mov
jle
dec
push
ja
mov
into
and
mov
add
imul
mov
cmp
and
cmc
push
outsb
sbb
pop
xchg
mov
push
xchg
jp
clc
mov
dec
dec
je
imul
int
jae
sahf
mov
ret
aaa
sbb
jge
pop
rcr
inc
jp
enterw
out
mov
xor
mov
in
notl
cwtd
test
rcrb
pop
add
xchg
fstpt
ret
pop
into
dec
into
mov
out
pop
jae
inc
repz
add
xchg
idivl
cmp
stos
and
jg,pn
pop
clc
arpl
rol
out
mov
pushf
mov
or
xchg
test
cmp
test
cmp
and
rorb
xor
push
negl
aas
hlt
in
lahf
push
mov
lods
xchg
xor
mov
std
xorl
inc
enter
lds
das
lret
imull
jecxz
mov
cmp
sbb
pop
cmc
outsl
cmpsb
sbb
cmpsl
inc
sub
aad
dec
int
test
call
out
icebp
or
icebp
jecxz
and
sahf
xor
push
pushf
jle
pop
xchg
or
lahf
lock
stos
jnp
lock
xor
inc
leave
out
stos
inc
push
push
in
add
lcall
mov
xor
sbb
push
xor
push
js
jno
adc
mov
jns
pop
and
sub
sbb
dec
push
push
sbb
fwait
and
cmpsb
xor
nop
bound
pop
es
int
cs
jnp
shlb
iret
xor
out
pop
loop
push
push
insl
mov
xor
imul
pushf
negb
fcomip
xchg
sbb
jb
lret
mov
jmp
pop
jecxz
cmp
test
xchg
popf
inc
popf
insb
loopne
push
imul
cmc
adc
movsl
xchg
filds
fcmovne
imul
lahf
mov
xchg
out
mov
xchg
vmread
arpl
sub
adc
loope
lds
jge
test
out
lods
test
push
dec
jne
add
dec
aam
push
cwtl
stos
mov
stos
dec
cld
sarl
add
push
ret
mov
mov
fists
jmp
mov
inc
movsb
arpl
or
das
jae
mov
subl
loope
mov
sub
xchg
cmp
sub
xchg
test
sbb
mov
mov
mov
push
xchg
repnz
pop
xor
and
pop
or
outsl
xchg
pop
mov
cli
jnp
mov
pusha
incb
or
jmp
pop
popf
pop
aam
loope
lcall
in
jg
mov
add
cwtl
adcb
jo
pop
jecxz
xchg
dec
mov
sahf
aad
leave
jno
add
xchg
mov
cltd
outsl
xchg
dec
xchg
dec
ret
mov
fnsave
xlat
sbb
sub
aaa
mov
imul
hlt
movsl
sbb
cwtl
imul
mov
and
push
jg
mov
enter
adc
xchg
das
jp
mov
add
push
addr16
add
pop
dec
in
rorb
inc
and
sbb
mov
cwtl
outsb
popf
mov
push
dec
popf
mov
mov
lret
push
stc
stos
testb
mov
or
es
mov
xchg
add
bound
int
pop
andl
add
int
pop
jnp
mov
mov
out
in
inc
pop
je
cld
jnp
xor
cld
pop
jo
not
cmp
mov
gs
into
xchg
pop
or
idivb
pop
je
jg
mov
inc
call
or
dec
dec
xchg
psllw
pop
cwtl
xor
add
jl
out
lret
in
fstpl
cmpsl
pusha
les
shlb
pop
sbb
ljmp
cmp
andl
lods
fwait
push
leave
stos
pop
popa
pop
xlat
js
mov
in
inc
xor
xor
das
adc
push
push
jg
loopne
lahf
sub
xor
xor
sub
push
jmp
imul
add
adc
lea
push
stos
add
push
jecxz
and
cs
repz
mov
dec
fmull
incb
loop
dec
mov
gs
sbb
sbbl
arpl
pop
add
pushf
and
imulb
pop
jo
aas
jb
xchg
es
das
rcrb
mov
dec
aaa
aas
inc
stos
das
pop
aaa
sbb
ja
into
jae
jmp
fdiv
adc
xchg
ss
loop
lret
das
nop
ljmp
inc
mov
out
push
jecxz
push
pop
addr16
scas
mov
sahf
arpl
sub
mov
ja
mov
or
inc
arpl
sbb
imul
stos
lods
pop
or
in
mov
std
jnp
xchg
movsb
imul
fbstp
lods
ds
push
or
sbb
jbe
out
sets
adc
cmpsb
pop
pop
fucomip
and
js
icebp
je
rorb
mov
popf
mov
test
push
push
icebp
push
xchg
dec
out
jo
jno
adc
xor
iret
sbb
add
fwait
dec
leave
pushf
push
test
es
mov
mov
imull
je
push
or
cli
mov
pop
test
mov
mov
scas
adc
mov
inc
xchg
aad
adc
scas
shlb
sub
push
bnd
cmp
pop
pop
xchg
fadds
test
ret
subb
xchg
or
mov
cmp
inc
push
je
pop
lods
fmul
jns
lods
insl
jmp
shrl
movsb
sar
daa
sarb
in
mov
push
xor
aam
ret
nop
loope
cld
sahf
iret
lcall
xchg
scas
or
subl
pop
pop
adc
fcomp
out
xor
mov
fcoms
push
mov
push
mov
push
mov
sbb
fsubr
sbb
pop
pop
cmc
outsl
fisubrs
loop
in
xchg
mov
mov
fs
cmp
mov
and
out
test
xchg
imul
adc
push
dec
test
adc
je
jmp
in
pop
inc
jo
mov
out
pop
sbb
jle
repz
fadd
fcoms
pop
and
push
mov
pop
jbe
xchg
repz
subl
push
jno
loopne
inc
lcall
and
xchg
bnd
loopne
mov
cmp
sti
lods
aas
pop
cmp
pop
inc
mov
or
sbbl
push
daa
adc
jmp
jmp
dec
cmpsl
adc
sbbb
enter
mov
pop
or
cld
xchg
jae
ja
jmp
ss
xor
imul
bound
scas
scas
jge
jmp
cmp
push
xor
ss
icebp
addr16
inc
jp
clc
push
out
aas
dec
gs
aaa
and
xor
adc
jbe
sarb
ja
or
add
push
hlt
mov
aad
xchg
pop
aad
sbb
push
hlt
and
xchg
cmp
xchg
xor
out
push
pop
jb
sub
mov
pop
popa
adc
test
jbe
xorl
xchg
or
and
hlt
popf
adc
mov
leave
inc
in
sahf
int
add
mov
sarb
addr16
xor
cmp
arpl
fnsave
push
in
enter
arpl
jnp
ja,pn
xchg
dec
add
mov
cmp
xchg
cmpsl
push
jne
int
adc
mov
cmpsb
mov
jg
lds
in
jecxz
xchg
pop
and
mov
push
add
cmp
dec
inc
and
inc
idivl
jge
arpl
push
ss
mov
stos
enter
adc
lock
xlat
and
shll
test
cmp
cmp
std
out
fcmove
test
sub
adcb
in
xlat
insb
scas
xor
add
repz
mov
push
repnz
das
and
and
jne
cwtl
xlat
fcompl
dec
ret
and
das
outsb
cltd
ja
push
pop
pop
inc
inc
test
in
mov
push
adc
cmc
test
clc
out
icebp
out
repz
sub
cwtl
sarb
push
sahf
jecxz
out
push
dec
sbb
adc
xor
bound
xchg
add
test
fcoms
mov
stc
mov
jne
orb
lock
gs
inc
sub
sub
pop
movsl
cmp
lock
push
fs
aad
scas
xor
pushf
ss
movsl
pushf
sbb
das
mov
loop
pushf
mov
add
and
inc
out
sahf
mov
dec
in
pop
and
fisubl
fildl
ss
repz
xor
je
mov
test
bound
add
insl
pushw
cmp
add
pushf
pop
in
cld
iret
movb
aad
lea
jns
call
or
sbb
leave
int
lret
pop
pop
pop
push
lret
shrb
divl
push
push
mov
pop
push
mov
in
mov
mov
fiadds
cmp
xchg
sti
push
in
stos
xor
mov
jl
mov
mov
test
jno
sub
and
dec
sub
jp
in
stos
fstl
or
mov
outsl
push
fisttps
and
adc
rcll
mov
movsl
cmp
lea
dec
test
mov
mov
or
cmpsb
cs
xchg
je
lock
in
popf
es
in
clc
cmp
mov
mov
push
and
add
push
dec
cmpb
push
pop
dec
jmp
add
fld
je
cmp
adc
add
iret
idivb
jo
adc
add
xchg
sub
js
dec
xor
pop
addr16
das
call
mov
cmpsb
enter
jge
aad
mov
mov
cmpsl
cmpsl
fdivs
leave
fisttpll
aam
add
frstor
cwtl
xchg
push
xchg
fisttpll
adc
leave
inc
in
sub
xchg
dec
xchg
lahf
push
sahf
sub
icebp
in
ret
inc
push
push
testl
jne
lods
mov
lea
idivb
and
out
mov
pop
stos
xorb
cmp
fcoms
pop
fldl
pop
loope
outsl
decl
adc
std
leave
fidivrs
icebp
mov
push
mov
jl
cmc
jg
sub
insl
mov
inc
push
jae
xor
or
sbb
push
add
and
cmp
or
mov
xchg
fistl
xchg
aas
and
flds
xchg
loopne
push
in
or
cmp
stos
insl
enter
lahf
jg
aaa
jl,pn
lret
xchg
sub
dec
sub
mov
hlt
push
rcr
jge
pop
call
or
mov
push
movsl
inc
pushf
cmp
mov
push
mov
xchg
push
cmp
push
fbstp
or
and
enter
in
mov
imul
jns
and
cmc
adc
xchg
inc
add
xor
jo
imul
out
arpl
aam
mov
xchg
popf
stos
xchg
lods
popa
xlat
scas
outsb
dec
or
int
or
sti
push
test
dec
push
dec
inc
lret
mov
xchg
jp
cld
test
jmp
shlb
out
sbb
cmp
mov
shr
xor
loopne
mov
sbb
cmp
nop
jmp
add
shr
fsubs
pop
cmp
push
movsl
call
ret
mov
pop
dec
cmpsb
jle
add
dec
rcrl
and
rorl
jo
add
mov
movsb
and
out
cwtl
adc
adc
push
jnp
push
pusha
push
test
or
enter
jl
xor
loopne
enter
sbb
push
push
lods
pcmpgtd
in
xchg
cmp
sbb
data16
inc
jg
sar
mov
movsl
cmp
pop
mov
enter
mov
add
or
mov
xor
sahf
jns
sub
cmp
addb
clc
pop
xchg
cmpxchg
push
sbb
push
insb
pop
or
pop
push
int
jle
sbb
mov
mov
push
jmp
das
push
cmp
pop
loopne
lea
in
mov
aas
shrl
fdivrl
cmp
test
call
inc
sahf
out
push
test
add
addr16
push
adc
mov
aam
push
lods
add
dec
pop
jge
std
cmpb
das
xor
int
pop
xor
popa
sub
adc
pop
insl
arpl
push
out
mov
xchg
jmp
xchg
adc
movsb
or
lcall
and
fidivrs
lret
push
into
rcl
xchg
cli
out
jmp
aaa
in
mov
je
int3
shl
aaa
push
out
test
daa
pop
jp
test
fwait
rcll
add
lret
sub
aad
fcoms
push
in
and
inc
popf
add
cli
jo
cmc
mov
and
shr
push
cmp
das
pop
aam
rol
in
imul
xchg
and
xor
fnstcw
test
ret
rorb
repz
mov
gs
cmp
xchg
dec
movsb
lahf
daa
and
adc
ljmp
push
xchg
jno
sub
sbb
fmuls
or
xchg
pop
inc
mov
repnz
mov
cltd
cmp
pop
and
in
push
call
push
sub
insb
int
inc
push
jecxz
mov
sbb
dec
lods
cltd
inc
adc
cld
cmpsb
and
lahf
add
xchg
cld
lea
push
or
mov
cmp
cmp
xchg
xor
cltd
repz
enter
xchg
xor
mov
sub
adc
ret
adc
stos
push
fsts
dec
movl
insl
sahf
sbb
cltd
push
js
test
mov
lock
sbb
into
jmp
cmp
aaa
mov
mov
leave
int
pop
mov
pop
rorl
insl
lahf
dec
xchg
ds
in
shrb
sub
push
mov
gs
and
les
popa
adc
fmul
dec
insl
mov
xchg
test
inc
pop
fcoms
scas
xchg
pop
sbb
shll
out
incb
push
shll
sub
cld
and
and
add
add
shrb
cmp
pop
sub
sub
cmp
inc
scas
cmp
daa
dec
and
jae
pop
pusha
sbb
adc
sub
push
sub
cmp
shll
js
lret
lret
mov
repz
or
stc
push
push
nop
dec
push
cmpsb
adc
add
fidivrs
xor
cs
jb
addb
add
pop
loop
fs
xor
mov
outsb
mov
or
sbb
mov
pop
xlat
and
scas
add
mov
les
adc
inc
sub
xchg
sub
cld
xor
jae
and
sbb
inc
into
mov
lret
loopne
frstor
test
cs
jno
insl
inc
cli
sub
xchg
push
addr16
sub
adc
jbe
push
cld
ss
daa
cmp
and
dec
inc
cwtl
mov
sbbb
pop
loopne
sbb
repnz
lds
cs
or
push
cs
mov
cmc
stos
sub
cmpl
insl
pop
mov
lea
loop
cmpsl
orb
leave
clc
dec
xor
rcll
lods
stos
jmp
mov
dec
dec
int
into
and
cmp
push
pop
pop
mov
outsl
data16
roll
add
jp
shrl
sarl
imul
jno
mov
push
leave
adc
pop
inc
je
icebp
sub
in
insl
ds
or
adc
stos
ds
xor
jge
jg
movsb
int
popf
xchg
sbb
add
mov
cmp
pop
cld
and
or
mov
fcompl
sbb
xlat
notb
aam
and
adc
addl
adc
in
sub
pop
and
adc
push
nop
clc
icebp
aam
nop
mov
sbb
mov
in
addr16
cmpsl
hlt
or
hlt
lea
mov
cmc
inc
outsl
xchg
in
aad
mov
in
fistl
add
rcrl
fdivrs
gs
lods
outsl
ljmp
or
inc
dec
icebp
add
jge
inc
cs
rcrl
shrl
rol
xor
repz
xor
sar
jl
push
cld
stc
ret
dec
sti
cmpsb
test
lock
bound
ds
cmp
addr16
mov
jnp
sbb
pop
popf
add
cmp
ror
lea
cmp
cmp
cwtl
pop
jmp
jmp
cmp
pop
into
sbb
shr
mov
aas
sub
xchg
stos
or
push
pop
stc
pusha
mov
dec
outsl
and
pop
pop
and
pop
jl
sbb
pop
insb
lcall
lods
int
add
js
cmpsl
aaa
test
lods
mov
dec
int
jae
push
negl
lods
fadd
out
xor
jge
imul
pusha
popf
movsl
and
push
jmp
repnz
arpl
adc
add
pop
ja
mov
add
jbe
pop
cltd
les
mov
lods
out
pop
cmp
or
in
addr16
xor
add
lcall
ret
test
pushf
iret
stc
or
sbb
bound
lret
mov
syscall
mov
or
gs
std
jo
sbb
stos
mov
jcxz
xchg
mov
or
pop
inc
adc
lahf
pop
push
out
lcall
stc
inc
enter
pop
or
fsts
push
addr16
add
cmp
daa
push
push
jnp
insb
stc
pop
insl
lcall
test
nop
aas
lock
cmp
daa
adc
sbb
rcrb
inc
into
idivl
push
scas
push
xlat
shll
hlt
bound
cmpsl
sbb
movsl
test
jb
push
xor
ret
mov
into
je
xlat
ja
pop
push
jecxz
pop
xchg
inc
push
into
cmp
pop
pop
lock
stc
jb
loop
dec
addr16
lret
hlt
mov
inc
jo
pop
addb
cmc
cmpsl
or
insl
les
call
jecxz
push
lods
pop
cmc
seto
loopne
jbe
rcrl
dec
sbb
clc
adc
pop
cmpsb
pop
mov
jns
stc
xchg
ds
movsb
mov
dec
jb
cmp
sti
dec
mov
lods
sub
popa
ret
aas
jb
gs
loope
xor
adc
dec
sbb
mov
adc
add
lret
cmp
ret
jno
xchg
pop
sbb
and
or
js,pn
fimuls
and
in
rclb
push
mov
push
std
sub
xchg
push
ret
dec
scas
out
repnz
adc
cmp
subb
pop
xor
pop
daa
aam
adc
pop
rep
adc
jns
movsb
jo
movsb
in
sub
loop
dec
jnp
push
mov
shrb
je
es
xor
hlt
iret
jmp
aad
or
out
dec
fdivrs
cmpsl
push
enter
pop
xor
pop
sub
jo
repnz
mov
sbb
out
mov
popa
xchg
mov
scas
mov
or
jmp
pusha
repz
movsb
pop
cmc
loop
inc
push
inc
cmp
mov
sbb
mov
xchg
pop
adc
and
add
lret
jo
daa
repnz
out
hlt
jge
add
sarb
mov
ficompl
jns
pop
cmpsl
mov
jb
pop
push
mov
push
adc
adc
inc
loopne
mov
nop
mov
xor
push
sahf
cwtl
je
cltd
mov
dec
insb
mov
data16
cmpsl
test
or
data16
dec
in
adc
insb
jecxz
sub
daa
lods
outsb
mov
pop
test
push
fdivs
scas
mov
fstl
and
orl
dec
fnstsw
rcr
in
cmpsl
xor
cmp
lret
dec
fwait
out
jo
inc
fcomip
jge
jle
push
push
xor
xor
jmp
mov
pop
arpl
push
lds
repnz
or
bswap
pop
xchg
dec
lea
mov
hlt
mov
dec
lock
dec
clc
lock
pushf
inc
test
hlt
movl
xor
jp
mov
mov
push
pop
mov
or
ja
filds
push
cmpb
dec
sub
fwait
leave
je
push
fnstenv
sub
cmp
mov
gs
in
cmpsl
and
pop
dec
push
icebp
test
jp
lret
psrad
mov
daa
sbb
lret
cli
int3
sbb
movsb
jp
xchg
rcll
adc
incl
mov
dec
xor
dec
out
dec
add
fbstp
test
fcmovb
arpl
aam
sub
cmp
rolb
dec
lret
into
cmpsb
movsb
jle
inc
dec
adc
repz
cltd
mov
push
ljmp
jecxz
ret
pop
icebp
scas
scas
into
inc
jbe
loope
pushf
hlt
dec
jge
xchg
ret
aad
jne
inc
fwait
push
mov
ret
mov
dec
jmp
push
movsb
dec
fisttpl
push
rorb
xor
push
xchg
scas
cmp
and
jb
pop
shrl
jb
div
inc
popf
repnz
add
mov
xchg
cld
icebp
popf
fdiv
push
movsb
adc
enter
add
fwait
add
add
aad
push
movsl
lret
and
dec
movsl
xchg
push
push
test
adc
stos
sub
test
xor
and
int
or
aas
aas
iret
lea
movb
iret
adc
cmc
in
cmpsl
xchg
xor
dec
jle
sti
fucom
xchg
pushf
push
outsb
rcr
jmp
jbe
test
outsb
orl
mov
sub
push
xor
pcmpeqb
loope
int
jle
adc
mov
xchg
jns
pop
mov
out
roll
in
dec
jbe
loopw
pusha
sbb
xchg
popa
pop
push
mov
adc
adc
mov
lods
pop
and
test
pop
pop
lret
jne
mov
mov
cld
adc
adc
pop
mov
push
cs
in
and
jnp
lcall
out
lahf
and
adc
loop
into
xchg
popf
xor
loopne
std
xchg
and
lds
jbe
jg
mov
frstor
inc
das
mov
xlat
sarl
lea
rorl
insl
xchg
and
sub
push
jmp
dec
push
cmp
mov
mov
out
push
stos
test
mov
pop
sub
div
or
mov
das
jl
jo
out
push
push
jbe
test
jp
and
jle
mov
xchg
test
aaa
shl
jae
add
stc
cld
cltd
push
repz
jge
push
aas
adc
stos
bound
pop
std
cmp
popa
jmp
mov
pop
jg
shll
popf
shrl
sbb
mov
mov
out
jns
lock
popf
sbb
mov
icebp
mov
fbstp
adc
mov
xlat
outsl
mov
jbe
mov
push
out
jo
hlt
mov
imul
pop
adc
mov
repz
jl
mov
orl
movsl
jg
push
scas
icebp
ror
inc
leave
or
adc
leave
pop
pop
pop
push
popa
jmp
loop
xchg
cmp
xchg
xor
mov
dec
lods
mov
xlat
adc
imul
mov
addr16
hlt
add
xchg
imul
lods
inc
or
cmpb
xchg
lret
xchg
sub
adc
into
out
xchg
or
fisttpl
fwait
push
sbbl
enter
and
pop
mov
lcall
pop
pop
xchg
mov
dec
and
sti
push
insb
xor
cmp
mov
sbb
push
stc
sbbl
scas
xor
pusha
addr16
outsb
rorb
rol
sbb
jmp
sar
movsb
mov
mov
fsts
addb
push
mov
mov
cltd
push
inc
push
xchg
sbb
cmp
cs
and
aam
scas
adc
add
cmp
out
sub
add
jne
addr16
repz
lock
std
add
pop
imul
test
out
add
mull
daa
mov
test
push
adc
and
xor
repz
mov
xor
ret
inc
frstor
ja
out
xchg
lods
mov
clc
jle
repnz
xor
popl
shlb
in
push
pop
dec
cld
out
int
mulb
pushf
stos
push
out
push
in
xor
and
and
cmp
ret
jo
clc
imul
push
mov
jns
stos
imul
ret
call
mov
stc
mov
mov
lret
lds
roll
negb
jb
jne
push
inc
sbb
fs
xchg
jns
frstor
pop
sub
pushf
clc
fsts
test
mov
cmp
and
hlt
xor
inc
xor
or
pop
jmp
imul
mov
inc
sbb
int
jmp
pop
aas
jne
mov
cmp
push
ss
push
add
sub
push
push
sub
mov
loopne
insl
sub
sbb
push
imul
pop
test
out
xor
push
adc
fwait
cmpsb
in
stos
out
sti
cmp
dec
std
cltd
xchg
les
or
push
mov
lret
cmc
pop
out
push
xor
and
dec
sub
cmp
xchg
imul
jle
enter
int
test
xchg
xchg
jbe
cmp
jb
sub
negb
cmp
adc
out
push
in
dec
in
insb
cmpsl
jae
lcall
aas
xor
into
sar
jp
pop
add
dec
xchg
cmpsl
adc
pop
sub
jg
nop
ss
or
or
mov
xchg
add
push
test
test
inc
jne
lret
divb
pop
and
out
les
push
jae
sub
xchg
das
or
and
shrl
jle
or
mov
mov
pop
mov
addr16
test
mov
cmpsl
pop
mov
and
lds
mov
ror
mov
lret
lea
pop
bound
jns
mov
push
mov
lret
dec
xchg
outsl
cmc
and
mov
into
fbld
mov
std
sub
insl
clc
lds
or
or
mov
adc
and
orl
mov
pushf
push
mov
mov
push
xlat
nop
into
popa
cli
lret
adc
xchg
sbb
in
into
ret
jp
ja
mov
fwait
pop
pop
push
stos
pop
out
cmp
out
pop
or
mov
fwait
mov
cmc
and
mov
dec
nopl
and
imul
pop
aam
ficoml
push
mov
dec
pop
xchg
scas
jnp
mov
stos
stos
roll
add
push
jge
xchg
out
icebp
jnp
inc
mov
inc
hlt
loop
fbld
xchg
or
in
je
xor
xchg
fwait
jnp
jne
ret
sub
cltd
je
mov
int
repnz
xchg
jo
push
inc
mov
mov
lock
lahf
push
out
jno
negb
mov
sbb
inc
int3
mov
outsl
into
xor
cmc
push
fldl
add
mov
sbb
jns
jo
testb
imul
sub
push
gs
push
outsb
sub
sub
add
push
fisttpl
xor
adc
jns
mov
mov
ds
xchg
sbb
jae
add
cmpsl
xchg
pop
sub
xor
hlt
sub
into
xor
adc
lea
test
shrl
cmpsb
push
or
xor
add
and
bound
mov
and
mov
orb
jmp
xor
idiv
dec
sub
cmpsl
push
mov
or
xor
inc
lods
insl
hlt
popa
int3
out
xchg
push
or
add
cltd
rorl
sbb
mov
hlt
sub
mov
ss
xor
movsb
arpl
popw
mov
movsl
add
push
dec
cmpsb
sub
xchg
popa
lock
shll
jmp
stos
pop
mov
mov
pop
incl
pop
pop
push
out
jb
in
and
loope
dec
ret
adcl
dec
jae
sbb
lock
inc
add
sub
mov
xchg
fstps
iret
and
sbb
pop
gs
push
jge
or
adc
ret
shrb
lods
shlb
aas
sub
pop
repnz
lahf
add
jecxz
ret
fwait
mov
in
popa
adc
mov
cld
fldcw
or
stos
scas
push
jne
mov
xor
movsb
mov
mov
cmp
ficomps
std
mov
mov
rcrb
jg
fnstenv
mov
xchg
ljmp
icebp
mov
adc
push
loopne
pop
div
add
mov
and
or
cmpsl
add
adc
dec
pop
sub
pusha
popf
inc
je
repz
hlt
jge
aam
lcall
test
stos
inc
in
xchg
mov
adc
mov
test
shl
push
xchg
push
dec
stos
mov
pusha
xchg
es
and
xor
ja
jmp
dec
dec
sbbb
sub
adc
push
repnz
jle
test
dec
mov
adc
shlb
mov
xchg
cmpl
cmpsl
and
bound
xlat
mov
bound
xchg
repnz
test
jne
jmp
jae
mov
iret
xor
into
ret
imul
test
scas
xlat
inc
out
sahf
cltd
mov
add
call
fs
shll
pop
rclb
icebp
nop
pop
adc
mov
mov
ds
inc
hlt
mov
test
out
mov
add
push
jb
adc
loop
inc
testb
popa
aad
jnp
insl
xchg
incb
inc
xlat
fwait
sub
loopne
gs
jle
push
rcrl
cli
ljmp
lahf
aas
icebp
lcall
pop
in
fsubl
inc
aas
rorb
and
add
or
push
jbe
sub
mov
mov
fldcw
dec
or
mov
insb
push
fsts
jb
popf
and
lret
daa
xor
outsb
test
addl
sub
push
cmp
jo
mov
in
arpl
dec
mov
mov
jo
mov
repnz
sub
inc
cmpsl
mov
enter
xor
xchg
je
xchg
rcrl
sub
fadds
imul
or
push
aas
loopne
rorb
mov
aaa
cmp
je
xor
and
loope
xchg
popa
insb
jg
jns
dec
ja
in
mov
xchg
ljmp
mov
aas
mov
les
leave
movsl
cmpsl
loopne
lahf
icebp
ror
stc
xchg
pushf
adcb
repnz
repz
add
cltd
hlt
ret
xchg
ss
lods
lahf
cwtl
mov
sub
and
add
fidivrl
pop
filds
adc
jno
popa
stos
inc
ja
in
cmp
movlhps
mov
xor
out
loopne
xchg
mov
sub
icebp
add
cmp
addl
sbb
pop
decb
pop
sahf
sbb
mov
sub
lods
cmp
adc
xchg
test
test
xchg
cld
aaa
jg
adc
pop
test
dec
dec
dec
sub
pop
jne
mov
push
xor
pusha
inc
cmp
call
add
add
or
dec
in
add
les
wrmsr
jp
inc
mov
jl
out
ljmp
mov
add
sub
ffreep
enter
sub
jbe
test
jnp
and
mov
push
xor
aas
add
sub
pop
popa
test
int
lods
ds
xor
out
sbb
icebp
inc
loope
add
rcl
jge
aas
xchg
nop
outsl
das
arpl
lret
test
test
sbb
outsb
push
rclb
je
leave
sbb
ds
jg
mov
incl
mov
mov
stos
mov
xchg
push
lods
in
dec
xor
and
mov
add
and
mov
inc
shll
adcb
adc
dec
pusha
dec
les
pop
xor
jne
orb
pop
sti
mov
push
pop
cltd
sti
inc
int3
push
hlt
dec
inc
adc
outsl
mov
popa
mov
add
sarb
es
arpl
mov
and
cmp
popf
and
fs
add
push
mov
cs
pop
xchg
bnd
sub
ret
cwtl
and
inc
push
push
fstl
scas
sub
fists
or
sbb
sub
popf
or
mov
or
fidivl
test
aas
mov
pop
mov
clc
jns
pusha
inc
sarl
outsb
jp
jl
btc
or
adc
loopne
pop
dec
aas
jns
hlt
faddl
jg
int
cmp
rcll
stos
enter
dec
xor
dec
mov
dec
cmp
xchg
and
shl
stc
adc
mov
fcomps
and
es
jmp
sub
cmc
and
adc
mov
mov
stos
test
cmp
aaa
xchg
pop
inc
adc
loop
imul
dec
into
mov
aas
les
mov
repnz
outsl
cli
fs
jg
jg
mov
and
sub
aaa
rorb
imul
xor
mov
sar
out
mov
push
scas
clc
ds
int
lock
pop
sbb
pop
les
push
in
mov
or
jne
xchg
mov
hlt
lcall
fbstp
dec
or
sahf
ds
loop
dec
sarb
and
xchg
jp
lret
pop
or
bnd
int3
lcall
loop
lret
xchg
orl
jmp
ds
ret
arpl
je
icebp
or
out
std
jmp
out
adc
xchg
adcl
xor
mov
mov
cmpsl
push
movsb
sbb
inc
ja
ret
jecxz
shlb
sub
fs
and
test
imul
sbb
push
movsl
mov
test
jmp
pop
pop
cmpsb
adc
rcr
std
mov
bound
mov
and
add
dec
sub
shrl
test
mov
aas
shlb
test
in
fisubs
call
push
pop
lea
popf
js
mov
mov
or
mov
xchg
sbb
fidivs
xor
adc
lock
pop
inc
sub
jo
cmpsb
dec
cmp
dec
mov
jae
push
in
push
fs
adc
jmp
dec
dec
movsl
jecxz
pop
push
std
inc
mov
xor
sti
push
push
loop
mov
adc
cmp
in
or
mov
jle
sub
or
mov
div
scas
mov
les
jne
stc
pop
add
mov
add
das
or
aaa
jg
addl
push
into
push
xchg
add
sub
imul
ret
imull
mov
mov
mov
iret
mov
xor
shll
sub
bound
pop
popf
or
pop
add
fnstsw
sub
xchg
jno
push
stos
in
or
dec
adc
inc
cmp
mov
das
and
or
xlat
and
inc
jae
cmp
fidivs
cmp
and
mov
rcll
add
aam
stos
mov
push
scas
lods
mov
mov
fcmovb
mov
lock
lds
sub
out
sbb
push
pop
dec
out
ja
mov
pop
sub
pushf
or
int3
cwtl
push
push
jp
pop
imul
js
and
sbb
ljmp
mov
xor
test
sub
imul
pop
dec
les
or
add
mov
xchg
and
inc
daa
adc
push
lods
sub
sbb
add
xor
jb
fsubl
jnp
in
call
pop
fnsave
pop
mov
lock
fidivrl
repnz
leave
stos
sub
inc
pop
cwtl
xor
push
push
and
ret
scas
pop
sub
ja
sahf
inc
stc
xor
inc
sbb
dec
mov
cmpsl
icebp
dec
out
pavgb
popw
loop
lahf
stos
jg
rcrl
pusha
movsb
incb
and
push
xor
cwtl
inc
mov
push
cld
pop
gs
jbe
adc
mov
mov
xchg
clc
jmp
push
sub
mov
xchg
sub
sub
cmp
adc
cmp
or
les
mov
push
je
iret
or
call
mov
or
ret
pop
sbb
xchg
imull
cmp
adc
mov
mov
add
mov
negb
cwtl
cwtl
sub
lods
mov
mov
sbb
stc
repz
aad
icebp
mov
cmpsb
inc
adc
fwait
xorb
xchg
xor
inc
sub
jle
jbe
sub
add
scas
pop
test
jle
ror
push
cmp
add
sbb
and
push
data16
or
cmp
sti
inc
sarb
jno
mov
aas
cmp
sub
adc
pop
nop
and
jle
xchg
in
scas
stos
into
cmpsl
pop
mov
outsb
inc
lcall
or
mov
push
popa
mov
mov
lock
inc
frstor
mov
adc
xorb
add
sub
xor
jnp
sbb
out
xchg
outsb
push
clc
out
cmp
mov
imul
cmp
lods
and
stos
mov
jp
xor
aas
add
xchg
or
lods
jmp
xchg
mov
cmpsl
cmp
or
cmpsb
in
sbb
pop
and
aam
inc
inc
inc
inc
dec
ficoml
in
sahf
mov
aas
dec
rorl
mov
bound
push
aaa
mov
movsb
mov
frstor
aas
dec
pop
pop
test
inc
push
mov
mov
std
hlt
dec
inc
mov
mov
in
je
dec
push
xchg
lahf
inc
cmp
push
insb
and
jecxz
sti
cltd
insb
stos
outsb
push
inc
push
mov
or
fstpl
sub
sbb
loop
sahf
cmp
add
test
pop
in
xchg
sub
lret
popl
push
pop
insb
cwtl
dec
gs
pop
fildll
pop
mov
aas
push
aas
stos
shll
mov
push
mov
mov
push
das
fwait
jne
hlt
sbb
sahf
addr16
ja
out
jle
mov
pop
lock
cmp
or
je
or
outsb
push
add
dec
push
inc
popa
pop
fcmovnb
inc
xor
push
arpl
add
inc
ror
add
leave
stc
das
stc
pop
sub
out
dec
or
jle
or
int
push
inc
stos
ss
fcomps
dec
xchg
mov
sbb
mov
mov
jne
outsb
sbb
in
cwtl
loop
repnz
call
loop
test
add
adc
mov
sti
and
enter
jnp
fistpll
inc
sbb
andl
jp
push
andb
leave
xchg
loop
jb
pop
jb
les
icebp
cmp
push
popa
dec
push
repz
push
push
push
sub
loope
xchg
ljmp
stos
sbb
in
stc
sar
sahf
out
xor
mov
add
or
mov
push
mov
pop
adc
aam
cmp
mov
test
cltd
push
push
std
adcl
jbe
push
daa
and
mov
xchg
mov
cmpb
sub
sub
js
mov
test
rcrl
mov
xor
lahf
pop
mov
fsub
es
xchg
mov
push
jo
sbb
push
xchg
lret
push
or
es
out
inc
inc
xor
sbb
cmpb
imul
int
pushf
hlt
pop
mov
mov
divb
xchg
jnp
stos
push
xchg
jae
adc
daa
and
lock
jo
sbb
fcmovbe
dec
jbe
cmp
adc
mov
idivl
aas
popf
xor
inc
cmpsl
into
inc
cmc
sbb
pop
fdivr
cmp
pop
mov
sub
jle
pop
cmp
cmp
or
mov
mov
mulb
test
sub
jbe
rorl
scas
jno
jg
popa
and
and
xchg
or
enter
ljmp
push
sarl
pop
pusha
cmpb
pushf
and
jge
mov
and
cli
gs
stos
repnz
jae
imul
jle
xchg
mov
pusha
or
or
pop
fistpl
movsl
out
and
imul
aad
mov
repnz
jns
mov
xor
std
mov
mov
xor
jmp
push
cwtl
pop
js
xor
xor
and
sub
aas
lret
push
int
cli
sub
test
sbb
jo
test
fcmovnbe
jecxz
in
arpl
mov
push
cwtl
pop
and
push
cmc
mov
je
in
sbb
imul
mov
icebp
in
scas
add
je
call
repz
enter
mov
xchg
cmp
inc
cmp
sbb
cwtl
mov
push
mov
cmpsb
cltd
test
mov
jno
enter
fildl
popa
in
sub
ret
push
aas
mov
xlat
ja
mov
sub
mov
add
test
jmp
mov
adc
adc
push
enter
mov
jb
fs
repnz
repz
ret
xor
jns
icebp
add
mov
loop
sbbl
mov
mov
popf
cld
dec
test
loopne
jp
dec
lock
mov
dec
cmp
and
add
push
xchg
dec
nop
pop
cltd
ret
add
cld
lahf
pushf
xchg
jmp
push
xor
inc
xchg
lea
into
add
pop
andb
push
hlt
cld
or
test
pushf
pushf
sti
into
imul
push
ljmp
push
mov
addr16
lods
sar
cmp
cli
jl,pt
mov
cmp
lahf
push
and
mov
sti
popa
inc
inc
xchg
shrl
popa
int
cmp
fucomp
popa
jge
daa
cmp
imul
in
push
cmp
push
adc
mov
movsl
xlat
adc
mov
ss
daa
fistps
clc
dec
jp
mov
add
call
cmpsb
dec
sahf
mov
dec
mov
icebp
js
fcomp
or
clc
gs
sub
test
aam
icebp
mov
jmp
in
xchg
sbb
out
adc
inc
or
sahf
enter
fstpt
inc
sbb
xor
cmc
sub
cmp
cmc
lock
mov
invd
icebp
fwait
ds
mov
test
addb
lahf
pmaxub
and
fsubrs
jnp
shll
mov
popa
cmp
mul
repz
lea
jnp
jecxz
aas
js
pop
shll
and
loope
imul
jle
mov
or
in
test
jbe
in
cmpsl
ds
push
push
sbb
movsl
test
stos
repnz
ja
out
mov
andb
jge
idivl
movsb
or
rcl
pushf
xor
jecxz
mov
int
cmp
test
dec
mov
icebp
cltd
lock
cmp
dec
lods
fdivl
in
cmp
stc
sub
pop
testl
push
adc
pop
ret
mov
lcall
jecxz
push
dec
xor
cmp
shl
pusha
and
out
xor
pop
rcrl
jne
cmp
sub
inc
adc
pop
sbb
mov
outsl
bound
scas
inc
mov
pop
jb
jne
lock
jb
pushf
test
mov
ds
jl
movsl
out
popf
push
inc
mov
sub
rclb
orb
and
sub
test
and
fwait
in
loope
cmp
mov
and
lods
sub
push
xchg
cmp
mov
outsl
and
inc
sti
cmpl
repz
les
ret
jnp
jl
jnp
aas
cmp
in
leave
fdivl
mov
lret
sti
xchg
fistps
mov
xor
push
je
hlt
inc
mov
inc
call
push
fbld
leave
mov
daa
xchg
shrl
push
push
data16
and
ret
dec
mov
sbb
push
cmpsl
inc
push
mov
and
jmp
lret
add
loope
int
loop
cwtl
jbe
rolb
jo
lret
mov
jae
adc
pop
mov
push
fsubs
xor
ljmp
std
ret
ja
lret
inc
or
fisttpll
push
movsl
dec
dec
and
stos
jg
ret
pop
outsl
cmp
mov
jmp
dec
adc
dec
arpl
das
divl
push
aam
jno
and
stc
mov
dec
loope
out
mov
mov
hlt
sub
cmp
mov
icebp
sbb
gs
inc
nop
cmpsb
out
adc
mov
fwait
push
addr16
pushf
out
les
xor
shrb
jns
sbb
dec
orl
xor
test
dec
jle
into
xchg
jmp
pop
roll
insl
js
sahf
ss
faddl
inc
enter
gs
xchg
and
pop
shrb
arpl
pop
push
inc
shlb
idivb
jae
cmpl
xchg
addr16
xor
push
mov
xchg
jb
frstor
inc
test
pop
adc
rcrl
xor
xchg
mov
stc
mov
adc
or
scas
pop
sub
aad
sbb
pop
push
repnz
lea
mov
mov
rcll
dec
cmpb
mov
jne
dec
sbb
fs
jns
mov
pop
inc
pop
cmp
xor
xchg
pop
out
neg
cs
add
adc
sub
dec
fs
xchg
inc
add
dec
or
sbb
dec
xchg
push
push
roll
adc
mov
call
jmp
ret
mov
push
loop
hlt
or
adc
cld
ljmp
incl
adc
jnp
in
push
inc
jae
aaa
jno
adc
xchg
jecxz
popl
pop
mov
jns
filds
mov
scas
xchg
out
push
cmp
jmp
js
lock
pop
jns
xor
imul
fisttps
sbb
mov
xchg
mov
sub
add
out
loope
cs
cmp
rolb
pop
js
xor
pushf
out
out
or
mov
enter
jne
enter
fimull
jg
xor
ret
aas
jge
cmc
sub
int3
sbb
fsubrl
data16
sub
in
sub
dec
cli
les
xchg
test
sbb
xor
test
pop
addr16
or
nop
push
out
and
dec
loope
and
jp
jnp
push
inc
pop
test
icebp
mov
lock
mov
fstps
lret
ret
mov
mov
lcall
mov
sub
or
mov
ds
pop
jb
ss
sbb
das
push
movsl
lds
das
mov
imul
popf
pushf
or
clc
adc
lods
les
inc
lcall
dec
dec
cltd
fists
inc
cmp
aad
sbb
cmp
cs
inc
or
adc
mov
adc
mov
push
push
loope
mov
mov
dec
mov
or
cli
test
mov
out
andl
sti
jne
mov
push
ficompl
outsl
movsl
cmp
in
clc
sbb
xchg
sub
shll
fdivrs
cmc
aaa
dec
loopne
into
push
aaa
dec
int3
cmpsb
sbb
in
fcompl
pop
popf
and
stos
and
push
ss
lods
cwtl
push
mov
xchg
iret
xor
addr16
inc
repz
add
or
mov
arpl
test
ljmp
ljmp
pop
loop
adc
rcrb
or
in
jecxz
push
inc
jae
mov
pop
outsb
mov
inc
movsb
sub
das
mov
or
jns
loop
dec
inc
inc
insb
jae
loopne
nop
gs
aad
roll
rolb
dec
xchg
lret
dec
cs
mov
lock
add
mov
mulb
cmpsl
aam
out
inc
call
or
movsl
push
mov
hlt
dec
jne
jmp
ret
jbe
jno
ja
out
cmc
in
clc
sub
int
jnp
inc
inc
pop
jle
sar
lahf
popa
mov
popf
scas
inc
ds
jge
fldt
cmp
ljmp
push
push
fdivr
movsl
sub
in
mov
mov
int3
in
lret
inc
js
sub
sbb
loop
inc
and
fistl
mov
lea
dec
adc
inc
cmc
mov
pop
das
ds
xor
pop
xchg
xor
sbb
jae
and
mov
repz
push
lahf
mov
cmpsb
leave
clc
loope
ret
jb
jl
mov
mov
add
mov
jno
add
mov
mov
push
jg
cmp
add
inc
cmc
jecxz
je
jns
push
adcb
cmp
das
pop
stos
jbe
or
dec
ja
test
mov
fwait
push
lods
ljmp
movl
daa
es
xchg
jecxz
sbb
popa
mov
repnz
adc
inc
cmp
and
mov
pop
sahf
pop
pop
add
lcall
mov
out
dec
add
mov
ss
shll
pcmpeqb
movsl
fbstp
icebp
jg
push
adc
je
mov
sub
loopne
gs
mov
cmpsb
nop
sbb
push
dec
xchg
ja
es
mov
push
adc
mov
int3
in
jbe
xchg
mov
bound
ret
add
add
sbb
fimuls
subb
out
jle
mov
pop
out
or
addr16
cwtl
xchg
nopl
xor
jo
pop
xchg
out
mov
add
inc
xchg
scas
lcall
pusha
fisttpll
mov
ret
sahf
xchg
in
dec
mov
test
pusha
sub
repnz
mov
mov
mov
in
mov
test
dec
icebp
frstor
lret
setnp
cwtl
popa
mov
cmp
adc
aaa
pop
je
push
jne
lret
js
orl
adc
test
adc
loopne
jl
add
std
mov
jmp
call
cli
mov
jns
lret
popf
fdivl
add
imul
mov
lock
xor
mov
movsl
lods
mov
orb
in
in
mov
xchg
and
mov
mov
in
mov
pop
pop
ret
lcall
ret
lret
and
popf
mov
sub
outsb
xchg
sub
pop
stc
cmp
fcoml
call
xor
out
push
cmp
test
push
test
jne
stos
adc
xor
out
mov
add
mov
xor
and
in
add
inc
sbb
adc
insb
ret
mov
roll
roll
sub
cwtl
arpl
andl
aad
push
mov
push
call
jbe
pop
ret
in
sub
and
mov
gs
push
jp
xchg
push
iret
cwtl
pusha
mov
pop
push
push
call
dec
sub
push
nop
lret
hlt
imul
aam
add
xchg
in
outsb
inc
dec
cwtl
xchg
scas
mov
hlt
cmc
xor
aad
pushf
push
cs
mov
fldcw
push
and
outsb
jp
sti
xchg
mov
mov
add
mov
ljmp
sbb
jg
out
insb
mov
and
int
fidivs
push
int
or
sbb
push
sbb
into
adc
xor
call
or
cld
adc
jno
stc
xor
jmp
lahf
mov
push
cmp
aaa
imul
js
mov
jmp
icebp
arpl
mov
push
xchg
loop
ret
sub
add
insl
jge
push
cmpsb
pop
jge
push
inc
add
lahf
dec
mov
adc
push
imul
lret
clc
dec
fistps
adc
aaa
xor
mov
and
das
and
jno
lock
push
fildl
sbb
cld
cmc
cmp
cmp
aas
mov
clc
out
sbb
fstp
sub
mov
test
in
mov
cld
neg
xchg
arpl
hlt
xor
icebp
dec
aaa
out
addr16
sub
sbb
push
xlat
pop
fxch
inc
cld
push
or
lea
lret
vsqrtss
adc
insl
icebp
lret
jnp
adc
aam
sarb
sahf
push
sub
arpl
jge
mov
mov
dec
jno
movsl
call
test
inc
rclb
mov
scas
pop
mov
fistpll
lea
add
daa
sbb
aam
fs
aad
fistl
fwait
imul
fwait
addb
xchg
loop
mov
shl
or
mov
push
push
inc
xor
lea
sbb
push
decl
insb
pushf
push
push
js
jg
inc
cli
test
cwtl
jb
aam
dec
dec
add
xchg
test
lcall
xor
and
dec
popa
push
data16
add
jne
dec
inc
outsl
idiv
sub
inc
pusha
xchg
xor
mov
inc
fisubs
adc
jae
clc
std
lret
out
xor
inc
mov
mov
lods
gs
ss
les
jp
into
add
fs
and
adc
cmp
mov
sub
cmp
in
push
adc
not
push
push
xor
dec
jbe
cmc
lods
testl
cmp
mov
movsb
test
mov
sbb
sbb
adc
cmpsl
jno
into
movsb
xchg
aas
mov
repz
cwtl
mov
sub
negl
pop
push
push
or
push
jae
clc
mov
cld
inc
repnz
lods
pushf
cld
lds
mov
fwait
sub
fs
enter
xchg
je
clc
sbb
gs
jecxz
mov
or
fbstp
push
push
call
cmp
jo
outsb
into
mov
cwtl
mov
jge
and
fnstsw
hlt
loopne
rcl
fs
movsb
or
xchg
gs
sub
or
mov
popa
push
mov
jmp
aaa
in
or
std
pusha
test
rcr
cmp
inc
cmpsl
rorl
out
sub
repz
loop
jns
xor
pop
ljmp
mov
cwtl
mov
pop
mov
xchg
add
add
sarl
imul
sub
push
or
add
repnz
jp
testb
sbb
int3
dec
cmp
xchg
mov
push
xor
test
sti
pop
mov
clc
out
push
in
ja
ljmp
jl
inc
sub
int
xchg
lods
sbb
int
fldl
push
cmc
enter
fsub
jp
cmp
rcrb
xchg
jo
rcrl
xchg
lock
clc
mov
sbb
inc
xor
inc
mov
add
adcb
lea
inc
xchg
leave
mov
repnz
call
movsl
jle
shll
dec
fadds
loopne
sbb
mov
lods
test
mov
jnp
pushl
fdivrl
dec
pop
fiaddl
fstl
jmp
fwait
add
jg
arpl
rclb
cmc
gs
lods
dec
dec
add
push
int3
jae
addb
dec
lods
xchg
fisttps
sub
push
mov
xchg
scas
movsb
shr
and
mov
mov
sti
bound
int3
ss
push
leave
push
in
adc
repnz
stos
out
std
lock
push
setnp
fidivl
cmp
or
subb
cmp
mov
loop
and
and
fs
stos
stc
xor
sarl
loope
and
imul
ljmp
fwait
das
fldl
dec
or
fs
pop
imul
xchg
jecxz
sub
pop
mov
sbb
add
xchg
and
push
cmpl
dec
std
jp
sub
int3
adc
sub
rol
push
xor
jnp
jmp
iret
adc
xchg
push
xor
mov
mov
rcr
push
cmpsb
nop
shrb
inc
cmpsl
mov
xchg
es
out
mov
imul
loopne
xchg
adc
sbb
data16
cmp
mov
popf
sbb
cwtl
sub
data16
mov
sbb
push
or
loop
pop
incl
fdivr
xor
xchg
popf
insl
mov
push
dec
push
jo
insl
rcrl
pop
mov
lock
fwait
jne
stos
lahf
xor
je
sub
mov
mov
int
cwtl
cmp
jns
push
jno
imul
pop
or
sub
mov
jae
cmp
lret
cs
or
adc
adc
jne
addr16
pushf
fistl
dec
mov
sti
dec
jecxz
outsl
ss
add
or
and
int
push
and
mov
aaa
sbb
jmp
js
sub
mov
std
jbe
dec
out
aaa
xchg
clc
cwtl
in
adc
fdivs
lcall
jecxz
insb
lea
add
jmpw
jno
aam
jl
or
mov
add
push
push
jle
push
cmp
mov
clc
mov
inc
leave
div
lods
sub
push
std
test
inc
gs
cmp
mov
xlat
adc
xlat
ror
sahf
inc
dec
xchg
jge
jno
xor
fcompl
les
call
mov
add
out
insl
xchg
xlat
mov
mov
test
repnz
pop
sbb
and
push
iret
xchg
cmp
pop
mov
and
cwtl
pop
imul
lret
jne
repnz
bound
push
mov
fistpll
push
in
imul
mov
mov
push
outsl
sbb
addr16
aad
inc
call
out
add
std
test
sbb
dec
pusha
pop
rdpmc
sub
mov
adc
or
xor
mov
mov
popa
xor
jmp
pop
insb
and
outsl
out
sbb
cmp
out
sbb
les
dec
push
lock
enter
in
xchg
aad
notb
andl
cmc
sbb
or
dec
mov
adc
rorl
mov
or
lahf
mov
or
test
push
dec
std
add
adc
cmp
inc
sbb
adc
adc
dec
stc
cmc
cld
out
mov
dec
nopl
jne
xchg
pop
inc
adc
push
mov
dec
sbb
sbb
push
addb
in
adc
add
stc
fcomi
sahf
imul
cmp
rolb
and
test
rolb
cmp
mov
pop
testl
arpl
sbb
mov
leave
push
push
mov
fbld
adc
xchg
jb
call
xchg
js
sub
adc
loop
lock
shrb
mov
shlb
push
test
adc
inc
das
jno
popf
div
sti
jl
pop
fidivs
adc
xor
push
inc
mov
leave
xchg
xchg
sbb
cmp
ret
push
mov
xchg
jp
orb
ja
test
sbb
and
ja
add
mov
aas
cmp
fdiv
inc
gs
test
outsb
sti
add
sub
lcall
pop
xchg
aam
jge,pt
adc
fdivrl
aas
frstor
push
es
jne
sbb
dec
adc
into
xor
mov
mov
cs
out
add
repnz
sub
stos
mov
mov
rolb
ret
push
nop
enter
pop
nop
and
inc
ss
pop
or
push
cs
sbb
or
jmp
lret
jns
leave
xchg
sbb
add
into
loopne
sbb
pop
mov
movsb
cmp
pop
cwtl
push
sarb
je
mov
stos
xor
pusha
std
xor
mov
lahf
lods
inc
jle
outsb
push
jg
jns
cli
jae
sbb
cwtl
ljmp
int3
icebp
lcall
ficomps
test
push
xchg
add
mov
addr16
pop
mov
xchg
ror
mov
jge
call
in
mov
and
adc
jnp
popf
insb
inc
pop
cmp
int
mov
lret
inc
or
mov
test
push
js
cs
mov
xchg
mov
inc
ss
movsl
xchg
pop
int
lret
jno
shrl
add
and
mov
ficompl
inc
xor
sahf
ds
aad
negl
out
leave
js
mov
xchg
xchg
sahf
imul
adc
adc
ss
mov
stos
xchg
test
icebp
lahf
mov
jge
dec
mov
cmp
inc
pushf
xchg
xchg
roll
daa
mov
cltd
dec
jne
sbb
test
cmpsl
jle
inc
out
lret
andb
fwait
or
sarb
in
sbb
fisttpl
pop
punpcklbw
fistl
aas
ja
jp
xchg
xor
int
in
mov
add
pop
mov
popf
jmp
loope
or
mov
mov
mov
stc
int3
addr16
lods
adc
push
lret
enter
in
into
dec
aam
push
shll
pop
jo
addr16
popf
fdivrp
cwtl
cwtl
scas
in
jg
aad
and
call
cld
xchg
in
dec
lods
out
xor
pop
cmp
adc
mov
jl
aam
inc
sbb
out
or
inc
sarl
mov
or
pop
cmp
mov
shrb
add
fwait
pop
test
add
or
adc
test
es
push
mov
ljmp
inc
push
ss
dec
into
xchg
loopne
lret
lods
cmp
aam
arpl
xchg
pop
push
hlt
loop
mov
call
aaa
xor
notb
add
outsl
dec
pop
lret
out
add
dec
rcr
inc
or
push
push
push
push
lahf
das
nop
test
push
cltd
test
mov
cmp
sub
xor
pusha
sub
call
jo
lea
inc
sub
loope
xlat
or
sbbb
into
xchg
mov
mov
aas
sahf
push
rcrl
bound
mov
or
xchg
adc
push
mov
add
mov
mov
out
out
aas
add
add
dec
mov
push
test
ror
or
test
jae
xchg
test
jecxz
mov
sub
jns
cld
xor
pusha
or
lcall
dec
xor
jne
and
int
sub
cmp
mov
mov
cmp
and
aam
daa
jmp
pusha
pop
or
and
lea
add
mov
sbbb
sbb
add
dec
lock
push
orl
lcall
movsl
repnz
pop
add
mov
pusha
mov
mov
out
sub
xchg
fs
jle
sbb
cwtl
mov
and
pop
sbb
pop
fldl
sbb
cmp
jmp
jg
xchg
jge
add
sbb
aas
cmpsb
adc
or
ret
lds
and
xor
out
sbb
pop
filds
and
push
cmp
or
jne
int3
push
push
pop
add
int3
xchg
into
mov
jp
mov
test
or
sub
cld
mov
stc
cmp
push
mov
pop
cmp
xlat
fnstcw
or
mov
xor
scas
or
lds
loope
and
popa
fwait
ss
stos
xchg
inc
jbe
aad
out
lock
pop
ljmp
xor
divl
dec
lcall
xor
stos
notl
fsubrl
jbe
daa
pop
mov
out
out
xchg
jp
call
inc
movsl
data16
xchg
and
gs
add
sbb
cmc
rorl
in
cmc
popf
xor
and
cmp
loopne
in
xchg
dec
and
push
fcoms
xor
adc
lods
call
repz
jne
shl
mov
insl
pop
gs
xor
mov
in
or
or
add
aas
aaa
bndstx
sbb
in
test
mov
dec
jle
stos
icebp
gs
push
aam
call
jne
push
xchg
xchg
dec
icebp
dec
repnz
aam
xor
add
add
leave
out
xchg
xor
lahf
adc
test
cltd
shrb
and
or
cli
mov
pushl
lret
xchg
lahf
fldcw
jmp
mov
fsin
pop
dec
add
adc
insb
mov
test
xor
iret
mov
xlat
push
cli
jno
sahf
cmp
cmp
xchg
sbb
dec
and
jmp
enter
cmpsb
sahf
pop
cs
mov
sub
test
sbb
rolb
push
clc
jo
aas
sbbl
xchg
mov
insb
mov
out
or
adc
push
rolb
imul
pop
cmpl
into
jnp
roll
jae
mov
out
mov
mov
call
inc
bound
mov
repnz
loopne
adc
gs
in
add
dec
or
js
cltd
sub
mov
andl
push
leave
mov
add
push
mov
dec
filds
mov
test
inc
mov
pop
inc
loop
pop
jns
ljmp
cs
test
sbb
js
je
std
movsb
mov
xor
jo
cwtl
mov
ds
xchg
jmp
stc
dec
xchg
nopl
sbb
xor
dec
push
sub
xchg
mov
test
mov
mov
mov
sbb
dec
enter
dec
or
loope
pop
call
mov
cmc
pop
popa
mov
xor
les
lods
clc
and
rolb
pop
lds
sbb
out
out
into
movsb
les
push
cli
movsl
mov
sub
xchg
mov
lret
fadd
dec
dec
sbb
push
xchg
add
scas
push
or
and
scas
mov
out
dec
fsts
ret
shrb
sti
ja
inc
jns
fmull
inc
cmp
nop
jmp
mov
add
and
xor
sub
mov
and
sahf
popa
loope
add
loope
mov
lcall
adc
adc
call
negl
and
cmp
fs
out
adc
pop
repnz
push
cmp
in
pop
inc
stos
into
sbb
dec
add
cld
sbb
mov
loope
ror
pushf
iret
push
xchg
pop
call
adc
pop
jge
jle
imul
xor
push
ljmp
mov
inc
inc
test
add
bound
jl
and
push
push
arpl
sub
xor
xor
jns
jecxz
pop
xor
pop
push
jno
mov
cmp
sarl
xchg
cltd
xchg
pop
mov
jmp
stc
divb
add
enter
sub
sub
imul
xchg
and
int3
push
cmp
ljmp
rorb
xor
pop
in
mov
push
cld
mov
mov
pop
mov
mov
cwtl
lds
rcrl
fildl
pop
shll
popf
int
lock
ret
cmpsb
mov
pop
shrb
out
imul
pop
fadd
imul
lock
out
dec
rolb
jmp
push
out
push
pop
cmpsl
pop
movsb
loope
test
out
cmc
push
dec
xor
mov
adc
and
add
clc
push
or
dec
xor
xchg
enter
pop
subb
orb
stos
ljmp
scas
mov
pop
jl
fdivrs
outsb
nop
or
pop
push
lcall
fwait
test
xchg
pop
add
push
xchg
inc
jno
add
mov
push
stos
outsl
push
je
rcl
or
mov
jge
or
mov
push
je
xchg
mov
pop
js
jnp
test
inc
sarb
mov
adc
shll
cs
divb
sahf
sahf
jp
or
in
adc
out
xorb
lcall
pop
scas
sbb
cmp
or
and
sbb
aas
push
fwait
dec
psrlq
or
inc
jg
iret
inc
mov
insb
pop
inc
adc
repnz
pushf
in
mov
xchg
adc
aaa
ja
lods
and
sub
test
dec
push
or
xchg
xchg
jae
push
xlat
iret
dec
into
sub
repnz
mov
in
pmaddwd
insb
dec
mov
call
mov
adc
repnz
jne
rcrb
pop
ss
push
fistl
add
and
push
dec
add
dec
and
and
out
add
mov
xor
imul
mov
cmpsb
mov
pop
fsts
push
negb
outsb
test
repz
dec
ja
test
rcll
mov
shl
dec
repnz
hlt
fcmovu
repnz
adc
adc
shlb
lock
or
data16
test
xchg
callw
pushf
mov
adc
loopne
ds
jl
dec
pop
add
loop
mov
mov
lods
aad
mulps
dec
pusha
cmp
jmp
das
scas
xchg
mov
add
add
inc
mov
mov
repz
dec
xchg
mov
or
jp
popa
jo
sbb
push
push
pop
std
dec
aam
push
outsl
push
ss
test
sub
mov
shrl
roll
push
pop
int3
cwtl
push
inc
mov
mov
jmp
jns
lock
fistpll
xchg
insb
scas
dec
dec
test
and
fidivrl
lds
addr16
hlt
fstpl
pushf
inc
mov
lret
leave
xchg
jp
adc
adc
or
outsb
test
push
rcl
xlat
xor
jns
out
dec
inc
sub
test
adc
scas
in
adc
fwait
shll
adc
xor
or
rcrb
cmpsb
push
adc
aam
mov
add
inc
jge,pn
jp
mov
adc
sbb
pop
lock
js
into
and
or
fstp
mov
mov
bound
adcl
in
shlb
aam
not
dec
mov
imul
std
popf
and
push
lock
push
jg
aas
adc
cmpl
notl
les
push
clc
cmp
cmpsl
aas
xchg
cmpsl
push
imulb
sbb
cmpsl
mov
cwtl
daa
js
jg
out
push
mov
cmpsb
mov
jecxz
fiaddl
xor
loopne
mov
push
cltd
aas
rorl
nop
pop
mov
je
gs
outsl
sbb
xchg
mov
cmp
push
xor
lods
xchg
sub
xor
cltd
inc
push
pop
and
into
in
mov
and
mov
shlb
ja
aas
ret
pop
jmp
push
scas
sub
add
sub
cmpsb
in
fwait
pop
and
aad
loope
es
mov
imul
movsb
mov
inc
mov
push
mov
jle
add
sub
lret
sub
cmp
xor
popa
cmpsl
and
sub
and
ret
fidivs
dec
popf
orps
jae
cmp
decl
lds
insl
inc
dec
push
mov
jns
out
mov
loopne
and
xor
bound
pop
dec
push
jle
stc
sbbl
movsl
sub
jg
fidivs
test
ds
xor
dec
lcall
lea
cwtl
mov
xor
fbstp
or
sahf
add
sub
aam
fwait
xchg
xchg
jb
xchg
das
add
cmp
sub
hlt
rorb
or
xchg
pop
sbb
js
pusha
dec
adc
std
rcll
pushl
jp
movsl
mov
push
xchg
lods
fcoml
pop
mov
mov
mov
pop
popa
dec
push
sbb
stc
bswap
out
or
inc
jecxz
stos
cmp
mov
xlat
scas
push
mov
cmp
push
xchg
jae
pop
cmp
jne
iret
out
xor
jne
inc
orl
lret
aad
in
inc
repz
fimuls
shrd
insb
lahf
gs
xchg
pop
fildl
sbb
mov
mov
mov
and
sbb
loop
out
jl
inc
push
addr16
sbb
lret
xor
loope
sub
and
leave
push
inc
dec
cmp
push
mov
jnp
mov
jge
mov
loope
ror
xchg
loopne
xchg
or
andb
in
adc
fisttps
xchg
je
mov
jl
or
add
sbbb
sbb
jne
mov
add
dec
push
dec
fistl
mov
enter
daa
lds
das
lahf
lds
lods
add
into
jecxz
push
or
mov
scas
outsl
cmpsb
inc
iret
es
popa
inc
adc
pop
sarb
aad
jbe
aam
sbb
hlt
sbb
pusha
outsl
push
pop
mov
lcall
inc
sub
aas
ds
scas
ss
fcmovnb
sbb
scas
mov
jmp
ja
or
inc
mov
adc
push
pop
rcrl
push
and
jmp
addr16
or
adc
cmp
jno
shrl
add
imul
jmp
adc
outsb
nop
loop
daa
lods
dec
inc
push
and
mov
leave
adc
mov
mov
movsl
loope
rorb
scas
xor
cmp
mov
push
pushf
bound
adc
inc
aaa
arpl
jnp
inc
sarb
mov
repz
mov
js
xchg
pop
shrb
pop
rcrl
sbb
jg
lret
push
and
dec
pop
push
lahf
sub
mov
div
adc
adc
mov
rcll
int3
shrb
and
push
clc
fldcw
or
test
fwait
cmp
arpl
or
jle
or
mov
xchg
test
dec
and
fs
xchg
cmp
movsb
and
cmpsl
movsl
imul
enter
sbb
stc
sub
xor
lret
nop
ja
mov
lock
in
and
push
decb
test
pushf
out
inc
ds
cs
cmp
jl
pushf
ljmp
out
int
mov
into
add
jecxz
clc
je
dec
xor
mull
test
add
fdivs
bound
in
jge
mov
push
mov
xchg
mov
cmp
xlat
jne
in
mov
push
adcb
arpl
cltd
mov
arpl
lock
pop
or
mov
enter
and
cmpsl
movsb
in
mov
mov
scas
in
aaa
mov
xchg
and
dec
mov
ret
xor
xchg
popa
movsl
repnz
call
add
shll
inc
movsl
lret
shll
xor
hlt
cmp
adc
outsl
push
push
mov
sub
cmpl
das
mov
sbb
lods
in
das
jo
xchg
cmc
push
sbb
js
out
notb
fimuls
fbstp
cmpsb
sbb
lcall
push
push
pop
je
std
mov
call
jle
or
repnz
mov
ffree
ja
gs
mov
push
daa
out
pusha
dec
mov
pop
ret
jge
pop
cs
dec
loop
xchg
sbb
pop
mov
cmp
mov
cmpsb
jl
gs
shlb
in
dec
pop
sub
mov
mov
lcall
out
mov
jle
mov
arpl
mov
mov
repz
mov
xchg
mov
stos
or
lea
mov
push
push
sub
adc
or
sub
gs
cltd
add
loopne
sub
aaa
das
push
pop
and
pop
cmp
sub
call
enter
ret
data16
hlt
rcll
loop
sub
sbb
lea
outsl
inc
cmpsl
aad
dec
push
cmp
or
dec
out
push
shll
lcall
pop
adc
or
mov
jge
mov
mov
imul
test
lret
mov
push
aaa
shrb
cld
popf
iret
repnz
adcb
mov
dec
movsb
dec
and
push
mov
repz
add
mov
inc
icebp
je
jmp
outsl
cmp
sahf
lret
cltd
outsb
mov
sahf
mov
loop
pop
sahf
adc
leave
inc
cwtl
sahf
xlat
dec
lret
repz
in
loop
pop
push
push
jbe
cmp
pop
aad
or
mov
ja
fwait
out
mov
lods
cltd
mov
scas
mov
mov
lret
andb
in
rclb
mov
or
fdivrs
ficompl
outsl
lods
mov
cmp
popa
sub
jnp
aad
sbb
add
and
xchg
fs
imul
lds
xchg
sub
pop
jge
push
adc
add
cltd
or
fwait
dec
push
add
cmp
cmc
and
mov
push
scas
aam
adc
movsl
pop
sbb
sbb
sub
leave
std
pop
push
pop
jg
adc
xchg
mov
mov
rcl
mull
jle
pop
lock
cmp
xchg
cmc
clc
cmp
adc
lcall
sub
xor
js
jge
pop
push
or
mov
mov
dec
or
xor
lock
pusha
mov
sub
dec
into
in
add
mov
mov
jl
cld
pop
jbe
sbb
lods
add
add
addl
dec
outsl
dec
push
add
mov
dec
jb
xor
bound
inc
decl
sub
sahf
mov
enter
mov
sbb
xlat
pushf
and
or
outsl
cmp
jbe
imul
xchg
mov
pop
out
rorb
loop
test
fsubl
inc
je
xchg
in
shl
mov
mov
outsl
stc
cmpl
out
cmp
das
sbb
xlat
addr16
stc
loopne
inc
cmp
insb
or
ficompl
pop
in
lcall
xchg
or
dec
adc
push
ja
push
scas
push
mov
int
pop
scas
xchg
sbb
add
js
inc
cmp
aas
arpl
jns
faddl
xchg
sbb
push
mull
std
fcomi
mov
scas
dec
sti
or
shlb
xor
mov
pop
in
mov
xchg
pop
test
pop
dec
in
aas
loopne
pop
into
pop
mov
xchg
sahf
scas
cmc
add
mov
adc
popaw
pop
frstor
stc
test
ficoms
jne
test
push
push
ret
mov
pop
int3
pop
xchg
pop
stc
jbe
jno
xchg
mov
mov
xor
sbb
fisttpll
sub
adc
cmpsl
test
nop
pop
push
sbb
mov
test
mov
subl
sub
je
pop
sbb
push
push
loop
insl
fisubs
adc
pop
xchg
lret
imul
jno
xlat
ret
cmp
test
and
xor
aas
loopne
mov
lds
jno
add
sbb
fldenv
pop
insb
jl
shll
sub
cmp
lods
or
loopne
or
sbb
shrl
in
sub
xor
repnz
jae
pop
in
lret
dec
inc
xchg
add
mov
mov
lcall
inc
fmulp
pop
stos
mov
xchg
xchg
inc
mov
and
xor
out
add
filds
mov
sti
sarl
lods
xchg
add
push
pop
scas
movq
cmp
jo
in
xchg
jo
cmpl
dec
mov
push
daa
into
scas
cmp
xchg
mov
adc
mov
lods
adc
shll
fistl
adc
pop
out
jns
ret
daa
inc
inc
or
lahf
dec
xor
fdivs
in
add
push
and
mov
loop
inc
sub
adc
shlb
mov
ds
add
rcrl
outsb
and
mov
and
jp
iret
out
jns
dec
lods
fs
cmp
insb
lock
xchg
divl
test
arpl
cli
setne
loopne
or
movsb
jge
jns
fidivrl
outsl
sar
mov
xchg
xchg
vmwrite
call
xchg
std
leave
jae
mov
inc
xor
push
aad
mov
ficoms
out
or
pusha
xor
pop
or
add
stos
jae
test
ja
test
loop
xor
xchg
sti
xchg
jne
fcoml
and
imul
inc
out
inc
inc
cmc
sub
xchg
mov
testb
cmp
inc
cmp
loopne
mov
das
es
xor
stos
or
inc
mov
ss
adc
xor
filds
xchg
les
mov
inc
and
pop
into
push
lds
ja
cmp
xor
nop
and
mov
xchg
jg
movsb
inc
pop
xor
inc
fildl
push
fdivl
enter
int
icebp
mov
les
roll
sub
push
hlt
mov
push
xchg
xchg
fsubl
sbb
dec
jmp
icebp
adc
andb
mov
jg
movsb
and
and
cli
jg
mov
jecxz
xlat
jg
aad
add
test
adc
and
inc
sub
lret
lahf
fs
xchg
into
inc
clc
in
cmp
mov
cmp
clc
pop
inc
pushf
movsb
nop
adc
or
xor
mov
jmp
mov
jmp
outsb
lods
lds
xor
xchg
pusha
pop
in
sub
fs
mov
pop
adc
jge
mov
push
adc
push
arpl
dec
dec
mov
mov
arpl
ret
mov
clc
inc
ret
int3
pop
call
cltd
mov
cmp
in
cmp
mov
orb
addr16
jmp
jp
repnz
lahf
test
mov
loopne
pinsrw
xchg
scas
mov
or
je
pop
sahf
and
pop
cli
mov
test
sbb
lods
xchg
adc
subb
lret
or
dec
aam
adc
fbld
add
xchg
in
jg
fmull
nop
push
inc
hlt
dec
sub
lret
clc
lock
add
and
fwait
icebp
pusha
outsb
jl
sub
inc
fs
or
out
dec
or
pop
push
leave
test
mov
lea
shll
mov
loopne
add
aaa
xor
dec
into
out
cmpb
out
mov
mov
mov
mov
add
mov
lds
je
or
mov
jae
icebp
push
fisubl
sub
jo
cld
pop
cmpsl
aas
push
mulb
or
call
adcl
jecxz
push
push
add
dec
dec
test
dec
mov
inc
test
aaa
das
adc
inc
repnz
add
addr16
in
xchg
cmp
push
jle
aas
mov
xchg
fnsave
jae
adc
jl
out
pusha
xor
lods
mov
xlat
jmp
pop
mov
adc
push
loopw
push
dec
cli
jmp
mov
gs
xchg
mov
xor
test
out
iret
shll
mov
and
push
pop
imul
pop
stos
mov
cmpsb
adc
jecxz
gs
les
xchg
or
jne
lcall
mov
hlt
fnstsw
pop
mov
fcompl
or
cmp
add
lods
dec
int3
adc
sar
adc
xor
cmp
sbb
dec
and
sub
inc
sub
test
subb
push
jp
adcl
shlb
nop
imul
pop
inc
sub
inc
pushf
jno
out
pusha
pushf
popa
add
or
insl
cmp
xor
push
cld
sti
lahf
or
jnp
into
movsl
lods
xchg
repnz
adc
xchg
mov
lret
ljmp
in
dec
out
sub
and
mov
sub
pop
pop
test
inc
inc
aam
les
cmp
leave
lret
inc
inc
mov
and
test
mov
mov
mov
lahf
sahf
in
fwait
and
jle
out
movl
cltd
ljmp
pop
cld
test
adc
dec
and
cmp
adc
mov
aam
iret
xchg
nop
dec
xchg
pop
test
add
add
xor
les
jns
mov
push
mov
int3
imul
decl
push
test
xor
icebp
mov
sub
push
mov
mov
xor
out
xchg
pop
push
lock
in
sub
iret
or
movsb
xchg
mov
popf
movlps
xchg
xchg
cmp
xor
cltd
push
aad
mov
or
or
daa
xchg
push
push
mov
test
out
jne
push
mov
or
cmc
pop
mov
cmp
pop
cmp
out
xor
xchg
mov
cmp
dec
cmc
sub
sbb
and
mov
cmp
enter
test
pop
xchg
add
sbb
pop
shrb
sbb
inc
rcl
out
mov
adc
aad
pop
loope
aas
jp
imul
inc
negb
xchg
fmuls
sub
aad
xchg
sub
pop
xor
in
icebp
out
vmread
leave
popa
lret
sti
dec
push
mov
xor
add
cmpsl
mov
int
test
cs
xchg
inc
jge
insl
mov
xchg
or
push
mov
push
movsl
insl
pop
pop
mov
movsl
aad
les
jo
mov
xor
xchg
jl
testl
in
jge
scas
in
lret
inc
lods
int
adcb
pop
push
push
sub
cmpsb
mov
leave
mov
enter
fwait
adc
int
nop
add
dec
cmpsl
lock
rolb
mov
pop
push
pop
lcall
lea
cmpsb
fiadds
jae
test
ds
lock
into
cs
pop
sbb
xchg
jl
mov
fcmove
outsl
or
jl
mov
fildl
test
jb
out
add
xor
adc
mov
xchg
sbbb
test
lea
fsubs
and
xchg
sub
in
sahf
das
and
push
jmp
jp
inc
test
push
sbb
push
pop
cmp
xor
leave
add
xor
pushf
popf
imul
fsubrp
jmp
add
inc
fdivrs
ljmp
and
cmc
pop
jmp
fidivrl
inc
std
and
gs
cmp
cmc
in
imul
mov
or
dec
movsb
xchg
out
xlat
lret
lds
dec
sbb
pop
aas
xchg
pop
lret
inc
addl
add
xor
jp
lods
pop
pop
sub
rolb
sahf
push
cmc
aas
jle
jp
inc
lods
mov
mov
movsb
adc
pop
inc
inc
xchg
xchg
cmc
outsl
jbe
push
jbe
inc
push
push
mov
sbb
xor
in
xchg
jmp
roll
xchg
std
mov
cmp
clc
mov
popa
cld
jo
ds
mov
scas
cmpsl
bnd
jmp
test
ds
pop
lret
jne
inc
pop
cmp
lds
imul
xor
push
push
pop
push
cwtl
fwait
or
insl
gs
adc
push
sahf
mov
bound
dec
out
je
mov
mov
push
mov
mov
push
pop
sbb
sub
pop
outsl
mov
pushf
inc
sti
cmpsl
mov
arpl
pop
imul
out
rcl
scas
loopne
mov
mov
mov
into
stos
ljmp
or
sbb
jo
popf
mov
cmp
movsb
das
arpl
mov
xor
inc
dec
and
test
xlat
xchg
and
or
mov
xchg
adc
mov
sarl
pop
pop
xchg
in
push
sub
movsl
add
xchg
inc
xchg
pop
test
adc
push
daa
pop
mov
popa
pop
loop
out
mov
mov
mov
mov
in
sarb
add
xor
jg
imul
jle
inc
dec
cmpsb
xchg
pop
scas
adcl
xchg
insl
imulb
xchg
std
xlat
sub
hlt
lret
push
xchg
push
pop
jo
ret
lret
sbbb
jmp
in
add
add
in
xor
xchg
push
mov
lret
test
push
mov
into
lock
test
mov
arpl
jo
ret
mov
xchg
cltd
add
fnsave
dec
daa
outsb
inc
iret
shlb
mov
mov
adc
push
int3
cmp
jmp
dec
je
xchg
outsb
mov
xor
jle
push
inc
add
insl
aas
cmc
fdivl
push
cs
in
sub
aas
mov
cmp
adc
lcall
jmp
mov
ret
and
mov
add
xchg
push
mov
popf
xor
jo
ret
loop
adcb
sahf
pop
loopne
xor
adc
aam
pushf
jae
jge
ja
mov
inc
and
dec
cwtl
mov
ds
test
insb
fwait
imulb
repz
and
cwtl
jo
inc
cld
movsl
mov
push
adc
jae
movsb
cmc
add
je
adc
xchg
movsl
ds
fdivrl
mov
and
xlat
mov
scas
jns
movsb
out
sti
add
loopne
pop
pusha
cli
and
es
sti
sub
mov
pop
or
jge
add
adc
adc
mov
or
push
sbb
adc
mov
idivl
inc
icebp
dec
fs
pushf
xor
lea
gs
pop
mov
mov
pushf
test
inc
loop
popf
sbb
push
adc
fildl
test
movsl
add
cld
inc
lahf
xor
aad
xor
mov
pop
sub
adc
out
add
pop
sbb
into
add
fnstcw
test
pusha
in
icebp
dec
xchg
imul
jo
in
jmp
mov
and
mov
xchg
mov
mov
sbb
push
fcomip
push
aas
fs
dec
xchg
hlt
or
push
addr16
movsb
and
xchg
mov
scas
sub
inc
pushf
add
add
int
xchg
orl
pop
sub
xadd
jmp
std
xchg
rcrl
jb
cmp
testl
pop
divl
dec
cld
or
xchg
sbb
fistpl
xchg
add
sarl
adc
fdivrl
enter
clc
pusha
push
nop
ret
jb
in
rcrl
pop
jmp
pop
add
ljmp
mov
and
les
out
cs
pop
push
nop
xchg
xchg
subb
jbe
hlt
inc
adc
sub
mov
adc
mov
loopne
xor
pop
jg
aaa
in
jne
xor
inc
mov
gs
cmp
or
mov
sub
mov
fidivrs
daa
in
sbb
sub
pop
jns
xchg
adc
or
loop
jl
test
sub
rcll
dec
loopne
sub
mov
sub
pop
cmp
dec
test
addr16
nop
or
jmp
xchg
push
mov
mov
inc
aad
pop
jecxz
push
iret
mov
out
xchg
mov
jb
mov
shrl
aam
push
insl
out
xor
iret
add
add
in
mov
int3
call
pop
mov
lea
dec
adc
cs
pop
mov
ljmp
fsub
mov
insb
pop
sub
cmp
or
xor
mov
mov
icebp
dec
jo
mov
inc
dec
mov
cmc
sub
mov
loope
mov
pusha
dec
sub
repnz
pusha
pop
call
sbb
ljmp
les
add
aam
cmp
pop
fnstenv
pop
jno
and
cld
push
jns
adc
mov
pusha
jb
push
rclb
or
sahf
lds
push
dec
mov
les
adc
cmp
lock
jae
xchg
int
outsb
gs
popa
pop
inc
push
mov
movsl
xchg
inc
dec
push
mov
stos
enter
cmp
sub
mov
xor
cmp
ja
jecxz
mov
cmc
pushl
push
sbb
jmp
dec
xchg
sbb
lret
and
lcall
mov
gs
shrl
sub
ljmp
cli
lcall
fildll
add
repz
jge
dec
or
inc
inc
scas
aam
test
aas
stc
add
cld
dec
cltd
mov
hlt
or
adc
adc
aaa
aam
push
call
arpl
jns
cs
fdivrs
shl
sbb
lds
cmp
add
imull
int
pop
sub
ret
jns
scas
loope
aam
mov
loope
dec
jecxz
lret
jo
lcall
addr16
inc
nop
inc
cmp
clc
mov
aaa
insl
xchg
dec
out
call
sbb
mov
jnp
lcall
adc
shr
xor
pop
lods
cmp
and
loope
adc
xor
stc
sub
fmull
inc
out
mov
mov
adc
push
cld
dec
inc
pop
or
sub
ja
ja
xor
dec
push
mov
imul
dec
lods
lods
insb
push
push
adcl
sbb
arpl
sub
inc
std
lods
test
add
mov
mov
inc
adc
jne
dec
xlat
dec
aas
fdivrs
nop
std
imul
mov
fdivrs
loope
dec
ret
dec
scas
mov
cltd
cwtl
jno
xchg
mov
int3
roll
xchg
iret
ss
mov
fnstenv
xchg
insb
aas
inc
sbb
adc
mov
jp
cwtl
push
sbb
inc
xchg
in
mov
jmp
add
jle
xor
stc
cli
fwait
pushf
aas
aas
xchg
sub
cmp
cmp
mov
cld
in
mov
fimull
aaa
push
out
push
lret
sub
dec
mov
xor
mov
sub
cmp
insb
stos
xlat
ljmp
out
and
sarb
leave
enter
or
shrl
dec
clc
xor
sti
mov
out
shr
movsl
pop
cmc
lea
pusha
mov
stos
aam
push
push
add
les
es
ret
sti
mov
iret
sbb
inc
pop
cmp
jne
addr16
pop
cmc
push
cmpsb
lret
daa
pop
mov
daa
push
mov
mov
iret
xor
outsb
lea
jecxz
insl
mov
adc
mov
jne
inc
pop
mov
push
inc
mov
xorb
cmc
mov
mov
jae
dec
sbb
jle
cltd
sub
sub
aas
ja
lock
push
arpl
fwait
adc
call
pop
popf
ret
jne
sub
add
mov
push
dec
idivl
cld
jne
jmp
icebp
cmp
cltd
loope
inc
aam
and
mov
lret
push
jge
imul
das
dec
xchg
pop
nop
aas
loopne
je
push
mov
add
dec
cltd
pop
pop
mov
xor
lret
jo
scas
hlt
test
adc
add
icebp
shll
push
dec
xor
add
lods
loopne
sbb
push
mov
dec
insl
pop
fs
mov
cmp
test
lcall
dec
testb
mov
and
cli
mov
es
add
and
lea
mov
xor
push
jno
and
decl
and
shlb
aas
jnp
in
or
mov
cmp
dec
movsb
sub
jbe
push
push
clc
add
add
mov
mov
ljmp
stos
push
mov
fstl
fstps
and
dec
pop
pop
leave
lock
xchg
sahf
dec
xchg
mov
push
sbb
mov
cmpsl
clc
push
mov
mov
mov
stos
rcll
mov
fcompl
les
push
or
mov
rorb
dec
sub
pcmpgtd
aaa
dec
test
cld
mov
lahf
addl
mov
shrl
pop
xchg
and
jge
fcmove
mov
cmp
cwtl
xchg
dec
imul
std
cmp
or
jmp
mov
jge
add
lcall
cmp
inc
mov
lahf
imul
sti
jmp
hlt
fisttpl
imul
cltd
pop
lods
jp
pop
out
add
xchg
jnp
popf
data16
pop
jnp
add
or
lcall
inc
mov
jg
test
jno
cmp
call
addr16
dec
imul
insl
in
and
outsb
or
outsl
push
and
movsl
ret
mov
out
lcall
movsl
loope
lods
cmp
ret
dec
adc
ss
mov
lret
scas
imul
dec
fcoml
mov
das
ss
stos
inc
mov
push
in
xor
inc
xchg
mov
pop
lods
test
adc
lcall
fmuls
mov
mov
gs
add
mov
push
jns
dec
outsl
int
test
pop
push
mov
mov
das
fcoms
shlb
pop
ret
popf
testb
popa
addr16
ds
hlt
jecxz
test
mov
adc
cmpsl
and
scas
arpl
xor
dec
test
push
xchg
sbb
or
pusha
jmp
xchg
sbb
std
das
cwtl
fs
test
mov
cs
push
or
test
dec
jne
xchg
mov
xor
inc
pop
loope
test
sub
lods
pop
jo
add
adc
push
adc
lds
icebp
nop
xchg
lock
scas
sbb
inc
aaa
or
xchg
lret
inc
mov
cmp
pop
add
push
enter
std
stc
aad
js
xchg
push
mov
pop
sbb
sar
clc
inc
lahf
dec
es
jb
cmpb
shll
xchg
into
jb
jb
mov
xlat
pop
push
in
mov
shlb
jnp
mov
out
push
mov
test
cmpsb
jne
inc
sarl
cmc
mov
push
out
outsl
lds
jne
cmp
jecxz
lock
movsl
aas
fists
xor
mov
xchg
mov
stos
filds
xchg
sbb
inc
inc
adc
das
les
mov
fwait
xchg
lock
add
mov
les
paddw
rolb
jo
leave
ds
mov
mov
inc
push
testb
xorl
sub
lcall
into
mov
xchg
pop
inc
jb
inc
out
pop
mov
sbb
mov
mov
xor
pop
fsubp
scas
sahf
addr16
out
out
das
mov
and
lods
and
cmpsb
mov
imul
iret
iret
rcl
xchg
xchg
popf
negl
lods
nop
fimull
xchg
inc
sub
xor
insb
lahf
jbe
adc
push
mov
sbb
adc
js
xor
dec
sbb
fisubl
fildl
rorl
adc
cmpsl
or
scas
stos
icebp
stc
and
loopne
mov
mov
dec
pop
repz
dec
popa
pop
mull
xor
movb
icebp
sarb
add
loope
mov
pop
shlb
mov
in
sbb
aas
xchg
cli
sbb
or
addr16
pushl
push
fisttps
aas
cld
push
ljmp
aaa
js
out
test
cli
and
and
lcall
jns
xor
or
dec
lahf
sbb
dec
mov
cmp
test
xor
sub
jg
or
cli
pop
cli
icebp
or
lods
aad
sahf
insb
icebp
ljmp
lea
jns
fstpl
mov
adc
into
ret
xor
mov
adc
dec
cwtl
rorb
insl
mov
cmpsl
aaa
ljmp
call
int
sbb
mov
imul
in
mov
shll
repz
pop
xchg
adc
imul
outsl
repz
clc
or
and
scas
mov
sub
aaa
aad
or
in
rcrb
roll
mov
cmc
ljmp
fnsetpm(287
out
inc
and
aam
inc
push
push
out
xor
cli
mov
xor
dec
and
notl
popl
xor
mov
ss
adc
xor
jl
inc
orb
jg
xchg
int3
rcrb
test
jns
ss
imul
jae
ret
lea
cmc
sub
pop
out
cmp
cmp
pop
mov
fcmovnu
adc
out
sbb
cmp
or
fs
loope
push
jns
out
arpl
jp
xchg
jecxz
notl
ficomps
or
sub
repz
inc
jge
fnsave
test
cmp
dec
cmpl
mov
xchg
ss
pop
test
psubusb
pop
cmp
xor
pushf
shlb
daa
repnz
pop
js
mov
add
inc
sub
xlat
sub
in
rclb
imul
xor
shll
pop
imul
mov
aaa
sbb
sbb
inc
pop
sbb
mov
add
fsts
out
pop
out
ja
xor
mov
fsubrl
or
inc
movsl
push
push
stos
sti
ss
fstpt
or
or
fs
mov
dec
cld
mov
or
lahf
dec
sbb
dec
pop
stc
or
out
idivb
idivb
cmp
mov
pop
repnz
xchg
jnp
mov
mov
aam
sub
push
outsb
adc
xchg
xchg
mov
in
outsl
add
and
jle
push
stc
mov
mov
shll
sub
clc
mov
hlt
sbb
fs
pushf
int3
sarl
push
lods
addr16
fidivrs
inc
and
orl
fisttpll
loop
adcb
push
sbb
adc
lcall
movsb
jecxz
inc
cmp
xor
inc
push
inc
cwtl
popf
pop
stos
out
call
xchg
push
push
ljmp
push
jne
popa
cld
inc
movsb
pusha
scas
and
pop
push
test
pop
xor
lock
cwtl
cmp
test
in
cmpsl
mov
jle
mov
call
dec
adc
sub
inc
ja
arpl
mov
addr16
js
out
ljmp
xor
enter
fistps
ss
jnp
xchg
adc
xchg
testl
pop
xor
prefetcht2
push
hlt
test
sbb
pusha
or
mov
push
pop
lock
adc
orb
mov
inc
mov
lahf
or
inc
stc
loop
adc
and
or
push
add
cmpsl
pop
jge
add
dec
imul
iret
stos
jmp
dec
mov
lcall
jbe
test
out
in
subl
roll
cmp
lahf
jmp
mov
mov
rcrb
sbb
cmp
jbe
or
mov
and
dec
lods
dec
rorb
iret
dec
call
pop
or
out
or
fsts
push
iret
mov
xchg
pop
fwait
test
aam
dec
sub
dec
sub
lds
adc
xchg
cmp
cld
inc
mov
xchg
bnd
sbb
cmovns
scas
and
pop
push
nop
jle
inc
cmpsb
bound
inc
scas
idiv
sbb
sub
adc
shll
sub
mov
shlb
add
jne
sub
fdivrl
push
mov
mov
dec
mov
sti
mov
fnstenv
mov
xchg
cmp
jmp
jmp
mov
xor
mov
cld
rcrl
daa
mov
pop
jns
vinsertps
fnstenv
mov
dec
cmp
push
sti
dec
cmc
add
js
mov
sbb
sarb
lds
insl
out
dec
dec
gs
fidivrl
pop
or
or
test
adc
push
lods
cmpsl
stc
inc
inc
outsb
es
lods
psubsb
in
inc
push
sbb
aaa
enter
cld
ja
mov
mov
std
push
sbb
xchg
out
jg
or
inc
and
sbb
sub
sbb
jg
adc
adc
pushf
scas
sbb
rolb
or
sub
mov
inc
push
rclb
cmp
in
sbb
push
push
jae
cmpsl
inc
jecxz
lret
pop
and
mov
dec
cltd
ret
add
in
js
cmc
adc
xchg
stc
wbinvd
movsl
sbbl
adc
clc
sub
push
jmp
addr16
fildl
cmc
lret
inc
push
cmpb
xchg
sahf
push
lods
pop
aam
loope
push
adc
jno
mov
cmpb
cmp
fcmovb
mov
lret
repnz
inc
fwait
fs
pop
jne
push
leave
ljmp
xor
push
xchg
mov
outsl
add
mov
push
jge
stos
xor
outsb
cmc
dec
mov
jge
add
call
inc
out
inc
loop
sbb
dec
push
mov
out
sbb
popf
cmp
pop
enter
cmp
inc
popf
es
sbb
inc
sub
xor
inc
dec
aas
andnps
cmp
mov
mov
jle
sub
clc
jmp
out
sub
filds
test
outsb
fsubs
dec
test
pop
adc
fdivs
or
rcrl
mov
inc
adc
lret
mov
mov
pusha
dec
lock
outsb
and
xchg
scas
add
mov
adcl
xchg
fisubrl
lahf
frstor
pop
jnp
mov
addb
sub
xor
mov
mov
popa
mov
xor
ffreep
test
jle
xor
xchg
adc
sti
fldl
test
fdivrl
addb
mov
add
loop
and
gs
rcrb
add
cmpsb
icebp
iret
dec
test
insl
sub
enter
divl
adc
mov
mov
and
out
sbb
pop
xchg
faddl
jns
test
xchg
lret
push
and
push
sub
xor
lret
lods
fcomps
dec
dec
loope
xchg
pusha
sti
mov
stc
dec
dec
push
cli
cmp
jb
out
mov
lahf
lods
das
pushf
insl
inc
pushf
jl
dec
cwtl
push
sub
push
aaa
fcmovb
hlt
repz
add
mov
int
out
jl
mov
pushf
sbb
std
loopne
pop
xorl
pop
mov
xor
mov
inc
mov
daa
dec
add
stc
and
pop
mov
fbstp
repnz
xor
adc
and
jae
mov
jp
and
popa
sbb
push
ret
daa
fildl
push
pop
mov
fisubs
xorl
cmc
notl
xchg
fistps
mov
cmp
pop
sub
mov
adc
mov
pop
lock
and
enter
mov
cmpb
fs
dec
mov
jb
sti
push
stos
imul
cld
fnstcw
out
mov
dec
xchg
cld
jne
aas
mov
add
test
jmp
xchg
inc
aaa
pop
mov
cmpsl
sti
dec
cs
imul
lea
jmp
jne
movmskps
cmp
mov
in
out
sub
dec
cmp
xlat
jae
call
push
stos
mov
inc
mov
rcll
jns
pop
jne
shr
fcoml
imul
jmp
add
adc
pusha
stc
lods
add
cmp
mov
pop
dec
or
jo
sahf
es
push
inc
sub
jns
rorl
mov
bound
pop
cs
int3
mov
sub
cmpsb
out
cmp
pop
add
nop
in
imul
sbbl
test
cmp
mov
pop
push
sarb
popa
and
push
repz
gs
das
pusha
mov
scas
outsb
sbb
stos
mov
addb
xchg
sub
jge
fwait
mov
in
pushf
imul
loopne
xchg
iret
fs
clc
push
mov
mov
scas
push
ror
mov
mov
push
and
add
orl
jno
adc
sbb
js
faddl
fs
mov
inc
jge
repz
or
jno
dec
scas
xorb
test
jns
sub
loopew
shl
ficompl
jmp
jl
movsb
push
mov
cmp
mov
das
push
cmpsb
inc
xor
jecxz
push
and
outsl
push
leave
jnp
ja
incl
stos
xchg
or
mov
xchg
fdivl
mov
jmp
out
xchg
mov
test
and
ja
fiaddl
inc
les
mov
jg
adc
or
scas
mov
pushf
fadds
inc
aad
stos
sarb
mov
popf
or
xor
lods
pop
popf
sub
xlat
pop
cli
popf
pop
mov
cmp
out
sub
icebp
call
aaa
xchg
scas
add
rol
push
lea
pop
inc
and
xor
push
push
jnp
scas
jbe
jnp
xchg
push
je
ja
cltd
stc
test
xor
mov
out
jmp
mov
ja
sbb
fs
or
jb
push
sub
je
inc
or
dec
mov
add
push
add
cli
pop
push
mov
js
cmpsl
jae
add
xchg
cmp
gs
mov
inc
and
addr16
or
insl
jns,pn
jb
addr16
jmp
sbb
ss
or
pop
lds
lret
dec
lea
adc
add
test
fwait
scas
aas
dec
stos
mov
out
testl
icebp
mov
mov
lock
sub
sar
cmp
lea
fistpll
in
cmp
and
adc
out
xchg
push
aad
data16
add
iret
aad
lcall
pop
shl
sub
popf
push
lahf
mov
aas
js
push
lret
adc
or
push
ds
push
pop
leave
push
dec
mov
daa
lahf
sti
ss
jmp
mov
xchg
or
ret
mov
mov
push
lds
push
out
popf
ss
dec
ret
rcr
mov
ljmp
mov
neg
push
and
insl
in
inc
cmp
test
sub
nop
jecxz
inc
pop
mov
insb
in
aad
fucomi
dec
repnz
push
rclb
mov
in
jecxz
into
insb
mov
andb
jg
mov
jge
outsb
lods
push
jge
cwtl
js
int
mov
lea
in
in
dec
ljmp
or
cmp
mov
imul
jecxz
cmp
xchg
sub
jge
aam
or
pop
sbb
sarb
fiaddl
test
hlt
push
cmp
push
pop
sub
mulb
loop
lret
mov
xor
ss
sub
clc
pop
cwtl
pop
xchg
flds
hlt
mov
inc
cmp
cli
sbb
xor
mov
inc
sbb
xchg
jecxz
repnz
mov
sbbb
data16
push
pop
movsb
es
testb
adc
gs
mov
sub
adc
and
insb
daa
cmp
pushf
pushf
pop
out
rolb
adc
xor
jnp
mov
inc
or
fwait
lods
cmp
leave
fcmovb
fdivl
insl
adc
imul
push
scas
les
fwait
test
mov
outsb
inc
inc
sbb
jno
ds
pop
lret
out
fcompl
insb
mov
or
fnstcw
mov
mov
cmpsb
mov
inc
loopne
cmpsl
stc
add
pop
cli
aad
pop
add
and
mov
shl
jns
sbb
sub
dec
adc
jne
icebp
clc
into
ror
mov
ret
jbe
add
addr16
popa
in
movsb
xor
stos
and
inc
inc
cmp
mov
inc
pop
test
ljmp
sub
jl
sbb
jo
xchg
add
aaa
rorl
cmp
add
mov
jl
rorl
add
mov
push
add
fcmovne
inc
add
dec
sahf
cmp
in
or
push
jl
das
push
pushf
repnz
dec
lahf
or
decl
xchg
mov
sbb
out
sub
int3
mov
fisttpl
cld
shlb
jle
lods
mov
sub
adc
mov
mov
call
lods
arpl
ja
icebp
scas
insl
jno
out
into
and
mov
sbb
pop
or
sbbl
push
loopne
xor
jg
icebp
repnz
push
daa
pop
inc
mov
pop
sbbb
outsl
je
mov
mov
and
cltd
xchg
call
sahf
push
mull
sub
adc
movsl
in
call
addr16
ljmp
clc
fwait
xor
cmp
mov
jle
pushf
xchg
loopne
push
pop
jl
je
sub
lahf
daa
fwait
out
xchg
data16
add
sub
fdivp
js
fnsave
je
int
in
jecxz
and
adc
in
test
or
js
add
cli
or
mov
xor
in
sub
movsl
xchg
xchg
je
insb
adc
push
icebp
pop
adc
pop
int3
int
sub
sbb
xchg
add
xor
stos
jo
sub
idivl
cmpsl
daa
in
roll
cmp
movsb
cmp
cmpb
popf
imul
mov
testl
jne
lods
movsl
jno
adc
and
mov
fwait
scas
aaa
movb
lcall
imul
out
push
xchg
leave
in
inc
lods
xchg
adcb
aas
stos
cs
lods
in
add
repnz
jecxz
jmp
cmpsl
jns
lds
iret
pop
outsb
aaa
in
jo
push
jge
cli
inc
int3
push
xchg
lods
loopne
push
sbb
nop
mov
out
jmp
mov
stc
cli
jns
stos
rolb
pop
pop
imulb
cmpsl
mov
or
jne
divl
outsb
pop
sarl
jb
popf
sub
stc
sub
xchg
movsl
mov
and
out
xchg
push
repz
inc
cmp
dec
mov
push
push
testl
cmp
xchg
pop
jg
mov
mov
and
mov
sti
sbb
call
jg
push
es
mov
push
out
lods
ljmp
xor
lods
push
aaa
cmpsl
adc
xchg
dec
dec
dec
and
sahf
mov
sub
cli
pop
stos
cld
sbbl
add
divb
push
adc
cltd
add
mov
sbb
gs
scas
push
pop
cmp
dec
mov
lock
pop
movsl
pop
sub
cmp
push
sbb
sbb
adc
bnd
jecxz
xor
insl
mov
cs
and
dec
push
sub
inc
or
aam
inc
scas
sbb
cmc
cmc
sbb
ja
cmpsb
sbb
or
out
aam
adc
das
sub
mov
lock
push
adc
int
addr16
stc
aas
iret
mov
dec
or
mov
mov
lea
cli
fldl
push
test
gs
cmp
push
or
fstpl
jb
dec
hlt
int
call
mov
xor
inc
out
mov
pop
popf
test
ds
adcl
and
repz
inc
int
add
popf
sub
push
pop
imul
adcb
loop
in
pop
dec
mov
mov
shll
push
sbb
mov
add
cld
daa
inc
iret
test
push
add
dec
pop
daa
movsb
lods
cmp
stos
xor
sub
and
imul
in
fcmovne
jp
jge
pop
jb
out
mov
cmp
and
stos
lea
bound
ss
icebp
stos
out
out
out
add
orb
dec
sub
jmp
lret
push
dec
add
mov
mov
loope
fs
arpl
or
jbe
adc
add
or
push
ret
loope
in
insb
jmp
int3
mov
xorl
jns
andl
jge
std
cld
and
cmpsb
fldl2e
and
fbstp
std
mov
stos
inc
pop
lods
or
sub
or
pop
in
mov
and
adc
dec
inc
push
iret
add
mov
pop
push
popf
sub
clc
and
es
jne
sbb
call
adc
cmp
ds
jae
sbb
jne
mov
mov
jmp
test
and
lahf
lods
test
lret
daa
daa
fnstsw
sbb
rcll
jle
push
and
dec
addr16
fwait
sub
push
xchg
in
add
dec
cli
mov
insl
mov
jg
add
je
mov
xor
dec
enter
xchg
pop
lods
cwtl
mov
inc
inc
stos
mov
jbe
mov
inc
cmpb
in
dec
sarl
out
pop
xchg
mov
not
inc
cmp
push
add
sub
xchg
push
cli
lock
and
mov
add
push
loopne
adc
lahf
mov
test
push
aam
mov
lods
add
sbb
pop
ret
inc
mov
test
fwait
cmp
int3
imul
sbb
mov
orb
jne
call
test
pop
rcrl
imul
data16
adc
sbb
aaa
or
mov
add
notl
stos
stos
add
dec
mov
xchg
jecxz
lods
push
popf
and
shl
ds
sti
iret
xor
jae
mov
xor
mov
cwtl
jne
stos
xchg
insl
cmp
aam
pop
or
cmp
notb
jge
mov
movsl
jmp
sti
jb
cmp
jmp
or
mov
mov
pop
sarl
fsub
sbb
jno
pop
jmp
aam
test
arpl
mov
scas
ret
jge,pn
ficompl
jae
mov
mov
test
ljmp
cld
xor
mov
xchg
adc
xor
sbb
clc
lea
xchg
jecxz
inc
mov
push
or
arpl
fnstcw
cmp
mov
in
popa
jbe
pop
push
fistps
cmp
ja
pop
jns
shrl
and
fldenv
not
push
push
mov
inc
out
aaa
pop
icebp
jmp
jecxz
pop
cwtl
sub
lds
sbb
inc
repz
mov
insb
aad
cs
jb
lahf
add
jns
orl
cwtl
in
scas
aam
pop
jb
cld
jne
xor
cli
in
lahf
orb
jae
loop
fnstsw
cmpsl
leave
pop
pop
mov
inc
dec
xchg
jno
xchg
xor
cmp
pop
fisttps
addb
xor
in
and
or
push
mov
dec
push
lods
add
test
pop
and
and
xchg
jmp
push
xchg
pcmpgtb
dec
roll
adc
mov
and
cli
push
jmp
fcoml
sti
dec
inc
imul
push
mov
int
dec
fnsave
dec
pusha
out
test
sbb
out
mov
pop
add
xor
jo
mov
dec
cwtl
insb
imul
fistl
scas
icebp
xchg
rorl
or
adc
mov
xchg
pop
mov
inc
leave
mov
xor
sbb
or
daa
int
mov
and
rcrl
inc
mov
and
push
into
mov
xor
push
imul
mov
iret
mov
sbb
fs
pop
rcll
mov
icebp
or
jmp
jmp
xor
or
lods
outsb
mov
aas
add
add
cmp
jl
add
mov
pop
int3
xchg
rolb
inc
push
scas
ja
adc
mov
aas
lea
push
xor
mov
ficoml
mov
jno
inc
xchg
xchg
loop
call
iret
inc
ja
xchg
pop
or
mov
pushf
loop
rclb
sub
and
push
pop
shr
cltd
mov
arpl
jl
mov
xor
and
shrb
cltd
mov
cld
push
int3
mov
cs
sarb
lret
sub
in
xchg
movsl
cmpsl
or
aas
adc
cmpsl
sbb
in
mov
xorb
outsl
mov
sbb
stc
cmpb
into
sub
test
rcrb
jns
dec
roll
shld
insw
repnz
out
lods
fsubrl
jb
adc
sarb
mov
nop
mov
cmpsl
or
cmpsl
int3
sub
adc
not
lods
inc
repz
clc
loope
and
cs
xchg
sub
mov
test
xchg
sub
cmp
cs
xchg
or
lods
push
out
or
pop
ret
mov
vphaddbq
mov
fs
imul
fsubr
jbe
push
nop
inc
push
mov
cmp
cmp
adc
mov
adc
out
hlt
into
jns
roll
adc
es
enter
mov
mulb
scas
js
sti
jmp
cs
lds
pop
cmp
jmp
jb
hlt
mov
not
jne
ds
jnp
andb
xor
test
imul
inc
stos
jne
jne
cltd
jl
add
mov
imul
sahf
xorl
sbb
add
xor
daa
adc
adc
sbb
xor
repz
mov
insl
sbb
gs
mov
push
jmp
leave
adc
jns
lods
push
mov
xchg
mov
pushf
xor
fdivp
pop
leave
or
mov
push
dec
icebp
add
out
loop
sarl
cmp
push
cmpb
cs
xchg
mov
fcomip
add
mov
and
sarl
enter
or
jae
jg
shl
negl
add
lds
in
or
inc
cmp
daa
and
pop
mov
loopne
std
scas
lods
dec
cmp
jo
aaa
rcr
dec
shll
roll
mov
out
icebp
pop
mov
cmp
adc
cmp
inc
pop
sub
inc
pop
adc
in
and
adc
mov
or
movsb
lods
out
ljmp
pop
movsb
fisubl
inc
xchg
cmp
cld
xchg
adc
xchg
mov
mov
cli
cltd
lds
aad
loope
ds
adc
nop
sub
loope
ss
cs
sbb
fs
lahf
cmp
fninit
aaa
mov
out
clc
push
xor
sbb
jge
sbb
ss
or
mov
insb
lock
push
xchg
arpl
loop
mov
add
enter
test
cmpsb
mov
shlb
divb
fildll
out
rorb
popf
lds
adc
add
jge
sbb
pop
int3
jb
jmp
je
push
idiv
push
aam
popa
add
pop
pop
jbe
aas
stos
jne
lcall
inc
inc
sub
or
movsl
mov
outsb
xchg
mov
jp
pop
push
mov
fldl
and
into
add
sbb
sub
int
rclb
mov
inc
mov
sub
test
push
or
cli
jb
gs
cmpsb
add
jmp
icebp
int3
xor
sub
ds
cmpsb
outsl
xchg
fldl
xor
leave
jb
hlt
lret
roll
enter
fdivs
mov
or
sub
iret
repz
insb
dec
ja
pop
test
pop
repnz
pop
leave
push
xchg
and
push
and
jmp
cmpsl
xchg
bound
adc
cli
sbb
mov
xacquire
mov
sbb
xchg
dec
cmpsl
es
repnz
add
dec
mov
lods
or
xchg
xor
fisubrs
or
insb
cmp
bound
hlt
adc
push
jmp
add
mov
es
mov
cmc
subl
mov
std
test
das
xor
sub
test
xchg
jnp
call
outsl
test
cmc
pop
sub
or
lret
fcompl
add
sbb
clc
inc
add
pushf
lods
or
dec
int
cmpsb
iret
fbld
push
push
or
shll
push
push
mov
aas
and
mov
cmp
testb
mov
rclb
leave
cwtl
ds
xchg
out
ret
xlat
pusha
sub
ret
adc
fcompl
out
ljmp
push
pop
lahf
mulb
xor
inc
addr16
xor
adc
gs
inc
fwait
lret
nop
jecxz
outsb
inc
dec
pop
ja
mov
ljmp
popf
pushl
adc
inc
mov
and
ljmp
jne
clc
shll
pop
jo
xchg
mov
push
into
ja
flds
cli
cmp
and
xor
pop
xor
ret
bound
popf
push
std
or
jnp
dec
sarb
add
fcomps
cmp
fnstsw
out
cmp
das
sbb
cli
sub
arpl
repz
mov
adcb
or
fcmovb
sub
push
mov
enter
mov
jp
mov
push
or
popf
adc
mov
mov
and
add
add
ss
mov
jnp
xor
aaa
in
lret
jne
add
lods
out
mov
xor
dec
mov
mov
pop
pushf
das
mov
add
stc
dec
test
test
iret
movsb
fnstcw
cmpsb
add
stc
stc
lcall
xchg
mov
cmp
decb
inc
ficomps
frndint
xor
xchg
bnd
stc
xchg
in
cmp
mov
or
lcall
mov
pop
call
cmp
mov
js
jecxz
lds
or
add
movsb
lret
push
jns
pop
fs
je
test
inc
push
cmpsl
xlat
xorl
iret
aad
mov
fdivrs
sbb
jl
adc
ret
push
mov
sbb
jb
jg
loopne
or
jbe
or
and
xchg
fildll
adc
bound
push
sbb
pop
test
enter
xor
dec
jno
fnsave
cltd
adc
inc
mov
xchg
call
mov
dec
mov
lods
mov
je
cmc
fildl
jo
mov
jg
sbb
andl
inc
mov
mov
idiv
xchg
xchg
add
mov
pop
xchg
test
sarb
jbe
sbb
mov
test
mov
xchg
jecxz
leave
sbb
ret
jo
test
sub
xchg
lock
xchg
aas
or
roll
mov
cmp
dec
ja
outsl
cmp
lret
in
jo
int
add
leave
or
sbb
movsb
jb
test
mov
rclb
lds
repnz
movsl
test
dec
mov
sbbl
sbb
jl
pop
je
sub
mov
data16
shll
mov
jecxz
jo
insb
in
loope
dec
clc
or
adc
fsubrp
add
icebp
mov
or
loopne
shr
clc
arpl
fstpl
mov
insb
outsb
xchg
xlat
cli
ds
test
in
pop
jmp
jns
xor
cs
ljmp
sbb
mov
jb
call
inc
mov
or
mov
jp
popa
xor
mov
inc
cld
sbb
mov
mov
xchg
add
mov
js,pt
mov
movsb
push
rclb
cmpsb
adc
or
adc
daa
outsl
xchg
inc
test
xchg
jno
into
lds
add
add
xchg
cmp
dec
xchg
scas
cmp
push
ss
popf
xor
cmpb
test
and
add
gs
adc
push
mov
pop
sbb
mov
iret
mov
pop
pop
aaa
mov
mov
cmp
push
pushf
push
jne
inc
jae
push
fidivrl
xchg
enter
stos
test
movsb
and
push
mov
stos
jbe
nop
mov
cwtl
cmp
or
jp
das
andb
adc
jle
sub
and
sub
in
and
sbb
enter
in
and
xchg
fstpt
sub
mov
fdivl
pop
je
xchg
lods
cmp
fimuls
xchg
adc
add
test
and
dec
ljmp
or
mov
shrl
jne
cmpsl
sub
test
pusha
dec
xchg
int
fistpll
mov
push
and
mov
loope
sahf
inc
add
adc
add
or
arpl
adc
lcall
xor
in
sbb
lcall
loopne
push
push
fcompl
daa
fimull
lcall
aad
stc
cmp
popf
out
sub
cmp
adc
mov
iret
cwtl
aam
dec
add
loop
add
shll
cltd
ds
stc
cmp
adc
inc
shll
push
nop
jmp
out
pop
test
pop
std
jg
sbb
push
nop
sbb
lret
pop
fnstcw
fyl2x
fsubrs
adc
cltd
mov
lods
xchg
push
sub
shrd
and
pusha
pusha
fiaddl
out
pop
clc
xchg
ja
roll
fildl
mov
rcl
addr16
hlt
push
and
and
push
scas
jae
loop
pop
pushf
mov
push
jge
addl
mov
lea
xchg
popf
mov
jg
jne
xlat
inc
xchg
ss
inc
xor
insb
adc
lods
test
cmp
jb
gs
stos
add
loopne
cmp
mov
lea
dec
jo
sbb
outsl
xchg
pop
addl
or
je
jge
xor
inc
or
fwait
xchg
mov
int
shll
push
imul
das
adc
pop
mov
minps
mov
push
loopne
sarb
sub
jnp
mov
jae
mov
sub
loopne
inc
pop
fcomps
pop
jg
cmpsl
lea
dec
subl
repnz
cs
cmp
inc
ret
mov
cmp
fsin
push
iret
jnp
ret
out
jp
pop
inc
std
lret
aas
sub
xchg
cmc
hlt
movsl
xor
shlb
cmp
xor
mov
xor
pop
gs
shll
add
jp
and
push
pusha
fwait
and
imul
pop
jae
xor
jp
fs
inc
loop
aam
push
or
test
inc
mov
outsb
add
sbb
cmpsb
mov
test
in
add
insl
xor
pop
in
shrl
push
in
movsl
jbe
cwtl
nop
cwtl
pop
data16
or
adcl
mov
int3
test
ss
aas
cld
ljmp
sahf
cmpb
sub
popa
xchg
and
orl
cs
push
or
mov
inc
lock
repnz
scas
aad
push
mov
or
push
add
push
adcl
lcall
mov
mov
jb
lock
pop
jmp
adc
mov
loope
fmull
xor
mov
jnp
dec
push
dec
pop
jnp
cwtl
sub
sbb
pop
adc
dec
repz
or
sub
mov
loop
pop
mov
ja
jae
arpl
sub
pusha
sub
mov
mov
jno
push
xchg
fcoms
mov
rcrb
sbb
adc
adc
mov
jp
pop
outsl
popf
ss
ja
test
jae
lea
dec
loope
mov
repz
sahf
mov
sub
cmp
sbb
mov
jno
mov
daa
lea
cmp
nop
mov
sub
outsl
cmpsb
popa
inc
repz
mov
je
fldpi
in
or
adc
mov
push
cmp
lret
adc
mov
aaa
jge
incl
jmp
jmp
jl
movsl
xlat
mov
adcb
dec
fmulp
orb
out
xor
dec
test
in
rcr
xor
addr16
dec
mov
sbb
pusha
fistps
dec
jo
lock
clc
negb
mov
imul
sub
add
loopne
hlt
inc
insb
cmpsl
pop
jle
adc
repnz
add
scas
out
dec
xchg
je
loope
jne
jl
push
icebp
mov
fwait
sub
add
pop
aas
int
push
lods
mov
xlat
xchg
and
mov
fcmovbe
loopne
or
add
pop
mov
imul
jg
inc
add
outsb
xor
daa
pop
insb
and
cli
into
xor
push
mov
mov
mov
bound
scas
pop
pushl
cld
push
dec
rclb
int
or
pop
lds
in
mov
ljmp
arpl
push
jge
shll
sbb
xlat
dec
cmp
sub
jb
cmpsb
into
dec
inc
push
adc
add
mov
mov
xor
jl
out
jl
aad
scas
cmpsl
popa
cmp
mov
mov
daa
xor
int
ficoml
addr16
xchg
gs
icebp
pusha
mov
aad
stos
outsl
or
push
data16
mov
div
inc
inc
lods
lcall
xor
xchg
cmc
scas
push
push
xor
lret
std
clc
mov
push
mov
mov
sbb
out
rcrl
mov
testb
ss
dec
fisubl
pop
add
and
pop
push
mov
mov
shll
inc
inc
adc
sbb
inc
imul
mov
stos
popa
inc
iret
add
mov
xor
dec
sahf
les
pushl
test
or
out
xchg
jp
inc
sbb
jno
dec
xor
fcoms
ja
insb
jo
pop
and
xchg
xlat
inc
scas
cmpb
mov
mulb
dec
iret
shlb
mov
xor
pop
out
xor
sbb
clc
ss
xor
xor
test
nop
sub
mul
adc
push
sub
pop
xchg
dec
arpl
cmpb
jae
cmp
sub
aad
pop
dec
les
lahf
nop
mov
test
pop
sub
sahf
leave
outsl
jno
mov
stc
fmuls
xor
fnstcw
inc
or
or
dec
push
in
insl
test
bound
cmp
mov
mov
push
je
xor
test
call
inc
adc
jle
jne
jno
add
sbb
fs
jmp
sub
gs
inc
loope
push
sbb
mov
loope
lahf
adc
lock
mov
inc
cld
sahf
cmp
jecxz
sbb
inc
ljmp
adc
data16
pop
mov
into
cli
ret
sbb
push
repz
cli
out
inc
pop
sti
icebp
mov
mov
mov
in
mov
push
mov
push
es
test
xchg
stos
push
pop
lods
cmp
sub
lret
in
push
lret
lcall
dec
popa
dec
std
jb
mov
lock
adc
xchg
pop
fs
xchg
pushf
xchg
mov
lock
gs
cli
out
pop
dec
imul
lcall
in
stc
into
sub
js
cmp
lcall
mulb
iret
add
add
cmp
jmp
push
sti
in
xchg
stos
xchg
inc
xchg
pop
jae
sbb
and
xlat
mov
and
lcall
push
lcall
inc
push
fmuls
xchg
into
sub
inc
rolb
idivb
dec
push
inc
or
stos
sub
mov
icebp
xor
sbb
mov
xchg
ss
mov
push
cmp
push
adc
mov
mov
mov
push
mov
out
mov
push
ret
loop
jb
lds
int3
xlat
pusha
shll
adcl
mov
test
jg
sti
push
insb
pusha
mov
sbb
cmc
push
insb
or
inc
mov
mov
arpl
mov
test
sbb
or
push
nop
scas
rolb
adc
aad
cmp
or
inc
lret
mov
mov
mov
enter
sub
imul
mov
lahf
in
mov
lret
or
xchg
xor
push
mov
pop
sbb
out
push
push
jno
mov
xor
sbb
scas
stc
testb
add
call
jge
mov
adc
cmp
mov
xchg
fisttpll
insl
pop
xchg
mov
repz
dec
ljmp
fcmovnu
xor
imul
push
mov
and
aas
jbe
stc
cmp
je
shrb
pusha
clc
dec
ror
and
daa
aam
push
xchg
xor
sbb
inc
test
loopne
out
push
test
inc
and
outsl
testb
mov
fcmovne
jne
jg
fsub
xchg
sub
mov
mov
xchg
bound
pop
and
sub
aam
insb
lods
aam
std
lds
loopne
sub
mov
daa
or
jg
jae
fisttpll
mov
xchg
and
movsb
cltd
cwtl
mov
push
lea
push
insb
mov
clc
jbe
repz
idivb
xchg
out
dec
mov
and
cld
ja
jb
push
sbb
test
push
iret
or
pop
mov
mov
pop
ja
push
lret
lods
inc
jg
kmovw
sti
frstor
ret
xlat
mov
mov
sub
icebp
adc
adc
insb
aaa
push
cmpl
inc
scas
int3
lods
push
cmp
sbb
js
mov
or
mov
jg
movsb
mov
inc
shlb
call
mov
adc
pop
test
pop
hlt
pop
mov
jge
dec
es
stos
cs
xor
leave
jns
lods
dec
fisttps
sarl
push
es
xor
xchg
insl
push
xor
or
mov
loopne
ret
or
mov
add
sbb
jge
sbb
mov
outsb
aad
test
popf
xchg
mov
fabs
push
cmp
jb
pop
int3
inc
or
inc
stc
or
and
faddl
adc
test
xor
xchg
pop
mov
imul
incb
notl
mov
mov
mov
and
in
rorb
xor
sub
mov
pop
lock
pop
lahf
mov
xchg
push
test
cmpb
rep
sub
push
and
jp
test
in
cwtl
outsb
and
jmp
mov
ss
and
and
mov
insl
xchg
jns
jnp,pn
inc
or
or
sub
mov
lea
cs
or
mov
or
out
dec
repnz
gs
or
sbb
pop
cld
cmp
popa
sub
add
lock
xchg
sahf
shrb
pop
push
xor
xor
xor
negl
insl
dec
pop
dec
int3
add
inc
lock
jp
testb
pushf
insb
aad
push
hlt
pop
dec
inc
cld
into
lret
push
xor
les
push
pusha
icebp
cmp
and
fstpl
and
add
lea
aam
or
pushf
cld
ret
stos
add
sub
sub
xor
fsubs
mov
push
lds
inc
insb
pop
and
lods
jae
pushf
mov
xor
clc
sbb
or
fstpt
int3
inc
ret
test
cmp
fiadds
sbb
cwtl
subb
imul
xor
popa
xchg
pop
cmpsl
call
push
inc
push
ds
sbb
adc
outsl
xchg
cwtl
scas
mov
insl
imul
adc
jae
aaa
sbb
pop
sbb
sti
xchg
cmpsb
andb
cli
mov
out
stc
xchg
push
shrl
mov
jmp
out
popf
jae
mov
push
cmp
push
and
dec
xor
daa
jnp
xor
pop
jbe
sbb
popf
fwait
icebp
cmp
ret
push
cmp
dec
lods
sbb
dec
mov
lret
cmpsl
sub
call
push
loopne
inc
addr16
enter
ss
iret
mov
insl
mov
imul
lahf
iret
out
push
pop
shll
sbb
cmp
rcrl
cmp
inc
lea
pop
cs
sarl
jl
js
sarb
push
fildl
lea
xchg
add
rcll
mov
cmp
movsl
dec
adc
iret
mov
mov
insb
shlb
fbld
lds
push
inc
mov
lret
cmp
mov
cmp
fistpll
scas
pop
cmp
jge
push
aad
mov
aad
lods
sqrtps
or
je
cmp
nop
lods
pop
sbb
shlb
insb
mov
popf
inc
or
mov
js
imul
push
sub
mov
jnp
xchg
mov
faddp
in
cmp
cs
dec
dec
mov
xlat
int
lcall
xor
js
sbb
imul
jb
pop
push
push
fdivl
imul
loop
push
je
sub
fmuls
mov
mov
or
and
jle
ljmp
notb
into
outsl
rcrb
test
adc
push
lods
dec
je
bswap
xchg
loopne
rolb
adc
push
sarb
pop
sub
sub
pop
jl
rcll
mov
cmp
in
mov
jmp
pop
push
sarb
dec
icebp
repnz
imul
push
sahf
jmp
stc
das
cld
and
mov
sti
gs
cmp
xchg
nop
ljmp
push
add
xor
jae
lods
arpl
arpl
mov
call
cwtl
jmp
pop
inc
loope
nop
aam
imul
fs
jecxz
arpl
mov
loop
jbe
add
sub
popf
insb
cwtl
jge
ljmp
rcrb
std
addl
sub
mov
mov
add
pushf
cmpsl
push
popl
aas
mov
cmp
or
cmp
jge
mov
mov
inc
lcall
jle
int
or
shr
mov
aaa
dec
pop
test
stc
jle
add
and
adc
sbb
data16
insb
sub
int
movsb
lock
popa
roll
xchg
jp
mov
rorb
subb
sbb
out
mov
stos
pop
mov
jecxz
inc
mov
out
shlb
leave
xchg
je
popa
imull
lds
xor
nop
inc
xor
nop
mov
dec
out
inc
xor
leave
inc
insb
mov
test
xchg
out
push
adc
add
pop
icebp
adc
jns
adc
cwtl
sub
int3
pop
sahf
sbb
mov
popa
add
xor
xchg
popf
lock
sbb
setnp
xlat
notl
pusha
lret
fs
xchg
cmp
jne
inc
cmpsb
cmc
and
rclb
sub
int
ss
jge
push
addl
testb
push
daa
aaa
enter
in
xchg
shlb
dec
fs
jge
pop
sub
sahf
dec
call
pop
lret
lcall
popa
xchg
jo
test
adc
arpl
dec
scas
add
and
mov
sub
add
xchg
in
lcall
scas
cmp
inc
pop
mov
push
mov
rol
fiadds
out
push
jle
or
cmp
test
mov
bound
jae
dec
or
repnz
or
iret
pusha
sub
xchg
mov
mov
shll
or
adc
movsl
push
les
sahf
incb
sub
mov
sbb
sub
mov
jbe
jbe
adc
xchg
sub
insb
jle
lahf
movb
dec
add
xchg
xor
sarb
push
mov
mov
lret
shlb
out
lea
cmpsb
push
xorb
jae
fisubl
gs
mov
loope
adc
ret
mov
mov
inc
fimull
adc
inc
mov
loop
hlt
fldl
mov
mov
imul
testl
pop
lcall
pop
roll
push
lret
and
jl
call
bound
or
les
xlat
mov
dec
loop
sub
sub
fimuls
jmp
and
push
or
ljmp
pop
jle
clc
inc
xchg
or
or
xor
adc
mov
xchg
push
int
push
out
xor
pusha
ljmp
jnp,pn
cmp
push
fadds
iret
fnstenv
xchg
loope
xlat
shlb
mov
add
imul
std
jl
mov
pop
repnz
test
negl
inc
movw
out
pop
fsubs
movsl
fldl
xchg
ret
sti
mov
aaa
lea
jge
push
enter
into
ja
xor
shll
outsl
cmpsl
dec
fsubrs
pop
negb
mov
mov
mov
mov
cmp
lcall
push
adc
out
push
sub
xchg
inc
jmp
inc
jb
jecxz
lds
ds
sbb
xchg
je
jns
mov
aas
bound
movsl
scas
pusha
xchg
sbb
out
push
dec
jbe
and
ljmp
fbstp
std
mov
lahf
js
repz
sub
mov
jne
xor
adc
mov
daa
int
push
cs
and
dec
cwtl
cmp
inc
xor
pop
in
sti
stos
push
adc
sbb
mov
std
in
jno
test
inc
adc
icebp
adc
cmc
dec
and
int3
mov
mov
out
jmp
movsl
pop
jns
cmp
leave
sbb
call
in
jl
xor
push
inc
jecxz
cs
lds
push
stos
add
pop
push
dec
scas
cmp
rcrb
sbb
or
iret
cltd
xor
fcompl
fildll
rorl
lock
stos
hlt
loop
shrb
cmc
ds
inc
mov
icebp
pusha
cmc
sbb
xchg
cmpsb
xchg
adc
popa
mov
out
arpl
sbb
or
pop
scas
cmp
stos
dec
mov
sbb
fldl
sbb
ja
rol
popf
mov
rorb
ljmp
cmp
push
aas
xchg
jbe
xchg
sub
jb
sub
aad
dec
adc
dec
loop
scas
mov
iret
call
scas
jbe
jmp
leave
data16
popf
or
loope
dec
movsl
push
stos
ss
jecxz
hlt
leave
push
cmp
nop
mov
int3
or
loop
lcall
push
fstl
jmp
test
shrb
sbb
mov
add
negl
push
dec
sub
loopne
sahf
xor
rcr
loop
pop
jnp
adc
cmp
imul
lods
pop
sub
lcall
cli
stos
mov
cmp
push
add
jb
inc
and
cld
mov
lods
sbbl
jno
mov
cltd
mov
jmp
int3
push
ficoml
mov
inc
jnp
mov
sub
adc
pushf
pop
out
mov
cmpb
insb
sub
and
adc
jne
shlb
data16
testl
fsubrl
adc
mov
push
adc
xor
stc
sub
xor
lahf
fucomi
xorb
shrb
pop
inc
repz
pushf
cmpsb
dec
push
pop
pushf
inc
cmpsb
dec
mov
inc
hlt
jmp
je
es
sti
mov
adc
arpl
dec
mov
mov
pop
es
add
addb
loop
inc
jle
push
aaa
rcr
negb
cmpsb
int
xchg
repnz
arpl
in
outsl
push
push
fwait
insl
sub
dec
mov
outsb
in
movsb
jle
xchg
lcall
mov
fdivp
out
test
int3
fidivrl
dec
add
sti
std
faddl
loop
push
cmpsl
test
pop
fwait
rol
sub
popf
inc
repnz
pop
push
pop
mov
xchg
jo
cld
push
icebp
dec
push
and
cmc
xchg
addr16
and
mov
cmc
jb
subb
adc
adc
fdivrs
pop
add
cmpsb
lcall
aas
jo
lock
cmp
add
cmc
jmp
ss
push
rcr
push
test
mov
leave
out
sti
lock
cmc
incl
sub
shl
imul
mov
inc
add
xor
int
pop
pop
ja
jnp
pop
pushf
cltd
pop
cs
sub
testl
fldcw
cld
inc
sbb
push
rcll
stc
adc
sub
add
das
push
mov
sub
icebp
mov
movsl
fstpl
cwtl
pop
pusha
and
jo
ds
cmc
dec
pop
dec
aad
xchg
sbb
dec
or
pop
jp
in
add
push
imul
imul
push
or
leave
ljmp
sbb
sbb
rorl
fwait
lret
rorl
inc
in
push
lods
leave
sti
and
aam
push
xor
jmp
aad
repnz
pusha
cmp
scas
cmp
pop
rcrl
jp
outsb
push
mov
loopne
mov
lds
ss
xlat
xlat
aas
push
mov
pop
mov
bound
sub
fnstsw
mov
push
sub
jg
cmp
out
int3
jae
mov
sub
ret
cli
push
aas
mov
sbb
mov
lcall
and
movsb
mov
jno
sub
andb
aas
mov
fwait
pop
clc
mov
dec
fs
mov
stos
sar
add
in
mov
stc
out
pop
mov
sub
mov
jb
push
sbb
jns
or
sbb
fmul
test
xor
push
mov
sbb
jge
pusha
stos
sbb
and
movsb
add
aas
jb
aad
xchg
mov
enter
sbb
push
mov
inc
lahf
int
xlat
add
and
xchg
les
nop
sub
aas
outsb
int3
daa
test
ljmp
jmp
or
dec
jp
stos
aas
mov
mov
fsubs
fs
push
enter
sub
push
in
enter
sahf
jecxz
mov
ret
in
fisubs
fildll
and
inc
aam
scas
inc
adc
add
mov
or
add
xchg
push
icebp
push
rol
imul
push
pop
sbb
push
jne
pushf
jmp
addr16
adc
gs
push
cmp
push
pop
mov
das
mov
jns
roll
cmpl
xor
jns
fcmovnu
shlb
fwait
mov
add
mov
lahf
pop
push
in
fs
js
push
inc
loope
jbe
popa
ja
mov
fwait
pop
cmpsb
mov
mov
test
inc
add
mov
dec
inc
cmp
pop
idivb
push
stc
dec
cmpsl
ljmp
mov
mov
xor
and
ss
cmpsb
xchg
or
fld
mov
jmp
out
cmp
sub
xor
and
out
push
push
pop
or
lahf
imul
sub
sbb
sbbb
mov
and
or
inc
jne
push
jge
fcmove
push
xor
xchg
dec
sbb
data16
pop
sub
add
pop
hlt
pop
xchg
mov
ds
mov
and
dec
je
fs
imul
mov
imul
js
repnz
daa
dec
and
xor
jl
inc
aam
mov
fsts
jno
clc
inc
stos
adc
adc
and
sub
mov
mov
cli
cmp
or
repnz
int3
adc
mov
cwtl
sbb
push
mov
jo
notb
ljmp
in
xor
mov
jns
and
and
inc
stos
adc
lods
or
or
jp
lods
pop
sbb
xor
jo
aam
in
sbb
insl
adc
in
push
movsl
aaa
and
dec
xchg
scas
push
in
insb
jne
jb
pop
inc
mov
mov
xlat
cmp
inc
add
xor
popf
lret
mov
repz
jne
cmp
rorb
test
lret
sbb
dec
mov
or
mov
jne
mov
jbe
shrl
int
adc
pop
cli
aas
sub
repnz
mov
sub
push
test
pop
xor
dec
xchg
inc
cld
pop
dec
push
inc
out
add
pop
or
cmp
pop
orb
lds
test
les
iret
bound
aam
jmp
mov
mov
in
daa
xchg
sbb
popf
scas
dec
lret
mov
pushf
cwtl
cmp
and
xor
loope
mov
and
movsl
rorb
add
mov
cld
sbb
push
mov
add
test
adc
jg
jnp
fimull
dec
mov
sbb
sub
sbb
imul
ss
xchg
inc
mov
aam
aam
sbb
jmp
adc
jne
rcrb
pop
jns
ret
insl
ret
mov
inc
fists
sahf
or
add
pushf
mov
pop
frstor
insl
ror
fs
cmpsb
cmp
imul
mov
sub
movl
jne
fsub
loop
das
jnp
adc
inc
ret
gs
divb
int
popf
xor
pop
pop
jge
shrb
arpl
dec
out
into
mov
shr
sahf
xchg
into
imul
mov
mov
repz
xor
jnp
incl
xchg
call
cmp
imull
mov
aad
mov
test
sbb
insl
ffree
mov
jnp
insb
loope
sbb
repz
inc
push
into
or
add
aaa
hlt
xchg
mov
sub
in
or
pushl
or
cmp
aad
cmovg
imul
mov
daa
ss
or
stc
out
int3
push
xor
test
cltd
pop
jb
loopne
test
mov
testb
mov
sbb
jp
cmpsb
lods
adcl
lods
jge
dec
je
fsubrl
arpl
hlt
in
ret
add
sbb
repnz
jmp
sbb
cmp
push
mov
mov
loope
xor
data16
test
jge
loope
loope
jg
or
roll
int3
mov
fnstsw
and
mov
sahf
les
data16
mov
add
push
push
outsl
aas
aad
sbb
cmp
sub
pop
xlat
dec
and
xor
xchg
push
mov
adc
movsl
adc
arpl
je
push
dec
push
mov
shll
mov
dec
or
test
xlat
imul
sbb
rcrb
and
pop
xchg
adc
pop
out
inc
mov
mov
lods
insb
xchg
js
pop
inc
mov
adc
into
gs
push
iret
imul
stos
jg
sub
mov
mov
jmp
cmp
or
icebp
aas
cmp
movsl
inc
adcb
mov
out
hlt
gs
adc
adc
push
cmp
dec
and
mov
inc
ljmp
shll
cwtl
test
test
mov
adcb
add
adc
cmc
cmp
lret
pusha
es
data16
outsl
dec
loopne
jns
gs
jg
xchg
dec
inc
add
aad
dec
cmp
push
lods
xchg
mov
add
lock
in
inc
xchg
or
fstpl
stc
inc
xchg
pop
fisubrs
lret
fidivrl
jge
lods
jo
lahf
cmpsb
lcall
mov
or
push
and
xchg
das
cmpsl
and
testl
xchg
or
hlt
adc
jmp
pcmpeqb
out
push
fmuls
sbb
dec
push
sub
add
sub
inc
out
or
jmp
pop
jl
clc
push
cmpsb
push
xchg
pop
cmp
cmp
stc
sbb
out
lahf
ror
movsb
jle
out
adc
dec
or
or
xchg
mov
aas
add
dec
sarl
clc
or
mov
xor
inc
mov
mov
inc
lds
xor
sahf
xchg
fisubrl
jge
sub
jae
fstpt
push
out
or
mov
mov
jne
cld
cmpsb
out
sbb
push
mov
sub
arpl
ficomps
cld
clc
sbb
cld
inc
imul
pushf
insl
ds
lcall
sbb
xor
imul
jno
jp
sbb
call
adc
cmp
int
movsl
ljmp
inc
cwtl
pop
and
rolb
in
push
inc
push
mov
pop
out
and
sti
js
sahf
or
aam
mov
pop
out
push
mov
outsl
push
sbb
xor
out
jle
mov
mov
cltd
dec
push
mov
sub
mov
mov
xchg
dec
mov
jae
pusha
adc
fists
add
fcoms
or
xchg
inc
into
pop
add
mov
add
test
sbb
add
dec
gs
ss
in
and
or
inc
fdivrs
xchg
scas
movsb
aas
mov
jge
in
call
in
cs
mov
jle
push
mov
in
and
sbb
dec
xor
push
push
daa
jne
and
clc
fldt
or
xchg
and
lret
cmp
add
enter
shll
dec
mov
sbb
dec
std
ljmp
and
pop
out
test
xchg
and
push
mov
push
pop
gs
push
out
xchg
sub
cmpsb
jbe
pop
jge
cmp
icebp
xor
dec
out
movsb
fld
mov
orl
pop
sub
fidivl
js
push
out
data16
pusha
sbb
outsl
loopne
pop
add
lret
lret
xchg
call
mov
loop
addr16
push
cmp
cmpsb
xchg
test
in
stos
inc
add
lcall
xchg
mov
jne
sbb
jno
dec
xchg
clc
punpckldq
cmp
cmpsl
cmpl
mov
mov
rol
inc
int3
and
mov
push
out
adc
push
movsb
dec
outsb
jns
sub
outsl
lock
lea
scas
and
xor
adc
mov
test
loope
add
inc
cld
push
in
iret
jg
lahf
pusha
adcb
mov
addr16
popf
lods
add
shrb
lods
lods
inc
int3
fstps
clc
popw
xor
mov
mov
pop
sub
push
pop
mov
dec
push
inc
or
hlt
div
daa
hlt
jb
add
iret
or
push
and
in
xchg
pop
mov
loope
xchg
xor
pop
inc
test
adc
mov
adc
test
outsb
cmp
xchg
mov
pop
sub
jl
xor
movsb
cmpsl
leave
mov
or
test
mov
lods
fwait
jno
dec
mov
dec
insb
cmc
cmp
shl
or
or
pop
stos
xchg
adc
sbb
mov
sahf
add
scas
dec
xor
ja
push
cmpsl
xchg
push
xor
lds
push
outsl
sar
xchg
rclb
mov
jb
or
sub
lcall
adc
loopne
addr16
lret
std
int3
inc
les
xchg
test
push
rcr
cmp
stc
push
dec
cmp
sti
cmp
fbld
push
arpl
js
cmpsb
lcall
popa
insb
xchg
sahf
push
insb
inc
xchg
fstpt
testb
adc
sub
xchg
jmp
jb
and
cmp
aad
pop
mov
add
mov
fsubrl
jno
push
shll
lods
repnz
xor
rcll
lcall
xchg
push
mov
mov
sbb
rorl
mov
ret
cli
ja
mov
push
ljmp
cltd
aam
cmp
xchg
dec
dec
sbb
jge
jae
and
outsb
sub
negb
inc
std
push
popf
lods
lcall
push
lret
sub
test
add
mov
add
clc
mov
mulb
pushf
stc
shll
gs
bound
or
insb
mov
jp
or
mov
inc
sub
jo
popa
lods
mov
sbb
cmp
xlat
shll
stos
xor
nop
int3
int3
cmp
stc
dec
mov
std
inc
jg
jmp
rep
fbld
pop
test
and
jbe
out
cmp
push
jl
xor
add
lds
push
xchg
jnp
movsl
mov
jne
sub
shll
jnp
test
and
push
and
test
push
xchg
mov
imul
call
lods
lcall
mov
pushf
hlt
push
mov
adc
and
nop
mov
into
add
clc
lods
adc
leave
jle
mov
dec
shl
fxam
xor
xchg
mov
shrl
pop
mov
std
mov
addl
jecxz
outsb
dec
call
insl
push
in
into
in
dec
push
xor
add
das
push
xor
dec
cltd
mov
das
cltd
in
sub
call
loope
pop
cld
test
int
inc
mov
das
push
sahf
mov
cmpsb
jne
mov
jbe
mov
ds
aas
stos
xchg
in
popf
add
sti
popf
stos
int
test
js
daa
ja
cltd
dec
inc
jmp
cmp
xor
sub
popa
mov
xchg
and
and
lret
mov
pop
in
mov
add
mov
mov
push
cwtd
ficoml
ret
cmp
aaa
xor
shl
repz
jno
outsl
mov
sbb
cmpsl
adc
jnp
sub
jno
lcall
pop
sarl
push
pop
lea
adc
mov
mov
mov
sbb
jg
cmp
mov
xor
sbb
or
mov
cld
sbb
mov
ret
test
shl
xlat
subb
cwtl
push
or
sbb
add
test
cmp
mov
mov
lock
add
add
aad
dec
cli
inc
xchg
and
pop
push
and
js
mov
mov
pop
insb
fisttpll
nop
dec
mov
ss
mov
lods
cwtl
imul
out
and
add
push
ds
and
inc
mov
fistps
cmp
or
mov
mov
adc
mov
add
jno
ret
inc
je
jns
or
ror
and
popa
rorb
lods
insl
lret
sbb
inc
inc
mov
adc
ror
adc
setp
lcall
lds
mov
xchg
jg
sub
jno
sbb
push
cltd
cltd
jb
push
xlat
dec
mov
xchg
pop
cmp
ret
cli
dec
or
jo
lods
mov
adc
cmp
jp
and
das
loop,pn
bound
mov
loop
sub
cmp
icebp
in
mov
mov
xchg
call
out
enter
stc
mov
adc
pop
mov
push
sbb
insl
inc
out
xlat
cli
cmp
addl
jmp
pop
jle
sbb
jge
rcl
aaa
mov
inc
mov
int3
jg
push
cld
push
psrad
add
in
sbb
fcoms
gs
xchg
lea
mov
add
scas
lahf
sbb
js
inc
cwtl
mov
sub
mov
loop
mov
jne
sbb
rol
out
or
mov
fimuls
cmpsl
out
sub
and
aad
jecxz
test
out
adc
add
in
sub
jp
test
dec
pusha
jbe
xchg
int3
dec
pop
pop
sbb
jge
add
or
jb
repnz
or
rorl
push
inc
mov
jnp
or
std
xchg
pop
int
jecxz
mov
lds
mov
out
insb
or
xchg
push
cmp
mov
jno
fucomi
in
add
loop
push
pop
sbb
lret
jb
inc
repnz
lret
or
lock
cltd
push
xchg
inc
iret
add
or
mov
shrl
or
push
lret
and
pop
mov
movsb
mov
loopne
mov
xchg
xor
imul
sbb
in
lret
sahf
sbb
ret
bound
mov
test
adc
dec
sub
xchg
sbb
cli
xlat
cli
xchg
movsb
fisubrs
mov
jl
aad
mov
addr16
sarb
or
scas
xor
mov
pop
ss
icebp
xchg
mov
test
dec
gs
andb
mov
xchg
pop
mov
xlat
mov
ds
cmp
xor
jne
incb
fsubr
ret
mov
and
dec
fbstp
scas
sub
jmp
adc
lahf
cmp
into
add
outsl
pop
imul
loopne
push
or
add
jg
mov
hlt
imul
aas
outsl
and
loop
jg
mov
cwtl
push
push
mov
mov
lret
fdiv
ja
mov
adc
mov
addr16
ljmp
sbb
das
adc
loopne
ficoml
inc
negl
pop
sbb
mov
add
and
pop
mov
mov
mov
add
imul
mov
sub
or
cmp
mov
pop
xor
mov
je
je
and
mov
popf
in
shr
push
imul
mov
sbb
cmp
push
out
enter
and
fcoms
mov
call
dec
or
and
lea
movsb
pop
outsb
leave
ljmp
mov
divl
adc
shr
shll
jae
mov
in
push
cwtl
aas
ret
bt
dec
mov
movsb
leave
out
xchg
lea
mov
fwait
ror
mov
scas
add
push
sub
xor
sub
in
fstp
leave
xor
push
push
inc
gs
xor
inc
out
mov
push
rcrl
push
pop
mov
and
call
addr16
popf
test
repnz
insb
sti
loope
ret
inc
mov
leave
test
jns
sti
sub
xor
outsl
sbb
jbe
xchg
lcall
fistpl
int3
dec
cltd
adc
xor
movsl
inc
ret
es
add
mov
adc
dec
cmp
adc
dec
cmp
or
inc
cmp
pop
fadds
les
dec
es
cmp
pop
xor
adc
dec
fcmovnu
and
outsl
ljmp
adcl
jae
push
and
scas
sub
pop
inc
add
fildl
pop
movsb
stos
out
sbb
imul
flds
in
pop
sub
xor
loope
xchg
shl
inc
or
mov
nop
xchg
sub
xchg
pushl
popf
repnz
hlt
ficoms
add
xor
inc
bound
fistpll
mov
push
sub
lcall
xchg
mov
xchg
aad
mov
popa
adcl
sub
mov
jns
fucom
repnz
xchg
push
scas
xor
aam
in
call
mov
sub
jge
mov
pop
enter
lahf
jae
stc
imul
pop
daa
cmc
ds
jno
cmpsb
jae
push
xor
mov
rcrl
push
xlat
bnd
leave
add
and
xchg
lahf
dec
mov
cmp
xor
xlat
fcmovbe
xchg
jns
jmp
mov
mov
popa
stos
test
stos
push
icebp
out
mov
or
xor
outsb
out
loop
lods
mov
inc
fs
sub
cmpl
mulb
leave
imul
push
jg
std
test
mov
cmpsb
ret
lret
push
inc
or
popa
jge
xor
sbbb
xchg
cwtl
mov
sahf
sbb
ljmp
popa
inc
inc
into
in
mov
out
ror
pushf
fists
in
fnsetpm(287
loop
lods
mov
sbb
sub
xlat
popf
mov
pop
ljmp
enter
bound
inc
inc
dec
lds
cmp
cmpsl
jg
fdivl
push
mov
ror
adc
adc
popa
xlat
imul
stos
pop
xchg
test
shlb
jmp
cltd
cmp
inc
loopne
daa
lods
ret
nop
mov
xchg
aaa
jb
gs
shlb
cmp
movsb
out
lret
out
and
orb
adcl
movl
lahf
in
sub
mov
dec
roll
cmp
mov
daa
lods
movsb
inc
push
and
inc
call
jle
fldt
cmpsb
loope
jl
mov
jp
in
stc
call
mov
rcl
sahf
sub
lods
pop
jmp
mov
inc
mov
push
cmp
inc
es
xor
lret
inc
push
mov
subb
arpl
xor
jle
xchg
lahf
cli
push
adc
pusha
cltd
test
mov
add
cs
loopne
fidivrl
pop
xlat
and
cmpsl
or
out
je
cmp
jo
loopne
stc
push
fwait
cmp
mov
mov
push
lret
subb
mov
xchg
iret
sub
mov
and
ljmp
cld
insb
inc
mov
cwtl
es
sahf
fcomip
mov
inc
add
cmp
addr16
aaa
cmp
fisubl
int
add
pop
sub
inc
dec
ret
cmp
test
add
jge
cli
mov
sbb
dec
cmp
dec
cmpsl
fcmovnbe
jo
imul
mov
push
mov
loopne
icebp
ja
push
add
cmp
mov
jns
rcll
and
rcll
cmpsb
jg
imull
cmp
rcrb
push
xor
sbb
into
cmp
or
sub
dec
js
mov
sub
sub
cmp
xchg
cli
test
imul
icebp
jnp
mov
pop
hlt
mov
aad
mov
mov
pop
jne
je
lret
mov
or
mov
mov
inc
lock
sub
sbb
test
cmc
jecxz
into
jl
mov
iret
rorl
mov
add
ror
rcrb
adc
inc
clc
pop
gs
lods
mov
pop
pop
arpl
aaa
push
inc
test
outsl
shrl
mov
cmp
mov
arpl
pop
xchg
rcrl
pusha
pop
sub
sti
mov
mov
or
xor
aam
in
push
lods
push
xchg
movsb
iret
rcrl
arpl
int
sub
lock
mov
xor
or
xchg
lret
dec
mov
out
call
pop
mov
add
push
adc
and
test
leave
pop
outsl
or
daa
sbb
insl
mov
xor
or
and
add
xchg
xor
sti
dec
stos
jno
lea
out
sbb
sbb
rcr
fdivl
sub
xchg
or
pop
adc
mov
fs
jp
divl
gs
push
popf
adc
aas
dec
js
in
sub
cmp
push
lock
mov
push
out
pop
xchg
or
call
inc
stc
test
sub
mov
fwait
dec
scas
imul
push
xor
xchg
push
iret
dec
inc
int3
jecxz
mov
inc
test
mov
jo
adc
sub
cmpsb
sbb
adc
cmpsl
or
into
lods
scas
mov
out
cmp
fs
jae
sub
jbe
cmpsl
add
mov
jecxz
testb
xor
dec
or
bound
pop
ret
xchg
ficoml
rcrb
daa
xchg
push
cmp
dec
adc
push
adc
sub
daa
out
mov
push
ss
leave
fistl
mov
pusha
cmpb
add
pop
adc
movsl
and
sub
xchg
jnp
mov
sub
aad
out
stc
das
sbb
push
push
cmp
mov
lods
xor
add
sbb
movsb
jb
js
out
cmp
pushf
pop
lds
jp
or
dec
out
ds
or
mov
arpl
lcall
cmc
pop
out
lcall
add
push
mov
lea
add
mov
mov
mov
cltd
orl
or
out
and
mov
rcl
mov
adc
jb
push
inc
add
lds
outsb
stos
lods
out
xchg
data16
dec
pop
jmp
cmc
call
xorb
loop
xchg
das
sub
mov
xor
jne
or
pop
ds
popa
mov
cmpsb
jae
or
int3
adc
fs
inc
or
lret
testb
sbb
push
add
inc
pop
aas
jp
clc
leave
xchg
mov
mov
add
inc
pop
mov
bound
out
iret
inc
cmp
pop
pusha
dec
imulb
es
es
pop
mov
pusha
daa
or
sub
or
dec
or
pusha
ja
lock
aad
push
imull
xor
push
adc
add
enter
mov
and
mov
jae
lret
pop
out
outsb
adc
fstpt
inc
sbb
and
pop
or
pop
addr16
lea
subb
lret
xor
lcall
addl
xchg
leave
jmp
adc
inc
jb
outsb
mov
or
call
add
cmpsl
sbb
loope
push
cmp
ss
sub
pop
sub
mul
fdivrs
add
inc
dec
inc
cmp
adc
insl
lret
les
add
dec
mov
imul
jo
orl
lea
loop
fcompl
add
dec
lret
xchg
test
push
shr
filds
ret
cmpsb
out
xor
pop
cltd
enter
lods
pop
mov
mov
cmp
stos
inc
jmp
push
mov
aas
mov
sbb
adc
sub
mov
insb
and
lea
cltd
arpl
sub
inc
push
rclb
aam
es
scas
lret
jns
push
push
mov
sbb
mov
movsb
jnp
push
push
xchg
or
or
fsubr
and
xchg
xchg
pop
aaa
add
popf
jo
shrb
pop
mov
mov
mull
push
push
insb
or
or
add
out
mov
sub
fsubrs
mov
mov
xlat
pop
rcll
aad
lds
sub
cmpsl
sti
nop
fnstsw
test
adcb
movsb
lock
into
inc
jae
or
mov
imul
das
lods
push
and
and
cwtl
fsubs
jno
mov
in
xlat
fisubs
dec
jno
push
pop
mov
jle
pop
push
shll
icebp
add
xchg
scas
out
popa
lahf
ret
xchg
std
mov
pusha
mov
stos
xlat
sub
push
adc
pop
and
andps
adc
mov
cmp
xor
or
nop
xor
push
enter
ret
and
unpckhps
insl
jg
pushf
ret
cltd
stos
jmp
mov
pop
push
lahf
ret
pop
out
mov
jmp
flds
scas
mov
add
push
or
dec
test
sbb
and
mov
inc
adc
add
dec
sub
pusha
fcoml
leave
sub
mov
push
pop
or
fldt
clc
pop
cmp
xor
popf
scas
int
fisttpl
in
mov
and
or
pop
inc
iret
call
lret
mov
cmpsb
pusha
jb
in
dec
mov
or
shrl
cmp
mov
inc
dec
or
cmp
hlt
mov
rcl
fidivl
decl
xor
jge
xor
xor
and
pop
push
int
and
push
movsb
je
cmpl
mov
mov
and
push
adc
add
add
pop
add
sub
into
add
repnz
or
push
mov
cmc
enter
inc
mov
inc
sahf
das
insl
fs
pop
loopne
in
lock
and
push
addr16
cmp
cmp
sbb
xor
sbb
shrb
sbb
sub
and
ss
cmpsl
sub
sub
in
add
and
mov
and
push
lods
sbb
add
fs
pop
dec
movsl
push
jmp
cmpb
jns
out
mov
cmp
xchg
sub
dec
pushf
fisubrl
shrb
push
push
mov
pusha
ret
mov
movsl
dec
ficoml
xor
dec
jb
pop
jbe
dec
mov
insb
es
sub
mov
popf
popa
scas
inc
jp
dec
mov
dec
out
mov
fld
sti
pushf
icebp
xchg
cltd
xlat
xor
mov
sub
bound
push
push
fcmove
dec
jge
xchg
jb
mov
jno
mov
lahf
cmp
nop
add
bound
mov
icebp
cli
push
adc
inc
xor
subl
sub
aaa
sbb
fsubl
mov
inc
cmpsb
loop
js
js
xor
cmp
sbb
push
out
sub
cltd
xchg
insb
xchg
into
std
ret
out
pop
sub
mov
aas
dec
jmp
pop
mov
stos
call
mov
mov
jmp
adcb
out
inc
sub
cltd
int
mov
dec
movsb
iret
dec
mov
and
aas
in
in
jb
roll
ss
sub
mov
sbb
mov
test
adc
cmp
pop
mov
bound
inc
hlt
jecxz
out
divb
inc
outsl
cmc
inc
jns
xchg
sarl
out
popa
repz
push
push
xchg
jo
std
mov
addl
mov
lcall
icebp
jae
aaa
dec
inc
lods
icebp
imul
lods
movsl
and
adc
inc
jg
clc
jno
push
lret
imul
rorl
rcl
or
test
testb
pop
pop
fmuls
pop
shll
ljmp
pop
jb
pop
and
push
push
adc
rcrb
sarb
cmp
daa
cwtl
leave
xor
mov
test
out
pop
or
ror
icebp
adc
mov
cmp
mov
icebp
cs
sub
xchg
adc
subl
aas
mov
jmp
lods
sti
push
and
popa
dec
push
inc
and
out
jle
cmp
mov
ja
ljmp
push
int
lock
lret
and
gs
enter
mov
repz
mov
sahf
jg
jb
int
sbb
adc
lea
cmp
xchg
cs
mov
adc
fs
jae
dec
test
loop
dec
or
sub
and
adc
adc
outsl
xchg
int3
lods
and
or
int
jbe
loope
pop
push
cmp
and
xchg
push
ficoml
js
xor
popa
sub
cld
dec
mul
push
xlat
jno,pn
push
sbb
int3
pop
or
sbb
out
pop
mov
loope
lret
jl
ret
jno
jne
cmp
sub
shrl
sub
pop
ja
inc
and
jns
mov
fimuls
push
lret
div
cmp
shll
adc
sbbl
bound
add
cmp
mov
mull
addr16
push
into
or
in
imul
aaa
push
jecxz
mov
push
or
sbb
mov
push
mov
imul
in
xchg
cmp
jns
and
andl
jmp
push
in
stc
imul
xor
and
inc
mov
ss
data16
dec
cmp
cmp
and
or
sub
jge
xlat
insb
add
and
ret
icebp
and
mov
add
je
dec
xor
inc
jb
pop
in
push
scas
or
xorb
push
js
popf
movsl
xchg
cmc
pop
icebp
pop
inc
mov
aas
ds
orb
adc
idivl
jnp
cld
xchg
adc
jmp
mov
xor
hlt
xchg
and
jbe
cmpb
jnp
jg
ljmp
dec
jno
arpl
add
scas
and
pop
jmp
adc
loop
sarl
out
xlat
call
sahf
testb
sub
dec
pop
inc
and
das
sub
cwtl
and
cmp
or
daa
lods
lret
inc
adc
int3
and
xor
daa
sbb
enter
in
and
mov
inc
xor
stc
imul
les
outsl
and
cmp
test
jg
mov
jle
fwait
mov
cmpsl
push
aaa
sbb
sbb
imul
paddsw
sbb
sbb
jb
testb
lds
xchg
push
cmp
jp
lds
test
pop
and
mov
xor
sbb
push
xchg
cwtl
pop
jnp
outsb
loope
mov
sub
cmp
addr16
test
addr16
lahf
sbb
add
in
inc
movsl
mov
or
xchg
and
mov
stc
in
mov
xlat
mov
dec
adc
mov
push
dec
outsl
pop
cmp
nop
xor
stc
fmuls
inc
push
fcomps
dec
jne
aaa
adc
loopne
cmp
jmp
mov
sub
adc
sbb
in
pop
jecxz
add
popf
jns
and
imul
sarl
shr
mov
mov
mov
sbb
in
fwait
test
loopne
sub
stos
lds
pop
test
or
shl
mov
jb
and
int
loope
jne
loop
lcall
adc
dec
and
ss
pop
adc
test
movsb
cmp
jo
insl
jno
dec
loopne
pop
push
push
dec
nop
lods
lea
xchg
rcr
cltd
xor
cmp
adcb
or
inc
push
add
insb
das
cli
sub
mov
sarl
mov
xor
mov
mov
imul
clc
xchg
push
arpl
pop
inc
or
sbb
sti
add
push
add
pop
push
push
lret
je
pop
lret
pop
jle
out
ret
pop
mov
mov
inc
mov
fwait
test
inc
icebp
lret
shll
dec
loope
mov
fsubs
out
pop
std
fwait
add
adc
cs
mov
mov
adc
inc
sarb
mov
mov
ret
xlat
fsubrs
sub
push
fldenv
into
lahf
nop
jmp
cmp
fwait
out
lea
push
or
adc
xchg
outsl
mov
mov
add
negb
mov
inc
pop
pop
loop
dec
dec
mov
or
sbb
ss
mov
mov
cmp
add
insl
mov
dec
adc
xchg
call
inc
xchg
int
test
or
enter
cli
stc
mov
xchg
loopne
and
xchg
sti
mov
push
cmp
xchg
insl
jg
xchg
fld
inc
inc
mov
sbb
sub
pushw
inc
or
and
lock
lret
jp
ret
sbb
or
jp
shl
mov
push
xor
out
pop
pusha
push
fimuls
je
lcall
mov
xlat
pop
adc
in
push
subl
jg
sti
ja
push
inc
xor
jnp
scas
dec
adc
jo
pop
shlb
lock
mov
in
in
cmp
and
ss
xchg
xor
call
sahf
mov
enter
mov
push
mov
js
adc
pop
sbb
cmc
mov
shrl
push
cmp
sarl
scas
sbb
ficoms
mov
dec
and
insl
lods
fdivrl
inc
mov
push
loope
ds
mov
fisttpll
mov
xchg
sti
cs
cmovb
xor
jnp
inc
lcall
scas
jecxz
sub
add
lret
and
mov
pop
add
stos
mov
adc
sbb
mov
ret
pop
xchg
sub
rorb
enter
movsl
and
fiaddl
add
lods
inc
cmp
xchg
scas
mov
out
sbb
stos
or
inc
inc
std
mov
fists
mov
imul
push
lea
mov
inc
fs
mov
mov
sbb
leave
mov
les
adcl
add
sub
pop
push
pop
rolb
pop
mov
mov
aad
daa
add
cmp
mov
or
outsl
pop
inc
fmuls
cmp
or
ret
xchg
mov
jg
mov
in
cli
pop
fcoms
pop
setne
cmp
idivb
orb
in
jb
mov
movsb
pop
js
cmp
test
mov
mov
xor
fiadds
in
dec
mov
imul
ret
sbb
xchg
and
sub
and
daa
cwtl
adc
xor
fwait
adc
out
movsb
int
popa
add
stos
add
aad
pop
jno
into
mov
sbb
fmul
xor
cmc
fdivl
mov
bound
sbb
mov
inc
test
imul
into
lds
and
mov
loop
fidivl
xchg
outsl
dec
lea
pop
xchg
repnz
cmp
jno
ret
push
inc
rclb
repnz
xchg
mov
into
dec
imulb
dec
shll
jae
rorb
or
jg
dec
rcl
add
cmp
jb
sub
dec
jno
negl
and
sub
mov
stos
stc
mov
mov
dec
int
jmp
fcomp
stc
and
scas
clc
pop
mov
or
scas
aam
test
mov
in
dec
or
aas
or
pop
xchg
ss
outsb
ja
mov
arpl
xchg
inc
xlat
test
mov
dec
loop
std
adc
test
lret
mov
lods
pop
subb
ljmp
push
jns
gs
outsl
inc
xlat
iret
xor
push
cmpl
add
in
cmove
stc
push
xchg
scas
inc
jmp
mov
or
insl
jle
addr16
jge
mov
add
stos
mov
out
push
xchg
daa
test
dec
lcall
dec
dec
and
out
mov
add
je
mov
jne
push
inc
jmp
fwait
sti
xchg
dec
cmpsl
loopne
cmp
push
add
push
and
xor
test
ror
mov
and
stos
lock
jge
clc
lods
ret
ljmp
xchg
sbb
sbb
gs
cmp
stos
test
inc
rclb
orl
push
popf
nop
movsb
mov
mov
and
clc
sbb
mov
jle
pop
outsb
icebp
xchg
outsb
shr
outsl
out
jmp
pop
call
dec
inc
push
and
xchg
or
mov
adc
xchg
and
mov
arpl
push
mov
fisubrs
gs
dec
ret
insl
push
clc
push
pusha
mov
hlt
push
icebp
sbb
inc
push
addb
or
in
add
sub
cmpb
popf
xor
in
scas
mov
imul
add
scas
cmp
xchg
lret
mov
bnd
xchg
int
cs
cmp
sub
mov
jle
shlb
lahf
sahf
jbe
icebp
adc
or
lahf
xor
fadd
dec
cmpb
movsl
mov
arpl
xor
push
xchg
add
push
lods
add
cmp
mov
push
adc
ss
out
push
inc
inc
mov
and
les
mov
ret
movsl
popa
push
fmuls
pop
pushf
mov
int
xlat
xor
and
cmp
pusha
xchg
pop
jb
sub
xchg
outsl
mov
repnz
dec
sub
dec
sbb
dec
cmpl
sbb
and
jae
adc
ljmp
xchg
stos
adc
sbb
je
mov
inc
xor
push
ds
icebp
sbb
addr16
xor
xlat
jle
mov
sbb
inc
clc
mov
rcll
jae
jl
mov
repnz
add
xchg
inc
xchg
adc
dec
mov
add
mov
loopne
std
out
ret
lret
xor
add
cmc
movsl
jecxz
pop
mov
mov
or
add
popa
mov
in
or
es
push
xor
sub
sbb
dec
sti
pop
fs
idiv
mov
mov
movsb
pop
xchg
pop
and
stos
pop
push
and
mov
cmp
cbtw
and
ljmp
add
mov
sbb
adc
filds
adc
test
xor
jge
dec
imul
pop
lahf
pop
insb
movsb
push
inc
mov
xchg
push
push
sahf
adc
fildl
and
out
mov
mov
adcl
cmpsl
lds
ret
jg
dec
mov
fldl
or
sub
pop
icebp
mov
sarl
fcompl
jle
xchg
lahf
sub
incl
fsubrs
xchg
movsb
pop
adc
repz
mov
loop
out
mov
mov
sub
mov
aam
jle
gs
or
stc
jnp
pop
adc
fdivrl
pop
test
out
push
fwait
mov
test
xor
cmp
xchg
loope
cmpb
push
enter
mov
pop
es
jne
aad
and
push
loopne
add
sbb
mov
outsl
test
out
sbb
push
inc
adcl
or
jmp
fisttps
pop
sbb
dec
mov
ret
insl
pop
test
lods
sbb
shrb
mov
repz
mov
int3
pop
dec
in
adc
into
jo
or
icebp
and
inc
mov
jnp
xchg
push
aad
jns
and
nop
push
inc
rorl
jmp
cwtl
mov
inc
sbb
int
jns
int3
and
insb
sbb
push
cmp
loopne
repnz
mov
jge
jne
mov
jecxz
and
mov
xchg
dec
call
jge
fwait
mov
dec
mov
out
in
and
mov
cmc
jns
loopne
sbb
call
cltd
pop
mov
in
scas
outsl
mov
dec
rcrb
imul
inc
sahf
pop
loop
insb
lcall
rcrb
mov
gs
call
mov
xor
insb
fnstcw
inc
mov
push
sub
cmp
pop
imul
gs
pop
xchg
jb
xor
ficoml
xchg
dec
pushf
or
push
ret
mov
push
xchg
sub
pop
xchg
cmpsl
mov
insb
xchg
imul
push
xchg
gs
sbb
inc
adc
sbb
push
lds
aas
mov
xor
hlt
in
xchg
mov
add
into
in
jp
xchg
dec
push
mov
aad
or
mov
sbb
sahf
cmc
rol
mov
mov
xchg
int
cmc
mov
leave
push
ljmp
or
jbe
ret
ss
fwait
or
mov
and
cli
push
in
lods
adc
outsb
pop
in
scas
dec
add
stos
add
mov
out
pushl
cmpsb
inc
cmp
adc
aam
mov
das
mov
add
hlt
int3
outsl
pop
push
mov
xchg
lret
lret
fdivl
dec
jo
or
call
es
and
pop
adcl
xor
lock
push
xlat
adc
rorb
test
xchg
add
test
pusha
jns
mov
inc
popf
cld
cwtl
mov
stc
nop
loop
int
pop
inc
push
mov
daa
mov
mov
or
out
dec
insb
push
xor
mov
out
jb
cmpsl
insb
push
mulb
dec
mov
mov
and
pop
gs
les
mov
in
xor
es
orl
movsl
das
movb
xor
daa
mov
dec
dec
sub
pusha
out
fs
addr16
fs
imul
sbb
pop
adc
and
int3
test
adcl
popf
and
aam
sbb
into
inc
lahf
add
mov
pop
push
and
adc
adc
sbb
insl
or
add
ljmp
mov
dec
pushf
neg
jl
mov
daa
cli
adc
loope
call
push
dec
imul
scas
mov
cmp
mov
cmc
mov
xlat
icebp
mov
mov
sub
mov
insl
dec
insl
sti
and
cmp
sub
hlt
int3
in
xchg
and
mov
lods
lret
insl
inc
xchg
push
lds
add
mov
jg
pop
test
mov
jle
iret
add
add
leave
int3
pop
dec
cltd
sbb
pop
adc
iret
lcall
push
push
and
sub
int
sahf
out
divps
jmp
adc
testl
dec
mov
add
test
xchg
mov
cmp
fidivs
ds
pop
pop
idivb
int3
jne
lret
mov
aaa
mov
push
movb
dec
rcrl
scas
hlt
pop
mov
out
shl
mov
cmpsl
lea
scas
pop
scas
mov
aas
movsl
dec
enter
adcl
xor
js
cmp
nop
dec
sarl
inc
cs
adc
xchg
lahf
clc
sbb
in
cld
mov
dec
inc
add
in
enterw
cltd
adc
int
lds
sbb
pushf
sbb
fstps
es
jmp
adc
int3
std
sbb
lds
mov
iret
fimull
repnz
in
jno
movsl
fmulp
shl
leave
cmc
mov
push
mov
andb
ja,pn
mov
jnp
fdivr
movsb
jp
and
adc
mov
pop
xor
pushf
decl
nop
in
cmc
xchg
stos
dec
inc
sub
aaa
push
jns
sub
or
psubd
jl
cmp
inc
jb
jp
clc
je
lret
xor
dec
outsb
mov
xchg
lods
sub
mov
outsb
and
pop
shlb
or
xchg
pushf
cltd
xor
clc
adc
aaa
pop
push
mov
fbstp
dec
shr
xchg
mov
orl
fwait
jge
mov
nop
sbb
sahf
and
inc
jg
push
pop
fdivl
aas
aam
ds
movsb
mov
in
stc
das
rclb
es
scas
test
mov
mov
push
fwait
rcll
lret
jae
rep
xor
fnstenv
jnp
sub
inc
mov
aas
in
rol
inc
push
mov
sti
pop
sti
adc
dec
sub
mov
inc
sbb
psubsw
dec
cmp
test
ja
xchg
push
stc
sahf
jmp
shrl
std
test
and
cs
sub
mov
dec
stos
pop
mov
out
pop
lea
stos
testl
pminsw
cmp
aam
es
out
inc
addr16
cmp
insb
ja
jle
mov
lds
test
negl
es
lods
sbbl
push
mov
stos
xchg
jo
inc
dec
hlt
inc
inc
push
xchg
loop
fisubrs
xor
das
jl
ret
lret
pop
mov
add
leave
lods
incb
addr16
sbb
sub
stc
cmp
mov
add
movsl
insl
add
leave
fidivrl
mov
outsb
arpl
rolb
cmovne
add
jmp
in
push
pop
xchg
jmp
or
add
call
mov
stos
mov
imul
insl
push
int
mov
out
pop
mov
and
pushf
ja
ljmp
inc
cld
cmp
ret
cmp
lods
add
or
pop
sub
lock
cwtl
mov
ret
in
fcmovbe
dec
mov
mov
inc
sbb
jecxz
xor
fwait
inc
mov
xor
push
adc
xchg
push
adc
jg
loopne
cmpsb
sbb
mov
test
shr
fcoml
mov
dec
adc
mov
aad
ljmp
jl
cwtl
mov
scas
bound
adc
and
push
adc
cmp
das
sbb
and
mov
stc
lods
rcll
hlt
mov
push
std
das
xor
test
lock
adc
xor
testl
pop
xchg
xchg
xchg
in
mov
andb
mov
jo
mov
mov
sbb
int3
xchg
jne
xor
in
sbb
or
xchg
ror
sbb
aas
lahf
insb
sbb
push
jmp
inc
mov
outsb
js
mov
pop
daa
dec
push
jo
jae
inc
cmp
xor
mov
int
adc
mov
jmp
movsb
fwait
imul
mov
lock
shrl
pop
inc
mov
and
cld
lret
bound
cltd
rorb
sbb
and
loop
jmp
leave
xor
pushf
push
push
add
adc
mov
inc
inc
sub
jle
fisubl
sahf
stos
adc
cmpsb
data16
lea
fnsave
jns
push
imul
popa
ljmp
sbb
mov
testl
add
mov
sarb
push
in
and
rolb
push
loopne
push
aas
cs
cmpsl
jns
loope
cmpl
aam
mov
pop
movsb
repz
je
inc
mov
add
push
push
inc
jns
cmp
xor
mov
gs
pop
enter
out
or
and
sub
sbb
sti
loopne
aam
cmpsb
mov
sbb
lds
adc
jne
add
mov
mov
fs
xchg
test
outsb
cld
xchg
into
mov
add
mov
fwait
scas
movsl
adc
hlt
fwait
enter
andl
mov
jecxz
shlb
adc
pop
int3
ja
pop
cmc
fnstenv
imul
insb
out
mov
jge
jne
mov
stos
mov
mov
cmp
in
mov
xchg
sub
movb
sar
mov
lret
jae
fadds
add
ja
or
fiadds
xchg
mov
scas
dec
dec
movsb
add
sahf
or
inc
jl
pop
mov
testb
xor
mov
js
fimuls
mov
aaa
mov
cs
inc
and
inc
cmpsl
das
cmpl
mov
mov
and
in
movsl
in
add
xor
into
fidivl
push
inc
repnz
arpl
fnstcw
xchg
xchg
mov
jp
mov
jecxz
mov
sbb
add
add
push
jae
test
sub
push
in
jns
std
mov
fxch
inc
dec
or
int
mov
fs
stos
pop
inc
xor
mov
lret
incl
ljmp
pushf
fimull
cltd
mov
mov
bound
adc
stc
fadds
push
mov
push
xor
xchg
lds
mov
outsl
and
cmp
icebp
xor
jne
aad
pop
inc
xor
cmp
push
xor
cmpsl
test
cld
imul
mov
lock
mov
addr16
outsb
xchg
or
inc
inc
or
mov
or
jmp
cmp
cmc
pop
subb
push
std
pusha
add
mov
dec
loope
mov
jp
loopne
movsl
mov
jmp
jns
xchg
cmp
cmc
mov
xor
pop
mov
cmp
add
add
ds
es
mov
fsubrs
pop
xor
aas
push
ss
loope
sub
and
push
xchg
int
ss
lret
repnz
mov
push
ss
mov
push
lret
jge
int3
jl
adc
mov
push
inc
add
pop
cld
mov
popa
adc
push
cvtps2pd
push
and
jmp
fsubrs
int
add
sbb
xor
and
pop
or
sbb
xchg
or
cmpsl
adc
jnp
jo
push
cltd
std
cmpsl
cmp
cmp
xchg
sarl
daa
mov
outsl
pop
out
xor
xchg
mov
dec
loopne
lret
setge
jecxz
loope
inc
or
popf
jl
mov
test
outsl
jb
das
out
lods
cld
push
out
out
pop
mov
leave
mov
leave
or
sbbb
adcb
lcall
fdiv
fs
testl
aas
icebp
sti
icebp
mov
pop
sbb
jo
stos
clc
jmp
sbb
fnsave
add
sbb
das
ffreep
xchg
pushw
inc
sbb
pop
push
aam
sub
mov
mov
mov
jns
xor
adc
daa
movsb
inc
mov
jle
jge
pop
pop
lret
mov
and
dec
mov
inc
dec
dec
mov
mov
fs
ds
nop
jge
xor
push
fidivs
sarb
ficoms
jns
pushf
rcrb
mov
lds
pusha
ljmp
or
add
xlat
mov
into
out
fwait
pushf
roll
jecxz
add
out
es
lock
mov
jmp
sub
scas
mov
jae
xchg
stos
icebp
push
adc
or
shlb
fstpt
xor
jae
scas
sbb
jmp
inc
sarb
sbb
cmpsb
orb
insl
adc
jl
bound
sbb
pop
xor
outsl
xor
mov
cs
and
push
loop
mov
insb
push
lcall
xchg
inc
pop
jg
push
push
rorl
inc
inc
aad
and
or
in
stos
sti
mov
pop
inc
mov
mov
ret
pop
rcrb
inc
call
adc
lahf
mov
jne
sbb
add
lea
jns
add
mov
cmp
fbld
cs
or
mov
jbe
ja
lcall
add
mull
andb
pop
rcrl
mov
negb
mov
rclb
jge
cmp
jmp
cmp
hlt
push
fldt
cltd
cmp
je
dec
scas
fsubrl
push
adc
lahf
lock
dec
les
out
inc
repnz
mov
and
outsl
dec
addr16
sub
jno
sub
add
pop
outsb
jo
jl
jge
mov
xchg
push
sbb
repz
clc
aaa
clc
mov
mov
xor
pop
pushf
js
loop
orb
jno
mov
xchg
jne
incb
mov
fneni(8087
daa
rclb
ds
imul
xchg
data16
xchg
cmp
int3
mov
push
and
shlb
mov
push
jo
lahf
mov
bswap
test
jbe
adc
inc
add
cwtl
mov
lret
mov
pop
mov
mov
xor
cmp
movsl
xchg
call
and
cmpl
sarl
cmp
jns
icebp
xlat
mov
sub
test
je
shlb
jb
xor
mov
adc
mov
cli
in
fsubrs
ret
xor
and
jae
jge
pop
jle
aad
mov
inc
repz
insb
dec
lds
adc
or
cmp
cltd
popf
mov
dec
cltd
jno
repnz
ja
scas
loope
jne
mov
adc
int
cmpsl
adc
pop
inc
pop
cmp
xlat
push
add
xchg
mov
mov
test
or
jmp
xchg
push
pop
mov
stos
add
popa
mov
push
decl
and
stos
call
cmp
and
sbb
aas
fistps
rorb
call
mov
ja
movsb
xchg
mov
jbe
xchg
or
mov
popf
outsb
jbe
mov
les
xchg
ret
ret
test
or
jge
cli
nop
and
daa
or
repz
daa
xchg
jno
inc
xor
dec
int3
sub
movsb
lret
imul
repnz
jae
clc
xchg
inc
aam
sub
sarl
lret
push
inc
je
psllw
dec
pop
lcall
and
sbb
inc
xchg
inc
mov
das
cmp
stos
in
cmp
scas
outsb
cmp
or
sbb
fists
xorl
sbb
push
loope
mov
outsl
push
fdiv
loop
stos
or
outsl
jge
scas
sub
jmp
aam
aad
push
mov
mov
imulb
xlat
xchg
adc
dec
dec
pop
mov
cmpsb
or
dec
pop
push
push
pop
or
lock
push
shrl
fbld
test
sahf
xchg
in
mov
aad
push
sub
and
test
pxor
stos
test
pop
xlat
cmp
sbb
sti
rcrl
rclb
jae
xchg
fdivr
push
cs
dec
add
mov
fistpl
int3
cltd
adc
sbb
lret
xchg
daa
repz
dec
mov
sbb
mov
mov
fcoms
dec
bound
icebp
sbb
jb
adc
inc
push
fs
bound
sbb
dec
lods
ret
pop
dec
inc
mov
adc
push
adc
shll
fwait
arpl
sti
sti
les
lret
xor
jno
xchg
xor
sti
mov
jbe
xor
faddl
mov
push
push
in
push
jge
dec
sub
imul
gs
xchg
lret
jg
stos
jno
inc
pop
inc
inc
or
sbb
mov
fbld
lea
add
adc
cmc
mov
pop
mov
test
sub
fidivrs
add
sub
rcll
repz
in
repnz
sub
sbbb
lret
clc
cmc
sub
inc
adc
or
jae
nop
sbb
in
pop
inc
in
add
ret
cmc
je
test
cld
and
out
sub
dec
fs
lods
jg
je
jae
inc
push
dec
cli
adc
mov
test
insl
je
xchg
xchg
test
out
add
xchg
imul
and
jl
lds
jp
and
push
dec
mov
shl
hlt
push
rcl
fidivs
mov
sarl
dec
cs
adc
or
or
cmpsl
jo
mov
int
xchg
clc
and
ljmp
push
jno
push
mov
adc
xchg
test
in
addr16
ja
xchg
frstor
xchg
add
xchg
or
dec
xlat
out
rol
std
pop
cmp
je
arpl
aaa
cs
and
mov
inc
cltd
mov
das
xchg
je
psrlq
lds
subb
data16
sub
icebp
lea
mov
lret
push
mov
xor
pop
stc
dec
jg
mov
in
fdivs
adc
mov
or
fwait
mov
inc
inc
scas
push
pop
test
stc
mov
cld
inc
out
and
in
call
out
dec
mov
adcl
sub
pop
pop
adc
in
xlat
rcll
add
sbb
jae
jg
out
cmpsl
mov
adc
das
fnsave
call
or
or
cltd
xchg
pusha
cmc
orl
jnp
iret
test
cmp
test
add
imul
xchg
cmc
inc
repz
shl
test
inc
and
jo
popf
cmp
mov
addr16
pop
inc
lret
sahf
mov
call
cmp
pop
sbb
lcall
push
inc
ds
xchg
push
push
add
test
pop
pop
xor
mov
imul
mov
dec
push
and
lret
cmpl
sub
push
pop
out
pop
dec
shlb
and
xor
gs
adc
addb
int
and
mov
gs
sbb
inc
lds
test
cltd
push
xchg
icebp
sbb
into
xchg
fadd
leave
push
stos
cmp
popf
out
in
out
lods
dec
sub
mov
pushf
mov
popa
or
mov
adc
or
shrb
cmp
push
or
and
push
dec
test
lods
scas
xchg
or
popf
imul
outsb
sub
or
jbe
add
xchg
ret
jnp
pop
movsl
call
cli
repnz
ret
pop
cmpsl
scas
sbb
aas
cwtl
out
lret
cmp
cmp
cmp
dec
dec
ljmp
jae
aam
es
outsl
mov
jg
mov
xlat
add
mov
movb
sbb
movsb
sbb
js
test
jp
pop
ss
lock
inc
rcll
fstps
shrb
jmp
inc
cwtl
out
idivb
imul
push
dec
add
sub
in
dec
es
movsl
repz
pusha
sub
push
xchg
std
or
jnp
aas
mov
or
sub
add
out
xchg
nop
mov
shl
xchg
repnz
test
lret
roll
mov
and
add
jno
sbb
ss
or
std
fwait
adc
and
mov
out
sbb
sbb
sbb
mov
pop
icebp
xchg
aas
inc
push
push
nop
int3
sbb
mov
cmp
aas
sub
daa
mov
insl
movsb
mov
lock
imul
and
dec
adc
nop
mov
pop
pusha
lods
jne
popa
push
jl
jle
ljmp
stos
adc
mov
push
pop
jne
jp
jle
lods
arpl
or
pusha
inc
fnstsw
push
or
jns
jl
mov
add
pushf
adc
test
xor
inc
leave
jne
adcl
filds
call
jns
lret
adc
cmovge
ss
push
xchg
or
lcall
jge
iret
xor
dec
xor
jecxz
stos
sbb
cs
mov
lret
rcr
push
mov
mov
and
fisubrs
push
mov
push
xchg
mov
xchg
mov
jae
notb
mov
clc
jle
pop
and
addr16
jb
fidivl
stos
movsl
aad
mov
jecxz
pop
arpl
sarl
int3
sub
mov
mov
das
adc
ss
hlt
mov
fistps
lods
mov
mov
pop
sbb
push
sub
in
xchg
dec
jne
push
divl
jle
loopne
aaa
bound
test
jecxz
subb
cmp
out
push
pushf
or
inc
fsub
fnstcw
pop
sbb
ljmp
fbstp
aad
hlt
out
adc
mov
filds
popf
fwait
dec
xchg
into
shlb
dec
test
mov
insl
add
insl
xor
pusha
pop
xor
bswap
cli
fsubp
jmp
test
and
jmp
ds
or
push
mov
aas
js
stc
push
jbe
add
sbb
add
les
dec
xchg
pop
xchg
imul
sarb
jnp
add
divl
mov
jnp
jg
inc
in
pop
sbb
out
fwait
aas
js
mov
daa
sbb
rcrb
out
sti
push
mov
mov
fistps
and
mov
mov
mov
xchg
std
loope
pop
daa
push
pop
lahf
jmp
in
jbe
add
adc
and
repnz
xlat
or
stos
jmp
lds
adc
pop
dec
push
stc
addl
lods
popa
mov
fs
out
dec
test
sub
sbb
vmwrite
fs
jne
mov
shll
fs
sti
mov
lods
mov
xchg
mov
addr16
mov
and
fisttpl
aad
inc
lret
mov
out
lods
out
cmp
test
fisubs
test
nop
inc
int
into
mov
daa
pop
push
adc
decb
xchg
addr16
cmp
negb
jae
mov
scas
or
lret
rcr
jno
mov
sbb
xor
push
nop
xor
sub
fnstenv
or
mov
xor
adc
shll
add
push
mov
out
pop
inc
mov
inc
dec
andb
lcall
pop
mov
pop
ljmp
leave
in
cmc
dec
and
jmp
iret
mov
clc
sub
aam
sarl
dec
cmp
inc
dec
xchg
outsl
adc
enter
repnz
call
mov
fisubrl
jo
xor
pop
mov
ljmp
imul
cltd
fidivrl
cmp
shr
sub
cmp
popa
cltd
mov
jb
cmp
add
ja
sub
rcll
adc
enter
out
xor
jl
sarb
into
or
dec
imull
adc
cmp
outsb
sub
push
pop
stos
xchg
add
ret
pop
aas
fcomps
sub
aad
test
jnp
outsl
inc
sub
mov
sub
add
bound
hlt
pop
cmp
sbb
stos
add
mov
mov
or
pop
idivb
adcl
xchg
pop
out
jmp
lock
or
adc
cmove
and
dec
sbb
push
xchg
aad
pop
cmpsl
loop
dec
dec
xchg
fwait
in
sub
dec
adc
sbb
lret
or
leave
mov
mov
jnp
fisubrs
popf
jg
out
push
loope
mov
leave
das
pop
sub
pop
dec
jg
ret
sbb
nop
insl
cmp
cmp
inc
sbb
popa
push
ficomps
ret
cmpsb
mov
sbb
insl
scas
mov
stos
add
jg
add
insl
cmp
js
cmp
std
xor
jmp
shrl
inc
into
jp
shlb
inc
andb
sbb
adc
rcll
in
jmp
test
decb
or
std
dec
mov
dec
mov
fs
in
lods
mov
and
pop
mov
push
sub
xor
dec
pusha
mov
xlat
shr
les
aam
mov
jno
mov
mov
lret
push
mov
sbb
mov
out
das
dec
dec
out
push
fidivs
push
push
enter
add
jle
cmpsl
sti
or
push
inc
aam
mov
mov
cli
lret
movsb
add
xchg
stos
mov
xrelease
xchg
push
inc
sbb
xchg
push
xchg
or
mov
xchg
sbb
das
adc
gs
rcrb
pop
mov
jg
sub
or
test
xor
enter
cmpl
inc
jp
push
jae
movsb
pop
popa
cli
movsb
jle
mov
iret
test
xchg
bound
cmpsl
push
loop
repnz
in
daa
push
or
and
jmp
ficomps
fisubrl
dec
ret
push
mov
out
mov
outsl
xchg
jb
pop
jle
ffree
xor
inc
sub
mov
cmp
mov
mov
out
lods
cmpsl
pop
std
inc
test
xchg
hlt
mov
mov
aad
stos
mov
js
cs
lods
rclb
stos
cld
dec
int
inc
or
jl
add
fprem1
out
test
das
repnz
xchg
cmp
cmpsb
dec
jmp
or
sbb
jno
je
jl
mov
push
popa
insb
push
in
adc
aad
add
cmp
lods
and
xchg
jge
mov
cmc
jae
insl
std
fimuls
fistl
inc
xchg
test
mov
push
sub
or
hlt
je
cmpsb
and
mov
dec
out
push
in
adc
pop
bound
ficoms
pop
ss
mov
ljmp
jbe
clc
movsb
xchg
push
je
sbb
add
sub
imul
xchg
jg
mulb
stos
cmp
ljmp
jb
inc
sbb
pop
fsubrp
xchg
pop
in
fistps
push
fsubrl
bound
test
int3
sarl
in
pop
mov
xchg
fnstsw
stc
insb
into
loop
jo
cmc
dec
insb
cmp
cmp
mov
imul
rclb
sti
cmp
imul
hlt
xchg
jno
pusha
movl
cmp
xchg
in
push
sub
repz
adc
shl
sbb
in
mov
and
les
and
ret
std
push
add
mov
push
inc
scas
ds
cltd
jecxz
movsl
repz
add
loope
pop
jp
sbb
adcl
out
ljmp
cmpsl
lods
or
bound
out
cmpsb
std
cmp
inc
cmc
pop
roll
leave
aaa
aam
sbb
in
insb
xchg
xor
mov
in
jne
add
push
sub
xchg
cli
add
xchg
lock
pushf
mov
mov
jb
imul
mov
or
test
insl
xor
aad
clc
fcomp
sub
ja
xor
test
ret
mov
cmp
mov
fadds
sub
lods
and
testl
sub
mov
inc
cmpsb
dec
pop
or
cwtl
mov
nop
shll
dec
push
add
popf
test
mov
sbb
nop
cmpsl
jb
rcll
mov
push
test
sub
incl
cmp
push
repz
arpl
mov
sub
mov
lods
ret
xchg
push
movsb
lods
xchg
pop
sbb
add
pop
ljmp
mov
out
push
cs
mov
push
lds
clc
fwait
ds
aam
cmp
sahf
in
push
add
scas
int3
lods
sbb
xor
popa
jg
idivb
stc
ret
enter
sti
sbb
adc
lret
push
jb
pop
incl
xchg
into
out
fs
clc
insl
xchg
repnz
popf
push
cmpsb
or
push
push
pop
outsb
mov
pushf
pop
into
push
out
out
ss
sub
xchg
jle
aam
sbb
sahf
jne
stc
xchg
mov
mov
lods
in
arpl
mov
push
movsl
icebp
mov
js
inc
cmp
shrl
push
aas
xor
jae
leave
pop
xchg
enter
stos
xchg
xchg
or
pop
stc
and
aad
mov
mov
add
repnz
iret
adc
jg
mov
dec
out
ret
inc
lret
push
idivl
int
or
cs
mov
pop
adc
notl
and
push
cld
adc
cld
aad
js
mov
cmp
stc
fcoms
cmp
inc
or
jne
orb
loope
paddusb
add
mov
or
orb
mov
jecxz
stos
int3
je
shld
pushf
idivb
pop
in
loop
stc
andl
scas
jp
add
mov
mov
arpl
push
cmp
aam
sbb
int3
insl
push
bound
and
in
stc
sti
adcb
icebp
out
mov
pop
xchg
xor
inc
pop
int
inc
cmp
stos
pop
jnp,pt
js
ljmp
mov
sub
jns
lcall
xor
leave
add
mov
xchg
cmp
xchg
addb
inc
sbb
mov
js
sbb
testl
shll
jno
dec
mov
fcomi
add
sbb
lcall
jmp
fists
rorb
lds
lock
nop
jecxz
je
cmc
iret
push
int
data16
insb
jns
inc
and
loopne
cmp
xchg
bound
push
mov
push
xchg
dec
ds
clc
repnz
mov
outsb
test
adc
rol
jb
mov
add
fucomi
in
mov
pop
imul
jo
adc
xor
notl
xchg
mov
mov
sub
pop
cld
out
ret
sbb
ficoml
mov
enter
rcrb
add
cmp
add
jne
fcos
push
sub
fwait
imul
xchg
mov
or
or
icebp
sti
mov
stos
mov
rcll
mov
data16
loopne
sub
pop
leave
js
pop
je
out
or
mov
fstl
mov
lock
lock
mov
sbb
out
jo
mov
ja
push
pushl
dec
in
jmp
inc
jmp
aam
sbb
xlat
imul
ja
popa
popf
mov
rorb
out
xchg
mov
inc
psrlw
loop
inc
jae
test
push
cltd
sbb
cmp
fimuls
xor
int
inc
add
xor
mov
gs
xchg
add
jmp
int3
pop
dec
mov
in
xchg
scas
sbb
hlt
sar
dec
dec
jbe
push
outsb
cmp
lea
push
jg
lds
sbb
pop
push
sar
repz
pop
lea
jae
iret
mov
aam
in
cwtl
add
mov
mov
push
scas
fstl
shrb
dec
fisubl
faddl
add
mov
pop
out
cltd
mov
mov
jl
sub
fs
inc
into
dec
sbb
inc
int3
adc
shrb
daa
outsb
xor
outsl
shll
add
sub
push
mov
push
js
lcall
lret
cmc
in
insb
inc
jle
or
inc
cmc
cmc
arpl
mov
cmp
loopne
lock
nop
and
mov
xor
cmp
nop
adc
fsubrl
cli
push
pop
fcmovne
sub
mov
incl
out
sti
mov
add
insb
sub
ljmp
jg
sbb
cwtl
xor
cli
adc
lahf
push
shr
add
mov
cmp
outsb
push
xchg
adc
and
in
sarl
in
mov
subl
inc
jo,pn
scas
je
shr
mov
mov
sbb
fdivs
cltd
xchg
pop
xor
ficoms
popa
aaa
mov
pop
xchg
enter
dec
mov
leave
ret
jnp
jle
cmc
mov
push
adc
push
rcrl
imul
test
lea
sbb
pop
jecxz
fldl
or
push
mov
xor
fsubrs
hlt
pop
pop
adc
gs
xchg
shrb
mov
push
cltd
int3
pop
dec
and
mov
lcall
in
push
das
xor
rclb
mov
cwtl
or
dec
ficomps
sub
cmp
mov
jmp
mov
dec
int3
inc
shl
add
add
inc
cmp
decb
fwait
ja
adc
sub
mov
gs
ret
mov
mov
pop
push
sbb
lock
daa
cmp
pop
xchg
xor
stc
dec
push
aaa
sbb
mov
pop
and
fwait
sbbb
cmp
mov
stos
lret
jo
fstpl
das
enter
dec
xor
imul
mulb
jo
shlb
scas
pop
cmpsb
jge
xor
mov
sbb
cmc
lock
jae
mov
pop
test
xchg
sbb
cmp
iret
xchg
fisubl
lds
add
rorl
xchg
xchg
mov
xor
vmread
sahf
test
or
mov
jmp
and
sbb
mov
ficomps
dec
outsl
add
mov
xchg
jb
mov
sarb
or
icebp
fisubl
mov
rcrb
in
dec
ret
sub
xor
sub
jb
mov
cmp
xor
push
inc
pop
cld
dec
cmp
in
cmp
pop
xchg
fcmovbe
sbb
jmp
push
repz
inc
gs
cmp
movsb
mov
and
sti
or
mov
jb
cmp
lods
mov
das
pop
movsl
xchg
xchg
adc
das
cmp
hlt
rorl
or
fdivrs
jle
fstl
pop
pop
fisttpll
psllw
mov
push
xchg
sbb
mov
ljmp
shlb
fcmovnu
or
pop
cltd
add
jge
sbb
adc
iret
or
sub
adc
push
pop
add
cmpsl
mov
movsl
or
mull
scas
rcll
mov
lcall
or
popf
jb
lahf
push
orb
je
xor
out
mov
mov
sbb
mov
xchg
jge
or
lock
mov
test
mov
mov
sbb
cmpsl
movsw
fadd
popf
mov
ret
inc
jno
and
xor
adc
aad
frndint
sbbb
movsl
je
idivl
clc
xor
inc
xor
pop
call
loopne
pop
out
xlat
mov
pusha
icebp
xchg
jnp
mov
jle
fwait
imul
mov
jle
dec
xor
pushl
jl
and
imul
repnz
stc
loop
in
lret
xchg
mov
xor
in
xchg
mov
xchg
and
push
shrb
rorb
and
call
add
and
leave
fwait
aad
xchg
loope
inc
sbb
sub
pop
loop
mov
add
mov
add
les
adc
sub
xchg
mov
andb
mov
mov
aam
inc
and
add
cli
cmp
shll
jno
popa
jecxz
repz
arpl
xchg
pop
inc
popf
loop
pop
xor
jae,pt
fisubrs
xor
sbb
sbb
loop
mov
sub
adc
push
bsf
loopne
mov
and
and
out
movsb
jns
inc
fdivrs
rcrl
push
sbb
inc
and
stc
adc
mull
or
cltd
xchg
fdiv
push
mov
data16
sti
mov
pop
cmpsb
mov
stos
jl
movsb
popf
adc
mov
int
lcall
push
jl
loop
loop
shrb
xchg
xchg
pop
sbb
int3
mov
push
pop
outsl
dec
imul
aaa
fsub
addr16
imul
xchg
rcrb
fnstcw
jle
mov
ret
rcr
mov
sub
fwait
ljmp
push
mov
inc
mov
mov
jne,pn
jmp
inc
call
dec
ds
push
shrb
adc
add
out
cwtl
xchg
stc
mov
stc
mov
jle
scas
es
lods
push
int
lods
popl
adc
or
push
insb
push
sub
xchg
xchg
mov
add
out
lock
sbb
xchg
cs
out
nop
xchg
adc
and
mov
mov
jl
ds
or
mov
jno
add
push
aaa
arpl
xchg
mov
icebp
jmp
xchg
sbb
cltd
dec
jnp
sbbl
sub
inc
push
cmpsb
or
xor
and
aad
jae
out
sbb
nop
repnz
add
out
xchg
daa
notb
mov
mov
movsl
sti
xlat
mov
jmp
or
cmp
test
sbb
bnd
mov
or
out
sar
dec
mov
sub
lahf
into
push
pop
mov
das
sbbb
fdivp
ret
cmp
sbb
movsb
test
and
ret
je
ljmp
gs
mov
mull
sahf
jbe
jp
popa
jp
dec
cmp
pusha
cmc
mov
test
push
test
arpl
jbe
repz
inc
lea
jns
add
jmp
sbb
lds
sub
sbb
fprem1
sub
inc
jo
pop
shll
cmpsb
xchg
ljmp
daa
sub
imull
or
fbld
fwait
jo
pop
sbb
daa
insb
scas
pop
jbe
hlt
mov
shll
jo
and
and
mov
lret
and
aaa
subl
cmp
add
pop
aaa
push
outsb
je
andb
xchg
test
aas
stos
dec
repz
lock
and
mov
or
cmp
xor
add
add
push
jge
aas
sub
mov
add
gs
push
adc
sbb
and
adc
dec
test
xchg
and
icebp
cmc
add
cmpsb
jl
mov
lea
data16
add
xlat
fists
movsl
inc
push
cmp
push
subl
mov
push
aas
hlt
call
dec
inc
movb
inc
int3
pop
fbld
aas
test
dec
aam
hlt
and
rcl
lods
jne
rcr
xor
and
jo
ret
fcmovb
gs
dec
jo
xchg
imul
sbb
jecxz
faddp
mov
cmpb
dec
cwtl
push
dec
add
int
mov
aas
mov
jo
out
lcall
cwtl
out
lret
jae
fcomip
pop
dec
fwait
pop
sti
leave
lock
clc
fstl
call
call
mov
aas
out
in
das
gs
clc
mov
fists
push
test
cmp
xchg
xor
sub
test
add
gs
dec
andl
cltd
inc
mov
inc
add
pop
or
ja
imulb
loop
xchg
aaa
js
jae
sub
icebp
mov
inc
insb
pop
mov
cmp
jle
pop
jle
xor
inc
mov
push
mov
jb
push
add
jnp
into
inc
mov
fs
imul
sbb
cld
loope
mov
rorl
test
pop
in
out
sub
loopne
subb
cltd
inc
outsl
jno
cmpsb
fnsave
mov
xor
test
mov
dec
repnz
rorl
sbb
in
ret
fmul
insb
pushf
dec
outsl
in
and
cltd
jb
sub
into
cmp
mov
mov
imul
ljmp
je
js
mov
inc
addr16
add
mov
lcall
cmp
cltd
test
mov
lods
cmpsb
test
push
lea
lea
xor
xor
daa
test
outsl
loop
lock
xor
lds
insl
aas
jae
xchg
fimuls
mov
jbe
aas
or
jnp
mov
sub
fs
push
loopne
ret
leave
push
jnp
xchg
adc
loopne
in
or
int
fwait
imul
bound
mov
mov
fnstsw
xchg
xchg
pusha
jp
mov
into
jl
fcompl
lods
fstpt
jg
mov
pop
std
aad
adc
aas
stos
mov
faddp
rolb
test
xchg
test
cmpsl
jnp
mov
jg
jne
jno
jae
into
int
cmpsl
fisttpl
aad
and
push
cmc
cmpb
loop
cmc
pushf
xor
push
xchg
or
add
xor
loopne
shlb
mov
sahf
ret
dec
mov
or
fwait
inc
setno
sbb
dec
mov
mov
pop
jmp
cmp
push
sub
xchg
mov
xchg
jns
inc
sub
loopne
pop
insb
imul
adc
nop
popf
cmp
push
dec
jp
icebp
out
xor
jmp
jge
xchg
mov
dec
mov
movsl
sub
out
lock
jp
and
mov
js
mov
addr16
out
arpl
inc
cmp
cs
sub
lds
pop
add
in
testl
mov
sbb
cmp
iret
cmpsb
push
je
cld
sti
sbb
jp
mov
les
stc
movsl
mov
jno
pop
mov
push
sub
es
out
push
inc
stc
lds
addr16
lret
push
std
fimull
stos
jns
add
mov
pop
mov
mov
or
sbb
leave
mul
cwtl
and
orl
jecxz
rorb
dec
cmpsl
sahf
rolb
daa
inc
cli
enter
js
push
mov
inc
xor
ret
subb
ss
push
inc
cld
sarl
sub
pop
loop
loop
insb
enter
loopne
int
mov
out
aaa
cld
jo
mov
push
fs
in
les
dec
inc
xor
mov
sbb
sti
inc
dec
orl
sbb
loope
out
adc
or
pop
dec
or
je
stos
jae
mov
fcomip
es
jl
out
in
fisubs
add
call
dec
add
fwait
push
and
fwait
cltd
iret
imul
and
lcall
aad
fbstp
subb
ja
sub
xchg
cs
jb
jecxz
test
mov
inc
mov
add
stos
inc
sbb
fiadds
cli
repnz
or
sbb
dec
xor
bound
adc
sahf
in
sahf
xchg
icebp
in
insb
xor
test
mov
int3
out
int
jg
add
xchg
mov
pop
data16
jecxz
sub
loopne
pop
mov
or
jle
push
gs
dec
data16
cld
adc
lock
mov
lret
or
in
mov
sti
sbb
not
aas
shr
or
test
mov
scas
rcll
xor
mov
je
sti
jl
ficompl
imul
pop
jb
mov
call
clc
dec
aam
jae
sub
or
in
xor
inc
test
or
imul
push
in
jae
setns
dec
popa
mov
movsb
push
cwtl
loopne
push
icebp
cmpsb
sub
aas
sub
aam
sub
add
pop
xlat
cmp
mov
adc
divl
xor
jns
int3
dec
aaa
cltd
xchg
pop
ret
pop
jbe
add
xchg
mov
mul
cmpsl
in
loope
push
xor
leave
jecxz
in
pop
mov
cmp
add
adc
pop
repnz
std
mov
inc
xchg
lret
pop
out
sub
sti
ret
js
ds
push
cmp
ds
inc
movsb
adc
and
mov
ffreep
push
cltd
in
repz
sub
fmuls
pop
adc
test
ja
shlb
xor
push
ficomps
add
dec
cmp
sub
cmp
jg
fstpt
outsl
cltd
mov
test
mov
push
pop
repz
lods
test
cmp
loopne
sbb
imul
add
mov
dec
aas
inc
add
push
mov
jo
movsl
out
fcmove
pop
push
jmp
push
jg
lret
xchg
arpl
add
push
cltd
xchg
in
lret
lret
xorl
lods
lret
add
stos
js
lcall
inc
in
pop
mov
nop
jmp
mov
pop
fidivs
iret
loope
pop
mov
adc
pop
in
xor
idivl
std
frstor
ljmp
jo
test
mov
mov
push
jns
cwtl
mov
mov
outsl
mov
cmp
pop
pop
nop
fistl
dec
loop
bound
daa
xor
jg
lea
sbb
or
or
add
std
outsb
div
and
or
xchg
in
std
shlb
loop
pop
mov
into
and
movsl
add
scas
sub
sub
dec
or
in
loop
movsl
cwtl
divb
and
movsl
daa
or
les
daa
ret
insl
int3
je
fdiv
insl
dec
mov
loopne
cmp
push
inc
sub
push
je
mov
jmp
xor
outsb
push
xchg
lret
lcall
xor
pop
xor
sahf
inc
in
mov
fxch
pop
fs
jb
movsb
mov
pushf
mov
aas
rcr
je
inc
repnz
orb
add
cld
cs
xor
outsb
mov
jmp
cli
inc
mov
lahf
pop
shlb
pop
mov
fimull
ljmp
pusha
push
out
mov
in
sahf
or
add
push
push
pop
shll
sbb
mov
push
push
sahf
outsb
mov
jg
dec
ss
cmpb
sbb
jg
stos
jle
xchg
jle
jns
loope
xlat
sub
negl
dec
pusha
clc
cmp
jg
push
pop
or
add
sub
addr16
in
andl
stc
hlt
ja
mov
xor
dec
and
in
data16
lcall
sub
or
and
adc
int
push
push
fs
fidivrl
xor
push
into
push
xlat
or
int
xchg
icebp
cmp
in
mov
out
sti
in
es
and
mov
fs
push
push
sbb
in
loopne
cwtl
sbb
mov
jo
int
dec
sub
mov
scas
add
jmp
jl
xor
mov
and
mov
dec
push
rcll
xor
sbb
hlt
repz
inc
jb
sahf
pop
and
cld
jae
pop
or
or
pop
sbb
inc
imul
mov
mov
lods
cmpsb
clc
lods
dec
imul
jo
cmp
push
jmp
aad
jno
sbb
adc
xchg
lods
push
dec
jnp
adc
ljmp
outsl
cli
fs
sbb
xchg
filds
sbb
in
xor
aaa
jmp
or
hlt
iret
lods
xor
in
lods
call
das
mov
sbb
fcompl
aas
fisttpl
rcl
arpl
adc
rcl
dec
dec
adc
int
test
cs
inc
sbb
mov
or
cmp
jmp
mov
jb
aaa
nop
and
adc
fcomps
and
xchg
in
mov
lock
lahf
dec
stos
gs
ljmp
into
mov
pop
sbb
inc
xorb
cmc
mov
adc
stc
jne
cmpsl
je
aam
push
mov
sbb
mov
loop
mulb
fcmovb
pop
mov
adc
cmp
mov
movsb
test
aas
xchg
push
std
push
inc
fwait
jge
out
cmpsb
in
sbb
mov
jg
and
pop
cwtl
cmp
iret
sub
dec
inc
pushf
and
push
push
push
mov
popf
or
and
add
adc
stos
or
push
or
int3
xor
add
movsb
popa
adc
pop
jmp
sbb
sbbb
and
popa
jmp
in
xchg
jg
out
pop
add
jp
aam
add
add
inc
fdivl
mov
ljmp
out
fstl
andl
popf
jmp
cmc
call
mov
mov
fstp
xor
fnsave
das
push
pop
insl
js
adc
mov
cmpb
iret
adc
add
popf
cmp
scas
cmp
add
add
adc
in
adcb
and
mov
add
jg
pop
mov
pop
out
lret
ja
push
pop
and
xor
or
rolb
mov
jns
jne
or
xchg
int3
sti
loopne
xchg
mov
or
sbb
stos
in
scas
and
dec
stos
sub
pop
cmpl
orb
int3
push
out
jge
rcrb
mov
mov
sbb
jg
mov
and
idiv
push
aad
sarb
cmp
das
loop
mov
mov
sti
stos
and
in
sub
xor
shll
sub
scas
sbb
jmp
icebp
mov
push
and
dec
out
out
jnp
and
shlb
inc
jecxz
nop
ret
je
push
jmp
xchg
div
and
stos
add
push
sahf
cmp
xchg
sbbb
and
aad
mov
mov
and
and
add
notl
push
lret
push
in
xchg
push
out
out
movsl
pop
inc
dec
in
icebp
push
loopne
int3
sbbb
divb
push
out
scas
mov
cmp
jmp
cmp
jmp
jbe
icebp
jne
push
popl
push
bound
dec
aad
push
mov
dec
daa
add
cld
cmp
cmpsb
or
or
mov
adc
and
inc
ljmp
dec
pop
add
inc
and
cmpsl
lods
imul
out
cmp
lods
movsl
cmp
out
mov
xchg
sar
cmpsb
xchg
lret
shl
inc
push
push
hlt
mov
and
xor
pop
enter
xchg
cld
loop
mov
or
adc
movl
sbb
dec
daa
jmp
mov
or
out
inc
add
jae
jno
in
pop
and
adc
rorl
add
mov
adc
ret
push
js
mov
pop
and
mov
sbb
xorl
clc
push
pop
xchg
addr16
call
iret
pop
jno
cmp
iret
or
dec
mov
cmp
sub
jb
addr16
cmp
jne
jae
pop
in
mov
ds
pop
stos
jp
and
cld
test
sub
inc
add
or
push
in
fdivl
lds
add
popf
jmp
out
jge
jmp
dec
jnp
outsl
sbb
xchg
add
xor
in
jg
and
cli
cmpsl
xchg
pop
lcall
lcall
mov
mov
adc
mov
mov
sbb
xchg
imul
pop
gs
push
sti
scas
movsb
fdivrl
adc
inc
call
mov
add
jmp
add
mov
int3
add
inc
mov
cmp
jge
gs
push
cmpsb
sub
nop
shlb
dec
cmp
jmp
cmp
sarl
imul
test
int
jmp
jae
add
stc
add
sub
addr16
imul
sbb
mov
dec
fnsave
fidivs
jecxz
lock
in
xchg
push
sub
pop
ja
xor
fsts
icebp
sti
xchg
insl
adc
movsl
cmp
xchg
fcmovne
out
jb
sub
xchg
iret
jmp
ljmp
add
ljmp
inc
push
repz
cmp
insb
ficompl
cld
in
cmp
addr16
mov
and
and
mov
mov
in
add
inc
pop
or
xchg
fwait
mov
dec
das
dec
loop
cmpsl
sub
test
adc
sub
es
in
xchg
pop
jmp
sub
lods
mov
or
xchg
sub
ja
inc
mov
inc
mov
sub
xchg
pop
movsb
pop
dec
lods
fs
mov
cmp
add
lods
push
jne
sbb
das
aam
es
jnp
push
ljmp
dec
test
movsl
ds
decb
xchg
out
movsl
push
and
push
xchg
shr
xchg
insb
sub
jno
out
scas
jo
add
pushw
mov
mov
inc
loopne
mov
mov
xorb
out
mov
je
cltd
mov
pushf
push
jge
add
jns
sub
lcall
push
or
inc
pop
push
adc
sub
pop
jbe
cmpsl
mov
cmc
test
inc
inc
mov
andb
in
or
fsubrl
testl
enter
mov
stc
decb
out
push
mov
xchg
outsb
pusha
pop
xlat
inc
pop
add
rorl
pop
clc
into
popf
sub
fistpl
fsubr
mov
movsl
fstps
cmp
pop
push
repnz
mov
rep
push
or
nop
pusha
shl
fnstcw
subb
push
es
jle
mov
clc
andl
inc
sbb
test
mov
fsubs
sub
fxch
daa
lret
std
push
dec
or
mov
and
sti
imull
or
jns
scas
xor
sbb
mov
xchg
xchg
and
mov
lods
and
jecxz
or
mov
dec
dec
pop
push
sub
out
outsb
jecxz
dec
xor
repz
sub
push
pop
lock
cmp
popa
movl
ja
ret
sbb
dec
pop
pop
loop
icebp
and
mov
sbb
data16
push
or
fwait
jb
out
xchg
or
pushf
jge
cmc
mov
dec
cs
nop
lcall
out
ficoms
add
sub
push
scas
into
mov
sbb
mov
mov
arpl
lods
scas
in
mov
push
cmc
adc
mov
add
dec
movsl
pop
cld
mov
or
xchg
mov
cwtl
adc
xchg
push
lahf
shrb
int
mov
pushf
fistl
aaa
test
push
out
pop
in
shrb
into
fsubl
ret
xlat
push
fs
cmpsl
push
lea
test
lods
push
dec
sbb
cld
mov
cmp
mov
iret
imull
int3
arpl
mov
das
movsl
and
cwtl
mov
jl
mov
and
imul
jmp
xor
pushf
jp
jno
xchg
xor
xchg
iret
and
nop
add
fs
add
enter
dec
pop
mov
dec
in
imul
dec
in
dec
xchg
dec
cmp
mov
test
and
push
adc
mov
lret
adcb
loopne
push
into
mov
imul
std
stos
dec
std
sti
enter
sbb
loop
or
xchg
mov
push
sub
cli
imul
mov
adc
sti
ja
out
cs
push
jae
fwait
stos
inc
je
and
xchg
push
mov
repz
aad
mov
jbe
sub
les
fldl
add
nop
push
and
and
loop
xor
lret
out
and
adc
lcall
inc
mov
daa
testl
mov
adcl
sbb
push
loop
ds
add
orb
pop
mov
adc
add
sub
das
cmpsb
lret
add
inc
insl
js
jge
aad
scas
sbbb
mov
or
cld
sarb
xor
movb
xor
push
aas
daa
and
mov
mov
idivl
jle
dec
pop
rolb
mov
adc
sbb
lds
xor
adc
inc
jmp
daa
dec
cmovae
add
cltd
jo
add
sahf
xchg
nop
std
adc
in
mov
out
sub
or
adc
out
in
scas
push
add
xchg
ret
xchg
scas
lea
cld
sub
mov
ret
push
push
jbe
mov
jo
jge
repnz
shlb
dec
and
jae
sti
add
mov
pushf
add
dec
push
cmpsl
test
cli
and
sbb
mov
icebp
mov
imul
sahf
mov
outsb
mov
cmpsl
xchg
cli
shlb
sbb
mov
sbb
push
xor
cs
cmpsl
or
loop
std
leave
fsubrp
jo
insb
add
mov
add
and
push
insl
sti
loopne
mov
pop
jl
shll
cmc
pop
and
aaa
jp
push
imul
pushf
nop
mov
dec
cmpsb
sbb
mov
out
cmp
daa
fsubrs
cmc
dec
loop
fbld
xchg
out
ret
jmp
adc
lret
pop
push
scas
mov
sbb
sbb
ret
shrl
call
or
jb
xor
cmpsb
or
ds
sub
dec
rol
add
dec
cmp
mov
and
lock
bound
scas
adcb
mov
iret
sbb
vmread
fisubrl
mov
loop
jno
adc
call
sub
add
adc
into
sub
dec
dec
mov
xlat
lcall
sbb
and
fildll
rorb
hlt
push
inc
push
mov
outsb
inc
inc
pop
cmp
mov
int3
fwait
test
lahf
push
iret
pop
ficomps
add
pop
jnp
out
pop
push
pop
les
xor
inc
inc
push
dec
arpl
adc
xchg
fs
cmp
jp
cmp
cmp
rcr
sti
outsl
loopne
adc
xor
test
cmp
fldenv
repz
mov
push
sub
mov
mov
aam
ljmp
xor
xchg
enter
mov
mov
aam
cmp
pop
repz
pop
inc
push
push
mov
add
pusha
loope
out
mov
cmpsb
jecxz
mov
insb
sbb
loop
jbe
pop
repnz
jnp
inc
xchg
mov
clc
lea
mov
fiadds
outsb
adc
or
pop
icebp
aas
test
imul
adcb
mov
push
fstps
lods
mov
js
sarb
push
cmp
maskmovq
imull
pop
mov
jle
cmp
adc
jle
pop
loop
dec
testb
jg
or
inc
xchg
mov
xor
and
cmpb
pop
iret
hlt
aam
mov
ss
notb
sbb
repnz
popa
inc
jg
addr16
jae
xchg
xchg
cmp
fidivrl
and
xor
fsubl
sub
repz
push
dec
push
sbb
push
pushl
pop
hlt
cmc
sti
imul
add
gs
movsl
rcrl
jno
loope
lods
out
in
fstl
cmp
bound
xchg
or
mov
push
lods
lret
and
movsl
divb
sub
and
jb
lcall
mov
fsubs
cmp
aas
lcall
push
jno
jge
das
lods
out
shrl
jns
hlt
ret
mov
and
out
jns
cmpsl
mov
sbb
pushf
rolb
dec
sbb
out
outsl
scas
adc
inc
dec
and
fcomps
rcrb
pop
mov
add
repnz
mov
sub
rolb
and
jns
insb
fiaddl
xchg
dec
sbb
stc
insl
test
aad
lret
sti
in
mov
or
or
jae
pop
mov
mov
cmpsl
fdivrs
xor
mov
sti
repnz
add
test
rorb
mov
call
mov
dec
and
mov
push
rcrl
jge
shrb
cmp
push
inc
cltd
xchg
das
mov
into
bsr
and
lret
rol
jb
and
fistl
daa
test
not
xchg
shll
push
pop
dec
pop
mov
pop
fidivs
cs
jmp
cmp
inc
out
ss
pop
in
stc
jg
adc
cmpb
jp
clc
xchg
mov
pop
es
or
out
push
imul
mov
pop
xor
mov
sub
sub
push
js
cmp
xchg
idivb
or
popf
and
fstpt
test
fwait
pop
pusha
sbb
ds
repz
jle
xor
mov
jle
or
jno
dec
hlt
xorl
inc
popa
out
mov
sbb
jne
loop
nop
xor
fstps
jp
mov
mov
int3
push
add
push
pop
jae
add
scas
push
daa
sbb
and
outsb
xchg
mov
out
inc
int3
in
test
pop
jg
sbb
jnp
pusha
movsl
out
lods
loopne
jbe
mov
pop
cmp
sub
dec
cmp
pop
lock
jmp
loope
repz
add
leave
sub
sahf
pusha
in
pop
add
movsb
in
xor
mov
jle
sti
bound
mov
ret
lock
lcall
popf
hlt
push
mov
lds
ror
adc
push
adc
jns
ffreep
ds
cmpsl
mov
mov
dec
ss
dec
mov
fnsave
mov
push
mov
pop
adc
arpl
jmp
sbb
adc
xchg
pop
push
enter
rorl
jns
adc
push
sti
or
scas
push
mov
adc
xchg
out
into
adc
outsl
push
adc
stos
xor
lret
aas
pop
test
in
call
pop
sub
sub
int
pop
sub
cmp
std
mov
sbb
jnp
inc
mov
inc
sbb
or
xor
pop
out
jae
test
adc
adc
out
cmp
jb
sbb
inc
lret
aad
imul
jnp
imul
les
jbe
fadd
or
sbbb
jmp
fsubs
jbe
sub
or
jle
fucomp
dec
mov
xor
outsb
idivb
ljmp
bound
mov
orl
sbb
push
fcomip
pop
pop
lods
repz
or
addr16
adc
scas
ret
cmc
or
mov
pusha
pop
or
add
cs
inc
mov
lds
pop
ret
lods
test
hlt
int3
push
and
je
nop
clc
sbbb
das
jp
pop
push
test
sbb
aam
aaa
xchg
xchg
sub
xor
fsubrl
cwtl
jns
cmp
pop
sub
fs
jle
ja
insb
stos
push
add
mov
mov
outsb
cs
inc
aaa
inc
mov
jecxz
jae
shr
pop
mov
call
inc
out
jae
cmpsl
xor
adc
mov
adc
vphaddbq
cmpsl
xchg
adc
ret
sbb
mov
daa
jge
rol
push
mov
andb
stc
dec
pushf
mov
inc
cmp
das
out
addr16
jge
jp
pop
jle
sahf
push
dec
push
push
es
push
inc
outsb
and
and
xchg
mov
jge
out
add
xor
xchg
cli
inc
jp
or
mov
dec
test
test
lock
and
loope
jne
scas
pushf
jmp
or
mov
jbe
mov
hlt
incl
dec
xlat
mov
pop
mov
inc
call
pop
mov
mov
test
shll
adc
inc
inc
repnz
push
mov
fistps
je
dec
mov
mov
jns
inc
cld
or
pop
mov
fnstcw
mov
ljmp
pusha
adc
xchg
imul
mov
dec
setp
mov
fwait
lahf
push
pushf
xor
or
add
int3
and
out
insb
add
add
mov
out
xor
stos
jne
or
dec
cmp
and
fisubs
jle
push
add
fdivs
cli
dec
incb
dec
cmp
xchg
jno
lods
testb
jle
out
inc
dec
les
push
ja
scas
iret
js
sbb
xor
fwait
inc
pop
clc
clc
daa
or
adc
jle
lock
cmc
push
ss
ret
push
inc
dec
rolb
fdivl
pusha
pop
pop
decb
inc
inc
lods
ljmp
xchg
icebp
outsb
cmpsl
lahf
ss
mov
fisttpl
xor
imul
ret
mov
xor
pop
xor
cmp
push
cld
mov
push
xor
cltd
jno
add
stos
sbb
cmc
lds
shr
pop
int3
out
xchg
outsb
scas
or
pop
sub
xor
imul
scas
scas
jae
mov
push
inc
dec
mov
into
mov
push
ja
jl
xor
test
mov
xchg
pop
cmpsb
xor
jle
stos
fistpl
imul
fwait
and
arpl
or
repnz
cwtl
into
aad
shr
mov
inc
jnp
gs
push
lret
out
imul
dec
xchg
pop
mov
into
lret
cltd
push
sub
or
fnstsw
sbb
fsts
jb
cmp
in
adc
pop
lods
and
jo
lds
mov
out
fadds
mov
outsl
xor
bts
dec
inc
ljmp
icebp
add
js
mov
sub
loope
test
ret
pop
leave
lret
fldenv
cmp
sbb
inc
lcall
loop
cmpsl
lahf
fnstenv
jmp
mov
or
lods
and
dec
lds
push
lock
xor
mov
cs
mov
mov
mov
imul
mov
pause
mov
xchg
pop
or
popa
sbb
stos
cmc
jnp
stos
insb
dec
pop
pop
push
pop
sti
sub
sub
jnp
jl
push
stos
mov
or
shrb
push
or
pop
fldenv
mov
enter
insb
or
jle
or
inc
xchg
stos
std
pusha
popa
mov
or
pop
adc
mov
pop
test
outsb
data16
mov
sub
mov
xor
jle
sub
daa
or
sbb
daa
shrb
test
mov
andb
into
pop
pop
test
xor
dec
imul
cs
jmp
inc
test
loope
movsl
push
mov
or
xchg
imul
cltd
jae
xor
andb
adcb
out
scas
out
xor
dec
in
jmp
push
in
lods
sbb
and
and
mov
mov
imul
lock
push
sbb
mov
sti
test
jnp
imul
in
rcrb
gs
push
or
add
inc
std
and
adc
lods
xchg
mov
stos
aad
movl
add
xor
cmc
fnstsw
fwait
push
repz
and
cmpsl
iret
xchg
aam
test
pushf
xor
stos
push
mov
scas
inc
loope
arpl
jno
ss
pop
push
mov
xor
out
xchg
xlat
mov
inc
add
mov
daa
inc
push
in
xchg
add
cmpsl
lea
mov
add
or
ficompl
mov
out
xor
scas
daa
icebp
xor
lcall
lods
xor
cli
sbb
fcmovnbe
mov
fldenv
mull
pop
imul
add
cmpsb
enter
in
cmp
std
jbe
adc
dec
fwait
cmc
push
pop
clc
xchg
cmp
lcall
fnsetpm(287
fisttpll
push
fdivr
aam
push
testb
aad
stos
mov
arpl
clc
mov
in
jne
inc
mov
stos
cld
or
lret
add
add
jne
movsb
add
int
mov
aam
mov
add
std
and
test
add
push
jmp
rclb
iretw
rcrb
sbb
mov
xor
out
aaa
jbe
dec
jp
or
push
adc
jns
or
pop
rcrb
mov
cmp
mov
movsb
jnp
sbb
das
push
mov
and
xor
jp
mov
je
cmp
xor
lahf
mov
pop
jmp
dec
mov
sbb
rorl
cld
jo
dec
int3
outsb
mov
mov
mov
movsb
test
dec
push
iret
pushf
into
xorl
cltd
cmp
bound
cmp
cli
daa
loopne
pop
in
test
int
push
or
daa
mov
ret
out
mov
inc
nop
mov
ficomps
push
outsb
jle
and
push
pushf
cmp
xchg
mov
xchg
mov
lds
ds
xlat
enter
inc
mov
and
test
rcll
mov
jp
or
adc
sbb
subw
out
fnstsw
fcompl
mov
cli
fnsave
fs
inc
hlt
ficompl
arpl
push
daa
out
push
or
jmp
ljmp
andb
pusha
in
mov
hlt
mov
sub
or
mov
cli
push
call
sub
cmp
fucomip
fsubrs
add
pop
dec
jo
and
lods
testl
inc
jne
mov
sub
cmp
insb
mov
adc
xchg
stos
sbb
arpl
aas
out
mov
inc
out
lahf
pop
iret
jno
adc
cmc
xchg
sbb
xor
dec
dec
mov
mov
adc
stos
jmp
pop
pop
adc
inc
mov
cmp
dec
jo
jg
xchg
out
xor
xor
xchg
movb
in
dec
xchg
out
ficoms
mov
mov
jmp
mov
in
dec
pop
jb
or
push
cmp
push
js
fbld
pusha
push
cmp
int3
scas
cmp
loop
loopne
mov
xchg
sub
cmp
sub
std
test
and
and
xor
add
cld
movsb
sbb
mov
popf
loope
and
mov
push
call
sub
sub
push
bound
cmp
and
push
out
adc
adc
inc
dec
std
pop
pop
sbb
sbb
and
xchg
cmp
pushf
out
mov
adc
or
stc
js
dec
push
das
xlat
xchg
push
sub
stos
lea
in
push
adc
leave
mov
jmp
xor
dec
mov
lret
add
push
test
or
loopne
stos
fimuls
jno
shll
jp
adc
sub
inc
dec
add
cwtl
nop
les
pop
adcb
outsb
pop
pop
cmp
outsl
out
in
jns
scas
out
mov
push
cmp
mov
clc
adc
push
inc
repnz
and
cmpsl
or
fisttpl
add
pop
mov
lea
lds
lods
mov
sub
stos
or
mov
inc
push
pop
gs
inc
jl
xor
or
dec
dec
fldt
cltd
xchg
push
movsl
sub
stos
jmp
and
cld
mov
outsl
nop
loope
dec
xlat
aas
sub
movsl
and
xor
addr16
es
mov
sbb
test
ficompl
and
mov
mov
cmpb
mov
add
test
sbb
sbb
mov
jle
adc
subps
adc
bswap
mov
sbb
mov
ret
shl
dec
add
add
cmp
lods
mov
adc
inc
dec
inc
ljmp
test
and
mov
sub
pop
in
cld
pop
push
rclb
push
negb
dec
dec
filds
inc
dec
dec
mov
in
imul
xchg
fwait
inc
xor
push
inc
test
mov
shll
inc
popf
lret
ljmp
and
pop
jp
out
mov
pop
lretw
or
aam
and
movsb
adc
jbe
xchg
sub
push
lea
es
pop
dec
push
push
mov
fistl
jmp
xchg
or
sub
dec
nop
push
testl
push
cmp
add
xchg
mov
iret
sbb
testb
into
popa
jg
mov
data16
jl
leave
dec
out
mov
arpl
mov
xchg
fs
inc
xor
movsb
nop
es
dec
inc
insb
repnz
scas
and
sub
decl
sbb
out
sub
cld
adc
imul
imul
sub
lods
jnp
icebp
adc
pusha
sbb
push
or
hlt
cmp
into
cmp
inc
addl
push
dec
xchg
jmp
xor
xchg
mov
xor
inc
fs
xor
mov
push
mov
xor
test
xchg
jo
mov
jl
jg
jp
xor
xchg
xchg
push
adc
aam
cmp
lahf
mov
jle
in
and
jmp
sarl
sub
inc
jbe,pt
fimuls
inc
push
jae,pt
or
add
dec
xor
sbb
xor
and
lahf
aaa
mov
jg
jb
xor
movsb
std
in
adc
mov
fldl
xor
sbb
jb
add
sbb
cltd
xchg
adc
xchg
out
mov
lahf
aaa
imul
fisttpll
and
jnp
inc
xor
idivb
das
adc
pop
movsb
lods
sub
outsl
testl
push
jae
lea
dec
xchg
mov
jb
icebp
xchg
and
sbb
repnz
xchg
and
push
int3
xchg
push
data16
movsb
mov
xchg
rcl
xor
les
ja
out
je
sti
mov
or
clc
out
aad
ja
and
mov
add
sub
jge
dec
je
xor
xor
jle
mov
aas
mov
addl
lret
scas
shlb
mov
std
pusha
ss
pop
and
rol
js
mov
mov
push
daa
iret
cltd
loopne
cmp
jnp
pop
mov
repnz
insb
ss
int3
push
cmp
jae
jbe
scas
out
dec
mov
push
ret
or
ja
jmp
jecxz
lret
cmpl
test
add
jnp
push
xor
nop
jae
xchg
mov
iret
incb
inc
or
sahf
dec
xchg
sub
shlb
push
add
in
stos
dec
dec
andb
mov
sbb
mov
xor
jl
jae
push
call
xchg
ss
stc
jmp
or
jle
pop
and
push
loopne
aas
push
imul
int3
xchg
sbb
push
push
test
lea
add
mov
mov
shll
ja
mov
cwtl
mov
push
outsl
push
inc
loope
cmp
pop
cmpsb
sar
mov
cs
movsb
cmp
adc
jno
mov
add
cmp
sub
xor
jbe
ds
cli
ror
lret
pop
stos
jnp
and
imul
lods
imul
mov
ljmp
push
cmpsl
adcb
cli
jecxz
push
cwtl
push
lods
inc
push
jne
or
mov
cmpsl
sbbb
outsl
cmp
in
cmc
cmpsl
pop
ret
adc
mov
jae
aam
ja
cmpsl
mov
xor
rclb
in
cmp
in
ja
sub
fcmovu
cmpsb
pop
loopne
add
xor
and
xor
push
sarb
push
mov
mov
insl
pop
scas
push
mov
and
cmp
andb
loopne
jle
pop
adc
loopne
pop
leave
aas
cld
movb
bound
mov
add
out
jl
lds
loopne
lods
sbb
incb
jo
ret
out
mov
lret
pop
and
xchg
out
xor
hlt
popf
ficoms
lods
js
xor
les
pop
inc
dec
push
fstps
inc
test
in
inc
push
idivl
bound
test
pop
xchg
std
or
pop
lret
adcb
sbb
mov
cmp
dec
pop
fsubl
inc
out
mov
jl
lret
add
popa
stc
les
sbb
sbb
xchg
in
push
sarb
xchg
fs
sahf
jp
addr16
test
arpl
xor
or
shr
repz
push
jno
jno
cli
dec
aad
lds
cs
pop
fdivrl
add
push
mov
jb
add
ljmp
iret
push
iret
pop
adc
rclb
fwait
cmp
sub
jecxz
push
cmp
cmpsl
adc
int3
aad
std
or
int3
mov
mov
jns
inc
inc
or
jle
je
fbld
jns
push
sbb
sub
pop
cwtl
daa
dec
or
mov
pop
adc
pop
mov
mov
push
ret
or
popl
and
xor
mov
icebp
mov
mov
cmp
js
adc
adc
inc
jmp
pop
loopne
xchg
pop
pop
aad
aas
and
xchg
mov
iret
push
pop
imul
rorb
xchg
and
adc
ljmp
addl
xchg
mov
push
ror
lods
dec
ret
mov
outsl
add
dec
xlat
dec
pop
sub
icebp
xchg
dec
push
test
repz
inc
scas
lahf
sbb
jge
cmp
ror
jne
sub
xchg
mov
sbb
fsubrs
jae
xchg
fwait
movsb
fildll
pop
xor
push
out
out
in
jle
scas
jae
sbb
lret
push
pop
xor
lcall
and
pop
in
pop
adc
ss
cmp
or
out
in
and
leave
inc
lret
jmp
iret
aad
mov
mov
mov
add
add
jge
lcall
cmc
popa
mov
es
int
push
mov
shrl
jb
call
mov
clc
leave
mov
loope
pop
out
and
add
movsl
adc
mov
ret
rol
cmp
sbbl
dec
jmp
xchg
pop
stc
aas
cmp
cmp
clc
out
inc
daa
xor
imul
mov
shll
sbb
loop
addb
cmc
les
js
ret
mov
fs
sub
insl
jns
or
or
jmp
test
mov
mov
add
jge
pop
inc
sub
mov
jle
mov
mov
push
loope
or
aam
or
fucomi
mov
inc
mov
jmp
in
add
sbb
or
sti
or
jns
sub
mov
js
rolb
adc
imul
or
jge
adc
iret
ror
insb
rol
int
aam
sar
daa
cmpsb
push
inc
loop
lret
jae
add
jge
sub
mov
jg
out
ret
xor
sub
push
inc
inc
sbb
stos
push
aam
int
xlat
gs
xor
jb
aaa
fs
inc
dec
hlt
negb
js
inc
in
push
mov
into
xchg
xchg
xor
pop
in
scas
movsl
popf
xchg
mov
inc
sarl
lds
mov
jmp
dec
pop
pop
lods
aaa
cmp
incb
pushf
and
mov
xchg
jne
lret
inc
add
jmp
ds
and
jmp
arpl
inc
inc
xor
add
xor
xchg
jno
mov
cld
xchg
mov
fidivrl
repz
je
adc
mov
sub
stc
xor
pop
push
jbe
sub
adc
dec
jp
out
pop
aas
addr16
dec
jl
xor
pop
jmp
jle
lcall
cmpsb
test
les
sub
pop
cmpsb
jecxz
popa
push
push
xor
push
dec
cmp
push
xor
or
dec
ljmp
push
repnz
mov
outsl
cmpsb
mov
ja
pop
outsb
fsubrs
pop
mov
aad
cli
lret
mov
test
sbb
sbb
clc
in
outsb
scas
mov
and
or
jp
test
mov
or
repnz
les
mov
insl
je
mov
in
fs
lret
das
add
in
out
push
hlt
movsb
ja
mov
cmp
or
xchg
lea
dec
addr16
adc
push
push
mov
pop
test
js
cmp
mov
out
dec
jno
pop
push
shlb
and
mov
fsub
js
in
lahf
not
dec
mov
std
jg
scas
test
and
add
mov
jno
cmp
ss
shlb
push
pop
add
out
pop
lret
inc
lods
mov
pop
cmp
cmp
out
hlt
lods
xor
sbb
pop
cmp
data16
mov
stc
pop
orl
sbb
je
in
xlat
xchg
add
loopne
fstps
shll
inc
cmp
fnstsw
and
cltd
mov
sbb
add
stc
lods
fbld
cmpsb
mov
adc
out
sahf
and
pusha
jnp
jb
push
fwait
jp
cmp
xchg
or
out
jbe
xchg
cli
mov
or
and
cmp
in
les
frstor
xorb
push
dec
add
pusha
imul
mov
leave
mov
iret
fistps
inc
imul
xor
fsubl
ljmp
clts
push
jne
mov
or
xorb
lret
pop
insl
mov
and
push
sbbl
leave
andb
or
aad
fs
sub
and
sbb
jecxz
mov
mov
dec
andl
cmp
sub
insl
lea
xor
or
iret
jne
mov
dec
cmp
mov
imul
mov
lock
jg
into
loope
mov
cmpl
cmc
sbb
or
add
mov
rorb
xor
push
xchg
popf
dec
fistl
or
not
sub
or
imul
inc
push
shll
mov
fcoml
jle
xchg
jle
cmp
aas
push
or
cmp
xor
jnp
loopne
sbb
ret
add
addr16
mov
and
pop
decl
jle
outsl
ja
add
adc
xor
add
mov
adc
jl
xor
jo
sub
cmpsl
mov
fistpl
mov
jecxz
cmp
cmpsl
testl
sub
lahf
sub
test
sti
inc
in
int3
imul
ja
pop
cmp
push
stos
jo
sub
cmp
or
popa
lahf
test
add
sbb
fdivr
xlat
ljmp
data16
adc
push
into
jb
adc
out
out
xor
push
inc
inc
sub
bound
bound
cmp
popf
xchg
mov
add
dec
cmp
fsubr
push
pop
sbb
mov
mov
popa
pop
sbb
adc
fwait
ljmp
repz
mov
pop
cwtl
and
cltd
adc
cld
xchg
nop
fiadds
in
clc
into
jp
mov
mov
cwtl
pop
add
mov
adc
int
xor
shll
mov
jae
jp
or
into
jl
jle
lret
xchg
std
dec
add
push
data16
test
xor
popf
pop
int3
sbb
xchg
sarb
call
arpl
dec
sbbl
dec
clc
mov
call
jno
lahf
lods
shr
negb
lods
rcr
mov
in
cmp
and
add
loopne
idiv
mov
cs
pusha
mov
sbb
adc
out
andb
sbb
lret
outsl
in
dec
loop
clc
push
cmp
mov
jns
js
orb
lret
adc
pop
scas
xorl
bound
jl
mov
pusha
and
das
jp
cltd
outsl
add
lret
cmc
rclb
mov
aas
inc
xchg
pusha
jg
gs
adc
push
icebp
pusha
es
cmpl
pop
imul
pop
insl
dec
pop
lock
pop
pop
sbb
mov
add
popa
daa
sbb
push
xlat
inc
std
xchg
test
push
pushf
jbe
bound
es
mov
jb
pop
stc
imul
imul
jge
xchg
cmp
cmp
in
add
add
xor
fildll
loop
mov
subb
psrlq
cltd
and
dec
and
jae
pop
sub
loop
pop
movsb
scas
cmc
cld
add
ljmp
repz
scas
repz
sti
or
mov
aaa
xor
sbb
sbb
data16
jbe
scas
xor
out
mov
and
in
stos
sahf
sbb
add
xor
in
fs
xchg
mov
enter
jns
stc
sbb
sub
fistps
inc
jmp
out
xor
add
nop
lea
cld
shlb
adc
pop
sub
mov
into
mov
pinsrw
fwait
adc
into
mov
add
push
xchg
pop
pop
adc
idiv
int
inc
xchg
dec
aas
xor
or
jg
jp
into
dec
or
and
add
mov
scas
repz
ret
xor
xlat
xor
ja
xor
in
hlt
jnp
pop
data16
cmp
js
lds
dec
loope
adc
es
inc
xchg
adcb
dec
iret
pop
push
mov
cwtl
pop
rdpmc
dec
xor
sarl
mov
sarl
push
test
sbb
push
fisubrl
je
jmp
cld
push
jmp
mov
adc
xlat
push
mov
test
or
push
js
jg
shrl
stos
and
out
lret
stos
std
xor
add
repz
es
xchg
aam
add
int3
sbb
rclb
dec
add
shr
cmovo
push
xchg
out
sbb
loopne
pop
push
or
call
in
aaa
dec
lods
aas
mov
cmp
xor
adcl
loop
mov
imul
push
divl
movsb
insb
jo
jo
jne
dec
or
xorb
mov
daa
test
jp
sbb
ret
xchg
out
sbb
test
mov
nop
das
jbe
leave
inc
xor
lods
pop
jl
ljmp
mov
imul
adc
mov
dec
xchg
sbb
push
or
lock
daa
sub
sbb
fdiv
lods
push
adc
inc
in
in
mov
mov
inc
mov
popa
lods
mov
push
out
xor
aas
out
jbe
out
outsl
mov
scas
rcr
dec
aam
dec
mov
push
cmpsl
jns
xchg
aaa
mov
sub
and
adcb
push
dec
or
mov
push
mov
jbe
xchg
icebp
sub
adcl
in
leave
shrb
mov
test
inc
lock
push
push
xlat
pop
jmp
xchg
sti
mov
lods
fimull
clc
sub
mov
out
ja
push
add
sub
push
mov
rcr
cmp
jne
inc
push
xor
stos
pop
pop
fwait
cmp
fs
add
push
and
dec
lods
inc
push
add
xchg
ss
sub
pop
xchg
shl
sub
pushf
aam
js
aad
jno
mov
ja
add
xchg
jmp
fisubrs
xchg
and
add
loope
xor
sbb
mov
bound
lock
mov
out
lea
iret
xchg
hlt
dec
sub
adc
adcb
insl
and
rclb
lahf
mov
mov
je
stos
scas
ret
jnp
dec
xorb
xchg
push
xchg
sar
jp
add
mov
mov
push
lods
jp
adc
std
enter
cs
jecxz
stc
pushf
mov
mov
lret
in
jne
or
pop
test
mov
mov
sbb
orb
sub
lea
cmp
and
loopne
movsb
jmp
inc
cmpsl
jne
flds
and
push
test
adc
add
inc
push
repnz
sub
push
or
shl
adc
xor
sbb
jbe
scas
loop
sub
std
scas
dec
push
jmp
pop
in
test
fsubs
add
int3
lahf
test
pop
jnp
cmp
fs
aas
repz
jae
pop
andl
jne
add
cmpsb
loop
mov
add
jno
scas
or
add
mov
iret
cmp
in
popf
in
dec
lods
adc
lds
insl
ds
cmp
sbb
add
lahf
sub
pusha
rclb
dec
in
sarl
push
movsl
icebp
push
sbb
decb
sahf
add
cmpsb
insb
xor
and
mov
xchg
inc
mov
adc
dec
test
xchg
jb
adc
dec
push
mov
xor
repz
jp
mov
in
fisubl
mov
imul
test
iret
mov
int
ja
or
xchg
mov
jl
mov
inc
cmp
mov
mov
cmp
call
xchg
in
jecxz
xor
jbe,pt
dec
iret
int3
add
push
jo
rcll
jl
test
test
xor
mov
jns
das
loope
sub
fldt
jo
push
add
sar
jl
sbb
sbb
lahf
xor
sahf
mov
pop
incb
mov
mov
nop
push
les
and
enter
cmp
xchg
ficoms
inc
mov
mov
adc
shlb
fstpl
leave
sbb
jb
pop
push
fsubp
xchg
into
pop
push
mov
xchg
pop
xchg
push
sti
dec
call
rorl
fwait
popa
rolb
push
push
xchg
roll
test
push
ja
pop
jle
jno
fistpl
dec
add
xchg
test
dec
leave
shr
jmp
and
push
inc
fiaddl
jl
ja
mov
bound
lahf
mov
insl
inc
xor
inc
jle
pop
sub
xchg
test
scas
insl
rcl
mulb
inc
testb
pop
jae
or
add
pop
icebp
leave
pop
xchg
mov
xor
test
stos
or
xchg
sub
jecxz
pop
add
xchg
iret
loopne
mov
movsl
push
in
sbb
arpl
testb
clc
jnp
or
inc
fs
jb
aad
inc
insl
loop
or
adc
outsb
ds
cmpsl
jne
mov
mov
ds
push
inc
test
test
adcb
pop
jnp
cs
xchg
fistpl
mov
testl
test
add
stc
fbstp
xor
jle
test
xor
push
jb
aaa
push
mov
mov
mov
das
mov
or
sar
push
and
push
mov
test
push
jns
xor
shlb
add
pop
mov
sbb
fcom
lahf
cmc
mov
add
inc
cmp
and
repz
cmp
movsb
inc
lea
sub
mov
xchg
xchg
loop
jno
dec
pop
nop
add
out
mov
dec
test
ja
mov
outsb
in
mull
pop
cli
imul
imul
sti
xchg
sbb
pushf
out
push
in
mov
into
add
mov
dec
lock
and
pop
sub
jae
pusha
mov
xchg
dec
jno
xchg
mov
insl
adc
add
mov
xor
and
adc
and
test
popa
or
hlt
enter
lods
sahf
push
call
push
ret
and
sub
gs
or
mov
xchg
lahf
dec
inc
addr16
iret
fs
mov
outsb
andb
pop
fwait
xlat
nop
xchg
xchg
cs
and
fstl
pop
adc
sbb
mov
pop
arpl
xor
adc
pop
test
andb
loop
cmp
adc
jp
jae
and
xchg
add
vcomisd
test
xchg
add
out
dec
xchg
and
mov
sub
mov
pop
pop
dec
mov
fcomi
adc
add
mov
xchg
pop
sahf
scas
inc
jge
xchg
std
pop
adc
icebp
leave
and
ret
jg
out
jb
fcomps
dec
sub
cltd
mov
cld
ja
xor
push
inc
push
mov
cltd
repnz
jno
cwtl
add
sub
push
out
in
xchg
idivb
sbb
cli
loope
lret
or
je
add
push
nop
pop
in
pop
fnstcw
fidivrl
add
cmp
lock
outsb
pusha
in
and
jp
aam
insl
das
mov
mov
xor
jb
push
mov
adc
mov
stos
call
bound
out
outsb
pop
stc
jg
xlat
fisttps
and
lods
mov
cmp
int3
sbb
sub
sub
inc
and
ja
dec
call
mov
inc
push
xchg
lods
pop
dec
mov
ljmp
inc
popa
adc
add
xor
push
jge
adc
gs
or
push
fidivl
mov
aad
popf
push
pop
outsl
int
adc
sub
outsl
sub
std
adc
sahf
xchg
loop
mov
mov
outsl
sbb
stos
incl
loop
test
inc
and
mov
cmp
cmp
data16
adc
cmpsb
pop
pop
imul
scas
outsb
inc
insb
push
cwtl
mov
aad
pop
fwait
sub
movsb
std
loopne
nop
shll
ds
push
mov
popa
lret
pop
xchg
adc
xlat
adc
add
adc
push
insl
fbld
clc
pushf
xchg
mov
mov
call
aas
nop
cmp
jge
shr
icebp
iret
clc
push
or
pop
gs
jl
cmpsl
jge
jle
cmp
cmp
pop
adc
push
xlat
jmp
inc
mov
mov
lds
xchg
sub
aaa
lods
mov
xchg
pop
xchg
cmpsb
icebp
push
andps
pop
sbb
cmp
inc
mov
jg
cs
cmp
mov
mov
nop
cwtl
addl
xor
test
xchg
stos
addb
fwait
test
xor
lret
mov
enter
adc
or
pop
gs
cmp
jnp
in
push
pop
outsl
add
gs
pushf
movsl
pusha
nop
std
adc
cmp
mov
shll
outsl
imull
add
lcall
xor
lret
pop
in
lds
mov
jne
push
test
push
push
add
pusha
push
inc
sbb
xchg
inc
int3
js
adc
pop
sub
ret
pop
xor
repz
fucom
push
je
sub
or
jge
hlt
xchg
test
lret
push
sub
mov
or
hlt
icebp
nop
lcall
mov
inc
aas
imul
je
mov
push
sbb
test
rcll
gs
scas
out
lcall
jmp
cmp
push
js
fs
arpl
repnz
das
mov
lcall
out
imul
xor
cli
stos
ret
sub
cmp
xor
ja
orb
xchg
int3
mul
fidivrs
mov
cltd
cltd
sarl
inc
arpl
or
fs
and
lahf
daa
sar
lret
movsl
ret
jb
jle
outsl
outsl
inc
xchg
dec
ret
pop
ffree
imul
stos
and
and
jo
push
testb
popf
add
cmpsl
jp
iret
mov
inc
dec
fisubrl
out
fsub
add
int3
jnp
shlb
sbb
fxch
mov
mov
xor
cltd
rolb
inc
stos
push
aam
in
in
dec
inc
hlt
add
lock
mov
pop
mov
mov
mov
out
lea
mov
inc
jne
lods
add
sub
and
cli
in
pop
stos
sbb
rcll
push
jl
inc
jno
lock
mov
addr16
xor
push
push
pop
repnz
mov
pop
aad
add
pop
push
in
jmp
push
sahf
mov
mov
push
mov
aas
xor
outsb
popa
and
jg
test
add
flds
lea
fadds
sub
xchg
adc
sbb
or
or
mov
pop
gs
mov
insb
les
or
pop
bound
nopl
and
push
cmp
mov
add
iret
dec
arpl
jmp
inc
add
jle
adc
sbb
jecxz
mov
sbb
fldenv
mov
jnp
je
lret
addb
out
addr16
testb
in
rcrb
arpl
push
mov
xchg
lret
and
lea
fidivl
nop
lods
iret
jmp
hlt
push
bound
sahf
push
mov
add
in
mov
je
out
dec
in
or
iret
dec
xchg
imul
shrb
adc
out
jle
pop
and
add
leave
jmp
push
jno
loope
and
outsl
sahf
push
es
jbe
mov
jl
push
add
out
mov
sub
add
mov
call
xor
cmp
icebp
in
mov
pop
aas
jnp
fisubrs
shlb
xor
add
add
or
mov
lock
in
sbbb
fmuls
mov
sti
fldl2e
mov
or
aad
dec
aaa
loope
or
sar
lret
rorb
fnstsw
aam
mulb
mov
sub
mov
stos
shrb
cmc
aas
ret
flds
or
jb
rcl
jae
push
pushf
int
fnstsw
imul
iret
jp
sbb
push
jne
cmp
aam
pop
es
mov
out
or
xchg
mov
sbb
subl
push
insl
push
pop
in
clc
mov
ds
cli
mov
mov
xor
outsb
mov
lock
push
push
add
cmp
incl
and
repz
mov
icebp
push
add
dec
xchg
add
dec
das
jno
iret
das
xchg
mov
fs
bound
mov
lods
jp
adc
out
js
sub
sti
divb
int3
lods
xlat
mov
or
stc
inc
mov
movsb
and
stc
outsb
xor
sbb
pop
jmp
or
cmp
inc
es
loop
xchg
movsl
insb
mov
cmp
loopne
pop
push
and
test
mov
xor
jnp
rorb
and
mov
lods
out
jns
push
dec
and
in
and
and
dec
push
fdiv
fsubs
push
pop
inc
xchg
or
in
gs
mov
mov
cmp
xor
loopne
mov
add
mov
ss
je
dec
movsl
and
jl
push
xor
insb
push
mov
mov
jno
add
xchg
sbb
lcall
dec
sub
out
lcall
mov
mov
stc
pop
mov
fisubrs
pop
and
sahf
ljmp
iret
xchg
pop
div
cmpsl
xchg
loope
sbb
dec
jnp
ss
jb
mov
adc
ss
or
mov
cltd
push
fstp
bound
xor
xchg
jmp
inc
xchg
dec
lods
inc
addl
xor
push
or
lods
sbb
jne
bound
push
shrl
lods
xchg
divl
pop
jp
and
adc
pop
and
decb
xor
xchg
test
lahf
fbld
rolb
popa
orl
mov
pop
lods
repz
insl
dec
sbb
leave
imul
mov
push
js
std
int3
xchg
data16
out
jmp
sbb
mov
subb
sbb
mov
mov
inc
mov
mov
jne
cmp
lahf
mov
and
xchg
cltd
test
mov
arpl
out
mov
mov
ljmp
sub
leave
mov
mov
pushf
leave
or
lods
lcall
sub
call
jecxz
outsb
scas
mov
scas
xchg
mov
mov
mov
xor
and
fimull
mov
es
pop
out
ljmp
mov
insb
jecxz
sbb
in
or
adc
lcall
popf
aam
xor
pop
pop
mov
dec
or
into
mov
push
xchg
dec
jecxz
mov
pop
shr
cmp
or
and
lods
jmp
icebp
movb
cmp
fwait
push
mov
stos
cltd
cltd
cmp
push
dec
in
cmp
bound
mov
leave
inc
in
cmp
rolb
push
pop
loope
jecxz
sbb
push
push
jno
mov
pop
movsl
lods
sub
xchg
pop
jecxz
shll
push
cwtl
or
daa
sub
repz
xchg
jno
dec
mov
sbb
dec
or
leave
bound
pusha
or
aad
adc
popf
push
xchg
enter
ret
js
dec
in
rcll
fs
dec
stos
cmp
mov
push
dec
xor
test
mov
fnop
jle
ss
cmp
and
cmp
dec
xor
mov
lret
jle
inc
mov
fcmove
dec
pop
stos
xchg
data16
sar
iret
sahf
fs
pop
xchg
sub
lret
lds
inc
adc
pop
insl
sub
inc
sub
in
out
cmpsb
adc
jg
scas
test
push
sub
mov
sub
std
rcrl
jge
jo
push
jge
sub
fcompl
pop
out
or
cwtl
add
push
lret
fldcw
mov
cmpsl
out
leave
push
jmp
jg
pushf
or
outsl
movsb
mov
xlat
lock
push
add
rcrl
aaa
lahf
sarb
lock
rorl
mov
call
out
cltd
mov
addr16
scas
arpl
lret
xchg
sti
aad
or
sub
dec
and
adc
or
pop
fdiv
add
ret
test
push
lret
push
clc
sub
mov
out
dec
and
push
ljmp
shrl
dec
out
inc
xchg
cld
in
push
rcll
xor
mov
adc
mov
mov
xor
xor
repz
cmp
sub
and
das
ja
movsl
dec
int
mov
je
test
shr
insb
jae
das
add
jno
or
pop
dec
hlt
testl
mov
subb
in
jecxz
in
push
add
xorl
push
push
bound
inc
adc
sbb
or
mov
lea
cli
mov
xor
shr
daa
out
push
mov
jb
pop
xor
xor
loopne
cmp
jns
ljmp
lret
insl
and
add
xchg
xchg
xor
jg
xor
mov
out
push
dec
aad
jb
test
lret
mov
pop
adc
and
mov
push
or
in
adc
out
int3
inc
cld
subb
xchg
push
inc
scas
fwait
inc
sub
ret
add
gs
or
cmpsb
andl
ljmp
call
pop
inc
xor
add
aam
dec
cmp
in
int3
out
jb
cli
outsb
test
pop
sbb
sub
clc
idivb
inc
cmp
call
cmp
xchg
inc
std
pop
in
mov
xor
mov
mov
fs
jg
ds
dec
pop
add
aas
aam
xchg
je
xchg
xchg
push
sub
jecxz
call
test
addr16
jnp
sti
mov
push
xor
enter
pop
xchg
lcall
mov
loopne
mov
scas
sub
in
fwait
outsl
loope
xchg
mov
fs
ret
mov
add
test
cwtl
adc
in
mov
sub
pop
mov
shrb
scas
sbb
lea
adc
sbb
mov
cmpsb
sbb
xchg
jl
or
aaa
stc
mov
add
out
mov
and
lock
das
pop
adcb
icebp
sbb
xchg
jo
cmp
push
iret
lds
cmp
sbbb
xchg
movsl
sbb
push
mov
outsl
lret
xor
jp
jns
jl
in
add
cmp
insl
sbb
inc
loop
js
nop
sbb
int3
mov
dec
cmp
hlt
sub
push
sub
pop
shrb
jle
xchg
cmpsb
adc
sbb
mov
out
jmp
sub
lea
inc
cltd
inc
clc
mov
and
fbld
scas
fs
ds
add
leave
ds
or
adc
stc
std
sbb
and
sub
adc
enter
push
cwtl
sub
mov
lahf
in
or
push
test
cmpsb
neg
xlat
push
add
xor
dec
dec
frstor
adc
xchg
push
push
pushf
jbe
movsb
popl
add
jge
fbld
add
leave
int
loopne,pn
cmp
push
test
cmp
lods
data16
mov
mov
lods
ja
popf
xchg
ljmp
inc
out
push
aas
pop
push
cmpb
mov
jle
cmp
outsl
test
pop
test
or
sti
or
repz
jo
stos
sti
pop
scas
cli
push
mov
push
ja
and
xor
push
cmc
xchg
add
repz
push
xchg
jno
jbe
pop
inc
cmp
dec
out
jmp
dec
mov
inc
into
nop
stos
dec
cli
hlt
sbbl
push
lea
or
dec
test
sti
cld
fstl
jmp
inc
fwait
add
mov
outsl
inc
leave
dec
ljmp
addr16
push
pop
dec
xlat
lret
lret
xchg
jae
jne
xchg
or
push
mov
jne
fwait
test
dec
pop
xorl
xchg
stos
and
jle
repnz
xor
mov
das
mov
daa
fisttpll
push
adc
fs
xchg
push
divl
push
jno
int
push
aad
sarl
add
stos
sub
and
sbb
jns
mov
mov
mov
push
jnp
scas
mov
and
jge
push
divb
enter
mov
cmpb
and
jbe
dec
aas
sarb
insl
cmpl
inc
adc
xchg
mov
stos
pop
repz
and
hlt
push
fldenv
push
mov
pop
and
push
iret
mov
lcall
cmp
movsb
inc
test
push
pop
mov
pop
movsb
outsl
stc
mov
jno
and
inc
ds
jmp
or
mov
popf
jns
jne
fisttpll
fisttpl
pop
pop
lcall
scas
dec
fsubs
filds
test
or
push
shl
lods
adc
push
xchg
cmpsb
test
or
std
mov
cmp
out
jae
stos
ds
movsl
adc
insb
cwtl
pop
jp
xchg
mov
loopne,pn
add
addr16
insb
mov
icebp
or
mov
clc
and
adc
inc
testb
out
sub
fs
jb
aad
leave
xor
cmp
mov
mov
and
sbb
jl
cltd
add
xchg
loopne
dec
loope
mov
sub
and
rcrl
adc
lods
sti
xchg
shlb
mov
mov
mov
lds
in
sti
ret
sbb
insb
dec
imul
mov
inc
daa
pusha
xchg
adc
push
jp
daa
mov
dec
fimuls
add
jo
mov
add
cmpsb
stos
insb
adc
lret
decl
push
pop
sub
and
and
push
lods
scas
xorb
lods
rol
iret
out
cmp
ljmp
mov
inc
in
in
call
cmpb
pop
imul
stos
or
dec
sbb
test
rcll
sub
and
mov
jno
jl
xchg
xchg
mov
loopne
fs
jmp
in
scas
and
std
cmp
test
pop
idiv
movsb
xlat
xchg
roll
sub
loop
gs
repnz
int
xchg
iret
cmp
jae
rorl
dec
bts
jp
sbb
add
cs
xchg
lds
sbb
sahf
pop
cmpsb
jbe
leave
arpl
imul
sbb
dec
test
adcb
scas
push
jo
adc
int3
bound
or
xchg
mov
jle
dec
out
cmp
popf
mov
add
or
inc
mov
iret
rolb
rcl
scas
adc
add
jle
addb
fdivrl
out
push
jmp
xlat
ds
sub
or
push
cli
xchg
and
mov
test
mov
dec
push
cltd
push
sbb
xchg
inc
mov
enter
shll
movsb
push
jmp
shlb
out
test
push
loope
loope
add
mov
jge
dec
mov
clc
adc
out
dec
mov
in
rolb
iret
bswap
out
inc
dec
outsb
sub
adc
xor
sbb
test
push
rcrl
sbb
fmulp
xor
enter
xchg
fs
push
push
jecxz
sbb
popf
and
mov
rorl
je
and
out
mov
shll
xor
pusha
pop
xor
fiadds
insb
cmpsl
push
sub
rorb
push
adc
dec
loope
and
int
scas
repz
imul
lret
loopne
lahf
sub
int
hlt
mov
cwtl
pop
xor
test
xor
roll
push
sti
lock
jp
out
cmp
mov
xor
pop
sub
repz
push
ss
mov
push
mov
add
jno
sbb
xchg
inc
pop
in
pop
mov
addr16
iret
popa
adc
dec
les
jecxz
out
and
repnz
fs
clc
rcll
fisttps
xchg
adc
call
mov
dec
inc
push
and
xchg
imul
aas
orl
sub
xor
dec
inc
sub
loopne
push
stos
imul
and
push
add
mov
fstpl
repz
xor
sbb
punpcklbw
aaa
insl
mov
sub
into
pop
and
pusha
test
mov
or
js
mov
or
adc
adc
and
mov
xchg
push
and
xor
mov
lods
fildl
mov
jp
push
mov
sbb
out
jns
push
mov
in
shrl
dec
movb
je
xor
dec
xor
sub
in
popa
inc
xor
inc
xchg
or
add
dec
rorb
or
dec
scas
fstp
dec
testb
xor
fcoms
xchg
sub
in
xchg
loope
and
popa
push
add
std
inc
pop
inc
jno
cmp
adc
inc
arpl
sarl
mov
mov
cld
xchg
cmp
fcmove
fsubs
test
les
gs
cltd
push
push
fcomip
xor
mov
jae
xlat
mov
xchg
inc
divb
jno
sahf
dec
jae
push
adc
and
in
inc
pushl
sbb
imul
jmp
jae
mov
pop
jmp
imul
pop
das
cmp
lds
cmp
xchg
arpl
jge
jmp
mov
inc
je
mov
idiv
push
stos
loop
out
aas
pop
push
xchg
stos
push
iret
in
push
je
push
test
shll
mov
out
shlb
dec
xor
adc
fs
shl
jno
xor
cmp
ficoml
in
sbb
mov
sub
push
add
mov
or
push
xchg
popf
imul
hlt
imul
pop
out
aaa
pop
imul
push
nop
push
in
rolb
test
in
mov
jbe
cli
imull
lock
add
ret
cmp
ret
or
xor
aas
inc
into
push
inc
pop
test
fucomp
inc
or
pop
rclb
loopne
jle
mov
push
sub
mov
pusha
inc
or
hlt
push
stos
icebp
outsb
pusha
xor
lea
jmp
inc
sub
fwait
movsl
push
or
cmc
mov
fmul
pop
jle
fcomip
xor
cmovnp
into
pop
sub
ret
push
mov
xchg
lret
mov
clc
or
xor
jbe
mov
cmpsb
popf
cmp
jle
lds
pop
and
push
fdivrs
xor
push
dec
pop
xor
mov
xchg
lcall
ret
mov
or
add
dec
movsb
inc
aam
clc
and
in
pop
addr16
or
pop
xchg
ficoml
into
pop
fbld
jl
sbb
pushf
adc
rcll
inc
lds
cli
mov
push
bound
leave
test
sub
adc
push
insb
xlat
js
mov
out
dec
inc
xor
mov
arpl
fsts
push
push
fists
into
fcom
mov
fildll
mov
dec
jo
jne
gs
add
xchg
pop
jle
mov
jns
add
sbbl
lds
adc
pop
in
lods
jg
cmp
call
push
push
push
push
cmp
add
fcompl
out
xchg
cltd
lret
jbe
test
fnstenv
std
orps
jae
arpl
inc
loop
mov
fisubl
adc
jl
jp
inc
insl
jge
sarl
xlat
imulb
in
out
push
or
inc
dec
mov
sbb
mov
popf
fimuls
in
cmp
push
rorb
es
jne
xor
fwait
mov
cmp
inc
mov
and
cmpsl
fucomip
lds
paddusb
sub
mov
orb
mov
or
dec
mov
dec
jne
loop
out
lods
lods
inc
push
imul
cli
jb
jle
xchg
insb
add
push
dec
stc
out
bound
mov
pushf
mov
ret
and
push
ljmp
stos
std
gs
scas
rol
xchg
stos
sub
jbe
clc
jne
xor
dec
lods
cmpsb
and
pop
or
sahf
and
lock
in
xchg
pop
fstpl
pop
sbb
xor
mov
add
mov
jns
scas
cs
out
repz
inc
shll
scas
incl
pop
into
sbb
sbb
rorl
jbe
popa
cs
jns
fstpt
fwait
adc
ds
jb
push
xlat
out
lods
outsb
popa
test
xchg
sbb
arpl
cmpb
adc
data16
xor
jo
sub
setb
cmpsl
xchg
xor
cmc
iret
sahf
adc
xor
inc
dec
dec
fmuls
bound
adc
mov
or
in
inc
int3
dec
movsl
loop
sbb
push
inc
mov
outsb
enter
in
mov
lahf
lods
dec
andb
cmp
inc
repnz
mov
sub
rol
mov
mov
push
mov
inc
pop
mov
pop
pusha
adcl
mov
mov
arpl
inc
sub
jp
in
or
aas
int3
popw
or
push
jbe
mov
cli
dec
lock
xor
cmp
sti
jge
int
mov
fmulp
mov
adc
or
mov
jo
jp
adc
shlb
stos
pop
dec
in
fsubrp
movsb
xlat
dec
enter
lods
ds
xchg
inc
and
ja
cmc
dec
hlt
std
mov
sub
out
cld
test
out
sub
or
inc
or
repnz
icebp
mov
sub
cmp
mov
push
sbb
mov
xor
arpl
js
add
cmp
sub
xchg
repz
cmpsb
pop
push
add
fnstsw
lret
aas
cmovnp
sub
push
push
pusha
in
add
push
inc
mov
cmpsb
push
aad
xor
sbb
dec
lds
mov
cli
jmp
pop
sbb
and
pop
mov
mov
into
test
loop
add
das
add
cmpsl
lods
sub
ds
dec
test
inc
insb
xor
ret
fsubl
mov
jae
and
cmp
push
mov
pop
mov
pop
xor
imul
ja
push
lcall
inc
jne
jnp
ret
shr
into
inc
test
int3
enter
ret
inc
mov
push
fs
outsb
sarl
fbld
popa
enter
sarl
imull
inc
mov
dec
jmp
lret
aad
fcmovnbe
push
and
xchg
pop
push
xlat
push
add
sti
jo
or
add
lea
int3
rcl
loop
stos
aas
dec
pop
push
in
jo
data16
sub
inc
test
jne
pop
jbe
dec
scas
jg
dec
movsb
sub
inc
jbe
arpl
mov
xor
rclb
aas
test
std
xchg
dec
jae
out
test
ficoml
inc
cmp
test
ljmp
jnp
cmpsb
add
or
jnp
mov
sbb
mov
inc
cmpl
clc
cmpsl
jge
scas
pop
scas
int
imul
jp
xor
push
sarl
push
cld
ret
imul
loopne
inc
imul
dec
or
jmp
cmp
push
pop
sub
pop
ret
int
sbb
ss
inc
mov
into
and
loop
jno
pushf
sbb
in
xchg
mov
adc
ret
dec
out
or
inc
cmp
dec
aad
sub
addb
out
lods
pop
xor
mov
mov
aam
dec
pop
sbb
jns
and
mov
in
ljmp
sub
sub
mov
jge
jb
sub
mov
loopew
in
lahf
testb
adc
insl
and
mov
inc
lock
fwait
inc
ljmp
adc
sahf
xor
add
xrelease
pop
rclb
mov
jp
mov
ljmp
inc
xchg
dec
adc
mov
scas
mov
hlt
or
fisubrs
adc
aad
xchg
adc
mov
jne
adc
xchg
add
roll
dec
fistpl
insb
jge
std
fwait
and
push
je
stos
rclb
mov
pop
xchg
add
mov
faddl
js
mov
or
std
mov
sub
lods
les
adc
dec
sbb
lahf
jno
test
dec
sub
pop
ret
jg
push
sbb
lahf
dec
pop
pop
cmpsl
sbb
add
cmp
iret
and
mov
pop
xor
and
adc
xchg
int3
les
jmp
fstp
leave
jns
push
mov
xor
cld
mov
inc
call
push
enter
repz
sub
dec
jp
repnz
stc
pop
stos
mov
iret
mov
icebp
jecxz
xor
imul
mov
inc
dec
cmp
inc
movsl
clc
sahf
sahf
fistl
fs
pop
mov
jnp
test
imul
xchg
hlt
sbb
add
cmp
or
lcall
xchg
mov
aaa
inc
or
dec
xchg
jo
and
jbe
jp
mov
aaa
aam
cld
dec
sub
in
xor
mov
push
push
out
add
mov
push
push
imul
in
mov
popf
aad
jns
test
into
mov
jge
sbb
mov
stos
out
repnz
test
cmp
subl
push
cld
call
lahf
xor
test
ficomps
out
xchg
inc
inc
insb
mov
addr16
movsl
jns
ficomps
into
cmp
fimull
in
mov
rcrb
repz
mov
bound
and
jge
imull
loope
into
lds
dec
jns
lahf
out
mov
jnp
inc
call
xorl
addr16
mov
sbb
repz
xchg
mov
inc
loopne
in
xchg
or
inc
rep
mov
cltd
fwait
inc
or
push
popa
xor
sub
es
fwait
xchg
fwait
dec
xchg
pop
mov
jg
sub
cmp
lahf
push
lahf
test
lods
inc
loop
jns
pop
mov
mov
jne
out
mov
push
mov
sub
lret
test
adc
std
es
inc
std
mov
adc
and
cmpsl
cmp
ret
mov
scas
je
and
pop
fidivs
mov
xchg
hlt
pop
insb
ja
mov
hlt
mov
jno
test
xor
xchg
pop
insl
xchg
popa
pop
loope
push
test
push
jge
scas
stos
or
and
mov
mov
sub
cltd
cmp
cmp
and
cmpsb
ljmp
mov
mov
or
push
lea
pop
xchg
mov
fldt
test
into
faddl
cs
lods
add
xor
push
push
dec
push
call
call
clc
push
sub
das
pop
fisttpll
xorl
pop
int
sbb
ret
lods
icebp
dec
aas
sub
dec
fisttpll
bound
inc
and
lahf
clc
jmp
ss
aam
test
add
fidivrs
pushf
push
sbb
sub
or
pop
cld
repz
rcl
test
dec
movsb
out
bound
clc
movsb
test
and
push
cli
lds
cld
dec
rcll
mov
ret
shlb
inc
inc
ret
cs
insb
lahf
mov
sar
fdivp
jno
je
sub
and
inc
mov
and
jg
stos
jae
mov
cs
bound
enter
insb
jg
idivb
dec
pop
inc
cld
into
cmpsl
mov
lret
sbb
adc
subb
out
sbb
and
andl
rorb
jmp
xor
imul
jns
mov
mov
test
movsb
sahf
fisttpl
and
clc
iret
or
jo
push
out
stc
and
mov
xor
shrb
push
scas
mov
push
iret
inc
je
ds
jns
inc
fimuls
sahf
mov
cmp
inc
xor
daa
out
xor
arpl
add
subb
mov
add
aad
out
lcall
ja
push
jbe
pop
xchg
out
cmp
and
fnstsw
cltd
popa
jge
aad
fs
imul
lds
mov
bound
lods
imul
inc
movb
ja
test
mov
push
nop
or
sub
icebp
shrl
cmc
inc
sub
fs
idivl
popa
or
adc
adcl
and
mov
inc
pop
ret
adc
out
ret
cmc
aad
test
in
add
xor
test
into
mov
call
iret
nop
popf
xorl
sub
mov
je,pt
jge
ficomps
add
pop
pop
xor
ljmp
add
enter
loopne
adc
xchg
or
add
ret
pop
andb
aas
fistps
inc
rorb
cwtl
dec
inc
cltd
adcl
sbb
cld
sub
inc
daa
orb
xchg
adc
outsb
push
push
mov
test
push
out
addb
stos
sti
negl
xor
xchg
push
fs
das
dec
sub
lock
mov
psllw
pop
mov
jl
sub
xor
push
jae
add
or
ss
aad
icebp
fistpl
dec
dec
adc
mov
test
repz
mov
or
add
shr
xor
or
cmp
dec
push
add
mov
inc
inc
pop
mov
fcomp
add
out
int
lods
mov
scas
nop
adc
pop
dec
pop
mov
mov
lods
jne
cwtl
in
cs
je
lret
lods
jno
sbb
jnp
leave
cmp
jecxz
and
pop
daa
xor
ljmp
cmp
adc
in
outsb
cltd
or
cmp
out
outsb
lock
js
rorl
in
dec
xorl
decl
pushf
jo
adc
mov
mull
cmp
xchg
push
xchg
leave
jns
ret
add
xor
dec
jmp
jmp
test
fsubl
mov
jmp
or
mov
rolb
sub
mov
loopne
shl
add
aad
test
xlat
rcll
je
jo
sub
mov
jb
out
inc
lcall
cmp
dec
ds
les
jne,pt
fildll
dec
fnstenv
lret
lahf
push
decl
cmp
inc
push
xchg
in
mov
insb
mov
rcrl
mov
push
xchg
cmpsl
lock
cltd
and
aad
dec
xchg
add
lahf
ja
js
mov
push
xor
xchg
call
pop
mov
ljmp
pop
push
dec
loope
rcl
cwtl
jmp
fisubl
xor
call
push
hlt
pop
rcrl
arpl
mov
add
fmull
nop
popa
popa
insl
fnsave
cwtl
shr
push
clc
outsb
pop
mov
inc
or
mov
std
les
push
data16
jge
or
mov
pushf
or
push
pop
fadds
cmp
mov
fists
xor
fistpl
push
push
popa
imul
outsl
fbld
pop
int3
push
jge
into
std
lahf
daa
jbe
lods
movsb
or
dec
and
cmpsl
pop
fstpt
and
icebp
popf
mov
sar
lods
adc
cli
leave
xchg
insl
jge
pop
or
mov
pop
sub
dec
into
mov
dec
fimuls
mov
push
sbb
dec
or
test
lcall
add
rcr
and
xchg
cmc
ret
sub
insb
scas
sub
and
sahf
inc
aad
in
test
jmp
cmpl
jp
loop
or
mov
das
das
mov
imul
cmp
or
pop
mov
sub
push
cld
jecxz
jg
aam
imul
rcr
stc
cmp
jae
test
movsl
mov
adc
paddq
dec
lret
cmp
in
jno
inc
mov
fdivl
and
lods
xor
xor
roll
mov
cmp
cmpsb
jae
mov
jne
sbb
mov
jae
test
out
out
inc
push
in
fxch
nop
mov
enter
push
add
pushf
or
pop
loopne
popa
lcall
faddl
sbb
or
out
adc
imul
lods
sbb
imul
movsl
ret
sbb
idivl
scas
jp
mov
xchg
dec
mov
orb
mov
in
mov
push
push
add
mov
jp
mov
mov
js
dec
pop
cmp
test
insl
gs
sbb
cli
scas
mov
outsl
xor
inc
jb
aam
cmp
sub
mov
popf
mul
jecxz
pop
inc
cli
stc
sbb
scas
inc
adc
pop
lret
jne
add
jns
mov
repz
add
js
pushf
pusha
mov
and
xchg
scas
mov
sub
popa
xchg
popf
shlb
or
pop
outsb
mov
or
in
and
lret
ja
shrb
adc
adc
fidivs
insl
push
and
ljmp
cli
repz
xor
sbb
and
adc
mov
xchg
test
rcr
mov
sbb
fs
imul
mov
cmp
out
pop
mov
xlat
lret
sub
test
dec
cwtl
mov
loop
imul
sti
mov
aad
daa
pop
aad
push
xchg
in
dec
xor
in
cvtps2pd
popf
movsl
fs
jbe
aad
icebp
lods
loopne
and
cli
pop
outsl
fs
sarb
or
daa
xchg
pop
push
arpl
ja
negb
cmp
mov
cmp
lahf
pop
push
jo
std
hlt
pushf
inc
outsl
xor
test
in
sub
mov
cmc
test
pop
inc
jecxz
mov
xchg
into
inc
xchg
ss
xor
and
mov
lea
xchg
les
sbb
daa
push
jb
xor
shlb
and
pop
lods
shlb
xlat
lcall
xor
sbb
roll
fwait
mov
mov
pusha
mov
leave
cli
cmpsl
dec
mov
jle
int
loope
rolb
add
mov
or
cli
and
fstl
xchg
jl
xor
mov
fs
in
xchg
inc
mov
out
test
jb
inc
xor
dec
nop
mov
daa
lcall
mov
in
int
incl
and
sub
lret
and
xor
jge
shll
sub
ljmp
mov
push
push
fadds
lock
subl
sbb
inc
ffree
mov
jle
mov
xchg
pop
daa
and
jp
rcl
xchg
pusha
popa
xorl
and
shl
call
push
mov
sarl
out
ja
dec
mov
scas
xchg
nopl
cltd
sbb
xchg
mov
mov
lods
and
jmp
mov
sub
or
or
inc
add
fsubr
and
jmp
lahf
addl
leave
jno
jns
push
out
pop
xchg
mov
bound
or
pop
int
imul
inc
repz
or
lea
out
adc
imul
mov
loopne
xlat
dec
jl
pop
mov
stos
stos
or
jb
sbb
mov
imul
cmp
stos
bound
sub
popa
sahf
outsb
dec
jmp
sbb
xchg
push
insl
sub
push
jp
sub
les
iret
mov
dec
dec
mov
sbb
fistps
xor
adc
xchg
xchg
aad
aas
in
lds
movb
lds
mov
cmp
sbb
idivb
add
stos
adc
inc
inc
repnz
sbb
mov
movsl
inc
movsb
add
in
push
pop
xorb
inc
mov
pop
ret
std
sti
mov
inc
inc
add
sub
mov
lret
or
mov
gs
mov
in
popa
jl
imul
xchg
inc
cmp
push
daa
jp
xor
call
adc
cmc
xor
xor
inc
lods
fstl
xor
les
dec
popa
ficomps
shlb
inc
push
pop
mov
pop
add
mov
add
or
and
cmp
pushf
daa
mov
push
jge
sub
call
cld
push
insl
add
ds
pop
lahf
sbb
and
mov
dec
pop
daa
das
movsl
inc
shlb
call
or
lock
cmp
ss
pop
ss
lds
xor
sbb
fsubrp
push
cmp
mov
xchg
mov
cmp
xor
cld
fmul
add
lds
scas
and
xchg
xchg
leave
lahf
pop
icebp
sbb
lds
mov
xchg
and
subb
test
xor
clc
js
lods
fucompp
hlt
fsubrs
mov
xor
fcoms
pop
loope
jb
mov
sbb
cmovp
push
push
push
and
adc
fistl
loopne
push
in
sbb
or
or
sbb
pop
jnp
les
sub
lahf
or
sahf
dec
scas
addl
shrl
jl
mov
ret
xchg
inc
mov
inc
loope
push
movsb
xchg
sbb
leave
sbb
pop
mov
repnz
cmp
add
push
or
inc
mov
cmp
pop
sbb
mov
xchg
or
lea
push
movsb
movsb
das
pushf
dec
jle
aas
int
and
cmp
jo
stos
in
or
jb
aas
lock
lret
jne
in
imul
in
sbb
and
iret
aad
push
sbb
add
inc
clc
push
clc
imul
add
shll
jns
ja
fildl
nop
repnz
test
test
sub
mov
or
gs
ljmp
push
enter
mov
repz
pusha
mov
jg
subl
mov
sub
cmp
cmp
insb
adcl
xchg
addr16
xchg
cmp
jmp
push
loop
sbb
xchg
in
mov
inc
arpl
xor
mov
push
mov
xchg
push
lret
mov
mov
scas
daa
and
and
xlat
test
lock
or
sbb
mov
imul
scas
mov
ss
xor
mov
sbb
sbb
stos
adcl
pop
loope
or
pop
fwait
add
jae
mov
jmp
lock
mov
das
and
jg
call
dec
cltd
jmp
adc
jg
mov
jecxz
pushf
rorl
sub
pop
rcl
inc
hlt
jnp
mov
and
xor
shrb
repz
mov
movzwl
loope
push
push
out
dec
mov
mov
lcall
dec
mov
mov
mov
adc
mov
and
les
cmp
les
add
loope
pop
pop
dec
in
imul
scas
repnz
fadd
repnz
rorl
repz
xor
inc
out
mov
and
pop
xchg
movsl
loopne
aad
pushf
jbe,pn
test
xor
mov
add
xchg
loop
xor
pop
sbb
dec
aaa
inc
lds
dec
enter
jl
jl
pmaddwd
flds
xor
and
mov
inc
adc
pop
sahf
insl
enter
sub
mov
out
pop
xor
inc
and
sub
xchg
jo
xchg
subl
xor
mov
ficoml
sub
mov
iret
jno
in
xor
jmp
sub
add
es
aas
lcall
shlb
cmp
lods
test
rcr
and
jmp
xor
cwtl
ffreep
aam
adcl
dec
out
outsb
mov
mov
add
jmp
int
ss
cmp
jmp
adc
mov
adc
pop
jae
mov
xor
clc
loop
mov
scas
jns
jb
test
mov
lds
sub
mov
daa
fs
scas
mov
cmp
push
fbld
pop
lahf
jnp
lcall
sub
outsl
cmpb
cmp
cld
cmp
pop
mov
sbb
jle
aad
cmpsb
add
lods
inc
por
inc
aas
dec
lea
mov
xchg
pop
mov
sub
push
test
sub
repz
cmpsl
add
and
xchg
xchg
xor
pop
popa
inc
ret
int
out
in
ret
aaa
mov
rolb
popf
stos
sub
sbb
fdivl
and
cmpb
cli
sub
mov
aam
outsl
test
cmc
cmpb
inc
js
add
pop
fcom
push
in
dec
dec
pop
mov
or
jl
stc
in
fsts
inc
mov
cmp
stos
fdivrs
fdivl
push
out
sarb
fisubrs
cmp
ror
aam
out
and
mov
push
adc
int
arpl
pop
jp
sbb
sti
out
mov
into
jo
jg
stos
mov
leave
loopne
jne
xchg
cmpsl
adc
insl
cmpb
enter
or
xchg
insb
lods
or
dec
aad
cs
sub
jl
dec
sub
orb
cmp
aad
pop
inc
mov
xchg
movsb
mov
lea
inc
in
dec
jg
movsl
mov
movsl
dec
mov
adcl
sub
jle
fmull
movsl
lods
and
in
adc
dec
je
jb
push
test
push
mov
gs
inc
fldt
push
dec
sbb
ret
sbb
stos
sub
and
mov
mov
icebp
addb
sbb
sub
ljmp
out
lret
es
cs
stos
fidivrl
xor
add
js
pop
ja
shll
repnz
xchg
pop
test
sbb
rdmsr
xchg
adc
aad
lcall
insb
arpl
movsb
pop
pop
mov
adc
insl
in
pop
cmp
fisubrl
push
and
lcall
sub
inc
sub
aas
stos
mov
insb
mov
mov
stc
dec
mov
sub
or
inc
adc
cmpb
adc
mov
es
xor
inc
and
fisttps
aas
jo
cltd
in
or
pop
mov
push
lods
jp
push
std
xchg
adc
lds
nop
add
nop
push
hlt
das
lret
scas
xchg
lahf
xchg
mov
cmp
push
sub
xchg
cmc
sbb
jb
mov
pop
popf
or
or
cmp
test
fst
aam
push
ljmp
stos
enter
add
notb
cmc
cmp
jp
lds
jge
or
inc
lahf
mov
stc
mov
mov
xor
shll
pop
incb
xchg
mov
pop
sbb
enter
sar
insb
dec
xlat
or
xchg
and
adc
push
ja
cmp
jmp
ret
xchg
sub
dec
dec
fistps
pop
lahf
mov
pop
dec
push
loop
xchg
popf
adc
cmpb
int3
or
rcrl
loope
mov
adc
pop
movsl
cmc
adc
xor
adc
pop
xchg
pop
mov
rorb
in
push
lahf
rol
push
jae
mov
lahf
fucomip
dec
add
ret
out
inc
push
cmpsb
sub
daa
jno
or
nop
or
lock
mov
sbb
or
cmp
push
and
aas
push
pop
mov
sbb
add
lock
insl
nop
lods
mov
mov
aas
xor
jbe
and
xchg
iret
mov
or
jb
mov
out
or
inc
imul
jl
data16
lret
cmpsb
call
out
scas
or
add
jnp
daa
mov
dec
js
imul
std
adc
fists
jmp
sub
sbb
mov
xchg
aad
inc
push
test
mov
add
push
mov
jbe
repz
fnstcw
inc
lcall
add
lahf
inc
daa
dec
xor
outsl
out
jl
mov
nop
sub
jns
fwait
xchg
fadds
xchg
jmp
pop
jae
jl
in
xchg
xchg
jne
sti
sbb
jmp
lock
arpl
mov
cmp
int3
mov
mov
rcrl
and
cmp
stos
out
dec
lcall
lods
aas
mov
sbb
seto
leave
scas
scas
push
and
mov
rcrb
jno
pop
xchg
mov
and
pop
sar
mov
shl
mov
data16
gs
fmul
cmp
ljmp
xorl
lds
ss
jg
jecxz
idivb
xchg
cmp
lahf
pop
les
int3
loopne
dec
outsb
jbe
jno
mov
xor
repz
ret
add
push
push
jge
and
lds
jmp
lret
in
mov
pop
ss
jo
rclb
lock
pop
mov
push
cwtl
popw
lret
pop
into
stos
pop
inc
pop
ja
dec
sub
or
rclb
mov
sahf
lock
leave
arpl
add
sbb
jne
out
add
mov
jle
xor
int
pop
and
fsubp
mov
fdivrs
int
int3
fisubrs
insb
ficompl
repz
push
int3
jne
cmp
sub
or
es
jne
or
popa
pop
dec
push
insb
jae
sub
inc
xorb
addb
inc
stc
cmovg
sub
movsl
mov
pop
pop
iret
jl
sub
jmp
pop
addr16
scas
push
test
push
bound
sbb
icebp
es
push
leave
popf
jb
jnp
out
jp
add
mov
movsb
fmuls
xchg
popa
xor
std
jle
mov
jmp
les
inc
ss
in
sarb
jno
push
push
mov
bound
dec
pop
testl
pop
comiss
xchg
shl
movsl
pushf
dec
mov
push
pop
mov
pop
mov
aad
dec
cmpl
dec
push
inc
inc
es
scas
adc
or
xchg
fldl
mov
xor
pusha
shrb
xchg
xchg
stos
repnz
cmp
sub
xchg
mov
stos
pop
into
inc
push
jge
ss
ret
xlat
roll
mul
cli
dec
push
sti
xchg
mov
sbb
addl
or
inc
int
sub
in
xchg
popa
mov
jb
inc
in
test
inc
push
addr16
add
dec
fs
push
push
loope
jns,pn
fisubs
popf
shrb
xchg
sbbl
stc
test
xchg
dec
fmul
jne
jle
lds
cmpsl
cwtl
pop
outsb
and
mov
test
movsl
mov
sub
ljmp
pop
xor
ficoms
sbb
mov
imul
jg
mov
cmp
es
cmp
pop
pop
or
js
ud1
js
pop
out
pop
fs
sub
or
ss
sub
dec
rcrb
pop
hlt
into
js
inc
outsb
aam
mov
gs
cld
bound
inc
pushf
cmp
push
cmp
out
mov
sarb
shl
test
adc
and
sub
dec
jg
mov
jg
lret
gs
fisubrs
lret
out
repnz
inc
jp
js
xor
inc
addr16
jmp
in
jge
add
inc
mov
jp
sbb
and
cmpsb
add
mov
aaa
adc
push
in
andb
das
mov
mov
jno
fwait
push
adc
jae
push
lahf
dec
movb
or
jb
sbb
mov
ret
shll
cmpsl
aad
fmul
sub
lock
shlb
sbb
add
jl
xor
pop
imul
push
pop
fidivrl
shr
xor
xor
pop
pop
loope
inc
incb
out
dec
pop
in
imul
dec
cld
push
jecxz
pop
pop
ss
dec
inc
mov
inc
mov
xchg
outsl
bound
jbe
insb
stc
mov
xor
sbb
sar
sub
in
dec
clc
jo
and
jns
out
scas
push
dec
cmp
push
xor
fwait
xor
mov
aaa
mov
in
add
mov
repz
leave
lret
mov
clc
adc
push
add
xor
adc
mov
movsl
data16
pop
or
je
ficomps
insl
test
scas
out
adc
xchg
sbb
imul
fistl
shr
addr16
mov
mov
daa
rcr
inc
insb
mov
pop
mov
mov
xchg
mov
dec
pop
adc
mov
leave
jg
rcr
or
das
fcomps
test
call
lea
mov
std
push
jne
hlt
jnp
mov
dec
mov
xorb
je
cmp
inc
aaa
das
inc
fs
sti
in
lret
mov
or
insb
inc
repz
std
pop
sbb
lret
sbb
out
inc
mov
lods
jne
jl
mov
pop
decl
stos
mov
test
dec
adcb
cmc
test
sbb
push
sub
sub
cmc
clc
xchg
mov
fcmovnu
or
mov
inc
push
popf
loopne
add
jle
inc
cwtl
pop
int
loopne
adc
imul
dec
sub
js
imul
xor
dec
mov
push
xchg
or
xchg
adcb
mov
int3
sub
and
mov
popa
dec
and
and
mov
sub
dec
mov
js
fnstcw
pop
sti
xor
sub
iret
mov
hlt
mov
ljmp
sbb
ljmp
fisubrl
sar
stos
fnstsw
adc
cmp
iret
push
sub
sub
fincstp
mov
daa
adc
leave
push
jl
popf
cmp
jecxz
cltd
xlat
cs
shll
jmp
lret
sub
daa
jecxz
orb
sbb
pop
cmp
imul
out
xchg
push
ds
or
ss
ret
push
xchg
addr16
or
mov
sti
jne
hlt
sarb
dec
cld
xor
stos
adc
jb
es
addr16
add
repnz
mov
xchg
push
js
addr16
and
pop
xchg
pop
add
ljmp
aam
dec
jnp
push
enter
mov
loop
scas
adc
jbe
je
mov
push
push
jb
in
add
sahf
dec
xchg
add
cmp
into
dec
je
ds
loopne
inc
lret
cmp
sub
ret
mov
pop
lea
jae
out
rcl
leave
imul
aas
push
add
mov
and
add
xchg
icebp
adc
vmread
sbbl
rorl
sbb
scas
popf
mov
cmp
arpl
stos
mov
inc
pop
sbb
repz
and
ja
es
in
cmc
daa
or
jp
mov
bound
sarb
jne
pop
nop
lret
ss
xchg
xchg
bound
sti
insb
int3
mov
loop
jns
adc
mov
pop
loope
push
push
fwait
addb
dec
jnp
gs
in
stos
scas
lcall
pusha
xlat
jne
ss
jnp
bound
and
insb
mov
dec
inc
pop
inc
pop
cli
enter
loope
fsubl
lret
fadds
fbstp
hlt
sbb
or
out
jg
lret
mov
jne
cmp
sub
mov
xor
loopne
or
jmp
adc
in
push
mov
dec
sbb
push
repnz
loopne
pop
mov
jl
in
or
adc
inc
movsl
xchg
mov
jmp
xchg
inc
lcall
enter
mov
jl
adc
xchg
inc
or
gs
lcall
push
inc
mov
mov
add
int
jl
andb
push
cli
add
sub
test
repz
push
mov
and
sbb
cmp
add
iret
add
int
popa
jo
into
lods
pop
mov
sbb
movsl
lcall
mov
jno
fidivs
imul
pop
in
or
in
xchg
fistpll
xchg
mull
popf
neg
cs
stc
mov
lds
sub
add
pop
repnz
jle
mov
jo
pushf
pop
bound
out
jg
xchg
stc
repnz
push
mov
push
or
addl
sti
xor
popa
stos
mov
and
cltd
in
pop
xor
add
nop
pop
mov
add
mov
xor
lahf
ljmp
xchg
xchg
mov
rol
sahf
data16
fsubr
pushf
push
aas
dec
outsb
sub
mov
lea
cmp
sbb
add
fucomip
lds
movsl
xor
lea
fs
xchg
xchg
xchg
int
js
push
xor
inc
add
cli
rcll
xchg
les
xrelease
jae
insb
mov
sub
idivb
xor
sub
stc
xchg
jns
sub
sub
lods
iret
lods
jne
arpl
das
mov
push
popf
mov
addb
pop
or
dec
gs
xchg
aaa
rcl
insl
mov
cmp
adc
cltd
jl
cld
outsb
ds
mov
cmpsb
adc
popa
cld
sub
loop
addr16
jnp
ljmp
shrb
insl
mov
mov
pop
leave
stc
mov
inc
mov
add
pop
jmp
lea
aas
aam
jmp
inc
pusha
and
xchg
xor
push
data16
hlt
jo
push
adc
lcall
pop
mov
inc
lock
ficompl
adc
pop
dec
dec
addr16
pop
push
and
roll
pop
dec
cltd
mov
aad
lods
mov
cmp
loopne
push
out
pop
je
icebp
or
cmpl
fst
or
push
in
sbb
data16
dec
leave
push
mov
icebp
xchg
in
bound
aad
add
in
xchg
sti
loope
and
aaa
xor
lret
xor
xor
push
cmpsb
neg
mov
ljmp
fs
adc
mov
dec
push
mov
pop
ss
or
mov
insb
mov
mov
rclb
or
add
cmc
pop
xor
sbb
mov
jge
js
cmc
sbb
sbb
adc
push
fwait
je
push
dec
sti
and
cmp
repz
mov
adcb
loopne
add
push
mov
add
lods
xor
loopne
push
jnp
mov
loop
cmp
push
in
out
movsb
jnp
dec
push
mov
sbb
add
lret
scas
ljmp
adc
jmp
testb
stos
out
sub
xchg
dec
sbb
leave
pop
sub
jg
rclb
in
jnp
or
aas
sbb
daa
and
sbb
aad
ja
mov
shlb
fdivrs
adc
dec
jnp
xchg
ljmp
push
pop
push
xchg
icebp
mov
cltd
scas
mov
jbe
xchg
adc
sti
inc
clc
sub
mov
jb
xchg
push
ja
imul
dec
rorb
scas
cltd
movsb
and
das
cld
sbb
inc
addr16
pop
movsb
bound
cs
jne
ficompl
cld
cld
xchg
mov
ds
jge
icebp
mov
fisubrs
add
decl
mov
xcrypt-ofb
cmpsl
out
out
leave
xchg
adc
movsl
popa
push
push
call
dec
push
shlb
xchg
fs
add
cld
mov
mov
push
je
dec
stos
lea
add
sbb
or
xor
daa
jae
in
and
cltd
mov
ss
cmc
inc
ss
fmul
jmp
mov
add
jg
or
pop
pushf
das
sbb
and
or
adc
adc
xlat
cmp
pusha
aas
icebp
int
pop
arpl
lcall
xor
inc
jge
xor
cmpsl
jle
push
dec
frstor
xchg
loop
xor
jns
pop
out
push
shlb
rcrl
push
jg
leave
fcomps
gs
push
dec
in
popa
lock
inc
fwait
cli
scas
cmpsl
dec
lea
jl
and
fimuls
cmpb
jae
retw
nop
repz
lock
sub
cmp
ljmp
adc
int3
push
dec
mov
xchg
and
mov
push
adc
in
jecxz
or
int
loope
inc
pop
jecxz
sbb
cmp
sub
stc
adc
loope
jmp
pushf
aam
das
mov
movsb
test
mov
cs
fnstsw
mov
xchg
push
mov
repnz
dec
in
dec
push
sbb
mov
jo
cmp
pop
cmp
jge
in
in
movsb
jp
lret
push
mov
mov
or
and
addr16
jg
insl
aad
xor
dec
into
xchg
push
aas
and
mov
push
and
pop
adc
jmp
jnp
xor
mov
lds
pop
push
int
ficompl
and
lret
inc
lret
and
or
in
push
and
mov
xor
inc
ss
mov
jp
jb
push
rcrl
push
mov
out
sub
in
dec
fwait
jge
sbb
jnp
sahf
xchg
xchg
xor
mov
imul
rol
add
das
inc
cmp
pop
jp
sbb
lea
enter
mov
mov
inc
jnp
inc
test
mov
fidivl
mov
lret
sub
fcompl
daa
je
sbb
mov
sub
fstps
shll
inc
into
fwait
movsb
jecxz
jp
inc
jno
sub
jecxz
jns
pop
adc
sbb
cwtl
mov
sbb
xorl
hlt
jb
pop
mov
inc
dec
mov
inc
mov
sub
sub
lcall
sarl
shlb
hlt
xchg
and
add
mov
pushf
xchg
mov
adc
popa
repnz
rcrl
push
fsubr
ja
inc
mov
cmpsb
pop
icebp
sbb
and
cltd
jae
cmp
xchg
cld
adc
mov
jmp
js
and
inc
add
mov
lea
push
pop
dec
mov
fcompl
dec
xor
lret
imulb
gs
push
push
xchg
test
aaa
mov
xchg
xchg
dec
mov
sub
dec
mov
xlat
jbe
or
pop
in
shl
sbbl
lods
jae
lods
pop
out
mov
fucomip
mov
mov
lret
mov
pop
adc
push
sbb
or
test
js
popa
and
sub
cwtl
xorb
nop
mov
loopne
mov
jp
xor
jae
and
adc
and
pop
sub
adc
mov
mov
dec
mov
or
adc
mov
inc
mov
aam
fstl
push
subb
adc
movsb
cli
gs
mov
pop
inc
or
sub
xor
cmpsb
sub
sbb
movsl
imulb
push
imul
mov
sub
cmp
cld
push
xor
outsb
add
mov
sub
xor
rorb
fistps
std
lahf
inc
inc
sbb
and
das
pop
aam
data16
pop
push
cltd
test
mov
aas
outsb
jb
jle
outsl
adc
daa
daa
dec
cmc
jo
sbb
and
ret
inc
sub
pop
test
daa
jmp
icebp
in
rclb
pop
lret
repz
inc
cmp
rcr
in
dec
adc
outsb
fidivrs
xchg
adc
imul
push
cli
sti
mov
lods
sti
call
lret
adc
jmp
loopne
jmp
lock
dec
iret
dec
aad
in
insl
iret
aam
dec
clc
imul
in
xchg
pop
push
cmp
mov
cmp
push
mov
scas
xor
mov
inc
dec
cmp
xchg
jl
insb
pop
stos
cmp
nop
mov
and
daa
cmp
shll
adc
sub
push
adc
mov
adc
jmp
dec
pop
xorl
dec
add
dec
clc
into
decl
adc
push
jae
mov
cmp
mov
fimull
xor
sbb
ljmp
pushf
fs
sub
lret
adc
popf
scas
outsl
lret
cmp
cmc
enter
cmp
stos
loop
fs
ds
mov
dec
push
fdivrl
adc
inc
push
jmp
in
in
enter
xor
xchg
fildll
and
xor
pop
int
pop
das
popf
dec
dec
out
inc
ret
mov
add
out
pop
pop
pop
sbb
loope
adc
cmpb
cmpsb
sub
cmp
add
push
lcall
xchg
xchg
int3
inc
xor
mov
sbb
cmpsl
push
shrl
mov
xor
jp
clc
push
push
ds
bound
pop
push
push
ljmp
test
pop
push
jmp
or
mov
ja
sub
pop
mov
movb
add
jb
or
xchg
aas
jg
out
fmuls
int3
pop
sbb
mov
jmp
out
dec
je
mov
hlt
or
lods
mov
cli
test
mov
xor
cmp
or
adc
stos
int3
stos
dec
sub
imul
in
clc
rorl
xorb
mov
jne
mov
and
adc
imul
push
sahf
outsb
add
cmp
sbb
mov
mov
adc
or
pop
aam
dec
mov
scas
or
adc
and
data16
in
sub
sbb
push
sub
leave
ss
mov
inc
lods
cmpsb
sarb
sub
aad
and
mov
inc
fsubrl
lret
mov
data16
xor
sbb
dec
cmp
shl
xchg
or
or
dec
sub
icebp
cmp
sbb
rep
cmovp
push
scas
pop
sbb
xchg
inc
mov
or
inc
jg
ret
dec
lock
lret
rcrl
jno
fldenv
ss
incl
mov
ficoms
push
sub
shll
pop
sbb
jns
shrd
cmp
mov
test
adc
dec
in
cmp
into
scas
push
aam
stos
mov
ja
icebp
jbe
jb
pop
sub
call
shlb
jmp
outsb
fwait
mov
jg
jno
ret
into
jle
ficoml
popa
andl
loope
fdivrl
into
jo
mov
shrl
filds
inc
push
pop
arpl
sub
cmp
lahf
cmp
and
lds
shl
stc
sbb
or
lods
mov
and
and
pusha
dec
loop
adc
inc
test
pop
inc
mov
pop
inc
jo,pn
and
or
lds
orb
cmp
jp
enter
repnz
dec
dec
cmpsb
inc
xor
mov
lods
xchg
sub
mov
push
outsl
lods
dec
sub
add
cmp
mov
ss
and
fs
xor
or
repnz
mov
and
cmp
xchg
cs
int3
adc
fistps
in
jbe
dec
ljmp
jl
push
scas
pop
pop
inc
and
xor
fcmovu
or
gs
adc
das
in
sub
jae
in
cli
loope
add
xor
ret
inc
mov
dec
pop
mov
cmpsl
movsb
xchg
xlat
xor
dec
cs
jle
sbb
jnp
ret
cltd
loopne
dec
pushf
or
lret
push
fs
arpl
arpl
jnp
fcmovnbe
icebp
arpl
jle
cld
sti
sub
mov
adc
push
sbb
sahf
mov
fdivl
imulb
sbb
xor
mov
arpl
jmp
jno
jb
xchg
cmpsl
cmc
xor
jp
add
cmp
adcb
jbe
jle
xchg
std
push
shrb
add
sbb
dec
xchg
out
shlb
mov
jne
xchg
clc
fcomp
cs
mov
add
adc
jecxz
sbb
jp
daa
xor
push
xor
pop
cmpsl
inc
dec
cmc
mov
das
add
and
enter
lock
xchg
imul
pop
sub
sub
ja
std
adc
push
jecxz
fnsave
xchg
mov
sub
dec
xchg
cltd
test
push
mov
dec
cli
push
stc
inc
push
jl
fs
int3
push
ret
scas
cmc
stc
push
pop
movsb
lods
ds
mov
out
jge
or
jmp
ljmp
mov
adc
pop
jns
cmp
and
int
adc
test
js
push
aas
sub
lret
mov
test
inc
cmp
cltd
aam
pop
xchg
hlt
adc
sub
mov
lea
push
les
pusha
addb
push
cli
test
sub
hlt
xor
jo
add
dec
or
cwtl
ljmp
nop
repnz
aad
inc
jo
add
shlb
xor
cmp
jl
inc
jae
das
cld
xor
pop
pop
or
pop
lods
xchg
sbb
and
or
inc
fldcw
xchg
testl
mov
jge
xchg
je
or
roll
ret
mov
dec
sahf
or
sbb
xor
ljmp
cmp
sahf
dec
pop
aam
mov
scas
lea
daa
ss
mov
stos
cmp
shll
scas
xchg
jne
push
stos
push
dec
xor
mov
pop
mov
ficoml
in
iret
lret
dec
sbb
mov
mov
push
add
cmp
mov
sarl
mov
mov
sbb
mov
subl
roll
add
mov
add
test
and
pop
mov
push
add
popf
mov
imul
aam
xor
jne
leave
fwait
movsl
xorb
adc
call
jbe
push
and
out
fimull
jge,pn
ret
dec
dec
jae
push
or
mul
add
loope
xchg
nop
mov
pop
jb
iret
fistpl
jbe
std
loope
sahf
jb
loopne
jnp
add
mov
gs
dec
mov
pop
mov
in
inc
mov
aad
push
pop
mov
push
rorl
std
push
sub
leave
adc
shrl
xor
xor
cmp
ret
shl
lock
mull
xor
es
add
adc
movb
std
push
add
mov
dec
cltd
push
cmovo
push
pop
fidivl
fsub
adc
xor
inc
nop
mov
subl
xorb
and
push
mov
push
push
add
sbb
enter
cmp
xorl
enter
mov
outsb
stos
pop
dec
fwait
push
scas
fldl
adc
loop
mov
lret
outsb
add
dec
cmp
inc
cmp
cmp
push
xchg
add
fs
mov
mull
mov
dec
leave
pop
sti
push
movsb
in
mov
xchg
inc
insb
pop
scas
adc
sbb
mov
and
jne
repnz
inc
pop
les
mov
sub
push
daa
sub
inc
jecxz
clc
inc
cmp
mov
jmp
imul
cltd
adc
les
ja
bound
jmp
je
sbb
mov
shll
add
fimuls
test
inc
sbb
test
jbe
call
xchg
nop
cmc
push
int
inc
cltd
in
lods
pop
call
ficomps
cmp
cwtl
fdivl
insb
xlat
lcall
pop
lock
inc
divb
xor
pop
adc
out
pop
std
push
jo
cwtl
mov
ljmp
sbb
push
push
cmc
pop
out
adc
mov
and
add
add
push
push
adc
cbtw
in
push
push
fnstenv
pop
imul
push
jp
cmp
cli
inc
mov
xor
xor
lea
out
stc
xchg
fimuls
filds
pop
or
call
loope
cmp
mov
jbe
dec
lds
out
in
test
test
cmp
ss
stos
adc
inc
popf
fsubrl
loopne
pop
push
shrb
dec
dec
cmp
in
jb
cmpl
cli
in
outsl
add
jb
adc
inc
in
and
out
mov
mov
jns
repnz
xlat
inc
xchg
jns
and
lea
idivb
xchg
xchg
mov
aam
xchg
ret
xchg
xchg
sub
pop
icebp
inc
xchg
arpl
lods
sub
push
pop
dec
leave
xchg
faddl
or
insl
aam
sub
mov
jb
inc
imul
subl
in
dec
cmpsl
rcrb
adc
std
cmpsl
cld
call
lahf
xchg
int
ret
push
int3
jecxz
mov
inc
sbb
jno
dec
lock
repz
pop
add
sub
scas
sbb
lcall
cli
mov
sar
and
shrl
mov
outsb
cli
mov
ret
test
ljmp
je
sub
arpl
or
test
adc
nop
push
into
imul
fnstcw
sbb
ja
lahf
aas
fisttpll
pop
xor
mov
sbb
filds
xorb
lods
inc
sub
xlat
outsl
cld
sub
ja
cmpsl
in
dec
mov
mov
xchg
nop
xor
ja
jne
xor
push
ror
inc
and
sbb
sub
gs
ljmp
xor
int3
in
cmp
jnp
sarb
lods
sub
dec
leave
ja
sub
shr
fstpl
mov
repz
jge
sbb
pop
cmc
dec
es
fiaddl
mov
sbb
lret
and
pop
hlt
or
xor
push
mov
cltd
imul
xor
hlt
enter
and
shlb
xchg
repz
adc
lods
xchg
or
fiaddl
pop
xlat
loope
and
mov
lahf
fcoms
pushf
xchg
into
jae
loopnew
dec
jmp
jge
stc
clc
notl
bound
add
outsb
jnp
in
daa
out
add
sub
and
movsl
cmp
xchg
jmp
sub
pop
mov
call
out
push
test
andl
test
cmpb
js
gs
xchg
mov
dec
shrl
or
pop
push
sub
popa
jns
mov
or
sbb
pusha
int
adc
shrb
jae
jne
mov
mov
aas
scas
in
sbb
inc
and
fldenv
sbb
rclb
or
cmp
subl
mov
mov
test
outsl
fs
mov
in
fildll
pusha
movsb
repz
mov
push
std
pop
jae
push
nop
fisubl
dec
mov
xchg
adc
jns
or
or
inc
fdivl
or
les
outsb
movsl
test
in
sub
mov
sahf
rcll
sbb
jbe
call
or
aad
mov
jns
xchg
mov
cs
jmp
dec
or
xchg
sbb
arpl
sub
adc
insl
pop
loop
das
jl
inc
mov
dec
jb
inc
jb
xchg
lods
xchg
movsb
mov
xchg
test
xor
pop
xor
imul
movsl
in
jae
bound
je
mov
push
xchg
addl
and
test
adc
jl
adc
mov
aaa
jno
adc
or
xlat
pop
mov
push
mov
fs
cmp
fstps
sarb
sbb
add
dec
arpl
cmpsb
mov
mov
sbb
inc
mov
inc
sub
xor
in
sub
pop
mov
test
mov
mov
or
test
adc
aam
inc
inc
push
push
dec
popa
cs
inc
in
cmpb
imul
out
out
lds
adc
mov
aam
inc
aad
pop
cld
fistpll
mov
push
bound
pop
jmp
lods
cli
cmp
dec
arpl
pop
jnp
xchg
loope
cltd
sub
cmpsl
cmpsb
sahf
jo
in
jbe
packssdw
add
mov
jns
mov
push
call
adc
mov
iret
in
mov
cs
pushf
imul
sub
xor
xorb
inc
adc
and
movsb
sub
jg
pushf
dec
out
mov
orl
mov
enter
mov
aas
push
pop
push
movsl
cltd
je
mov
pop
push
inc
lds
dec
hlt
lods
icebp
mov
cmp
repnz
insb
hlt
xchg
mov
dec
mov
and
jle
shll
aas
sub
movsl
push
rclb
push
sbb
mov
cmp
mov
sub
insl
mov
mov
mov
jbe
xor
adc
adc
push
mov
mov
dec
test
sub
and
cltd
enter
inc
dec
add
sbb
fiadds
mov
test
rolb
xchg
mov
pop
push
adc
jns
sbb
mov
ds
pop
daa
loopne
andb
aam
jns
fldenv
xchg
xchg
add
stc
xor
push
push
cli
or
stos
jecxz
add
and
hlt
cmp
mov
pop
xor
or
daa
mov
push
jae
xchg
aam
add
dec
mov
mov
push
out
adc
sub
dec
mov
xchg
push
shlb
fcompl
adc
stc
test
js
xchg
jb
lcall
xor
xchg
sbb
adc
inc
shll
sbb
mov
in
jmp
into
pop
and
iret
add
or
mov
inc
push
cltd
int
cmp
mul
xchg
add
lcall
stos
outsb
fcoml
pop
sbb
lods
cmp
cmp
f2xm1
lods
orl
or
repz
jno
xor
fnstcw
inc
pushf
imul
es
fdivs
sub
lods
push
push
jg
inc
popa
push
notb
push
adc
fdivs
shl
test
ljmp
fidivl
mov
aaa
jl
jb
aam
test
loop
lfs
sub
es
push
xor
mov
jb
mov
adc
push
in
sub
sbb
jp
fiadds
ss
and
mov
push
mov
repnz
mov
push
cwtl
xchg
ljmp
faddl
insl
and
mov
sbb
dec
xor
test
push
xor
add
pushf
mov
sub
push
push
xor
repz
fadd
repnz
test
daa
xor
cld
scas
int
mov
mov
inc
or
dec
in
lods
dec
lods
and
push
cmpsb
pcmpgtb
cli
aaa
push
jo
cmp
and
mov
shl
jno
sub
in
stc
out
inc
aaa
into
jg
xor
sub
mov
add
das
inc
loope
push
push
cli
dec
xchg
sbb
test
sbb
imul
jae
fnstcw
xor
adc
lcall
push
sub
push
xor
mov
das
xor
mov
insb
repnz
and
mov
xor
mov
sbb
mov
rcr
aad
imulb
lea
das
hlt
ret
mov
stos
movb
inc
mov
mov
xor
mov
fistps
cs
scas
cs
jae
loopne
and
xor
lcall
hlt
xchg
pushf
imul
not
pusha
sub
xchg
lret
xchg
mov
pop
ficompl
jb
mov
in
mov
insl
sbb
xchg
nop
xchg
xchg
out
or
icebp
into
insb
subb
cltd
sbb
idivl
mov
daa
add
and
daa
sub
sahf
mov
lods
sub
aaa
movsl
in
inc
pop
insb
xchg
adc
xorb
fs
in
jle
jecxz
and
ds
mov
lods
sahf
bound
dec
clc
icebp
jp
dec
push
push
lods
pop
ret
inc
dec
inc
fs
mov
xchg
adc
pop
mov
sub
jg
pop
sbb
pushf
pop
fstpt
movsb
popl
popa
notb
cmp
subb
push
inc
gs
aaa
mov
xchg
cmp
hlt
in
push
mov
popa
cmp
add
arpl
or
and
les
outsb
ds
out
sub
test
icebp
mov
jg
insl
cmp
xor
mov
leave
xchg
jecxz
scas
test
iret
jecxz
inc
mov
xchg
je
test
sbb
xor
cmp
hlt
sub
mov
pop
jnp
dec
out
dec
aaa
pop
popa
inc
mov
and
inc
mov
ss
and
mov
jl
xor
or
or
inc
adc
out
fdivl
cmp
or
sbb
add
push
addr16
xchg
xor
stos
xchg
mov
rcll
dec
cmpsb
or
or
mov
aaa
pop
jns
mov
addb
pusha
adc
mov
test
push
scas
imul
push
jecxz
pop
dec
fwait
leave
fldenv
pop
adc
mov
mov
cmp
jmp
gs
scas
push
movsl
ds
push
dec
mov
dec
sub
subl
xchg
popa
je
jmp
pop
clc
out
bound
jmp
aad
and
lret
in
es
fldt
iret
jne
xchg
adc
int3
mov
dec
rorl
jbe
adc
or
addb
out
inc
jns
or
cli
mov
xchg
inc
ss
xchg
ret
pop
and
mov
xor
mov
sbb
out
das
jbe
in
jnp
or
pusha
jge
loopne
xor
enter
push
imulb
sub
hlt
stos
jmp
movsl
mov
outsb
xor
cli
fldenv
and
in
jbe
pop
bound
rol
mov
ds
dec
add
sub
gs
out
xchg
es
pop
mov
push
hlt
std
mov
shl
pop
ret
adc
and
push
inc
push
jl
push
enter
sbb
hlt
enter
lods
and
push
ja
push
dec
gs
repz
fildll
outsl
add
je
xor
and
imul
decl
add
push
cmp
or
or
push
or
gs
lds
sbb
push
out
stc
xor
sub
xor
fldcw
mov
sbbl
sub
andb
imul
xlat
stos
or
pop
dec
mov
iret
mulb
clc
testl
push
xchg
repnz
int3
jne
xchg
xlat
sub
imul
scas
mov
mov
mov
fmull
mov
daa
pop
pop
icebp
out
dec
sbb
outsl
push
gs
addb
mov
outsl
stc
inc
jb
mov
fcmovb
xchg
jmp
pop
inc
repz
ds
ffreep
sbb
leave
aad
jp
jns
cmp
fadds
fdivrs
or
xor
jg
add
push
jns
in
test
pop
sbb
and
lahf
stos
add
add
test
pop
sbb
inc
sbb
fisubs
out
daa
jns
xchg
xor
popf
xchg
repnz
shll
adc
or
aad
rorl
cwtl
cmpsl
cmpsl
insb
fs
lods
in
push
push
std
fucom
testl
push
je
mov
popf
fidivrl
imul
and
aad
test
add
loop
mov
sbb
add
inc
inc
ljmp
jmp
push
push
shl
dec
inc
push
aam
and
cmp
mov
sub
mov
mov
jge
das
jl
frstor
ljmp
enter
dec
push
adc
imul
add
adc
sub
or
sbb
enter
push
pop
lods
fistpl
mov
test
pop
adc
jge
ret
shrb
pusha
adc
sbb
pop
push
test
cmpsb
data16
hlt
lret
shl
mov
test
xor
dec
les
shr
sub
iret
es
adc
insl
add
pop
imul
in
or
inc
xor
cmpsb
hlt
sub
insb
scas
push
into
in
mov
insb
sub
movups
daa
mov
gs
out
jle
dec
aam
pop
xchg
loope
es
dec
sub
xchg
filds
das
aaa
push
pop
fisubrs
fwait
ss
xchg
push
inc
pop
fstps
and
dec
xorb
dec
mov
imul
leave
push
outsb
icebp
sub
sahf
and
dec
and
inc
in
add
jnp
aaa
inc
sbb
push
fwait
js
int
add
cs
mov
mov
add
pop
mov
push
les
jo
xlat
repnz
or
lret
sbb
add
sbb
sub
sarl
outsb
xchg
imul
xor
jbe
scas
push
push
pop
jmp
pop
data16
out
push
pop
mov
sbb
add
outsb
outsb
fcomip
rcrl
les
mov
ficoml
mov
jns
repnz
shlb
in
int3
lods
cmp
int3
jne
jo
pop
decl
outsl
loop
out
sbb
xchg
popa
dec
or
pop
inc
pop
sahf
mov
fstpt
or
jge
inc
inc
and
xchg
sbbl
jnp
add
pop
sbb
jbe
pop
sub
push
and
push
jnp
leave
inc
into
adc
or
mov
pop
adc
or
xor
sub
sbb
sub
mov
jl
rorl
cmp
incl
popf
xchg
sub
sarb
pop
mov
xchg
push
rcrl
enter
push
dec
repnz
sahf
inc
or
orl
jle
fldl
iret
cmpsl
and
pop
sahf
sti
xchg
and
mov
pop
out
push
add
int3
jns
aas
cmpl
jl
mov
int3
pushf
pop
adc
leave
ds
pop
adc
out
jns
cmp
inc
pop
dec
out
scas
sub
cmp
sarl
dec
pop
adc
xor
inc
push
ret
push
jl
aas
mov
push
cltd
rclb
mov
hlt
popa
cmp
roll
inc
add
es
cmc
test
push
and
mov
fdivrs
jb
and
or
pop
jno
lock
push
cmp
and
fisubl
add
mov
bts
pop
pop
jbe
pop
pop
mov
daa
cs
push
fbstp
fwait
xchg
pushf
arpl
clc
or
sbb
ret
inc
mov
orb
jecxz
add
andl
xor
pop
out
aam
mov
movsl
jnp
jle
xor
ds
mov
mov
xor
dec
sbb
xchg
xchg
shlb
pop
mov
xchg
mov
outsl
pop
mov
pop
mov
fsubrl
movsl
pop
ret
fwait
das
lock
popa
push
loop
push
inc
sbb
or
add
mov
mov
push
insl
push
mov
imul
mov
add
dec
cmpsb
or
push
jns
pop
xor
pop
shlb
cli
stos
cwtl
xchg
mov
icebp
adc
mov
jnp
pop
dec
push
mov
xchg
xor
sbb
outsl
out
pop
mov
mov
or
fistpl
xchg
mov
mov
loopne
fildl
cli
jb
testl
push
push
adc
mov
xor
jne
mov
sti
jp
mov
andb
daa
xchg
mov
mov
lahf
sbbl
mov
jge
inc
mov
scas
aam
mov
cmpsl
push
in
mov
nop
sbb
push
cld
lods
stc
jmp
jecxz
pop
test
icebp
jecxz
sub
mov
push
cs
movsl
ret
shll
xchg
enter
push
xor
mov
or
aas
cmpsb
adc
xor
lret
and
sub
xchg
repnz
jp
xchg
pusha
jnp
sarl
dec
sti
lcall
mov
les
out
sub
fs
ret
cmp
arpl
movsb
dec
mov
jmp
add
push
out
push
dec
inc
pusha
lods
gs
mov
js
fcoms
notb
and
jae
xchg
das
adc
cwtl
test
add
push
mov
es
pusha
jnp
sbb
mov
dec
sbb
std
adc
and
inc
xor
cmp
ret
mov
sbb
pop
mov
sub
cmp
add
push
dec
inc
repz
pop
daa
jbe
sbb
inc
push
xchg
and
cmp
frstor
fcmovnb
cmp
lods
mov
xor
arpl
clc
mov
add
and
aaa
mov
inc
sbb
mov
or
test
ss
imul
sub
add
xchg
out
jle
add
jl
adc
aad
xchg
pop
or
enter
aad
cmp
fimuls
cwtl
mov
pop
dec
xchg
xor
lret
fisttpl
movsl
inc
andb
mov
test
call
jp
inc
dec
xor
iret
cmp
imul
mov
add
dec
faddl
mov
jo
inc
pop
aam
icebp
out
movsb
xor
xchg
ss
cmc
sub
in
es
lcall
jge
ds
out
clc
pop
out
lret
imul
pop
jp
fildll
mov
outsl
aam
es
xor
mov
ret
push
push
mov
pop
mov
nop
inc
and
ljmp
cmp
lock
mov
cmp
movsl
icebp
imul
sahf
dec
jbe
in
or
cmpsb
ja
or
rcrb
mov
popa
pop
je
xchg
int
pop
adc
addr16
cmp
and
mov
jg
sar
and
jb
js
enter
mov
hlt
sbb
adc
pop
mov
jmp
sbb
jmp
cmp
xchg
fdivrl
test
mov
mulb
fidivs
pop
arpl
xchg
mov
cld
loopne
dec
mov
mov
int
popf
pop
dec
xchg
imul
xchg
cmp
xor
popf
ret
lahf
call
sbb
mov
out
rolb
cmpsb
or
xor
loopne
outsb
add
sbb
dec
and
mov
call
xor
test
or
add
stos
and
xor
xchg
xor
test
cmp
shlb
ja
pop
inc
out
jecxz
not
push
lea
cmpsb
cli
lret
lds
fnstenv
shlb
or
sarl
popf
adc
and
inc
cmpsb
cmpsl
mov
jae
xchg
xorl
scas
cmp
sahf
daa
fs
push
dec
mov
sbb
sub
xchg
adc
and
fsin
mov
push
sub
sub
sub
xchg
mov
jo
push
scas
pop
add
sbb
xchg
test
push
daa
out
cs
cld
inc
inc
scas
iret
movl
cmpsl
fstl
mov
mov
mov
push
fnop
loope
dec
leave
cli
jns
inc
inc
into
and
jge
cltd
test
xor
sahf
test
or
mov
add
cmp
sbb
xor
jns
xchg
in
xor
cmp
cmp
cmp
sahf
cs
fcoms
inc
xchg
sbb
in
lds
and
arpl
mov
mov
push
inc
pop
imul
fsubrs
inc
shll
jge
pop
andb
jnp
or
xlat
pop
pop
cmp
xor
cmp
xchg
push
mov
outsl
icebp
mov
xchg
outsb
mov
cmpsl
jne
fwait
jle
xchg
jne
cmp
into
pop
pop
filds
cltd
push
insl
add
mov
adc
mov
mov
add
mov
pop
mov
jnp
in
adc
test
cs
xchg
inc
sbb
mov
adc
inc
mov
dec
scas
lret
xor
cltd
cmc
xor
xchg
inc
xor
loopne
or
repnz
negb
insb
xor
int3
in
int3
les
out
movb
jns
ffree
stos
or
cmp
adc
dec
daa
addr16
xlat
push
sbb
popa
insl
xor
lret
dec
icebp
stos
repnz
jo
test
ds
and
jb
adc
or
inc
add
push
fcomps
cmp
and
adc
nop
adc
mov
movsl
scas
xchg
inc
movsb
xchg
cmp
into
pop
cmpsb
mov
push
aad
push
xchg
es
add
xchg
pop
xor
in
jcxz
and
mov
sti
dec
cmpsb
stc
pusha
fadds
xchg
pushf
add
stos
ret
mov
lea
leave
mov
pop
pusha
xor
aam
cmc
fwait
sahf
lahf
fadds
sbb
xor
jb
fnsave
out
add
add
dec
sbb
cmp
add
sbb
mov
pop
add
fwait
xchg
repz
add
into
xor
scas
push
mov
adc
lods
repz
inc
insl
sub
pop
rcl
pop
jg
sbb
mov
test
lea
out
pop
out
mov
jecxz
cs
fistpl
mov
stos
inc
mull
ret
push
sbb
arpl
xor
jg
or
inc
adc
fs
mov
movsb
addr16
outsb
inc
mov
dec
call
aad
sbb
bnd
cli
and
adc
add
sub
add
ficomps
or
jmp
xor
fists
hlt
loope
nop
out
inc
adc
inc
aaa
fxch
fsubrp
jne
out
add
add
popa
loopne
fisttpl
adc
fmull
ljmp
xchg
je
mov
iret
in
jle
add
dec
shl
arpl
jb
test
bound
fadds
daa
popf
data16
mov
es
xor
in
dec
push
test
cmp
push
push
aaa
pop
in
sbb
push
jnp
push
shlb
xor
pop
stc
dec
cld
pop
cli
cmp
aas
mov
and
in
pop
mov
mov
int3
lret
in
das
jecxz
test
pop
in
inc
sub
and
subl
in
mov
jae
cwtl
or
loopne
repnz
push
inc
or
inc
ret
jmp
adc
pop
mov
pmaxsw
dec
ret
in
mov
mov
mov
fs
xchg
dec
mov
addr16
push
sbb
cmp
cmp
push
hlt
and
int
mov
xchg
mov
mov
mov
push
push
mov
mov
out
cmp
dec
pop
mov
scas
rcrl
divb
xlat
andl
add
mov
fnsave
and
sub
add
clc
sub
std
cltd
jecxz
add
iret
push
mov
push
cmpl
subb
stos
cs
hlt
mov
mov
push
je
test
div
jne
sti
aaa
es
not
sti
dec
enter
xor
push
sbb
push
test
dec
dec
les
mov
out
aam
add
mov
hlt
ja
cmp
movsl
add
lea
arpl
push
cmp
xor
jge
pusha
les
push
pusha
sbb
and
xchg
add
pop
and
jno
dec
jle
mov
lds
stos
mov
ljmp
pop
iret
and
xor
leave
xchg
js
icebp
inc
jnp
cmp
dec
sub
inc
int
mov
call
fsts
push
fs
stc
pop
dec
imul
into
dec
lahf
enter
pop
mov
jge
xchg
fisubs
iret
repz
push
dec
and
mov
pusha
arpl
xlat
hlt
stc
and
inc
mov
roll
xchg
pushf
sbb
outsb
movsl
icebp
and
jp
or
iret
inc
bswap
lock
leave
hlt
xchg
fwait
dec
cwtl
popf
or
adc
je
push
rcrb
in
fmull
jg
xor
mov
lret
sbb
mov
scas
inc
or
fidivl
or
popa
mov
jle
int3
mov
repnz
pop
push
repz
gs
int
imul
stos
addr16
sbb
ds
adc
sub
jns
hlt
and
sub
jecxz
jmp
rclb
mov
dec
adc
ljmp
popa
sub
mulb
pop
push
fadd
push
mov
dec
jmp
sbb
fucom
jp
mov
push
mov
push
mov
daa
out
scas
and
xchg
ret
gs
push
pop
addl
mov
outsb
pop
mov
ds
xor
pop
daa
inc
icebp
adc
or
adc
xchg
fisttps
fiaddl
xor
outsb
inc
xorl
das
in
fldenv
rcrl
jecxz
mov
je
sub
insb
mul
fidivrs
pushf
lods
in
jno
push
hlt
xor
mov
adc
mov
xchg
xor
dec
mov
mulb
push
jnp,pn
push
inc
xchg
push
andl
mov
inc
cmp
out
dec
mov
sub
add
scas
enter
inc
pushf
stos
iret
sar
int
mov
and
mov
xchg
xchg
xchg
push
push
lret
and
pushf
in
push
sub
in
mov
jg
repnz
mov
frstor
pop
cmp
imul
stos
dec
std
xchg
adc
mov
push
inc
aas
fistpll
imul
lcall
pop
mov
jbe
les
or
ret
jbe
insb
loopne
pop
or
test
arpl
out
popf
jmp
mov
sbb
in
dec
ret
daa
das
or
loopne
xchg
cmc
cwtl
and
push
cmp
fimuls
aad
je
cmp
push
dec
push
imul
and
rorl
dec
lret
test
jmp
mov
mov
mov
mov
sbb
pop
xor
mov
dec
jl
jnp
scas
les
cld
jle
and
push
jns
loopne
pop
dec
mov
or
push
incl
into
fcoms
std
pusha
push
lret
inc
insb
jp
dec
and
shll
jmp
cld
jmp
fsubrl
jnp
and
xchg
inc
mov
adc
jmp
add
or
imul
ret
and
mov
mov
outsb
test
int
jns
lcall
scas
fstp
hlt
lcall
arpl
lret
fisttps
mov
push
jno
xchg
scas
stos
rorl
or
sub
subl
mov
mov
xchg
jg
mov
mov
push
dec
mov
jp
xchg
push
add
aas
xchg
xlat
arpl
xchg
test
dec
sub
fldenv
pusha
sub
push
ljmp
imul
lcall
out
xchg
hlt
repnz
ret
aas
push
ss
cmp
mov
aas
testl
js
divb
mov
fs
adc
inc
out
mov
mov
pop
cmpsl
cld
stc
insb
sub
xchg
repz
adc
mov
xlat
xchg
inc
mov
and
loop
lcall
in
jae
cmp
jge
das
jae
push
cmp
test
cmp
ret
jne
aad
mov
push
push
in
sbb
leave
xchg
gs
cmpsb
jno
xorl
inc
pminsw
mov
leave
inc
cmp
lcall
jmp
sbb
lahf
data16
gs
stc
xlat
data16
jge
popf
icebp
mov
mov
test
push
adc
sub
daa
xor
xchg
mov
fxch
jae
pusha
mov
push
inc
pop
sbb
or
or
pushl
mov
pop
mov
arpl
shr
scas
out
shr
xchg
mov
xchg
cmp
cltd
pop
sub
mov
imul
xchg
push
in
adc
aam
mov
push
cmpsb
sbb
mov
jmp
test
sub
outsl
icebp
xor
imul
mov
jp
out
mov
and
and
pop
or
rorb
jae
out
inc
pop
mov
sub
xchg
dec
subl
in
mov
mov
xlat
adc
xchg
push
pop
inc
clc
rcr
arpl
pop
dec
mov
int3
mov
jae
and
add
xor
loop
pop
xor
mov
mov
pop
lods
cmpsl
idivb
mov
jge
nop
mov
ror
cld
inc
jb
inc
enter
jl
out
adc
faddl
cmp
xor
cmc
mov
jmp
cmp
add
dec
nop
int
sub
mov
pusha
sbb
test
pop
sub
jmp
or
push
mov
sbb
es
inc
inc
out
orb
in
cli
lret
push
nop
or
pop
lea
rorl
rep
jns
arpl
xchg
push
in
mov
int
pop
mov
mov
xchg
in
imulb
and
cmp
pop
mov
pop
mov
out
mov
mov
adc
sbbb
cmp
int3
clc
push
dec
das
xchg
xchg
dec
and
cmp
push
add
test
clc
sbb
cmp
dec
dec
adc
outsb
or
lods
shlb
mov
out
shlb
rolb
push
cltd
fbstp
cmp
lcall
rcr
jbe
shll
push
mov
and
xor
inc
loop
iret
cmp
in
cmpsb
loopne
loope
push
lret
and
dec
adc
push
jnp
jno
xor
xor
xor
cmp
mov
not
jg
pusha
out
push
popf
std
push
or
sub
data16
fldcw
test
ret
jb
outsl
inc
andl
pusha
pop
cld
movsb
pusha
or
sti
jp
push
popf
nopl
pusha
inc
add
in
shlb
aas
add
cwtl
aas
ja
mov
cmp
mov
jno
and
jnp
jl
das
movsb
lds
sub
ja
clc
push
test
fs
and
fbstp
sti
mov
add
andps
xchg
pop
push
into
cmp
cmpsl
lock
lea
cmp
xlat
push
mov
cmpsb
add
enter
mov
fdivrp
mov
enter
test
repnz
push
xlat
jne
xchg
mov
cmp
repz
inc
xor
inc
aad
test
out
mov
and
test
rol
dec
jo
enter
pushf
and
scas
push
or
and
adc
outsl
cld
fdivp
mov
mov
inc
call
jp
mov
dec
imul
imul
xor
fwait
pop
sbb
icebp
test
popa
fnstenv
mov
or
push
mov
popl
xchg
pusha
xlat
mov
shlb
fs
leave
xchg
pusha
orl
les
out
sahf
xor
mov
mov
sub
mov
xor
mov
mov
dec
or
xchg
lock
ss
or
out
or
pop
xor
js
fwait
jecxz
sbb
rolb
inc
leave
lock
or
cmp
lcall
out
mov
inc
cmpsb
es
ss
adc
xchg
or
cld
mov
sar
movsb
push
inc
sub
fldenv
add
in
or
or
sbb
or
aas
fs
sub
push
clc
pop
push
ljmp
and
imul
sub
add
jp
sub
loopne
ds
das
mov
arpl
fs
adc
outsb
dec
mov
bound
mov
dec
xor
add
rclb
inc
mov
repz
int
stos
addr16
add
jge
scas
in
enter
mov
adc
sub
sub
mov
push
lea
test
sahf
iret
xor
into
sti
push
cld
jns
incb
pop
inc
cmp
lret
mov
daa
inc
loop
inc
adc
mov
inc
or
or
cltd
cmpsb
mov
stos
stos
testl
inc
inc
sub
xchg
adc
pop
jns
adc
xchg
add
jae
jne
inc
scas
jl
and
push
cmpsl
out
pop
sbb
add
testb
mov
rol
dec
fsts
inc
mov
cmpsl
dec
into
jmp
sti
xor
repz
sbb
adc
or
insl
cld
cmp
add
mov
sub
mov
push
jae
xchg
cmp
jbe
je
jb
and
pop
outsl
xchg
in
std
bound
cltd
push
push
pushf
test
push
bound
icebp
bound
sarl
add
fdivl
in
mov
idivl
and
addl
inc
push
adc
loop
mov
xor
sbb
nop
mov
push
xlat
mov
adc
mov
adc
push
mov
repz
andl
sub
pushf
and
in
push
scas
ficoms
ret
aas
dec
mov
jnp
mov
orb
cld
mov
push
adc
mov
lcall
pusha
insl
xor
add
add
popf
sti
adc
jp
cmp
jns
nop
notb
mov
in
add
cmp
sub
jecxz
push
and
push
fldenv
out
mov
and
cmp
dec
push
aas
out
arpl
xlat
push
adc
inc
mov
mov
jb
mov
loopne
pop
shll
or
movsb
stos
clc
sbbb
pop
push
es
push
pop
ret
icebp
jmp
lcall
in
jae
sub
fldcw
roll
fwait
cwtl
nop
push
xchg
lret
adc
dec
lret
sbb
out
mov
cmp
xchg
stos
fs
ds
sbb
leave
rorl
sahf
inc
cmp
movsl
jge
mov
mov
adcl
test
push
push
jge
add
inc
or
fistpll
add
xor
cmp
pop
pop
adc
inc
cwtl
mov
sub
outsl
xor
repz
cmp
daa
add
and
fwait
cmp
call
negb
jecxz
stos
jle
cmpsl
cmp
stos
push
les
adc
add
fimuls
into
pop
jno
mov
stc
ljmp
push
xchg
jl
jbe
pop
cmp
xchg
push
lods
pop
inc
sbb
dec
lock
dec
sbb
test
sub
or
je
fisubl
mov
xchg
sub
in
jle
out
idivb
jns
pop
inc
pushl
xlat
pop
adc
push
sub
pop
mov
push
leave
adcb
sub
out
push
add
mov
cld
sti
push
daa
hlt
jl
mov
test
mov
mov
aas
cmpsl
add
xor
int3
push
mov
flds
mov
mov
and
and
add
iret
adc
lret
cmp
movsl
int3
and
lcall
mov
jp
lret
jmp
pushf
movsl
push
in
outsl
xor
sub
mov
stos
xor
scas
frstor
in
add
push
pop
test
outsl
pop
adc
pop
nop
in
push
test
xor
scas
mov
es
xchg
je
data16
xchg
dec
ficoms
mov
je
or
mov
and
ljmp
jle
sbb
cmp
adc
sub
mov
scas
mov
cmc
dec
std
cmp
xor
sub
adc
dec
push
inc
add
cmpsl
xor
mov
jne
push
repz
lds
mov
sbb
popf
out
jecxz
pop
shlb
jns
cltd
mov
jecxz
in
and
xor
inc
add
cmp
ret
adc
dec
mov
or
mov
cmp
or
into
sub
or
testl
idivl
pop
pushf
mov
inc
dec
in
inc
jge
es
and
cld
jmp
sbb
add
dec
or
push
inc
dec
cmp
fs
enter
mov
add
sbb
jge
orb
or
mov
test
stc
inc
insl
cli
pop
pop
cmp
orl
adc
sahf
cmpsl
pop
or
cli
mov
pop
loope
cmp
xchg
sub
loope
fs
adc
push
cmp
fsubrs
add
xchg
dec
cmpb
lock
push
test
imul
xlat
cld
cmp
xor
pop
add
loope
xchg
mov
cmp
leave
lret
lcall
or
out
mull
mov
sbb
jmp
fstpt
je
xor
dec
je
fst
sar
inc
mov
or
mov
imul
lock
xchg
mov
pop
in
xorb
ret
pop
push
push
mov
add
push
lds
pop
xchg
mov
cmp
pop
pop
and
pop
add
xchg
pusha
lahf
ret
nop
mov
aaa
or
movsb
pop
cmp
xlat
push
dec
scas
xor
pop
bound
sbb
mov
and
push
dec
call
test
push
movsb
das
or
xchg
mov
adc
pop
push
pop
push
in
or
xlat
push
aam
sub
jp
loope
pop
lcall
pop
mov
out
mov
bound
jae
jl
out
add
xor
repnz
sbb
add
stos
cld
mov
pop
push
xchg
mov
lea
gs
jno
dec
in
dec
push
or
inc
pusha
rorb
cmc
scas
neg
fwait
dec
andl
xlat
nop
icebp
cltd
push
imul
fisttpl
xor
in
insb
xor
sbb
adc
int3
adc
add
mov
daa
add
nop
lret
in
push
sbb
mov
pop
xchg
test
loopne,pn
mov
cmp
dec
mov
pop
cmpsb
push
movhps
add
jbe
sahf
fsubs
push
jo
jne
mov
pop
mov
pop
cmp
ret
fbld
adc
gs
push
idivb
push
cmpxchg
adc
and
xchg
mov
and
mov
in
lds
test
sarb
mov
cmpsb
inc
or
das
lods
shlb
stos
add
add
pop
and
je
jae
outsl
jns
movsl
xchg
sbb
jns
ja
xchg
std
cmpsb
jo
pusha
mov
jno
js
ret
add
inc
imul
jmp
pop
xor
pop
aaa
test
loope
and
mov
and
adc
fisttpll
leave
sub
cltd
xchg
and
loope
inc
jle
sbb
sbb
lahf
cmp
mov
out
dec
dec
imul
inc
shrb
push
mov
cli
xlat
shrb
repnz
ret
add
adc
cmc
mov
lods
push
add
popa
pop
inc
adc
sub
fiadds
mov
insb
pop
xchg
test
add
pusha
adc
fcom
rolb
mov
lods
filds
dec
dec
fiadds
enter
and
in
dec
cmp
add
mov
mov
ja
add
pop
int3
aad
jae
sbb
movsb
fiadds
dec
dec
inc
shll
loope
xor
jae
testb
add
push
cmpsb
jl
pop
iret
int
jbe
mov
adc
les
adc
insb
rorb
mov
cmp
jo
incl
sbb
mov
out
ret
aam
mov
es
mov
pop
out
shrb
jge
cwtl
sti
ljmp
xor
iret
jns
shrl
or
push
xlat
add
aaa
mov
mov
sbb
into
jno
mov
in
add
inc
mov
sub
or
cmp
add
js
cld
cmp
imul
fcomps
xor
arpl
inc
aam
int
sub
test
les
xor
add
inc
arpl
mull
andl
mov
mov
push
shr
aam
mov
subb
xchg
mov
out
inc
mov
lahf
test
or
cmp
jmp
sbb
mov
inc
jmp
xor
jns
cs
loopne
das
pop
out
sahf
jo
cmp
int
popa
stc
xlat
outsb
xchg
ljmp
fsubrl
insl
mov
lcall
lret
xchg
sub
shr
fstpt
adc
pop
imul
mov
ja
add
aad
popf
repz
mov
xor
ret
lea
mov
dec
jle
lods
mov
movsl
cli
jae
xor
adc
fwait
insb
pop
je
push
xchg
sarl
sbbl
mov
ljmp
in
or
xchg
rcrb
dec
lret
sbb
sbb
and
adc
js
push
cmp
faddp
mov
mov
outsb
and
outsl
jmp
out
sbb
lahf
mov
cmp
dec
shrl
inc
xchg
mov
in
sbb
sbb
pop
cld
insb
in
call
jae
int
sbb
mov
fsub
sbb
int
out
in
repz
add
sbb
mov
sub
and
pop
push
fs
outsl
adc
fists
jnp
lock
popf
mov
test
cmpsl
std
push
ret
xchg
clc
jge
mov
js
push
push
xchg
inc
push
je
jae
notl
arpl
arpl
push
mov
push
dec
into
outsl
inc
mov
rcrb
push
xchg
mov
cmp
xor
and
cmp
push
insl
cltd
sub
cwtl
push
fidivrl
sti
jae
cmp
add
leave
mov
push
sahf
mov
xchg
out
mov
jbe
jecxz
ja
cmc
enter
lahf
adc
sbb
mov
pop
lahf
or
fisubrs
aad
push
leave
mov
or
mov
call
mov
gs
das
inc
lret
lret
adc
adc
iret
adc
mov
jp
lods
dec
repz
andb
push
and
xor
faddp
mov
in
or
mov
in
xor
cmp
jge
sbb
or
mov
mov
dec
fidivl
jmp
js
push
add
pusha
inc
mov
mov
jne
sbb
dec
pop
ljmp
pop
cmp
mov
out
lcall
shl
ret
cmpb
ss
pop
negl
std
outsb
aam
or
aam
mov
and
jle
into
xor
pop
cmpsl
rcr
idivl
add
xchg
push
push
loopw
stos
jg
test
dec
sahf
in
sarb
imul
xor
jb
test
sub
pop
and
test
scas
les
dec
xchg
jno
test
push
inc
xor
sti
push
movsb
lods
jae
pushf
adc
repz
and
push
aas
imul
out
xchg
iret
push
lods
fcmovu
cmpsb
sahf
loopne
jae
fdivl
dec
push
pop
inc
inc
xor
push
inc
xor
arpl
or
jbe,pn
or
adc
enter
dec
movsb
fsub
jae
mov
cwtl
sbb
inc
hlt
loop
in
sbb
dec
push
jp
or
gs
rclb
mov
movsl
push
push
stos
jl
jnp
outsl
rcll
dec
clc
popf
add
jge
rcrb
and
pop
add
sub
jmp
addr16
and
shlb
outsb
clc
cltd
leave
mov
smsw
pop
jb
test
ret
out
cmpsb
fcmovnb
xchg
stc
or
fsubl
or
imulb
sti
shlb
fldcw
dec
sbb
sbb
popa
mov
dec
cmp
adc
push
jne
ret
repnz
stos
mov
stos
push
clc
pop
ljmp
xchg
inc
dec
insl
push
iret
or
cld
je
sti
push
or
mov
pop
enter
xchg
or
ror
push
adc
and
mov
popa
notb
outsb
adc
icebp
imul
mov
pop
dec
test
pusha
sbb
sub
push
jne
stc
mov
cwtl
shlb
adc
lock
xchg
cwtl
jne
inc
dec
testb
ret
jne
orl
cltd
idivl
and
ret
cmpsb
loop
lea
pop
shl
lahf
pop
lock
in
pop
ret
add
mov
loope
ret
ljmp
adc
stc
jl
cli
fidivrl
int
sbb
xchg
repz
ret
outsl
mov
ret
dec
pusha
jecxz
xchg
and
sub
push
daa
js
mov
je
mov
add
mov
or
push
fimull
lods
sub
mul
xchg
mov
shrl
add
movsb
inc
xchg
or
adc
mov
fdivrl
push
or
xor
xchg
and
shl
xchg
outsb
sbb
xlat
cmp
cmp
sbb
xor
jns
out
cmpl
push
imul
insb
dec
cmpsb
xor
dec
sbb
dec
mov
push
cltd
addb
mov
xor
pop
call
cld
pop
insl
movsb
xchg
icebp
mov
fcoml
mov
cwtl
mov
inc
enter
sub
mull
jo
pop
dec
sbb
jmp
xor
jbe
ja
lods
pop
cltd
and
add
rorl
jb
loop
or
or
sub
loope
pop
fmull
ja
pop
pop
shrb
sub
pop
fs
repnz
iret
or
sbb
push
adc
cmp
inc
pop
stc
ret
sub
lahf
jno
aaa
mov
scas
imull
or
in
mov
into
int3
pop
loope
jbe
fwait
pop
gs
test
jns
pusha
push
out
js
jl
shll
add
xor
imul
push
cmp
aas
pushf
sbbl
or
push
lret
xor
and
mov
jmp
nop
add
addl
dec
lcall
adc
incl
or
stos
ljmp
addr16
jge
ja
xor
rclb
leave
cmpsl
mov
ss
imul
arpl
jle
sub
and
and
adc
stc
xor
lods
xchg
sbb
movsl
pop
cmp
xchg
adc
fwait
or
jge
mov
cmp
xor
pushf
jg
sub
dec
sub
add
pop
pop
sbb
ds
imul
xchg
outsb
mov
add
dec
test
jne
cmp
test
mov
nop
xor
inc
punpckhwd
shlb
out
xchg
xor
outsb
dec
orb
inc
jecxz
cmc
ret
mov
adc
outsb
shlb
mov
xor
and
in
push
adc
push
inc
cwtd
jmp
mov
scas
push
nop
inc
pushf
ja
and
push
mov
std
mov
out
or
pop
fs
push
sub
add
mov
push
int
mov
and
or
pop
cmp
jecxz
mov
in
pop
cld
lock
scas
mov
sub
cmp
jbe
rolb
xchg
add
iret
and
xor
jp
and
out
or
shlb
gs
sub
mov
out
jmp
cld
out
lds
test
cmpsb
sbb
dec
enter
sbb
jnp
loop
pop
xchg
loope
mov
cmpsl
or
cwtl
je
in
add
fldl
loop
sub
lods
add
lock
mov
out
xchg
dec
push
out
jne
jns,pt
xchg
mov
pop
push
dec
loop
sbb
sbb
icebp
enter
sbbl
dec
enter
call
fs
loop
pop
in
inc
jne
jle
sub
mov
cmpsl
inc
fldcw
repnz
push
add
xchg
into
mov
loopne
mov
aas
int
adc
lahf
ja
retw
mov
mov
daa
fimull
mov
sbb
insb
jg
xchg
es
ror
push
and
int3
adc
jbe
add
inc
xor
dec
fsubs
mov
aas
xchg
cmp
out
jnp
or
jno
dec
lods
aad
xor
les
or
push
push
sub
fadds
dec
sbb
pop
jo
or
mov
mov
out
arpl
in
aas
push
fldt
cmp
add
inc
push
testl
lea
jl
popf
adc
push
cs
cmp
stos
rep
and
mov
xor
mov
scas
inc
push
mov
jecxz
mov
mov
adc
lret
fistpl
pop
xchg
mov
mov
or
dec
and
scas
and
rcll
insb
loope
jg
cmpsb
mov
shll
jnp
or
pop
jno
into
ds
and
aad
fcompl
mov
mov
loop
or
pop
mov
or
push
push
mov
xor
mov
dec
in
cmp
mov
arpl
jmp
or
push
dec
out
xor
clc
add
jle
gs
xlat
xchg
out
mov
add
rcr
rcl
add
cwtl
out
jnp
test
xchg
out
fisttps
mov
dec
xor
xchg
ljmp
cld
mov
and
inc
dec
movsl
and
push
jb
mov
mov
inc
adc
mov
mov
pop
push
dec
ret
mov
mov
adc
test
push
adc
mov
int3
xor
push
cmp
dec
sub
lods
fisttpl
fs
and
aas
fwait
sub
fs
arpl
mov
mov
aad
inc
cmp
sbb
or
jp
inc
jge
mov
dec
shl
pop
jb
sbb
cs
mov
mov
sti
jbe
sbb
mov
mov
mov
sahf
decl
mov
es
inc
ss
xor
adc
xchg
leave
push
subl
cmc
inc
mov
shll
sar
stc
fcmovne
hlt
mov
and
pop
inc
pop
aad
jmp
sbb
fbstp
jle
adc
lods
xor
ljmp
shlb
mov
lods
subb
sub
sbb
pop
mov
pop
js
xchg
imul
inc
aam
lock
lret
es
les
and
xor
fwait
jo
rolb
adc
rclb
mov
mov
xor
in
jns
dec
out
push
cmp
imul
mov
out
xor
in
shl
sbb
lcall
test
add
and
das
stos
nop
mov
mov
mov
mov
lods
clc
sti
setle
js
mov
pop
cmp
inc
incl
repnz
and
fxch
ret
xor
sbb
push
push
cltd
sbb
mov
jl
mov
mov
inc
aaa
push
iret
or
scas
std
add
push
mov
out
inc
js
xor
or
lds
dec
sub
lock
jl
stos
xor
pop
and
mulb
adc
cmp
popa
jecxz
jecxz
jne
hlt
dec
cmpl
mov
inc
dec
push
mov
ret
js
sahf
mov
adc
aad
pop
arpl
cwtl
mov
push
mov
mov
pop
add
lret
cli
inc
inc
ret
stc
add
orb
adc
pop
mull
js
stos
stc
outsb
outsb
inc
clc
std
cmpsl
adc
xchg
jo,pn
imul
mov
or
and
xchg
mov
add
cmp
repnz
cmpsl
dec
clc
sub
andb
push
nop
icebp
jge
jb
out
bound
inc
stos
das
dec
ret
in
shlb
inc
rclb
inc
fcoms
addr16
cmpsl
movsl
lods
insb
add
lcall
mov
ljmp
inc
xchg
xor
orb
or
bswap
xchg
out
xchg
jl
mov
jae
jbe
cld
add
mov
in
push
imul
xlat
cli
inc
add
pop
loope
icebp
lods
loopne
add
mov
fsubl
jb
pushl
gs
shrl
adc
fcoml
shlb
adc
movsb
sti
jle
popa
cmp
jecxz
jns
dec
or
or
icebp
outsl
iret
mov
movsl
outsb
inc
fcomps
cmpsl
ljmp
divb
popl
addr16
mov
cmpl
mov
mov
lock
ret
dec
sahf
xchg
mov
sub
mov
and
adc
enter
ret
insb
xor
pusha
mov
jg
imul
aad
scas
jns
test
mov
nop
aas
xchg
fs
testb
push
push
and
mov
enter
jmp
mov
cmpsl
xor
add
xchg
dec
xor
testb
aam
jle
mov
arpl
sbb
popf
in
bound
cmp
fs
iret
jmp
push
scas
dec
fwait
rclb
cli
mov
inc
sbb
mov
push
ja
xchg
jno
cmp
sahf
push
clc
jbe
dec
adc
int3
pop
or
jge
loopne
int3
jle
popf
cli
icebp
add
mov
lock
cmp
popa
aaa
imul
sbb
cmpsb
xor
mov
loopne
out
les
loope
dec
push
jno
out
pop
cmp
mov
popf
insb
ljmp
or
mov
lcall
mov
xor
xor
ret
and
jl
test
mov
fidivl
lods
or
mov
pop
push
mov
and
scas
fidivrl
pop
aad
popf
ljmp
pop
call
lea
ja
mov
ret
das
ljmp
out
xor
cs
adc
fisubl
mov
ficoml
cmc
in
mov
testb
sbb
ss
lea
push
lea
dec
pop
sbb
clc
sbb
lds
sbb
inc
daa
jle
jb
mov
fwait
cmp
push
movsb
push
adc
jbe
cld
lods
pop
inc
lret
mov
daa
pop
stos
repnz
pop
fdivrp
push
mov
cmp
addr16
stos
xor
cli
icebp
addb
leave
frstor
mov
aas
pop
lahf
in
jae
push
or
aam
popa
fcom
add
fwait
cmp
xor
push
movl
sbb
xchg
out
xchg
les
pop
sub
jne
add
inc
dec
jecxz
mov
sbb
sbb
int3
mov
les
divb
into
jmp
cwtl
sbb
push
mov
add
ret
xor
mov
jle
sub
rclb
jno
out
push
lods
mov
lret
mov
arpl
ret
xor
jecxz
les
xchg
in
cs
es
scas
bound
dec
xor
mov
sti
adc
and
in
cmp
mov
adc
dec
outsb
aas
mov
adc
add
push
mov
pop
out
pop
pop
pop
pop
jbe
push
repnz
xor
negl
sub
or
out
fstl
xchg
pushf
sti
sbb
sub
out
js
mov
out
push
or
jg
movsl
cs
lret
sbb
jno
inc
test
ficoml
dec
movsl
mov
cmp
inc
fs
decl
daa
or
jmp
inc
pop
pop
outsb
mov
jmp
xor
add
mov
fistps
and
dec
repnz
jnp
or
lea
int3
inc
push
sti
mov
jns
add
jg
les
ljmp
sbb
cmp
xchg
and
push
in
mov
decl
add
decb
cmpsl
lods
push
sti
inc
lret
leave
lea
add
cmp
push
mov
ficoms
ljmp
sbb
push
push
pop
adc
addb
stc
loope
add
jp
mov
xchg
movsl
xchg
scas
aas
xchg
jae
inc
xchg
stos
cmp
jne
dec
stos
sbb
fists
jo
mov
not
xchg
ja
fcom
cmp
int3
loopne
sbb
repnz
xorl
xor
popf
scas
or
mov
xor
je
les
push
xchg
mov
fcmovu
xor
fidivl
jbe
push
dec
adc
insb
iret
insl
out
or
stos
xor
jl
push
cmp
mov
mov
xchg
cmp
addr16
xorb
push
and
sub
adc
outsb
mov
call
xchg
mov
mov
xchg
test
push
inc
fistps
call
sub
mov
inc
insl
and
mov
or
mov
mov
inc
jns
jnp
push
pop
xor
or
lret
push
in
mov
hlt
movsb
sbb
ljmp
sub
cmp
and
or
test
push
stos
sub
cli
pusha
jp
jbe
pop
jbe
pushf
lret
arpl
push
mov
mov
out
sbb
sub
pop
pop
cltd
cmp
and
int3
sti
stc
leave
mov
dec
pop
mov
push
inc
fwait
pusha
pop
fistps
sub
push
jmp
int3
insb
movsb
xchg
dec
loope
stc
or
fs
fs
out
push
or
or
or
push
mov
nop
sti
push
lcall
jo
lods
jecxz
jae
push
mull
insl
adcb
or
cmp
and
mov
add
and
insb
jl
dec
sub
mov
sub
push
jmp
cmp
sub
cmp
and
pop
inc
lret
js
pop
pop
stos
push
xor
mov
jmp
jb
or
das
adc
or
in
mov
out
adc
mov
sub
lds
mov
dec
in
aad
dec
movsl
mov
aad
push
clc
int3
dec
enter
aaa
xor
dec
popf
dec
adc
lds
mov
cltd
mov
insw
stos
outsl
xchg
data16
push
scas
jns
push
lret
mov
out
lds
ja
mov
data16
clc
rcll
xchg
cmpsb
sub
adc
les
inc
cmpsl
ret
je
pop
cmc
insl
xchg
adc
sbb
dec
mov
out
mov
int
rorl
nop
xchg
lock
sub
inc
pusha
lds
mov
pop
loope
jns
push
hlt
push
mov
loopne
xor
adc
sbb
push
cmpb
mov
pop
stos
push
adc
lahf
testb
sub
mov
xchg
add
inc
mov
popa
aas
push
rolb
dec
xorl
pop
pop
inc
push
cld
pop
mov
data16
inc
test
push
inc
and
rcrb
adc
mov
cld
adc
repnz
cwtl
int3
xor
punpckldq
mov
cmp
pop
push
dec
pop
inc
ja
push
pushf
rolb
imul
fists
mov
lret
push
bnd
iret
mov
add
call
inc
outsl
push
dec
dec
imul
add
or
test
cmp
negb
cmp
cld
xor
out
or
add
xchg
push
push
daa
or
xorps
lods
mov
or
stos
ss
add
cwtl
divb
daa
xorl
outsl
mov
arpl
pusha
adc
inc
lods
pop
xchg
sbb
dec
jecxz
setb
scas
mov
xchg
and
sti
orl
adc
xlat
test
and
push
push
inc
mov
xor
mov
je
stc
cli
scas
mov
mov
pusha
sub
push
mov
sub
push
int
in
outsl
dec
jo
or
add
sbb
icebp
pop
push
cmp
add
xor
fisttpl
sbb
lods
dec
in
movsb
scas
rcrl
mov
ja
rorb
or
adc
fidivrl
fidivs
and
cmp
scas
xor
jmp
outsb
movsb
add
js
jg
sub
and
test
std
popl
cwtl
or
rcrl
sub
push
test
mov
jno
add
adc
mov
add
pop
gs
fs
push
add
fistpll
mov
lock
xor
incb
or
daa
cmpsb
jecxz
idivl
out
je
in
orl
out
popf
lock
xchg
jne
dec
mov
push
hlt
sbb
arpl
fldl
sbb
lahf
pop
imul
data16
jnp
or
test
pop
imul
std
ficoms
cmp
out
push
jge
stos
jmp
fldt
clc
hlt
xlat
pop
fidivrl
mov
test
cmc
pop
jae
pop
pop
mov
loop
jb
xor
xchg
mov
gs
pop
arpl
lcall
sub
sub
xchg
pop
dec
xor
mov
inc
and
add
pop
add
inc
push
and
add
es
push
test
jne
ja
xchg
add
divb
loope
popa
cmp
mov
pop
mov
fwait
or
daa
test
cmp
mov
sub
aad
inc
arpl
jl
setne
push
lock
mov
push
insb
daa
mov
rol
or
pmaxsw
or
pop
xlat
cmpsl
push
push
pop
insl
mov
lods
cmp
mov
les
add
mov
insl
lods
dec
sbb
pop
shl
idivb
call
pop
loop
gs
mov
sub
mov
and
xor
push
mov
sbb
cwtl
popa
daa
repnz
cmovl
push
mov
cmp
and
lock
mov
push
in
cld
xor
inc
mov
or
sti
sahf
mov
repnz
out
jmp
aaa
shlb
push
lahf
dec
and
xor
inc
sbb
xor
or
cmp
push
push
xchg
mov
push
inc
scas
push
mov
fmuls
fdivs
out
sbb
les
lcall
mov
in
push
and
jne
jns
popf
imull
cli
stc
das
out
stc
sbb
jp
jg
out
leave
xchg
add
push
out
pop
jb
cmpb
jb
ss
xor
dec
push
pop
add
pushf
push
icebp
xchg
test
sbb
jno
movsl
aam
xor
je
jecxz
inc
cmp
ret
fnsave
cvtpi2ps
lds
add
jp
lds
cld
add
divl
imul
std
add
pop
shr
stos
mov
adc
popa
and
cmp
dec
lret
test
movsl
and
arpl
sub
incl
adc
cmp
nop
mov
dec
in
mov
popa
mov
pop
jle
in
gs
outsb
mov
fdivrl
xchg
out
pop
orb
fistpll
int
push
pop
icebp
adc
clc
mov
mov
push
adc
scas
cmc
lods
idivl
push
sbb
outsb
or
shl
incl
fidivrs
add
dec
mov
jae
icebp
subl
inc
fldcw
adc
pop
lret
xchg
xchg
push
adc
ret
jo
testl
mov
jo
lds
sarb
mov
mov
inc
fistpl
in
and
adc
inc
int
insb
jae
out
int
movsb
popa
mov
pop
in
data16
mov
pop
push
xchg
int3
outsb
jns
es
into
scas
adc
sbb
push
daa
cmp
push
cmpsl
jbe
mov
lret
sbb
in
push
mov
jb
jle
add
add
rorb
inc
mov
adc
ja
aaa
fistpl
jb
mov
jns
cmp
std
add
inc
popa
inc
sbb
loopne
aam
or
sbb
out
cmp
lods
in
inc
cmp
inc
lret
mov
lcall
xchg
imul
in
jo
mov
or
mov
sahf
inc
imul
jbe
aaa
mov
add
lret
xor
mov
call
or
pop
or
lret
jg
in
and
fisubs
repnz
testl
and
bsf
dec
test
in
movq
sub
jnp
push
call
or
or
popf
dec
std
icebp
push
test
bound
pushf
sub
fidivs
and
lea
xor
mov
stc
xchg
mov
jmp
add
lock
and
lret
ret
inc
pop
lahf
lea
das
xchg
in
pop
rclb
inc
push
jb
les
orb
add
xor
lret
repnz
pop
add
fucompp
lcall
sbb
test
jbe
test
pop
inc
imul
mov
dec
clc
adc
dec
pop
push
xlat
xchg
dec
pop
add
add
sahf
test
add
jle
stc
cmp
ds
jg
fdivrl
pop
pushf
enter
push
fistps
imulb
cs
jae
push
stos
jne
sbb
add
pop
and
in
cld
mov
cvtps2pd
pop
cmp
popa
mov
movsl
aad
push
sub
filds
fxch
lret
push
sub
xor
rcl
bound
aas
rol
pop
push
push
or
jae
add
cmp
mov
inc
cltd
adc
cmp
cmpsl
sub
xchg
fidivrs
mov
in
sbb
push
pop
sub
int3
int
movsb
pop
nop
dec
pop
add
push
cwtl
jnp
xchg
setne
int3
ret
jmp
lods
or
das
pop
mov
inc
imul
and
les
push
cmp
adc
mov
in
scas
jae
push
shlb
and
insb
lods
mov
xchg
jge
add
call
or
fs
lods
cmp
adc
mov
xchg
stc
adc
lods
add
xchg
add
out
cli
or
pusha
es
and
mov
lock
out
cltd
and
sub
test
ja
outsl
xchg
sarb
imul
sahf
out
addl
das
sbb
call
aad
xlat
or
xchg
scas
dec
out
in
fidivl
xchg
fmull
xchg
and
fs
cmp
dec
or
sbb
push
sbb
mov
or
lea
mov
or
aas
jb
add
or
jmp
mov
jo
icebp
jge
jne
ret
add
cmpsb
divl
xchg
in
adc
push
pushf
add
jnp
lahf
je
cmp
hlt
mov
out
push
jae
dec
call
dec
mov
pushf
call
and
push
cld
mov
cmp
popa
or
nop
mov
arpl
or
xor
mov
mov
mov
pushf
sbbb
or
es
mov
jae
mov
mov
adc
scas
xor
xor
fisubrs
dec
outsl
jno
icebp
jge
out
jbe
fwait
push
rcr
addr16
jp
outsb
scas
mov
mov
outsl
mov
cmp
inc
bound
push
mov
mov
inc
popa
inc
lock
cmp
xchg
mov
scas
pop
mov
call
or
cmp
xchg
xchg
addr16
jb
shlb
dec
sub
adc
mov
push
out
mov
add
pop
mov
push
push
sub
ss
mov
aas
in
push
xlat
push
xchg
outsb
ret
mov
push
adc
movsb
pop
and
inc
punpcklwd
aad
xor
jnp
mov
sbb
dec
push
cs
xor
push
test
mov
addr16
mov
push
out
jns
dec
mov
push
pushf
inc
in
pop
sub
pop
inc
ret
push
test
imul
stos
scas
pushf
js
stc
lret
data16
push
and
movsb
test
lds
aaa
cltd
push
xor
arpl
inc
mov
aas
push
in
leave
loopne
fcoms
xlat
adc
push
dec
js
mov
ss
mov
push
jge
repz
mov
popa
aam
inc
addr16
inc
fistpll
loope
mov
dec
rcr
outsl
pop
jle
add
add
and
add
les
fcomps
and
dec
sub
icebp
mov
mov
inc
aaa
jo
xor
jns
or
negl
sub
jbe
pop
lret
in
push
fnstcw
inc
push
push
adc
imul
and
jne
add
cmc
in
xchg
repnz
and
sub
jbe
inc
dec
add
in
aas
test
mov
adc
insb
cli
stos
imul
mov
addl
add
sbb
icebp
dec
rolb
mov
pop
rorl
rcrl
mov
popf
or
dec
xchg
addl
jb
push
mov
jmp
nop
dec
inc
fwait
sbb
dec
mov
dec
adc
leave
pop
mov
mov
in
leave
adc
inc
ds
nop
call
dec
sub
jl
pusha
mov
dec
addr16
inc
enter
xchg
test
jmp
hlt
inc
rcll
in
in
pop
jl
jmp
ss
cli
mov
insb
pop
pop
mov
imul
lods
inc
test
adc
orl
adc
pusha
sub
popa
out
movsb
inc
pusha
jmp
fcmovbe
cmpl
stc
mov
xor
outsl
cli
movsl
dec
out
fnsave
iret
cmp
jae
ret
pop
daa
repnz
cmp
pop
adc
ret
cmpsl
sub
mov
cmpsl
jnp
xchg
push
and
mov
out
lret
hlt
jnp
daa
jmp
cmc
jne
push
and
mov
mov
mov
loop
jl
sub
sub
xor
mov
jmp
jns
leave
mov
fcmovnu
xchg
cmp
pop
pushf
test
out
push
je
das
jg
and
mov
adc
negl
adc
inc
out
sarl
and
mov
xchg
imul
bound
jo
scas
dec
sub
add
dec
cld
jecxz
adc
aas
push
popf
push
sbb
pop
pop
loope
push
mov
mov
dec
out
adc
jp
push
lret
pop
imul
inc
stos
cmp
iret
pusha
or
cmc
cs
lea
iret
sub
dec
mov
dec
pmaxub
push
loopne
int3
stc
add
sbbl
pop
adc
sbb
push
ss
xor
push
push
andl
xchg
pop
or
mov
cltd
ss
jmp
dec
jae
cmp
inc
in
jbe
aaa
daa
and
sub
clc
in
insl
daa
repnz
and
in
xor
in
fst
adc
inc
ret
lods
int
add
movsl
insl
sbb
adc
cli
cmp
xor
fisubs
add
add
lea
mov
inc
pop
add
dec
pushf
mov
inc
pop
loope
cmp
or
sbb
mov
std
fsts
cmp
fcompp
mov
pushf
les
hlt
mov
dec
popa
xchg
mov
or
mov
and
push
ret
lcall
scas
inc
popa
xor
pop
add
or
push
cmpsl
movsl
xor
pushf
or
in
inc
add
imul
in
push
pushf
xor
xchg
add
outsb
fldl2t
imul
stc
xor
push
div
jmp
dec
inc
sub
pop
outsl
mov
mov
mov
mov
repnz
fmuls
or
out
xchg
cmpsl
push
fidivl
jp
or
jle
add
loope
insl
push
rcr
sbb
xor
dec
xor
and
adc
xor
cltd
mov
xchg
icebp
cmp
xlat
jl
aaa
jb
mov
jl
es
xchg
mov
xor
test
mov
in
test
cmp
pop
out
pop
mov
mov
gs
or
stos
inc
xchg
scas
cmpsl
xor
cltd
xchg
xor
outsb
push
gs
xor
sub
popf
mov
add
inc
add
inc
jl
negl
insb
mov
js
inc
call
es
inc
xor
xor
std
andb
push
std
les
imul
mov
inc
jnp
hlt
cmp
scas
add
sbb
addr16
and
lret
stos
scas
dec
or
mov
lahf
sub
pop
adc
jmp
testb
push
cmp
xchg
pop
test
push
jo
add
data16
jae
mov
lods
dec
cli
mov
pop
gs
insb
cld
ret
xchg
lcall
push
push
test
popa
xchg
mov
cmp
dec
add
inc
mov
repnz
shll
outsb
and
cmp
hlt
loopne
inc
mov
lcall
cmp
and
dec
negb
repz
out
cli
int
cs
mov
add
in
mov
inc
mov
adc
lods
dec
add
out
add
inc
decb
data16
push
bound
fcmovb
push
jne
decl
cmc
xchg
cltd
testl
jmp
sarl
out
or
sub
int3
rcl
addr16
fisubrs
mov
push
adc
adc
mov
mov
mov
in
sbb
cmp
jnp
and
ficoms
mov
jl
rorl
push
dec
xor
push
sub
std
flds
push
add
push
fstl
push
shrl
jns
int
in
shr
mov
insl
push
out
lcall
testb
mov
push
cld
pop
mov
mov
mov
push
pop
mov
cmp
das
bound
mov
bound
daa
jp
mov
sub
pusha
cs
xor
dec
mov
and
jle
cmp
out
sbb
inc
inc
jge
add
inc
push
and
ljmp
sub
loope
xor
rcrl
int3
xorl
adc
pop
addl
pop
dec
jo
inc
pop
fnsave
in
test
adc
test
mov
sbb
or
mov
mov
jmp
clc
push
sti
or
add
xorl
into
cmp
pop
sub
push
and
pop
inc
pop
rorl
adc
jge
jne
hlt
fwait
out
jmp
out
pop
push
dec
dec
pop
push
aaa
dec
mov
stos
dec
jnp
jns
lea
je
movntps
cmp
out
dec
mov
lret
add
dec
imul
push
popf
out
xchg
es
mov
cmp
sub
stos
push
dec
mov
jne
lcall
aad
add
xchg
jno
sub
jecxz
xor
rcrl
outsb
cli
dec
stos
aaa
stos
or
mov
mov
fimull
jl
jb
aas
ss
fnstsw
std
or
repz
jl
pop
sbb
cmp
nop
adc
inc
mov
xchg
mov
push
fcmovnu
lcall
ja
push
fadds
repnz
dec
inc
mov
cmp
pusha
xor
pop
rorl
and
mov
mov
cmp
cmp
or
xor
pop
divl
xchg
push
js
add
test
cs
jbe
jmp
cmpsl
aas
popf
inc
insb
add
adc
fsubrl
repnz
adc
push
or
xchg
fcoml
adc
cmc
push
xchg
int3
in
out
jno
lea
cmp
xchg
pop
sbb
cwtl
jae
repz
int
cmp
int
insb
cmp
cmp
addr16
rcll
js,pt
xor
adc
mov
mov
and
mov
adc
hlt
hlt
test
inc
sub
sub
dec
jno
sub
dec
lock
stc
jecxz
xchg
add
ret
negl
mov
xor
int
loop
pop
sbb
lods
mov
mov
sub
inc
dec
mov
mov
ret
jno
sub
mov
xchg
sub
push
pop
mov
jge
roll
and
aas
out
lret
insb
loopne
jle
je
or
jg
mov
sbb
jge,pt
fidivs
lea
into
mov
xor
push
es
xchg
mov
xchg
movsl
out
inc
inc
test
aas
or
adc
push
insl
mov
jecxz
pop
push
test
mov
out
jmp
jge
xchg
lock
and
adc
notb
call
gs
push
div
sahf
imul
or
push
adc
mov
jns
popa
out
pop
lea
cmp
loop
xchg
aaa
add
jmp
mov
lea
dec
mov
lret
cs
mull
dec
lret
test
fstps
xchg
imul
sbb
popf
repz
movsb
inc
addr16
rol
or
stos
imull
xchg
xchg
and
sub
shl
aad
pop
or
cmp
jp
pop
push
mov
mov
decl
jb
jg
lods
aaa
test
jp
add
sti
push
push
std
jmp
or
dec
pusha
xor
xchg
jp
cli
sahf
pusha
imul
rcr
gs
xor
icebp
mov
or
jge
iret
push
push
xchg
xchg
mov
and
loope
movsl
mov
adc
js
add
pop
test
xor
xor
xchg
imul
xchg
xchg
xchg
xchg
cli
cmp
xchg
movb
popf
add
pop
clc
inc
and
rorb
dec
testl
jbe
ljmp
aas
mov
push
in
cmp
add
je
aam
xchg
sbb
hlt
testl
fistpl
out
pop
mov
xchg
inc
int3
sub
jno
sbb
inc
rcrl
xchg
ss
shll
int3
push
inc
jns
clc
out
gs
sahf
into
inc
or
mov
daa
fbld
les
jle
cs
mov
aam
es
jmp
fcompl
dec
jns
sbb
rorb
pop
jg
popa
push
inc
imull
ljmp
sbb
fisubrl
sub
fs
mov
fwait
xchg
push
popa
push
ljmp
push
arpl
int3
xlat
inc
cli
lock
push
inc
enter
iret
scas
adc
pusha
push
pop
fimull
ja
jb
stos
addr16
add
cwtl
push
ljmp
repnz
xchg
js
repz
outsb
lock
outsl
xchg
jecxz
insb
mov
mov
es
sub
in
mov
ss
rorb
int
hlt
sbb
or
mov
inc
daa
mov
outsb
repz
mov
push
push
adc
dec
loope
inc
dec
rcrl
adc
scas
jl
dec
xchg
xor
xchg
pop
int3
shll
lods
icebp
test
mov
dec
pop
sti
push
out
and
insb
mov
push
das
out
xchg
mov
and
xor
sti
adc
fisubrs
test
fldt
xor
pop
sub
das
jle
repz
int3
xor
xor
sub
in
pop
lcall
inc
scas
push
lds
imul
push
sbb
and
in
mov
stos
popf
inc
mov
or
xor
mov
test
push
xchg
push
into
adcl
repnz
jl
call
adc
lds
aad
lret
lods
jae
les
scas
xchg
sbb
hlt
push
cmp
cwtl
bound
push
jne
push
out
int
es
cmpsl
inc
jo
hlt
aam
daa
shrl
ds
and
mov
cld
mov
dec
mov
pop
je
iret
fnstsw
adc
in
pusha
ss
fcompl
imul
lock
pop
test
dec
adc
loopne
adcl
xchg
clc
js,pn
jp
push
loope
inc
fstps
mov
or
mov
into
es
xchg
jbe
dec
sub
daa
jb
cmc
cmp
lea
in
cmp
push
scas
xchg
pop
fsubrs
jle
sub
into
push
push
rcrl
adc
fidivl
xor
lret
push
test
imul
sbb
pop
push
xchg
jge
mov
adc
dec
mov
iret
faddl
clc
or
adc
add
xchg
out
adc
or
jmp
xchg
aad
jb
jae
push
cmp
jns
in
cmpsb
fisttpll
inc
and
pop
stos
and
pop
pushf
aaa
push
jg
stos
jle
inc
mov
loopne
or
push
jno
iret
sbb
dec
popa
add
sarb
push
xchg
lcall
sbb
or
or
mov
sub
mov
and
mov
into
push
jnp
mov
shrl
into
pmaxub
test
bound
fldl
ja
xlat
mov
ret
pop
inc
mov
hlt
cmc
fistpl
pop
mov
xor
push
xor
push
aas
inc
adc
jno
pop
pop
sbb
push
push
scas
arpl
dec
popf
mov
ljmp
in
ror
pop
clc
xchg
sbb
pop
and
sahf
adc
xchg
push
xchg
sub
xor
insl
jp
shlb
sub
jne
push
sbb
pop
test
cmpsb
mov
pop
push
jp
push
in
aas
filds
adc
cwtl
push
loop
mov
pop
push
les
pop
sti
mov
and
push
mov
push
cmpsb
pop
andb
pop
pop
fnsave
adc
mov
lods
sbb
nop
popf
fistps
das
add
push
iret
mov
push
pusha
ljmp
adc
dec
data16
push
fs
push
nop
shlb
push
mov
or
sub
mov
mov
mov
sbb
sub
pop
icebp
mov
lret
jle
scas
movsl
fstps
shrb
in
adc
test
test
insb
inc
cltd
in
cmpsb
inc
jg
rorl
out
pop
decl
pop
insl
dec
icebp
dec
mov
mov
call
dec
mov
mov
and
sub
icebp
push
jg
sub
push
inc
fwait
shll
push
adc
inc
mov
mov
mov
rcrl
imulb
mov
push
xchg
adc
inc
sti
sbb
push
cltd
das
jno
call
push
push
lret
cmp
daa
lahf
call
push
push
fstpl
sahf
mov
mov
ljmp
inc
and
enter
dec
outsl
pop
movsb
sti
das
mov
loopne
xorb
in
push
push
push
shrb
xchg
xchg
scas
jmp
sbb
movsb
test
xorb
fistl
cmp
inc
into
fstl
push
ds
orl
mov
dec
xor
push
add
jns
int
sub
xchg
insb
mov
mov
mov
sub
ret
dec
xchg
ret
push
mov
jp
adc
mov
popf
mov
pop
jae
inc
test
jnp
dec
imul
dec
repz
fst
lcall
adc
dec
jge
cmp
cmp
add
mov
push
pop
xchg
mov
fs
sbb
pop
pushf
sub
xchg
movsb
clc
jmp
ja
and
push
repnz
jmp
xchg
es
test
fbld
test
addr16
sbb
ss
mov
outsb
outsl
push
sti
fildll
lcall
int
xchg
out
ret
sub
or
popl
dec
popf
pop
pop
aad
and
ljmp
mov
add
int
mov
mov
push
sub
int3
repnz
sub
pop
movsl
inc
std
dec
pop
inc
jno
dec
arpl
aad
xchg
imul
xchg
pop
push
imul
push
fildl
mov
xchg
lcall
push
mov
pop
pusha
xor
mov
mov
and
fwait
sbb
adc
jno
pop
insl
ror
imul
mov
sti
pop
push
das
mov
ret
dec
pop
add
mov
test
popl
ret
insb
std
jmp
sub
jge
fnstsw
push
sbb
test
pop
pop
push
mov
cmpsl
fbld
and
std
dec
jns
and
loope
inc
and
pop
test
pop
push
pop
insb
sbb
data16
stos
sbb
sahf
dec
sbb
in
adc
int3
iret
inc
fldpi
and
jp
adc
insb
cld
shr
inc
mov
inc
sahf
nop
jmp
xor
mov
sub
addb
add
pop
jmp
and
outsl
in
sub
dec
mov
cmpsl
hlt
xchg
xor
adc
aas
jno
inc
adc
jg
dec
mov
sbb
loope
in
mov
jae
sub
or
popf
arpl
js
ja
clc
subb
mov
fildl
adc
xchg
and
mov
pop
adc
fisubrl
jbe
aaa
cld
arpl
inc
iret
or
add
lret
test
movups
aad
es
insb
dec
hlt
or
cmpb
lock
das
mov
dec
insb
mov
lea
and
test
test
hlt
dec
mov
cmpsb
xor
add
sbb
into
aaa
lds
or
mov
sahf
mov
adc
outsl
repz
nop
jne
call
mov
inc
inc
stos
mov
aas
inc
aas
call
mov
and
enter
xor
lock
psrld
mov
lret
or
cwtl
pop
sbb
mov
icebp
inc
fidivrs
jp
leave
xchg
jmp
mov
pop
add
fcmovnbe
loop
loop
add
lds
inc
out
enter
leave
jmp
jge
fwait
dec
cmp
fnstsw
adc
xchg
shl
mov
inc
dec
icebp
mov
inc
iret
mov
xchg
xlat
not
jae
imul
add
xor
push
stos
or
das
jge
xchg
xorl
hlt
sub
shll
dec
cmp
fbld
loope
cli
mov
sub
fcompl
jl
jl
or
jl
test
sbb
pusha
mov
negb
mov
sub
test
ror
adc
xchg
loopne
addr16
sbb
fdivs
dec
mov
cmp
sbb
mov
cmp
push
cmp
nop
sub
pop
rol
imul
orb
sub
sbb
lret
repz
fwait
in
push
sbb
adc
lret
push
inc
loope
mov
push
test
mov
jg
daa
adc
js
mov
inc
and
js
and
xor
mov
popf
xchg
dec
adc
in
test
add
das
ret
sti
add
clc
aam
dec
mov
jne
stos
jno
call
out
repnz
jmp
sub
add
int
clc
ss
add
xchg
rcrl
jae
and
out
push
sub
ljmp
inc
xor
jl
std
xchg
cmp
sbb
cmp
adc
in
mov
mov
insb
and
pop
mov
sti
stos
jns
mov
jg
sub
pop
and
cld
cmc
clc
xor
cmp
dec
and
loopne
ret
aam
mov
jl
inc
inc
dec
cltd
push
adc
push
pop
cmp
lods
jne
jb
mov
fstl
xor
andb
lret
mov
adc
out
push
push
aam
in
popf
mov
push
sub
xor
mov
cs
addr16
add
addl
lock
lock
inc
jo
mov
mov
adc
jbe
jae
add
pop
push
lahf
push
or
pop
ds
outsb
pop
cli
jmp
adc
popf
mov
mov
out
test
int3
push
and
cmc
dec
imul
cmp
lcall
aaa
popa
repnz
pop
aad
addr16
adc
xchg
leave
pop
imul
fidivs
adc
and
add
fdivrl
imul
xor
mov
stos
fwait
jmp
cmp
push
pop
mov
outsl
lret
rcll
xchg
or
add
movl
or
nop
sub
or
and
push
jno
jmp
rolb
jg
je
and
xor
aam
out
cmc
ret
add
inc
jecxz
arpl
xor
std
test
xor
aaa
insl
pushf
xchg
cmp
in
cmp
insb
cli
rdpmc
les
push
loop
push
inc
mov
dec
inc
xchg
cmp
mov
pop
mov
inc
dec
in
popf
mov
adc
cmp
mov
rcl
cmp
iret
cmpsl
push
push
adc
adc
and
int3
imul
mov
dec
sub
aas
xor
sbb
pop
xchg
mov
adcb
mov
outsl
push
stos
add
add
sbbb
sub
add
or
jle
mov
pop
cmp
es
push
mov
or
lcall
and
pop
shll
stos
repz
jbe
and
das
jo
aaa
cld
aas
lcall
fidivs
pop
in
adc
or
lcall
cmp
pusha
xchg
repnz
mov
sbb
addr16
insl
es
lods
psubb
pop
arpl
shrb
imulb
and
and
add
stc
push
adc
dec
push
mov
orps
js
mov
lods
movsl
push
rcl
outsl
sbb
xchg
dec
shrb
test
rcll
popf
jno
dec
mov
adc
sti
shl
mov
cwtl
aad
js
mov
stc
dec
std
stos
pop
pusha
in
sbbl
sub
test
sbb
mov
mov
mov
push
ljmp
cwtl
insb
dec
jecxz
not
ret
sbb
inc
sbb
inc
hlt
ficompl
lea
cmp
icebp
rep
out
movsb
aam
ret
stos
or
clc
sahf
fiadds
insb
mov
stc
adc
stos
mov
dec
std
jns
int
inc
imull
cmp
jle
aam
mov
leave
cmpl
mov
repz
inc
add
pop
mov
pop
cmp
mov
repz
dec
and
sub
movsb
jbe
sbb
mov
mov
ja
dec
or
int3
pop
push
push
loope
mov
mov
cmpsb
push
stos
outsl
fisttps
sti
jbe
xchg
shll
xor
cld
pop
andl
xor
shlb
ss
repz
xchg
mov
push
adc
sbb
pusha
cltd
pop
sbb
fs
cltd
dec
cs
adc
out
out
pop
scas
outsl
imul
mov
loope
repz
clc
jbe
or
popf
rcrl
stc
jnp
jae
inc
add
out
sbb
jecxz
andl
sub
xchg
out
xchg
sarb
dec
out
lret
xor
add
and
hlt
stos
cmpsl
repnz
popa
push
cwtl
pop
popa
adc
jmp
sub
imul
cmp
sbb
test
loopne
push
xor
mov
dec
and
inc
push
push
add
or
pop
jno
dec
pop
sti
mov
xchg
cmp
inc
jle
lret
arpl
shl
mov
fdivrl
addr16
mov
in
xor
adc
inc
lock
mov
mov
loope
jl
call
outsb
cmp
js
arpl
mov
jbe
jge
or
xchg
pusha
test
sub
sub
lret
pop
pop
dec
jmp
mov
fisubrs
mov
jl
and
clc
pop
mov
fimull
dec
push
jmp
subb
mov
fxam
and
stos
test
jecxz
fs
pop
cmpb
xor
sub
xchg
imul
repz
in
lea
and
popa
mov
in
std
jg
or
mov
repnz
scas
repz
and
mov
and
mov
stos
cmpsb
test
arpl
clc
xchg
xor
ret
xchg
push
cmpsl
push
negl
sbb
in
lahf
adc
test
mov
int
rolb
mov
cmpb
loopne
inc
int
pop
push
mov
cli
push
icebp
ss
sub
adc
or
psubb
add
and
dec
xchg
fmuls
cmp
fildl
mov
into
shll
fcomps
mov
fmuls
adc
imulb
lods
dec
push
inc
cmp
into
pop
andb
stos
mov
scas
and
gs
subb
rorl
fsts
add
lcall
orb
test
loop
and
and
fsubs
cmp
ret
das
ret
test
adc
mov
cld
je
sbb
inc
mov
outsl
fwait
dec
rcrb
stos
and
mov
adc
and
sbb
pop
cld
cmp
push
in
sub
pop
lahf
xchg
mov
lods
cli
adc
cwtl
inc
lds
pandn
jbe
pop
shlb
sahf
push
pop
jp
and
lods
aaa
mov
pop
mov
push
dec
mov
adc
aam
sbb
fisubrl
push
in
fidivrs
ja
pop
sub
sti
mov
ja
cwtl
lods
or
lds
loop
sahf
ss
sarl
xchg
test
mov
xchg
jmp
repz
jecxz
inc
jecxz
rcrb
jl
aaa
pop
sbb
enter
adc
mov
hlt
push
cs
xor
sub
imul
adc
das
add
in
lods
lea
push
jge
add
test
inc
inc
stos
xor
popf
jo
cmp
add
fadd
jbe
inc
leave
fnstsw
xlat
movsb
lea
rorb
ja
and
inc
add
push
push
sub
arpl
fidivrl
mov
lcall
pop
push
xchg
mov
xor
leave
clc
and
jecxz
xor
imul
xor
stos
pop
jmp
add
nop
icebp
bound
enter
or
les
je
pusha
mov
aam
cmp
pop
xor
or
enter
xchg
out
into
cmpsb
movb
xorl
push
sub
xor
and
mov
or
pop
out
xchg
stos
cwtl
jo
icebp
fnstcw
pop
cmp
mov
xchg
lock
mov
inc
bound
xor
lret
pop
add
mov
fmul
fisttpll
cmp
pushf
addr16
xchg
dec
mulb
cmp
in
or
mov
mov
cmp
cmp
loop
mull
jecxz
mov
test
mov
paddsw
int
xchg
out
icebp
jno
or
sbb
inc
pop
cltd
inc
fsubr
dec
pusha
jb
xor
loop
clc
nop
nop
adcb
int3
add
insb
rcrl
or
pop
xchg
je
jmp
in
jg
lret
fidivs
outsb
and
lods
dec
adc
cs
push
inc
add
add
addr16
ja
jg
add
and
cmp
and
xchg
test
pop
sar
dec
xorl
data16
stos
lock
ljmp
jg
jbe
mov
push
mov
pop
pop
jb
test
pop
pop
jne
and
in
pop
imulb
ljmp
xchg
fisubrl
lea
nop
nop
into
cmp
mov
iret
mov
stos
mov
mov
pop
jnp
lahf
adc
fmuls
fisubl
mov
inc
int
stos
cmp
aad
sub
mov
aad
inc
dec
imul
test
mov
pop
sbb
cmp
push
adc
rclb
push
pop
or
xor
ljmp
out
mov
in
fcoms
pinsrw
scas
das
nopl
xorl
and
cltd
lock
cmp
add
or
xor
pusha
punpckhdq
push
mov
inc
push
xchg
punpcklwd
dec
sub
jg
jecxz
cmp
pop
mov
lods
inc
mov
xor
das
sbb
in
or
test
inc
adc
xchg
sbb
aaa
cmp
addr16
lret
or
lea
mov
add
cmc
popa
jmp
call
inc
pop
pop
lret
js
jno
xor
dec
add
jle
push
mov
mov
mov
and
jns
mov
pop
jnp
movsb
arpl
and
shr
fs
jmp
paddsw
and
inc
cltd
push
sub
cmp
xor
push
fldcw
xorb
sbb
push
gs
jne
jns
mov
inc
sbb
sahf
cmp
jmp
or
or
mov
xchg
cmp
ljmp
cmpsl
daa
in
cltd
mov
mov
push
jle
stos
mov
sbb
aad
xor
mov
adc
data16
dec
negb
movsb
decb
ljmp
andb
jbe
popf
dec
sbb
andl
out
int
mov
cmp
mov
js
outsl
mov
xor
jne
lods
jg
data16
loope
pusha
push
addb
or
mov
cli
adc
faddp
mov
test
dec
stc
gs
lea
sarl
cli
popf
mov
leave
jmp
sub
inc
repnz
andl
push
aas
mov
leave
test
and
bound
mov
xchg
xchg
fstl
bound
rcrl
test
enter
xchg
pop
xor
rcll
enter
mov
or
and
fwait
in
lds
call
in
lret
ja
shrb
push
pusha
inc
mov
pusha
loop
ljmp
shrl
push
mov
xor
iret
sub
adc
xor
gs
sub
test
mov
lret
jb
test
pusha
adc
cs
dec
or
loope
jp
push
xor
adc
bound
sub
inc
jnp
push
push
lods
jns
insb
dec
cmp
push
xchg
inc
sahf
mov
push
insb
add
jge
mov
sbb
sarl
in
sub
inc
pop
daa
dec
push
lods
jb
inc
jmp
cld
pusha
mov
fwait
and
faddl
and
icebp
jl
mov
imul
pop
cmpsb
imul
or
test
out
xchg
sub
and
jg
cmp
iret
mov
clc
or
in
pop
arpl
into
add
adc
jmp
and
jecxz
fs
mov
lds
pop
add
or
iret
test
lods
fstpt
dec
jecxz
loope
inc
je
xchg
jmp
jne
arpl
ljmp
loopne
jl
ss
mov
insb
pushf
bound
mov
cmp
mov
loop
in
pusha
cld
lret
divb
mov
inc
pop
inc
and
mov
mov
repz
test
sbb
xchg
dec
and
adc
data16
mov
jp
jp
xchg
sti
jno
mov
push
pop
jl
mov
push
xor
shll
inc
sbb
mov
pusha
aaa
pop
adc
dec
jae
pop
or
and
test
movb
jp
dec
jb
loopne
mov
inc
es
in
in
loope
push
jae
repnz
jne
and
lcall
dec
inc
mov
ds
adc
ret
addl
aam
xorl
push
cltd
xchg
cltd
sbb
iret
jno
aas
mov
inc
sarl
add
imul
add
pop
dec
scas
sbb
sub
mov
add
sub
ret
roll
jnp
test
cli
lea
pop
xchg
test
pusha
mov
mov
imul
jae
aaa
pushf
sti
lret
push
out
icebp
push
mov
inc
add
stos
sub
adc
cmp
mov
mov
xchg
or
les
push
adc
jmp
adc
mov
fwait
testb
popf
ret
jo
push
movsb
mov
xchg
out
cmp
je
lret
aas
out
xor
push
dec
xchg
rolb
sub
mov
xlat
rol
ss
clc
inc
xchg
pop
popa
pop
sbb
int
jae
mov
jecxz
pop
sbb
divl
int3
and
out
insl
sub
push
cmp
cmpsl
jns
inc
push
jo
mov
push
stos
iret
pop
arpl
xchg
add
mov
gs
jns
jno
inc
dec
mov
aam
popf
mov
mov
fisttpl
jl
jg
pop
lret
bound
adc
orb
dec
and
adc
fsubp
fstpl
addr16
out
lock
pop
mov
or
fwait
pop
out
imul
mov
cmpsb
out
outsb
negb
out
fsub
in
ss
cmpsb
jle
arpl
dec
xor
adc
mov
pop
cmc
daa
clc
sub
fildll
aaa
mov
cmp
push
mov
mov
sub
sarl
cmpb
add
xor
sahf
fnstenv
test
int
shlb
add
cmp
push
insl
pushf
dec
test
sbb
test
cld
and
pusha
mov
inc
add
or
inc
xlat
adc
out
inc
fidivl
aam
sbb
fistpl
pop
addr16
pop
sbb
dec
sbb
aad
jmp
fwait
pop
and
aam
and
jp
fwait
and
push
jge
xor
mov
fsts
repnz
mov
fs
adc
sbb
ss
loopne
pushf
enter
pop
push
jmp
sti
sbb
in
std
testb
adc
ljmp
sbb
mov
inc
mov
push
pop
add
xchg
ljmp
in
mov
cli
xor
push
push
push
popf
sahf
cmp
inc
je
push
movsb
cmp
mov
push
add
pop
pusha
fmull
pop
xchg
lds
mov
xor
xchg
or
add
sbb
pop
dec
outsb
xchg
mov
or
leave
rorb
out
inc
stos
dec
sub
pop
mov
inc
je
xchg
sarl
stc
sub
ret
inc
adc
dec
adc
xor
sarb
call
in
data16
sbb
push
xchg
inc
xchg
sbb
sbb
inc
std
xchg
mov
rcpps
inc
pop
mov
pop
jbe
mov
and
bound
cmp
fisubs
xchg
in
lods
and
add
mov
fstps
pop
call
sub
jo
or
pop
pop
lret
sub
icebp
rol
xchg
loopne
dec
leave
add
jp
dec
mov
es
add
dec
xlat
mov
or
sahf
jno
dec
mov
enter
pop
imul
and
adc
mov
out
mov
mov
stos
out
pop
pop
or
push
dec
jg
mov
mov
dec
stos
and
or
xchg
outsl
clc
and
out
xor
cli
xchg
fidivrs
stos
push
inc
lret
popf
mov
divb
xchg
mov
addr16
sahf
shr
decb
insb
aas
mov
sbb
fisubl
neg
add
fsubr
mov
inc
inc
adc
sti
test
jg
dec
pop
sahf
lods
loopne
out
lea
shlb
dec
xor
pusha
pop
cwtl
and
popf
jl
dec
fimull
outsb
and
push
or
cltd
daa
aam
adc
in
jns
mov
dec
sti
pop
cmpsl
andb
dec
test
cmp
mov
fbstp
je
gs
fs
sarb
xor
insl
inc
leave
add
jbe
jg,pn
xorl
das
incl
nop
mov
aas
cltd
mov
mov
mov
outsb
dec
sbb
mov
pop
out
push
jecxz
pop
sbb
xchg
scas
add
mov
lcall
shlb
sbb
rolb
cmpsl
xchg
sub
fldl
adc
pushf
and
dec
int3
fwait
xchg
cld
bound
adc
add
popf
and
ret
xchg
mov
xlat
dec
lret
jl
dec
stos
je
rcrl
stos
outsl
push
gs
or
push
repz
loope
arpl
xor
and
pop
cwtl
or
mov
popf
loop
push
sub
push
add
push
mov
stos
popl
sbb
dec
inc
stc
fwait
hlt
mov
sbb
pop
pop
pusha
mov
lock
xchg
and
pop
add
loop
jbe
xchg
inc
xor
jbe
mov
das
mov
jno
mov
dec
dec
or
rcr
lods
add
or
js
scas
loopne
jo
out
inc
jno
fistpl
cli
hlt
sbb
add
push
stos
cmp
xchg
rorb
mov
stos
and
jecxz
lods
gs
push
fs
mov
arpl
dec
cld
push
mov
subl
stos
mov
in
push
rorl
xchg
mov
sti
pop
filds
fistps
lahf
insb
orb
sti
add
xlat
dec
dec
mov
popa
jns,pn
push
xor
adc
jnp
and
out
pop
shlb
adc
push
push
mov
scas
std
and
or
mov
xor
pushf
jno
pushf
and
and
xor
cmpsb
and
or
dec
out
ror
pushf
test
subb
push
int3
inc
add
adc
ds
xchg
and
leave
loope
mov
dec
ret
add
loopne
cmpsl
xchg
xlat
pop
xor
xchg
cmpsb
jb
inc
lea
xlat
pop
jae
mov
push
jl
cmp
jb
push
or
pop
insb
cld
mov
push
cmpsb
lret
jbe
push
into
jg
or
and
mov
icebp
gs
imul
pusha
jmp
sbb
and
push
push
mov
insb
push
push
aad
add
enter
shrb
sub
mov
bound
xor
ds
or
xor
or
mov
inc
xchg
insb
lock
push
cmp
adc
or
in
sbb
aaa
stos
lea
aaa
clc
fs
and
adc
dec
mov
push
push
sbb
sub
xchg
frstpm(287
mov
subl
or
call
adc
hlt
or
js
xchg
nop
fisttps
jb
dec
cld
adc
xchg
and
aas
push
mov
call
out
pop
out
clc
xor
cmpsb
add
lds
mov
xor
xor
out
out
insb
int3
dec
std
mov
sub
lock
xchg
in
les
out
jp
push
cwtl
sbb
shrb
call
xchg
pop
push
fbstp
xor
inc
lock
push
mov
push
loopne
xchg
or
je
mull
xchg
gs
sbb
cs
xchg
scas
jo
ja
out
fsts
xchg
lret
push
xchg
sbb
fisubrs
hlt
dec
out
inc
xor
shlb
aas
or
push
cmp
pop
in
mov
lea
and
adc
aas
movsb
add
in
xchg
fwait
push
ja
jno
nop
xchg
mov
ja
add
sbb
das
mov
shl
pushf
pop
xchg
jl
dec
imul
push
mov
xor
dec
repz
pop
aaa
or
in
mov
cmp
call
sub
out
cltd
xchg
icebp
jbe
sub
inc
xchg
inc
lahf
inc
adc
aam
leave
xor
jmp
daa
test
add
push
insb
jno
xchg
sbb
outsl
mov
outsb
mov
mov
pushf
ds
sbb
xor
inc
lret
adc
scas
add
xor
mov
add
dec
or
mov
pop
lock
es
movl
and
xchg
sahf
ret
mov
incb
das
mov
xor
and
push
xchg
outsb
inc
loope
sbb
insl
sbb
jb
fwait
je
jns
iret
push
sub
in
and
fnstcw
jb
fistpl
sbb
loope
fildll
add
inc
jo
adc
aam
sbb
lret
push
pop
mov
lret
fisubrs
push
add
mov
or
xor
dec
pop
fnstcw
out
jb
cwtl
inc
ret
call
insl
rclb
cli
add
xchg
lahf
dec
sbb
sbb
int3
fcompl
mov
scas
pusha
scas
dec
mov
jp
test
mov
cmpsb
dec
xchg
jle
negl
push
in
fistpll
subb
mov
mov
cmp
jge
push
cmp
lea
dec
arpl
dec
xlat
sbb
aam
lret
addl
mov
add
xchg
fimull
mov
dec
inc
out
aaa
mov
imul
mov
xor
jb
jmp
push
xor
or
adcl
pop
xchg
pop
jmp
and
push
dec
push
xor
outsl
movsl
cmpsl
neg
int3
push
out
add
mov
cld
sbbb
xor
nop
ja
inc
fwait
jnp,pt
stos
xor
je
dec
cli
es
jp
shlb
lret
adc
dec
and
fcom
mov
flds
gs
mov
gs
pop
xchg
repz
lret
repnz
or
adc
pusha
xchg
fsubrp
cmc
adc
ljmp
inc
inc
sbb
arpl
mov
push
bound
or
jmp
fimull
jae
movsl
inc
outsb
add
mov
fisubs
sbb
dec
jbe
mov
scas
dec
push
std
inc
incl
outsl
xchg
mov
rcrl
mov
cmp
mov
or
jnp
repnz
popf
popa
push
cmp
pop
aaa
js
aam
xor
mov
mov
roll
push
cs
js
xchg
sbb
dec
push
adc
mov
push
add
fidivrs
fbld
dec
push
lret
push
dec
jge
xor
and
mov
inc
mov
les
jge
int3
and
test
sub
push
push
mov
and
daa
inc
cltd
add
sbb
sub
aad
xor
jno
push
sbb
outsb
push
cmpsb
or
xor
sbb
adc
cmp
js
std
dec
dec
xchg
sbb
xor
ja,pt
push
std
push
pop
add
fprem1
and
cmp
repz
adcb
push
dec
push
es
cmp
sarl
inc
aaa
mov
jb
mov
movsb
rcl
cmp
mov
xlat
push
and
sbb
jp
das
mov
shlb
pop
mov
cmp
lret
jecxz
in
fsubl
cmpsb
lcall
scas
pop
pop
out
mov
inc
push
push
shrb
push
test
movsb
mov
pushf
sbb
or
sbbl
jl
stos
lds
dec
mov
imul
mov
call
test
subb
rcrl
jne
cwtl
or
jg
mov
test
in
in
outsl
mov
jle
pop
cmp
and
insl
mov
jge
xchg
jmp
cmp
pushf
xorl
sub
les
ss
std
sub
mov
mov
jbe
shlb
cmp
popf
sbbl
xchg
pop
xchg
jne
lds
cmpsl
mov
mov
inc
out
mov
loop
pop
int
ret
cmpsl
sub
add
push
mov
pop
pop
test
mov
jecxz
out
dec
stos
mov
repnz
push
and
lret
sub
mov
sub
test
int
jb
shrl
out
dec
jge
call
xor
add
xor
jnp
popa
pop
adc
mov
cmp
inc
xchg
lods
and
mov
rcr
xchg
pusha
jbe
add
pop
mov
int
mov
sbb
inc
pop
mov
sub
fildll
adc
and
pop
cmp
mov
mov
ss
nop
or
jmp
in
ss
jle
jmp
in
cltd
adc
inc
push
bound
cwtl
xchg
pushf
dec
mov
fsubl
fstps
inc
xchg
xchg
in
sub
sbb
xchg
out
add
outsl
jae
pop
mov
pusha
inc
cmp
inc
jb
push
and
or
mov
iret
leave
pushl
negl
clc
sub
xor
mov
int
imul
pop
jecxz
sbb
movsb
popa
push
xor
ret
pop
push
and
jecxz
add
negl
out
inc
pop
je
addl
lods
test
push
add
out
push
dec
push
das
es
jne,pt
sti
shll
xchg
cltd
push
enter
ja
jo
int3
xlat
scas
repnz
repnz
and
xchg
mov
or
arpl
xchg
mov
cmp
xchg
cltd
cmp
push
lock
xlat
popf
movsl
push
mov
pop
fldl
or
lahf
js
cmc
pushf
inc
jo
movb
movsl
and
lds
jnp
mov
mov
rorl
mov
jge
pushf
push
out
iret
xchg
push
js
fldenv
dec
push
xor
call
mov
xchg
sbb
lret
lods
mov
or
fadd
xor
xor
sub
dec
xchg
mov
add
fs
sub
mov
scas
lods
pop
lea
add
scas
stos
sbb
insb
ret
out
cli
rorl
jb
xchg
xchg
cmpl
sub
mov
xor
xchg
ret
xchg
insb
pusha
jge
rorl
dec
enter
shrb
in
pop
lds
and
pop
add
popf
cs
aaa
loopne
mov
and
and
out
xchg
filds
call
scas
imul
fistpl
out
cmp
int
rcrl
leave
sbb
sbb
daa
sbb
adc
inc
xchg
fs
xor
je
shrl
and
cmp
xor
sub
xchg
push
xchg
enter
f2xm1
popf
fprem
cmp
and
or
aaa
fistpl
fnstcw
xchg
fldl
jae
jl
lods
or
cli
mov
xchg
push
sti
add
sbb
stos
pop
ret
ss
jmp
jne
xor
ljmp
cmp
out
push
outsl
js
dec
int
sbb
cmpsl
sub
adc
les
xchg
notl
xor
test
inc
add
mov
and
pop
out
in
fwait
and
and
and
pop
sub
cmp
jle
es
sbb
sahf
cld
sbb
std
inc
lahf
mov
add
dec
cmp
in
btl
aam
fisttpll
inc
cmc
jns
popa
xchg
mov
cmc
xor
inc
out
dec
xor
js
and
or
sarl
dec
fnsave
in
insl
lcall
popa
fnstsw
movsb
insl
xor
pop
jg
and
mov
cltd
cwtl
xchg
xor
test
mov
outsb
sbb
lods
call
mov
insl
inc
pop
int3
insb
cmc
push
les
mov
stos
push
sub
push
fwait
mov
pushf
out
and
sbb
ret
lea
push
lcall
push
lock
scas
mov
inc
das
ljmp
notl
jno
cld
insl
jle
mov
jecxz
jecxz
shrb
and
or
jp
int3
mov
shll
cmpsl
push
fbld
and
inc
and
dec
xchg
call
rorb
inc
add
adc
xchg
lea
mov
jle
mov
sbb
int
daa
add
repnz
adc
cmp
cmp
adc
nop
mov
sub
or
mov
push
outsb
mov
xchg
icebp
dec
mov
in
or
insl
mov
sub
mov
rcrb
pop
js
jne
mov
jg
pop
mov
or
lods
adc
cmpsl
jecxz
inc
lods
mov
shlb
fadd
movsl
cli
xchg
je
mov
pop
jne
push
stos
ret
ss
cmp
lea
test
pop
jge
inc
in
sub
dec
movsl
sbb
lret
add
fidivs
js
add
and
testl
mov
test
pop
daa
into
pop
cmp
sbb
filds
mov
dec
mov
call
jle
dec
icebp
jge
push
es
shlb
sub
pop
jp
nop
sbb
jae
shrl
sub
mov
pop
fnstcw
sub
mov
xor
outsb
and
mov
popf
dec
out
push
xchg
ret
push
sub
xchg
jp
es
jnp
hlt
pop
hlt
cmp
loope
sub
push
movsb
mov
pop
push
ljmp
mov
popa
imul
add
out
mov
xchg
stc
shll
xchg
mov
test
jecxz
loop
test
jo
lods
int
jp
pop
imul
add
and
push
addb
mov
push
cli
inc
cmpsl
jo
pusha
popf
scas
mov
xor
into
and
cwtl
inc
jns
int3
xor
sbb
ret
stc
lret
jo
rclb
jmp
adc
test
stc
mov
out
mov
or
out
lcall
dec
adc
vorpd
and
xchg
mov
mov
push
daa
outsl
inc
sub
cmp
jno
fdivrs
popf
loop
adc
jbe
or
pop
adc
xchg
inc
dec
jecxz
adc
mov
inc
fwait
push
push
jecxz
mov
sub
xor
out
mov
scas
les
lds
jb
sti
imul
inc
rol
inc
outsl
outsl
scas
pop
or
cmp
push
dec
xchg
mov
ss
testb
lods
push
cld
mov
ss
pusha
aas
and
leave
hlt
scas
test
mov
cmp
xchg
fnstenv
xor
rolb
cli
mov
mov
dec
sbb
fisubrs
repnz
sub
fldenv
cmp
push
adc
rclb
push
mov
hlt
or
rcll
cmc
jp
xor
inc
mov
es
add
pop
xlat
cli
push
lods
mov
scas
fsubrs
pop
push
push
xor
sub
dec
inc
mov
cmp
or
call
or
stos
pop
es
mov
fucomp
out
repnz
jg
xor
repnz
xchg
repz
mov
pop
pop
add
enter
sahf
inc
mov
jecxz
lahf
dec
and
mov
add
sub
mov
mov
inc
sbb
daa
insb
dec
movsb
inc
aad
xor
or
repz
loop
iret
ja
jns
pushf
dec
and
mov
mov
mov
sub
and
pop
sbb
adc
call
nop
seto
shr
es
repnz
jl
dec
push
nopl
orl
lods
imul
pushf
mov
jmp
mov
cmpsb
push
mov
popl
xchg
xorb
cmpsb
sub
push
cmp
xchg
push
fs
xchg
jbe
enter
jl
lods
int
jp
pop
out
out
mov
ja
xor
in
insl
push
pop
adc
cmc
cmp
mov
sub
add
xor
jge
mov
xorl
pop
and
mov
adc
push
ficomps
mov
jae
jb
pop
mov
jle
popw
pop
movsb
cmpsb
ss
mov
movsl
and
por
jmp
aad
pop
jg
in
nop
clc
sahf
lods
sahf
daa
test
dec
sarl
aas
and
andl
sti
adc
jnp
pop
aam
js
je
imul
sar
or
jno
mov
pop
mov
sbb
mov
push
jo
lret
cmpsl
scas
cli
fistps
mov
outsb
xchg
out
pushl
xorl
xchg
push
sbb
push
fsubrl
test
inc
mov
subl
inc
push
fnstcw
mov
push
rsm
mov
stos
jbe
and
inc
lock
add
jg
movsb
andl
xchg
iret
imul
dec
mov
or
mov
push
addl
stos
cltd
clc
fdivrl
dec
jnp
movsl
add
push
or
jp
test
push
gs
imul
lds
in
std
xor
ret
pop
push
js
popf
pop
push
add
xlat
push
xor
ljmp
cli
mov
call
iret
or
xchg
xor
lds
and
push
cs
sbb
add
mov
jnp
mov
jmp
cmc
and
js
scas
loop
adc
jb
les
and
pop
sbb
std
mov
and
test
fstpl
and
pop
rcrl
inc
xorl
or
mov
xchg
sub
lea
jnp
les
leave
and
dec
pop
jno
sbb
adc
cmp
lock
mov
lock
push
fldt
mov
mov
iret
push
in
aad
dec
inc
sbb
lahf
lods
les
sub
out
loope
and
popa
mov
xchg
divb
push
xor
sahf
movsb
mov
xlat
aas
ret
das
ret
mov
jnp
push
fnsave
xchg
sbb
mov
js
out
gs
aas
jg
sbb
scas
push
repz
xchg
xchg
mov
dec
mov
ret
enter
inc
inc
xchg
jne
sbbb
repnz
loop
in
fnstenv
in
dec
jecxz
notb
cld
mov
pop
inc
mov
and
shll
mov
in
add
and
mov
fsubs
inc
js
idiv
jp
stc
sarl
cmpsl
xchg
sub
dec
fwait
mov
add
sub
xchg
popa
lcall
rorb
pop
inc
and
in
mov
in
cmp
or
jnp
mov
push
mov
loop
jp
in
mov
ficompl
mov
xchg
aas
pushl
push
xor
push
cmp
push
ret
pop
gs
in
out
cmpsb
lods
inc
add
iret
imul
decb
mov
shll
leave
sbb
and
scas
cmpsb
push
push
xor
pop
and
addl
in
sub
aaa
xchg
test
leave
cltd
insb
mov
push
cs
das
aas
adc
ja
xchg
popf
ds
sub
mov
fsub
je
sbb
mov
fcompl
int3
and
mov
push
mov
pop
or
lcall
push
sub
mov
fstp
adc
ret
fadds
sbb
add
daa
jmp
shlb
xor
pop
ret
stos
icebp
xchg
add
fsub
jne
nop
jbe
js
rcll
dec
mov
out
pop
push
aam
add
hlt
sub
mov
xchg
inc
aad
sbbb
cwtl
mov
push
ret
mov
or
cmp
mov
popa
repz
insb
into
push
jl
pop
popf
mov
add
push
dec
and
push
add
mov
imul
xlat
dec
stc
addr16
inc
pusha
pop
cmp
daa
outsl
jge
scas
stos
mov
insb
cmpsb
cwtl
xlat
cmpsl
dec
shl
push
pushf
sahf
stc
stc
adc
test
test
mov
or
add
sbb
push
movsb
jnp
iret
dec
ret
inc
test
jecxz
jne
scas
sub
xchg
std
lods
rolb
das
or
dec
xchg
mov
fldt
cmpsb
and
jae
push
scas
xchg
in
idiv
mov
stos
lret
jae
adc
into
jp
test
insb
testl
push
gs
out
in
call
adc
and
adc
inc
xchg
lods
je
sub
push
add
loop
out
outsb
xor
add
sbb
xorb
icebp
and
and
fldt
adc
addr16
aaa
out
insb
add
stos
push
sbb
xchg
xor
sbb
das
les
icebp
stos
dec
movb
hlt
dec
xchg
sbb
call
and
pop
adc
nop
je
pop
aas
fcoml
lock
pop
sub
mov
push
pop
pusha
xchg
lods
or
imul
xor
in
das
aad
xor
push
das
sbb
xchg
cld
dec
scas
and
and
out
mov
pop
sbb
mov
xor
dec
cltd
inc
sti
sarb
aas
and
xor
mov
lret
adc
ret
sub
inc
rcr
jecxz
cmp
lock
test
dec
ret
dec
add
les
push
add
push
fs
mov
mov
aad
enter
push
negb
pop
jns
pop
dec
daa
ljmp
jg
aad
xchg
cmp
repnz
dec
cmc
adc
jle
loope
xchg
xchg
pop
out
stos
adc
cltd
dec
push
adc
and
and
enter
cmp
inc
pop
and
pop
jmp
outsb
and
sub
stos
bound
mov
testb
fcompl
cmpsb
mov
gs
pop
sub
enter
add
cmpsl
out
bound
sub
call
push
cmpb
sbb
test
insb
ljmp
fcoml
cld
sub
push
mov
lock
cltd
xchg
pushf
aad
in
xchg
xchg
jge
stc
dec
fcomp
popa
adc
call
icebp
mov
insb
loop
add
lret
jae
lock
or
outsb
scas
inc
dec
rolb
mov
cmc
mov
pusha
mov
cmp
add
or
or
fcoml
into
mov
dec
mov
out
mov
fcmovnbe
test
lahf
into
inc
adc
lock
pop
mov
mov
gs
fdivl
rep
loop
adc
test
pop
inc
sbb
daa
jl
stc
sub
push
outsb
out
f2xm1
dec
out
out
pop
adc
pop
fiadds
mov
xchg
orl
je
cwtl
std
jo
inc
push
mov
out
xor
ficoml
and
pop
jnp
inc
test
sbb
add
fcompl
js
add
cmp
push
stc
push
testl
repnz
sub
in
cmp
pop
out
into
and
xchg
aaa
push
mov
flds
cmp
jae
push
jb
leave
aas
mov
sub
fsubs
push
xchg
repz
xchg
roll
sti
add
xor
movsb
out
out
in
mov
stos
mov
scas
imul
cmpsl
leave
lea
dec
inc
ja
add
test
fistpl
xor
and
push
loope
in
mov
xor
repnz
xchg
leave
and
jae
loopne
mov
inc
sbb
fwait
or
add
lods
mov
xchg
jns
cmp
xchg
add
jno
or
loop
ret
pop
push
gs
jns
add
test
mov
lcall
adc
mov
or
inc
fiaddl
xor
add
mov
jb
and
add
mov
fcoml
mov
pop
cmp
mov
daa
dec
fmull
add
in
or
test
pop
and
fcomi
jnp
mov
and
inc
push
adc
pop
dec
lret
dec
inc
add
pop
daa
adc
imul
jnp
in
adc
mov
cmpl
movsl
jb
stos
xlat
lcall
int
mov
dec
lcall
je
in
inc
mov
mov
std
pop
daa
mov
jecxz
adc
xor
mov
adc
int
shlb
pop
or
nop
stc
outsl
das
test
aaa
inc
inc
roll
and
scas
jbe
in
pop
pop
punpckhdq
mov
out
inc
gs
mov
lods
cli
fcomps
pop
cmc
push
lret
dec
jecxz
mov
cmp
mov
incb
push
push
mov
lea
rcll
idivl
or
outsb
jle
mov
or
cmpsb
mov
push
push
inc
aad
and
xor
imul
mov
mov
sbb
aas
out
hlt
cmp
dec
mov
push
mov
adc
ret
js
call
les
outsl
pop
sbb
jnp,pt
sub
aad
jmp
cld
dec
popl
push
mov
mov
out
loope
or
adc
out
jno
and
das
jecxz
pop
test
dec
mov
mov
mov
pop
and
dec
xchg
dec
addr16
lds
mov
and
mov
outsb
rcll
mov
pop
loope
nop
aad
push
sub
mov
and
dec
mov
xchg
leave
mov
push
inc
mov
sub
pop
mov
sub
sub
shl
lds
sbb
cmp
mov
sbb
mov
jnp
mov
mov
and
rorb
mov
sbb
mov
movb
xor
cmp
cmpb
mov
mov
rcl
aas
fistpll
mov
mov
and
in
adc
je
je
xor
xor
in
push
pop
lods
push
xor
add
cltd
add
out
movsb
cli
xchg
ss
pop
mov
jle
mov
xchg
pop
push
cmp
jle
cs
mull
add
repz
pop
lods
adc
gs
fidivrl
and
movaps
add
adcb
and
fadd
push
xor
fsts
pop
mov
and
adc
xchg
sub
push
jns
jo
aas
pop
or
test
decb
dec
mov
popf
iret
stos
imul
icebp
cmp
mov
gs
loopne
jge
leave
xor
clc
sub
push
or
cmp
loopne
cld
ficoms
push
out
daa
ret
pop
pop
jg
clc
test
es
dec
and
enter
stc
popf
cmp
adc
popf
dec
enter
or
sub
les
push
push
jns
shlb
popa
push
cs
pop
inc
xchg
cltd
rorb
sub
inc
loop
stc
inc
push
jp
adc
stc
xor
sub
jge
push
add
jmp
pop
outsl
repz
movb
add
repnz
and
pusha
aas
call
frstor
mov
sahf
out
call
mov
xor
inc
scas
in
dec
add
jns
adc
push
inc
push
jne
push
mov
push
movsb
push
rorl
into
aam
jecxz
jbe
aad
test
int
jecxz
jns
adc
lcall
pop
jg
sbb
in
nop
in
aas
int3
cld
inc
sbb
mov
push
xor
xchg
popf
xchg
jo
jb
xor
popf
push
mov
int
xchg
inc
push
int
imul
pop
pop
inc
pop
add
icebp
fisubl
sub
popa
jg
scas
fcomps
adc
cmp
jo
push
mov
aam
in
add
mov
or
jp
cmp
subl
cmc
shlb
test
mov
and
fnop
dec
xchg
ljmp
shr
xchg
push
out
std
jmp
push
push
mov
inc
in
jmp
or
pop
pop
fcomps
cmp
mov
rep
lahf
out
sbb
mov
icebp
stos
or
out
jno
loope
sbb
mov
inc
mov
popf
fistl
xor
scas
rolb
sub
loop
data16
or
xchg
jmp
fnsave
out
or
aaa
push
jno
dec
and
xchg
mov
mov
mov
inc
push
pop
mov
out
cmp
loopne
xor
add
inc
fwait
add
jecxz
je
scas
push
xor
mov
subl
popa
sub
aad
mov
pop
jnp
xchg
sbb
xor
cmp
dec
pop
cli
jbe
cmp
std
push
add
pop
push
ror
cld
cli
sbb
and
add
int
dec
rol
repnz
xchg
jne
cmp
adc
inc
les
pop
jb
xchg
or
sarb
fmull
insl
jl
dec
push
cmp
lcall
xchg
shr
mov
out
inc
int
lods
mov
lret
lret
and
sahf
lcall
cs
in
lods
mov
imul
fs
mov
pushf
pushf
insl
cli
push
ror
push
movsb
or
out
aam
mov
pop
push
or
add
add
stos
popf
popf
out
xchg
cmp
repz
mull
dec
mov
cltd
jmp
std
or
sti
dec
mov
lcall
test
pop
mov
into
repnz
lock
aam
out
ljmp
adc
sub
mov
inc
test
es
mov
pop
and
lret
std
outsb
mov
lcall
cltd
xlat
roll
cmp
and
dec
inc
call
cmp
sbb
cmp
pop
cmpsl
stos
mov
in
in
pop
xchg
sarl
bound
jg
jne
jle
repz
push
out
jmp
cltd
scas
xor
xor
icebp
pushf
lock
jmp
fidivrs
pop
mov
fsts
inc
lds
jl
mov
lahf
jp,pt
pop
negb
mov
pusha
xchg
sbb
rorb
movsb
push
divl
bound
enter
leave
or
daa
in
mov
add
hlt
push
jg
jg
or
test
push
test
mov
cmp
jmp
push
outsb
je
add
mov
mov
divb
jp
dec
mov
xor
iret
sahf
and
push
dec
gs
insl
test
je
cmp
pusha
lret
dec
fs
pusha
in
les
ret
enter
xor
xor
arpl
push
mov
rcrl
gs
xor
adc
aas
lock
and
js
pop
out
rclb
dec
mov
push
daa
push
mov
jecxz
movsl
out
mov
xchg
stc
aaa
mov
jmp
pop
xchg
int
mov
jo
fdivr
inc
js
mov
mulb
sub
in
and
addb
cwtl
mov
popa
cmp
les
stc
push
nop
inc
push
test
or
mov
in
or
imul
movsb
xor
jb
gs
ret
sbb
int
adc
daa
mov
add
gs
test
fsubrp
mov
mov
mov
cli
push
add
sti
jle
fmull
outsl
insl
scas
jle
xor
or
sub
or
adc
mov
pop
dec
mov
lea
adc
dec
jg
lret
rclb
push
cmp
cmp
mov
dec
lcall
mov
jmp
adc
es
xor
pop
cli
xor
and
mov
lcall
hlt
pop
mov
icebp
xchg
lock
mov
call
dec
movsb
xchg
cmc
inc
les
add
cmp
mov
mov
cmc
lret
cltd
jl
jge
popa
sbbl
xchg
xor
add
sahf
xor
das
and
jbe
xor
loope
adc
xor
int3
push
ss
xor
inc
enter
mov
and
sbb
and
cltd
push
into
inc
and
icebp
fnstcw
rorb
ss
rorl
nop
jns
dec
hlt
out
pusha
dec
rcll
jp
mov
aam
mov
pop
loopne
pop
popf
xor
pop
mov
outsb
sub
inc
cmpsl
nop
ss
loope
add
testb
cmpsb
xlat
mov
daa
bound
nop
xor
loope
data16
add
shlb
rcrl
fsubrl
push
movsl
xchg
rcl
roll
mov
rcll
shlb
andb
or
dec
loope
push
test
cwtl
fs
mov
inc
and
in
rcrl
pop
push
sub
in
lret
aam
test
rcll
sahf
push
and
pop
pusha
data16
frstor
data16
mov
hlt
push
aad
push
jmp
mov
out
aaa
lret
je
or
cld
popf
loop
and
andl
sub
adc
jb
xor
mov
aam
hlt
mov
neg
in
popf
int
push
idivb
mov
dec
push
sub
sbb
testl
xor
fsubp
mov
cs
jmp
fs
adc
dec
sub
and
int
inc
fisubl
ret
xor
icebp
or
pop
push
cmp
xor
jmp
mov
test
clc
xor
add
js
out
jmp
scas
es
sahf
xchg
pop
cmp
leave
pop
push
or
stos
repnz
mov
and
jnp
dec
loop
cmp
sub
sbb
or
imul
and
jg
inc
in
iret
jno
adc
or
cmpsl
rorl
rorb
xor
fcmovnu
xchg
iret
loope
addr16
cmpsl
rclb
gs
dec
in
cmpsl
lcall
fs
repz
xchg
push
cwtl
shrb
daa
ss
cmp
in
xchg
addb
int3
loopne
dec
mov
push
jecxz
jne
push
sub
negl
ds
cmovae
jl
mov
ror
xor
es
push
out
push
outsb
pop
mov
sub
loop
jmp
xchg
fsts
inc
mov
mov
sbb
mov
mov
adc
cld
out
movl
xor
pop
jno
ret
mov
cmp
push
lods
xor
aam
pop
cs
pop
jp
iret
out
lds
mov
mov
pop
movsl
and
sub
sbb
or
test
mov
scas
sbb
insl
jle
add
lods
pop
pop
aad
nop
loope,pt
loop
pop
repz
pop
jae
aam
xchg
fwait
xchg
push
mov
aas
mov
stos
inc
roll
fcmovb
leave
inc
or
ss
in
or
movsb
push
pusha
push
push
cmc
sbb
add
fcomps
push
or
sar
sub
mov
outsb
sbb
fists
xor
jg
shrl
imul
fldenv
dec
adc
or
mov
or
ljmp
inc
aad
mov
mov
out
mov
aad
jecxz
sahf
sub
cwtl
pop
jmp
lods
mov
shlb
push
loope
cwtl
or
scas
arpl
mov
cmp
negb
cli
add
xchg
cltd
in
sbb
popf
xchg
cmp
aad
jecxz
fcmovbe
int3
loopne
mov
sbb
arpl
outsl
lods
dec
mov
push
aas
lods
std
adc
fidivl
fcmovb
fistpll
add
xchg
adc
cmp
cmpsb
stos
push
cmpsl
nop
lcall
or
mov
ret
or
cmc
xlat
jbe
test
cmp
aam
pop
adc
mov
inc
fiaddl
inc
nop
repz
mov
sbb
stos
negb
and
stos
ss
mov
popl
jno
push
xor
ret
movsl
xchg
clc
mov
outsl
mov
adc
xchg
push
mov
subb
pop
add
aaa
jmp
mov
mov
in
sbb
imul
jae
mov
jg
inc
mov
mov
xor
push
lds
jns
je
dec
out
pushf
adc
imul
rcrb
pop
insl
fcmovnb
fnstcw
jo
push
add
imul
and
push
loope
insl
push
imul
cltd
or
stos
stos
pop
cltd
and
or
pop
add
shrl
shlb
addr16
adc
fbld
jmp
aad
xchg
ja
sub
add
dec
dec
test
dec
leave
pushf
je
ficompl
pop
sbb
cli
and
adc
outsb
cli
or
imul
pop
sbb
mov
in
jae
mov
add
adc
or
sbb
iret
or
and
pusha
inc
sti
adcb
push
push
jmp
dec
notl
std
lea
repnz
insb
and
add
push
mov
fcompl
mov
dec
jbe
stc
xchg
ficompl
or
bound
and
in
outsb
addr16
jbe
xchg
or
dec
fimuls
cmpb
sar
and
xorb
clc
mov
mov
mov
ret
jns
add
and
xlat
adc
mov
or
outsl
xchg
das
jo
sarl
lock
scas
cld
shl
arpl
mull
ret
addr16
jg
fcomp
ss
incb
adc
mulb
ror
outsl
jne
pop
fsubl
jns
pushf
cwtl
arpl
and
mov
in
xor
out
xor
shlb
aad
push
fsubp
notl
mov
pushf
adc
stc
dec
cltd
imul
adc
sub
jl
sbb
fidivl
pop
aaa
out
and
mov
pop
pushl
xor
push
xlat
xor
dec
push
push
mov
xor
rcrb
repnz
dec
push
jno
pop
daa
sbb
push
push
jle
jbe
test
mov
fadds
scas
sub
insb
sahf
addr16
xchg
pop
mov
sub
add
xchg
aaa
xchg
xchg
pop
ja
push
in
and
jmp
int3
repnz
sbb
mov
inc
prefetchnta
cmpsb
inc
inc
mov
lds
in
xor
outsb
inc
or
gs
fcompl
and
addr16
lcall
outsb
or
stc
dec
mov
pop
jae
pop
xchg
pop
addl
sbbl
daa
mov
or
mov
dec
mov
stos
nop
fnstsw
xchg
into
iret
push
adc
daa
sub
insb
dec
push
adc
add
lcall
push
push
cli
add
pop
inc
push
cmpsb
sbb
sbb
xor
jl
xchg
in
mov
xchg
cmpsb
icebp
iret
pushf
push
adc
inc
cmpsb
mov
fucomi
xor
test
fnstenv
mov
sbb
scas
or
cs
mov
mov
iret
call
test
mov
mov
fs
cs
addr16
int
out
xor
and
push
imulb
push
adc
mov
cmp
sub
mov
xor
jecxz
ret
pop
clc
or
mov
addl
insl
mov
pop
add
data16
outsb
or
inc
cmpsb
je
aam
pusha
jl
scas
xchg
in
sti
xlat
pop
cmpsl
mov
mov
orl
test
and
lahf
or
ffreep
dec
push
push
mov
ss
xor
sub
adc
xchg
iret
movsb
push
push
hlt
movsl
mov
js
arpl
inc
pushf
xor
popf
adc
mov
mov
push
pushf
bound
cmpsl
or
aas
adc
sub
xchg
fsts
test
inc
xchg
ficoms
mov
js
push
jbe
mov
cmp
clc
and
repz
das
bound
in
dec
mov
push
popa
add
movsb
idivl
xchg
mov
int3
cmp
xchg
and
mov
sbb
outsb
xchg
fisubrl
gs
mov
sbb
mov
test
pushf
mov
sbb
mov
mov
std
call
dec
mov
in
adc
cli
stos
xor
jns
mov
ret
jno
mov
mov
pop
sbb
jmp
or
or
cwtl
aam
out
sub
outsb
mov
repnz
xor
sbb
push
jae
popa
pop
fs
sahf
jne,pt
dec
imul
push
xchg
dec
xor
in
ret
xchg
mov
xlat
mov
loop
out
fidivl
add
pop
lahf
ds
iret
fcoml
add
mov
fucomip
stos
cmp
shrl
rcll
aas
jl
xor
mov
push
cld
jne
fcoms
xchg
xchg
ja
add
xchg
jae
pop
xchg
rcll
inc
adc
dec
xchg
pop
mulb
and
mov
out
into
mov
xor
stc
arpl
fcom
cmpsb
mov
dec
push
jno
sbb
ficoml
xor
nop
push
mov
subb
pop
mov
rcr
add
ret
dec
cmpsl
scas
mov
jg
dec
push
adc
cmpl
cmp
jne
push
ljmp
adc
fimull
repnz
mov
int
out
andps
and
cmp
xor
and
cmp
fstpl
ja
xor
loope
je
loopne
xchg
aaa
or
adc
mov
rcrb
test
push
es
add
jecxz
sti
aaa
lret
and
dec
push
mov
xchg
insl
or
push
cld
inc
lahf
popa
mov
stos
popa
ja
cmp
loope
pop
pop
dec
es
mov
stos
or
cmp
rorl
ret
add
sbb
sub
lret
xor
mov
aad
mov
pop
xorb
mov
cs
ja
iret
mov
lret
int3
push
dec
mov
and
jp
cmc
or
or
mov
mov
jl
pop
xchg
mov
rclb
mov
xor
sbb
out
ljmp
mov
addr16
ds
sub
pusha
push
shr
jnp
pop
lcall
adc
pushf
data16
cli
add
imul
adc
mov
mov
lock
sub
insl
decb
mov
or
hlt
cmp
mov
and
inc
sub
pop
lds
jge
lock
sub
arpl
fsubrl
fisubl
leave
lcall
adcl
sbbb
push
jmp
scas
imul
bound
cmp
cs
mov
fidivl
in
mov
addr16
inc
lods
jo
divb
inc
scas
addl
lock
repz
cmp
outsl
nop
lods
or
rclb
push
dec
ljmp
sub
incb
pop
dec
xlat
push
mov
pushf
loopne
inc
cmpsb
mov
push
call
add
sbb
nop
fsubrs
test
sbb
push
cmp
js
outsl
lods
int
int3
adc
cli
jns
or
mov
jbe
mov
int3
sbb
cld
cs
pop
stos
adc
or
sbb
stos
xchg
pop
sub
jl
popf
in
inc
lahf
push
sbb
fcomip
daa
rorl
mov
add
push
js
adc
push
dec
mov
xchg
pusha
or
xchg
cmpsb
shrb
cmp
dec
scas
out
addr16
add
add
mov
adc
mov
dec
ds
shr
add
es
cs
push
rorl
inc
push
cmp
sbb
dec
jmp
rcrl
jns
push
adc
and
daa
popw
testl
in
inc
xor
sti
stos
das
mov
fs
add
add
into
leave
push
push
stc
pusha
push
mov
stmxcsr
cli
ss
adcb
mov
arpl
movsb
or
adc
lods
fwait
xor
push
ss
adc
das
das
jns
xor
je,pn
mov
ret
leave
movl
push
loopne
pop
fsubp
hlt
loope
jl
mov
out
ffreep
push
sub
sahf
inc
sub
popf
subb
scas
inc
mov
movsl
add
cmpb
out
dec
ja
pop
fsubp
call
cmp
imul
fwait
shrl
lods
pop
jl
xchg
add
pushf
pusha
mov
cwtl
imul
mov
ja
mov
jg
test
scas
daa
subl
jo
std
gs
push
push
push
test
xor
or
and
insb
mov
insb
sub
sbb
jp
xchg
jno
loopne
xor
mov
or
and
xchg
pcmpeqw
push
inc
mov
scas
xor
xchg
mov
ds
pop
orb
lods
jae
out
add
xor
cmp
adc
inc
push
outsl
mov
ret
xchg
lret
outsl
mov
add
xchg
sbbl
jecxz
mov
pop
and
cwtl
sti
hlt
out
out
repz
mov
pop
ja
mov
xor
js
and
stos
mov
cmpsl
mov
xchg
scas
fcompp
push
int3
loope
push
test
xor
xchg
sbb
int
or
and
das
jbe
std
adc
sub
test
adc
roll
push
flds
adc
sti
or
nop
repz
test
sbb
mov
jno
ret
add
and
ljmp
sub
outsl
notb
jno
sub
pop
je
mov
rol
pop
pop
fisubl
fwait
pushf
inc
repnz
stos
mov
cwtl
dec
inc
test
mov
sub
adc
lret
xchg
jp
pop
movl
aad
popa
and
and
bound
push
xchg
push
shll
xor
inc
and
cltd
pop
push
std
add
hlt
xchg
ja
sahf
bound
mov
jg
add
ja
mov
add
fists
dec
sarl
shrb
jae
ret
fstpl
inc
xor
sub
sbb
add
scas
aad
dec
jno
mov
mov
inc
jo
push
stos
pop
add
dec
xor
rol
and
push
mov
cli
shlb
mov
jg
cmp
fldt
sbb
sbb
insl
xor
clc
in
in
mov
push
js
sbb
push
inc
and
mov
movsl
mov
addr16
hlt
adc
repnz
outsb
or
mov
loope
mov
jge
xchg
lds
xor
inc
insl
test
imul
imul
and
mov
ss
out
add
lods
fistps
popa
popa
mov
data16
in
add
fnsave
xchg
push
and
cmp
sahf
adc
sbb
push
jne
rorl
sub
clc
inc
mov
insb
repnz
jbe
cmp
sbb
outsl
fsubp
cmp
pop
cld
mov
lods
jg
dec
cmp
adc
call
dec
cmp
add
xor
mov
add
inc
fstpl
add
loope
scas
jb
popw
pop
outsl
xchg
or
stos
adc
into
xor
jae
ret
sub
imul
xchg
shl
loopne
cmp
inc
testl
lods
cmp
divb
mov
mov
mov
repz
add
mov
ja
adc
js
mov
adc
adc
push
mov
jl
std
test
mov
fisubs
hlt
pop
xor
sub
out
push
jnp
and
mov
push
add
xchg
or
daa
mov
mov
cmp
jbe
in
sbb
cld
pop
or
lea
outsb
adc
lods
cmp
sahf
pop
jb
jg,pt
jp
call
stos
xlat
cwtl
mov
and
clc
test
jecxz
dec
das
xchg
lods
adc
xor
mov
jl
sbb
push
popf
inc
popf
cwtl
mov
pop
fldenv
loop
in
pop
push
add
mov
repnz
mov
test
dec
adc
or
or
popa
js
xchg
mov
push
xchg
inc
or
gs
clc
sbb
dec
cmp
xchg
inc
out
cmp
mov
sbb
cmp
aas
pop
cmp
jmp
scas
pop
sub
dec
push
pop
rolb
xchg
sbb
mov
sub
pushf
lock
xor
sub
jge
mov
es
mov
jo
fisubs
sub
iret
push
fdivl
pop
jb
pop
inc
cmc
pop
or
loopne
inc
mov
cmp
dec
or
jmp
push
jg
arpl
jb
dec
das
test
mov
xor
loope
jg
inc
mov
std
iret
push
mov
lock
push
imul
mov
pop
clc
pop
lock
push
stos
arpl
push
mov
mov
shll
lds
mov
gs
inc
sahf
fcoml
inc
fs
push
sbbl
mov
sbb
sub
and
mov
add
sbb
xchg
sbb
aam
lcall
cmp
push
mov
or
dec
mov
xchg
out
xchg
fiadds
xchg
cmp
xor
mov
mov
sub
push
cli
ja
leave
jb
popf
lock
pop
mov
test
sbb
in
icebp
mov
mov
sub
in
lock
shlb
mov
mov
js
push
test
or
pop
jecxz
jne
dec
sti
fidivrs
jne
jbe
or
and
addr16
popf
fstpl
pop
push
loopne
iret
jecxz
dec
repnz
adc
dec
sub
je
cmp
cltd
inc
lret
jne
gs
jp
out
std
iret
lds
insl
sbb
fstps
lds
mov
jbe
xchg
sbb
sbb
mov
lods
xchg
cld
nop
dec
inc
outsb
into
push
pop
sbbb
mov
sub
dec
inc
push
nop
add
cmp
sub
aad
add
call
cmp
cmp
add
cmp
pop
andb
scas
or
aad
cmpsb
repz
push
fldt
dec
in
incl
xchg
imul
xor
jmp
push
enter
mov
mov
incl
xchg
adc
adcb
push
sti
in
cltd
dec
outsl
ja
sbb
inc
popf
mov
mov
repz
jp
repz
mov
xchg
lock
je
or
adc
xlat
xor
movsl
lahf
dec
dec
in
sbb
scas
pushf
xor
or
and
scas
popa
leave
push
daa
cmp
adc
inc
jle
out
push
mov
jae
fwait
push
push
loopne
inc
aam
in
idiv
and
add
push
dec
test
mov
pop
mov
xchg
jle
add
sbb
jns
xor
adcl
cs
rcrl
bound
imul
mov
int
shlb
mov
or
xchg
lret
das
and
lds
push
push
enter
ss
mov
jg
enter
stos
clc
mov
in
adc
lahf
add
rorl
mov
xchg
mov
cmp
and
add
ret
add
std
ret
push
fiadds
cmp
mov
popf
pop
jo
andl
outsl
push
scas
mov
cld
dec
ss
stos
sarl
insb
and
ja
mov
rorb
outsb
cmp
scas
sbb
notl
push
imul
pop
mov
adc
jmp
pop
mov
int
imul
and
inc
inc
andl
push
shll
push
mov
fisttps
ss
loopne
xor
xchg
test
dec
add
into
je
mov
test
inc
jge
outsl
shrl
iret
cld
movl
inc
ss
jo
jmp
mov
add
sub
fs
mov
adc
repz
jmp
xor
jmp
repnz
adc
mov
test
ret
pushf
inc
pop
fucomi
xchg
push
push
popl
div
dec
leave
jbe
bnd
cmc
cmp
dec
lret
pop
xor
fucom
cmp
push
lahf
or
mov
or
or
sub
cmc
fstps
push
push
daa
add
je
or
stos
adc
test
push
test
pop
into
lea
xor
jge
ret
xor
cmp
rclb
jl
sbb
push
scas
xchg
or
roll
sbb
adc
ss
pop
adc
aaa
cli
lea
push
leave
xchg
mov
loopne
mov
lret
into
ljmp
les
stos
outsb
ficoml
and
ja
ret
adc
mov
push
movsb
or
popa
jo
test
dec
cmc
push
adc
fmuls
andb
out
leave
insl
add
pop
push
jmp
mov
movsl
inc
xchg
mov
les
and
loope
ds
mov
dec
out
es
out
inc
sbb
pop
clc
bound
shr
mov
push
inc
mov
and
cmp
dec
fs
ja
mov
jb
adc
xchg
stos
outsl
loopne
ljmp
jbe
and
cld
mov
add
lcall
out
pop
inc
mov
xorl
and
inc
popa
mov
xor
cmc
jae
mov
call
or
xor
fmull
jl
arpl
in
shll
mov
push
and
sti
push
and
and
xchg
pop
cmp
pop
popf
shrb
adc
or
mov
negl
lods
fsubrp
xor
xchg
dec
in
jo
aam
mov
pop
pop
pop
stos
dec
xchg
jbe
outsl
xchg
bound
lods
daa
lea
pop
push
dec
loopne
xchg
push
popf
push
lock
xchg
mov
div
mov
loope
call
jl
inc
ja
je
sbb
fsubr
push
popf
nop
adc
hlt
inc
inc
jnp
cmp
cs
or
sahf
sarb
push
pop
xchg
jb
out
out
and
dec
cs
inc
cltd
out
push
stc
mov
and
and
sub
outsl
add
ds
cmp
or
cltd
lret
xor
mov
jbe
push
repnz
jae
add
leave
lcall
mov
pop
sub
add
mov
add
mov
mov
call
sti
orb
mov
push
xchg
add
mov
sbb
hlt
xorl
jb
xchg
sub
dec
lahf
jbe
test
outsl
dec
fwait
xchg
ret
out
cmp
bnd
adc
fdiv
jne
insb
test
pop
mov
or
imul
aaa
cmp
hlt
clc
test
jp
xchg
ljmp
mov
pop
jo
push
dec
div
pop
cmp
xchg
jb
mov
lds
push
clc
or
pop
jmp
test
inc
ljmp
fcmovbe
loope
mov
sahf
cs
mov
shlb
xlat
divb
jp
pushl
mov
insb
adc
and
dec
fcomp
xchg
sub
stos
sbb
fbstp
push
ljmp
call
lods
mov
xchg
shlb
sbb
cmpsb
ds
fidivrl
fisttpll
in
pop
mov
fwait
dec
fcompl
cmp
cltd
push
cmp
sub
les
inc
xchg
mov
into
jbe
add
lds
bound
mov
inc
shrl
enter
mov
movsb
mov
test
add
stos
cs
and
jb
ljmp
add
pop
pop
xor
mov
mov
loop
and
sub
aam
mov
mov
mov
js
mov
jns
dec
xor
xchg
faddl
sub
std
adc
pushf
jnp
pminub
cs
inc
cwtl
mov
mov
std
mov
cmp
fisubl
std
pop
repz
int3
sub
fwait
inc
daa
push
or
jle
xor
mov
push
jmp
sub
push
adc
loopne
mov
sub
sub
cmpsl
ja
mov
icebp
scas
fwait
jo
pop
aad
and
adc
xchg
pusha
or
push
push
pop
adc
outsb
mov
mov
ss
jae
mov
aas
push
add
inc
fs
sbb
hlt
or
lahf
shrb
jns
movsl
out
cmovb
mov
test
mov
ljmp
inc
aad
cmp
or
out
aaa
inc
movsl
cmp
rcl
and
jmp
mov
pop
mov
jmp
frstpm(287
add
adc
cmp
push
jo
push
in
or
inc
xor
es
mov
jp
cmc
push
add
mov
add
inc
push
aaa
insl
and
jnp
mov
les
pop
dec
dec
inc
imul
mov
pop
ret
mov
in
mov
push
int3
stos
aam
lods
sub
lods
mov
jae
push
pop
lods
mov
or
mov
lret
and
mov
shll
inc
mov
out
pop
mov
addr16
rclb
or
xor
outsb
and
das
shrl
sbb
call
jmp
mov
arpl
jecxz
shrb
xlat
or
mov
rclb
lea
sahf
mov
cmp
xor
xchg
push
lock
movsb
cmp
mov
daa
sbb
cwtl
pop
das
xchg
mov
lock
in
or
testb
test
jo
mov
adc
mov
mov
lcall
or
pop
loopne
mov
jmp
cltd
xor
dec
adc
or
xchg
mov
mov
or
and
push
mov
mov
mov
dec
mov
inc
mov
or
repnz
into
xor
fdivl
jb
enter
mov
lock
out
jmp
sbb
adc
jae
cmpsb
loopne
mov
out
or
cld
add
mov
sub
cmp
repnz
orb
lret
clc
pop
mov
stc
xchg
inc
dec
loope
scas
fbld
pop
dec
ret
icebp
leave
js
sbb
pop
insl
sub
pop
mov
dec
sbb
je
cwtl
out
cs
pop
inc
pop
mov
in
dec
add
push
rcrl
aaa
xor
sub
je
jge
into
jae
fnstcw
imul
mov
or
clc
in
lahf
cmp
push
gs
movsl
mov
into
insb
inc
movsb
sbb
scas
stc
mov
ret
xor
mov
call
inc
jnp
ret
jecxz
enter
popa
fnsave
sub
ret
sub
jl
add
jmp
das
mov
and
push
nop
xchg
dec
pusha
lock
jb
dec
cmc
loop
pushf
mov
fisubs
xor
pop
sub
es
push
cmp
mov
xor
mov
push
cmp
shufps
cmp
mov
cmc
aad
xor
add
out
fisttpl
faddl
or
call
mov
inc
jg
fsubr
jecxz
adc
fdivrs
testb
ds
mov
stc
insb
in
lods
setp
pusha
add
and
lahf
scas
push
test
and
int
xchg
sbb
xchg
stos
test
xor
xor
ja
insl
push
dec
or
lret
xor
icebp
addr16
in
mov
or
adc
addl
mov
cwtl
or
jp
mov
out
xor
push
pop
imul
mov
sbb
cld
call
daa
scas
dec
sbb
dec
icebp
xchg
or
sbb
arpl
push
dec
add
pop
es
rolb
adc
pusha
or
pop
stc
or
xchg
cwtl
mov
shll
mov
xchg
mov
insb
mov
push
mov
popf
stos
pop
mov
std
movsl
jbe
dec
mov
cwtl
pushf
sbb
jmp
lret
sub
scas
xor
nop
xor
nop
in
rcrb
mov
fmull
add
leave
outsb
mov
fsubl
adc
and
sub
decl
jl
pusha
cwtl
mov
lea
ficoml
inc
outsb
lods
jbe
jp
inc
es
or
ret
jmp
push
cmpsl
testl
loopne
ret
mov
push
adc
ret
fmul
rclb
mov
mov
add
xchg
rcrb
or
xor
mov
sbb
nop
xchg
or
xchg
daa
cltd
mov
loopne
fbstp
pop
pop
sub
dec
jb
int
sbb
lcall
sahf
push
dec
roll
xor
repz
jle
dec
xchg
sub
shll
clc
mov
loop
mov
push
mov
daa
bound
mov
inc
orb
jae
adc
adc
jmp
imul
pushf
pusha
jo
call
mov
xchg
push
frstor
pop
repz
jnp
adc
je
sub
sub
lea
push
pop
arpl
rorl
push
xor
ds
dec
fsubrl
push
sub
aad
push
inc
push
out
adc
pop
push
mov
cwtl
xchg
sub
sub
cmpsl
cmpsl
out
stos
mov
push
mov
mov
test
mov
int
sbb
in
test
sub
cmp
or
cmpl
outsb
push
mov
mov
push
lahf
sbb
cmp
dec
shll
ljmp
stos
cmp
pusha
push
jae
mov
jae
xor
adc
ret
cwtl
mov
nop
jl
stc
or
push
orl
scas
adc
cltd
gs
lret
into
xor
pop
lret
xchg
test
out
into
add
aaa
arpl
mov
push
pop
mov
add
fs
jo
xchg
mov
sbb
hlt
das
je
dec
int
jb
mov
inc
in
inc
jle
sbb
pop
loop
cld
test
shrl
sbb
mov
mov
stos
mov
pop
sbb
arpl
repz
sbbl
mov
sbb
and
outsb
mov
inc
mov
test
xor
dec
out
sub
lock
jae
add
loopne
sbb
sub
push
xchg
out
pop
push
imul
pusha
clc
cmpsl
jae
push
fsubrl
jne
or
sahf
negl
not
mov
inc
add
mov
addr16
mov
sbb
std
pop
fs
xchg
lret
inc
mov
mov
aaa
xlat
sti
jp
push
inc
xorb
mov
mov
nop
stos
or
or
insl
cmp
scas
add
push
daa
and
push
jb
inc
negl
pop
push
add
cs
sahf
je
mov
add
iret
lret
push
inc
and
out
loope
sbb
push
push
or
mov
popl
je
test
dec
shll
jno
push
xorl
and
adc
push
ret
inc
mov
jge
enter
gs
cs
sbb
mov
scas
push
pop
out
push
outsb
movsl
das
pop
xchg
call
test
add
dec
or
mov
cmp
inc
xor
lret
add
outsl
cltd
pop
or
ljmp
in
xchg
sbb
jge
xchg
mov
bound
mov
mov
ds
jae
mov
jae
inc
push
ljmp
mov
add
dec
cltd
sub
ret
call
and
in
adc
hlt
je
jl
dec
lock
mov
or
pop
loope
cld
fldcw
pop
subb
imul
outsb
outsl
stc
sahf
push
test
or
sub
jne
es
or
lods
jl
sbb
dec
xor
push
mov
std
jge
push
jns
inc
jb
iret
cmpsb
mov
cmp
push
mov
xor
sub
or
dec
cmc
fcomi
xchg
lret
fldenv
or
scas
xlat
insb
aam
pop
sbb
pop
insb
cwtl
rorl
cltd
adc
cmp
push
aam
dec
push
int3
cmpsb
imul
dec
dec
test
outsb
int3
pop
push
pop
xor
clc
mov
flds
xor
aam
add
test
cmp
adc
outsb
leave
inc
mov
shll
jmp
andb
sahf
rcrl
popf
or
pop
leave
aaa
leave
iret
and
scas
je
push
push
out
sub
scas
les
pop
cltd
cmp
repnz
stc
call
into
or
addr16
aam
mov
jae
cltd
or
push
mov
mov
out
popa
inc
or
call
and
mov
je
xchg
xchg
inc
or
and
ret
push
loop
out
dec
je
jl
add
add
xchg
jo
mov
sub
stos
dec
and
mov
xor
fisubrs
into
mov
adc
jp
ffree
jle
dec
xor
out
outsl
inc
or
mov
mov
jns
scas
in
and
aaa
cs
push
pop
or
je
push
stc
xorb
fmuls
gs
mov
arpl
jnp
push
mov
icebp
push
aad
imul
pop
icebp
sahf
mov
inc
cli
nop
sbb
jns
xor
popa
js
push
iret
mov
out
mov
jno
jb
xlat
pusha
testb
lahf
pop
dec
sbb
mov
cmp
inc
aaa
fbld
mov
out
cli
sarb
rorl
daa
das
jns
xchg
sahf
push
dec
in
sti
xchg
test
mov
enter
mov
arpl
rcr
lods
dec
cmp
pop
xorb
notb
aad
add
hlt
pop
or
mov
insb
movsb
jg
into
pop
out
insb
stc
out
mov
ds
lahf
mov
pop
mov
mov
in
mov
mov
test
into
push
pop
stos
or
dec
arpl
push
jle
sbb
in
push
mov
mov
sub
mov
lret
insb
sub
jl
aad
lods
jecxz
xchg
sub
lahf
pop
divb
or
lret
out
cmp
dec
sub
adc
sub
test
fstps
mov
or
mov
repz
push
enter
loope
lods
lahf
pop
imul
pushf
imul
cmpsl
push
fldl
add
ljmp
dec
outsl
and
jg
scas
pop
adc
jno
les
movups
add
inc
sbbl
lret
xchg
cld
aaa
out
aam
cld
ljmp
mov
cmpsb
out
push
add
jge
jb
lcall
dec
aam
jne
inc
out
imull
into
push
inc
or
inc
int3
lods
sahf
push
shrl
mov
sub
jmp
clc
popa
push
push
fs
and
cltd
ljmp
mov
lcall
cmpsb
sbb
test
jno
jle
pop
lret
sub
inc
mov
dec
pop
shll
push
mov
stos
add
push
aad
inc
fadd
push
push
sahf
push
insl
jge
mov
mov
loop
or
mov
insb
jb
xchg
add
ljmp
pop
push
gs
cmp
adc
mov
test
xor
mov
add
movsl
mov
pop
lret
sub
mov
pop
push
daa
xor
jp
push
lea
out
push
add
movsb
jbe
pop
mov
jmp
adc
push
or
arpl
mov
out
iret
stc
leave
stc
xor
inc
call
and
cmpsb
out
nop
cli
inc
xor
and
aad
popa
repnz
and
fisttpll
lods
mov
movsl
sbb
dec
lret
mov
jle
xchg
inc
pop
mov
push
aad
fstp
sbb
dec
jbe
in
aam
pop
fs
sbbb
outsb
movsl
mov
jae
scas
mov
jmp
mov
xchg
mov
inc
testl
or
cwtl
xor
cmpsl
and
cmpsb
aas
bound
dec
or
adcb
push
cld
arpl
pop
jg
imul
mov
lret
jecxz
jp
out
into
xor
insl
call
mov
fistpl
stos
and
dec
mov
jecxz
xchg
or
or
xchg
jns
adc
mov
negl
insb
xor
push
out
cli
shlb
je
adc
sub
popf
nop
fisubl
xchg
aaa
mov
hlt
sbb
and
sarl
pop
dec
shlb
jbe
rorb
inc
cs
and
jnp
mov
sbb
insl
adc
jno
push
cltd
jns
jne
mov
inc
out
lahf
aad
xchg
pop
lods
mov
or
mov
lods
fldenv
push
xchg
dec
jo
jmp
mov
insl
js
and
stos
addb
loope
sub
sub
jp
scas
bswap
fsts
dec
mov
pop
pushf
fwait
mov
push
scas
push
cmp
or
cmp
and
inc
dec
out
push
pop
jmp
mov
clc
xor
loop
dec
iret
adc
bound
and
lea
test
repnz
and
loop
dec
bound
loopne
cmpsl
sahf
arpl
iret
lds
popf
ja
mov
rcrb
mov
sbb
cwtl
inc
and
rcl
shll
dec
pop
sahf
js
or
pop
jge
lods
cmpsb
add
shlb
pop
add
incl
push
les
addb
jne
leave
mov
xchg
lea
iret
outsl
test
or
sbb
nop
pop
mov
mov
sbb
and
push
push
mov
mov
std
push
das
fisubrl
in
lds
add
inc
and
mov
test
dec
xchg
cmpsb
jae
sbb
sub
cmp
aas
cmp
rcrl
cmp
jb
xor
xor
shll
add
out
xor
add
pop
sbb
mov
mov
sbb
push
ljmp
add
push
movsl
loop
mov
lret
xchg
xchg
or
xchg
into
cmp
test
popa
andb
dec
sbb
enter
arpl
pop
fadds
lcall
push
or
movsb
in
rcrb
jb
mov
adc
sub
pop
enter
dec
jo
and
daa
fdivs
stos
cmp
cmp
push
inc
pop
je
sub
in
inc
mov
mov
hlt
out
cmp
fldln2
inc
or
jecxz
sbb
nop
repnz
mov
mov
and
inc
xor
mov
add
mov
push
mov
xchg
pop
mov
shrb
fwait
sbbl
subl
addb
fmull
mov
loop
movsl
hlt
sbb
hlt
add
mov
and
aaa
lcall
into
mov
test
out
aas
cwtl
pop
imul
pop
push
ror
outsl
repz
pop
iret
xor
dec
leave
dec
gs
push
mul
js
sarl
push
mov
in
push
push
xor
ljmp
sahf
adc
xchg
loopw
jl
inc
sahf
mov
pushf
add
pop
inc
cli
lcall
and
xchg
lock
gs
add
loopne
cmp
sub
mov
mov
inc
aaa
mov
loop
mov
xlat
mov
pusha
je
stos
orb
hlt
adc
in
in
scas
lods
mov
add
test
jo
mov
andl
mov
pop
push
pop
pop
mov
push
and
xor
scas
ret
push
inc
jmp
add
test
out
pop
and
push
mov
clc
mov
add
test
sub
mov
out
xor
and
dec
fcomi
add
leave
js
inc
pop
fdivs
push
clc
push
jmp
dec
aad
add
or
test
dec
inc
mov
out
scas
jge
cmpsl
pop
iret
push
cmp
xor
std
jae
sbb
cmp
mov
xchg
or
dec
stos
fimull
mov
out
push
cltd
insb
movsb
inc
fildll
fucomip
addr16
jne
mov
divb
iret
mov
popf
daa
mov
cmp
mov
stos
lret
jne
repnz
mov
stos
ss
jg
push
cs
dec
sub
push
xlat
lret
xchg
popa
and
cmp
cmp
stc
pop
adc
iret
adc
inc
sbb
dec
push
jae
call
daa
xchg
int
clc
fwait
add
out
pop
cmpsl
mov
ret
cmp
scas
arpl
ret
lahf
sub
sar
js
int
xchg
sbb
ja
movl
xchg
xlat
lcall
cwtl
jae
push
xor
dec
xchg
outsb
sbb
cmp
jp
push
mov
sbb
lahf
sub
loope
addr16
add
cwtl
outsb
mov
pop
xchg
aam
pop
adc
inc
fiaddl
out
jmp
mov
hlt
xlat
stc
add
mov
out
outsl
fwait
xchg
mov
rcrb
cld
pop
jmp
or
pop
subb
lods
addr16
jb
jbe
dec
push
jge
xor
dec
pop
test
or
adc
xor
jl
xor
push
pop
fldt
jl
pushf
icebp
icebp
int3
in
mov
mov
dec
jmp
pop
pop
fs
dec
pop
ds
stc
outsl
dec
cmp
dec
lahf
mov
sahf
sbb
clc
stos
and
sbb
mov
jge
cmp
cmp
mov
iret
mov
in
lret
mov
es
out
fstl
into
push
xchg
ret
clc
psubsb
pand
outsb
mov
sti
imul
sbb
jo
push
mov
into
mov
sub
mov
pop
pop
daa
je
or
xchg
mov
jl
fs
xor
add
adc
lahf
fs
pop
dec
jae
or
cmp
fxch
adc
out
lods
lar
sbb
and
xchg
inc
pop
sbb
dec
pop
je
ss
das
push
inc
push
inc
test
mov
stos
movsb
xchg
jecxz
outsb
lds
add
fsts
push
popf
mov
jge
xor
in
and
cmp
icebp
stc
pop
inc
test
leave
lea
scas
sbb
mov
sbbl
nop
imull
mov
ljmp
mov
popf
pop
cmp
ret
adc
mov
cmc
cwtl
push
and
fs
push
mov
mov
jno
outsl
or
push
push
test
jno
das
cmc
xchg
jl
sub
subb
sbb
aaa
dec
loope
fdivrs
test
jp
inc
dec
std
ljmp
add
pop
mov
negb
ret
lock
sub
in
push
outsb
push
andb
mov
popa
fcomps
add
push
xchg
inc
push
sbb
iret
jo
or
mov
adc
fld
sbb
pushf
xchg
xchg
inc
mov
jecxz
sub
or
stc
cmp
adc
insb
roll
aam
add
mov
aaa
int3
add
jnp
mov
xor
enter
dec
and
leave
data16
enter
push
insb
adc
sub
loope
in
push
and
addr16
cmpsb
test
and
cmp
mov
lcall
sahf
or
fadd
add
mov
or
or
iret
xchg
call
enter
push
add
call
loope
push
pop
mov
push
xchg
out
cmp
mov
and
scas
in
mov
shlb
mov
xor
xchg
cmp
inc
sub
out
inc
into
pop
sarl
and
ficoml
xor
outsl
pop
repnz
out
mov
dec
pop
dec
ret
incb
fnsave
out
jg
hlt
out
jbe
xor
jp
jmp
fnsave
int
mov
fldl
jns
jmp
inc
or
in
sub
pushf
cmp
movsb
adc
mov
inc
sub
dec
pop
lea
pop
enter
fsubp
jne
fimuls
push
adc
jecxz
stos
cltd
pop
dec
clc
jp
stc
push
cli
movsb
cmp
or
push
jge
mov
add
inc
imul
jbe
das
test
mov
jae
ljmp
cmp
sti
ret
enter
jp
aas
call
orl
mov
jp
in
lret
dec
in
push
jg
test
inc
pop
pop
and
push
dec
movsb
xchg
out
andb
sarl
xor
inc
jl
xchg
sbbb
xchg
sbb
mov
out
and
in
les
and
ljmp
xchg
adc
in
cli
add
out
push
add
xor
imul
add
sub
add
enter
dec
sarl
xchg
dec
xchg
insl
push
fsubrl
sub
add
cmpsl
test
movb
int3
and
jecxz
pop
mov
push
xchg
popf
jg
shrb
outsb
lret
pop
dec
es
sub
dec
xchg
push
nop
aas
ljmp
lds
addr16
jge
xor
inc
sbb
xchg
and
pusha
mov
ja
sub
mov
inc
das
push
sbb
jmp
testb
mov
je
sbb
cmp
dec
sub
test
jb
stos
mov
nop
ljmp
adc
push
ljmp
cld
cmpsl
fs
inc
lret
add
fdiv
leave
into
iret
shll
push
xlat
in
mov
mov
adc
out
lcall
rorb
shl
adc
dec
xchg
loop
lahf
mov
sub
xchg
jp
xor
int3
rcll
mov
xchg
xchg
xchg
mov
add
jl
pop
cmp
int
mov
pop
push
in
jge
fbstp
out
mov
in
or
movsb
or
xchg
popf
jns
outsb
and
inc
and
inc
sub
mov
movsl
outsl
ror
jp
sbb
nop
fiadds
xor
cwtl
mov
sbb
jns
outsb
sbb
jmp
pop
cmpsl
jbe
sub
mov
arpl
jle
ror
add
sbb
ss
loope
lret
pop
add
repz
pop
add
mov
inc
bound
lds
or
imul
test
jnp
test
sbb
lods
adc
clc
and
add
inc
ja
fildll
add
insb
cmp
pushf
mov
xor
in
outsb
outsl
mov
pushl
pop
xchg
int
push
iret
hlt
mull
shll
fbld
jge
fsubs
imul
cmp
mov
add
cmp
insb
and
repnz
cmpsl
cmp
arpl
adc
or
imul
in
cs
pop
add
mov
fnstsw
mov
mov
mov
mov
inc
jbe,pt
mov
ret
push
popf
out
mov
mov
mov
out
lock
jmp
jns
inc
mov
out
push
repnz
cs
push
in
xchg
jg
jecxz
aaa
sahf
mov
dec
pop
xor
jb
and
add
xchg
ja
xor
pop
adc
ljmp
or
jmp
inc
xlat
imul
push
ret
mov
sbb
add
aas
or
cmpl
sbb
and
add
ja
dec
in
push
stos
xchg
push
ds
in
imul
or
dec
push
pop
test
jne
mov
xor
jnp
out
and
adc
lds
or
cld
mov
rorb
sarb
stc
push
sahf
cmc
test
push
addl
or
in
sub
outsb
xchg
pop
pop
lcall
mov
pop
inc
inc
test
and
mov
sub
mov
and
sub
mov
cmp
ss
add
mov
sub
fadd
fildll
mov
out
inc
sub
pop
call
mov
inc
xor
gs
popa
inc
lods
outsb
or
mov
push
sub
and
push
out
dec
mov
in
lods
lcall
outsl
mov
and
stc
add
or
filds
push
cmp
adc
cmp
outsl
mov
stos
scas
xchg
push
or
add
int
ljmp
push
cmpsb
inc
mov
std
and
pop
add
cmpsb
inc
sbb
lods
dec
or
xchg
xchg
movsb
icebp
mov
cs
add
fcoms
std
js
dec
mov
cmp
add
cltd
imul
or
xchg
ds
ljmp
jge
add
rcrl
movsl
xlat
xor
lods
cmp
movsl
xor
sbb
fs
frstor
cwtl
rcrl
imul
inc
sbb
arpl
or
call
loop
js
mov
jne
int
js
pop
ret
xchg
repz
cmpl
enter
sub
pop
les
inc
into
jnp
cmp
dec
test
in
pop
scas
jmp
adc
sbb
pop
out
fsubs
mov
push
fimull
push
inc
fucomp
imul
sub
mov
addl
cmpsb
push
mov
lret
inc
adc
xor
or
and
hlt
mov
add
aad
popa
cmp
jno
outsl
dec
inc
jle
repz
stos
mov
pop
lea
fwait
jae
pop
ljmp
shlb
lret
rorl
jle,pn
inc
mov
pop
sub
add
neg
jp
xor
jne
inc
inc
pusha
jmp
xchg
or
sahf
lds
loop
je
imul
daa
jmp
outsl
sbb
insl
or
sbb
xor
mov
inc
push
dec
or
insl
ficomps
xchg
mov
rcll
stos
and
sbb
mov
aas
pop
repz
mov
sahf
cwtl
pop
ret
popa
loope
jo
jp
push
sbb
adc
cmpsl
dec
fidivrs
push
push
mov
dec
leave
add
adc
popa
es
mov
stos
das
xlat
xchg
cmp
mov
ficomps
cmp
cmp
mov
cmp
jno
ficoml
lea
movb
fildll
pushf
jl
cmc
mov
mov
add
cs
out
lods
fucomp
pop
xchg
xchg
jbe
fmul
and
fsubl
xorb
cmp
sub
mov
sub
int
jae
test
aas
outsb
ret
leave
jl
rclb
fistps
xor
inc
pushf
xchg
je
les
test
fistl
push
dec
fwait
clc
negl
ret
out
nop
cmpsl
jnp
or
pop
int3
dec
inc
mov
imul
dec
xor
aam
cmpl
pop
sti
ret
pop
push
mov
inc
jg
fstpt
repz
inc
xor
lods
pop
mov
cmp
or
stos
push
xor
jne
in
data16
cmc
dec
repnz
inc
fildll
decl
and
loopne
xchg
pop
jne
fwait
dec
sbb
mov
or
xchg
mov
fcmovnu
mov
sti
sub
idivb
aam
sub
and
arpl
pop
in
jbe
sub
test
test
int
add
xchg
andb
add
mov
pop
and
fsts
mov
insb
pop
mov
ja
xor
fsub
addr16
inc
cld
mov
out
mov
cltd
arpl
dec
add
jge
lock
push
test
inc
or
mov
into
jp
adc
popa
adc
mov
mov
movsb
es
in
mov
inc
clc
adc
test
and
repz
mov
and
dec
pusha
push
push
stos
hlt
xor
js
test
daa
test
jmp
jne
movsl
jg
sub
sbb
sub
cs
jmp
pop
xor
fwait
iret
sar
xchg
fldcw
loopne
stc
stos
imul
lcall
adc
jle
std
pop
xor
loope
gs
lcall
mov
jae
cmp
fistl
adc
andl
das
adc
cmp
adc
xor
repz
cmp
mov
jmp
enter
pop
xlat
dec
movsb
sti
cs
sub
inc
inc
stc
xor
push
les
xor
push
mov
cmp
ret
test
push
pushf
mov
popa
adcl
xlat
mov
push
nop
cltd
pop
fstpl
leave
cld
mov
add
dec
test
jo
adc
repz
cmpsb
std
sub
aam
xor
or
test
shll
cmpsl
ret
adc
pop
gs
mov
xor
xchg
sbb
hlt
int3
lcall
outsb
mov
jmp
ja
sub
shrb
sub
hlt
pop
xlat
xchg
cld
inc
mov
ds
mov
adc
lods
fnsave
cwtl
mov
mov
push
mov
xchg
shl
or
pop
dec
pop
add
pop
sub
das
mov
and
mov
arpl
aas
adc
dec
mov
inc
jbe
push
add
fwait
adc
cltd
std
mov
push
push
push
mov
imul
fcoml
mov
pusha
inc
inc
in
mov
lcall
inc
inc
mov
mov
pop
test
insb
xlat
xchg
into
cmpsb
andb
sbb
enter
mov
aad
sbb
pop
jle
lea
clc
out
xor
cmpb
mov
pop
xchg
adc
lds
push
fs
dec
or
jns
std
call
push
mov
out
mov
jmp
fwait
cmp
xchg
jmp
movsb
adcl
test
popf
mov
test
out
or
rcrb
jmp
or
inc
push
int3
ficoml
mov
lret
cld
xchg
xor
out
cmp
cltd
aam
cmc
mov
adcl
adc
icebp
pop
jp
movsb
xor
gs
push
mov
in
pop
lahf
inc
shrb
sbb
push
lods
popf
jmp
fmulp
insb
sbb
jmp
and
add
xor
mov
inc
push
add
fldl
cmc
push
ljmp
mov
adc
jp
or
pop
sub
xor
das
pop
lods
add
sbb
pop
jecxz
lock
pop
jns
out
mov
arpl
pop
xchg
std
adc
xor
jbe
hlt
cwtl
mov
inc
jle
jae
or
fs
or
xchg
inc
cmpl
bound
inc
les
mov
inc
mov
cmpsl
pop
cmc
stc
addr16
cs
cltd
aam
xchg
push
sub
rolb
pop
aam
movsb
xor
or
je
mov
js
ud2
xor
xrelease
xor
cmpsl
mov
xor
into
dec
leave
ror
incb
int3
jbe
sti
lds
fcoms
and
fwait
cld
test
sbb
repz
int
mov
fdivrs
mov
cmp
mov
lods
add
mov
rcrb
popa
xor
push
loop
jo
or
js
loopne
add
test
cld
dec
dec
dec
ret
out
xchg
xchg
sbb
loope
sub
es
cmp
cltd
mov
jp
ficoms
or
xchg
shll
fstl
push
ret
inc
iret
in
xor
test
in
out
jb
xchg
popf
xchg
rcl
iret
cmp
jo
les
movb
xor
adc
xchg
dec
mov
push
or
xchg
in
pop
adc
push
xchg
rcrb
xchg
xor
xchg
mov
scas
dec
repz
les
lds
clc
out
ffreep
fsubrs
inc
das
sub
push
mov
inc
add
xchg
clc
mov
aaa
arpl
arpl
ret
mov
cmp
inc
ret
fldt
jle
mov
sub
xor
pop
lods
and
js
inc
mov
jne
sbb
inc
xor
movsb
ds
test
xchg
fdivl
sbb
or
rcrl
mov
sbb
sbb
mov
ljmp
cmp
xor
adc
cmpb
add
int
xlat
add
stos
fwait
adc
xchg
insl
jge
inc
lea
add
add
orl
fwait
mov
push
mov
sbb
fstpt
hlt
cmp
fdivrs
jb
mov
xchg
movsl
ret
mov
or
jge
clc
mov
sti
test
or
cli
out
ret
mov
jne
sbb
mov
and
dec
xchg
mov
arpl
mov
push
push
cmp
stos
xchg
pop
sbb
imul
jno
push
test
pop
push
pop
lret
out
cmpsb
cltd
sub
mov
push
adc
lahf
cmc
hlt
inc
lea
jge
pop
add
pop
mov
mov
jo
add
test
fwait
sbbb
mov
cmp
test
adc
stos
xchg
insl
xchg
lret
inc
xchg
xor
mov
repnz
lcall
mov
in
mov
and
fmul
scas
dec
cmpsb
test
inc
mov
jns
fwait
test
mov
add
sub
mov
stc
push
lods
mov
popf
push
dec
mov
jmp
push
stos
lods
mov
push
mov
fs
rolb
imul
daa
insl
cmp
into
filds
mov
shlb
and
ja
test
dec
cs
out
pop
lock
lods
pop
lret
xlat
xchg
adc
clc
bound
mov
push
add
jne
testl
inc
jb
mov
mov
xchg
mov
sub
jmp
mov
das
into
sub
mov
das
push
and
nop
mov
mov
add
jae
xchg
out
lret
sub
xorl
lcall
xor
out
loope
rep
out
stos
inc
lock
popf
and
test
jnp
inc
cmpl
ss
popf
push
popf
sbb
or
cmp
pushf
mov
dec
jne
and
sti
sbb
leave
pop
add
or
push
jge
adc
xor
mov
add
cld
fnstcw
push
test
outsl
cmc
aas
add
cmp
clc
pminub
pop
or
fidivl
push
jl
js
mov
cmp
ds
call
inc
aad
aas
imul
xor
xchg
mov
mov
decb
jecxz
push
xchg
sti
test
xor
sub
lret
sbb
lahf
test
add
push
fadd
in
sbb
leave
sub
mov
adc
lock
and
cld
mov
ds
es
push
mov
jo
clc
sbb
sbb
fmuls
test
dec
inc
xor
xor
sub
iret
dec
hlt
ss
jns
pushf
cmp
push
ret
mov
pop
push
cmp
pushf
in
cs
dec
inc
push
sti
mov
mov
iret
hlt
pop
lds
push
push
int
int3
outsl
xor
mov
out
imul
mov
xchg
daa
or
test
les
into
arpl
mov
fstp
mov
sub
sbb
xchg
scas
out
cmp
and
or
cwtl
out
or
insl
in
ret
xchg
sbb
pop
sub
cwtl
mov
in
movsl
rolb
mov
mul
lods
jae
ljmp
movsb
lcall
shll
cmc
mov
imul
loope,pn
push
adc
icebp
jp
iret
pushf
clc
jb
movsb
or
mov
loop
imul
mov
icebp
fnstcw
pushf
aam
fstpt
sub
std
sahf
or
js
fiaddl
jg
nop
jp
addb
stos
dec
push
es
push
aad
pusha
in
scas
adc
es
sbb
fnstsw
es
add
pop
rorb
mov
popf
cmpsb
and
inc
repnz
jnp
mov
scas
inc
fxtract
adc
lods
xchg
adc
sub
subl
fidivl
jge
push
movsl
es
stos
movl
fucomip
mov
xchg
xchg
sub
cmc
popf
push
loop
sub
rcll
push
jns
daa
into
sbb
pop
jp
lret
aaa
andl
pop
lret
push
lret
xchg
push
lret
cwtl
lds
fs
imul
xchg
hlt
cmp
ret
pop
ror
cwtl
loopne
and
sahf
pop
outsl
cmpsb
xcrypt-cbc
cmpsl
adc
outsb
jl
aaa
and
imul
ret
lahf
inc
hlt
pop
xchg
mov
pop
add
push
cmp
adc
add
pusha
inc
xchg
adc
xor
mov
mov
inc
cmpsb
jl
mov
xor
sbb
dec
pop
jne
andb
xor
xorl
lret
adc
pop
into
sbb
hlt
lret
arpl
or
mov
jmp
add
xchg
xchg
aam
mov
mov
pop
inc
mov
ror
inc
add
dec
push
int3
daa
aad
pop
sub
dec
jge
mov
sbb
jae
fidivl
or
leave
and
push
mov
fidivl
mov
or
adc
mov
mov
cmp
lds
pusha
ficoml
mov
pop
mov
aaa
sub
and
and
js
in
sar
xchg
es
aaa
xor
dec
pop
dec
fnsave
or
ret
push
cmp
jmp
add
sub
aad
clc
push
sub
xor
mov
insb
lock
xchg
xchg
pop
outsl
cltd
mov
lock
pop
sarl
adc
push
or
fs
sahf
mov
aaa
push
test
lods
adc
dec
push
leave
fcompl
out
aaa
sub
popf
jns
jmp
test
sub
scas
xchg
aam
ss
push
jge
call
pop
inc
lods
dec
cmp
cmp
xor
repnz
jo
adcb
jg
push
fdivp
xchg
pop
or
xlat
cmp
mov
dec
xlat
xor
mov
test
pop
dec
xcrypt-ecb
cmpsl
pmulhuw
lods
or
pushf
orb
dec
dec
push
outsl
mov
fsubrs
add
inc
mov
mov
ffreep
pushf
jle
loope
inc
stos
lods
mov
mov
add
out
sbb
fistpll
mov
pop
push
je
mov
lret
aam
jmp
xlat
clc
dec
cmp
test
mov
out
inc
orl
cmpsb
push
rorl
imul
ror
je
mov
movsb
dec
inc
pop
cld
lret
jge
pop
inc
push
push
fstpl
ljmp
rol
add
dec
pop
test
shlb
outsb
mov
cli
mov
jp
mov
gs
outsl
test
imull
sahf
dec
ljmpw
out
mov
popf
ds
jne
loope
adc
dec
mov
ljmp
xlat
jecxz
mov
gs
xlat
test
mov
push
sub
fmul
cmc
movsl
mov
push
arpl
or
xor
lock
mov
imul
arpl
mov
out
leave
ficoml
mov
cli
inc
pop
push
dec
in
or
es
cmc
das
xor
int
shl
add
cmp
add
pop
jbe
lods
jmp
pop
or
add
jo
fnstenv
xchg
mov
pop
icebp
pusha
aad
call
sub
dec
cmp
cmp
es
je
das
dec
inc
std
pop
xchg
sti
lret
ja
add
lods
xchg
and
sarb
jle
jb
dec
or
cld
push
adc
mov
out
ja
gs
sub
mov
ljmp
inc
pop
and
arpl
int3
repnz
push
mov
daa
jb
mov
mov
push
lea
mov
push
pushf
addr16
cmp
jo
dec
dec
sbb
add
das
add
jnp
leave
jecxz
push
pop
add
int3
out
shr
push
lds
xchg
inc
scas
es
call
in
shlb
cltd
fcompl
enter
jbe
repz
outsl
sahf
aam
lock
sub
xor
fstpt
xchg
adc
in
jnp
les
pop
mov
test
std
and
popf
dec
mov
jge
and
push
call
cmp
rorb
mov
scas
pop
fsubrp
orl
xchg
cmp
imul
xlat
xor
lret
xchg
ret
scas
fs
xor
testb
loope
add
pop
cwtl
lea
mov
sti
mov
inc
inc
mov
or
push
imulb
sub
xchg
adc
popa
out
adc
xchg
dec
pop
cmpsl
jno,pt
sbb
or
sub
cs
stc
in
jb
inc
adc
fsts
push
inc
aam
aaa
mov
insb
cmc
jmp
sub
cmp
add
mov
lret
push
lods
data16
inc
add
mov
lea
fdivs
and
dec
push
adc
adc
pop
and
and
sub
sarl
dec
push
vmptrst
inc
leave
xor
ja
pop
pop
fldt
loopne
jb
and
ret
loop
out
and
sti
loopne
sbb
insb
and
lds
add
leave
xchg
daa
rorb
pop
int3
ret
jg
add
mov
jne
dec
ljmp
bound
fmuls
mov
push
fiadds
cmp
out
shlb
outsl
mov
or
ds
loope
push
lret
in
test
push
adc
mov
ljmp
cli
adc
inc
test
lahf
pop
aad
lock
pop
stos
cld
in
adc
pop
mov
loopne
test
jno
inc
out
sti
dec
mov
cmp
call
cltd
push
jbe
push
xor
popa
adc
sbb
xchg
push
sbb
cmp
adc
jo
scas
nop
stos
jno
inc
pushf
inc
stos
mov
out
cmpl
out
pop
push
mov
stos
sub
dec
and
sub
mov
fidivs
dec
jo
mov
and
nop
inc
add
mov
hlt
shll
std
add
movsb
stc
loope
xor
dec
xchg
jmp
out
out
mov
jp
or
push
rcll
iret
xchg
pop
fiadds
and
popa
repz
xlat
lods
sbb
loop
sub
push
cmc
adcl
mov
out
jb
lods
dec
xchg
fdivp
repz
push
aam
lea
jbe
xchg
xor
push
ret
in
fbld
cld
xor
lods
xchg
and
mov
sahf
outsb
aam
jno
mov
pop
iret
jp
sbb
sub
jge
out
add
push
xorl
outsl
outsb
inc
sahf
or
fdivr
sbb
leave
jbe
mov
xchg
mov
sahf
xor
push
pop
andl
xchg
int3
inc
aad
sub
jbe
into
mov
jge
inc
xchg
ret
test
cld
stos
hlt
lods
adc
fdivrs
repz
push
inc
mov
xor
jp
fcoml
inc
sbbb
out
mov
add
pop
imul
ja
jo
ja
imul
xlat
pop
dec
test
pop
popa
mov
sub
inc
mov
iret
in
ljmp
fwait
add
sub
repnz
push
sub
xchg
mov
icebp
mov
test
fs
test
push
jge
imul
push
sub
into
or
adc
xor
aaa
addr16
repz
clc
ljmp
out
adc
in
pop
rcrb
addr16
sbb
inc
and
inc
outsb
idivb
into
dec
sub
jbe
jno
sbb
fildl
jno
pop
cld
inc
repz
push
leave
adc
dec
push
bound
addr16
insb
lret
xchg
sub
and
cmpsb
mov
fwait
sub
xchg
cmpsb
insb
push
mov
movsb
inc
or
jo
mov
cmp
jb
js
push
sub
pushf
cld
fdivrl
jp
push
mov
in
nop
repnz
mov
loop
rclb
adc
fwait
dec
je
adcl
add
sbb
dec
cmp
cmp
inc
xlat
push
daa
sbb
loope
cmp
cli
and
mov
cmp
es
mov
fisttpl
adc
iret
adc
in
pop
addl
fwait
fs
dec
ret
in
cmp
adcb
imul
cmp
mov
xchg
mov
sbbl
sub
mov
in
pop
xor
push
out
xchg
jl
fnstsw
or
aam
lods
hlt
ret
out
sub
jo
xlat
sbb
mov
pop
mov
rclb
ret
call
cmpsb
inc
lret
mov
pop
push
leave
or
pop
jae
jle
cmpsl
sub
scas
jnp
inc
xchg
mov
fdivl
add
mov
cmc
popf
push
hlt
sar
in
add
sub
mov
shl
add
ja
sub
dec
or
sub
or
sbb
rorb
fs
das
fstl
std
pop
adc
lock
fsubl
ret
sbb
and
fstps
loopne
ljmpw
test
mov
pop
cmpsl
out
pop
inc
hlt
das
insb
mov
inc
int
xor
movsb
out
data16
cs
sub
fdivp
aas
mov
lret
mov
adc
sbb
jae
cmp
shlb
les
pop
fs
aam
imul
jl
fucomip
push
je
test
jns
dec
push
xlat
add
out
mov
into
incl
sbb
sub
ret
jbe
mov
cmp
inc
sbb
or
jne
gs
mov
inc
cmp
inc
mov
mov
icebp
add
push
fdivs
fisubs
inc
es
cmp
adc
fwait
loopne
push
testb
sub
movhlps
stc
cmp
adc
cli
ss
cmp
fwait
mov
jmp
jbe
push
xor
pop
das
dec
fxam
aaa
flds
xchg
imul
and
jnp
mov
xchg
or
adc
mov
enter
jge
or
mov
dec
xchg
jge
aas
inc
dec
imul
fs
mov
push
movsl
push
mov
dec
sub
test
cmp
mov
xchg
bound
cld
js
aaa
mov
ja
sbb
sub
adc
loop
out
dec
add
mov
adcb
pop
rorb
repz
and
fs
push
pop
cmp
fisubrs
fimull
mov
adc
int
pop
push
xchg
xchg
scas
pop
push
ss
cmp
int
mov
inc
mov
sbb
orb
push
cmc
nop
ret
push
icebp
mov
sbb
add
jmp
sar
jle
jo
sbb
fidivs
inc
lea
insl
sahf
lods
rcrl
jp
stos
fcmovu
mov
into
or
xchg
repnz
mov
mov
mov
xchg
arpl
mov
loope
pop
dec
xchg
call
pusha
pusha
enter
or
push
and
jge
popa
ret
dec
push
xchg
pusha
clc
xor
int3
sbb
push
push
and
jmp
pop
pusha
shl
outsl
jo
inc
mov
stc
pop
cmp
lcall
mov
sahf
adc
hlt
adc
xchg
pop
gs
mov
out
sbb
cmpsb
ja
fs
push
call
push
ret
jne
xchg
shlb
divl
incb
sbbl
jns
mov
mov
in
roll
shll
mov
mov
xchg
xor
cld
inc
and
sub
sub
pushl
into
bound
xor
icebp
cmp
and
pop
out
cmp
pop
pop
pushf
rol
in
shrl
cmp
lea
lret
push
testl
sti
push
push
jle
dec
repnz
xor
inc
enter
mov
in
cmp
xor
cmp
or
or
ficoms
iret
das
cli
fwait
mov
movsb
stos
push
test
mov
data16
in
aaa
mov
lcall
pop
lcall
cmp
iret
scas
push
inc
lcall
push
sbb
jbe
ret
shrb
add
mov
or
pop
int3
and
inc
lea
and
jne
test
lret
xor
fdivrs
dec
jmp
mov
jle
mov
js
out
mov
lds
pop
lea
loop
xor
lock
xchg
loope
push
test
inc
dec
loopne
dec
into
mov
jge
imul
xor
lea
fsubl
stos
cli
ret
pop
inc
shl
sub
pop
push
fsubrl
dec
xchg
dec
pusha
add
fimuls
dec
int3
or
scas
pop
inc
roll
adc
in
dec
push
cmp
insb
or
add
dec
int
ja
push
lret
dec
dec
lods
mov
or
mov
stos
inc
pushf
jl
cmp
fs
cltd
test
xchg
rclb
fsubrl
dec
add
xchg
popa
xor
in
mov
xchg
mov
popf
lds
mov
enter
cmp
push
cwtl
or
xor
jnp
mov
xor
out
pop
pop
sub
jmp
sub
or
add
mov
inc
leave
mov
mov
rclb
xor
adc
cmp
pop
imul
jge
gs
xor
imul
add
negl
mov
rolb
adc
lahf
mov
bound
mov
sub
jb
push
test
or
imul
add
or
sub
adc
jo
mov
and
loopne
jno
lcall
adc
push
push
inc
dec
lods
jnp
lahf
jmp
pop
mov
pushf
xchg
jecxz
cwtl
fsubs
mov
pop
fsubl
cmc
pushf
insb
jno
repz
jg
add
sbb
hlt
aad
push
cmpsl
cmpsb
ret
jae
int
fbstp
adc
mov
xor
lock
push
add
adc
in
mov
push
sub
hlt
xchg
loopne
addr16
stos
fimuls
push
test
in
ss
bnd
and
dec
sbb
movl
push
popf
lret
xchg
pop
cltd
jbe
outsl
dec
mov
ficoml
mov
mov
pop
pop
xor
jnp
daa
push
ljmp
sub
push
jne
icebp
leave
sahf
xchg
aam
dec
pop
and
pop
mov
into
int3
aaa
adc
xor
icebp
mov
jno
or
shll
rcll
js
inc
inc
stos
jmp
loopne
fnstcw
add
add
dec
scas
xchg
add
pop
subl
jb
pop
sub
test
push
popf
sbb
mov
sbb
xor
fidivl
js
sahf
push
mov
fldt
push
xor
inc
nop
lods
movsb
push
gs
xchg
push
fildll
idivb
xlat
or
dec
mov
add
call
xchg
test
jmp
dec
cmp
and
insb
iret
lds
arpl
adc
imull
or
or
mov
fldz
shrl
push
or
inc
jne
inc
sahf
icebp
inc
icebp
and
lock
sub
insl
xor
add
jns
out
pop
clc
add
cmp
lahf
in
popf
ss
xchg
inc
loopne
ss
and
jo
lods
mov
sbb
das
iret
or
xor
jae
dec
rcrl
ds
or
jo
sub
scas
cs
outsl
paddb
xchg
and
divl
pop
xchg
pop
sub
cs
fsubs
xlat
push
repnz
cmpsl
pop
arpl
cltd
filds
sbb
mov
loopne
xchg
nop
jne
sub
xchg
inc
adc
mov
xchg
sbbl
mov
stc
push
mov
das
xchg
add
std
mov
and
icebp
xor
add
mov
dec
insl
movl
push
and
xlat
mov
in
jb
pop
sbb
fcompl
mov
dec
mov
test
shlb
inc
addr16
and
jmp
or
mov
lahf
arpl
lea
pop
and
add
mov
and
or
add
dec
call
xor
repz
rclb
pop
jg
cld
fs
iret
loope
cmpsl
jg
or
cmc
outsl
ror
and
mov
jecxz
pop
jmp
pop
movaps
cwtl
mov
and
mov
iret
pusha
inc
adc
add
mov
jecxz
cmp
pop
fisubs
xchg
pop
mov
add
push
arpl
shl
jno
test
xchg
loopne
rorl
sub
into
stos
js
mov
test
bound
test
setle
inc
test
xor
inc
incl
sbb
cwtl
cli
cmp
outsl
ficoms
adc
and
hlt
sarl
sahf
inc
push
ljmp
xor
or
add
ror
xchg
sbb
pop
sbb
mov
mov
mov
cmp
mov
push
xor
mov
rcll
ja
push
js
cmp
lcall
lret
ja
scas
fnsave
ret
mov
adc
pop
fstl
ds
mov
scas
xchg
pushl
aaa
and
es
adc
cli
and
adc
add
adc
fiaddl
bound
push
ss
xchg
sub
in
push
pop
scas
les
and
jno
push
xchg
fadd
and
ds
cmp
pop
std
inc
dec
cmp
fcmovb
pop
fldl
aad
into
scas
shll
pop
scas
cli
loope
mov
leave
lods
test
enter
imul
inc
adc
push
or
xchg
push
jb
add
mov
addr16
addr16
aad
arpl
xor
mov
push
push
jmp
aam
xor
sub
cwtl
push
push
aas
int
cmc
dec
cmc
aaa
shrl
imul
roll
mov
mov
insb
test
inc
dec
outsb
add
shlb
dec
ja
cmp
ret
mov
jecxz
ds
inc
jbe
inc
adc
cmp
ror
icebp
jl
rorl
mov
sub
and
bound
ds
test
rorb
loopne
jmp
stc
div
cli
fwait
daa
mov
aas
hlt
adc
shll
jle
test
xor
insl
mov
or
pushl
sub
and
clc
cmp
in
aam
pop
lcall
outsl
cmc
cltd
xchg
pop
jno
pop
push
rcl
adc
jge
mov
lret
and
cwtl
movsl
dec
and
cltd
push
push
xchg
cmp
pop
xor
inc
adc
push
inc
daa
mov
sub
add
dec
ja
inc
rorl
sti
adc
xlat
jb
jne
hlt
aaa
fnop
xchg
xchg
cld
sti
inc
hlt
and
rcr
lock
hlt
leave
subb
mov
mov
mov
xchg
orl
mov
lods
and
cmp
xchg
mov
or
push
data16
adc
add
inc
cltd
and
jb
cmp
sti
jge
in
pop
and
adc
mov
push
jae
jmp
jp
nop
in
push
pop
push
dec
cld
arpl
pop
cmp
xor
inc
out
popf
pusha
fs
rcll
xor
fsts
stos
pusha
adc
xor
fimuls
inc
cmp
sbb
inc
adc
imulb
mov
jo
push
mov
out
mov
inc
xchg
xchg
push
xor
or
mov
xor
je
insb
jo
xchg
mov
push
mov
cmp
and
stos
jo
iret
outsl
rclb
jae
or
out
mov
pushw
fildl
jno
inc
push
cli
sub
mov
outsb
jnp
xchg
lds
cwtl
pop
test
jno
mov
loop
sbb
sub
inc
shrb
mov
add
stos
pop
push
jne
gs
push
mov
sub
mov
inc
push
xor
out
xor
xchg
cmpsl
out
imul
test
dec
call
jb
mov
xchg
loope
aas
xor
aad
adcb
dec
jp
jo
jo
cld
inc
or
into
repnz
lret
mov
push
and
js
sub
stos
nop
inc
pop
cmc
in
sbb
stos
jle
rcll
mov
stos
lea
push
mov
xchg
adc
repnz
mov
addr16
out
jge
imul
dec
inc
mov
pop
adc
or
sahf
dec
pusha
dec
mov
mov
int3
jmp
or
and
cmp
lcall
pop
sbb
mov
cli
sub
inc
jns
sahf
push
out
stos
dec
and
sub
aaa
xor
lret
sbb
dec
pop
adc
add
lods
adc
addr16
das
xor
xor
fs
loope
inc
push
stos
jmp
inc
imulb
out
and
cmp
nop
jns
inc
or
in
push
lret
cmp
lock
dec
jbe
sti
ja
stc
icebp
arpl
push
cmp
clc
mov
rolb
cmpsb
cmp
and
sbb
divb
outsl
lock
pop
add
das
test
push
repnz
outsb
sub
and
cmp
and
repz
dec
nop
psubusw
xor
adc
push
cmp
mov
xorb
mov
cmpsb
pop
es
sbb
lods
in
ds
fs
aaa
cli
addr16
push
sub
mov
xchg
and
dec
mov
sub
orl
dec
sbb
stos
es
xlat
xlat
in
hlt
in
inc
xchg
mov
sbb
cltd
and
mov
iret
and
xchg
add
inc
sbb
fisubrs
inc
out
inc
cmp
push
jecxz
cmpl
mov
hlt
out
lcall
xchg
or
aas
lods
inc
imul
inc
loope
fsubrl
lret
sarb
and
out
sub
mov
imul
or
mov
inc
out
mov
sub
fwait
sub
gs
and
jl
divb
ja
mov
repnz
mov
adc
and
xor
aad
push
fstpt
in
lret
xor
add
fwait
das
or
addl
rorb
push
push
lods
sub
in
inc
cli
repnz
jmp
js
gs
and
jne
in
mov
jecxz
mov
ret
mov
inc
mov
jmp
ja
xchg
int
xor
jno
lods
mov
fnstsw
loop
push
rclb
test
movsb
dec
sub
das
vmulsd
push
jbe
frstor
sti
dec
dec
sbb
jbe
lods
jno
pop
jmp
adc
add
xor
icebp
repz
call
mov
jle
pop
jmp
xor
lods
sub
dec
dec
insb
test
ret
mov
jecxz
daa
jecxz
mov
jae
sbb
clc
test
inc
xor
rcll
test
sahf
xlat
loop
repz
popa
pop
cmpsb
lods
jecxz
shll
dec
sbb
in
push
push
adc
xchg
inc
ljmp
adc
jne
push
das
mov
pop
cmp
nop
mov
xchg
dec
faddp
dec
adc
mov
int3
out
lret
jbe
jns
loop
mov
jnp
jp
repnz
xlat
scas
jecxz
test
mov
mov
mov
loope
and
test
or
jge
int
insb
push
inc
xor
inc
xchg
lds
cltd
jecxz
or
and
mov
jp
push
xchg
test
repz
popf
mov
jns
jge
mov
xor
mov
or
or
cmc
xchg
stos
lods
adc
inc
daa
arpl
mov
xchg
inc
mov
mov
popf
jl
push
or
xchg
or
shr
mov
xor
cltd
lahf
jnp
stos
add
cwtl
mov
dec
lahf
inc
pop
mov
jnp
pop
clc
xlat
xchg
fwait
into
sub
aam
add
mov
xor
mov
push
add
push
in
orb
and
xchg
negl
adc
push
shlb
loop
jecxz
dec
stc
cld
pop
adc
add
into
inc
pop
pop
lret
mov
pop
mov
xlat
loopne
lea
es
push
imul
in
jbe
in
lahf
xchg
xchg
xor
xor
insl
fsubrp
or
arpl
arpl
mov
sti
clc
lret
scas
mov
test
movsb
divb
push
popf
or
xor
cmc
xor
push
push
or
mov
clc
clc
cld
fistps
loopne
aaa
lcall
out
repz
xchg
cmp
ret
pushf
mov
or
in
ret
cmp
adc
sub
pop
outsb
push
insl
dec
cmp
mov
lcall
jge
add
mov
add
icebp
jbe
mov
pop
loope
jp
sbb
mov
mov
push
or
mov
sub
inc
jno
mov
mov
mov
and
xchg
xor
divb
adc
test
xchg
mov
and
scas
jge
add
sbb
jg
push
aas
jmp
and
bound
pop
jmp
push
inc
shll
push
pop
fcomi
das
dec
xor
sbb
jb
ss
mov
ljmp
xchg
sub
icebp
rclb
aam
jge
shll
test
pop
pop
pop
xor
repnz
testb
arpl
xor
lret
mov
mov
sbb
cmpsl
pop
loop
cwtl
xchg
cmp
sub
cs
call
mov
rcrl
loope
and
and
push
stos
push
imul
les
or
mov
std
dec
sbb
adc
fisubs
mov
popf
push
lods
or
insb
jne
stc
into
dec
pusha
lret
xor
dec
jl
outsb
imull
mov
xchg
mov
sbb
adc
xor
outsb
push
sub
push
subl
jmp
xor
iret
pop
xchg
cmp
dec
or
mov
jnp
mov
iret
shlb
jl
sub
in
jb
lock
push
js
pop
jmp
mov
mov
pop
xchg
daa
or
xchg
cltd
sub
cmp
fwait
int3
movsb
test
int
sub
sbb
pop
fisubl
dec
and
cmp
jns
bnd
sti
cmc
add
push
mov
fisubs
bound
jp
pop
shlb
pop
mov
into
rcr
flds
icebp
or
lcall
cmpsl
shrl
shrb
lahf
jno
mov
xor
mov
pusha
stos
insl
outsb
mov
jg
movsl
test
rol
jnp
in
xchg
adc
sti
mov
sbb
pop
repz
sub
in
inc
addr16
or
cmc
imul
in
fdivp
and
push
sbb
push
out
adc
popa
and
inc
ret
mov
out
pusha
test
rcrl
shrl
xor
cltd
xchg
xchg
mov
sbb
mov
fistpl
int
mov
inc
lods
add
xchg
jbe
rcrb
mov
lcall
bnd
lock
and
mov
jo
pop
pushf
or
jae
filds
lret
cmp
or
insl
ljmp
out
ficompl
mov
pop
lock
outsb
das
loopne
xor
jbe
stos
cli
scas
cmp
ss
test
mov
pop
insl
es
pop
addr16
sub
mov
push
jbe
cmp
gs
test
les
into
popf
or
movl
adc
popa
ljmp
adc
sbb
incl
out
push
aas
add
mov
add
sbb
dec
roll
stos
ret
out
insl
mov
pop
mov
ret
mov
int
pop
lea
enter
cmp
adc
cmp
push
pop
or
mov
cmp
mov
daa
int
push
stc
mov
lds
mov
xchg
pop
cmp
xchg
js
imul
or
clc
push
fistpl
mov
or
mov
fistps
inc
lcall
mov
jnp
and
or
clc
repnz
pusha
ror
jne
sbb
loopne
int3
rsm
push
xchg
clc
mov
adc
test
and
mov
dec
lret
and
sub
in
mov
cmpsl
lret
cmp
fs
xor
nop
clc
fucomi
mov
mov
mov
js,pt
add
loop
add
lods
fstl
dec
fs
and
push
cld
cltd
dec
mov
adc
xchg
push
jns
pop
xor
cmpsl
or
mov
sub
jne
jns
test
sbb
mov
ss
ljmp
adc
nop
repz
jg
xor
push
iret
fsubrs
xor
sbb
stc
sub
adc
mov
xchg
add
jae
lods
mov
dec
push
das
sti
xlat
insb
push
rorl
clc
imul
fldt
and
mov
jb
cmp
mov
xor
in
stc
add
jo
mov
and
xchg
inc
ss
dec
inc
inc
cmc
jge
cld
fstps
pop
popf
adc
test
pop
cmp
hlt
jle
inc
cmp
daa
inc
pop
sahf
leave
jo
mov
lret
pusha
jne
and
mov
cmp
int3
loope
adc
sub
adc
pusha
movsl
gs
call
and
inc
in
cltd
imul
ja
jbe
push
inc
and
xchg
xchg
adc
outsl
mov
test
sub
pushl
xchg
and
or
xor
jbe
outsl
adc
jle
mov
and
cmpsl
sub
das
pop
pop
fsub
imul
add
or
xor
es
cwtl
xor
iret
popf
or
xchg
and
push
adc
inc
dec
or
mov
cmp
hlt
sbb
outsb
bound
inc
stc
shrb
outsb
pop
mov
jo
sub
repnz
add
aas
enter
cmp
shr
mov
adc
sbbl
pop
adc
jbe
jge
stos
cmp
leave
dec
mov
xchg
cmp
add
outsl
mov
aaa
aas
dec
or
xor
call
xchg
xchg
push
arpl
jecxz
fsubrs
lds
movb
mov
lcall
xchg
fisubl
and
scas
call
dec
jg
pop
aaa
loop
jb
mov
cmp
rcrl
sub
mov
mov
test
cmpsb
sti
pop
inc
lret
adc
lods
bound
pop
push
inc
das
stos
imul
xor
mov
adc
or
inc
or
ret
sub
mov
cmp
aad
data16
daa
cmpsl
cli
mov
andb
fadds
shlb
xchg
ficoml
add
mov
push
push
cmpsb
orl
cmp
or
ffree
das
pop
mov
xchg
mov
fwait
dec
xor
mov
mov
pop
jno
pop
ja
call
and
fsubrl
sbb
into
add
movsb
aad
push
js
lock
shll
xchg
lahf
or
cltd
push
pop
cltd
cwtl
icebp
popa
lods
cmp
neg
movsb
enter
push
iret
adcl
cmc
aas
cld
push
loop
subl
sarb
jo
mov
mov
es
fcomp
jmp
pop
cmp
leave
leave
adc
jle
mov
mov
xor
jp
adc
mov
arpl
pop
ss
scas
aas
and
out
xor
stos
add
xchg
outsb
xor
test
cvtdq2ps
dec
aad
sahf
in
adc
push
lret
ds
adc
sahf
mov
add
inc
pop
mov
xor
mov
mov
sbb
or
inc
test
push
push
iret
push
bound
cs
push
aaa
xor
in
inc
test
std
pop
pop
mov
mov
add
push
sahf
outsb
leave
testb
dec
addr16
lahf
lea
cli
mov
push
push
leave
jp
rorl
mov
mov
mov
cld
sbb
jns
in
mov
sbb
outsb
push
movsb
ss
int
in
ret
xor
adc
adcl
insl
jmp
sub
jp
xchg
ds
xchg
adc
sbb
xchg
dec
bound
cld
cmp
jg
icebp
jno
jecxz
gs
mov
jns
test
xorl
es
fstl
cli
sub
cmp
mov
cmc
test
leave
pop
sub
imul
mov
movl
enter
xchg
popf
or
dec
stc
arpl
mov
arpl
icebp
fiaddl
out
fisubs
loopne
je
lds
inc
lahf
inc
cmp
shrl
out
into
dec
mov
dec
dec
fisubrs
cmp
mov
xor
xchg
ret
add
aad
pop
mov
dec
cmpsb
push
cmp
adc
sbb
fwait
movsl
xor
shll
jmp
lahf
mov
rcll
inc
mov
push
cmpsl
mov
jbe,pn
mov
jp
fsubrs
std
mov
imul
adc
or
orb
loopne
lock
or
sti
sbb
std
iret
push
jp
sbb
sbb
jg
cmp
add
push
jo
cmpsb
stos
lds
cli
jns
mov
lods
gs
in
pop
sbb
dec
adc
adc
sub
mov
imul
jp
sbb
fwait
movsl
rclb
push
jae
inc
imul
out
shrb
addr16
xchg
int3
mov
insb
ret
outsl
or
inc
int
and
imul
jp
testb
mov
dec
lds
imull
xchg
push
xchg
and
push
out
hlt
push
cmp
call
mov
in
pop
aad
xor
ss
pusha
clc
sub
outsb
andb
out
pop
mov
leave
dec
jae
inc
pop
lods
mov
adc
mov
sbb
aaa
cmp
sbb
sbb
pusha
sbbl
jne
inc
dec
fildl
mov
dec
sbb
scas
dec
inc
push
js
or
mov
mov
call
and
ja
jno
lods
adc
jnp
xor
xchg
xlat
pop
call
hlt
sbb
stc
push
shll
inc
or
or
add
add
rolb
hlt
adc
lahf
dec
mov
je
out
push
popw
out
mov
add
xchg
mov
mov
fimuls
dec
pop
jmp
call
inc
int
sbb
stos
data16
loopne
mov
push
mov
mov
mov
loop
dec
mov
stos
rcrl
stos
arpl
imul
mov
mov
cmp
or
adc
push
popl
lds
cmp
test
mov
xchg
cmp
scas
cmp
loope
dec
imul
and
mov
pop
mov
arpl
push
fsubr
cld
pop
pop
inc
cmpsl
aad
pop
inc
xor
sub
jo
jge
in
pop
filds
sub
ds
fildl
cs
aam
call
mov
rcll
jp
into
mov
sbbb
xlat
lock
add
je
pop
add
inc
adcb
mov
lds
mov
mov
bound
push
fwait
jp
iret
dec
addr16
lods
dec
aam
cmc
lds
xchg
sbb
add
mov
mov
add
vmovshdup
addb
sub
xor
mov
xlat
and
inc
and
mov
icebp
fs
lds
fnstsw
pushf
aam
mov
jbe
mov
dec
addb
mov
in
inc
add
or
hlt
dec
pop
xchg
rcll
pop
in
nop
ret
push
call
xchg
ljmp
push
mov
cmp
sub
xchg
xor
cwtl
stos
jae
lretw
add
aaa
lcall
ja
mov
dec
xor
loope
sub
push
push
and
bound
xor
push
push
push
inc
mov
dec
and
adc
test
test
aam
mov
fs
and
cmpsl
mov
loop
repnz
mov
shlb
and
adc
pop
dec
test
rolb
ss
pop
xor
out
addr16
adc
stc
inc
sahf
mulb
pop
sahf
cmpsb
cs
adc
mov
pushf
or
push
jns
push
call
imul
jns
adc
lds
sub
std
leave
push
jns
adc
test
mov
test
add
out
out
sbb
fcmove
add
push
stos
xchg
shlb
bound
cmpsl
stc
in
aaa
data16
push
push
inc
imul
sarb
mov
add
add
sahf
dec
mov
push
pushf
aam
jmp
xchg
movsl
fs
ja
cli
inc
and
imul
dec
lds
mov
loope
sub
fwait
push
in
inc
jbe
xor
push
mov
cli
cwtl
cwtl
ljmp
lcall
mov
fmul
adc
inc
add
xchg
mov
sub
jae
imul
mov
into
scas
push
popf
lahf
cmp
adc
lret
mov
push
fs
out
sub
test
or
cmp
sbb
mov
mov
insb
pop
xor
mov
add
sub
dec
jle
cmpb
sbb
cmp
or
sbb
or
pop
push
sub
test
ljmp
xchg
fisubs
scas
lea
cmp
xor
and
and
mov
mov
stos
or
insb
movsb
lds
out
add
add
imul
pop
mov
jl
notb
or
sub
and
pop
or
mov
ds
movb
addb
outsl
add
push
pop
jns
and
scas
cli
addb
in
mov
fwait
cmp
jno
call
cld
in
mulb
test
cs
xlat
nop
insl
mov
push
cmp
pop
lcall
cmp
lcall
incb
lahf
adc
sbb
mov
pushf
mov
push
sub
sbb
out
pop
jge
cmp
in
icebp
fcom
or
jg
pop
cmp
add
shr
mov
jl
adc
mov
fldl
xor
out
call
test
xor
mov
xchg
dec
jle
sub
pop
lods
xchg
xor
xor
in
jmp
rolb
fwait
fs
jmp
idivb
inc
sbb
aas
mov
js
popa
mov
hlt
out
lds
xor
movsbl
inc
pop
push
data16
push
in
xor
pushf
dec
sbb
xchg
subb
xchg
and
cmp
imul
jno
fstps
cmp
or
push
ret
insb
fwait
adc
jbe
push
fmuls
stos
insl
pop
repnz
iret
dec
pop
inc
ret
or
cmp
movsl
ret
mov
arpl
xor
out
push
xchg
movsl
sbb
loope
mov
hlt
pop
push
call
pusha
pop
add
clc
imul
jb
cmpsb
push
pop
sbb
xchg
ss
ds
clc
pop
and
pop
sub
das
mov
xor
mov
xlat
add
xchg
inc
idivb
lcall
push
jbe
xor
gs
sbb
bound
sub
mov
or
ss
push
not
fstl
js
cmp
ja
add
cmp
adc
jmp
push
jnp
sbb
adc
adc
out
insl
les
out
adc
jg
sbb
jmp
jne
addr16
cmp
clc
jmp
std
ret
xor
xchg
icebp
jp
xorb
cmpsl
sti
fst
xor
dec
sub
and
lock
daa
pop
add
test
outsb
mov
and
add
mov
push
or
int3
movsl
pop
pop
cmp
es
mov
dec
sbb
lods
sbb
mov
ret
into
or
mov
jmp
int3
cltd
mov
xchg
or
mov
add
jge
mov
es
and
lsl
pop
xchg
cmp
popf
jp
call
sub
dec
and
std
gs
cmp
xor
sub
dec
mov
pushf
cmp
pop
jg
mov
pop
inc
or
fcomps
cmp
ret
pushf
push
mov
test
pop
or
inc
adc
sahf
aam
fisubrl
ret
test
mov
std
add
dec
lahf
add
test
loop
out
xlat
dec
bound
jg
enter
cltd
jnp
xor
icebp
mov
add
out
test
mov
mov
fldcw
std
sahf
or
or
push
mov
pusha
test
pop
pushf
mov
mov
sub
xchg
mov
insl
ret
nop
stos
sbb
xor
push
dec
repnz
sub
and
aad
in
aas
mov
in
gs
imul
and
cmp
cmc
test
inc
aad
and
negb
jg
adc
or
jge
add
test
test
mov
inc
stos
mov
cmpsl
faddl
mov
aad
inc
fdivrs
xchg
sahf
mov
cli
mov
notl
mov
mov
sbb
cmp
xor
out
pop
es
and
aam
or
inc
leave
xchg
outsb
dec
cwtl
push
mov
or
stos
inc
testl
scas
adcl
sub
jb
ficoml
or
xchg
ljmp
imul
fs
and
mov
inc
sub
in
jecxz
sub
fmull
mov
cmp
dec
push
push
ljmp
and
sub
arpl
cmpsl
int
lods
pop
ficoml
repnz
movsb
add
gs
shl
cs
add
loop
mov
add
pushf
push
mov
outsb
cmp
push
repz
push
cmp
cmovg
js
nop
xchg
data16
fs
sbb
dec
xchg
xor
mov
dec
pop
xor
xchg
lods
rcrb
jg
inc
push
daa
push
push
xchg
push
loopne
add
fldl2t
add
fidivl
and
sbb
pop
push
cmp
js
dec
sbb
fmul
mov
or
sbb
cltd
jmp
scas
inc
ljmp
sbb
test
mov
xor
sub
test
dec
shrd
inc
push
in
imul
pop
out
inc
jae
mov
insb
inc
stos
dec
outsb
int3
mov
jecxz
xor
lock
mov
xchg
fisubs
xchg
pop
jge
fidivrs
out
test
in
inc
loopne
jo
or
imul
pop
addr16
popa
mov
mov
pop
test
add
sti
mov
into
popf
jne
das
jne
lret
dec
pop
xor
pop
jae
jp
and
push
cmpsl
dec
cli
or
shl
dec
aaa
in
fistl
add
push
mov
pushf
mov
and
adc
lods
loope
cmp
scas
in
jb
je
repnz
or
add
sub
mov
hlt
in
or
loop
lcall
adcl
sbb
mov
sub
push
rcrl
push
test
shrb
fldlg2
xchg
xor
mov
enter
push
or
add
dec
jecxz
pop
es
in
push
imul
pop
mov
or
mov
adc
cmpsb
cmpsl
pop
daa
jecxz
decb
xor
push
dec
add
outsb
inc
adc
test
mov
jge
inc
sbb
sub
xchg
mov
and
sbb
subl
mov
add
pop
outsb
pop
frstor
mov
push
dec
jne
outsl
jnp
sub
add
add
mov
ss
insl
shlw
inc
jecxz
or
add
mov
pop
lret
push
movsb
xchg
leave
lea
lret
jno
jbe
int3
sbb
sub
cwtl
mov
sbb
dec
add
rorl
imul
mov
rcll
in
sub
adc
gs
push
scas
rcrb
add
xchg
std
xor
sbb
mov
and
out
addb
test
sub
rolb
js
lods
dec
pop
sub
sbb
mov
test
push
call
mov
mov
cmp
loopne
and
outsb
movsl
icebp
clc
cmp
sti
jo
cmp
icebp
cmp
pop
adc
sub
jmp
cwtl
mov
sbbb
adc
or
sub
xchg
push
and
push
mov
push
es
jle
bound
shlb
mov
and
mov
ss
or
sub
inc
inc
movsl
lds
outsl
das
cli
je
mov
ds
stos
jl
iret
dec
fsubrs
dec
scas
in
and
xchg
mov
and
xor
loope
test
jp
repnz
or
xchg
cltd
out
or
mov
stc
mov
arpl
dec
imul
clc
mov
roll
sbb
daa
sbb
les
lods
aad
js
sub
ds
mov
imul
clc
in
je
test
test
aam
or
push
fcmovnu
fwait
add
xchg
movsb
cmp
mov
push
sub
sub
cld
cwtl
dec
mov
jo
ds
adc
imul
mov
jns
sbb
jmp
dec
cltd
or
sbb
test
dec
mov
pusha
dec
repnz
xor
lock
push
call
mov
xchg
fisttpl
mov
in
xchg
adc
xor
mov
adc
adc
add
dec
sbb
inc
insb
in
jecxz
sbb
cmp
daa
dec
popa
cmpsl
les
cs
pop
loop
lret
mov
add
sbb
or
in
mov
aaa
sub
sbb
jmp
inc
dec
outsb
cld
inc
jbe
pop
test
imul
hlt
mov
ja
sub
fmuls
jnp
jge
int
push
add
dec
xchg
jg
insb
cltd
add
dec
dec
movsb
aam
test
movb
rclb
add
adc
xchg
jno
dec
loope
xlat
mov
in
sub
add
and
and
lret
loop
idivb
mov
in
push
sub
jns
mov
les
call
mov
pop
push
and
jl
ret
cmc
ljmp
inc
inc
imul
fimuls
pusha
sti
jmp
and
sbb
cmp
loopne
fnstenv
out
pop
outsb
ret
mov
std
movl
push
pop
cmpsl
fstpt
rcll
sbbb
imul
mov
mov
xor
pop
jbe
test
cmpsl
mov
and
gs
fcomp
stos
int
inc
xor
ds
sub
pop
mov
leave
mov
pop
cmp
mov
enter
int
and
stos
test
xor
mov
jmp
fcomp
jo
out
cmp
test
shlb
jo
cmpsb
mov
test
lret
cmp
sbb
icebp
test
mov
lahf
xchg
adc
into
or
xchg
dec
popa
arpl
int
loope
mov
jle
dec
call
mov
pop
data16
fs
ret
pop
bound
sbb
fistl
mov
cmp
pushf
jp
add
jg
sti
and
cld
dec
ss
sub
jl
loope
lods
arpl
mov
mov
cmc
mov
fidivrs
cld
cmpsb
fistps
inc
jecxz
orb
addr16
sbb
xor
mov
clc
imul
mov
enter
add
jnp
sbb
cmpsl
or
leave
inc
mov
mov
into
or
and
jbe
sub
mov
repz
push
mov
in
jmp
repnz
repz
int
cmpsl
popf
sbb
cmpsb
add
mov
mov
inc
dec
jnp
xor
push
mov
ss
rorl
fadds
repnz
test
leave
mov
sarl
ljmp
fwait
insl
adc
int
mov
shll
dec
and
imul
dec
and
add
sub
std
imul
loop
pop
fpatan
imul
rcrl
dec
jbe
push
out
insl
iret
call
cmp
aad
mov
mov
or
dec
mov
lcall
add
pop
insb
movsb
lea
sbb
mov
push
jno
and
push
xchg
sti
sbb
outsb
int3
add
clc
lock
es
scas
mov
addl
ret
pop
jp
push
imul
in
cs
scas
mov
xlat
mov
cmc
cwtl
in
and
push
stos
mov
inc
jg
popa
in
and
dec
push
test
ja
aam
and
ss
movsb
push
jae
movsl
jne
and
aaa
inc
lock
incl
jge
jmp
nop
int
and
clc
hlt
test
fsubp
in
mov
je
call
xchg
insb
or
add
xchg
sbb
outsb
and
fisubrs
test
popa
js
cmc
stc
aas
jo
dec
push
adcb
fiadds
mov
sub
dec
mov
pusha
dec
dec
std
dec
pusha
jl
andnps
sti
gs
int3
in
or
imul
dec
popf
gs
xchg
lods
pop
or
pop
xchg
add
jg
jmp
or
and
cmpb
dec
ret
xchg
jmp
xor
sbb
ret
inc
mov
arpl
sub
mov
imul
lock
adcb
pop
cmc
mov
lret
ret
lods
or
aad
in
loop
cli
stos
sub
mov
push
loopne
mov
pop
push
scas
mov
add
mov
sti
xor
in
lsl
mov
dec
movsl
and
jge
shlb
push
dec
lcall
sub
sub
in
push
adc
fnsave
mov
xchg
add
inc
mov
xorb
or
inc
push
imul
push
rcrb
or
loope
in
sub
testl
pop
jge
mov
jmp
pop
add
mov
leave
and
push
into
xor
mov
jle
xor
jg
mov
ret
cmp
aaa
mov
and
rcl
mov
popl
xchg
or
or
lds
mov
or
or
leave
test
stos
mov
rcll
bound
fwait
leave
mov
pop
mov
push
jl
dec
jns
inc
fildl
mov
mov
leave
xor
cli
add
mov
aad
and
pop
roll
stos
jge
shll
cmp
push
lret
jbe
and
ljmp
shlb
test
loopne
push
leave
adc
int
dec
ja
or
ds
cmpsl
repz
mov
comiss
fucomp
adc
sbb
or
cmp
dec
outsb
pushf
jae
or
mov
pop
cmp
cmpsl
add
hlt
sub
mov
mov
pop
roll
dec
inc
addr16
les
movsl
sbb
adc
aaa
cli
dec
push
dec
cmp
jo
push
lods
dec
cld
ret
aaa
dec
pushf
mov
or
cwtl
loope
xchg
test
jne
cld
lcall
incl
test
pop
js
mov
jle
pushl
push
lahf
inc
mov
mov
cmc
mov
mov
mov
pop
repnz
ja
arpl
mov
lods
cmp
mov
cli
adc
fs
cmp
xabort
sti
push
push
push
mov
sub
std
or
dec
or
pop
outsl
xor
adc
push
jp
aam
pop
jl
jne
pop
xchg
and
test
xor
mov
cltd
addb
out
movsl
xlat
add
cmp
lock
cwtl
pop
lret
pop
dec
test
mov
dec
mov
jne
notl
adc
inc
imul
into
push
mov
mov
cmp
sbb
sahf
lock
sub
ja
pop
fstps
mov
shr
mov
imulb
fildll
mov
pusha
push
ret
pushf
pop
inc
rcl
fldenv
inc
scas
int3
gs
sub
jns
cmp
or
jp
push
push
dec
mov
into
ljmp
xchg
push
lcall
lret
xlat
xchg
rcr
sub
push
nop
cmp
mov
lahf
das
mov
nop
mov
hlt
arpl
lods
or
loop
xor
or
mov
pop
push
ret
push
ret
jne
arpl
out
std
outsb
jecxz
sub
stc
jmp
mov
cld
pop
sbb
jge
aas
push
mov
push
insl
call
cld
aas
cld
movsl
xlat
push
cmp
jbe
lea
pushf
adc
sbb
push
dec
aam
test
mov
add
popf
int3
mov
aam
aaa
icebp
sub
push
cmpb
push
pop
adc
xlat
movsl
adc
sbb
push
and
pop
pop
std
outsb
mov
in
jne
xchg
fnsave
cmpsb
or
push
subb
push
push
movsb
xchg
stos
fidivrs
dec
xchg
clc
inc
leave
cltd
sbb
adc
mov
lods
aas
scas
sub
mov
lret
stc
push
sub
hlt
fistpl
ja
shl
lret
nop
in
out
sbb
fldcw
or
add
jno
lret
jle
rclb
idiv
dec
jo
mov
popf
sahf
enter
cmp
in
adc
jbe
or
sarb
pop
or
sbb
add
and
cli
cmpsb
sub
repnz
mov
rorb
mov
testb
push
jnp
loopne
inc
pushf
dec
mov
in
xor
xor
pushf
jl
and
jp
lahf
loope
rcll
mov
inc
call
sub
fsub
xchg
xchg
outsb
lock
jo
notl
lods
adc
mov
popa
ret
mov
les
xor
lret
mov
inc
dec
faddp
sbb
jbe
daa
cwtl
adc
cmp
in
xchg
mov
xchg
leave
icebp
adc
sahf
adcb
sbb
int3
mov
cmp
adc
jbe
ret
or
push
imul
cmp
lahf
push
pop
icebp
outsb
add
outsb
fidivrs
sbb
sub
xchg
jne
jg
push
mov
aas
push
xchg
dec
jl
jo,pn
jo
adc
adc
scas
dec
jno
ljmp
jmp
rol
in
xrelease
stos
fcomps
mov
adc
push
sub
mov
or
stc
jle
xor
out
test
dec
inc
loope
jge
mov
or
call
int3
inc
cltd
pop
loope
xchg
jmp
in
inc
fsub
scas
pop
sti
ret
dec
inc
push
mov
jo
leave
mov
mov
xor
mov
data16
pop
inc
addr16
pushf
mov
xchg
sbb
adc
lds
hlt
sbbl
xchg
das
inc
ja
jmp
je
and
xor
lods
add
cmpsb
cld
insb
aam
jo
inc
not
mov
jno
arpl
dec
push
jecxz
push
xor
jae
sti
hlt
xchg
stc
in
ffree
dec
push
xchg
dec
hlt
mov
out
pop
sahf
hlt
sbb
and
andb
ja
cmp
movnti
jnp
in
sarl
iret
inc
icebp
in
lret
add
pop
or
cli
add
jne
cmpsb
nop
mov
or
push
ss
lahf
arpl
mov
sahf
lods
les
cmpsl
lahf
loop
dec
push
cmp
sub
pop
std
jae
lods
sub
pop
ficoml
push
repz
mov
idivl
jecxz
stc
into
xchg
mov
in
adcb
in
cmp
addl
add
sub
mov
push
cs
fcompl
push
pusha
aaa
ret
mov
or
les
sbb
push
mov
arpl
loopne
jmp
int3
lcall
inc
pop
push
and
lea
mov
in
movsb
add
push
out
xchg
sbb
dec
rorb
setbe
mov
or
pop
pop
xor
ret
or
mov
mov
mov
sbb
pop
mov
rcrb
add
je
js
shlb
mov
loope
ret
cld
popf
loop
fidivs
scas
lcall
enter
adc
xor
sbb
mov
fcmovbe
addr16
out
and
pop
insl
stos
inc
cmp
jns
aaa
dec
out
jg
test
aaa
inc
push
cmp
lds
pop
in
pop
jo
imul
js
add
inc
scas
ficomps
mov
leave
cltd
dec
aad
jne
pop
dec
rorb
sbb
popa
mov
xchg
xchg
mov
std
inc
fidivs
ja
out
mov
dec
dec
inc
adc
in
lock
sbb
loope
sbb
and
into
push
pushf
cwtl
into
xlat
or
pushf
cmp
rclb
xchg
ds
sub
iret
in
lea
jp
jb
add
mov
ret
inc
pop
lahf
lcall
adc
dec
or
outsl
mov
xlat
popa
add
fsts
ss
pusha
sub
inc
shlb
insl
add
cmpsb
movsb
ret
clc
push
push
mov
out
cwtl
idiv
loope
lock
pop
dec
mov
fsts
xlat
inc
mov
jecxz
test
adc
jb
adc
fs
icebp
fisubrl
dec
xchg
adc
cmpsb
dec
popa
cmpsb
xor
adc
xor
hlt
aad
loopne
sub
daa
gs
dec
add
inc
movsl
and
jno
vmovlpd
imul
xchg
hlt
mov
pop
push
call
or
fdivr
xchg
clc
mov
mov
sub
xor
aas
filds
xchg
xor
ljmp
sub
in
sub
stos
repnz
adc
shrl
fldcw
in
mov
testb
sub
cmpsb
stc
scas
ja
xchg
or
test
incb
mov
push
jns
stos
andb
jno
cs
jp
inc
push
lahf
hlt
cmpsl
sub
stos
stc
mov
or
shlb
repz
push
adc
dec
pop
dec
sub
sarb
push
repnz
bound
aaa
subl
out
sub
sub
sbb
mov
add
movsb
sbb
pop
mov
call
inc
add
and
mov
jo
pushf
shl
repz
ret
sub
sahf
das
mov
cltd
mov
xchg
mov
cmp
mov
mov
stos
mov
cmp
inc
jns
mov
or
cmp
sbb
popf
xchg
jo
testl
sub
pop
pushf
pop
sarl
mov
je
lahf
mov
aas
or
or
int
gs
test
add
shrd
xchg
dec
fbstp
jnp
movsl
jle
in
sub
aam
and
mov
lds
rolb
outsb
or
dec
xchg
or
stc
scas
lret
push
bound
mov
fwait
mov
mov
add
enter
mov
jne
es
call
mov
jp
push
and
push
js
pop
ret
cmp
jae
daa
in
pop
daa
cmpl
pop
movsl
sub
mov
xchg
stc
test
xchg
inc
into
cmp
jno
dec
nop
dec
mov
cmc
test
inc
or
stos
lahf
mov
hlt
mov
jbe
lret
cmovge
mov
enter
pop
and
adcb
bound
sbb
cmpl
push
mov
hlt
loop
jmp
sbb
cmpsb
mov
cltd
pop
add
test
xor
mov
mov
pushf
xchg
aam
push
outsb
pop
push
jecxz
test
inc
jl
fstpt
mov
or
or
push
lods
push
add
insb
push
or
sti
jns
mov
adc
push
bound
cld
mov
mov
outsb
xor
lds
les
clc
sbb
jnp
cmpsb
std
fidivrl
jle
lcall
jl
lret
or
or
mov
push
icebp
insb
mov
xchg
jb
es
mov
clc
adc
cmp
mov
and
in
jle
inc
xlat
push
clc
sub
loopne
cmpsl
and
fimull
push
push
sbb
pushf
arpl
sub
daa
xlat
inc
mov
push
mov
aas
sbb
aaa
and
fwait
lret
mov
inc
pop
and
adc
scas
sti
add
push
fistps
lods
mov
and
or
outsb
dec
stc
adc
and
imul
or
jmp
std
and
mov
and
mov
loop
repz
mov
mov
loopne
imul
jmp
nop
mov
ljmp
push
push
pusha
mov
cmp
cs
xchg
xchg
adc
aas
and
cmpsb
es
sbb
pop
mov
shll
xor
mov
or
adc
push
lds
testl
xchg
pushf
pop
or
dec
add
mov
and
mov
leave
jbe
adc
jp
lret
push
cwtl
ja
mov
aad
ss
cwtl
nop
pop
sub
dec
mov
mov
inc
test
cmc
dec
dec
out
mov
fs
mov
and
jno
push
pop
xchg
or
clc
add
dec
or
add
xchg
mov
mov
in
out
cmp
mov
in
sub
inc
or
pop
lods
and
ret
and
pop
mov
mov
sbbb
xor
pop
pop
adc
int3
pop
jg
xchg
inc
stos
mov
mov
imul
dec
mov
sub
mov
loop
or
mov
adc
jge
mov
into
sub
push
mov
fnstenv
stc
lods
sbb
inc
cltd
jg
test
push
ljmp
imul
fisubs
scas
push
xor
nop
push
sbb
jmp
gs
add
or
aas
test
mov
imul
push
pop
sub
bound
hlt
loop
pop
sbb
mov
pushf
xlat
stos
movsl
call
mov
pop
subl
rcrb
xor
ja
adc
dec
rorl
insl
adc
mov
push
sbb
lods
add
das
aad
or
jno
sub
shrl
xchg
sub
jmp
lcall
outsl
lods
rclb
nop
movsb
and
les
mov
test
adc
movsl
mov
mov
iret
push
fwait
sub
and
and
insb
push
out
adc
mov
mov
in
clc
push
mov
fs
mov
leave
cmp
outsl
inc
daa
das
pop
cmc
fwait
inc
mov
testl
xchg
sbb
jbe
mov
sbb
insb
mov
inc
jp
es
xor
js
clc
adc
popa
fisttps
adc
jne
or
push
jl
add
push
cmpl
xlat
std
icebp
les
in
lret
cmc
mov
fbld
jae
mov
cmp
or
push
aaa
sub
dec
jmp
pop
xchg
inc
pop
xor
mov
xorl
adc
inc
out
xor
xchg
push
pusha
push
rorb
xor
jbe
sub
push
mov
push
cmp
sbb
bound
nop
cmp
out
sub
jp
and
xcrypt-ctr
cmpsl
fcmovne
das
sti
test
ret
popa
hlt
dec
add
xchg
dec
dec
mov
faddl
and
or
leave
inc
xchg
mov
xchg
rcrl
push
jno
push
popa
lahf
std
into
lret
adcl
cmp
test
inc
mov
inc
cmp
add
cmp
cmp
jg
test
pusha
sub
dec
dec
xchg
xchg
fcoml
stc
mov
sbb
pushl
adc
push
sarb
ss
cmp
sub
inc
xchg
pop
dec
cmp
into
neg
divl
add
mov
mov
mov
ljmp
ds
ret
test
add
push
and
lret
adc
pop
xchg
mov
rclb
and
cmp
int
mov
imul
pop
jo
xor
mov
loope
sub
clc
or
inc
or
pop
xchg
mov
mov
lret
jecxz
sbb
cwtl
or
sub
sti
lock
mov
push
mov
mov
pop
lds
cmpsl
nop
sub
add
mov
dec
flds
mov
jns
pushf
imul
and
sti
imul
rcll
repz
sbbl
int
mov
push
int
xchg
int
mov
xchg
andb
lret
ret
mov
jne
xchg
movsl
imul
addr16
cld
dec
or
xor
imull
sub
adc
pusha
lretw
push
mov
push
jb
xlat
ret
jns
inc
lea
cmp
cmc
aas
cltd
fsub
out
lcall
fsubrp
imull
jnp
insl
call
imul
inc
and
adc
adc
pop
test
jne
push
aam
pushf
mov
xor
adc
ja
inc
cmp
cmp
jo
lock
out
fstpt
and
pop
movsb
aad
pushf
xchg
stc
stc
mov
xchg
inc
cmovle
sub
or
jl
popa
mov
ret
fisttps
test
jmp
sub
or
in
push
in
mov
ds
xor
jmp
sbb
or
adc
mov
test
dec
xchg
mov
es
dec
jb
cmp
push
pop
cmp
cli
loopne
jmp
push
mov
test
and
pop
cmp
jg
push
push
inc
popf
movsl
loope
popf
cmpsl
dec
and
icebp
jmp
jo
movsl
negb
push
lret
fs
push
pop
loop
sub
cmp
and
adc
push
pushf
inc
test
xor
rcrb
push
cmp
adc
xor
int3
movsl
cmc
fcomip
adc
pop
jle
out
out
stc
shll
xor
loope
push
andb
xchg
lret
pop
out
adc
xor
dec
xchg
add
sub
test
and
adc
imul
jg
loope
and
shl
popa
and
dec
push
orb
sub
out
ljmp
arpl
dec
inc
push
lret
outsl
loope
and
cmp
lret
inc
faddl
scas
add
shrb
imul
fnstcw
dec
sub
pop
cli
in
stos
cmp
jbe
pop
outsb
pushf
in
xchg
sub
or
push
stc
inc
and
mov
sub
sti
ljmp
stc
shlb
fistpl
cld
das
sub
push
pusha
movsl
pop
lds
clc
insb
outsb
test
lea
xchg
ret
ret
sbb
mov
push
mov
sbb
sub
sbb
push
xchg
aad
or
mov
sbb
loopne
popf
adcb
sbb
inc
inc
imul
in
xchg
cmpsb
nop
dec
sub
sbb
mov
pxor
or
rolb
imul
movsb
fs
dec
lock
insb
int3
cmp
mov
scas
outsb
jmp
icebp
add
test
das
pop
sahf
pushf
push
fsubrs
jge
xor
mov
stos
ds
mov
push
int3
cli
rorb
stos
or
repnz
cld
bound
mov
mov
out
pop
fprem1
int3
push
inc
jle
jb
xchg
jp
movsl
sub
jno
xor
jno
out
cs
clc
cwtl
int
inc
sbb
inc
jle
rorl
lods
or
sti
outsl
call
pop
mov
mov
daa
sub
mov
mov
adcl
movsb
pusha
xchg
mov
les
cmp
out
vxorps
xchg
and
lret
ret
icebp
xchg
fiaddl
sub
cwtl
push
pop
fsubr
test
jle
inc
cmp
test
adc
fwait
js
mov
lock
shll
cmpsb
mov
jle
xorl
ret
or
popf
mov
xlat
add
jbe
and
jp
push
dec
pop
mov
mov
pop
lods
lcall
outsl
adc
mov
push
aaa
test
pop
jne
pushf
iret
aam
adc
das
scas
popf
or
outsl
jmp
rorl
pop
xchg
mov
push
dec
test
mov
mov
dec
imul
sbb
data16
sub
mov
add
dec
stos
fbld
stos
std
aaa
stos
lahf
xchg
out
sbb
test
mov
lret
xchg
inc
jmp
mov
cltd
mov
fs
test
test
nop
sub
ret
sub
add
push
adc
xor
mov
xchg
arpl
xchg
rcrl
scas
or
inc
sbb
cwtl
hlt
adc
je
dec
add
jne
xor
jb
lahf
repnz
test
pop
rorl
loopne
ljmp
stos
test
in
lret
arpl
adc
mov
cld
jle
inc
repz
stos
and
repnz
dec
repz
cmp
enter
testb
daa
stc
mov
mov
cmc
mov
sbb
or
fwait
mov
inc
fisttpll
fnstcw
sub
nopl
jp
xor
pop
pop
imull
jne
dec
ret
into
outsl
nop
jge
shrl
jecxz
xchg
cmp
xchg
test
int
stos
sbb
jp
mov
shlb
out
mov
stos
cwtl
into
jecxz
jle
mov
xor
incb
or
in
sub
mov
add
and
mov
lret
pop
outsl
aam
fs
insl
mov
insb
in
push
bound
bnd
clc
cmp
pop
jmp
xchg
popf
xchg
gs
outsb
mov
jne
mov
push
adc
and
jns
push
rcr
jmp
mov
insb
mov
cmpsl
sbb
adc
fimull
scas
sbb
xchg
mov
scas
ds
shlb
pop
sbb
imul
mov
push
sub
hlt
arpl
fildl
fdiv
cmp
shlb
or
pop
jnp
pop
jbe
daa
dec
cld
test
out
xchg
out
int3
mov
subl
nop
cs
cmp
cltd
cmpsb
mov
addr16
jl
aam
push
mov
push
rclw
mov
and
stos
test
xor
pop
mov
and
xor
inc
lock
fnsave
gs
xor
xchg
xlat
lcall
inc
inc
inc
add
adc
add
addr16
cmp
mov
ja
cmp
mov
fs
les
or
pop
dec
int3
push
jge
sub
cmp
add
outsl
xchg
xchg
lahf
xchg
fisubs
push
sbb
push
xchg
pop
cmp
push
push
mov
inc
adc
mov
sti
mov
sub
or
sub
push
jb
cmp
adc
pop
xchg
sbbb
dec
aaa
jno
xchg
enter
jns
mov
rol
in
call
into
cmpsb
xor
jae
cs
lock
test
mulb
push
pop
sbb
sub
stc
push
jo,pt
sub
lcall
js
xor
xchg
pop
xor
pop
xchg
mov
hlt
jnp
xchg
xor
jns
dec
jl
jne
cmpsl
repz
shl
and
and
ljmp
cltd
push
adc
mov
sub
pop
insb
jo
xchg
sahf
arpl
imul
bound
cmc
scas
out
call
sub
dec
popa
mov
daa
cmp
ds
jl
mov
pop
pop
test
xlat
or
bound
inc
dec
sbb
pop
jns
into
or
repz
sbb
dec
out
stos
pop
push
mov
cmpsl
mov
sti
mov
adc
inc
stos
fmul
xor
pop
inc
mov
hlt
xlat
cmp
mov
inc
xchg
or
insb
or
addr16
mov
movsb
cltd
call
fmull
mov
ja
adc
test
cmp
pop
scas
push
xor
mov
ret
push
cmp
mov
or
lahf
jb
lds
hlt
inc
sahf
push
or
fisubrl
lcall
push
sbb
xchg
aaa
sbb
lock
cmp
pop
mov
mov
pushf
jle
hlt
jae
fcmovbe
stos
lods
mov
sub
or
stc
mov
imul
sti
xchg
cmp
cli
jo
push
lods
fiadds
sbb
mov
fstl
mov
je
mov
or
movsl
dec
mov
and
pop
or
fwait
sti
lret
jmp
mov
jecxz
fldl
cmc
pop
mov
mov
hlt
shr
iret
daa
adc
and
xchg
sub
cmc
adc
inc
jno
pushf
pop
jp
or
xchg
or
movsb
cmpsl
mov
pop
adc
add
loopne
loop
cmp
mov
and
aad
insb
xchg
pop
xchg
insl
lock
mov
sbb
call
push
adc
and
clc
pop
or
out
jne
jge
inc
dec
xchg
lret
rclb
cmp
cmc
popf
add
aaa
push
call
hlt
pop
aaa
je
iret
movsb
insl
cmp
mov
adc
push
adc
xchg
out
adc
pop
mov
pop
shr
mov
aaa
cs
repnz
cmpsl
pop
fsts
push
sbb
jae
pusha
rcrl
rorb
leave
or
xchg
xchg
jmp
xchg
popf
clc
fwait
scas
lock
pop
ficomps
adc
addr16
push
orb
sbb
sarb
pop
jle
fcomip
dec
out
out
cmc
fidivl
mov
xchg
cli
jle
scas
test
cmp
fisubrl
sti
leave
fs
jl
loop
scas
jne
add
or
aam
xor
push
aas
sub
sub
enter
jmp
mov
dec
xchg
in
imull
mov
cmpsb
cs
dec
add
xlat
pop
mov
mov
mov
ja
hlt
xor
jmp
je
imul
push
mov
mov
dec
add
mov
clc
inc
add
sbb
out
mov
xchg
adc
inc
mov
fistpll
loop
jbe
mov
and
repz
sbb
lahf
repz
push
push
adc
leave
fs
pop
lret
aad
addr16
insb
pop
daa
scas
push
or
sub
fmull
or
or
mov
xlat
mov
mov
xor
hlt
lret
cmp
movsl
sbb
nop
inc
jp
cld
mov
and
cmp
sub
mov
sub
test
in
pop
inc
js
divb
out
inc
ret
fadd
xor
cmc
or
inc
jle
daa
push
add
mov
aad
fnstsw
hlt
jae
lods
mov
push
and
in
mov
push
popl
jbe
mov
movsb
jmp
push
inc
cmpsl
add
mov
adc
inc
lock
push
xchg
daa
je
dec
mov
adc
aas
inc
pcmpgtd
mov
mov
mov
fildl
adc
xchg
pop
inc
mov
js
jbe
pusha
inc
fistps
xor
add
xchg
das
lret
mov
cmp
fsubrl
aas
cwtl
mov
sti
js
sbb
cmpsb
cmp
lret
ds
sub
push
rclb
jle
das
pushf
shr
cmpsl
repz
ja
mov
add
dec
movsb
popf
scas
sbb
jg
jmp
jmp
jl
loope
jge
jle
mov
dec
stos
sub
aaa
or
call
jns
mov
sbb
push
sbb
sbb
rcll
outsb
inc
popf
xchg
xchg
out
test
cmpl
cmpl
sbb
int
jg
push
mov
jmp
fsubs
mov
popf
pop
pushf
jp
sbb
ds
xor
sbb
js
insb
out
mov
xor
ffree
lods
inc
inc
in
and
push
je
push
inc
mov
das
fwait
xor
mov
or
cmc
dec
jmp
adc
push
outsb
scas
into
mov
mov
rcrl
pop
outsl
dec
mov
mov
ret
and
xor
mov
pop
or
call
es
cltd
iret
pop
arpl
in
mov
mov
std
cmpsl
pop
cmp
cmp
imulb
pop
jo
pop
outsl
test
test
adc
pop
loope
cmp
cld
sub
or
sbb
inc
subb
cmpsl
xor
pop
mov
pusha
aam
int3
mov
sbb
inc
int3
mov
scas
adc
aaa
xor
sbb
add
sub
xchg
mov
sbb
sbb
xchg
jp
repz
jne
push
fcoml
push
pop
pop
arpl
jne
add
fmuls
jg
pop
daa
out
adc
pop
cmp
push
dec
pushf
mov
ret
fidivrl
fisttpl
inc
mov
aam
pop
dec
inc
adc
in
mov
adcb
jo
xchg
dec
dec
ds
xor
shlb
cmc
ja
imul
into
push
xor
cli
lock
jne
idivb
xchg
xchg
hlt
cmc
dec
adcb
dec
push
mov
pop
sub
test
inc
xchg
pusha
mov
jmp
xchg
daa
jmp
outsl
jg
movsl
cwtl
jge
movsl
adc
jl
adc
loop
pop
sbb
cltd
into
adcb
das
cmpsb
mov
movsb
adc
or
cs
mov
inc
in
cmp
mov
mov
js
sub
es
sarl
push
and
xchg
jge
xchg
lods
mov
jl
loope
or
jne
rcrl
clc
or
lea
sub
out
pop
pop
imul
subb
push
pop
mov
xchg
xlat
cmp
xor
jecxz
mov
add
into
test
lahf
mov
mov
stos
scas
sub
imul
push
add
pop
mov
mov
pfsubr
and
data16
add
or
stos
lahf
add
pushf
or
pop
cmc
sbb
pop
mov
or
test
leave
popa
sub
cmp
test
add
push
into
dec
push
jns
mov
call
inc
es
test
cli
dec
fwait
in
sbb
mov
jmp
mov
pop
dec
in
pushf
xor
int
pop
out
jge
xchg
inc
mov
sahf
push
xchg
aad
test
enter
jl
mov
add
cmp
out
loop
jnp
mov
xorb
outsl
out
ja
leave
jp
xor
cmp
cmp
mov
in
dec
fmuls
insb
jp
mov
xor
in
js
xchg
sahf
mov
sub
fcomip
and
gs
gs
cmp
stos
sub
jns
jo
and
fnstsw
bound
cmp
cmp
mov
adc
adc
popf
add
aam
lahf
lcall
adc
call
shlb
repnz
xchg
aas
jge
inc
adc
push
mov
sbb
dec
addr16
fldcw
xor
cmp
inc
stc
push
push
dec
cli
xor
dec
aaa
addr16
call
orl
rcl
lret
inc
test
adc
mov
sbbb
test
sbb
mov
pop
test
cmp
lret
loopne
xchg
xchg
push
outsb
jns
cs
stos
hlt
rolb
int
enter
or
aad
jb
jnp
adc
dec
jno
pop
or
cli
popa
adc
jo
call
mov
push
adc
sbb
ljmp
push
push
sarb
and
lret
sar
jb
jp
sub
stos
push
popa
sahf
inc
movsl
cwtl
dec
dec
or
and
pop
sbb
enter
inc
aad
mov
adc
movsl
xchg
lods
mov
out
jnp
out
lds
push
inc
imul
lar
icebp
pop
cmp
xchg
add
or
stos
pop
ret
mov
add
je
fdivs
lods
pusha
sub
push
dec
add
or
inc
xchg
outsl
test
movsb
outsl
sub
out
mov
hlt
mov
push
jmp
cwtl
mov
punpckhdq
sub
pushf
popa
push
pop
and
out
cli
sbb
mov
in
xor
sub
push
jbe
rcl
cmpsl
movsb
mov
inc
pop
pop
add
xor
shrl
fwait
pushf
jmp
xchg
iret
lcall
popf
mov
cmp
fdivrs
aaa
add
call
aas
icebp
imul
sbbl
inc
loop
push
cltd
cltd
shlb
and
fdivp
repnz
inc
and
mov
repnz
or
or
push
or
cwtl
loopne
std
jg
movb
ja
inc
push
loop
in
stc
xor
and
fnstenv
hlt
push
add
dec
rcll
sub
sbbb
orl
outsl
ret
rclb
neg
push
xchg
or
daa
mov
clc
mov
adc
xchg
aaa
pop
pop
lret
jecxz
adc
and
cld
lds
movsb
sti
cli
cli
xorl
clc
inc
jmp
sbb
add
rclb
in
push
rcpps
cli
sbb
dec
shrb
cmc
out
int3
ds
xchg
mov
test
and
add
push
imul
pop
shlb
int
out
imul
mov
dec
sub
test
div
in
test
sbb
xor
in
jmp
lds
scas
sbb
ffree
aam
in
pop
push
in
mov
mov
icebp
out
dec
dec
adc
sbb
cmp
pop
adcl
cmp
cli
sbb
popf
jne
pop
sti
mov
mov
dec
popf
jne
lret
sbbl
std
mov
out
xchg
cmp
dec
fxch
mov
nop
push
ret
out
mov
xchg
jecxz
sub
jl
jle
clc
out
test
pop
adc
fldl
and
xchg
jnp
mov
sub
out
ret
push
or
cmc
jg
sub
mov
sub
cmp
or
ja
jp
or
fidivrs
mov
sbb
aaa
rcrb
mov
xor
mov
cmpsl
bound
imul
shr
mov
mov
enter
jg
sbbl
loopne
sahf
adc
cli
movsb
inc
fwait
enter
lcall
mov
imul
mov
pop
push
jne
mov
xor
ret
xchg
mov
pop
orb
pop
ja
pop
fimull
dec
lcall
jmp
pop
out
pop
fstpt
jae
mov
in
sbb
xchg
xchg
pop
jb
pusha
and
jp
lret
mov
test
mov
push
inc
repz
push
ret
lds
repnz
test
cmpsl
addb
cmp
rolb
push
dec
es
mov
jnp
dec
sbb
mov
and
js
mov
mov
test
jae
and
and
jp
scas
add
cmp
jbe
cmp
mov
mov
cmpsl
mov
js
cmp
inc
mov
mov
push
push
ret
push
fwait
pop
andl
lea
xchg
fstpt
xchg
test
shll
cmpsl
inc
or
pop
xchg
fs
jp
xchg
xchg
idivl
cld
outsl
or
test
push
je
arpl
push
popf
out
adc
pop
pop
fisubrs
insb
lods
sarb
fildl
jne
rcrb
fnsave
xor
cli
in
stos
jb
and
test
lds
pop
pop
data16
push
xchg
out
xor
pushl
dec
ljmp
pop
mov
cli
es
adc
cli
pop
loop
arpl
xorl
mov
arpl
inc
dec
mov
xchg
nop
aas
sbb
gs
sub
repnz
xchg
xchg
hlt
int3
mov
shrl
pop
imul
frstor
and
cmp
inc
adc
addr16
in
stc
sti
xchg
add
lahf
shrl
shrb
inc
mov
lock
mov
mov
xchg
inc
pop
push
popf
sub
lret
pop
add
xchg
cmp
insb
jne
out
sub
in
jae
dec
adc
test
xor
gs
data16
and
leave
or
mov
rcrw
aaa
into
repnz
xchg
push
jge
sbbl
cli
adc
jbe
int3
mov
or
adc
shrb
into
jns
ret
je
add
jae
lcall
xchg
push
mov
ret
dec
dec
push
scas
mov
xor
int
mov
clc
pop
cmp
sub
roll
xor
xor
and
pop
inc
jg
sub
gs
sbb
push
inc
and
sub
mov
mov
adc
push
adc
out
inc
cmp
xorl
or
pop
add
fbld
sub
hlt
or
ret
clc
cmc
rolb
sarb
cltd
adc
int
sub
bound
outsb
mov
icebp
and
sub
addr16
fldl
and
xchg
imul
lea
push
fdecstp
ss
aaa
iret
adc
cld
repz
sbb
add
shl
push
xor
ja
push
xchg
dec
or
repnz
or
push
xor
pop
test
rolb
adc
outsb
shll
add
ret
push
out
adc
cs
ja
pop
aaa
adc
pop
clc
movsl
dec
cmp
mov
fisubs
lds
cld
mov
aam
es
sbb
inc
outsl
arpl
jno
loope
mov
sbb
xchg
ss
cmc
add
fstpl
fucomip
or
in
mov
mov
int
dec
hlt
jecxz
rorl
sub
and
test
call
push
xchg
inc
lods
sub
push
xchg
mov
jb
inc
jge
imul
shll
jne
out
adc
mov
rcll
movsb
fcompl
xor
mov
mov
or
test
or
mov
or
nop
pop
sarl
cmp
movsl
xorb
mov
in
rcrb
push
push
pop
or
dec
imul
jne
mov
iret
mov
push
jno
sbb
iret
jnp
sbb
or
and
je
imul
pop
jb
xchg
pop
in
xor
push
jg
adc
jns
lahf
jp
rolb
add
xchg
add
testl
loopne
lods
cli
add
fs
cmp
pop
lea
out
xor
jb
cmp
incl
jns
in
cmp
and
lcall
cmpsl
mov
ret
pop
sti
add
rclb
nop
and
adc
cvtps2pd
cmp
push
repnz
lods
popa
dec
inc
repnz
out
jl
mov
cmp
pop
movsl
insl
sbb
sub
inc
into
int
xchg
add
adc
sti
inc
addr16
arpl
enter
jl
outsl
xchg
dec
pop
ja
jecxz
dec
enter
mov
mov
gs
arpl
xchg
mov
dec
cmp
push
loop
movsl
popl
imul
xlat
xchg
out
out
xchg
cwtl
mov
push
mov
lret
shll
in
and
dec
scas
fimuls
and
mov
pop
xlat
sti
lods
nop
mov
in
mov
xor
adc
lret
fldenv
mov
enter
hlt
mov
scas
hlt
movsl
mov
ret
sub
dec
sbbl
in
push
divb
jbe
xlat
sub
adc
das
push
sbb
push
nop
in
xchg
fidivrl
lds
push
ret
xor
lret
aas
test
jnp
movswl
data16
mov
add
mov
jbe
inc
testl
or
jl
push
stos
push
nop
jg
not
lret
sub
pop
add
jns
icebp
dec
xchg
dec
cmp
push
inc
ss
cld
adc
and
outsb
repnz
push
fildll
cmpsb
push
xlat
rcrb
xchg
adc
cmc
add
cmp
pop
movsl
xor
mov
pop
mov
sub
enter
xchg
fimull
inc
out
jg
mov
mov
add
mov
mov
xchg
ds
add
jmp
or
es
les
mov
cmpsl
lret
loopne
scas
lcall
xchg
push
cli
mov
sub
lock
ret
ljmp
clc
ret
movl
int
daa
pop
sbb
or
sbb
stos
out
pop
mov
lds
nop
enter
inc
subl
loope
hlt
scas
rcrb
lods
push
movsb
iret
sahf
rep
inc
xor
adc
lds
jmp
or
pop
fcoml
rcl
jecxz
in
ja
loope
aaa
andl
addr16
mov
xchg
cmc
pop
ss
sub
and
sub
out
inc
xchg
cmpsl
xchg
cmpsb
cmp
mov
dec
clc
pop
in
adc
std
mov
movsbl
loop
lret
push
mov
lahf
icebp
xchg
push
adc
mov
sub
and
test
loope
push
inc
int
fwait
aas
pop
fisubrl
pushf
mov
adcl
mov
xchg
test
or
sub
dec
xor
out
in
xchg
aam
push
push
mov
hlt
loopne
movsb
out
cs
loop
push
or
add
cmpl
cwtl
jo
loopne
subb
adcb
in
mov
xchg
jp
movsb
call
mov
inc
ljmp
and
cmp
sbb
inc
cltd
xchg
cmp
push
icebp
subl
ljmp
jp
popf
dec
push
and
xchg
dec
xchg
dec
idivb
adc
shll
fnsave
into
out
in
xor
rcll
mov
cwtl
cmc
jp
stos
mov
mov
dec
add
stos
mov
dec
xor
repnz
pop
loope
push
cwtl
lret
es
ret
cmp
jp
or
or
faddp
inc
test
sarb
xor
pop
jl
je
and
sub
mov
inc
pusha
incb
add
repnz
dec
dec
dec
xor
stos
pop
xor
out
ljmp
pushf
mov
and
xchg
pop
xchg
mov
lahf
adc
lcall
adc
inc
ljmp
movsb
cltd
cmp
clc
cmpsb
aad
ds
dec
sub
stos
inc
mov
add
add
in
outsb
adc
mov
test
jmp
outsb
shl
dec
mov
mov
orl
pop
mov
xchg
inc
xchg
jg
psadbw
push
cltd
incb
movb
sahf
mov
mov
out
xchg
dec
insb
sbb
mov
push
ss
and
mov
jo
lea
jp
mov
mov
loop
jge
xchg
call
fidivrs
dec
push
filds
xor
pop
pop
sbb
sub
rolb
frstor
or
add
fwait
loope
xor
icebp
dec
push
cmpsl
xchg
mov
fs
test
mov
mov
pop
mov
or
mov
jns
fadds
sub
push
cmp
cmp
hlt
ret
mov
xchg
and
divl
cs
fisttps
mov
loope
jb
clc
jl
test
lahf
repz
sub
cmpsb
cmp
dec
inc
popf
leave
fisubs
out
sub
mov
push
or
xor
jge
inc
bound
sbbl
pop
adc
pusha
sub
inc
and
repnz
jne
push
arpl
jge
loop
in
and
jle
push
cmpsb
out
test
dec
push
jne
xchg
test
jne
xor
cmpsl
mov
jae
and
pop
ljmp
out
hlt
jo
xchg
pop
sub
mov
js
and
lret
xchg
enter
rol
inc
inc
jne
add
aad
inc
inc
fldt
mov
addr16
int3
shl
mov
xchg
jl
xlat
ja
imul
add
out
out
rcrb
adc
test
mov
fnstenvs
scas
mov
push
xlat
jg
sbb
lcall
xor
mov
clc
data16
dec
in
mov
insb
push
and
popf
call
iret
jbe
jecxz,pt
jl
xchg
sbb
pop
inc
ret
add
mov
push
mov
fs
gs
xchg
jae
lods
cmpsb
data16
inc
loopne
pop
mov
ss
xchg
out
mov
fadds
stos
out
mov
stc
out
jmp
addr16
adc
push
into
xor
rorb
dec
addr16
add
lahf
xor
loopne
insb
pop
iret
sub
mov
jecxz
call
jns
sbb
cmp
pop
int3
arpl
mov
fs
data16
sub
mov
inc
xor
stos
push
jbe
add
add
in
shlb
xchg
mov
dec
mov
adc
je
jns
ret
jp
push
inc
mov
test
add
push
adc
das
push
imull
and
scas
in
rclb
repnz
xor
ror
mov
aaa
fbstp
fisttpll
scas
imul
adc
or
bound
arpl
hlt
out
jg
inc
inc
ret
loop
aam
arpl
and
mov
jmp
das
push
add
das
rol
aad
sub
cltd
dec
pop
and
cmp
inc
rcr
lods
push
jge
je
cmp
xor
jae
xchg
xchg
call
jmp
xchg
orb
daa
inc
imul
pop
jo
sub
jno
add
cmp
dec
cmpsb
adc
movsl
mov
inc
push
shrb
cmc
push
mov
xor
inc
imul
or
int3
scas
and
std
mov
mov
sub
mov
imul
adc
mov
pop
ss
out
add
xchg
mov
test
xchg
test
mov
jge
mov
and
cmp
lret
add
inc
insb
out
lret
pop
sbbl
rcll
cwtl
or
xor
xor
jns
lea
mov
fcmovnu
lcall
jmp
dec
cmpl
ret
mov
xorl
mov
add
sbb
testb
mov
rcrl
nop
inc
jbe
call
mov
repnz
push
or
pop
outsl
movsl
pop
int3
mov
std
pop
sbb
jge
add
cmpsl
inc
push
adc
or
cmp
mov
insb
push
lret
pop
inc
adc
push
scas
jg
dec
int
pop
fwait
adc
cwtl
mov
pusha
push
mov
add
aad
ds
pop
pop
xor
inc
cmp
cmp
insl
mov
cld
pusha
mov
pop
lea
je
ror
jg
mov
not
xchg
dec
sbb
pop
std
and
inc
and
fs
mov
loope
dec
push
les
xor
cmp
outsb
cs
sahf
mov
mov
lcall
nop
movsb
xlat
popf
xchg
lods
pop
and
or
lock
imul
in
dec
adc
imul
mov
mov
pop
pop
pop
pop
lahf
cmpsl
xor
cmc
jo
mov
lea
xor
push
imulb
iret
mov
sbb
sahf
cmpsb
fildll
adc
pop
aas
mov
mov
aas
fistl
repz
cmc
cld
lret
sldt
mov
cmp
jnp
dec
mov
dec
inc
and
sub
cld
inc
nop
mov
push
cmpsb
mov
jbe
scas
push
aas
out
lea
sbb
xchg
mov
sbb
imul
jle
mov
and
sub
pop
pusha
test
lret
lea
lcall
jo
in
insb
faddl
sar
lcall
imul
ljmp
int
mov
and
add
sub
dec
lret
mov
loop
or
add
push
loop
adc
cmpsb
loopne
int3
dec
push
adc
call
inc
add
and
int
mov
cmpsb
add
mov
cmp
ret
sbb
jle
aad
dec
test
fmull
adc
xchg
cmpsb
cmp
push
setae
sbb
js
and
mov
pop
or
bsf
or
pop
mov
and
cmc
insb
in
fsubr
insl
ljmp
mov
in
popa
cs
jno
xor
ljmp
hlt
jae
ret
imul
cmp
leave
sub
inc
mov
loopne
xchg
jmp
cwtl
mov
cltd
or
decb
push
jns
inc
and
leave
test
test
adc
and
js
mulb
cmpb
imul
dec
mov
xchg
loop
int
aaa
rcrl
ljmp
enter
xor
orl
dec
dec
int
fisttps
sbb
adc
ficoms
outsb
pop
jmp
cmpsl
data16
pop
mov
inc
cwtl
aas
mov
pusha
dec
push
movb
ret
or
cmp
push
out
das
and
cmp
leave
or
pop
pop
add
repz
or
pop
sbb
imul
xor
or
push
fstps
push
push
sti
test
adc
daa
enter
push
adc
sbb
imul
pop
xchg
xchg
test
sbb
lcall
inc
mov
inc
xchg
xor
out
mov
ja
jae
push
mov
mov
jg
jae
addl
cmp
or
pushf
subb
sub
sbb
sbb
rcrb
mov
repz
mov
xor
fs
adc
push
loopne
cmp
aad
jae
inc
pushf
ja
jmp
pop
or
sahf
inc
ds
add
shr
xor
dec
mov
mov
aas
mov
ljmp
mov
jb
pop
lock
int
ficompl
fiadds
mov
aad
inc
mov
fdivr
cwtl
les
jg
lea
stc
mov
xchg
jns
cmp
fs
jae
les
dec
fwait
in
test
xor
mov
fcmovnbe
mov
imul
loope
mov
cmp
cwtl
mov
mov
icebp
stc
add
xchg
pop
bound
dec
in
push
in
xchg
out
lea
ss
out
arpl
sbb
xor
jbe
loopne
scas
mov
or
ja
adc
iret
aas
add
loop
sbb
or
sbb
sub
cmp
inc
adc
mov
lahf
adc
lods
add
stos
pusha
xchg
sub
sub
pop
adc
cmc
inc
clc
out
scas
and
out
jle
xor
es
das
or
stc
jl
out
sti
jbe
pop
xchg
lret
push
xchg
jns
imul
outsb
andb
repz
jecxz
leave
pop
sbb
popf
add
std
andb
les
push
lcall
pop
lock
push
imul
sub
pop
jno
fldl
push
out
adc
push
push
push
and
or
imul
dec
and
cmp
rcll
movsb
test
xchg
mov
roll
xor
dec
out
cwtl
mov
dec
mov
xchg
std
aaa
fdivl
mov
imul
aam
lods
mov
adc
popa
into
test
out
rol
mov
test
xchg
xchg
pop
mov
jb
mov
pushf
imul
add
lock
sub
dec
inc
cmp
addr16
out
ds
je
mov
xchg
pop
add
call
pop
mov
jb
fsubr
stos
jnp
fstps
add
or
loope
or
sub
shl
cmp
in
pop
fidivl
movsl
push
mov
fsubrl
jno
rcll
or
lcall
mov
jl
sbb
repz
in
add
in
insl
lds
inc
sbb
jns
jg
xchg
xor
lret
xor
add
mov
loope
and
enter
or
adc
mov
mov
or
cmp
adc
add
dec
lock
dec
or
std
jbe
pop
and
repz
mov
add
dec
leave
sub
push
mov
jge
shrl
out
sti
dec
and
shlb
cmp
add
cmp
xchg
and
sub
cmp
add
mov
xlat
push
mov
in
fstpl
nop
outsb
pop
stc
int3
bound
xchg
jp
dec
mov
adc
cmp
fs
out
loope
rorl
bound
inc
outsl
out
mov
outsb
fstpt
int3
inc
dec
jae,pn
lret
fstp
idivb
test
les
out
xor
pop
ss
cmp
rolb
sub
por
arpl
mov
add
les
das
jbe
sub
testb
cmc
idivl
hlt
dec
mov
subb
pop
sub
or
pushf
cld
ss
dec
lods
cmp
jno
lcall
jo
mov
jns
cmp
pop
xor
dec
ds
ljmp
mov
push
fisttpll
mov
add
bound
fsubrl
jle
test
xchg
sub
mov
xchg
test
mov
sbb
outsb
fnstsw
sbb
into
lods
rcrb
pop
lds
mov
sti
test
jne
mov
loop
jp
pop
or
mov
jo
in
push
wbinvd
sub
pop
stc
repz
or
pop
push
andl
loop
iret
cmc
fimuls
mov
add
pop
andps
js
in
dec
cmpsb
ficomps
xchg
xlat
test
inc
mov
adc
lahf
test
ja
inc
sub
movsb
xchg
mov
lret
imul
pop
jno
loopne
int3
mov
mov
push
out
popa
loop
mov
adc
xchg
cmp
xchg
sub
push
mov
ljmp
inc
in
stos
mov
and
ja
jg
insl
les
jae
xchg
adc
adc
cltd
or
les
in
loop
insb
and
jae
xor
mov
idivb
xor
sbb
and
rol
inc
nop
les
fsts
outsl
stc
pop
fimuls
hlt
ficoml
iret
insl
mov
jno
xor
inc
or
in
cmp
mov
pop
inc
cmp
outsb
stc
fcomip
test
sub
sub
xchg
dec
imul
cmpsb
sub
sub
mov
xchg
lcall
repnz
shll
imul
gs
inc
je
pop
add
xor
sub
lods
mov
std
loopne
add
movsb
cmp
arpl
lea
dec
test
jae
mov
aaa
mov
xchg
test
inc
cltd
js
stos
xor
xor
pop
das
sbb
mov
outsl
movsl
ret
mov
out
or
ror
repnz
ja
adc
mov
mov
cmp
xor
xchg
mov
push
int3
movsl
mov
repz
jae
mov
or
fidivs
xchg
or
add
jmp
dec
or
sahf
ficoms
pop
adc
sbb
ror
add
push
negl
enter
ljmp
push
lods
jnp
cmp
pop
dec
push
sbb
push
adc
das
jne
pop
fbld
mov
fs
jg
push
and
cwtl
popl
dec
sti
rcrl
push
ja
dec
or
and
scas
sub
pop
int
push
gs
push
iret
loop
std
sub
sbb
stc
rcll
cmpsl
daa
lods
xchg
lea
fsubs
add
mov
sbb
fsts
int3
mov
leave
xor
call
pop
outsb
or
mov
sbb
cmp
jo
es
push
inc
inc
push
aad
sub
gs
fcomps
add
arpl
push
dec
rolb
sub
mov
lahf
or
pop
enter
sub
pop
ds
mov
aas
imul
xor
mov
or
inc
in
mov
je,pt
fnstcw
mov
pop
btsl
imulb
inc
pushf
push
gs
sahf
pop
dec
mov
ss
lods
cs
add
ja
cli
dec
xchg
mov
pop
pop
mov
push
mov
ljmp
sub
mov
mov
xlat
jo
mov
jbe
aas
hlt
test
adc
sub
jp
sbb
add
lret
shr
mov
cld
rorl
repnz
dec
add
adc
sbb
and
lret
fstp
pop
cmp
and
mov
scas
iret
bnd
inc
stos
dec
or
adcb
shlb
insl
subl
lods
xchg
repnz
pop
jle
int
sub
lds
cld
and
pop
dec
pop
iret
std
xchg
adc
repnz
gs
iret
mov
xchg
sahf
or
adc
gs
jmp
mov
adc
mov
imul
ss
outsb
pusha
mov
lods
cmp
ljmp
jmp
repnz
push
add
test
rclb
out
mov
cmpsb
shrl
adc
mov
out
lods
sub
sub
lcallw
pop
push
lahf
push
clc
lret
xchg
jno
mov
loopne
inc
aas
leave
inc
lcall
mov
lcall
jbe
clc
and
adc
dec
sub
out
push
xor
fistps
imul
pop
push
sahf
mov
fidivrl
out
int3
inc
xchg
inc
js
adc
decb
xchg
int3
je
add
loope
bound
shll
icebp
lret
nop
jp
xchg
push
mov
loop
insl
adc
jno
inc
jmp
inc
cmp
mov
jge
sbb
pop
dec
jno
inc
and
fadd
stos
pop
or
pop
bound
mov
jbe
sbb
mov
cmc
xchg
insl
test
adcl
xchg
mov
jecxz
sub
lea
sbb
out
push
fistps
jbe
jo
in
loopne
and
stos
test
lea
stc
inc
cs
jbe
sbb
sub
lods
mov
shrl
sub
push
call
js
shll
and
cwtl
pusha
adc
cmc
fs
fstl
jo
mov
jb
xor
inc
lahf
rcll
mov
fbstp
lods
out
scas
or
daa
mov
jns
jmp
adc
test
data16
test
push
push
mov
dec
out
xchg
mov
jbe
mov
jmp
sar
leave
negl
sarl
shlb
pop
dec
test
pop
xchg
test
neg
add
lods
xchg
dec
fmul
orb
sub
lahf
xchg
outsb
out
push
push
mov
pop
enter
xchg
test
mov
xor
cs
ficompl
je
outsl
popa
mov
jle
icebp
out
syscall
jle
cltd
mov
test
push
xchg
movsb
sub
xor
dec
xchg
push
pop
je
xchg
dec
fs
and
inc
push
insl
je
jns
cmp
mov
aam
pop
fwait
pop
cs
lods
loope
cmp
fcmovb
mov
cmp
shrl
decl
xor
mov
push
dec
aas
int3
push
les
cmc
or
cmp
fs
mov
cmp
jg
push
cwtl
mov
sbb
xor
pusha
into
jmp
inc
nop
test
push
pop
dec
mul
mov
mov
jg
sbb
gs
cmp
push
and
cli
out
data16
repz
gs
pop
or
dec
push
das
in
xor
pop
mov
and
jne
aaa
jno
and
or
mov
pop
jns
ja
sbb
or
gs
aam
lret
popf
fwait
xor
mov
jnp
fstpl
jl
outsl
movsl
aas
or
sbb
test
mov
sub
lea
icebp
mov
into
xchg
pop
scas
push
aad
call
push
in
je
jns
jne
jl
insl
sub
test
ss
scas
scas
push
push
and
sub
mov
cmp
mov
mov
mov
out
sub
and
jecxz
inc
dec
aaa
add
sub
mov
lods
outsb
std
arpl
loop
xchg
shlb
ret
mov
xchg
mov
out
inc
xchg
inc
mov
aam
sbb
pop
mov
push
xchg
mov
add
into
jb
out
cmpsb
out
and
mov
jns
js
mov
int
xor
hlt
scas
mov
inc
mov
das
jmp
bswap
mov
mov
mov
sarl
mov
cmp
dec
push
xchg
insb
filds
xchg
lahf
sub
add
loopne
push
popa
xor
adcl
dec
xor
xchg
sar
in
push
mov
pop
jl
nop
fisttps
into
jo
arpl
sti
add
push
pop
inc
pop
nopl
movswl
jae
adc
dec
sbb
clc
lahf
hlt
imul
in
xor
imul
mov
add
or
push
hlt
fisubs
add
or
into
pop
cmp
sti
lret
push
aam
repnz
dec
sahf
pop
sub
testb
into
jae
mov
xor
push
adc
pop
fstl
sub
lret
imul
and
lcall
xchg
mov
fdivr
add
ljmp
lods
mov
xchg
pop
mov
rcl
movsb
mov
adc
inc
outsl
pop
rcrl
or
xchg
adc
mov
add
pushf
or
xor
push
sbb
xor
data16
xchg
pop
sub
adc
fisttpl
stos
lods
out
rcrb
adc
in
inc
stc
sti
cs
pop
sub
pop
cmp
lahf
jb
fisubrs
xlat
mov
cmp
test
clc
xchg
cmp
mov
cmpsl
test
ret
cwtl
fldt
fildl
sbb
scas
or
adc
inc
scas
dec
jmp
cltd
iret
cmpsl
orb
das
xor
das
subl
xlat
mov
dec
bound
nop
inc
inc
out
jno
arpl
xor
adc
mov
clc
orl
fdivl
outsl
cmp
xchg
inc
out
in
pusha
fwait
sbb
and
daa
lock
push
mov
lcall
hlt
in
pop
cs
cmp
jno
lret
lcall
sub
repz
mov
in
push
cli
int3
cmp
mov
cmpsb
cmp
sub
xorl
xor
and
jae
push
sarl
call
frstor
add
and
sub
pop
push
push
fs
js
leave
lods
jle
rorb
cwtl
insb
mov
arpl
das
outsl
push
push
negb
bound
fs
xor
aaa
and
pop
cmp
dec
push
add
or
ljmp
jns
fmuls
mov
popf
testl
mov
insb
or
vpavgb
xchg
out
repnz
popf
hlt
mov
mov
lret
rcrl
jle
xchg
inc
pop
and
gs
loop
addr16
mov
push
es
pop
das
lret
dec
iret
jg
mov
stos
mov
negl
fmulp
popa
inc
mov
in
std
orl
icebp
xchg
ja
sub
xchg
jno
daa
cmp
xchg
pushf
stos
cmpb
js
mov
and
mov
sub
rolb
or
jb
test
mov
pop
push
adc
es
mov
push
leave
test
cmp
loope
jns
iret
xlat
jne
cwtl
lret
inc
cmp
cltd
gs
icebp
push
push
out
fwait
sbb
push
pop
push
mov
push
lods
lods
mov
movsb
or
out
cs
fnstcw
sub
movsl
mov
stos
mov
mov
dec
push
push
and
enter
mov
push
cmp
mov
std
dec
lcall
loopne
out
mov
cmp
dec
pop
inc
push
xchg
pop
lea
incb
movsb
ret
data16
mov
jmp
pop
call
cmp
leave
dec
fs
pop
sbb
mov
mov
mov
jecxz
dec
rdpmc
jnp
sbb
sub
hlt
hlt
loop
fst
pop
jns
ret
add
movsb
xchg
mov
out
inc
dec
mov
sub
dec
out
insb
pop
cltd
test
mov
and
sbb
lcall
fistl
iret
outsb
sub
shll
add
cltd
dec
xlat
mov
mov
or
jmp
stc
push
mov
mov
xchg
or
and
cmp
outsb
lods
dec
popf
pop
mov
add
gs
and
inc
xor
stos
js
lahf
xor
or
pop
xlat
dec
bound
addb
push
in
mov
aaa
stc
cmp
add
in
cwtl
inc
cmp
push
sbb
or
icebp
and
push
ror
arpl
mov
cli
or
jnp
out
sub
dec
sub
mov
das
aas
cmp
test
out
add
mov
cmpsb
jge
add
jge
scas
pop
ljmp
jo
or
adcb
and
es
lods
bound
js
mov
lods
aaa
lods
clc
shrb
xor
xor
out
insb
lcall
jge
jmp
sub
jo
jnp
jmp
mov
inc
iret
jmp
jo
pop
push
xchg
gs
add
clc
outsb
icebp
cmpsl
mov
adc
dec
in
dec
mov
jl
scas
data16
lods
pop
or
mov
aaa
pop
shl
dec
outsb
mov
add
fidivrl
mov
inc
xor
nop
cmc
sar
inc
pop
or
rcl
mov
mov
mov
shll
lcall
out
ds
mov
sbb
iret
pusha
xchg
sbb
dec
ret
loopne
std
push
loop
leave
jg
clc
push
xchg
xchg
lcall
jae
subb
xchg
adc
adc
loop
ss
shll
cmp
fwait
or
faddl
popa
sub
lret
daa
pop
in
lds
pushl
xor
ret
out
pop
rcll
pop
xor
and
fld
and
jnp
mov
out
and
pop
js
mov
cmpsb
mov
fimuls
jns
inc
xchg
in
insl
push
push
jmp
out
pop
insb
repnz
test
cmp
leave
fimuls
sub
loop
sub
lahf
loop
sbb
xchg
std
pop
dec
lock
pop
aad
loopne
mov
mov
push
jl
add
jge
cwtl
outsb
mov
jae
popf
add
icebp
std
leave
and
push
sub
dec
loop
es
lret
dec
jge
scas
and
repnz
mov
repz
push
daa
addb
mov
mov
dec
mov
cs
je
jmp
cwtl
push
mov
test
adc
cmc
mov
addb
adc
or
xchg
xchg
cmpsl
mov
sbb
adc
ljmp
scas
fxam
ret
hlt
out
cmpsl
icebp
and
aas
adc
dec
adc
jbe
daa
sbb
xor
push
scas
inc
js
cld
stos
push
pop
dec
mov
inc
lea
jmp
icebp
ret
cld
ja
pusha
xor
cmp
scas
fcmovu
and
adc
movsl
gs
jl
pop
mov
sbb
mov
mov
push
mov
mov
cwtl
and
push
pop
inc
pop
or
cmc
cmc
pop
mov
shrb
pop
or
adc
repz
call
mov
sbb
and
dec
mov
insb
sbb
mov
jge
ljmp
into
lds
nop
mov
scas
dec
dec
push
lock
fucomp
dec
and
mov
lds
out
xchg
nop
mov
mov
mov
add
adc
dec
bound
cs
pop
mov
or
cs
aad
cmc
not
fstps
bound
sub
add
repnz
mov
cld
stc
insb
push
lret
jbe
dec
mov
call
outsb
mov
push
adc
jae
icebp
pop
mov
enter
out
cmp
push
stos
xor
lds
cwtl
aam
jmp
icebp
pop
or
loop
gs
fnstenv
mov
inc
mov
ret
add
imul
arpl
jbe
and
pop
mov
leave
sub
mov
mov
jae
and
loopne
fisttpl
mov
add
adc
mov
adc
cmp
jl
mov
or
ret
push
add
aam
scas
pop
cs
sbb
test
stc
pop
xor
dec
or
js
in
and
daa
fadds
scas
jb
ds
cmp
cli
xchg
gs
push
sbb
rcrb
lock
out
add
jo
inc
nop
pop
push
jmp
push
mov
js
test
stos
leave
adc
jne
add
dec
sub
fucomp
das
ljmp
add
adc
nop
lcall
in
jle
negl
inc
push
push
add
loopne
adc
ljmp
push
jno
mov
les
mov
pop
ja
divb
pop
mov
ja
ficoms
rcll
xor
mov
call
add
loope
push
xchg
jo
or
cwtl
mov
mov
xchg
mov
pop
adc
lret
push
in
outsl
xlat
mov
mov
and
mov
rorb
push
fistps
call
xor
loopne
xor
push
shrb
jns
scas
clc
stos
mov
fcomi
push
lds
cmc
shlb
and
sbb
lret
mov
sahf
lea
ljmp
imul
inc
out
fmull
repz
aam
jne
insl
cmpsl
jge
loope
daa
mov
pop
lea
sub
sbb
push
pusha
add
or
push
cli
jb
fcmove
pop
test
pop
addr16
xchg
adc
sbb
mov
push
add
lahf
sti
adc
xor
sub
push
xor
mov
mov
lcall
aad
xor
jg
cmp
ja
jp
test
ss
inc
pop
mov
jno
or
mov
and
and
pop
pop
xor
jp
ljmp
pop
or
lahf
and
insl
out
adc
arpl
je
fld
dec
out
xor
mov
or
mov
bound
dec
roll
sub
and
mov
nop
fbstp
xchg
add
loopne
punpckhbw
fs
add
enter
and
xor
pop
jbe
shr
repnz
ficompl
cltd
dec
sti
shlb
popa
or
push
mov
jns
fistl
ljmp
out
sti
addr16
mov
aad
popa
xchg
mov
je
inc
inc
fldcw
lea
mov
pop
aas
in
mov
aam
cmp
mov
jecxz
xchg
xor
and
mov
dec
arpl
fidivs
add
ja
add
test
addr16
repnz
sub
loop
dec
pop
mov
add
sbb
inc
fs
lret
imull
push
add
daa
lds
out
inc
xor
popa
push
xchg
movsl
xor
push
jb
lods
repz
stos
xlat
push
and
xchg
dec
ret
rcrl
test
mov
sub
sbb
mov
jecxz
xchg
inc
cmp
or
int
cmp
xlat
and
sub
scas
lock
bound
addb
push
call
dec
mov
inc
jle
add
insl
xor
inc
mov
and
push
jne
jge
out
pop
ljmp
popa
sub
enter
test
cmp
push
or
jg
cltd
leave
aad
jbe
leave
aas
jl
loope
scas
xchg
mov
lds
sub
xor
cmp
or
jmp
clc
shll
cmp
sub
sbb
xor
mov
mulb
pushf
lret
dec
mov
imul
cmp
stc
out
mull
sub
leave
pop
jle
push
or
pop
out
dec
mov
in
push
out
or
inc
out
ds
fcompp
lret
imul
adc
pop
popa
sub
sahf
inc
inc
mov
adc
out
cmc
jbe
enter
sub
orb
push
jp
add
rcpps
fistl
addr16
call
push
jmp
andl
fisubrs
test
call
lret
pop
sbb
xchg
mov
roll
or
nop
lock
and
jae
jge
test
ja
pop
pushf
inc
xchg
xchg
cmpsl
push
push
insb
lret
lods
dec
cmp
lds
sbb
mov
out
jecxz
xchg
or
xchg
mov
inc
roll
add
dec
push
lods
adc
push
mov
jae
in
xchg
xchg
adc
cli
xor
mov
push
insb
in
cmp
rcll
out
insb
cld
cmp
test
cmp
ficoml
mov
push
mov
aaa
xor
adc
mov
outsb
sbb
pushf
cmp
jns
int
pop
mov
mov
sub
aas
cli
nop
inc
mov
inc
lock
pop
jge
or
into
ficompl
mov
shlb
mov
push
sub
xchg
out
pop
mov
lods
and
mov
ds
mov
sub
pop
scas
xchg
iret
and
xor
jmp
sub
xor
imul
fisttpl
xchg
jecxz
subl
or
and
push
push
push
rcr
ret
std
ljmp
insl
push
repz
sub
dec
jns
xchg
sti
pop
xchg
lock
sub
adc
aad
sbb
push
out
dec
lods
filds
xchg
dec
outsb
daa
dec
cmp
aaa
xchg
ds
lock
sbb
cmp
mov
dec
lock
cltd
cmpsl
xor
in
push
cmp
add
mov
pop
push
repnz
fdiv
and
clc
push
cmp
mov
jne
or
ret
inc
xchg
stc
mov
xor
mov
out
dec
or
das
notb
ret
int3
ljmp
dec
mov
out
push
popl
mov
popf
sub
push
push
repnz
cli
push
push
cmpsl
sbb
jp
inc
sub
imul
inc
ffreep
je
inc
pop
xor
loope
dec
push
and
or
stc
adc
lods
jne
enter
std
repz
jbe
out
ds
cmp
adc
lea
dec
dec
cmpsb
rclb
in
mov
mov
jp
mov
ss
cmp
sahf
inc
in
rcll
mov
addl
cltd
pop
insb
mov
add
sbb
pop
jp
enter
mov
ret
popf
scas
pop
sub
mov
sub
dec
push
sahf
sbb
xchg
decb
cmpsb
pop
ds
aam
xchg
stc
sbbw
shrb
lea
into
scas
aas
stos
xchg
into
es
lea
pop
push
mov
xor
add
push
and
xor
xchg
aas
add
addr16
add
je
push
mov
or
int3
sub
lods
xlat
dec
icebp
dec
adc
nop
mov
or
out
imul
push
inc
jno
mov
out
adc
or
pop
jo
adc
cmc
pop
jns
jne
ficoml
adc
push
jg
mov
pop
xchg
mov
sbb
sub
insl
xchg
and
stos
xchg
and
jbe
lcall
push
repz
pop
mov
popa
call
sbb
popa
cli
scas
das
outsb
dec
xchg
icebp
pop
cli
mov
push
iret
pop
test
xchg
and
imul
shrl
or
aas
fbld
mov
test
xor
xor
push
mov
orb
add
fidivs
mov
gs
aas
jnp
scas
inc
inc
and
jbe
outsb
dec
lahf
pop
mov
call
push
or
lret
ret
jge,pn
neg
sbb
lret
sub
dec
add
xchg
ljmp
out
sub
test
sbb
aam
adc
in
or
push
lret
imul
and
push
sub
sbb
sbb
mov
aas
in
popa
add
jne
mov
inc
and
ja
dec
aaa
adc
mov
inc
idivl
push
jno
jp
call
les
outsl
cmp
or
sahf
sub
or
iret
mov
and
push
repz
shrb
ficoms
cmp
pop
pop
cmp
imul
fmul
aas
cltd
lcall
popa
mov
pop
inc
xor
xchg
dec
sub
xorl
pop
icebp
add
inc
xchg
out
sbb
in
cmp
push
notb
add
out
mov
pop
mov
mov
fstps
sub
mov
lods
jne
push
cli
inc
stos
fcomi
xlat
jbe
push
cli
and
mov
imul
call
ds
js
lds
push
sbb
cmpsl
es
add
sti
ljmp
repz
inc
mov
xchg
fmuls
ss
ljmp
in
cmpsb
stos
lahf
loopne
push
sbb
pop
or
dec
adc
in
nop
std
adc
sub
jo
jp
cmpsl
xor
jbe
cmp
mov
hlt
cli
lea
jle
sahf
fs
aas
xor
xchg
xchg
mov
scas
or
and
pop
decb
pushf
iret
and
pop
adc
and
test
orl
xchg
stc
aam
adc
lock
push
call
jle
test
or
outsb
xchg
clc
cltd
mov
fcmovnb
and
je
loop
je
ret
fisttps
inc
mov
cli
dec
jg
pop
outsl
inc
fstl
cmp
sahf
pop
inc
add
loopne
les
xor
imul
xchg
mov
push
test
test
ljmp
mov
and
ljmp
dec
rcrb
adc
jbe
fdivrs
stc
dec
subb
aad
pop
pop
add
or
outsl
negb
jmp
sbb
dec
lret
out
cld
rclb
lock
mov
aas
pop
in
sub
icebp
push
mov
movsb
pop
jbe
push
fsts
lahf
popa
jo
imul
insb
pop
ds
rclb
pop
lret
inc
lea
sub
in
aaa
mov
sbb
loope
and
repz
jnp
lret
push
js
loopne
ljmp
pop
pop
jnp
add
adc
cld
mov
in
movsl
inc
pop
ffreep
sarb
pushf
inc
test
out
sarb
mov
push
or
mov
je
pop
push
std
or
je
test
fwait
aad
cmp
cmp
push
scas
ret
jg
cmpsl
cmp
pop
sbb
mov
popf
cmp
add
pop
shr
xchg
call
int3
inc
pop
push
xchg
sub
fcomps
leave
mov
xor
bound
daa
stos
mov
lahf
push
xchg
sub
daa
xchg
nop
inc
sbb
dec
dec
cmpl
mov
pop
push
pop
int3
or
lahf
cmpsb
in
shll
imulb
ljmp
daa
repz
push
mov
mov
xor
ja
jmp
jge
sahf
push
int
lret
loopne
jecxz
aaa
fistl
adc
int3
ret
sbb
subl
fs
xor
mov
jge
jecxz
mov
sbb
sub
adc
sbb
fwait
mov
scas
push
adc
add
and
hlt
inc
jno
sahf
dec
movsb
mov
and
mov
popa
jecxz
fsubrs
xor
mov
jae
psubd
inc
enter
add
clc
ret
mov
lahf
dec
inc
test
jle
xor
jbe
sub
mov
inc
pop
cld
push
add
stos
dec
push
dec
popa
js
fwait
mov
xor
fistpll
ret
mov
push
aam
xor
dec
call
lret
dec
mov
xor
jb
addb
inc
xlat
or
jnp
repz
inc
sbb
inc
enter
jle
sub
pop
ret
sbb
push
adc
jo
or
add
inc
pop
dec
js
and
data16
ds
jmp
mov
add
dec
adc
mov
cmp
pop
je
not
ja
push
sub
mov
and
xor
pop
or
outsb
stc
bound
outsb
call
sbb
dec
shlb
sahf
fsub
pop
jmp
sub
pop
je
and
gs
pop
cld
cmp
enter
xchg
inc
push
mov
mov
pmaxub
inc
and
shll
bound
xor
test
adc
jle
nop
nop
xlat
notb
mov
pop
jae
out
test
mov
mov
int3
mull
stos
inc
arpl
jecxz
loope
pop
fdivl
sub
push
fs
and
pop
dec
mov
call
push
xchg
sahf
add
xor
xchg
lods
sarl
xorb
outsb
daa
mov
inc
in
mov
add
or
or
mov
cmp
mov
dec
dec
or
cmp
scas
mov
push
jno
sti
lock
cmpsl
addr16
pop
sbb
test
inc
pop
cmp
popa
movsl
call
andl
inc
xor
inc
sub
sub
ficoms
xchg
inc
shrl
imul
and
push
xlat
mov
loopne
rcl
push
dec
outsl
sub
out
mov
push
movsb
or
aas
or
cmp
orl
ds
jne
pop
xchg
les
insb
inc
mov
insl
or
shll
or
xchg
clc
fisubs
out
xor
mov
shufps
stc
push
xor
pushf
jns
call
popf
andl
add
loop
fisttps
xorl
cltd
bound
adc
repz
iret
mov
ffreep
shll
ficoml
sbb
cmp
mov
ja
dec
push
test
sbb
out
enter
jne
loope
add
movsl
cmp
push
cmp
andb
push
arpl
mov
cmp
scas
xchg
mov
mov
outsl
stos
popa
insb
add
cs
out
xchg
scas
jg
out
lds
fcoml
push
push
cmp
jle
pop
sahf
ds
imul
incl
push
aas
jle,pt
outsl
outsb
mov
cmc
aas
adcb
push
movsb
sub
mov
inc
int
jnp
push
pop
sar
add
mov
ja
andl
movsb
sub
sahf
lahf
push
sub
into
fimuls
scas
div
in
adc
movsb
aam
jns
push
cwtl
lahf
xor
push
ret
fbld
pop
aad
xchg
out
ljmp
data16
cmc
ret
and
dec
cli
pusha
inc
test
shll
jae
add
or
popf
dec
pop
pop
ret
push
les
push
ja
mov
in
popf
and
imul
lret
mov
mov
jne
pop
xor
sbb
cmp
push
mov
jns
jne
shll
fs
int3
jne
add
cltd
push
and
rol
test
jl
mov
rcrl
or
pop
jmp
inc
or
xlat
adc
xchg
add
iret
dec
hlt
jno
dec
rcll
icebp
xor
xchg
inc
cmp
scas
fcoml
sub
jae
mov
jp
add
loopne
imul
out
iret
mov
lea
mov
cmpsl
scas
cld
js
jmp
dec
ret
push
mov
rolb
xchg
inc
sub
arpl
lea
stos
sbb
mov
fwait
sbb
adc
xchg
push
jae
push
pop
xchg
mov
aam
mov
dec
mov
int
in
cmp
imul
add
mov
xchg
cs
inc
xchg
fdivp
lret
das
adc
dec
adc
addr16
test
insl
mov
dec
pushf
mov
out
es
ja
sbb
test
jnp
push
mov
out
or
and
cltd
cwtl
ficompl
jmp
sbb
fsub
mov
repz
mull
cwtl
fldcw
leave
test
loopne
xor
fcomp
fsub
fidivrl
scas
mov
cmp
jle
add
xor
push
pop
dec
mov
inc
test
jb
hlt
add
rcrl
jecxz
xor
pop
push
dec
add
leave
iret
xchg
push
sub
mov
and
popf
stc
scas
pop
or
push
adc
lret
out
daa
nop
pop
xor
jl
out
mov
loopne
scas
addr16
inc
das
std
stos
cmp
dec
pop
cmp
fst
mov
or
sbb
and
test
jge
insb
lret
insl
shll
inc
jmp
out
dec
pop
les
testl
notl
cld
lock
std
popf
jmp
pop
adc
mov
mov
fldenv
fdiv
xorl
adc
aad
outsb
or
inc
cwtl
cmp
iret
icebp
jmp
movsl
dec
sub
mov
or
mov
pop
inc
inc
lahf
sub
filds
cmp
push
sbb
dec
movb
xchg
jns
xchg
fstl
pop
mov
sahf
and
inc
dec
push
cmc
rclb
fsubl
shll
fisttps
add
cmp
popa
movsl
pop
icebp
pusha
ss
adc
sarl
mov
sub
idivb
rol
mov
aad
push
or
jb
fidivrs
sbb
movb
mov
psllq
sbb
push
pop
loop
add
leave
xchg
mov
loop
pop
pop
adc
pushf
jg
inc
popa
mov
movsl
and
xor
es
add
cmp
into
int3
add
inc
jecxz
lods
into
daa
pop
push
dec
mov
xchg
out
xchg
push
dec
ficomps
mov
daa
je
lea
add
or
mov
rcr
mov
and
enter
jp
cmc
adc
inc
mov
fcomps
or
pusha
mov
aad
and
pop
xor
jp
roll
mov
mov
and
in
popf
push
test
dec
mov
fwait
cmp
jne
adc
rclb
adc
xor
call
mov
mov
pusha
or
sub
icebp
cs
push
or
jl
jp
inc
ljmp
loope
loope
pop
jg
cmp
inc
pop
inc
sbb
push
cmp
sti
fwait
lods
adc
jnp
xlat
addl
jo
push
lock
or
sub
test
lods
dec
xor
fstl
inc
ret
add
or
push
sahf
imul
ret
andl
je
jmp
cmpb
cmp
lea
mov
nop
and
xchg
pop
mov
push
adc
std
cmp
mov
jo
fildl
fimull
jo
fdivrs
sahf
rclb
adc
ss
jnp
xor
lds
push
cmp
sub
jg
xchg
lahf
test
andb
or
dec
mov
cmp
and
jne
cs
ret
mov
push
sbb
arpl
pop
lds
aas
addb
ss
addb
mov
cmpsb
mov
jle
loopne
inc
out
shlb
in
mov
pop
mov
hlt
test
repnz
mov
pop
add
xchg
mov
adc
sbb
cltd
hlt
jge
adc
xchg
into
lock
in
test
jbe
mov
out
ja
ret
jns
push
push
sti
cmp
adc
jecxz,pn
rcll
cmp
sub
lea
bound
xchg
mov
shr
icebp
pop
in
lods
jb
mov
je
cmp
push
imul
cltd
movsl
cld
in
inc
fwait
int
shlb
cmp
inc
sbb
pop
xor
fdivs
addr16
out
or
and
add
pop
cmp
push
sub
subl
add
test
jo
jmp
jp
or
and
movsb
imul
xor
adc
inc
adc
mov
cs
mov
pop
add
push
mov
dec
push
add
adc
sahf
add
faddp
sti
sbb
cwtl
mov
aam
sarb
mov
and
pop
pop
push
mov
insl
add
aad
movsb
dec
test
xor
cwtl
jmp
std
dec
mov
test
and
mov
and
loop
out
test
inc
pusha
dec
jge
jl
loope
popf
xor
sahf
insb
pushf
or
loopne
mov
pop
mov
mov
adc
std
mov
pop
or
movsl
xlat
sti
mov
mov
add
sub
das
in
outsb
sbb
add
cmpl
dec
sub
mov
aas
shr
xchg
icebp
les
push
sub
push
sub
decb
imul
iret
xchg
sbb
addr16
xchg
shl
mov
or
inc
sbb
les
sti
cltd
mov
mov
in
dec
sub
jno
je
mov
stc
shrl
adc
test
push
mov
xchg
sub
stc
stos
push
jo
mov
pop
lds
ljmp
add
std
out
stc
push
popa
fsubl
lods
in
ret
lahf
push
shr
lret
enter
xor
jg
xchg
imul
pop
mull
pop
loop
jb
repnz
insb
adc
mov
jmp
jnp
mov
fistpl
sbb
xor
push
mov
arpl
mov
pusha
fwait
ret
addb
mov
addr16
mov
fwait
je
out
in
inc
out
jne
fnstenv
lret
mov
mov
and
mov
xchg
pop
add
ret
mov
divb
outsl
inc
rolb
mov
xchg
mov
sub
mov
push
leave
xchg
sbb
stos
pop
adcb
push
mov
or
fucomp
into
mov
out
cmp
sbb
test
ret
aaa
and
jo
pusha
js
mov
filds
jl
and
cmp
loope
pop
frstor
or
push
aad
out
negl
inc
dec
push
mov
lods
leave
ljmp
test
mov
imulb
jo
cmp
jno
test
push
sub
jmp
je
movsl
sbb
mov
xchg
popa
mulb
pop
std
jl
push
xchg
cli
pop
addps
mov
or
add
mov
les
js
push
push
jecxz
ljmp
sub
and
es
jb
jbe
sbb
adc
mul
xchg
jge
pop
lods
pop
dec
mov
mov
rcll
push
popa
push
pop
arpl
sti
xchg
mov
xchg
in
add
lea
xchg
out
or
es
sbb
sub
mov
adc
fucomip
add
imul
stos
je
xchg
and
mov
mov
jnp
xchg
pushf
hlt
xchg
loope
ds
repnz
dec
jno
mov
nop
cwtl
mov
jnp
dec
mov
inc
fldenv
in
ret
mov
push
mov
test
push
imul
aam
clc
mov
xchg
jecxz
xchg
sahf
mov
jo
sub
xchg
fs
loopne
and
and
pop
cmp
cwtl
call
repz
add
cmp
dec
cld
out
ret
inc
cmp
pusha
mov
aad
cmc
inc
inc
cmc
cmpsb
add
ja
mov
sub
lret
jae
les
sbb
orl
add
xchg
pushf
mov
and
xchg
xchg
add
mov
sbb
jp
cmp
xchg
je
roll
loop
adc
jne
jmp
lea
mov
or
jae
stc
mov
jbe
test
pop
fisubs
xchg
adc
inc
movb
cwtl
aad
sbb
jmp
push
mov
sbb
sti
jb
xor
aas
dec
mov
jge
addr16
mov
arpl
outsb
es
loop
out
int
mov
jb
hlt
in
or
out
stos
dec
testl
and
lcall
mov
push
push
ret
shl
jno
flds
push
stos
or
adc
jmp
call
dec
inc
outsb
ror
pop
cmp
jb
lods
add
or
std
pop
push
sub
ljmp
loope
push
cmp
cmp
lret
aad
push
scas
out
push
pop
test
lcall
cmc
xchg
jecxz
mov
mov
dec
outsb
add
sahf
xchg
sbb
adc
filds
cmp
in
mov
repz
dec
aaa
and
out
roll
in
mov
and
push
sub
out
mov
adc
xor
and
stos
das
pushf
rcrb
push
mov
stos
mov
js
xchg
out
int
adc
jmp
adc
cmp
psubb
cmp
js
mov
add
jae
or
mov
shlb
inc
xchg
push
popa
jmp
pop
std
lret
mov
sahf
insb
xor
pmaxub
cmpsb
das
add
inc
repnz
lret
nop
sub
xor
fsubrl
out
or
imul
adc
addr16
xchg
adc
mov
xchg
adc
add
pop
jns
outsl
mov
pop
mov
out
jno
test
mov
jle
mov
jmp
cmp
int3
adc
push
fstl
lods
divb
sbb
cmpsb
adc
icebp
dec
cwtl
xchg
cmc
push
mov
aam
xchg
dec
cmp
or
mov
sti
or
mov
in
jb
adc
insl
addr16
mov
or
sbb
pop
cmp
call
mov
sub
clc
in
sub
loop
bound
mov
mov
dec
pusha
inc
inc
fsubrp
movsl
js
loop
aam
jns
xor
pop
pushf
dec
arpl
arpl
test
xor
nop
imul
flds
adc
xorl
or
iret
pushf
and
pushf
minps
test
cld
xchg
pop
sub
insb
clc
fisttpll
fwait
mov
pop
addr16
jne
fwait
repz
xchg
dec
movsl
aaa
sahf
jmp
ja
push
cmpsl
add
test
stc
test
stc
lret
ret
test
insl
push
aad
leave
and
jns
jmp
pop
dec
inc
lds
sti
xor
push
fcoml
imul
repz
ficoms
mov
mov
pop
xchg
and
fdivrl
push
das
fadds
and
sub
jns
loopne
and
inc
fidivl
das
ss
xor
mov
and
xor
enter
hlt
aam
mov
dec
pop
cmpb
cmp
inc
dec
hlt
mov
fimull
test
pop
movl
cltd
stos
push
push
adc
test
mov
pop
xor
outsl
mov
daa
bound
inc
xchg
nop
gs
sbb
or
scas
aam
shl
lea
mov
sbb
add
iret
shrl
push
push
inc
test
dec
sbb
mov
inc
aad
xlat
loopne
sub
pop
inc
mov
push
lret
scas
cmp
dec
ror
cmpsb
dec
jae
dec
jae
fidivs
mov
xchg
add
adc
sub
cmp
mov
std
jns
popa
adc
push
mov
and
lea
add
out
lahf
das
adcl
test
fiaddl
cld
or
loope
out
inc
mov
sub
out
fst
pop
sbb
aam
shlb
mov
pop
xchg
ja
sahf
sbb
cltd
and
mov
sub
dec
jne
and
ret
popa
mov
lret
fisttpll
mov
shll
push
sub
jno
call
fsubr
pop
repnz
scas
lcall
clc
outsl
jno
jno
cwtl
sbb
xor
pop
or
popa
ficoms
mov
out
pusha
sbb
cmp
int
icebp
jecxz
xlat
adc
sub
jno
add
sbb
or
cmp
out
roll
mov
jl
or
mov
xchg
mov
jo
pop
sub
ret
sbbb
xor
xor
inc
or
mov
mov
fwait
sub
sbb
iret
sbb
jbe
mov
jo
ret
add
adc
daa
movsb
sub
xlat
enter
xor
mov
ja
sbbb
push
movsl
xor
push
xchg
xchg
test
xchg
imull
mov
mov
cli
fildl
dec
inc
js
or
bound
sbb
hlt
mov
or
xor
ror
xor
rorl
rcll
jge
cmp
loop
mov
xchg
enter
mov
and
and
xchg
dec
rcrb
fildll
push
fsts
dec
sbbl
push
xor
push
movsb
test
test
fistpll
push
mov
sbb
xor
pop
cmpb
test
jb
adc
push
fs
imul
xchg
popa
sbb
scas
leave
cmpsb
mov
add
cwtl
es
ds
rorl
or
imul
cmp
sub
adc
lds
pop
mov
jo
shrb
pushf
jge
mov
aad
fdivp
jae
jns
scas
loopne
in
movsb
add
adc
popa
xchg
ds
cltd
subl
add
xchg
kmovb
fidivrs
in
cmp
xlat
cmpsl
mov
call
add
xchg
orl
mov
jae
iret
jns
lea
jge
imul
repz
push
and
xchg
loopne
jle
movsb
imul
cmp
jmp
dec
in
data16
out
mov
repz
cltd
icebp
sti
hlt
mov
xor
sub
scas
pop
jg
cltd
jnp
dec
mov
push
push
adc
pop
mov
add
cmc
cwtl
jb
jae
sub
push
sub
or
jns
cmpsb
sub
mov
and
adc
sub
or
fcmovu
repnz
mov
and
int
mov
pop
xchg
arpl
cli
push
cltd
dec
mov
pop
loope
push
aas
mov
mov
add
xor
pop
shll
cmp
sbb
repz
push
fmul
sahf
add
adc
fdivrl
push
sarb
repnz
sarl
xchg
movsl
ss
divb
or
out
aaa
lods
mov
rorb
sbb
inc
or
insl
jge
icebp
je
outsl
push
mov
shr
shrb
mov
inc
in
cltd
cs
aam
ja
cmp
lret
cli
les
jae
mov
test
fildl
inc
jp
jno
jns
hlt
pusha
mov
push
push
jl
sti
jae
xchg
dec
sub
xlat
sbb
nop
faddl
push
cmp
cmp
mov
jp
or
in
ss
fdivs
cmp
out
std
mov
pop
in
loopne
jecxz
in
mov
dec
insl
dec
cmp
lds
xchg
sti
push
add
adc
sub
push
aaa
or
adc
xchg
xor
cs
lret
push
inc
jecxz,pn
div
xor
add
xchg
stos
add
aaa
push
fwait
addl
loop
sub
cmpsb
into
jp
xor
xchg
loop
sub
sbb
je
jg
mov
fbstp
push
or
dec
rcr
sarl
jb
and
cmc
fidivl
inc
pop
les
push
adc
xchg
jmp
mov
rcrl
cmp
scas
fsubrl
outsl
popa
popa
add
push
es
sub
add
and
aaa
push
mull
hlt
test
mov
das
lret
lock
or
cmp
sarl
sub
dec
mov
in
mov
adc
icebp
mov
enter
push
push
mov
call
inc
sbb
push
xorl
mov
mov
xchg
push
mov
inc
cmpsl
pop
inc
stc
cmp
inc
data16
xchg
movsl
and
scas
test
mov
xchg
pop
cmp
inc
into
jl
imul
jmp
sbb
arpl
push
push
lds
icebp
mov
arpl
lret
inc
adc
cmpsb
fidivl
dec
inc
loope
jne
lret
mov
cwtl
add
aad
adc
ss
pushf
sahf
jge
mov
dec
lock
pop
in
jo
push
fidivrl
cmp
xchg
dec
std
xchg
lcall
or
imul
cmp
xchg
xchg
mov
xchg
lock
out
and
push
mov
pop
xchg
adc
fs
jno
fdivl
jmp
add
and
cmc
push
loop
jb
push
jb
lds
add
or
ljmp
mov
jecxz
movsb
aaa
xlat
mov
jae
xor
jg
inc
stc
sahf
dec
xchg
mov
mov
push
stos
imul
outsl
aaa
cmpsl
pop
push
sbb
fucomip
jge
inc
inc
icebp
es
sub
ficomps
aas
sub
mov
pop
aas
add
movsb
xchg
mov
push
push
mov
add
inc
sub
xor
mov
dec
stos
into
adc
test
arpl
mov
pop
scas
sub
push
dec
test
in
sbb
ret
shrl
and
gs
data16
icebp
xor
pop
mov
push
js
andnps
push
loope
jge
push
es
pop
push
inc
les
neg
mov
bound
push
ljmp
sub
and
nopl
js
inc
fwait
sbb
decb
lock
mov
imull
lds
or
ljmp
lret
loop
lea
ja
rcll
xorps
es
pop
or
int3
in
loopne
pop
repnz
xor
bound
sahf
pop
jbe
add
sub
hlt
loopne
xlat
sbb
xor
xchg
lret
movsl
gs
xor
fwait
call
shlb
mov
push
push
shlb
sbb
dec
data16
data16
xchg
aaa
imul
ja
cld
adc
mov
in
in
mov
mov
pop
or
aaa
test
ljmp
mov
or
fidivrs
pop
fsub
mov
dec
pop
lods
fnstcw
jp
push
inc
cltd
mov
push
xchg
mov
mov
sbb
xchg
lods
mov
xbegin
pop
gs
fdivrl
dec
mov
test
mov
mov
jnp
popa
sbb
and
insb
ret
xchg
mov
fldcw
push
sbb
push
or
push
es
jns
lcall
popa
mov
popa
and
cwtl
pop
or
dec
push
movsb
xchg
inc
lods
add
pop
jno
popf
imul
adc
sahf
popa
xchg
xor
lret
out
out
xor
jl
or
mov
or
mov
faddl
pushf
into
ja
or
and
out
sbb
mov
add
mov
add
fisubs
pop
pmaxsw
mov
add
lret
in
cmpb
pushf
mov
mov
pushf
leave
pop
or
repnz
mov
add
aaa
sbb
or
add
xchg
xor
adc
jl
dec
in
jo
xor
fldt
inc
es
in
stos
pop
pop
pop
aas
mov
dec
movsl
jno
xchg
push
icebp
test
jge
inc
and
dec
mov
or
add
pop
xchg
fstpl
mov
add
or
sbb
jecxz
mov
adc
mov
sub
jno
nop
cld
xchg
pop
xor
divl
mov
mov
dec
mov
scas
subl
faddl
xchg
cmc
jp
test
incb
lea
xor
or
mov
mov
pushfw
pop
ds
movsl
xor
xchg
js
push
mov
in
inc
arpl
mov
andb
dec
lea
or
incl
or
in
fidivrs
int
lcall
push
in
cld
xchg
jecxz
cmpsl
mov
lret
jge
mov
leave
lds
add
sbb
stc
loop
into
loope
push
sti
loope
pop
lcall
out
sbb
divl
dec
jnp
and
mov
inc
xchg
outsb
dec
shlb
leave
xor
int
xchg
or
fistl
mov
mov
xchg
sbb
nop
push
outsb
popa
dec
filds
cmp
inc
adc
shll
and
jne
ljmp
add
adc
xchg
push
sbb
andl
inc
xchg
push
scas
mov
mov
xchg
arpl
iret
adcl
cmc
push
pop
xorl
int
shrb
or
decl
loop
repz
test
in
dec
or
lcall
ret
cmp
in
in
pop
sbb
loopne
pop
test
fdivs
sahf
push
or
or
es
pop
pop
jl
jl
aaa
es
jmp
and
dec
push
mov
test
ja
outsb
sbb
xchg
mov
js
push
cmc
add
ds
fdivl
testl
pop
and
cltd
and
je
mov
xor
cmp
xchg
cs
xchg
pop
leave
daa
fs
ljmp
sub
jo
popa
test
push
adc
rdmsr
and
fs
and
in
xchg
sub
in
sbb
sub
dec
jge
and
repnz
or
mov
movq
test
push
stc
hlt
int3
xchg
andb
fdivl
or
and
test
scas
add
pop
mov
cmc
mov
mov
popl
repz
mov
add
movsb
mov
xchg
sub
mov
lret
adc
sub
jecxz
clc
orl
pop
dec
inc
cmp
jecxz
xchg
push
sub
adc
orb
jb
lret
and
test
shrl
fnstsw
fs
imul
repnz
sub
sbb
outsl
lods
bound
adc
and
xor
mov
mov
xor
pop
ljmp
and
aam
lret
push
insl
xchg
sbb
jp
sbbb
imul
dec
movsl
inc
clc
fnsave
mov
jge
push
mov
sbb
lods
xor
dec
add
test
lods
lahf
add
stos
rorb
push
shll
fistpll
scas
xchg
enter
mov
scas
mov
test
xchg
aaa
jae
aam
push
adcl
mov
std
cmp
pop
fwait
jbe
cmpsb
pusha
es
addb
cmp
aam
sub
mov
dec
icebp
mov
loop
sub
jp
push
push
mov
push
ret
daa
dec
and
enter
add
and
cmp
dec
xor
mov
sub
xor
xor
imul
dec
sub
dec
into
cld
xchg
fdiv
movb
gs
adc
inc
je
sarl
enter
and
dec
mov
lds
out
sbb
andb
addr16
dec
sahf
in
ljmp
std
hlt
int
sahf
or
pop
repz
addr16
jne
mov
xchg
lods
mov
cmp
pop
add
sub
cld
or
xchg
inc
lock
aaa
and
lcall
rolb
pop
push
rcll
jmp
push
arpl
cld
inc
add
xchg
jne
pop
push
mov
jp
inc
adc
mov
test
aas
cmp
inc
pop
shlb
insl
xchg
int3
mov
ljmp
pusha
or
lahf
mull
adc
cld
notl
xchg
pop
xchg
cmp
sbb
cmp
stos
pusha
jge
and
add
mul
cmp
push
sbb
std
mov
out
push
mov
push
ljmp
mov
sbb
stos
sub
testb
arpl
int3
loopne
sbb
sub
or
jl
dec
sub
repz
pop
mov
jp
stc
test
shlb
pop
push
cmp
lods
rol
jnp
sub
aam
mov
fbstp
loopne
cmp
mov
sbb
dec
mov
call
adc
push
sub
out
mov
or
mov
sub
xor
shl
outsb
loop
sub
dec
jnp
repz
imul
mov
mov
cmpsb
addr16
xchg
lea
scas
adc
imul
adc
out
mov
inc
cltd
imul
ljmp
mov
rol
mov
mov
popa
mov
xlat
xchg
js
mov
dec
pop
mov
or
add
das
popf
add
mov
fbld
ljmp
out
push
bound
aam
les
jbe
mov
popl
divb
call
ss
pop
lods
mov
scas
inc
repz
jle
sub
sub
pop
jb
add
ret
push
fcmovbe
or
pop
in
clc
stos
jns
sbb
sub
add
ficoms
push
mov
dec
loopne
or
lahf
in
daa
jmp
jl
test
fdivrp
xchg
insl
fwait
clc
sbb
outsb
or
jmp
paddw
cli
mov
dec
mov
xor
jecxz
orb
shrl
pop
xchg
popa
mov
scas
test
decb
mov
jecxz
xchg
div
dec
insb
cmp
cmc
push
icebp
repz
mov
clc
scas
repnz
add
or
sbb
inc
imulb
or
pop
xor
add
out
sarb
sti
mov
and
sahf
mov
inc
xchg
aaa
mov
sbb
shlb
bound
sbb
jecxz
cli
push
insb
cmp
popf
xor
inc
lret
sbbb
fstpt
out
outsb
mov
xchg
insb
loop
inc
frstor
dec
mov
jp
add
sub
push
arpl
test
ds
test
jge
push
filds
pop
adc
push
cmpsl
jle
es
mov
sbb
mov
cmpsb
cmp
lcall
xchg
ret
lds
dec
mov
pop
insb
leave
scas
filds
cmp
out
mov
xchg
lea
mov
sbbl
ljmp
stc
js
addr16
pop
push
and
adc
popl
dec
push
les
and
or
mov
cltd
stc
add
cmp
sub
sub
sub
ret
imul
xor
cmp
data16
mov
and
and
dec
lret
cmp
inc
push
gs
pusha
or
pop
push
test
sbbl
ljmp
arpl
stc
xchg
lret
fsubrs
repz
aas
push
sbb
xchg
int3
push
pop
mov
push
mov
shll
mov
shll
mov
mov
push
xor
mov
sbb
xchg
loopne
ds
clc
jae
pusha
testl
xor
add
cmp
inc
jmp
call
jmp
push
mov
fwait
sahf
fmuls
sahf
movsb
cltd
into
pop
mov
xchg
cs
cmp
push
jae
push
dec
and
hlt
fsubs
mov
add
fidivrs
sbb
sub
int
shl
sbb
cli
lahf
mov
cmpsl
call
jns
movsl
xchg
add
inc
mov
aam
push
adc
push
xchg
sub
or
mov
jecxz
subb
cli
mov
cmp
xchg
lods
add
cld
pop
cmpsb
aad
int
mov
stos
inc
loop
cmpsl
xchg
sbb
nopl
cmp
or
cli
cmp
xchg
testl
icebp
ficoms
push
or
push
fiadds
mov
ljmp
adc
roll
jb
inc
push
jecxz
loope
and
mov
into
add
and
xor
inc
xor
mov
or
xchg
sub
or
push
mov
icebp
int3
xchg
mov
sub
dec
dec
sub
jg
dec
incl
aad
cmp
pusha
mov
leave
lret
jnp
js
mov
loope
test
and
out
xchg
pop
pushf
xchg
sbb
inc
jbe
xor
xchg
enter
je
iret
test
cmp
cmpsb
dec
mov
and
shll
cmpsb
mov
pop
sbb
jno
dec
cmc
fidivs
and
sbb
in
dec
loopne
or
sbb
imul
loop
shl
insl
and
orl
or
testb
jns
and
iret
adc
ret
imull
stos
test
sbb
popf
loop,pt
and
into
cmp
sbb
sti
cli
movsl
push
clc
xchg
scas
lock
mov
cmpsb
jae
icebp
add
mov
xchg
xchg
xchg
or
rcrl
jne
repz
addr16
outsb
push
xlat
or
repz
jge
aaa
dec
sub
cmc
cli
xlat
push
push
mov
rep
cmpb
mov
dec
cwtl
jne
packuswb
add
mov
add
mov
in
loop
popf
fcmove
sahf
xchg
mov
adc
repz
enter
pop
icebp
cmp
es
movaps
out
outsl
icebp
pop
adc
scas
or
xchg
insb
sbb
or
adc
add
test
dec
stc
test
shll
ret
mov
xchg
and
sub
push
imul
push
add
sbb
dec
adc
stc
call
cmc
dec
sbb
inc
rol
fidivs
jg
dec
pop
xor
addr16
push
andb
sbb
insl
ss
ljmp
je
add
sub
push
aas
jmp
out
fcom
loop
rcll
std
cmp
icebp
mov
xchg
adc
int3
mov
or
jp
or
or
and
mul
or
aam
movsl
mov
int3
jbe
out
xchg
push
outsb
and
adc
stos
mov
xor
scas
xor
xor
out
dec
adc
cmpsb
push
add
sub
jecxz
lods
xor
mov
aas
push
int3
outsl
inc
or
mov
or
or
movl
or
popfw
lea
push
or
and
and
fcompl
or
test
cmp
hlt
dec
push
lcall
xchg
push
stos
hlt
mov
out
dec
dec
mov
add
jg
push
fcomip
xor
cld
add
test
jb
or
movsb
jecxz
xchg
leave
nop
inc
mov
push
xor
adc
xor
out
add
outsl
sti
int
inc
cmp
fnstsw
push
mov
push
arpl
jb
pop
add
aad
and
lea
ja
pop
aad
dec
jge
inc
and
cmpsl
sbb
in
fs
arpl
pop
insl
jecxz
int3
int3
add
inc
negl
mov
repnz
gs
cmp
outsb
ds
mov
outsb
sahf
out
pop
jo
xor
out
adc
and
xchg
adc
or
fs
movl
adc
sbb
xchg
xlat
or
cld
in
lret
imul
mov
mov
int3
adc
push
test
sbb
push
in
dec
sbb
adc
xchg
jne
inc
fidivrs
xor
stos
cmpsb
pop
ss
pushf
add
test
movsb
jl
aad
jnp
loopne
lret
pop
and
je
fmuls
pop
jnp
mov
stos
inc
push
add
cmp
and
cmp
dec
mov
inc
enter
inc
mov
aam
scas
mov
out
insl
scas
sub
aas
or
repz
mov
add
loopne
dec
push
pop
lds
cmp
insb
lea
not
nop
or
lods
sbb
stc
cli
enter
xor
mov
pop
mov
call
cmp
adc
movd
movsb
add
pop
push
mov
shll
pop
loop
mov
add
mov
iret
fistps
fbstp
fst
rcl
pop
rcl
arpl
mov
insl
mov
ret
mov
leave
jle
fnstcw
sbb
or
leave
push
jb
mov
sub
rorb
dec
dec
mov
push
add
pop
fldcw
push
sub
jb
test
pop
mov
fisubl
cli
in
jp
idivb
push
xor
push
or
fmuls
mov
push
leave
xor
imul
ficoms
imul
pop
cli
xchg
cltd
iret
jmp
repz
imul
out
jb
mov
lock
sbb
hlt
push
movsb
pop
cmc
push
lock
daa
clc
out
std
stos
push
lock
bound
push
clc
cs
mov
pop
sub
nop
mov
lods
push
test
mov
call
sub
popa
cwtl
mov
sti
and
mov
inc
daa
add
mov
gs
inc
push
jmp
mov
fsubl
mov
mov
mov
cmp
xchg
inc
and
aam
cmp
push
mov
mov
jb
stc
jnp
test
sub
mov
fistpll
aam
add
sub
pop
jb
je
and
je
les
cltd
mov
daa
cmp
cltd
je
xchg
sub
fisttps
lcall
xor
jl
lea
out
test
das
push
ret
push
fwait
shll
lret
mov
dec
fwait
push
mov
inc
jne
cwtl
mov
mov
cmpsl
insl
dec
cwtl
pop
or
mov
or
scas
push
pop
lods
punpcklwd
sbb
das
subl
pop
pop
or
js
je
or
fcoml
mov
movsb
and
ficoms
loopne
testb
inc
sbb
repz
push
inc
pushf
push
mov
inc
sbb
sarl
in
stos
sahf
lahf
repz
rorl
cmpsb
add
icebp
fsubs
jge
xchg
idivl
mov
jbe
stc
sbb
inc
ficomps
sub
fildl
push
or
les
mov
out
push
sbb
arpl
mov
sbbb
adc
pop
jg
enter
mov
cli
loope
out
or
cmc
jl
cmpsb
fistpl
ss
xor
xchg
roll
cs
fwait
out
movsb
imul
or
cmp
push
xchg
test
outsb
arpl
push
in
inc
xchg
mov
push
pop
stos
cltd
adc
outsb
xor
mov
aas
adc
sub
push
bound
cmp
add
inc
insl
push
add
addr16
call
es
xchg
and
mov
repnz
lods
jns
sahf
lahf
jg
pop
int3
mov
sub
div
pop
int
adc
addl
mov
jno
inc
dec
stos
insl
addb
mov
clc
jnp
jl
sbb
xchg
mov
and
aas
cmpsl
fwait
dec
jg
negl
popf
in
dec
sarl
add
enter
ret
dec
call
std
xchg
or
test
mov
push
jp
mov
sbb
push
xchg
cmp
lret
pop
pop
or
sub
dec
cmpl
nop
xchg
lods
xor
sub
std
insb
xchg
or
sub
shll
fs
inc
sub
jnp
inc
gs
fnstsw
pusha
lahf
icebp
in
sbb
add
adc
imul
mov
xor
aam
movsl
sbb
push
jecxz
stos
cs
inc
mov
loope
jg
pop
test
je
fidivl
xchg
push
add
enter
sub
mov
push
xor
call
imul
subb
push
or
scas
jg
repnz
inc
mov
push
sbb
nop
aad
and
sbb
mov
scas
xorps
sub
stc
scas
dec
lods
popa
gs
ret
lds
jns
test
int3
jp,pt
inc
push
inc
stos
sbb
cmp
addb
dec
sbb
adc
jmp
lea
int
add
int
inc
pushf
inc
ja,pn
sub
fildll
push
xchg
iret
popa
fwait
jle
fwait
lea
popf
jnp
fs
inc
xor
scas
jmp
shrb
inc
or
xchg
sbb
sub
addr16
or
sub
xchg
mov
in
inc
cmp
inc
fbld
lds
cmc
inc
subl
mov
ljmp
or
jns
rolb
adc
mov
insb
push
enter
addr16
pop
pop
sbb
jnp
cmpsb
jge
sbb
frstor
mov
gs
jmp
aas
pop
or
xchg
sub
shrl
imul
mov
mov
clc
call
and
sbb
pusha
int
push
mov
scas
or
icebp
jp
fiaddl
lods
mov
jecxz
pop
push
test
jmp
inc
cmpsb
adcl
dec
jg
sbb
pushf
adc
xchg
fwait
lock
inc
jmp
inc
push
insb
dec
scas
cmc
inc
mov
inc
arpl
adc
inc
xor
int3
arpl
mov
icebp
and
pop
inc
mov
add
jl
std
add
popa
in
mov
jbe
xchg
xchg
testl
jecxz
out
mov
pop
mov
add
sti
sbb
pop
in
add
jecxz
adc
or
sbb
hlt
aam
sub
dec
xor
pop
or
popf
inc
test
mov
lock
inc
out
sub
and
jae
lahf
xlat
xchg
das
dec
sub
in
mov
adc
push
jg
fadd
mov
cmp
call
aam
cmc
jbe
aad
cmp
cs
or
movb
and
cwtl
shl
addr16
lds
cmp
cmp
mov
mov
cmpb
cmp
movsb
mulb
fwait
push
sub
xchg
jmp
pop
shlb
lcall
inc
sbb
mov
push
adc
mov
stc
or
and
into
and
sbb
out
sahf
inc
fidivrl
leave
imul
mov
fldcw
imul
shll
and
movsb
xchg
push
pusha
cmp
ret
adc
push
xrelease
sahf
cmpsb
push
mov
jg
addl
push
mov
and
movsb
stos
mov
movsb
mov
ss
repz
cmpsl
es
leave
rcrb
pop
mov
mov
mov
adc
lahf
sbb
add
sub
cmp
movsl
loop
or
dec
in
sub
push
mov
in
in
cltd
stc
loope
sbb
sub
mov
call
inc
cmpsb
out
in
cwtl
mov
stos
adcb
push
sbb
out
push
push
test
pop
in
out
sub
mov
fwait
xor
sbb
gs
cmp
lods
xor
inc
pop
pop
cld
pop
out
xlat
shr
lods
jnp
add
shlb
or
dec
push
nop
xorl
mov
inc
lds
popa
sbb
mov
mov
mov
xlat
dec
xchg
scas
jne
pop
lret
arpl
frstor
outsl
jl
sahf
sbb
arpl
sub
negb
mov
imul
lods
dec
push
xchg
shl
cld
aas
jp
adc
aad
scas
sbb
mov
adc
or
outsb
jbe
pop
lods
es
sti
je
cld
sahf
stos
xchg
lods
inc
jle
sbb
loop
push
cmp
dec
cmp
inc
enter
push
pop
loop
shll
jne
cmp
jmp
fsubs
mov
jecxz
cld
js
repnz
add
jl
adc
push
cmp
push
mov
xor
imull
mov
jge
push
jecxz
pop
mov
es
pop
rcll
add
ds
into
push
aas
xor
jae
xchg
ja
mov
stc
mov
inc
lcall
dec
hlt
movsb
mov
adc
aaa
cmp
out
jmp
cmp
sub
mov
pop
fidivs
aaa
neg
xor
dec
sbb
icebp
movsl
jo
aas
cmp
sbbl
dec
scas
mov
push
addl
mov
popf
add
inc
outsb
outsl
inc
sar
ret
mov
dec
jnp
jnp
pop
fdivrl
jne
or
arpl
popa
mov
add
push
mov
pop
mov
dec
pop
ror
rol
daa
repz
add
aam
mov
in
jge
jg
xor
mov
jne
lods
test
out
xchg
add
cmpsl
test
jg
dec
icebp
or
fdivl
lret
mov
inc
xchg
call
enter
and
adc
mov
loopne
cmp
cmpsb
imulb
jo
push
mov
dec
pop
push
js
sbb
xor
xchg
xchg
push
dec
push
not
jne
inc
dec
in
out
adc
push
or
jge
add
adc
out
pop
dec
cs
iret
arpl
push
pop
sub
lcall
dec
lcall
outsl
gs
mov
add
xchg
mov
mov
sbb
sub
fs
jne
xor
repnz
jmp
cmp
jae
inc
xlat
cs
lds
jns
data16
test
mov
and
insb
cs
pop
inc
cmp
shr
sbb
dec
pushf
pop
cmp
lods
loop
enter
mov
cmp
nop
fnstenv
stos
dec
fcompl
loope
das
adc
std
shrl
mov
js
fsts
dec
es
andb
out
repnz
das
push
ret
aaa
cmp
int3
pop
sti
jae
mov
daa
fld
pop
loope
cwtl
lcall
movsl
jnp
add
call
mov
xor
sbb
or
xor
icebp
jmp
inc
iret
add
mov
cmc
xorb
nop
sti
cmc
add
fsubrl
repnz
decl
xor
adc
sbb
and
inc
loope
pusha
and
daa
hlt
loop
lods
add
out
or
nop
sbb
pop
xor
adcb
outsl
fs
mov
sbb
push
dec
and
std
loope
jno
add
dec
ffree
inc
icebp
pop
adc
adc
or
mov
dec
jo
xchg
jno
inc
out
cmp
add
mov
bound
loope
in
pop
mov
movl
jecxz
mov
cmpsl
shr
leave
add
jl
xchg
ja
cmpsb
mov
push
or
fiadds
imul
pop
jno
in
pop
pop
scas
out
ret
dec
mov
add
jbe
scas
jp
pop
mov
sbb
inc
add
test
jl
out
push
jo
sub
mov
call
sbbl
cmp
ffreep
add
push
add
addr16
jle
push
cmp
int3
mov
mov
out
iret
std
into
call
fstps
int
or
fnstcw
dec
pop
adc
test
sbb
mov
xor
fwait
jge
mov
dec
push
add
das
movsb
hlt
cmc
lahf
mov
dec
push
xchg
xchg
fldl
lahf
add
stos
js
cmp
loop
jns
adc
pushf
inc
loope
subps
xlat
mov
hlt
int3
lcall
scas
inc
mov
insl
daa
xor
jo
mov
mov
pusha
pop
out
cmpsl
adc
adc
jns
fnsave
or
cltd
loopne
daa
pop
or
push
sub
jnp
sar
icebp
fldl
cmp
daa
adc
dec
push
icebp
pop
mov
out
cmpsb
sar
and
jge
imul
push
push
xchg
sub
jbe
pop
sbb
mov
mov
sbb
fiaddl
test
mov
inc
mov
or
jmp
fwait
or
je
sub
cltd
xchg
inc
add
sub
mov
in
dec
rcrl
mov
fneni(8087
xchg
into
les
jp
mov
mov
mov
mov
mov
cmp
jb
and
mov
jno
cltd
test
cli
push
insb
fisubrl
aas
fs
cli
jb
push
cltd
inc
imul
pop
cld
or
jno
cmpsb
xor
sbb
cmpsb
cld
aam
imul
adc
sbb
pop
mov
insl
cmp
loopne
imul
call
movsb
fnstsw
inc
fmull
pop
popa
repnz
xor
idivl
inc
mov
cmp
add
ljmp
jle
ret
sti
mov
sbb
lods
xor
xor
or
leave
mov
stos
and
das
testb
mov
lcall
lahf
or
test
sahf
mov
hlt
mov
dec
jne
mov
int
aaa
pop
xchg
js
lcall
call
mov
mov
mov
addr16
and
fwait
push
sahf
xchg
std
pop
jmp
outsl
and
ret
outsb
or
mov
iret
inc
leave
in
push
adcl
lcall
ljmp
xchg
pop
and
push
mov
mov
push
je
sbb
std
jno
jno
ss
xchg
sub
fldl
test
adc
mov
sarl
pop
fbstp
jp
aad
mov
push
xchg
adc
fisttpll
dec
lods
sbb
int
dec
cld
jge
mov
outsb
sbb
and
pushf
es
std
rcrl
mov
fnstenv
insb
movsb
data16
stos
sbb
mov
mov
cmp
outsl
jnp
inc
mov
fs
and
daa
popa
sahf
iret
cmc
subb
or
adc
cwtl
mov
sub
std
inc
test
cmp
shll
mov
out
push
xor
mov
jle
and
sbbl
loope
outsl
lcall
out
or
cmc
jns
out
mov
mov
mov
fistl
mov
xor
fstpt
cld
dec
jb
push
idivb
enter
mov
repz
pop
xchg
jle
pop
cmp
clc
add
icebp
es
xchg
and
fiaddl
push
lret
cmp
xchg
and
ret
repz
mull
flds
sbb
arpl
xchg
stc
mov
sbb
mov
sub
ljmp
push
mov
das
fsub
in
cmp
mov
pop
outsb
mov
jno
jp
lcall
rorb
xor
xchg
jmp
pop
add
cmp
iret
repnz
cld
add
mov
or
mov
xchg
jne
inc
or
lds
nop
in
cwtl
mov
lcall
add
jne
jb
leave
push
jmp
push
xchg
or
push
adc
cmp
jb
sub
add
jns
rorl
cmp
and
daa
xor
cmp
and
sarl
xchg
adc
rolb
xlat
pop
jp
push
jg
push
dec
test
roll
insb
les
jns
and
aaa
sbb
enter
add
imul
sbb
fisubl
ljmp
scas
loope
pop
mov
popa
bound
lahf
push
rcl
xor
adc
dec
pop
ret
in
xchg
dec
jae
push
sub
pop
xor
lret
test
lock
jmp
or
cmpsb
inc
dec
cmp
jo
stc
shl
shll
and
test
and
fsubs
stc
leave
and
arpl
xor
loop
out
faddl
mov
xor
mov
pop
sub
sbb
aad
xchg
addr16
sbb
or
inc
aas
pop
lods
sub
mov
insl
ja
add
jge
sbb
pop
jae
out
mov
or
xor
inc
aam
sahf
xchg
or
fiaddl
push
mov
xor
jecxz
and
dec
repnz
les
pop
leave
jno
rclb
arpl
js
cmpsl
xor
dec
insl
sahf
xchg
xchg
jb
push
inc
cs
subb
inc
fdivs
jmp
aas
scas
mov
mov
dec
fnclex
insb
loope
nopl
repnz
in
xor
js
sub
jle
jae
cli
movb
and
xor
bound
cmpsl
ret
cmp
bound
jl
xchg
xchg
inc
subl
packuswb
pushf
jge
pop
insl
cmp
pop
inc
xchg
inc
movsl
cli
enter
xchg
pop
les
cmc
inc
movsb
aam
sbb
sahf
add
leave
or
xchg
aad
jmp
les
test
jnp
fcmove
adc
mov
nop
xchg
sub
bound
dec
adc
pop
ret
mov
sbb
aam
fsubl
shrb
and
stc
push
inc
enter
fmuls
imul
pop
lock
out
push
test
sbb
es
ljmp
mov
or
and
movsl
cmpsl
dec
in
cmp
ja
es
bnd
fs
or
or
fdiv
sub
pop
jle
ds
cmpsb
je
sub
dec
xorb
mov
fdivrl
scas
mov
jnp
loop
sbb
repnz
loope
pop
movsb
rorl
fsubl
repz
cltd
inc
mov
mov
sub
sbb
mov
sub
hlt
test
push
sbb
int
cmp
jno
xchg
enter
ljmp
ret
pusha
jle
lcall
mov
fs
pushf
mov
jmp
adc
aas
pop
mov
mov
mov
jae
loopne
jecxz
add
rcrl
scas
aas
xlat
jns
leave
inc
fcoml
sub
fidivs
inc
jge
push
into
inc
pushf
outsl
cmp
test
cltd
xchg
lcall
xlat
mov
and
sbb
cmp
fcompl
push
add
mov
and
cs
jle
jne
test
xlat
adc
pop
addr16
pop
les
cld
cmp
pushf
mov
cmp
adc
push
mov
cwtl
or
jns
jno
jmp
lret
dec
lds
pop
or
lock
mov
xchg
dec
push
inc
jae
cmp
push
es
mov
jmp
and
mov
cmpsl
lods
scas
xchg
push
adc
fistl
cmpsl
cmp
ja
mov
cmp
jl
pop
pop
je
cmc
push
pop
dec
lret
and
jns
ljmp
decb
jno
cmp
xchg
adc
icebp
scas
je
es
mov
dec
dec
sti
mov
std
shlb
bound
mov
mov
loopne
cmp
cltd
add
sti
ljmp
and
push
adc
cmp
mov
lcall
test
inc
sub
lds
mov
sub
cmp
jbe
push
fstl
int
je
cmpl
fadds
mov
popa
test
jne
insb
and
ficomps
popa
xchg
scas
cld
add
push
push
push
push
sub
iret
pop
mov
pop
xchg
jl
pop
xchg
mov
leave
orl
out
lcall
jle
fnsave
mov
push
scas
jb
popf
cmp
insb
and
pushf
imul
call
xchg
cmpsl
jle
jle
imul
xchg
sbb
mov
mov
push
sbbb
fdivrs
push
scas
cmp
sub
daa
xchg
cwtl
in
cld
pop
pop
stos
aas
lret
mov
adc
cmpsl
loope
xorl
daa
push
pop
dec
inc
lret
mov
cmp
int3
imul
stc
add
cltd
xor
popf
lret
fistpll
movsl
cmp
leave
into
lods
icebp
dec
decb
je
push
mov
inc
outsl
ret
inc
add
insl
mov
jb
mov
xor
icebp
fsubl
fisubs
sbb
mov
stc
pop
adc
stc
test
loop
mov
inc
outsl
jno
int3
sbb
movsl
mov
movsl
xchg
mov
stc
fs
mov
popa
test
pop
pop
jg
test
dec
inc
mov
jo
jno
sub
dec
rcrl
das
insl
outsl
cltd
mov
cmp
nop
popa
adc
popa
sbb
xchg
int3
push
test
mov
addr16
jne
xchg
adc
leave
test
repnz
add
lods
subb
add
scas
pop
sbb
roll
inc
xor
repz
loop
bound
xchg
or
push
push
loopne
ret
outsb
test
gs
fmul
or
insl
push
popa
enter
int
leave
aaa
scas
sbb
repz
scas
inc
enter
cwtl
test
xlat
xchg
in
or
cmp
cmpsl
and
xor
addl
ret
fldenv
imul
xor
adc
mov
add
mov
mov
xchg
loop
push
inc
jb
inc
jne
mov
mov
xchg
and
pushl
push
rclb
or
ret
jecxz
xor
xchg
in
add
sbb
std
add
sbb
mov
lds
mov
pop
cmc
mov
and
mov
out
pop
adc
xchg
pop
lret
clc
or
mov
add
jecxz
xlat
push
dec
mov
fstl
jb
rcrb
testb
stos
lods
inc
xchg
out
or
pop
sub
in
je
sub
push
idivb
insl
mul
or
in
jle
adc
testb
pop
and
insl
push
pop
in
es
mov
jp
imul
push
insl
jne
sahf
scas
setb
inc
add
sarb
pop
jo
push
call
or
ja
mov
frndint
lret
cld
scas
andl
push
mov
push
sbb
fs
jp
mov
xor
repnz
jnp
icebp
sub
imul
or
shr
jbe
in
fcmovb
push
sti
adc
inc
xor
scas
xor
sbb
jmp
aaa
ds
sbb
add
push
cmpsl
es
jno
add
repz
das
pop
test
lea
xlat
mov
mov
or
mov
xor
push
mov
xor
pop
mov
sti
mov
pop
nop
pop
cs
inc
inc
push
mov
mov
pushf
fiadds
ds
lods
push
dec
iret
rcrb
aaa
sub
movsl
cli
add
pop
mov
sbb
filds
mov
adc
pop
mov
and
jmp
out
js
pop
int3
cld
push
sub
inc
mov
pop
lret
stc
mov
popa
mov
les
sub
pop
adc
jmp
xchg
inc
dec
pop
aam
shlb
sub
mov
or
imul
add
repnz
jecxz
push
ret
bound
popf
iret
and
shl
dec
in
lcall
cmp
add
dec
mov
and
sbb
fcoml
out
inc
add
imul
add
popa
push
orb
out
popf
push
icebp
mov
bound
push
pop
das
lods
add
pop
sbb
sbb
cli
mov
adc
sub
push
je
and
ud0
rcll
adcb
mov
inc
pop
pushf
push
sbb
in
xor
jle
ljmp
shll
repnz
shl
daa
pop
inc
sub
jmp
dec
mov
lahf
lock
xchg
es
sub
shrb
test
je
lods
scas
jb
mov
xchg
or
push
sbb
cld
mov
loope
adc
and
test
repz
inc
or
push
mov
lock
fistpll
dec
pop
jmp
addr16
xchg
popf
loope,pn
xorl
pop
or
mov
das
insb
xchg
fistpl
add
sub
subb
ficompl
sti
mov
jnp
dec
or
mov
lahf
mov
jbe
jno
lret
sbb
push
push
aaa
pusha
movsb
out
cmp
rorb
lds
sahf
mov
ret
and
clc
mov
pop
mov
dec
cmp
mov
div
and
xor
mov
cmp
pop
lea
in
cltd
dec
mov
fs
jns
mov
jg
decl
nop
mov
fsincos
dec
pop
jae
mov
leave
xchg
aaa
dec
stc
outsl
repz
mov
in
fadds
xchg
add
popf
push
jnp
sub
and
adc
repnz
push
pop
push
ja
or
je
lcall
dec
pop
add
mov
or
ficoml
call
mov
je
movsl
inc
xchg
ds
imul
outsl
rolb
sub
mov
inc
sarb
inc
sti
xchg
pop
popa
notl
jmp
enter
and
pop
or
dec
cwtl
cmpsb
sub
js
xor
jns
xor
mov
mov
dec
inc
fnstcw
into
xor
fadd
stos
push
call
inc
adcl
pop
out
pusha
stc
out
mov
sub
popa
push
push
push
push
daa
mov
mov
fstp
mov
xor
call
pop
les
enter
out
jmp
clc
insl
outsl
jl
mov
pushf
leave
mov
push
test
popf
cmp
aas
or
mov
repz
mov
scas
push
inc
fs
mull
jnp
stc
mov
scas
imul
sub
mov
pop
mov
imul
ret
mov
xchg
cmp
mov
or
inc
addr16
leave
notb
push
pusha
loopne
add
fmulp
or
push
ds
or
mov
jae
add
hlt
les
fwait
mov
movsl
stos
jmp
incb
or
stc
cs
add
test
sahf
rcrb
xor
lock
jbe
shlb
repnz
push
jno
test
mov
inc
lahf
ss
mov
into
mov
in
push
xchg
or
jmp
or
xchg
stos
xchg
push
adc
in
fbstp
insl
loop
push
pop
xor
data16
add
adc
popa
repz
and
mov
fidivl
jg
out
lods
xor
dec
scas
in
mov
push
ret
arpl
es
imul
das
lods
push
fsubs
scas
add
sub
mov
repz
sbb
icebp
push
inc
xor
divl
pop
jo
mov
add
insb
mov
imul
pop
push
fwait
bound
cwtl
imul
cltd
data16
adc
jne
dec
jb
icebp
testb
inc
cmp
xchg
jecxz
outsb
jge
loop
push
and
mov
leave
pop
mov
hlt
jno
inc
jmp
push
loopne
les
sbb
js
jg
inc
jo
push
test
cmp
leave
dec
dec
fidivrl
dec
xor
fstpl
cs
fsubrs
xor
sub
mov
xor
int
inc
outsb
push
in
nop
aad
mov
xchg
jmp
fucom
out
testb
xor
test
in
add
xchg
icebp
push
cli
out
cs
or
push
int
stc
lret
pop
jecxz
mov
jo
add
js
out
jne
jmp
xor
jmp
cmp
add
pop
shlb
jp
lcall
pop
mov
sub
cmp
dec
out
jnp
push
fs
mov
sbb
pop
or
into
pop
imul
pop
cmp
vpcmpeqd
das
iret
jns
push
scas
mov
pop
xchg
test
mov
negb
fidivrs
push
xlat
fdivrl
popa
inc
adc
dec
flds
mov
test
int3
outsl
jb
mov
fisttpll
fnstenv
push
data16
into
mov
xor
into
mov
stos
xor
lret
xor
jae
mov
mov
adc
loopne
stc
rorb
in
jns
into
shlb
ja
mov
add
dec
adc
out
dec
aaa
pop
pop
sub
xor
mov
lea
sahf
mov
lock
dec
mov
sbb
jg
push
popf
ljmp
xorb
cmp
mov
mov
cld
or
push
addr16
daa
push
mov
add
fld
iret
jnp
fxch
inc
arpl
icebp
in
iret
mov
cwtl
jge
push
rsqrtps
cld
jne
mov
mov
adc
lods
loope
xor
jge
addb
cltd
div
pop
sub
push
mov
cmp
adc
sub
cmpsl
jo
sahf
push
pop
jns
scas
xchg
xor
or
mov
mov
jp
icebp
or
dec
shrd
adcb
jbe
mov
mov
lds
jp
mov
sub
inc
jl
cmp
mov
push
inc
and
das
jl
jle
dec
cmp
mov
test
stc
mov
sti
repnz
scas
lods
mov
mov
push
sbb
adc
shl
push
sbb
popa
inc
scas
gs
push
cmp
mov
xchg
data16
ret
pop
ss
into
xchg
jg
mov
jle
stos
dec
jbe
sub
repnz
lcall
lcall
stos
sub
fs
jbe
nop
out
inc
sbb
or
mov
dec
and
enter
sar
cmpsb
or
std
gs
push
fwait
cmp
push
js
cmc
mov
mov
mov
jp
mov
shll
popf
cmp
jge
xor
dec
outsb
fiadds
jg
dec
dec
iret
lods
mov
cmpsb
mov
test
xchg
es
outsl
sbb
lea
cwtl
test
xchg
sub
std
mov
add
std
scas
mov
mov
fisttpl
int
sbb
pusha
int3
shll
loope
mov
aam
pop
shll
mov
lds
icebp
movsb
ja
add
orl
mov
push
inc
jecxz
cli
lds
mov
stos
adc
in
addr16
xchg
or
push
xchg
insl
mov
movsb
iret
jno
lahf
mov
in
add
xchg
popf
sub
push
ljmp
pop
cli
call
ljmp
int3
ljmp
dec
jnp
imul
popf
icebp
ds
xchg
mov
mov
sub
xchg
repz
iret
into
cmpsb
ret
or
daa
lahf
mov
std
mov
fcmovnbe
dec
sbb
mov
xchg
outsl
mov
movsl
lds
stc
loope
inc
cltd
bndldx
pop
mov
loopne
cmpb
jno
lret
jb
aam
sub
or
cmpsb
iret
andb
push
pop
add
stc
inc
mov
and
insl
sahf
add
mov
pop
daa
xchg
icebp
out
lret
or
shll
push
cmp
jo
bound
aad
out
in
and
ret
stc
add
mov
cmc
loope
add
add
cs
hlt
dec
push
xor
sarl
mov
add
aam
out
daa
ret
jmp
into
dec
cmpsb
cs
das
pop
mov
stos
adcl
sti
cmpsl
test
sbb
subl
inc
mov
inc
dec
mov
lods
iret
pop
add
push
jae
ljmp
popa
xchg
in
cwtl
jns
in
cmp
add
push
pop
push
mov
subl
add
or
sub
rcrl
cs
add
adc
aad
cltd
mul
fdivrp
das
push
icebp
mov
xchg
mov
rclb
adc
inc
imul
adc
lret
dec
jbe
mov
sbb
xlat
ss
dec
lods
ljmp
push
push
jl
loope
xchg
push
mov
repnz
push
pop
adc
mov
mov
inc
ljmp
aam
inc
push
call
stos
idivb
push
pop
jge
ret
mov
mov
out
call
adc
je
pushf
dec
xchg
sub
jno
xchg
lahf
addl
sub
dec
mov
pushf
mov
jg
sbb
cmp
into
unpcklps
insl
test
jo
sbb
adc
sahf
rorl
ret
lods
mov
cld
sahf
push
test
mov
hlt
lds
pop
fwait
sbb
ds
add
cmp
inc
aad
cmp
nop
sub
push
js
aaa
mov
jle
jbe
and
xchg
or
xchg
jb
lcall
dec
inc
lods
nop
cmpsb
sbb
test
or
dec
fildl
dec
icebp
sar
leave
hlt
cltd
int3
aas
adc
mov
xchg
cwtl
and
out
mov
out
mov
insb
fs
pushf
fwait
mov
js
out
mov
add
fisttpll
xchg
je
clc
lods
jb
lcall
jae
insl
outsl
push
push
outsl
mov
jae
pop
mov
fldcw
add
cli
and
pop
mov
cmc
pop
enter
mov
pop
sbb
add
mov
cmp
cmpsl
cli
pop
adc
gs
xchg
loope
pop
sub
cmp
cwtl
cmp
cmp
call
cmp
in
ficoms
into
arpl
mov
push
fidivs
test
mov
sub
bound
fdivl
xlat
xchg
jb
das
push
aaa
push
sub
push
stos
push
shll
arpl
nop
scas
in
leave
insl
decb
inc
repnz
out
add
leave
or
ljmp
mov
and
stos
inc
cmp
mov
pop
shrl
dec
sub
jne
xlat
inc
test
adc
shlb
repz
pop
mov
jae
push
mov
lock
imul
adc
jp
add
inc
loop
mov
mov
insl
push
loop
cmp
ds
call
mov
lock
leave
mov
test
or
pop
pop
bound
in
dec
mov
push
sub
and
or
lahf
mov
or
gs
add
fstps
das
push
inc
scas
xor
adc
push
ret
and
faddl
dec
add
movsb
mov
out
imul
xorb
shlb
jno
cld
sub
inc
dec
mov
ss
push
imul
rcrb
push
flds
pop
pusha
loop
jbe
xchg
les
adc
mov
dec
rclb
mov
hlt
xlat
mov
movsb
or
xor
test
filds
sub
mov
jae
inc
jmp
cmp
dec
repnz
lcall
jle
ds
push
xchg
adc
sbb
cld
sbb
repnz
sub
sbb
mov
outsb
in
scas
mov
or
mov
shl
xchg
push
or
jae
insl
fists
dec
rcrl
int
mov
pushf
mov
insl
add
mov
hlt
jg
dec
imul
test
popa
mov
and
into
add
into
push
inc
ja
push
cli
sar
jg
pop
pop
adc
jne
mov
fsubrl
or
stc
xlat
insb
imul
in
sub
sbb
fs
rcl
jle
into
or
dec
call
push
and
lods
xor
cmc
mov
add
daa
mov
xor
repnz
mov
pushf
jmp
push
cmp
add
xchg
dec
popf
ds
jge
nop
and
bswap
mov
lock
jmp
jmp
lahf
sub
sbb
cs
js
addr16
xchg
dec
mov
rorl
inc
pop
dec
das
mov
and
pop
mov
dec
inc
das
scas
sti
inc
sub
bound
cltd
and
bound
xor
fildll
popf
imul
outsl
decl
xchg
push
add
mov
es
enter
push
das
movsb
jmp
xor
out
mov
mov
adc
add
enter
hlt
xchg
fs
fcoms
or
aam
in
mov
push
mov
fildl
sti
sub
pushf
mov
ja
insl
dec
sti
mov
iret
push
imul
insb
out
xchg
cmp
sbb
cltd
fldl
sub
push
cmp
imul
cmp
cmpsl
sub
out
aas
idiv
lods
popa
fistl
cmp
mov
arpl
dec
lret
pop
lods
cltd
outsl
mov
jns
cmp
ja
xor
xchg
mov
int
test
mov
add
jbe
mov
adc
sub
fsts
pop
xchg
push
test
cmp
pop
sub
fisubrs
fwait
sub
xchg
pop
inc
and
scas
pop
or
rolb
lods
dec
scas
shlb
or
out
jp
cmp
sbb
lea
xchg
xchg
leave
in
repnz
testl
sub
pop
xor
or
mov
scas
insl
push
or
mov
outsl
movsb
in
lods
dec
mov
loope
divl
and
shll
pop
add
sbb
inc
inc
mov
add
mov
push
testl
mov
xchg
mov
inc
adc
add
das
inc
or
xchg
pop
and
or
scas
jg
jle
aam
mov
es
pop
addr16
fpatan
jge
mov
lcall
stc
je
push
cmp
push
ficompl
incl
jecxz
jg
notl
popf
pop
pushf
cmpsl
hlt
jo
pop
cmp
insl
dec
sbb
andl
add
ds
push
addr16
dec
pusha
clc
imulb
mov
push
ret
dec
call
mov
or
cmp
add
shlb
scas
xlat
sub
adc
aam
aas
outsb
addr16
lcall
push
adc
add
sub
xor
dec
mov
std
inc
jmp
or
cmp
jl
cmp
jne
jne
dec
sbb
inc
imul
adcl
jb
push
int
popa
negl
inc
cmpl
dec
sub
jge
out
adc
fldenv
cwtl
or
and
vmovaps
adc
clc
das
inc
jmp
push
add
int3
mov
loopne
jmp
mov
jg
arpl
mov
loop
mov
sahf
adc
ljmp
inc
lahf
in
pop
mov
push
lods
inc
push
sahf
imul
sbb
pop
es
sub
in
stos
sub
xorl
inc
loope
jecxz
add
pop
xor
into
test
lret
and
int3
cli
ljmp
lret
leave
sahf
repz
sbb
int3
scas
adc
out
push
cmp
xchg
inc
repz
push
ja
outsb
outsb
sub
xor
adc
ret
mov
call
inc
mov
in
mov
add
mov
into
and
pop
jecxz
in
shlb
fisubrs
int
mov
cs
jae
mov
sbb
push
subb
mov
pop
call
mov
dec
cmp
jbe
adc
and
push
xchg
cld
pop
aas
jb
loop
pop
sahf
jge
ljmp
push
sbb
dec
xchg
out
stos
dec
jp
push
cmp
shll
cwtl
cld
push
imul
adcl
cltd
push
xor
call
push
icebp
mov
pop
cmpsb
xor
outsl
inc
mov
nop
mov
cmpsb
pop
xor
in
cmp
lret
fisttpl
mov
orl
in
jmp
sub
fwait
sbb
into
test
cld
loopne
iret
pop
mov
fwait
cmp
mov
movsl
jbe
dec
jle
subb
or
mov
in
pop
pusha
popf
loopne
fs
sub
decl
in
inc
add
mov
sbb
ficompl
jecxz
and
repnz
mov
test
xchg
lcall
push
mov
push
iret
lods
imul
or
cltd
aas
push
gs
data16
lahf
fcoml
rorl
mov
cmc
mov
enter
xchg
insb
xor
xor
fcmovb
push
sbb
lock
cltd
fs
push
sar
or
cmp
rcrl
pop
pop
popa
push
add
pop
arpl
orb
test
aam
lea
and
daa
mov
lret
jno
fdivp
pop
pop
gs
inc
push
mov
xchg
sahf
add
fistps
mov
aad
data16
jmp
mov
jb
in
xchg
lods
push
mov
ficoml
sbb
in
cmp
lret
mov
or
mov
mov
push
and
dec
jb
xchg
fisttps
pop
or
lcall
shl
xor
arpl
sub
lods
in
enter
mov
push
mov
push
popa
shrl
push
int3
sub
sti
push
push
shl
cmc
ret
inc
push
push
pop
das
sub
call
mov
sub
mov
adc
add
aas
cmpsb
cmpsb
sbb
mov
dec
fldenv
pop
cltd
lods
sahf
push
or
inc
adc
dec
and
pop
mov
inc
pop
vandps
adc
or
xor
push
js
fstl
push
or
push
mov
mov
xchg
ja
mov
push
sub
mov
std
mov
call
outsb
inc
pop
pop
out
jg
ja
cmp
insb
imul
push
lock
subl
loop
or
mov
mov
mov
cmp
xor
call
xorb
sub
pop
and
and
or
dec
mov
mov
in
dec
pop
mov
cmpsl
cltd
iret
mov
int
jge
pop
les
xchg
inc
sbb
aaa
or
jbe
push
or
add
mov
mov
push
mov
mov
jne
sbb
sub
stos
pushf
xchg
ljmp
xchg
stos
jne
push
or
jmp
cwtl
xor
mov
mov
pop
xor
push
insb
sub
jl
ljmp
cmpl
jbe
insb
sti
pop
sub
and
mov
insb
cmc
loopne
lea
rcr
imul
inc
inc
nop
inc
fidivrl
and
out
stos
lahf
fwait
xchg
test
inc
jo,pt
pop
adc
test
push
mov
lret
stc
jae
popa
fistpll
mov
and
pop
xchg
ljmp
jns
lcall
sahf
pop
pop
xor
imul
pushf
mov
push
jle
std
test
inc
dec
sub
push
mov
xor
xchg
inc
cmpsl
adc
cwtl
xchg
pop
pop
jle
cmp
pop
mov
out
test
add
xchg
push
shlb
pop
jns
push
cld
jne
out
cmp
jmp
test
loopne
stos
mov
mov
pop
int3
cwtl
mov
int
add
xchg
push
lret
dec
iret
cmp
and
pop
mov
push
xor
push
rcll
sti
mov
cwtl
pop
xchg
jle
test
xor
stos
into
mov
cltd
jae
inc
sbb
push
adc
test
lahf
rcl
rcrl
mov
push
sbb
and
inc
inc
cmp
mov
sub
sub
mov
pop
pop
cwtl
cmp
pusha
jecxz
leave
stc
in
sbb
mov
pusha
lds
sbb
mov
mov
inc
fbstp
adc
and
or
or
enter
pusha
or
xchg
sbbl
imul
jmp
sbb
dec
popf
mov
in
sub
and
push
and
iret
mov
sub
test
daa
adc
inc
sbb
or
push
cmpsl
mov
inc
mov
jns
popf
or
hlt
decl
and
arpl
bound
jg
cld
add
pop
push
sub
scas
adc
je,pn
adc
cmpsl
cmp
fs
xchg
out
in
lret
fwait
mov
mov
data16
and
xor
sub
in
lds
decb
adc
in
outsb
dec
lods
lods
jne
lret
xor
mov
jnp
jmp
dec
and
leave
lret
test
adc
arpl
xchg
adc
dec
pop
xlat
loope
push
movsl
outsb
xor
or
dec
in
pusha
out
mov
xchg
lcall
cmc
rcll
cmp
cltd
cwtl
dec
fldl
add
nop
ficomps
xchg
sub
add
pop
xlat
inc
fcom
jbe
mov
and
shrl
mov
jl
jnp
cmp
fnsave
cmp
push
pusha
mov
xlat
cwtl
jecxz
clc
sbb
sahf
popf
jp
fnstenv
rcll
pop
adcl
xorl
movsl
aas
int
dec
sub
rorb
lds
mov
push
test
or
push
mov
pop
leave
mov
jb
xchg
jmp
and
mov
cmpsl
std
or
mov
jo
inc
movsl
out
cmp
fildll
xor
add
mov
adc
jg
aas
add
add
mov
fisttpl
jb
psllw
add
sub
bound
pop
xchg
test
xchg
xor
movsb
addr16
enter
aam
popf
adc
inc
push
loopne
and
dec
and
adc
aaa
sub
lcall
rorl
xlat
aam
sbb
pop
adcb
pushf
daa
jle
push
jo
inc
pcmpgtb
sbb
add
je
repnz
sbb
mov
jns
add
and
ret
lods
lea
adc
xor
sub
cmp
cld
sub
sbb
add
aaa
xchg
jnp
sbb
mov
and
iret
and
mov
js
sbb
test
inc
loopne
je
fnsave
je
fcoms
dec
dec
ljmp
inc
popf
in
int3
rcrl
xchg
cltd
outsl
mov
fsubrl
enter
dec
insl
roll
jge
data16
je
xchg
adc
sub
xchg
ret
popa
push
sti
rcl
sbbb
movsb
call
adc
sub
sti
xchg
mov
lods
pop
jmp
cmp
mov
cmp
movsb
dec
daa
pop
push
xor
mov
push
sbb
shll
pop
lahf
dec
pop
popf
scas
outsb
jb
push
jne
inc
in
and
test
call
push
jbe
mov
push
lahf
movsl
out
shl
cmovg
inc
jnp
mov
insl
clc
std
pop
cs
lcall
sti
xor
ds
pusha
add
inc
movsl
jl
ja
fcmovu
mov
popa
mov
pop
pop
xor
stc
fdivrl
push
in
repnz
lret
dec
fdivs
pushf
test
int3
ret
dec
leave
and
cli
idiv
insb
out
stc
sahf
into
fnstenv
mov
xchg
pop
fldcw
lahf
add
xchg
add
pop
xchg
mov
mov
xor
or
aas
cmp
in
leave
mov
rcrb
jmp
xchg
cmp
popf
mov
icebp
xchg
pusha
jb
pop
xor
ret
fstl
mov
or
adc
sbb
inc
sahf
mov
mov
or
popa
push
cltd
ja
sbb
xlat
int3
iret
inc
adc
push
mov
addr16
clc
push
test
dec
jmp
or
mov
push
mov
xor
arpl
rcrb
push
rol
dec
cld
xchg
mov
outsl
bound
pop
mov
sti
adc
repnz
mov
inc
stos
jb
mulb
inc
or
cli
pop
and
rorb
je
lcall
stc
std
xchg
xchg
jl
sbb
sub
dec
testl
cltd
scas
out
incl
jecxz
add
push
leave
adc
hlt
pop
mov
pop
inc
dec
lahf
dec
ja
cmp
xor
mov
cs
and
movsb
adc
jae
adc
add
stos
sahf
mov
adc
outsb
add
lret
popa
push
jp
scas
mov
imul
insl
sbb
push
movsb
dec
stos
and
xor
and
cld
pop
fsts
cmp
mov
sbb
push
clc
xchg
push
enter
lret
or
mov
inc
mov
sub
xchg
lahf
jbe
aad
dec
leave
lds
fstp
mov
sarb
push
data16
fmuls
adc
jecxz
out
imul
out
daa
scas
test
popf
lods
sbb
add
pusha
push
arpl
add
mov
jbe
cmp
ret
push
fdivr
mov
add
gs
jecxz
pop
fisttpl
cmp
push
push
and
imul
orb
test
call
ss
cmp
loop
xor
pop
adc
push
fbstp
repnz
rcrl
fmuls
mov
jmp
dec
and
aad
adc
mov
lcall
dec
pop
mov
sub
xor
test
jb
pop
arpl
popa
cmpsl
adc
push
jnp
pop
mov
nop
pop
inc
subl
mov
pop
aam
bound
adc
push
push
loopne
jl
notl
test
xchg
fcoms
das
mov
sub
pop
shlb
pop
in
push
dec
and
add
call
shl
ss
adc
mov
xchg
inc
das
cwtl
in
gs
sub
jmp
pushf
aas
aam
mov
out
arpl
out
sub
push
pushf
lret
aas
xor
js
sbb
and
pop
mov
cmp
mov
xchg
sub
popf
gs
push
lods
and
faddl
into
aad
repz
dec
leave
jne
pop
dec
outsb
add
outsb
out
pushf
out
lds
push
jecxz
sub
stos
or
loopne
cwtl
in
hlt
test
adc
pop
sub
add
cs
and
imul
mov
jbe
add
add
add
stos
or
xchg
sub
or
pop
and
dec
mov
inc
int
std
imul
and
mov
mov
cmp
add
xor
sub
mov
outsl
jecxz
and
sbb
rclb
sbb
popf
test
loopne
ror
cmc
leave
scas
stos
or
ret
adc
pop
push
sbb
aad
push
or
xchg
ret
xlat
add
test
lock
dec
sahf
rorb
jl
cmp
push
jge
out
add
cmpsl
mov
sti
xchg
lock
add
inc
divl
dec
es
call
push
outsb
jg
jge
in
hlt
mov
fisubl
fdivp
adc
test
mov
lret
sbb
data16
cld
mov
sbb
sub
mov
mov
mov
add
jne
lock
mov
outsb
push
or
loopne
aam
jne
adc
pop
rolb
in
rcll
push
push
and
out
mov
dec
fsubrl
jns
fidivrl
pushf
adc
lds
adc
data16
cs
inc
jmp
fildl
cmpsl
adc
out
ret
fstpl
add
dec
mov
fwait
xor
mov
daa
push
lea
arpl
jbe
out
dec
sbb
jmp
ds
pop
ljmp
pop
xchg
popa
aaa
pop
rol
pop
inc
int3
xchg
push
pop
inc
add
sti
nop
inc
push
pop
mov
popa
dec
insb
push
hlt
mov
fucom
pop
sbb
or
xchg
cmp
shrl
add
cld
aam
push
pop
inc
jo
loop
push
cld
arpl
in
or
in
xchg
pusha
das
jb
mov
push
cmp
imul
jg
jne
sub
int
push
je
inc
push
cmp
mov
mov
pop
insb
loop
add
aam
call
xor
mov
xorl
adc
outsl
pushf
loopne
mov
xor
xor
adc
dec
mull
aaa
push
push
mov
add
xchg
mov
arpl
roll
imulb
jo
lods
inc
pushf
cltd
mov
fdivl
inc
adc
or
cmc
data16
inc
call
jnp
je
cld
dec
lret
das
popa
lcall
and
in
pop
addb
fcmove
pop
stos
and
pop
cltd
sub
mov
adc
ljmp
out
push
and
outsl
push
pop
in
jbe
das
icebp
mov
jno
pop
outsl
jmp
sbb
add
push
cli
jecxz
gs
xchg
dec
lds
out
in
xlat
xchg
adc
popa
loope
jnp
pop
mov
cmpl
lds
adc
and
mov
lds
push
popa
and
shll
pop
rcrb
jp
jmp
inc
stc
lock
loope
xor
sub
mov
daa
sub
fiaddl
cld
call
das
es
mov
and
cmpsb
mov
mov
adc
repz
enter
sub
mov
int3
jle
mov
jmp
fstp
mov
mov
paddsw
in
orb
xlat
aas
or
cmc
dec
jb
and
add
mov
pop
inc
xchg
sub
imull
mov
les
dec
test
xor
adc
mov
jg
lcall
loop
mov
jge
or
out
dec
dec
repz
push
mov
movsl
push
adc
fnsave
scas
cmp
lea
lret
insl
mov
in
lds
jbe
xchg
test
mov
in
dec
daa
mov
out
mov
loope
push
pushf
lods
frstor
xor
imul
notl
pop
push
in
gs
inc
dec
jg
dec
inc
repnz
xchg
aaa
ss
inc
ret
pop
out
xchg
xor
stc
cmp
popf
scas
enter
mov
jae
lods
or
hlt
jb
test
jl
int3
std
cmpsb
dec
lea
sub
xor
jecxz
test
rclb
mov
mov
jmp
inc
mov
pop
rorb
inc
test
push
incb
jae
cwtl
shrl
mov
in
incb
pop
call
out
in
fst
fidivl
mov
adc
movsb
js
ja
mov
mov
ficoml
leave
push
enter
lea
iret
xchg
dec
es
lock
mov
adc
and
mov
sub
pop
jnp
mov
cmp
imul
pop
push
push
cwtl
cmpsb
pop
add
xchg
out
xchg
inc
jge
xchg
int
addr16
out
mov
out
in
jbe
data16
sarb
push
add
mov
pushf
dec
lcall
frstpm(287
pop
out
jae
out
leave
pop
stos
test
test
inc
add
imul
pop
test
sbb
push
mov
add
dec
mov
insb
dec
test
ror
add
mov
add
jg
add
flds
fincstp
test
in
pop
fldl2e
mov
inc
out
cs
xchg
add
inc
dec
gs
cmpb
add
ds
pop
in
ds
fldl
mov
xlat
jge
jge
inc
jge
jbe
cwtl
inc
or
xor
dec
xor
stos
cwtl
sbb
shlb
and
fists
and
adc
sub
pushf
adc
cmp
jne
cmpsl
shr
mov
and
or
lds
je
aad
cmpsl
dec
mov
popf
ss
cmp
bound
mov
in
and
int
lds
aas
sub
roll
adc
lret
cmpsb
pop
into
cmp
jle
jae
xchg
mov
orb
lret
dec
lock
and
xchg
push
movsb
sbb
add
andl
add
jle
in
and
shl
loop
and
mov
jp
jbe
add
add
push
cmp
mov
fst
xchg
mov
rcrl
repz
ljmp
addr16
outsb
sbb
sbb
push
adc
aas
stos
xor
imul
push
in
mov
out
and
xchg
and
sbb
mov
daa
pop
cwtl
bnd
ss
mov
pop
jne
aad
adc
sub
mov
out
cmc
mov
rclb
pop
cmp
orb
cmpsl
xchg
adc
or
sbb
cmp
icebp
push
cwtl
ficomps
pop
fs
std
lods
mov
cmp
repnz
mov
xchg
es
xor
sahf
mov
and
sar
sub
push
sub
fwait
mov
cwtl
lods
inc
mov
out
movsl
cmc
dec
mov
addb
lcall
sbb
repnz
sbb
bound
ss
xchg
dec
jne
call
adc
mov
sub
lret
jno
mov
pop
cs
fstps
jae
test
xor
sub
lods
imul
jecxz
xchg
shl
addr16
pusha
js
test
ss
or
xor
xor
jmp
out
pop
push
mov
dec
push
fimull
jns
pop
pusha
into
hlt
cmp
inc
outsl
fists
and
add
cs
sub
cld
xor
sti
jae
push
mov
ja
loope
lret
jmp
push
jno
movsb
cmp
pop
xor
fisubrl
sarl
push
mov
sub
rorl
into
js
adc
inc
sbb
mov
mov
add
or
xor
sbb
subb
packsswb
outsl
jl
adc
xchg
push
dec
fbld
je
sub
pop
out
fcomi
data16
outsl
out
mov
mov
lea
xchg
dec
pop
xchg
pop
add
mov
inc
adc
fsubr
dec
pop
data16
repz
adc
jb
adc
std
push
mov
aam
std
mov
mov
arpl
lret
ss
jb
xchg
popa
loop
and
sarl
popa
clc
xor
cld
jb
rcl
sub
sbb
push
ja
icebp
int
cmp
ror
aas
jo
mov
xlat
add
std
sbb
testl
xchg
push
jb
xorb
js
les
inc
mov
cmpsb
dec
or
pop
mov
cmp
fmull
popa
mov
jo
ret
loope
pop
mov
call
notb
dec
add
insb
jecxz
in
cs
movsl
and
and
imul
test
bound
xor
mov
sbb
fcoml
jg
ficoms
je
cs
mov
push
iret
and
sbb
mov
push
arpl
lret
enter
adc
or
dec
insb
xchg
test
movsl
iret
mov
shl
pop
sub
mov
out
pop
ss
stos
cmc
ljmp
inc
sahf
scas
cmp
dec
push
cmpsb
ds
jmp
scas
or
or
or
cmp
adc
sti
xchg
add
mov
fwait
jg
sbb
int3
and
mov
cltd
push
mov
jl
icebp
in
push
cmp
mov
sub
lret
aaa
fwait
adc
test
or
adc
fiadds
jg
pop
adc
popf
mov
xchg
icebp
andb
aad
pop
adc
fsubs
shlb
mov
add
jnp
mov
cli
push
pop
dec
das
mov
inc
icebp
xor
outsb
adc
sub
pusha
mov
push
cmp
repnz
or
stos
test
sub
inc
adc
mov
popa
lret
lea
push
xchg
dec
test
adc
xlat
push
cmp
push
cli
xchg
mov
mov
mov
push
les
add
push
cmpsb
sbb
mov
out
dec
leave
xchg
ret
fmull
mov
adc
dec
out
xchg
cmc
sbb
add
sub
xor
mov
and
xor
jle
sbb
push
jle
inc
mov
loope
sub
mov
or
dec
int3
rorl
mov
pop
pop
adc
imul
leave
lahf
je
xor
xor
dec
inc
movsb
sbb
jmp
add
sbb
xchg
jns
adc
adc
sbb
addb
jnp
mov
sbb
rorb
sbb
jne
ljmp
or
gs
mov
stc
int
sub
and
and
adc
pop
dec
cmp
lods
aas
xor
repnz
lret
mov
push
mov
mov
in
outsl
insb
pusha
cmp
sub
cmc
add
outsb
ret
jnp
notb
int3
imul
ljmp
add
sub
and
insl
xlat
xor
add
cmp
stos
inc
cld
sbb
les
mov
std
sbb
add
mov
gs
mov
xor
lret
pop
or
rcrb
mov
scas
sbbb
cwtl
xchg
cld
push
divb
mov
rcll
inc
xor
pop
in
sub
test
leave
mov
and
clc
add
aas
rcll
adc
xchg
push
ret
pop
jbe
mov
xchg
lock
ljmp
aam
jb
lods
in
sub
stos
push
movsb
sub
popa
call
imul
and
mov
lret
xchg
xor
xor
in
xor
dec
sbb
push
out
imul
es
movsl
mov
in
xchg
adc
adc
cli
inc
sbb
fidivrs
jmp
pop
fdivs
outsl
dec
lods
and
sbb
adcl
cmp
mov
pop
mov
mov
sti
jnp
mov
push
out
pop
js
repz
mov
fstp
cwtl
mov
addr16
mov
cltd
pop
jne
sub
mov
pop
mov
movb
popf
fwait
test
addr16
or
sbb
xrelease
or
xchg
mov
shlb
cmpsb
nop
lahf
mov
mov
fistps
mov
add
push
aad
pop
in
sbb
data16
movsb
jne
sbb
or
nop
gs
pop
push
std
xor
leave
lcall
cwtl
mov
in
pop
dec
mov
push
and
repnz
data16
shll
sub
mov
adc
sbb
sbbb
sti
push
addr16
imul
jp
push
scas
add
mov
ja,pn
cmp
xchg
adc
pop
loop
jnp
pushf
es
jns
cmovno
dec
out
dec
in
inc
dec
push
ficompl
les
in
xchg
cltd
push
outsb
push
dec
repz
push
and
addb
mov
dec
scas
push
stos
lahf
jb
leave
pusha
ljmp
and
xlat
shlb
or
movsl
dec
sub
test
mov
jnp
push
xor
jle
or
hlt
add
and
js
ds
fistl
xchg
and
cmp
test
mov
xchg
mov
aad
adc
push
addl
cs
xor
adc
mov
rcrl
rcll
in
aaa
outsb
sahf
int
sbbl
imul
jecxz
cmp
sbb
jae
and
push
in
sahf
xor
jae
mov
lods
inc
in
adcb
scas
add
mov
pop
push
inc
inc
inc
addr16
test
lret
jle
xor
lods
pop
shr
in
pop
push
cmp
dec
lret
mov
pushf
cmp
jp
inc
adc
pop
xchg
pop
testb
sbbl
push
fcoml
mov
popa
mov
sub
scas
ficompl
dec
mov
jl
movsb
data16
xchg
mov
clc
or
add
nop
lock
adc
scas
stos
push
add
inc
jns
outsl
push
pop
jae
movl
jmp
mov
jns
sahf
add
cmp
push
fsubrs
cmpsb
inc
jp
adc
cld
push
mov
jl
mov
movsl
jmp
hlt
inc
lds
fstps
ja
push
push
lret
dec
scas
sub
cmc
dec
into
adc
out
inc
ret
inc
xor
cmp
pand
jg
sahf
into
or
or
pop
std
mov
test
and
xchg
add
arpl
hlt
mov
cld
insl
mov
mov
fwait
stos
cmp
jb
popa
fisubrs
and
adc
movsb
cltd
shrb
dec
rorb
adc
into
or
or
les
addr16
imul
and
daa
es
xor
pop
pop
sub
ds
fadd
mov
out
cltd
jnp
fsub
mov
xchg
push
popa
nop
jnp
mov
mov
and
addb
inc
movsl
lods
adc
fnsave
sahf
adcl
dec
mov
js
mov
fistps
mov
aas
xchg
push
dec
mov
icebp
int
push
or
add
dec
loope
fwait
jmp
jne
cmp
inc
mov
push
sbb
push
sarl
clc
int
aaa
insb
movsl
mov
push
inc
pop
add
jle
jbe
sbb
xor
cwtl
mov
shr
in
xor
orl
inc
add
sar
int3
jnp
cmp
cld
outsb
adc
mov
rorl
call
mov
jl
inc
rcpps
pop
jecxz
lock
or
push
sbb
stos
mov
cmp
lret
add
sbb
and
jo
mov
notl
pusha
mov
ficoml
popl
lds
ds
push
lock
push
lret
out
add
mov
mov
sar
lods
xor
pop
shl
sbb
andb
cmp
jl
stos
ret
jno
push
scas
jo
and
and
lock
decb
push
pop
xor
cmpsl
push
cmp
pop
adc
xchg
pop
or
loope
in
pusha
jnp
enter
fiadds
stc
cltd
sbb
fmull
stc
test
xchg
imul
fcompl
je
inc
adc
push
and
inc
mov
in
and
insb
mov
xor
retw
fadds
jmp
jae
pop
jl
pop
inc
jp
test
clc
push
std
xor
add
fsub
push
jne
push
mov
in
int
sbb
je
inc
push
stos
je
idiv
xlat
mov
and
call
int3
inc
jo
inc
mov
adc
sbb
dec
hlt
xchg
push
push
repz
sub
pushf
stos
or
xchg
sub
test
sub
xor
push
cmp
mov
push
adc
lods
iret
ja
cmp
adc
sbb
sti
inc
jno
aad
push
dec
sti
jns
jg
xchg
sub
popa
mov
inc
push
rcll
jo
in
das
jmp
in
sub
mov
divl
ja
lret
nop
ret
sti
and
dec
add
mov
push
outsb
stos
pop
xor
ljmp
clc
je
dec
ljmp
insb
fsubr
mov
test
lds
aad
stc
les
mov
fldcw
push
push
mov
out
fiaddl
adc
idiv
loope
jp
xor
in
xchg
xchg
and
pop
shll
out
dec
jo
sarb
add
jns
movsb
cmp
out
test
add
xor
dec
add
jp
mov
sarb
sub
test
gs
in
mov
fs
mov
arpl
test
stc
fisubrs
or
mov
in
gs
mov
lods
out
ficompl
sub
jae
repz
jno
and
push
sub
cmp
fadds
jns
push
dec
lods
fmuls
cmc
leave
les
or
inc
sub
or
mov
xchg
insl
push
jo
jbe
mov
cmp
dec
pop
dec
inc
inc
sbb
test
les
lods
daa
pop
xchg
mov
cmp
mov
test
and
jns
dec
mov
in
pop
mov
cmpsl
int
and
dec
or
or
mov
and
andl
mov
and
imul
xor
push
js
out
pop
jo
and
addr16
movsb
out
gs
cmp
or
and
adc
adc
inc
and
jg
or
mov
arpl
lea
out
adc
push
dec
aas
push
clc
sarl
data16
cmp
popl
dec
nop
aad
push
mov
cmpsl
push
idivl
fcoms
inc
push
stc
mov
mov
jg
sub
and
pushf
lret
jnp
inc
movsb
mov
jo
cmp
jl
lods
mov
mov
cmp
adc
adc
xchg
into
sbb
push
in
dec
push
repz
sub
dec
push
les
or
stos
test
xchg
cmp
ret
test
das
jnp
clc
mov
jbe
jns
rolb
imul
xchg
lret
out
adc
xchg
aas
leave
push
inc
add
xchg
mov
fdiv
movsl
inc
mov
loop
adc
call
bound
mov
adc
in
sub
mov
daa
mov
fsubr
pusha
mov
xor
jl
lock
push
cmp
repnz
push
jne
mov
ja
jne
wrmsr
push
mov
test
das
je
cmp
push
rolb
bound
nop
mov
frstor
movsl
xor
cmp
test
imul
outsl
pop
insl
out
pushf
push
aam
scas
loopne
add
xchg
in
clc
clc
arpl
arpl
xor
aam
push
scas
jb
add
out
scas
push
push
fimuls
add
push
imul
mov
cs
into
mov
pop
and
rorb
push
jecxz
push
subl
jae
jo
add
push
repnz
push
mov
jle
sub
bound
shlb
das
scas
xchg
cmp
jne
fwait
ret
xchg
push
xchg
loope
mov
pop
jno
jg
push
insl
fdivl
push
negb
jmp
loop
psubb
repnz
loop
pop
xor
cld
aas
out
cli
cld
inc
outsb
push
cmp
cmpsb
and
ficomps
push
cmp
jbe
push
int
adc
insb
cld
push
inc
fcomps
adc
push
and
fwait
mov
cs
psubsw
push
pop
mov
daa
push
push
adc
imul
int
hlt
xor
push
sbb
or
aaa
dec
jo
push
sub
aas
fistps
cmp
imul
mov
pop
or
cmp
jnp
cmp
jne
arpl
addr16
xor
jb
dec
or
fistpll
mov
shlb
inc
loope
sub
mov
push
iret
jp
xchg
aad
into
les
outsl
stos
pop
sub
fwait
mov
in
pop
std
and
pop
ljmp
xchg
enter
or
add
xchg
xor
ljmp
inc
xchg
inc
jmp
jecxz
fwait
aam
inc
ss
xor
inc
les
cmp
leave
mov
inc
loope
push
cmp
add
rcl
decl
sub
pop
adc
inc
and
push
movsb
ret
and
out
mov
aaa
pop
mov
xor
add
fsts
cmp
sub
enter
pop
mov
add
xchg
hlt
jge
jns
and
xchg
cli
ss
lods
icebp
mov
movsl
mov
sahf
test
mov
sbb
inc
and
test
dec
leave
loope
addr16
fldenv
stos
or
int
mov
jp
mov
fdiv
or
sub
mov
add
rcr
dec
aaa
es
jp
mov
lret
ljmp
adc
js
orl
lods
or
lock
incl
fcomp
mov
repnz
xchg
fwait
push
fistpl
mov
cwtl
mov
in
mov
jecxz
or
pcmpgtd
xor
mov
repz
pop
cwtl
imul
sbb
jg
pop
and
push
lcall
xchg
pusha
clc
xor
mov
mov
sbb
jl
sbb
lret
test
and
fldl
dec
int
jno
call
bound
inc
ja
mov
pushf
xor
or
fmul
adc
push
lods
push
inc
xchg
cld
test
sbb
fisttpl
mov
mov
push
out
mov
icebp
mov
xorb
jae
in
sahf
into
mov
inc
sub
dec
dec
enter
lock
loopne
mov
push
push
cs
mov
cltd
xchg
jmp
imul
cltd
fisttps
dec
sbb
out
pop
mov
test
mov
inc
jno
adc
cwtl
mov
jno
outsb
xchg
push
cmp
enter
mov
xchg
and
mov
xchg
pop
mov
sbb
push
sbb
pop
cmp
jle
js
mov
push
gs
js
cli
fldl
data16
lea
push
mov
popa
scas
mov
loope
or
into
test
adc
inc
inc
mov
lahf
gs
das
enter
leave
mov
push
xchg
js
clc
lret
push
xchg
inc
pop
xchg
test
mov
pop
adc
inc
cmp
push
cmp
sarb
int
in
sahf
push
outsl
icebp
or
call
stc
jnp
jle
xchg
rorl
mov
mov
mov
push
xor
leave
lds
jo
sbb
sub
fdiv
xchg
int
sti
adc
sub
jns
aas
out
lcall
mov
push
push
pushf
ffree
add
inc
and
cmp
mov
add
mov
xorb
and
cwtl
dec
xchg
pop
das
push
cmp
push
jp
lods
push
inc
das
pop
stos
lret
xor
inc
popa
xchg
pop
jg
pushf
or
lcall
int
mov
jbe
pop
lea
and
outsb
jne
xchg
mov
adcb
push
ret
lcall
leave
insb
jnp
dec
call
fpatan
cmp
cmp
inc
pop
xchg
cs
stos
sbb
sar
and
nop
in
loop
scas
cmp
movsb
jne
lea
mov
pop
jne
ljmp
add
mov
push
in
pop
ja
rcr
xor
add
repnz
cmpsl
add
jno
inc
xchg
sbb
imul
arpl
mov
imul
xor
stos
mov
xor
sbb
enter
addr16
outsl
mov
dec
inc
pop
js
push
xchg
out
pop
push
xchg
mov
cs
out
mov
adc
sub
int3
lahf
cwtl
and
fdivs
iret
ja
test
fisttps
push
pop
repnz
jnp
push
cmpsl
cmp
xchg
jecxz
jle
mov
adc
enter
jns
mov
pop
repnz
dec
xchg
xlat
sbb
lods
push
std
sbb
mov
inc
push
rorl
movsb
fbstp
hlt
push
fstp
inc
adc
sarl
shr
dec
xor
lret
pop
ret
dec
dec
sahf
pop
add
sub
xchg
add
aas
enter
mov
add
push
out
xor
out
and
jecxz
arpl
imul
sub
dec
inc
lock
aam
fstpl
inc
pusha
xchg
js
cmc
hlt
xor
add
sub
sbb
add
push
xor
inc
sub
repz
sbb
cmp
lret
cs
divb
add
cmp
cmp
scas
lods
pop
bound
jo
xchg
xchg
inc
add
jns
xlat
jp
popa
mov
or
pop
mov
adc
or
inc
xchg
flds
int
in
cs
testl
pop
enter
fisubrs
push
cmp
in
sub
sti
jge
movsl
pop
sub
stos
mov
sarb
cli
fisubrl
push
mov
push
add
mov
adc
mov
sbb
mov
push
outsb
cmpsl
cmp
mov
fadds
notb
lods
enter
in
jge
dec
loop
decl
pushf
cmp
mov
sbb
ror
fld
xor
call
jbe
aas
test
fidivs
add
sti
push
inc
sbb
data16
pop
mov
hlt
mov
and
mov
cwtl
dec
adc
mov
jne
mov
mulb
fisubl
in
push
jp
add
cmc
or
add
add
mov
inc
sbb
ret
out
and
lahf
imul
mov
push
testb
jmp
add
orl
and
xchg
shrl
cmp
lret
sub
cmp
cmpsb
xorl
push
lcall
and
cmp
movsb
sahf
lcall
fisubrs
loope
ret
add
xor
add
fs
call
add
test
scas
push
inc
xchg
mov
push
jb
das
sub
call
or
push
enter
push
mov
and
push
jmp
imul
out
mov
cmpsb
jbe
push
inc
and
int3
test
mov
fldt
mov
inc
or
mov
push
idivl
mov
push
aad
mov
fs
lcall
ret
push
sti
ret
inc
mov
xlat
inc
add
jns
insl
xchg
inc
rclb
sbb
fistpll
lcall
push
add
and
adc
mov
dec
cmp
bnd
std
pushf
in
pop
dec
addl
in
jp
or
pop
cmpsb
push
pop
xchg
mov
push
cmc
jmp
hlt
xor
jle
aaa
or
stos
lock
mov
push
enter
push
mov
pushw
mov
into
xor
and
mov
hlt
dec
pop
fcmovnb
sbb
fstps
mov
jbe
testl
in
je
aaa
ja
in
fs
push
lock
jne
push
gs
call
scas
push
fwait
dec
test
aaa
ficomps
xor
inc
leave
pop
fnstsw
lahf
adc
jmp
lea
pop
mov
lcall
mov
sub
std
movsl
out
jne
xchg
pop
jp
stos
xor
mov
cmpsl
xorb
mov
cmp
push
inc
and
shlb
pop
aad
and
sbb
lret
mov
cmp
push
outsb
pop
mov
pop
mov
lret
mov
lahf
inc
xchg
loop
or
jnp
add
jbe
push
inc
add
hlt
cltd
nopl
inc
shll
sbb
repz
js
lock
out
mov
mov
add
data16
mov
je
lcall
sub
cmc
insl
lock
or
dec
or
cmp
aaa
mov
je
inc
xchg
jo
mov
sahf
push
insl
mov
lock
pop
daa
mov
adc
jg
stos
xor
aas
mov
cmp
int
mov
xchg
sbb
loop
ds
sub
and
or
test
adc
push
add
popa
mov
pop
sti
in
pop
cmpsb
mov
adc
xchg
movsl
adcb
sti
mov
push
ret
ja
pop
mov
cmc
mov
push
in
pop
loopne
push
insl
clc
and
mov
testl
and
stc
stc
pop
mov
mov
mov
push
aad
sub
cwtl
jnp
inc
jl
adc
dec
ja
push
pop
mov
movsb
test
imul
movsb
sbb
cmc
pop
stos
pmullw
or
mov
jo
fldcw
mov
cmpsl
psubusw
lea
lret
xchg
dec
pushf
pop
adc
divl
jae
xchg
out
inc
mov
sbb
adc
mov
daa
gs
sbb
and
adc
inc
loopne
loope
lahf
movl
sbb
int
push
lods
or
insb
sbb
or
jl
lods
leave
pop
push
sbb
adc
mov
push
xchg
xchg
mov
es
mov
sub
pop
sbb
cs
mov
aas
jl
xchg
sti
push
inc
jno
xor
iret
push
repnz
xchg
call
xor
cmp
dec
jmp
pop
jo
xchg
fstl
xchg
mov
ret
fdivr
dec
dec
xor
fnstenv
das
cmp
inc
and
push
xor
inc
mov
repz
cmpsl
imul
and
and
xchg
mov
xor
adc
sub
shr
pop
mov
test
mov
aaa
popf
cli
push
les
insl
je
clc
imul
mov
pop
dec
jle
movsb
popf
js
cs
addr16
and
adc
cmp
adc
xchg
xchg
scas
mov
sub
push
rcrl
std
sub
push
shrl
rorb
mov
lret
out
xor
lods
test
in
mov
jne
mov
cwtl
mov
xor
out
push
ja
mov
es
add
iret
pushf
or
mov
imul
and
dec
adcl
mov
jb
movsb
add
adc
add
out
dec
jno
pop
and
mov
ja
mov
les
negb
insl
xchg
or
push
and
or
sbb
insb
ja
fisubrs
stos
adc
sti
sub
test
dec
lods
adc
or
cmp
jecxz
push
mov
mov
xor
jae
shrb
out
jl
jmp
sarl
repz
shrb
jne
or
cmpsl
dec
call
adc
insb
loop
ds
dec
mov
insb
in
sub
in
push
dec
mov
or
repnz
sbb
mov
lcall
push
icebp
push
data16
push
int
jmp
ds
sahf
fwait
mov
adc
sti
lds
nop
dec
mov
mov
aad
fsubr
push
xlat
cmpl
ror
mov
repnz
fcmove
bound
mov
into
adc
inc
test
mov
cltd
negl
push
xor
or
pop
nop
test
mov
mov
stos
sbb
mov
mov
leave
rclb
int
addr16
jno
xchg
aam
ret
jge
jnp
xor
lds
bnd
mov
aas
mov
dec
xchg
jp
inc
mov
mov
fiaddl
popa
ret
xchg
cld
dec
sbb
sub
mov
in
das
push
sub
and
adc
vaddsubpd
daa
mov
les
xlat
jo
adc
loop
push
jg
dec
outsl
int
adc
aas
enter
in
lods
movsb
je
pop
sub
pop
leave
imul
bound
inc
push
fsubrl
imull
xchg
in
mov
testl
mov
cwtl
or
or
sub
fiadds
vmptrst
xchg
pop
into
adc
cmp
mov
ja
sbb
in
lock
xchg
test
pop
lods
sbb
ss
mov
push
push
mov
movsl
into
hlt
jle
fildl
pusha
fwait
cvttps2pi
scas
push
jno
mov
and
ret
movsl
sbb
pop
fildll
shll
jns
add
jno
into
adc
sbb
cltd
adc
push
in
popf
or
jl
sbb
iret
jecxz
push
cmp
lods
jp
iret
and
movsl
aam
adc
cmp
jecxz
inc
outsb
popf
sub
adc
add
hlt
out
inc
add
mov
shlb
rclb
sbb
pop
outsl
jle
outsb
arpl
xorb
pop
out
push
sbb
lods
int
icebp
cld
sbb
in
sbb
fisubrs
je
xor
ss
jns
jle
scas
std
mov
adc
inc
sub
mov
jp
mov
out
cmp
decb
cmpsl
dec
adc
adc
mov
aaa
xchg
sub
xor
faddl
push
cmp
mov
pop
xor
repz
mov
mov
arpl
mov
lret
cwtl
adc
je
dec
xchg
imul
mov
ret
jae
and
incb
lret
jl
in
dec
sub
xchg
imul
das
or
out
scas
fists
adc
and
cmp
popf
cmp
cmp
mov
cmpsl
dec
push
aam
dec
adc
sahf
jl
fwait
mov
xor
stos
sub
inc
insb
xchg
shll
cmpl
xor
mov
adc
clc
cmpsl
inc
rolb
rcrl
in
pop
pop
fisubl
mov
sub
xor
and
leave
lods
out
push
gs
cltd
fidivl
mov
sbb
jne
clc
cmp
inc
sbb
test
sahf
mov
jmp
ja
inc
popf
test
cmp
loop
jmp
jmp
or
dec
xchg
sbb
jo
icebp
enter
pop
mov
jno
arpl
addr16
sti
scas
dec
sbb
add
pop
je
adc
inc
repnz
xor
lea
insl
dec
or
sub
dec
adc
pop
sbb
enter
and
adc
adc
mov
cld
mov
in
xor
cmp
ret
cmp
int
enter
into
in
icebp
mov
xchg
repz
ret
shr
jmp
fstl
shl
ss
xor
ds
loopne
je
lods
jnp
jle
or
mov
xor
in
cmpsl
into
lcall
adc
sbb
mov
or
in
fsubl
js
orl
in
lods
in
xchg
div
jl
out
dec
adc
adcl
scas
nop
daa
out
lret
and
sub
jp
jle
mov
cmp
mov
add
clc
sbb
in
add
sub
jp
fadd
jo
mov
xchg
jp
test
fbld
in
adc
subb
add
add
movsl
sbb
jno
in
cmpsl
sbb
sub
mov
dec
pop
fmuls
in
push
adc
cmp
imul
movsl
pop
and
jge
loopne
cmp
jae
decb
pop
lods
xor
push
xor
sti
jnp
or
mov
iret
mov
mov
into
mov
or
rorl
arpl
clc
add
pop
mov
lret
ds
cld
rorb
push
jmp
xchg
push
inc
stos
adc
lea
pop
push
adc
xlat
fcmovnb
sbb
cwtl
shlb
jp
sub
push
scas
inc
test
loop
out
iret
inc
fldenv
rcrb
cmp
call
js
adc
mov
jns
or
push
cmp
or
test
jne
sti
and
dec
lcall
ret
xchg
mov
fcmove
and
push
sahf
int
xchg
jns
mov
in
add
dec
fisubs
adc
test
jnp
xor
and
inc
pop
call
cltd
movsb
fmull
std
mov
and
es
dec
inc
pop
push
sbb
sbb
jmp
addb
insl
hlt
ljmp
inc
inc
push
push
loope
jmp
push
cmp
cmp
sub
push
cmp
cmp
add
adc
xor
jmp
aam
dec
sub
xor
xchg
and
fs
push
incl
xchg
and
dec
push
ret
dec
adcb
pop
cltd
xchg
in
mov
movsb
rclb
mov
jnp,pt
jmp
fwait
imul
scas
mov
cmpsb
mov
outsb
add
cmp
push
jne
mov
repnz
mov
dec
or
dec
push
mov
pop
jbe
or
enter
jnp
int
fildl
xor
je
fstl
push
sbb
pop
fistl
jg
shl
sbb
mov
push
mov
sub
dec
call
add
aad
ljmp
outsb
nop
and
inc
lds
scas
add
sbb
cmp
sub
loope
idivb
pop
addl
dec
fistl
cmpsl
sahf
dec
fcompl
sub
adc
add
cmp
scas
mov
add
pop
sbbb
mov
clc
sub
mov
out
decb
in
xchg
pusha
mov
std
loop
dec
push
add
mov
addr16
dec
xchg
inc
inc
add
insb
jbe
cwtl
mov
xlat
lret
les
add
popf
sbb
jne
sub
dec
in
sbb
rsqrtps
sub
cmpsb
iret
cs
leave
imul
push
add
push
rolb
rolb
push
mov
push
push
cmp
jmp
outsb
testb
or
out
lds
sub
sub
dec
pop
sub
inc
lea
push
mov
icebp
imul
xor
jl
lods
js
and
ljmp
lds
xchg
or
mov
orb
and
repnz
inc
out
sbb
fstpl
add
test
lcall
dec
pop
std
lds
sub
sbb
js
loop
pusha
mov
sti
ljmp
or
int3
mov
add
arpl
nop
push
lret
mov
add
xchg
adcb
in
xlat
cmp
loop
push
das
push
je
rcll
pop
mov
mov
pop
fisubl
les
out
inc
cmp
dec
xlat
mov
shrl
imul
xor
test
jmp
in
add
outsb
into
test
sti
pop
in
dec
sub
mov
push
jae
enter
stc
push
rorl
iret
xor
ja
or
movsl
fbld
mov
pop
addb
gs
int
jp
mov
mov
lea
mov
cwtl
or
mov
je
mov
cmp
ljmp
xor
jle
adc
pop
lcall
rcrb
cld
sub
into
pop
lods
outsl
aam
or
mov
sub
push
dec
cmpsb
add
pop
or
mov
and
sbb
jo
movb
inc
mov
xchg
cs
movsl
jge
jbe
sbb
pushf
cmc
je
divl
ffree
jge
xor
repz
out
mov
cwtl
xchg
dec
lret
push
flds
mov
lock
sub
inc
mov
push
addr16
arpl
pop
lret
test
cmc
dec
lret
test
mov
divl
push
or
icebp
jecxz
push
jbe
xchg
sbb
xchg
add
fildl
adc
scas
pop
jbe
inc
stos
xlat
push
testb
push
mov
sub
jmp
xlat
push
ficompl
mulb
mov
pop
or
push
leave
aaa
fisttps
xchg
arpl
dec
add
nop
pop
or
aam
mov
dec
inc
pop
push
sbb
bound
cld
inc
and
xchg
fildll
decb
repnz
mov
mov
xchg
cmp
mov
imul
popf
sub
ljmp
cmp
in
mov
fisubrs
outsl
ja
je
dec
decl
loop
mov
cmpl
adc
fldl
mov
cmpsb
lea
mov
or
adcl
cmp
nop
imul
lret
ljmp
je
loop
xor
pop
aas
push
cmp
add
or
add
xor
mov
or
adc
mov
lcall
xlat
ret
and
xchg
lock
jo
test
sbb
sbb
testb
fisttps
mov
fdivr
mov
lods
xchg
outsb
cmp
imul
mov
jb
jnp
arpl
mov
enter
lock
inc
cs
lret
fmull
test
out
mov
shrb
add
sub
push
pop
jecxz
xchg
mov
and
cmpsb
mov
add
pop
sbb
jle
ds
rcrl
mov
inc
bound
in
push
clc
add
add
popl
sbb
faddl
fdivs
mov
int
lret
and
aas
or
ret
outsl
imul
jb
inc
cmpsl
dec
push
imul
jmp
daa
xor
dec
and
outsl
not
and
and
xchg
mov
lea
loop
push
cmp
xor
out
xor
mov
ss
dec
cmp
nop
stc
mov
data16
loop
jmp
cmp
hlt
add
and
movsb
cmp
mov
lcall
xlat
scas
or
bound
aam
out
sbb
fs
cmp
adc
sbb
pop
out
imul
scas
and
xlat
fucom
icebp
adc
dec
mov
jb
push
insb
ja
cli
add
mov
fs
mov
pop
pushf
adc
mov
xor
dec
data16
andl
ss
sbbb
push
loop
jl
push
sub
xchg
aaa
ja
sbb
pop
enter
popa
xor
je
cmp
fildll
cmp
xchg
jo
es
mov
stos
pop
adcl
cmp
mov
shll
mov
in
shlb
rcrb
cwtl
inc
repnz
shrl
mov
inc
xchg
int3
fsts
popf
cmpsb
jp
sbb
sub
mov
scas
addr16
mov
inc
negb
fists
jge
mov
mov
cmpsl
in
adc
std
jle
dec
jbe
ja
mov
loope
adc
mov
xor
or
inc
mov
adc
jnp
dec
cld
dec
cli
push
fdivs
jp
jnp
and
scas
fmuls
mov
mov
insl
sub
idivl
add
pop
aad
mov
push
xor
pop
cmp
adc
pop
dec
add
test
pop
xchg
ja
je
arpl
mov
je
scas
mov
not
xor
aas
mov
movsl
cmpl
and
push
or
cld
notl
adc
adc
pop
in
sub
pop
jns
ret
ffree
pop
mov
mov
pusha
test
xor
and
mov
mov
jmp
add
les
adc
rol
scas
adc
add
adc
xchg
sub
or
aaa
mov
mov
das
sbb
lds
or
push
cmpl
mov
cmp
cmp
stc
fcoms
test
or
sahf
xor
xchg
cmp
mov
aad
jo
hlt
or
jp
shl
push
bound
das
out
cmpsb
jmp
and
push
mov
sub
or
std
xchg
scas
jg
xor
xlat
rorb
les
in
adc
repnz
cltd
push
or
in
pop
mov
popf
shr
pop
and
jno
mov
addl
xor
inc
dec
adc
aaa
or
out
jecxz
in
mov
bound
bound
out
push
in
cmp
cli
xchg
mov
jo
inc
repnz
dec
in
das
in
jae
cld
jmp
imul
mov
gs
dec
sahf
leave
stos
push
fwait
sub
adc
mov
mov
rolb
repnz
xchg
and
addr16
filds
arpl
andb
sbbl
jmp
mov
and
fadd
int
insb
lret
adc
jae
in
je
popf
jae
scas
pop
repnz
pop
dec
leave
inc
cld
scas
or
push
clc
sbb
insl
dec
jl
lock
mov
sub
lahf
cmpb
stos
movl
xchg
in
sbb
or
xor
cltd
xchg
mov
or
jecxz
cwtl
les
mov
fs
cli
or
pop
mov
out
push
push
pop
out
or
dec
push
push
jnp
mov
inc
mov
out
ss
imul
out
call
mov
mov
sub
inc
xchg
fdivrl
daa
fucompp
jb
outsl
mov
outsl
fcoml
mov
lcall
sub
scas
and
xchg
iret
or
push
aas
idivb
lret
push
push
loopne
sub
sbb
mov
adc
imul
push
leave
sub
sti
repnz
dec
push
les
xor
popa
lods
repz
mov
popf
inc
xor
jb
out
stos
mov
sub
cs
lods
sub
pushf
call
ret
adc
sbb
ficompl
sbb
call
imul
push
lret
adc
mov
negl
push
test
lods
or
lcall
mov
adc
imul
mov
insb
push
popa
xchg
sar
adc
xchg
js
xchg
pusha
push
iret
sahf
mov
insb
jnp
lret
sbb
pop
adc
pushf
push
cs
dec
push
inc
cmc
lret
add
adc
add
rcll
repz
mov
cmp
jnp
lock
jge
jae
lock
sub
shlb
fs
dec
inc
inc
fimuls
cli
nop
xchg
fstpt
pop
push
or
push
dec
stos
and
xchg
push
push
ss
mov
repz
negl
and
xor
out
aam
pop
jae
popf
ss
inc
or
add
sub
cmpsb
repz
jl
pop
inc
fisttpl
scas
dec
mov
loopne
dec
sbb
mov
aas
inc
add
jb
mov
movsl
arpl
les
rcrb
mov
mov
jge
jecxz
pop
aas
cld
popf
loope
lcall
arpl
mov
stos
sbb
in
rcr
jge
out
sub
xchg
xor
push
push
pop
movsb
xchg
ja
sbb
sarb
push
cmpsb
dec
les
cmp
fsubr
pop
push
js
clc
jno
pop
hlt
push
push
out
push
mov
sbb
repz
cmp
cmp
mov
mov
lahf
mov
int3
mov
dec
push
inc
dec
andb
and
aad
pop
inc
movsb
mov
in
mov
jnp
or
jnp
fcomps
lock
xchg
dec
xor
lds
lods
and
add
dec
push
rcr
data16
pop
sbb
das
stos
jmp
cmp
xor
test
dec
sub
push
xchg
mov
jno
jbe
mov
test
and
pop
jmp
pushf
sub
dec
nop
or
push
test
cmp
stos
aaa
dec
stc
outsb
jmp
add
xor
std
negl
pop
js
xchg
sbb
pop
movl
dec
inc
imul
inc
or
imul
pusha
loopne
sub
sar
arpl
lea
mov
or
inc
frstpm(287
mov
mov
add
sbb
movsl
imul
add
fisubrl
adc
cmc
pusha
sub
add
out
push
add
rolb
cltd
add
sub
pop
out
adc
lods
js
gs
dec
testl
sbb
das
mov
nop
xor
fwait
cmp
lock
xor
jmp
jmp
aas
mov
sbb
mov
popa
mov
xchg
pop
test
sbb
or
aad
ss
push
and
and
xchg
sbb
das
js
cmp
out
leave
shlb
push
cwtl
adc
leave
imul
das
mov
and
sbb
or
jnp
in
xchg
and
mov
iret
push
push
jp
xchg
mov
mov
push
loopne
jmp
les
inc
sub
inc
sbb
push
push
addl
shrl
mov
push
adc
xor
pop
sbb
imul
jns
stos
mov
repz
not
cs
or
pop
mov
test
mov
sub
fdivs
lahf
shlb
cmc
jmp
nop
mov
ret
das
sbb
and
and
mov
or
out
scas
mulb
xor
inc
jecxz
push
out
repnz
adc
into
lock
fdivrs
xor
jno
mov
sub
sbb
and
mov
sub
dec
enter
test
and
sub
shlb
inc
loopne
mov
add
push
js
jl
xlat
push
out
mov
out
or
cmpsb
repz
lret
mov
roll
ret
inc
pop
xchg
dec
into
push
arpl
mov
and
enter
mov
sub
sbb
adc
adc
mov
mov
cld
or
fists
repz
cs
dec
nop
fs
add
push
mov
mov
andl
inc
and
repz
or
pop
mov
nop
andl
or
mov
cmp
mov
dec
sub
mov
xchg
cmc
cmp
pusha
jno
xor
int
aas
bound
inc
icebp
adc
pop
loop
fnstcw
jo
add
rclb
cmp
xor
push
cs
cmc
aaa
add
inc
lret
cs
cmp
dec
andl
mov
frstor
jbe
mov
jge
loopne
xor
cld
fadd
jge
pop
push
sbb
cmpsl
movl
loopne
rcrb
cltd
jmp
imul
imul
jp
add
sahf
jmp
fisttpll
out
pop
sbb
dec
jp
shll
cli
popa
prefetch
aaa
add
or
ret
cmp
jle
clc
add
xor
rcll
out
adc
add
andb
nop
pop
xchg
ja
pop
sbb
mov
imul
pop
nop
fstpl
inc
icebp
lahf
xchg
inc
sub
jecxz
ret
push
fimuls
add
sub
adcl
add
add
pop
cs
xchg
inc
cli
pop
fwait
add
ss
test
push
icebp
sbb
in
jbe
ds
mov
add
js
xchg
outsl
add
sub
mov
ljmp
popf
inc
lret
mov
inc
pop
and
inc
test
mov
adc
repz
in
ficomps
bound
add
movb
bsf
adc
dec
jle
rcll
cmp
pop
adc
hlt
and
ret
pop
insl
imul
addr16
icebp
lods
test
push
inc
xor
fsts
dec
push
sbbl
sahf
out
jnp
scas
xor
dec
insb
inc
xor
xor
or
sbb
add
or
push
shlb
nop
xchg
in
add
xor
ljmp
negb
loop
push
mov
fcmove
repnz
std
pushf
jae
fimuls
inc
mov
mov
rcrl
push
pop
andl
imul
mov
in
adcl
loop
insb
clc
inc
sbb
cmp
add
test
jno
arpl
mov
sahf
std
cmpsl
adc
das
xlat
fwait
daa
push
inc
cmp
jle
addr16
mov
jecxz
sarl
push
ljmp
jle
sub
lock
or
push
xchg
sti
dec
mov
xchg
dec
mov
and
dec
mov
ss
adc
sbb
mov
jp
xchg
insb
sbb
shrb
mov
dec
pop
scas
push
ds
enter
dec
dec
add
lret
insb
stos
js
clc
push
mov
jbe
leave
xor
cmp
addb
inc
aad
mov
nop
and
sbb
mov
mov
and
xchg
mov
inc
bound
test
std
and
push
int3
imulb
movsl
jne
push
ja
pop
jl
dec
fs
lcall
repnz
sbb
arpl
sub
jne
test
xor
pop
pop
sub
lret
in
adc
stos
xor
int
out
jp
pusha
int3
adc
fstl
inc
xchg
addl
cld
scas
in
dec
cmpsb
lcall
push
int3
sub
add
dec
insl
mov
add
pop
cld
jl
cmp
dec
jecxz
dec
loop
das
or
outsb
lcall
xchg
out
inc
xchg
cs
test
lea
push
sub
jo
mov
jns
xor
jo
dec
and
mov
loopne
push
and
mov
shlb
mov
cmp
push
and
add
and
imul
les
and
hlt
addb
add
push
xchg
ret
or
push
adc
insl
jecxz
lds
cs
adc
pop
xor
cmp
cmp
out
lcall
sti
out
popa
mov
add
in
leave
xchg
adc
mov
lret
movsb
std
add
adc
movsb
sahf
dec
inc
mov
movsl
in
xchg
mov
pop
insb
nop
adc
fwait
lods
aas
arpl
cli
mov
rcrb
adc
ret
mov
xor
jg
insl
sub
add
movsl
sbb
and
cmp
push
enter
ja
sti
xchg
xlat
icebp
push
call
sub
inc
pop
pop
sub
xchg
inc
mov
fimuls
shrb
pop
cmp
push
mov
mov
ja
pop
add
and
fwait
push
xchg
adc
or
ret
outsb
adc
or
and
mov
in
aam
ffreep
shll
adc
and
movsl
push
es
fsubr
rorb
push
dec
arpl
cmp
cmpsl
fstp
xor
mov
xchg
stos
fcoml
mov
mov
xor
pop
pop
mov
dec
mov
shlb
es
cld
outsl
and
mov
xchg
ljmp
fnsave
adc
adc
in
cld
push
loop
jecxz
aas
cmp
pop
push
pop
xorl
sbb
mov
xor
jo
out
mov
out
mov
adc
and
out
or
test
ja
dec
rcl
enter
inc
mov
mov
mov
pop
pop
out
fs
icebp
leave
xor
add
ss
cmp
cmpsb
lds
pop
sbb
in
sub
fldenv
and
mov
aam
out
gs
push
out
mov
mov
lds
shlb
pop
pop
add
in
jge
jns
cld
fists
add
cmp
out
lcall
pop
mov
push
pop
jl
sub
outsl
stos
dec
add
dec
xlat
sbb
pop
bound
mov
imul
xchg
in
hlt
arpl
mov
nop
inc
pop
lret
and
insb
push
pushf
hlt
push
popa
sub
js
icebp
xor
insb
popa
adc
jbe
or
mov
imul
add
aam
adc
pop
enter
scas
shrl
aaa
mov
sahf
cmp
cmpsl
adc
mov
xchg
stos
add
pop
dec
inc
outsl
out
and
pushf
cli
enter
dec
dec
add
cmpsb
xor
mov
repnz
cld
sarb
mov
pop
cmp
push
pop
hlt
xchg
icebp
mov
push
dec
cwtl
mov
and
out
cmp
xorl
and
jno
je
pextrw
lods
cmpl
movsl
je
in
test
inc
adc
mov
add
in
dec
in
jo
movsb
jp
jp
or
adcl
sub
fisubs
push
test
roll
pop
mov
daa
cmp
daa
movsl
out
aaa
sahf
mov
cmpsb
fstl
jg
cli
mov
clc
and
inc
cmp
adc
inc
aaa
jb
jecxz
mov
fiaddl
jp
add
sbb
inc
je
rolb
mov
inc
out
mull
aad
and
push
pop
xor
jle
aaa
jno
push
lods
and
loop
ror
dec
loop
sub
and
je
jno
adc
dec
dec
mov
out
jbe
adc
xorb
mov
loope
ljmp
cmpsb
push
out
lahf
xor
jns
jp
and
rclb
dec
push
inc
mov
dec
in
enter
sbb
lret
push
mov
incb
fucomi
movsl
out
mov
loope
mov
fiadds
mov
std
mov
mov
push
rcr
jl
push
fdivrs
fbstp
xor
sub
outsb
adc
mov
fisubs
cmp
mov
jecxz
mov
fiaddl
sbbb
pop
int3
nop
ds
iret
xor
mov
xlat
sbb
or
or
or
adc
dec
sub
ret
iret
in
and
jge
in
iret
jno
out
gs
or
loope
or
enter
repz
pushf
ret
jmp
lcall
fldl
js
xor
mov
mov
testl
inc
inc
xlat
insl
addb
cld
movsl
jo
jecxz
popf
and
jbe,pt
jle
push
or
pop
mov
jb
pop
out
jecxz
out
xchg
call
cld
stos
cmp
dec
cli
sub
push
lret
sub
movsl
ljmp
loopne
or
adc
push
fmuls
loope
std
mov
popa
jbe
mov
stc
bound
adc
mov
inc
dec
pop
cmpsl
cmc
movsl
or
repz
es
outsb
js
test
stos
in
mov
scas
mov
sbb
fisubrl
inc
mov
jg
push
xchg
arpl
aaa
arpl
rcl
or
test
mov
push
inc
xchg
push
ja
push
sahf
push
push
ret
cmpsb
mov
pop
cli
outsb
leave
test
dec
add
pop
lahf
add
mov
cmc
loope
cwtl
inc
cmpsb
cmp
mov
fs
mov
add
sbb
out
imul
fs
mov
stos
sbb
out
lret
xor
sbb
xor
mov
int
sub
mov
dec
rorb
xchg
pop
push
push
jecxz
xchg
push
leave
mov
test
and
fs
das
jmp
ror
stos
mov
and
repnz
and
cltd
leave
and
lea
testb
pop
aam
xchg
aad
int3
stc
mov
mov
sub
adc
test
lock
out
cmp
jl
in
iret
aam
mov
pop
add
std
notb
std
push
mov
push
sti
lgs
mov
jo
das
jp
sub
push
fsubrs
leave
scas
adc
arpl
mov
insl
mov
xchg
inc
xchg
mov
std
xchg
xchg
cmpsl
ljmp
adc
icebp
mov
push
bound
leave
mov
sub
outsl
imul
test
inc
rorl
sbbb
shl
xor
cmc
and
or
jmp
inc
jmp
mov
xchg
xchg
xor
adc
sgdtl
pop
mov
pop
mov
inc
call
add
xchg
fiaddl
scas
in
out
xor
mov
out
xor
add
aaa
pop
loop
ss
inc
fildl
inc
xchg
jbe
rcll
pop
adcb
test
jno
dec
pop
sub
xor
and
push
sbb
fisubs
mov
lret
test
clc
fistl
pop
popl
dec
in
rcrb
xor
cmp
sub
dec
pushf
mov
fstpl
aad
lock
sub
int3
into
pop
add
xor
aas
xor
test
sub
jo
or
data16
insb
inc
fsubl
pop
ds
imul
mov
cmp
push
pop
or
rcrb
cwtl
inc
testl
push
cltd
pop
mov
stc
inc
test
push
cmc
idivb
add
cmpsl
mov
js
inc
sbb
adc
sub
ret
nop
rcrb
push
inc
cmp
roll
pop
leave
subl
stos
arpl
push
xor
mov
lcall
jmp
loop
push
in
xor
sub
or
cmpsl
cli
test
xor
inc
test
xor
lcall
mov
jg
gs
or
push
cli
je
pop
fs
lahf
sub
dec
and
pushf
jno
jno
aam
add
push
jbe
xor
mov
imul
or
je
sahf
ss
or
fsubrp
hlt
and
aad
push
mov
fsub
and
repz
cmp
or
fstpl
fdivr
xlat
test
ja
out
lret
out
mov
xor
xchg
xor
sbb
jne
sub
test
xchg
xchg
xchg
notb
aaa
mov
stos
mov
adc
xorl
icebp
in
fs
mov
ja
adc
jbe
pusha
xor
dec
je
js
divb
add
mov
mov
roll
mov
cmp
stos
imul
nop
fdivrp
leave
cld
divb
inc
inc
hlt
aam
mov
jnp
icebp
roll
outsb
das
inc
adc
sub
mov
mov
sbb
adc
push
jae
mov
es
shr
ds
xor
mov
lock
test
xor
out
lret
in
xchg
mov
loop
or
mov
loopne
pop
bound
mov
add
sub
shll
pushf
mov
jne
sbbl
pop
push
inc
mov
in
std
clc
insb
mov
pusha
jp
push
lock
les
daa
std
cmpsb
imul
adc
loop
jns
sbb
sub
out
xchg
or
or
cmp
clc
scas
mov
outsb
lcall
and
test
xchg
mov
scas
mov
lea
sti
dec
add
stc
ja
inc
adc
or
inc
sbb
rcrb
or
push
jb
push
inc
sub
aad
and
ror
stc
std
mov
sbb
repz
mov
dec
scas
lret
ficomps
sbbb
out
push
jg
sub
sbb
dec
test
dec
sbb
test
xchg
xchg
xchg
arpl
insb
stc
pop
inc
mov
jp
pop
and
cmpl
lods
js
setge
adc
cmp
pop
cmp
dec
aaa
psraw
and
dec
inc
pop
push
push
and
jo
addr16
ds
int
jne
push
xor
cwtl
add
mov
andl
nop
xchg
out
popf
push
andl
popf
dec
pusha
pop
loope
je
lcall
push
mov
aas
cmp
out
rolb
enter
sub
push
imulb
jmp
pop
les
adc
add
movsl
and
lods
mov
test
lret
xlat
mov
inc
test
xchg
test
pop
xor
sahf
in
sub
mov
popa
cmpsb
das
mov
sbb
lret
mov
push
das
out
mov
iret
xor
sbb
pop
test
jl
lret
mov
sub
jnp
pop
xchg
outsb
loopne
sbb
outsb
mov
cmp
pop
stc
gs
add
mov
loopne
ret
or
inc
or
loope
js
out
or
sbb
push
push
xor
hlt
sub
push
pop
mov
jg
xor
cmp
test
inc
mov
mov
rep
adc
out
xor
js
xchg
or
mov
jmp
sti
jle
lret
outsb
add
push
inc
jg
aad
int3
mov
out
jg
mov
imul
or
ljmp
mov
lret
push
divl
fcomps
imul
xor
imul
test
popf
cs
xchg
dec
or
pop
scas
adc
roll
sbb
loopne
push
xchg
mov
imul
std
ss
fidivrs
test
rcl
cmp
dec
and
cmp
inc
pop
push
clc
lret
jmp
mov
add
mov
pop
xor
mov
inc
jb
cmp
adc
movsb
sbb
inc
push
xor
adc
mov
shrl
add
cmp
int3
leave
jnp
jp
imul
xor
xchg
mov
mov
or
cmp
jmp
das
pushf
cli
jne
and
das
mov
mov
ret
leave
repz
pop
sbb
jle
insl
jb
hlt
cmpsl
gs
and
sub
rolb
mov
es
leave
mov
call
cli
bound
pop
and
jg
inc
mov
mov
mov
cmp
in
pop
push
inc
mov
add
xor
xchg
cmp
adc
push
into
inc
fisttpl
fdivp
repz
lea
out
lcall
or
dec
jge
push
xor
inc
xorb
cli
icebp
int
xor
adc
mov
in
je
xor
mov
mov
inc
mov
xchg
inc
cmp
je
push
mov
adc
in
mov
push
dec
ja
testl
divl
das
xchg
sbb
scas
add
ja
sub
sbb
shlb
push
fldcw
mov
sub
test
repz
rcll
jno
cmpsb
lods
jl
mov
pop
inc
or
push
in
mov
cld
cmp
out
adcb
push
pushf
push
sbb
sbb
push
les
sbb
pop
xor
sub
jbe
bound
jle
imul
rcll
mov
and
pop
xlat
pop
cltd
dec
es
movsb
jo
out
dec
sahf
shrl
and
xchg
das
lock
mov
sbb
xchg
loope
nop
push
dec
dec
loop
mov
stos
loop
cmpsb
mov
xchg
out
arpl
out
cltd
call
push
lods
loope
jmp
addr16
lds
mov
je
sub
push
xlat
xlat
pop
lock
shrl
or
mov
pop
pop
xor
neg
sbb
add
adc
lahf
sub
sub
jp
mov
incb
ds
mov
inc
out
xor
mov
dec
xchg
les
push
mov
or
cmpl
cmp
cltd
das
xchg
pop
test
out
dec
push
sub
fcomps
mov
xchg
mov
loopne
mul
xchg
es
fimuls
out
shrl
rclb
scas
dec
sbb
mov
sbb
mulb
mov
jle
mov
or
jns
cmp
imul
mov
xchg
push
xchg
and
repnz
sbb
mov
add
popf
or
scas
popf
imul
les
jo
fnstsw
mov
mov
and
inc
inc
lret
daa
push
jge
popa
mov
mov
pshufw
pop
and
outsb
dec
out
rcrl
test
mov
add
data16
sub
scas
cli
mov
mov
outsb
xchg
or
addb
push
mov
jg
pop
mov
shld
jo
push
fs
xchg
bound
mov
add
push
sub
cmp
aas
mov
sbb
mov
imul
hlt
andb
add
and
pop
mov
xchg
scas
adc
loopne
xchg
push
testl
aas
out
cmpl
or
scas
xchg
filds
rorl
adc
cmc
dec
loope
inc
pop
xchg
das
es
sar
or
or
push
int3
imulb
dec
shr
sar
ret
mov
sti
sub
add
mov
xor
and
dec
or
pusha
movsb
jnp
addr16
cmp
fistpl
arpl
mov
daa
notb
pop
test
aas
aas
lods
pusha
cmp
in
shrl
jmp
sub
orb
pop
mov
sbb
leave
or
push
cltd
fiaddl
mov
into
mov
mov
ficompl
outsb
dec
xor
pop
icebp
xchg
push
push
lcall
push
xor
cltd
sbb
or
add
add
loope
mov
out
pop
or
xor
xchg
inc
and
lock
jmp
xor
popa
out
clc
clc
cltd
sub
lret
xchg
lret
sub
fstp
cmp
push
fidivs
aad
sarl
or
mov
rcrb
mov
inc
sub
sar
call
ficoml
fs
jbe
mov
or
xchg
cli
xor
push
lcall
xchg
out
jo
xlat
hlt
jl
sbb
jb
sub
lcall
icebp
mov
rcll
mov
add
in
and
out
int3
adc
mov
fstp
fdivrl
xchg
pop
mov
lods
imul
jno
bound
js
adc
and
sbb
rclb
lods
sub
jbe
mov
cmp
mov
fcoms
push
pusha
adc
push
sahf
mov
repnz
imul
dec
mov
test
xchg
add
cmp
int3
cs
in
lods
add
add
xlat
push
xor
sbb
add
dec
sub
addr16
add
push
fnclex
imul
push
jg
lret
out
pushf
pop
sbb
enter
inc
inc
sub
push
addl
fcmovne
stc
add
jp
cltd
imull
pop
mov
push
cmpsl
jg
or
repz
inc
dec
pop
xchg
icebp
fcom
xchg
sarb
mov
lock
jp
enter
mov
cltd
xorl
pop
xchg
shrb
sahf
xor
mov
or
jmp
push
pop
aad
pop
push
arpl
cltd
xor
hlt
subl
dec
sarl
xchg
out
iret
popa
test
jo
mov
cmpsb
test
psllq
xlat
rcr
pop
movsb
imul
sbb
or
dec
in
or
aam
xchg
pop
or
mov
pop
adc
xchg
mov
in
or
out
shlb
mov
xor
rcrl
test
adc
sbbl
add
jl
adc
arpl
pop
sti
push
cmp
sbb
inc
cs
pop
mov
jle
push
push
scas
cmc
lds
cltd
or
rorl
sahf
and
pop
sbb
ja
jg
test
pop
in
call
loop
scas
dec
inc
sub
dec
mov
add
push
cmp
lds
push
push
or
or
cli
ret
mov
sti
lahf
iret
cmpsb
ret
sbb
lea
add
insl
push
xchg
or
inc
pop
es
mov
jno
xor
or
pop
inc
adc
gs
xchg
imul
movsl
int
sbb
sbb
dec
and
add
or
or
loopne
lods
es
add
pop
mov
pop
pop
lock
sbb
imul
cmp
dec
lds
inc
sbb
and
sub
in
outsb
dec
sub
inc
jb
sub
loopne
icebp
sti
arpl
inc
pusha
aad
adc
sub
cmpsl
enter
fwait
xchg
into
mov
add
clc
sbb
int
addb
cmp
lahf
inc
xor
pusha
jb
nop
mov
pop
dec
dec
or
int
and
jecxz
gs
dec
jl
hlt
pop
int
arpl
inc
jne
xor
ljmp
dec
shlb
push
mov
icebp
pop
sbb
lahf
xchg
rcll
negl
rolb
jb
cmp
push
mov
outsl
arpl
fistl
pop
clc
loope
mov
mov
adc
mov
lock
fxam
dec
les
arpl
push
and
aaa
push
subb
mov
stos
mov
push
nop
sbb
fstl
call
inc
pop
bound
ret
mov
push
into
sub
cs
adc
imul
sub
or
fisubrl
and
lcall
mov
mov
lea
shl
in
sbb
jg
push
xor
pop
shlb
mov
adc
adc
fcomp
add
loopew
in
push
push
cmpsb
in
pop
or
cld
push
sub
lret
cmpb
mov
fimull
cltd
mov
sub
cmp
pop
dec
add
cli
dec
insl
or
stos
cmp
sbb
cmp
mov
movsb
inc
addr16
push
inc
and
xchg
in
inc
or
orb
fadd
sarb
outsb
jle
popa
into
fdivrl
jnp
repnz
sub
lods
int
or
sub
orb
push
sbb
xchg
xor
mov
adc
in
lret
jo
test
imull
pusha
ljmp
jo
scas
push
mov
imul
jbe
or
jg
lret
jno
pop
and
xchg
addb
cmp
out
and
scas
pop
dec
nop
pop
adc
pop
pusha
xlat
push
pop
das
icebp
mov
arpl
in
or
mov
jmp
jne
mov
or
cmp
and
sub
clc
xor
mov
xor
fisubl
cmc
cmc
cld
out
push
mov
jno
add
pop
xor
jmp
xor
sbb
sbb
js
sbb
jns
shl
rcll
mov
xchg
cmpsl
xchg
mov
fisttpll
mov
mov
gs
daa
js
aad
fiadds
std
test
inc
into
xor
jae
sub
mov
fdivr
call
add
push
pop
inc
in
and
mov
jle
mov
cmc
jge
out
push
fiadds
cmc
mov
jge
sbb
dec
sub
test
add
mov
pushf
mov
lret
je
hlt
cmp
lea
insl
pushf
mov
or
ljmp
int3
call
lds
or
cmp
push
mov
or
data16
sub
mov
das
mov
jmp
ret
sub
mov
add
lcall
int3
mov
insl
pop
xchg
mov
daa
vmovq
sbb
add
push
enter
dec
inc
xchg
push
test
adc
push
push
and
in
push
or
lods
push
xor
ja
insl
push
jne
mov
cmp
xor
sbb
mov
sbb
ja
cwtl
cmp
sub
push
repnz
aad
out
test
test
pop
jp
pop
mulb
andl
pop
jp
pushf
cmpsl
addl
dec
jge
arpl
not
addl
cwtl
push
lret
or
mov
xlat
lahf
in
shr
inc
inc
xchg
sub
fcoms
pop
lcall
stos
test
add
cmp
mov
or
xchg
icebp
push
pop
popa
jns
mov
jmp
lds
fwait
nop
movsb
add
pmaxub
pop
outsl
insb
shlb
jns
sub
ficomps
sarb
pop
jbe
pop
shrl
loop
cmpsb
sbb
les
cld
lds
xchg
or
inc
js
lods
repz
inc
mov
inc
cmpb
xchg
pusha
adc
addl
les
bswap
inc
xchg
data16
cmc
push
or
xor
sub
adc
sub
mov
mov
mov
mov
xchg
std
and
cwtl
push
sbb
mov
pop
push
push
pop
clc
testl
mov
mov
mov
cmp
jp
pop
ljmp
sahf
sbb
push
sub
pop
scas
mov
mov
movsb
stc
sti
or
add
add
out
jecxz
mov
test
cmp
popa
adc
testl
roll
add
adc
cmp
adc
outsl
inc
fprem
push
loope
rcr
std
outsl
es
jno
js
mov
shr
xchg
sbb
push
das
mov
cmpsl
and
or
push
shll
add
dec
lods
jle
jno
negl
insb
mov
stos
lcall
push
lea
popf
iret
pop
clc
test
pop
out
push
stos
je
xchg
mov
sbb
push
cmpsl
mov
push
or
sahf
pop
fldcw
das
xchg
dec
add
xorl
push
add
sahf
pop
push
mov
xor
cmp
adc
pop
inc
das
stos
jnp
repz
sbb
pop
add
pop
push
andb
mov
sub
mov
mov
or
scas
pop
or
or
cmp
push
mov
ret
mov
aaa
push
ds
stos
ja
push
movsb
mov
lock
pop
sarl
jge
mov
push
mov
mov
out
cmp
xor
nop
add
pop
ss
jbe
dec
inc
dec
xchg
or
lds
aam
mov
hlt
cmp
jp
out
sbb
pop
mov
push
mov
inc
lods
cmp
push
push
out
jle
les
jp
mov
std
sub
outsb
mov
repnz
in
in
sbb
es
movsb
inc
xor
lret
or
dec
inc
jne
mov
sub
jne
mov
dec
mov
sbb
jmp
push
jo
adc
and
lcall
scas
sub
push
rcrb
sbb
mov
loop
add
lock
push
and
xor
out
mov
mov
xor
xchg
adc
pop
xor
sbb
mov
or
stc
sub
mov
xchg
add
adc
jnp
loope
pop
lods
js
adc
inc
cmp
mov
push
ja
mov
scas
jp
push
adc
push
cld
out
les
jmp
fpatan
cmp
xchg
add
jle
inc
pushf
push
sub
push
dec
push
xor
arpl
cmpsl
sub
in
int
ljmp
cmpsl
sub
dec
std
loopne
fsts
rclb
psubusb
cli
mov
std
pushf
or
ja
push
xchg
push
lret
push
or
js
cli
xchg
or
push
dec
and
push
shlb
shl
mov
cmp
orl
and
scas
adc
xchg
out
adc
inc
cmp
sub
mov
jmp
imul
roll
lret
das
dec
in
inc
cmp
int
jle
mov
jae
pop
and
sub
xchg
mov
mov
cmpsl
rorb
adc
dec
ds
lahf
push
pop
xor
push
xchg
out
mov
mov
pop
push
out
and
jmp
cmpsb
xor
insb
dec
jb
cmp
and
inc
imul
inc
test
dec
inc
cs
call
dec
insl
jnp
mov
icebp
xchg
mov
push
jp
jnp
xor
dec
test
call
das
mov
movsb
sbb
pop
ror
ret
nop
pop
es
and
test
jae
cs
push
daa
or
mov
jbe
ret
xchg
pop
test
xchg
push
sub
mov
jmp
fnsave
xchg
and
push
das
sbb
aaa
xchg
stc
cmpsl
jne
mov
mov
mov
adc
mov
aam
jl
xor
je
fstps
mov
cli
arpl
xchg
popf
inc
pop
xchg
mov
and
loope
push
clc
cli
cmp
and
shrb
inc
imul
arpl
fsubl
adc
idivl
or
jg
ss
icebp
cld
fmuls
push
addl
in
sub
jl
dec
rorb
call
clc
dec
mov
adc
add
push
inc
cmpsb
pop
jno
mov
mov
sub
in
mov
and
jl
clc
cli
imul
fdivr
hlt
xor
dec
xor
lahf
pop
mov
das
and
out
adc
lods
mov
pop
mov
lret
cltd
sahf
int
or
fwait
xor
sub
adc
mov
inc
loopne
mov
lret
sub
jmp
fcomps
std
cmp
das
fimuls
shlb
jle
mov
add
mov
pusha
jecxz
and
hlt
cmp
insl
jne
stos
test
ret
cmc
mov
mov
js
inc
outsb
ljmp
ja
xor
ljmp
jg
cmp
lock
inc
cmpsb
inc
mov
xchg
pop
icebp
nop
mov
imul
addr16
dec
nop
loop
es
xor
jno
sub
jbe
pushl
push
mov
jnp
rcr
xchg
jns
test
xchg
or
ret
or
in
xlat
inc
loopne
ja
imul
sbb
movnti
aad
and
rcrb
orb
in
jmp
imul
add
or
addl
movsb
clc
pop
mov
cmp
les
and
out
cwtl
sub
push
lret
mov
add
inc
insb
mov
lret
sub
in
lods
clc
test
or
int
das
rorl
push
stos
sub
xchg
arpl
ja
inc
add
add
adc
scas
in
jp
jg
aam
cli
xchg
fcoml
mov
iret
sub
and
ds
into
fcomip
and
loope
xchg
icebp
daa
ds
test
inc
adc
mov
scas
mov
adc
repnz
daa
mov
xchg
pop
rorb
test
call
scas
imulb
and
outsl
subb
nop
pusha
or
hlt
clc
insl
and
xchg
aam
dec
inc
dec
push
mov
push
dec
in
sub
in
lock
mov
push
popa
shl
int
jp
rorb
stos
scas
iret
das
nop
and
pop
jbe
test
jb
xchg
imul
cmp
fstpl
xchg
fistl
in
loop
movsb
ja
inc
test
dec
mov
pop
into
loop
dec
mov
js
pop
jmp
pushf
adc
mov
sub
add
mov
jge
xlat
nop
adc
je
xchg
inc
roll
rorl
xchg
mov
sub
mov
leave
out
ljmp
sub
loopne
aaa
insl
adc
sti
jno
inc
adc
psadbw
xchg
sbb
sub
cmp
push
sbb
lds
inc
shrl
jecxz
push
mov
dec
jg
daa
push
cmpsl
mov
test
mov
pushf
nop
incb
or
push
lock
cwtl
mov
mov
addl
dec
test
test
add
dec
push
dec
mov
or
sbb
repnz
mov
test
add
jnp
cmpsb
lret
inc
faddl
imul
cmp
pop
jg
call
mov
test
inc
in
aad
dec
subb
cmp
xor
inc
jmp
arpl
fs
arpl
cmp
dec
adc
pop
mov
int3
sbb
add
add
shrl
fwait
in
cmp
xchg
and
roll
or
cld
or
sub
fcmovu
loop
xor
dec
jo
inc
cld
int
adc
inc
stc
daa
mov
inc
xchg
mov
pop
dec
vorps
insl
sahf
mov
aad
stos
test
cwtl
rorb
or
outsb
dec
mulb
push
loope
xlat
sub
pop
je
sbb
jecxz
add
push
mov
sbb
xchg
enter
imul
mov
adc
mov
and
mov
jmp
fcomi
pop
in
jne
mov
out
mov
inc
cmpsl
sub
sar
insl
aaa
clc
loope
mov
lcall
popf
test
cmc
stos
pop
addb
xor
inc
dec
or
mov
in
cmpsb
push
pop
sub
test
dec
cmpsl
mov
dec
jp
mov
arpl
out
xchg
push
mov
fstps
out
xchg
cmpsb
gs
loop
mov
in
pushf
adc
xchg
sub
inc
movsb
dec
leave
sbb
cmpsb
sbb
xchg
cmp
mov
pop
mov
lahf
adc
or
adc
lock
test
jp
rol
and
out
sti
xchg
fdivs
rolb
clc
sub
pop
js
into
ret
dec
add
daa
cmpsb
adc
addr16
add
ret
and
filds
inc
cmp
iret
xor
jo
add
add
mov
jge
popa
shl
stos
into
jnp
cmp
push
pop
jp
push
divb
inc
cmp
mov
iret
pop
popf
mov
jnp
sub
andl
add
loop
int3
xor
mov
clc
dec
dec
cmpsl
pop
aam
imul
mov
loopw
push
loopne
jp
pusha
cmp
data16
pop
stc
push
mov
test
adc
out
cwtl
mov
sub
pop
popf
js
sbb
mov
sahf
inc
or
in
loope
out
dec
add
xchg
cs
lock
adc
popa
ds
mov
pusha
xchg
mov
gs
adc
icebp
mov
mov
lahf
push
push
dec
pusha
aam
sahf
and
ja
mov
inc
popf
ja
mov
fisttpll
scas
add
es
int
xchg
flds
stos
sub
xchg
mov
pop
daa
sub
out
and
inc
lock
xorl
insb
jg
pop
pop
int
push
cmp
in
imul
aad
call
and
push
imulb
mov
adc
and
aad
enter
jge
cmp
fwait
mov
xchg
les
aas
test
in
jo
dec
into
adc
add
or
fists
mov
out
mov
dec
out
fcom
push
xchg
lds
dec
dec
jl
arpl
ds
jmp
jbe
js
data16
mov
inc
popf
stc
push
or
mull
repz
sahf
xchg
mov
ljmp
cli
jnp
movsl
idivb
pop
repz
test
imulb
sbb
or
dec
outsb
or
add
add
cld
sbb
cmp
mov
xor
mov
scas
jnp
adc
ja
jmp
dec
xchg
pop
mov
mov
loop
xchg
jne
clc
aam
jne
xor
mov
jno
cwtl
sbb
loop
dec
mov
popa
adc
push
rcrl
movsl
push
jp
mov
pop
shlb
sbb
pop
pop
fadd
push
fidivl
hlt
pusha
fmull
test
adc
xor
rcr
lock
pop
jbe
leave
or
xlat
sahf
leave
xor
data16
arpl
pop
adc
loopne
sbb
mov
inc
cmp
insl
in
jno
stc
fcmovu
xor
pop
out
inc
fs
inc
imul
mov
pop
dec
add
out
push
or
test
divl
mov
outsl
cmp
inc
cmpb
push
mov
daa
pop
repz
mov
popa
iret
sub
aad
adc
push
js
jno
in
pop
and
xor
cwtl
enter
stos
add
jno
xlat
jns
mov
mov
push
cli
fimull
push
imul
loop
xor
mov
add
mul
cmpsb
mov
sub
mov
or
imul
sbb
add
inc
xchg
cmc
jecxz
sub
out
jecxz
repz
fnstsw
mov
sarb
mov
and
out
and
aam
loope
sub
ja
pop
hlt
xor
int
rorb
int
dec
xchg
cltd
inc
pop
mov
bound
inc
std
dec
test
fnstenv
movb
les
dec
push
sbb
add
data16
add
sub
sbbb
cmp
jo
sbb
lock
add
xchg
lret
sbb
push
sbb
jecxz
bound
sbb
pop
pop
cld
or
xchg
jbe
xchg
jmp
and
cld
data16
push
jne
xchg
cmp
fcoms
das
aam
inc
rolb
xor
cli
stc
xchg
lds
xor
xchg
daa
bound
adc
imul
push
gs
and
pusha
jo
mov
in
mov
fldl
sub
bound
aas
ret
mov
aam
sub
imul
adc
xchg
push
movsb
std
inc
ljmp
adc
inc
leave
xchg
test
lea
mov
cmp
jp
repnz
outsl
inc
loope
mov
pop
push
cmp
nop
loope
int3
or
stc
aad
shll
push
push
loope
jle
pop
lock
rol
xchg
test
or
pop
mov
dec
popa
aam
push
rorl
in
aam
cmp
ret
sti
xchg
popf
adc
mov
sub
pop
cmp
sub
inc
nop
pop
lods
mov
and
mov
jmp
jp
xor
cwtl
inc
stos
pop
jb
xchg
xor
dec
jg
pop
and
pop
adc
rcrl
sub
test
add
cwtl
xchg
roll
nop
cltd
fmull
mov
fisttps
jge
fbld
mov
ljmp
sub
aad
jae
loopne
dec
fidivl
rcrb
sbb
cmp
fimull
adc
mov
mov
inc
lahf
mov
mov
addr16
inc
lret
pop
and
cmp
ficompl
xor
in
xlat
sub
fildll
or
or
lret
sti
movsl
test
dec
xchg
mov
je
add
add
fistpll
ss
dec
mov
push
cs
jne
stos
jo
adc
rorb
xor
or
inc
jmp
sbb
dec
lahf
mov
sub
dec
cli
adc
mov
ret
xor
inc
cltd
adcl
cmpsl
rorl
loopne
lahf
in
lods
loop
push
jl
push
js
pop
repnz
push
add
xchg
pushf
dec
jecxz
imul
loop
data16
aaa
ljmp
arpl
fwait
mov
pop
sub
push
dec
scas
fstps
jmp
stos
pop
pop
and
or
sbb
out
stos
shll
out
adc
push
aas
ss
mov
pop
push
scas
pop
xor
push
mov
sqrtps
cltd
fisubrs
outsb
jns
pop
das
out
fidivrl
adc
inc
into
ljmp
pushfw
sbb
adc
rol
test
insl
es
push
test
push
dec
xor
lods
cmpsl
ds
mov
aam
pmulhuw
push
xor
mov
aas
lcall
loopne
mov
xchg
add
insl
xchg
mov
pop
pop
lods
adc
pop
test
xchg
data16
rorl
neg
and
push
test
xchg
jecxz
js
jmp
enter
push
outsl
cmpsl
dec
pop
ss
jne
mov
das
add
fiaddl
stos
arpl
mov
jno
insl
mov
sbb
sti
loope
mov
mov
and
add
pop
push
pop
dec
sbbb
dec
enter
repz
pop
adc
adc
cmp
mov
stos
roll
jbe
and
and
or
jmp
in
movsb
dec
add
pop
lret
xor
mov
cmp
sbb
mov
push
clc
pop
out
es
xor
xchg
inc
jb
jge,pn
scas
cltd
sub
cmp
hlt
and
push
mov
js
push
ret
cmp
jae
imul
xchg
cmp
mov
and
and
in
fsubs
dec
in
dec
xchg
je
xor
xlat
dec
dec
add
int
ds
cmpsl
add
pop
repz
cmpsl
mov
test
repnz
adc
ror
lds
in
dec
dec
mov
pop
push
cmp
cmp
addr16
xor
jno
stos
xchg
sub
mov
dec
add
dec
fsubrp
lds
mov
cmp
sbb
mov
in
mov
push
push
int3
or
popa
insl
mov
cmp
mov
push
ds
std
or
test
loope
or
pop
ret
je
sub
cmp
icebp
jns
sub
rsqrtps
lods
and
xor
mov
adc
leave
pop
arpl
mov
and
in
mov
int
or
xor
lahf
sub
pop
int
adc
inc
mov
shl
das
mov
xor
inc
inc
out
sbb
dec
cmp
push
mov
mov
imul
icebp
xchg
lds
jge
mov
jp
push
les
jnp
lret
cltd
or
lods
lahf
fcmovnb
sahf
rcrl
iret
dec
hlt
mov
and
pop
xchg
lea
pop
imul
add
pop
pop
cmp
add
mov
sub
sub
lea
adc
adc
pop
es
push
dec
xchg
hlt
xchg
or
outsl
xlat
mov
stos
jp
rolb
and
jmp
fisubs
fdivrl
push
mov
lahf
imul
cmpsl
sub
mov
add
lock
mov
dec
pop
mov
out
dec
insl
adc
adc
jbe
movsl
in
stc
xchg
in
push
xchg
lods
or
xor
data16
nop
mov
mov
sahf
std
sub
into
xchg
cli
int
jge
pusha
lods
mov
inc
data16
jo
cmp
xchg
push
insb
adc
inc
add
or
loopne
add
out
push
add
stos
in
dec
ror
icebp
push
repz
in
in
js
orb
lcall
pop
ss
rorl
in
lret
ds
jno
mov
mov
cli
push
fnstcw
mov
mov
cmp
ret
push
push
pushl
or
xlat
push
daa
pop
and
push
dec
jbe
fs
cmc
mov
filds
aad
pop
and
mov
mov
mov
pop
xor
loopne
gs
cltd
pop
outsb
and
mov
mov
jne
xchg
bswap
ret
inc
pop
and
push
std
push
out
shr
cmp
push
cmp
ljmp
fs
je
jne
inc
or
mov
leave
and
pop
clc
cmpb
dec
in
loopne
pop
xorb
and
jns
test
popaw
aad
daa
dec
dec
xchg
inc
inc
sbb
mov
insl
xor
repnz
dec
xchg
mov
push
imul
dec
movsb
inc
pop
outsb
adc
fptan
pop
sub
xchg
push
sub
jno
ret
push
push
rol
imul
outsl
mov
outsb
inc
imul
lcall
pop
fildll
xchg
or
pop
push
add
aas
sahf
fmuls
or
push
rcrb
jns
cltd
adc
push
aaa
xor
aam
mov
incb
mov
adc
jae
fsubrl
mov
fildl
into
mov
add
mov
pop
add
fdivs
xchg
scas
mov
movsb
mov
cmc
and
pop
call
setae
sbb
jne
loopne
sahf
cld
cmp
and
pop
mov
inc
mov
mov
test
rcrl
lods
shlb
and
scas
mov
dec
aam
jmp
mov
repnz
xchg
data16
mov
ljmp
add
and
adc
sub
in
aaa
or
mov
loop
in
clc
and
sbb
sahf
negb
lods
sahf
xor
inc
fistl
dec
lcall
mov
inc
push
sub
out
ret
jecxz
jmp
sbb
cld
push
mov
xor
adc
xchg
lock
cmpsl
pop
pushf
mov
fld
jp
adc
xor
sti
ret
adc
sbb
or
xchg
lret
dec
idivb
sar
lcall
std
mov
push
dec
das
cmp
mov
pusha
adc
lea
xor
lock
shl
mov
das
xchg
jge
es
scas
mov
adc
inc
rorl
loope
push
lret
dec
sub
daa
push
loop
dec
out
sub
aad
fwait
ja
in
cs
icebp
es
adc
aas
shlb
mov
dec
pop
xlat
xchg
ds
xor
add
mov
imul
jp
xor
xor
jg
pushf
sub
mov
and
aad
xor
xchg
js
cmp
lcall
sub
and
and
or
stc
jmp
pop
loope
dec
loopne
notl
mov
mov
ljmp
pop
sti
xchg
popa
lock
jne
adc
ret
jo
outsl
cld
movsl
ror
cmp
rclb
pop
xchg
leave
sbb
imul
dec
icebp
mov
jge
or
fldt
mov
adcl
push
aad
sub
push
fsubrs
daa
mov
subb
jno
push
sbbl
fwait
lds
push
sbb
sub
adc
adc
dec
cld
push
jae
mov
dec
arpl
xor
stos
add
mov
ss
jb
jecxz
or
push
test
leave
jne
mov
push
subl
mov
mov
cmp
and
dec
push
orl
stos
scas
aad
add
lock
sbb
adc
movsb
pop
andl
dec
dec
clc
fs
fcomps
pop
fxch
xlat
sub
add
out
xchg
push
jnp
add
lret
push
xchg
inc
into
or
cld
fisubrl
iret
inc
out
clc
out
leave
cmp
mul
push
mov
fsubrl
push
sti
ds
push
xlat
add
or
cmp
push
jb
xchg
pop
mov
sub
jl
lret
xor
push
fnstsw
push
sbb
std
stos
loopne
xchg
enter
adc
ja
out
cmpb
icebp
out
adc
ficoml
add
rcrl
stc
sbb
jge
mov
push
in
fdivrp
loop
or
cmpsl
out
mov
lcall
add
dec
movq
inc
inc
xor
icebp
mov
stos
sarb
lock
out
jle
test
pop
push
push
add
fwait
hlt
insl
mov
ljmp
push
push
cmp
jmp
enter
fisubs
mov
fwait
adc
add
jnp
insb
and
out
icebp
sub
ret
insl
jge
scas
jmp
mov
adc
dec
adc
adc
push
bound
call
sub
jnp
nop
ja
hlt
or
subl
addl
jb
and
insb
iret
clc
dec
or
xor
repz
fmuls
add
test
out
nop
cmc
imul
mov
cmp
popf
inc
loop
ret
std
mov
push
repz
dec
mov
fiadds
gs
lds
cli
dec
mov
mov
jmp
pop
inc
push
adc
loope
fmull
loope
dec
cmp
mov
icebp
mov
xchg
mov
shl
pop
mull
loope
arpl
pop
jb
jns
cmpsl
sub
js
addr16
adcl
xor
fnstcw
aam
xor
cmpsl
out
jno
add
add
dec
add
xor
stos
mov
call
add
sub
sti
les
cli
dec
gs
cld
jns
and
aam
cmpsl
sub
jge
lds
push
test
orl
shl
jae
hlt
or
or
ja
cmpsb
movsl
stc
and
sbb
xchg
jno
and
jae
cs
adc
cld
cmp
pcmpgtw
loope
das
inc
cmpsb
jge
and
push
inc
push
sbb
fsubrl
aaa
cmp
pop
sbbl
sti
fdivrs
jbe
mov
xchg
or
aas
mov
pop
scas
pushf
imul
push
cwtl
cmpsb
fstps
pop
mov
mov
aam
das
and
cmp
xchg
cwtl
test
mov
push
inc
dec
lret
add
outsb
xor
shlb
add
ret
imul
sbb
aam
jns
lds
dec
sub
xchg
ret
jo
outsb
rcl
jae
fnstsw
xlat
pop
mov
jnp
in
inc
call
and
test
sub
sti
addr16
jo
int3
jnp
iret
fsubl
jae
movsbl
in
pop
filds
xchg
mov
fcmove
testl
test
cmpsb
mov
negl
mov
leave
shl
jno
fucomip
mov
pop
orl
lret
repz
mov
lret
test
rcll
testl
jl
mov
out
xchg
nop
adcl
xchg
popa
adc
cld
dec
dec
push
lea
jl
scas
rorl
addr16
jns
inc
daa
and
sbb
dec
aaa
stos
imul
cltd
out
dec
jb
xor
jnp
into
cmpb
or
xor
fwait
mov
jno
mov
pop
inc
mov
mov
insl
int
lds
push
loop
fmull
sahf
btr
test
testl
xor
pop
inc
inc
mov
cmpsl
sub
ret
mov
jecxz
add
and
rcrl
loop
icebp
inc
andb
lcall
insb
movsl
dec
pop
dec
fcomi
int
outsl
or
add
add
inc
lds
add
push
and
or
sub
lock
cmp
mov
add
push
cmp
out
mov
incl
pop
jp
sbb
and
xchg
jae
push
adc
mov
jo
cmp
std
cltd
popf
pop
imul
xchg
xchg
insl
jecxz
pop
mov
loope
jl
mov
insb
adc
hlt
fcomp
mov
sbb
nop
sti
in
sub
adc
and
cmp
pop
bound
mov
jp
xor
jge
loopne
aam
in
xchg
pop
pop
lods
push
push
lock
mov
mov
in
stos
adc
cltd
clc
jecxz
push
call
imul
pcmpgtb
adc
aam
inc
add
add
xchg
or
jae
cmp
fnstsw
aad
cmpsl
ljmp
adc
mov
repz
out
sbb
jmp
pusha
int
sbb
push
inc
jp
mov
pop
inc
out
outsl
popa
fs
ljmp
or
pop
leave
and
sub
jb
sub
and
enter
xor
pop
lret
add
in
lods
in
iret
push
testb
fucomp
xor
pusha
outsb
or
jbe
add
push
enter
mov
add
negl
pushf
adc
jnp
sbb
mov
sbb
xchg
daa
jl
rcrl
push
inc
adcb
push
arpl
outsb
push
jmp
dec
or
mov
mov
out
enter
inc
clc
mov
bound
dec
mov
incb
push
aaa
repz
push
ret
fnstcw
add
sub
mov
push
mov
jg
cmp
mov
and
stos
inc
push
jo
and
jl
in
out
into
stc
xor
add
ret
movsl
jbe
jg
enter
push
cmp
dec
adc
push
loope
or
add
dec
jg
rorl
push
sub
inc
mov
insb
adc
or
aad
jo
sub
sbb
imul
mov
scas
adc
xlat
insb
notb
adc
into
pop
add
jecxz
xchg
mov
icebp
mov
into
mov
fildll
cld
test
cwtl
mov
sub
dec
lret
push
dec
clc
das
test
outsl
jo
or
or
lods
subl
std
out
fistl
cmp
xchg
cmp
xchg
scas
push
loope
sbb
jmp
jge
sbb
mov
cli
pop
lock
aas
add
xor
out
out
lods
sti
shll
xor
mov
sbb
iret
cmp
es
jmp
or
cmc
xor
stos
hlt
mov
lret
and
fisttpll
scas
pusha
cmpsl
xlat
arpl
ret
inc
mov
push
sahf
es
arpl
pop
sub
insl
sbb
or
sti
xor
gs
jg
pop
push
cmp
xchg
jne
jo
mov
sub
sarb
fmull
in
jne
inc
int
cmp
cmpsl
cmp
mov
je
dec
in
mov
push
mov
fbstp
sub
lret
dec
popf
addr16
addb
idivb
bound
add
push
sub
loope
mov
into
mov
int3
dec
fstp
les
jae
inc
cmc
pushf
aam
mov
jge
ffreep
into
dec
mov
ret
inc
fcoml
inc
shll
inc
sbb
mov
scas
fucomp
out
pop
in
lret
outsb
dec
jp
mov
push
mov
push
in
push
pop
fwait
ret
mov
out
test
dec
add
mov
adc
jg
or
dec
int
ret
dec
inc
mov
jnp
cmc
in
and
es
adc
jg
outsl
je
ficoms
mov
es
push
das
xchg
cmc
lods
sti
je
xorb
dec
movsl
pop
sub
ja
scas
shrb
leave
stos
and
mov
inc
ss
leave
sub
mov
add
jns
popf
cmp
decl
int
dec
add
cmp
cmpsb
shlb
and
movb
fxam
mov
lods
mov
cld
pop
or
dec
sub
call
mov
dec
cs
sbb
cld
fs
aad
adc
pop
gs
jae
loope
ds
shrd
xchg
lea
push
jmp
mov
xchg
pop
fwait
push
fucomp
rclb
push
push
cmp
cmp
cmp
adc
dec
add
jbe
pop
sbb
pop
or
dec
xor
fildl
scas
scas
inc
fdivrp
jb
int
loop
or
xchg
in
jns
popa
add
push
rcr
in
aaa
sar
push
into
inc
in
mov
jmp
popf
push
jle
jo
jne
std
add
dec
outsb
in
push
sub
push
xlat
leave
stc
or
xchg
add
xor
or
dec
cmp
insb
insl
test
and
inc
pop
idivb
pop
add
sbb
pop
ret
mov
adc
sbb
mov
push
ret
cmp
or
in
ret
or
addr16
mov
pop
dec
shrb
xor
add
sbb
sub
jge
popa
xchg
outsl
ja
push
push
push
sbb
push
mov
sbb
add
xlat
in
and
loopne
cltd
fimuls
out
dec
mov
push
xor
fnstenv
mov
add
out
jbe
add
out
lds
aaa
adc
dec
push
leave
out
or
adc
push
and
xchg
cmpsl
pop
test
xor
inc
sahf
fadds
adcb
mov
fisttps
xor
xchg
pop
stc
mov
xchg
stos
inc
mov
and
mov
out
iret
imul
sbb
adc
out
jo
xlat
scas
sbb
dec
lcall
movl
jl
ficompl
icebp
push
jbe
lcall
cwtl
subb
push
lahf
jle
jbe
sbb
pop
sub
sarb
test
lea
xchg
mov
cwtl
fcoms
xchg
mov
jno
cmc
lahf
je
xchg
mov
mov
or
xchg
js
outsl
iret
xchg
pushf
fidivrl
mov
cmpsb
clc
push
push
lea
xchg
shrl
xchg
ja
jle
push
out
rcl
enter
ret
xchg
or
mov
inc
cltd
in
jl
push
inc
neg
xchg
xchg
sbb
mov
add
test
mov
popa
popaw
lea
or
inc
dec
mov
sub
push
or
add
adc
jne
and
add
jbe
ljmp
mov
xchg
jns
fisttpll
imul
dec
loope
adc
xchg
lods
std
int
loope
add
ds
mov
out
je
pop
xchg
mov
ss
int3
push
or
loopne
fsubrs
movsb
adc
cld
inc
or
mov
stos
icebp
add
ds
mov
andl
sbb
popf
lods
pop
outsb
hlt
mov
stc
pop
icebp
cltd
aas
dec
mov
rolb
add
fisubrs
and
std
pop
popf
add
adc
sbb
call
add
fmulp
pop
sbb
xchg
adc
or
inc
loopne
push
cmp
mov
or
ja
testl
lret
sub
pop
mov
lret
jecxz
pop
lock
lret
je
scas
fcoml
or
aas
pop
lret
lds
fnstsw
jge
push
jg
add
es
adc
pop
sub
data16
pop
adc
mov
push
in
jg
movsl
notl
sub
pusha
test
xchg
inc
cs
xchg
stc
sbbb
push
pop
lock
xlat
fst
nop
mov
push
ds
loop
or
and
pop
lds
adc
mov
xor
add
int
pop
in
push
mov
add
jle
nop
cs
aas
or
imul
cld
iret
mov
aaa
mov
xchg
addr16
push
loope
xchg
fwait
stos
add
insb
andb
xchg
mov
mov
cmp
sbb
enter
out
int
loopne
jo
sbb
xor
inc
rolb
fiaddl
or
loope
mov
sbb
dec
loop
inc
cmpb
inc
pop
gs
or
test
in
or
xchg
mov
jb
insl
inc
pop
insl
in
inc
cmpsb
add
adc
es
jl
add
sub
cmp
mov
mov
add
sbb
pop
and
arpl
push
pop
das
mov
sub
adcl
fwait
nop
mov
or
sbb
cmpsb
lea
mov
mov
or
out
sarb
dec
sub
jae
leave
jmp
mov
insl
test
cmp
mov
test
jns
cltd
mov
mov
sbb
jo
iret
push
pop
xorl
bound
mov
push
xchg
inc
sbb
pop
pushf
inc
lock
add
and
or
xor
sbb
hlt
pop
adc
sahf
cmpsb
xor
hlt
jecxz
inc
cs
cmp
mov
push
aas
mov
sub
push
jp
hlt
jle
inc
repnz
cwtl
cmc
inc
jnp
jo
lods
sahf
mov
or
sub
cli
jp
pop
xor
or
mov
jbe
dec
adc
scas
in
xchg
movups
mov
int
mov
jb
lds
movb
mov
sbb
mov
icebp
nop
cltd
jecxz
dec
into
sbb
jae
xor
jmp
outsb
sub
and
aad
add
cwtl
xor
push
fisttpl
pop
mov
sub
pop
xor
mov
add
inc
xor
packuswb
mov
adc
fwait
and
mov
scas
shll
jnp
xchg
mov
add
adc
fcoml
pushf
sbb
mov
mov
pop
aaa
push
xor
or
in
cmpl
lods
lods
cmc
pop
pop
and
repnz
test
cmp
rolb
js
shll
xor
cmp
sub
call
cmovnp
xchg
xor
pushf
mov
in
ret
ret
and
xlat
lock
xchg
testl
jb
adc
dec
popa
popf
mov
xor
add
in
rorl
sub
in
mov
xor
jg
mov
scas
sbb
and
jmp
loop
dec
add
cli
jae
cmp
mov
idiv
and
pop
push
aam
mov
data16
jns
notl
xor
push
pop
std
movsb
test
cmp
mov
ret
xor
xor
adcb
mov
pop
adc
mov
cmp
cmp
ficoms
outsb
jecxz
cltd
sub
mov
xchg
lea
sub
push
shl
mov
cmp
lock
inc
xorps
int3
and
das
push
aad
out
mov
das
jne
cmp
jmp
pop
mov
sub
lea
jmp
iret
sub
pushf
xor
mov
nop
mov
stc
das
jecxz
ffree
pop
or
sub
add
imul
mov
fs
dec
rdmsr
sub
je
cmpsb
push
pop
test
sub
popa
or
nop
adc
out
adc
jecxz
or
out
jecxz
std
cmpsb
push
or
or
addr16
mov
lcall
data16
dec
mov
fisttps
sbb
insb
push
inc
pop
adc
push
aas
incl
xor
xchg
sarl
je
cmp
mov
pushf
test
shl
pusha
test
adc
adc
stc
fistpl
ja
movsb
fucomip
push
and
mov
lahf
mov
pop
jbe
stos
movsl
push
mov
rcrl
or
mov
jge
sub
stc
aaa
xor
data16
fs
popf
push
lahf
jo
mov
inc
or
jecxz
out
xchg
xchg
sub
xchg
mov
ret
enter
mov
mov
jmp
inc
adc
cmpsl
lcall
jp
rcr
sub
and
xchg
ds
fsts
xchg
je
sub
repz
mov
sbb
imul
push
cmp
sbbb
adcb
add
push
cs
movsl
les
mov
push
add
out
xchg
adcb
es
aad
dec
leave
nop
dec
enter
or
xorl
push
orb
lret
loopne
aad
add
and
sbb
fsubp
xchg
push
js
scas
fs
pop
mov
iret
jb
mov
es
jo
andb
mov
cwtl
out
int3
lcall
es
scas
or
test
les
pusha
jne
ret
push
pop
xchg
int
loopne
pop
inc
iret
ljmp
cmp
or
pop
shrl
add
fmul
shlb
mov
push
cli
in
test
insb
pusha
jbe,pn
out
icebp
or
lods
out
xchg
adc
xchg
rcr
dec
outsl
fst
sbb
scas
insl
push
ret
push
dec
push
dec
cmp
or
push
mov
cmpsb
test
repnz
inc
fwait
pop
cmp
pop
jp
mov
push
lock
add
mov
movb
jp
dec
in
jg
mov
xor
gs
lods
cmp
test
lock
lock
lds
divb
sbb
xchg
cmc
mov
pop
push
popf
cmpsl
ja
xchg
test
adc
test
xchg
pop
fs
adc
pop
fwait
sbb
pop
nop
clc
jp
andl
pop
fwait
je
adc
jae
sbb
daa
sti
ret
xchg
and
jle
fwait
in
call
mov
rcrb
loop
add
hlt
and
push
mov
or
xor
repz
lret
imul
pop
sbb
cmp
sbb
enter
dec
mov
sahf
lods
mov
adc
dec
inc
cmpsb
add
fmuls
add
adc
mov
xchg
dec
shll
xchg
cli
mov
pop
mov
out
fstpl
int
dec
cmp
adc
jae
xor
lock
ljmp
mov
fisttpl
pop
inc
push
movsb
gs
lods
dec
and
add
adc
loopne
cmpb
sahf
jecxz
test
dec
and
cmpsl
pop
xchg
mov
in
popa
mov
pop
ds
fwait
add
cmp
adc
dec
mov
mov
mov
push
int3
add
push
adc
loopne
outsl
lock
ja
lods
daa
scas
test
rclb
popf
sub
sub
hlt
jno
inc
fdivs
sarb
outsl
jno
xchg
sub
arpl
stos
jb
outsb
js
xor
mov
sti
iret
mov
adc
in
sahf
stc
jmp
add
mov
xor
mov
and
popa
jmp
es
add
stos
dec
lret
mov
shrb
sbb
movsl
dec
mov
xchg
enter
push
int3
jecxz
xor
arpl
pop
jne
je
push
bnd
leave
mov
out
das
sub
lret
sub
jmp
mov
mov
or
xorb
or
dec
sub
mov
aad
cmp
adc
mov
or
xlat
xor
outsl
jmp
lds
int
js
mov
and
cmp
and
rol
sbbb
std
mov
ja
pop
and
mov
or
cmovae
jo
aaa
call
xlat
ljmp
bound
push
pop
add
mov
and
xor
push
xor
jnp
std
aaa
ret
call
mov
popf
mov
in
paddq
arpl
dec
lahf
pop
pop
pop
sub
loopne
shlb
movb
jns
outsl
sbb
test
sbb
cmp
cmp
dec
fisttpll
cs
test
repz
xchg
imul
mov
rcrl
movsl
lds
mov
in
mov
out
inc
out
mov
shll
std
dec
mov
shrl
sbb
stc
mov
scas
pop
push
jle
dec
movsl
and
cld
cltd
int3
pop
or
insl
cmpsb
sbb
inc
insb
ja
or
lods
jg
scas
orl
adc
ss
ret
fisubl
jecxz
and
test
add
adc
aas
or
mov
mov
xchg
jmp
sbb
cld
mov
faddl
dec
adc
outsb
shr
sub
or
add
xchg
inc
insl
xchg
das
insl
and
cmp
cli
sub
mov
push
and
pop
mov
and
aas
jecxz
sbb
xor
rcll
mov
ret
xchg
jg
cmp
push
outsb
mov
add
orb
mov
xchg
nop
jp
bound
jb
add
std
xchg
scas
loop
pop
mov
sub
and
aas
rcrb
pushf
xchg
imul
shll
into
mov
sbb
sub
ror
pop
test
sbb
mov
add
push
cmp
adc
jge
sub
stos
test
fadd
add
xor
mov
mov
in
aad
mov
inc
push
mov
leave
sub
lds
adc
lods
cmpsb
aaa
or
lahf
popa
jg
or
dec
add
in
pop
test
cmp
ds
push
test
sbb
popf
inc
out
aad
nop
mov
push
lods
jb
sbb
mov
inc
adc
sbb
pop
mov
nop
inc
icebp
fmulp
in
mov
jecxz
or
mov
jnp
popa
lret
in
cwtl
pop
inc
xor
in
fwait
das
add
rol
repnz
lret
int3
push
ds
sbb
jnp
in
mov
sub
cmp
xchg
testl
xchg
add
or
add
sub
inc
inc
inc
jmp
jae
inc
enter
add
push
push
jno
fildll
push
popa
fmuls
lret
sub
and
aad
push
cld
mov
std
std
and
xchg
iret
jmp
xchg
dec
orb
cmp
mov
inc
jl
cmp
mov
mov
mov
jnp
cmpsl
das
mov
iret
inc
daa
sbb
dec
test
test
mov
lea
inc
outsb
gs
sti
jno
and
test
dec
mov
dec
lods
cltd
pop
add
ljmp
xor
imul
cmc
mov
and
fnstcw
xchg
adc
scas
clc
jge
lret
add
ds
fstpt
cmp
push
ror
xlat
lret
inc
movb
xchg
push
mov
lea
imul
jg
sbb
ja
shlb
icebp
and
cwtl
cmp
xchg
stc
mov
notb
rclb
in
or
sub
jnp
mov
out
ret
xchg
xchg
jmp
js
mov
push
movsl
or
ljmp
rol
adc
dec
xor
mov
shll
std
add
mov
out
scas
sbb
or
pop
jg
push
stos
mov
mov
xchg
jmp
dec
dec
adc
aaa
pop
mov
movsb
outsl
dec
jle
shlb
sbb
adc
sarb
jns
fisttpl
cmp
or
popa
jle
mov
inc
call
pop
sub
loop
pop
cli
iret
in
or
inc
sti
loop
push
mov
xchg
push
inc
inc
and
jle
sahf
mov
js
sub
inc
loopne
cmp
lods
lods
pop
stc
ss
ret
outsb
cltd
lret
sub
orb
rclb
cmp
mov
daa
add
bound
iret
dec
fnstenv
xor
cmpsl
mov
cmpb
sti
nop
ljmp
xchg
mov
scas
sbb
adc
scas
js
dec
mov
int3
jmp
push
in
imull
xchg
cmp
mov
dec
sti
push
into
aas
mov
hlt
stos
mov
push
push
push
or
xor
fcmovu
mov
test
sti
loope
loopne
and
sbb
pop
into
fcompl
cmc
cmp
iret
cmp
aad
xchg
roll
loopne
dec
xchg
cwtl
or
movsb
lods
test
pop
and
dec
and
sarb
lods
pop
xchg
imul
ljmp
out
dec
lahf
lcall
test
push
mov
mov
call
lods
jle
lock
int
in
sbb
test
xor
mov
int3
mov
leave
jns
push
cmpsl
cwtl
cmpsb
push
mov
mov
mov
out
add
cmpsb
mov
fiadds
xchg
dec
test
mov
sbb
in
cld
cmpsl
mov
cwtl
adc
xchg
pop
sbbb
out
shrb
dec
adc
cmpb
jae
fcomi
ss
xlat
dec
popf
xorb
testl
mov
subl
mov
jne
jg
cltd
inc
inc
sub
cwtl
ss
add
add
sti
jb
fbld
or
xor
in
adc
nop
xor
iret
cli
xor
xchg
or
jb
or
pop
mov
push
fwait
es
push
mov
add
mov
or
mov
push
js
xor
imulb
enter
pop
pusha
inc
aad
insb
imul
in
fmull
jge
and
popa
jp
cmp
mov
in
es
adc
shr
xorl
sarb
aam
test
daa
add
outsl
pop
jecxz
cli
dec
scas
adcb
xchg
gs
push
mov
mov
and
or
add
lret
lods
outsl
ljmp
adc
pop
and
cmp
data16
push
push
enter
sub
les
gs
jp
fiaddl
inc
mov
or
jecxz
in
js
rorl
pushf
mov
or
cmpb
inc
push
loop
out
mov
mov
mov
testl
pop
movsl
push
dec
enter
in
cli
mov
test
xlat
movsl
jp
mov
jne
inc
xchg
add
negb
add
mov
ss
insb
inc
inc
leave
lahf
js
jl
std
push
ljmp
cwtl
xor
pop
cmp
incb
andl
xor
push
inc
into
lahf
enter
ret
loop
insl
loop
sbb
subl
mov
pop
push
push
mov
lods
pop
sbb
insb
loopne
mov
xchg
lahf
inc
daa
out
ja
outsb
test
xchg
mov
aam
sub
repz
pop
cmp
mov
js
jge
jge
movsb
es
xor
int
and
js
cmpsl
fcmove
aaa
push
fcoms
in
jecxz
repz
dec
cmp
mov
int3
repz
popa
sub
sahf
lret
in
pop
sahf
shr
dec
jp
inc
hlt
mov
lea
jge
push
xchg
incb
and
cli
push
fnstcw
jecxz
sbb
imul
int3
push
push
insl
mov
sub
inc
imul
repz
push
es
cld
xchg
cmc
pop
in
fs
addr16
dec
ljmp
fstl
push
iret
mov
mov
call
sub
lods
add
out
xchg
lea
inc
pop
add
fidivrl
xor
into
inc
sbb
cmp
and
outsl
mov
sbb
fcmovb
inc
cmp
push
push
add
push
ffreep
mov
jae
cmpsb
xchg
sbb
add
cli
and
icebp
pop
rcl
stos
movsb
pop
out
jns
or
or
ss
call
dec
push
fsts
loop
add
stc
aaa
lret
push
adc
inc
sahf
dec
jbe
test
and
cmp
fwait
jne
mov
push
fidivs
mov
sub
icebp
repnz
enter
and
cmpsb
mov
arpl
fcomp
add
adcl
xchg
inc
ret
add
and
bound
mov
jne
jl
xchg
jno
mov
nop
shrl
mov
fdivrl
xchg
scas
xchg
jle
out
icebp
std
cld
or
dec
sbb
fldt
xchg
sbb
mov
cmp
xlat
cmpsl
mov
or
gs
stc
daa
or
out
pop
pop
jae
and
nop
int
ss
mov
movsl
int
jo
cmp
je
cmp
inc
sbb
jns
scas
nop
cwtl
cmp
stos
mov
dec
add
addl
loopne
lcall
movsb
inc
mov
xor
inc
notb
inc
mov
jle
in
pop
and
xchg
push
mov
fiadds
xor
sbb
int
out
clc
adc
nop
enter
inc
pop
out
repnz
pop
fs
and
and
stos
adc
test
mov
adc
mov
and
imul
xchg
and
fucomp
pushf
daa
lret
add
je
loope
pop
outsl
arpl
je
or
imul
aaa
outsb
dec
lods
jle
cmp
mov
fs
fisubrl
mov
repnz
mov
lahf
out
push
pop
movsl
outsb
pop
mov
out
scas
inc
add
lea
and
sub
jle
std
stc
mov
pushf
dec
xor
in
in
jne
pop
repz
add
insb
cli
fisttpl
or
iret
mov
dec
subb
mov
pop
js
inc
jmp
xor
clc
enter
fildl
add
and
mov
aam
cmpsb
outsb
mov
xchg
mov
fnstsw
shlb
sub
stos
pop
dec
test
and
and
sub
mov
loopne
sub
or
fisttpl
jge
pop
mov
das
mov
fdivr
fsubrs
sti
leave
cmpsl
sub
gs
inc
inc
dec
and
cwtl
mov
push
sbb
xor
movsl
pop
rcrb
mov
sbb
adc
ret
lods
and
mov
dec
jecxz
stos
test
push
pop
into
sbb
insl
cmp
jns
lods
daa
jne
arpl
call
or
xor
inc
and
in
lcall
mov
ficompl
imul
add
loope
mov
xchg
gs
std
sbb
or
test
xchg
and
jmp
cmpsl
and
sbb
pop
push
mov
test
push
sbb
enter
mov
lcall
xor
scas
push
setbe
insb
cmp
push
repnz
scas
insl
stos
pop
imul
mov
fists
dec
or
jbe
cli
rorl
push
ficoms
aaa
in
inc
cwtl
sahf
fstpt
jae
push
pop
cwtl
cmpsb
movsl
mov
xor
push
and
push
lret
std
dec
xorl
adc
xchg
sbb
pop
faddl
pop
out
or
enter
shll
shlb
and
jmp
or
sub
ja
pusha
sub
nop
imul
ljmp
xor
add
xlat
in
movsl
sarl
dec
insb
add
scas
mov
shll
sarl
dec
or
test
adc
loop
mov
push
nop
inc
into
test
inc
into
xchg
test
pushf
es
bnd
mov
cmp
shl
inc
sti
out
push
sbb
sub
mov
jl
lea
jl
xchg
and
mov
fcmovbe
in
mov
pop
xchg
pushf
rolb
inc
sub
aas
xor
aam
lods
addr16
adc
jns
out
push
daa
test
inc
mov
je
andb
bnd
stos
clc
sbb
leave
or
pop
xchg
or
addr16
xchg
iret
jo
sbb
or
enter
sbb
xchg
mov
xor
je
iret
cmp
push
shrl
mov
mov
mov
insb
jne
fldl
arpl
pop
jg
mov
push
mov
add
cltd
xchg
pop
jno
mov
pop
pop
inc
xor
lods
notl
pop
and
leave
dec
js
pop
pop
sub
adc
mov
cwtl
les
or
or
in
mov
mov
dec
scas
mov
push
xchg
xchg
fsub
fistl
fucomi
lods
js
push
cltd
push
stos
xchg
push
imul
jnp
push
test
sbb
mov
int
mov
adc
cld
ret
mov
cmc
and
xchg
sar
andl
pop
out
push
idiv
cli
test
dec
dec
xchg
push
pop
jmp
scas
repnz
add
xchg
mov
mov
outsl
dec
adc
out
mov
test
cmp
xor
jge
xchg
das
push
or
lds
imul
enter
mov
scas
mov
dec
pop
das
mov
icebp
fs
fsubl
adc
sbb
xor
rol
fxch
pop
inc
lahf
jae
push
adc
xchg
movsb
cwtl
clc
mov
aas
hlt
push
and
js
lods
push
and
inc
data16
mov
xor
jle
pop
fs
pop
and
sub
imul
mov
repz
outsb
push
data16
dec
or
mov
stos
or
xchg
cmp
lret
mov
adc
jp
imull
cwtl
in
adc
or
pop
xchg
xorl
pop
inc
cld
sarl
loop
jmp
sub
insl
push
jmp
cli
pop
jecxz
lcall
nop
xchg
dec
and
aam
pop
pop
out
push
xor
imul
cmp
add
mov
int3
adc
mov
add
xchg
testl
xor
daa
sbb
mov
and
stos
mov
mov
les
push
hlt
jne
jg
sbbb
or
cmpsl
lea
mov
outsb
sub
test
jge
lret
imul
cli
push
ds
hlt
cld
daa
lret
jb
stos
std
pop
scas
sbb
pop
xlat
jbe
sbb
fchs
sbbb
fsts
cwtl
and
int3
and
sbbb
ret
jno
ret
in
push
inc
nop
cli
add
xor
sbb
cld
ljmp
and
mov
jnp
dec
xor
nop
imul
sbb
adc
push
jne
xchg
outsl
cmp
jp
leave
xor
jmp
cli
std
test
aad
jge
adc
push
xchg
push
lods
nop
push
pop
into
imul
repz
in
lret
push
xchg
pop
jp
aad
stc
out
std
addb
and
push
push
pop
out
hlt
in
fs
cld
jo
xor
data16
adc
add
push
mov
adc
mov
jl
ds
and
cmp
imul
cmp
loop
ljmp
cmp
inc
orb
jp
mov
bound
dec
ss
adc
sbb
fisubl
lds
in
rep
dec
cmpsb
mov
sbb
add
shll
xchg
push
lcall
mov
inc
lahf
repnz
push
sbb
cmp
cwtl
jae
mov
stc
ja
inc
cmp
adc
js,pn
inc
imul
mov
inc
ret
xorb
jo
sub
jge
mov
jo
mov
fldt
fistpll
fisttps
pop
mov
jecxz
lcall
in
mov
inc
pop
mov
jo
subl
inc
ds
lret
and
dec
xor
aas
fs
mov
push
rorb
inc
xchg
lcall
mov
cmp
das
cmp
aaa
lcall
in
scas
cmp
or
imul
mov
fisubrs
push
cli
and
push
stos
stc
loop
jg
lods
stc
lods
in
and
dec
adc
xlat
pushf
push
je
mov
sbb
xlat
lcall
mov
stos
pop
cltd
cs
mov
stos
sbb
movsb
xchg
test
adc
shlb
mov
cltd
push
sbb
or
mov
sbb
mov
lahf
cmpsl
inc
jl
inc
pop
aaa
scas
fdivrl
jno
jp
pavgb
push
fs
push
ret
pop
and
aas
popa
xchg
fs
push
jne
cli
test
push
ja
dec
scas
mov
aam
and
es
or
loope
lds
es
movsl
outsb
sar
movsb
adc
inc
xchg
jecxz
sti
mov
or
dec
push
inc
jl
shr
insb
xchg
jecxz
imul
jne
pop
inc
push
cmp
cmp
xchg
pop
mov
pop
idivl
mov
mov
jp
pop
repz
out
xchg
loopne
mov
jbe
sahf
xchg
enter
shr
mov
push
fs
fimuls
fistpl
pop
jmp
mov
add
xchg
adc
jmp
inc
sub
xchg
and
xlat
shl
push
cltd
sbb
ljmp
ja
dec
aam
dec
sbbb
xchg
and
push
pop
mov
pop
mov
cmp
pop
imul
mov
push
add
imul
std
or
add
inc
mov
xor
stos
testb
or
in
pop
sub
aad
jo
dec
in
inc
repz
sub
add
enter
mov
loopne
pop
das
pushf
add
rcrl
push
ljmp
incl
mov
mov
in
add
add
call
sub
jl
lahf
js
mov
in
xor
adc
je
nop
movsl
mov
outsb
xor
push
push
jns
sbb
jo
sub
bound
mov
test
cmp
jo
adc
lock
iret
xor
xchg
gs
jle
mov
data16
stos
or
cmp
in
mov
std
jnp
inc
mov
push
cwtl
mul
stos
cmp
rcrl
and
mov
inc
or
cltd
out
addb
adc
ret
nop
push
lahf
fs
fnsave
aam
xchg
push
adc
adc
out
mov
add
xor
rcrl
iret
outsb
mov
add
inc
pop
adc
clc
pop
cld
mov
xchg
mov
js
imul
adc
icebp
jle
xor
fcoml
out
inc
cmp
xorb
pop
icebp
add
roll
popa
add
sbb
pop
dec
testb
cmpsb
scas
adc
inc
les
xchg
imul
andb
push
adc
pop
mov
pop
dec
imul
xchg
cmc
gs
mov
loop
push
or
or
add
insl
cmp
test
lock
fistps
sti
xchg
cltd
add
jbe
je
addb
dec
sbb
sub
out
jbe
in
pop
push
mov
pushf
push
mov
iret
jb
out
fimull
ficoml
pop
and
faddp
cmpsb
and
xchg
pop
fimuls
cmp
adc
test
lret
adc
jle
inc
sbb
lock
das
cwtl
andl
stos
pop
xor
jecxz
mov
mov
sbb
arpl
mov
enter
popl
push
pop
je
dec
inc
xor
add
sti
xor
in
xor
call
mov
jae
lock
cmp
xchg
cmp
pop
dec
push
das
inc
sub
addl
or
clc
fsubrl
inc
add
or
mov
test
or
mov
lods
sbb
repz
pop
sub
xchg
dec
jg
test
xchg
sub
loopne,pt
mov
lcall
shll
fsubrl
xchg
xchg
cs
cmpsb
in
test
inc
and
bound
jmp
scas
ret
movb
sub
ret
sub
lret
jb
add
push
and
dec
cmc
stc
xchg
sub
jnp
subb
jmp
adc
outsl
jae
loop
or
inc
add
jb
cmp
icebp
push
frstor
lds
icebp
in
lret
and
xchg
jg
rcl
mov
mov
outsb
sarb
je
inc
or
sub
adc
pop
jb
out
mov
cmpsl
sub
je
jge
mov
sub
cmpsl
mov
loope
mov
andl
ret
sub
mov
mov
mov
outsb
test
lods
shl
dec
dec
js
daa
test
sub
sub
je
scas
adc
push
ljmp
xor
jl
add
xchg
ljmp
jmp
dec
pop
cmp
xchg
xor
inc
xor
stc
pop
movsl
or
rcrl
and
inc
xor
fldt
pop
mov
daa
pop
nop
add
incb
lret
push
pop
xlat
xor
add
adc
sbb
rorl
xor
add
sub
inc
jle
inc
pop
xchg
mov
mov
xchg
loopne
sub
push
jmp
add
lret
cmpsb
fs
inc
or
lods
inc
adc
push
xor
inc
fmulp
jmp
in
cwtl
fmull
sub
add
stos
jno
and
push
mov
xchg
mov
push
daa
xlat
inc
adcb
push
aad
mov
jb
sbb
xchg
xor
mov
jne
outsl
push
out
fwait
xor
clc
sub
lods
popa
test
jb
inc
add
xor
cltd
lea
cli
repz
das
inc
adc
ljmp
mov
je
mov
gs
sbb
xchg
push
xchg
jl
push
icebp
push
jns
ljmp
cmp
mov
repz
xchg
out
sbb
push
push
xor
mov
mov
push
pusha
out
adc
lock
cmpsl
add
daa
mov
leave
or
or
sarl
sbb
adc
scas
mov
stos
and
dec
imull
arpl
jp
out
out
pushf
imul
mov
int
adc
xchg
fisttpll
loopne
push
and
inc
test
subl
sbb
push
hlt
push
test
pop
jne
sub
mov
movl
fmuls
int3
push
outsl
push
add
adc
shrb
rcll
das
inc
imul
dec
repz
sahf
data16
dec
sub
sar
in
rcl
lret
push
xchg
push
scas
sub
outsl
fmulp
dec
jg
rcrb
cmp
addb
and
dec
sbb
shll
dec
fsubr
sub
add
push
pushf
xchg
cltd
jo
sub
cmp
inc
add
in
cld
push
fstps
mov
mov
mov
lret
ss
call
enter
lahf
aam
mov
imul
testl
xchg
lds
xlat
or
or
das
or
fcomp
aam
rorl
jns
xor
and
inc
push
fwait
push
fistps
or
mov
sub
dec
shlb
fld
rcrb
scas
or
repz
arpl
lea
push
add
xchg
rcr
pop
fadds
push
and
jp
or
push
jbe
out
sahf
mov
iret
std
movsl
stc
mov
jne
adc
mov
iret
mov
out
aad
aas
or
pop
bound
sub
dec
filds
test
sub
fistl
pop
mov
or
inc
int
adc
push
je
imul
add
dec
test
xlat
or
dec
rolb
leave
nopl
lcall
jge
adc
mov
daa
xchg
pop
call
xchg
sub
lea
andb
push
dec
ret
xlat
scas
out
adc
fwait
xchg
sbb
or
repnz
and
subl
iret
aad
adc
sbb
lahf
adc
cmpsb
push
mov
mov
dec
push
sub
popf
or
je
lahf
shl
mov
jg
shlb
bound
inc
xor
fists
xchg
sti
stos
xlat
aaa
push
sbb
rcr
das
loope
nop
test
push
dec
mov
mov
and
xchg
jecxz
push
loop
mov
pop
sbb
dec
xor
push
outsl
pop
jp
ficoms
scas
fmul
out
pop
mov
mov
or
jbe
pop
in
out
and
sbb
or
jns
sbb
add
xchg
ds
mov
xchg
mov
sbb
mov
mov
push
scas
aaa
lea
mov
repnz
push
push
popa
pop
ficoms
xchg
jmp
or
pop
leave
outsb
dec
mov
je
xor
mov
pop
call
pop
in
bound
xor
ja
loopne
add
enter
fucom
leave
pop
add
push
pop
mov
cld
add
es
cld
dec
fs
scas
pop
clc
cmp
subl
or
daa
sub
icebp
lret
xchg
and
mov
js
sti
push
push
mov
icebp
mov
mov
jp
xchg
cltd
mov
push
sub
lahf
sub
mov
pop
call
adc
sti
mov
test
dec
pop
dec
sbb
dec
rolb
xor
into
and
bound
inc
push
icebp
jge
das
out
ds
fidivs
ljmp
push
hlt
lea
pop
xor
mov
ds
loopne
mov
mov
lds
pop
push
into
pop
mov
dec
lcall
push
or
mov
xchg
xlat
int
sbb
sbb
inc
add
jl
cli
sahf
mov
inc
fcoms
int3
jb
jmp
add
push
cwtl
iret
dec
clc
rcrl
xchg
clc
lahf
cmp
and
das
cmp
xchg
mov
inc
push
and
fildl
loop
or
adc
inc
push
sarl
sbb
and
mov
mov
xchg
xchg
ss
fcoms
mov
in
add
dec
loop
jmp
sbb
repnz
ret
dec
out
sbb
sahf
sub
scas
mov
ret
xchg
stos
loopne
xor
outsl
cmp
aaa
cmp
push
sti
fsub
cmp
enter
push
xlat
xchg
mov
mov
xchg
popa
mov
sub
mov
out
clc
sbb
and
push
dec
jbe
mov
xlat
jge
aaa
jle
out
adc
mov
jbe
mov
stc
out
mov
sub
sub
cmpsl
icebp
lds
into
les
faddl
adc
mov
xchg
jl
test
jns
xchg
fs
sub
or
or
jmp
xor
test
shll
ret
int3
int3
jp
in
fadds
faddp
stos
popf
dec
aaa
shll
mov
cwtl
shll
std
push
sarb
loop
cs
or
insl
test
push
ret
dec
rcrl
test
jmp
push
ja
mov
daa
nop
int3
push
sahf
movsb
push
iret
rcr
es
xor
loop
mov
aas
dec
dec
xchg
inc
pop
mov
cs
adc
les
adc
jo
daa
add
xchg
and
adc
mov
add
xchg
pop
sub
xlat
mov
jecxz
sub
mov
mov
inc
xchg
and
jo
jge
xchg
repnz
sbb
lahf
mov
out
mov
xchg
and
das
push
cmp
jb
test
repz
dec
stos
add
sub
mov
movsb
call
dec
dec
adc
cmp
xor
mov
hlt
xchg
push
sub
mov
jmp
xlat
add
dec
jl
imulb
mov
xchg
aad
testl
mov
es
ret
decl
mov
fdivrl
data16
lea
cmpsl
mov
addl
add
sub
test
sub
mov
pop
xchg
sbbb
movsb
dec
mov
sub
cmpsl
mov
aas
fldt
or
dec
pop
jge
jmp
mov
dec
mov
hlt
adc
pusha
lock
xor
int
subl
stos
lods
fnsave
and
jne
cltd
inc
sbb
rol
pop
xor
in
xor
fstpl
sbb
out
addb
sub
jbe
or
xlat
rolb
fcoms
stos
add
xchg
xchg
mov
cmpsl
enter
sbb
rcr
bnd
inc
loopne
aad
dec
mov
pop
loopne
enter
loop
xchg
sub
pop
mov
pop
in
dec
xor
nop
stc
dec
lcall
andl
jle
mov
cmp
inc
popl
push
inc
je
push
or
out
mov
jo
xchg
pop
nop
mov
and
mov
xchg
daa
adc
cs
out
js
mov
fsubl
mov
and
mov
hlt
mulb
out
sub
jge
push
pop
jge
xchg
jns
xor
xor
sub
pop
mov
adc
div
cmpsl
ret
fs
cwtl
xor
scas
sti
imul
stc
movsl
pop
cmp
dec
pop
adc
fsubrs
pop
jae
pop
outsb
push
lret
sahf
or
mov
sbb
out
stos
jp
add
push
mov
shl
jnp
xchg
adc
sahf
ljmp
jmp
adc
ror
fstl
pop
gs
arpl
mov
fisubs
mov
xor
sbb
mov
or
cmpsl
out
mov
add
sub
je
cwtl
pop
popw
divl
iret
pop
pop
mov
int3
add
push
lahf
pop
mov
xchg
out
daa
out
xchg
call
mov
clc
pushf
xchg
xor
scas
add
pop
inc
cmp
jb
rolb
sub
xor
mov
pop
pop
or
mov
mov
add
jae
sub
in
loop
sbb
nop
xor
cmp
cmc
cmpsl
testb
ret
icebp
mov
xor
addb
adc
xlat
hlt
in
pushf
jmp
sarb
adc
mov
or
xchg
inc
xchg
sbb
mov
mov
repz
out
lret
arpl
xchg
jle
mov
test
popa
clc
out
inc
leave
incl
loopne
pop
addr16
xor
cltd
cltd
mov
cmp
stos
push
push
data16
repz
call
xor
sub
icebp
aad
sahf
jmp
leave
pop
pop
mov
pop
dec
idiv
cli
cli
inc
push
xor
sub
ror
int
jmp
dec
push
dec
xor
cli
mov
lcall
push
jp
jns
push
and
aaa
ds
das
fidivs
xor
xchg
into
cmp
cs
xchg
jb
cwtl
adc
int3
add
xlat
add
xchg
jmp
cmp
add
xlat
fstpt
mov
ficompl
push
out
fists
or
mov
mov
sub
lcall
jp
in
leave
cmp
divl
dec
pop
or
pop
les
mov
dec
mov
fsubl
pop
dec
stos
push
fimuls
lds
in
xchg
dec
xchg
push
mov
or
mov
hlt
inc
xlat
and
loope
sahf
fmulp
jb
lcall
cmp
jmp
test
xor
ret
inc
jnp
sbb
call
shll
shlb
pop
jge
and
aam
ds
mov
mov
xchg
test
adc
jnp
sub
pop
mov
xor
popa
cltd
xor
test
fldl
int
mov
negl
in
test
mov
dec
and
mov
dec
mov
or
movsl
sbb
cmp
add
cli
icebp
iret
adc
rolb
movsl
pop
sub
add
mov
cs
in
and
pushf
aaa
mov
cmpsl
in
push
dec
cmp
pop
adc
mov
repnz
inc
lock
ljmp
or
in
inc
loopne
dec
std
xchg
dec
adc
push
mov
fdivrs
xor
loope
jp
xchg
inc
fsubrl
cmp
sbb
ja
notl
xlat
in
and
jmp
dec
and
in
lods
mov
icebp
and
and
push
mov
in
fwait
mov
push
mov
movb
leave
cmp
sub
jno
adc
ds
or
lods
test
mov
sahf
arpl
out
mov
xchg
aas
xor
js
mov
add
es
or
mov
ljmp
dec
add
inc
inc
out
mov
mov
add
sbb
cld
dec
clc
sub
pop
xchg
cli
cmp
mov
sar
inc
push
insl
dec
fidivl
aas
mov
dec
sub
je
mov
test
jne
bswap
int
test
push
test
shll
cmp
pop
out
pop
scas
xor
xchg
leave
je
cmp
testb
enter
movsl
xchg
and
clc
pop
cwtl
mov
ret
inc
aad
push
and
loop
stos
mov
mov
xchg
enter
jle
in
xor
mov
ss
fistpll
out
push
stos
cmp
push
inc
inc
mov
jmp
ficompl
dec
pop
lahf
cwtl
pop
mov
and
mov
mov
cmpsb
sub
mov
hlt
mov
adc
sti
mov
mov
sbb
or
xchg
pop
pop
pop
inc
insl
push
pop
les
fbld
pop
std
xchg
cmpsl
imul
sti
fwait
inc
mov
push
add
adc
xchg
icebp
mov
das
mov
ljmp
test
adc
lods
mov
stc
movsl
ja
jae
mov
scas
cmp
shll
jns
push
jo
cli
jne
add
inc
lret
or
stc
cmc
jmp
popf
dec
cmp
push
dec
out
dec
and
imull
inc
in
dec
add
insl
jae
pop
popf
sbb
sub
pop
jg
sub
and
out
inc
lret
hlt
negb
decl
out
xor
ljmp
add
lret
call
rorb
mov
lcall
pop
stos
push
incl
add
sbb
out
and
xchg
or
sbb
fmulp
or
aaa
enter
or
cmp
in
std
std
and
push
insb
add
and
pop
cmpsl
sub
int3
and
imulb
sbb
movq
cli
lcall
rorb
pcmpeqb
rcl
jp
dec
mov
cmp
xlat
inc
push
loop
lret
dec
movsl
xor
xchg
sbbb
out
pop
jnp
jl
in
ljmp
jb
dec
repnz
in
fnstsw
or
movsb
mov
adc
inc
jnp
xor
add
icebp
inc
inc
pop
sbb
jmp
pop
ss
xor
fbstp
adc
dec
adc
data16
and
sahf
loopne
int3
jb
lret
nop
fildll
bound
or
fwait
aas
inc
lret
call
imul
jp
add
out
bound
mov
mov
add
push
sahf
sub
mov
sbb
das
mov
mov
cmc
push
sti
fimuls
push
xor
fsts
mov
ror
repz
jecxz
jg
xor
icebp
aad
and
iret
jmp
les
and
inc
xor
lcall
push
pop
out
mov
xor
or
push
jne
cmpsl
stos
out
mov
mov
sub
pop
push
or
movsl
test
or
sbb
sbb
xlat
or
dec
lret
lcall
push
jae
nop
es
cmp
bound
sub
mov
or
jo
push
bound
lods
sti
xchg
ljmp
push
pop
out
mov
enter
inc
out
dec
decb
lcall
inc
iret
push
sbb
and
inc
push
mov
in
mov
xchg
mov
xchg
out
dec
mov
adc
into
lret
imulb
jbe
pusha
push
sbbb
outsb
cmpsl
lret
lods
sub
loope
sub
sub
pop
test
mov
jg
gs
xor
mov
fwait
inc
xor
adc
cli
cmp
jne
mov
push
loop
test
mov
shlb
pop
or
mov
test
and
lret
pusha
or
pop
shll
mov
rep
inc
push
push
dec
aaa
adc
jmp
xor
sbb
invd
es
mov
push
cmp
testl
and
inc
inc
mov
mov
lcall
scas
loop
mov
adc
fstpt
jb
xchg
mov
mov
push
jo
bound
lcall
adcb
push
xchg
lret
xchg
enter
xchg
mov
jmp
out
popf
cwtl
iret
fistps
imul
mov
xchg
stos
dec
arpl
sbb
pop
cmp
jne
loopne
movsl
lret
test
pop
sbb
stos
movsb
sbb
xchg
fsubrs
mov
repz
jmp
lcall
xchg
mov
stc
notl
sbb
jnp
and
int3
pop
outsl
xor
jp
ret
jge
or
and
mov
jg
rclb
or
fsts
lret
pushf
bound
sti
in
orl
push
sub
lahf
cmc
in
setno
aam
mov
push
mov
outsb
xchg
jge
jle
push
push
mov
adc
mov
and
xor
pop
mov
out
out
or
clc
push
ljmp
out
fdivrp
or
mov
add
mov
into
mov
dec
mov
and
pop
test
iret
sbb
test
jmp
mov
mov
xchg
mov
pusha
ror
into
loop
pop
cmpsl
pop
xor
test
xor
mov
out
xchg
andl
cmc
dec
mov
cmp
sbb
lds
push
fnsave
jmp
mov
sbb
ds
call
fadds
push
add
scas
cmpsl
inc
out
popf
sbbl
mov
push
pop
sbb
divb
ja
cmc
into
push
lret
add
imul
add
outsl
test
fstl
in
xchg
mov
mov
adc
pop
mov
dec
cmpsl
test
lock
lds
repz
das
cltd
fbstp
push
lods
popf
mov
adc
hlt
push
or
xchg
sbb
aad
mov
and
out
clc
scas
shl
aam
clc
or
insl
push
dec
and
and
fwait
jnp
jnp
bound
std
addr16
sub
cld
push
xchg
sub
sbb
daa
mov
hlt
jl
pop
int
fs
jno
inc
xlat
mov
push
nop
out
scas
call
jo
dec
loope
les
mov
dec
push
adc
adc
leave
and
cmp
xchg
pop
sub
mov
fsubp
outsb
push
push
push
jmp
jg
sub
in
lcall
mov
ljmp
rolb
je
out
lock
test
jmp
jmp
pop
test
rorb
xor
cmp
loope
and
insb
add
sub
cmp
inc
xchg
daa
sub
mov
sub
sub
loope
pop
sub
or
mov
add
mov
inc
testl
or
arpl
push
insl
hlt
and
imul
xchg
add
mov
dec
sub
in
inc
xor
inc
dec
pop
push
pop
dec
mov
mov
pop
pop
sub
cmpsb
adc
mov
insl
sahf
xor
jp
push
hlt
ret
gs
mov
adc
inc
jne
in
pop
cld
cld
cmp
test
jo
xchg
cmp
btr
pop
popa
loopne
xor
mov
cmc
test
mov
loopne
jg
fidivs
ja
mov
test
mov
out
ret
jmp
or
lret
icebp
and
jg
jmp
pop
dec
movsb
jb
arpl
addr16
imul
outsl
frstor
cmpsl
shlb
popa
scas
pop
pop
dec
mov
rcl
jecxz
std
cmpl
loop
jne
push
pusha
jae
aam
test
aad
icebp
cmp
psrld
fidivl
mov
or
adc
popa
xchg
popf
jb
or
jne
popf
movsl
cmp
xor
fwait
push
test
xor
fimuls
push
leave
push
test
mov
mov
mov
pop
xor
pop
daa
in
in
push
out
ret
pop
stos
or
in
scas
repnz
xor
stc
mov
dec
shrl
fidivrs
lods
push
xchg
jo
push
jge
or
cltd
dec
mov
iret
jge
inc
mov
lcall
addb
das
mov
popa
inc
mov
dec
dec
lds
bound
inc
mov
bound
ret
lret
enter
or
lret
outsb
addr16
adc
ljmp
or
shll
or
pop
cmp
pop
cmp
jb
jno
imul
pop
jnp,pt
jnp
sbb
addl
fwait
xor
out
cmp
dec
rorl
sbb
xchg
ret
cwtl
rcrb
sbb
mov
aaa
lret
lds
hlt
mov
dec
adc
std
jp
aaa
mov
mov
xlat
in
dec
jmp
xorl
mov
mov
push
xchg
sub
rcl
inc
outsb
outsl
cvtps2pi
push
sbb
nop
xor
mov
aam
and
std
mov
cli
lds
fcmovu
scas
dec
hlt
dec
mov
or
or
jg
jns
and
adc
jp
subl
mov
sub
cmp
sub
add
stos
ud2
xchg
mov
and
mov
xor
mov
jbe
sbb
pop
pushf
xor
aaa
or
sbb
mov
jne
pusha
sbb
ds
inc
adc
pop
push
cld
mov
fmul
mov
daa
cmp
fnstcw
sbb
out
cs
out
xor
cltd
and
ror
filds
es
mov
daa
aas
aas
mov
orb
jnp
test
dec
lret
insl
and
iret
mov
mov
jo
mov
xor
push
push
push
scas
xchg
jge
mov
js
dec
repnz
and
sub
xor
push
mov
pop
pop
push
call
inc
add
sbb
mov
imul
adc
pop
and
xchg
aad
dec
orl
test
in
jecxz
push
or
pop
test
in
add
dec
jp
inc
fidivs
sub
lods
xor
push
or
add
fcoml
push
loopne
movsl
out
clc
lods
jae
insl
dec
xor
mov
cli
jns
mov
and
into
mov
jnp
mov
outsb
pop
scas
ret
pinsrw
sub
js
add
add
daa
mov
andl
mov
pop
les
not
jmp
sub
fs
popa
inc
loope
push
dec
or
pop
mov
xor
jbe
push
repnz
jae
xchg
jg
sahf
push
fildll
jbe
adc
jnp
pop
pushf
popf
inc
jmp
add
sbb
mov
or
outsb
sub
je
enter
cmp
push
push
dec
mov
lret
inc
or
cmc
out
xchg
xchg
mov
fadds
ss
sbb
xlat
inc
jb
mov
xor
dec
ljmp
or
pop
cmp
sbb
je
test
test
pusha
mov
cmp
cmp
jns
roll
das
mov
ret
pop
idivb
imul
ja
ret
dec
sbb
sub
loope
das
jns
lcall
std
inc
call
push
xor
dec
movsb
and
sbb
push
mov
cmp
scas
jmp
mov
xchg
test
adc
inc
rcrb
add
cli
adc
mulb
push
or
scas
push
aam
mul
xchg
sahf
jmp
push
iret
xor
dec
cmpsb
test
out
inc
or
mov
add
loopne
cld
aas
add
xor
jmp
sbb
aas
jo
sbb
jns
imull
scas
cli
mov
leave
shrd
in
sbb
js
dec
movsb
and
out
mov
and
mov
pop
mov
in
loopne
or
pop
outsl
bound
scas
into
pop
add
jb
jns
popf
and
dec
xor
nop
cmp
jecxz
and
mov
les
data16
popa
dec
aas
jecxz
mov
xor
xlat
lret
and
sar
in
jmp
cwtl
adc
mov
mov
test
out
fs
add
push
pop
xchg
dec
cmp
jp
pop
mov
pop
or
and
mov
sahf
add
xchg
jb
push
pop
rorl
lock
push
test
shrb
lods
int
adc
fwait
and
pop
mov
les
push
add
les
dec
nop
xchg
imul
imul
imul
xchg
ret
sbb
cmp
bound
dec
dec
mov
inc
cs
cmp
cmp
or
cmc
hlt
jp
aas
add
lahf
ds
into
cmp
jg
xor
lret
enter
mov
pavgw
sub
fisttpll
insb
inc
cmp
inc
ffree
dec
push
push
flds
subl
xchg
fstpl
dec
or
pop
lods
dec
pop
push
xchg
std
ja
push
pop
int3
sub
jne
inc
sbb
mov
xchg
xor
mov
adc
inc
and
xor
hlt
cmpsb
jge
cld
xchg
xor
mov
sbb
es
ss
add
sub
jmp
adc
cmp
gs
movl
push
rorl
inc
lahf
pop
lret
mov
xlat
dec
pop
inc
jecxz
sarb
xor
in
pop
adc
test
mov
cmc
inc
das
in
enter
mov
mov
jg
lock
pop
imul
mov
lods
inc
lods
xor
fldl
daa
fidivs
rorb
lds
push
add
sbb
push
mov
jo
daa
and
sbb
mov
ss
dec
jge
inc
out
js
cltd
lcall
jne
imul
lock
jo
push
inc
fidivl
rcll
rcll
inc
pop
out
sub
sbb
addr16
pusha
data16
xor
inc
fucom
inc
inc
add
xchg
movsb
xor
sarl
test
addps
push
mov
or
inc
cmpsl
dec
add
and
dec
jns
cli
sub
adc
or
push
sbb
cmpsl
add
mov
jae
mov
pop
cmp
mov
add
push
in
pop
sbb
xchg
dec
and
sbb
xor
lahf
cmpsb
xchg
jle
fbld
sbb
inc
cmc
das
and
andl
pop
pushf
addr16
and
fwait
mov
out
xor
stc
pop
pop
repnz
jae
mov
dec
xchg
loope
and
int
pop
scas
add
adc
in
in
rcpps
and
push
mov
or
cmp
and
cld
hlt
cmc
xchg
notl
and
jno
mov
pop
pop
mov
mov
std
scas
cmp
addr16
sub
js
or
shrb
or
cmpsb
stc
out
mov
nop
cmc
adc
cmpsb
mov
orb
xchg
sbb
arpl
mov
imul
cmp
stos
xchg
imul
xor
hlt
fstpl
les
andl
cmp
mov
bound
pop
xchg
pop
push
lods
lahf
fidivs
rcrl
push
inc
dec
ja
inc
pop
hlt
ljmp
in
scas
and
inc
xchg
lcall
stos
pop
dec
lds
sbb
ja
imul
std
add
stc
popf
add
or
xchg
mov
das
and
sub
mov
cmp
cld
sub
bound
mov
inc
cltd
dec
pop
and
xchg
pop
int3
adc
mov
loop
mov
pop
cmp
ret
sub
cmp
into
fstps
in
cltd
pop
dec
out
in
roll
rcll
or
jg
std
push
jnp
or
call
or
xor
push
fs
dec
test
inc
in
cmc
push
icebp
mov
cmpsb
dec
cmp
and
and
lds
clc
sub
xchg
push
dec
andl
mov
leave
inc
xor
out
mov
sti
pop
xchg
fidivrl
das
jl
and
addb
repnz
sbb
loope
mov
push
mov
adc
imul
das
jp
xor
and
mov
into
adc
cmp
mov
icebp
sub
cltd
in
pop
and
popa
hlt
dec
bswap
sub
xchg
das
sub
xor
adc
data16
sub
add
cmp
dec
icebp
pop
or
jle
lret
jmp
adc
imul
nop
addr16
ds
jmp
cmp
sbb
sub
inc
push
out
inc
xchg
and
stc
sub
rol
leave
pop
je
push
leave
jae
mov
mov
aas
mov
js
cli
dec
into
bt
pop
aas
inc
pushf
out
out
jle
mov
hlt
pusha
inc
imul
aam
int
pusha
add
inc
and
jge
loopne
xchg
popf
jle
stos
pop
cmp
movsl
cld
int
sti
popa
push
xchg
mov
mov
mov
dec
cli
mov
js
xchg
adc
aaa
loopne
mov
int
in
xor
lea
test
pushf
shll
sbb
jne
cmpsl
pop
cltd
aad
es
jge
ja
jns
stc
xchg
divl
jmp
pop
out
xor
mov
xor
repnz
cs
push
jge
adc
dec
shrb
fildl
xchg
dec
xor
stc
cld
xor
xchg
adc
sub
into
jp
mov
cmp
sub
mov
loop
xor
and
inc
rorl
loope
mov
out
xor
mov
cmp
dec
cmp
jnp
lahf
test
add
mov
nop
test
icebp
rclb
mov
and
cwtl
xchg
sahf
sub
jp
mov
push
dec
pop
lock
cmc
sbb
sbb
les
out
ret
or
mov
xor
shlb
push
aas
xor
out
sub
mov
cmpsl
push
lahf
dec
mov
jbe
mov
cmp
repnz
rcrl
lcall
add
rcrb
push
jg
xchg
shll
cmp
fs
fwait
jno
mov
shll
inc
cld
les
pop
mov
lret
xchg
mov
lock
mov
imul
lds
sbb
pop
sub
cld
jl
mov
out
push
cwtl
xchg
mov
xchg
adc
dec
sbb
test
iret
clc
daa
mov
dec
bound
sbb
or
mov
icebp
fimull
imul
jae
aas
ss
and
dec
adc
mov
xchg
sti
mov
scas
ss
enter
jo
push
cmp
insl
jb
and
out
cld
jns
movsb
xor
lods
sub
fistl
xor
add
and
outsb
fistpll
dec
xchg
lret
movntps
arpl
int3
stos
ds
aaa
outsb
ret
mov
pop
pushf
mov
and
mov
addl
mov
jo
and
jne
or
lret
mov
or
sub
dec
pushfw
repz
sub
cmp
loopne
xchg
je
jae
enter
ds
pop
adc
insb
mov
xor
mov
add
lret
push
mov
push
add
push
mov
ror
sub
push
jge
mov
int
jb
cld
sahf
mov
sbb
xor
sub
out
jmp
decl
add
pop
and
push
push
imul
xchg
data16
mov
xchg
sbb
jp
inc
sub
sub
cld
lcall
adcl
mov
andl
fnstenv
adc
or
cs
rclb
sub
repz
mov
sub
out
pusha
pop
xchg
out
ds
and
jne
cmp
stos
test
jae
add
xor
scas
das
and
pop
jae
inc
mov
call
test
movsl
pusha
xchg
adc
lods
cwtl
daa
icebp
int
in
out
or
call
les
mov
imul
xchg
mov
aas
or
push
mov
int3
pusha
pop
loop
in
rcrl
mov
fsubrs
out
mov
movsl
cltd
cmp
mov
pop
push
call
pop
pushf
insb
sub
mov
inc
xchg
mov
jp
pop
add
std
jmp
push
sbb
add
mov
std
pop
xchg
gs
testb
jb
das
pop
inc
mov
mov
fwait
getsec
je
lret
xor
and
push
mov
adc
sbb
xchg
sub
mov
adcb
add
fcoml
testb
pop
and
push
push
xchg
inc
pop
cwtl
aas
sub
popa
mov
sub
push
lea
lods
cvtps2pi
stos
adc
pusha
xchg
sbb
or
lcall
push
test
pop
or
xor
sub
lods
gs
pop
pop
cmpsb
cli
sahf
imul
in
stos
push
data16
adc
dec
pop
adc
ja
ret
or
mov
mov
mov
push
inc
or
pop
stos
mov
push
mov
cmpl
cmp
dec
add
sbb
fimuls
out
pop
lods
mov
pop
mov
nop
sahf
mov
sub
dec
and
cltd
mov
mov
inc
in
enter
xchg
arpl
push
mov
daa
xchg
mov
mov
dec
jne
mov
mov
xor
add
leave
fimull
packuswb
sub
adc
in
fsubrs
mov
mov
pminub
ljmp
pop
mov
adcl
in
mov
inc
sbb
inc
js
lret
mov
mov
fistpll
dec
adc
or
cld
sub
inc
nop
and
stos
push
mov
lahf
imul
aas
sbb
push
add
aas
fsts
jecxz
sub
shlb
mov
mov
inc
jmp
pushw
ret
gs
scas
test
aaa
mov
push
dec
outsl
jbe
jno
push
mov
rcll
int
sub
jo
jno
sbb
iret
inc
fistps
mov
cmpsl
jns
iret
xor
sub
jmp
sbb
int3
adc
and
ljmp
shll
inc
cmc
mov
cmp
jb
popf
push
in
sub
bound
int3
sbb
cmp
and
or
adc
movsl
sbb
std
mov
mov
adc
pushf
in
mov
add
sbb
push
mov
push
xchg
mov
stc
rcrl
mov
xor
sbb
roll
and
and
fistpl
bound
pop
cmp
mov
pop
mov
test
jecxz
dec
daa
pop
clc
inc
lock
inc
mov
cld
or
mov
and
in
hlt
pop
enter
hlt
call
rorb
lock
cmpsl
jne
push
scas
orb
adc
psubq
nop
clc
adc
add
add
pop
jne
pop
inc
dec
call
jae
rorb
sbb
out
sbb
xchg
jnp
fucomip
adc
inc
or
stos
daa
xchg
xchg
flds
push
stos
push
in
popa
mov
add
mov
aaa
push
cwtl
xor
adc
nop
test
ljmp
dec
push
mov
pop
lret
pop
pop
ret
jecxz
cs
pop
sub
in
xor
sub
push
mov
bound
and
arpl
ds
lretw
add
pop
bound
in
and
add
push
inc
popa
inc
inc
cmp
add
mov
ret
insb
cmp
and
push
jbe
inc
sbb
lock
fwait
jo
xchg
mov
and
push
in
push
lahf
mov
pusha
inc
popf
adc
jb
sbb
push
cmpsl
fs
fwait
xlat
addr16
mov
jb
fidivrl
mov
mul
mov
test
dec
fiadds
xlat
jmp
lods
pop
sarl
pop
gs
sbb
aaa
fidivrs
inc
push
mov
cmp
call
dec
xor
mov
add
xor
jmp
shl
xchg
jne
dec
or
int3
pop
in
cwtl
pop
test
inc
aad
inc
jns
sub
imulb
and
out
jbe
or
addr16
inc
mov
adc
push
xor
dec
jl
rorb
and
scas
mov
mov
cmp
div
xor
out
adc
mov
lea
mov
jg
fdivl
push
pop
mov
iret
push
jns
dec
nop
mov
adc
out
popa
mov
in
ljmp
jl
leave
mov
mov
xchg
addr16
push
ror
lea
test
mov
lret
cmp
out
dec
xor
bound
inc
mov
cmp
scas
fsubl
mov
push
loop
xchg
mov
in
in
add
sub
cmpsl
push
inc
mov
shrb
loopne
push
lock
mov
lret
ljmp
cltd
js
dec
adc
xlat
pop
cmp
fisttpll
cltd
mov
xor
repz
repnz
adc
in
push
or
lcall
push
mov
call
or
test
pop
outsl
loope
test
or
popl
scas
mov
sahf
pop
inc
cmp
fdiv
sub
cs
je
popf
fiadds
adc
jecxz
lahf
mov
sub
or
mov
cli
pop
test
pop
mov
inc
xchg
adc
shrl
test
loop
lds
loopne
rorl
sbb
sbb
sub
push
out
pop
fistpl
cltd
mov
add
inc
out
inc
sbb
jnp
int
push
cmp
daa
dec
xchg
jnp
notb
lret
cmp
pop
add
gs
xchg
add
adc
mov
mov
push
int3
push
mov
jle
push
jge
dec
into
mov
test
mov
cmc
adc
test
sbb
cmp
push
idiv
pop
ljmp
and
xor
addr16
sub
adc
cmc
cmc
je
mov
orl
mov
js
push
jg
lods
adcb
adc
mov
inc
sbb
out
mov
lea
push
add
sub
mov
jo
arpl
aam
cmp
int3
cmc
or
test
jnp
int3
rorb
mov
subl
andb
in
sbb
pop
pop
sbb
leave
jl
lods
popa
test
data16
mov
test
movsb
or
fidivl
inc
orl
xchg
or
pop
pushf
aaa
xor
sub
fsts
or
ret
xlat
jns
pop
popa
sbb
mov
cmp
pop
jl
dec
adc
and
ficoms
ja
lret
or
mov
cmp
mov
cmp
aaa
push
inc
orb
repnz
push
sub
pop
add
decl
jo
adc
add
iret
lsl
test
popf
rorl
hlt
pop
loop
xor
icebp
or
stos
scas
xor
fstpl
outsb
mov
cmp
cli
gs
movsb
push
psubsb
and
lcall
leave
or
fisubs
ret
jb
inc
bnd
mov
sub
int
aas
sub
mov
pushf
xchg
out
ljmp
outsl
dec
cld
xor
push
sub
push
push
ficompl
or
outsb
cltd
adc
mov
sub
mov
fldt
pop
dec
jle
fisubl
mov
mov
repz
add
mov
mull
je
pusha
mov
sub
cmp
rclb
imul
loopne
push
out
jb
stos
pushf
push
mov
cmp
pop
cmc
cmp
inc
not
sbb
lods
data16
ja
nop
or
pushf
jmp
fidivrl
or
cmpsl
mov
bts
sbbb
dec
add
imul
push
cld
int
cs
lcall
ss
lcall
dec
js
int
outsl
cwtl
mov
push
pop
dec
daa
cmpsb
push
mov
xchg
fs
xor
jo
pop
mov
cmp
pop
jg
clc
jle
push
jns
clc
fiaddl
mov
mov
dec
lods
mov
inc
es
and
fsts
ret
fsubrp
cmpsb
inc
shlb
push
jne
dec
mov
in
jp
push
push
adc
push
arpl
fisubrl
test
jne
je
in
into
jl
mov
popf
mov
daa
rorl
pop
xor
push
mov
dec
into
das
imulb
mov
pop
cltd
xchg
enter
fwait
or
movl
sbb
es
movsl
repz
pop
aam
mov
dec
xchg
cmp
mov
arpl
call
add
ss
repz
sbb
out
cmpsb
ja
sub
scas
pop
sbb
adc
mov
in
lcall
and
ja
pushf
xchg
leave
jae
mov
add
iret
xchg
ret
jno
push
xchg
clc
outsb
sub
mov
mov
sbb
push
and
rorl
jae
pop
mov
dec
lea
nop
dec
pushf
std
mov
mov
cmp
or
in
cmp
scas
mov
xchg
lcall
mov
les
mov
fistpl
jne
or
mov
ja
xlat
xor
fldl2t
dec
xchg
mov
js
inc
ds
out
out
xchg
pop
xchg
lret
jo
dec
pop
mov
fsubs
ret
enter
sbb
sahf
shrl
xchg
lret
push
jae
xchg
mov
shl
mov
pop
sbb
flds
add
pop
shlb
add
aad
cmp
dec
dec
lcall
mov
aas
sti
adc
inc
mov
repnz
dec
jl
ds
fistl
fidivs
lds
inc
jl
je
xchg
push
pop
or
aas
fcoms
mov
mov
inc
jge
jg
dec
test
lods
cmp
out
adcl
aas
mov
xchg
pop
ljmp
jno
icebp
add
sub
jno
sbb
sti
mov
in
push
mov
sub
iret
push
movsb
push
or
mov
pop
sub
dec
iret
mov
loop
pop
lahf
add
test
pop
fnstenv
and
nop
mov
cmp
jo
faddp
mov
dec
jg
inc
jnp
add
sub
or
mov
and
dec
cld
xchg
cli
xchg
lds
imul
inc
aas
insb
inc
mov
outsl
loope
cli
xchg
sub
aaa
mov
aaa
in
pop
lret
push
pop
fisubs
mov
fmull
cmpsb
into
ret
sbb
test
movsb
mov
or
arpl
pop
rcrl
push
push
jp
adc
and
or
dec
out
fwait
stc
loopne
jg
sub
cmp
cltd
ret
dec
stos
je
mov
jno
add
cld
iret
pop
stc
push
inc
cmp
stc
shrl
cmp
mov
pop
mov
loop
shl
jge
enter
adc
mov
cmp
cmp
fbld
dec
dec
call
sub
jmp
call
outsl
lret
dec
cmovl
sub
jae
mov
inc
or
call
pop
insb
push
aas
cli
fadds
xor
loop
icebp
test
fwait
xchg
fsubr
loope
sbb
and
fwait
inc
lahf
in
add
rorl
and
jle
icebp
jmp
je
addb
mov
mov
pop
repz
test
mov
inc
mov
cmpsl
enter
jge
or
in
and
mov
inc
xchg
ja
bound
xchg
add
mov
fwait
repz
cmc
popf
xchg
je
aas
rcrb
cmpsb
rcrb
jne
add
outsb
dec
dec
test
cmp
adc
xchg
icebp
inc
dec
cmp
push
rcr
das
mov
iret
pop
movsl
pop
xchg
mov
push
mov
xor
lods
cltd
inc
hlt
pop
dec
out
push
cmp
fs
mov
decb
mov
fnstcw
jecxz
sbb
push
pop
popa
or
mov
sti
cmp
add
sub
jl
mov
repnz
mov
sahf
mov
sarl
and
adc
jge
or
cmpb
mov
notl
or
pusha
int3
gs
and
jne
mov
mov
jnp
lods
xorb
je
sbb
sti
pop
jb
cltd
sbb
cld
ds
aas
je
sbb
mov
iret
outsl
or
cmpsb
dec
test
or
adc
popa
jo
push
dec
aam
out
pop
adc
imul
mov
jae
rcrl
popf
repnz
adc
mov
repnz
sbb
cltd
sub
mov
fidivrl
pop
mov
mov
stc
je
out
test
inc
xchg
es
push
and
jmp
movsb
add
cmpsl
and
inc
xchg
stos
out
lock
sti
push
dec
mov
add
pop
das
adc
jne
fstl
int3
das
mov
sbb
aaa
sti
fwait
xchg
sub
sbbl
flds
iret
loopne
inc
or
mov
rcrl
hlt
jecxz
mov
into
pop
or
mov
mov
pop
and
test
xor
add
pop
popf
aaa
fucomp
pop
pop
push
sbb
mov
fs
les
lea
sub
xchg
ljmp
aaa
xchg
fwait
popf
mov
and
test
ja
lret
outsb
out
mov
aas
orl
sbb
outsb
or
shrl
mov
das
sub
gs
fdivrs
add
ds
shlb
cli
je
lret
es
les
sub
test
icebp
repz
xor
cmc
inc
minps
sbb
push
pop
out
cmp
insl
addr16
jle
lods
rcrl
push
imul
movsb
inc
cmp
or
test
mov
mov
lods
enter
and
or
roll
jle
and
out
jns
stos
push
mov
insb
cmp
inc
xchg
fdivrl
jne
lcall
jge
jae
sbb
jb
int3
in
fildll
out
cld
xchg
add
xchg
fbld
dec
add
in
out
xchg
cmp
movsb
dec
in
loope
or
mov
subl
mov
sub
jne
cli
sub
mov
mov
adc
sbb
push
mov
movsb
icebp
mov
imul
pop
es
sbb
push
in
movsb
in
jg
jae
pop
pop
stos
xchg
xor
lods
int3
and
int
icebp
pushf
cmpsl
loope
lds
mov
stc
push
pop
mov
xchg
sarl
outsl
cmp
outsb
in
imul
mov
mov
cli
cmp
ret
cmp
pop
out
mov
push
cli
xor
and
rolb
in
inc
in
mov
mov
int3
jne
or
fadd
hlt
mov
aas
clc
sub
sbb
xchg
inc
movsl
add
ret
jmp
push
xor
fldenv
sbb
pop
std
jb
add
fmull
pop
mov
xor
lcall
rclb
shll
int3
sub
incl
sub
test
mov
cmpsb
out
pop
mov
inc
sbb
sub
jae
ror
push
fisubrl
mov
pop
pop
cmp
dec
xor
out
popa
out
icebp
lahf
pushf
xor
fucomip
aas
mov
rolb
mov
outsb
sub
fbld
sub
pushl
xor
mov
push
ud1
sbb
push
jb
icebp
mov
les
lods
cmpsl
dec
xchg
sbb
fistps
call
and
jecxz
std
imul
inc
add
sahf
lret
mov
cmpsb
clc
mov
cmc
push
mov
xor
mov
add
outsl
xor
in
stc
cwtl
ja
je
nop
jbe
sbb
adc
fsubs
mov
pop
xor
nop
jmp
movb
cmp
or
add
sar
and
jmp
cmp
xor
push
ljmp
push
inc
das
arpl
jmp
mov
pop
mov
xor
int
mov
pop
add
inc
mov
repnz
stos
and
dec
or
xor
inc
dec
xlat
inc
ds
push
sub
fadds
xor
ret
adc
flds
insl
jge
cwtl
aaa
inc
arpl
jecxz
mov
dec
cld
cmp
arpl
lcall
adc
mov
inc
xchg
mov
jp
insb
out
add
dec
mov
mov
mov
and
lcall
sub
mov
icebp
bound
dec
test
in
fwait
mov
sbb
loopne
xchg
rorl
into
adc
jae
cmp
or
cmp
or
out
xchg
mov
adc
jle
jne
jbe
test
mov
and
fs
xchg
sarb
push
jns
inc
mov
sbb
lret
sbbl
dec
inc
pop
mov
loope
mov
idivb
inc
sbb
aad
out
jle
pop
mov
mov
xchg
xor
cmp
shrl
xchg
ja
sbb
mov
nop
xor
ret
stos
sbb
in
mov
shrd
pop
cmp
enter
push
and
pusha
push
sub
xor
add
dec
mov
and
aam
mov
repnz
rorl
rol
rcrl
repnz
call
and
push
rcrl
jp
xchg
xchg
addr16
and
or
stos
shll
jmp
and
lds
std
pop
pop
dec
mov
sahf
mov
leave
enter
mov
mov
xchg
mov
dec
std
adc
mov
or
push
push
pop
mov
int3
add
ljmp
adc
mov
inc
sbb
imul
xchg
inc
xchg
mov
mov
sbb
cmp
and
imul
ret
sahf
sub
nop
adc
pop
leave
push
xor
loope
movsb
jno
dec
pop
std
inc
add
mov
mov
cltd
lds
arpl
lock
mov
ja
cmp
sahf
sbb
pop
xor
mov
hlt
push
mov
mov
iret
out
jmp
je
inc
js
cmp
xchg
cmpsb
movsl
jg
sti
scas
lods
cmpsb
inc
fdivs
mov
out
push
in
ret
fsubs
sub
arpl
shll
sbb
repnz
dec
clc
xor
mov
push
out
dec
mov
push
sbb
nop
shll
fisubs
pusha
mov
jnp
bound
jnp
or
mov
cmp
or
sub
rorb
leave
decl
leave
sbb
xor
dec
jl
call
pop
xchg
xchg
insl
pop
lods
or
mov
shl
xor
inc
repz
xor
stos
aam
xor
nop
leave
pushf
adc
aaa
sarb
aas
sti
mov
add
sbb
cmp
pushf
xor
leave
pop
idivl
mov
push
daa
std
mov
in
adc
or
sub
les
pop
xchg
aam
into
adc
mov
adc
out
in
add
jle
out
jmp
xchg
jp
or
ljmp
aad
iret
dec
add
daa
loopne
aas
inc
notb
sbb
fnop
inc
aaa
mov
push
mov
inc
add
xchg
pop
mov
jmp
repz
sbb
dec
add
xor
mov
mov
andl
jp
lcall
scas
jge
cmp
push
xor
ljmp
adc
jbe
ja
mov
lcall
std
pop
scas
hlt
jp
jns
inc
lods
push
jp
or
push
shlb
mov
cmc
pop
xchg
enter
gs
repnz
cmp
popa
xchg
scas
push
and
clc
fnsave
xchg
xchg
andb
add
scas
das
cmp
jnp
bound
arpl
ljmp
sbb
stos
xor
push
pop
clc
incb
push
pop
test
pop
dec
roll
out
out
inc
xor
test
arpl
subl
loopne
addb
add
mov
mov
or
cld
jmp
pop
les
dec
repz
xchg
pop
jo
int
insb
out
shlb
mov
arpl
add
in
cmpb
out
pop
mov
dec
cmp
xchg
add
loope
arpl
popa
xchg
pop
test
out
jne
add
mov
lods
inc
pushf
pop
sub
dec
mov
gs
pushw
cltd
in
sahf
andnps
aam
cwtl
pop
mov
xor
insb
aad
imul
jecxz
inc
flds
or
out
mov
pushf
out
xchg
fldcw
xor
pop
cld
das
adc
and
jmp
add
jb
in
fisubl
push
lods
aaa
xlat
subl
inc
and
cmpsb
cmpb
stos
popa
iret
push
inc
or
jp
mov
push
dec
jl
popa
shrl
jl
out
sbb
lret
mov
cmp
pop
dec
inc
aad
scas
cs
test
fwait
cmc
dec
xor
leave
mov
adc
lahf
fs
pop
jge
push
mov
out
pop
pop
test
out
mov
mov
dec
pop
orb
in
loopne
push
dec
push
out
gs
dec
addb
outsl
sub
push
test
sub
add
sbb
cmpsb
cs
loop
js
cmc
cmp
xchg
ja
mov
fwait
fwait
mov
out
mov
push
out
mov
test
jae
pop
lea
jl
sbbl
xor
add
ljmp
out
xorl
fcomps
push
xor
fwait
into
sbb
jge
das
out
movsb
add
lds
inc
aam
shlb
push
adc
out
pop
stos
out
mov
and
sti
dec
rolb
adc
aam
gs
jb
in
cmp
fcoml
or
cmp
xor
xchg
cli
out
push
jnp
ds
jmp
inc
jb
mov
and
rolb
out
mov
add
mov
pop
mov
pop
fs
int
fwait
xor
push
mov
rcrb
lret
fcomp
and
pushf
imul
jle
decl
repnz
sahf
and
sbb
pop
stos
lock
ja
xchg
mov
out
push
push
cltd
nop
pause
shrb
dec
leave
pop
sub
adcb
lods
and
arpl
add
pop
cmpsb
out
inc
movsb
stos
push
enter
test
push
push
jbe
data16
add
sbb
jl
outsb
pop
push
mov
sbb
cwtl
pop
loope
dec
mov
dec
push
mov
into
sahf
cmp
sbb
xlat
rorb
dec
jb
fs
jns
cmp
in
sbb
and
sahf
pop
addr16
es
mov
and
or
xor
or
push
pop
bound
int3
push
daa
out
sbb
mov
ret
mov
or
push
aad
push
aad
sub
aas
scas
xchg
cmc
in
je
fildl
add
jp
out
and
mov
mov
mov
fldenv
popf
sub
cmpsw
inc
jns
outsb
popf
jl
and
das
decb
cmp
xchg
out
xor
fcoml
aam
nop
ja
lds
aas
sub
mov
cli
jns
sbb
scas
or
jecxz
lds
mov
int
push
fsin
aas
pop
push
daa
int
jle
mov
mov
ss
sub
xor
inc
fwait
loopne
ret
jmp
or
adc
sbb
imul
or
and
shrl
shlb
or
out
push
movsb
or
cld
je
outsb
add
and
call
and
mov
push
or
adc
adc
jg
adc
inc
int
test
inc
addr16
popa
dec
in
jmp
mov
fisubrl
cmp
fcompl
jnp
add
outsb
clc
outsb
popf
jle
sbb
mov
arpl
stos
push
sbb
mov
dec
out
call
xlat
aas
js
push
ret
xor
out
xor
dec
inc
test
and
push
jbe
mull
inc
inc
or
repnz
adc
rorl
data16
sub
adc
add
mov
mov
outsl
les
enter
fwait
sub
lahf
jmp
imul
xchg
mov
aaa
xorb
data16
test
ja
jo
inc
adc
fcomip
hlt
bound
and
cmpsb
inc
imul
push
ss
movsl
int3
test
cwtl
lahf
bndcl
inc
or
cmp
pop
filds
sbb
es
shr
sbb
and
pop
loop
jne
loope
dec
cmpsb
push
fdivrl
repz
adc
ficomps
into
adc
rorl
cmpsb
mov
dec
ret
das
into
movsb
ret
notb
dec
fs
pop
or
test
mov
cwtl
repz
sbb
mov
fsubrs
sti
test
sub
shlb
in
cwtl
in
pop
cltd
push
dec
sbb
test
ja
push
add
mov
dec
fsubrl
fildl
xchg
adc
hlt
iret
shrl
in
add
test
adc
push
cmpsb
push
jno
xchg
sbbl
jp
pop
sub
dec
ljmp
arpl
mov
popa
or
push
sub
lret
push
jne
orl
imulb
pop
test
adc
divb
jl
jne
clc
xchg
jecxz
in
stos
outsl
xchg
dec
mov
fisttps
mov
cmp
dec
mov
or
scas
jne
movsb
ret
cmpsb
subb
or
sarb
arpl
insl
fisubrs
push
daa
xor
xchg
add
jecxz
adc
sbbl
xlat
hlt
loopne
movsb
adc
loope
dec
fcoml
sti
dec
in
std
ljmp
jo
aad
inc
adc
hlt
and
jae
push
sub
filds
daa
addb
sub
in
js
xor
fsubr
add
jno
sbb
push
sahf
stc
popa
or
insl
xchg
sbb
push
jno
imul
stos
ret
mov
push
sbb
out
mov
inc
test
pushl
lahf
adc
rorl
popl
clc
test
cmp
add
pop
xor
outsb
xlat
push
mov
pop
xor
aad
in
xor
shll
or
xchg
ljmp
sub
idivb
pop
pusha
mov
add
and
leave
iret
xchg
ret
xchg
xor
in
lahf
rcrb
out
aam
mov
loopne
outsb
jle
jnp
lret
sahf
fistpl
add
jl
add
and
adc
xor
popf
sub
jge
lock
fcomi
ss
cmp
push
mov
fwait
jns
icebp
imul
inc
int
jg
ljmp
push
frstor
mov
test
pop
cwtl
add
adc
mov
scas
stc
cmc
and
inc
icebp
dec
xor
or
jb
ret
lds
lods
push
sbb
mov
xchg
jg
sub
leave
adc
dec
xor
sub
push
sbb
in
pusha
jl
or
fimuls
jo
and
rol
popf
sbb
mov
cld
hlt
dec
sarl
scas
and
jnp
mov
movsl
xlat
addr16
pop
aaa
mov
mov
xchg
dec
lods
outsl
fcoml
stc
fldz
cld
cmp
imul
scas
scas
push
std
cmp
stc
jmp
ljmp
pusha
push
jbe
push
xorb
adc
popf
jbe
xchg
sti
cmc
mov
les
dec
push
or
xor
push
push
ljmp
jle
inc
adc
enter
mov
jp
adc
xchg
aam
cmc
push
cmp
cmp
mov
arpl
sti
xchg
imul
mov
add
adc
ret
xor
push
popa
push
adc
fnstcw
and
mov
jnp
mov
mov
out
push
push
adc
cmp
add
sbb
in
mov
arpl
push
cmp
cmc
jmp
mulb
mov
loope
not
int
ret
xor
xor
pop
push
sti
jl
cwtl
call
mov
enter
cmp
lahf
mov
divl
lock
jle
iret
dec
xor
inc
jmp
dec
daa
xchg
out
sbb
je
mov
mov
cmp
jmp
pop
sbb
pop
push
cs
mov
inc
out
jb
xor
leave
mov
cmp
aaa
xchg
push
loop
sbb
out
push
rolb
lahf
mov
mov
fisttpll
popa
xchg
add
hlt
inc
inc
mov
inc
mov
mov
insb
dec
jle
aas
repz
sbb
and
xor
dec
mov
sbb
cs
ds
lahf
dec
lea
int3
ret
cld
cmp
fsts
dec
pop
ror
pop
sub
subb
test
mov
repz
pop
sbb
pop
adc
push
nop
nop
mov
push
ds
outsl
mov
or
cmp
dec
dec
lods
fucomi
mov
sub
add
xchg
pop
xchg
inc
les
mov
jns
std
sub
stos
adc
scas
or
outsb
add
nop
pop
lock
mov
aam
mov
clc
std
loope
mov
notb
cmp
mov
adc
icebp
push
shlb
fdivrs
out
sub
dec
leave
add
cwtl
pop
sub
sarl
mov
and
mov
fwait
pop
and
add
push
xchg
pop
scas
sub
sbb
out
jbe
jge
daa
pop
push
vfnmadd213pd
pop
lahf
out
xor
xor
jno
mov
adc
push
sub
adc
dec
lds
pop
jno
test
lahf
mov
pop
test
or
je
and
test
fcoms
xchg
inc
inc
xlat
fs
lahf
aas
gs
out
cs
pop
pop
jnp
popa
mov
or
sbb
in
daa
add
cmp
push
fiaddl
arpl
prefetcht2
in
mov
das
inc
test
jp
xchg
add
sub
inc
lret
jg
nop
das
sbb
pop
popa
mov
ret
ljmp
inc
pop
daa
cmpsl
xor
lods
loope
test
pop
pop
dec
adc
jb
imul
mov
dec
mov
xor
pop
inc
sbb
and
mov
das
inc
out
push
call
daa
sub
stc
push
sub
jg
dec
and
leave
add
mov
lods
mov
mov
imul
into
mov
dec
fdiv
push
sbb
cmc
sahf
xor
sub
inc
rsqrtps
das
sahf
and
daa
sbb
in
mov
adc
mov
stc
xor
out
movsb
jle
add
repz
jnp
lcall
lea
pusha
jo
arpl
mov
xor
mov
mov
lcall
daa
mov
cld
into
pop
in
mov
xor
sarb
cmp
add
or
or
push
out
rol
test
lret
shrb
xchg
pop
filds
insb
and
loope
outsl
sub
inc
lahf
and
and
adcl
push
pop
push
fs
loop
lret
sti
and
inc
cmpsb
mov
jbe
out
shl
cmp
idiv
cltd
std
divl
gs
push
stos
popa
mov
shlb
cmp
add
out
mov
mov
mov
daa
cmp
test
and
add
rcll
mov
xor
fs
js
push
push
and
call
or
pop
or
cmc
stos
jb
dec
aad
sub
adc
mov
jmp
cmp
inc
or
mov
mov
popf
aas
imul
jmp
pop
jle
and
push
sub
mov
and
jge
rcrb
xchg
mov
es
addb
push
xor
mov
jne
sub
xchg
adc
sbb
mov
and
imulb
sub
cmp
ljmp
fimull
lock
dec
dec
ret
push
js
cmpl
cmp
xor
repnz
sub
dec
mov
in
ja
fisttpl
imul
insb
in
pop
icebp
and
arpl
fsubrl
test
lea
mov
mov
pop
xor
imull
mov
jmp
push
mov
push
stos
sbb
sub
aas
cmpsb
scas
icebp
mov
stos
inc
sbb
test
arpl
repz
cmp
cld
stos
push
cmpl
les
inc
mov
outsl
xchg
out
mov
push
pop
jbe
xchg
xor
out
or
sub
lret
jl
out
mov
add
mov
rcll
jbe
outsl
insb
outsb
mov
incl
add
inc
int3
xchg
popf
sbb
rolb
out
aas
bound
std
dec
icebp
clc
xor
sti
js
mov
fnsave
addr16
out
fwait
shlb
mov
push
in
out
shr
test
mov
inc
fs
xor
sahf
pop
and
cmp
push
pop
gs
fisttps
mov
in
jecxz
lea
imul
insb
pop
movsb
sahf
in
lea
push
sahf
mov
mov
push
aaa
or
stos
xlat
rclb
push
hlt
outsl
or
adc
push
lret
lcall
mov
fwait
insl
sbbb
mov
icebp
sbb
repnz
fcompl
adc
loopne
mov
lock
mov
adc
mov
push
mov
mov
xorl
lods
jbe
out
orb
push
das
sub
jae
insl
outsl
inc
sub
clc
out
sub
fwait
push
icebp
mov
pop
sahf
fucomi
pop
jmp
add
or
xor
fucomip
imul
mov
sub
and
push
lea
out
inc
adc
jns
shr
sbb
adc
loopne
push
pcmpeqw
aam
test
repnz
lods
pop
xchg
cs
xlat
insl
repz
mov
and
jge
cs
fdivrs
out
out
lcall
loope
mov
dec
jo
icebp
scas
roll
push
fidivrl
sbb
adc
int
popf
loopne
addr16
pop
outsb
xchg
rorl
dec
push
pop
xor
fbld
int3
and
xlat
stos
test
rcll
test
fcmovne
or
std
xchg
or
mov
repz
jbe
scas
pop
push
sub
mov
movsb
in
push
into
movsl
mov
sbb
icebp
scas
cltd
adc
lret
bound
xchg
adc
rcr
add
rolb
cld
cmp
aam
inc
push
scas
imul
add
jmp
std
push
push
ret
fimuls
mov
lds
outsb
adc
inc
mov
push
jp
addb
jge
int3
xchg
xchg
bndldx
shll
aas
pop
xchg
sbb
xchg
les
sbbb
cld
xor
mov
lea
jl
and
test
xor
jmp
mov
std
mov
daa
adc
ja
push
add
sti
or
leave
cmpsb
cltd
popf
into
jmp
xchg
jecxz
or
mov
mov
js
push
sub
mov
xor
adc
mov
adc
and
xchg
aad
orb
inc
push
inc
cmc
mov
gs
test
push
sarl
mov
jge
sbb
nop
xor
out
push
sub
std
push
das
mov
and
pop
stos
or
mov
sbb
testb
test
int
mov
sub
insb
xor
loopne
and
fwait
jl
int3
dec
xchg
mov
adc
mov
and
push
test
add
out
sub
cli
repz
les
mov
sbb
xchg
cmp
test
test
into
dec
push
push
add
fsubrl
pop
daa
pop
or
fwait
sub
pushf
movsl
adc
mov
push
wbinvd
sub
and
or
out
dec
adc
mov
ret
shll
mov
sbb
push
test
fstl
cmpsb
cmc
sarl
inc
and
mov
out
cmp
jg
fimull
inc
or
scas
fildll
jnp
sbb
jg
popf
mov
into
push
stos
into
add
adc
jbe
int3
std
xchg
or
psraw
stos
adc
lahf
movb
or
jle
lret
sub
dec
and
pop
call
sbb
aaa
divb
inc
pop
sub
cld
adc
mov
jns
jg
push
sub
push
inc
add
aaa
pop
mov
lods
mov
iret
cmp
je
lcall
and
add
push
pop
bound
adc
loopne
xor
js
movsl
xor
and
add
xor
push
mov
lds
outsb
adc
dec
rorl
movsl
sti
testb
in
cld
inc
push
jns
and
sti
loopne
lahf
jecxz
filds
jae
shl
mov
test
and
lret
in
pushf
inc
jmp
shl
aam
mov
adc
movsb
fwait
mov
or
ss
stos
ja
pop
mov
jl
fs
lea
xor
mov
mov
cs
adc
divl
jo
mov
jmp
xor
rep
push
xchg
or
xor
sub
xchg
pusha
push
mov
adcl
lods
clc
cmp
pusha
dec
sbb
xor
push
mov
std
sahf
mov
rclb
mov
cmp
or
dec
xlat
es
xchg
dec
loope
push
add
push
pop
sub
pop
cli
repnz
lret
leave
adc
out
push
cli
fucomp
sbb
imul
fcmovnu
fsubrp
jno
je
mov
rorl
mov
push
dec
lret
int
out
loop
arpl
dec
dec
mov
into
mov
sbb
sbb
mov
outsl
imul
or
imul
aam
daa
sarb
insb
dec
lock
mov
fwait
addr16
rcrb
dec
pop
mov
ss
fildl
push
mov
enter
sbb
cmp
test
and
or
sbb
xor
pop
xchg
cmp
sub
fisubrs
xchg
inc
mov
mov
push
in
stos
mov
out
in
add
fimuls
cmpsb
ficompl
xor
std
jo
or
js
std
lods
nop
jmp
out
pop
push
pop
in
dec
mov
lods
or
nop
ds
hlt
push
or
test
lock
sbb
jmp
popa
rorl
push
mov
mov
out
xor
or
mov
xorb
ja
cmpsl
inc
or
push
and
xchg
out
mov
adc
or
stc
outsl
cmp
sbb
push
xchg
adc
ds
out
pop
and
mov
push
mov
inc
movsb
jae
jg
pop
and
imul
jbe
imul
gs
enter
scas
les
lock
insb
loope
inc
test
xlat
pop
imul
mov
cmp
sub
jmp
int3
mov
popf
mov
push
rcll
les
rcrb
or
dec
imul
lods
mov
adc
jae
out
sti
pushf
cld
jns
dec
mov
popa
or
sti
shr
insl
or
or
cmpsl
adc
add
fwait
or
cmpsb
sub
not
setnp
pop
pushf
push
lods
fisubrs
xchg
xor
lret
jmp
fimuls
jns
in
ja
popl
repz
lret
inc
pop
push
adc
pop
imul
inc
into
in
mov
fwait
int3
push
sbb
sub
cmpsb
cmp
jne
sahf
andb
ret
call
gs
outsl
xor
daa
dec
sub
mov
insl
jg
xor
in
ds
cs
stos
mov
mov
adc
pusha
mov
aad
hlt
sbbl
xor
aaa
lahf
or
push
jne
cmpsb
push
dec
scas
outsl
pop
sub
loope
out
pop
add
je
push
push
int3
ljmp
addr16
pop
cmc
sub
mov
xchg
push
xor
ret
test
scas
fdivs
ror
and
fists
shrl
insb
stos
pusha
movsb
xor
test
jp
pop
mov
push
daa
cmpsb
sbb
sub
push
aad
sbb
mov
sti
mov
pop
push
push
shrb
arpl
adc
sub
mov
xchg
stos
jl
xchg
dec
daa
loopne
popf
jns
jmp
repz
jae
pop
lds
sbb
xchg
ret
push
icebp
adc
clc
push
imul
jae
add
aad
pop
push
or
mov
das
andl
push
aas
pop
sub
scas
lods
pop
adc
and
cmpsb
orl
and
inc
iret
cmc
movsb
data16
push
int3
jo
pop
std
mov
test
push
lret
mov
add
fprem1
lret
cmp
xor
xchg
xchg
aad
ss
xchg
xor
inc
pop
inc
pop
pop
cltd
xchg
int3
adc
fdiv
jp,pn
mov
test
mov
mov
push
xor
jge
scas
jmp
jbe
push
cltd
cmp
sarl
mov
in
les
mov
and
and
cmp
jo
lahf
cs
add
jns
cli
stos
mov
mov
mov
orl
mov
je
pop
sub
aad
shll
rcrb
mov
out
and
leave
cmp
sbb
or
push
gs
xchg
test
xor
push
or
orb
add
aad
mov
cmp
pusha
aam
in
cmp
imul
es
inc
jns
dec
pop
mov
or
cwtl
arpl
jne
out
add
push
sub
subl
lcall
std
call
aam
dec
test
int
loope
mov
loop
cld
cmpsb
lock
pop
les
ret
clc
push
mov
add
xlat
sbb
mov
aas
ret
mov
jg
dec
push
mov
loop
loop
aas
bound
movl
in
dec
jb
cmp
mov
pushf
rcl
xchg
imul
hlt
sbb
in
cmpsb
dec
cmpsb
out
xor
inc
pushf
jbe
insl
or
daa
arpl
adc
out
xor
outsl
lea
xchg
leave
mov
jb
in
xchg
data16
arpl
fs
add
xlat
add
pop
fwait
fs
xor
fbstp
cli
aam
xchg
int
movsl
insl
jp
inc
inc
push
iret
negl
clc
cmp
xchg
xchg
fiadds
pop
jp
xchg
int3
leave
push
shrl
push
add
movsl
sbb
xor
out
popa
push
push
into
cmp
pusha
push
js
pop
inc
push
xor
lret
mov
ret
sbb
ret
xor
xor
fstpl
rorb
iret
in
jp
inc
xor
cld
adc
fldl
mov
in
nopl
clc
xlat
sub
pop
pop
push
mov
repnz
adc
pop
lds
out
jp
pop
sub
jae
cld
sar
addr16
sub
sbb
lret
mov
loope
cmp
loopne
dec
mov
stos
subb
xchg
fnstsw
mov
mov
xor
popf
adc
xor
and
push
dec
add
shll
dec
push
mov
jb
sbb
push
pop
xor
mov
cmc
push
sti
pop
sahf
fidivs
fwait
popf
cmp
icebp
xor
int
mov
mov
ret
inc
jbe
stos
and
mov
pushf
xchg
cmc
imul
jns
movsl
ds
mov
lods
cmc
add
mov
or
push
out
and
jno
inc
or
pop
pusha
into
rclb
jp
loope
push
mov
sub
adc
cmp
and
mov
in
or
xchg
ss
mov
mov
stos
push
and
lea
das
pop
leave
into
xchg
or
out
lock
sbb
cmp
mov
fwait
cmc
and
mov
jle
mov
mov
xchg
jmp
fwait
pop
in
dec
in
lahf
arpl
addr16
or
and
dec
adc
gs
aaa
and
pop
pusha
pushf
aad
jge
xchg
popa
xorb
loopne
call
mov
loopne
cmpsb
xchg
xor
mov
xchg
aas
pop
imul
or
lea
adc
in
add
mov
lret
pushf
add
imul
xchg
dec
mov
dec
mov
sbb
stc
inc
cmp
cltd
pop
insl
xor
mov
dec
mov
ljmp
hlt
jp
pushf
movsb
shll
rcrl
push
pop
jge
pop
mov
mov
pop
pop
adc
repnz
jle
cwtl
fimuls
xchg
xlat
and
adc
adc
jno
dec
jl
sbb
repz
hlt
and
adcb
lea
insb
push
xchg
add
dec
jb
mov
lret
jle
test
mov
arpl
shll
add
inc
fsubrp
xchg
clc
rcl
imul
mov
pop
iret
mov
pushf
pusha
push
adc
ret
ds
flds
dec
andb
rolb
in
add
out
aam
out
popa
mov
xor
cmc
mov
sbb
add
and
ret
sub
xchg
loopne
ret
testb
fbstp
pop
leave
jne
cmp
dec
xlat
sub
push
ss
addr16
inc
loopne
call
fisttpl
popf
pop
xor
jp
and
jp
outsl
xchg
mov
je
data16
aaa
or
xchg
cmp
fidivrl
mov
int
pop
mov
popa
add
aad
xchg
pop
mov
push
jae
jo
cmp
push
movsb
mov
jnp
aad
dec
xor
lea
pop
fcompl
inc
xor
fildll
das
push
in
out
outsl
mov
xlat
xchg
in
fidivl
inc
pop
in
into
lea
jnp
rcrl
xlat
popa
and
dec
lock
scas
cmpsb
fwait
int
xor
fs
lret
inc
int3
or
cmp
mov
adc
xchg
adc
dec
scas
xchg
ret
mov
enter
stc
data16
mov
cld
push
pop
dec
pop
add
sbb
stc
sahf
xchg
mov
dec
sub
add
imul
jae
cmpsl
mov
bound
jl
pop
frstor
lea
dec
xchg
out
ds
mov
push
loopne
cmpsb
leave
push
jbe
mov
inc
stc
push
inc
rcrb
jl
js
popf
or
pop
test
in
cmc
xorl
xor
popa
xlat
and
lcall
repnz
sbb
mov
cli
das
addr16
popa
cmc
xor
enter
arpl
jns
jmp
popf
inc
pop
xlat
push
sbb
ret
inc
lret
or
cmc
add
into
push
cwtl
push
stc
or
out
movsl
shll
test
mov
add
test
or
pop
xor
pop
sbb
repnz
and
movsb
stos
push
in
xchg
mov
mov
bnd
mov
enter
mov
test
flds
jb
mov
cld
pop
roll
xchg
hlt
insb
sub
fnstsw
cli
mov
xchg
xor
dec
xor
inc
pop
in
sbb
pop
pushf
in
fcom
jbe
scas
gs
mov
mov
lret
add
push
jg
sub
xlat
sbb
movsb
adc
jg
inc
cmp
dec
test
mov
push
adc
pusha
jne
outsb
mov
test
mov
dec
mov
in
imul
loopne
xchg
popa
icebp
cld
lock
pop
js
push
sub
jecxz
test
xchg
xor
xor
addr16
loopne
dec
dec
ds
movsl
sub
push
xchg
sbb
in
sub
insl
aas
je
test
ja
mov
dec
xor
in
adcb
dec
scas
in
sbb
dec
lods
test
or
lahf
lcall
and
hlt
or
mov
or
loope
add
int3
mov
jo
add
xor
insl
push
dec
ljmp
test
jp
addb
add
lret
lret
dec
test
lcall
jnp
adc
mov
testb
fisubrs
mov
mov
or
ds
loop
mov
cmp
call
div
jns
inc
inc
pop
sbb
andl
mov
and
movsl
in
sub
addr16
cmp
imul
in
adc
subb
fisttpll
iret
push
dec
stc
inc
repz
jecxz
ss
lcall
test
gs
aas
out
xchg
mov
ret
mov
mov
shl
or
mov
call
lds
cltd
pop
cmc
and
out
in
lods
arpl
in
xchg
ja
xor
in
fisubrl
into
adc
sbbl
add
fisttps
in
push
fstpt
jnp
shlb
sbb
jb
or
xchg
hlt
negl
insl
or
or
push
or
inc
je
push
repz
out
das
xchg
adc
xor
push
cmc
repnz
dec
fildl
out
cmpb
jmp
inc
rcrl
mov
shlb
sub
mov
lret
lock
sub
xor
adc
leave
mov
and
mull
xchg
stos
imul
dec
or
mov
pop
fwait
sbb
pop
xlat
out
add
add
pop
and
sarl
or
and
rorb
lahf
push
stos
dec
fcomps
adc
mov
or
ret
push
sbb
jno
pop
adcb
inc
xchg
xlat
clc
enterw
adc
or
sbbl
pop
mov
jne
or
dec
sahf
push
xchg
xor
subl
xchg
adc
andps
jecxz
sub
sbb
sub
jl
mov
in
mov
lret
sbb
push
mov
xchg
int3
push
shrl
fdivl
pop
stos
mov
dec
stc
sub
jnp
mov
sub
xlat
arpl
lret
leave
jge
and
icebp
je
push
and
in
daa
dec
jae
les
popf
pop
add
sahf
xchg
mov
jae
dec
pop
jmp
push
add
and
add
add
sub
dec
adc
iret
mov
imul
add
xchg
daa
or
stos
dec
out
fwait
mov
jg
movsl
sub
outsl
std
pop
outsl
adc
in
xor
push
insl
adc
xor
adc
loopne
fildll
rcr
sub
pcmpgtd
lret
mov
push
sarb
aam
into
stos
sub
cmp
cld
insb
inc
rcrl
lahf
outsl
xor
test
stos
loope
mov
cmp
test
mov
add
les
mov
cmpsb
repz
rorl
aad
push
addr16
iret
cmp
sbb
hlt
lcall
and
mov
lods
repnz
add
sbb
xor
sahf
jp
outsb
dec
pop
fdivrl
ds
add
and
mov
out
scas
mov
jecxz
and
and
xchg
psrld
lds
ja
enter
in
lods
sbb
fmulp
and
xlat
xchg
jl
adc
out
jmp
stos
jle
iret
in
jecxz
loop
in
mov
shl
movsb
pop
sbb
gs
xor
ljmp
lcall
out
lock
fisubrs
hlt
xchg
into
dec
push
jbe
add
fists
jmp
xor
cmpsb
out
es
sub
orl
xchg
mov
stos
push
shrb
sub
and
jns
inc
xchg
fisubrl
xchg
push
dec
and
jne
shll
jmp
es
repz
sahf
jns
dec
xorb
push
sbb
cld
jbe
imul
inc
sbb
test
cmp
imul
mov
xlat
add
cs
push
inc
leave
mov
data16
push
sub
mov
popa
xchg
nop
imul
xor
out
sahf
adc
cmpsb
ret
or
cmp
out
inc
adc
xchg
mov
std
lret
inc
adc
ja
sahf
xor
push
leave
loop
xchg
jo
pop
or
fcmovb
pop
lcall
mov
jns
xchg
inc
popa
ret
inc
and
loopne
sarb
clc
stos
pop
outsl
mov
and
ljmp
jg
adc
sahf
imul
sub
push
repnz
test
lea
mov
adc
mov
mov
xorl
mov
ficoml
mov
inc
scas
adc
jmp
out
push
inc
and
out
push
cwtl
mov
dec
dec
sarb
outsb
xor
loopne
jp
mov
mov
pop
pop
mov
mov
aam
hlt
or
xor
push
pop
das
sti
dec
lret
es
sub
ret
test
scas
lock
mov
mov
xor
mov
sub
call
pop
incb
lcall
nop
sub
or
add
fmul
rcll
cmp
mov
es
mov
lods
outsl
cmp
xchg
push
mov
add
cmp
and
sbb
rcll
lods
addr16
adc
cltd
rcrl
sbb
cmp
jbe
in
inc
push
in
fldt
fnsave
adc
inc
sahf
ret
jno
sub
push
into
enter
mov
hlt
and
cwtl
fildl
ficompl
icebp
lock
test
mov
mov
xchg
cmp
jno
cltd
mov
iret
xchg
adcl
push
xchg
pop
test
test
shl
sub
imul
adc
and
in
or
inc
xchg
mov
aaa
scas
insl
fidivrs
cmp
pushl
fmuls
xor
xchg
push
into
int3
fs
adc
adc
mov
jp
cmpsb
imul
push
movsl
dec
jge
pop
scas
adc
add
hlt
fwait
xchg
shr
mov
out
add
inc
leave
fiadds
xchg
or
mov
jo
sahf
mov
idivl
int
sbb
mov
or
inc
lahf
sub
adc
adc
cmp
movq
ss
xchg
sbb
aaa
fcmove
xchg
pop
out
fists
sbb
pushf
mov
mov
test
xor
leave
push
add
xor
sub
sbbb
cmp
jp
ljmp
sub
scas
xchg
cmp
aas
and
test
push
lahf
cltd
mov
adc
mov
cmpsb
add
bndldx
xor
sub
adc
adc
in
pop
push
psubq
setns
jns
sbb
mov
mov
fstpl
loope
push
adc
add
sbb
or
inc
fcompl
push
or
dec
loopne
push
cmp
daa
pop
mov
arpl
mov
cmpsb
popa
cmpsl
sub
or
xlat
imul
xchg
and
push
ja
xchg
dec
jg
nop
out
shlb
sub
xor
mov
and
mov
sub
or
arpl
xlat
sub
xor
push
mov
mov
sahf
aas
pop
pop
push
outsl
jge
xor
sarb
push
mov
sub
fcomi
outsb
mov
inc
aad
test
sbb
cwtl
repz
ltr
shl
repz
pop
push
in
dec
mov
push
sub
mov
addr16
out
jbe
add
and
int3
adc
adc
push
add
pop
lret
sub
push
loope
adc
pop
je
bound
adc
repnz
mov
add
dec
cli
les
outsb
or
lret
lea
inc
jecxz
mov
pushw
cmc
mov
sub
sub
pop
movsl
jp
xor
jl
sub
mov
ljmp
stos
dec
mov
push
mov
inc
scas
cmc
loop
xchg
mov
inc
sti
pushf
and
inc
xor
push
gs
or
push
and
in
loop
test
imul
pop
icebp
fdivrl
xor
int
cmp
pop
js
or
dec
inc
and
lock
dec
push
mov
mov
mov
cmpl
xor
ja
in
pop
lahf
repz
dec
mov
stc
js
cmpsb
mov
and
or
jae
test
packsswb
andb
out
mov
aam
add
xor
pop
mov
push
sbb
mov
mov
push
std
jb
icebp
or
stos
pop
mov
test
mov
test
stos
jo
dec
dec
xchg
mov
or
mulb
cmp
je
jnp
ret
sbb
test
pop
dec
ror
shr
test
aad
cld
sub
inc
test
incb
in
cmc
lcall
divl
dec
adc
dec
out
xchg
adc
add
cmp
ret
xchg
test
dec
push
je
pop
aaa
adc
aam
pop
add
call
flds
out
into
rcll
in
ja
cld
leave
loop
jle
push
mov
sbb
pop
sub
mov
lods
aas
mov
pop
ljmp
sub
sahf
add
lcall
dec
fdecstp
sbbl
out
fcomi
stc
repz
rclb
inc
xchg
inc
outsl
jmp
outsl
lea
push
sub
push
or
lods
jmp
leave
mov
jnp
dec
dec
int
add
mov
int3
imul
cmp
mov
dec
push
dec
roll
dec
inc
popf
fwait
push
fidivs
lea
pop
cmpl
pop
adc
or
and
nop
in
je
ja
loopne
cltd
push
push
jnp
cmp
push
shl
lods
push
cs
pop
and
cmp
cs
int3
idivl
scas
fiaddl
ds
pop
fistpll
jecxz
cmpsl
jns
fldl
xor
dec
loope
dec
xor
sub
fisttps
nop
sub
or
stc
nop
insb
bound
cltd
test
scas
in
adc
sub
add
jno
sub
outsl
dec
mov
jmp
mov
and
fbstp
dec
xlat
bnd
xlat
lods
inc
add
stos
roll
pop
pop
incb
das
shll
cli
xchg
aas
xchg
mov
pop
call
fsubrp
aas
bound
sbb
push
xchg
or
nop
fwait
lods
hlt
inc
push
mov
or
in
lret
mov
dec
jae
in
lcall
mov
adc
add
inc
das
mov
and
push
pushw
insb
sbb
cmp
pop
xlat
sahf
push
lcall
xorl
jne
dec
sbb
sub
xchg
push
fldcw
cltd
test
pop
sub
std
ss
fimull
imul
movsb
aaa
popa
sbb
inc
mov
pop
daa
mov
std
or
in
insb
push
into
stos
out
orl
xchg
gs
push
repnz
jmp
nop
test
jo
fwait
add
call
dec
out
pusha
faddl
inc
js
lock
pop
mov
pop
dec
and
mov
inc
dec
rcll
mov
je
push
lock
data16
or
repz
pop
mov
out
imul
xorb
adc
lock
fwait
dec
fstps
and
sub
std
sbb
inc
cmp
movsb
xor
mov
sarl
mov
les
repz
movsb
pop
add
rcll
daa
jge
lods
addr16
pusha
sbb
out
fstps
stos
push
and
leave
adc
jl
push
push
cwtl
inc
adc
adcb
inc
es
leave
popa
or
nop
mov
std
sbb
pop
cmp
repnz
fcmovne
icebp
jmp
dec
je
lds
push
pop
xlat
xor
mov
dec
ja
into
in
cmc
popf
inc
xchg
enter
sbb
or
xchg
push
jp
orb
gs
mov
pop
xlat
daa
movsb
insb
add
push
mov
outsb
mov
test
and
aam
stos
inc
loop
jmp
mov
out
fwait
inc
and
loopne
ret
movsl
loopne
jae
lret
sbb
fnstsw
in
popl
push
cmp
ret
sub
out
and
push
repnz
lea
dec
jecxz,pt
stc
popa
pop
mov
mov
movl
mov
mov
testl
lahf
adc
pop
xchg
cmp
sti
out
xchg
mov
or
and
adc
stc
add
daa
push
add
jl
mov
sar
mov
mov
test
stc
test
dec
adc
mov
mov
push
outsl
inc
mov
les
pop
aad
aad
add
rcll
aas
jno
xchg
bound
out
or
add
mov
loop
add
and
sbb
lods
mov
cmc
dec
pcmpeqw
arpl
pop
mov
cmp
adcb
ret
test
aaa
cltd
mov
adc
mov
pop
sbb
int3
mov
jb
cmpsl
jbe
fidivs
cmpsb
imul
addb
das
lcall
fstl
mov
ds
dec
and
adc
jecxz
mov
push
push
mov
mov
int3
mov
arpl
inc
cli
imul
test
fsubrs
dec
fcmovbe
das
xchg
outsl
sbb
push
daa
stc
and
mov
sbb
cmc
lret
popf
iret
dec
aam
outsb
dec
xor
imul
add
mov
fs
mov
dec
mov
pusha
inc
cmp
ror
lahf
outsl
pop
aaa
addl
bswap
dec
and
jnp
sub
addb
ficompl
test
adc
fmuls
std
push
xchg
xchg
push
and
dec
mov
movsb
xor
dec
cwtl
movl
idivb
addb
sahf
lcall
adc
sbb
or
or
or
jle
subb
xchg
data16
pop
lret
sub
mov
scas
in
aas
in
jns
pop
inc
lcall
int
lahf
mov
notl
push
cmp
push
xchg
mov
mov
xor
in
cld
pop
bound
mov
iret
ret
out
jo
mov
add
sbb
xchg
pop
icebp
push
mov
imul
jno
fld
lods
scas
mov
jg
push
mov
imul
xor
mov
shll
rcl
test
xor
sbb
xor
test
jecxz
mov
es
inc
enter
jge
mov
pop
add
and
push
mov
inc
lret
es
xchg
mov
scas
jp
push
lret
adc
xchg
cmpb
add
ss
and
pop
cmpsb
or
pop
in
fldl
stos
cli
sahf
rcrl
outsb
cmpsb
push
push
cmp
dec
pusha
sahf
enter
xor
xor
mov
jmp
sbb
mov
rcrl
ret
and
or
sub
popa
dec
add
sub
loop
ss
pop
imul
sahf
sub
cmp
shll
icebp
call
mov
lret
adc
shll
add
mov
cld
pop
lock
sarb
sub
lods
or
les
inc
pop
add
in
mov
fildl
ror
test
cmp
gs
push
jo
or
cmp
fs
mov
lock
insb
jno
icebp
rcrb
fucomi
xchg
mov
scas
jns
xor
xor
cmpsb
lods
fildl
jae
cmp
and
jne
jmp
mov
jns
jge
dec
fisubrs
sti
xchg
push
addb
adc
mov
popf
ds
pop
in
jns
inc
sub
xchg
sbb
das
aad
fsin
decb
mov
sbb
int3
es
mov
push
addb
daa
push
jmp
mov
xchg
add
fstpl
jbe
lret
lret
lods
jmp
push
or
rcll
int
mov
nop
outsl
shrb
dec
call
in
push
adc
cli
push
nop
jecxz
sub
imul
lret
nop
mov
add
bound
mov
cmp
addb
test
aas
arpl
scas
ljmp
nop
lock
sbb
popa
mov
ds
pusha
jno
dec
leave
bound
and
add
ret
mov
push
xor
scas
or
sub
stc
mov
out
cmc
cmc
mov
jg
mov
pop
mov
fs
sub
mov
jge
sbbl
push
lods
dec
pop
inc
pop
and
jmp
js
adc
jle
stos
popa
add
icebp
pop
mov
sti
mov
cmp
inc
lcall
cmpsb
call
popf
int3
lds
or
movsb
lcall
test
or
jecxz
imul
dec
daa
ror
jp
add
stc
sahf
aam
movsb
xchg
dec
test
into
std
lds
fsubp
sbb
cmpsb
test
fildl
sub
rorb
icebp
jecxz
xchg
dec
ds
pusha
mov
inc
push
xchg
inc
sbb
and
sbb
pushaw
lods
xchg
xor
out
lcall
jns
adc
jno
icebp
inc
mov
or
xor
imul
sbb
fsubrl
in
jl
cs
xchg
mov
adc
std
mov
cmp
xchg
or
shr
adc
icebp
mov
adc
data16
icebp
push
and
subl
xchg
lret
movsl
add
mov
lret
iret
and
dec
xor
xor
jle
mov
cmp
mov
sub
inc
inc
inc
xor
adc
ficoms
lock
iret
sub
xor
arpl
inc
dec
xor
mov
adc
popf
dec
inc
repnz
test
fnstsw
mov
jb
add
les
cltd
loop
lret
cltd
gs
push
pop
sub
es
pop
cmp
lods
inc
iret
mov
rol
mov
shll
cmp
stc
in
push
outsb
jno
filds
pop
std
rolb
and
sub
std
mov
mov
mov
lahf
cmp
push
and
das
test
ds
pop
in
cmp
xchg
mov
aaa
add
xchg
insl
and
xchg
pushf
lods
fs
rcr
outsl
repnz
mov
cld
mov
fimuls
jo
int3
mov
test
push
xor
stos
xor
add
jmp
fadds
mov
int3
mov
or
pusha
xchg
inc
into
adc
scas
push
inc
add
ds
test
pmaxub
jae
faddl
movsb
pop
sub
dec
push
mov
subl
jnp
mov
insl
fsubl
fsub
nop
loope
data16
sub
push
sub
add
xchg
xchg
add
add
andl
cmp
sbb
ljmp
ret
inc
pop
pop
xchg
jae
xor
xchg
jne
ror
mov
pop
stos
and
and
or
out
rclb
or
call
add
cmp
mov
adcl
mov
insb
scas
jbe
add
xchg
aad
or
cmp
aad
idivl
jb
lock
std
inc
and
rorl
ret
pop
inc
jg
pop
xor
fmulp
sub
sbb
scas
rorb
fistps
mov
xor
xor
dec
xor
outsl
das
add
mov
inc
ret
sbb
ss
fisubrs
aam
arpl
inc
cmp
add
cs
mov
insl
scas
push
aaa
sub
sub
lret
int
dec
or
lcall
pushf
hlt
jb
mov
popa
popa
xchg
mov
stos
pop
adc
xor
stos
push
xor
rorb
mov
aam
pusha
mov
icebp
dec
mov
loopne
mov
and
out
popa
mov
jge
pop
cmp
xor
stos
popf
xor
cli
and
push
xorb
xchg
adc
stc
nop
cmp
sahf
rol
gs
inc
test
fldenv
in
xchg
sub
stc
jge
cs
mov
rcrb
test
jge
iret
push
sahf
mov
jg
mov
daa
add
and
loop
std
sbb
daa
add
call
cwtl
add
in
stc
pop
jb
imul
sbb
loopne
xlat
pop
xor
scas
and
movsl
fisubs
movsl
xchg
mov
mov
mov
mov
pusha
pop
repnz
xchg
fisubl
mov
xor
icebp
fisubl
and
mov
shlb
xchg
and
mov
outsl
xchg
mov
mov
pushl
rorb
cmp
mov
cmp
mov
repnz
sbbl
jo
mov
in
fwait
cld
adc
inc
and
dec
and
outsb
sbb
xlat
iret
xchg
je
sub
cmp
xorb
inc
xor
dec
xor
out
push
xor
push
clc
xchg
gs
in
fstl
lds
cmpl
cmpsl
repnz
mov
add
push
enter
push
je
mov
pop
add
sahf
nop
inc
aam
mov
inc
daa
cmp
xor
xchg
jmp
sar
mov
dec
jl
mov
mov
xlat
fwait
add
mov
jecxz
jbe
addl
inc
test
test
cmp
orl
cmp
dec
lahf
stos
and
and
and
or
adc
into
loopne
ficomps
out
insb
in
mov
loop
ret
int3
gs
inc
hlt
idivb
lock
out
xor
dec
jne
lds
xchg
fs
test
loop
lock
ja
push
jl
pop
mov
push
dec
rolb
insl
jp
sbb
mov
scas
push
dec
dec
xchg
dec
xchg
mov
cwtl
inc
mov
pop
into
shll
dec
leave
pop
das
sahf
xorl
cmc
cmp
pop
mov
sbbb
jp
out
pop
aad
aam
mov
jnp
jecxz
lods
push
xchg
insl
xchg
stc
int
enter
dec
lahf
imul
bnd
and
adc
insl
fldt
add
mov
inc
gs
xor
leave
dec
push
jecxz
sarl
out
dec
mov
jb
arpl
mov
xchg
addb
xchg
jne
divl
imul
clc
add
xchg
adc
mov
dec
mov
or
pop
add
mov
in
mov
shll
sbb
pop
inc
add
aam
xor
jmp
mov
or
rorb
in
push
test
scas
add
popa
pop
and
imul
out
mov
mov
add
and
adc
stos
jle
mov
dec
push
xor
scas
push
shlb
sbb
adc
mov
jge
cltd
mov
lret
jb
imul
and
xchg
sub
icebp
sub
mov
cld
dec
pop
pop
sub
adc
clc
pop
sti
aas
stc
sub
or
das
frstor
push
adc
aam
jmp
sti
pop
pop
mov
jl
add
insl
divl
test
sbb
hlt
in
lcall
inc
pop
cmc
jo
lcall
mulb
out
arpl
out
inc
lahf
sub
lea
hlt
cmp
jle
popf
pop
inc
mov
imul
add
mov
ret
adc
es
jmp
xor
mov
cs
lret
jb
and
mov
dec
jns
mov
or
fldl
xchg
daa
test
lcall
add
stc
loope
fwait
adc
adc
fsubs
or
ret
or
std
and
repnz
scas
filds
popf
dec
dec
and
jb
gs
mov
sahf
stc
insb
shr
je
popf
cmp
stos
jb
insl
xchg
mov
out
adc
sub
or
pop
movd
xchg
xor
rorl
cmc
push
inc
mov
xchg
add
xchg
mov
xor
mov
mov
in
insl
loopne
mov
pop
andl
roll
mov
aam
adc
push
in
or
push
out
stc
gs
push
xlat
add
dec
fstpl
lods
ficompl
cwtl
inc
leave
aam
push
mov
in
mov
test
sub
aam
int
and
mov
and
jo
push
out
pop
cmpsl
insb
stos
call
enter
enter
test
dec
push
mov
dec
sub
dec
movsl
add
pop
add
lret
ja
inc
ret
or
xor
arpl
ret
lret
adc
cmp
lods
inc
imul
cmp
xchg
mov
jo
and
icebp
lcall
fnsetpm(287
lret
call
fbstp
jbe
frstor
mov
int
popl
in
jb
std
inc
jne
xor
or
mov
mov
aaa
pop
shr
adcb
subb
jbe
xchg
xchg
and
add
jge
addr16
fbld
test
out
add
push
pop
cmp
pop
data16
mov
inc
loop
xlat
push
jg
adc
and
mov
ret
pop
test
ljmp
stc
inc
or
imul
sub
ss
stc
fdiv
decl
imul
pop
and
call
arpl
lods
test
jae
add
lds
inc
jge
jnp
push
xlat
xchg
leave
insl
or
repz
lret
and
in
repz
jl
out
xchg
jmp
jecxz
repz
mov
sti
pop
test
ljmp
dec
mov
inc
mov
dec
lods
inc
lea
das
outsb
cmp
pop
arpl
xchg
mov
mov
jmp
out
enter
mov
insb
mov
sbb
scas
or
add
gs
clc
minps
stos
push
test
or
test
pop
add
sbb
cwtl
adc
mov
sbbb
dec
push
adc
mov
cmp
in
push
adc
das
cwtl
and
xchg
nop
sti
jbe
bound
pop
test
fsubl
jae
mov
dec
push
call
sub
ret
pop
sbb
aad
pop
sti
and
push
inc
scas
cmp
inc
mov
test
out
imul
mov
lods
cmp
mov
cmp
xor
shl
out
or
movsl
dec
gs
jne
stos
push
adc
data16
gs
ret
rcll
mov
mov
call
ret
push
sbb
fdivl
pop
inc
mov
xchg
jmp
jns
mov
scas
cmp
loop
mov
cmp
pushf
cmp
mov
xchg
push
xchg
arpl
repz
decb
int
cmpsl
pop
inc
mov
push
jae
outsb
xchg
add
scas
xor
rcrl
add
lods
add
subl
pop
lods
xor
jge
lock
xchg
cltd
add
adc
mov
ret
xor
push
cld
in
hlt
into
popa
jae
ja
stc
sahf
pop
add
repz
lock
mov
mov
andb
adc
pop
xor
sub
sub
push
fnstenv
rol
mov
jp
jae
pop
xchg
mov
jae
mov
sti
sbb
test
lahf
fbld
test
jbe
insb
imul
add
push
or
mov
xchg
lock
lahf
out
mov
inc
ja
and
inc
rclb
stc
jns
jmp
push
inc
or
fisubrs
push
stos
pop
loope
push
cmp
xor
je
bound
outsb
sahf
add
aad
movsb
sub
in
add
lods
outsl
xor
bound
and
lods
sbb
ljmp
les
xor
addb
mov
test
push
jmp
mov
lcall
xor
cmp
imul
jmp
mov
loope
jg
adc
rorl
ja
cmp
push
adc
adc
das
dec
mov
xor
mov
sysret
gs
shll
cmpsb
dec
fimull
pushf
jmp
and
jo
mov
push
mov
loopne
adc
les
or
bound
inc
cmp
lea
inc
mov
iret
pushf
iret
xor
adc
mov
push
add
mov
fsub
mov
ror
cld
ja
cwtl
int
mov
out
mov
movsl
fistl
pushf
adc
cmp
and
loop
fcmovb
fwait
jne
fdivr
push
add
insl
pop
push
push
leave
rcll
ss
std
fmuls
push
movsb
mov
lods
jae
mov
out
jno
cld
gs
mov
lahf
ja
loope
sbb
adcl
add
sub
lret
pusha
lods
stos
retw
pushf
jp
dec
lret
call
cmpsl
add
scas
and
mov
ljmp
extrq
jns
dec
and
lret
sbb
int
fisttps
adc
es
mov
ja
xor
sbb
sbb
pop
movsl
dec
push
repz
loopne
cmp
fcmove
mul
or
out
xor
mov
inc
ljmp
and
or
pop
or
jbe
hlt
pop
insl
sbb
inc
ds
mov
sbb
xor
js
sbb
scas
out
xor
aaa
cmp
popf
pop
sub
ds
lock
mov
and
int3
pop
sbb
sub
cmp
inc
jmp
movsb
or
cmp
popa
xor
inc
rcll
test
xchg
popa
in
add
sbb
xchg
enter
dec
mov
test
lods
sub
xchg
outsb
stos
mov
mov
dec
jl
into
sbb
and
shll
xchg
mov
jecxz
xor
adc
inc
test
cwtl
sub
mov
loop
jns
lock
mov
int3
je
sbb
push
unpckhps
ljmp
sahf
inc
xabort
clc
shl
imul
and
mov
loope
push
inc
stc
mov
loope
movsb
mov
xchg
leave
out
mov
mov
or
inc
sbb
push
cltd
movsl
or
imul
push
inc
vpunpckldq
inc
aas
je
cmpsb
mov
pop
das
cli
sub
dec
fdivs
and
adc
cmp
mov
push
mov
ret
lds
sub
das
scas
lds
inc
sbb
nop
xchg
xchg
clc
jbe
cmpsb
or
std
lea
lret
adc
push
mov
push
mov
mov
stos
add
icebp
outsl
aaa
fsub
out
mov
aad
push
xchg
mov
add
inc
inc
push
es
pusha
mov
inc
mov
lret
xchg
repz
in
jnp
scas
pop
divl
inc
sbb
mov
shl
push
push
aaa
ss
fcomps
js
push
inc
sahf
aam
or
fdivs
test
xchg
lea
pop
enter
ja
mov
cmp
mull
popf
mov
shll
sbb
adc
mov
clc
mov
inc
insl
dec
adc
jcxz
mov
ret
pop
jmp
movsb
mov
inc
dec
push
lea
js
popf
cmc
mov
adc
xchg
iret
hlt
jmp
mov
mov
lods
mov
rolb
hlt
ljmp
xchg
dec
icebp
jmp
xor
sarb
xor
leave
pop
sbb
fiadds
adcb
fsubrs
cltd
fstpl
outsl
or
jp
dec
int3
fwait
sub
push
repz
xchg
movsl
jge
and
adc
test
call
sbb
fmuls
push
sub
pop
jle
dec
push
pusha
mov
test
and
xor
jmp
loope
jecxz
xchg
mov
pop
cmp
dec
cld
xchg
mov
mov
jbe
popl
leave
jp
and
std
xchg
mov
fcoms
inc
push
push
and
and
pop
adc
daa
or
mov
call
push
fmull
imul
xlat
jae
or
loop
orps
ret
arpl
cld
mov
inc
and
repnz
mov
or
or
scas
sub
sbbb
sahf
adc
dec
sbb
cwtl
mov
outsl
push
and
pop
mov
adc
cmp
xchg
mov
mov
xchg
call
shll
pushf
jmp
jecxz
cli
pminub
out
in
clc
xchg
sbb
push
and
pop
repnz
mov
aaa
push
repnz
mov
in
jecxz
jne
stc
push
test
addr16
icebp
xchg
push
aaa
jle
xchg
pop
jge
or
add
pop
jno
mov
cmp
ret
dec
fwait
enter
inc
fldenv
inc
jnp
cmp
jmp
cmp
cmc
ds
cltd
mov
movb
mov
push
test
lret
loop
dec
mov
std
imul
jmp
ljmp
adc
lahf
adc
stc
dec
outsb
daa
cli
xor
fiadds
test
clc
sbb
mov
popf
jae
xor
pop
mov
sti
xchg
pop
movsl
cmpl
test
dec
fwait
paddsb
dec
and
and
repnz
jg
add
push
cwtl
mov
adc
xor
add
sub
test
aaa
mov
sbb
hlt
mov
fisttps
cmpsl
lret
sub
in
jp
add
inc
jmp
lods
ret
orb
mov
inc
int
into
adc
push
mov
xor
push
mov
into
xchg
lret
inc
add
dec
push
push
adc
les
icebp
jle
bound
stc
pop
test
cmp
adcb
test
push
sbb
clc
xchg
or
loopne
mov
andb
stos
cmp
outsb
xor
cmp
xor
mov
pop
ror
test
sub
aam
mov
pop
out
jecxz
pop
setb
mov
arpl
jns
push
dec
movsl
sub
inc
mov
fists
sti
in
xor
mov
or
insb
add
sti
outsb
inc
jmp
outsb
adc
mov
xor
or
and
lods
push
rorl
jo
and
sbb
insl
xchg
cmp
in
gs
arpl
arpl
bound
mov
inc
orl
sbb
pop
jno
adc
lea
das
and
lea
mov
test
ljmp
hlt
dec
hlt
mov
pushl
dec
lock
loopne
leave
ja
sub
sub
lods
es
stc
xor
das
inc
shl
add
arpl
fld
std
lret
ja
aam
mov
repnz
jmp
mov
push
dec
cmc
add
shr
sub
xor
mov
leave
test
pop
mov
xchg
ret
add
addb
aas
push
or
jg
int3
in
sbb
push
push
push
movsb
cmp
fdivrl
repnz
sbb
aam
push
sahf
pop
jnp
mov
xchg
add
inc
arpl
call
and
add
popf
cli
mov
out
dec
push
out
inc
sub
xchg
adc
cmpsl
lahf
lods
hlt
push
mov
jp
mov
or
xchg
add
or
int
nop
dec
or
ret
sarl
aam
ja
or
clc
fmull
cs
mov
xchg
sar
fdivl
adc
fisubrl
into
mov
and
xchg
aam
repnz
sbb
shrl
jbe
mov
imul
xchg
xlat
pusha
pop
cmp
es
inc
push
aaa
and
sbb
mov
mov
or
int
cwtl
int
sbb
push
fwait
mov
imul
xchg
cmp
pop
add
in
call
push
push
repnz
mov
or
data16
fcomi
in
icebp
cld
jecxz
mov
adcl
add
mov
sbb
lcall
jns
pop
sub
loopne
mov
pop
pop
sbbl
push
xor
dec
es
test
inc
int
mov
sti
mov
ret
scas
pop
push
lahf
jb
mov
push
inc
xchg
mov
or
mov
xchg
mov
clc
adc
xlat
jp
pop
pop
aas
pop
data16
mov
repnz
push
push
and
push
out
push
hlt
inc
sbb
movsb
pop
lea
xor
mov
flds
jnp
xchg
cwtl
fisubl
mov
gs
or
inc
adc
pop
leave
les
pop
scas
and
jg
add
data16
cli
dec
repz
fiaddl
std
out
call
add
outsb
sbb
mov
sub
inc
lret
or
push
and
mov
idivb
sub
mov
test
mov
mov
outsl
dec
mov
mov
mov
cmp
pop
je
cmp
and
mov
fnstsw
es
xchg
adc
sbbb
xor
xor
bound
call
mov
test
mov
leave
int
xchg
stos
add
lcall
lea
scas
hlt
or
mov
xlat
jno
sti
fstps
rcrb
lods
inc
pcmpgtd
jns
popa
inc
and
cmp
add
in
mov
test
lods
test
mov
je
and
lcall
stos
dec
cmpsb
stos
out
jno
mov
fistpl
leave
sbb
xchg
mov
xor
lods
imul
push
scas
imul
dec
sbb
inc
mov
mov
rcl
rcll
mov
sbb
push
cmp
lock
adc
loope
mov
fs
out
and
pop
push
push
call
dec
jge
pop
mov
mov
adc
add
xor
mov
arpl
neg
push
imulb
sbb
outsb
mov
xor
loop
jl
cmpsb
push
mov
mov
pop
push
add
fs
sub
mov
xlat
lds
lock
repnz
ljmp
dec
push
lock
jmp
mov
xor
and
aaa
into
nop
stc
insb
bnd
inc
xlat
xchg
sub
jno
pop
loop
fcoms
push
sbb
in
es
xchg
jge
mov
fidivrl
xor
pop
fnstenv
fiadds
inc
xchg
test
popa
cmp
inc
or
mov
dec
hlt
push
jp
add
mov
or
jl
popa
and
and
mov
test
pop
jle
mov
leave
and
mov
rcrl
xor
fldcw
or
test
out
mov
es
xchg
lea
dec
mull
ss
mov
sbb
sbb
mov
hlt
movsb
jno
sbb
mov
dec
jge
mov
repnz
mov
adc
pop
andps
cmp
mov
cmpsb
lahf
and
test
imul
adc
pop
sub
lods
lret
sbb
out
call
sbb
je
jp
mov
mov
fucomi
out
shl
push
imul
lcall
ljmp
mov
hlt
lret
push
ret
push
leave
out
clc
cmp
addb
aad
stos
ljmp
xchg
stos
push
jge
jmp
imul
frstor
fstp
adc
mov
lcall
push
jo
aaa
inc
or
inc
mov
in
add
lods
loope
out
jl
inc
sub
imul
fimull
jnp
dec
inc
and
ss
adc
push
in
outsb
inc
jle
cli
jg
mov
pop
xchg
jnp
dec
repnz
mov
or
or
cmc
pop
cmp
or
inc
ret
xor
mov
push
adc
into
mov
cld
das
sbb
or
dec
aad
dec
sbb
out
dec
addb
fiaddl
fbstp
insl
or
jmp
adc
mov
out
ja
sub
or
cld
dec
sub
push
inc
dec
insl
xlat
lret
std
ja
jno
add
js
push
jbe
or
cmp
cmp
mov
jns
insb
mov
not
mov
addr16
adc
sbb
mov
stos
scas
pusha
fistpl
add
or
aam
push
pop
dec
jns,pn
adcl
movsl
mov
rorl
cltd
inc
jecxz
jnp
jo
cs
or
push
roll
add
out
in
scas
pop
lcall
mov
in
in
ja
test
cmp
enter
imul
jl
mov
lret
push
xorb
fs
mov
cld
stc
mov
inc
or
int3
dec
push
mov
dec
aas
sti
lods
popf
addl
insl
mov
jae
dec
dec
addb
out
add
mov
lds
push
push
cmp
xor
mov
dec
in
orl
jp
notb
mov
xchg
fadds
adc
inc
rcrl
or
push
cmp
jb
lahf
adc
mov
push
and
mov
test
cli
in
push
out
es
xor
jecxz
xor
push
test
cmp
sbb
in
dec
mov
sbbl
cmc
and
cmpsb
ror
stc
mov
out
das
je
sub
sub
scas
and
push
mov
jo
push
lahf
jl
test
jns
xlat
add
in
sub
or
xchg
pop
ret
test
cmp
mov
cltd
mov
and
rolb
xlat
push
sub
out
jmp
stos
shll
inc
pop
test
jns
roll
mov
cld
fwait
jmp
shrb
imul
call
push
push
adcb
scas
and
or
or
add
icebp
inc
es
sub
dec
push
adc
addr16
sub
pop
imul
lds
rorb
xchg
mov
lcall
xchg
cmp
mov
mov
loop
cli
mov
pusha
cmp
jbe
mov
test
push
cmp
dec
push
mov
mov
jae
inc
or
xor
or
dec
sub
adc
ss
sbb
cmp
fisttpll
adc
ljmp
jl
fildll
ds
xor
mov
rcl
or
jae
lret
sbb
xor
push
insb
mov
cli
cld
sbb
repz
cmpsl
inc
mov
or
out
aad
mov
imul
lods
xchg
mov
fstl
pop
jbe
or
test
adc
sbb
in
cwtl
insb
pushf
clc
lcall
jg
ss
sbb
insl
andb
fnsave
insl
inc
jle
xor
dec
xchg
pop
aad
mov
mov
bound
add
add
fcomps
aaa
mov
sbb
cli
dec
inc
popa
sti
jmp
in
or
xchg
insb
push
xchg
mov
into
mov
imull
cli
xchg
test
fadd
imul
movsb
js
jecxz
addr16
mov
into
test
dec
outsb
dec
dec
ret
icebp
jle
in
dec
jo
xlat
aaa
mov
jmp
push
cli
add
xor
ds
jo
inc
aam
es
mov
cmpsl
out
es
xor
cmp
jo
mov
outsl
xchg
out
jmp
or
jnp
lea
notb
sbb
ret
ja
std
inc
pop
testb
jmp
xchg
test
dec
xchg
aam
mov
sbb
rcr
stos
xchg
add
xor
cltd
jmp
dec
add
push
or
sti
es
sbb
leave
dec
cmp
xchg
stos
adc
jmp
and
inc
push
dec
inc
popa
jecxz
lret
lcall
and
out
mov
mov
test
adc
jmp
mov
inc
nop
movsb
stc
cli
mov
sbb
outsb
clc
stc
add
or
cmpsb
hlt
push
scas
icebp
jne
mov
imul
pop
test
mov
jl
adc
fs
ret
outsl
mov
rcrb
jl
daa
out
les
fwait
push
jmp
jl
push
das
ret
loop
lods
push
ret
push
and
in
mov
inc
out
inc
cmp
mov
cmc
cmp
shlb
xchg
adc
test
mov
dec
push
repnz
stos
sub
bound
push
int
pop
rolb
inc
in
bound
or
adc
inc
jo
push
mov
dec
push
imul
leave
pop
and
test
cmp
adc
or
xor
dec
data16
cmpsb
mov
add
ljmp
push
into
cmp
inc
adc
lret
loopne
in
out
out
mov
or
mov
jp
pop
push
push
jb
fstpl
xchg
mov
jg
push
sub
arpl
add
jns
cld
sahf
ret
dec
dec
icebp
hlt
sub
js
nop
push
ljmp
cmp
cmp
gs
test
sahf
aad
adc
mov
cmp
into
xchg
sbb
leave
add
add
dec
pop
les
mov
mov
icebp
push
loop
jge
test
mov
ror
jnp
aad
xchg
sti
inc
push
clc
inc
cli
pop
fnstcw
push
mov
pop
jbe
pop
inc
xor
in
rcr
sub
in
jg
addb
pop
movsl
out
and
push
imulb
push
add
sub
adc
jge
or
int
add
and
cltd
clc
cmp
push
inc
aas
leave
iret
add
dec
movsl
stos
cmpsb
cmc
pushf
fcmovne
sbb
push
mov
push
data16
loopne
adc
mov
sbb
rcl
les
mov
ljmp
cltd
xor
in
lods
aam
inc
sub
and
add
inc
xor
inc
les
jg
icebp
andl
xchg
idivl
pop
rorb
jp
call
ret
fstps
inc
pop
in
mov
mov
jb
add
lret
mov
adc
mov
mov
sub
adc
stc
les
out
cmp
xchg
mov
cmpl
push
lret
ret
ret
mov
sbb
test
pop
push
sbb
movsb
ret
pop
sbb
out
gs
jmp
xchg
mov
mov
dec
inc
cli
adc
nop
push
repz
xor
jns
inc
inc
loop
lahf
mov
cli
mov
lcall
cltd
aad
mov
mov
cmpsb
adc
adc
shrl
stos
loope
inc
int
xor
cmovnp
test
xor
cmp
cld
xor
and
jecxz
lret
dec
xchg
push
scas
dec
push
out
dec
aad
repnz
and
scas
ret
mov
sub
push
add
fwait
xchg
inc
fldenv
ljmp
out
es
push
outsb
clc
pop
mov
inc
into
das
and
fistps
jl
adc
ret
nop
xor
repnz
hlt
filds
test
inc
fsts
test
data16
xor
int3
call
popf
pop
cmp
fwait
divl
jge
aad
arpl
mov
outsb
pop
xchg
and
mov
fidivrl
fwait
jle
ret
ja
add
or
mov
jae
cmp
aaa
pop
mov
lock
mov
mov
addl
adc
mov
test
dec
pop
xchg
add
jg
xchg
leave
sub
int
dec
add
inc
jo
popf
mov
and
movsl
jbe
mov
scas
out
popa
mov
dec
jp
jno
loop
jmp
ret
pop
mov
cmp
mov
push
popa
aad
inc
insl
or
mov
mov
push
shll
cli
push
cmp
mov
push
movsb
push
sbbb
scas
ret
jns
inc
lods
cmp
adc
imul
cwtl
jnp
dec
jmp
inc
sub
sbb
stc
inc
fdivrl
das
mov
mov
xchg
mov
fwait
sub
nop
pop
push
lods
scas
mov
jb
cmp
fisubrs
mov
clc
lods
dec
dec
aam
in
xor
jmp
lock
push
inc
cli
int
pop
rorb
xchg
sarl
cmp
or
and
push
xchg
mov
and
push
mov
aas
mov
xchg
inc
or
push
jno
and
pop
daa
xchg
sbb
bound
ret
pop
xor
push
stos
mov
les
inc
add
cmp
mov
cld
push
stos
mov
pop
jmp
test
fiaddl
out
xor
inc
cmp
pop
cmp
sub
mov
test
popf
notl
sbb
insl
iret
xchg
sbb
and
xor
stos
rcr
xor
and
mov
or
and
mov
loope
add
add
filds
cmp
push
mov
dec
jns
notb
adc
stc
push
xlat
inc
testl
test
jbe
sub
jnp
out
pop
enter
and
sub
dec
add
shl
sub
adc
gs
mov
jbe
sbbl
add
nop
mov
fists
testl
jne
and
scas
sbb
mov
loope
lods
or
mov
sub
addr16
scas
and
cmpsl
das
pusha
mov
shlb
xchg
mov
iret
outsb
adc
jo
sbb
hlt
mov
mov
call
test
pop
mov
shll
cmc
pop
scas
fs
rorl
popf
push
sbb
rorl
mov
inc
lods
jo
call
pop
mov
test
fwait
icebp
lods
call
pop
cs
mov
mov
insl
inc
lock
mov
in
dec
push
dec
lea
and
pop
pop
xor
test
push
rcll
push
lahf
add
int3
jp
inc
fscale
xchg
outsb
fwait
sbb
cli
sbb
cmpsb
adc
push
cmp
mov
fisubs
sahf
push
xchg
inc
out
out
mov
nop
std
xchg
imul
pop
mov
mov
mov
insb
scas
mov
mov
mov
fisubrs
das
fisubrl
adc
add
mov
stc
inc
pop
int
dec
cmpb
test
fs
xor
xor
mov
cltd
fdivl
js
ds
push
notl
push
sub
push
mov
daa
ljmp
nop
dec
mov
jg
movsb
mov
sahf
adc
stc
mov
dec
adc
lret
test
fcoms
and
rclb
lret
sarl
push
xor
jecxz
sub
xorl
icebp
pop
ret
and
jecxz
into
mov
adc
pop
ret
mov
and
push
xor
adc
dec
mov
inc
cli
xchg
jns
fwait
adc
sbb
jbe
jl
xor
andl
mov
imull
sub
xchg
dec
fsts
xchg
ljmp
mov
or
mov
loopne
into
lods
adc
mov
aad
sbb
inc
add
dec
mov
rorb
jmp
bound
dec
stc
adc
insl
add
xchg
faddl
dec
jp
jnp
dec
push
dec
repnz
bound
mov
insl
dec
push
rcrb
xchg
inc
and
sub
dec
repnz
or
and
gs
jecxz
mov
mov
add
cli
xor
clc
xchg
push
fsubrs
adc
jmp
ds
xchg
popa
xchg
enter
dec
imul
fnstsw
xorl
adc
mov
fstl
je
adc
ss
xchg
add
sti
scas
dec
outsb
cmc
sbbb
cmp
repnz
fdivr
sbb
mov
push
mov
jo
call
call
mov
loop
cmp
adc
sti
add
fstl
je
scas
lret
push
cmc
repnz
xchg
or
stos
xor
push
out
adc
dec
andb
dec
call
test
or
lret
mov
cmpsl
fsts
cs
ret
or
pop
jo
add
jbe
mov
insl
movsb
sbbb
mov
dec
pop
jp
jne
shl
jb
inc
push
jg
lods
xchg
lods
mov
fldln2
mov
lock
movsb
in
mov
ss
or
sbb
fs
push
push
cmp
adc
ljmp
push
push
insb
push
enter
insb
test
pop
adc
cmp
test
push
aad
xchg
je
pop
dec
hlt
pop
xchg
in
insb
xchg
or
fisubrs
add
adcb
ljmp
out
ss
jns
lahf
jno
push
and
dec
sbb
sub
loop
imull
mov
xchg
mov
sbb
fcmovu
mov
hlt
dec
xor
cmp
push
std
add
cmp
fidivl
stos
cmp
outsb
je
xchg
adc
mov
and
or
outsb
xorb
les
inc
out
and
mov
or
insb
adc
cmp
cld
cwtl
in
dec
xor
addr16
push
add
dec
les
sti
bound
mov
clc
fcoms
lea
test
or
insl
jno
or
aad
push
push
stc
popa
or
push
cmp
imul
xor
mov
mov
rcr
mov
repz
repz
cmp
cmp
daa
fsubs
insb
das
push
imul
popf
or
or
hlt
mov
lahf
cmp
mov
mov
mov
add
push
lcall
lods
out
adc
jne
mov
fidivs
lock
mov
mov
push
add
mov
aam
cmp
loop
in
xor
iret
dec
jo
shlb
stc
fs
in
add
cwtl
xchg
hlt
pop
mov
adc
fisubs
mov
mov
clc
repnz
pop
out
aas
add
dec
scas
out
jge
cs
dec
paddusb
sub
call
jno
movsl
inc
aam
adc
sub
xchg
rcrl
addb
mov
cwtl
mov
pop
rcl
test
adc
jno
cmp
aas
inc
sbb
mov
js
icebp
mov
xor
mov
fists
sbb
xor
icebp
dec
push
clc
loopne
shlb
xchg
lea
inc
push
or
fildl
loopne
push
std
inc
stos
xchg
push
cs
loopne
push
mov
jmp
push
lret
ss
push
adc
mov
sbb
add
scas
nop
outsl
loopne
mov
xchg
sub
sub
stc
outsl
mov
dec
lret
int3
cmpsb
add
mov
dec
into
dec
mov
sub
jmp
daa
aad
pop
or
pop
test
into
sub
jle
stos
popf
lret
add
data16
mov
and
orb
fistps
pop
dec
mov
insl
and
scas
rorl
lods
mov
add
push
loope
fxch
pop
pop
repz
gs
scas
lret
push
jo
clc
cs
dec
mov
and
arpl
push
sbb
mov
mov
inc
jbe
dec
sub
popa
jae
inc
aaa
adc
insb
lods
pop
xchg
inc
and
les
arpl
sbb
xchg
lea
rorb
cs
mov
mov
xor
push
outsb
sub
mov
or
dec
mov
test
je
push
outsl
dec
xchg
mov
pop
lods
push
out
add
insb
mov
inc
addl
xchg
or
lods
xchg
and
mov
popf
repz
out
movsbl
or
pop
hlt
lcall
imul
hlt
mov
lret
inc
sbb
mov
mov
sahf
ds
sbb
mov
inc
or
ret
dec
push
add
movsb
rclb
mov
cltd
push
xlat
cmp
popf
cmp
jle
mov
mov
repnz
jb
sub
mov
scas
adc
fcomps
test
mov
pop
les
enter
inc
jae
cmpsl
pop
and
out
and
out
sbb
mov
mov
sub
and
popa
fdiv
pushf
ljmp
loop
and
mov
jns
add
fimull
xchg
ljmp
icebp
sub
xor
fbstp
out
outsb
mov
lds
in
test
insb
lret
loopne
and
add
or
insb
ds
sub
insl
lahf
daa
fldcw
mov
in
mov
mov
js
cld
cwtl
cwtl
push
adc
aas
push
pop
fsubrs
les
jg
push
sub
dec
mov
ss
in
sub
sub
mov
insb
jecxz
cwtl
cltd
aas
fsts
or
mov
cwtl
push
fildll
imulb
jge
arpl
addr16
icebp
pop
enter
out
repz
mov
sbbl
out
or
sbb
xchg
mov
pop
push
ljmp
inc
scas
adc
out
scas
mov
push
lods
popa
test
mov
sub
mov
cmpsb
xchg
hlt
sub
dec
pop
aas
mov
in
incb
adc
call
push
scas
mov
sub
dec
hlt
in
inc
push
repnz
shr
rclb
xchg
xchg
ds
sbb
or
jge
pop
jp
int
and
mov
cmpsb
push
adc
xor
sub
inc
movsb
std
jns
lock
mov
popf
xchg
scas
add
lcall
ror
xchg
fcmove
mov
jg
lock
rcrb
filds
mov
sbb
inc
mov
adc
in
test
icebp
adc
cli
test
push
push
dec
cld
out
in
cs
lods
push
in
mov
cmp
rclb
ljmp
xchg
nop
sbb
xor
xchg
push
mov
xor
inc
inc
pop
hlt
aad
aam
sub
imul
lret
insb
out
out
mov
ds
mov
push
clc
or
ret
movsl
stos
fsubs
loope
sbb
cli
insl
dec
push
cli
sbb
loope
dec
or
dec
pop
jns
fsubrl
mov
xchg
jne
sbb
jo
ror
xchg
lods
rolb
imul
pushf
fcoms
add
shrl
mov
ljmp
jae
mov
xor
js
aas
sbb
mov
test
mov
cmp
or
add
jb
pop
and
jb
aaa
loop
test
sarb
dec
jge
cli
daa
sarb
popf
test
test
xchg
push
push
add
xchg
push
mov
movsl
fdivp
lods
cwtl
dec
lea
push
push
test
test
pop
or
in
jnp
cmp
pop
xchg
cltd
adcb
mov
popf
jecxz
out
cs
push
push
shlb
fidivl
inc
bound
xchg
cmp
sbb
movsl
lds
pop
int3
es
adc
sub
call
xchg
sub
into
clc
cmp
das
pop
ljmp
xchg
shll
pop
jg
ror
inc
add
push
push
inc
xchg
xchg
mov
call
mov
aam
jb
shrl
push
jmp
push
pushf
add
mov
and
or
insb
call
lock
pop
rcr
call
pusha
xchg
lea
jns
lret
aas
xchg
lret
popf
ss
add
fnstcw
pop
or
and
xchg
pushf
sti
std
sub
ja
mov
add
arpl
or
shl
mov
aad
inc
in
push
rcl
movsb
inc
fldl
fisubl
call
sbb
adc
mov
ret
jne
push
jge
in
mov
sub
aad
popa
addr16
jb
shll
dec
pop
push
sbb
cli
pop
pop
lahf
jo
sahf
iret
inc
push
lcall
inc
xor
pushf
shlb
mov
push
in
jg
jp
pop
sbb
pushf
aam
bound
ret
pop
mov
push
int
mov
iret
pushf
fistps
push
inc
bound
faddl
insl
mov
lea
out
test
adc
lds
jge
push
adc
sar
shll
test
push
cmp
and
add
and
icebp
inc
lods
fcoms
lret
pop
sbb
shll
imulb
adc
xchg
scas
lret
xchg
rcrl
testb
jmp
insl
cmp
js
iret
arpl
loop
and
pop
xor
mov
xor
outsb
pushf
dec
shrl
cltd
loopne
scas
dec
loopne
push
fst
and
push
mov
add
pusha
mov
lcall
inc
or
push
pop
std
push
jne
movsl
jecxz
rol
pop
mov
arpl
mov
rolb
jns
imul
mov
mov
test
or
outsl
pop
js
xlat
out
lret
cmp
addl
movsl
push
jmp
lahf
sahf
pop
cltd
aas
xchg
dec
jb
cmp
cli
int
in
leave
jnp
gs
test
rorb
andl
add
cmp
repz
inc
cli
pusha
jnp
pop
outsb
dec
sbb
ss
int
mov
xchg
jge
fbstp
les
sti
loopne
jne
mov
fldt
out
decl
mov
adc
pop
cmpsb
test
test
add
xor
push
bound
or
add
daa
and
mov
adc
xchg
push
imul
movsl
lods
or
adc
pop
ret
jnp
sbb
pop
jno
addr16
jp
push
add
nop
ret
sub
cmp
or
add
push
sbbb
pop
and
dec
xchg
push
mov
lea
jo
popa
lods
nop
gs
scas
inc
ret
add
gs
movsl
sub
aad
call
dec
xchg
cmpsb
into
out
popf
cmc
xchg
or
add
je
lcall
cmp
les
lahf
scas
xchg
xchg
mov
ret
int
push
pop
dec
pop
loop
push
bound
and
sbb
int
mov
pop
inc
movsb
in
mov
sub
dec
int
xlat
mov
fistl
push
leave
and
sbb
arpl
fdivrs
in
cmp
test
adcl
cmp
data16
cs
scas
mov
dec
sbb
pop
in
lret
add
xor
and
int
push
lcall
aam
xchg
jnp
les
jno
icebp
sti
add
subb
xchg
push
repnz
mov
mov
xchg
fidivs
jae
fstps
sarb
jae
mov
pop
leave
lea
cmpsl
dec
lea
flds
dec
push
xor
add
push
neg
ljmp
fimull
cwtl
popa
add
mov
jp
pushf
les
lds
mov
dec
pop
ret
add
push
pop
lahf
dec
sub
add
xchg
shl
shl
xchg
fcoml
test
stc
dec
and
add
sub
loope
mov
pusha
ss
fnstenv
enter
shlb
test
push
inc
in
in
pop
push
pop
pop
ja
sbb
aaa
in
loop
mov
in
dec
out
popa
insb
mov
adc
push
mov
sub
pushf
addr16
add
add
adc
std
push
cmp
xchg
dec
pusha
dec
out
into
cwtl
push
imul
shl
fsub
out
mov
out
cmp
mov
test
cmp
leave
or
notl
mov
inc
mov
test
push
aaa
lds
int3
jp
mov
dec
addr16
or
push
imul
stos
nop
dec
into
rclb
into
adc
cmc
jge
mov
pop
cmp
ds
mov
in
gs
xchg
pusha
pop
loope
and
mov
sbb
dec
push
add
sub
sbb
inc
filds
flds
lock
loope
in
ja
test
aad
gs
int
ds
mov
in
sub
xchg
pushf
punpcklwd
push
imul
enter
dec
orl
and
jl
es
cmpsl
and
xchg
pop
inc
or
cmpsb
dec
dec
cmpl
pop
cmp
mov
cmp
sbb
loope
xor
xor
out
mov
dec
push
mov
pop
addr16
mov
cmp
ret
dec
sahf
sub
sbb
test
sbb
mov
xlat
lret
lods
jecxz
sub
and
push
fwait
popa
add
cmp
cld
loope
jne
stos
inc
fnstsw
sbb
jle
fwait
insb
xor
mov
es
iret
fdivl
mov
in
pusha
pop
mov
jl
lods
sahf
jmp
pop
jge
add
in
clc
jns
pop
test
fstps
pop
outsl
push
jle
inc
jo
loop
sahf
hlt
xor
pop
jno
aaa
dec
sbb
adc
ficompl
lret
shrl
push
or
rcl
nop
inc
sti
loopne
daa
jnp
bound
rol
sub
hlt
ss
leave
insl
adc
cwtl
sbb
xor
stos
jle
adc
sbb
add
rorl
push
dec
orl
xchg
adc
fcompl
mov
mov
xor
std
add
shl
and
xchg
loopne
pop
mov
in
add
aaa
mov
icebp
shll
in
mov
lret
cmovl
in
ret
jns
pop
into
cmp
cmp
xchg
mov
adc
ficoml
adc
clc
arpl
sbbb
mov
ja
ljmp
cmp
mov
gs
jl
inc
inc
mov
xor
out
movsl
ret
lret
or
push
xchg
push
and
pop
push
aam
mov
jp
push
sti
outsl
jne
mov
xchg
cmp
lahf
push
mov
je
shlb
pop
pop
subb
jl
jnp
sbb
pop
not
popf
jle
pop
movsb
ljmp
pop
in
inc
or
mov
sub
jo
fcomps
inc
out
jge
xorl
sbb
push
lock
and
push
sbb
scas
mov
sbb
push
std
mov
icebp
aas
inc
loopne
les
insb
or
or
scas
cmp
and
enter
ror
sti
aad
out
scas
sbb
shlb
sbb
xlat
push
lods
pusha
movsl
shlb
and
gs
inc
pop
mov
es
xlat
je
outsl
adc
add
inc
loope
lods
lea
pop
sbb
or
jecxz
int
hlt
test
addl
inc
sbb
or
push
sbb
jge
adc
popf
std
repnz
stos
aas
vfrczsd
pushw
enter
cmc
icebp
dec
roll
dec
lea
and
xlat
popf
imul
cmc
xor
jo
stc
daa
push
add
mov
cmp
mov
cmc
mov
mov
push
imul
adc
hlt
dec
push
xor
cmpsb
lds
or
les
gs
fs
xchg
sbbl
inc
arpl
mov
in
mov
rol
fcompl
inc
jne
loop
hlt
xchg
nop
push
xor
mov
stos
fsubrs
sbb
and
popf
sub
int3
inc
js
adc
hlt
dec
mov
and
stc
push
sbb
pushw
push
pop
jge
cltd
orl
out
stc
lahf
jl
lcall
xchg
push
imul
inc
mov
pop
add
jb
ljmp
std
pop
movsl
mov
xor
stos
pop
in
xor
and
aaa
notb
xchg
mov
jge
movsl
insb
mov
int3
pusha
mov
fstl
popa
push
dec
lods
das
lds
daa
aad
inc
cmpl
cmpsb
mov
lods
pop
cld
fiaddl
and
scas
movl
sub
mov
and
and
adc
enter
cmp
movsl
mov
shlb
fisttps
sbb
mov
inc
cltd
and
iret
mov
loopne
or
sbb
ret
push
sti
aaa
cld
test
ficompl
sbb
adc
insl
push
adc
ss
je
outsl
and
in
jnp
jae
enter
pop
mov
lret
adc
push
test
dec
fisubl
pop
jbe
rcrl
je
xchg
rcrb
or
and
mov
mov
mov
jecxz
sbb
insl
rclb
inc
xchg
nop
pop
pushf
stc
inc
push
mov
cmp
rcrl
loop
fstl
xor
movsl
xchg
jb
pop
adc
inc
rol
in
es
insl
leave
mov
pop
mov
hlt
sub
xchg
push
movsb
inc
test
jne
aam
xchg
repnz
dec
fimuls
mov
fcmovnbe
and
mov
jg
stos
and
mov
mov
nop
test
mov
clc
pop
outsl
repz
mov
add
clc
sti
add
or
cmpsb
add
out
adcb
or
add
mov
lahf
add
adc
inc
enter
xchg
rdtsc
fwait
inc
pop
add
ficoms
insb
outsb
jl
jne
popf
lds
iret
dec
lret
inc
mov
sub
cmp
and
cmp
loop
mov
jge
or
js
movsl
dec
arpl
ljmp
lahf
inc
shll
test
bound
and
popa
dec
nop
push
sar
faddl
call
or
sti
leave
push
sbb
push
repnz
mov
aad
xchg
mov
jae
mov
push
stc
daa
mov
and
xor
rorb
paddsb
mov
repz
mov
pusha
xchg
arpl
imul
cwtl
std
ds
cmp
push
dec
jne
bound
test
xchg
cld
pop
incl
jns
mov
leave
jle
incl
lcall
jnp
fnsave
xsaveopt
icebp
pop
insb
imulb
popa
imul
gs
sub
mov
sbb
jle
int
jae
lret
pop
xchg
pop
mov
pop
cmp
loope
sbb
inc
outsb
daa
mov
les
add
shlb
jb
decb
and
mov
mov
sbb
loopne
arpl
and
test
inc
xchg
inc
es
pushaw
out
add
mov
aaa
aad
pop
jg
mov
push
nop
imul
ljmp
pop
bound
gs
pop
imul
and
inc
sbb
jecxz
adcl
mov
ret
ret
flds
in
popl
rolb
pop
mov
xor
mov
mov
mov
mov
xlat
xor
fbstp
iret
nop
jne
push
sbb
xor
mov
sub
mov
subb
jae
xchg
sbb
xor
dec
out
inc
or
mov
cmp
and
arpl
sub
scas
xchg
popa
xchg
mov
dec
pop
sub
xlat
pop
sbb
les
xor
repz
mov
and
mov
or
lods
pop
mov
dec
fsub
push
push
sarb
loopne
pop
xor
jno
cli
rcl
adcb
sbb
or
mov
cmc
mov
jno
pop
scas
lcall
mov
add
bswap
mov
or
jmp
idivb
mov
lods
sti
addr16
push
subb
movsl
add
inc
test
mov
mov
addl
testl
stc
adc
xor
xchg
push
dec
imull
jnp
mov
adc
orl
cmpb
push
jle
sub
ss
mov
mov
cmp
jp
jns
pop
in
divb
les
adc
add
lods
fdivr
push
and
negb
cmp
jo
xor
es
jo
bound
loope
sbb
lea
enter
pop
outsl
clc
in
xor
mov
adc
sbb
movsbl
mov
subl
int
sbb
sbb
sub
adc
inc
lahf
ss
xchg
add
es
mov
jo
in
inc
aad
inc
fdivrl
cmc
push
pushf
xor
es
rolb
mov
leave
bound
cmp
sbb
pop
push
adc
push
aam
mov
and
icebp
mov
fists
adc
bound
dec
cld
lock
pushf
stos
add
aaa
test
cmc
adc
je
dec
js
cs
mov
shrl
pop
aam
lock
jo
sub
mov
sbb
lds
prefetchnta
pusha
ret
insb
jmp
iret
sti
scas
push
repnz
aaa
sbb
mov
push
push
ja
mov
sbb
xor
aam
outsl
test
std
and
stos
push
fsubrs
fnstcw
repnz
fwait
add
test
ret
xchg
mov
sbb
inc
shl
jle
popa
jne
mov
into
add
test
jle
cwtl
loopne
mov
cmp
mov
and
or
fildll
push
shll
mov
jl
pop
mov
adc
hlt
and
jne
push
pop
repz
pop
adc
dec
stos
rcll
cs
cmovno
cltd
mov
dec
pop
push
adc
lcall
mov
outsb
pushl
ret
in
inc
or
jbe
out
mov
mov
pop
xchg
and
outsb
jge
add
loope
mov
call
jae
inc
or
dec
cmp
insl
mov
inc
add
data16
sbb
or
scas
call
in
in
enter
test
fcoms
dec
imul
cmp
adc
dec
mov
add
or
xchg
push
add
leave
shl
xor
push
mov
xor
cmpsb
aas
or
adc
flds
cmp
or
mov
sub
add
cmpsl
dec
adc
jbe
mov
xor
mov
jecxz
lods
das
mov
hlt
test
cmpsb
ret
in
insb
mov
mov
test
mov
jecxz
fimuls
cmpsl
je
jno,pt
sbb
jbe
push
cmp
xchg
xchg
insb
shlb
mov
adc
cmpsl
negl
popf
push
jl
mov
mov
aaa
into
cld
jmp
ljmp
jge
pop
sbb
cltd
adc
sbb
mov
ds
jecxz
loop
in
add
iret
out
dec
test
push
xchg
dec
fdivrs
in
adc
aas
sub
fadds
inc
sbb
nop
call
xchg
popa
cltd
inc
arpl
out
mov
fcom
pop
test
dec
add
pusha
inc
sub
lods
dec
sub
push
dec
push
mov
les
mov
cmp
sbb
pop
rcl
fcmovb
mov
mov
xchg
inc
arpl
jecxz
jmp
orb
inc
xchg
sarb
xchg
mov
mov
cmp
sub
inc
jge
movsl
lret
mov
divl
xchg
xchg
mov
loope
add
inc
mov
jl
mov
xor
mov
mov
aam
shrl
insb
mov
and
xchg
dec
or
cmp
and
fimull
sub
repz
sbb
orb
stc
inc
mov
add
inc
movzbl
xchg
scas
adc
push
gs
outsl
lret
xchg
dec
adc
mov
mov
mov
in
fs
fists
f2xm1
outsb
adc
gs
or
cmp
rclb
mov
gs
fdivrp
pop
cmp
push
adc
and
bound
add
daa
mov
jmp
jno
aas
clc
sarl
in
mov
and
iret
loope
insl
jbe
stc
push
lods
addr16
pusha
scas
loope
xor
mov
inc
mov
mov
xor
call
mov
xchg
iret
aam
xchg
std
test
mov
ljmp
outsl
xor
dec
push
mov
pop
lea
push
cmpsb
pop
xor
cmpsb
inc
pusha
ja
mov
adc
imul
mov
lret
das
outsl
pop
dec
mov
fwait
sbb
or
push
movaps
lea
mov
pushf
fwait
dec
sahf
add
mov
lods
push
sub
das
push
mov
pop
loope
scas
daa
mov
insl
inc
shll
push
js
int3
or
push
shll
xchg
cwtl
or
lss
cmpsl
adc
pop
pushl
cmp
scas
ss
rcrb
dec
sbb
sub
sarb
lret
imul
inc
test
in
addb
push
add
fisttps
clc
jbe
push
das
push
cmp
dec
push
pushf
sti
cmp
pop
cmp
push
push
mov
pop
xchg
outsb
dec
inc
ret
sub
out
lret
push
mov
movsl
xor
adc
push
leave
inc
xor
imul
nop
inc
popf
lret
movsl
js
leave
dec
repnz
mov
icebp
cmp
rcrl
fistps
mov
or
adc
push
stc
das
sbb
pop
sub
xchg
imul
popf
pop
push
ja
or
cmp
add
inc
xchg
cmp
and
shlb
push
mov
sub
cmpsb
dec
push
mov
aaa
sub
pop
loop
sbb
out
xlat
inc
or
data16
dec
adc
lahf
test
std
ja
repnz
adc
sbb
rolb
popf
pop
jae
out
jbe
cmpsb
xor
scas
in
cmp
cmp
sbb
pop
push
sti
or
mov
pop
sbb
jl
xor
xorb
push
mov
out
cli
xchg
lock
mov
frstor
adc
mov
mov
xor
ljmp
xor
mov
mov
adc
or
sar
inc
and
fstl
fistpl
mov
mov
mov
cs
outsl
cmp
push
insb
push
lods
and
dec
cmpsl
pop
out
dec
xchg
mov
rcrb
mov
cmovae
xor
pop
decl
scas
out
or
mov
rcl
sbb
mov
inc
xchg
bound
repz
or
addr16
fisttpl
sub
lock
ja
mov
cltd
sub
push
sar
inc
dec
push
mull
inc
lods
jne
cmp
and
and
in
mov
scas
stc
test
mov
js
xor
adc
xchg
lods
pop
cmpb
dec
les
in
cmp
in
fmuls
pop
add
je
mov
dec
pop
orl
orl
shl
sub
test
arpl
ret
sub
sbb
and
sbb
fdivp
insb
call
aad
ja
dec
data16
and
xchg
aam
gs
repnz
out
sbb
lahf
mov
push
inc
stos
push
mov
mov
dec
cli
xchg
addb
xchg
pushf
lea
adc
pusha
int3
cli
mov
mull
pop
inc
popf
mov
sub
mov
pop
cwtl
lock
and
and
push
push
in
lods
lret
or
lcall
or
or
imul
cli
pop
cltd
cmp
xor
mov
push
mov
jne
jne
mov
inc
xchg
and
push
repnz
mov
pop
outsl
mov
push
or
es
test
push
cld
cwtl
cli
shrd
and
dec
mov
push
insl
ret
daa
push
adc
lock
icebp
lret
push
addl
outsb
loopne
fmuls
push
xchg
xlat
test
jmp
dec
out
and
mov
data16
dec
mov
sbb
aad
or
loope
xchg
jg
repz
mov
es
mov
mov
les
mov
aad
jb
jle
or
jecxz
jg
add
scas
jge
add
nop
scas
bound
mov
idivb
mulb
outsb
cltd
gs
jmp
jno
ss
add
leave
and
and
aaa
js
popf
aad
mov
xchg
repnz
inc
sbb
jno
xchg
xchg
negb
loop
xlat
daa
ret
dec
ss
add
dec
in
filds
sub
sbb
shll
cwtl
inc
and
incl
jl
jo
cmp
push
loopne
in
push
vmwrite
dec
test
cmp
push
push
adc
sbb
jne
inc
xchg
das
pop
sti
mov
lahf
pushf
push
cmc
out
and
push
push
cmp
mov
daa
lods
push
lcall
inc
mov
cs
std
inc
out
sbb
out
mov
sub
mov
pop
iret
inc
into
mov
es
decl
js
ljmp
addl
mov
jo
mov
sbb
lret
sti
mov
adc
pushf
mov
outsb
pop
push
sbb
xchg
dec
aam
jle
ror
add
push
cmpsl
mov
pop
inc
cmp
push
cmpsb
dec
int
aad
clc
xor
sbb
test
pop
jmp
mov
hlt
xor
push
leave
xor
lds
xor
mov
hlt
cs
test
fldl
nop
pop
mov
scas
push
cmp
daa
lea
push
cmpsb
aas
push
adc
scas
fyl2x
insl
icebp
dec
aas
pop
mov
insl
add
push
xor
mov
fwait
sbb
scas
mov
push
jg
xchg
cltd
push
int3
adcl
lahf
ja
js
dec
out
jae
lret
cmp
add
repz
in
mov
push
inc
dec
subb
aam
in
out
xor
stc
sub
out
testb
icebp
shlb
push
pop
es
repnz
mov
mov
sub
loope
sub
jne
inc
mov
movsb
enter
loope
push
and
imul
xchg
test
lock
add
mov
add
inc
test
cmpsb
in
testl
dec
jp
dec
jnp
xor
mov
xor
mov
cmp
cmp
jl
mov
js
stc
xchg
js
mov
cld
xchg
jp
jp
gs
out
rorb
std
xchg
adc
dec
push
test
popf
push
cld
pop
push
jo
sarl
or
xchg
cmp
xchg
call
lahf
cld
xor
into
ss
ficoml
leave
jg
test
jecxz
xor
movsl
inc
ret
clc
mov
ss
and
dec
mov
jno
jp
call
frndint
addb
jne
sub
aam
aam
jp
fdivr
sbb
out
ss
jl
mov
aaa
test
int3
jmp
orb
jo
mov
add
loop
movl
movsl
jg
nop
sti
pop
pop
sahf
mov
pop
jmp
fistl
dec
adc
pop
loop
nop
add
cmpsl
cmp
jbe
xlat
pusha
icebp
jmp
mov
push
mov
cmpsb
xor
adc
inc
inc
mov
push
adc
cmp
mov
dec
mov
cld
fildl
jp
dec
or
xchg
adc
int
aad
mov
das
lock
sub
pop
cltd
xor
fwait
push
test
jl
sbb
pop
mov
adc
pop
mov
ja
push
xor
shll
cmpsb
cmp
xor
cld
mov
int
dec
dec
into
dec
jo
xchg
push
dec
dec
fdivrs
aad
pusha
xchg
fdivrl
adc
xor
xchg
or
adc
rcrb
sbb
jo
xchg
loopne
and
les
dec
cmp
lahf
push
adc
jmp
aas
ficoms
mov
enter
dec
xchg
mov
addl
dec
and
mov
sub
inc
addr16
inc
mov
ret
movsb
lret
ficoms
fwait
sub
rcll
and
add
xor
fwait
mov
movsb
or
lds
adc
aas
cld
pop
cmc
leave
in
not
xchg
cmp
inc
pop
jae
add
cld
ret
out
add
push
std
gs
shll
popf
mov
nop
xchg
jmp
sbb
stc
outsl
sub
divb
cmpsl
dec
push
fdivrl
lock
fldt
sbb
in
int
imul
call
adc
lea
sarl
stc
addb
ds
insb
ja
add
mov
jecxz
cmp
in
stos
loope
mov
or
rorb
or
mov
insb
lea
fiaddl
ds
sahf
stc
xlat
ret
xchg
mov
push
repz
sub
test
sbb
cmp
cmp
mov
cld
in
push
sub
ret
jg
loopne
stos
nop
push
shlb
mov
pop
cmp
adc
push
or
fs
mov
into
push
leave
mov
adc
arpl
inc
jmp
je
or
mov
loop
dec
adc
xor
mov
xchg
cvtps2pd
lods
lock
add
jg
addr16
xor
mov
mov
xchg
jecxz
shl
sub
adc
xchg
fldl
orl
in
mov
aam
cltd
stos
jmp
xchg
sbb
cs
cmp
pop
aaa
xchg
jae
insl
adc
add
int3
mov
push
push
fstps
jo,pt
lret
xlat
pop
nop
dec
not
inc
and
adc
lahf
add
xchg
out
jle
sub
push
adc
stos
into
lret
aas
insb
push
aam
push
hlt
cmpb
mov
add
sti
stos
xchg
lock
mov
aam
sbb
mov
test
pop
mov
js,pn
fwait
and
mov
je
sar
pushf
or
push
insb
dec
int3
lds
and
into
xchg
push
mov
iret
rdtsc
lret
nop
xor
xchg
repz
inc
xor
clc
sti
or
pop
xlat
mov
adc
mov
stc
inc
pusha
int3
ret
outsb
add
test
xchg
xor
test
jge
popa
stos
mov
lods
pop
in
sub
arpl
xor
mov
into
loope,pt
gs
jne
popf
add
scas
sbb
sahf
aas
pop
idivb
pop
shrl
dec
sub
test
lret
mov
pop
lock
push
outsl
rcll
ss
clc
mov
cli
jo
push
sbb
outsl
or
inc
rolb
fnstsw
loopne
lea
je
mov
fisubrl
lcall
cmp
inc
bound
pop
and
test
jl
outsl
add
daa
mov
pop
das
cmpsb
xor
push
mov
js
repnz
xor
pop
into
vpminsw
pop
cltd
mov
push
pop
pop
sbb
cmp
inc
movsb
xchg
mov
xor
xchg
test
pop
fidivl
addr16
mov
xchg
adc
jnp
loopne
mov
adc
shrl
push
add
mov
arpl
mov
scas
pop
jae
test
xchg
stc
ja
jle
cltd
mov
push
xchg
inc
mov
adc
jmp
imul
ret
push
jb
add
and
int
sbb
sub
adc
in
sbb
mov
add
xor
mov
inc
lret
dec
lret
inc
push
xchg
inc
and
lods
pop
xlat
inc
mov
dec
and
xor
xchg
div
xchg
lahf
mov
orb
stc
dec
fldcw
mov
sub
xchg
out
mov
sbb
mov
mov
or
push
sub
out
mov
cmp
adc
xchg
insb
mov
fldenv
fdivrs
test
inc
and
jl
das
je
sbb
dec
in
add
mov
jl
subl
imul
mov
shlw
mov
and
adc
dec
pop
scas
stos
jne
leave
dec
lret
decl
add
add
mov
push
adc
lret
or
mov
xchg
jae
scas
xchg
adc
ja
arpl
pop
xor
sahf
xor
or
repz
mov
pop
fistl
push
out
jns
in
and
sbb
test
outsb
add
mov
scas
xchg
cmc
push
imul
jnp
mov
popf
dec
test
hlt
cmp
in
int3
rclb
inc
cld
sub
lcall
jae
roll
add
movb
lcall
fmul
pop
xor
inc
imul
inc
jle
push
sarl
cli
sbb
cli
adc
add
in
test
inc
cmpsb
push
cmp
in
dec
lods
adc
mov
push
mov
xchg
test
int
ljmp
std
dec
pop
mov
popa
loope
push
xchg
xor
mov
movsl
or
nop
pop
sti
jb
lcall
dec
mov
pop
fisubs
cld
pop
sbb
cld
out
incb
pop
pop
sahf
call
aam
into
stos
xor
out
jns
pusha
push
fs
xchg
pop
rorb
outsl
test
push
in
pop
scas
dec
fistps
mov
mov
xchg
std
jle
jae
pop
dec
xor
aad
stc
in
mov
fcoms
rol
jge
sub
mov
mov
sbb
pop
adc
ds
push
bound
stos
add
movsl
pop
pushaw
popa
xchg
push
cmp
jns
rcll
out
or
test
stos
dec
adc
std
lods
push
bound
dec
pminub
js
adc
jb
mov
and
xorb
adc
xchg
fwait
mov
cmp
mov
outsl
pop
data16
adc
call
leave
fisttps
test
insb
xchg
fdivl
sbb
loop
ret
jl
add
jl
mov
fcomps
cmp
ds
pop
aam
push
int3
mov
hlt
pushf
jb
xor
jns
out
pop
add
lret
call
movsl
aad
mov
ficoml
cwtl
scas
pop
sub
clc
stos
or
ret
jge
xor
loop
repz
fdivs
mov
pop
adc
fisttpl
in
lcall
es
mov
pop
push
cmc
xor
icebp
int
fcmovnu
loop
in
xor
dec
fnsave
jmp
shl
push
xor
cltd
imul
push
test
mov
lret
mov
das
add
lahf
xor
popl
sarb
outsb
xchg
dec
rcll
jno
mov
bound
into
or
mov
jecxz
das
xorb
jae
repz
out
mov
mov
aaa
or
pop
pop
stos
sub
xor
xchg
sbb
pop
bound
outsb
aaa
jge
mov
jg
negl
or
ret
hlt
lea
into
xchg
enter
cmc
xchg
push
mov
add
int3
jae
inc
cwtl
pop
or
ds
xchg
xchg
in
inc
fdivs
scas
je
fcmovb
xor
imul
mov
cld
loopne
pop
mov
jmp
mov
call
mov
das
sub
adc
sub
sub
aam
xor
je
repz
jecxz
fucomi
and
xchg
loop,pt
cmp
loopne
cmpsl
out
test
jecxz
pop
cltd
jl
or
inc
adc
in
fsubrs
mov
cmp
mov
int
jecxz
lea
sub
mov
jg
pusha
inc
add
jge
fldl
mov
arpl
jo
add
jge
js
out
mov
cltd
testb
sub
int3
pop
imull
ja
xchg
inc
lds
shlb
aas
jg
and
push
mov
inc
mov
ret
sub
push
adc
jmp
cmp
lock
dec
dec
enter
cmp
push
add
popa
aam
out
and
mov
or
lahf
adc
add
xchg
in
pop
dec
test
sarl
sbb
sbb
adc
or
ja
inc
movsbl
mov
rorb
fildl
mov
xor
bnd
inc
xchg
mov
outsl
mov
cwtl
pop
add
xor
add
fldt
arpl
push
add
jae
imul
mov
iret
lcall
ljmp
adc
xchg
inc
andb
pop
jle
pop
pop
in
dec
das
or
push
pop
dec
insb
icebp
mov
jmp
jae
xchg
pop
pop
and
sbb
aas
xorb
xchg
test
ret
aam
sbb
fs
push
cmc
add
pop
fildll
pop
nop
lret
hlt
jns
mov
and
std
imul
cs
jle
cmp
lea
nop
or
outsl
jg
jge
repnz
hlt
add
push
lcall
out
icebp
dec
xor
ret
jmp
lea
pop
dec
xchg
xchg
in
andnps
pop
jle
loop
mov
add
hlt
and
lds
popf
out
shll
fidivl
repnz
movl
mov
xlat
fcom
adcb
repnz
insb
sub
and
inc
mov
jae
xchg
push
add
repnz
cmp
mov
inc
lods
into
es
imul
sbbb
mov
lods
xorl
push
jg
stc
loop
and
imul
dec
repz
mov
xchg
push
jge
mov
cmp
ja
movhps
mov
inc
push
test
shrb
cli
add
bound
int3
ficoms
sub
dec
pop
aad
fimuls
xchg
stos
loopne
xchg
andl
mov
lret
lods
xchg
jb
faddl
pop
pop
xchg
nop
mov
and
repz
jne
hlt
add
mov
jae
pop
cmpb
xchg
loop
push
data16
add
fisubrs
les
jmp
push
mov
gs
testl
fs
gs
lret
outsb
ljmp
cmc
cvttps2pi
iret
fwait
adc
jmp
addr16
jmp
out
sbb
push
ljmp
cwtl
mov
or
dec
stos
adc
cmp
mov
inc
or
inc
jne
pop
mov
push
ret
jp
add
ds
add
jno
xor
xchg
cmpsb
std
sub
add
sahf
lods
sbb
push
and
mov
adc
bound
or
xchg
or
xor
mov
xchg
xchg
push
gs
js
mov
flds
stc
lret
adc
jbe
pusha
push
out
aad
test
pop
xchg
outsl
insb
pusha
pop
jns
loope
shlb
shrl
pop
pop
jns
js
scas
pop
int
sub
enter
mov
leave
testl
mov
stos
je
fdivl
jae
jnp
adc
subb
out
test
les
cmp
cmp
mov
or
ja
sar
gs
outsl
mov
je
into
push
cmp
fiaddl
lahf
or
pusha
pop
pusha
insb
sbb
push
mov
in
pop
aas
ds
test
shrb
push
jge
shll
cmp
ja
int
jo,pn
lahf
push
sub
mov
leave
add
mov
cmc
shlb
sbb
je
aas
pop
call
call
call
stos
jnp
fstpt
jno
testb
pop
pop
les
fisttpll
inc
mov
inc
jns
mov
fadds
mov
test
mov
pop
mov
and
stc
sbb
mov
xchg
xor
out
push
sbb
pop
sbb
ja
adc
add
jo
xchg
push
sub
test
inc
add
fs
push
or
mov
in
les
out
xorl
ljmp
sarl
mov
sub
or
in
push
pop
sub
cwtl
lret
add
mov
imul
stos
int
cmp
mov
je
sbb
addl
leave
out
call
adc
pop
cwtl
cmc
jmp
out
jae
xor
dec
inc
imul
loope
js
iret
mov
test
cmp
xchg
mov
insl
push
lret
pop
lret
in
and
fcoms
pop
cmp
push
das
dec
jle
icebp
rolb
bnd
push
fwait
repz
jl
xchg
das
xchg
xor
xchg
and
inc
popl
dec
es
push
clc
std
adc
stos
aaa
mov
pusha
sbb
dec
rcrb
pmaddwd
sbb
cmc
push
fcoms
test
pop
inc
rorb
dec
or
int3
add
fcmove
shlb
ss
push
dec
xor
aas
inc
mul
cmp
daa
jmp
pop
hlt
jnp
xor
mov
mov
sti
push
lea
push
cmp
arpl
mov
push
pop
ja
xor
adc
sbb
ret
pop
jo
xchg
jnp
sti
adc
test
xchg
out
sahf
pushf
jns
fiaddl
adc
hlt
je
sarb
jl
pop
push
enter
enter
add
pop
fdivs
mov
inc
xor
pop
insb
push
repnz
xchg
push
andl
push
push
mov
sub
pushf
sub
lret
inc
sbb
push
dec
clc
inc
adc
ret
leave
scas
push
adc
shr
cmp
pop
jb
and
jle
and
movsb
xor
sarl
lahf
pop
mov
cs
mov
imul
test
rcr
mov
addr16
popa
das
mov
ret
xchg
in
outsl
or
ds
push
add
push
icebp
mov
mov
out
push
mov
xchg
fnstcw
mov
shrl
or
jo
pusha
xchg
les
jb
lods
push
mov
and
xchg
jl
and
enter
pop
push
movsb
push
fcmovb
bound
std
aad
scas
cli
mov
ret
ds
sbb
movl
and
dec
xchg
adc
push
mov
push
lret
jmp
ljmp
sahf
imul
mov
insb
jae
dec
outsl
js
outsl
mov
adc
popf
jne
aad
add
push
fisubrl
fisubrs
jp
inc
in
mov
mov
repnz
pop
cli
jns
jne
ss
mov
mov
mov
adc
fstl
inc
fisubrs
cli
or
dec
shr
push
dec
xor
mov
jno
stc
xchg
cmp
testb
add
imul
ficomps
lret
fs
mov
sbb
push
cmp
and
inc
mov
mov
out
or
lds
xchg
push
xchg
inc
cmpsl
ret
sti
sbbb
mov
iret
out
xchg
push
push
mov
mov
or
cli
xor
jl
dec
adcb
pop
fstps
enter
pop
inc
xchg
icebp
popf
lods
mov
mov
adc
icebp
xor
ret
mov
sahf
mov
mov
movsb
sti
cmp
out
mov
ds
and
pop
jb
jbe
push
cmp
into
cltd
jmp
dec
mov
scas
fs
addr16
cmc
mov
aam
inc
popa
cmpsb
es
push
xchg
jl
outsb
cmp
jl
jno
and
mov
jb
push
push
in
inc
inc
jg
insb
add
rorl
icebp
test
sub
shll
stc
jnp
pop
mov
or
xor
pop
arpl
lret
test
dec
test
inc
xchg
gs
add
mov
lds
push
imul
xor
mov
pop
int
mov
push
xchg
push
stc
pop
movsb
mov
jno
cltd
mov
rcll
push
lret
dec
sbbb
mov
mov
stos
call
adc
fstpt
xchg
xchg
in
or
out
rclb
inc
orl
cmc
fstps
pop
dec
es
sbb
fwait
pop
scas
mov
sub
mov
shl
hlt
mov
or
xchg
xchg
dec
pop
ja
movsb
fucomp
push
sbb
fcomip
sti
call
enter
jo
cmpsb
dec
test
xchg
jno
push
cld
insl
or
cmp
fidivl
ja
out
cmc
roll
imull
insb
or
jge
sub
ss
bound
movsb
lods
pop
out
push
add
dec
mov
jo
fldlg2
inc
jnp
push
cmpsb
insl
jns
aam
push
inc
cld
fwait
imul
clc
std
mov
pop
jl
mov
xchg
jmp
cmpsb
repz
enter
sti
sahf
pop
sub
pop
clc
ret
cmp
jns
in
test
cld
jge
cmpsb
int3
cmp
mov
testb
mov
inc
das
fwait
cltd
sarb
add
imul
movsl
jp
cmpsb
xlat
push
xchg
ja
jecxz
or
xor
adc
imul
lea
jmp
jb
hlt
imul
dec
push
inc
add
sub
mov
std
adc
fsts
or
popf
mov
adc
test
mov
data16
hlt
xchg
or
sub
je
jmp
mov
out
mov
arpl
jno
jno
les
lcall
sbb
push
xchg
xor
ds
and
sbb
mov
loopne
js
sub
lock
sti
mov
mov
stos
out
sbb
lret
xor
push
xor
mov
insb
add
sar
pop
mov
enter
push
xchg
daa
cmc
daa
dec
movsl
mov
rcr
push
iret
stos
sub
icebp
sub
pop
pop
cmp
js
movsb
inc
xor
push
dec
push
add
fcomp
adc
sbb
ret
xchg
dec
adc
and
add
mov
pop
enter
pushf
jge
adc
push
call
sbb
lret
ljmp
aam
inc
jl
pop
or
pop
adc
rcl
mov
dec
lahf
xor
shrl
and
xchg
bound
jl
inc
loop
test
arpl
push
fmull
ljmp
addr16
cmovnp
pop
clc
ret
push
js
fidivrl
imul
push
add
sbb
stos
movsl
pop
mov
xor
fwait
mov
popf
mov
in
pop
or
in
mov
inc
push
lock
cltd
leave
imul
es
mov
lods
aam
jb
cmp
xchg
xchg
xchg
mov
push
out
cli
sbb
sbb
mov
out
jbe
aad
repz
cwtl
jns
push
add
cmc
mov
mov
mov
mov
fidivrl
or
add
and
pusha
mov
fcmovnbe
es
shll
mov
daa
aad
mov
xor
bound
stos
push
mov
dec
mov
push
gs
iret
movsl
inc
repnz
or
pop
adc
pushf
cmpsl
push
sbb
mov
bound
setg
add
cmp
in
lods
dec
jcxz
je
mov
mov
mov
mov
mov
in
in
pushf
xchg
sbb
mov
andb
pop
mov
mov
cli
mov
inc
sub
sbb
jmp
xor
cmpsb
insb
ljmp
jne
mov
in
cmpb
mov
cmpsb
ldmxcsr
push
fwait
push
fldl
pop
repz
test
xchg
cmpl
sbb
bound
sub
idiv
je
iret
inc
into
adc
jns
mov
sbb
filds
movsb
aad
cmpsb
outsb
pop
es
test
fcoml
mov
aas
out
jne
lods
jbe
push
adc
out
mov
add
les
in
imul
arpl
pusha
call
andl
ljmp
hlt
repnz
and
gs
arpl
adc
xor
and
sbb
aad
pop
jbe
adc
fiaddl
cwtl
fdivrs
mov
repnz
lods
sub
out
call
rorb
push
roll
jecxz
repnz
adcl
and
sbb
idivl
xchg
popf
fs
movsb
ficoml
roll
and
sub
mov
andl
mov
test
cmp
lret
in
xchg
xor
jg
jo
mov
jbe
mov
daa
inc
dec
pop
xrstor
lock
imul
xlat
jo
outsb
push
adc
cmp
je
test
pop
fstpt
ret
jns
mov
enter
shrl
subl
out
mov
mov
fs
ret
jnp
and
loopne
mov
mov
push
lcall
mov
je
jmp
dec
push
call
addl
push
bound
out
xchg
adc
jmp
js
lahf
cmp
sbb
mov
andl
sub
ret
roll
mov
jmp
inc
sti
in
insl
adc
sbb
fisttpl
jno
sbb
addr16
pop
add
fadds
gs
sbb
shll
into
or
adc
lds
push
iret
lret
sbb
adc
cmp
adc
pop
test
lods
dec
dec
cmpsb
dec
mov
lea
dec
nop
adc
in
push
sti
fcmovnbe
ljmp
add
test
test
or
push
dec
inc
cmpl
cld
add
pop
fimull
sub
lret
jae
pop
push
cmp
mov
and
inc
cli
mov
sbb
or
lret
or
add
inc
cli
testl
movl
fs
leave
mov
aad
outsb
js
pop
sub
jbe
fimuls
cmp
lret
inc
shl
call
jle
daa
pushf
cmc
xchg
in
fs
int3
fsubrs
pop
dec
pop
orl
pop
sbb
push
js
fistpl
fs
inc
call
dec
outsl
fbstp
mov
or
jnp
inc
bound
ljmp
push
popf
push
push
xor
ret
fisubrs
and
inc
or
pop
gs
mov
inc
dec
mov
xor
jge
mov
push
or
popf
push
cmc
push
addl
add
jecxz
sbb
push
mov
mov
add
and
dec
or
mov
lods
sub
sub
jl
jl
js
dec
xchg
divl
rcll
and
mov
cli
cwtl
push
pop
bound
mov
aam
mov
icebp
pop
test
inc
add
mov
jnp
xor
xchg
enter
sub
stos
push
jmp
mov
in
adcl
loop
jnp
inc
sub
xor
adc
inc
cwtl
push
pop
or
inc
fnstenv
jns
pop
lea
ja
jnp
and
cmpsl
pop
or
add
push
negl
int
adc
aad
sub
popf
in
pop
cmp
xchg
mov
repz
ret
push
shll
xor
imul
popf
push
and
shlb
loopne
push
aam
sub
stos
dec
pop
sti
and
insb
push
adc
xchg
jnp
sbb
into
push
ficoml
enter
inc
pushf
aaa
mov
cmp
sbb
sbb
mov
enter
stos
jecxz
push
sbb
pop
mov
cwtl
lea
lds
fwait
adc
repz
dec
ja
dec
xor
ja
push
jne
jg
dec
popa
imul
or
push
rclb
inc
or
mov
or
pop
pop
ret
push
lahf
insl
cmp
arpl
mov
lret
mov
add
pop
es
aad
jae
mov
and
loop
xlat
inc
adc
pop
xor
inc
fmuls
arpl
mov
out
cmp
outsb
aas
loope
mov
sub
movsb
jbe
cmp
jmp
pop
mov
fisubl
and
mov
fucomip
inc
sti
inc
push
and
call
and
mov
add
mov
das
xlat
mov
loope
mov
pop
test
xchg
paddd
out
mov
or
test
sub
test
lods
or
je
arpl
out
dec
lret
lea
fldl2e
push
stos
sbb
jmpw
iret
mov
push
dec
loop
inc
pop
ficomps
inc
mov
pop
sti
stos
push
and
imul
add
dec
test
cltd
fidivs
jg
mov
inc
jbe
loopne
adcb
xchg
ljmp
jbe
rorl
fs
scas
pop
cli
sub
adc
mov
push
jl
sub
dec
fdivrl
lret
cli
or
lock
mov
jecxz
aaa
lahf
int
movsb
and
scas
addr16
xlat
aad
push
mov
push
cmp
add
or
mov
fistpl
sub
adc
mov
mov
repz
les
sbb
rcrl
fwait
sub
popa
xor
les
or
add
jne
pop
sbb
xor
inc
cmpsb
sbb
pop
add
xchg
xchg
lahf
cmp
scas
ret
iret
mov
jmp
cmp
xor
dec
dec
ret
je
jb
adc
ljmp
imulb
testb
lods
dec
outsb
pop
dec
sbb
fmuls
mov
sub
adc
stc
pmuludq
ret
add
pop
push
ret
test
rol
insb
add
aaa
sub
push
jg
and
lods
xchg
icebp
fs
xor
push
jmp
int3
jo
or
aad
imul
jmp
xor
mov
data16
je
fs
push
in
sbb
mov
dec
std
dec
cmpsl
xchg
push
aaa
inc
jae
mov
inc
or
mov
mov
add
push
mov
xchg
cmp
loopne
outsl
adc
mov
outsb
push
mov
xor
jb
icebp
jecxz
mov
mov
sahf
cld
dec
fcmovnb
add
addr16
mov
cld
cmp
inc
jge
cmpsl
pop
in
jecxz
rorl
xchg
stc
lcall
push
loop
cmp
jmp
insl
add
dec
addr16
xor
movsb
sarb
outsl
std
icebp
jno
insb
arpl
fldcw
outsl
adc
clc
lahf
inc
insb
xor
lret
cmp
mov
mov
lea
xchg
adc
cli
rcrb
mov
xchg
sbb
mov
in
pushf
cwtl
pop
or
notb
ljmp
pop
lea
movsl
shlb
add
pop
lret
ds
sub
fimuls
repz
adc
fwait
adc
nop
dec
pushf
in
lea
int
cmp
dec
scas
push
insl
pop
pop
ficoms
adc
mov
mov
and
in
or
into
dec
mov
lock
lods
in
push
push
push
pop
or
inc
popa
jl
dec
inc
notb
pop
mov
ret
and
or
mov
or
jne
cltd
push
pop
mov
aam
subb
popa
inc
repz
cmp
jg
scas
hlt
enter
fsubs
pop
pop
clc
mov
mov
pop
stc
fs
mov
loopne
mov
cld
mov
jp
adc
inc
fistps
movsl
xchg
insb
push
dec
sbb
rclb
mov
rcrb
and
or
scas
sub
imul
xor
mov
movsb
sub
and
jno
sbb
das
and
inc
aaa
lods
in
mov
adc
leave
xchg
or
lcall
inc
loope
nop
inc
popf
int
jnp
xchg
stos
mov
push
ficompl
fcomps
fnstcw
dec
mov
inc
outsb
das
loopne
mov
xor
add
mov
or
mov
adc
out
pop
sbb
hlt
aaa
arpl
xor
xor
inc
movsb
rclb
xlat
clc
dec
mov
lds
jmp
dec
sbb
push
sarb
shlb
jg
mov
roll
pusha
push
ret
lret
aas
xchg
push
fucom
das
fcmovbe
ret
int3
add
loop
push
jns
loop
add
orl
jne
pushl
lods
dec
add
sub
xor
xchg
adc
sub
jmp
mov
sbb
imul
lock
in
in
js
lods
push
and
jge
roll
addr16
mov
outsl
push
ss
add
shrb
cmp
ds
push
mov
gs
out
cmpb
movsl
or
mov
push
push
into
xor
aad
add
mov
jne
push
jmp
adc
xchg
mov
dec
ds
cmp
jle
cli
shl
ret
aaa
mov
lcall
shl
pusha
xor
idivl
scas
cli
outsl
test
mov
or
testb
xchg
ficomps
xchg
inc
pop
sbbl
hlt
push
jecxz
xor
pop
stos
sub
mov
in
lock
inc
mov
loope
cmp
gs
dec
sbb
dec
ja
xor
es
decl
je
mov
adc
push
cmp
xchg
out
add
ret
addr16
lods
xor
mov
xor
add
iret
lahf
into
js
bound
mov
cmp
cmp
xlat
push
jge
adc
adc
pop
cwtl
pop
pop
mov
out
mov
int3
mov
lret
pusha
ret
adc
dec
lret
nop
inc
adc
jns
mov
daa
and
ds
and
sbbl
arpl
adc
jno
pop
pop
push
push
jbe
sub
fs
mov
xorl
push
popa
push
call
cwtl
xchg
mov
pop
xor
cmp
sbb
jae
jno
dec
mov
mov
mov
pop
ljmp
inc
in
or
mov
cs
xchg
sub
mov
xchg
cwtl
or
imul
imul
int3
test
ds
pop
mov
push
mov
test
fs
ss
xor
or
push
add
dec
mov
icebp
call
imul
sub
outsb
add
inc
adc
jle
or
shll
shl
xor
ja
sub
xor
and
jmp
push
mov
sahf
adc
dec
or
cwtl
lods
inc
out
jmp
dec
inc
dec
or
lds
aas
mov
and
mov
roll
daa
inc
mov
mov
das
scas
jno
int3
call
adc
or
or
sarb
and
inc
dec
xchg
inc
in
lahf
divl
aad
cltd
mov
add
fst
mov
out
push
ss
test
div
xchg
stos
int
sbb
push
scas
es
or
jnp
push
xchg
enter
sub
adc
add
jne
push
js
jae
sub
inc
and
enter
out
or
ret
stos
and
cmc
dec
mov
out
ds
jmp
daa
addr16
mov
clc
pop
add
mov
lcall
pop
mov
clc
push
fdivr
pop
pop
lods
sbb
jecxz
popa
push
subb
lods
xor
push
xchg
fs
fists
outsl
fbld
add
aaa
aam
cmpsb
cmpsl
shlb
gs
pop
mov
fisttpl
int
jge
out
or
inc
push
incl
xchg
pop
movsb
test
int
mov
outsl
movsl
int3
lods
mov
ja
test
fldl
std
or
aam
mov
and
clc
push
das
push
nop
fcomps
call
and
cs
pop
mov
and
pushf
lcall
sbb
dec
or
pushf
sub
jl
jne
xchg
xor
aam
push
icebp
inc
arpl
xor
inc
lds
popa
dec
add
pushf
push
cwtl
shrl
ret
xor
pop
enter
fsub
into
lock
sub
out
or
lcall
adc
push
push
pop
out
dec
iret
jno
mov
sub
insl
push
jbe
or
xor
xlat
scas
cli
popf
sbb
sbb
aaa
scas
add
test
xor
sub
mov
and
dec
inc
in
or
mov
jl
push
add
lret
testb
xchg
and
mov
fnstenv
jge
mov
pop
or
sub
pop
insl
or
shrb
mov
add
into
test
sbb
push
fsubr
in
notl
leave
movsb
shll
sysenter
cld
sub
or
dec
fwait
stos
mov
shrl
sbb
je
testb
mov
insb
aas
dec
sahf
cmp
sub
mov
popf
gs
jg
ja
cli
inc
fdivrs
inc
in
mov
call
mov
loop
rcrb
mov
push
fcom
jmp
fs
or
fwait
imul
push
sbb
mov
mov
je
lahf
mov
test
or
xchg
cmp
hlt
adc
nop
leave
or
movsb
hlt
xchg
sub
inc
jmp
bound
hlt
cltd
mov
pop
mov
pop
pop
xlat
dec
mulb
push
mov
jns
cmpsl
int
cmp
sbb
mov
push
jl
movsb
jmp
inc
jns
or
paddsw
fildll
pop
imul
rclb
sbb
neg
and
push
push
out
xchg
addr16
mov
inc
adc
add
int3
mov
or
cmp
scas
in
arpl
outsl
and
jmp
mov
popa
cmc
test
inc
cmp
lock
jnp
sahf
jno
xorl
pop
jae
sub
fwait
push
xchg
push
lret
dec
dec
jnp
aam
fstl
popa
lds
xor
pop
adc
subl
add
xchg
cli
xor
aad
mov
popa
inc
fs
mov
sub
jge
test
push
js
jp
adc
decb
jo
loop
fistpl
cltd
aad
in
test
jmp
sub
pop
mov
jmp
stc
sbbl
mov
leave
pop
cmpsb
outsl
mov
xchg
fidivrl
lahf
add
push
fnstsw
sbb
test
out
inc
dec
add
cmpsl
lcall
push
jg
mov
rcll
push
dec
xor
lea
jo
sbb
inc
add
mul
fidivl
adc
lret
nop
mov
in
mov
sbb
leave
cmp
dec
mov
dec
lods
enter
pop
shll
fisubs
mov
bound
xchg
cmpsl
cli
pop
int
sub
decb
dec
dec
xchg
clc
cmp
mov
mov
push
pop
repz
jb
xor
jecxz
xor
loope
cmc
popa
cmp
mov
and
repz
push
xor
movsl
sti
test
mov
fldcw
aaa
cld
xchg
jle
insl
mov
addb
je
out
lcall
loop
or
sbb
and
xchg
out
scas
xchg
test
mov
cmp
stos
aam
imul
cmpl
pop
sub
push
mov
or
pop
in
test
es
incl
inc
je
adc
jnp
xchg
orl
xchg
add
call
into
rolb
inc
sbb
xchg
rol
sahf
int
and
lret
mov
sbb
sub
shrd
cli
and
xchg
sbb
pop
pop
jae
xchg
rolb
mov
inc
push
clc
push
mov
push
aas
fdivrl
sarl
adc
push
mov
leave
fwait
aaa
jmp
pop
dec
cmp
ss
cltd
pop
push
repnz
pop
loop
cmp
outsl
or
xchg
frstor
cmpsl
mov
mov
xchg
mov
sub
sbb
clc
test
add
mov
scas
inc
insb
icebp
out
mov
ret
test
xchg
cmp
and
adc
btc
adc
outsl
jmp
sbbl
outsb
xchg
pusha
lahf
lea
aam
jbe
ror
jnp
dec
or
lret
mov
movsl
sbb
sbb
ljmp
sbb
xor
add
cmp
adc
cmp
btc
cltd
fdivs
adc
mov
in
scas
pushf
mov
les
push
jae
cli
or
sbbl
jb
lea
inc
cmp
xor
mov
or
popf
lock
stos
add
push
mov
cmp
shl
repnz
cwtl
xor
out
dec
inc
addr16
cld
scas
push
cmc
insl
sti
mov
add
pop
adc
rcrb
fisubl
pop
ret
xchg
frstor
cmpl
sub
stos
add
xchg
in
jbe
jbe
dec
or
and
xchg
jno
mov
leave
pop
fwait
lret
jmp
or
push
pop
mov
adc
aam
adc
pop
and
popa
xor
mov
adc
cmp
aam
sbb
mov
fnstsw
in
movsb
test
popa
imulb
arpl
push
jo
loope
jg
jge
mov
outsb
cvttps2pi
lcall
cmp
sbb
mov
imul
dec
sbbl
shl
push
push
imul
fistps
fwait
mov
scas
fists
loopne
add
mov
sti
enter
and
mov
mov
mov
mov
and
xchg
mov
cmp
les
xchg
shll
stc
and
mov
arpl
jns
xchg
add
cwtl
cltd
hlt
mov
negb
enter
mov
out
test
sub
jge
les
popa
inc
dec
inc
out
into
jg
adc
dec
and
fsubl
sub
je
jo
hlt
add
and
roll
sub
movsb
mov
fs
lret
mov
fbstp
fs
outsb
fsubrl
adc
rclb
std
test
xchg
and
movsl
or
js
rorb
adc
jns
cmp
dec
pop
push
push
mov
xchg
test
ret
adc
jae
push
movsb
cli
pop
ljmp
leave
xchg
pop
cmpsl
shll
mov
inc
mov
lock
or
jno
mov
jg
mov
scas
xlat
movsl
nop
add
lcall
bound
add
or
out
mov
inc
mov
sbb
das
pop
lods
cs
sbb
push
sbbb
loop
loopne
popa
cmpsl
mov
sub
xor
mov
mov
cmp
dec
mov
fwait
inc
pop
clc
icebp
xor
dec
cmpl
lahf
lods
sub
gs
outsl
pop
or
rcrb
inc
push
add
mov
sub
pushw
inc
cmc
jo
aam
pop
fs
imul
mov
aam
push
push
jmp
outsl
ljmp
aaa
sub
test
in
jno
push
in
jae
leave
pop
stc
std
testl
add
iret
jb
aam
pop
jns
mov
scas
bound
cmpsl
lds
ljmp
lods
cmp
repz
cmpb
xor
pusha
les
push
pop
mov
push
sub
repz
scas
xchg
mov
lds
mov
xchg
loopne
cmp
sub
add
dec
adc
aaa
or
pop
push
xor
mov
stc
inc
mov
lahf
sahf
orl
fidivl
pop
mov
push
lea
xorb
lds
jl
xor
xor
mov
push
neg
out
jl
mov
mov
pop
xor
and
popl
arpl
fmuls
xorb
pop
les
cmc
aad
mov
cs
mov
dec
insb
loop
hlt
arpl
in
cmp
xchg
pushf
imull
sbb
das
jae
jae
jb
test
stos
mov
orb
mov
xor
inc
push
bound
pop
outsb
test
outsb
dec
int3
lea
push
ret
push
xor
jmp
sub
arpl
pop
int
les
push
ja
adc
add
cmp
inc
jge
in
lret
push
popl
push
and
dec
pop
ds
mov
xchg
lcall
leave
hlt
and
das
aad
shll
ds
hlt
add
lret
fldt
mov
movsb
xchg
mov
push
orps
pushf
jb
shrb
or
call
fildll
or
mov
out
movsb
repnz
subl
fcoms
daa
and
es
lds
popa
xor
scas
and
mov
sub
or
push
xor
pop
inc
sub
enter
ret
stc
fisttps
add
fadd
jo
mov
int3
sbb
imul
addb
test
jnp
lock
pusha
mov
cmpsl
arpl
jnp
mov
mov
jb
clc
cmp
cwtl
lods
scas
xchg
faddl
xchg
xchg
lcall
push
mov
pushf
add
shlb
sub
clc
push
out
adc
cmp
mov
mov
and
add
sub
ss
jg
xchg
xchg
push
ja
ja
jp
pop
push
mov
pop
daa
cltd
rol
mov
sub
popf
pusha
insl
or
mov
sti
stc
sub
cltd
jns
aam
mov
inc
cs
dec
stos
mov
mov
mov
xor
sbb
pop
movsb
lods
lcall
xchg
test
xchg
pop
pop
mov
inc
inc
cmp
imul
sahf
je
dec
out
or
cmpsb
fisubrl
fildl
sub
mov
and
fmulp
les
mov
cltd
xchg
divb
push
arpl
xchg
sbb
fs
lret
xchg
leave
and
mov
int
rcrb
mov
rorl
push
sbb
out
lcall
mov
mov
xchg
enter
or
insl
je
mov
mov
xchg
fsts
sub
std
pop
push
outsl
test
sbb
sub
pop
movsb
sub
imul
mov
fadds
stc
mov
cltd
lods
repz
or
jb
push
dec
popa
add
pushf
xchg
dec
jmp
ljmp
jle
call
cli
shrb
xchg
jne
xchg
outsb
pop
jb
pop
les
xchg
mov
pop
stos
adc
push
mov
repz
xlat
imul
movl
add
jo
push
lods
popf
adc
addb
data16
add
add
add
add
add
mov
ja
add
jnp
ja
add
add
data16
add
ja
add
data16
add
pushf
pushf
jnp
add
test
pushl
ljmp
jl
xor
mov
out
adc
push
in
sahf
pop
pop
lds
mov
push
dec
jg
movups
and
and
or
add
add
mov
add
or
and
add
add
add
or
and
add
add
add
daa
mov
pop
add
add
or
add
add
add
and
add
std
add
adc
add
add
and
and
add
add
daa
add
daa
or
or
add
add
add
mov
add
add
add
lea
or
add
add
pop
add
sub
add
adc
mov
add
add
add
std
and
pop
test
pop
jg
loop
inc
jns
icebp
outsl
jle
ss
cmp
sbb
xor
les
sbb
mov
pop
hlt
jl
jp
mov
int
mov
sahf
mov
shll
add
inc
pop
mov
push
cli
in
push
shll
push
rep
cmp
mov
imul
movsl
fbstp
push
cmp
out
in
dec
hlt
or
jg
add
push
jle
sub
cli
xor
test
and
test
lahf
dec
xor
cmp
add
jbe
mov
mov
lret
jg
mov
sbb
sub
add
push
test
aam
xor
xchg
jmp
adc
ss
push
xchg
mov
xchg
js
test
pop
test
ljmp
add
jb
scas
pop
xchg
gs
test
ja
mov
mov
aad
cmp
cld
pop
add
mov
xchg
mov
lret
mov
lea
xor
inc
cltd
cltd
jle
dec
mov
sub
dec
mov
xchg
pop
push
data16
jne
ret
cmp
cmp
pop
sbb
loope
iret
fdivr
and
add
jno
push
mov
jae
xor
lods
mov
pushf
mov
out
xor
cmp
push
mov
jns
cwtl
push
js
and
add
jecxz
pop
out
stos
ficoml
in
mov
lret
cs
inc
cli
insl
out
repnz
mov
hlt
sbb
sub
mov
lea
adc
lret
mul
icebp
cld
pushf
rcrl
loop
pop
in
stos
add
mov
mov
and
sbb
cli
fstl
stc
dec
inc
push
clc
dec
mov
popa
fnstsw
cld
xor
xchg
add
imul
cld
dec
cs
mov
adc
xorl
pop
loop
pop
jns
cmc
mov
mov
mov
test
cld
out
jns
pushl
mov
hlt
xor
fistpl
divl
xor
inc
dec
popf
sub
js
adc
add
aam
mov
mov
push
rcll
jp
shl
mov
mov
lods
mov
int3
jne
mov
sbb
push
outsb
cld
loopne
ja
dec
add
int3
loope
jae
test
inc
or
or
adc
filds
dec
cmp
inc
lahf
cmp
lds
test
lahf
mov
lock
jo
inc
call
stc
cmp
mov
xor
cltd
cmp
scas
mov
and
add
or
mov
call
sbb
inc
and
xor
or
aam
and
add
xchg
lret
sbb
inc
and
and
cwtl
aad
je
mov
mov
ret
ja
or
push
in
sub
pop
and
in
cmp
or
inc
and
fnstsw
ss
cmpb
mov
movsb
sub
stos
xchg
push
sbb
mov
repz
jge
repnz
sbb
loop
loope
je
and
mov
clc
cmp
cli
paddb
cld
add
xor
mov
rclb
fisttpl
dec
in
and
jecxz
jmp
jl
loop
rorl
mov
mov
std
mov
inc
mov
jp
xchg
aad
pop
xor
jecxz
cltd
aam
push
adc
jg
mov
sub
sub
pop
jle
cmp
repz
dec
inc
xor
mov
lea
xor
int
icebp
mov
cmp
or
cld
adc
hlt
push
or
dec
iret
cli
out
repnz
je
andb
or
popf
mov
pushf
xor
push
push
ror
xor
jbe
pop
shl
mov
movsl
int
sub
and
mov
adc
dec
push
inc
mov
jle
xor
sti
xchg
xchg
mov
fcmovnu
jns
icebp
mov
jbe
cld
inc
repnz
addr16
adc
ret
divb
stos
add
jmp
int
cli
inc
iret
in
negl
dec
jp
pusha
ret
cmp
pop
cli
xchg
push
ljmp
dec
xchg
imul
addb
fucomip
jbe
and
jae
icebp
and
clc
cmp
idivb
push
jp
push
jl
cmp
pop
cld
fldt
call
inc
icebp
das
jb
dec
mov
add
mov
push
icebp
cmpsl
jg
cli
cmp
arpl
aaa
mov
pushf
xor
push
push
adc
xchg
inc
pop
fs
subb
or
mov
add
loop
pushf
cmp
jb
cmp
int
stc
test
or
loopne
add
dec
xlat
jno
out
aam
ss
lahf
xchg
sub
lds
pop
iret
dec
mov
js
cmp
mov
rcrl
mov
mov
pushf
mov
fisubl
stos
fwait
mov
mov
outsb
mov
lret
cmpsb
mov
pop
fs
mov
cmp
xchg
push
ljmp
cld
push
xor
xchg
xor
pop
adc
lahf
decb
cmp
inc
and
mul
xor
mov
jb
xor
ds
ja
cmp
push
fstpl
sbb
jb
push
inc
sub
stos
aad
xchg
adc
or
mov
mov
jns
cmc
shrl
mov
sub
test
out
jecxz
out
cld
pushf
rcrl
imul
aam
out
mov
xor
hlt
les
cld
rclb
jp
xor
pop
shll
fildll
push
mov
ss
mov
imul
sbb
adc
xor
jb
lcall
mov
pop
and
lods
arpl
pop
iret
xlat
mov
push
das
in
dec
add
pop
pusha
mov
sub
mov
cmp
popl
inc
xchg
test
out
out
mov
and
mov
pushl
sbb
cmp
pop
mov
pop
in
jno
fildl
jnp
mov
lret
std
movsb
call
add
sbb
inc
ja
cmc
add
cmp
out
push
cmp
lahf
sbb
inc
arpl
or
add
cmpsl
jp
inc
outsb
jne
inc
arpl
and
add
xchg
mov
push
lret
fsubp
sub
dec
or
xor
adc
push
push
in
adc
out
filds
dec
and
dec
and
and
mov
sbb
inc
pop
mov
pop
decb
inc
mov
ss
out
pop
lahf
jnp
pushf
mov
cltd
scas
cli
cmpsl
xchg
inc
lcall
mov
loop
push
cli
paddb
xor
testb
sbb
scas
imul
xchg
lret
jle
jl
test
inc
sub
pop
adc
cmp
shrb
leave
cs
mov
and
jne
jb
pop
cmp
mov
call
pop
lea
cmp
nop
dec
test
cmp
mov
jecxz
jmp
hlt
xor
mov
in
imul
mov
movsb
cld
push
pop
sbb
inc
pop
call
inc
add
mov
xorl
js
push
sub
out
add
sahf
int
movsb
pop
jno
test
and
test
andb
jbe
or
mov
and
icebp
mov
mov
ja
into
mov
jge
cld
fs
iret
ds
mov
xchg
out
fists
outsl
mov
jbe
mov
xchg
mov
in
repnz
add
arpl
lret
xor
in
lods
mov
xorl
and
inc
in
cmp
clc
mov
pop
inc
shll
out
sti
jecxz
cmp
insl
sar
xorl
aad
in
push
mov
jno
lahf
dec
lds
lret
les
add
scas
int3
sub
xlat
mov
jae
jb
push
inc
sub
ss
jbe
mov
jb
jne
rorb
icebp
jo,pn
sbb
cmp
xor
mov
jg
hlt
ret
or
xchg
cmp
inc
xchg
ljmp
pop
xchg
jg
loope
or
mov
inc
sub
jmp
add
shll
mov
cld
jnp
lods
jp
mov
lea
lahf
push
lret
inc
cmp
imul
jg
sbb
std
add
jae
add
mov
xchg
ljmp
lods
addr16
mov
testl
fdivl
insl
pop
pop
pop
out
push
decl
aam
hlt
add
xchg
add
int3
loope
and
int
int
mov
jb
fistl
sub
aaa
mov
into
lds
es
cld
mov
in
lahf
inc
pop
push
jbe
sbb
add
mov
dec
in
sub
jge
or
mov
inc
and
push
cltd
adc
arpl
loope
adc
popa
fldenv
js
sarb
je
mov
pop
jg
loop
adc
roll
mov
and
mov
xor
lcall
test
pop
jp
adc
push
dec
cld
es
mov
jae
jge
jbe
pop
mov
xchg
stos
stc
cmp
loopne
sar
sbb
cmp
adc
out
mov
test
mulb
jmp
loope
and
pop
pop
ret
mov
xchg
cmc
cmc
in
or
fnsave
cmp
rorb
mov
je
jne
in
stos
cs
fstpt
shlb
fwait
out
lds
jno
or
cmp
adc
hlt
imul
jnp
loopne
lea
daa
es
xchg
lods
mov
cmp
sahf
iret
or
fldl
push
test
mov
out
dec
xor
jns
cli
jg
pushf
mov
ljmp
stos
mov
xlat
sbb
scas
lret
xchg
inc
dec
add
stos
das
iret
or
add
stos
pushf
pop
mov
mov
xchg
mov
bound
push
cld
fucomi
mov
leave
adc
xor
pusha
mov
aam
bound
int
mov
pop
add
repz
das
fimuls
mov
mov
data16
xlat
xor
stos
int3
sahf
scas
fiaddl
push
cltd
out
mov
xchg
cmp
into
test
repz
sub
pop
cld
lock
aad
pop
loop
pop
pop
fists
ja
into
test
js
mov
mov
jb
push
sub
iret
mov
dec
push
enter
cs
xchg
jle
repz
cmpb
call
xchg
int
xor
pusha
fcmovnb
stc
xchg
dec
in
ss
cli
cld
add
mov
xor
rclb
xchg
lods
fnsave
jns
or
cmp
pop
mov
push
mov
pushf
fidivl
stc
cmp
lds
mov
ret
test
data16
cmp
cmp
mov
jg
or
pushf
mov
push
add
cmpsb
into
vucomisd
sahf
test
or
std
mov
out
push
pop
stos
test
add
mov
jnp
sub
cld
pushf
mov
push
pop
call
lahf
stc
xchg
mov
fnstsw
ja
inc
fcompl
out
push
push
adc
lcall
loope
mov
in
add
push
xchg
cld
dec
stc
ljmp
jne
cld
xlat
pop
lock
fs
fsts
push
mov
mov
sarl
cwtl
lea
cmpsl
cld
jns
adc
movsb
mov
sub
int
scas
ret
cmp
in
inc
inc
add
xchg
add
imul
mov
pop
cli
xlat
dec
nop
mulb
add
push
sub
aaa
ret
pop
add
in
sub
inc
bound
push
mov
jmp
sub
scas
arpl
imul
mov
ja
mov
inc
ljmp
jle
fwait
std
mov
or
mov
aaa
mov
and
sub
in
out
aad
hlt
faddl
rolb
fsubr
clc
in
push
xor
lods
testb
dec
xchg
or
dec
pop
add
jo
cmp
dec
xchg
sub
cmpsb
jae
fdivrl
nop
push
add
jl
popa
pop
lcall
arpl
dec
pop
xchg
fistpl
jne
mov
mov
je
and
int3
add
or
sti
xor
mov
movsb
xchg
cli
std
rcll
fistps
xor
negl
lds
jne
mov
int3
dec
push
xchg
jp
sbb
in
sub
sahf
inc
test
int3
wbinvd
loop
test
pop
xchg
mov
xchg
out
imul
xor
lds
mov
fidivrs
xor
and
sub
mov
inc
lods
add
cmp
add
mov
loopne
and
pop
fisttpll
mov
in
push
ror
popa
ficoml
and
push
cltd
iret
push
in
pop
insb
outsb
icebp
mov
push
inc
xor
jl
in
cmp
cmpsb
jne
dec
jp
sbb
and
and
sahf
imul
ficoms
xor
pop
pushw
in
shlb
insb
push
in
cltd
or
sub
inc
ret
mov
outsb
mov
sbb
mov
xchg
lock
and
lea
xchg
and
ss
jne
inc
or
add
or
ja
cmpsl
pop
fsts
push
aam
daa
in
adc
cmp
cmp
int3
xor
push
int3
dec
xchg
dec
xchg
addr16
cmpsb
insl
mov
push
sub
js
mov
add
pop
in
std
arpl
push
jmp
in
lea
adc
ss
test
dec
push
push
cmp
xchg
sahf
out
or
les
dec
adc
jg
xchg
aas
les
mov
mov
adc
lea
mov
mov
stc
sub
and
xor
cmp
insl
bound
iret
enter
push
mov
sbb
icebp
in
push
test
mov
dec
sbb
insb
or
push
cmp
mov
pop
arpl
scas
cmp
clc
fs
push
aad
aad
dec
ret
les
loop
jl
loop
jp
adc
push
xor
cltd
xor
mov
or
xor
push
dec
or
ficompl
or
dec
data16
mov
inc
mov
fistpll
cs
cmp
repz
xchg
pop
stos
xor
pop
xchg
push
mov
pop
clc
aam
push
dec
pop
loop
jo
mov
insl
sti
mov
mov
outsb
mov
cli
dec
xlat
pop
cld
and
jle
pushf
shrl
outsl
loop
push
daa
in
jno
lcall
in
popf
mov
fidivrs
push
xchg
push
sbb
jbe
xchg
dec
mov
ja
mov
loopne
and
fimuls
mov
int3
fsts
stos
xor
sub
dec
iret
movsl
fistl
mov
jo
in
push
sub
xchg
sub
adc
push
outsb
fsubl
hlt
lret
test
pop
insl
lret
jno
push
ds
fwait
push
loope
lret
push
or
clc
fidivrl
fbstp
pop
in
in
movb
loopne
xchg
adc
clc
inc
pop
arpl
and
mov
mov
push
das
fmulp
es
dec
sub
insb
notb
jg
movsb
xor
out
bound
lods
add
mov
sarb
adc
cmc
dec
cmp
pushf
xchg
xchg
sbb
and
push
push
xor
push
push
insl
jb
jne
jae
jnp
movsl
ret
adc
aas
xchg
push
xchg
idivb
xchg
aad
mov
sahf
jecxz
clc
jl
add
rcl
addr16
mov
leave
je
cs
ljmp
mov
or
neg
out
loope
mov
pop
icebp
dec
sub
jp
stc
dec
addb
movsl
daa
add
adc
dec
mov
pop
dec
pop
call
add
or
jecxz
aad
xchg
popa
or
jbe
inc
dec
stc
add
sub
push
mov
fadd
pop
and
dec
mov
lahf
inc
mov
shrl
sbb
pusha
sub
mov
and
ja
push
nop
jmp
loope
imul
stos
mov
mov
ljmp
push
cmp
sub
jae
fidivl
pop
pop
subb
and
xor
rol
int
push
repz
xlat
mov
mov
scas
lods
and
cwtl
ficoml
and
dec
in
pushf
popf
mov
and
and
or
sub
aam
lock
sub
dec
or
jbe
inc
fwait
pusha
sbbl
cmpl
mov
xchg
aam
add
push
xor
mov
push
adc
lods
mov
xor
icebp
popa
mov
push
cmp
ltr
jmp
xchg
pop
and
pop
cli
cmp
push
popf
adc
int
adc
push
and
in
mov
xchg
mov
mov
jns
popa
add
or
imul
sub
add
push
cmp
faddl
popa
rcl
pop
mov
adc
push
movb
pusha
and
lods
sub
inc
inc
and
cmp
stos
add
int3
arpl
gs
add
xor
jae
adc
add
xlat
pop
jg
fyl2xp1
imul
int3
popf
xlat
pop
int
push
and
pop
and
out
add
add
xor
and
jae
sbb
sbbb
cs
pop
fistl
cs
push
les
lock
inc
in
loope
icebp
pop
push
or
insb
cmpsl
mov
mov
out
dec
imul
bound
jnp
cwtl
iret
rcrb
out
je
hlt
push
addr16
lods
cmp
dec
scas
xchg
fsts
popa
mov
xor
imul
loop
loope
loope
vmread
sbb
sbb
sbbl
test
mov
repz
imul
scas
or
leave
sbb
adc
loop
adc
leave
or
push
mov
pop
sahf
repnz
cmp
fcmovbe
aad
std
and
cmc
dec
lods
adc
insl
call
jmp
les
mov
leave
mov
outsl
jl
insl
lods
rcr
fcompl
lret
sarl
sti
stc
flds
and
addr16
pop
addr16
or
xchg
jmp
lcall
jae
das
jmp
pushf
pop
push
mov
lock
sahf
dec
xlat
push
dec
mov
sbb
adc
add
mov
std
cmpsl
pop
std
cmp
mull
stos
pushf
lahf
push
mov
add
sub
mov
fsub
sub
jbe
cwtl
out
sbb
sub
cvtps2pd
cmp
decl
sarb
xchg
push
pop
fistps
mov
add
adc
xlat
xlat
int
pop
xchg
sahf
mov
test
pcmpgtb
cmp
and
ja
mov
sbbb
bound
movsb
cwtl
sbb
lods
iret
lahf
loopne
enter
cmp
fs
stos
test
ficoml
pop
mov
and
jecxz
neg
popf
sbb
xor
jge
pop
imul
pop
pop
popa
mov
in
push
mov
push
stos
push
sti
xchg
insb
mov
or
mov
jle
mov
pop
aas
pushf
mov
mov
push
add
lods
cmp
andb
cmp
pop
adc
push
mov
rcll
frstor
repz
mov
mov
push
mov
in
push
cld
cltd
into
lcall
add
in
loope
mov
pop
sub
mov
xor
mov
cmpsb
sub
jle
cmp
imul
movsb
push
js
add
scas
sub
add
das
jno
adc
insb
cltd
push
movsl
arpl
loop
sar
cmp
sbb
and
nop
push
add
sbb
mov
rcl
mov
enter
or
sub
jmp
into
jns
and
mov
das
fisubrl
out
lods
mov
dec
jle
mov
in
pop
push
pop
push
mov
xor
push
pop
sar
jbe
xor
mov
ja
jge
repnz
movsl
nop
mov
adc
dec
mov
cld
mov
push
add
ss
sub
mov
mov
dec
enter
adc
jge
xchg
aad
sbb
test
mov
jecxz
pop
fstpl
lret
stc
mov
lds
inc
outsl
mov
cvtps2pi
je
and
sbb
arpl
or
neg
js
mov
push
inc
mov
jo
shlb
xorl
jnp
andb
cmp
ljmp
cmp
add
idiv
push
mov
rorb
lods
inc
outsb
and
pop
ret
xor
inc
pop
add
and
jne
fsubrs
cmp
mov
xchg
fdiv
adc
aas
je
and
pop
repz
pushf
xor
jecxz
add
pop
mov
xor
nop
rol
xlat
add
jmp
dec
sbb
push
pop
cmpsl
adc
imul
sub
mov
repnz
cmc
jmp
lods
addl
jle
lret
sbb
in
divl
mov
xchg
sarb
mov
out
cmpsb
xor
imul
adc
mov
adc
push
push
nop
xor
out
andl
jae
or
insl
inc
inc
mov
subb
xchg
inc
imul
sub
adc
into
ja
pop
sbb
and
stos
shl
pop
decl
mov
in
mov
xchg
inc
lods
adc
mov
push
adc
push
gs
pop
test
jnp
mov
cs
das
and
lahf
add
mov
lods
mov
popfw
pushl
cwtl
hlt
pusha
adc
subl
lret
fldt
sub
adc
lods
sahf
loope
sub
adc
and
pushf
adc
test
adc
insl
add
lods
int3
cli
xchg
cld
push
cmp
flds
add
cmpl
and
xorl
inc
iret
jg
mov
jmp
iret
stos
out
movsb
pushf
xchg
nop
xor
add
sbb
add
jbe
xor
test
ljmp
push
mov
xchg
lock
mov
jb
cmc
pop
testl
arpl
leave
ret
jge
stos
cmpsb
push
sahf
mov
xchg
pop
dec
mov
aam
aam
in
xchg
xchg
push
faddp
insb
mov
aas
nop
loop
jg
cmp
dec
dec
xor
gs
stos
addr16
lcall
cwtl
push
sbb
or
ret
sub
cli
jb
add
repnz
dec
push
pop
or
sti
adc
sahf
pop
mov
aam
shrw
out
inc
fistpl
xchg
enter
cli
push
push
inc
out
cld
xlat
mov
mov
in
pop
nop
movsb
push
inc
sub
mov
xchg
addb
xchg
inc
and
rcrl
lds
add
ficomps
mov
adc
jnp
test
or
shl
mov
sub
push
daa
repnz
int3
add
ficoml
je
xchg
xor
imul
jge
scas
sbb
repz
and
imul
cltd
inc
pop
and
unpckhps
push
mov
push
pop
scas
push
push
and
ljmp
xor
std
addl
lock
nop
sbb
outsl
aad
std
or
dec
je
jmp
jb
nop
out
jecxz
mov
les
fs
loop
js
cmp
jl
test
test
outsl
push
fildll
aad
pop
pop
les
xchg
mov
jmp
in
cmp
or
pusha
leave
pop
js
mov
push
xorb
pop
lahf
mov
cmp
rcr
lds
xor
and
or
jle
push
pusha
pop
icebp
dec
adcb
mov
add
cmp
add
popf
jmp
cmpsl
pop
mov
push
cmp
shlb
inc
ret
push
ret
jmp
xchg
xchg
sub
sbb
vpmacsww
test
add
lret
stos
add
lcall
dec
mov
sub
push
stos
mull
aad
pushf
jae,pt
addr16
xor
int3
out
mov
insb
mov
or
mov
inc
mov
jle
call
push
insb
ds
xchg
and
sbb
enter
lret
insl
or
ja
inc
fidivrl
repz
mov
mov
mov
ficompl
mov
pop
sarl
push
push
icebp
inc
pop
imul
mov
sub
shr
lcall
mov
pusha
add
arpl
iret
and
mov
movsl
rorl
or
sbb
mov
aam
test
or
jecxz
daa
imul
add
std
and
jge
xor
fldl
out
les
imul
sub
call
test
scas
aas
scas
xchg
lret
mov
dec
es
add
add
add
add
aam
int3
addr16
mov
and
sub
fnstcw
lds
addr16
pusha
adc
inc
or
xor
pushf
cmp
iret
rclb
dec
fld
mov
mov
and
jb
sbb
out
aaa
fistps
icebp
gs
push
mov
xchg
push
dec
test
and
and
out
int
ret
das
mov
push
mov
jnp
sub
push
ficomps
xchg
mov
repz
outsb
inc
lahf
popf
cmp
lock
mov
neg
and
mov
repz
ja
test
push
xor
jp
call
lds
xchg
out
pop
add
outsb
incb
cmp
jmp
xchg
aam
icebp
not
xchg
xor
aaa
jge
lcall
js
hlt
mov
int3
dec
arpl
jns
jp
push
pop
mov
test
idivb
dec
das
aad
shlb
into
dec
fiaddl
gs
add
pusha
pop
lds
pop
push
jmp
add
pop
repz
adc
pop
mov
in
lret
and
dec
pop
lds
stc
cmp
jp
popa
pop
std
mov
mov
shll
int3
lods
mov
loope
sbb
mov
xchg
cmpsb
mov
jns
clc
pop
push
testb
call
outsl
xchg
mov
push
repz
xor
and
cmpsb
ds
or
les
sub
adc
mov
jnp
aam
dec
or
sbb
mov
and
or
fnstsw
insl
or
js
xor
dec
pushf
pop
stos
scas
or
int
shll
int
mov
push
add
pusha
aam
loop
sarl
xchg
cld
lds
fbstp
gs
popa
jno
xchg
mov
mov
shl
cmp
and
in
fists
push
rol
xchg
sub
outsb
pop
fiadds
jmp
out
pop
test
or
push
and
jne
loopne
add
popf
jmp
movsb
mov
stos
and
or
jb
subl
xchg
push
mov
xchg
mov
push
cltd
pop
mov
lea
cwtl
aaa
aad
xlat
negl
sub
dec
inc
jecxz
push
mov
push
cmp
mov
test
add
fsts
inc
bound
dec
cmp
sub
inc
sub
pop
jbe
pushf
xor
pop
aaa
ja
jp
sub
sub
cmp
iretw
filds
push
mov
sbb
xchg
mov
cmp
sub
add
push
das
fidivrs
inc
mov
push
push
mov
inc
and
mov
adc
nop
int
les
pop
add
pop
cs
andb
push
stos
lahf
push
xchg
std
fstp
jge
xorl
or
mov
outsb
sub
sub
dec
dec
aam
push
pop
lock
das
stc
lea
push
lahf
fisubs
fs
test
daa
pop
testl
inc
inc
lods
ss
inc
into
push
ss
popf
jg
rorl
cwtl
mov
pop
push
pop
inc
sbb
xchg
add
popf
std
add
pop
pop
fimuls
adc
xor
pop
fistpl
sbb
mov
cmp
repz
in
es
shll
or
pushf
adc
xchg
outsb
cmpl
in
cmp
call
les
cmp
adc
add
and
mov
and
sbb
lods
inc
add
int
out
dec
pop
sbb
clc
fwait
je
cmp
sbb
adc
cmp
dec
outsb
repz
inc
inc
jne
pop
or
add
adc
pop
mov
mov
jo
shll
cmovns
push
adc
mov
sti
dec
popf
cmp
lock
mov
test
int
jg
xor
inc
sbbl
pop
in
repnz
mov
insl
pop
test
push
rcr
mov
aad
push
fs
ljmp
cmp
xchg
jns
xor
stos
jae
push
ja
inc
lods
jmp
pop
lea
adcl
xchg
mov
out
pop
xchg
mov
iret
xchg
repnz
xchg
stos
jle
psllw
fwait
ja
add
orl
and
xchg
or
and
ljmp
fisttps
mov
adc
mov
mov
inc
out
add
mov
ret
sub
pop
sbb
sbb
jcxz
push
subl
mov
mov
test
mov
int
sub
and
xor
add
jle
loopne
negb
pop
jp
mov
int3
cmovle
sub
rolb
rclb
lret
mov
leave
pminsw
mov
pop
pop
rcr
insl
cmpsb
js
addb
xor
mov
add
xor
mov
pop
test
mov
and
pop
lock
push
std
dec
dec
cmp
sbb
lcall
ja
pop
gs
rorb
les
mov
cld
aas
jns
test
mov
push
loopne
inc
mov
leave
addr16
sbb
mov
cmpsl
negl
cmpsl
repz
mov
push
add
adc
loop
mov
adc
inc
pop
xchg
insb
subl
inc
imul
push
push
mov
stos
sbb
adc
pop
test
sbb
jns
push
std
mov
mov
cmp
mov
frstor
cmpsb
popf
mov
and
dec
ret
push
adc
fldl
into
ljmp
pop
int
scas
mov
sbb
sbb
xor
cltd
dec
push
cmc
adc
cli
xchg
mov
cmp
enter
scas
push
mov
push
pop
inc
push
nop
jo
push
push
sti
into
push
ja
mov
or
pop
or
xor
mov
arpl
cmp
iret
jnp
adc
aam
ficoml
fmuls
out
xchg
popf
outsl
icebp
js
xor
cmc
pop
sti
push
mov
mov
or
cld
aas
les
mov
leave
cli
cmp
cmp
mov
fldt
icebp
push
mov
adc
sub
mov
fdivs
pushf
sub
jg
sar
aam
rol
shll
sub
imul
fcmovnbe
movlps
jne
fimull
outsb
push
adc
outsl
or
into
dec
ror
cmpsl
repnz
aas
xor
adc
jo
mov
push
adc
imulb
cmp
and
ret
aad
scas
push
and
or
or
cld
xchg
xor
xchg
pop
das
or
fistpll
mov
movsb
pusha
pop
xchg
xor
jle
push
mov
icebp
xchg
neg
lahf
xchg
jo
cmp
or
lahf
sti
pop
add
fcomi
xchg
jne
pop
cmp
mov
ret
enter
mov
movsl
xchg
bound
mov
scas
test
jbe
add
mov
push
mov
jb
outsb
out
jne
pop
fcomps
test
fsubrp
push
ficoms
mov
mov
scas
out
mov
jbe
idivb
arpl
int3
pop
aaa
test
push
aaa
rcrb
repz
cmpsb
sub
push
ljmp
sub
and
mov
insb
xor
dec
dec
xchg
icebp
ljmp
insl
dec
inc
sbb
movsb
inc
lods
aas
cltd
jmp
cmp
xchg
sbb
sub
lea
test
daa
outsb
lods
je
sbb
mov
pushf
mov
xlat
cmpsl
js
ljmp
pop
stos
das
xor
popa
or
inc
push
ljmp
adc
cwtl
jno
cmpsl
mov
mov
mov
mov
lcall
arpl
shl
inc
pop
loope
mov
addr16
mov
out
nop
mov
fs
shlb
pop
xchg
out
out
popa
cmp
and
and
and
jne
mov
out
pop
loopne
sbb
xchg
outsb
addb
test
xlat
pop
or
cmp
and
mov
xchg
mov
xor
loopne
mov
sahf
lcall
or
and
popa
push
inc
cmp
lret
mov
sub
cmp
vmwrite
negb
ss
jo
mov
das
testl
inc
lods
adc
out
mov
out
lods
test
lahf
loopne
in
pop
push
mov
scas
mov
jne
mov
and
adc
lods
lock
and
rolb
push
add
jae
cmpsb
insl
sbb
inc
fcom
stos
je
pop
stos
and
lahf
sbb
push
out
xor
add
aad
outsl
add
lock
mov
pop
adc
imul
je,pn
stos
mov
sbb
in
adc
dec
icebp
cld
cwtl
nop
fmull
sbbl
dec
push
lea
leave
out
rclw
push
neg
mov
ds
pop
lock
or
jne
pop
addb
add
aas
lret
lds
jl
adc
cltd
adc
and
jb
ror
test
pop
sbb
jecxz
jecxz
pop
mov
shll
mov
loope
shrb
ror
xchg
fldcw
dec
jle
sub
mov
xor
mov
cmp
jmp
pop
sbb
stos
and
pop
xchg
stc
mov
mov
movsl
fdivs
xchg
xlat
dec
adc
clc
not
aam
xlat
inc
mov
mov
adc
dec
jne
imul
add
push
cmpsl
xchg
stos
and
das
roll
mov
das
shlb
test
add
inc
and
insb
xorl
pop
cmp
lods
leave
mov
xchg
rolb
stos
push
lock
insl
sub
inc
pop
push
pushf
hlt
lea
lods
notl
pop
pop
into
xchg
mov
adc
adc
mov
in
aaa
sarb
mov
jbe
fmull
lods
push
push
add
jns
loope
stos
out
jnp
scas
fwait
sti
js
hlt
stos
pusha
ljmp
mov
inc
mov
les
stc
mov
push
push
add
mov
sahf
pop
call
dec
sahf
or
hlt
fisttpll
jbe
jno
stc
test
pop
popf
or
enter
sbb
insb
pop
idivl
inc
pop
incl
and
adc
xchg
test
aad
lret
xor
lret
xor
std
pusha
jns
imul
add
mov
jno
lcall
mov
loope
and
xchg
cmpsl
cs
xor
cwtl
pop
push
pop
push
xor
mov
jle
add
and
icebp
stos
lcall
inc
pop
std
add
ret
lcall
inc
push
xchg
int
adc
stc
stos
repnz
cld
push
push
jl
mov
or
pop
mov
or
int3
xlat
and
std
leave
push
dec
js
jmp
insl
testb
xor
or
cmp
sbb
cwtl
or
fcoml
call
loopne
mov
mov
ds
rol
fs
pushf
out
add
lock
aaa
xchg
add
outsb
lcall
push
scas
outsl
shlb
int
jmp
xor
push
push
jns
sbbl
scas
pop
mov
push
sbb
lock
mov
mov
ja
adc
leave
dec
xor
ret
pop
xchg
add
das
jp
movsl
sbb
jmp
sub
mov
test
outsb
adc
cmc
add
in
sti
cmp
mull
and
inc
jp
rclw
rcl
in
mov
mov
notb
out
inc
add
xor
mov
mov
push
jne
adc
push
mov
movups
fwait
mov
lret
mov
cltd
ret
inc
roll
ds
jae
jle
aad
int3
mov
out
push
fucomip
sub
and
mov
or
cmp
lcall
mov
mov
stos
daa
mov
inc
lods
mov
and
into
dec
mov
pop
adc
das
and
pop
es
mov
inc
jbe
movsb
cmp
in
jle
jge
cli
add
jns
push
inc
inc
fcmovu
add
out
clc
adc
cmp
cmp
outsl
cld
cli
sub
dec
out
jno
sub
jne
jne
ret
mov
adc
loope
dec
jle
xchg
sub
inc
std
adc
sbbb
mov
lahf
lret
adc
repnz
loopne
mov
test
repnz
cli
push
fdivl
dec
sahf
or
mov
cmp
or
pop
call
xchg
std
ss
cmp
sub
repnz
repnz
mov
sbb
flds
mov
mov
out
out
addb
je
inc
adc
les
add
inc
or
pop
test
aam
lods
fnsave
scas
aaa
pavgb
sarl
inc
daa
outsb
scas
lcall
call
mov
inc
mov
mov
stc
mov
jnp
push
leave
dec
out
test
push
stos
sub
pushf
dec
pop
fsub
push
jno
mov
mov
push
pushf
outsl
add
ljmp
orl
shr
cwtl
popf
sti
lods
cmp
push
inc
test
jae
add
xchg
cmp
mov
xchg
insl
leave
dec
fs
jl
jnp
and
rol
dec
mov
mov
cmp
jmp
out
mov
pop
push
test
js
aam
inc
xor
lds
data16
shll
pop
xchg
mov
inc
jnp
inc
sub
push
aaa
movsl
repnz
or
xchg
add
out
mov
clc
punpckldq
popf
cmpsl
mov
adc
push
sub
jo
test
aaa
inc
mov
mov
sub
hlt
into
jmp
test
out
cmpsb
je
jne
push
std
push
lcall
testb
movsl
loop
leave
aam
jno
das
mov
jno
or
enter
mov
outsl
cmp
mov
ja
sbb
push
inc
testl
out
sti
gs
cmp
popf
mov
mov
cli
mov
fisubs
pop
sub
scas
fmuls
pop
imul
push
andl
rcrb
les
adc
push
mov
arpl
imul
fstl
and
sti
jp
out
int
pop
mov
xchg
aaa
mov
sub
sbb
in
mull
shrl
mov
pop
mov
push
mov
inc
mov
and
sbb
aam
addr16
fldenv
mov
cmp
adc
ja
movsb
imul
out
pop
cli
in
ret
mov
call
cltd
cs
lods
jg
xchg
mov
fiaddl
iret
out
sbb
xchg
or
jecxz
add
iret
ja
dec
movsl
pop
lcall
aaa
in
dec
push
sbb
xchg
call
inc
mov
cs
add
stos
lds
test
inc
add
and
jno
stc
in
xchg
inc
cmp
mov
jbe
jl
out
sub
mov
sbb
pop
imul
jmp
test
lods
aaa
lock
lahf
xor
aam
adc
sub
cli
pop
mov
divl
jne
and
in
stos
or
push
push
inc
cld
jecxz
pop
in
fs
or
stos
mov
std
inc
pushf
mov
repnz
lahf
push
cld
test
test
push
inc
iret
xor
int3
cmp
cmp
and
scas
push
and
jae
add
lret
fwait
xlat
xchg
push
xchg
lea
iret
push
inc
or
or
lea
or
jae
or
out
cmp
mov
insb
sbb
dec
mul
xlat
rcl
lds
and
cmp
lret
xorl
popf
push
mov
xchg
in
daa
pop
mov
je
gs
dec
ja
fmull
test
add
inc
shr
jle
mov
adc
xchg
cmpsl
push
add
jmp
movsl
aas
loope
pop
bound
inc
out
sti
test
push
xchg
jl
mov
jnp
das
and
mov
cmp
push
jb
outsl
leave
rcrb
cli
fwait
lds
or
cmp
pop
mov
and
clc
pop
add
enter
dec
sbb
mov
jae
test
sub
les
push
sub
xchg
call
es
xchg
xorb
scas
jnp
ja
xchg
xor
mov
and
fnstsw
ret
or
mov
and
insl
add
out
xchg
leave
fisttpll
testl
arpl
dec
aas
dec
mov
stos
adc
cmpsb
lcall
jne
adc
lea
std
sub
insb
cmp
xor
push
mov
mov
push
xor
mov
mov
add
lahf
or
push
clc
pop
xor
sahf
jge
mov
inc
adc
cmp
mov
cmpsl
data16
int3
mov
outsl
test
repz
jge
cwtl
fcoml
dec
inc
rcrl
lahf
in
mov
lcall
pop
js
ja
or
mov
into
pop
push
jl
into
adc
jb
cltd
xlat
dec
push
fisttps
fdivl
xor
xor
jmp
push
loop
pop
shll
push
ret
sbb
dec
imul
or
pop
pop
outsl
and
and
jne
pop
jne
dec
and
add
insb
and
scas
jbe
test
mov
fdivrs
push
mov
jp
nop
sbb
faddp
call
into
out
add
pusha
ja
fsub
mov
mov
mov
xor
arpl
cli
std
sub
cmpsb
adc
inc
imul
mov
jae
mov
jge
add
pop
inc
shr
mov
cmc
sti
inc
add
pop
addr16
xor
xchg
mov
cmp
jns
jo
dec
fwait
dec
pop
clc
loop
push
xor
push
ss
cmpsl
add
int
hlt
int
xor
pop
mov
or
out
jnp
stc
and
in
inc
outsl
clc
inc
or
lock
pop
aas
fs
or
test
movsb
pop
or
ds
inc
dec
clc
or
ret
xor
sbb
sub
mov
call
shl
adc
push
xlat
fsubl
xchg
hlt
je
fsts
repnz
ljmp
mov
mov
pop
mov
xor
into
in
xchg
pop
dec
hlt
sbb
cmp
insb
dec
mov
insl
ss
lret
cmp
gs
imul
aam
pop
jmp
jbe
sub
sbb
push
dec
subb
or
shlb
outsl
xor
xor
cmp
paddusw
repz
push
clc
jl
fnstsw
jmp
fsubr
cmp
sbb
dec
out
scas
aam
fs
sub
bound
ljmp
xchg
xor
or
lcall
cmove
inc
xchg
jne
lret
rcrl
icebp
add
lret
and
or
fsts
sarl
out
ficomps
xor
pop
push
out
mov
fdiv
lret
fnstenv
ret
mov
imul
repz
lret
or
mov
stc
flds
outsl
int3
cmp
cmp
push
ficomps
mov
out
sar
push
jns
lods
push
loopne
rcrb
test
test
cmp
jo
jnp
inc
and
movsl
loop
pop
or
out
lret
and
cmp
fwait
lock
fiadds
pop
lcall
dec
xchg
and
inc
pop
into
mov
dec
mov
decb
in
or
jmp
imul
add
add
xchg
push
jp
or
push
mov
in
lock
shll
loop
mov
add
int
sarl
xor
dec
and
push
xor
pop
jp
ret
hlt
sbb
mov
mov
movsb
dec
cmpsb
push
and
lahf
dec
loop
lret
cmp
mov
popl
sub
scas
and
fisttpl
sub
mov
ficompl
movsb
xchg
int
jecxz
arpl
inc
outsl
stos
ds
leave
push
dec
mov
enter
xchg
aam
xor
in
test
push
add
xchg
popa
mov
jp
adc
or
scas
pop
cmpsl
andl
inc
sbb
push
iret
push
cmp
xchg
sub
xor
dec
jmp
push
sahf
setns
int
sbb
pop
loop
and
mov
xchg
dec
jmp
shrb
pop
lock
loop
stos
movsb
dec
sbb
sahf
xor
fwait
repnz
aas
mov
mov
jmp
imul
push
test
jnp
sar
addl
jmp
les
cltd
mov
outsl
sub
loop
push
add
xchg
inc
fbld
out
mov
pop
cltd
daa
mov
imull
ljmp
xor
jmp
push
push
push
lods
lret
cmp
in
es
cmpsb
lcall
das
mov
imul
add
mov
cmp
push
gs
mul
push
sbb
cmp
arpl
push
mov
pop
ret
adc
mov
inc
or
out
rcrl
dec
mov
mov
fmull
loopne
add
imul
or
mov
add
movq
jb
mov
mov
sbb
subb
cmp
ja
push
push
movsl
ds
jns
inc
mov
mov
xchg
sbb
and
js
sbb
mov
cwtl
pop
xchg
push
cs
jge
cli
fsubrs
testl
pop
push
add
mov
push
test
aam
outsl
in
sub
dec
pop
dec
mov
push
cmp
fsts
mov
lods
loopne
jb
jns
test
iret
test
pop
in
pop
iret
mov
stc
add
add
pop
sub
push
xor
insl
movsl
adc
fsubr
and
lods
mov
js
jae
pop
and
push
roll
dec
iret
xchg
add
out
int
push
mov
ds
inc
test
inc
push
jno
and
aas
xor
sarl
jne
push
icebp
xchg
mov
out
out
cs
push
ds
std
gs
inc
xabort
cmp
inc
jae
inc
movb
nop
lods
push
and
hlt
popf
xchg
testl
shll
jg
lds
jmp
adc
sub
xchg
dec
movsl
ljmp
sbb
bound
mov
test
dec
lea
inc
inc
mov
jg
push
vmread
rcrb
xor
fadds
dec
aad
jns
out
mov
cs
mov
jno
xor
push
scas
clc
sbb
clc
cmp
decb
aad
ss
pop
fs
inc
ja
loopne
xor
rcrb
sub
int
fbld
xchg
test
jp
push
and
in
jge
mov
cmp
int
loopne
das
aad
xor
cmpsl
jb
push
addr16
sub
lds
outsl
push
out
sub
sbb
mov
lret
push
and
push
mov
adc
stc
pop
push
jmp
or
jnp
pop
dec
and
cmp
jmp
mulb
subb
repnz
pusha
popa
inc
adc
or
push
pop
imul
rcrb
addr16
dec
stc
in
xorl
push
cmp
orl
out
cmpsl
xor
mov
push
add
add
adc
add
mov
ficoms
fsubs
jecxz
mov
dec
leave
lahf
adc
fstps
mov
push
cltd
lds
scas
ja
scas
insb
cli
sbb
fidivs
loopne
pop
sbb
mov
push
ret
decb
mov
sti
or
sahf
sahf
add
add
popf
add
or
jae
out
jb
cmp
cwtl
mull
sahf
jle
cmp
ret
scas
sub
ror
aas
pop
add
sti
fnsave
push
dec
inc
shl
loope
pusha
stc
mov
cld
fwait
and
cs
xchg
push
jg
fsubrs
xchg
xchg
icebp
lahf
frstor
inc
int
ljmp
dec
jne
adc
adc
mov
mov
adc
sbb
inc
loopne
adc
mov
mov
in
ret
and
sahf
sti
movups
jp
sub
push
popf
xor
aas
push
pop
push
popa
sbb
ds
mov
pop
roll
clc
pushf
mov
jmp
cmpl
in
scas
xor
cltd
scas
fcompl
stos
insb
adc
sbb
sub
insl
xor
mov
jmp
hlt
adcb
lcall
lods
jecxz
xchg
sbb
mov
jbe
enter
add
mov
push
sbbb
mov
dec
popf
daa
outsb
mov
test
push
and
ss
out
xchg
sub
jmp
mov
fidivs
js
mov
and
push
inc
inc
pusha
jmp
xchg
hlt
push
inc
faddl
push
and
aaa
jmp
dec
sbb
jno
out
xlat
rorl
cmp
test
jnp
pop
add
pop
inc
mov
inc
and
fimull
or
xor
dec
lea
push
adc
pop
inc
adc
fsts
adc
and
imul
fldenv
flds
test
jae
xchg
lods
push
lea
dec
test
adc
dec
fstps
mov
test
imul
adc
neg
jp
jb
cwtl
cwtl
aam
icebp
rcll
xchg
or
jb
ljmp
xor
pop
in
mov
bound
call
in
cmp
sub
clc
in
xchg
pop
and
roll
xor
mov
fidivrs
xchg
test
shl
cmp
shr
mov
pop
mov
js
adc
fsubrp
pop
negl
clc
sti
xor
fisttpl
sub
sahf
fdivs
jnp
andb
dec
mov
fisttpll
inc
push
add
popf
mov
fwait
push
mov
fwait
aaa
mov
mov
mov
cmp
mov
xor
aam
call
cmp
outsb
leave
cmpsl
cmp
jecxz
mov
fisubrs
cwtl
inc
mov
outsb
pop
mov
js
push
int
arpl
inc
sub
addr16
aad
sbb
mov
xor
ret
fwait
sub
lret
addb
dec
sahf
fistpll
add
mov
push
xor
and
xchg
enter
or
js
ja
cmp
into
inc
mov
mov
inc
hlt
cmc
insl
aas
dec
inc
fsubrp
jl
adc
cmc
inc
or
add
fiaddl
jle
xlat
jae
push
mov
cwtl
mov
into
negb
jnp
test
jb
mov
mov
addl
dec
scas
jmp
push
xchg
cmc
fiadds
andl
ficoml
popa
mov
inc
loop
push
sbb
lods
inc
bound
stc
xorl
jg
test
ja
lods
xor
mov
cmp
out
jb
cmpsl
dec
fsubl
jge
pop
add
movsb
clc
jnp
xchg
filds
jb
mov
sub
insb
xchg
xor
dec
lcall
add
mov
sahf
pop
jmp
and
clc
sub
int
or
aaa
jae
sbb
testl
jle
dec
roll
cmp
adc
mov
pop
cmp
xor
mov
add
cmp
push
ds
dec
outsb
imul
sub
fisttpll
stos
jl
ret
bound
add
adc
test
inc
pop
push
cmp
jae
out
int3
nop
mov
in
xor
mov
xchg
pop
and
ret
xor
jo
andl
out
leave
popa
jg
insl
pop
dec
daa
or
out
push
push
call
mov
fs
jecxz
pop
test
mov
jmp
and
xor
and
test
inc
pop
xor
sub
xchg
pushf
cli
mov
sbb
xchg
sbb
mov
movl
jne
ficomps
sti
jns
push
and
push
mov
lcall
inc
cmc
dec
hlt
into
pop
jno
cwtl
movb
ror
int3
nop
dec
fst
mov
cmp
in
mov
cwtl
push
into
iret
jb
mov
divb
xchg
test
pop
aas
stc
sbbl
rcrl
jmp
mov
xlat
daa
adcl
shlb
pop
push
push
inc
cmc
lcall
lods
pop
add
call
inc
nop
and
std
jbe
xchg
sarb
and
into
cmp
jp
push
jecxz
lahf
xchg
pop
dec
sub
dec
in
mov
addr16
aad
pop
ja
mov
push
arpl
pop
xor
jne
add
cli
and
cmp
xor
pmulhw
adc
loopne
les
sub
mov
mov
int
xchg
fdivs
mov
outsb
cmp
or
sbb
icebp
and
js
mov
andl
sub
push
aam
loopne
xchg
insb
out
aad
pop
dec
addr16
mov
mov
dec
test
jmp
test
jp
imul
and
sub
lcall
xchg
lock
jo
shrw
xor
pop
cmp
xchg
and
adcl
cld
popf
xor
scas
insb
testl
dec
xchg
sbb
ljmp
sub
popf
out
insb
inc
adc
mov
dec
push
mov
notl
inc
xchg
lret
add
inc
and
imul
pop
jnp
xor
sbb
adc
pop
mov
mov
ficoms
out
jo
out
sub
out
sahf
adc
jbe
jle
movsl
ret
cmp
mov
dec
sbb
pop
and
adc
idivb
sub
dec
dec
push
into
fstp
sbb
xor
fists
jg
imul
insl
bound
mov
lds
les
mov
loope
in
jl
test
pop
mov
shll
mov
lret
std
push
lods
or
push
in
dec
mov
ljmp
or
push
ljmp
jecxz
ss
fcmovnb
pop
jne
xchg
stos
lret
test
cmp
sub
cmp
popa
add
aam
push
out
dec
sbbb
fdivl
push
sub
sbb
dec
aaa
jbe
aad
jae
in
stc
push
divl
int3
pop
mov
and
jge
cmp
loope
jge
xchg
pop
daa
lret
in
mov
imul
scas
ss
xchg
cmpsb
int
out
imul
test
jl
divl
cmc
dec
in
ljmp
add
dec
out
orb
loopne
dec
xchg
jae
jae
add
xor
jg
fldl
push
lret
in
cs
jg
push
imulb
fisttpl
stos
arpl
lods
int
mov
int3
loope
inc
ja
icebp
lea
add
sbb
sub
xor
push
or
xor
or
into
std
repnz
cmpsb
movsl
jb
out
cmp
push
add
fs
idivb
lds
mov
pop
inc
push
fstpt
shrl
adcb
pusha
subb
cmp
push
outsl
xor
sti
test
ret
add
cltd
test
push
ss
out
je
stc
xchg
les
scas
cmpsl
jbe
nop
mov
cmp
rorb
pop
push
lahf
lds
pop
jmp
push
cli
or
mov
fwait
mov
sti
jno
cmp
pushf
fsubrs
ret
add
daa
cmp
test
nop
mov
clc
test
jl
jge
pop
xor
adc
cwtl
sub
pop
mov
pop
jae
jecxz
cmp
mov
mov
cld
je
push
adc
sahf
jbe
inc
adc
xor
add
aaa
xchg
aam
cmp
pop
mov
mov
scas
adc
xor
pop
mov
pushf
inc
repnz
repnz
mov
xor
or
out
add
push
adc
into
aam
and
hlt
dec
sub
aaa
aas
sarb
pop
cmpb
push
lret
subl
nop
mov
or
mov
ficompl
popf
jl
jo
push
add
cmp
lcall
fwait
incl
jno
push
arpl
xchg
and
or
stc
mov
xchg
xlat
mov
pop
mov
adc
test
push
pop
inc
xorb
ret
cmp
push
inc
dec
jo
xor
test
adc
jb
incl
out
jg
sub
jl
sub
xchg
dec
ljmp
add
stos
xor
lret
xor
sbb
movsl
pop
sbb
add
popf
inc
mov
loopne
imul
mov
mov
movb
inc
add
xchg
cwtl
out
jo
and
fidivrl
push
cmp
aad
jg
push
imul
xchg
ja
push
cltd
call
sub
sub
sbb
loop
ret
test
cmpsl
mov
cld
cltd
les
push
jecxz
andb
push
mov
lea
call
lods
lcall
fisubrs
cs
daa
push
add
or
and
jp
xchg
jns
jg
xchg
cmp
cmpsb
cmp
fwait
and
mov
xchg
lods
enter
mov
or
imul
mov
seto
into
fiaddl
shl
aaa
cld
add
adc
add
jp
inc
cmpsl
sub
jge
sbb
xor
in
lahf
into
inc
sub
stos
pushf
pop
in
js
stos
pop
out
inc
mov
scas
mov
xchg
mov
push
xchg
mov
sarb
mov
stos
sbb
popl
push
add
jecxz
jns
jl
in
sti
fiadds
lahf
int
adc
and
mov
outsl
stos
or
mov
daa
insb
mov
call
mov
movsb
push
out
icebp
aam
test
cmc
pusha
pop
push
jae
xor
cli
lret
push
stc
mov
popf
inc
sub
js
and
mov
test
xor
xchg
mov
cmp
jle
xchg
mov
lahf
push
jle
jbe
aam
dec
ret
jge
push
mov
shrl
test
std
mov
fnstcw
repnz
mov
pop
in
cmp
mov
inc
es
push
jne
ja
data16
add
jle
insl
xor
and
and
ror
rolb
inc
icebp
push
fildll
pop
push
loop
enter
dec
and
push
inc
mov
jmp
push
jmp
test
push
xor
nop
pop
std
iret
adcl
or
mov
mov
push
shlb
jle
inc
push
pop
inc
push
loop
mov
and
sahf
ror
pop
xor
inc
mov
shrb
and
xor
fs
scas
and
dec
stos
fistl
sbb
or
sti
sahf
cli
push
inc
mov
outsb
pop
add
sub
in
jo
push
or
ds
sti
mov
jle
or
int3
negl
xor
pop
and
lret
add
inc
loop
call
inc
mov
mov
in
cmpsl
add
mov
mov
aas
mov
push
dec
sbb
cmp
into
sbb
dec
test
pop
pop
cli
mov
pop
mov
and
add
dec
adc
iret
adc
popa
lcall
jp
xorl
cs
lahf
jecxz
adc
lcall
repz
shl
dec
or
sub
or
lcall
out
push
lretw
movsb
xor
fistl
pop
sbb
inc
adc
movsl
adc
cmc
xor
sti
push
notb
push
lods
ss
sarb
jno
sbb
js
sahf
push
push
mov
mov
sbb
lahf
call
jne
mov
pop
mov
xor
stos
pop
in
enter
sti
lods
sub
xchg
shrb
push
stc
out
movsb
xchg
push
shlb
jb
lret
fwait
enter
push
xchg
inc
nop
lods
iret
mov
xor
push
leave
sub
ss
mov
movsl
rolb
sti
xchg
je
or
xor
jl
cmpb
sbb
pop
mov
sbb
mov
push
xchg
sbb
jns
xor
bnd
push
enter
push
pushf
push
sub
and
daa
or
push
jmp
stos
sarl
test
xor
aaa
mov
outsl
adc
in
les
popa
mov
add
push
push
rcrl
fdivrs
xchg
xor
les
jbe
ret
in
and
or
and
orb
inc
pusha
xchg
cmpsl
iret
jbe
outsb
dec
pop
call
jb
mov
sbb
pusha
jno
push
inc
jne
lret
mov
ljmp
adc
push
xchg
pop
incl
or
or
int
leave
add
xor
mov
out
add
jp
test
xchg
ds
and
test
stos
std
sub
sbbl
jnp
push
xlat
shll
cmp
dec
cmp
cmp
dec
add
aam
mov
sub
scas
add
leave
loopnew
into
dec
iret
mov
pop
movsb
pop
mov
jnp
jle
ret
cmp
sarl
sbb
push
loope
fcoml
cmp
sbb
xor
cmp
daa
sub
push
std
shlb
mov
mov
das
inc
mov
jns
mov
hlt
arpl
cltd
cmpsb
push
jmp
xchg
sti
iret
fsubrl
jae
int3
out
dec
mov
inc
fidivrs
and
or
jno
inc
xchg
imul
dec
mov
jns
loope
push
sbb
or
rcrl
cmp
jge
cmp
xchg
xchg
jo
cmpsl
lcall
scas
xchg
inc
and
pop
add
hlt
jp
jnp
stos
fbld
movsb
jl
addr16
add
rorb
sbb
dec
ss
movsb
mov
sbb
hlt
pop
jecxz
cltd
out
xchg
les
lods
pusha
test
dec
out
es
mov
dec
jae
fldt
in
lock
mov
adc
cli
push
mov
inc
cmc
mov
fbld
ficomps
cmp
or
and
rorb
insl
fucomip
push
aad
and
sub
jmp
icebp
bound
in
lcall
out
push
jbe
cmp
cmpsl
pop
addr16
inc
cmp
arpl
xor
cmp
insl
test
loope
cmp
in
jne
cltd
ret
dec
or
xchg
pop
roll
lods
sbb
and
xchg
fildll
lock
popa
lods
mov
dec
mov
fwait
xchg
push
movsl
lods
icebp
pusha
test
xlat
add
movsl
cmp
repnz
pop
mov
ret
dec
mov
fdiv
inc
in
clc
adc
cmp
enter
mov
mov
adc
add
ret
pusha
repnz
mov
je
adc
xor
test
int3
in
pop
lock
out
jge
shll
mov
lret
in
repnz
sbbl
xchg
inc
aam
or
sub
int3
dec
jb,pt
jb
mov
jmp
xor
addr16
stos
pop
add
mov
pusha
dec
adc
out
sbb
jl
jecxz
jne
xor
aaa
push
adc
insb
push
in
and
std
jne
xchg
lret
pop
xchg
outsl
jl
les
out
test
jne
outsb
out
push
ljmp
pusha
sbbl
dec
stos
addl
imul
jne
xchg
insb
push
mov
lret
jae
push
outsl
test
push
lret
push
les
add
lret
or
fists
xor
and
cs
cmp
sub
dec
inc
push
out
sub
popf
xor
js
jecxz
mov
int3
std
jmp
inc
sbb
jb
add
fnstsw
pop
push
push
fsts
xchg
jb
or
mov
popa
lahf
jmp
jle
ds
jg
call
inc
shrl
jmp
fldln2
cmp
cmpsl
cmp
dec
and
jb
fldl
xor
js
mov
adc
outsb
das
add
jno
cmp
out
lea
sbbb
sbb
xchg
jge
or
out
xor
int
mov
adc
test
and
mov
js
scas
popa
jl
pop
mul
fldcw
pop
lods
inc
popa
xchg
inc
xor
arpl
jg
daa
movsl
cmp
out
ret
mov
outsb
inc
and
xchg
insb
movsb
rcll
push
mov
mov
sub
pushf
rep
negl
sti
dec
cld
lahf
adc
push
pop
xor
neg
loopne
imul
imul
jle
icebp
cmp
push
xchg
test
leave
or
data16
aaa
cmpsb
fistpll
movsl
into
jae
add
pop
and
xor
adc
js
out
xor
mov
test
mov
outsb
fwait
in
xor
inc
sbb
sahf
cmp
xchg
das
ja
dec
push
fadds
mov
mov
mov
xchg
jge
sub
ljmp
xchg
mov
test
mov
sarl
in
out
pusha
adc
movsb
xor
adc
or
mov
mov
xor
xorb
inc
mov
sbb
jg
lret
inc
xchg
and
mov
pop
lds
jmp
in
into
fcomps
lret
or
jne
push
call
jmp
mov
fistps
mov
popa
mov
xorb
shl
add
jno
xchg
jo
add
add
adc
cmp
cmp
adc
fsubl
mov
lahf
xchg
mov
sti
pop
lret
cmp
sbb
inc
test
clc
stos
dec
or
push
jb
lahf
fmulp
push
jb
imul
xchg
or
das
pop
xor
lret
sub
push
xchg
sbb
xor
pop
cli
jecxz
fwait
mov
sahf
mov
push
mov
test
loop
arpl
out
push
out
xlat
outsb
pushf
lock
call
inc
dec
xchg
out
andb
cmp
dec
push
mov
push
popa
mov
inc
sub
xchg
pop
call
or
mov
mov
push
je
test
push
pop
ja
addr16
mov
xchg
aas
shrl
ficomps
xor
ds
inc
das
pop
jle
jecxz
mov
adc
dec
ret
aas
movsl
test
sub
mov
fadd
jmp
std
lcall
cmp
rorb
icebp
mov
lahf
out
lahf
cld
int3
enter
paddsw
and
push
sbb
sbb
lods
xchg
data16
imul
inc
scas
aad
push
gs
das
je
fcoms
xor
mov
hlt
jne
xor
sti
lds
mov
sbb
dec
xchg
stos
int
dec
dec
es
lods
xlat
push
sub
jno
inc
out
fimuls
iret
loopne
jnp
push
out
test
lahf
ja
mov
jns
pop
dec
mov
mov
loopne
xor
loope
cs
mov
dec
shrb
in
rep
sarb
js
punpckhdq
adc
mov
and
jno
jbe
push
pop
mov
sbb
sbb
rcr
je
xor
pusha
repnz
fmuls
push
shrb
push
aas
and
addb
xchg
out
jmp
adc
or
pop
fisubrl
sub
sbb
pop
aas
mov
cwtl
aam
push
cmp
icebp
xchg
cld
repnz
jg
pop
fimull
sub
outsb
inc
jmp
push
fwait
ss
sub
sarl
lret
aam
sahf
aas
pop
xchg
and
mov
test
lret
and
push
mov
jb
mov
cli
mov
mov
rorb
jbe
lods
std
sbb
jl
dec
xchg
scas
jle
jae
sbb
pop
flds
lcall
lret
dec
dec
cltd
or
xchg
cmp
cs
cltd
cli
or
insl
and
sbb
in
push
loop
sub
test
mov
pop
adc
mov
lea
pop
add
mov
call
add
shl
push
mov
stc
test
negl
sti
sbb
adc
and
pop
dec
mov
mov
jmp
mov
rolb
jo
mov
movsb
inc
mov
lret
add
dec
sbb
daa
cmc
jp
shrb
mov
sub
jno
xchg
jecxz
das
lret
push
scas
xor
cmp
adc
insl
in
fisttpl
daa
movsb
inc
push
and
js
sub
nop
cmp
push
or
pop
xchg
loope
imul
lcall
sar
adc
push
add
out
scas
mov
ljmp
aam
cmpsb
lods
in
push
inc
add
pop
xchg
pop
les
rcl
daa
dec
sbb
lret
ret
jne
mov
push
sarl
mov
mov
out
sahf
add
dec
loope
sub
cmp
push
ret
in
add
pop
and
lds
test
jne
xchg
add
mov
jp
ds
inc
js
xor
mov
xor
inc
dec
cmpsl
rorl
leave
andl
and
inc
and
mov
jne
mov
sub
into
dec
mov
sub
lds
inc
negl
pop
ljmp
js
insb
xchg
xchg
aam
sub
nop
sub
popa
lds
push
fdivp
hlt
cmp
aam
sub
sbb
outsl
add
mov
jl
popa
aam
pushf
push
xchg
cmp
push
out
or
jecxz
mov
adc
xorl
lahf
enter
cli
loopne
mov
jg
ret
push
out
mov
jmp
add
lret
sti
sbbl
xchg
xchg
test
test
test
loope
sarl
push
sarb
sub
sub
jns
js
cmp
mov
vcmppd
stos
cmc
in
mov
bound
jecxz
pusha
mov
jbe
les
jmp
xor
push
dec
cmpl
fcoml
jge
mov
inc
push
dec
leave
jnp
cmp
lods
in
cmp
out
cmpsl
or
shrl
fldcw
fwait
and
sub
xor
push
call
or
push
pushf
cmpsl
lret
xor
addr16
cltd
daa
sbb
rcrb
stos
outsb
xor
pop
cltd
mov
or
movsb
cmp
sbb
jl
fistps
enter
xor
andl
push
into
mov
mov
bound
lcall
test
mov
jno
cmp
dec
mov
dec
inc
jae
cs
inc
les
or
xlat
sub
push
loop
and
mov
mov
mov
cmp
pop
jl
mov
mov
dec
jnp
sub
jne
hlt
mov
ss
mov
jle
jb
sub
and
jb
jmp
jno
inc
out
test
int
ds
js
xor
fstpl
cmp
cmpsl
ja
stos
stos
sahf
or
popa
pmulhuw
in
sbb
enter
push
lock
fwait
adcb
ret
fwait
add
notl
pusha
rcr
mov
xor
push
out
inc
stc
jge
inc
mov
fcmovnb
pop
iret
dec
notb
pushf
xchg
xor
cmp
subb
arpl
rolb
inc
mov
push
hlt
mov
mov
cld
push
add
pop
push
in
mov
xor
pop
cmp
repnz
rorb
daa
imul
cwtl
mov
mov
sahf
movsl
mov
shrl
cmp
sahf
negl
fistl
cmp
insb
es
pop
js
and
add
inc
pop
test
push
push
pop
stc
outsl
sub
loope
mov
rcrl
ja
pop
popf
xor
mov
mov
dec
in
pop
pushf
ljmp
mov
icebp
jecxz
pop
lods
arpl
decb
aas
or
lock
scas
shlb
dec
daa
adc
fmuls
push
add
cli
and
mov
mov
dec
clc
out
out
lret
jl
lcall
rep
jno
mov
repnz
mov
sbb
out
ret
add
out
in
sub
sub
mov
jg
mov
push
lret
in
subb
push
mov
pushf
stos
jmp
mov
push
test
mov
or
mov
cli
stos
jae
addl
repnz
pop
jbe
es
cli
js
jmp
cmovg
jnp
mov
sbb
or
test
ret
les
cmp
or
dec
push
push
sub
repz
insb
and
mov
fcoms
push
movsl
cs
cld
outsl
in
movsb
mov
in
inc
xor
xor
test
lds
rcrl
xchg
pop
lds
fcom
mov
cmpsl
dec
sub
psrlw
jmp
pop
xor
pushf
ret
mov
andl
xor
notl
loop
arpl
je
out
adcl
scas
sub
shrl
test
jge
test
jb
dec
loop
inc
mov
pop
sub
pop
pop
dec
int
sbb
and
cmp
daa
jno
mov
inc
test
into
push
test
nop
lret
xchg
decb
cmc
jl
xlat
push
popa
jae
orl
xchg
test
jg,pn
jae
cmp
xlat
inc
out
mov
or
mov
sub
xchg
adc
out
dec
push
and
fs
push
dec
sub
out
testb
pop
clc
adc
andb
rclb
out
and
mov
push
cld
enter
mov
mov
aas
xor
mov
and
sub
gs
push
cmp
rcrl
cmp
cmp
mov
mov
lods
ja
add
sub
lds
and
jnp
mov
xchg
xchg
test
aas
push
ja
das
sbb
cmp
fmuls
push
jae
pop
or
inc
jmp
add
mov
cld
fs
sbb
add
mov
dec
stos
idivb
rcrb
pop
add
mov
cltd
and
add
xor
cltd
xchg
rolb
sub
sti
add
mov
lods
test
xchg
push
lods
lods
sub
mov
mov
fcomps
pop
jl
dec
loopne
das
lahf
cli
push
lock
and
pop
xchg
mov
testb
outsb
outsb
inc
arpl
dec
fwait
sbb
aaa
dec
jbe
je
insb
lock
or
lods
xor
sbb
fs
mov
pop
mov
sub
mov
or
mov
sub
fprem
outsb
push
fwait
pusha
xchg
adc
mulb
imul
lret
inc
cmp
jp
aad
repz
add
pop
push
mov
ret
mov
adc
jnp
cmpsb
push
mov
out
icebp
xor
rorb
jns
inc
adc
dec
mov
dec
insl
ret
cmc
fs
sub
repnz
xchg
iret
rcrb
mov
add
insb
cli
inc
push
sub
call
das
xor
lcall
fwait
mov
inc
lods
sbb
and
pop
inc
xor
leave
fwait
cmpb
out
add
or
sbb
hlt
fadds
xorb
addr16
fadds
popa
cmp
sbb
scas
mov
inc
adc
pop
inc
adc
mov
cmp
cmpsb
sbb
xchg
ljmp
add
clc
xchg
popf
mov
or
out
cmpsb
sti
pop
popf
push
ljmp
mov
dec
push
push
dec
lock
cld
adc
ret
arpl
ds
xlat
cmp
add
movsl
or
jbe
lcall
mov
jnp
or
sbbl
je
insb
mov
clc
test
scas
mov
dec
mov
pop
mov
gs
xchg
mov
mov
jb
xor
adc
outsb
jae
sbb
inc
push
mov
sbb
jp
cmp
dec
loop
adc
jle
pop
in
add
movsb
mov
pop
jbe
test
outsl
in
cwtl
sarb
xor
and
lds
sub
push
and
sub
push
push
in
mov
lds
add
mov
or
push
mov
jo
sub
or
orb
hlt
adc
test
loope
xor
leave
fimuls
mov
shll
jae
push
mov
mov
fistpll
cmc
sbbl
mov
out
enter
add
sahf
int3
in
mov
jne
aaa
popf
icebp
adc
xchg
or
inc
mov
enter
xor
in
repnz
test
push
std
mov
pushf
shll
mov
ljmp
add
outsl
out
test
cmp
mov
inc
lds
ret
and
clc
mov
xor
mov
push
shlb
mov
and
push
bound
and
rorl
cmp
shl
pop
popl
xor
and
or
lret
lea
out
adc
pusha
out
push
icebp
fidivrl
in
dec
and
scas
repnz
push
mov
pop
shrb
fcompl
inc
fwait
dec
jo
cld
ds
mov
xor
xchg
adc
pop
cmp
mov
mov
jge
scas
andb
fs
cmpsb
outsb
outsl
mov
dec
cmp
in
loop
data16
aaa
lret
sub
xchg
in
sbb
xor
mov
inc
das
sub
jmp
addr16
jb
xorl
imulb
push
xchg
ja
enter
jne
call
lods
dec
cwtl
out
and
or
aaa
push
leave
push
sub
fiaddl
jbe
aam
insl
stc
cmp
fsubr
test
sahf
mov
dec
fisubrl
add
jmp
insb
pop
lds
popf
adc
inc
insb
shrb
scas
sbb
repnz
fbld
mov
sub
lods
and
cli
mov
inc
cs
repnz
out
pusha
push
inc
xor
in
sub
mov
jne
mov
ficoml
lret
bound
ja
mov
sbb
lret
pop
lret
jnp
mov
push
cmpsl
fldl
jecxz
lret
mov
push
push
ret
mov
inc
push
hlt
push
sbb
cmp
mov
bound
xchg
lods
sub
fsts
sbb
adc
xor
in
out
lods
das
test
pop
mul
cmp
pop
sti
test
dec
ljmp
clc
call
mov
mov
push
mov
and
push
scas
cltd
jle
jns
push
jnp
aam
scas
jne
dec
pop
inc
daa
dec
xchg
je
jns
cli
dec
outsb
scas
movsb
dec
imul
or
mov
movsl
subl
incb
scas
aad
adc
sbb
inc
adc
je
mov
xor
aas
pop
mov
lock
lret
fxam
repz
pop
aam
sahf
xlat
push
mov
and
sub
jp
pop
scas
cli
sbb
inc
insl
jo
dec
jg
jecxz
mov
sub
std
xchg
jnp
lcall
aas
jge
in
jne
xchg
lds
out
fs
mov
jge
dec
in
stos
fincstp
xor
out
jmp
push
pop
adcl
or
xchg
popa
ret
xor
mov
jge
fisubl
ret
arpl
push
outsb
sub
and
in
dec
lret
push
pop
outsb
or
in
roll
idivl
addr16
mov
stos
xchg
cmp
or
add
sub
push
enter
cwtl
mov
adcb
xor
lods
bound
imul
add
xchg
add
mov
xchg
pop
lea
iret
not
or
push
pop
pop
add
pop
lods
push
cmpsl
jb
pop
push
fbld
ss
out
push
mov
mov
outsb
clc
mov
mov
repnz
fldenv
mov
add
xchg
mov
je
dec
fs
test
imul
jl
test
loop
loop
test
lds
mov
loope
jne
and
sub
inc
inc
inc
mov
daa
sbb
cmp
add
push
mov
pop
dec
push
aaa
adc
fsubrl
daa
ja
jns
mov
xorl
mov
and
leave
fisubl
dec
sub
adc
cmp
cmpsb
mov
imul
or
test
jle
dec
adc
add
cmp
sahf
fadd
mov
inc
fs
test
xor
cmp
sti
scas
xor
std
or
mov
and
mov
loop
cld
fst
add
out
stos
ret
xor
hlt
xchg
inc
aam
jnp
push
pop
sbb
insl
add
int3
daa
adc
jecxz
icebp
fisttpl
push
shll
idivb
inc
lods
inc
je
sub
js
stc
pop
add
sbb
jl
ret
ja
out
push
loope
jg
fldt
dec
fisttpl
xchg
es
jmp
push
mov
push
cs
pop
sbb
in
incl
and
mov
aaa
ljmp
hlt
out
or
lcall
or
and
push
scas
clc
jl
icebp
xorl
fsubrl
adc
les
inc
sti
and
push
jle
sub
daa
nop
cmp
cmpsb
addr16
jb
mov
adc
ret
aas
mov
pusha
gs
test
push
xor
mov
mov
outsb
push
lret
xchg
jmp
imul
sub
sbb
scas
int3
test
scas
dec
test
xor
repnz
icebp
push
out
out
sbb
daa
rcrb
add
cmp
in
repz
test
inc
es
sub
jmp
push
cltd
lods
xchg
fildll
or
and
jae
or
xor
popf
mov
sbb
jnp
jnp
inc
iret
lea
lcall
movsb
push
hlt
push
pop
xor
pop
and
out
test
testl
sub
jge
xor
les
insl
bound
test
aas
gs
push
add
hlt
imul
scas
sbb
in
sbb
icebp
lcall
and
jecxz
call
ja
ja
xchg
in
je
cmp
dec
or
and
les
stc
jnp
add
imul
fdivs
push
pop
lret
cwtl
mov
icebp
or
std
jno
dec
mov
xchg
mov
adc
decb
and
adc
ret
dec
sbb
int3
xchg
in
pop
repnz
sub
lcall
mov
xchg
push
push
push
cltd
pop
incb
xlat
pop
ret
push
mov
push
xchg
and
ljmp
mull
sub
in
adc
testl
das
jge
sub
xor
rclb
jle
pop
pop
add
xchg
test
or
nop
pushf
scas
loopne
aas
in
ret
mov
daa
push
cwtl
es
pusha
push
mov
sub
or
and
mov
loop
adc
out
test
and
jo
leave
popf
enter
out
sbb
and
push
stos
dec
movsb
imul
mulb
lods
aam
sub
pop
cld
adc
xchg
adc
inc
cmpsb
insb
xor
cmp
or
or
jnp
fwait
dec
inc
pop
cwtl
out
jnp
jnp
push
std
ret
lahf
sub
mov
inc
dec
push
cmpsb
int3
mov
cmp
and
push
push
mov
mov
pop
sub
pop
push
mov
jo
and
dec
adc
jmp
jne
scas
or
jp
clc
mov
and
out
push
andb
shrl
xchg
mov
push
push
iret
mov
fstl
addl
fstl
jmp
inc
daa
orl
rcr
xchg
subb
outsb
pop
adc
xor
cmp
fistps
cmc
cli
int3
and
shlb
popf
xchg
mov
add
push
lret
mov
sbb
call
fdivl
push
je
jne
mov
cs
pushf
ljmp
mov
repz
or
sbb
pop
in
jne
mov
test
mov
mov
insb
adc
fs
dec
mov
cs
dec
jl
xor
pop
mov
mov
loopne
rorl
xor
jbe
repnz
push
mov
sbb
jmp
mov
sub
add
and
enter
loopne
inc
test
jb
pop
andb
lret
add
dec
rcl
mov
xchg
ss
and
cltd
jmp
jmp
and
mov
mov
rcrl
pop
dec
gs
jecxz
push
and
arpl
and
jo
shrd
ret
jge
mov
fisttpll
xchg
pop
pop
adc
push
jle
adc
repnz
inc
xchg
mov
daa
shrl
inc
xchg
outsl
leave
divb
cmp
push
mov
jp
ftst
push
pop
dec
cmc
add
lcall
insl
popa
insb
jmp
xor
in
push
xchg
xor
pop
fnsave
and
shlb
mov
cmpsl
shrl
inc
xchg
sub
jecxz
sbb
orl
dec
mov
ret
mov
fldt
mov
mov
lcall
xor
xor
add
add
flds
adc
in
and
adc
sbb
pop
and
negb
push
dec
inc
xor
sub
jle
in
cmp
jge
push
fsubr
jp
stos
shrb
push
or
andl
test
mov
mov
inc
sbb
or
or
lods
bswap
jb
sub
or
stc
or
sbb
bound
mov
lods
incl
mov
shrb
jp
fwait
outsl
stos
lcall
out
lods
pop
mov
dec
imul
enter
in
cmp
arpl
nop
pop
sub
sbb
xchg
xchg
xchg
mov
xlat
fnstsw
push
out
addl
lds
cwtl
nop
ret
sbb
mov
paddb
adcb
pop
mov
ss
inc
test
loope
adc
mov
cmpsl
inc
mov
mov
add
stc
xor
cmp
mov
enter
std
mov
testl
in
daa
insb
insl
cwtl
cltd
adc
xchg
sbb
ds
push
mov
subps
mov
int3
xchg
inc
das
inc
ret
mov
lcall
and
jno
fdivs
into
dec
jp
cmp
mov
sub
das
fimuls
cmp
insl
popa
cmp
push
in
icebp
or
fdivl
sahf
and
jecxz
ret
test
es
jbe
xchg
xor
insl
fxch
js
cmp
cmp
xor
sbb
adc
cmp
iret
and
sbb
fimull
icebp
sbb
lcall
mov
ret
repz
insl
addr16
bound
clc
inc
scas
cmp
jg
mov
xchg
sub
insb
stc
mov
mov
insl
pand
sahf
clc
fsubr
pop
in
jl
adc
sbb
cs
mov
cs
mov
icebp
enter
push
jno
leave
imul
push
test
idivb
xor
mov
mov
dec
xor
mov
clc
es
sahf
repnz
add
movsl
leave
or
stc
sbbb
dec
stos
shll
ds
mov
cwtl
pop
nop
rorl
filds
mov
stos
mov
xchg
stos
xchg
adc
push
push
sbb
sti
adcb
cld
lods
pop
in
push
pop
int3
cmp
mov
and
fisubs
xchg
or
sub
cmc
jle
pop
sub
sarl
mov
aas
je
dec
xchg
test
push
roll
jns
push
pusha
test
mov
push
adc
sub
leave
sub
xor
mov
pop
adc
addr16
cwtl
xlat
pop
jno
cmp
ret
mov
aam
es
sbb
push
dec
mov
loopne
stos
cmp
std
jbe
flds
bound
mov
or
loope
or
es
sbb
stos
sbb
push
ret
js
xor
arpl
mov
ss
inc
dec
mov
icebp
jg
push
inc
clc
lcall
scas
sub
push
xchg
out
int
scas
push
pop
mov
pushf
std
push
adc
or
cmpsl
ret
jns
insb
sbb
jg
test
jmp
gs
fildl
adc
scas
add
std
repnz
gs
movsb
stos
loope
les
int
aaa
mov
and
stc
leave
ds
push
jnp
and
imul
lds
fcomps
enter
push
or
pop
rcrl
inc
stos
adc
mov
cmp
sbb
pop
jl
add
fmulp
dec
fcomps
adc
jmp
sub
int3
xor
pop
push
jl
outsl
cmp
xor
mov
inc
dec
mov
jmp
xor
imul
mov
fistps
dec
mov
popf
add
scas
cwtl
subb
mov
ret
xchg
adc
dec
lcall
sti
faddl
out
rorl
sbb
jne
shlb
repnz
mov
gs
imul
pop
xor
int
int3
lea
xchg
sbb
ds
mov
xlat
ret
mov
out
loop
out
test
dec
imul
mov
lahf
aaa
jp
out
lds
es
lods
xor
cmpsb
sbb
rclb
xchg
cld
adc
ljmp
test
xchg
jecxz
add
out
cmpl
cmp
addl
sbbb
lea
notb
sti
enter
out
hlt
cld
scas
cmp
shlb
nop
in
cmpsb
leave
mov
xor
mov
mov
iret
mov
jmp
popf
aad
and
in
int3
add
and
rorb
imull
push
into
pop
mov
sub
dec
ret
pop
mov
decb
mov
int3
push
mov
push
inc
cmp
and
stos
pop
fisttpll
in
je
sbb
jae
fildll
mov
sbb
jle
shl
lcall
in
mov
jns
andb
rcl
movsb
lock
pop
mov
bound
shlb
cmp
into
loop
subl
stos
mov
mov
fcoml
outsb
inc
pop
jge
lock
pop
and
into
inc
fidivl
aaa
xor
out
fnstsw
xor
jbe
push
ljmp
xchg
cmp
adc
pusha
stos
icebp
aas
sbb
inc
sbb
ss
xor
push
stos
out
cmp
sti
push
ret
bound
insl
out
push
sbb
fldl2e
rol
imul
xchg
out
cmp
dec
aas
js
xor
push
pop
jle
movsb
call
cmp
add
sub
xchg
dec
push
mov
dec
mov
push
jg
xor
std
push
aad
std
jne
lods
pushf
inc
repz
ljmp
mov
int
test
xchg
lock
sahf
pop
clc
pop
int
jnp
inc
or
add
adc
dec
rorl
jge
iret
int
or
and
addl
adc
xor
int3
cmp
dec
ficompl
jp
daa
push
iret
nop
inc
popa
fcoml
call
lock
lcall
ljmp
popa
cli
mov
icebp
pusha
add
mov
dec
mov
fadd
aad
stc
std
add
call
add
cmp
adc
xlat
out
mov
testl
sub
xchg
jecxz
data16
and
xor
in
adc
fistps
movups
pop
mov
loope
clc
aas
or
jle
dec
icebp
insb
lret
in
daa
inc
outsl
sub
push
lcall
mov
imulb
adc
inc
in
arpl
add
aad
out
sub
or
xor
outsb
dec
mov
scas
inc
xchg
dec
lcall
cmp
and
jbe
cmp
fdivrl
dec
enter
clc
and
les
sbb
ja
and
scas
jo
rorb
inc
jnp
cmp
scas
shlb
div
mov
lods
jle
js
cwtl
inc
xorl
jmp
aam
add
mov
jbe
push
test
mov
leave
dec
push
jne
stc
cld
push
in
mov
stos
jne
sub
jg
inc
lcall
sub
jmp
in
sar
test
sub
pop
xor
into
jae
cmp
fistpl
or
adc
jb
jmp
add
jne
loope
and
and
jg
sbb
mov
or
mov
jmp
cmp
into
mov
pop
cli
cmpsl
xchg
sbb
mov
mov
cmpsb
pop
push
jbe
jge
inc
jbe
shrb
movsb
pusha
pop
cmc
das
js
push
mov
dec
jle
orb
mov
bound
fldenv
cltd
add
div
outsb
stos
aas
das
aas
lock
mov
add
jge
in
inc
cmpsb
in
jae
mov
lea
lcall
cltd
jmp
dec
rol
inc
fiaddl
jecxz
in
insl
gs
mov
loopne
xor
sub
cmp
les
add
mov
fisttps
fidivrs
es
jl
jmp
mov
xchg
in
repz
and
push
mov
jae
clc
repnz
mov
ret
stos
sub
add
jmp
ljmp
call
sub
bnd
rcrl
stc
adc
fnstcw
lret
xchg
movsl
mov
repz
mov
clc
push
or
xor
mov
xchg
xor
das
dec
movsb
lret
rcll
call
in
lock
xchg
adc
popa
call
cmp
fisttpll
repz
and
shrl
inc
inc
jp
add
xor
cli
ja
cmpsb
xchg
cld
inc
loopne
pop
push
lcall
test
xchg
hlt
push
fstps
insb
dec
sbb
push
sub
mov
fisubl
dec
mov
paddw
popa
test
and
jmp
xchg
loope
ret
mov
cmc
lods
testb
pop
mov
xchg
lret
push
test
xchg
inc
mov
in
inc
cmpsl
xchg
jbe
lds
daa
stos
cmpsb
arpl
push
stos
movsl
push
in
lods
xchg
add
repz
fisttpl
arpl
cmp
nop
bound
push
xor
cmp
test
xor
test
mov
add
lcall
out
insl
test
xchg
idivl
push
sbb
xchg
adc
dec
rcrl
repnz
fldcw
js
jb
xor
pusha
subl
iret
subb
fistl
adc
pop
int
pop
add
jl
mov
sub
movsl
call
movl
xchg
pop
pop
jnp
pop
outsb
push
xchg
sub
pop
popa
adc
pop
cmc
das
sub
arpl
leave
fdiv
repnz
jbe
cmp
arpl
mov
stos
popf
out
dec
dec
ljmp
mov
arpl
pop
lea
jle
dec
mov
add
mov
imul
and
int
fnstcw
sbbl
sub
dec
dec
xorl
movsl
jne
jns
push
pushf
and
sub
push
push
push
imul
pop
aam
mov
push
mov
pop
js
or
sub
aam
shlb
jmp
adc
inc
push
in
add
enter
outsb
mov
jno
jb
sbb
aam
jo
cmp
push
fnsave
adc
dec
sub
test
or
cld
nop
sbb
mov
pop
adc
add
pop
inc
lret
mov
hlt
test
repnz
xchg
jecxz
adc
out
dec
idivl
pop
add
mov
cmp
jle,pn
lahf
dec
pop
vmwrite
mov
clc
divb
jae
fdivs
sub
mov
xlat
loop
scas
lret
xchg
sub
add
sbb
mov
mov
outsb
pop
mov
and
or
xor
into
cmc
mov
stos
push
xchg
test
js
push
fistpll
addl
stos
or
mov
mov
out
loopne
inc
fsubr
aas
add
int
mov
stos
ja
sbb
fwait
and
inc
out
insb
jl
shrb
lret
imul
pop
jge
mov
out
lock
shl
or
mov
push
mov
out
mov
pop
lea
mov
push
dec
push
incl
inc
icebp
call
insl
stos
imul
jg
lahf
cmp
fisubrl
or
mov
cmp
sub
xchg
sbb
mov
jo
xchg
jae
adc
sahf
fistpll
add
lret
das
xor
mov
add
push
push
mov
adc
mov
fistpl
lret
cli
rolb
iret
mov
mov
xchg
and
push
xchg
cli
push
sub
fcmove
repz
mov
shrl
add
mov
das
in
sub
sub
inc
xchg
mov
mov
xor
mov
sbb
fcmovb
pushf
test
dec
mov
jo
or
loopne
insl
mul
add
mov
jg
and
test
les
pop
sub
enter
mov
mov
dec
push
jbe
cmpsb
lds
adc
or
xchg
sub
and
pop
inc
mov
decb
fisttpl
xchg
ljmp
or
adc
out
pushf
adc
pusha
jns
or
comiss
add
cmc
or
sub
adc
mov
imul
in
icebp
popf
inc
mov
call
push
loop
jno
inc
jg
pop
dec
cld
mov
out
pusha
jbe
icebp
inc
sahf
arpl
inc
mov
test
and
ja
xchg
jnp
fiadds
test
xchg
mov
testl
adc
add
outsb
ret
out
adc
sub
push
and
jno
nop
jle
cltd
push
cmp
cmp
cli
xchg
in
mov
dec
mov
dec
lods
push
jg
xchg
mov
pop
lcall
bswap
jl
lds
push
movsl
jmp
push
sahf
out
pop
push
js
dec
cmpsb
lock
sbb
aad
push
xchg
push
or
lods
test
and
dec
mov
addl
aas
pop
adcb
stos
pop
mov
mov
push
sarb
jns
mov
int
inc
fstpt
mov
or
xchg
mov
mov
jno
jns
mov
in
jp
sbb
or
jae
ret
jecxz
stos
add
lret
in
das
repnz
rol
xor
or
cwtl
daa
ret
mov
out
dec
jne
repz
xor
inc
ror
sub
jl
pop
lock
push
leave
insl
sbb
xchg
into
shll
mov
cmp
ss
lcall
xchg
mov
loopne
and
mov
mov
jmp
fldt
xor
aad
mov
push
push
dec
add
or
testl
xchg
sar
mov
clc
sub
add
scas
in
cmp
jae
mov
pop
add
lods
mov
pop
jno
xchg
pop
frstor
push
adc
ljmp
daa
lods
mov
les
out
xchg
dec
js
popa
stc
js
adc
cmp
or
sub
mov
ja
test
jae
or
cs
das
sub
imull
dec
mov
sbb
fs
add
fxch
std
and
or
pop
xor
into
push
out
adc
lret
icebp
mov
cmp
mov
jo
mov
mov
gs
das
pop
add
push
out
loopne
sbb
push
pushw
cwtl
aaa
fisubrl
and
cld
jmp
stos
out
xchg
jmp
je
or
popa
mov
das
mov
call
fldl
stc
mov
push
cli
les
add
pop
add
push
sbb
mov
mov
adc
sub
adc
stos
cmp
adc
int3
cmp
fadds
test
pop
out
cmp
jmp
sub
mov
dec
jmp
jge
or
and
mov
hlt
imul
mov
or
jmp
push
data16
cli
add
jnp
movsb
out
dec
fsubp
jmp
inc
adc
outsl
push
mov
pop
sbb
dec
mov
mov
sbb
xor
or
xchg
inc
mov
arpl
outsl
lret
nop
test
stos
sbb
insb
jle
mov
xor
ja
loopne
xorl
mov
cwtl
xchg
stos
data16
sbb
inc
test
mov
fwait
ror
mov
push
xchg
jl
cld
inc
dec
test
mov
sub
xor
cli
das
hlt
push
pop
mov
push
in
icebp
pop
stc
test
dec
jae
push
pop
and
sub
fcmovnbe
xor
or
iret
jp
fisttps
aas
jns
fsubrp
in
ficompl
mov
dec
or
xor
insb
mov
and
jns
clc
pop
lds
sub
push
jb
sub
jb
das
cmp
in
pop
insb
mov
adc
loop
add
stos
fwait
mov
mov
jl
pop
popa
dec
pop
pop
cmp
jmp
dec
sbb
ds
dec
leave
add
xor
lock
mov
cli
sti
pop
adc
inc
xor
xlat
jp
repnz
in
rorb
jl
in
movl
divb
hlt
ret
mov
mov
ds
pop
sub
lret
mov
mov
cs
add
pop
push
into
sarb
andl
jns
pop
sub
mov
ficoms
je
daa
fwait
sbb
rcll
out
sahf
aam
loope
add
sbb
cmp
arpl
xlat
dec
mov
pushl
ret
mov
or
xor
in
xor
mov
pop
cli
sub
fisubrl
rolb
cmp
pop
pop
mov
sbb
dec
fcoms
imul
inc
jne
mov
cmp
in
in
testl
test
xor
divl
hlt
pop
push
imul
lahf
repz
sub
mov
sbb
stc
and
divb
dec
sbb
jno
xchg
dec
dec
test
jae
gs
dec
daa
ds
inc
jnp
add
and
inc
popf
into
mov
int3
dec
pop
adc
dec
sbb
push
push
inc
leave
push
pushf
xor
loop
pop
leave
sbb
sub
xchg
pop
mov
js
mov
lret
jmp
arpl
js
dec
jmp
leave
sbb
dec
xchg
inc
pop
mov
pushf
fistps
bound
gs
shlb
punpcklwd
enter
push
mov
leave
out
cmp
not
ljmp
imul
hlt
imul
fistl
test
mov
pop
ror
test
in
jle
inc
jb
adc
out
lds
sarl
inc
push
insb
sti
xchg
cmp
jne
js
in
lret
shl
cmp
jae
xor
cmp
mov
xlat
mov
imul
xchg
lcall
test
xor
sub
push
xchg
es
push
add
mov
pop
sti
dec
notb
cmpsl
mov
jp
into
mov
dec
dec
popa
adc
clc
shl
and
xchg
push
imul
mov
jbe
add
movsl
adc
mov
cmp
add
clc
gs
bound
mov
bound
stos
pop
xchg
xor
fsubs
icebp
ljmp
in
inc
adc
inc
push
shlw
jp
mov
les
jg
stos
imul
push
test
xchg
and
std
int3
shr
in
cld
js
xchg
push
cwtl
dec
add
mov
es
lods
into
sbb
and
sbb
into
and
outsl
sbb
jne
mov
sub
mov
clc
and
push
scas
mov
fisttps
out
gs
inc
cmp
movb
pop
out
shrl
or
es
pop
leave
mov
xor
movsl
ljmp
test
jmp
sbb
inc
cltd
xor
sbb
jo
adc
mov
cmpsl
gs
stc
mov
inc
push
pop
sub
jp
jno
add
sub
xor
cmp
inc
jne
dec
je
xchg
xchg
lret
or
ja
pop
pop
dec
aad
add
mov
adc
and
xchg
push
pusha
sub
push
lods
sub
loopne
cwtl
sub
or
test
xchg
cmp
das
dec
add
int
bound
mov
mov
pop
xchg
out
vpor
cmc
loope
lret
pop
je
sub
or
cmp
cmp
and
jae
imul
xor
mov
add
int3
adc
sbb
insb
jnp
out
mov
jbe
xorl
dec
imul
dec
ljmp
jno
push
test
lea
cmp
pop
rcl
push
sbb
jnp
ss
xchg
dec
mov
movsl
adc
or
es
push
sub
pop
mov
lods
cmp
lea
std
pop
xor
pop
pop
add
pop
ret
outsb
push
into
add
sbb
mov
mov
dec
jmp
fsubs
xor
xchg
mov
insl
inc
outsb
movsb
pop
and
ss
mov
enter
into
or
pop
cmp
leave
mov
cmpsl
dec
push
insb
sub
lods
push
sbb
jae
pop
clc
sbb
insb
mov
pop
adc
and
xorb
push
popf
pop
push
pop
jge
push
cmp
sub
cmc
cwtl
xchg
ss
xchg
std
insl
loopne
lret
sub
hlt
or
xchg
add
push
jle
add
insb
inc
icebp
lret
fdivl
seto
cmc
xchg
ficoms
cli
push
std
xor
xchg
sbb
mov
mov
push
sub
pushf
dec
add
jo
sbb
call
and
pushf
clc
jne
and
xor
imul
cwtl
xorb
or
pop
xchg
mov
aad
and
mov
or
lahf
mov
push
into
and
mov
xor
sbb
add
xor
pop
mov
insl
jecxz
jg
divl
and
sbb
or
jnp
push
popf
push
add
scas
mov
cmp
js
mov
inc
les
mov
adc
inc
dec
pop
mov
cmp
movsl
aam
dec
aad
fsubl
dec
lock
pop
insb
sub
xchg
rcrb
stc
or
add
and
or
test
push
jge
gs
cli
add
or
ss
jb
roll
mov
dec
inc
add
cmpsb
enter
mov
sbb
inc
xor
add
mov
or
jo
jns
pop
pushf
das
push
cmpsl
sar
and
pop
js
mov
ss
pop
icebp
add
cmp
sub
repz
pop
dec
pop
es
adc
sub
mov
aaa
lret
lock
lret
fdivp
dec
jle
cs
jmp
xchg
js,pt
jecxz
and
jnp
mov
out
lods
sub
xor
jnp
outsl
add
push
pop
add
int
mov
mov
js
and
pop
cs
sti
xchg
xchg
xor
mov
mov
mov
pop
xchg
add
mov
mov
stos
xchg
fldt
ret
inc
push
imul
push
into
xor
inc
jp
lods
dec
arpl
dec
fisubrl
inc
es
lds
cmpsb
rcll
push
loope
mov
push
scas
xorl
fidivrl
ljmp
stc
lahf
push
adcb
jnp
pushf
iret
add
je
shrb
pop
outsl
clc
data16
mov
dec
mov
cmpsl
push
enter
into
jne
lahf
push
pop
add
fwait
and
ja
sub
adc
pop
xor
xor
add
xchg
add
push
ret
xor
pop
jno
daa
into
das
or
hlt
nop
adc
cmp
lahf
das
and
xchg
jno
repz
scas
stos
push
aaa
not
sub
shll
mov
pop
lods
orb
mov
in
mov
sbb
shll
nop
mov
lahf
add
fistl
adc
inc
and
sbb
jl
xchg
fsts
out
outsl
adc
lahf
and
and
sbb
ret
insl
push
sub
and
mov
jg
add
mov
imul
nop
sbb
fisubrs
xor
ffree
pusha
pop
add
push
mov
fwait
outsl
orb
mov
je
jne
out
jge
or
dec
cld
sub
cmpsb
lea
pop
add
inc
fwait
mov
sti
test
sub
inc
jns
xor
pop
cmp
adc
aam
xor
mov
nop
outsl
ljmp
lea
mov
mov
jle
test
xchg
lret
addl
rcrb
pop
fwait
jge
repz
push
jnp
jp
fldl
test
icebp
mov
sub
pop
fwait
adc
repnz
sbb
aam
in
or
sbb
clc
or
daa
sbb
inc
aad
jae
sub
inc
aam
stos
loop
stos
mov
and
jbe
addr16
mov
es
loope
out
pop
stos
or
adc
xchg
jb
test
stos
enter
push
movsb
mov
and
cmp
aam
mov
pushf
das
and
out
mov
ljmp
lods
mov
in
lahf
cs
loopne
stos
mov
xchg
sub
xchg
sbb
nop
fldcw
lods
fmul
stos
notb
jmp
fxtract
mov
push
push
lret
gs
test
inc
mov
or
stc
xchg
pop
fstp
loop
add
clc
notb
out
outsb
loopne
inc
pop
adcb
mov
sahf
jno
int3
jb
cltd
js
cmc
jo
hlt
nop
dec
out
jg
or
xor
sbb
repnz
or
in
rcrb
inc
cltd
push
mov
int3
stos
jmp
iret
ss
xchg
cmp
sub
iret
rcrl
test
mov
push
icebp
faddp
xor
xor
push
notl
jnp
jno
push
mov
push
nop
movsb
and
lds
sbb
mov
add
add
mov
jae
das
push
bound
scas
insl
or
loop
pop
aam
push
mov
add
mov
mov
mov
lock
jl
addr16
pshufw
shlb
mov
jns
lret
jle
xchg
jge
cmp
dec
pop
and
cltd
popf
sbb
add
gs
aaa
stos
add
sbb
test
jno
and
lock
add
xchg
loopne
out
mov
and
inc
shl
stos
mov
cmc
jmp
ljmp
fucomi
mov
cmp
sti
iret
mov
push
mov
in
or
lds
adc
movsb
xchg
iret
jne
mov
fimuls
add
cltd
out
xorb
jns
inc
mov
mov
outsb
lcall
lcall
jmp
ds
movsl
aaa
cltd
pushf
test
sbb
inc
pavgw
imul
lcall
and
iret
rorb
pop
shr
out
arpl
cmc
loop
je
ret
test
sahf
xchg
xchg
adc
adc
push
mov
lea
cwtl
popf
xchg
jae
pop
jns
clc
movsl
sub
sbb
sub
sahf
and
cld
out
gs
lahf
lods
mov
push
arpl
jbe
and
xchg
push
test
sub
jns
xchg
repnz
mov
jb
jl
jle
or
xchg
inc
movsb
sbb
lret
scas
shr
cmpsl
inc
and
pop
mov
into
pusha
dec
je
xor
pop
rcll
lods
test
scas
lds
jp
sbb
sbb
dec
adc
adc
pop
mov
sar
jnp
push
jnp
clc
movsl
lods
sahf
xlat
insl
cmpl
ss
push
mov
jno
jmp
pop
rolb
lret
arpl
lcall
mov
mov
gs
clc
cmpsl
je
pop
xor
sbb
pop
sub
cmp
xor
jp
jnp
leave
and
out
leave
mov
imul
rcrb
mov
adc
ret
and
pop
iret
cmp
lret
mov
push
sub
rorb
inc
out
cltd
div
jg
mov
lcall
pop
xchg
xor
mov
cmp
and
into
or
mov
or
sbb
dec
xchg
push
int
dec
bound
inc
push
pop
mov
pusha
sub
jecxz
call
pop
or
inc
xchg
jmp
cmp
pop
push
or
sbb
fstpt
sahf
outsl
dec
jae
int
maskmovq
pop
scas
jge
adc
gs
lea
insl
icebp
lea
inc
loopne
inc
dec
xor
pop
jmp
je
fbld
pop
andl
cld
jle
loop
cmp
lret
mov
mov
sbb
xchg
fs
lgs
pop
mov
icebp
cwtl
fwait
sbb
mov
mov
hlt
cmp
cmpsl
push
inc
pop
inc
cltd
lds
xchg
jp
into
icebp
les
xchg
es
xor
scas
pop
in
loop
lea
pushf
inc
push
add
adc
adc
jnp
sub
stc
jbe
adc
jno
cmp
jl
cmp
mov
mov
jno
jae
movsb
ljmp
sti
int
or
cmp
imul
xchg
lock
jbe
push
mov
mov
dec
mov
roll
pop
pop
inc
or
dec
lock
adc
xchg
js
scas
mov
int
cmp
dec
outsl
jmp
sti
shll
sbb
shll
xchg
out
sub
pushf
mov
shlb
and
pop
into
icebp
ror
cwtl
mov
ljmp
out
movsl
stos
jg
push
pop
mov
pop
push
addb
mov
adc
and
pop
dec
mov
sub
mov
pop
rcrb
cmp
jae
rcll
hlt
out
or
xchg
dec
sbbb
sti
adc
in
das
js
sbb
inc
add
and
loope
cmpsb
lea
test
xor
adc
shll
add
mov
xor
cld
roll
dec
mov
insl
dec
inc
xchg
les
out
inc
cltd
adc
mov
pop
jb
fidivs
cwtl
test
sub
pop
push
ret
cmpsb
cmp
loopne
fisttpll
ljmp
xor
sub
and
jge
mov
pop
lods
fs
cmp
fcomps
pop
aam
loopne
and
xor
xchg
mov
ret
testb
pop
jnp
mov
mov
scas
int
jmp
xchg
leave
aas
push
inc
inc
pop
test
and
out
sub
pop
and
sub
lret
mov
jge
inc
or
punpcklwd
das
adc
xchg
icebp
and
test
repz
adc
cs
or
mov
fidivl
adc
or
pop
repnz
push
jp
es
add
cmpb
or
cmp
push
sbb
push
mov
lods
adc
mov
aam
push
pop
jmp
lret
jge
sub
and
dec
and
movsb
fnstcw
jecxz
iret
jge
sbb
sub
cmpsl
data16
add
sarb
and
adc
popa
add
mov
fiaddl
xlat
xor
xor
stos
and
repnz
push
pop
sahf
lock
and
push
pop
jle
or
bound
inc
decb
popa
shlb
lahf
icebp
dec
inc
jae
stos
xchg
sbb
jmp
xchg
pop
push
push
or
shlb
sbb
nop
pop
pop
sbb
mov
incl
cs
xor
add
push
fcompl
fwait
lods
popf
stos
cli
and
cmp
push
mov
sub
mov
rorb
into
popf
and
adc
imul
pop
adc
stos
sub
mov
push
jae
xchg
or
ds
lret
loope
xchg
imul
jns
jbe
mov
fdivp
jl
inc
fistl
lods
subb
mov
inc
mov
xor
push
arpl
shlb
addr16
repnz
push
out
pop
and
mov
ds
aam
xor
insb
add
bound
mov
sub
sub
les
pop
xchg
lock
dec
push
jb
xor
pushf
loope
dec
jle
cs
icebp
je
repnz
mov
inc
xor
xchg
pop
aam
jge
xchg
mov
lods
adc
in
fwait
ret
jne
and
cmp
pop
stos
lods
and
stos
xor
repz
add
les
add
iret
adc
jnp
pop
loop,pt
ret
in
fisubl
mov
test
mov
jno
pushf
sbb
fwait
int
in
sub
imul
leave
add
rolb
pop
mov
bound
cwtl
sub
cmp
push
lahf
out
ljmp
in
add
rorl
push
jmp
test
adc
lds
sarl
adc
add
xor
ja
xchg
stos
cmp
sar
sub
in
jecxz
push
push
cmp
fstpl
loop
mov
sbb
add
jle
mov
pusha
mov
enter
xor
gs
lret
cmp
mov
push
out
je
or
loopne
addr16
pusha
out
jo
or
call
dec
sbb
dec
add
sub
jo
mov
push
jae
jbe
rorl
jle
pop
into
jno
adc
pop
push
fs
test
push
jle
lock
sbb
fmull
jb
mov
or
push
filds
add
outsb
cmp
or
jns
mov
sti
lods
lods
push
cmp
in
fbld
rolb
ret
inc
push
sbb
insl
sub
addb
cmp
in
xchg
scas
jl
and
sub
enter
mov
adc
cltd
ds
push
inc
xchg
sarl
inc
or
jl
hlt
mov
outsl
sub
or
ret
pushf
sbb
pop
sbb
pop
adc
int3
dec
sti
repnz
stc
push
decb
and
mov
mov
sub
test
imul
xor
jbe
pop
das
ljmp
and
push
push
sbb
fsubl
adc
shlb
rcrl
es
es
and
adc
test
clc
or
cmp
xor
mov
adc
les
xor
outsl
add
outsb
dec
in
clc
ret
sbb
gs
dec
xchg
jp
xor
lret
push
cmpb
sub
pushf
jne
aaa
jns
lds
mov
roll
add
pop
sbb
lret
daa
mov
rcrb
in
mov
mov
nop
cld
iret
shlb
xchg
xor
rep
add
adcb
mov
mov
pop
xor
daa
jle
das
fs
test
int
es
push
push
loop
add
pop
leave
cmpl
sarb
decl
or
fnstsw
hlt
leave
aaa
lcall
push
les
int3
mov
pop
jne
xor
mov
push
cmp
lahf
push
inc
fcom
cmp
aaa
roll
pop
xchg
lods
lods
gs
dec
dec
xchg
test
mov
ljmp
repnz
fisubl
in
jbe
loope
adc
jl
loop
je
mov
or
cmp
in
icebp
sub
mov
hlt
cmp
push
setno
fadd
pop
mov
fisubl
js
jb
andb
and
jae
mov
fbstp
cmpsl
xor
mov
lods
out
or
xor
inc
lods
aas
loop
stc
jo
sbb
adc
call
in
imul
adc
lahf
clc
mov
stc
jns
outsb
sahf
mov
fcomi
mov
in
xchg
scas
jb
mov
outsl
mov
addr16
enter
mov
add
dec
fldt
inc
in
shl
int
les
sub
adc
aam
push
fidivs
jge
cmpb
or
popf
icebp
or
cmp
repnz
inc
imul
popf
in
lea
add
mov
push
fs
or
int3
aaa
xchg
lcall
dec
movsl
and
push
outsl
insb
cmp
mov
xor
xchg
adc
aaa
mov
les
int3
std
xchg
and
push
mov
imul
shrl
add
push
es
out
dec
push
andl
sbb
add
in
sti
cmp
scas
in
jbe
fadds
dec
out
fisubrl
les
adc
xor
sahf
jbe
in
in
lds
cmp
adc
push
addr16
sub
int3
pop
jnp
inc
mov
mov
out
lea
dec
inc
xor
ds
fyl2x
sub
dec
stos
mov
add
cmp
pop
aas
lcall
xchg
aas
or
dec
mov
sub
push
mov
movsl
out
xchg
jp
repz
dec
and
jbe
scas
mov
std
int3
loopne
inc
add
icebp
decl
fdivrl
enter
js
sub
stos
sbb
push
cs
icebp
stos
cli
int3
cmp
js
je
out
pop
outsb
fstl
es
mov
mov
and
sub
mov
in
cli
jge
mov
jmp
xor
mov
mov
xchg
push
aaa
nop
test
add
icebp
jecxz
je
or
cmp
bnd
xchg
data16
jae
xor
push
push
lcall
and
repz
pop
mov
pushf
dec
roll
repnz
sti
sub
sti
dec
nop
je
push
xchg
and
add
ss
mov
xchg
xorl
adc
fisttps
dec
adc
dec
cmp
jb
sub
sub
aaa
daa
scas
into
add
pop
mov
dec
sbb
jle
cmpsl
push
jl
iret
stos
and
cwtl
xchg
pop
dec
repnz
ret
int
push
fisubs
jno
mov
or
loop
cwtl
xchg
ljmp
aas
pop
inc
lea
or
bound
outsb
call
xchg
xchg
js
or
lcall
adcb
sbb
std
push
xchg
loopne
sub
jg
jo
jae,pt
imul
pop
pop
sbb
jae
mov
inc
js
jno
outsl
ds
cmp
adc
xchg
shl
enter
adc
mov
movsb
cmp
mov
mov
push
rcrb
repz
jnp
into
fisttpl
jne
les
or
adc
enter
push
pop
push
mov
aaa
xchg
push
jnp
mov
pop
inc
fisubrl
pop
xchg
push
push
out
cwtl
jp
push
mov
lret
xchg
rorb
jl
aam
push
in
lcall
sarb
repz
jl
cbtw
shlb
ret
shlb
mov
stos
bound
stos
pop
cs
aad
jge
mov
pop
imul
fstps
dec
inc
icebp
add
sub
jns
dec
les
mov
dec
pop
inc
xchg
xchg
out
jecxz
sbb
mov
mov
push
jmp
int
adc
incl
cmpl
pop
push
aam
addr16
push
filds
in
mov
jp
xchg
push
mov
mov
mov
jle
out
gs
mov
xchg
ret
jmp
test
fwait
aas
push
sub
clc
scas
push
stc
sbb
xor
mov
pop
inc
jge
sub
loope
lahf
add
sub
repnz
sbb
hlt
mov
mov
hlt
aad
mov
popf
movl
sbb
push
rcr
hlt
jg
jns
addr16
xchg
or
mov
clc
cmovle
and
pop
inc
xchg
jecxz
sbb
pop
and
jmp
mov
addb
fcomi
stc
rclb
push
fadds
in
repnz
mov
stos
lahf
dec
into
pop
or
out
push
xchg
dec
int
jb
push
loope
lcall
dec
fistpll
or
or
stos
mov
add
icebp
subb
fbstp
push
jmp
dec
mov
aas
pop
loop
sbb
sahf
fmulp
ss
shll
sub
mov
test
popa
pushf
subl
jno
fwait
cmpsb
mov
addr16
lods
mov
sub
or
pop
and
in
push
sub
sub
xchg
insb
inc
mov
add
pop
sahf
out
lock
mov
pop
cmp
inc
pushf
add
sahf
mov
iret
outsb
xchg
bnd
call
xlat
aad
sbbl
add
pop
adc
enter
mov
out
inc
negb
mov
aaa
cmp
dec
call
xor
out
push
xchg
inc
adc
or
cmpsb
or
shrb
push
and
aaa
cmc
push
ds
adc
out
icebp
lds
enter
cld
pop
adc
cmpsl
enter
mov
inc
adc
mov
imul
dec
xchg
jg
orl
imul
aas
add
xchg
xchg
xchg
pop
stos
testl
push
clc
mov
je
mov
pop
pop
mov
or
sbb
lret
sub
stc
add
rcrl
adc
jle
movsl
jne
mov
and
sbb
and
and
jbe
shr
mov
mov
push
jns
not
jno
dec
adc
repnz
push
dec
and
xor
xchg
add
fidivrs
nop
sub
xchg
rorb
or
sub
and
daa
ljmp
cli
les
fisubs
sbb
cmc
out
push
hlt
or
mov
insb
inc
cmpsb
mov
xor
push
and
mov
lret
shr
jle
dec
loope
shlb
data16
fnsave
mov
xchg
movb
addr16
loope
push
cli
cwtl
js
rolb
imul
inc
or
out
and
push
inc
add
insl
mov
mov
xlat
int3
pop
jbe
pop
jne
mov
hlt
das
ljmp
mov
or
mov
mov
lods
add
adc
pop
dec
add
movsl
mov
mov
and
ss
push
inc
mov
fnstcw
outsl
xor
or
into
outsb
fsubrs
adc
xchg
mov
cli
fs
pop
sub
mov
lcall
inc
push
xchg
je
push
jae
imul
mov
mov
push
pop
jae
icebp
out
cli
jno
pop
mov
mov
push
sbb
mov
mov
out
xchg
adc
sahf
mov
popa
fsubrs
xchg
fcom
mov
pop
imul
arpl
mov
mov
std
adc
aaa
and
int
mov
test
js
popf
pushf
mov
fwait
and
xchg
or
add
sub
das
std
fistpll
enter
fsubrl
cmp
in
rolb
push
xchg
daa
dec
rorl
das
adc
dec
mov
out
ret
dec
test
cmp
mov
or
lods
addr16
pop
mov
stc
cmpsl
sarb
sbb
mov
jne
imul
or
vpmacswd
cltd
addr16
subps
sbbb
inc
jno
int
jnp
mov
jb
sbb
fisubrl
adc
xchg
mov
popa
xchg
cmp
lcall
pop
push
add
xchg
and
pop
mov
es
fisubs
push
jno
sub
es
lock
outsl
jle
jbe
shlb
loope
push
or
orb
cmp
xlat
fbstp
mov
shlb
icebp
repnz
lahf
int
sub
test
xor
xchg
pop
sub
push
sub
push
outsb
jno
mov
das
test
xor
jmp
out
add
add
adcl
push
rcrb
sbb
testl
imul
idivl
inc
xor
cmc
test
push
inc
push
pushf
popa
std
pop
jns
popa
stc
xchg
das
push
push
outsl
xor
outsb
ja
xor
jb
dec
jl
jp
or
mov
dec
mov
in
adc
or
insl
mov
ret
push
mov
ljmp
add
int
xchg
aam
popa
cmp
les
jge
lock
out
jle
idivb
mov
das
outsl
nop
popf
pop
xchg
sub
and
mov
push
fildl
std
jp
inc
int3
sbb
push
into
sti
in
popf
xor
imul
jno
add
loope
xor
cmp
ret
fsubl
pop
repnz
push
dec
adc
fcoms
and
push
leave
pop
mov
dec
aad
and
xchg
mov
lret
shrl
nop
push
mov
xchg
and
mov
out
jl
nop
popl
pop
ret
adc
xchg
cltd
push
xchg
arpl
test
push
in
cmpsb
les
repz
movsl
add
loope
dec
jle
nop
cmp
test
xchg
daa
mov
adc
jp,pt
add
add
xchg
popa
xor
addr16
jg
mov
or
outsl
mov
xchg
movsl
enter
arpl
int
pop
cmpsl
add
xor
into
sub
mov
aas
imul
inc
movhps
out
test
mov
pop
xor
mov
add
sbb
push
jns
add
stos
pop
push
mov
hlt
movsb
dec
adc
inc
inc
push
inc
and
mov
int
mov
insl
into
mov
or
sbb
test
mov
call
pop
jnp
iret
ljmp
fnsave
icebp
fs
xor
rcl
and
in
mov
mov
inc
repnz
add
cli
jo
test
mov
mov
inc
xor
jnp
daa
jg
sbb
push
mov
xorb
mov
push
movsb
add
int
xor
or
aas
add
or
add
in
mov
inc
out
sub
int
test
or
pop
fsubrl
movsl
cmp
shlb
mov
xor
clc
jb
add
std
and
dec
sbb
sbb
andl
cli
jecxz
loop
or
stos
js
shrb
xchg
and
xor
push
inc
push
xchg
jae
xor
fnsave
test
cmp
adc
ret
mov
mov
popf
push
xchg
jmp
in
sub
out
bsf
movsl
ss
mov
inc
sub
test
icebp
in
push
xchg
xchg
mov
jns
lret
inc
push
adc
lock
std
sbb
rep
pop
push
sub
adc
cmpl
notl
adc
adc
jg
lcall
xor
xchg
cmp
call
sub
mov
dec
gs
ss
ds
or
repz
jo
cmp
pop
push
movd
jbe
dec
enter
stc
jno
leave
pop
push
pop
lahf
cmpsb
ret
test
adcl
pop
or
adc
cmp
add
pushf
push
mov
lahf
jl
jno
lahf
in
cmpsl
fidivrl
mov
push
imul
pop
outsb
or
inc
scas
pop
push
push
sub
outsl
sub
cld
xchg
aas
push
dec
pop
adcl
push
push
sbb
inc
xchg
fdiv
arpl
and
adc
fsubrl
cs
mov
cmp
outsl
movsl
test
push
mov
lock
mov
cmp
mov
dec
xchg
and
stos
fstps
repnz
out
dec
es
hlt
xchg
movsb
dec
pop
jne
popa
roll
jg
and
cmovge
jg
add
add
nop
xor
icebp
jnp
jo
xor
enter
mov
dec
pop
jb
mov
mov
stos
out
pop
mov
xor
xor
adc
lret
sub
dec
dec
out
pop
jg
mov
pop
enter
xchg
mov
cltd
aaa
sub
mov
fstpl
pop
je
jno
pop
sub
jg
cmp
pop
enter
mov
clc
sub
pop
cmp
cmp
scas
ss
aam
xor
push
sysret
ret
subb
arpl
adc
mov
push
xor
jno
mov
and
pop
or
iret
mov
pusha
mov
mov
mov
pop
imulb
scas
mov
cltd
lahf
fisttpll
push
es
xchg
jno
xchg
push
bound
xchg
ss
mov
pop
adc
push
push
test
dec
testb
pop
jbe
addb
push
add
inc
push
cwtl
in
push
push
je
mov
shrb
in
dec
loope
inc
cli
xchg
sbb
push
pop
lret
decb
mov
inc
and
pop
inc
in
push
test
cmp
pop
xchg
xchg
pop
xor
mov
daa
push
jo
pop
and
xchg
popf
pop
pop
xor
cmc
repz
aam
pop
std
sub
cmp
imul
mov
jae
inc
cmp
mov
cmpsb
dec
mov
dec
mov
pop
cli
cld
in
mov
dec
or
dec
inc
std
mov
cmp
mov
push
pop
inc
popf
mov
add
fcmovnu
push
or
divl
cmp
jle
or
inc
rorb
inc
xchg
mov
cmpsl
cli
xlat
push
or
sbb
popf
lcall
rcl
pop
jl
fildl
adc
mov
aad
aad
arpl
movsb
jo
xor
xchg
fcompl
add
sahf
sar
les
xchg
mov
mov
jbe
mov
gs
stos
cmc
mov
nop
or
add
cli
data16
or
lahf
mov
sub
xchg
cmp
mov
je
or
jb
loopne
lret
into
mov
xchg
sahf
cld
into
gs
mov
out
pusha
out
cli
sub
or
mov
mov
int3
inc
movsl
cmpb
lods
out
sbb
cmpsb
jmp
mov
jle
mov
int
mov
outsb
lcall
lcall
scas
xchg
and
fwait
ss
pop
sub
cmp
lret
sbb
add
xchg
xchg
xor
adc
or
stos
fsubs
push
dec
jne
mov
sbb
es
push
in
int3
sti
mov
stos
mov
xchg
jl
mov
add
mov
mov
xchg
push
or
dec
inc
stos
adc
mov
sbb
mov
call
xor
add
inc
pop
sbb
mov
add
aas
xchg
andl
add
dec
ret
dec
mov
vmovsd
adc
inc
in
dec
cmpsl
int3
lcall
pop
add
xchg
add
xchg
cli
jle
and
push
xor
mov
sub
cmpl
pushf
push
lret
cmp
cmp
adc
mov
lods
jno
fistpl
in
test
iret
mov
pop
call
mov
push
or
jns
push
xchg
cld
jno
and
push
imul
bnd
leave
xor
adc
dec
leave
out
mov
addl
or
test
xchg
aad
cltd
loope
test
jbe
and
add
push
push
lds
sahf
cmp
popa
rcll
mov
iret
mov
aas
lcall
std
cmpsl
int3
mov
dec
aaa
mov
pusha
mov
mov
mov
mov
rorl
fcom
je
imul
xchg
pop
or
pop
jp
ss
popl
mov
mov
mov
test
mov
or
mov
sbb
sbb
adc
ss
stos
mov
popf
push
outsb
sbb
mov
push
jae
scas
fisubl
lret
inc
fmuls
jl
xchg
sub
loop
sbb
adc
repnz
pop
jbe
dec
dec
arpl
or
push
or
mov
jl
cwtl
or
mov
into
mov
add
cmpsl
mov
xlat
jge
out
push
cmpsb
out
aam
icebp
pop
popa
loop
xlat
pop
mov
cld
or
aad
scas
xlat
fsubrp
outsb
pinsrw
rclb
mov
leave
adc
xlat
xchg
fyl2xp1
lds
aam
sbb
xor
mov
pop
mov
pop
xchg
insb
movsl
ret
push
push
cmp
jecxz
push
xor
mov
xlat
cs
cmpsl
es
mov
add
sbbl
daa
xchg
pcmpgtw
movsb
stc
pop
out
xor
lock
pusha
dec
pop
stc
mov
lock
dec
xor
lea
stos
jmp
jbe
adc
sbb
sbb
adc
inc
mov
sti
in
rcrl
dec
add
out
xor
push
and
mov
jmp
and
notb
dec
jns
dec
pop
aaa
xchg
aam
lret
pop
sahf
pop
inc
loopne
cmp
movsl
pop
jecxz
mov
jbe
push
dec
dec
pop
ja
imul
mov
frstor
loopne
mov
enter
add
jg
inc
lods
lods
loop
test
aaa
push
pop
xor
out
mov
rcrb
cltd
into
cmpsl
or
clc
mov
jmp
stos
add
stc
push
xorb
aaa
aam
loop
and
xchg
jl
sbbl
xor
cmp
out
inc
jl
cmp
push
bound
xchg
rcrl
mov
hlt
cmp
cmpsb
daa
mov
push
cmp
ja
aas
loopne
adc
mov
pop
xchg
xor
adc
adc
mov
sbb
cmp
stos
fstl
jle
mov
push
pop
ja
add
push
fbld
in
push
xchg
fdivr
out
push
in
add
icebp
xlat
pop
mov
push
mov
dec
ret
roll
and
mov
mov
add
ss
jmp
push
mov
inc
hlt
jp
int3
orb
jnp
ds
dec
pop
fadd
insb
repz
mov
out
test
mov
out
out
lret
dec
pop
add
push
xor
dec
addr16
mov
cltd
inc
mov
xchg
rol
mov
inc
pop
ret
insb
and
cltd
jne
mov
sbb
mov
or
dec
cmp
cli
cmpl
icebp
cmpsb
mov
inc
mov
xchg
adc
xchg
sbb
jns
jecxz
ret
scas
mov
mov
stos
movsb
add
mov
mov
mov
xchg
addl
arpl
fisubl
mov
imul
stos
or
push
cmp
sbb
cmp
out
lret
and
adc
push
fsubs
fsubs
decb
xor
xchg
inc
sahf
pop
movsl
or
pop
rcr
pop
and
insl
xchg
pop
xor
pop
and
mov
shlb
pop
stos
aas
sub
dec
std
lods
cmpsb
test
mov
test
mov
in
int
dec
rolb
sbbl
pusha
or
jecxz
and
hlt
xchg
ret
or
cmp
nop
adc
sub
pop
lock
and
daa
mov
and
lret
gs
dec
lret
jb
jecxz
cs
sti
out
xor
mov
lret
loopne
mov
test
andb
call
movl
lahf
leave
add
addr16
or
shlb
fs
add
orb
pop
mov
scas
std
rcl
shl
test
pushl
repnz
std
or
lret
sbb
xchg
stos
sbb
pop
cmp
mov
stc
gs
jno
icebp
cmp
fldcw
dec
testl
idivl
jmp
or
test
cmp
and
fldl
fldl
pop
mov
inc
jge
daa
mov
fbstp
loope
ret
and
jg
outsb
push
int
jnp
xchg
mov
cmp
mov
int3
lds
lock
insl
sbb
or
inc
pop
push
sub
xor
sbb
frstor
sub
outsb
cmp
mov
shl
dec
mov
jb
ret
inc
add
mov
lds
mov
pop
sub
mov
cmp
ret
outsb
sti
mov
fistpl
cmp
cmp
sbb
xor
pushf
inc
movsl
cmp
inc
mov
adcl
sub
clc
push
pop
movsb
sub
in
ds
test
xchg
inc
xchg
cmpsb
fcmovb
jne
orl
push
jecxz
sti
add
push
adc
inc
pop
lods
xor
mov
arpl
icebp
adc
es
lods
shll
shlb
sbb
push
shl
xchg
out
sti
push
pop
sub
ljmp
pop
sbbb
sbb
loop
cld
andl
or
pop
add
imul
out
mov
adcb
adc
pminub
mov
sti
xor
inc
icebp
inc
sbb
dec
jge
lea
pop
cmc
sbb
gs
xchg
mov
enter
scas
inc
mov
les
mov
out
fptan
or
iret
outsb
lods
dec
dec
sub
push
pop
cmp
mov
sub
or
cmp
out
shlb
sahf
lods
dec
ljmp
in
pop
push
cmp
out
cmp
adc
leave
out
imul
cmp
pop
mov
test
ljmp
or
lret
in
mov
lret
jle
push
pop
mov
aaa
or
bound
xchg
aaa
or
lea
jb
loope
sub
dec
sbb
inc
fsubrs
jp
movsl
inc
sti
js
mov
mov
mov
clc
int
push
sbb
fistps
mov
insl
pushl
stc
dec
adc
mov
sub
sub
mov
jecxz
loopne
pusha
add
dec
popa
fimull
aaa
push
fs
ficomps
fbld
xchg
mov
fisubl
mov
iret
xor
cmp
push
cmpb
mov
popa
sahf
lret
or
jge
sbb
jne
jl
cmp
mov
es
popa
sbb
dec
xchg
pop
xlat
push
xchg
aas
and
add
stos
insb
mov
mov
and
adc
lock
cmpsl
sbb
pop
jns
push
add
or
cmpsl
jg
add
imull
xor
dec
cmp
inc
insl
sbb
sbb
pusha
repz
dec
popf
inc
xchg
into
jge
mov
daa
mov
fwait
loopne
sbb
leave
repnz
nop
imul
xlat
inc
test
lock
adc
pop
aam
mov
adc
mov
mov
sbb
nop
pop
dec
fmull
stc
lods
shrl
and
sahf
mov
pusha
jle
and
movsl
ret
xchg
push
push
or
ss
cld
mov
xchg
lods
adc
xchg
movsl
mov
test
test
adc
xchg
mov
push
dec
leave
inc
aas
inc
add
and
jecxz
fimuls
fldl
ljmp
arpl
jo
data16
lret
add
pop
imul
inc
dec
cld
inc
enter
xor
push
dec
shr
mov
mov
dec
outsl
xlat
jae
notb
sbb
mov
xchg
loop
mov
mov
jmp
mov
push
out
mov
mov
adc
xchg
sub
xchg
jb
xlat
divb
inc
sub
cltd
inc
movb
mov
push
add
fstps
pop
subb
fs
les
pop
pusha
fwait
pusha
or
mov
xor
rcrl
jo
push
and
divb
cmp
jg
add
std
ret
mov
daa
add
jno
jmp
aaa
mov
mov
mov
xor
and
xchg
nopl
adc
inc
inc
mov
popa
pop
xchg
mov
fiaddl
xlat
push
rorl
je
mov
loopne
sbb
add
inc
mov
cld
repnz
out
adc
add
mov
lds
inc
add
cmp
cmp
add
adc
bound
repnz
scas
addb
adc
test
pop
add
inc
xor
add
mov
push
lea
scas
out
dec
push
addr16
fisubrs
fst
fstpl
rolb
inc
fs
and
inc
jp
mov
icebp
outsb
fsubrl
or
mov
push
shlb
aas
and
insl
adc
xchg
xor
push
enter
and
push
mov
dec
add
pop
aas
ficomps
pop
mov
enter
cmp
inc
push
test
testb
aam
lds
push
cli
dec
das
mov
pop
mov
xor
add
lods
loop
inc
add
sub
clc
inc
int
push
mov
add
cltd
aad
push
cmp
adc
mov
adc
fwait
xor
insb
xlat
into
mov
mov
push
sub
pminub
or
shrl
jg
sub
std
jb
xor
jbe
popf
and
mov
xlat
jmp
addr16
jns
pop
push
mov
repz
mov
and
dec
outsl
fstpl
adc
mov
imul
add
dec
fisubs
scas
fcomip
bound
imul
ja
les
repz
add
mov
imul
arpl
sub
cmp
ja
jmp
push
mov
xchg
jge
es
mov
mov
clc
add
int3
adc
int
divb
xor
inc
and
jb
mov
dec
adc
ds
push
mov
xchg
fadds
jno
push
add
push
stc
push
push
ficompl
push
cmp
dec
push
jg
dec
cmc
mov
dec
dec
loop
cmp
sub
addb
lret
shrl
arpl
push
jl
adc
pop
into
and
xor
jg
shl
cld
inc
vphsubwd
fsubl
test
fnstcw
mov
imul
xchg
insb
lret
inc
jp
int3
dec
and
mov
cmpsb
pop
inc
int
push
mov
lods
aad
ja
mov
stos
jge
or
orl
cwtl
outsl
jp
mov
icebp
push
inc
rcl
filds
fsubrs
sub
pusha
mov
fistps
pop
cmp
adc
out
lock
xor
or
jbe
movsb
mov
push
mov
pop
mov
ds
mov
sub
adc
pop
ret
aam
push
push
cmpl
inc
lds
movsl
adc
add
pop
and
add
add
and
and
mov
inc
inc
mov
pop
jmp
cli
inc
lock
adc
js
mov
cld
adc
and
lahf
mov
lods
mov
int3
cmpsl
sbb
fiaddl
lret
cmp
fxch
std
fisubrl
out
test
pop
jbe
pop
xchg
mov
shll
fisubl
fistpll
call
adc
pop
aaa
fldcw
movb
stos
cli
stc
fbld
inc
push
xlat
pop
xchg
dec
aaa
mov
jns
adcb
stos
cmp
dec
mov
mov
imul
shl
aas
pop
mov
loop
and
flds
xchg
push
dec
vprotq
xor
les
aam
cwtl
mov
sbb
pop
push
lahf
lds
mov
clc
push
adc
test
scas
cmp
mov
imul
push
sub
inc
lret
test
and
xlat
inc
jl
sbb
ret
lods
hlt
in
lahf
xchg
clc
ds
sbb
ret
dec
dec
popa
mov
imul
add
icebp
jns
jg
mov
lock
aam
xlat
rcrb
sub
and
addr16
mov
pop
xorb
lcall
int3
ficoml
imul
mov
test
loop
xor
out
push
mov
in
rorb
aas
xchg
jge
mov
fs
or
ss
ret
fisttps
loopne
sbb
mov
jns
push
cmpsb
inc
inc
dec
mov
shll
push
fwait
cs
test
mov
cmp
or
arpl
mov
add
aas
out
repnz
push
push
popf
jl
cmp
fidivrs
cwtl
fsts
jp
pop
inc
dec
push
mov
mov
flds
cmc
jge
data16
mov
or
loop
push
cmp
ds
sub
sbbl
mov
lret
ror
sar
push
jmp
enter
jb
scas
pushaw
mov
xor
or
loop
xor
addr16
push
dec
or
pcmpgtw
cltd
bound
mov
fwait
mov
pop
cmp
imul
pop
xor
xchg
cltd
mov
inc
mov
add
mov
aas
data16
dec
data16
cmp
aaa
push
pushf
push
mov
sahf
inc
imulb
fnstenv
pop
push
sub
push
fistpll
cltd
and
or
push
popa
push
xchg
test
pop
pushf
dec
cmp
cli
cld
push
adc
dec
and
xor
xor
outsl
fstl
pop
stc
nop
pop
xor
pop
push
stos
subl
xor
xchg
mov
outsb
mov
fadd
dec
in
jl
xchg
adc
pop
dec
sti
mov
stc
clc
inc
add
shrl
fs
inc
adc
cmp
lcall
or
adc
or
pop
add
into
inc
aam
addl
inc
incl
cmp
popf
test
ret
mov
xor
mov
cli
loopne
dec
sub
icebp
sbb
loop
test
push
add
cwtl
pushf
add
cmp
std
jp
xchg
es
into
cmp
cmp
mov
leave
test
jo
rcl
push
in
es
add
rcrb
jo
push
mov
cmp
aam
and
sbb
inc
jl
and
or
addr16
xchg
xor
jne
pushf
xor
mov
cmp
scas
mov
mov
mov
dec
out
scas
mov
sbb
adc
jle
mov
dec
pop
cld
jae
es
lret
loop
jno
jmp
bswap
hlt
loope
gs
xor
aad
cmp
xor
inc
mov
lds
sbbb
cmpsl
gs
inc
lcall
push
adc
dec
pop
mov
xor
lds
pop
fcompl
add
int
ss
push
xor
nop
shrl
inc
test
inc
fsubr
mov
jecxz
movsl
pop
adc
lds
lods
test
loopne
leave
add
pushf
dec
inc
leave
pop
leave
subl
mov
push
inc
jne
sbb
mull
shrb
popf
push
test
pop
mov
jo
adc
mov
pop
out
xchg
mov
mov
push
or
sbb
xchg
xor
aaa
hlt
add
adc
adc
cmpsl
mov
inc
cmpb
ja
adc
shrb
push
fidivs
or
jb
and
test
ljmp
jl
lods
scas
ljmp
mov
dec
cmp
fidivrs
jae
dec
fmul
shrb
jns
and
cmp
xchg
pop
or
lcall
inc
dec
fiadds
mov
loope
inc
inc
mov
imul
dec
into
pop
sbb
push
dec
lahf
dec
les
add
adc
mov
std
adc
xchg
and
sbbb
sbb
pop
jnp
push
mov
mov
aaa
xchg
push
dec
jp
dec
addl
sub
sub
push
xor
xchg
scas
jg
sbb
test
adc
aas
mov
mov
fsubl
repz
cs
mov
mov
mov
adc
adc
xor
arpl
jbe
dec
scas
addr16
leave
mov
data16
sub
push
popf
in
sub
add
dec
into
xchg
fimuls
cmpb
test
popf
and
fsts
pop
pop
mov
scas
mov
rolb
xchg
test
xchg
popf
xor
sbb
testl
jns
cmp
cmp
or
xor
sbb
mov
ljmp
loopne
and
in
jb
push
jo
nop
mov
in
lcall
rcll
outsl
fs
mov
mov
enter
or
mov
rcll
mov
sbb
cmp
mov
adc
xlat
outsl
sub
mov
push
xchg
daa
iret
xor
cmp
lds
xchg
or
test
push
inc
and
mull
xchg
hlt
dec
pop
repz
sti
pop
out
ror
push
push
mov
push
lods
out
xor
push
rclb
rol
mov
test
mov
lahf
and
dec
mov
shlb
out
mov
jae
scas
jecxz
incl
dec
test
out
dec
push
xor
and
sbb
mov
push
mov
mov
jnp
xchg
mov
in
jmp
sbb
inc
ret
sti
movsb
popf
add
inc
dec
sub
movsb
mov
mov
cwtl
fmull
ret
fs
bnd
add
or
pop
xchg
dec
push
mov
xchg
xor
push
loop
pop
inc
int
sub
lea
and
cmp
mov
mov
pop
call
add
adc
dec
mov
mov
inc
cmc
loop
sbb
fistpl
enter
pop
mov
rcr
scas
cmp
cmp
aad
lcall
pop
and
aaa
inc
rorb
cmc
shll
inc
and
in
subb
xor
and
imul
stos
stos
xchg
aaa
jne
fwait
xchg
pop
scas
jae
cmc
dec
lahf
test
mov
fwait
and
push
pop
sbb
mov
inc
cld
test
and
mov
lock
jo
dec
mov
or
iret
ffree
testl
jle
cmp
lock
or
lcall
or
fdiv
dec
add
lds
and
inc
scas
stos
push
mov
out
dec
nop
jp
aaa
dec
jl
clc
mov
lcall
loopne
sahf
out
xorl
lea
out
sbb
xor
xor
push
push
sub
jns
jl
in
lret
inc
push
pop
insl
jno
jmp
rorb
aas
push
dec
push
scas
push
pop
bound
imul
lock
lods
mov
jns
fs
fistpl
outsb
xor
adc
push
xor
out
stos
mov
je
push
push
pop
cmp
sub
fcmove
mov
inc
pop
mov
mov
out
sub
icebp
and
das
sub
sub
shl
stc
xor
aas
dec
jo
fbstp
xor
mov
mov
xchg
pop
sbb
sub
pop
fisttps
push
inc
inc
add
jmp
inc
lds
dec
ds
shrb
leave
mov
jecxz
add
bound
pop
filds
or
lahf
popf
adc
fcompl
sbb
mov
inc
jmp
mov
stos
jmp
stos
xor
sti
mov
aam
push
cmc
pop
shl
push
cwtl
imul
adc
pop
ds
negl
cli
ds
imul
aas
inc
cli
push
cmp
movsl
ljmp
push
test
cmp
mov
cmp
sub
cmp
adc
dec
mov
jecxz
fpatan
add
pop
clc
test
cmpsl
int
push
adc
mov
mov
sbb
rcll
jl
mov
dec
dec
test
sub
mov
in
pop
pusha
cmp
ret
push
push
cmp
cmp
btrl
jns
iret
mov
sbbb
addr16
jmp
jbe
dec
mov
add
mov
int
pop
insl
in
add
inc
push
cli
insb
mov
pop
ja
xchg
pop
repnz
clc
ja
push
ret
lahf
push
pop
lret
or
mov
jle
fistps
sbb
rolb
test
fnstsw
mov
jbe
rorl
sbb
into
repz
xor
fs
xor
mov
push
dec
dec
mov
insb
mov
xor
mov
push
jbe
sbb
mov
addr16
dec
xor
push
and
dec
pop
test
out
sarl
mov
pop
xor
cmp
pop
cmp
pop
gs
or
mov
aam
adc
mov
mulb
jl
xchg
or
mov
leave
push
loope
push
xor
sub
hlt
push
aad
daa
fs
pop
mov
add
movsb
jle
pop
insb
insb
xlat
sbb
sub
add
lret
dec
je
dec
pop
roll
pop
push
in
inc
xchg
aad
pop
dec
movsl
or
and
jno
in
mov
adc
dec
mov
push
pop
push
shl
pushf
incl
aam
xlat
gs
pop
xchg
pop
dec
sub
inc
leave
cmpsb
rclb
je
icebp
mov
xor
add
push
out
cmpsl
and
ljmp
je
fsts
leave
push
shll
into
loopne
imul
mov
sbb
push
fmuls
jb
sbb
sbb
ret
add
aad
xor
push
xor
pop
add
outsb
xchg
sub
mov
xchg
aaa
inc
sub
xlat
xor
push
push
inc
not
mov
sub
jmp
ret
ret
adc
push
fiadds
push
in
xor
dec
aaa
lret
imul
sbb
pop
mov
ljmp
inc
imul
inc
test
bound
xchg
jmp
les
pusha
adc
xchg
les
or
cs
in
cmp
dec
adc
push
ja
lods
inc
or
and
in
jae
test
dec
or
push
sbb
xchg
push
ljmp
mov
push
mov
out
sub
xchg
lret
shl
popa
dec
inc
icebp
lret
sbb
or
mov
into
mov
mov
addr16
xchg
cmpsl
and
pop
stos
sar
out
or
subl
gs
xor
cmp
xchg
cmp
test
pop
stos
dec
cwtl
sbb
std
mov
cmp
inc
pop
push
jno
es
jo
fisubl
pop
hlt
sbb
into
rol
out
jno
or
imul
repz
inc
mov
addb
inc
mov
mov
push
sbb
pop
adc
cmp
push
mov
fcoms
jp
and
pop
adcl
mov
xchg
jg
loopne
iret
push
lahf
xchg
cmc
es
subl
scas
imul
negl
push
cmc
mov
inc
pop
nop
cmp
scas
sub
rcrl
jb
xorb
push
push
fcomp
mov
jle
and
lea
scas
movb
add
pop
ja
pushf
sub
or
cmp
je
dec
testl
pop
mov
imul
jae
cmp
repnz
mov
divl
jo
inc
mov
sbb
xchg
outsb
lea
xor
xchg
daa
cmp
ss
and
fwait
and
cltd
outsb
sbb
or
dec
fistps
scas
fnstenv
jmp
stc
jne
pop
ret
int
jmp
das
std
les
and
pop
cmp
mov
mov
push
or
out
int3
xlat
mov
jge
and
shrb
ss
movsb
cmpsb
leave
mov
and
je
mov
insl
pop
repz
decl
stos
and
cmp
bound
xchg
repz
add
ret
popa
or
dec
movsl
or
add
stos
add
or
add
lds
clc
int3
xchg
movsb
mov
push
pop
push
enter
das
mov
popf
cmp
lret
pop
out
mov
fisubl
pop
mov
pop
jbe
fistl
mov
adc
or
xorb
divb
les
add
cwtl
push
hlt
rorl
adc
mov
xchg
out
in
arpl
lods
cltd
fdivrs
pop
pushf
xor
jnp
pusha
dec
jne
and
xchg
sbb
daa
xor
in
imul
aam
test
push
sarl
jno
not
mov
fadd
sub
or
xlat
mov
mov
sbb
test
sar
jo
cld
call
cmp
xor
jae
push
into
xlat
add
icebp
test
lds
lahf
std
xor
sbb
push
cmp
dec
cli
roll
das
pop
es
cwtl
pop
jecxz
sub
cmpsb
inc
cmc
push
xor
xchg
or
aaa
andl
addr16
scas
test
xchg
push
dec
frstor
cltd
mov
mov
icebp
lods
mov
in
adc
daa
scas
inc
mov
jns
je
add
fcoms
rcrl
xchg
push
out
leave
cld
adc
jl
sub
iret
sub
and
mov
xor
xchg
mov
pop
push
lcall
add
rcr
pusha
sti
call
cmpsl
add
fbstp
fcoml
xchg
shll
arpl
jae
xchg
test
dec
sbb
xchg
ss
xor
fisttpl
push
sbbb
test
xor
mov
sub
adc
push
jb
and
pop
sarb
out
jb
or
subb
sbb
dec
stc
pop
mov
inc
sarl
pop
jae
int
ret
add
add
shlb
dec
lea
mov
pop
cmc
xchg
pop
movsl
sti
cmp
xor
leave
mov
out
aaa
xchg
push
lahf
adc
pop
inc
xor
push
inc
sub
hlt
pop
mov
jmp
inc
sub
lods
cli
jg
inc
fnstcw
mov
loopne
xchg
jmp
dec
dec
add
movsl
sahf
loope
mov
push
adc
jno
pop
hlt
adc
enter
leave
sti
pushf
insb
sub
xchg
add
outsl
dec
loope
xor
jle
inc
mov
cmp
add
xor
inc
in
xor
fildll
mov
sub
sub
xor
movsb
mov
sbbl
loopew
decl
aam
cmp
adc
cmp
aas
lea
out
aad
mov
xchg
ret
dec
xchg
int3
mov
pop
shlb
jl
mov
and
sarb
or
push
fsubrl
jmp
adc
inc
push
inc
push
jnp
in
mov
or
sub
xor
mov
incb
rol
loop
dec
sbb
sub
imul
int
sbb
fs
bound
test
repz
push
mov
lods
pop
push
aam
popf
pop
cmp
xorl
push
lds
addb
ds
push
stc
inc
ficoms
cmpsb
jns
mov
inc
jmp
cli
pop
out
adc
jge
int
out
stos
popa
xor
sti
push
xlat
jae
add
sbb
lret
fnstenv
jmp
lret
pop
mov
int3
jge
xchg
inc
jns
pop
iret
ret
pop
fstps
out
adcl
lret
gs
loope
and
mov
pushf
cltd
ficomps
loopne
fimull
lret
fists
leave
movups
clc
out
mov
out
clc
int
inc
jb
mov
cmp
sbb
mov
or
sahf
pop
int
lahf
inc
jmp
subb
sub
cmpsl
fs
jl
inc
dec
aaa
add
sub
pushf
pusha
or
sbb
dec
das
push
lods
pushf
imulb
sti
iret
jg
inc
lods
push
cmpsb
scas
int3
adc
pop
rcrl
fdivrs
jg
rorl
fcoml
fstpl
mov
cmpsl
pop
std
xor
dec
xchg
in
mov
cltd
or
cmpb
add
scas
test
pop
sahf
sbb
test
test
push
sahf
test
popf
sbb
mov
js
or
jo
xchg
hlt
pop
add
or
or
inc
jno
loop
xchg
inc
mov
fdiv
movsb
das
ret
jl
push
arpl
or
daa
pop
pop
mov
adc
arpl
or
sbb
jmp
cltd
sbb
test
fisttps
mov
call
or
stos
jnp
lret
push
inc
push
pop
push
cmp
cld
cmpsb
jmp
cmp
xchg
sub
xor
outsl
int3
cmc
pop
pop
xchg
push
inc
sbb
inc
sbb
jae
sbb
xchg
adc
and
inc
xor
xchg
pop
div
jp
mov
cmp
mov
rcrb
test
ret
jge
or
or
xchg
fs
fyl2xp1
dec
std
mov
pop
or
mov
in
jge
or
jmp
popa
icebp
xor
movsl
ljmp
popf
fdivs
ss
or
pop
and
or
mov
int3
aad
ret
fdivrs
inc
into
mov
sbb
xor
push
insl
bswap
cmp
lods
pop
or
out
js
inc
sti
inc
scas
dec
mov
mov
jmp
lret
dec
shrb
cmp
cmp
test
loopne
jle
sub
sbb
sub
sbb
aam
lret
fimull
inc
dec
inc
cmp
mul
push
addr16
paddusw
addr16
lret
sti
movsb
pop
outsl
jne
ret
adc
negl
ds
fndisi(8087
scas
xchg
cwtl
cmp
mov
iret
das
sbb
addr16
sbb
loop
fcom
mov
cltd
loopne
lret
jg
sub
enter
mov
stc
push
mov
xorl
fwait
xor
or
cmp
mov
cs
xchg
cmpsl
lock
sbb
mov
in
rorb
xchg
xlat
je
daa
and
push
sub
pop
mov
mov
and
jl
adc
sub
fs
cltd
rorb
or
cli
cld
idivb
dec
jp
and
test
xchg
inc
sub
cmc
orb
mov
out
add
cmc
lahf
rclb
fiadds
lods
inc
fsubr
cmp
inc
xlat
icebp
lahf
sbbb
adc
jnp
mov
xlat
pop
mov
jb
hlt
bound
or
cld
mov
in
shlb
sbb
stos
inc
fsubl
lock
movsl
xor
sbb
jb
fwait
xchg
es
lods
add
outsb
sbb
adc
loope
fwait
jp
call
pop
and
xlat
fsubrl
je
mov
test
xchg
sarl
mov
daa
inc
inc
insl
add
lock
adc
cmpsb
and
nop
inc
xor
lods
ss
sarl
std
addr16
jmp
jp
xor
into
fiadds
push
repnz
mov
push
psubsw
add
jae
orl
into
mov
xchg
sbbl
jb
into
mov
pop
mov
addl
shrd
in
adc
div
scas
aas
pop
push
iret
nop
dec
or
jbe
xor
mov
sub
push
daa
mov
int3
decb
stos
inc
fwait
push
sub
xor
dec
aaa
fisubrs
pusha
aad
lss
mov
and
lret
jmp
cmp
clc
test
jbe
inc
fistpll
aas
adc
lret
pop
fmull
imul
out
cs
mov
ss
push
pusha
push
dec
or
add
or
sub
adc
inc
xchg
test
jbe
pop
aas
in
push
filds
es
add
sub
cmc
roll
mov
or
mov
mov
into
push
push
cs
dec
push
fisubs
aas
repz
xor
hlt
aas
cmp
js
out
inc
fwait
jns
jle
fisttpll
in
mov
stc
mov
inc
fwait
jle
add
push
loope
mov
std
decl
in
mov
inc
nop
ret
ficoms
sbb
outsl
jb
or
mov
daa
pop
pop
lret
pop
sub
jnp
jne
enter
xchg
loope
inc
in
fldl
adc
int
mov
mov
iret
jo
lock
push
push
pop
pause
pushf
int
add
adc
sbb
push
dec
lods
xor
mov
mov
xchg
outsl
aam
pop
stc
mov
mov
sbb
movsl
mov
push
cmc
fldl
mov
cmpsl
sbb
sbb
add
lahf
out
xchg
decb
jg
fdivrl
pop
daa
inc
repz
xor
imul
test
lds
sub
pop
mov
fcoms
cmp
jmp
or
push
cmpl
push
loope
aam
mov
das
in
mov
dec
add
pop
push
mov
ja
pop
xorl
ja
mov
out
dec
sbb
ffree
hlt
add
mov
cwtl
dec
sahf
jge
inc
test
or
or
das
mov
popf
ds
mov
stc
das
pop
lret
addb
stos
cmc
nop
jbe
sbb
jl
mov
fs
or
dec
or
fmull
std
clc
sbb
push
pop
mov
sbb
cmp
sti
nop
jge
fildll
pushf
mov
mov
in
movsl
mov
lret
add
sbb
pushf
add
call
nop
sbb
xorb
test
fildl
fs
sub
push
mov
jnp
aam
movsl
and
mov
jno
mov
shlb
push
subl
mov
shlb
imul
imul
jb
inc
ror
push
xor
movsl
or
or
inc
ss
mov
sub
shll
into
jmp
outsl
in
movsl
sub
in
push
scas
add
mov
xchg
dec
shl
fdivl
addl
aad
loope
outsb
dec
or
inc
rcrb
jnp
clc
popa
clc
jl
pop
or
das
stos
ljmp
xor
jo
sbb
lret
push
testl
sbb
shlb
add
mov
sbb
sbb
imul
pop
sub
fistpll
xor
clc
test
inc
push
mov
push
loope,pn
push
cmp
inc
scas
mull
test
pop
ficomps
adcl
imul
repnz
jl
fld
cmp
or
cmp
add
sti
std
pop
hlt
gs
jns
push
dec
out
pop
and
fistl
daa
add
lods
dec
add
insb
scas
and
xchg
outsl
pop
clc
push
or
loop
cmc
imul
es
in
out
nop
aaa
aas
movsl
ljmp
sub
fsubl
pop
call
sti
inc
sub
ret
mov
rcr
push
pop
xchg
adc
mov
pop
outsl
outsl
rcr
jb
mov
js
sub
inc
mov
clc
adc
or
rcrb
fstpt
repz
xlat
or
push
push
and
sbb
aas
dec
pop
stos
adc
sahf
test
out
mov
inc
xor
test
inc
xor
popf
lret
test
out
arpl
xchg
mov
fs
sbb
ret
fcomps
inc
xchg
test
lea
adcl
ja
leave
xchg
rclb
aad
test
lods
shll
inc
push
frstor
jp
int
add
rcrb
push
aad
fwait
ret
loope
mov
test
sbb
push
mov
push
leave
jg
shlb
cmp
cli
push
sti
jecxz
add
les
sub
in
xchg
insl
mov
and
push
mov
movl
cmp
into
sub
pop
cmp
cltd
lcall
xor
dec
inc
ljmp
mov
js
clc
xor
cmp
cmpsb
int
addr16
imul
pop
nop
icebp
les
jp
jns
lea
mov
dec
dec
mov
pop
adc
scas
lds
cmp
shl
aaa
lds
jg
mov
outsl
lahf
test
fnstsw
in
sti
or
sub
loope
stc
push
lock
scas
fdivs
mov
adc
lcall
adc
cmc
mov
sbb
aaa
in
cwtl
std
mov
or
mov
aas
movaps
out
mov
xlat
jmp
popa
jp
imul
fnstcw
mov
cmp
es
pop
xchg
fstps
adc
push
push
fbld
in
mov
mov
lock
jle
mov
or
loop
mov
jg
pop
and
aaa
pop
mul
jbe
pop
cmp
or
loop
jns
ja
outsb
cmp
data16
add
aam
outsb
mov
fcmovne
popf
mov
fs
mov
sub
ret
and
daa
pusha
scas
in
arpl
cmp
add
sahf
xchg
mov
ja
sbb
ret
and
push
movsl
dec
sbbb
push
movsb
push
sub
adc
mov
xchg
mov
adc
rcrl
dec
xchg
cs
call
cmc
or
jo
mov
xor
mov
stos
push
fwait
inc
mov
jno
xchg
scas
mov
es
push
or
js
popf
aas
ror
xor
loop
adc
enter
iret
fistpl
xchg
fisubl
lahf
adc
inc
loop
in
in
adcb
enter
sub
cmc
jg
or
push
mov
imulb
pop
scas
dec
or
rcrl
sbb
imul
sahf
cmp
rorb
lret
push
xor
xor
or
cmp
dec
into
aaa
sub
jae
popa
and
ja
pushf
xor
inc
xor
sti
lret
dec
add
ror
pop
das
lahf
jle
adcb
xor
dec
inc
aas
fidivl
adc
xchg
mov
jge
push
cltd
out
push
stos
pusha
nop
mov
lcall
mov
std
jb
arpl
aas
gs
mov
mov
leave
mov
jns
stos
lock
mov
roll
cmp
cld
xor
sti
mov
stc
subl
aad
or
jno
not
repz
gs
cmp
mov
mov
xchg
or
pop
add
inc
fists
fmuls
ret
test
push
jns
mov
mov
leave
repz
mov
out
cmp
jo
out
inc
lods
in
mov
out
popa
xchg
jp
or
add
jmp
xor
mov
inc
clc
lret
xor
jnp
das
je
mov
push
cltd
add
cmc
ret
push
xchg
stos
enter
mov
jmp
and
enter
imul
jne
inc
mov
cwtl
sub
lods
adc
jbe
dec
jae,pn
cltd
movsl
imul
es
cld
negb
sub
mov
lea
xchg
inc
mov
in
xchg
sub
fcmovne
cmpsb
push
mov
jmp
fmuls
or
dec
leave
xchg
mov
adc
push
cmp
out
and
push
xchg
adc
pop
cli
imul
orl
jmp
aaa
push
xchg
sub
jbe
and
push
dec
jnp
popf
jp
push
fidivl
pushf
adc
sub
dec
pop
in
mov
jnp
mov
or
jmp
imul
sub
mov
call
data16
mov
xchg
loopne
movsl
sbb
decl
jno
fcmovbe
adc
popa
mov
movl
mov
mov
cs
xor
ss
movsl
or
jae
inc
loop
fstpt
call
xchg
add
lret
je
ret
jnp
push
dec
scas
add
and
pop
mov
cmp
mov
js
xchg
or
or
imul
inc
pop
add
ljmp
cmc
ret
mov
scas
das
pop
mov
adc
outsb
xor
in
mov
ja
jge
pop
and
jo
cs
cli
sub
xor
push
xchg
xor
xchg
cmpsl
xchg
aad
jge
call
jno
dec
push
dec
and
aas
rol
popl
popf
lcall
mov
and
insl
adc
loope
mov
mov
sti
addb
push
mov
iret
and
mov
adc
inc
xor
inc
mov
inc
lcall
sbb
enter
fcomps
push
cmc
mov
mov
adc
fs
cld
adc
sbb
pop
mov
pop
ficomps
and
sarb
inc
test
shrl
popf
out
jo
imul
cmp
icebp
push
and
mov
pop
gs
sub
mov
jle
repz
and
lahf
les
push
fistl
add
iret
push
mov
lods
push
sub
push
stos
in
jns
pop
adc
xor
test
jmp
add
add
imul
fnstsw
dec
sbb
add
arpl
jbe
pop
pushf
push
lcall
fsubs
xor
jge
mov
adc
inc
cmp
sbb
sti
lahf
shr
nop
fsub
notl
es
xor
hlt
lcall
ja
cmp
adc
out
mov
outsl
and
movsb
stos
pusha
and
xchg
xor
sbb
cmpsb
lock
sub
pop
repnz
adc
xchg
xor
and
sti
and
push
pop
or
push
shrb
push
and
mov
loope
sbb
fdivrl
arpl
cmpsl
cwtl
out
jns
mov
lods
aas
mov
imul
std
es
jg
cmp
pop
sbb
test
out
stc
push
pop
shrb
push
out
sarb
stos
jle
add
aam
clc
faddp
push
cmpl
inc
and
cmpsb
pop
sbb
cmc
loopne
fcomps
mov
testl
mov
dec
ficoml
push
ss
vpacksswb
sbb
lret
or
in
sbb
jb
cmp
loope
xchg
mov
sub
mov
cld
push
mov
and
jb
mov
inc
mov
xchg
js
inc
mov
loop
inc
cmpsb
shlb
clc
xchg
add
add
js
aaa
lahf
cmpsl
imul
cmc
sub
shrb
out
mov
push
leave
add
dec
insb
aad
dec
xchg
xchg
sub
loopne
out
sarb
xor
sbb
fsubrs
adcl
xchg
push
pop
add
pop
mov
dec
stos
repz
test
cmp
data16
adc
inc
dec
inc
data16
inc
stc
push
mov
stc
ds
xor
and
inc
xor
push
sarb
mov
hlt
pop
cmpb
or
lock
aas
xlat
mov
xorb
xor
test
mov
nop
dec
cmp
pop
pop
mov
outsb
stc
mov
xchg
push
cmpb
or
mov
inc
xchg
call
push
pop
xchg
mov
push
xor
rorl
pusha
pop
outsl
jno
xchg
push
add
add
jg
sbb
mov
jbe
imul
adc
rcll
push
std
pop
xchg
inc
movsl
cmpsb
mov
stos
movb
lret
flds
or
xchg
push
jg
xor
jns
popa
aam
adc
jmp
dec
push
shr
mov
gs
lods
and
aad
and
gs
out
addr16
add
xor
xchg
and
lock
jmp
leave
repnz
jns
sub
adc
sub
xchg
sub
xchg
pop
enter
sub
xchg
cmp
mov
inc
aam
fists
pop
and
sub
scas
pop
sub
sub
dec
repnz
xchg
jmp
mov
aad
stos
in
ret
xchg
addr16
and
scas
cmovb
std
push
lahf
sbb
mov
mov
dec
insl
mov
jo
sti
enter
dec
mov
push
push
fs
xchg
cmp
ficoms
orb
stos
gs
test
add
xlat
sbb
leave
cmp
roll
push
je
jae
in
outsl
aad
call
mov
push
sahf
test
dec
std
cmp
inc
pop
mov
mov
into
push
scas
jno
fnstcw
enter
insb
jge
xchg
cld
xor
add
jp
gs
test
iret
jbe
nop
mov
mov
int
loopne
jae
mov
fimull
filds
cmpsb
mov
cli
and
xchg
movsb
test
jl
jl
js
dec
push
or
xchg
outsl
lahf
xchg
les
add
jb
push
inc
add
mov
pop
fisttpll
in
jge
pop
dec
cmpsl
mov
pop
mov
push
lock
stc
mov
pop
addr16
pop
pop
sub
xor
dec
cld
mov
pusha
mov
std
cmpsl
cs
cs
xor
fxch
or
lods
mov
jmp
jnp,pt
sbb
xchg
xor
push
mov
adc
sub
lcall
loopne
sub
lret
push
mov
lahf
or
aaa
xchg
aam
scas
dec
pop
inc
and
xchg
xor
xor
xor
sbb
push
lds
push
adc
inc
push
ret
and
adcb
mov
cmpsl
mov
jne
xlat
lahf
ljmp
adc
popa
sbb
fwait
mov
cmpsb
pusha
fistps
mov
and
jns
cld
in
sahf
sbb
adc
in
dec
sbb
in
aaa
gs
pop
dec
push
mul
rcrl
fs
fmull
sub
hlt
xor
cmpl
push
js
jmp
jl
orb
dec
pop
lcall
les
pop
adcb
and
cmp
sub
sub
inc
outsl
mov
call
outsl
sub
jle
inc
fadd
int
and
stos
push
repnz
pop
mov
add
adc
jbe
mov
in
dec
aad
and
ret
mov
xor
lret
repz
sub
fdivrs
shlb
xchg
fidivs
mov
leave
loope
sbbl
outsl
cmp
scas
mov
lods
aad
xchg
jb
fcomps
pop
jae
lds
gs
sub
jno
jbe
shr
jo
int
loop
into
in
push
mov
xor
cmc
pusha
push
les
pop
aas
cmc
mov
jmp
inc
inc
sti
jb
jle
jno
int
repnz
jg
iret
negl
push
loope
xchg
jmp
nop
aaa
xlat
adc
fwait
lock
add
fsubl
pop
fiadds
shlb
add
mov
fildll
hlt
cltd
sub
or
ret
jmp
les
dec
push
jmp
hlt
sub
jmp
jnp,pt
hlt
adc
jno
cmpb
fisubrs
fdivrs
or
dec
add
jnp
cmpsb
cmpsl
pusha
clc
push
out
inc
call
ret
lea
dec
and
leave
cli
loop
and
cs
pop
popa
outsb
enter
lahf
add
data16
js
mov
aaa
mov
ds
ret
test
mov
mov
lods
push
cltd
in
repz
lahf
cmp
data16
add
and
test
rorl
jb
jbe
std
dec
bound
cmpb
mov
shl
jb
pop
mov
mov
xor
pop
scas
stos
jne
or
mov
fbld
test
jecxz
xchg
adcl
add
ret
mov
sbb
xlat
push
loopne
ret
sub
ljmp
cmp
cltd
imul
fildll
xchg
push
hlt
lahf
add
pop
in
lret
out
hlt
test
adc
dec
inc
adc
jno,pt
or
out
adc
jne
jle
xor
mov
mov
jl
jb
js
push
pop
push
test
mov
adc
mov
notl
mov
add
dec
dec
sahf
mov
mov
mov
pop
ret
adcb
aaa
lcall
adc
out
xor
cmpsl
popf
pop
adc
test
pop
sbb
fldcw
orl
inc
xchg
and
inc
pop
jecxz
push
jp
popf
cmp
add
jmp
mov
sbb
testb
test
inc
rcrb
sbb
push
ds
stc
aam
popf
mov
mov
lcall
stos
cmp
sub
sbb
sub
pop
out
push
test
movsb
jmp
scas
sub
decb
and
sub
fistpll
inc
inc
sahf
sbb
rclb
stos
call
add
scas
jg
mull
jae
out
xor
repnz
jp
dec
mov
arpl
sub
or
or
bound
into
jp
popf
jmp
or
pop
jmp
mov
repnz
mov
jmp
leave
pop
add
loop
add
dec
data16
jbe
mov
add
cld
int3
lret
or
add
fisttpl
movb
jecxz
out
mov
outsb
insb
pop
mov
cmpsb
jecxz
adcb
cmp
cmc
stos
outsl
movsb
inc
into
xor
cmp
push
mov
inc
inc
int
dec
test
jb
insb
jns
fwait
jne
cwtl
xchg
and
fdivp
inc
xchg
js
and
movsl
mov
adc
subb
cmpsb
sbb
hlt
mov
xchg
stc
arpl
sbb
or
mov
fsubrp
sub
fmuls
movsb
in
stc
int3
ret
push
scas
inc
das
outsl
mov
sbbl
or
xchg
push
jg
bound
jae
in
mov
mov
xchg
and
out
fs
mov
out
xchg
cmc
daa
push
inc
test
int3
test
jg
dec
xor
jmp
push
repz
int
dec
hlt
jge
add
rcl
jg
xchg
mov
fistpll
mov
fs
and
add
push
inc
pop
lods
pop
rdpmc
cs
pop
xor
pushw
xor
sbb
inc
call
aas
aas
icebp
movsl
arpl
sub
fwait
movsb
and
adc
into
jno
dec
mov
mov
inc
dec
adc
cmp
ret
mov
aas
jns
and
or
push
ret
addr16
push
xor
into
ljmp
fdivr
jmp
jne
dec
inc
xchg
lea
xchg
sbb
push
and
enter
fisubs
into
or
pop
pop
lods
or
cmc
sub
mov
pop
je
in
pop
mov
add
cltd
push
mov
cmp
or
hlt
sub
adc
dec
enter
mov
or
call
cmpsl
rorb
shlb
ds
inc
adc
add
adc
jg
adc
xchg
mov
enter
fldl
lcall
into
sahf
xchg
out
cli
aam
ja
pop
arpl
mov
jecxz
cltd
xchg
xchg
cmp
bnd
dec
sar
mov
sti
or
dec
jns
je
add
call
dec
and
aas
mov
jae
and
add
orb
test
or
xor
sbb
mov
xor
inc
roll
add
and
fcoms
inc
jo
cmp
addr16
scas
es
or
leave
lock
or
fsts
loop
xchg
fs
push
into
lods
adc
xchg
push
inc
inc
mov
rorb
cwtl
jno
mov
lock
mov
les
shl
fimull
mov
stos
dec
cmc
lods
jae
mov
adc
ret
jo
sub
inc
mov
icebp
cwtl
xchg
pop
mov
shll
mov
sarb
sbb
sbb
bound
and
mov
lcall
mov
mov
call
or
loopne
bnd
jg
imul
push
add
adc
jg
movsl
push
sbb
add
cli
vfmsubadd231ps
lock
sbb
fdivl
pop
popa
lahf
rorb
rcrl
js
sub
mov
icebp
mov
and
pushf
adc
sub
mov
sbbb
movsl
scas
xchg
sub
ret
sub
jnp
notb
adc
jle
add
popa
es
orl
push
sti
fbstp
and
mov
repz
in
mov
sub
loope
fistl
in
xchg
and
xchg
and
add
push
pop
pop
sar
lds
and
mov
fcompl
insb
out
xor
xchg
fbstp
jne
enter
dec
jns
mov
cmp
orl
pop
cmp
push
ljmp
and
xchg
insl
in
clc
repz
out
mov
js
mov
iret
push
add
mov
mov
inc
mov
sti
in
mov
sub
int
xchg
adc
lcall
ficompl
out
push
lods
insb
subb
hlt
pop
mov
push
lods
rclb
push
sarb
loope
add
clc
jne
push
leave
mov
dec
jb
and
rorl
and
sub
popa
mov
sti
adc
jo
xor
adc
subl
sbb
jae
or
sbb
call
and
push
pop
daa
in
add
in
dec
mov
mov
mov
out
aas
pop
cli
add
push
adc
fsubp
aam
sbb
push
sbb
insl
push
or
jbe
pop
ret
clc
mov
sbb
int
std
js
xchg
add
push
cmp
cs
mov
or
cwtl
adc
cmp
loope
aam
imul
insl
in
add
data16
imul
ret
lret
pop
sti
icebp
lea
arpl
cld
or
idivl
mov
imul
loopne
xor
pop
sti
inc
aam
filds
or
xchg
sbb
popf
stos
ds
sti
pusha
pushf
movq
out
pusha
push
mov
and
jo
mov
pop
outsb
pop
pop
cmpsb
cmc
lret
inc
into
mov
push
imul
xor
inc
out
sbb
xchg
dec
mov
cmc
push
sub
int3
out
sbb
das
or
das
fmull
lea
cmp
pop
inc
mov
popf
jp
push
push
inc
test
and
inc
pop
xchg
sbb
cmp
jne
sub
loope
or
adc
cltd
stos
xchg
sub
les
out
imul
cmc
inc
mov
push
arpl
lret
imul
add
push
pop
pop
sub
leave
jmp
add
iret
iret
or
sbb
iret
sub
arpl
imul
push
fidivrs
icebp
push
lcall
ret
push
adc
test
push
fadds
adc
mov
push
test
lahf
or
out
loopne
xchg
xchg
icebp
sub
push
sbb
test
ds
stos
mov
and
add
lret
inc
leave
xchg
jg
sbb
inc
test
adc
iret
xor
jae
fdivrs
add
les
cld
xorb
mov
xchg
sub
loope
addr16
sub
stos
sbb
xor
sbb
mov
aaa
dec
sub
imul
pop
enter
loope
pop
jne
inc
cltd
imull
cwtl
popa
dec
in
pop
push
xor
xchg
jno
aas
dec
sbbl
inc
dec
mov
fcmovnbe
aad
add
sahf
sub
dec
xlat
dec
std
mov
out
cmp
shrl
rcrb
add
jo
lret
jb
mov
sbb
scas
cltd
xor
popf
lret
jnp
and
in
adc
ffreep
push
mov
cli
ret
daa
jmp
aaa
das
into
add
lcall
popf
sub
pop
insb
sub
jae
lahf
mov
pop
mov
jecxz
js
or
fisubl
xlat
push
sub
lea
es
cmp
sbbl
imul
dec
aas
sub
rolb
lret
ret
into
adc
cli
add
cmc
in
cmp
xchg
mov
adc
xchg
movsl
mov
push
cmp
cwtl
out
xor
out
sub
jp
fs
fimull
stos
pop
test
xlat
mov
xor
lods
scas
aam
or
popa
ja
push
popl
push
jle
sub
mov
xor
cmpsb
sbb
aad
cmp
push
into
mov
ret
sbb
ret
into
adc
mov
push
cmp
add
rcl
add
xchg
sbb
fwait
inc
jg
popf
lea
bound
call
stc
push
xor
or
or
adc
jns
sbb
ret
rcrb
and
jg
add
aad
jecxz
sbb
cs
daa
dec
sub
pop
dec
xchg
test
clc
cwtl
pop
and
stc
loop
cmc
aas
xor
scas
inc
mov
jno
test
add
adc
enter
scas
sub
inc
fdivr
add
mov
push
popf
or
pop
sub
mov
xchg
dec
int3
jp
imul
mov
jl
inc
stos
dec
arpl
es
xor
adc
stos
je
insl
xorl
pop
in
sbb
shll
mov
enter
pop
adc
add
cmp
int3
mov
dec
cmp
loop
loope
adc
push
jns
and
mov
fiadds
cmpsb
bound
imul
subb
cmp
mov
outsb
in
lret
inc
mov
fsts
ret
rcrl
and
cmc
test
mov
adcb
jp
out
cmpsl
mov
xchg
adc
sub
add
ss
jb
mov
push
push
inc
or
aad
mov
test
xlat
jmp
insl
add
add
mov
cmp
shrl
xchg
dec
push
ret
add
and
add
inc
pop
add
add
cmp
sub
push
fdivs
dec
sarl
fimuls
mov
sub
push
mov
data16
xor
mov
push
pop
jbe
add
mov
push
rol
mov
pop
and
xlat
and
jmp
nop
sahf
adc
dec
dec
fcomps
fs
shr
stos
stos
loop
in
rcl
xor
cmp
dec
dec
mov
mov
imul
xor
sbb
add
or
add
add
or
cmp
adc
pop
ret
dec
xchg
cmp
inc
es
push
xchg
add
mov
cmp
movb
mov
xor
and
jbe
mov
jge
ret
xorb
push
ja
push
push
jg
testb
aas
or
fsubrp
call
mov
sti
pusha
insb
adc
es
mov
mov
bound
es
jno
pop
mov
pop
xor
popa
fistpl
jecxz
repz
push
jecxz
push
push
in
xchg
pop
inc
dec
xchg
loopne
adc
mov
in
xchg
add
lret
test
cld
adc
nop
jg
incl
fldl
mov
push
notb
scas
cmpsl
xchg
xor
push
ss
sahf
sbb
dec
mov
inc
adc
push
mov
sub
shlb
mov
lret
push
fucom
out
test
mov
sub
inc
pop
das
xchg
and
or
xchg
mov
fidivl
inc
ret
sbb
push
jmp
jnp
sbb
loope
pop
shlb
gs
pop
mov
in
pop
push
pop
sti
inc
movsb
mov
call
mov
fstpt
pop
mov
mov
lods
or
push
aam
into
lds
jno
incb
fdivrl
sahf
push
lods
scas
push
xlat
subb
xor
div
mov
push
push
icebp
inc
pushf
jo
inc
push
aam
rol
jge
rcrl
mov
shll
subb
stc
sbb
push
fisttpl
mov
pop
xchg
fmull
std
xchg
or
sbb
add
add
push
push
or
xchg
shrb
addl
outsb
pop
fsubrs
xor
add
sarb
loope
sub
pushf
jl
push
scas
repz
inc
mov
add
fldl
pop
or
repnz
cmpsb
ret
mov
mov
mov
jnp
loope
nop
ficompl
xor
outsl
popf
inc
je
lcall
shlb
mov
and
dec
lods
xor
in
aas
bound
in
mov
outsl
xchg
adc
fsts
fistps
clc
xor
mov
out
jne
lcall
outsl
repz
pop
std
push
loope
fsubrl
dec
jg
jmp
push
inc
call
adc
push
dec
cmc
and
jo
adc
mov
iret
push
adc
inc
cltd
loop
or
imul
and
js
xlat
lret
inc
out
lock
mov
mov
jo
scas
and
daa
fwait
jne
pop
into
int3
cld
scas
dec
js
ljmp
mov
add
or
and
or
mov
fildl
pushf
stc
lods
test
pop
mov
jae
and
inc
filds
adc
stos
mov
and
mov
add
leave
sarb
mov
jle
rcrl
and
mov
aaa
xor
cltd
je
iret
jge
xchg
cli
inc
fs
cmp
dec
sbb
add
shrb
mov
pop
cmpsl
jnp
sbb
jno
jns
lret
in
xchg
out
push
aam
stos
in
mov
xchg
and
mov
imul
jbe
repz
xlat
iret
lret
jl
inc
ss
ljmp
push
jmp
mov
mov
jecxz
mov
mov
mov
and
mov
stos
inc
jmp
add
mov
or
inc
ljmp
pusha
or
adc
std
sub
mov
and
pop
ljmp
add
insl
and
lods
roll
iret
leave
sbb
loop
mov
xchg
pop
daa
mov
pop
daa
addr16
ret
fs
es
sbb
fdiv
adc
mov
std
lods
dec
fimull
lods
push
xor
adc
and
outsl
movsb
les
xchg
adc
ret
cld
lret
nop
ja
mov
aad
lock
sub
lahf
and
jp
outsl
iret
mov
and
int3
jno
fcoms
or
insb
jge
push
ss
mov
inc
incl
xor
test
or
pop
mov
mov
je
lds
in
mov
cmp
ss
mul
rclb
jne
sub
mov
xchg
mov
cmp
addr16
jg
push
jae
rorb
sar
js
dec
pop
add
clc
adc
jbe
sub
xchg
inc
adc
xlat
and
lret
mov
icebp
add
mov
iret
push
add
mov
sbb
jg
xchg
outsl
push
hlt
mov
mov
dec
cld
hlt
push
mov
lret
movsl
nop
or
gs
push
jb
lahf
out
cmp
xchg
adc
push
add
mov
cmp
mov
mov
jns
mov
scas
enter
xor
xchg
xchg
nop
mov
sub
lock
mov
pop
testb
sub
lret
dec
pop
call
pop
pop
ljmp
cmc
imul
mov
sbb
inc
xor
test
hlt
mov
lcall
data16
dec
xchg
stc
arpl
ja
xchg
cmp
daa
cmp
cmp
loop
push
add
mov
imul
je
popa
xchg
mov
add
ljmp
mov
lret
divl
rolw
test
pusha
mov
xchg
pop
les
adc
cmp
dec
jp
and
sub
and
and
scas
inc
mov
xchg
sub
add
or
and
mov
ret
outsl
and
into
pop
sbb
add
xchg
popl
jl
push
mov
add
adc
enter
loopne
adc
sub
lahf
iret
cmp
in
jnp
inc
insb
sbb
add
xchg
and
scas
inc
aaa
aad
mov
fs
sahf
push
pop
cld
cld
adc
xchg
test
add
in
jno
stos
scas
lret
inc
aaa
jns
add
pop
mov
mov
jae
std
loop
jbe
les
popa
adc
mov
cmp
fs
sbb
outsl
sbb
jno
inc
ss
inc
shrb
dec
jo
cwtl
jb
test
test
fistpll
sub
adc
add
pop
lret
mov
out
push
dec
gs
sbb
adc
std
jnp
or
mov
push
xor
or
lcall
mov
mov
xchg
xchg
test
lock
lea
cmpsb
mov
and
sub
xor
push
adc
mov
mov
lds
add
xor
stc
jge
jmp
leave
cwtl
adc
push
push
mov
or
inc
sbb
out
xchg
in
arpl
jnp
inc
pop
test
addr16
sub
mov
fstpt
outsb
addr16
bound
pop
xchg
decb
inc
cltd
and
mov
xor
adc
or
sub
imul
sub
movl
sub
cmp
dec
lea
jnp
pop
dec
jge
int
push
scas
xchg
icebp
add
push
repz
mov
add
pop
sbb
lock
lods
ss
out
lods
cmp
cmpsb
loop
inc
repnz
push
stos
dec
push
out
lret
mov
pusha
cltd
xchg
lcall
xchg
mov
or
loop
mov
jbe
cmp
jae
rol
orl
or
xchg
or
test
mov
and
push
jbe
nop/reserved
lods
push
and
mov
aam
mov
add
inc
imul
sbbb
out
push
out
jo
scas
and
sbb
lcall
rcr
adc
out
lods
imul
aam
ret
or
adc
faddl
sahf
mov
jge
pusha
test
mov
jl
jno
add
jg
mov
in
or
or
popf
movsb
test
adc
jb
fwait
mov
mov
xchg
test
cmp
int3
lret
in
hlt
fisttpl
add
ret
clc
add
inc
les
ret
adc
push
push
and
dec
mov
push
mov
sbb
daa
popf
movsl
cltd
xor
or
js
mov
mov
out
lods
data16
outsb
push
lods
scas
sbb
and
imull
sbb
push
jns
into
add
inc
in
xchg
std
pop
ror
and
outsb
xchg
mov
pop
fisubs
in
test
push
enter
dec
insl
cmp
imul
mov
push
outsl
mov
ss
mov
adc
decb
mov
mov
sub
or
push
pop
adc
ja
ja
push
inc
inc
inc
jl
ret
add
jl
push
outsb
xor
scas
push
cmpsb
or
xor
lret
int
inc
jne
mov
inc
ret
lock
sub
sbb
xchg
cmpb
pop
xor
mov
sbb
mov
repz
pmaxsw
testb
pop
inc
xchg
cmp
xchg
and
ds
adc
mov
push
pop
sub
sbb
fbstp
add
insb
jb
jp
inc
inc
or
cmp
pop
bound
xchg
movsl
std
mov
adc
mov
pop
xchg
rorl
test
clc
mov
push
subl
inc
nop
fcomps
es
imul
ficoml
je
addb
mov
cmp
aaa
sti
jl
sbb
stos
cld
jmp
out
leave
loopne
pop
ficoml
sub
mov
outsb
jns
cmp
pop
cmc
fidivrl
lds
push
mov
bound
std
xchg
fistps
xchg
sub
pop
xchg
cmp
out
test
pushf
fisttpll
inc
or
and
mov
mov
jne
loope
test
jecxz
pop
popa
subl
push
add
dec
jge
dec
inc
cltd
in
push
arpl
pop
clc
scas
jns
sbb
adc
repnz
push
imul
cmp
adc
xchg
ljmp
mov
cmpsl
mov
dec
mov
pop
mov
pop
pop
adc
inc
cmp
fcoms
mov
fadds
js
xchg
stc
xor
add
js
pusha
push
pop
das
rcrb
addr16
pusha
xchg
ja
rdpmc
xor
fsub
lret
push
daa
xor
mov
dec
sub
test
negb
pushaw
cwtl
cmp
inc
out
aas
sbb
rol
dec
in
dec
test
js
fwait
lods
and
xchg
shlb
test
adc
iret
cli
add
mov
mov
test
pop
cld
imul
stos
fwait
sub
and
sub
jg
adc
movsl
mov
cmp
fisubrs
dec
call
cli
scas
mov
aad
out
out
sbb
fsts
lcall
mov
mov
idivb
popf
mov
nop
dec
lret
mov
stc
nop
xchg
pushf
mov
jmp
loopne
push
adc
js
push
xor
push
inc
decb
adc
push
imul
lcall
mov
add
mov
push
ja
mov
pop
push
mov
pop
xchg
aas
out
stos
add
sbb
jns
pop
add
or
lahf
out
mov
or
cmpsl
loop
es
xor
repz
lret
enter
mov
scas
hlt
inc
sub
pop
cmpsl
fiaddl
in
rorb
mov
mov
in
pushf
cli
daa
push
icebp
inc
xchg
iret
inc
cmpsl
fildl
fcos
popf
adc
rcll
ficoms
andb
loope
ja
pop
adc
jae
fisttpl
es
in
fs
ss
cld
daa
pusha
shll
mov
xor
mov
inc
sbb
inc
fwait
lds
inc
in
push
lods
sbb
test
push
sub
in
sub
fdivl
xchg
cmpsb
adc
xchg
and
sti
les
mov
add
addr16
cmp
pop
push
fs
mov
jnp
ds
sub
shlb
and
test
shll
mov
daa
hlt
cmpb
std
dec
and
cmp
jns
pushf
repz
insl
cmp
or
cld
push
ret
cmp
sub
stos
sub
jne
cltd
lea
xlat
popa
cmp
push
test
pop
call
pop
pop
and
cmp
jecxz
xlat
sbbb
dec
lods
add
push
lret
and
xor
sbb
mov
xlat
jg
and
add
xchg
or
mov
dec
jne
jnp
mull
jecxz
movsl
pop
cmp
xor
hlt
scas
aad
negb
scas
cmp
xchg
shll
in
in
imul
inc
xchg
mov
jno
enter
mov
ljmp
and
add
adc
sub
dec
add
sbb
xchg
insl
scas
sbb
rcrl
mov
xchg
mov
loope
mov
mov
jno
mov
cmc
adc
std
int
jo
push
pop
imul
sbb
mulps
or
sahf
push
test
test
movsb
cmp
inc
add
sti
cld
adc
mov
mov
test
or
mov
test
cltd
jne
push
pop
xchg
mov
test
ret
sub
add
stc
xchg
insl
xor
out
std
xchg
fwait
and
and
insl
movsb
divb
cmp
cwtl
repnz
insb
fs
jmp
repz
movsl
aad
add
icebp
out
lret
out
cmpsb
shrl
aas
xor
sbb
or
lods
shll
loopne
stos
ret
sbb
mov
add
filds
fdivl
out
mov
inc
repnz
cmp
jg
cltd
test
mov
xchg
sub
sbb
sahf
rorb
mov
enter
xchg
jno
mov
mov
jns
mov
or
or
sub
jg
jmp
aam
lahf
leave
push
push
lods
ret
sahf
aas
pop
cmp
jl
mov
icebp
ljmp
jge
out
jae
dec
out
loopne
push
fimull
popa
jne
or
loopne
xchg
jle
shll
test
jae
pusha
sub
lahf
mov
arpl
push
sbb
or
mov
aad
sub
mov
daa
sbb
cmpsl
idiv
xchg
movsl
stos
mov
notb
dec
cmp
outsl
out
repnz
xor
rclb
xchg
or
movsl
push
leave
mov
mov
aam
dec
jo
mov
xor
out
dec
lcall
outsb
fwait
fsts
push
jne
mov
xchg
push
push
cmp
or
sahf
cmc
xchg
in
das
pop
add
out
arpl
jecxz
sbb
das
into
fimuls
out
frstor
rolb
jae
es
ss
cltd
mov
inc
popf
sbb
cmp
stc
adc
popf
mov
dec
sti
dec
dec
aaa
dec
inc
mov
jbe
lock
fdivrl
sahf
add
jp
adc
pushf
test
arpl
sub
stc
loopne
push
imul
frstor
push
push
out
push
rorb
sub
mov
add
sub
sbb
xchg
cmp
clc
mov
pusha
cmp
and
sti
bound
pusha
pop
jo
leave
sbb
lds
inc
shrb
data16
jle
outsb
leave
and
or
push
rcrl
adc
xor
in
push
pop
sahf
arpl
or
xchg
aaa
xchg
sarl
mov
cltd
push
imull
xchg
sbb
push
cltd
das
dec
xor
mov
inc
push
jbe
lcall
jg
xor
roll
jmp
dec
cli
push
xchg
dec
out
adc
ret
mov
lret
aas
nop
pop
insb
mov
je
int3
es
push
jl
xlat
xchg
lret
adc
mov
cmp
sar
dec
mov
js
xrelease
gs
jbe
cmp
or
cmp
mov
push
mov
mov
test
insb
ss
xchg
scas
cmpsl
cwtl
sbb
in
xor
mov
aas
dec
jnp
xor
xchg
repz
aas
cmc
sbb
sub
add
ret
into
jne
sahf
adc
in
and
mov
push
add
mov
sub
daa
cmp
lcall
loopne
inc
pop
jle
fldenv
jne
push
fimuls
pop
xchg
jb
xor
lret
mov
xor
mov
adc
mov
jns
into
stc
adc
dec
int
nop
and
dec
cmc
stc
inc
mov
rorb
xchg
adc
xchg
sub
stos
arpl
mov
rol
ret
and
imul
mov
sub
push
in
cltd
sub
psubsw
fwait
mov
mov
adc
sbb
test
js
xchg
dec
xor
or
lret
push
shrl
clc
rorb
jns
or
sbb
jb
mov
ficoml
dec
jmp
movsb
out
inc
push
stos
sub
push
stos
das
das
enter
push
pop
adc
push
test
clc
cmp
leave
mov
xor
and
pop
ret
bnd
add
incl
inc
cltd
jne
sub
mov
shll
in
imul
int3
mov
add
add
leave
cmpb
jp
fwait
loop
cmp
lret
adc
xchg
xchg
mov
cmpsb
jnp
xchg
shl
inc
xchg
sti
xchg
push
sbbb
sub
xchg
push
inc
sbb
repnz
js
out
je
adc
daa
dec
pop
fiaddl
push
fimull
xchg
in
ret
sti
lods
mov
jge
sbb
push
cmpsb
call
jle
mov
inc
push
dec
push
cmc
jge
lds
push
xchg
pop
pop
dec
roll
dec
xlat
fwait
loop
scas
mov
test
xorw
mov
out
jb
sti
lds
dec
xchg
lret
pop
sub
xchg
cmp
or
test
cmp
lock
sbb
call
test
mov
andb
leave
test
aad
inc
cmpsb
cmp
adc
jnp
decb
fisttps
dec
scas
mov
add
or
shrl
add
and
adc
in
adc
lock
test
cwtl
add
insb
add
mov
nop
mov
es
xchg
cld
mov
mov
cli
pop
outsb
or
push
dec
dec
mov
or
fs
cli
add
cmp
and
pop
es
push
repz
cltd
jle
mov
sub
mov
pop
sub
jnp
xchg
lods
cli
shlb
into
pop
fstp
addl
jns
rolb
adc
sar
push
add
sbb
xchg
test
xorb
sub
xchg
outsb
cmpl
and
cmp
push
lret
cmpb
mov
hlt
sbb
xor
mov
push
in
mov
xchg
add
mov
add
xor
inc
push
pop
add
iret
push
push
stc
add
hlt
mov
xchg
dec
insl
sti
adc
fildl
pop
xchg
jmp
notl
sbb
pop
jb
enter
lret
arpl
dec
mov
repnz
mov
enter
xchg
or
and
outsl
int
rolb
or
cld
pop
leave
addr16
jecxz
xchg
jb
sti
pop
je
lock
test
pushf
dec
insb
shll
lret
repz
or
pop
mov
pop
jecxz
popa
lock
lea
daa
jp
sbb
inc
shll
xchg
arpl
adc
pop
insb
mov
and
into
sub
inc
inc
enter
push
jmp
push
ss
pusha
lahf
mov
inc
es
push
imul
fisttpl
jns
sub
cmpsl
std
aad
mov
out
adc
in
insb
aaa
sbb
das
popf
cli
cltd
add
push
adc
fstpt
je
mov
cmp
lock
push
rcll
std
and
xchg
pop
cld
out
into
xchg
stos
sbb
sahf
mov
fstpl
sbb
sarl
pop
gs
orb
in
xor
cmp
lods
or
add
ljmp
imul
xchg
inc
pop
xchg
adc
pop
outsl
cmpsb
hlt
shll
rclb
push
push
xchg
and
lods
sub
fadds
jo
inc
pop
lret
push
cltd
in
imul
mov
mov
xor
xchg
lret
loop
or
int3
xor
sbb
cld
xor
je
shll
push
or
fsubl
cld
arpl
out
fcompl
mov
sbb
sbb
jg
ret
stc
data16
adc
das
cwtl
movsb
push
ljmp
lock
loopne
xchg
aam
push
adc
jo
pop
add
xor
jle
or
push
dec
mov
add
and
les
sub
lretw
cmp
or
repnz
push
sub
jne
imul
inc
xor
push
bound
imul
jge
xor
fbstp
mov
add
add
pop
inc
loopne
ffreep
push
enter
sbb
or
jg
cmp
add
ret
lahf
pop
stos
aad
out
adc
rclb
pop
test
or
cmp
mov
repnz
in
loopne
loope
je
jecxz
fdivr
inc
in
jae
sbb
lock
in
pmulhw
pop
cmp
push
dec
out
in
jmp
fmull
xor
in
les
push
pushf
adc
std
jnp
mov
jmp
push
bound
sarb
jle
hlt
fadds
mov
ret
mov
outsl
and
jmp
insb
gs
imul
adc
cmp
dec
lcall
in
mov
fidivrs
add
rolb
xor
shlb
test
popf
jbe
mov
inc
lcall
cmp
xor
xor
cmp
sbb
jns,pn
aad
cmp
dec
mov
pop
pusha
jo
dec
mov
fisubl
inc
lea
fbld
pop
jae
scas
test
call
rorb
push
jns
jl
mov
movsl
aad
inc
mov
nop
mov
cmpsl
cltd
lea
les
sub
jp
mov
pop
dec
or
mov
les
cmpsl
cmp
stos
scas
add
cmpsl
pop
int
push
jae
decb
arpl
test
mov
xchg
shlb
xor
adc
pop
test
jno
xchg
lods
push
inc
adc
loop
ljmp
test
shrl
sub
and
sbb
sub
and
fninit
aas
test
mov
outsl
xchg
sub
cli
repnz
push
not
out
push
outsb
and
inc
lret
lock
cmp
fdivl
push
mov
mov
inc
sti
jae
subb
push
push
fnstsw
bnd
mov
xchg
mov
jnp
je
push
aaa
sbb
fidivs
ljmp
into
pop
xor
add
adc
cmpsl
dec
leave
cmp
pop
arpl
push
aas
fstpt
roll
fisubrs
sbb
sarb
and
pop
adc
mov
popa
inc
xchg
xor
mov
clc
jae
adc
xchg
jecxz
test
dec
daa
cmp
jmp
inc
xor
pop
mov
dec
adc
jbe
das
imul
sarl
sub
je
xor
dec
stos
fwait
add
pop
jns
jb
stos
add
or
jb
jmp
push
add
scas
into
pop
sub
mov
xchg
into
imul
or
pop
and
sti
adc
ds
and
jecxz
sahf
sub
add
int3
jno
nop
add
sbb
sbb
xor
cmp
mov
pushf
sti
jecxz
adc
jae
rcll
inc
inc
ja
dec
sub
outsl
test
cwtl
in
mov
and
arpl
pop
stos
movsb
es
sbb
jae
xor
mov
insb
js
test
fucompp
js
cltd
std
jecxz
icebp
cmpsl
xlat
inc
adcb
cmpsb
fcmovbe
lcall
shrl
popf
push
cltd
cmp
mov
icebp
sbbl
incb
inc
pushf
push
outsb
cmp
xchg
lock
std
inc
lahf
mov
push
filds
inc
mov
or
push
hlt
pop
scas
scas
jmp
ss
sti
mov
cwtl
mov
add
sub
js
mov
pushl
fwait
fwait
sbb
fists
inc
rclb
cmp
cmp
insb
aad
sahf
pop
not
jmp
test
in
inc
aad
iret
cmp
insb
cltd
movsl
filds
mov
cwtl
mov
jae
add
or
arpl
pop
fsubrl
xchg
lret
int3
xor
data16
mov
jmp
arpl
cmp
adc
inc
inc
cmp
es
push
ret
xlat
lahf
stos
mov
jge
cmc
ss
bnd
mov
pop
sbb
xchg
push
data16
sbb
cmp
pop
mov
ret
xchg
movsl
test
loop
jge
cld
mov
add
pop
xor
sub
ja
femms
jecxz
int3
mov
mov
movl
in
movsb
xlat
pop
dec
pop
mov
and
and
mov
jae
sub
mov
cmc
ror
mov
push
movsl
pop
mov
scas
xor
pusha
xor
mov
stos
ret
stc
or
enter
push
scas
push
sti
sbb
imul
clc
pop
cmpsb
in
mov
in
or
nop
stos
hlt
jp
pop
xchg
fsubrl
cmp
ja
mov
ffree
repnz
clc
jae
popf
cmpsl
and
popa
xchg
aaa
cmp
sub
out
sar
jge
mov
inc
cs
stos
sub
std
cmc
pop
or
movsb
cmpsb
mov
jp
cmc
in
lods
les
xchg
or
dec
pop
jbe
inc
or
mov
adc
cmc
xchg
sbb
es
cmpb
in
cmc
imul
xchg
sub
iret
inc
pop
leave
shlb
jecxz
dec
pop
sbb
scas
or
outsb
test
jg
loop
mov
pop
outsb
adc
cwtl
cmpsl
test
stos
int
xor
cmp
lods
dec
mov
mov
mov
xchg
xchg
aam
pop
mov
or
cmpb
incb
jle
or
push
mov
sbbb
fiadds
pushf
xlat
or
jecxz
clc
incb
pop
fists
les
jp
and
push
xor
aaa
lock
fidivrl
cmpsl
add
aaa
icebp
xor
imul
rcll
xchg
sahf
push
cmp
xor
leave
xchg
fsts
mov
jmp
fmuls
push
dec
adc
jnp
cmp
mov
sub
sbb
cli
xchg
outsl
mov
jb
cli
enter
adc
xchg
iret
dec
push
pop
jns
mov
int3
xchg
enter
and
cltd
cld
cwtl
dec
aas
das
dec
nop
cmp
dec
jnp
xor
push
mov
notl
dec
jbe
jp
add
leave
or
inc
adc
scas
jbe
pop
out
dec
movl
push
push
addr16
add
gs
sub
aad
push
ds
ror
addr16
sbb
data16
inc
sahf
adc
pop
orb
jns
and
out
filds
mov
inc
push
pop
subb
les
popf
inc
xor
cld
in
and
hlt
add
mov
mov
test
cld
push
dec
dec
cmp
dec
jno
test
inc
jns
xor
out
dec
idivb
fcomip
cwtl
xchg
pushf
sbb
div
in
mov
test
mov
hlt
sahf
sbb
dec
cmp
les
sub
jbe
adc
test
or
mov
mov
pop
cmp
int
xor
push
cltd
adc
add
dec
popf
sbbl
push
pop
xor
fcompl
cmp
cmp
pop
xor
rcrb
int
xchg
jo
ljmp
fucom
icebp
lcall
lock
or
movsl
iret
int
arpl
and
popf
call
xchg
lcall
xor
cmp
sub
mov
outsb
adc
mov
gs
inc
sub
loope,pn
cmp
adc
addr16
push
xchg
adc
add
add
mov
add
inc
out
lods
mov
bound
cmp
inc
jecxz
adc
add
sbb
add
xchg
sub
stc
pop
jp
pop
jae
outsb
stos
loope
pop
cld
mov
aaa
enter
jae
and
daa
mov
mov
fistps
add
fidivs
insb
xchg
push
inc
sub
mov
lock
js
lods
jbe
xchg
fistpl
fisubs
cmp
inc
hlt
or
daa
push
std
repz
fldenv
std
fidivrl
add
jb
dec
xor
scas
sub
repz
hlt
repz
pop
pop
scas
add
xlat
out
jns
jae
mov
adc
xorb
aaa
push
and
jle
je
dec
or
notb
out
push
pop
call
ljmp
add
jecxz
pushf
aaa
inc
daa
ss
mov
cmpsl
repz
adc
pop
cmp
mov
mov
and
xchg
aad
xchg
push
fs
xchg
roll
mov
pushf
inc
inc
and
inc
scas
call
push
es
xorb
std
mov
daa
fnstsw
dec
jns
mov
pop
add
js
rol
fists
lahf
mov
stos
adc
push
fsubr
dec
cmp
jle
jne
jge
pop
or
pop
cmp
arpl
inc
mov
in
inc
fisubrl
sub
pop
adc
mov
rclb
mov
arpl
add
cmp
xchg
lods
cmp
mov
aas
add
lret
xchg
cwtl
je
cmp
das
das
pop
cltd
incl
les
inc
push
jmp
aam
pop
fcoms
xchg
insb
je
xchg
sub
insb
push
mov
in
lret
rcll
cmp
add
mov
xchg
call
jne
clc
cmp
insb
fists
sub
inc
and
out
pop
test
cld
mov
je
mov
aaa
les
jo
and
mov
dec
lock
mov
inc
shrb
es
fcomps
aas
mov
lods
push
mov
xor
xor
pop
jmp
push
and
je
pop
sbb
fld
cmp
pushf
dec
ds
add
xchg
xor
cmp
scas
push
adc
leave
std
jge
sub
xchg
push
stos
pop
ret
lahf
dec
push
outsl
in
out
dec
frstor
mov
or
push
sub
clc
mov
jbe
lret
dec
pop
push
aas
jmp
cld
scas
mov
aas
add
sub
push
jmp
jecxz
scas
negb
ficoml
stos
mov
paddd
out
mov
jl
and
inc
imul
ror
pop
mov
gs
inc
cmp
sub
push
jns
cltd
pop
cli
insl
mov
inc
lock
aam
loopne
icebp
jmp
jns
jb
imul
fnstenv
sub
or
push
incb
pop
dec
shrl
stc
and
sbb
iret
xor
adc
cltd
jne
flds
mov
pushf
jmp
dec
add
push
xor
ret
daa
jge
mov
andl
ja
movsb
mov
cmpsl
inc
jbe
or
cmc
push
push
out
or
sar
mul
lcall
fs
cmc
mov
sti
or
xchg
jbe
or
cmp
pop
mov
imul
sub
les
daa
out
imul
mov
dec
cld
lahf
pushw
fstpl
push
cmp
adc
leave
rorb
cmp
imul
js
hlt
push
xchg
pop
inc
rcrl
andl
pop
les
inc
sbb
fisubrs
cmpsb
inc
cmp
mov
push
mov
cmpsb
in
inc
pop
cmp
add
and
push
sbb
sbb
stos
cmp
mov
jmp
mov
lods
mov
cmp
inc
adc
inc
sub
jae
mov
ficomps
cmp
test
mov
lret
sti
cmp
sub
test
imul
cwtl
movsb
insl
jge
in
fdivrs
repnz
inc
cmp
das
cmpsb
lods
sub
pop
pop
lahf
clc
mov
sahf
fsubl
push
addl
add
lret
add
jno
cmpsb
mov
repnz
or
push
mov
ds
xlat
je
fs
mov
gs
ret
pop
dec
test
sub
sbb
cmc
add
dec
je
xor
in
adc
xchg
jge
sbb
mov
sub
and
cmp
push
dec
and
aas
ljmp
imul
push
inc
jg
inc
rolb
cmp
repnz
jnp
push
sub
push
xchg
adc
dec
decl
push
aad
sahf
dec
sub
int3
test
dec
rcr
dec
jl
call
ljmp
fistl
sbb
shrl
and
mov
inc
loope
lea
mov
fwait
cli
push
xor
xlat
adc
fiaddl
mov
xchg
leave
jae
mov
and
cli
mov
sbb
cltd
sub
rcll
xchg
lea
in
xchg
mov
or
icebp
push
fdivrs
sbb
lds
lds
std
adc
jne
fcmovnu
mov
adc
loope
mov
jmp
clc
jecxz
mov
or
es
sarb
fsts
in
cmp
in
test
mov
iret
neg
push
stc
int3
or
adc
mov
xor
sbb
sub
push
and
and
adcb
push
adc
stos
call
push
movsl
sbb
pop
inc
push
test
mov
sub
xorl
rcll
and
mov
icebp
inc
imull
mov
ss
out
repnz
andl
mov
cltd
xor
fbstp
xor
and
jecxz
nop
rorl
lea
dec
cmc
mov
xlat
jl
mov
pop
pop
pop
mov
xor
cmp
lods
xorl
adc
test
lret
std
xchg
mov
jns
lret
mov
incb
subb
fdivrl
pop
mov
cmpsl
pop
mov
dec
add
sbb
data16
add
testl
adc
out
xchg
or
sub
xor
dec
add
imul
rcrl
push
sbbb
or
xchg
dec
and
addl
dec
sbb
shr
inc
xor
sub
mov
daa
les
lcall
pop
mov
xchg
dec
push
push
cli
xchg
test
cwtl
jne
int
sarl
pop
mov
sbb
fmuls
pop
add
scas
sti
lahf
dec
cmp
jo
rclb
mov
xchg
inc
rorb
sub
bound
cmp
sub
fnstenv
rol
adc
mov
push
adcl
jb
inc
add
mov
add
test
cmpsl
mov
fiaddl
adc
cmc
mov
in
sub
lahf
xor
xor
inc
jg
sub
sbbl
mov
bound
loop
sub
std
mov
out
mov
sbb
jl
fbld
sahf
roll
dec
mov
and
cmp
dec
add
jns
mov
aad
out
dec
mov
insl
mov
xorl
test
out
sbb
push
cmc
pop
adc
mov
and
sub
lcall
add
jle
adc
mov
jmp
mov
mov
psubusb
mov
push
mov
pop
or
and
aam
mov
pop
mov
sub
push
mov
aaa
sbb
sub
inc
adc
pop
and
mov
or
mov
xchg
jnp
cld
es
pop
sbb
test
mov
pop
or
imul
sbb
pop
pop
loope
dec
jp
mov
cmp
add
jno
rcll
inc
pop
clc
and
pop
sbb
out
xchg
es
sbb
sbb
and
rcrb
leave
push
adc
dec
add
mov
add
pop
inc
imull
sub
jo
fldt
add
xchg
inc
lea
stos
cld
or
bound
mov
jmp
push
sbb
std
add
loopne
inc
mov
ljmp
loop
xor
aaa
sbb
inc
xor
cmp
pop
and
pop
out
leave
icebp
cmp
test
sahf
sti
mov
aam
scas
jnp
xor
sti
dec
in
stos
pop
popa
push
bound
mov
das
mov
mov
dec
bound
daa
and
clc
insb
jle
leave
jmp
xor
jno
mov
xor
pop
push
dec
jns
fucomp
cli
fcoms
rorb
inc
sub
sarl
sub
mov
jne
cmp
add
push
gs
mov
jg
xchg
xchg
ret
jle
xchg
das
rcll
loope
cmp
jle
fdiv
call
pop
inc
je
out
bound
pop
jle
mov
mov
popf
ss
fcomps
test
push
mov
sub
into
scas
xor
cmp
dec
pop
and
and
mov
xchg
jp
sbb
mov
sysexit
fisubs
xor
lods
add
lret
inc
stos
dec
jne
arpl
cmpsl
jo
mov
push
inc
cs
aam
add
scas
into
out
jbe
dec
jge
sbb
ss
xor
sbb
jbe
lods
inc
mov
jns
mov
daa
xor
dec
xchg
subb
fdivl
fisubs
aas
mov
call
sbb
in
cld
inc
jno
scas
fwait
sbb
sub
jb
stos
dec
pop
mov
dec
inc
push
mov
xlat
or
gs
outsl
or
ret
ret
fwait
out
and
sbb
mov
daa
inc
lock
out
add
jns
ljmp
lret
jbe
clc
jl
int
xlat
jns
sti
inc
addb
jns
adc
cmp
sarb
push
divb
sbb
lds
rolb
loope
push
lods
dec
and
aas
cmp
dec
push
jns
pop
fstps
test
popf
cltd
rcrb
dec
in
repz
aad
xchg
rcl
mov
jecxz
movsl
jae
out
jp
bound
addr16
mov
or
jg
xor
fimull
push
les
out
out
lahf
and
lret
jle
push
sarl
mov
push
and
xchg
push
jno
cmp
std
mov
test
push
lret
fs
mov
xchg
dec
imul
test
dec
dec
scas
je
pop
pop
aad
dec
xor
jo
xchg
repnz
int3
cmp
mov
cmpsl
inc
sub
test
or
in
out
movsb
jae
pop
outsl
mov
mov
xchg
cltd
jecxz
and
xchg
lahf
xlat
dec
roll
mov
decl
add
or
jb
or
addr16
clc
fisubrl
fs
sbb
test
outsl
add
jle
sahf
mov
xor
mov
push
pop
or
xor
data16
mov
push
cld
in
xchg
cmp
imulb
in
inc
pop
mov
sub
mov
jbe,pn
popf
pop
pop
popa
or
push
inc
in
xor
mov
daa
mov
repnz
xor
hlt
ret
lock
mov
jmp
mov
lds
shrl
dec
sub
aam
roll
xchg
sbb
sub
add
dec
pop
sahf
mov
and
movsb
cmp
push
lea
sbb
mov
fcmovnu
jle
pop
mov
cs
jp
xchg
icebp
xchg
fsubrs
sub
xor
ja
mov
test
cmp
data16
inc
out
cmp
flds
lret
aas
push
nop
add
ja
addr16
ds
pushf
add
jmp
fsubl
pop
jle
xchg
test
in
repnz
jne
xchg
xchg
gs
and
mov
cmp
sub
fsubrp
adc
xchg
incb
xlat
stos
test
and
pop
lods
movb
xchg
int3
dec
gs
and
insl
push
sub
cmc
imul
xor
or
push
orl
mov
fsubl
nop
adc
xchg
stc
test
push
inc
sbb
les
mov
dec
jne
aas
cmp
ss
notb
ror
sub
stos
xchg
shlw
jl
js
inc
pop
or
jb
adc
in
negb
jl
or
cmp
pop
xor
jmp
fisubs
aam
in
cli
ss
scas
sbb
cli
mov
int3
sbb
or
insl
in
jl
cmp
shlb
mov
cmp
mov
enter
mov
push
stos
push
sarb
or
jl
add
mov
jmp
jo
cmpsl
ja
cmp
aad
hlt
in
jb
shlb
call
xchg
cmp
movsl
pop
jl
push
shlb
scas
bnd
nop
loop
add
sbb
jno
cmpsb
sbb
and
xchg
add
sub
xchg
inc
fldcw
cmp
mov
jg
push
lcall
cs
call
cld
ss
add
das
insl
xchg
push
adc
mov
js
sub
insb
nop
cmpsl
dec
inc
sbb
scas
xchg
scas
rorb
repz
push
mov
adc
xor
js
jne
and
mov
xor
lcall
lahf
or
jmp
and
mov
lods
dec
mov
lds
enter
inc
or
lds
in
xchg
mov
lret
mov
shll
icebp
jbe
ret
stc
mov
lret
je
out
dec
jmp
test
push
std
xchg
jo
inc
adc
icebp
mov
mov
lods
lds
inc
inc
dec
sub
dec
dec
cmp
daa
insl
test
jle
add
ss
jbe
sbb
xorb
cmp
mov
leave
scas
std
cmp
push
dec
mov
ror
mov
shll
or
mov
dec
cltd
out
hlt
mov
daa
fsub
xchg
jbe
push
subb
inc
mov
pop
daa
pop
fistpl
loop
cmp
sbb
and
sbb
loop
lret
mov
std
push
jmp
sahf
xor
cs
add
in
jle
adc
xlat
mov
fimull
test
push
xchg
mov
popa
lods
dec
pop
loopne
xor
dec
sub
jno
or
xchg
xlat
sub
arpl
stos
jns
fstpt
imul
dec
mov
pop
or
and
mov
jae
hlt
inc
mov
leave
daa
scas
or
dec
mov
jle
sti
add
out
cmp
lret
out
lods
fiadds
js
xchg
sti
fldenv
faddl
dec
lock
fsubs
mov
and
jecxz
mov
mov
mov
stos
mov
or
arpl
out
jne
fcoms
in
iret
js
aam
inc
incb
sbb
jo
imul
adc
stc
lods
outsl
loopne
xchg
xchg
je
mov
adc
jl
pushf
pop
push
clc
clc
nop
xor
mov
in
arpl
inc
xchg
clc
jbe
cmc
sub
sub
push
jge
dec
pop
cs
push
xor
mov
shr
add
pop
test
push
test
mov
sbb
repz
or
pop
decl
pop
dec
aam
dec
sti
jbe
or
mov
mov
push
sub
sub
mov
adc
je
pause
test
stos
outsb
push
fistpll
xchg
scas
pushf
out
loope
fcos
scas
jno
ret
push
xor
jno
inc
stos
xor
inc
push
xorb
push
mov
mov
arpl
mov
icebp
xchg
test
and
cs
sub
push
add
in
mov
lds
or
into
push
jb
iret
push
mov
inc
bound
mov
adc
pop
pop
clc
out
sahf
xor
sbb
loopne
add
cmpsb
inc
dec
sar
pop
in
cmp
xchg
mov
add
mov
in
adc
sbbb
adc
adc
in
inc
stos
or
add
xor
imul
or
push
gs
fcmovnb
shr
xchg
mov
stos
pusha
mov
mov
jno
int3
stos
pushl
popf
and
dec
xchg
mov
out
jp
inc
fs
jbe
sarl
jae
in
ret
ret
xchg
fbld
fiaddl
push
xchg
mov
push
scas
fidivl
inc
das
or
mov
pusha
fcomi
cmp
stos
add
clc
out
stc
push
xchg
das
pop
in
dec
loopne
out
hlt
mov
jbe
cmc
jl
lock
xchg
jle
xchg
mov
jmp
lret
popf
inc
aam
stos
jmp
jne
loop
inc
test
sub
nop
xor
jbe
push
lock
xchg
es
dec
iret
inc
daa
aas
jb
fnstenv
in
ret
movsb
lds
es
lea
and
ret
sbb
push
cmovge
mov
jg
ja
sub
clc
aam
cmp
mov
xchg
aad
iret
add
loope
sbb
lahf
xchg
ret
mov
push
dec
add
sahf
data16
pop
loopne
sub
cli
jne
jecxz
aaa
aaa
mov
pop
sub
and
dec
pop
pop
cli
imul
inc
fldl
and
es
push
and
adc
popa
fcoms
push
mov
jnp
jmp
das
lret
xchg
bound
add
mov
pop
popa
fistl
push
mov
add
push
mov
dec
push
clc
inc
push
fstpt
sub
cmp
cli
jmp
mov
jno
into
stc
jmp
lret
test
xor
pop
sbb
xchg
pop
mov
push
test
jne
int3
lahf
popw
push
enter
cli
loope
andb
fs
sbb
ja
pop
clc
icebp
sbb
cs
sub
daa
push
and
sub
repnz
fistps
jmp
fwait
inc
lahf
jo,pn
xor
mov
add
or
adc
pop
mov
cmp
pop
pop
pop
mov
jp
inc
cmpl
out
imul
mov
scas
sbb
add
fcoml
fidivl
aad
lds
cmp
and
mov
pop
xchg
adc
mov
imul
dec
rolb
out
xchg
mov
add
movsb
push
shrb
inc
adc
dec
lock
testl
in
pop
idiv
enter
ss
cmp
xchg
out
movsl
rclb
addr16
test
enter
ret
pop
jb
mov
xor
xor
cwtl
cli
aad
inc
adc
xor
cltd
div
inc
aas
push
repnz
out
imul
imul
xchg
ds
icebp
jp
test
mov
popa
jno
int3
je
repnz
out
xorb
adc
das
hlt
jp
cmpsb
push
mov
das
inc
mov
adc
xchg
mov
ret
in
xor
adc
sub
inc
adc
or
loopne
jg
hlt
divb
test
scas
push
mov
jae
es
int3
call
mov
cmc
push
es
dec
pop
push
sbb
add
fsubrl
mov
cwtl
mov
les
mov
aas
je
and
add
pop
mov
mov
jb
sahf
cmp
sar
mov
idiv
stc
aaa
push
out
movsl
subl
pop
popf
add
fisubrl
mov
xchg
mov
push
inc
call
sti
dec
icebp
sbb
jge
iret
and
rcrb
cmp
test
add
mov
jp
ds
xlat
fimull
insl
inc
loopne
test
ljmp
jmp
jae
pop
add
fisttpl
ret
fcomi
insb
mov
cwtl
xor
inc
dec
dec
popa
addl
sub
cmp
lods
es
jl
repnz
mov
rolb
fcoms
push
xor
arpl
int
pop
xor
sub
sub
roll
cmovno
in
xchg
xchg
adc
lahf
mov
sub
jge
pop
test
ret
addb
xlat
push
pop
cs
call
ret
mov
mov
lret
add
push
in
jo
xchg
mov
cmpsb
cs
icebp
aad
repnz
xor
adc
test
xorb
mov
shll
sarl
pop
inc
shr
mov
in
push
lea
dec
add
cli
ret
add
rcrb
inc
dec
sub
xchg
mov
jmp
mov
xor
sar
andb
lods
jl
in
xchg
push
das
pop
mov
repnz
stos
jmp
sbb
inc
repz
xchg
adc
imul
mov
jo
div
loope
ds
sbb
cmp
mov
repz
repz
push
lret
push
or
fstpt
inc
cmp
in
sub
sbb
adc
shll
scas
into
mov
stc
jmp
add
jnp
sbb
filds
pop
mov
cmp
imul
push
fst
test
xorb
pop
jl
fstps
out
daa
test
sarl
push
jnp
mov
sbb
lea
les
fnstenv
pop
rorl
lock
enter
ljmp
notl
sti
cmc
mov
rclb
mov
in
loop
gs
jge
in
inc
xchg
imul
push
imul
rep
call
lret
es
push
inc
cmp
xchg
xchg
jle
add
dec
je
jmp
lock
and
incl
mov
ds
stos
cltd
mov
xlat
sub
cmpsl
fidivrs
push
mov
lea
push
into
repnz
mov
dec
sub
push
jb
sub
in
mov
cmp
loopne
cmc
push
int3
mov
sub
out
stos
inc
pop
out
outsb
dec
mov
jecxz
xchg
or
adc
stc
sub
mov
xchg
faddp
in
into
xor
orb
xor
push
push
sub
push
stos
xlat
or
sarl
add
out
dec
xor
adc
dec
sub
jae
and
xchg
cld
jnp
mov
mov
sbb
fistpll
arpl
push
dec
add
flds
scas
aam
mov
ret
sbb
icebp
and
and
out
cmp
jo
mov
push
xor
mov
lds
inc
repnz
inc
sub
xchg
xchg
jnp
cmp
cmp
inc
movb
cmp
jae
jb
or
dec
arpl
mov
ja
xchg
and
mov
jmp
pushf
add
sbb
outsl
adc
cltd
inc
fcmovnu
push
pop
dec
pop
hlt
inc
pop
add
fcoml
out
sbb
testb
out
jle
insl
fildll
jle
faddp
cld
lods
stos
fistpll
xorl
int3
xchg
cmp
lret
cmp
push
pushf
in
jns
mov
shll
pop
jb
or
pop
or
dec
and
cld
insb
shll
pop
or
loope
lret
out
inc
xchg
mov
fcoms
lret
dec
mov
dec
movsb
aad
cs
inc
lahf
pop
je
int3
inc
imul
shr
cmp
shr
loopne
add
pop
in
xchg
sub
xchg
cmc
dec
je
idivl
daa
mov
adc
ror
std
mov
es
mov
mov
fdivrp
sub
js
pop
mov
add
in
imul
mov
xchg
cld
sub
mov
push
repz
or
shlb
in
out
push
xor
xchg
cmp
xchg
cld
mov
pop
adc
mov
sbb
test
mov
or
insb
enter
pop
xor
mov
js
add
push
add
in
sbb
adc
xor
int
cltd
sahf
icebp
or
cltd
ret
mov
cwtl
aaa
dec
jg
cmp
lods
jmp
mov
xor
nop
lret
or
aas
scas
mov
imul
repz
andb
jnp
pop
lret
dec
cmpsb
xchg
push
pusha
stos
in
pop
lods
ficomps
stos
cmpsb
jle
cmp
add
sahf
jp
mov
fcom
cmc
pusha
jnp
dec
das
lret
inc
sahf
add
cmp
mov
pusha
aad
dec
hlt
divl
push
xchg
push
popa
xor
mov
jmp
out
xorb
inc
adc
sub
inc
mov
cmp
rcrb
in
xchg
fimuls
push
pusha
lcall
mov
jno
pusha
mov
imul
or
cli
aam
leave
lret
das
das
adc
cmp
add
int
cmp
sub
dec
fwait
inc
mov
jl
or
int
test
xchg
sub
aaa
jo
setp
dec
in
bound
out
aaa
mov
stos
xor
mov
mov
inc
cmpsl
shr
aam
xchg
xor
mov
pop
test
cli
mov
lds
mov
xchg
pop
stos
scas
test
std
cmp
jae
push
std
jns
xor
mov
cmp
cmp
dec
jae
test
push
das
inc
mov
add
dec
jne
and
test
xlat
pop
jb
test
mov
pusha
pop
rorb
into
cmpsl
jl
mov
std
cs
cmp
jge
mov
enter
aad
stos
loope
mov
mov
pop
or
scas
pop
jo
aad
repnz
cmpsb
push
dec
stc
mov
sbb
jecxz
pop
out
fnstsw
test
stos
cmc
mov
stos
hlt
cmp
xchg
fwait
lret
sbb
push
imul
ja
arpl
pop
mov
inc
push
mov
lcall
cwtl
mov
cli
pop
fnstsw
testb
xchg
jns
out
jae
ljmp
push
loop
insl
mov
enter
xchg
adc
mov
sbb
or
xor
in
ss
pop
lds
dec
mov
scas
adc
push
movsb
or
pop
and
xchg
ljmp
ret
sub
inc
xlat
in
in
mov
push
cwtl
dec
push
xor
enter
in
xor
iret
mov
das
push
shlb
rcrl
les
jno
je
pushf
jb
aaa
jno
inc
popa
push
xor
ja
mov
mov
add
or
inc
mov
fcomps
push
dec
adc
push
fdivs
jl
sub
xchg
sub
fildl
jo
das
outsl
sahf
leave
mov
lea
push
repnz
cwtl
repnz
insl
add
sbb
sti
push
push
and
mov
out
sti
jecxz
push
mov
outsl
push
mov
adc
inc
dec
orl
mov
cld
stc
int3
push
cli
cmp
arpl
xchg
ja
cmp
mov
scas
jb
lock
mov
pop
clc
xchg
mov
mov
pushf
punpcklbw
cmp
outsb
lock
lods
fcompl
inc
cmp
pop
ds
arpl
outsb
fistpll
and
es
xor
mov
stos
jbe
repnz
in
or
xchg
push
fimuls
sbb
inc
jbe
push
bound
aam
icebp
inc
inc
fcomps
cmp
inc
lahf
lea
dec
jbe
adc
sub
shlb
fisttpl
jne
je
mov
cltd
test
stc
inc
aas
dec
sarl
jge
add
push
pop
mov
jp
jmp
imul
lcall
jg
popf
inc
cmpsl
dec
pusha
outsb
fnsave
ror
xlat
xchg
mov
nop
sbb
imul
jmp
int3
push
movsl
ss
mov
jl
push
imul
xchg
mov
inc
cs
fwait
sbbb
roll
ljmp
aas
mov
xchg
mov
sbb
sahf
orl
jbe
mov
mov
out
or
lods
divb
lock
stc
loop
cs
aaa
jecxz
push
xchg
jl
mov
mov
adc
lret
sub
add
lods
ret
fmuls
rol
out
jae
mov
js
jge
mov
mov
rorl
sarl
jmp
inc
mov
lds
and
mov
add
xor
or
popa
cmp
popa
cmpsb
test
insb
cmpsl
mov
dec
sub
insb
jecxz
inc
leave
lret
or
dec
jg
xchg
cmc
sbb
outsl
mov
sub
movsl
push
lock
scas
pop
cmp
mov
xchg
sub
std
fldenv
jl
mov
std
inc
xchg
cli
ja
dec
jae
cmp
and
iret
or
nop
lock
mov
pop
adc
and
mov
push
mov
pop
cmp
imul
sarl
or
sbb
arpl
aas
xor
sub
jne,pt
mov
out
xor
xchg
mov
mov
mov
stc
cmp
mov
lcall
pop
sti
mov
jae
int
jp
xchg
jg
cmpb
mov
or
mov
lods
and
cmp
xchg
enter
inc
aad
mov
insl
pop
dec
loope
cs
xchg
sbb
xor
mov
sub
in
adcb
test
ds
jg
movsb
xchg
mov
inc
jl
push
data16
das
mov
fsubrl
adc
ss
add
jge
mov
stos
push
xchg
cmp
mov
mov
cwtl
or
cmc
cs
inc
fcompl
les
cs
out
cmp
inc
mov
and
jbe
negl
mov
adc
mov
fs
mov
jno
or
adcl
inc
mov
enter
lret
inc
push
jno
adc
repz
popa
mov
push
outsl
mov
rorl
mov
push
cli
mov
repz
les
dec
dec
daa
pand
mov
mov
daa
sub
xor
addr16
xorb
mov
or
lret
lcall
add
es
cmp
mov
mov
fistl
mov
es
jae
xor
ret
loopne
mov
lret
in
mov
add
pop
and
xrelease
cmpsl
sbb
cmpsb
repz
inc
xlat
rcl
aas
outsb
stos
adc
sbbb
decb
mov
orb
sbb
outsl
or
jmp
shl
xchg
mov
rcll
outsl
adc
in
loop
xor
adc
and
cld
xchg
rcrb
inc
pop
sub
xchg
jne
stos
and
jae
int3
cmpsb
movsb
fadds
jecxz
push
push
ret
push
push
pushf
xchg
pop
mov
mov
or
mov
mov
lods
mov
idiv
dec
pushf
fdiv
jge
adc
xchg
sub
or
jmp
xor
loop
push
adcb
dec
mov
adc
jmp
pop
mov
sbb
or
rcr
add
mov
leave
jb
movsb
out
jne
movsl
cmc
stos
cmp
xchg
loopne
or
xchg
loop
cmpsl
sub
inc
fldcw
cmp
fidivrs
ljmp
jne
cld
popa
sar
pushf
fmul
pop
cmp
xchg
xor
xchg
xlat
out
arpl
adc
lcall
cmp
ds
mov
in
push
and
push
mov
jg
loopne
int3
pop
jo
push
adcb
std
mov
mov
repnz
push
repnz
and
je
push
xor
sub
in
xchg
or
repz
stos
xchg
ucomiss
aad
sti
lret
jle
adc
sahf
gs
jmp
adc
sub
mov
or
xor
mov
inc
es
adc
les
sahf
inc
aas
lods
jg
jae
push
scas
pop
adc
push
aas
add
popa
xchg
dec
movsl
jnp
dec
mov
out
adc
jp
out
adc
xchg
pusha
into
xor
icebp
sub
cmpsb
or
push
ficoml
pop
aaa
rcrb
inc
dec
push
sbb
pop
cmpsb
call
fsts
jbe
mov
in
addr16
push
icebp
mov
pop
xchg
jno
ljmp
and
pop
repz
xchg
jmp
mov
inc
xchg
xchg
ficompl
imul
xchg
imull
ret
fcompl
adc
or
ljmp
sarl
xchg
pop
pop
xor
dec
jno
fisubrl
cmp
fists
data16
dec
in
push
add
lods
dec
out
es
push
jp
jb
mov
outsb
push
icebp
lea
sbb
out
pop
loop
scas
jne
or
das
jbe
pop
push
in
jp
inc
aam
lcall
xlat
push
pop
aas
mov
sub
pushf
mov
cmp
cld
xchg
shr
mov
popa
repz
push
push
mov
pop
aas
jmp
testl
js
aaa
and
ss
in
jge
push
jecxz
clc
popa
popf
jmp
ds
xchg
fsubs
mov
sub
lds
sahf
xchg
ror
adcb
push
daa
jo
mov
pushf
jns
add
addl
jmp
arpl
inc
sub
out
push
push
lea
sub
xchg
aas
fcoml
mov
cmp
cwtl
fildl
sbb
xchg
and
sarl
inc
dec
push
imul
mov
push
jge
aam
jle
hlt
lods
hlt
in
movsb
shll
jmp
pop
jecxz
push
push
mov
and
inc
test
mov
pop
sahf
pop
adc
jae
hlt
push
cmp
or
rolb
mov
shlb
pop
push
mov
popa
popf
ja
xchg
es
xor
scas
xchg
push
scas
into
ret
enter
sbb
or
and
out
scas
pop
adcl
out
imull
mov
repz
hlt
mov
cmp
es
mov
sub
push
insl
test
and
dec
jns
push
cmp
jb
and
mov
inc
movl
pop
imul
mov
scas
dec
xor
fcoms
pop
mov
fcomps
fistpll
ljmp
out
sub
int
rorb
inc
les
or
and
inc
pop
inc
dec
jne
lcall
inc
stos
mov
jg
fidivl
fcomps
lcall
mov
mulb
jne
jl
push
out
mov
xor
test
lock
popa
cmp
sub
movsb
cwtl
add
jne
xchg
xchg
and
mov
cmpsb
jnp
cmp
ljmp
inc
outsb
sub
lret
je
mov
fbld
add
mov
mov
std
cmp
mov
fmuls
in
push
mov
shl
je
jns
rol
xor
adc
cmp
popa
jmp
sub
cmp
pop
js
movsl
xor
insb
mov
adc
xchg
pop
jno
lds
pop
in
dec
xor
into
adc
mov
shr
sbb
jg
inc
xchg
adc
push
in
ret
jnp
ljmp
into
dec
repnz
jecxz
push
adc
pop
fwait
push
orl
inc
dec
ret
mov
cmp
lret
sbb
int3
pop
adc
fisttpl
jb
mov
lock
mov
shl
out
stos
std
push
daa
pop
shll
cld
cmc
push
mov
popf
loop
int
imul
jmp
push
jg
ds
outsb
test
es
push
pop
sub
sarl
imul
dec
xchg
xchg
lods
int
fbld
push
push
cwtl
and
mov
mov
popa
inc
sub
xor
push
push
xchg
leave
and
mov
dec
pop
sahf
xchg
popa
jge
punpckhbw
pop
stc
pop
push
jo
fistps
lods
lds
inc
xchg
or
push
sbb
jl
adc
push
in
pop
pusha
enter
in
pop
ret
jmp
mov
cmc
ret
jno
test
lahf
cmp
pop
mov
fisttpll
movsb
cmp
aas
push
add
fcomip
lret
jle
sbb
cmpsb
add
out
mov
les
and
loope
mov
subl
pop
and
sahf
shrb
lds
pop
stc
mov
sub
cld
movsl
out
xor
and
fiadds
sbb
sbb
adc
mov
imul
add
call
aad
mov
jo
cmc
cmp
jno
pop
stc
jnp
xchg
pop
jb
cwtl
call
add
xchg
jne
mov
scas
cmpsl
inc
push
or
mov
lret
test
push
push
repnz
jmp
addr16
pop
xor
lcall
pop
inc
outsb
int3
jbe
xor
cmp
jl
rolb
in
jnp
in
pop
mov
inc
adc
stos
jp
adc
xor
pop
xchg
lea
xor
mov
mov
fistl
dec
scas
nop
mov
xor
pop
mov
add
call
add
mov
shll
ret
mov
pop
inc
jbe
lods
cmp
loope
in
aaa
aaa
into
mov
hlt
add
xchg
inc
mov
inc
sbb
jnp
inc
jno
push
cmp
and
aas
test
inc
cwtl
les
fidivs
mov
mov
mov
rcrb
adc
lcall
jp
ja
pop
ja
xor
xchg
ss
and
pop
jb
jbe
or
sbb
inc
adc
sbb
jno
je
clc
jle
insb
fmuls
clc
test
push
addr16
add
loopne
inc
push
add
push
sub
mov
push
clc
fisttpl
sti
cmp
dec
and
nop
jns
jmp
lret
mov
shlb
test
ret
cmp
loop
add
or
add
and
sbb
in
xorl
arpl
xor
out
cmp
into
pop
push
mov
stc
shlb
mov
call
pop
dec
xor
lock
cld
lods
push
flds
stos
lahf
xchg
lahf
mov
lds
ret
dec
jge
jbe
jbe
lret
das
jp
es
jo
xor
jns
jmp
stos
ret
repz
adc
scas
loopne
add
mov
jl
ljmp
out
jge
mov
outsl
movsb
mov
add
push
aaa
mov
inc
clc
insb
dec
and
ss
das
stos
add
pusha
dec
dec
icebp
fbstp
sahf
dec
popf
gs
add
shl
mov
sbb
jb
icebp
fdiv
pop
push
mov
adc
loopne
dec
dec
xor
cmp
test
sbb
mov
int
mov
push
mov
ss
xchg
pushf
cmp
nop
push
daa
and
and
repnz
cwtl
dec
fsubrs
dec
js
mov
inc
mov
sub
sbb
xchg
dec
xchg
call
stc
sub
out
stc
mov
pop
inc
pop
sti
aas
out
xor
idivb
lahf
repz
xlat
shrl
sub
movsb
adc
test
imul
adc
xchg
fldl
fstl
and
inc
xchg
mov
push
es
jns
jnp
jb
icebp
out
hlt
mov
scas
out
lods
rcrb
test
sbb
adc
iret
das
and
dec
test
aas
push
popa
hlt
sarb
mov
push
adc
cmp
push
xchg
pushl
adc
insl
les
pop
xchg
pop
inc
cmp
pop
xchg
ds
scas
xchg
int3
jg
lret
data16
sub
ds
mov
mov
cmp
xchg
mov
dec
xor
std
js
adc
mov
js
inc
pop
dec
mov
sbb
andl
pop
mov
fldl
adc
into
fisttpll
mov
dec
inc
add
add
sub
rcrl
lcall
push
dec
push
lret
jb
inc
add
add
push
pop
mov
fimull
push
adc
pop
sbb
int3
push
mov
xor
fiadds
push
inc
nop
dec
push
mov
sbb
mov
cmp
mov
orl
test
outsb
popa
xor
dec
lcall
stos
cs
ja
pop
jbe
mov
rorb
sahf
in
add
jecxz
jl
add
pop
aaa
mov
push
test
inc
nop
dec
clc
data16
cld
mov
or
mov
adc
enter
inc
jle
ljmp
adcl
rcl
mov
decb
ror
out
xchg
mov
pop
add
loope
cmp
call
mov
inc
add
sub
mov
sbb
div
std
sub
sub
aaa
push
lcall
popf
inc
cmpsl
xchg
mov
inc
rorl
and
lcall
or
and
dec
add
add
and
outsb
xor
pushf
scas
mov
jle
mov
cwtl
jge
add
xor
pusha
xor
ljmp
mov
push
ficoml
fnstcw
out
cmp
xor
gs
mov
gs
push
mov
xchg
lahf
pop
insb
pop
pop
cmp
dec
cmc
popa
pop
lahf
arpl
call
inc
subl
push
push
dec
sub
out
das
push
jbe
pop
fldl
mov
add
ror
mov
or
sbb
adc
pop
movl
je
flds
fisubl
in
aas
test
scas
push
cld
fwait
inc
add
dec
loopne
test
mov
push
iret
mov
lret
in
jecxz
push
stc
out
int
mov
aaa
or
xor
iret
int3
aaa
in
adc
or
mov
dec
mov
rorb
pop
clc
cmovne
lea
sbb
nop
in
stos
sbb
dec
js
mov
ja
inc
mov
sub
stos
sub
adc
and
jae
shll
jo
ljmp
sub
mov
mov
add
outsl
mov
and
cmpsb
arpl
cwtl
out
dec
and
lods
mov
add
pop
ss
or
sub
lret
out
mov
mov
sahf
or
inc
mov
jo
orb
cmp
test
fs
adc
mov
fs
subl
pop
test
aad
and
jmp
enter
imul
out
js
andb
pushl
dec
rolb
xor
sbb
and
das
xchg
push
xlat
popa
mov
cmp
popf
cltd
popa
cmpsl
addr16
xor
lods
popa
mov
nop
xchg
sbb
mov
dec
push
dec
dec
out
in
and
sbb
cld
adc
mov
xchg
sbb
pop
mov
cmpsl
mov
bound
sbb
mov
mov
and
dec
bound
out
xchg
and
or
loopne
scas
dec
push
or
dec
jmp
ret
and
inc
dec
xor
gs
dec
rorl
mov
rorl
xchg
pop
ljmp
gs
out
outsb
jne
or
rcrl
mov
mov
cld
cs
mov
nop
push
pusha
or
xchg
push
cmp
mov
and
dec
push
cmp
mov
cli
push
push
xor
aaa
jmp
pop
test
nop
adc
sub
xor
sarl
or
int3
push
jb
insb
xchg
hlt
dec
push
mov
fs
out
fs
addb
add
mov
xchg
cs
mov
dec
aas
dec
dec
cmpsb
data16
adc
negb
loope
mov
stos
mov
and
repnz
add
pop
je
pusha
in
mov
sti
in
fisubl
call
pop
push
pop
push
addr16
dec
sub
les
mov
and
paddd
in
std
and
addl
add
jp
jne
je
pop
add
pop
add
mov
adc
repz
mov
in
ja
fcoml
stos
xor
and
scas
fsubp
scas
ret
jo
daa
pop
sti
sar
cmc
ret
push
mov
movsb
es
cmp
mov
aaa
push
aad
repz
sub
scas
push
scas
lds
dec
pop
data16
push
fmul
in
imul
xchg
cwtl
mov
nop
push
shl
ret
add
movsl
movsb
lods
pop
pop
imul
and
mov
or
sbb
loope
xor
loope
xchg
insb
jmp
xchg
or
lret
mov
outsl
xchg
cmp
pop
sub
in
fwait
insl
mov
cs
add
push
jmp
sub
jne
bound
mov
xorb
mov
push
xor
add
idivb
sbb
fists
fsubrs
clc
mov
leave
out
jbe
negl
cld
or
js
insl
adc
icebp
rcl
push
cld
dec
pop
xchg
loope
and
sub
pop
ret
pop
mov
push
imul
adc
mov
mov
jo
push
fs
into
cmpsb
cmp
ja
mov
ret
sbb
xorb
scas
cmp
adc
movsl
mov
jecxz
mov
daa
cmp
mov
mov
mov
lods
push
mov
dec
out
pop
sub
jle
cmp
or
sub
movsb
adc
cmp
add
xor
xor
or
cltd
stc
or
fildl
int
shlb
cwtl
inc
lahf
jnp
icebp
lds
shlb
rolb
sbb
insl
adc
pop
idivb
aam
adc
rcll
clc
fnstcw
cli
clc
repnz
dec
mov
mov
xchg
aaa
pop
fstpl
dec
leave
cmp
pop
movsb
ret
call
fs
jl
jae
dec
xchg
mov
scas
jp
in
xor
lahf
mov
and
popf
push
pop
insb
mov
gs
xchg
mov
rcr
cmp
js
imul
rorl
push
fs
ss
ds
daa
xchg
pop
pop
out
jbe
test
jns
outsb
clc
mov
jae
and
add
and
push
lahf
cmp
jae
loop
fwait
mov
lods
stos
sub
fisubl
pop
in
fsubrl
pop
mov
fwait
sub
sub
stos
dec
and
orl
push
jns
out
adc
cmpsb
hlt
adc
iret
lahf
add
or
fisttpll
pop
push
rorl
cltd
mov
mov
popa
sbb
add
cltd
in
loopne
dec
lds
mov
rcl
sbb
cmp
fimull
inc
aam
std
insl
pusha
and
inc
movntps
jg
lock
adc
aaa
lea
adc
push
pusha
mov
aad
or
jmp
push
ss
decl
xchg
pusha
jno
jecxz
in
int3
cmp
inc
mov
jmp
mov
mov
push
bswap
out
xor
es
xor
stos
xchg
mov
frstor
push
mov
out
add
cmp
dec
cltd
xchg
adc
cmpsb
sbb
test
pusha
cltd
insl
ds
jbe
mov
faddp
pushf
xchg
fnstenv
mov
ret
sbbb
push
inc
inc
pop
and
jb
icebp
shlb
add
push
cmc
mov
add
shll
aaa
push
xor
xchg
inc
loope
in
xor
jb
and
sub
jo
mov
ficoms
jge
cltd
xchg
movsl
scas
fiaddl
mov
jmp
sub
enter
sahf
cmp
and
and
sub
add
sbb
xchg
mov
mov
adc
rcrb
inc
test
jmp
cmpsb
mov
popa
add
cmp
fidivs
movsl
add
je
jae
xchg
out
mov
out
pop
dec
push
pop
dec
movsb
call
mov
je
cmp
in
mov
sub
movsb
in
movsb
test
add
cmp
imul
cmc
lods
arpl
popf
repz
imulb
inc
movb
ret
repnz
mov
cmpsl
xchg
ret
jb
or
push
jne
js
cli
cwtl
cmpsb
jmp
int
xchg
imul
sub
ss
push
push
scas
pop
cltd
dec
mov
sbb
pop
xchg
lds
pop
sub
icebp
mov
xor
mov
mov
jno
sub
stc
test
xor
cmp
popl
jns
fnstcw
popf
xor
sbb
fwait
mov
lcall
push
jnp
cmpsb
dec
pop
out
stos
sarl
mov
pushf
call
out
lea
scas
cli
js
or
add
mov
cli
xchg
inc
loopne
dec
xor
pop
jecxz
dec
xor
out
inc
mov
pushf
lds
arpl
cmp
mov
push
pop
je
xor
jecxz
pop
jl
ja
jnp
cwtl
push
sbb
test
outsb
jb
jnp
xchg
dec
dec
lret
cwtl
incl
pop
inc
and
das
cmp
jns
cmc
or
scas
dec
cmp
inc
jl
mov
dec
dec
inc
scas
mov
pusha
adc
cmpsl
xor
dec
nop
dec
ljmp
xchg
xchg
movl
fwait
orl
jl
ffree
push
adc
cmp
xchg
xor
jo
sbb
fcompl
or
or
in
out
in
daa
sahf
cmp
sbb
mov
jl
cmpsb
xor
xor
stos
gs
enter
inc
mov
outsb
sub
pop
jp
out
jl
xor
test
cmp
pushf
pop
int
rcrb
fsub
mov
dec
mov
or
add
mov
outsb
mov
outsb
push
sub
xor
mov
pop
push
adc
data16
icebp
out
dec
xchg
mov
mov
mov
mov
or
inc
jp
and
das
out
das
inc
test
add
sbb
loope
adc
aam
adc
enter
ds
out
sub
mov
or
stos
ret
mov
mov
mov
out
add
sub
xor
push
fcoms
mov
scas
xchg
dec
xor
xchg
lret
add
xor
insb
test
cmpl
scas
mov
mov
mov
xor
and
out
andb
js
jle
mov
mov
scas
cmp
mov
scas
mov
shlb
cmpsb
xor
repz
jp
fisubrl
enter
and
mov
movsl
loopne
mov
dec
or
enter
cld
insl
imul
mov
lahf
push
pop
repnz
clc
sub
fsubl
sbb
mov
and
fxch
call
adc
xchg
jb
dec
xchg
lock
fistpll
push
mov
pushf
dec
adc
popl
jae
repnz
arpl
and
cli
or
push
mov
jnp
jno
jae
xchg
jne
xchg
sbb
insl
lock
and
pop
outsb
idivb
ret
jp
jo
repnz
lret
sbb
dec
push
jnp
ss
sahf
jb
scas
sub
mov
insb
sti
mov
mov
adc
cmp
sbb
int
add
and
std
xor
lds
adc
aaa
sbb
sbb
aad
inc
pop
push
lret
test
rolb
mov
pushf
mov
outsb
repz
pop
lea
fwait
clc
fxch
arpl
inc
cmp
or
xchg
test
and
ss
inc
scas
push
xor
dec
mov
outsl
dec
insl
mov
fs
xor
aad
into
push
loopne
sbb
sti
pop
pop
mov
xor
enter
cli
fidivrl
push
jno
adc
and
std
mov
mov
jp
insb
pop
push
outsb
pop
stos
stos
add
ds
mov
add
test
rcl
push
loope
dec
stc
arpl
jmp
cld
scas
dec
mov
jecxz
insb
test
mov
int3
imulb
les
ret
adc
ret
push
mov
fadd
push
adcb
aas
mov
out
sub
jecxz
add
stos
dec
pop
mov
fsubrl
fcompl
addr16
setnp
sub
inc
repz
inc
sub
mov
push
addl
mov
in
push
sub
shll
scas
pop
dec
dec
scas
sbb
cmp
mov
inc
push
mov
stos
dec
cmp
adc
mov
or
add
mov
inc
test
aam
fiadds
inc
mov
push
addr16
insb
cmpsl
xor
pop
sbb
cmpsb
sarb
jge
add
push
dec
js
int
mov
lea
mov
lods
aas
push
or
pop
das
testb
cmp
stc
das
add
push
cmpsl
pusha
lods
cwtl
fistpl
push
ret
ret
fsubrl
mov
mov
rcll
fisttps
xchg
fstps
push
push
adc
add
mov
mov
test
loope
leave
inc
or
cld
xor
add
fsub
inc
xchg
jo
jg
xlat
mov
imul
divl
lret
add
mov
mov
cmpl
in
dec
js
imul
loope
push
stos
mov
sub
xchg
sbb
mov
mov
mov
lds
mov
loop
mov
jl
cmp
imul
sub
inc
sub
fisubrl
fisubl
ss
jecxz
dec
inc
gs
dec
fsubrl
out
insb
cmp
nop
outsb
test
pop
mov
out
jge
cmp
popa
cmp
mov
mov
aam
cmp
add
addr16
das
sbb
notb
outsl
pop
cmc
mov
push
and
cltd
outsb
lret
hlt
cld
dec
dec
adc
jnp
and
lods
lods
loop
lret
sbb
adc
ret
imul
mov
push
jns
loopne
sbb
pop
fwait
stos
mov
and
cmpb
aad
pop
int
nop
mov
fmulp
mov
rcrl
xchg
fmul
jns
fsubl
outsl
fsubl
in
aaa
push
jae
mov
pop
fiadds
sbb
sub
and
cmp
cmp
popa
mov
mov
mov
and
pop
push
loopne
xchg
out
or
daa
les
xchg
test
cmpb
mov
ret
mov
shrb
in
xor
loopne
sahf
ret
bound
in
call
xor
or
movsb
pop
icebp
and
je
pop
fbld
xchg
add
icebp
and
sti
bound
mov
inc
push
xchg
and
insb
inc
inc
adc
add
cld
stos
imul
or
push
enter
push
push
push
jb
sub
xchg
gs
ret
call
xchg
hlt
fwait
loopne
fldcw
or
push
mov
add
or
int
repz
cmp
mov
ja
pop
lret
negl
mov
cs
adc
mov
xorb
outsb
iret
pop
add
push
pop
jecxz
mov
mov
xor
sub
decb
xlat
pusha
and
xor
repz
pop
push
scas
ret
and
push
addr16
sbb
sbb
and
cmp
pop
sub
les
lods
nop
mov
jmp
inc
push
jp
inc
jmp
sti
ret
ss
imul
xor
xchg
aaa
leave
stc
cs
jns
mov
lods
push
xor
push
mov
pushf
mov
popf
push
pop
lret
and
mov
rclb
dec
insl
std
pop
cmp
mov
hlt
xor
mov
rcr
mov
ror
mov
adc
push
inc
dec
jl
sbbb
test
jne
iret
inc
and
xchg
sub
scas
push
addr16
pushf
pop
xor
mov
bound
insb
pop
in
inc
mov
test
sub
fsts
push
int
mov
fsubrs
shr
push
iret
js
testl
hlt
cmp
inc
push
shll
lock
xchg
adc
cmp
stos
lods
fistl
pop
loopne
xchg
push
jno
jbe
out
repnz
mov
cmp
cmp
jp
jg
js
mov
push
jecxz
jle
adc
pushf
xor
push
add
out
js
xchg
int
add
dec
jns
sbb
into
fistps
add
sub
fisttpl
jo
pop
dec
loop
push
add
xchg
outsb
imul
cmp
insb
add
and
mov
cmp
mov
test
test
lods
pop
or
lret
push
mov
mov
xor
add
imul
xor
mov
mov
cmp
mov
pop
cmp
sbb
jae
test
push
int
push
push
std
pusha
sbb
movsl
int3
insl
xchg
sub
cmc
xor
cmc
sbb
stos
inc
mov
mov
sbb
xor
mov
and
xchg
sub
int3
mov
pop
mov
leave
adc
cmc
ss
movsb
cmc
cli
xor
sub
scas
cmpsb
push
pop
loopne
lods
adc
xchg
xor
jno
cmp
inc
aam
sbb
xor
cmp
fdivrl
add
out
js
push
dec
out
hlt
ud0
aaa
ds
lahf
xchg
pop
pop
je
mov
mov
fidivl
sub
or
fwait
mov
push
xor
into
js
sub
mov
xchg
fistl
shr
pop
aaa
arpl
out
sahf
leave
subb
test
jnp
pop
test
out
sarb
ds
aas
xor
adc
xchg
popa
xor
dec
jg
adc
push
cwtl
jecxz
mov
sahf
int3
lcall
dec
into
dec
hlt
sbb
loop
jl
movsl
popa
add
push
lret
sbb
pusha
enter
gs
xchg
mov
es
cmpsl
imul
sahf
test
bound
mov
xor
not
dec
mov
and
lahf
jge
sub
sbb
addb
inc
fnstenv
popa
adc
add
dec
push
or
mov
js
testb
pop
sbb
xchg
daa
mov
arpl
pop
mov
inc
mov
xchg
adc
dec
leave
xchg
shll
sub
or
imul
dec
movsl
scas
jp
iret
scas
outsl
jne
outsl
subl
ds
sbb
pop
pusha
rol
addl
sbb
lock
cmp
or
jb
stos
and
and
aas
fstpt
mov
jp
xor
xchg
ss
sbb
aad
fidivrs
ss
insb
or
add
add
pop
mov
xchg
mov
dec
mov
and
xchg
cmp
or
test
cld
jo
divl
mov
push
call
aad
xchg
ret
inc
enter
icebp
rolb
adc
jmp
fstpt
faddl
outsl
fdivl
mov
adc
mov
lret
insb
mov
mov
ret
cmp
adc
push
mov
cmp
mov
outsl
test
aam
jnp
rcl
mov
sub
aaa
jl
out
mov
sbbb
loopne
cmp
lret
out
cmpsl
add
mov
push
mov
sbb
cmp
std
inc
mov
cmp
fisttps
mov
inc
test
jl
mov
in
and
fadds
orl
cmc
in
cmp
fadds
pop
out
adc
cmp
imul
add
mov
cmp
flds
pop
pop
inc
and
les
push
pop
mov
loope
mov
test
fildl
cld
mov
sahf
mov
gs
pop
mov
scas
add
loopne
test
push
data16
ret
out
sub
cmp
arpl
sbb
sti
xchg
aas
sahf
je
push
mov
dec
add
sub
mov
pop
jge
fisttpll
cmp
mov
ljmp
scas
xchg
out
mov
push
inc
or
fbstp
fs
loop
sarl
mov
dec
cmc
lret
inc
sub
sbb
sarl
mov
mov
adc
pop
in
lcall
jae
cli
xor
xor
add
mov
sub
add
push
stc
aam
mov
sbb
mov
add
push
xchg
rclb
mov
jmp
add
jle
cwtl
leave
lcall
stc
jae
fbstp
inc
imul
and
cmp
mov
sti
psadbw
orl
pop
inc
adc
mov
pop
mov
xchg
fmulp
in
lret
decb
push
and
xchg
push
xchg
aam
fidivrs
push
inc
adc
inc
fwait
aam
sti
addb
adc
outsb
xor
xchg
lea
hlt
cmc
pop
add
mov
pop
mov
lock
movsl
sub
sub
sub
outsl
shrb
ror
jns
into
and
cmp
push
jmp
scas
mov
mov
dec
add
loop
mov
fcomp
mov
ljmp
adc
pushf
in
dec
sbb
pop
push
cmp
cmp
nop
xchg
push
jns
xchg
int
js
xchg
in
ret
mov
imul
rcrl
in
scas
mov
mov
push
lret
mov
inc
xchg
out
imul
add
mov
pop
cmc
adc
sub
mov
ficoms
in
sbb
jle
lahf
push
aas
cmp
outsl
mov
imul
dec
arpl
daa
repnz
jp
aam
fcomp
cmp
add
or
mov
dec
popf
mov
and
pop
dec
lods
iret
mov
push
mov
mov
xchg
popa
js
lahf
bound
cmpl
fisttps
pop
jl
pushf
arpl
xor
outsb
adc
mov
mov
adc
dec
adc
test
mov
imul
add
sub
pusha
mov
mov
xchg
popa
push
pusha
push
xchg
mov
pushf
add
inc
stos
test
das
test
add
jnp
mov
add
int3
ss
push
inc
je
insb
jno
fadd
arpl
or
dec
mov
rcl
push
push
jb
mov
sarb
xchg
ficoms
xor
arpl
sub
dec
addr16
xor
aad
dec
xor
and
cmpb
cs
add
rep
push
stos
dec
iret
mov
adc
mov
lock
aaa
and
inc
push
push
mov
aas
mov
mov
jae
and
es
out
xchg
imul
jne
add
jp
xchg
sub
mov
and
pop
lds
xor
mov
loopne
divl
jg
pushf
psraw
cmpb
mov
movsl
xor
cmp
pop
lods
mov
orb
lock
push
les
push
rclb
pop
fisttps
or
sub
data16
xchg
stos
or
stos
cmp
hlt
je
pop
jae
sti
inc
mov
cmp
xchg
scas
pop
push
mov
out
sbb
faddl
lods
xchg
sbb
jle
and
cltd
fnstcw
or
adc
and
jae
lds
lock
jno
mov
out
jo
imul
adc
bound
lock
xor
dec
sbb
popf
xchg
inc
out
movsb
mov
int
sub
mov
jns
or
daa
pop
push
std
mov
adc
jp
xchg
mov
ret
inc
outsl
je
je
pop
inc
ljmp
xchg
bound
out
adc
fcoms
mov
dec
out
data16
rcrb
out
mov
shrl
push
inc
xor
je
testb
xchg
sbb
push
scas
lds
lahf
adc
mov
sub
mov
cmp
mov
jae
xor
jnp
lods
inc
popf
xchg
cltd
or
pop
lods
cmp
out
test
popa
cmpsb
lods
ja
ror
repz
repz
sahf
sti
mov
cmp
add
jno
xchg
fistpll
ret
push
push
leave
cmp
jmp
shlb
addr16
aas
imul
jl
xor
inc
push
sub
sub
push
outsb
xchg
test
lock
cmpsl
jp
sbb
sbb
mov
push
aam
mov
xchg
scas
xchg
aad
jo
jne
xchg
jp
push
loop
ljmp
repnz
mov
add
std
mov
aam
aad
outsb
addr16
jb
insl
hlt
xor
or
int3
pop
jnp
jno
jg
adc
fisubrs
js
pop
sar
jmp
out
cmpsb
pop
adc
addl
fnstcw
mov
in
xor
xchg
add
imul
inc
mov
outsb
movsb
cs
sub
add
cltd
shr
xor
lahf
push
jne
inc
pop
out
xlat
bound
push
xor
jp
or
mov
cs
rcr
sbb
xchg
aaa
lcall
stos
call
mov
mov
frstor
push
xchg
xchg
lahf
xchg
sub
mov
adc
push
call
cld
sub
push
mov
jmp
iret
inc
lret
adc
cmp
push
test
jmp
mov
xchg
mov
sbb
cltd
fwait
mov
push
or
adc
xchg
xchg
pop
cmc
sahf
inc
cmp
xchg
mov
jp
fsubr
imul
lret
mov
aam
jle
xchg
lahf
dec
repnz
add
inc
cmpb
clc
es
test
ds
push
sbb
push
stos
pop
mov
dec
call
and
fisubs
adc
repnz
leave
int
bound
pop
sub
dec
outsl
xchg
jmp
add
sub
inc
ret
push
ficomps
push
test
mov
jb
cwtl
and
mov
mov
imul
mov
sub
gs
jmp
filds
jp
sub
mov
mov
cltd
arpl
stos
lods
sahf
add
jne
dec
iret
movsb
pop
shrb
push
cmc
jb
adc
jg
add
xor
stos
add
lret
fsub
pusha
mov
jne
xchg
sbbb
inc
mov
or
popf
push
mov
insl
adc
xor
mul
stos
arpl
jbe
fiaddl
dec
ja
rclb
inc
and
and
mov
scas
fimull
mov
and
nop
loopne
pop
mov
and
xchg
cwtl
mov
pop
test
daa
xchg
notb
jg
movsb
sbb
ret
inc
adc
dec
push
mov
add
cmp
mov
xlat
out
jle
repnz
or
test
mov
iret
add
inc
sbb
mov
sbb
insb
pop
sbb
jmp
jmp
imul
dec
sahf
inc
jg
les
leave
sbb
les
and
or
push
es
fldenv
shlb
shll
loopne
fdivrl
sub
flds
mov
aaa
and
loop
jns
inc
pop
mov
push
into
mov
xchg
stos
ds
je
cmc
add
enter
cmp
cmpsb
lahf
mov
sub
pop
loope
add
xchg
arpl
jecxz
mov
push
mov
pop
xor
cmpsl
into
lret
pop
sar
push
ljmp
add
sti
pop
or
add
test
lds
in
mov
xor
clc
inc
mov
ss
sbb
inc
cmp
push
hlt
daa
std
jmp
pop
bound
imul
sahf
jmp
inc
lahf
mov
rol
cmpsb
stc
adc
jp
enter
in
xor
pushf
lcall
pop
pop
xchg
cli
pop
cmp
leave
in
xchg
jg
aas
popa
cmp
aam
repnz
scas
or
es
outsl
xor
enter
aam
sbb
test
xchg
adc
test
cmp
pop
xchg
sbb
aaa
adc
jne
sub
push
test
bound
mov
mov
jno
andb
jns
add
ss
and
mov
ret
push
inc
cmc
je
outsb
lret
mov
insl
mov
int
xchg
xchg
inc
jp
or
in
sub
jecxz
inc
mov
dec
mov
jb
in
sbb
sti
rolb
hlt
mov
push
inc
sub
test
sub
in
std
pop
imul
test
insl
mov
mov
nop
sub
jbe
leave
push
mov
and
shl
push
lret
or
xchg
xor
mov
cmp
into
test
push
adc
cmp
xor
sbb
add
sbb
push
outsb
push
mov
daa
jge
mov
icebp
dec
rorb
pop
in
cmpsb
and
hlt
push
dec
pop
movsb
data16
fnstsw
cltd
xlat
lcall
pop
fistl
add
push
adc
test
mov
sub
cmpl
fisubl
decl
lcall
int
jmp
js
inc
cmpsb
dec
das
fstps
ret
xor
lahf
pop
ljmp
stc
inc
in
push
or
scas
mov
bound
lods
sar
aaa
rorb
cmp
fwait
push
js
jge
xlat
cli
and
popa
and
repz
mov
fdivs
fs
popa
jne
test
dec
test
sub
bound
inc
mov
jbe
mov
sub
pop
scas
push
decb
mov
imulb
mov
ret
sub
sbbb
in
or
inc
sbb
lock
int
sub
dec
scas
fcompl
jge
cmp
leave
lods
jbe
push
pop
sub
dec
nop
push
iret
lods
xchg
scas
daa
popf
lea
sub
stos
add
gs
dec
ret
sbb
xor
das
rcll
dec
ret
mov
repnz
jle
and
push
es
cmp
loop
mov
pop
xor
ffreep
ljmp
or
pop
dec
pusha
push
enter
mov
mov
std
and
jb
fxch
xchg
fxch
jne
sbb
or
dec
xchg
adc
lahf
pop
loopne
sub
cld
mov
cmove
or
and
push
movsl
divb
push
adc
stc
ja
leave
outsb
test
sub
mov
in
inc
fadds
sub
cmp
jge
xor
popf
loope
mov
and
mov
mov
push
dec
popf
or
int
pop
jmp
popf
or
pop
inc
lds
movsl
mov
psllw
dec
test
or
out
call
addr16
push
adc
in
mov
pop
stc
xchg
lock
mov
mov
mov
mov
lcall
adc
add
pusha
xchg
inc
mov
jnp
adc
xchg
je
in
stos
aas
xchg
data16
mov
iret
dec
cltd
rol
jmp
jg
jmp
xlat
push
xchg
jb
add
cmp
leave
adc
mov
imul
gs
dec
pop
mov
lcall
icebp
and
add
notl
jmp
stc
pop
movb
aam
xchg
cli
je
shll
push
xchg
mov
pop
inc
push
inc
rol
mov
xor
pop
int
out
rcl
push
mov
and
and
cs
push
aad
rcll
test
mov
cmp
sub
push
aam
cmp
xchg
xchg
lret
and
mov
lock
call
ds
bound
cs
cmpsb
ss
cld
lock
mov
outsl
jae,pn
mov
mov
or
fisubl
mov
or
testb
sbb
hlt
mov
push
insb
insb
cmpl
jmp
adc
shlb
adc
inc
aad
mov
xor
inc
repz
add
loopne
mov
cmp
loope
lock
adcb
mov
add
test
les
pop
cmc
out
lahf
adc
mov
adc
dec
call
repz
iret
imulb
gs
and
in
push
lods
stos
xchg
rolb
and
mov
cmpsl
cmp
cli
ret
mov
les
rcr
pushf
xor
pushf
push
mov
test
cli
cli
sar
inc
fucom
orb
mov
mov
mov
enter
imul
push
push
and
and
lods
pop
cli
sbb
testb
adc
andb
pusha
pop
icebp
ljmp
cmpsb
jb
sbb
add
adc
push
jns
mov
subl
add
ljmp
mov
push
mov
adc
icebp
out
xorb
pop
lds
mov
mov
xchg
sbb
mov
push
fidivl
dec
sbb
inc
add
imul
lcall
test
in
pop
cli
mov
sub
pushf
add
adc
pop
push
add
les
loope
push
sahf
pop
mov
neg
cli
pop
insb
or
js
mov
stos
mov
les
dec
je
xchg
in
andb
pop
leave
fcoml
clc
pop
push
jns
cmc
add
ss
jmp
mov
mov
add
adc
xchg
sarl
push
mov
push
mov
mov
push
pop
or
mov
mov
add
add
adc
mov
adc
flds
sub
xchg
push
pop
or
shl
xchg
mov
addr16
push
or
mov
pop
jno
mov
fwait
test
pop
push
dec
shlb
jle
adc
bound
jns
xor
xchg
fsubs
cmp
scas
sub
test
std
test
mov
push
xchg
mov
fcoml
push
popf
xchg
test
add
outsb
test
push
dec
push
lea
aaa
dec
fsubrs
jecxz
imul
push
out
pop
cmp
leave
sub
fldenv
les
dec
mov
movsb
adc
arpl
dec
adc
ret
dec
fmul
nop
jnp
mov
mov
fdivs
add
mov
mov
adc
mov
mov
das
pushf
mov
in
mov
push
adc
sbb
divl
shl
jns
call
jl
add
jmp
and
leave
jb
subl
jbe
test
mov
addb
ret
addr16
sar
inc
rol
or
or
lock
xlat
nop
and
mov
push
inc
cmp
cli
mov
or
push
in
stos
push
mov
aaa
ret
ss
dec
shrb
mov
icebp
fsubrp
inc
loopne
and
or
addr16
mov
int3
je
iret
testl
mov
std
repz
mov
sbb
dec
add
int
pop
testl
ja
jmp
lock
jle
dec
fs
sub
rcll
repz
js
add
sarb
lods
jno
inc
scas
mov
in
or
fidivs
or
pop
mov
popa
test
xchg
push
mov
in
cwtl
das
cltd
rolb
sub
pusha
inc
jecxz
fisubs
movsb
imul
xor
movsb
add
je
les
sti
mov
push
lcall
je
and
hlt
loope
imul
mov
mov
jbe
jg
in
sahf
cmc
fcomps
dec
fmull
testb
push
sub
mov
cmp
loope
xchg
xor
ret
test
xor
dec
int
pop
xchg
dec
mov
lods
fsubrs
pushf
mov
scas
jns
dec
insb
repz
insb
push
push
cwtl
shr
sub
inc
loopne
and
mov
add
lahf
sub
cmpsl
sub
fstl
mov
inc
push
or
fwait
loop
xchg
in
rcl
out
dec
test
dec
ss
dec
out
sbb
es
ret
xchg
aas
pushf
lds
cmpsb
sbb
dec
insb
mov
mov
or
mov
mov
and
sbb
push
xchg
inc
pop
fidivrs
cmpsb
push
fildl
dec
jnp
inc
jne
sub
leave
lret
xlat
mov
or
int3
out
pop
xchg
or
dec
lret
out
ss
mov
call
xor
push
in
add
cmp
mov
fadds
sbb
lea
loop
push
daa
lahf
out
ljmp
xor
pushl
xchg
dec
xor
ret
pop
push
hlt
in
dec
sti
or
push
push
inc
jge
out
std
aad
jns
scas
scas
outsl
mov
mov
cmp
mov
mov
aam
sub
mov
cmc
pop
sti
das
inc
sbb
fwait
inc
sub
pop
fisubs
pop
test
xchg
out
and
call
and
xor
mov
or
dec
jnp
mov
fsubrl
repnz
mov
dec
jecxz
xor
in
aam
xor
pop
dec
inc
adc
mov
xchg
xchg
adc
sarb
cli
rorb
pop
add
out
or
pop
cltd
mov
icebp
cmp
pop
lods
mov
or
pop
sahf
dec
ret
int3
add
mov
lcall
cmp
insb
or
mov
out
adc
push
xor
popf
in
cs
pop
lret
insl
in
cmpsl
loope
and
in
inc
push
dec
into
loopne
jg
sub
std
inc
sub
fdivrs
stc
shrb
sbb
mov
outsl
cmp
sub
sbb
jb
jg
sbb
mov
lret
dec
adc
add
xor
out
sahf
add
push
or
sahf
ja
inc
push
pop
test
ret
sub
rorl
mov
mov
xchg
sub
push
iret
adc
scas
push
push
mov
sbb
aaa
dec
add
stc
mov
les
dec
jo
mov
xor
or
fstpt
mov
frstor
mov
dec
inc
mov
stos
andl
mov
sbb
lret
add
movsl
frstor
icebp
inc
mov
and
mov
aad
insl
mov
mov
js
xchg
or
stos
out
push
and
mov
pop
mov
out
add
add
mov
jmp
aad
fisubl
test
arpl
xor
adc
push
adcb
ds
adc
data16
rcrl
js
cs
loope
sti
lock
leave
sub
and
mov
adc
xor
and
xor
loop
sbb
sub
in
cmpsl
xor
mov
xor
pop
inc
aam
xorb
popf
pop
push
dec
add
and
cmpsl
faddl
mov
popf
rolb
jae
pusha
adc
lods
sbb
shrl
dec
loop
insl
xor
ljmp
adc
jg
jle
mov
iret
cmpsl
adc
mov
lret
js
push
add
mov
cmp
jmp
out
in
sbb
out
cmp
xchg
xchg
push
add
into
adc
dec
mov
enter
aad
cmp
cmp
add
xor
or
fsubs
ds
nop
pop
enter
adc
fbstp
mov
mov
shrw
jp
sahf
je
cmpsb
push
testl
popf
mov
xor
testl
add
aad
fs
sbb
adc
nop
int3
pop
mov
xor
inc
add
push
cmp
shll
sub
int
roll
in
test
jp
dec
lea
mov
fisubs
leave
cmc
int
pop
aam
sbb
jg
fsubs
scas
pop
gs
lods
mov
stc
daa
pop
ret
sub
arpl
shlb
stos
sbb
mov
lods
outsb
cmp
push
jnp
imul
mov
out
out
xorb
insb
nop
stos
pop
cmc
push
jne
stc
sbb
popa
mov
gs
lcall
sbb
add
lahf
mov
mov
mov
mov
mov
xor
xchg
imul
pop
jge
loopne
pop
xorl
fisttpll
adcb
dec
dec
mov
insl
dec
addb
leave
iret
and
jmp
enter
std
call
andl
xlat
lahf
fbstp
ss
mov
dec
les
sub
xor
into
rolb
shll
adc
movsl
stc
inc
xor
into
cmp
loope
ficoml
inc
fsubl
jge
pop
cltd
and
jge
sub
imul
cmp
je
pop
bound
adc
insb
in
cltd
xlat
lea
aaa
push
xchg
stc
loop
xor
clc
aad
mov
push
mov
in
cmp
hlt
xor
repz
scas
dec
mov
fldenv
mov
xchg
push
sbb
pop
sbb
xor
sub
jae
loope
mov
push
push
jle
std
out
add
add
hlt
shlb
fstps
sbb
and
fidivs
sbb
push
aas
xor
cmp
mov
push
mov
add
sahf
imul
and
inc
scas
test
imul
out
insb
sub
sub
cld
out
scas
cmp
repnz
add
dec
icebp
adc
subl
dec
icebp
aaa
jo
popf
sbb
dec
adc
adc
or
cmp
addl
or
mov
hlt
mov
int3
xor
and
xor
cwtl
test
pop
mov
test
inc
ds
fnsave
stc
mov
push
mov
fwait
lahf
pop
xchg
cmp
fsts
dec
ljmp
pop
xchg
push
add
cld
fsubrl
stos
cmpb
add
pusha
inc
sbb
aad
mov
ss
ljmp
mov
scas
leave
xchg
adc
sbb
inc
incl
and
js
jmp
lds
das
push
idivb
iret
xchg
inc
loop
fadd
xchg
sub
pushf
loop
cmp
and
bound
pop
std
pop
fbld
dec
xor
push
jl
push
xlat
inc
jae
ljmp
roll
cmp
pop
or
sub
jp
subl
mov
cmp
and
jne
out
dec
gs
test
lret
push
sub
shrl
into
clc
add
fildl
push
mov
loopne
mov
xchg
dec
push
sbb
orl
int3
dec
loop
fcoml
lods
dec
xchg
add
sti
lock
pop
into
push
lea
xchg
repnz
lahf
xor
orl
cli
outsb
imul
add
and
jb
and
xor
or
push
push
testl
xor
pop
pop
fidivs
fsubrs
outsb
shlb
sub
int
test
jne
test
into
jle
jnp
inc
jl
hlt
sbb
mov
filds
sahf
xchg
dec
stos
add
fwait
es
add
mov
mov
sub
sarl
sub
stos
lahf
jae
mov
cmc
out
xchg
gs
mov
cltd
test
and
xlat
mov
and
lret
xchg
sti
mov
sbb
fwait
mov
jne
aad
repnz
rclb
testl
scas
aaa
and
out
test
ficomps
sub
add
into
jge
cmp
add
mov
jae
mov
jle
inc
lret
sub
out
fnsave
div
stos
sub
stos
cmp
pop
xlat
sub
out
mov
cmpsb
fwait
push
movsl
decl
addl
or
mov
mov
into
inc
ja
cmp
sbb
cltd
xlat
mov
mov
scas
mov
ss
daa
aam
lea
jnp
mov
push
dec
mov
and
xor
cmp
dec
xchg
or
xchg
push
mov
mov
push
mov
in
fisttpll
int
dec
jg
lods
cmp
sahf
lea
fstps
push
out
int3
into
mov
in
sub
mov
lret
adc
sub
sbb
push
push
adc
lock
insl
nop
pushf
call
mov
adc
xchg
ret
das
adc
outsl
push
sbb
aaa
sbb
les
ja
cli
dec
ret
adc
hlt
stc
xor
ret
xlat
pop
cwtl
jle
mov
inc
jno
out
jbe
decl
lea
pusha
mov
jnp
jae
and
dec
orb
push
dec
loopne
pushf
or
inc
add
cltd
cld
xor
cwtl
test
sub
and
pusha
cmpsb
faddl
sub
dec
jmp
xchg
adc
outsl
pushf
push
pusha
push
pop
cmp
jg
pop
dec
mov
xor
lret
dec
cli
lea
jg
scas
lock
xchg
jo
aas
jo
mov
jbe
mov
test
xchg
xchg
jg
dec
cmpsl
pop
push
push
pop
inc
out
xor
loope
dec
out
mov
sbb
repz
rorb
ljmp
cli
insl
xor
mov
cli
push
fcoml
out
push
sbb
addr16
aas
js
dec
jnp
cmp
cmc
push
push
das
imul
aam
enter
push
cmpsb
rorb
mov
sahf
inc
cli
ljmp
negl
lret
inc
repnz
dec
lock
or
sti
lds
push
and
dec
lds
ret
shrl
lret
push
jle
xor
fwait
sbb
push
in
gs
in
adc
push
xlat
xchg
dec
loopne
push
and
jp
xchg
test
int3
jmp
outsb
cld
data16
fdivl
out
cmp
pop
xchg
mov
xor
adcl
mov
pop
outsl
pop
inc
sbb
push
push
xor
or
mov
arpl
or
dec
mov
int
sbb
icebp
shll
fimuls
pop
sbb
add
addr16
cmp
cmp
lods
aam
lret
shlb
xor
jae
test
ss
lds
inc
mov
xor
out
xchg
jl
bound
lea
cmpl
lahf
out
insl
cmp
scas
cmc
xor
popf
jo
mov
and
and
lret
mov
test
bound
call
sbb
in
jbe
add
sahf
les
std
aaa
push
xchg
mov
pop
pop
gs
xor
imul
cli
leave
fcmovnb
dec
mov
push
add
mov
stos
pop
xchg
fisttpll
fiaddl
xor
mov
pusha
mov
popa
pop
xchg
es
fwait
popf
aad
cmp
notl
fisubs
dec
lret
pop
pushf
sub
and
dec
repnz
loope
icebp
adc
cmp
mov
test
cld
pop
ja
mov
ljmp
lea
jo
xchg
add
orl
scas
dec
fwait
ret
pop
mov
push
and
je
aas
push
cmp
cmp
or
xchg
or
repz
adc
cmp
dec
mov
out
pop
mov
inc
jecxz
inc
fcmovnb
xlat
sti
sbb
mov
loop
add
insb
lea
das
add
mov
mov
mov
push
stos
or
aas
mov
push
or
aas
jg
imul
std
lea
fs
lods
xchg
or
push
addr16
push
popa
lret
sbb
add
cmp
pop
aad
popa
xchg
pop
cld
inc
xchg
jge
dec
lock
inc
pop
rorb
into
mov
movups
pop
or
stc
jecxz
adc
scas
inc
arpl
inc
xor
insb
inc
mov
mov
pop
inc
fmul
lret
shrl
sub
xchg
dec
popf
xlat
rol
leave
sbb
inc
fsubr
pop
mov
dec
std
popa
pop
imul
mov
or
mov
sbb
mov
out
enter
or
jmp
and
arpl
in
outsb
rcrb
xor
outsb
xor
test
xchg
mov
dec
add
leave
aas
jnp
xchg
rcll
mov
scas
xlat
and
push
mov
and
mov
shlb
sub
push
jae
cmp
xor
shl
adcb
mov
inc
shlb
add
xchg
fs
fmul
incl
mov
adc
sub
sbb
pushf
pop
in
mov
pop
and
cmp
push
or
enter
fimull
dec
mov
mov
push
sbb
mov
pusha
and
adc
imul
cmpsb
inc
xchg
or
cmp
mov
aam
dec
test
jmp
mov
mov
in
or
cld
mov
xchg
xlat
xchg
lea
cmp
nop
lods
jno
mov
dec
pop
in
test
mov
neg
inc
inc
mov
inc
in
jl
and
pop
push
xchg
jecxz
sub
bound
sbb
dec
icebp
lea
push
mov
jae
je
cmp
std
push
dec
rcrl
xor
inc
mov
sbb
inc
fisttps
ror
jnp
mov
mov
arpl
xchg
or
stc
stos
sub
outsb
push
push
iret
mov
xchg
push
dec
adc
popf
ds
mov
outsl
mov
lods
sarl
imul
lahf
je
cmp
pop
mov
jmp
loope
pop
insl
ss
loop
popa
jmp
add
cmpb
mov
cmp
jmp
movsb
and
and
loop
push
xor
mov
sti
xor
or
rcrb
cmp
sarl
sub
push
xlat
push
daa
pop
les
arpl
pop
adc
imul
sub
jno
rcrb
push
jne
scas
icebp
lret
xchg
xchg
daa
enter
nop
lcall
adc
add
clc
clc
mov
xor
insl
dec
push
out
and
stos
cmp
mov
iret
sub
ret
jns
lods
outsl
or
fistps
int
ret
cmpsb
scas
push
lret
dec
arpl
pop
mov
mov
stos
in
xor
lcall
pop
sahf
mov
inc
orl
clc
hlt
ret
fldcw
popa
adc
es
mov
xor
lods
xchg
push
ret
pop
or
mov
fnsave
push
mov
popa
int
js
int
mov
aam
or
cmp
inc
sub
cmp
inc
cmp
ret
and
push
stos
add
pop
cmp
imul
or
std
lahf
out
lret
mov
sub
nop
push
int
cmp
sub
pop
push
addr16
out
int3
loope
in
jbe
dec
loopne
ret
add
fstp
push
aad
lods
push
pop
dec
push
outsl
ds
jmp
sahf
stos
das
add
mov
sbb
inc
add
adc
cmp
imul
mov
popa
call
xor
sbb
lret
mov
push
shl
dec
clc
cmp
loop
sbb
imul
fildll
icebp
aad
stc
pop
addr16
and
popa
lock
int3
rcl
add
divb
pusha
sub
add
mov
repz
scas
sub
aas
and
jge
clc
sti
popa
mov
shll
adc
mov
lahf
adc
das
mov
sub
mov
lahf
mov
add
enter
mov
aaa
mov
xor
clc
jl
xor
in
jb
mov
mov
pop
mov
jg
lods
push
fists
data16
push
outsl
xor
iret
dec
adc
xor
pop
lret
mov
outsl
jnp
adc
pop
xchg
sbb
imul
jae
aaa
adc
fcoms
mov
cltd
mov
mov
stos
dec
xchg
aaa
pop
adc
mov
test
jmp
xor
js
dec
pop
or
and
pushf
mov
mov
insl
sti
popf
fidivs
add
lock
int3
and
mov
xchg
call
fmuls
xchg
dec
div
and
xchg
rcrb
ret
push
mov
hlt
ja
and
jp
orb
enter
mov
or
or
and
mov
jmp
insl
call
xchg
pop
insb
mov
pop
lds
cmpsl
ret
mov
ds
or
aaa
dec
jecxz
popf
aaa
cmp
mov
and
clc
pusha
movsl
lds
insb
xlat
dec
sub
pop
pop
pop
fwait
lds
or
scas
fnop
out
sub
bound
xlat
push
out
mov
xchg
out
cmp
or
jno
cltd
cli
xchg
xor
or
lods
jno
sbb
aaa
pop
jg
dec
pop
ror
daa
jns
dec
mov
jne
repz
test
out
imul
loope
repnz
sub
xlat
stos
pop
add
mov
jne
fstl
cmp
outsb
stc
inc
xchg
mov
add
imul
xor
lods
cltd
in
sbb
xlat
push
inc
fisubs
sbb
ja
inc
ret
lock
mov
popf
daa
cmp
repz
xor
sbb
mov
andb
cwtl
subb
scas
lret
cmp
loop
sbb
int3
pop
inc
jmp
fistpl
push
push
push
fistpl
in
lods
sbb
aaa
fbld
xlat
stc
out
mov
push
mov
inc
scas
dec
in
fadds
jo
rorb
es
cmp
in
adc
xchg
mov
adc
or
out
cmp
js
shll
aas
shll
xor
mov
mov
pop
cwtl
mul
idivl
mov
jmp
add
lea
shrl
mov
xchg
filds
add
mov
je
lds
daa
stos
xchg
pop
dec
dec
inc
dec
fmull
jns
lahf
jge
fisttpll
inc
loopne
pop
aas
bound
cmc
or
pop
add
faddp
cmpsb
aas
sbb
pop
adc
les
pop
xchg
mov
es
inc
jle
insl
ror
dec
adc
out
and
add
jmp
or
dec
add
xor
aad
mov
cltd
xlat
jle
pop
adc
outsl
scas
pushf
mov
ja
dec
and
out
sahf
push
cli
cmp
mov
mov
popl
out
adc
jle
mov
lods
out
xchg
inc
pusha
test
movsl
stos
sub
ret
in
ret
xor
mov
adc
lods
mov
or
mov
lods
pop
out
lret
fists
xlat
int3
xlat
inc
nop
mov
jle
mov
repz
lahf
cmp
mov
mov
jb
sbb
les
mov
leave
dec
push
inc
into
and
lods
mulb
pusha
std
mov
or
sbb
pop
mov
or
stos
dec
mov
xchg
mov
push
lret
xchg
push
aaa
in
cmpsb
sbb
and
xlat
sub
jp
aaa
cli
sub
stos
inc
out
lock
push
mov
adc
adc
addb
or
xor
hlt
sbb
int3
pop
cmc
add
and
stos
scas
mov
inc
fldcw
inc
jl
inc
xor
push
xchg
out
stc
leave
sub
inc
mov
sbb
mov
rcrl
inc
pop
cld
xchg
icebp
mov
fwait
lods
subb
and
popa
ss
pop
int3
and
sahf
push
pop
mov
add
ret
nop
daa
repnz
sub
movsl
or
clc
outsb
lret
mov
ljmp
aam
icebp
lcall
lea
aas
dec
in
popa
and
sti
jnp
xchg
cmp
lods
shrb
adc
adc
dec
adc
mov
aaa
sub
popf
sbb
mov
adc
xchg
push
xchg
cmp
adc
lahf
jae
gs
and
daa
sbbb
jnp
inc
into
xlat
add
add
mov
add
mov
out
cmpl
inc
repz
out
add
mov
fsubrs
xchg
mov
shlb
enter
xchg
leave
aam
push
xchg
cs
leave
sub
push
jns
push
sbb
in
inc
lcall
push
pop
push
call
adcb
mov
jbe
and
lock
aas
aad
mov
ja
pop
pop
shrb
shrb
add
mov
js
bound
push
sub
mov
push
adc
es
fnstsw
js
scas
mul
cmp
icebp
test
fdivl
and
stos
mov
xchg
cs
mov
jle
call
pop
pop
or
cmpsl
mov
cs
sbb
jnp
out
mov
mov
push
mov
xor
jno
or
cmc
mov
jmp
pop
jmp
and
es
lods
mov
pop
ret
nop
xor
jp
fisttps
push
into
loopne
xor
cmp
xchg
mov
fists
arpl
add
mov
mov
testl
jbe
stos
jno
mov
xchg
hlt
fchs
dec
rorl
cmp
mov
dec
xchg
inc
ret
inc
insl
xor
into
inc
lods
lret
push
pop
fmuls
or
or
popf
in
cs
mov
xchg
fisttpll
jnp
ficompl
test
inc
mov
pop
push
insb
in
sbb
pop
out
outsb
mov
aas
js
push
out
shl
test
pop
lahf
push
test
les
pop
pop
in
clc
cmp
mov
sub
dec
rcl
rcpps
sbb
inc
into
dec
loope
push
fsubs
and
popa
push
sti
push
add
in
sahf
pop
ja
xchg
int3
xor
mov
test
fwait
lods
cmp
lahf
pop
andl
out
dec
flds
lahf
ret
adc
rolb
filds
or
lods
aas
int
jecxz
subl
jge
push
xchg
jns
or
pushl
es
mov
iret
lret
shll
inc
je
push
ljmp
mov
lock
ds
add
xor
sbb
pcmpgtb
loopne
xor
mov
in
inc
adc
add
call
xor
andb
and
xchg
xor
fs
mov
pop
das
and
inc
inc
adc
lcall
pop
xor
int3
imul
adc
mov
into
jle
dec
add
iret
int
xchg
mov
test
test
or
ja
repnz
aas
and
stos
out
cmc
jmp
mov
aad
push
pusha
in
fwait
ret
push
push
adc
jo
cli
pop
jb
push
int3
into
cwtl
mov
mov
mov
lret
ds
imul
jns
ficomps
imul
xchg
sub
sbb
loop
cmc
lods
lcall
fndisi(8087
pop
adc
lret
aam
push
lret
cmp
ret
stos
test
pop
lcall
push
fisubrl
push
lcall
pop
sub
jmp
test
pop
mull
xor
xchg
test
sub
inc
iret
scas
lock
sbb
jge
xor
push
cmpsb
dec
xchg
sub
sub
mov
push
push
aaa
adc
insb
lcall
push
mov
fnstenv
outsl
cmpsb
inc
sub
scas
rolb
jno
insl
outsb
movsl
pop
jo
sub
push
or
xchg
icebp
popf
cmp
and
sbb
sub
push
sahf
add
inc
pop
inc
les
jno
in
mov
into
ret
push
mov
addr16
jg
in
pop
xor
adc
xchg
lds
and
jg
stc
daa
mov
sbb
andl
decl
clc
push
loop
or
cmp
roll
int
icebp
mov
filds
divl
inc
or
xlat
xchg
xchg
faddl
bound
fs
frstor
push
ficoml
cmp
add
das
inc
shrl
lahf
dec
nop
inc
in
into
dec
xchg
adc
in
fmuls
iret
stos
pop
or
ljmp
xchg
lods
adc
jo
xchg
xor
xchg
scas
pop
xchg
lods
mov
add
pop
pop
scas
add
xor
push
pop
push
pop
mov
roll
imull
ret
xor
rcr
fcompl
cmpsl
ret
xchg
pop
mov
push
sub
test
and
loope
aam
pop
mov
lea
mov
popf
sbb
rorl
dec
lcall
je
insb
mov
aad
push
leave
stc
mov
cmp
ss
sti
dec
popf
dec
xor
test
loopne
call
aam
sbb
jns
clc
push
pop
lret
and
pop
and
stos
mov
mov
sub
in
sbb
hlt
or
sub
sub
jle
xchg
jbe
movsl
sbb
aad
add
enter
lds
out
bnd
loope
fs
jne
jno
into
int
sahf
sarb
inc
mov
es
sbb
ret
add
pop
movsb
jae
outsb
in
inc
in
push
fimull
cmp
mov
and
into
cltd
and
push
cmc
or
mov
cmp
in
push
xchg
pop
cmpsb
int
femms
push
rcrb
add
lock
movups
sbb
push
pop
adc
sub
shrb
lods
xor
xchg
and
lret
lds
test
and
push
mov
pop
pop
cmp
fxch
mov
in
mov
filds
cltd
push
inc
mov
xchg
adc
add
add
and
mov
outsl
pop
lea
in
ror
xor
out
sbb
or
and
sub
sub
and
mov
mov
iret
sub
add
or
arpl
lret
es
lods
shl
rorb
in
push
sub
pop
idivb
stc
sbb
jbe
gs
jno
xchg
mov
add
dec
cli
add
mov
xchg
ret
dec
insl
pop
cmpsl
push
or
ret
js
unpcklps
dec
sub
and
repz
imull
cmp
es
sub
cltd
jle
fimull
fucom
popf
cmp
dec
loop
jbe
aas
xchg
cwtl
shlb
sub
xor
push
insb
push
jmp
loope
out
in
and
lret
cmp
dec
jecxz
cmpsb
xor
movsl
push
inc
aaa
das
loop
mov
fs
push
add
int3
cmp
or
sahf
je
es
jno
std
mov
xor
pop
adc
fists
xor
sub
xchg
xchg
fstpt
sub
mov
pop
and
xchg
pop
fstl
jl
dec
sbb
jmp
jg
div
fidivl
pop
cmp
xor
mov
repnz
push
xchg
stc
or
inc
jl
jno
jbe
push
push
cmc
mov
fstpt
inc
push
cmp
push
cmp
outsb
inc
repz
pop
xchg
jbe
jns
pop
dec
fnstsw
xor
sbb
ljmp
loop
js
dec
and
stos
push
or
shrl
mov
out
cmp
arpl
sbb
pop
jle
shrl
into
insb
lds
sub
mov
data16
add
fsubrl
mov
int
into
icebp
ja
call
stos
xor
xor
fistpll
rcrb
into
mov
inc
lret
arpl
xor
pop
jo
cmp
jmp
sbb
mov
in
movsl
sbb
out
push
pop
mov
pop
lds
push
fs
lea
dec
cli
and
in
daa
inc
and
mov
aas
push
jge
std
sbb
insl
mov
int3
sub
ljmp
and
cwtl
inc
into
inc
call
lds
out
cli
xor
cmpb
pop
ret
shrb
push
mov
xchg
jecxz
inc
xor
cmc
cmp
fdivrs
int3
mov
rolb
mov
mov
subl
out
sbb
cmpsl
lret
dec
dec
fwait
subb
fidivrs
outsb
int3
cmp
shlb
jmp
jb
mov
mov
addr16
sub
addb
cmpsl
jmp
jl
rorb
adc
roll
es
leave
popa
jmp
or
ja
mov
das
ss
out
or
mov
jmp
pop
mov
and
lods
mov
lret
mov
repz
xchg
inc
xor
cmc
sbb
cmc
test
push
jbe
cmp
sub
dec
pop
ret
xchg
sub
lea
pop
add
dec
scas
sahf
push
xor
dec
stos
sub
nop
adc
push
adc
call
add
enter
sbb
cmp
jne
sub
jnp
lods
pop
add
mov
mov
aas
xor
dec
jb
dec
mov
jb
push
sub
imul
icebp
dec
cmp
and
jae
ja
mov
xor
lret
aaa
push
gs
mov
js
in
call
pop
jge
add
repz
sbb
pop
fiadds
std
mov
xlat
push
mov
push
cmp
stos
lds
rorb
jo
imul
cmc
and
fsubrl
xor
fdiv
sub
inc
imul
dec
cmp
and
xor
adc
sysret
mov
xor
lock
popw
daa
or
mov
mov
in
xor
mov
mov
jecxz
sldt
stos
addr16
loope
sbb
inc
pop
test
cld
sbb
rol
xchg
insb
pop
fidivs
or
or
out
in
test
and
or
movsl
jnp
test
xor
ret
jne
inc
hlt
in
loop
outsb
arpl
les
pop
lcall
xchg
loop
sahf
ss
testl
rclb
fiadds
enter
je
imul
lret
fldl
push
shlb
sbb
scas
xor
inc
and
or
insl
subl
or
xor
ds
rorl
mov
movsl
or
cltd
cli
ror
aad
or
jmp
fists
dec
jae
xchg
cmp
test
xlat
shll
push
mov
inc
idiv
fimuls
fildll
stos
flds
and
add
jae
repnz
repnz
lcall
push
mov
cmp
xor
pop
and
lods
push
jecxz
or
push
mov
movsb
mov
sarl
addr16
cld
stos
mov
jae
dec
dec
jle
and
out
test
imul
das
add
mov
test
mov
out
xor
push
xchg
push
imul
hlt
pop
stc
inc
lock
jbe
loop
addr16
xchg
sub
ljmp
jb
mov
scas
sub
cwtl
xor
fmul
das
rol
pusha
add
je
pushf
insl
leave
fisttpll
push
cmp
add
mov
and
mov
leave
scas
cmpsb
loopne
push
and
insl
fstps
sahf
out
adc
pop
sub
loopne
movb
xchg
sub
lahf
repnz
mov
stos
lock
scas
mov
cmpsb
mov
add
popf
and
add
cmp
inc
popf
cmp
call
sub
cmpsl
sarb
mov
add
in
add
add
cltd
lods
aas
jmp
out
add
and
push
and
test
mov
xchg
sbb
pusha
xchg
pop
dec
js
das
dec
fsubrs
dec
jo
aam
sbb
popf
push
bound
cmp
in
loope
cwtl
and
xchg
scas
stos
adcl
ja
push
sbb
addl
pop
cmp
push
int
cmc
or
sub
jo
lds
and
or
cltd
into
popf
push
xor
repnz
jl
xchg
aad
test
subl
xchg
shlb
addl
scas
out
add
adc
dec
pop
pushf
dec
mov
dec
aaa
jns
dec
loopne
inc
arpl
fadds
stos
cmc
sbb
int
adc
dec
cmp
cmpxchg
ja
cmp
lods
enter
xor
mov
pop
mov
jle
pop
enter
call
jg
adc
out
xor
mov
xor
sti
lea
cmpsl
pop
jnp
cmp
repnz
push
stc
insl
mov
in
push
pusha
insl
aad
enter
pop
repz
lea
xor
pop
stos
cmp
clc
xchg
sub
jns
cmpsb
xor
ret
mov
repnz
xchg
pop
lds
stos
xchg
pop
jb
imul
js
mov
dec
mov
fldt
sub
nop
icebp
dec
sub
ja
xchg
sbb
inc
addr16
lretw
push
mov
out
testl
movb
sti
inc
mov
lods
mov
in
or
xchg
jno
xchg
jl
inc
inc
mov
xor
stos
jo
mov
jecxz
dec
rolb
xchg
addr16
mov
sbbb
xor
lret
dec
dec
cmp
xor
mov
sti
movsl
jae
pop
dec
push
notl
pop
jge
jl
clc
lock
sub
fstl
loope
je
arpl
push
jne
cs
shlb
fisttpll
clc
sbb
pop
sbb
xor
addr16
xor
inc
mov
sub
dec
ljmp
push
clc
adc
and
push
pop
sbb
out
ljmp
jecxz
insb
fildll
sub
sahf
cmpl
popf
aam
mov
add
aad
data16
jge
cmp
lock
fcoms
fisttpl
lds
mov
and
dec
xor
out
call
es
cmp
jbe
push
push
sbb
sbb
negb
cmp
fwait
loopne
jmp
xor
mov
je
cli
pusha
mov
push
repz
pushf
enter
mov
push
mov
cmp
xor
add
movsl
fcompl
add
mov
std
rcl
ljmp
mov
pop
lahf
cld
movsl
into
mov
push
mov
push
xchg
rcrb
jge
ljmp
subb
or
ret
jo
pop
mov
lcall
jg
push
out
mov
push
sahf
fst
push
gs
addr16
adc
cwtl
lods
adc
lock
push
fxch
inc
dec
testb
setno
sub
daa
jmp
mov
jg
loop
cvtps2pi
mov
cs
pop
mov
sub
cmpsb
dec
pop
aam
std
popf
ror
mov
mull
jge
jae
adc
xor
js
push
add
mov
mov
addr16
ret
xor
sub
mov
push
push
jnp
lea
shll
cmpsb
mov
and
jnp
cmp
cmp
outsb
pop
push
pop
pop
sub
or
add
mov
icebp
bound
or
dec
sub
repnz
stos
dec
int
into
loop
mov
or
cmpsb
enter
xchg
repz
lods
add
and
push
mov
inc
sbb
pop
sbb
cmp
mov
add
test
and
xabort
je
inc
repz
add
int
cltd
push
call
xchg
mov
and
xchg
adc
add
adc
xchg
cmpsb
nop
stc
mov
push
inc
lds
jb
sub
add
xlat
test
loopne
in
pop
gs
shlb
xor
pop
or
xor
lds
xlat
mov
pop
push
pusha
xor
mov
insb
enter
jl
cmp
add
cwtl
mov
xor
into
jbe
aam
out
pop
cld
sahf
jae
dec
push
icebp
in
gs
mov
test
pushf
ds
rcrl
pusha
dec
fstpl
cld
popa
mov
or
rcrb
cli
xchg
mov
adc
mov
or
shlb
imul
pop
dec
insl
cltd
cmp
cmp
lret
sbb
jnp
or
xlat
jns
add
popa
divb
push
and
mov
lods
out
mov
loopne
popf
test
jg
pop
insl
dec
pause
pop
dec
or
shlb
add
out
mov
dec
xor
cmp
cmp
rcrb
popf
popf
mov
xchg
mov
scas
test
dec
lret
sbb
fldl
push
outsb
xchg
adc
dec
icebp
add
dec
sub
je
lcall
insb
inc
divb
mov
sub
jecxz
and
mov
jnp
arpl
ljmp
or
mov
dec
enter
jns
xor
sub
xchg
daa
test
cmpsb
xchg
pop
xchg
in
rcr
xchg
adc
test
pusha
jb
mov
hlt
bound
or
insl
ret
fisubs
mov
cmc
adc
loopne
jle
out
pop
jmp
daa
push
mov
add
lret
lea
cmc
jl
mov
ss
outsb
mov
pop
sub
jno
sub
int
out
add
mov
mov
mov
xchg
mov
add
test
or
idivb
in
popf
notb
pop
jnp
lock
pop
js
jae
in
push
add
cmp
imul
fildl
popf
std
lea
cwtl
jns
gs
bound
lret
adc
inc
out
fisubl
lods
clc
mov
sub
fiadds
inc
mov
jp
push
lret
mov
ja
and
pop
add
cmpsl
and
mov
shrb
push
adc
out
inc
ds
test
xchg
push
movsl
pop
sahf
lret
pop
and
mov
lcall
and
mov
jmp
subb
inc
xor
add
mov
outsl
pop
insl
roll
mov
xchg
push
jle
sbb
push
push
test
out
mov
mov
pop
scas
mov
sbb
jb
jl
add
jl
push
lret
jl
pop
mov
mov
cmp
and
cmpsl
dec
lahf
push
pop
xchg
das
push
mov
mull
pop
cmpsb
repnz
sti
pusha
ficoml
movsl
loope
lret
mov
pop
or
out
addr16
aam
out
pop
das
xlat
sti
imul
test
add
addr16
sbb
and
and
ret
orl
jae
je
adc
cmpsl
inc
rcrb
fwait
jnp
popa
int
cmp
push
movsl
iret
pop
outsb
sbb
aas
dec
cmp
insb
leave
sub
arpl
or
inc
add
xchg
jb
add
and
sbb
call
adc
jmp
sbb
jle
dec
fyl2xp1
mov
xchg
mov
insb
mov
stc
pop
mov
shl
xchg
out
jl
adc
ret
push
or
mov
ret
mov
mov
jmp
repnz
cmp
jle
sahf
xchg
iret
sbb
jmp
std
mov
jmp
test
lock
rcll
mov
test
scas
add
fisubs
cli
lea
inc
pop
insb
pushf
cld
aad
mov
adc
cld
gs
mov
and
ja
adc
int
cld
pop
pushf
fldenv
and
movsl
lahf
je
add
shlb
pop
shll
cld
push
aam
xlat
add
mov
cld
sti
popa
mov
or
pop
ret
shlb
cmp
aas
and
aas
popf
shl
sbb
inc
sbbl
scas
dec
dec
lock
loope
push
and
cmpsb
mov
subb
mov
push
out
mov
push
shr
jo
call
pause
ret
rcr
mov
push
xor
iret
into
sbb
subb
mov
or
stos
cmpsb
pop
cs
imul
data16
into
lock
add
mov
sahf
mov
and
cwtl
and
les
stos
cmp
mov
out
out
incl
divb
fdivr
mov
jmp
jb
mov
jp
fidivl
shll
mov
mov
and
and
cmp
rolb
icebp
das
mov
and
arpl
add
in
hlt
push
push
ret
or
xchg
out
xor
mov
sbb
daa
xor
rcrl
or
stos
dec
mov
jnp
push
scas
movsl
rol
insl
jge
mov
xor
stc
out
add
fcomip
push
or
outsb
lret
mov
and
pop
mov
add
fnsave
movsl
mov
inc
popf
xchg
mov
xchg
sbb
scas
mov
mov
pop
repnz
fisttpll
adc
or
iret
jle
cwtl
imul
cmpsb
jb
cmp
loopne
dec
xlat
jbe
inc
jne
mov
ds
cmp
add
imul
dec
xor
ss
mov
xor
scas
dec
mov
and
ffree
pop
cmc
lret
adc
or
imul
aas
js
incb
arpl
mov
sub
and
add
xlat
enter
jmp
repnz
mov
lahf
xor
lea
push
jmp
cltd
cmpsb
inc
pop
stos
cmpsb
dec
sbb
into
fisttpl
jo
jecxz
jmp
cmp
xchg
outsl
cltd
add
and
pop
fcmovne
and
pop
scas
dec
or
cmpsb
and
mov
dec
mov
sub
das
add
push
xchg
aam
pop
jp
loope
lahf
pop
jge
ret
sub
cmp
repnz
lret
cs
lret
pop
mov
cltd
push
icebp
lret
out
push
lods
and
roll
push
aaa
rorb
pushf
rcrb
cmp
cltd
push
mov
xchg
aad
movsb
lret
xor
cli
test
pop
rolb
test
orl
imul
cmp
or
mov
mov
movsb
cmc
repnz
insl
sub
imul
out
xlat
push
inc
fsubp
cmp
test
ljmp
cmp
in
cltd
inc
fnsave
xchg
test
pop
mov
leave
mov
mov
loopne
popa
xchg
or
add
lods
imul
pop
stos
push
iret
loope
xchg
xor
ljmp
test
orl
sub
or
xor
insb
mov
mov
addr16
bound
scas
inc
cmp
jle
adc
dec
sahf
adc
aas
in
inc
and
pop
pop
lods
dec
jmp
add
and
sub
fsubl
shll
enter
sub
mov
rcl
push
ret
sar
add
sbbl
push
dec
les
hlt
leave
push
sbb
clc
or
ret
imulb
lahf
mov
lds
shlb
stos
shr
dec
pop
cmpb
jg
sub
push
imul
sahf
xlat
jb
clc
pop
dec
mov
mov
add
cmpsb
inc
clc
lock
or
mov
adc
iret
std
mov
or
push
in
mov
out
or
pop
lea
loope
into
inc
pop
push
in
push
mov
inc
sar
add
andb
shrb
sub
in
or
and
je
add
sub
mov
mov
stc
sbb
cld
jge
jns
std
mov
jge
xchg
js
jb
ds
sbb
arpl
mov
adc
sti
sti
cwtl
shrb
test
push
aad
inc
mov
outsl
sub
xor
movsb
pop
test
push
add
jmp
mov
addr16
mov
pop
mov
sub
popf
out
dec
insl
call
push
call
popa
xchg
out
fsubs
dec
aaa
cmpb
pop
out
fadds
movsb
jo
and
pop
pop
insb
cmpsb
cmpw
pusha
sahf
out
int3
xor
and
dec
rclb
and
mov
inc
mov
mov
mul
fwait
aad
movsl
mov
jnp
jecxz
daa
mov
sahf
pop
mov
into
cld
push
int3
daa
push
or
add
int
push
add
jecxz
into
mov
std
test
xchg
cli
daa
and
out
shrb
add
sbb
std
loope
pop
inc
clc
js
xchg
icebp
andb
jns
jns
sbb
cli
stc
test
push
ret
mov
mov
fstpt
call
inc
movsl
ljmp
cmp
mov
jb
push
pushf
inc
mov
pusha
jge
fs
xchg
clc
dec
jl
shlb
clc
or
ret
mov
aam
sbb
dec
jmp
cmp
sbb
outsl
ror
jae
push
adc
jno
fdivp
inc
loopne
insl
in
jno
xor
test
pop
push
cmp
sbb
aas
mov
in
pop
cmp
ljmp
cmpl
or
fidivrs
mov
mov
or
xchg
ss
pushf
jp
xchg
test
mov
mov
scas
sub
insl
xchg
sub
push
pop
and
stc
test
stos
or
pop
inc
push
data16
int3
loope
jae
es
adc
sbb
cmp
lds
dec
bsr
movsl
push
fdivrl
jnp
pop
mov
repz
into
or
sub
scas
pop
mov
sbb
int
cmc
add
jb
in
imul
jp
jp
rorl
push
fadds
mov
mov
and
jo
and
sub
out
imul
jp
adc
pushf
xchg
push
sbb
mov
mov
outsb
xor
mov
pop
cli
jno
clc
mov
sti
mov
pop
pop
pusha
adc
sbb
cmpsl
in
loope
rolb
xchg
jl
arpl
ljmp
and
std
inc
sub
sbb
fwait
add
dec
std
imul
scas
rorl
loope
ret
lods
jb
mov
mov
push
push
shlb
sbb
pushf
shr
mov
cmpsb
add
dec
sub
ficompl
push
call
sbb
or
cli
pop
movsb
xchg
outsb
int
jne
fadd
push
pop
push
sub
cmp
lcall
inc
mov
mov
mov
jno
outsb
or
hlt
mov
fstpl
in
push
sub
xor
add
inc
mov
add
fwait
cli
mov
cs
rcr
loopne
nop
add
and
sub
adc
out
mov
cmp
in
sbb
fisttpl
leave
sub
inc
loop
or
adc
mov
jno
es
xchg
inc
ficomps
mov
mov
rcl
scas
pushf
insb
jns
push
mov
xor
and
mov
fmulp
mov
jae
cmc
negb
enter
pop
mov
shl
jecxz
cmp
xchg
push
pop
jmp
cmc
mov
out
and
imul
add
pop
xchg
cltd
fistps
ja
lcall
fisttps
mov
inc
dec
call
lods
leave
push
sub
mov
dec
jbe
aam
mov
int
mov
jbe
pop
jg
sbbl
adc
sub
ss
out
sti
jno
scas
out
and
in
es
sub
mov
add
aad
cmp
out
ss
sti
test
cli
and
push
ss
jl
pop
cld
or
sub
cmp
xor
or
aam
mov
ja
jns
int
mov
mov
inc
mov
shrl
mov
frstor
loop
sbb
fisttps
mov
push
push
ss
fidivl
cmovs
sbb
stos
hlt
rorb
jle
add
cmp
jb
push
insb
adc
sbb
icebp
faddl
es
sbb
push
jno
dec
fsubr
pop
lcall
push
loop
pop
add
jb
pop
pop
push
xchg
xor
mov
stc
or
orb
cmp
xor
sub
lcall
mov
imul
inc
xchg
dec
addr16
mov
mov
inc
stos
push
push
loop
std
jne
jl
add
fimuls
pop
aad
in
in
sbb
arpl
sti
mov
cld
out
push
call
das
sbb
cmp
mov
sahf
add
pop
push
dec
cmpsl
cmpsb
out
fistps
rol
jno
sub
aad
cmpsb
fistpl
add
pop
jns
ljmp
cmp
sti
push
fs
mov
pop
outsl
enter
bound
mov
lock
add
pop
sub
dec
add
sbb
cmpsl
mov
lcall
fldenv
xchg
push
cmc
jbe
pushf
xchg
out
pusha
cmc
fldl
fcmovnu
push
inc
test
out
outsb
int
int3
lahf
mov
or
xchg
adc
push
ror
cmp
or
xchg
enter
push
lret
sbb
cli
mov
orb
push
and
mov
pop
jle
cwtl
lcall
xchg
jae
daa
cmp
fadds
fnstcw
lds
loopne
popf
sub
sahf
pop
repz
test
test
cli
mov
mov
imul
inc
or
mov
dec
call
adcb
ds
xor
jmp
fistpl
pusha
add
aam
test
into
sarl
jns
fcmovb
sbb
jno
ficompl
ret
xor
xor
push
outsl
push
loop
and
loopne
xor
mov
pusha
mov
jae
imul
sub
std
pop
add
pop
rclb
idiv
add
add
fnstcw
pop
jne
cld
adc
testb
sub
xorb
inc
mov
les
je
repnz
push
lods
rorb
inc
out
cmc
push
in
sub
ja
insb
or
hlt
out
movq
fadd
add
ret
mov
dec
les
push
lret
aaa
sub
ljmp
xor
mulps
jp
and
or
scas
and
adc
lret
lcall
cmpsl
push
jbe
inc
out
push
enter
imul
cli
sti
push
pop
daa
aam
into
dec
dec
shl
jnp
jbe
fcmove
sub
and
jmp
aad
cli
scas
js
rcrb
ljmp
scas
stos
test
xchg
cmp
test
mov
mov
xchg
in
xchg
push
out
mov
mov
and
or
js
jae
push
mov
mul
or
int
pop
sbb
jmp
das
outsb
push
jns
dec
and
xor
in
jl
pop
int3
cmp
push
xor
jbe
dec
pop
push
fwait
sbb
cwtl
xchg
loope
add
idivl
dec
in
shll
jg
test
inc
mov
xchg
sbb
repz
add
push
inc
cmpsb
jmp
mov
xor
inc
ljmp
jp
dec
and
pop
lds
push
mov
push
pop
insl
adc
cmp
push
cmp
hlt
sub
call
ja
lds
stos
gs
mov
call
xor
inc
imull
fidivl
lods
clc
mov
ss
xor
jnp
andl
push
das
hlt
jne
jl
loop
insb
repnz
inc
inc
jno
push
jecxz
mov
aad
dec
push
stos
hlt
pushf
cwtl
out
ja
adc
loop
add
xchg
aad
enter
sub
pop
sub
xor
pop
popf
or
repnz
out
mov
dec
aad
test
mov
js
sub
mov
incl
fwait
mov
sbb
lahf
into
lahf
fs
rclb
dec
pop
dec
sub
aas
push
sub
push
adc
jnp
lods
inc
xlat
mov
subb
cmp
mov
and
sbb
pop
lret
mov
push
cmp
mov
fnstenv
mov
cwtl
xor
push
aas
pop
push
int
and
sub
jge
push
adc
jmp
and
and
pop
mov
cmpsl
les
pop
repnz
xchg
insl
jns
push
cmp
in
loopne
fdivrl
jno
lret
fmuls
in
cld
jge
aad
push
sub
or
push
icebp
sub
int
inc
in
fwait
pop
lock
aad
mov
sahf
adc
gs
and
cltd
or
dec
mov
pop
sub
inc
fs
lcall
cli
faddp
das
jo
rclb
call
arpl
pop
cmp
sbb
jl
lcall
in
sbb
movsb
movsb
iret
rclb
cmp
push
push
push
lods
cmp
jg
fldt
dec
mov
scas
outsb
xor
test
andb
sub
push
jo
pop
cmpsb
mov
or
add
fldcw
scas
sbb
jmp
stc
jnp
in
lock
cmp
stos
push
dec
hlt
jb
fwait
mull
call
ds
iret
xchg
dec
mov
imul
mov
stc
jb
adc
cmp
or
pushf
mov
pop
and
testb
movsb
mov
sti
or
cwtl
dec
add
ret
cmp
add
bound
shll
iret
mov
leave
xlat
in
adc
ffreep
pop
sub
jmp
jne
and
cmpsl
pop
xchg
testb
add
cltd
and
jae
dec
push
cmp
mov
lods
dec
iret
cs
test
hlt
jl
push
mov
mov
mov
and
and
xor
xchg
pop
cmp
inc
cs
mov
push
cli
loop
loope
jbe
das
jmp
sub
lock
enter
mov
cmp
xor
sbb
and
pop
mov
test
call
leave
lcall
jns
jb
xlat
fistl
es
in
adc
inc
mov
inc
movsl
dec
pop
jp,pt
jbe
movsb
push
aad
decl
mov
fldenv
mov
loop
bound
mov
repz
leave
push
sbb
jnp
push
in
lret
mov
sbb
jne
popa
lock
aad
mov
pop
add
xor
add
cld
sub
mov
inc
pushf
loope
mov
int
mov
rolb
dec
or
cwtl
push
and
and
loopne
mov
pop
or
mov
inc
jne
xchg
imul
cmp
pop
stos
sub
sub
int3
std
icebp
push
lcall
dec
jne
fcoml
bnd
xor
rcrl
and
mov
add
popa
arpl
mov
pusha
xlat
fstpl
inc
push
xor
sbb
jbe
mov
shl
xor
and
pusha
stos
push
sbb
fimuls
jo
dec
dec
sahf
add
cli
jp
cld
mov
jmp
and
sub
ss
ret
loop
clc
xchg
sbb
sub
sub
fadds
inc
xor
jne
pop
hlt
fmul
push
push
lahf
call
jle
mov
push
push
inc
ret
out
fidivl
pop
xorb
loop
cli
in
pop
mov
in
arpl
and
push
mov
add
mov
xchg
xor
dec
lds
xor
mov
pop
or
lret
sbb
iret
aam
or
addr16
jg
sub
lcall
cmpsb
and
ss
sub
mov
stos
mov
movsl
xor
add
testb
clc
shl
dec
test
mov
mov
mov
out
xor
or
mov
sub
or
sbb
jae
movsl
ja
mov
pop
lahf
mov
ss
les
jb
pop
jmp
mov
and
mov
sub
ror
sbb
loop
dec
inc
repnz
pusha
mov
cmp
adc
push
xor
add
fcom
pop
testb
imulb
cmpsl
fsubrp
lret
hlt
mov
jmp
adc
sbb
cmc
xchg
pop
lds
xchg
jmp
sub
adc
adc
cmp
leave
cmc
daa
imul
fs
pop
cmp
aas
adc
imul
mov
cmp
out
xchg
js
mov
inc
xor
cld
push
aam
out
lock
cmp
shll
addl
add
sub
pusha
out
add
int
push
in
out
mov
cld
push
lret
push
outsl
gs
mov
mov
xlat
mov
push
orb
jl
push
and
jbe
test
pop
lods
mov
scas
cmp
cmp
dec
push
cvtps2pi
cmp
mov
adc
mov
notb
mov
mov
and
sbbb
cmp
sti
mov
sub
lea
shl
inc
mov
andl
adc
int
imul
jns
inc
lret
xchg
lea
test
lret
xlat
out
loop
lret
mov
push
mov
mov
sbb
lods
adc
adc
jmp
xchg
je
mov
push
xchg
inc
add
ret
pop
cwtl
cmp
mov
mov
aam
mov
sub
lcall
test
cs
fisttps
pop
pop
xor
mov
fwait
push
pop
xchg
les
in
add
fucomi
sarb
cmp
and
in
je
push
and
lds
stc
mov
xor
mov
repnz
decb
xor
xor
mov
adc
out
idivb
xor
xchg
repz
xor
lea
lret
mov
daa
dec
sbb
mov
push
iret
sbb
jle
stos
std
loopne
stos
mov
das
sub
mov
xor
dec
mov
cwtl
das
rcr
push
sub
mov
arpl
pop
push
or
fmul
out
into
jmp
push
mov
push
pop
mov
sub
fidivrs
push
jmp
mov
mov
push
dec
jnp
adc
dec
mov
push
inc
lret
jp
stos
adc
xlat
pop
adc
rcl
mov
adc
mov
mov
sub
fcompl
daa
mov
or
in
xor
xchg
xacquire
cwtl
xchg
data16
mov
stos
mov
rcll
aas
imulb
outsb
or
outsl
in
in
dec
int3
xor
jnp
jecxz
data16
push
in
and
xchg
lds
sub
or
imul
jle
or
cmc
negb
mov
or
cmc
movlps
sbbl
mov
push
incb
inc
nop
pop
fldt
lcall
dec
mov
ss
mov
add
mov
fstpt
pop
leave
roll
pushf
cltd
mov
mov
gs
inc
mov
ret
cmp
mov
cmp
addr16
aaa
mov
lock
out
in
push
hlt
int3
cwtl
ret
fstpl
insl
scas
push
shlb
lock
movsb
rol
mov
mov
add
sti
cltd
sbb
outsl
gs
jb
out
shl
adc
sti
nop
cltd
jl
dec
sbb
aaa
aaa
dec
loop
mov
and
xchg
and
pop
or
stc
xor
fwait
mov
xlat
jae
cmp
adc
adc
mov
xchg
cmpsb
xchg
and
gs
cmpsb
ret
test
lods
xchg
jmp
hlt
push
jne
jne
into
add
jns
cwtl
jle
add
cltd
push
fwait
leave
pop
push
mov
aam
sahf
jg
push
repnz
mov
mov
mov
mov
in
lods
sub
mov
cltd
scas
dec
ljmp
ja
inc
jbe
sub
pop
mov
loopne
jb
cmp
shr
in
sbb
bound
bound
jg
dec
ret
fisubs
mov
mov
ljmp
addr16
fldcw
sarl
mov
dec
out
repz
sub
sub
std
pushf
sub
daa
xchg
adc
jle
mov
psraw
xorb
int
arpl
cmc
out
dec
pop
mov
pop
leave
push
add
sub
and
out
cmp
cmp
mov
mov
lods
and
xor
mov
sbb
mov
jmp
imul
adc
cmovle
arpl
pop
dec
out
cmp
faddp
push
mov
rep
jo
imul
not
imul
mov
pusha
and
and
scas
jecxz
das
test
imul
daa
push
cmc
test
movsb
movsb
loopne
inc
subb
imul
arpl
or
pop
and
sub
mov
jnp
in
pop
test
or
cmp
dec
jbe
fwait
movsl
outsb
ret
push
fnsave
xlat
cmpsl
pop
test
sbb
lahf
and
dec
jb
push
imul
lcall
inc
and
jge
mov
xchg
cmpsl
mov
sbb
push
pop
arpl
inc
sbb
iret
ja
jecxz
insl
xor
adc
push
aad
xchg
mov
lea
add
les
fstl
leave
test
push
out
and
pop
inc
xor
cli
gs
push
mov
jp
lods
je
pop
lcall
pop
adc
adc
pusha
lcall
pop
fsubr
and
rcl
into
push
rolb
adc
mov
lock
daa
xchg
adc
mov
jp
into
pop
stc
mov
inc
jmp
lret
pop
xor
and
xchg
insb
and
mov
loop
cli
mov
push
mov
push
cmpsl
scas
pop
add
xchg
mov
ljmp
cs
out
out
imul
es
push
xor
xchg
ss
loop
imul
lahf
sti
ret
testb
and
push
cltd
int3
fcomi
and
inc
pop
push
aas
mov
incb
cmp
cwtl
sub
loop
xchg
lcall
mov
pop
pusha
test
add
or
sbb
jge
push
or
cmpsb
jbe
dec
aas
inc
aaa
popf
ret
jae
pop
arpl
mov
scas
xor
adc
sti
in
sub
scas
out
pop
mov
scas
movsl
enter
sub
cs
jno
dec
into
pop
cmpsl
xor
jge
xor
mov
xor
pop
loopne
adc
clc
jo
push
sbb
inc
jle
addr16
inc
arpl
fcoml
call
popf
inc
xlat
sbb
aad
adc
mov
ret
xchg
leave
dec
jb
jns
sub
pop
xchg
push
in
popf
mov
int3
mov
das
mov
ljmp
out
ss
pop
shl
xchg
dec
mov
daa
inc
sarl
pop
xor
and
xor
cltd
pop
pushf
daa
inc
and
or
dec
or
jbe
std
or
test
adc
jne
testl
jp
dec
lods
and
or
into
jno
lds
or
dec
inc
cmp
pop
pop
mov
sbb
out
add
jle
and
jg
jge
mov
mov
sbb
mov
movsl
aam
add
jp
aas
lods
test
push
xchg
arpl
mov
jmp
data16
adc
aad
into
mov
add
push
sub
dec
and
icebp
mov
enter
xor
test
sub
sbb
sarl
xchg
sub
pop
inc
test
outsl
cmp
sub
xor
jne
bound
cmp
add
xor
mov
test
xlat
or
ret
xchg
or
ds
insb
and
mov
repnz
mov
or
jbe
les
icebp
push
lods
or
out
orb
scas
mov
outsl
rcll
cmp
imul
frstor
frstor
ret
lods
mov
lea
ljmp
insb
adc
inc
jl
sbb
xor
stc
pusha
mov
xchg
icebp
shll
or
cs
imul
adc
mov
outsl
ret
push
daa
pusha
sub
nop
cli
add
inc
mov
fcomps
divb
and
pop
sbb
sbb
aaa
sarl
pop
popa
test
flds
inc
mov
dec
cld
inc
xlat
inc
sbb
cmc
sbb
add
repz
xchg
mov
call
mov
imul
adc
popa
dec
lcall
into
jnp
sbb
mov
inc
mov
jo
iret
adc
dec
jno
or
fiaddl
mov
jmp
imul
push
test
xchg
cmp
add
dec
xchg
je
inc
inc
xor
add
stc
decb
sub
aaa
imul
jmp
gs
mov
pop
lods
aaa
stos
std
cmpsb
movsb
test
ds
iret
daa
mov
popf
sbb
mov
outsb
jmp
cltd
adc
testl
ja,pt
in
movsb
loope
iret
push
loopne
repnz
mov
pop
mov
xor
jl
sahf
call
lret
movsb
outsb
cmpsb
bound
fnstcw
ljmp
inc
add
repz
adc
mov
mov
out
subb
xor
shll
aam
hlt
leave
rcr
jae
das
ss
pop
fimull
outsl
out
test
pusha
stos
mov
aam
inc
aam
xor
push
clc
shlb
xor
imul
push
jb
enter
sahf
clc
fst
ljmp
jle
popa
push
inc
enter
mov
xor
mov
arpl
jb
push
nop
xchg
inc
inc
bound
jno
andl
leave
fnstsw
sbb
mov
push
imul
or
lahf
mov
sbb
shlb
out
mov
mov
lods
dec
or
xor
outsb
adc
ja
adc
int
loopne
mov
mov
fs
jbe
sub
mov
jo
dec
jle
les
lods
adc
mov
jmp
or
pop
cmpl
pushf
or
ljmp
mov
pushf
cli
dec
lahf
lods
repz
cs
cmpsl
test
gs
mov
xchg
decb
aad
repnz
dec
mov
dec
ret
push
repnz
sbb
mov
add
scas
insb
aas
dec
das
mov
xor
mov
pop
push
cwtl
cmp
notb
negb
loopne
push
push
lods
nop
repnz
mov
adc
call
jnp
lahf
ret
iret
push
jp
add
icebp
sbb
or
adc
jno
pushf
pop
jne
pop
xchg
mov
xchg
lret
xchg
bound
enter
popa
fmull
ficoml
int
xchg
and
fwait
into
movsb
inc
xchg
and
cltd
sub
push
jno
add
icebp
hlt
and
lret
rorb
gs
fstps
movsb
lods
dec
ja
or
das
popf
push
stos
icebp
dec
sub
cmp
sahf
dec
push
movsl
addr16
fwait
xor
dec
ja
add
negl
pop
xchg
popf
clc
inc
roll
push
and
cmp
cmp
push
std
and
xor
mov
lds
ja
lahf
mov
dec
cmp
mov
repnz
xor
inc
inc
int
dec
and
dec
pop
push
repz
ss
pop
shl
fwait
mov
dec
mov
sbb
dec
js
pop
sub
sbb
mov
loope
lret
sub
and
out
mov
xchg
scas
dec
test
orb
adc
xchg
push
in
cmpsl
loope
fadds
in
pop
dec
push
sti
test
lock
rclb
pop
pop
adc
test
lret
xor
adc
mov
dec
adc
add
xchg
imul
fisubs
mov
hlt
fwait
mov
ljmp
test
arpl
jno
cmp
imul
xor
mov
lea
xchg
xor
movsl
std
mov
lcall
inc
aaa
add
icebp
popa
mov
js
adc
lds
call
xchg
mov
shrl
mov
andb
lcall
nop
cmp
pop
pop
mov
mov
fmul
insl
loopne
in
addr16
xor
pop
mov
cmp
dec
cmp
imul
popf
mov
xchg
sarb
jecxz
jmp
cmpb
jmp
loopne
sbb
cli
mov
jp
xchg
loope
mov
mov
sbb
aaa
or
fidivs
jb
mov
mov
xchg
mov
ja
xor
cmp
pop
xchg
lret
out
mov
stos
cmpsb
cltd
pop
icebp
push
and
and
repnz
xor
pop
in
orb
inc
pop
and
mov
arpl
dec
add
mov
add
mov
xchg
test
lahf
inc
sub
repz
dec
xchg
push
push
dec
push
mov
sbb
clc
push
xor
frstor
fisubs
cli
icebp
jne
push
push
xchg
or
sub
push
jns
or
cmp
add
in
inc
push
mov
jbe
sbb
cli
pop
int
aam
xchg
xor
pop
test
or
sub
mov
fcoml
int3
in
lret
jb
mov
insl
mov
xchg
mov
stos
test
outsl
sub
and
or
dec
mov
inc
inc
xor
rorl
dec
lea
mov
rorb
jb
test
dec
push
mov
lret
cli
in
jl
xor
adc
xchg
xchg
push
add
sbb
stos
sbb
incl
rorb
ja
mov
popf
jae
je
outsl
aam
mov
jmp
ja
add
in
rcrl
inc
outsl
lods
enter
pop
fidivl
clc
mov
in
insl
fsubrl
mov
fdivs
pop
pop
cmpsb
jb
lea
scas
leave
inc
pop
faddl
cwtl
pop
icebp
icebp
or
and
pop
aas
push
out
lret
mov
cwtl
mov
pop
xor
fwait
inc
jo
jmp
pop
adc
push
xchg
or
jno
cmp
mov
test
scas
xor
les
stos
aad
push
xchg
push
ficompl
mov
dec
jns
jecxz
xor
sbb
xlat
lock
cmp
movsl
xchg
dec
mov
inc
xor
push
test
cmp
data16
shlb
into
fdivrl
cmp
fsubrs
dec
cltd
pop
nop
iret
mov
jns
add
pop
pop
cld
push
dec
mov
stos
mov
gs
pop
imul
inc
xchg
xchg
add
movsb
xchg
xchg
mov
mov
adc
pop
das
mov
push
sub
test
scas
std
bound
jle
mov
jge
mov
out
into
cld
fisttpll
push
or
dec
lret
pop
jae
sbb
mov
addl
shl
jno
lock
xchg
fcmovnu
xchg
mulb
mov
aam
sub
add
outsb
popf
ljmp
sub
shr
push
cltd
stc
adc
scas
add
sbb
pop
insl
or
push
xchg
fstpl
test
adc
sub
jae
xchg
xlat
into
cmp
push
cmpsl
int3
and
xchg
pop
shl
mov
imul
divl
addl
cmpb
int
push
pop
cmp
test
mov
push
and
sbb
inc
jle
bound
jns
clc
ja
inc
xor
xchg
data16
roll
push
fdivrs
mov
test
sub
cmp
sarl
push
out
test
add
cmp
shl
mov
int
bound
and
pop
aaa
jl
sub
negb
stc
adc
jae
mov
sub
or
adc
test
shll
hlt
mov
daa
dec
mov
mov
mov
jns
outsl
push
js
jp
push
arpl
jbe
xor
popa
js
add
mov
in
fbld
push
aaa
jne
jl
out
or
jne
popf
rorl
xchg
in
mov
jmp
xor
fwait
xor
adc
dec
dec
rclb
out
pop
daa
loop
xchg
inc
xchg
pop
cmp
addr16
mov
sub
adc
adc
or
lea
pop
data16
sarb
xchg
fs
mov
adc
imul
sbb
inc
std
jo
push
call
pushf
call
mov
jb
out
int
mov
adc
dec
scas
xor
push
data16
test
std
insl
inc
mov
pop
push
bound
loop
push
xchg
pop
push
lret
mov
dec
out
dec
add
jo
xchg
sarb
daa
add
ljmp
xchg
sti
outsl
push
divl
stc
xchg
jg
mov
mov
xchg
shlb
stc
int3
lret
mov
push
jl
mov
mov
sbb
dec
push
push
jbe
daa
int3
dec
cmp
mov
xor
or
test
fs
andb
in
shlb
fsts
call
cmp
jne
mov
jp
imul
leave
push
test
jno
cld
and
xchg
sbb
jae
dec
mov
fnstenv
das
push
inc
cmp
in
sbb
jg
movhps
fld
sbb
leave
iret
hlt
sahf
ljmp
or
in
and
push
stc
enter
dec
mov
jb
inc
mov
sbb
outsl
insl
imul
ds
in
mov
jle
inc
ljmp
push
mov
xor
and
add
xchg
mov
dec
jbe
mov
lock
dec
pop
pop
call
addr16
sub
pop
inc
pop
adc
cmp
aaa
or
and
arpl
popa
or
arpl
cld
repz
jmp
fisttps
leave
fcoml
andb
jp
push
mov
adc
sbb
jne
adc
fs
lock
ja
sub
mov
push
lcall
jnp
mov
push
mov
lret
xchg
movmskps
jmp
mov
pushf
rclb
jb
add
add
push
add
pop
and
push
decb
push
mov
and
fwait
aaa
movsl
scas
cmp
mov
loopne
fwait
jl
lock
aas
mov
xchg
notl
mov
cmpb
stos
in
lea
pop
clc
mov
inc
cld
jge
shrb
push
std
ds
dec
rorl
add
in
test
mov
dec
lret
inc
ja
inc
push
dec
shll
sbb
dec
push
out
xlat
jg
out
and
cs
mov
dec
orb
sub
fisubs
push
cmp
or
pop
add
and
adcb
out
jno
jecxz
xchg
jg
jo
mov
daa
movsb
inc
jecxz
mov
jge
fsubrl
dec
cmp
shrb
arpl
mov
mov
mov
icebp
push
jns
daa
cwtl
push
js
cmp
jg
pop
scas
xchg
jae
sar
lret
xchg
jge
out
adc
mov
pop
pop
icebp
int3
xor
addl
or
jae
and
cmp
inc
movsl
lahf
je
or
das
dec
mov
sbb
fcomps
sub
fistps
out
mov
mov
mov
std
in
xchg
xchg
fmull
enter
jmp
scas
in
jp
ja
jp
pop
scas
adc
sub
mov
insb
mov
xlat
sbb
int3
mov
aas
popa
inc
xor
dec
test
mov
jnp
cmp
mov
jae
lret
enter
fwait
cli
xor
ret
xchg
xchg
mov
jg
loop
mov
std
cmc
pop
les
fpatan
mov
cld
pop
aam
pop
out
ds
inc
mov
or
xchg
jge
xchg
stc
fcmovnu
out
push
aaa
or
mov
xor
cld
xor
std
sub
or
lods
mov
add
outsl
cmp
push
ret
mov
dec
mov
in
cmp
sbb
aaa
outsb
adc
push
sbb
pop
iret
jbe
loopne
dec
shlb
xchg
addb
add
das
sub
xlat
mov
adc
pop
jl
xorl
jns
mov
icebp
xor
fadd
xorl
mov
cmp
jnp
fs
sbb
cmp
das
outsl
cmpsl
cwtl
aad
adc
pop
sahf
repz
push
xchg
inc
mov
mov
add
inc
sbb
pop
repnz
cwtl
mov
insb
jno
aas
movhps
loopne
cmp
xor
adc
pushf
inc
lret
adc
ret
or
leave
sub
xorl
xchg
cmp
mov
movsl
shl
std
cld
loop
fidivl
push
jne
mov
mov
cmpsl
mov
repnz
cltd
lcall
shll
pop
rol
aaa
andb
jae
cmpsb
stos
arpl
adc
rcr
das
shll
push
shll
mov
int
and
mov
enter
mov
sub
adc
jp
outsb
xchg
jmp
in
adc
cli
jo
push
sbb
gs
int3
lahf
pushf
sbb
mov
cwtl
shll
cmp
mov
mov
sbb
jg
pop
add
jmp
xchg
cmpsb
lahf
xor
inc
fdivrs
fcmovnbe
js
mov
and
iret
in
sti
adc
sub
cli
insb
arpl
sub
outsl
add
andl
cltd
inc
and
cmpl
jne
dec
outsl
mov
aad
lds
ret
shlb
lret
out
pop
lods
jne
mov
movsl
repnz
pop
bound
pop
loopne
lods
sub
xchg
adc
int
mov
sti
mov
lcall
mov
inc
imul
mov
fisttpll
loopne
insb
sti
mov
xchg
pop
pop
in
sbb
mov
cltd
sub
cmc
scas
mov
pop
pushf
xor
shrl
movsb
xchg
pop
stc
out
out
dec
divb
shlb
and
jno
je
xlat
sbb
sbb
pop
clc
dec
sub
pop
dec
mov
push
jg
add
fcmovbe
xlat
add
fsts
mov
int3
and
jmp
rcrl
push
mov
inc
addb
ret
addr16
orb
jle
add
popa
loope
xchg
push
lret
cs
pop
movsb
mov
and
jno
pop
adc
jae
jg
cmp
add
stos
mov
divl
cmpl
fmuls
loopne
jg
jmp
out
ret
imul
fcom
ds
sub
mov
pop
xchg
or
cmp
int
push
mov
call
cmp
das
adc
adc
inc
sbb
mov
mov
adc
stos
std
push
mov
mov
add
out
xchg
les
xor
rcrb
ljmp
dec
sub
dec
inc
nop
repz
pop
lret
leave
into
mov
pop
out
mov
rcl
test
cwtl
dec
xor
pop
rcr
mov
cmp
cmp
roll
sbb
dec
push
cs
sub
cwtl
pop
leave
iret
loopne
inc
imul
cltd
stc
adc
sub
xchg
fmuls
fwait
icebp
jle
int3
ret
sub
imul
daa
xor
shll
std
lds
scas
add
add
xor
repz
loope
cwtl
and
push
push
fidivl
out
xor
lret
pop
or
fldenv
mov
xchg
mov
inc
sbb
sbb
inc
mov
mov
mov
sub
sub
xchg
std
and
jb
mov
xlat
mov
lahf
test
addr16
adc
mov
jae
jb
jno
mov
mov
sbb
inc
inc
xchg
lods
mov
cld
ret
test
add
mov
sbb
push
jl
jae
push
out
out
test
ds
mov
mov
repnz
jle
lods
das
aas
mov
dec
scas
dec
in
imul
jae
sub
jns
jae
cmc
sbb
.byte
subl
