sbb
add
mov
jecxz
mov
mov
xchg
repz
aaa
dec
in
add
aam
nop
das
rcrb
or
insb
mov
dec
jmp
and
sub
jge
dec
dec
cmp
xor
ja
lock
mov
jne
xchg
inc
xorb
aad
pop
mov
and
sub
outsb
pop
sub
cmpl
sti
repnz
mov
ret
or
push
loop
mov
dec
call
and
sar
push
xor
inc
sub
insl
gs
outsl
insl
add
mov
dec
sbb
js
mov
mov
cmpsl
out
mov
insb
dec
imul
mov
mov
sub
jb
cwtl
movsl
add
push
out
mov
out
push
inc
pop
int
out
and
das
repnz
shll
fists
cmp
jo
add
repnz
mov
or
test
dec
lds
pop
std
stos
pusha
int
adc
cwtl
mov
cmpsb
lret
pop
or
negl
stc
icebp
movsl
cmc
lahf
pop
cmp
icebp
jg
adc
into
nop
push
rcrl
test
mov
inc
js
imul
and
jno
xchg
inc
and
xchg
call
mov
cmp
dec
fildl
or
xchg
clc
mov
cmpsb
mov
push
sahf
rcr
push
loopne
sub
ja
icebp
inc
sbb
notl
xchg
inc
fcmove
rcll
hlt
test
subps
xchg
movsl
mov
cmpsl
aad
call
and
ficoms
movsl
sbb
mov
into
cltd
es
cli
xchg
add
ret
xor
das
cmp
ljmp
inc
fsubp
fsubrs
out
fistpll
mov
int3
loope
and
cmp
mov
sub
ret
xchg
inc
cmpsb
mov
in
or
xchg
jecxz
cmp
lret
xlat
daa
push
dec
filds
adcl
into
mov
movsl
mov
call
add
out
jne
ds
shrl
mov
dec
out
adc
and
dec
sti
xchg
outsl
repz
out
xchg
add
cmpsb
mov
jecxz
jg
pusha
fistpll
test
aaa
xchg
lds
jmp
pushf
loope
loope
pop
push
xchg
xor
inc
sub
movsb
push
push
push
subb
sbb
or
cmp
dec
mov
pop
leave
xor
pop
cmp
into
pop
pop
dec
cmpsl
out
insb
dec
pushf
sbb
loope
test
inc
pushf
pushw
push
sarb
sub
shrb
xor
lods
jp
cmc
mov
cmpsl
mov
nop
lea
add
lret
inc
je
mov
mov
jae
jnp
inc
popf
repnz
in
js
lahf
out
and
in
scas
dec
push
jmp
xor
jbe
ss
imul
jp
push
xlat
mov
xchg
or
sub
test
clc
enter
mov
repnz
popf
aas
les
dec
mov
mov
jp
std
cmp
lcall
push
or
das
ja
inc
faddl
repnz
notb
pushf
xorl
and
mov
cmp
cmpsl
in
fwait
mov
inc
cmp
fnsave
gs
add
sub
or
clc
sbb
adc
std
adc
mov
lret
add
xchg
lock
jp
sbb
pushf
lret
push
repnz
inc
mov
ret
sub
shl
fiadds
fdivrs
popa
jo
fucomp
pop
popl
psubb
out
add
out
jg
push
pop
iret
test
shlb
pop
inc
fidivl
sbb
inc
jb
dec
mov
rorl
mov
jno
mov
insb
lret
out
inc
out
jle
lods
cmp
cmp
cmp
lret
mov
repnz
das
cmp
cmp
and
add
or
mov
inc
test
and
in
dec
sbb
sub
sbb
xor
pop
inc
ljmp
jnp
cwtl
adc
jmp
fwait
cmp
mov
lds
push
xor
jo
mov
pop
and
push
adc
inc
out
pop
mov
push
outsb
stos
insl
cmp
rcrb
pop
mov
les
jl
cwtl
stc
je
lds
rol
movsb
ds
dec
push
xchg
stc
cli
in
mov
movsb
adc
bound
adc
mov
inc
dec
xchg
or
dec
adc
gs
push
push
aaa
xor
cmp
rclb
iret
data16
mov
mov
cmpsb
push
imul
add
sub
mov
aam
add
jo
outsl
mov
nop
mov
cmpsb
pop
push
mov
out
addr16
mov
jmp
dec
push
pop
mov
push
adc
add
push
xor
sbb
fwait
clc
mov
je
imul
addl
mov
cmpl
add
add
pop
mov
mov
imul
or
ljmp
mov
push
scas
push
aaa
loop
push
sbb
add
sub
or
int
xchg
push
xlat
fdiv
vdivps
cmp
push
out
ljmp
xchg
mov
cmp
mov
and
cmpsb
jne
xchg
stos
sub
rcrb
sub
sub
int
xchg
lret
pop
push
xchg
jno
jnp
adc
addr16
and
cmpsb
mov
push
cmpsl
bound
cmpsl
dec
cmpsl
shll
xchg
mov
pop
ds
push
stos
movb
or
sti
push
stos
mov
and
int
imul
frstor
jno
stos
cmp
xchg
add
lcall
test
std
add
std
sub
and
cmp
mov
stc
xor
push
sbb
mov
sbb
fcmovu
cs
cwtl
sub
popf
das
imul
xchg
lcall
xchg
jg
push
inc
insl
gs
mov
xor
imul
movb
mov
shll
lahf
cmp
jle
add
sbb
xchg
insl
decl
xor
shl
inc
cmp
dec
icebp
jmp
sub
cmpb
xchg
insl
mov
std
xor
jle
push
mov
std
sbb
sub
push
pop
adc
xorb
sbb
cmc
jns
inc
in
les
mov
call
or
cmp
pushf
mov
or
notb
in
mov
dec
stos
push
jmp
jge
idivl
push
add
push
pop
shrl
xor
xor
pusha
iret
and
push
sbb
lods
jge
push
int
fcomp
cmp
dec
or
mov
divb
in
test
sub
xchg
test
xchg
push
dec
mov
push
imul
inc
test
adc
rcrb
leave
das
xor
and
shrb
aad
push
popf
xchg
xchg
jbe
shrb
fcmovnbe
xor
mov
rorb
pop
mov
inc
sub
cltd
ret
mov
rorl
mov
sub
mov
fucom
jp
pop
adc
sbb
sub
pop
jle
mov
pop
inc
in
jle
xchg
inc
jb
rcr
fdivr
pop
adc
loopne
stc
cmp
adc
cs
cmp
loopne
and
mov
nop
mov
das
aad
xor
mov
int3
arpl
jne
pop
mov
rcr
fwait
mov
dec
lods
jbe
out
adc
or
cld
pusha
scas
mov
jg
or
cmp
xlat
loopne
dec
mov
in
loopne
sub
sub
scas
pop
lcallw
sbb
fs
or
mov
add
es
cmp
fwait
xor
ss
inc
insl
stc
scas
xor
xchg
out
test
fwait
mov
inc
jae
sbb
dec
xchg
fdivs
scas
mov
movsl
inc
adc
into
aam
leave
and
flds
add
hlt
lcall
xchg
js
push
ds
stc
push
popa
pop
adc
inc
roll
push
pop
add
out
adc
repz
cltd
mov
icebp
je
xchg
sub
ret
push
das
cmc
fsub
mov
pop
push
jns
jns
stc
dec
into
cltd
inc
jp
cwtl
enter
add
mov
push
popl
rcll
push
int
fidivs
cmp
stc
inc
jno
cmp
jno
ljmp
and
pop
mov
mov
in
iret
ja
adc
or
push
testl
add
jnp
inc
fdivs
mov
pusha
repz
clc
cltd
in
xchg
aaa
out
ljmp
ret
pop
pop
out
xchg
mov
repz
mov
loop
add
xlat
mov
sub
rcl
clc
inc
mov
loopne
sub
add
iret
outsl
pop
cli
push
jecxz
dec
lea
popa
xchg
aaa
scas
scas
lcall
stos
mov
jnp
push
inc
jno
adc
shlb
out
enter
shrb
mov
jnp
dec
mov
mov
cs
mov
add
xor
dec
and
inc
ja
out
sub
rclb
call
xlat
incb
pop
fdivrp
mov
push
fisttpll
cld
sarl
inc
stos
mov
inc
xor
mov
push
mov
aaa
testb
xchg
gs
and
iret
inc
dec
aas
pop
push
enter
inc
test
les
jl
pop
jno
pop
fsub
incl
adc
shr
mov
neg
es
push
out
stos
sbb
adc
sbb
outsl
out
data16
or
and
xchg
add
xlat
mov
sarl
push
test
out
xchg
dec
je
cmpsb
mov
add
stc
sub
loope
ret
arpl
dec
sbb
in
cmp
imul
jb
jnp
test
sub
adc
aad
jle
adc
inc
xchg
xor
xchg
sub
dec
cmp
or
jnp
ret
push
sbb
xchg
jae
add
pop
and
mov
xlat
arpl
nop
push
ja
test
out
mov
rcrl
pop
or
lods
xchg
adc
clc
mov
repz
shr
cmp
jl
sub
aas
cs
push
xchg
inc
sbb
add
in
sbb
sub
cmpb
xchg
dec
cmpsl
sub
bound
adc
cmc
les
movsb
fs
out
sub
sbb
or
cmp
les
dec
mov
push
jle
mov
jecxz
mov
ds
sub
fadd
mov
push
dec
fstp
lods
and
mov
inc
cwtl
jg
adc
addl
clc
xor
pop
sbb
pop
loopne
jmp
jge
or
es
pop
xlat
or
pop
fstl
das
push
inc
mov
jp
dec
sub
jbe
outsl
fs
mov
and
sub
enter
nop
imul
add
xchg
lret
jecxz
xor
xchg
xchg
inc
subb
inc
aam
pushf
sub
dec
and
out
in
out
cli
iret
jb
jnp
outsb
jo
mov
ljmp
mov
mov
add
inc
xor
sub
stos
call
std
xor
pop
out
xor
mov
pop
mov
imul
clc
repnz
xor
adcb
dec
pop
push
pop
hlt
xchg
das
mov
nop
inc
ror
jle
xchg
push
cmc
rclb
sub
add
lods
aad
cmp
dec
inc
adc
and
int
push
ljmp
inc
push
push
aam
sahf
xchg
pusha
mov
xchg
mov
out
fidivrl
stos
xchg
xchg
adc
ljmp
cmp
inc
pop
jp
test
mov
cmp
xor
je
jmp
mov
fstps
stos
data16
pop
addl
rcll
arpl
jno
cmp
cmp
pusha
insl
mov
cmp
inc
inc
sahf
nop
ss
sbb
xchg
das
jmp
dec
sbbb
mov
daa
jbe
cltd
push
lods
gs
cmpsl
xchg
push
loop
out
movsb
pushf
sub
mov
jecxz
sarb
xchg
loopne
push
mov
outsb
data16
xor
call
mov
scas
jle
cltd
pop
int3
mov
enter
aam
xchg
aam
cld
sbb
inc
adc
in
leave
sbb
inc
xchg
push
sub
dec
push
jo
sti
sar
pop
leave
mov
fisttpl
lods
lds
adc
and
jp
add
leave
push
mov
inc
mov
iret
fcoms
adc
lock
mov
mov
dec
cmp
or
aad
je
cmp
xchg
pusha
pusha
scas
test
inc
inc
xchg
inc
inc
mov
pop
aad
in
cli
xchg
push
cmp
add
mov
test
int
jo
aam
mov
push
sbb
push
xor
or
adc
icebp
mov
sub
and
aam
insb
xchg
add
fsubs
push
stc
call
rcl
or
out
sub
push
aad
daa
cmp
imul
and
lock
cli
cmp
scas
js
inc
ss
xor
leave
sub
sub
cmpsl
int3
ss
enter
adc
clc
inc
xchg
sub
lcall
xor
xlat
xchg
rcll
rorl
ljmp
mov
flds
cmp
call
ret
in
cmpsb
js
mov
xchg
dec
cmpl
and
pusha
cmc
pop
mov
adc
fistpll
mov
push
lods
add
sbb
cmp
pusha
aaa
inc
adc
xor
mov
out
lcall
das
pop
lds
pop
test
pslld
and
xchg
sub
xor
mov
pop
xor
jae
dec
mov
int
jno
in
xor
jp
ficoml
push
xor
std
add
cmp
pop
adcb
mov
enter
test
push
mov
cld
jp
insl
xchg
data16
hlt
cmc
add
das
mov
xor
push
and
mov
orb
xlat
sbb
inc
mov
cmp
mov
pop
mov
push
adc
lds
jl
xchg
aas
lock
lahf
sbb
cmp
loope
xchg
push
adc
mov
je
pop
movsl
jns
push
inc
cwtl
lret
js
out
push
jae
push
bound
mov
adc
sub
adc
iret
roll
lods
stos
add
mov
and
test
int3
cmpsl
ljmp
rcrb
repnz
add
jne
jo
jmp
out
les
enter
mov
call
imul
mov
mov
addr16
xor
in
inc
ret
pop
les
stos
scas
push
cmp
popf
and
sbb
sub
cmp
mov
int
sahf
dec
fldenv
cmp
add
dec
jo
cmpb
pop
adc
fisttps
int
push
fldenv
xchg
sbb
mov
fs
fisubs
xchg
pop
lods
jns
jnp
inc
pop
test
loop
mov
inc
xor
lds
loopne
testb
cmp
std
movl
bound
loopne
addb
in
loopne
mov
mov
fsub
lods
xchg
cmp
call
enter
or
movsb
cwtl
jecxz
movsb
dec
sub
outsl
rcrb
arpl
jo
bound
addl
mov
sub
push
ja
rorl
fildll
mov
nop
out
sub
adc
iret
aas
or
in
stc
mov
xchg
jge
cli
adc
xchg
ja
cmp
jecxz
add
or
jne
jle
sbb
repnz
dec
push
push
cmpsl
aas
mov
and
mov
dec
cmc
movl
dec
cmp
aas
je
mov
iret
or
mov
ja
repz
push
adc
sub
add
addr16
xchg
pop
sbb
sub
lahf
test
fdiv
lods
push
jnp
ret
mov
gs
pop
int
repz
add
pop
push
mov
xor
pop
push
push
int
repnz
into
out
addr16
cmpps
fistl
jb
aad
int
cltd
inc
inc
xor
pusha
adc
pop
push
sbb
imul
jl
pushf
xor
push
and
das
test
outsl
push
bound
mov
xlat
adc
sbb
dec
sub
or
iret
xor
cmp
cmp
out
iret
push
add
jno
lea
ljmp
in
fwait
dec
or
rcll
xchg
xor
loop
adc
add
jno
mov
cmp
lcall
xchg
jae
add
sbb
or
inc
push
mov
das
dec
jb
mov
out
idivb
mov
xchg
gs
data16
dec
mov
lahf
dec
pop
or
mov
mov
arpl
adc
or
popf
rcrb
mov
sbb
mov
ja
cmp
bnd
mov
push
call
sub
test
adc
push
mov
ret
mov
jnp
fwait
pop
fists
push
insb
cmp
cmpsl
dec
xchg
sub
lret
mov
fiaddl
mov
ds
push
push
fdivs
scas
mov
call
cmp
lods
ret
sub
mov
jo
clc
sbb
repz
pop
aas
xor
mov
push
stc
dec
mov
int
pop
dec
xor
ror
jb
fwait
movsb
test
lds
jns
push
js
js
inc
or
loope
push
test
fbstp
mov
jl
js
outsb
or
lret
insl
xchg
adc
testb
jp
aas
scas
sub
scas
mov
popa
or
gs
outsl
icebp
or
xor
test
xchg
fwait
lods
pop
movsb
and
add
leave
cltd
cmp
cmpsl
jno
xchg
pop
jbe
and
xchg
movsb
insl
iret
pop
mov
xchg
int
pop
sub
mov
in
push
nop
idiv
dec
iret
xlat
inc
lret
push
cwtl
dec
sti
cmp
in
xchg
pop
out
mov
jecxz
inc
cmp
xchg
lahf
cmpsb
jg
mov
xor
sub
xchg
mov
cmp
shr
dec
adc
cmc
adc
in
fmull
ja
xchg
dec
into
adc
add
std
in
xor
test
push
test
dec
lret
daa
sbb
lea
pavgb
sbb
cmp
xor
inc
mov
cmp
cmp
sarb
mov
jle
dec
int
push
psubq
push
sub
push
outsb
movsb
mov
pop
std
movsl
mov
cmpsb
ds
in
stos
mov
pop
icebp
sbb
dec
lods
cmp
fistpl
loop
dec
xchg
movsl
cmp
pushf
xlat
jo
fidivrl
shll
rclb
pop
mov
sub
rorb
shl
dec
sub
cmpsl
xchg
and
les
clc
xchg
push
nop
push
dec
xlat
fimuls
fwait
sbb
test
decb
fdivr
iret
leave
and
push
in
mov
mov
adc
mov
movsl
sti
mov
jecxz
addl
mov
cmpsl
xor
cmp
enter
hlt
test
sbb
in
or
or
out
dec
pop
jg
pop
dec
pop
sub
push
mov
sahf
dec
outsb
pop
or
lcall
cmp
and
adc
mov
jl
mov
lret
inc
xchg
dec
add
mov
daa
rcr
ret
or
sbb
outsb
pushl
test
mov
lret
leave
sub
rcl
mov
out
cltd
add
lock
fstps
ss
movsb
movsb
and
adc
cmp
mov
loop
inc
cli
cwtl
aaa
mov
clc
stos
hlt
fldenv
or
dec
sub
cli
cwtl
cld
repnz
and
out
test
xchg
xor
push
stos
add
stos
nop
mov
stc
xchg
sub
cmpsb
and
movsb
fisttpll
jl
pop
or
jb
loop
stos
xchg
fs
inc
or
addr16
dec
or
bound
popf
push
push
ret
cwtl
into
pusha
mov
nop
lods
cmp
push
stc
dec
push
inc
mov
jb
scas
shrl
jge
nop
int
sub
xor
fistpll
loop
xchg
pusha
adc
adc
cmp
or
shrl
outsb
push
std
mov
fnsave
shrb
xor
sbb
test
inc
lea
test
xlat
inc
sbb
vmovd
add
faddl
sub
mov
xchg
mov
pop
aad
lods
inc
push
insb
sbb
enter
mov
adc
inc
add
faddl
adc
mov
push
and
xor
mov
sub
xchg
push
movsl
xchg
xchg
add
pop
mov
sbb
mov
inc
movb
dec
out
call
sub
js
and
into
add
sarl
fbld
sbb
hlt
dec
inc
mov
xchg
inc
adc
ficomps
push
pop
mov
dec
xchg
pop
std
jp
and
lods
test
lods
add
lret
scas
xor
pop
call
imul
mov
out
mov
mov
mov
sar
sarl
add
jmp
ds
inc
mov
cmpsb
into
sbb
pop
pop
aaa
jecxz
test
leave
inc
jl
xor
adc
arpl
lret
xor
nop
mov
add
inc
jno
lret
insb
outsl
repz
and
nop
outsb
inc
test
jb
mov
adc
pop
fnstsw
lods
and
insb
xchg
inc
mov
dec
add
sbb
xchg
jne
lods
or
je
mov
sti
sbb
jge
push
add
pop
jae
sbb
mov
mov
movsl
cmp
xor
push
xor
sub
pusha
fstps
ret
jnp
inc
loope
and
lcall
adc
js
int3
mov
out
sub
jno
int
push
mov
imul
nop
shll
pushw
and
test
jae
outsl
fisubrl
repz
jns
fildll
pop
mov
std
test
mov
push
pushf
enter
test
fnstsw
or
adc
xchg
mov
jb
dec
mov
addr16
xlat
out
jbe
cmp
pop
fimuls
pop
push
insb
arpl
cmp
jmp
sub
jl
andb
xor
cmc
sub
or
adc
addr16
dec
bound
cwtl
sub
aad
std
cli
xor
xlat
jmp
cmp
out
repnz
push
fldcw
gs
fcomps
stc
addb
cs
mov
dec
dec
out
sub
lock
into
mov
cld
int3
adc
in
scas
sub
cmp
inc
dec
pushf
in
ror
xchg
call
repz
cwtl
or
es
inc
cmc
cli
stos
in
push
push
sbb
push
data16
or
sub
xbegin
pop
or
sub
ret
jmp
in
jmp
sbb
add
pusha
adc
mov
cmp
stos
shll
fnsave
inc
push
mov
arpl
adc
xor
and
hlt
or
xchg
fst
sahf
mov
ficomps
ret
mov
sahf
aas
xchg
ret
adc
fidivl
dec
scas
lods
xchg
sbb
and
mov
dec
fwait
stc
inc
mov
cmp
ss
xchg
arpl
mov
jge
test
mov
jle
pop
or
jge
mov
ret
inc
adc
jge
cmpsb
int3
inc
pop
dec
bound
bound
cmpsl
push
inc
hlt
jno
in
mov
movsb
push
lds
mov
and
push
shl
push
push
lods
rcrl
mov
add
push
orl
imul
lcall
enter
mov
popa
add
add
ret
nop
dec
ljmp
or
push
add
and
out
jbe
or
jp
outsb
inc
fdivl
inc
adc
xchg
fisubs
in
xor
xor
shr
lahf
inc
cmp
iret
lods
xchg
add
jae
fs
std
pop
sbb
inc
xlat
xchg
inc
scas
into
ja
and
lret
lret
les
jo
jmp
in
in
test
mov
negl
icebp
adc
cli
and
sbb
or
int3
cmpsl
in
mull
test
xchg
js
or
fisttpl
js
cmp
jae
lods
test
imull
mov
lret
dec
hlt
lret
jp
push
pop
sub
test
mov
lock
loopne
mov
and
shrd
pop
loopne
adc
shll
lahf
gs
mov
push
in
xor
sbbb
jl
adc
cltd
icebp
cmp
inc
sbb
push
aaa
pop
bound
cmp
es
xor
add
add
cld
xchg
imul
mov
cltd
xchg
add
icebp
ret
mov
xchg
lcall
mov
lods
das
jge
add
adc
popf
enter
mov
gs
pop
fnstenv
mov
mov
add
cld
icebp
jb,pn
sub
push
add
adc
inc
orl
push
std
inc
dec
and
ror
nop
pop
loopne
cmp
popf
cmp
pushf
pusha
sub
cmpsb
jmp
sbb
andl
push
test
bnd
mov
fwait
jecxz
addr16
ljmp
xor
out
sub
cmp
jne
jge
ljmp
andb
stos
mov
les
std
call
into
push
icebp
ljmp
dec
pop
or
movb
idivl
cltd
jne
mov
push
testb
sub
inc
push
loop
test
ret
stos
pop
dec
push
xor
or
shl
xchg
lcall
in
test
idivb
mov
lods
pop
lds
lret
mov
jmp
xchg
inc
movb
push
div
or
int3
mov
repnz
out
inc
pop
jno
jge
push
aaa
xchg
cmp
ret
sahf
imul
fwait
mov
mov
pop
scas
int
fldt
sbb
into
jbe
mov
loopne
jns
hlt
or
std
xor
fisubrl
xchg
and
pusha
add
mov
add
into
xchg
jnp
adc
inc
cmpsb
mov
out
shlb
and
sub
mov
xor
add
mov
push
pushl
test
push
std
out
js
sub
cwtl
sti
mov
movsl
movsl
imul
jle
fidivrs
push
addr16
sub
leave
and
scas
mov
sbb
jne
lods
add
push
pop
jg
shlb
repz
sbb
notb
scas
aad
cltd
add
sub
lds
aas
pushf
enter
jg
pushf
push
cmp
outsb
add
mov
dec
imul
jecxz
xchg
jmp
dec
jp
int3
aam
dec
movsb
add
sub
sahf
and
int
dec
cli
mov
pop
mov
aas
dec
shrb
mov
push
add
pop
jnp
inc
push
push
dec
clc
fsubr
mov
pop
std
pusha
lea
movsl
cs
in
les
push
test
fwait
outsb
pop
nop
mov
xchg
jbe
cs
xchg
les
and
ds
jo
cmp
aam
add
mov
jp
fwait
dec
sub
insl
fsubl
mov
imul
pop
pop
inc
jmp
rcll
or
add
adc
push
rcrl
scas
addr16
out
fistpll
gs
mov
shl
mov
addr16
sub
arpl
or
mov
aad
arpl
pusha
sub
sarl
popa
jbe
xor
xor
push
out
lods
xor
std
and
inc
and
fsts
push
inc
or
sub
repz
orb
lock
outsl
mov
movsl
out
ss
and
clc
jo
bound
sub
psrlw
flds
mov
cmp
push
xor
push
dec
sub
hlt
sub
scas
push
daa
nop
sub
mov
popf
repnz
inc
push
imul
mov
sbb
loop
daa
ljmp
std
inc
pusha
fprem
xchg
dec
dec
xchg
mov
sub
lret
orb
fistl
rorl
rcrb
outsl
cmp
adc
data16
stc
add
dec
or
mov
dec
add
test
mov
add
sub
push
dec
sbb
pushf
jg
lret
pop
push
mov
xchg
lea
push
xorl
xchg
xor
mov
push
lahf
dec
dec
jns
cmp
ds
mov
jne
ficoml
mov
inc
xor
add
jmp
and
shl
mov
imul
mov
pop
inc
dec
inc
mov
mov
xchg
pop
mov
cs
cmpsl
int
jp
jno
repz
jmp
mov
adc
adc
outsb
lcall
xchg
mov
push
out
nop
into
in
in
mov
and
cmp
in
push
adcb
mov
push
aad
jp
sahf
push
test
sbb
add
out
jnp
xor
frstor
lea
cmpsb
in
push
test
lods
rcrl
adc
sbb
outsl
pop
cmp
cld
push
popf
sub
jae
call
sbb
icebp
icebp
insb
sub
pushf
lret
xchg
ds
xchg
adc
enter
idivl
inc
loope
pop
clc
pop
shll
push
loop
imul
bound
xlat
stos
and
filds
pop
cmp
jg
in
dec
lds
stos
sbb
push
mov
out
idiv
icebp
inc
es
iret
or
mov
cmp
ret
sbb
inc
inc
test
mov
mov
test
cmp
sub
push
mov
sbb
mov
repnz
pop
push
mov
shl
je
orl
fcomps
bound
lahf
cmp
pop
dec
aas
mov
push
xorb
test
es
lds
xchg
decb
sub
rclb
and
dec
mul
adc
je
and
pushf
xor
fldt
lcall
inc
insb
add
in
cmpsl
ret
rorb
mov
sub
outsb
imul
xor
cmpsb
lods
pop
repz
ljmp
bound
push
inc
xorl
cmp
jb
or
push
cmp
es
adc
cs
lods
mov
movsl
inc
or
frstor
sbb
hlt
mov
fwait
dec
adc
jle
pop
in
mov
lods
mov
cli
pop
jne
xor
sbb
je
mov
jo
pushf
fcompp
mov
and
icebp
dec
cmpsb
in
cmp
nop
mov
add
fnstsw
mov
jle
pusha
mov
cmp
enter
mov
lock
lcall
add
adc
repz
cmp
leave
or
xchg
adc
data16
sub
int3
out
ds
scas
jmp
jl
add
xlat
push
sub
test
push
in
inc
ds
bound
ret
mov
lahf
out
push
mov
fnsave
sub
push
jbe
imul
insl
xchg
lcall
push
adc
and
out
int3
ljmp
xor
out
mov
int3
fs
fwait
ret
outsl
and
mov
mov
scas
cmpsb
sarl
out
dec
add
imul
adc
and
sbb
scas
xor
fstl
mov
outsl
xor
jge
fstps
mov
call
cmp
sahf
rolb
sbb
jle
loope
addb
filds
jge
xor
dec
pop
outsl
shlb
adc
inc
loop
dec
cmc
inc
jg
inc
test
sub
or
inc
pop
popf
xchg
mov
mov
mov
and
cmp
and
mov
add
sub
testb
dec
pop
lea
int3
jbe
and
out
inc
or
leave
shrb
in
ljmp
xlat
sbbb
int
mov
hlt
mov
out
xchg
dec
fwait
cmp
fsubr
xlat
in
mov
jb
add
outsw
and
das
sbb
movb
push
cld
cmp
call
cmpsl
sub
sub
cmp
mov
cmp
inc
scas
mov
push
push
mov
hlt
sub
ljmp
fcmovnb
mov
cmpsb
les
jno
iret
dec
cmp
cmpl
les
cmpsb
mov
mov
icebp
mov
xchg
std
scas
int
add
jo
or
enter
mov
js
mov
fs
adc
aaa
popf
xchg
cmp
imul
sub
daa
sarb
repnz
push
movsb
dec
xchg
mov
jne
adc
dec
sti
mov
pop
xchg
and
clc
cmpsb
cltd
loop
stc
sub
push
xchg
lods
xorl
xchg
mov
mov
adcl
xchg
mov
mov
jb
push
movsl
loopne
cmc
sti
in
sbb
lcall
sahf
cmc
sti
dec
jae
pop
addr16
fsubs
ret
insb
mov
sbb
jg
je
in
cwtl
lock
and
pop
push
sbb
aas
jecxz
loope
arpl
cs
cs
jno
adcb
int
and
mov
xor
adc
lds
sub
aad
pop
daa
popa
mov
pop
shll
unpckhps
jl
insl
int
inc
push
jo
test
dec
test
or
push
mov
push
xor
push
lret
out
push
int3
jmp
scas
test
xchg
inc
jmp
icebp
sbb
jp
jecxz
movsb
pop
push
sbb
sbb
rol
rolb
mov
lods
jl
lock
sbb
fistps
mov
loopne
inc
lahf
iret
fcmovne
push
mov
out
add
insl
mov
pavgw
lock
add
ret
inc
cmpsl
cmp
push
movl
cmpsl
inc
pop
cmpl
data16
test
adc
movsb
mov
arpl
das
test
test
lods
sub
das
out
imul
stos
sbb
roll
in
dec
mov
aas
inc
sub
dec
jae
xchg
gs
pop
inc
xchg
mov
outsb
inc
fldt
cmpsl
inc
jmp
stos
insl
sbb
iretw
xor
lock
movsb
push
cmpsl
rolb
mov
sti
sub
iret
adc
pop
inc
jp
rcr
push
or
jecxz
mov
imul
pop
insl
jno
mov
inc
push
jl
mov
xchg
xor
push
rorb
xor
inc
insb
aas
jge
inc
cmp
add
mov
push
xchg
ret
lret
call
mov
popf
insl
cmc
fiaddl
rcrb
mov
ficoms
inc
ret
int3
leave
xchg
sbb
hlt
sbb
jne
jno
inc
lret
test
xchg
sarb
inc
xor
push
xor
pop
cmp
jae
xchg
frstor
add
rclb
pop
test
push
mov
and
sbb
out
loope
into
lcall
xor
adc
inc
ss
sbb
jb
mov
lcall
mov
xor
pop
hlt
push
mov
pop
mov
aas
ss
xlat
mov
mov
stc
jg
sbbl
pop
movsl
testl
sub
sbb
stos
imull
in
or
cmp
test
xchg
jecxz
inc
out
mov
xor
mov
movsl
and
repnz
mov
insl
das
mov
xor
ja
arpl
mov
shlb
sub
or
enter
jbe
or
adc
adcl
addr16
inc
sbb
testl
jno
pop
sbb
stos
mov
mov
inc
mov
sbb
dec
adc
sub
adc
push
or
stc
call
rcl
cmpsb
xchg
mov
sbb
lahf
mov
sar
mov
icebp
jbe
cld
mov
arpl
into
sub
lds
push
jl
lahf
cwtl
in
pop
cmc
jae
pop
push
lret
push
mov
js
clc
je
pop
jmp
mov
fbstp
daa
shr
in
outsb
int3
jae
adcb
mov
or
fcmovnu
pushf
inc
and
jnp
mov
pop
rolb
ret
movsl
lahf
and
jno
sub
xchg
xchg
mov
js
fs
lock
addr16
jle
and
jae
sahf
xchg
loop
pop
cmp
fucomip
jnp
push
js
jnp
mov
negb
fistpll
cmpsl
out
push
inc
add
aas
lods
dec
push
adc
mov
js
mov
adc
mov
pushf
cmp
xor
ss
mov
xchg
sahf
adc
or
dec
shl
stc
movsl
int
lods
sbb
movsl
sbb
cmpsl
xlat
in
or
adc
xchg
gs
enter
addr16
enter
xchg
dec
xchg
xor
sti
movsl
call
clc
dec
and
add
aam
cmpsl
adc
jnp
mov
lods
mov
mov
pop
sbb
enter
cmp
sub
jo
xchg
cltd
mov
adc
or
mov
pop
insb
movb
sub
in
mov
adc
sarl
sti
jmp
jns
es
sbb
jg
dec
or
cld
dec
dec
lock
or
pusha
cmp
xchg
imul
mov
jmp
cmc
dec
repz
in
mov
adc
aad
cli
or
sub
adc
movntq
xchg
push
dec
adc
ss
adc
or
test
sti
add
cmp
jne
mov
xor
jp
shrl
sbb
popf
cmpb
mov
jle
pop
pop
and
lds
nop
and
rcr
cmp
sbb
fdecstp
cmc
add
les
adc
cli
fmull
sbb
dec
xor
je
mov
mov
jmp
enter
push
inc
pushf
sahf
jmp
pop
sbb
dec
jecxz
and
jb
shr
push
jge
loopne
xlat
pop
les
or
lods
call
mov
fs
bound
aas
inc
stos
and
inc
fmulp
daa
push
daa
rolb
and
stos
rclb
inc
adc
sub
jecxz
cmpsb
sbb
dec
dec
lcall
xchg
adc
mov
lods
push
cmp
push
loop
pop
xchg
dec
fidivl
jp
jle
and
jno
shrl
mov
loope
dec
mov
add
mov
inc
jnp
sub
push
mov
aad
cmpsl
mov
out
cli
lods
imul
aam
cmp
fsubrs
add
xchg
in
pop
jp
outsb
jge
xor
int
dec
pusha
xlat
xchg
mull
add
mov
out
cli
out
mov
sahf
dec
js
xchg
mov
cli
mov
xchg
stc
out
mov
mov
enter
xor
mov
inc
clc
notl
mov
cld
fdivp
push
sbb
pop
cwtl
and
fidivl
adc
test
fwait
aas
ret
fdivl
inc
xor
outsl
shrl
cmpsb
dec
mov
ljmp
iret
imul
mov
test
mov
in
jecxz
ss
sub
dec
out
cli
es
cs
hlt
and
add
es
pop
dec
cmp
out
cmpsb
push
inc
pop
data16
stos
cmp
push
js
repnz
bound
xchg
xchg
jbe
inc
stos
lcall
cmc
loop
cwtl
fsubs
cmp
jno
aas
loop
sbb
push
cmp
push
xor
lahf
aad
ret
inc
mov
pop
je
lcall
push
pusha
outsb
jbe
shll
mov
faddl
aas
adc
roll
sahf
ret
jo
add
negb
sbb
mov
adc
and
xchg
fsts
adc
jo
xchg
loop
int
or
test
aaa
fstps
push
cltd
dec
lock
adcl
lahf
leave
out
cmc
mov
jge
and
adcb
cmp
loope
mov
outsb
pop
js
and
adc
cwtl
in
inc
inc
jg
mov
pop
mov
mov
lea
into
in
ss
mov
and
inc
mov
jbe
hlt
fsubp
xchg
xor
dec
pop
adc
cltd
mov
and
sub
testl
pusha
jecxz
mov
push
mov
je
mov
xchg
lods
nop
mov
jbe
push
int3
mov
scas
stos
out
cmp
dec
nop
dec
movsl
fadd
arpl
mov
ja
lret
push
shrb
fistpl
adc
push
aas
in
xlat
not
sbbb
es
loopne
jnp
lods
popf
mov
dec
cs
fldenv
stc
das
adc
cli
adc
sti
inc
fcmovne
cmp
cmp
adcb
movsb
jge
and
fwait
subl
loopne
mov
dec
mov
push
sahf
insl
fistpl
sub
lret
adc
fcompl
clc
enter
mov
push
out
mov
mov
push
or
lcall
and
adc
call
andl
ret
hlt
or
lods
add
adc
pop
or
movsl
pop
in
insl
js
lds
leave
cwtl
xor
jnp
sbb
movsb
or
insb
pusha
lods
or
jnp
mov
mov
idiv
push
pop
cld
mov
or
test
mov
movsl
cli
or
sbbb
lret
jl
cwtl
into
sbb
and
mov
cmp
rol
fldenv
and
mov
jo,pn
rol
leave
fsubrl
xor
les
hlt
push
add
pusha
mov
cmp
test
lahf
dec
lock
push
repnz
jno
jmp
jbe
push
push
add
fidivs
and
aaa
lea
cmp
cvtdq2ps
dec
lahf
cmp
push
and
xor
stc
mov
pop
sbb
imul
hlt
lret
ret
divb
in
mov
lret
push
subb
sub
mov
stc
outsl
mov
scas
push
xchg
pop
outsl
into
push
stos
fmuls
pop
inc
xchg
aaa
lret
inc
dec
aas
mov
shrb
ffree
test
sti
pop
xor
pop
stos
push
xchg
push
mov
push
fldl
add
dec
push
iret
test
cmp
enter
ljmp
and
mov
sbb
inc
movsb
add
or
fadds
jbe
pop
xlat
xchg
fdiv
adc
inc
push
lahf
movsl
hlt
popa
loope
dec
popa
and
repnz
rcll
cmpsb
loop
out
sub
jnp
lods
movsl
xlat
mov
ret
mov
and
test
in
divb
pop
mov
in
fdivs
adc
dec
add
jle
xchg
mov
iret
data16
jb
jecxz
mov
inc
jg
push
xchg
push
sarb
jo
xorl
lret
xor
push
out
les
in
cmpsb
jne
int
or
iret
or
mov
aad
not
dec
out
push
ja
lret
push
xor
xor
addr16
mov
cmp
repnz
add
sub
test
and
scas
xlat
cmc
lret
aam
ss
rcll
jns
bound
mov
fsubrl
dec
jnp
push
je
cs
ret
mov
insb
cld
ljmp
popf
adc
add
cmp
in
add
sbb
mov
cmp
pop
xor
pop
fisubl
dec
iret
sbb
xchg
in
push
inc
mov
sbb
sub
iret
lret
jne
addr16
mov
incb
cli
cmp
jbe
mov
call
mov
sbb
mov
cmc
pop
sub
into
mov
cli
pushf
cmp
jge
aaa
mov
and
adc
jbe
and
rol
dec
push
lods
push
popa
pop
inc
cs
jb
scas
adc
sbb
in
sbb
push
adc
or
mov
fimull
aas
xchg
aad
lcall
push
xor
xor
pop
ret
mov
add
lea
scas
out
pop
pop
ret
pop
popa
movsl
js
pop
popf
nop
jge
adc
ret
xorl
inc
addr16
push
mov
inc
push
push
int3
pop
push
loop
shrb
cmp
daa
jae
xor
xor
jae
mov
mov
xor
sub
lahf
adc
addr16
or
jae
fstps
or
mov
cwtl
mov
insl
mov
jmp
xchg
mov
int
sub
mov
dec
int3
and
sahf
aam
xchg
lods
scas
sti
lahf
sbb
sbb
mov
outsl
inc
out
mov
pusha
das
jle
imul
sub
adc
mov
stc
lods
jnp
mov
dec
fisubrs
or
loop
add
sub
sbb
int3
cmc
jns
sbb
into
je
inc
cmp
sub
or
cmc
pop
inc
adc
dec
cld
es
jo
sub
jbe
lret
mov
adcl
sbb
add
outsb
and
cwtl
sbbl
fisubs
out
shrl
mov
pop
sbb
xor
aam
mov
sbbl
push
notb
hlt
jge
sbb
push
popf
ss
push
stc
mov
and
cmc
and
pop
call
dec
dec
sbb
out
push
repnz
movsb
lret
fidivl
ret
add
imul
outsb
jle
and
test
addr16
or
jb
aaa
outsb
mov
xor
in
xor
sbb
call
xor
pop
mov
push
or
xchg
and
mov
not
fs
or
dec
sub
pop
scas
push
xor
sar
xor
adc
or
sub
sbb
dec
push
sar
stc
sbb
arpl
lahf
test
imul
iret
insl
sbb
pop
ret
js
jo
jg
mov
xor
test
dec
das
lods
fwait
jae
call
mov
addr16
scas
ret
and
ss
mov
das
dec
out
xchg
lds
in
mov
divb
scas
fldl
in
mov
push
stos
jnp
pop
incl
push
nop
xchg
aaa
mov
loope
aaa
inc
ss
aad
rcrb
adc
mov
es
rcl
jae
jbe
add
dec
enter
push
xor
outsb
inc
repnz
shrl
mov
push
sbb
cmp
push
aaa
shrl
push
xchg
fiaddl
mov
test
and
gs
push
fidivrs
lock
lret
enter
js
mov
lret
jb
push
cmp
das
es
stos
pop
or
jae
jns
shll
enter
pop
in
mov
push
pop
push
out
shlb
lods
imul
push
xchg
dec
loope
in
cmp
dec
dec
jbe
mov
push
xchg
in
outsl
cli
movsl
aad
sub
xchg
push
xchg
nop
mov
data16
jne
sub
fucom
mov
sub
lea
in
clc
cs
addr16
stc
mov
ljmp
repz
test
sbb
dec
loope
imul
sahf
mov
sbb
ds
add
incb
jno
out
test
aaa
ja
in
mov
pop
fwait
cli
insb
and
das
enter
sbb
push
js
rclb
insl
jp
jbe
mov
xchg
mov
das
dec
dec
test
push
in
test
lret
clc
repnz
sbb
mov
lcall
ljmp
inc
mov
or
jnp
jno
xchg
aas
mov
add
mov
cltd
into
and
adc
scas
mov
dec
movsb
push
aad
sahf
sub
adc
add
inc
enter
popf
dec
jnp
sar
icebp
leave
int3
fcoms
popa
stos
and
sbb
repz
clc
xchg
movsb
cmpsb
push
dec
add
in
in
cltd
ljmp
icebp
pop
pop
mov
insl
sbb
inc
push
jmp
imull
stc
stc
leave
mov
notl
fisubrl
popa
xor
pop
sbb
inc
cwtl
jmp
or
dec
sub
imul
andb
shll
idiv
add
out
cmp
inc
sar
add
mov
fs
hlt
shrb
or
sub
or
dec
stos
daa
out
jb
mov
lods
loope
ja
or
les
mov
lahf
push
out
mov
test
or
shr
ror
add
imul
jo
cmpb
int3
sub
dec
outsl
sbb
or
xchg
xor
jae
sbb
fdivl
mov
cmpsb
pop
jmp
fs
mov
clc
sbb
jbe
aad
sbb
mov
xchg
jo
dec
inc
push
mov
test
mov
adc
mov
or
into
xor
adc
mov
fnstsw
lcall
clc
add
cmp
insb
jg
nop
subb
fmull
in
enter
clc
xor
and
scas
jnp
dec
dec
sub
arpl
and
xchg
jle
into
push
adc
shlb
pop
push
cltd
pushl
mov
push
cmpsl
scas
lahf
push
xchg
lea
inc
fcoml
in
popf
mov
popl
xor
mov
sub
inc
mov
movsl
adc
mov
test
xor
fs
push
scas
out
mov
hlt
ret
jo
or
call
ret
scas
lea
ds
xchg
aaa
loopne
mov
cs
clc
fcmovu
inc
cmp
orb
jecxz
incl
mov
jg
std
lret
pop
fadds
pop
jp
xor
adc
mov
or
lods
fdivrp
in
pop
jge
aad
jbe
push
mov
xchg
js
call
cmpsl
aaa
out
lret
rorl
dec
xchg
sub
mov
or
push
pop
mov
sbb
int3
xor
fdivs
popa
add
movsl
xchg
lcall
mov
inc
in
jb
ja
notl
in
je
cli
mov
mov
pushf
iret
or
fs
push
xchg
mov
mov
ja
sbb
shrb
loope
and
mov
dec
jne
mov
mov
mov
in
jae
addr16
cs
js
push
and
mov
sub
adc
xor
adc
jp
in
dec
ret
or
in
xchg
jle
mov
pop
push
lret
pop
xor
cmpsb
aaa
jne
sbb
das
mov
jae
pop
pop
leave
add
mov
cs
jecxz
xor
movl
cwtl
out
or
or
ljmp
sbb
ret
fdivrl
mov
xchg
jnp
xchg
adcb
jne
adc
movsb
icebp
adc
stos
push
dec
sbb
out
in
jae
mov
dec
xor
dec
xor
addr16
outsb
cmpl
and
push
adc
repz
dec
jecxz
and
shrb
push
xor
pop
hlt
and
sub
fwait
sahf
out
mov
push
inc
pusha
xchg
lock
cmp
push
je
fdivl
xor
push
loopne
push
adc
lcall
pop
fldenv
xor
add
xchg
stc
lods
or
pushf
out
xor
fwait
fwait
mov
call
xor
pusha
fists
cld
inc
pop
lahf
dec
test
mov
adc
or
sbb
rcr
sbb
nop
cmp
sbb
mov
mov
lock
je
daa
repnz
push
jae
jl
pop
xchg
repnz
test
xchg
pop
scas
cld
mov
pop
push
fs
loop
mov
mov
jns
adc
sbb
dec
insl
int3
mul
fisttpll
add
or
nop
adc
es
pusha
in
pop
jg
jle
das
lea
and
sub
add
lods
hlt
xlat
adc
insb
mul
mov
fcoms
mov
sbb
xchg
xor
jnp
mov
xor
xchg
scas
xor
subb
loopne
je
push
gs
cld
inc
test
mov
das
movl
test
mov
mov
dec
in
or
arpl
int
or
leave
inc
fwait
movsl
mov
sbb
dec
pop
adc
fmull
xor
je
cli
js
cli
push
popf
jne
js
arpl
mov
loop
scas
push
andb
add
fs
les
sub
push
or
jge
jae
sub
outsb
push
push
xchg
jbe
cmp
lea
xchg
adc
mov
pop
dec
sub
insl
shlb
cmpl
sti
cmc
mov
std
pop
mov
push
xorb
cmpsl
loop
mov
fdiv
pop
sbb
loopne
inc
xor
add
jl
imul
and
aaa
pop
xchg
jae
mov
push
insb
sbb
sbb
loopne
lret
movsb
inc
leave
test
cwtl
inc
into
idivb
push
sub
sbbb
cwtl
cmp
push
dec
fidivrl
sbb
mov
or
test
push
dec
lods
pop
je
pusha
test
jge
clc
addl
pop
out
subb
dec
sbb
add
sub
popa
je
dec
idiv
fsts
sub
pop
pop
lret
pop
test
xchg
xchg
pop
cmp
mov
aas
sbb
fsts
mov
mov
sbb
rcr
xchg
push
inc
jnp
fcmove
adc
and
sbbb
mov
mov
jmp
loopne
xchg
jmp
cli
jae
in
test
add
nop
xor
cmp
and
pop
xor
fs
negb
push
push
stos
add
adc
inc
jnp
push
outsb
stos
mov
lock
test
mov
xchg
sub
xchg
cmp
mov
mov
stos
loope
xlat
jns
cmp
popf
shl
dec
mov
scas
mov
sbb
mov
jle
call
mov
dec
aam
lret
add
inc
out
out
dec
pop
data16
dec
push
sub
add
inc
int
mov
pushf
icebp
aam
xlat
pushf
pushf
xlat
mov
dec
pusha
je
fmuls
mov
mov
mov
mov
mov
push
xchg
push
dec
cmp
popf
cwtl
mov
sbb
popf
arpl
icebp
test
in
aaa
pop
popa
xlat
mov
xchg
stos
outsb
cmp
outsb
pop
adc
sbb
pusha
mov
stc
aam
jae
in
push
lods
aaa
repz
inc
mov
sti
mov
nop
or
lcall
dec
les
mov
pop
pop
sti
lods
mov
mov
bound
add
mov
andl
and
mov
std
xchg
loop
scas
mov
enter
xchg
add
push
inc
aam
subl
inc
mov
sub
out
jl
lahf
add
fisubrl
sbb
cmp
sub
jecxz
push
and
dec
jmp
out
push
cld
mov
push
mov
loopne
inc
pop
fdecstp
fidivl
shrl
jmp
repz
and
push
fstl
jl
mov
push
fimull
add
pop
mov
repnz
jne
mov
stos
xor
sbb
mov
push
xchg
popl
cmpsl
jo
mov
inc
mov
sbb
aad
vminss
rcll
mov
sub
aaa
mov
inc
insl
dec
ljmp
test
add
js
xchg
mov
iret
lahf
mov
inc
int
mov
inc
cld
popa
rcrl
xlat
test
lcall
inc
adc
cmp
arpl
xor
sub
leave
adc
js
jge
or
pop
rorb
cmpsl
adc
xchg
mov
fisubrs
je
rolb
mov
jge
mov
pop
fimuls
cmp
lcall
jecxz
mov
jno
or
dec
das
xchg
cmp
dec
cmpsb
lods
aaa
push
mov
mov
or
adc
fnsave
jl
xchg
mov
xor
adc
push
subl
dec
movsl
bound
mov
aaa
clc
fstps
call
js
pop
jns
cmc
jg
std
bound
ss
jg
pushf
xchg
stos
mov
mov
sbb
aam
fcmovnu
or
scas
inc
mov
push
nop
lock
ret
pop
cmpxchg8b
xchg
sbb
lahf
pop
test
add
pop
inc
sbb
dec
fdivl
add
mov
mov
inc
out
inc
scas
mov
push
lret
xchg
mov
xchg
rolb
rcl
xchg
xchg
sbb
or
and
cmp
xchg
int3
jo
push
sub
loopne
sbb
inc
inc
or
mov
and
sbb
test
cmp
out
out
fsts
sbb
cmc
inc
cwtl
sub
and
dec
xchg
add
fcmovnbe
xor
or
iret
das
pop
mul
xor
xor
test
push
aam
push
fcomps
aam
lret
jge
add
xchg
and
cld
popf
lods
outsb
mov
nop
jp
xchg
pop
insb
xchg
sahf
pop
sbb
mov
fistps
jp
add
leave
pop
out
daa
xorl
ljmp
lahf
fnstcw
arpl
cmp
and
loopne
adc
repnz
dec
cmp
aas
jge
mov
dec
pop
cmpsl
mov
jp
pop
das
inc
jo
pop
jmp
mov
sbb
sahf
imul
mov
mov
fwait
jge
popa
aaa
leave
sub
int
pop
stos
or
inc
addb
std
je
xchg
in
daa
scas
mov
lock
cmpsb
test
pusha
in
dec
mov
test
dec
cltd
mov
mov
ss
imulb
mov
and
test
daa
mov
loope
fisubl
sbb
push
and
cmp
adc
scas
mov
shlb
jmp
fisubs
repz
jae
lea
jns
lcall
jl
mov
cmp
xchg
lcall
leave
add
cmp
test
xchg
or
cs
and
adc
iret
sub
sbb
leave
mov
orl
push
sbb
es
inc
insb
scas
mov
cmpsb
inc
xor
sbb
test
in
out
or
xchg
dec
test
pop
cmp
or
popa
ficompl
mov
xchg
push
push
adc
push
and
cli
shl
cmp
mov
shl
es
mov
mov
fdivs
mull
gs
xchg
mov
pop
sub
sbb
es
addr16
pop
lea
je
xor
divl
jnp
mov
int
push
mov
out
pop
cmp
push
das
lods
jge
lea
sub
std
mov
std
lods
inc
mov
mov
jne
or
and
nop
push
xor
movsb
cmp
clc
out
pop
adc
xchg
cbtw
imul
lea
add
or
lock
sahf
add
test
fs
iret
sbb
leave
xchg
hlt
fs
nop
mov
cmp
mov
dec
stos
ret
int3
xor
imul
mov
mov
hlt
add
push
mov
inc
adc
jnp
or
pop
sbb
js
and
test
cmp
mov
adc
pop
clc
pop
mov
mov
push
jp
bound
xor
imul
cmp
dec
test
push
ljmp
out
stc
add
mov
fcoml
pop
sarl
test
cmpsl
subl
pop
adc
jo
adc
xchg
out
vpminsw
in
xchg
mov
add
sub
pop
jle
icebp
fstpl
decl
jb
int
ljmp
cs
sbb
push
hlt
push
jae
jb
in
dec
ficoml
daa
test
pop
adc
lcall
pop
loope
je
clc
icebp
int3
mov
jbe
sahf
xor
push
mov
lock
pop
aad
sbb
cmp
sub
push
andb
test
xor
cmp
mov
sub
cld
sub
jp
dec
lret
jo
gs
das
es
adc
mov
out
xor
push
or
sub
mov
je
jge
push
shll
ljmp
ret
push
pop
aaa
adc
push
mov
dec
loopne
cmp
insb
fistl
jecxz
jbe
test
je
out
and
daa
out
mov
test
push
mov
xchg
ret
jmp
push
addl
sbb
clc
pusha
inc
push
jl
out
adc
fdivl
mov
fadds
das
aam
outsb
jbe
cmp
xchg
faddl
les
loopne
inc
mov
adc
in
loop
xchg
mov
lret
loop
mov
repnz
jecxz
sbb
mov
mov
and
sbb
dec
mov
xchg
aas
test
shrb
aad
sbb
mov
testl
mov
xchg
repnz
xchg
stos
lcall
jmp
cmp
sbb
popa
lret
out
in
aas
in
dec
dec
je
push
xchg
cmp
pop
lret
pop
es
and
lahf
outsb
notb
mov
mov
loopne
mov
lea
loopne
pop
test
mov
pop
rorb
pusha
das
pop
add
stos
in
repnz
shrw
sbb
cltd
stc
sub
xchg
lahf
rcl
orl
lea
push
loope
mov
and
push
adc
lret
cmpsb
aas
xchg
jbe
dec
xor
sti
lcall
shlb
rcr
and
popa
mov
lahf
cltd
and
xor
shrl
sbb
xor
fidivrs
movl
mov
xchg
mov
addb
and
data16
sbb
sub
pop
lods
icebp
sbb
push
stos
sbb
pusha
push
lea
push
imul
adcl
jne
popa
pop
daa
lret
aam
lret
xchg
add
fscale
xlat
mov
mov
cmp
sbb
imul
jp
int
hlt
add
lahf
pop
jne
mov
dec
sub
dec
jle
sub
in
addr16
adc
sub
hlt
push
mov
call
dec
and
sbb
insb
xchg
repnz
cmp
lret
rcrb
add
and
stos
jo
inc
arpl
fwait
lods
xor
insl
fwait
mov
xchg
jb
int3
push
fs
dec
in
cs
into
push
pop
cmpsb
shrl
xor
psrlq
adcb
xor
xchg
insb
aad
sbb
cmpl
out
cmp
push
add
jecxz
mov
mov
push
push
rcll
cmp
cmp
cmp
add
mov
test
mov
clc
sbb
sar
push
mov
or
jmp
in
dec
xor
adc
xchg
insl
pop
push
addr16
jo
adc
add
ljmp
cmp
mov
fdivrl
pop
notl
aam
jne
aas
nop
out
lods
test
pusha
mov
sub
sub
jge
daa
aam
cli
addl
popa
nop
mov
push
test
inc
sub
cld
xor
cmpsb
shlb
shr
add
loopne
xchg
ljmp
fldt
cmpsb
loop
adc
js
dec
or
or
in
add
sub
ljmp
sub
dec
loope
mov
or
das
out
and
leave
mov
imul
dec
ljmp
xor
push
push
dec
aas
enter
pop
imul
aad
dec
leave
jp
cmc
mov
enter
fsubr
jmp
jnp
pop
enter
mov
call
ret
xor
out
lret
add
mov
jnp
subb
out
and
cltd
gs
in
lcall
adc
inc
leave
pop
rclb
arpl
andb
js
xchg
iret
cmovle
repz
movsl
test
mov
lcall
push
lock
inc
inc
leave
jecxz
sbb
add
gs
pop
stos
call
adc
aam
ror
adc
mov
into
xchg
push
test
mov
sahf
jbe
pusha
jae
insl
pop
fistps
dec
movsb
and
push
loopne
mov
or
sbb
pop
sbb
mov
xchg
loop
jg
and
mov
call
fs
fidivrl
pushf
sti
sub
push
in
rcrb
das
or
jne
fdivl
outsl
or
mov
stc
sbb
push
loopne
sbb
xor
andl
bound
test
jns
jo
js
dec
stos
inc
push
mov
push
or
rorb
mov
inc
pop
in
enter
out
push
jmp
ret
xchg
test
aas
ret
xlat
int3
xchg
lcall
xor
mov
stos
shrl
xor
pop
and
xchg
fsubs
aam
cmp
push
mov
prefetch
or
dec
imul
jne
dec
lret
cmpsl
xchg
mov
add
pop
arpl
aam
in
xlat
push
push
pop
mov
scas
inc
mov
push
pop
ret
pop
mov
sbb
dec
xchg
pop
mov
popa
jno
popf
mov
inc
cmp
pop
iret
insb
lcall
cmc
push
dec
dec
add
nop
mov
mov
iret
jg
rcrb
lret
or
inc
dec
cmp
jmp
aas
dec
addr16
data16
fisubs
push
in
bound
mov
mov
iret
mov
movl
gs
shl
jns
cmp
sub
sahf
out
push
cmpsb
pop
xchg
dec
ss
xor
stos
cmp
aas
cmp
shrb
inc
cmp
cmp
mov
sbb
fisubrl
ljmp
es
imul
sub
aaa
test
into
pop
into
adc
pop
and
cmp
mov
loopne
scas
movsb
sbb
test
dec
mov
popa
int3
dec
pushw
mov
cmp
xchg
stos
jb
lret
aaa
dec
xchg
je
or
and
ljmp
ret
push
xchg
dec
sbb
push
pop
flds
xor
add
mov
mov
adc
inc
mov
sub
or
mov
dec
push
addb
mov
lock
xor
mov
mov
mov
sub
lds
cmp
push
enter
jge
out
movsb
jge
cs
push
jecxz
ret
or
test
mov
fwait
push
push
les
pop
int3
shrl
mov
jmp
mov
cld
lret
pushf
or
xchg
mov
repz
rorl
or
mov
add
mov
dec
prefetch
or
add
aaa
jnp
or
xchg
push
push
test
fbstp
jae
btc
shlb
push
int
aas
clc
mov
scas
mov
xlat
out
sub
jl
dec
stos
popf
ljmp
cli
ds
int
mov
mov
jno
scas
xor
jecxz
rol
adc
xor
add
jp
std
mov
dec
push
cmp
push
lret
sahf
sub
xchg
push
dec
push
pop
test
cmp
xor
and
shlb
les
stos
gs
aad
popa
mov
lock
scas
mov
jno
adc
movsl
mov
cmpsl
clc
pop
dec
das
pop
and
cmpsb
jae
in
mov
pop
popf
mov
ds
and
or
adc
stc
aam
pusha
scas
cmpsl
add
push
imul
adc
fidivs
push
fs
pop
push
sti
adc
xlat
outsb
fistpll
sub
mov
adc
int3
fidivs
adc
mov
mov
fdivl
sbb
mov
aad
xlat
imull
inc
test
adc
jl
jbe
pusha
mov
jbe
sbb
push
lcall
pop
gs
loope
push
js
sbb
outsb
jmp
sbb
aas
add
dec
inc
mov
popa
lds
loop
sub
mov
xchg
push
stc
pop
xchg
jns
sub
sub
or
cwtl
iret
inc
sbb
lods
std
lods
fnstenv
push
adc
js
test
hlt
cmp
xor
mov
xlat
in
notb
mov
jns
fistl
cmp
mov
repz
xor
addr16
jg
sbb
and
inc
xchg
test
xor
adc
jne
cmp
std
shrb
mov
stos
lahf
jnp
push
cli
dec
jnp
sub
arpl
dec
std
cwtl
mov
jbe
dec
jl
rcr
lods
sbb
icebp
mov
scas
outsl
adc
mov
adc
push
pop
inc
jae
xor
xchg
out
adc
mov
add
add
lock
adc
dec
xor
pop
sub
xor
add
pop
movsl
and
mov
or
fistpl
fnstsw
jnp
out
pop
mov
dec
scas
js
ljmp
jle
cmp
les
mov
sbb
push
pop
add
inc
lea
jne
out
test
dec
out
sub
addr16
and
mov
repz
xchg
daa
cmp
adc
hlt
push
aaa
jae
pop
stc
pop
xor
lret
loope
outsl
aaa
add
mov
ret
and
cmpsl
add
jnp
pusha
scas
mov
jge
or
sub
arpl
ficomps
mov
mov
clc
push
mov
int3
mov
aaa
es
adc
jae
cmp
xchg
mov
or
mov
pop
je
or
mov
lods
mov
icebp
cmp
clc
sub
imul
sbb
data16
mov
xchg
inc
stos
clc
es
mov
repz
and
mov
mov
cmc
aaa
add
push
popa
adc
mov
roll
inc
jmp
push
cmpsb
fisubs
pop
mov
or
sbb
adc
je
fidivrs
mov
adc
ds
iret
cmp
out
loopne
sahf
inc
mov
imul
xchg
stc
fs
pop
xchg
repz
xorl
sub
adc
mov
push
xchg
cwtl
xor
out
dec
fbld
jge
add
or
in
mov
aaa
pop
mov
cli
fcmovnu
mov
mov
push
sbb
leave
out
in
nop
das
push
add
testl
inc
sbb
jno
addb
addl
mov
in
shrb
dec
dec
sub
iret
gs
mov
hlt
pop
jge
sarb
sbb
clc
aaa
pop
scas
cld
mov
jl
inc
xor
in
cmp
lahf
mov
pop
out
iret
hlt
dec
dec
insb
sub
and
mov
sbb
jmp
pop
xor
arpl
mov
sbb
arpl
repnz
pop
imul
dec
push
add
lds
test
les
pop
cmp
jns
mov
not
aas
xchg
jmp
jp
push
push
fs
insb
or
stc
fs
les
iret
ljmp
push
sahf
push
push
es
mov
shl
ret
jge
negl
pop
xchg
imul
dec
push
mov
and
cli
fisttpl
pop
lods
and
div
mov
test
xor
dec
cli
test
add
jp
roll
outsb
out
fsubr
sti
sti
icebp
sbb
lret
adcb
or
mov
adc
push
sbbl
jl
jg
inc
fistl
pop
loope
ror
negl
mov
mov
dec
inc
jbe
or
mov
imul
in
rcrl
addb
xchg
ss
cmp
in
jmp
push
aad
pop
mov
cld
pop
mov
push
pop
iret
sarl
sarb
mov
xchg
mov
scas
in
adc
or
push
sbb
cmp
add
test
test
jle
aas
hlt
inc
mov
dec
loop
sub
or
repz
push
outsl
push
cmp
test
sarb
adc
xchg
cmc
lds
mov
adc
xchg
outsl
and
inc
jmp
push
daa
inc
push
cmp
and
inc
sub
cmp
inc
mov
xor
shll
add
nop
mov
or
mov
sub
or
ljmp
inc
in
jl
dec
out
dec
cmpsb
xorl
add
ja
and
sbb
add
sub
popf
cmp
or
lret
adc
lret
scas
popf
imul
bound
and
pushf
stc
ficomps
ljmp
out
nop
sbb
jns
pop
jb
rcll
dec
xchg
dec
cmp
lock
inc
and
insb
cmp
das
stc
loope
mov
sbb
and
lock
out
sub
push
rclb
nop
mov
js
mov
sbb
xor
mov
dec
bound
out
inc
pop
stc
popa
jae,pn
es
js
inc
sbb
in
aam
loop
mov
add
and
mov
mov
sbb
cmpsl
es
jle
sbb
push
fimuls
jmp
or
dec
add
sbb
pushf
xchg
lds
dec
mov
adc
mov
adc
pusha
in
mov
sbb
movsl
jnp
es
stos
cmpsl
loopne
push
sbbb
repz
les
inc
mov
xor
mov
jno
jb
push
fnsave
shll
sbb
mov
cmpsb
sub
pop
ljmp
mov
jge
mov
mov
push
fistpl
gs
shrb
aad
sub
mov
and
mov
inc
nop
scas
stos
mov
adc
insl
push
dec
jnp
fsubrl
add
xor
push
xor
subl
in
out
push
mov
and
push
lods
jns
pushf
dec
pop
test
shrb
and
mov
mov
mov
popf
mov
xor
out
pusha
push
cmc
adc
xor
das
imul
pop
movsb
and
pusha
dec
push
dec
mov
xchg
repnz
pusha
mov
inc
stos
rep
loop
cmpsb
lods
xlat
call
fmulp
cmp
test
out
xor
jne
out
sbb
adc
xchg
imul
insl
loopne
fbld
fcoms
jmp
inc
adc
add
jno
testb
pushf
adc
lahf
fcmovne
add
fs
dec
lahf
movsl
dec
add
pop
roll
stos
and
sub
je
push
jge
loopne
in
jmp
mov
mov
in
mov
int3
sbb
inc
push
arpl
lret
pinsrw
out
inc
jno
xchg
pop
dec
mov
shll
iret
out
cmpsl
in
and
jg
repz
xor
inc
mov
mov
stos
mov
fstpl
ds
push
js
movsb
push
lahf
mov
mov
adcb
inc
push
push
dec
leave
popf
pop
xchg
int3
nop
jmp
data16
insb
test
data16
mov
and
inc
lock
dec
mov
sub
add
js
or
addr16
test
mov
gs
jge
int
xor
xor
push
cmp
fdiv
in
jp
arpl
sbb
into
inc
dec
cmp
int
test
test
jns
xchg
stc
cmp
xchg
dec
xchg
cmp
pop
push
mov
ja
rcl
xlat
mov
ficoms
enter
fistl
insb
xchg
mov
pop
or
push
out
fwait
shrb
repz
sub
sbb
sbb
or
lea
popa
or
imul
push
cld
ja
mov
pop
adc
push
push
inc
aas
ja
loop
inc
cmp
dec
mov
rcl
cmp
stos
adc
mov
repnz
add
cmp
pop
xor
xor
test
cmp
mov
imul
fstl
lret
popa
fcoml
pop
adc
hlt
sub
imul
les
lahf
idivl
popf
test
jecxz
out
arpl
and
fs
dec
clc
jne
sahf
leave
repz
test
lea
mov
dec
jl
push
sti
mov
lods
xchg
into
sub
mov
rolb
stc
dec
cltd
mov
xchg
mov
ret
mov
popf
int
push
out
ds
int3
pop
mov
and
jb
xchg
dec
subl
stos
jp
shll
addr16
mov
notb
mov
lock
cmp
insb
mov
cs
jo
xchg
push
lock
xor
sbb
fists
adc
mov
pop
ja
fnstcw
inc
cmp
lock
cwtl
jg
jp
les
roll
sub
ret
fldenv
xchg
xchg
stc
xchg
push
aad
mov
sbb
xchg
add
jae
add
mov
add
aam
popa
xchg
mov
dec
lods
shll
jbe
or
loop
stos
insl
and
in
loop
test
je
les
dec
test
in
fwait
in
cli
test
mov
cmp
dec
cmp
push
fisubl
xchg
inc
pusha
addr16
push
push
ja
imulb
loop
push
mov
in
sarl
mov
pop
imul
jle
push
pop
ret
gs
sbb
push
leave
in
jb
jp
mov
mov
frstor
int
out
es
and
lds
dec
mov
sub
push
insl
fidivs
lret
ds
cld
xor
cmp
cltd
insb
jns
int3
insb
inc
out
lods
xchg
xchg
mov
out
xchg
or
sti
cmc
dec
aam
repnz
ss
or
filds
movsl
adc
xchg
mov
fistps
mov
mov
cmp
mov
mov
mov
js
scas
cmp
pop
and
mov
jmp
mov
dec
les
sbb
cmp
pusha
mov
roll
jbe
sbb
mov
sbb
lds
inc
push
sti
iret
pop
shlb
mov
in
xor
mov
aaa
out
pop
test
jo
cmpsl
loopne
movsb
jl
adc
jb
incl
jecxz
out
jb
lds
fwait
jb
mov
out
fwait
mov
jge
or
aad
sbb
sub
negl
pop
xor
push
nop
icebp
add
jbe
rorb
xlat
test
push
sbb
or
stc
out
sbb
mov
push
sub
arpl
bound
js
pushf
lea
movsl
xor
push
sub
leave
lret
fisttpll
xchg
rcll
dec
lret
in
in
fldl
test
add
pop
cmp
outsb
out
add
lea
pop
xchg
inc
dec
xor
lea
cmp
lret
pop
mov
and
mov
adcl
inc
and
lods
cmp
rcrl
cmpsb
loopne
mov
cltd
mov
cmp
adc
fisubrl
jecxz
jmp
push
cmpl
out
sub
pop
and
movsb
movl
je
inc
lods
call
xor
imul
orb
jae
leave
xor
test
std
mov
mov
decl
and
jp
aaa
xchg
cmpl
mov
jo
xchg
inc
cmp
imul
xorl
jl
imul
mov
cmp
pop
adc
cwtl
or
or
inc
aad
mov
std
repz
pop
and
sub
in
sbb
arpl
and
push
adc
movsl
mov
mov
out
adc
outsb
sarb
cmp
rolb
stos
jmp
mov
mov
fstl
jne
push
xor
sub
fidivl
and
pop
add
inc
nop
or
dec
mov
outsl
test
imul
pop
in
sub
mov
rcrb
pop
pop
add
cmp
inc
sbb
ljmp
xchg
jo
in
mov
adc
call
xchg
clc
pop
or
sbb
add
xchg
repnz
movsl
add
xor
jp
xchg
or
sbb
inc
fwait
int3
mov
push
inc
inc
out
or
test
mov
dec
icebp
xchg
cwtl
callw
and
fs
lock
push
mov
lret
add
dec
adc
popa
adc
push
sahf
icebp
mov
in
lret
push
cmc
popf
gs
bound
cli
inc
push
mov
push
mov
ret
and
cmpsl
movsb
add
aaa
popf
adc
cmp
xlat
cli
in
jmp
mov
sbb
and
insl
jae
xlat
fs
and
inc
divl
xlat
cld
push
movsl
and
fnstenv
jnp
adc
pop
xorl
popf
leave
add
xchg
xchg
push
lahf
mov
add
push
adc
mov
ret
inc
mov
rolb
jl
icebp
lahf
jp
and
ss
lea
enter
cmp
add
idivl
popa
fwait
add
push
pop
shl
std
sbb
ret
scas
pushf
pop
inc
leave
xor
inc
adc
mov
push
fdiv
jge
test
and
lcall
push
jmp
dec
out
in
test
ds
pop
or
outsl
repnz
pop
aaa
inc
pusha
loope
scas
ss
push
mov
lds
xchg
inc
lds
rcl
pusha
adc
lcall
lock
xor
aaa
popf
jmp
cmp
cmp
rol
jbe
xchg
pop
stos
mov
jmp
xcrypt-cbc
cmpsl
adc
adc
push
in
loope
jb
cmp
sti
addr16
or
mov
or
or
xor
mov
pop
pop
out
xchg
cmovb
cltd
sbb
cmc
scas
fdivr
mov
dec
icebp
pop
push
xchg
and
push
out
ficomps
shr
sbbb
cwtl
cmp
enter
pop
out
push
rclb
pusha
push
pushf
mov
add
out
fsubrl
jl
data16
dec
mov
jbe
inc
jmp
add
repz
pop
dec
jae
jmp
push
mov
xchg
push
jl
ret
or
inc
cs
inc
sahf
mov
adc
or
into
int3
cmpsl
stos
xor
pushf
movb
imul
aad
add
sub
ret
icebp
push
imul
das
inc
xor
cmp
add
stc
negb
pop
jge
xchg
jne
divb
xchg
xchg
lret
lock
push
rorl
dec
roll
pushf
in
mov
cmp
cmpsl
in
les
push
lret
pop
cwtl
xor
jecxz
and
xchg
inc
std
pop
push
sub
adc
testb
mov
enter
or
scas
xor
adcb
mov
addb
ss
add
movsb
and
sub
aam
out
mov
ss
push
jns
push
or
out
or
out
popa
xlat
sub
nop
ljmp
pushf
jle
push
pop
pusha
fwait
imul
xchg
insb
out
adc
sbb
mov
in
push
lock
sub
pop
and
cmc
cli
adcb
adc
icebp
cli
cmp
es
add
mov
scas
adc
loop
loopne
cmp
xor
sub
cltd
xchg
inc
pop
pushf
jecxz
sub
lret
xor
lds
lea
or
dec
popf
cmp
ja
push
adc
push
popf
cmpsl
ds
nop
cmpsb
xor
sarl
dec
je
out
mov
popa
fnstsw
out
or
in
outsl
call
adc
inc
push
pop
popa
int3
sbb
das
inc
xchg
bound
cltd
js
inc
sbb
lahf
ss
inc
jns
pop
iret
xlat
cli
lock
mov
pop
and
inc
faddp
js
push
xchg
push
dec
mul
popa
inc
sub
adc
das
sahf
mov
fwait
pop
xlat
xchg
jne
dec
jmp
xor
xchg
mov
dec
cmp
cmc
loope
and
add
inc
fdivl
es
inc
inc
pop
sub
les
lret
add
lock
arpl
ja
and
jmp
cmc
xchg
mov
dec
fsubrs
add
into
movsl
pop
fwait
outsl
mov
jno
xor
rcrl
scas
inc
jge
mov
pop
icebp
push
shrb
loope
jge
and
pmulhw
mov
jl
ljmp
xorb
aaa
sub
pop
jle
inc
enter
rcrl
int
add
scas
incl
jp
or
stos
icebp
sbb
iret
into
xchg
push
movsb
stos
dec
aam
cmp
add
sbb
push
mov
sbb
repnz
sbb
xor
fdivl
adc
jbe
pop
cmpsl
lea
mov
and
cltd
repnz
test
in
int
ret
sbb
into
and
sahf
jns
cli
inc
xlat
lretw
mov
scas
sub
data16
jle
jp
mov
inc
call
pop
scas
popf
sar
xor
icebp
jae
pop
fs
add
adc
sbb
sub
xor
and
movsb
sub
push
xor
iret
cmpsb
aam
insl
shlb
inc
sub
loopne
repnz
clc
sub
sub
xchg
inc
setp
xor
inc
adc
cmpb
dec
dec
mov
adc
dec
scas
into
mov
rcrb
std
ds
in
movsl
sub
sarb
les
fistl
mov
shr
cli
and
ret
xchg
push
out
push
or
pop
add
cmpsl
and
add
pop
in
adc
or
xchg
sub
xchg
add
mov
out
or
dec
arpl
xchg
shll
push
pusha
fnsave
mov
into
rorl
dec
pop
stos
jns
repnz
mov
nop
cwtl
pop
sub
fildl
mov
mov
mov
pop
inc
lret
mov
mov
pop
fsub
dec
or
xchg
cli
lcall
test
lea
scas
cs
outsb
pushf
fnstcw
ja
add
in
pop
insb
jle
push
add
push
inc
in
iret
outsl
xchg
or
mov
add
mov
sbb
sti
xchg
cwtl
std
popa
cli
lds
and
xchg
lahf
movsl
jp
fcoms
mov
movsl
repz
daa
daa
in
pop
push
fwait
lret
clc
fidivrl
mov
dec
inc
popf
pop
insb
mov
mov
sbb
test
fmulp
adc
adc
cwtl
popa
addr16
icebp
loope
mov
xchg
xchg
xchg
in
cmc
cmp
mov
loopne
lret
repz
stos
outsb
mov
lret
fsubs
push
not
sub
ljmp
loop
mov
mov
lcall
cmp
pop
jg
mov
xor
mov
jp
rcll
mov
mul
andb
xor
pushl
adc
push
mov
das
xchg
out
dec
outsb
or
in
popa
cmp
andl
fs
fsubl
ret
jge
mov
gs
xchg
icebp
pop
push
iret
jbe
andl
or
das
inc
ja
enter
gs
int3
movsb
adc
ja
mov
loopne
loope
adc
cmp
pushf
adcb
aad
mov
adcl
jg
pop
std
push
lods
enter
mov
xor
mov
fadd
sbb
xor
addr16
jne
aaa
gs
xchg
sbb
insl
lret
fldcw
push
loop
es
xchg
mov
xor
cmp
cmp
movsb
mulb
push
jae
imul
mov
lds
cmp
pop
negl
jae
inc
or
shrb
stc
mov
xchg
loop
fcmovne
orl
insb
xchg
cmc
sar
xlat
and
pop
les
mov
pop
cmp
sbb
sti
popa
dec
add
icebp
lahf
adcb
inc
push
scas
jb
sub
dec
sbb
adcl
and
into
gs
ljmp
or
shlb
pop
aaa
popf
inc
and
mov
mov
mov
mov
hlt
adc
mov
in
leave
flds
out
ffreep
or
xchg
cli
jmp
pop
add
popl
leave
orl
and
xor
adc
sbb
mov
jo
or
dec
add
inc
mov
in
jp
fucom
lea
jns
push
movsl
add
sbb
pop
xor
jo
sbb
push
movsb
bound
stos
ss
movsl
inc
pop
rolb
int3
sbb
push
mov
jne
xor
jle
push
xchg
cmp
and
imul
aam
jl
lock
add
add
pop
ror
pop
jl
cmc
xor
adc
sub
lds
push
sbbb
jo
faddl
dec
adc
inc
xchg
add
cmc
sub
aad
dec
test
cwtl
das
adc
test
sbb
out
dec
cmc
sbb
jmp
loope
adc
or
insl
pop
cwtl
test
shll
push
push
xor
sbb
and
sub
xor
adc
cld
shlb
jle
push
in
push
jmp
dec
in
and
sub
aam
imul
xchg
movsb
cmp
je
mov
xchg
fs
sbb
xor
std
shrl
xor
or
rcrl
push
insb
xor
xchg
dec
mov
popf
icebp
cmp
sbb
mov
daa
mov
fnstsw
and
popf
bound
test
cmc
jmp
jae
mov
pop
std
lret
popa
jmp
pushf
in
push
repnz
or
sti
jnp
jecxz
aaa
lret
push
lret
addb
roll
mov
mov
jbe
call
pop
or
xor
aam
or
call
lret
pop
push
cld
test
adc
addr16
sbb
pop
xor
push
mov
mov
les
pop
pop
jecxz
or
sub
sub
pusha
cmp
add
ftst
dec
movsl
fwait
in
cmp
frstor
pop
loope
insb
aas
jge
inc
test
mov
cmc
pop
je
lods
xlat
filds
or
in
adcl
sbb
push
and
mov
arpl
jne
jae
jne
jb
cmpsb
adc
fidivrl
pop
clc
push
inc
sti
test
dec
pop
or
popa
js
ret
les
mov
dec
inc
call
sahf
test
xor
xchg
loop
xlat
daa
or
sahf
adc
into
scas
dec
sub
add
jb
stos
jmp
inc
shlb
pop
dec
lea
push
sbb
adc
push
fistl
pusha
ss
aam
xor
jae
test
mov
xchg
cltd
jp
pop
mov
pop
popf
mov
sub
pop
cmp
jne
sti
popa
cmpl
pushf
xchg
jge
mov
inc
popf
shrl
cmpsb
dec
dec
jg
jp
ss
push
lock
ret
lret
repz
testb
sar
lea
dec
and
loop
popa
or
dec
cmpsb
push
pop
inc
cvtpi2ps
fstpt
fnstsw
in
icebp
mov
add
xchg
lret
lret
mov
dec
mov
fwait
insl
push
mov
data16
xchg
dec
sub
in
int
punpckhwd
bound
gs
jbe
repz
lods
popa
mov
stos
add
mov
fistps
aas
jl
cmc
sbb
andl
js
cmp
xlat
sbb
inc
add
push
pop
flds
imul
mov
jo
aad
daa
nop
mov
push
dec
clc
xor
gs
mov
daa
scas
or
xorl
inc
daa
adc
test
in
xor
adc
mov
sahf
ffreep
xor
xchg
into
imul
adc
icebp
fists
in
dec
in
mov
adcb
jle
or
cmp
xor
jo
jnp
roll
xchg
push
rcrl
cmp
sub
imul
ljmp
pop
jmp
call
pop
dec
in
divb
mov
in
leave
mov
push
ret
dec
adc
mov
out
inc
inc
jg
sub
lods
inc
mov
cmpsl
and
arpl
out
push
and
mov
out
out
in
cld
jge
stos
outsl
or
cmpsb
subl
and
or
lea
js
or
movsl
loopne
iret
bound
adc
sub
xchg
decb
into
cmc
daa
lock
bound
jecxz
pop
shlb
cmp
inc
adc
pop
push
shlb
scas
pop
aam
rcr
cmp
fsubrs
push
cltd
and
push
inc
loope
pop
dec
jg
inc
cmp
cmp
lcall
test
mov
insb
cld
test
inc
jle
mov
add
sub
decl
rolb
movsb
fdivs
das
clc
hlt
add
je
cmpsl
adc
pop
push
pop
or
or
testb
outsl
or
ja
xlat
ficompl
mov
fidivrs
das
scas
push
call
add
test
nop
add
lret
mov
hlt
push
pop
mov
pop
cltd
std
shlb
mov
stos
mov
shll
fsubrs
repz
push
mov
sbb
add
add
addr16
scas
xchg
cmp
fidivrs
sarl
push
and
out
adc
rol
dec
bswap
sbb
scas
mov
fdivp
xor
xchg
push
int
mov
xchg
pop
lret
dec
xchg
pusha
iret
xchg
aad
jmp
xor
jo
jne
rcll
adc
in
mov
lds
shrl
pusha
add
cli
xlat
repnz
aad
mov
inc
aam
mov
and
ror
xor
add
cmpsb
inc
ja
inc
scas
mov
andb
arpl
sbb
mov
popf
pop
in
xor
mov
and
cmp
adc
lods
xchg
aaa
daa
test
insl
adc
mov
icebp
push
mov
fcmovb
lea
mov
xor
int
negl
mov
insb
jp
int
add
out
or
mov
and
stos
testl
cmc
subl
aas
push
das
lock
add
mov
jp
loop,pn
dec
mov
addr16
test
push
pop
test
dec
cs
jle
adc
orb
and
repz
adc
fdivrs
lock
and
sub
sbb
mov
push
in
in
pop
rorl
dec
sbb
xor
mov
xchg
push
mov
cmc
call
add
xchg
xor
mov
xor
jecxz
call
arpl
add
mov
cmp
fmul
dec
adc
mov
outsb
mov
xor
add
arpl
sub
cmc
xor
scas
xchg
sti
mov
inc
outsl
clc
inc
add
outsb
lret
jl
shr
gs
inc
inc
imul
jb
or
clc
xlat
mov
mov
xchg
mov
pushf
pop
js
xchg
in
pop
xlat
fadds
cwtl
and
loope
inc
stc
out
cmp
cmpsl
mov
ss
add
out
add
sarb
sub
imul
cs
les
pop
jecxz
rcll
jge
mov
rcll
mov
cmp
int
call
xchg
ds
push
test
fs
mov
fnsave
mov
xor
inc
pop
jp
aas
jecxz
add
mov
adc
pop
push
in
sbb
outsb
and
and
loop
leave
add
call
paddb
dec
int3
rorb
popa
fwait
xchg
cmpsb
sbb
push
push
add
sub
inc
cmpsl
jg
xchg
into
pushaw
pop
push
sbb
push
inc
lods
jg
cmp
icebp
in
dec
cs
dec
stc
inc
addr16
and
clc
int
xlat
xor
and
jl
or
cld
repnz
pop
xor
xchg
jne
cli
imul
rolb
pop
or
enter
or
cmp
aad
lea
imul
hlt
nop
cmp
enter
cmpl
jb
push
imul
inc
inc
xchg
push
clc
std
and
cmc
dec
testb
xchg
mov
ss
fsub
mov
subl
popa
mov
fucomp
in
std
cld
shrb
adc
neg
pop
iret
mov
daa
adc
mov
int
das
icebp
mov
jbe
jp
cld
xorb
sub
xchg
scas
aam
inc
fucomp
std
fwait
xchg
clc
cs
sbb
pop
mov
addl
rcrl
rcrl
lds
xor
ffreep
cmp
push
rcl
in
inc
aam
andl
and
add
dec
mov
mov
mov
sbb
adc
mov
mov
sti
insw
pop
mull
ja
xor
push
push
cld
xor
in
push
jno
sbb
in
jl
adc
lea
sbb
dec
out
cs
add
je
mov
push
out
shrl
outsl
jmp
xchg
mov
fsubrp
sahf
jmp
dec
cltd
cld
rcl
sub
stos
divl
addr16
pusha
xchg
lods
or
jnp
push
sahf
xchg
jmp
cmp
inc
cwtl
sbb
cld
std
or
or
xor
test
pop
xchg
mov
pushf
ffree
cmpsl
stos
add
jmp
xlat
push
pop
jle
add
jbe
mov
jg
popf
mov
arpl
iret
das
divb
inc
mov
inc
adc
or
mov
sbb
test
inc
test
add
sub
sub
mov
sbb
jecxz
pop
lock
adc
mov
lahf
leave
movsl
popf
loop
and
cmp
lcall
push
push
xchg
mov
jl
lods
pop
inc
pop
push
or
ja
add
xchg
or
in
lods
and
insl
stc
bound
mov
push
cmp
jmp
jno
mul
int3
ja
jmp
cmc
sub
add
popa
rolb
xchg
sbb
sbb
fbld
adc
and
xlat
mov
in
cmpsl
pop
adc
call
gs
push
int3
addl
push
xor
mov
mov
inc
stos
adc
mov
pop
and
jmp
shl
jg
std
cmp
imull
test
fdivrp
call
cltd
andl
push
mov
cmpsl
lcall
ljmp
cmp
test
loop
xchg
push
dec
push
jge
filds
ret
hlt
jle
xor
xchg
or
push
in
pop
xor
pusha
into
int3
sub
pop
lock
int3
testl
xchg
adc
cmp
mov
ds
out
outsl
movsl
dec
adc
iret
and
mov
dec
adc
sarl
clc
imul
inc
mov
sahf
cmp
jb
test
pop
pop
test
jp
std
jo
cli
ljmp
ja
adc
mov
pop
pop
push
pop
fisubs
xor
mov
and
imul
insl
dec
xchg
push
mov
mov
stos
loop
dec
push
insl
call
dec
jmp
repz
fiadds
push
lea
jge
iret
shll
testl
das
popf
fs
xchg
fisttps
and
inc
fs
ds
aaa
cmp
xchg
lcall
bound
mov
ss
lahf
mov
lret
pop
xchg
ret
inc
push
add
adc
jge
xchg
cmovnp
xor
xor
mov
clc
inc
sub
add
cli
cld
popf
in
add
push
fmul
rcll
clc
jnp
lret
sub
mov
in
and
popf
mov
pop
rol
out
xlat
dec
scas
js
jmp
xchg
inc
cltd
fcomip
ds
test
sbb
mov
mov
pop
pop
pop
addr16
cld
inc
inc
imul
sub
adc
cld
or
and
mov
cli
cmp
jo
fldcw
lcall
ret
pop
stos
and
pop
in
dec
and
cwtl
inc
push
mov
mov
imul
daa
pusha
dec
sub
push
and
xor
fmull
inc
rcrb
aad
sub
shlb
fisubrl
mov
jp
mov
dec
lahf
and
push
xchg
in
popf
addr16
push
mov
add
and
push
hlt
jo
rcr
in
ficompl
lods
outsl
xchg
xchg
dec
mov
push
dec
sbb
lahf
mov
add
sbb
xor
ror
mov
mov
jp
popf
dec
sahf
gs
pusha
push
repz
jmp
enter
inc
adcb
jp
xlat
inc
xchg
dec
pop
ret
mov
xchg
mov
xchg
mov
clc
mov
daa
dec
dec
popa
mov
imul
stc
sub
jp
repz
jg
and
out
inc
popa
mov
inc
sbb
or
inc
test
inc
push
cmp
lret
dec
lea
mov
adc
cwtl
jmp
cmpsl
pop
and
test
insb
mov
fisttps
push
sbb
sbb
mov
xlat
jne
hlt
xor
xor
sarb
mov
dec
or
int3
dec
fbld
jl
or
fcomps
sahf
in
xor
data16
mov
cld
add
jecxz
mov
and
insb
rcl
repz
xor
daa
push
dec
inc
aam
ds
cmpsl
jl
cmp
rorl
sbb
filds
aaa
pop
or
sti
inc
cmp
inc
cmc
xchg
in
fnstenv
pop
loope
insb
or
pop
jae
xchg
lock
mov
test
stc
shrb
movsb
dec
rcrl
jle
test
loop
sahf
jae
cli
mov
pop
lea
loope
std
xchg
pop
inc
pop
into
frstor
cmpsl
sbb
sub
pop
xlat
shl
test
and
sub
adc
int3
and
and
jl
pop
dec
cmp
sarl
lock
xor
outsb
fwait
pop
test
and
rep
push
lock
mov
add
mov
pop
and
popa
mov
lods
push
dec
jo
out
adc
cmpsb
jae
inc
les
jge
cmc
and
lret
push
xchg
addr16
cmp
test
shrl
dec
aad
int3
inc
or
mov
cmpsb
adc
fcomps
xchg
and
dec
pop
aas
cmp
stos
add
push
loope
jp
lods
fs
cmpsb
fdiv
adc
stc
cltd
out
inc
push
xchg
cmp
nop
push
jecxz
mov
sbb
xor
dec
ja
scas
fldl
subl
ss
enter
lret
repz
int3
mov
add
outsl
push
fcom
mov
xlat
fs
xchg
jmp
sbb
xchg
dec
repz
sub
pop
inc
sub
adc
xchg
gs
mov
mov
aad
xchg
stos
push
jb
mov
cmp
icebp
addr16
jge
mov
filds
icebp
cmpsb
jmp
mov
lds
fmull
dec
lock
daa
xchg
out
ja
lods
pop
cmp
ja
pop
rcrb
ja
dec
lret
jg
adc
pop
inc
mov
cltd
add
orl
jge
cmc
popf
movsl
xor
sbb
fsubrl
dec
sbb
xchg
jne
mov
data16
jle
imul
mov
xor
push
and
pop
add
cs
scas
xor
or
icebp
out
and
add
xor
cltd
and
or
call
or
jae
xor
movsl
mov
sahf
push
mov
cmp
xlat
arpl
jne
lods
xchg
dec
call
and
lahf
mov
push
std
jb
sub
adc
jl
sahf
arpl
aam
icebp
gs
cltd
divps
out
call
mov
jns
mov
lock
add
inc
sub
jg
cmp
xor
ret
xor
mov
xchg
jl
mov
or
xchg
ljmp
fstl
push
and
sub
pop
icebp
pop
iret
jp
js
in
add
xchg
adc
jmp
ds
sahf
data16
daa
lods
mov
roll
xchg
imul
mov
sbb
or
or
and
jecxz
inc
pop
mov
dec
xchg
sub
shlb
sbb
sub
sbb
mov
out
jo
pop
xor
out
aas
cmpsl
loop
push
xchg
icebp
dec
jns
jp
mov
pop
add
xor
in
xchg
mov
jmp
bound
jmp
call
aad
pop
and
les
mov
and
lret
push
enter
sub
stos
pop
enter
mov
paddb
and
mov
sbb
cmp
mov
cltd
jbe
mov
sub
cmp
pop
arpl
movsb
pop
in
mov
sbb
mov
movsl
pop
xchg
adc
xchg
pop
mov
cli
imul
imul
pop
pop
test
mov
mov
dec
outsl
cmp
xlat
mov
test
xor
mov
xchg
sub
cmp
dec
jle
out
mov
bound
xchg
popf
xchg
mov
or
ss
popf
test
inc
into
addl
jb
and
pop
jge
scas
stos
push
and
cli
aad
jnp
cmp
je
cmp
inc
push
mov
ss
adc
mov
popf
xchg
cmpsl
sub
andl
or
and
gs
hlt
daa
call
mov
iret
leave
sti
adc
jge
imul
cld
das
dec
repnz
mov
mov
stc
jbe
mov
and
ss
add
cmp
adc
mov
mov
and
xchg
bnd
shrb
push
mov
icebp
out
cmc
je
or
mov
adc
repnz
cmp
test
pop
in
sub
ret
jae
xor
adc
pop
pop
movsl
adc
call
xor
out
into
add
xor
add
aad
xlat
sbb
int
mov
adc
xor
mov
rorl
fwait
inc
and
sti
rorl
int3
inc
std
loopne
mov
adc
and
out
dec
imul
sbb
or
push
jo
movsl
or
test
and
imul
adc
and
clc
out
add
ljmp
out
jecxz
push
adc
shl
iret
stos
jge
xor
push
sbb
std
push
sbb
xchg
out
fwait
repz
cmp
pslld
stos
jmp
mov
je
push
cmpsl
int3
pop
cltd
xchg
push
orl
cmp
js
adc
xchg
loope
and
pop
iret
jne
push
cwtl
lods
adc
out
dec
push
lcall
lcall
cmpsb
inc
add
sub
mov
mov
dec
icebp
xchg
sub
cli
movsl
xchg
fbstp
inc
dec
cltd
insl
imul
in
xor
and
cmp
in
adc
jno
fwait
es
in
dec
test
adcb
mov
dec
xor
jg
add
mov
push
mov
cmp
lret
shrl
and
inc
push
inc
dec
repz
adc
loopne
fiaddl
dec
mov
aaa
addr16
aaa
fiaddl
ja
pop
scas
jp
movsl
pop
xchg
xchg
sbb
ficomps
sbb
sbb
fmulp
and
ret
add
add
or
scas
lds
pop
sbb
arpl
out
sbb
fwait
add
push
sub
insl
stc
dec
ss
out
shll
lods
or
push
or
xchg
sub
sahf
push
xor
pop
push
dec
add
xchg
adc
loop
cs
jb
push
mov
fisttpl
adc
leave
lds
pop
jmp
testb
inc
sub
ds
fs
pop
pop
mov
pop
pop
mov
in
lea
aad
cmc
inc
cmp
mov
aam
dec
dec
xchg
lods
ja
sbb
adc
add
sub
dec
push
dec
mov
adc
add
push
mov
hlt
cmp
gs
pop
lock
mov
xor
dec
shl
andb
cmpsb
push
push
xchg
lds
push
inc
sub
fidivrs
mov
ljmp
test
or
inc
cli
pusha
pop
jb
push
outsb
out
jno
insb
fs
cli
sbb
test
pop
push
aas
jbe
adc
dec
add
sub
push
sub
sbb
jecxz
and
daa
js
xchg
std
adc
jmp
nop
sub
push
fldl
out
stos
shrl
inc
cmp
pushf
rorl
cltd
and
out
dec
shlb
out
stc
dec
negl
loopne
push
int
and
sub
nop
adc
cltd
jns
inc
or
mov
orb
adc
push
sub
out
mov
hlt
mov
adc
jmp
jge
dec
int3
lret
es
out
and
sti
xchg
and
and
flds
jecxz
enter
jg
sbb
imul
stc
es
add
rolb
add
ljmp
fadds
push
fsubl
add
sub
test
rolb
push
and
rcr
and
call
outsl
js
clc
data16
dec
scas
ds
aam
out
cmp
jns
andb
mov
pop
add
leave
out
xchg
push
fs
lods
fs
call
push
dec
adc
xchg
xchg
mov
popa
je
xchg
mov
in
filds
pop
insb
jmp
mov
inc
xchg
pop
or
mov
xor
adc
loop
mov
imul
enter
mov
lret
ljmp
js
rorb
test
sbb
mov
je
ficoms
sbb
test
in
pop
bound
iret
inc
pop
mov
jle
cli
scas
push
ss
cmpsb
xchg
mov
repz
test
inc
cmp
mov
lret
jle
cltd
lea
je
push
aas
jmp
push
popa
fwait
scas
test
fcoml
add
fstpt
cs
mov
pop
or
js
lds
jg
pop
lret
hlt
cmpsb
dec
add
pop
jb
cmpsb
hlt
push
les
fnstenv
or
xchg
inc
adc
in
mov
into
ss
pop
push
sahf
loop
mov
push
jae
les
mov
fwait
adc
pushf
fbstp
cmpsb
xlat
sbb
pop
ss
out
lahf
push
push
rcrl
test
push
inc
jge
cs
pop
add
aas
imul
or
outsb
push
ret
jge
mov
lods
push
jp
mov
xchg
loop
or
fidivrl
pop
jmp
sahf
mov
add
pop
add
lret
shrb
push
jle
push
push
loope
and
outsb
loope
pop
and
add
mov
sarb
mov
out
stos
mov
push
cmp
push
in
mov
push
in
pop
test
add
je
push
sbb
ja
xor
mov
jmp
xchg
imul
rcll
into
out
ret
or
or
xor
xchg
movsl
jb
or
push
dec
clc
mov
push
out
jp
inc
ror
imul
rcl
sub
pop
lret
rclb
ljmp
cmpb
out
xchg
hlt
mov
adc
and
cwtl
cmp
sbb
shll
aas
sahf
cmp
adc
xchg
sbb
addr16
or
dec
fcomip
mov
jg
movsb
sub
sarl
sub
mov
sub
call
and
sbb
push
xor
test
gs
adc
js
jp
xor
and
lock
aaa
cs
pop
sarb
in
pop
add
fisttpl
ret
lret
pop
pop
loope
ror
jl
scas
rorl
mov
cltd
mov
mov
xchg
loopne
push
sub
and
cs
mov
out
stos
gs
jl
dec
jae
dec
nop
and
xchg
mov
inc
xchg
enter
fsubp
sbb
call
add
fneni(8087
mov
sti
mov
and
push
or
je
add
mov
mov
repz
les
add
scas
mov
sbb
int3
and
pop
xor
sub
push
xlat
test
jl
in
dec
test
xchg
decb
outsb
in
cmp
inc
adc
push
lahf
push
test
inc
mov
jge
jo
add
lret
add
repnz
andb
push
adc
push
push
cmp
sub
fbld
dec
inc
jbe
lahf
fmuls
mov
repz
sub
in
sbb
in
mov
adc
cmp
or
mov
sbb
lret
xchg
and
mov
xor
cs
fldcw
in
call
mov
push
cwtl
xchg
mulb
dec
aas
pushf
push
inc
dec
mov
sbb
mov
shrb
lcall
add
call
add
lret
mov
scas
fmull
scas
out
sahf
cmp
in
dec
movsb
sbb
insb
iret
ds
mov
or
movsb
repz
jge
mov
in
fdivs
adc
adcl
lcall
dec
inc
mov
mov
pop
sub
call
or
push
pop
mov
xor
fsubrs
sub
fwait
fwait
lret
xor
sbb
popf
stos
xor
cmpsl
jbe
pushl
ljmp
jns
adc
fs
das
lods
xchg
jmp
jns
pop
jne
or
mov
clc
jmp
xor
push
xor
ret
lcall
lahf
inc
or
fbld
rcll
mov
repz
in
and
sbb
xor
mov
dec
shrl
xor
inc
mov
stc
jae
in
vpxor
mov
xchg
xchg
inc
add
das
jmp
hlt
xor
sub
es
xor
and
cmp
aas
lahf
lds
adc
dec
fs
inc
mov
in
dec
jp
xchg
xchg
or
mov
andb
jle
stc
push
push
inc
cli
sub
out
mov
dec
push
lds
outsb
mov
jnp
jmp
je
sti
xor
mov
mov
dec
jp
scas
and
and
jno
add
mov
sbb
repnz
sti
mov
testb
loopne
int
lret
lock
das
or
subl
xlat
cld
mov
adcl
push
pop
inc
cmp
inc
divl
and
pop
and
notb
and
movsb
sti
lahf
mov
popf
subl
lcall
std
test
dec
jecxz
mov
inc
pop
jb
mov
xchg
cmp
jl
jmp
ds
or
mov
pushf
push
or
dec
sbb
pop
jae
rcrb
das
and
xchg
mov
mov
lcall
jecxz
mov
mov
xor
xor
pop
mov
xor
fimuls
aas
add
sti
fstpl
cltd
fisubl
fisttps
mov
mov
inc
sub
sbb
mov
mov
xor
sti
test
mov
jns
dec
int3
or
fcmovnb
dec
repz
lret
lcall
xlat
shll
pop
mov
stos
dec
cld
pushf
mov
add
mov
or
shlb
push
nop
cwtl
xchg
fisubl
icebp
loopne
push
fstpt
decb
js
and
ds
cld
xchg
inc
push
leave
xchg
movsl
jmp
insl
fs
push
andl
hlt
insb
out
sub
aad
and
vpunpckhbw
sti
lds
mov
jns
stos
and
inc
inc
xlat
push
rcrb
rcll
sbb
adc
ficomps
mov
icebp
or
xor
insl
test
jge
push
and
pop
icebp
add
lea
push
push
stc
adc
sbb
lods
rolb
add
jmp
cmp
in
test
inc
jo
flds
cmc
scas
mov
cli
movl
lods
icebp
add
fbstp
cmpsb
fbstp
push
outsl
pusha
jb
xchg
mov
mov
xchg
sub
es
cs
cld
mov
inc
sbb
sahf
sti
inc
cmp
mov
adcb
enter
gs
mov
adc
movsb
ja
lods
aad
imul
test
in
cmp
rep
lods
fstpl
addr16
xor
int
lahf
mov
ret
pushf
arpl
sti
addr16
fwait
cmp
pop
mov
push
mov
or
aaa
mov
jle
roll
clc
inc
and
mov
pop
arpl
mov
xchg
outsl
lods
jmp
addr16
inc
pusha
and
jnp
jne
in
inc
insl
mov
mov
push
xlat
dec
xchg
sub
roll
pushf
enter
mov
mov
repnz
outsl
insb
xchg
inc
movsl
push
push
scas
jo
mov
add
push
popa
xor
push
inc
cmp
mov
sbb
gs
pop
in
cltd
add
push
aaa
mov
cmp
pop
pusha
imul
lret
sbb
xor
mov
andl
addr16
adc
mov
jmp
mov
push
inc
fadds
lret
mov
andb
imulw
push
call
mov
and
jns
fwait
pop
mov
shr
mov
and
jo
mov
xor
adc
movsb
lahf
sbb
and
popa
inc
mov
out
xchg
dec
inc
or
mov
add
xchg
cwtl
fidivs
in
lret
in
cli
adc
xchg
aas
shrb
push
orl
cmp
add
arpl
fwait
in
adc
popa
and
shl
in
jmp
mov
cltd
rorb
fmull
bound
pop
cltd
aad
cwtl
cltd
in
and
cwtl
shlb
pop
pop
fcmove
push
sbb
fwait
add
into
pop
cmc
push
sub
in
sbb
xor
les
iret
sbb
fidivs
loope
lcall
mov
sbb
xor
jae
scas
push
outsb
jbe
or
hlt
add
aam
fs
xchg
dec
inc
and
sbb
sub
mov
mov
divps
push
icebp
sbb
sub
add
insl
mov
jbe
sbb
and
flds
leave
sub
pop
leave
pop
jno
inc
test
idivb
xlat
mov
sbb
jg
pop
fdivrs
push
push
int3
lret
loop
mov
or
jecxz
aad
stc
xchg
incl
mov
push
loopne
scas
nop
bound
mov
movsb
sbb
loopne
ds
sub
sbb
cwtl
test
lret
xor
in
jle
sub
lock
or
movsb
inc
push
outsl
jnp
insl
push
cmpsl
pushf
ja
mov
push
xchg
sahf
dec
daa
and
mov
cmc
xchg
stos
mov
pop
jg
jns
fwait
test
out
fs
fwait
mov
pushf
out
pop
fmul
test
les
push
or
xor
inc
sbb
or
clc
cmp
dec
std
xlat
stos
stc
stos
xor
jae
xor
push
fdivl
loopne
out
nop
imul
aas
popf
ret
cmpl
xchg
xlat
xlat
insl
dec
sub
and
cmc
xor
fs
ror
sbb
pop
xchg
push
xchg
mov
push
jge
mov
cli
mov
insb
sbb
popa
stc
lods
ror
rcr
ljmp
into
out
dec
dec
in
fcomps
xchg
xor
out
in
dec
fs
jbe
add
std
sbb
rorl
cld
mov
cmp
rcl
mov
or
mov
aaa
ja
test
nop
and
loopne
sbb
into
push
or
mov
or
pop
adc
movhps
test
mov
mov
cs
gs
mov
and
xor
or
fsubl
and
or
pusha
leave
push
out
loop
mov
ret
pop
pop
mov
pusha
lock
xor
ficompl
mov
sub
push
ror
nop
imul
mov
rclb
lods
mov
or
aaa
lret
call
icebp
ss
mov
call
stos
stos
shrl
inc
push
sub
je
adc
and
jp
popa
pop
sub
orb
popa
loopne
xchg
sti
xor
jl
xor
mov
fcoml
movsb
push
inc
repz
adc
es
pop
jp
adc
jmp
sar
insb
fimuls
mov
mov
xor
inc
loopne
mov
sahf
js
out
movsb
jmp
out
push
loopne
pop
push
clc
je
int
or
pop
dec
out
mov
in
cli
ds
daa
push
cmpsb
pop
jns
xor
push
jbe
aad
add
adc
fildll
dec
in
jl
jo
and
mov
pop
pop
pop
jno
cmp
mov
fisubrl
vsubsd
cld
adc
call
roll
leave
test
stos
push
push
mov
outsb
lea
push
mov
sarb
les
insb
lret
pop
loope
mov
pop
les
in
cmpsl
mov
push
or
xchg
cmp
ret
clc
push
and
jo
mov
jno
mov
push
aam
dec
popf
movsl
mov
push
fldt
cmpsl
inc
mov
int3
test
inc
xchg
into
pop
call
fimull
xchg
popa
out
stos
or
cltd
movsb
movsb
xchg
lods
lock
xor
push
ret
mov
sub
lock
icebp
lcall
hlt
dec
clc
repz
inc
stc
jge
shlb
inc
inc
push
add
sbb
dec
xchg
lret
and
xor
lret
dec
insb
and
sub
icebp
addl
push
push
pop
cltd
hlt
mov
sub
lahf
cwtl
pushf
mov
mov
aas
mov
pop
inc
rclb
sti
mov
shrl
adc
arpl
or
bound
shrl
inc
adc
fdivrl
xlat
xor
sub
xchg
mov
mov
pushf
lea
xchg
or
loop
pop
xchg
es
inc
jbe,pn
inc
jno
ret
add
cwtl
out
mov
xchg
mov
cmp
cmp
mov
je
imul
mov
xor
addr16
sarl
imul
sub
arpl
pop
pop
aad
or
cmp
jo
jo
subb
inc
enter
in
je
xor
lock
cmc
lock
je
sub
dec
fnsaves
mov
mov
pop
push
mov
jae
inc
and
shl
imulb
out
cmc
cmp
dec
outsl
test
dec
jg
mov
mov
jno
jno
xlat
xchg
loope
push
icebp
xor
mov
mov
xchg
xchg
shl
cld
pop
mov
mov
rcrb
jl
and
add
mov
xor
xor
inc
into
push
push
fistps
mov
fmul
sub
inc
stos
or
and
mov
add
lret
nop
mov
cltd
lock
xor
lock
scas
mov
fmuls
in
mov
mov
out
inc
cltd
out
iret
out
pusha
xchg
inc
mov
xchg
push
push
mov
mov
mov
or
dec
push
sbb
push
loopne
sahf
adc
or
mov
aam
cld
or
sub
fsubrp
mov
xor
fldcw
inc
ret
loop
ds
inc
scas
addr16
mov
dec
jg
add
icebp
lds
loop,pn
push
shll
jp
repnz
fnstenv
adc
xor
aas
int3
xor
cld
lret
adc
mov
xlat
scas
add
lods
inc
or
or
arpl
adc
adc
adc
icebp
xor
mov
mov
test
push
mov
sbb
imul
mov
lds
sbb
add
sub
test
cs
xchg
ret
mov
and
sub
jp
mov
sbb
or
dec
lods
adc
out
push
leave
adc
mov
fs
add
inc
imul
pop
inc
dec
pop
and
push
mov
insb
add
gs
xorb
and
cmpsb
aaa
sahf
out
xor
xor
sub
sbb
addr16
pop
xor
jno
push
iretw
popl
test
inc
add
movsb
leave
aas
cmp
inc
cmp
pop
sbb
dec
aaa
stos
jnp
dec
cmp
nop
jg
addr16
jge
jns
dec
lret
in
add
xor
std
jne
stos
cld
xor
jge
cmpsl
adc
mov
pop
xor
xchg
into
sub
cmp
push
mov
data16
in
addb
cwtl
std
sarb
iret
cmp
out
rclb
mov
test
int
out
int3
xchg
lret
daa
adc
xchg
mov
mov
cmp
add
dec
and
addr16
jne
das
dec
shrl
mov
pop
fnstcw
lea
lock
xchg
sbb
fcompl
lret
sbb
xchg
mov
ret
jb
adc
lods
push
in
mov
out
pop
loopne
lcall
stc
xor
sti
dec
enter
mov
mov
mov
rcll
push
das
cmp
pushf
jle
mov
int
pusha
fsubrs
in
stos
inc
lods
cmpsl
mov
sub
stos
repz
dec
inc
data16
mov
pop
or
xchg
pop
int3
jle
xchg
clc
mov
mov
out
sbb
push
and
lea
gs
jmp
push
lahf
jle
xor
mov
push
aad
nop
mov
and
xorl
arpl
xchg
mov
or
call
imul
or
fadds
loope
pusha
inc
lea
fldl
sub
xor
cmp
xchg
data16
out
pshufw
mov
leave
inc
pop
mov
lds
gs
movsb
mov
jbe
into
gs
push
data16
mov
flds
iret
stc
orl
cmovg
mov
out
push
in
add
push
mov
mov
inc
pop
xchg
cmp
jb
adc
movsb
out
jne
push
addr16
fbstp
inc
cwtl
and
aas
jp
mov
insl
jle
fmuls
mov
popa
lds
xor
inc
ljmp
pop
adc
mov
lcall
movsb
cmpl
and
xor
stos
add
dec
mov
pop
dec
add
ss
add
push
aaa
cli
jmp
push
xor
sbb
iret
push
fisttpll
xchg
cltd
add
test
xchg
cld
sbb
and
cmc
sar
push
mov
push
mov
out
lock
mov
pusha
xchg
aas
test
or
cwtl
repnz
imul
das
out
inc
sbb
xchg
das
sbb
loopne
xlat
adc
cmp
or
inc
into
jg
mov
mov
add
ss
sahf
dec
push
mov
jno
lcall
out
xchg
int3
adc
inc
jnp
scas
pop
add
test
pop
jb
pop
int3
push
inc
inc
aad
xor
loop
les
or
jno
and
mov
jns
xlat
sbb
cmpsl
iret
push
or
jecxz
movsb
arpl
jne
push
ss
jnp
mov
xchg
out
and
test
pop
mov
cmp
daa
xchg
lea
popf
pop
adc
xor
lock
stos
cli
xchg
movsb
mov
test
out
xor
cwtl
testb
pop
mov
cmpl
dec
fsubl
push
test
mov
pop
cmp
jns
test
out
mov
mov
int
repnz
or
mov
dec
mov
inc
jmp
dec
fcmovnbe
push
sarb
xor
sbb
iret
add
ljmp
xor
add
jg
lahf
fldenv
xor
pop
pushf
push
jge
pushf
push
cmpsb
cmpl
movsb
les
std
mov
mov
inc
xchg
pop
mov
push
xchg
pop
jl
and
pop
addb
or
lret
adc
loopne
mov
sub
mov
xchg
and
loopne
ja
inc
sbb
es
das
or
mov
mov
cmp
jne
imul
fdivrs
leave
out
out
loop
cmp
xor
scas
cwtl
adc
xchg
xor
sbb
js
loop
loope
jo
xchg
jmp
test
dec
sbb
enter
jae
in
xchg
rol
mov
lock
dec
and
insl
test
dec
fsub
inc
ljmp
mov
sub
and
pop
popa
mov
in
dec
fwait
dec
add
jns
div
fdivr
sbb
pop
cwtl
bound
cmp
addr16
cmp
fstpl
pop
push
jne
vpsrlw
push
sub
jb
jecxz
scas
repz
and
mov
push
mov
mov
xchg
jp
fwait
mov
push
mov
and
xlat
ret
mulb
cmpsl
ss
inc
ud2
cmp
repnz
mov
add
dec
pusha
cli
pop
stos
loopne
jns
das
mov
out
in
fcoml
int3
lcall
xorb
orl
pop
cmc
pop
jb
push
xchg
jl
hlt
stos
mov
repnz
stc
dec
jmp
stos
add
mov
in
rcrl
add
push
cmp
fisttps
cmp
lret
xchg
cmpl
int3
and
out
pop
pop
push
leave
int3
jl
xchg
sub
push
pop
in
nop
call
cmp
and
or
lods
sub
sub
mov
in
enter
push
and
inc
fcompl
push
adc
or
int
inc
stc
xchg
sub
add
mov
adcb
add
dec
pop
or
cmp
push
push
lcall
out
mov
adc
ljmp
xchg
cld
lock
fcompl
int3
scas
ja
into
xchg
lahf
cwtl
rcr
orl
add
pushl
xchg
and
xor
out
mov
inc
inc
sbb
gs
loope
add
and
pop
add
or
int
mov
sub
mov
scas
into
mov
js
jecxz
jge
cmc
loope
rolb
ret
xchg
xor
les
pop
or
mov
les
pop
ss
push
test
mov
adc
pop
mov
inc
mov
cld
mov
daa
mov
cmp
out
mov
rol
out
test
loopne
ds
fadd
scas
adc
push
sub
sub
les
cli
daa
adc
sbb
xor
jo
addr16
cmpb
xor
adc
roll
nop
jb
sbb
mov
sub
mov
push
mov
adc
lods
fadd
jmp
add
lods
adc
inc
in
scas
xchg
dec
les
sub
mov
andb
outsl
dec
out
cmp
in
and
in
xchg
jmp
push
movsb
fnstenv
mov
jae
sbb
inc
or
aad
jle
pushf
loop
out
stc
adc
je
cli
and
jo
add
aad
pop
jnp
pusha
decl
push
test
daa
pop
cmpsb
add
mov
or
test
mov
in
add
push
hlt
stc
mov
mov
lods
sarl
test
insb
out
pop
mov
fs
or
leave
pushl
jno
ret
mov
scas
dec
inc
jp
jl
iret
ljmp
xorb
adc
shrl
daa
jp
mov
cmp
std
jecxz
in
les
jge
cs
or
lock
inc
and
push
outsb
add
stos
inc
test
idivb
and
cmp
and
orl
mov
dec
xor
cmp
adc
mov
mov
dec
fs
fstps
pop
sbb
je
xchg
xor
cmpsl
outsb
sub
into
shrl
add
loop
arpl
rolb
push
bound
mov
jno
xchg
hlt
out
jae
or
cmc
out
mov
repnz
in
loopne
nop
xor
js
in
insl
add
dec
sub
cmp
rcr
fstpl
mov
jo
bound
and
and
adc
gs
notb
mov
aas
cli
mov
shll
das
xchg
out
cltd
popa
sub
shll
mov
movl
scas
lds
stc
jne
cmc
js
cmpsb
sbb
adc
jae
cmp
aas
dec
les
int3
xchg
je
pop
repnz
adc
adc
sub
jb
fldenv
bnd
mov
out
imulb
adc
jns
push
inc
mov
sub
mov
xchg
jle
jecxz
test
ja
in
sub
pusha
icebp
xor
xor
inc
int
push
dec
jb
cmpl
adc
add
pop
out
fs
sbb
mov
and
pop
test
fdivs
jns
and
pop
jb
in
scas
aam
xor
dec
mov
int
imul
sbb
ret
fistpll
out
daa
jbe
rcll
cmpsl
mov
or
xchg
xor
data16
jmp
mov
sub
repz
push
fs
movsl
fdivs
sti
stc
imul
clc
mov
inc
adc
lahf
imul
mov
stc
daa
inc
sub
outsb
rcrb
aam
mov
dec
push
push
fcomp
dec
ror
cmp
add
xchg
mov
cmpl
loope
inc
dec
jnp
out
arpl
jbe
or
cmc
test
inc
sub
out
ja
fs
add
add
lock
pop
push
inc
insl
mov
outsb
imul
ret
inc
lcall
enter
pop
ret
push
pop
dec
testl
cltd
mov
inc
xlat
pop
ret
mov
add
lahf
jne
es
cmp
test
stos
out
mov
mov
iret
subl
test
shrl
push
ja
add
cmp
movsb
insl
inc
add
hlt
inc
cmp
sub
pop
pop
cs
mov
fsubrp
fst
xchg
mov
lcall
adc
xchg
pop
lahf
aam
adc
push
daa
in
int
stos
sbbl
ss
outsl
aad
adc
dec
xor
out
xor
push
hlt
les
mov
rcl
neg
push
dec
out
jns
mov
hlt
xorl
push
add
inc
insb
pop
mov
push
push
popf
xor
int3
jp
js
adc
out
jno
pop
lret
xchg
adc
mov
icebp
lret
sbb
dec
or
lods
outsl
adc
leave
lock
stos
jg
test
enter
adc
das
stos
mov
pop
xor
xchg
xchg
les
gs
test
lods
shrl
pop
sub
outsb
fnstsw
ss
adc
and
stos
aas
cs
inc
bound
inc
pop
addr16
out
cmp
pop
stos
mov
enter
into
jbe
jmp
add
cltd
mov
movsl
cmp
mov
repnz
fcoml
mov
mov
mov
aaa
adc
data16
adc
and
dec
ficomps
das
stos
dec
mov
mov
sub
mov
les
in
jnp
pop
mov
stc
pop
xchg
adc
jp
adc
pop
cmp
mov
lock
add
mov
into
call
leave
mov
push
ror
out
lahf
clc
decb
xor
xchg
repz
sahf
daa
or
jo
loope
sub
dec
dec
leave
push
cltd
insl
fwait
or
sbb
hlt
mov
add
arpl
or
cmpsb
pop
repnz
arpl
mov
stc
mov
aad
push
push
push
jl
xchg
sarb
hlt
lds
add
popa
stc
loope
xchg
int
fisttps
push
js
gs
pusha
insl
pop
faddl
aaa
xor
mov
cmp
add
sbb
dec
jo
jge
subb
sub
adc
xchg
mov
es
daa
int3
sahf
adc
scas
fcom
pop
inc
inc
pop
inc
outsl
pop
stos
mov
loopne
push
pop
jns
mov
adc
scas
out
arpl
or
fimuls
stos
xchg
jno
mov
cs
sbb
adc
fldcw
xor
and
jl
stc
push
push
push
jmp
xor
leave
out
loopne
std
inc
imulb
out
pop
add
push
cmp
orl
loopne
sbb
mov
cmp
pop
sbbl
add
inc
jne
aad
adc
popf
mov
stos
jne
outsl
test
jmp
rcrl
orb
stc
pop
xor
aam
fnsave
repz
xchg
into
shll
mov
sbb
inc
rcrb
jnp
data16
iret
inc
fiadds
add
sbb
dec
sti
std
std
mov
inc
arpl
mov
jae
fxch
jo
xchg
lret
dec
mov
add
inc
and
dec
aad
mov
sub
lock
scas
and
movd
inc
mov
cltd
inc
jns
jle
cld
hlt
mov
pop
cs
cli
jne
andl
or
jne
loope
add
popa
push
sbb
dec
pop
xchg
adc
mov
test
jno
repz
sbbl
cmp
push
ss
dec
loopne
test
cmp
jbe
push
cmpsl
add
jmp
mov
out
sahf
inc
jae
xchg
icebp
mov
or
adc
mov
inc
btr
mov
sbb
pop
cmpsl
mov
iret
push
rcrl
insb
or
test
stos
mov
fcomip
xor
das
mov
push
jge
stos
insb
sbbl
lcall
sbb
jl
leave
in
lahf
cmc
xrelease
popf
cmp
cli
xor
jle
sub
shll
xchg
out
insb
fsubr
and
movsl
or
sub
in
dec
jecxz
push
mov
ljmp
inc
or
je
push
out
lret
dec
pop
push
xor
push
mov
stos
jo
mov
or
push
into
mov
lcall
inc
jnp
and
sarl
gs
pop
cmp
cmpsl
cltd
xchg
pop
mull
cltd
mov
xchg
sbb
mov
and
cmpsb
es
dec
mov
and
cmp
push
icebp
mov
mov
and
call
sbb
xor
into
sahf
adc
rcrl
loope
jne
out
pmuludq
bound
cmp
xor
xor
mov
xchg
fmull
into
jg
xchg
push
mov
pop
call
pop
jns
jo
mov
aaa
jns
cld
rcrl
stos
pop
mov
sub
jp
fsubs
outsl
or
adc
dec
aas
lcall
jge
enter
mov
xchg
jge
ds
cli
test
xchg
jecxz
pop
scas
data16
jle
lea
mov
lea
fiaddl
or
dec
push
inc
mov
pop
stc
fistl
je
in
xchg
push
fidivl
mov
cwtl
lock
push
fidivs
adc
bound
mov
add
mov
push
leave
jno
inc
icebp
outsb
jae
mov
sub
xor
adc
scas
imulb
and
or
jecxz
out
jg
mov
jg
xlat
cld
lret
fnstenv
mov
fxam
shl
push
add
mov
lahf
fistps
add
pusha
pop
std
dec
inc
testl
mov
lods
mov
push
divb
mov
dec
shl
subl
sub
cmp
rcrl
lea
movlps
lods
pushf
jo
loop
cmp
test
pusha
mov
push
rolb
pop
ret
idiv
add
jns
adc
mov
jmp
jmp
adc
scas
dec
pop
and
sti
into
addr16
scas
add
jb
mov
mov
and
addl
jb
std
mov
and
jnp
cltd
xchg
dec
sub
pushf
sbb
loop
shlb
call
shl
pop
pop
hlt
jecxz
xchg
adc
xchg
cwtl
scas
test
cmpsb
mov
adc
inc
out
add
xchg
mov
ja
and
sub
sbb
xor
pop
jns
in
std
jae
sarl
sub
fstpt
aam
mov
adc
xor
and
push
aam
xor
cmp
in
out
add
mov
inc
lret
cli
inc
pop
jmp
dec
jne
rdmsr
push
sub
mov
push
or
int3
decl
add
repz
and
pop
xchg
sti
lea
loop
dec
push
mov
aam
push
js
leave
mov
add
cmpsl
jbe
add
inc
mov
in
mov
push
lods
into
jecxz
stos
ss
mov
lods
ss
push
fdivr
jp
mov
mov
sbb
adc
push
xchg
mov
std
jo
inc
stc
lock
maskmovq
mull
xor
add
jge
mov
loopne
sarb
xor
ret
mov
fcompl
xchg
add
cmpsb
xlat
xor
or
jno
loop
add
loopne
mov
fcomps
sbb
sbb
popa
loopne
mov
dec
in
fildll
loopne
lahf
stos
push
pop
pop
mov
xchg
xor
cwtl
xor
enter
stos
pop
push
pop
jne
and
jae
aas
push
add
mov
or
movsb
pop
loopne
push
dec
adc
scas
leave
xor
adc
out
xchg
or
xchg
and
pusha
pop
loopne
in
pop
or
push
lret
adc
sbb
rorl
push
pop
repnz
shlb
div
mov
mov
jp
addb
out
push
imul
mov
mov
sub
in
scas
and
clc
push
int3
cs
out
cmp
xchg
popa
cwtl
mov
adc
fmul
dec
sub
cmp
mov
fwait
or
clc
mov
mov
mov
lret
jb
lret
dec
lahf
mov
jecxz
aam
mov
push
ss
mov
in
inc
mov
fstpl
add
xchg
dec
dec
mov
roll
repnz
std
ja
pop
shr
cmp
jno
xor
jae
fcompl
and
push
mov
sahf
arpl
adc
push
pop
ret
jl
aas
xor
shll
movsl
sub
fnstsw
lods
lods
pop
aam
outsb
sbb
test
das
mov
aad
push
xchg
cmpsl
daa
push
sbb
mov
mov
rorb
shr
imul
xor
cmp
gs
cmp
push
cmovs
add
cmp
push
cmp
mov
or
jge
jnp
push
les
arpl
pushf
sti
push
pop
or
push
jecxz
dec
mov
lods
adc
mov
outsb
push
aam
jmp
insl
jae
mov
into
xorb
cli
and
dec
lods
fwait
in
sbb
loope
int
fsubrs
test
out
aad
dec
mov
xchg
pushf
popf
mov
push
ss
push
imul
xorl
xchg
pop
xchg
and
mov
jae
sbb
lea
clc
xchg
outsl
das
sbb
pusha
mov
daa
xchg
daa
data16
aaa
pop
outsl
mov
inc
fs
and
jecxz
negl
iret
iret
arpl
outsl
lahf
jl
mov
out
push
arpl
cmc
adc
popa
jecxz
stos
fisubl
add
mov
xchg
test
fldt
jmp
movsb
bound
pop
inc
fwait
push
xor
pop
fisttpll
and
inc
sbbb
test
addb
roll
adc
or
negl
js
push
jb
mov
sub
stc
rorb
inc
jb
stos
shl
shlb
addr16
xchg
mov
iret
sub
pusha
adc
out
pop
out
pop
adc
xor
enter
ret
lock
mov
into
push
in
out
pop
sti
std
jg
dec
jecxz
inc
mov
inc
sarb
push
add
mov
sub
xchg
fcompl
inc
frstor
js
mov
mov
dec
cli
clc
arpl
shlb
idivb
lock
add
lods
dec
stos
icebp
frstor
outsb
sub
mov
stos
jle
mov
pop
adc
push
add
adc
stos
mov
out
and
mov
jno
mov
ja
pop
mov
fnstsw
in
sarl
jge
mov
lahf
push
ja
sub
les
fsubs
push
push
push
xchg
in
mov
sub
stc
jbe
call
mov
and
int
xlat
cmpsl
dec
test
inc
inc
push
cmp
test
pop
mov
sbb
mov
push
inc
fs
inc
add
out
fisubrs
sbb
mov
cmp
shrl
lock
aam
imul
xchg
inc
lcall
mov
adc
dec
outsl
pusha
data16
and
imul
cld
push
jb
in
push
or
lock
mov
repz
and
dec
iret
fdivs
inc
pop
enter
repz
gs
and
repnz
out
xchg
and
stos
lahf
push
mov
scas
clc
adc
push
xchg
adc
dec
xchg
cmpl
sub
add
mov
cld
inc
xor
pusha
cmp
popf
ret
mov
daa
lods
xchg
mov
mov
inc
adc
icebp
in
popa
orb
andl
mov
inc
lds
imul
lret
push
jle
lret
sub
jle
jmp
push
pop
loope
push
enterw
aaa
pop
fisubrl
dec
xchg
imul
mov
mov
add
das
pop
divl
jmp
cwtl
or
push
adc
xchg
incb
mov
and
fwait
dec
mov
add
out
ret
mov
push
fcoms
jge
dec
iret
les
adc
daa
mov
mov
je
jne
mov
rolb
jg
cmpsl
or
jp
sub
addr16
lret
jbe
jae
dec
je
push
mov
pop
daa
jae
fadd
inc
cld
adc
lods
addr16
mov
fwait
and
jle
and
les
add
mov
daa
push
insl
and
fdiv
out
and
popa
cli
and
mov
jle
push
pop
dec
mov
mov
mov
push
cmpsl
imul
adc
aad
add
push
push
stos
lods
push
xchg
cmp
cli
add
scas
pop
incl
jno
movsl
in
fwait
cmp
mov
fmul
mov
outsb
xchg
mov
scas
lcall
jle
mov
cmp
nop
jl
or
in
faddl
and
xor
rorl
sbb
sbb
stos
sub
cmpsl
jmp
jae
xchg
loop
aas
push
mov
cmpsl
cmpl
jae
sbb
loope
sbb
les
fs
imul
fcomp
sti
xor
je
clc
mov
pop
shrb
xchg
xchg
std
push
push
aam
les
rolb
pop
cmpsb
ljmp
scas
imul
inc
cmpsb
xchg
cmp
fistl
inc
rcrb
or
or
mull
test
sbb
fucomp
sbb
add
sarl
lods
data16
repnz
sub
add
icebp
test
popf
nop
mov
or
and
xlat
nop
lahf
inc
mov
pop
mov
nop
jecxz
stc
fmulp
add
inc
xchg
fdivs
aam
and
jmp
adc
xchg
fdivrs
rorl
out
or
movsl
xchg
lods
dec
stos
mov
enter
int3
incl
filds
idivl
sbb
mov
push
dec
adc
daa
sub
aam
pop
and
jg
xor
xchg
lds
in
xchg
add
lcall
push
add
pop
aas
in
bound
push
fs
lret
mov
cmp
out
shrb
inc
mov
leave
js
ret
cmp
sbb
imul
ljmp
adc
inc
test
cmp
fmuls
test
daa
mov
loop
test
pop
cmp
pusha
cli
loopne,pn
sub
push
xchg
mov
in
cmp
pop
popf
xchg
inc
and
pop
leave
or
mov
dec
into
or
and
stos
adc
imul
sub
inc
push
adc
enter
enter
inc
aam
jge
test
stos
push
cmp
xor
dec
sub
mov
fcomps
mov
ret
pop
push
cmp
inc
std
pop
xchg
xchg
aad
iret
cli
sarb
adc
xchg
or
ret
push
mov
mov
cld
sub
sahf
in
imul
add
pop
inc
xor
dec
call
movsb
ds
popa
push
ja
call
lods
pop
xor
xchg
sti
loope
out
popf
movsl
cmp
xchg
addr16
inc
mov
mov
enter
add
push
sar
xchg
loopne
and
sbbb
sub
jbe
add
inc
cmp
mov
neg
and
out
aam
pop
pop
gs
imul
cwtl
clc
stos
jg,pn
das
test
jmp
sbb
or
and
arpl
sbb
popf
shrl
xor
cmp
ja
pop
cmp
out
insb
mov
scas
xor
in
fdivrs
adc
hlt
push
xlat
mov
jle
or
es
mov
jne
cmpsl
and
movsl
cli
adc
stos
xor
daa
pushf
hlt
xor
mov
shrl
stc
cmp
psllq
hlt
push
xchg
mov
add
movsl
aam
aam
movsb
ficomps
mov
pop
xor
scas
mov
test
fs
enter
scas
jae
hlt
dec
inc
xchg
mov
rorl
inc
xrelease
dec
cmpsl
jo
mov
dec
push
pop
and
stos
pop
cwtl
xchg
dec
sub
push
jmp
lahf
insb
outsb
gs
ret
rcl
jecxz
mov
pop
popf
add
dec
sub
cmp
mov
arpl
insl
jbe
xor
cmpsl
ret
cmp
mov
call
imul
movsl
mov
xor
mov
or
or
xacquire
invd
mov
push
clc
je
ja
jns
lret
lds
dec
and
inc
dec
repnz
push
ret
stos
fnstenv
in
gs
or
testl
sub
and
jecxz
mov
jnp
rorl
js
hlt
sub
pop
aad
loopne
jp
int3
inc
or
cmpsl
xor
aad
imul
loop
cmc
mov
xchg
add
int3
stos
cmpsl
int3
shl
jmp
insb
mov
iret
mov
sub
and
mov
push
xor
cs
out
dec
cmp
add
dec
xor
mov
xchg
es
dec
xorb
std
adc
loopne
aad
pop
neg
lcall
ja
jle
push
add
enter
ja
cmp
popf
idivb
out
mov
add
jp
popf
or
shrb
ret
mov
or
test
out
fidivrs
cld
mov
mov
js
hlt
enter
jmp
mov
dec
inc
insl
fisubl
push
out
in
mov
mov
mov
push
xchg
lret
dec
cmp
in
sbb
ret
cmp
mov
jle
dec
add
pop
push
push
aam
dec
xchg
out
mov
sub
ljmp
add
jbe
push
mov
dec
lods
mov
fbstp
or
adcb
add
repz
lods
jecxz
or
push
int
sbb
sub
aas
js
add
jmp
adcb
test
int
xchg
jmp
mov
test
mov
push
aam
jnp
stc
xchg
sub
js
xchg
jle
cmp
jle
mov
push
pop
mov
movsb
jbe
mov
mov
cmp
pop
push
jmp
inc
sub
ljmp
mov
and
inc
aad
mov
rorb
rcrl
mov
test
shrb
jo
pop
aam
push
test
mov
repnz
or
jg
fidivl
and
nop
sahf
mov
pop
sti
and
popf
cld
mov
movsb
and
mov
push
push
inc
ja
cmp
and
pop
lret
jmp
push
mov
push
dec
xor
and
add
push
in
xchg
or
fmull
xchg
scas
mov
sarl
mov
clc
out
jb
dec
mov
stc
jg
mov
and
jae
pushl
out
les
adc
mov
adc
sahf
hlt
and
popa
xchg
fidivrl
add
dec
aas
cwtl
aas
sbb
or
or
arpl
movsb
leave
mov
lods
mov
dec
lods
in
adc
mov
mov
mov
popa
jg
or
inc
pop
sahf
imul
cmpsb
cmp
xor
or
mov
gs
inc
nop
pop
stc
jle
xchg
xlat
mov
adc
jg
cmpsl
push
or
or
inc
sub
adc
fadd
cltd
lea
add
fildl
mov
addr16
inc
mov
bound
mov
mov
xor
cmp
or
cmpsb
cmpsb
out
jge
aas
pop
ret
xchg
adc
xor
fs
jp
adc
loopne
scas
pushl
xchg
sbb
push
sub
mov
dec
push
push
mov
xchg
mov
mov
adc
roll
sbb
cli
int
or
int3
fisubrs
mov
movsb
mov
and
enter
imul
and
inc
xor
movsl
pop
mov
or
ret
sub
ja
lret
sbb
test
xor
jo
bound
and
pop
addr16
in
ja
jp
sub
sbb
hlt
pop
movsl
inc
fidivl
lcall
inc
sbb
js
pop
fsts
sub
push
sbb
add
lret
shrb
xchg
xchg
sbb
cmp
dec
fldcw
adc
fstpl
addr16
in
or
mov
xor
bound
dec
xor
add
push
add
xor
fs
rcl
add
pop
popa
mov
repz
jg
cltd
push
sbb
imul
fbld
pop
popa
push
stos
mov
movl
stos
and
fists
lret
int
push
notb
insl
lahf
cmpsl
pop
jge
icebp
pop
pop
sub
cmpsb
test
movsl
movsl
sbb
adc
dec
push
pop
andb
insb
or
push
add
pop
jne
mov
fadds
jb
xor
aaa
gs
and
adc
sbb
mov
roll
pop
or
inc
loop
dec
inc
pop
adc
popa
icebp
js
fdivrl
push
daa
lds
pop
mov
add
ss
and
in
movsl
jnp
scas
in
insl
test
jl
movsl
xchg
lods
sbb
adc
dec
nop
ret
out
lcall
jmp
push
mov
out
jl
xlat
stc
es
mov
xchg
cld
popf
pusha
outsb
aas
int
dec
ja
xchg
push
or
sbb
sti
and
push
mov
sub
mov
inc
mov
addr16
leave
fsubrs
mov
stos
sub
pop
cli
fbld
out
arpl
insl
pusha
test
xchg
imul
push
addr16
out
add
jmp
and
inc
shlb
and
push
jbe
or
sbb
push
jns
in
sub
bound
push
popf
aam
inc
loope
shrl
push
addr16
cmp
pop
xor
mov
dec
test
add
test
push
push
jmp
cmp
jmp
aad
adc
xor
nop
iret
nop
jmp
pop
leave
fstpl
mov
aas
dec
jae
dec
imul
int
movsl
fnstcw
xor
fsts
pop
js
mov
pop
push
jae
dec
cld
dec
add
bnd
push
adc
xchg
rcr
sahf
dec
stos
je
push
popa
pop
jnp
ljmp
addr16
flds
sbb
pop
or
jo
add
cmp
loop
pop
insb
clc
fsubrs
ret
in
shlb
cs
dec
ret
rorl
lock
jnp
das
sub
shlb
mov
ret
insl
push
aas
or
gs
sbb
push
cmp
adc
js
xlat
mov
arpl
mov
ja
inc
pop
xchg
and
fistpl
mov
cs
test
add
or
cmc
bound
inc
in
mov
jge
popa
cli
mov
or
or
sahf
pop
xchg
pop
cmp
pop
imul
icebp
add
iret
jnp
data16
xchg
and
cmp
cmp
repnz
push
repz
das
sub
add
pop
int
fs
pop
xchg
cs
bound
jo
ret
cli
popa
pop
sub
jns
jl
cmc
insb
mov
imulb
decl
dec
and
rorl
test
push
mov
cwtl
cltd
push
adc
mov
add
jp
leave
lods
sahf
and
cmpsl
sub
jge
lcall
fimull
rclb
jl
outsb
lock
sahf
lea
fmulp
cld
popf
stos
adc
inc
push
dec
push
out
xor
dec
mov
jmp
mov
dec
jae
jae
or
sbb
mov
mov
subb
cli
sti
jecxz
pop
addr16
dec
call
sub
out
or
fsubs
sbb
insb
fildll
add
mov
movsb
fucomip
mov
fucomp
sbb
xor
cli
xchg
jns
cmc
repnz
je
int
in
lahf
mov
ror
mov
mov
cltd
sarb
mov
xchg
fnsave
jp
add
pop
lret
andb
mov
loope
adc
jl
push
call
adcl
lcall
into
mov
adc
pop
push
mov
dec
lcall
gs
ss
rcl
add
and
push
leave
fimuls
or
pop
lds
loopne
ret
inc
dec
xchg
enter
aad
jne
outsl
mov
imul
mov
sbbl
inc
jae
addl
test
push
xchg
jmp
dec
movhps
mov
mov
nop
gs
jp
imul
mov
inc
jmp
fsubrl
pop
sbb
aas
sub
mov
mov
mov
shl
sbb
imul
in
pop
push
inc
add
cmp
adc
mov
inc
imull
out
lods
mov
cltd
das
icebp
xor
in
jbe
out
or
inc
pop
mov
and
subl
or
repz
or
popa
insl
sbb
rcrb
outsl
and
jl
and
shlb
push
xchg
lcall
jns
call
mov
dec
bound
push
dec
in
mov
dec
cld
aas
sbb
scas
push
sbb
shlb
outsl
jecxz
jo
push
pop
stos
and
mov
xchg
xor
mov
fldl
add
jle
hlt
sti
mov
lret
outsl
xor
adc
out
xlat
fwait
rcrb
cmp
in
inc
mov
adc
pusha
jo
shrl
out
pop
out
pop
outsl
stc
in
inc
loop
ret
or
mov
cmp
jg
pop
fwait
cmp
push
add
jnp
in
mov
out
js
xor
mov
lahf
cmp
shll
xchg
orl
mov
mov
add
mov
adcl
imul
je
or
push
cmc
xchg
mov
push
repz
loopne
pusha
mov
pop
out
push
popl
out
jmp
jb
leave
pusha
inc
xchg
xor
jl
xchg
cwtl
insb
pop
shrl
lcall
test
pop
mov
and
lret
sub
push
and
ret
imull
and
pop
sbb
or
dec
mov
lret
rclb
pusha
mov
test
ss
mov
cmp
jg
xor
jmp
fwait
adc
sub
mov
decb
lods
call
xchg
pop
notb
or
roll
cmp
push
cmp
lret
pop
testl
adc
mov
inc
lahf
dec
test
push
add
sub
mov
gs
mov
loop
cmp
mov
pop
push
jl
jl
aam
das
das
sbb
aaa
and
js
fldl
enter
mov
sbb
nop
mov
dec
leave
push
adc
aam
testl
xor
loop
out
fisttpl
xlat
je
sbb
call
mov
and
jl
orb
inc
or
subl
adc
into
adc
mov
xchg
ljmp
int
lods
or
nop
divb
fdivrs
mov
bound
enter
push
sbb
gs
adc
cmp
arpl
jb
je
cmp
pop
out
fcmovnb
sbb
pop
jbe
lock
inc
std
mov
shrb
ljmp
and
call
add
loopne
push
sub
mov
gs
or
push
adc
rcll
test
dec
repnz
sub
or
jno
jp
out
in
aas
fstps
test
or
aad
mov
pop
sahf
movsl
ja
fwait
stos
cmp
test
arpl
xchg
jo
in
push
jge
push
daa
lahf
mov
mov
mov
imul
ret
out
xor
sub
push
fiaddl
add
mov
dec
icebp
rorl
push
ret
mov
inc
add
aam
mov
pop
cwtl
pop
loop
jle
sbb
dec
lds
icebp
test
out
data16
pop
sub
sbb
mov
sbb
inc
je
roll
dec
lods
ficomps
clc
sub
inc
mov
repz
mov
in
emms
cli
sub
jns
pop
ja
cs
shll
outsl
fldcw
add
int
pop
lret
xor
sbb
mov
cmp
jae
lods
or
aad
fdiv
adc
dec
adc
sub
out
sarl
daa
clc
out
push
rorb
jo
mov
dec
push
push
dec
enter
dec
sar
pop
dec
dec
push
das
repz
jecxz
loopne
sbbl
les
repnz
cwtl
mov
test
paddb
das
pop
cmp
mov
inc
decb
push
and
add
dec
mov
mov
cwtl
mov
outsb
or
jnp
shrb
xchg
pop
fmuls
jns
ret
js
out
dec
mov
add
in
nop
push
lahf
pop
mov
pusha
jbe
add
sti
inc
nop
sub
adc
mov
mull
lahf
and
loopne
icebp
roll
push
stos
popa
add
mov
ret
adc
pop
xchg
fwait
xor
in
bound
push
jmp
jns
pop
adc
fwait
ret
mov
add
rol
ret
lea
fadd
stc
ret
sbb
or
enter
movl
pop
pop
mov
pop
repz
inc
nop
xchg
mov
dec
outsb
imul
inc
lods
or
aam
cs
sub
adc
loopne
pop
xchg
inc
lahf
fisttpll
nop
sbb
mov
lea
mov
pop
push
and
add
mov
adc
and
cld
jle
out
sbb
and
sbb
xor
mov
mov
dec
cmp
dec
jp
data16
ret
jae
add
lods
nop
mov
ret
jg
movaps
icebp
lahf
mov
push
dec
jmp
mov
rcrb
lcall
inc
dec
xchg
push
mov
inc
scas
and
and
and
dec
pushf
xor
jmp
sub
push
pop
mov
sbb
inc
fs
xor
jae
lock
sbb
sub
lahf
lds
push
sub
cmp
pop
std
sbb
mov
mov
inc
dec
add
pusha
mov
fs
xor
xchg
jecxz
sub
jns
or
mov
mov
inc
ss
gs
jae
add
mov
jge
mov
mov
loopne
scas
fsubr
rclb
sbb
pop
out
pop
scas
addr16
jns,pt
lcall
sub
aaa
popa
cli
pop
fimuls
inc
push
adc
sarb
outsb
cs
push
jl
cmp
imul
and
negb
sbb
arpl
lcall
push
pop
push
arpl
mov
or
sbb
in
add
pop
push
and
popa
push
xchg
mov
or
push
add
and
xchg
mov
nop
fs
clc
out
cmp
lds
lret
arpl
or
inc
or
xor
xor
incb
lea
pop
outsb
mov
sahf
into
sbbb
xchg
enter
mov
scas
aam
xchg
je
push
lods
dec
lahf
and
pop
inc
sub
fsubs
rorl
sub
cmpsl
fistpll
stos
rolb
ror
loop
push
push
and
lds
jae
lret
dec
pop
rorb
fidivrl
fldcw
jecxz
outsl
pop
lgs
popf
xor
dec
imul
mov
and
andb
mov
xor
inc
aaa
xor
and
add
xor
roll
jb
cmp
aas
cmpsb
pop
pusha
inc
daa
sub
xchg
sbb
pop
jg
cwtl
stos
dec
jnp
cli
sbb
in
ja
cmpsl
lahf
int3
add
imul
xchg
add
popf
xchg
js
aas
movsb
loopne
insb
push
xor
push
je
xchg
pop
outsl
xchg
sbb
push
jno
lods
ficoms
push
imul
mov
leave
mov
ljmp
sub
pause
hlt
pop
fcomps
fldcw
jmp
out
shrl
imul
int
jl
lret
or
jge
pushf
jno
pusha
jl
adc
adc
nop
popf
jge
ret
sub
ljmp
mov
lds
dec
mov
imul
sbb
scas
nop
sub
sbb
pushl
icebp
xchg
mov
shrb
stc
pushf
ja
subl
aaa
out
pop
daa
subb
push
cli
movsb
in
sbb
mov
lods
inc
pusha
std
mov
xchg
add
pop
inc
mov
das
lods
ljmp
lahf
xchg
popf
nop
push
mov
push
cmp
mov
xor
add
pop
push
cmp
xchg
insb
mov
loop
out
movsl
push
push
ret
sarl
xchg
lds
movsb
mov
sbb
mov
push
rcll
cmp
xor
pop
ret
addr16
xchg
pop
add
jbe
sbb
sarl
rcr
test
jecxz
xchg
ss
scas
mov
ret
jmp
call
inc
cmp
stos
add
sub
leave
push
lret
sahf
xchg
mov
cld
jecxz
pop
sub
jae
pop
inc
test
popf
pusha
sbbb
iret
mov
lret
mulb
and
enter
dec
movsl
mov
cltd
pop
mov
inc
jno
and
adc
xchg
mov
fnsave
rcrb
jb
pop
jmp
jg
ret
gs
movsl
ret
jae
fisubs
cmp
insw
loop
dec
and
mov
fmuls
lcall
iret
mov
popa
lock
inc
sbbl
movsl
add
popa
inc
sti
sahf
test
outsb
enter
add
fisubs
mov
pushf
adc
jne
test
psraw
inc
mov
stos
jne
shll
mov
out
mov
or
outsb
mov
clc
mov
lret
mov
cld
xorl
adc
std
fs
pusha
adcl
leave
data16
ja
mov
imul
test
push
stos
and
dec
jecxz
out
cmc
into
adc
outsl
mov
pop
out
aam
scas
xlat
mov
scas
push
fisubs
sbb
sti
negb
hlt
mov
push
sbb
mov
cli
push
xchg
cmpsb
loope
mov
mov
ret
mov
add
data16
inc
jns
dec
out
push
jo
clc
bound
and
jb
fs
sbb
jp
fucomi
add
ja
and
aam
je
rolb
rcr
cmp
cmp
lock
jmp
xchg
insl
push
insl
sbb
test
addr16
or
into
cmp
sub
xchg
cmp
cmp
add
les
ljmp
xadd
leave
stos
mulb
push
or
lods
add
aam
pop
psubw
dec
daa
test
out
incb
je
pop
pop
mov
sbbl
xor
sub
cmp
jns
gs
aad
loop
enter
sbb
and
shl
iret
js
xchg
push
inc
in
ret
pop
add
gs
imul
or
jp
mov
xchg
pop
es
xorb
in
jne
out
shll
dec
and
cli
inc
push
pop
inc
mov
outsl
and
xchg
inc
xchg
out
push
jns
push
inc
lahf
in
clc
jl
jbe
das
aad
ds
xlat
xor
outsb
sbb
mov
pop
jecxz
popa
movsb
xchg
mov
mov
mov
and
or
in
ljmp
pop
cli
pop
mov
je
test
out
aam
dec
gs
sub
sbb
lcall
and
push
inc
pop
mov
jmp
push
mov
outsl
in
mov
popa
mov
jnp
rorl
jne
lret
xor
push
pop
mov
sbb
adc
cmp
sti
adc
mov
sbb
fnstcw
aam
inc
shl
clc
jne
mov
pop
mov
push
daa
inc
xchg
jb
popl
mov
jl
rcl
cltd
push
inc
out
sub
and
or
push
sbb
mov
pop
mov
int
sub
sub
popa
or
cld
in
in
xchg
inc
dec
jns
mov
out
jns
cmp
sarb
sbb
enter
adc
cmp
insb
cmp
pop
fidivrs
inc
xchg
add
mov
push
push
popf
push
cwtl
cmpsl
lds
push
test
dec
xchg
dec
das
mov
outsb
outsb
push
cmc
jb
xchg
ja
cwtl
push
cmpsl
inc
inc
adc
sub
lahf
inc
add
and
aaa
jns
inc
push
add
jle
jb
mov
in
test
lds
shlb
jb
xlat
fiadds
insb
addl
mov
in
je
lds
jne
enter
lret
push
dec
fxam
aad
outsb
scas
dec
mov
mov
fistl
jmp
and
pop
fwait
mov
in
dec
jbe
pop
movsb
sbb
jo
insb
sti
aaa
insb
mov
hlt
ficoml
idivl
inc
push
adc
adc
inc
pop
push
adc
mov
arpl
jl
sub
iret
stc
hlt
cmp
les
xor
cmpsb
fwait
inc
insl
addr16
subl
xor
repz
pop
popa
add
jp
mov
test
mov
inc
push
outsl
push
jnp
gs
push
pop
sub
fidivrl
mov
scas
in
cmp
jg
and
jg
mov
ds
jbe
adc
cmp
ljmp
sbb
arpl
jae
push
pop
push
cmpsb
xor
les
test
cmc
push
add
lods
dec
jp
mov
sub
gs
push
in
ret
in
addr16
cmp
xchg
lret
dec
or
adc
dec
cmpsb
je
mov
or
adc
movsl
insb
jecxz
loopne
dec
cwtl
xchg
pop
mov
add
pop
stos
dec
popa
cmc
hlt
pop
push
and
jg
test
inc
shld
mov
out
out
loope
mov
mov
call
aam
hlt
mov
fnstcw
cmp
repnz
push
aam
sbb
imul
xor
xor
cli
and
lret
popf
xchg
nop
rcrb
dec
push
sahf
push
fsubs
es
popa
xor
sub
mov
mov
mov
in
xor
sub
jmp
jle
imul
sbb
mov
sub
add
push
stos
daa
push
mov
mov
push
mov
adc
mov
xorb
arpl
ljmp
sti
dec
push
fsts
jp
adc
inc
fbld
bound
add
jg
insb
aas
fs
pop
out
jns
adc
test
scas
arpl
pop
enter
sub
xor
mov
jle
mov
loopne
or
or
int3
mov
add
das
jmp
xor
movsb
adc
mov
ret
inc
mov
cmp
sti
popa
imull
push
aad
rcrb
pop
and
push
in
push
xchg
fiadds
std
mov
xchg
call
cmc
pop
jle
cmpsb
dec
les
test
pop
ret
mov
xchg
out
adc
cltd
lret
loopne
shrl
push
nop
dec
fs
sbb
stos
dec
in
or
popa
and
fs
push
pusha
sbb
xchg
out
in
stos
inc
adc
mov
daa
popa
lret
lods
and
xor
mov
leave
sbb
mov
fwait
xchg
stc
lods
sbb
pop
call
cmp
fcomps
mov
pop
and
mov
or
push
sbb
push
sbb
rcll
mov
mov
std
jp
ss
xor
mov
addb
xchg
jnp
in
hlt
sub
or
movsb
insb
cltd
in
mov
inc
push
gs
inc
dec
xor
pop
inc
ja
mov
lods
push
dec
dec
push
repz
fsubl
pop
mov
fidivrl
call
xor
adc
lods
xor
dec
test
enter
sub
orl
mov
push
mov
mov
push
push
pmaxsw
inc
shlb
repnz
hlt
fnstcw
rcrb
pop
shl
lret
mov
fwait
insl
cmp
arpl
lret
mov
mov
push
cld
cs
cmpsb
xor
cmp
and
mov
clc
stos
enter
fisubl
aas
adc
cmp
mov
and
sub
xchg
mov
iret
call
dec
jecxz
dec
inc
mov
push
insb
insl
loop
jecxz
clc
inc
repnz
imul
or
shrl
inc
insb
ror
jmp
pop
shll
push
fldl
ficomps
in
int
call
out
scas
push
add
xchg
pop
hlt
repz
pop
in
loopne
xchg
xchg
sub
flds
cmp
stos
push
or
stos
mov
mov
loop
aad
divb
pop
popf
outsb
addb
inc
lock
mov
out
cmpsl
jmp
add
loop
sub
gs
fsubrl
iret
das
mov
adc
mov
and
inc
rcrl
jge
aaa
mov
loop
mov
xchg
push
or
je
ret
out
mov
pusha
aaa
add
insb
mov
lds
xorb
fisttpll
outsl
adc
in
in
mov
in
mov
pusha
jnp
jno
pop
push
imul
lcall
adc
sub
fmuls
les
ljmp
sbb
pop
jmp
jnp
int3
sub
add
add
shll
std
or
xchg
lcall
or
sahf
or
xchg
inc
push
jns
sub
inc
enter
mov
jne
popf
xchg
cmp
inc
xchg
jbe
mov
or
aam
push
stc
pop
dec
mov
or
mov
inc
cmpsl
inc
inc
mov
std
mov
pusha
rorb
outsl
sbb
int3
push
sub
jmp
stos
pop
and
cmovg
pop
sub
inc
jnp
out
insb
sub
adc
mov
ret
notl
rcrb
pop
cld
pop
cmp
cmp
test
mov
out
movmskps
mov
stc
and
std
xor
test
movb
rcrl
mov
or
flds
add
jmp
jecxz
mov
mov
mov
movsl
fdivs
aaa
fidivs
das
mov
int
adc
xor
lahf
inc
mov
popa
sbb
loop
sbb
clc
and
sbb
dec
lds
cmc
mov
mov
mov
movsl
rcrl
stc
mov
ret
dec
clc
mov
jge
test
or
push
subl
add
xchg
push
jne
adc
mov
inc
jl
fimuls
mov
sbb
pop
sub
xchg
outsl
cmc
insl
mov
cmp
in
negl
out
adc
mulb
sub
inc
repnz
in
test
loopne
aaa
call
ds
cmp
jo
dec
xor
mov
repz
dec
rcl
mov
push
sub
daa
out
gs
jns
or
icebp
gs
aad
inc
or
pop
out
mov
push
mul
scas
repz
addr16
fcom
jno
xchg
aaa
dec
jb
stos
push
inc
dec
fstps
insb
sub
bound
test
call
in
xchg
dec
dec
inc
xchg
subl
inc
pop
leave
cmp
or
shll
push
cmpsb
mov
and
xchg
addb
mov
outsb
test
and
add
imul
jo
pop
cld
aam
mov
daa
xchg
shll
rcrl
xchg
cmp
push
out
inc
repnz
mov
movsl
xor
add
and
sbb
push
or
sub
lock
cs
test
dec
jno
popa
jbe
pop
or
cmp
stc
xlat
jo
xor
arpl
pop
aas
movsb
add
mov
lahf
incb
fwait
repnz
sbb
mov
rcr
or
cmp
inc
popf
iret
cmp
cmp
push
pop
das
mov
dec
andl
jle
or
in
and
lahf
sub
imulb
or
or
dec
mov
cld
or
je
or
test
jbe
jno
xor
clc
adc
jnp
popa
mov
push
dec
xor
xchg
lods
sub
pop
sbb
add
in
xchg
dec
sub
inc
mov
out
xchg
in
jne
pusha
lret
fcmovb
sahf
adc
stos
xchg
dec
cmpb
or
xchg
push
rcrb
cltd
fs
jnp
mov
roll
cmp
or
scas
aad
add
hlt
lret
and
xlat
leave
or
push
cmp
andb
daa
arpl
ret
sarb
gs
lock
outsb
cmp
or
jp
xchg
shll
xchg
cltd
mov
fcompl
add
mov
out
mov
or
test
mov
out
sub
mov
adc
pusha
adc
sub
loope
lcall
out
mov
xor
out
lods
cmp
les
pop
in
sub
jle
or
push
xchg
sub
leave
dec
sub
push
cmp
cwtl
and
jbe
stc
ss
test
dec
ss
xor
iret
fwait
inc
push
dec
arpl
ja
mov
push
xchg
add
and
cli
adc
loop
and
adc
cmp
cmpsb
ja
mov
movsl
inc
sub
mov
dec
pop
repz
and
fldenv
push
cmp
std
lods
jge
lret
orl
loope
fdivp
jg
add
fucom
sub
sbb
sbb
hlt
xchg
inc
dec
mov
insb
sub
push
dec
scas
push
es
lods
sub
cmpsl
loopne
push
hlt
jg
sbb
adc
stc
filds
xchg
push
push
mov
ficoms
lahf
and
xchg
xor
scas
adc
jl
xlat
cwtl
xchg
inc
jo
push
aas
bnd
js
mov
mov
sub
xchg
imul
call
les
xchg
popf
cwtl
mov
jne
es
ds
movsl
bound
or
jne
ljmp
test
iret
add
xlat
inc
test
push
lcall
test
jge
lds
pop
movsb
and
cmp
and
clc
aad
pop
sub
jo
pushf
xor
pop
mov
lds
dec
or
mov
or
fadds
cld
mov
pop
push
push
js
jecxz
jb
sbbl
sub
fisubrs
clc
pop
cmp
fucomi
nop
out
lcall
test
push
dec
in
imul
jns
jb
bound
inc
fisubrl
mov
loopne
loop
and
shlb
mov
mov
inc
mov
add
pusha
sahf
and
inc
push
mov
sbb
lock
test
shrb
push
pop
stos
addb
iret
xchg
test
dec
and
jno
push
imul
test
ret
xor
adc
hlt
fcmovne
inc
mov
sbb
cmp
mov
ret
test
sbb
fcom
or
aas
div
push
xor
test
cmp
or
and
fs
push
sbb
ss
sbbb
das
pop
xchg
mov
lret
jno
sub
inc
cmp
push
iret
int
ret
sti
add
in
mov
arpl
lret
lahf
adc
add
sbb
mov
js
or
ret
sti
pop
jbe
ja
mov
lret
mov
cld
mov
xchg
dec
xor
xorl
cmp
xchg
sub
cmp
leave
out
push
pop
rolb
ret
xchg
cmc
icebp
pop
aad
and
xor
sti
out
sub
jp
in
test
add
pop
add
cmp
loope
pushf
mov
or
nop
and
sbb
out
movsl
xchg
sub
dec
fldenv
leave
addr16
ja
mov
pop
push
stos
mov
sbb
push
xchg
inc
imul
test
jecxz
xor
jnp
mov
push
lret
sub
stos
addb
jne
xchg
push
out
xchg
scas
insb
push
loopne
or
xchg
out
loopne
lret
dec
adc
xchg
push
shrb
fistps
lret
fcompl
jne
xlat
movsb
jns
adc
push
push
es
xchg
in
pop
std
cmc
jno
pop
mov
xchg
es
xor
addr16
cmp
loopne
andb
jmp
sahf
popa
mov
cs
mov
sbb
lahf
mov
sub
jle
sbb
push
xchg
in
in
emms
mov
js
js,pn
xchg
lret
sub
cmc
sbb
shrb
imul
fs
fnstcw
data16
nop
inc
sbb
sub
mov
and
les
les
les
xchg
inc
jmp
movsb
add
add
lret
sbb
xor
xchg
inc
insl
sub
lcall
xchg
test
sbb
add
push
hlt
stc
stc
in
cli
fldt
xchg
mov
push
cmp
mov
fildll
cmp
stc
sub
adc
js
and
in
out
cmp
xchg
cwtl
pop
dec
cltd
push
addr16
inc
int
test
pop
cmp
in
mov
inc
jo
nop
ret
fldt
mov
in
push
nop
fcmovnb
das
ss
int
cmp
movsb
xchg
lcall
ret
cli
repz
cmpsl
xor
lea
sbb
loopne
fisubrl
or
fisttpll
mov
jne
push
int
lea
sub
ja
js
or
push
gs
xchg
aaa
add
in
push
insl
ret
testl
sub
stmxcsr
test
cmp
mov
in
add
jp
pop
push
mov
mov
andb
pop
jge
lret
and
push
daa
mov
push
jmp
rorl
jp
or
in
pop
mov
xor
dec
adc
fadds
outsl
dec
jg
int
leave
pushl
stos
cli
xchg
sbb
inc
sbb
test
loop
or
dec
pop
pop
leave
arpl
or
das
xlat
push
ficoml
dec
push
nop
pusha
adc
cmp
dec
inc
imul
mov
cmp
movsl
lahf
push
mov
test
xchg
and
mov
pop
mov
lods
mov
les
daa
push
je
push
jmp
xorl
ja
in
out
jne
jno
es
leave
and
into
testl
adc
fistl
xchg
push
lahf
mov
fbstp
mov
sbb
inc
mov
insb
int
imul
xor
inc
cmp
mov
lahf
rolb
cmp
dec
fnop
inc
cmp
fs
lahf
add
sub
adc
cli
repnz
cmc
jg
or
imul
shll
dec
push
or
sub
lods
aad
out
scas
cmp
jge
and
scas
lods
stos
cmpsl
rcrl
jns
fstps
jl
in
add
fwait
adc
mov
mov
rorl
mov
lcall
sbb
pop
jmp
popl
adc
lock
repnz
sbb
sbb
lret
sarb
movq
and
in
inc
outsl
sti
inc
call
jp
mov
dec
aas
hlt
std
push
pusha
sbb
je
ds
testb
imul
jo
subl
lock
insl
faddl
cmpsl
mov
stos
fcomi
push
mov
pop
xor
lods
push
xorl
scas
xor
movb
xchg
adc
push
decb
dec
sub
push
cmp
cld
push
dec
mov
aad
call
dec
sti
mov
in
jo
inc
mov
jecxz
adc
xor
mov
inc
nop
mov
cmpsl
pop
sbb
adc
test
dec
dec
or
push
push
mov
adc
xor
sub
nop
lret
mov
in
jp
outsl
push
dec
jp
or
insl
xchg
in
sbb
mov
cmp
sub
xlat
stos
cld
pop
jmp
mov
or
fistps
dec
shl
lea
push
div
inc
cmp
mov
fbstp
jno
loopne
rorl
scas
mov
cs
xchg
scas
pop
fsubrs
ja
lods
in
xor
inc
mov
inc
lock
pop
sub
dec
movsl
cmpsl
hlt
int
stc
into
jo
jp
add
pop
insb
popf
dec
push
mov
lret
fildll
sti
loope
mov
data16
rorl
mov
push
or
jl
fstl
psllw
sbb
inc
xchg
adcl
lods
cmp
leave
aaa
ret
dec
bound
adc
lods
mov
movsb
gs
dec
pop
loopne
outsb
adc
mov
mov
or
sub
lds
outsl
lds
and
lcall
out
xor
int3
data16
xlat
pop
arpl
mov
ret
lret
nop
mov
sub
repz
xchg
inc
mov
cmp
lods
add
pop
das
ja
fisttps
popa
aam
sbb
inc
jecxz
pop
mov
push
jb
stos
test
mov
lods
outsb
sbb
inc
btc
and
mov
pop
mov
pushf
inc
xchg
and
add
cld
mov
add
and
cli
mov
jnp
adc
or
jne
mov
push
fisubl
sub
ret
aam
mov
fcompl
iret
adc
sbb
jno
fdivrl
xor
aad
xlat
mov
xor
mov
dec
xlat
mov
mov
cmp
xchg
xor
xor
inc
mov
adc
add
jg
daa
jg
cmpsl
and
ret
add
mov
sahf
jl
xchg
add
sbb
aaa
int
mov
add
sub
mov
mov
jle
adc
lods
mov
jg
cld
jmp
jp
cld
fs
pop
cli
cmp
sub
loope
out
scas
hlt
int
pop
inc
add
xor
out
mov
jne
dec
sub
mov
adc
nop
ror
pop
jle
lret
pop
pop
scas
jecxz
add
dec
inc
mov
mov
xlat
insb
mov
sbb
shl
dec
inc
mov
icebp
push
mov
cli
out
sbb
popa
cmp
orl
mov
add
sub
out
ss
push
or
cwtl
sbb
mov
fsubs
aad
lock
movsb
inc
test
jmp
pop
jno
popa
adc
fldt
mov
imul
mov
stc
ljmp
cld
or
sahf
xor
dec
adc
cmp
jbe
aam
sbb
dec
inc
push
popa
outsb
mov
mov
arpl
jecxz
lea
adc
mov
cltd
data16
daa
aas
dec
add
push
fs
push
and
dec
jno
pop
dec
or
rolb
push
aaa
jb
adc
inc
mov
mov
mov
mov
xlat
aam
pop
clc
pop
adc
dec
aaa
mov
sbb
ss
mov
and
mov
xor
addr16
push
xchg
adcl
fimull
testb
mov
adc
enter
pop
adcl
cmp
lods
fs
or
repz
sbb
or
arpl
mov
or
scas
xchg
in
sbbl
dec
aas
addr16
int3
lret
aas
adc
xchg
mov
push
cwtl
cmpsl
xorl
push
iret
dec
or
jb
mov
lea
stos
mov
es
lock
jb
mov
xor
das
icebp
mov
movsb
popf
ficomps
call
popa
ss
mov
ljmp
test
lods
sbb
and
rorb
xor
sub
mov
testl
mov
adc
mov
fstps
mov
in
adc
ds
mov
mov
outsb
sar
out
pushf
cmp
cld
mov
mov
mov
adc
mov
jno
push
jp
add
dec
push
dec
ror
mov
ror
nop
arpl
fiadds
fsubrl
aam
out
bound
cmp
adc
jo
lock
cmpsl
and
loope
pop
sbb
dec
lods
aas
aam
mov
push
mov
fdivrs
fdivrl
test
add
shll
sahf
hlt
fsubs
add
fmull
movsb
mov
xchg
sahf
scas
mov
sub
xor
sub
xlat
leave
out
outsb
es
mov
fstl
fidivrl
xchg
daa
loopne
out
xlat
xchg
mov
mov
and
bound
jno
repz
insl
nop
dec
cmp
or
push
xor
out
frstor
pop
shr
decb
je
xchg
mov
mov
mov
call
mov
mov
push
mov
fldt
adc
scas
imul
scas
jle
sbb
jo
and
sub
ffreep
fwait
xchg
mov
scas
push
dec
and
out
in
adc
sub
xor
xor
in
sbb
pop
into
cmp
leave
pusha
jl
pop
push
enter
and
lock
in
in
aam
data16
mov
icebp
xchg
iret
inc
cwtl
adcl
loope
rcrl
int3
mov
stos
mov
jecxz
aad
popa
jge
xor
repz
lcall
sub
dec
das
inc
popf
loopne
das
ljmp
adc
repnz
adc
arpl
fadds
jecxz
mov
xchg
and
jo
dec
outsb
cltd
out
and
test
add
xchg
adc
push
mov
or
fwait
jo
mov
inc
test
int3
lret
push
add
mull
adc
xchg
push
xchg
mov
or
xor
test
pop
adc
mov
lcall
jne
ds
in
jge
xchg
push
jne,pt
push
inc
fwait
out
inc
fadds
xchg
sbb
pop
divl
mov
pmaxub
popf
mov
dec
std
dec
aaa
sub
push
jg
jae
out
scas
dec
or
mov
add
xor
mov
inc
cmp
adc
jge
pop
les
enter
add
push
mov
inc
int3
and
cmpsl
rcrl
adc
mov
and
fisubrl
pop
mov
pop
jae
pop
fldl
cmpl
mov
daa
cmp
adc
sahf
mov
std
les
pop
test
das
pop
lret
hlt
and
adc
jl
mov
mov
cmp
mov
cs
sti
lret
xchg
insb
hlt
fcmovnu
push
in
pop
hlt
aam
cli
sub
cmp
jmp
movsl
sub
stc
test
call
jecxz
push
xor
fwait
pop
dec
add
test
pop
imul
out
jge
insl
mov
push
leave
shrl
jns
sbb
or
lds
test
out
mov
and
fists
in
sarb
cmpsl
inc
add
rcll
stos
rcll
sbbb
jne
push
jecxz
out
nop
jb
loop
or
mov
js
add
mov
addb
push
lret
je
mov
adc
rolb
sbb
and
ret
sahf
fldt
lds
jmp
xlat
inc
inc
and
insb
lds
outsb
push
pop
pusha
imulb
push
lcall
lds
pop
sbb
add
cmpsb
in
or
rcrb
push
pusha
mov
lahf
sbb
mov
divb
sbb
mov
rcrl
xor
aaa
cli
leavew
jo
mov
or
mov
mov
and
shrl
repnz
and
shlb
out
push
imul
and
xchg
push
adc
ret
icebp
outsb
lcall
loope
jae
dec
cltd
sub
jne
leave
in
mov
push
add
lahf
xchg
imull
mov
test
test
out
mov
in
pop
cmc
mov
test
jne
sub
shll
aas
ja
notl
sub
rcr
push
pop
mov
test
mov
xlat
cs
cmp
cld
jmp
aam
add
xchg
mov
adc
jl
add
faddl
dec
mov
std
fists
imul
dec
and
adc
jecxz
jge
in
push
pop
jmp
xlat
jno
push
ds
into
push
adc
cwtl
mov
push
adc
test
inc
inc
enter
stos
inc
xor
scas
jle
stos
dec
mov
add
sub
into
in
loope
les
mov
or
jo
xchg
xchg
jp
movsb
sub
mov
iret
fs
std
push
repnz
sub
xor
pop
mov
jecxz
jnp
test
into
adc
popa
xchg
dec
mov
sbb
or
out
adc
inc
dec
aam
loope
dec
xchg
arpl
out
mulb
push
fmuls
mov
shll
xchg
push
aas
or
xor
sbb
mov
pop
jecxz
mov
dec
ljmp
rorl
imul
std
rcll
xor
icebp
and
cmp
mov
dec
mov
mov
mov
adc
dec
inc
aas
out
pop
repnz
pop
and
dec
leave
popa
mov
js
add
imul
dec
dec
out
fwait
dec
sti
lret
stc
cmpsb
js
or
fucomp
mov
jae
loope
jae
jmp
mul
sub
pmaxsw
xor
fistps
dec
or
sbb
incl
rorb
jbe
aas
call
outsl
ljmp
xlat
xchg
fs
xchg
inc
lcall
imul
lcall
sub
call
lret
test
test
push
gs
in
fsubs
mov
dec
push
push
push
add
fsubs
lcall
nop
cs
mov
in
mov
pop
in
push
sbb
out
jmp
loope
pushf
jns
jb
aaa
dec
aaa
shlb
pop
out
sbb
jnp
jg
pop
test
pusha
push
in
cmpsl
inc
cmp
lock
imull
inc
sahf
ficoms
xchg
imul
cmp
xchg
inc
sub
mov
imul
insb
dec
repnz
and
into
mov
or
add
fbstp
out
mov
jl
or
stos
aam
adc
popa
dec
mov
jge
fildll
repz
pop
fucomip
mov
scas
lahf
imul
movsl
shlb
pop
and
mov
enter
stos
xchg
cmp
in
hlt
je
iret
dec
clc
call
sti
push
sbb
fwait
add
in
shrb
pop
mov
fisubrl
or
sbb
cmpsb
pop
icebp
push
rcr
test
pop
scas
and
and
fimuls
pop
scas
je
call
mov
xor
sbbb
or
test
mov
and
sub
xor
icebp
cmp
xchg
ret
lea
out
lcall
jne
popw
jmp
sbbb
cmc
fsts
test
adc
xor
fucomi
push
pushf
jnp
dec
ss
insb
jmp
out
jb
scas
cmp
or
lret
pop
sub
push
gs
nop
test
or
inc
xor
pusha
inc
cld
mov
lahf
xchg
xor
add
xchg
push
frstor
pop
mov
popa
decb
fdivs
lods
mov
fnstcw
es
in
test
adc
pop
das
inc
mov
pop
cs
xor
cmp
repz
adc
daa
push
cltd
push
sbb
aam
and
inc
lods
fsubl
inc
pop
incl
inc
test
out
add
and
orb
sbb
or
add
test
nop
aad
adc
sbb
inc
and
ret
out
or
lcall
sub
aam
sub
cmpsl
cmp
rol
divl
jp
fwait
push
stos
dec
std
shll
mov
xor
lds
out
cmc
dec
sbb
mov
and
movsb
push
and
push
ja
mov
mov
mov
outsl
xlat
and
adc
cmpsl
sti
jmp
bound
sbb
mov
popf
push
sbb
repnz
mov
loop
mov
mov
dec
push
inc
adcb
jp
ja
aam
push
loop
aam
sub
adc
int3
and
dec
push
jge
notb
mov
push
xchg
scas
insl
xor
cmc
insl
xchg
inc
xchg
adc
iret
ret
outsb
adc
dec
jl
mov
dec
jbe
push
repz
push
inc
push
mov
scas
test
stos
xchg
mov
push
faddl
mov
movsb
repz
mov
jo
cmp
cmc
sbb
jnp
lret
inc
or
pop
in
adc
xchg
cld
mov
sbb
and
sbb
adc
rolb
xchg
fisttpl
insl
pop
mov
jg
mov
cmp
mov
daa
mov
jb
insb
divl
lods
jg
jnp
js
jge
adc
stos
aam
adc
sbb
sub
negb
xchg
mov
clc
mov
or
repz
fs
scas
jno
jnp
inc
sub
fsubs
sahf
and
inc
push
daa
dec
rorb
popa
and
sbb
ret
jmp
xchg
jae
std
add
sbb
mov
aad
push
daa
fs
out
movsl
mov
aaa
aad
lea
pusha
mov
mov
aas
sbb
out
pushf
clc
sbb
pop
sbb
mov
fst
loop
xchg
pop
cmp
mov
movsb
mov
xor
in
je
xchg
or
repnz
mov
add
cs
jae
imul
cmc
dec
mov
xchg
into
scas
and
mov
pop
push
cld
add
xorl
sbb
daa
sti
addr16
mov
fs
or
scas
andl
pushf
xor
out
cmp
jg
sub
xchg
cltd
into
mov
dec
test
pop
mov
subb
mov
aad
push
sarb
add
push
push
or
mov
push
loop
push
testl
cltd
mov
xor
lcall
push
dec
pop
push
ss
aaa
pushf
loop
add
stc
cli
in
dec
insb
sbb
fistpll
xor
popl
mov
mov
xor
inc
jnp
sub
cwtl
xchg
adc
and
jo
add
dec
pop
xchg
mov
xor
rcrl
aad
sub
daa
mov
insl
cs
adc
fldl
pop
adcl
fsubr
addr16
jnp
jmp
xchg
push
push
push
push
xlat
das
inc
test
pop
mov
jl
fldt
pop
push
cwtl
jmp
mov
jns
fidivs
dec
mov
add
pop
out
in
cmp
push
and
mov
loopne
int
push
cmp
mov
jne
or
sub
inc
cmpsb
mov
xchg
push
push
ja
xchg
add
inc
in
xchg
cmp
jl
mov
mov
or
xchg
push
mov
and
or
xchg
int3
in
nop
in
test
lds
inc
inc
ret
push
dec
pushf
mov
cwtl
outsl
outsl
leave
push
out
pushf
cmp
or
jbe
es
mov
cli
cli
mov
adc
xchg
mov
sarb
cmp
jnp
add
dec
mov
loopne
or
mov
dec
aad
lods
in
mov
bsr
mov
fcoms
jmp
popa
fistpll
divl
lret
repnz
mov
adc
loop,pn
aas
insb
cld
rorb
pop
fs
lods
insl
sbb
hlt
int
pop
inc
mov
or
test
jg
mov
rcrl
and
push
mov
mov
std
or
scas
or
dec
cld
lock
adc
jge
shll
inc
jo,pt
or
insl
or
cmp
and
int
sub
push
addr16
pusha
aad
fdivs
push
mov
xchg
pmulhuw
lea
loope
push
push
fistpl
jp
out
mov
stos
ds
adc
and
xchg
out
jb
ss
aad
into
test
push
sub
daa
mov
dec
mov
jmp
xchg
mov
je
iret
addr16
adc
or
adc
mov
jp
cmp
ret
inc
dec
or
xchg
dec
test
or
mov
mov
andb
jg
fucomi
xchg
hlt
enter
xchg
negb
lcall
lahf
inc
sbb
dec
inc
push
pop
jb
push
sbb
push
in
outsb
fdivl
and
ret
clc
mov
add
shlb
jae
push
fiadds
inc
sbb
push
adcl
imul
sbbl
pop
jmp
fidivl
fsubs
pop
sub
adc
cltd
mov
in
lea
test
mov
xchg
pop
lds
dec
xor
inc
adc
adc
push
sbb
sub
icebp
push
mov
add
xchg
inc
aad
dec
std
jecxz
sub
in
dec
xor
sub
mov
xor
mov
jg
xchg
in
mov
inc
fldl
or
mov
pop
add
jmp
jg
push
mov
aam
inc
outsl
sub
andb
fistpl
int3
mov
inc
es
imul
mov
jecxz
push
sub
jne
jl
aas
inc
push
ss
sub
in
jbe
xchg
push
jecxz
test
mov
stos
jmp
pop
call
cld
lock
or
pop
inc
int3
pusha
popf
movsl
sbb
repz
and
mov
int
into
bnd
int
push
fisubs
lcall
jp
rclb
in
jb
aad
jae
push
mov
sub
cmp
cltd
incb
sub
stos
sub
sbb
mov
adc
pop
lea
or
pop
add
sub
and
sarb
cld
dec
popf
sub
push
and
cmp
cwtl
xor
pop
pop
aad
push
mov
lahf
ss
aad
adc
mov
dec
ds
adc
imul
std
fsubs
gs
add
mov
rdmsr
addr16
pop
scas
in
dec
sub
call
shll
enter
xchg
sbb
cmp
pushaw
sarb
dec
push
push
cs
int3
jne
dec
adc
out
inc
cmp
sbb
adc
lahf
aas
pop
inc
jle
ret
mov
ret
lods
xchg
mov
ficoms
iret
mov
xor
jno
cmp
mov
pop
dec
mov
mov
dec
or
andb
daa
out
jg
rcrb
sbb
lock
lahf
jno
jmp
ss
adc
lret
push
out
jne
shl
mov
mov
or
out
lret
mov
out
mov
cmpsb
insl
mov
shrb
sub
sar
clc
mov
mov
ret
arpl
push
out
add
pop
psllw
or
cld
in
les
dec
add
test
push
mov
and
dec
lcall
pushf
jne
mov
imul
lock
cmp
ret
add
mov
mov
inc
cltd
xchg
inc
rcrl
pop
lahf
lods
lods
jp
push
out
sti
rcrl
push
push
pop
lods
dec
dec
les
mov
sar
add
clc
cmpl
mov
scas
inc
and
push
mov
stc
stos
movntps
mov
dec
add
push
pop
imul
mov
sti
push
push
jb
mov
sub
stos
dec
or
scas
cltd
test
movb
rclb
cwtl
aas
movsw
mov
xchg
xchg
push
idivb
push
outsb
test
adc
movl
mov
jns
jl
std
aas
testl
mov
int
shll
jne
xchg
pop
test
xor
adc
pop
push
fwait
data16
xchg
fbld
fwait
pop
cmp
xor
cmp
adc
rorb
push
sbb
push
sbb
std
js
cmp
fdivl
adc
into
mov
adc
mov
sarl
pop
out
jbe
xchg
ljmp
lcall
sub
add
jl
in
and
push
and
xchg
je
idivb
xor
jbe
insl
mov
mov
cmp
mov
and
leave
loope
aad
push
shrb
addr16
adc
mov
addr16
jnp
fistps
into
mov
fdivs
scas
xchg
xchg
push
mov
repnz
mov
adc
dec
std
jns
or
cltd
imul
cmp
sbb
or
lcall
fucomi
jnp
fisttpll
ja
pop
mov
pop
movsb
inc
mov
test
push
jnp
jle
cmpsb
pop
cmp
jmp
rorb
mov
or
xor
mov
mov
pop
cmp
sahf
add
add
es
add
jmp
push
out
lahf
pusha
cmp
or
stos
dec
sub
clc
pusha
sub
inc
fs
mov
ret
mov
mov
call
mov
cmp
xchg
out
lods
ja
fnstenv
cltd
lcall
pop
arpl
xlat
dec
aad
leave
push
and
test
pop
ds
imul
lret
sbb
ja
ljmp
cs
ret
in
sbb
jnp
das
mov
xchg
xchg
iretw
js
cwtl
add
sahf
mov
mov
mov
loope
std
xchg
call
ds
sbb
les
into
pop
ret
pop
add
or
repz
mov
hlt
lds
hlt
rcrb
stc
arpl
adc
inc
dec
or
mov
mov
outsl
scas
cmp
pusha
icebp
test
fisubs
sahf
stc
sbb
xchg
shl
inc
xchg
xor
add
sub
or
pop
les
rorb
enter
lcall
xor
imul
push
out
mov
xor
subl
mov
fsubrs
cmpsl
lahf
sub
int3
dec
pop
mov
daa
jnp
mov
sbbl
push
jl,pt
aam
test
inc
cmpsl
mov
jo
sub
js
aas
popl
lcall
bound
out
mov
sub
mov
fucom
sbb
stos
fisubs
mov
lods
inc
dec
cmp
aaa
inc
aad
sbb
sbb
cmp
cmp
test
repnz
mov
jne
add
pop
push
in
lret
cld
push
mov
sbbb
sub
in
push
insb
cwtl
add
sbb
call
pop
jg
fmuls
aaa
mov
jg
fadds
pop
mov
jmp
xchg
jns
or
xchg
xorps
cwtl
cmpsb
mov
arpl
lods
out
data16
addr16
call
data16
push
cmp
xchg
mov
pop
imul
adc
and
xor
aas
cmp
cmp
repz
cmpsl
sub
scas
push
inc
jb
into
in
push
aam
sub
dec
out
repz
orb
iret
test
mov
push
xchg
cmp
push
popf
or
dec
das
in
cmp
dec
imul
cs
mov
fcomps
mov
icebp
fmuls
mov
mov
int3
or
sub
mov
jp
sti
cmp
pop
push
loopne
push
shufps
jbe
loope
cmc
mov
lcall
and
cmp
out
mov
insl
bnd
testl
rcll
or
cmp
sbb
mov
arpl
sbb
push
jns
push
dec
sub
cmpsl
sub
or
gs
lods
pop
call
jge
pop
sbb
cwtl
bound
je
sub
push
mov
cs
inc
std
mov
mov
scas
in
push
adc
adc
push
js
mov
or
imul
ds
adc
push
sub
clc
cld
lahf
jnp
mov
push
loopne
in
jbe
sarl
jl
lods
jle
ds
pop
leave
ss
pop
mov
loopne
or
outsb
sub
cli
and
adc
push
add
leave
push
mov
icebp
rolb
push
arpl
orb
dec
push
sub
and
lock
das
mov
bnd
jae
data16
mov
scas
or
iret
mov
movsb
inc
add
sbbb
dec
add
pop
jmp
test
and
mov
and
std
cmc
pop
loopne
in
dec
push
scas
push
jb
mov
imul
add
test
inc
packssdw
jmp
cltd
mov
pop
and
push
xor
dec
fistl
ret
in
and
out
adc
dec
mov
sub
ja
cmc
push
mov
sub
sub
sbb
push
mov
or
scas
dec
pop
mov
xchg
rol
fildl
mov
stos
and
xchg
cli
movsl
cmpsl
das
xlat
lock
inc
aam
clc
xchg
mov
sar
mov
lahf
and
dec
jnp
jge
divl
mov
mov
sub
pushf
pop
subl
pop
mov
mov
sub
inc
js
jg
subb
andb
notb
mov
inc
mov
mov
jb
push
test
out
sub
dec
add
rcrl
aaa
lret
lock
pop
stc
mov
xchg
mov
loope
dec
mov
inc
or
push
xchg
movsb
popa
xor
les
mov
and
sub
push
xor
cmpsb
mov
or
add
inc
cmpsl
jl
fildl
cwtl
adc
jo
cmp
das
jg
jg
xchg
jno
ds
mov
dec
dec
lcall
loopne
sbb
cmp
lret
pop
lods
mov
shlb
orl
push
mov
les
dec
jae
xor
rcr
out
jo
pop
out
push
fwait
inc
imul
and
testb
lock
push
lods
pusha
in
std
cmp
lret
mov
test
lods
hlt
jns
in
adc
div
sub
cmc
push
xor
test
cwtl
push
and
ds
sti
nop
jl
repnz
cmc
xchg
inc
mov
pop
mov
cltd
or
ja
stos
adc
in
add
pop
jp
fiadds
adcb
push
adc
xchg
pushf
imul
sub
cltd
lods
dec
icebp
and
fsubr
or
jo
mov
sbb
test
mov
pop
xchg
jne
push
icebp
dec
mov
subl
inc
add
cltd
mov
adc
cmovs
jb
xchg
adc
imul
inc
imul
je
leavew
and
test
std
mov
xlat
cmpsb
and
push
pop
stos
xorl
aad
mov
mov
dec
arpl
or
sub
sarb
jg
or
push
mov
insl
mov
xchg
pop
fs
test
jmp
lock
cs
fwait
orb
jmp
scas
push
insb
mov
fwait
cld
and
lahf
dec
add
clc
pop
ss
in
adc
add
mov
xchg
mov
test
xor
or
fldenv
jo
sub
xor
mov
scas
repnz
sti
rorl
add
inc
sahf
aas
out
icebp
enter
xor
dec
sub
sub
and
std
inc
xchg
sbb
hlt
lret
scas
loop
testl
enter
outsl
mov
add
fidivs
pushf
xlat
std
dec
pop
cli
mov
xor
xor
mov
cwtl
sahf
xlat
pusha
rep
add
push
stos
js
and
frstor
in
stos
mov
push
mov
je
out
mov
cmpsb
nop
movsl
sti
xor
loope
movsl
xchg
add
loopne
cmp
cmp
mov
in
adc
lds
or
push
loop
scas
mov
xchg
fnsave
inc
ret
mov
ret
jle
push
fabs
ret
mov
xor
push
stos
sbb
cld
lods
icebp
leave
addb
jnp
inc
subl
imul
dec
mov
out
lret
scas
movsb
mov
jne
sub
sub
fs
mov
sbb
subb
mov
inc
push
xchg
dec
inc
mov
mov
or
es
aam
int3
fwait
lahf
pushf
stos
jmp
dec
mov
inc
rcrb
fld
faddl
mov
rolb
and
imul
dec
pusha
pop
mov
insl
dec
xchg
push
and
pop
mov
and
cltd
enter
jnp
or
mov
sti
sbb
imul
cmc
dec
pusha
das
fidivrs
push
fyl2xp1
ja
sub
lcall
sbb
clc
mov
mov
dec
out
sbb
jmp
movaps
add
xchg
loopne
or
pop
jae
out
or
imul
ret
in
subl
cltd
je
dec
jne
dec
mov
loope
dec
cmp
inc
outsl
inc
push
out
jl
jbe
and
lock
ret
mov
dec
inc
add
sbb
xor
sti
and
leave
js
loopne
adc
xlat
jno
cmc
push
xor
mov
ja
cvtdq2ps
sub
aaa
dec
fstps
mov
ljmp
inc
lret
sarb
movsb
add
mov
fcomps
adc
addr16
push
xor
pop
cwtl
daa
hlt
dec
mov
mov
cltd
or
test
jns
inc
and
push
adc
mov
inc
xchg
iret
and
aad
repz
mov
inc
leave
mov
enter
leave
testb
in
mov
jmp
push
vpcomd
mov
push
cmpsb
jo
movsl
clc
mov
dec
cmp
xchg
jo
movsl
out
cli
in
aas
mov
dec
xlat
ljmp
fmuls
lods
sub
loop
dec
adc
pop
jmp
push
sub
cltd
jmp
out
les
popa
inc
sbb
mov
dec
in
lret
jmp
push
jg
aaa
or
jae
and
movsb
pop
lods
adcb
mov
jp
mov
aam
les
pop
loopne
jecxz
xchg
sub
adc
push
mov
inc
imul
mov
cltd
push
mov
stc
jne
sbb
sbb
xchg
daa
add
shlb
or
or
cmp
push
sub
add
jmp
inc
fwait
and
or
mov
pop
add
jo
cmp
xlat
movl
rcl
cmp
mov
jp
and
hlt
mov
stos
inc
in
jge
lds
sahf
shll
xor
cmp
negb
pop
pop
pop
sub
add
inc
call
int
or
cmp
and
and
mov
or
jge
pushf
pop
xor
scas
rcl
in
add
test
insl
daa
xchg
jb
aad
xor
adc
test
add
jg
adc
inc
lock
loop
fsubrs
cmp
pop
jge
fwait
pushf
clc
popf
rol
cmc
inc
lcall
in
cmpsb
xor
xchg
xchg
lret
sbb
add
adc
dec
pinsrw
or
mov
push
add
out
repnz
push
int
shrb
insb
aam
mov
mov
fildl
and
leave
sahf
adc
fldenv
or
adc
mov
mov
cmpsb
push
nop
scas
dec
pop
add
mov
sbb
or
out
mov
aad
xchg
sub
jp
mov
mov
icebp
subb
in
es
lds
or
mov
push
int3
dec
mov
mov
xchg
cld
xchg
jmp
mov
ljmp
bound
jg
js
push
scas
mov
xchg
shrb
sti
stos
and
pushf
cld
subb
sbbl
mov
sub
stos
and
mov
in
jb
xlat
or
mov
pop
fcmove
loopne
push
sub
int
cli
bound
xchg
cmp
cmpsb
dec
pop
push
push
in
pop
sahf
loope
pop
out
adc
cwtl
jb
jg
bound
out
js
sbbl
iret
scas
push
aam
pop
sbb
jmp
pop
arpl
shl
dec
sub
repz
cmp
mov
and
xchg
sbb
nop
mov
push
cmp
adc
push
jae
mov
pop
dec
mov
cmc
xchg
push
rclb
dec
pop
add
sub
pop
aam
push
dec
sahf
xchg
cwtl
pop
mov
lods
dec
or
add
clc
mov
adc
mov
mov
pop
dec
aas
imulb
xchg
push
jnp
sub
sahf
pop
outsb
loop
imul
in
rorb
cs
pusha
pop
adc
into
sub
push
cli
lods
inc
lock
mov
sbb
bndstx
fldenv
mov
inc
fiadds
inc
les
insl
pop
xor
jp
ficoml
jle
mov
movsb
add
pushf
mov
xorb
dec
mov
jp
dec
popf
mov
cmpsl
test
jne
or
sbb
mov
push
mov
lods
mov
push
fsubrl
sbb
xchg
inc
sub
mov
pop
fisubrl
fcoml
ljmp
test
adc
scas
into
dec
inc
adc
add
xor
js
mov
pop
jnp
aam
mov
bound
fdivrl
mov
jp
aad
fcoms
cwtl
and
and
lods
outsb
add
adc
mov
lcall
mov
imul
enter
orb
in
mov
repz
fcoml
lea
adc
stc
jle
ljmp
ja
mov
lcall
dec
es
jecxz
imul
inc
push
xchg
in
cmp
add
inc
add
jmp
adc
dec
imul
push
negb
repnz
jb
mov
push
imul
push
je
into
stos
subl
in
xor
add
jns
mov
test
inc
inc
fdiv
out
jge
test
inc
xor
daa
fisttpll
js
in
inc
pcmpeqb
sub
inc
push
pop
insl
mov
vcvtps2pd
stos
dec
mov
pop
and
sbb
iret
push
jae
fs
or
in
fldl
ja
sbb
mov
cwtl
jnp
dec
add
test
mov
jbe
stos
jecxz
fnstsw
and
cmp
mov
in
mov
icebp
popa
outsb
pop
mov
shl
mov
das
in
fisubrs
into
push
cmpb
xchg
sbb
xchg
cmpsl
test
pop
push
mov
pop
rcrb
lahf
jl
jns
mov
aas
loopne
lret
pushf
sti
pop
or
nop
inc
jbe
xor
sub
jle
test
roll
notl
fsubrs
pop
adc
xor
out
movsl
push
movq
mov
mov
or
ljmp
ss
cmc
jae
or
mov
stos
imul
xchg
adc
dec
cmpsl
je
cs
test
dec
imul
mov
push
pop
insl
jg
icebp
movsl
scas
das
pop
push
hlt
add
mov
dec
jmp
inc
mov
test
pusha
sti
add
popa
push
bound
arpl
mov
cmp
fnstenv
shll
sahf
pop
adc
fnstenv
fwait
inc
sbb
pop
clc
loopne
test
hlt
sbb
xor
xchg
scas
sti
int
or
lods
out
loop
repnz
pushf
xchg
mov
push
in
mov
xchg
into
pop
ret
jp
lds
js
icebp
pushf
cmp
loop
jg
daa
push
lock
test
adc
jmp
into
push
das
or
jmp
gs
pop
fnsave
push
lods
mov
add
cltd
fildll
or
jne
nop
jo
pop
push
fwait
cmp
sbb
adc
inc
shlb
dec
prefetch
or
mov
stos
sahf
push
test
jne
xor
out
mov
fisttps
int
adc
add
lods
xchg
call
fisttps
into
jle
cmp
xchg
mov
inc
mov
push
xchg
mov
les
mov
cmp
cmp
push
out
mov
adc
ret
push
repz
mov
ret
insl
push
call
sub
mov
xchg
xchg
dec
and
adc
sbb
enter
xchg
cmpsb
leave
ficoms
sub
add
jl
fidivrs
mov
ffreep
inc
inc
int
test
pop
gs
out
dec
mov
ja
sub
andb
push
jb
jmp
xchg
stos
and
dec
addl
sbb
cmp
out
sbb
test
jo
movsl
mov
popf
xor
xor
int3
call
mov
pop
jmp
pop
scas
mov
mov
xor
mov
mov
jmp
pop
pop
int3
push
xor
jge
outsb
mov
xor
dec
cmp
in
and
push
stos
jp
mov
dec
sar
incb
jne
mov
out
out
dec
mov
dec
xor
xchg
or
aam
ss
das
adc
pushf
out
jg
je
icebp
das
mov
rclb
dec
in
jnp
add
cld
push
push
cmp
xchg
cmp
jnp
lret
xchg
jbe
push
leave
fists
adc
jbe
out
xor
push
or
jno
mov
mov
aas
mov
sbb
in
ds
lcall
mov
mov
push
xchg
dec
add
mov
cmpsl
arpl
pop
lods
pop
jmp
scas
loope
push
fists
add
adc
mov
add
cmpsb
pop
and
xor
je
push
inc
test
push
hlt
cli
mov
lods
lds
lock
cmc
or
push
mov
xchg
lea
push
cli
dec
sub
mov
imul
out
insb
xorb
inc
xchg
andl
ficomps
cli
gs
xor
ret
inc
mov
call
stc
sub
pop
cmpsb
ret
inc
movsl
test
das
adc
adc
xchg
jns
sub
xor
jecxz
andb
ficoml
mov
imul
or
and
mov
inc
jnp
and
cmc
insl
lret
xchg
jge
lcall
xchg
mov
or
inc
pop
xchg
popa
leave
xchg
add
sub
push
dec
fsubs
xchg
mov
insl
pushf
jmp
mov
adc
imul
mov
pop
cmp
sar
xchg
xchg
sbb
enter
out
push
loop
xor
inc
dec
mov
sub
adc
dec
iret
push
ja
mov
loop
ret
mov
in
subl
dec
ficoml
enter
push
jne
loopne
arpl
mov
xchg
add
adc
push
jecxz
stos
or
push
rclb
popa
icebp
pop
pop
jge
mov
push
mov
ret
jmp
xchg
and
mov
out
xchg
es
mov
push
xchg
adcl
stos
mov
fdiv
test
in
dec
xor
fsub
js
xorb
outsb
sbb
adc
adc
imul
dec
lods
push
jmp
mov
adc
cmp
jne
xchg
sub
aad
jp
cmpsb
repz
scas
xchg
inc
mov
and
data16
cmp
or
sub
mov
decb
fldcw
jae
sti
aam
jle
stos
out
iret
dec
sbbl
cli
aam
pop
int3
sub
pop
dec
pop
addb
ss
outsb
mov
jge
das
orl
mov
inc
sbb
mov
mov
xchg
lds
out
cld
mov
gs
or
mov
aas
movb
ficoml
aaa
or
arpl
push
and
call
sbbl
stos
sbb
inc
lds
out
and
out
dec
pop
and
and
imul
jmp
clc
jl
lcall
push
or
push
pop
dec
jnp
fimull
ret
push
es
pusha
mov
sub
add
fs
insl
fisttps
pop
mov
cs
jle
dec
jb
fucomi
rcll
lret
and
adc
jecxz
push
push
push
xchg
sbb
or
add
and
mov
cs
mulb
add
and
or
adc
inc
pop
les
ljmp
cmp
stos
mov
jb
push
jp
mov
adc
iret
cmp
adc
inc
mov
in
xor
cltd
mov
xchg
test
cmp
jmp
fs
mov
mov
sub
aas
mov
icebp
js
clc
xchg
push
stos
shrb
ds
cmpsl
xorl
mov
in
enter
int
push
fs
mov
notl
push
push
fstps
std
sub
addr16
bound
call
push
sub
dec
jecxz
out
nop
mov
shlb
dec
push
fidivl
sub
rcr
cmpsl
loop
sub
dec
ja
mov
es
insb
stc
pop
sti
adc
outsb
adc
popa
ss
or
xor
push
and
mov
mov
push
mov
cmp
in
dec
mov
rcrl
and
pop
gs
xchg
movsb
js
orb
lcall
push
and
mov
shlb
test
lods
cmp
xor
pop
testb
stc
movsb
fsts
inc
adc
cwtl
push
ja
xchg
rolb
jb
js
xor
jmp
data16
sub
cmp
lahf
testl
ja
dec
sbb
and
push
imul
xor
movsl
xchg
pop
and
jb
inc
mov
push
nop
mov
push
scas
xor
sub
test
outsl
outsb
cltd
jns
xchg
sbb
iret
mov
or
stc
mov
loope
ret
push
popf
pop
leave
insb
ret
shrl
adc
or
inc
fcoms
or
pop
xchg
push
jl
ficoms
jae
sbb
imul
sbb
movsl
stos
jmp
sub
inc
and
jne
movsb
out
add
mov
sub
popf
lcall
mov
sub
dec
adc
and
inc
dec
pusha
testl
mov
xchg
xchg
jbe
outsl
imul
lea
pusha
jp
mov
clc
and
test
ret
sub
data16
cli
inc
mov
lret
jl
mov
movsb
insb
out
lea
rep
into
pushf
test
aas
jmp
stos
mov
sbb
inc
dec
xchg
cli
adc
scas
mov
xchg
jo
mov
jbe
mov
test
js
aas
pushf
mov
push
mov
mov
dec
test
stc
cltd
mov
js
push
lock
pop
dec
lret
sti
add
mov
aas
pushl
xchg
js
jae
enter
pop
test
sub
xchg
jmp
jns
cltd
xchg
sbb
lahf
loope
test
xchg
cmpsb
dec
sbb
or
stos
ficompl
jb
jne
add
mov
popa
or
cli
mov
and
xchg
rol
enter
adcl
lret
mov
sub
lcall
xor
jge
call
jle
push
jmp
mov
neg
inc
inc
xchg
sub
adc
mov
jb
cltd
fcompl
and
mov
adc
push
out
sbbl
mov
xor
aaa
mov
mov
push
and
push
imul
test
mov
sahf
cmp
loop
adc
testb
mov
mov
jmp
xchg
push
sub
stos
xlat
push
xor
dec
mov
dec
call
dec
jp
jge
jno
ss
sbb
or
mov
dec
lock
lds
test
pop
popf
mov
pushf
mov
movlhps
out
loopne
sbb
out
dec
lods
pop
std
xor
sub
into
jo
xor
or
cltd
stos
icebp
xchg
outsb
lcall
scas
mov
xlat
cmp
imul
push
movsl
sub
bound
data16
push
js
sbb
sbbl
int
mov
fptan
mov
insl
adc
int
mov
sbb
adc
jp
aad
inc
imul
and
jge
test
add
mov
add
dec
sbb
in
orb
mov
lahf
xchg
iret
pop
jbe
xor
fcoms
movsl
sbb
jp
ret
mov
jmp
cmp
je
shr
xlat
or
scas
shlb
cmp
mov
lahf
jnp
out
dec
adc
pusha
push
or
pop
and
jns
adc
repnz
shrb
arpl
test
dec
pop
pop
arpl
lods
push
leave
imul
mov
and
inc
test
pop
addr16
adc
add
test
mov
sbb
bound
add
repnz
add
jmp
pop
pop
ret
rorl
mov
aam
mov
imul
jg
je
das
idivb
add
jae
aam
mov
fsub
loope
push
adc
pop
out
jns
mov
scas
leave
dec
sub
negb
jae
test
push
ljmp
mov
pop
leave
push
jb
xlat
arpl
icebp
pop
xorb
and
rorb
cld
jb
cmpsl
and
lret
je
inc
loop
mov
inc
sub
ljmp
cmp
lock
insl
cmp
test
dec
add
jl
or
xchg
and
adc
dec
xchg
mov
xchg
pop
dec
adc
or
or
xchg
xchg
dec
push
sbb
cmc
push
xor
mov
ja
cwtl
mov
loop
jnp
jno
imul
ret
pop
inc
scas
daa
sbb
add
jg
lods
cld
or
rcll
movl
xor
and
mov
sbb
mov
push
pop
xor
and
or
push
mov
dec
push
mov
mov
jnp
pop
sub
ljmp
inc
inc
mov
add
rorl
aam
fildll
inc
mov
ljmp
ljmp
mov
out
filds
push
dec
enter
out
in
inc
mov
js
stos
cld
xchg
testl
mov
fldcw
js
js
xchg
fwait
aad
and
arpl
iret
seta
insl
call
loop
pop
adc
leave
sub
sbb
iret
push
mov
push
lcall
push
pop
push
fdivrl
xchg
aaa
inc
fcomi
sbb
jmp
sbb
push
ffree
xchg
mov
or
add
xchg
sti
push
mov
rorb
jmp
stc
imull
cmp
jne
mov
arpl
push
or
in
dec
ds
mov
ret
scas
mov
mov
or
jle
xor
cmp
xchg
sub
aad
stos
mov
test
std
ror
es
aaa
cs
into
jmp
cmpsb
cmp
into
inc
test
pushf
push
fbstp
pop
mov
or
mov
xchg
pop
rolb
cmp
imul
repz
test
inc
lret
imul
xor
xor
xor
fwait
dec
xor
jae
aaa
mov
lds
or
and
xor
push
daa
fdivl
movsb
adcb
pop
fistl
pop
movsb
call
inc
roll
xchg
popf
repz
loope
pop
in
adc
sbb
mov
cmp
orl
push
daa
shll
fldenv
mov
mov
popa
inc
mov
push
sbb
sub
mov
in
push
scas
cltd
setge
jbe
jecxz
mov
loope
lods
cmc
sub
mov
mov
sti
xchg
xor
push
adc
mov
mov
jl
mov
xor
mov
dec
sub
jmp
jno
js
jns
mov
mov
cmp
in
push
and
shlb
push
cmp
ret
or
jmp
jmp
add
cmpsb
mov
jmp
mov
jle
fimull
es
mov
lods
test
in
mov
aam
jg
addr16
fldt
mov
in
adc
adc
or
lock
push
jge
mov
pop
scas
jno
xor
popf
sbb
jns
mov
mov
jno
jl
dec
das
push
call
stc
adc
iret
inc
subb
testb
add
sub
loopne
jmp
push
mov
es
jo
cmp
add
insb
hlt
push
sbbl
mov
jp
les
aam
into
cltd
push
fidivl
push
jb
mov
xlat
push
push
mov
testl
repz
xchg
mov
out
fsts
push
test
dec
fidivrl
sbb
fisttpl
pop
and
ficomps
jl
inc
inc
pop
dec
inc
shrb
cli
cmpl
das
sub
pop
orl
cmp
iret
adc
adc
fcmove
cmp
pusha
pop
cmpsl
sub
push
les
lcall
and
and
xor
mov
push
stc
sbb
cmp
dec
js
cltd
in
popf
mov
outsl
or
mov
push
daa
icebp
cmpsb
or
popa
cwtl
inc
rcl
sarl
add
jno
cwtl
sahf
call
push
sub
mov
cltd
daa
pop
iret
push
das
addr16
inc
cmp
in
fwait
mov
push
fs
cmp
mov
xchg
mov
inc
dec
xor
jecxz
jge
scas
mov
movsb
jo
or
insl
fbstp
pop
xchg
xchg
bound
out
mov
data16
scas
mov
lods
fbstp
sti
out
aam
lds
loop
inc
sbb
loopne
mov
jb
xchg
dec
repnz
dec
popf
mov
gs
loope
sar
nop
push
subb
pop
xchg
or
push
and
mov
xchg
mov
mov
imul
scas
das
imul
movsb
mov
or
pushf
or
rcrb
lret
adc
xor
inc
xchg
fcos
lret
movsl
mov
repz
repnz
ss
repnz
jbe
shll
ret
pop
lret
jns
loope
adc
ja
xor
pop
mov
insl
lods
fistpll
sbb
es
mov
mov
ja
scas
pop
pop
imul
lods
sub
imul
dec
addr16
jno
push
mov
ds
ds
push
inc
mov
push
and
cld
adc
das
mov
rcll
mov
outsl
dec
pop
sbb
daa
sub
xor
jecxz
add
dec
lock
mov
lahf
ret
adc
loop
adc
xchg
mov
or
cmp
fidivrs
push
rep
shl
xchg
add
or
mov
inc
push
mov
jmp
pop
inc
dec
push
xchg
jae
cmpsl
lahf
jmp
in
add
jns
iret
std
jecxz
cmp
cltd
mov
sbb
pop
bound
addr16
mov
inc
test
cli
xor
sbb
mov
dec
xor
jnp
dec
dec
xchg
mov
xchg
xor
sub
pop
xor
std
dec
add
ret
adc
inc
add
dec
push
lds
cld
push
lods
sbb
pop
js
imul
adc
jnp
lods
mulb
add
sarl
ret
xlat
jns
push
js
test
das
or
movsb
jle
xor
xchg
mov
sub
cmpsl
ja
mov
jne
dec
sub
or
lea
ss
mov
pop
mov
adc
mov
xor
loope
cmp
xor
xor
mov
xor
ljmp
ja
aad
fistpl
push
sbb
and
and
and
sub
pop
mov
dec
cmp
dec
test
pop
mov
enter
mov
loope
iret
inc
push
stos
adc
cmp
jo
bound
pop
movsl
pop
jmp
xor
xchg
push
jle
pushf
lahf
out
dec
pusha
cmpl
dec
cmpsb
enter
add
jmp
push
push
xchg
push
das
cmp
mov
add
mov
lret
stc
and
setbe
mov
insb
shlb
or
cmpsb
jle
push
xchg
dec
fmulp
xor
cld
das
mov
sub
jnp
das
cmp
test
insl
sahf
dec
cld
dec
pop
popa
xor
data16
xor
loopne
pop
add
leave
ss
dec
fstpt
sub
clc
iret
fisubs
loopne
jg
sti
pop
mov
push
ja
sbb
es
rolb
inc
std
test
mov
pop
test
inc
popf
sub
adc
cmp
cmp
sbb
mov
xor
adc
mov
and
rcrl
mov
inc
sarl
andl
loope
mov
loopne
jl
pop
mov
xchg
jg
incb
xor
repz
cwtl
ficoms
pop
mov
int
and
jle
jns
xchg
cmp
pop
shr
test
outsl
xchg
test
and
sub
mov
test
pop
xchg
shll
xchg
fadd
test
shlb
test
fs
stos
lret
fiaddl
add
cmpsl
dec
pop
cs
mov
leave
negl
sub
and
data16
jno
in
outsb
pop
jmp
xchg
lahf
mov
push
pushf
cmpsb
and
jne
sub
inc
test
insb
cmp
xchg
in
and
test
jecxz
shrl
inc
pop
pusha
push
add
inc
mov
out
dec
push
sub
aas
lock
sahf
sub
xchg
pop
mov
pop
cmc
lcall
xchg
pop
jbe
fimuls
xchg
jo
sbb
cmc
push
push
push
divb
push
sbb
lahf
test
inc
inc
jb
push
fiaddl
out
jne
cmpsb
jecxz
movsl
lcall
call
jecxz
testl
lret
sbb
cmp
add
in
pop
shr
or
mov
xchg
enter
imul
out
cmp
arpl
insl
push
mov
movsl
xchg
mul
add
adc
dec
inc
stc
psubusw
lods
cmc
pop
and
jg
andl
shl
xchg
pop
push
dec
js
repz
inc
iret
jnp,pn
jle
rcrl
ret
fwait
adc
mov
mov
scas
xor
clc
mov
lahf
cmpsb
js
push
push
pusha
fcompl
imul
popf
lret
adc
mov
cltd
insl
or
loop
bound
push
clc
xchg
add
push
sbb
pusha
sbb
mov
into
ss
dec
inc
data16
adc
xor
aas
ror
popa
or
add
jnp
mov
popa
insl
test
jg
repnz
pushf
pop
xchg
lret
faddl
inc
sbb
test
inc
ffreep
push
push
sub
push
push
xlat
jbe
rolb
cld
adc
movsl
mov
mov
pusha
inc
pop
aam
pusha
and
in
iret
inc
popa
stos
and
inc
dec
aaa
aad
divl
imul
cmp
outsl
mov
or
in
pop
loopne
das
mov
add
mov
mov
and
mov
xor
arpl
jmp
jns
cltd
insl
lret
fisttpll
ljmp
mov
sahf
imul
push
or
rorb
aas
std
adc
pop
outsl
pushf
ds
pop
out
scas
cmpsb
or
xor
mov
lahf
popa
shl
and
fidivrl
xchg
inc
xchg
outsb
setg
or
std
test
pop
jg
push
stos
mov
jae
adc
push
maxps
loop
das
ret
pusha
gs
lcall
aas
mov
mov
movsl
shl
inc
add
sbb
pop
stos
imul
aad
lahf
orb
add
pushf
pop
sar
inc
adc
sbb
pop
xor
inc
mov
movsb
cmc
outsl
iret
and
sub
test
add
pop
fisubl
jle
adc
mov
cld
cltd
imul
push
enter
mov
cwtl
jns
jl
andb
mov
cwtl
cld
cwtl
dec
mov
ja
ljmp
out
xor
movsl
daa
data16
and
bound
cmp
leave
hlt
mov
test
sub
adc
dec
in
xchg
test
pop
mov
daa
das
and
pop
and
imul
jp
pop
out
xchg
add
dec
test
and
js
mov
cmp
sti
mov
add
pop
js
sbb
cld
scas
push
inc
cmp
shlb
fcmovnu
cmp
cs
jo
int
xchg
out
aad
fisttpl
add
xchg
das
mov
pop
rolb
les
sub
cmpsl
test
movsb
arpl
jl
jmp
test
cmp
loopne
shrl
inc
push
mov
and
and
lods
push
mov
sbb
mov
dec
mov
and
add
lret
popa
inc
mov
popf
cmp
mov
mov
jno
mov
add
insb
mov
enter
mov
outsb
and
decl
inc
mov
out
divb
arpl
mov
add
pop
fabs
je
xchg
sbb
or
movsb
sbb
insl
cld
adc
push
andl
mov
mov
and
jbe
rorl
adc
pop
sub
fs
shrl
cmp
push
pop
jo
sbb
in
dec
neg
or
sub
add
sub
mov
adc
pop
fisubl
push
subb
pusha
in
insb
mov
cmp
pop
xlat
cmp
adc
js
adc
sbb
push
cmp
or
pushl
sub
pushf
test
or
push
push
bound
cmpsb
jge
subb
adc
xor
xor
insb
int
into
hlt
aam
adc
sub
jmp
in
inc
or
or
lods
and
test
push
add
adc
clc
cmpsl
and
jg
ss
dec
push
add
sbb
push
add
xchg
imul
out
divb
jnp
jg
in
pop
adc
lret
jecxz
mov
or
int3
xor
pop
push
dec
shlb
jae
insl
notb
fldcw
mov
into
add
jecxz
fcomps
mov
cmp
cli
jmp
add
dec
push
mov
xchg
mov
inc
nop
add
xor
pop
loop
jae
insl
rcll
jbe
jp
dec
shll
fsubs
scas
mov
enter
imul
cltd
iret
aad
mov
pop
mov
movzbl
movsb
mov
jp
xchg
adc
clc
neg
fwait
cmpsl
iret
pop
mov
jl
dec
mov
mov
mov
or
jne
xor
push
pop
enter
lret
loope
jp
xchg
xor
sbb
jge
andl
in
sbbb
ljmp
push
add
mov
mov
test
adc
sub
xchg
adc
pop
daa
mov
or
sbb
or
aaa
in
xor
cmp
xchg
test
mov
sar
add
xor
stos
test
or
mov
mov
xchg
pop
int
push
add
cwtl
push
outsl
push
push
push
ljmp
push
sbb
sub
fldt
push
lcall
mov
stc
sti
mov
lret
jae
mov
sub
hlt
test
jecxz
test
mov
push
ret
imulb
mov
mov
push
pop
std
in
inc
sbb
dec
fimuls
jno
xor
movsl
mov
and
stc
sub
sahf
mov
imul
mov
in
rcr
das
into
lea
test
mov
fsubp
ret
push
mov
insl
cmc
fcom
xorl
ja
mov
lahf
mov
inc
cs
call
faddl
xlat
std
hlt
test
testl
mov
jl
cmp
jmp
push
sub
loope
fcoml
jmp
loopne
xchg
or
inc
aas
push
xchg
sbb
add
add
cmp
push
loope
mov
jmp
xchg
daa
mov
sbb
push
mull
mov
xchg
add
rclb
jmp
xlat
flds
push
xor
sub
movsl
xlat
mov
mov
gs
push
enter
int
popa
sbb
gs
mov
dec
pop
mov
xchg
dec
scas
push
adc
adc
inc
sub
int3
repnz
and
mov
mov
jnp
jl
add
pop
shrl
cwtl
xor
mov
and
scas
push
jge
ret
imul
cld
dec
xor
mov
pop
pushf
sti
sub
mov
in
and
push
out
loopne
test
int
xor
mov
sub
and
pusha
sub
lret
push
loope
jge
xchg
adc
insl
rcrb
and
pop
mov
sub
lea
iret
pushf
xchg
inc
and
fsubp
mov
pusha
push
inc
into
pop
lret
pop
xchg
mov
cwtl
cmpsb
jg
dec
xchg
dec
dec
std
fstps
popf
add
xchg
mov
fdivr
cmp
jle
incb
pop
mov
cmp
aam
dec
aaa
cmpsb
cmp
mov
into
fstpl
cltd
mov
es
repnz
inc
in
clc
mov
inc
dec
stc
sahf
jae
ss
jnp
les
pop
mov
aam
loopne
mov
mov
push
cmp
adc
test
mov
idivb
daa
bound
mov
xor
mov
and
int3
ret
xor
mov
pusha
add
jmp
mov
lods
pop
mov
jb
subl
bound
lahf
dec
push
movsl
mov
stc
pop
sub
xchg
xor
mov
dec
cmpsl
push
push
outsb
add
pop
mov
pusha
mov
test
pushf
lock
xchg
dec
fwait
mov
arpl
stos
fisttpll
pop
or
idivb
or
gs
jbe
int
mov
push
pop
push
fimuls
push
js
inc
stos
xchg
push
leave
or
mov
lock
jne
aad
sahf
push
stos
mov
faddl
add
cltd
into
push
loopne
adc
pop
orl
leave
jecxz
jns
cmc
testl
dec
mov
mov
lcall
add
test
call
cmp
push
test
pop
fwait
push
inc
mov
push
cmpb
jbe
daa
scas
mov
out
mov
fsubs
jle
and
pop
je
cmpsl
iret
add
fdivs
repz
xor
xchg
subb
adcb
cltd
lea
xor
cltd
mul
push
mov
scas
add
dec
lea
out
sub
std
and
inc
or
xorb
mov
dec
lods
ss
add
inc
imul
mov
rorb
lea
fldt
leave
mov
js
or
sub
lds
lock
mov
repnz
pushw
sub
ds
dec
idivl
aaa
ficoml
loope
sub
je
cmp
mov
jbe,pt
push
negb
or
push
cmp
popf
fistpl
sahf
adc
adc
push
ja
fidivs
xchg
cs
and
movsb
flds
fisubrs
push
int3
xor
cltd
mov
dec
mov
add
mov
mov
mov
push
inc
xchg
mov
push
clc
and
xor
sbb
cltd
fildl
mov
cs
rclb
in
mov
lock
mov
lahf
dec
sub
lar
lcall
mov
scas
cwtl
adc
xlat
addr16
push
and
cmpl
cmp
pop
sub
dec
push
lods
add
or
es
pop
lods
out
xor
aaa
xchg
sub
jae
mov
aas
ficompl
pop
dec
push
xor
jg
mov
jl
pop
out
cmpsb
fidivl
cmp
or
mov
int
mov
cmp
mov
imul
inc
jp
shrb
sub
sbb
ret
and
jb
mov
mov
gs
out
mov
sbb
xor
test
hlt
testl
shll
loope
pop
ds
in
jecxz
mov
stos
xor
jnp
jb
scas
je
inc
pop
and
cmc
int3
imul
ret
shrb
das
sahf
and
movb
cmc
lcall
stos
lds
push
mov
dec
sti
rorb
dec
repnz
mov
push
pushf
cwtl
jae
xchg
mov
or
cltd
iret
pop
les
add
lahf
call
in
pop
mov
imul
jp
enter
shll
mov
icebp
popa
push
mov
inc
repz
pop
insb
sar
mov
ja
lret
pop
add
loopne
push
popa
inc
sahf
inc
mov
push
cmp
or
cli
pop
fisttpl
outsb
dec
mov
and
ljmp
mov
hlt
add
lret
lret
sbb
stos
lahf
cld
dec
std
sub
jns
das
inc
aas
and
cwtl
stos
xchg
ret
rcrl
ret
lods
jne
mov
std
sahf
cltd
fcmovnb
and
inc
pushf
out
sub
pop
mov
pushf
pushf
scas
fbld
xchg
lretw
data16
lea
and
adc
push
sub
loop
stc
mov
xchg
mov
mov
loopne
or
clc
add
mov
clc
lcall
rclb
rcl
push
mov
int
inc
sub
cli
fstps
mov
inc
aas
pop
mov
mov
or
mov
jb
xchg
sti
add
aas
inc
stc
es
inc
test
stos
dec
sub
inc
cmp
mov
jle
mov
push
icebp
std
fnsave
mov
mov
adc
or
mov
ret
jns
aam
pop
adc
mov
sarb
fldl
pushf
cmp
pop
xor
cmp
sbb
imul
jle
push
xorb
sbb
arpl
lods
cmp
or
cmp
and
sti
cmp
pop
dec
and
push
fsts
iret
pop
xchg
faddl
or
cmpsb
and
xchg
in
sbb
push
xchg
adc
mov
sahf
push
push
xchg
cmpsl
lods
aaa
jb
inc
jle
fcomps
shl
mov
dec
nop
insl
daa
das
fs
xor
mov
xor
mov
cmp
out
sbb
rolb
xor
adc
lock
dec
into
icebp
fnstenv
into
ja
imul
mov
mov
mov
lods
mov
or
jge
nop
stos
mov
xor
xchg
cli
sbb
sbb
sub
mov
adc
repz
xor
call
lods
inc
arpl
or
mov
and
jo
mov
lret
jb
lcall
xlat
aas
dec
sti
rol
xor
fsubrs
ss
je
mov
jo
lods
or
jbe
in
lock
cmpsb
adcl
mov
sub
imul
cmp
sbb
sub
gs
pop
bound
pop
cmp
xchg
jbe
adc
imul
aas
dec
push
push
in
lahf
imul
and
adc
outsb
xchg
or
imul
jl
call
lret
subb
into
or
rcrl
pop
jmp
jmp
int3
adc
jge
aas
popa
ljmp
mov
dec
out
shlb
testb
aad
dec
stos
repnz
xchg
imul
mov
jo
push
test
xchg
ljmp
pop
fisttpll
inc
and
or
jp
or
mov
loopne
ja
incl
lods
not
lds
mov
shlb
stc
test
inc
mov
clc
fsubs
fstpt
in
xchg
push
sub
outsb
mov
dec
adc
and
xchg
or
gs
dec
sub
or
dec
jmp
mov
dec
and
push
stc
mov
and
jns
and
jle
inc
pop
pop
rcrl
pop
out
or
mov
dec
in
clc
popf
push
lcall
push
sbb
sub
pop
jae
fidivrl
fistl
mov
mov
test
stc
iret
cs
jmp
jmp
loopne
cmp
inc
in
sti
dec
jle
notl
pushf
dec
and
insb
sbb
call
xor
mov
mov
jmp
imulb
ret
out
test
push
mov
push
xchg
pop
xchg
mov
mov
xor
jl
mov
jns
jne
bound
repz
std
arpl
fldl
lock
cmp
lahf
xor
das
adc
or
dec
repz
mov
fcomps
out
push
pusha
cltd
mov
fstps
icebp
cld
mov
in
or
cmp
jmp
or
icebp
test
xor
dec
rolb
popf
add
dec
sub
inc
dec
add
loope
add
fmull
push
dec
xor
lahf
cmp
int
mov
jmp
int
push
in
adc
xchg
stc
jne
arpl
dec
and
inc
or
push
push
clc
flds
sub
mov
push
gs
stos
lcall
jge
daa
jnp
stc
jg
shl
test
enter
inc
stc
xor
loop
out
outsl
lds
rcr
jle
out
xor
push
lods
pop
lret
xchg
pushf
jno
leave
leave
adc
xchg
adc
sub
imul
add
xchg
add
jmp
push
jp
pushl
push
xchg
mov
cmp
jmp
inc
xchg
lds
mov
adc
push
mov
cmp
ret
jl
shll
and
push
jge
mov
lds
loope
inc
subb
sub
movsb
dec
pop
ret
fstpt
es
rcl
lds
jle
and
push
jg
or
popf
adc
xchg
mov
pop
aad
dec
out
inc
push
cmc
xchg
loopne
in
mov
shll
inc
xorb
in
nop
cmp
cmc
cmp
nop
push
inc
pushf
jecxz
push
push
hlt
push
fimull
in
outsl
popf
imul
dec
repnz
rcrl
ljmp
ret
mov
aaa
mov
add
add
in
sub
mov
lods
decl
mov
into
jno
mov
jbe
mov
xchg
rclb
pushf
dec
xor
inc
pusha
test
fwait
dec
out
cmpsb
std
cmpsl
js
jne
dec
sbbl
lahf
cli
addr16
imul
dec
test
or
enter
outsb
xchg
ffreep
ret
fdivrs
test
push
jge
in
mul
inc
lret
push
xor
xor
imul
dec
es
mull
adc
in
dec
xchg
xchg
and
xor
jbe
stos
push
in
popf
jbe
mov
cmp
loopne
clc
out
lret
inc
pop
xchg
in
int3
adc
aad
repz
popa
addb
xor
repnz
movsl
xor
fsubr
pop
mov
xchg
sti
mov
and
pop
xlat
push
rorl
scas
mov
lods
dec
mov
fadds
ss
lods
aam
jle
std
dec
cli
icebp
cltd
arpl
cmp
inc
mov
leave
cmp
popf
push
inc
fdivs
dec
jnp
les
push
xchg
and
and
inc
sub
adc
and
cmpsl
mov
jge
in
pop
xchg
push
cwtl
mov
jne
out
repz
pop
adcb
repz
insb
sahf
iret
or
mov
mov
mov
fistps
into
loop
cwtl
scas
mov
test
dec
daa
hlt
dec
mov
ret
sub
cmp
push
mov
aaa
xchg
cmp
push
ficoms
jmp
push
loop
mov
mov
rcr
insl
xor
sbb
add
sbb
pop
out
shr
lods
xor
mov
lret
mov
shl
nop
and
inc
loop
rolb
cmp
mov
adc
negl
mov
pop
add
and
adc
push
cwtl
mulb
pop
or
jb
xchg
pop
jae
or
pusha
push
sbbb
pop
repz
outsb
gs
add
test
adc
or
repnz
fsubr
inc
mov
or
dec
mov
push
push
rcrl
dec
sti
cmp
sub
dec
push
lret
aaa
sbb
aas
mov
stos
jecxz
in
sub
dec
inc
rclb
cmpsl
sbb
nop
aam
xlat
repnz
fwait
popf
movq
fnstcw
aam
xchg
jo
adc
in
mov
out
xchg
push
fcmovnb
in
mov
rorb
and
mov
push
aaa
leave
xchg
push
sar
fs
test
adc
sub
lret
jno
ja
xchg
stc
loope
mov
and
into
lods
aam
sub
test
pop
dec
sub
mov
jb
sbb
cmc
jge
cwtl
lret
and
jb
adc
mov
insb
and
mov
mov
cmp
dec
or
push
jb
faddl
xchg
testl
and
outsl
in
mov
jno
leave
mov
iret
int
push
mov
dec
data16
adc
push
or
repz
mov
mov
adc
ret
lret
cmp
pop
cmpl
push
shll
fwait
adc
sbb
scas
pop
lret
pop
and
sub
mov
orl
pop
adc
xchg
aaa
mov
cmp
cmovns
pushf
outsb
popa
push
mov
fwait
pushf
aas
inc
mov
mov
movb
fiaddl
adc
dec
mov
fcomps
rcl
shll
cli
and
adc
popf
es
hlt
pop
mov
xor
xor
jbe
sahf
mov
mov
mov
cmp
shll
add
loop
cli
push
mov
gs
dec
xchg
es
in
xchg
push
dec
mov
and
fwait
pop
sbb
push
popa
outsb
xor
es
aas
iret
imul
pop
lea
add
mov
sub
sub
pop
scas
ret
inc
add
out
popa
dec
test
cmc
mov
cltd
into
fnstcw
out
imull
aaa
bound
xlat
in
jne
shll
sar
adc
cmpsl
jmp
mov
or
jae
out
nop
lock
ja
gs
movsl
mov
xchg
mov
mov
dec
jg
movsb
bound
icebp
nop
pushw
push
push
stos
data16
adc
ljmp
or
cltd
mov
lea
xchg
add
xor
int
bound
push
pop
rorb
js
mov
push
cmp
lock
aam
cmp
mov
inc
xor
push
inc
pushf
sub
jmp
mov
fwait
xchg
push
mov
test
repz
addl
ret
out
sbb
mov
or
mov
int3
out
jecxz
mov
sub
mov
or
pop
shr
or
and
insb
imull
mov
sub
mov
sarl
jg
mov
mov
movsb
xchg
shrb
adc
out
stc
mov
cmp
jmp
pop
cli
shlb
lret
or
add
pop
lock
gs
cmp
push
or
stc
sbb
adc
xlat
inc
loope
jp
mov
addr16
xchg
lock
das
out
pop
fsub
ret
andl
push
jbe
cmp
adc
push
ret
xchg
adc
leave
clc
mov
loop
mov
xor
inc
xchg
sbb
rcll
insb
xor
stc
sbb
pop
dec
std
lret
shl
xchg
int
jae
in
idiv
stos
pop
jno
leave
jns
lods
sub
sub
rorb
pop
adc
inc
mov
jecxz
adcb
push
bound
jle
test
addr16
test
mov
mov
sti
cmp
and
inc
cmp
dec
mov
pop
xchg
jl
mov
mov
and
mov
add
loop
pop
addr16
jmp
test
jecxz
mov
sbb
add
and
leave
pop
push
int3
out
pop
mov
push
pop
in
push
cli
int
rolb
mov
out
sub
mov
test
je
mov
addr16
popf
inc
adc
test
mov
pop
xchg
inc
jne
cwtl
add
sbb
popa
and
mov
aas
inc
lret
mov
icebp
add
cmp
je
fld
and
jmp
jmp
pop
lret
imul
pop
inc
test
jno
mov
mov
mov
call
sbb
iret
mov
out
lods
cmpl
adc
inc
mov
sbb
mov
and
dec
pop
stc
lock
mov
and
jge
scas
paddusb
xchg
inc
call
movsb
or
outsl
pop
mov
das
test
lar
out
cmp
mov
sbb
je
cli
test
lahf
movsl
psraw
lds
jmp
cltd
push
in
xchg
fwait
sub
out
cmc
pop
cmpsl
xor
loopne
mov
pop
sbb
cmp
fstps
lock
mov
dec
jmp
in
jnp
pop
dec
jae,pt
fs
inc
xchg
adc
cltd
xchg
sub
push
sub
and
imul
pop
leave
mov
xchg
pop
pop
dec
int
jo
sub
test
push
xchg
push
add
fcom
dec
push
cmp
outsb
inc
dec
push
lea
shlb
dec
or
lods
ja
jo
sarb
xor
mov
loope
loopne
mov
mov
push
outsl
out
push
jns
xor
adc
mov
cli
pop
cmp
outsl
call
jge
rolb
es
aaa
mov
push
sub
lods
dec
sbb
xchg
mov
or
xchg
rcrb
dec
xor
ret
cltd
pop
outsb
mov
pop
add
jg
cmpsb
jg
xchg
imul
enter
cltd
roll
pcmpgtw
add
jnp
pop
dec
mov
sbb
mov
xlat
movb
adc
outsl
fnstenv
push
mov
rol
fstpl
mov
enter
je
shrb
pop
bts
sbb
xchg
inc
push
jle
cmc
mov
cmp
sub
loop
pop
out
add
pop
rolb
mov
adc
inc
and
jl
mov
fstpt
addr16
ds
mov
adc
pop
jne
shlb
pusha
cmpsb
jbe
sbb
mov
add
addr16
add
sub
xchg
xor
dec
cs
fs
fs
aam
ret
mov
jecxz
loop
add
shlb
scas
and
nop
lahf
push
leave
jbe
les
ss
xor
mov
xchg
ret
inc
or
scas
push
sub
into
mov
out
xlat
idivb
sub
insl
js
xlat
pushf
mov
and
js
and
add
fcompl
jbe
inc
jecxz
and
dec
lds
pop
pop
or
sbb
jbe
fisubrs
fistpll
out
mov
cmpsb
xor
fidivrs
movq
adc
xchg
mov
mov
push
testl
or
hlt
mov
sarl
sbb
lods
outsl
inc
and
roll
sbb
mov
les
mov
pop
jno
addr16
in
mov
jmp
mov
dec
jg
add
cmp
jae
pop
cli
mov
mov
aas
cli
push
out
rolb
out
adc
adc
push
pop
jne
inc
inc
js
push
inc
fnsave
inc
jge
into
mov
repnz
mov
and
icebp
mov
dec
mov
or
rcr
sbb
jge
sbb
mov
xchg
out
push
mov
add
and
pop
test
xchg
add
lock
cld
push
push
leave
scas
push
scas
mov
cwtl
fstpl
lahf
adc
push
mov
stc
popa
cmpsb
das
fbstp
mov
shlb
add
inc
cmp
mov
ds
ret
dec
and
mov
sbb
push
stc
or
add
push
add
pop
add
jp
ja
or
sub
sub
int3
pop
mulb
gs
or
sti
bound
daa
mov
cmp
out
mov
divb
addr16
and
xchg
push
shlb
cmp
in
mov
ds
insb
sahf
imul
aad
loopne
stos
cld
inc
les
push
imul
repnz
inc
push
in
mov
push
sub
insb
adc
aad
cwtl
xchg
jnp
and
ljmp
xor
sub
mov
jae
push
nop
cmp
in
mov
jecxz
adc
push
mov
push
xchg
pop
repnz
packssdw
cltd
lock
rol
adc
jbe
pop
sbb
testb
movaps
add
int
dec
or
mov
mov
xlat
cmp
jo
sti
testb
shrl
pop
gs
dec
loop
daa
push
cmp
cmp
jns
cmc
enter
cwtl
jge
out
jmp
jmp
sub
sub
inc
je
leave
or
and
mov
jle
int3
pushf
iret
push
mov
popf
and
movsb
jg
push
movsl
loope
or
or
idivb
xor
or
dec
fs
into
test
push
add
xor
add
mov
inc
ret
ss
fildll
sub
mov
nop
mov
add
jp
stos
cmpsb
xlat
push
or
clc
fdivp
test
dec
add
or
lea
lret
int3
fnstcw
lods
cli
jns
ljmp
lahf
lods
cs
je
movsb
mov
mov
je
inc
mov
pop
sti
mov
cmp
xor
cld
rcr
jno
inc
mov
xor
cmp
test
adc
push
mov
xor
inc
mov
sub
lds
mov
mov
roll
rolb
rcrb
xchg
outsb
adc
cmpsl
in
xbegin
xor
clc
xchg
jne
sub
lret
add
hlt
push
sub
jl
imulb
es
push
xchg
sub
dec
fnstenv
fs
xor
mov
xlat
or
jae
adcl
and
scas
sar
test
mov
sub
add
je
rcrl
pushf
outsl
pop
adc
fs
subl
mov
dec
call
cmpb
cmp
call
mov
loopne
div
pushf
cmp
cmpsb
aaa
dec
dec
lods
das
push
adc
fs
in
cmp
lret
jb
jnp
lock
int3
into
xchg
mov
mov
stos
push
sub
add
sbb
mov
cmp
add
loop
inc
sub
adc
add
shr
adc
push
pop
sbb
sahf
mov
mov
jg
and
mov
mulb
shrl
int
add
js
push
push
lret
jl
pop
je
lock
sub
cmpsl
or
outsl
andl
ret
daa
push
jge
and
inc
inc
dec
int3
jp
in
iret
aas
je
dec
notb
pusha
jle
jge
js
insl
mov
inc
gs
cmp
mov
cmp
jge,pn
mov
in
arpl
test
fsubrl
mov
cwtl
push
rolb
push
popa
cmpsl
add
mov
xchg
jp
addr16
daa
jb
cmp
aad
push
cltd
mov
nop
or
fucomi
rcll
sub
stc
ja
scas
mov
xor
and
rol
mov
jnp
clc
std
xchg
xchg
cld
mov
aas
sarl
pop
in
cli
pop
dec
fucom
cmpsl
sub
cmp
mov
loope
mov
notl
cmp
pop
cmp
jl
les
pushf
fldl
mov
ja
xor
jb
rolb
xorl
jg
jmp
fwait
or
rep
or
and
idivl
jnp
sub
aas
ffreep
xchg
sarl
mov
mov
aad
pop
xchg
lret
lods
dec
lods
dec
mov
pop
jecxz
test
cmc
nop
xor
outsb
add
sbb
notb
jecxz
sahf
pusha
insb
rcrl
jge
push
cltd
inc
and
xchg
cmp
fs
inc
sti
imul
pop
lret
jle
xor
lret
xchg
lock
enter
or
lahf
or
inc
sbb
pop
xor
in
inc
mov
enter
jns
repnz
mov
jne
push
add
and
mov
pop
test
jmp
shrl
sbb
lock
sbb
lahf
pop
lock
mov
pushf
xchg
mov
loopne
popf
or
ljmp
mov
popa
jge
cmpb
and
das
repnz
inc
mov
cs
decl
je
mov
in
xlat
xchg
andl
call
aaa
out
repz
xchg
and
pop
testb
fs
sbbb
cmp
adc
adc
xchg
inc
dec
jg
push
and
mov
mov
out
nop
pop
jge
mov
add
fisttps
mov
pop
jp
cmp
mov
enter
and
adc
mov
jbe
icebp
or
add
xor
adcl
inc
xchg
mov
cs
sub
insb
mov
jns
movsb
xchg
jg
dec
and
adc
mov
cmpb
clc
movnti
fbld
mov
inc
sti
mov
jle
adc
test
sbb
xchg
ret
cltd
inc
jg
xchg
dec
xchg
add
addr16
mov
and
loope
jne
lods
dec
ja
xor
in
and
push
stos
mov
mov
xor
pusha
cld
in
mov
imul
push
xchg
xchg
sbb
mov
add
pop
adc
mov
ja
hlt
pushf
pusha
jle
mov
mov
scas
and
aaa
mov
inc
push
pop
mov
and
popa
ja
cmp
dec
decl
add
mov
push
hlt
out
jne
mov
adc
push
rolb
shlb
xchg
test
bound
jo
jge
mov
clc
xchg
jb
push
mov
je
mov
xor
mov
xor
pop
cs
mov
dec
test
shll
stc
pop
lea
cmp
push
out
mov
sub
lea
mov
xlat
pop
add
xor
jl
in
int3
inc
push
enter
mov
scas
xchg
inc
push
icebp
sub
xchg
push
test
push
inc
pop
lods
jbe
mov
movsl
mov
test
inc
fs
ror
push
lock
faddl
das
jle
std
gs
cli
dec
xchg
jne
fcmovbe
mov
xchg
enter
mov
push
mov
in
jp
in
in
adc
cmpsb
movb
mov
loop
stos
aam
nop
or
mov
and
mov
jns
shrb
xor
adc
xor
sub
and
sti
add
inc
test
mov
pop
jne
pop
mov
cmp
cwtl
lea
and
ja
fildl
das
popa
push
loopne
mov
mov
push
jmp
lock
sar
lret
mov
mov
jmp
or
iret
nop
sbb
cmpsl
in
add
in
xchg
or
repnz
sahf
mov
mov
lret
sbb
push
adc
xchg
rorb
cmp
std
out
mov
xor
in
mov
popa
inc
xor
push
aam
cmp
sub
xchg
imul
mov
mov
repz
call
xchg
add
outsb
cmc
lea
jg
sbb
orb
repnz
imul
push
data16
fadds
push
xchg
mov
clc
cmpsb
mov
sub
adc
ja
and
popf
mov
dec
popfw
mov
cs
loopne
jge
sbb
xor
add
or
xchg
fcos
rclb
or
mov
dec
lcall
rol
leave
pop
pop
adc
repz
sti
adc
jo
jo
push
cmp
push
mov
and
mov
sahf
mov
sbb
mov
push
addl
jg
hlt
mov
fnsave
cwtl
mulb
cwtl
sbb
fcompl
add
jo
ret
push
cmc
push
addr16
or
pop
xlat
cmp
cwtl
je
test
imulb
cmpsb
adc
sub
lahf
dec
push
jmp
xor
push
adc
ret
inc
and
inc
repz
sub
pop
fldcw
mov
rorl
lods
add
rorb
inc
lods
es
out
rclb
mov
cmp
sar
out
adc
jp
popf
insl
jbe
jle
adcb
mov
lcall
and
add
sahf
inc
int3
mov
pop
dec
jns
in
es
jbe
hlt
les
pop
mov
test
mov
sbb
xchg
cmpsl
in
pop
mov
inc
adc
lahf
adc
dec
outsb
ret
xchg
test
gs
push
sbb
push
push
pop
rcr
xor
iret
jge
dec
inc
insb
xor
js
rcll
ljmp
mov
push
scas
mov
dec
call
test
dec
pop
roll
fsubrs
hlt
xchg
stos
fildll
mov
rcl
out
sub
adc
fldcw
mov
js
and
push
in
loope
sub
fwait
adc
movsb
cmc
xor
lds
fidivrl
adc
sarl
mov
xor
stos
mov
test
es
xchg
and
mov
add
adc
add
test
test
std
ja
js
cmc
pop
mov
movsl
fadds
lods
stos
add
mov
shr
sbbl
out
test
test
lds
lret
insb
aad
pop
shrb
mov
leave
filds
lret
xor
cmp
mov
hlt
cmpsl
inc
or
out
fmuls
repz
aas
mov
add
fmul
dec
cld
and
xchg
and
enter
aaa
fnstsw
push
sbb
sbb
je
pop
mov
out
jae
ficomps
cmp
ja
fidivrl
into
xor
mov
jge
imul
mov
jbe
xor
sbb
shrb
sahf
sub
adc
std
dec
dec
mov
mov
lcall
push
cmp
loopew
jno
or
mov
xlat
jp
mov
inc
push
jecxz
dec
add
repz
das
inc
flds
push
outsb
or
loop
jmp
add
push
loopne
xor
je
fs
pop
jnp
mov
mov
inc
in
cmpsl
adc
pop
mov
xchg
jns
ss
lahf
pop
and
bound
imul
jne
or
movl
shrl
jg
jecxz
cmp
adc
fadds
int3
inc
mov
shr
push
lds
inc
mov
sbb
and
fmull
bound
jp
pop
push
mul
inc
push
andb
cltd
jge
je
mov
lods
repnz
sbb
jl
mov
cmp
rcrb
in
shrl
lcall
sbb
jle
push
xor
add
in
add
int
negb
fs
adc
mov
xor
clc
cmpsb
pop
xor
dec
dec
adc
rol
inc
dec
outsl
cmp
test
test
pushl
add
aam
add
int
and
mov
cmpsb
adc
in
push
in
leave
dec
pop
insb
and
in
cmpsl
and
scas
lods
add
xor
icebp
or
cmpsl
mov
jge
mov
mov
jg,pt
mov
push
fsubrl
pop
xlat
movsl
imul
out
cwtl
dec
lret
movsl
pop
push
aaa
inc
ja
pushf
xchg
cmp
xchg
or
pushf
dec
inc
mov
xchg
cltd
test
jo
hlt
divb
bound
stc
pop
insl
and
xchg
loop
subb
sbb
sar
mov
sub
jns
and
inc
sub
sbb
push
jnp
push
mov
lret
fisttps
lods
pusha
cmp
subl
pusha
inc
rol
jmp
mov
jno
xor
xchg
cmp
push
inc
push
cli
xchg
inc
mov
sbb
xchg
out
scas
nop
xchg
mov
das
pop
test
inc
jmp
xchg
push
xchg
aaa
stos
in
pushf
leave
mov
xchg
jne
cltd
inc
xchg
iret
cmpb
adc
fcmovu
rorl
nop
push
fdivrl
lods
add
adcb
cltd
or
out
push
sbb
mov
or
movsb
add
push
jmp
jge
out
adc
sbb
test
mov
pop
popa
sahf
sbb
jnp
in
cltd
cltd
or
sbb
mov
scas
stc
rorl
jg
pop
outsl
daa
sbb
movsl
stos
or
aam
jno
int
mov
push
dec
mov
push
mov
or
popf
jo
dec
aaa
pop
or
repnz
es
das
call
rdmsr
sub
inc
ds
jns
sbb
inc
dec
cmp
shlb
push
and
jmp
outsl
sub
inc
out
cmpsb
add
arpl
push
lea
fsubrs
cmp
rcrb
cli
das
jnp
sbb
xchg
mov
push
mov
or
add
mov
jo
jmp
fcoml
lahf
in
mov
gs
lcall
inc
jns
call
jl
inc
jbe
test
push
adc
jmp
scas
xor
fistps
push
hlt
mov
iret
xor
and
pushf
stos
ret
in
pop
xor
dec
imul
or
mov
sub
hlt
jle
mov
fsubr
movsb
add
jbe
jbe
mov
imul
out
test
push
push
push
push
testl
or
subl
xor
les
xor
mov
mov
or
push
xor
mov
pop
adc
and
pop
test
test
lret
push
out
cwtl
sub
addb
sbbb
dec
nop
arpl
inc
pop
and
xchg
jge
outsl
es
insb
mov
loope
dec
pop
scas
sbb
in
fs
cmc
mov
add
into
or
aam
jno
xor
adc
sti
xchg
imul
fdivs
sub
cmp
sbb
repnz
enter
fiadds
mov
mov
dec
cli
push
inc
mov
push
bound
adc
adc
enter
and
sub
ljmp
imul
xchg
jp
dec
adc
xlat
push
or
mov
adc
add
sbb
jp
imul
out
imul
in
insl
pushf
out
dec
jno
mov
xor
jae
pop
dec
or
mov
test
cmp
cmpb
mov
imul
pop
pushf
ja
ror
fnsave
cmp
ror
int3
fbstp
ret
adc
cld
dec
filds
es
mov
stos
dec
sbb
add
pop
pop
pop
xchg
hlt
orl
inc
or
lea
sub
or
sub
xchg
mov
mov
inc
dec
sarb
push
loop
and
sahf
pop
or
xchg
adc
icebp
shl
pusha
ss
shlb
adc
test
enter
leave
es
data16
push
fidivs
jnp
sub
fs
pop
or
leave
mov
jbe
pop
dec
scas
pusha
and
dec
sti
mov
xchg
push
jne
add
je
and
dec
aaa
testb
inc
fdivs
pop
scas
popa
mov
cmp
mov
hlt
lds
pop
addr16
jmp
dec
lcall
call
push
cmp
inc
add
loop
sbb
std
and
xchg
mov
fistpl
push
insl
mov
cs
enter
cltd
pop
movsb
sub
andb
cmc
js
nop
insl
sub
out
ds
aas
rcll
leave
dec
int
scas
loop
add
lea
ss
fisubrs
pop
dec
shl
addr16
test
adc
mov
or
and
adc
gs
lcall
repnz
mov
jnp
in
das
mov
or
lcall
lret
scas
pop
mov
push
pop
push
push
add
sub
jne
mov
sbb
sar
in
pop
movsb
pop
aaa
xlat
adc
adc
pushf
cli
xlat
cs
lea
imul
loop
lcall
incb
fwait
jo
inc
cmp
cmc
adc
xchg
jmp
sbb
jb
cmpsl
mov
fwait
out
dec
pop
cmc
sbb
pop
mov
nop
repz
sub
mov
inc
jae
stc
adc
jge
ja
fwait
stc
imul
and
or
jle
mov
stos
and
sahf
inc
sar
mov
ljmp
inc
and
xchg
sti
fisubl
inc
sbb
adc
adc
xchg
frstor
add
adcb
pop
add
int3
pop
fs
insb
loopne
pop
jecxz
xchg
jae
std
adc
push
inc
in
xor
leave
pop
jno
in
push
es
mov
pushf
cmp
cmp
pop
pop
jae
push
inc
pusha
daa
shlb
subb
dec
adc
push
inc
out
mov
adc
sbbb
and
outsl
das
adc
loopne
jmp
jp
dec
and
sbb
jne
add
cltd
inc
clc
push
and
clc
jne
out
cmp
mov
dec
out
imul
mov
dec
fdivrl
icebp
test
icebp
sti
push
in
jg
std
pushfw
dec
mov
push
mov
scas
js
and
push
cmp
mov
fs
ja
stos
add
and
rol
mov
lock
push
popf
pop
mov
xor
push
je
sbb
jb
add
enter
fs
movl
test
mov
rcrl
sarb
orl
fmul
lret
int
jg
jo
rorl
push
in
arpl
add
sub
addb
and
jnp
jmp
repnz
int3
sub
xchg
mov
sbb
sbb
jnp
shll
mov
in
lds
mov
mov
mov
ficoml
fcmovnu
xlat
jnp
adc
ja
jne
cld
insl
cmpsl
or
and
outsl
lods
fs
or
and
cld
pusha
mov
mov
out
repz
lahf
cs
sbb
jns
loope
out
movsl
mov
cmp
push
icebp
xor
mov
lock
add
sub
cmp
rcrl
fnsave
cmpsl
cwtl
xchg
outsb
gs
and
xchg
enter
cmp
in
les
aas
add
pop
sti
mov
mov
aaa
aaa
xor
or
dec
jmp
lcall
add
daa
out
in
jmp
and
sbb
push
push
cmp
mov
sbb
pop
cmpsb
adc
jg
shlb
inc
cmp
lods
mov
push
movsl
loop
fstpt
cmp
les
jne
enter
jecxz
into
mov
scas
pop
mull
sbb
dec
cmpsl
push
out
xchg
mov
cmp
or
daa
mov
lahf
sub
outsl
stos
sbb
decb
int3
jb
adc
mov
mov
arpl
push
mov
pop
push
push
sbb
orb
mov
hlt
push
xlat
xchg
loope
adc
jne
test
fwait
mov
push
mov
sar
icebp
mov
test
sti
xchg
mov
sbb
lods
enter
aam
mov
push
adc
pop
adc
fldl
jno
sarl
inc
inc
sub
stos
adc
jo
sbb
sub
sbb
pop
fistpll
mov
out
faddp
movsb
dec
pop
mov
inc
sub
adc
repz
pop
jg
fildll
sbb
mov
add
xchg
inc
mov
adc
btr
dec
movsb
mov
mov
stc
ficompl
cli
hlt
add
in
pusha
mov
fidivs
lock
jmp
mov
imul
mov
inc
shrl
mov
mov
cmp
xor
adc
gs
xor
or
push
mov
inc
mov
lea
pop
xchg
sti
sub
fwait
mov
inc
xor
add
insb
mov
bound
jno
rcr
add
push
shrb
mov
out
jl
and
clc
outsb
inc
adc
cs
jns
out
iret
push
xchg
imul
cmp
insl
scas
jmp
pop
xchg
and
push
mov
loop
mov
ret
push
xor
adc
mov
push
call
jle
shr
cmp
arpl
cmp
push
push
pop
lahf
inc
aas
xchg
inc
lds
add
cmpsl
pop
rcr
inc
and
loopne
rolb
cmp
jne
or
push
dec
insl
hlt
sub
cli
loopne
lret
pop
leave
sbbl
mov
or
icebp
and
mov
imul
fdivl
sahf
cmp
aas
lods
nop
pop
outsl
xchg
es
push
sub
jmp
add
pop
int
jecxz
jg
or
mov
pop
cltd
out
sarb
out
pop
andl
pusha
or
sub
mov
stc
cwtl
hlt
mov
shl
test
imul
gs
mov
mov
in
mov
and
add
mov
aad
fisubs
fcom
inc
jno
fs
xchg
test
inc
adc
and
inc
inc
mov
sub
cltd
lcall
out
push
or
stc
lock
or
pusha
out
or
pop
js
popf
insl
repnz
pop
and
cmp
movsl
or
std
je
sub
call
and
sub
cwtl
pusha
clc
sbb
mov
mov
jnp
mov
xchg
jnp
mov
push
sarb
cmp
jmp
popf
or
push
pop
fstpl
mov
lahf
aaa
sbb
rcr
push
and
cmp
stos
dec
icebp
cli
sbb
pop
subl
test
fdivrp
std
push
mov
fdecstp
hlt
jmp
test
push
gs
shll
loope
adc
mov
fadd
push
mov
and
mov
jbe
sahf
sub
add
inc
jns
ljmp
add
mov
pop
pop
in
aad
in
jne
and
mov
mov
sub
mov
repz
jno
xchg
xchg
into
xchg
push
jae
pop
jmp
pop
into
xor
xchg
rorb
sub
aas
mov
mov
js
pop
push
scas
testl
insl
push
and
bound
or
xchg
sbb
out
sbb
push
xor
cmp
repnz
ljmp
mov
sbb
or
mov
jnp
xchg
jb
xchg
pusha
adc
dec
lods
and
mov
adc
mov
sbb
mov
test
mov
pushf
jl
fs
jno
mov
inc
mov
mov
inc
or
shrb
mov
pop
jp
and
or
fdivl
mov
pop
add
pusha
xor
adc
pop
into
movsb
lods
jns
pop
outsb
and
xacquire
and
lret
push
mov
xchg
ds
in
nop
push
xor
pusha
push
jl
lods
lea
mov
scas
push
fldl
dec
or
ljmp
mov
xorl
jne,pt
loope
mov
cmp
lea
or
ljmp
lods
outsb
insl
test
imul
ljmp
or
scas
cmc
jo
or
adc
and
add
adc
insl
shlb
mov
and
dec
inc
cmpsl
sub
mov
mov
mov
add
jo
fcomip
outsb
pusha
movsl
pop
adcb
lea
aas
adc
popf
cmp
adc
adc
xchg
jb
mov
int3
dec
dec
arpl
pop
leave
lret
sti
or
enter
sub
inc
dec
outsl
cld
out
fisttpll
xchg
xchg
orb
clc
adc
sub
push
jmp
dec
aas
sub
sub
mov
in
arpl
xor
call
pop
lret
int3
fs
or
loop
jbe
jmp
jg
out
dec
xor
cmp
neg
lea
das
mov
das
adc
scas
out
inc
jbe
mull
xchg
or
mov
lret
mov
fisttps
in
rcll
push
pop
jnp
xchg
mov
or
pop
mov
aad
dec
push
jg
mov
push
or
sbb
add
push
push
mov
or
xchg
orl
jmp
daa
addr16
sub
movsl
dec
adc
aad
fwait
rorb
fisttpll
popa
fcomi
icebp
fs
mov
bound
out
hlt
js
inc
cmc
ret
fcmovb
xchg
fsubs
pop
mov
sbb
dec
push
stc
ret
stos
dec
mov
mov
mov
inc
mov
fs
aad
pusha
inc
push
jmp
aam
inc
push
inc
repz
test
mov
enter
jg
lret
sub
pusha
fs
iret
shrl
jns
pop
xor
and
or
mov
ret
cwtl
lcall
mov
push
dec
sti
xchg
addr16
fs
mov
in
repnz
mov
xor
pop
fbld
fs
jne
push
mov
or
mov
adc
inc
mov
popf
pop
sub
xor
pushf
jns
lods
cmp
dec
add
pop
or
cmp
push
lret
lahf
and
jo
fisttps
cmc
xchg
sub
iret
sbb
cmc
or
movsl
xor
data16
mov
xchg
xchg
jle
testl
cs
and
pop
mov
jg
jb
and
or
loopne
xchg
jg
xchg
push
pop
adcb
in
jge
ss
cmp
popf
lcall
mov
pop
repnz
sarl
insb
cmp
mov
repnz
push
xchg
jmp
cwtl
mov
adc
leave
sub
in
dec
lcall
test
and
adc
lds
fmuls
lahf
lods
ret
femms
inc
negb
iret
mov
stos
insb
notl
andl
nop
imul
inc
and
arpl
sbb
push
add
aaa
lahf
cmp
inc
insl
mov
test
fisttpll
aad
insb
icebp
cmp
loopne
cli
loopne
enter
xchg
loope
es
xor
aad
jmp
cmpsl
xchg
mov
lea
lret
push
push
or
mov
xor
cmp
js
push
push
arpl
cmp
aas
hlt
adc
mov
jmp
mov
and
xlat
and
xchg
popa
mov
push
test
psrlq
repnz
push
inc
test
cltd
cmc
xchg
outsl
cli
inc
lret
cwtl
das
stos
popa
fimull
cmp
in
cmpsl
sbb
push
mov
movsb
or
mov
push
mov
and
sbb
cmp
sti
mov
mov
aas
shlb
cltd
jle
loopne
jne
sbb
pop
mov
bound
fcmovnu
xor
sbb
rcl
hlt
inc
push
repnz
sub
imull
addr16
adc
xor
jne
jmp
int
xchg
imul
adc
je
mov
inc
inc
shrl
sub
incb
sbb
sbb
inc
adc
loope
cmp
or
je
fcomps
sub
push
pop
fs
jle
pop
sub
out
stos
leave
sub
mov
rcll
hlt
imul
lods
subl
jno
jne
jns
ret
lahf
lds
aam
push
movsb
test
pushf
mov
addr16
xchg
les
xchg
bsf
push
imul
pop
stos
pusha
test
in
daa
jge
xchg
test
test
int
gs
pop
add
test
or
cmp
cs
pop
adc
enter
xchg
push
clc
clc
xor
outsl
xchg
adc
ja
xchg
push
cmp
sahf
cmp
hlt
stos
test
rclb
lds
pop
fldt
cmp
fisttpll
mov
adc
mov
xor
jmp
fwait
pushf
xchg
in
xchg
sub
xor
iret
jnp
add
sbb
xchg
aam
jbe
cmpsb
fmull
in
push
mov
hlt
int
mov
fwait
sub
sbb
mov
push
in
add
sahf
push
xchg
rcrl
xchg
jge
stc
jl
adc
aaa
xor
inc
cmp
xchg
mov
into
faddl
mov
pop
test
movsl
xor
in
sar
mov
sahf
xor
testb
cmpsl
jae
and
or
push
inc
inc
pop
in
fnstenv
movsb
andl
loope
test
sub
cs
dec
dec
cmpsl
mov
negb
xchg
cmc
mov
imul
jb
ret
lea
sub
mov
aad
mov
inc
adc
out
out
pop
jae
mov
cmpsl
lods
mov
sbb
mov
fidivrl
push
mov
aad
repnz
mov
outsb
cmp
pop
jl
mov
xchg
loopne
push
in
test
push
or
sub
inc
lcall
ret
mov
or
sbb
sti
pop
aaa
insl
mov
sub
push
daa
lcall
daa
add
test
mov
daa
pop
daa
or
pushf
decb
mov
or
mov
in
pop
jg
sti
lret
jns
out
xor
enter
pushf
jmp
lea
fld
mov
outsb
push
jae
addr16
sbb
xor
pushf
jae
out
pop
sbb
mov
aas
je
jo
cmpsl
sbb
push
outsb
aam
call
data16
aad
sub
adc
sar
or
cs
aad
xlat
sub
lock
cwtl
js
xchg
push
test
int3
pop
fdiv
cmp
jl
cmp
mov
ja
fcomp
cltd
sbb
xchg
rorl
jmp
clc
add
mov
test
mov
xor
mov
jmp
aad
fwait
mov
dec
inc
hlt
fsubrs
add
daa
sahf
rcrl
mov
and
in
fucom
dec
fwait
xchg
ret
adc
das
call
outsl
aas
cltd
dec
arpl
push
pop
sub
dec
imul
loopne
repz
pop
outsb
clc
mov
cmp
lahf
push
test
hlt
mov
and
cmpsb
incl
sbb
inc
repnz
lea
xchg
out
xchg
shr
scas
and
mov
xchg
fisttpll
jno
xchg
add
jno
leave
mov
jae
add
jns
sbb
pop
std
pop
or
jns
out
jo
sbb
loop
dec
cmpsl
popa
mov
cmp
cmp
inc
jae
push
xchg
push
insl
jbe
loopne
sub
lahf
jecxz
xor
mov
cmp
cmp
stos
mov
imul
gs
idivl
inc
mov
sti
dec
jecxz
pop
inc
call
je
mov
call
jns
xchg
or
mulb
xor
jnp
xlat
jge
mov
or
scas
arpl
mov
push
movsb
pop
xlat
notb
and
adc
cmp
jno
js
lea
adc
mov
adc
mov
push
cmp
and
cmpsb
and
mov
and
pusha
ss
adc
cmpb
insl
les
fwait
push
shll
or
test
aad
pop
push
adc
pop
add
bound
in
lret
mov
hlt
clc
jns
dec
stos
ficompl
add
sub
cmp
je
mov
arpl
shll
scas
ds
sub
inc
mov
ret
lea
rcll
jae
pop
mov
jl
rorl
mov
push
adc
push
lret
sbb
popf
lret
mov
out
cmp
imul
pushf
loop
imul
mov
dec
mov
adc
je
inc
sub
sbb
fildl
andl
fs
insl
fs
xor
push
mov
jle
sub
inc
shl
add
push
shrb
icebp
dec
insb
scas
xor
xlat
mov
dec
mov
lea
mov
icebp
dec
in
aad
fnop
inc
dec
stos
cmp
out
add
mov
mov
out
fcomps
mov
push
sbb
or
lahf
insb
repz
mov
mov
mov
hlt
and
xchg
adc
or
imul
repz
push
sub
and
mov
stos
or
push
inc
scas
jbe
cmp
mov
cmp
outsl
rorb
mov
xchg
sub
inc
lds
dec
pop
xchg
insl
cmpsl
cmp
gs
push
pop
imul
xor
push
dec
dec
sbb
jmp
std
xor
in
nop
mov
sbb
jno
or
dec
loopne
adc
fadds
test
stos
and
pushf
add
mov
repnz
cmpsl
mov
leave
in
pop
stc
lea
jg
jmp
sar
out
dec
pop
ljmp
or
popa
pop
iret
pop
out
popf
jae
in
enter
mov
xchg
mov
cmpsl
lods
xchg
ja
xchg
cmp
ljmp
jp
mov
jl
rcll
xor
adc
jbe
fidivrl
rol
ljmp
pop
repnz
sbb
adc
push
inc
leave
xor
aad
test
mov
fadds
cmpsb
popf
jne
inc
xor
push
iret
mov
sub
jbe
cld
push
sbb
bound
faddl
push
out
pop
sbb
sub
addr16
in
das
dec
xchg
lods
sbb
sub
aam
mov
jecxz
jecxz
movl
gs
scas
cwtl
stos
jns
xchg
rol
inc
mov
pop
mov
adc
imul
enter
xchg
pop
cmc
xor
rclb
mov
arpl
inc
mov
push
lea
push
sbb
pop
mov
ret
jle
daa
daa
aaa
pop
jle
hlt
push
test
in
mov
enter
sub
sbb
xor
ds
inc
sti
sarl
enter
repz
adc
mov
or
mov
scas
je
lahf
pop
cli
sub
nop
shrl
fiaddl
mov
sbb
rol
mov
sti
sti
lret
pop
leave
movl
pop
push
and
out
push
adc
pushf
adc
cmp
ljmp
fnstcw
fmuls
xchg
lds
cmp
mov
outsl
mov
lcall
pusha
or
dec
sub
in
subb
mov
xchg
mov
xchg
shl
adc
mov
shll
shlb
sub
aam
pop
adc
add
movsl
cmpsb
sbb
mov
cltd
cmp
mov
xchg
lock
mov
in
lods
int3
xor
pusha
inc
das
clc
push
ret
mov
std
gs
xchg
lods
push
pop
sbb
dec
mov
xchg
mov
push
cmc
lods
push
int3
testl
loop
mov
icebp
sub
es
jmp
sahf
mov
fdivrs
movsb
fdivs
mov
aad
enter
cmpl
sbb
leave
jge
jnp
jmp
aad
add
xchg
push
in
xchg
xor
cwtl
test
jb
out
xchg
mov
and
dec
popf
ffreep
inc
scas
add
ror
xor
sbb
into
dec
adc
lret
flds
jg
aam
add
jle
jmp
loopne
add
int
test
or
adc
mov
cmp
scas
daa
nop
in
jnp
gs
cmp
into
mov
sub
ja
sub
sub
insl
cmp
sahf
popa
xchg
sarl
repnz
xor
pop
push
push
out
jae
xor
mov
adc
sbb
orl
decl
jmp
shlb
lret
cmp
mov
pop
mov
and
sbb
mov
imul
imul
lods
cld
inc
pop
push
sbb
ret
icebp
bnd
fsts
lret
loop
cmp
aam
sbb
pop
jo
outsl
aam
jmp
mov
mov
call
bound
pushf
push
test
lcall
xor
ds
mov
dec
and
dec
loope
xchg
ret
mov
jnp
in
push
cmpsl
in
inc
dec
lods
mov
push
insl
insl
add
xchg
int3
dec
iret
add
xlat
bound
push
xor
dec
xchg
scas
in
cmp
shlb
xor
inc
xor
sti
and
dec
add
cmpsl
sbb
jle
sub
ficoml
adc
cmpb
js
mov
mov
in
jne
sub
mov
enter
xchg
movsl
dec
dec
push
cmpsb
xchg
inc
sahf
enter
xchg
pop
daa
xchg
mov
or
ss
pop
je
add
xchg
aaa
aaa
stos
fidivs
stc
iret
imul
ljmp
lods
sti
movsb
adcl
add
andl
push
out
push
xchg
mov
sub
mov
movzwl
pop
ljmp
out
add
call
cmpsl
lds
push
mov
push
push
daa
popa
dec
in
cmp
mov
in
or
sub
ss
cmp
out
jo
push
xchg
xor
sub
and
sub
arpl
lds
push
jmp
orl
lds
pop
aam
jae
dec
rep
lea
cld
add
jbe
pusha
negb
inc
inc
cmc
cli
mov
mov
sbb
mov
push
sbb
outsb
ret
aam
adc
fnsave
mov
test
push
test
mov
adc
pop
aam
lds
adc
and
sarl
pop
ret
mov
cmp
or
lret
inc
in
push
stc
shl
or
or
push
add
pop
push
jne
enter
dec
loop
andl
inc
fsub
xchg
out
jmp
push
lea
or
stos
cs
fisubrl
xor
mov
push
js
in
or
dec
outsb
cs
push
mov
js
int3
icebp
jno
xlat
push
fwait
loop
mov
mov
out
aas
lea
xchg
adc
push
xchg
add
fdivr
cmp
sti
es
mov
add
aaa
pop
push
add
xor
scas
into
mov
xchg
sbb
push
popa
test
divl
pop
clc
add
jb
lcall
and
repz
mov
adc
not
cmpsl
jge
pushl
ds
mov
mov
repz
sub
jnp
ret
inc
push
sti
ret
arpl
lods
push
pop
lcall
mov
ret
fs
jbe
in
ret
hlt
jle
and
sbb
and
xchg
ret
dec
jge
stos
push
pop
cmp
stos
aas
cmp
inc
and
fcoms
sub
sub
add
mov
sti
mov
orb
test
mov
pop
add
mov
out
js
data16
adc
aaa
add
add
insl
rol
add
mov
add
and
int3
out
push
insl
in
leave
push
fists
sbb
jg
outsl
pop
stc
daa
add
jl
scas
imul
add
fistps
fwait
cmp
pop
pop
repnz
mov
inc
dec
jmp
insb
sub
cli
icebp
sub
dec
mov
pop
or
test
test
inc
cmp
add
adc
push
call
or
shlb
sbb
std
aam
in
xchg
les
mov
pop
xor
jle
mov
stos
dec
xor
and
sub
jne
xchg
cltd
mov
add
sbb
jg
inc
push
add
in
cld
daa
cmpsb
and
sarl
add
icebp
in
imul
mov
and
mov
cmp
sub
xchg
mov
out
and
scas
ret
mov
daa
xchg
cld
xchg
leave
xchg
mov
jbe
mov
dec
mov
shrb
je
xchg
cmc
xor
enter
and
dec
out
mov
imul
pusha
push
sbb
push
xor
loopne
mov
xchg
or
push
stos
and
xchg
inc
ret
mov
dec
inc
leave
sbb
lds
dec
or
dec
mov
in
rclb
lret
lods
stos
xchg
daa
jbe
stos
mov
mov
in
shlb
lea
sahf
sub
stos
fsubrl
push
add
or
fsubrl
pop
jmp
jne
adc
outsl
nop
xchg
xchg
sahf
push
jl
cmp
dec
je
inc
or
sarb
in
add
dec
jno
cli
push
mov
and
rclw
dec
pop
testl
sub
pop
inc
in
push
fnstcw
push
push
imulb
ret
mov
add
dec
pop
ficomps
add
mov
arpl
mov
sub
mov
jl
or
hlt
jg
xor
jae
mov
pop
pop
fistps
faddp
jecxz
fwait
push
mov
pusha
sub
dec
push
mov
jg
pslld
mov
inc
shrl
sub
ss
bound
mov
rcl
mov
sub
or
imul
stos
jmp
mov
xchg
sub
addl
leave
fucom
jmp
out
and
xchg
push
ror
mov
lret
xchg
push
sub
xchg
or
cmp
clc
pop
push
pop
push
pop
xchg
xlat
add
inc
jnp
sbb
repnz
lahf
sbb
cmp
ret
mov
dec
lea
stos
pusha
jbe
fimuls
aas
jnp
nop
and
push
sub
jno
lods
cmp
test
subl
cmp
fcom
xor
mov
stc
cwtl
in
mov
push
push
sbb
push
push
xor
icebp
iret
pop
add
out
sub
mov
adc
jae
inc
rclb
push
xchg
add
out
or
jp
inc
std
repz
imul
dec
push
sub
call
je
stos
inc
sahf
lea
lods
sbb
in
mov
out
enter
inc
pushf
fistps
rcr
nop
sub
jge
sub
shl
jns
cmp
pop
jo
and
adc
cmp
jo
mov
or
xor
ss
and
sub
push
cmc
or
jb
popl
test
push
add
sub
test
push
jno
in
dec
popa
mov
rorl
mov
lods
lret
sbb
in
push
bound
enter
and
repnz
arpl
pop
inc
fstpt
sbb
lods
enter
push
jl
mov
andb
sbb
cmp
inc
mov
mov
ds
xchg
repnz
lcall
or
sub
cmp
lock
hlt
dec
push
sub
xchg
inc
or
mov
ficompl
cs
aam
sti
adc
subb
inc
xchg
icebp
out
push
jae
rorb
lcall
scas
lods
divl
jo
xlat
sbb
fld
inc
add
push
mov
jg
inc
sbb
push
push
int3
mov
or
mov
mov
xchg
xchg
repz
cmpsb
cmpsb
and
push
bnd
rorl
sbb
jo
xor
out
xchg
repz
or
jae
jge
repz
push
daa
push
sub
movsl
ja
jne
das
pushf
adc
sub
repnz
cmpsb
out
popf
pop
mov
cmp
fmull
fwait
js
xor
mov
sub
leave
dec
dec
mov
cmp
push
test
insl
adc
movsb
int
push
sub
js
jg
cli
dec
add
sbb
adc
adc
int
lea
mov
or
testl
test
mov
pushf
mov
cmpsl
sbb
aas
inc
sub
xlat
imul
movsb
shr
in
rcrl
mov
and
popf
xchg
jae
jg
insl
cmp
sbb
xchg
js
sbb
rcl
sub
cmpsb
mov
cmp
cmp
xchg
test
or
push
pop
sbb
sbb
rcr
xchg
out
arpl
test
cmp
fnstenv
cwtl
std
mov
in
adc
ljmp
test
mov
clc
fistpll
jo
int3
outsb
lods
ficoml
push
mov
or
outsl
out
or
add
data16
add
cld
into
xchg
cmc
cs
push
jmp
int
xchg
jno
push
push
jle
ror
jnp
lret
lock
mov
xor
pop
bound
xor
shl
cmp
mov
rcll
fists
popf
cmpps
in
icebp
ss
mov
pop
mov
cltd
mov
les
mov
jp
push
jne
jmp
mov
mov
fwait
lret
jo
and
add
fisubrl
js
setae
jno
jno
cmpsl
hlt
push
int
lahf
xchg
out
in
lret
and
xlat
sahf
cld
imul
loop
fisubs
lahf
daa
push
sbb
pop
ljmp
sbb
test
add
inc
fstpl
ret
pushw
sub
rcl
test
dec
xor
xchg
repz
rolb
pushf
push
push
mov
frstor
inc
mov
fsts
cs
mov
and
jmp
pop
in
adc
jecxz
stos
mov
repz
cmc
cmpsb
fnsave
fildll
shlb
cmc
push
mov
and
inc
outsb
jae
mov
adc
nop
jle
clc
movsl
arpl
or
mov
xor
cmp
mov
pop
jmp
adc
xor
pop
nopl
add
imul
imul
pop
mov
out
push
jge
mov
aam
mov
iret
jnp
jg
call
mov
in
xchg
jae
mov
sahf
div
mov
adc
xor
lods
lods
ja
repnz
pop
jne
xor
negb
popa
ss
cmp
fwait
push
call
ficoml
sub
fsubrl
adc
lcall
mov
mov
push
jle
pop
mov
hlt
mov
sub
push
ljmp
mov
outsl
mov
jecxz
pop
ret
std
loop,pn
sub
fsubrl
dec
jmp
add
inc
shrb
or
and
enter
xchg
icebp
mov
frstor
aas
jmp
icebp
xchg
cmp
and
mov
mov
aas
es
stos
pop
xor
repz
add
imul
xchg
push
ret
and
pop
add
mov
ret
les
daa
lods
outsl
and
cmp
adc
xlat
rcrl
fwait
bound
icebp
fsub
into
lds
adcb
adcl
sbb
inc
sub
cmp
sbb
pushl
mov
dec
adc
scas
mov
push
call
sbb
rorb
ss
pop
mov
fildl
mov
pop
dec
cmc
pop
cmpsl
xor
sbb
mov
mov
add
push
lods
pop
pop
sbb
dec
pop
cs
add
jg
mov
rcl
das
mov
push
std
mov
pop
xchg
imul
sub
or
pop
stc
cmpsl
lahf
sti
out
inc
and
fadd
push
adc
loope
pop
test
sub
je
xchg
sub
and
imul
push
out
pop
inc
cmp
dec
jbe
loope
inc
mov
push
sbb
and
push
jmp
add
sete
lea
cli
cli
jne
prefetch
sti
sub
cmpsb
pop
mov
xor
pop
stos
push
xor
mov
cli
pop
loopne
sbb
das
dec
std
push
dec
test
xchg
inc
pushl
add
aam
adc
mov
rclb
popl
lret
in
rorb
cwtl
dec
pop
mov
sbb
and
pop
sbb
lock
dec
call
popf
in
jg
in
leave
sub
leave
imul
fwait
shlb
stos
mov
call
jno
jle
or
test
xchg
cmpsl
mov
xchg
adc
jnp
push
xor
incb
popl
idivb
xlat
mov
dec
cwtl
lock
pop
dec
fmul
jle
push
mov
nop
dec
mov
mov
cs
sub
jne
pop
mov
pop
or
jne
push
xchg
cmp
adc
aaa
lahf
les
adc
sbb
out
sub
pop
xchg
push
mov
xor
insl
jle
filds
test
xchg
int
xchg
mov
sbb
fwait
outsl
mov
stos
repz
sbb
dec
mov
mov
xor
fimuls
mov
addr16
pusha
bound
xchg
enter
or
jae
or
xorb
mov
and
andl
data16
lret
in
dec
or
jnp
cltd
inc
shl
loop
push
mov
jnp
sub
psrlq
push
xchg
mov
lret
scas
lcall
outsl
in
jg
add
scas
cmp
std
jbe,pt
cld
int
sub
imul
xorb
sbb
stos
lret
lcall
stos
inc
mov
cs
movsl
inc
loope
loope
adc
cltd
pop
pop
fldenv
movl
ljmp
fcompl
loopne
repnz
and
test
loope
pop
push
pop
lcall
testb
aad
jl
sub
lret
shlb
jno
scas
lret
int
jecxz
test
push
mov
icebp
sub
cwtl
add
aaa
testl
sub
iret
mov
jne
pop
mov
enter
mov
fs
cmp
add
loop
stos
xor
test
push
icebp
out
int3
xchg
aaa
in
or
daa
mov
lcall
das
xor
mov
dec
lock
mov
sarb
mov
loopne
pop
xorl
aaa
and
or
mov
je
movsb
out
sub
push
enter
insl
ljmp
add
add
xchg
mov
add
lea
or
sarb
movsl
ja
cli
jns
out
add
pop
adc
cltd
out
dec
add
inc
jg
sbb
inc
inc
cld
stos
mov
jle
mov
scas
andb
mov
xor
xor
stos
dec
into
inc
push
dec
xor
xchg
mov
jnp
and
inc
ss
sarb
mov
loopne
xor
push
sub
inc
stos
imul
fimuls
lret
es
inc
popf
imul
popa
mov
clc
bound
das
jmp
add
cmp
cmpsl
movsl
and
aam
fdivrl
pop
imul
jo
xchg
inc
xchg
loope
and
fdivl
push
paddusw
add
cmc
test
movsl
and
adc
mov
inc
xchg
enter
adc
lahf
es
push
scas
mov
stos
sub
mov
mov
xor
scas
push
jl
jg
jge
adc
pop
fisubl
js
in
mov
shlb
push
outsb
push
mov
pop
aam
sub
movsl
pop
xchg
and
xor
inc
cld
aaa
add
fs
fwait
lods
push
and
inc
in
sbb
mov
bound
mov
andb
sbb
lcall
icebp
fisubl
xor
xor
sbb
mov
daa
xor
andl
xlat
xchg
in
stos
mov
popf
lcall
pop
jge
nop
enter
rcl
fst
inc
subb
fdivrs
xchg
xchg
dec
jo
jg
xchg
bound
out
inc
mov
jg
test
cs
mov
push
jmp
jb
pop
pop
insb
in
hlt
xchg
int3
cs
or
adcb
sub
leave
push
outsl
leave
adc
pop
cmp
push
je
jae
mov
cmpsb
incb
in
or
and
daa
ljmp
imul
push
or
popl
movsb
and
inc
mov
mov
mov
pop
out
int
inc
inc
and
les
sbb
inc
adc
mov
in
push
jge
push
mov
lahf
xacquire
aam
inc
push
inc
pop
jne
test
rol
xor
jbe
imul
in
or
xor
jg
and
pop
mov
cmp
nop
dec
mov
push
fsubs
mov
test
mov
mov
add
jmp
test
pushf
fdivrs
push
pop
lea
jnp
das
mov
jle
cmpsl
dec
or
sti
sub
pop
jne
push
inc
lret
clc
fs
xchg
sbb
mov
lcall
jbe
mov
int3
aas
push
loopne
push
push
adc
push
pushl
popf
mov
adc
imul
xor
bound
shrl
cmp
dec
xchg
dec
call
enter
mov
or
pop
scas
mov
fisubrl
fistpl
insl
jae
daa
push
dec
inc
cs
insl
pop
je
hlt
add
cmp
sarb
xor
and
sub
rcll
push
test
add
incl
adc
push
jnp
in
insl
fucomip
adc
push
push
mov
push
call
imul
push
pop
fdivrl
jle
lds
or
pop
lcall
pusha
popa
xor
aas
in
xchg
pop
sahf
dec
dec
sbbl
popa
pop
cmc
push
pop
jnp
inc
or
std
and
fwait
add
insb
cmp
sbb
pop
inc
pop
icebp
jnp
mov
shl
xchg
sarl
jb
pop
pusha
sbb
or
adc
scas
rcrb
push
jbe
xchg
popl
ljmp
stos
add
in
fldcw
aaa
fadd
xor
or
sbb
jno
imul
xchg
cmp
les
aaa
and
or
mov
pop
jmp
xchg
or
push
fmuls
fisttps
sbb
sub
lahf
out
cmp
xchg
cmc
push
enter
and
inc
sahf
push
pop
jno
xor
jle
mov
jae
mov
or
jg
int
pop
lcall
shrb
jne
adc
fidivrs
push
xchg
ja
jnp
add
out
xor
jecxz
mov
jge
xchg
in
inc
adc
mov
sarl
sbb
sbb
xlat
call
hlt
hlt
and
repnz
xor
loop
cs
das
jecxz
inc
mov
int3
mov
cmpsb
icebp
or
jns
mov
rclb
cs
jbe
xor
shlb
and
xchg
pop
jbe
mov
or
or
movsb
dec
sti
mov
add
cmp
into
cmp
cld
push
push
psrld
ret
xor
aam
imull
adc
push
imul
pop
notl
decl
rcll
xor
clc
fstps
cmp
sub
xchg
push
aas
add
lret
int
notb
daa
inc
out
dec
mov
ret
cmp
clc
mov
pop
sbb
loopne
divps
fsubr
pop
fiaddl
inc
xchg
jo
inc
jmp
jmp
je
outsl
stc
mov
xlat
cmpsl
push
aaa
xchg
cs
loope
jns
fsubl
jecxz
test
mov
pop
sub
dec
dec
mov
cmp
andb
nop
jp
mov
fisubl
mov
pop
jmp
adc
pop
sbb
inc
lahf
push
pop
push
jns
lcall
stc
add
dec
jecxz
and
push
push
or
add
sub
shll
fdivp
jns
inc
addr16
in
ffree
in
push
nop
inc
in
dec
popa
movsl
ss
pop
mov
adc
adc
mov
inc
add
xchg
mov
mov
push
cld
mov
push
test
outsl
aaa
push
push
mov
loopne
test
xchg
negb
in
push
xor
fcmovnbe
daa
mov
mov
addr16
inc
push
adc
xchg
icebp
and
push
push
lods
imul
pop
data16
ret
loopne
push
test
add
adc
sub
insb
aam
mov
fwait
adc
call
in
mov
mov
adc
push
ficoms
imul
lcall
jae
daa
test
aam
daa
insb
and
pop
jmp
pop
pusha
outsl
icebp
or
outsl
jae
inc
arpl
cld
fdivp
push
repz
scas
faddl
pop
mov
xor
mov
mov
test
aam
stos
shl
pop
imul
jb
bound
popa
stos
cmp
push
outsb
sbb
xchg
mov
xlat
roll
inc
push
inc
add
sub
in
rclb
xchg
jg
sbb
insl
xchg
xchg
push
mov
or
and
rcl
xorl
sub
gs
aas
subb
jmp
das
adc
push
sbb
fcomps
xchg
xchg
xchg
fistps
sti
xchg
fsubrl
and
cmp
push
mov
std
mov
scas
out
pop
inc
in
or
mov
aam
out
movsb
and
mov
inc
cmp
xor
imul
mov
out
mov
ljmp
imul
xchg
push
or
jmp
movsb
xchg
xchg
mov
cmp
jb
lock
pop
mov
xchg
dec
in
fxch
pop
inc
stc
ljmp
jo
mov
xchg
push
or
scas
xor
mov
mov
test
cmpsb
in
dec
push
and
and
add
add
add
cmp
sbb
jb
andb
test
xchg
push
adc
cmpsb
ds
pop
push
pop
dec
add
mov
test
dec
ret
aad
mov
dec
sbb
xchg
mov
dec
mov
mulb
out
or
mov
xchg
je
les
mov
jle
cld
inc
mov
adc
push
mov
lret
pop
or
int
add
mov
and
push
sbb
mov
dec
fidivs
in
lods
xchg
or
out
mov
cmpsl
sub
or
jns
in
dec
inc
call
add
push
push
testl
movsb
jae
xchg
insl
repz
pop
add
imul
loopne
fisttpll
or
idivb
mov
or
je
out
and
and
xchg
sub
mov
cmc
mov
movsl
inc
leave
lret
add
sbb
and
dec
jg
movsl
xor
cmc
jae
stos
add
cmpsb
je
jno
sub
out
jmp
pop
jae
cmp
dec
cmp
xchg
cmpsb
decb
mov
test
cmp
lret
push
lret
mov
call
inc
cmp
loope
mov
xor
call
in
push
js
inc
mull
call
mov
xchg
add
ret
sub
sbb
xchg
hlt
jne
cmp
cli
fwait
sbb
in
dec
cmc
out
stc
lret
in
jecxz
data16
xor
xchg
mov
enter
add
insb
push
fidivs
sub
fs
nop
dec
push
push
movsl
dec
jb
inc
and
test
push
orl
inc
xor
push
lods
imull
push
std
fistpll
xchg
pop
arpl
mov
jmp
sbbl
mov
je
push
leave
testl
push
push
adc
jbe
push
jae
adc
push
add
add
lret
aam
idivl
das
dec
mov
ds
ret
xor
push
int
dec
mov
pop
fisttpl
mov
jle
cwtl
xor
daa
xor
jno
mov
stc
fcmovb
mov
xor
jp
cmp
pop
xor
int
fwait
ljmp
out
or
sti
hlt
test
fildl
fwait
push
movl
or
jne
jne
out
xor
mov
adc
lahf
adc
gs
pop
adc
xchg
xchg
add
into
pop
pop
cld
xor
loop
gs
jno
xchg
lahf
ds
xchg
sub
xchg
iret
repz
pop
cwtl
cltd
and
in
xor
or
mov
inc
out
and
sarb
and
and
mov
or
leave
inc
jne
add
std
mov
loope
jno
les
mov
lahf
cmovle
cmp
insl
shl
packuswb
mov
cmpsl
loop
rcll
push
cmp
push
mov
jnp
mov
clc
jmp
adc
rorb
and
std
dec
xor
inc
inc
pop
jo
mov
push
dec
adc
sub
fs
cmp
mov
push
movsl
jp
xor
out
cld
jg
gs
jecxz
mov
adc
pop
push
xor
adc
test
call
and
mov
mov
ret
dec
mov
outsb
icebp
fcompl
stc
mov
cmpsl
imul
divl
mov
test
pop
lcall
movsl
roll
push
xor
dec
add
stc
add
and
sub
adcb
inc
sbb
mov
aad
enter
add
push
cmc
xor
push
or
adc
add
inc
pop
fcmovbe
jae
cmp
inc
sbb
bound
ja
das
scas
push
lock
xchg
subl
cmp
mov
popf
into
je
or
adc
ret
ljmp
mov
cmp
sub
push
xchg
jno
sub
jb
mov
xor
or
lds
arpl
xchg
pop
inc
and
in
and
fdivrs
mov
jmp
pop
int
ss
std
push
sbb
pushf
push
movsl
bound
jecxz
mov
add
movsb
ror
std
frstor
jp
sbb
dec
sti
jecxz
stos
add
iret
leave
cs
inc
jns
aad
incl
mov
pushf
jne
fdivs
sbb
adc
sbb
rcll
pusha
ds
jno
push
mov
addr16
into
std
adc
movsb
ds
mov
pusha
xor
int3
jmp
ret
insb
negl
sub
dec
stos
scas
repz
in
dec
xchg
int3
or
stc
pusha
sti
leave
mov
xor
xor
test
stc
pop
aad
mov
lahf
aad
lcall
jge
jl
setno
imul
lret
xor
mov
int
std
and
pusha
lods
sbb
cmpsl
dec
add
jle
xlat
repz
or
lea
mov
pusha
imul
push
pop
jl,pn
push
rclb
hlt
inc
mov
cwtl
int3
cmp
and
jecxz
inc
fcomps
addr16
popa
aam
insb
scas
clc
sub
xlat
loope
inc
push
cld
jo
jle
mov
test
or
repnz
js
inc
cmp
jnp
sub
adc
mov
mov
mov
cmc
outsb
cmp
inc
cli
imul
dec
in
loope
shlb
pop
pop
mov
pop
sub
aad
clc
push
adc
or
test
bound
xor
fisttpl
cmc
ds
adc
cmpsl
fadd
mov
or
mov
es
cmp
les
mov
hlt
ret
cwtl
push
inc
rcll
cs
mov
data16
out
push
push
inc
pop
pop
syscall
idivb
pusha
in
fucomip
mov
out
stc
imul
arpl
shr
bnd
dec
ss
dec
mov
adc
cmp
and
int
lods
in
jecxz
cmp
sbb
adc
ja
ds
les
fistpll
inc
adc
xchg
cltd
aaa
or
push
mov
fsubrs
add
gs
sahf
lahf
sbb
push
mov
pop
scas
mov
xchg
lret
sbb
cmp
add
lods
inc
addb
popa
pop
jp
jne
pusha
pusha
fisttps
lods
and
adc
out
mov
adc
fisubrl
xor
aam
cmc
repnz
xchg
mov
adc
hlt
jmp
sub
mov
pusha
icebp
je
dec
out
cmp
hlt
adc
or
adc
push
outsl
out
out
push
jmp
pop
sti
int3
jne
pop
push
xchg
out
jne
test
sub
push
and
and
mov
ja
push
outsb
rclb
bnd
xchg
jne
add
xchg
jbe
add
out
mov
add
xchg
push
insb
push
scas
xchg
mov
int
dec
test
fstl
cmpl
fidivl
cmp
add
xor
decl
cld
sbbb
dec
inc
mov
xor
or
xchg
xchg
lods
popa
sbbl
sbb
pop
ret
lock
cmpl
mov
cmpsl
and
loope
sbb
push
ret
mulb
cmovo
arpl
mov
dec
aad
cltd
in
pop
sti
sub
and
and
test
leave
xchg
subl
mov
sti
aam
adc
scas
inc
add
sti
mov
sbb
inc
loopne
int
dec
jb
pop
sub
push
rcrb
or
inc
pop
leave
mov
in
jmp
das
iret
lea
mov
popf
sbbb
and
pushf
push
push
cmp
jl
into
jnp
dec
add
push
pop
rcrb
scas
andl
dec
mov
sti
or
push
sbb
clc
inc
mov
or
jae
hlt
loop
out
cmp
loope
adc
sbb
enter
jo
sub
daa
cmp
adc
and
and
fcomip
xchg
xlat
sub
fcmovnbe
cld
outsb
scas
push
out
jno
ja
adc
or
dec
dec
popf
addr16
jbe
xor
repz
sbb
mov
movsl
push
hlt
popa
pop
push
test
jo
mov
push
incb
xchg
push
fsubr
stos
mov
or
int
sbb
xchg
xchg
andl
pop
xor
loopne
cmp
xchg
inc
jg
lea
out
int
add
mov
cmpsb
xlat
out
push
stc
mov
in
jne
dec
aaa
fldcw
clc
ds
jmp
sub
cwtl
mov
mov
mov
push
inc
lea
xchg
loopne
mov
jnp
std
mov
jp
xchg
or
mov
mov
mov
jg
or
mov
jmp
pushf
pop
notl
ljmp
jno
xlat
inc
fsts
xchg
hlt
dec
sbb
xor
loopne
mov
adc
out
add
jp
in
jl
lret
or
cltd
push
addb
cltd
xchg
cmp
int
jb
scas
and
out
mov
lds
mov
mov
xlat
mov
test
adc
aad
std
jne
dec
pop
jp
aam
mov
arpl
lds
add
shl
inc
movsl
rorb
xchg
aas
stos
std
dec
daa
pusha
aam
fdivr
sarb
pslld
inc
xor
lds
daa
sarb
andb
mov
mov
imul
jecxz
mov
testb
adc
mov
sub
xor
sbb
dec
lret
xor
dec
mov
lds
fwait
das
fisttpll
mov
pop
push
inc
xchg
out
jae
lock
in
jg
dec
cmp
popf
mov
pusha
test
outsb
push
dec
push
and
das
push
hlt
or
sahf
mov
hlt
lea
and
pusha
jno
pop
cltd
mov
adcb
add
sub
mov
mov
lods
nop
and
icebp
stc
idivl
lods
xor
stos
hlt
jne
mov
mov
mov
add
mov
std
bound
or
loope
arpl
mov
sti
xlat
insl
pop
push
and
insl
mov
jle,pt
test
xchg
jno
xor
add
push
flds
mov
test
pop
xchg
inc
pop
call
xchg
movsb
stc
push
push
sahf
add
dec
and
push
sti
ljmp
cmp
jns
fiaddl
mov
jg
icebp
popa
les
or
ret
mov
adc
stos
mov
dec
xchg
adc
negb
int
jbe
cltd
adcb
mov
mov
push
lret
mov
popa
dec
insb
mov
dec
or
and
sbb
cli
push
xor
cltd
pop
lahf
stc
jbe
xchg
cmc
cmp
xchg
jg
aad
nop
inc
pop
mov
pop
adc
jne
repnz
fwait
push
or
inc
mov
inc
shlb
cmp
mov
ja
inc
or
xor
leave
or
xchg
jae
daa
xchg
mov
mov
sbb
jno
inc
mov
enter
imul
cmpsb
arpl
outsb
sbb
out
les
jmp
fcoms
adc
push
push
or
mov
out
pop
jno
sbb
mov
inc
lea
sbb
stos
gs
push
shrb
push
or
ret
lahf
jmp
sahf
arpl
mov
mov
es
repz
mov
jg
add
mov
sub
pop
int
fdivr
jns
outsb
xchg
jbe
mov
les
jp
leave
mov
inc
mov
addl
mov
and
inc
mov
pop
stos
aad
je
fs
adc
pusha
xchg
lcall
push
sub
scas
mov
test
aad
mov
test
fldl
mov
loop
jbe
insb
pop
loop
and
inc
fisubl
or
nop
cwtl
pushf
pop
insb
int3
test
shr
test
push
pop
jp
sahf
dec
icebp
adc
push
adc
mov
or
lock
mov
push
mov
pushf
mov
repnz
or
sub
pushf
lds
pushf
lret
sub
ja
xor
and
ss
add
ret
cmc
mov
lods
sbb
mov
and
adc
mov
jae
lret
out
scas
dec
xor
and
pop
scas
enter
aam
lahf
jo
xor
adc
lret
xchg
cmp
inc
adc
cmpsb
mov
xchg
insl
popf
sti
xor
push
ja
jne
enter
cli
push
aam
arpl
ds
add
jb
out
sbb
imul
fimull
mov
div
pop
pop
push
inc
enter
pop
mov
sub
pushf
push
scas
and
into
push
mov
cwtl
jecxz
adc
xchg
popf
testb
ror
xchg
inc
sahf
and
jb
add
scas
push
jge
aad
push
lea
sbb
in
inc
or
je
aam
xor
xchg
jp
pop
ljmp
lcall
and
and
cwtl
sub
out
and
stos
jle
rcrb
sbb
lds
lcall
test
aam
int
xlat
add
jno
rcrl
jb
add
test
shlb
sbb
mov
cmovp
adc
inc
adc
and
ja
mov
ss
push
mov
scas
xor
adc
imul
ljmp
out
cwtl
test
fwait
mov
fldt
aaa
stos
xchg
scas
loopne
into
dec
in
mov
into
insb
jmp
push
add
push
lock
fs
movsl
lock
repnz
sarb
sub
fldl
test
in
or
jge
add
mov
std
lea
dec
jbe
vmulsd
push
pop
into
sbb
pop
adc
ss
sub
sub
add
mov
push
scas
nop
dec
cmp
pop
leave
dec
cltd
data16
aas
leave
push
cs
test
xchg
lcall
out
mov
pop
addl
shlb
lods
in
dec
lock
je
test
mov
insb
push
insb
sub
push
pop
scas
push
sub
inc
cmpb
jmp
mov
adc
nop
sarb
mov
imul
mov
cmpsl
jg
pop
and
xor
xchg
sahf
inc
mov
mov
repnz
jne
popf
push
sbb
or
sbb
in
std
inc
lea
mov
and
loopw
ds
cwtl
jno
dec
cwtl
scas
mov
inc
jmp
test
or
xlat
sub
in
sahf
mov
out
xchg
xchg
jp
mov
int3
xchg
sbb
jecxz
pop
mov
mov
xor
daa
cmp
popf
xor
insb
hlt
lods
aas
mov
cmpl
int3
sub
and
imul
inc
push
inc
cmp
pusha
push
pop
pusha
icebp
insl
sbb
pop
insl
std
dec
incb
and
mov
mov
inc
and
bound
in
aam
push
mov
imul
out
in
test
les
fwait
popf
pop
in
sub
hlt
ja
es
repnz
pop
xor
mov
sbb
sub
out
sbb
andl
leave
xchg
test
push
pop
dec
cmc
cmpsl
mov
inc
mov
fadd
push
cmp
jp
xor
mov
adcl
add
test
inc
dec
loop
dec
add
push
sub
sub
pop
push
iret
sahf
dec
or
pushf
or
sbb
push
pop
in
movsl
dec
outsl
imul
jnp
iret
stc
fldl
das
jp
test
sbb
sbb
xor
or
push
jp
lea
lods
int3
ljmp
push
dec
mov
mov
lods
ja
and
dec
lea
je
sarl
push
or
inc
or
outsl
fistpll
xor
and
mov
testb
jb
sub
rolb
test
cmc
cmp
add
aam
add
and
int
dec
or
xlat
pop
nop
enter
shll
addl
ret
and
sub
ljmp
xor
lahf
mov
sahf
flds
or
mov
adc
lods
mulb
fisubrs
inc
cmp
mov
test
sub
add
cmp
cmp
or
cmp
push
sbb
sub
lret
mov
scas
push
out
fwait
cmp
mov
sbb
aam
add
lock
push
pop
inc
mov
cmp
sub
sahf
loopne
and
outsb
repz
leave
and
sub
pop
out
push
push
mov
and
dec
mov
arpl
insb
imul
and
push
jno
xorl
adc
mov
and
xchg
fisttpl
mov
in
and
sub
push
pop
mov
mov
jecxz
repnz
cmc
aad
sbb
or
fsubl
mov
mov
xchg
int
lret
add
in
hlt
lcall
arpl
and
pop
mov
push
push
jns
add
mull
enter
out
das
jg
pushl
pop
jno
pop
cmp
gs
in
pop
and
out
xchg
mov
or
pop
adcl
push
lock
cltd
fwait
pop
cmpsl
mov
push
pop
push
out
cld
inc
cltd
xchg
jae
inc
adc
push
mov
sti
scas
call
xlat
and
sub
xchg
lcall
cmp
out
and
lcall
xor
dec
jns
rcll
hlt
mov
stos
sarb
mov
imul
xor
sbb
imul
cltd
hlt
lcall
xor
xor
push
or
push
inc
pushf
mov
mov
rcrb
orb
xor
inc
stos
lret
push
cmp
cmp
sub
pop
aam
add
sbb
add
lods
clc
jp
movsl
bound
or
dec
pop
lds
jb
test
outsb
pop
add
sub
xchg
sbb
xlat
push
test
in
dec
or
add
dec
mov
lds
jp
push
testl
xchg
outsl
pop
ljmp
sbb
shrl
loopne
mov
mov
cmp
mov
xchg
ljmp
sub
ljmp
es
lds
pop
testl
subl
pop
and
xor
adc
popa
dec
lret
sub
xchg
loopne
gs
or
test
and
jno
pop
push
fidivs
jns
popf
push
and
jb
sub
jno
js
xchg
cmpsl
adc
push
cmc
ret
bnd
push
push
mov
and
arpl
dec
es
inc
mov
jg
outsl
xor
mov
sbb
lods
inc
adc
sub
shlb
cmc
mov
pop
loopne
ja
mov
xorb
or
ja
and
mov
in
fisttpl
cmpsl
mov
sub
enter
in
push
imull
adc
pop
movsb
insl
test
mov
mov
mov
pop
dec
jbe
clc
sti
test
push
outsb
hlt
test
out
outsl
mov
push
mov
dec
pop
test
mov
mov
inc
adc
lret
xchg
mov
sbb
add
mov
js
aad
insb
jne
and
fwait
pushf
cltd
fstpl
mov
xchg
xchg
inc
dec
leave
xchg
aad
dec
arpl
pop
arpl
push
xchg
mov
ret
push
push
insl
or
or
or
out
pop
out
lock
pop
push
es
mov
push
add
push
cld
shll
xor
ret
ja
repnz
fstp
fwait
stc
bound
gs
push
ret
sar
dec
xor
push
iret
inc
adc
inc
mov
mov
sbb
adc
or
cmp
or
fstpl
jg
add
lods
mov
daa
push
pop
mov
mov
push
movsl
lods
les
jne
push
dec
lahf
mov
cld
or
rclw
or
sahf
jge
xchg
movb
pusha
push
mov
ds
push
adc
lcall
outsb
flds
scas
test
jecxz
add
jo
js
stos
push
ja
aas
xor
pop
jecxz
bound
inc
mov
cmpsb
adc
cmpsb
leave
cmpsb
idiv
adc
movsl
fwait
pop
adc
scas
adc
sub
clc
xor
push
mov
cs
call
mov
push
mov
orb
add
out
or
add
shlb
sbb
js
cmp
pop
xchg
add
xchg
subl
clc
out
daa
push
leave
mov
xchg
fsubrs
cmp
cmpsb
mov
mov
mov
xchg
lret
xchg
mov
faddl
in
fists
push
scas
xchg
jbe
mov
fstpt
jge
mov
mov
enter
popf
outsl
add
pushf
cmp
mov
cmp
shl
jp
adc
enter
add
fwait
pop
aam
call
or
mov
mov
sub
aaa
je
loop
aad
shll
and
adc
mov
add
popf
pop
mov
jmp
ss
sbb
aad
call
das
push
jge
sbbl
adc
inc
jb
dec
inc
mov
push
jns
cmp
sub
xchg
int
nop
mov
pop
imul
lcall
dec
pop
outsb
out
push
cmp
fldl
pop
pop
aad
and
cmp
stos
inc
jmp
bts
sub
cmp
stos
adc
imulb
or
cmpsb
lods
lods
mov
sbb
lret
sub
pop
in
mov
shlb
ret
out
xor
outsb
mul
mov
lds
mov
push
daa
xor
sbb
jb
jp
xchg
push
pop
push
hlt
xor
fistl
cmp
xor
jbe
les
filds
mov
mov
add
stos
lods
repnz
lret
iret
repz
push
lret
dec
mov
loopne
out
nop
sub
lods
inc
pop
int
mov
sahf
add
mov
xor
outsb
mov
aas
repnz
push
movsb
aam
stos
cmpsb
adc
call
push
scas
fs
mov
dec
lret
pop
lcall
fidivl
roll
test
aad
jle
sahf
xchg
jge
pop
xchg
sbb
or
xchg
mov
lahf
and
add
fmul
test
or
fstpl
inc
iret
pop
lea
sarl
js
inc
sbb
xchg
cld
js
fucomip
inc
pop
xchg
xor
and
aad
test
jg
test
and
into
or
insl
cmp
pop
jo
enter
fildl
enter
mov
push
sti
movsl
into
mov
stos
mov
sub
mulb
push
inc
in
int
inc
ds
loopne
scas
lea
lret
lods
xchg
int3
in
aaa
jge
jmp
hlt
or
out
mov
movsb
inc
sub
f2xm1
pop
or
cmc
faddp
insb
int3
mov
and
dec
int3
jnp
add
or
popa
fidivrl
inc
push
mov
les
insb
pop
dec
pop
int3
mov
mov
insl
test
pop
lds
fimuls
add
sbb
mov
iret
lcall
std
pop
jmp
inc
jns
pop
scas
sbb
ret
aas
sti
cltd
xlat
stos
pusha
pop
push
push
sbb
icebp
sub
jl
fcomi
or
sbb
xchg
adc
mov
rorl
pop
andb
pop
test
cltd
push
outsb
cmp
out
ja
adc
cmp
mov
scas
sbb
nop
pop
fucom
xchg
std
bound
test
dec
jle
jnp
lcall
push
add
ret
fmull
xchg
lret
push
jp
mov
andl
mov
dec
fisttpll
push
push
mov
popa
ffree
sbb
lds
cmp
add
mov
sbb
idivl
mov
iret
and
aas
jae
pop
dec
cmp
mov
rolb
cwtl
cmp
jmp
insb
inc
pusha
cld
push
xor
mov
pop
loop
in
mov
sub
or
inc
jecxz
mov
inc
jb
ja
andb
push
repz
or
jp
sub
bndstx
out
mov
pop
pushf
hlt
pop
daa
test
test
test
jo
in
cmp
add
or
stos
jg
dec
lcall
jg
repnz
loopne
mov
xor
out
sbb
fnstsw
fwait
xchg
sbb
push
xchg
pop
adc
jno
call
jno
mov
pop
out
push
pop
xchg
pop
int3
mov
rclb
mov
repz
dec
xchg
movsl
or
lea
pop
and
push
jle
stos
mov
out
and
mov
les
add
push
sahf
std
dec
aas
mov
cltd
stos
icebp
in
cmpsb
cmp
sub
pusha
scas
xchg
gs
adc
inc
xor
cmpsl
rol
jb
xor
mov
dec
into
mov
dec
push
or
sbb
mull
lock
test
mov
sub
mov
xor
sub
dec
pop
repz
sub
movsl
pop
test
lret
aaa
mov
jnp
push
je
xchg
pop
arpl
jg
sti
cmp
adc
cld
mov
dec
and
xor
cli
push
xchg
nop
mov
std
inc
dec
mov
das
mov
sbb
ret
sub
inc
jnp
cmp
xchg
and
jmp
iret
mov
clc
cli
sti
daa
dec
iret
adc
in
orb
lahf
sbb
je
push
daa
lds
lods
test
daa
or
pop
or
es
addr16
push
push
cmpsb
jl
xchg
shr
cmpl
push
out
lahf
scas
jb
hlt
adc
dec
inc
jae
push
mov
fucomi
sbb
xor
fidivrs
push
js
scas
rcrl
push
add
cmpsb
fsubp
call
fs
fidivs
out
mov
sub
rcll
push
jp
fsts
pop
test
cmpsb
fcoml
lods
push
push
cmp
jp
mov
sub
in
das
mov
mov
jae
mov
into
push
sub
sti
rcrl
push
loope
mov
or
dec
std
inc
xchg
mov
push
pop
cmp
push
fisubrs
es
push
mull
shlb
mov
add
daa
inc
pop
pop
push
jo
fwait
xchg
rorl
int
aaa
adc
rorb
in
clc
mov
pop
and
insl
imul
xor
sbb
adc
pop
out
fildll
out
sub
mov
nop
cmp
cmp
ret
mov
push
add
inc
rolb
dec
repnz
std
jg
dec
push
lret
orb
sbbl
xchg
mov
shlb
sbb
mov
pushf
adc
ds
sti
leave
loop
in
xchg
dec
jmp
sbb
mov
mov
push
lcall
xor
lock
sti
mov
pop
jnp
dec
cmp
adc
jns
add
imul
stos
mov
push
and
fnstsw
imul
outsl
pop
rcl
mov
cs
adc
fcmovnb
mov
jl
push
fld
xchg
outsl
sbb
sbb
xor
cmp
out
rolb
xor
cmp
sahf
lods
cmpsb
or
icebp
fs
sub
js
push
ret
pushf
jns
fnsetpm(287
das
test
lcall
or
ret
sbb
lcall
cld
inc
outsl
push
test
inc
jecxz
fnsave
pop
sbb
outsb
jmp
push
popl
xchg
cmp
dec
sub
lods
sub
test
test
add
mov
push
cli
push
xchg
mov
xchg
push
xchg
mov
dec
mov
mov
fsubrl
cltd
inc
out
ljmp
out
dec
adc
jecxz
pop
and
cmp
popf
jae
sbbl
ret
imul
mov
pop
enter
ljmp
js
rcll
cmp
sarb
or
push
insl
lcall
ss
fiadds
xchg
mov
std
aas
int
test
pop
add
jns
das
inc
mov
bound
outsl
stos
clc
mov
in
pop
lock
aaa
mov
add
mov
jbe
or
dec
mov
cld
out
dec
testb
mov
and
adc
inc
mov
pushf
out
test
enter
mov
xor
pop
in
jmp
out
xor
dec
sub
xor
out
fistpl
scas
jae
decl
xor
in
lcall
pop
clc
pop
adc
in
imul
cs
add
or
cwtl
scas
or
mov
fistps
outsl
or
mov
xor
sbb
mov
mov
daa
inc
mov
jle
push
mov
pushf
dec
cmpsb
pop
push
push
inc
sbb
mov
push
jbe
xor
xlat
sub
jnp,pt
call
pop
and
aaa
test
stos
xchg
mov
mov
inc
psubsb
mov
fs
test
je
loop
xor
mov
cld
jmp
xor
dec
imul
mov
subl
vmovss
inc
mov
inc
xchg
cmp
mov
adc
repz
negb
xor
fwait
loope
fabs
iret
test
adc
adc
jb
push
enter
push
sub
in
pop
add
pop
repz
xchg
jnp
cmp
sbb
outsl
push
xor
leave
sbb
dec
sub
test
inc
sti
pop
insl
adc
sbb
out
sub
stos
push
inc
mov
aad
nop
sub
sub
push
sub
jbe
lcall
xor
xchg
and
jge
rcrl
sahf
cwtl
es
pop
lock
xchg
pop
mov
jle
arpl
data16
test
addr16
stos
jns
popf
xchg
cwtl
testb
cmp
inc
imul
jl
push
inc
xchg
and
aaa
enter
mov
cmp
and
fs
cmpsl
pop
sub
out
test
jb
enter
add
jo
lods
test
rorl
mov
mov
das
adc
pop
repz
mov
sahf
in
scas
imul
in
enter
daa
arpl
and
fnstcw
cli
insb
lock
in
inc
mov
repz
jl
xor
mov
cld
cli
adc
pushf
xchg
cmpsb
fisubrl
adc
xorl
test
mov
jo
push
popf
fs
sbb
xlat
stos
xchg
push
inc
iret
xchg
adc
xchg
cmpsl
push
iret
and
in
imul
mov
and
xchg
in
ret
das
ret
push
sub
jge
sub
inc
pushf
in
loopne
jno
and
mov
dec
fucom
and
mov
shlb
mov
adc
xorb
xchg
push
lret
scas
push
scas
cmpsl
mov
pop
cwtl
and
pop
mov
and
repnz
jb
outsb
je
push
sub
mov
add
es
sarl
dec
fmull
inc
jbe
rorl
pop
int3
ss
xlat
dec
mov
jle
push
cld
rclb
xor
jecxz
fildll
mov
cmp
jecxz
data16
push
frstor
lcall
dec
xchg
or
adc
sub
lods
shrl
shlb
lcall
xor
sbb
mov
nop
push
dec
rolb
push
popa
push
enter
popa
jl
cmpsb
sbb
lods
xchg
stc
push
push
imul
fucomip
shll
insl
pop
ja
inc
jb
xchg
shlb
adc
cwtl
or
fistps
in
insl
cmpsb
into
or
mov
jp
movsl
pop
shll
or
outsl
imul
inc
xor
jecxz
pop
aam
mov
movb
pushf
xchg
xadd
xchg
and
dec
adc
bound
call
test
rorb
xor
fnstsw
je
jp
pop
mov
sub
jle
and
std
stc
sub
add
mov
xchg
mov
out
pushf
lcall
js
adc
xchg
lret
mov
jb
xchg
xchg
fyl2x
fwait
je
jns
adc
add
hlt
push
dec
dec
adc
in
test
adc
mov
addr16
xor
xchg
and
adc
jp
test
fwait
es
and
push
daa
mov
sarb
inc
push
lods
pop
rorl
or
into
xchg
mov
xchg
jl
jne
cmp
mov
pusha
mov
cmpsb
stc
sahf
cmp
daa
add
cmp
and
inc
ficoms
ret
and
sbb
and
push
dec
cmp
sbb
mov
dec
fsubrs
fsubr
push
mov
insl
mov
ds
push
pop
test
jmp
rolb
insb
mov
cvttps2pi
mov
push
mov
cltd
lods
rolb
mov
bound
mov
jle
adc
xchg
pop
data16
lret
adc
stc
sub
jae
and
sbb
daa
hlt
out
mov
data16
xchg
push
es
dec
cmpsb
mov
mov
jae
shr
insb
or
xchg
sub
push
xchg
inc
and
pop
inc
ss
fcomps
xchg
int3
xor
repz
bound
addr16
fistpl
add
pop
adc
cmp
pop
jge
popf
test
mov
in
movsl
xchg
push
xchg
movsl
bound
repnz
cmp
pop
popa
in
aaa
jmp
push
aad
test
push
xchg
sbb
repnz
cmpsl
jmp
push
faddl
bound
add
insl
cmp
cmp
stc
or
je
dec
or
cli
lods
or
mov
xchg
in
lahf
mov
inc
push
push
mov
mov
lods
inc
sbb
mov
pushf
push
jb
mov
cmpsb
jle
mov
mov
imul
imul
jecxz
paddb
cmp
cmp
cmp
enter
adc
data16
cmp
adc
dec
inc
or
sub
ret
push
out
add
inc
xor
repz
insl
push
mov
lret
cmp
push
lds
andl
jb
or
les
and
push
cmp
iret
aaa
push
jl
mov
jb
rorb
test
cltd
and
fsubrl
or
lea
mov
lret
pop
jne
mov
negl
sub
testb
jle
sbb
mov
dec
xchg
pop
add
xchg
or
hlt
jmp
shll
data16
push
dec
xchg
imul
mov
sahf
xchg
push
addr16
sahf
test
xchg
and
dec
and
push
sarl
push
stos
jge
push
push
ljmp
clc
lret
sahf
mov
jecxz
sbb
xchg
aam
sbb
dec
push
test
inc
pop
fs
sbb
clc
imul
jnp
and
pop
test
jnp
mov
fsubr
cwtl
jp
xchg
out
and
in
and
pusha
cmp
sub
mov
and
pop
mov
mov
mov
or
jge
pushf
xor
loopne
pop
dec
dec
sbb
leave
daa
cmpl
and
jb
out
push
jb
in
cli
ret
in
push
test
cltd
into
jns
pop
andb
subl
jns
lahf
jmp
js
dec
out
popa
pop
fdivrl
xchg
jbe
lret
pop
movl
xchg
adc
das
cmp
lea
jno
and
adc
inc
bound
xchg
mov
test
mov
mov
mov
xchg
cmpsl
aad
cmp
hlt
cmp
xor
mov
or
inc
add
scas
into
fsts
ficoml
push
push
xchg
mov
inc
inc
inc
mov
push
lds
addl
jmp
sub
es
leave
jmp
mov
adc
imul
mov
dec
ljmp
cmp
bound
xor
or
push
lods
mov
pop
xor
and
pop
movsl
stc
out
add
xor
xor
xchg
mov
loopne
pop
mov
xor
and
int3
test
inc
add
push
and
pop
push
ret
mov
gs
mov
push
mov
xchg
sahf
out
pop
push
push
xlat
rorl
mov
push
popf
pushw
jns
xor
fcomi
loopne
mov
andl
xchg
outsb
sahf
pop
stc
pop
xor
sbb
xor
xorb
iret
sub
cld
inc
mov
adc
stos
std
or
cmp
pop
xlat
fistpl
dec
popa
cltd
fsubl
scas
std
mov
ljmp
sub
ret
outsl
mov
cmp
scas
mov
hlt
jg
negb
push
lahf
dec
and
xchg
push
sbb
mov
sbb
insb
cltd
push
cmp
lcall
int3
cli
lret
fdivrs
adc
jmp
mov
cli
mov
aam
mov
mov
aaa
push
pop
fmuls
and
sti
mov
aaa
mov
cwtl
je
les
jl
sbb
rolb
dec
push
mov
sarl
cmp
cmpsb
icebp
dec
test
mov
xchg
mov
adc
lods
or
aad
jne
mov
negl
lcall
adc
adc
lcall
test
mov
stos
aaa
mov
gs
push
cltd
shlb
pop
cld
shlb
stos
ds
sub
mov
xchg
mov
or
sahf
lock
rsqrtps
ljmp
xchg
into
sahf
add
repnz
add
dec
push
not
push
in
in
or
jae
pop
xor
mov
adc
pop
ret
into
call
jae
arpl
sbb
mov
aaa
xchg
xchg
mov
push
and
cs
sar
stc
jge
mov
or
xchg
test
arpl
fadd
xchg
lahf
in
popa
enter
push
addr16
sub
pop
add
and
in
lret
pop
sbb
cli
push
add
insb
jp
or
fistps
add
pusha
xor
jae
dec
mov
aaa
cs
cs
sub
jle
shlb
popf
sbb
mov
sbb
icebp
inc
mov
inc
adc
fwait
push
pop
in
xlat
pop
out
mull
sarl
cmc
daa
adc
adc
loopne
int
push
daa
mov
lock
inc
pop
mov
mov
sub
dec
lds
push
push
loope
decl
jae
das
icebp
aaa
lods
rorl
jecxz
icebp
or
das
je
movsl
ljmp
xchg
rcrl
xchg
cmp
out
leave
hlt
pop
mov
repnz
stc
into
es
push
dec
mov
adc
xchg
lock
mov
xor
inc
mov
test
pusha
jg
test
add
insb
inc
lahf
dec
js
jo
stos
movsl
add
jae
test
inc
jp
rorb
mov
fbld
mov
scas
sbb
mov
sbb
cli
arpl
out
push
cmp
push
cmp
pop
ret
stos
cltd
clc
ljmp
shll
lcall
scas
sbb
sbb
jns
das
inc
jmp
rcpps
je
fcompl
add
fcoml
mov
dec
rolb
dec
pop
divb
cmp
mov
adc
ss
xchg
jl
push
gs
lock
ret
and
lahf
cmpsl
jge
das
sbb
sbb
xor
jl
dec
in
pusha
repnz
jo
inc
mov
xchg
mov
dec
imul
lds
daa
arpl
cwtl
and
and
mov
in
push
xor
ficoms
mov
ficoms
movsl
ret
int
pop
sbb
jnp
mov
test
arpl
xlat
jecxz
fistps
lret
ret
mov
sbb
push
mov
jecxz
mov
cmpsb
test
fistpl
xchg
loopne
xlat
add
fucomi
in
call
ret
fucomip
imul
add
sub
in
jae
pop
mov
repz
arpl
scas
mov
sub
pushf
mov
in
imul
out
ret
pop
push
ja
addl
inc
loop
popf
movups
sub
mov
or
jl
adc
mov
sbb
add
test
pop
lret
and
lds
and
xchg
in
pop
push
pop
mov
cmpsb
jp
rorl
cld
addr16
cmp
adc
shlb
sbb
imul
inc
stc
outsl
jne
and
bound
lcall
jmp
nop
adc
ja
push
rcrl
ret
out
hlt
jp
add
filds
movsb
mov
pop
push
push
fidivs
fimuls
lock
pop
int3
icebp
xadd
mov
xor
jns
xor
and
cmp
je
rolb
test
ret
fbld
fdivs
inc
cmp
pop
jbe
jns
push
rorl
movb
push
shll
or
jg
dec
popf
fwait
cmp
sub
adc
xchg
insb
inc
jo
inc
das
inc
push
mov
in
cmp
fistl
jne
ret
cwtl
inc
les
and
stos
xor
xchg
jo
xlat
fs
cmp
cmc
in
mov
mov
pop
xor
lcall
arpl
lret
shll
xchg
add
das
jmp
ret
mov
cmpsl
imul
lods
scas
mov
cmc
lahf
test
push
stc
adc
xor
scas
lock
filds
pop
dec
or
imul
xor
bound
xor
movaps
xor
or
mov
in
jp
bound
add
out
mov
ja
data16
sbb
out
lods
sub
inc
mov
es
lds
jmp
rcrb
mov
jo
mov
scas
mov
fsubrs
jg
inc
mov
in
xchg
fnstcw
ret
pop
movsb
adc
jp
mull
dec
jbe
mov
sbbb
jnp
sub
ret
in
dec
mov
dec
mov
jl
sbb
popf
jl
clc
cltd
sub
add
loop
lods
cmpsb
add
imul
loopne
xchg
les
add
cmpsl
xor
mov
mov
mov
call
and
xor
negl
sbb
adc
sbb
and
imul
pop
sbb
cmc
faddl
mov
shrd
test
std
pop
rorb
cmp
lea
sub
dec
xchg
jb
and
cltd
mov
in
mov
xchg
mov
cs
fwait
test
jge
jno
push
int
cmp
shrb
addr16
push
sbb
loopne
cwtl
incl
ficomps
push
pop
xor
add
or
dec
in
push
rcll
cmp
jae
lock
in
imul
cs
mov
in
rorl
or
mov
sbb
rclb
stc
xchg
js
sub
imul
push
fdivs
loopne
shr
rolb
xchg
out
insb
jo
mov
arpl
lret
sub
dec
sbb
jl
mov
sub
subl
mov
and
cmpsl
scas
sbb
cmpsl
mov
test
icebp
insb
sbb
pop
xor
xchg
out
cmovne
in
push
jl
lea
out
aam
dec
cmpsb
test
jmp
negl
lods
xchg
inc
dec
xchg
ret
ljmp
xor
xor
into
mov
xor
mov
mov
roll
push
imul
dec
lahf
cld
sbb
jle
repnz
sub
out
and
or
enter
mov
ffree
jne
dec
add
xchg
lret
adc
push
dec
pop
xor
mov
jne
push
dec
mov
push
adc
nop
fnstsw
or
push
dec
and
mov
ret
adc
ljmp
pop
int
pop
push
stos
jle
sahf
orb
bound
xorb
nop
ret
or
xor
cmp
test
sbb
hlt
outsb
insl
scas
arpl
fnsave
aad
xor
dec
pop
push
jnp
push
sbb
in
inc
cmp
cmc
xorb
xor
push
movsb
jo
sbb
cld
xor
mov
mov
subb
repnz
add
xor
dec
mov
adc
and
sub
mov
mov
iret
jo
or
loop
in
popa
mov
jmp
pushl
sar
mov
not
in
xor
rorl
xor
add
add
sub
fldl
idivl
xchg
jae
loop
rcll
daa
cmp
push
lea
out
mov
fsubrp
popa
cs
mov
jbe
fwait
cltd
xor
stos
push
inc
sbb
pop
jmp
jge
sub
sub
xlat
pusha
and
cld
incb
in
dec
ss
mov
pop
out
clc
test
pushf
test
sub
aad
dec
cmp
ret
dec
ja
call
lods
and
add
les
sti
mov
lods
cli
adc
nop
loope
push
lods
rolb
push
outsl
in
cmp
pop
mov
pop
xchg
mov
lea
adc
mov
lock
fadd
xchg
sub
out
xlat
pop
sarb
insb
dec
xchg
and
jnp
adc
xchg
icebp
ficoml
test
mov
jle
xor
inc
jo
sub
mov
xor
out
roll
rcrb
jmp
pop
adc
inc
scas
mov
insb
and
mov
xor
pushf
sahf
jle
hlt
clc
dec
adc
bound
stos
test
mov
enter
inc
icebp
popa
dec
int3
neg
pop
and
ficoml
inc
cs
cltd
and
mov
lods
xchg
dec
push
test
rcr
test
mov
bound
arpl
mov
mov
les
sbb
mov
in
xchg
or
hlt
jnp
ljmp
or
jne
cmc
lahf
pop
sub
outsb
push
out
xchg
xor
mov
sbb
xchg
jno
mov
mov
ja
inc
or
dec
notb
loopne
xor
mov
cs
push
push
jmp
dec
adc
mov
repz
cs
cmp
inc
sbb
mov
pop
sub
and
loopne
int3
clc
pop
inc
inc
outsl
and
mov
jb
push
int
mov
cmpl
cmpsb
xor
mov
cld
mov
fstps
jp
jnp
rcl
sub
cmp
and
sbb
sahf
cli
mov
jge
jmp
xchg
aam
rolb
push
cltd
in
shlb
in
int
mov
outsb
sti
int
test
pop
loop
lahf
fstpt
pop
jl
mov
int
insb
mov
aad
cmp
mov
adc
xor
mov
mov
or
mov
jne
pop
insl
mov
dec
jae
pusha
inc
testb
mov
fsts
mov
add
dec
sbb
fwait
jb
icebp
jp
dec
movsl
shlb
fadds
out
dec
sahf
ja
dec
lock
out
dec
test
push
nop
mov
fcmovnbe
enter
cmpsl
ja
lret
dec
add
clc
sub
dec
and
jo
pop
dec
inc
pop
aas
mov
ljmp
sbb
mov
out
dec
jb
jl
cmp
xor
dec
mov
inc
dec
mov
dec
add
mov
push
into
shr
je
dec
in
inc
mov
movsl
jbe
fsubrp
icebp
inc
loopne
imul
inc
es
test
sub
mov
cli
or
xchg
jecxz
or
cmp
xchg
push
hlt
xchg
popfw
cmp
js
mov
iret
iret
jl
xlat
mov
lds
xor
icebp
arpl
rclb
push
add
mov
iret
mov
push
lea
cmp
mov
or
sub
lret
pop
fists
inc
stc
pusha
outsl
cwtl
xor
sub
mov
xchg
sub
inc
test
sbb
ret
mov
out
pushl
fcmovne
fstps
push
popf
sahf
lds
std
loopne
stos
pop
pop
fbstp
mov
xabort
mov
jmp
push
mov
cwtl
ljmp
out
out
dec
daa
inc
xor
jmp
js
xchg
rcr
xor
test
jl
into
push
adc
inc
dec
and
or
cmc
sbb
xchg
movsl
dec
out
sub
cmp
mov
dec
add
push
scas
inc
cltd
popf
scas
ds
mov
ljmp
adc
scas
push
and
push
rclb
mov
out
xor
or
repnz
fs
in
cmc
jae
mov
xchg
push
shrl
xchg
fcomip
mov
sub
and
in
in
rorb
sbb
sub
inc
pushf
push
adc
insb
mov
pop
xchg
test
pop
and
mov
cmp
mov
incl
xor
jmp
mov
cltd
xchg
leave
fisttpll
out
mov
mov
and
sbb
dec
je
jae
sub
push
push
push
cmp
cmpsl
dec
fcomps
scas
sbb
fcmovne
jle
jno
outsb
ret
pop
in
add
fildll
ds
add
and
je
fdivrs
daa
mov
mov
pop
jbe
das
dec
fstp
fs
xor
fmull
enterw
jns
mov
pusha
movsl
mov
rorl
icebp
inc
pop
lock
cmp
mov
bound
sbb
jg
mov
push
lock
popf
out
bound
jle
dec
pop
cltd
sbbb
neg
mov
cwtl
sub
mov
push
xchg
les
outsb
ss
movsl
loop
mov
cs
rcrb
mov
mov
ljmp
pop
flds
mov
cmp
inc
scas
rorb
inc
mov
lock
sub
rcrl
push
and
sub
xor
mov
jno
add
test
out
mov
mov
xchg
negb
shl
test
sbb
das
dec
xchg
movsl
addl
outsb
mov
inc
push
xlat
cmpb
roll
xchg
jnp
mov
mov
rcll
sub
or
scas
stos
jg
xorl
inc
popa
addr16
lret
inc
ret
jecxz
data16
push
and
dec
xor
mov
push
dec
test
cli
mov
insl
out
push
test
push
mov
push
outsl
testl
in
xor
stc
lock
int3
hlt
xor
mov
out
sub
ret
dec
jb
or
jae
adc
sahf
je
fmulp
dec
lods
xchg
mov
rclb
imul
xor
jno
inc
push
out
sti
dec
pop
lods
pusha
xor
aaa
sahf
inc
pop
inc
inc
cld
lea
add
mov
lods
dec
std
sub
xchg
ja
push
mov
addl
test
mov
sub
xchg
mov
push
mulb
adc
sahf
add
mov
test
shll
lret
ret
mov
mov
movsb
je
pop
mov
dec
test
data16
inc
adc
gs
and
ret
pop
jns
sbb
nop
ret
pop
jae
into
mov
stos
push
sub
pop
lcall
add
cmp
icebp
add
test
gs
shr
push
loope
subl
and
cwtl
or
arpl
sbb
mov
mov
int3
sub
aad
loop
jns
fstps
loopne
lret
push
push
mov
xor
orb
mov
xchg
push
test
scas
inc
sahf
mov
push
enter
add
jae
or
cmp
aaa
call
cmp
xor
lea
mov
jge
jle
sub
inc
pop
push
ret
cmpsb
syscall
xor
sub
aaa
add
mov
lret
xor
mov
in
jmp
data16
mov
sub
outsl
out
lcall
cmp
cld
push
mov
add
pop
dec
dec
add
dec
xor
js
xlat
hlt
aas
dec
sub
movsl
lret
inc
lret
add
out
or
pop
ds
movsl
dec
in
mov
dec
rorl
aad
pop
aad
jle
out
std
xorl
sbb
es
sbb
mov
add
push
leave
or
lds
imul
cmp
in
fnsave
aad
sbb
lcall
push
or
popa
xor
push
xor
add
imul
push
imul
jecxz
test
scas
add
jg
loopne
pop
add
ljmp
into
imul
pop
push
in
fisubrs
out
lret
inc
cmc
ud2
ret
movsl
xchg
mov
inc
or
fisubrl
push
int
or
pusha
mov
cmp
or
sub
int3
ds
andl
in
lock
mov
sbb
add
pop
into
adc
ds
popa
pop
xor
push
mov
std
fistl
outsb
cmp
pop
mov
popa
jl
xchg
sub
lcall
xchg
xchg
inc
or
and
fldl
jmp
sub
or
mov
mov
adcb
test
aaa
ret
mov
rclb
dec
notl
push
in
or
aaa
pop
aad
int3
add
out
imul
pop
sti
int3
xchg
xor
sub
add
jne
pusha
insb
sub
lods
shrl
sub
aad
into
sub
add
rcr
mov
bound
outsl
and
adc
cwtl
xor
pop
add
inc
xor
mov
jmp
dec
and
dec
ret
pop
cs
xor
jno
adcl
or
roll
loop
xchg
push
jge
add
lea
fbstp
dec
jnp
insl
dec
mov
inc
cmpsb
inc
sti
push
pop
int
fldt
scas
xchg
out
pushf
roll
jae
or
fidivs
lods
lea
and
stc
nop
cmp
jmp
or
adc
stos
push
imul
xchg
fs
fsubr
test
inc
negb
cmpl
mov
aaa
popf
das
xchg
aaa
cmp
out
push
add
pusha
outsb
adc
lea
add
pop
mov
add
mov
out
push
adc
adc
lahf
sbb
dec
in
adc
and
inc
in
xchg
lea
les
clc
jge
loopne
jno
movsl
sbb
aas
fwait
aam
fsubs
pop
xlat
cmp
mov
cld
cltd
mov
dec
filds
mov
add
pop
push
lret
or
movntq
out
sub
add
es
and
add
repnz
cmpl
push
mov
test
pop
mov
shlb
loopne
xchg
or
xchg
test
in
mov
push
add
jno
and
popl
inc
sti
and
push
pop
out
cmp
subb
adc
icebp
sahf
incb
cmp
xchg
cmpsb
ljmp
loop
adc
push
test
in
in
inc
ja
das
fwait
add
movups
jmp
aad
outsl
jge
nop
xchg
inc
cmpsb
and
roll
inc
mov
adc
lds
xchg
cltd
sti
cmp
jmp
xlat
test
push
pop
push
mov
shlb
outsl
and
and
xor
popa
daa
dec
data16
loope
add
cmp
mov
push
dec
hlt
cwtl
pusha
loopne
and
int
cmpsl
pop
mov
pop
mov
and
sub
das
out
pop
xor
push
and
movsl
iret
shl
inc
out
mov
ljmp
xor
fcoms
aam
loope
gs
or
rol
sub
mov
testb
cmpsl
fdivrl
mov
add
sub
xchg
xlat
sbb
cs
test
loopne
cmp
lea
orl
insb
mov
ja
rcr
dec
jns
jle
or
call
arpl
jne
push
xchg
mov
popf
or
fwait
loope
cwtl
out
mov
lods
cwtl
imul
lahf
inc
xchg
xor
orb
subb
shrl
or
adc
aad
or
and
dec
xchg
mov
sahf
cmp
jbe
int3
dec
pop
aad
add
in
loope
lret
fucomp
test
push
pop
nop
leave
nop
ds
jge
ret
je
jae
pop
gs
loope
add
jne
mov
inc
vpmacsww
mov
xchg
mov
mov
sub
and
pushf
xchg
sub
add
push
or
and
sbb
xchg
pop
mov
sahf
mov
shrb
loopne
add
lret
popf
cltd
cmpl
mov
mov
mov
enter
sbb
mov
mov
insl
std
aaa
sti
mov
lock
hlt
call
pop
test
cltd
out
inc
lods
clc
imul
mov
mov
and
pop
or
mov
je
cmc
mov
insl
push
repz
jne
and
adc
xor
xchg
fidivrs
decb
rorl
neg
mov
mov
xchg
lods
mov
xor
cmp
out
lds
js
jns
add
and
hlt
orps
aad
sbb
lea
push
hlt
mov
xchg
dec
inc
scas
mov
dec
cld
dec
aas
push
insl
mov
movsl
push
and
scas
mov
add
sub
lock
test
mov
sahf
or
cmp
loope
pop
jle
insl
repnz
cs
cmp
mov
sub
dec
andl
cmp
int3
ss
aaa
jmp
cmp
sbb
xchg
leave
pop
lahf
or
mov
aad
sbb
mov
mov
mov
xor
movsl
int
mov
sbb
fldenv
lds
push
outsb
adc
in
adc
cmp
mov
scas
xor
icebp
mov
pop
sbb
sahf
test
subb
popf
stos
mov
push
push
jns
adc
or
cmp
lods
push
inc
sub
adc
fcoms
dec
xchg
nop
jnp
stc
and
insl
movsb
mov
mov
lahf
aad
jno
arpl
std
gs
dec
or
xchg
jp
das
loopne
dec
loop
pusha
mov
andl
enter
cmpsl
jge
iret
adc
roll
lahf
lret
sbb
mov
mov
andl
push
or
push
xor
pop
push
pop
add
xchg
add
cmc
add
in
xor
iret
ljmp
repz
lret
push
xchg
repz
jle
pop
iret
lods
and
mov
mov
cwtl
mov
or
mov
rcrl
inc
push
std
sub
cmc
or
call
inc
or
js
add
push
fsubrl
mov
inc
cmp
pop
sti
jno
cmp
imulb
sbb
push
cwtl
mov
dec
add
dec
out
sbb
test
add
ret
mov
sub
and
mov
mov
arpl
mov
cmpsl
pop
mov
and
addr16
mov
test
test
and
movsl
mov
jmp
in
mov
pop
pop
xor
cli
inc
sbb
cmp
ret
push
out
imul
adcb
cmp
jne
icebp
mov
jnp
push
mov
neg
or
cwtl
jge
lahf
outsl
mov
and
sarl
xor
or
xor
cmp
fcmovne
outsl
mov
sub
push
andl
inc
xchg
ret
inc
cltd
adc
cmp
xlat
push
aas
mov
lret
jb
add
das
jno
mov
nop
cmp
into
lret
addr16
adc
pop
cmc
cld
into
sub
dec
addr16
ds
lods
divl
lods
dec
flds
popf
lcall
sbb
add
out
jne
mov
push
inc
out
add
xchg
dec
out
xlat
cmp
inc
adc
popa
incl
mov
cld
adcb
jae
adc
or
and
pushf
loopne
daa
sub
jmp
nop
das
in
adc
and
in
add
mov
push
cmp
dec
ret
cmc
xchg
arpl
mov
lret
xor
mov
les
cmp
dec
mov
pop
or
adc
mov
testl
or
pop
sub
fnsave
sub
cli
sub
push
scas
in
stc
sahf
ljmp
adc
ja
lea
mov
cmp
add
jl
bound
pop
inc
mov
xlat
add
mov
ret
sti
and
pop
jl
test
pop
ja
sbbl
enter
das
push
or
ss
testb
nop
rclb
mov
dec
jg
sti
mov
or
sub
push
pop
push
clc
or
ss
adc
and
xor
adc
inc
xchg
add
popf
mov
mov
inc
jae
cld
mov
push
sti
ljmp
inc
push
pop
repnz
popf
mov
punpckhdq
movsb
mov
insl
shlb
xor
sub
cltd
int
adc
lods
lds
jg
add
shrl
and
add
sbb
cmp
loope
and
dec
mov
cmpsl
je
popa
loope
fsubr
loope
or
aad
xchg
and
icebp
fwait
adc
lahf
outsl
test
shl
ret
fsubrl
adc
and
push
test
ret
jge
push
dec
rcrb
push
shrl
dec
push
mov
xchg
cmp
sbb
dec
adc
mov
mov
shl
lcall
add
xchg
notl
out
and
in
stos
sub
aaa
pop
leave
nop
nop
subl
xchg
cmpb
xor
insb
outsb
enter
mov
imul
cmp
and
loope
into
adc
push
pop
and
leave
xchg
fidivs
mov
fldl
dec
icebp
test
jb
sub
notl
out
push
xlat
mov
loop
mov
lods
out
popa
mov
inc
repnz
xor
fidivs
and
jp
fs
scas
mov
or
scas
repz
pop
in
pop
mov
fdivs
lock
daa
lods
incb
xchg
push
fisubrs
fsubrl
iret
adc
in
data16
sahf
dec
dec
pop
push
hlt
jae
xchg
pop
shrd
adc
mov
insb
stos
es
ja
mov
xor
push
stos
dec
and
hlt
add
pop
mov
push
stos
jbe
pop
aam
lea
push
mov
mov
rcr
mov
stos
mov
and
sti
adc
pmulhuw
adc
scas
iret
and
add
jns
in
adc
fucomi
cmc
pop
pop
add
js
lcall
iret
movsl
mov
cs
mov
out
push
addb
inc
popa
nop
pop
pop
outsb
sub
jne
out
add
fistpll
testb
push
push
xor
jns
push
mov
cmpsl
cmp
in
invlpg
out
sti
enter
push
stc
subb
pop
arpl
call
push
mov
mov
inc
mov
push
jle
dec
jg
push
lock
jmp
jb
scas
jmp
xor
scas
popl
push
jge
cli
pop
jns
mov
pop
int3
dec
call
cs
mov
test
pop
or
gs
das
add
int3
xchg
inc
adc
jno
mov
repz
inc
sbb
test
insl
cmp
enter
jle
and
pushf
lea
nop
orl
and
scas
sub
cmp
and
sub
xlat
inc
cmp
xchg
sbb
enter
adc
push
jl
or
nop
push
gs
jae
mov
and
out
mov
sahf
aam
sub
std
push
out
cmpsb
loopne
mov
jo
repz
pop
sub
int3
pop
and
push
mov
int3
int3
rorl
xor
insb
xchg
sbb
mov
ljmp
add
push
push
push
push
ss
fdivrl
dec
or
cmpsb
cltd
add
pop
std
lds
sti
jg
dec
push
cli
faddl
dec
stos
cwtl
mov
hlt
xchg
ss
adc
or
daa
insl
pop
dec
push
scas
sar
sbb
jne
cmp
nop
mov
das
xor
testb
push
cld
clc
ss
out
insl
cmpsl
jbe
sbb
test
jae
out
xchg
jecxz
jne
call
popf
leave
or
rolb
pop
cmc
and
insl
in
push
das
insl
lock
icebp
dec
mov
pop
mov
mov
outsb
mov
sahf
push
mov
sbb
pop
xchg
mov
mov
sub
je
add
orl
add
cmp
outsb
out
xchg
sbb
pop
ds
stos
mov
imul
aaa
imul
gs
lcall
mov
pop
mov
cmpsl
xchg
idiv
xor
mov
sbb
cmpsl
into
addr16
dec
inc
mov
push
xchg
test
lods
inc
pusha
sbb
orl
inc
inc
stos
loopne
or
xchg
sub
fcmovb
jne
sbb
stc
lods
mov
popa
mov
out
inc
enter
in
inc
ss
out
sbb
sub
in
sub
cwtl
adc
inc
movsl
pop
and
das
outsl
dec
lods
out
seta
jnp
ret
dec
mov
push
popf
mov
sarb
mov
lcall
pop
aas
and
stos
push
push
ror
inc
adc
cmpb
repz
mov
in
ficomps
pop
jecxz
jbe
fimull
fistps
sarb
mov
pop
pop
jbe
xor
test
mov
jecxz
mov
inc
test
adc
xor
fldenv
and
adc
in
mov
adc
stos
test
mov
or
pop
and
mov
mov
or
mov
and
mov
pusha
push
push
mov
and
inc
rol
or
sbb
cmp
out
inc
mov
loopne
mov
xchg
sbb
aad
test
int3
int
into
push
push
add
clc
xchg
in
cmp
inc
cmc
ret
jl
test
in
push
dec
sahf
sarb
das
stc
jecxz
dec
outsb
shl
leave
js
pop
xor
mov
lcall
push
jno
std
test
xchg
daa
mov
fists
mov
cli
cmp
ss
push
jecxz
add
stc
inc
pop
test
loop
dec
pop
mov
jmp
pop
xor
call
into
stc
mov
jne
add
aas
cmpsl
sbb
jmp
ss
cli
push
and
bound
inc
nop
vandpd
nop
or
cli
je
pop
adc
cs
in
dec
cltd
cmp
and
cmp
sub
pushf
inc
sarl
ja
inc
adc
push
jb
lcall
sub
sub
scas
or
mov
jmp
xorl
enter
cmpsl
notb
mov
push
jl
enter
and
push
addr16
dec
push
mov
loope
cmp
xchg
call
in
sub
movq
fstps
dec
adc
sbb
add
mov
cmp
push
das
sbb
and
sti
movsb
into
int
pop
mov
es
dec
pop
and
push
test
das
mov
xchg
pop
pop
mov
fildll
jae
push
rcrl
push
cmp
push
push
stc
gs
inc
lret
mov
loopne
aaa
aaa
xchg
jae
add
sbb
sahf
jnp
sbb
sbb
aam
xor
rclb
into
mov
nop
inc
or
pop
adc
test
rorb
push
int3
clc
adc
add
aad
mov
jp
dec
icebp
in
push
mov
mov
lret
in
int3
pop
nop
pop
outsb
call
inc
movsl
data16
in
jle
ds
adc
sbb
mov
adc
testl
jno
movsb
sbb
jbe
sub
sarl
xchg
shlb
ljmp
lds
es
aam
push
mov
pop
fstpt
xchg
xchg
xchg
xchg
adc
test
xlat
push
jge
lcall
dec
ffree
xchg
adc
in
outsl
dec
dec
lcall
cld
je
inc
loop
fistps
and
inc
orl
cmp
xor
outsl
mov
ljmp
and
sub
mov
into
dec
adcl
mov
sti
subb
lret
lods
das
iret
out
sub
bound
aad
pusha
fmull
imul
fdivl
iret
subl
test
out
ss
pop
inc
jl
rorb
or
mov
inc
int3
dec
retw
int
es
outsb
push
insb
fadds
loope
cmpsl
jg
lods
sbb
xlat
stos
int3
mov
and
std
mov
cmpl
inc
xor
dec
add
push
mov
jb
fisubl
gs
jae
stos
adc
cmp
in
ja
aad
jle
pop
xlat
mov
xchg
sub
stc
or
loop
inc
lea
pop
js
aas
inc
jecxz
cmp
sub
ds
fwait
jle
aam
jmp
push
orb
mov
sub
jl
sbb
push
pop
or
pop
pop
mov
jmp
adc
ja
mov
stos
out
fisttpl
adc
cmp
mov
fimuls
pop
push
jnp,pt
cmc
xor
xchg
das
adc
fstps
pusha
jp
xor
mov
cmp
add
test
ljmp
dec
je
repz
mov
jp
dec
sub
pop
movsl
in
jnp
dec
lods
pop
sub
notb
fisubl
xchg
lods
add
adc
jno
push
sub
and
ljmp
lock
out
and
fstl
dec
xchg
dec
iret
shrl
jo
sbb
or
cmp
bound
add
inc
pop
roll
add
into
test
adc
shlb
mov
fildll
sub
adc
loopne
shrb
cltd
dec
xchg
nop
sub
mov
jnp
push
and
inc
push
add
js
dec
shrb
idivb
xor
xchg
das
mov
inc
inc
cmp
test
ret
scas
ret
pop
mov
fsubr
clc
pop
dec
cmp
in
adc
pusha
loope
and
test
pop
pop
cmp
test
push
in
sbb
xorb
enter
xor
cmpsb
imul
jnp
cmp
int
and
add
arpl
sbb
insb
push
out
and
lcall
das
jg
fs
mov
sub
out
push
pop
cmp
in
cmpsl
mov
test
adc
iret
cmp
push
jnp
add
jmp
xchg
cmp
fistpll
adc
cmp
cmp
xor
mov
cmp
negb
outsl
jl
rcr
lds
mov
inc
jl
adc
stos
push
add
fmuls
fnstenv
cmpsl
inc
sub
mov
adc
add
pop
aaa
das
push
lret
insl
call
xor
enter
jg
movsl
mov
xchg
or
xchg
mov
xor
in
xor
mov
push
mov
faddl
andl
jb
inc
in
jb
push
mov
push
push
sbb
add
push
pop
inc
jmp
icebp
fldl
std
add
ffreep
fcmovbe
pushf
sbb
ds
xor
push
push
cmp
inc
loop
push
mov
imul
gs
sbb
and
sub
adc
les
cltd
mov
jl
int
call
pop
sub
dec
inc
jae
and
sub
inc
add
ret
clc
add
test
pop
pop
imul
mov
push
jmp
mov
pop
pop
test
test
test
mov
scas
push
dec
xchg
sub
imul
pop
push
repnz
pushf
ds
push
xchg
inc
jne
push
fdivs
icebp
ficoms
in
inc
push
fisubrl
add
or
push
movsb
xchg
idiv
loope
mov
filds
imull
sbb
sbb
pop
pop
mov
hlt
inc
push
jbe
mov
xor
xchg
scas
pop
fldt
jae
sbb
sbb
dec
ljmp
in
rclb
enter
cmpsl
mov
dec
out
addr16
pop
int3
pushf
insl
int
lcall
pop
repz
inc
int3
int
mov
pop
fcom
push
jnp
bnd
stc
pushf
pop
sbb
inc
adc
loope
shll
xchg
push
pop
out
add
in
add
mov
push
sub
xchg
xchg
cmp
cmp
lret
popa
std
xor
pop
or
or
pop
dec
sub
pop
fstpl
aaa
xor
rclb
add
sbb
repz
insb
out
loope
sub
dec
jl
push
cmc
out
in
dec
stc
push
push
jae
mov
cld
cltd
pop
pop
fmull
sbb
dec
cmp
hlt
aad
lret
mov
mov
sub
inc
ds
and
lcall
jmp
and
add
mov
insb
clc
and
sbb
sarl
cwtl
scas
dec
mov
jg
nop
loopne
int3
jae
jnp
or
test
pop
and
mov
cmpl
mov
xchg
pop
push
fistpll
cmp
fs
in
or
fistps
adc
xlat
cmpl
je
js
mov
lcall
idiv
push
dec
push
mov
xorb
or
decb
or
jmp
mov
stc
aad
mov
lods
jge
cltd
and
pop
lret
in
jo
lcall
inc
ficoms
inc
in
pusha
pop
or
gs
xor
mov
push
push
push
jb
push
xor
or
outsb
leave
or
aaa
fwait
or
xor
nopl
cmp
dec
notl
sbbb
decl
call
push
mov
fsts
daa
test
movb
sub
fiaddl
orl
and
sub
in
sbb
insb
leave
and
into
divb
lds
ficomps
sub
cmp
xlat
roll
outsl
xlat
and
jnp
out
inc
movsl
jno
out
into
adc
mov
sbb
je
pusha
in
mov
inc
xchg
fisttps
aaa
sbb
push
jne
repz
fsub
cwtl
xor
out
jge
sub
push
fiaddl
lcall
sahf
add
insl
lret
xchg
or
ret
cmp
and
pop
jbe
jmp
pop
inc
add
lret
lock
lods
xchg
fwait
test
in
pop
pushf
cld
mull
adc
test
loope
icebp
sbb
add
xorb
cmp
inc
mov
int3
test
jbe
push
pop
add
adc
pop
jno
xchg
or
adc
or
dec
leave
ret
test
imul
arpl
cmc
pop
gs
scas
loopw
xchg
lret
adc
rol
jns
mov
mov
sbb
xor
mov
imul
lods
inc
mov
pop
jl
sbb
leave
fcoms
clc
pop
sbb
cmpsl
jecxz
pop
pop
movsl
pop
jne
loop
mov
mov
jno
in
xchg
clc
add
addr16
fldl
mov
mov
addl
sahf
xchg
dec
or
sarb
push
dec
orb
jbe
int3
bound
add
shlb
ficomps
pushf
sbb
cmp
fnstsw
sbb
loopnew
sti
jle
iret
in
sbb
insl
data16
and
dec
enter
js,pt
scas
xchg
mov
popf
cld
adc
xlat
in
mov
je
push
sbb
dec
loopne
stos
mov
adc
out
ja
mov
movsl
out
lret
adc
jg
jg
inc
xor
mov
stc
inc
int
or
adc
add
xor
cmpsl
jns
push
mov
jo
mov
cmpsb
mov
inc
popa
addr16
sqrtps
xor
imul
dec
data16
mov
popa
mov
add
out
jnp
jge
ja
shl
xchg
cmp
fdivrl
hlt
jmp
or
lret
xchg
mov
fisubs
fsubrs
lds
xor
pop
xlat
mov
push
je
andl
dec
dec
dec
mov
addr16
push
mov
bound
dec
loop
divb
mov
or
mov
arpl
push
adc
jno
je
sub
jl
and
push
xor
nop
xor
dec
sbb
push
jl
lods
shrb
mov
js
test
dec
mov
clc
repnz
mov
neg
test
and
mov
xlat
pop
cli
in
push
jle
pop
pop
faddl
inc
fwait
push
sub
imul
loope
repz
aam
popa
add
or
add
adc
popf
adc
dec
stos
or
fs
out
push
fcoms
push
clc
and
inc
mull
or
rorb
stc
pop
popa
leave
dec
ds
insl
xor
mov
les
lcall
push
std
xchg
lock
aam
out
sub
fsubs
pop
scas
int
add
scas
push
and
test
enter
stos
and
imul
repnz
jae
in
fdivs
sti
or
popa
fisubs
dec
cmp
jmp
shrb
pop
out
int
pop
in
lahf
test
test
jnp
sbb
jmp
xchg
push
push
jge,pt
mov
adc
mov
push
jbe
in
rcrb
jmp
pop
fistpll
in
je
and
and
adc
js
sbb
ja
dec
fsubrp
push
scas
lcall
push
lock
scas
sbb
cwtl
fdivl
dec
loope
sub
repnz
fldl
sub
int3
and
ss
mov
or
repnz
imul
xchg
pop
mov
ss
xor
insb
dec
and
push
outsb
mov
sbb
pop
jl
je
js
sbb
out
es
hlt
insl
into
sbb
ljmp
fstpt
jb
mov
sarl
sbb
pop
in
call
and
in
sub
xchg
addr16
or
test
xor
add
lods
inc
stc
in
add
mov
dec
in
dec
shrb
out
add
loopne
push
fs
cmpsl
push
iret
xchg
arpl
jnp
adc
xchg
rcrb
jmp
jo
fwait
cmp
popa
test
gs
mov
mov
movsb
lock
scas
mov
pop
fwait
lret
test
push
test
or
pop
ret
gs
pop
clc
das
fcoms
pop
xlat
cs
xchg
jb
dec
adc
inc
faddl
xchg
scas
pop
arpl
lods
mov
in
mov
sar
jmp
inc
lret
xchg
lret
and
inc
push
fisttps
mov
mov
rcrb
subl
adc
out
notb
jne
cmp
test
mov
xor
sbbb
or
out
into
out
fsts
or
pop
jmp
mov
xchg
es
gs
icebp
shll
addb
pushl
call
add
jae
cmp
jecxz
loopne
cmp
sub
mov
jl
out
push
cmc
push
fcom
stc
repz
sbb
or
pcmpgtb
xlat
ss
scas
add
cmp
add
push
mov
add
jb
ja
shrd
and
jns
std
inc
loopne
cmp
push
mov
pop
inc
repnz
sbb
out
push
es
fdivs
jl
fwait
addr16
xorl
outsb
jg
push
sub
data16
add
addr16
sbb
jg
add
fs
sahf
bound
inc
sub
sub
or
cwtl
and
out
adc
dec
sbb
pop
xchg
sbb
jge
mov
aam
loopne
adc
aad
cwtl
dec
imul
sub
outsb
sbb
insl
cwtl
mov
fwait
test
scas
mov
outsl
xchg
fsubrs
out
sub
fisubs
jo
inc
dec
test
repz
inc
adc
mov
ja
in
sti
lahf
lods
sbb
test
ret
pop
adc
arpl
adc
xor
ds
push
js
sbb
mov
dec
or
shl
rorl
lods
inc
lods
mov
ljmp
sbb
or
rcll
aaa
and
cmc
fbstp
aad
pop
jo
inc
stc
push
dec
jge
pop
inc
xchg
xor
and
int
cmp
loopne
xchg
xor
and
sub
jmp
and
movsl
icebp
cmp
int
jne
aam
stos
xchg
pop
push
push
adc
arpl
ret
cld
cmp
popf
mov
xchg
jb
pop
pop
cmc
in
out
mov
nop
insb
mov
adc
jge
push
add
pop
int3
rcll
aad
or
pushf
in
loop
inc
aaa
ljmp
fldcw
pop
call
mov
pcmpgtb
add
test
lcall
dec
jnp
dec
in
dec
push
int3
imul
xor
test
xor
push
addr16
push
cltd
cmp
popf
ret
ja
ficoml
cmpsl
mov
and
cmp
cmp
repnz
cmpsl
mov
popf
jp
jae
or
adc
inc
les
sbb
sbb
mov
jmp
push
inc
nop
vmwrite
or
push
arpl
jg
enter
and
mov
inc
addr16
outsb
sub
pop
mov
ljmp
loope
in
fwait
jmp
insb
jns
dec
stos
mov
sbb
test
dec
push
movsl
jnp
push
or
jge
xor
in
mov
dec
sbb
dec
xorb
dec
push
xor
xor
xor
dec
and
js,pt
fldcw
add
mov
scas
cmpsl
mov
rcrb
bound
dec
inc
aam
sub
mov
mov
add
xchg
seta
jo
arpl
mov
lock
in
xor
cli
sub
scas
adc
sub
out
add
xor
sbb
pop
data16
xchg
cld
loope
jbe
and
mov
add
lret
fsubrs
or
push
mov
bound
pop
jno
scas
lret
xor
lahf
loope
add
mov
lahf
sbb
bound
fwait
push
fiadds
int3
fs
cmp
scas
pop
jns
in
pop
xchg
ljmp
xchg
imul
int
mov
adc
sbb
mov
xchg
pushl
pushf
daa
dec
popf
cmp
cmp
jnp
dec
add
js
lea
iret
add
enter
or
jl
inc
mov
pop
std
sbb
cmp
neg
mov
test
in
adcb
mov
cli
das
sub
cmp
lahf
sub
pop
and
mov
adc
xchg
cmp
pop
test
push
pop
or
lods
inc
xchg
pop
mov
cmp
jle
and
xchg
pop
aad
dec
fisubs
adc
pusha
es
xlat
sti
add
mov
or
mov
jo
xchg
sbb
mov
jmp
mov
in
sahf
mov
js
incb
icebp
sarb
outsl
pop
outsl
movsl
ljmp
sub
outsl
in
add
cmp
sar
cld
jle
in
fadds
mov
adc
test
xchg
add
shrl
fwait
lcall
dec
pminub
or
and
and
xor
sub
cmp
lret
mov
cltd
into
jo
add
cmp
add
inc
or
loope
pop
test
popa
xlat
mov
add
xchg
stc
mov
lret
push
movsl
cmp
mov
or
pushf
sub
ss
pop
outsb
add
push
mov
mov
xor
dec
xchg
leave
jne
sti
dec
jne
sbb
sbb
imul
lcall
lea
cltd
pusha
test
hlt
fstps
sahf
jmp
pop
loope
pop
mov
push
cmpsb
js
dec
jecxz
sub
sbb
cmc
das
fisubrl
mov
cmp
out
pop
sbb
pop
xlat
push
mov
cmpsl
arpl
pop
inc
lods
shlb
mov
add
dec
lods
sub
fsubrs
sbbl
gs
pop
movsl
jle
in
add
loopne
cmp
outsl
mov
aam
aad
adc
sbb
test
dec
loop
fstps
mov
imull
inc
scas
cmc
fimull
jg
push
out
mov
dec
mov
pushl
add
xor
lcall
ljmp
fs
xor
adc
xorl
mov
testb
push
pop
inc
push
jae
les
pop
hlt
xchg
orl
push
test
pop
into
dec
sub
cmp
mov
mov
pop
mov
push
jmp
mov
loope
test
sub
jle
mov
dec
loope
movsb
cmp
inc
and
ljmp
je
cmp
xchg
je
inc
mov
cmc
loope,pt
sahf
cmp
mov
fucomip
les
int3
int
and
xor
mov
fidivs
cli
loop
leave
dec
or
pop
hlt
arpl
mov
jg
pop
rclb
fdivl
and
add
and
mov
adc
xchg
aad
imul
pop
mov
clc
mov
xchg
popf
push
jns
inc
test
call
push
ss
hlt
mov
and
in
in
push
fnsave
or
test
jp
mov
fwait
pop
or
mov
adc
iret
leave
push
stos
cmp
lea
or
test
xlat
sub
cmp
xchg
imul
mov
cs
call
idiv
pop
js
xchg
dec
jge
push
mov
sbb
push
repz
inc
flds
or
mov
repz
sbb
andl
cmpsl
loope
mov
movsb
mov
je
adc
or
push
cmp
inc
inc
xor
jmp
dec
lahf
sub
sbb
lds
xchg
jns
daa
and
lret
xor
mov
jne
sub
add
lods
mov
icebp
les
stos
outsl
jne
cmp
rcrl
xor
mov
push
dec
lret
cmp
stos
and
int
adc
inc
mov
inc
jb
push
out
mov
adc
xchg
imul
jae
jb
push
mov
dec
loop
arpl
xchg
pop
dec
lcall
mov
mov
dec
test
lahf
fsubrl
test
dec
push
cli
or
cmpsl
jg
aas
hlt
popf
adc
out
fbld
push
adc
push
mov
fildll
sbb
jne
inc
mov
sbb
cmp
mov
push
xlat
pop
pop
xchg
cmp
icebp
ja
and
cmp
xor
cmp
mov
cli
fwait
sar
cmc
sub
adc
cmc
pop
pushl
mov
cmpsl
mov
mov
mov
sti
adc
jno
mov
dec
sbb
and
push
test
mov
push
arpl
pop
xchg
sbb
shrb
mov
in
push
mov
and
pop
mov
jns
dec
xchg
xor
sub
int
xchg
pop
les
ljmp
stos
fdivs
xor
or
aad
loope
mov
hlt
jecxz
pop
cmp
adc
xor
xchg
and
divb
cli
jecxz
jp
push
scas
and
aam
mov
into
loop
push
pop
dec
push
cmp
mov
inc
jns
subl
bound
lods
ret
stc
loope
in
jge
ret
adc
stos
and
add
repnz
fwait
adc
cmp
in
in
lods
cmp
js
imul
adc
shrl
into
mov
mov
js
xor
pop
jns
jo
inc
cmc
lcall
jge
leave
dec
daa
scas
mov
mov
dec
pop
adcb
enter
and
popa
cs
or
out
leave
add
adc
call
mov
mov
push
lock
ror
xchg
iret
cmpsb
stc
lds
repz
pop
std
daa
dec
imul
ret
fs
mov
push
adc
enter
repz
xchg
jns
in
mov
adc
mov
shlb
jge
sbb
xlat
push
test
lods
jb
or
loop
lcall
inc
inc
fnstsw
sub
mov
mov
adc
out
push
push
fldt
xchg
inc
imul
mov
push
mov
add
outsl
push
sbb
inc
movsl
inc
adc
xor
adc
enter
rep
ret
pop
push
jne
or
dec
pop
adc
lret
adc
test
cmc
sub
jne
and
inc
mov
xchg
dec
xor
mov
cmp
dec
mov
loope
lods
inc
cmpsl
add
cmpl
xor
imulb
repnz
add
jp
iret
ret
jb
daa
pushl
sub
jecxz
push
inc
mov
sub
test
sbb
addb
xor
adc
daa
rclb
xor
mov
mov
aas
outsb
dec
lods
sbb
inc
in
into
jg
mov
push
loop
sub
subl
mov
out
fiaddl
les
data16
icebp
sub
cmpsl
inc
cmp
mov
cmpsb
push
adc
test
push
cmp
inc
mov
or
and
adc
sub
jo
push
sub
and
and
cmp
das
dec
scas
and
ljmp
jo
push
enter
jle
sbb
xlat
sbb
std
inc
mov
push
sub
xchg
ret
adc
je
cmpsl
and
or
les
fsubrl
lcall
xlat
out
inc
or
leave
orb
notl
cli
in
or
jbe
cmp
popa
sbb
and
mov
push
push
jo
and
bound
fisttpl
out
ss
outsb
das
ds
addb
cmpl
les
dec
imul
popf
xor
xlat
ds
dec
js
int
dec
push
cmp
imul
pop
jp
xchg
clc
fwait
pop
mov
adc
gs
jge
mov
pushf
cmpsl
mov
mov
out
mov
or
mov
and
xor
cmpsl
ret
pop
aam
adc
xor
out
inc
shr
mov
jg
lods
lock
cmpsb
sub
pusha
aaa
and
mov
not
xchg
movsl
jbe
xchg
fnstsw
int3
or
add
inc
test
sub
xchg
das
xchg
mov
insl
bound
push
stos
call
mov
mov
movsl
or
les
mov
mov
mov
xor
sbb
xor
mov
push
sbb
and
in
out
or
xchg
aad
ss
outsb
pop
dec
sahf
jns
mov
ud1
or
jbe
lea
jmp
mov
xchg
add
push
pop
pop
jecxz
movsl
push
cli
pop
addr16
and
mov
push
add
mov
popa
xor
sub
daa
inc
and
or
inc
sbb
push
pop
arpl
push
outsb
or
test
dec
xchg
mov
cmp
fildll
leave
sti
insb
adc
cld
push
adc
pop
xchg
jae
fnstenv
push
mov
lcall
scas
in
shr
int3
in
xchg
add
mov
or
shll
shlb
test
test
push
rorb
dec
add
push
test
inc
add
rep
lea
popa
sub
push
outsb
fsts
jns
idivl
test
inc
rclb
pop
and
cmp
repnz
push
fadds
sti
push
sbb
xchg
mov
movsl
fcmovnb
mov
rolb
pushl
es
push
dec
push
dec
insl
mov
aas
mov
mov
inc
aas
jns
cmpl
or
inc
mov
fsubs
lret
enter
out
or
enter
sbb
sub
inc
mov
xor
mov
sub
js
sbb
xchg
or
daa
pop
mov
jnp
xlat
add
in
sub
movsb
mov
and
stos
or
mov
cmpsb
sub
lods
push
jo
data16
inc
js
mov
xlat
shll
sbb
arpl
jnp
mov
cmp
popa
dec
add
mov
faddl
pushf
cli
dec
fists
xchg
push
cmp
data16
lcall
or
dec
jns
pop
ja
add
setg
cs
nop
repnz
jge
jne
push
pop
pop
mov
lods
int3
nop
ja
movsl
push
les
insb
sbb
popf
inc
daa
sub
dec
jmp
lock
fildl
xor
in
mov
sahf
cmc
and
jle
jno
or
xlat
js
pop
jmp
loop
or
push
sbb
popa
mov
stos
sbb
and
xchg
repz
xor
mov
fisubl
jge
sub
aad
test
aad
scas
pop
dec
push
jo
lods
push
xchg
cwtl
fcomps
lahf
inc
add
test
cs
mov
push
into
mov
popl
rorb
cmp
fisubrs
fidivl
rcll
jmp
ja
cwtl
dec
mov
fcoml
xchg
jmp
in
aas
sbb
add
sub
repz
ret
stc
lods
push
loopne
popa
mov
mov
cmpsb
jo
inc
adc
push
ret
flds
jbe
sub
mov
ja
xlat
xorb
mov
adc
inc
mov
cli
mov
mov
inc
mov
test
mov
pop
lcall
dec
jp
jb
and
and
mov
pop
pop
mov
xchg
lret
repz
cmp
mov
inc
mov
adc
or
jne
mov
inc
dec
call
loop
addl
popf
or
neg
mov
aas
and
cwtl
lods
mov
mov
push
mov
ret
jno
dec
xchg
jo
lret
shr
in
insl
sti
adc
add
jne
ljmp
notl
pop
inc
pop
outsb
jle
dec
add
clc
add
or
push
sti
and
mov
outsb
mov
jp
fcomps
dec
leave
xchg
fidivl
mov
sarl
mov
jg
out
jmp
addl
inc
sbb
in
sbb
mov
sbb
xor
or
cmp
dec
xor
jne
or
ret
popa
loope
dec
push
sbb
and
xor
or
cmpsb
sub
mov
fmul
push
mov
lcall
std
sub
lea
imul
mov
inc
and
lcall
push
mov
sub
inc
js
inc
out
jae
mov
and
out
jb
and
pop
mov
fldenv
push
cmpsl
xchg
mov
push
into
and
bound
in
es
mov
ds
sbb
ja
dec
mov
mov
mov
fwait
subb
add
pop
inc
sti
movsb
lret
in
add
testb
inc
jl
sub
jp
sbb
imul
repz
xchg
fwait
mov
cmp
pop
adcl
or
or
fildll
outsb
cmp
in
shrb
mov
stos
fildll
aaa
insb
imul
sbb
pop
jno
movsl
out
and
push
push
clc
ret
mov
mov
dec
inc
cmp
cmp
scas
sbb
push
mov
dec
push
icebp
pop
testb
cltd
es
push
xor
shlb
add
and
ljmp
test
sahf
or
fmuls
push
fiadds
jge
rcrb
sbb
dec
in
adc
adc
xchg
data16
add
les
out
cmp
nop
movsl
xchg
out
jne
mov
and
mov
xchg
jno
sti
pop
mov
push
xor
pushf
fisttpl
mov
sub
mov
shll
mov
inc
movsl
or
fsubp
pop
test
dec
jb
pusha
pause
mov
push
les
jne
jg
jge
imul
mov
xchg
cmp
cmpsl
jmp
in
sbb
push
and
cwtl
or
cmp
jl
inc
hlt
inc
daa
stos
xor
adc
jne
dec
adc
ja
divl
out
in
test
mov
or
fdivr
push
mov
stos
arpl
je
aam
pop
pop
lods
mov
test
sbb
cltd
push
iret
dec
push
cmp
movsb
and
cmc
inc
imul
dec
in
xabort
outsl
les
push
ja
xlat
inc
sub
mov
clc
dec
cmp
adc
test
mov
loope
ret
push
pop
movsl
push
popf
or
push
inc
sahf
push
and
or
pop
rcrl
lret
shl
cwtl
aas
xorl
mov
outsb
pusha
jne
xchg
mov
xor
outsb
add
loope
dec
daa
adc
mov
push
cmp
mov
mov
push
aas
cwtl
cmc
daa
cmpsb
enter
push
les
mov
jecxz
sbb
aam
sub
out
xchg
dec
xchg
mov
adc
push
mov
and
andl
sti
pop
xchg
or
aaa
loope
add
sbb
inc
or
pop
xlat
add
jp
push
je
adc
inc
insl
faddl
inc
sub
hlt
sbb
push
cmpb
dec
rcl
inc
push
pusha
xchg
add
cmp
repnz
test
scas
inc
out
sahf
mov
fidivrl
out
mov
push
loope
scas
cli
fistpll
jg
mov
out
mov
rorb
mov
mov
insb
jae
adc
repz
dec
mov
daa
cmp
ss
scas
mov
das
cmpsb
iret
mov
xchg
jns
dec
jns
pusha
js
mov
sbb
fstpl
mov
pop
add
jns
mov
xchg
push
adc
jne
shll
pop
loop
pop
adcb
xor
xchg
push
out
test
sbb
imul
sub
xchg
pop
dec
sub
xchg
xor
imul
mov
push
outsl
push
fpatan
push
es
cmp
mov
pop
std
mov
loope
mov
stc
xchg
addl
and
push
push
icebp
inc
pop
movsl
out
pop
movsb
xchg
xor
xchg
jge
dec
jb
divl
cld
sbb
hlt
and
in
cmp
xor
sub
bound
mull
push
outsl
add
pop
or
jl
and
arpl
pop
inc
mov
push
add
mov
cmp
mov
push
adc
pop
aad
pop
pop
and
aaa
jno
loope
loopne
jbe
jl
sarb
pushf
insb
outsb
ds
loopne
jg
mov
sub
inc
jge
stos
mov
and
dec
aaa
sbb
push
adcb
std
and
mov
aad
xchg
rcrl
movsl
mov
jb
and
cwtl
dec
xchg
stc
xor
mov
pop
cltd
xor
imul
mov
adc
and
or
xchg
test
xlat
sub
mov
pop
dec
cltd
pushf
pushf
cmp
sub
shrb
std
fwait
mov
mov
jne
xor
cmp
mov
adc
adc
imulb
jmp
aaa
inc
out
inc
bound
in
int3
push
or
xchg
xor
sbb
mov
mov
jmp
out
sub
cmp
loop
pop
cmpsl
lret
mov
mov
xor
mov
int3
xor
test
pop
cld
pop
sahf
xor
mov
in
inc
clc
test
aam
xchg
xor
sbb
add
adc
sti
jle
pop
push
loopne
push
lods
fstpl
lahf
dec
movsl
iret
sub
cmp
adc
sub
cmp
nop
jb
aam
or
jl
adc
sbb
dec
jle
cmpsb
cmp
mov
into
in
push
mov
mov
sbb
popf
jge
rorl
das
mov
ficoms
fcmovu
mov
sahf
inc
je
icebp
insb
xor
sbb
xchg
xor
insb
es
imul
cs
iret
xor
cmp
jmp
or
mov
lds
sbb
adc
pop
xchg
mov
daa
and
loopne
mov
repnz
iret
movsl
jo
mov
xchg
adc
das
je
add
sbb
cld
addr16
mov
cltd
xor
add
bound
cmp
xor
iret
enter
lods
outsl
mov
xchg
test
xchg
in
imul
insl
adc
out
push
sbb
push
jmp
int3
push
add
ds
pop
nop
dec
cli
imul
sub
inc
mov
cmp
shr
jp
nop
cmpb
push
mov
enter
andb
pandn
test
es
dec
insl
add
arpl
dec
addl
cs
das
or
inc
pop
out
sbb
mov
scas
xor
aas
jmp
add
jge
scas
and
mov
cmpsl
pop
sbbb
idivl
xor
and
mov
loope
fwait
or
lods
dec
test
adc
add
in
sub
dec
fbld
xchg
add
push
mov
int
scas
jl
mov
and
cmp
mov
outsb
xor
les
arpl
fbld
cli
jge
fsubr
loopne
mov
pop
cld
or
cmp
xchg
out
out
dec
mov
add
xchg
xchg
lret
cmp
add
into
pop
jne
cmp
inc
inc
xchg
lods
cwtl
fsts
or
mov
inc
jmp
mov
aaa
mov
sbb
cmpsb
inc
mov
insl
test
adc
fs
popf
inc
sub
cmc
loop
test
pushf
gs
or
cs
or
popf
iret
lcall
pop
decl
imul
add
cmpl
add
into
xor
inc
cmp
pushf
ljmp
jg
mov
cmp
adc
jno
out
int3
mov
dec
mov
push
ret
in
insl
scas
pop
cmp
jns
jo
mov
fists
test
rclb
xor
fsts
adc
adc
int3
and
mov
aam
xchg
xchg
push
daa
ret
inc
mov
hlt
mov
push
inc
and
xchg
adc
mov
mov
pop
mov
mov
std
inc
push
ret
movsb
xorl
cmc
lea
sub
mov
subl
push
xor
or
cltd
pop
push
orl
sub
int3
and
and
outsl
jnp
pop
adc
pusha
add
push
test
ret
fsubrl
mov
test
adc
enter
xchg
cwtl
cli
scas
pop
dec
mov
in
jo
push
mov
xchg
xor
fsubs
mov
mov
push
mov
add
xorl
mov
in
popf
push
das
pop
sarb
xchg
add
jb
or
int3
or
mov
lahf
imul
jb
add
aas
xchg
push
inc
ss
rcrl
ficompl
cmp
cmpsb
dec
sub
push
pop
pushf
push
and
xlat
sbb
inc
mov
aad
shrb
inc
pop
mov
mov
insb
aas
lock
jno
ficoms
adc
mov
inc
loopne
push
pusha
mov
dec
js
push
xchg
pop
daa
cltd
xor
cmp
mov
jns
cmp
mov
jns
push
mov
repnz
dec
cld
lcall
insl
scas
out
xchg
int3
and
mov
xor
fistl
cld
push
iret
cltd
cli
mov
jmp
mov
arpl
add
pop
cmp
lcall
jne
std
jae
shl
pop
jl
je
jge
lcall
jno
mov
das
add
fdivr
jl
jecxz
addl
ds
stos
xor
mov
daa
dec
sar
xor
mov
sub
out
inc
dec
loop
sarb
pop
or
cmp
shrl
aas
je
jnp
dec
mov
mov
or
mov
jae
sub
lods
pop
mov
lcall
adc
sub
fdivrl
add
pop
sbb
or
je
mov
pop
dec
lret
dec
lock
es
sbb
push
imul
insb
dec
fidivs
fstpl
dec
test
cltd
insl
push
cmp
xchg
cmc
data16
rcrb
sub
xchg
rcrb
cmc
xlat
sbbl
js
clc
xlat
jae
testb
jne
or
and
xor
add
lods
sub
movsb
dec
add
mov
mov
sti
rcll
aaa
dec
rorb
lret
sbb
jae
mov
int3
aam
ficoml
pop
mov
mov
sub
mov
cmp
jge
xor
mov
outsl
jp
out
dec
insb
inc
xlat
inc
jne
pop
mov
add
xor
psubb
and
mull
in
sbb
roll
adc
mov
add
push
pop
inc
xor
call
push
sub
pushf
clc
loop
cltd
loope
xchg
cmp
pop
inc
divps
push
icebp
adc
pusha
aam
cld
adc
sbb
adc
mov
push
pop
pushf
pop
xchg
mov
and
sub
xchg
inc
mov
mov
loopne
push
mov
shr
jno
push
clc
and
stos
dec
jmp
ret
adc
push
mov
sbb
cld
lea
jmp
inc
xchg
or
lcall
insl
add
jmp
mov
xchg
scas
test
xchg
shrl
movsb
hlt
cld
jle
adc
or
push
insb
fsts
into
inc
mov
push
sub
push
pop
jmp
adc
cmpsb
cwtl
mov
scas
sbb
in
lret
fiaddl
lods
inc
in
jg
shll
aam
pop
push
rorl
ret
std
adc
mov
pop
bound
cmp
std
lods
xor
cmp
test
das
sub
mov
and
mov
cmpsl
sbb
roll
insl
jnp
lea
xor
xor
sti
mov
mov
jmp
outsl
frstor
mov
ja
fadd
lret
das
push
mov
cmc
push
aad
loope
mov
cmp
xor
mov
in
cmp
test
jo
add
mov
imul
lock
popa
cmp
ret
data16
jl
mov
or
pop
pushf
iret
mov
addr16
or
xor
lods
pusha
and
out
test
dec
hlt
ret
dec
jns
enter
mov
sbb
ja
push
xorb
iret
fsubp
and
mov
adc
repnz
jg
jl
push
aam
cmp
aas
push
and
pop
cmp
jbe
mov
jl
rorl
push
cltd
dec
mov
adc
lea
gs
fldl
push
das
cmpsl
rclb
ret
cld
ss
sti
lea
stos
rcr
popa
fbld
and
sbb
jo
je
and
aaa
mov
lock
rsm
lret
or
add
decl
jg
cmp
mov
int3
sbb
dec
xchg
leave
test
cs
add
xchg
mov
or
dec
lret
dec
or
outsb
and
les
and
bound
cmc
inc
or
adcb
mov
mov
mov
cmc
xchg
jge
xchg
dec
pop
sub
jbe
pop
lret
add
stc
dec
shl
loope
push
add
stos
mov
fdivrs
lock
push
icebp
nop
or
cmp
pop
adc
int
ljmp
mov
inc
mov
jl
mov
js
jge
ljmp
cmp
lcall
repz
dec
inc
add
popa
or
scas
mov
je
fwait
or
stc
mov
sbb
fcmovnu
cmp
sbb
or
sub
jb
lea
mov
sub
lahf
outsl
mov
mov
icebp
scas
xor
mov
mov
leave
movsb
dec
enter
lahf
cmp
cmp
fldl
push
loope
into
push
xor
sbb
push
jo
into
add
or
mov
mov
dec
jns
pop
gs
int
sub
xchg
test
jle
ret
pop
popf
mov
jno
mov
or
dec
jmp
add
cmp
sub
lods
es
jne
jecxz
andl
mov
cs
push
aaa
mov
lret
sbb
push
pop
ret
lcall
cmpsl
pop
cmp
dec
outsb
aas
jae
xor
sti
fwait
into
jp
out
adc
cmp
dec
ficompl
mov
xchg
fcompl
pop
dec
push
lods
loope
data16
xchg
in
iret
movsl
repz
int3
xlat
jmp
sbb
mov
xchg
ss
fsubrs
lret
test
sbb
movl
loope
sub
pop
sub
cmc
lds
inc
sub
fidivl
scas
and
repnz
jg
out
pop
ror
inc
pop
hlt
mov
das
inc
iret
loopne
fiaddl
aas
xchg
stos
mov
pop
gs
sub
and
sbb
lret
mov
arpl
or
xor
cmp
cld
arpl
divl
pop
into
lahf
cltd
jnp
cmpl
mov
jb
mov
cs
mov
xchg
fucomi
dec
lods
lret
and
fwait
adc
xchg
cmpsl
pop
push
push
lea
rclb
fisubrl
mov
je
jp
dec
add
cld
std
flds
dec
das
cmpsl
clc
push
mov
jnp
out
mov
add
lods
xchg
mov
out
cmpsb
rorb
pop
clc
js
sbbb
adc
pusha
sbb
cs
test
lret
mov
in
push
sub
jne
xchg
sarl
mov
pop
adc
jmp
sarb
mov
xlat
movsb
sbb
pop
jne
xor
or
xchg
std
push
bound
loope
es
mov
sub
imul
mov
jecxz
cmp
adc
cmpsb
ret
mov
xchg
jp
aaa
popf
je
nop
mov
les
push
xor
mov
in
nop
adc
xchg
fistpl
ja
mov
add
fxch
mov
mov
aas
and
sahf
dec
mov
daa
pop
bound
push
cmp
jb
shrl
adc
stc
andb
stos
add
fistpll
mov
pop
dec
adc
inc
adc
dec
cmp
mov
sub
mov
je
psraw
rorl
outsl
sub
dec
push
add
int
push
jmp
iret
mov
push
add
je
addr16
cmp
push
sbb
pop
mov
test
push
xchg
and
and
dec
ret
leave
mov
pop
ss
outsl
jecxz
mov
push
hlt
mov
mov
rorb
insl
pop
pmullw
outsb
ss
sub
sbb
jmp
xchg
jae
lods
jmp
inc
dec
mov
jecxz
mov
xchg
iret
jo
pop
movsl
jnp
lahf
add
loope
test
mov
jbe
out
or
inc
mov
xchg
out
mov
add
or
in
pop
dec
xchg
jg
xchg
enter
cmp
sbb
mov
xor
cmp
fadds
out
test
clc
xchg
loop
or
push
ret
lds
sbb
cmpsb
sbb
mov
mov
in
jmp
mov
fldl
dec
add
fcoms
mov
adc
mov
pop
data16
cwtl
fdivrp
jb
idivl
std
pop
lock
rcrl
andl
out
dec
enter
and
sub
dec
push
loope
scas
in
notb
and
mov
loop
xor
jae
andl
mov
mov
cltd
fbld
add
int3
test
bound
inc
popa
repnz
pop
std
xlat
sbb
lahf
or
sbb
es
lods
cmp
pop
xlat
aas
mov
jp
aad
rcr
rcr
fwait
addb
xor
rol
pop
andl
ds
mov
stc
lods
hlt
lahf
mov
sbb
in
dec
adc
mov
jmp
jae
xchg
lods
dec
dec
mov
in
jle
sbb
sub
mov
dec
adc
sbb
inc
cmp
or
imul
mov
lea
icebp
mov
xor
cmpsb
mov
out
lods
comiss
movsl
jmp
add
loope
je
jns
adc
pop
push
xchg
cs
stos
and
aaa
mov
ss
js
bound
std
xchg
adc
sbb
and
insb
mov
outsb
sbb
inc
cmp
and
adc
push
pushf
bsf
out
cltd
inc
dec
push
scas
lret
xor
cmp
mov
adc
int3
cmp
iret
icebp
mov
nop
fiadds
fwait
das
out
mov
call
add
daa
jae
sar
ja
test
roll
xchg
call
out
xor
pop
jle
pop
pop
pushf
movsb
jecxz
mov
push
ret
and
mov
add
lods
jle
inc
jnp
cmp
jmp
dec
loope
das
xchg
ret
pop
loop
inc
repnz
pop
call
mov
jge
test
or
scas
shr
ffreep
call
bnd
in
xor
pop
mov
loope
mov
int
adc
lods
mov
push
add
dec
sbb
test
test
fwait
inc
xorl
stos
mov
adc
mov
jnp
loopne
nop
xchg
push
sub
leave
out
mov
add
icebp
xor
cmpl
dec
popa
test
jge
scas
fwait
inc
in
outsb
mov
cmp
sarl
shlb
xor
dec
mov
in
jo
or
sub
jmp
setg
fwait
mov
adc
inc
or
cmpb
jmp
dec
mov
lret
shrl
test
movsb
and
stos
push
jge
add
out
popf
xor
ljmp
sahf
xor
jge
push
mov
and
aas
arpl
popa
xchg
lcall
mov
pop
mov
rcr
cld
imul
pushf
xor
cmpsb
mov
adc
fdivl
daa
add
aas
xchg
insb
sahf
sub
dec
sahf
aas
cmc
jl
mov
cmp
je
cmp
cmc
mov
dec
ljmp
jecxz
arpl
push
add
add
or
shll
jmp
std
xchg
inc
pusha
fdiv
lods
test
push
lock
imul
jg
xchg
xchg
mov
in
jb
cmp
pop
sbb
movsb
sbb
outsl
out
push
dec
inc
inc
popa
mov
jns
push
sahf
js
outsl
adc
movsb
dec
insb
mov
int3
sahf
mov
andl
pop
pop
cmp
cmp
xor
add
aaa
negb
cmp
fisubs
pop
in
ljmp
pop
test
loop
das
insl
add
cmpsb
test
sbb
xchg
int
mov
dec
rcll
xor
stc
push
lock
jne
out
dec
dec
mov
xchg
lock
in
push
pand
xor
in
cmp
cli
movsb
xchg
movsb
mov
out
xchg
addl
cltd
popa
cmp
xchg
pop
stos
cmc
mov
sub
loope
push
sar
daa
addr16
test
xchg
jp
fpatan
push
stos
mov
pop
or
adc
pusha
test
and
jno
insb
icebp
movsl
push
cmp
mov
lea
sbb
clc
hlt
mov
lock
sti
jg
jno
lahf
or
mov
lock
std
bnd
adc
push
sub
int3
xchg
push
adc
pop
bound
and
fstl
jecxz
andb
pop
mov
jmp
fisttpl
cwtl
jp
xor
in
inc
cli
orb
cmp
and
shlb
xor
rorb
add
inc
jg
mov
rorl
mov
mov
icebp
les
mov
ja
ljmp
dec
add
call
add
jno
in
lret
orl
rcr
push
jae
mov
mov
push
aad
pop
cmp
adc
sbb
movsl
lock
cmp
sbb
das
inc
loopne
jecxz
rcrb
dec
pop
in
inc
dec
sarb
fnstcw
sub
cmp
add
stos
ds
and
jp
ss
daa
iret
popa
mov
cmp
jp
jl
iret
xlat
lar
daa
lret
sub
jl
nop
gs
xorb
jae
push
jecxz
clc
jp
push
popf
sbb
add
mov
lds
sbb
int3
loope
xor
movb
jnp
sbb
adc
xor
pop
fwait
rcl
test
in
pop
mov
or
iret
mov
add
jge
insl
mov
addl
cmp
enter
pop
pop
jno
leave
fadds
pop
xor
jecxz
mov
push
push
cmp
call
gs
je
lahf
fcomps
in
or
cmp
and
add
or
mov
cmpsb
fimull
push
push
or
fdivs
pop
pop
dec
mov
outsl
add
clc
mov
jne
andl
jo
jne
js
sbb
leave
loop
lret
jl
arpl
mov
sti
add
xor
ret
xchg
jp
xor
xor
lods
jbe
dec
jge
js
mov
sub
fnstenv
jae
ret
aad
inc
cmp
scas
and
cld
adc
int
ficompl
movsb
fisubl
mov
idivb
and
mov
je
movsl
dec
les
mov
out
cltd
and
shlb
ret
sbb
lret
fnstenv
repnz
dec
jge
mov
xor
stos
lret
sahf
scas
test
xor
mov
pushf
sub
ss
fldl
xlat
pop
in
dec
push
sahf
fisttps
rcr
adc
call
dec
jnp
cltd
outsl
add
movsb
inc
mov
cwtl
mov
fwait
or
ds
imul
jo
mov
and
fsubp
scas
in
push
sbb
mov
arpl
sbb
dec
hlt
or
xor
xor
add
ret
aam
pop
pop
inc
test
sbb
popf
jge
mov
xchg
xor
push
jmp
lods
dec
cmp
cmp
mov
jae
ret
mov
add
sti
and
pop
enter
mov
inc
stos
pop
cmc
fwait
stos
into
mov
out
pop
adc
scas
inc
inc
cmp
pop
js
inc
pusha
call
cli
mov
mov
dec
mov
test
adc
adc
push
pushf
jle
add
and
mov
in
out
call
sarb
xchg
out
sub
subl
pushf
and
sub
inc
stc
test
cmp
fs
aas
and
les
daa
sub
lahf
lods
inc
jo
jbe
in
popa
xor
mov
xchg
fsts
add
mov
xor
mov
jns
movl
lock
jbe
rcr
and
rolb
pushf
jge
push
xor
stos
fdivrs
clc
shrl
pop
jg
and
ret
roll
jp
repz
aas
xchg
xchg
inc
push
movsb
out
mov
cmp
inc
leave
leave
pop
mov
xor
xchg
jg
xchg
leave
mov
cli
call
test
cmpsb
movsb
pushf
je
inc
sbb
dec
fadds
cmpsl
ret
pusha
adc
je
ficoml
pop
mov
xor
ljmp
shrb
xor
and
stc
test
out
push
mov
inc
mov
negl
sbb
jp
or
psubusw
lock
add
mov
out
repz
shrl
pop
xchg
xchg
inc
dec
jns
lods
loopne
push
adc
int3
jno
xchg
out
or
fistpl
movsl
fwait
imull
add
dec
rcll
or
repz
imul
sub
xchg
mov
cmp
sti
test
in
cmp
rcll
add
inc
jecxz
sub
addr16
xchg
addb
or
dec
jp
dec
test
pop
outsl
mov
insb
xchg
mov
lret
xor
xchg
mov
das
je,pt
shll
nop
cwtl
loope
sub
mov
jp
jle
arpl
jne
cmp
addl
jae
aaa
cmc
repz
mov
mov
cli
loope
xor
add
orl
fstl
xor
out
shrl
das
rcrl
add
sub
imul
sub
dec
mov
cli
jns
inc
sti
outsl
xchg
mov
jns
ret
cmpsb
cmp
cmp
ret
add
push
stos
lds
out
dec
mov
push
push
mov
push
lret
test
stos
das
sti
adc
mov
scas
sbb
mov
clc
sub
mov
insl
fnsave
jno
shlb
pop
pushf
stos
mov
inc
addr16
aad
lcall
add
out
inc
adc
cli
ljmp
push
popf
xlat
mov
clc
or
out
arpl
scas
sbb
cwtl
xchg
loopne
pushf
pop
sbb
imul
test
into
sbb
pop
xchg
cmp
jp
push
fmuls
in
in
stos
adc
sub
sub
fldenv
adcl
push
add
andb
lcall
fdivrp
mov
roll
cmp
jle
push
mov
pusha
jmp
inc
or
dec
jecxz
bound
roll
xchg
imul
jp
mov
or
jno
outsl
jb
add
insb
mov
dec
shll
push
pop
rolb
cwtl
sti
pop
sub
faddl
xchg
lds
popf
gs
lds
push
mov
mov
jns
xchg
sti
dec
fstpt
mov
divl
sub
push
aam
inc
notl
or
dec
out
out
mov
push
fldenv
insl
and
int
cmp
clc
fisttpll
sub
loop
ret
js
dec
call
jns
add
jae
fdivrs
sbb
shl
inc
dec
sbb
and
cmpsl
adc
push
adc
dec
and
aaa
je
sahf
test
aad
aas
pop
jnp
in
xor
cmc
rorb
jmp
or
pushf
jb
cmp
je
cmpl
jb
cmp
push
mov
rolb
pop
mov
and
xchg
mov
out
and
call
mov
mov
pop
imul
dec
push
mov
mov
xchg
adc
movsb
add
inc
pop
push
lcall
lret
ss
leave
pop
test
mov
inc
cmc
xor
lock
lea
rolb
in
add
pop
popl
pop
nop
mov
aad
popf
mov
in
cld
cltd
pop
xor
xchg
ljmp
scas
not
lret
mov
jmp
icebp
lret
mov
fisubrs
sar
data16
and
cmp
je
mov
pop
ja
in
mov
cmp
mov
out
in
inc
lods
imul
mov
mov
mov
lret
xor
mov
mov
pushw
or
outsl
mov
inc
aam
xchg
xor
into
jle
movlps
fsubr
push
cmp
jne
aad
shll
mov
test
jo
mov
mov
cwtl
or
popl
pop
mov
push
jl
std
add
in
stos
sub
clc
push
mov
inc
jne
in
xlat
push
and
int
negl
sti
jecxz
dec
jle
or
bound
je
lret
icebp
fistpll
ja
dec
sbb
insb
xchg
cmp
fidivrl
outsl
xchg
leave
lahf
cmpl
test
and
dec
lods
loope
adc
icebp
jecxz
sbbl
out
cmp
or
outsl
ja
mov
jle
cli
aaa
lcall
testl
cmp
pop
sub
inc
cmpsl
test
mov
xchg
jno
cmp
test
in
cmovge
scas
clc
and
cmovno
push
jae
sub
addr16
insl
sbb
addb
jmp
mov
stc
das
or
std
testb
js
stos
fxch
xchg
push
adc
aas
cmc
mov
xor
push
scas
xor
jbe,pt
sahf
ja
and
inc
imul
and
xchg
outsl
pop
daa
mov
pop
enter
fwait
mov
jmp
dec
mov
cmpsb
push
pop
pop
cmp
mov
add
dec
stc
or
jg
negb
mov
outsl
xor
dec
cwtl
std
sub
jmp
push
in
std
scas
inc
and
or
subb
and
shl
scas
data16
stc
add
addr16
icebp
out
pop
pop
ds
js
dec
fiaddl
mov
stos
stos
pop
pop
fldt
js
rorb
push
loopne
push
sub
inc
mov
js
cwtd
imul
xchg
insl
and
pop
subb
inc
sbb
aam
les
insb
jns
pop
push
popf
sub
popf
jl
jne
xchg
push
or
xor
or
jb
mov
push
icebp
out
sub
sub
cmp
pop
mov
cmp
lods
test
fs
rorb
ja
cmp
sbb
cli
pop
lcall
sbb
cwtl
inc
cld
jle
dec
in
ds
test
shrb
cltd
je
dec
cwtl
push
jbe
hlt
cmp
push
ret
es
lock
insl
mov
shlb
xchg
push
mov
mov
xor
test
lret
leave
dec
push
lcall
inc
leave
fs
pop
decb
shll
add
adc
xchg
pop
xlat
cmp
mov
mov
roll
cmp
test
arpl
mov
pushf
loop
enter
rcrb
fnstsw
push
mov
sub
imul
adc
mov
test
pop
out
mov
aad
xchg
leave
popa
sbb
adc
jo
daa
jecxz
sub
ret
xchg
rcll
push
dec
jae
pop
dec
fwait
mov
mov
dec
cwtl
pop
push
dec
sub
fs
testl
sbbb
pop
xor
loopne
loopne
cmp
arpl
push
inc
test
adc
or
lahf
stos
out
addr16
pop
xor
xor
xchg
xlat
inc
les
loope
les
sub
mov
jp
sbb
out
imul
arpl
push
mov
cwtl
or
daa
xor
xlat
and
add
jge
xor
lahf
sarb
jmp
gs
adc
mov
sub
cmp
subb
adc
and
mov
sub
jg
jge
or
xor
les
stos
insl
pop
ja
xor
fdivs
xor
popf
les
mov
add
pop
mov
pop
push
jmp
inc
ds
jecxz
push
lcall
sahf
enter
push
pop
fdivr
inc
repz
scas
mov
pop
imull
pop
add
inc
inc
ret
jne
loopne
inc
outsl
dec
or
test
pop
int
xor
cmp
outsl
ret
dec
setbe
sub
mov
dec
shll
scas
leave
rolb
jmp
and
xor
jmp
sbb
jmp
int3
outsb
test
loop
cmp
add
lds
adc
inc
push
jecxz
out
das
inc
or
in
cwtl
in
icebp
in
leave
fdiv
mov
daa
mov
pop
dec
shll
out
aam
xor
in
cs
push
mov
cmp
sub
sub
aaa
sub
daa
fwait
mov
pushf
adc
lahf
sti
nop
dec
mov
adc
and
jns
fwait
movsb
in
cli
popa
pop
dec
jle
daa
mov
xchg
je
loop
lret
stos
fists
adc
psubw
into
std
jo
sub
loopne
cmp
jb
pop
mov
daa
shl
imul
push
popa
test
pop
lahf
xchg
in
iret
iret
ss
and
pusha
push
sahf
mov
jbe
lock
scas
and
sets
inc
neg
stc
ljmp
fcomps
outsb
sbb
xor
mov
pop
dec
inc
mov
js
push
roll
es
mov
fmull
cwtl
pop
xor
cli
sbb
adc
inc
xchg
adc
in
aaa
testl
in
sub
mov
and
xchg
mov
bound
ror
push
data16
insb
out
lods
ret
mov
push
test
inc
sub
rclb
cli
daa
inc
xchg
inc
cli
faddl
sarb
push
popa
out
add
jae
scas
shl
out
dec
sbb
bound
jbe
fstps
pop
aas
rol
jmp
negl
dec
rorb
and
dec
data16
out
nop
daa
out
call
xor
xchg
out
stc
and
into
pop
ds
shr
and
mov
adcb
rol
push
add
push
in
mov
scas
xor
push
ds
xchg
push
subb
add
pushf
stos
push
mov
jb
or
sbb
nop
inc
mov
add
push
xchg
in
push
and
movb
dec
gs
lods
mov
dec
xlat
popa
sub
xchg
cmp
je
je
data16
lea
mov
jp
je
movsb
fs
adc
cmp
adc
ja
adc
pop
pop
sbb
pop
pop
into
ss
push
sub
push
push
jnp
imul
xor
xchg
shlb
xlat
lahf
mov
ret
jbe
pop
jnp
outsl
scas
inc
lods
mov
rclb
gs
dec
jae
add
rclb
inc
and
stos
xchg
cmpb
ret
dec
call
sar
xchg
out
adc
mov
daa
int
add
push
mov
int3
and
and
into
int
jp
dec
jb
xor
call
sub
sahf
push
rcl
cmp
pop
popa
sbb
dec
xor
scas
shl
push
call
je
cmp
imul
adc
and
push
popa
add
out
sbb
xorb
mov
ja
roll
popa
jl
mov
mov
leave
pop
adc
push
imul
fsubrs
push
addr16
or
sbb
shrl
ss
jb
or
cmp
dec
fisubl
add
cmp
lret
cmp
sahf
pop
lods
ds
sub
imul
add
push
mov
pop
or
sbb
sbb
out
dec
jbe
and
add
mov
lret
repnz
dec
and
jno
sub
mov
ljmp
mov
push
call
hlt
sub
or
jbe
jle
aas
fistpl
outsl
mov
addr16
bound
fldcw
in
push
and
xorb
cmp
and
mov
mov
mov
cld
inc
orl
in
dec
mov
or
xor
sbb
rcll
test
xor
stos
sub
lahf
or
push
xchg
jo
and
fmull
icebp
adc
push
mov
movsb
es
push
push
out
and
cld
mulb
cmp
add
shlb
cmp
subl
xchg
add
into
cmp
mov
add
push
imul
mov
sub
cmp
aas
shll
movsbl
jge
aaa
push
jb
inc
loopne
insl
sbb
mov
jecxz
mov
inc
test
jmp
jle
pop
adc
cmp
xchg
mov
test
out
sahf
mov
mov
mov
rcrl
adc
insl
fwait
jno
or
or
pusha
sbb
inc
pop
repz
cwtl
ss
pop
rolb
mov
dec
sub
jl
cmp
sbb
icebp
add
pop
out
xlat
and
mov
inc
push
or
stos
js
mov
mov
inc
subb
lods
addr16
addl
xor
push
add
lock
cmp
out
repz
mov
mov
or
xor
addr16
mov
fimull
push
xor
cltd
movw
jne
sub
shlb
adc
loope
dec
mov
xor
into
push
dec
addb
or
jne
sub
leave
aam
clc
mov
push
mov
cmp
loopne
mov
js
mov
or
lds
dec
xor
jnp
cmc
mov
and
rcl
and
movsb
int
or
setl
movsb
daa
daa
out
jo
rolb
loope
hlt
stc
sub
lds
loope
imul
dec
mov
inc
sti
je
imul
mov
pop
hlt
mov
icebp
popa
mov
bound
sarb
sbb
int3
gs
shrb
fwait
or
mov
addb
push
dec
xor
xchg
inc
mov
dec
push
and
lahf
xchg
loope
sub
cmp
in
add
fcmovnu
das
sahf
es
and
xor
bound
xchg
fs
pushf
daa
in
sbb
mov
or
dec
insb
in
dec
mov
pop
sub
dec
in
fwait
mov
xor
pop
int3
aas
jns
cmp
sub
incl
xor
mov
in
mov
aaa
adc
daa
jae
int3
popa
mov
push
pop
sub
cltd
mov
xor
xchg
push
xchg
mov
and
mov
or
push
push
push
sbb
icebp
lods
mov
push
inc
mov
mov
lods
and
adc
aad
scas
outsb
shr
mov
jno
mov
pop
xchg
pop
add
into
pushf
dec
sbb
ret
ret
or
in
rorl
sbb
mov
js
repz
xchg
fs
fcoml
dec
xor
fimuls
shrb
pop
mov
dec
subb
mov
mov
loopne
mov
cltd
mov
jne
jns
popl
loop
stc
clc
shll
loope
cmpb
out
loopne
adc
adc
push
lret
add
dec
shll
divl
popf
popf
inc
ficompl
fcomp
mov
jnp
aad
and
sub
lods
xor
jl
push
lods
iret
cltd
stos
adc
addr16
cmp
das
or
stos
in
imul
cwtl
lret
inc
mov
subl
push
jmp
and
fimuls
fstpl
rcl
out
fwait
mov
sub
add
mov
outsl
adc
dec
das
imul
and
std
mov
push
xor
cli
xchg
or
jo
add
or
fdivl
clc
mov
xlat
ss
xchg
dec
and
movb
sahf
pop
into
inc
pop
push
jmp
push
sbb
ficoms
mov
mov
clc
ds
push
cmp
xchg
mov
push
cmp
cmp
into
pop
inc
or
fcoms
inc
mov
rorb
out
xor
add
jge
xor
xchg
repnz
jg
and
call
fidivs
inc
fs
xchg
sub
into
lcall
add
mov
xor
aas
mov
pop
in
xlat
das
jle
aas
insb
outsl
ljmp
sub
notl
orb
dec
adc
rol
sub
mov
daa
dec
xor
jno
pop
adc
icebp
roll
jle
imul
xchg
shl
packssdw
mov
call
mov
xor
xor
insb
adc
and
into
nop
inc
xor
jb
xor
cli
sbb
test
lret
movsl
lcall
subl
stc
into
jo
and
or
adc
nop
add
cltd
shl
jmp
sahf
icebp
jne
das
mov
daa
ljmp
repnz
loop
xlat
adc
pusha
rcrb
jo
jg
mov
arpl
xor
mov
negl
pop
xchg
stos
cmpsb
or
arpl
push
divb
mov
cmp
xchg
push
dec
rcll
mov
mov
scas
mov
cs
iret
xchg
xor
sub
add
mov
scas
adc
lods
jl
lea
jo
std
xchg
lods
lret
cmc
and
jge
icebp
jne
jb
xchg
fstpl
mov
lcall
stos
fmul
call
jge
dec
js
xchg
jno
mov
enter
jmp
xor
pop
lock
xchg
in
lds
push
outsb
fcmovu
jmp
jle
push
lret
scas
mov
lea
mov
iret
mov
dec
aam
push
out
int
stos
inc
sbb
mov
xchg
movsb
inc
int
std
inc
test
loopne
push
jle
leave
int3
sbbb
shll
lret
sub
rol
jae
adc
sub
cmp
or
pushf
fildl
addr16
out
mov
push
pop
clc
lods
dec
push
mov
loopne
in
fcompl
ja
mov
clc
jb
sbb
sub
ss
mov
call
rep
ss
dec
sub
ds
hlt
mov
mov
xor
or
in
les
push
movsl
push
dec
fbstp
out
cmp
mov
or
xchg
xor
mov
in
push
lret
push
out
mov
push
dec
sti
mov
icebp
fwait
mov
mov
and
push
andl
stos
or
outsb
insb
sub
mov
push
mov
add
in
adc
xchg
push
mov
adc
cltd
mov
mov
dec
mov
mov
push
test
pop
les
jg
pushl
mov
ds
or
pusha
movsl
jbe
xlat
or
jle
cmc
mov
arpl
ffree
pop
setns
cmp
sub
push
adc
testb
sub
ret
xor
andb
pusha
mov
outsb
stc
jo
jl
cwtl
dec
insb
inc
inc
notb
stc
pop
and
ds
fnstcw
sbb
arpl
test
cmp
popf
cmp
test
sub
ret
mov
lcall
lcall
inc
push
sbb
mov
jp
js
leave
cmp
in
stos
inc
pushf
or
mov
fiadds
mov
mov
ret
incl
popf
jnp
mov
cmpsb
sbb
push
dec
dec
push
mov
shr
pop
pop
xchg
enter
mov
mov
mov
xor
in
mov
inc
addr16
imul
push
fbld
jnp
mov
jmp
adc
jl
push
add
dec
sbb
xlat
int
pusha
ss
push
ds
lcall
nop
fstpt
mov
jae
hlt
and
jae
ret
test
push
add
mov
call
ret
ret
js
ljmp
xchg
cwtl
inc
aad
popf
pushl
cld
aad
out
jae
pop
jb
out
cmp
adc
outsb
add
fldt
stos
insb
pushf
add
xchg
addl
push
cmpsb
fcoms
ljmp
sub
inc
es
loope
fistps
push
push
out
loopne
cltd
push
add
lcall
popa
pop
add
cmc
fwait
adc
ljmp
dec
dec
pop
push
pop
mov
adc
xchg
rolb
add
enter
dec
cmpsl
pop
jb
fnstenv
adc
stos
popa
lcall
mov
add
int
popa
pop
movsb
mov
dec
mov
mov
adc
push
out
adc
sub
add
sbb
xchg
js
pushf
pop
jnp
mov
push
stc
pop
add
bound
mov
add
popf
xlat
dec
into
pusha
jnp
in
in
dec
xchg
inc
jmp
or
pop
in
cmpsb
jle
je
cli
add
in
pop
dec
inc
arpl
les
testl
lock
ljmp
and
shr
int
aas
movsl
cli
shlb
and
int3
cmc
movsb
push
mov
in
leave
sub
inc
push
jnp
adc
lcall
and
je
cmp
js
dec
sbb
pop
mov
push
xor
imul
jbe
jnp,pn
push
stc
mov
movsl
arpl
fs
mov
mov
jmp
push
ds
aam
ret
mov
cmp
jb
rorl
pusha
test
xor
loop
push
mov
cmp
daa
sbbl
mov
add
fpatan
mov
int
or
sbb
into
lahf
cmp
pop
mov
pop
sbb
aad
add
test
fwait
sbb
pushf
pop
xor
lock
adc
ja
pushf
in
pushf
iret
aas
xor
mov
push
push
and
insl
pop
add
dec
fiaddl
fwait
xor
mov
jmp
sbb
jge
jae
shlb
scas
pop
stc
das
cmp
cmp
sbb
sbb
adc
jecxz
andb
jb
pusha
mov
ljmp
movsb
js
imul
fcoml
add
xor
into
sub
orb
mov
imul
jno
xchg
dec
sbb
add
dec
inc
sub
int3
cs
std
gs
lods
dec
adc
adc
iret
mov
je
push
jne
js
lock
es
inc
dec
lahf
divl
ret
xor
fwait
jo
mov
fisubl
and
out
xchg
and
push
dec
in
loopne
test
mov
inc
addr16
rcll
inc
xor
cltd
add
enter
add
pop
pusha
aaa
and
mov
mov
push
and
sub
mov
adc
cmc
xchg
loop
inc
lods
and
out
les
test
inc
dec
xor
xor
insb
fsubrp
jo
stc
pop
mov
inc
cltd
cmc
leave
clc
xor
sbb
or
xchg
lods
call
dec
dec
adc
add
jl
mov
sub
mov
mov
fimuls
fidivs
push
cmp
xor
in
loopne
push
lret
push
shl
inc
insb
popa
test
cmp
jg
rcrl
in
adc
cmp
push
jecxz
out
out
mov
xor
or
or
fdivl
xchg
sub
mov
push
inc
test
in
dec
jnp
mov
pop
ss
bndldx
jecxz
push
mov
inc
dec
sbb
push
jo
jno
js
cmpsl
sub
dec
divl
fs
pop
scas
xchg
add
xor
cmpl
movl
mov
mov
and
sahf
cltd
mov
into
cmp
inc
test
and
rol
xchg
in
mov
and
fdivl
mov
inc
rcr
fstpt
mov
xchg
lods
jae
in
xor
outsl
jmp
fisubrl
insb
cmpsb
xor
jne
adc
in
push
cmpsl
inc
mov
shl
lret
pop
mov
adc
and
loope
popl
fsubrs
pop
jg
pop
pop
push
inc
pop
push
test
inc
addr16
xchg
std
cli
arpl
stc
mov
ret
cmpsb
outsb
inc
pop
adc
jg
mov
aaa
arpl
rcr
or
out
insb
daa
sub
mov
inc
inc
dec
add
jnp
outsb
pushf
stos
xor
mov
jp
xchg
insb
int3
adc
dec
mov
loop
and
cltd
mov
mov
jbe
xchg
rcll
pop
and
cmp
repnz
pop
adc
subl
push
xchg
mov
fcmovnu
jne
mov
dec
icebp
sub
and
outsb
xor
fstpl
adc
mov
or
push
mov
xor
fucom
fcomp
loopne
push
adc
dec
pusha
std
aam
mov
mov
mov
sbb
loop
xor
xchg
pop
inc
int3
daa
pushl
add
mov
in
mov
enter
xchg
and
push
cmpsl
into
fwait
push
dec
lret
fimull
fcmovb
sbb
and
jl
and
incb
addb
scas
sbb
xor
mov
nop
xchg
and
loopne
push
lock
sub
test
inc
push
fistl
and
sub
cmp
cld
testl
pop
es
mov
out
xchg
dec
and
ror
aad
mov
hlt
or
push
ljmp
or
ret
sub
cmpsl
and
xchg
sub
lret
or
cmp
icebp
arpl
pop
cmc
ficompl
inc
xchg
cld
inc
or
mov
push
mov
cs
push
es
sti
push
out
inc
inc
movsl
adc
and
push
jl
cmpsb
addr16
cmp
and
mov
xchg
mov
scas
and
cs
add
leave
leave
cld
arpl
icebp
add
sti
insl
mov
daa
ds
xor
stc
in
fdivl
push
push
push
cmp
fisttpll
lcall
out
out
mov
xchg
xor
dec
xchg
test
jmp
call
filds
and
jns
jo
andb
ds
das
xlat
sub
shrb
mov
xchg
jecxz
enter
scas
add
fiadds
daa
xchg
cmp
or
cmp
shlb
ss
cmp
negb
bound
inc
xor
sbb
mov
mov
dec
mov
int
xor
stos
mov
int
test
xor
jecxz
xchg
lock
xchg
cmp
ljmp
imul
inc
shll
ljmp
xchg
gs
out
sarl
popf
out
jns
xchg
daa
sub
fdivs
mov
adc
sbb
pop
jae
test
nop
data16
cmc
push
imul
lds
mov
test
xlat
mov
mov
jnp
pop
cmp
sub
sub
lret
xchg
rcrl
jns
mul
movsb
test
jnp
xor
loopne
ret
or
mov
xchg
mov
sbb
inc
gs
mov
lods
lcall
sbb
sbb
test
xchg
add
jne
int
es
arpl
lods
sub
jmp
into
out
rcr
jecxz
pop
add
sti
xor
jne
and
add
repnz
sub
cltd
mov
fbld
leave
insl
inc
xor
or
ja
push
lcall
pushf
push
pop
mov
mov
jmp
inc
xor
inc
or
fcoms
mov
lods
dec
in
das
stos
fidivrs
add
xor
jbe
and
sub
lods
scas
lea
sub
lods
or
or
add
mov
fs
mov
out
adc
or
fs
xor
cmp
bound
movsb
xor
and
daa
pop
ret
aam
test
jle
shll
add
sbbb
aad
push
sbb
lahf
sti
adc
xor
xchg
ret
sub
enter
scas
addb
adc
mov
push
pop
daa
jnp
cwtl
loopnew
daa
dec
pop
scas
xchg
lea
jmp
sbbl
adc
xchg
push
leave
dec
mov
xchg
imul
xchg
jl
fildll
xor
fnsave
imul
add
outsl
mov
inc
test
movsl
jg
xor
pop
pop
inc
jge
addr16
jle
adc
sbb
out
orb
push
fists
push
xor
stos
fldcw
or
test
rclb
adc
xchg
out
jmp
jg
add
jg
or
ja
pushf
pop
movsl
js
xorl
xor
insl
xor
and
or
inc
and
std
inc
outsl
popa
testl
mov
cmp
bound
call
aam
hlt
lahf
and
and
xchg
lods
adc
add
shll
bound
mov
movsb
xchg
dec
push
enter
and
or
mov
test
ss
mov
dec
xlat
add
in
mov
lds
stos
dec
add
add
jl
jecxz
inc
data16
cmp
les
repnz
or
shr
insb
mov
or
xor
fdivrl
xchg
or
mov
pop
dec
pop
sbb
int3
dec
push
sbb
or
clc
in
lds
enter
dec
insl
out
sub
arpl
pop
movsl
and
mov
sbb
dec
into
fimuls
pop
inc
cmp
lahf
jl
aas
cmp
mov
ljmp
adcl
push
loope
sub
jle
ljmp
jb
mov
jb
cmp
ficoms
push
or
xchg
cmp
mov
fs
jmp
dec
dec
cmpsl
pop
cwtl
das
jmp
cmp
mov
pop
mov
roll
dec
adc
mov
flds
vcvtss2sd
outsb
or
inc
cli
mov
or
sbb
or
xor
adc
add
push
or
sar
ret
jae
loop
pop
add
inc
ss
push
fxch
inc
out
out
std
mov
lea
cmp
into
jo
fisttpl
int3
hlt
jecxz
sub
sub
call
jecxz
or
push
dec
test
sti
in
xor
mov
push
lret
mov
push
pop
xchg
add
fcompl
movsl
inc
pop
mov
mov
pop
jmp
jno
dec
scas
shr
loope
pop
mov
cmp
push
shll
imull
mulb
loope
lods
pop
in
mov
jno
sahf
shll
xor
js
pop
xchg
je
push
ss
loop
or
cltd
imul
jl
push
jmp
inc
ja
in
lea
in
out
or
xchg
shrb
cld
cmp
push
lret
addr16
mov
cwtl
icebp
lret
stc
in
lods
xchg
or
cltd
fsubrl
mov
pop
in
cli
ja
lea
clc
and
or
subb
out
daa
pop
mov
mov
cmpsb
into
mov
test
jg
xchg
xchg
dec
lcall
out
pop
out
ljmp
cmp
mov
repz
mov
rorl
nop
adc
inc
mov
stc
or
add
jb
or
mov
xor
aaa
es
jo
dec
adc
aad
insl
jnp
mov
adc
xor
adc
jns
adc
pop
movq
jp
jmp
sti
fmul
push
fidivs
cmp
rcrb
push
fsubr
fwait
push
repnz
cmp
ss
lcall
xor
mov
dec
push
mov
stos
int3
loopne
jecxz
xchg
ror
test
sti
xchg
xor
jecxz
testb
retw
push
arpl
pop
scas
xlat
mov
out
je
aas
pop
rol
dec
mov
scas
pop
mov
lock
push
sbb
sub
ljmp
in
test
push
cmp
pop
cmp
or
mov
xor
shll
outsb
adc
xchg
into
inc
jg
bound
data16
jbe
dec
sti
dec
cli
ret
into
ljmp
mov
in
dec
fwait
insb
popa
push
push
aas
adc
enter
jbe
call
add
call
lcall
mov
addr16
sub
jp
sahf
fidivs
daa
pop
mov
mov
and
lcall
pop
dec
lea
lods
dec
stos
xorl
sub
pop
sub
outsb
lret
jno
pushf
fimull
in
daa
out
adc
rorl
or
test
repz
call
pop
ret
jno
clc
xor
loop
out
aad
sbb
imul
pop
cmpl
jecxz
mov
mov
addr16
mov
mov
adc
mov
cmp
xchg
push
mov
and
psubsb
outsb
push
and
inc
adc
cmpb
pop
inc
in
xchg
loop
repnz
outsb
xor
dec
loope
mov
stos
sub
test
xchg
pop
stc
aas
xchg
pop
pop
arpl
jecxz
aam
xlat
rcll
fidivrs
xor
fimuls
fs
cmp
push
pop
aad
add
paddsw
xor
pop
and
cs
addr16
mov
fs
inc
ss
jg
mov
int3
dec
push
fmul
stos
or
cs
loopne
scas
lcall
cld
arpl
or
int
daa
and
mov
rcrb
jge
loop
pop
mov
shr
leave
adc
xor
jg
scas
adc
lret
jp
scas
and
inc
fbstp
inc
ja
push
push
push
add
xor
daa
inc
icebp
sub
mov
xchg
out
imul
xchg
push
and
div
rorb
push
push
dec
pop
outsb
or
cmpl
dec
jo
inc
jae
daa
cli
fistpll
pop
loop
mov
frstor
in
pushf
sub
loope
insb
ja
les
jo
xchg
mov
cli
adc
lahf
in
fwait
xchg
inc
and
loopne
pop
mov
and
pop
fisubl
arpl
cmpsb
enter
cmp
lods
xchg
bound
movsl
mov
add
add
jmp
test
nop
xlat
sbbl
push
out
jp
and
or
aad
lcall
mov
mov
fld
adc
add
pop
sbb
or
dec
sbb
negb
xor
and
inc
push
pop
repz
int3
into
mov
imul
xchg
incb
xchg
lahf
mov
xchg
inc
js
in
notb
dec
movsl
pop
mov
enter
xchg
mov
sub
test
xor
jle
adc
popa
pop
pop
sarl
mov
sbb
xor
xchg
mov
test
stc
out
arpl
mov
and
push
lret
pop
push
sub
mov
xchg
test
add
sbb
sbb
shrb
outsb
cmpsb
add
xchg
or
and
adc
mov
jae
pop
cmp
shl
shl
test
xlat
xor
jge
lahf
xor
jnp
pop
mov
ljmp
aad
add
inc
xchg
outsb
xor
mov
sub
mov
icebp
cmp
or
mov
ljmp
js
hlt
jb
in
cltd
cmp
mov
aad
scas
icebp
shrl
cmp
pop
mov
and
popf
cmp
jne
out
jp
and
cmp
xchg
stos
sbb
lds
xor
fsubrs
das
sahf
or
fisubl
jp
add
stc
aaa
dec
or
or
jmp
shll
adcb
jge
adc
xor
xchg
orl
add
cs
sub
scas
jg
mov
mov
rcll
lcall
into
adc
out
fidivl
mov
jmp
in
aas
mov
fwait
aaa
mov
dec
adc
cmp
into
adc
mov
ficoms
jae
fcmove
or
jle
lods
jge
mov
or
adc
daa
jl
insl
dec
adc
push
lret
out
fstp
ds
leave
and
adc
lea
add
pop
xor
pop
fwait
adc
adc
test
sbb
loopne
mov
pop
push
lods
push
push
mov
jmp
inc
enter
push
fdivrl
and
jmp
mov
cli
cli
aaa
idiv
and
stos
and
sub
cwtl
pop
cmp
inc
push
adc
ret
popf
mov
fld
imul
dec
hlt
in
ljmp
fbstp
scas
stos
inc
sti
adc
repnz
mov
inc
cmpsb
out
or
push
lods
es
xchg
idivl
inc
xchg
inc
in
lods
cmpsl
call
add
icebp
inc
negb
out
sbb
pop
lret
lea
pop
cwtl
dec
jecxz
cld
add
stos
out
lods
nop
cmpsb
xor
divl
movsb
andb
mov
cmpsl
fcmove
mov
mov
push
or
pop
idivb
sub
xor
hlt
mov
add
dec
xchg
jae
inc
adc
sahf
dec
xorb
push
xchg
clc
nop
jnp
dec
popa
pop
bound
icebp
mov
xchg
mov
loop
mov
scas
nop
in
fstps
pop
cmp
movsl
mov
sti
dec
imul
dec
jno
jmp
jg
test
or
jns
or
xchg
cmp
dec
push
fbstp
mov
test
pop
cmp
pop
mov
push
pop
push
sub
mov
sti
outsl
cmp
aam
cmpsl
je
out
pop
xor
subl
inc
imul
imulb
push
add
addr16
and
pop
push
scas
add
mov
or
cmp
jmp
jmp
xchg
xor
fcompl
xchg
pop
pop
cmp
and
push
push
mov
push
xchg
sti
cld
xor
or
jb
pop
mov
adc
nop
mov
and
daa
xor
orb
inc
shll
int3
lock
pop
pop
jo
mov
sub
dec
jae
js
pop
xor
push
jp
mov
jbe
mov
in
std
mov
cmp
jg,pn
scas
idivb
mov
ret
sub
sti
pop
call
add
in
jnp
dec
sub
add
inc
sahf
mov
mov
push
cltd
repz
int
mov
adc
mov
push
cmc
out
and
and
in
cltd
sti
call
lock
shll
outsl
ret
ret
test
xor
pop
inc
stc
loope
xchg
int
jae
xchg
xchg
fwait
and
push
js
dec
inc
sbb
push
mov
repnz
loop
or
dec
jns
add
jecxz
jns
sbb
insb
xlat
rclb
xlat
movsb
mov
cmp
and
inc
jmp
mov
es
lcall
xchg
rcl
mov
jbe
or
cmp
push
push
insl
movsb
daa
hlt
dec
pop
mov
mov
daa
aaa
insl
cld
bound
inc
jg
ret
in
xor
mov
add
adc
dec
mov
xchg
mov
lret
shll
push
les
sub
xor
jns
repz
mov
inc
imul
sub
dec
lods
push
inc
cmp
fldl
outsl
mov
push
push
popa
mov
mov
rclb
add
or
sahf
pop
or
push
jns
clc
add
jno
or
jne
int3
popf
xor
into
int3
mov
cmp
in
pop
loope
dec
dec
mov
push
nop
xchg
push
mov
xor
jae
mov
in
loop
mov
push
fwait
stos
arpl
fcompl
mov
jmp
mov
or
pop
adc
cmc
mov
jmp
mov
push
sbb
xor
mov
in
mov
inc
xchg
aaa
test
push
adc
jle
imul
mov
mov
or
sbb
inc
sub
push
cmp
mov
test
rcrb
daa
iret
jg
repz
adc
cmp
and
in
or
xchg
or
push
adc
push
iret
sbb
popa
scas
aaa
xor
out
int3
cmp
rcll
int3
ret
mov
pop
pop
scas
dec
fwait
leave
es
outsl
add
xlat
push
cli
cmpb
fimuls
femms
push
mov
adc
call
jge
mov
lods
add
hlt
lods
cmp
pop
into
pop
push
orl
mov
sbb
xor
mov
jnp
std
xchg
inc
xchg
push
mov
out
cld
addr16
test
dec
outsb
out
fisttpll
stos
inc
in
roll
lret
rcll
pop
lds
and
mov
movsb
popa
sub
scas
imul
inc
rclb
mov
je
add
jp
lock
js
rcll
lret
mov
dec
pop
sbb
dec
icebp
mov
pop
out
dec
mov
push
mov
push
stos
cli
je
jecxz
scas
jnp
cmpsl
jmp
jne
cmp
jb
enter
imul
mov
xlat
or
xchg
adc
cmp
data16
push
xchg
pop
shlb
movsb
jle
pop
inc
fs
aam
test
sub
ret
mov
dec
xor
push
xor
pop
xlat
dec
out
popf
aam
add
movsb
fdivs
push
xchg
adc
pop
dec
stos
sahf
shl
mov
ds
filds
pop
xor
jo
mov
xorl
aaa
pop
lcall
cwtl
cwtl
test
xor
adc
fcom
imul
push
push
adc
jns
and
pop
dec
and
jo
test
sldt
dec
inc
pop
test
fld
add
cmpsb
into
mov
mov
and
jmp
jbe
test
xor
sbb
adc
xchg
subl
and
pop
add
iret
and
or
jne
adc
and
xchg
out
imul
adc
in
xor
addr16
clc
mov
pop
push
push
aaa
inc
movsb
lahf
shlb
dec
cmc
push
das
fcmovnu
dec
inc
je
or
xchg
fs
cli
xchg
sbb
out
xchg
bound
in
pop
jg
mov
hlt
arpl
adc
les
cmpsb
jg
xorl
mov
popf
sbb
les
vgetmantps
mov
sub
push
dec
jmp
mov
fistps
shll
movsb
in
jl
mov
cmp
mov
and
ljmp
jnp
inc
mov
bound
cmpsl
inc
xor
insl
fisubs
js
push
iret
mov
mov
shl
out
sbb
jo
repz
cmp
lret
loopne
imul
ss
pop
pop
int3
and
xlat
js
xchg
shl
mov
mov
rcll
inc
mov
xor
cld
cmpsb
call
mov
loop
lcall
out
daa
push
jae
jne
xchg
xor
add
jnp
pop
pop
je
rolb
push
push
lret
notb
adc
in
dec
xor
imul
mov
mov
lock
enter
test
mov
es
pop
jecxz
jmp
loopnew
push
sarl
sub
pop
and
ret
aad
jne
shlb
jnp
int
pop
adc
mul
pop
and
or
movsl
adc
add
push
push
mov
fists
xlat
push
pop
push
cmp
jae
cmp
pop
add
insl
sbb
push
loope
insl
adcb
mov
ret
je
xchg
mov
stos
scas
aam
push
xchg
add
sbb
hlt
cmp
int3
enter
mov
adc
push
enter
cmp
add
and
mov
cmpsb
pop
fcompl
in
or
jl
or
dec
popf
repnz
cli
cld
lods
jo
test
cmpsb
scas
enter
sub
aas
outsl
in
mov
bound
cli
inc
push
icebp
movsb
and
stc
ret
inc
adc
push
jmp
push
fs
test
xchg
xor
mov
push
xlat
dec
adc
ja
lret
movsb
push
aaa
cmpsb
stc
push
stc
fsub
les
adc
xchg
mov
add
jecxz
movsl
xor
mov
inc
and
xor
clc
std
mov
leave
out
hlt
jo
adc
cmpsb
jmp
popf
push
mov
sub
stos
push
fisttpl
loopne
mov
dec
dec
mov
mov
pushf
ror
cwtl
cld
xor
fadds
scas
add
cmp
xor
push
xor
sti
jp
jo
mov
pop
cmp
lea
ret
pop
inc
inc
push
idivl
adc
int3
insl
and
stos
pop
xor
ljmp
and
jmp
inc
or
std
jl
mov
insb
rcrb
inc
or
cmp
mov
and
mov
push
cld
fs
dec
test
movsl
test
jl
pop
imul
jns
shlb
ss
mov
push
pusha
jae
aam
xlat
movsb
es
dec
jecxz
test
dec
adc
je
or
icebp
mov
add
fldt
and
popa
push
push
and
cltd
fwait
lds
lods
inc
sub
inc
inc
jnp
fs
mov
mov
mov
ja
fdivl
js
cld
cltd
ss
lods
xor
and
mov
bound
call
add
push
in
aas
icebp
add
xchg
loope
dec
jns
xor
jle
xlat
mov
je
lock
xor
sbb
int3
push
fstpt
sahf
xor
sbb
push
add
test
jne
dec
or
sub
sub
aam
fcompl
pop
movsl
xchg
lock
jle
lods
mov
jno
and
xchg
xor
mov
lods
mov
mov
out
fdivl
icebp
mov
adc
je
mov
jae
in
pop
ret
cld
xchg
adc
ja
cmp
add
notl
pusha
imul
fstpl
sar
cwtl
mov
inc
sti
cltd
pop
xchg
in
pop
push
jge
mov
cmp
int3
es
leave
mov
jnp
cmpsb
lahf
xchg
cmp
mov
inc
test
sbb
mov
ja
pop
pop
loope
or
ficoml
push
pusha
ret
or
xor
aas
mov
dec
push
aad
add
arpl
sub
fdivrl
jo
popa
repz
add
push
dec
aaa
cli
popa
shl
mov
push
jl
pop
cmp
fisttpll
and
in
push
shrb
fsts
int3
test
shrb
stc
push
repnz
push
bound
mov
dec
mov
out
pop
scas
and
and
mov
inc
cltd
clc
xchg
rorb
push
push
or
ja
pusha
sub
out
loop
fstpt
rclb
sub
cmp
lret
pop
arpl
adc
cwtl
sbb
fsubrs
add
test
pop
mov
or
sub
jo
xchg
imul
addl
dec
add
int
test
sub
lock
shlb
in
xor
inc
pusha
mov
mov
xor
inc
and
jecxz
das
xchg
xchg
popf
jg
aam
sti
inc
cltd
out
push
movsb
or
stc
cld
call
sbb
push
adc
jno
mov
jmp
mov
jno
inc
xor
sbb
ss
int3
push
lds
xchg
outsl
daa
pop
adc
inc
test
stos
add
mov
arpl
jg
stos
jns
das
and
and
movsb
adc
add
or
sti
ds
sbb
aaa
std
or
adcb
add
add
out
dec
mov
jae
aaa
add
pop
dec
gs
jle
xchg
cmp
outsl
cmp
bound
mov
xchg
xchg
pop
pop
add
inc
cmp
loopne
stc
push
pop
repnz
addl
mov
fisttpll
fildll
ljmp
xchg
pop
fwait
jno
jns
ret
pop
flds
int
repz
repz
xchg
test
mov
insl
mov
push
ja
jno
pop
fisubs
lahf
stc
fwait
pop
cmp
push
cmpsb
dec
int
dec
jne
rolb
xor
bound
testb
jae
push
mov
test
push
bound
stos
lret
mov
popl
inc
imul
and
and
mov
ja
cmp
rclb
inc
mov
ja
fstl
pcmpeqb
test
iret
xchg
mov
lcall
movsb
dec
js
xchg
jmp
fcom
fistpll
mov
ds
push
push
dec
shll
jno
cld
mov
sub
sub
xchg
jl
push
idivl
adc
pop
xchg
xlat
int
cmpsb
fs
mov
jae
jno
mov
fs
loop
das
mov
aas
inc
lahf
cli
test
das
mov
stos
loop
sub
dec
jae
cmpsb
je
jae
into
ja
dec
jg
jp
jbe
jecxz
xor
hlt
rcrb
mov
imul
fisttps
inc
fnstcw
mov
fwait
push
or
push
adc
pop
adc
xchg
jmp
daa
int
out
dec
mov
and
ret
pop
jno
mov
inc
inc
inc
mov
xchg
or
push
aam
cs
sbb
xor
je
bound
pop
mov
add
cld
sbbb
out
mov
dec
adc
pop
pop
aam
sub
psubq
pushf
push
dec
mov
andb
adc
cmc
and
cwtl
xchg
xchg
and
jbe
mov
push
cmp
test
mov
xor
sub
pop
ss
mov
mov
fnstsw
mov
xchg
pop
das
fcompl
pop
xchg
mov
push
mov
movsb
push
gs
inc
jne
jge
jl
push
xchg
mov
jp
gs
sbb
or
push
sbb
loope
mov
xchg
rcl
imul
jmp
aam
fldt
stc
jnp
push
arpl
dec
add
mov
or
inc
jnp
test
repz
pop
mov
push
hlt
sub
jmp
loopne
scas
insl
lcall
cmpsb
sub
jnp
mov
xchg
adc
mov
add
ja
lods
and
stc
jge
mov
jbe
inc
mov
jo
mov
mov
cmp
scas
imul
push
add
mov
les
stos
cmp
sub
jp,pt
sbb
cmp
scas
push
mov
and
lcall
test
push
xchg
push
adc
shlb
mov
cmp
mov
rep
jecxz
movsl
pop
adc
filds
int3
pop
or
gs
frstor
rclb
test
mov
in
clc
in
adc
pop
mov
xchg
sub
jecxz
mov
xchg
scas
stos
int3
push
mov
out
int
xor
out
and
mov
mov
icebp
in
adc
jmp
adc
push
sub
mov
aaa
adc
int
outsl
xchg
pushf
add
push
mov
adc
pop
push
xchg
cmp
cmp
dec
xlat
xchg
insb
jecxz
jne
sub
loope
ret
or
ja
test
xchg
and
mov
mov
adc
jg
scas
rcll
jb
cs
sub
sbb
loopne
dec
in
lods
loope
out
cmpsb
aam
xchg
cs
call
sub
dec
jnp
xchg
lods
testb
mov
adc
test
popa
mov
lcall
jge
lods
adc
sub
imull
insl
dec
stos
pop
add
dec
loope
push
rorl
icebp
mov
or
mov
mov
or
mov
stc
mov
jno
jg
mov
push
mov
leave
cmp
jl
adc
or
xor
imul
mov
pop
xor
jmp
sub
hlt
insb
mov
inc
push
gs
lahf
or
adc
out
jg
add
mov
pop
mov
test
push
or
sahf
leave
int
rorl
jns
cmpl
cld
mov
jge
int
inc
lcall
dec
rcl
ret
lcall
je
xchg
and
sub
mov
test
ficompl
mov
repz
jge
outsl
or
adc
fucom
mov
adc
ret
rcr
push
sub
jbe
xchg
mov
and
mov
fistpl
insb
rorl
popf
mov
xor
gs
pop
inc
sbb
stos
repz
jle
xorb
dec
enter
sbb
push
sti
ljmp
sub
and
xchg
fdivp
cmp
in
cmp
add
inc
xor
insb
fldt
mov
dec
fisttps
pop
cmpsl
outsb
cmc
mov
mov
aad
fsubrl
incl
sbb
imull
pop
jmp
mov
and
push
leave
add
pop
or
out
mov
mov
mov
and
rcll
cmp
jns
rorb
int3
std
fistps
jp
cwtl
sbb
mov
lds
mov
cld
imul
sub
inc
sub
or
xchg
in
inc
jge
lods
dec
ret
stc
mov
jae
into
jmp
mov
push
icebp
or
mov
and
mov
sbb
cmpsb
pop
sub
mov
testb
lds
popa
or
jbe
add
cmp
sub
aam
mov
sbb
insb
das
add
aas
arpl
repz
hlt
xchg
dec
les
test
push
cmp
pop
adc
inc
call
ds
mov
mov
mov
and
in
inc
leave
xor
decb
movsl
xor
insl
fdivr
sub
imul
sbb
and
jl
cmp
jle
pushf
inc
jbe
outsb
bound
aam
into
mov
xchg
fnstsw
inc
push
add
mov
pushf
rclb
sar
jl
dec
out
aaa
ficoml
jmp
movsb
aas
lret
adc
mov
xlat
imul
xchg
mov
mov
sbb
pop
int3
data16
push
lds
mov
dec
or
mov
out
dec
sahf
dec
mov
mov
push
mov
mov
out
mov
inc
cmp
sbb
push
test
pop
jle
ret
mov
int3
dec
jg
add
push
cli
add
es
add
jmp
cmp
jge
and
mov
sbb
inc
push
xor
gs
inc
inc
or
lods
fstps
pop
lods
or
xchg
inc
xchg
sbb
jbe
lds
test
insb
sbb
xchg
fisubl
mov
cmp
xchg
mov
into
dec
jmp
mov
sub
push
or
mov
sub
fmul
out
add
int3
testl
jbe
das
lock
sub
imul
pop
mov
jmp
movsl
pop
aaa
xchg
loope
fcomp
es
imul
or
cmp
loop
int3
adc
insl
lahf
popa
mov
and
mov
xchg
mov
cmp
inc
xchg
pop
repnz
add
je
push
rol
add
setge
jg
cmp
lahf
pop
adc
imul
addr16
xchg
test
push
pop
out
push
dec
shlb
orb
aaa
jb
xchg
repnz
icebp
test
lods
popf
pop
push
pop
decb
cmp
push
lea
stos
iret
lret
pop
add
ljmp
fstp
xchg
mov
mov
mov
xchg
xchg
sbb
add
adc
cmp
jge
pop
pop
xlat
dec
adc
in
push
into
leave
out
inc
mov
gs
repz
cmp
xchg
xchg
repnz
mov
fstpt
dec
xchg
push
aas
icebp
subl
xor
cmc
js
sbb
xor
mov
movsl
dec
push
jp
subl
or
cmp
notb
jg
pop
int3
or
xor
sbb
in
enter
fisttpll
dec
sub
int3
jnp
inc
fcomps
sti
les
or
xchg
fcompl
sub
xor
push
xchg
lock
jns
xchg
mov
sahf
aas
jno
jns
and
pop
imul
outsl
xlat
mov
adc
cmovnp
mov
out
sub
loop
jl
movb
aaa
sub
dec
xor
ficoml
in
sbb
je
addb
push
insb
mov
adc
test
daa
mov
movsb
in
pop
mov
psubq
cmp
fbstp
sbb
adc
loopne
mov
sahf
out
inc
ss
and
sbb
push
or
pushf
cmp
daa
imul
divl
dec
mov
mov
mov
or
scas
or
cli
in
cmp
out
mov
push
jns
and
mov
adc
push
jp
out
pop
std
and
push
js
mov
fisubrl
dec
lds
test
mov
and
xlat
ds
mov
insb
cmp
jp
js
cwtl
sti
into
lods
clc
in
stos
loop
popf
popa
pop
adc
fistl
movsb
inc
inc
cmp
les
add
call
fs
pop
ss
mov
insl
in
js
mov
xor
loope
leave
cmp
cmp
int3
push
lea
dec
ds
jecxz
xor
arpl
or
adc
dec
pop
inc
outsb
jg
jno
sbb
xor
pop
iret
addb
test
lahf
inc
sbbl
stc
pop
xchg
testb
mov
mov
cmp
pop
mov
xchg
cmpsb
cmp
pop
jmp
in
or
dec
les
sub
rclb
jl
aad
dec
and
push
ljmp
mov
sbb
mov
sbb
sbb
jbe
test
sub
jg
js
pop
sbb
dec
fidivl
xor
std
add
pop
mov
inc
lods
xor
out
ss
sbb
xor
inc
pop
das
addr16
lds
dec
int3
ret
cmp
movsb
addr16
push
xor
cmp
in
mov
shrl
dec
out
jbe
add
gs
xchg
mov
inc
mov
xor
clc
lods
jl
xor
push
mov
rorb
and
arpl
stos
pop
push
mov
jns
inc
cld
sti
or
jecxz
mov
in
push
imul
mov
push
mov
or
lret
sub
inc
and
arpl
xor
jecxz
bound
repnz
aad
test
sbb
jecxz
cmp
imul
and
in
fwait
push
aad
iret
jne
lea
xchg
aaa
cmp
push
fildl
test
xchg
xlat
xor
xor
ds
ss
sbbl
test
sub
and
mov
test
mov
ja
nop
pop
fwait
sub
test
inc
jle
loopne
test
divb
fdivr
test
dec
jne
icebp
lods
loope
mov
mov
sarb
movsb
or
and
popa
ret
adc
rcrb
cmpl
xlat
xchg
jmp
cwtl
insl
dec
sub
fsubs
mov
mov
adc
xchg
sub
test
inc
xlat
push
outsl
jmp
jle
mov
and
loopne
mov
xchg
dec
sbb
adc
add
lock
cmp
stos
test
test
pop
push
push
testb
lcall
and
lcall
xchg
fmull
mov
sub
add
jg
out
ficomps
cmp
add
pop
xor
jl
xchg
add
sbb
jg
dec
or
push
mov
sbb
cli
outsl
pushf
sbb
fwait
adc
xchg
cld
fwait
jg
sbb
dec
mov
xor
adc
push
push
jle
push
pushf
out
jae
popa
mov
add
adc
sub
dec
inc
ja
mov
mov
sbb
out
sbb
add
insb
xchg
fwait
mov
xchg
rcll
rcr
icebp
hlt
or
lea
sub
push
scas
pop
xlat
rorb
xor
add
push
jae
fmuls
or
rcr
sbb
mov
dec
mov
pop
ficompl
xchg
sbb
in
jo
pusha
mov
mov
push
outsb
mov
jne
hlt
pop
push
pusha
rorl
add
rcrl
dec
adc
xor
cltd
and
jmp
js
cltd
inc
xchg
mov
adc
dec
nop
push
or
imul
push
cmp
pop
xor
and
outsl
out
mov
insb
xor
inc
mov
imul
int3
movsl
in
xchg
dec
xchg
sti
mov
push
lahf
cmpb
ret
cmpl
cmp
push
xchg
lock
sub
and
adcb
jecxz
mov
cmp
roll
std
icebp
jbe
and
xor
cmp
sub
adc
cmpb
xchg
jecxz
pop
xor
ja
and
insb
and
mov
sti
inc
rep
and
xchg
pop
jbe
cs
daa
jbe
lret
sarb
add
scas
dec
lahf
xor
xchg
mov
and
xchg
dec
cmp
lods
lea
setle
and
push
adc
inc
cmp
out
and
lret
sbb
sbb
bound
mov
in
imul
or
cmp
jp
sub
xor
inc
ret
pushf
cld
xchg
push
and
sub
nop
inc
add
lds
es
in
lret
negb
cld
lods
rorl
pcmpeqd
out
dec
cld
cmp
fisttpl
adc
xchg
mov
add
and
xchg
pop
sub
cmp
data16
inc
xchg
in
inc
sub
hlt
xchg
scas
jge
aam
pusha
lods
lret
adc
dec
or
int
sub
xor
xlat
scas
push
decl
add
mov
sbb
call
inc
or
xchg
mov
out
add
push
movsl
inc
push
test
or
inc
mov
push
mov
sbb
iret
stos
and
xchg
push
add
loop
jae
aaa
mov
cltd
jmp
icebp
adcl
rclb
lret
fcoms
lock
push
rorb
lock
mov
xchg
shl
mov
in
xor
sarl
cltd
inc
les
ss
aaa
std
cli
rcl
scas
sbb
in
aad
movsl
test
fisttpl
les
dec
imul
mov
mov
push
pusha
mov
jp
or
cmp
dec
jno
xchg
mov
jb
lods
icebp
insl
xchg
shlb
mov
jp
sbb
outsb
jo
push
mov
and
test
jb
addr16
xchg
sbb
rcrl
xor
and
mov
xchg
mov
inc
rolb
xchg
push
pop
sahf
pop
jecxz
fdivs
mov
push
sti
push
xchg
xchg
cwtl
add
add
jmp
in
push
pushf
rcrb
push
add
iret
and
cmp
mov
inc
ret
shrl
cmp
arpl
pop
adc
push
push
pop
sub
push
push
sahf
out
decl
sub
sti
push
sbb
test
flds
ja
stos
mov
sahf
inc
sub
or
lods
mov
subl
ds
and
lahf
inc
test
lret
mov
test
fistpll
push
or
inc
ror
dec
jmp
inc
mov
mov
dec
push
jno
enter
mov
push
or
push
sti
into
mov
fwait
adc
and
sbb
inc
push
jne
testb
lea
and
adc
jmp
adc
adc
or
std
fs
enter
ret
das
pop
and
aad
outsb
daa
mov
lea
push
mov
pop
or
sahf
mov
xchg
push
dec
add
mov
xchg
cmp
sub
push
test
out
push
xchg
adc
push
fsubs
test
sbb
pop
lea
fisubrs
push
inc
arpl
push
add
scas
sbb
cmp
or
pop
iret
fists
jns
push
dec
adc
mov
xchg
hlt
pusha
mov
cld
cli
int
in
popl
dec
movsl
mov
jecxz
testl
sub
imul
loope
add
outsl
pop
sbb
rdtsc
mov
mov
fiaddl
js
mov
xchg
and
adc
jp
adc
cmc
and
aaa
mov
insb
sti
arpl
or
bound
jp
je
xchg
out
xchg
scas
pop
xchg
imul
mov
mov
gs
enter
and
push
int3
movsb
add
ja
jnp
mov
sub
adc
lds
mov
adc
jbe
jbe
xchg
xor
cwtl
jecxz
outsl
xchg
cmp
out
mov
xchg
xlat
divb
cld
sbb
out
ror
sbb
pop
cmp
xchg
cmpsl
add
and
loop
xchg
packsswb
ja
or
ds
gs
push
cmp
ret
lahf
das
lds
mov
and
and
mov
hlt
das
sub
aad
test
test
jns
cmp
xor
test
aas
mov
jae
out
sub
xor
pop
cmp
movsl
push
int
or
imull
out
ret
adc
and
push
jge
adc
dec
cli
mov
outsb
addl
sub
mov
mov
out
inc
js
push
addr16
pop
roll
push
and
pop
or
and
cltd
ret
fisttpll
cmp
mov
loopne
sub
mov
dec
inc
test
cmc
jmp
cmp
cmpsl
xor
mov
insl
out
fcom
cmpsl
xor
push
in
push
ret
mov
xchg
aad
mov
xchg
out
negl
sub
imul
imul
xchg
mov
mov
mov
push
dec
inc
fs
test
fsubrs
int3
mov
adc
adc
xor
jno
add
fadds
das
inc
lock
xlat
mov
jmp
dec
stos
je
hlt
test
loope
ret
in
jl
shlb
mov
subb
push
and
cmp
hlt
mov
ds
ljmp
lock
pop
roll
test
scas
lods
or
out
push
popf
test
and
sbb
fisubrs
nop
out
leave
pop
out
cmp
mov
in
ret
sub
mov
imul
fdivs
xor
pusha
aas
mov
mov
mov
mov
int3
incl
jge
pop
jns
loop
fildll
mov
sahf
cmp
div
in
jle
or
icebp
jecxz
lret
adc
pop
in
rolb
mov
push
aas
jl
sbb
push
jg
add
sbb
and
test
hlt
loopne
push
xlat
push
pop
pop
cltd
incl
je
push
push
push
mov
cmc
xor
push
lret
fcoml
mov
fsubrs
in
rolb
pushf
or
cmp
ss
aam
outsb
adcb
repnz
jle
lock
cltd
or
into
push
mov
mov
fcom
ljmp
ret
sbb
arpl
loope
ret
mov
jb
adc
push
jbe
mov
and
sbb
jnp
pop
sbb
iret
cmpsb
jbe
lahf
push
scas
push
pushf
scas
or
lea
xchg
inc
jl
or
and
sub
ret
pop
sahf
imulb
decl
nop
and
adc
mov
mov
in
mov
pop
sbb
jb
les
stos
jmp
out
ljmp
xor
jbe
mov
and
or
xor
dec
dec
lock
popa
xor
push
add
dec
jmp
dec
into
xchg
fwait
dec
in
xchg
loope
popf
call
sbb
add
jnp
repnz
or
gs
pop
sub
xor
lock
aam
cs
sbb
loop
hlt
imul
mov
nop
cmp
dec
and
xchg
and
dec
lea
cmp
std
adcl
adcl
outsb
add
jl
insl
imul
aaa
sub
push
mov
inc
mov
aad
test
xchg
in
cmp
sahf
push
clc
jns
nop
inc
xor
xor
xor
rcrb
and
adc
sbb
sub
imul
imul
xchg
adc
sahf
inc
xchg
cmp
mov
push
in
data16
pop
stos
add
pop
push
mov
cmpsb
or
je
jns
pop
sbb
cmp
test
sbb
shrl
xorb
dec
cmp
sbbb
jmp
rcrl
fists
jnp
cwtl
mov
scas
lock
outsb
lahf
dec
adc
add
jmp
je
stc
jl
adc
mov
dec
lahf
mov
and
jno
sbb
aaa
mov
and
stc
into
cmpsb
or
shrl
mov
outsb
jmp
sub
mov
sbb
jbe
lcall
push
in
xchg
xor
cmp
cmp
cmp
scas
mov
int3
inc
pop
jb
mov
jno
mov
insl
cmpsl
dec
jno,pt
outsb
leave
or
jg
ss
inc
or
into
icebp
xchg
loope
push
rol
dec
inc
cmp
jl
mov
xchg
bound
or
je
push
lret
aaa
ja
nop
adc
dec
dec
sub
dec
push
div
and
inc
inc
pushf
and
ss
lcall
movsb
gs
imul
push
subl
adc
add
xchg
enter
sbbb
and
imul
cmp
leave
subl
jle
pop
xor
shll
das
inc
loope
add
shl
mov
dec
mov
or
je
push
jo
jne
cmp
dec
lods
stos
into
out
fiadds
insl
in
enter
mov
and
insl
arpl
push
xchg
rorb
repnz
mov
les
fildl
divl
pop
popf
pop
pop
sbb
adc
movb
pop
adc
pop
add
pop
inc
ficoml
test
test
mov
adc
pop
sub
mov
in
mov
std
insl
pop
repz
in
jne
mov
insl
popf
test
lds
push
or
xor
stos
enter
add
add
pushf
xchg
loope
jb
rolb
stos
jo
cli
sar
clc
hlt
in
test
mov
in
jmp
xchg
xchg
dec
rol
xchg
stc
nop
push
xchg
loopne
pop
fisubs
lock
test
out
dec
test
call
std
add
sbb
fs
adc
dec
adc
mov
dec
mov
aas
mov
dec
test
push
push
loopne
jo
popa
sbb
inc
cli
fstpl
sub
push
pop
testl
je
fsubrl
pop
dec
jb
clc
push
mov
dec
movsl
pop
dec
cli
sub
jg
test
cmp
stc
pop
sub
fs
or
popa
iret
aad
inc
pop
in
inc
sub
inc
clc
stos
pop
mov
aam
dec
xchg
fxch
push
lods
sub
jbe
jge
or
lods
ret
push
adc
xor
inc
push
cmpsb
ss
xor
sarl
fcompl
sbb
addr16
push
std
jne
divl
cmc
out
xor
xor
cmpb
cs
stc
sub
cmp
imul
nop
lret
bound
jns
rol
movsb
pop
int
mov
mov
stc
cli
mov
or
sahf
push
mulb
es
fldcw
inc
frstor
dec
js
rolb
mov
out
test
jns
mov
scas
repnz
je
gs
call
es
add
dec
xchg
insl
jl
and
stos
test
mov
mov
xchg
mov
fsubrl
mov
sbb
push
push
out
sub
or
adc
test
dec
out
jmp
es
outsb
push
in
adc
nop
outsb
sub
xchg
pop
cmp
push
xchg
std
sti
jns
and
adc
fiadds
int3
cmp
stos
push
loopne
sub
jmp
adc
xchg
imul
inc
push
loopne
ficoml
push
sbb
add
add
push
cmpsb
lret
lods
popl
mov
mov
fucomip
je
addl
jnp
push
orb
out
mov
or
adc
push
scas
out
mov
inc
pop
cmp
in
xor
jp
popf
mul
mov
sbb
icebp
outsb
lods
xor
nop
xchg
adcl
xor
mov
out
popa
xor
mov
arpl
cmp
add
fsubrs
sbb
cmpsl
mov
xchg
repnz
dec
lcall
mov
movsb
movsb
nop
popf
jmp
decb
stc
push
in
movsb
sub
mov
dec
cmpsl
adc
xchg
mov
jecxz
push
cmp
addr16
push
push
pop
xchg
aad
or
fcompl
mov
cmp
add
in
sub
mov
sub
dec
xchg
test
dec
fs
xor
outsl
into
cmp
xchg
and
pushf
rcr
popa
xorb
push
xchg
xorb
fwait
adc
xchg
jl
push
jnp
fwait
imul
enter
xchg
ret
aad
xor
xchg
mov
xchg
call
add
jnp
adc
mov
fisubs
xor
dec
lods
jne
inc
subb
pop
mov
xor
sub
ret
imulb
and
push
clc
jecxz
dec
hlt
nop
cld
cwtl
pop
mov
pop
inc
fistl
pop
pop
cld
andb
push
sti
xchg
mov
out
mov
push
loop
jg
sub
push
mov
cmp
fxam
dec
cs
and
ja
mov
push
pop
add
pop
adc
or
sbb
aaa
mov
mov
dec
inc
xchg
adc
xchg
ja
fisttps
clc
jg
mov
lahf
inc
imul
rcr
call
pop
cmp
cmp
rorl
sbb
inc
daa
xor
xor
mov
out
xor
mov
outsl
push
xor
sub
jecxz
bound
dec
loop
inc
sub
jnp
inc
add
test
gs
pop
loopne
in
mov
outsb
decb
movsl
mov
jmp
add
rcrb
xchg
sbb
ret
pusha
mov
test
pop
xlat
push
nop
inc
std
aaa
out
mov
sbb
in
call
cmp
jp
mov
inc
lahf
arpl
pop
repnz
mov
mov
sbb
push
inc
je
jno
test
out
mov
and
xchg
xor
xor
aam
into
mov
addr16
jl
je
decb
leave
jnp
push
stos
lods
mov
stos
jnp
add
es
pop
push
dec
mov
mov
iret
mov
test
dec
jo
fildl
lods
ljmp
xor
inc
mov
pop
jecxz
dec
loopne
sub
outsb
xor
dec
cmc
loope
xor
icebp
sbb
out
push
mov
test
int
loope
shrl
mov
stos
sub
mov
xchg
shll
subb
and
icebp
sub
testl
push
or
cmp
lea
shll
lods
insb
or
cmp
mov
xchg
shlb
out
jb
xchg
mov
outsl
arpl
jb
push
xchg
jg
lea
faddl
lock
dec
mov
push
dec
cmp
mov
inc
or
fdivs
mov
mov
cltd
mov
int3
sub
pop
fmuls
ja
in
pop
xchg
iret
fs
and
stos
idivl
push
test
xor
push
add
imul
mov
add
lods
sahf
mov
jecxz
and
orl
mov
xchg
loope
push
push
movsl
mov
dec
clc
movsl
mov
aaa
adc
insl
push
dec
les
pop
movsl
xchg
pop
and
out
shl
repnz
lcall
out
lds
or
inc
mov
outsb
insb
in
jge
sbbb
fdivrp
sub
mov
cmpsb
pop
sbb
inc
nop
adc
out
popf
sub
std
adc
fwait
and
xor
pop
cmp
adc
mov
xchg
fstps
mov
dec
inc
loop
adc
fldenv
push
lcall
xchg
sub
incl
aaa
lea
mov
sti
aas
mov
pop
push
push
push
lcall
inc
sub
imul
lahf
push
jns
cmp
and
mov
es
push
and
in
in
imul
xorb
mov
lock
add
lret
dec
es
ljmp
mov
push
push
dec
add
dec
mov
push
movl
jne
div
jne
mov
mov
lcall
inc
adc
test
xlat
lock
icebp
lock
out
pushf
cmp
mov
in
dec
js
xchg
push
mov
test
mov
mov
rcrb
jns
sub
push
xchg
sub
mov
clc
inc
int3
lcall
int
cmc
mov
lahf
sahf
cmpsl
lcall
jo
fsubl
cmc
and
push
in
xor
pop
inc
aad
jge
jnp
or
ss
jno
or
stos
jmp
mov
shlb
nop
dec
out
fisttpll
push
dec
mov
bound
decl
nop
xchg
inc
fcomps
sarb
sub
adc
ljmp
fwait
mov
insb
rorb
out
mov
roll
lcall
xor
jle
dec
pop
inc
fistpl
jmp
xor
mov
movsl
call
mov
aad
test
sub
stos
mov
notl
call
jmp
mov
lods
mov
push
sbb
les
xlat
test
fcomps
push
push
ljmp
js
sub
jae
xchg
outsb
mov
fldcw
nop
push
dec
out
fimull
test
xchg
mov
repz
sub
pop
insb
insb
and
lret
aaa
lret
psubq
mov
mov
arpl
push
arpl
jne
lret
push
decb
cltd
lahf
sub
filds
adc
and
scas
push
mov
scas
cmpsl
int
ss
sub
push
inc
repz
out
aad
lock
inc
cmp
sub
mov
lods
xor
dec
mov
jmp
mov
addr16
cs
mov
cmp
mov
jp
xchg
xchg
jmp
mov
push
mov
out
xor
adc
xor
js
sbb
insl
push
fldenv
sub
xchg
mov
inc
test
jnp
add
sub
push
cmp
cli
cmc
or
mov
popf
addl
and
jne
je
loop
adc
fwait
adc
xchg
xchg
js
fwait
cmp
shl
and
stc
pop
js
mov
pop
push
add
and
and
adc
sbb
add
out
fdivrl
push
roll
idivb
testb
mov
loop
or
pop
mov
xor
lret
into
sbb
cmpsb
test
and
add
mov
mov
inc
push
xchg
loope
fstpl
aad
out
popf
fists
or
ret
sub
stos
test
ds
insl
sti
sbb
in
subb
div
cmp
pop
aas
inc
dec
and
imul
popa
enter
leave
cmpl
mov
xchg
add
mov
xor
mov
ja
cmp
dec
lods
mov
or
dec
xorl
cltd
mov
mov
punpckldq
pusha
pop
sub
stos
and
idivl
push
xchg
fucomp
lret
xor
cmp
xor
cmp
pusha
jp
push
mov
sbb
les
and
call
loopne
cmp
mov
stc
into
aad
into
ja
xchg
jae
xchg
test
pop
xchg
inc
and
in
add
leave
lods
adc
adc
sub
adc
fidivs
inc
push
loope
sub
xor
xor
shl
std
scas
push
xchg
jmp
and
jno
sbb
add
sti
add
and
pop
dec
enter
arpl
sub
push
cltd
cmp
jne
cmp
dec
movsb
addr16
insl
les
fildl
mov
int
pop
push
and
faddl
pop
sbb
in
jp
or
jnp
ficomps
notb
daa
or
les
push
cmpsl
repz
stos
repnz
jae
pavgb
mov
enter
sub
dec
dec
add
push
cmp
repnz
iret
jl
sbb
ja
pop
mov
repnz
movsl
orb
aad
sbbl
outsl
pop
lahf
xor
outsl
stos
test
xor
out
or
cmp
out
pop
jmp
push
ret
pushf
pop
out
out
jle
mov
psubsb
out
pop
lahf
xchg
jle
jp
xor
cmp
mov
cmpsl
stc
cmp
seta
cmc
jp
ja
not
dec
rol
lods
and
dec
mov
fidivs
rolb
fidivs
int
pop
jmp
push
inc
mov
pop
fildll
jle
out
cmpsl
mov
repz
movsl
jns
xor
cli
repnz
fsin
pop
and
lods
out
leave
cmp
push
xor
fdivp
dec
push
add
add
add
mov
xchg
sbb
call
or
mov
test
xor
xor
mov
adc
subl
inc
cwtl
add
xchg
push
mov
mulb
mov
fldenv
cltd
mov
xchg
cmp
les
pusha
or
and
mov
cs
inc
or
mull
cwtl
andb
repnz
push
fdivrs
dec
jb
add
sti
cli
orb
rcrl
sub
test
xchg
lods
xchg
ja
fcmovne
andb
stos
jns
sub
sub
sti
add
mov
out
stos
test
shll
js
dec
jnp
ss
mov
test
pop
out
insb
jb
xor
add
xchg
xchg
lahf
mov
sub
fisubl
cmp
or
dec
cli
jno
xor
adc
jmp
dec
inc
popl
or
sub
arpl
lods
sub
fdivrs
adc
gs
outsl
sbb
addr16
cmp
jg
pop
mov
jmp
gs
out
xor
lods
out
cmpsb
test
pop
push
aaa
jns
in
push
push
cmp
cmp
stos
mov
inc
jae
test
adc
cmp
and
adc
ja
mov
lock
lds
xor
bnd
fcmovne
out
mov
test
outsb
rorl
xlat
lds
adc
scas
sbb
sub
and
adc
hlt
and
mov
lock
dec
stc
ret
pop
mov
mov
pushf
push
push
adc
shrb
sbb
jns
ja
mov
les
cwtl
loope
jmp
ret
sbb
notb
mov
call
arpl
jl
addr16
mov
push
xchg
in
mov
cmp
inc
mov
and
es
pop
fstp
fsubrl
xchg
mov
sti
stos
test
push
adc
rcll
and
cmpsl
insl
push
in
aad
sbb
jg
je
push
jl
mov
mov
push
stos
push
add
outsl
jno
bound
gs
inc
push
xor
add
cmp
subl
sub
push
sbb
rcrb
add
and
es
cmp
push
adc
mov
lods
adc
jb
push
push
gs
test
xchg
lea
lret
adc
lret
mov
es
mov
pop
mov
xchg
xor
mov
jecxz
pop
xor
jb
lea
faddl
mov
cmp
pusha
add
into
js
scas
incl
jb
jl
add
pusha
xchg
xor
push
fisubrs
and
fmull
jne
xchg
notl
inc
pop
lods
pop
jp
mov
hlt
add
xchg
fisubl
push
and
jbe
aaa
cmp
pop
popf
divl
cmp
dec
hlt
push
test
mov
and
jl
jo
cmp
nop
cmpsb
xchg
inc
repz
pop
in
out
jmp
jge
test
inc
stos
pushf
jno
or
or
xchg
mov
push
iret
push
xchg
in
rcrl
and
xor
sbb
fstpl
pop
fwait
in
push
adc
and
fsubl
or
mov
fstps
cmc
cwtl
mov
ss
dec
rcll
outsl
fcoms
std
xchg
lds
xor
mov
jnp
repnz
push
in
ljmp
mov
jo
mov
pop
jmp
jcxz
imul
sbb
sbb
rcrb
testb
xor
stos
aad
leave
arpl
mov
ficomps
add
aam
mov
sub
or
out
mov
je
div
pop
or
pushf
loope
sbb
jle
into
aas
jle
addr16
in
test
jno
cmp
push
scas
roll
sbb
and
cmpsl
xlat
and
mov
jge
xchg
fsubrs
xchg
je
and
adc
cld
mov
pop
adc
rol
pop
mov
cmpsl
pop
jo
push
or
outsl
sbb
xor
mov
insb
mov
and
push
lret
inc
sbb
rcrl
scas
int3
into
lods
mov
stos
inc
cmp
xlat
iret
and
pmaxub
dec
push
sbb
fwait
call
gs
mov
sbb
out
movsl
loop
xor
jp
and
pop
mov
movsb
rorl
inc
mov
sub
pop
push
hlt
fbld
xor
adc
sahf
mov
movsl
loopne
stos
mov
xchg
dec
push
xchg
push
sbb
std
xchg
sbbl
pop
add
jne
pop
xor
test
insb
mov
push
jmp
sbb
mov
imul
fucomp
scas
lahf
ja
call
inc
dec
pop
add
mov
fisubs
ss
add
xchg
or
or
dec
out
popa
subl
sbb
sarb
xchg
pop
cmp
fs
adc
mov
jno
inc
push
push
push
mov
es
adc
add
and
push
cmpsb
in
pop
mov
push
pop
inc
stc
clc
stc
push
sub
add
pop
dec
cmp
out
mov
xchg
ljmp
mov
sbb
fwait
xorb
jl
jbe
xchg
lret
xor
lock
mov
xchg
int
sbb
push
sub
xor
in
sub
xchg
sbb
sub
data16
jno
les
test
inc
repnz
fs
mov
pushf
mov
push
adc
sbb
cmc
push
xlat
cmp
add
stc
pextrw
cmp
lock
or
lods
lea
xchg
mov
in
or
fldenv
rcrb
push
aaa
into
rcrl
xor
jmp
push
xor
ja
jb
cmpsb
mov
mov
and
mov
stos
mov
mov
movsl
out
popa
mov
ficoml
fyl2x
fiadds
pop
mov
push
sub
repnz
xchg
dec
enter
out
xor
jns
in
movl
or
in
sbb
lret
out
lods
pop
ja
scas
test
stos
xchg
mov
popa
push
mov
push
mov
movsl
push
jmp
jg
sbb
cmpl
xchg
nop
push
mov
sbb
fstpl
arpl
out
or
or
pop
popa
hlt
or
inc
dec
pusha
push
adc
arpl
into
mov
lods
cmp
mov
or
dec
movsl
nop
fisttps
xchg
mov
dec
shrl
mov
mov
iret
sbb
lea
dec
xchg
mov
cmp
sahf
inc
fstpl
hlt
mov
fwait
mov
add
add
mov
lock
int3
add
daa
hlt
dec
cmp
dec
inc
push
mov
and
mov
mov
jg
pop
add
mov
push
insb
sub
mov
mov
fldt
sbb
cmp
dec
pop
popa
stos
sub
stos
push
aaa
inc
xlat
fiadds
pop
rcrb
or
mov
in
leave
leave
sbb
dec
orl
jl
rcrb
jle
jge
arpl
mov
cli
add
scas
jmp
add
jg
or
mov
jo
pop
and
push
sbb
push
fistpll
adc
push
cmp
idivl
cltd
arpl
sarl
inc
scas
bound
jle
decl
xchg
pop
inc
jle
insl
dec
rcll
lret
lret
cmp
lret
ss
pop
sbb
aam
mov
xchg
jecxz
sbb
push
mov
repnz
nop
sti
dec
imul
pop
aas
lcall
mov
cmp
fiaddl
mov
orb
jl
xchg
cmp
push
push
inc
fs
or
and
mov
xchg
adc
mov
ja
pushf
push
enter
in
xor
add
lcall
pop
and
push
ljmp
push
ljmp
ja
icebp
jae
and
mov
mov
mov
jl
fs
pop
ss
lret
sbb
enter
popa
ljmp
mov
adc
jno
sarl
fcomp
jle
jle
jne
dec
scas
push
lcall
lret
dec
out
inc
and
std
sub
nop
cwtl
shl
fucomi
push
dec
inc
mov
popa
int3
cmp
in
lods
test
dec
mov
add
xchg
inc
imul
jmp
stc
mov
testl
dec
cmp
dec
inc
xchg
sub
xorl
scas
push
or
sahf
cmp
out
adc
inc
movsl
sahf
push
daa
scas
inc
divb
inc
fstpl
jb
cmp
xor
dec
cld
stos
mov
pop
fs
sbb
pusha
lods
dec
xor
sbb
mov
push
push
scas
test
insb
pop
jge
je
insl
bound
push
stc
loop
dec
cwtl
and
pop
and
into
cmp
das
fadds
or
sub
mov
xorb
outsb
aas
sbbl
push
inc
stos
pop
add
pop
pop
fwait
and
stc
push
cmp
hlt
push
test
or
pop
pop
push
mov
enter
inc
mov
dec
jno
jle
sahf
movsl
dec
dec
je
jbe
sbb
and
mov
dec
cli
dec
pop
out
sub
fnstenv
lahf
xor
loope
cmc
insl
repnz
push
stos
jae
xor
outsb
or
mov
dec
aaa
lds
call
and
mov
and
mov
xor
fs
add
cmpsb
jge
repz
jae
rcl
shrb
shr
scas
lods
jmp
sbb
sub
add
sbb
xchg
ja
fistpl
das
lea
push
mov
push
xchg
inc
cmc
test
ffreep
fs
pusha
mov
in
movsl
lods
enter
push
andb
ja
xor
pushf
arpl
fimull
fsubl
repnz
sbb
pop
jecxz
fldcw
stc
push
push
iret
adc
or
es
cmp
out
add
rcrb
aad
repz
fcomps
inc
jp
cmc
iret
sarl
mov
in
je
subl
outsl
ret
call
out
and
js
leave
rcll
adc
inc
mov
test
imul
jmp
test
jne
repz
pop
jg
push
add
popa
jae
lret
ret
js
lods
call
xor
sbb
mov
into
cmp
ret
andl
bound
sub
push
pusha
inc
add
mov
adc
das
or
jo
cmpsl
pop
out
out
incb
loope
push
ficompl
cmp
adc
out
inc
jmp
lock
pop
leave
cmpl
mov
aas
mov
insb
pop
inc
cltd
mov
ja
cli
pop
sbb
jmp
test
xchg
push
pop
lds
inc
fcmovnbe
mov
pop
pop
xor
jg
fnstsw
ss
in
loope
int
inc
push
dec
push
daa
bound
sbb
adc
add
xor
imul
push
cltd
popf
outsb
sub
movsl
cmp
mov
mov
sar
stos
jmp
sub
cltd
lods
jmp
add
sub
cwtl
xchg
add
pop
bound
add
dec
mov
xor
cmp
jo
inc
ja
mov
cmp
xor
and
test
add
inc
insl
out
xor
sub
cmpsb
aas
jecxz
std
cmp
ret
in
adc
mov
shrl
das
sbb
xchg
test
call
mov
mov
enter
bound
jne
int3
jb
add
mov
xorb
icebp
arpl
mov
call
lods
out
daa
mov
out
fsubrl
add
cs
sub
jmp
inc
insb
int3
imul
inc
or
push
jne
scas
test
inc
mov
adcb
push
arpl
mov
add
xor
dec
dec
mov
add
dec
jnp
adc
push
popa
dec
hlt
dec
push
inc
add
and
adc
push
adc
repnz
xor
sub
sbb
insb
leave
sub
xor
hlt
pop
pop
adc
mov
das
mov
stos
pop
sub
pop
push
inc
ret
fistpll
mov
adc
sahf
shlb
mov
jmp
pusha
jbe
jge
add
pop
or
xorl
ja
pop
jmp
cmp
fsub
xchg
or
and
shrb
mov
jno
fbstp
fsubrl
adc
mov
ss
cld
pop
inc
push
cmpb
notb
mov
adc
clc
fistps
fdiv
fdivl
je
or
ljmp
sbb
fsubrs
les
sub
test
in
shrl
repz
ljmp
je
mov
mov
fsubrl
add
test
push
xlat
out
filds
xor
cmp
shlb
mov
inc
adc
rorl
jge
cli
jae
aam
push
push
nop
sub
cmc
xchg
shlb
das
imul
int
imul
add
stos
popa
mov
mov
jae
sub
cmp
stc
xchg
add
sub
or
and
sbb
mov
jecxz
jno
in
sub
call
jmp
and
movl
mov
pop
gs
adc
mov
push
icebp
cmp
mov
ljmp
add
cwtl
pop
jecxz
cmp
mov
movl
xor
and
negl
xlat
dec
adc
sbb
fwait
int
pop
xchg
xor
xor
xor
jle
mov
dec
das
es
es
ret
repz
test
scas
insl
or
movsl
imul
sub
movsl
sahf
mov
xor
sbb
out
popf
jp
cmpsl
push
int3
push
lcall
shlb
sbb
cld
add
push
xchg
stos
cmp
js
cld
sub
outsl
sbb
sbbl
testl
jnp
jns
push
and
imul
xchg
cmp
add
mov
lahf
sbb
xchg
adc
sti
mov
pop
dec
jb
loope
jecxz
cmp
sbb
cmp
sub
fidivl
cmp
out
clc
bound
xchg
xor
dec
sahf
out
movsb
jb
adc
sahf
insb
cmp
mov
pop
push
push
shll
dec
sub
or
lret
mov
and
das
lods
add
jbe
insl
mov
jbe,pt
lret
cltd
subb
adc
sub
sbb
xor
mov
orb
xor
pop
push
iret
cs
xor
mov
push
add
cmp
iret
push
icebp
rolb
jo
ret
fs
jae
cltd
idiv
pop
cltd
mov
lods
or
mov
mov
aam
cltd
shl
sbb
sahf
fnstcw
and
jge
cmp
out
pop
cmpsl
popf
lret
mov
sarb
cmp
inc
ja
dec
mov
mov
pop
add
test
jb
inc
enter
in
aam
fst
xchg
int3
rorl
inc
jmp
test
iret
in
pop
iret
push
movsb
mov
shlb
add
pop
gs
psubq
daa
das
or
adc
pop
push
std
sahf
test
fsubs
mov
maskmovq
mull
dec
xlat
add
call
and
call
push
repnz
jae
push
sub
fsubrp
insl
ret
lods
push
xchg
or
fld
add
sub
sbbb
adc
cs
lods
aad
scas
push
popa
int3
aam
cmp
or
jp
pushf
repnz
jge
push
mov
sub
xchg
xor
pop
lret
or
test
xor
ja
or
mov
frstpm(287
push
inc
pop
dec
mov
mov
sbb
pop
adcl
rcr
inc
imull
sbb
call
sub
xor
cmc
jl
sub
stos
cmp
add
movsb
mov
mov
aas
push
cmp
pop
push
loopne
pop
mov
cwtl
cmp
pop
jae
outsl
dec
neg
jae
cmp
xchg
into
lock
daa
mov
and
cmc
cmpsl
aas
je
xchg
sbb
arpl
repnz
push
lods
popa
adc
jae
push
mov
jge
insl
gs
clc
adc
loope
mov
outsb
icebp
jno
or
mov
loope
or
shll
bswap
and
lcall
cmp
ljmp
in
pop
lods
mov
int
jae
mov
inc
lods
es
outsb
xchg
inc
xor
mov
call
push
lret
mov
repz
mov
inc
add
pop
ja
idivb
mov
pop
lea
jbe
jbe
adc
jp
cwtl
test
popf
dec
pusha
sbb
insl
push
aam
ret
push
fldcw
out
fsubs
loopne
mov
fnstsw
cmp
jl
jl
movsb
push
sbb
dec
inc
and
mov
xchg
cmpsl
adc
decb
add
aam
test
int
movsb
out
dec
stc
add
mov
mov
xchg
push
jmp
mov
mov
add
adc
repz
xchg
jo
xchg
and
xor
mov
cmp
mov
rcl
mov
lahf
out
enter
and
jp
cmp
cmp
addb
int
jecxz
subb
xlat
mov
xor
mov
sbb
aam
imul
les
lahf
daa
fldenv
test
sti
push
rorb
sub
sbb
mov
in
cmc
aaa
or
add
sbb
aas
aaa
lahf
pusha
sahf
adc
xchg
or
sbb
xor
les
adc
mov
mov
inc
sub
mov
popa
cltd
jl
and
xor
out
push
jecxz
cmpsl
mov
les
pop
dec
mov
mov
aas
jp
sub
pop
sbb
cld
fs
ret
pop
out
xchg
js
orl
or
addr16
enter
pop
scas
xchg
loopne
jg
insl
push
scas
push
mov
sbb
shlb
mov
adc
mov
adc
mov
sbb
lret
fisubs
das
sbb
es
cmc
mov
int3
insb
outsb
jb
lahf
mov
jle
sbb
and
dec
xchg
mov
pop
dec
mov
push
push
mov
mov
je
pop
fwait
xchg
sbb
hlt
in
push
dec
and
out
icebp
call
lea
xor
xor
pop
cmp
push
cmpsb
leavew
mov
repz
mov
arpl
xchg
push
pop
stos
hlt
push
fs
ljmp
xchg
adc
ljmp
ret
insb
and
mov
pop
xchg
mov
pop
iret
cmpsb
mov
mov
loope
test
xchg
popa
test
clc
sbb
fsts
rol
lock
insl
faddp
outsl
fstpt
jl
xchg
dec
jo
cs
and
mov
xchg
insl
adc
mov
test
imul
adc
sbb
or
lcall
pop
xor
cli
push
fcoml
testl
pop
jbe
xchg
andb
mov
jo
xlat
jp
xchg
arpl
or
adc
out
mov
lcall
int
adc
cmpl
xchg
lea
sub
push
fidivrl
sub
in
fwait
mov
fsubs
lods
mov
inc
mov
mov
popf
sub
in
inc
jbe
cmp
sbb
xchg
jno
or
out
push
adc
je
pop
ljmp
mov
inc
add
cmp
arpl
lret
pop
ljmp
movsb
push
lea
rclb
push
jg
js
lahf
push
add
sti
insl
and
jno
loopne
sbb
les
sub
in
adc
fildll
cmp
insl
mov
inc
das
out
cmpsb
mov
nop
in
popf
adc
xor
push
out
dec
int3
out
xchg
outsl
shlb
inc
push
cmp
xor
mov
stos
fisubrs
aaa
and
add
enter
insl
rorl
push
je
pop
or
add
and
cmpsl
sub
or
lret
dec
lods
mov
lret
mov
imull
push
xchg
movsl
xor
adc
inc
pop
mov
jo
fimuls
test
gs
mov
into
je
movsl
clc
stc
test
cmpsl
loope
jae
lock
xor
pop
loop
add
sbb
fucom
test
mov
jecxz
mov
sbb
test
mov
loopne
sti
je
pop
xchg
std
test
push
fbld
fistps
leave
adc
cmpl
movsl
out
cmp
fidivrl
lds
test
jl
icebp
xchg
hlt
mov
cmp
and
mov
scas
out
cmp
fstl
sarb
test
add
jnp
push
add
into
out
jae
jbe
or
mov
out
cmp
mov
repnz
or
mov
xchg
pop
imul
jp
cmp
nop
dec
xor
insl
call
dec
mov
lcall
add
xchg
in
mov
xor
inc
mov
mov
mov
pop
add
aad
ret
cmp
push
out
shlb
and
addr16
test
xor
clc
xchg
push
repz
aam
jle
in
out
lea
test
cwtl
cmpsb
pop
pusha
bound
fnstcw
cmp
hlt
sbbl
bound
pop
cli
daa
ss
cmpsb
cltd
out
idivb
int3
adc
inc
scas
popa
sub
sbb
rol
aam
push
and
cltd
adc
adc
iret
jo
mov
xor
cld
mov
andl
in
and
mov
add
in
loop
test
and
roll
icebp
sub
xchg
jbe
lcall
mov
cmpsl
push
stc
ret
push
jg
jg
sti
leave
in
or
inc
aaa
lds
xchg
inc
xor
es
add
xor
iret
xchg
cs
rcl
sahf
imul
push
cmpsl
mov
lock
stos
gs
bswap
cmp
ficoms
mov
adc
pop
lods
into
fs
mov
jne
or
or
inc
push
je
ss
out
xlat
std
cmpsl
negb
pop
imull
dec
dec
inc
mov
jmp
dec
daa
out
xchg
out
adc
mov
out
insl
jle
icebp
and
scas
ret
icebp
gs
push
mov
add
dec
xchg
and
mov
mov
or
ja
mov
jle
cmpsl
push
or
mov
xchg
cmp
shlb
repz
int3
jge
jb
mov
xor
int
jl
inc
outsl
cmpsl
in
dec
cltd
pop
xchg
and
scas
sarb
outsl
mov
test
ljmp
xorb
mov
sahf
nop
mov
cli
stos
xchg
mov
les
jns
pop
add
add
cmp
cwtl
mov
inc
jb
jg
sub
test
jp
inc
and
out
or
int
xchg
popa
mov
ja
sub
adc
sar
mov
add
push
rclb
mov
scas
imul
aas
fs
into
nopl
test
mov
lcall
lea
xor
jo
es
pop
xor
fcmovb
test
xchg
ja
add
inc
fsubl
jb
sbb
inc
ret
xor
rorl
jle
and
imul
lock
and
mov
in
stc
repz
sub
frstor
cmpsl
xchg
pushf
push
and
test
cmpsl
mov
in
inc
jne
ja
dec
andl
cmp
jae
test
mov
std
arpl
into
out
xchg
roll
jno
repz
pusha
mov
bound
cli
stos
sbb
push
sahf
pop
mov
jg
nop
push
popf
add
stos
rcr
scas
out
fimuls
adc
cli
mov
je
or
xor
add
repnz
lret
in
loop
jle
cltd
xchg
fs
cs
add
add
cli
mov
lods
xchg
cmp
sbb
and
aaa
lret
scas
mov
cmp
cltd
sub
mov
pop
mov
int
scas
orl
cwtl
xor
inc
bound
fistl
bound
inc
pusha
pop
jp
les
mov
rcr
jns
add
push
fwait
sub
leave
cmp
int3
push
jl
jecxz
jno
xchg
mov
repz
hlt
or
mov
dec
mov
pop
mov
inc
lods
lahf
fcoml
es
mov
adc
insb
pushf
pop
addr16
and
ss
jno
sub
and
lods
loop
ja
mov
and
mov
xor
call
sub
sub
ja
enter
sub
stc
mov
xor
dec
cltd
dec
lret
fidivs
and
xor
gs
imull
les
mov
xchg
movsl
jae
push
fistpl
insb
lods
jecxz
and
sub
jecxz
push
loopne
sub
xor
sbb
cli
jbe
sub
dec
xchg
mov
jmp
sahf
popf
and
or
fiadds
sbb
rcl
xor
or
test
xlat
fidivs
js
jno
cmp
or
sub
jnp
xchg
pop
jecxz
ss
enter
fwait
push
dec
loop
mov
into
push
flds
pop
ja
pop
lcall
push
and
mov
ret
and
mov
aaa
adc
or
fists
inc
imulb
fs
mov
mov
les
xchg
int
movsb
xchg
movsb
xchg
orl
pop
test
xchg
call
pop
dec
imull
xor
stos
add
es
hlt
jl
pop
inc
iret
into
xor
arpl
outsl
insl
xchg
fimull
sti
daa
add
testb
sbb
fcoms
push
popa
fwait
in
adc
hlt
inc
cmp
dec
dec
dec
mov
loopne
xchg
inc
sbb
lods
mov
mov
jb
inc
daa
shlb
push
jno
aam
lea
in
fcmovb
jae
pusha
jno
idivl
dec
add
push
ja
dec
xor
js
insb
stos
ja
xor
cltd
xchg
mov
lcall
jb
pop
xor
dec
lea
fnstsw
fidivs
xchg
adc
mov
subl
out
std
jno
sti
sarb
addl
loop
mov
lea
pop
xchg
andl
sbb
fdivs
dec
adc
shll
add
cmc
mov
sbb
cmp
jnp
cltd
cwtl
in
and
fcom
les
fisubl
bnd
push
test
sub
mov
add
movsl
xor
cmp
out
movsb
lds
cld
sbb
insl
mov
adc
xchg
add
jmp
orb
clc
mov
jnp
movsb
sub
xor
and
xchg
xchg
subb
or
fs
and
inc
and
sbb
sub
mov
adc
and
test
xchg
sarb
push
fdivrl
jae
pop
out
sub
repz
sbb
xor
fisubrl
cmpsl
cmc
pop
arpl
inc
xchg
lods
out
fisubs
jp
adc
add
jns
pusha
negb
mov
mov
cwtl
cmp
cld
mov
sarb
dec
push
pop
mov
sar
push
decl
mov
inc
outsb
addr16
addr16
cmp
shld
adcb
push
xchg
jg
mov
adc
push
inc
inc
bound
pop
push
jns
aas
rcr
xor
aam
jbe
xchg
cmp
xchg
sbb
jae
xchg
mov
mov
mov
push
fdivl
mov
scas
inc
cmp
mov
fcmovb
fcom
add
mov
add
sti
and
jns
pop
mov
add
bound
adc
xlat
icebp
fs
and
call
mov
fnstenv
push
stos
lahf
or
inc
stos
imul
enter
adc
js
sbb
cltd
out
mov
mov
test
mov
pop
jno
cltd
rcl
xchg
sbb
bound
mov
lret
push
movsb
push
in
or
mov
pop
xchg
mov
out
arpl
or
pop
rcrb
icebp
sub
dec
insb
inc
jle
xchg
pop
adc
pop
lahf
push
inc
mulb
jbe
ret
mov
cmp
add
es
jns
xchg
negl
mov
sahf
sbb
add
mov
jb
roll
adc
push
icebp
inc
js
lods
outsl
jg
ds
jns
dec
and
jl
pop
out
push
push
das
xchg
pop
sbb
shlb
hlt
pop
filds
clc
dec
flds
pop
inc
popa
int3
aam
movb
pusha
scas
push
jne
sub
inc
mov
aam
sbb
mov
push
loope
mov
das
xchg
sahf
loopne
xlat
mov
fistps
mov
filds
mov
add
repnz
mov
cmp
test
out
xchg
pop
mov
inc
int3
jnp
lcall
mov
jle
into
pop
or
push
push
dec
pusha
pushf
sbb
adc
mov
repz
addr16
addb
es
sbb
sahf
pop
decb
add
jmp
add
push
mov
mov
fsubrl
lahf
xchg
xlat
lret
testl
and
xor
mov
les
inc
jno
ljmp
cmpsb
push
mov
sbb
add
lret
clc
loop
pop
cmp
adc
xor
push
stos
mov
sbb
lea
pop
test
cmp
idiv
jmp
xchg
pop
mov
mov
pop
pop
pop
pusha
je
mov
imul
fs
enter
mov
dec
jmp
mov
pop
xchg
fisubrs
ret
sub
lock
dec
sti
lret
adc
push
js
aad
jb
sub
imul
adc
fcoml
daa
lret
or
lea
nop
jge
aad
clc
fcoml
cmp
mov
mov
fimull
sbb
ret
dec
dec
push
and
xchg
ljmp
xor
xchg
cmp
mov
pop
aas
pop
push
fists
cli
cmp
cmp
loope
or
fistpll
jl
test
xor
pusha
add
sub
fildll
or
sbb
sub
lods
call
lds
outsl
and
push
insb
shll
test
ljmp
dec
xlat
stos
aam
cld
jp
clc
aas
out
outsb
add
std
mov
mov
sbb
sub
mov
iret
mov
in
mov
push
or
xchg
rolb
mov
dec
xchg
adc
pop
repz
fnsave
mov
out
pop
ret
cltd
ss
inc
and
rcrb
sub
lock
or
inc
jecxz
cmp
cmp
les
mov
or
in
inc
adc
xor
pusha
cmp
dec
call
jne
xor
subl
cmpl
sub
ljmp
jmp
dec
xchg
roll
xor
dec
pusha
pop
cmp
mov
jle
mov
cmp
xchg
scas
xchg
xor
pusha
mov
scas
jb
insl
inc
pushl
pop
fwait
push
dec
cmpsb
adc
push
repz
lahf
pop
xchg
xchg
popa
ror
iret
arpl
out
xchg
scas
imul
or
dec
cmpsl
jno
pusha
aam
mov
loopne
or
and
mov
inc
jg
icebp
pusha
jl
and
and
lret
add
cs
fstps
jo
lahf
andb
or
cmp
xor
lds
sbb
call
cmp
bound
dec
js
inc
dec
orb
pop
cmp
inc
icebp
divl
out
rorb
testl
cmp
dec
int3
mov
into
xor
addr16
fnsave
je
filds
and
imul
hlt
pop
xor
push
cwtl
sub
and
call
shll
pushf
sbb
es
or
stc
mov
jg
mov
out
adc
js
push
mov
ds
mov
adc
in
mov
xor
les
je
push
push
div
mov
rol
sub
xchg
mov
int
add
mov
daa
aam
lods
or
inc
jp
out
daa
cltd
out
sub
push
or
jno
add
outsl
cli
add
pop
adc
lea
hlt
idiv
je
into
in
ss
testb
stc
jle
mov
stos
or
insb
push
and
cwtl
call
push
and
xor
cmp
ffreep
and
and
test
xchg
push
fcomp
add
pop
and
add
sub
dec
stos
jg
dec
jno
adc
mov
lea
cmpb
jecxz
insb
aad
cmp
bound
mov
jnp
jmp
fs
cmc
sub
pop
repnz
in
cmp
jecxz
pushf
or
dec
push
imul
inc
and
fwait
pop
subl
call
jb
cli
sub
fbstp
sub
divps
lods
mov
push
sbb
daa
or
push
dec
push
add
sti
mov
test
fmulp
daa
mov
pop
push
ljmp
dec
sub
adc
out
cmp
xor
insl
arpl
dec
dec
inc
stos
leave
lds
int3
js
jmp
dec
xor
out
fisttpll
jle
popf
cmp
mov
inc
or
pop
and
inc
divl
mov
hlt
addl
push
hlt
pop
push
or
push
leave
pop
jno
rolb
lahf
aad
push
add
arpl
jge
adc
outsl
push
clc
inc
pop
loope
mov
cmp
xlat
or
xchg
cmpsl
lods
pop
xor
adc
mov
fimuls
push
push
and
lahf
test
push
je
popl
push
std
cmp
pusha
stc
sbb
stos
es
push
push
sbb
sub
sarl
outsb
mov
dec
movsl
popa
out
push
mov
fnstcw
cs
cmp
pusha
jbe
add
mov
sbb
lods
ror
lock
jne
cmp
lea
insb
in
lahf
push
scas
mov
std
mov
into
sahf
hlt
bound
imull
test
adc
mov
dec
mov
movsl
shll
icebp
pop
xchg
xor
jno
push
pop
enter
pop
jl
in
inc
rolb
popf
pop
xor
pop
movl
pop
jmp
dec
adcl
test
aam
sbb
cld
mov
pop
sti
andl
dec
cmpsl
es
pop
test
adc
add
gs
dec
fwait
add
scas
cs
fiaddl
sahf
hlt
aaa
mov
dec
je
fisubl
cli
popa
xor
pop
or
push
out
jbe
lret
popf
fsubrl
aad
in
sahf
shll
cmp
cli
mov
or
mov
xchg
clc
lea
out
cmp
mov
int3
cmp
fst
push
or
cmp
cltd
jnp
mov
adc
out
out
sti
movsb
mov
enter
gs
mov
out
jle
mov
std
ljmp
sahf
fsubs
cmp
and
push
stos
jne
fists
dec
imul
push
arpl
ja
fbstp
shrb
aas
loope
sub
jo
jl
test
push
mov
ficompl
std
xchg
jmp
xlat
fld
sub
les
xor
lock
inc
test
std
xor
dec
mov
out
icebp
sub
adc
mov
popl
andl
out
fwait
push
rol
xor
dec
and
mov
or
jg
aaa
aam
push
xchg
xor
imul
or
mov
subl
or
mov
adc
push
test
lret
mov
pop
mov
ret
lcall
cmpsl
mov
aam
mov
sbb
cs
dec
add
mov
inc
dec
mov
pop
icebp
jne
mov
cmp
xor
push
dec
push
das
push
dec
add
mov
mov
and
jno
fsubrl
mov
add
pushf
sub
lcall
jne
and
out
pusha
loop
ss
push
inc
mov
insl
aam
lcall
inc
inc
icebp
sub
mov
cmp
ja
sub
aas
aad
mov
stc
imul
cmp
inc
enter
testb
mov
jne
sub
inc
mov
pop
xor
push
or
fildll
outsb
movsl
loop
clc
pop
push
pop
xor
mov
cltd
pop
iret
jb
mov
mov
std
rcll
sbb
add
adc
in
jge
roll
sahf
stos
mov
mov
push
out
ljmp
add
cmpsb
pop
xor
sub
mov
aas
xchg
cmp
dec
add
cmpsb
hlt
xchg
jbe
lods
sub
or
mov
adc
cmp
js
sub
cmc
sbb
and
jb
mov
idivb
pop
addr16
addb
sub
mov
cmp
xor
loope
and
cmpsl
xchg
rol
sti
sbb
jne
fbld
stos
mov
or
out
mov
clc
test
int
in
pop
cmpsb
jge
or
and
xor
movsb
repz
das
shll
mov
insb
cmp
add
lahf
mov
inc
stos
cmp
ss
inc
aam
leave
xor
fldcw
in
inc
hlt
mov
rcrb
cmpsb
add
leave
fs
outsl
add
test
fsubs
mov
movsb
ss
call
xor
out
out
pushf
out
jecxz
xchg
test
repnz
mov
and
mov
push
jmp
dec
mov
pop
imul
push
cmp
inc
xor
pop
push
sar
add
mov
or
jo
adc
jecxz
mov
je
or
add
movsl
inc
mov
jmp
pinsrw
popf
sbbl
mov
test
push
push
sbb
test
mov
mov
imul
stos
mov
dec
push
rclb
jecxz
daa
js
mov
mov
int3
mov
clc
jg
es
outsb
pop
jmp
push
and
pop
out
je
mov
cmp
fld
insb
rcl
mov
xor
add
push
ds
adc
and
shll
cmp
sbb
aas
movsb
stc
jmp
jmp
mov
jge
stos
or
jle
add
dec
imul
inc
fldcw
leave
add
jbe
mov
fstpt
push
jns
cld
inc
cld
pop
call
addr16
push
clc
jno
sbb
mov
jp
xor
jbe
or
push
push
jnp
and
add
jbe
and
aad
loope
pushf
lods
sbb
rol
in
fcoml
arpl
lds
cmp
jae
ljmp
pop
dec
sub
push
bound
cltd
cwtl
movsl
push
pop
xchg
push
mov
sahf
sti
arpl
fidivrs
cmovno
fs
mov
xchg
dec
int3
dec
sub
test
add
jge
jns
push
pop
cmp
sbbl
shll
xor
test
jle
shrb
or
cmp
pop
pop
jl
rclb
icebp
ss
dec
mov
rcrl
mov
adc
ja
mov
sub
mov
mov
dec
ljmp
popa
mov
and
jo
imul
jl
cmp
mov
mov
push
fildl
jp
int3
sub
mov
dec
sar
nop
lret
negl
or
push
rcll
scas
test
mov
je
or
rcrl
ja
xchg
xor
push
xchg
sbb
mov
adc
sub
and
dec
mov
mov
decb
mulb
mov
das
adc
rcrl
and
clc
cmp
adc
lock
clc
xor
or
dec
subl
xor
movsl
inc
mov
jne
mov
sbb
gs
stos
roll
icebp
andl
dec
lcall
cmp
lods
mov
fsubl
into
sub
lods
shr
or
lcallw
loop
cwtl
sub
xor
sbb
pop
push
and
push
mov
repnz
add
call
enter
cmp
es
xor
iret
loope
dec
test
fistpll
jb
movl
sbbb
push
fbld
xchg
mov
nop
jp
inc
lret
cmpsl
push
out
xor
xlat
jl
ror
jp
adc
or
jno
adc
xchg
or
outsl
arpl
xchg
into
stos
jo
cs
addr16
adc
xor
cmp
push
sahf
fnsave
push
jo
inc
mov
dec
loopne
cmp
adc
in
cld
or
mov
jo
and
stos
xor
mov
adc
xor
mov
jnp
mov
fistl
adc
lock
push
cwtl
inc
add
shll
mov
mov
rcrl
test
rcl
movsb
jmp
pop
sub
in
loopne
movsw
out
aam
dec
add
lret
mov
clc
mov
fisubs
lods
jmp
pushl
out
sahf
pusha
aam
adc
fwait
add
add
lods
call
loop
lods
fyl2x
xchg
loop
insb
pop
rol
mov
push
xchg
mov
pop
lret
lods
mov
jo
pop
les
lock
cli
sarb
mov
leave
xor
inc
pop
xchg
rolb
test
pop
mov
cmp
adc
jge
push
in
lret
xchg
out
jp
sub
push
xor
cmp
mov
adc
push
push
aad
push
xchg
inc
push
repz
mov
in
imul
loopne
pop
or
nop
pop
add
jg
jne
je
aad
les
adc
xchg
xor
daa
lods
xchg
mov
imul
in
hlt
les
fiadds
mov
mov
add
stos
outsb
repnz
sbb
push
fstl
dec
mov
je
pop
push
mov
push
lds
das
loopne
sbb
ret
push
inc
nop
repz
inc
add
sub
xor
sbb
movsl
mov
inc
jnp
push
jmp
int3
add
xor
mov
push
or
pop
mov
and
aam
stos
dec
data16
in
repz
xchg
adc
cld
sub
fistps
and
or
inc
loope
fcompl
inc
xchg
xlat
and
dec
fcompl
in
ljmp
xor
ss
test
out
or
pushf
in
les
mov
inc
insb
inc
sbb
mov
rcrb
std
pop
outsl
push
cmp
das
or
out
nop
sbb
dec
pop
cmp
test
out
pop
es
xor
aam
sbb
je
sbb
hlt
jbe
aam
je
sbb
fimuls
cld
xor
cmpsl
adc
into
stos
fildll
hlt
mov
adc
pop
sub
lods
pop
daa
cmp
pop
push
mov
pop
xor
hlt
jbe
mov
jne
imul
jecxz
movsb
and
jno
test
mov
negb
dec
jmp
jo
jl
js
mov
call
mov
sahf
sbb
dec
call
sahf
mov
add
das
mov
andl
mov
fsin
ds
jecxz
ret
aad
pop
mov
push
add
daa
xlat
iret
ds
jo
popf
mov
xor
dec
cmp
pop
inc
int
dec
dec
ffreep
mov
mov
sarl
mov
insl
loop
lods
loope
and
pop
xchg
push
sarb
loopne
lcall
cmc
nop
cld
stc
jno
mov
xchg
lahf
subl
int3
xchg
mov
lds
xor
pop
sbb
mov
pop
inc
and
or
jbe
sbb
decl
push
jle
cmp
sbb
mov
xchg
xor
cli
jo
xor
ret
add
fisttpl
test
mov
fisubrs
mov
sub
es
dec
inc
sbb
movsb
dec
dec
ret
addl
xlat
xchg
data16
lea
test
jbe
push
push
mov
xlat
not
fsubrs
pusha
je
mov
cmpsb
xor
lds
cwtl
xor
jo
add
daa
pop
pop
and
cltd
push
add
sbbb
ss
pop
imul
sbb
cli
lcall
dec
pop
jns
insb
push
mov
mov
inc
sub
push
out
xor
popf
and
call
jno
lods
cmp
mov
add
sahf
xor
dec
ret
rclb
sbb
clc
add
cmp
enter
out
dec
xchg
js
fdivr
je
enter
test
add
movsl
mov
stc
jnp
pop
testl
cmp
jbe
pop
and
or
jmp
adc
cltd
jbe
cmpsb
mov
insb
pop
mov
add
pandn
sub
add
xchg
add
dec
push
cmpb
jle
leave
fistl
and
clc
daa
jns
icebp
ja
out
cmp
test
jae
adcl
pop
jmp
mov
mov
push
subl
push
xor
add
rcll
dec
loop
lret
mov
xchg
dec
out
shll
mov
addb
shrb
push
cmp
or
enter
andw
mov
push
scas
sub
insl
cmp
sub
int
jmp
dec
push
and
es
out
bound
popa
jg
xchg
dec
mov
inc
mov
jne
jbe
jp
fnstsw
stc
cmove
test
push
pop
xchg
pusha
xor
sahf
test
mov
popf
lods
mov
or
mov
mov
mov
adc
cmp
es
or
dec
outsb
jg
stc
inc
push
jns
call
int3
or
or
fcoml
add
pop
sbb
pop
out
add
loopne
adc
mov
mov
jnp
mov
pop
xchg
dec
mov
bound
ss
jns
xor
mov
mov
cwtl
stos
mov
nop
mov
js
stos
sub
and
cmpsl
xchg
push
loopne
pop
push
fmull
cmp
dec
cmp
out
out
rcrb
cltd
mov
cmp
inc
add
mov
mov
scas
stos
sbb
add
mov
jo
adc
add
push
mov
mov
lret
sub
in
xchg
jne
fisubrl
mov
dec
sbb
gs
push
das
xor
int
addr16
fiaddl
xor
mov
loop
or
push
divl
mov
and
and
xor
or
stc
xchg
fbstp
test
jecxz
mov
ja
add
inc
mov
movsb
sub
pop
cmp
push
add
test
cmpsb
test
mull
jge
dec
outsl
jp
insb
mov
xchg
je
and
fdivs
xlat
mov
inc
test
jle
in
cli
data16
shll
mov
adc
cmp
push
lret
cmpsb
invlpg
imul
cmp
pushf
mov
or
movsb
inc
push
jp
shrb
sub
push
pushf
sti
xor
pop
pop
add
push
xchg
pop
jne
mov
mov
cmc
cmc
outsl
popf
test
push
lret
cmp
dec
push
dec
mov
push
je
pop
ljmp
xor
adc
in
ljmp
sbb
xor
push
arpl
aad
xchg
inc
jecxz
xorb
cli
mov
or
andb
lock
sub
gs
add
mov
test
loop
lods
setbe
sub
lds
loope
fsubl
loopne
subl
loopew,pt
mov
sti
or
xchg
add
outsb
add
inc
rcrb
sub
test
in
iret
adc
roll
xchg
jne
ret
outsb
aaa
repz
andl
adc
mov
imul
mov
jp
jae
jle
jne
cmc
and
sbb
cmp
push
loop
mov
xor
dec
xchg
fwait
stos
mov
mov
testl
mov
push
mov
idivl
sub
mov
push
push
sub
lds
ret
wbinvd
push
pop
jns
popl
jo
or
and
sbb
icebp
mov
xchg
mov
stos
subb
in
sub
mov
mov
pop
or
inc
push
pushf
pop
ret
jg
sbbb
cmp
rorb
pop
stos
xchg
mov
jne
leave
mov
jecxz
push
sbb
xchg
and
push
mov
jg
xor
cmc
sti
insb
or
adcb
ror
cwtl
orl
or
shlb
out
ficompl
loope
push
rcll
jo
fimuls
or
cmpsl
and
inc
mov
ss
dec
dec
cmp
insl
sbb
xlat
mov
push
arpl
inc
dec
jge
inc
or
add
pop
das
cltd
mov
pushf
add
or
lret
pop
test
add
xchg
add
xchg
scas
mov
cmp
aam
jge
mov
dec
out
dec
add
les
push
xor
dec
mov
imul
push
and
pop
cmp
mov
mov
jle
sti
insb
roll
add
sub
popa
push
add
scas
lahf
cmp
ja
mov
scas
and
xchg
imul
jns
je
inc
xor
out
xor
mov
or
stos
xchg
ret
repz
std
jae
in
and
cmpsl
mov
dec
stos
adc
sub
inc
test
jne
lret
pusha
addr16
mov
shrl
outsb
sbb
gs
cwtl
adc
mov
iret
fnstenv
cmp
and
outsb
aad
sbb
stos
icebp
ror
push
es
popa
push
and
jmp
cld
pop
sub
movsl
add
repz
mov
jo
xor
add
test
loope
mov
mov
mov
je
and
cmp
rclb
aas
repnz
jb
pusha
adc
insl
cmc
notb
sbb
adc
in
stc
cmp
adc
push
outsl
push
pop
ljmp
je
dec
jbe
popa
cmpsb
lea
xchg
fsubrs
xorl
sub
repnz
ret
cmpsb
push
dec
pop
adcb
mov
jo
dec
jnp
mov
and
shlb
cmc
popf
or
pop
jo
jle
mov
lcall
push
pop
jmp
or
leave
fwait
scas
notl
je
je
das
xchg
test
in
mov
data16
xchg
std
fs
loope
jnp
movsb
dec
shlb
out
mov
shl
push
sub
mov
adc
xchg
outsb
roll
cltd
jno
nop
fimuls
pop
out
push
dec
push
cmpsb
cmpsl
xor
xor
sub
stc
xchg
push
pop
push
lahf
mov
sti
or
mov
push
dec
mov
das
mov
movsb
xchg
jecxz
in
jbe
xchg
inc
out
inc
xor
aad
ror
xchg
mov
js
push
or
inc
call
ret
mov
in
pop
mov
add
dec
push
notl
movsb
xlat
sbb
fnstsw
mov
aam
mov
cmp
imul
or
jmp
dec
sub
mov
push
rcll
repz
lods
cli
lods
dec
outsl
dec
add
xor
pop
rcrl
adc
fistl
add
adc
sub
lods
mov
imul
in
xlat
xchg
fsubl
xchg
jg
ret
inc
push
mov
inc
int
or
rcrl
adc
jbe
and
loopne
inc
fmull
pop
mov
out
mov
push
rcrl
mov
call
insb
push
mov
ss
jmp
mov
std
shrl
mov
in
iret
sti
aaa
push
out
mov
jae
clc
bsr
cmpl
inc
adc
imul
sub
arpl
mov
es
fcoml
xchg
aad
out
xor
cli
cmp
mov
repz
xchg
fdivrl
and
pop
adc
rcl
inc
jmp
and
jb
push
cmp
push
lea
jnp
and
rol
lds
scas
cmpb
loope
test
popf
call
sbb
in
stos
or
sub
data16
int3
ret
mov
stos
call
ja
cltd
stos
adc
gs
movsl
bound
pushf
xchg
pop
ljmp
jo
and
push
jge
xor
call
clc
aas
add
mov
xlat
sub
jno
lods
inc
add
cmp
test
das
dec
les
adc
lds
cmp
xor
sub
pop
xchg
aaa
pop
fcoml
les
test
pop
outsb
inc
mov
mov
scas
neg
xor
mov
in
movb
gs
sbb
inc
loope
bound
jne
cmp
adcb
sbb
in
dec
fdivs
mov
rcrl
ret
mov
jns
cli
jge
call
je
into
repnz
mov
sbb
std
mov
imul
pushf
sbb
test
lret
pop
dec
and
dec
and
jo
test
outsb
cmp
adc
lcall
sbb
inc
pxor
xchg
imul
je
pop
ss
cs
xor
or
mov
or
lods
cmp
cmpsl
rorl
or
jb
pop
mov
in
adc
dec
fs
inc
mov
xorb
icebp
data16
icebp
mov
in
cmpsl
dec
jecxz
xchg
inc
ds
lods
popa
lds
fistl
mov
gs
rorl
loop
imul
cmp
jecxz
adc
mov
lock
imul
sahf
lahf
fwait
inc
sbb
imul
push
jno
pusha
cmpsl
outsb
stos
mov
aaa
inc
sbb
xchg
mov
test
aaa
jbe
sbb
dec
xchg
inc
dec
shlb
inc
jl
leave
popf
sub
xor
call
add
int3
scas
push
sbb
push
dec
cmp
fisubs
push
xchg
xor
jmp
adc
sbb
mov
and
lahf
call
jnp
negl
sbb
outsb
pop
xchg
jge
fstpl
outsb
inc
mov
rorl
mov
inc
cmp
test
cli
test
jae
push
ja
pop
call
loope
stos
mov
cmpsl
cmpsb
fwait
dec
lock
shrl
xchg
cs
xlat
das
adc
push
xor
inc
mov
adc
add
xchg
push
add
pop
pop
fidivrl
and
shl
adc
add
gs
fidivl
cmp
movsb
ja
test
cli
and
insl
sub
dec
mov
jb
add
cmp
add
xchg
add
pop
push
jnp
fwait
outsl
ret
popf
in
mov
dec
sarb
adc
sbb
jecxz
dec
pop
mov
in
mov
int3
xchg
sub
daa
push
dec
stc
jns
and
in
xchg
push
dec
jb
orb
std
hlt
jne
fwait
mov
xchg
test
pop
xchg
in
mov
push
inc
repnz
outsb
hlt
adc
mov
je
jg
sbb
jl
pop
out
bound
or
popa
gs
pop
xor
mov
sbb
aam
incb
leave
pop
and
movsl
insb
add
jae
lods
jne
lea
out
std
inc
pop
outsl
rorl
loop
push
lods
jge
dec
sahf
ss
mov
mov
lcall
adc
movsb
xlat
lock
cli
jno
cmp
hlt
dec
popf
dec
es
gs
data16
inc
and
imul
data16
adc
sub
imul
xchg
mov
loop
lret
mov
roll
sub
dec
mov
in
mov
rol
push
dec
ds
test
data16
and
push
lret
jnp
xor
jb
mov
sbb
loop
sete
dec
repz
pop
dec
pop
push
push
or
mov
mov
and
js
jmp
bound
and
stos
es
mov
fdiv
popa
mov
push
ds
jb
pop
roll
int
iret
sub
pop
mov
daa
test
jecxz
mov
out
and
rcr
cmp
mov
ret
cmp
push
dec
outsb
mov
cld
cli
pop
mov
popf
sub
push
loope
flds
cs
popf
xchg
js
sbb
imul
out
fldl
push
xor
xchg
lret
scas
pop
sbb
jmp
dec
inc
sub
cmc
out
rcrl
test
mov
imul
lcall
hlt
xor
sbbl
sbb
inc
or
outsl
sbb
das
je
adc
mov
xor
xchg
jb
scas
mov
add
inc
add
lds
inc
jg
pop
jge
pop
and
push
push
cmpsl
or
add
sbb
fiaddl
pop
clc
jnp
fdiv
xchg
and
lahf
test
aas
dec
aaa
sub
cmpsb
out
push
nop
lcall
push
loop
cli
in
sub
iret
mov
scas
sbb
jb
add
xchg
or
push
push
jne
leave
mov
pop
add
jge
aas
pushf
aad
adc
cmpsb
lock
movsl
dec
test
inc
ret
mov
or
pop
xchg
mov
lret
mov
add
mov
pop
cmp
pop
aad
inc
jl
adc
or
add
mov
scas
xchg
lods
xchg
mov
scas
or
jecxz
testb
stos
aad
sbb
or
xchg
repnz
jns
jo
dec
leave
incl
std
and
mov
cmpsb
cmc
js
jbe
dec
inc
adc
mov
test
das
popa
sub
dec
cmpsl
add
mov
mov
mov
in
mov
jp
dec
icebp
aam
pop
cmpsb
clc
dec
ja
push
lahf
lcall
cmpsb
add
aam
es
out
scas
jp
cmp
scas
jecxz
js
ds
lret
jne
xor
add
xchg
cmpsb
cwtl
movsl
fidivrl
or
int3
mov
mov
fstl
cmpsl
xor
inc
xor
fchs
imul
pushf
mov
int
add
test
imul
adc
das
ss
cmp
mov
pop
ljmp
add
into
imul
jnp
lds
mov
mov
sbb
repnz
mov
ds
mov
pop
push
imul
shr
dec
adc
out
enter
ss
popf
leave
push
pop
xchg
jnp
into
lock
xchg
pop
cld
sti
push
jmp
and
ja
xchg
les
and
push
outsb
leave
add
sti
repz
jae
xor
rcl
jle
mov
and
scas
push
jg
fdivrs
jmp
and
out
add
mov
dec
mov
xchg
push
popf
sbb
xor
mov
shrb
sub
adc
ss
add
test
push
andb
sub
mov
jge
and
cld
push
cmp
pop
jmp
fidivrl
mov
jp
mov
ja
sbb
iret
jb
push
mov
push
jecxz
lret
lds
fstpl
mov
shlb
adc
dec
mov
push
out
pop
and
jmp
mov
fldt
mov
cmp
cmp
outsb
cmp
push
or
sbb
repz
inc
pop
cmp
adc
bound
dec
stc
rclb
insb
hlt
das
xchg
cmp
inc
mov
xor
ljmp
push
cli
mov
push
ss
xchg
jle
and
mov
fstpl
fnsave
fisubl
call
mov
ja
jge
lock
clc
mov
pop
xor
gs
mov
out
jg
or
loop
or
xchg
and
inc
ja
fdivrl
fld
fldcw
andb
shll
inc
push
push
lcall
fmuls
aaa
daa
or
jo
dec
sbb
add
in
scas
ds
std
dec
sbbb
loop
dec
inc
lds
jno
sub
repnz
push
sub
pop
inc
test
fidivrl
adc
dec
jno
mov
ljmp
out
pop
insl
rol
add
test
xchg
and
mov
aas
sarl
or
data16
outsb
lcall
push
fwait
push
mov
push
xor
rolb
mov
jle
push
in
test
scas
push
pop
dec
ret
xchg
mov
xchg
cmpsl
add
push
pop
shrb
jnp
lret
xor
xchg
loop
push
pop
hlt
pushf
outsb
pop
bound
cmp
je
andb
jg
aad
cmp
jl
add
push
or
cmp
addr16
sub
lods
add
jp
inc
cli
shl
mov
lret
adc
rcrb
loopne
dec
movsl
stos
add
push
push
fwait
int3
fistpl
xchg
lret
lahf
fwait
int3
aaa
in
out
mov
inc
repz
pmullw
shl
rcll
imulb
push
ss
inc
xchg
gs
jl
jo
arpl
mov
daa
lods
sbb
aas
popf
call
push
mov
push
push
fisttpl
push
or
ror
ljmp
sub
out
scas
pop
sbb
mov
mov
adcl
and
faddp
mov
jmp
sbbl
xor
pop
or
adc
jo
xchg
pop
aam
nop
or
xor
or
sti
sbbl
addr16
mov
adc
inc
roll
int
jno
lret
out
mov
adc
sbb
xorb
lret
and
jg
roll
lock
pop
in
sbb
cltd
adc
std
cli
inc
pop
xchg
fdivr
adc
adc
push
adc
pop
mov
inc
iret
fmul
jge
subl
jo
inc
cwtl
jecxz
sub
test
repz
in
jne
into
fmulp
inc
jg
push
je
das
in
test
fiadds
mov
cmp
mov
mov
lret
pop
pop
add
jne
cmp
mov
adc
arpl
clc
int3
fildll
cmp
mov
sub
sahf
fsubl
mov
lret
mov
test
mov
sbb
test
xor
inc
rorl
sub
push
stos
sub
mov
das
stos
lds
xchg
clc
jae
bound
push
mov
and
lret
sahf
hlt
imul
ss
mov
pop
xchg
outsb
pop
dec
and
inc
xchg
xchg
cltd
mov
dec
cmp
pop
mov
pop
test
push
stos
icebp
mov
repz
leave
sahf
pop
fcoml
hlt
xchg
jge
mull
gs
mov
sub
push
and
jmp
inc
lock
xchg
and
and
cmp
jae
mov
cmp
ror
and
test
jmp
movsl
dec
cmp
pop
arpl
dec
inc
test
inc
iret
hlt
pop
insb
movl
sbb
adc
mov
inc
test
subb
mov
rcrb
or
dec
adc
adc
mov
test
shrb
inc
or
and
pop
addl
push
nop
lock
mov
jl
icebp
scas
outsl
lret
hlt
arpl
sbb
movsb
mov
notl
cmpl
inc
jnp
dec
push
es
sub
sbb
les
dec
xchg
iret
cmpsb
or
cmp
and
movsb
and
popa
jae
fstpl
and
mov
xor
lahf
les
mov
jmp
inc
and
sub
and
mov
aaa
adc
or
jo
fcomip
ret
mov
loop
xor
xor
sbb
sbb
jno
jl
test
push
cli
jne
mov
stos
movsb
outsl
lods
and
in
mov
xchg
popf
lock
jle
shlb
sbb
mov
jne
xlat
aaa
arpl
out
jmp
xorb
cld
popf
hlt
in
imul
fnsave
loopne
jae
fisubrs
cmp
jns
scas
sbb
mov
fs
push
mov
sbb
jmp
std
push
mov
sbb
pop
cwtl
mov
pop
mov
xor
std
pusha
jge
cmp
or
inc
pop
cltd
hlt
xchg
cmpsb
mov
push
cmp
mov
aad
shrb
mov
in
xchg
fidivs
jge
loop
and
fidivrl
fisubrl
xchg
add
mov
jbe
xor
pop
xchg
push
sub
mov
jecxz
mov
jg
int
in
rorb
movsb
xchg
test
aaa
les
shrb
sbb
mov
xchg
pusha
pop
movsb
lahf
cmp
jne
sbb
andb
push
out
clc
lea
jb
lcall
daa
jecxz
divl
stc
mov
sahf
ja
or
add
fcoms
aad
cli
frstor
out
push
inc
aad
dec
sahf
aam
mov
xor
cmp
inc
ds
inc
inc
mov
and
mov
and
mov
fimull
aas
int
or
gs
mov
dec
push
out
lds
xchg
fs
push
icebp
aaa
insl
cmp
popf
pop
or
insl
or
fs
scas
sbb
icebp
outsb
stc
scas
jg
pop
movb
xchg
movsl
add
jae
lods
std
call
inc
add
mov
push
pop
mov
aad
sub
jbe
out
movsb
loopne
lret
add
adc
ss
sbb
pusha
inc
and
xor
ljmp
mov
das
xchg
jae
push
mov
mov
sub
repnz
xchg
test
adc
lods
inc
sahf
inc
js
inc
pop
insb
mov
sub
jnp
or
jnp
nop
sarl
cli
cli
and
cmpsb
movnti
bound
cld
lods
or
mov
mov
mov
xchg
das
sub
lods
push
xchg
pop
dec
xchg
ret
insl
pop
out
notb
adc
lret
inc
cli
dec
jecxz
sub
xchg
fcoml
fimull
or
jge
xchg
or
subb
jb
adcl
aas
icebp
mov
fdivs
ficompl
das
sbb
outsl
fwait
sub
dec
xlat
sbb
push
insl
cmp
xor
imul
test
cmp
pop
mov
lods
inc
push
fstl
shlb
adc
xor
xor
loope
adc
jp
push
or
lahf
mov
mov
lods
fstl
xchg
fidivrs
cmp
arpl
push
push
fildll
lcall
mov
pushf
push
bound
loop
jns
mov
pusha
push
lds
imul
das
add
push
pop
adc
int3
dec
cltd
inc
jl
push
inc
inc
add
jnp
sbb
dec
adc
in
mov
add
dec
imul
inc
and
cmp
xchg
mov
sub
xchg
push
mov
xchg
jg
jbe
int3
in
mov
and
push
xor
repnz
test
dec
nop
dec
adc
bound
fisubs
dec
hlt
icebp
add
repnz
sarb
rcrb
xchg
jo
mov
cmp
ss
push
mov
pop
lods
ljmp
test
aaa
dec
hlt
les
xchg
sbb
inc
lock
in
lret
mov
jp
jnp
and
mov
mov
mov
inc
imul
mov
daa
add
xchg
out
dec
jbe
repnz
pop
rcr
jns
outsl
ret
xor
mov
sub
inc
pop
or
mov
imul
loopne
out
mov
push
dec
mov
int3
dec
jl
sbb
mov
jno
xchg
enter
inc
push
jb
adc
xorb
xchg
pop
test
push
ljmp
mov
std
in
add
aas
mov
out
xor
pusha
gs
cs
mov
xlat
xor
int3
leave
adc
add
incb
xor
aaa
sbb
std
adc
addl
les
mov
jmp
sti
cmp
test
dec
cs
xchg
pusha
inc
mov
push
xor
sub
das
add
out
push
ja
or
ljmp
push
paddq
pop
sbb
iret
inc
pushf
and
jecxz
cmc
sbb
cmp
xchg
or
add
in
mov
adc
test
ret
aas
ja
rcl
in
cmc
xchg
mov
aam
jl
sar
mov
cmp
cltd
mov
stos
jns
xor
mov
ret
inc
sub
inc
mov
jb
and
add
iret
in
lds
int
clc
adc
mov
test
adc
sbb
js
je
lret
pop
push
or
xor
or
mov
fsubrs
pop
mov
cmp
enter
xchg
ret
dec
jge
movsb
in
mov
test
push
std
in
insl
adc
mov
sarb
andl
decl
sbbb
add
xchg
out
daa
xlat
test
mov
dec
lds
or
adc
mov
add
call
sti
pop
add
cmp
std
cmp
fsub
inc
inc
in
inc
stc
mov
push
or
jg
ret
xor
add
call
inc
jnp
mov
push
pusha
daa
sub
cld
jbe
clc
movsb
sbbb
das
mov
and
scas
push
loope
rep
push
jae
jo
shlb
adc
sarl
fbstp
shrl
in
sub
ds
out
or
movsl
lcall
inc
movsb
sbb
mov
cmp
dec
push
in
mov
push
mov
or
and
add
or
out
jl
stc
jnp
and
jmp
dec
ljmp
std
cmp
ljmp
test
fcompl
imul
ljmp
sub
movsb
xchg
adc
push
add
mov
pop
jb
repz
pop
jp
test
add
mov
xor
inc
dec
push
test
pop
and
mov
arpl
movsl
jnp
stos
lods
inc
jg
cmpl
stos
aaa
cmp
jno
sahf
sub
mov
shll
xor
lcall
insb
aam
push
test
mov
fadd
cmp
mov
out
out
test
testb
push
jmp
fnstsw
mov
pop
loope
mov
lahf
movsb
or
nop
ret
inc
sub
mov
mov
mov
or
int
es
cwtl
shr
and
xchg
xor
jl
jbe
ret
movsb
shrb
dec
movsb
mov
and
call
mov
mov
sub
jb
or
test
sub
and
pop
cmc
imul
test
push
push
and
imulb
mov
outsb
rcr
pop
jg
arpl
sbb
pop
cmp
mov
stc
sub
and
and
in
push
dec
repz
cltd
das
ss
push
out
imul
cwtl
sub
shll
shl
sarl
pop
stos
mov
pop
jg
pushf
xchg
adc
jb
xor
dec
popa
push
xchg
or
std
pop
sub
jge
in
arpl
jns
mov
pop
mov
mov
mov
xchg
cmp
xor
xchg
addr16
inc
xor
or
add
dec
sbb
xchg
cmpl
repnz
pop
or
leave
sbb
imulw
fisubs
sub
outsl
xchg
mov
outsl
sbb
hlt
pop
inc
out
orl
fisubl
jmp
pop
cld
inc
xor
lcall
xchg
sahf
imul
mov
js
jnp
adc
and
in
pop
or
hlt
cmp
and
sbb
enter
adc
xchg
mov
xchg
int3
inc
stos
sub
mov
rol
jmp
rcrb
subb
inc
jl
loop
jb
mov
icebp
inc
enter
mov
lret
sahf
add
pop
mov
and
imul
xor
cmp
and
test
test
movsb
inc
or
lods
fadd
adc
mov
add
int
xor
add
cmc
sbb
loop
jo
repz
leave
jl
inc
aaa
pop
pop
jo
inc
jno
jp
mov
or
enter
inc
pop
jb
xchg
or
cmp
push
sub
xchg
push
test
hlt
xchg
fs
sti
pop
gs
xor
push
lock
cwtl
into
xchg
jge
sahf
repz
movsb
int3
mov
dec
pushf
mov
icebp
lret
pop
fwait
push
mov
ret
xlat
testb
dec
dec
adc
iret
nop
ds
idivl
jg
adc
stos
call
das
jmp
jmp
push
test
aad
aas
movsl
stc
or
cmc
aaa
pop
lcall
pop
test
test
pop
or
ss
in
lahf
stos
pop
mov
push
lds
xchg
sahf
test
movsb
lcall
cwtl
add
xchg
push
xchg
mov
sbb
ret
cmc
mov
mov
lock
adc
sarl
push
sub
jns
hlt
outsb
jle
cs
in
or
mov
pop
mov
xor
pusha
or
out
dec
lods
test
mov
jp
push
adc
mov
adc
push
fsubrs
adc
loop
aaa
test
add
dec
cmp
mov
inc
lock
in
or
imul
js
and
pop
jbe
push
fildll
and
mov
out
jecxz
in
push
mov
and
pop
xor
mov
sbb
adc
int3
call
and
ret
iret
sbb
and
jo
dec
adc
mov
or
sbb
push
jmp
pop
and
cmp
cwtl
and
in
mov
push
filds
iret
fcom
push
imul
or
dec
ret
pop
and
push
subl
adc
repz
std
inc
rol
xor
sub
mov
icebp
mov
roll
or
ret
jecxz
out
popa
push
dec
in
xchg
xchg
sub
fldt
adc
add
lods
imul
add
xor
je
xchg
sbb
push
add
in
adc
dec
push
loop
pop
jg
jns
inc
clc
push
or
jb
mov
fcomp
pop
jecxz
xor
xor
or
push
adc
into
push
addr16
in
pop
pusha
sub
sbb
out
fcmovne
fwait
into
out
jb
imul
dec
shll
stc
inc
adc
jge
pusha
iret
xchg
cs
das
out
adc
push
pop
in
and
jne
jne
and
mov
mov
sub
movsb
mov
cwtl
jae
mov
movsl
andb
mov
add
out
in
les
fsts
jmp
or
jne
add
add
insl
xlat
xor
dec
adc
sbb
mov
js
pop
pop
adc
orl
popf
gs
gs
xchg
aad
and
fdivp
adc
add
sub
dec
mov
inc
out
repnz
arpl
fldcw
push
into
repnz
pusha
add
xor
mov
xor
mov
xchg
xchg
icebp
pop
mov
mull
pop
fwait
lret
icebp
cmp
push
enter
sbb
and
int3
popa
dec
xor
xchg
xchg
into
xor
jmp
or
outsb
push
push
lock
xor
mov
rcrl
into
lcall
cltd
sbb
xor
cmc
aas
and
dec
adc
cs
and
xchg
das
bnd
cltd
ja
ljmp
mov
adc
cmpsb
mov
sub
push
pushf
mov
nop
xorl
push
int3
sub
insl
mov
mov
stos
les
lret
push
pushf
and
mov
dec
rclb
lea
sbb
into
cmpsb
mov
pushf
ljmp
inc
dec
push
dec
push
insl
ret
std
movsl
push
out
rcll
push
xchg
push
fldcw
sub
xchg
add
outsb
pushf
loope
cmp
sub
xchg
xor
int3
stos
xor
mov
rol
adc
int3
xor
mov
push
ficoml
push
lea
out
xchg
shl
adc
xchg
repnz
popa
xchg
gs
addr16
adc
or
fsubl
jb
sbb
cmpsl
pushf
mov
ret
and
and
xor
sbb
push
sbb
repnz
fsub
cmpsl
pusha
adc
add
ljmp
xchg
xchg
or
cmp
mov
cmpsb
aad
call
xor
mov
xchg
xchg
mov
mov
fnstsw
xchg
std
imul
daa
aad
ret
ljmp
ret
push
xlat
mulb
scas
pop
xor
aas
stc
nop
inc
dec
test
mov
pop
dec
xor
jb
mov
pop
pushf
hlt
leave
in
lock
scas
inc
jmp
imul
leave
fidivrs
xorl
sub
daa
nop
mov
cs
adc
or
add
popa
cs
pop
mov
loope
push
pop
add
cmp
cs
lods
jg
jo
inc
xchg
jno
out
les
subb
andl
or
pop
jge
push
leave
or
push
xor
inc
sahf
loop
fucomi
or
mov
adc
repz
push
push
ljmp
scas
push
xlat
hlt
rolb
cmp
test
sarb
mov
mov
cmp
bound
fsubrl
icebp
cmc
pusha
inc
and
cmp
cmp
inc
out
fmulp
inc
sbb
mov
push
sbb
pop
push
fcoml
and
jnp
mov
mov
imul
ja
sub
xchg
add
or
fcoms
inc
in
jp
mov
jmp
jne
mov
out
ja
bound
add
mov
xor
loopne
fnstsw
jcxz
push
xchg
scas
jae
arpl
or
mov
je
cs
mov
sub
and
pop
mov
imul
or
lret
jne
pop
push
xor
mov
or
dec
mov
sahf
mov
and
xchg
in
movsl
xchg
jae
notb
into
mov
or
and
adc
mov
repz
out
out
xor
das
xor
jne
lret
pop
fnstsw
xchg
aad
or
loope
movb
in
mov
dec
addr16
jmp
pop
int
sti
loop
insl
orb
test
inc
cmp
sbb
inc
insl
call
dec
popa
loopne
sub
mov
mov
lcall
loop
sub
cld
and
mov
cltd
ja
push
shlb
mov
inc
sti
scas
jle
test
std
lret
ljmp
les
inc
dec
push
xor
mov
pop
push
cmp
outsb
std
xor
jp
sahf
popa
push
or
test
iret
adc
aaa
lahf
adc
push
test
jns
cltd
mov
in
les
cmp
movaps
cmp
adc
int3
pop
jle
std
push
mov
shlb
inc
or
imul
add
insl
inc
mov
out
lods
jbe
movsl
mov
imul
sbb
jle
lcall
cld
cmp
nop
roll
adc
xchg
test
add
rcrb
shrb
adc
jns
pop
mov
mov
add
and
push
push
outsb
data16
add
inc
call
test
mov
aaa
push
mov
fwait
inc
dec
push
xchg
sub
test
mov
orl
adc
cmp
xchg
test
popa
fwait
cmp
xor
mov
notb
cmp
leave
sub
mov
mov
xor
inc
js
loopne
xchg
idivb
inc
push
and
iret
xor
jo
cltd
lcall
jne
subb
nop
sub
in
xor
inc
in
push
cmp
in
stc
pop
inc
fnstcw
and
add
pop
mov
cmc
push
lock
and
leave
mov
pop
in
shlb
mov
xchg
lret
nop
sahf
cmc
jmp
cmp
movsb
inc
jecxz
sbb
or
ror
mov
mov
imul
mov
fistps
movsb
adc
incl
rorl
or
dec
mov
or
rorb
jg
mov
loop
xchg
and
pop
imul
push
ljmp
fsubl
jo
jg
sub
push
sub
inc
lahf
mov
cmc
mov
mov
into
add
lea
xlat
leave
adc
adc
cmp
mov
pop
sbb
jle
je
pop
pusha
jb
push
sbb
imul
mov
ret
jns
cld
jle
sahf
pop
xchg
sub
jecxz
xchg
lcall
lret
clc
mov
and
mov
cmp
pop
sahf
rcll
or
scas
mov
cmp
xchg
dec
test
scas
mov
mov
in
and
cltd
std
lea
cmp
fsub
mov
scas
mov
sub
jp
push
mov
jmp
ja
stc
bound
cmp
rcr
xchg
in
xchg
mov
xchg
or
incl
dec
xor
cmp
sub
xchg
add
push
mov
fisttps
mov
or
mov
and
inc
out
push
push
je
jb
sbb
insl
adc
push
xchg
test
out
pop
jnp
mov
pushf
cltd
lods
adc
mov
sbb
adc
and
sahf
cmp
ror
inc
cmp
push
adc
inc
pop
jle
lahf
fldcw
loope
adc
xchg
sub
add
es
jge
dec
push
addr16
lret
mov
rorl
je
es
addr16
xor
xchg
fbstp
bnd
sub
pop
xchg
mov
pop
dec
and
and
add
movsl
ds
orb
test
mov
fistl
push
add
leave
popa
loopne
pop
xchg
sbb
lret
add
xchg
stc
mov
mov
sub
cmpsl
incb
data16
stc
insl
into
in
jb
jle
pop
dec
movsb
mov
insl
push
cmc
push
inc
xor
or
sub
cmpsl
jle
sub
dec
mov
xchg
or
lahf
test
test
hlt
lret
lahf
adc
lret
sub
pop
lcall
mov
fildl
icebp
adc
es
stos
cmc
and
and
incl
mov
mov
cmp
in
gs
mov
sub
pop
jb
mov
sahf
pop
shlb
mov
outsl
rol
cltd
and
imul
dec
int3
xchg
aam
ficoml
scas
jecxz
movsl
clc
out
decb
pop
mov
int3
add
aam
or
pop
pop
rorb
scas
insl
xor
mov
cmpsl
outsb
and
stos
scas
rolb
in
inc
rolb
ficoms
and
lcall
xchg
addr16
cmpsb
jne
mov
and
adc
repnz
add
lcall
pop
pop
sbb
jns
inc
inc
scas
stos
out
cmc
dec
mov
xor
lock
and
xchg
inc
shl
leave
lcall
or
mov
sub
lods
test
jge
dec
xchg
jp
push
clc
mov
ja
and
ret
jno
in
into
inc
ds
cmp
outsl
jns
stc
push
test
in
sub
gs
loop
xchg
mov
sbb
mov
imul
mov
xor
mov
jne
mov
std
xchg
or
pop
lods
nop
mov
popf
cli
int3
aam
ss
lock
xchg
loope
mov
cmpsl
cmpsl
fwait
push
mov
xchg
mov
pop
adc
dec
jecxz
scas
inc
lods
test
cli
add
sub
lock
dec
mov
repz
stos
pop
nop
mov
faddl
dec
adc
mov
jge
adc
jo
cli
jae
stos
fistps
adc
inc
cmp
in
mov
xchg
push
popl
mov
push
ljmp
repnz
jmp
repnz
and
dec
sbb
jge
mov
push
xor
push
pushf
pop
cld
jecxz
mov
orl
cmp
bound
ds
inc
dec
mov
push
in
ret
out
pop
hlt
and
lea
push
dec
lret
out
mov
iret
xorb
in
imul
inc
jae
rorb
sbb
in
xchg
arpl
inc
cmp
mov
sbb
mov
lea
pop
das
stos
sub
out
mov
xor
add
repnz
shlb
lock
mov
add
frstor
mov
orb
jne
mov
sbbb
scas
cmp
push
inc
test
add
fcomi
cmpsl
sarl
loop
test
adc
adc
mov
mov
pop
clc
jb
pop
sbb
mov
mov
mov
enter
xchg
test
loope
pushf
and
push
jno
mov
inc
in
outsl
dec
fcompl
movsb
cmp
mov
pop
lea
pop
mov
fcmovnbe
int3
ljmp
jb
clc
imul
loopne
jl
dec
or
loope
out
or
lret
imul
dec
dec
mov
add
call
mov
into
sarl
enter
in
cwtl
add
ds
xor
mov
lea
shl
popa
add
mov
cli
inc
shlb
imul
pop
push
pop
lahf
shl
fists
lret
lret
pop
in
mov
lret
push
add
sbb
xor
sub
test
xchg
sub
sub
cmp
sub
mov
jnp
xor
aaa
push
fwait
je
aaa
or
cmpsb
mov
or
call
dec
mov
insl
enter
ss
retw
mov
sub
sub
int
xor
pop
lock
outsb
sub
fucom
daa
icebp
les
outsb
dec
es
lods
push
or
xchg
or
mulb
cmp
adcl
lods
cmpsb
in
jns
cmp
sub
add
mov
adc
push
testb
inc
inc
inc
test
pop
jb
mov
iret
inc
popa
mov
inc
and
mov
and
push
mov
mov
cmc
mov
rcll
pop
pop
cmc
filds
ds
and
add
mov
mov
rcr
adc
test
sbb
and
inc
es
add
xchg
mov
and
mov
jb
loope
mov
shl
repnz
scas
inc
fiadds
jno
imul
and
dec
loop
lret
mov
into
ficoms
movd
andl
enter
push
movsb
push
and
push
ljmp
in
add
loope
es
shlb
mov
xlat
iret
call
enter
and
jmp
out
movsl
inc
test
mov
cs
jnp
push
xlat
inc
adc
mov
mov
stos
gs
divl
fildll
jo
cmc
xor
cwtl
xchg
mov
vpcmpgtd
cld
fwait
sarl
icebp
push
aam
cmp
jle
sbb
rorl
sub
push
movl
sar
jno
cmpl
jl
cltd
loopne
fcoml
repnz
xor
outsb
pop
lcall
xor
push
arpl
mov
adc
mov
jle
cltd
mov
cmp
adc
fcomi
xchg
mov
cmc
lods
je
icebp
pop
inc
inc
repnz
sub
pop
aaa
mov
aaa
lods
cmp
mov
mov
pop
ljmp
addr16
adc
or
dec
and
or
js
divl
loopne
fcompl
xchg
cmp
fcmovb
sbb
pushf
mov
sub
repz
loopne
aam
cwtl
xchg
push
dec
fwait
sub
ret
or
les
mov
pop
pop
lahf
dec
decl
cmc
cmpl
addr16
pop
inc
test
scas
movsl
sub
test
mov
loopne
jne
add
dec
jnp
or
jne
out
in
pusha
popf
push
insl
lods
je
stc
pop
daa
scas
cmp
mov
xchg
add
shrl
ja
cld
test
jo
iret
pop
lds
push
sub
int
push
sbb
and
mov
fs
push
scas
mov
daa
je
push
mov
mov
cs
dec
sbb
mov
jmp
dec
idivb
mov
or
or
sarl
je
daa
fbstp
mov
in
fsub
fldcw
or
aad
data16
sub
push
cmpsb
mov
fdivl
mov
adc
nop
stos
jl
ja
cmp
clc
les
icebp
add
js
mull
repz
in
sub
cltd
lods
lods
pop
cs
lret
fmulp
out
cli
mov
sbb
and
or
ss
or
jae
ret
or
shl
xor
scas
rcll
mov
ds
sbb
movsl
shlb
lods
fucomip
pop
shl
out
push
sub
or
lock
repnz
aas
int3
cwtl
pusha
mov
es
mov
inc
and
sbb
push
dec
pop
xor
ret
addb
gs
dec
popf
dec
arpl
sub
and
lds
sbb
mov
inc
sarl
outsl
mov
adc
push
orl
in
fnsave
lcall
push
mov
adc
jmp
mov
cmc
mov
in
mov
ficomps
xor
icebp
lcall
add
mov
lods
or
addr16
cmp
adc
push
ja
mov
fsubr
sub
lea
jae
sub
subl
jp
cmc
stc
out
and
cmp
jmp
adc
lret
sbb
xchg
hlt
mov
enter
push
idivb
cmp
sub
lds
and
shlb
sub
sub
jmp
adc
int
push
fidivrs
repz
and
je
stos
cmp
shrb
xchg
push
inc
repz
or
add
shll
push
dec
in
and
adc
jne
mov
int
cmp
int
adc
cmp
bound
pop
loopne
cmp
rcrb
push
in
fists
adc
dec
or
mov
cmpsl
dec
dec
and
outsb
and
mov
add
cmp
push
loopne
nop
nop
mov
int3
mov
inc
cmc
push
adc
insl
push
testl
push
inc
shrl
mov
push
jo
shr
xchg
xor
aaa
mov
xor
test
out
mov
repnz
insl
push
jle
adc
mov
add
ja
and
inc
xchg
cmp
enter
mov
std
inc
cmp
sub
iret
mov
inc
data16
inc
dec
jmp
mov
xchg
outsl
inc
test
inc
lea
gs
sub
lods
cmp
or
xchg
pop
test
daa
aad
stc
icebp
div
adcb
jno
mov
pop
mov
dec
shlb
rolb
nop
addr16
stos
mov
stos
dec
add
sbb
insl
in
or
lret
adc
gs
xchg
pop
cmp
adc
xor
icebp
clc
inc
pop
fildll
fs
outsb
imul
mov
je
std
add
loop
loop
xlat
mov
rol
sub
jle
nop
call
in
mov
out
icebp
mov
lock
fidivrl
repnz
scas
popf
and
and
jbe
inc
insb
aam
xlat
xchg
pusha
adc
das
jns
push
pop
dec
sbb
rcll
sarb
fistl
adc
nop
lds
fldlg2
addl
daa
cmpsl
sub
inc
test
loope
jo
pop
xchg
insl
int
dec
and
xor
lock
leave
jnp
inc
test
pop
add
fucomip
je
dec
mov
bound
cs
addb
pop
insb
ljmp
adc
movsl
mov
cwtl
jmp
sbb
mov
mov
test
mov
loope
pop
mov
add
fwait
jns
cli
sbb
sti
lock
je
pop
fwait
mov
dec
dec
sbb
pop
jb
mov
in
ja
scas
es
aam
add
pop
xor
sbb
ljmp
in
add
scas
sub
ss
fcmovbe
mov
mov
arpl
add
repnz
iret
xor
mov
mov
cmpsb
jmp
clc
outsb
stos
jge
add
sti
jecxz
ss
mov
inc
cwtl
aaa
push
and
movb
jo
push
sub
jmp
inc
lds
shl
xchg
lods
adc
fisttpl
push
mov
loop
inc
mov
fsubs
enter
and
stc
push
push
cmpsl
into
ret
js
jp
xchg
lret
inc
xor
adc
bound
xor
sub
xor
pop
movsl
repnz
test
test
adc
int
cmp
lcall
ja
sbb
xchg
aad
sub
inc
dec
scas
push
push
push
pop
sub
rcr
scas
push
xchg
mov
push
movsl
mov
jmp
cltd
sub
scas
aaa
mov
pop
pop
seto
dec
in
add
or
pop
js
pop
lods
mov
and
imul
das
push
mov
scas
cmp
sbb
cmpsb
sbbb
adc
mov
out
push
iret
sub
nop
cmpb
mov
mov
dec
sbb
subl
faddp
and
dec
loopne
xor
repz
inc
cmp
std
mov
push
sub
fs
pop
mov
cld
sub
cmpsb
sub
fdivl
cli
xor
arpl
mov
push
rclb
add
iret
cli
add
sub
add
xor
sbb
call
push
imul
imul
iret
divb
loopne
stos
pop
sbb
jb
sbb
loop
or
fistpll
inc
imul
push
jl
pop
arpl
dec
xchg
out
ret
lods
insl
lret
add
cwtl
xor
lcall
aad
out
push
push
icebp
nop
jae
lods
push
sub
fucomp
mov
stc
and
mov
mov
outsb
inc
inc
inc
jmp
xchg
mov
pop
fstps
aam
jnp
push
fisttpll
sub
mov
push
pop
add
xor
cmc
cmc
cmp
movsl
sbb
ret
dec
pop
out
in
jne
cltd
push
mov
and
cmpl
nop
orb
movsb
xchg
xchg
xor
jecxz
daa
and
insb
lods
sub
fldl
loope
dec
ret
ret
jmp
lods
inc
jmp
sbb
sub
jns
mov
or
xchg
adc
push
sahf
stc
outsb
push
lock
lods
and
pop
push
test
adc
insb
and
cld
add
cwtl
cmp
jmp
xchg
mov
divb
mov
xor
lret
in
xor
pushf
lods
adc
pop
mov
cmp
lret
or
rclb
dec
pushf
sub
je
mov
add
cmp
test
mov
push
cmpsl
inc
lret
scas
imul
scas
cmpsl
pop
mov
pusha
jo
movsb
shr
add
cmp
inc
fidivs
pop
jl
mov
je
das
test
mov
push
xchg
lock
mov
jl
in
dec
pop
dec
push
cmp
sub
mov
cmp
dec
xchg
sti
stos
imul
stos
sti
negb
arpl
push
test
sub
mov
lahf
adc
inc
or
xchg
and
dec
push
mov
and
out
inc
or
cmc
sbb
inc
call
jns
cmp
lret
and
push
mov
sub
repnz
add
pop
mov
adc
mov
cld
fcoml
ficompl
aaa
xchg
ss
push
icebp
cli
mov
out
jnp
jmp
xchg
js
xchg
fxch
sub
jecxz
dec
fs
imul
cs
mov
push
pop
cli
fwait
daa
sub
mov
scas
dec
adc
dec
mov
insb
jno
jg
cmp
or
mov
js
pop
pop
dec
mov
test
loopne
mov
cmpsb
adc
es
js
pop
nop
inc
cmp
nop
pop
fisubs
inc
imul
mov
xor
into
cmc
xlat
mov
xor
enter
mov
cmp
xchg
dec
xchg
int3
and
and
imul
mov
es
and
sbb
cmp
mov
gs
mov
in
push
lea
cmp
les
inc
imul
cmp
insb
out
xor
pop
test
inc
push
loope
mov
xchg
and
pop
and
sarb
xor
mov
cmpl
sub
and
jmp
fiaddl
adc
cmp
sbb
pop
aam
adc
in
dec
fiadds
pop
mov
xor
xor
push
and
inc
cmp
sahf
adc
mov
test
in
pop
fidivrl
push
ror
pop
lahf
out
pop
cmp
add
into
and
cwtl
ficoms
cld
push
daa
rdmsr
adc
mov
mov
lret
inc
sarl
bound
add
xor
xchg
sub
movsb
mov
fdiv
jecxz
fld1
and
cwtl
ljmp
ficompl
or
lods
lock
adc
hlt
jl
cwtl
jo
pop
adc
xchg
movsb
sbb
js
fiadds
jmp
fnstenv
repz
insb
dec
jge
mov
inc
mov
icebp
sbb
and
add
inc
mov
loopne
fildl
arpl
xchg
sarl
inc
inc
mov
cmp
cmp
popa
push
push
in
jnp
vmovupd
sub
and
or
sbbb
sbbb
out
sub
jl
stc
mov
mov
outsb
pushl
fdivs
mov
jnp
das
dec
sti
movsb
fistps
in
int3
xchg
and
xor
imul
mov
jp
cmpsb
and
aas
shrl
imul
xlat
jle
inc
leave
or
ret
aam
add
rcrl
cmp
jae
ja
sbb
or
stos
addr16
jp
int3
sub
pop
or
shlb
mov
stos
adc
mov
push
into
adc
jnp
mov
add
into
xchg
decb
mov
insl
je
inc
lcall
cmp
mov
aaa
out
xor
and
mov
imul
movsl
jl
mov
lds
and
sbb
testl
sbb
aad
lods
sar
dec
dec
inc
add
and
imul
push
jl
daa
rclb
sub
in
jno
adc
sahf
sbb
outsb
sbb
adc
mov
mov
mov
bound
subl
dec
dec
jg
and
cmpsl
jbe
orl
pop
pop
mov
mov
dec
or
aaa
fldz
popa
shll
mov
js
xchg
std
int3
movsb
outsb
pop
aas
mov
sub
into
push
loop
xor
mov
leave
in
sub
cwtl
inc
mov
xchg
bound
xorl
aas
sbb
cmc
lret
sahf
das
clc
cmp
lret
dec
mov
es
int
dec
mov
xlat
cmp
mov
inc
in
mov
pop
sbb
jnp
lret
ds
mov
shl
sbb
and
cltd
aad
dec
fsubrl
push
in
jno
add
pop
lods
loop
ret
dec
mov
std
call
cwtl
and
sub
and
cld
shl
adc
sub
mov
cmp
lods
cli
push
push
push
lods
ljmp
xchg
movnti
insb
adc
xchg
inc
js
pop
scas
cmp
out
or
push
aaa
fisubrs
pop
repnz
ljmp
add
add
std
cmpsl
nop
ja
xchg
sub
and
roll
stos
or
lahf
sbb
ja
adc
shr
push
hlt
sahf
dec
call
call
jne
nop
fsubrs
mov
stos
sbb
fs
inc
fisttpl
cld
mov
lea
int3
push
sub
lret
jge
imul
pop
nop
pop
adc
pop
cmp
jecxz
xlat
adc
xor
cmc
pop
cwtl
adc
cmpl
mov
xlat
and
pop
sub
fnsave
mov
daa
mov
out
nop
test
dec
loope,pt
add
adc
orl
arpl
jl
xorb
mov
subl
sub
pop
push
jge
sub
pop
lret
dec
repnz
xchg
out
jl
stos
lea
insb
cmp
mov
stos
xchg
or
pop
adc
inc
jne
pop
push
pop
ret
fimull
test
push
and
xchg
mov
mov
out
xchg
sub
push
jge
push
es
icebp
cmp
sub
in
hlt
mov
xchg
adc
imul
and
xor
dec
push
popa
push
daa
mov
rorb
sbb
mov
jmp
loope
lods
xchg
xchg
es
rcr
push
mov
rolb
out
mov
cs
rclb
push
jne
insl
mov
sbb
inc
pushl
or
mov
std
cld
sbb
mov
pop
jg
in
mov
ljmp
das
sbb
les
adc
jns
cmp
mov
dec
testb
popa
sbb
shl
dec
adc
cwtl
lcall
cmp
fistpl
leave
jmp
sub
jne
and
fsubr
inc
cmp
jmp
pmulhw
push
sbb
mov
fdivrl
lea
out
and
pop
inc
mov
popa
mov
add
cltd
into
mov
hlt
je
push
mov
mov
fwait
push
js
jp
sbb
dec
mov
mov
pop
and
cmp
jmp
stos
pop
or
push
pop
mov
pushf
bound
lock
mov
cs
inc
stos
xchg
xchg
xor
enter
lds
ds
jne
fistps
dec
xchg
xor
pop
lock
pop
fdivs
pop
jmp
dec
les
dec
mov
pop
dec
xchg
dec
and
icebp
inc
and
pop
dec
call
movsb
cmp
test
ret
fiaddl
mov
cmp
inc
mov
inc
sub
sub
cmpsb
mov
mov
out
inc
push
es
lret
mov
mov
sbb
popl
jo
xchg
xor
into
mov
out
or
dec
jle
cwtl
pushf
jecxz
xchg
mov
leave
negl
aad
cmc
aam
add
pop
add
fdivrl
mov
fmull
jp
addr16
repnz
jno
aad
dec
notb
inc
push
leave
clc
enter
mov
lods
jne
jo
aad
push
cmp
adc
cmpsl
mov
inc
insb
arpl
mov
shll
cmpsb
int3
adc
pop
cmp
xor
loope
adc
cltd
es
push
fists
pushf
push
popf
arpl
push
cwtl
in
sub
mov
xor
fimull
push
addl
xor
sbb
push
jnp
push
xlat
outsl
pop
das
jns
fstp
adc
mov
mov
loope
cmpsl
jge
insl
stos
repz
rol
inc
inc
lods
popa
cmp
mov
retw
cli
in
ljmp
jmp
pop
stos
lea
lock
fildll
xchg
and
mov
pop
test
sahf
pop
mov
push
mov
mov
int3
xchg
inc
dec
xchg
jne
jae
mov
inc
push
dec
and
sbb
dec
movsl
fnstenv
outsl
out
inc
aaa
xchg
and
popf
inc
int
mov
rcll
addr16
or
enter
and
rcll
and
sbb
pop
xchg
mov
arpl
cld
xor
je
jecxz
movsl
cmpsb
int3
cmp
cmpsb
repnz
or
or
cmp
pop
test
jno
lahf
jbe
jo
inc
pop
dec
cmp
mov
cmpsb
sbb
ja
lds
popa
cmp
adc
xor
dec
sub
lahf
pop
push
push
lea
adc
xor
aam
xchg
xchg
xchg
icebp
movsl
insl
ss
fstps
faddl
jb
pop
negb
mov
popa
adc
sub
sub
add
popa
lret
jmp
xchg
in
cs
or
ret
call
lods
outsl
jle
xchg
inc
push
push
stos
push
es
arpl
shll
xor
call
dec
jb
mov
add
mov
lret
add
add
dec
pop
mov
push
test
cmpsb
dec
aam
adc
add
jno
test
insb
xlat
pop
fsts
pop
hlt
testb
sahf
cmpsl
ja
sbb
sahf
sti
push
push
mov
mov
cli
scas
cmpsb
lods
lret
cmpsl
mov
rcll
scas
adc
stc
sbb
mov
popf
dec
push
ljmp
movl
incb
sub
adc
mov
adc
push
or
mov
pop
movsl
add
inc
ret
loope
push
stos
int
mov
xor
and
lods
outsl
leave
xchg
pushf
hlt
shrb
push
add
fwait
rcr
jmp
inc
cmc
sbb
iret
push
push
cli
mov
cmp
dec
jg
dec
fdiv
stos
bnd
dec
pop
insb
xor
mov
and
add
aaa
insl
testl
rcrb
push
jo
xor
sahf
das
add
adcl
cltd
xchg
dec
out
test
sub
stc
hlt
cmp
xor
cmpsl
test
jmp
frstor
das
into
push
roll
dec
pop
sbb
dec
and
push
push
int3
and
ds
loopne
inc
dec
push
xchg
sbb
bnd
push
pop
adc
pop
or
or
sub
jmp
xchg
adc
or
jo
fsts
clc
out
mov
sub
xlat
jo
cmp
in
xchg
jl
lahf
enter
fnstcw
add
add
scas
mov
add
push
xlat
push
das
out
cmp
or
mov
lods
arpl
mov
jle
jle
jle
std
mov
dec
es
in
adc
aaa
cmpsb
or
cmp
adc
cmp
and
add
xchg
and
jbe
or
xor
inc
mov
or
mov
addr16
xchg
shlb
sub
mov
jle
jp
lahf
xchg
lcall
divps
xchg
cld
sbb
adc
mov
add
adc
pusha
pop
pushf
jecxz
lock
loope
sbb
jo
test
pop
imul
or
mov
cmp
popa
adc
lahf
dec
xlat
ficoml
mov
imul
sbb
and
jb
push
cmp
xor
xor
clc
mov
inc
xchg
sbb
enter
int
inc
xor
push
ljmp
sbb
mov
cmp
push
mov
lret
sub
inc
sub
bound
hlt
fwait
mov
movsb
xchg
jo
fdivrl
mov
aad
leave
fildl
pushf
pop
scas
pop
cmp
sbb
in
ficoms
imul
stos
call
pop
loop
push
sub
mulb
add
shrb
test
jns
aad
adc
cmc
jbe
add
inc
jbe
shl
push
rcll
int
pusha
pop
cmpsl
pop
stos
jmp
into
mov
mov
fstps
add
mov
xor
fisubl
lods
test
testb
orb
divl
fcomip
lret
mov
sbb
insl
add
or
pop
mov
adc
mov
jle
mov
test
cmpsb
mov
es
aad
mov
xor
mov
mov
cmp
lret
pop
andl
mov
insl
mov
subb
xor
fisubrs
and
mov
xor
push
loop
fsts
mov
pop
pop
popa
mov
sarl
mov
xor
sbb
sbb
outsb
add
in
mov
data16
cmpsb
jg
cltd
ljmp
mov
aam
xchg
insl
fstpl
int3
mov
fildll
mov
pusha
and
mov
enter
out
adc
jno
pop
jne
fbstp
addr16
mov
sub
test
sbb
or
cltd
or
adc
clc
or
jb
pop
inc
aaa
and
out
out
ret
add
dec
push
jp
adc
outsb
cmp
das
aas
jle
pop
or
push
sbb
test
add
leave
pop
inc
pcmpgtw
lret
cmc
das
mov
pop
in
push
jnp
enter
test
push
fwait
gs
mov
imul
sbb
dec
popa
mov
adc
mov
push
gs
dec
in
pushf
cmp
mov
xchg
out
add
enter
inc
gs
push
test
mov
fadds
mov
inc
pop
es
aas
pop
xchg
jg
xchg
rorb
mov
les
mov
mov
insl
push
loope
mov
pop
jle
sbb
mov
xor
clc
xchg
push
sub
sbb
sbb
test
cld
shl
cwtl
add
xchg
rolb
aam
aas
aaa
cmpsl
imulb
roll
xor
push
jno
lret
fsincos
and
imul
or
cld
pop
out
movsb
std
iret
cmovl
popl
out
addr16
sub
out
adc
movsb
lret
add
xchg
ror
adc
in
adc
int3
addb
inc
int3
mov
inc
jle
call
lret
stos
out
test
pop
loop
lahf
adc
fidivrl
xorb
out
in
lcall
test
sahf
mov
sti
adc
mov
out
in
loop
mov
inc
mov
andl
pop
sub
out
pushf
push
dec
or
icebp
add
cmp
popf
adc
push
pop
jecxz
fadds
loop
mov
push
insl
stos
leave
je
ret
aas
dec
cmp
xchg
insb
jb
movsb
jno
es
cwtl
pop
xlat
mov
iret
ljmp
or
mov
iret
jae
mov
repnz
aaa
sub
inc
xchg
out
and
inc
pusha
sahf
or
fs
in
sbb
cmp
nop
faddl
popf
js
pop
cmc
push
jns
adc
or
rolb
sbb
mov
and
es
aaa
dec
pop
popa
xor
int3
int3
shll
test
pushf
out
push
cltd
daa
pushw
mov
imul
dec
repnz
push
stc
rclb
cwtl
add
cwtl
shl
bound
push
subb
add
adc
shll
pop
jo
dec
sbb
aas
inc
push
mov
mov
cmp
jl
lods
int3
or
dec
cmp
push
cli
and
push
xor
pop
ds
or
mov
adc
arpl
arpl
je
cmp
mov
fsubrl
cwtl
sub
inc
push
sbb
sub
lock
cmpsl
andb
sub
jno
ljmp
sbb
cmpsb
push
mov
fcmovnb
int3
mov
ss
imul
push
in
repnz
inc
inc
hlt
or
add
lret
cld
clc
imul
negb
xor
xchg
mov
jle
pop
leave
sbb
movsb
nop
fidivrl
scas
add
and
xor
push
cmpsb
add
or
in
xor
mov
cmp
and
fbstp
or
out
and
aad
in
test
das
fldenv
dec
jmp
push
and
push
inc
mov
aaa
xchg
or
clc
mov
add
adc
ljmp
cli
arpl
mov
xchg
mov
adc
xchg
or
lret
pop
ret
inc
jl
pop
int3
xor
es
dec
pop
mov
cli
imul
mov
mov
sti
test
negb
data16
mov
rorl
lahf
jecxz
loopne
loope
sub
push
bound
fs
inc
xchg
inc
nop
shrl
xor
inc
test
jo
pop
cmc
rolb
int3
xor
je
add
int3
cmpsl
mov
clc
mov
xor
sbb
xor
outsb
xchg
clc
xor
in
adc
mov
mov
add
pushf
cmc
adc
fwait
sub
or
mov
sti
xorl
scas
jo
xchg
lcall
in
sub
aas
or
dec
dec
pop
and
sbb
or
pushf
xchg
hlt
mov
test
push
rolb
ret
jbe
adc
mov
enter
xor
jbe
jge
lds
sahf
xor
mov
fcmovne
pop
sub
filds
popa
jo
and
in
xor
pop
decl
cmp
shrb
ja
scas
mov
mov
dec
or
aaa
scas
sub
dec
movsb
pop
xchg
sbb
dec
in
push
xor
dec
xor
jb
jns
in
mov
sarb
lahf
scas
sti
push
js
shrl
push
and
lea
adc
adc
jns
push
push
pop
or
sub
jmp
mov
fdivrs
jp
insl
sub
test
rep
jnp
jno
pop
test
popa
movsl
cmp
repnz
in
inc
cmpl
cmp
shrb
mov
and
outsl
stos
push
jbe
pop
pop
jg
dec
add
dec
push
fnstenv
mov
stc
xchg
mov
and
call
dec
dec
mov
jns
adc
pop
xchg
frstor
popa
shl
dec
aam
lea
xchg
push
xchg
and
pop
mov
push
iret
mov
test
lahf
aaa
popf
mov
hlt
aam
push
push
adc
dec
cs
xchg
cmpsl
xchg
or
stos
cmpsb
stos
pop
push
xor
jmp
lods
sbb
mov
jmp
pop
fadds
roll
sub
mov
insb
popa
lods
in
and
pop
shlb
adc
gs
mov
scas
inc
pop
push
dec
dec
out
mov
in
or
sbb
sub
call
mov
orl
rolb
mov
clc
xor
pop
aaa
jecxz
mov
aas
add
pusha
jbe
jp
add
mov
adc
frndint
in
sbb
push
and
movsb
mov
loop
inc
in
sbb
xlat
enter
lds
movsl
push
fimuls
or
pusha
mov
push
jecxz
sahf
lahf
test
enter
jecxz
iret
push
mov
out
imul
arpl
pop
push
mov
dec
in
pop
xchg
jmp
lahf
jo
xchg
lcall
loope
iret
pop
jbe
sub
cs
enter
mov
jo
xor
mov
stos
pop
loop
stos
push
inc
loop
dec
jmp
imul
jmp
add
xor
icebp
lret
loop
push
loope
sahf
pop
and
cmp
clc
xor
dec
popf
push
dec
subl
mov
xor
push
push
dec
push
mov
pop
pop
fiaddl
push
stos
ljmp
fistpll
push
xchg
test
dec
mov
jo
mov
insl
mov
mov
add
mov
pop
fs
arpl
pop
sbb
jno
mov
cmp
inc
xor
stc
bound
push
inc
sub
xor
jb
mov
adc
dec
movsl
fnstenv
scas
jmp
mov
rol
out
add
mov
pop
or
inc
notl
add
mov
popa
mov
dec
aaa
jmp
dec
lcall
push
lds
in
insl
push
xor
lods
scas
gs
dec
fwait
aad
lods
icebp
scas
jp
sbb
and
mov
shlb
pop
xchg
arpl
dec
gs
adcb
fdivl
nop
mov
cmpl
mov
xchg
imul
inc
cmc
fnstenv
add
add
cli
pop
sahf
add
add
mov
dec
loope
mov
in
lahf
mov
adc
imul
in
mov
add
jg
daa
jmp
lcall
adc
aad
imul
add
xchg
or
mov
test
jge
mov
pop
lods
ljmp
orl
sub
jl
pop
dec
fsubs
ljmp
rclb
inc
rolb
jae
xchg
mov
push
sub
pop
fstps
bound
mov
push
das
ljmp
add
jmp
dec
cmp
jle
daa
push
mov
sub
inc
insl
enter
mov
mov
sub
pop
mov
mov
stos
mov
cmp
sub
pop
out
dec
push
inc
mov
stc
ss
stos
sbb
int
jp
shl
ja
dec
dec
nop
into
scas
push
adc
aas
leave
jmp
or
insl
add
mov
ret
nop
ljmp
imul
push
repnz
pop
pusha
in
loope
daa
jl
mov
and
dec
jmp
jl
lds
lods
les
jns
repnz
pop
sbbl
sti
fistps
loop
xchg
cld
cmp
ja
fstpt
adc
pop
dec
push
sbb
stos
mov
shll
test
mov
in
loop
add
cmp
popa
fs
loope
cmp
pop
push
mov
dec
pop
mov
cld
xlat
and
xor
push
ja
stos
clc
cmpb
nop
xor
sti
jbe
cli
ret
fstpl
ss
jno
fldenv
fucomi
xchg
out
hlt
out
lret
jmp
test
pop
fwait
adc
cltd
cvtpi2ps
test
js
adc
xchg
or
test
jp
xchg
jb
lock
cli
rorl
loopne
ja
ja
fmuls
push
sub
mov
or
stos
mov
je
mov
ret
pushf
xor
inc
push
inc
or
inc
lods
push
mov
movsb
data16
das
mov
inc
cld
push
mov
push
jnp
push
mov
xor
loop
les
and
dec
cs
hlt
mov
fwait
mov
mov
pusha
cltd
test
mov
fdiv
mov
add
inc
es
pusha
jge
xchg
adc
mov
fnsave
movsb
mov
lods
jbe,pn
and
sub
lods
jne
sbb
xor
xchg
iret
and
lcall
mov
loope
sahf
orl
in
test
cmp
movsb
lods
pushf
in
lods
sbb
adc
shr
cmpsl
adc
pushf
fcoml
cmc
xchg
mov
cmpl
sti
push
ret
jmp
jnp
inc
test
adc
daa
xor
lahf
push
inc
xchg
stos
mov
sub
fadd
stc
push
push
bnd
std
jg
movsl
loope
mov
xchg
inc
out
sub
int3
xlat
aam
push
das
pop
jp
es
cwtl
cli
mov
cmp
pop
rcll
sub
jno
mov
insb
in
push
push
pop
push
mov
icebp
or
jmp
loope
add
mov
mov
and
inc
adc
pop
xor
data16
popa
jno
hlt
loop
cmp
add
imul
in
cltd
lock
mov
stos
out
cmpsl
jg
and
mov
push
imul
stc
mov
and
inc
lret
insl
loopne
stc
push
jbe
or
and
inc
inc
xor
inc
xchg
and
lock
ret
out
leave
lods
mov
push
aaa
xchg
jg
cmp
mov
fst
push
mov
xchg
lods
and
add
ja
fstpt
pop
incb
fs
adc
or
push
mov
out
mov
mov
loope
test
dec
and
call
movb
fwait
stos
sahf
adc
stc
jg
sub
sbb
int3
popa
ficoms
insl
pop
xchg
into
imul
gs
das
push
cmp
push
push
xchg
jmp
jge
push
mov
jle
pop
xchg
sarl
bsf
pop
in
jg
or
scas
scas
dec
je
mov
stos
sbb
and
lock
add
jle
xor
je
sbb
mov
xchg
push
test
jnp
mov
push
lret
pushf
nop
add
lods
mov
cmpsb
call
cmpsl
xchg
div
pop
arpl
adc
mov
lods
mov
nop
sub
jl
pop
fnsave
xor
cltd
pop
aaa
je
push
sahf
stc
insl
fxch
insl
cmp
xor
adc
lcall
ja
subb
cmp
pop
pop
inc
and
int3
and
ret
jmp
andb
cmp
cs
xor
pop
cmp
test
jle
inc
fcmovb
inc
xor
aad
mov
insb
pop
dec
mov
fmull
daa
iret
cmp
xchg
ja
mov
sahf
subb
nop
std
lret
ljmp
dec
hlt
pop
mov
mov
mov
push
mov
cmp
xchg
out
push
add
out
mov
int3
fnstsw
mov
inc
pushf
jl
xchg
pop
xor
push
pop
push
aam
iret
inc
push
es
pop
cld
dec
or
rorb
sbb
nop
cmpsl
cwtl
bound
out
jl
ror
xchg
pop
pop
sub
stos
cwtl
jecxz
jae
push
mulb
hlt
rol
xchg
mov
sbbb
push
jge
int3
rcrl
sub
test
nop
test
pop
ljmp
mov
mov
xchg
cs
data16
push
xchg
shrb
in
push
cmpsl
aaa
push
scas
jns
mov
ss
mov
cmp
shll
sub
inc
aaa
mov
mov
inc
jp
incl
out
test
adc
and
ret
jb
pushf
cmp
fnstsw
repz
xchg
mov
nop
mov
mov
ja
jecxz
mov
lds
lods
cmp
sti
xlat
test
aas
pop
xor
subb
and
mov
push
lods
xor
jge
xor
imul
jno
fdiv
sub
adc
bound
in
cwtl
movsl
addr16
rorl
or
fidivl
into
mov
jmp
or
ret
popf
cld
ss
idivl
xchg
sti
repz
es
test
sub
and
and
pusha
out
popa
stc
inc
or
sbb
xchg
sub
mov
xchg
in
std
int
cmp
movsb
setbe
ds
aas
mov
repz
js
xchg
outsl
cli
pop
dec
movsl
fiaddl
sbb
pop
pop
inc
rolb
add
arpl
xchg
cmp
test
stos
dec
in
push
into
rcll
clc
lods
scas
popf
jnp
mov
adc
shlb
jne
cmc
insl
aam
jnp
icebp
jb
lahf
loop
icebp
mov
sbb
ljmp
pop
jle
je
js
and
mov
lock
das
repz
iret
adc
loope
popa
bound
scas
push
inc
clc
aam
sub
push
cmpsb
test
sub
mov
inc
rcrb
mov
cmp
cld
leave
pusha
xor
imulb
cwtl
cmp
mov
mov
xor
jb
add
push
int
pushf
cmp
insl
rolb
out
push
mov
sub
int
jge
or
pop
stos
mov
jae
jp
mov
int3
sub
into
mov
jl
xor
add
cmp
sub
es
xlat
adc
inc
fwait
cmpsl
or
push
mov
pop
es
xor
aas
or
repz
cmp
add
mov
add
sub
mov
sahf
cmp
dec
sbb
push
adc
cmp
les
loop
xor
sti
outsb
and
iret
pushf
dec
push
imul
jge
cmp
dec
rcrl
dec
pusha
outsb
lods
call
shll
cs
dec
xor
dec
pop
leave
push
lret
sahf
in
or
mov
xor
addr16
ja
pop
shr
sti
fsub
jnp
stos
sub
mov
int3
outsb
or
mov
fistps
dec
xchg
pop
xor
cmp
dec
dec
movsb
out
inc
loope
divb
sub
adc
sub
pushl
xchg
sbb
push
dec
jne
pop
push
mov
mov
sti
loop
mov
cmp
pop
cmp
je
cmp
xchg
push
sti
lea
xor
gs
jg
rcrb
and
push
out
test
lock
push
jl
mov
nop
add
mov
or
mov
mov
jns
dec
lcall
mov
out
sbb
sub
jecxz
rcrb
and
dec
jnp
scas
lret
push
add
dec
mov
fisubrs
jbe
lea
and
cmpsl
sbb
nop
cmpsb
xchg
and
jns
and
ss
push
inc
mov
iret
clc
mov
jns
icebp
repnz
sti
mov
xor
cltd
xchg
testl
add
inc
fnstcw
stos
jle
rclb
dec
lds
sbb
jp
and
popf
mov
inc
xlat
sarl
arpl
mov
cli
or
pop
cmpsb
xor
fidivs
mov
xor
sbb
jg
movswl
fwait
sub
push
mov
scas
push
stos
jg
mov
xlat
ljmp
js
jb
inc
add
jns
lods
sbb
subb
idiv
stos
mov
push
les
mov
xchg
rolb
in
popa
mov
sbb
add
ds
add
mov
cld
push
mov
fs
aaa
lret
mov
dec
ror
fmull
loope
cmp
gs
xor
adc
icebp
xor
xor
es
sarb
mov
test
pop
push
mov
cmp
dec
xor
xchg
call
mov
mov
out
cmp
mov
sub
out
add
push
add
or
pop
cmp
inc
fwait
xor
jmp
jg
adc
sbb
adcl
jae
jbe
je
xchg
leave
std
testb
scas
cmovae
popl
iret
shlb
jmp
mov
lcall
mov
cvtps2pd
es
pusha
outsb
push
mov
sbb
inc
lret
je
aad
add
mov
mov
sub
xchg
out
sarb
pop
dec
daa
jnp
mov
lret
sbb
aaa
jle
insb
mov
jle
fldl
sbb
rclb
push
test
sub
call
mov
lahf
dec
sbb
dec
xchg
je
sbb
iret
pop
dec
pop
dec
hlt
cmp
mov
sbb
mov
inc
mov
pop
push
adc
jno
lock
movsl
sbb
xor
mov
pop
mov
les
push
out
cltd
dec
add
stos
dec
xchg
push
jmp
xchg
sahf
dec
inc
dec
or
mov
pusha
add
fucomp
imul
cwtl
pop
aam
lret
xchg
adc
sbb
dec
pop
rcll
or
dec
or
cmp
jnp
inc
push
mov
ss
push
roll
xlat
adc
sub
rclb
inc
fisttpll
jns
or
jg
ss
int
sub
push
ljmp
popf
xchg
mov
pop
xchg
sub
mov
sub
sbb
int3
inc
loopne
es
lret
test
or
xlat
mov
divb
int3
sub
ret
push
jbe
pop
iret
push
xchg
lock
fmull
lcall
insb
into
sarl
notb
ds
test
push
sub
and
lea
xor
xor
in
mov
push
sbb
out
cmp
les
cmp
sbb
fdivp
or
mov
dec
pusha
test
mov
sub
xor
cld
inc
mov
pop
mov
lcall
push
sbb
dec
pop
xchg
cmpsl
sbb
arpl
xchg
jg
out
icebp
fiadds
sbb
enter
mov
inc
sbb
mov
out
sub
int3
movsb
popf
es
out
movsl
jle
or
loopne
push
sub
filds
loope
add
mov
dec
test
mov
and
ds
adc
xor
and
mov
inc
sub
ret
outsb
fstpt
add
pop
pop
lock
fiadds
shll
add
push
outsl
pop
xor
sub
popf
mov
mov
or
sub
mov
pop
lock
adc
lret
dec
nop
mov
pop
pop
cmc
es
addb
int3
lret
sahf
add
mov
jne
dec
and
mov
cwtl
mov
xorb
pop
push
pop
sbb
inc
push
push
fstpl
mov
push
inc
imul
imul
stos
dec
mov
popf
mov
aaa
shl
mov
and
int
sahf
iret
xchg
mov
in
mov
sbb
mov
adc
movsl
mov
sub
sbb
xchg
scas
inc
repnz
hlt
adc
add
shlb
dec
insb
mov
mov
push
or
mov
imul
sbb
insb
mov
je
mov
pop
cmpsl
mov
std
pop
mov
int
mov
lds
lcall
mov
es
ret
cwtl
sbb
jb
inc
enter
cmp
test
add
mov
cmp
jl
incb
paddb
dec
push
adc
enter
pop
sub
addb
cs
fsubrs
mov
cs
fisttpl
mov
sbbb
in
fdivp
jecxz
jns
push
ret
subl
jl
adc
pop
adc
hlt
aas
push
ror
push
outsb
jge
sahf
or
nop
mull
inc
mov
std
sbb
incl
cmp
gs
rcrb
cli
cld
xor
sub
fwait
sbb
pop
mov
or
and
mov
popf
and
icebp
mov
sbb
je
insb
aam
repnz
jbe
mov
xlat
adc
sub
filds
repnz
sbb
in
adc
jp
push
ds
mov
cmp
dec
xchg
fcoms
add
xor
nop
out
lahf
inc
daa
xchg
test
mov
orb
inc
movsl
push
pop
mov
addb
pop
mov
xor
insl
sub
jg
mov
psrlq
scas
xchg
dec
shlb
mov
lock
aaa
loopne
cmp
scas
jmp
mov
jge
mov
push
arpl
cmc
cmp
pop
std
pop
xor
xor
pop
data16
std
ljmp
out
sub
push
les
lods
ds
sbb
nop
mov
rcll
mul
xor
xchg
int3
jge
addl
cmp
ds
mov
jb
dec
inc
insb
ds
push
and
inc
mov
xchg
shll
cld
push
scas
int3
mov
dec
jmp
mov
xchg
cmp
xlat
idivl
dec
insl
push
pop
stos
dec
nop
movsl
out
out
dec
orl
mov
dec
scas
call
mov
ret
push
shrb
aam
cmc
inc
or
movsb
xchg
mov
xor
add
popa
std
pop
pop
repz
mov
or
movsl
out
in
xchg
inc
enter
stos
sbbl
loope
adc
sub
jge
cmpsl
sub
xchg
mov
sub
dec
lock
scas
inc
pop
jae
js
stos
xor
dec
test
insl
mov
out
je
scas
fisubs
nop
into
mov
mov
btc
cld
dec
js
pop
lgs
adc
xor
sbb
pop
sub
adcl
pusha
push
daa
pop
outsb
or
cmp
adc
int
popa
mov
mov
aad
xchg
fcoms
jp
xor
mov
mov
aas
jae
ljmp
fdivr
les
or
insb
xchg
in
cld
add
and
sbb
or
lcall
dec
push
lea
inc
loope
jnp
sub
stos
pop
scas
and
sbb
sub
jp
xchg
jne
mov
add
xchg
stc
into
mov
and
mov
mov
fcompl
jl
imul
shrb
mov
std
aaa
pop
jnp
scas
xor
add
or
mov
push
mov
ljmp
shlb
add
mov
in
or
sub
in
cmp
xlat
imul
sub
mov
push
lock
lock
or
or
ret
cmp
sub
ret
cmpsl
sbbl
cmc
imul
sub
mov
sbb
jp
aaa
lods
rorb
and
mov
pusha
aam
jns
cmp
sbb
lods
les
out
add
fistl
xor
imul
pop
inc
add
cmp
mov
enter
mov
or
dec
jns
inc
inc
lahf
jbe
jb
xchg
iret
jae
jo
loope
mov
xchg
sbb
jno
sbb
jo
shl
adc
imul
ret
loope
loopne
sahf
jg
xor
dec
cltd
adc
repnz
sahf
xchg
daa
and
dec
repnz
cs
filds
pop
dec
adc
inc
jae
loop
ds
call
cmc
in
icebp
sbb
jge
adc
sub
xchg
mov
lcall
pop
push
stc
pop
es
pop
fisubs
push
cld
sub
jmp
filds
daa
into
mov
push
mov
jmp
cmpl
bound
mov
cmc
repz
cmp
clc
popf
mov
adc
mov
xor
mov
cmp
aaa
push
imul
adc
mov
mov
out
ljmp
aas
or
xchg
add
js
daa
outsb
and
sub
push
das
rcr
mov
scas
sbb
adcl
fldt
repz
insb
xor
repz
mov
add
or
jae
ret
imul
add
xlat
sub
and
push
and
jmp
push
cmp
ljmp
adc
xchg
mov
repnz
in
in
xchg
negl
imul
dec
sahf
in
jns
dec
dec
inc
mov
adc
jmp
cmp
sbbl
lock
xchg
mov
rcl
rcll
rolb
sbb
add
cmp
xchg
cwtl
ret
adcl
fidivl
xchg
inc
push
sbb
sbb
pushf
mov
jecxz
fldenv
arpl
addl
dec
lcall
jae
int3
mov
sub
mov
sbb
shl
push
and
mov
dec
pop
mov
std
cli
or
mov
adc
xchg
jg
scas
mov
push
ljmp
jno
jb
jl
andl
inc
xchg
inc
add
cs
shll
icebp
inc
sub
insb
mov
insl
xchg
mov
aas
aad
xchg
xor
lods
pop
rolb
push
adc
es
adc
inc
xchg
js
or
imul
out
cld
jge
mov
pop
pop
mov
fcoml
out
nop
cmpsb
scas
test
out
inc
xchg
mov
xor
movb
xor
jno
or
xlat
mov
xor
test
dec
jb
jae
nop
sub
jmp
dec
subl
ss
aam
mov
lea
push
jnp
call
xor
lock
cmp
test
mov
data16
pop
xchg
xchg
into
push
loopne
cmp
push
push
insl
cmp
iret
sub
arpl
out
push
add
xor
push
jo
mov
cltd
mov
cmpsl
adc
repz
xor
mov
lock
dec
jnp
sbb
outsb
lea
mov
je
arpl
or
idivb
clc
dec
cwtl
js
js
pop
xor
add
stos
scas
or
ret
mov
jg
test
icebp
pop
cltd
aaa
pop
or
jae
inc
inc
daa
jnp
mov
cmpsb
cltd
lcall
inc
iret
adc
hlt
lcall
loope
cmpsl
pop
add
data16
loop
push
mov
scas
in
jb
cmp
scas
add
sbb
xor
sbb
lea
cmp
xchg
or
push
push
test
or
mov
movntq
nop
and
sub
insb
or
add
mov
lret
jp,pn
out
cmpsb
add
fsts
fcoml
xchg
cmp
test
loope
test
ror
add
xchg
jnp
push
or
jbe
repz
arpl
inc
sub
xlat
inc
or
cmpsl
outsb
xchg
or
call
adc
xchg
call
sub
ss
es
jg
lods
call
inc
lods
es
clc
test
rorb
scas
xchg
aad
test
mov
nop
es
es
lods
fwait
in
js
insl
push
cmpb
cmpsl
aas
pop
jmp
push
push
jmp
inc
test
dec
jmp
push
mov
xchg
sahf
jne
dec
mov
sub
stos
adc
mov
adc
lahf
lds
out
js
out
cmpsb
stc
call
lods
or
and
popa
ja
dec
xor
jb
addr16
test
push
pop
popa
sub
dec
cli
xchg
cmp
stc
push
enter
push
xchg
jns
jge
sbb
lret
inc
push
jnp
scas
jae
aaa
jp
pop
std
push
sbb
push
arpl
and
fcmovnb
ljmp
cvtdq2ps
cmpsl
outsb
enter
test
push
frstor
fstl
sub
jle
sbb
mov
xchg
pop
or
mov
xchg
xchg
sbb
and
ficoms
adc
jnp
lods
sbb
jb
mov
inc
mov
out
repz
in
aaa
movsl
outsl
das
mov
xchg
outsl
and
gs
test
movsb
pop
loop
add
mov
popf
xor
dec
inc
jecxz
pop
dec
inc
sarb
cmp
add
sbb
clc
jo
daa
mov
xchg
dec
jge
cmp
xchg
gs
pop
repz
insb
dec
jl
mov
mov
add
fnstsw
add
sub
fmull
in
xchg
enter
sub
mov
jg
mov
incb
in
inc
pushf
pushf
movsb
call
movsl
loopne
mulps
sbb
xor
cmpsl
push
mov
pop
jbe
pop
lds
test
out
mov
or
push
into
add
fs
or
fsubr
outsl
in
pop
std
inc
mov
loop
dec
out
add
inc
and
shll
cmp
and
adc
jp
dec
daa
add
dec
das
mov
adc
popf
inc
or
aad
sti
mov
andl
out
scas
iret
popf
ss
and
or
std
or
fwait
adc
cmp
mov
push
in
mov
andb
sbb
add
mov
mov
mov
test
fs
scas
addr16
cmp
sub
and
adc
cmp
inc
mov
jle
fwait
and
inc
sahf
pop
push
fimull
mov
pop
jge
leave
push
jne
pop
out
lods
mov
sbb
dec
popf
int3
inc
mov
cmc
mov
cmpsb
mov
xchg
insb
in
add
les
iret
outsb
adc
push
jae
das
push
fs
fimull
sub
mov
lahf
sbb
scas
jmp
call
in
dec
or
add
fdivrs
pushw
repz
mov
cmp
cmpsb
das
es
jo
jmp
scas
mov
push
ret
rolb
and
icebp
inc
jge
sub
mov
cmpl
jnp
dec
xor
je
repz
xchg
out
fstpt
lea
and
rcrl
pop
shrl
cmp
mov
push
sub
sar
fcmovnu
and
add
xor
pop
into
clc
mov
call
dec
not
mov
cltd
out
pop
cmp
lea
sub
inc
pop
jg
scas
addb
pop
jle
or
adc
xlat
add
testl
enter
rep
or
stos
mov
jge
lock
arpl
xchg
push
lods
push
jecxz
pusha
and
lret
ud1
roll
lock
loope
lahf
fdivl
mull
idiv
or
aam
add
push
mov
jp
mov
fsts
shrb
cld
fdivrl
mov
push
push
mov
inc
push
pusha
popa
jle
sbb
js
jne
dec
sbb
fdivs
std
loop
daa
out
scas
mov
jle
xor
mov
fs
jne
call
pop
pop
mov
mov
inc
rcr
arpl
add
test
mov
dec
fstpl
xor
cmp
xor
stos
inc
adc
popf
mov
addb
push
test
hlt
loopne
pop
xchg
cmp
push
mov
out
and
xchg
xor
xor
rorb
mov
xor
dec
cmp
in
shll
ss
ja
cmpsl
lret
xchg
stc
scas
das
pop
add
rol
addr16
out
push
arpl
in
push
in
sbbb
mov
add
mov
shrb
mov
adc
lcall
pop
fstps
pop
fmull
fs
dec
pop
shlb
jb
jecxz
in
das
test
fimuls
std
cli
ret
jb
mov
adc
insl
nop
js
cmp
inc
xlat
stos
int3
xchg
mov
cld
mov
pushf
aam
roll
fiadds
dec
jno
xchg
testl
incl
icebp
in
jle
not
insb
out
js
hlt
or
mov
leave
sub
enter
mov
xor
pop
aas
neg
and
sub
es
movsl
int3
je
mov
ret
movsb
or
xchg
shll
mov
jnp
icebp
dec
scas
jecxz
fmuls
ja
dec
out
sbb
cmp
sub
push
outsb
stos
iret
or
push
and
mov
mov
mov
lret
xchg
js
mov
xor
mov
mov
or
cltd
nop
pop
fidivs
or
and
sahf
les
filds
fdivs
mov
dec
pop
lcall
enter
push
add
dec
dec
push
mov
sbb
jae
xor
pop
lret
add
cmp
push
sbb
mov
es
mov
aas
mov
mov
mov
aam
mov
cmp
mov
fiaddl
ja
in
adc
pop
xchg
cmpl
jmp
fistl
in
lret
jp
xor
sub
or
inc
lcall
imul
lret
lods
push
sbb
pop
push
or
pusha
mov
mov
inc
jmp
push
jle
dec
das
call
mov
xchg
sbb
and
jo
out
ja
out
dec
push
xor
stc
hlt
js
shlb
jae
pop
mov
dec
jo
dec
cmp
push
hlt
int
pop
pop
jle
add
cld
xchg
xor
arpl
mov
mov
bound
insb
lds
jne
test
mov
out
jb
rorl
out
loopne
push
stos
gs
lcall
inc
aad
movsl
sub
bound
je
mov
adc
xor
mov
dec
inc
fcomip
dec
xchg
out
subl
add
push
dec
adc
stos
push
sbb
in
mov
fnstcw
lock
adc
fidivrs
mov
into
popa
jecxz
sub
mov
and
mov
adc
cltd
push
gs
cmp
push
hlt
imul
ficomps
jg
incl
adc
push
cmp
loope
stos
and
add
inc
fidivrl
out
dec
adc
fildl
sub
or
scas
jl
int3
mov
xchg
pop
pop
pop
daa
mov
mov
cltd
push
xchg
lret
insb
ja
xchg
test
add
stos
xor
push
cmp
jbe
pop
jne
pop
imul
js
mov
std
add
mov
jne
std
add
inc
out
ss
cmp
push
incb
cmp
fistps
negl
jge
inc
idivb
orl
lds
out
sub
adc
les
mov
sub
lock
fs
mov
push
mov
mov
sbbb
insb
sbb
mov
xchg
cs
movsb
xchg
and
mov
mov
pop
jle
test
loop
bound
repz
jnp
add
sub
popf
rcrl
ja
add
sub
popf
aam
add
popa
lret
rorb
push
sti
arpl
xor
bound
push
js
test
adc
mov
jge
stos
ret
mov
pop
and
scas
pop
lds
push
jge
imul
out
and
sub
fs
shll
jo
pop
jge
sbb
mov
xchg
movb
cwtl
inc
out
ss
mov
inc
mov
incl
cmp
data16
xchg
lret
inc
aad
sbbb
and
imul
sti
sbb
pop
das
inc
xor
js
andb
xor
sub
xchg
in
mov
dec
xor
adc
jp
push
imul
xchg
jp
aad
dec
pop
popf
jge
jp
stos
cmp
mov
lods
lds
fiadds
dec
cmpsl
int
jae
push
adc
ljmp
sub
into
jns
jge
jbe
rclb
hlt
lcall
mov
out
pop
bound
xchg
fwait
push
lods
jno
jno
push
ret
mov
out
dec
fimull
cmp
lods
push
add
hlt
mov
push
lods
push
ret
dec
sub
jle
scas
pop
add
sbb
enter
xor
cmp
adc
or
cmp
lods
jno
pop
push
xor
mov
xor
lea
inc
inc
inc
xor
mov
les
out
popl
rcr
fs
pop
pop
stos
fisttpll
jle
sarb
mov
push
jg
and
fiaddl
cmp
movsb
clc
ds
and
imul
adc
jbe
mov
stos
xor
adc
lds
sub
cld
push
test
shrl
xchg
inc
outsl
push
mov
xchg
lret
inc
pop
call
lret
fnstenv
ja
arpl
adc
cmp
add
jle
and
push
xlat
es
sbb
js
lods
lds
repnz
mov
jne
mov
sbb
jns
test
loopne
andb
cmpsl
jnp
insl
daa
out
push
mov
sbb
jmp
rclb
fidivrs
cltd
nop
movsb
ficoml
mov
cmp
add
stc
xor
arpl
mov
jp
jecxz
sub
sbb
cmc
jle
add
push
jae
imul
jmp
ror
scas
jne
mov
sbb
mov
adc
aas
dec
jge
or
xchg
mov
out
or
xchg
in
jmp
andl
or
mov
test
mov
lods
or
mov
xor
lret
jae
xlat
cmp
nop
test
hlt
or
sbb
test
cmp
lea
rorb
xchg
push
jo
rolb
std
fmuls
lahf
jns
xor
mov
pushf
js
lea
xchg
repz
add
ljmp
cli
dec
and
add
and
mov
aad
inc
lock
clc
mov
push
xor
pop
xor
push
adc
mov
cmp
rcrb
ss
in
jno
enter
jae
mov
dec
sbbl
ficomps
cmc
lahf
subb
in
mov
adc
mov
jb
cmp
xchg
fnsave
jecxz
jns
cmp
call
scas
or
dec
sarl
sub
push
fistps
mov
adc
xchg
xchg
int
fs
mov
test
push
mov
icebp
and
jge
push
std
lcall
ds
mov
jmp
shr
test
xchg
sub
jae
and
mov
xor
cltd
bound
test
dec
mov
and
lock
fs
outsl
test
mov
lods
cmp
js
fimull
fs
sbb
mov
pushfw
jl
push
fwait
or
int3
xchg
add
dec
popa
adc
out
jnp
mov
jne
repnz
mov
int3
pop
std
aam
clc
push
sbb
shll
jecxz
imul
pop
xchg
pop
cs
pushf
cmp
sub
sbb
add
jne
ret
fsubl
sarl
rol
clc
insb
jo
imul
xchg
or
sbb
cld
jg
mov
xor
jmp
mov
pushf
ret
pop
ss
or
cmc
cld
mov
cmpsb
test
out
roll
or
and
push
adc
stc
fisttpl
loopne
call
push
pushf
das
lods
xchg
rcll
cmp
mov
cmp
jmp
dec
leave
or
sub
mov
mov
and
dec
stos
or
mov
adc
adc
push
mov
es
ret
cli
sahf
out
xchg
iret
push
pop
cld
popf
xchg
mov
addb
add
inc
dec
or
les
dec
pop
xchg
in
mov
pop
cmp
lods
loop
sbb
arpl
and
in
enter
insb
dec
imul
rcr
dec
stc
push
sub
jne
and
inc
or
inc
lret
ds
dec
and
push
pop
inc
imul
lret
clc
jno
jmp
lds
insl
std
jle
push
movsl
ds
cmp
in
in
lcall
adc
outsb
cmpsb
push
cmp
cltd
or
dec
pop
mov
cmp
or
lret
fs
sbb
lock
sbb
addr16
push
sbb
sub
lahf
cmpsl
add
and
xor
cltd
loop
xor
cmp
cmp
idivl
mov
mov
prefetch
dec
mov
push
mov
sbb
mov
mov
adc
xor
cmp
and
sbb
cmp
push
in
test
mov
insl
out
push
xchg
mov
outsb
mov
push
jb
inc
jnp
xchg
fcompl
arpl
jno
or
xor
std
jae
fstpt
fsincos
mul
push
test
ffree
pop
pop
push
dec
xchg
cmp
sub
push
int
loopne
dec
pop
imul
fnsave
mov
jp
mov
addr16
xchg
js
insb
jg
mov
imul
scas
push
mov
adc
jns
fwait
jle
mov
lods
jae
mov
fnsave
sbb
mov
add
sbbl
rorl
ret
imul
dec
mov
mov
jmp
cmp
cmp
call
lock
xchg
mov
mov
cmc
inc
ljmp
sahf
stos
jnp
push
mov
cmp
push
mov
jp
pop
imul
dec
mov
bound
push
std
popf
dec
mov
jp
jg
addr16
cmpsb
sbb
push
dec
xchg
pop
sbb
xor
xor
imul
stc
fincstp
int3
add
mov
pop
mov
jmp
hlt
push
rorl
adc
jge
dec
mov
mov
jae
es
jmp
sbb
sub
stos
call
or
mov
push
lret
cmp
xchg
test
inc
lods
insb
jbe
sub
out
test
jno
stc
sub
mov
cli
fst
jle
cld
icebp
jg
add
xchg
pop
arpl
mov
mov
push
xor
inc
xchg
mov
mov
mov
adc
mov
in
pop
dec
jmp
pop
nop
jl
mov
push
bound
jo
adc
andl
cmp
push
push
xor
shll
ret
pop
inc
inc
inc
bswap
jge
pop
jecxz
adc
or
prefetch
or
jb
adc
popf
out
repnz
mov
out
or
inc
inc
mov
in
mov
dec
jecxz
jno
outsb
xchg
cmp
mov
inc
add
jne
sar
or
jge
fisttps
aad
sub
inc
sbb
and
loopne
add
cs
xchg
cmpsl
jae
mov
idivb
mov
cmc
call
fwait
jmp
sub
push
xlat
sahf
cmp
aas
push
movsb
dec
aad
cli
sbb
test
add
lret
xor
in
outsb
mov
in
aam
adc
mulb
outsl
insb
jle
xchg
pop
add
mov
insl
orl
inc
es
call
jmp
push
fbld
add
mov
adc
mov
imull
push
and
add
std
test
mov
jnp
cmp
ficoms
out
repnz
sbb
xchg
scas
cltd
scas
cmp
push
sub
fdivr
push
fadds
and
xor
lahf
mov
mov
inc
fwait
pop
out
mov
xchg
stos
iret
adc
mov
icebp
jl
mov
iret
std
mov
push
dec
ljmp
clc
cli
daa
rcl
push
cmp
sbb
ret
pushf
xchg
push
arpl
repnz
mov
mov
pushf
jno
sub
and
pop
dec
test
push
mov
lods
in
idivb
mov
aam
xchg
cmpsl
stos
out
fdivl
into
inc
pop
notb
out
push
push
pop
lds
push
fmuls
jle
or
dec
add
add
and
xor
adc
lds
sub
mov
js
add
int
cs
jae
cld
dec
rcrb
cmp
jbe
sub
or
imul
sbb
jne
stos
icebp
je
mov
fdivr
and
lret
xchg
shll
notb
fistpl
mov
sbb
fdivl
xlat
pop
jnp
clc
in
filds
push
iret
mov
int
push
jno
es
std
cmp
fcmovbe
jae
cmp
inc
jp
rcrb
adc
dec
test
mov
jmp
int
pop
or
nop
pop
loop
sbb
mov
outsb
dec
xorb
inc
shll
cltd
pop
push
add
mov
int
test
push
xchg
sbb
pop
cmp
inc
imul
and
jae
hlt
js
mov
and
sbb
and
jmp
dec
in
add
enter
in
jmp
scas
mov
fcoml
pop
mov
sahf
jae
pop
add
mov
dec
jbe
into
out
jp
jns
sbb
mov
popf
lret
cmc
mov
test
divl
sbb
cmp
lea
out
mov
and
cmp
pop
aam
sub
sbb
add
push
popf
movsl
lcall
push
xor
add
inc
xchg
push
adcl
sub
mov
mov
addr16
sbb
outsb
fcomp
lret
add
sub
lea
jno
xor
stc
punpckhwd
in
xchg
jbe
sub
xchg
mov
sbb
add
les
sarb
leave
loopne
xchg
jo
jecxz
mov
ss
imul
adcl
jecxz
subl
or
cmp
dec
sbb
inc
push
mov
cmpsl
add
lea
and
sarb
stc
lds
xchg
cmpsl
inc
or
mov
push
push
and
enter
cmp
mov
ja
out
cmp
and
lret
out
mov
dec
out
repnz
add
dec
insb
divb
sbb
icebp
rcrb
push
popa
xchg
les
outsl
and
mov
ss
aas
std
or
adc
imul
add
jmp
les
jl
mov
jns
and
test
aam
or
jae
sbb
fs
fsubs
es
dec
pop
push
push
das
ds
dec
js
cwtl
xchg
mov
mov
scas
dec
les
add
scas
and
movsl
shlb
xchg
adc
jg
stos
popf
mov
mov
xchg
add
and
add
cmp
aas
jns
cmp
push
imul
movsl
test
mov
imul
mov
rorb
or
adc
add
push
arpl
pop
jo
rcrl
xor
sbb
ljmp
jl
inc
in
fidivrs
add
mov
jmp
jmp
sbb
push
es
mov
fsubp
xchg
imul
adc
pop
mov
fcmovbe
jbe
in
sub
lock
popf
sub
dec
in
sub
lds
fmul
lea
and
aad
cmp
mov
cmp
mov
lahf
test
add
mov
hlt
enter
push
mov
pusha
xor
lret
packuswb
scas
fwait
bound
xchg
cli
cmp
stc
hlt
fsub
pop
jg
lds
push
out
cltd
mov
in
andb
jbe
mov
jnp
mov
mov
sub
ja
aaa
aad
sub
mov
jg
enter
in
jae
test
sarl
xor
ljmp
push
addr16
xchg
stc
outsb
dec
dec
mov
cld
sbbl
xlat
pop
xlat
movsl
and
push
fimuls
cwtl
bound
cmp
cli
sbb
add
add
mov
out
divl
sbb
add
insl
popf
jb
shl
mov
cmp
mov
cmpsl
lods
push
cli
out
add
mov
aam
sub
imul
movsl
add
pop
pop
sbb
xlat
daa
pop
ret
sbb
cmp
ror
or
adc
jns
pusha
repz
fcomps
out
or
fbstp
pop
gs
cmc
ret
push
lock
in
sub
or
outsl
fldcw
mov
push
out
mov
rol
pop
dec
jg
jecxz
rol
push
out
mov
mov
mov
mov
repnz
xchg
mov
movsb
push
add
adc
cmp
lock
pop
rolb
jg
mov
fidivrs
scas
test
xchg
addr16
outsb
jge
rcl
mov
inc
jle
ret
dec
sbb
sbb
ret
xchg
hlt
insb
scas
and
mov
pop
sbb
ljmp
imul
shlb
iret
scas
jmp
cmpsb
mov
jp
xchg
lahf
jge
push
xlat
sbb
pop
xchg
dec
adc
mov
ret
xchg
inc
inc
inc
aad
outsl
cmp
jbe
popa
enter
cmp
push
pusha
sahf
inc
push
xor
pop
mov
divb
in
insl
rcl
cmc
push
icebp
mov
shll
add
nop
lret
popf
inc
fiadds
ds
je
into
iret
dec
mov
and
loop
mov
shrl
jb
and
je
insb
clc
arpl
cmp
or
andb
add
hlt
ret
leave
jg
add
mov
xor
adc
mov
outsl
pop
int3
imul
jb
jnp
cmp
imul
mov
jecxz
dec
mov
cmc
imul
mov
decb
pop
mov
inc
adc
lods
pop
xor
or
jg
xor
ret
jb
test
outsb
in
jge
and
adc
dec
repnz
inc
clc
in
mov
ds
add
dec
imull
xor
push
test
adc
cltd
stos
data16
or
sahf
sbbb
mulb
sub
fsub
andl
jl
test
fisubs
dec
inc
cmpsb
mov
cwtl
adc
loope
cmp
cmpsb
add
clc
mov
xchg
roll
jmp
xchg
pop
sub
adc
mov
jmp
push
adc
push
out
int
pop
hlt
pusha
out
lahf
adc
imul
add
mov
mov
and
mov
adc
lea
add
movl
cmpsl
popa
sub
xor
insb
mov
sub
xor
sub
sbb
popf
adc
mov
cmp
jp
inc
dec
xchg
or
gs
ja
movsl
pop
fwait
add
inc
int
jecxz
mov
int3
or
repnz
mov
xchg
out
and
test
decl
inc
pop
jne
subl
leave
or
out
sub
loopne
pop
mov
xor
inc
cmp
push
shrl
aad
int3
jne
sbb
cmp
cltd
push
fnstsw
cmpsb
loop
mov
pop
test
pop
hlt
xor
and
xchg
adc
aaa
repnz
pushf
es
decb
pop
mov
clc
loop
aaa
popa
cwtl
cmpsb
sahf
pop
mov
push
aaa
sub
pop
nop
adc
sub
test
imul
push
dec
out
cmp
stos
lret
fidivl
stc
rcrl
out
mov
pop
cmpsb
push
fisubrl
cs
insl
rclb
pop
xor
jl
mov
aas
call
and
loope
or
stc
pop
mov
addl
and
in
jo
jo
into
dec
add
adc
es
imul
inc
aas
add
mov
mov
dec
jmp
daa
adc
nop
dec
in
jle
call
xchg
cmpsb
mov
mov
aas
scas
adc
push
dec
dec
sti
orl
adc
ja
and
rolb
cmp
outsl
push
xchg
in
sub
pop
adc
in
das
insl
xchg
ljmp
in
lds
inc
xchg
aam
pop
push
sub
sahf
ss
cmp
sbb
incl
pop
mov
test
mov
and
sahf
xchg
xchg
hlt
in
pop
jne
cmovl
ss
test
and
cmp
fisubrs
out
and
pop
xor
adc
sbb
stos
xchg
insl
jae
sub
sbb
data16
rcrl
dec
mov
repz
int
sbb
incl
lcall
clc
push
sarb
mov
sub
push
and
pop
fstp
push
fisttpll
or
int
fstpt
imul
fmull
fisubrl
into
pop
ret
pop
mov
mov
pop
out
dec
add
jecxz
mov
mov
daa
cltd
repnz
push
jns
pop
in
mov
lods
cmc
xor
lahf
lret
push
test
lahf
fidivrs
jg
daa
scas
das
add
arpl
push
cs
stos
add
loopne
out
jecxz
or
imul
lret
mov
mov
das
sub
hlt
ret
lds
add
or
aam
inc
pusha
sub
mov
aaa
dec
jns
dec
hlt
xor
push
in
dec
sub
je
mov
inc
cmp
outsl
mov
xchg
test
pusha
xor
lcall
popa
mov
jo
leave
jle
add
sub
andl
aaa
fld
jns
leave
mov
jb
adc
mov
cmc
cli
xor
sbb
inc
mov
pop
out
mov
adc
xlat
mov
loopne
add
xchg
gs
jmp
dec
insl
jbe
shlb
ss
stos
push
xchg
in
cmpsl
mov
mov
pop
lcall
stos
arpl
or
orb
test
mov
stos
imul
je
stos
xchg
jp
fildl
je
push
inc
sarb
mov
aaa
adc
and
xor
ror
push
into
movsb
jnp
push
mov
in
xchg
arpl
std
pop
jecxz
pop
dec
les
dec
sub
mov
fwait
sbbb
lret
fiaddl
xchg
out
adc
ret
js
fdivl
pop
inc
sub
leave
or
push
or
jmp
add
dec
pop
xchg
outsb
pop
adc
push
add
das
repnz
dec
pop
ret
out
mov
mov
fildl
ss
lret
jmp
jns
insb
jmp
xchg
int3
inc
add
sahf
lds
repnz
gs
mov
push
cmpsl
jge
mov
push
aas
push
adc
and
dec
mov
lret
test
and
imul
mov
cmc
outsl
das
lret
ja
push
loop
mov
test
mov
rclb
mulb
xor
les
outsl
or
js
mov
inc
jns
jle
or
outsb
add
shll
jmp
cmp
pop
fistpl
jns
fwait
int3
inc
inc
sti
mov
xchg
mov
mov
mov
fxch
aam
inc
ja
out
jmp
xchg
push
xchg
sahf
jle
add
clc
mov
std
cmpsl
push
outsl
das
lahf
arpl
movsl
outsl
or
xchg
mov
push
scas
xchg
push
jne
pusha
subb
xchg
setae
push
insl
pop
mov
xchg
adc
dec
mov
pop
or
push
test
sub
mov
dec
call
push
jecxz
andl
add
adc
add
xchg
pusha
dec
xchg
into
lds
scas
cmc
popf
lods
loope
mov
lods
test
aad
pop
adc
mov
in
fidivs
jbe
adc
in
lds
add
jp
ret
push
jp
jbe
xor
lods
das
cmp
fmuls
aas
cli
test
xor
pop
test
int
sarl
in
test
sarb
enter
subb
or
stos
shlb
jo
and
or
and
inc
aas
stos
jecxz
mov
add
out
sbb
mov
lahf
add
mov
push
out
pop
outsl
mov
sbbb
pop
add
mov
cmpsb
mov
mov
repz
jo
add
jns
nop
cmp
fsub
jmp
mov
rorl
mov
sub
adc
aaa
inc
ja
sarb
lahf
pop
jecxz
mov
jne
mov
imul
cmp
mov
scas
fcoml
movsl
adc
and
cwtl
mov
cmp
push
ret
rcll
notb
pop
out
xor
dec
lret
lock
insb
shl
add
out
push
mov
stc
mov
mov
push
rcll
jle
sti
in
fisubrl
jmp
cli
inc
push
stos
testl
add
outsl
pop
sahf
and
loope
movsb
push
mov
xchg
pop
in
adc
cld
call
fildll
clc
pop
mov
popa
or
pusha
pop
test
sub
ljmp
dec
mov
psubw
xchg
jbe
pop
lods
pushf
popf
adc
repz
cmp
in
xchg
stos
pop
xlat
stos
inc
xor
unpcklps
ljmp
in
lods
push
mov
push
dec
inc
imulb
cmpsb
pop
fidivrs
or
pop
daa
ret
rol
popf
cmp
imul
outsb
fldenv
push
push
xor
push
icebp
dec
add
mov
lods
inc
mulb
push
xchg
outsb
dec
pop
fs
push
scas
mov
in
decl
movb
jbe
outsl
pop
inc
fistpl
and
call
inc
or
stos
cli
clc
xor
fmul
stc
fldcw
rorb
xor
xchg
xchg
xchg
sub
pop
loopne
cli
mov
fs
sbb
insl
pop
xchg
popa
add
xchg
xor
inc
cmp
mov
push
adc
push
pushf
dec
fstl
imul
mov
loop
mov
adc
xchg
unpcklps
mov
loopne
setge
icebp
mov
dec
scas
ds
mov
test
bound
mov
xchg
loope
xor
inc
xor
ret
push
in
and
push
aam
dec
mov
cli
aad
ret
shl
push
pop
mov
mov
cld
je
mov
sbb
mov
inc
scas
xor
dec
jno
pusha
push
scas
mov
or
mov
jle
and
sbbb
jo
and
adc
jecxz
aam
adc
push
push
jmp
aad
decb
mov
lds
mull
xor
pop
or
mov
xchg
lret
fisttpl
or
hlt
mov
jo
inc
jb
cld
xor
pop
in
adc
push
test
jns
jge
xchg
mov
push
call
or
mov
pop
out
loopne
ds
iret
ja
scas
stos
xchg
lea
nop
push
cld
popa
jmp
and
mov
stc
cmc
insb
inc
insb
bound
mov
push
in
mov
fimull
push
test
rcr
mov
jbe
push
or
lret
jmp
mov
sti
divl
add
shl
out
mov
mov
aas
cmp
xchg
sbb
mov
movsl
or
aas
push
push
scas
add
push
int3
test
aam
aaa
sub
jmp
sub
or
rolb
adc
jg
adc
dec
icebp
mov
jl
jg
bound
push
push
stc
js
lret
and
xchg
test
xorb
cmp
push
jo
xor
jns
inc
fisubrl
clc
sub
jns
outsb
pushf
push
push
jl
popa
push
and
lock
jne
jbe
push
fs
push
jge
or
sti
ja
adc
add
pop
inc
mov
jne
ja
and
or
test
dec
ret
lds
add
shl
xor
call
mov
jge
cmp
push
jle
cmc
fisubrl
leave
sub
xchg
mov
add
push
xchg
dec
scas
and
jno
xchg
test
out
rdpmc
lret
scas
inc
addr16
imul
or
pusha
push
lds
repnz
loope
adc
insb
lahf
leave
das
repz
repz
mov
or
or
lds
enter
sahf
sahf
mov
jno
scas
mov
mov
adc
fisttps
clc
mov
adc
lods
mov
gs
cs
loopne
negl
jno
into
or
ficompl
mov
jle
xchg
sarl
mov
pushf
call
cmpsb
mov
lret
divl
push
in
add
addl
daa
test
mov
push
aad
lret
dec
and
outsb
inc
aaa
xchg
fs
dec
adc
and
xor
mov
sarl
aaa
add
std
lahf
cmp
mov
pop
dec
adc
jl
xchg
inc
add
movsl
mov
out
xchg
cwtl
xor
or
cmc
jle
fsts
mov
test
in
dec
pop
jmp
or
inc
lahf
in
and
inc
mov
xor
lods
inc
loope
or
mov
cli
insl
arpl
or
add
pop
loope
into
xchg
adc
mov
incb
adc
inc
mov
xchg
mov
sbb
popf
adc
sahf
jno
push
jl
push
lods
jno
dec
out
xchg
mov
subl
xor
out
les
xchg
add
sbb
mov
daa
lret
pop
inc
lret
fnstenv
mov
mov
sbb
pop
add
xchg
xor
lcall
add
sbb
out
mov
mov
mov
sahf
iret
xlat
leave
sub
lret
dec
push
nop
sub
lret
sub
jbe
jae
and
fcmovnu
sbb
fsubp
xchg
mov
dec
jmp
jecxz
xor
fnsave
push
and
fisttps
dec
sub
sub
adc
loop
ficompl
fldcw
out
or
cmp
sahf
xor
jns
sbb
sub
inc
jmp
dec
add
ds
xchg
lock
ret
lea
into
push
incb
movsb
fidivrs
ror
push
jae
or
aad
cmc
dec
pop
xchg
mov
add
movsb
into
jge
test
cmova
pop
jge
mov
mov
pop
popf
xchg
andb
dec
sbbl
call
pusha
in
pop
aas
and
addr16
in
and
das
mov
inc
pop
mov
clc
fsubl
mov
mov
xchg
sbb
ss
sbb
pop
in
mov
push
test
adc
or
mov
mov
int3
idivb
shrb
sbb
jg
pop
bound
push
or
pusha
lods
repz
addr16
and
divl
in
sbb
mov
lahf
add
loopne
pop
test
ja
adc
enter
and
loope
xor
sbbl
dec
inc
test
test
cltd
fistl
clc
rcll
jle
pop
jl
fdivrl
outsb
lcall
and
lea
add
stc
mov
dec
sbb
leave
pop
fdiv
and
das
dec
mov
sbb
insl
orl
lcall
movsl
in
adc
xchg
out
dec
adc
rorb
popf
and
cli
ret
fcomps
out
sti
sub
xor
mov
icebp
mov
shr
mov
mov
icebp
addr16
jecxz
sbb
add
jne
cs
mov
call
lahf
adc
enter
jo
movsb
fstpt
jecxz
and
pop
push
sbb
cmpsb
inc
xchg
sbb
ret
fwait
cmp
mov
push
push
jmp
ds
lods
pop
aaa
push
jp
inc
jo
adc
lds
scas
cmpsb
stos
inc
and
addr16
pusha
inc
xchg
and
push
mov
fwait
xchg
into
sti
ds
sbb
lret
mov
inc
push
add
ja
orb
lock
pop
aas
stc
ret
in
mov
cld
int
ljmp
ja
addr16
lret
pop
pop
add
mov
roll
pop
mov
loopne
scas
sbb
and
test
aas
in
xchg
movsb
jmp
and
xchg
dec
add
data16
test
clc
cmpsb
psrad
push
sti
and
fists
sub
mov
mov
xchg
int
add
cmp
das
insl
mov
stos
sub
pop
neg
and
icebp
loopne
cwtl
adc
jae
jecxz
sub
int3
lds
in
mov
jl
jecxz
popf
or
cmp
jo
jns
dec
rolb
xchg
aam
mov
std
push
std
test
jmp
in
das
into
sub
daa
insb
jl
ja
xor
jnp
add
mov
mov
mov
xor
mov
mov
cld
test
pop
jnp
popf
cmpsb
pusha
inc
in
dec
stc
loope
mov
popf
aam
and
cmpsl
in
push
mov
into
icebp
sbb
out
or
ljmp
stos
jg
inc
lahf
xor
test
adc
loopne
inc
out
inc
movsl
arpl
repz
adc
movsb
mov
xchg
nop
dec
lods
inc
sbb
ds
rclb
cmp
lret
sti
push
mov
rcrl
push
mov
pop
add
mov
dec
adc
mov
sub
dec
in
mov
or
inc
aam
ret
sub
test
add
adc
pop
je
push
dec
pushl
outsb
aam
leave
fimull
imul
and
cmp
adc
xor
and
adc
imul
push
xor
vorps
cmp
cmp
cli
push
xlat
in
mov
lods
ret
and
pop
or
lcall
inc
push
push
push
jmp
sahf
mov
sysenter
test
cmpsl
jbe
mov
xor
push
mov
ds
lock
sbb
out
cltd
jge
jbe
insb
pop
cmp
and
scas
sub
pop
movsl
popa
lahf
pop
aas
rcrb
pop
fimuls
gs
sbb
int
icebp
into
xchg
mulb
fwait
aad
and
or
xchg
loope
xchg
jecxz
or
add
mov
test
xor
xor
mov
nop
jecxz
scas
cltd
gs
adc
inc
testl
cwtl
mov
rcll
pop
pushf
shll
jae
push
add
sti
jp
or
bound
iret
push
adc
jb
add
insb
push
jmp
mov
jge
sbb
pushf
dec
jp
xor
mov
addr16
sbb
lods
cmp
dec
and
orl
lock
mov
jecxz
aam
jecxz
add
and
cs
xchg
std
xchg
shll
leave
insb
jns
jecxz
lea
jg
loop
fdivs
mov
stc
mov
sub
loop
lock
repnz
cwtl
push
and
incl
xchg
nop
or
repnz
imul
inc
in
movsl
mov
scas
mov
pusha
shrb
ja
rcll
mov
push
mulb
test
mov
mov
fucom
arpl
insl
xchg
sub
pop
fldenv
scas
lods
or
les
lods
cmp
mov
mull
ss
pusha
add
add
cmp
mov
in
mov
in
lods
adc
xchg
mov
pop
icebp
mov
adc
mov
outsl
out
inc
subb
pop
mov
add
xchg
popa
inc
sub
idivl
dec
imul
mov
mov
es
popa
js
and
mov
mov
pop
lods
push
xlat
xor
out
arpl
adc
xor
push
orb
inc
lods
inc
sub
fsubl
std
mov
sahf
ja
mov
push
aaa
lds
dec
mov
dec
sbbl
push
in
aam
call
mov
push
pop
scas
add
xor
cmp
mov
shrb
test
pop
jecxz
ja
xchg
push
and
mov
fdiv
dec
xor
das
ficompl
cld
in
aas
cmp
xchg
mov
sub
sub
nop
jg
stos
jecxz
dec
xor
mov
mov
dec
xor
jno
fbld
movsb
int3
sub
mov
jae
add
in
or
mov
mov
daa
pop
insl
pop
into
scas
pop
arpl
or
mov
mov
gs
orl
push
movsb
adc
and
ret
pop
ret
movsl
sub
sti
es
dec
inc
sub
dec
or
pop
mov
lds
push
bound
and
xorb
cmp
mov
xor
pop
bound
mov
das
add
fwait
scas
xor
daa
lcall
xchg
sbb
popa
call
push
cmp
rcrl
push
mov
bnd
inc
jns
push
rcrb
pop
inc
outsb
jb
xchg
adc
push
cmc
mov
inc
lock
outsl
lods
adc
js
adc
push
dec
sbb
xchg
xor
mov
pop
lret
aaa
and
cmpps
lahf
sarb
cwtl
sub
aam
push
push
jnp
fdivrs
testb
cwtl
inc
xor
in
test
adc
pop
push
mov
mov
adc
pusha
push
notl
loop
addb
inc
dec
lahf
xchg
mov
js
pop
test
inc
mov
je
pop
repnz
imul
push
jnp
push
scas
xchg
fwait
xlat
cmp
jg
fnstsw
or
dec
pxor
lcall
mov
test
pop
jbe
push
cli
aas
movsl
lret
push
outsb
es
lahf
mov
dec
inc
push
xor
jno
fcoms
jb
ljmp
mov
aas
lods
aas
jle
lods
dec
push
mov
aas
jb
cmp
cmp
cmpsb
test
dec
push
pop
inc
fcom
andl
scas
mov
in
roll
mov
std
add
adc
xor
inc
fsubl
xchg
jbe
mov
jo
xor
inc
pop
dec
xchg
in
adc
and
sbb
mov
stos
aaa
loop
push
push
insl
test
repz
mov
jmp
xor
or
dec
fs
sbb
xor
xor
in
add
mov
js
and
cmpsb
mov
xor
test
shlb
repz
mov
cmpl
push
mov
mov
inc
cmc
dec
ret
out
push
ljmp
mov
cmovno
push
shrb
repnz
cmpsl
mov
jp
loopne
mov
sbb
jb
rol
add
add
jge
mov
xor
push
jnp
mov
lret
push
in
sbb
push
sub
xor
mov
ret
cmp
push
pop
mov
les
mov
mov
sbbb
test
sbb
int3
dec
into
jmp
int
aas
es
movsl
imul
sub
jle
inc
cmc
int3
addr16
xor
inc
lcall
sarl
cmp
ljmp
mov
and
daa
faddl
sti
jns
pop
pop
adc
xchg
cmp
cmp
fwait
xchg
jp
gs
fwait
ror
jb
icebp
lret
mov
lods
leave
fisubrl
dec
leave
mov
imul
cmpsl
pop
aad
cmpsl
lret
popa
pop
shl
ds
xchg
inc
fs
sub
pushf
into
and
sub
test
insb
int
lock
dec
movsb
fwait
pop
rol
cwtl
iret
pop
mov
nop
xchg
imul
rcll
sahf
enter
leave
stc
and
ss
jp
aam
pop
or
xor
or
loope
insb
les
orb
or
sbb
out
daa
jbe
divl
dec
and
xchg
insb
bound
push
push
add
cmpsl
lret
pusha
jae
mov
lock
sbb
or
test
mov
jg
add
sarb
mov
adc
lcall
xlat
mov
adc
add
sbb
lret
test
add
push
mov
sarb
ja
mov
jg
dec
js
insb
ds
lcall
jg
out
repnz
sub
addr16
cmovne
mov
or
inc
dec
in
and
leave
add
mov
iret
cs
cmp
xor
cltd
idivb
popf
negl
cmpsl
xor
stc
addr16
loop
subb
push
dec
nop
int
or
mov
sbb
iret
mov
add
scas
lret
in
enter
sub
dec
out
ret
imul
or
cltd
push
adc
mov
inc
hlt
adc
js
in
insl
insl
in
xor
roll
mov
push
mov
xor
mov
mov
aad
scas
addr16
inc
jle
pop
or
adc
lods
in
shll
shll
inc
out
cmp
mov
cld
sub
or
jno
cmp
es
dec
push
mov
add
mov
jbe
fimuls
dec
data16
xchg
cmpb
sbb
mov
adc
scas
lcall
adc
into
mov
out
lret
push
iret
push
xchg
clc
fdivs
cmp
pop
dec
repnz
or
cld
scas
sub
outsb
mov
cmpsb
mov
jl
cli
lea
scas
pop
fsts
xor
xchg
scas
hlt
insb
xor
and
cmpsl
call
jno
jg
jle
xchg
adc
popf
pop
fs
stc
inc
mov
inc
pop
fs
xor
pop
mov
mov
or
inc
jnp
adc
xor
mov
cmp
pop
xchg
fidivl
or
mov
shll
fsubs
xor
out
gs
xchg
out
xor
js
mov
sbb
testb
mov
loop
dec
fmull
mov
add
pop
in
sub
movsb
je
jnp
idivb
lds
rcll
inc
xchg
and
mov
adc
push
jmp
movsl
inc
faddp
test
xor
popf
or
ljmp
fisubs
aaa
sub
mov
push
xlat
xchg
mov
jmp
push
fistl
test
add
add
adc
fistpll
pop
push
icebp
lahf
nop
push
out
popf
cmp
xchg
xor
ret
jl
outsb
lods
rol
adc
xor
call
mov
pop
push
aam
lret
out
ret
outsl
mov
lods
ljmp
into
pop
inc
xlat
sarl
lcall
repnz
push
dec
push
std
pop
xor
into
jge
fists
push
fs
stc
lahf
ret
xlat
notb
pushf
dec
lahf
addr16
xor
and
jbe
sbb
into
sub
xlat
test
xor
sub
mov
icebp
inc
pop
pop
lcall
xchg
popa
inc
adc
call
jb
cli
pop
mov
cltd
cmpsb
iret
or
jp
cmp
adc
mov
xor
mov
into
daa
xchg
sbb
nop
or
shlb
xchg
or
push
js
int3
insl
xor
mov
das
inc
push
push
mov
jge
push
jle
test
inc
lods
fdivp
bound
imul
jmp
add
add
pop
mov
mov
cs
sbb
mov
jg
addr16
push
pminsw
insl
outsb
pushf
xor
dec
int3
hlt
cmp
xor
pushf
fdivrp
mov
jecxz
addr16
mov
xor
jmp
or
fistl
out
addr16
cmp
jmp
mov
jno
aaa
dec
xor
push
pop
or
sbb
pop
outsb
cltd
adc
popa
jno
xchg
xchg
cmp
sbb
ret
dec
or
mov
adc
mov
mov
push
cld
into
ljmp
xor
xor
sbb
sub
inc
clc
leave
and
sbb
pop
xor
rorb
mov
pop
out
xor
js
add
inc
xor
mov
ss
cwtl
dec
jns
or
mov
jl
inc
arpl
mov
inc
dec
ja
aas
arpl
mov
sahf
xchg
jae
push
sub
dec
rcl
push
jo
or
xor
mov
int3
ret
xor
xchg
and
pop
push
mov
popf
jmp
push
cmpl
jno
lret
sub
push
or
rclb
dec
pop
jl
cmp
into
std
gs
outsl
sbb
andb
shl
pop
scas
rolb
or
aaa
adc
inc
adc
mov
jmp
inc
mov
rorb
iret
add
jnp
or
push
cs
xlat
dec
jg
pop
jmp
arpl
repz
shll
data16
push
pop
pop
es
dec
pop
sahf
jns
sub
in
fcos
push
and
mov
dec
adc
cs
cli
xor
add
notl
xchg
cmp
xlat
lea
pop
cmp
sub
jae
adc
fs
mov
jnp
imul
xorb
and
cmp
cmpsl
jb
xchg
addr16
jae
push
mov
xlat
test
adc
mov
and
mov
jno
sub
fcmovu
sbb
cmp
or
inc
repnz
sahf
jae
cmp
and
pop
sub
xor
stos
repnz
push
addl
outsl
cmpsb
test
fimull
sub
inc
lods
dec
xchg
dec
jmp
dec
push
dec
inc
pushf
inc
mov
jnp
mov
gs
add
pop
mov
shll
das
xor
sbb
adc
cmp
lods
dec
pop
cmpsb
xor
xor
pop
std
leave
xor
xor
pop
jg
fidivs
jecxz
aaa
adc
mov
jb
and
shrl
movsl
pop
mov
cmp
push
insb
cs
icebp
test
sarb
lock
cmc
cmp
fcoml
pop
outsl
mov
inc
adcl
aaa
xchg
ret
sarl
push
iret
pop
dec
divl
xchg
push
cmpl
imul
in
mov
pushf
negl
and
cmp
sub
cmpsl
imul
out
pusha
bound
jmp
sbb
es
je
test
aad
dec
push
mov
xor
fxch
rcrb
sbb
dec
xchg
or
cmpsl
icebp
mov
sahf
jp
push
mov
jne
insl
pop
fsts
outsb
mov
dec
mov
jge
adc
mov
xchg
loope
int3
mov
jno
push
out
mov
or
movsl
push
sti
dec
jae
push
in
in
mov
out
jne
cmpl
jge
mov
out
loopne
mov
arpl
in
xlat
mov
and
push
jp
and
lea
mulb
into
push
stos
test
gs
dec
xchg
mov
jno
sub
sbb
insl
fbld
pop
rol
mov
add
fstpl
lock
ret
sub
adc
fwait
jp
pop
lock
mov
dec
scas
fwait
push
or
inc
rcrl
inc
roll
jns
jge
js
pop
jns
arpl
and
sbb
icebp
sbb
add
lcall
pop
scas
cmp
outsb
push
push
sub
out
inc
jne
clc
loopne
mov
push
sub
enter
jbe
xchg
test
scas
push
in
inc
mov
xor
xlat
mov
out
mov
cmp
adc
fmull
stos
mov
in
mov
stc
mov
outsl
sub
addb
jne
pushf
pop
or
adc
stos
mov
sub
push
jno
mov
push
ret
fsubp
test
pusha
fs
jp
pop
add
ja
sub
sub
nop
and
push
sbb
scas
xor
int3
shlb
mov
sub
xchg
or
cmp
das
add
bound
pop
sbb
aas
ror
or
ja
and
stos
js
fcmovne
xor
xor
fisttps
jbe
pop
out
aaa
incb
cmpsb
and
stos
inc
or
cmp
rep
fisttpll
arpl
lods
jge
add
cmp
add
popf
aad
das
insb
xor
and
cli
cs
xor
mov
rclb
enter
push
cmpsl
popf
in
inc
sbb
in
jle
int3
mov
add
mov
adc
sbb
push
dec
fwait
in
cld
stos
xchg
ds
testb
ds
fwait
lea
mov
fisttpll
mov
lods
lcall
fs
sub
and
mov
push
out
std
les
scas
adc
mov
adc
push
cmpsb
mov
sbb
add
mov
mov
add
jge
mov
mov
sbb
add
and
push
cmp
fcoms
std
push
mov
mov
dec
mov
pop
aad
test
pop
mov
dec
dec
inc
sub
in
mov
leave
test
aaa
pop
adc
xor
adc
xlat
push
shl
sbb
pusha
les
enter
imul
and
pushf
inc
sbb
cmp
dec
rcr
jge
pop
ficoms
xor
dec
and
pop
ljmp
dec
adc
mov
cmpsl
push
mov
js
nop
xchg
cld
push
nop
aaa
in
sti
pop
sbb
xchg
adc
data16
ror
push
push
out
and
imul
cli
out
sub
sahf
mov
rolb
push
test
dec
fisttps
je
outsb
lock
sbb
mov
mov
and
inc
cmpsb
xchg
cmpsb
andl
pop
mov
jmp
jae
cmp
dec
inc
ffreep
lock
add
lock
fstps
ret
sar
pop
mov
cmpsl
outsb
mov
test
xor
and
loope
and
push
aad
loope
jp
in
loope
dec
jae
pop
cmp
loope
das
fwait
jae
pop
iret
or
out
cmp
fcmovnbe
loopne
test
pop
mov
pop
cmpsl
stc
or
mov
jbe
mov
js
inc
and
xchg
cld
dec
cmp
jae
shl
mov
add
mov
jno
repz
cmpsl
das
sbb
sbb
or
xchg
push
clc
pushf
cmc
xor
aaa
sub
rcrb
xor
mov
in
sub
jnp
leave
out
roll
mov
lods
nop
jae
and
movsl
in
jno
inc
sub
push
dec
outsl
fisubl
sub
out
pop
and
dec
jge
fcoms
lods
scas
mulb
jb
cmp
push
int3
stc
and
or
addr16
in
push
int
jae
loope
mov
jge
cmp
les
mov
pop
mov
or
test
jge
or
and
pop
and
nop
and
dec
jle
xchg
inc
jo
in
push
jecxz
pandn
pop
int
pop
rcpps
and
lahf
out
jbe
cwtl
sti
mov
inc
outsl
loop
add
daa
out
scas
xorl
daa
or
xor
dec
adcl
mov
pop
mov
cmp
push
push
in
jge
and
mov
ret
pop
xchg
xchg
sbb
jecxz
push
pop
ret
ja
rcll
xor
hlt
mov
nop
sbb
or
sub
stos
dec
sub
pop
jle
scas
xchg
iret
and
mov
popa
cmp
jle
and
dec
sub
into
stos
mov
es
push
sarl
mov
jge
push
or
add
sub
aad
insb
mov
xchg
pop
stos
movsb
jne
mov
in
mov
imul
test
shlb
das
frstor
scas
fistl
inc
les
jmp
je
int3
inc
jne
or
or
test
jp
xchg
push
ljmp
stos
and
jns
mov
push
push
sub
adc
enter
pushf
cmp
jns
mov
xchg
xchg
arpl
repnz
test
mov
jecxz
ss
cltd
fisubrl
push
mov
int
mov
jne
jns,pn
xchg
gs
ljmp
lahf
lods
daa
jmp
lock
adc
jns
iret
push
and
xchg
rcll
pop
popf
movb
retw
sbb
push
adc
ja
sub
in
ja
ror
in
icebp
mov
mov
cmpl
das
push
cmp
mov
shll
cmp
movsb
pop
lea
sub
out
push
test
dec
xchg
mov
adc
ja
cmp
push
xor
rorl
dec
outsl
fcmovb
xchg
push
popf
dec
pop
cwtl
sub
xchg
sbb
test
shrb
ds
mov
ret
xchg
lods
mov
adc
or
inc
movsb
pop
or
push
add
cmp
push
dec
es
dec
pop
lods
pushf
add
pop
push
stos
adc
jbe
xchg
dec
mov
mov
mov
aaa
repnz
arpl
and
sbb
jmp
sub
adc
xor
loop
dec
adc
sub
push
int
pushf
jp
inc
sub
cltd
movsl
lea
neg
cmc
mov
cmc
shl
mov
popa
push
adc
add
sbb
test
stos
cmp
imul
mov
test
pusha
add
call
subb
data16
mov
mov
push
sub
jecxz
popa
iret
inc
jmp
sub
sub
aad
sbb
fs
fmuls
mov
nop
jno
inc
fisttps
mov
xor
dec
mov
lods
cmp
sbb
in
xor
fcmovu
shrl
js
sub
imul
and
push
popl
cmp
cmc
iret
inc
push
inc
push
sub
cwtl
pop
leave
mov
repz
inc
mov
into
add
pop
in
addb
push
or
push
xchg
xlat
fdivl
enter
cmpb
jbe
pop
in
mov
scas
xor
les
test
enter
xchg
fiaddl
das
pop
shlb
jmp
shlb
stos
andb
testl
decl
in
mov
bound
cmp
sbb
gs
mov
test
pop
pop
dec
mov
jmp
lock
lret
movb
inc
sub
adc
or
xchg
in
xchg
sarl
mov
imul
add
test
repnz
lock
and
sbb
fimull
sbb
stos
cmp
lahf
fld1
and
ret
jno
je
ljmp
in
mov
mov
stos
fs
push
jo
mov
inc
shlb
lahf
mov
mov
sbb
insl
hlt
aaa
outsb
push
push
pusha
clc
xchg
sub
sbb
pushf
and
je
dec
outsb
leave
mov
pop
movsb
jae
adc
hlt
xchg
cmp
ds
pop
sub
aaa
shll
and
jmp
or
icebp
popl
add
adc
pop
arpl
ljmp
fdivl
inc
or
sub
mov
in
push
jle,pn
mov
mov
mov
pop
ret
movups
push
and
add
out
push
push
in
insl
adc
in
and
adc
add
fucomip
mov
pop
fidivs
fistl
mov
add
inc
inc
call
adc
insb
enter
ret
int3
push
lods
pop
imul
test
jp
je
and
stc
pop
insb
push
inc
xor
inc
mov
fbld
jo
add
adc
imul
add
xchg
rol
mov
cmp
sahf
mov
es
outsb
push
pop
dec
xorl
inc
sbb
lods
lea
fimuls
dec
jnp
push
pop
bound
push
out
cmp
imul
push
test
jnp
in
arpl
je
out
fisubl
sti
fbstp
decl
cld
addb
ds
jnp
cmpsl
lea
mov
repnz
pop
je
mov
cwtl
jb
jmp
fsubr
lods
mov
jle
mov
jnp
insl
int
dec
movb
add
icebp
sub
adc
imul
enter
dec
adc
imull
insb
adc
es
adc
roll
sub
clc
out
inc
test
cmpsl
push
rcrb
pop
incb
les
adc
sbb
xchg
shll
icebp
incb
jle
cmc
cltd
dec
mov
xchg
push
or
icebp
push
mov
jo
in
mov
js
push
xor
cli
xchg
xchg
aaa
lret
cmp
and
bound
loopne
mov
mov
adc
mov
xchg
xor
int
pop
in
mov
cmc
stos
pop
mov
sub
fdivl
mov
test
or
das
mov
arpl
aaa
fisttps
pop
out
fstp
popf
out
inc
jge
push
imul
mov
and
cmpl
outsb
aas
inc
add
mov
lret
fcompl
icebp
popf
pop
fdivrl
cmc
sarb
push
sbb
in
pop
adc
push
loop
popa
inc
inc
dec
sbb
push
jb
xor
jle
jmp
fnstenv
sbb
pop
mov
stos
insb
jns
ret
fbld
fisttps
cli
fcmovb
mov
xor
scas
lds
enter
or
jbe
test
mov
repnz
outsb
inc
outsl
imul
push
fdivl
jmp
pop
xor
mov
insl
out
shl
mov
cli
xor
xchg
mov
arpl
insb
adc
sbb
addr16
outsb
inc
pop
dec
add
fsubr
mov
rcrl
add
into
sub
add
int
add
rcll
scas
xchg
in
mov
enter
jae
fcoms
mov
out
sbb
aam
xchg
scas
jbe
insl
mov
sub
rcll
out
decb
inc
inc
dec
mov
push
push
cli
or
adc
inc
lcall
fs
sub
xchg
addr16
mov
dec
mov
sub
mov
mov
lret
clc
or
dec
clc
hlt
addr16
cltd
aam
push
jae
loop
pushf
fs
aam
arpl
sub
out
cmc
cli
push
or
pop
and
iret
jge
jl
xor
mov
mov
push
aas
jl
gs
and
cmpsb
in
push
filds
sahf
and
sbb
rcrl
inc
ljmp
or
xor
popa
jno
jl
adc
in
pop
jl
push
cwtl
push
mov
roll
dec
adc
es
insl
call
js
xchg
aaa
mov
jmp
ret
xchg
std
fs
xor
xchg
mov
insb
adc
sbb
out
inc
cld
xchg
fiaddl
out
iret
jp
cmp
data16
pop
cmpl
lret
mov
mov
fs
cmp
cmpsb
fisttpl
movsl
pop
pusha
out
imul
jle
popa
shll
aam
pop
push
inc
pop
not
cmpsb
pop
sub
mov
in
jg
gs
cmp
push
sti
in
test
nop
adc
pushf
mov
xor
fnstcw
adc
push
push
and
xor
pop
jno
push
jb
fwait
ret
scas
mov
sbb
pusha
test
loope
fists
ret
mov
neg
mov
out
scas
ret
leave
ret
aad
push
inc
dec
std
dec
hlt
leave
mov
arpl
dec
push
jecxz
adc
cli
sbb
call
jmp
pmulhuw
repnz
sbbl
fwait
lahf
adc
aas
cmp
sbb
cmp
sub
ss
add
adc
add
aam
sub
or
test
and
rolb
arpl
insl
jb
rcrl
je
std
and
repnz
lret
cmp
fildl
push
ret
insb
loop
lock
enter
loope
int3
xchg
fiadds
dec
lcall
cltd
fisubs
cltd
repz
mulb
dec
shr
mov
mov
sub
sbb
shl
cmp
out
jo
in
dec
jne
mov
je
or
je
mov
xor
jle
out
loop
pusha
stos
cmp
lods
sahf
movsl
mov
mov
mov
inc
push
xor
das
dec
cltd
cmp
push
in
jge
lret
push
pcmpeqb
jno
pop
fisubl
cmpsl
inc
pop
sbb
push
lds
cltd
cmp
add
lods
sbb
and
negb
push
lods
out
into
call
stc
insb
xchg
nop
or
pop
stos
push
and
inc
cs
jmp
mov
dec
fwait
xchg
int
jg
aaa
xor
cmp
out
les
out
out
jp
cmc
xlat
or
shll
fldl
jo
xor
rcr
jne
lret
aaa
cmc
ds
bound
and
jo
cli
test
imul
push
jp
dec
cmc
test
faddl
add
add
and
aaa
or
fneni(8087
rorb
loopne
inc
pop
sahf
sti
cli
std
pop
sub
hlt
bound
pop
mov
jne
add
push
ljmp
dec
divb
xor
jae
lea
in
ljmp
jns
loope
adc
sub
lahf
cmp
pop
push
clc
xlat
insl
mov
insb
repnz
hlt
jle
xchg
dec
cmp
mov
jne
lahf
jno
div
add
jns
test
mov
stos
test
popa
mov
jne
jl
outsb
scas
scas
push
sbb
sti
push
push
cld
and
notl
jbe
int3
fbld
xorb
and
sbbb
or
xchg
adc
je
js
sarl
fcom
std
cli
ds
rcrl
in
mov
outsb
movsl
ja
pop
loop
push
lods
popa
jo
adc
push
in
mov
seto
int3
shl
sub
aas
aas
lods
fdiv
sbb
in
xchg
xlat
dec
mov
shr
fsubr
cmp
ja
mov
pushf
xor
or
popa
inc
test
add
div
outsb
xchg
popa
cwtl
sbb
ret
insb
jge
push
mov
cmpsl
cmp
cmpl
push
in
mov
cmp
sbb
imul
fstpl
cmpsb
mov
push
or
lret
clc
jmp
cmp
lds
dec
add
mov
cld
cmpsb
push
out
pop
dec
add
call
movsl
cmp
dec
lock
xor
dec
inc
and
cmpsb
sbb
mov
mov
aaa
mov
pusha
cmp
xchg
sub
cmpl
sbb
addr16
bound
dec
add
add
inc
cwtl
jg
mov
mov
into
test
shl
fbld
inc
out
pop
and
stos
sub
das
cwtl
clc
out
popw
adcb
lcall
jg
test
cmc
jne
add
sti
js
cltd
lods
cmp
and
bound
sub
push
push
mov
xchg
sub
dec
je
repnz
mov
mov
stc
fstl
jle
sub
jns
test
out
sti
xor
push
scas
pop
push
negb
dec
sub
test
cmp
and
out
sub
in
push
and
fwait
or
je
cwtl
sbb
jbe
jecxz
pop
adc
popf
fstps
movsl
jecxz
das
push
in
add
movsb
sbb
scas
add
or
mov
sub
pop
mov
lea
adc
sbb
push
xchg
jae
pop
dec
jb
test
add
outsb
sahf
stos
push
jg
jl
cmp
aas
xchg
sahf
ljmp
adc
adc
out
mov
je
adc
test
daa
pop
adc
add
cs
shrb
push
or
push
ljmp
add
jae
mov
clc
imul
das
neg
scas
fistl
or
mov
outsl
daa
ud2
mull
popf
and
mov
adc
dec
xor
ds
mov
xor
mov
cmpb
lret
addr16
jg
pop
jno
sbb
pop
push
dec
mov
mov
cltd
es
lcall
pop
ljmp
mov
inc
xchg
fdivrp
xor
daa
sahf
xlat
inc
mov
inc
pop
push
or
fwait
loop
adc
jge
and
test
add
mov
mov
sub
adc
cli
in
mov
les
xor
inc
mov
or
std
and
outsb
int
or
mov
inc
mov
loope
std
dec
add
out
mov
and
and
fidivs
dec
fwait
out
dec
cltd
xchg
sub
xchg
mov
push
jmp
ds
shlb
cld
cmp
jne
xchg
or
fistpl
dec
lret
pop
pop
insb
std
xor
sbb
lcall
push
mov
push
mov
fwait
out
daa
stos
adcl
sub
repz
stos
jle
xchg
sahf
cltd
movsl
int
dec
xlat
jbe
mov
mov
sbb
cwtl
shll
lods
inc
insb
push
jae
dec
fs
lds
into
mov
test
in
in
lods
push
xor
pop
ret
adc
outsl
aad
jle
imul
stos
out
sahf
xchg
aad
loope
push
sub
insl
adc
rcl
stos
mov
ds
mov
pop
sbb
add
ss
ret
and
fldt
loop
xor
test
mov
fldt
mov
jle
repnz
xor
dec
mov
out
lea
rorb
push
and
mov
leave
xor
cmpsb
sub
js
or
xor
lret
or
fcmovnb
dec
pop
in
stc
cmpsb
add
dec
jg
pop
fimull
push
cmp
sbb
gs
data16
arpl
inc
jl
push
cmp
and
fsub
mov
jp
dec
push
imul
jl
stos
inc
lds
cmpsb
sub
sbb
rcll
mov
mov
fiadds
and
fidivl
cmc
xchg
lods
push
mov
pop
xor
adc
hlt
fsubl
cmp
cmpsb
pop
ljmp
pop
xchg
lcall
in
subb
inc
adcl
add
mov
xchg
xchg
out
sub
popa
daa
jns
out
test
idiv
inc
or
adc
lds
movsb
push
stc
add
hlt
and
mov
inc
push
adc
scas
nop
out
dec
outsb
lahf
pop
out
push
mov
pop
inc
pop
aam
add
lcall
rclb
inc
jb
mov
xchg
fistl
fs
loopne
lret
add
add
stos
inc
loopne
mov
scas
sub
jg
gs
pop
das
jl
enter
std
sub
mov
or
push
add
fistpl
add
cwtl
inc
pop
mov
add
rcll
cltd
out
lock
xor
fsubl
mov
jecxz
jae
mov
imul
int3
and
adc
xchg
fndisi(8087
mov
out
sub
cli
and
outsl
sub
mov
cli
xchg
ss
in
xor
outsb
ljmp
test
pop
xchg
js
jecxz
loop
mov
imul
push
cmp
and
pop
inc
inc
inc
add
movl
rcrl
js
fs
pop
mov
push
mov
daa
mov
into
cld
cmpsb
scas
stc
sarb
out
cmp
push
jmp
test
push
out
push
into
fadds
insb
fistps
hlt
sbb
in
sbb
inc
push
les
scas
inc
xor
ret
push
daa
and
lea
push
or
sbb
jbe
stos
mov
in
leave
addr16
inc
push
or
icebp
mov
jne
das
ds
pop
xchg
shlb
push
mov
lret
fs
xchg
inc
sub
fstpt
in
mov
push
sbb
xlat
hlt
dec
lea
fiaddl
xorl
popf
lods
cs
stos
loop
mov
mov
sarl
and
inc
xor
sbb
or
repnz
dec
sbb
xor
aaa
mov
aas
add
mov
and
add
inc
mov
jmp
loopne
leave
fsubrp
lds
cmp
lds
pop
add
aas
inc
pop
cmp
fucom
imul
out
mov
fwait
cmp
sbb
push
cmp
sub
pop
mov
fldln2
add
or
add
adc
cmp
out
movsl
cmp
call
sbb
push
jmp
jp
adc
out
cmc
hlt
rorb
dec
mov
xlat
repz
std
pop
inc
sbb
repz
cld
scas
addr16
jl
insl
cmp
add
add
push
aas
or
bound
lods
jbe
jo
ss
in
or
faddp
inc
repnz
and
lods
cmp
jp
repz
les
adc
inc
adc
lods
mov
xchg
or
adc
outsb
and
sbb
jmp
loope
push
add
inc
cmp
adc
inc
sub
mov
pop
lcall
sub
outsb
stos
pop
xchg
push
cmc
dec
dec
ljmp
popf
pop
lea
fnstsw
jne
mov
jle
push
xchg
mov
and
push
pop
mov
dec
scas
xchg
call
out
cmp
xchg
or
cmpb
gs
mov
scas
xor
lock
mov
jb
fdivrs
or
dec
dec
test
xlat
push
push
adc
dec
jge
lahf
in
fildll
sahf
push
dec
pop
pop
bound
lcall
sbb
iret
xchg
sub
lock
in
adcl
fsubrs
cltd
xor
stos
jge
jmp
test
cmc
sbb
aam
and
mov
lret
mov
push
sub
sub
hlt
lcall
sbb
sti
popa
outsb
dec
push
fnstenv
out
lcall
xchg
xor
add
dec
sbb
xchg
test
arpl
das
dec
sbb
jmp
out
mull
xchg
add
push
hlt
call
xchg
lret
insb
repnz
xor
sbb
sbbb
js
sub
cli
cli
jmp
pusha
int
mov
ss
mov
aaa
mov
cmpsb
mov
pop
and
out
cltd
xchg
dec
pusha
push
pop
sub
repnz
dec
xchg
in
fstps
pop
das
jns
add
pusha
call
je
sbb
repz
mov
into
into
pop
pop
ret
or
or
adc
jae
rorl
aam
push
imul
mov
es
mov
addr16
movsl
bnd
aam
aaa
les
mov
jo
adc
arpl
push
addl
aaa
pop
xchg
add
mov
sarb
fldenv
lea
sub
outsl
cmp
push
push
push
lret
dec
pop
jo
cmc
cwtl
addl
push
jne
pop
shrl
bound
dec
test
mov
push
in
inc
xchg
cli
hlt
jae
sbb
iret
push
mov
fs
adc
out
xchg
cmpsl
xlat
adc
adc
mov
pop
idivl
jns
jae
push
call
add
int3
pop
es
leave
repz
clc
lods
or
ficoms
subb
orb
into
dec
int
shrb
mov
mov
xchg
mov
jnp
out
js
testb
subb
lret
jg
or
andl
adc
insl
jne
enter
pop
jae
aad
fsubl
dec
fiadds
push
out
sar
jne
lea
popa
sbb
in
push
sub
mov
jp
cmp
stos
ror
decl
out
mov
lcall
mov
jb
mov
sub
xlat
leave
outsb
divl
push
fld
int
aaa
imul
mov
aam
mov
notl
mov
add
je
xchg
mov
push
push
stc
mov
insl
ret
xor
das
xchg
xchg
insb
into
add
outsb
mov
adc
sbb
mov
or
fnstcw
dec
sahf
pop
mov
hlt
loopne
fidivrl
push
adc
test
inc
jne
ja
in
mov
lods
pushf
pop
daa
icebp
test
mov
dec
xchg
cmp
aas
pop
insb
ret
xchg
icebp
shrl
jne
mov
and
jno
xlat
mov
iret
dec
mov
mov
cs
inc
pushf
addb
std
bound
jp
cmp
cmp
jmp
pop
sti
pop
adc
int
pop
push
mov
notl
out
xchg
outsb
fistps
nop
sub
test
pop
repz
add
dec
adc
adc
or
lea
std
add
sarl
push
or
dec
pop
sub
das
cmp
push
out
jo
fsts
lea
mov
and
inc
xor
in
pop
xchg
frstor
cli
lcall
xor
sub
dec
xchg
mov
insl
xchg
push
push
and
xlat
mov
lods
sahf
ficompl
fdivs
mov
jno
std
std
dec
out
mov
clc
xor
mov
inc
pusha
lock
sub
pushf
stc
sbb
insb
sbb
inc
inc
shlb
pop
out
dec
lock
mov
sub
jae
xchg
push
dec
xchg
pop
xchg
or
pusha
fldt
push
movsb
adc
or
push
xor
pop
in
adc
xchg
lods
jb
cmp
lcall
push
xchg
xor
xchg
pop
jl
jmp
cmp
jle
ret
fmuls
cmpsb
xchg
lret
lahf
xorb
mov
cmpsb
mov
mov
test
lea
sbbl
adc
pop
in
cmp
adc
daa
jmp
cmpsl
hlt
lahf
push
inc
lcall
imul
fldl
roll
sub
inc
xor
shll
daa
je
data16
sub
pop
test
shl
push
pop
mov
lods
mov
fidivl
js
and
pusha
mov
iret
ret
outsl
push
push
cli
pop
mov
clc
out
sbb
or
gs
pop
out
xchg
insl
lret
hlt
lds
in
push
scas
pushf
jg
xchg
fcmovnu
push
mov
mov
scas
mul
sub
out
xor
or
mov
es
push
and
les
jle
sub
mov
inc
xor
pop
cmpsb
jns
lods
es
cld
imul
jno
jns
xchg
addr16
jno
gs
popa
mov
fsubrl
movsl
mov
xor
sub
fstps
jg
iret
mov
test
popa
fldenv
mov
push
test
bound
inc
jle
xchg
sti
cmpsb
mov
cmc
xor
cld
testl
xor
pop
js
pop
pop
push
sub
inc
pop
xchg
or
pop
cmp
imul
fldenv
cmp
push
xor
les
lcall
add
int3
jecxz
arpl
mov
in
and
adc
cmpsb
test
pop
jnp
loop
rcll
or
and
push
inc
ja
in
loopne
fbld
in
mov
xchg
cltd
inc
pop
xor
pushf
xlat
mov
add
mov
aas
xchg
push
fistl
insb
mov
add
scas
test
out
mov
push
xor
mov
test
test
stc
in
arpl
call
sub
inc
or
and
imul
and
pop
shll
jp
jae,pn
in
jne
test
xchg
outsb
jb
xchg
xchg
cmp
and
xchg
and
lods
fidivl
cltd
insl
jne
lret
pop
je
mov
iret
mov
cmp
xor
pop
sub
das
sub
push
in
lret
pusha
pop
enter
stos
test
inc
sbb
inc
xor
inc
ja
les
mov
jmp
shlb
in
push
xchg
fcmovnbe
inc
cmp
jne
addl
mov
sbb
dec
aas
fwait
in
cmpl
imul
lods
cmp
loop
jp
rcl
mov
adcl
out
inc
mov
hlt
xchg
cmp
sbb
add
aas
cltd
pusha
leave
clc
sar
xor
inc
xchg
add
mov
xor
pop
mov
pop
cmpsb
cwtl
inc
sbb
push
mov
aad
xchg
and
mov
imul
dec
jae
xor
jp
imul
inc
inc
subl
dec
xchg
mov
sub
mov
cs
lods
aam
xchg
bound
data16
push
je
sbb
fldl
fidivl
out
scas
jbe
inc
inc
int
mov
loope
clc
sub
sti
ret
enter
cs
jge
lret
ret
aad
imul
jnp
add
sub
mov
stc
cwtl
mov
lret
call
mov
mov
stos
jnp
scas
fstps
mov
mov
fisttpll
xchg
xor
add
and
mov
arpl
aam
pop
pop
sub
and
les
sbb
jmp
cmc
cmp
mov
jns
xlat
cmc
adc
lea
in
sub
clc
push
mov
testb
daa
lds
loopne
xchg
push
lock
pushf
adcb
sbb
pop
int
mov
cmp
jg
sub
into
sbb
lret
ror
add
inc
add
cmp
or
ja
push
sahf
fmuls
sub
dec
flds
rolb
mov
loope
in
clc
test
shlb
jo
stos
and
lcall
loopne
in
lahf
mov
in
xchg
movsb
rcrl
cmp
test
jae
dec
lret
adc
inc
and
repnz
lods
int
inc
push
jae
lds
dec
push
push
xchg
xor
cmp
je
mov
mov
lods
pop
inc
mov
mov
sti
jecxz
imul
and
cmp
dec
out
pushf
push
stos
pop
or
jno
add
cmpsl
movsl
dec
dec
aaa
pop
push
add
adc
daa
xchg
aaa
push
test
and
xor
into
lahf
or
adc
scas
stos
int
faddl
xchg
test
push
nop
aad
and
or
jp
xchg
fadd
iret
pop
add
repnz
pop
das
xchg
fdivl
xchg
mov
in
insl
pop
adc
xor
inc
push
mov
inc
rcll
repz
mov
popa
jge
dec
mov
clc
jb
daa
addb
jae
pusha
ja
aam
push
outsb
sbb
inc
sti
out
inc
je
or
adc
sti
lods
or
and
mov
shll
movl
loopne
push
xor
xorb
push
imul
pop
xchg
ljmp
mov
pop
loope,pt
negb
push
xorl
out
push
or
fdivr
lods
mov
xchg
push
push
aas
mov
ret
std
push
out
adc
iret
sbb
scas
sbb
or
adc
mov
mov
es
das
xlat
inc
xchg
cmp
imul
lahf
push
and
movsb
stc
pop
out
cmp
je
out
mov
mov
arpl
pop
jo
ja
fdivr
inc
cmp
mov
fistpl
pop
xchg
xchg
mov
scas
stos
fstpt
push
pop
push
inc
inc
push
add
pop
lcall
pop
punpckldq
test
lock
aam
rcll
push
into
sub
std
jle
pop
cmpsb
sbb
scas
and
xchg
push
xor
loope
outsb
out
pop
pop
jmp
xor
xorb
xor
dec
insl
fisttpl
fstps
xor
or
inc
int3
out
out
cwtl
mov
dec
test
cli
js
cmp
loope
push
adc
dec
or
lret
in
and
push
test
sub
jbe
sbb
pop
pop
insl
lahf
or
ficomps
sbb
and
mov
push
sbb
mov
call
mov
lds
loop
dec
jae
sbb
cmp
outsb
cmp
leave
mov
jp
icebp
repz
cmovae
push
cmp
or
pop
or
xchg
popf
dec
fld
push
xchg
jecxz
out
dec
pop
and
sub
mov
fadds
push
pop
outsl
push
divb
jns
xorb
xor
pop
xor
test
adc
lcall
jns
insb
shrl
js
jns
sti
mov
movsb
dec
adc
andb
adc
stos
sti
pop
clc
pusha
std
sbb
lret
ret
dec
mov
xchg
es
mov
pop
sahf
int
repnz
mov
xchg
scas
ja
out
insb
or
inc
mov
test
or
lock
fisubl
arpl
push
stc
lods
or
dec
jg
aam
cmp
ffreep
or
mov
xor
mov
pop
fstl
loopne
pop
mov
clc
mov
es
pushl
xchg
fxam
mov
add
xchg
arpl
cmp
out
mov
or
xchg
int3
mov
xor
cmp
in
dec
mov
bound
add
pop
sub
mov
mov
mov
outsl
ficoml
or
cmp
xor
xchg
sub
je
xchg
mov
cmp
dec
insb
xrelease
mov
ds
xchg
mov
cld
mov
and
movsl
dec
fiaddl
dec
in
push
cwtl
lahf
aad
sub
cwtl
or
inc
or
lahf
sub
jnp
aad
push
push
ja
push
cltd
lods
leave
pop
mov
scas
jnp
daa
sbb
xchg
ret
stos
movsb
mov
add
sbbl
mov
pop
stos
adc
lret
daa
scas
outsb
ljmp
outsl
addr16
push
icebp
out
ljmp
data16
aaa
xlat
mov
cmp
adc
mov
mov
inc
pop
call
add
cmp
jb
add
leave
cmc
mov
arpl
out
mov
aas
call
insl
dec
dec
in
sbb
xchg
push
sub
sub
pop
pop
mov
fisubrl
mov
pop
xor
add
jb
imul
cwtl
mov
jmp
ret
test
lahf
or
xor
add
or
mov
ds
pop
mov
hlt
lahf
push
and
mov
xchg
dec
inc
mov
test
push
je
jp
adc
jno
pusha
cmp
sub
ss
mov
iret
nop
scas
gs
pop
movsl
movsl
sub
and
sub
cmpsb
je
nop
mov
jne
cmp
add
negl
jnp
and
leave
adc
outsb
push
mov
add
push
xchg
sub
fisubrl
pop
repz
ds
inc
mov
lock
push
repz
sti
insl
pop
cmp
je
clc
std
test
add
xor
lcall
push
test
xchg
mov
call
lods
dec
scas
and
lds
or
es
and
leave
dec
lret
fmuls
movsb
mov
imul
cmc
xor
rorl
clc
jge
jge
insb
mov
fstpl
stc
push
jmp
push
sti
lcall
mov
in
adc
xlat
jns
int3
into
mov
pop
clc
into
and
mov
and
dec
cs
test
pop
lar
xor
out
or
jg
push
loopne
xchg
repnz
mov
push
xlat
ds
out
js
rolb
xchg
mov
aad
jecxz
addl
adc
adc
mov
mov
adc
cmp
dec
adcb
jae
push
pop
pop
addr16
int
jg
mov
sarl
adc
pop
cltd
jo
jg
pushf
incl
sbb
subb
inc
lret
mov
mov
jo
jmp
fcmovb
test
das
inc
xchg
ret
cmpsl
ret
adc
and
or
hlt
pop
icebp
push
push
add
push
adc
dec
mov
shlb
xchg
lods
dec
push
jl
in
adc
rol
dec
push
mov
sbb
lea
je
xchg
adc
cmp
test
into
inc
leave
fisttps
dec
xor
adc
in
and
xlat
clc
jl
xor
adc
mov
in
adc
stos
adc
repz
in
jge
and
loope
adc
addr16
sbb
movb
and
fidivs
xor
sbb
inc
mov
test
mov
cmpsl
xchg
test
xor
mov
dec
rcrb
sbb
pop
add
dec
mov
add
std
or
or
outsl
movb
inc
mov
adc
mov
dec
xchg
iret
mov
js
adc
add
stos
insb
mov
ret
pop
test
out
js
js
data16
xor
jle
mov
out
fsubp
gs
pop
mov
pop
dec
out
xorb
icebp
cld
jle
cmp
sbb
stc
push
aas
lret
stos
fldt
add
repnz
sbb
fs
xchg
add
push
add
jb
pop
add
outsl
out
jnp
push
lds
and
jg
cltd
add
add
xchg
ljmp
test
or
cmp
psubd
adc
sti
sub
add
cmc
cmp
popf
sti
xor
getsec
pop
sbb
scas
lods
fldenv
jge
sti
mov
cmc
and
mov
or
inc
cmpl
lods
mov
das
xor
mov
push
sbb
stos
pop
sbb
andl
shrl
mov
jb
loop
hlt
sbb
data16
out
jg
xchg
adc
in
mov
cmp
sbb
mov
subps
hlt
jb
roll
stos
xchg
sub
jg
push
push
or
inc
rol
movsb
sahf
outsb
ja
ret
mov
cltd
dec
test
into
sub
jns
lods
testl
aaa
adc
imulb
xchg
sbb
fs
hlt
or
les
xchg
add
daa
or
add
sahf
aam
xor
push
aam
push
incl
cltd
jg
sahf
and
fidivs
nop
rcrl
imul
paddsw
adc
push
idivl
mov
mov
ljmp
add
xor
rorb
imul
sbb
xchg
push
jecxz
fstpt
gs
scas
pusha
gs
in
xchg
gs
lea
fmull
loope
mov
mov
addb
dec
lret
adc
push
xor
gs
mov
jecxz
and
lock
lret
add
clc
ss
in
xchg
nop
jbe
cli
cli
jbe
shrb
aaa
jg
jp
addl
pop
mov
test
and
xor
cmp
sbb
in
test
mov
dec
sahf
leave
mov
movsl
mov
fucomi
cmpsl
stc
xor
stc
and
orl
cmp
lret
add
lods
adc
xchg
mov
and
adc
lds
loopne
xchg
cmp
arpl
jae
repz
scas
stc
cmc
dec
inc
ljmp
ret
jg
xor
add
aaa
cli
stos
mov
les
cmp
hlt
mov
in
mov
inc
sub
dec
xchg
lods
scas
stc
aad
shlb
pop
lret
inc
cmpsl
jl
push
in
arpl
cld
cli
pushf
mov
sub
pop
aas
sbb
jmp
or
clc
and
push
sub
je
push
lcall
imulb
cmp
pop
lock
jns
mov
jne
cmpsl
push
fiadds
dec
loope
sbb
fcoms
mov
lret
ret
shrl
xor
pop
pop
vmulsd
push
mov
out
arpl
in
enter
nop
in
test
gs
xor
xorl
repnz
inc
aam
add
mov
pop
test
add
add
sti
loopne
fwait
rorb
jmp
jp
out
daa
mov
dec
test
pop
sub
jecxz
mov
stos
jne
jle
shl
dec
inc
ret
xchg
fnstenv
rcr
inc
jb
out
jmp
not
cmpsb
arpl
mov
mov
inc
repz
jg
mov
ret
xchg
xor
xorl
fistpll
nop
loopne
mov
jecxz
cmc
pop
lea
ret
or
gs
push
and
sbb
jne
push
sub
clc
fdivrs
push
fs
in
repz
mov
jp
adc
push
sub
fidivrl
push
lds
sub
push
hlt
push
mov
adc
leave
loope
dec
in
inc
int
cmp
xor
push
or
xor
and
test
out
enter
outsl
jmp
cmp
xchg
ljmp
xor
nop
adc
push
dec
cmpb
mov
xchg
cmp
rol
data16
sbb
sahf
pop
nop
add
sbb
fistpll
adc
sbb
mov
shll
daa
push
pop
insl
jge
movsb
stos
lock
cwtl
pop
xor
inc
dec
ljmp
push
mov
dec
push
jo
shlb
mov
mov
or
and
rorb
cld
inc
decl
or
enter
xor
adc
fldt
jge
lahf
decl
enter
xchg
loopne
lea
leave
xchg
faddl
mov
ljmp
xchg
mov
add
xor
jne
les
pop
int3
mov
sub
lock
aaa
fmull
in
mov
int3
es
aas
xor
mov
push
sbb
in
arpl
push
xchg
adc
int
sub
inc
scas
jg
out
inc
test
jnp
call
sahf
into
fsts
xchg
bound
imul
sub
cld
repnz
in
sbb
cmp
outsb
mov
es
mov
mov
std
push
sbb
xchg
sub
pop
repnz
mov
andb
xchg
sar
xchg
lret
loop
pop
adc
xchg
shrb
sub
inc
fwait
rorb
hlt
cs
cli
dec
aam
aaa
dec
aaa
jne
inc
ss
icebp
bound
push
das
lret
iret
add
pop
xor
test
mov
xchg
mov
cmpsl
iret
pop
add
dec
fbstp
test
add
cmp
inc
jl
das
arpl
out
jno
sbb
push
cmp
sbb
mov
xchg
pop
mov
test
xchg
in
fdivl
jl
aam
stos
cmp
lret
pextrw
popf
push
dec
sbb
add
jo
jge
cwtl
pop
call
rorb
fisubrs
je
mov
out
lods
xchg
dec
add
mov
sub
mov
add
stos
mov
dec
cmpsl
aad
sub
mov
mov
popa
inc
shlb
sub
sbb
hlt
push
lahf
into
push
dec
scas
and
es
jne
mov
int3
cs
adc
xchg
out
adc
movsb
leave
inc
je
adc
inc
dec
loopne,pn
les
cmp
add
and
fs
pop
mov
stc
or
push
sbb
pop
mov
outsl
out
mov
add
test
loop
mov
pop
xchg
in
mul
add
xchg
inc
mov
aaa
lret
loope
sub
icebp
cmp
xor
popf
xor
push
jns
das
xor
inc
add
pop
je
mov
lret
xor
insl
aas
push
in
fnsave
mov
xor
push
adc
outsb
dec
mov
push
or
mov
std
pusha
mov
mov
mov
repnz
xchg
jl
sub
in
jmp
jb
lret
or
in
cmp
je
fdivrs
out
data16
mov
sbb
inc
add
jne
cs
dec
clc
sbbl
mov
push
add
inc
icebp
mov
gs
pop
sahf
scas
xchg
mov
dec
aas
and
and
cmp
or
mov
adc
mov
fbstp
in
inc
popf
test
mov
popf
ret
lret
mov
and
ret
insl
mov
bound
add
arpl
mov
add
pop
cli
jge
sbb
xlat
and
aam
int3
mov
add
pop
popa
xchg
pusha
or
xor
lea
jb
xor
jmp
movsb
pop
pop
orb
out
fsubr
je
sub
mov
ret
shll
pop
jl
lret
test
lock
xor
jecxz
int3
loop
out
roll
ror
jmp
xor
mov
push
push
push
faddl
shll
jecxz
push
in
outsl
adc
gs
xor
fwait
daa
loope
jnp
ja
in
fnsave
pop
enter
in
jae
pop
hlt
pushf
adcl
les
popa
push
rcrl
ljmp
fimuls
std
xor
xchg
outsb
and
xor
std
shlb
or
add
scas
lods
popa
mov
cli
inc
or
mov
push
rcl
push
and
dec
sub
and
jb
out
mov
jmp
mov
mov
adc
mov
jb
insb
sarl
cs
js
iret
mov
loop
xchg
cld
and
shlb
in
xchg
lret
sarb
movsl
cld
push
xchg
out
cs
sbb
push
jbe
mov
sub
cltd
inc
mull
xchg
int3
scas
xchg
mov
mov
cmc
outsl
pop
imul
jmp
sbb
and
sbb
jmp
cmp
sub
pop
dec
mov
lahf
ss
ds
incb
xchg
leave
stos
add
fisubl
mov
push
rorl
imul
fldenv
mov
call
pop
insb
rclb
mov
insl
std
leave
outsl
sbb
sub
hlt
jo
mov
inc
aaa
adc
lock
add
ds
or
hlt
out
dec
js
call
iret
xor
sbb
ja
xor
or
arpl
ds
das
cmp
mov
sbb
loop
and
dec
inc
push
mov
lea
xchg
xchg
aas
sub
shr
jnp
push
xor
js
add
rcll
jae
stos
mov
push
push
cmpsl
pop
add
mov
sub
outsl
in
nop
out
lock
jbe
and
scas
and
push
add
sbb
pop
mov
sub
push
xor
lahf
pop
adc
or
icebp
ljmp
sub
jne
bound
popa
dec
mov
push
bound
push
mov
push
lret
jns
cmp
mov
push
mov
mov
insl
out
stc
xor
xchg
mov
aaa
testb
jle
mov
sbb
cmp
sti
scas
je
clc
negb
das
push
sbb
push
ret
je
or
cltd
shlb
in
push
ds
push
mov
push
adc
iret
mov
jmp
push
shrl
mov
xor
mov
iret
dec
inc
mov
xlat
das
inc
popa
cld
pop
sahf
push
add
out
or
fcoms
lret
ret
test
xchg
cld
movsl
sbb
cli
aad
sahf
data16
mov
pop
xor
pop
ljmp
jmp
push
add
pop
dec
test
js
xor
and
pop
mov
mov
or
stos
jmp
or
test
lds
nop
sahf
arpl
shll
sub
lods
mov
rorb
jl
inc
sub
jp
or
add
je
jle
mov
test
ficoms
fldt
lea
cs
sbb
mov
pop
sarl
cli
pop
repz
dec
inc
mov
int3
inc
movsl
push
xchg
pop
push
dec
shl
mov
movsl
push
ret
ss
pop
add
inc
mov
push
cwtl
stc
loopne
adc
dec
nop
xorl
aam
test
inc
out
jns
pop
iret
cli
and
cmp
aas
or
aam
stos
or
in
enter
jno
lds
xchg
add
out
mov
xchg
jle
mov
pop
push
clc
jnp
je
aaa
sub
push
in
add
or
lea
jno
outsb
cltd
ds
gs
dec
popf
jp
leave
or
mov
lahf
pop
push
stos
mov
pop
push
cs
sti
repnz
sub
mov
lahf
xor
cmc
jg
addr16
das
jno
repz
or
push
sub
or
fs
cmp
jno
rclb
imul
dec
jp
andl
icebp
fldt
push
jae
mov
outsl
js
sbb
addr16
mov
dec
and
arpl
imul
cmpsl
out
xor
add
or
out
lahf
and
inc
add
cmc
xchg
ret
jge
lahf
or
mov
dec
rcll
sti
mov
dec
fisubl
mov
cmpsb
adc
js
push
and
sub
ret
pop
jb
clc
cmp
mov
test
cmc
sub
push
fcomps
popa
lods
ret
or
pop
inc
scas
les
iret
int
movsl
jnp
mov
pop
test
frstor
mov
in
and
add
push
iret
subb
test
xor
and
popl
jle
pop
lcall
shll
cwtl
ss
xor
int3
cli
loop
or
jecxz
inc
std
push
mov
pop
xlat
pop
addr16
cmc
xchg
in
cmp
dec
cvttps2pi
mov
dec
ss
lea
mov
das
xchg
fimull
jbe
aam
cmc
mov
fstpt
outsb
out
add
imul
subl
pop
cmp
in
enter
jmp
es
aas
push
xor
addr16
fists
fimuls
sbbb
mov
jge
and
push
mov
pop
and
xchg
mov
sbb
add
nop
mov
das
xchg
stos
pushf
popaw
xchg
pop
cmp
push
push
sbb
adc
xchg
rolb
arpl
xor
xchg
pop
outsb
add
xchg
push
imul
mov
rclb
and
pop
jnp,pn
nop
aaa
stc
mov
jno
pop
test
pop
movsb
add
xchg
mov
adc
mov
pop
es
jne
mov
lahf
psrad
sar
mov
ja
xor
nop
je
cmpsl
sti
push
notl
inc
push
mov
xchg
mov
add
loope
ss
in
scas
out
pop
cmp
mov
pop
dec
or
inc
or
jb
cmp
cmpl
in
add
push
cmp
xlat
bound
arpl
btc
add
shll
dec
int
dec
ret
notb
xor
andb
pop
rorl
inc
cli
fstps
test
sub
cmc
inc
mov
aad
inc
out
js
xor
and
sbb
mov
xchg
fmulp
pop
popa
xchg
movsb
inc
int
testl
push
int
mov
xchg
jno
enter
mov
sub
movsb
xor
mov
pop
mov
movsb
pop
dec
rcrb
mov
and
stos
mov
int3
into
pop
out
mov
clc
ja
sti
sbb
push
shll
mov
lret
negl
ds
xor
mov
imul
movsl
in
and
lock
jmp
sti
or
mov
sbbb
jnp
cmp
sbb
mov
inc
jge
repnz
adc
mov
xchg
movsl
mov
dec
das
insl
lahf
xchg
add
cmc
call
je
ret
mov
mov
jnp
or
jg
sbb
enter
data16
cli
out
sbb
iret
and
dec
jne
push
int
mov
outsl
icebp
mov
movsb
xor
hlt
or
mov
test
pop
ret
add
mov
aaa
jbe
mov
leave
outsb
lret
cmc
fstpt
dec
mov
in
cmc
cli
and
or
adc
inc
pop
rcr
inc
gs
push
adc
stos
dec
pop
arpl
rcr
daa
jns
incb
mov
movsl
lret
jmp
and
out
mov
movsl
mov
out
jge
lahf
popl
cli
ret
push
pop
lret
int3
xchg
xchg
pop
and
imul
cmp
cltd
mov
xchg
inc
js
sub
or
cmp
or
pop
fisubl
aas
dec
dec
lea
push
rep
xor
mov
mov
jl
pop
cmp
jo
loopne
shrb
mov
push
jbe
clc
clc
cmp
rol
outsb
call
fcomps
sbb
sbb
andb
inc
insb
aaa
pop
mov
push
xchg
cli
pop
xchg
xor
sub
shlb
lods
cmpl
scas
mov
mov
ss
fiaddl
rcrb
xchg
jmp
sbb
adc
pop
and
inc
inc
mov
cmp
das
dec
arpl
xor
jnp
arpl
test
shl
stos
nop
dec
lock
mov
fwait
add
adc
xor
push
aad
and
dec
adc
mov
ds
pop
lret
push
sarb
out
ja
and
or
ret
aam
repz
shlb
icebp
push
mov
mov
ljmp
add
xchg
shlb
and
jno
cld
test
lods
out
dec
cld
jne
int3
and
and
aaa
push
ljmp
fs
and
aad
mov
scas
popa
fnstcw
pusha
out
repnz
pop
mov
enter
jl
fimuls
fadds
mov
jp
push
cld
push
mov
in
lcall
fisttpll
and
cmp
fs
test
adc
inc
arpl
js
aas
fnsetpm(287
fnstenv
pop
jo
ret
sbb
cs
mov
xchg
xchg
adc
jge
dec
sub
mov
movsl
movsb
aaa
imul
xchg
out
sbb
jne
decb
and
jge
fdivs
lea
je
test
jae
push
inc
adc
xchg
push
push
popa
mov
lods
test
mov
dec
stc
push
add
jnp
test
mov
shrl
pusha
push
lea
mov
xorl
shrl
mov
ret
inc
adc
cwtl
or
cltd
dec
jno
ja
shll
add
xchg
jecxz
sbb
cli
mov
inc
scas
sub
push
cmp
andb
inc
fistl
lds
or
insb
push
xor
nop
add
mov
mov
dec
pop
fwait
scas
cli
add
mov
add
call
test
or
jg
mov
and
cmp
fimuls
push
fnstcw
sti
inc
ret
dec
in
pop
loopne
and
and
dec
sti
cmp
lds
in
adc
adc
push
mov
int
mov
arpl
mov
pop
xchg
outsl
mov
pop
mov
push
out
and
subl
lret
add
pop
scas
sub
cmp
dec
cmp
sti
call
stos
xor
aad
cmpl
aad
xor
push
lods
cs
and
pop
xchg
mov
repz
inc
mov
dec
add
rcl
push
hlt
cmpsl
roll
int3
push
mov
jb
xchg
xlat
cmovno
push
or
and
mov
mov
mov
xor
push
popa
inc
outsb
xchg
and
mov
iret
or
push
or
pop
mov
leave
js
call
pop
add
aaa
mov
inc
cmp
push
sub
arpl
js
jg
xchg
xchg
inc
in
and
push
popa
adc
add
int
dec
jae
sahf
and
sbb
mov
cwtl
out
add
adc
pusha
dec
cld
jle
js
shlb
jmp
cmp
inc
mov
sub
nop
sub
cmc
jge
cmp
cs
fistpll
adc
or
jge
hlt
lret
jmp
mov
add
pop
aam
mull
mov
in
hlt
daa
pushf
xor
mov
push
adc
push
pop
push
sarb
mov
adc
add
adc
pusha
and
mov
cmpsl
shlb
lods
pop
pop
push
inc
movsl
push
push
push
xlat
rcll
xchg
mov
stc
mov
mov
dec
inc
inc
pop
push
jo
mov
or
cmp
popf
gs
xchg
clc
mov
cmp
or
adc
xor
push
es
nop
outsl
jb
push
mov
enter
in
rorl
mov
xor
and
fstps
lret
enter
movsb
fists
lea
icebp
popf
push
jnp
jo
popa
incb
and
and
dec
sarb
mov
mov
sbb
add
testl
pop
push
test
sbb
inc
int3
push
jle
mov
pusha
and
fcoms
mov
fcmovne
movsb
cli
jl
enter
mov
cmpsl
or
cs
ret
or
xchg
subb
cmc
test
lret
push
dec
aaa
mov
mov
fs
test
xor
rcrb
movsl
gs
or
cltd
inc
mov
adc
sbb
mov
cld
into
xchg
in
stos
fnstenv
pop
cmp
cmp
pop
bound
shr
add
mov
mov
pusha
clc
jg
xor
outsl
out
mov
lret
dec
or
sbbl
cmpl
jbe
push
push
stos
xor
in
mov
pushl
pop
pop
or
adc
in
test
and
lcall
inc
enter
inc
mov
enter
in
xor
sbb
mov
mov
push
test
cmpsb
test
and
push
mov
fs
dec
sub
clc
in
or
pop
and
pushf
mov
or
stc
cwtl
cmp
repz
out
pop
pmulhuw
out
mov
lea
dec
pop
xchg
add
hlt
adc
cwtl
sub
xor
push
cmp
aas
sahf
mov
push
add
test
push
sbbb
mov
shlb
mov
pop
xchg
adc
xchg
and
ret
or
pop
push
cli
mulb
out
mov
lds
add
outsb
or
cmp
sub
xlat
sbb
lock
add
pop
pop
xlat
js
adc
xlat
xor
xor
jne
jno
test
imul
and
insl
mov
pop
xchg
mov
adc
jge
fcompl
and
pusha
adc
mov
add
int3
test
leave
scas
inc
xor
jmp
xchg
fdivr
loopne
inc
pop
enter
lahf
pop
stos
push
push
loopne
xchg
or
aaa
ss
std
pop
push
ljmp
jmp
push
push
xlat
push
ja
int
fldl2e
popf
push
xchg
in
iret
sar
mov
or
sbb
cmpsl
roll
call
in
sub
mov
mov
out
sub
mov
cmp
xor
push
and
jg
or
cmc
add
sub
push
or
scas
inc
stos
ret
jecxz
push
and
mov
mov
sahf
jecxz
push
fildll
mov
shl
movsb
fstpl
test
dec
dec
out
xchg
pop
fxch
test
mov
es
xor
fwait
push
or
test
pop
jl
popa
test
pop
xchg
je
sbb
push
jmp
jne
and
insb
or
pop
cmp
lods
out
fistps
je
sbb
xchg
inc
shr
xchg
es
rcll
test
dec
dec
lcall
fndisi(8087
or
in
pop
hlt
pop
hlt
andb
movsb
push
mov
or
inc
bswap
insb
and
pop
cs
faddl
mov
sarb
roll
inc
pop
push
jmp
notb
jp
and
jne
subb
sub
adc
push
repz
frstor
cmc
cmpsb
popa
add
nop
adc
out
inc
movsb
out
jg
mov
sbb
mov
sub
cmp
cmpsl
dec
scas
push
into
lret
dec
sbb
orl
inc
mov
dec
movsb
push
mov
mov
nop
mov
arpl
sbb
mov
test
daa
out
sbb
cld
andb
or
jo
xchg
mov
jl
jno
pushf
movsb
mov
adc
pop
mov
sbb
xchg
pop
lods
loope
adc
les
cmp
xchg
push
inc
arpl
insl
and
push
lds
imul
ljmp
inc
sub
xlat
fwait
addr16
testb
push
lret
add
xchg
inc
jmp
lcall
mov
mov
insb
repz
dec
jno
or
in
add
inc
push
stos
add
popa
das
stos
ret
push
sub
adc
jb
cwtl
cmc
push
mov
adc
inc
popa
sbb
dec
and
ljmp
xor
sub
les
push
mov
pop
pop
int3
popa
stos
sub
mov
jno
icebp
sub
incl
cmp
subl
loop
dec
lds
mov
mov
xor
pushf
bound
push
ret
push
jb
push
and
push
cmp
jae
inc
les
in
data16
mov
jbe
push
or
lods
mov
rcl
sub
jecxz
pop
dec
cmp
std
jne
and
add
xor
add
xchg
movsl
mov
xchg
adc
dec
fdivrl
jae
jne
mov
adc
mov
sarb
mov
xchg
jge
xchg
sub
inc
movsb
inc
adc
sub
scas
jmp
rcrb
mov
adc
xor
or
xchg
xchg
imul
xor
push
dec
push
out
mov
push
pop
bound
ss
mov
push
jmp
push
aaa
pusha
pop
sub
jbe
out
cmp
loopne
or
adc
push
cmp
int
scas
cltd
add
aas
clc
and
cmp
adc
loope
cmp
sub
pop
inc
mov
int3
into
loop
int3
stos
js
cmp
inc
stc
es
insb
sarl
not
data16
gs
aas
jne
mov
scas
jg
lods
inc
ret
add
jae
test
nop
xor
loope
fwait
mov
popf
jge
orb
mov
inc
sarl
lret
adc
or
mov
or
xor
pushf
jns
mov
mov
xchg
out
mov
push
movb
add
pop
loopne
lea
and
inc
fwait
test
jg
iret
jns
adcb
fcompl
jle
sbb
push
pop
cs
lock
out
jp
xor
arpl
rol
jne
out
xor
outsl
jmp
repnz
pop
lret
pop
lock
stos
adcl
cli
mov
adc
sarb
ss
je
data16
imul
pop
adc
push
add
inc
sbb
mov
mov
dec
inc
in
rcll
mov
mov
jb
sbb
inc
inc
mov
negb
adc
repz
cmpsl
dec
aas
fdivrl
xlat
cmp
jne
cmp
mov
test
ret
dec
jnp
mov
jb
or
fldl
inc
jb
mov
scas
sub
push
movb
and
nop
sub
adc
or
cmpsb
jle
lret
jb
mov
push
stos
incb
out
add
movsl
leave
pavgw
fst
sbb
pop
jbe
pop
xchg
aaa
dec
mov
mov
das
sbb
iret
cmp
scas
movsb
cmp
push
sbb
pop
stos
pop
mov
push
xchg
cmp
outsb
pop
mov
adc
sti
adc
pusha
repnz
sbb
pop
sti
xor
push
cmpsb
cmp
rclb
mov
mov
mov
mov
mov
idivl
sbb
pop
jp
xchg
mov
leave
add
cmp
jmp
push
repnz
test
fisttps
imul
fwait
mov
test
jo
sub
daa
pop
mov
pop
inc
xlat
push
ds
cs
jl
popa
ja
arpl
push
or
dec
pop
inc
cmp
shl
in
xor
add
int3
xchg
rcrb
enter
sub
shrb
pusha
popf
mov
test
fcompl
lcall
push
add
bound
into
repz
hlt
xchg
daa
int3
dec
pop
notb
out
mov
int3
das
rorl
loop
xor
xchg
sbb
and
push
js
xor
pop
dec
jnp
pop
lahf
sbb
push
mov
push
push
shlb
pop
cmp
shlb
and
xchg
lcall
pop
xorps
imul
mov
push
push
lahf
into
sbb
scas
pushf
hlt
dec
rorl
rclb
jmp
iret
sub
mov
xchg
push
lods
pusha
adc
rorb
push
pushf
out
dec
and
addl
pop
insb
fsubrp
in
std
leave
mov
mov
inc
xchg
test
int
sub
ror
jmp
xchg
mov
push
sub
cli
adc
inc
push
lods
sub
add
push
push
aaa
rorl
movsb
ret
icebp
push
and
pop
int
pop
testb
inc
and
sbb
nop
sbb
stos
mov
imul
out
mov
mov
pop
xor
push
mov
dec
cmpsl
and
mov
test
push
cmpsb
test
or
repnz
fldt
mov
jecxz
stc
pop
sub
dec
push
sub
fldl
imul
cmp
xor
sub
loop
push
sbb
cmp
movsb
inc
loopne
lea
and
lret
sbb
sbb
ja
pop
or
inc
int
shl
mov
lcall
imul
push
push
repnz
cs
pop
pop
adc
pop
dec
adc
nop
in
pop
fadd
pop
sub
hlt
push
cmpsl
xchg
subl
movsb
and
pop
xchg
shll
rorl
in
bnd
out
lret
mov
shrl
pop
push
xchg
xlat
out
dec
pushf
das
xchg
add
loopne
mov
insb
sub
jb
sysret
mov
or
lock
ficomps
mov
adc
mov
dec
sub
pop
pop
sbb
pop
fldenv
fsubr
cmp
xchg
imul
xchg
mov
inc
jns
aas
jmp
pop
jp
je
sub
loope
sub
fwait
pop
orl
imul
jb
enter
sub
lock
cmp
mov
and
mov
ret
int3
mov
ficompl
popa
test
dec
fcomps
xor
pop
test
xchg
xchg
stos
dec
add
dec
add
in
stc
test
sbb
cmpsl
xor
mov
and
push
mov
push
lret
jo
fisubrs
add
ljmp
add
or
xor
xlat
add
scas
cmc
sahf
cmc
xchg
inc
push
mov
lcall
adc
add
lret
sahf
pop
into
lods
push
dec
dec
inc
js
add
xchg
pop
pushf
dec
shr
xchg
jb
imul
mov
sbbl
out
xorl
push
mov
pop
add
incl
in
xor
inc
cld
pushf
aas
fistpll
cmp
test
repnz
les
lea
sub
cltd
jl
push
push
push
adc
scas
rcr
mov
lods
sti
std
cmpsl
imul
rcrl
bnd
imul
sub
pushf
fisubl
imul
daa
or
or
xchg
pop
cmp
movsl
pop
adc
fdivr
mov
push
jnp
dec
lcall
xor
mov
xor
jg
dec
xchg
mov
enter
repnz
mov
and
jle
mov
sub
mov
ja
jp
jbe
lret
test
adc
mov
push
rol
ljmp
cmp
inc
pop
mov
insl
dec
lods
pop
rolb
insb
repnz
sub
jecxz
daa
stos
pop
int
loope
cltd
mov
lock
clc
mov
jb
fisubs
cmp
or
cli
pop
scas
adc
add
sbb
or
out
fdivr
ss
ljmp
int3
daa
test
push
push
xor
inc
repz
cwtl
inc
add
jge
inc
loope
mov
popa
aaa
mov
lahf
js
sar
rclb
adc
mov
ss
outsl
push
aam
jne
adc
add
ljmp
sub
push
lods
cmpsl
sub
pop
pop
ds
ja
sub
adc
test
xchg
or
test
jo
mov
jp
scas
cli
adc
push
xor
ret
sub
icebp
mov
fdecstp
je
int3
mov
adc
add
loope
sbb
mov
xor
insl
rolb
xchg
inc
inc
bound
movsl
loope
or
jnp
adcl
pop
dec
jmp
sub
cmp
addr16
xor
rolb
lcall
pop
mov
mov
les
adc
xor
push
add
roll
ret
add
int3
sbb
inc
xchg
mov
insb
jns
je
dec
and
je
test
out
adc
sub
cmp
fimuls
jno
stos
inc
or
and
clc
lret
jb
dec
out
sub
jmp
jl
lret
push
shrb
jbe
xchg
ja
sub
add
add
lds
adc
lahf
jg
leave
mov
sbb
in
es
loope
adc
popf
and
or
xchg
out
les
xor
movsl
or
xor
push
push
xchg
xchg
jmp
movsb
mov
jecxz
in
jl
cmp
fcoms
inc
xor
and
std
insb
iret
loop
push
xor
sti
shr
xor
xchg
out
sbbl
mov
jmp
mov
int
dec
lock
jecxz
in
sti
loopne
mov
cmpsl
dec
inc
pop
aaa
and
sbbb
pop
popa
jae
movsl
mov
mov
xchg
outsl
dec
popf
andb
mov
fldt
outsb
sbb
test
mov
dec
aaa
fs
cmp
lds
or
les
cmpsb
cld
out
push
adcl
push
stos
frstor
mov
incl
mov
push
enter
je
xchg
inc
into
jae
pop
ljmp
adc
orl
push
push
in
andb
gs
jecxz
lret
pop
outsl
gs
stc
pop
cld
mov
jg
cmp
iret
flds
lds
clc
fs
out
mov
popa
sub
push
mov
mov
jns
xchg
push
mov
push
pop
xchg
jecxz
sbb
daa
loope
push
movsl
rcrl
mov
adc
nop
arpl
or
into
jp
mov
mov
mov
das
outsl
xchg
mov
jmp
push
or
fwait
push
cli
cs
jnp
jge
iret
lahf
xlat
leave
lret
or
adc
cmp
fcomp
jbe
out
push
and
fs
mov
inc
cld
jle
int
shr
mov
dec
aas
outsl
scas
ljmp
lock
sub
mov
mov
xor
dec
ret
add
add
jmp
fistpl
add
es
jb
into
xor
cld
insl
insb
ret
rol
xchg
and
leave
cmpsb
repz
and
jo
mov
jns
int3
int
sub
or
fsubrl
mov
xchg
mov
icebp
cmp
mov
mov
out
leave
fstps
jbe
iret
cmp
fisttps
insl
jb
std
insl
jno
xlat
loop
gs
and
dec
push
in
movsb
das
gs
and
xchg
mov
push
mov
fcmovnb
loop
sub
fdivl
std
sub
mov
ds
jae
lds
in
dec
nop
loopne
adc
jae
inc
cmc
insb
adc
jb
push
dec
in
fs
adc
cmpb
cmp
jno
jo
test
aam
add
add
ret
out
mov
or
adc
mov
ss
imul
fisubl
and
int3
pop
addr16
inc
out
lds
enter
cmp
shll
or
movb
rcll
jb
mov
stos
cld
lods
ret
rorl
mov
jae
test
int
cmc
in
dec
sub
outsb
sub
jmp
sub
jmp
xor
jecxz
lret
nop
or
lds
int
dec
fistps
sub
adc
sbb
jl
xchg
xlat
addr16
dec
mov
fsubrs
int
and
out
mov
mov
xchg
cmpsb
mov
int
ret
push
ljmp
sub
iret
popa
idivl
ret
stos
pop
cs
faddp
lret
and
fmul
or
cwtl
scas
fldenv
mov
clc
popa
push
xchg
fcomps
pop
sub
jne
push
adc
push
pop
xor
cmpsb
inc
in
mov
mov
sbbb
stos
shll
in
enter
jmp
les
mov
lcall
data16
sub
inc
add
sub
mov
cmp
and
add
arpl
mov
out
scas
call
test
sbb
adc
icebp
jns
les
dec
sbb
inc
outsl
aam
mov
push
cmp
popa
ja
mov
jbe
cmp
jle
lcall
dec
insl
push
popa
fs
jge
and
jmp
push
sbb
cmp
sbb
inc
in
pop
cmpsb
arpl
adc
adc
popa
pop
inc
ja
or
or
mov
jmp
xchg
pop
jmp
xchg
movsb
push
lods
lcall
mov
inc
push
xor
loop,pt
ret
jb
lahf
sub
fists
xor
jo
jno
std
dec
mov
inc
mov
imul
call
nop
popf
xchg
adc
hlt
add
addr16
mov
cwtl
repnz
popf
mov
inc
out
cmp
mov
xchg
sbb
dec
mov
jecxz
movb
lods
sub
jl
or
int
lds
pop
mov
jns
cmp
lahf
inc
push
mov
mov
inc
std
neg
ja
jb
lcall
mov
dec
fdivl
out
jl
std
pop
rorb
iret
mov
xlat
mov
cmp
jns
cmpsl
mov
push
or
pop
js
outsb
push
sub
xchg
repnz
sub
aam
or
lcall
andb
or
incl
jmp
dec
nop
nop
pushl
mov
insb
or
jae
test
inc
dec
mov
inc
mov
out
xchg
subb
cmpsb
push
out
imul
fsubrs
aam
sti
aam
push
add
movsb
mov
adc
enter
add
mov
mov
out
outsl
scas
add
sbb
mov
outsl
jmp
push
fiaddl
inc
in
add
xchg
jne
pop
sub
or
pop
push
dec
ret
enter
faddl
daa
iret
mov
adc
pop
dec
wrmsr
fcmovnu
mov
repnz
push
add
lock
js
inc
pop
lock
fs
negb
lea
sbbb
das
std
mov
loopne
inc
out
xchg
and
scas
jae
dec
jb
sub
pop
push
pop
mov
mov
jmp
aaa
in
lahf
jae
sub
in
insb
vpmulhuw
int3
xchg
or
cmpsb
testb
jle
mov
dec
cmpsb
dec
ljmp
outsl
movsl
mov
sbb
pop
mov
in
in
jne
stos
or
sub
jl
in
fiaddl
scas
or
sub
cmpsb
rorl
mov
add
out
mov
xchg
mov
xchg
cwtl
dec
cmpb
hlt
cmp
push
jl
cli
ds
dec
add
sti
sbb
pop
sub
mov
fadds
nop
test
inc
aam
add
sarb
add
mov
data16
outsl
or
ret
jmp
test
jmp
cmp
outsl
and
jp
jmp
sub
add
and
sbb
out
dec
mov
sub
or
xchg
imul
push
pop
adc
clc
inc
sahf
inc
data16
cmp
je
add
mov
dec
scas
pop
and
addr16
popa
jno
in
push
xor
loopne
jb
xor
xchg
cmp
mov
mov
push
add
jl
outsb
xchg
fisttps
adc
ja
ljmp
pop
xor
push
mov
mov
push
sbb
adcl
popa
xlat
divl
call
cmp
rorl
scas
jg
pop
icebp
or
sub
push
xor
add
enter
sbb
in
xchg
jbe
jnp
jbe
xor
mov
cmpsl
cmp
outsb
sub
jnp
and
scas
inc
mov
mov
jne
fsubs
pop
movsl
imul
int3
cmp
popa
stc
pop
stc
mov
xchg
fucom
sbb
rcrb
enter
shll
dec
lods
insl
push
xchg
mov
push
xchg
jns
ja
or
stc
imul
jb
push
lea
add
in
mov
cwtl
xor
les
and
clc
mov
stc
pushl
int3
notl
cmpsl
push
bound
add
das
jecxz
rclb
push
lods
xor
pushf
test
roll
pusha
ficomps
lahf
aam
pop
sarb
data16
cmp
pop
aaa
scas
xor
jecxz
pop
fucom
mov
mov
roll
pop
es
ja
mov
ss
stos
push
add
fnstenv
add
clc
sub
jae
in
fs
imul
mov
mov
push
xchg
out
leave
mov
jne
aad
jmp
mov
ljmp
cmp
dec
je
and
sub
out
mov
addr16
or
imulb
ret
imul
sub
pop
cmp
dec
lret
scas
idivl
push
ret
fldt
stos
mov
fs
pop
dec
pop
mov
std
push
pop
loope
mov
lret
jle
cmp
call
aas
inc
sbb
mov
lods
push
xchg
js
lock
jb
js
daa
or
int
outsl
fsubl
xchg
push
or
jno
loopne
pop
in
push
popf
ret
lret
mov
sti
xlat
xchg
cmp
das
repnz
cli
les
daa
ja
sahf
add
mov
lock
cmp
mov
push
clc
jo
imul
inc
inc
je
xor
cltd
int3
jp
lret
or
ljmp
sbb
push
jl
xchg
jg
fldt
and
cwtl
sti
fidivl
sahf
ljmp
and
pop
push
fiadds
xor
fisubrs
cmp
in
jp
in
xchg
xchg
push
mov
dec
xor
jbe
ss
xchg
and
push
xchg
loop
xchg
mov
lock
in
ja
sbb
mov
sbb
mov
bound
mov
sub
mov
stos
mov
push
mov
pop
mov
sbb
fldl
mov
mov
in
inc
sbb
shlb
shr
movb
ret
scas
call
lcall
sti
mov
push
push
outsl
pop
test
aad
pop
jmp
or
test
pop
aam
clc
pusha
sub
or
out
adc
mov
mov
pop
pop
mov
or
inc
mov
je
test
stos
pop
mov
int3
jb
sbb
negb
or
mov
leave
cmp
xchg
push
test
fstpt
mov
out
jge
gs
push
pop
lock
or
mov
or
lea
xchg
cmpsl
sbb
les
rcrb
aad
ss
jbe
xchg
push
aaa
jnp
add
sar
ss
popa
jmp
jnp
mov
rorl
inc
push
push
repz
mov
inc
hlt
insb
cltd
rolb
lahf
lret
mov
popf
jo
into
insb
bound
adc
jecxz
mov
dec
cmp
or
jp
adc
or
enter
jae
and
stc
xor
jp
xor
and
cmp
stos
add
lret
mov
aad
aas
xchg
fcoml
add
or
stos
adc
into
cmp
pop
sub
mov
xor
roll
dec
add
out
pop
cltd
xchg
jnp
xchg
push
pop
test
mov
pop
das
mov
aaa
xor
test
cli
push
ret
lods
mov
xchg
repz
push
dec
scas
testl
mov
mov
push
addl
fisubl
fstl
sahf
ja
lret
push
dec
scas
or
or
shll
in
xchg
frstor
popf
ficompl
aaa
repnz
xlat
fdivrl
mul
xor
pop
dec
into
or
fildl
rcl
dec
adc
inc
out
orb
cmpsb
mov
adc
outsl
pushf
movsb
xor
in
push
cwtl
mov
call
imul
mov
mov
jl
push
cld
or
pop
inc
inc
jl
sub
out
insl
jl
jbe
lahf
stc
add
adc
pop
jns
push
or
lock
mov
mov
scas
stc
xchg
jnp
mov
push
cmp
jbe
jmp
add
pop
sbb
inc
stos
es
mov
das
lret
inc
inc
sub
dec
loope
cmpsb
mov
pusha
inc
mov
add
in
xor
mov
pop
hlt
into
push
pop
sub
mov
mov
jne
paddsw
mov
sahf
call
lock
sbb
add
lret
jl
out
fstp
dec
popa
in
mov
jmp
pop
inc
call
pop
dec
imul
loope
in
outsl
and
je
in
cmp
lcall
jecxz
pop
push
jecxz
sbb
sti
leave
js
jl
clc
or
xchg
adc
xchg
ja
subl
shlb
bound
call
nop
sbbl
ljmp
sub
cmp
ljmp
xor
jo
stc
dec
add
dec
test
push
adc
imul
int
movsb
nop
mov
pop
lcall
aaa
mov
aaa
adc
dec
mov
mov
inc
cmp
add
out
enter
mov
mov
fcomps
mov
lea
sbb
hlt
add
jae
leave
mov
add
pusha
loopne
in
ljmp
xchg
lret
jecxz
xor
xchg
and
cmp
and
adc
lds
fildl
adc
pushl
sbb
and
daa
mov
xor
sbb
add
test
mov
and
cltd
mov
dec
sbb
adc
push
mov
sub
jb
dec
mov
xchg
mov
decb
fstl
ja
insl
fdivrs
xor
outsb
sub
push
rcll
push
pop
and
aaa
data16
lods
mov
sub
mov
outsl
imul
or
inc
and
pop
int3
ret
fsubrl
negb
movsl
lret
push
sbb
idivb
inc
mov
cwtl
cli
aas
das
mov
pusha
ror
or
mov
inc
rcll
sub
cmp
jge
sbb
testl
sub
dec
les
stc
mov
fs
movsb
scas
cmp
mov
stos
lret
ret
popa
cmpsb
mov
popa
lods
lock
mov
int
scas
jge
shll
inc
xor
add
daa
jbe
mov
jno
sti
mov
mov
loopne
stos
scas
mov
pop
pop
add
add
rcr
or
mov
scas
daa
mov
mov
sbb
pop
pop
jmp
stos
lock
in
push
pop
pop
xchg
inc
inc
sbb
arpl
js
leave
cmp
iret
leave
mov
fidivs
movsl
out
cld
and
stc
adc
dec
andb
outsb
pop
mov
jae
cmpsb
scas
das
xlat
xor
fmuls
sti
leave
int3
aaa
test
cmp
xor
sahf
mov
jge
inc
je
mov
mov
cmp
xor
lods
sbb
mov
mov
cli
add
cmp
xchg
cmc
icebp
xor
cmp
add
pop
movsb
mov
sub
pushf
pop
test
cmp
xchg
pushf
fwait
mov
repz
jb
mov
and
mov
insl
stos
jns
xor
xor
movsl
sub
jle
aas
test
mov
insl
mov
mov
xchg
fcoms
and
fcomps
shrl
ret
inc
push
xchg
dec
roll
iret
mulb
gs
dec
and
adc
adc
aad
cmp
xor
inc
das
mov
ljmp
sti
fwait
sub
dec
push
dec
cli
ss
mov
jge
inc
in
inc
push
cmp
push
aas
jb
mov
repz
mov
cwtl
fidivrs
mov
push
or
add
lret
test
pop
enter
pusha
push
jge
clc
stos
loopne
imul
jbe
jb
and
add
negb
fists
imul
sbb
jg
orb
pop
cmp
gs
les
lods
cmpsl
and
push
fcmovnbe
xor
jl
xchg
shr
or
fnstcw
and
std
cmpsb
cltd
cmp
loop
mov
xchg
cmp
mov
cmpsb
test
xchg
jecxz
push
pushf
sub
lds
jne
or
shll
nop
xchg
push
push
jns
jle
fists
jle
testl
cmp
sbb
es
pop
jno
or
xchg
imul
int
add
push
sub
gs
es
sti
cmp
jo
popf
mov
pop
lock
loopne
sbb
dec
cmp
jge
mov
les
loope
sbb
fstl
out
out
fdivs
and
cli
inc
xchg
inc
lds
pop
xchg
je
dec
movsl
data16
jecxz
jp
jp
pop
mov
mov
stc
and
out
mov
jmp
and
dec
repz
fcomp
push
shlb
dec
mov
and
push
shrb
rol
sbb
das
cmp
jg
inc
push
sarb
aas
jae
scas
aas
int3
in
test
mov
sarb
add
jge
inc
inc
cmp
test
inc
xorb
dec
sti
insb
jecxz
lret
leave
add
repz
jns
jb
test
adc
arpl
xchg
cmp
in
push
dec
xchg
fiaddl
in
lahf
mov
xor
sub
int3
leave
fnstenv
xor
push
xor
dec
arpl
mov
lret
jle
lock
int
push
aam
push
scas
leave
cmp
lock
stc
ret
xor
and
ret
cmp
aaa
xchg
jp
or
insl
hlt
mov
pop
xor
xorb
mov
int
dec
imulb
mov
lcall
mov
imul
lock
imul
int
lea
pop
enter
testb
or
cld
pusha
aaa
cmp
test
cmp
fsubrl
lret
pop
rcll
shll
fistl
test
cli
inc
dec
add
insb
test
push
sahf
lds
aas
add
cld
pop
add
lea
movsl
repz
movsl
clc
push
lock
aaa
sub
scas
pop
bound
fisttpll
in
pop
jae
mov
mov
xchg
enter
aas
arpl
push
dec
or
pop
and
insl
mov
movsb
xchg
mov
dec
jb
adc
sub
cld
add
jge
inc
and
cmc
sub
jb
pop
dec
push
xor
cmp
xchg
mov
rorb
cmp
cmp
jmp
insl
pusha
sub
xorl
xchg
fs
lcall
add
sbb
ds
movsb
inc
out
fdivl
mov
cmpsb
movsl
dec
sub
mov
inc
adc
sub
movb
sub
pop
ret
pop
inc
loopne
dec
lret
repz
sbb
or
out
xchg
incb
idivb
cmp
sahf
clc
xor
lret
test
out
cli
mov
push
inc
push
and
fistps
ret
xor
cmp
inc
add
rorl
clc
xor
imulb
popf
sub
lea
xlat
push
cmpsl
jmp
into
jnp
dec
add
mov
cltd
and
ret
sub
inc
aaa
inc
xor
nop
call
dec
aas
mov
test
pop
mov
and
jne
cmpsb
sub
aaa
and
mov
cmc
jge
adc
outsb
loop
mov
mov
mov
adcb
push
sub
js
cmp
pop
push
mov
xlat
xchg
push
outsl
clts
out
jge
mov
nop
mov
insb
mov
cmc
clc
daa
cmp
adc
inc
inc
iret
fimuls
add
cs
enter
lods
fcomp
inc
sbb
fstpt
popf
ja
fiaddl
shrl
dec
mov
loop
or
loop
insb
sub
sbb
cld
dec
xchg
aam
sub
icebp
pop
jg
mov
orb
lea
jnp
jecxz
shll
or
rcll
test
mov
xchg
fmuls
sub
outsl
mov
jbe
xchg
xlat
js
mov
js
inc
sarb
sbb
daa
outsb
and
and
jg
out
adc
dec
je
data16
testl
xor
fs
pusha
popa
push
cmp
mov
sti
sbb
ret
mov
imul
into
sti
movsl
mov
xor
das
movsb
jmp
cmp
jge
pop
adc
popa
stos
lret
test
lock
dec
dec
movsb
ret
xor
sbb
add
adc
fidivrs
xchg
mov
add
push
mov
aas
rorl
daa
pop
push
jbe
into
pop
outsl
ljmp
loope
mov
out
lock
in
fadd
push
mov
sbb
jno
jbe
sahf
inc
sub
test
xchg
pop
and
xor
test
sbb
mov
je
mov
xorl
pushf
cwtl
ljmp
dec
pop
and
adc
lret
jbe
fildl
cmpsb
std
cmp
jmp
mov
gs
and
enter
loope
call
shll
xor
mov
call
cwtl
ficomps
adc
imul
out
punpcklbw
push
ret
adc
pop
fists
insl
push
or
add
loopne
dec
jbe
jo,pt
adc
jle
scas
and
shl
mov
pop
inc
movsb
stc
dec
push
cs
add
ficomps
cmpsb
inc
jb
inc
xor
hlt
loop
jb
sub
mov
movsl
push
mov
push
jns
or
inc
out
idiv
je
adcb
test
mov
dec
add
cmpl
cmp
xor
dec
sbb
ret
xchg
insl
xchg
mov
pop
pop
repz
lret
std
das
movsb
vmwrite
adc
insl
push
test
add
push
fisubrs
inc
mov
out
orb
outsl
add
sbb
add
cmpsb
adcl
cmp
popa
push
pop
sti
adc
sbb
cmp
in
pop
jmp
imul
aaa
in
loop
jp
mov
push
ja
loopne
sbb
xor
sub
mov
scas
bound
xchg
pop
inc
or
adc
out
rolb
jno
pop
and
sub
dec
hlt
rorl
shll
data16
push
jns
mov
mov
mov
pop
or
sub
pop
dec
lea
push
movsl
into
push
sub
psubsw
rcll
test
sbb
test
jo
lret
or
adc
fcmovne
aas
ret
dec
adc
dec
push
hlt
roll
test
lahf
repz
pop
aas
mov
push
mov
mov
in
in
fnstsw
lds
xor
fsubrl
rcll
push
lea
push
adc
in
popa
or
ss
aad
je
loopne
dec
aad
lds
lret
inc
pusha
dec
test
scas
ret
in
cld
mov
pop
add
adc
popf
cld
fwait
lock
push
adc
adc
movsb
mov
xchg
daa
push
sahf
popa
in
int3
lcall
push
xchg
sti
into
mov
aaa
jg
pop
mov
fidivs
cmpsl
and
enter
sub
dec
and
int
leave
lcall
xchg
xor
fstps
divl
shl
mov
cmc
mov
xchg
jnp
xchg
call
push
stos
bswap
add
stc
jo
lret
fdiv
and
add
jns
pop
xchg
mov
ret
ficompl
sub
movsl
jo
icebp
jo
add
lods
jo
jno
test
es
fmul
inc
push
add
xor
testl
mov
mov
adcb
and
sub
sti
pop
inc
sub
lods
xor
insb
mov
mov
decb
popa
mov
mov
fiaddl
fidivrs
mov
mov
dec
out
sarl
and
inc
mov
or
mov
mov
rcr
cmp
aaa
sbbb
retw
mov
lahf
enter
fdivrl
xlat
repz
inc
push
mov
pop
push
rorl
stos
xor
lea
imul
jno
cmpxchg
mov
inc
clc
adc
notb
ffree
popf
push
stc
stos
sub
jne
pushl
pusha
stos
cmc
dec
roll
fdiv
mov
or
sbb
cmp
inc
out
andl
aaa
cmpsl
repz
shll
lahf
mov
fcmove
leave
adc
inc
sbbb
in
pop
mov
inc
rorl
inc
mov
fcmovnb
dec
pop
insl
jle
inc
mov
push
movsl
mov
xor
aaa
popa
ds
insl
aam
or
fdivr
jae
pop
push
pop
cwtl
or
xchg
adc
sub
icebp
pop
ret
jg
pop
xchg
adc
cmpsl
imul
push
ja
cmp
lea
add
mov
pop
push
inc
sbb
jmp
add
sub
adc
sti
call
fists
xchg
dec
add
mov
stos
xchg
mov
test
sbb
and
cs
mov
adc
stc
xchg
cwtl
pop
ret
pop
inc
pop
add
mov
sti
inc
jb
das
xor
lock
inc
lret
jae
dec
xchg
mov
jo
add
int
mov
les
in
jns
lds
gs
test
push
jbe
xor
mov
cs
lods
fmuls
pop
jmp
jo
xchg
push
dec
mov
xor
jbe
lods
mov
sub
aaa
cmp
xchg
sbbb
scas
jg
std
out
cli
jge
mov
push
imul
insl
std
icebp
cmp
jne
pop
inc
movl
or
lcall
mov
cmpsb
out
lods
inc
jg
pop
inc
imul
dec
push
xchg
lock
mov
xchg
pushf
enter
dec
sti
outsb
in
sbb
inc
pop
sub
sub
addl
xor
inc
xor
lahf
mov
pop
jne
lods
frstor
or
fwait
clc
int
mov
std
jne
stc
xlat
push
add
test
idiv
cli
flds
or
insb
jg
adc
inc
pushf
lods
xor
jo
jo
fwait
lcall
or
push
es
xor
mov
mull
out
mov
sub
scas
stos
lds
dec
ret
xchg
sub
orb
add
pop
lret
clc
xchg
xchg
cld
mov
test
or
jmp
mov
cmpsb
jle
mov
adc
add
int
dec
pop
push
loop
loope
push
mov
xlat
xor
loop
cltd
jmp
insl
push
and
enter
fistpl
jg
pop
and
xlat
ss
lcall
ret
sbbb
push
xchg
dec
fmuls
add
mov
je
dec
mov
mov
aam
arpl
ja
push
jns
lret
pop
mov
cld
movsb
jge
pushf
insl
and
leave
mov
cs
fwait
dec
das
shl
movl
xchg
mov
or
fsubp
add
sbb
cmpl
xor
out
mov
mov
pop
or
popf
faddl
enter
test
sub
lret
sub
popf
xchg
pop
movsb
xchg
inc
jne
dec
add
ret
ret
lret
inc
sbb
imul
dec
sub
xchg
ds
xchg
cli
cmp
lret
outsl
pop
aaa
dec
roll
cmp
ret
lds
iret
pop
imul
mov
cmpsl
fld
call
out
je
xchg
insl
push
jb
shll
add
ss
aas
iret
jle
fisttpll
icebp
loope
dec
mov
mov
and
sub
stos
cmpsl
repz
fadds
test
pop
mov
enter
push
cmp
add
or
mov
xchg
arpl
je
dec
leave
mov
fisubl
in
shlb
int
inc
mov
movsl
mov
jge
sbb
mov
xor
cmc
aam
dec
and
popf
test
arpl
xchg
or
cli
aam
fildl
js
daa
xchg
jge
jne
nop
in
jge
je
push
loope
cld
mov
cmpb
push
and
pop
popf
iret
xchg
ds
and
leave
ficomps
aad
fwait
pop
pop
sbb
mov
adc
push
jl
icebp
bound
jmp
dec
cmpsb
add
dec
sub
jno
push
stos
imul
jl
int
icebp
test
test
fdivrl
stos
push
mov
shlb
xchg
cmp
pop
fmul
lds
icebp
insl
xchg
in
pop
adc
add
cmc
push
js
les
popf
cmp
jb
ss
lcall
or
xor
xchg
and
add
jp
gs
pop
imul
incl
mov
cmp
push
pushf
ret
mov
cmpsb
add
pop
sub
jne
rcrl
adc
xchg
je
gs
push
pop
fldl
adc
mov
xchg
jle
mov
or
mov
jns
adcl
xchg
aam
xchg
mov
repnz
repnz
adc
ret
cmp
andl
rcrb
or
fwait
lods
int3
iret
add
xchg
gs
rcll
sbb
ficomps
es
add
pop
push
js
std
mov
jae
in
loop
out
in
or
ret
fists
jle
lods
rolb
out
jp
ret
dec
shlb
mov
xorl
stc
jnp
cmc
mov
test
xor
xor
hlt
sub
xlat
adc
movsb
xor
xchg
sbb
cs
rcrb
popa
aas
and
push
xchg
pop
test
stos
dec
aam
pop
loope
imulb
pop
enter
cmc
leave
clc
in
jp
or
ss
into
fisttpl
das
divl
les
lock
mov
fidivs
leave
mov
cmp
scas
lahf
dec
add
repz
sbb
lock
fyl2x
leave
dec
and
lret
shll
inc
lods
fstpt
rorb
jns
lock
and
fiaddl
les
mov
add
and
inc
adc
fwait
sbb
jle
test
add
adc
ss
sbb
cmp
testl
test
dec
sub
sub
jno
mov
fdivrs
sar
jb
jns
jle
loop
xor
into
daa
jae
pop
frstpm(287
sbb
lock
pop
sub
mov
pop
test
fsubrs
cmp
cmpsb
stos
out
insb
lahf
add
push
pop
add
jb
jnp
inc
test
arpl
sbb
rcr
stos
cs
add
sbb
cmp
adc
cmpsb
dec
cmp
inc
lods
lret
in
es
ljmp
mov
inc
sbbl
inc
push
cltd
fstpt
mov
sub
and
bnd
das
cmc
lds
inc
cmp
insb
aam
aam
mov
js
inc
sbb
nop
mov
iret
popa
nop
mov
movsb
enter
loop
push
pop
sbb
lea
pop
or
lret
cmpb
sub
mov
leave
xlat
hlt
xchg
movsb
adc
stos
loopne
dec
cwtl
add
cmp
call
popa
rorl
xor
fcoms
cwtl
cld
mov
imul
hlt
pop
push
sarb
int
dec
pusha
in
in
inc
push
shrl
mov
xchg
mov
lahf
jns
insl
in
addr16
jne
ljmp
cltd
jnp
pop
mov
mov
dec
adc
mov
jle
jmp
adc
ficoms
sub
xor
mov
pop
pusha
jmp
shlb
add
push
mov
sti
gs
xchg
sbbl
call
push
dec
cmpsb
mov
sub
and
leave
ja
add
repnz
and
pop
clc
cmpsb
xor
mov
fmul
push
sbb
xchg
cmp
std
setl
inc
mov
cld
sbb
pop
sub
arpl
sub
jecxz
mov
sbb
clc
xchg
in
sarl
into
and
adc
push
loop
xchg
jmp
xchg
mov
sub
xor
sub
fidivl
jge
outsl
pusha
imul
xchg
xor
and
cli
cmp
pushf
in
roll
and
sbb
das
stc
xchg
insl
fistpll
push
cmp
pop
push
hlt
cmp
push
fdivrp
pop
dec
addr16
jmp
scas
cmpsl
push
inc
xor
mov
das
psrld
imul
mov
out
in
enter
ljmp
fcmovnb
bound
push
cmc
and
stc
mov
jb
lea
mov
aad
mov
mov
jo
adc
psraw
jmp
jnp
gs
mov
mov
addr16
push
mov
push
in
ja
mov
insb
std
mov
test
ljmp
loopne
push
int3
lods
cmp
or
or
outsb
and
enter
lret
in
push
aas
push
fxch
add
pop
outsb
inc
roll
stos
adc
popa
lret
jle
aam
inc
adc
mov
xor
jbe
jbe
cltd
cmp
dec
int
push
push
fadd
addr16
jbe
in
int3
imul
xchg
fcom
sub
movsb
lods
xchg
sub
rcrl
cld
mov
or
dec
int3
fisubrs
aad
idivl
repnz
scas
stc
jne
rorb
push
pop
pushf
in
fcompl
xchg
jno
dec
int
loopne
sahf
push
xchg
dec
pop
adcb
mov
cld
mov
jbe
sub
jne
and
test
aad
vphadduwd
and
je
cmp
ret
fmul
stc
insl
and
cmp
cmp
iret
roll
mov
je
push
or
add
test
aad
inc
lock
or
xchg
test
pusha
je
shll
call
fiadds
lret
mov
insl
dec
push
popa
leave
xchg
jle
push
jmp
imul
aaa
xorb
clc
push
addr16
or
cmp
jp
mov
pop
mov
lods
out
out
bnd
pop
fdivrl
mov
sub
dec
cmp
xchg
pop
xchg
rcr
inc
and
inc
add
and
loop
and
leave
ret
cmpb
xchg
jbe
mov
mov
gs
addb
push
mov
pop
out
xor
insb
sub
loop
push
sub
loop
sbb
jle
ror
and
arpl
mov
cmpsb
dec
adc
xchg
inc
mov
xlat
pop
adc
sub
xor
std
iret
sbb
js
inc
mov
loopne
sub
fucom
jp
ret
mov
mov
mov
lcall
inc
pop
lret
inc
pop
loopne
das
std
and
xor
jg
ja
mov
hlt
sti
cltd
testb
mov
fadd
sarb
mov
sub
data16
push
xorl
and
xor
inc
mov
inc
xor
scas
jo
mov
movsl
lods
sbb
ret
or
pop
mov
jbe
push
mov
loopne
das
into
mov
insl
and
sbb
pop
loopne
xor
sub
xchg
in
aaa
jl
or
mov
stos
mov
repnz
arpl
leave
fcoml
and
sarl
sub
sub
mov
fwait
pop
cli
sub
mov
pop
push
mov
daa
xchg
mov
adc
push
xor
inc
adc
jne
or
repz
repnz
cmp
mov
dec
and
inc
xadd
add
sbb
daa
mov
fwait
mov
mov
xor
data16
or
in
iret
cs
xor
push
and
dec
es
push
sub
lret
lea
inc
xchg
popf
insb
mov
outsb
and
xchg
sub
lahf
inc
pop
lahf
es
adc
ss
sbb
loopne
into
arpl
outsb
es
pop
jmp
call
or
lods
xchg
out
andb
xor
gs
pop
scas
jp
sub
fistl
stos
repnz
lret
push
ds
shll
jp
dec
sti
imul
leave
shrb
jns
and
mov
xchg
fisubs
mov
arpl
pop
xor
or
mulb
insb
xor
mov
lret
sbb
inc
shl
stos
pop
or
int
imul
xlat
add
in
sbb
aas
xchg
fcmovb
xor
pop
pop
movsb
adc
icebp
imul
sbb
pop
add
cmc
loope
cmp
and
mov
xorb
or
iret
xor
mov
pop
dec
cmp
mov
mov
lods
gs
xor
lods
xor
notb
fimull
subb
dec
aas
dec
sahf
jp
inc
inc
test
pop
rorl
xchg
xor
sub
imul
pop
test
clc
aad
pop
aaa
je
fisttpll
jl
sahf
stos
add
mov
pop
or
mov
and
pusha
inc
xchg
push
jno
pop
xor
add
shl
lods
imul
fdivs
jle
into
in
sub
adcb
rcrl
in
aaa
jecxz
sahf
pop
mov
inc
sbb
insl
sub
add
popa
mov
dec
cmp
and
add
push
push
je
add
adcl
jo
xor
push
js
scas
cmpsl
sbb
inc
out
sbb
jb
mov
or
enter
notb
or
mov
out
ror
jmp
pop
inc
xchg
xor
xor
push
or
or
dec
data16
movsb
outsb
dec
inc
frstor
dec
and
int3
jl
test
outsl
icebp
lods
loope
outsl
out
dec
out
ljmp
scas
and
popa
in
jne
cmc
add
adc
inc
adc
cmp
aas
stc
cmp
icebp
cwtl
repz
push
jnp
iret
jg
xchg
mov
pop
sub
leave
pop
xor
aaa
sar
push
hlt
dec
lret
jg
mov
leave
mov
pop
xchg
mov
movsb
enter
sbb
pop
and
pop
push
nop
movsb
cmp
outsb
jl
pop
mov
inc
mov
daa
push
outsb
sub
in
icebp
push
ficompl
mov
lods
sbb
pop
mov
icebp
jnp
mov
jge
pusha
xchg
fisubrs
mov
popf
xchg
pop
pop
push
and
mov
push
mov
bound
into
jns
add
mov
out
or
inc
jmp
push
ds
int
or
fwait
imul
and
xor
rcll
pusha
adc
ret
or
dec
inc
sbb
pop
imul
pop
daa
inc
xchg
pusha
addr16
lret
jne
cmc
mov
jo
adc
leave
out
in
adc
mov
sahf
cmp
arpl
test
js
icebp
fcompl
jg
dec
pop
stos
mov
test
mov
lahf
ss
dec
adc
xchg
sub
cmp
and
leave
pusha
pop
fs
daa
std
jg
push
test
out
loop
aaa
test
mov
popa
jecxz
and
pop
and
aas
lahf
dec
stc
shrb
xor
stos
sbb
mov
std
daa
fwait
push
add
mov
mov
cmc
inc
lcall
call
mov
sub
outsl
fs
xchg
test
jb,pn
out
mov
xchg
popa
adc
dec
loopne
jmp
mov
je
stc
pop
mov
subl
andl
aam
shll
gs
mov
mov
mov
subb
sbb
inc
xchg
faddl
das
push
sbbb
aad
lret
scas
mov
pop
in
inc
test
cmp
mov
popa
mov
leave
notl
pop
gs
mov
pop
fdiv
push
xor
fistl
xlat
pop
add
popf
push
push
mov
jne
rcrb
std
push
incl
rclb
bound
loopne
lret
xchg
jge
loop
out
xchg
push
call
imul
mov
push
dec
pusha
sahf
push
sbb
xchg
adc
leave
xor
popa
imul
dec
mov
adc
seto
push
lret
dec
jl
dec
jge
jmp
mov
arpl
clc
sub
sahf
push
sub
adc
lock
fisubs
cmp
cmp
add
icebp
loopne
mov
fs
pop
jp
js
adc
jp
dec
insb
fs
out
mov
mov
push
fildl
stos
mov
sub
arpl
push
cmc
ds
pushf
stc
cmp
xchg
stos
out
push
lret
and
mov
popa
push
hlt
stos
and
mov
and
push
test
fwait
scas
sbb
add
ja
jne
dec
imul
add
mov
movsb
push
jo
out
pop
add
sbb
push
test
imul
jno
loopne
ret
mov
xchg
or
dec
into
xor
call
dec
xchg
fisttps
push
sub
orb
fiadds
xor
push
fstpl
loope
push
or
pop
cmp
lods
fadds
sbb
cmc
push
xchg
hlt
sahf
addr16
mov
sbb
int3
std
lea
sbb
in
adc
jp
mov
xlat
pop
fcoml
pop
sbb
repnz
push
adc
addb
jo
aas
and
cltd
cmp
shll
jnp
aas
into
enter
insb
arpl
not
push
hlt
loopne
je
mov
mov
push
cli
mov
test
xlat
push
mov
int3
repnz
loop
push
loop
lret
nop
mov
addb
sbb
std
xor
je
inc
jmp
sub
nop
cmpsl
aad
lea
lea
cmp
xchg
clc
push
sub
cld
xchg
hlt
xor
hlt
icebp
gs
push
add
sbb
sahf
sbbb
sub
push
out
dec
pushf
stos
xchg
sbb
dec
ds
and
dec
cmc
pop
push
std
mov
or
sub
xchg
cmp
jno
aas
imul
lret
sub
imul
xor
pusha
lret
push
push
push
mov
inc
and
dec
lcall
adc
das
adc
mov
repnz
cwtl
or
push
cli
nop
mov
inc
je
inc
or
and
subl
cld
setp
mov
mov
push
lret
addr16
dec
cmp
faddl
jle
inc
cli
aas
subb
faddl
lea
cmp
test
sbb
scas
jnp
xor
sbb
xor
je
fsub
push
sub
cmpsb
movsl
mov
les
decb
sbb
in
dec
mov
pusha
mov
mov
rorl
push
addl
pop
mov
outsl
dec
test
incb
sbb
ds
cld
inc
xchg
loopne
push
mov
repnz
dec
repz
dec
sahf
lock
pop
iret
in
arpl
in
in
movsb
adc
add
cli
ljmp
or
and
cltd
cltd
outsl
jbe
outsl
add
cmpsb
sub
inc
cltd
jmp
dec
jl
mov
pop
stos
inc
jns
add
lcall
adc
sbb
das
insb
int
mov
adc
fst
imul
clc
sub
pop
aaa
xchg
adcl
xchg
into
inc
mov
out
inc
adc
dec
inc
mov
in
lahf
xchg
mov
dec
aam
xchg
mov
cmp
xchg
fs
imul
in
out
mov
ljmp
mov
mov
or
addr16
cld
dec
inc
rcrl
mov
mov
xchg
fucom
mov
js
pop
or
outsb
sub
pushf
lahf
and
xchg
jne
jo
jle
mov
dec
test
mov
out
test
jns
imul
ds
sub
and
cmpsl
mov
mov
and
cmp
leave
lods
jae
cltd
jle
xchg
mov
sub
and
lods
and
push
jmp
cmpsl
and
jmp
adcb
data16
adc
bound
inc
xchg
fwait
jg
aam
pop
mov
lret
pop
jno
fldenv
bound
add
or
inc
aam
xor
in
ds
add
jecxz
enter
or
js
aam
jle
xlat
ja
inc
es
lock
mov
cmp
cs
in
ljmp
inc
arpl
pop
fisubrl
cwtl
fimull
xchg
lret
pop
in
adc
lret
fdiv
and
jo
loope
pop
mov
lret
iret
repz
ljmp
add
push
sub
fs
stos
mov
or
adc
sub
mov
sub
aam
inc
inc
push
mov
xor
mov
pop
jbe
enter
stc
sub
fs
lahf
pop
jae
jmp
or
fisttpll
das
sub
cmpsb
sbb
rorb
test
ss
adc
fnstsw
ss
inc
and
hlt
fsts
add
jns
in
dec
adc
je
cmp
out
sbb
or
insl
lcall
push
add
pushf
push
jnp
xlat
push
mov
ljmp
and
xchg
aas
arpl
repnz
pushf
cld
mov
mov
lahf
sbb
flds
dec
mov
fsub
in
imul
sbb
inc
xchg
mov
lahf
cld
movsb
dec
push
in
outsl
xchg
repnz
dec
jns
hlt
and
pop
pop
inc
sbb
fldl
mov
inc
out
leave
cmpsl
mov
fiadds
popf
int3
jp
dec
adc
adc
ja
enter
inc
hlt
lea
pop
fidivl
outsb
push
jns
inc
or
test
add
jne
xor
outsl
inc
mov
or
mov
mov
and
jbe
ret
clc
nop
sbb
jb
dec
test
out
mov
lods
outsl
mov
lods
xchg
sbb
mov
rorl
aaa
fwait
push
enter
cmpsb
pop
xor
rcr
mov
adc
es
sarl
les
scas
das
pop
cwtl
mov
mov
dec
dec
mov
and
jmp
insb
mov
jmp
mov
fdivrl
mov
cmc
jnp
inc
lahf
js
shrl
sti
incl
push
mov
xor
xor
pop
adc
test
push
decb
add
or
xchg
mov
fsts
mov
jb
push
fsubs
or
mov
lret
mov
pop
hlt
clc
inc
aam
lret
decb
pop
in
out
retw
inc
xchg
inc
lods
aas
push
sub
and
or
xchg
mov
pop
mov
aas
in
jae
inc
ss
stc
imul
outsl
in
insb
mov
in
imul
xchg
sbb
imul
insl
pop
rclb
mov
push
aas
xchg
and
push
cmp
subl
or
test
add
xor
rclb
mov
call
lcall
stos
mov
mov
mov
dec
pushl
test
or
push
in
jecxz
dec
fcom
mov
movsl
mov
inc
fsub
sbb
nop
mov
cmp
test
arpl
mov
cmp
sbb
jl
cmp
fwait
pusha
pop
loopne
or
cmp
cmpsb
xorl
xor
add
add
lea
mov
imul
sbb
insl
lret
xchg
outsl
fstps
ja
cltd
sbb
lods
lcall
lcall
and
pusha
repz
stc
imul
idiv
xor
cltd
push
jmp
jmp
enter
aad
jae
sbb
test
jbe
and
clc
js
lcall
xchg
xchg
jg
add
xlat
xchg
lds
or
xor
mov
and
lcall
sub
xor
ljmp
mov
pop
pushf
stos
fimull
jnp
fstps
les
push
jnp
push
aaa
clc
fimuls
mov
aad
gs
test
dec
and
cmp
pop
pop
xor
sub
int
data16
fdivrs
loop
mov
mov
adc
xchg
push
xchg
push
pop
mov
cs
outsl
das
pop
dec
jl
push
adc
cmp
fdivrl
add
jns
lock
cmp
and
fidivrs
inc
lahf
sbbl
push
in
in
xor
push
mov
dec
xor
push
mov
popa
dec
xor
ljmp
dec
pop
enter
lahf
in
sbb
adc
push
pushf
fsubp
scas
mov
mov
out
decb
push
pop
cmp
nop
jmp
lods
pop
andb
mov
add
in
xor
iret
outsl
or
leave
push
das
je
sar
pop
mov
das
cld
inc
mul
lods
xor
aaa
stos
pop
lds
xchg
je
popf
cli
cltd
sbb
and
fdivrs
push
mov
push
mov
hlt
hlt
mov
xchg
ss
in
inc
xor
add
mov
cs
or
mov
jg
dec
xchg
shrb
pop
fiadds
rolb
adc
sbb
jmp
jns
popa
out
cs
dec
lock
and
jns
sbb
mov
ds
das
ljmp
cwtl
icebp
sti
add
jbe
clc
mov
pop
mov
out
cmp
mov
repnz
sub
sbb
jno
lahf
cltd
lret
mov
or
sarl
pusha
daa
cltd
mov
mov
mov
adc
cmp
lahf
fisubl
int
hlt
cmp
sub
and
scas
stc
orl
std
mov
push
jmp
shrl
cmp
xchg
mov
stc
push
dec
jle
push
mov
ret
leave
scas
call
push
sbb
fsubrs
xchg
push
inc
lret
sarl
lods
rclb
jle
cld
mov
leave
push
xor
xor
pop
aad
cmp
cmp
add
lods
cmpsl
int
pop
ss
push
in
les
mov
das
cmp
and
cmp
fnstenv
mov
mov
sub
aaa
lcall
inc
push
insb
mov
sarl
iret
inc
mov
push
ds
xor
shrb
add
push
lods
sub
mov
sub
jge
repz
ljmp
or
jg
mov
subl
out
lret
jno
dec
lea
data16
cmp
xor
sub
dec
leave
jnp
test
orb
mov
subb
ret
rorl
addr16
ja
iret
push
movsl
mov
mov
jg
sub
lcall
pop
dec
out
loope
and
inc
cs
sub
xor
ret
adc
imul
stos
test
addr16
pushf
push
push
sub
xchg
mov
ja
mov
ficoms
es
and
aas
jl
js
push
cmpsl
dec
sbb
cmc
xor
js
fs
pop
mov
xchg
aam
in
xchg
test
sub
mov
loop
mov
adc
dec
fcoms
shlb
out
jno
stos
or
and
repnz
loop
add
adc
mov
mov
jmp
sarl
mov
popf
in
nop
mov
pop
cmp
insb
pop
out
es
sbb
push
jae
out
mov
mov
test
fdivrs
push
adc
sub
or
outsb
mov
sub
clc
add
mov
test
mov
and
ds
dec
into
cmp
pop
aas
in
lock
jne
pop
mov
add
lods
cs
push
lods
lahf
dec
lods
cld
sbb
sbb
ja
nop
cmp
add
pop
jge
push
scas
popf
cld
jo
imulb
mov
loop
xor
stos
lret
das
jmp
outsb
inc
and
or
mov
int3
pop
rcrl
sbb
push
sub
sbb
les
mov
jmp
pop
xlat
jle
cmpl
pop
mov
adc
test
pop
test
mov
mov
test
dec
movl
fstps
xchg
dec
hlt
mov
inc
lods
and
hlt
push
pusha
dec
decb
xor
dec
bound
adc
je
outsb
xchg
movsb
and
mov
and
dec
test
pop
pop
pop
loopne
and
push
imul
addl
xor
adc
sub
int
sub
xor
adc
mov
out
cmp
iret
ret
xchg
outsb
into
fmull
sub
into
je
clc
insl
sbb
sub
inc
jnp
xchg
jo
dec
adc
sbb
or
dec
cmp
and
and
jns
pushf
hlt
repz
nop
or
xor
push
inc
push
add
stc
add
daa
xchg
cli
test
repnz
jmp
push
test
mov
cli
shrl
addr16
push
push
aam
ljmp
jae
lock
push
cmpsl
mov
fbld
mov
pop
loopne
cmpsl
push
and
sub
and
das
lret
xchg
sub
pop
shll
pop
cwtl
mov
cmp
pop
inc
inc
or
cs
xor
xor
aas
pop
sahf
cmpsl
lods
pop
mov
inc
inc
xor
push
mov
lcall
cmc
loop
pusha
pop
and
push
lds
adc
imul
fdivrl
mov
mov
and
or
ret
or
adc
dec
cmpsl
ret
ds
out
jmp
jo
dec
add
push
cwtl
pop
out
lahf
repnz
loope
call
jp
fwait
andl
sub
adc
cmp
mov
arpl
test
dec
push
sbb
xchg
pusha
mov
stos
loopne
dec
cs
sub
sti
sti
arpl
outsl
jp
insl
fidivl
out
mov
hlt
cmp
xchg
add
in
dec
fists
lcall
mov
fiaddl
cmp
sbb
mov
mov
fstpt
aas
push
jns
and
movl
jo
push
cwtl
mov
lds
inc
fld
scas
mov
stos
and
push
nop
call
loope
addl
cs
repz
pop
pop
sarb
int
sbb
shll
xor
popa
flds
pop
jbe,pt
in
lock
push
or
test
lahf
decl
jmp
mov
push
xor
adc
sbb
mov
jmp
sub
and
fstpl
push
insb
fxch
fnstenv
stos
mov
int3
divb
fsubs
mov
inc
mov
sbb
xchg
shrl
mov
int3
cmpsb
cmp
push
cmp
or
mov
sbb
mov
jmp
sbb
jne
addr16
stc
clc
cmp
mov
xchg
loop
lea
loope
jle
mov
add
into
orl
cld
cltd
jb
and
lods
pop
and
push
jl
pusha
fmuls
push
test
inc
aam
push
pop
mov
daa
movsb
xlat
mov
mov
cmp
mov
fsubrp
ret
aam
jle
push
scas
jbe
lahf
mov
pop
jl
inc
dec
aam
cmovae
shlb
adc
mov
pushf
sahf
stc
lret
icebp
faddl
fucomi
out
mov
inc
mulb
jge
test
mov
aad
xor
icebp
dec
fsubrl
ds
lret
dec
and
lahf
ds
xchg
or
loopne
in
cli
sbb
pop
jnp
popf
sub
and
jge
and
push
out
ret
mov
scas
xor
jge
and
addb
push
test
cmp
out
sbb
mov
call
push
adc
sbb
add
movsb
inc
dec
inc
lock
and
out
js
aad
mov
arpl
sbb
rcr
dec
into
mov
or
adc
or
ret
dec
mov
inc
mov
in
and
nop
add
xor
add
mov
mov
sti
push
int
fadds
aam
add
rorb
mov
shrb
xor
cmp
push
scas
push
out
xor
sbb
sbb
lcall
js
adc
adc
je
sub
adc
pop
mov
icebp
push
repz
mov
out
nop
jmp
jp
add
jmp
cmp
push
or
adc
xor
iret
sub
jne
cmp
cltd
jl
sub
cmp
cmpsl
inc
mov
add
pop
jns
imul
inc
cmpsb
mov
out
in
in
scas
lods
mov
dec
pop
adc
test
mov
pop
dec
dec
or
cs
mov
xor
cltd
push
cwtl
add
sub
call
lods
lock
or
mov
sub
sbb
out
jg
add
pop
aas
lret
lcall
pop
cli
jp
sbb
mov
daa
inc
and
nop
add
mov
fcom
decb
ficompl
divps
mov
mov
and
repnz
int3
jne
outsb
inc
inc
jnp
mov
xchg
std
mov
xchg
addb
xorb
mov
xor
rcrl
je
iret
mov
or
add
fsts
dec
jbe
and
popa
call
inc
scas
jg
mov
push
fisttps
nop
int
mov
repnz
jle
call
imulb
add
mov
dec
insb
dec
das
pop
or
divb
sti
add
imul
movsl
shlb
popa
stos
sbb
lea
cmpsl
inc
push
dec
and
repnz
push
inc
xchg
jnp
jge
ja
dec
jae
inc
dec
test
and
int
pusha
arpl
pop
jbe
mov
xchg
fistl
sub
rcl
and
loopne
sub
in
xchg
ret
jns
das
sub
mov
dec
xor
xchg
jp
ficompl
test
pushf
xchg
add
sarb
aaa
inc
aam
dec
out
aas
xor
mov
fdivrl
daa
int
call
adc
aas
or
add
test
arpl
out
pushf
aaa
ja
outsb
cmp
xor
adc
xchg
adc
insb
pop
adc
dec
mov
mov
or
push
outsb
mov
dec
mov
repnz
in
mov
test
xchg
adc
mov
loope
cmpl
dec
add
jb
pop
xchg
mov
outsb
shl
adc
xchg
sub
mov
adc
outsl
and
lahf
push
imul
adc
ret
inc
js
lods
dec
push
leave
xchg
sbb
test
push
out
push
sub
fwait
stc
test
dec
inc
ja
cmp
xlat
xchg
in
insl
jns
pop
ss
in
lea
lods
sbb
sahf
aas
rep
loope
push
cmc
inc
loope
subb
xor
fistpl
mov
pop
mov
sbb
cmpsb
bound
cmpsl
pop
cmp
and
stc
push
cmp
subl
mov
ljmp
mov
pop
adc
adc
or
add
xor
cmpsl
out
sbb
cmp
sub
rcrl
cmpb
dec
cmp
icebp
insb
mov
shlb
arpl
mov
and
pushf
xor
add
xor
clc
std
dec
xor
movb
cmpsl
loope
scas
mov
fistpll
shlb
dec
dec
repz
loope
jge
xchg
cmp
mov
fldt
fdivrl
sbb
bound
or
pusha
andl
ret
mov
fucomip
daa
inc
pop
es
inc
lods
fmuls
mov
lods
sbb
ret
and
inc
mov
jne
es
xchg
arpl
das
pusha
popf
in
addr16
xchg
in
jo
cmp
shl
mov
mov
mov
sub
hlt
fistps
repnz
pop
add
into
cmc
and
push
repz
pop
add
mov
insl
cmp
gs
cmpsl
nop
idivb
pusha
or
cmpb
loop
cmpsb
jne
insb
push
pop
hlt
mov
lret
in
push
mov
std
loopne
in
mov
or
jle
cmpsb
enter
pop
sbb
pop
or
scas
stos
pushf
xchg
push
mov
pop
nop
scas
movsl
scas
mov
dec
xor
lods
jmp
pop
jp
repz
int3
pop
pop
xor
dec
mov
in
jnp
cli
sub
inc
testb
cwtl
push
jp
icebp
rol
sarl
test
daa
insb
sbbl
mov
add
clc
pop
lret
jnp
aaa
je
mov
cmp
and
test
mov
xor
faddl
push
bound
in
stc
orb
sti
pop
mov
loop
sbb
int3
mov
dec
pop
mov
lret
fdiv
in
popf
dec
pop
jae
sub
push
inc
push
add
pop
icebp
cltd
enter
cmp
mov
xchg
pop
jge
movsl
mov
test
pop
mov
ja
loop
imul
cmp
sub
cltd
cmpb
jg
iret
and
movsb
push
pushf
xor
lds
jbe
push
mov
gs
inc
cmpsl
ja
popf
sbb
sar
adc
sbb
mov
xor
mov
outsb
push
in
ret
push
int3
cmpsb
hlt
add
in
xchg
mov
insl
push
pop
sbb
lahf
push
sbb
lods
and
aad
flds
adc
shl
lret
push
or
mov
iret
push
popa
dec
inc
outsl
xchg
mov
cmc
lcall
jo
fistpll
pop
mull
rcrl
adc
dec
aam
jmp
movsl
loopne
sub
pop
jo
mov
jo
aad
and
xor
pop
xor
jg
cmp
xor
je
hlt
mov
cmp
mov
or
hlt
aas
sbb
mov
data16
jl
loopne
sub
pop
imul
xor
movsb
shll
pop
sti
clc
dec
dec
and
pmaddwd
or
add
xchg
not
dec
lock
daa
push
dec
mov
out
lds
xlat
mov
and
test
xor
inc
mov
push
cmp
mov
xchg
inc
inc
repz
push
adc
lahf
popa
jne
subl
call
roll
pop
insl
mov
pop
std
pusha
mov
test
addl
icebp
jl
cmc
jp
sahf
in
roll
adc
loopne
cmpsl
mov
mov
mov
xchg
jns
repz
mov
aam
or
inc
mov
lock
and
shrl
cmc
mulb
inc
fs
mov
pop
aad
jmp
loop
push
mov
inc
outsb
and
mov
sub
sub
loopne
enter
pop
adc
testb
xchg
rcrl
inc
jne
test
out
mov
inc
loope
sub
jl
mov
call
leave
pushf
jo
mov
sbb
mov
clc
in
inc
imul
dec
push
add
inc
aas
or
adc
fwait
mov
lds
sbb
cli
ss
jnp
repnz
aas
push
dec
movsl
lahf
push
mov
ss
popf
sbb
and
nop
shlb
cld
jae
add
cmp
stos
mov
pushf
gs
jae
jmp
shll
pop
mov
mov
pop
xor
adc
iret
jg
int
mov
jecxz
cwtl
jecxz
sbb
pop
out
dec
test
sarl
push
adc
dec
test
inc
mov
sbb
sbb
sbb
jge
jp
xchg
dec
pop
pop
aaa
mov
sub
adc
dec
sub
call
xor
nop
inc
fsubrs
or
sarb
push
lcall
cmpsl
cmp
or
fs
inc
dec
adc
adc
mov
loop
imull
ja
pop
mov
data16
or
in
mov
out
dec
and
fistpll
daa
pop
loop
inc
cld
test
daa
dec
sbb
sarl
andl
sbbl
push
jno
mov
movb
std
pop
lods
movsl
dec
or
sub
repz
mov
dec
mov
and
in
test
fcmovb
fists
add
pusha
mov
sti
outsb
loope
sbb
cmp
movsb
xchg
jp
mov
dec
testl
jae
lds
push
addr16
mov
lea
sub
add
pop
mov
pop
cmc
in
test
dec
inc
mov
cwtl
xor
cltd
xor
sub
cld
sar
add
dec
push
jbe
xchg
and
inc
push
xor
out
ljmp
inc
and
push
hlt
xchg
sbb
daa
rcrb
fstps
cltd
loope
cld
clc
lock
pusha
pop
std
pop
pop
dec
jno
mov
mov
std
imul
in
push
inc
push
data16
cmp
cmp
cwtl
xchg
and
add
sbb
xor
pop
push
lcall
mov
fiaddl
jg
lret
roll
in
into
stos
pop
add
fsts
add
cli
dec
nop
setp
sub
adc
xchg
inc
xor
fwait
clc
fs
leave
loope
insb
xchg
sti
cmp
lea
mov
scas
iret
xlat
arpl
inc
iret
stos
xor
ret
leave
rcll
pushl
in
cmp
fs
jg
xor
add
sar
lea
xor
bound
xchg
lock
imul
pop
pop
mov
xchg
in
andl
mov
fisttpl
mov
lods
and
repz
into
fisubl
inc
pop
push
jns
lea
xor
divb
jae
inc
pop
lock
hlt
mov
outsb
das
push
adc
mov
xchg
xor
cld
push
mov
popa
sbb
pop
stos
test
mov
call
enter
shr
lcall
mov
xchg
jg
movsb
push
cmovns
shrb
in
sub
push
ss
imul
dec
mov
push
sub
scas
fs
pop
ljmp
out
pop
int
je
cmp
stos
push
icebp
adc
mov
sub
cwtl
adc
jns
sarl
cmc
imul
jnp
in
add
cmp
in
xor
push
loopne
in
cltd
test
inc
mov
mov
out
lea
rolb
shr
mov
fsubr
sbb
and
mov
rolb
add
jo
mov
jne
lret
sub
lods
sbb
aas
movsl
imul
arpl
lcall
xchg
dec
add
lea
or
mov
mov
and
or
movsb
push
orl
fidivs
lahf
pop
pop
jmp
out
adc
addb
stc
cli
in
loop
stos
jb
inc
int3
mov
push
jecxz
roll
or
inc
push
or
test
sub
pusha
mov
cli
je
pop
mov
daa
inc
xchg
add
cmp
outsb
aam
pushw
sub
leave
lret
out
movsl
cmpsb
cmp
dec
pop
jno
sbb
nop
jbe
xchg
jmp
add
lret
stos
adc
lret
cmp
aad
adc
add
add
cwtl
and
stc
dec
sbb
or
mov
divl
add
lahf
pop
cmp
aas
jecxz
adc
jg
loop
push
push
outsl
jnp
ds
mul
and
xchg
js
es
test
push
test
cltd
adcl
cmp
mov
jle
inc
inc
xchg
jp
dec
stos
dec
dec
push
bound
jnp
push
mov
cmp
mov
sbb
enter
insl
repz
lods
xor
pop
jle
mov
mov
and
decb
push
xor
fs
mov
ficoml
pop
sahf
imul
xchg
test
xchg
icebp
jle
dec
rol
cs
add
dec
ljmp
call
int3
dec
ficoms
sub
push
repz
rcr
xchg
xchg
iret
out
push
roll
inc
repnz
loop
and
mov
stos
mov
nop
add
mov
mull
bound
and
dec
pop
pop
loop
xor
or
hlt
fsubs
outsb
ljmp
jp
loopne
push
jecxz
in
mov
outsl
sbb
subb
jb
fsubrp
pop
push
sahf
mov
xchg
xchg
test
xchg
or
xchg
repnz
push
pop
mov
jg
out
iret
cmp
or
push
or
nop
stos
jbe
xor
orl
nop
into
clc
scas
cmp
push
jmp
insb
cmp
jo
cmpsb
push
scas
mov
adc
and
adc
in
sbb
jo
std
jb
clc
je
pop
cmp
inc
movsb
mov
jle
sbb
mov
mov
inc
and
nop
pop
inc
test
fcmovu
push
xchg
fs
or
into
xchg
add
sarl
fdivs
xor
shll
push
hlt
jno
and
addb
adc
push
pop
ds
dec
mov
popa
sahf
scas
push
lahf
cmp
int3
pop
movsb
jl
pop
sarl
stos
fldt
sti
mov
and
or
sub
mov
dec
popl
sbb
stos
in
imul
push
cltd
pusha
xchg
xor
lods
mov
mov
je
xchg
push
add
pop
adc
or
cmpb
mov
xchg
jp
inc
aam
cmp
xor
sti
cltd
ret
les
repnz
dec
imulb
incb
add
dec
mov
mov
inc
and
jne
and
loop
jns
xlat
sarl
or
adc
or
xlat
ljmp
xor
test
pop
fsub
lock
cmp
xchg
sub
jne
pop
xlat
hlt
subl
dec
test
iret
dec
fstpl
inc
loopne
dec
shlb
jnp
into
sbb
repnz
out
fldcw
mov
cmpsb
sti
insb
ljmp
pop
adc
test
scas
xchg
stos
pminub
dec
push
aaa
imull
pop
sub
js
push
aaa
pop
out
push
xchg
pop
xchg
xchg
push
jo
and
fisttps
push
movsb
inc
fnstcw
lret
jp
xchg
pop
pop
leave
mov
sbb
cwtl
mov
push
jecxz
popf
rcrb
sub
jg
ljmp
xor
loopne
inc
or
lret
outsl
mov
dec
jbe
cmc
pop
pushf
jge
sub
jp
in
mov
or
fbstp
ljmp
sbb
insb
orl
add
jle
or
test
adc
cmp
or
imul
test
push
nop
insl
dec
imul
mov
mov
shlb
sub
inc
rcrb
cmp
loope
pop
outsb
rcll
in
fldenv
push
outsl
xchg
ret
nop
jbe
lods
mov
fcomps
jmp
js
dec
je
jle
ljmp
cmp
push
ljmp
add
inc
scas
outsl
mov
mov
xor
test
arpl
das
pop
pop
psubusb
pop
pop
mov
imul
inc
lcall
jns
xchg
mov
sbb
iret
lcall
outsl
mov
push
fucomi
ficoml
fdiv
test
ss
and
adc
mov
aam
vpmacssdql
xadd
jg
sbb
dec
lods
loopne
lods
xchg
and
and
rolb
mov
cmp
xchg
mov
push
stos
cmp
mov
cwtl
xlat
push
lcall
lcall
out
or
xchg
xchg
es
push
sbb
jns
scas
xorl
out
insb
or
dec
jp
pop
test
arpl
lcall
jnp
test
mov
ret
jle
mov
inc
jbe
fdivl
icebp
out
arpl
jg
xor
scas
push
mov
mov
inc
sbb
icebp
and
dec
add
shll
mov
sbb
aam
enter
popa
and
mov
cwtl
outsl
imull
cmp
xchg
push
rclb
movsl
jne
push
mov
mov
sti
lds
stos
sbb
popa
loope
testb
pushf
ja
lods
js
int
fabs
in
mov
es
jle
or
jecxz
sub
jmp
ljmp
xor
jo
pop
mov
jb
inc
pop
mov
jge
clc
xor
fwait
xchg
mov
int
outsb
sub
int3
mov
fcomip
add
push
scas
fidivrl
loope
xchg
cmp
mov
inc
cmp
lret
jne
add
cltd
xor
or
out
int3
push
mov
mov
ss
in
movsb
int3
cmp
adc
mov
ret
xor
rcl
cwtl
test
movsb
stc
mov
sbb
or
mov
dec
adc
or
mov
dec
push
int
push
xor
pop
int
shl
xchg
adc
xchg
push
push
sub
xchg
sti
out
mov
cmpsb
mov
aad
idivl
ss
push
gs
mov
mov
or
ja
cwtl
mov
adc
pop
jo
xchg
mov
pusha
push
and
dec
scas
mov
cmpsb
push
pushf
or
add
testl
fwait
in
mov
daa
and
cmp
xchg
sub
fstpt
xor
inc
jae
std
paddq
lea
pop
ret
addb
jl
roll
rorb
jbe
fwait
loopne
xor
ljmp
ds
dec
xchg
dec
hlt
sbb
sbb
rclb
test
lods
mov
icebp
fcmovnu
jge
pusha
stos
dec
testl
loopne
ds
or
sbb
sub
mov
jg
cmp
out
testl
pop
in
rcr
ds
std
pop
pushf
pop
sub
jg
mov
inc
xchg
fiaddl
cmp
cmc
js
adc
out
addr16
or
push
xchg
stc
jg
inc
mulb
dec
mov
xchg
dec
push
adc
push
es
xor
daa
jl
bound
ret
daa
dec
je
sarb
mov
insb
xor
fldt
ficompl
or
dec
mov
dec
jae
popf
mov
or
ljmp
daa
jl
push
ret
push
pop
in
push
pop
jnp
mov
sub
jl
ds
mov
arpl
aam
dec
mov
push
and
and
inc
int3
xchg
gs
cmp
icebp
ljmp
insb
or
pop
mov
xchg
subl
int3
inc
push
push
nop
mov
out
adc
xor
fiaddl
test
outsl
ret
cli
cmpsb
and
jne
das
scas
xchg
rcr
out
fwait
mov
jmp
add
or
out
test
mov
cmp
lods
cmp
dec
xchg
xor
cmp
addr16
push
int
xchg
jge
loopne
xor
sbb
outsb
pop
sub
mov
push
xchg
cmp
add
dec
inc
sahf
je
pop
hlt
sahf
push
mov
decb
add
cli
mov
cmp
jno
shlb
sbb
xorl
xchg
cmp
loop
orb
fstp
loope
jae
jmp
arpl
notb
dec
imul
loop
mov
aas
jmp
mov
mov
jp
push
pushf
xchg
or
sbb
or
push
out
xchg
jb
dec
movsb
repz
pop
out
cmp
sbb
xchg
ret
inc
out
test
mov
ret
sub
fnstenv
cmp
lods
movb
jmp
movsb
faddl
mov
es
xchg
enter
int3
mov
xor
into
pop
popf
aam
fcmovnbe
or
mov
adc
mov
and
jmp
in
lods
leave
jge
pop
cmpsb
cs
mov
push
cmp
mov
lcall
mov
mov
mov
xor
dec
or
mov
or
hlt
adc
sahf
pop
into
pusha
aam
jecxz
xor
int3
and
add
stos
sub
jmp
lret
inc
inc
cmpsb
fwait
insl
pop
in
int
out
or
jbe
hlt
xchg
mov
pop
mov
ja
ljmp
lods
mov
and
dec
cld
daa
sbb
lcall
enter
adc
pop
adc
jg
movsl
vpshlw
cmpl
push
test
mov
test
jb
in
add
imul
sbb
sub
push
push
dec
mov
mov
dec
daa
imul
sbb
addr16
fsubl
movsl
icebp
negl
and
jno
xor
lock
dec
cmp
ss
add
fistps
es
and
cmp
leave
mov
dec
ja
ret
je
std
xchg
mov
daa
pushf
jnp
inc
xchg
imul
int3
int
or
adc
int
into
sbb
mov
insb
inc
das
mov
inc
xchg
dec
jo
stc
add
mov
mov
sbb
mov
sub
pop
shlb
ficomps
jo
rclb
adc
cmpb
rorl
push
sub
jge
mov
jnp
xor
mov
push
pop
sub
sbbl
pop
in
addr16
or
insl
imul
loope
in
add
jae
pop
imul
in
xchg
lret
mov
push
negl
mov
hlt
jmp
sub
xor
mov
fcmovnbe
mov
push
cmp
rcll
xor
xor
adc
inc
xchg
xor
div
data16
sub
sub
mov
adc
xlat
enter
mov
iret
test
outsl
and
repz
or
das
jg
sahf
and
in
xlat
clc
out
sub
das
leave
adc
cmp
and
dec
mov
mov
push
xorl
xlat
mov
add
jnp
rcrl
inc
orb
push
mov
cs
push
fmull
jp
push
jle
movsb
lahf
imul
ljmp
cmpsl
movsl
int3
push
push
inc
push
in
outsl
rcl
imull
repz
in
inc
cli
push
jmp
sti
sbb
das
jecxz
jp
mov
sbb
lock
daa
lods
lret
int3
dec
inc
adc
mov
push
xchg
repnz
in
in
sbb
enter
and
inc
push
lret
movl
mov
inc
gs
aad
in
mov
insl
dec
test
mov
add
loopne
adc
cmp
pop
outsl
dec
jle
int3
icebp
xor
jg
xchg
jecxz
xchg
push
push
xchg
orl
mov
testl
lea
iret
daa
jo
mov
arpl
cld
mov
sub
lcall
gs
call
jmp
pop
dec
aam
rcrb
jge
dec
jo
aas
movsb
mov
jno
lea
dec
jp
add
gs
mov
fimuls
mov
and
sbb
out
pop
gs
cmpsl
gs
add
nop
push
or
test
test
test
add
push
popf
movsl
dec
adc
sub
sbb
adc
imul
mov
push
add
pop
es
neg
sbb
xor
mov
add
or
imull
test
faddl
fdivr
into
mov
pushf
in
scas
into
push
pop
rolb
adc
adc
sub
jp
mov
push
add
sub
lret
shrl
lock
mov
dec
int
mov
lods
jmp
xchg
shrb
inc
sahf
movb
jecxz
xor
testb
faddl
push
call
inc
lret
gs
dec
stc
cwtl
or
test
mov
hlt
and
int3
xor
lcall
sbb
cld
mov
xor
mov
lcall
andl
shr
jge
lea
cmp
ja
fcoms
out
fildl
dec
je
js
pop
cmpsl
mov
arpl
lret
xchg
sarb
cmc
mov
test
fstl
dec
sbb
std
out
fcom
dec
iret
jnp
mov
jl
inc
dec
movsl
xor
mov
aad
leave
mov
xchg
in
sub
clc
out
daa
xor
pop
sbb
mov
ret
push
cltd
arpl
shrl
add
imul
mov
jge
fidivl
sub
fs
push
jl
call
dec
sbb
mov
sbb
enter
jnp
and
inc
xchg
inc
insl
mov
xor
mov
pop
add
add
fs
call
mov
gs
fwait
mov
enter
push
sub
mov
cmpsb
fcoml
repnz
pop
add
icebp
pop
jnp
imul
xchg
in
aas
and
mov
jnp
lret
mov
jae
mov
sbb
mov
inc
lret
sti
cmp
inc
incl
adc
roll
sbb
fcoms
mov
jl
ret
dec
mov
iret
pop
mov
sub
dec
popa
mov
mov
in
fadd
dec
xor
lret
in
out
addb
add
cld
and
loope
pop
sbb
inc
aas
lahf
cmp
adc
mov
lcall
inc
cmpsb
cld
aam
mov
les
nop
sub
test
sbb
or
push
cmc
pop
mov
cmp
aad
jo
imul
mov
xor
fisubs
not
scas
fldl
inc
js
shlb
outsb
add
xor
xchg
in
or
mov
cmp
add
adc
popf
test
pop
pop
and
pmaddwd
mov
sbb
aam
cmp
popf
push
ret
add
clc
orb
in
hlt
outsl
jno
sub
ds
loop
out
xor
jmp
inc
outsl
xchg
out
mov
xchg
notl
out
sti
adc
sbb
pop
add
test
or
adc
xor
dec
and
cs
lcall
dec
shll
cmp
xor
ja
add
in
cmp
mov
fwait
das
mov
ret
mov
mov
lea
and
mov
push
xchg
add
stos
arpl
push
lea
fistps
nop
pop
stc
int3
lods
xor
and
dec
fimull
andb
push
pusha
pop
test
out
fwait
mov
cli
int
mov
cmp
sbb
push
sahf
rolb
loop
ljmp
repz
in
sbb
xor
xchg
into
or
hlt
jnp
add
ret
sbb
shl
imul
adc
fnstcw
xor
jl
sub
pusha
cmpsl
data16
lret
mov
jl
mov
mov
push
push
cmpsb
cs
add
pop
mov
push
insl
lock
dec
nop
test
add
jmp
cmpsb
jno
hlt
adc
int
adc
or
hlt
adc
gs
cld
or
movsl
lahf
hlt
sqrtps
mov
mov
pop
xchg
add
cmpsb
pop
pop
mov
in
xchg
outsb
or
decb
daa
cmp
push
ja
or
mov
adc
pop
cmp
aas
xchg
or
das
dec
stos
ficomps
jno
lods
lcall
test
xor
xchg
add
mov
lcall
test
dec
inc
inc
adc
test
xor
cwtl
mov
jno
push
and
sub
dec
das
jo
fcomps
sub
ja
xchg
hlt
addr16
push
or
mov
gs
in
xchg
repz
and
ja
inc
mov
pushf
sub
cld
dec
je
mov
lss
enter
shrl
addr16
idivb
jns
fcomps
lods
xor
icebp
hlt
lods
mov
dec
mov
sbb
fnsave
movsb
ret
out
xor
inc
dec
pop
sahf
sbb
rorl
sbbb
iret
push
add
inc
adc
mov
add
loope
sbb
cwtl
imul
pop
mov
outsb
shl
mov
insl
pusha
aas
popa
jno
cmp
pop
mov
pop
push
mov
mov
out
lahf
and
addb
jecxz
call
ljmp
fstpt
shlb
js
jmp
jmp
pop
xor
jmp
lcall
xchg
cmp
in
xor
imul
mov
dec
jo
test
in
mov
js
sbb
pop
mov
aad
cmc
iret
inc
idivl
add
mov
or
cmc
das
sbb
mov
and
pop
inc
addr16
sbb
das
lcall
imul
cmp
and
iret
dec
lret
sahf
fidivs
lock
add
xchg
pop
mov
fisubrs
pop
imul
mov
movsl
rcrl
mov
js
movsb
in
dec
sub
movsb
push
sub
lahf
cmp
and
lret
sub
push
or
inc
pusha
cmc
shll
hlt
mov
sub
sahf
outsl
mov
jno
shlb
orb
jl
push
xchg
push
and
xchg
fldcw
bswap
sbb
in
cmp
into
sbb
pop
data16
sbb
ss
mov
pop
inc
and
xor
loope
inc
add
adcl
add
nop
inc
xchg
sub
xor
test
addl
sbb
xor
out
or
outsl
pop
gs
addb
jo
jnp
and
add
push
inc
insl
in
adc
dec
lods
in
mov
outsl
lcall
cli
xor
mov
hlt
nop
inc
push
mov
dec
mov
inc
jl
pop
ret
inc
sbb
cmp
jl
pusha
test
loop
ljmp
xchg
in
mov
ret
mov
adc
jmp
pop
xchg
xchg
adc
xchg
add
lret
xchg
cmp
bound
iret
roll
mov
loope
arpl
inc
hlt
out
sub
dec
mov
div
cmpsl
test
push
leave
mov
ss
cmp
add
push
pop
sti
pop
add
cmp
adc
dec
sbb
push
xchg
int
lret
push
xlat
add
das
jno
push
push
and
or
adc
xchg
or
jne
mov
loopne
fldl
fistpl
nop
cmp
icebp
rol
mov
cmpsl
xchg
jmp
out
aas
out
mov
fdivrl
mov
sub
imul
imul
out
cmp
dec
add
dec
xor
fisttpl
pop
sahf
ja
subl
daa
setnp
mov
mov
loope
lds
movsb
sarb
shlb
sub
lcall
push
or
sub
ja
jno
mov
adc
das
push
into
push
xor
or
cmp
test
imul
add
mov
enter
xchg
pushl
xchg
xor
cmp
xor
sti
pop
std
stc
adc
imul
sub
stos
add
push
sub
mov
xchg
jge
push
and
push
xchg
or
inc
aad
mulb
sti
or
mov
dec
rolb
sub
in
cmpsb
pop
or
xchg
sub
xchg
dec
lret
and
sarl
xor
popf
sbbb
or
repnz
test
inc
and
lods
pop
imul
addb
aam
pusha
xorb
lds
cmp
sub
cwtl
enter
sub
shrl
lods
sub
insb
mov
arpl
pop
adc
cmp
inc
adc
mov
sbb
outsl
popf
insb
mov
aad
out
jae
adc
lock
shl
and
push
aad
mov
adc
in
data16
xchg
int
push
dec
pushf
sbb
test
rcll
fimull
add
dec
scas
mov
jecxz
xchg
sub
lods
xorl
mov
pop
ffreep
sub
add
sbb
mov
push
push
cmpsl
push
jp
loopne
adc
xchg
mov
arpl
call
ficompl
fiaddl
popa
lret
add
imul
dec
xor
lods
mov
or
scas
mov
lret
add
cmp
adc
xchg
xchg
test
push
xchg
mov
out
movsb
push
int3
cmp
es
adc
sti
ret
mov
mov
lock
push
add
mov
mov
fxch
test
push
sub
push
inc
decb
cld
pop
push
xchg
push
out
mov
sub
lret
adc
adc
sahf
push
mov
dec
jne
in
leave
xchg
icebp
or
ret
xchg
push
pop
jecxz
sbb
fldenv
sbb
repnz
sbb
mov
mov
in
dec
fildl
aad
dec
dec
push
mov
inc
scas
xchg
pop
movsl
pop
xor
mov
repnz
add
xor
add
add
xchg
add
ss
dec
push
dec
das
mov
sub
and
gs
and
push
addr16
adc
loope
fs
push
mov
addr16
ret
fldenv
cmp
inc
mov
pop
adc
stc
rorb
jecxz
mov
mov
cmp
sbb
aas
or
mov
lahf
push
adc
cltd
or
cmpsb
neg
sub
inc
pop
lods
cmp
imul
in
dec
test
cmp
cmp
out
imul
sbb
leave
sbb
xchg
mov
pop
fidivl
dec
adc
adc
shlb
aad
sub
out
cwtl
rolb
aas
cli
rorl
add
fwait
daa
and
ret
push
jp
lcall
mov
jo
pop
or
dec
aas
mov
lret
push
jp
hlt
cmp
jp
xor
loopne
fcmovu
cmc
cmpl
jge
sti
push
fimull
and
cld
in
sbb
into
xchg
lret
cld
cwtl
xor
push
in
cmp
xchg
adc
and
aad
xor
jmp
scas
std
mov
push
std
cmp
pop
xorb
orl
push
imul
or
and
sub
jecxz
stos
adc
rcll
scas
mov
jmp
pop
mov
cs
xchg
imul
cmp
repnz
scas
jns
aad
mov
aaa
ja
lret
rcrl
add
sbb
inc
roll
mov
stc
stos
xor
fwait
ds
scas
call
and
pop
adc
hlt
ljmp
and
cmp
rol
and
push
in
sub
addl
or
popf
mov
inc
and
and
push
test
shr
cmpsl
pop
pop
inc
clc
mov
outsl
mov
out
and
xor
sbb
das
sar
fs
xchg
inc
mov
icebp
cltd
iret
xchg
js
mov
xchg
pop
cli
and
pop
mov
cmc
pop
in
sbb
loop
push
push
pop
xchg
mov
aad
pop
fildll
mov
push
arpl
cs
sub
cld
sbb
mov
jp
add
mov
jne
mov
and
bound
ljmp
xor
push
pop
jns
or
imul
call
adc
sub
inc
stos
dec
mov
or
pop
mov
pusha
inc
dec
sbb
aad
jp
loop
into
fsubrp
mov
cmp
mov
lds
iret
cmc
pushf
push
test
mov
fwait
mov
mov
ja
mov
sbb
fs
out
pop
mov
fsubl
inc
dec
add
mov
inc
sbb
inc
sbb
ss
stos
cwtl
cwtl
add
mov
fildl
mov
gs
bound
sahf
sbb
sub
sub
jle
fsubl
xlat
xchg
add
and
mov
and
test
lcall
inc
jne
sbb
sub
fiaddl
imull
test
in
notb
scas
pop
jle
vxorps
pusha
inc
jb
in
push
xchg
fisubl
cmp
add
fmull
inc
push
test
xor
repnz
ja
scas
jg
repz
scas
repnz
pop
into
clc
aad
ror
lods
rol
adc
rolb
adc
lahf
fs
in
jge
das
xor
in
cs
push
js
rorl
pop
into
jno
or
pop
cmpsb
xchg
push
pop
fisubs
movsl
dec
test
mov
mov
ret
popf
and
or
sub
sti
in
mov
cmpsl
sub
imul
dec
pop
int3
and
addr16
hlt
xchg
dec
push
popa
xchg
and
add
push
mov
out
cmp
out
data16
sbb
jmp
test
push
xchg
xlat
pusha
and
mov
and
enter
test
mov
nop
add
xor
sbb
lcall
pop
test
sub
and
movsl
das
dec
int3
or
fistl
jmpw
mov
fwait
popa
pop
jg
lea
cli
lock
leave
add
adc
daa
cmp
adc
popl
or
nop
mov
pushf
and
sbb
dec
lds
sarb
or
jg
loop
adc
mov
and
into
daa
popa
mov
jmp
cltd
fcoml
imul
or
jb
pop
std
jbe
mov
sti
ds
ja
xchg
mov
test
sar
aad
repz
sub
outsl
jne
nop
lods
add
mov
xorl
js
inc
insl
push
rcrb
or
sbb
iret
and
sbb
mov
push
sub
stc
sub
push
shll
adc
xchg
sti
pusha
inc
pop
or
mov
mov
dec
adc
cli
arpl
imul
dec
adc
movsb
shll
jge
inc
sbb
push
push
push
hlt
movsl
jecxz
mov
mov
mov
xchg
inc
in
sub
repnz
dec
rorl
sub
dec
rol
pop
jns
dec
aad
ret
clc
data16
icebp
jmp
cmp
mov
daa
sahf
jae
mov
ret
test
les
mov
cmp
fs
cmp
out
pop
rclb
jl
push
pop
push
or
mov
push
sbb
mov
fbld
lods
cmpsb
lock
jno
aam
scas
push
lret
mov
sbb
and
pop
jnp
xor
pop
mov
sbb
push
outsl
dec
cmpsl
stos
push
sar
jecxz
jbe
jge
and
mov
xchg
xchg
arpl
and
sub
and
jg
xchg
inc
inc
aaa
mov
and
cmpsl
ss
mov
fists
jmp
sbb
pop
ds
mov
and
repz
inc
mov
mov
mov
pop
jnp
sub
push
add
rcrl
scas
sbb
out
inc
sub
rclb
and
and
ret
movsb
adc
jb
icebp
cmp
dec
inc
cmp
pop
or
enter
shlb
inc
sub
popa
inc
aam
jns
popf
mov
xlat
xchg
pushf
adc
pop
ror
pop
fcompl
sub
jl
mov
in
lcall
xchg
cmpl
push
adc
xor
rcrl
mov
jb
add
jmp
enter
imull
add
dec
xor
jge
call
mov
dec
push
in
and
mul
xor
pop
cmp
mov
xchg
mov
jge
add
loopne
out
lcall
and
lods
cmc
mov
xlat
add
repnz
lret
es
arpl
int
xchg
aad
test
fwait
cwtl
leave
adc
sub
pop
xor
popa
xor
js
push
loope
mov
inc
in
mov
inc
aam
mov
mov
cmp
loop
xchg
lcall
xchg
and
mov
enter
es
lea
movsl
nop
cmp
mov
std
push
inc
inc
adc
imul
adc
xchg
cmp
rcrl
fidivrs
imul
sbb
cs
push
xlat
mov
cmp
sub
mov
push
outsb
insb
call
mov
loopne
lods
push
outsl
mov
jns
cltd
lea
in
cmpsl
inc
fisttps
repz
dec
test
hlt
mov
shll
cli
dec
inc
inc
daa
js
inc
mov
jo
and
loope
ss
das
lret
push
jmp
inc
test
sub
add
sbb
inc
loop
or
mov
sbb
cwtl
int
out
sbb
loop
shlb
push
xchg
inc
sti
mov
rclb
jbe
aam
gs
cmp
hlt
js
xchg
ds
sbb
sbb
fdivr
cld
and
xchg
lahf
cmpsb
xchg
mov
dec
mulb
nop
orl
mov
jmp
clc
push
bound
lret
xchg
fstl
insb
xorl
insl
repnz
mov
fwait
mov
add
xor
in
lret
incb
push
pop
mov
xchg
dec
cld
popa
lret
pop
into
jne
test
mov
sub
inc
stos
movsb
scas
pop
inc
jo
test
incl
fsub
sti
int3
push
adc
jecxz
stos
int3
adc
clc
inc
pop
lret
fwait
fs
es
lcall
inc
adc
in
test
mov
out
adc
sahf
cli
imul
insl
fwait
or
add
in
xchg
cld
std
dec
or
push
xchg
push
lock
mov
mov
cmc
dec
andl
add
jmp
lds
mov
adc
push
or
mov
cs
mov
mov
test
nop
movsb
inc
stos
nop
adc
test
lock
scas
adc
and
jns
push
add
jbe
stos
xchg
lds
xor
out
add
push
dec
test
push
scas
cmp
or
or
popf
xchg
dec
aam
stc
sbb
dec
cli
loope
das
ds
mov
xchg
pop
adc
in
fldt
ljmp
dec
and
inc
jecxz
and
cs
add
dec
arpl
lret
lods
or
pop
jns
cmp
daa
jb
adc
mov
test
mov
cmp
outsb
dec
aaa
mov
daa
xor
scas
jle
rol
xor
rcl
cmp
inc
mull
popf
les
stos
jg
std
rorb
pop
sub
loop
std
xor
pop
imul
clc
adc
dec
or
jle
int3
loope
ret
cmc
repnz
mov
pop
fwait
movsl
sub
push
jge
jae
mov
push
pop
outsb
les
push
or
lahf
jg
movsl
cwtl
mov
mov
xor
stc
decl
lahf
aam
xor
iret
repz
jne
scas
pop
or
sarl
xchg
inc
dec
icebp
imulb
jp
int3
dec
stos
sar
and
in
xchg
lods
fnstenv
lds
lret
inc
mov
std
mov
movsl
jne
lret
out
dec
ja
mov
ret
popf
cli
es
fildll
cld
daa
das
enter
dec
push
or
dec
test
xor
and
cmp
daa
je
test
subl
xchg
int3
xchg
jmp
push
push
jbe
lahf
cmp
daa
hlt
jno
scas
dec
xchg
aam
jo
int3
aaa
push
and
cwtl
fdivrl
je
or
clc
dec
sub
arpl
pop
mov
adc
dec
shll
mov
stos
repnz
mov
or
sub
imul
call
test
push
mov
lea
clc
lret
out
ja
std
and
pusha
jmp
fsubrl
push
sub
add
adc
pushf
and
xchg
xchg
cmc
fistpll
mov
xchg
xchg
push
das
push
ljmp
jl
inc
add
ret
pop
adc
cmp
rclb
dec
jle
pop
mov
xor
mov
and
int3
stc
pop
shr
dec
and
add
mov
dec
ret
mov
mov
push
adc
cmpsb
scas
insb
dec
xchg
or
push
in
sub
xor
cwtl
pushf
cmpsb
mov
pop
push
subl
dec
sbb
subb
in
in
shll
add
stc
jb
xlat
inc
cmpl
push
repz
mov
jecxz
or
sub
mov
lock
shrd
add
jbe
shll
popf
sbb
xchg
add
call
push
ds
push
pop
outsl
lcall
stos
jbe
xchg
cmp
repz
fcmovnbe
dec
add
int3
ja
sub
or
pop
pop
decl
fsubl
in
fstpl
push
cmp
or
std
cld
xchg
xor
pop
outsl
insb
dec
fcmovb
add
and
push
jns
repnz
sbb
loope
inc
mov
or
call
mov
mov
mov
in
movsl
mov
mov
or
add
mov
pop
lds
add
enter
pop
jae
cmp
pop
add
imul
icebp
push
dec
push
stc
jecxz
and
inc
pop
sbb
stos
push
pusha
pop
clc
ja
fucom
add
cmp
nop
std
call
int
shlb
or
sbb
scas
pop
sbb
sbb
xor
ret
xchg
adc
mov
jbe
and
xor
xchg
or
or
mov
daa
jo
xchg
imul
ja
xchg
lret
scas
jne
sahf
xchg
inc
push
or
cmc
xchg
sub
push
xor
clc
lcall
mov
hlt
cmpsl
and
dec
jle
loopne
adc
sbb
mov
fldl2t
xchg
add
mov
xor
dec
ja
pop
ljmp
les
xchg
inc
xchg
mov
out
push
lds
test
xchg
xor
sbb
mov
xchg
in
ss
pop
lods
test
sarl
sarl
ljmp
movsb
pop
inc
lea
fstpt
jge
gs
mov
dec
testl
lcall
inc
lcall
mov
std
int3
jb
icebp
sbb
inc
jmp
in
push
and
mov
hlt
mov
scas
ljmp
jl
pop
fisttpll
sbb
add
sub
idivl
test
jno
cmc
pop
mov
jmp
mov
clc
outsl
push
pop
push
pop
dec
or
stos
sarl
push
xor
pop
pop
mov
imul
inc
scas
enter
loopne
push
dec
out
rclb
sub
cmp
test
cmpsb
xchg
frstor
jns
xchg
loope
fadds
pushf
or
fcmovu
ret
pop
xchg
mov
adc
sub
ret
outsb
xchg
dec
xchg
loop
push
push
inc
cmpsl
add
les
xchg
add
and
mov
stc
mov
pop
out
pop
daa
xchg
push
dec
outsl
lock
push
xchg
pop
xor
shlb
rcll
cmpsb
mov
pop
jle
sub
dec
enter
push
jp
cmp
inc
or
js
aam
lret
test
aas
clc
pop
ljmp
sbb
jmp
jg
daa
push
jp
insl
push
push
das
repnz
fdivrl
push
add
adc
mov
xchg
imul
inc
mov
lea
pop
aas
pop
ret
inc
mov
mov
mov
cmp
mov
iret
lods
push
sbbb
and
pop
sar
dec
nop
mov
add
jae
push
aaa
sbb
bound
jge
dec
loope
shlb
xchg
xor
std
shlb
mov
jb
cmpsb
adc
imul
xor
push
clc
inc
mov
xorl
mov
add
scas
jns
hlt
pop
sbb
imul
jmp
mov
jae
push
movsb
jecxz
lret
inc
bound
sbb
sbb
jbe
sub
xor
or
push
mov
adc
cmp
sub
push
and
mov
mov
jmp
in
xchg
rcrl
daa
adc
rorl
mov
xchg
imul
jne
adc
mov
and
adc
je
inc
or
cmp
jne
fs
rcll
leave
lods
mov
xor
adc
add
inc
bound
pop
pusha
lret
rep
ds
cmpsb
shlb
ljmp
mov
xor
shrl
sbb
and
popf
or
push
fildll
test
xor
or
outsb
lods
push
ret
cmpsb
loopne
gs
iret
fidivs
mov
pushf
movsl
test
or
pusha
jo
out
mov
jno
dec
out
andb
out
es
aad
adc
xchg
movsb
or
int3
pusha
and
aam
fldl
and
cmc
jbe
imul
dec
pop
inc
or
popa
loope
add
pusha
xor
xor
adc
sbb
adc
mov
adcl
pushf
mov
push
bound
mov
and
lock
shrl
or
adc
cmc
mov
and
and
aas
test
cmp
addr16
arpl
cs
lock
cmp
aas
add
push
pop
jg
out
dec
sub
sub
fisttpl
sbb
xor
pop
gs
loope
xlat
pop
inc
dec
stos
mov
xor
adcb
jb
push
sub
popa
sbb
ret
out
cmpsb
int
sub
jecxz
pop
pop
out
jb
mov
inc
dec
mov
pop
mov
es
roll
ret
clc
in
subl
in
movsb
and
mov
mov
out
push
fistps
mov
adc
sbb
fistpll
xorl
jp
lds
lds
repz
rorb
dec
testl
and
cs
push
ja
adc
aad
call
xchg
mov
iret
cmp
pop
sbb
stc
std
inc
imulb
push
xchg
mov
gs
and
cli
into
inc
dec
shlb
mov
mov
test
xchg
fidivrl
sub
testl
cmpsb
lods
mov
int
pop
int
sub
pop
in
mov
cmc
jg
inc
add
insl
pop
jb
faddl
or
push
mov
jl
lret
and
ljmp
or
repnz
xchg
xor
adc
mov
and
jno
ror
negl
insb
dec
pop
hlt
fsubrs
lahf
loope
or
ss
jecxz
add
push
or
sub
and
lret
ret
jp
mov
pop
sbb
and
add
add
or
repz
aas
xchg
adc
movl
jne
call
dec
xchg
pop
cmp
into
mov
cmpsl
hlt
dec
adc
sub
add
lods
add
cmc
push
cli
inc
inc
add
jl
cli
into
aam
mov
sub
or
mov
into
test
mov
int
subb
mov
mov
ds
divl
fstp
adc
scas
cmp
push
ljmp
ret
nop
je
ss
push
mov
cmp
lods
jg
scas
add
aam
xor
les
in
scas
int
and
loopne
cmp
movl
or
fdivrs
ret
mov
jne
fcoms
jae
cmp
mov
sub
push
or
sub
mov
mov
stos
jnp
xor
mov
sub
cmpsb
push
and
test
jmp
dec
push
aaa
mov
jmp
xchg
cwtl
mov
xchg
mov
filds
jbe
insb
insl
shll
mov
ss
pop
mov
in
loope
int
shl
or
movsl
pop
cmp
mov
pop
adc
flds
dec
int3
mov
test
test
jecxz
dec
repnz
daa
fisubl
pop
insb
xchg
cltd
ret
inc
push
mov
mov
fists
inc
adc
jbe
mov
sub
and
sti
cmp
sbb
or
or
jl
mov
cmp
mov
jbe
negl
scas
sub
iret
inc
ljmp
mov
je
or
pop
sar
xchg
cmp
lods
in
inc
imul
xchg
sub
mov
repnz
cmpsb
mov
mov
daa
sbb
icebp
dec
cmp
mov
movb
inc
push
aaa
xchg
imul
scas
adc
and
adc
push
mov
popa
adc
cmc
mov
xchg
mov
outsb
push
jb
jp
push
in
cmp
aas
pop
adc
xlat
push
pusha
mov
rcrl
cmp
xchg
iret
sub
and
push
jp
cmp
mul
sahf
fadds
movsb
stos
loope
std
jmp
test
mov
insb
add
je
push
sahf
and
jge
cld
mov
inc
xor
or
fsubs
mov
scas
sub
push
and
mov
push
lods
mov
imul
imul
cmpsb
icebp
out
add
mov
cmp
or
loope
cmp
xchg
repz
add
cltd
ja
sbb
mov
xchg
cmp
inc
in
mov
ficompl
lock
xor
pushf
cmp
decb
adcl
jne
lock
adc
mov
jle
out
lea
das
sbb
pop
adc
cld
sub
mov
fs
adc
add
cltd
aad
aad
pop
imul
and
inc
notl
jecxz
sub
sbb
std
cmpsl
xor
mov
aas
cwtl
or
out
dec
daa
mov
mov
mov
jne
mov
imul
adc
rol
lahf
movsb
adc
into
mov
jbe
dec
add
stc
inc
mov
push
stc
pusha
aas
cld
and
out
std
jo
stos
loope
inc
scas
in
scas
sbb
mov
movsl
xor
xchg
lret
mov
icebp
cwtl
fiadds
mov
pop
xor
mov
dec
xor
outsl
add
cmpsb
push
negl
sub
lret
imul
mov
cmp
nop
sbb
jns
fadds
xor
arpl
xor
in
dec
lock
jno
fcompl
clc
leave
xor
aaa
mov
hlt
sahf
sbb
cmpsb
shrl
ficompl
shlb
out
and
das
push
pop
mov
cmpsb
lea
sbb
cmp
cwtl
repz
xchg
cmp
add
hlt
push
mov
sbbl
ds
inc
in
cs
sahf
arpl
inc
mov
aas
inc
imul
xchg
add
fiaddl
xor
push
stc
sarl
cwtl
and
das
into
call
jnp
hlt
outsb
dec
icebp
gs
aam
test
cwtl
mov
and
jbe
adc
mov
adc
out
stos
sub
in
daa
inc
inc
push
adc
jecxz
sub
push
sub
pop
sti
repnz
xchg
dec
push
adc
mov
loope
xlat
movsl
outsl
inc
push
mov
cmp
adc
mov
shll
or
xor
cs
imul
test
and
test
mov
cli
mov
out
stos
push
and
stos
insl
scas
shlb
mov
test
dec
dec
call
int
sarl
and
cmpsb
loop
jne
scas
push
pushf
jge
test
push
mov
repz
or
rcll
pop
ret
insb
outsb
mov
lods
sbb
adc
inc
out
rorl
pop
mov
ja
inc
clc
xchg
cmp
mov
icebp
pop
jmp
sahf
cld
outsl
das
lock
arpl
loopne
movsl
pop
or
adc
jp
mov
fstpt
incb
aad
mov
mov
int3
inc
and
or
mov
sub
dec
das
add
xchg
xchg
shlb
subb
jmp
jns
imul
jecxz
inc
mov
fs
clc
rorl
jp
push
push
dec
ljmp
xor
ret
ja
push
cli
mov
cmp
and
mov
jmp
xlat
mov
outsb
inc
inc
mov
test
cmpsl
sar
mov
cwtl
into
test
lock
testb
sub
aaa
sub
je
test
push
setbe
cmp
mov
and
or
repz
mov
xor
or
pusha
inc
mov
aas
or
movsb
mov
mov
lahf
and
mov
cli
adc
or
adc
xchg
or
fcomps
inc
test
push
xchg
jns
push
inc
sbb
sub
je
in
test
and
jp
jo
cmp
xchg
mov
sub
je
push
cld
adc
push
push
or
mov
movsb
idivb
leave
push
cmp
ds
inc
adc
stos
lahf
mov
fs
sub
add
testl
jne
xchg
popf
cmp
xor
mov
loopne
je
xor
inc
lock
repz
mov
cmp
iret
push
mov
sub
push
es
sti
xchg
dec
lods
add
push
je
cwtl
inc
jae
and
jmp
cmpl
enter
push
in
test
sub
je
sbb
sahf
pop
aaa
shll
jp
scas
stos
out
add
inc
pushf
movsl
pusha
inc
mov
popf
or
jae
in
mov
fstl
xlat
mov
jecxz
push
lcall
push
and
cmp
mov
rcrl
mov
pushf
add
dec
fildl
adc
test
xchg
aad
xor
jne
daa
mov
mov
outsl
adc
repz
fldl
jb
or
pushf
push
scas
or
negl
mov
nop
xor
fcompl
mov
ljmp
xor
rcrl
stc
xchg
gs
pop
and
mov
aas
hlt
pop
daa
xor
adc
add
outsl
in
into
mov
push
mov
insl
mov
or
and
sbb
mov
and
aam
mov
sarl
push
stos
adc
xor
sbb
leave
orl
jg
js
adc
pop
xor
xor
add
xchg
sub
lahf
imul
imul
inc
ljmp
into
mov
jmp
fcomip
outsb
cmp
pop
movl
imul
sub
es
add
imul
pop
enter
mov
pop
push
sub
into
mov
xchg
sbbb
fisttps
sub
ror
shlb
mov
out
cltd
pop
mov
mov
push
lea
push
outsl
mov
mov
es
xchg
xchg
outsl
pop
and
imul
mov
mov
aas
push
icebp
repz
lret
ja
jl
adc
imul
ljmp
in
sub
sbb
out
push
leave
inc
mov
or
pop
pop
sahf
stos
mov
push
add
es
jmp
push
ljmp
pop
mov
fdivrp
and
test
sub
mov
dec
xchg
jl
outsl
or
fs
push
mov
orb
jae
les
push
xor
xor
xor
lock
mov
rol
pop
clc
leave
fists
cmp
or
mov
mov
pop
sub
and
mov
incb
enter
xchg
adc
mov
pop
aas
lret
inc
fnstenv
push
repz
sub
mov
mov
lret
xchg
push
pop
setp
mov
pop
sbbb
loop
mov
jb
mov
rep
divl
mov
lods
add
sbb
sub
add
in
mov
and
std
addr16
push
imul
dec
sub
push
fistl
and
inc
fisubrl
repz
jge
cs
je
push
xchg
pop
or
shl
lahf
jle
jae
bound
dec
test
pop
ret
mov
iret
outsl
subl
aam
mov
repz
push
pop
xor
jl
lds
push
ret
adc
imul
pop
clc
js
mov
mov
mov
outsl
cmp
jg
inc
or
adc
push
mov
add
dec
xor
mov
lea
daa
mov
inc
pop
mov
xor
dec
lods
mov
out
lock
xchg
jle
jle
jb
jecxz
pusha
sarl
rcrl
fnstcw
call
adc
rolb
je
out
daa
pop
insb
push
sub
adc
shrl
jns
loope
pop
shll
jg
add
and
cmp
ret
push
mov
shrl
cltd
out
or
push
or
fadd
jo
fnstcw
pop
pop
gs
xchg
stc
arpl
xchg
in
mov
adc
rorl
out
incb
cs
mov
jg
push
int
or
xchg
add
arpl
or
cmpsl
call
push
sub
pop
cmp
gs
mov
add
sbb
sti
aas
inc
inc
pop
cmp
sbb
daa
test
mov
pushf
shl
dec
cmp
cmp
divl
or
faddl
aam
mov
pop
jo
jl
lret
in
inc
orl
add
ret
jb
push
scas
or
lret
mov
inc
fisubl
xchg
sbb
pop
cmp
mov
xor
loopne
mov
fistps
pop
pop
dec
inc
push
jg
mov
enter
rorb
mov
mov
mov
insb
jle
and
mov
mov
cltd
ljmp
and
or
fisttps
subb
hlt
fildll
or
jnp
xor
popa
ret
in
int3
fwait
out
xor
push
andb
hlt
stos
adc
cmp
sbb
out
stc
outsb
jg
int3
or
jae
test
push
fucom
cmpsl
sahf
fcomps
addb
jl
mov
ss
int
loop
mov
jne
cli
adc
das
cmp
test
lret
adc
push
std
mov
das
adc
pop
jle
idivb
push
je
pop
push
push
scas
lret
pusha
mov
xchg
mov
aam
outsl
push
adcb
inc
mov
jl
dec
test
popa
mov
sahf
lcall
mov
into
or
mov
push
shll
fnstsw
ja
dec
push
mov
xchg
add
imul
aas
cmp
mov
sahf
dec
stos
jl
push
insb
or
xor
clc
cmpb
xlat
mov
adc
inc
adc
mov
outsl
andl
push
mov
jne
in
adc
sti
out
mov
xchg
add
mov
addb
pop
movsb
faddp
mov
call
repnz
pop
mov
cmc
push
lret
xor
aad
insl
out
mov
jmp
lock
shll
pop
mov
in
outsl
jle
sahf
filds
push
or
mov
and
scas
pop
cmp
push
jp
pop
and
fisttpl
dec
xor
xchg
or
inc
push
inc
aaa
pop
scas
hlt
aaa
lea
fmull
and
scas
or
sbb
mov
pop
loopne
popf
push
inc
cmp
out
pop
jns
mov
push
les
ret
inc
pop
cmc
je
pop
fildl
nop
mov
in
jno
push
pop
and
dec
lods
ret
inc
push
adc
mov
adc
addb
cltd
aas
xlat
mov
cmp
dec
into
and
imul
stc
xchg
lods
insb
repz
imul
jnp
inc
cmp
popa
pop
add
std
fiadds
bound
mov
rorb
cmp
jo
call
rcrl
mov
cld
cmp
outsl
push
xlat
add
push
std
neg
mov
test
lods
push
aaa
dec
xorl
push
daa
mov
cmp
xchg
xchg
jne
int
addl
mov
lea
inc
jle
push
pop
pushl
mov
mov
xchg
jg
out
inc
fadd
xor
test
push
loopne
into
and
inc
insb
pop
or
stc
jo
ljmp
dec
lcall
sbb
popa
cmp
adc
xchg
in
icebp
ss
and
cwtl
xlat
lahf
test
in
xor
hlt
nop
aaa
hlt
loope
ret
jp
leave
jb
loopne
pop
inc
loop
jmp
sbb
in
aad
fimuls
pop
inc
popa
pop
repnz
lock
popf
cmp
fwait
pop
xchg
imul
push
mov
cmp
std
movsb
jnp
jo
insb
aas
test
in
or
push
lea
mov
and
loopne
data16
jne
cli
in
stos
xchg
mov
mov
and
xchg
in
adc
stos
out
xchg
xchg
mov
sbb
imul
insl
std
push
push
mov
jmp
das
sub
xchg
clc
inc
decl
inc
imul
push
sarl
inc
ljmp
cmpsb
jle
fldenv
sbb
call
fidivrl
lcall
jmp
fmuls
ret
jmp
push
aam
fadds
movsb
popa
aaa
outsl
mov
dec
std
ds
inc
daa
xchg
mov
es
jmp
sub
dec
fldenv
ds
into
test
pop
mov
insb
dec
cmpsl
mov
xor
xorl
mov
call
cmp
lods
cmp
scas
ljmp
jg
mov
cli
xchg
lds
dec
mov
or
sbb
aas
jb
out
mov
add
push
nop
inc
sbb
push
mov
sti
mov
xor
imul
add
mov
push
repnz
inc
sbb
into
dec
fsubrs
inc
mov
imul
arpl
jl
popa
pop
or
in
das
xchg
pop
loop
mov
repz
pop
jae
call
lods
scas
hlt
sub
mov
xchg
ja
jmp
dec
xor
out
jne
pop
jg
push
cmp
test
inc
mov
dec
and
or
aad
subps
or
sahf
das
imul
mov
mov
outsl
adc
xor
ja
add
or
push
cltd
sbb
les
sti
iret
inc
and
movb
xor
sahf
xchg
icebp
pop
push
lods
scas
sbb
mov
dec
lcall
cwtl
and
lods
mov
mov
in
negb
sahf
bound
lahf
jp
aaa
mov
shrb
push
test
xchg
cmp
inc
test
enter
lahf
outsl
jp
or
xor
cmp
add
push
adcb
adc
fwait
dec
pop
lahf
sahf
ds
lock
or
into
and
in
outsb
lock
xchg
jecxz
add
out
push
push
push
out
mov
mov
pop
lret
arpl
xor
loopne
loopne
loopne
repz
mov
mov
cli
pop
fdivs
cmp
rclb
outsb
rcrb
ljmp
mov
ds
pop
pop
in
jecxz
push
inc
imul
and
push
pop
jno
in
loop
repz
pusha
pop
push
ss
and
jae
push
js
sbb
divl
sub
jg
sub
arpl
mov
sbb
or
fcmovb
adc
xlat
outsb
popa
iret
and
xchg
dec
jno
hlt
sub
nop
inc
imul
xchg
mov
fmull
negb
lds
sub
aas
es
push
and
xor
pop
mov
dec
mov
adc
insb
dec
dec
stos
jp
mov
pusha
sbb
int
push
xchg
sub
push
cltd
ds
dec
outsb
or
data16
jmp
mov
cmp
adc
mov
pop
fiaddl
ljmp
push
mov
mov
or
adc
jbe
push
nop
outsb
hlt
add
in
imul
out
cmp
xchg
aas
sbb
pop
mov
cmp
lods
mov
cltd
ss
xchg
or
jae
and
jns
test
divb
sub
and
pop
mov
xor
pushl
mov
js
repnz
adc
ficomps
xor
ficomps
js
sbb
aas
adc
sub
xchg
and
pop
ja
ds
ljmp
mov
jo
or
mov
mov
ficomps
outsl
adc
lods
roll
mov
enter
enter
and
call
push
add
lods
mov
cmpl
pop
fimull
orb
lock
and
in
bound
sti
es
divb
andb
cld
push
loop
movsb
dec
adc
mov
stos
mov
mov
adc
insl
test
mov
in
inc
fiadds
pop
xchg
scas
push
subb
xor
shll
jp
fdivrl
mov
mov
pop
cltd
insl
add
cltd
add
fstpl
cmpb
lods
fwait
inc
into
rcr
stos
xchg
into
movsb
pop
jmp
sti
pop
sbb
shl
dec
pop
push
popa
pop
mov
test
mov
push
add
int
xor
jp
mov
sbb
cltd
pop
clc
sbb
out
ret
xchg
leave
out
jnp
sub
mov
or
test
xchg
jne
pop
push
lds
xchg
shlb
repz
xchg
push
cmc
andl
lods
or
cmovp
repnz
aam
push
das
loope
mov
cmp
cmpsl
jbe
test
jge
mov
xchg
add
sbb
add
sub
add
or
mov
inc
lahf
in
pop
in
testb
push
sarb
push
pop
stos
and
or
sbb
mov
and
or
pusha
gs
arpl
lods
shlb
cli
sub
arpl
shl
push
pop
inc
push
pop
inc
pop
aad
lret
sbb
cmpsb
aam
sub
push
jae
push
icebp
imul
out
pop
mov
pop
mov
adc
mov
cmc
or
xchg
jmp
mov
test
xchg
das
xchg
lock
pop
xor
mov
xor
sub
cmp
in
idivb
push
push
and
and
mov
jo
or
leave
icebp
faddl
imul
adc
mov
sub
cld
push
shrb
out
dec
and
mov
bound
adc
out
loopne
pop
ss
xchg
add
pop
sahf
dec
adc
sti
out
dec
mov
xchg
cmp
cmp
mov
int3
sub
out
addr16
prefetcht1
mov
push
cwtl
dec
push
not
and
or
push
inc
jo
clc
sbb
sbb
push
divl
xor
mov
cmc
stos
and
push
pop
sbb
pop
cmp
adc
pop
push
cmpl
pop
fimull
leave
aad
jo
idivb
pop
add
mov
lcall
add
dec
cmpsl
push
dec
loop
mov
jbe
xor
or
inc
xor
push
adc
lcall
subb
inc
push
mov
test
pop
add
ljmp
movsb
pop
pop
in
xor
repz
xor
or
fdivs
fimuls
or
mov
xor
push
jb
pop
daa
adc
and
pop
movsb
xchg
add
pop
jnp
and
ret
add
lds
cmp
xchg
lock
cmp
call
jmp
adc
xchg
and
cmp
jbe
mov
aaa
mov
jo
and
es
clc
dec
xor
xor
xor
mov
and
inc
jmp
mov
cmp
sbb
ss
neg
ljmp
add
out
cmp
ror
loope
lock
xor
pushf
mov
inc
in
mov
nop
jo
xor
jmp
xor
call
pushf
dec
fwait
or
fmuls
adc
mov
out
clc
sbb
xchg
lock
adc
jbe
int3
shll
cmp
out
mov
icebp
mov
mov
aaa
pop
sarl
cmp
adcb
pop
scas
dec
mov
inc
mov
xor
je
mov
pop
std
roll
cld
pop
push
pop
testl
movsl
push
xor
pusha
add
insb
xlat
in
dec
sti
lods
inc
jbe
sub
push
xchg
mov
push
mov
cmp
dec
pop
scas
idivb
out
inc
adc
movsl
mov
xchg
mov
and
arpl
cmp
or
dec
das
stos
xchg
shrl
mov
xlat
out
mov
rcrb
and
mov
cwtl
inc
jmp
jo
xor
fmull
out
and
sub
subb
pop
xchg
cmp
pop
inc
andb
inc
or
mov
inc
into
sbb
out
inc
xor
lods
sbb
or
test
loopne
aam
in
push
ret
push
cltd
int
adc
call
sbb
aas
fbld
mov
std
mov
dec
sub
jno
in
insb
ret
mov
dec
mov
clc
fwait
aas
fcoml
fcoms
and
ret
test
jns
clc
adc
add
cmc
xchg
and
out
jp
push
rcrb
or
insb
mov
ficomps
xchg
pop
std
and
fwait
mov
and
test
mov
out
lea
cmpsl
mov
cmpsl
add
ret
xchg
adc
ja
mov
xchg
and
loope
push
ds
xor
dec
and
ds
out
or
mov
mov
aam
shlb
dec
or
insl
xor
rorl
mov
ret
scas
push
inc
lcall
and
cmp
jnp
mov
ss
fs
mov
xchg
xchg
nop
push
xchg
mov
into
cwtl
or
xor
sbb
sahf
push
sub
pop
jnp
xchg
xchg
mov
bound
scas
mov
iret
add
cmp
jmp
in
je
mov
or
cmp
stos
mov
cs
xchg
icebp
mov
sbb
push
push
add
jmp
inc
mov
push
lea
enter
insl
push
xor
jl
insb
outsl
lea
lret
ret
inc
hlt
fsubs
nop
cmp
iret
repz
into
xchg
mov
jne
push
leave
loop
mov
jbe
insl
sub
je
dec
pop
jmp
mov
push
popf
movsl
mov
pusha
outsl
icebp
popa
pop
icebp
mov
sub
mov
xchg
pop
in
jne
les
cld
lods
adcb
lock
pop
xchg
bound
fstl
movsl
pop
rcll
inc
arpl
cs
pop
dec
div
adc
sahf
dec
jge
fmuls
jle
jp
mov
push
pop
lcall
mov
or
mov
mov
jns
repnz
mov
mov
push
in
pop
adc
outsb
mov
xor
xchg
or
wbinvd
mov
nop
add
sub
dec
mov
orl
jl
jp
cmovae
push
dec
repnz
or
sub
daa
pop
cmp
in
jge
repnz
jae
aad
andb
dec
xor
adc
cwtl
pop
cmp
in
mov
mov
data16
dec
mov
push
pop
ret
arpl
inc
push
add
pop
shll
adc
add
add
imul
jae
test
push
data16
lcall
cmp
movsl
adc
cmp
xchg
loopne
sub
pop
inc
push
psubb
jo
jbe
dec
mov
imul
fistpl
inc
in
push
loope
push
dec
mov
pop
insb
cwtl
popf
cmp
xchg
fwait
or
push
adcl
mov
ss
dec
adc
movsl
dec
mov
dec
repnz
jnp
push
pop
mov
pop
push
cmpsl
fnstcw
in
xor
sub
andl
lcall
ljmp
jb
popf
cmovle
das
push
mov
inc
fimuls
js
inc
mov
xchg
pushf
inc
aaa
bound
dec
sbb
enter
mov
cs
mov
mov
lret
jo
cmc
xchg
sub
cmpsb
clc
push
scas
push
test
adc
ljmp
icebp
mov
push
push
jg
inc
ljmp
outsb
adc
jae
mov
enter
push
in
or
bound
sti
test
addr16
adc
mov
loop
lods
mov
es
pop
rcll
push
add
popa
xchg
arpl
rorb
xchg
daa
mov
daa
mov
and
pusha
cs
sub
adc
sbb
lock
das
neg
or
shll
fidivs
cmp
lret
adc
insl
mov
lds
pop
cmp
pop
adc
add
mov
aas
adc
mov
inc
dec
xor
jg
mov
jnp
cmpsl
cmp
lahf
icebp
hlt
inc
sub
das
lods
cmp
pop
xor
and
push
lea
mov
push
xor
mov
cmp
xchg
add
mov
jo
lahf
mov
addr16
push
xchg
cwtl
dec
xchg
xchg
leave
jne
adc
inc
scas
dec
jle
insb
mov
iret
outsb
sub
pop
push
in
cmp
xor
jbe
inc
cld
mov
adc
shrb
in
test
xor
and
loopne
shl
xchg
xchg
mov
and
inc
aas
jno
enter
rcrl
dec
jno
lahf
add
add
cmpl
data16
data16
outsb
das
int
or
scas
push
dec
sti
push
push
sub
jo
pop
jecxz
xor
test
push
mov
mov
hlt
jns
cmp
mov
in
xlat
xchg
je
fstps
jnp
out
shrb
or
xchg
jo
xchg
roll
fs
test
lret
clc
mov
test
push
push
mov
adc
mov
dec
jmp
inc
pop
adcb
push
push
mov
jne
dec
sbb
mov
sbb
ljmp
ficoml
jns
fdiv
xchg
push
movlps
arpl
dec
mov
jns
or
jmp
adc
cmp
out
cmp
xchg
inc
adc
insb
inc
sti
nop
jo
outsb
sub
in
ja
shrl
sub
jg
lds
push
fnop
stos
sub
clc
inc
mov
cmp
xlat
mov
xchg
rcrl
ficoml
inc
icebp
pushf
xlat
jg
push
and
test
mov
pop
pusha
lods
lds
out
pop
sbb
add
out
xchg
push
scas
ss
mov
add
add
test
sbb
test
in
insb
aas
cmp
cltd
push
ret
loopne
stos
push
ret
push
das
inc
dec
mov
jmp
sbb
sub
mov
adc
into
inc
add
pushf
sbb
jb
js
sbb
add
in
imul
mov
aad
int
rclb
xchg
cli
fwait
movsb
std
push
adc
shr
popa
mov
inc
fdivr
lret
out
adc
inc
mov
mov
xor
mov
outsb
movsl
hlt
cmpsl
push
fdivrl
rcl
in
xor
or
sbb
in
call
xchg
rorb
lock
sub
sahf
sub
sub
ja
stos
adcl
fbstp
xor
mov
inc
dec
and
arpl
stos
leave
pop
adc
mov
rcr
and
adc
outsb
aaa
xor
sbb
bnd
es
push
or
xor
mov
clc
mov
mov
fcompl
out
test
sub
lret
out
lcall
mov
dec
repz
dec
xchg
es
ss
push
cmp
mov
stc
lods
mov
imul
inc
shl
in
inc
fcompl
push
mov
test
je
sarb
mov
mov
imulb
cwtl
inc
inc
iret
imul
cmp
cwtl
adc
mov
enter
into
lcall
push
sti
cvtps2pd
test
sub
mov
mov
cmp
fucomip
mov
aad
and
sbb
jns
mov
lods
mov
stc
mov
stc
xlat
cs
or
xchg
sub
testl
push
cltd
mov
jbe,pn
sub
jg
dec
nop
iret
pusha
add
add
in
mov
cmc
sbb
ljmp
push
or
popa
xor
inc
inc
sub
jmp
pop
rcrl
sub
mov
scas
add
sti
test
adc
xor
or
sbb
in
jmp
mov
fldln2
pop
push
arpl
adc
fs
popa
pop
xchg
arpl
mov
fstpl
jmp
or
mov
enter
ja
xor
std
adc
test
jmp
mov
scas
arpl
mov
enter
cld
loope
mov
xchg
in
or
jnp
js
in
inc
adc
jecxz
testb
arpl
push
lods
dec
cmpsb
cmp
add
or
and
leave
jmp
insb
rcll
or
insl
inc
inc
rclb
dec
pop
es
mov
jnp
mov
push
repz
data16
aaa
in
or
int
inc
mov
fdivrl
push
or
cld
rolb
call
push
aas
xlat
or
jnp
pop
lret
aaa
mov
arpl
in
pop
jae
adc
jbe
add
leave
pop
int
fs
pusha
push
out
mov
push
cld
inc
xor
dec
repz
xchg
adc
lea
shrl
addr16
dec
pop
lahf
jo
jmp
push
scas
pop
lahf
jae
and
arpl
mov
fbstp
bound
test
stos
push
pop
pop
cmp
add
sub
sub
adc
sti
cmpl
or
adc
mov
in
adcb
divb
aad
sbb
into
xor
mov
inc
inc
mov
add
inc
pushf
fcomi
xchg
push
scas
in
sub
inc
mov
int3
adc
fdivrl
shlb
gs
xchg
sahf
cmp
repz
in
jle
scas
or
pop
rcrb
imul
icebp
jl
popf
fs
pushf
pop
lds
cmp
jnp
inc
mov
jge
imulb
cs
dec
sbb
cmp
xor
movsl
or
ja
push
mov
lahf
xchg
out
xchg
inc
mov
test
test
mov
add
mov
into
sarl
push
mov
fmuls
loop
inc
mov
jne
into
xchg
sahf
mov
pop
inc
sub
fsub
scas
std
icebp
mov
xor
rcrb
bound
mov
fs
add
push
sub
into
dec
jae
pusha
pop
mov
or
ror
flds
pop
adc
stos
xor
jmp
pop
in
psraw
xor
mov
sub
inc
js
mov
jb
pop
jmp
jns
dec
sbb
push
jb
xchg
pop
xchg
and
js
mov
mov
adc
push
gs
xor
inc
jecxz
loop
fbld
dec
int3
push
pop
fsub
out
add
scas
into
inc
inc
js
daa
sub
cmp
addr16
push
jnp
pop
push
jbe
insb
jmp
shrl
mov
test
mov
push
in
addl
cmpsb
push
clc
sub
in
hlt
mov
sti
mov
flds
jnp
sub
add
and
js
mov
adc
cs
adc
or
scas
test
arpl
cmpsb
xor
jb
aad
mov
fisubs
not
mov
int3
jnp
jl
pop
or
hlt
ja
outsb
xchg
mov
mov
les
out
lods
mov
rcrl
pop
xlat
inc
iret
shll
or
adc
push
sub
lds
sub
sbb
xchg
jne
jle
add
and
mov
pop
shll
add
lods
out
popa
jb
push
xchg
enter
mov
rol
fsubl
scas
imul
repnz
in
or
enter
xor
xchg
and
inc
lcall
mov
test
and
sbb
xor
stos
dec
lahf
outsb
push
add
cmp
xchg
mov
cmc
pop
rcrb
imul
xchg
push
xchg
fcoms
fsubr
fbstp
xor
mulb
and
mov
imul
in
pcmpgtb
fsubl
mov
imul
aad
insb
cmpl
push
jo
fs
test
dec
test
std
dec
or
mov
cmpsl
fwait
dec
sub
inc
mov
jb
mul
sub
loop
jno
stos
gs
bound
das
sbb
cld
pop
int
jmp
lcall
insl
mov
pop
xor
jmp
frstor
push
ds
jo
fisubs
ret
jecxz
sbb
repnz
add
insl
int
xchg
mov
aad
dec
in
mov
mov
or
mov
jae
xor
dec
mov
xorl
or
pop
sbb
dec
inc
out
aad
adc
sub
cld
jbe
repnz
hlt
dec
mov
mov
sahf
and
cltd
repnz
inc
pop
jb
xchg
leave
sbb
and
adc
pushf
pusha
jae
lods
popa
jae
ret
jbe
mov
jb
dec
loop
jle
dec
sbb
into
rorb
mov
pop
or
mov
out
pop
aad
xor
cmpl
inc
jp
js
js
ss
lods
flds
xor
and
ret
bswap
mov
test
mov
lea
lods
sbbb
lahf
sbb
or
push
pop
ljmp
rclb
ds
xchg
cltd
inc
cmp
ffreep
mov
cmp
xchg
adc
jecxz
mov
mov
dec
jns
pop
aam
sub
mov
repnz
jmp
jge
sbb
push
sbb
imul
fwait
push
mov
loopne
pop
mov
sbbb
addr16
mov
rorb
jbe
push
arpl
pop
sbb
loop
mov
push
push
mov
push
fdivr
sti
pushf
lock
rclb
sahf
push
inc
push
fcomps
scas
push
add
imul
repnz
lret
and
mov
pop
fsubr
popa
push
insb
into
movl
pop
cli
mov
dec
negb
mov
cmp
ljmp
pusha
sbb
sbb
negl
es
add
jmp
int3
ficompl
inc
sub
add
stc
mov
push
jp
sbb
es
mov
ret
call
imul
or
dec
xchg
insb
pop
cmp
adc
mov
mov
addb
fistpll
mov
fs
mov
mov
outsl
mov
data16
loope
stos
inc
lods
and
cmc
sete
jge
icebp
movsb
push
inc
jl
repz
int
add
adc
testb
push
decb
or
sbb
repnz
inc
xchg
or
push
daa
lock
in
iret
jo
mov
inc
adc
push
adc
rcl
jb
imul
mov
mov
arpl
push
movsb
clc
xor
pop
dec
movsb
lahf
lret
nop
sbb
ljmp
add
mov
jp
or
sbb
dec
rol
cmp
cld
jnp
imul
ss
insl
push
je
lea
adc
data16
xor
mov
mov
ja
iret
imul
fnstenv
add
mov
fcompl
xchg
ljmp
jae
or
lret
ds
das
stos
cmp
jg
mov
repz
and
xor
jp
cmp
pusha
and
cmp
and
and
ds
inc
adc
jecxz
enter
mov
fwait
adc
imulb
lahf
aaa
call
and
sub
jno
pusha
add
and
adc
repnz
lahf
xor
sub
out
insl
jl
sub
movsl
xlat
mov
inc
adc
dec
jl
loopne
cwtl
out
jmp
add
adc
mov
jle
mov
addr16
jnp
pop
sub
cld
aaa
cmp
add
pop
cwtl
jmp
mov
pop
jb
or
fbstp
dec
std
test
cld
cmp
xchg
and
add
or
or
int3
mov
mov
push
insl
popa
in
loopne
cmp
test
lcall
and
push
push
icebp
mov
nop
lock
or
xchg
test
and
sbb
xor
mov
or
sub
xor
push
mov
int3
icebp
outsb
or
pop
cmpsl
int
dec
xchg
dec
pop
xor
sub
cmp
xor
out
pop
movsb
es
fsubl
xor
sbb
movsl
test
xchg
pop
xor
arpl
jno
out
fwait
sarb
bound
lret
add
sub
pop
add
add
in
lea
cld
out
dec
sub
popf
outsl
mov
push
pop
sub
test
test
aas
outsl
push
fwait
push
clc
test
mov
pop
xchg
xchg
xor
fimull
pop
xor
lret
mov
jo
push
cmp
loop
inc
movl
fs
ja
sub
mov
mov
ss
adc
mov
add
inc
cmpsb
mov
out
pop
mov
cmc
aaa
fwait
imul
lret
fsubrs
ljmp
inc
insb
pushf
or
add
xorb
mov
mulb
out
repnz
out
callw
int
jns
xchg
dec
mov
in
mov
loopne
dec
addl
adc
push
add
mov
arpl
xchg
pop
mov
sti
mov
sub
sub
dec
xchg
enter
and
pop
ja
scas
adc
cltd
sti
stos
orl
popa
inc
adc
pop
int3
sub
daa
push
loope
cmp
and
inc
sbb
outsb
mov
jb
push
stos
dec
xchg
pop
pop
sub
inc
test
or
fwait
and
xor
outsb
xchg
test
pop
ds
pop
jecxz
fisttps
nop
or
test
loope
dec
in
test
aas
mov
and
repz
outsb
fwait
enter
popa
fwait
insb
mov
sub
sub
sti
cld
add
pop
inc
insb
inc
icebp
jno
fiaddl
repz
adc
and
inc
mov
xor
cs
cmp
arpl
xor
xchg
jle
mov
fdivrs
aaa
fiaddl
pop
mov
jecxz
push
das
xor
jbe
dec
xor
popf
popf
es
sbb
sbb
sarl
es
hlt
out
push
jecxz
cmp
and
xor
ljmp
setne
and
rcr
sbb
test
pop
call
test
in
fildl
mov
movb
pop
out
sbb
mov
sarb
clc
jno
stos
sub
inc
ja
mov
lea
test
cmpsl
push
in
aam
in
xchg
cli
out
add
and
mov
cmp
mov
mov
int
sbbb
fisttps
idiv
or
loopne
sub
add
sar
mov
xor
test
test
cltd
xor
mov
cmovo
xor
xlat
jbe
sbb
mov
jecxz
pop
inc
pop
hlt
movhps
iret
xchg
out
fwait
push
jp
or
cltd
das
sub
dec
xchg
mov
mov
xor
cld
mov
in
cld
filds
or
mov
lcall
inc
mov
out
cmpsl
sub
xchg
es
inc
bound
sbb
inc
or
mov
mov
jb
pop
jge
adc
push
cli
mov
mov
push
xchg
sbb
sub
cld
into
jle
test
pusha
lods
inc
xchg
mov
xor
popa
out
pop
jl
aaa
push
jle
push
mov
mov
sahf
push
fst
dec
ficomps
test
es
jmp
sbb
pop
rcrb
add
jne
hlt
fwait
jno
xor
popa
inc
clc
fcompl
test
test
out
inc
push
pop
or
jno
dec
jbe
cltd
insb
aaa
sub
pop
xor
pop
jp
mov
into
enter
icebp
inc
inc
iret
add
aam
xor
xor
std
inc
cmp
movb
add
jns
push
enter
xlat
dec
sub
inc
inc
in
adc
inc
sbb
das
add
out
xchg
in
dec
imul
xchg
push
pop
mov
dec
sbb
jbe
mov
stos
mov
in
adc
outsb
cmp
rclb
out
pop
pop
inc
sbb
mov
inc
inc
adc
sbb
sahf
das
mov
out
mov
push
mov
mov
sub
ljmp
xor
repz
insl
mov
push
insl
or
imul
aam
in
xorb
int
pop
add
repz
cli
inc
xor
lret
mov
mov
mov
cltd
xlat
pop
jo
or
inc
mov
and
add
test
or
jnp
adc
lret
push
xchg
frstor
aas
imul
cld
test
push
mov
pop
rcll
sub
cli
hlt
mov
aam
orb
mov
test
lock
subb
imul
sti
sarb
in
cmc
inc
popa
dec
or
pushf
dec
or
pop
or
int
ljmp
rorl
adc
jle
int3
mov
lret
mov
pushf
sahf
add
or
add
jmp
sarb
int3
pop
mull
lea
mov
loope
mov
test
icebp
add
xor
mov
inc
movsl
inc
mov
lock
shl
xor
xchg
xchg
jle
pop
popf
fcoms
aas
pop
out
cwtl
or
sub
bound
cmp
roll
and
loope
int
icebp
stos
icebp
pop
jne
dec
push
jmp
pop
jne
movl
or
mov
or
pop
pop
pop
std
pop
jecxz
aaa
sbb
add
pop
cmp
lcall
repz
xchg
jmp
pop
test
pop
lret
das
mov
repnz
int
xor
push
popa
dec
lret
loope
test
arpl
js
jns
inc
sbb
in
sbb
cmp
sub
sbb
sub
icebp
das
xorl
mov
push
int3
pop
fucomip
divl
mov
mov
push
jmp
rolb
jbe
es
jnp
outsb
sbb
push
jne
jb
dec
jecxz
pop
clc
mov
sub
jle
push
inc
scas
ja
add
or
pop
lcall
pop
and
mov
int3
sub
mov
mov
out
inc
jno
ljmp
iret
adc
hlt
rolb
hlt
scas
xchg
loopne
addr16
mov
add
push
out
push
jns
pop
add
sahf
jmp
arpl
movsb
in
pop
stos
pop
cmpsb
stos
out
dec
sub
jnp
dec
sti
orb
ss
sbb
pop
scas
lods
orl
add
mov
push
lret
out
gs
adc
cltd
enter
mov
out
hlt
test
or
mov
lcall
cmp
dec
orl
pop
int
and
test
mov
fdivrl
or
sbb
inc
fdiv
repnz
into
add
or
xor
mov
cmp
iret
nop
loopne
mov
jmp
adc
jecxz
call
mov
adcb
out
push
xchg
adc
mov
xor
rolb
not
and
lods
icebp
dec
rolb
data16
jmp
scas
push
sbbl
fsubs
inc
jge
push
sub
cmpsl
clc
cmp
lods
add
ds
adc
or
ljmp
inc
and
pop
mov
imul
or
pop
sub
or
lds
and
lds
lock
psubw
push
mov
pop
push
ljmp
in
int3
pop
jle
outsl
and
ret
subl
xchg
cmp
and
dec
mov
outsl
pop
cld
loopne
xor
xor
aad
dec
addr16
cld
dec
add
arpl
ret
out
repnz
out
orb
rcrl
push
mov
sbb
jo
js
rcl
leave
scas
orl
push
pop
movsl
xor
mov
enter
lret
mov
shrb
inc
into
pop
sbb
roll
shlb
adc
cmp
and
mov
addl
lods
call
xorl
test
je
push
cs
dec
add
dec
pop
ficoml
and
pop
pop
in
mov
jnp
movntps
std
lahf
add
cmpb
addr16
and
mov
inc
lock
push
xchg
test
sbb
jg
enter
jns
adc
iretw
fidivs
leave
lret
je
push
and
mov
out
cmpl
cs
inc
aaa
cltd
jno
adc
cmp
lret
test
jnp
xor
mov
sbb
in
movsb
or
xor
ss
inc
repnz
and
incl
dec
push
cmp
mov
lea
popf
lcall
outsb
sub
lods
or
in
ljmp
cmp
rcrl
mov
push
adc
jb
movsl
jno
lods
pop
and
inc
in
sbb
outsb
loop
test
sub
das
bound
mov
inc
jns
pop
xchg
fadds
cwtl
hlt
jmp
push
cwtl
pop
jmp
jp
push
in
push
testb
dec
mov
aam
push
push
jp
lcall
jne
cmp
cwtl
or
and
mov
sub
neg
inc
xchg
pop
sub
jo
xchg
shrl
imul
insb
imulb
dec
mov
out
icebp
push
inc
rcrl
fdivrs
pop
fnsave
adc
jnp
mov
sbb
mov
ret
js
sbb
stc
add
add
jg
adc
js
daa
enter
push
cmpsl
jnp
xlat
pop
loop
cmp
js
or
adcb
sub
sbb
aas
add
jnp
repz
push
xchg
cmp
popf
rcrl
inc
mov
out
stos
jo
mov
cmp
je
pop
cs
sub
aaa
cltd
mov
xchg
in
insb
cld
ds
scas
lea
adc
sub
push
js
imul
add
pop
xor
push
inc
cld
dec
and
cld
sbb
add
lret
dec
shr
adc
and
jae
cld
cmp
icebp
and
push
aas
cmp
lcall
sbb
lahf
popf
cwtl
rorb
mov
mov
add
xor
jno
add
jecxz
add
adcl
jo
cld
pop
shr
adc
inc
push
call
xchg
mov
adc
les
mov
cs
in
roll
scas
jno
sub
mov
sarl
xor
push
lods
jg
jl
fstpl
inc
cmpsl
lea
ror
mov
push
shll
repnz
mov
call
sub
xor
leave
cld
adc
push
mov
rcrl
jne
in
arpl
scas
inc
icebp
push
xchg
jg
faddl
ss
bound
or
ss
or
int3
xchg
in
jle
iret
lret
and
cwtl
shrl
rorb
dec
fistpll
pusha
jp
gs
xor
lret
xchg
sub
or
sbb
pop
pop
mov
popf
aad
imul
ss
notb
and
pusha
mov
pop
adc
pop
xchg
cmp
ja
movsb
lret
and
pushf
inc
pop
add
add
push
add
dec
lods
aam
xchg
stos
dec
xor
inc
mov
mov
or
mov
and
mov
xchg
mov
pushl
fmul
adc
inc
ret
fs
in
mov
in
sub
mov
mov
jmp
loope
or
sbb
lods
scas
dec
orb
rcrb
cli
sahf
outsb
sbb
stos
dec
adc
arpl
adc
dec
fwait
inc
mov
gs
inc
ds
dec
nop
mov
mov
or
add
test
imul
and
scas
adc
lods
mov
lock
dec
inc
jns
sub
adcb
jae
imul
lds
into
in
xor
in
movl
ja
cwtl
out
xchg
dec
cmp
jbe
sti
pop
aam
mov
cmp
andb
sub
mov
add
and
sub
repnz
std
pop
jle
test
sbb
jne
sbb
add
inc
mov
aam
mov
js
stc
inc
add
cs
int
cmp
inc
ja
hlt
stos
adc
jmp
lock
cld
or
imul
test
orl
inc
or
inc
or
add
push
push
enter
jg
xchg
lret
or
out
movsl
xchg
inc
cmpsb
mov
xlat
pop
ljmp
in
add
pop
insl
jge
lret
roll
in
iret
pushf
test
jmp
xor
daa
push
fwait
xor
xor
int
pop
dec
xchg
icebp
leave
push
jg
push
mov
rorl
js
push
ret
or
bound
gs
stos
or
daa
sbb
push
out
push
mov
mov
movsb
mov
adc
orl
adc
int3
scas
imulb
insl
call
or
push
sahf
call
in
push
clc
lock
jl
daa
sar
mov
insl
jmp
add
jp
dec
lret
add
mov
push
xor
ror
and
jne
ret
add
imul
adc
mov
and
mov
aas
mov
mov
jle
into
daa
inc
mov
mov
push
scas
add
inc
xlat
xor
or
or
fnstsw
jno
aad
xor
decl
repnz
fdivs
lods
movsb
insl
test
push
jns
jg
fwait
inc
xor
jle
sub
mov
cmc
out
jne
fwait
das
push
shll
fcmovb
lret
push
nop
dec
push
xor
ds
xchg
adc
inc
movsb
cmp
bound
cmp
ljmp
dec
aaa
out
cmpsb
scas
cmp
and
cmc
push
dec
sub
popa
jb
div
out
inc
insl
or
int
out
mov
sti
push
mov
xchg
jae
test
or
jl
cwtl
out
pop
mov
sahf
mov
es
xor
ljmp
sub
iret
das
xchg
insb
dec
sbb
sub
push
jg
lret
rcl
push
rolb
iret
es
sbb
jo
push
or
rcrb
push
xchg
xchg
sub
pop
cltd
push
mov
cld
add
add
out
test
loopne
popa
ror
subl
mov
outsl
mov
sub
ss
fs
sub
lret
outsb
push
pop
mov
sub
imul
inc
andb
daa
adc
jnp
iret
es
js
push
inc
and
xor
mov
push
insl
stos
mov
loop
imul
sbbl
iret
xor
jae
add
jns
mov
test
add
loopne
jbe
cmp
stos
inc
fnsave
sbb
cmc
mov
add
mov
test
repz
fcoml
sbb
insb
pop
mov
jge
daa
mov
push
jns
insl
in
mov
inc
xlat
or
je
lret
sbbb
dec
dec
sub
sub
push
adcl
lret
push
in
hlt
push
cwtl
cltd
add
xchg
inc
xor
adc
push
les
mov
mov
add
cmp
ljmp
add
and
data16
and
out
or
aaa
xchg
rcll
jle
icebp
fcos
sbb
inc
insl
mov
jbe
xor
clc
rorb
push
mov
shll
xchg
push
xor
enter
iret
in
inc
push
or
je
add
cld
inc
mov
ds
pop
mov
loopne
daa
decb
sti
dec
fcomip
shlb
xchg
mov
repnz
sbb
jne
sar
push
mov
jge
xchg
int3
sbbl
ja
push
inc
test
push
lea
xchg
jne
push
inc
and
push
mov
fnstsw
pop
or
sbb
inc
cmp
dec
mov
push
mov
mov
and
xor
fadd
xor
insl
dec
mov
push
roll
dec
mov
sub
and
imul
jle
rcll
sbb
dec
xor
aam
fistpll
jae
jbe
pop
mov
es
stc
mov
xchg
aam
out
clc
std
mov
out
xor
mov
pop
aad
push
push
int
test
mov
xlat
div
mov
jl
sahf
adc
mov
mov
call
push
mov
arpl
cmp
insl
xor
rcll
mov
and
bound
mov
sub
push
jae
xchg
push
add
mov
inc
and
lahf
or
inc
ds
shlb
and
or
inc
mov
fsubl
mov
daa
pop
shrb
xchg
xchg
lea
or
loope
aas
mov
sbb
movsb
cmpsl
inc
mov
les
xlat
call
push
pop
inc
nop
nop
inc
inc
mov
jnp
sub
and
stc
repz
cmp
xor
loop
sub
cmpsb
push
es
out
sub
lahf
jae
rclb
scas
inc
aaa
enter
add
push
aaa
xor
das
pop
mov
mov
adc
push
fisubs
sbb
xorl
jp
in
cmp
cmpsb
jp
add
jne
std
or
sti
gs
sub
js
les
lret
into
xor
mov
mov
orb
daa
add
fsubrs
nop
sub
xchg
cmpsb
idivb
sub
rolb
aas
repz
loop
bound
or
mov
jg
ret
pop
int3
mov
xor
pusha
xlat
or
adc
inc
rcr
outsl
sahf
ret
loop
repz
pop
push
inc
dec
sub
pop
lret
ljmp
mov
mov
stc
leave
inc
jmp
pop
push
mov
pop
out
jne
pop
out
loopne
cli
addl
mov
sti
cmp
imul
sti
hlt
mov
in
out
cmpl
jb
imul
mov
jnp
and
dec
or
cmpsb
mov
xchg
loop
mov
mov
push
sub
mov
inc
jnp
pop
popf
leave
pop
jb
lret
pusha
and
xor
jno
add
lahf
push
mov
xchg
inc
push
push
add
or
cmpsb
inc
int3
out
aaa
xor
xchg
int3
add
nop
into
push
jo
mov
cmp
loop
sti
cwtl
jbe
fdivl
pushf
cs
enter
fsubp
icebp
mov
repnz
adc
cmp
ret
mov
or
mov
push
xor
xchg
push
popa
push
push
pmulhuw
lret
inc
cmpsb
dec
je
insb
notl
shrl
mov
test
mov
repz
bound
xor
push
cs
pop
cmpb
push
rcl
movsb
js
in
xor
decb
js
push
adc
jae
adc
inc
cltd
imul
roll
in
imul
dec
daa
or
push
and
ficomps
sub
cmpsl
cld
aaa
xchg
mov
push
and
mov
lock
dec
or
mov
push
pop
jecxz
insl
jle
cmp
mov
xor
xor
pop
int
xchg
adc
cld
insl
data16
outsb
pop
jmp
cmp
test
xchg
lcall
cli
jo
cs
sbb
mov
mov
lods
xor
cmp
lcall
ret
jp
rclb
dec
ljmp
sbb
inc
addr16
std
imul
dec
imul
sub
dec
lahf
enter
leave
or
and
push
neg
xor
cmp
mov
incb
lds
out
push
mov
dec
aam
in
pushl
add
cli
and
hlt
and
popa
nop
or
jnp
push
rcrl
xchg
aas
xchg
loope
in
push
sbbb
push
aaa
aas
stos
and
mov
cmpsb
xchg
cmp
sbb
pop
cmpsb
repnz
outsb
lods
and
cmp
and
cmpsl
call
lcall
jbe
cwtl
test
xor
lret
lret
das
cld
enter
mov
lods
ficoml
mov
inc
jl
sbb
xor
jl
stos
lcall
mov
cmp
sub
outsl
jb
repz
in
aam
movsb
rcr
int
or
pop
and
jl
test
imul
xchg
mov
sub
xchg
pop
dec
lret
pop
imul
cmpsl
movsl
in
add
lahf
add
adc
dec
cmp
inc
add
adc
pop
sbb
lock
clc
clc
test
adc
mov
cmp
mov
lock
cmp
repnz
mov
sub
jno
int
add
cmp
xor
xchg
push
fucomi
popa
pop
iret
mov
movsl
sbb
push
outsb
insl
inc
stos
adc
out
mov
cs
sub
lea
push
mov
pop
xchg
dec
pusha
mov
xchg
outsl
and
and
loope
inc
mov
dec
fwait
sbb
xchg
das
addr16
cmp
les
mull
and
arpl
nop
dec
rcrl
jbe
xor
adc
out
jno
add
jb
pusha
push
xchg
add
das
push
push
inc
xor
stc
sub
loope
cmp
xor
pop
add
lods
int
push
or
push
clc
mov
outsb
popf
adcl
mov
test
lret
fcmovb
dec
adc
aam
imul
cmp
lahf
push
cmpsb
fs
popf
pop
into
inc
xor
jge
pop
pop
mov
add
imull
cmp
jp
push
decb
les
lcall
cmp
fsubr
lret
cmp
fistpl
aas
divl
rclb
cld
test
push
add
int3
xlat
call
fwait
mov
mov
scas
cmpb
repnz
lock
fucomi
lcall
push
lods
xor
shr
fs
pop
shr
daa
and
mov
and
fs
loopne
mov
insl
inc
rcrb
mov
dec
stos
jns,pn
mov
daa
ficoms
fnstcw
cwtl
cwtl
add
and
dec
add
add
sbb
aam
lahf
push
add
or
cmp
adc
jl
jne
sbb
adc
jp
movsl
xlat
rclb
fdivs
mov
xor
cmp
mov
push
imul
in
mov
aas
and
dec
dec
jnp
mov
and
rcr
test
int3
dec
push
fcmovnbe
inc
or
xchg
outsb
jecxz
cmc
mov
cmc
pop
inc
xchg
pop
aad
mov
mov
pop
lahf
mov
or
add
lret
cmp
sarl
and
push
out
and
add
lret
mov
inc
lahf
sahf
aas
adc
inc
shlb
cmpsb
add
sbb
call
dec
das
jl
inc
adc
fisubrl
pop
sub
fwait
xchg
adc
sbb
jle
arpl
out
jb
cltd
sub
mov
mov
inc
cli
or
jmp
pop
test
shr
mov
push
jno
jb
pop
push
aam
inc
jbe
adc
xchg
fs
mov
test
and
lcall
xchg
mov
cli
xlat
call
mov
adc
cld
jo
ficoml
lahf
sahf
fwait
xor
mov
mov
jbe
test
adc
mov
adc
shr
aam
loop
aad
adc
xabort
jmp
insb
cltd
dec
cmp
add
lret
adc
dec
clc
inc
mov
jb
fstl
mov
or
mov
mov
roll
test
je
lahf
lret
clc
xor
in
cmpsb
sbb
pop
dec
iret
cmpsl
xchg
push
cltd
adc
test
jno
xor
fldl
adc
add
mov
pop
inc
and
popa
test
push
jne
pop
dec
xchg
outsl
push
inc
repnz
loopne
mov
in
jmp
cwtl
xor
push
mov
cmpsl
aas
stc
sbb
jnp
add
cmp
jp
ljmp
in
fdivrs
mov
inc
loop
pop
pop
das
pop
add
sbb
inc
or
imul
cmp
jl
adc
imul
aaa
inc
iret
inc
aaa
div
dec
incb
cli
cmp
mov
sub
adc
jno
mov
pop
mov
inc
fistpll
mov
outsb
jmp
and
loope
idivl
jge
xchg
stos
cld
and
insl
lods
pop
das
sbb
test
or
adc
bound
or
or
loop
and
jo
jmp
in
cmp
out
fld
xchg
mov
movsl
sub
mov
cs
pop
sbb
push
loopne
imul
sub
shl
bnd
push
push
nop
xor
push
cmp
es
daa
ss
out
jns
or
daa
jmp
push
cmpsl
mov
fsts
ljmp
push
or
mov
pop
ret
lds
or
pop
jbe
andl
jns
lahf
mov
out
or
inc
and
dec
jg
and
or
sbb
and
cmp
hlt
jae
mov
aas
icebp
lock
scas
jno
adc
and
add
pushf
mov
xorb
cmp
loop
or
mov
jae
sub
dec
cmp
xchg
and
add
lcall
cltd
jmp
into
test
out
test
pop
sbb
push
into
pop
subl
mull
jecxz
rolb
mov
gs
xlat
aaa
inc
in
sbb
ret
lock
sbb
push
rorl
aam
lret
pop
and
addr16
pop
and
rcr
stos
xor
dec
jb
ja
jne
push
dec
inc
loop
js
mov
mov
cltd
adcl
imul
pop
xchg
mov
mov
lods
mov
mov
stos
pop
and
mov
lret
pop
adc
aas
lods
xchg
inc
int
cmp
test
jp
sbb
dec
out
xchg
je
mov
mov
mov
jecxz
clc
jle
sub
je
es
daa
cmp
mov
add
mov
jle
mov
mov
test
add
insl
cmp
je
push
xchg
int
push
jns
and
ljmp
shll
test
sbb
jno
repz
adc
mov
or
jge
aam
sbb
inc
xchg
cmp
dec
dec
shl
xlat
cmpb
push
popf
or
int3
pusha
mov
mov
bound
and
fisubs
roll
js
adc
fldt
jmp
adc
mov
mov
mov
aad
lds
packsswb
lock
jl
pop
lods
cli
inc
mov
mov
insl
sbb
adc
daa
and
adc
imul
popl
mulb
out
mov
cmp
lock
ss
aad
cs
loope
xor
pop
int
jge
lret
stos
call
mov
movsb
imul
pop
pusha
jmp
or
in
fists
and
xchg
xchg
mov
jge
cmpl
sti
jecxz
ret
cmc
test
pop
int3
in
mov
fcmovnb
push
call
lods
adc
or
pop
fsincos
movsb
mov
pushf
sub
stos
ret
push
xchg
add
xor
jecxz
lcall
dec
cmpl
jnp
push
sub
push
enter
movsl
push
cmp
jmp
and
mov
sub
dec
add
cltd
sbb
inc
sti
fsub
xor
int
push
cmp
jge
int
and
sbb
hlt
sbb
cmp
add
xchg
push
daa
rcll
push
mov
pushf
int
rcrb
mov
out
ret
mov
inc
jp
and
stos
sahf
push
fsubrl
imul
sbb
pop
sub
push
xor
mov
xchg
cld
mov
rcrl
mov
insl
packuswb
bound
pop
jne
lahf
loope
dec
rolb
sbb
pop
notl
xchg
cmc
mov
ljmp
ficoms
sbb
fnstsw
fisubs
xlat
add
cmc
nop
arpl
push
divl
fidivs
out
ret
lret
and
pop
subb
nop
lods
mov
xchg
and
fs
inc
inc
fidivs
jl
jmp
cmp
inc
lock
mov
hlt
arpl
dec
jnp
sahf
xchg
push
jmp
orl
push
cmp
pop
or
movsl
adc
add
dec
arpl
pop
int
sub
test
ljmp
ja
jnp
es
lcall
aas
fistpl
bnd
scas
inc
xchg
pop
xor
xchg
pusha
xor
pop
xor
scas
mov
fisubrs
and
or
cld
inc
mov
and
xlat
push
insb
repz
cmpsl
lock
inc
shlb
out
enter
movl
or
icebp
scas
jl
dec
shll
push
imul
sbb
addr16
data16
mov
or
adc
xchg
xor
cmp
cwtl
jo
push
inc
leave
cltd
mov
add
mov
sub
mov
vpsubsb
add
imul
pop
and
adc
inc
mov
xlat
sbb
sub
sbb
std
and
jp
repz
cs
aas
aas
cwtl
and
outsl
jne
outsb
xchg
out
mov
cmp
sahf
repz
cmp
call
cmp
mov
jg
or
dec
xchg
or
add
jecxz
xor
xchg
pop
and
push
js
ds
flds
aas
cmpsl
lret
mov
out
pop
enter
inc
pop
dec
mov
movsb
rclb
je
inc
jle
mov
loop
jecxz
jge
or
fstl
xor
cmp
or
mov
xchg
sub
fidivl
lret
es
sbb
sub
push
xchg
nop
lock
insl
cmp
bound
jb
cmc
push
mov
jle
inc
aad
sbb
ret
push
loopne
xor
push
gs
daa
stos
ds
mov
hlt
and
pop
sbb
iret
adc
jle
add
mov
or
mov
out
adc
outsb
inc
push
sub
xchg
lock
mov
lahf
mov
call
pop
rcrb
pop
inc
dec
add
sub
push
lahf
jns
add
fnstcw
popf
nop
mov
mov
rolb
pop
shl
lods
or
test
pop
jp
dec
inc
ds
xchg
loop
iret
std
imul
lret
sbb
adc
sbb
dec
or
sub
add
int3
fcmovnu
and
mov
lcall
test
inc
aas
inc
lahf
fcmovu
cmpsl
or
sub
arpl
mov
xor
lock
pmulhw
sub
lods
jns
mov
adc
mov
fidivl
or
jp
push
push
outsl
fdivl
scas
cmc
or
pusha
mulb
outsb
mov
cmp
sbb
nop
push
gs
jmp
or
sbb
push
sahf
mov
sar
mov
cmp
fnstsw
jge
cwtl
push
pop
mov
xorb
add
mov
mov
jns
or
fsts
xor
xor
stos
sub
push
dec
jae
fsts
ret
xor
mov
hlt
dec
push
xor
imul
cld
out
mov
sub
push
adc
push
push
mov
sbb
mov
jge
xor
out
gs
xlat
sarl
out
and
cmp
mov
imul
mov
aam
mov
xor
adc
imul
test
into
lock
sbb
int3
jo
stc
add
xchg
out
test
sbb
pop
add
xchg
lahf
cltd
mov
cmpsl
test
mov
ss
mov
jmp
cmp
getsec
mov
mov
mov
dec
sbb
movsl
xchg
arpl
std
push
frstor
enter
insb
add
adc
popf
sub
or
fsubl
bound
and
adc
sbb
ds
les
ds
inc
icebp
dec
in
mov
and
mov
jo
add
xor
clc
std
dec
scas
sub
mov
and
repnz
cmpsl
jo
add
aaa
cmp
push
mov
xchg
or
sti
push
pop
int
jp
ljmp
rorb
les
xchg
mov
ret
jae
mov
test
jecxz
aaa
pusha
das
out
mov
cmp
mov
xor
mov
push
les
and
dec
xor
aas
push
sub
sub
data16
paddw
cmp
pop
iret
xchg
stc
into
xor
in
repnz
xchg
sbb
sti
xor
insb
rcr
dec
jno
and
cltd
mov
or
stos
outsb
insb
xchg
mov
sub
les
mov
dec
mov
inc
cmc
pop
xchg
xor
aam
sbb
jo
adc
rcl
lahf
pop
cmp
and
mov
imul
mov
std
or
imul
sarb
das
push
mov
fs
pusha
ret
test
xchg
xchg
jl
inc
cltd
fsubrp
lret
test
dec
adc
sub
icebp
adc
pop
xorb
in
lea
push
xor
mov
mov
mov
lahf
hlt
pop
cmp
arpl
or
cmc
pop
or
jne
jmp
push
pushf
jle
arpl
aaa
mov
add
out
inc
lds
inc
jge
pusha
sbb
ss
in
and
insl
cmp
pop
xchg
addr16
leave
movsl
enter
mov
sub
sbb
ljmp
pop
dec
sarb
sbb
out
lret
xor
aam
xchg
mov
lock
mov
xor
cmp
arpl
mov
fiaddl
jae
ficoms
push
sbb
xchg
repz
push
pop
push
js
mov
bnd
movl
sbb
lahf
xchg
jne
in
loopne
xchg
xor
cmp
xor
popf
jno
jle
and
in
inc
mov
inc
jecxz
and
mul
mov
lret
xchg
loopne
das
loopne
data16
xor
testl
fisttpl
ret
ja
jo
shlb
dec
test
sarl
outsl
mov
lea
xor
gs
sarl
out
fidivrl
mov
fucom
mov
dec
adc
or
sub
pop
push
or
xor
xchg
repz
cmp
pop
or
or
lcall
dec
cmp
das
adc
dec
mov
loopne
rclb
je
int
sub
xchg
xchg
test
xchg
sbb
adc
lock
push
sub
shrb
push
lcall
xor
sub
imul
mov
lds
in
les
bound
rcrl
xchg
arpl
sti
xchg
imul
ss
or
int3
mov
xor
cmpb
mov
loope
cmp
aad
and
sub
in
add
add
shl
xor
ljmp
push
add
sub
adc
lods
loope
push
clc
mov
ret
stos
leave
mov
or
mov
mov
and
or
fbstp
dec
fsin
jnp
xchg
aam
int
addr16
mov
mov
xchg
lock
sti
in
insb
push
cmp
push
aaa
or
lock
ret
adc
movsl
or
dec
movsl
mov
and
cmc
addr16
insb
mov
add
xlat
cmp
sti
jno
sub
fisubs
test
in
jmp
cmp
and
jne
adc
int
loop
add
mov
dec
sbb
rorl
pop
mov
sahf
enter
icebp
call
out
adc
aad
outsl
pop
aad
addb
lock
add
and
test
mov
jmp
int3
inc
mov
loopne
daa
mov
xchg
sub
and
cmp
mov
sub
xchg
jp
mov
sub
clc
xor
stos
xor
pop
or
into
ret
xlat
or
xor
scas
mov
dec
mov
push
je
add
mov
xchg
lahf
jg
stc
mov
xor
adc
shrl
sub
pop
hlt
in
or
inc
push
mov
jge
stos
sub
nop
popa
aam
fisttps
adc
jnp
sub
out
adc
jmp
adcl
divb
sahf
cwtl
stos
sbb
jno
mov
lahf
jbe,pt
mov
mov
mov
aaa
mov
addb
push
pop
cmp
lods
movb
and
push
sbb
dec
sub
les
or
jne
js,pn
or
push
cmp
mov
cmp
dec
andl
or
pop
rorl
push
pop
xchg
repz
lret
pop
sarl
popf
push
mov
iret
sub
lcall
int
out
add
test
xchg
inc
stos
push
and
mov
clc
jge
lock
cmp
lcall
and
lds
sub
add
sub
xchg
jmp
pop
inc
test
outsl
outsl
or
orl
out
sub
inc
and
mov
aaa
aam
rcll
mov
int3
fdiv
loop
add
nop
ss
xchg
xor
push
push
pop
add
repnz
push
dec
iret
adc
jg
xor
in
mov
sbb
rorl
inc
or
ret
dec
cmc
sbb
inc
sbb
mov
jns
add
jge
push
and
pop
pop
aas
sub
subb
lret
pop
out
add
cmp
shrl
imull
out
xor
inc
das
add
mov
mov
or
out
add
fwait
add
nop
pop
add
js
push
pop
nop
movsl
fnstenv
lahf
push
adc
mov
call
pop
and
stos
outsb
subb
or
inc
stc
repz
out
mov
push
xor
xchg
lret
xchg
mov
scas
jg
lock
push
mov
mov
mov
jmp
ss
pop
xor
mov
xchg
fmull
fs
pushf
push
sbb
mov
cmc
adc
xchg
xor
std
shrb
ljmp
ret
push
xlat
outsl
out
shll
scas
adc
popa
bound
ret
push
xchg
adc
jo
mov
push
adc
mov
ja
scas
mov
data16
xchg
nop
arpl
jle
outsl
mov
push
mov
xor
adc
xchg
mov
lret
cmp
sub
fisubrs
repnz
push
jo
mov
nop
dec
push
cwtl
ret
mov
mov
ret
jne
mov
xchg
scas
lcall
outsl
sbb
jbe
mov
das
mov
xchg
pop
mov
mov
dec
adc
adc
ljmp
jns
and
or
pushf
mov
pushf
test
push
pop
sahf
mov
mov
push
and
adc
and
dec
nop
cmp
dec
mov
sbb
int
fmull
repz
pop
loop
aaa
lcall
mov
mov
popf
adc
cmp
pop
pusha
mov
pop
in
sub
insb
fisttpll
sbb
jnp
nop
aad
add
outsb
stos
jb
rcrl
jecxz
cmpsb
stc
add
push
cmpsb
out
dec
push
call
out
clc
in
fstps
loop
mov
repz
pop
outsb
sbb
js
pop
outsb
adc
addl
aam
cltd
sbb
pop
test
jb
push
inc
xor
cmp
popa
in
cs
mov
addr16
inc
test
sub
out
sahf
out
js
out
cmp
adc
cmp
in
pop
out
jns
call
cmc
sub
pop
push
jns
jle
sbb
lret
insb
rcrb
je
or
movsb
or
out
lahf
inc
into
xchg
mov
mov
ss
adc
testl
lret
int3
pop
push
mov
sbb
sub
or
pushl
and
dec
xor
mov
imul
xchg
push
xchg
shlb
rolb
mov
je
jmp
xor
jp
test
pop
pop
mov
and
insl
cmpl
ret
cld
cmpb
ja
mov
mov
mov
sbb
or
mov
sub
xlat
cli
jp
out
adc
mov
out
xchg
shlb
fwait
jle
stc
jl
push
das
xchg
jl
imulb
mov
xchg
frstor
add
dec
bound
cmp
test
loopw
loopne
ficompl
scas
call
mov
imul
callw
mov
and
xchg
stc
fs
in
or
out
icebp
fisubrl
mov
icebp
repz
incl
cmpsl
push
mov
mov
mov
mov
jns
add
or
test
jbe
dec
mov
mov
fcmovbe
xor
sbbb
add
jae
pop
test
and
mov
fnstcw
ret
ljmp
in
fldl
enter
testl
xchg
ljmp
mov
scas
shrb
jo
sub
add
nop
mov
add
outsl
fldt
jl
fstl
addl
jo
lahf
outsl
pushf
lods
dec
jns
xchg
mov
loop
push
mov
imul
cmp
loope
fisubl
xor
push
scas
pusha
ljmp
fs
sub
and
pop
jae
add
sbbl
pushf
sbb
aam
mov
inc
jecxz
mov
shl
add
mov
jle
dec
scas
push
rcr
push
jne
cmp
dec
xor
xor
inc
popf
mov
cli
lea
xchg
pop
aad
aaa
sbb
and
dec
inc
jle
lock
dec
fstl
xor
cmpsl
sub
xchg
in
mov
pusha
push
movsl
mov
pop
xchg
rcll
fiaddl
fdivl
pop
xchg
jge
out
insb
cmp
push
fsub
je
add
cwtl
in
lock
mov
into
or
pop
mov
push
stc
mov
adc
or
out
xor
sub
lret
sub
pop
sub
or
jo
add
aaa
xlat
xchg
sub
loop
shrl
sbb
mov
repz
ret
xchg
cmp
mov
fs
jl
and
mov
mov
shll
imul
xchg
push
sbbb
faddl
mov
shl
mov
lret
scas
je
push
divl
pop
fmuls
ret
int3
arpl
mov
and
or
mov
aas
and
push
fisttpl
lods
mov
xor
lods
jg
movsl
jp
mov
add
aad
pop
or
cli
mov
dec
mov
fidivs
shlb
pop
mov
das
jl
mov
imul
mov
fldcw
negb
arpl
pop
test
mov
xor
shll
movsb
rclb
ja
test
mov
mov
pop
sub
sti
loopne
pop
push
clc
lcall
jge
outsb
and
aad
and
pop
movd
jnp
mov
xchg
aad
pop
add
pop
and
cmp
adc
cmp
sbb
xlat
sub
sub
fldenv
push
mov
add
adc
add
fs
popl
outsb
or
mov
into
sbb
cmp
sbb
mov
insl
fistl
jecxz
xchg
mov
adc
das
push
lds
jmp
inc
add
mov
xchg
lods
aaa
mov
outsl
pop
scas
mov
push
mov
fbld
ss
xchg
mov
push
mov
icebp
jle
mov
clc
iret
dec
and
xchg
add
icebp
or
or
push
int3
jmp
sbb
pusha
ss
push
out
scas
sbb
xor
test
enter
jge
pop
cwtl
sub
hlt
jp
xchg
out
into
sbb
adc
cmp
out
dec
push
dec
xchg
or
loopne
jmp
add
xor
push
add
mov
cmp
cwtl
arpl
and
mov
cwtl
xchg
mov
fwait
push
cmp
pop
rolb
mov
or
xchg
add
dec
test
hlt
fwait
mov
mov
stos
push
stos
ret
adc
je
bound
cmp
mov
cmp
fs
mov
jg
mov
js
ret
pop
mov
imul
lods
mov
or
call
into
aaa
insl
ljmp
fistl
xchg
sub
lcall
jg
test
in
mov
jle
sbb
sub
or
mov
mov
dec
sti
mov
popf
cli
jl
xor
ret
mov
clc
lcall
push
outsb
in
rclb
cli
addr16
push
test
mov
dec
push
enter
jnp
xchg
es
fcmovne
cwtl
adc
sub
xlat
pop
xor
inc
jae
sub
dec
jp
aad
inc
jbe,pt
add
repz
sbb
arpl
mov
jnp
imul
adc
mulb
mov
adc
test
inc
repnz
mov
pop
test
sbb
push
sub
cwtl
push
jbe
in
int3
mov
rcrl
xchg
std
jne
xchg
xor
xlat
sbb
fadd
xor
pushl
push
sar
cmp
fisubs
xlat
sub
cmc
test
xchg
jecxz
jp
stc
xor
xor
push
sbb
sub
popl
and
popa
int3
push
bound
outsb
jne
gs
fidivrs
push
fidivrl
adc
shrl
loop
jmp
int3
xor
cmp
repz
dec
fstl
jp
rcrl
mov
jmp
out
lods
gs
cmp
outsb
out
sahf
fs
test
repnz
out
mov
mov
sbb
cli
bound
xor
movsl
push
leave
cld
lods
push
sti
mov
in
mov
xchg
lret
and
sbb
adcl
je
ret
out
push
decl
push
inc
mov
fmuls
push
test
mov
adc
ljmp
loopne
pop
mov
jns
enter
mov
inc
fdivr
adc
rol
push
mov
ret
cmpsb
faddp
dec
sbb
es
xor
je
xlat
call
or
or
xor
lcall
aad
int
loop
lcall
and
push
mov
fsubp
dec
pusha
dec
cltd
jb
mov
sti
inc
add
imul
in
mov
mov
rcrb
test
std
dec
and
addb
subl
sub
aad
aaa
ja
loop
lahf
int
mov
dec
mov
push
and
loop
add
cmpsb
push
jl
mov
pop
mul
mov
xchg
lods
adc
lret
lods
fidivrs
pop
loop
fwait
fs
stos
sbb
and
sub
das
test
fs
jns
or
dec
and
mov
mov
jp
ret
mov
test
mov
movsl
das
push
test
jbe
cmp
xor
adc
loopew
jb
not
imul
mov
jecxz
cmp
push
std
xor
xchg
push
mov
xchg
mov
out
push
sbb
out
adc
jmp
test
mov
cs
outsb
jns
call
inc
aaa
insl
stos
cmp
movsb
leave
sub
push
sub
out
mov
imul
adc
xor
leave
shrl
and
sub
lcall
addb
fimuls
cltd
ja
mov
push
mov
sar
push
cmp
call
and
rcrb
rol
loopne
push
xor
sub
fcomps
sub
mov
iret
push
xor
xchg
dec
hlt
in
out
xlat
das
sub
scas
lea
jae
in
add
pop
rorb
lret
roll
inc
push
in
in
dec
and
mov
inc
dec
mov
scas
wbinvd
sbb
lea
adc
push
mov
mov
or
push
movsb
inc
cld
jecxz
or
pop
scas
pop
xchg
rorb
shll
sub
rclb
psubw
push
cmpsl
xchg
lea
sbb
cs
and
inc
xchg
inc
mov
inc
iret
dec
lock
or
jg
push
in
xchg
outsl
mov
nop
sub
lcall
leave
insl
sar
push
fcoms
adc
sub
jbe
fmuls
loope
in
inc
xchg
mov
mov
mov
aam
ucomiss
ss
mov
jmp
or
mov
jns
scas
shl
lods
pop
push
mov
and
aam
sbb
dec
pop
jns
sub
add
sbb
fists
leave
mov
decl
mov
gs
xchg
push
xchg
mov
dec
lahf
mov
xchg
sbb
xor
mov
mov
jecxz
fildl
gs
adc
or
add
pop
mov
adc
daa
mov
or
and
inc
push
sar
mov
fists
jne
outsb
add
shlb
stos
ret
push
rcll
arpl
cmp
add
mov
sbb
inc
test
int3
mov
inc
stos
das
and
nop
loop
add
out
add
stos
out
inc
cmp
push
pop
fcmovb
or
push
in
sbb
xchg
pop
inc
imulb
repnz
aas
outsl
loopne
jg
cmpsb
sub
inc
subb
inc
fcompl
mov
sub
jb
jmp
in
out
push
cmp
jno
dec
pop
test
loop
xor
sti
ljmp
ss
daa
repnz
add
mov
xchg
loopne
leave
add
push
jmp
pop
pop
xchg
lret
call
cmp
mov
mov
les
dec
mov
jmp
add
aaa
aas
cmp
movsl
movsl
jle
clc
ret
mov
ret
fimuls
adc
out
inc
pop
inc
add
xchg
jnp
inc
testl
push
popf
hlt
pop
xchg
inc
add
ljmp
lahf
jle
or
cmp
mov
es
dec
scas
aaa
adc
nop
mov
into
cmp
jbe
inc
lock
push
adc
xchg
rcrb
cmpsl
push
insl
mov
imul
mov
add
jge
fs
lock
mov
sub
jmp
or
jnp
push
loope
mov
in
out
inc
sub
cmpsl
xor
bound
and
mov
clc
rol
jne
and
popa
loopne
adc
xchg
test
insb
mov
gs
mov
or
or
enter
mov
jnp
cwtd
inc
sbb
outsb
adc
mov
rcrl
xor
jne
cwtl
xor
fmull
sti
sbb
push
jl
pop
jne
adcb
add
jle
push
hlt
outsl
push
cmp
test
cwtl
lahf
jmp
ljmp
mov
outsb
lcall
and
adc
mov
fidivrl
or
leave
pushf
ret
or
div
in
cli
int3
sbb
mov
lret
lods
mov
pop
mov
sub
pop
pop
cmp
and
sub
sub
lret
cmp
cmp
mov
call
pusha
ret
scas
cmpsb
into
imul
dec
fbld
roll
cmpsb
lahf
push
push
mov
roll
cs
fsubl
enter
xorb
sti
xchg
nop
les
enter
sbb
aad
xchg
sbb
jne
popf
cmpl
je
cld
shlb
testl
xchg
mov
fisubs
sub
cli
int
lock
in
xor
adc
jge
test
fisttpl
add
and
dec
cmp
lahf
sbb
sub
jge
dec
pop
fbld
dec
xchg
out
movsl
stos
btr
sbb
cwtl
or
cmp
push
xchg
js
xchg
mov
push
fbstp
push
popa
inc
cmpsl
xor
mov
or
xchg
cltd
add
adc
jg
xor
push
cmpsl
jge
cmp
frstor
mov
or
loope
mov
fsubl
loop
mov
push
sub
xchg
add
inc
in
cmc
add
and
cmp
sbb
pop
or
pop
mov
stos
sub
repnz
pop
jl
fiadds
test
test
push
pop
and
inc
sub
lret
mov
bound
cs
hlt
and
lods
inc
pop
out
insb
jns
mov
or
adc
xor
xchg
jle
maskmovq
imull
sti
in
xlat
pop
inc
xchg
das
lcall
rcrb
icebp
daa
in
jmp
push
mov
lods
rcrb
add
xor
push
je
in
and
aas
xor
dec
mov
xchg
xor
xchg
xchg
cmp
insl
jo
mov
mov
mov
jae
sbb
inc
rcrb
xor
dec
stos
ret
adc
and
mov
mov
mov
push
lahf
jb
push
imul
xchg
push
popf
sbb
aad
pop
mov
repnz
in
cmp
and
lret
jge
jnp
enter
fists
sub
lret
es
mov
nop
xchg
stos
push
sub
jno
jns
inc
inc
cmp
mov
mov
xchg
jecxz
mov
hlt
inc
dec
repz
jns
jno
xchg
sub
fs
xchg
jne
fsubrs
test
cmpl
add
and
outsb
jg
xor
cs
xor
xchg
fstl
xor
icebp
mov
adc
adc
loop
sbb
adc
in
sbb
sbb
test
or
xchg
loopne
mov
mov
lods
psraw
pop
out
push
sub
xor
cli
jmp
dec
mov
test
mov
pop
test
ja
shl
dec
decb
xchg
xchg
sub
push
xchg
adc
shrb
ret
mov
xchg
pop
fwait
push
test
inc
mov
cmpsl
adc
jge
in
in
xor
xchg
mov
movsb
loopne
movsb
sub
ror
dec
or
vmovdqu32
sarl
jg
pop
out
push
or
xchg
xor
inc
mov
jno
adc
or
lea
mov
addr16
push
xchg
push
outsl
mov
rolb
cmp
cli
jl
popf
mov
aam
rolb
fld
push
insl
push
mov
and
mov
add
mov
mov
mov
pop
ds
dec
sbb
shr
nop
and
jno
sbb
jecxz
mov
aas
pop
mov
lahf
test
fiadds
int3
aas
xor
cmpsb
adc
push
jae
mov
icebp
fnstsw
stos
repnz
xchg
mov
inc
pop
cmp
xchg
mov
ja
xor
aam
cltd
cmc
repz
lds
jge
push
or
xorl
or
ret
mov
xchg
inc
cld
xchg
xor
daa
scas
cmp
push
cmp
lcall
gs
shl
jp
je
sub
dec
das
adc
inc
clc
enter
clc
repz
mov
test
push
and
or
xor
nop
adc
inc
mov
mov
jecxz
pop
mov
add
jnp
cmp
and
ret
or
sbb
and
or
sbb
repnz
dec
dec
push
vsubps
shll
bound
int
stc
gs
mov
push
jno
or
cmpl
loope
adc
xchg
fnstenv
hlt
sbb
ja
jae
cwtl
mov
cmp
cwtl
repnz
mov
mov
jns
lock
pop
ficompl
pop
int3
add
loop
pushf
cs
bsr
stos
mov
insl
or
fcoml
mov
xchg
add
dec
and
sbb
push
divl
scas
add
bound
xor
pop
out
push
xor
mov
sti
mull
sbbl
test
in
repnz
adc
ja
and
inc
test
pop
sahf
inc
mov
cmp
mov
adc
push
jns
xchg
cmp
test
bound
jnp
push
sbbl
rcrb
call
add
ss
mov
mov
jg
xor
sbb
out
cwtl
mov
ficoml
imul
rorl
mov
cmp
lods
lea
xor
movsl
loop
mov
fnstsw
addr16
cmp
mov
dec
adc
mov
insl
das
adc
cmc
cmp
js
push
push
dec
jae
imul
outsb
mov
arpl
push
js
xorb
loop
sub
subb
fstl
push
cmp
cmp
test
sub
push
dec
adc
imul
jns
mov
out
and
sbb
lcall
pushf
adc
mov
push
stos
in
mov
jno
sarb
cld
add
roll
inc
mov
rcrl
cmp
mov
add
mov
mov
movsb
lock
popa
pop
add
test
movsb
xlat
or
push
ljmp
cltd
ret
inc
shlb
sbb
inc
ret
bound
mov
out
aad
arpl
andb
in
movsl
lret
movsl
negl
ficoml
mov
mov
xor
rclb
xor
mov
popf
aad
fyl2xp1
cmpsb
jmp
dec
jmp
popf
xor
push
sub
mov
jmp
cli
dec
sub
sbb
rol
xor
xchg
je
aad
inc
push
lret
fistpl
loope
stc
int
sub
pop
adc
lcall
xchg
jno
mov
bound
jg
add
sub
shrb
inc
inc
or
test
or
mov
jae
test
imul
inc
jnp
fs
out
aad
jno
inc
mov
enter
test
jge
aaa
cmp
loop
mov
jecxz
bound
iret
pop
cwtl
lods
subl
pop
sbb
pop
mov
out
xchg
and
in
pop
in
inc
mov
inc
stos
dec
bnd
add
fadds
jmp
inc
pusha
adcb
pop
mov
sbb
dec
les
push
repnz
and
ret
enter
mov
push
mov
movsl
pop
push
mov
mul
jo
mov
mov
call
pop
aas
pushf
mov
es
fstpt
dec
push
daa
lea
imul
xor
mov
pop
mov
mov
call
mov
sub
ja
and
adc
dec
and
mov
das
mov
cli
fsubrl
xor
sbb
sbb
sbb
jecxz
out
sbb
or
xor
mov
daa
push
adc
dec
xor
push
popa
and
push
cmp
sub
jmp
imul
outsw
cmc
sub
mov
fwait
outsb
cs
nop
mov
out
in
pop
ljmp
stc
test
pop
cmpsb
in
push
mov
dec
sbb
notb
mov
dec
adc
xor
push
and
icebp
je
ret
jb
mov
jbe
sbb
mov
xchg
cmp
jo
aam
pop
divl
nop
cmp
cmc
lret
jae
adc
inc
iret
mov
push
and
jno
subb
cmp
int
lret
icebp
fs
adc
repz
das
lcall
mov
sbb
stc
outsl
jp
rclb
cmp
push
out
ret
mov
rorl
shl
or
inc
sbb
stc
je
cmpxchg
pop
cltd
aam
fbld
adc
dec
sar
push
mov
insb
sub
das
fisubs
sub
clc
sub
mov
jae
pop
xor
rcr
fdivl
cmp
cld
push
pushf
jl
scas
inc
daa
pop
repz
outsl
fistpll
popf
sub
push
aaa
lods
xlat
jb
add
or
add
sub
cmp
xor
jmp
push
cmc
leave
dec
roll
stc
lods
sbbl
leave
fnstenv
repnz
out
int
dec
out
insb
lods
sub
movsl
loope
rclb
ret
mov
aas
pop
mov
sbb
insl
push
sub
js
jb
mov
mov
jbe
fincstp
and
sbbl
push
lcall
stos
sub
sbb
je
pop
inc
sahf
and
jg
add
push
cs
xchg
inc
inc
fwait
dec
mov
test
insb
mov
push
call
push
push
aad
iret
or
xadd
lds
sbb
subl
mov
ds
push
fcoms
and
jo
int
pop
in
sbb
cmp
lahf
sbb
gs
xchg
arpl
lret
dec
pop
aaa
ror
xchg
jmp
sbb
xor
das
into
data16
inc
in
push
subb
outsb
mov
and
sub
pop
pop
add
push
pop
xchg
mov
push
ret
add
leave
push
jno
inc
shll
ucomiss
adc
out
lret
pop
cmc
cltd
mov
add
pop
pop
insl
int3
pusha
stos
add
js
aad
or
mov
mov
repz
and
jl
or
push
int3
adc
fcomps
sub
and
fisubl
ud1
mov
repnz
and
dec
fmuls
xchg
imul
sqrtps
pop
cmp
lcall
dec
or
test
stos
sbb
cmpsl
mov
inc
fimuls
jl
and
push
int
xor
sub
or
xchg
int
pop
outsl
dec
xor
jle
test
lds
call
xor
movsb
mov
or
rclb
out
addr16
mov
xchg
xor
sbb
pop
rcr
mov
ror
ljmp
push
xor
inc
shl
into
cmpsb
cmpsb
mov
pop
fmull
push
sbb
lods
in
or
stos
popf
decl
rcrb
xlat
jo
cli
add
and
add
dec
cmp
mov
add
inc
sti
iret
or
jb
test
mov
dec
int3
mov
sub
sbb
cmpsl
outsl
hlt
mov
sbb
pop
jg
cmp
leave
push
inc
jno
pusha
push
mov
cld
loop
enter
loopne
fsubs
and
xchg
sub
pop
imul
add
xchg
mov
xchg
cmp
xchg
js
bound
and
rcrl
mov
and
dec
sbb
pop
ss
outsl
mov
mov
in
test
clc
out
adc
loopne
mov
cmp
mov
push
out
xchg
mov
push
xchg
stos
jp
jns
xor
ja
dec
das
and
dec
xchg
js
xchg
aam
jno
pop
dec
or
xchg
jle
sbbl
sbb
repz
mov
cmp
in
rcl
mov
xor
mov
loop
clc
std
inc
pushf
push
adc
mov
mov
pop
xor
mov
xchg
aas
xchg
push
adc
jle
xor
dec
mov
mov
pop
pop
out
aad
lcall
fwait
dec
jmp
xchg
ljmp
imul
pop
xor
xorb
fchs
add
cmp
xchg
sti
or
jp
repz
cld
push
cmpb
fisubs
mov
lcall
das
or
jbe
shrl
mov
mov
into
imul
pop
insb
pop
ss
testl
adc
pop
addl
pop
adc
outsl
cmp
add
adc
sbb
and
or
add
out
nop
ljmp
stos
or
sub
xor
call
lods
push
aas
cmp
pop
pop
push
addr16
add
push
mov
cwtl
mov
in
data16
xor
pop
gs
pop
pop
inc
jg
sbb
jmp
shlb
test
dec
xchg
sarl
xchg
data16
jle
loopne
outsl
gs
pusha
xor
add
filds
mov
ds
iret
shll
inc
jmp
inc
inc
jle
movb
and
lcall
jnp
lods
jmp
or
pop
and
mov
outsb
cmc
jmp
xor
mov
out
nop
jae
or
ljmp
inc
fnsave
pop
fdivl
test
sub
xlat
popa
cmp
and
js
xor
push
push
adc
jp
mov
push
dec
sub
fiaddl
mov
mov
push
movsl
cmp
sub
cs
cmp
push
test
sbb
xchg
je
rolb
bound
ret
mov
cmp
add
cmpsl
stc
ret
int
jo
nop
popf
fstpl
sbbl
stc
lods
sti
pop
cwtl
xor
shr
lret
mov
cmp
mov
cld
in
clc
call
add
andl
mov
sbb
jmp
cmp
mov
dec
dec
imul
ds
lods
in
and
les
add
or
or
mov
imul
pop
mov
mov
test
out
adc
pop
std
adc
xchg
out
push
popa
jg
jbe
lea
lret
pop
or
popf
in
idivb
xor
adc
push
sub
jo
mov
push
testl
xlat
sbb
outsl
fsubs
inc
mov
jbe
add
add
sbb
xor
insl
mov
xor
js
shlb
stos
test
push
bound
aas
mov
push
aas
test
jno
push
leave
mull
cmpsb
fnstenv
xor
pop
cld
sub
mov
out
mov
add
dec
mov
jne
int
enter
fildll
das
in
cmp
cmp
mov
clc
xchg
ret
add
loope
pop
sub
cmp
pop
xchg
adc
into
push
inc
cmp
inc
js
push
or
adc
subb
clc
std
sarl
or
xchg
xchg
push
insl
dec
int
jecxz
dec
pop
push
repz
mov
push
xchg
xlat
ja
xor
sbb
pusha
pop
outsb
or
jne
mull
js
pop
das
call
dec
xchg
sub
mov
push
or
leave
roll
mov
and
cmp
jnp
sbbb
cmp
pop
add
mov
ds
sub
js
mov
jb
test
test
inc
imul
int
addr16
imul
jge
push
pop
sub
rol
in
mov
loope
pop
pop
mov
xchg
in
pop
icebp
inc
sub
fwait
xchg
loop
add
fildl
out
add
dec
push
popf
sub
mov
sub
addb
add
jle
popa
mov
leave
pushf
and
add
pop
andb
mov
adc
jns,pn
mov
adc
mov
imul
and
and
mov
test
fidivs
dec
mov
and
setle
inc
adcl
dec
popf
rcl
cmp
sahf
bnd
mov
pushf
sub
mov
in
stc
sbb
pop
pop
ror
insb
and
cmc
or
pop
or
movsl
pop
lret
addb
push
sub
jp
out
mov
lock
pop
les
sub
jnp
sub
sub
in
loopne,pt
dec
and
fbld
insb
std
dec
repnz
bound
fs
xor
or
inc
jmp
and
inc
pop
inc
js
std
sub
adc
cmp
gs
sahf
lret
aad
mov
mov
sub
jmp
dec
popf
addr16
and
xor
or
cmc
jno
xchg
addr16
inc
cmpsb
mov
loope
lcall
pop
mov
jns
and
inc
xor
mov
and
add
pop
sti
enter
sub
imul
in
and
xor
dec
pop
xor
div
mov
xchg
fwait
imul
repz
jmp
aaa
std
pop
pop
cltd
jno
gs
divb
inc
mov
jmp
iret
dec
lcall
mov
test
pushf
shll
mov
daa
pop
rorb
push
inc
stos
loopne
push
std
rcr
push
cwtl
rorb
mov
imul
jae
dec
orl
push
add
xchg
clc
mov
push
es
and
and
int3
movsb
dec
pop
in
shlb
jb
adc
ljmp
mov
outsb
add
addr16
loop
adc
mov
add
xchg
or
lods
rorb
push
gs
insb
aam
pop
adc
push
ud1
xchg
fstpt
pop
popa
pop
sub
jl
aam
mov
pop
sub
mov
aam
and
dec
rorl
dec
mov
rorl
add
pushf
mov
cmp
xor
or
mov
sub
jae
enter
jne
or
or
mov
lcall
mov
mov
in
sub
lds
pop
pop
sbb
dec
cmp
rclb
fmuls
push
push
mov
icebp
add
push
xchg
xchg
pop
sub
out
sub
nop
sub
and
cmp
sbb
dec
imul
cld
int
xchg
push
and
inc
pop
into
aaa
pop
mov
push
pop
sti
imul
dec
mov
rcrb
mov
aaa
cmp
mov
ds
pushf
inc
dec
stos
imul
add
cmp
std
call
aaa
sub
pop
dec
ret
and
jl
sub
adc
pop
adc
jo
stos
jg
push
and
je
sti
cmp
xor
xchg
or
lods
je
pop
mov
ret
das
pop
ljmp
inc
adc
add
pop
out
lcall
jb
sbb
pop
popa
test
jae
test
push
test
shrl
pop
stc
mov
push
andl
arpl
es
pop
arpl
sti
sbb
insl
inc
aam
push
xor
in
lret
mov
xor
lahf
loope
out
repz
repnz
cmp
aam
fs
cli
scas
mov
fs
popa
cmpsl
xchg
ss
adc
inc
call
cmp
pop
xchg
es
daa
jne
sub
adc
lock
sbb
lods
cltd
fmull
cmpsb
shrb
sbb
jne
out
mov
jmp
push
cmp
int3
push
mov
mov
cmp
inc
pop
xor
add
cwtl
cmpsb
sahf
fcoml
rol
fldenv
push
ss
aas
sbb
cs
outsl
xchg
js
sub
pop
xor
jbe
mov
repnz
or
push
xchg
lret
xchg
mov
lods
push
fmul
and
inc
out
add
cmp
rcrb
mov
mov
fadd
sub
data16
xor
jb
loope
jecxz
ds
pop
ljmp
xor
push
jb
ret
dec
and
pop
dec
into
les
pop
adc
pop
out
mov
jb
mov
in
rcr
repz
mov
mov
push
sbb
je
add
scas
rorb
mov
pop
mov
sbb
movsl
xor
dec
dec
ret
sbb
mov
mov
and
dec
xchg
test
xchg
aam
cmp
mov
mov
pop
into
cmp
scas
das
lock
out
jnp
rcrl
stc
dec
or
and
sarl
idivb
mov
xorb
mov
sbbb
add
clc
or
sbb
lods
xor
pop
repz
fdivp
dec
lds
xor
cmpsl
aaa
jle
add
insb
adc
dec
mov
in
ja
xchg
inc
jge
test
mov
gs
or
lea
fadds
and
gs
cltd
xchg
inc
lret
sbb
and
lret
lret
add
and
bound
jno
sti
nop
sbb
leave
mov
jnp
rorb
imul
daa
or
xor
push
cmp
insb
mov
into
or
dec
adc
imul
shrb
es
mov
mov
pop
fs
inc
dec
fdivs
xchg
sub
je
filds
roll
daa
adc
pop
ja
pop
pop
cmp
fwait
movsb
sbbb
pop
mov
stc
xor
sbb
outsl
and
adc
dec
inc
sbb
inc
repz
dec
sub
or
adc
inc
and
test
add
adc
pop
sbb
es
rclb
jmp
pop
mov
jno
sbb
xor
mov
push
hlt
xchg
insb
jle
cs
psraw
cmpxchg
xchg
loop
lahf
scas
mov
push
daa
lds
cld
cmp
cmp
xlat
cmp
fwait
pop
jp
aad
fstl
jbe
outsb
int
mov
into
inc
popa
mov
adc
and
cmp
mov
or
add
mov
sub
outsb
pop
or
push
jo
mov
cmp
sub
jge
cmp
test
cmp
inc
hlt
out
dec
scas
insl
lods
jp
in
fiaddl
clc
lcall
cli
sbb
or
mov
ss
mov
notb
push
add
xchg
gs
call
imul
cmp
xchg
pop
loopne
movsl
jne
out
les
dec
or
cld
ss
negl
pop
mov
mov
jmp
scas
ret
aam
movb
jp
and
ljmp
das
dec
movsl
push
ja
lods
fwait
push
lock
xchg
rclb
adcb
mov
inc
into
mov
jne
jge
add
fadds
sub
pop
xor
xchg
roll
adc
icebp
push
add
mov
mov
sbb
dec
dec
iret
imul
out
jle
sub
adcb
pop
jb
imul
clc
push
add
add
insb
mov
cli
push
enter
ret
inc
stc
mov
mov
mov
pop
xor
push
mov
add
imul
lcall
leave
shld
add
push
xchg
inc
cmc
js
mov
xchg
xchg
dec
add
dec
adc
shlb
loope
popf
fidivrl
sbb
pusha
jo
inc
mulb
in
push
fnsave
loope
scas
xor
pop
dec
jne
pop
in
jno
xlat
popf
stos
out
pushf
sti
adc
cs
pop
cmp
popf
xor
sbb
mov
and
xchg
pusha
fldln2
push
adc
push
mov
movsl
mov
jae
pop
andb
jmp
jp
ss
cmc
or
mov
mov
dec
ds
pop
imul
fidivrs
fists
add
gs
adcl
pop
mov
data16
int
loopne
xchg
cmp
and
inc
and
add
addr16
in
call
pop
loop
ljmp
xor
inc
xchg
push
and
push
xchg
jl
psubsb
je
movsl
cs
add
push
and
sub
frstor
jbe
mov
jnp
int3
lods
push
cltd
pop
aam
sub
leave
dec
icebp
xor
fistps
cmp
and
and
mov
loopne
mov
notb
dec
cmp
jns
stc
sarb
mov
mov
repz
inc
pop
pop
pop
cltd
sub
mov
pop
lock
gs
faddl
inc
sbb
ret
xor
pop
push
mov
xor
mov
out
cmp
nop
adc
mov
sub
xchg
jne
stos
lret
mov
xor
mov
fwait
call
inc
or
jae
jmp
fdivrs
lret
test
scas
cmp
dec
imul
hlt
pop
cli
outsl
jg
movsb
cmc
push
xlat
enter
dec
loop
and
into
and
sub
xchg
and
xor
hlt
cmp
mov
fidivrl
pop
bound
xor
mov
and
lock
lret
inc
cmp
mov
ret
outsb
push
and
adc
lret
orb
dec
sbb
dec
push
dec
push
out
les
iret
jno
lods
push
push
shll
push
sub
jmp
mov
fadd
lahf
push
mov
lret
leave
jp
pop
mov
hlt
popl
pop
hlt
popf
lret
sub
popf
aad
imulb
ss
lahf
in
imul
sbbb
sub
push
out
out
cmc
jae
jmp
movsb
cld
mov
addw
imul
mov
pop
out
out
xor
ja
lret
ss
push
in
cmp
mov
xlat
fcomip
jb
mov
jg
bound
jge
jg
xor
les
jle
sbb
sti
mov
std
mov
pop
mov
inc
mov
cmpsb
and
in
push
ret
mov
xchg
repnz
lock
add
xor
repz
ljmp
mov
int3
xchg
mov
ss
bound
rolb
xchg
cmp
mov
into
add
bound
dec
mov
mov
lret
loopne
push
je
sarl
outsl
mov
dec
iret
mov
mov
int
cmp
shll
mov
das
jbe
cld
pop
imul
lahf
cwtl
scas
sti
out
xlat
adcb
loope
jo
lock
mov
push
stos
push
xchg
add
repnz
add
movsb
jge
andb
stos
and
das
push
data16
into
popf
sub
sub
pop
insb
sbb
dec
cmp
jo
sub
jmp
in
sbb
orl
loop
lret
dec
sub
fmul
mov
lds
loope
sub
pop
sarb
int
add
test
xor
stos
cmp
xlat
out
imul
hlt
popl
loope
jo
sub
pop
repz
pop
or
les
int3
cmc
mov
add
movsl
cmp
enter
in
adc
sbb
jae
in
in
lret
jb
cmc
xlat
in
push
ja
add
mov
mov
xchg
rep
hlt
jmp
add
fldcw
inc
xchg
sub
mov
scas
sarb
ds
xor
cmp
daa
in
aad
dec
xlat
pop
and
pop
sub
ss
ret
adc
lods
pop
pop
orl
pusha
outsb
add
fisubl
arpl
imul
jb
ss
jbe
xchg
mov
cmp
scas
xor
jp
lods
dec
or
jo
loop
dec
push
pop
lahf
ja
pop
dec
leave
push
add
faddl
out
push
imul
mov
loope
fstp
xchg
dec
pop
daa
pop
je
jnp
jecxz
jecxz
icebp
dec
scas
testb
push
loope
testb
fcoms
and
dec
xchg
rorl
push
test
jge
sti
shll
in
loopne
cmp
sti
insl
hlt
push
xchg
cmpsb
gs
aad
mov
mov
ljmp
loop
sbb
push
or
call
enter
fistpll
mov
mov
sahf
adc
je
jmp
cmpsb
cwtl
jecxz
leave
jns
mov
dec
stos
sbb
loopne
mov
cmp
dec
sub
sbb
or
mov
and
pushf
jbe
insl
push
sbb
mov
cmp
mov
stos
adc
jne
stos
in
mov
jns
cmc
mov
into
push
ret
mov
mov
sub
movsb
fs
fcmovnu
adc
push
jmp
mov
pop
or
adc
sbb
clc
sbb
rol
dec
sti
hlt
addb
jl
data16
xor
out
dec
idivb
adc
jb
jb
xchg
scas
push
add
ss
lret
rcrl
ljmp
xchg
mov
cmp
dec
lret
arpl
inc
mov
mov
xor
loopne
xor
das
ss
push
js
nop
lcall
xchg
mov
mov
add
xchg
imul
push
dec
pop
sbb
mov
inc
data16
mov
dec
mov
mov
push
rcll
add
dec
dec
cmp
cpuid
mov
test
filds
mov
nop
enter
xchg
add
shl
xchg
hlt
out
xchg
add
dec
dec
and
jae
cmc
adc
lahf
xchg
out
xchg
addr16
sbbl
neg
jae
mov
flds
add
push
jp
int
mov
lock
mov
mov
fs
aad
mov
std
or
sbb
mov
aad
and
jns
hlt
or
mov
rol
sbb
mov
or
cmpsb
cltd
xchg
mov
dec
enter
inc
mov
and
jns
and
mov
lea
adc
out
ficoms
cld
mov
ss
out
sub
xchg
xchg
add
cmp
leave
cmp
out
lsl
xchg
icebp
lea
sub
mov
sub
out
dec
mov
push
sub
pshufw
jge
nop
insl
aad
push
pusha
scas
push
push
cmp
addr16
inc
mov
jg
cmpl
jp
icebp
adc
clc
outsl
xchg
add
rcl
outsl
xlat
xchg
pop
xchg
jnp
clc
jecxz
xchg
adc
xchg
mov
pop
ftst
push
pop
xor
cmp
daa
push
mov
mov
insb
mov
int
and
cmp
into
stos
jp
mov
pushf
or
mov
arpl
push
push
push
pop
pop
push
andb
lret
repz
test
ret
stc
das
in
jb
xorl
sub
rorl
cmp
jg
cmp
hlt
scas
in
fsubs
aas
les
jmp
push
popa
daa
add
ret
shlb
sbb
mov
mov
add
xchg
loop
or
push
orps
lret
push
pusha
and
pop
or
pop
ret
negb
rcll
pop
and
push
cmp
push
cmpsl
mov
inc
movsb
mov
sbbl
or
cmpsl
dec
push
inc
insl
add
cmp
jg
pop
insl
stos
or
adc
or
dec
mov
xchg
loop
call
test
bound
fwait
in
xchg
negb
xor
mov
scas
movsl
and
dec
jo
cmp
and
sahf
js
cli
sbb
adc
test
adc
mov
inc
into
inc
push
adc
mov
stos
enter
inc
add
mov
inc
or
push
nop
adc
push
xchg
nop
sub
or
mov
jo
mov
mov
rolb
lea
mov
or
sahf
push
ja
mov
mov
add
jp
outsb
cmpsb
dec
xlat
or
in
mov
mov
aad
or
cmc
jbe
pop
and
pop
hlt
jno
pop
pop
jae
sahf
call
fstps
repz
mov
imull
jnp
mov
popa
ljmp
vpmulhw
pop
and
loop
stos
fsubr
lret
test
sahf
mov
aam
test
cmp
addr16
inc
mov
jle
xor
sbb
add
aaa
xchg
movsb
mov
fucompp
sbb
mov
mov
dec
push
sbb
mov
ds
mov
loop
clc
sbb
cmc
and
je
and
cs
jbe
mov
cmp
mov
divl
incb
sbb
in
pop
popa
xor
adc
mov
adc
lods
adc
dec
add
out
mov
stos
xchg
in
inc
lcall
xchg
shlb
jmp
ja
lods
es
jae
add
stos
das
add
pop
mov
hlt
pop
xchg
test
fdivrs
mov
push
xchg
test
pusha
pusha
call
pop
push
hlt
push
push
cltd
pushf
aaa
in
xor
test
xlat
stos
jp
mov
xchg
int
insl
xor
in
pop
pop
testl
subb
push
pushf
dec
hlt
xchg
stos
popf
jp
mov
mov
xor
into
js
mov
xlat
pusha
or
fistpl
insl
nop
data16
stos
cmp
jecxz
jmp
adc
icebp
aaa
add
mov
fldenv
outsb
jnp
dec
adc
repnz
lods
push
fcoml
rcl
roll
arpl
mov
lock
je
jle
pop
sbb
lods
imul
xchg
ja
sbb
mov
cwtl
les
pop
mov
and
adcl
mov
cmpsl
adc
push
sub
fstps
sbb
and
or
pushf
or
sub
xchg
mov
stos
cmp
pushf
inc
lcall
xchg
popa
mov
sahf
pop
pushf
pusha
and
sahf
out
movsl
imul
fiadds
rorb
sub
fnsave
cmpsl
push
mov
jmp
or
sub
xlat
mov
nop
rep
sub
xchg
shlb
ret
scas
cld
push
js
mov
in
inc
outsb
add
lea
push
mov
je
int
mov
rorl
mov
sub
xor
mov
rcrl
lods
insb
push
sbb
sbb
and
push
jnp
jg
and
insl
mov
daa
or
inc
repnz
push
xchg
enter
sub
cs
mov
fstps
sbb
ret
xchg
lret
sbb
xchg
addr16
lock
pop
int
pop
mov
sub
sub
fdivl
pop
lods
insl
mov
mov
mov
xchg
cltd
pop
rcr
test
rcll
aam
or
jbe
and
ror
and
jne
jae
fwait
pop
push
insb
mov
jmp
or
jbe
stos
push
mov
mov
and
mov
loope
in
add
into
shll
xchg
shl
scas
sub
fsubr
push
arpl
adc
dec
movsb
mov
inc
fs
and
sbb
mov
test
jno
repz
gs
cs
lcall
inc
push
and
and
jnp
mov
xor
xor
call
lret
and
xor
xchg
lds
icebp
cmp
jne
push
mov
cld
outsb
mov
pop
hlt
stc
inc
es
or
push
pop
xor
push
pop
icebp
cmp
nop
jl
inc
xor
push
dec
fucomi
jle
aam
out
push
imul
out
in
xlat
sub
subb
mov
adc
pop
push
xchg
ja
movsl
pop
mov
adc
test
add
xchg
insb
mov
fildl
lahf
out
mov
xor
subb
aad
jmp
jnp
jbe
pop
js
add
shll
sbb
or
adc
negl
jmp
mov
add
sub
rorl
aad
mov
lods
jle
fldl
sahf
push
rcll
movsb
pop
cli
rclb
das
pusha
lret
pop
in
adc
repnz
cmp
xlat
or
mov
sbb
add
inc
leave
call
xchg
leave
mov
sub
fwait
cmpsl
fwait
popf
mov
ret
aaa
insl
cmp
pop
or
xor
pop
cmp
int
loop
mov
cmpsl
inc
xchg
int
inc
loope
mov
or
xor
scas
nop
push
adc
lahf
sbb
inc
inc
fmuls
sbb
lock
jg
pop
je
cmpsl
loop
inc
jbe
aad
add
out
jmp
sbb
pop
pop
mull
call
testb
inc
add
mov
popf
jnp
push
add
in
cs
sub
inc
cmp
xchg
add
jne
jae
call
in
mov
negb
std
xchg
rcl
adc
fimull
add
jecxz
arpl
inc
mov
je
pop
cwtl
cwtl
rcrl
sbb
out
mov
out
mov
jmp
loopne
popf
inc
jp
pop
stos
cli
std
rclb
add
jbe
cmp
xorb
mov
and
push
pop
sub
mov
jge
aaa
pusha
lds
xor
mov
cmc
out
mov
test
aad
dec
dec
xchg
inc
out
and
in
mov
mov
daa
push
in
cmp
mov
mov
movsb
jp
clc
add
mov
dec
jae
add
sbb
sbb
or
pop
jl
jg
cli
shrb
gs
repz
or
outsl
push
pushf
jbe
inc
adc
add
hlt
mov
pop
shlb
push
loope
inc
xchg
xchg
mov
ds
jmp
pop
loopne
pusha
fsub
jle
mov
dec
out
jns
push
es
and
pop
xor
mov
adc
jo
sbb
add
jnp
mov
cmpsl
mov
jle
pop
pop
hlt
or
dec
adc
ja
mov
ja
lcall
pop
fld
jmp
ret
mov
mov
sbb
hlt
aas
sub
test
arpl
sbb
adc
push
adc
sar
or
push
in
cltd
iret
mov
pop
out
or
jae,pn
sbb
adc
fwait
xchg
icebp
mov
mov
xor
adc
cmp
add
cmp
push
dec
jno
add
and
rcrb
ja
aaa
sbb
pop
xor
les
sbb
xchg
xchg
push
cli
hlt
mov
imulb
mov
cmpsl
pop
rclb
dec
push
cmp
rcr
xchg
push
cmp
movsl
sub
nop
mov
repnz
das
insl
imul
jg
cmp
or
push
int
xchg
cmp
sarl
lret
and
push
sti
adc
push
dec
aad
fidivs
fwait
adc
mov
push
mov
cmp
fidivrs
outsl
sub
lret
imul
addl
xor
pop
pop
in
mov
mov
push
imul
add
aam
cld
mov
imul
push
lahf
jnp
add
stos
ficoml
mov
jl
aas
test
mov
in
das
mov
shll
adc
sbb
adc
xor
mov
sbb
outsb
popf
ret
mov
stos
push
jmp
mov
fwait
push
jae
andl
push
in
xor
add
stos
push
push
test
out
jl
jmp
aad
and
popf
xchg
leave
in
jmp
add
pop
dec
pop
sub
dec
rorl
ret
xorl
int
adc
or
in
inc
pop
or
lea
fdivrp
insb
and
out
or
das
and
lret
sub
xor
inc
scas
data16
cmpl
and
add
es
stc
in
loopne
out
ds
gs
push
cs
clc
xor
and
mov
cmp
inc
loope
outsb
in
stos
xchg
cmpsb
mov
test
and
push
sbb
inc
inc
ss
jnp
out
pop
cs
mov
dec
lahf
adcl
and
add
sub
xchg
cmp
popf
inc
outsl
jbe
mov
mov
popa
stc
add
popf
push
out
std
jne
mov
fmul
test
xchg
fstl
imul
mov
loopne
adc
lods
dec
test
adc
jge
cmp
jne
push
sub
ss
or
inc
dec
arpl
mov
sbb
lods
sbb
xchg
imul
mov
sahf
popa
out
jae
push
fwait
out
lds
add
xchg
push
mov
insb
push
xor
fwait
cmp
repz
cmp
cmp
cli
pop
jnp
adc
cmpb
adcl
pop
add
inc
adc
ficomps
shlb
je
pop
sub
sti
cmp
bound
aam
into
fs
sub
iret
movsb
inc
add
mov
nop
push
out
inc
dec
pop
pop
and
xchg
jne
loop
mov
int
xor
ret
aaa
repz
lds
cltd
jl
xchg
sub
dec
arpl
pop
movsl
sbb
hlt
jae
mov
sbb
shrl
mov
dec
xor
mov
mov
dec
push
frstor
lea
pop
lock
or
fdivrl
fistl
out
or
rsm
jp
js
mov
repnz
das
cmp
stc
cmp
ljmp
jecxz
call
xchg
xchg
iret
pop
pop
push
and
mov
sbb
cwtl
shll
xchg
inc
sbb
mov
cmpsl
lcall
dec
sub
sbb
push
xor
inc
xor
cs
in
rcll
and
dec
imul
adc
incl
inc
mov
push
aaa
std
dec
ud1
add
sti
add
cmp
scas
sarb
shrl
popa
pop
xor
mov
cmp
stos
xorb
je
outsb
or
adc
and
pop
pop
pop
or
insl
jae
lea
sbb
push
sbb
sub
sbb
orl
sarb
xor
xchg
jns
js
lret
out
cmp
cmc
movsl
movsb
lret
xor
les
in
sbb
adc
out
dec
jae
inc
bound
mov
cli
inc
rorl
icebp
cmp
lcall
dec
sub
pop
scas
xor
and
ret
xor
xlat
push
nop
push
jge
cmc
sbb
jp
add
inc
push
and
shrb
mov
aaa
insl
rclb
sahf
sahf
lret
or
cmp
and
adc
sub
test
jle
mov
sbb
data16
xor
sbb
into
jae
hlt
in
mov
dec
bound
or
xchg
inc
mov
mov
fwait
outsb
push
lds
cmpsb
repz
dec
imul
addl
lods
adc
pop
or
sbb
loop
push
add
push
stc
leave
addr16
mov
dec
scas
xor
repz
jge
into
stc
fisttpl
addl
xor
jge
sub
mov
inc
push
dec
stos
sbb
in
outsb
xchg
bound
es
mov
inc
cld
test
out
jns
popf
sahf
sbb
sahf
jo
pavgw
sbb
adc
cmp
adc
sub
cmp
out
xchg
cs
aas
clc
outsl
addr16
jne
xor
addr16
xchg
xchg
xchg
add
scas
mov
mov
add
popl
pusha
shll
inc
cmp
test
bnd
stc
out
repnz
pushf
clc
lock
scas
xchg
loop
ja,pt
outsb
insl
pop
cmp
xchg
repz
or
stos
adc
inc
shll
inc
popa
push
pop
int3
dec
lods
cmp
ret
pop
push
ljmp
dec
add
popf
mov
mov
mov
movsl
inc
in
aam
xchg
jno
rcr
mov
aam
int
sahf
inc
and
addl
mov
pushf
mov
push
and
loopne
mov
fdivrp
or
sbb
jp
xchg
fisubl
das
imulb
fwait
jno
cs
push
movsl
inc
cli
xlat
aaa
push
js
repz
pop
stc
mov
and
and
pop
fs
adc
stos
test
pop
nop
inc
imul
mov
imul
add
dec
and
lea
test
push
sbb
int
sub
dec
repz
shl
adc
iret
push
push
jl
pop
out
sub
mov
loopne
add
scas
lcall
or
mov
mov
jnp
push
push
scas
jl
jnp
xchg
lock
and
pushf
pop
jae
cli
dec
cs
cmpsb
push
les
pop
imul
push
fnstenv
hlt
jge,pt
je
jmp
push
ret
lods
mov
pop
sub
in
jecxz
fs
lock
jp
test
ljmp
repnz
ret
xor
mov
xchg
adc
jno
jb
clc
push
les
xor
mov
shll
lock
ljmp
cmp
in
jb
popf
ss
xchg
aad
and
xchg
vmwrite
testl
cmp
jb
fists
pop
sub
lods
and
je,pt
mov
in
test
mov
rcll
stc
mov
inc
lret
fxch
decb
xchg
ret
in
shlb
scas
outsl
popf
pop
imul
repz
mov
in
fisttpll
divb
mov
xlat
int
adc
dec
mov
xchg
add
fldcw
out
leave
out
fcmovnu
cld
je
pop
mov
cmpsb
call
adc
jl
mov
pop
data16
xor
repnz
jo
mov
ret
lcall
pop
and
sbb
rorl
out
push
mov
out
repz
jl
jno
outsl
enter
xchg
jnp
jmp
idivb
fldcw
push
in
loopne
adc
out
test
push
lock
fnstsw
dec
lock
cli
sbb
mov
add
popa
stos
pop
lods
inc
stc
push
subb
repz
fdivs
mov
aam
scas
ret
rcr
push
test
pop
cmc
pop
cmp
mov
repz
shlb
mov
xchg
daa
pop
aaa
in
stos
test
cld
cmp
jnp
sbb
lock
mov
rorl
mov
xchg
adc
ja
scas
mov
add
stc
xor
sub
inc
sarl
mov
cmp
mov
pop
or
cmpsb
mov
or
insb
dec
mov
hlt
stc
add
push
or
cmp
inc
clc
test
shr
jle
lea
jbe
fldcw
cmc
inc
pop
fwait
cmpsb
xchg
ss
and
jge
sbb
mov
inc
pop
sahf
ret
movsl
cmp
xchg
out
pop
mov
jae
cwtl
mul
pusha
lock
add
cmp
repz
xchg
mov
jmp
je
out
test
cmpb
lock
pop
and
jmp
mull
outsl
dec
addr16
stc
inc
scas
jl
sub
adc
and
push
neg
sti
movsl
jp
xchg
push
pop
daa
fstpl
adc
out
insl
jecxz
mov
mov
mov
sarl
shlb
and
pop
pminsw
adc
rclb
and
rorb
cli
mov
jno
pop
add
ds
adc
cmp
xor
fidivl
inc
ret
stos
xor
sbb
rclb
imul
cmpsl
loopne
std
inc
test
sti
xor
push
xor
add
jmp
mov
cld
xor
lods
test
jge
cmp
dec
xchg
sub
arpl
cltd
fdivr
or
lods
out
rclb
dec
je
xchg
push
lds
andb
pop
xchg
test
loopne
jae
mov
lea
hlt
pop
jmp
push
pop
in
pop
movsb
or
cmp
das
pushl
sub
inc
test
addr16
shlb
and
jnp
lds
sub
ret
imul
gs
es
sub
popa
lock
lods
je
test
mov
aad
lods
adc
or
inc
and
mov
dec
sbb
fnstcw
jg
sub
mov
xchg
cwtl
lcall
jbe
or
xlat
clc
or
add
mov
push
push
adc
mov
fwait
daa
stos
add
loopne
roll
jnp
mov
nop
mov
mov
inc
mov
inc
popa
fs
xchg
aam
jb
pusha
inc
jl
pop
imulb
or
pusha
jae
add
jbe
and
sbb
or
gs
jl
aad
push
mov
or
push
lret
push
mov
sti
rcrl
sub
das
shl
mov
pop
inc
jo
ficompl
inc
or
data16
fwait
shlb
fmuls
insb
pop
shlb
push
ds
cli
pop
add
xchg
ljmp
cmpsl
sub
push
pop
int
or
cwtl
jbe
pop
dec
ds
sub
hlt
sbb
push
std
cmpsl
mov
arpl
scas
movb
fs
insb
xlat
ret
sbb
push
mov
push
and
in
icebp
or
or
clc
mov
push
es
pop
rclb
insb
mov
testl
sub
lods
xor
enter
pop
inc
inc
movsb
cmp
dec
xchg
push
test
cmp
mov
repnz
pusha
xor
inc
or
leave
mov
std
sbb
pop
jbe
movsb
push
xchg
lret
mov
cmpb
cs
shrb
jo
arpl
mov
inc
mov
out
mov
fstpt
inc
nop
dec
jmp
lods
pop
inc
dec
add
mov
movsl
jmp
xchg
loope
dec
loopne
test
fucomp
rclb
adc
imul
test
xlat
pop
pop
add
or
faddl
lods
xor
push
enter
fildl
rolb
add
pop
sub
jg
jg
inc
inc
repz
shrl
stos
rcrb
sbb
outsl
lahf
popf
push
push
jns
outsl
mov
lret
int3
sbb
sar
mov
outsb
ja
mov
dec
sbb
xor
adc
pop
aad
dec
pop
cmp
add
pop
cs
ja
bound
xlat
fwait
pop
loop
add
and
stos
cmp
stos
mov
fcoml
ds
mov
pop
dec
pop
mov
lret
mov
in
jae
xchg
cwtl
in
pop
stc
loop
xchg
arpl
xchg
test
imul
jle
xor
mov
imul
jmp
ja
inc
mov
xor
push
push
in
mov
jbe
imul
push
push
and
adcb
das
adc
incb
movsl
sar
sbb
mov
icebp
in
das
cli
fucomi
inc
movsl
jno
in
jmp
popa
mov
enter
popa
sahf
cli
xchg
lret
hlt
push
sarb
xchg
ret
gs
out
cmp
xor
dec
cmc
or
inc
testb
mov
addr16
pushf
stos
cmc
add
jg
dec
pusha
scas
in
outsb
repnz
fstpt
in
add
fdivp
inc
and
sub
adc
pop
rcrb
or
mov
mov
push
sub
and
and
xlat
int
xchg
add
call
aad
pop
pop
rorl
js
mov
xor
cmp
add
push
push
mov
mov
movb
int
stos
add
jo
loope
dec
in
and
inc
cltd
mov
cmp
cwtl
pop
movsl
aas
insb
mov
add
mov
xor
aaa
inc
mov
cmpsl
lea
mov
pop
and
cli
mov
data16
test
xchg
jo
jecxz
jp
leave
push
cmc
cmp
mov
imul
int3
out
mov
push
adc
xchg
lret
pop
jecxz
repnz
movsb
cmpsl
sbb
dec
in
jo
jg
cmp
lret
or
xlat
icebp
dec
or
mov
push
dec
movsl
movsb
inc
and
imul
ret
sahf
sbbl
imul
mov
lods
push
xchg
dec
gs
movsb
xchg
inc
or
xchg
addr16
pop
or
push
dec
and
gs
cltd
jg
insb
je
lret
adc
add
push
arpl
int
stos
out
bound
ret
add
aaa
addr16
mov
loop
mov
mov
hlt
lods
xchg
jge
pop
mov
mov
subl
addr16
jbe
test
and
mov
cmp
xchg
push
xor
and
or
push
cli
jl
outsl
test
shlb
mov
outsl
dec
sbb
mov
cltd
inc
sub
and
sub
push
pop
xor
or
jmp
bound
dec
pushf
mov
inc
cld
outsl
jle
pop
mov
xor
sub
push
lock
imul
repnz
out
pop
sub
pop
xchg
aam
xchg
stos
ljmp
sbb
jge
dec
ss
cs
adc
push
fnstsw
pusha
mov
mov
gs
aad
enter
push
insl
out
test
jnp
mov
call
rorl
push
je
lea
adc
push
pop
popa
add
in
add
sub
xlat
cmp
fwait
inc
jecxz
dec
hlt
and
aad
push
ljmp
cli
push
push
sbb
das
inc
cld
rorl
dec
enter
jb
dec
lret
jl
push
in
loopne
mov
mov
je
dec
push
ja
movsl
cli
rorl
add
shlb
and
ret
pop
cwtl
xchg
movsl
jmp
jmp
push
jne
pop
loope
js
cltd
push
fiadds
gs
mov
aas
enter
jno
jg
std
sub
pop
cmc
fdivrl
sbb
loop
adc
repz
push
fbld
and
xor
sub
lret
lret
inc
loopne
dec
fisttpll
push
outsb
lods
fadd
fstl
pushf
mov
push
movsl
sub
hlt
arpl
lods
jmp
sbb
daa
push
outsl
mov
repnz
mov
mov
inc
push
push
fwait
into
lds
cmc
pop
inc
jae
test
data16
or
dec
in
cltd
inc
mov
mov
adc
adc
mov
fwait
mov
sbb
ljmp
dec
and
nop
mov
xchg
push
cmp
mov
mov
sbb
mov
movsl
mov
in
mov
push
inc
bound
inc
and
ss
or
out
call
lods
lret
inc
pop
lahf
xchg
mov
add
cwtl
stos
testl
xchg
dec
mov
mov
das
jl
insb
mov
mov
pop
test
push
lahf
cli
push
testl
fldcw
push
adc
aaa
and
pop
mov
mov
enter
pop
inc
or
xchg
jge
mov
sub
addb
loop
pop
add
pop
push
pop
and
cmp
xchg
icebp
sub
jns
fwait
popf
aad
ds
enter
out
out
sub
xor
adc
adc
int3
jmp
ss
fs
cmpsb
pop
lcall
pop
ss
jge
loopne
inc
filds
or
sub
jge
jno
mov
cmp
imul
and
loope
push
negl
xchg
push
pushf
sahf
into
loopne
stos
inc
clc
adcl
or
mov
lds
cmp
jbe
push
push
mov
mov
or
pop
xchg
dec
xor
out
arpl
out
cmp
and
push
cmp
push
and
cmp
mov
fsubrs
push
mov
stc
icebp
in
inc
dec
add
mov
and
hlt
mov
mov
mov
subl
push
inc
leave
inc
push
pop
aaa
sbb
adc
outsl
loope
sub
daa
movsb
mov
xchg
mov
repz
pop
xor
std
xchg
add
push
sub
mov
jne
mov
add
sub
icebp
cmp
pop
out
popa
cmp
test
clc
aaa
cmpsb
imul
mov
dec
sub
add
cmp
xlat
dec
lcall
aas
pop
cmpsb
add
insl
mov
push
leave
and
sbb
sub
call
inc
add
mov
mov
ja
cmp
loop
push
ret
aam
cld
inc
jmp
in
data16
loope
leave
cld
das
nop
ljmp
jl
dec
mov
dec
add
pop
or
or
or
leave
sub
aaa
jp
mov
dec
hlt
adc
in
dec
hlt
sbb
xchg
imulb
push
sbb
mov
cmc
mov
jb
ret
dec
mov
mov
ds
pop
pop
rolb
int
xchg
dec
stos
mov
js
aas
lods
icebp
xchg
dec
add
lahf
cwtl
ljmp
daa
pop
neg
xchg
lcall
test
outsl
outsb
cmp
stos
adc
add
xor
loope
sbb
inc
lds
cwtl
lods
xchg
test
cmp
push
inc
xchg
jge
push
aaa
lret
jp
negl
dec
fildll
out
movsb
and
lret
es
fcmove
cli
lcall
and
ja
xchg
jg
sbb
notb
adc
mov
outsl
pusha
fucomip
mov
fsubs
xlat
ret
jbe
add
rorb
loop
jl
out
dec
cmp
std
scas
sub
cmpsl
jecxz
add
daa
sub
pop
cmp
cmp
loope
or
test
stc
or
pushf
addr16
cmp
sub
xchg
sub
hlt
je
xchg
xchg
les
repz
xor
out
sahf
in
sbb
inc
repnz
int3
add
sti
sub
push
add
push
jbe
mov
nopl
add
jbe
out
xor
dec
popa
push
ss
aaa
pop
cmp
pop
add
clc
push
pop
mov
insl
add
das
shll
clc
xchg
fdivrs
or
push
js,pt
movsb
adc
ss
mov
xchg
cmp
iret
js
daa
xchg
scas
pop
pop
jle
aas
loopne
mov
bound
inc
ret
dec
add
jns
movsb
add
das
cltd
loop
xchg
imul
clc
lcall
push
jecxz
repz
scas
popa
outsl
fistps
in
fisttpll
inc
add
popa
stc
in
inc
cmp
and
test
cmpsl
jge
movsl
bound
mov
test
lret
dec
lret
mov
gs
test
in
and
adc
inc
sarb
push
push
sti
or
pop
out
in
test
push
mov
sbb
add
sbb
fwait
cs
mov
pop
or
in
mov
aad
push
cmp
and
or
pop
popa
mov
jl
cmp
jge
mov
das
testb
fldcw
mov
xchg
shr
std
adc
fcmove
mov
fstp
cmpl
fildl
cld
into
mov
push
push
push
test
iret
inc
sub
inc
mov
iret
out
cmp
dec
popf
rorl
dec
testb
adc
movsl
loope
imul
sahf
aaa
adc
repz
push
mov
addr16
pusha
jo
adc
cld
sarl
xor
pushf
mov
test
pop
leave
insl
mov
daa
cltd
aad
and
data16
cmp
imul
lret
push
push
sbb
fmuls
mov
std
or
cmpsb
ja
inc
ret
dec
jne
or
mov
xor
inc
shll
push
pop
rorl
push
mov
push
ret
fbstp
inc
pop
imul
lea
loopne
and
sbb
faddl
mov
popf
pop
add
test
push
clc
ret
xor
repnz
mov
rolb
call
cmc
mov
inc
daa
sub
push
cmp
cmp
dec
ret
push
ret
dec
jae
jnp
scas
aad
and
mov
test
insl
dec
jecxz
xchg
push
xor
sbb
and
rorl
xchg
jae
mov
call
jp
sti
mov
dec
lahf
leave
jae
aad
gs
in
cld
mov
out
clc
pop
ss
rcll
popf
shll
sub
jae
inc
decb
xchg
cltd
leave
test
xor
int3
mov
je
pop
mov
xlat
mov
test
movl
sbb
lock
sbb
insl
add
jns
xchg
mov
pop
cwtl
inc
jne
out
je
pushf
xchg
loopne
or
mov
mov
cmp
adc
sub
bound
xor
js
aas
ret
mov
scas
push
jno
lods
ss
testl
cltd
inc
loope
xchg
in
popf
loop
and
mov
push
scas
jae
loopne
push
cs
jns
mov
mov
loop
out
pop
jae
rcrl
loope
inc
sub
lcall
pop
test
popf
mov
int
mov
mov
xchg
xchg
push
fildll
in
and
dec
push
bound
test
sbb
cmp
xor
dec
or
jo
xor
push
dec
popf
add
push
xor
icebp
lahf
pop
jle
pusha
cwtl
xchg
jne
pop
rolb
shlb
dec
sbb
mov
imul
daa
jb
cmova
test
fidivrl
sub
fildll
mov
aaa
and
sub
dec
push
dec
fnsave
mov
inc
adc
mov
jae
and
mov
in
mov
bound
xchg
scas
cmpsl
movsb
jne
lock
jns
xor
and
lret
add
add
insb
cmpsb
dec
aaa
loope
inc
pop
fcomps
popf
ret
adc
call
and
insb
mov
inc
nop
and
push
inc
js
xchg
add
adc
sub
filds
pushf
ret
xor
push
test
jbe
cltd
fs
pop
push
and
xchg
shll
adc
xor
xchg
fsubr
jnp
fbstp
xchg
mov
out
into
into
aas
jo
out
xchg
rcll
ficoms
addl
fistps
cmpl
xor
mov
ss
adc
or
pop
mov
mov
cmpsl
pop
cmpl
in
test
or
pop
fnsave
jl
xchg
mov
pop
ja
add
sub
inc
cmp
sar
push
pop
dec
out
push
fisubs
lea
xchg
cmp
sbb
in
stos
mov
addr16
push
xor
jp
roll
push
shll
mov
cltd
stc
push
sbb
jmp
sub
push
pop
inc
jb
inc
jmp
pop
popf
adc
add
out
inc
inc
imul
mov
lds
les
fs
push
rolb
sub
mov
mov
and
mov
or
add
shrb
cmp
stos
adc
lods
ret
mov
std
sbb
push
mov
mov
fstl
inc
fwait
adc
lret
mov
pop
aad
test
arpl
adc
insb
dec
out
mov
stc
popa
xor
insl
jmp
jb
call
push
fdivrl
and
mov
jmp
nop
push
int3
inc
inc
inc
es
loopne
ljmp
mov
aas
sbb
cltd
mov
xchg
arpl
es
fnsave
ljmp
pushf
mov
por
shr
mov
addb
shll
push
dec
xchg
and
ret
push
cmp
mov
mov
dec
sbb
insl
aad
aad
mov
mov
iret
test
sub
call
dec
pushf
adc
call
mov
and
in
push
pushaw
cmpsl
add
es
filds
dec
or
ret
push
addr16
push
out
mov
jo
pop
push
sbb
out
mov
cmp
repz
sub
sti
pop
adc
outsb
ret
adc
sub
mov
pop
movsl
add
popa
cli
mov
mov
lret
cmp
stos
or
mov
mov
addl
addr16
pop
xchg
lods
sbb
ss
imul
testb
push
xchg
cmpsl
lcall
mov
inc
xor
mov
in
jmp
and
repz
rolb
add
cmp
stc
or
dec
and
testb
sbb
xchg
xchg
adc
js
pop
test
pushf
mov
iret
cwtl
dec
ror
ret
push
adc
inc
or
dec
fldt
lea
fstpt
jecxz
inc
adc
mov
in
pop
and
into
mov
test
inc
mov
lds
mov
xchg
stos
popf
lcall
outsb
enter
push
mov
mov
cmp
leave
or
push
sub
pushf
pop
aad
mov
xchg
pushf
mulb
inc
cmc
xchg
lret
pop
repnz
lds
dec
sbb
ljmp
lock
subb
mov
xchg
pop
cmp
popf
push
add
lock
jnp
dec
cmp
add
xchg
int
fsts
or
or
mov
stos
shll
pop
popa
mov
inc
cmpsb
inc
pop
sbb
stos
inc
dec
jg
or
xchg
pop
sbbl
adc
loope
cld
mov
enter
or
cmp
ja
jp
jnp
pop
pop
stos
lret
movsb
loop
in
fnsave
out
inc
mov
inc
and
mov
jecxz
jle
mov
jo
inc
add
pusha
jmp
scas
add
inc
sub
sub
sub
adc
stos
jecxz
pushf
sbb
shrl
out
mov
insl
lcall
fcmovnb
cltd
push
jecxz
jmp
ljmp
lret
cmpsb
imul
leave
xor
cs
lret
and
cmp
int3
lcall
xor
ss
andb
pusha
fidivl
xchg
std
loope
cmp
and
fcomps
adc
xor
ficoml
pop
sbb
fidivrl
jecxz
dec
xchg
jmp
lret
push
sti
call
push
xchg
cmpsl
dec
adc
inc
nop
jns
jo
bound
sbb
mov
imul
or
cmp
sbb
mov
shlb
das
shl
jns
das
add
jne
pop
in
aad
push
inc
loopne
aam
sahf
add
cld
in
adc
jecxz
shlb
in
dec
xchg
shrl
pop
in
cmp
out
cmp
jp
cmc
bswap
cmpsb
pop
sbb
test
and
cmpsb
jle
test
fs
pop
ficoms
pop
or
repnz
into
movsl
cltd
outsb
cmp
cld
xchg
pop
fs
jae
pop
in
lret
fimull
push
repz
cmp
pop
sub
and
int
push
adc
jecxz
lcall
lds
jno
stos
leave
addr16
lea
mov
rcrl
cmc
cmpsb
and
or
sarb
jp
fildll
xchg
add
clc
or
mov
push
iret
jne
add
ds
stc
xchg
clc
and
iret
andl
out
pop
rcrb
clc
fistpl
or
jmp
mov
xchg
mov
xchg
xchg
loope
in
cs
mov
jecxz
sbbl
popa
pop
movsl
cmp
sbb
mov
xchg
adc
in
out
inc
xchg
aaa
loopne
repz
lret
fs
mov
sub
push
in
push
in
mov
mov
pop
lock
mov
sub
aam
lds
addr16
jno
fwait
out
daa
push
imul
les
push
movsb
pop
add
xchg
dec
stos
cltd
mov
fcmove
or
ja
sti
pop
stos
fisubrl
ds
mov
mov
mov
std
add
dec
mov
push
jnp
xchg
mov
pop
das
out
bound
je,pn
aaa
and
in
loope
dec
ja
lods
stos
addl
fsubrl
pusha
rorb
jne
sub
mov
mov
popf
and
fistpl
lock
cld
sbb
rcr
ljmp
mov
stos
aam
out
jbe
out
inc
xchg
bound
mov
and
push
pop
xchg
push
mov
mov
mov
xchg
icebp
test
cmp
inc
xchg
inc
and
inc
push
add
subb
mov
lds
cwtl
adc
or
jmp
sti
lret
mov
dec
test
jnp
mov
repz
sub
es
push
sub
push
hlt
cmc
jecxz
jecxz
rcr
fiaddl
lds
xchg
inc
dec
pusha
fwait
xor
hlt
rorb
stos
sub
inc
push
dec
jbe
lds
fincstp
into
pop
mov
dec
inc
push
int
cmp
rorb
sub
inc
clc
pushf
sbb
push
or
mov
xchg
int
push
loope
xlat
repnz
xchg
cmpsb
sbb
dec
or
ljmp
xchg
repz
jnp
cli
fistl
xchg
lods
cltd
pop
push
dec
daa
mov
mov
outsl
arpl
ljmp
xor
das
lret
aad
push
in
and
mov
movsl
inc
adc
pop
shrl
ss
mov
mov
mov
jge
int3
or
loop
faddl
lret
dec
adc
lahf
jmp
pop
data16
lock
imul
sar
mov
push
clc
imulb
ss
hlt
sahf
outsl
lret
loop
add
lods
fs
leave
jnp
or
movsb
add
push
ffree
shl
xchg
das
jl
movsb
pop
or
adc
fsubrl
push
adc
sbb
outsb
mov
stc
push
adc
adc
movsb
rolb
add
into
pop
or
mov
decb
enter
fidivl
jb
cmp
push
cmp
in
adc
xor
cld
mov
scas
or
sub
pop
dec
aad
sub
pop
inc
jns
gs
cmp
inc
hlt
or
sbb
jno
jbe
add
je
mov
or
mov
out
outsb
mov
inc
mov
aaa
pop
out
pop
push
add
lahf
mov
jne
adc
xchg
and
fidivl
sub
cltd
sbb
sar
jmp
outsb
fsubrs
mov
pop
xchg
xor
dec
idivb
dec
movsl
pusha
js
sub
cwtl
pop
repnz
lea
sarb
loop
pop
lret
pop
sub
in
add
ret
shrl
inc
gs
cli
stos
aas
sbb
loop
xchg
xor
gs
roll
adc
add
cmp
fwait
shll
push
les
mov
push
das
jl
xchg
loop
loope
pop
add
stc
fs
test
push
insl
mov
pushf
xor
cs
mov
sub
aam
aam
cld
icebp
pop
mov
mov
into
xchg
test
pop
gs
adc
adc
popa
mov
les
fistl
push
pop
or
fisubs
lcall
hlt
lret
xchg
stos
jbe
xor
and
cmp
push
rcrb
mov
cmp
xlat
repz
aas
mov
sub
fildll
and
lock
pop
dec
mov
add
decl
mov
stos
enter
in
mov
sub
aaa
ret
leave
xchg
cld
fcomp
xchg
fsubrl
daa
xchg
stos
fistps
add
pop
loopne
pop
cmpsl
cmp
mov
adc
leave
dec
arpl
push
test
gs
not
and
jge
int
lds
lret
das
int
add
imul
xor
cmc
mov
jg
daa
cmp
xor
cmp
subb
jmp
mov
cwtl
mov
loope
mov
mov
ficoms
enter
xor
leave
das
jnp
jl
xor
and
cmp
and
leave
outsl
inc
push
jp
push
fs
insb
push
mov
lret
mov
and
test
stos
xchg
xor
and
pop
insl
stos
ret
mov
pop
mov
iret
test
sub
dec
lock
popf
into
shlb
out
pusha
pushf
dec
jmp
sbb
outsb
sbb
push
xor
sub
aas
mov
lcall
inc
cmp
mov
xlat
bound
enter
out
fisttpl
repz
out
stos
pop
shlb
fstps
mov
popf
mov
inc
and
repz
rol
xchg
in
addb
ret
notl
or
mov
mov
push
or
adc
stc
fisttpll
adc
push
sbb
fcompl
in
loop
sub
and
and
ds
clc
bound
jge
inc
rcll
lock
jae
jnp
adc
sbb
int
mov
mov
xchg
aam
mov
or
cmpsl
inc
es
dec
lcall
pusha
mov
push
jo
xor
mov
cmp
and
mov
mov
out
and
push
sub
gs
sbb
mov
jp
pmaddwd
filds
push
ss
mov
mov
mov
movsl
cmp
mov
pop
out
fistl
push
mov
shr
xchg
subl
in
mov
or
pop
push
or
and
lock
int
aam
adc
pop
sub
fwait
and
xor
xchg
mov
push
repnz
sub
icebp
sbb
cli
xchg
mov
into
lock
xor
cld
out
out
dec
xchg
insl
jbe
aad
imul
or
gs
cmpsb
or
cmpsb
push
aaa
dec
dec
cmp
mov
in
mov
push
cmp
pop
fwait
xor
push
es
dec
pop
aaa
xor
out
adc
daa
movsl
push
jmp
out
enter
lods
mov
int3
mov
rclb
push
dec
mov
int3
mov
call
adc
popa
lds
jmp
lea
cmpsb
pop
xchg
out
xchg
push
bound
ret
jmp
mov
and
clc
popa
or
scas
and
adc
dec
mov
pop
fs
mov
arpl
mov
out
lahf
inc
daa
inc
xor
ja
ja
dec
mov
mov
adc
test
sub
das
adc
mov
or
push
jns
int
es
add
dec
stc
iret
icebp
pop
mov
inc
xchg
mov
stos
outsb
mov
mov
pop
mov
ja
stc
test
push
ds
dec
cmp
std
leave
cmc
outsl
mov
jp
movsb
mov
xlat
ljmp
mov
and
mov
xchg
xor
ds
test
data16
add
mov
dec
psllq
mov
in
movntq
xor
repz
and
mov
in
decb
lods
mov
xchg
inc
cwtl
xchg
aas
test
sarl
stc
push
and
and
loopne
icebp
adc
dec
mov
pop
aas
xor
add
pop
movsb
lock
and
iret
push
jns
push
rol
xor
ljmp
scas
subl
repnz
sub
mov
xor
jecxz
jns
sbb
push
addb
sbb
mov
and
pop
push
xor
insl
jmp
cwtl
sub
ja
stos
cmp
push
lods
arpl
cmp
mov
push
push
movsb
mov
sub
mov
inc
hlt
dec
xor
adc
mov
or
sbb
and
cmp
or
sbb
fdivs
lock
sub
adc
fsubrp
pop
jmp
mov
sub
rclb
add
into
fwait
lods
pop
leave
shlb
pop
mov
rorl
push
stos
punpckldq
jp
sub
xchg
xchg
cmp
mov
mov
mov
or
aam
adc
xchg
mov
push
mov
bound
pop
ss
jne
cmp
sub
jge
imul
dec
fstpl
pop
xor
scas
mov
xchg
roll
and
pop
orl
test
fwait
jl
xor
scas
mov
xor
cmp
inc
or
aaa
adc
xchg
bound
je
mov
ja
xor
push
rdmsr
js
repz
mov
nop
test
adcl
xor
ret
cltd
mov
repnz
add
add
mov
jmp
pop
dec
loopne
out
fdivs
push
mov
lea
xchg
arpl
rcrb
add
arpl
loope
jnp
jno
fcomps
rolb
fldt
test
pop
or
outsl
movsl
in
mov
pop
or
mov
sbb
dec
pop
pop
dec
loopne
pop
in
mov
repnz
mov
ljmp
jb
lret
sub
and
jb
mov
and
mov
xchg
test
nop
push
sahf
adc
push
jle
fimull
or
addr16
cmpsl
filds
mov
dec
xchg
jmp
mov
jecxz
test
pop
inc
in
xor
fidivrl
mov
cmp
adc
es
xlat
push
insl
out
dec
and
mov
pop
iret
mov
and
fdivr
bound
jno
add
cmpsl
jle
xchg
mov
lahf
test
stc
mov
mov
dec
xor
cmp
in
orl
cmpsl
out
sub
ja
mov
mov
mov
gs
lcall
fstps
gs
sub
fwait
inc
mov
xchg
movsl
fsub
fs
inc
xchg
lock
jl
xor
cmp
out
notl
repz
xchg
jg
addr16
and
or
insb
mov
into
dec
dec
pop
xchg
cld
aad
std
pop
jl
sbb
adc
test
jb
lea
popa
loop
popa
stos
sbb
inc
sbb
call
daa
cwtl
xlat
repz
pop
add
pop
test
lret
push
sbb
jno
push
test
aad
test
lret
test
sub
rorb
dec
insb
lret
pop
adc
or
repnz
sbb
pop
cmp
fldt
jno
push
imul
add
mov
pop
aad
rolb
adc
jg
jp
pop
cmp
sub
mov
icebp
clc
xor
mov
lret
shlb
outsl
insl
lock
add
xchg
pushf
pushf
les
daa
mov
int
xor
jbe
xchg
xchg
lea
xchg
xchg
add
fnstenv
and
push
cmp
aam
xor
push
push
stos
dec
inc
cmp
pop
adc
mov
inc
mov
subl
in
or
xchg
sub
dec
nop
inc
xor
and
push
ljmp
mov
dec
es
sti
pop
sbb
mov
xchg
or
pop
inc
mov
push
outsl
ret
xor
aas
cli
xchg
lds
jg
jae
pop
sub
push
pop
mov
mov
mov
push
stc
aaa
xor
insl
xor
mov
and
dec
out
cmp
sbbl
mov
jge
lock
mov
mov
dec
or
sbb
dec
mov
mov
sub
mov
loopne
push
adc
lahf
mov
into
mov
xchg
repz
enter
and
out
xor
xchg
bound
or
lock
push
inc
cmc
cmp
movsb
add
cmp
shlb
xlat
sbb
mov
lods
xchg
loope
push
shlb
jbe
movsb
pop
mov
cmp
pop
out
mov
fisttps
mov
xor
sbb
add
xchg
jb
notl
xchg
or
pusha
dec
cmpsb
push
ret
pop
sub
mov
cli
lcall
fisubrl
mov
aam
dec
mov
cmp
mov
cli
faddl
xchg
cmp
lods
fildl
and
sbb
pop
pop
mov
sub
mov
clc
scas
inc
and
sahf
inc
sub
mov
cmp
in
xor
mov
mov
movsl
mov
nop
mov
bound
outsb
xchg
mov
neg
aas
push
mov
cwtl
test
mov
movsl
fdivl
lahf
push
mov
jne
push
pop
pusha
mov
push
movb
jae
dec
mov
or
sub
cltd
stos
jns
lock
or
inc
decl
xor
hlt
and
dec
push
lcall
ljmp
xlat
xchg
inc
out
sub
jmp
js
push
jmp
pop
mov
dec
mov
jge
loope
sub
addl
out
xchg
jge
inc
cmpsb
jo
pop
jne
adc
adcb
mov
xchg
outsl
add
neg
or
imul
fxtract
adc
sbb
adc
add
mov
mov
fwait
pop
pushf
rcrl
fdivr
inc
mov
aad
movsb
or
repz
jne
xchg
dec
gs
inc
cmp
call
dec
mov
pop
mov
dec
push
les
mov
shlb
pop
sbbl
jo
cmpsb
aas
bound
adc
jnp
test
sub
clc
lret
xchg
aaa
mov
push
mov
add
loop
cli
xchg
jp
adc
and
cmpsl
in
aas
repz
push
loopne
xor
mov
scas
inc
fcomps
insb
cmp
mov
mov
pop
in
bound
lcall
dec
pusha
aaa
js
xchg
inc
sub
clc
out
out
cmpsl
sbb
mov
cwtl
orl
and
mov
inc
dec
jns
roll
xchg
pop
sub
mov
and
push
mov
in
fwait
nop
js
xor
fwait
add
or
movsb
xchg
push
loopne
and
jp
inc
or
jge
xchg
add
dec
inc
pop
add
jl
xor
inc
jmp
pop
push
and
jno
dec
mov
lcall
adc
mov
xchg
xchg
or
push
mov
sar
xchg
push
fwait
pop
jecxz
mov
dec
fidivrl
push
mov
mov
cmp
ror
inc
and
adc
push
sub
pop
not
fbld
push
or
add
and
pushf
es
mov
outsl
jbe
mov
in
dec
mov
pop
stc
out
pop
mov
std
inc
inc
cmp
xor
into
imul
dec
xor
out
jecxz
iret
and
jo
sbbb
sbb
std
daa
shlb
fcoms
jo
sub
or
add
in
fs
inc
mov
and
aaa
sahf
imul
enter
inc
mov
mov
rorb
adc
dec
adc
lods
and
sbb
dec
sub
push
dec
lods
jmp
cli
rclb
and
mov
pop
adc
scas
pop
stos
stc
mov
fsub
sbb
stos
cld
cmp
cmpsb
mov
fcom
fcomps
cmpsl
inc
push
lea
sbb
inc
adc
daa
pop
and
add
in
dec
mov
mov
pop
mov
aaa
cltd
push
mov
and
sub
sbb
test
loop
dec
mov
mov
jb
jl
sub
lahf
xchg
cmpsl
cmp
sahf
mov
adc
xchg
dec
mov
push
pusha
repz
mov
xchg
dec
mov
xor
add
arpl
mov
push
fsub
jo
test
ja
xor
push
bound
rcrl
xor
test
lahf
fld
sbb
xchg
xchg
out
outsb
or
in
add
xchg
lret
or
std
movsl
fnstenv
fisttpl
clc
push
sub
mov
call
fiaddl
cmp
cmp
xorl
push
pop
out
repz
cmp
and
adc
fistpll
or
cwtl
or
mov
push
orb
push
sub
sti
add
aaa
mov
sbb
insb
les
adc
adc
mov
pop
aaa
mov
dec
or
cmp
lds
xchg
dec
cmpsb
cmc
lret
aam
xchg
sub
cmp
sub
aas
add
adc
inc
rol
test
mov
inc
lret
lahf
xor
testl
and
mov
mov
fwait
add
add
push
sbb
push
ror
bound
pop
sbb
xor
jle
mov
mov
lock
arpl
mov
jno
lahf
rclb
cmp
and
push
sbbl
mov
pop
mov
enter
sub
sub
pushf
cmp
fstpt
jbe
push
mov
insb
fisttpll
pop
mov
enter
xchg
jae
lds
push
mov
jae
pop
jne
pop
pop
in
sbb
popf
cld
das
fnstsw
mov
and
or
aam
stos
sbb
test
leave
push
push
and
into
pop
add
cmp
jno
fistpl
inc
pop
in
cltd
pop
enter
outsl
jne
cmp
sbb
or
cmpsb
push
push
cmpl
sbb
or
cmp
mov
mov
push
adc
ljmp
cwtl
int
sahf
pop
and
daa
sar
fcompl
addl
cmp
stos
mov
push
xchg
ss
jns
popl
jge
scas
inc
lds
loop
inc
lcall
mov
imul
pop
cmc
xorb
insl
and
aas
cmp
out
jp
rcl
mov
push
jp
out
testl
fdivrs
sbb
pop
test
aas
out
scas
mov
ljmp
jge
sbb
mov
mov
mov
and
mov
js
mov
sbb
ljmp
and
rcrb
mov
mov
xchg
popa
int3
sub
jp
addr16
cmp
into
sub
or
mov
js
shrl
lret
inc
pop
push
test
gs
cs
xchg
sbb
stos
sbb
clc
sub
mov
and
lods
dec
mov
lcall
jae
in
jle
bswap
sbbb
sub
mov
pop
or
gs
aaa
jp
cwtl
pop
shl
stc
cmp
add
orb
sti
xchg
sub
inc
sbb
jbe
jl
sbb
ret
sbb
inc
das
test
icebp
mov
sub
ret
xchg
xor
cwtl
sub
adc
jns
xor
cmc
testb
and
rorb
sti
imul
nop
insl
nop
out
lds
sub
pop
aam
repz
lcall
xchg
mov
or
add
lret
pop
fcoml
out
add
iret
fstpl
add
std
mov
adc
inc
std
xchg
repnz
xor
das
pop
jge
xchg
cli
es
xchg
repz
lret
es
test
aad
jmp
insb
loopne
leave
push
push
js
imul
or
ds
inc
xchg
adc
push
pop
sub
jbe,pn
loopne
ficomps
xor
in
std
into
adc
cwtl
jbe
ret
jmp
aaa
enter
pop
pusha
dec
popf
arpl
lock
inc
jno
mov
lds
stc
mov
ret
daa
pop
mov
scas
pop
stc
mov
and
xchg
xlat
or
sbb
lcall
xor
enter
ja
sbb
les
xlat
ret
xor
mov
xchg
stos
jl
in
mov
jecxz
dec
iret
push
jmp
imul
pushf
push
pop
cmpsb
fs
cwtl
jge
xor
jl
and
mov
mov
sbb
and
out
sti
in
inc
pop
insw
fisttpl
inc
movsb
jge
enter
std
inc
into
mulb
dec
mov
xor
push
pop
mov
adc
or
pop
cmp
je
and
mov
jecxz
ret
dec
inc
sub
fsubr
push
sub
pop
mov
and
mov
mov
mov
inc
mov
fwait
sub
xchg
mov
stc
movsl
inc
lret
xchg
sub
lahf
fdivs
test
stc
bnd
test
movsl
popf
cmp
push
ret
int3
mov
cmp
aaa
int
pop
adc
in
outsb
orps
xchg
inc
ficoml
stc
insb
sub
shlb
pusha
jbe
out
enter
dec
or
jb
xchg
dec
pop
loope
sub
shrl
or
fwait
lock
pusha
mov
sbb
mov
cmc
sub
cmp
out
and
pop
and
xor
adc
cmp
or
jns
scas
in
cltd
lret
xor
or
add
sub
adc
scas
addr16
mov
rclb
in
xor
sub
testl
mov
mov
ss
pushf
or
in
call
xlat
es
cmpsl
cmp
sbb
push
mov
and
out
push
jmp
mov
ljmp
and
ss
and
loop
sub
sub
adc
adc
add
cwtl
lock
subb
mov
fs
inc
filds
mov
cmp
repz
pop
lea
test
imul
xor
ret
in
mov
loopne
gs
dec
mov
je
jo
int3
call
dec
lcall
cs
add
outsl
xor
mov
jle
dec
sbb
ja
loopne
popf
pop
dec
inc
push
jmp
lods
and
jno
arpl
push
imul
mov
ja
sub
inc
xchg
xchg
mov
sub
mov
enter
push
or
jmp
mov
pop
nop
pop
sti
xchg
cmpsb
enter
aad
fisttps
sahf
mov
dec
cmp
pop
call
inc
jbe
jl
test
inc
dec
call
cmc
cwtl
jge
fdivrs
cli
mov
add
hlt
stc
and
inc
shrl
cmc
mov
bound
cmp
mov
cmpsl
scas
push
ret
into
ret
and
out
insl
ret
fcomi
jo
pop
add
mov
add
addl
loop
in
and
sarl
mov
out
sub
mov
insb
pop
aad
inc
mov
lds
and
ret
push
mov
and
mov
xor
cli
daa
xor
outsl
and
aas
jmp
in
push
movsl
or
cwtl
inc
int
call
pusha
ja
ss
mov
xlat
in
push
fldt
dec
xor
and
cmp
mov
out
cmp
pop
push
andps
ret
sbb
gs
adc
dec
test
mov
ss
popf
sub
into
sub
into
sub
clc
call
mov
or
pop
jmp
pop
xchg
dec
cmp
sbb
loopne
pop
and
sbb
push
xor
dec
jb
fidivrl
xchg
adc
ds
sbb
mov
pushf
pop
negb
or
pop
loopne
test
xchg
push
and
xor
leave
sbb
jb
push
enter
lods
test
das
xchg
ror
inc
ja
lock
dec
insl
jns
es
mov
pushf
ret
push
add
shlb
jae
push
lcall
fisubl
push
sub
xchg
sub
or
push
push
mov
xchg
stos
ss
pop
adc
cltd
inc
mov
jmp
dec
dec
add
sahf
push
scas
xchg
fistl
fdivrp
add
ljmp
cmp
cmp
bound
test
out
or
div
fwait
repnz
mov
cmp
cmc
dec
xlat
nop
pop
jle
data16
leave
cltd
and
iret
push
addb
imul
mov
int
dec
test
fistpll
pushf
dec
test
sbb
popa
sub
popa
movswl
lahf
std
pop
scas
test
jns
fildl
aas
aas
add
fmull
mov
scas
fadd
push
xor
test
aaa
mov
pop
and
int3
shll
scas
inc
outsb
or
imul
mov
dec
lods
mov
ret
mov
jae
clc
into
cmp
loop
clc
sub
add
mov
pop
add
add
lret
fwait
jmp
imul
pop
add
out
stos
pusha
adc
rcr
sar
sub
hlt
xlat
jns
cmpsl
imul
mov
xchg
cmpsb
mov
jnp
or
sub
cmpsl
xchg
jne
adc
loop
jp
fcmovne
pop
mov
das
adc
xor
mov
pusha
movsl
test
xor
rcrl
out
mov
push
lock
into
rcll
in
fildl
mov
push
or
sbb
mov
adc
cmp
call
sbb
mov
mov
subb
nop
lds
in
jb
mov
movsb
or
out
or
ljmp
repnz
aam
sub
xor
mov
stos
outsl
push
imul
jns
movsb
jae
ss
mov
mov
mov
mov
xor
shlb
dec
mov
xchg
xlat
je
hlt
sub
xchg
add
bnd
sub
push
dec
cs
xor
lcallw
inc
addb
js
notb
inc
imul
xchg
popl
dec
jle
loopne
mov
mov
das
lret
cld
cld
cmp
sbb
sbb
jno
insb
or
inc
mov
and
and
sub
ljmp
jl
sahf
sbb
in
xchg
int3
repz
add
xchg
data16
xchg
pop
and
xchg
mov
mov
inc
xchg
data16
into
cs
enter
test
xchg
cmp
fidivl
lock
sahf
lock
movsb
push
aad
mov
outsb
xchg
int
lods
pop
or
test
sub
add
aad
mov
xor
rcrl
xchg
in
cwtl
ss
dec
loop
jmp
test
push
fists
stos
push
adc
nop
js
bound
pop
rcr
add
mov
xor
fcoml
out
and
mov
imul
jg
stos
ss
data16
mov
test
popa
lods
cmp
inc
aam
and
rorb
sbb
sub
addr16
div
popf
jae
push
cmp
lret
pop
push
jae
rep
adc
in
ficoms
jecxz
mov
xchg
sub
adc
mov
roll
push
je
hlt
xchg
sahf
inc
pop
dec
push
or
dec
jbe
pop
movsb
jmp
jmp
ss
sub
add
aas
lock
insb
ss
or
lcall
stos
fcoms
xchg
mov
aam
lea
jns
out
pushf
mov
das
cwtl
pop
scas
jnp
lahf
fld
mov
or
jae
push
mov
in
hlt
cmp
or
xchg
xchg
scas
add
push
cld
hlt
nop
jae
icebp
pop
nop
nop
fnstsw
jge
cs
cwtl
jg
jmp
xlat
xchg
inc
in
lret
rorb
mov
xchg
inc
sar
push
pop
push
and
inc
in
dec
fadd
test
jg
jns
sti
push
xchg
dec
cmp
jp
push
add
icebp
in
and
in
pop
jnp
pop
pop
outsl
testl
pop
fldenv
fisttpl
les
je
movsl
xchg
pop
xchg
test
adc
fnstcw
push
push
sbb
pop
daa
fiaddl
cmpsl
testl
adc
out
lods
jnp
aaa
mov
loope
mov
mov
adc
int3
inc
or
push
loopne
ja
push
pop
in
pop
push
sub
mov
dec
push
jl
fiaddl
lea
pop
dec
xchg
lds
mov
jp
rcll
push
and
or
test
pop
lcall
fs
pop
out
lret
cwtl
adc
inc
lcall
mov
push
lret
lret
je
int
jg
lods
ja
pop
cld
lea
push
sti
shl
mov
mov
es
adc
scas
pop
loopne
fsubrs
stc
cs
mov
inc
ja
bound
mov
mov
lahf
aas
enter
aaa
les
jb
xor
jl
movsl
inc
leave
jbe
push
xor
mov
in
stc
in
inc
adc
mov
inc
dec
int3
xchg
push
sahf
dec
js
push
xor
loope
mov
pop
roll
mov
loop
mov
arpl
les
xor
jg
cmp
out
mov
adcb
xor
test
mov
dec
les
sbb
add
xchg
mov
imul
ss
addr16
lret
add
push
sub
negb
xchg
xor
adc
dec
mov
ljmp
call
dec
mov
cltd
insl
addr16
in
jmp
shl
inc
pop
mul
xchg
sbb
decb
int
cmp
cmc
je
dec
leave
xchg
inc
hlt
sti
lods
subb
sub
push
push
loope
xor
or
push
push
addl
les
cmp
fs
cmp
cmp
cmp
jb
mov
testl
rcrl
mov
cs
xchg
jmp
pop
jb
fildl
daa
iret
xor
dec
jmp
into
inc
lods
mov
xor
lahf
pushf
ror
add
fcmove
ja
lea
iret
and
and
lret
ret
popf
mov
jmp
aas
lock
fucomp
pop
mov
loop
push
jo
xor
fldenv
lcall
mov
pop
scas
shll
mov
push
in
inc
repz
and
mov
je
cmp
add
nop
loopne
icebp
std
pop
cmp
shl
add
ljmp
imul
mov
lahf
clc
lods
cmp
xlat
xlat
add
mov
js
push
adcl
arpl
sarl
repz
fs
sarl
cli
push
in
aad
push
pop
out
iret
sub
in
ljmp
dec
or
mov
mov
pusha
lret
push
adc
ss
in
jle
and
pop
jge
dec
mov
push
mov
dec
cmp
mov
xor
adc
xor
jne
jge
adc
aas
mov
int
cmp
pop
and
jno
ret
pop
adc
shrl
jl
or
inc
in
adc
mov
cmp
sub
push
scas
jnp
rcrl
push
inc
scas
pop
push
repnz
into
push
inc
and
mov
fstpt
xchg
call
push
cmpsl
add
iret
push
test
and
mov
lods
jnp
xor
in
in
dec
push
inc
push
and
fnstenv
loop
jl
shll
shrl
mov
sub
sub
test
jecxz
mov
aaa
push
int
pop
out
mov
xor
cmp
dec
sti
cwtl
test
lcall
jbe
add
pop
mov
adc
pop
sbb
adc
sti
push
jg
dec
data16
mov
add
sbb
subl
cli
push
cmp
add
cld
mulb
jecxz
xchg
loop
mov
jp
cmp
push
rol
insl
pop
fstp
dec
xchg
lahf
shl
xchg
xchg
cmp
out
adc
dec
lods
mov
testl
push
push
cmp
jnp
mov
cmp
imul
jo
movsb
xchg
and
pop
and
pop
fucom
or
pop
sbb
cmp
xlat
mov
sbb
pop
xchg
sbb
jbe
andl
in
pop
loop
popf
shrl
clc
pop
imul
pop
push
or
push
cltd
push
ja
popa
or
xchg
sbb
xchg
mov
jg
mov
test
push
dec
into
mov
in
dec
in
cmp
xor
filds
lods
daa
inc
js
mov
in
jecxz
les
xor
cs
jmp
mov
mov
divb
hlt
adc
mov
nop
push
fnstenv
and
in
pop
fsubrl
jbe
push
xchg
or
xchg
rolb
insb
leave
or
ficoml
std
std
pushf
fdivs
and
bound
lods
xchg
mov
add
mov
pop
stc
sub
scas
aas
out
pop
xchg
stos
cli
adc
push
inc
pushf
bound
jp
inc
mov
mov
xchg
or
test
ret
mov
mov
arpl
inc
mov
mov
int3
sti
in
fs
hlt
mov
push
sbb
mov
pop
je
xchg
mov
or
xchg
mov
mov
pop
adc
adc
loope
mov
mov
inc
mov
sub
scas
fmuls
sub
jne
cmp
lret
push
sbb
mov
dec
leave
lcall
dec
aas
mov
and
adc
loop
leave
jae
imul
dec
imul
cmp
movb
inc
mov
sbb
sbb
movsl
jae
cmp
xchg
popa
outsb
scas
lahf
sbb
sub
cs
je
pop
fidivl
cs
imul
or
sahf
lods
ljmp
push
fisubrs
int3
data16
loopne
or
insb
mov
xchg
and
mov
mov
int
cmp
mov
pushf
cmp
sbb
lahf
sbb
cld
imul
ficoml
xchg
and
int3
lret
push
adc
mov
or
test
push
mov
stc
pop
popa
test
outsb
ljmp
jns
dec
add
sbb
cmp
gs
inc
sahf
xlat
std
cmp
lds
xor
jg
dec
jbe
mov
adc
loope
out
pmulhw
mov
add
and
imul
shll
andl
arpl
cltd
aam
or
lret
int
scas
jno
jbe
mov
rcrb
jl
inc
push
mov
inc
push
xor
gs
stos
cmpsb
cmp
mov
mov
or
mov
out
stos
pop
xchg
dec
mov
iret
sbb
imull
pop
cmp
mov
jmp
ret
inc
pop
and
lcall
fldenv
pop
loopne
jl
test
testb
mov
pushf
cs
adc
test
out
inc
cli
movsb
dec
rorb
jl
jge
fnstcw
fidivrl
pop
rclb
das
jp
cli
dec
fchs
mov
mov
sbb
xchg
sahf
sbb
push
adc
rcl
enter
fiaddl
sbb
fs
xlat
bound
mov
aaa
imul
inc
xchg
sbb
xchg
outsl
pop
sbb
inc
sahf
jnp
clc
les
mov
jmp
fwait
jecxz
jae
add
add
xchg
fists
xchg
aad
ss
adc
into
fmuls
cmp
test
cmp
pop
inc
cld
mov
inc
add
rclb
ljmp
and
jle
sbb
pop
jle
popa
jg
out
loopne
fists
xchg
enter
outsb
push
cmp
addr16
mov
xchg
inc
in
sbb
xlat
jle
sub
imul
xorl
int
adc
loope
in
ljmp
cmpb
xchg
mov
call
int
sub
jno
xor
por
dec
pop
or
sbb
arpl
out
std
cld
iretw
sar
sbb
inc
inc
xchg
jns
cwtl
je
nop
mov
inc
pop
push
lret
pop
out
rclb
or
hlt
sti
mov
stos
movsb
test
push
xlat
mov
push
fisttpl
out
add
xchg
cmp
popf
gs
or
jmp
lods
addb
int
push
rorl
aam
adc
hlt
pop
inc
pop
dec
dec
dec
and
sahf
sub
jne
gs
xor
out
pop
add
dec
dec
or
daa
lcall
insl
jmp
mov
push
je
inc
pusha
mov
xor
dec
add
adc
out
push
adc
mov
test
movsb
push
mov
xchg
adc
xchg
or
scas
leave
mov
or
dec
arpl
imul
ss
mov
movb
sbb
mov
xchg
outsb
hlt
int
int3
sbb
mov
fisttpl
xchg
fwait
adc
add
pop
jno
fsub
cli
jl
and
pop
vpaddb
stos
push
cmpsl
leave
pop
loop
out
pop
cmc
mov
xlat
add
out
push
pop
movl
les
fs
inc
inc
adc
ret
jae
jp
aad
mov
jge
iret
fwait
or
sbb
mov
in
repnz
cmc
mov
cmp
addl
mov
mov
stos
mov
shrl
inc
sub
mov
cltd
andl
mov
cmc
push
mov
xor
cmpsl
jo
aas
push
cli
xchg
mov
push
repz
fstps
mov
nop
iret
popf
fs
pop
adc
sub
jecxz
faddp
lods
leave
pop
negb
mov
jno
mov
and
sub
out
inc
inc
cmp
cld
mov
jecxz
pop
push
ja
movsl
imul
scas
cmp
in
lret
in
cs
dec
dec
insb
loopne
lret
adc
push
mov
and
mov
std
scas
icebp
in
xchg
xchg
iret
cld
sub
les
ds
or
pop
push
push
ljmp
int3
mov
pop
lds
and
aad
mov
dec
and
inc
cmpsl
out
dec
sahf
int3
push
mov
fwait
hlt
add
mov
cltd
aam
shll
push
sbb
add
and
lods
mov
insl
adc
leave
call
leave
and
lea
sbb
cld
outsb
jbe
jns
aaa
push
imull
mov
xchg
out
fdivrs
cmp
shll
inc
mov
or
clc
mov
fsubrs
mov
mov
out
jo
test
jecxz
mov
out
mov
jmp
imul
outsb
mov
xchg
lea
scas
daa
adc
xlat
pusha
dec
push
mov
xchg
mov
loopne
mov
mov
inc
lcall
and
sub
xchg
sbbb
aaa
mov
das
ljmp
push
cmc
and
xor
adc
mov
adc
ljmp
xchg
out
lret
call
jmp
cmp
arpl
nop
leave
jle
pop
test
xchg
out
fnstcw
inc
add
add
out
mov
call
mov
rol
add
inc
jb
popa
sbb
lock
or
dec
inc
scas
les
int
aam
insl
cmp
xchg
fnsave
adc
in
inc
test
inc
loopne
or
movsb
out
inc
mov
fdiv
ret
jg
iret
sbb
push
lock
xor
ss
daa
add
movsl
inc
daa
sbb
lret
pop
mov
sbb
orl
aaa
xchg
and
xor
enter
pushf
pop
cs
sbb
push
js
and
imul
movsb
out
rolb
movsb
sbb
push
ffree
push
adc
mov
dec
jb
popa
pop
mov
insb
jmp
stc
fimuls
sbb
aad
cltd
adcb
mov
mov
mov
je
add
jno
test
insl
pop
xchg
push
bound
inc
mov
dec
dec
mov
mov
push
adc
lds
test
popa
pop
and
call
add
lea
insl
sti
and
add
adc
dec
lea
and
adc
mov
js
push
mov
jb
loop
cltd
mov
add
test
js
cli
mov
adc
push
mov
ds
mov
outsb
mov
loopne
adcl
mov
hlt
fildl
rolb
movsl
rol
cmp
inc
and
and
ljmp
xor
daa
cs
cld
inc
cwtl
rolb
dec
xchg
inc
daa
lcall
cltd
test
out
or
pop
sub
adc
jnp
mov
sbb
mov
inc
dec
pop
aad
mov
xchg
ret
add
inc
pop
jns
pop
mov
push
mov
fstps
fdivs
test
jnp
inc
add
push
das
sbb
jl
fwait
shlb
lods
push
incb
inc
sub
mov
ror
inc
and
loopne
push
mov
pop
and
or
and
pop
pop
xchg
call
mov
roll
enter
nop
out
pop
out
xchg
test
or
repnz
cmp
mov
pop
in
sub
mov
jp
out
or
jnp
int
sbb
andl
pop
ljmp
mov
jle
pop
dec
pop
stc
inc
imul
jno
je
lea
and
imul
dec
ror
pop
mov
fimuls
mov
or
mov
lahf
add
sub
mov
enter
sub
insb
test
stos
cmp
xchg
sub
cmp
stc
mov
sbb
iret
pop
mov
dec
xor
jb
out
leave
cli
loop
xchg
xchg
xor
sbb
repz
popf
pop
adc
mov
test
aam
sbb
add
mov
mov
mov
jle
and
dec
int
cs
ja
cld
sub
jg
aad
ud2
jne
push
mov
lods
sbbb
jae
subl
mov
cmp
add
sub
pop
fmull
cld
or
shr
dec
ljmp
sub
add
sti
jmp
xchg
test
cmp
or
sbb
sub
cs
mov
xor
hlt
je
push
pop
int
sbb
enter
inc
test
or
popf
scas
mov
into
sub
repz
sbb
cmpsl
test
add
mov
mov
xchg
ja
cmp
into
fildll
push
leave
or
cltd
mov
cs
stos
pop
mov
nop
sar
idivl
js
and
outsb
mov
pop
and
mov
pusha
nop
add
and
jmp
in
xor
lcall
jnp
xchg
stos
cld
pushf
outsl
addr16
cld
adc
les
and
test
push
cmpsb
mov
pop
cmpsb
sti
mov
lret
push
cmpsb
out
into
mov
lock
xchg
cmpsl
sub
sahf
xor
enter
push
add
mov
faddl
lret
cltd
cs
sub
lret
ret
xor
imul
inc
sbb
lds
stos
adc
inc
scas
outsl
rorb
dec
bound
scas
test
mov
and
orb
adcb
mov
mov
jb
jmp
mov
or
inc
push
aaa
xor
lcall
jae
mov
pop
dec
out
movsb
cld
out
int
cmp
dec
or
testl
mov
cltd
pop
sti
xchg
aad
and
sub
das
clc
fisttpll
inc
mov
dec
adc
mov
psubusb
dec
sbb
mov
faddl
ljmp
pop
scas
mov
push
push
pop
jmp
pusha
mov
icebp
sahf
lahf
mov
lret
mov
sub
push
dec
cmp
pop
xchg
mov
int
nop
jbe
sarb
jp
in
cltd
mov
dec
lret
and
or
push
xor
lods
shll
and
repz
xor
mov
lcall
movsb
call
sbb
inc
outsl
ss
inc
roll
imull
bound
leave
sbb
jne
push
in
insl
hlt
rclb
ss
adc
mov
cmp
icebp
mov
inc
lret
mov
stos
int3
mov
mov
das
aam
dec
sbb
imul
xlat
leave
imul
jb
pop
in
xor
mov
jb
clc
inc
xchg
mov
into
ffreep
adc
fists
or
inc
jno
stos
arpl
data16
mov
add
and
push
mov
lahf
jnp
call
and
cs
jae
lods
out
sbb
mov
scas
and
cmp
and
rcrb
scas
lock
mov
mov
sub
xchg
add
push
mov
adc
shl
ret
push
mov
clc
and
xor
xor
push
dec
xor
aas
je
in
xlat
rcl
jae
pop
call
mov
xor
jmp
pushf
ret
out
js
xor
xchg
xor
xchg
outsb
add
or
sbb
lahf
push
insb
inc
mull
sysenter
outsl
dec
xor
jb
leave
stos
inc
cmpsb
pop
dec
cmp
movsb
imul
dec
sahf
fwait
insb
mov
push
idivb
fs
pop
mov
addr16
or
pop
in
sbb
xor
xchg
sbb
dec
sbb
ja
push
cmp
sub
out
and
mov
adc
hlt
idivl
cltd
daa
inc
xchg
into
outsb
mov
cmpsb
or
add
xor
int
cmp
fs
xchg
jo
xor
lcall
mov
sub
fucom
add
mov
ficomps
daa
addl
cmc
xchg
shl
push
in
sub
or
scas
and
mov
ss
mov
icebp
popa
xor
or
aaa
aas
shl
mov
fwait
mov
imul
cmc
vpslld
orb
insl
add
inc
scas
cmc
xchg
aas
stos
mov
mov
std
jnp
adc
shrb
push
pop
rcrl
outsb
mov
dec
shrb
mov
test
inc
push
adc
cmp
lret
mov
fcomps
sub
xchg
and
int
or
mov
cs
loope
inc
jmp
lods
inc
add
vcvtsi2sdl
xor
out
mov
pop
push
addl
mov
xor
aas
insl
push
iret
xchg
and
jl
push
and
test
les
mov
fisttpl
popf
js
push
xchg
xchg
call
sahf
add
jne
mov
inc
adc
mov
xor
mov
or
pcmpeqw
sahf
frstor
and
adc
inc
mov
adcb
imul
pop
mov
inc
scas
adc
or
and
ret
inc
mov
mov
mov
pop
mov
loope
mov
mov
and
cmp
and
in
cmc
imul
push
xchg
cmpsb
or
lea
cmp
scas
inc
adc
xchg
cmc
pushf
xor
jmp
sarb
jl
mov
sub
cmc
fsubrl
push
jb
mov
jge
sub
shrb
xor
stc
cmpl
push
mov
xchg
add
or
imul
jmp
movsb
clc
lcall
xlat
sub
xor
cmp
or
inc
xor
pop
aam
inc
iret
rorl
adc
adc
and
ds
add
mov
rorl
leave
fmul
repnz
mov
push
push
push
mov
add
mov
mov
stc
sub
xor
outsl
push
adcb
cmpsb
lcall
adc
and
fidivrs
and
stos
inc
jae
jbe
dec
idivl
movsb
xchg
jp
loope
jl
push
bound
notb
and
not
cld
pop
mov
loop
enter
addr16
mov
das
mov
mov
rorl
cmpsl
mov
push
push
sti
insb
lods
fmull
adc
movsb
in
pop
and
push
out
fiadds
out
xor
gs
test
push
jl
cmc
push
add
add
popf
add
ss
enter
lcall
shlb
insb
mov
std
ja
mov
push
mov
mov
fs
cmc
movsl
sti
mov
or
adc
das
inc
pop
sti
mov
jae
aam
inc
dec
fcmove
xchg
cmpsl
cmpsl
sbb
mov
ret
ljmp
test
mov
leave
lds
mov
fwait
sahf
cmp
sbb
xchg
insb
and
imul
lcall
std
xlat
stos
sbbl
paddd
jl
scas
inc
dec
inc
add
cmp
cwtl
jbe
push
cli
lret
lret
mov
dec
out
das
lods
idivb
scas
dec
test
mov
inc
xor
sub
jb
pusha
repz
mov
sub
setge
jmp
inc
or
in
mov
and
xor
push
adc
dec
subl
ss
lret
jmp
push
icebp
pop
fcmovnu
arpl
daa
int3
and
jae
sub
cltd
ret
mov
sbb
inc
sbb
mov
xor
and
push
inc
int
int
mov
inc
out
push
xchg
push
mov
xchg
shlb
and
ljmp
mov
xchg
stc
sub
je
jnp
or
adc
mov
lock
sub
jnp
fbld
mov
mov
mov
mov
cwtl
push
and
mov
out
xor
out
arpl
pop
and
inc
inc
xchg
adc
cmc
out
fcmovne
jne
xchg
fadd
jns
cmp
and
in
fwait
out
push
cltd
pop
push
jo
imul
arpl
js
mov
jp
sti
divl
movsb
aam
and
cmpsl
jae
pop
push
jb
jnp
mov
sti
add
dec
popf
rclb
arpl
sti
aas
stc
ficompl
mov
mov
leave
ss
or
sbb
add
add
ja
cmp
cmp
mov
mov
mov
popa
das
dec
fcoml
push
popa
jl
enter
mov
arpl
push
in
iret
push
dec
ja
in
enter
dec
dec
push
mov
add
bnd
xchg
pop
or
xor
dec
jmp
cmp
inc
sbb
add
test
cmp
push
mov
in
lds
jge
or
pop
test
out
lock
cmpsb
aaa
mov
ficoms
test
mov
cmp
fwait
fwait
lcall
mov
xor
fwait
pushf
out
adc
ds
pop
arpl
inc
fnstsw
mov
insb
mov
pop
jae
xchg
jnp
push
and
xor
aas
movsb
or
movsb
mov
sahf
cmpsl
cmp
push
je
iret
jne
sub
mov
mov
cmp
lock
jmp
push
movl
pop
sub
aas
in
bound
fisubrl
or
dec
mov
les
sub
test
inc
inc
or
ret
repnz
dec
pushf
mov
sbb
cmpsb
pop
fistps
sub
or
rol
mov
mov
pushf
in
sub
and
push
adc
sub
insb
mov
mov
lds
jle
jno
jle
inc
inc
xor
inc
mov
orl
dec
cld
inc
jae
cmp
mov
pop
mulb
mov
xor
inc
hlt
pop
add
scas
pop
xchg
jno
shl
dec
mov
enter
add
mov
pop
shrl
nop
inc
inc
push
pop
js
into
xor
sbbb
lcall
jg
jecxz
pop
xor
mov
dec
leave
and
hlt
jp
sub
inc
rorl
push
sub
xor
jl
sarb
aad
sarl
mov
xor
data16
jge
xor
iret
adc
mov
adc
fdivl
bound
aaa
js
gs
pop
mov
or
cmc
in
xlat
xlat
and
and
push
inc
ja
dec
je
xchg
dec
fbld
in
repz
jg
push
cmc
int3
fs
mov
add
faddl
cwtl
aas
mov
les
sbb
inc
adc
jnp
ja
insl
dec
and
cmp
cltd
sub
cmp
adc
cltd
cli
mov
push
ss
aas
test
idivl
cmc
ffreep
iret
inc
out
scas
mov
xor
cmpsl
lea
xchg
cmp
cmp
cli
cld
scas
fisubs
or
je
cmpsl
pop
inc
cmp
mov
mov
dec
cmpsl
push
mov
pop
cmc
inc
or
adc
lea
lods
scas
iret
inc
lahf
dec
inc
pop
add
mov
push
fdivrl
xchg
and
mov
cmpsl
jo
ss
data16
add
sub
xor
movsb
es
fildll
in
int3
cmp
xchg
xor
xor
jo
lock
mov
sbb
sub
sub
jne
push
insb
add
cltd
jecxz
jne
jb
icebp
mov
testl
lock
ret
jb
xor
imul
jo
push
ja
push
cmp
lds
mov
fldt
movzbl
inc
fimull
adc
sbb
or
inc
iret
loop
icebp
jp
mov
push
pop
sub
and
xchg
mov
lret
shll
dec
sub
cmp
cmpsl
daa
sub
jno
mov
xor
out
mov
jnp
and
mov
loope
sti
pusha
adc
std
jge
or
and
pop
jmp
mov
out
outsb
mov
int3
bound
add
fcoms
or
popf
das
addr16
lret
rcl
mov
inc
xchg
push
inc
inc
adc
rol
pop
sti
aam
sti
imul
shlb
mov
clc
mov
inc
shlb
test
xor
std
dec
cmp
std
jge
subb
xchg
push
mov
insb
fadds
test
ljmp
or
out
hlt
push
in
lods
in
fs
mov
movl
mov
test
sub
into
inc
add
out
push
sub
leave
ljmp
jl
xchg
movsl
stos
mov
xchg
test
sti
inc
nop
ret
push
cld
mov
jl
popl
mov
xchg
or
stos
pop
aam
mov
ja
lahf
rcl
je
aam
lods
arpl
or
je
inc
jl
inc
cmp
sahf
dec
pusha
and
xlat
sub
mov
push
or
call
test
repz
xchg
cmc
push
shr
cmpsb
lret
jns
jo
jecxz
pop
cli
jge
shl
inc
inc
stos
pop
mov
ret
test
stos
and
xlat
xor
fwait
stc
scas
dec
sub
int3
or
test
or
dec
jo
adc
push
addr16
or
jne
and
les
lcall
in
test
call
fnstsw
aam
scas
les
jg
popa
sbb
jno
xchg
test
mov
ss
cmp
into
dec
ja
pop
aam
daa
lret
pop
scas
bound
int3
sub
push
std
add
xchg
push
stos
stos
adc
rorb
adc
sub
inc
mov
push
ret
and
mov
cld
inc
fnsave
jp
andb
bound
add
lret
arpl
fdivs
loopne
xor
adc
sub
xchg
cli
jae
stos
out
imul
les
cli
sbb
fimuls
mov
cmp
in
xchg
cmpb
adc
test
rorl
jmp
out
mov
jle
int
mov
mov
bound
mov
inc
hlt
or
lock
popf
in
adc
insb
lret
inc
xchg
inc
ljmp
out
add
shlb
decl
test
out
inc
jmp
cmp
jne,pn
mov
mov
fsubrs
out
sbb
addl
jmp
push
test
pop
repz
inc
into
lea
stos
insl
inc
insl
xchg
or
mov
mov
gs
add
and
cmp
inc
test
loop
lods
add
push
jle
mov
dec
push
movsl
or
insb
in
add
pop
xchg
pop
test
sub
hlt
cmp
push
sbb
or
rcll
sub
lcall
insl
or
lods
fldl
sbb
stos
fidivs
clc
add
pop
int3
sub
in
ljmp
out
fdivrl
and
popf
data16
in
sbb
sbb
sub
pusha
jns
stos
aad
adc
dec
mov
insb
in
cmp
mov
cmp
mov
jmp
xor
xor
ljmp
addl
cmp
je
hlt
fisubrs
inc
adc
stos
jp
dec
je
push
loopne
scas
clc
cld
ja
dec
and
mov
daa
aaa
les
pop
ror
lret
cs
mov
mov
fwait
and
push
nop
data16
push
movsl
add
std
lea
ljmp
stos
test
add
fwait
dec
mov
or
jns
arpl
cmp
call
pop
shrl
cmpsb
incb
daa
jne
mov
rcr
ficoms
push
mov
scas
imul
sbb
popa
lods
fldt
test
imulb
insl
mov
pop
movsl
push
dec
loopne
adcb
test
dec
sbb
scas
pusha
into
test
std
push
mov
arpl
sbb
rcll
xchg
mov
leave
das
outsl
out
leave
vmwrite
addr16
pushf
loope
out
or
inc
sub
jp
fisubrl
in
daa
jmp
fisubrs
jnp
jl
call
jb
fs
adc
mov
cli
shlb
ret
inc
jno
mov
sti
xchg
mov
out
dec
cld
push
sbb
test
repnz
or
mov
mov
sub
mov
jecxz
fwait
pop
sahf
jnp
pop
jl
cli
bound
test
negl
pop
ret
add
out
lret
inc
lret
push
je
mov
mov
cmp
cmpb
pusha
push
testb
mov
call
pop
mov
inc
orl
jecxz
pop
jbe
mov
ss
mov
mov
enter
call
mov
jns
test
in
sarb
jne
xchg
xchg
inc
pop
insb
adc
jae
int3
enter
lods
sahf
pop
ficompl
push
out
push
outsb
pop
mov
cld
mov
fs
ficoms
sub
cmp
aaa
loope
xchg
hlt
cld
pop
cmc
fildll
add
mov
cli
enter
dec
loope
mov
dec
movl
loop
pop
adc
lahf
data16
outsl
jbe
xchg
dec
mov
ja
iret
mov
sub
mov
clc
cmp
movsl
cli
inc
lods
add
fs
sar
mov
call
pop
push
mov
xor
xor
xor
sub
test
fsubrs
lock
inc
inc
gs
sti
ljmp
sahf
sub
sti
pop
push
call
xchg
mov
jle
or
mov
out
shlb
adc
cmp
aam
ret
repnz
int3
jbe
push
frstor
mov
push
or
nop
xorb
les
add
and
lea
xor
adc
mov
and
jl
jge
es
sarb
jl
insb
scas
mov
fdivs
pop
mov
aam
adc
mov
aad
cmc
std
cwtl
decb
mov
dec
shr
ret
jmp
xchg
jge
stc
jg
pop
push
lods
lret
inc
ds
fcomi
and
pop
adc
push
sbb
sub
push
mov
and
pop
sbbl
xor
jae
lcall
mov
add
mov
fsubrp
jb
cmp
jle
xor
icebp
jo
ret
sub
jp
push
inc
repz
outsb
add
in
mov
lret
repz
or
mov
dec
mov
adc
dec
or
jecxz
fists
lds
or
mov
pop
int3
in
sub
mov
lcall
fucomp
xchg
push
xchg
out
pop
push
adc
lahf
xchg
push
or
xlat
xchg
fldenv
insl
sarb
mov
pop
inc
mov
adc
gs
loopne
cli
mov
pop
es
pxor
insb
mov
cmp
inc
lret
cmp
jecxz
jae
and
sti
pop
ret
inc
mov
mov
mov
jb
xchg
lods
sbb
cmp
mov
xchg
xchg
popf
mov
repz
mov
inc
gs
sbb
dec
add
aad
cltd
rcrl
call
mov
jmp
jmp
mov
and
loop
adc
pop
sbb
std
xor
dec
add
push
jl
ja
aad
mov
add
fnstenv
pop
xchg
mov
inc
mov
add
and
cmp
shll
push
push
or
addr16
icebp
pop
cmp
stos
push
or
sub
stc
inc
jne
adc
rol
dec
sbb
add
daa
lcall
scas
and
fldenv
mov
mov
inc
cmp
andl
push
ret
outsb
roll
mov
sti
cmp
mov
leave
notl
or
mov
inc
shll
jecxz
cmpsl
imul
bnd
dec
xchg
repz
mov
lahf
mov
inc
out
cltd
data16
mov
pop
push
adc
sub
mov
test
out
adc
adc
or
icebp
fistps
out
push
lods
xchg
mov
ret
mov
mov
and
and
lret
mov
ret
xlat
adc
mov
dec
mov
jle
pop
or
xor
cmp
sub
inc
js
push
jge
mov
shr
cmp
data16
enter
lods
jb
lock
fwait
sbb
lahf
in
add
cmp
rclb
leave
cli
xor
aas
or
jbe
jbe
incb
cmp
mov
push
nop
and
cs
xchg
jg
bound
movsb
ret
push
imul
lods
lahf
lock
clc
sbb
dec
shll
lods
pop
mov
test
push
imul
lds
scas
push
in
popl
enter
cmc
mov
into
jle
fdivrs
testl
jo
rorb
and
andl
lahf
div
clc
xor
ret
push
lock
gs
cld
stc
rorb
mov
pop
mov
xchg
mov
movb
inc
push
data16
pushl
test
mov
les
lcall
dec
jbe
mov
push
call
rcrl
jmp
jbe
out
das
inc
xor
jae
cmp
mov
repz
mov
xchg
ds
push
push
insl
dec
andb
outsb
mov
lock
bound
push
lds
shr
dec
lret
push
and
adc
mull
popa
jecxz
repnz
lods
sbb
ljmp
lds
cltd
push
bnd
test
aam
addr16
int
sar
jae
cmp
jae
mov
lret
push
xchg
out
mov
sub
cmc
das
adc
cmp
jo
jl
mov
jle
enter
sub
sbb
ljmp
dec
pop
pop
dec
lahf
pop
or
rcrb
cmp
adc
cs
pop
fs
inc
outsl
sub
adc
stos
mov
into
ds
jg
ds
pushf
add
imul
mov
inc
adc
jge
out
gs
xor
loopne
leave
lds
push
jae
jp
and
mov
rcrl
ret
mov
add
sub
push
pop
sub
addr16
popf
int3
shll
inc
mov
ret
rcrb
jbe
add
daa
jb
dec
adcl
xchg
cmpsl
lea
sarl
and
mov
or
xor
push
mov
xor
mov
jge
in
lret
pop
xchg
lea
loopne
jg
dec
fadds
repz
jmp
mov
cmc
lea
fldt
sbb
daa
ret
sbb
inc
js
testl
insb
mov
inc
cmp
sub
cmp
add
loopne
xchg
or
repz
jle
adc
inc
add
mov
add
push
push
inc
dec
xor
adc
push
shll
popf
sbb
push
jle
and
sub
icebp
stc
insl
popf
cs
jecxz
cli
xchg
xor
gs
pop
in
push
jle
js
push
in
lock
in
or
in
mov
mov
pop
jmp
lods
push
sar
stos
sbb
pop
jge
jnp
js
sub
push
mov
popa
sub
inc
inc
xlat
pop
bound
movsb
test
jp
xchg
and
psrlq
in
and
into
movsl
test
imul
lret
sbb
xchg
push
mov
cmp
or
ss
daa
sti
daa
mov
jno
sbb
push
push
stos
push
adc
pop
sbb
or
lret
push
lret
scas
dec
jmp
je
int3
ret
test
adc
stos
loope
into
popa
and
lahf
mov
fidivs
int
pop
pop
mov
daa
mov
inc
addr16
sub
sub
subl
aas
fadd
push
dec
test
add
mov
jno
lea
popf
int3
fstl
test
mov
leave
shl
push
push
int
cmpsl
imul
sahf
add
adc
es
pop
in
jns
fisubs
stos
push
test
pop
les
mov
stos
lods
or
sbb
enter
jnp
arpl
out
push
imul
hlt
jnp
push
xor
jbe
or
sbb
mov
mov
mov
lahf
dec
cmc
pop
mov
lods
pop
jle
xchg
repz
jmp
pop
test
lods
sbb
ljmp
jle
lds
js
lods
sub
mov
cli
das
mov
cli
xor
adc
mov
bound
inc
rorl
leave
dec
ret
repz
lahf
push
xlat
xor
mov
xchg
push
fwait
nop
jmp
bound
aad
daa
iret
jbe
inc
add
push
xchg
dec
or
ds
lcall
cmp
mov
pop
lret
pop
sahf
xchg
xchg
mov
imul
pop
rcrb
fnstenv
or
adc
or
fistl
cmp
clc
or
stos
xchg
scas
std
ljmp
sub
jl
xor
sahf
enter
insl
fildll
sti
gs
xor
fists
sub
jnp
mov
in
mov
jmp
adc
mov
jmp
int
les
mov
add
loopne
cmp
pop
pop
movsb
sub
idivb
cmp
inc
jmp
pop
fisttpl
push
xor
pop
xor
cmp
call
push
cmp
adc
loop
push
popf
jl
fstpl
dec
stos
push
mov
cltd
sbb
jl
and
pop
cmp
sub
push
push
stos
lahf
pop
lods
movsl
sbb
mov
insb
shll
or
loop
rcll
out
jb
push
jg
xlat
push
pop
inc
iret
subb
add
xor
pop
pop
ret
jge
jmp
xor
pusha
sbb
lahf
adc
and
push
or
push
fstpt
jle
dec
sbb
fldt
cmp
je
stc
mov
test
rcll
sbbb
adc
inc
popa
mov
adc
sbb
mov
inc
lods
inc
scas
out
sbb
add
aas
pop
or
cs
mov
push
add
sub
shrb
loop
sbb
stos
push
jb
in
xor
cmpsl
daa
loope,pn
int
lds
inc
mov
pop
jp
pop
mov
addr16
fildll
pop
mov
aas
sbb
push
pop
push
pop
sub
mov
sub
jmp
aaa
or
prefetch
dec
or
mov
addr16
or
loop
mov
pop
or
rcll
stc
sbb
or
dec
xchg
sub
fcoms
cwtl
xor
fdivrs
leave
ja
subl
nop
mov
mov
clc
cmpsb
cmp
insl
mov
add
xchg
mov
sbb
hlt
add
test
loope
pop
sub
loope
xchg
rorl
imul
xchg
xchg
add
sub
or
mov
sarb
pop
movsl
das
sbb
in
ret
push
or
aaa
andb
jbe
scas
cmc
into
pop
mov
addr16
cltd
jb
or
in
ja
outsb
xchg
mov
fisttpl
sbb
es
dec
inc
xchg
sbb
shlb
cmp
in
inc
movsl
out
insb
dec
push
xchg
mov
sbb
pop
sub
dec
cmp
xchg
ss
lock
mov
lcall
fidivl
movl
pop
xchg
push
sbb
push
aas
xchg
fcompl
mov
testb
and
add
repnz
xor
sbbb
cld
mov
into
rclb
push
sbb
pushf
in
rcll
in
add
out
cmc
fs
xchg
pop
int3
fstps
inc
sub
ss
fisttps
cmp
leave
cmp
sbb
ds
daa
stos
jge
fnsave
inc
sbb
out
jl
dec
dec
lods
fmull
cmpsb
call
xor
das
ficompl
cmp
sbb
xlat
mov
int3
inc
aad
sub
jnp
leave
pop
cmp
repnz
movsb
add
addl
mov
cmp
jecxz
fwait
mov
jbe
pop
jno
sbb
mov
cltd
shll
arpl
ffree
loopne
mov
pop
pop
mov
dec
or
adc
cld
or
pavgw
inc
push
lods
out
pop
add
pop
mov
into
ds
pop
pop
adc
fdiv
je
push
sub
dec
mov
aas
in
and
push
dec
or
or
xor
jbe
outsl
loopne
pop
cmp
imul
fildl
jne
addr16
sub
call
and
in
aas
cmp
pop
xor
xor
shll
test
mov
push
mov
sbb
stos
xor
xchg
movsb
mov
or
dec
jg
and
popf
sti
mov
adc
shrb
adc
clc
loopne
inc
shl
add
adcl
lret
ds
mov
push
insl
push
leave
out
cli
xchg
imul
push
jb
cmp
pop
mov
mov
int
sbb
lea
dec
inc
jl
loopne
cmp
jae
lret
inc
dec
iret
jle
rclb
and
mov
fnstsw
rcrl
jnp
cwtl
mov
xchg
loope
jno
rcrl
sub
adc
push
sub
enter
dec
inc
and
cmp
lock
or
popf
sahf
jmp
filds
sub
inc
outsl
dec
cli
aad
mov
push
xchg
frstor
imulb
and
mulb
aaa
nop
js
fs
cmp
mov
mov
into
and
ljmp
add
shll
mov
xor
test
lcall
imul
adc
xchg
mov
stc
rorb
arpl
iret
xchg
dec
xor
js
jecxz
inc
and
into
out
dec
jnp
leave
xchg
negl
in
or
dec
call
ss
mov
scas
jle
mov
ja
js
adc
fldl
lret
and
adc
mov
xor
outsb
xchg
lds
xchg
pop
punpcklwd
pop
test
stos
in
popa
nop
insl
ljmp
leave
lock
insl
cmc
adc
in
cld
ds
sub
push
cmpsb
into
loope
fiadds
adc
fsubrl
iret
psubq
xchg
mov
imul
mov
imul
pop
stc
xchg
xchg
fsubrl
or
or
adc
adc
addr16
pop
insb
rcrb
in
dec
sti
aas
push
pop
out
in
cltd
adc
or
outsl
jg
insb
and
cltd
inc
and
stos
jns
push
mov
imul
push
cmp
and
jp
mov
jg
sub
push
mov
sub
or
xor
lock
pusha
ret
scas
ljmp
rorb
clc
lods
push
imul
imull
cmp
repnz
mov
dec
jae
lods
and
push
pop
icebp
dec
add
xor
pop
push
and
xchg
pop
mov
lock
cld
cmp
arpl
cmp
or
fldl
pop
cmp
push
pop
js
lret
aaa
inc
stc
add
std
loop
push
push
movsl
jns
fldenv
iret
xchg
stos
cld
push
fnstcw
in
push
mov
jmp
sub
xchg
js
mov
jo
cmp
jecxz
dec
pop
sub
push
in
pmaddwd
aaa
lret
xchg
lret
pop
dec
xorl
dec
mov
or
push
fs
and
sub
movsl
test
adc
out
fs
mov
adcb
push
xor
jno
mov
inc
imul
mov
dec
fcmovb
dec
xor
movsb
add
ljmp
dec
rolb
loopne
adc
pop
lret
lret
cli
into
mov
movsb
sub
mov
test
nop
les
es
testl
idiv
shr
lock
push
mov
repz
test
std
cmp
jmp
adc
xor
mov
ss
inc
mov
xchg
cmp
lds
jo
das
lcall
inc
xor
mov
stos
out
jb
aad
mov
and
mov
push
sub
dec
aas
ret
sub
shl
rclb
es
cmp
lret
mov
icebp
xor
push
leave
aaa
pop
add
stos
sarl
mov
mov
nop
lcall
xchg
mov
sbb
fmull
ret
adc
sbb
call
cmp
fidivs
add
or
andl
mov
and
loop
mov
jecxz
add
inc
mov
or
cmp
adc
mov
mov
or
in
clc
mov
jecxz
cltd
fsubs
adc
xorl
pusha
jg
mov
mov
lods
ljmp
and
push
jbe
in
push
testb
sbb
xchg
clc
test
sti
dec
adc
cs
pop
or
push
rcl
sbb
repz
xor
das
mov
testb
fisubrs
aad
jae
lret
mov
bnd
cltd
pop
addr16
scas
pop
mov
dec
mov
and
shrb
pop
imul
shrb
bound
cmp
xor
out
add
fdivrs
ret
cld
ror
push
cs
aad
sbb
lds
cmc
pop
and
adc
pusha
pushf
and
mov
insl
andb
pop
hlt
xchg
xor
mov
enter
mov
xlat
jne
add
mov
xlat
mov
cmp
push
in
into
fdivrl
sub
lret
jmp
fwait
jne
sbb
mov
hlt
xchg
popa
int
push
out
sub
inc
or
and
call
xchg
xchg
mov
inc
pop
add
xchg
test
lods
idiv
out
sub
xor
mov
dec
fiaddl
jmp
fistl
push
or
gs
stc
mov
mov
push
decl
jecxz
enter
inc
xor
test
xorb
add
outsl
out
mov
pop
imul
cld
xchg
xchg
lods
jae
cmp
push
int
outsb
ja
stos
je
xchg
lahf
cs
xchg
pop
jns
xchg
pop
les
int3
cmp
sbb
cmp
lods
daa
jne
fnstcw
orl
push
jo
repz
aaa
lea
loop
out
sub
push
pusha
cmc
lret
mov
dec
dec
sbb
test
push
push
push
lahf
dec
xorb
fwait
leave
ds
popf
dec
mov
int3
jecxz
fisttpll
pop
popa
or
jg
out
arpl
push
cmp
xchg
in
mov
into
mov
scas
jl
pop
mov
jge
ret
cmp
stos
mov
jl
fimuls
aad
cmp
push
popf
inc
or
mov
mov
lcall
aad
int
popa
sti
pop
out
dec
jbe
or
inc
pop
icebp
mov
fisttpl
popf
cwtl
and
xor
push
fdivr
gs
stc
pop
pop
pop
leave
pop
insb
cmpb
sbb
in
out
pop
nop
scas
es
jecxz
cmc
sub
sub
sub
xorb
dec
inc
sbb
cmp
mov
adc
xchg
fimull
and
inc
les
cmp
ja
and
hlt
jnp
push
movsl
mov
push
fidivl
in
push
xchg
jo
movmskps
ljmp
mov
out
fcom
jb
cmp
mov
cwtl
ljmp
sub
xchg
xchg
jmp
add
in
pop
out
ret
pop
mov
xor
or
cmp
sub
dec
add
cmc
ds
jmp
clc
xchg
and
mov
mov
mov
in
lret
or
in
loop
add
inc
sub
xor
andb
push
sub
mov
sbb
mov
mov
out
mov
cmpsl
adc
je
outsl
insb
fnstcw
or
stos
adc
nop
dec
sub
xor
xchg
cmpsl
push
sti
and
dec
dec
xchg
xor
cmpsb
adc
adc
add
jbe
out
es
scas
mov
sahf
jecxz
pop
not
sub
pop
cmc
pop
mov
dec
xchg
flds
andl
cmp
hlt
repnz
jp
jae
inc
mov
xchg
lahf
adc
mov
mov
lea
loop
xchg
sbbl
push
jno
xchg
dec
out
mov
pusha
xchg
leave
or
ja
jge
push
out
out
dec
add
js
mov
repz
dec
xlat
mov
mulb
mov
pop
mov
sbb
shlb
inc
mov
addr16
imul
hlt
cs
inc
add
leave
pop
repz
repnz
fnstsw
sbb
insb
popa
and
dec
lock
pop
cmp
or
repz
test
push
mov
jnp
mov
stos
inc
xadd
rorb
jae
stc
cld
inc
add
mov
cmc
loopne
pop
dec
pop
mov
mov
jge
nop
cli
and
mov
ficompl
stos
mov
pop
fmuls
sahf
xlat
sbb
loopne
jecxz
aam
cmp
mov
sbb
mov
addr16
lret
stos
movb
rclb
xor
ffree
cmp
test
and
orb
rcll
test
push
rcl
xlat
sub
xchg
icebp
movsb
or
adc
sbb
adc
push
rolb
in
pop
dec
jno
rolb
je
lods
imul
iret
sahf
aam
in
cli
add
bound
bound
push
ds
and
repz
sbb
cmpsl
aam
adc
jmp
mov
fisubrl
add
xor
push
push
xchg
dec
push
cld
clc
push
mov
ret
je
mov
add
push
push
imul
dec
push
mov
mov
out
fcoml
pop
jno
repz
imul
ja
xchg
enter
cmc
imul
xchg
add
xor
stc
leave
in
cwtl
mov
into
test
inc
loope
jbe
fadds
pushf
adc
push
lar
sbb
inc
ljmp
ds
imul
add
inc
pop
or
fcom
pop
ret
push
sub
mov
xor
jle
mov
mov
ret
cmp
mov
int
adcb
sub
sbb
je
xchg
iret
mov
aad
popf
ds
mov
jno
aam
stos
iret
mov
dec
loop
pextrw
and
sahf
xor
shll
test
clc
mov
mov
jp
jmp
sbb
push
add
mov
and
out
fcomp
mov
int3
inc
and
xchg
xor
faddp
or
aas
cmpl
jns
add
rcl
ret
mov
xor
dec
jp
jge
mov
popf
mov
cmp
jbe
outsl
out
mov
imul
mov
movsl
push
pop
xor
sti
and
inc
and
dec
sub
jmp
shlb
push
push
xor
xor
dec
mov
xchg
call
jl
pop
xchg
test
mov
fildll
aam
rclb
sbb
inc
frstor
ret
mov
mov
or
jmp
jnp
jno
and
sbb
fistpll
lcall
scas
jns
jne
mov
adc
leave
hlt
imul
sbb
sbb
inc
mov
push
ds
mov
xor
cmp
int
add
aam
xor
into
lock
pop
rclb
xchg
leave
sub
pmuludq
push
ljmp
aas
int3
inc
xchg
arpl
aas
pushf
out
divps
adc
jl
imul
cmp
cli
add
and
ret
cli
lds
adc
push
cltd
push
lds
fwait
push
push
addr16
stos
stc
mov
push
mov
int3
sub
mov
push
repz
call
pushf
scas
mov
push
xorb
jg
scas
mov
jae
out
stos
and
jecxz
cs
in
imul
push
add
mov
dec
dec
rorb
add
sbb
hlt
sub
loope
sub
lds
sarl
jo
int3
cwtl
adc
xor
push
hlt
sbb
inc
mov
into
imul
idiv
gs
inc
cld
mov
lds
inc
fdivrs
insl
popa
outsl
mov
mov
sbb
in
sub
incl
ljmpw
inc
mov
cmpsb
xlat
xchg
and
mov
cmp
scas
call
insb
pop
scas
sub
shr
jnp
pop
aas
adc
inc
mov
fdivs
or
iret
and
cs
ja
in
cli
lret
xchg
aas
cli
mov
sub
jmp
pop
mov
xor
mov
leave
les
cmp
pop
outsb
jl
push
and
or
rorl
dec
cs
movsb
mov
repnz
jmp
inc
inc
sub
testb
dec
push
dec
popl
adc
ret
ljmp
push
jmp
in
outsb
or
inc
jg
lret
adc
mov
jp
int3
shlb
jecxz
cmp
lea
iret
inc
push
out
data16
mov
mov
movsb
aam
aaa
sbb
lahf
adc
cld
fwait
pop
sarl
dec
test
jg
nop
out
cmp
mov
mov
lock
jle
addr16
xchg
pop
pop
inc
push
mov
push
fs
sbb
mov
hlt
incl
jno
mov
pop
rcll
cli
aam
fstl
xchg
cmp
pop
cwtl
mov
mov
cmp
push
in
out
pop
int3
sbb
dec
movsl
sbbb
cmp
pushf
pop
sub
mov
pop
or
icebp
or
push
or
fbstp
xor
xlat
shlb
add
sub
or
xchg
push
loopne
aam
inc
ss
pop
repnz
mov
cmp
sub
inc
mov
imulb
mov
insl
add
mov
repnz
sbb
mov
adc
mov
jbe
shlb
push
mov
das
lea
gs
pop
fildll
lock
sbb
inc
add
scas
cmp
inc
mov
push
sub
clc
in
in
hlt
jb
dec
xchg
pop
pusha
aas
xor
mov
leave
pushf
pop
js
inc
add
dec
push
rol
mov
in
cld
idivl
fldt
mov
xchg
add
mov
imul
imul
mov
mov
arpl
les
xor
je
ret
sbbb
inc
arpl
xor
je
lods
andb
pop
mov
lea
adcb
jp
jno
jg
or
mov
push
imul
aaa
cmc
adc
jo,pt
les
xorl
movsb
das
clc
in
divb
insl
daa
fdivrs
lahf
dec
jg
cmpsb
cmp
test
and
cmpsb
jle
popf
and
dec
popf
push
add
ja
cmpsl
shrl
outsl
mov
push
add
add
mov
sbb
sub
stc
inc
cmp
mov
fnstcw
mov
mov
daa
adc
xlat
dec
es
arpl
iret
dec
pusha
or
cmp
adc
outsl
pop
sub
sub
pushf
arpl
imull
fstpt
mov
fsubl
ret
repz
clc
push
arpl
inc
mov
stos
pop
inc
mov
das
aaa
mov
sbb
int3
push
out
pop
xor
daa
repz
push
mov
int3
cmpsb
pop
daa
cmpsl
mov
iret
cmp
cmp
pop
dec
fsubp
adc
outsl
loop
pusha
rclb
subl
xchg
mov
int
mov
inc
jecxz
test
aas
stos
out
and
scas
fsubs
cld
or
fildll
cmp
or
pop
xchg
push
rcll
mov
dec
lods
cmp
dec
cmp
lea
xor
push
push
repnz
aam
in
mov
mov
push
mov
cmp
cmp
jl
vpor
roll
and
pop
pop
add
xor
push
js
je
xor
sbbb
xchg
lahf
das
push
sahf
and
xor
test
mov
cmp
imul
jle
jge
mov
popf
mov
or
pop
rorl
cli
adc
jo
clc
mov
mov
stos
jmp
dec
loopne
insl
lds
inc
std
xor
sub
pop
rcl
inc
hlt
dec
popa
pusha
jmp
mov
mov
mov
adc
jns
or
daa
scas
or
icebp
mov
sub
add
jecxz
xchg
adc
lock
sbb
repz
fdiv
xor
jmp
mov
ja
in
aam
mov
int3
and
mov
inc
sahf
hlt
lods
mov
mov
cmpsb
or
dec
sub
cmp
jecxz
mov
cmpsb
mov
inc
out
cltd
dec
sbb
jge
scas
fwait
cltd
push
pop
xor
pop
xor
lcall
aam
sbb
icebp
shrl
lret
jle
imul
test
push
mov
xchg
mov
add
sbb
lret
mov
pop
cs
or
cmp
loope
dec
lret
fs
clc
sbb
lahf
push
sti
jne
push
int
mov
das
adc
pop
stos
fisubrs
xor
inc
mov
mulb
mov
mov
jb
dec
xor
jae
mov
stos
sarl
adc
push
jl
mov
xchg
divb
and
movsb
pushf
mov
add
insl
jmp
and
pop
cmpsl
filds
mov
adc
insl
das
data16
xlat
pop
xor
movsb
clc
cmp
adc
popa
dec
outsl
mov
mov
mov
rcrb
xorl
fsubs
std
gs
in
pop
push
jno
mov
cmp
and
icebp
test
incb
fcomps
lret
xchg
ds
pop
popf
mov
sarl
inc
sbb
frstor
mov
lock
scas
pop
inc
pop
xchg
jns
sbb
xchg
pop
sti
mov
and
out
out
ss
adc
pushf
dec
pop
add
inc
mov
ret
cs
pop
xor
dec
sub
xlat
cmpb
mov
loopne
aas
jae
imul
inc
adc
pop
or
add
xor
fadds
mov
sub
movsb
std
sub
daa
sbb
outsl
popa
cld
int
dec
fldenv
inc
jno
xor
push
fdivrl
cli
into
out
mov
cltd
mov
stos
cmpsl
add
fucomip
enter
repnz
xchg
inc
push
jnp
mov
dec
out
cli
out
scas
pop
outsb
jp
lods
repnz
cmp
je
sahf
xor
sub
jnp
int
fldt
pop
adc
fs
das
xor
scas
repz
test
sub
add
loop
cmpsl
mov
in
add
test
dec
push
mov
xor
dec
pop
jl
add
push
mov
push
sbb
mov
in
or
or
std
cmp
jmp
mov
pop
pop
call
push
sub
ficompl
inc
ret
jle
scas
jbe
mov
xor
push
xchg
lods
pop
andb
cmp
push
mov
jmp
xchg
dec
dec
rorb
cmp
in
mov
sub
jecxz
clc
stos
jno
ds
ror
pushf
popf
sbb
clc
in
leave
dec
cmp
jle
add
outsb
fwait
jns
fdivs
pop
in
pop
loope
push
adc
fldcw
dec
inc
lods
xchg
shr
ljmp
inc
sbb
test
push
nop
mov
mov
inc
into
jns
pop
insb
inc
in
lods
push
imul
test
add
stos
in
les
mov
shll
fcoms
push
xchg
jmp
es
in
jbe
subb
push
xchg
pop
sbb
faddp
pop
mov
mov
and
aad
adc
mov
xor
adc
adc
mov
les
push
adc
jmp
aam
push
cs
ljmp
sub
pop
push
cmp
in
add
data16
cmpsb
mov
out
jno
in
xchg
mov
pop
jns
inc
pop
jp
adc
lods
imul
or
test
and
jbe
jns
loope
lahf
xchg
jg
push
mov
lcall
leave
stos
cmp
sub
pushl
pusha
pop
out
add
push
cltd
rorb
cmpsl
dec
cmpsb
push
xor
push
punpckhdq
inc
mov
mov
xchg
dec
gs
cmp
jno
xchg
mov
loop
test
sub
and
les
pusha
mov
push
shlb
in
jge
insl
aaa
testb
fidivrl
in
aaa
ljmp
test
mov
mov
adc
ret
push
sarb
enter
scas
fwait
jno
add
lret
imul
fsts
cld
scas
int
xchg
dec
insb
jb
add
add
je
xlat
stos
pop
fdivrl
pop
addr16
xor
insl
xchg
push
sub
push
jge
mov
xor
add
dec
jbe
out
ds
arpl
xor
imull
into
xlat
ficoml
idivb
cwtl
adc
cmpsl
mov
push
aas
xor
push
popa
cwtl
mov
inc
in
inc
push
aaa
push
fldcw
roll
inc
sbb
insb
mov
lock
mov
dec
jbe
iret
xchg
or
lods
push
test
rorb
lahf
jnp
mov
mov
sbb
cmc
fwait
xor
dec
dec
xchg
cmp
and
xlat
repnz
test
int
fsub
push
cli
sbb
mov
shr
in
mov
and
icebp
lcall
shlb
in
add
xor
add
cmp
jge
clc
pop
pop
addr16
sbb
out
jge
cs
daa
imul
popf
push
adc
pop
mov
outsb
cwtl
adc
mov
bound
push
movsb
or
popf
orl
cmp
loopne
add
xchg
inc
enter
push
imul
test
dec
movsl
inc
jns
sahf
sbb
stc
cld
inc
xchg
int
test
cmp
leave
jae
cltd
lods
jp
xor
not
add
fninit
movsb
sbb
xor
movsl
sti
fcoml
push
push
jb
clc
pop
leave
leave
out
mov
push
mov
ds
movsb
popf
mov
cltd
icebp
cwtl
jbe
aaa
aaa
ror
jg
mul
popa
insb
aas
mov
jge
stos
cmp
jo
repz
lahf
lret
imul
pop
cwtl
cli
fcomps
lds
insb
add
das
addr16
cwtl
xchg
cmp
ds
idivb
push
in
pushl
pushf
test
push
mov
cmpl
inc
adc
out
dec
movsl
adc
int
push
sub
push
std
cwtl
ret
push
or
enter
sub
sarb
mov
adc
sub
dec
scas
cli
add
xlat
inc
adc
mov
jmp
and
sub
int
outsb
inc
js
int3
sbb
rcll
sbb
sbb
sar
add
dec
sub
in
push
ficoms
clc
jecxz
movsl
fisttpl
loopne
pop
xlat
gs
icebp
scas
cmp
mov
jg
inc
push
in
cmp
insb
ss
hlt
mov
cmpl
mov
fdivs
hlt
xchg
cmpsl
or
stc
push
push
mov
hlt
push
pop
sarb
roll
adc
js
mov
add
xchg
sbb
cwtl
xchg
nop
xor
mov
lcall
in
push
fists
addr16
int
enter
subb
std
mov
pop
sub
sahf
push
outsl
inc
xor
jne
adc
jp
ljmp
sbb
jmp
and
and
cmpsb
cwtl
ret
pop
fists
sub
mov
ret
pop
repnz
jbe
and
mov
cwtl
mov
xlat
aam
sub
adc
xchg
dec
stos
call
add
push
stc
outsl
fcoml
outsl
loopne
mov
push
pop
add
push
mov
jne
aas
and
add
mov
sarl
ret
loop
lods
lods
or
fimuls
leave
sub
ss
dec
mov
fcoms
dec
cmp
lds
lret
fisttpll
mov
mov
dec
mov
push
xchg
dec
aam
in
pop
out
cmp
mov
sbb
je
scas
shrb
adc
pushf
sahf
xchg
rcll
scas
xcrypt-ecb
cmpsl
int
inc
in
repnz
xchg
push
in
andb
insb
sbb
cmp
mov
int3
das
dec
loop
xor
movsl
adc
mov
sbb
fs
mov
in
inc
loopne
leave
lea
pop
mov
fldl
or
or
cli
adc
cmc
dec
mov
inc
outsl
dec
xchg
jnp
out
leave
jg
in
inc
pushl
mov
xchg
mov
cld
es
ljmp
sbb
ret
test
or
xchg
add
daa
movsb
fst
popa
sub
add
mov
jno
pop
in
jne
pop
sbb
sub
mov
or
cmpsb
pop
call
adc
jle
pop
cs
out
dec
sbb
add
push
lds
jb
sarb
fwait
cmc
test
inc
dec
dec
fwait
daa
xchg
push
ret
dec
jne
pop
add
loope
cmc
mov
cmpsb
adc
xor
adc
adc
dec
jmp
inc
pop
cs
dec
mov
pop
insb
sbb
xor
popf
pusha
bound
adc
pop
dec
je
out
scas
cli
ja
std
in
mov
sbb
inc
jnp
les
inc
pop
or
xchg
cmp
sbb
cwtl
cmp
jno
dec
popf
push
xchg
ret
or
cltd
mov
or
fdivl
push
ret
mov
mov
sbb
out
mov
xor
pop
push
or
mov
push
cmpsl
fdivp
shl
sbb
in
cmpsb
xor
push
xor
add
in
fsubrs
shll
cmp
addr16
sbb
mov
push
or
cli
ljmp
cmp
es
rolb
inc
jns
sub
cwtl
add
int
sub
stos
ljmp
pop
mov
push
neg
gs
test
adc
inc
push
inc
sub
mov
jmp
jge
sbb
sbb
mov
push
dec
and
out
fucomp
inc
sub
fadd
not
ljmp
call
cmp
cmp
cmpl
add
sub
cmp
and
pop
sub
mov
mov
sbb
or
lock
sahf
sub
aad
lahf
add
adc
xorb
aas
in
dec
xor
addb
xchg
push
cmp
dec
pop
inc
aas
fs
scas
mov
mov
leave
xor
cmpsl
jo
fdivrl
fidivrl
inc
aad
les
jns
ret
inc
loop
dec
lahf
and
cmpsl
push
pop
dec
and
push
lcall
cwtl
imul
sub
insb
mov
sbb
mov
insw
or
bound
movsl
popa
adc
bnd
pop
sub
lcall
mov
xchg
insl
rcll
repz
test
adc
lock
adc
test
sub
xor
cmpsl
mov
xchg
out
mov
dec
in
imul
call
sub
push
sbb
push
push
mov
fiadds
add
fistpl
xor
das
call
fstl
shll
jae
mov
mov
movsl
cmp
sub
in
mov
leave
push
lds
mov
stos
mov
push
jmp
dec
xorl
mulb
dec
test
into
xchg
scas
xchg
ds
popf
adc
je
ffree
out
movsb
in
mov
test
and
add
das
pop
dec
popf
test
add
mov
mov
mov
pop
jle
add
gs
in
lcall
js
dec
enter
mov
or
insb
sbb
add
sti
sbb
cmpsl
orb
mov
push
dec
popf
ret
adc
push
or
gs
mov
popa
pop
repz
pop
fimull
test
dec
int
mov
cmp
pop
addr16
cli
enter
leave
mov
fsts
push
imull
cltd
aas
dec
ret
filds
pop
lds
mov
inc
xchg
sub
loopne
xchg
add
dec
pop
add
mov
adc
xor
cli
inc
fsts
xlat
cmp
sub
mov
pop
out
fwait
jecxz
aam
jns
or
or
or
mov
jo
mov
xchg
fdivr
inc
adc
sbb
sbb
and
je
fxch
dec
push
mov
jbe
push
stos
subl
cltd
xchg
addr16
imul
ljmp
xchg
shll
lds
xlat
and
mov
out
test
jmp
xchg
jae
or
jne
mov
sti
sbb
leave
pop
es
sbb
cmpsb
popa
nop
and
add
imul
dec
in
pop
fnstsw
and
scas
push
aas
into
mov
in
repz
add
fucomip
xor
push
jmp
sbb
addr16
in
daa
lahf
sbb
ja
cmp
fsubrl
xchg
cmpsb
data16
pop
ss
inc
cmp
jle
dec
mov
and
mov
pop
insl
cmp
in
mov
cwtl
addr16
ret
adc
xchg
sbb
push
imul
adc
mov
push
cmp
sbbb
loopne
mov
sub
fcomps
mov
pop
mov
and
add
jl
loop
jbe
mov
xchg
jns
xor
repz
dec
mov
and
icebp
add
and
push
adc
cmc
lds
mov
shl
aad
aad
jg
jle
es
xchg
lret
fsubl
dec
jg
stos
stc
arpl
lahf
sbb
cmp
sbb
nop
push
mov
mov
aam
je
jae
lret
ljmp
std
jbe
jo
dec
shll
add
mov
mov
mov
cs
fdivrl
pop
imul
fbld
insb
push
mov
aam
shrl
or
xchg
cmpsl
mov
mov
cmc
loop
push
ss
jge
movsb
lock
cli
es
pop
lods
lahf
mov
adc
xor
xor
lds
jae
mov
fs
xlat
nop
lret
cmp
imul
test
push
cld
mov
xor
lea
aaa
test
sbb
aad
ljmp
adc
add
xchg
adc
js
mov
sub
int
jecxz
fidivl
xchg
or
out
xchg
rcl
cmpsb
std
scas
dec
adc
xchg
push
push
xor
xchg
inc
lds
sti
leave
cmp
stos
and
cmpsl
push
sbbl
jb
pop
mull
les
inc
mov
mov
mov
inc
jecxz
xor
xchg
ljmp
xor
ficoml
out
jecxz
mov
mov
sarb
adc
or
pop
dec
jbe
jmp
sarl
out
shrl
nop
pop
dec
jmp
in
repnz
lods
aam
dec
xor
sahf
mov
cld
pop
fadds
push
mov
jp
push
cmp
iret
mov
mov
jmp
xchg
or
sub
push
inc
test
push
pop
jbe
cld
pop
clc
ret
dec
lds
lods
adc
cmp
hlt
dec
ret
call
jnp
jne
repnz
ja
ret
mov
mov
in
jecxz
movsb
and
jmp
out
cmp
mov
in
rclb
js
notl
xor
inc
andl
minps
or
fistl
and
and
jbe
mov
pop
mov
cld
mov
cltd
testl
mov
dec
mov
pop
or
xchg
cmpsb
outsl
idiv
push
jge
mov
fistps
movsl
test
insl
call
ret
jmp
iret
sub
lret
stc
inc
clc
in
sahf
pop
ret
idivb
xchg
fs
xchg
pop
outsb
fwait
pcmpgtb
cmpsl
cmpsl
or
push
pop
xchg
xor
fcom
lret
mov
push
ljmp
pop
and
shrl
adc
test
int
ds
inc
adc
mov
lea
lock
sub
sahf
loopne
pop
adc
pop
leave
ret
addl
cli
cmpsb
fsubrl
or
xchg
add
test
mov
cmp
ret
add
je
js
or
xchg
or
dec
push
or
and
pushaw
pop
mov
imul
fs
test
cmc
inc
xchg
aas
mov
shrl
sbb
add
outsl
jb
test
and
icebp
add
jae
fstpt
jnp
add
mov
jnp
xchg
xchg
stos
mov
lods
orl
push
hlt
xchg
push
fcmovne
iret
push
push
mov
and
nop
bswap
leave
sbb
xchg
pusha
fimull
or
pop
mov
cmp
in
or
iret
loop
adc
cmpsl
sahf
out
enter
andl
inc
loop
xor
and
pop
adc
fwait
add
jg
cmpsb
or
mov
ds
add
in
inc
jmp
sarb
popf
call
xchg
jo
or
cmp
lods
jge
ror
daa
fwait
loope
sti
sub
popf
fcoms
and
cmp
imul
arpl
jecxz
sti
or
popf
xchg
insl
cwtl
stos
inc
mov
lock
int3
adc
mov
in
sub
cmpsb
out
dec
in
ss
lds
and
jmp
pop
jb
mov
mov
in
cs
ret
mov
lret
andb
mov
outsl
adc
mov
jge
jg
aaa
mov
jo
inc
test
mov
mov
lret
fidivs
lahf
xor
lock
arpl
pop
in
adcb
std
mov
stos
das
mov
inc
fnstenv
push
lods
std
cwtl
stc
inc
ljmp
jge
push
in
ret
and
mov
sbb
out
mov
stos
xchg
adc
into
ljmp
mov
loop
mov
movsb
cmpsb
xor
push
in
icebp
adc
push
repnz
cmp
lahf
rcll
adc
pop
jle
mov
sub
pop
push
dec
mov
dec
inc
pusha
ret
lods
sbb
hlt
cmp
push
push
xor
test
arpl
and
xchg
jmp
mov
lods
sub
dec
addb
dec
xor
xchg
sub
inc
or
xor
filds
scas
or
add
sbb
and
ret
stos
add
nop
jns
inc
and
lds
dec
mov
inc
mov
push
lahf
pop
and
xor
js
adc
cltd
push
jnp
pusha
inc
adc
sub
dec
ret
mov
ss
sub
sbb
cld
pop
es
repz
cmp
inc
mov
je
jge
cs
stos
stc
jae
sbb
push
mov
sbb
cmpsl
xchg
outsb
pop
mov
outsb
mov
add
test
flds
pushl
mov
ret
push
xchg
decb
stos
mov
mov
pop
jnp
adc
lock
and
aas
cmpsb
shll
xor
push
mov
arpl
loop
ret
push
and
pop
and
faddl
jne
cmc
test
inc
jo
cmp
push
negb
mov
pushl
inc
jp
scas
or
pop
vpmuludq
or
jbe
sub
push
inc
xlat
mov
test
enter
dec
jbe
fisttpl
pop
push
push
clc
push
push
xor
loopne
sub
jo
sbb
pop
mov
in
mov
icebp
and
dec
es
mov
aam
jo
mov
cld
in
in
cmp
mov
adcb
aam
dec
cltd
cli
push
and
fwait
in
movsl
mov
xor
mov
pop
cmc
push
jb
ds
into
inc
jae
xchg
mov
mov
out
mov
mov
cwtl
jge
roll
sbb
jne
rcrl
adc
cmp
stos
dec
push
xlat
push
cmp
mov
cmp
push
pusha
les
xor
sbb
lods
xchg
dec
movsl
jbe
ljmp
in
pop
and
fildll
cmpsw
mov
jle
or
dec
loopne
xor
mov
push
iret
test
push
fimuls
inc
std
sahf
movsl
sahf
xlat
add
inc
xorl
stos
loop
pusha
sub
loope
add
mov
inc
cs
les
lcall
push
push
mov
stos
cs
movsl
pushf
or
xchg
ret
fbstp
test
shrb
stos
cmc
adc
fwait
shlb
jp
adc
addr16
adc
fistpll
call
jecxz
ret
cmp
sbb
push
iret
mov
int
dec
in
xchg
pop
jns
rcrl
jno
jmp
js
mov
sbb
xchg
rol
mov
or
lcall
insb
icebp
lahf
dec
xor
adc
repnz
mov
dec
and
js
lds
arpl
push
test
out
mov
dec
adc
enter
mov
or
sub
dec
or
test
or
pop
insb
add
mov
inc
gs
add
ljmp
movsl
imul
fwait
add
icebp
ficomps
das
scas
xacquire
add
es
push
in
push
ja
jbe
mov
js
scas
pushf
fwait
les
fdivl
mov
adc
loopne
lcall
sbb
push
pushf
inc
js
inc
adc
add
aas
mov
push
jg
inc
and
insl
pop
enter
add
pusha
pushf
mov
inc
sub
mov
add
add
add
in
push
push
add
imul
or
rorb
lret
sbb
xchg
je
push
fdivl
and
mov
adc
mov
cmp
mov
es
xchg
xor
sbb
add
leave
mov
icebp
sbb
mov
jge
cmp
jmp
ss
js
or
in
push
into
mov
and
imul
xchg
js
push
and
mov
jge
lret
rcrl
pusha
jl
insl
dec
or
cmp
daa
cmp
cmp
mov
or
or
mov
das
mov
into
enter
push
test
xor
dec
out
pop
push
nop
pop
push
mov
mov
and
and
das
xor
sub
out
pop
adc
jae
pop
and
rclb
dec
sbb
imul
inc
notb
inc
mull
jp
or
das
out
fcoml
fimull
loope
sbb
or
jle
add
xlat
lea
jbe
ljmp
fsubrl
pop
int
sub
outsl
mov
cmp
fmul
lds
and
push
inc
sbb
mov
arpl
out
mov
inc
test
arpl
and
and
js
adc
lds
lcall
insb
lods
add
test
fstp
fldenv
pop
jg
dec
sti
test
lea
push
sub
clc
cmp
adc
insb
movsb
cmp
mov
pushf
jne
je
mov
insb
clc
pop
inc
lock
movsb
mov
inc
mov
lods
outsb
arpl
out
loope
jno
js
pop
aaa
xor
push
jmp
test
sarl
daa
jne
shrl
mov
xchg
jae
iret
push
mov
gs
cmpb
aaa
dec
cltd
mov
cs
sbb
mov
cmpsl
adcb
jmp
mov
cmc
push
sbb
call
scas
adc
fistl
pop
pop
inc
inc
test
adc
fwait
jp
inc
js
dec
push
lods
adc
pop
add
push
insb
pop
neg
sbb
and
or
jae
or
fcoms
adc
xchg
daa
push
stc
add
mov
test
leave
fimuls
inc
jno
lods
stos
inc
fptan
jbe
mov
jmp
outsl
out
pusha
test
cmp
dec
mov
cli
jle
jle
xor
cmp
jg
shrl
out
mov
inc
mov
dec
xchg
loopne
pop
aam
push
mov
call
push
pop
push
dec
das
in
inc
lods
mov
shl
test
imul
mov
lods
mov
mov
inc
mov
negb
jo
sbb
push
out
xchg
adc
dec
aad
dec
cltd
inc
outsl
inc
pop
or
fcompl
lock
adc
jne
inc
es
mov
repnz
cmp
dec
movsl
pop
incl
popl
cmp
and
or
adc
dec
xor
shrl
out
adc
cmpsb
subl
push
ljmp
add
fldcw
stc
add
aaa
adc
out
decb
cmovl
xor
adc
sbb
fs
cmpsb
dec
jnp
push
scas
shl
lret
sbb
mov
mov
ror
out
sub
mov
mov
cmpsl
in
xor
insl
add
shlb
adc
sbb
xor
xlat
rol
pop
mov
jnp
scas
mov
mov
fstpl
sub
mov
clc
dec
pop
inc
arpl
cmp
xor
mov
fwait
loopne
int
jg
fwait
pop
rcrl
rcrl
or
sbb
into
lret
movsl
xchg
ffreep
pop
mov
in
mov
and
stos
mov
bound
fldl
inc
and
xor
cmp
ja
call
jecxz
mov
mov
inc
loope
pop
aad
jo
jecxz
icebp
aam
fdivrp
adc
inc
and
stos
add
xchg
pop
push
xor
jne
mov
add
addr16
aam
data16
sub
scas
xor
in
ret
insb
jmp
push
in
pop
sahf
fsubr
mov
or
push
mov
add
mov
test
or
aaa
popf
and
dec
sub
mov
icebp
aaa
lods
rorl
push
test
test
nop
stc
stc
xchg
cltd
clc
dec
fnsave
loopne
mov
imull
push
mov
cmp
push
sbb
es
cld
and
and
pop
push
into
cmc
ljmp
mov
flds
jl
mov
pop
out
xchg
cwtl
stos
out
dec
sbb
mov
clc
cmpsl
shrl
faddl
mov
cmp
xchg
sti
mov
inc
ficoms
pop
jl
int
mov
jg
std
insl
ret
cmpsb
mov
xchg
mov
int
je
or
sti
rcrb
inc
jmp
mov
pushf
lods
sub
mov
out
mov
test
cmp
sti
not
and
popa
fsubrl
pop
push
mov
dec
cmp
jmp
mov
sub
jecxz
clc
bnd
mov
ds
sbb
int
loopne
sbb
inc
sarl
push
jo
dec
sub
popa
js
mov
out
stc
mov
fisubrs
inc
mov
add
or
shlb
ljmp
cwtl
xor
pop
lret
js
push
and
mov
js
dec
aam
outsl
stc
fists
or
enter
nop
fldt
pop
mov
dec
adc
dec
inc
cmp
gs
mov
push
inc
adc
xor
mov
mov
vmwrite
scas
lcall
fldcw
pop
scas
sbb
imul
in
mov
mov
dec
xchg
dec
test
mov
mulb
invd
hlt
aad
adc
out
imul
push
imul
icebp
mov
inc
adc
and
fcoml
outsb
and
dec
jno
cmp
cmc
dec
out
jno
rcl
lea
frstor
mov
lods
ss
in
xchg
or
lcall
js
adcb
cltd
fidivrl
rcll
imul
jp
aad
pop
jg
jmp
or
cmp
cmp
es
jns
add
and
icebp
push
stc
cld
sub
outsb
orb
std
stos
mov
adc
and
pop
or
xchg
add
xchg
test
sub
fs
imul
pop
lret
clc
fcmovu
sti
pop
shll
movsl
orb
push
cmp
int3
or
in
leave
fisttpll
repnz
push
stos
and
push
sub
shrl
int3
mov
repnz
repnz
je
sti
sbb
mov
jmp
aas
mov
mov
mov
jg
insb
mov
fstpl
mov
xchg
dec
jle
mov
mov
inc
sbb
jb
mov
loop
ljmp
pop
and
pop
testb
fs
mov
lods
jl
inc
mov
mov
cmpb
jno
mov
xchg
out
push
cwtl
xor
mov
push
fldz
cmpsl
jnp
push
lods
clc
cmp
adc
js,pt
pop
inc
test
imul
mov
mov
cmp
fdivrl
adc
sbb
in
testb
imul
fsubl
adc
mov
in
pushf
loopne
daa
fisttps
aas
add
sarb
ret
mov
cld
mov
cmp
les
addw
adcl
push
loopne
js
pop
subb
push
out
aaa
pop
mov
sub
ret
mov
stos
cs
adc
push
dec
adc
lret
push
in
daa
xchg
fdivr
mov
outsb
xchg
dec
mov
loopne
rcrb
out
ret
push
or
sub
xor
negl
imul
sub
into
xchg
scas
xchg
test
inc
movsb
mov
cltd
mov
jnp
insb
xor
fisubrl
and
das
ds
xor
subl
jnp
dec
cmpsl
aam
jae
push
test
inc
pop
lahf
std
mov
mov
mov
and
adc
pop
add
jge
mov
pushf
dec
lods
push
mov
xor
lcall
outsb
lcall
and
lahf
rorb
mov
lds
addr16
fidivs
sbb
adc
mov
cmpb
jb
pop
add
pop
lahf
sbb
mov
in
mov
lcall
mov
jp
mov
mov
inc
pushf
cmc
or
inc
outsb
add
fidivl
xor
insb
vcvtsi2sdl
and
aas
jne
sub
pop
mov
stc
adc
cmpsl
jge
loop
sbb
jno
cld
adc
mov
sbbb
mov
scas
add
lret
pop
mov
lods
pushf
dec
mov
sbb
mov
jp
inc
rcrb
lret
aam
mov
lahf
pop
sub
mov
jecxz
lcall
mov
inc
jno
xor
mov
jp
popf
pushf
and
pop
lea
imul
inc
adc
wrmsr
mov
imul
mov
push
imulb
inc
in
lods
shl
pushf
dec
xchg
inc
test
jns
lahf
fiadds
xlat
faddl
mov
mull
add
or
repz
mov
or
add
test
shlb
rcll
add
fwait
cmp
jae
aam
and
mov
decl
xchg
cwtl
int
fbld
aaa
mov
outsl
arpl
xchg
mov
xchg
mov
mov
jnp
movsl
mov
popf
push
enter
notb
imul
into
mov
decb
dec
sbb
in
das
fwait
sti
ret
sbb
mov
loope
jl,pn
jmp
fisubs
adcl
sbb
clc
in
test
inc
sbb
lds
loope
test
les
icebp
pop
push
adc
jo
jae
adcb
lds
cmc
icebp
stos
fidivrl
and
mov
push
out
mov
or
movsl
popa
inc
xor
movsl
ret
push
js
sarb
jne
jmp
lods
das
std
sahf
mov
and
fucompp
pop
lea
cmp
aaa
fisttps
dec
cmp
mov
add
xor
add
stos
pop
in
cmp
push
push
xlat
xor
cmp
call
push
mov
movsbl
push
lock
pop
imul
sub
pop
lret
lods
mov
stos
test
push
lock
and
sub
aas
jmp
jecxz
mov
and
shll
xchg
or
xchg
jns
out
out
lahf
enter
jg
fldt
dec
lret
push
adc
das
mov
out
mov
pop
scas
cmpsb
test
int3
push
add
es
fisubrs
sahf
add
xchg
jp
adc
jmp
js
push
out
out
inc
jle
and
cmp
dec
adc
movsl
lahf
jb
flds
test
dec
xor
inc
pop
sub
sti
popa
inc
or
push
cmp
sub
pusha
aad
addr16
idivb
push
push
fldenv
xor
lret
adc
or
lret
fbstp
fdivrs
inc
mov
jb
mov
fwait
jge
movb
pop
imul
out
push
outsl
pusha
mov
out
add
push
call
jno
push
stc
std
sbb
mov
mov
mov
mov
sub
push
call
adc
jbe
sbb
andl
shlb
dec
push
sub
dec
mov
xor
jge
dec
outsb
call
push
aad
cmp
inc
mov
xor
loope
or
lcall
fsubr
sub
jmp
dec
outsb
stos
sahf
stos
xchg
cmc
sub
lret
push
jno
lea
jmp
push
dec
jnp
or
les
daa
popa
mov
pop
jne
pop
pop
leave
aaa
adc
or
or
xor
pushl
push
dec
jecxz
iret
mov
xlat
jns
cmpb
rorl
push
fildll
pop
jno
lret
sub
sub
and
xchg
je
push
out
mov
dec
mov
pop
nop
dec
out
in
sbb
loope
pop
mov
xchg
mov
and
xchg
push
pop
loop
push
hlt
pop
movsb
faddl
jg
dec
sti
pop
dec
xchg
add
mov
in
fcompl
and
jae
sbb
push
dec
fisttpll
in
test
cmp
incl
popf
adcl
fs
add
adc
pop
pop
fdivrl
stos
popa
xchg
jnp
lds
mov
je
mov
pop
xchg
sar
mov
dec
cmp
pop
lock
flds
inc
mov
mov
mov
add
out
lock
inc
jle
or
add
dec
cmp
lods
dec
inc
jp
and
jmp
or
xchg
xor
sub
mov
pushf
sub
in
jno
lahf
test
adc
xor
cmpsb
subb
aaa
movsl
int3
das
icebp
inc
aas
popl
sarb
cli
dec
pusha
je
xchg
jmp
ficoml
pushl
xor
out
pop
fldl
cmp
mov
cwtl
insl
jecxz
sbb
test
sahf
add
inc
cmpsl
cmp
jb
insb
notl
sbb
loop
xchg
push
mov
mov
push
mov
mov
pop
outsb
lock
leave
in
inc
xor
add
lcall
xchg
leave
mov
ds
fs
ss
hlt
dec
lods
jl
rcll
flds
fs
stos
fld
pop
dec
sbb
std
push
and
int3
mov
push
cwtl
ja
pushl
push
inc
jmp
fs
imul
dec
outsl
xor
insb
stc
hlt
aaa
or
movsb
rcr
les
push
out
sub
jb
cmp
mov
stos
xchg
push
cmc
ss
xor
pop
or
sahf
push
dec
mov
push
cli
dec
cmp
sub
incl
sub
cmpsb
cld
shrl
xchg
icebp
or
lock
mov
pop
or
leave
loope
adc
icebp
mov
and
test
jg
and
add
dec
in
aam
push
test
aad
inc
and
jns
ret
cmp
mov
or
enter
sti
dec
and
in
je
lahf
or
mov
push
push
or
push
stos
lahf
int3
sti
jnp
sbb
mov
icebp
jno
ret
ret
pop
mov
jl
iret
mov
shlb
inc
test
stos
pop
jae
mov
mov
mov
clc
cmpsl
fwait
pop
out
iret
les
xlat
jmp
mov
inc
sub
fs
dec
add
push
enter
sahf
icebp
jmp
daa
out
pop
jmp
call
inc
push
xor
push
jns
les
jns
mov
xor
xchg
adc
dec
push
adc
xor
cltd
lea
push
je
pop
repz
test
adc
ss
add
jmp
vmovupd
mov
cmc
xor
cmpb
rcrb
pop
std
cmp
jl
ljmp
mov
outsb
and
mov
pusha
jo
mov
xlat
mov
mov
mov
xor
jg
cmp
stos
fstps
stos
test
mov
movsl
pop
shll
hlt
repz
dec
hlt
adc
fwait
dec
ja
outsl
dec
push
inc
cs
jns
pop
xchg
jae
pop
xchg
aas
adc
ja
xchg
inc
inc
in
or
shll
clc
and
fdivs
aam
cwtl
sub
addl
dec
fstps
movsl
repz
jg
cmpsb
pop
pusha
jmp
add
js
cltd
mov
xchg
inc
movzwl
lods
out
and
pop
push
insb
mov
pop
jo
std
cmp
shrl
mov
or
cld
xchg
das
jbe
and
xor
mulb
sub
pushf
jl
push
xor
test
rcrl
sub
mov
pop
xor
es
lret
sti
push
lds
inc
lods
push
xchg
popa
clc
lsl
mov
dec
mov
xchg
add
mov
roll
sti
das
sbb
add
ja
pop
outsb
xor
nop
nop
jg
xor
addl
rcrb
push
stos
movsl
shl
jae
pop
mov
push
cmp
out
dec
mov
jmp
add
add
dec
pop
nop
sub
mov
icebp
scas
out
jne
dec
clc
dec
mov
es
into
mov
push
test
rcll
incb
jns
mov
data16
enter
push
or
pop
cmp
sbb
test
bnd
fistpll
inc
xor
test
inc
in
push
popf
outsl
jmp
loopne
jns
sar
ja
pushf
ret
loope
sbb
ficomps
xchg
imull
pop
jge
cmp
lahf
fwait
cmp
add
jmp
xchg
mov
push
outsb
mov
enter
mov
aaa
outsb
jp
mov
and
in
sahf
movsb
adc
xor
cltd
in
cmpsl
push
pusha
add
pop
nop
lods
cmp
adc
fadd
sbb
into
jnp
repz
push
mov
jae
pop
sbb
arpl
aaa
xor
cs
xchg
sub
repz
inc
and
push
filds
cmp
mov
jmp
and
mov
adc
xor
out
cmp
xor
mov
jb
sub
pop
aad
pop
out
in
popf
and
xchg
jge
mov
push
push
lods
ret
rcl
aam
mov
inc
mov
pushf
aas
cmpsb
sbb
je
dec
cmc
adc
mov
je
sbb
mov
fisttps
push
mov
outsl
cmp
xorb
icebp
pop
sub
adc
cltd
inc
pop
outsl
mov
xor
inc
movsb
test
push
js
lods
imul
or
xor
inc
lahf
and
rcll
imulb
out
or
and
andl
in
inc
push
pop
add
cld
in
cld
aad
jg
movb
ljmp
xchg
push
jae
stos
or
jge
stos
mov
adc
xchg
or
jp
test
xor
es
ret
cmp
call
ds
ljmpw
loope
insb
hlt
icebp
leave
xor
lds
dec
int3
test
enter
xor
xor
push
imull
jns
add
rcrb
ja
or
pop
insl
dec
cltd
cmp
lahf
mov
rcl
pop
lahf
roll
jbe
xchg
sub
ret
jl
cmpsb
xorb
mov
popa
cmp
cmpsw
sub
sti
or
cmc
pop
sti
sahf
cmp
into
jbe
dec
int3
adc
dec
not
pcmpeqw
jge
jae
cmpl
cld
in
loop
je
aad
cmp
in
add
jbe
testb
pop
pop
push
dec
ljmp
pop
sbb
shll
pop
dec
lods
mov
jge
dec
jg
or
adc
outsb
js
xchg
add
iret
decl
lods
es
aad
xchg
outsl
inc
adc
outsl
clc
xor
int
aaa
xor
fcompl
cmp
leave
mov
mov
xor
test
jp
call
popf
aad
dec
mov
iret
jecxz
inc
jns
inc
jno
inc
sti
imul
call
stos
enter
inc
dec
rcr
jae
mov
xchg
cmp
jne
adcb
xchg
sbb
ja
pop
xlat
loopne
popf
fsts
sbb
stos
pop
and
inc
jno
outsb
or
cmpsb
cli
cmp
in
sub
mov
rorb
in
and
push
sbbl
xor
xor
lcall
loopne
data16
faddl
popa
jae
sub
xchg
cmpl
push
dec
outsl
lods
or
sub
fwait
xchg
in
icebp
idivl
lret
gs
xor
mov
sbb
adc
aaa
cmpsb
push
das
xor
divb
jb
test
test
out
jno
mov
xor
loop
and
adc
movsl
fists
dec
es
loopne
inc
sub
mov
cmp
testl
adc
imul
repz
pop
lret
cmp
scas
es
outsb
and
add
mov
mov
jns
lret
xchg
cwtl
xchg
insb
scas
mov
and
enter
idivb
loop
es
adc
fisttpll
xlat
jl
fnstsw
outsl
filds
std
pop
movsb
loopne
addb
gs
and
and
mov
mov
mov
jns
push
hlt
inc
jbe
outsl
mov
pusha
jb
push
inc
mov
ffreep
int
pop
leave
mov
imul
ret
sub
mov
add
mov
jge
lret
rol
xchg
stos
out
add
lods
push
pop
sti
lret
fldcw
es
insb
mov
adc
and
sahf
cmp
cli
loopne
inc
cmp
dec
xchg
adc
cmpsl
push
xor
xlat
jmp
adc
push
jle
fs
cmpsb
xchg
cs
push
inc
jg
or
push
push
and
pop
adc
test
lock
fwait
dec
pushl
lea
pop
fucomp
mov
pop
std
pop
shlb
pusha
rorl
js
sbb
dec
and
or
xchg
loope
jl
mov
sub
and
sub
int3
fwait
mov
iret
dec
loop
add
or
mov
cmp
adc
stos
mov
sahf
adc
mov
js
mov
movl
jne
jae
pop
or
push
arpl
xor
cmp
dec
and
or
xor
popf
mov
cmp
xchg
mov
in
shll
pop
xor
and
mov
cmp
sub
dec
mov
stc
push
mov
mov
and
cmp
dec
push
dec
fldl
and
subl
push
push
fcmovb
pop
negl
jmp
movsl
call
xchg
push
in
sbb
jle
dec
les
lea
push
cmpb
rolb
adc
sub
mov
adc
cmp
sub
push
xorl
pop
jae
out
mov
cld
and
dec
and
xor
scas
add
movsl
movsl
or
ss
mov
nop
aas
lea
mov
clc
cmp
adc
ficoml
jbe
stos
cmc
movsl
fwait
dec
mulb
bound
push
inc
shrb
push
cmp
dec
jb
test
iret
or
repz
push
dec
sti
rcll
mov
pop
cmp
add
fimull
mov
adc
jno
mov
lock
hlt
xor
ljmp
pop
mov
dec
sbb
fildll
pop
pop
xchg
fisttpll
ret
in
fsubs
mov
sbb
in
stc
mov
dec
pop
movsl
cmp
popa
js
add
addr16
shll
sub
jns
je
xor
fstpl
fadds
mov
rorb
call
cmp
adc
sbb
ret
dec
jmp
fldenv
cmp
pxor
jno
xchg
outsb
dec
pop
or
sti
push
pop
xchg
subb
adc
testb
push
fisubl
aaa
aas
xchg
adc
xchg
xchg
dec
fstpt
orb
xchg
rorb
test
xchg
inc
repz
lock
adc
fwait
lds
push
inc
adc
dec
cld
mov
insl
dec
fbld
les
inc
cld
popa
in
daa
into
mov
lock
div
outsb
lret
add
xor
jo
mov
movsb
insl
mov
inc
cmp
sbb
jmp
stos
adc
lods
fcompl
mov
dec
dec
cmpsb
xor
jmp
iret
aad
aas
sahf
jnp
pushf
mov
fs
jmp
aam
push
cmp
in
pop
das
mulb
xchg
add
lods
into
jb
xchg
data16
subl
push
bound
or
or
jg
shrl
add
dec
std
pop
mov
fstl
dec
inc
sbb
and
adc
dec
push
inc
push
mov
cwtl
mov
adc
push
andl
pop
xor
sub
or
or
jno
push
mov
and
scas
inc
push
fisttpll
int
lock
or
lcall
add
ds
popa
mov
sbb
adc
add
pop
cmpsb
pop
clc
xor
cld
insl
outsl
jns
mov
push
sbb
push
jp
js
inc
mov
lahf
adc
pop
push
jmp
rclb
scas
xor
std
jnp
xlat
mov
call
jl
rcr
jns
pop
pushf
loop
enter
lret
pop
mov
icebp
add
lods
jbe
cmpsl
bound
jns
in
pop
addb
push
mov
pop
hlt
and
es
pop
and
cltd
jge
int3
sbbb
mov
mov
add
mov
int3
movsb
and
cmp
add
mov
mov
mov
cltd
testl
cmpsb
pop
pop
out
push
cmp
adc
stc
stos
lret
std
in
inc
adc
cmpsb
mov
xchg
mov
push
lock
pop
sbb
clc
jmp
int
pop
sbb
outsb
out
jg
pop
push
call
ds
mov
xlat
mov
icebp
cmpsb
fisttpl
jl
jp
push
lods
scas
icebp
dec
xor
dec
adc
pop
xchg
xlat
jg
push
push
inc
cli
jb
mov
xchg
adc
mov
lret
push
and
pusha
aas
jae
mov
jo
pop
outsb
dec
mov
gs
pop
adc
repnz
adc
xor
xor
mov
pop
lods
push
pop
cmc
jnp
jg
cld
add
shll
cmc
mov
jecxz
outsb
dec
pop
mov
ja
adc
pop
neg
es
aas
subl
add
cmc
sub
pop
seto
int3
inc
add
mov
jne
lret
leave
jl
ljmp
cld
xchg
and
aad
lea
or
cmp
jl
jg
sbb
lret
adc
cmpsb
inc
je
cld
stc
push
sub
xor
pushf
out
inc
stos
push
clc
rcll
pop
add
shrb
lods
addr16
ret
aad
aas
sbb
sarl
xor
popf
xchg
lret
imul
xchg
aad
lret
sbb
idivl
incb
lea
or
dec
in
aam
popa
inc
xor
or
xor
cmp
cmp
gs
pop
and
xchg
loop
incb
mov
sahf
inc
lock
sarb
xchg
cmp
ljmp
aas
adc
xchg
fcmovnu
jle
pop
or
rcrl
leave
test
daa
loopne
insb
sbb
cmp
sarb
fistpl
mov
popa
sub
push
jbe
cmp
lcall
es
movsbl
cmp
aad
or
and
cmpsl
pop
sub
sarb
hlt
cmc
inc
aam
push
sub
test
fisttpll
int3
adc
mov
mov
adc
loop
cmpsl
ret
cmp
add
xor
ja
subl
mov
cmp
rorb
sub
jae
subl
mov
adc
xchg
cltd
push
ja
lock
int
aas
mov
sub
cmp
jne
ss
and
add
mov
jecxz
fs
jbe
enter
in
cltd
xchg
fcom
lret
jne
sbb
faddl
inc
arpl
rolb
jnp
push
add
pop
gs
arpl
repnz
push
mov
notb
in
xchg
into
and
fadd
pop
dec
jg
sub
mov
hlt
mov
rcrl
mov
cmp
jle
aad
lahf
adc
mov
out
dec
ljmp
dec
movsl
outsl
mov
push
pop
js
mov
mov
jno
cmc
xchg
daa
jl
les
cmp
inc
shlb
xor
loopne
aam
cmpsb
mov
in
dec
addr16
addr16
lcall
pop
lcall
pop
stc
mov
inc
add
mov
int3
imulb
sub
sbb
adc
dec
xchg
adc
jg
scas
lods
sbb
fcmovbe
push
xchg
loopne
call
bnd
mov
push
adcl
ret
push
in
sbb
fdivl
mov
cs
pop
sub
push
fwait
jecxz
loopne
xchg
lret
jmp
dec
mov
scas
mov
call
xor
or
iret
adc
inc
test
jnp
cmp
inc
jmp
fdivrl
fs
pusha
mov
adc
arpl
inc
jb
push
xchg
inc
ljmp
popa
xchg
push
push
mov
pop
and
movsl
daa
xor
stc
rcrl
arpl
ret
iret
add
in
cmpsb
jae
xchg
mov
js
xor
mov
inc
inc
xorb
jle
xchg
arpl
and
mov
nop
xchg
add
adc
inc
mov
sbb
mov
jne
mov
push
pushf
or
cmpl
jnp
and
out
lahf
add
lds
std
mov
decl
arpl
je
sub
mov
es
fbstp
mov
adc
lds
in
dec
rcrb
addr16
shr
popf
ja
shll
test
dec
shll
fmull
rcl
add
xchg
adc
adcb
adc
out
aad
movsl
mov
outsl
xchg
scas
fwait
aas
mov
les
jmp
adc
pop
push
pop
or
shrl
int3
push
dec
movsl
es
ljmp
int3
jge
mov
mov
movsl
movsl
inc
add
cmp
fldt
jmp
adcb
push
es
popa
mov
push
negb
daa
int
movsb
fisttps
push
sub
js
rolb
push
jo
in
test
add
cmp
test
and
adc
inc
pop
pop
mov
mov
dec
mov
daa
sub
imul
inc
adc
es
std
mov
add
adc
es
pop
mov
pop
leave
pushf
mov
and
into
bound
or
xchg
mov
out
sub
mov
in
push
rorl
mov
add
cmpsl
pop
in
pop
jo
je,pn
lret
test
and
ret
out
std
push
addr16
adc
xchg
gs
ja
jl
negl
es
cmc
mov
test
and
test
pop
push
movsl
push
rorl
inc
pop
mov
sbbb
jl
inc
ret
add
xchg
sub
mov
and
sub
xor
jb
insb
mov
sbb
ljmp
xchg
aad
jae
imul
dec
rcrl
xor
inc
test
les
push
in
fists
cmovs
daa
or
xchg
jmp
mov
lds
in
insl
pop
and
cs
jl
jnp
outsb
iret
inc
mov
dec
jbe
fistps
cld
xchg
inc
lret
cmc
jg
inc
mov
mov
ljmp
outsl
call
call
ds
movsl
xchg
adc
pop
dec
andl
lret
icebp
adc
int3
pop
scas
inc
call
shr
xchg
xor
xor
jne
loope
jmp
call
and
movsb
and
mov
imul
mov
dec
dec
in
cmp
mov
lods
aam
or
sub
jb
dec
mov
lods
fwait
cmovno
adc
dec
xchg
scas
int3
es
cmp
outsb
add
addb
aad
je
inc
push
add
dec
jmp
mov
scas
insb
mov
mov
xor
mov
insb
inc
lods
inc
sti
hlt
and
adc
insl
jb
call
push
add
xor
xor
stos
xchg
cld
jle
add
dec
out
pop
adc
js
jns
xorl
std
dec
inc
in
cs
jg
popf
cwtl
mov
sub
ljmp
dec
loope
or
je
sbb
dec
and
pop
leave
out
push
dec
xchg
sti
fisttps
stos
pop
inc
xchg
mov
xorl
jmp
lods
loope
fistpll
jno
sarb
orl
arpl
and
sub
adc
imul
cli
fstl
popa
out
aam
push
xchg
jae
and
mov
sbb
lds
sub
shll
push
mov
adc
lcall
sub
orb
mov
jmp
insl
jne
push
std
inc
iret
jo
ja
sahf
test
ljmp
add
out
test
shll
jno
push
imul
cmp
bound
and
jp
dec
testl
push
test
push
test
testb
js
ljmp
fistps
imul
add
stos
sub
and
fidivl
sub
mov
adc
repnz
mov
dec
mov
fwait
xchg
jne
xlat
mov
fcomip
pop
and
or
push
repnz
movsl
out
fs
jae
dec
sahf
push
mov
dec
mov
sbb
sti
dec
hlt
fnstenv
jecxz
stos
iret
aad
movsb
bound
lahf
jecxz
jne
gs
test
pop
xchg
adc
adcb
sahf
shrb
sub
subl
mov
imul
dec
shrl
movsl
movsl
ror
ja
fwait
xchg
jle
and
pusha
sub
aam
stc
inc
sahf
xor
scas
or
jbe
xchg
sub
outsb
mov
xchg
adc
dec
dec
lea
and
push
es
push
jmp
mov
aad
movsl
xor
sub
jmp
loopne
xor
mov
aas
fistl
std
in
and
pop
popfw
pop
xor
adc
int3
mov
pop
sbb
sub
jo
in
loopne
sbb
popf
push
jg
int3
xor
adc
xor
lcall
inc
xchg
aad
in
ret
cld
ret
mov
test
or
xor
bnd
stos
push
pop
push
fadds
sub
sub
sbb
test
sub
sub
lret
mov
sub
imul
stos
mov
adc
add
dec
jg
pop
inc
dec
add
jnp
in
mov
in
movsl
pop
jo
negb
inc
and
repnz
jbe
std
repz
mov
mov
pusha
shlb
cmp
mov
lret
mov
loope
bound
in
sub
cmp
ds
cmp
pop
inc
mov
or
add
sbb
jmp
push
mov
add
sub
pop
xchg
les
arpl
mov
xor
and
xchg
or
rcr
xor
cvttps2pi
sbb
je
pop
xor
mov
mov
sahf
cmp
ficoms
xor
std
sbb
pop
and
add
pop
inc
sub
gs
sbb
aas
jnp
pusha
imul
decb
je
adc
ljmp
repnz
lcall
dec
dec
fsts
call
lret
pop
lret
cli
pop
loop
sub
aad
daa
into
pop
ret
sarl
mov
call
xlat
mov
push
insb
mov
pusha
xor
gs
bnd
and
lds
rolb
mov
inc
ss
fildll
adc
push
loopne
lahf
push
cmp
mov
aaa
sbb
cmp
push
pop
data16
jb
inc
sub
lret
jnp
cwtl
pop
mov
jge
lretw
scas
or
xchg
xor
xchg
xchg
std
pop
mov
push
loope
fcoms
xor
fwait
shrl
dec
add
xor
fistpl
dec
cmp
inc
and
push
push
js
stc
sub
jl
sbb
mov
stos
jp
imul
push
fldl
bound
and
lea
adc
movsl
xchg
add
mov
wbinvd
xchg
test
or
jge
jmp
fdiv
call
les
sti
pop
add
loope
add
outsb
xor
stos
lock
addr16
test
xlat
mov
hlt
mov
xchg
aaa
push
subb
and
mov
sbbl
xor
sub
cli
cmc
invd
xor
cmp
dec
int3
and
adc
ja
pop
mov
xor
xchg
notb
in
in
fcmovnbe
leave
lock
or
inc
daa
pusha
shll
jae
or
cli
lret
aad
ret
ja
mov
arpl
lahf
imul
bound
lods
call
fwait
not
inc
lods
jbe
ja
sbb
sarb
xchg
inc
fwait
sub
subl
out
inc
pop
scas
or
lret
incb
inc
mov
lods
out
les
loop
movsl
pop
adc
inc
les
sbb
pop
test
aam
in
mov
imul
mov
cs
push
cmpsb
sbb
gs
fucomp
nop
aaa
mov
ljmp
mov
cmpb
dec
adc
or
cld
and
inc
scas
icebp
or
sub
cmp
cmp
or
aas
sbb
popa
add
hlt
cli
mov
mov
dec
or
push
inc
int3
jno
fs
jns
lods
push
jae
aaa
les
filds
mov
jle
outsl
or
sahf
cmpsl
and
out
lret
or
pop
dec
mov
fildll
enter
pop
sbb
push
sub
or
lret
stos
incb
nop
lods
lret
es
jne
push
and
and
or
xor
fnstsw
sbb
sbb
insb
mov
jns
push
cmpsb
insb
dec
std
mov
std
cmp
xor
loope
repnz
dec
dec
rorb
daa
movsl
ficompl
or
adc
stc
dec
cmpsl
jp
jne
cmp
xchg
enter
ror
neg
add
sbb
arpl
std
lret
jne
imul
dec
int
lock
decb
and
mov
sbb
mov
mov
lods
in
ret
xchg
jne
or
ss
push
adc
or
and
dec
inc
xchg
dec
adc
pop
out
div
xchg
sub
xchg
filds
jo
xchg
adc
aad
in
fwait
lock
and
sbb
pop
or
push
mov
fxch
or
xchg
rorl
cmp
sub
inc
inc
or
bound
xchg
jne
cli
push
lods
mov
mov
jb
lods
jb
cmp
test
ret
andb
sub
push
std
cmp
and
and
and
addl
std
pop
aad
int3
mov
push
loopne
cmp
inc
jecxz
dec
mov
dec
mov
mov
dec
les
xchg
pusha
cmc
mov
and
adc
mov
lods
mov
add
aam
or
mov
cwtl
shll
inc
inc
sub
orl
inc
cmp
mov
lods
loope
dec
push
test
insl
lds
stos
mov
adc
daa
jae
jg
ss
or
lcall
sbb
mov
loop
pop
sbb
pop
fldenv
fidivs
sub
and
sub
jmp
and
insl
push
sub
jl
add
xchg
jns
lret
lret
mov
lret
mov
lods
fisttpl
fwait
mov
adcl
imul
xchg
cmp
inc
xor
push
test
ds
pushf
fldcw
xchg
sbb
sbb
xchg
ss
rorb
popf
sti
in
pop
imul
pop
sbb
mov
sti
nop
jbe
aaa
jle
adc
dec
mov
inc
xchg
push
jbe
pop
test
sbb
call
push
mov
sbb
xchg
test
dec
fstps
leave
push
popf
test
ds
outsb
jmp
sub
lahf
out
xchg
loope
test
movsl
fcomps
or
mov
rolb
movsb
call
aam
ja
mov
sbb
adc
push
js
adc
mov
xchg
cmc
add
push
push
mov
shlb
shrl
push
jp
sbbb
fwait
pushf
loop
mov
mov
pop
sbbl
out
inc
or
orb
jne
inc
xor
or
insl
and
dec
sub
lods
xchg
aad
lret
cmp
nop
jecxz
jne
mov
jp
nop
jo
adcb
and
fstl
mov
insl
shrb
xchg
push
cs
pop
pop
inc
mov
in
inc
cs
icebp
xor
push
jae
stos
xor
pop
add
add
mov
mov
in
dec
xchg
ret
xor
loopne
add
iret
bound
shll
or
sub
int3
loop
xor
jnp
les
inc
sub
fadd
leave
xchg
sub
arpl
cli
mov
xor
mov
mulb
adcl
and
icebp
daa
xor
sbb
dec
jecxz
in
mov
nop
rcrb
sahf
into
scas
inc
jno
mov
aaa
xchg
out
lret
dec
call
adc
test
cmp
ljmp
mov
mov
out
cmpsb
xchg
jge
mov
fildll
loop
or
and
jmp
and
fldt
and
andl
pushl
cmpsb
xor
outsl
push
or
aaa
cltd
aaa
sti
mov
xchg
filds
or
es
icebp
lret
sbb
push
aam
pop
bound
int3
xchg
and
adc
in
frstor
or
mov
gs
jo
ficoms
fcoms
fsubp
lret
mov
jbe
pop
inc
fsubrp
xchg
xor
jo
fst
sbb
mov
loopne
cli
xlat
stos
repz
repz
xlat
lea
jmp
or
rorl
clc
push
jnp
cmpsl
adc
xlat
xor
cmpb
mov
jle
sahf
dec
push
int3
cmp
mov
lcall
jge
rep
mov
daa
and
dec
lods
sbb
or
popf
hlt
jbe
sbb
or
jb
rep
ljmp
mov
mov
jmp
lahf
std
or
jecxz
jns
ja
sbb
leave
mov
lahf
dec
repz
ss
xor
inc
int
mov
fldenv
cmp
adc
sahf
movsl
push
add
sbb
jnp
rcr
mov
dec
mov
dec
inc
cltd
xorb
push
dec
cmp
outsb
pop
mov
jmp
orb
repnz
sub
enter
loopne
stc
rcll
xor
pop
leave
lahf
daa
inc
cs
movsb
push
out
cld
xor
or
fwait
push
scas
iret
and
sub
cli
push
int3
xchg
aas
popf
mov
push
addl
mov
cmpsb
or
into
mov
sarl
lret
ss
cmp
adc
stc
out
popa
lock
dec
push
insb
xchg
popa
cmpsb
es
jne
xchg
in
inc
inc
lret
pop
ss
out
les
fisttpll
sub
arpl
pop
dec
cmp
mov
push
jb
and
decb
sub
imul
dec
mov
outsl
sub
dec
pop
mov
call
fdivl
pop
les
push
shrl
sub
shll
xchg
push
inc
pop
mov
lret
inc
aad
cmp
push
dec
cmp
push
cmp
jbe
add
hlt
rcll
adc
fsubs
orb
ljmp
popf
cmpsl
pop
in
add
inc
or
cs
xor
mov
lahf
ret
inc
jae
in
xchg
mov
adc
adc
inc
mov
lcall
popa
mov
jo
xchg
cli
adc
sbb
lock
cmp
testb
inc
mov
sub
fdivl
mov
fimull
ret
je
lahf
pop
loopne
fimuls
scas
cmovbe
lds
mov
sbb
mov
dec
mov
push
xchg
xor
jl
push
ret
xor
sub
int
stos
inc
es
rclb
int3
inc
jle
and
inc
mov
int3
jmp
push
inc
sti
inc
movsl
stos
pop
push
push
lock
data16
sbb
xchg
shrb
pop
fisubl
fdivrl
js
stc
mov
mov
adc
add
jg
mov
test
push
jp
loopne
imul
jo
rorl
stos
adc
test
xchg
int3
or
pop
and
lea
int3
out
pop
cmp
fistps
fbstp
jmp
js
jnp
mov
in
lahf
adc
sbbb
rcr
sbb
pop
push
push
push
jp
xchg
mov
pop
mov
jl
xor
dec
dec
ja
cli
ds
repnz
call
dec
mov
mov
rcrb
xchg
ljmp
push
lock
divl
scas
outsb
adc
jecxz
xchg
xchg
subb
imul
cmp
xchg
push
adc
jge
and
push
or
pop
sub
int
movsb
mov
xor
dec
inc
popf
in
cs
pushf
repnz
mov
xchg
fwait
or
dec
sub
mov
mov
jge
and
push
mov
sbb
xchg
hlt
mov
pop
dec
enter
push
pop
adc
add
stos
or
mov
das
sub
ret
testb
add
pop
in
add
jmp
cmpb
adcl
loope
repnz
adc
xlat
aad
sbb
push
rcrb
cli
sbb
mov
or
jmp
mov
call
push
sarb
cli
insb
icebp
mov
jg
inc
sbb
clc
sub
mov
movsl
push
into
movsl
fdivr
test
mov
flds
je
sbb
jge
mov
fst
sarl
ror
cmp
adc
inc
mov
inc
pop
jnp
loope
test
jns
ss
ja
jnp
sbb
dec
sbb
loopne
push
icebp
cmpsb
add
sar
repz
fldl
add
xchg
cld
mov
aam
xlat
sbb
dec
test
mov
xchg
icebp
xor
arpl
ret
jae
adc
mov
xor
shrl
push
push
shl
inc
xor
mov
adc
scas
jle
sub
cli
fidivrs
jbe
fnstenv
mov
loop
fiadds
xchg
dec
jp
dec
fwait
prefetch
lods
lds
inc
pop
out
repnz
jp
mov
mov
mov
mov
imul
out
xchg
outsl
rcl
add
mov
into
int3
enter
xor
push
mov
call
mov
xchg
outsl
scas
outsl
adc
mov
cli
push
add
insb
iret
mov
outsb
dec
lea
mov
pop
imul
mov
das
int
aad
stc
loop
fwait
push
sbb
adc
jb
insl
loopne
mov
sahf
aaa
and
fwait
lret
mov
and
insb
pushf
add
sti
xchg
cmc
sti
or
out
pop
xlat
xor
dec
mov
lods
xchg
mov
scas
addb
les
mov
push
nop
xchg
cmp
mov
push
das
notl
js
add
sbb
or
push
iret
psubd
push
xchg
testb
mov
cmp
xor
xor
inc
inc
loop
ret
mov
mov
push
pusha
insb
sbb
cmc
mov
xchg
push
pop
pop
push
arpl
push
in
test
bound
lds
fbstp
cmp
fidivrs
push
cltd
es
out
add
pop
or
test
fwait
mov
pause
movsbl
push
inc
and
loope
cmp
imul
mov
fnsave
jle
out
mov
inc
add
push
mov
jbe
insl
iret
jo
es
insb
in
in
xchg
mov
in
lock
or
cld
shrl
sbbb
and
mov
psrlw
mov
inc
mov
sub
test
fsubl
adc
cmpsl
push
stos
inc
out
mov
mov
push
sub
inc
rcr
dec
mov
push
imul
fcoml
out
out
mov
add
and
jl
mov
stos
popf
mov
mov
xchg
cld
sbb
add
mov
pop
sti
and
dec
mov
cmp
arpl
pop
rcl
mul
mov
cmp
js
fimull
xchg
into
fstpl
mov
aad
iret
addb
cmp
jno
mov
shl
loop
icebp
adc
aam
addr16
daa
insl
dec
lret
aam
cld
repz
push
pop
pop
popf
or
test
pop
mov
inc
loopne
inc
mov
cwtl
inc
jne
mov
xchg
jns
dec
pop
adc
fldenv
shrl
push
mov
pushl
loope
addr16
mov
push
leave
aam
pop
jge
fsubrp
outsl
in
and
pop
xor
sbb
aam
mov
adc
push
jg
dec
mov
xor
cwtl
fwait
jge
adc
in
out
mov
std
or
cmc
lea
sub
loopne
rcl
fwait
andl
sub
mov
sub
in
data16
inc
lcall
xchg
cmp
push
cs
frstor
xchg
push
fisttpl
test
lock
and
hlt
iret
into
loop
ja
pop
lret
aaa
sub
repnz
mov
int
inc
jns
xchg
hlt
or
popf
fadd
in
jne
add
mov
loop
push
outsl
dec
movlps
adc
and
or
out
pop
xor
mov
mov
das
push
push
and
sbb
test
inc
lods
inc
mov
cld
add
cmp
adc
pop
clc
mov
outsb
lock
xchg
cs
shlb
ljmp
jo
push
lods
mov
out
add
sbb
insb
dec
jno
mov
mov
scas
pop
bound
aad
fs
sub
cmpb
mov
leave
sbb
loope
mov
test
mov
stos
pop
pop
lds
push
jb
cmp
xchg
out
scas
mov
dec
pop
inc
jns
push
jo
inc
xchg
outsl
inc
ljmp
mov
mov
aam
enter
cltd
lea
fdivp
inc
ja
insl
or
fcoml
adc
mov
jne
sbb
out
cli
cmpsb
mov
mov
mov
addr16
inc
iret
cmc
aas
aad
std
sub
cmpsl
je
or
pop
xchg
popa
out
fdivrp
or
dec
sub
fisubrl
fmuls
sub
jg
fiaddl
das
mov
pop
jnp
call
sti
or
and
outsl
jae
loop
loopne
sbb
leave
push
push
cmc
xchg
js
test
movsl
xor
add
in
clc
call
cmp
fcmovb
mov
shrl
mov
sub
or
js
add
mov
mov
jb
pushf
loopne
dec
mov
jae
arpl
sub
adc
jge
stos
lcall
jne
aad
mov
add
add
pop
xchg
outsl
xchg
xchg
pop
push
fistps
pusha
fsubs
out
cld
inc
aad
sbb
outsb
sbb
and
inc
add
xchg
jp
daa
cwtl
repz
inc
test
pop
sbb
adc
ljmp
call
loopew
movsb
jge
jbe
mov
xlat
mov
cld
mov
rol
push
inc
pop
out
sbb
int
mov
not
imull
add
insl
mov
push
cmp
mov
das
cmc
sbb
mov
adc
xor
mov
sbb
adc
xor
ds
jle
test
xor
mulb
jne
test
fistl
sbb
sbb
lock
lods
fdiv
sub
adc
add
jb
loop
sub
add
mov
pop
dec
dec
mov
jge
xchg
gs
repz
jle
jmp
repnz
xchg
cmp
subb
loope
add
mov
mov
shl
jecxz
add
cmpsl
lock
jae
xlat
dec
mov
std
pop
pusha
mov
cs
in
xor
push
xchg
push
mov
push
daa
adcb
mov
hlt
mov
ja
push
and
lock
sar
fimull
call
pop
lock
mov
mov
addb
mov
inc
and
inc
mov
and
push
cltd
cs
adc
xlat
div
popf
push
cld
std
daa
adc
leave
arpl
sub
xor
sarl
lahf
fcomp
or
jns
dec
stc
push
and
add
xchg
jo
dec
pop
mov
js
pop
test
mov
add
roll
mov
fsubrl
ds
push
mov
repnz
jge
dec
inc
lret
fmul
sti
call
cmp
lcall
enter
mov
mov
or
mov
push
rcrl
es
ret
add
leave
lea
cld
xor
jbe
and
cmp
pop
add
dec
ret
xchg
fs
pop
movsb
insl
outsb
stos
sbb
fidivrs
and
std
jb
mov
popf
sub
jecxz
or
and
cwtl
outsb
test
in
cmpsl
nop
cvtpi2ps
xchg
dec
adc
xor
in
inc
cmp
cmpsb
mov
push
lea
lods
cli
cmpsl
lcall
inc
sub
jo
clc
push
mov
and
hlt
mov
aam
sbb
mov
imul
flds
popf
inc
xchg
in
xchg
and
cld
out
sbb
shl
scas
sub
jns
jb
sub
lods
pop
push
xor
fptan
pop
sub
icebp
ljmp
add
or
inc
repnz
xchg
popf
lods
push
fisttps
imul
mov
xchg
sti
cmpsb
test
int3
cmc
clc
jg
fs
or
xor
in
data16
js
fldl
pop
mov
pop
mov
jg
in
ss
xchg
ss
lahf
xchg
sub
or
sub
add
xchg
adc
push
fistl
jo
je
setnp
shll
int
adc
mov
jp
dec
pushf
push
sbb
shl
jecxz
xchg
frstor
cmp
test
sarl
int
xchg
fidivs
adc
xor
pop
adc
movsl
and
inc
xchg
lcall
paddd
fidivrl
fadd
divb
std
add
idivb
adc
push
pop
add
idivl
mov
xor
movsb
mov
sbb
mov
xchg
cmp
mov
xor
xchg
mov
pop
jnp
push
out
xchg
lret
popa
jle
shrb
xchg
xorl
dec
outsl
mov
mov
in
sar
dec
xchg
pop
xorl
loopne
dec
jns
add
xchg
loope
out
jmp
adc
push
jae
fsubp
mov
jb
icebp
or
fsubrs
pop
pop
fs
std
xlat
xchg
dec
xchg
mov
or
enter
fildll
dec
mov
sbb
in
xchg
mov
lods
dec
lods
dec
fisttpl
mov
jbe
mov
orb
bound
hlt
add
jae
push
jp,pt
adc
ljmp
lahf
lret
loopne
insb
adc
ret
push
add
sbbb
mov
xchg
push
push
mov
jns
mov
in
mov
jl
mov
add
pop
xorl
cmp
iret
push
jnp
in
popa
sub
dec
mov
mov
pop
mov
or
icebp
aam
out
loopne
dec
jge
xchg
loope
add
pop
push
sub
lods
or
mov
adc
lret
ret
adcb
adc
addl
jmp
test
jge
pop
sbb
adc
cmp
in
pop
fsts
int
sbb
xchg
and
mov
mov
add
out
aad
or
add
cltd
cmp
popa
mov
xor
sbb
push
adc
xchg
dec
xchg
pop
iret
and
jno
cmp
mov
cmpsl
addr16
or
clc
mov
ret
adc
dec
adc
int3
shr
xchg
jmp
and
cmp
xlat
icebp
cld
std
shll
push
in
xchg
icebp
jno,pn
lods
add
push
fsubrl
mov
dec
mov
jae
jg
repz
or
push
clc
push
pop
lea
mov
mov
xor
inc
fldenv
pop
and
jb
lock
mov
push
jmp
push
aam
push
jmp
sub
cmpsb
mov
cmp
add
les
dec
jmp
mov
popf
xchg
stos
imul
test
mov
sbb
adc
pop
cmp
jg
jne
lret
out
jae
jns
rcrb
dec
enter
lcall
nop
jne
addr16
cmp
fwait
add
mov
data16
imul
cmpsl
mov
mov
pop
out
fbld
lret
and
aaa
fldl
adc
sub
push
clc
push
in
ds
sarl
lds
sbb
add
xor
loope
or
mov
lock
aaa
divl
mov
mov
sbb
in
insb
or
and
loope
test
test
or
push
mov
xor
xchg
mov
dec
sahf
pop
insl
inc
lret
repz
inc
mov
xor
imul
pop
jl
test
loop
lods
das
push
push
and
std
mov
clc
jl
fwait
fs
rclb
jne
sbb
lods
sar
push
add
and
push
and
insb
mov
jle
push
and
lcall
or
stc
stos
add
movsl
sti
arpl
push
imul
orl
cmp
lret
fdivl
andl
push
inc
fcoml
out
insl
aad
or
mov
ljmp
pop
ss
xor
xchg
mov
imul
idivl
xor
insb
repnz
push
jo
xchg
and
dec
pushf
mov
daa
bound
out
test
lret
rcrb
arpl
dec
push
mov
pushf
std
call
pop
pop
push
jmp
inc
sbb
cld
stc
mov
call
cltd
lea
sbb
addb
jo
mov
sbb
enter
out
out
into
jne
xchg
jnp
cvtps2pi
fnsave
mov
inc
dec
mov
push
xchg
inc
test
jmp
sbb
pop
cmp
or
push
insl
push
cs
xor
data16
jo
push
int3
mov
icebp
inc
decl
xor
enter
arpl
imul
jb
pop
xor
fimull
jns
adc
mov
sub
into
pop
dec
push
in
fidivs
sbb
pop
pop
outsb
sub
jmp
add
test
xchg
sbb
sub
lods
or
dec
mov
xchg
adc
inc
cltd
mov
adc
push
fnsave
pop
jge
add
and
inc
push
sub
fst
push
mov
dec
xor
xor
jnp
mov
cmpsl
cli
xchg
jne
cmpsb
dec
mov
repnz
and
adc
popa
xor
dec
into
xchg
add
fdivrl
xorb
cmpsl
in
jnp
xchg
mov
jnp
mov
inc
xor
or
cwtl
int
ds
mov
mov
cmp
jle
sbb
cltd
fstpt
pop
push
sub
inc
loopne
std
out
bound
or
pop
repnz
and
ss
shrl
mov
xor
sahf
pop
idivl
mov
pop
jnp
jno
cmp
aam
pop
add
lds
dec
push
and
insb
jge
out
and
adc
in
or
and
xor
out
pop
mov
arpl
aad
data16
loop
mov
inc
popa
nop
push
hlt
call
pop
outsb
inc
ficompl
mov
mov
in
xor
fisubl
or
cmp
fnstenv
outsb
pop
mov
or
notb
mov
pusha
inc
test
pop
out
or
out
popf
xor
lret
stos
stos
sbb
xlat
dec
or
sbb
xchg
push
mov
rolb
aaa
jmp
out
stos
cmp
shll
pop
xlat
jno
push
sub
das
adc
jae
mov
add
or
test
mov
sbb
xor
out
in
pop
loop
dec
adc
lods
add
pop
dec
xchg
testb
sub
cmc
scas
adc
testl
mov
adc
or
push
add
iret
test
sub
sub
call
push
pop
scas
sbb
xlat
dec
pusha
jp
xor
lock
repnz
icebp
xor
and
mov
pop
stos
mov
xor
cmpsb
mov
mov
sbb
gs
push
pop
sbb
sub
pop
xchg
pop
fwait
test
cld
pop
inc
icebp
mov
shrb
imul
test
iret
insl
scas
xchg
xchg
andl
mov
mov
arpl
sub
insb
std
ds
mov
pusha
jge
add
sbb
jp
dec
outsl
sub
lahf
test
push
test
das
jb
gs
rolb
lods
icebp
push
repz
loop
and
and
xor
sub
xchg
scas
dec
lret
das
push
ret
sub
sub
jne
xor
inc
mov
add
sbb
and
push
xlat
add
ret
das
or
je
xchg
shufps
addr16
adc
cli
filds
cmp
int3
fs
insl
into
imul
outsl
mov
into
rcrb
cmp
sbb
into
les
les
adcl
adc
gs
out
iret
stos
xor
rolb
jecxz
jecxz
or
jl
xor
scas
push
fildll
dec
test
and
in
inc
pop
in
loope
adc
pop
adc
mov
aas
dec
push
gs
sub
pop
xor
mov
rolb
adc
fldcw
dec
into
jnp
subb
in
or
enter
sbb
push
pop
aaa
jmp
arpl
fisubrl
out
push
imul
and
loop
lea
jae
je
cmp
dec
cmc
aad
push
inc
jge
in
mov
pushf
pop
sub
xchg
sbb
mov
or
xchg
xor
loop
lgs
cltd
std
dec
and
mov
data16
or
inc
lcall
jb
movsl
loop
popa
pop
aas
adc
pusha
push
xor
cs
outsl
inc
add
fs
add
push
sti
int3
xchg
xor
xchg
jb
xlat
loope
xchg
rol
mov
adc
movzbl
mov
xchg
mov
into
jmp
lds
adc
lret
enter
push
mov
popa
lahf
mov
or
mov
sbb
mov
int3
bound
hlt
or
in
mov
xor
aam
jmp
mov
mov
xlat
mov
fwait
mov
adc
jnp
sbb
add
mov
dec
cmc
mov
mov
movsb
pop
ds
xchg
aas
jle
mov
inc
enter
lds
and
xor
adc
or
aam
cmp
add
xor
in
aas
pop
icebp
mov
std
add
jmp
mov
cmc
clc
jl
mov
scas
lcall
mov
cmp
test
imul
in
jecxz
out
mov
mov
add
or
cvtps2pi
xchg
mov
cmp
or
jno
sbb
in
mov
rclb
in
cs
fiadds
call
outsb
add
cmp
jne
mov
in
pusha
div
cli
pop
lea
pop
mov
mov
xor
xchg
outsl
sbb
idiv
ss
int
notb
sub
add
adc
jns
jb
add
mov
in
mov
outsb
out
jmp
jne
push
push
mov
xor
add
lret
mov
sbb
ljmp
ss
pusha
and
push
lahf
xchg
shlb
dec
add
outsl
or
push
loopne
add
scas
or
cmp
cmc
adc
aad
mov
adc
sbb
push
imulb
js
fucom
aaa
sbbb
xchg
stos
int3
je
jbe
cmp
dec
push
adc
roll
icebp
aad
jne
or
add
dec
jb
adc
jecxz
push
cmpsb
out
movsl
clc
out
in
je
jnp
jbe
adc
add
push
cmp
or
push
pushf
inc
shl
cwtl
lock
mov
adc
into
sbb
mov
popf
sub
mov
ds
cmpsl
and
adc
arpl
adc
xor
adc
adc
jg
clc
dec
int
sbb
shrl
hlt
jne
dec
arpl
add
mov
in
mov
mov
cltd
mov
mov
int
movsb
mov
lods
xchg
cmp
lcall
lods
fisttpl
icebp
adc
outsl
xor
mov
sbb
add
mov
das
sti
jge
cwtl
xchg
jae
inc
lea
lock
mov
lahf
mov
test
cwtl
push
insb
xor
js
sub
mov
add
mov
or
dec
sub
xor
in
cmc
xor
negl
sub
or
cli
dec
adc
xor
mov
sub
rorb
mov
xchg
xor
test
jns
xchg
loopne
in
mov
test
jge
dec
fs
enter
push
fs
das
stos
xchg
xchg
filds
pop
enter
mov
cmc
int
jbe
loope,pt
and
sbb
sbb
push
cltd
xchg
imul
ret
cwtl
jbe
add
sub
lret
jge
mov
jle
jp
adc
lock
adc
pop
in
xchg
fimuls
cld
ret
cmpsl
js
mov
jns
cli
mov
mov
mov
or
lret
jle
loop
inc
cmc
sub
test
jp
imul
popa
jge
lods
addr16
nop
fsubrs
outsb
icebp
popa
imul
dec
call
push
push
pushf
jne
data16
pusha
mov
stos
jns
cmp
push
es
jo
lods
sahf
inc
cmp
movsl
cmc
movntq
push
mov
xchg
jecxz
jecxz
mov
add
and
fidivs
into
out
sub
rclb
outsb
xor
jp
sbb
fbld
lahf
call
xor
out
xchg
cmc
mov
fistpll
sbb
arpl
cli
mov
addr16
fstps
repnz
ss
rdpmc
pop
or
mov
addr16
cmp
les
or
dec
outsl
leave
mov
scas
jge
jmp
sbb
adc
ret
pop
or
mov
shrb
dec
lds
add
out
movsl
stc
mov
xchg
mov
mov
rolb
mov
pop
dec
lds
xor
push
sub
in
or
ffreep
popa
insl
lcall
or
cmpsb
mov
lret
je
fisttps
jmp
not
and
inc
fiaddl
xchg
jnp
or
std
pop
pop
bound
pop
inc
lea
xchg
cmp
jno
fmuls
addr16
into
jo
cmpsl
push
push
sbb
das
cwtl
sub
js
ficomps
push
aas
inc
sub
aad
sub
aad
mov
jp
pop
add
jns
sub
mov
stos
mov
adc
fcmovb
enter
inc
loopne
or
fs
cmpsl
mov
sarb
fs
add
cmpsl
jns
arpl
xchg
fldenv
ss
or
cs
aas
xchg
scas
fidivrl
lret
pop
addr16
lods
insl
adc
jmp
lock
mov
pop
mov
cli
aaa
mov
repnz
cmp
inc
jnp
lret
push
push
cmp
movsb
aaa
js
cmpsl
popa
pushf
repnz
adc
sub
aam
loopne
ja
cld
and
loopew
test
aad
or
adc
mov
sub
cmp
xor
xchg
mov
stc
push
fnstsw
in
xchg
lcall
xlat
sub
push
xor
iret
and
mov
cmpsl
lds
pop
lds
xchg
jl
jl
jb
lcall
jle
scas
jecxz
xchg
arpl
and
push
nop
aam
gs
cltd
add
pushf
popf
rcl
adc
adc
cld
add
push
fcmovu
xor
arpl
cmp
inc
or
xor
jl
or
sbb
ds
sub
sub
adc
mov
adc
dec
push
jnp
aas
popa
or
xor
mov
shrb
in
cmp
sub
sbb
inc
leave
loope
add
push
dec
inc
ret
jmp
lods
mov
lods
pusha
xor
aam
pusha
cld
ret
out
gs
add
xor
push
sahf
in
push
lret
mov
fwait
loop
pop
ds
mov
aam
push
mov
xchg
jno
pop
inc
stos
inc
aas
xlat
or
mov
mov
push
jo
insl
test
mov
jle
sbb
pop
hlt
sahf
add
icebp
int
mov
and
out
push
loopne
es
setp
sbb
loop
push
mov
mov
push
adc
pop
bound
loope
or
aaa
stos
pusha
fucomi
rcrl
icebp
mov
das
insl
subb
jle
mov
sbb
cmp
dec
cmp
lods
push
ficoml
test
mov
loope
cmp
jp
push
jo
outsb
cmp
push
xor
sbb
std
sub
sbb
sub
sub
mov
mov
inc
push
mov
lods
mov
leave
mov
fcoml
shll
inc
in
mov
push
cmp
add
pop
adcb
or
je
hlt
pushf
sbb
mov
adc
inc
out
pop
inc
mov
icebp
mov
shr
dec
lods
je
mov
int3
sbb
pop
push
icebp
in
icebp
test
frstor
loopne
inc
inc
jno
ja
cmp
cmpsb
sbb
cmp
sti
mov
lret
adc
add
test
cmpsl
adc
movsl
jno
frstor
insl
xchg
push
push
dec
rcrl
and
push
xor
jae
scas
out
das
or
pop
ja
add
fiaddl
fs
dec
bound
es
mov
lods
cmc
cmp
push
aas
adc
lock
testl
mov
mov
mov
and
cs
or
mov
insb
jnp
dec
sub
ja
cli
mov
sub
cmpsl
or
mov
jo
adc
cmp
lret
push
nop
mov
add
fidivrl
std
incl
adc
pop
ret
ja
sbb
ds
aaa
out
sar
leave
subb
outsb
aad
fcoms
push
xchg
pop
inc
add
fwait
insl
xchg
pcmpgtb
adc
xorl
ret
and
lahf
shrb
xchg
cmp
out
rcrb
jo
add
push
lods
xor
inc
ja
xlat
das
outsl
and
testb
pop
lds
inc
ret
mov
outsb
mov
mov
fcompl
fsubrl
inc
imul
aam
flds
out
sub
dec
xor
add
int
cmpl
cmc
sbb
repz
ret
push
repz
ss
jge
inc
jge
inc
jne
test
mov
sbb
adc
mov
push
movsl
hlt
cmp
int3
push
xchg
cmpsl
jmp
addr16
dec
or
outsl
in
lret
loopne
fnstenv
push
xchg
xchg
dec
push
add
cli
sbbb
add
rcrb
pop
arpl
lcall
or
xchg
mov
adc
lret
lret
xchg
xchg
mov
into
xchg
loope
sub
and
daa
mov
repnz
popa
xchg
and
pop
mov
call
xor
data16
mov
cmp
mov
add
and
in
push
mov
xchg
fisubs
sahf
jo
inc
roll
rcrb
mov
push
mov
sub
imul
bound
enter
ja
xchg
into
adc
les
in
rcll
pop
inc
mov
fmull
cmp
fisubrl
movsb
inc
lods
sbb
pop
mov
jecxz
mov
inc
lcall
scas
mov
cli
xor
mov
out
mov
pop
cs
repnz
imul
and
into
push
scas
pop
xor
mov
jns
scas
xor
and
cmpsl
into
cmp
or
pop
xchg
xor
dec
mov
jns
add
mov
aam
addl
loope
andb
xchg
xchg
pop
mov
jb
jmp
test
adc
loop
push
jp
fcmovb
leave
jnp
hlt
jne
pop
inc
jmp
sbb
adc
adc
movsl
or
rclb
push
and
inc
shlb
xchg
loope
in
rolb
dec
js
sub
mov
push
mov
mov
pop
jg
xchg
test
pop
jo
sbb
cmp
daa
fmull
mov
mov
jmp
push
mov
jns
pop
mov
pop
inc
hlt
cmp
stc
imul
aas
fwait
cli
sbb
jns
pop
or
push
xorl
fcoml
jns
call
sub
mov
jmp
rclb
mov
dec
and
sub
dec
mov
mov
mov
pop
lea
sub
ror
icebp
cvttps2pi
cmpsl
out
enter
inc
jl
or
mov
inc
shll
sbb
ja
push
loopne
pop
pop
inc
shlb
push
rorb
in
pop
fwait
ja
pcmpeqb
sub
add
movsb
push
fdivs
jle
or
sbb
or
jb
mov
pop
cwtl
cwtl
and
lock
inc
add
jle
jb
inc
pop
adc
fwait
sbbb
inc
cmp
jle
add
jno
mov
sbb
arpl
and
mov
je
push
or
xor
daa
or
dec
loope
dec
in
fistps
call
push
mov
adc
int3
inc
cs
out
dec
int
into
mov
add
aad
cli
and
pop
pop
incl
repz
dec
jg
mov
cli
scas
jne
push
out
hlt
mov
in
push
push
test
lret
jbe
stos
prefetchwt1
pop
adc
push
rolb
arpl
hlt
lahf
rclb
std
mov
mov
icebp
adc
push
ret
push
call
push
cwtl
dec
add
pop
popf
test
push
xchg
inc
ret
stc
jo
std
push
call
sub
mov
xor
scas
into
mov
stc
sub
cmc
ljmp
mov
out
sar
imulb
jbe
jo
mov
dec
push
sbb
aaa
out
enter
mov
xchg
pusha
xor
test
cmp
ljmp
inc
data16
scas
pop
arpl
pop
fnstenv
movsl
or
iret
cld
jmp
mov
pop
jno
jge
jg
or
mov
jmp
pop
dec
xor
ja
dec
fsubl
sbb
aam
cmpb
jge
push
lret
sbb
adc
das
push
rol
sbb
cmp
enter
pop
push
jecxz
sbb
adc
push
xor
push
pop
lods
push
xor
popa
das
sti
fldcw
dec
stos
aad
sub
lea
mov
gs
fmuls
fdivs
test
and
mov
lods
push
or
aam
mov
push
in
out
pop
push
jns
cmpsl
xor
ret
ljmp
daa
jmp
fs
and
jg
push
idivw
cmp
push
mov
push
sahf
sbb
in
sub
mov
pop
sbb
imul
jmp
pop
adc
cmp
xchg
xchg
rcrl
mov
inc
test
jno
scas
clc
and
inc
ds
push
or
pop
adc
xlat
int3
xchg
pop
adc
cmp
adc
cmp
xor
mov
je
ja
mov
cwtl
sahf
mov
dec
stos
or
ficomps
add
lds
mov
push
dec
inc
out
aam
in
push
mov
xchg
cltd
mov
imul
imul
sbb
sub
cmc
sub
fisubrs
pushf
jge
adc
stos
mov
adc
mov
xchg
push
mov
pop
sub
lods
rorl
sub
mov
dec
repnz
bound
mov
enter
cmp
mov
inc
xchg
js
roll
pop
enter
test
dec
loopne
pop
outsl
dec
sub
sar
lahf
or
lahf
pop
insl
fs
pop
cmp
stos
cmp
mov
push
lea
rol
dec
lds
ja
repnz
mov
mov
mov
or
xchg
loopne
scas
aaa
xlat
push
stos
repz
or
pop
or
cmp
adc
add
sub
int3
push
std
mov
cmc
ja
sbb
lods
add
cwtl
push
sub
jns
inc
loopne
sahf
bound
sub
add
lret
insb
rcrl
xorl
jne
fs
sub
mov
adc
lea
mov
into
jecxz
cwtl
jle
cwtl
mov
fistps
lahf
movsb
clc
insb
lret
sbb
lahf
gs
fisubs
inc
cli
aaa
aas
fmull
outsl
leave
rorb
mov
int3
and
jge
mov
mov
lea
imul
lahf
maskmovq
negl
inc
out
or
lret
pop
shlb
push
faddl
push
cmpsb
movsl
mov
ljmp
fidivrl
sub
aaa
pop
outsl
loop
adc
dec
test
insb
sub
push
bnd
adc
lahf
push
inc
fsubrl
push
int3
and
ja
or
lret
lcall
sahf
mov
sbb
jp,pt
jno
stc
mov
sbb
stos
dec
and
cld
mov
fnstenv
outsb
jno
cmp
ficoms
pop
ret
loope
inc
aaa
add
outsb
pop
into
inc
rorl
lods
inc
mov
mov
push
or
aas
pop
jle
sahf
call
ror
add
ds
out
or
xor
cmp
int3
ja
sbb
or
xor
sbb
add
inc
jl
mov
loopne
mov
out
inc
push
out
jns
mov
pop
cmp
divb
and
dec
shl
and
adc
in
sub
sbb
ljmp
lods
pop
dec
sahf
loopne
fwait
popf
js
addr16
test
jbe
addr16
pop
add
test
lretw
fstpt
sub
xchg
movsb
stos
in
jg
dec
add
pushf
inc
shll
dec
sub
add
adcl
pushf
clc
adc
inc
and
enter
test
jae
pop
loope
ficomps
and
dec
dec
lret
add
ret
rorb
ret
sbb
jno
xlat
jb
cmp
fcompl
daa
nop
sbb
rorb
into
out
pop
cmp
sti
push
mull
pop
inc
cli
sub
cmpsb
lods
push
or
clc
scas
and
mov
pop
scas
lods
aas
scas
and
inc
jmp
ja
mov
lahf
icebp
cmpl
popa
dec
sub
loopne
iret
scas
and
icebp
cmp
cmp
ss
xchg
sbb
notl
xchg
lock
pop
sub
mov
mov
cmpsb
and
adcl
mov
jne
mov
movsl
sbb
and
or
bound
ret
sbb
dec
mov
stos
adc
and
jge
jge
mov
lret
arpl
jno
or
lea
iret
or
jge
mov
repz
ja
lcall
jb
jl
stc
lock
sub
inc
jno
std
sti
xchg
les
sarb
iret
push
repnz
dec
lcall
adc
ds
call
fistpll
inc
adc
dec
mov
iret
or
jb
jo
push
aam
mov
std
test
adc
and
shll
xor
mov
push
add
and
movlps
or
push
or
ja
lods
dec
daa
mov
andb
mov
dec
fimull
testl
out
nop
mov
jmp
js
pop
ja
pop
out
add
ja
aad
sub
sbb
pusha
ror
cmpsl
jae
or
xchg
aas
sbb
lahf
and
fistps
fdivs
out
inc
fldl
sub
cmp
call
popa
shlb
xor
inc
push
cmp
jl
xorl
jl
sbb
adc
sub
repnz
into
clc
mov
jg
xchg
sub
and
scas
adc
push
subl
in
lds
mov
dec
push
gs
mov
mov
sahf
add
pop
push
rorl
popf
mov
test
loope
test
clc
popa
es
stos
fmuls
lock
add
loop
jo
pop
andb
in
dec
loopne
inc
and
pop
mov
adc
loop
lret
inc
loope
aad
push
adc
mov
push
aaa
call
and
aas
lret
adc
adc
stos
dec
pop
aam
mov
or
bound
insb
popa
mov
or
jge
or
mov
pop
adc
jno
rolb
cmp
lret
mov
rcrb
aaa
add
push
xchg
push
pop
xchg
xchg
jp
movsb
or
and
xchg
dec
sub
cmpsb
iret
sbbb
test
mov
cmpsb
cwtl
dec
add
imul
sti
xlat
imul
dec
or
xchg
cmp
daa
outsl
push
sub
cltd
jl
and
pop
test
fldl
mov
fisubrs
std
adc
stos
cs
test
dec
icebp
adc
xor
inc
dec
mov
cmc
mov
jno
shl
or
ret
loopne
hlt
xchg
mov
cmc
mov
aad
fwait
in
scas
mov
mov
aad
cld
adc
mov
xor
hlt
popa
add
sub
test
aas
cli
fldcw
movsb
arpl
std
cltd
leave
subb
cmp
popa
xor
lcall
xlat
loop
and
pushf
push
push
and
mov
dec
pop
enter
jge
out
pop
jns
pop
arpl
pushf
cmp
lret
in
cmp
cmp
sub
pop
inc
and
out
push
adc
je
subl
mov
sti
xor
inc
fbstp
pop
xchg
xchg
cmpsl
jb
pop
shlb
out
push
cwtl
hlt
enter
es
add
ja
rclb
jo
pop
addr16
adc
outsb
xchg
mov
loopne
lods
lahf
mov
sahf
pop
mov
imul
fnstcw
dec
in
sub
xchg
jbe
push
dec
inc
adc
push
hlt
ret
roll
fldt
jne
insb
push
sub
push
xlat
dec
clc
inc
xchg
mov
je
out
jg
out
jns
ljmp
mov
aad
push
daa
mov
iret
movsl
cltd
xlat
mov
or
mov
xchg
or
and
sub
gs
lahf
sub
push
adc
sub
or
dec
push
outsl
or
in
mov
lods
ret
xchg
push
sbb
mov
cmpsl
push
gs
cmp
and
xchg
add
cmp
ljmp
das
or
xchg
jno
sub
pop
xchg
scas
std
jl
add
pop
push
add
and
xchg
into
data16
lea
xchg
mov
sub
cwtl
loope
mov
sets
cmp
test
call
push
in
inc
or
stos
cmp
dec
push
jns
push
mov
fsincos
fcmovnbe
mov
aad
mov
test
and
fs
rcr
icebp
movsb
jmp
inc
sbb
sbb
push
dec
ja
push
ds
xchg
mov
cmp
shrl
cmp
mov
add
pushf
sbb
pop
ds
rol
jno
and
inc
jo
in
fwait
out
sub
adc
adc
inc
jne
rorl
inc
adc
xorl
push
leave
outsl
pop
leave
push
or
jmp
rcrb
sbb
in
xchg
iret
and
aaa
lea
or
test
jmp
jae
cld
jmp
xchg
dec
pop
sub
sbb
mov
push
notl
loop
pop
dec
mov
push
rcrl
jecxz
mov
push
mov
test
int
sub
sbb
mov
icebp
bound
inc
mov
push
mov
rclb
push
mov
push
dec
ljmp
insl
fstps
out
mov
fmull
cmc
mov
idivl
or
inc
inc
shrb
pop
scas
aaa
and
cli
sub
fadd
idivl
sti
pop
in
aaa
call
sub
push
inc
and
dec
mov
sub
jo
rolb
pop
fmuls
cld
in
outsb
popf
adc
paddd
xchg
mov
push
mov
lock
test
and
js
test
mov
push
in
movsb
popf
into
clc
testb
pop
cmpsb
fdivrl
inc
std
stos
jge
and
lock
movsl
call
pop
push
and
arpl
das
jl
adc
push
xchg
dec
mov
cmp
ja
leave
inc
mov
in
mov
lods
adc
cwtl
aad
fistpll
and
lret
cltd
je
test
jmp
outsb
icebp
icebp
stc
push
sbb
pop
pop
xor
in
dec
fstpl
repnz
xchg
lahf
pop
cwtl
inc
imul
mov
pushf
mov
addb
test
ret
xchg
dec
push
imull
jge
lcall
push
adcl
ds
add
xor
and
mov
pop
pop
mov
push
mov
rorb
into
push
pop
cmp
xor
sub
stc
inc
out
dec
aam
out
mov
dec
inc
test
in
loopne
test
scas
mov
enter
adc
insl
mov
xchg
pmulhuw
add
xor
and
out
jns
cltd
mov
jns
and
fs
ss
outsl
adc
jg
xor
lods
lret
push
mov
std
push
xor
mov
enter
xchg
dec
add
in
jno
add
mov
cltd
fstl
imul
data16
std
mov
jg
rclb
shl
sbb
jae
pushf
jnp
scas
push
lret
adc
mov
pop
dec
or
adc
test
rclb
adc
cmp
loopne
iret
lods
sub
outsb
and
mov
adc
mov
dec
aad
lcall
testl
and
pop
mov
dec
in
push
adc
test
pusha
xor
mov
or
sti
in
sub
lret
push
mov
or
stc
add
divl
push
adc
shl
loopne
out
fldl
rol
rep
mov
mov
or
sbbb
mulw
xchg
dec
movsl
sbb
sti
stc
int3
push
cmc
leave
sbb
pop
fadd
in
mov
lods
push
pop
add
cld
mov
push
cmp
add
imul
mov
push
xor
das
cmpsl
or
mov
shll
fisttpll
push
pop
cmp
and
cmc
cmp
insl
dec
les
jecxz
jbe
push
das
xchg
movsb
loopne
pusha
popf
in
es
mov
add
outsb
loop
xor
dec
push
lret
out
popf
mov
popa
add
sbb
int3
std
stos
insb
xchg
andb
push
or
cs
js
xor
fisubrs
imul
xchg
jbe
or
mov
sti
mov
mov
daa
outsl
out
das
or
mov
and
cli
or
mov
rorl
mov
outsb
test
sahf
outsl
mov
pop
pop
int3
cmp
and
imul
push
aam
jmp
fmuls
fsubr
daa
push
mov
mov
adc
ficoml
sub
cs
aam
push
nop
popl
scas
jp
scas
cmpsl
notl
xchg
cmpsb
sub
test
mov
mov
mov
inc
aas
adc
icebp
xchg
and
test
sarb
pop
data16
xchg
jp
xchg
push
or
aaa
inc
mov
adc
dec
das
pop
bound
loope
ja
aaa
icebp
in
inc
inc
clc
insb
sub
sbb
fmul
and
nop
jnp
push
out
sub
or
push
scas
push
sub
sub
rorb
das
add
decb
lea
mov
insb
dec
xchg
lret
cmc
cmp
ss
imull
xchg
out
fcomps
sub
cmp
ss
sub
js
mov
loop
or
sbb
mov
sub
xchg
sbb
into
jne
pop
shrb
adc
bound
push
aam
call
mov
mov
ret
fisubrs
notb
sub
jecxz
fisubrl
fstl
cs
fildll
orl
aad
cmp
inc
fimull
fldt
inc
imul
xor
jmp
imul
jo
pop
inc
mov
xchg
fwait
test
in
out
shrl
xchg
and
popa
lahf
push
mov
scas
idivl
mov
js
lock
ds
ret
test
test
mov
jecxz
mov
xchg
dec
test
sti
lea
leave
cmp
xchg
push
jns
lea
adc
adc
xor
adcl
and
lods
shrd
imul
pop
and
stos
cmc
mov
daa
pop
push
cld
mov
dec
das
sbbl
scas
mov
and
pop
push
lret
pop
les
push
in
mov
fmul
cwtl
push
loop
push
inc
ss
orl
jns
leave
pusha
xchg
mov
int3
std
sub
push
jno
in
cmp
cli
les
lock
mov
movl
aas
push
test
xor
test
cld
test
rcrb
push
mov
int3
mov
mov
out
cwtl
push
mov
pop
mov
jae
enter
cmp
enter
ffreep
cmp
aaa
adc
sub
fildl
stc
fisubrl
ret
fcmovnb
pop
test
clc
inc
push
insl
sbb
sub
xchg
in
xchg
pop
add
sub
das
inc
mov
fsubrl
adc
ja
subb
psrld
adc
pop
push
and
rclb
addr16
pop
xor
or
jb
push
enter
stos
out
xchg
lret
push
pop
in
add
add
cmpsb
fistl
filds
pop
or
test
mov
mov
mov
int
xor
adc
mov
inc
cmc
push
repnz
add
fildll
adc
mov
mov
je
cmpsl
jnp
dec
mov
push
jmp
jo
mov
lret
lods
mov
mov
clc
adc
lcall
add
arpl
adc
bound
dec
and
sbb
push
stos
sbb
popa
push
pop
xlat
mov
pop
lock
xchg
insb
xchg
and
aas
in
xchg
stos
gs
and
in
xchg
cmpsb
push
jbe
cmp
aaa
cmp
cmp
rol
iret
mov
mov
jle
daa
mov
lock
hlt
mov
imul
leave
test
hlt
aam
cmp
divb
or
cmp
dec
repz
fnstcw
sub
jbe
call
adc
loopne
mov
add
ja
jg
and
lahf
lods
sbb
testl
adc
adc
test
mov
lock
repz
aam
shlb
jne
imul
push
addr16
repnz
rcr
fldt
lea
dec
ss
pusha
push
fsubrs
and
and
and
test
mov
xorb
mov
mov
xchg
or
cmpsb
loopne
xchg
mov
cmpsb
cmp
inc
loopne
sub
test
push
adc
cwtl
int
cli
ja
adc
ficompl
xchg
push
rolb
push
test
jmp
mov
push
and
add
dec
jns
sbb
add
xchg
push
scas
imul
xor
insl
or
imul
and
and
int3
xchg
inc
xchg
mov
enter
dec
inc
sub
xchg
lahf
mov
inc
mov
push
fwait
popl
xlat
push
mov
pusha
inc
sbbb
xchg
pop
clc
subb
test
out
rcl
cmp
lods
filds
scas
xor
pop
movsb
andl
test
pop
jle
xchg
push
pop
mov
in
adc
mov
nop
enter
gs
fmul
test
adc
dec
mov
aad
push
push
out
daa
lea
mov
cwtl
fiadds
jecxz
shll
movsb
pop
pop
cld
popf
frstor
sub
mov
lods
sbb
sub
out
sbb
cs
or
addr16
addr16
movsb
clc
dec
fwait
and
int
add
outsl
xlat
sub
out
cmp
sbb
loopne
push
adc
add
mov
push
dec
shll
cmp
fistl
or
test
clc
jno
or
shl
call
movsb
psrlw
sbb
std
stc
jne
aad
shl
es
adc
out
fs
stos
enter
lea
in
or
xchg
gs
loop
inc
push
push
dec
mov
loopne
pop
lods
stc
xor
push
jnp
mov
sub
jge
jno
sub
jp
sub
pop
das
push
add
push
cs
rcll
add
mov
bound
pop
cld
push
int
lods
iret
or
lods
pop
push
sarb
fcmovu
adc
jmp
cmp
lock
lds
cmpb
inc
loop
ret
and
pop
stc
dec
shrb
fbstp
out
jns
and
fwait
add
add
hlt
incl
pop
leave
pop
jmp
dec
aam
push
lods
das
push
movsl
movsb
daa
pop
cmp
push
dec
cld
lock
push
shrb
inc
shll
add
cmp
xchg
jecxz
mov
sarb
mov
mov
dec
mov
fldenv
pushf
pop
shlb
clc
stc
jecxz
in
outsl
stos
nop
aaa
scas
push
int
xlat
scas
pop
cmc
inc
cmp
xchg
jg
dec
inc
mov
inc
fwait
je
jle
mov
xor
ret
inc
inc
push
push
add
fdivs
mov
int
stos
shlb
jmp
cs
mov
push
cmp
decl
add
stc
sub
ja
popa
pop
mov
fstl
data16
jae
sar
in
or
mov
pusha
dec
cld
movb
lds
mov
or
inc
daa
pop
lods
fdivs
mov
clc
inc
stc
cmpl
ljmp
filds
adc
fstps
sti
xchg
cmp
lods
add
imull
jmp
insl
xchg
mov
add
cmc
xchg
dec
hlt
xchg
aas
mov
push
xchg
mov
into
fisttps
xchg
sub
mov
orb
xchg
push
jno
jb
mov
rorb
inc
jae
out
sub
jmp
aam
jns
dec
push
jo
sub
push
adc
or
pop
js
or
cmp
call
cs
loope
shl
mov
or
and
dec
hlt
idivb
inc
xor
aam
mov
cmp
fisubrl
jne
push
push
rcrb
adc
jae
jle
inc
sub
les
jecxz
out
xchg
popf
push
ss
pop
mov
cli
repnz
data16
push
xchg
movsb
sbb
adc
inc
xchg
push
add
pop
inc
out
enter
sahf
and
pop
mov
xor
cltd
push
push
outsb
add
movsl
jmp
int3
cwtl
push
pop
inc
cli
js
add
cwtl
out
or
sahf
adc
xchg
xlat
int
nop
push
fwait
push
popf
cld
pop
xlat
sarl
mov
stc
pushl
fnstcw
pushf
repz
and
repnz
stc
push
es
sahf
movsl
cmc
outsl
fcomip
dec
aaa
pushl
jp
cmp
xchg
testb
sbbl
stc
sub
fsubs
mov
sbb
xchg
xlat
adc
push
pop
fmulp
fimuls
into
nop
outsl
aam
lds
xchg
das
scas
in
std
jnp
cmpsb
stos
add
mov
test
mov
cmpsb
clc
mov
popf
or
popf
adc
sbb
pusha
repz
cmpsb
jns
sbbb
and
pop
rorl
and
mov
inc
mov
pop
push
arpl
xchg
mov
mov
imul
pop
pmaddwd
cmp
mov
lcall
or
push
test
testl
out
je
sub
adc
and
push
movsb
roll
mov
es
dec
jbe
xchg
mov
fbstp
inc
or
in
fs
sbb
sbb
adcl
or
lock
dec
push
mov
fdivl
clc
mov
gs
sub
mov
cwtl
xchg
mov
imul
or
push
mov
jo
lds
ret
test
push
push
xor
cmpsb
xchg
bndstx
or
cmp
adc
out
mov
pop
jns
push
mov
push
rcl
hlt
and
mov
lahf
jae
push
jle
sbb
imul
and
or
cmp
jecxz
loope
cs
les
dec
pop
loope
mov
test
shll
data16
pop
and
xchg
loopne
mov
in
sbb
adc
jle
inc
or
pusha
orl
mov
outsl
push
inc
aas
es
inc
repnz
lcall
sbb
mov
fstpl
jmp
mov
sbb
cmp
pop
imul
or
mov
cmp
orl
fcoml
mov
cs
iret
es
jno
mov
sarb
mov
cmc
pop
aam
mov
addr16
fld
leave
jbe
sub
push
lret
jg
add
cmp
adc
lods
xor
arpl
jo
cmp
sbb
pushf
test
cmp
xor
ja
inc
mov
insb
push
and
jno
xlat
scas
hlt
inc
filds
sbb
xlat
jne
xor
movsl
int3
fcoml
shlb
cmp
mov
in
or
jne
pop
push
xlat
out
ficompl
in
cmp
das
loopne
pop
cld
push
pop
jo
xchg
or
mov
outsl
in
lret
jb
out
out
les
push
xor
hlt
inc
push
jbe
cmp
in
add
mov
mov
pop
out
mov
and
xor
push
xchg
adc
pop
outsl
or
in
mov
notl
lret
call
pop
stos
aaa
inc
ret
push
xor
or
mov
ret
clc
int3
add
mov
and
jmp
fdivs
stc
out
repz
ljmp
cmpsb
jge
cmp
arpl
jns
push
pop
mov
stos
pop
push
jmp
push
push
push
jg
push
fcoml
scas
inc
jmp
xor
push
xchg
ret
fsub
cmp
psubq
cli
daa
sub
out
std
adc
cmp
js
cs
inc
shl
xlat
aaa
jae
pop
out
lods
dec
orl
pop
sub
mov
mov
add
and
xor
jge
xchg
outsl
cmp
mov
lods
and
or
push
and
xor
mov
lcall
push
es
in
test
insb
lcall
stc
mov
addr16
bound
aaa
int3
into
mov
cmp
inc
aam
mov
mov
jae
orl
aam
push
decl
hlt
jbe
jnp
dec
int
xor
shrb
repnz
popf
gs
sub
cmp
je
mov
and
rcll
insl
push
xorb
jno
sub
mov
pop
aad
pop
decb
adc
push
add
mov
scas
sub
shrb
adc
iret
mov
jl
mov
call
pop
push
adc
mov
or
inc
pop
jmp
dec
mov
pop
movsl
lcall
jbe
sbb
test
test
into
jnp
clc
or
call
je
inc
hlt
xchg
mov
mov
pop
in
inc
inc
out
adc
ss
mov
lahf
mov
mov
mov
vlddqu
call
stc
push
repnz
or
scas
jnp
push
mov
xor
mov
popf
push
adcl
and
sarl
mov
test
inc
gs
and
out
fiadds
shl
cmp
dec
lcall
shlb
adc
mov
loope
movsl
lcall
ret
pop
bound
scas
pop
insl
sub
bnd
outsl
pop
adc
pushf
fsubp
inc
mov
mov
and
mov
mov
rorl
mov
rorl
inc
outsb
fdivs
leave
rcl
call
sbb
fisubl
jg
jbe
movsl
lret
fbstp
or
int
clc
lea
mov
mov
or
and
jecxz
fldenv
jmp
and
test
mov
push
xchg
lahf
sbb
rolb
and
daa
and
fwait
and
rcrb
dec
sti
clc
movsl
xor
push
mov
and
je
add
push
cmc
cmpb
test
jmp
test
pop
scas
lret
fstpl
daa
adc
adc
pop
cmp
loope
add
lods
inc
js
pop
out
adc
jno
sub
or
hlt
mov
enter
push
cmp
push
addr16
mov
clc
shll
cmc
push
push
rolb
insl
insl
mov
pop
out
and
jg,pn
fadd
data16
shrb
mov
xchg
daa
sbb
lahf
xor
jmp
pop
js
xor
mov
pop
aaa
pop
lahf
sti
in
data16
loopne
js
cmpsb
jo
xor
inc
dec
inc
vaddsubpd
scas
test
pushf
adcb
cwtl
add
ljmp
fimull
mov
arpl
push
xlat
scas
mov
dec
xchg
pop
pop
add
push
fisttps
jp
cmp
rclb
fcompl
inc
rcl
fmul
adc
lahf
addr16
sbb
test
pop
and
divb
pop
jmp
cs
dec
roll
cmp
clc
push
mov
test
bound
sub
lds
mov
push
xchg
jb
lods
inc
mov
scas
xlat
lret
and
push
jge
das
xchg
mov
mov
push
jne
loop
inc
stos
cltd
mov
aas
dec
push
jle
cmc
cmp
inc
inc
or
ss
jge
insl
xchg
dec
es
push
push
stos
sbb
jmp
cmpsb
int3
push
sub
sahf
fwait
xor
in
dec
adc
pop
add
or
lret
stos
dec
stos
pop
push
mov
rcl
subb
sahf
enter
sbb
mov
leave
addr16
mov
mov
outsb
sti
push
adc
je
jbe
fadds
mov
movsb
xchg
or
sbb
dec
sub
icebp
in
int
dec
dec
mov
sub
add
and
xor
jg
or
dec
push
jnp
and
pop
inc
dec
jge
stc
fistpll
fistpl
adc
imul
mov
sbb
sbb
sub
cmp
add
dec
pop
mov
pop
add
sahf
cltd
xor
loope
mov
fisubs
leave
jmp
lret
cmp
xchg
pop
xchg
jmp
add
sub
ljmp
adc
js
jecxz
pandn
out
mov
stos
push
adc
jne
jns
pop
and
insl
repz
test
sbb
sbb
inc
and
shlb
cmp
xchg
sbb
addl
iret
out
pop
xchg
push
inc
fdiv
mov
mov
jmp
xor
mov
push
ret
add
mov
cmpsl
dec
stc
lahf
loop
mov
add
sbb
lcall
push
das
cmp
leave
inc
xchg
mov
ret
std
ss
dec
push
sbb
repnz
lds
fs
in
rcrl
and
sub
inc
ljmp
out
sub
das
sub
mov
mov
xchg
pop
xchg
push
outsl
jb
pop
mov
arpl
not
mov
mov
mov
xchg
mov
insb
idiv
sub
call
stos
adc
add
pusha
dec
adc
les
fdivl
out
cmp
and
ret
or
jmp
fldt
je
clc
dec
out
ret
rcrw
pop
mov
cli
adc
mov
fwait
mov
and
jle
aad
rol
stos
insl
sti
lahf
roll
lea
inc
outsb
imul
or
jno
mov
aaa
cmpsb
xor
pushf
and
in
sub
mov
xor
push
cld
pop
and
dec
popf
sar
and
dec
xchg
bound
pop
mov
xlat
popa
pop
leave
outsb
sub
icebp
mov
aaa
std
icebp
aad
and
stc
in
jnp
clc
jge
xchg
pop
xchg
sub
pop
ret
push
xchg
mov
jns
adc
lods
xor
ljmp
in
es
and
mov
mov
mov
stos
or
testb
inc
add
cltd
push
mov
ja
or
dec
push
rcrb
les
inc
stc
mov
popa
leave
sub
adc
xchg
ds
aaa
mov
sub
repnz
sub
push
test
xor
xchg
adc
lcall
loopne
out
decl
mov
cli
mov
xchg
movsl
sti
aas
sbb
std
scas
es
mov
cmp
arpl
push
dec
fiadds
outsl
sub
cmpsb
pop
js
inc
mov
xor
in
push
mov
mov
iret
setbe
pusha
mov
and
ffree
mov
mov
xor
pusha
or
sub
imul
stos
fwait
cltd
xor
popf
jmp
mov
cmpsl
jmp
add
add
xor
adc
pop
loope
pushf
mov
lret
daa
es
arpl
pushf
shlb
mov
pushf
jne
pop
in
jg
cmp
mov
add
int3
adc
pop
aad
out
inc
xchg
xchg
adc
pop
les
pop
jl
sbb
loope
jbe
mov
adc
or
icebp
clc
jo
addb
movsb
push
flds
sub
test
jbe
call
iret
mov
sub
xchg
addr16
aam
xor
push
adc
aam
cltd
mov
mov
pop
lret
pop
xor
popa
daa
cmpsb
outsb
sbb
hlt
xchg
lea
and
hlt
mov
sub
stos
or
movsl
sbb
lcall
mov
sub
xchg
or
daa
in
data16
adc
pop
mov
dec
cmp
xorl
inc
loop
leave
mov
jg
sub
push
test
push
addl
mov
imul
jg,pn
lods
repz
dec
rorl
gs
jne
sbb
les
sbb
ja
je
cld
mov
xchg
es
js
shlb
xchg
hlt
imul
push
cs
xchg
mov
jnp
add
mov
fidivrs
mov
and
sub
imul
dec
jp
dec
notb
and
cwtl
xchg
or
stos
jmp
add
in
or
imul
sti
pop
sbb
rcl
mov
mov
fnop
loope
in
and
cmp
shl
int3
popf
iret
lcall
cmp
push
mov
addr16
pop
lret
mov
jns
js
xor
xor
bnd
out
and
add
mov
xorl
out
mov
cmp
or
bound
in
lret
cmp
mov
loopne
loope
lods
lock
pop
lret
pop
cvtps2pd
mov
lret
ja
stos
das
inc
cmc
fcmovbe
add
push
sahf
adc
test
sub
sbb
sbb
js
adc
pop
jae
cmp
or
dec
mov
mov
test
lahf
ljmp
inc
lret
pop
cmpsb
ret
xchg
push
daa
pop
in
nop
pop
popf
xlat
into
mov
jae
dec
test
mov
sbb
fldcw
das
cs
cmpsb
pop
cmpl
fldenv
mov
popa
push
and
lret
mov
jp
mov
xor
xor
sub
scas
ja
loopne
push
in
jge
xor
sub
or
lret
cmpsl
sbb
shrb
jle
mov
lea
sub
mov
mov
and
std
jge
sarl
push
inc
push
les
scas
adc
add
xor
push
in
and
aam
mov
xor
scas
xchg
je
decb
in
test
mov
fs
mov
push
rorb
iret
imul
xor
adc
out
mov
mov
rorb
loope
dec
sbb
push
fcomps
adc
dec
sbb
adc
inc
test
pop
mov
std
test
mov
xchg
addr16
stc
jo
push
adc
rcll
mov
mov
push
dec
xlat
negb
insl
addb
mov
jmp
ficoms
lret
xchg
pop
das
insl
mov
pop
xor
imul
mov
mov
subl
inc
xor
outsb
xchg
xchg
mov
sub
fildl
inc
pop
xchg
xor
push
jmp
cmc
xchg
pop
cmp
arpl
jecxz
and
enter
lea
sub
lahf
pop
clc
xchg
pop
setnp
adc
stc
adc
fiaddl
inc
jge
mov
jo
and
sub
push
and
cmp
jae
enter
fwait
push
mov
sub
dec
aas
push
jmp
jecxz
push
fdivrl
aad
mov
iret
jb
movsb
or
jle
mov
sbb
push
push
icebp
mov
repz
stos
fdivl
jge
fs
std
ja
inc
xorl
or
mov
in
sarl
ljmp
and
sarl
bound
sbb
clc
mov
adc
mov
shlb
std
sub
icebp
mov
scas
pop
scas
sbb
imul
pop
add
sbb
out
imul
out
inc
and
sbb
mov
sbb
enter
imul
orl
xchg
xor
add
ret
fbld
jo
push
mov
jle
out
aam
shll
cmp
movq
jbe
ja
jnp
mov
fstpt
pop
ret
cmp
popa
call
sbb
in
xchg
in
sbb
das
push
add
mov
push
into
cmp
push
inc
test
mov
jl
mul
mov
push
ds
jnp
int3
imul
pop
inc
or
shrl
jb
cs
fsub
add
insl
xchg
and
into
out
pop
movsb
xchg
out
std
xchg
push
into
repz
cmc
and
mov
cltd
outsl
cmp
cld
setbe
sub
mov
xchg
lods
pop
add
mov
sbb
int
cmp
and
leave
cmp
sbb
or
out
jne
xchg
sub
mov
popa
cmp
in
xlat
jge
gs
in
mov
sahf
jmp
sub
mov
incb
xchg
xor
jne
jge
cmpsb
rorb
ja
and
push
data16
sub
in
mov
stos
lods
sub
jne
ret
jp
mov
inc
adc
in
mov
lds
dec
xor
mov
and
leave
scas
add
fnstsw
dec
mov
dec
mov
div
testl
pop
mov
dec
loope
fbld
arpl
inc
sbb
mov
adc
shlb
jae
xchg
enter
dec
popf
iret
test
push
cs
push
fdivrs
push
and
push
leave
call
xchg
shlb
inc
xchg
stos
jne
cmp
sbbb
hlt
push
rep
pop
jo
xchg
mov
jae
xchg
jb
gs
push
addr16
pushl
add
and
lods
mov
testb
adc
nop
dec
sub
adc
cmp
pop
sbb
xor
movsl
addb
cmp
xchg
iret
sbb
lcall
xorl
mov
sti
add
in
daa
jno
sub
mov
inc
movsl
ss
mov
mov
ret
shll
ljmp
inc
outsb
sub
xchg
jne
mov
ss
lret
inc
aad
or
pop
mov
stos
inc
mov
ret
and
js
add
push
cmpsb
inc
mov
mov
addr16
adc
dec
xchg
add
dec
loope
jne
out
int3
xor
inc
out
pop
xor
mov
mov
jns
loopne
pop
add
jge
in
inc
mov
ret
mov
jle
outsb
push
dec
ret
ds
orb
ss
lcall
nop
mov
pop
xchg
int3
loop
dec
mov
adc
sbb
pop
add
xchg
adc
stos
inc
adc
daa
mov
mov
push
js
dec
or
xchg
adc
and
cld
mov
notl
andl
sbb
scas
popf
sbb
xchg
pop
pop
divl
int3
lahf
loopne
mov
stos
das
dec
stos
cltd
clc
test
ljmp
popa
daa
jb
mov
rolb
cmpsb
es
cmp
mov
out
mov
fadd
lds
jo
push
psrad
mov
add
add
inc
roll
ret
sbb
movsb
adc
lock
jno
fcomps
test
or
movsb
cmpsl
pop
inc
test
lock
mov
dec
lret
sbbl
cmp
jl
mov
hlt
fdivr
aas
cld
sbb
dec
inc
fwait
pop
out
call
adc
pop
xchg
cmp
lods
bnd
mov
arpl
inc
filds
std
cli
int3
cmc
repz
shll
fwait
mov
inc
fstl
xor
add
push
imul
icebp
mov
xor
leave
and
lea
sbb
dec
sub
pusha
iretw
pop
push
ficoms
out
lods
fistps
xchg
je
and
out
sti
stc
test
nop
inc
aaa
insb
push
fsts
js
in
outsl
in
inc
aaa
movl
and
sub
mov
stos
lea
cmp
add
dec
inc
add
popa
fstl
daa
pop
xor
mov
into
das
fwait
mov
cmp
push
xchg
pusha
sbb
fisubrl
xor
jp
filds
out
bound
int3
gs
xchg
cwtl
and
lret
mov
je
test
push
mov
cmp
dec
and
filds
push
mov
add
jbe
pusha
dec
ds
mov
out
imul
push
ret
in
fisttpl
aam
call
neg
loopne
in
add
pop
push
xchg
call
inc
mov
int
and
bound
cmp
xchg
lds
inc
xchg
or
mov
rol
or
add
ljmp
ja
mov
adc
lret
push
idivl
push
xchg
aam
jbe
frstor
lds
push
out
shrl
xchg
mov
sub
jg
in
xlat
inc
cmpsb
add
push
mov
mov
and
jle
dec
cwtl
xchg
and
outsb
add
addr16
adc
and
aam
ss
sbb
lds
outsb
ss
scas
xor
sbb
aas
mov
dec
movsb
mov
jnp
xchg
into
xchg
fisttpll
cltd
xor
adc
push
mov
ja
into
leave
stos
gs
jecxz
mov
jmp
adc
outsb
xor
push
in
adc
pop
sub
add
aad
nop
push
xchg
sahf
jecxz
mov
outsb
notb
pop
sub
outsb
popf
lahf
adc
add
push
jns
adc
fnstcw
and
and
sub
repz
jb
jmp
dec
mov
shlb
and
sbb
fiaddl
cmp
dec
rorl
jns
je
mov
xlat
insl
mov
cmp
push
mov
push
cwtl
adc
mov
out
shl
insb
jae
fimuls
push
pop
pop
xlat
dec
cwtl
or
jb
sub
sbb
in
add
adc
push
into
mov
xchg
popl
mov
das
pop
dec
int
cmp
in
les
push
outsb
sub
test
mov
mov
mov
xchg
rcrl
add
inc
cltd
mov
out
fcmovbe
mov
adc
movsb
lods
loop
adc
adc
lcall
xchg
mov
jl
mov
and
xorb
xchg
adc
bound
loope
push
push
std
xorl
lock
xor
fwait
mov
fidivrs
mov
xchg
jb
ret
jno
inc
icebp
sbb
xor
lret
mov
cmp
ret
call
inc
insb
jne
push
cmp
push
in
push
loope
test
pop
push
push
push
fidivrs
andl
lock
jae
fnstenv
jbe
test
push
fcmovnbe
sub
arpl
movsl
mov
mov
repnz
shll
insb
scas
add
mov
cmp
xlat
out
mov
push
and
cmp
xchg
pop
inc
pop
fisubrl
cld
jg
lahf
jno
ret
test
xchg
inc
mov
lock
dec
mov
stos
arpl
push
jns
cmp
shll
or
insl
pop
aas
jle,pn
add
shr
inc
inc
sbb
je
loope
out
mov
rcrl
sbb
xlat
icebp
cmc
cmp
lock
test
or
mov
jno
cmpsl
je
jo
shr
add
jl
cld
arpl
sti
xchg
ret
cmp
cld
addr16
and
or
and
jecxz
int
shlb
jbe
mov
pop
mov
in
scas
jecxz
xor
and
cmp
mov
dec
dec
call
mov
mov
adc
call
imul
gs
fldl
fisttps
pop
or
mov
insb
dec
call
mov
aas
sub
adc
std
lea
xorl
jg
sti
imulb
xor
inc
push
das
cmp
adc
push
adc
pop
ljmp
je
leave
mov
shlb
repz
dec
sbb
pop
aam
adc
outsl
dec
mov
mov
push
andb
rcrl
test
stc
inc
mov
cmpb
or
pop
mov
shll
jne
push
rcrl
sub
pop
cmc
in
or
fbld
adc
jns
mov
xchg
adcl
dec
jg
xchg
mov
out
jle
sbb
aas
adc
xchg
sahf
sub
mov
mov
pop
adc
pop
push
test
adc
xlat
addb
cld
push
ret
xchg
cmp
xchg
mov
shl
roll
push
pop
mov
push
inc
xor
xor
cmp
push
in
mov
movsl
lahf
mov
icebp
outsb
aaa
mov
jg
sahf
insb
in
mov
ret
in
dec
std
lea
pop
repz
mov
mov
rcr
into
push
int
mov
mov
aam
and
jbe,pt
pop
mov
mov
jnp
popa
fisubrs
les
pop
in
shrb
jmp
pop
fadds
jnp
lret
cli
or
les
xchg
roll
xchg
popf
clc
mov
testb
fwait
inc
jp
clc
cmp
xchg
jl
fcmovnbe
jae
xchg
scas
ljmp
sti
cs
dec
jg
int
adc
repnz
les
roll
jno
rcrl
cmp
pop
mov
inc
sub
mov
in
xchg
repz
push
rclb
push
pop
mov
jb
and
pop
mov
test
loope
fstps
or
adc
sub
addr16
or
mov
add
dec
xor
lds
inc
ljmp
pop
mov
push
ret
loope
fidivrl
adc
in
fdivp
imulb
cs
test
or
xor
sbb
sbb
sub
out
or
adc
or
push
sti
adc
rcrb
dec
push
xor
loope
xchg
push
inc
cmc
dec
lods
fisubl
dec
pusha
clc
fiaddl
cmp
xchg
cmp
sub
dec
or
jmp
fisubs
mov
outsl
or
cwtl
cltd
dec
dec
out
jecxz
sbb
pop
fs
dec
inc
outsb
mov
jp
aam
jle
add
test
iret
es
scas
mov
jb
insl
imul
ficompl
movsb
insb
in
sbb
das
sbb
shlb
push
sarl
leave
jle
lahf
lahf
xchg
xor
mov
inc
mov
das
or
pop
mov
xchg
stc
mov
push
das
mov
push
gs
and
int
shlb
push
push
incl
and
jmp
nop
jne
dec
stos
fld1
adc
sub
aaa
adc
mov
adc
lcall
push
or
pop
iret
in
add
cmpb
jge
inc
call
icebp
shll
jns
mov
fists
subl
cmpsl
cwtl
lret
or
mov
fyl2xp1
add
stc
cwtl
add
xor
jns
jno
fstps
mov
out
in
sbb
pop
jecxz
dec
xchg
fisttpll
or
icebp
ficomps
add
imul
int3
jl
call
xchg
cs
mov
lock
psubq
xchg
lock
push
xchg
or
mov
cmpsb
aaa
push
mov
mov
and
lret
push
mov
inc
mov
pop
int
push
and
push
aaa
rorb
insb
mov
sarb
rorl
xor
sar
xlat
mov
pop
mov
lcall
jne
add
mov
mov
xchg
push
loopne
pop
lcall
dec
repnz
jo
sahf
jbe
call
es
inc
aaa
daa
dec
mov
loop
int
pop
rorl
xor
xchg
mov
aaa
pop
neg
ljmp
and
or
and
jmp
in
not
in
test
stc
test
pop
jnp
insl
inc
sub
cmp
xor
xchg
aaa
mov
mov
jbe
mov
into
insb
iret
outsb
pop
push
outsl
ret
xorb
pop
ljmp
cmpsb
test
stc
cmpsb
pop
loope
pop
pushf
push
dec
cmc
cmp
movsl
jo
ja
stc
test
jmp
ret
aaa
int
addb
daa
movsb
sbb
fs
mov
jp
xchg
loopne
call
jmp
cli
movsl
mov
pop
add
jecxz
jb
cmp
dec
leave
pop
in
push
xchg
sarb
cmp
and
imul
add
xlat
call
fmul
jg,pt
das
inc
fwait
fs
inc
xor
mov
aam
movsb
push
inc
mov
dec
push
push
in
cmp
fadd
loope
xchg
sbb
mov
loop
mov
cwtl
outsl
dec
hlt
enter
sub
shlb
or
inc
scas
push
stc
inc
ret
xorb
sbb
mov
xchg
call
push
das
int
cmp
leave
and
lret
lock
sbb
pop
inc
push
rcrl
sahf
push
out
negb
jns
dec
inc
lods
adc
mov
clc
out
mov
out
addr16
fistl
mov
mov
lcall
jo
imul
outsl
and
xchg
popf
pusha
push
mov
imul
pop
nop
cwtl
int3
jl
std
mov
sbb
mov
push
inc
bound
mov
cs
cmp
mov
adc
xor
testb
mov
lods
mov
pop
inc
repz
std
dec
ja
int3
pop
dec
aas
cltd
jae
add
pop
adc
ja
daa
sub
out
cmp
push
stc
shll
lods
shrl
jl
jns
or
xchg
mov
jno
js
fs
shl
mov
xor
add
scas
pop
mov
push
xchg
test
sti
or
add
mov
lcall
dec
shrb
jnp
sub
clc
test
mov
sbb
lods
cld
pop
stos
or
adc
xchg
and
sahf
imul
pop
je
cmp
pop
imul
imul
jp
xlat
mov
minps
pop
movsl
mov
out
stc
outsb
into
mov
movsl
jge
out
vorps
je
in
or
adc
es
mov
sub
std
pop
mov
push
std
sbb
mov
jl
loopne
push
dec
mov
mov
mov
mov
rclb
repnz
push
lret
cltd
xchg
fldcw
adc
add
inc
jnp
sub
outsb
adc
adc
add
nop
mov
xchg
pop
push
mov
sbb
add
mov
or
imul
jns
fiadds
test
cmp
scas
jae
jno
imul
dec
loop
mov
xor
push
sar
loop
ret
lret
lahf
xor
and
jbe
add
xor
mov
xchg
sub
mov
pop
add
shlb
insl
ficoms
fldt
push
jmp
pop
shrb
mov
mov
or
scas
inc
jecxz
test
hlt
insb
cld
or
fwait
push
pop
gs
pushf
addr16
push
mov
imulb
push
push
dec
jnp
pop
mov
mov
inc
mov
pop
ljmp
aas
jmp
or
nop
pop
push
mov
mov
xor
cmp
bound
daa
jb
dec
iret
and
jge
insl
pop
mov
cli
out
jmp
gs
daa
adc
cmp
push
test
outsb
dec
cld
push
gs
add
lds
push
fdivs
lcall
jcxz
push
xor
icebp
pxor
enter
lret
clflush
jb
xchg
mov
fs
repz
push
push
arpl
sti
xor
mulb
jne
sub
mov
test
sub
ds
lock
mov
aam
repz
cmp
cmp
sub
imul
fildll
gs
xchg
ja
fistl
sti
add
mov
incb
movsb
mov
mov
pop
sub
or
sbb
int3
mov
jnp
mov
mov
pop
add
mov
dec
jmp
shrl
mov
pop
mov
xchg
ret
sub
sub
clc
mov
leave
loop
mov
out
mov
dec
ja
jb
jae
mov
push
in
cltd
cltd
jb
inc
pop
mov
mov
xchg
das
lods
add
dec
in
sbb
jnp
pop
xchg
ljmp
ss
insl
mov
je
in
dec
jb
gs
insb
into
cmp
fdivrl
lods
xchg
mov
das
xchg
mov
jbe
xchg
or
mov
push
divb
js
cmp
lea
or
mov
movsb
sbb
or
call
stos
sar
inc
out
shlb
js
sbb
in
push
dec
add
in
leave
out
adc
fxch
lods
xor
rcrl
adc
or
jnp
std
cli
enter
in
sahf
mov
popf
movsb
xorb
andb
push
pusha
aas
ret
ja
daa
test
in
jb
xchg
cwtl
xchg
adc
jb
mov
in
dec
and
nop
or
xor
xor
inc
adcl
rcll
adc
outsl
add
clc
inc
dec
cli
jecxz
add
mov
sub
cmp
inc
push
or
lods
fdivrs
lods
cmc
cmp
or
inc
cmp
pop
or
cmp
jmp
loop
xchg
fstpl
outsb
insl
jecxz
xchg
push
imul
jmp
imul
movsl
cmp
xor
and
pop
inc
adc
xor
adc
fsubl
or
testb
hlt
inc
or
aaa
jbe
jg
push
pop
cli
adc
cwtl
rcrl
and
mov
out
addb
in
mov
and
out
insl
sub
add
inc
loopne
dec
and
test
out
xchg
and
adc
xlat
xor
imul
dec
jp
pop
jle
and
pop
aad
lock
jns
lods
pop
rorb
sub
and
lret
pop
gs
and
inc
xchg
inc
ljmp
mov
popa
mov
cmpsl
cmp
push
cmp
enter
mov
adc
outsb
cli
in
lock
sbb
fs
sbb
inc
cmp
dec
repz
aad
pop
xor
xor
in
and
or
or
jg
ficomps
cmpl
jl
je
mov
outsl
mov
add
pop
lret
cwtl
in
pop
sub
jb
fldl
outsb
add
aas
adc
mov
pusha
adc
imul
out
xchg
mov
xchg
fsubrl
decl
fidivrs
dec
insb
lods
js
dec
je
sti
std
sub
sbb
scas
xchg
sahf
repz
mov
inc
mov
dec
push
xchg
mov
sarb
pop
ret
out
or
mov
insb
mov
in
ret
adc
sbb
cmp
in
stos
bound
loope
daa
adcl
jnp
xchg
adc
xorb
adc
clc
hlt
jg
jle
mov
fidivl
pop
dec
loopne
mov
ja
test
clc
mov
push
jb
sbbl
jmp
fidivrs
popf
mov
mov
sbb
cmpsb
nop
mov
cmp
rorl
cltd
mov
daa
lret
mov
push
xor
aad
addr16
movsl
xor
add
loope
lahf
mov
outsl
ljmp
out
cmp
cwtl
dec
loop
mov
sbb
cmp
stc
aam
lret
cmpl
cltd
xor
inc
rcll
add
fdiv
stc
test
pop
mov
ljmp
hlt
jo
inc
xor
mov
fisubrl
test
add
iret
in
mov
cmpxchg
sbb
fwait
pop
bnd
addr16
or
stos
xchg
inc
mov
mov
repz
add
push
mov
dec
mov
mov
mov
mov
jne
shr
loopne
mov
mov
addr16
dec
push
pop
fdivrs
mov
add
cld
call
fisubl
push
loop
sahf
inc
popf
lods
mov
push
imul
imul
fisubrs
sti
mov
mov
loop
fnsave
or
rol
out
mov
lea
mov
adc
iret
push
xchg
ret
and
pushf
pusha
push
out
aas
inc
test
cmpsb
testl
sbb
xor
xchg
in
adc
mov
popf
popa
pop
inc
fs
pop
imul
or
arpl
sbb
mov
aad
lds
xor
add
call
insb
mov
xor
jle
inc
push
sub
jo
push
loope
mov
pop
xchg
addr16
and
xor
fwait
push
test
out
fisubs
push
aad
mov
inc
and
or
rolb
jmp
sub
ss
lret
cwtl
shlb
xor
jnp
out
shr
hlt
fbstp
xchg
mov
pop
in
xor
jmp
push
or
jns
xor
out
dec
cmpsb
mov
adc
sub
push
sub
jg
cltd
dec
insl
loopne
pop
sub
out
rcr
ss
push
sbb
dec
mov
sahf
ja
push
and
cmpsl
cmp
jno
add
push
dec
cltd
out
cli
jmp
sbb
push
dec
sub
lds
cmpsb
int3
cmp
inc
jbe
pop
fwait
popf
sbb
in
mov
add
mov
or
pushf
mov
or
xor
stos
into
cmp
sub
ficompl
lahf
iret
inc
dec
jbe
pop
imul
out
cmp
test
inc
ficomps
lds
jne
xor
xlat
loopne
xor
hlt
push
in
neg
mov
movsb
or
ja
jno
add
lods
das
fs
es
inc
shlb
push
cli
ljmp
jne
dec
test
faddl
push
xor
lcall
cmpl
mov
cmpsl
iret
lds
dec
lcall
or
fs
and
push
xor
out
je
pop
push
sbb
mov
mov
stos
cs
aaa
cmc
add
xor
push
les
enter
pushl
or
pop
push
loopne
repnz
mov
addr16
cmp
or
fisubs
sbb
mov
pop
cli
mov
push
mov
icebp
cwtl
xor
sbb
push
add
mov
in
pop
and
jge
push
and
arpl
aaa
or
pushf
mov
push
bound
negb
gs
adc
in
ret
stos
inc
xor
stos
cs
xor
dec
jl
popl
movsl
inc
jmp
fwait
cmp
cltd
fsubs
loop
push
clc
jmp
shrl
pop
jne
xchg
pop
dec
decl
pop
frstor
imul
xchg
mov
inc
mov
dec
leave
mov
nop
or
mov
test
mov
fidivs
jne
cs
add
imul
jo
shlb
mov
lcall
out
mov
or
ret
hlt
loope
dec
inc
jmp
adc
mov
out
scas
mov
rcl
fidivs
in
pushf
cmp
adc
sbb
movsl
sahf
subb
clc
push
pop
jo
ljmp
push
js
mov
popf
add
outsl
push
rcll
add
loopne
dec
inc
stos
pop
ret
pop
fsubl
jl
in
pop
pop
xor
jno
insl
xchg
lods
out
jno
testb
nop
mov
roll
and
jo
jae
lret
jae
dec
sbbl
movsb
push
jae
ja
aaa
or
cmp
stos
add
mov
andb
or
arpl
cwtl
pushf
iret
adc
sahf
leave
fs
or
adc
in
fistpll
cli
je
and
mov
cmp
push
jge
sbb
lods
dec
fisttpl
or
or
loope
test
outsl
cltd
push
repz
das
shlb
rcrl
pushf
repz
mov
sub
rcr
push
pop
mov
inc
mov
data16
pop
inc
jne
loope
xor
jl
arpl
mov
cmp
xchg
jmp
inc
andl
pop
mov
decl
inc
test
fisubs
xor
push
cmp
mov
pop
and
mov
fcmovbe
pop
iret
cmp
out
push
aam
stos
add
or
pushf
dec
mov
pop
movsl
cmp
mov
les
cmp
vpmulhw
filds
mov
add
pop
jge
inc
sub
test
sbb
hlt
pushf
aam
pop
rcrl
cmp
lret
movsl
out
jle
hlt
mov
shrb
insl
cmc
and
xchg
pop
addr16
hlt
ret
mov
outsb
adc
leave
inc
loopne
jno
and
dec
or
mov
aad
mov
test
clc
ret
inc
xchg
mov
pushf
fimuls
hlt
mov
sub
mov
scas
cmove
or
xchg
inc
sub
adc
add
dec
movsl
roll
mov
cmp
fxch
pop
mov
sub
out
xor
pop
mov
pop
pop
cwtl
cmp
hlt
push
mov
push
pushf
stos
mov
adc
and
mov
dec
cmpsl
dec
inc
pusha
add
ds
inc
ss
xor
test
xor
sbb
mov
and
addr16
loop
mov
inc
fbstp
stos
clc
arpl
mov
lret
xchg
leave
icebp
mov
stc
outsl
ret
jne
push
das
pop
not
dec
rorb
jb
nop
jne
pop
adc
mov
lea
or
pop
mov
jae
xchg
jge
aas
icebp
mov
rolb
lret
hlt
jae
jle
xor
test
les
push
in
lods
add
imul
inc
test
inc
adc
iret
jno
out
pop
lods
bound
arpl
xchg
dec
sub
xchg
inc
pop
jbe
push
jo
imul
test
insb
mov
inc
insb
mov
dec
fs
mov
adc
mov
aas
andl
push
pop
test
pushf
insl
pop
dec
cmp
and
jmp
js
lahf
dec
int
mov
push
mov
pop
push
incb
or
imul
outsb
push
jb
adc
and
add
fs
mov
xor
cs
push
insl
cwtl
dec
in
push
lods
xchg
sbb
lds
mov
cmc
mov
xor
rorl
movsl
lret
movsb
mov
lods
out
mov
cmc
or
mov
dec
lret
js
cld
and
cmpl
pushf
mov
test
mov
repz
mov
ficompl
scas
cmp
and
push
cmc
jnp
pop
add
test
lods
cli
xchg
ret
mov
in
ret
fmull
negl
imul
lock
insb
sbb
out
das
jb
hlt
lds
rclb
xchg
cmp
fsubl
cmp
out
pop
popf
mov
nop
xor
rcrb
mov
fs
add
or
iret
dec
sarb
in
add
mov
std
std
fldcw
or
das
into
xor
fisttps
sbb
lods
das
push
sarb
push
int
lret
xchg
insb
inc
pusha
cmpl
xchg
test
dec
mov
loop
mov
ret
cmpsb
dec
or
push
dec
orb
xor
sbb
pop
mov
js
fwait
or
xchg
loope
fcomip
inc
sarl
mov
push
lock
shlb
mov
outsl
sahf
adc
pop
fidivs
into
ljmp
aas
dec
cmpb
imul
aad
sub
pop
or
int3
fistl
ljmp
push
push
xor
xchg
jecxz
jo
stos
push
inc
fidivrl
jns
xor
cmc
jne
jo
fists
adc
cmp
cmpsb
sub
ljmp
outsl
cmc
pop
inc
fildl
out
orb
push
ja
and
push
ss
sub
mov
das
xchg
shlb
jge
push
sbb
repz
pop
movsb
fxch
jl
xor
out
or
loop
movsb
scas
insb
adc
jmp
es
lcall
icebp
sbb
loop
addr16
cmp
aaa
lods
repz
test
loopne
inc
add
mov
xchg
pop
jle
lgs
lret
shl
mov
lock
jle
pop
cmp
shrb
mov
or
cwtl
sbb
push
pop
imulb
add
pop
inc
or
hlt
shrb
repz
mov
push
or
dec
push
mov
inc
ja
mov
cli
push
sbb
inc
mov
icebp
push
jg
pop
test
stc
xchg
out
lds
sahf
xchg
shlb
dec
inc
jge
sar
pop
adc
pop
fucomip
mov
out
pop
int3
pop
sub
sbb
in
xchg
cmc
mov
mov
cmp
push
je
jecxz
bound
adcl
out
xor
xchg
jl
mov
ret
les
fcomp
pop
sbb
roll
pusha
sbb
push
or
enter
or
loope
popf
das
or
repnz
jne
xchg
adcl
idiv
or
int
push
add
test
xchg
cmp
adc
lret
cld
and
inc
into
fsubrp
or
mov
adc
mov
push
orl
fadd
xchg
and
add
xchg
lcall
mov
leave
or
in
push
cltd
adc
pop
ficoms
mov
adc
inc
fcomip
es
add
ljmp
shlb
fstpt
xchg
mov
mov
add
pop
jmp
xchg
popa
imul
fidivrs
movsb
into
lret
push
and
insl
cltd
inc
pop
cmp
push
and
xor
inc
xor
xchg
xchg
push
les
imul
call
sub
sbb
ljmp
hlt
in
sub
into
insb
ror
fdivrs
stc
ljmp
and
sarb
ret
ret
mov
xchg
lcall
mov
in
in
push
jne
dec
mov
mov
aas
push
int3
inc
mov
cmp
mov
ficoms
sub
dec
xchg
adc
stos
dec
sub
pop
insb
test
inc
push
xor
push
sub
ret
cmpsb
popf
sub
pop
repnz
out
mov
das
out
or
int
push
test
xor
bound
jp
push
xor
in
shlb
or
push
clc
pushf
cmp
mov
pushf
mov
push
mov
fisttpll
push
popf
jno
cmp
sar
fmul
inc
ret
xchg
aas
mov
sbb
pop
ret
cs
add
test
jns
push
int3
mov
cmc
je
repz
test
sbb
dec
mov
movsb
nop
aas
pop
addl
hlt
rcl
xor
das
mov
cld
cli
clc
aam
daa
adc
and
mov
lods
mov
and
sub
hlt
push
cmp
sbb
repz
ljmp
sub
mov
adc
add
cmc
or
ret
movsl
sahf
xchg
lods
push
ja
loope
mov
movsl
aas
inc
das
mov
stos
push
push
repz
cmp
push
lds
int
cmp
jno
mov
imul
in
sbb
sahf
pop
jg
xor
js
xchg
inc
dec
addr16
xchg
mov
sbb
stc
test
nop
pop
mov
push
sbb
and
cs
jge
dec
and
fsubrs
leave
push
jae
push
lret
movsb
inc
int
xchg
mov
cmp
and
fst
cwtl
test
fstpt
xchg
imul
mov
stos
cld
ds
fdivs
cmc
mov
punpckhdq
push
subb
aad
push
insl
mov
push
stos
push
add
xchg
andl
cld
icebp
ja
mov
stos
jo
and
jae
outsl
sarb
mov
out
xor
rorl
lods
jo
jge
sbb
in
pop
and
adc
bound
incl
cmpsl
jmp
bound
adc
fstps
call
loope
mov
adc
int3
divb
dec
xchg
lret
mov
lods
push
fsubl
adc
adc
xchg
adc
fwait
insb
and
pop
xchg
loopne
fimuls
mov
cmpsb
pop
inc
xor
jge
sub
sbbl
sahf
mov
fwait
inc
mov
fdivrs
mov
push
ja
jno
mov
sarb
push
orb
dec
push
xchg
test
pop
loopne
mov
leave
add
jbe
je
or
jnp
repnz
cmc
lcall
fsubrl
mov
xchg
dec
mov
mov
addb
add
dec
cld
addr16
rcll
push
loop
pop
scas
pop
popa
add
fdiv
movsb
mov
shl
pop
outsb
pop
adc
mov
and
or
mov
imul
jb
xchg
or
mov
lret
das
cmc
mov
sbb
push
fwait
adc
arpl
xorl
xchg
or
shll
mov
mov
rol
popf
lds
hlt
das
daa
jns
or
lahf
lret
loopne
jl
js
icebp
push
gs
in
mov
xlat
and
and
jne
dec
xchg
lahf
into
fsubrl
or
xchg
push
inc
arpl
push
mov
std
jge
stos
data16
shll
in
imul
xchg
lods
add
outsb
out
adc
jge
repz
je
xchg
adc
push
mov
push
dec
mov
movzwl
cs
mov
push
sbb
push
adc
comiss
cmc
xor
xor
cmc
lea
pop
and
push
sub
jns
mov
add
pop
mov
add
sbb
push
pusha
loop
or
sar
adc
mov
sub
test
movsl
xor
xor
mov
les
jecxz
mov
test
das
xchg
add
pop
sbb
mov
mov
fisubrl
shlb
in
arpl
push
cmp
xlat
clc
and
roll
mov
push
pop
inc
cmp
lods
or
lods
loop
ret
js
sbb
lods
decb
adc
mov
xchg
pushf
dec
bound
fcompl
dec
leave
sub
mov
xchg
fsts
enter
adc
nop
cmp
int
fisttps
cmp
je
aad
fbstp
mov
and
dec
xchg
test
sbb
xor
sbb
xchg
dec
pop
loopne
lea
or
jns
shll
pop
cld
aam
dec
jecxz
fstpl
fs
aad
fs
movb
jne
sbb
sbbl
notl
test
in
enter
xchg
xor
mov
inc
in
mov
aaa
mov
adcl
mov
sub
push
scas
mov
adc
dec
or
orps
mov
leave
fimuls
or
xchg
enter
scas
adc
sti
jnp
call
mov
loope
cmp
insl
mov
loop
mov
sbb
stos
ljmp
pop
out
jp
push
pusha
jl
addr16
es
pop
cld
mov
fsubrp
pop
lcall
cmp
lds
in
fidivs
call
add
or
add
xchg
sub
fmuls
jle
inc
pushw
xchg
xchg
pop
loopne
xchg
xchg
fmulp
mov
es
xor
jp
ja
popa
loopne
adc
les
add
mov
mov
popw
sahf
inc
ret
mov
loop
stos
push
ja
ss
mov
popa
cli
sahf
mov
mov
sub
data16
xlat
xor
loope
dec
sub
cmp
in
and
xor
daa
inc
xchg
or
sbb
fcoms
filds
ret
aaa
andl
lcall
icebp
mov
xchg
test
stos
fists
mov
sub
inc
jmp
add
negl
pop
dec
cmp
dec
ljmp
nop
divb
pop
push
pop
push
maskmovq
negl
int
icebp
xchg
push
pop
and
mov
sbb
jle
popa
movsb
mov
inc
mov
xchg
add
xchg
xlat
sbb
push
test
lds
popf
test
mov
enter
ss
mov
ja
inc
adc
jp
lock
sub
cli
xlat
das
sub
data16
pop
lods
lods
push
add
pop
sub
testb
dec
xchg
repnz
popf
inc
push
clc
cmp
leave
outsb
dec
xchg
mov
cmp
pop
aas
cmc
cmp
cmp
pop
jge
std
cmp
scas
mov
xorb
mov
jbe
mov
jl
xor
cmp
jecxz
hlt
leave
addr16
loop
aam
cmpsb
or
push
nop
fdivr
mov
sarb
add
inc
rcrb
cmp
test
adc
pop
pop
xor
sub
stc
xchg
cmp
mov
xchg
jl
bound
cmp
pushw
mov
jne
mov
out
aaa
inc
push
and
cmp
or
sahf
hlt
inc
adc
adc
mov
and
imul
push
movsb
pop
mov
repz
dec
scas
dec
xor
push
test
andl
xchg
inc
ds
add
outsl
frstor
push
or
pop
divb
int
adc
movsb
or
jl
pop
jns
gs
jb
lret
mov
and
mov
cwtl
add
jg
mov
mov
push
sti
dec
fldcw
cmp
pop
mov
push
push
and
mov
subb
and
ljmp
inc
jle
add
out
arpl
sti
cmp
out
clc
push
or
cld
lods
xchg
jle
jmp
das
sbb
stos
jne
jns
add
test
xor
xchg
out
dec
adc
mov
sub
mov
jmp
test
mov
cmpsl
test
mov
mov
adc
imul
gs
out
or
push
int3
cli
clc
aam
dec
inc
push
sbb
mov
add
or
dec
enter
xor
or
ds
sub
sub
shlb
add
cltd
pop
pop
mov
cmp
xchg
outsl
mov
sbb
das
jae
pop
iret
mov
jmp
push
leave
lods
nop
rcl
push
pop
xor
xor
mov
add
data16
cmp
jnp
lahf
or
and
je
pop
xchg
cmp
and
mov
add
xchg
mov
in
repnz
out
loopne
out
enter
inc
leave
xor
cmp
fidivrs
test
mov
cs
sarl
inc
aam
cld
and
outsl
mov
xchg
insb
pop
js
xchg
push
jge
lcall
pop
lret
sbb
nop
adc
cli
les
in
rcrl
jne
mov
jbe
aad
mov
cmp
push
popa
sub
mov
jmp
stc
sahf
insl
jmp
cmp
xor
sbb
data16
loopne
cwtl
or
loopne
int
pop
sahf
pop
repnz
or
pop
jb
test
xchg
and
in
push
imul
jns
or
pop
aam
adc
in
xchg
loop,pt
movsl
cmp
xchg
jnp
sub
xchg
mov
sbb
dec
and
or
test
nop
je
cs
aaa
add
or
movsb
jge
lea
jl
jl
push
and
push
scas
movsl
sub
scas
jnp
ds
push
jecxz
jg
inc
outsb
ret
adc
cli
aaa
jne
mov
pop
ja
pop
or
cmpsl
inc
lret
insl
inc
test
mov
xlat
iret
cmp
stc
pushf
mov
inc
xor
insl
mov
enter
dec
lcall
push
pop
sbb
sarl
pop
sub
push
dec
insb
mov
mov
and
popf
xchg
xchg
adc
jecxz
pop
repz
or
loop
fucomip
jbe
sbb
sub
jecxz
inc
scas
dec
addr16
mov
dec
sub
cmpsl
or
push
adc
lret
adc
add
in
sbb
mov
lahf
int
stos
mov
sbb
pop
jo
mov
jg
pop
inc
fwait
xchg
and
lods
pop
inc
push
xor
mov
push
xchg
xchg
fcompl
fidivl
jns
jb
dec
std
out
cmc
adc
xlat
in
fisttpll
pusha
xor
mov
test
fcmove
and
or
jno
lods
ss
cmpsl
dec
loop
ljmp
rclb
cwtl
cmc
xor
jecxz
adc
dec
test
add
inc
dec
cwtl
pop
push
xchg
movsl
pop
in
lret
in
inc
stos
push
xor
ss
inc
jecxz
int
mov
daa
inc
jecxz
push
jge
in
ret
add
mov
loopne
enter
insl
mov
push
cmpl
sti
sub
pop
mov
subl
scas
jne
pusha
mov
ret
ret
lds
sbb
jl
mov
dec
out
xchg
ljmp
fldcw
clc
in
adc
jbe
imul
in
repz
pop
fisubrs
inc
outsl
iret
mov
outsl
xor
mov
cld
les
mov
imul
dec
imull
adc
sbb
loopne
sbb
ret
mov
mov
push
mov
cmp
xchg
int
mov
shld
push
ret
loope
stos
les
mov
and
mov
jnp
add
clc
inc
or
mov
in
fmuls
lods
or
lds
leave
or
or
inc
fidivl
sti
insl
cmp
inc
sbb
out
sbb
hlt
xchg
les
repz
xor
cmp
push
push
es
add
test
mov
enter
dec
das
cli
cwtl
dec
pushf
enter
dec
sahf
push
bound
pop
cmp
lods
ficompl
mov
shrb
xchg
jb
xor
shl
add
clc
gs
adcl
cmp
jns
or
or
pop
popa
imul
mov
dec
mov
sahf
and
and
and
xor
clc
jge
popa
jns
nop
enter
inc
lcall
pop
inc
stos
add
aaa
jbe
add
inc
mov
outsb
imul
mov
aaa
push
neg
sbb
sub
pop
mov
lds
mov
lock
mov
or
sbb
cmp
iret
jp
xchg
and
xchg
xchg
ja
shl
mov
mov
popf
int
fsubr
xchg
movsl
outsb
into
lret
mov
test
scas
sbbl
push
mov
out
xchg
out
stc
call
cltd
dec
imul
shlb
sub
xor
sub
mov
sub
iret
mov
jmp
not
mov
mov
loope,pn
cmp
gs
mov
cmp
ret
xchg
mov
faddl
in
adc
push
pop
rcrl
ljmp
adc
jmp
mov
xor
adc
lds
repz
aas
out
ret
mov
jp
or
adcb
setge
pop
adc
cmp
outsb
pop
divl
xorl
mov
pusha
pop
cmc
std
inc
cld
mov
mov
or
insl
xor
pop
push
cmp
dec
mov
xchg
cmpl
pushf
sbb
aaa
call
fstpt
sbb
pop
icebp
add
insl
mov
jb
jnp
or
jl
mov
je
imul
push
xchg
insb
stos
or
pop
inc
ja
cmp
rclb
mov
sbb
nop
pop
jg
inc
stos
lods
bound
arpl
cmp
lock
sbb
and
sub
fsubrs
lcall
mov
sbb
adc
cmovnp
hlt
addr16
jmp
hlt
push
cmp
ret
push
pop
mov
inc
imul
lahf
sbb
adc
ljmp
mov
roll
popf
jl
mov
jb
clc
mov
popf
xor
aad
test
aas
mov
sub
cwtl
lods
and
push
ljmp
ss
or
imul
cmp
push
mov
adc
in
jg
inc
mov
cmp
push
mov
lds
lahf
xchg
and
or
cmp
call
outsl
cmc
dec
inc
pushf
inc
fcompl
int
fisubrl
mov
repnz
aad
and
mov
xor
ror
push
mov
daa
or
cmpsl
cmp
xor
sbb
fmull
push
lock
mov
insb
jb
add
push
jno
lods
dec
rcrb
cmp
jecxz
dec
xchg
mov
add
sub
int3
ss
mov
xor
sbbl
shlb
jns
rorb
fsubl
mov
jp
lcall
neg
in
stos
cs
ret
aaa
xor
mov
notb
xchg
push
push
xchg
mov
sbb
mov
fmul
decl
and
add
cmpsl
push
shll
mov
sub
addb
or
or
fisubl
jns
sub
into
cwtl
mov
inc
cmp
cmp
or
mov
push
loop
pusha
pop
mov
pop
mov
dec
in
cmp
mov
cmc
pop
loop
in
inc
out
imul
lahf
mov
push
pushf
rcll
inc
idiv
jb
xor
jae
pushf
jno
mov
es
shll
repz
xorl
dec
out
sub
scas
push
aam
xor
ret
shrl
cmp
push
cltd
negb
push
jp
mulb
jb
test
lcall
fidivrl
mov
pop
fimuls
inc
xor
mov
ret
mov
daa
popf
aas
and
subl
xor
mov
inc
out
jecxz
in
les
sub
ss
mov
sub
dec
test
ja
cmc
add
dec
adc
iret
dec
dec
imull
addr16
mov
push
stos
add
xchg
sbb
and
loope
ret
and
ficoml
cmp
call
adc
mov
fwait
jne
or
pop
add
inc
and
lods
pop
push
inc
data16
sbb
xor
cmc
xlat
cmp
test
adc
pop
and
push
and
movl
ljmp
cmc
adc
test
cld
shlb
pop
jo
loop
pop
mov
test
adc
jl
mov
leave
insl
outsb
data16
test
pop
push
leave
outsl
add
push
data16
cmp
stc
and
sti
ss
mov
pop
subl
lret
imul
cmp
and
shll
mov
sbb
outsl
lret
jge
add
std
mov
mov
adc
int3
aas
lcall
call
fbld
in
sub
sbb
pop
cmp
fwait
test
sbb
scas
dec
cmc
mov
lret
inc
repnz
xor
int3
movsl
movsl
pop
ds
adc
lret
jae
jg
loopne
rclb
cs
lret
jbe
out
jbe,pn
mov
scas
in
sbb
shrb
ds
add
jb
ljmp
cmp
add
cmpsb
andb
arpl
sub
rcr
xlat
jnp
jl
cmpsl
call
stos
rcll
ljmp
cmpb
cltd
pop
adc
dec
or
fsubrl
push
aaa
sbb
mov
aam
push
dec
xchg
sbb
pop
and
inc
jo
popa
inc
jle
dec
jecxz
out
pop
add
cmpsl
sbb
test
jbe
push
outsl
mov
pop
popa
jnp
cwtl
push
pop
sysexit
xchg
jge
mov
jp
andb
sahf
cmc
std
pop
ficoml
ficoml
fld
adc
stos
push
insl
test
insl
sub
ss
arpl
adcb
aad
cmp
addr16
adc
in
addr16
sub
jl
jb
cmp
ja
cs
xchg
sub
mov
jl
jmp
xchg
or
push
jo
stc
pop
out
mov
int
out
dec
mov
pop
jmp
mov
ds
ficoml
sbb
cmc
jle
push
add
nop
dec
rorb
mov
movl
rcll
mov
testl
xor
dec
mov
mov
fdivl
push
xchg
sahf
lret
int
cmc
pcmpgtd
ds
lret
jae
xchg
mov
call
or
push
sub
pop
test
xor
sub
pop
inc
push
and
xchg
addr16
mull
mov
fs
fdivrl
xor
xchg
inc
nop
sub
xchg
in
and
loop
xchg
and
dec
in
sub
push
inc
xchg
sbb
movb
mov
sbb
and
push
scas
inc
mov
fldl
dec
stos
fwait
cmc
jmp
sub
mov
aas
jb
pop
sbb
xchg
pop
dec
and
sbb
or
sub
mov
insl
ljmp
jp
lret
jne
cwtl
sub
arpl
mov
mov
fistpl
dec
xor
testb
imul
mov
fadds
and
dec
in
mov
pop
or
mov
stos
cmp
mov
and
or
jmp
lods
add
jecxz
inc
mov
inc
jg
pop
outsl
add
adc
pop
push
cwtl
cmp
pop
jge
fwait
jae
loopne
pusha
sbb
add
cmp
gs
sbb
mov
and
dec
jns
sbb
fnsave
aas
mov
pop
repnz
add
scas
test
loope
jne
adc
insl
sub
pop
movsl
add
cmp
adc
and
imul
mov
ljmp
loope
fs
jmp
repnz
or
jp
xchg
aad
sub
inc
pushf
icebp
stos
lock
inc
scas
mov
lds
mov
xor
lcall
adc
je
or
iret
dec
mov
push
xchg
jp
pop
mov
sbb
xchg
ss
add
lcall
jno
mov
fidivrl
and
fs
divl
sarl
out
dec
mov
pop
jb
add
into
jnp
hlt
aam
push
sbb
jns
cmc
adc
xor
dec
sub
mov
mov
inc
sbb
scas
scas
xchg
mov
and
xchg
pop
mov
cltd
mov
mov
out
nop
xchg
in
sti
pop
or
pushf
cmp
jne
lock
fidivs
popa
clc
int3
sbb
pop
movsl
aad
jnp
push
jns
les
adc
sub
pop
push
mov
das
lcall
pop
sti
jecxz
cld
cmp
xor
loop
xor
jp
lock
nop
mov
out
sub
mov
gs
cli
ss
mov
pop
subb
movsb
ja
jmp
adc
or
fwait
in
adc
jp
push
lods
cltd
or
push
jne
inc
lret
popa
cmp
shlb
jb
pop
sub
scas
imul
lock
cmpsb
adc
sti
repz
fmull
mov
dec
mov
dec
mov
cvtps2pi
int3
xlat
sti
adc
setg
popa
inc
cmp
out
daa
inc
loope
mov
pop
addr16
xchg
movsb
adc
push
push
pusha
xchg
pop
and
test
out
fwait
negb
das
mov
in
pushf
cmpsl
and
fstl
scas
in
sarb
aaa
sahf
out
pop
jns
sbb
cmp
aaa
pop
inc
lods
mov
scas
add
adc
inc
adc
call
addb
sub
rorl
aam
mov
jno
jb
int
setl
iret
fwait
nop
push
xchg
mov
and
jmp
test
daa
mov
das
jmp
adc
inc
jnp
call
push
lret
imul
aam
iret
aad
stc
mov
push
xchg
es
or
mov
and
movsl
mov
mov
aam
sub
add
pop
inc
cwtl
push
loopne
push
mov
movsb
rcrl
cwtl
or
mov
jae
xchg
pop
dec
inc
in
xchg
loope
push
insl
jge
jge
outsl
je
rcrl
xchg
adc
jl
in
mov
enter
loop
iret
pushf
dec
dec
movsb
xchg
dec
es
out
xor
jecxz
push
sub
pop
jno
push
popf
xchg
shl
adc
pushl
and
in
fsubr
adc
lock
jbe
fsubrl
and
mov
into
int
nop
in
or
call
cmp
lods
out
mov
cmp
xchg
outsb
inc
mov
xor
mov
sub
lahf
fldenv
or
pop
int
mov
dec
sbb
xchg
xor
test
adc
xchg
in
mov
rcll
or
testb
andb
or
push
pop
xlat
dec
cmp
jmp
xchg
into
adc
add
xlat
fildl
popf
int
sbb
decb
or
test
ja
sbb
mov
push
clc
pop
dec
sub
xor
pop
imul
enter
daa
sub
aas
in
adc
dec
sub
loope
jno
xchg
jmp
add
xor
testb
xchg
rorb
push
fdivl
xchg
inc
ja
or
pusha
jle
shlb
add
out
jge
push
jno
dec
push
stos
addr16
mov
je
xorb
mov
ret
and
sahf
cmc
lock
push
loope
xchg
clc
rorb
test
loop
mov
sub
push
sbb
in
outsl
xchg
lds
add
pop
or
out
cmpsb
icebp
rcrl
ret
or
jecxz
pop
mov
jp
xchg
xchg
outsl
cmp
and
mov
jae
fbstp
add
sub
sti
and
mov
sbb
mov
fdiv
ljmp
ficoms
pushf
push
leave
cltd
repz
add
je
inc
cmp
xor
pop
jnp
dec
aam
jns
xchg
mov
mov
xor
pushl
clc
mov
mov
in
sub
inc
lcall
insl
inc
popa
mov
xchg
loop
ljmp
mov
adc
dec
js
enter
xor
out
ljmp
jne
lcall
mov
add
xchg
sub
pop
js
pop
or
shll
mov
jg
inc
dec
arpl
shlb
mov
decl
dec
cmc
repz
inc
addr16
imul
bound
lcall
call
jbe
pop
addr16
mov
push
xchg
adc
push
push
jl
or
pop
jbe
mov
or
scas
cli
dec
icebp
xchg
out
pop
xor
jno
ja
sub
in
xchg
sub
pop
int
cs
fcoml
cltd
mov
ljmp
cmpsb
push
es
cmpsl
and
push
ss
les
pop
fdiv
sub
dec
sub
or
dec
jne
stos
sarb
test
inc
ljmp
decl
adc
cmp
dec
in
dec
stc
int
add
mov
stc
mov
sbb
jnp
push
sbb
xchg
inc
xchg
pushf
out
and
nop
cli
cmpsl
aad
test
shll
xchg
std
and
pop
imul
je
dec
inc
cwtl
repnz
sub
clc
push
popf
ljmp
and
rcl
inc
jp
sbb
incl
leave
xchg
dec
mov
jo
mov
xor
hlt
xchg
shrl
or
xchg
mov
and
int3
cmp
jge
addr16
xchg
mull
je
js
ljmp
adc
pop
pop
scas
jnp
es
outsl
ljmp
jns
imul
ss
xchg
fistl
cltd
jl
sbb
loopne
fdivrs
imul
mov
push
sti
pop
aas
test
test
fwait
or
adc
das
cltd
and
fwait
fs
and
outsb
scas
dec
out
inc
mov
sbb
dec
cld
fidivl
insb
mov
stc
rclb
adc
iret
es
inc
movsb
jecxz
inc
jae
inc
mov
add
testl
cmp
cmp
xor
mov
adc
nop
push
scas
jg
mov
or
out
push
sbb
cmp
stos
jae
loopne
ljmp
out
cmpsb
push
cmpsb
outsb
pop
jp
arpl
add
orb
inc
outsl
jns
jg
out
fcomps
cld
jmp
jg
out
or
mov
or
mov
jae
es
ficomps
or
out
pushf
inc
inc
out
vcvttss2si
popf
in
movsl
int3
sbb
daa
fldcw
addr16
or
dec
sbb
push
aam
leave
dec
addr16
or
cli
test
cmp
loopne
es
jo
mov
movsl
jl
mov
adc
out
dec
xchg
pop
xor
ja
push
jmp
icebp
sarl
jecxz
xchg
das
mov
xchg
adc
mov
fldenv
mov
fsubs
mov
jb
mov
sub
mov
xchg
ss
or
scas
jge
adc
jns
insb
inc
push
mov
movsl
cmp
pop
pop
fldl
iret
loop
out
sbb
insb
push
and
sub
pop
aam
loopne
aas
daa
push
adcl
jb
scas
push
insb
aam
test
jae
or
subl
repnz
cltd
rcr
cltd
sbb
adc
cld
inc
push
cs
test
pop
push
rcll
adc
je
push
cli
adc
out
push
or
outsb
mov
out
enter
jecxz
dec
and
add
jmp
push
imul
jmp
in
lock
aad
or
in
cmp
and
leave
sub
xchg
sbb
test
jbe
ds
jecxz
lds
icebp
or
dec
stos
fisttpl
sarl
jge
leave
jmp
jecxz
sarl
mov
xor
popf
pop
lret
mov
scas
and
clc
mov
xor
mov
aad
mov
xor
inc
cmp
adc
hlt
scas
hlt
lret
dec
xlat
scas
lds
sti
xchg
nop
test
dec
adcb
mov
insl
ss
fninit
lea
sub
mov
mov
pop
stos
adc
bound
int3
iret
enter
push
loop
pop
dec
dec
push
or
pop
xchg
clc
test
ljmp
cmpsl
sub
fcmovnu
cmp
out
lods
popf
mov
add
dec
cmpb
xchg
adc
push
orl
cmp
mov
ja
fwait
fwait
aas
push
leave
in
or
xchg
push
pop
push
jo
test
mov
loopne
pushf
jecxz
into
inc
mov
xor
fwait
inc
push
pop
in
xor
stc
cmpsb
mul
incl
repz
int
mov
je
adc
in
push
xchg
lods
inc
push
scas
test
mov
push
cwtl
xchg
ret
ret
addb
xor
inc
cmpsb
mov
pop
loop
pop
xor
push
sbb
in
sbb
test
imulb
jae
and
subl
xchg
sbb
jns
pop
push
popa
mov
push
aad
lea
push
jg
ficomps
sti
dec
xchg
mov
inc
aad
xchg
nop
mov
mov
inc
adc
xchg
movsb
jp
fs
inc
loopne
xchg
scas
pop
pop
xchg
shll
imul
icebp
push
push
inc
js
enter
lret
mov
pop
xlat
or
in
xchg
dec
aam
and
mov
addr16
andb
repnz
shll
jbe
dec
mulb
cld
sub
shll
mov
aas
enter
lds
icebp
ficompl
test
pushf
aas
pop
dec
sub
dec
add
adc
push
fsubrl
pop
inc
xchg
sbb
push
loope
dec
pop
fnstenv
icebp
scas
je
aas
orb
push
pop
js
enter
cmpl
cmc
rorb
push
imulb
push
aad
aad
jbe
jne
and
or
rcrl
sub
in
loopne
das
fs
loop
mov
hlt
sbb
cmpsb
in
leave
fs
adc
fnstsw
sbb
fldenv
add
ror
dec
pop
cltd
in
jno
inc
dec
in
cmp
jno
roll
adc
cwtl
or
ljmp
mov
lea
iret
xchg
add
fs
leave
xchg
and
sbb
jp
ja
and
fcmovb
xor
dec
or
mov
dec
pusha
orl
ret
imul
jecxz
dec
mov
sbb
adcb
aaa
testb
pop
addr16
cltd
into
jbe
std
out
loope
cs
das
mov
inc
adc
hlt
gs
adc
and
push
mov
iret
lock
dec
fyl2xp1
cltd
sbb
ret
xor
jmp
sahf
mov
out
mov
movsl
or
stos
fs
dec
ret
loop
xlat
mov
add
adc
enter
mov
sti
shll
add
push
imul
inc
adc
pop
xchg
mov
mov
fndisi(8087
add
add
push
add
sbb
jg
lret
cli
xlat
pop
sbb
pop
bound
stc
sti
cmp
sbb
xchg
xor
subb
mov
inc
add
mov
jnp
pop
hlt
out
stc
inc
xor
movzwl
mov
sub
lock
rcrl
inc
mov
dec
dec
into
pop
fcomps
daa
insb
mov
or
roll
pop
inc
mov
loop
inc
inc
pushf
into
pop
inc
mov
add
xorl
lahf
scas
adcb
nop
out
mov
mov
push
jne
mov
xor
inc
push
xchg
and
into
imul
pop
popf
jae
inc
mov
jb
mov
mov
movsb
mov
aas
push
mov
cmp
and
mov
insb
mov
push
jecxz
add
jge
js
sahf
adc
mov
in
pop
inc
jle
xchg
movups
adc
aaa
test
jnp
out
fstp
pop
sbb
vorps
fildl
imul
xor
inc
mov
pop
push
rcl
xchg
loope,pt
jl
test
sbb
xchg
pop
ror
jne
mov
enter
inc
lods
and
mov
aam
dec
dec
pop
lret
sub
sub
fimuls
out
jb
push
in
lods
cmp
movsl
jbe
inc
push
jns
int
insb
jb
inc
mov
stc
push
cmp
xchg
inc
rorb
xchg
lock
loop
dec
pop
sub
repz
je
cmp
cmp
jg
mov
cmp
cs
cmp
mov
or
hlt
nop
lods
push
js
out
pop
cmp
inc
mov
mov
push
and
cmpsl
shrb
pop
into
pop
inc
adc
add
cs
cmp
loopne
popf
insb
jo
pusha
cs
insb
inc
or
mov
add
and
subb
lods
mov
js
sub
dec
movsb
jge
leave
shr
loop
or
jnp
lods
xorl
data16
scas
xchg
xor
jbe
les
pop
jge
mov
outsb
mov
adc
pop
push
in
mov
lods
mov
scas
pop
out
jl
das
jmp
pushf
addr16
inc
mov
packssdw
xor
aas
dec
xorl
imul
sbb
dec
leave
into
dec
jecxz
popf
jnp
push
and
ret
mov
mov
fmulp
jb
mov
das
mov
or
lea
mov
push
xor
mov
cmpsl
jns
xlat
jnp
ror
cmp
pop
lds
pop
movsl
popf
xchg
ja
decb
mov
insl
cld
or
dec
sarl
jg
cld
dec
cmp
mov
inc
js
aad
xor
xchg
arpl
push
movsl
shlb
xor
ja
ljmp
idiv
or
loop
je
popa
push
test
rol
adc
jmp
sub
ljmp
cwtl
sti
or
or
js
sbb
xchg
std
fwait
mov
jno
daa
es
fs
inc
andb
push
adc
sub
outsb
cmpsb
xorb
icebp
push
xor
js
mov
inc
aad
add
jae
or
fldt
sbb
and
scas
fstl
jl
or
jg
in
or
mov
mov
ss
jmp
lock
notl
cltd
sbb
sub
movl
adc
sbb
rolb
jmp
aaa
and
out
pop
lods
and
out
cmp
daa
in
repnz
xchg
dec
out
repnz
pop
pop
in
push
dec
fcompl
xor
lock
push
idiv
or
inc
cmpsl
xchg
sbb
xor
mov
add
out
enter
scas
cwtl
sarb
roll
leave
mov
out
jecxz
push
lods
add
jmp
xchg
divb
mov
fsubrs
iret
ja
ss
xchg
dec
adc
or
mov
in
jae
test
cmc
mov
jmp
ret
fidivl
in
rcrl
js
inc
rorb
sbb
inc
sarl
repz
dec
pop
or
arpl
rcr
inc
pop
stc
mov
rcrl
push
xor
scas
fsubrs
cli
jle
push
pop
mov
dec
xor
push
pop
jecxz
and
or
mov
in
sub
jmp
cmp
dec
and
stos
lds
fmull
daa
imul
push
or
mov
add
pushf
lret
loopne
mov
fs
mov
dec
sbb
insl
mov
mov
sbb
sub
insb
lahf
or
mov
aam
data16
cmp
push
popf
pop
sub
aas
pusha
mov
test
imul
cmpsl
mov
out
dec
add
ficompl
mov
pop
or
mov
push
cmp
fists
xchg
lds
cmp
jne
lret
ja
xchg
fists
movsl
xchg
or
jmp
clc
xor
mov
xor
mov
and
test
mov
xor
icebp
xchg
pop
addr16
mov
ret
push
xor
repnz
sbb
shll
fnstenv
das
pop
decl
mov
cmp
pop
rorl
insl
jae
mov
or
push
out
inc
jg
notl
and
push
mov
dec
lods
sbb
cld
cmpsb
push
or
stos
sarb
popa
mov
and
cmpsl
adc
fidivrl
adc
inc
repz
fdivs
pop
lahf
jne
mov
cmovno
mov
push
aam
lods
xchg
fcmovb
orl
and
clc
outsb
inc
inc
inc
xchg
daa
pop
es
xchg
pop
sub
aad
repnz
mov
jp
adc
jle
pushl
xchg
outsb
cli
xor
add
fistps
push
xor
jg
jne
mov
mov
movsb
jo
push
jp
in
arpl
push
out
maxps
enter
mov
xchg
pushf
jbe
push
clc
jno
add
int3
xchg
mov
js
ljmp
aam
ja
lcall
gs
push
test
jb
gs
pop
rsqrtps
mov
ljmp
inc
mov
ror
aaa
push
inc
sbb
adc
lret
mov
shlb
imul
xchg
and
test
pop
es
loope
add
mov
js
test
xor
cmpsl
push
mov
sbb
add
scas
fwait
sbbl
xchg
inc
xor
lahf
add
adc
imul
gs
mov
outsb
jo
sbb
jae
push
repz
ja
ljmp
popa
adc
jbe
cmpsb
and
stc
leave
sahf
jg
and
add
push
xchg
push
lahf
lds
pop
iret
mov
fiaddl
xor
icebp
test
in
ljmp
es
pop
xchg
push
scas
mov
out
inc
inc
jg
stc
aaa
mov
add
xchg
inc
mov
sub
scas
inc
rcrb
mov
and
mov
sti
adcl
insb
sbb
add
jns
rclb
movsb
dec
mov
ret
and
shrb
int3
adc
lret
sbb
inc
push
inc
add
call
cld
adc
jmp
stos
aaa
fsts
xchg
pop
outsb
mov
std
dec
sbb
xchg
std
and
mov
aaa
xor
cmp
aaa
lea
dec
fistpl
push
repnz
xchg
int
xchg
lods
push
insb
and
mov
lods
fistps
mov
xchg
and
sbb
addl
xchg
or
dec
dec
scas
mov
pushf
mov
lret
and
mov
dec
dec
mov
je
cmp
insl
jns
and
sahf
ds
ret
negb
xor
fs
pop
lret
fstpt
aam
sub
pop
jb
pop
mov
jbe
dec
movsl
out
aad
inc
imull
jnp
cvttps2pi
rcrb
les
cmp
cmpsb
aam
fists
mov
push
std
nop
jle
dec
or
in
outsb
lods
repz
xor
adc
int3
mov
mov
or
push
pop
icebp
xor
sarb
out
inc
lds
ret
in
xchg
rol
mov
mov
movsb
push
pop
movsb
sbb
aad
pop
inc
or
leave
movsl
movsb
push
popa
daa
out
aaa
aam
int3
out
lock
jmp
jecxz
stos
pop
js
push
lret
cld
rcrl
aad
aam
dec
sbb
loop
lret
sub
in
add
cmc
enter
mov
xchg
shr
test
cmpl
mov
fidivl
lods
stos
std
idivl
pop
add
data16
inc
subl
jns
sbb
ds
es
jg
les
daa
or
and
icebp
mov
cwtl
mov
xor
es
test
sti
jo
inc
cmp
add
pop
pop
sar
iret
push
movsb
xchg
dec
push
pop
mov
push
mov
xor
inc
xlat
shlb
pop
pushf
rol
pushf
push
xchg
xchg
out
push
inc
mov
and
and
sub
lcall
vdivsd
and
xchg
ds
fcomi
add
dec
add
test
pop
pop
addb
jno
adc
mov
xorb
popf
mov
xchg
adc
inc
ror
stos
dec
pop
dec
stos
ljmp
jbe
mov
jg
imul
je
cmp
test
popf
xchg
pop
shl
sub
xor
cmp
dec
sbb
jno,pt
movsl
jb
int
insl
aam
cld
cld
out
cli
fistpl
mov
fidivs
ja
das
pop
lock
cld
jp
jecxz
mov
mov
push
xchg
gs
and
or
xchg
aas
int3
fcomip
into
add
jle
ja
call
sub
or
adc
cmpsb
inc
inc
jmp
add
jle
push
es
test
xor
or
fiadds
testl
shr
xchg
xor
and
pusha
add
mov
jne
cwtl
pop
imul
xlat
cltd
aaa
dec
push
add
xor
mov
idivb
out
jg
pusha
dec
in
enter
lret
mov
sbb
jg
daa
dec
movl
dec
pop
cld
insb
mov
push
inc
xor
mov
pop
and
push
and
xor
jb
data16
movsb
xchg
adcb
test
and
sbb
mov
call
dec
xchg
sbb
push
inc
adc
sar
andl
cmp
push
mov
push
inc
push
stos
mov
push
rorb
ljmp
jnp
sub
int3
andl
mov
test
push
sub
or
inc
iret
inc
push
loopne
fidivrs
movsb
data16
cmpsb
cmp
cld
mov
xchg
clc
jle
fistps
cmc
aaa
movsb
xlat
push
stos
or
sahf
adc
cmp
stos
orl
pop
sub
cmpsl
fsubrs
test
cmpsl
ret
pushf
and
aaa
ret
out
sbbb
testb
xor
shrb
iret
sub
dec
xor
in
pop
push
jecxz
shrl
fimuls
fldt
sarb
aas
ja
xchg
pop
mov
call
in
imul
movsb
jb
ljmp
fidivrl
or
repnz
imulb
fwait
scas
ds
push
daa
inc
fwait
mov
dec
push
mov
out
xor
adc
hlt
inc
lods
addr16
mov
int3
sub
inc
idivb
movsl
push
sbb
mov
fwait
push
pop
mov
jo
jns
and
xor
movb
inc
cmpsl
daa
mov
cltd
hlt
mov
hlt
lods
pop
xor
fldenv
sbb
test
cltd
xor
jne
scas
call
mov
jle
lahf
xlat
sbb
mov
adc
mov
out
imul
scas
adc
call
xchg
jb
aas
pop
inc
in
xor
inc
sar
out
popa
sbb
sub
sbbl
daa
push
repnz
xlat
dec
stos
icebp
imull
loop
insl
jg
dec
aad
lahf
mov
inc
inc
leave
push
adc
lahf
in
out
and
repz
lock
and
add
xor
sub
lock
and
dec
jnp
inc
inc
inc
or
dec
and
negb
addr16
adcl
ds
mov
jecxz
scas
jnp
iret
sbb
rcrb
sub
mov
dec
xchg
mov
nop
ficomps
ss
sbb
mov
jmp
mov
cmp
jmp
push
gs
enter
je
aam
mov
mov
xchg
insb
mov
mov
xor
mov
sub
sbb
insb
xor
mov
out
lods
cmp
repz
add
mov
mov
lds
call
mov
push
xchg
outsb
push
adc
insb
add
mov
scas
push
mov
dec
movsl
cli
popf
sbb
pushf
mov
jecxz
mov
fists
sbb
adc
ret
test
push
sub
mov
jbe
test
push
mov
fnstcw
mov
push
pop
iret
lods
cmpsb
push
sahf
aaa
mov
rolb
dec
mov
outsl
fst
mov
sub
ficoms
dec
es
rcrb
add
popa
cld
pop
adc
jo
lods
sti
jmp
sub
cmpb
and
jne
cmp
lret
add
bnd
push
and
jl
xchg
bnd
iretw
push
aam
jge
mov
punpcklwd
int3
fistl
int3
bound
xor
out
lods
adcb
xchg
mov
out
pushf
cltd
push
or
smsw
popa
fcmovb
lret
cmp
mov
and
dec
sbb
or
js
push
call
cltd
jle
inc
insl
pushf
pop
xchg
std
and
jno
rcll
outsl
lods
xor
lods
mov
insb
test
fcomps
test
clc
popf
bound
and
stos
div
in
loopne
push
std
ret
jg
add
or
sub
clc
je
mov
out
inc
push
inc
push
mov
jl
sahf
stos
das
cmp
loop
aas
leave
add
insl
inc
cmp
fwait
cmp
in
cmp
fstl
scas
dec
xor
cmp
cltd
push
lret
out
lcall
fs
sbb
xor
push
imul
jnp
dec
orl
push
jp
popl
lds
out
inc
sahf
hlt
loope
sbb
jae
in
faddl
push
lret
sbb
and
push
jmp
sbbb
xchg
mov
clc
jmp
sbb
lahf
ret
ljmp
outsl
and
and
movsl
mov
xchg
or
inc
jmp
xlat
hlt
aaa
insb
xchg
push
sarb
xchg
daa
cmpsl
fstl
jmp
adc
dec
jmp
xchg
xor
cld
push
sbb
cmp
add
mov
imulb
cmp
adc
popf
fldt
movsb
or
add
adc
in
and
addr16
test
push
fwait
xchg
xchg
push
mov
add
ficomps
jmp
scas
adc
out
cmp
xor
enter
xor
arpl
inc
jg
add
cmpsl
cmp
test
xor
cmc
js
dec
mov
and
mov
data16
push
mov
sbb
jge
or
out
xchg
outsl
jp
pop
add
jne
adc
xchg
add
xchg
add
adc
std
push
aaa
lret
sbb
push
push
jo
sarl
dec
outsb
lock
lock
mov
ficoml
incl
cmc
loope
mov
fisttpll
movsb
push
imul
outsb
push
sub
inc
stc
inc
pusha
ds
adc
out
or
lahf
pop
pop
aas
xor
orl
xchg
pop
mov
push
inc
int3
out
loopne
testb
xchg
or
fwait
stos
mov
pusha
pop
in
and
xlat
cmc
aaa
sbb
push
imul
and
imul
adc
pop
notb
mov
test
enter
add
out
ss
nop
xorl
push
xor
dec
or
xchg
pop
and
lea
push
test
mov
sub
pop
idiv
mov
ficompl
jnp
and
sub
jbe
push
jae
cmp
mov
cltd
int
mov
dec
push
fldcw
add
enter
int
inc
push
push
jae
jp,pt
in
inc
das
rorb
call
and
in
xchg
loopne
rorl
arpl
push
mov
vpsubw
call
fldt
xor
mov
or
test
arpl
js
and
sub
jae
push
push
or
sbb
pop
and
sbb
xor
push
test
inc
cwtl
or
iret
cmp
es
lret
stos
inc
daa
push
mov
sbb
pop
clc
pop
rol
mov
clc
pop
in
fwait
std
lds
add
mov
inc
inc
sub
pop
inc
dec
imul
dec
in
xor
sbb
push
inc
or
shrb
call
cmpsb
sahf
cli
mov
imul
mov
adc
ret
cmc
repnz
mov
or
mov
mov
mov
and
sbb
dec
add
xlat
sub
out
loopne
and
jmp
push
sub
pusha
sub
fsub
jge
fs
mov
aad
rcrb
cmp
movsl
leave
mov
push
mov
mov
push
aaa
orb
hlt
ss
fsubs
popa
cmp
out
or
jl
or
mov
adc
js
pop
popa
adc
bound
subl
rolb
pop
mov
jg
pusha
out
mov
decl
push
stos
lret
mov
sub
rorl
mov
popf
nop
out
sub
cmpsb
sti
std
dec
mov
subb
in
fsubrl
xchg
jne
out
lods
stos
sub
pop
test
cs
cwtl
adc
push
pop
dec
in
mov
or
sub
jmp
pop
pop
inc
aad
cmove
and
sbb
out
adc
mov
inc
sbb
inc
into
mov
aas
jmp
mov
mov
imul
aam
and
or
add
adc
ss
mov
push
mov
pop
add
xor
test
pop
xor
pop
out
adc
and
repz
testl
push
adc
inc
sub
bound
gs
pushf
xor
das
mov
fxtract
jbe
inc
call
add
cmp
movsb
dec
in
sub
sbb
inc
xchg
jns
and
xchg
ror
scas
dec
test
add
sbbb
jle
mov
movsl
arpl
inc
dec
pop
or
ffreep
fistpl
jge
inc
mov
int3
les
jo
les
jb
pop
int3
cli
call
sti
arpl
push
pop
les
aam
test
iret
popf
jl
into
stc
or
lcall
rorl
cmp
sub
mov
dec
cmpb
inc
cmpb
lock
daa
jecxz
xchg
jo
fisttpl
test
dec
imul
sarl
mov
push
and
push
adc
into
loope
jp
push
movsb
xchg
jmp
in
lods
xor
hlt
xchg
add
inc
rclb
mov
sbb
jno
rcrl
lods
cmpsb
repnz
xor
or
xor
lds
push
lods
in
dec
filds
pop
test
adc
mov
xchg
into
xor
inc
cmpsl
xor
add
dec
in
jecxz
xchg
lds
cmp
dec
shrl
cmp
aam
cmc
pop
int
jle
xchg
dec
clc
push
inc
xchg
pop
call
pop
adc
mov
mov
scas
mov
dec
push
sti
movsl
sti
jb
mov
cmp
cmp
movsl
inc
dec
mov
iret
shll
xlat
inc
sub
popa
rcrb
jg
adc
mov
xor
mov
mov
es
sub
mov
fnstenv
jp
add
and
mov
movsb
sbb
sbb
mov
adc
xchg
sub
xchg
addr16
adcl
sbb
or
mov
and
in
aad
mov
lahf
enter
mov
mov
xchg
gs
xchg
repz
xchg
cmpsb
enter
loopne
lock
inc
dec
xor
movsb
push
adc
pop
inc
jg
lods
and
push
mov
xlat
jns
mov
dec
xlat
addl
imul
xchg
sub
sub
adc
pop
dec
inc
pop
loope
push
cvtps2pd
iret
stos
mov
push
adc
push
jb
xchg
pop
popf
test
cmpsl
or
sub
xor
ljmp
testb
lock
dec
mov
sub
mov
insb
sub
icebp
mov
xor
ss
or
sbb
or
repz
dec
lea
hlt
push
pop
or
dec
popf
lret
std
push
cmp
cmp
ret
dec
iret
mov
push
shll
lea
sbb
or
or
push
xor
shlb
xor
jnp
push
sbb
or
into
stos
sub
cli
sti
jo
or
pop
inc
jp
es
lret
push
pop
mov
inc
call
shrl
jns
sahf
sub
cmp
daa
push
inc
adc
dec
in
je
daa
sbb
and
cli
gs
dec
mov
test
popa
pop
or
stc
fisttpll
stos
fs
jge
aaa
test
sbbb
loop
icebp
cmp
cmp
xor
and
inc
add
negb
xor
aas
cli
adc
jmp
mov
scas
sbb
sub
in
mov
out
cmpsl
arpl
mov
mov
lods
inc
or
cli
cmpsl
cmp
insb
adc
pushf
mov
dec
mov
test
lcall
xchg
xor
insb
xchg
lds
xchg
stos
xchg
nop
jae
jp
xor
iret
pop
mov
loope
out
in
bound
push
pushf
cmp
fldcw
cld
jg
xor
add
cli
jl
and
enter
jb
insl
scas
push
adc
dec
xchg
fildll
cmpsb
fs
insl
lea
mov
lcall
inc
je
lds
nopl
xchg
sub
shlb
mov
adcl
outsb
sbb
stos
adc
inc
shrl
jno
aam
cmc
fiaddl
lods
cmpsb
or
push
jle
pop
fdivrl
mov
mov
mov
addr16
lahf
sub
or
sarl
aam
fwait
jns
fsub
cmp
xor
inc
xchg
sbb
shrl
mov
adc
adc
mov
sbbb
dec
push
push
lcall
mov
call
xchg
and
fs
pop
pop
lcall
jecxz
aad
out
enter
testb
addr16
mov
mov
mov
dec
mov
es
mov
add
fbstp
cmp
pop
cmp
int
icebp
xor
sbb
movsb
lret
jmp
add
push
push
mov
add
data16
imul
mov
out
pop
mov
popf
mov
xchg
push
in
mov
pop
mov
lea
fidivs
dec
jp
into
dec
fcmovnbe
ret
jno
cmpsl
add
xchg
xchg
test
mov
and
mov
xlat
rol
mov
fstl
and
push
ror
bound
fs
enter
cmp
js
or
cmc
mov
test
ja
fdivs
out
aaa
mov
sbb
popa
in
hlt
mov
shl
test
jmp
pop
xchg
add
or
hlt
lods
xchg
je
int
mov
xor
loope
pushl
dec
sub
mov
dec
jmp
sysret
movsl
xor
bound
xlat
leave
std
fnstsw
jno
xchg
jns
mov
fcmovnb
pop
imul
jl
adc
or
push
cmp
movsl
or
sti
push
or
xlat
adc
mov
push
cmp
sbb
ljmp
inc
inc
lock
or
push
mov
rcrl
push
in
xchg
dec
jge
movsb
mov
notl
dec
inc
cwtl
imul
ljmp
out
ds
mov
push
ljmp
pop
je
adc
pusha
inc
dec
mov
xchg
fwait
push
insb
pop
and
stc
pop
jmp
setge
pop
hlt
jmp
or
pop
insb
jmp
jmp
cmpsl
js
add
rolb
xchg
imul
ja
cmp
and
mov
xchg
repz
dec
or
je
inc
xor
inc
insb
xchg
dec
sub
aad
pop
out
iret
incb
ficoms
into
movsl
test
ss
aam
or
aaa
add
inc
xor
mov
test
push
addr16
rol
mov
adcb
adc
xor
dec
iret
sbb
xor
popf
loopne
popa
add
cmpsb
cmpsl
stos
bound
iret
sbb
ja
add
add
pop
pushf
and
inc
mov
dec
or
or
mov
es
popa
addr16
popfw
dec
cmpsl
in
adc
lcall
or
test
fsub
xor
adc
scas
les
and
cmc
push
and
adc
fistpl
out
mov
sub
xorl
jns
dec
xor
or
test
in
enter
push
push
pmulhuw
inc
call
scas
mov
push
push
js
sub
cltd
aad
aad
mov
popf
test
xchg
push
jecxz
iret
shr
fstpl
xor
dec
jb
adc
jmp
outsb
cmc
ret
fsubp
and
test
lret
mov
sub
and
mov
push
mov
jmp
ret
sbb
sahf
jb
push
loopne
and
cltd
sahf
fnstcw
dec
jo
lods
xor
add
add
xlat
xor
pop
mov
pop
push
and
sbb
jns
les
mov
xchg
add
fadds
nop
ja
mov
popa
xchg
test
cmpsb
push
test
leave
push
mov
fistps
int3
hlt
stos
dec
jns
sub
or
and
push
jecxz
mov
es
adc
mov
leave
xor
xchg
sbb
je
cmpsb
ret
add
jnp
sarb
icebp
inc
push
rcll
mov
xor
nop
shll
adc
test
out
aas
pop
loope
repz
je
lods
in
jne
add
cmp
xchg
push
cli
pop
hlt
push
jg
test
cltd
movb
xchg
gs
mov
sarb
jae
cmpsl
pusha
xorb
push
gs
jb
and
xor
or
xlat
pop
sub
loope
aas
mov
mov
ficompl
cmp
dec
aad
cmpsb
mov
pop
mov
mov
sbb
das
scas
stos
sub
lods
mov
loop
push
enter
pop
and
xor
jo
and
imul
inc
push
test
sub
ljmp
lods
pusha
ret
adc
int
in
leave
popa
inc
or
pop
sbb
xor
aam
adc
push
orb
out
ljmp
imul
call
out
hlt
lods
sbb
mov
cmp
adc
inc
xor
movsl
cmp
mov
jmp
jae
aam
fiaddl
pushf
addr16
fcomp
stc
out
mov
push
ja
movsl
into
sub
inc
in
sti
dec
adc
jno
icebp
adc
dec
xchg
xor
pop
push
inc
jbe
sti
popa
stos
fisttpll
push
dec
adc
movsb
scas
sbb
and
or
lock
xchg
pop
jg
push
inc
lret
xor
add
xor
sbb
xlat
pop
push
xchg
in
jp
pop
ljmp
mov
mov
push
jl
out
push
jmp
jne
dec
push
sbb
jae
mov
cltd
sbb
stc
imul
add
xor
and
dec
sub
das
mov
add
and
addb
pop
ret
aam
dec
enter
xchg
or
ljmpw
push
mov
sub
lahf
xchg
js
popf
xchg
mov
hlt
pop
enter
shlb
scas
cltd
stos
xor
fadd
lods
push
mov
push
lods
addr16
mov
jl
or
jo
sbb
cmc
test
lret
roll
mov
lds
jecxz
bound
ret
pusha
push
pop
sbb
add
jb
and
cmc
dec
lret
jecxz
daa
mov
and
cmp
repnz
popf
popa
rcr
push
xor
dec
lahf
or
xorb
call
in
and
mov
or
arpl
jo
mov
inc
push
push
inc
mov
pop
int
leave
outsb
lds
jp
jb
fsubrl
mov
inc
stos
cmpsl
jl
rcll
mov
js
mov
leave
arpl
push
loopne
rcrb
fidivrs
bound
push
xchg
rorb
pop
and
dec
pop
ficoms
push
mov
mov
notb
subb
dec
mov
sub
jbe
ret
inc
test
daa
sub
rclb
push
push
and
xor
jns
xchg
into
push
adc
pop
jp
jmp
xchg
push
fcmovu
add
sub
mov
xor
jnp
pop
mov
cmpsl
lods
cmp
mov
daa
and
inc
xor
je
push
stos
mov
dec
fldcw
cli
insb
pop
js
push
add
mov
jge
jo
add
orl
push
inc
je
xchg
lret
bound
fstpt
ret
xlat
xchg
pop
pushf
or
sbb
aaa
stos
pop
jno
xor
xchg
mov
shll
sub
add
and
or
es
cwtl
dec
push
push
outsb
inc
inc
in
stos
xor
out
add
fcmovnbe
or
clc
js
sub
add
sub
cmp
lods
and
cld
int3
js
sub
mov
mov
and
jl
popa
dec
lds
repz
mov
pop
fsub
cmp
sub
mov
scas
cwtl
pop
add
mov
and
inc
nop
lods
and
sti
hlt
pushf
xchg
js
inc
out
leave
or
in
push
mov
std
in
ja
loope
xchg
addr16
addr16
mov
xchg
sub
mov
cld
add
lahf
sbb
inc
mov
dec
and
into
enter
es
lcall
arpl
bound
xor
sbb
push
cmp
test
scas
mov
mov
icebp
lock
cmp
or
out
stos
lods
dec
in
dec
outsl
mov
in
in
cmp
mov
mov
or
jmp
in
mov
psllq
out
pop
popa
mov
jl
bound
std
data16
aaa
lock
sbb
stc
jbe
cmp
lods
ret
and
test
cmp
rclb
cmc
sbb
lahf
pop
nop
xchg
inc
call
jns
sub
mov
decb
testl
cltd
cs
xor
test
sarl
jge
sbb
js
in
adc
xor
mov
sub
xor
cmp
xor
loopne
cmc
inc
flds
inc
pop
jns
dec
push
hlt
aam
mov
cmp
test
or
dec
add
test
movsl
cmp
add
clc
or
mov
mov
xchg
sahf
enter
jno
sahf
shll
cld
pop
in
inc
enter
fcmovnb
in
mov
mov
pop
xchg
inc
mov
jg
adc
jo,pn
lret
and
les
fdivr
vmread
pop
jnp
in
adc
mov
fcomip
jg
ds
sub
ds
int3
or
stos
ss
popa
dec
xchg
aaa
or
fmull
pushf
push
mov
and
mov
fldt
scas
jle
mov
negb
out
int
ret
stos
out
pop
call
popf
xchg
xor
xor
xor
orb
mov
dec
outsl
and
add
sbb
sahf
sahf
xchg
ficomps
mov
jg
les
popa
shrl
jge
inc
fs
sub
mov
xchg
or
rolb
adc
js
dec
addr16
xor
inc
mov
sti
js
sbb
adc
push
and
mov
add
movsl
jns
or
pusha
mov
mov
cmc
icebp
push
inc
sbb
das
outsl
inc
data16
aaa
out
xchg
sbb
sub
ss
mov
cmp
mov
mov
mov
xor
push
nop
incb
shrb
mov
sbb
jmp
cwtl
fbstp
inc
push
pop
pop
ret
push
pop
pop
in
andb
mov
xchg
mov
aam
insb
imul
mov
xchg
dec
idivb
inc
test
sti
cltd
xchg
rorl
hlt
push
jnp
mov
mov
jp
lods
jo
mov
mov
aaa
js
mov
test
lea
ja
mov
jecxz
xchg
cmp
xlat
cli
icebp
add
mov
mov
cltd
lods
or
fwait
insb
pcmpeqb
dec
xor
into
inc
insb
and
dec
sbb
cwtl
xor
dec
pop
xchg
dec
lock
addl
scas
orb
sbb
sti
xor
test
movsl
and
pushf
adc
nop
sahf
add
out
test
mov
ja
xchg
dec
shr
and
add
mov
mov
mov
iret
adc
cmpsl
lea
test
push
insb
and
dec
add
sahf
iret
push
add
sub
inc
out
int
cmp
fwait
mov
xchg
pop
pusha
sub
dec
mov
adc
test
add
scas
icebp
pop
mov
rclb
push
test
fxch
cmp
stos
push
adc
jle
pop
sbb
fwait
inc
add
and
in
loope
xchg
jp
pop
cmpsl
fdivr
adcb
movsb
in
sbb
dec
arpl
rorb
insb
outsb
adcl
pop
mov
or
jle
cs
pop
ljmp
jg
scas
lcall
lcall
jno
sub
inc
fwait
aad
jne
cmpsl
inc
mov
mov
arpl
jecxz
dec
pop
mov
test
sub
insl
fstps
in
sbb
call
xchg
dec
je
fdecstp
mov
mov
mov
je
pop
mov
ret
and
scas
int
mov
cmc
push
jno
jns
mov
mov
fmuls
in
fbld
add
mov
stos
popa
push
xor
push
in
lcall
out
pop
sbb
jae
lcall
aad
dec
enter
pop
pop
jnp
dec
sarl
das
ficompl
sbb
mov
ja
mov
adc
mov
sti
out
cmp
loope
call
aas
loopne
fdivl
out
lods
out
movsb
pop
xchg
add
leave
mov
ret
add
sbb
dec
out
test
push
sbb
in
addb
gs
sbb
push
jp
stos
aas
jae
sbb
aam
iret
vpsubw
sarl
mov
add
dec
lods
cmp
nop
sub
or
sbb
out
sbb
add
add
jne
imul
lods
shll
xor
sub
divl
std
sbb
adc
inc
add
xor
je
hlt
sbb
out
es
clc
lock
mov
mov
fsubrs
mov
sbbb
jmp
pop
cli
iret
dec
addr16
inc
adc
and
mov
movsb
push
cmpsb
outsb
lea
in
sti
pop
fsts
sub
xchg
loop
and
pop
fistpll
jne
aad
dec
outsl
push
dec
and
sub
stos
dec
sar
cmc
push
mov
mov
decl
adc
xchg
dec
stos
cmp
in
pusha
movsl
push
ss
and
nop
shl
pop
in
mov
sahf
sbb
pop
loop
inc
fcoml
pop
or
cwtl
popa
roll
aas
or
cmpb
test
push
push
pop
mov
pop
cmp
je
sarb
jge
test
inc
subl
jg
bound
pop
aas
into
or
mov
cmp
mov
mov
mov
mov
jmp
in
pusha
xchg
jge
test
fsts
push
movsb
int
mov
shlb
test
xor
jmp
scas
movsb
dec
jo
mov
lret
push
push
jecxz
lahf
jg
imul
mov
cs
mov
fld
ret
mov
jecxz
sbb
mov
mov
mov
add
imul
shrl
cmp
or
and
mov
cli
pop
lock
jnp
xor
shlb
int3
mov
mov
test
mov
xchg
push
outsb
ds
scas
fwait
mov
sarb
dec
mov
jne
insl
cmpsb
inc
hlt
out
popw
aas
pop
es
rorb
sbb
popf
mov
loope
inc
xchg
inc
pop
lcall
xchg
dec
divb
sbb
pop
test
iret
icebp
sub
push
cmc
push
addr16
imul
icebp
jl
push
out
xor
dec
adc
repnz
loopne
int
stos
aaa
dec
mov
lea
imul
mov
push
add
xchg
inc
outsl
sbb
or
pop
in
xor
leave
jno
or
xor
sbb
xor
mov
stos
mov
insl
mov
pop
cmp
mov
out
stc
mov
push
cmp
pop
lods
shll
dec
repz
loopne
repz
movsl
int3
and
test
ja
repz
inc
ss
jne
leave
lret
es
test
inc
adc
lods
dec
mov
test
sub
and
pop
insb
sahf
xchg
aas
ja
mov
loopne
ja
dec
lds
sub
jno
and
jne
jl
fnstcw
insb
cmc
test
jae
fnstenv
cmpsl
or
and
sbb
pushf
rcrb
scas
stos
lods
movsb
sub
mov
jb
mov
fcmovne
push
insl
outsb
aas
fcompl
pop
cmpl
sub
xlat
mov
mov
mov
shr
pop
xor
pop
mov
fstl
cld
pop
add
xchg
js
mov
imul
jnp
mov
dec
clc
cmpsl
rcr
fwait
mov
mov
je
jge
aas
inc
icebp
pop
jb
clc
mov
das
cmp
sbb
addr16
sahf
std
jnp
mov
aad
leave
leave
push
mov
sub
xor
pop
es
cmpb
out
pop
sarb
cmp
mov
sub
fisubrs
xchg
stc
mov
pop
frstor
cwtl
lret
xchg
xor
test
add
xchg
lods
push
push
mov
or
xchg
push
jbe
sub
sbb
outsb
test
mov
sub
xlat
adc
adc
push
and
inc
dec
ljmp
or
js
popa
xchg
mov
inc
pop
pop
sbb
and
jecxz
cmp
fwait
aas
mov
xor
inc
lods
pop
mov
xor
ret
xlat
push
das
test
inc
repnz
fstpt
loop,pn
filds
lock
jecxz
jg
xor
negb
pusha
lret
pop
adc
xchg
sub
pop
cmpsb
pop
fdecstp
inc
mov
dec
fisttps
push
mov
in
mov
cmpsl
pushf
xchg
inc
clc
repz
cmp
jbe
lret
cmp
mov
aaa
mov
pushf
sub
sbb
scas
xor
sbb
les
int3
in
outsl
addr16
add
mov
lcall
jae
rolb
scas
pop
lea
jne
mov
cmpsb
ds
insb
xor
sbb
and
sbb
or
sub
jecxz
fidivrl
iret
inc
aam
sub
cmpsl
push
dec
jae
std
in
les
lea
in
addr16
jl
add
jbe
sub
sarb
xchg
inc
push
pushf
mov
sbb
pop
xchg
js
lds
aaa
test
sub
lret
mov
push
inc
sub
scas
xchg
pop
and
mov
or
pushf
pop
mov
mov
clc
aas
adc
mov
mov
xchg
enter
xor
fidivrl
in
leave
mov
xchg
mov
ljmp
pusha
in
sar
ss
xchg
mov
xor
push
jmp
jg
mov
fnstenv
adc
mov
cmp
lret
icebp
je
push
sbb
cmp
sub
dec
cli
sub
cmp
into
mov
xor
dec
mov
in
and
inc
aad
sbb
sub
movsl
jl
and
sub
mov
pushf
pop
cmp
nop
stos
xor
sbb
divb
dec
pop
pop
xchg
stc
mov
loope
adc
ret
je
mov
mov
xchg
jne
jl
imul
lods
daa
sub
pop
in
fstps
aam
test
clc
enter
xor
lock
dec
out
data16
mov
test
jbe
clc
jno
cwtl
mov
mov
mov
push
lret
outsl
jp
push
sub
add
test
ja
mov
fnstenv
cli
mov
cs
mov
or
lods
jg
lods
loopne
into
mov
jb
mov
xor
fisttpl
sbb
mov
andl
mov
xchg
dec
std
iret
dec
jl
inc
pop
add
lea
push
inc
insb
cld
inc
or
icebp
adc
sub
repnz
mov
mov
outsb
mov
jno
add
ret
out
mov
dec
lahf
jecxz
mov
daa
arpl
stc
aam
jmp
push
sub
hlt
or
cmp
aaa
movsb
jno
add
pop
js
ret
in
sub
rolb
xor
inc
pop
cmp
mov
push
xor
pop
pop
adc
fmul
imul
repnz
cwtl
lods
int
xchg
mov
push
sbb
insb
lds
add
mov
mov
sbb
sub
add
inc
insl
nop
sbb
dec
or
push
and
hlt
push
lret
cmpsl
arpl
jp
addr16
push
nop
test
sahf
clc
add
mov
dec
in
push
mov
sarb
je
jecxz
shrb
push
pop
fstps
daa
pop
mov
push
outsb
add
movsb
lds
push
rep
and
inc
xchg
pop
cmp
enter
mov
int
sbb
rcl
push
and
or
dec
pop
insb
and
cmp
xchg
incl
ja
push
and
lds
daa
fwait
jnp
mov
dec
adc
test
push
daa
push
rcrb
in
bound
out
xor
shr
sti
outsb
loope
mov
cs
inc
dec
push
and
jg
dec
sbb
loopne
imul
or
mov
loop
cli
in
and
mov
cmc
cmp
inc
hlt
add
cmp
push
sub
sbb
and
pop
mov
cmp
inc
enter
popl
sbb
sub
insl
mov
xor
bnd
push
movsl
push
in
loop
mov
xor
ja
pop
adc
subb
aad
push
and
cwtl
fsubrl
arpl
and
xor
add
xor
adc
mov
sbb
pop
fildl
pop
jp
fidivrs
dec
iret
pop
out
cli
ja
or
jl
or
inc
xor
ljmp
into
xor
hlt
mov
mov
jno
testl
or
arpl
popl
jle
sub
cmp
pop
lahf
push
sub
icebp
fistl
xchg
lods
icebp
push
lods
jae
pop
cmp
inc
popf
fs
cmp
test
mov
sbb
xor
lods
and
les
cmpsl
sbb
test
cmpsb
clc
jae
fcomps
cmpsb
sbb
cmp
mov
or
sbb
xchg
inc
iret
loopne
jl
or
xor
mov
lret
insb
shll
stos
push
xor
dec
test
push
inc
rcl
mov
push
jo
cltd
das
lock
adc
mov
jecxz
inc
out
lods
push
pop
sub
jle
ds
lea
cmc
inc
jbe
leave
adc
push
aaa
xchg
ret
adc
lods
lea
cld
mov
cmc
ret
loop
loopne
mov
mov
adc
gs
mov
inc
cmpsb
inc
cmp
xlat
das
cmpl
or
stos
out
std
inc
or
pop
mov
push
inc
fnsave
pop
sbb
or
jp
bswap
outsb
aad
out
psllw
xchg
addr16
jmp
xor
jae
jl
inc
pop
stc
mov
shrl
fistpll
sahf
pop
stc
ret
mov
mov
nop
lret
xchg
sti
movsb
mov
mov
dec
enter
inc
and
loope
stos
cli
enter
maskmovq
testl
rclb
fsubl
jle
test
aad
sub
dec
jmp
lds
push
aad
shrb
adc
pop
in
pop
popa
gs
push
xchg
inc
xchg
out
mov
cmp
mov
scas
cltd
addb
xchg
incl
dec
mov
das
sub
aaa
hlt
clc
and
sub
dec
adc
mov
pushf
movsl
mov
aam
nop
dec
outsl
popa
jns
sahf
lahf
add
jb
mov
pop
push
shl
xchg
push
shll
push
or
lret
jmp
mov
rcrl
xchg
nop
hlt
mov
loop
test
out
xor
push
jno
stos
test
mov
pusha
les
pop
xlat
sub
inc
adc
loop
call
cmpsl
pop
jecxz
add
sub
and
mov
int3
mov
xchg
pop
ljmp
adc
iret
fs
inc
pop
push
ds
adc
loope
in
cmp
sub
inc
cmp
je
xor
sbb
imul
cmc
inc
shl
jbe
push
sbb
xchg
pushf
sbb
lds
rcll
mov
shll
mov
iret
and
ljmp
imul
push
jae
movsb
jbe
sti
dec
cmp
sub
jo
in
sbb
xchg
mov
jne
lock
outsb
mov
push
xor
orl
arpl
cmp
or
ds
fs
and
adc
sti
or
mov
aam
xlat
imul
clc
push
lock
cmp
negl
icebp
ret
cli
imul
jl
xor
push
imulb
jb
inc
xchg
xchg
ds
dec
ret
or
dec
out
sub
sub
das
pop
push
xchg
lock
add
iret
mov
add
mov
dec
xor
enter
mov
jo
lret
and
repnz
xchg
dec
rcrl
fmuls
jle
add
js
mov
sbb
test
xchg
xlat
mov
push
dec
adc
pop
lahf
cmc
fwait
adc
ficomps
rcrb
int3
and
sti
ret
outsl
cmp
jecxz
lahf
dec
pusha
and
mov
in
daa
jns
jb
cmp
stos
js
xchg
cmp
xor
xor
push
add
sub
push
jp
cltd
sub
add
in
ds
std
jmp
fwait
mov
sbb
xchg
jg
xor
jle
not
scas
lock
pop
and
jno
enter
mov
inc
in
add
dec
jns
jnp
mov
jbe
ljmp
imulb
and
xchg
inc
nop
fistps
aad
jle
cmc
lods
sbbl
cwtl
clc
je
call
push
push
cld
push
xlat
test
xor
enter
and
sub
std
mov
fists
xchg
cmp
insl
dec
xlat
and
sti
mov
ja
jmp
test
dec
inc
adc
loope
nop
adc
xor
popa
out
dec
cmpsl
sbbb
cld
outsb
das
adc
jecxz
rcll
cld
dec
outsb
mov
imul
mov
inc
nop
xchg
movl
sbb
jle
cld
push
inc
lock
mov
cmp
or
outsl
cmp
pop
stc
ds
dec
xchg
xchg
shrl
pop
push
dec
push
out
movsl
sarb
sub
mov
test
inc
bound
dec
adc
and
cwtl
pop
sbb
mov
and
cwtl
movsl
push
jne
mov
cmp
sub
in
xor
mov
js
or
dec
inc
dec
mov
test
and
call
xor
or
mov
inc
imul
xor
xchg
js
jo
in
xchg
lea
jmp
cwtl
push
xor
imul
in
or
divb
movsb
sub
lahf
insb
leave
mov
out
movsl
lea
jge
lahf
mov
cmpsb
mov
cli
sub
mov
mov
not
push
icebp
es
scas
xchg
les
or
imul
daa
push
cmpb
mov
sti
lods
jne
mov
cmpl
sbb
inc
icebp
mov
outsl
inc
outsb
imul
fwait
gs
loope
jo
arpl
and
icebp
mov
push
lret
mov
lea
bound
push
pop
pop
xlat
movsb
fisubl
mov
testw
push
and
push
push
sub
push
mov
mov
push
cmp
enter
sub
lods
popf
nop
add
jg
inc
dec
xor
lock
xor
mov
push
icebp
das
mov
nop
jmp
popa
repnz
ss
jg
pop
fs
and
subb
fs
add
inc
in
xor
push
sarl
es
cmpl
push
ljmp
dec
pushf
xchg
icebp
xor
cmp
mov
pop
fistps
dec
jecxz
leave
add
cmp
data16
shl
sbbl
in
dec
negb
fsubs
shll
add
add
aas
or
ss
mov
mov
scas
push
cmpsl
xchg
xlat
add
fiadds
std
enter
movsl
pop
lds
bound
dec
and
movsb
sbb
xchg
in
xchg
out
fndisi(8087
jg
mov
pop
inc
cld
jnp
mov
call
lret
jp
xchg
js
aad
cs
push
mov
lret
dec
mov
adc
jae
pop
ljmp
pop
jecxz
inc
pop
and
or
enter
and
pop
xor
pop
iret
or
addr16
pusha
mov
push
xchg
cmp
lods
xchg
cmp
pop
stos
dec
fisubrl
sub
fnstenv
jl
push
mov
sub
adc
pop
or
adc
mov
incb
jae
sbb
push
sub
xchg
pop
arpl
xlat
jge
pop
xor
sbb
fdivrl
sub
mov
push
arpl
out
pop
int
aam
ss
add
push
arpl
pop
sbb
rcll
mov
inc
aaa
vmovd
jge
or
xor
aam
inc
nop
leave
es
mov
outsl
cli
mov
les
in
sub
add
iret
in
lret
sbb
dec
ljmp
xchg
and
xchg
lcall
fwait
addb
sbb
push
mov
insb
inc
loop
push
sbb
jp
lock
fmull
pop
cmp
mov
faddl
lods
addr16
mov
jne
icebp
je
xchg
repz
mov
or
xchg
fnstenv
pop
cmp
mov
cmpsb
push
dec
xchg
out
mov
xchg
imul
dec
sbb
into
dec
lcall
mov
ds
call
push
fsubs
icebp
push
inc
rol
insl
dec
cmpsl
lea
movb
mov
jns
or
xor
push
cwtl
hlt
jecxz
mov
add
jl
fwait
mov
das
imul
cmc
xchg
add
and
out
and
cmp
push
out
arpl
jne
mov
push
push
cld
add
push
jae
pop
xor
outsb
dec
pop
and
lret
ljmp
inc
cmp
lea
dec
outsl
xchg
fs
out
ret
sub
mov
xor
pushf
add
aas
inc
cmpsb
cmp
mov
mov
sbb
ljmp
repnz
mov
fisttpll
aad
adc
sbb
sub
retw
mov
xlat
test
mov
mov
cmp
sbb
lock
gs
sar
popa
add
loop
xor
loope
xchg
mov
shrl
pop
jne
out
movsb
jb
xchg
cli
pop
int
lock
adc
fwait
jb
jle
add
in
lock
mov
movsb
aaa
repz
jns
rclb
push
bnd
pop
xor
and
fisttpl
sub
cmp
mov
stos
lock
bound
lea
nop
test
jle
ljmp
sub
jg
dec
mov
sarb
enter
lret
into
push
scas
outsl
adc
lahf
lods
fnstcw
pop
clc
xchg
sbb
bound
sub
mov
cltd
aad
negb
scas
lods
sub
mov
cli
or
les
lret
pushf
outsb
jne
add
add
cmpsb
imul
test
mov
xchg
xor
dec
mov
adc
dec
call
in
pushf
sub
dec
loop
popf
add
jnp
mov
mov
ds
jmp
int3
pop
mov
mov
sub
mov
enter
out
cmpsb
out
push
ret
sahf
push
sbb
inc
mov
mov
xchg
lahf
dec
idivb
push
pop
mov
outsb
or
inc
rcrb
andl
loope
cmp
hlt
or
ds
mov
icebp
xchg
adc
fadd
imul
add
ds
hlt
xor
xor
sbb
mov
rcrl
cmp
adc
lahf
es
cmp
jnp
push
mov
dec
xchg
cwtl
xchg
mov
xorl
and
mov
lahf
xor
das
sbb
jg
out
popf
xchg
xor
frstor
add
mov
fmull
xchg
mov
add
inc
push
push
add
jl
jle
and
into
imul
shlb
sub
mov
hlt
fwait
outsl
mov
stc
or
inc
nop
repnz
sbb
lcall
sub
daa
ret
mov
and
adc
aas
xchg
das
loopne
stc
cmp
inc
imul
into
jo
pop
add
aaa
mov
outsl
sbb
dec
lret
or
arpl
dec
inc
push
and
or
mov
xchg
push
mov
pop
pop
mov
pop
dec
popf
lods
and
xorb
repz
and
int3
or
and
or
in
mov
insb
nop
lods
mov
ror
pop
jge,pt
jbe
stc
cmc
or
mov
fyl2x
stc
push
inc
call
cmpsb
jle
pop
bound
aas
mov
and
sbb
dec
push
sbb
jecxz
sahf
jecxz
sub
add
mov
nop
mov
mov
jae
inc
mov
inc
sbb
sbb
shl
das
sbb
mov
jp
jmp
aad
cmp
xor
sbb
add
dec
mov
xor
sbb
out
push
push
ljmp
insl
adc
in
dec
mov
mov
leave
pushf
add
mov
in
in
mov
add
lcall
nop
or
xchg
jo
adc
add
fstl
and
out
inc
dec
ret
mov
mov
or
add
xor
or
test
in
xor
push
int
dec
xrelease
es
mov
imul
in
pop
inc
aam
mov
fildll
orl
sub
aaa
outsl
push
jp
mov
imul
jnp
jbe
xchg
cmc
pop
arpl
mov
push
mov
and
out
xor
lret
inc
std
mov
lcall
cmp
and
testl
or
fldenv
imul
mov
pop
les
push
push
fisttps
or
pushf
jl
pushf
sbb
mov
movsl
cmpsb
cltd
cmpsb
dec
jmp
je
add
outsb
fnstsw
ljmp
push
or
dec
jbe
add
or
jmp
pop
ret
data16
sbb
adc
mov
jge
insl
int
xchg
xchg
mov
jns
enter
dec
inc
dec
pop
cmp
fsts
loopne
dec
jmp
xlat
cld
stc
adc
scas
jno
sub
push
pop
ss
std
inc
int3
or
mov
push
int3
lahf
inc
push
pop
push
and
shll
fstl
mov
icebp
pop
fsts
bnd
aaa
jbe
inc
mov
pop
push
enter
testb
jbe
roll
jns
stc
or
xchg
adc
mov
out
idiv
jecxz
cmp
inc
adc
mov
dec
sub
subl
fcmovnu
mov
mov
adc
gs
fidivs
push
js
xor
jmp
cwtl
pop
ljmp
xlat
and
scas
inc
daa
and
push
push
jp
cmp
dec
sbb
aam
movl
aam
jb
in
push
cmpsb
inc
jns
mov
popf
xchg
push
push
cli
xor
in
jns
fistps
cmpsl
push
mov
mov
push
cmp
adc
xchg
lcall
jbe
cld
pop
xchg
fs
or
js
sbb
inc
icebp
scas
jp
xchg
cwtl
adc
aam
call
xchg
mov
add
hlt
and
and
int
jge
data16
int3
cli
sbb
cmp
jae
leave
das
clc
push
pop
mov
pop
test
add
pop
cmp
bound
mov
dec
push
in
cmp
push
dec
inc
repnz
andb
dec
movsb
xor
xchg
mov
enter
sbb
cs
sarb
sub
pop
mov
xchg
jle
loop
xor
mov
sbbb
mov
iret
sbb
cwtl
inc
push
in
and
incb
pop
test
mov
add
orl
dec
dec
out
adc
cwtl
js
je
pop
mov
mov
xchg
sbb
and
or
bound
or
mov
lods
cli
dec
jge
aas
das
cmpsl
ss
dec
mov
fbstp
inc
fildl
inc
lds
add
pop
mov
incl
mov
push
xchg
loop
cmp
xchg
pop
dec
std
popa
arpl
pushaw
data16
js
xor
add
and
gs
pop
inc
ljmp
mov
sbb
sbb
test
into
jns
push
inc
ljmp
dec
dec
jge
in
in
mov
inc
push
cmp
sub
imul
pop
sbb
xchg
int
clc
mov
lcall
repnz
out
data16
les
scas
push
push
rcrl
shlb
insb
or
push
dec
push
xor
add
std
mov
fwait
jmp
dec
push
shrl
add
imul
dec
stos
dec
test
push
es
xor
ficoms
fmull
mov
cmp
lahf
lea
fldz
dec
cmp
std
rorb
imul
inc
mov
xchg
fcoms
call
cmp
pushf
aaa
in
push
or
out
sahf
shll
call
mov
neg
mov
or
cltd
testb
jne
xchg
adc
cmp
ret
cmpsb
cmc
pop
pop
pop
data16
ja
mov
mov
arpl
push
push
sbb
mov
mov
insl
cmpsl
xchg
xchg
imul
dec
popa
popf
adc
add
jl
xchg
enter
or
out
pushf
mov
int3
jno
arpl
pop
sti
dec
mov
imul
mov
jp
shrb
imul
lds
xor
dec
cmp
xor
mov
cmpsl
sub
data16
jno
sub
mov
push
std
jne
jb
or
into
push
shl
xchg
jl
add
mov
mov
xchg
je
xchg
mov
shr
push
add
cmc
or
sti
xchg
movsb
adc
leave
xchg
mov
sub
mov
mov
inc
xlat
mov
fs
xor
testb
insb
adc
pop
push
push
insb
in
pop
cmp
xor
jmp
push
ficomps
ljmp
add
xchg
pop
loop
pop
out
push
or
pop
out
mov
arpl
cli
mov
mov
pop
insl
xchg
mov
gs
movsb
inc
out
mov
sbb
pop
fwait
mov
addr16
mov
xor
add
mov
mov
pop
imul
lods
addr16
js
push
cmp
aas
imul
xchg
fcmovnbe
xchg
bound
les
test
mulb
lahf
es
neg
xor
or
mov
jno
jp
sub
cmp
jl
mov
clc
in
pop
out
not
push
clc
fsubl
lods
int
and
push
dec
and
popa
pop
ljmp
outsb
arpl
sub
sti
dec
jb
cwtl
stos
add
movsl
call
jo
into
jae
scas
pop
mov
inc
faddl
or
jbe
sbb
cmp
push
pop
dec
dec
xlat
and
mov
jmp
push
ds
pop
mov
jne
data16
fisubrl
jne
mov
inc
cmp
inc
test
lods
lret
cld
sub
stos
add
out
adc
add
xchg
js
jbe
lds
int3
push
jae
mov
dec
inc
scas
jbe
xorb
sbb
xchg
cmpsl
out
cmp
mov
mov
and
dec
insl
arpl
mov
xchg
jno
mov
adc
popf
mov
add
cmpsl
les
and
iret
mov
jb
rcrb
outsb
sub
clc
and
lcall
add
stos
dec
icebp
ds
mov
leave
xor
movsl
addr16
andl
push
sub
add
mov
mov
outsl
shll
ja
daa
repnz
pop
lock
mov
scas
fisubl
icebp
out
jb
add
jno
test
jp
nop
or
xchg
cwtl
fcmovne
xor
or
pop
sub
sub
inc
jl
lret
jne
ljmp
fnsave
jbe
adc
dec
mov
repnz
xlat
fbstp
cmp
jae
pop
dec
out
bound
add
nop
test
and
lahf
lcall
sahf
mov
scas
cli
shll
xlat
mov
push
fstps
mov
sub
cltd
std
xor
outsl
dec
bound
call
ja
dec
aam
hlt
mov
mov
loope
and
adc
or
dec
loop
mov
and
xchg
or
bswap
jge
and
les
cmp
fcompl
xor
or
ds
in
inc
jmp
dec
cld
addb
sbb
jb
mulb
mov
pop
mov
sbb
jl
cmp
popf
cmp
xchg
fcom
mov
xchg
cltd
push
cmp
mov
pop
sar
rorb
addb
in
les
xchg
lods
add
sbb
pop
mov
call
lock
jns
ret
sti
jae
aam
xchg
jle
pop
xor
inc
adc
test
fisubrs
imulb
mov
out
inc
clc
mov
sbb
nop
stc
or
dec
mov
roll
and
in
les
mov
lret
lret
aas
std
mov
xor
dec
mov
mov
jnp
xlat
lret
jl
add
or
in
adc
repz
daa
in
and
jp
cmpsl
fsubrp
ss
popa
setns
pop
cli
push
sbb
scas
test
orl
lods
loop
sarl
pop
pop
loope
lods
dec
jb
pop
adc
push
and
sbb
jg
or
push
inc
ret
dec
test
dec
inc
test
fdivs
fwait
add
mov
jmp
cmp
pusha
jg
js
push
xchg
outsb
cmp
mov
add
ljmp
lret
push
pop
mov
jp
mov
daa
inc
aam
int
roll
lods
jmp
and
xchg
in
and
dec
fcoml
lea
push
mov
stc
int
pusha
daa
sub
sub
nop
sbb
jb
in
es
xchg
push
lock
inc
mov
test
cwtl
pop
adc
sub
stos
adc
out
adc
enter
int
and
xchg
add
sbb
ss
adc
inc
imul
sbb
insl
daa
pop
ds
pand
pop
mov
push
mov
mov
jmp
repnz
fs
cwtl
lahf
nop
sbbb
push
jns
add
daa
and
stos
or
inc
sub
add
pop
sbb
or
shlb
outsb
xchg
in
lahf
mov
cli
cmpsb
ja
cmp
push
mov
mov
and
xor
into
and
jg
mov
xchg
fnstenv
adc
popf
repz
push
sub
or
divl
mov
lret
hlt
int3
lret
add
gs
jl
adc
mov
xor
add
int3
cmc
mov
popa
insb
fcomps
ss
mov
push
push
inc
sub
jns
shll
nop
and
jnp
push
add
sbb
pusha
adc
mov
out
and
sub
mov
adc
dec
ss
mov
outsb
les
imull
test
add
out
mov
and
rcrb
inc
into
je
pop
adcb
inc
repz
and
push
mov
addr16
mov
xor
lea
xchg
xchg
jl
das
lea
in
sbb
lahf
popl
cli
sbb
daa
rcll
and
icebp
dec
rolb
mov
cmpsb
mov
jb
jae
push
cmc
leave
ret
dec
push
push
cld
sub
jae
arpl
fistpll
mov
lea
out
dec
nop
mov
xchg
fs
loope
cmp
mov
mov
out
mov
xchg
xchg
jle
int
pop
adc
fstpl
mov
je
push
int3
sbb
bound
dec
mov
std
shlb
fisubrl
lock
cltd
xor
dec
scas
in
cmpsb
arpl
push
fisttps
jmp
jmp
add
xchg
enter
clc
cmp
mov
movsb
xchg
orps
xorl
addr16
movsl
inc
out
sbb
aas
add
sti
out
lret
cmc
fistl
mov
cmp
push
test
bound
movsb
mov
repnz
fwait
add
out
loope
adc
out
aam
das
sbb
sbb
dec
xchg
mov
call
xchg
lret
stos
je
iret
push
loop
sub
repz
cmp
test
test
inc
sub
addl
xchg
mov
ja
inc
jmp
arpl
cli
fstps
or
repz
pusha
fiaddl
nop
test
mov
nop
cmp
mov
in
arpl
jno
mov
xchg
loop
pop
leave
test
dec
or
popa
hlt
jbe
or
sub
pushw
inc
popa
ret
pop
push
sbb
lock
out
mov
push
xchg
mov
popf
lea
fildl
test
cmpsl
dec
jnp
shl
cmp
sbb
jb
loope
jo
cmp
push
mov
ret
push
ss
pushf
cld
fisubrl
ret
sbb
jne
dec
les
in
jg
test
inc
dec
insl
mov
sub
push
and
nop
cmp
gs
push
mov
pop
xchg
pop
xlat
lods
cmc
scas
push
pusha
sbb
xchg
in
mov
cmc
test
jbe
sti
cmp
and
addr16
dec
cli
sub
pop
push
xor
lock
pmaxsw
lods
fs
cmp
fisubl
adc
stc
data16
inc
lock
cli
mov
call
negb
loopne
rcll
shl
fimuls
cwtl
inc
mov
sti
pop
divb
mov
fsubrl
pop
test
mov
loop
inc
pop
in
jmp
stos
jmp
mov
add
mov
xchg
nop
popa
pop
jle
push
lahf
xchg
xlat
fiadds
inc
mov
sub
push
or
dec
mov
fs
lods
cltd
jmp
jp
add
inc
mov
mov
addl
mov
dec
xor
adc
or
add
mov
bound
call
repnz
cs
dec
mov
sbb
adcb
pop
movsl
lahf
fdivrl
mov
scas
idiv
or
movsb
repnz
out
ficompl
mov
daa
pop
mov
cmp
mov
xchg
pop
stos
cltd
mov
movsb
lods
pop
inc
int
cld
lahf
inc
mov
pop
jb
cltd
lret
arpl
xchg
dec
add
mov
mov
pop
fwait
loopne
sbbb
dec
lods
xor
repnz
cmp
cwtl
adc
je
sub
das
and
fsubr
cmp
fs
sbb
icebp
fldt
mov
inc
and
add
xchg
mov
pop
mov
sub
ja
adc
adc
mov
mov
dec
add
push
idivl
inc
cmpsl
mov
cs
sbb
fisubs
add
out
mov
xchg
mov
out
das
clc
stos
loope
ss
xchg
in
mov
sti
add
jbe
adc
adc
xor
bound
add
adc
pop
nop
dec
pop
testl
push
sub
out
mov
pop
xchg
dec
repz
popl
es
mov
in
into
popa
and
and
push
xlat
std
cmp
and
jae
shl
insl
icebp
or
push
les
cltd
pusha
pop
js
cmp
jecxz
and
add
xchg
loope
sbb
inc
in
enter
stc
cmpb
cmp
and
inc
js
sub
sbb
xlat
adc
xchg
lds
mov
adc
lret
fnstenv
in
inc
xchg
into
test
inc
aaa
sub
fisttpll
in
xor
jo
dec
mov
in
inc
cmc
ds
mov
sahf
push
test
add
mov
xlat
xchg
push
iret
jl
xor
mov
fstpt
cmpsl
lret
shl
subb
jbe
xor
jmp
pop
shl
push
lret
mov
mov
and
outsl
mov
jp
mov
addl
mov
js
sbb
rcrl
add
in
outsb
push
outsb
jbe
enter
and
cmpsb
or
enter
or
out
andb
push
xchg
add
push
aad
icebp
xlat
fdivl
mov
repnz
inc
push
sub
mov
jno
or
xor
ret
out
ss
clc
or
push
data16
lds
test
or
inc
mov
or
and
fidivrs
movq
cmp
insb
mov
stos
cmc
aam
jae
push
dec
andb
cmc
fnstcw
mov
divl
and
push
and
mov
mov
jecxz
jae
push
fidivl
adc
adc
mov
cmc
push
dec
lcall
xchg
repz
dec
cltd
push
pop
les
sbb
jp
pusha
sub
movntq
lock
sbbb
daa
add
jbe
rclb
mov
inc
adc
cmp
pop
and
ss
test
std
add
outsb
inc
or
jnp
jne
jp
mov
js
sahf
mov
fwait
notb
add
mov
or
lea
mov
jb
push
mov
adc
sbb
mov
call
cli
cmpsl
xchg
movsb
out
orb
sar
arpl
shll
inc
dec
lea
pop
dec
inc
sbb
lea
dec
cwtl
jmp
stos
vunpckhps
mov
jmp
shl
lret
outsb
das
popa
insb
and
push
int
andl
jecxz
xor
test
test
leave
repnz
xchg
aas
dec
mov
mov
popa
mov
jmp
mov
movsb
xchg
mov
push
rorb
jnp
das
add
adc
push
stos
and
insl
popa
notl
push
dec
cltd
jle
icebp
insb
lods
adc
mov
call
fwait
popf
mov
daa
scas
lahf
fiaddl
cltd
mov
jb
push
lds
xchg
xchg
leave
and
xchg
cmp
mov
mul
shll
xchg
daa
mov
dec
das
nop
and
out
idiv
aad
dec
pushfw
js
leave
in
into
sub
push
and
xchg
and
xor
jns
inc
dec
adc
into
xchg
sbb
xorb
fwait
pusha
adc
iret
and
mov
inc
xchg
lret
ret
mov
leave
loop
xor
mov
lret
add
cmp
cmpl
imul
jp
loope
sar
mov
inc
movsb
in
cli
jnp
idiv
mov
inc
push
aas
xchg
add
and
adc
mov
pop
int3
shl
aas
mov
adc
test
xchg
pop
jo
jge
fwait
and
aaa
loopne
sar
lret
aad
xchg
clc
enter
mov
cmp
sbb
or
arpl
scas
inc
sbb
jmp
cmp
repnz
pusha
adc
sbb
adcb
sti
xchg
gs
repz
imul
aam
xchg
push
mov
sahf
dec
aas
cli
iret
lds
repnz
test
out
sub
lret
imul
jecxz
sar
out
outsl
outsl
jbe
bound
test
sub
push
add
lds
mov
call
push
inc
sub
enter
popf
mov
and
stos
mov
in
cwtl
inc
mov
stc
adc
jbe
add
xor
ss
outsb
insb
jae
fldenv
mov
inc
dec
imul
xlat
cmpsl
rcrl
push
and
roll
fldt
fwait
pop
adc
xor
push
stos
lds
and
ds
xor
dec
mov
mov
test
and
jge
insb
mov
aam
ja
add
lret
jne
or
ljmp
insb
insl
sub
mov
fimull
negb
xor
pop
push
xchg
adc
fadds
fildl
and
and
movb
sbb
push
pop
lahf
mov
inc
inc
lahf
ljmp
xchg
mov
sub
lcall
jne
es
popf
push
rorl
lock
sub
in
orl
icebp
enter
fmull
addr16
clc
fwait
pop
sarl
push
pop
mov
cmp
cmp
sbb
cmp
pop
jle
outsb
data16
dec
faddp
sbb
loopne
inc
push
iret
ficoms
out
sub
mov
or
xchg
jae
mov
jne
dec
imul
mov
loop
enter
int
in
lahf
popl
pop
mov
fucomi
xchg
aaa
hlt
dec
into
fs
mov
sbb
jmp
rorl
pop
mov
mov
in
fstps
or
pusha
cmpsl
inc
out
dec
sbb
repz
inc
aad
repnz
pusha
push
popa
mov
dec
mov
inc
shll
push
pop
scas
xorb
cmp
stc
stos
push
push
movsb
in
xchg
sbb
aas
xchg
mov
adcb
nop
sub
pop
lods
aas
fldenv
and
inc
jns
sbb
xor
shll
or
stc
ficoml
stc
repz
inc
xor
lds
mov
or
lock
js
in
arpl
jo
and
notb
push
push
pusha
jmp
sbbl
mov
push
sub
mov
jge
jnp
iret
or
and
nopl
xchg
movsl
filds
nop
adc
lret
ss
movsb
mov
mov
push
insl
outsl
inc
test
push
cmp
add
dec
xorb
stos
fcomip
add
mull
add
push
int3
std
mov
xor
dec
es
movsb
aad
xchg
cs
popa
mov
jnp
fldl
pop
inc
popl
stos
xchg
je
lret
pop
loopne
je
push
mov
mov
cltd
push
leave
push
pop
std
cmp
sahf
outsb
mov
out
sbb
daa
in
xchg
and
fst
pop
lcall
mov
jbe
cmp
leave
mov
mov
fwait
inc
aaa
lock
jb
std
gs
sub
inc
mov
dec
ja
adc
repz
inc
and
mov
enter
xlat
lcall
add
cli
pop
cld
movsl
xlat
sub
mov
pop
mov
ja
div
mov
jmp
lods
pop
fs
or
dec
sarb
test
mov
jmp
je
popa
pop
fmuls
adc
hlt
push
jne
rorb
arpl
mov
jnp
cli
dec
jb
insl
push
or
jbe
jecxz
cmp
mov
mov
xchg
or
cmp
lret
pop
nop
fs
nop
fdivrl
jmp
push
adc
jecxz
and
pusha
xor
push
loop
leave
aad
cltd
sbb
jae
daa
pop
sub
js
aas
repz
push
xor
negb
inc
dec
aaa
imul
and
scas
sti
in
call
and
sbb
popa
sub
jmp
cwtl
xor
jo
in
cli
scas
jl
cli
fwait
mov
inc
or
nop
ss
dec
mov
cs
pop
cmc
push
in
mov
repz
lock
jp
xor
outsb
adc
mov
jb
dec
push
dec
sub
push
sub
test
xchg
push
cli
push
or
cs
sub
cmpxchg
xchg
xor
pop
jno
loop
inc
push
sbb
xchg
jno
push
cmp
aam
jo
in
into
xchg
pop
adc
mov
mov
mov
addr16
out
hlt
push
xchg
aam
mov
fdivr
mov
fadd
push
mov
js
cmp
in
iret
call
enter
sbb
xor
inc
cmp
dec
enter
inc
icebp
scas
insb
xchg
sub
jl
mov
inc
sti
push
adc
mov
stc
popa
cmp
fstpl
push
adc
stos
into
imul
ss
mov
and
inc
push
popa
dec
cltd
pushf
arpl
sbb
pop
cmp
cmpl
jno,pn
mov
mov
push
push
dec
mov
mov
adc
test
scas
push
pop
pop
mov
jecxz
mov
add
pop
loopne
push
sbb
push
test
rclb
dec
and
insl
add
pop
sub
loope
ja
loop
jge
cmp
sub
popa
je
std
aaa
adc
push
dec
andl
cmp
in
xor
clc
dec
mov
lods
aad
outsb
inc
push
aas
push
mul
addr16
sbb
in
fidivrs
pop
push
xor
push
lcall
fldl
fsubrl
sahf
out
outsb
sarb
add
and
or
xchg
gs
lahf
pop
mov
dec
mov
mov
movsb
rolb
testb
lahf
je
jbe
cli
jecxz
push
sub
xor
fmulp
push
dec
dec
dec
xchg
ss
cmp
pop
and
outsl
mov
stos
jecxz
movsl
in
rcll
popf
cld
out
sub
sub
pop
xor
inc
test
filds
mov
mov
fnstsw
movb
add
stos
je
in
dec
pop
xchg
or
add
mov
sub
sub
mov
sar
out
mov
mov
sarb
inc
xchg
adc
mov
jmp
imul
and
xchg
mov
ror
ret
insl
and
mulb
xchg
in
js
call
sub
and
leave
xor
scas
movsl
fstpl
inc
or
add
adc
inc
test
sub
push
int
mov
outsl
test
arpl
push
sub
inc
inc
movb
push
xor
out
shrb
sbb
sbb
jne
push
sub
iret
cmp
xchg
xchg
aas
mov
jp
rcll
mov
test
loope
faddl
inc
xor
dec
xor
test
fs
lea
or
iret
mov
sbb
aaa
jl
or
lock
push
and
mov
outsb
sub
iret
inc
hlt
dec
call
pop
mov
leave
sbb
in
fcomip
push
incl
in
inc
das
test
add
insl
push
push
sub
in
dec
xchg
push
inc
loop
bound
sti
and
sbb
popa
fs
mov
or
xchg
int3
ret
sub
loopne
int
or
shll
mov
in
dec
pop
xchg
sub
push
mov
and
pop
jne,pn
test
rclb
cmpsl
jbe
adc
popa
jno
adc
pusha
jge
out
mov
std
mov
push
mov
shrb
lods
sbb
in
add
pop
jns
inc
jb
ljmp
cmp
shll
scas
mov
push
and
sahf
stos
hlt
inc
add
xor
or
xor
push
test
ja
or
ja
add
mov
cli
xor
mov
fisubs
xor
shl
mov
pop
lds
dec
sub
jge
jo
stos
or
push
adc
jmp
or
add
xor
in
adc
mov
ret
mov
std
out
cmp
mov
adc
sub
push
inc
jecxz
fcmovnu
xor
fnsave
xchg
jns
xor
fcmovne
inc
lret
or
mov
es
stos
jp
sub
push
repz
xor
pop
mov
test
arpl
shlb
out
test
mov
cmp
adc
and
push
mov
adc
iret
shl
xor
mov
dec
scas
adc
subl
dec
push
rcrb
add
xchg
inc
jecxz
sub
ljmp
sub
test
jbe
ror
cmpsb
pop
subl
pop
pop
jns
inc
or
push
cmp
mov
dec
mov
mov
mov
fidivrs
cmp
sub
dec
cmp
cmp
jb
das
adc
jnp
jg
jmp
aad
dec
add
call
dec
mov
pop
popa
into
dec
xor
dec
sbb
sub
insl
lods
mov
pop
push
ja
cmpsb
sub
sbb
ljmp
leave
jl
in
mov
cwtl
scas
jp
das
jecxz
cmp
cmpsl
ficompl
mov
inc
sub
sbb
push
dec
mov
cmpb
scas
cmpsb
imul
scas
vzeroall
loope
add
mov
scas
adc
loope
pop
es
pop
xor
arpl
stc
in
inc
sbb
mov
inc
out
cwtl
add
int3
pop
jnp
in
jge
adc
jg
pop
mov
xor
or
scas
add
cmovle
sbb
decb
popf
pusha
sti
adc
in
sbb
dec
stc
insl
push
inc
pop
push
cmc
inc
cmp
push
jge
xlat
jl
ljmp
lock
jno
cmp
push
mov
fwait
jb
sbb
sub
lock
cmp
stc
adc
and
add
in
daa
inc
push
add
enter
loopne
and
add
push
adc
insb
push
icebp
insb
aam
mov
mov
movsb
lods
pop
scas
cwtl
into
ljmp
sub
push
test
xor
pop
pop
sarl
xchg
sbb
jl
cmpsb
imul
addb
addr16
mov
sbb
inc
cwtl
or
cmp
dec
call
icebp
inc
inc
int
sbb
and
enter
sub
movsl
jns
mov
mov
shrl
rclb
xchg
jns
pop
lock
jge
cmp
leave
jne
out
mov
scas
inc
bound
lea
push
pop
fstp
shrl
rcrl
add
fistl
adc
sub
lods
mov
xchg
lahf
fwait
fwait
popf
sub
int3
xchg
mov
mov
xor
mov
sbb
ficomps
or
and
jo
mov
test
push
dec
xorl
dec
inc
sti
cmp
arpl
mov
mov
jecxz
adc
cmp
mov
ret
orl
lret
mov
in
inc
add
add
ret
loope
mov
into
jge
push
mov
ja
clc
adc
inc
and
jb
mov
insl
cmp
push
insb
cmp
cmp
dec
mov
push
push
cmp
jmp
sbb
or
cmpsl
mov
or
rorb
int
jl
arpl
jb
cltd
dec
mov
movsl
jb
xor
xor
fcoms
mov
outsl
ja
outsb
ror
fdivrp
add
pusha
xchg
sbb
jl
add
xor
push
add
fiaddl
mov
sub
pop
jae
adc
movsl
fistps
mov
cmpl
xchg
or
push
sub
repnz
sub
cmpb
dec
xchg
jo
aad
mov
ret
int
test
shlb
jae
push
and
mov
enter
out
in
or
sarl
jbe
lock
int
fs
js
fiadds
xchg
xchg
out
sbbl
jb
insb
rclb
test
mov
and
dec
mov
test
push
test
aad
mov
cmp
and
jp
sbb
pop
nop
sbbb
stos
xchg
cwtl
sub
mov
mov
mov
inc
imul
pop
dec
mov
pop
out
pminub
mov
push
mov
ret
mov
lods
or
mov
xchg
ja
sub
dec
add
imul
and
and
xchg
loopne
daa
mov
imul
leave
gs
mov
in
ja
popf
adc
pushf
aad
jecxz
cmpsb
and
xor
adc
jns
mov
js
popa
lock
mov
loopne
or
and
test
jg
push
dec
andl
inc
gs
xchg
inc
pop
leave
or
test
mov
and
pop
cmpl
imul
sbb
gs
mov
adc
and
out
push
cmpsb
and
mov
adc
fwait
sub
jecxz
loope
loope
cmc
add
cmp
or
cld
adc
test
or
jb
scas
arpl
xchg
arpl
pop
pop
push
and
jl
pop
test
out
into
out
pop
daa
das
jg
imul
bound
mov
sbb
aaa
xor
test
cld
cmp
mov
andl
inc
dec
lcall
test
sub
popf
rcl
in
cmpsl
cmp
pop
mov
adc
pop
xchg
jecxz
add
popa
cmp
in
fsts
mov
mov
stc
xchg
xchg
and
aam
inc
and
pop
cmp
jno
sub
push
mov
sahf
jns
fsubr
cwtl
dec
pop
in
adcb
stos
cmp
lods
in
fisubs
jo
sub
aas
dec
inc
xchg
push
mov
addb
stos
cmpsb
pop
xchg
xor
sub
or
fisttpl
cmp
sahf
dec
or
pop
or
stos
push
jle
push
and
inc
dec
and
or
in
inc
lret
lcall
nop
mov
fcoms
cmp
inc
aas
and
pushf
call
leave
imul
js
pop
fsin
pop
xchg
pop
mov
movsb
mov
adc
mov
dec
adc
addr16
mov
dec
mov
out
aas
jae
mov
jecxz
daa
ret
mov
dec
mov
mov
jge
in
push
out
clc
fcmovb
es
popf
sbb
mov
out
int3
add
outsb
mov
lds
insb
dec
sbb
lea
shrb
sub
xor
pusha
ret
dec
dec
jge
xchg
mov
push
xor
inc
mov
add
xchg
mov
in
ljmp
jle
dec
mov
push
xlat
dec
adc
inc
pop
fmull
push
aaa
test
mov
or
test
xchg
xor
sbb
out
xlat
mov
push
shrl
pop
cltd
xchg
in
iret
pop
add
and
test
das
jbe
divb
push
or
lea
sub
out
rcll
mov
sub
pop
fldt
xor
popf
lea
add
cmp
sub
sarl
adc
push
push
movsb
pop
jg
out
dec
xlat
mov
xchg
aad
mov
sub
pop
mov
pop
jo
pop
sbb
dec
sbb
mov
sbb
jo
mov
jno
ds
push
insl
movsb
ficomps
lret
hlt
sbb
mov
xlat
push
and
out
sbb
cmp
mov
call
aam
stos
jae
out
pop
mov
and
shll
mov
mov
mov
pop
outsb
shlb
es
mov
mov
sbb
xor
cli
loope
inc
outsl
leave
push
xchg
or
fstpl
fidivrl
sbb
push
aam
aas
mov
imul
pop
loopne
addr16
jbe
pop
lahf
in
movsl
mov
fbld
dec
jae
push
or
xor
xchg
cmp
mov
pop
push
repnz
xchg
cmp
int
stc
test
mov
enter
notb
mov
stc
and
fisubrs
cli
scas
mov
popf
cmp
cmc
int
loope
mov
lods
xchg
mov
ss
pop
mov
rol
inc
sub
or
inc
sbb
mov
push
fiadds
add
pop
jno
jo
mov
rcr
lea
mov
repnz
adc
jb
inc
cmp
jge
movsl
in
xlat
cmc
jge
in
and
fidivrl
adc
bound
adc
insb
xchg
sbb
data16
outsl
xchg
mov
sub
pop
jne
or
adc
js
cmp
mov
pushf
sbb
clc
iret
test
inc
and
cs
pop
jg
cmpsl
push
and
mov
flds
loope
arpl
mov
mov
push
dec
inc
cmc
mov
cmc
repnz
or
xor
fisubs
test
hlt
dec
xchg
cmpsl
pop
sbb
out
add
push
inc
enter
jl
dec
jo
inc
or
aad
aas
add
roll
pop
jb
and
cmp
pop
mov
popf
adc
outsb
xchg
lock
lea
sahf
add
jle
in
or
cmpsb
jg
push
scas
sub
pushf
sahf
pusha
movsl
and
or
jnp
pop
data16
int3
mov
insb
push
adc
or
push
cmc
adc
dec
cmpsb
push
cmpsb
mov
jo
pop
adc
cmp
jbe
ret
lock
adc
fsubrp
fldcw
punpckhwd
stos
in
out
cmpb
imul
cltd
mov
ds
bound
xchg
call
xor
inc
stc
xchg
cli
add
cmp
mov
loop
push
mov
inc
rolb
scas
pop
iretw
and
loopne
push
jb
cmc
fwait
add
test
les
push
lea
dec
mov
ja
shl
jb
sbb
jge
test
cmp
sbb
js
popf
mov
inc
pushf
mov
and
cltd
fdivs
cmp
sti
mov
fsts
es
mov
adc
test
or
push
jns
adc
mov
iret
cmpsl
and
loopne
mov
lahf
out
push
sbb
cwtl
lahf
sti
add
int
and
sbb
inc
daa
test
cli
push
jno
pop
outsl
test
mov
cmp
ret
mov
add
fadds
dec
inc
pop
aaa
inc
test
outsl
mov
ffree
and
cs
outsb
xor
in
cs
push
add
fldenv
lods
bound
scas
sti
pop
cmp
mov
addb
insb
popa
inc
pusha
test
push
in
jmp
jb
xlat
rolb
mov
popf
jns
push
lret
loope
jle
inc
xchg
add
or
mov
mov
js
dec
sbb
cmc
enter
add
mov
fdivl
mov
lods
fstp
lods
xor
lods
pop
mov
loopne
hlt
clc
rcll
or
xchg
jo
push
mov
gs
rcrl
mov
mov
shrb
pop
mov
shlb
sahf
dec
add
mov
cli
mov
cmpsb
roll
pop
in
adc
lahf
les
and
xchg
cmp
enter
inc
mov
inc
and
jns
xor
bound
mov
cmpsb
pushf
icebp
jmp
cmpsl
mov
scas
dec
mov
xchg
dec
int
mov
addb
andl
push
xchg
hlt
add
pusha
or
mov
lods
dec
jne
mov
icebp
adc
sbb
cld
mov
push
xchg
xor
call
sbb
jbe
xchg
push
rcrl
in
mov
pusha
push
jbe
push
test
sahf
dec
mov
mov
fsts
cmpsb
cmp
push
ja
sub
cmp
test
adc
jle
xchg
les
sbb
push
push
popf
mov
adc
cld
cwtl
pop
inc
jle
pop
aas
test
dec
pop
inc
xor
clc
mov
cmpsl
shlb
dec
lret
sub
outsl
dec
in
ljmp
pop
jl
sbb
inc
orl
sub
sarl
and
sub
mov
inc
loopne
cli
rcr
fcoms
popf
jmp
or
fisubl
sbb
mov
pop
push
and
xchg
pop
outsb
call
jp
jmp
test
mov
pop
mov
pusha
mov
pop
mov
data16
fistpll
inc
nop
dec
cmpsl
ds
fcomps
jle
aaa
or
cwtl
mov
ds
push
int3
icebp
inc
mov
mov
out
loopne
dec
adc
lret
and
out
cmpl
adc
mov
insl
push
popf
sbb
push
lods
xchg
scas
pop
rcl
mov
dec
jp
mov
aas
outsb
xchg
outsb
lea
sub
lods
negl
push
adc
jb
mov
es
test
stos
and
dec
cmp
jo
cmp
aam
decb
sub
cmpsl
ja
icebp
imul
and
movb
adc
shrb
cmp
mov
in
sbb
fimuls
jns
int3
mov
fucom
sbb
cmpsb
ficompl
ret
movsb
sbb
repnz
ffreep
dec
xchg
les
mov
sbb
or
js
leave
movsl
mov
jg
push
ja
movsl
test
sub
ret
data16
jmp
aad
ja
sbb
pusha
in
rcrb
scas
sub
jno
cmp
sub
les
inc
ss
mov
cli
insb
mov
or
and
xchg
mov
scas
lahf
movsl
push
mov
and
sbb
fildll
addb
or
ds
scas
mov
adc
jp
or
sub
or
pop
ret
push
pop
jne
decl
in
in
inc
or
pop
jecxz
adc
add
mov
mov
cmp
pop
jge
mov
dec
and
push
ficoml
cwtl
movsl
popl
ljmp
js
adc
inc
add
sub
sub
xor
test
push
lods
jno
outsl
jge
jmp
fistl
aad
inc
vcvtudq2ps
xor
xchg
je
je
addr16
push
push
loop
iret
or
sub
and
adc
int
popa
add
lds
or
pop
mov
mov
push
inc
and
loope
loop
pop
les
cmpsb
out
xor
xchg
xchg
pop
aaa
mov
mov
push
nop
aad
loop
ds
mov
dec
loope
fildl
mov
cmpb
js
in
cmpsl
dec
inc
cmp
push
cmp
outsb
cld
loop,pn
or
cwtl
filds
sarl
repnz
mov
cmc
aad
ret
int
sbb
lds
ljmp
pop
shl
add
mov
xor
fcoms
jmp
in
push
xor
pop
mov
push
js
xor
cmpsl
bnd
scas
sub
test
fcompp
repz
jo
jb
das
ret
adc
mov
aaa
outsl
bound
clc
inc
mov
push
mov
dec
sbb
xor
sbb
aaa
jg
lock
out
loope
adc
mov
loopne
out
loop
aaa
xchg
popf
out
jae
sbb
arpl
lds
xchg
aaa
jle
arpl
pop
mov
push
in
repnz
addr16
sti
push
lahf
push
ficoms
pop
aas
jp
mov
ficompl
add
xchg
add
daa
repz
mov
stc
mov
and
jecxz
or
xchg
pushf
ds
xchg
pop
stos
icebp
pushf
inc
test
out
rcrl
and
inc
sahf
add
jmp
les
arpl
dec
sahf
fcomps
jge
sbb
jmp
in
arpl
je
or
adc
notl
jb
add
leave
xorb
loop
int
bound
dec
cmp
sub
lock
or
xchg
jl
repnz
stos
and
jne
mov
dec
push
pop
mov
stos
fdivs
cltd
mov
test
sbb
lcall
das
jp
test
int
test
xor
in
rcl
out
adc
das
and
out
into
mov
gs
call
lock
lea
jg
xor
mov
adc
jmp
es
popa
xor
rorb
fistps
stos
and
push
and
or
popl
and
shll
outsb
aad
sbb
inc
loop
sbb
add
hlt
aaa
loop
stos
sbb
icebp
and
cltd
in
insb
test
pop
hlt
push
aad
push
mov
out
and
dec
popa
jnp
and
sbb
push
jmp
into
popf
xor
cmp
inc
jns
mov
std
sbbl
mov
adc
iret
rcr
jne
push
sbb
xor
lds
or
or
mov
xchg
cmp
les
mov
xchg
xor
jl
std
lret
lahf
sti
imull
dec
negb
adc
push
add
cmpl
pop
pop
cmpsl
xor
xchg
les
or
inc
iret
jp
rcrl
pop
or
fisttpll
out
lods
icebp
bound
aam
add
pop
adc
movsl
xor
sbb
xorl
dec
jbe
leave
je
xor
sbb
or
cld
xor
movsl
flds
roll
and
jb
pushf
sbb
add
mov
mov
push
rol
dec
cmpsl
pop
add
inc
shl
es
adc
aas
rcrb
or
imul
stos
jns
jl
sahf
sbb
mov
out
xlat
dec
je
repz
jae
fimuls
jae
outsw
and
hlt
pop
loope
cmp
sbb
ret
sti
aam
sbb
jecxz
push
out
mov
jns
mov
addr16
mov
loopne
mov
outsb
inc
movsl
dec
inc
mov
imul
fcmovnbe
push
in
sbb
fiaddl
sub
mov
scas
lcall
sub
push
je
mov
xchg
movsb
repnz
out
jne
push
jns
pop
pop
xor
into
mov
pop
add
rcrl
add
and
insl
frstor
push
jns
rcll
pop
mov
sub
cmp
add
popa
jl
pop
mov
push
or
pop
push
mov
std
cwtl
mov
orb
push
ja
leave
aam
jo
or
jnp
pop
lret
cli
jo
inc
outsb
or
add
cmpsb
sbb
mov
cmp
push
adc
dec
cmp
sub
and
shl
sahf
jg
mov
cld
lcall
mov
cli
or
mov
ss
stos
cmp
pop
cs
dec
pushf
mov
jnp
es
adc
jge
aaa
and
inc
sub
mov
jae
mov
inc
adc
or
inc
insb
mov
leave
call
dec
enter
fidivs
les
test
idivl
jo
pop
stos
sti
sbb
mov
mov
fsts
notl
sub
or
jg
notl
mov
mov
mov
iret
lret
sbb
fisubrs
adc
add
cld
das
jo
test
clc
mov
mov
xor
out
arpl
and
add
std
jb
jmp
fwait
xor
icebp
jge
shlb
push
dec
jo
das
into
jne
gs
cmp
negl
insb
insb
icebp
and
pop
aas
dec
sahf
xor
sbb
jns
and
imul
notl
push
push
xor
pop
and
dec
in
int3
add
aam
push
cmp
in
cmpl
xchg
jge
roll
add
inc
sub
divl
int3
call
xchg
pop
shl
xorb
jp
add
out
sub
xchg
xor
negb
inc
mov
test
ja
push
or
jbe
punpckhwd
out
int3
jb
sub
add
scas
rorl
mov
lock
loope
out
sbb
mov
or
pop
insb
and
push
dec
lret
cmpsb
lea
aaa
sbb
lods
fsubrs
imulb
out
fdivs
jns
shl
repnz
movsl
addl
jb
xchg
shr
mov
pusha
and
movsb
xchg
push
sbb
push
and
pop
addr16
test
insb
add
adc
xchg
das
xlat
dec
fisttpll
pop
dec
sbb
repz
mov
jno
ret
push
dec
fistps
pushl
mov
iret
test
je
filds
jno
fcomps
repnz
add
test
out
and
fnstenv
sbb
push
xor
mull
scas
icebp
pusha
scas
nop
inc
mov
and
in
dec
sub
cmp
rolb
xor
std
jo
mov
xchg
insl
push
push
mov
cmpsl
stc
fistps
call
daa
xchg
inc
or
lret
cmpsl
and
and
data16
nop
mov
sub
push
jae
mov
push
adc
and
or
mov
mov
sub
sbbl
inc
in
idiv
sbb
ja
pop
pusha
sahf
imul
repnz
adc
sarb
insb
gs
shlb
fs
fdivrs
daa
jmp
and
insl
cmpsl
cmp
push
mov
mov
int
and
ja
imul
sbb
inc
pop
out
rcr
inc
movsl
or
pop
jp
inc
xor
je
and
push
mov
xchg
popa
cmp
shlb
pop
scas
test
jp
xchg
aam
cmp
enter
js
adc
and
insb
icebp
mov
cwtl
and
addr16
popa
jg
inc
ret
aaa
push
adc
sbb
cmp
mov
pmulhw
lret
push
cmp
rcr
ss
and
subl
fwait
jb
pusha
sahf
sub
call
or
pop
dec
popa
jp
into
inc
ss
mov
jo
pop
xor
add
cmc
lea
ss
shrl
in
aaa
leave
inc
je
fisubl
sub
out
xchg
aaa
add
in
sub
pop
xchg
and
gs
dec
ret
les
sub
loopne
lock
or
add
scas
dec
xchg
xor
adc
mov
mov
sub
jnp
cmpsb
dec
loopne
lea
xor
adc
stos
leave
fbld
dec
mov
call
jns
shrl
out
cld
bound
mov
mov
notrack
rorl
fbld
fdivrl
mov
push
xchg
mov
sbb
xor
xchg
gs
and
xor
out
enter
xchg
out
add
push
pop
mov
xchg
outsb
bound
fwait
push
sbb
into
js,pn
roll
jne
push
sbb
test
loop
ss
sbb
xor
gs
xchg
bound
call
pop
movsb
je
das
xchg
mov
jp
jo
push
cmp
fs
push
int3
inc
sti
lods
subl
pop
jmp
mov
jp
mov
out
rol
in
dec
test
sub
cwtl
test
outsl
mov
pop
gs
loopne
mov
mov
in
mull
shll
repz
in
jno
dec
popa
sbb
lds
pop
popf
insb
sub
repz
lea
add
add
adc
mov
or
pop
adc
or
sti
icebp
sbb
call
ljmp
inc
lahf
sub
mov
mov
bound
mov
add
jg
inc
inc
loop
push
push
loopne
nop
lcall
add
js
lcall
xor
dec
sbb
pop
sbb
fwait
dec
jle
xlat
cmp
push
lcall
cwtl
push
xlat
push
imul
lret
ds
jge
and
mov
add
pop
mov
in
shlb
push
mov
xchg
fisubrs
daa
out
sub
cs
xchg
insl
dec
cmpsb
sbb
jmp
icebp
mov
adc
xchg
cwtl
sbb
pop
out
dec
sbb
mov
mov
sti
mov
push
mov
testb
lods
push
pop
aaa
pushl
xchg
loopne
adc
mov
push
xchg
cwtl
popa
clc
sbb
ss
push
into
je
add
push
outsb
mov
mov
jo
push
cmc
loop
faddl
arpl
xchg
mov
mov
or
jle
cmp
daa
rcr
pusha
mov
stos
and
lods
xor
sbb
insl
cld
pop
cmp
inc
jb
and
mov
sub
adc
and
mov
fidivl
pop
jne
dec
cmpsb
mov
pop
mov
cltd
push
mov
icebp
shll
ret
xchg
into
inc
pop
mov
and
xor
enter
sbb
push
je
mov
inc
inc
in
outsl
xor
push
bound
pop
loop
dec
adc
xor
add
jge
adc
enter
sbb
aas
mov
adc
mov
mov
jge
loopne
inc
insl
fwait
dec
cmpsb
sarb
sub
pop
mov
nop
leave
push
roll
out
sbb
mov
les
push
xchg
and
add
and
scas
nop
stos
xchg
mov
sbb
stos
out
dec
rcl
push
adc
sbb
push
xchg
sahf
adc
mov
dec
jecxz
xor
push
loop
repnz
ss
or
cmp
out
pop
add
dec
leave
movsb
enter
mov
ja
stc
xlat
sub
jno
mov
jo
movsl
xchg
mov
sbb
sbb
in
shlb
je
xor
lcall
stos
sub
inc
pusha
add
lcall
fildl
add
out
sbb
jle
loop
jge
lock
dec
iret
sbb
fsubrl
cltd
push
push
decb
jge
xor
xor
jge
xchg
adc
pop
ljmp
cmp
add
aas
call
shll
movsl
popf
in
loope
xchg
mov
lds
pop
movsl
and
out
test
jae
inc
sub
xor
xchg
stc
jge
pushf
adc
mov
inc
cltd
ret
or
imul
and
cmp
stos
aas
and
inc
push
daa
jl
mov
mov
jecxz
mov
mov
xchg
pop
into
push
mov
xor
std
xor
dec
call
enter
inc
and
xchg
push
cmp
sbb
jle
dec
pop
sbb
shlb
dec
inc
jbe
outsl
push
out
lods
cmpsb
xor
je
push
lods
idivl
stos
aam
mov
ucomiss
pop
push
pusha
push
add
mov
jg
stos
xor
addr16
cli
enter
scas
mov
fs
adc
call
out
mov
sahf
inc
aam
or
sti
adc
adc
movsb
loopne
repz
icebp
int
inc
mov
nop
jg
ljmp
outsb
popl
xchg
push
lret
jno
outsb
sub
push
inc
mov
jg
icebp
rcr
aam
div
scas
arpl
add
push
nop
out
int
dec
sbb
mov
cmp
in
mov
out
loope
es
loopne
stos
notl
jmp
inc
pop
or
ja
bound
jne
jge
call
fcoms
xchg
mov
mov
iret
stos
test
data16
mov
pop
sahf
lret
test
sbb
mov
adc
fdivs
inc
mov
jp
add
mov
insb
sub
jl
cmp
scas
adc
mov
loopne
xchg
and
sbb
xor
cmpsb
in
or
je
lods
fsubrs
fmuls
shrl
or
jns
cld
mov
cmp
scas
ljmp
sbb
xor
pop
push
xor
out
xor
or
popf
inc
sub
mov
cltd
aaa
cmp
repnz
std
mov
jo
xchg
pop
sahf
inc
call
cs
and
and
shl
js
lods
loopne
mov
sub
fildl
repnz
xchg
dec
aaa
out
inc
jmp
jecxz
das
outsb
xchg
test
jb
lahf
arpl
hlt
mov
or
stc
cmp
stc
gs
add
pusha
push
inc
pop
enter
popf
mov
decb
rolb
in
movq
in
push
cmc
sbb
out
pusha
push
fmulp
mov
adc
lret
js
push
insl
test
and
push
in
inc
xlat
subl
jmp
in
jbe
out
or
fs
mov
js
sbb
test
imul
mov
mov
mov
mov
in
push
push
ret
gs
ret
xchg
test
aaa
pusha
sbb
stos
and
rcrl
inc
pop
mov
dec
xor
cld
loop
mov
loopne
pop
pop
push
out
mov
adc
sub
push
mov
fistps
adc
cmp
xchg
arpl
sub
movsl
xor
adc
adc
test
js
cmp
loop
daa
cwtl
mov
jns
jns
in
movsb
call
add
scas
pop
pop
cltd
scas
add
test
lods
sbb
and
and
jle
adc
popa
in
fildl
jecxz
push
add
dec
in
dec
popf
jb
int3
repnz
stc
xlat
lret
push
adc
das
jmp
sub
push
dec
mov
mov
inc
inc
js
mov
pop
or
lods
jg
jp
and
test
mov
stc
pushf
mov
inc
clc
and
dec
sbb
cmove
out
pop
push
or
std
cmp
lret
aad
or
bound
adc
dec
lods
sub
stc
cmp
aad
in
ljmp
std
fdivrl
inc
push
nop
mov
cmp
push
and
cmc
cld
xor
and
out
in
outsl
jne
or
scas
lahf
lcall
mov
dec
sti
xorl
xchg
jbe
cmpsb
nop
dec
mov
dec
test
push
jl
cs
popf
jns
bound
rcll
xchg
shl
pop
cwtl
cmc
imul
loopne
sub
js
loopne
push
cltd
stos
mov
test
xchg
repz
jecxz
iret
xchg
pop
aas
insl
and
sbb
les
ficoml
sub
pop
in
push
fbstp
inc
add
clc
aas
mov
add
add
or
pop
sbbl
imul
xor
inc
sahf
dec
clc
sbb
leave
fldl
aaa
movsl
int
test
daa
or
maxps
hlt
pop
sbb
test
shrl
sub
imul
or
add
pusha
xor
js
sbb
loop
shl
mov
xor
xor
add
std
pop
dec
push
int3
and
mov
sub
in
divb
sbb
pop
outsb
imul
mov
and
repz
int
cli
jne
xchg
mov
ss
sub
sub
inc
rorb
mov
pop
cwtl
add
ret
and
hlt
vmovshdup
pop
mov
call
sbb
add
add
iret
imul
lock
push
mov
bound
dec
jmp
clc
inc
int3
jp
nop
xchg
adc
jmp
jbe
rcll
sbb
outsb
aaa
sub
jb
pop
sti
dec
fnstcw
mov
mov
clc
stc
xchg
adc
lock
js
iret
or
jge
bound
xchg
fimull
add
dec
cmp
loope
inc
aas
mov
rorl
sbb
shlb
or
xor
pop
cwtl
test
es
inc
and
add
movsb
ja
cmp
xor
cmp
scas
cmp
adc
cmp
arpl
insb
test
sbb
iret
fwait
xlat
and
xor
xchg
ret
cli
xchg
jge
xor
fidivrl
dec
scas
insb
jb
mov
popa
stos
push
sub
daa
dec
mov
xor
movsb
mov
xor
add
and
pop
mov
hlt
std
lea
jecxz
mov
cmp
mov
gs
ffree
inc
sbb
daa
addr16
lock
inc
mov
push
adcb
push
mov
inc
dec
int3
inc
outsl
js
nop
jne
aaa
pop
push
sahf
js
jnp
cli
xlat
call
shl
dec
push
sub
mov
sub
xchg
int3
or
mov
adc
and
jns
dec
repnz
addb
pop
lret
jo
pop
adc
call
imul
inc
insb
xor
mov
faddl
dec
sbb
inc
daa
jae
xor
pop
and
jecxz
mov
xor
stos
xor
sarb
fwait
push
stos
out
dec
jae
clc
sarl
cmc
xchg
sti
xchg
fcompl
add
adcl
stos
shlb
pop
and
xor
leave
and
push
pushf
or
jp
jg
mov
dec
testb
cltd
sbb
into
xchg
sub
shl
pop
xor
push
fisubrl
sbb
push
lock
sbb
call
daa
scas
xchg
idivb
rcll
sub
test
xchg
arpl
add
mov
lock
jbe
fadd
mov
inc
lret
xchg
dec
adc
dec
pop
xchg
jecxz
bound
cmp
lock
int3
in
js
xchg
out
dec
mov
adc
xchg
pop
gs
sahf
in
outsl
js
insb
xchg
outsb
es
testl
push
loope
sbb
inc
sub
psubusw
jnp
and
xchg
xchg
movsb
xchg
add
fsubl
test
xor
adc
cwtl
dec
mov
mov
jnp
loop
dec
cmp
xor
inc
lds
cltd
inc
mov
pop
repz
push
mov
or
pop
cltd
testl
leave
loop
lods
xor
sub
push
jg
sub
notl
scas
fwait
dec
stc
jne
dec
out
repz
push
mov
jg
icebp
xor
pop
inc
jmp
jnp
xor
push
mov
push
or
out
adc
add
xor
shrb
fisttpl
int3
or
pushf
pop
mov
aas
and
inc
xorb
jne
cwtl
cmpsl
sub
repnz
ret
adc
and
aas
sub
push
dec
adc
cmc
add
mov
cwtl
lock
orb
or
mov
lcall
test
mov
dec
nop
and
mov
dec
aas
test
add
imul
mov
mov
xchg
outsl
inc
push
jle
daa
cmp
inc
aas
ror
push
add
sub
or
and
lds
pop
sbb
iret
faddl
or
fnstsw
mov
mov
xor
repz
xchg
mov
push
jnp
loop
das
cmpsl
jo
into
push
mov
mov
fsubl
and
sahf
fistpl
pusha
sbbb
scas
jg
add
repz
sub
sbb
dec
and
jbe
and
push
add
fidivrl
pop
and
cmp
loope
cmp
stos
mov
pop
mov
movsl
or
mov
adc
and
popa
loop
xor
push
xchg
and
jl
push
cld
add
push
and
rcrl
shlb
sbb
mov
lds
popf
mov
jg
mov
xor
sbbl
pop
cwtl
pop
adc
and
mov
lcall
shlb
mov
repz
inc
xorl
aaa
popa
mov
add
ret
cld
pop
adc
jne
sub
stos
imul
pop
lods
pop
mov
cmpl
imul
mov
mov
rcr
push
dec
sahf
int3
sbb
aad
cli
dec
xchg
scas
add
push
fisubs
inc
es
sbb
and
into
cmc
mov
dec
xlat
repnz
jge
mov
mov
pop
dec
fisubrl
jns
add
mov
xchg
in
push
mov
dec
filds
out
or
add
test
xchg
and
in
add
cmpsl
movsl
adc
push
repz
dec
imul
dec
mov
movl
jb
push
mov
dec
into
jo
push
jge
cs
das
call
hlt
push
mov
lret
mul
jae
outsl
shlb
fmul
int3
je
jo
jg
inc
mov
shlb
pop
data16
gs
lock
cmpb
ds
lock
addr16
lret
pop
repnz
push
sbb
bound
xchg
dec
push
or
fisubrs
and
xorl
pop
mov
push
mov
cmpsl
stos
jne
repz
cld
sbb
int
xor
xchg
popf
adc
jmp
loope
iret
xor
xchg
insl
pushf
inc
insb
test
test
movsb
testb
mov
adc
jg
or
fsubrl
cmp
and
push
sbb
xor
dec
outsl
unpckhps
adc
push
mov
popf
xor
inc
decb
pop
xchg
jmp
inc
out
scas
test
insb
xchg
cmp
mov
enter
sub
xor
sub
inc
das
loopne
mov
dec
orl
dec
aad
sbb
mov
mov
and
test
in
lods
shlb
adc
in
ret
xchg
dec
xchg
xchg
sahf
repz
or
jecxz
insb
mov
add
inc
loope
jno
insb
sti
pop
dec
cmp
lret
pop
push
stos
and
into
lods
add
xchg
mov
scas
enter
mov
lret
sahf
sbb
fwait
or
leave
push
in
and
adc
adc
cmp
sub
inc
cli
push
mov
fsub
or
cmpsl
popf
cs
and
insl
mov
xchg
adc
jno
dec
mov
jg
cli
iret
pop
push
fucomip
mov
push
mov
pop
sbb
push
xchg
cmp
sahf
mov
sti
add
in
cld
sahf
xor
dec
xlat
sbb
xor
and
add
mov
pop
repz
jge
adcl
push
adc
push
push
gs
pop
sub
addb
clc
lcall
inc
pop
test
imul
in
inc
cmp
sub
inc
in
loopne
mov
sub
movsl
xchg
jae
inc
repz
push
add
in
data16
lret
jp
jo
jbe
stc
push
test
dec
fwait
lcall
cld
or
hlt
out
pop
pop
ret
cpuid
mov
dec
imul
pop
repnz
ficompl
fmuls
lcall
pusha
lcall
out
push
into
xchg
fisttps
iret
sbb
das
xchg
jo
aam
iret
cwtl
rorb
test
adc
sub
or
mov
fcmovb
test
fildl
jle
sub
cwtl
mov
je
pop
push
es
pop
xchg
rcrb
je
int
leave
mov
enter
mov
out
xor
mov
cltd
adc
aad
add
dec
push
add
popf
arpl
lods
adc
pop
cltd
or
add
pop
gs
lret
imul
shlb
lods
test
inc
add
push
vhsubps
loope
arpl
sub
dec
push
xchg
imul
ret
int3
jne
scas
and
test
adc
daa
rorl
ret
test
faddl
ret
adcb
xchg
and
and
out
lods
and
mov
jle
outsb
dec
or
xchg
pushf
mov
test
sti
fcomps
fcmovnb
repz
sbb
inc
sti
xor
inc
popf
mov
push
out
inc
loope
jecxz
jecxz
ret
sub
adc
data16
xor
mov
popf
mov
stos
es
fldcw
stc
ret
imul
xchg
mov
and
stos
mov
outsl
cmp
aaa
jnp
mov
jno
or
adc
int3
shl
or
std
add
sbb
ja
std
dec
mov
das
push
pop
movsb
mov
or
cmp
add
push
mov
test
cmpsb
adc
arpl
add
hlt
stc
mov
ljmp
sti
jb
sahf
jecxz
pop
or
icebp
out
jg
arpl
sbb
out
xchg
leave
scas
mov
and
bound
xor
jecxz
leave
lret
xlat
fwait
xchg
icebp
pop
test
mov
push
clc
in
push
mov
or
ud2
jg
dec
aam
sbb
sbb
in
mov
or
dec
ljmp
sahf
adc
pusha
iret
adc
test
dec
lock
push
cmpsb
mov
decl
cmp
lea
out
sbbl
stos
ret
xchg
adc
xor
enter
out
cmp
jp
scas
xchg
sub
jmp
int3
jle
sbb
push
inc
jnp
pmaxub
int3
icebp
pop
cltd
jg
icebp
pop
pop
sarb
repnz
push
aam
sub
mov
sub
adc
aas
fwait
xchg
mov
pop
int
in
and
ljmp
stos
jge
mov
adc
stos
sbb
lock
and
dec
mov
mov
push
add
or
repz
movsb
shrd
scas
pop
stos
sarl
sbb
or
cmp
xchg
ljmp
insb
movsb
cmp
lret
in
je
call
adc
adc
rol
fwait
loope
stos
inc
xchg
out
fcoml
aam
pop
xchg
sbb
std
jns
lcall
fnstcw
inc
dec
jno
out
add
insl
out
adc
inc
push
add
push
mov
jge
inc
sahf
shrb
lcall
cmpsb
jno
retw
sti
call
scas
stc
in
sbb
lret
scas
paddsb
inc
jl
xor
or
call
dec
xorl
aam
loopne
inc
push
cli
scas
adc
jge
sbb
ja
dec
sarb
sbb
dec
clc
jl
stc
push
cmp
leave
xchg
loopne
xor
push
mov
repnz
popa
repnz
sbb
les
scas
lcall
mov
int
sub
jge
inc
and
lea
and
mov
add
icebp
add
bound
fildll
jge
lcall
leave
dec
mov
nop
shll
repnz
sahf
cld
sbb
icebp
mov
add
and
pop
ret
shl
mov
js
in
das
mov
fsubl
inc
negl
push
adc
mov
jae
lock
and
mov
leave
pop
call
pop
pop
mov
test
mov
pop
mov
addl
scas
mov
pushf
inc
test
hlt
sbb
xchg
stos
jae
nop
test
js
mov
mov
ret
jge
and
push
shrl
mov
inc
inc
out
push
leave
or
repz
cmp
pusha
xor
sub
jnp
push
cmpsb
das
pop
pop
nop
mov
mov
pop
push
rol
mov
bound
test
aaa
sbb
loopne
ret
mov
fwait
xchg
or
cs
push
inc
jne,pn
aad
popa
aas
lea
push
jl
xor
or
adc
out
and
insb
stos
sub
cmp
cmp
cmp
jae
movsl
clc
sub
jecxz
mov
xor
xchg
jo
ja
mov
adc
insb
insl
or
xor
push
sahf
lods
repz
fwait
outsl
lock
jl
jae
push
test
js
imul
cmc
xor
inc
pop
xchg
and
pop
and
mov
pop
out
iret
mov
fdivr
inc
lret
mul
push
fiaddl
adc
mov
ficoml
fimull
inc
xchg
sbb
dec
xor
gs
mov
data16
in
imul
mov
out
adc
es
dec
xor
fsts
pop
test
imul
int3
dec
lods
jecxz
lret
ljmp
mov
icebp
icebp
sub
xor
and
inc
ret
push
and
jno
pop
sbb
push
and
repz
pop
jb
push
cs
mov
lret
popa
mov
jnp
das
cmp
cli
and
sbb
mov
xchg
out
outsl
or
sub
ljmp
xor
jmp
and
pop
dec
xor
rclb
jae
or
adc
pop
push
mov
mov
sub
test
xchg
mov
inc
out
daa
adcb
pop
xor
fdivrp
shll
jge
mov
and
test
pop
pop
lahf
imul
hlt
pop
pop
lds
dec
dec
out
xchg
inc
xlat
adc
pop
mov
pop
jecxz
xchg
push
push
inc
or
dec
stc
cmp
ret
addr16
add
inc
cmpsb
jno
cmpsb
int
bound
lods
and
aas
mov
or
in
jae
push
repz
cmpsb
add
push
mov
or
push
fs
jns
mov
add
icebp
mov
inc
lcall
cmp
sbb
add
sbb
or
xchg
sub
aam
ret
pop
fldcw
lea
hlt
mov
test
mov
jo
jne
sub
in
jno
cmp
xchg
push
sbbl
mov
data16
dec
ret
in
popa
in
adc
mov
ss
push
andb
cmp
decl
mov
xchg
ja
test
loop
adc
add
jbe
sub
add
stos
into
sti
scas
dec
movsl
adc
mov
int
clc
aam
sahf
cli
leave
add
add
push
mov
aas
cmp
xlat
ljmp
dec
jge
push
ret
or
cld
lret
rclb
mov
mov
ret
out
push
int
mov
pop
loope
mov
add
notb
inc
push
out
repnz
repz
mov
fidivrl
mov
testl
ljmp
fsubrs
adc
jl
sahf
mov
pop
xchg
jbe
xlat
mov
adc
xchg
insb
dec
cwtl
xor
andl
mov
fmuls
xchg
or
pop
call
fcoml
dec
mov
xchg
cmpb
cmp
lahf
arpl
jae
xor
mov
jecxz
mov
dec
cmpsb
fmul
inc
mov
cmc
sub
lods
or
ljmp
clc
ljmp
cmp
aas
rcrb
jnp
ljmp
sbb
inc
sub
lods
cld
nop
sbb
std
adc
adc
xchg
dec
int
jge
mov
iret
and
shlb
cmp
std
add
xor
or
mov
add
imul
mov
popf
jo
inc
dec
out
out
pop
dec
test
in
push
ljmp
push
push
push
and
arpl
or
cwtl
xor
xor
fistl
dec
out
fsts
pop
mov
out
mov
xchg
or
enter
mov
or
pop
or
fisubl
jb
loopne
inc
mov
or
xor
inc
rclb
adc
or
sbb
stos
xor
sub
push
jb
in
sbb
aad
sub
ds
or
movsb
jp
adc
mov
pop
and
and
cmp
mov
xchg
ds
inc
and
out
jno
cmp
jno
sbbb
inc
mov
leave
cmc
stos
add
test
adc
xlat
mov
ss
arpl
lahf
push
jo
or
fcmovu
shl
ss
outsb
jns
mov
add
add
and
mov
cmp
mov
jno
sub
ret
dec
pop
jmp
mov
les
pop
lret
or
in
imul
loop
mov
into
mov
std
add
bound
mov
xchg
cmpsl
aam
andb
push
leave
bound
lahf
cmp
pop
inc
rcll
bound
cmp
xchg
int
into
fidivrl
iret
mov
push
jbe
adc
es
or
ljmp
pop
pop
sbb
lods
rorl
dec
je
adc
outsb
mov
pusha
or
in
mov
or
add
inc
mov
mov
lret
test
mov
add
mov
call
cmc
pop
sub
xchg
scas
pop
jo
inc
es
loopne
xor
cmp
cwtl
xor
into
adc
leave
sahf
lret
lea
out
out
cmpsl
sbb
or
nop
mov
sti
movsb
sbbl
jbe
mov
mov
mov
aas
sbb
icebp
xor
fs
ss
sbb
sub
mov
mov
jnp
data16
mov
lea
icebp
sub
dec
imul
cmp
jo
jle
out
jl
rcll
xchg
xor
and
cltd
into
aas
dec
sbb
pop
or
jecxz
ror
rcll
aaa
rolb
xor
jb
and
lahf
out
aad
or
jo
test
stc
ss
out
test
daa
mov
int3
rol
add
std
add
pop
xchg
or
mov
popa
pop
outsb
jl
sbb
dec
loopne
stos
shr
in
mov
mov
dec
xchg
or
push
mov
mov
shrl
pop
jno
adc
dec
xchg
aaa
push
jl
js
xor
or
sbb
pop
rolb
adc
pop
pop
aaa
shlb
addr16
xchg
mov
nop
cmc
inc
cli
xor
xor
rcll
push
stos
cld
dec
in
bound
sub
jns
inc
fs
jle
es
sbb
stos
sbb
push
sbb
xchg
loopne
pop
out
sub
call
in
adc
mov
daa
or
cmp
and
jle
mov
inc
and
scas
leave
mov
stos
dec
je
push
in
pop
mov
data16
mov
dec
stos
cmp
inc
mov
push
inc
mov
loopne
sbb
lahf
xchg
xchg
add
lock
xchg
shlb
sub
adc
inc
push
das
shll
jl
fidivs
decl
sub
pusha
pop
and
out
sti
jns
in
mov
inc
xor
pop
adc
xchg
push
add
imul
jb
and
mov
int
xor
xchg
ds
lret
iret
gs
repnz
es
xchg
hlt
std
xchg
dec
dec
test
lods
jnp
mov
mov
int
fbstp
inc
xchg
jg
mov
inc
lock
or
lds
sub
subb
xor
sti
lock
loope
add
mov
pop
cmp
sbb
sbb
add
stos
imul
nop
sbb
stos
push
pop
scas
arpl
push
test
add
or
push
aaa
sub
mov
jp
cmp
xchg
pop
push
inc
add
pop
add
repnz
adc
xchg
jbe
mov
ficompl
lds
and
shl
jl
cmpsb
mov
add
jmp
sbb
pop
test
lret
jnp
stos
push
push
xchg
xchg
popa
jl
stc
and
xor
test
jnp
lds
mov
cmp
ss
ss
cmp
sub
hlt
adcl
or
bound
xchg
mov
sub
loop
push
jle
pushl
mov
push
dec
cmp
call
cs
jle
addb
je
aas
dec
movsb
dec
xor
ds
test
test
push
xchg
es
stos
adc
push
ret
jmp
shlb
jl
adc
cld
cmp
outsb
xor
mulps
lea
xor
push
or
pusha
add
repnz
and
ja
xlat
and
mov
fst
jle
jecxz
fstl
dec
cmc
stos
and
testl
jbe
cmp
stc
inc
sub
pop
mov
aaa
stc
jmp
dec
add
xchg
mov
repz
orl
js
fisttpl
cwtl
bound
cmp
xchg
cmp
cmpl
or
in
enter
imul
mov
adc
jl
aad
or
mov
add
fistps
test
and
in
into
or
pusha
repz
icebp
jge
shrb
and
enter
sbb
xchg
leave
xor
cmp
pop
dec
mov
push
les
jge
cmpl
push
cs
jnp
inc
into
dec
xchg
stos
daa
movb
xor
push
dec
dec
enter
insb
and
clc
int3
lahf
in
in
xchg
les
cmpsl
out
outsl
or
addr16
inc
or
mov
out
int
mov
pop
ret
xchg
ljmp
rcll
test
dec
mov
divb
enter
jno
push
sub
test
fmuls
adc
push
mov
testl
sub
mov
aad
mov
shll
call
idiv
jge
lret
dec
inc
xchg
call
cwtl
loopne
and
jb
nop
lods
pop
stos
xor
cmp
pop
inc
jmp
loopne
insb
out
sbb
sub
addr16
inc
adc
add
lods
fwait
add
fildll
jnp
ret
mov
cltd
inc
loop
daa
mov
shrb
mov
adc
in
jns
xor
xor
or
push
xchg
jo
call
outsb
ljmp
mov
ret
enter
and
jnp
push
xor
xchg
aas
into
mov
and
ds
jecxz
or
sti
mov
mov
or
xchg
aas
or
loopne
pop
in
dec
lea
jmp
outsl
jns
and
dec
and
repnz
add
mov
mov
out
into
sbb
out
jo
or
sbb
fwait
mov
add
mov
mov
test
ret
stos
neg
jp
jae
sbbb
mov
add
insl
inc
dec
inc
imul
lahf
jns
cmp
jb
vpminub
sub
movsb
mov
dec
ret
bound
outsl
mov
ljmp
aad
ds
pop
repnz
blcs
inc
jne
mov
jge
rcr
lds
push
pushl
iret
jmp
mov
jg
call
fcmovnbe
jmp
mov
lret
test
jg
sti
cwtl
mov
or
lods
imul
ss
push
icebp
fldenv
or
sbb
mov
jl
adc
mov
lret
loop
and
clc
fdivs
sbb
loopne
jno
pop
mov
sahf
out
push
stos
ret
ja
sbb
int3
push
pop
dec
lret
repnz
xor
mov
adc
fildll
adc
pop
push
xchg
fmuls
sbb
popa
shlb
mov
aad
repnz
insl
add
movsl
bound
stos
jmp
sbbb
shlb
sbb
bound
jecxz
or
out
data16
aaa
dec
push
repnz
roll
dec
xchg
push
ds
mov
es
dec
sbb
push
insb
pop
jb
hlt
sbb
mov
xor
jno
lcall
clc
jecxz
push
bound
int3
dec
fwait
dec
and
decl
push
shlb
negb
push
jbe
in
jb
push
mov
scas
jno
mov
popa
pop
scas
xchg
mov
addl
and
push
adc
adc
sbb
addb
call
out
inc
outsl
mov
cmp
or
ret
pop
insl
call
adc
jp
cld
pop
cmp
ds
es
and
stos
adc
mov
sub
mov
push
shll
andl
inc
in
movntq
loope
jl
jmp
stos
mov
je
mov
hlt
adc
fs
int3
out
je
out
imul
xor
xchg
pop
mov
cmc
and
rcr
xchg
push
and
mov
mov
mov
mov
lods
ss
icebp
push
mov
stos
jns
iret
dec
xor
dec
into
adc
mov
adc
arpl
icebp
popf
ds
jp
push
push
enter
pop
jnp
in
fwait
and
cld
andb
cmp
outsb
cmp
jecxz
push
outsl
test
leave
sahf
add
jae
pop
lds
fisubl
xlat
cwtl
rorl
add
repz
ljmp
xchg
rorl
xchg
pop
dec
pop
outsb
lahf
cld
fs
jbe
dec
push
jecxz
shll
je
adc
cmp
sub
lret
repnz
loope
arpl
test
add
cmp
ds
cmc
jb
mov
or
shrl
pop
andl
jo
filds
insl
cmpsb
repnz
imul
xchg
or
push
and
cmc
lods
and
cmc
mov
stos
inc
in
dec
pop
cs
mov
xor
and
mov
in
jge
push
inc
inc
aad
add
mov
mov
aad
sbb
cmpb
loope
mov
mov
aas
lods
test
mov
sbb
out
cwtl
jnp
jecxz
scas
mov
insb
add
dec
sub
dec
mov
push
fcmovu
popf
xor
ljmp
cld
xchg
test
xchg
jno
xchg
ret
ja
push
in
cmp
stc
fwait
or
daa
lcall
rcrl
and
jecxz
arpl
je
repnz
xor
xor
test
mov
jne
stc
xor
pop
lods
daa
dec
mov
out
cmp
inc
lahf
push
hlt
scas
sarl
xchg
add
movsb
xor
or
lret
add
xor
adcl
test
stos
ljmp
ja
push
sbb
test
loop
adc
mov
mov
xor
test
mov
xchg
inc
push
xor
icebp
loopne
ss
xchg
loope
fldl
cmp
sub
push
push
pop
inc
stos
push
xchg
aam
push
and
movsb
sub
pop
sub
jp
dec
rcl
inc
jae
inc
mov
xchg
cs
mov
dec
lahf
inc
push
lahf
and
dec
shll
addr16
shl
arpl
fadds
xor
int
mov
das
or
or
je
push
sbb
lret
or
xchg
pop
inc
xchg
mov
daa
xchg
or
cmp
mov
inc
sti
mul
sti
mov
subb
scas
lods
dec
and
hlt
aad
movsl
mov
testl
movsl
jmp
ds
leave
orl
mov
adc
js
es
pushf
out
popa
bound
jmp
mov
in
fadd
inc
jo
sub
pop
sbb
mov
or
xchg
add
fisttpl
rorb
lret
test
outsl
push
lahf
cli
jge
inc
mov
cmpsl
cmpsl
rorl
jnp
and
ja
pushf
add
les
out
out
cmp
push
aaa
lret
jecxz
iret
adc
push
mov
sbb
call
mov
mov
and
dec
test
xlat
fstl
ljmp
dec
mov
movsb
mov
inc
add
mov
mov
fidivrs
jnp
xchg
inc
jle
fs
cs
in
add
fwait
repnz
fildl
cmp
popf
xchg
sub
or
jmp
lods
mov
jg
mov
push
jb
dec
jne
sahf
std
ret
loop
cli
repnz
test
scas
mov
icebp
inc
and
and
and
imul
xlat
cmp
pop
insb
mov
mov
aad
sbb
int
pop
hlt
mov
dec
push
mov
pop
hlt
inc
and
jecxz
ret
cwtl
xchg
push
cmc
fsubrs
pop
mov
pop
cmp
ds
add
mov
in
and
dec
mov
add
out
jl
xor
nop
mov
pushf
push
pusha
pop
pop
out
push
movl
mov
sti
in
cwtl
mov
sbbl
pop
js
sub
test
imul
rcr
jl
mov
sub
in
mov
push
sub
imul
lods
push
imul
popf
inc
daa
lods
arpl
lahf
mov
mov
sbb
cmp
popf
in
dec
mov
mov
jl
fcomip
dec
call
mov
sbb
lods
xchg
and
outsl
lret
es
mov
adc
je
push
popf
cli
mov
aam
pop
dec
repz
int3
popa
cld
dec
xchg
pop
mov
dec
add
mov
lret
test
xorl
push
sub
stos
jae
inc
or
xor
imul
dec
mov
fwait
hlt
or
aas
mov
adcb
hlt
lods
repnz
cmp
jbe
pop
outsb
mov
lock
cmp
cmp
mov
cmp
add
jmp
sub
inc
mov
push
int
push
out
je
scas
xchg
fidivl
and
out
in
stos
imulb
pusha
add
mov
mov
sub
lret
je
cmpb
cmpsl
sbb
in
lods
mov
xchg
loopne
and
cmpsl
aas
dec
aaa
xchg
in
lods
stos
sti
dec
aas
inc
mov
pop
cmpsb
sub
adc
jb
cmp
lea
sub
add
cld
mov
dec
xor
and
jbe
lret
cs
dec
sbb
loope
inc
lret
push
lods
mov
rcrb
hlt
leave
adc
sbbb
in
pop
sbb
xor
mov
hlt
mov
das
push
xchg
inc
push
movsb
cli
and
call
dec
sbbb
data16
hlt
test
jle
jne
push
test
dec
adc
je
and
std
push
in
outsb
fs
xchg
push
fwait
push
jbe
dec
bound
in
cld
int3
jo
out
pop
outsl
ss
std
push
shrl
dec
daa
sbb
mov
mov
mov
iret
in
rorb
push
pop
data16
dec
or
or
arpl
and
pop
mov
ret
insb
jl
xchg
or
js
std
sti
divb
dec
pop
xor
inc
mov
je
bound
dec
mov
test
andl
inc
jo
out
cmp
adc
ret
ds
pop
lret
and
leave
sahf
mov
push
or
push
lret
xor
push
sub
mov
pop
sbb
jge
push
inc
push
jmp
xor
int
sbb
dec
jge
dec
xchg
push
inc
cwtl
movsl
xor
mov
test
pop
dec
sbbl
jmp
sbb
ja
in
ret
mov
push
sarb
idivl
mov
adc
rcrl
loop
outsl
push
mov
stos
jl
mov
cmp
enter
roll
pushf
mov
or
addl
adc
inc
xchg
cmpsb
test
ret
jle
icebp
dec
cmc
push
jne
xchg
mov
or
roll
call
push
push
jp
inc
ljmp
push
xlat
lds
lret
mov
sbb
ret
test
jne
add
int
push
loope
dec
pop
xor
xchg
xor
scas
out
mov
addr16
lcall
nop
push
fwait
loopne
cmp
ja
xchg
ret
out
fistpll
pop
mov
inc
orl
mov
add
jno
mov
sarb
ja
push
pop
or
fsts
jo
mov
push
stos
ljmp
fs
fmul
pushf
loopne
adc
xor
call
push
inc
cmp
jg
xchg
cmpsb
sub
and
imul
dec
xor
pop
outsb
out
repz
or
addl
mov
push
xor
cmc
cmp
adcl
inc
mov
out
or
lcall
push
dec
or
minps
mov
sub
push
sbb
lret
fistpll
sarl
out
shrb
and
lahf
fwait
sbb
sub
dec
sbb
js
jp
mov
add
shll
mov
lock
rolb
clc
fdivrl
xchg
int3
dec
inc
stc
adc
pop
lock
mov
jbe
flds
rorl
xor
adc
ja
call
lahf
and
lret
rcrl
imul
push
or
mov
mov
lret
adc
bnd
or
rolb
outsl
rol
es
mov
test
cwtl
pushf
push
mov
aam
icebp
sbb
jl
and
pop
out
or
add
insb
das
xchg
push
fcoml
lock
push
lock
pop
xor
movsl
xchg
add
stos
into
push
mov
and
cltd
loope
dec
lock
out
das
data16
add
cltd
shl
pop
imul
mov
xchg
add
push
outsl
imul
adc
inc
pusha
push
push
jecxz
xchg
sub
adc
subl
pusha
adc
pushf
arpl
mov
inc
ljmp
xchg
mov
mov
xchg
jb
leave
add
jle
mov
lret
fdivl
sahf
push
ljmp
jecxz
movsb
inc
mov
xchg
jge
sub
mov
xchg
mov
or
push
in
call
fdiv
push
stos
addl
aas
xchg
pmovmskb
mov
sbb
sub
add
sbb
mov
jecxz
cmp
gs
movsl
popf
daa
pop
frstor
mov
dec
clc
push
cmp
or
loop
fs
push
in
cld
sahf
cmpsb
test
jmp
rcrb
sbb
imul
push
mov
sbb
int3
push
lcall
dec
movsb
cwtl
push
jnp
lahf
orl
xor
pusha
inc
cwtl
adc
fnsave
xor
mov
fists
push
push
dec
xchg
arpl
jg
jle
and
inc
mov
int
sbb
push
out
adc
jecxz
mov
sbb
and
push
das
inc
mov
mov
lods
lret
adc
xchg
shrb
aas
test
jle
insl
movaps
sbb
mov
ret
jns
add
cmp
mov
sbb
lods
adc
push
dec
push
add
into
clc
pop
cmp
push
daa
mov
and
bswap
inc
push
mov
cmpsl
dec
push
sbbl
jp
mov
ret
stos
icebp
sti
mov
hlt
mov
int3
cmpsb
mov
mov
fs
je
jge
lods
fbld
adc
sahf
jl
pusha
mov
push
jns
push
mov
and
push
push
mov
dec
sbb
aaa
mov
movsl
fsubrl
push
dec
sbb
sbb
sbb
mov
fistl
ret
pop
lea
adc
dec
mov
or
push
loope
adc
pushf
xor
pop
bound
movsb
mov
aas
mov
ficoms
mov
mov
cmc
sbb
and
add
mov
push
mov
dec
xchg
das
out
or
in
jne
fdivrl
sbb
mov
test
mov
mov
ficomps
lock
lret
int
xchg
mov
fdivr
aas
popa
add
pop
int
inc
pop
pop
decb
scas
subl
mov
jle
xor
cmpsl
mov
movsl
xor
mov
mov
dec
xchg
mov
pop
outsl
cmp
sbb
adc
pop
fcompp
dec
push
int3
xchg
sti
push
xchg
movsl
sbb
pop
roll
cli
loopne
movl
adc
pop
sbb
cld
adc
aaa
sub
rorb
fs
mov
movl
pusha
mov
mov
mov
enter
rol
xchg
push
cltd
sub
mov
cmp
mov
cmp
test
dec
hlt
jg
int3
push
fisubs
pop
frstor
in
xor
cli
ss
imul
int
pop
shr
cmpsl
lods
cwtl
ljmp
push
mov
inc
jge
sar
jg
push
jl
xchg
fsts
xor
sbb
mov
fisubrs
scas
adc
adcl
scas
in
decb
mov
fidivrl
and
cmpsb
lahf
mov
and
mov
push
pusha
jne
mov
inc
notl
push
leave
sbb
popf
inc
jmp
int
mov
insl
and
pop
int3
xchg
inc
imul
or
pop
icebp
push
out
xchg
mov
movl
or
mov
mov
xchg
jmp
out
rolb
cmpl
pop
and
jns
xor
add
int3
push
inc
xchg
sub
repnz
sub
aas
xchg
cmpl
xchg
outsl
cwtl
je
or
add
dec
mov
es
scas
out
mov
xor
and
or
inc
ja
iret
mov
add
pop
jmp
cli
mov
movsb
negl
repz
jo
js
mov
jno
mov
loop
or
sarl
std
scas
fcomps
ror
lahf
jmp
inc
test
loopne
mov
xor
mov
xlat
xor
lcall
in
cs
popf
lea
sub
int3
ss
mov
pop
xchg
dec
cmp
test
aas
push
inc
xchg
es
mov
ds
mov
mov
pop
mov
cmc
cmp
xor
mov
out
push
or
inc
lods
pop
mov
clc
testb
sub
repnz
fcomp
in
cli
test
fiadds
xchg
sub
push
pop
inc
fcmovne
inc
out
mov
repnz
sub
mov
clc
sbb
sbb
out
aas
jg
lea
pop
inc
push
push
and
or
insl
inc
dec
add
cwtl
jge
aam
mov
inc
mov
sti
insl
adc
mov
sarb
test
jnp
push
scas
dec
loopne
cmp
sub
cmc
xor
loopne
shl
lret
ljmp
mov
arpl
xchg
push
in
stc
sbb
cld
das
xcrypt-ctr
cmpsl
fistps
mov
mov
sub
das
enter
hlt
outsb
lret
fldl
pushf
inc
insb
insb
pop
dec
test
jo
movsl
dec
cwtl
call
cmp
gs
mov
pop
sub
cmp
pusha
jge
cmp
iret
xor
cmp
sbb
pop
push
mov
shlb
push
xchg
jl
lahf
pushf
aaa
mov
shrl
sbb
loope
pop
jp
stos
inc
clc
lret
push
js
sbb
mov
add
sbb
xor
stos
cs
ret
xchg
sti
and
aad
lret
push
jne
jns
test
pop
push
or
mov
inc
push
xor
lock
pop
pop
dec
es
push
stos
jbe
xchg
xor
mov
icebp
ret
cli
repz
adc
lret
push
sub
std
and
fs
add
lods
and
push
sti
fwait
ret
dec
push
add
cmp
pop
push
jp
adc
push
adcb
mov
push
rorb
sbb
xor
nop
push
daa
stos
mov
sbb
add
loopne
lods
push
flds
pop
pop
xlat
xchg
pop
mov
sahf
dec
mov
xlat
dec
mov
mov
loopne
test
xor
dec
dec
mov
loope
loop
fidivl
and
mov
inc
cmp
mov
out
mov
mov
lods
cltd
dec
cmpsl
jb
shl
lods
outsl
mov
enter
adc
xor
jecxz
xchg
xchg
or
ja
mov
ret
xchg
rorl
push
lods
xor
xor
xor
insb
dec
or
test
scas
pop
mov
es
jo
pop
in
and
jecxz
enter
fstl
sarb
movsl
ret
dec
out
ss
cmp
sub
out
fcmovne
mov
aad
sbb
in
jo
jmp
add
mov
dec
jae
popf
mov
loopne
push
inc
push
and
lcall
sbb
fdivrl
insb
mov
loop
gs
push
mov
and
inc
dec
add
les
lcall
fldl
sbb
mov
xor
pop
pop
jl
adc
scas
enter
mov
cmc
cmpsb
into
aad
jo
in
jg
mov
add
lret
jae
addl
mov
add
sub
xor
out
xor
addr16
sbb
xor
out
std
nop
mov
pop
cltd
aam
jle
shll
out
cld
sub
mov
mov
outsb
sbb
mov
or
loope
in
or
xor
cli
xchg
std
in
inc
adc
movsl
or
mov
in
push
mov
cmpsl
push
inc
xor
cmp
stos
xor
mov
pop
add
iret
sti
mov
mov
xor
push
rolb
add
es
cmpsb
and
push
jmp
mov
sbb
xor
sub
inc
sbb
and
push
mov
xor
popf
bound
xchg
or
xchg
js
jge
fs
cmp
push
cmp
push
or
jg
in
inc
jns
rcrb
add
aaa
mov
in
icebp
lods
scas
add
stos
push
popa
cmp
ror
jl
xor
mov
inc
mov
dec
fwait
jns
cmp
es
in
aas
mov
pop
sub
sbb
imul
xor
mov
xchg
dec
out
out
add
mov
ret
pop
and
js
popa
test
xor
push
dec
inc
testb
push
jl
jl
scas
dec
mov
call
cmp
mov
xchg
fwait
cmp
cmovno
adc
dec
neg
pusha
les
xchg
iret
mov
pop
jo
mov
xchg
xor
loop
aad
outsl
sti
add
cmp
pop
movsl
jg
sahf
jo
stos
push
sub
adc
or
pop
mov
and
iret
sub
adcb
mov
filds
mov
add
aam
jge
jle
popf
js
xor
test
rclb
jae
addb
or
mov
mov
jg
mov
mov
xchg
or
lret
mov
sbb
test
xchg
mov
leave
imul
movsl
mov
andl
mov
and
cmp
rolb
xchg
ror
push
inc
cmp
jbe
data16
les
fisubl
lret
fsubp
and
mov
aam
add
jno
dec
sub
dec
insb
sahf
subl
sub
add
sub
inc
cwtl
imul
lods
loop
and
adc
dec
icebp
fstpl
push
mov
jnp,pt
mov
mov
xchg
mov
push
jo
xor
leave
outsl
pop
arpl
lods
idiv
push
fstps
mov
rcrl
push
repz
ja
repnz
fs
dec
clc
adc
sbb
notb
adc
mov
outsl
fadd
jae
mov
fadds
por
sbb
dec
out
push
sub
jmp
mov
xchg
push
das
jecxz
jmp
mov
push
and
jo
add
pop
mov
out
adc
xchg
lods
lret
repz
dec
sbb
inc
dec
xor
int3
nop
and
dec
xchg
sub
lcall
xorb
and
inc
movsl
lcall
fildl
mov
inc
mov
mov
insb
xor
dec
jl
xchg
pop
or
and
and
adc
dec
into
mov
pop
mov
arpl
push
fsubs
jg
mov
add
lods
jns
sahf
fldl
jle
js
aad
dec
jle
or
ss
mov
cli
les
cmpsb
pop
loop
push
cmp
arpl
imul
jl
cmc
push
or
push
ja
xor
push
ror
test
out
int
fstps
dec
xchg
inc
xchg
pop
sub
mov
xchg
xchg
sub
addr16
ja
jecxz
imulb
inc
js
jl
sbb
and
fbld
inc
cmp
iret
call
xor
mov
cwtl
leave
cmp
xor
sub
push
in
adc
jne
adc
jecxz
loopne
sbb
movsb
in
stos
jge
push
shrb
mov
fsubs
xchg
mov
sbb
inc
test
in
jbe
js
xchg
test
fisubs
push
dec
pop
ret
and
add
mov
jp
jnp
mov
inc
subl
rcrl
push
adcb
sbb
mov
or
dec
push
add
sbb
inc
mov
mov
and
lahf
pop
fildll
enter
or
adc
adc
aam
mov
xchg
and
ss
sub
mov
dec
int3
mov
dec
mov
mov
daa
lcall
pushf
cwtl
cmp
decl
lds
jae
clc
icebp
or
xor
rorb
dec
dec
or
inc
inc
add
insb
dec
push
jmp
mov
movsb
pop
lods
mov
data16
pop
lahf
dec
dec
mov
jne
and
add
push
mov
loop
or
lret
insb
xchg
scas
dec
dec
push
jne
mov
imul
outsl
sbb
sub
push
and
jb
adcl
ljmp
pop
mov
cmpsl
adc
lcall
jl
xchg
dec
test
sar
jge
and
repz
and
movsl
push
mov
insl
xor
jp
cmpsl
cmp
sarb
lahf
mov
xchg
nop
pop
repz
cmp
mov
out
gs
mov
stos
lods
cwtl
aad
mov
shll
movsl
or
inc
xor
sbb
lds
pushf
mov
rclb
mov
test
add
pop
inc
push
stos
js
inc
push
enter
test
mov
lcall
mov
jmp
jne
sub
pop
add
pop
cli
push
and
mov
jecxz
stos
add
stos
push
scas
clc
fstl
mov
jo
pop
xchg
mov
lahf
loop
insl
lcall
sbb
push
push
dec
xchg
xor
out
dec
jae
mov
inc
lds
mov
adc
orl
lods
repz
inc
cmpl
sbb
mov
jns
iret
dec
aaa
fcompl
mov
jge
fwait
sbb
movsb
repnz
xchg
std
jb
xchg
push
shl
aas
dec
imul
xchg
call
mov
mov
jae
outsl
ljmp
dec
xchg
lahf
js
outsb
out
jae
cmc
mov
mov
xchg
push
sbb
icebp
cmpsb
cmp
aad
icebp
push
dec
je
mov
iret
dec
push
mov
xlat
mov
repz
push
sbb
pusha
int
and
mov
or
arpl
test
dec
mov
pop
sbb
push
mov
lahf
and
hlt
test
into
mov
orb
and
sub
dec
cmp
jbe
cmpsb
or
notl
lods
jo
adc
fiadds
mov
add
or
mov
inc
pop
pop
pop
fwait
xor
scas
out
mov
clc
mov
mov
xor
and
cli
and
fldl
xchg
pop
jae
xor
and
sub
jmp
out
cmp
aaa
ss
sti
sbb
sbb
xchg
and
mov
pushf
dec
cmp
in
pop
shlb
lahf
sub
xchg
and
cwtl
add
jle
in
xor
out
dec
inc
cmpsb
ja
and
pop
or
adc
xorps
out
js
stos
out
insb
in
sub
mov
mull
scas
and
mov
lcall
ret
adc
and
imull
ror
daa
sahf
arpl
add
rcrb
in
cmpsl
mov
or
or
or
rorb
pushf
cmp
xchg
fisttps
aas
stos
std
sbb
imul
inc
push
push
mov
push
and
and
loopne
adc
push
sub
lcall
pop
push
or
pusha
fisubs
scas
fwait
inc
or
enter
test
out
arpl
jp
dec
aas
mov
xor
pusha
dec
pop
test
fidivl
jbe
or
pop
push
imul
test
mov
lods
icebp
mov
sar
jns
mov
ss
imul
push
adc
xchg
mov
imul
rcrl
lahf
push
orb
pop
ret
add
pop
xchg
mov
es
cmp
adc
rcrl
ljmp
mov
call
cs
inc
jmp
sahf
outsb
std
fldt
push
push
pusha
sbb
xorl
mov
in
adc
add
pop
stc
sbb
jp
sbb
pop
cmpsb
jp
pusha
push
inc
or
jp
mov
add
les
test
sahf
inc
je
out
filds
notl
stos
imul
jmp
or
aad
or
push
test
xor
xchg
mov
adc
scas
outsb
insl
arpl
rcrl
pop
cmp
mov
push
cmpsl
jbe
inc
cmp
mov
mov
dec
mov
add
dec
mov
xchg
jb
cltd
sbb
fwait
add
shll
enter
imul
fists
push
sbb
aam
push
push
jnp
add
push
jno
imul
push
cli
xchg
les
mov
and
xor
mov
dec
decl
cltd
out
xchg
jmp
lock
sbb
push
cs
cli
mov
xchg
inc
mov
mov
pop
dec
sahf
cmpsl
push
arpl
adc
aaa
mov
adc
stos
out
mov
dec
fstps
test
add
es
pop
xor
xchg
or
jmp
sub
xchg
pop
push
inc
mov
jmp
fs
xchg
cmp
std
xor
dec
jno
in
push
ja
dec
add
cli
dec
daa
xchg
xchg
int3
push
les
jne
insb
jo
daa
ret
daa
jne
pop
lahf
mov
mov
fcmovne
add
pop
and
test
shrl
inc
xor
cmp
push
adc
int
dec
bound
jbe
out
cmp
aad
cmp
lret
test
xchg
js
ss
fistl
mov
push
dec
movsl
jge
loope
xchg
sbb
cwtl
test
pop
or
fdivrl
cmc
loop
dec
fwait
mov
sbb
cwtl
cmpsl
jecxz
fnsave
jne
dec
dec
outsb
push
sbb
scas
lds
xchg
sbb
or
dec
in
push
or
push
daa
push
iret
jo
movsl
sub
fldt
pop
cmpsl
je
sbb
sbb
jmp
lcall
and
mov
insb
mov
add
lahf
adc
movl
insb
lock
pop
cltd
es
jg
push
shl
jns
adcl
ficompl
mov
jnp
cmp
pop
sub
aad
push
add
inc
cmp
jne
rclb
scas
ljmp
leave
das
lods
lret
push
cmp
outsb
cmp
sahf
add
cmp
icebp
jmp
cvttps2pi
icebp
int
sbb
jl
sub
scas
or
sub
mov
arpl
jno
inc
mov
xor
push
test
sbb
popf
sbb
pop
sahf
cltd
adc
inc
xchg
cwtl
test
sbb
scas
jb
loopne
sbb
cmp
sub
and
aaa
inc
rol
divb
push
mov
movsl
jmp
cli
lock
lea
fs
jge
dec
adc
aad
add
jno
into
pop
pop
fwait
loope
xchg
pop
or
lock
test
jg
shl
int
cmpsb
hlt
xchg
inc
mov
ja
xchg
iret
movsl
ds
xchg
sub
jbe
out
fistpll
std
jns
outsb
sarb
outsb
push
movsb
cmp
pop
cmp
out
mov
insb
jno
das
mov
ja
pop
pop
inc
in
les
out
mov
js
insb
test
fistps
lret
jns
adc
jle
push
cld
fisubrs
hlt
jl
xchg
movsl
in
mov
clc
bound
and
xor
test
filds
ss
xor
outsb
adc
cmp
call
lret
test
loope
or
subb
sbb
mov
mov
lcall
mov
es
mov
lahf
int
pop
jb
pushf
mov
nop
lods
mov
push
loope
dec
mov
pop
inc
push
fbld
rorb
sti
sbb
aas
or
scas
in
sbb
enter
dec
cmp
or
cmp
movsl
mov
sbb
mov
int
das
and
mov
inc
jns
push
int3
cmp
clc
mov
xor
dec
ljmp
mov
js
inc
in
inc
or
cmp
fldenv
lahf
pop
sti
rcll
ja
pop
xor
addr16
push
loop
data16
jb
out
jns
scas
or
cmp
or
jp
fcmovu
pop
dec
addr16
rcll
mov
call
shrb
pop
sbb
icebp
add
js
sbb
push
stos
data16
decb
mov
push
test
xlat
mov
ret
and
sbb
mov
or
xchg
xchg
and
xor
cmp
sub
movsb
jns
mov
les
jle
dec
cli
enter
out
fidivl
adc
addr16
inc
jle
imul
daa
outsb
daa
jmp
repnz
popf
fstps
dec
cmpsb
dec
sahf
outsb
jg
cld
add
loop
sub
sub
mov
sbbl
gs
inc
sti
paddq
fldenv
loop
pop
add
sbb
push
adc
repz
cmp
repz
mov
insl
xor
insb
aad
xor
add
sahf
inc
inc
mov
popa
xchg
es
adc
push
mov
xchg
js
lods
icebp
sbb
xor
clc
fimull
loope
leave
or
sbb
or
call
sbb
add
inc
cmpsl
and
int
mov
call
imul
insb
pop
aam
sbb
sahf
pop
mov
mov
aad
sub
mov
mov
xchg
rolb
pop
lods
ret
cmp
cwtl
stos
and
jne
jo
sub
jl
xchg
inc
incb
inc
cld
fmul
orb
push
roll
stos
dec
or
and
xchg
sbb
bound
sbb
aas
out
adcl
pop
xchg
sbb
jbe
cmp
lds
fmuls
xchg
jmp
stc
sbb
cmpl
mov
mov
cmp
mov
mov
mov
add
imul
addl
or
inc
jns
into
int3
sarb
shll
pop
dec
lods
mov
aad
jno
jb
dec
or
into
xchg
js
jp
daa
dec
and
sub
pop
shrb
int3
pop
xor
lock
cld
wrmsr
push
adc
and
inc
icebp
push
test
mov
xor
loop
insl
mov
sub
outsl
mov
insb
jb,pn
mov
xor
add
aam
pusha
pop
sub
push
xchg
jmp
movb
add
insl
jne
shll
mov
jmp
lock
pushf
loopne
jmp
leave
imul
xor
add
ds
icebp
insb
daa
les
enter
push
xchg
mov
xor
ljmp
xor
stos
push
imul
cwtl
add
mov
shl
dec
adc
loopne
mov
cmpsl
or
push
sarl
sti
rcrl
jmp
push
jecxz
popa
lahf
adc
adc
mov
jp
mov
mov
das
andb
stos
add
mov
lahf
adc
lock
nop
shlb
xor
out
das
mov
mov
test
aaa
arpl
loopne
cmpb
dec
xor
pop
daa
or
cltd
arpl
mov
repnz
inc
xor
inc
xchg
mov
in
pop
xchg
icebp
data16
xchg
sbb
aam
lds
popa
xor
and
mov
dec
mov
dec
xchg
mov
sbb
repz
sbb
xchg
rol
lahf
test
into
loop
arpl
cltd
lods
and
push
call
xchg
rorb
stos
mov
sbb
push
pop
sub
sub
sub
or
aaa
shll
or
or
cmc
iret
mov
lea
data16
dec
mov
push
sbb
push
jno
aas
seto
into
jg
mov
rcrl
mov
ret
out
xchg
mov
call
rcr
rcrb
ss
into
and
add
int3
fisttps
dec
inc
test
in
pop
xorb
aam
in
mov
jge
sbb
xchg
sub
stos
pop
je
enter
add
cmp
cmpb
inc
push
push
jp
dec
mov
les
mov
mov
in
inc
pop
sub
ror
jns
ret
push
sub
cmp
pop
popl
fcomps
sbb
mov
adc
sub
mov
ss
ret
jp
adc
mov
and
add
rcr
xor
jne
xchg
scas
bound
sbb
pop
push
lods
jne
ret
jo
ret
xor
push
adc
and
lcall
dec
ret
inc
mov
sub
add
mov
or
xor
sbb
or
fnstsw
call
lea
sub
es
jecxz
add
testl
pop
and
xor
pop
and
xor
clc
push
call
or
int3
call
jae
sub
cmp
fwait
mov
mov
pop
imul
mov
xor
outsb
add
scas
jmp
ljmp
addr16
mov
call
ret
cs
xor
ud0
xor
adc
sbb
mov
outsb
jne
std
movsl
pop
dec
hlt
cs
sahf
loope
push
loop
mov
pusha
movsb
pop
sbb
mov
movb
es
add
mov
cmp
xchg
dec
aas
movl
out
clc
pop
inc
sub
push
xchg
test
push
mov
int
xchg
scas
std
mov
lret
adc
add
into
xor
jo
hlt
mov
das
xchg
clc
pop
mov
std
xor
sahf
cmp
push
pop
popa
xor
cmpsl
dec
pop
jle
addr16
pop
nop
mov
sbb
cmp
nop
mov
xchg
cli
pop
clc
imul
pop
pusha
adc
xor
fwait
and
xlat
jo
or
adc
fs
and
std
mov
lods
in
xor
inc
xor
mov
fwait
lea
sub
test
xchg
pop
sbb
out
movsb
mov
or
mov
inc
xchg
test
push
xchg
push
push
pusha
stos
jne
and
mov
popf
add
sbb
mov
pop
add
add
adc
jbe
jg
test
pop
sub
sbb
not
jae
ret
fistl
sub
pop
outsb
jecxz
rcl
lret
pop
push
sub
xchg
cmp
jg
mov
aad
movl
icebp
popa
les
mov
rorb
lcall
loopne
jne
push
pop
in
lds
test
or
popf
mov
test
cmp
fnsetpm(287
mov
dec
pop
sub
jno
aaa
jnp
rcr
jecxz
mov
pop
scas
in
enter
xchg
inc
arpl
stos
push
xor
test
jb
adc
je
mov
jne
scas
push
ret
mov
roll
scas
pop
stos
or
sub
add
pop
mov
xchg
sbb
stos
stos
xor
inc
xor
aas
xlat
out
lret
stos
jmp
sub
mov
hlt
lret
xor
push
lret
mov
repz
push
aas
push
pop
loopne
sub
ror
scas
popa
mov
loop
pop
bound
xchg
adc
in
adc
mov
xchg
add
jmp
mov
rolb
add
orl
xchg
jl
jbe
pop
mov
sbbb
xchg
fsubl
out
sub
sbb
outsl
int3
and
xchg
inc
cmp
pop
pop
imul
fcmovnbe
into
stc
jns
fs
and
pop
fidivl
fsubrl
in
popa
pop
cmp
sub
inc
add
ret
push
push
push
popa
lods
stc
movsl
jno
cmpsb
aaa
add
insb
lret
inc
xlat
xchg
mov
ja
jae
jl
mov
aas
dec
repz
out
lahf
mov
push
das
dec
pushf
outsl
ds
xor
das
sahf
arpl
pop
cltd
and
xor
mov
leavew
mov
es
loop
jecxz
loopne
fdivs
pop
in
sub
or
push
stos
jnp
in
push
test
das
pop
sbb
aad
call
inc
out
jecxz
in
mov
pushf
fdivl
out
shrl
out
movsb
push
mov
lcall
imul
xchg
pop
mov
insl
sub
loop
and
fldenv
xchg
or
testl
push
rolb
and
ljmp
cltd
jle
pop
add
lods
lcall
lret
jge,pt
das
jns
jno
gs
mov
add
leave
outsb
pop
pop
jo
and
mov
sbb
pop
xchg
mov
insl
jb,pn
xor
int
jp,pn
mov
sub
lock
hlt
pop
sub
repnz
les
jo
add
icebp
or
sbb
mov
jp
mov
add
adc
inc
lret
and
lods
pop
pop
and
sti
addr16
cmp
mov
mov
adcl
mov
sbb
push
insl
and
lret
pop
test
inc
out
aam
xchg
lods
push
pop
pop
movsb
cs
pop
test
jmp
mov
adc
mov
int3
divl
jmp
cmp
mov
mov
mov
je
pusha
lret
scas
fildl
xor
push
dec
movsb
xor
in
mov
fdivrs
pop
mov
incb
pop
cmpsl
repnz
xchg
test
fdivs
mov
leave
enter
xor
mov
jnp
std
adc
or
xor
push
jb
stos
mov
jbe
scas
push
aad
addr16
dec
jp
dec
out
jne
sbbb
fidivl
dec
repz
bound
lcall
push
mov
jmp
dec
lock
outsb
inc
jge
sbb
jno
sub
push
push
icebp
shll
push
ret
pusha
and
and
outsl
jl
mov
int3
clc
push
jae
jb
mov
jl
xchg
inc
daa
lahf
push
xchg
push
xor
popa
mov
push
aam
xor
ret
xchg
stos
fldenv
mov
push
std
inc
repz
or
mov
nop
scas
fcmovne
das
cmpsb
jo
inc
sbb
dec
ljmp
shrb
iret
lods
push
or
sub
in
nop
cmp
aam
xor
jae
xor
add
js
test
sub
into
jge
subb
sbb
stc
iret
push
xor
lahf
dec
mov
mov
or
xor
jle
cmpsl
cwtl
pop
cwtl
jge
dec
mov
adc
cmp
adc
pop
dec
cli
cmp
xchg
sahf
arpl
push
negb
sub
cmpsb
sbb
adc
sbb
jp
leave
mov
ficoml
fwait
sub
dec
lods
push
xchg
push
adc
iret
or
pop
cmpsb
bound
incb
bound
xor
fucomi
testb
mov
ret
enter
dec
push
cmp
push
mov
call
je
addr16
pusha
sub
push
and
xchg
xchg
outsl
pushf
or
xchg
add
jae
stc
pop
mov
loope
sbb
mov
nop
and
inc
pop
in
xchg
and
xor
fsubrs
add
xorl
cs
sbb
add
cmp
inc
faddp
xor
and
lret
data16
jns
and
push
xlat
loope
xchg
mov
xlat
jle
jno
imul
mov
test
sub
add
jmp
push
rcll
rorl
fsubr
in
push
std
jl
xchg
lock
sbb
jns
pusha
int
addr16
sub
movsb
push
sbb
dec
pop
and
or
dec
jg
cmpsl
imul
jns
fcomps
add
and
push
jno
dec
test
cmp
cmp
out
aas
push
scas
mov
sub
ljmp
add
and
push
pop
dec
aas
sub
adc
outsl
jae
xchg
push
stos
mov
js
cmp
and
push
out
or
add
popa
fwait
pop
cmp
push
aas
mov
leave
testb
xchg
mov
dec
and
add
or
imul
movl
cltd
and
jae
rcr
jns
and
dec
not
shl
fistpl
inc
mov
xor
mov
xchg
in
cmp
pop
bound
cmpsb
into
xor
ret
sarl
cs
xor
pop
push
sub
lcall
andb
sti
add
pop
and
xchg
adc
test
sub
loop
test
stc
out
out
dec
imul
sbb
cmpsb
hlt
add
arpl
and
aam
mov
mov
mov
mov
dec
ja
gs
ficoms
jp
sbb
shlb
rcl
jge
fiadds
leave
inc
loopne
es
test
fsubs
test
stc
pop
xor
xchg
sub
jnp
out
sar
pop
adc
lds
xchg
push
push
inc
lods
fs
inc
mov
notl
out
or
mov
cld
adc
mov
repz
fs
mov
xor
sub
das
shll
out
outsl
adc
scas
mov
pop
data16
pop
inc
pusha
iret
ds
aas
adc
test
dec
cltd
orl
test
out
ljmp
cwtl
jg
in
mov
lcall
xchg
mov
shlb
xchg
loop
lods
fmulp
mov
rorb
push
rorl
aaa
lcall
insl
mov
sbb
jno
xchg
shlb
lea
cmp
divl
push
dec
mov
aas
hlt
daa
addb
je
sub
adc
add
cwtl
sarl
push
push
ja
scas
mov
lcall
fxch
adc
fldl
es
sbb
mov
in
push
jnp
iret
jge
jl
pop
push
add
dec
rcrl
cmp
jmp
jp
xchg
std
movb
rorl
or
jl
test
push
lret
adc
cmc
cmpsb
adc
inc
adc
stc
fsts
outsb
lret
jno
aam
mov
pusha
cli
xchg
inc
add
seta
sysenter
rorl
je
mov
sbb
jle
sbb
inc
out
leave
mov
out
cltd
adc
xor
ja
push
into
ret
or
iret
pop
int
rcrb
das
arpl
popf
adc
test
sub
sub
pop
xchg
scas
shll
je
pusha
fisubl
lcall
lods
gs
xchg
pop
fs
xchg
mov
mov
and
shrl
pop
mov
xlat
aaa
testl
inc
cwtl
shlb
sbb
and
push
clc
fs
outsb
cmp
dec
stos
xchg
jnp
push
idivl
mov
adc
jmp
pop
aas
and
stc
int
jns
dec
mov
adc
cmc
inc
out
mov
sub
add
pop
cmp
inc
inc
ficoml
lret
imul
sub
insl
add
add
pop
cli
sub
loop
cltd
lret
aad
arpl
mov
xchg
shlb
pop
cmp
fwait
imul
push
negl
ret
inc
int
mov
loop
jge
sahf
mov
mov
xlat
cmpl
bound
out
inc
negl
and
repz
add
cli
mov
jns
in
push
sahf
ljmp
cwtl
pop
das
add
outsl
pop
and
test
ds
add
xor
outsl
cmp
jecxz
mov
mov
subl
arpl
mov
in
push
pop
push
loopne
movsb
aaa
pop
and
xchg
lods
push
pusha
or
sub
shll
shll
inc
cmp
fwait
push
insb
push
mov
adc
add
repnz
mov
loope
out
xor
sub
ret
lock
loopne
pop
lock
stc
jne
pop
stc
scas
shl
ds
fs
outsb
cli
fistpl
sub
pushf
push
test
scas
jae
gs
ret
mov
mov
and
xor
pop
jns
pop
ret
pop
popf
cli
notl
push
mov
pop
arpl
popa
shl
cmp
jno
cmp
into
adc
xor
fs
sbb
or
lahf
test
popa
sti
mov
pusha
push
sub
frstor
test
aam
cmp
repz
push
popa
in
test
fdivl
mov
in
iret
pop
hlt
in
inc
imul
sub
sbb
movsl
mov
ljmp
cltd
into
sub
stos
xor
pusha
movsl
and
jg
sub
mov
scas
mov
or
jne
inc
mov
mov
fadds
sub
xchg
pop
push
xchg
cs
pop
pop
pop
loopne
daa
add
lcall
es
dec
jns
fs
push
mov
jl
loopne
sub
and
imul
cmp
ljmp
push
sbb
mov
arpl
dec
lods
insb
ss
lods
and
sbb
mov
pushf
add
test
cld
add
mov
adc
out
fs
movb
je
jne
mov
cmp
leave
cld
inc
pop
inc
popa
lcall
fsts
aam
add
add
sub
xchg
and
fnsave
fistpl
inc
fstl
movsl
fildl
lods
inc
or
jns
into
mov
inc
fnclex
mov
hlt
and
push
outsl
push
sar
notb
pop
outsl
test
imul
clc
insb
ficoml
cli
insl
sub
idivl
stc
lods
out
sbb
lcall
push
pop
push
test
pop
xchg
cmp
int3
xlat
js
cli
das
push
lds
xor
sbb
adc
xor
ret
pop
dec
adc
fsubs
into
mov
mov
cmpps
jns
fimuls
add
fisubs
add
mov
cmp
cmp
test
push
add
std
push
ss
xchg
cmp
or
cmp
mov
shll
mov
push
jmp
ret
inc
jns
aam
bound
inc
sbb
xchg
add
jb
popf
cmp
dec
mov
ds
jae
push
ja
ficompl
pop
bound
or
inc
sbb
push
aad
pop
in
mov
sub
adc
xlat
mov
popf
cmp
jge
cwtl
bound
pop
fsubrs
mov
xchg
pop
mov
les
daa
aaa
hlt
ja
pop
xor
ret
or
xchg
scas
cmp
sub
jmp
sahf
push
test
insb
rcrb
sbb
fisttpll
adcb
jb
pop
loopne
fistps
xor
xchg
sbb
pop
repnz
int3
or
pusha
stc
gs
xchg
push
daa
fildll
imul
and
push
pop
cmpl
jge
cltd
sub
pop
repz
fs
ret
loop,pt
mov
fwait
xchg
scas
shlb
pop
fdivs
loope
out
stos
sub
push
sub
inc
cwtl
stos
pushf
mov
sub
push
sbb
test
out
inc
xor
je
int3
cmp
bound
mov
adc
into
ret
push
push
js
leave
lods
mov
shl
push
lahf
mov
ds
call
push
or
adc
lock
dec
repnz
lea
aaa
push
cmpb
add
test
repz
cmp
repz
stos
xlat
iret
jns,pt
movsb
mov
imul
adc
lea
xchg
or
fstpl
xchg
fwait
pusha
inc
sub
repnz
xor
jnp
insb
sub
jne
enter
xor
aam
and
iret
xor
das
jmp
adc
or
or
xchg
and
popf
or
mov
mov
jnp
js
and
add
lods
push
xor
daa
lods
mov
adc
pop
rol
jge
dec
mov
aas
ljmp
dec
pop
in
dec
push
xor
out
pop
cmpsl
ljmp
cmp
enter
inc
mov
aad
enter
test
sub
push
and
jecxz
pop
cwtl
push
mov
fwait
iret
int
jp
add
adc
cmp
mov
pusha
xchg
dec
jecxz
pop
cmp
ja
jmp
and
push
movsl
or
dec
adc
call
jne
fnstsw
in
pop
fidivrs
cmp
scas
xlat
mov
adc
jg
jno
adc
xchg
inc
mov
fnstenv
outsl
xor
cmpsl
push
in
loopne
push
xchg
mov
aad
push
fdivs
movsb
mov
add
loop
cmc
dec
arpl
and
pop
jns
shlb
fwait
or
xor
clc
ret
fistl
faddl
test
loopne
in
xor
adc
pop
xchg
pusha
sub
pop
repnz
repnz
jle
and
in
movsl
rcll
cmp
cmp
mov
mov
stos
clc
fsubr
int
dec
adc
jno
jp
nop
inc
or
jno
cmpsb
iret
cld
cmpsb
cmp
sahf
xor
insl
mov
mov
mov
xchg
leave
sbbl
jmp
pop
shll
les
pop
int
mov
jmp
inc
icebp
mov
loope
adc
aaa
mov
adc
sbb
int
cwtl
cmp
shll
mov
mov
mov
outsb
arpl
mov
cmp
pop
aam
aam
fdivs
cmp
pop
cmp
out
push
dec
sbb
jg
mov
jbe
mov
push
xchg
mov
rcrb
mov
add
out
aad
mov
aas
dec
bnd
xchg
lahf
mov
testb
into
sahf
cld
scas
push
xchg
pop
gs
dec
std
and
push
push
je
pushw
sub
jl
jecxz
inc
pop
and
sbb
lods
cmpl
mov
je
icebp
mov
and
cmp
int
pop
sahf
enter
push
push
xchg
shll
mov
mov
mov
add
jl
cmpsl
or
jecxz
lock
mov
adc
sub
movsb
pop
nop
or
lock
mov
sub
sub
mov
jl
or
mov
or
push
adc
cmp
insl
fdivs
sbb
outsb
je
cltd
arpl
jle
pushf
out
xor
repz
mov
ret
xchg
or
lock
es
push
jae
lds
add
ret
jb
shrb
pop
pushf
dec
push
push
negb
insb
shlb
xor
xorl
dec
pop
arpl
cmp
lds
adc
scas
add
lods
sub
arpl
ljmp
push
add
pop
in
pop
cvtps2pi
fildll
addr16
rcrb
clc
test
mov
sub
jnp
push
fisttpll
adc
sbb
push
or
push
sarl
mov
mov
push
lret
dec
xchg
dec
hlt
push
and
xchg
rcrb
lods
test
mov
and
outsl
bound
sti
xor
lods
leave
repnz
nop
popf
cmpl
and
inc
hlt
mov
ja
orl
or
rorb
add
rcrl
dec
xlat
jge
cmpsl
xchg
stos
or
push
test
xlat
mov
fsub
xchg
iret
ja
xchg
ret
pop
daa
ds
pop
cld
cmp
sahf
ret
ret
mov
icebp
test
push
push
pushf
clc
xchg
mov
sub
popa
xchg
jmp
sbb
lods
sub
cmc
mov
adc
push
mov
xchg
out
mov
dec
imul
inc
pop
hlt
pop
xor
jne
enter
pop
aaa
sbbb
jg
cmp
jmp
jnp
sbb
dec
mov
jo
and
ret
rolb
xchg
sub
mov
lcall
sbb
or
pop
mov
push
or
aam
push
in
test
sbb
hlt
in
push
and
rdmsr
stos
sub
out
xchg
insb
jle
push
loope
jge
outsl
ret
cmp
jecxz
mov
mov
adc
mov
or
mov
cld
and
aaa
hlt
imul
mov
sbbb
push
push
jge
nop
leave
loop
xchg
mov
test
cmpsb
add
pusha
jp
shrb
sbb
jmp
mov
clc
mov
insl
add
mov
bound
push
xchg
enter
push
and
sbbl
sbb
dec
dec
mov
addr16
push
add
shrl
xchg
or
sbb
fs
cld
gs
in
cld
mov
test
fcoml
notb
clc
stc
sahf
out
rcl
out
bound
lahf
stos
clc
cli
mov
mov
loopne
repnz
scas
addb
stos
push
dec
inc
cwtl
cmc
scas
dec
sub
jae
push
imul
bound
jbe
movsl
arpl
cli
jmp
pop
out
mov
sbb
mov
sbb
aad
or
xchg
daa
mov
insl
pop
cwtl
sbb
inc
jne
mov
sar
jae
add
and
add
sub
cmp
lock
jg
arpl
pop
nop
cmp
stos
rorb
pop
push
cli
repz
test
fucomi
enter
mov
out
xor
les
add
lret
xchg
mov
loop
nop
push
xchg
pushf
aad
sub
push
adc
aad
cmp
aad
inc
mov
fcompl
jns
xchg
ss
mov
mov
pop
inc
jbe
pop
jnp
add
hlt
imul
test
aad
mov
pop
sbb
jns
push
cmp
ret
rcrl
sub
aam
inc
xor
stos
xchg
xchg
pop
inc
mov
push
xchg
xchg
outsl
jo
popf
mov
outsb
loop
data16
loopne
mov
mov
dec
sbb
mov
addb
insb
cld
je
push
pop
xchg
push
xchg
sbb
and
jge
dec
xchg
or
mov
dec
daa
mov
pushf
cli
inc
subb
cmp
xchg
xchg
pop
andl
andb
sub
xlat
faddl
cmc
pusha
iret
lds
lds
cmp
sub
jg
jg
jp
hlt
fwait
incl
into
mov
sub
fs
loope,pn
int3
mov
mov
push
scas
loope
pop
cmp
sub
mov
push
mov
rcr
lret
scas
and
xchg
fs
lods
pusha
mov
fcmovu
daa
lcall
gs
sbb
pop
insl
or
ljmp
sti
and
mov
jns
adc
adc
movsb
adc
ds
mov
cmp
jnp
push
data16
js
inc
insl
movsl
sti
jns
mov
adc
fmull
sti
shll
sbb
data16
mov
adc
ret
sbb
push
push
cmpsl
shl
std
hlt
cmp
sbb
dec
lds
fisttpl
sub
adc
push
das
sbb
and
js
mov
cld
mov
fldcw
les
adc
addr16
xchg
out
test
je
adc
daa
ja
pop
std
cmpsw
int
int3
inc
ret
test
bound
jnp
sub
pop
roll
js
mov
jne
push
mov
push
mov
lds
xchg
xchg
rcl
dec
insl
pop
fwait
clc
addr16
cmpsb
stos
sbb
xor
cld
testl
imulb
ds
sub
sub
push
add
dec
gs
add
push
lods
mov
mov
leave
push
repz
xchg
lcall
stos
fs
jmp
mov
aaa
fiadds
push
jb
scas
mov
loope
pusha
nop
or
and
push
cmp
push
jne
jle
adc
mov
les
xchg
jne
push
pushf
add
push
mov
fisubrl
scas
jnp
dec
mov
addb
dec
jo
and
out
adc
adc
dec
out
out
sub
cmp
pop
imul
es
xor
sbb
push
lcall
push
mov
mov
mov
push
xor
insl
sub
rcrl
jg
rcrl
lret
adc
ja
xlat
lods
cmp
and
pop
add
aam
callw
mov
fsubrl
mov
addr16
pusha
popf
cmpsl
mov
pop
inc
xchg
xchg
subl
lods
xchg
out
xchg
pushf
xor
push
xchg
xchg
inc
xchg
pusha
jp
mov
cs
mov
leave
pop
cld
inc
or
insb
xchg
repnz
mov
push
cli
and
xchg
test
mov
jmp
test
dec
sbb
gs
inc
jg
fildl
test
mov
dec
inc
es
adc
pop
js
jbe
pop
cli
and
add
stos
ret
mov
adc
mov
push
dec
int
xor
lret
lret
mov
push
pop
ficoml
push
xor
out
cmp
lcall
les
sbbb
in
int
dec
pop
rcr
adc
fxch
dec
aaa
in
xchg
sbb
jae
xor
imul
lcall
inc
adc
jecxz
add
in
or
rcrb
out
imull
lea
fwait
mov
hlt
aas
fisubl
xchg
or
lds
dec
or
push
inc
mov
aas
push
out
bound
fldcw
or
mov
adc
xor
or
scas
ret
les
mov
jo
subb
andl
inc
ror
jbe
pop
and
jbe
call
cmc
or
ret
aad
pop
outsb
stc
mov
hlt
mov
shlb
cmovno
aas
sub
leave
jnp
arpl
mov
orb
mov
fidivs
rcl
mov
out
ja
cltd
sub
loopne
add
mov
imul
add
push
cmc
mov
insb
lahf
les
stos
jne
fdivp
stc
movsb
outsl
push
push
popf
mov
add
xchg
push
and
dec
imul
les
in
fcoml
sbb
jg
sahf
and
and
rcll
jecxz
gs
inc
push
stos
push
fcmovu
in
sub
xchg
lcall
ljmp
cmpb
mov
out
jge
mov
sahf
mov
pop
push
js
cli
lahf
jecxz
test
test
mov
adc
add
inc
sub
icebp
xchg
inc
push
push
cmp
inc
xchg
or
mov
dec
pop
movl
sahf
fwait
lret
lret
xor
jns
sub
xor
dec
rclb
pop
mov
mov
out
inc
in
pop
mov
or
jae
cmpsl
add
lods
out
repz
test
ds
pop
adc
cmpsl
xchg
sbb
sub
das
clc
fadds
adc
sub
pop
dec
add
mov
lds
or
add
cltd
dec
scas
in
xchg
imul
jg
xchg
dec
in
jns
and
cmp
out
xor
and
push
jnp
xchg
mov
ss
fiadds
xchg
rcr
popa
and
xor
adc
mov
mov
hlt
xor
mov
inc
lea
out
pop
aaa
inc
in
cmp
and
js
lds
mov
popa
xchg
mov
jo
push
lea
jnp
nop
jns
xor
dec
pop
enter
dec
divb
cmp
or
notb
pop
pop
into
pusha
in
pop
in
push
cmp
cwtl
std
xor
lret
mov
push
mov
adc
shrb
add
ss
add
in
inc
mov
dec
pop
loop
adc
pushf
xor
cld
js
sar
sub
add
mov
dec
jne
sbb
flds
mov
shrl
pop
push
add
out
out
sahf
js
push
in
push
test
lock
jbe
add
sub
or
into
popa
daa
cmp
icebp
push
pop
dec
sahf
xchg
incl
lret
dec
add
mov
mov
ret
mov
cld
and
roll
pop
insb
jb
test
mov
jge
nop
dec
fs
test
xchg
and
push
and
int3
in
sbbl
xchg
jl
test
mov
stc
frstor
dec
popa
test
sub
adc
mov
in
sbb
stc
out
lea
push
js
iret
scas
lahf
popf
loop
daa
sahf
mov
movsl
push
bound
mov
inc
filds
pop
jmp
movsb
pop
lret
xchg
add
or
mov
test
xchg
repz
add
add
inc
mov
dec
mov
push
jne
xchg
adcb
stos
xchg
xchg
iret
into
sbb
sub
jns
push
mov
ja
icebp
int
out
jl
xor
dec
js
mov
cltd
add
mov
sbb
xchg
xchg
fcoml
lahf
jle
lods
daa
popa
jle
or
xor
jl
push
je
dec
mov
mov
lds
or
inc
xorl
popf
adc
fs
jne
rorb
pop
pop
add
dec
mov
hlt
in
xorl
sbb
mov
ss
into
lock
stos
stos
lcall
jne
push
sub
add
lcall
rol
fstps
mulb
bound
cmpsl
sbb
xchg
pop
push
push
movsb
lods
fiadds
lret
jl
fsubrp
sbb
cmp
mov
and
cmp
pop
adc
and
and
and
jle
es
mov
inc
mov
mov
in
xchg
inc
inc
ret
insb
jne
sbb
ret
cltd
sub
sbb
dec
popa
inc
outsl
push
mov
xlat
add
fidivs
lea
pusha
out
sahf
and
adc
mov
repz
addl
fisubrl
mov
pop
dec
mov
mov
cs
pushl
inc
lahf
movsl
adc
push
lret
movsb
or
jnp
rcrl
orb
pop
jne
xor
mov
stos
cmc
pusha
sti
and
out
mov
out
gs
mov
mov
push
lods
pop
aaa
test
cmp
fists
hlt
push
and
sub
out
pusha
xchg
in
fsubl
repz
dec
jno
cli
cwtl
sbb
inc
push
pop
aam
jl
cmp
or
ja
inc
js
test
mov
orl
inc
addb
xchg
mov
pop
pop
sahf
jmp
dec
or
shll
adc
bound
jne
repnz
rcll
lret
in
and
adc
call
or
iret
pop
push
dec
es
push
aas
sbb
cs
lret
inc
addr16
fmull
mov
push
mov
rol
stc
add
mov
in
cmp
mov
in
out
sahf
imul
cmpsb
repz
lret
mov
pop
dec
dec
lock
mov
cltd
insl
sub
push
adc
adc
outsl
pop
cmp
xor
sub
or
out
fdivl
loopne
sbb
mov
mov
or
hlt
mov
mov
cld
xlat
into
or
arpl
orl
mov
ds
adc
lods
or
jg
scas
push
aaa
push
pushf
pop
pop
ret
push
jmp
jg
clc
scas
mov
pusha
xor
dec
test
cmpb
add
push
jae
stos
adc
mov
rcll
xor
mov
shll
dec
cmpsb
inc
cld
scas
or
leave
sahf
adc
scas
push
mov
inc
icebp
lods
scas
into
mov
nop
scas
cli
mov
pop
and
jo
rcrl
loop
scas
sahf
dec
xchg
jl
incb
pop
xor
mov
dec
addb
cmp
outsb
dec
pusha
mov
sub
idivb
push
cmpsl
into
ljmp
inc
pop
shll
inc
inc
push
mov
ja
ja
mov
dec
xchg
insb
icebp
lea
and
push
leave
lods
and
ret
daa
mov
push
jnp
mov
push
push
jo
dec
int3
je
adc
loopne
xchg
aam
or
cmp
adc
cvttps2pi
sub
int3
in
test
scas
rcr
xchg
pop
or
data16
xor
mov
es
push
push
push
sub
pusha
lret
mov
iret
jl
cltd
jle
iret
movsb
lds
imul
test
mov
adc
jno
pushf
dec
or
jno
and
xchg
adc
loopne
std
repnz
mov
cli
inc
loop
adc
sbb
cs
xchg
cmp
shr
ret
outsl
mov
mov
or
adc
into
pop
sub
jg
imul
adc
add
pop
add
pinsrw
aas
in
push
daa
rcll
cmp
jle
xchg
push
in
jo
repnz
xor
lcall
in
imul
scas
mov
add
insb
adc
mov
fisttps
scas
insb
jl
jns
in
pop
mov
pop
int
inc
hlt
push
and
xlat
or
jne
sbb
push
dec
sub
out
or
imul
sti
jp
mov
icebp
sbb
adc
cmpsb
xchg
xchg
mov
cmp
dec
adc
cltd
xchg
loope
pusha
mov
xor
movsl
add
inc
xor
aas
das
mov
int3
repnz
adc
sub
loopne
jge
ret
push
test
and
pop
mov
data16
test
jge
lcall
jb
fprem
jg
xchg
stc
add
dec
arpl
inc
call
scas
cmp
loop
mov
pop
mov
inc
jmp
lret
shlb
pop
inc
cmp
ret
iret
add
pusha
push
subb
lods
add
enter
push
push
cmc
mov
sub
jecxz
lods
xchg
imul
mov
enter
mov
decb
arpl
xchg
cs
push
add
adc
jb
shrl
adc
ja
mov
sbb
pop
cmp
inc
jo
sub
iret
push
adc
dec
stos
push
test
xchg
or
iret
cmp
iret
in
sarl
in
mov
mov
push
pop
xchg
in
shll
jne
call
pop
jbe
cli
push
les
inc
push
mov
outsl
lock
ret
mov
in
xor
bound
jl
sub
fidivrs
testb
scas
les
repz
sti
repnz
xor
pop
mov
hlt
cmc
lret
or
sbb
and
dec
ss
scas
mov
add
loope
sbb
jl
jbe
sbb
and
add
not
push
push
in
je
mov
out
cmp
inc
fildll
out
sub
insb
pop
jae
adc
push
or
and
filds
movb
pusha
xor
push
push
in
xor
pushf
cwtl
mov
push
stos
add
dec
clc
xchg
mov
ret
cmp
pop
dec
shr
cli
mov
test
fwait
jbe
cld
push
adc
sbb
insb
push
loope
sub
or
sub
or
sub
jl
pop
and
cmc
or
es
inc
push
divb
cmp
scas
fists
and
and
pop
jmp
jno
push
jae
stos
adc
xchg
test
scas
and
or
mov
mov
ret
imul
xor
popa
out
or
xor
shl
sub
repnz
xlat
dec
add
andl
ds
in
sbb
mov
adc
and
pop
sbb
dec
andb
mov
loope
sahf
lahf
faddl
cltd
push
mov
add
std
gs
aas
inc
adc
pop
int
dec
mov
mov
pop
in
push
sub
mov
and
cmp
in
lret
inc
jle
es
push
dec
jnp
ljmp
addl
cltd
sti
xlat
and
lds
into
enter
adc
mov
jp
cwtl
sbb
in
iret
xchg
pop
or
dec
insb
adc
inc
inc
jne,pn
lds
jbe
icebp
dec
push
repnz
xchg
js
cmc
rorb
shrl
jne
dec
mov
sub
and
or
push
sub
scas
jmp
and
xchg
mov
js
and
or
pop
fcompl
mov
inc
outsb
repz
insb
dec
icebp
fsub
sbb
xchg
jo
sbb
fbld
and
cs
xor
in
loopne
pop
jge
imul
jb
outsl
je
ljmp
push
pop
pushfw
mov
push
cmpsb
add
xchg
fdivrl
movsl
stos
add
xchg
inc
push
add
xor
push
cmp
dec
outsl
imul
sbb
test
iret
adc
notl
clc
daa
cmp
aaa
rcr
test
das
adc
repnz
mov
outsl
mov
pop
adc
dec
out
xor
insb
lret
jge
dec
addr16
push
imul
in
notl
pop
scas
jle
xor
test
sbb
mov
mov
movsl
mov
jae
dec
ds
sub
les
and
adc
frstor
in
xor
jmp
mov
xchg
vmovaps
mov
bound
jne
jns
orb
es
repz
jl
dec
cld
sbb
adc
enter
addb
push
mov
lahf
cmc
xchg
add
sub
cmc
sbb
stos
imul
push
sbb
pop
icebp
xor
stos
test
adc
xor
std
jo
or
cmp
sub
ret
mov
test
mov
push
pop
movsb
add
shrb
pop
in
ljmp
and
ds
aaa
pop
mov
clc
mov
cmp
pop
lea
push
mov
sub
loopne
les
repz
mov
xor
cltd
sub
enter
jne
pop
xchg
lcall
cmp
icebp
mov
xchg
xchg
sti
in
mov
insb
mov
inc
push
test
dec
push
sbb
lock
ret
push
cld
jle
fcoml
xchg
or
imul
negl
pop
dec
arpl
adc
mov
cmc
add
int
xorl
mov
mov
sbbl
or
push
loop
push
sub
leave
ret
popa
fisubrs
mov
insl
push
jae
out
repz
mov
mov
add
push
xor
fcoms
push
data16
push
adc
sub
jo
mov
dec
sub
cli
inc
mov
cs
adc
mov
shrl
lods
push
call
stc
mov
mov
pop
lahf
mov
cs
and
test
sbb
fsub
aaa
adc
dec
xchg
jb
dec
pop
repz
mov
push
stos
jg
adc
pushf
lds
jbe
push
cwtl
pop
xchg
cmp
loopne
xor
add
pop
adc
inc
pop
ret
dec
xchg
stos
arpl
jbe
enter
test
fwait
xchg
and
mov
aaa
sub
and
mov
addr16
mov
xchg
lods
outsl
js
rcr
xchg
or
jge
pop
mov
mov
xchg
mov
pop
inc
adc
dec
sub
dec
dec
mov
test
sub
lret
repnz
cmp
arpl
sub
mov
popa
cmpsl
lcall
mov
dec
pop
sti
out
xor
inc
outsl
sbb
cmp
add
hlt
out
push
add
sbb
sub
fstl
jbe
mov
cmc
push
inc
mov
in
mov
xor
sarl
adc
pushf
leave
mov
repnz
popa
mov
add
insb
ljmp
lahf
mov
jl
mov
test
push
push
popa
dec
inc
mov
loope
test
mov
fwait
lods
dec
lret
loop
roll
js
sub
or
mov
jecxz
aam
test
int3
or
fmull
pop
push
nop
sbb
and
push
mov
dec
add
xchg
push
mul
scas
inc
enter
sub
in
push
mov
push
xchg
sbb
loopne
adc
gs
loopne
jae
int3
sub
loope
lahf
push
jle
imulb
fisttpl
dec
aad
jnp
mov
push
jecxz
mov
and
shll
je
lcall
lods
cmp
test
imul
inc
xchg
inc
out
pusha
int
outsb
pop
add
xchg
nop
jmp
jg
subb
jle
enter
cld
jnp
pop
arpl
mov
daa
stos
aas
sub
jae
jg
cltd
insl
jmp
jp
adc
sbb
mov
adc
cmp
imul
cli
ret
test
insb
in
inc
movsb
mov
pop
jl
enter
out
mov
stos
bnd
and
xor
lds
loop
mov
mov
mov
lret
or
push
sub
push
and
pop
mov
mov
adc
scas
ficoms
dec
pop
in
outsl
cwtl
stos
push
inc
inc
inc
dec
cmp
xchg
sbb
out
int
push
in
mov
or
iret
or
andb
push
xor
stos
iret
push
inc
arpl
push
push
lahf
scas
jle
jge
pop
xor
fcompl
or
sti
inc
sbb
aad
leave
push
mov
popa
subl
ljmp
jns
ret
and
lret
aad
mov
inc
mov
hlt
mov
cmp
lret
pop
push
inc
dec
mov
aam
paddw
fisttps
cmpsb
sub
loope
mov
jmp
popa
das
clc
loopne
dec
mov
lods
in
iret
leave
lds
inc
das
insl
shll
rcrl
pop
inc
addr16
iret
jp
scas
jo
ret
aaa
cld
in
loop
sti
popa
inc
mov
outsb
paddd
or
xor
mov
cld
in
inc
adc
scas
lock
into
ljmp
sbb
les
outsb
jmp
jae
movsb
gs
enter
sbb
mov
call
cmp
es
push
inc
push
scas
pusha
dec
lds
loop
and
rolb
in
inc
cltd
ljmp
int3
sahf
inc
fmuls
out
gs
jg
jle
shll
inc
lods
loopne
pop
in
push
inc
pop
jno
clc
mov
push
push
bound
out
inc
loope
cltd
add
mov
jl
sub
pop
bound
ss
sbb
negb
cmp
rorb
or
sbb
inc
iret
xorl
jle
cld
sbb
cmp
adc
and
sub
cld
inc
inc
mov
inc
lahf
and
aad
push
mov
add
loope
jo
xor
lret
sarb
out
pop
outsb
test
jmp
lahf
subl
xchg
popf
scas
push
cld
orb
orb
ret
push
in
push
stos
xchg
xlat
gs
iret
cld
add
loop
push
in
inc
pop
movsl
mov
outsb
adc
ss
pop
adc
cmpsb
push
xchg
incb
ljmp
es
int3
mov
pushf
outsb
inc
loopne
ret
mov
inc
dec
jl
fmuls
mov
mov
push
mov
arpl
pushf
ret
inc
dec
jge
or
push
sub
bound
sbb
mov
shlb
cmp
stos
push
div
dec
adc
es
pop
outsl
jp
in
sti
orl
shlb
js
mov
xor
inc
xlat
daa
scas
mov
fldl
lcall
fdivrl
es
sbb
inc
ja
adc
pop
push
inc
sbb
xchg
aam
inc
mov
sti
jb
push
outsl
mov
jle
jnp
out
cmp
cld
imul
insb
dec
lods
mov
pop
dec
in
xor
mov
fwait
daa
enter
sub
mov
outsb
or
das
cmp
int
pop
fstps
jp
xor
mov
in
pop
aad
mov
push
int3
push
mov
fbstp
and
push
in
adc
insl
sti
mov
dec
xor
aad
and
cmp
inc
popa
int
push
into
dec
sub
scas
add
sbb
nop
mov
add
push
in
pop
xor
pop
repz
push
push
mov
out
hlt
imul
sti
xor
sbb
ja
lret
mov
fidivrs
dec
jecxz
mov
dec
jae
outsl
xlat
adcl
test
rcrb
fistps
mov
movsl
add
jmp
pop
mov
pop
inc
and
sbb
inc
jmp
xor
fildll
inc
and
test
inc
test
sarl
scas
andb
std
inc
mov
rcll
rorb
jno
insb
ret
andb
inc
xor
mov
sub
sub
es
test
mov
popf
sbb
dec
repnz
pop
pop
mov
jb
popf
icebp
rcll
scas
mov
cmp
mov
and
mov
movsb
jo
sub
pop
xchg
or
cwtl
xor
and
pop
sub
outsl
xor
mov
lcall
lret
mov
popf
dec
xchg
call
inc
js
out
popf
iret
jns
mov
or
and
pop
pop
sbb
and
dec
and
loop
stos
jb
scas
cmp
cmp
testl
out
bound
adc
pop
sarb
popf
sbb
gs
pop
push
push
out
fwait
stos
mov
std
inc
or
pop
sahf
cmp
popf
jb
sarl
imul
mov
cmp
into
mov
adc
mov
pop
jle
push
mov
shll
sub
cmp
pop
ret
and
loopne
fcompl
fucom
sub
add
scas
cmp
mov
ficoml
mov
cmp
pop
sub
jle
hlt
cmp
mov
inc
cltd
sbb
mov
push
cmp
sub
mov
fs
cmp
lea
insl
pop
or
scas
es
ret
fistpl
stos
stos
mov
xor
movsl
lods
pop
enter
pop
push
mov
jne
pop
xor
int3
push
das
mov
cmp
inc
ja
add
clc
jns
das
push
cmpsb
dec
jae
adc
int
push
cltd
and
mov
sti
loopne
shl
jge
aas
mov
and
jle
sub
push
jne
xchg
les
lcall
int
sub
jne
jne
pop
testl
fidivs
push
push
lds
add
xchg
hlt
push
leave
test
pop
jb
aam
add
sub
adc
outsb
data16
aas
cmp
jp
sbb
inc
imul
jle
xchg
jecxz
or
pop
out
push
mov
jecxz
xchg
arpl
sub
adc
xor
loopne
sti
mov
jo
xchg
xlat
les
cmpsl
push
repnz
lock
push
jmp
cwtl
pushf
sbbb
sti
fmuls
es
or
or
adc
popf
das
fldt
adc
sti
dec
ds
lret
test
out
add
push
sbb
mov
mov
sub
cmpsb
inc
aas
test
jle
insl
inc
int3
sub
xor
mov
test
push
gs
leave
push
jno
ja
sub
push
or
aad
arpl
mov
mov
test
sti
and
movsb
bnd
dec
dec
test
add
cmp
add
dec
movsb
pop
ljmp
pop
dec
sub
pushf
jg
imul
fs
shr
and
call
fwait
int
and
orl
dec
dec
in
enter
addr16
fs
jb
test
fcom
jne
mov
daa
add
mov
fmul
push
arpl
inc
popa
pop
rolb
test
inc
xor
out
out
or
add
pop
cmpb
ret
and
or
pusha
cmpsl
ljmp
data16
fwait
imul
js
push
mov
or
pop
lcall
cli
iret
pop
mov
inc
cmp
and
out
sbb
add
pushw
es
or
cwtl
outsl
pop
leave
es
mov
mov
fidivrs
int3
cs
fidivrl
loope
cmp
dec
mov
and
loopne
loop
xchg
inc
int3
pop
jle
out
push
mov
adc
std
push
sbb
xor
push
push
movsl
mov
inc
pushf
je
mov
xor
aam
mov
jbe
movsl
pop
into
mov
cmc
or
xchg
dec
jno
mov
shlb
dec
jbe
xchg
das
or
xor
sahf
nop
ja
pop
push
dec
scas
xchg
lea
loop
and
into
jnp
cltd
and
jns
sbb
and
sbb
cmpl
test
outsb
cmp
in
sbb
sarb
xchg
sub
xchg
add
mov
sbb
clc
pop
mov
aad
int
mov
mov
and
or
jp
lret
sti
add
push
ficoms
shrl
mov
adc
sbb
xchg
sub
push
out
cwtl
jae
lcall
pusha
cmp
push
xchg
mov
mov
mov
mov
out
pop
frstor
into
mov
pusha
adc
adc
add
push
call
into
mov
ret
outsb
add
jmp
lods
jns
push
jmp
mov
pop
iret
cmp
dec
fidivl
inc
cmp
sbb
pop
adc
rorl
int
out
lods
and
xor
cmp
in
adc
sti
sub
aaa
and
xor
fisttpl
icebp
sbb
xchg
inc
jg
xchg
and
push
and
sub
and
mov
insl
push
adc
ds
roll
or
and
pop
pop
mov
cmp
xchg
int
push
jo
xchg
shl
xchg
ljmp
insb
sahf
dec
loop
mov
fsubp
out
aas
mov
lds
xchg
inc
adc
inc
xchg
jnp
sub
adc
cmpsb
in
mov
lcall
mov
insb
sti
xchg
cli
sub
dec
cmp
lds
aaa
imul
in
push
mov
adcb
std
jbe
cli
ja
sub
cmpb
xchg
pop
sahf
push
dec
test
dec
imul
mov
mov
ficoml
fwait
popa
sub
adc
lods
out
ss
cmc
xor
pop
mov
bnd
ret
mov
fcmovnu
or
test
lea
fldenv
inc
jle
mov
test
cmp
cmp
arpl
popa
mov
jp
mov
adc
icebp
xchg
das
xlat
test
jnp
adc
push
inc
inc
xor
loopne
lods
sbb
xor
rol
dec
sub
in
xchg
and
xor
sbb
cmp
test
ss
loope
jge
sbb
scas
inc
add
xchg
sti
dec
into
cs
push
push
movsl
jae
rorb
jmp
scas
push
push
mov
rorb
lds
ret
in
fwait
clc
mov
aaa
inc
ja
add
inc
jbe
into
dec
jge
push
pop
out
cmpsb
mul
dec
xor
xchg
mov
xor
icebp
mov
out
stos
mov
int3
nop
in
decb
and
mov
cltd
jo
and
mov
movsb
paddsb
loope
pushf
pushf
int3
hlt
mov
cli
mov
roll
lock
dec
inc
xlat
sbb
jecxz
fdivrp
movsb
mov
insl
or
in
ja
fwait
jg
xchg
push
xor
fstpl
jbe
sbb
mov
xor
dec
outsl
pop
aas
mov
xchg
cld
lods
das
ja
or
div
lock
js
cs
sub
loope
daa
or
sub
or
xchg
or
out
and
jmp
loope
scas
imull
cmp
push
xlat
mov
inc
pushf
pusha
mov
lds
incl
adc
lahf
scas
sbb
inc
jne
mov
cmp
or
pop
lret
sahf
mov
lcall
cmpsb
sub
cmp
push
imul
cmp
mov
out
cmp
fs
inc
xor
pop
pushf
cmp
jg
fdiv
mov
jmp
imul
fwait
push
mov
and
or
xchg
pop
insb
sbb
insb
mov
pop
mov
dec
ffree
sbb
js
cmpsl
sti
rdmsr
aaa
xchg
mov
push
int
pop
cmpsb
cltd
push
rorl
shrl
stos
in
inc
sub
jno
pcmpgtb
fwait
inc
aas
lea
fucomi
cltd
in
inc
xchg
mov
jo
nop
in
lret
fisubrs
mov
ds
add
repnz
clc
add
mov
ret
sbb
cld
xchg
aad
lcall
into
lret
ss
or
mov
scas
push
mov
xchg
jb
mov
add
mov
arpl
add
xchg
jnp
cltd
xchg
movsl
call
dec
mov
add
jmp
mov
mov
push
mov
outsl
test
stos
pop
pop
loope
jg
jge
add
add
inc
adc
addr16
adc
mov
mov
je
mov
out
inc
cwtl
lahf
sub
jbe
js
in
inc
out
adcb
test
pop
scas
movsl
mov
sahf
push
mov
into
sbb
cs
xor
stc
les
jge
clc
sahf
sbb
jecxz
mov
data16
xchg
jge
pushl
add
int3
call
pusha
add
in
fwait
xchg
je
ds
rclb
push
xchg
jge
leave
lea
push
mov
lds
adc
cmpsl
repnz
add
mov
aas
js
lods
les
in
out
mov
mov
or
scas
sbb
lret
jl
mov
jnp
jo
add
push
dec
dec
pop
mov
aad
sub
leave
mov
stc
xor
fiaddl
sbb
cltd
cmp
leave
nop
les
imul
stc
cmc
dec
xorb
cmpsb
rorb
rorl
xorl
and
mov
xchg
push
jbe
or
mov
aad
cwtl
dec
stos
sahf
ret
mov
test
ss
mov
sub
into
stos
sbb
pop
roll
or
push
shrl
pop
arpl
jmp
xchg
inc
sbb
xor
or
rcll
mov
push
bnd
add
mov
lret
jne
ds
lock
add
aad
ljmp
xor
or
jmp
or
jno
test
cmp
int
pushf
imul
jmp
pop
pop
and
xchg
call
mov
orb
pop
cmp
inc
sub
dec
pop
xchg
pop
jecxz
dec
and
stos
and
push
gs
inc
add
scas
outsl
gs
int
mov
push
call
jl
inc
std
dec
mov
insb
mov
mov
scas
std
xchg
inc
push
pop
adc
std
fmull
mov
aad
addr16
std
sub
xchg
lods
xchg
add
lret
and
push
aas
push
xor
cmc
push
pop
mov
jnp
pop
pop
test
mov
les
repnz
gs
rorl
loopne
data16
sti
add
nop
in
sahf
mov
out
mov
popa
fdivs
mov
jnp
fcmovb
insb
leave
jnp
xchg
dec
repz
lea
cmp
pop
mov
out
sbb
sub
cmp
in
add
lds
push
pop
stos
inc
in
and
cmp
mov
aaa
mov
inc
and
mov
pop
inc
sub
das
mov
sub
jmp
int
pusha
lods
adc
xlat
or
outsl
xor
lock
leave
mov
mov
xchg
adc
stc
arpl
inc
fldpi
stos
xor
or
cmp
xchg
nop
xorl
out
xchg
test
sbb
adc
jmp
add
int3
sbb
std
push
xchg
ljmp
mov
push
inc
les
xorl
into
mov
adc
push
mov
sbb
imul
mov
fcomp
sti
inc
movsl
cmpsl
sub
xchg
adc
or
scas
aaa
pusha
sbb
mov
loope
mov
std
mov
cli
loop
or
mov
inc
push
xlat
js
lret
scas
popf
mov
adc
outsb
bound
iret
add
mov
cld
ss
pop
jmp
movsb
dec
and
fcoms
sbbl
xchg
or
or
cmp
mov
in
cli
push
adc
shlb
adc
push
cs
jbe
xchg
sbb
inc
and
jge
inc
cmp
jg
stos
add
add
inc
add
repz
inc
in
mov
pmuludq
xor
jb
sub
fsts
mov
cmpsl
rcr
sbbb
mov
daa
mov
mov
push
gs
nop
sub
or
je
jp
scas
aad
xor
rcrl
jb
fisubs
or
inc
pushf
sub
push
js
out
pushf
in
mov
lret
lods
loopne
andl
stos
fnstenv
sub
addl
xor
mov
cld
std
imul
cmp
shll
pop
adc
pushf
imul
dec
fwait
mov
in
imul
push
out
mov
popa
cmp
xor
movb
sub
in
xor
xchg
mov
sbb
mov
adc
mull
iret
mov
mov
pop
dec
mov
orl
sar
cmp
xchg
or
xor
xchg
popa
notl
lret
test
jne
stc
imul
das
roll
jns
xchg
insl
out
mov
lahf
adc
cmp
fs
push
test
dec
fnstsw
jg
push
mov
mov
mov
stc
mov
push
call
popf
push
mov
dec
aad
lea
xchg
ficoml
add
push
int
adc
xchg
mov
out
and
push
mov
sub
mov
mov
xchg
sti
dec
mov
enter
mull
sub
shll
ds
adc
xlat
pop
xchg
daa
inc
ret
in
cmp
push
mov
in
push
sub
sub
add
rol
iret
pop
push
fs
into
mov
sub
rcrl
xchg
push
xor
xor
inc
fisubs
push
inc
dec
dec
mov
dec
dec
push
test
ret
sbb
jle
roll
sbb
fcompl
mov
popa
mov
inc
push
rorl
dec
or
sbb
stc
addr16
mov
xchg
sub
push
mov
xchg
loope
xorb
pop
out
or
and
pop
cmp
mov
jno
jl
lods
jno
orl
or
mov
call
roll
lea
outsl
inc
out
xchg
adc
pushf
pop
rcll
iret
mov
fsubs
dec
xchg
sub
sbb
int3
popa
push
pop
inc
shl
lcall
bound
std
inc
xchg
movsl
rclb
subl
or
mov
push
sti
dec
push
in
call
dec
jmp
aad
sbb
xor
std
inc
xchg
sbb
cmp
les
sti
popf
fldcw
xchg
and
xor
lds
mov
sti
sahf
pusha
or
testb
fstpt
lahf
fcmovnb
or
push
out
movsb
mov
or
push
jmp
push
add
jecxz
mov
pop
fcmove
xor
inc
jl
out
add
in
mov
out
lahf
jle
sbb
push
cli
push
out
fdiv
jp
sti
adc
test
xchg
lahf
or
fldenv
imul
push
or
xchg
pop
and
mov
fbld
loopne
push
das
popa
xchg
pop
pop
arpl
cmp
out
pop
ljmp
cmp
fucomip
push
dec
xor
inc
loop
push
fwait
mov
and
jnp
subb
mov
out
add
xlat
sub
pusha
or
outsb
scas
jne
ficoml
jmp
popf
fsubp
dec
cltd
push
jb
lods
sbb
aaa
lds
out
rcrb
dec
cmp
andb
ret
push
push
popf
inc
push
rolb
shl
mov
dec
push
pop
mov
fisttpl
dec
dec
lcall
cmpsl
jp
in
cld
add
xchg
pushf
jp
push
dec
jl
in
xchg
mov
in
dec
mov
dec
sbb
pop
scas
pop
clc
mov
aas
aas
push
jl
pusha
scas
in
lds
movsl
dec
cli
and
popa
les
icebp
inc
rcl
sub
sub
paddusb
mov
dec
roll
jae
sbb
dec
push
rcrl
pop
and
push
pop
not
add
clc
das
mov
xchg
in
dec
sbb
mov
wrmsr
sbb
jmp
or
push
add
out
xchg
add
jne
fadds
cmp
int
add
push
aas
out
sbb
cmp
sbb
and
loopne
imul
pushf
add
pop
push
sbb
movsb
adc
cmp
add
pop
adc
xchg
iret
les
and
or
lods
iret
shlb
xorl
push
pushf
pop
jne
bound
sbbb
fidivrl
stos
mov
lret
std
pop
jmp
and
pop
push
sbb
mov
fwait
mov
add
ja
sbb
pop
or
pop
ds
inc
pop
ljmp
aam
fs
into
daa
dec
ret
or
xchg
pop
scas
shrb
das
out
fbstp
shll
pop
aad
rorb
push
stos
cmpsb
jmp
fcompl
dec
ds
stos
sbbb
lds
ljmp
cltd
cld
cltd
clc
lahf
ss
push
jo
dec
mov
jns
out
ja
hlt
cmp
into
pop
cmpsb
les
movsl
popl
nop
xchg
lods
or
cmc
in
dec
or
pop
je
xchg
push
rcpps
xchg
lods
cmp
add
or
pop
lods
jge
pop
sbb
pop
stos
popf
xor
icebp
test
push
add
out
orl
out
les
and
lret
mov
cs
in
cltd
ds
fimull
std
push
test
test
stc
cmc
sub
pop
pushf
je
cmp
pushf
fisttps
shlb
mov
jb
adc
outsb
mov
cld
cltd
insl
push
push
mov
mulb
adc
mov
pusha
stc
inc
push
movaps
testb
mov
insl
dec
repnz
inc
add
xor
fcompp
shl
divb
rcl
call
fbld
fwait
cs
mov
xor
rorb
push
xchg
imul
cld
in
push
loop
divl
test
xor
out
jmp
pushf
ljmp
aaa
jbe
icebp
jae
xchg
cmp
inc
push
pusha
jnp
and
add
inc
popf
aas
je
adc
cmp
fisubs
mov
insb
push
movsb
xor
mov
je
xchg
mov
dec
inc
test
outsl
pop
lods
ret
xor
arpl
data16
es
jns
ds
xchg
sbb
imul
push
mov
xchg
xchg
sub
mov
xlat
roll
cmp
push
leave
xchg
xchg
shll
xchg
jnp
and
sub
and
addr16
inc
sub
shl
dec
stc
inc
add
adc
cli
pop
inc
lock
cmp
inc
fcmovnb
dec
and
ja
out
rcrl
in
xchg
and
dec
push
add
xor
inc
dec
sbb
call
repnz
jne
adc
jne
int
inc
push
mov
movsb
jp
js
mov
pop
loopne
adc
sbb
fnstcw
fsubl
mov
fistl
es
int3
dec
push
and
add
rcr
jae
es
loope
loop
add
xor
push
fcomps
lahf
sahf
cmc
mov
add
rcrl
dec
dec
and
leave
movsb
push
mov
movsb
std
insb
jge
mov
insl
pushf
cmpsb
mov
adc
insl
pushf
lods
dec
and
xor
stos
push
sub
pop
inc
add
cmp
mov
lods
xchg
and
jo
std
int
xchg
cwtl
mov
pop
iret
scas
repnz
cmp
ds
cmp
mov
add
cmpsb
sbb
fidivl
nop
pop
shl
jp
add
test
movsl
xorl
cmc
cmp
jp
mov
xchg
jmp
jnp
mov
loope
push
push
cmp
lods
pop
out
pop
push
pop
loope
fcmovu
push
push
lret
bound
sbb
add
inc
ret
mov
cltd
or
jg
repz
mov
add
fdiv
sbb
jb
jnp
es
jmp
mov
ficoml
mov
rclb
adc
xchg
fadds
xchg
fsubs
mov
popf
push
and
and
xchg
pushf
test
inc
sub
push
xchg
xor
sub
jb
xchg
aam
rcll
jl
mov
adc
push
push
sbb
out
xor
sub
jge
fidivl
mov
into
push
xchg
add
sbb
in
faddl
rcll
inc
mov
xchg
popa
inc
push
or
int3
fiaddl
push
mov
fnstsw
or
and
fdivrl
call
jp
in
cltd
int3
xor
dec
sub
call
or
sub
aad
and
jmp
jb
pop
sahf
push
cli
xchg
ret
leave
dec
arpl
mov
sub
dec
push
mov
out
mov
mov
sub
push
cli
pop
scas
xor
in
dec
jl
push
inc
jmp
cmp
jne
rorl
scas
les
inc
stos
ret
or
jnp
sub
sbbb
shr
dec
loop
bound
fldt
or
dec
sbb
jp
dec
aas
push
xor
cmp
std
aaa
insb
call
cltd
cli
aam
add
mov
addr16
sti
push
int
sub
jge
pop
adc
sub
push
cmp
out
or
sub
fbstp
js
xlat
addr16
jnp
mov
fs
dec
lcall
imul
xchg
pusha
clc
or
xlat
inc
mov
xlat
gs
div
mov
cmp
jg
mov
loopne
ss
ret
test
lds
sub
mov
std
sti
sbb
push
test
mov
cmp
js
in
stc
stc
push
pop
daa
dec
push
inc
dec
adcl
mov
test
mov
push
dec
scas
lea
addl
and
cwtl
mov
add
test
add
sub
or
fnstsw
cs
loope
cmpsl
inc
out
xchg
loopne
push
jp
and
dec
jns
sahf
flds
cmp
or
jp
aas
dec
pop
insl
cli
cmp
fwait
mov
hlt
inc
outsl
xchg
dec
mov
push
inc
cltd
lahf
call
sbb
mov
aad
ds
or
leave
sub
lret
adc
jle
xor
sbb
aaa
dec
mov
cmpsb
xor
in
aad
and
push
repnz
aas
scas
pop
out
and
lds
aam
xorl
clc
adc
push
cld
mov
cmp
xchg
fldenv
or
push
add
scas
pop
sbb
push
iret
jmp
and
lock
pushf
xor
inc
dec
movsl
mov
or
sti
add
out
fisubl
fadd
ret
jns
mov
lea
icebp
pusha
mov
cmp
xor
pop
push
out
jne
mov
xchg
adc
cs
movsl
inc
ds
mov
push
mov
nop
outsl
and
cmpsb
call
xchg
adc
sub
sbb
lahf
test
lods
fisttpl
outsl
inc
pop
ljmp
dec
push
sub
push
push
dec
mov
jp
xor
insl
xor
cmp
test
lock
xor
push
sub
jp
mov
cmp
adc
and
out
insl
je
int
lret
dec
loop
jle
icebp
push
adcb
push
push
aam
testl
mov
push
adc
dec
mov
jns
stc
insb
and
ds
mov
mov
dec
cmp
cmp
adc
test
cmp
mov
ffree
push
mov
jg
lcall
inc
lock
cmovae
movsb
jne
loope
imul
dec
pop
lahf
in
sbb
mov
sbb
inc
outsb
les
dec
arpl
xchg
aas
pop
cmp
loop
cmp
jge
push
mov
pop
dec
repz
lods
pop
stc
adc
ret
add
pop
int
mov
pop
notl
ss
rolb
cmp
adc
jecxz
scas
fcomps
dec
mov
lods
int
sahf
mov
movl
xchg
scas
in
notl
js
mov
test
sti
or
xchg
ds
loopne
pop
pop
lods
adc
je
pop
push
pop
push
or
es
push
insb
pop
data16
call
dec
push
adc
xor
or
mov
fstpl
xchg
and
or
sub
rcr
divl
sbb
cmpsl
jge
or
inc
sti
ss
or
idivl
mov
call
ror
pop
orl
dec
add
cwtl
pop
in
add
lcall
inc
mov
inc
call
inc
lods
and
arpl
lret
sti
jb
out
or
std
out
push
sbb
xchg
push
dec
sub
xor
push
sti
xor
mov
aaa
pop
push
mov
adc
push
and
dec
pushf
mov
std
repz
jmp
pop
inc
lret
sbb
and
jl
ss
cld
stos
sub
add
enter
mov
scas
sub
test
xchg
sub
adc
movsb
lret
jl
test
arpl
int
loope
sbb
faddp
cld
test
hlt
add
push
test
cli
xor
test
xor
push
jb
dec
or
nop
orb
fistl
sbb
in
repz
cmp
push
jmp
mov
rcrl
loopne
call
ss
rcll
add
mov
xor
fwait
cmp
adc
sub
loope
sti
and
cmpb
mov
cmp
movsb
jecxz
sbb
outsl
cmp
add
jecxz
inc
addl
mov
jl
jp
and
rolb
add
mov
mov
int3
cli
fnsave
lret
jl
xor
jp
cmp
ret
adc
jne
or
movb
lret
and
ljmp
sbb
mov
into
int
push
mov
icebp
push
push
dec
inc
mov
push
lcall
inc
pop
jb
movsl
in
in
int3
adc
mov
out
scas
fldenv
fistpl
rcll
jecxz
mov
xchg
aam
cmpsb
mov
xchg
push
daa
movsb
pop
scas
rorb
into
mov
adc
sub
negl
loopne
rcrb
xchg
rcrb
test
jo
jnp
cmc
xor
leave
dec
sub
roll
enter
dec
add
ret
xor
lcall
dec
xchg
pop
mov
mov
fdivs
xor
je
cmp
cmp
psadbw
adc
mov
cmp
or
adc
icebp
inc
sub
nop
gs
adc
lret
pop
mov
mov
cmpsb
stc
pop
mov
dec
and
jnp
sub
jb
push
in
adcl
dec
push
pushf
jo
ljmp
jmp
push
jbe
add
jae
add
addr16
bound
push
xchg
stos
dec
jne
inc
dec
dec
mov
cmp
or
or
jmp
std
popf
bound
ja
mov
sub
fbstp
aam
paddusb
sub
jbe
popa
push
mov
rcll
inc
lcall
sbb
leave
inc
cli
arpl
mov
call
in
mov
rorl
mov
fcompl
inc
aaa
shll
adc
mov
call
dec
cmpsl
lcall
add
rolb
cmp
mov
inc
out
xor
add
sub
push
push
mov
sbb
in
mov
test
dec
cmpsl
clc
cs
testl
sub
or
dec
jne
pop
out
or
mov
fldcw
das
outsl
std
pushf
lock
push
test
je
pusha
cmp
sahf
push
in
pop
hlt
adc
push
jb
aaa
sbb
mov
out
jb
ss
xchg
movsb
mov
in
jbe
fadds
pop
fimull
dec
or
pop
inc
and
adc
out
and
loop
fsubrs
sbb
dec
or
sti
push
mov
adc
push
decb
scas
add
icebp
outsl
fcom
iret
xlat
jbe
xchg
daa
sbb
or
mov
push
movsl
popa
mov
sbb
ja
pop
in
call
mov
fcoml
mov
lret
aam
fidivs
jo
push
push
sub
sbb
gs
or
xchg
adc
mov
cwtl
jle
frstor
jno
inc
pop
sub
push
xlat
dec
fcomps
loop
push
fnstenv
push
pop
cs
pop
and
lods
rorl
jo
pop
adc
sbb
adc
ljmp
sub
xchg
jnp
or
fisubl
inc
lods
sub
repnz
cmpsb
mov
popf
sub
inc
dec
jmp
loope
pop
out
dec
mov
adc
sahf
dec
andb
cmpl
jp
out
test
ffreep
xchg
data16
mov
and
lret
pop
adc
inc
or
imul
xchg
jl
push
dec
jmp
cmp
pusha
out
daa
into
aad
inc
lahf
repz
sbb
mov
dec
fisttpll
dec
dec
int
or
rcrb
inc
push
ret
sub
mov
fdivrs
fmulp
sbb
scas
sbbl
push
lret
and
sub
mov
das
test
faddl
ret
sbb
popa
imull
add
push
cmp
out
ljmp
mov
inc
add
andb
negl
lea
sub
and
xchg
cmp
lahf
add
mov
clc
adc
add
jns
sub
lock
mov
out
sarl
mov
pop
rol
fwait
call
call
cld
int3
adc
mov
mov
aam
popa
shrb
hlt
add
in
cltd
aaa
adc
aad
data16
jbe
cs
and
xchg
mov
add
mov
jns
jecxz
je
scas
xchg
pop
shll
rolb
push
lahf
dec
inc
cwtl
xchg
inc
nop
mov
jmp
loope
push
inc
cmp
scas
dec
lods
add
mov
pop
stos
adc
out
fs
and
and
clc
imul
xor
mov
divl
jle
push
out
sub
cmp
inc
lods
cmpl
cmc
and
sub
adc
out
or
xor
cmp
cmp
cmp
or
out
or
inc
pop
or
mov
les
fsubrs
jl
xchg
cmc
fsts
inc
clc
repnz
cmc
push
mov
andl
cltd
out
add
shll
inc
rcrb
shrl
fstl
xchg
das
scas
out
movsl
insb
adc
out
jg
dec
cld
jno
push
sarb
add
fyl2xp1
inc
mov
in
test
mov
sub
sahf
inc
ret
sbb
push
mov
sbb
leave
xchg
cli
xchg
in
xor
stos
jno
and
ds
shlb
push
xchg
and
mov
jle
inc
add
test
jb
cmp
movsl
xor
jns
cmp
movsb
push
aas
mov
lods
push
xlat
stc
repz
adcb
gs
jno
dec
mov
push
filds
out
and
jecxz
int
or
jecxz
mov
movsl
inc
mov
push
xadd
adc
push
movsb
mov
jne
mov
adc
add
xor
aas
sbb
push
cmc
push
dec
cmpl
mov
pop
fnstsw
sahf
xor
mov
imul
xlat
cmp
jecxz
mov
push
loop
pop
xor
test
dec
loop
fwait
xchg
xor
pop
xchg
mov
adc
push
dec
hlt
push
adcl
mov
and
jmp
test
cmc
mov
movsb
movsb
push
pop
fstpl
mov
into
ret
cld
push
dec
cltd
imul
xchg
adc
das
dec
idivb
sti
xor
testl
inc
add
lret
arpl
nop
dec
enter
sub
addr16
mov
adc
and
in
ficoml
call
ss
movsb
sbb
jmp
rcrb
sbb
ret
xchg
sub
mov
ror
bound
ss
rorl
add
sbb
xchg
or
or
std
popf
pop
dec
mov
cmp
xchg
add
dec
lret
sbbb
mov
not
jmp
shrl
scas
mov
and
dec
adc
jns
int
icebp
ja
popf
subb
daa
push
imul
and
nop
int3
ret
fisubs
inc
sbb
push
mov
sbb
insl
sub
cwtl
xchg
sub
sbb
xor
pop
mov
aas
sbb
add
add
pop
scas
pop
mov
push
hlt
jl
jg
push
fcmovnu
xchg
push
lcall
subl
pop
out
jmp
push
je
xchg
pop
ret
lret
mov
sbb
andl
mov
cmp
inc
mov
add
dec
mov
mov
scas
dec
dec
sbb
jp
jg
pop
push
je
data16
dec
fsubs
mov
je
dec
arpl
shlb
iret
sub
arpl
mov
push
xchg
fldl
in
jmp
psadbw
jmp
das
sbb
icebp
xor
mov
add
sbb
pop
mov
test
test
insl
or
cmp
jns
push
cmp
push
jo
lcall
mov
add
popa
dec
dec
adc
xchg
repnz
pop
sbb
jbe
daa
mov
jmp
jmp
sub
hlt
push
sub
push
fs
jmp
fwait
cs
stc
mov
out
inc
sub
cmp
cmp
dec
insb
dec
xchg
jae
mov
jle
arpl
pop
ret
adc
je
push
sbb
ljmp
jmp
mov
jo
pop
lods
lcall
push
test
rolb
popf
shll
sbb
fidivrl
pop
lret
mov
pop
fsubrl
idivl
loop
mov
insb
clc
xor
mov
or
sbb
decb
clc
or
and
pop
int3
pop
ret
or
rcrl
inc
aas
mov
mov
cmpsb
xchg
pusha
sbb
and
fucomi
cmp
adc
movsl
mov
pushf
ffree
dec
or
scas
stos
pop
mov
sub
pop
push
adc
mov
jg
push
aaa
or
hlt
daa
test
sbb
jle
jae
sub
inc
add
shrb
fsts
inc
ret
sbb
insb
dec
mov
mov
outsb
add
pop
mov
sub
outsl
out
inc
push
jae
fstpt
cmp
out
mov
pop
and
mov
enter
push
push
cwtl
inc
cmp
xor
lret
adc
push
decl
nop
ljmp
pop
std
stc
add
cld
sbb
mov
sub
xlat
mov
push
mov
mov
xor
lcall
cmp
lds
and
out
xchg
mov
out
shl
xchg
insl
arpl
push
in
ret
sbb
es
xor
loope
out
xor
repz
add
aam
dec
fstpt
add
cmp
adc
popf
idivl
in
sub
pop
mov
sub
push
xchg
add
cmpsb
jge
divb
sub
sarb
lock
pop
ss
out
sbb
push
bnd
out
inc
xchg
push
lods
ret
fistps
mov
repz
in
lock
dec
add
mov
scas
mov
cli
insb
pop
push
addl
pop
ficomps
fst
mov
out
sub
pusha
sbb
fsubs
std
dec
xor
or
mov
mov
push
aaa
mov
xchg
negl
mov
xchg
nop
sbb
popf
sbb
call
push
rolb
pop
xchg
rcrl
adc
sti
mov
cmp
xor
xchg
das
and
fnstcw
popf
imul
addr16
and
sub
mov
sahf
mov
ret
push
push
out
shll
add
fdivp
jle
or
outsb
fildl
test
lcall
adc
es
cmpsl
xchg
ja
fs
fdivrl
mov
aaa
jo
pop
mov
pop
das
stos
mov
mov
pop
inc
roll
cmpsl
push
xlat
andb
pusha
inc
pop
sub
addr16
sub
xchg
jecxz
lds
mov
mov
sahf
and
rorb
pop
jne
data16
mov
popf
repnz
adc
lahf
and
adc
testl
and
int3
inc
ficoml
adc
push
mov
sub
pop
add
inc
aam
dec
insb
mov
jb
jge
gs
aad
insb
out
cli
adc
insb
popf
xchg
call
lcall
clc
popf
sarb
lods
xlat
cmp
mov
ret
jb
jnp
and
fdivr
movsl
xchg
les
cwtl
filds
xor
mov
arpl
sbb
or
jg
scas
fsubrs
or
aas
ror
fldl
stc
jo
push
aaa
ljmp
ja
inc
pop
push
outsb
mov
or
xor
fadds
push
adc
std
gs
xor
xchg
push
insl
mov
imul
add
aad
std
ljmp
adc
pop
inc
inc
inc
repnz
fwait
std
dec
jmp
xchg
cltd
pushf
jg
hlt
test
push
add
mov
cld
and
in
or
xor
or
sub
pop
int
jo
jno
inc
sub
inc
jnp
fcoml
pop
jmp
cmp
lds
stos
enter
enter
inc
lret
mov
jl
mov
bsf
outsb
or
in
fimull
jns
pusha
sti
cmp
fsub
pop
mov
das
or
pushf
jbe
jne
cmc
sub
andl
lea
mov
add
aad
out
push
call
sahf
into
and
dec
nop
add
lahf
idiv
sub
adc
add
out
push
out
imul
or
and
js
std
cmp
jae
jle
dec
mov
sbb
push
out
push
cmp
xchg
and
hlt
sbb
mov
test
inc
js
xor
mov
hlt
mov
out
cwtl
add
adc
test
mov
hlt
fcoms
inc
push
into
movsb
ljmp
mov
lds
add
sub
je
sar
lock
push
das
sbb
cmp
stc
ja
aad
out
out
addl
in
inc
push
mov
je
adcb
stc
sbb
push
in
popf
nop
mov
stc
repnz
lea
mov
mov
jne
sub
enter
iret
inc
sub
loop
out
push
cmp
dec
cmp
filds
ret
insb
xor
jl
adc
fwait
push
xchg
out
les
push
adcb
adc
jl
mov
shrb
add
clc
sarb
ja
shrl
scas
mov
clc
stc
add
stc
dec
in
xor
and
jmp
insb
add
ror
cmpsb
push
lahf
daa
aad
scas
mov
xor
xchg
loop
out
outsb
cmp
mov
mov
lcall
lahf
repz
lcall
add
and
aas
xchg
add
mov
dec
xchg
addb
ret
outsb
test
addr16
mov
cmp
mov
loopne
cmp
xchg
clc
aas
mov
out
mov
sbb
addl
mov
call
xchg
sub
mov
fsubp
sub
pop
call
mov
cwtl
cld
or
push
imul
icebp
dec
adc
dec
out
lret
push
loop
push
jb
add
aam
jae
je
fwait
daa
fwait
inc
sbb
rcrb
lods
cli
add
cmp
inc
out
sub
leave
fucom
stc
pop
xchg
jl
inc
or
in
sbb
fdiv
mov
les
pop
rclb
xchg
aam
xchg
mov
and
mov
mov
add
out
mov
mov
lock
inc
push
cltd
rorb
pop
xchg
mov
pushf
je
lcall
lods
fcmovnbe
mov
mov
jmp
test
test
fiadds
mov
in
adc
bound
jnp
in
pushf
aaa
xor
xchg
push
cmp
and
mov
add
out
push
jb
jns
push
mov
xchg
arpl
xchg
repz
fs
xchg
sub
int
cld
mov
sub
sub
xchg
or
in
lods
add
cmp
leave
adc
les
cmp
fwait
xchg
xchg
sbb
dec
andb
inc
mov
in
sbb
or
jbe
movsb
mov
sbb
add
sbb
inc
jbe
or
mov
imul
mov
cmc
sbb
add
push
cmp
sub
ja
mov
push
inc
out
xchg
add
adc
or
fdiv
das
je
mov
arpl
and
aas
rcrl
scas
mov
mov
arpl
and
adc
stos
mov
pop
mull
std
imull
mov
mov
mov
rolb
testl
rcrb
xchg
cwtl
and
mov
pop
mov
rorl
cltd
jecxz
sbb
shl
or
cmp
rcll
xor
pop
mov
dec
inc
jae
enter
xchg
mov
pop
mov
dec
xchg
aam
adc
cmp
and
or
sbb
ret
add
mov
xchg
xor
out
in
xchg
js
pushf
mov
and
dec
je
data16
into
jns
sahf
adc
adc
sbb
pop
bound
xchg
inc
push
mov
test
xchg
test
ret
pop
ljmp
lock
iret
mov
lahf
mov
enter
loope
mov
out
mov
lds
push
les
and
mov
scas
mov
or
add
pop
pop
inc
push
xchg
dec
in
sti
jo
test
xchg
test
inc
movsb
jb
mov
mov
sbb
imul
imul
addr16
les
lods
mov
test
mov
inc
arpl
cmp
movups
and
lods
sahf
mov
push
mov
adc
dec
shlb
jne
pop
jmp
jg
faddl
adc
add
mov
dec
and
push
out
jp
pop
inc
or
pop
pushf
xchg
dec
mov
and
addr16
cmp
cld
xchg
or
test
ret
adc
imul
jge
jl
dec
dec
xor
repz
addl
push
negl
fcos
popa
mov
jg
movsl
pusha
jge
nop
bound
out
jno
enter
jge
inc
adc
aas
mov
das
popa
inc
inc
into
add
push
imul
or
pusha
sub
in
sbb
mov
fsubr
adc
js
popa
add
inc
cmp
pop
mov
lcall
mov
adc
outsb
push
data16
sahf
adc
pop
push
movsl
adc
push
decl
in
adc
into
mov
jmp
add
mov
add
adc
ljmp
enter
popa
scas
jg
repnz
push
ja
pop
popf
orl
xorl
loop
sbb
dec
test
icebp
daa
and
adc
insb
int
xor
in
push
and
das
cs
sbb
mov
adc
cltd
jle
lds
push
sbb
add
or
call
jo
adc
push
test
movsl
les
sbb
push
test
cli
jo
mov
xchg
cmpsl
call
out
mov
stos
clc
mov
outsb
mov
sbb
push
icebp
sbb
xor
mov
cmp
jno
push
xlat
lock
mov
movl
dec
add
outsl
pop
jns
cmp
negb
cmp
add
add
lahf
cwtl
or
in
in
and
stos
fs
push
filds
mov
cmpsl
test
insl
in
aaa
in
jo
ljmp
ds
ja
aad
pop
add
insb
pop
push
fsubrs
or
jne
jg
call
dec
pusha
ljmp
and
mov
cmp
movsl
mov
xlat
pushf
sbb
mov
or
push
push
adc
lods
mov
mov
sub
sub
into
cmpsl
xor
jl
test
mov
cmpsb
xchg
push
fistpl
sbb
or
je
adc
addb
mov
cmp
sub
pop
mov
pop
push
das
shlb
mov
or
sub
push
pop
jns
pop
jno
js
lcall
mov
push
and
fdivp
or
out
aaa
sbb
test
data16
push
js
shrb
add
adc
dec
repz
mulb
and
fstps
pop
jno
daa
dec
cwtl
add
sub
cmp
adc
out
xchg
fwait
inc
adc
outsl
sub
mov
sub
ljmp
shll
mov
push
adc
mov
cmp
dec
int3
ror
push
pushf
sbb
test
dec
adc
jnp
mov
test
jge
push
dec
jle
ljmp
mov
daa
shlb
repnz
xchg
das
cs
repnz
jo
sub
sub
aaa
xchg
xor
pop
out
mov
cmp
insb
dec
xor
leave
mov
add
imul
insl
test
mov
lock
gs
and
xor
xor
jno
mov
add
add
sahf
dec
cmpsl
stos
adc
jnp
fldcw
dec
out
mov
or
xchg
adc
pushf
sbb
lock
ljmp
inc
sub
xor
dec
fiaddl
fldenv
xor
jns
fisubrl
fmul
fsubr
xor
ret
cltd
sbb
sarl
stos
dec
add
std
inc
and
jg
mov
jae
add
sub
int
xlat
xor
mov
mov
test
or
push
add
xchg
cld
inc
scas
fidivl
jae
cwtl
xor
test
hlt
cmpsb
add
xchg
and
outsb
std
es
repnz
lret
pop
mov
inc
movsl
ret
push
add
arpl
jle
test
out
sub
push
adc
jne
cmpsb
mov
jl
insl
xchg
push
ljmp
adc
int3
lods
scas
mov
jae
fstpt
push
mov
xchg
push
sub
lds
mov
sub
inc
push
fstps
xor
lods
pop
xchg
push
clc
jns
mov
lock
mov
lahf
mov
add
lret
mov
cmpsl
scas
push
test
in
popl
push
cmp
das
push
clc
push
sbb
jge
xor
fsubrs
fmull
stos
les
dec
lods
inc
or
adc
jbe
int
xor
xchg
mov
clc
push
jmp
jb
loope
dec
jmp
mov
and
in
mov
mov
es
nop
mov
jecxz
mov
fmulp
shr
mov
jne
mov
and
xchg
adc
adcl
scas
repnz
sbb
jle
push
xor
imull
fstpt
xchg
lcall
inc
xor
das
cmp
ficompl
cli
je
cmp
stc
cmpsb
jns
cmpsl
insl
outsl
fnstenv
scas
insl
mov
push
inc
mov
adc
pop
stos
or
cmpsb
pop
add
mov
nop
sar
dec
lods
push
dec
mov
out
nop
out
out
add
push
sti
and
sti
dec
adc
xchg
test
adc
push
movsl
mov
add
and
mov
out
inc
int3
ss
pop
loop
pop
push
cmpsb
lahf
push
lock
push
mov
lret
and
lods
enter
in
dec
or
mov
inc
stc
jae
repnz
mov
les
mov
mov
pop
fisubs
sahf
shl
pop
dec
dec
xor
xor
push
fisubrs
pop
leave
inc
outsl
mov
mov
xor
jecxz
leave
dec
sub
mov
aas
xor
test
sbb
daa
mov
iret
rorb
dec
pop
cmp
lcall
sbbl
pop
pop
jns
ds
xchg
out
sub
push
jno
js
cmp
les
mov
xor
mov
dec
rorb
test
cld
lock
push
jecxz
test
push
push
mov
mov
jno
rorl
fisttps
cmp
aaa
mov
push
stos
jle
mov
cs
inc
int
testl
fstpt
popa
xchg
hlt
push
dec
in
lcall
mov
aam
add
aam
lahf
in
shll
inc
hlt
push
jne
lea
lret
and
pop
pop
mov
sub
cmp
rep
mov
jp
adc
mov
dec
gs
mov
mov
or
pusha
or
adcl
pop
call
sub
inc
repz
sarl
xor
pop
dec
add
rcrb
adc
sbb
adc
rcr
sub
mov
lret
frstor
pop
xor
aaa
and
mov
outsb
lahf
stc
mov
jo
mov
out
imul
movsb
cwtl
jo
ss
pop
sbb
ret
add
sbb
pop
mov
fs
addr16
test
out
sub
pop
sbbb
and
aas
jp
xchg
add
lcall
xlat
xor
cwtl
lret
in
jns
lret
mov
mov
xchg
xor
sub
or
arpl
out
push
add
adc
fwait
adc
push
scas
dec
dec
jge
out
dec
imul
xchg
cmpsl
insl
xchg
aad
xchg
lock
mov
lds
and
mov
sbb
iret
push
mov
pop
std
mov
mov
mov
mov
xor
push
mov
jbe
int
push
fs
mov
clc
inc
mov
pop
add
movsl
and
popf
loop
sbb
lea
iret
add
insb
add
xchg
loopne
jnp
pop
stos
rol
repz
and
jbe
and
arpl
push
fisubl
aas
mov
addr16
sub
jge
mov
push
mov
xor
push
fsub
lret
sbb
notb
jnp
add
mov
add
es
mov
sarl
frstor
stc
mov
in
adc
cmp
and
insl
scas
inc
inc
inc
xchg
in
push
setge
adc
jg
sbb
pop
pop
adc
xchg
mov
rcrl
test
mov
arpl
loope
push
mov
xchg
rorb
push
cmp
ficomps
testb
loopne
mov
nop
out
ret
sub
fdivr
pop
mov
xchg
xchg
push
mov
xchg
out
mov
mov
cmp
push
xorl
dec
aad
mov
pop
dec
adc
ret
test
sub
or
sbb
or
xchg
cmp
inc
jno
in
or
mov
movswl
mov
or
inc
xor
pop
pop
ds
push
frstor
push
sub
scas
inc
pop
mov
adc
or
stos
mov
jo
rcrb
mov
inc
fs
inc
mov
flds
lock
pop
sbb
inc
inc
inc
pop
gs
and
aam
jo
add
pusha
mov
out
add
out
pop
mov
xor
stos
pop
adc
pop
cmp
mov
or
imull
cs
or
aaa
push
jo
sbb
sbb
inc
data16
pop
lods
xchg
mov
pop
mov
fiaddl
test
pushf
mov
pop
arpl
add
arpl
pop
andl
inc
rcrl
int3
dec
icebp
inc
xchg
out
lret
lds
ror
enter
outsb
fisubl
shlb
ss
and
jge
mov
jg
divb
insb
shll
xchg
sub
clc
ret
arpl
nop
lret
shr
addr16
mov
daa
cs
inc
mov
mov
cmp
shrb
bound
scas
cmpsb
jne
aaa
cmc
mov
sub
cmpl
xorl
xchg
adc
out
ds
stc
sub
mov
ljmp
fsubrl
cmp
mov
cmc
mov
iret
cltd
dec
mov
dec
jge
aad
mov
mov
inc
pop
mov
add
or
cmp
test
cld
xor
xlat
or
xlat
mov
cmp
lea
jecxz
subb
sahf
mov
cvtpi2ps
lret
aam
push
mov
mov
dec
sbb
ljmp
insl
and
add
test
shlb
mov
jns
add
je
and
xor
or
xor
adc
sub
jle
adc
add
jae
loope
out
mov
sub
dec
rclb
push
dec
adc
mov
jge
lds
pop
sbb
test
adc
int
add
inc
mov
adc
push
pop
ret
enter
dec
test
and
lea
sti
push
lahf
imul
mov
sbb
mov
sub
fcompl
in
into
xchg
xchg
and
or
cmp
call
sbb
cmpsb
add
pop
mov
push
stc
mov
xchg
sbb
shll
frstor
int
nop
hlt
shl
pop
les
imull
loope
jp
addl
int3
jmp
cli
jns
stc
mov
mov
push
stos
or
xchg
add
inc
in
mov
outsb
or
into
sti
dec
mov
add
jnp
mov
rcrb
xorb
insb
jo
repnz
or
fwait
dec
divb
fwait
cld
fabs
into
sti
inc
cwtl
icebp
lods
pop
xor
xchg
xor
mov
call
clc
js
outsl
jb
nop
enter
sti
jmp
push
imul
arpl
lods
sbb
aad
js
jno
pop
cld
mov
and
sbb
bound
xchg
jns
inc
push
jo
xchg
dec
fwait
divb
adc
adcl
repz
jmp
or
push
fs
mov
pop
jg
outsl
mov
fisttpl
lods
mov
push
mov
cltd
dec
xchg
jmp
out
lret
and
fidivrs
dec
in
pop
inc
cs
xor
inc
pop
addr16
sbb
out
sbbb
aam
xchg
test
aaa
dec
imul
jl
in
inc
stc
loop
ret
xchg
adc
and
sub
pop
sbb
sbb
popa
stos
cmpsb
xor
mov
inc
cmp
out
xor
fadds
lods
cmp
add
pop
popf
gs
xor
shll
shll
mov
movsb
or
xor
mov
and
mov
and
pop
mov
test
mov
data16
rcl
fs
fwait
dec
mov
mov
sbb
xchg
out
jne
pop
movsb
sbb
pusha
xchg
cmp
sub
pop
push
fdivl
cli
mov
lock
mov
mov
sub
cmovbe
inc
mov
mov
sahf
and
cld
dec
or
sub
addr16
ds
pop
imul
addr16
inc
inc
shrb
bound
push
sahf
mov
pop
dec
inc
or
mov
fcmovne
or
in
cs
mov
or
or
fisubrl
out
adc
imul
dec
fs
inc
pop
dec
or
jp
ret
mov
lahf
cli
int
scas
pop
inc
fldt
in
rcl
imul
jmp
sahf
lds
mov
pop
mov
xchg
add
fwait
iret
mov
jae
sub
xor
xchg
ljmp
cltd
mov
mov
mov
repz
add
mov
sarb
add
int
stos
ret
adc
test
scas
dec
stos
enter
int
and
sbb
outsb
xchg
xor
cmp
ljmp
add
out
popw
adc
leave
sbb
cld
nop
xor
aas
in
mov
ds
xor
movsl
add
mov
inc
push
cmp
cltd
repz
ja
jo
pop
imul
test
fimull
lret
shrl
mov
push
cli
fistpll
mov
mov
xchg
jp
sti
sti
imul
int3
xor
into
jo
jmp
xchg
and
stos
and
in
cmp
popf
cmpxchg
cli
test
pusha
xchg
pop
shl
adc
mov
inc
push
sub
rep
and
adc
ret
and
out
mov
lds
fwait
adc
xlat
out
jp
mov
dec
adcb
sti
pop
sub
movsb
push
nop
lcall
cwtl
xchg
sub
and
leave
sub
mov
cmp
lea
inc
dec
cmp
add
clc
stos
and
and
or
xor
shrl
or
pop
mov
push
scas
and
rolb
sub
cwtl
into
mov
adc
imul
lock
jp
faddl
inc
pusha
inc
or
pop
fildl
jnp
imul
dec
fcomi
cmp
mov
fisubrs
push
repz
mov
jns
leave
mov
lds
aaa
mov
icebp
mov
sub
shl
mov
cmp
scas
bnd
popf
sbb
sbb
sbb
ret
std
inc
fcomps
scas
mov
popl
fdivrp
add
inc
clc
dec
mov
adc
dec
sbb
das
sahf
mov
lods
pop
xchg
xchg
jmp
rclb
xchg
aam
data16
gs
into
xor
sub
sti
mov
outsb
push
sub
fs
test
in
pop
pop
jg
stos
mov
cltd
jb
push
adc
dec
es
outsl
adc
ds
mov
cmp
jmp
push
in
fimull
adc
xor
mov
mov
push
pop
push
js
cmp
or
rorb
or
cmp
aas
xchg
pop
xor
jns
out
leave
xor
fdivs
xor
mov
push
pushf
int3
xchg
lret
fs
stos
pop
mov
scas
aam
loope
aas
sub
xchg
mov
mov
sub
loop
or
bound
sbb
cmp
jno
inc
clc
inc
mov
pop
lds
jbe
in
je
fwait
and
rcl
push
push
xchg
hlt
inc
mov
adc
pop
and
dec
pop
test
sbb
mov
idivb
daa
aas
stos
iret
repnz
inc
sahf
cmp
pop
cmp
inc
int
sub
cmp
sbb
rclb
fistpl
xor
and
mov
add
push
pusha
add
jbe
xchg
and
mov
push
inc
mov
push
add
push
js
addb
and
and
jnp
dec
test
inc
dec
in
pop
mov
insl
ss
dec
inc
into
and
ret
icebp
repnz
clc
xor
mov
push
sbb
add
idiv
push
or
call
pop
sub
ds
pop
test
jg
stos
icebp
push
in
popa
outsb
and
push
mov
je
mov
dec
pop
fdivs
sbb
xor
mov
adc
dec
dec
jno
call
sub
popf
aad
cld
gs
jno
jl
mov
xchg
les
jecxz
je
insl
repz
push
mov
push
or
mov
lcall
popf
push
cwtl
pop
lock
cmp
fnstsw
and
xor
cmpsb
vfrczss
and
movlps
arpl
negl
add
adc
in
xchg
in
jno
xchg
pop
jg
or
hlt
ror
adc
imul
ret
or
mov
dec
insb
mov
sub
push
xchg
cld
mov
cmp
push
adcb
sahf
lahf
jns
dec
inc
sbb
dec
lods
data16
enter
loope
mov
xor
pop
nop
or
fnstsw
pop
inc
jl
addr16
mov
arpl
inc
insb
jo
dec
out
test
mov
adc
jnp
xor
aaa
jle
mov
dec
stos
scas
push
scas
out
es
xchg
xchg
adc
lret
jno
syscall
pop
loopne
les
enter
inc
movsb
clc
ret
into
pop
xchg
mov
stos
bound
push
push
icebp
ds
movsb
mov
pop
incb
sub
adc
nop
sbb
sub
inc
pop
or
shl
adc
xchg
inc
xchg
dec
pop
scas
dec
lods
fcmove
adc
adc
xchg
xor
adc
in
pushf
out
pop
mov
adc
fcoms
sub
pop
cmc
mov
cmpsb
test
test
das
xchg
push
mov
scas
popa
push
pop
and
stos
and
push
cmpsl
fcomps
mov
test
push
mov
lds
push
test
mov
cmp
in
sbb
jne
and
xchg
imul
nop
int
dec
mov
sbb
sar
xor
or
inc
mov
jle
pop
je
lret
outsl
mov
cltd
cmpsl
mov
xor
mov
test
cli
push
filds
stos
dec
or
cmc
mov
xchg
xor
imul
rcrb
xor
sbb
das
xchg
jb
aad
dec
sbb
xlat
add
call
jmp
push
xchg
popf
test
pop
std
fimull
sub
sub
hlt
test
xor
mov
cmp
mov
in
dec
fmuls
mov
icebp
xchg
dec
xchg
and
mov
jb
cmp
mov
lret
sbb
push
lahf
dec
lret
push
jge
cmp
std
pop
fists
stos
pushf
out
and
das
nop
mov
pushf
sti
or
and
xchg
push
push
mov
jl
enter
aaa
inc
jmp
fcompl
mov
cmc
jmp
iret
mov
inc
and
sub
ss
mov
cmp
pop
movsb
nop
test
cmp
imul
or
insl
jb
pop
lret
push
repnz
adc
or
aas
mov
mov
stc
and
fcomps
outsl
ret
cwtl
pop
cli
cmc
lcall
inc
shlb
mov
jmp
add
mov
mov
filds
int3
stos
add
mov
jmp
pop
cld
pop
scas
outsl
jg,pn
sbb
sbb
out
in
jb
lods
dec
mov
cmpsl
mov
femms
and
xor
pop
sti
mov
mov
rorl
adc
loope
xor
lea
lock
sti
lods
cmp
xchg
cmp
pusha
gs
xchg
cmc
jno
stos
jbe
adc
inc
fwait
adc
sbbb
sub
test
lods
xchg
sub
enter
xor
sub
cmc
xchg
cmc
xchg
xchg
cli
xrelease
mov
push
lds
pop
mov
jg
cli
mov
test
bound
mov
jb
imul
sub
es
push
fwait
inc
iret
xor
stos
push
sahf
fisttps
call
mov
ds
mov
xchg
call
movl
fwait
jp
dec
aam
leave
and
pop
mov
dec
ljmp
add
das
daa
push
add
fcmovnu
and
or
jb
lea
mov
jb
xchg
cmp
dec
mov
mov
xchg
pop
xor
clc
sti
rcrb
movsb
add
call
push
cmp
sub
sub
sbb
mov
fcmove
pop
dec
push
mov
add
mov
enter
insl
and
stos
mov
mov
idivb
xchg
jbe
jmp
test
push
maskmovq
imull
mov
les
stos
jae
mov
pop
jns
shrl
hlt
inc
and
fistl
in
aam
jbe
pop
icebp
pop
jno
lret
pop
and
sub
in
jo
adcb
leave
cld
cltd
sub
dec
gs
mov
enter
mov
dec
loope
pop
nop
jae
pop
sbb
lret
das
div
mov
gs
dec
hlt
fincstp
jbe
dec
ds
mov
movsl
aaa
mov
pop
lock
push
int
push
push
xor
or
add
dec
scas
cltd
addr16
fistps
ljmp
mov
fsubrs
addr16
push
mov
out
add
loopne
test
cli
gs
xor
mov
mov
xor
xor
adc
fdivrl
stos
lea
adc
sbb
cmp
gs
scas
xchg
ficomps
fistpl
lock
add
mov
fwait
sahf
sub
add
inc
dec
insb
dec
int
xor
sbb
xchg
aad
adc
addr16
rcll
lods
stos
repnz
ljmp
push
gs
out
cmp
xchg
sbbb
sbb
adc
push
insl
imul
mov
mov
loope
sahf
xlat
out
inc
data16
jbe
lret
imul
outsl
data16
addr16
and
push
enter
stos
shrb
shll
aad
push
jmp
ljmp
shll
sbb
nop
sets
dec
pop
sub
fmuls
jge
in
cli
jnp
jns
mov
popa
clc
movsl
jmp
lcall
pusha
call
pop
out
add
xchg
lcall
pop
jns
inc
std
stos
pop
cmpsl
xor
outsl
jae
inc
sahf
cmp
loope
sti
mov
out
arpl
je
xor
jnp
sub
xor
adcb
cmpl
jecxz
xlat
xlat
add
loop
mov
and
int
pop
cmp
subl
push
rolb
neg
inc
insb
aad
add
or
lahf
in
push
xchg
xor
repz
shll
sub
repnz
or
jle
xchg
js
pop
scas
jle
mov
xor
mov
dec
lock
pushl
fcmovnu
into
jbe
loop
push
xchg
rolb
ret
sti
gs
add
rclb
dec
int3
push
xor
add
iret
jae
mov
lods
mov
adc
pop
mov
daa
ss
xchg
loop
xchg
icebp
mov
or
sub
inc
pop
div
iret
cmpsb
fisttpl
sbb
mov
push
rcrb
mov
hlt
clc
cwtl
lock
scas
fadds
stos
jmp
adc
inc
mov
aam
inc
scas
mov
push
xor
fcompl
shr
sub
fcompl
inc
addr16
test
or
cwtl
mov
pop
push
jne
ljmp
jb
and
nop
mov
push
push
daa
aam
loope
int3
xor
xchg
xor
insl
sub
xchg
inc
pop
ror
enter
frstor
and
fnstenv
push
mov
jnp
test
pop
inc
push
insl
mov
clc
jp
scas
xor
push
arpl
nop
imul
mov
hlt
rcl
stos
subb
ljmp
xor
mov
pusha
inc
xor
into
xchg
in
test
sub
adc
outsb
imul
dec
jmp
adc
dec
loope
pop
ficoms
clc
add
and
test
stos
ds
shr
adc
pop
mov
insl
in
loop
aas
rcll
dec
jmp
mov
movsb
push
pop
shr
push
or
inc
or
xchg
push
sbb
fimull
mov
cmp
sbb
or
mov
lods
call
ja
sbb
sti
fs
jg
cmp
pop
sbb
sbb
dec
rcr
pusha
mov
jns
inc
xor
shlb
sbb
ret
orb
es
mov
outsb
inc
data16
cmp
ret
loopne
sahf
mov
and
arpl
mov
fmul
imul
xchg
clc
pop
orb
lret
jmp
jae
xor
adc
insb
addl
jle
stc
cmpsb
add
stos
iret
sbb
sub
and
pop
cmc
mov
adcl
sbb
jbe
sub
orb
jae
mov
scas
or
and
outsb
popa
fwait
popa
cmpsl
sbb
lock
or
iret
lcall
lret
out
bound
lods
xchg
jne
insl
add
imull
xchg
sub
mov
add
imul
insb
mov
dec
sti
test
and
dec
popf
out
aam
aas
ljmp
nop
out
and
lret
xchg
mov
xor
add
jmp
inc
pop
inc
push
add
inc
aad
std
xor
adc
and
mov
xor
xchg
mov
test
out
mov
jp
jge
and
out
imul
lds
leave
mov
arpl
test
mov
xor
popa
mov
lahf
dec
push
jo
jns
dec
in
pop
jle
shld
adc
inc
jmp
sub
push
or
push
push
stc
in
xchg
in
fwait
or
insl
dec
mov
cwtl
test
push
into
cmpsl
sbb
pop
ficomps
mov
jecxz
dec
mov
xchg
sub
call
stos
xlat
mov
cmp
push
icebp
jne
pop
cmp
stos
adc
sbb
gs
dec
sbb
inc
in
test
mov
scas
ds
outsb
push
sub
mov
adc
add
out
arpl
push
fwait
push
fldt
cmpsb
je
adc
popf
jo
int
and
or
ja
lods
popf
xor
push
mov
cmp
push
mov
stos
mov
lock
mov
xor
mov
insl
cmpsb
mov
in
jge
test
je
mov
out
bnd
pop
or
cmp
pushf
aas
mov
jb
lock
mov
bound
sbb
adc
mov
cli
movsl
ljmp
fwait
jbe
sub
int3
popa
dec
add
in
push
inc
fcmovbe
jl
lock
fildll
jmp
xchg
rcrb
ss
inc
sub
mov
cmp
insl
xchg
mov
cmp
xchg
sbb
loop
mov
xor
repz
cmp
or
ss
movsl
cmp
dec
xor
and
cmpsl
dec
ds
push
cs
dec
rolb
pop
js
aam
sbb
outsb
fdivs
xor
dec
mov
in
sub
mov
leave
aas
mov
jnp
cwtl
fs
adc
mov
sub
sbbl
push
adc
and
aad
xlat
adc
inc
cs
cmpb
push
les
addr16
aas
push
pusha
insb
sti
push
sbb
jg
outsl
popf
int3
cmp
or
push
inc
testb
xchg
gs
hlt
int
imul
jmp
xor
adc
jge
cmp
in
xor
mov
adc
xchg
repnz
push
cmc
in
xchg
mov
inc
inc
mov
icebp
int3
or
lret
mov
fcmovne
mov
mov
loopne
ljmp
pop
mov
dec
lods
lret
popa
jmp
dec
adc
xchg
cld
lcall
mov
xlat
inc
cmpl
dec
inc
cmp
push
pop
rorb
push
sarb
lock
ret
pop
push
push
xor
add
ja
jge
fnstcw
and
pop
xor
sbb
cwtl
divb
mov
jp
jecxz
sbb
aas
or
jnp
pop
cmpsl
and
sub
mov
je
stos
xor
aad
ficompl
adc
inc
pop
jmp
inc
cld
or
cld
mov
scas
sbb
loop,pn
outsb
add
xor
ljmp
js
fildl
jbe
fidivl
push
push
jae
orl
cmp
aas
rorb
aam
mov
sub
adc
flds
mov
pop
inc
sub
shlb
add
outsl
cmpsl
stc
push
repz
or
and
stos
aam
dec
aas
es
inc
test
cmp
aam
loopne
sbb
addr16
add
decl
andl
testb
xchg
arpl
push
inc
stc
add
test
jns
repnz
jb
sbb
movsl
test
sarb
ljmp
push
dec
repnz
add
mov
stc
into
aam
mov
cs
sub
loopne
sahf
sub
clc
sub
jl
clc
lods
mov
sbb
mov
sbb
in
test
out
icebp
or
jnp
ret
add
rcll
add
dec
fisttpll
sbb
jo
jb
dec
add
hlt
or
sarb
aam
sub
mov
pop
cmp
adc
leave
clc
cs
adc
imul
xchg
pop
mov
dec
cli
test
shl
pop
stos
mov
xor
aaa
dec
sti
lea
inc
aad
das
dec
jmp
push
mov
icebp
js
and
inc
xchg
jbe
mov
add
arpl
ss
adc
mov
xchg
cmp
jb
aaa
sti
xor
out
push
xchg
notb
mov
cmpsl
jnp
sub
mov
shl
xor
or
dec
das
and
imul
or
and
and
in
inc
lret
push
jge
je
insl
jb
repnz
mov
lret
mov
mov
jae
pop
into
sub
insl
sub
insb
lahf
push
adc
stc
outsb
adc
dec
out
pusha
jmp
fldl
sahf
outsb
mov
mov
sbb
xchg
jge
dec
lcall
add
hlt
repnz
fucomp
rorl
or
imul
subl
sub
pop
mov
jmp
adc
je
sub
stos
mov
or
std
hlt
scas
add
adc
and
flds
jl
mov
xor
dec
pop
jecxz
and
cmp
lock
and
inc
and
xor
fistpl
hlt
in
sbb
mov
test
or
scas
jns
jecxz
loopne
adc
hlt
pusha
xor
popf
mov
push
inc
popf
test
aas
mov
lods
repnz
inc
adc
or
push
aam
adc
add
or
das
mov
test
lret
xchg
add
xor
push
pushf
and
aad
adc
sub
icebp
and
jbe
idivb
xchg
stc
lds
pop
jge
push
mov
js
push
xlat
ret
addr16
stc
movsl
pop
ret
dec
divb
pop
cltd
sbb
or
stos
lahf
mov
adc
mov
jbe
push
test
loopne
jo
xor
into
xor
mov
xorb
ljmp
mov
xor
in
clc
adc
sub
jl
mov
mov
sbbl
cltd
inc
jmp
outsb
int
icebp
aam
or
in
fsub
or
mov
add
cltd
insl
push
mov
gs
addr16
hlt
adc
notb
inc
sahf
dec
sahf
in
push
dec
adc
xor
inc
in
test
xor
sbb
push
sbb
js
push
sar
scas
or
in
dec
mov
cmpsl
or
xlat
test
add
sub
or
push
gs
dec
add
mov
mov
and
stos
test
movsb
mov
jecxz
xor
into
dec
ja
mov
adc
data16
ret
test
cmp
xchg
cmp
hlt
rclb
arpl
mov
cmp
outsl
mov
xor
mov
dec
mov
jge
lahf
adc
cli
fisubs
ss
imul
fwait
shrl
or
fidivrl
xor
cmp
in
popf
mov
into
adc
mov
dec
adc
xor
mov
cmp
push
icebp
mov
jecxz
movsl
leave
add
push
jp
ja
daa
movsl
push
ret
and
inc
jg
scas
inc
aas
pop
ficoml
mov
movsl
push
mov
push
insb
stos
pushf
push
std
adc
xchg
add
mov
js
clc
mov
in
sbb
mov
cmp
movsb
xor
jns
outsb
shll
test
aas
incb
add
stos
iret
mov
outsl
pushf
out
das
xor
xlat
push
movsl
negl
aas
inc
lahf
dec
repnz
mov
mov
xchg
add
imul
and
jmp
inc
xchg
fistpll
xlat
dec
adc
inc
mov
sbb
cmpsb
pusha
dec
add
sub
mov
cmp
inc
jne
mov
dec
and
mov
fs
pop
xlat
mov
fdivl
mov
pop
das
mov
lret
mov
xchg
fucom
sahf
int
ss
push
js
mov
or
mov
cmpb
push
or
xlat
pop
add
mov
call
cwtl
je
dec
dec
adc
cltd
push
jnp
stc
enter
jmp
jl
xchg
dec
insl
jmp
mov
jmp
mov
adc
push
adc
dec
cmpsl
pop
mov
mov
outsl
scas
div
pop
repz
inc
jne
aaa
loope
ret
mov
test
push
mov
jnp
ret
out
xchg
jmp
push
jl
mov
add
xchg
scas
loopne
xor
test
push
out
add
ds
mov
or
aas
sbb
adc
dec
and
jnp
int
pop
jge
adc
mov
cmc
sbbb
pop
push
lods
icebp
filds
sarb
subb
in
cwtl
out
jbe
outsb
ret
lcall
in
rolb
pop
push
aas
adc
cmp
arpl
mov
loope
xor
sbb
xchg
shrl
pop
sub
ds
pop
out
push
pop
or
dec
pop
test
mov
scas
sub
mov
mov
std
imul
sbb
dec
outsb
mulb
push
pusha
fld
push
add
and
lea
xchg
push
js
fs
add
lahf
cmc
es
xlat
fnsave
es
divb
divb
xor
sub
ja
jns
fisttpll
pop
push
inc
mov
inc
hlt
mov
cmp
lods
mov
insl
mov
jb
shrb
cmc
fdivp
xor
xchg
mov
xor
pushf
mov
sub
adcb
inc
je
cmp
cltd
cmpsl
xchg
mov
xchg
sub
mov
sbb
lcall
andb
inc
mov
xchg
loopne
or
push
mov
mov
mov
inc
push
mov
std
mov
mov
mov
jno
aad
out
sbb
cmp
mov
push
aaa
cwtl
xlat
or
add
sub
xchg
mov
or
sarl
push
sbb
scas
inc
adc
inc
push
jbe
in
jp
pop
sbb
icebp
leave
fwait
inc
pop
mov
pop
add
xor
jb
jno
jns
mov
pop
mov
fstpt
sbb
add
jp
out
xor
sbb
pop
xor
out
cltd
aaa
fxch
es
adc
mov
lcall
xor
loopne
dec
dec
fucomip
xor
icebp
xor
inc
lock
add
fwait
lahf
mov
andb
fisttps
mov
and
inc
pop
hlt
and
lea
addr16
lea
arpl
mov
pop
cli
fstl
movsb
enter
mov
push
ret
insl
and
outsl
push
fs
pop
sub
add
jp
mov
pop
fmull
cltd
sbb
lds
clc
ret
cld
lods
pop
xchg
add
mov
jge
xor
movsb
fcmovnb
inc
xor
mov
rcrl
out
and
adc
nop
out
sub
mov
or
jge
adc
pushf
test
imul
movsb
sub
icebp
ds
mov
lods
lahf
movsl
jl
jae
adc
adc
jl
loop
loop
cmp
cs
pop
hlt
sub
inc
in
test
xlat
das
mov
mov
push
loop
push
xchg
jmp
push
lahf
stos
push
jmp
push
jg
in
fistps
pop
int3
adc
enter
lods
fcmovbe
push
xchg
or
push
fisttps
add
sub
lock
xorl
pop
test
test
xor
roll
sub
lock
mov
mov
js
bound
orb
mov
dec
fwait
test
dec
pop
movsl
gs
ds
inc
ja
and
xchg
mov
int3
aam
push
sbb
cmc
sub
popa
jmp
insb
push
adc
jnp
adc
adcl
in
xor
sub
sub
cli
xchg
cmc
mov
xchg
lret
scas
ficompl
repz
ret
ja
popa
rcr
xchg
sub
add
push
movsl
mov
jnp
xor
in
and
imul
in
mov
shl
mov
cmpxchg
nop
pop
adcl
mov
icebp
movsl
or
adc
push
testl
inc
in
mov
repz
jae
mov
call
outsb
sar
push
cmp
ja
nop
mov
adc
pop
push
out
cmpsl
or
cmp
push
imull
mov
cmp
or
push
in
mov
xorl
sarb
mov
adc
fs
gs
fmull
xor
adc
fisubrs
push
push
and
ret
or
jge
out
aad
popa
out
negb
ss
jne
cs
cmp
roll
push
movsl
in
insl
int3
inc
std
jo
push
dec
jge
pop
aad
gs
or
into
shlb
cmpsl
cld
fdivl
loopne
fstpl
into
in
xchg
insb
loope
xor
shr
xor
xchg
push
inc
or
lock
cmp
daa
lret
adc
es
cli
inc
xor
repnz
mov
mov
test
test
jl
jns
mov
mov
cmpsl
dec
call
inc
xorb
iret
sub
or
mov
in
ja
sub
sbb
jp
js
bound
js
and
out
cmp
inc
cs
into
mov
and
jecxz
xlat
in
mov
sbb
jmp
xor
sub
or
cltd
and
test
sahf
inc
nop
out
add
out
mov
push
lret
rep
sbb
loopne
sbbl
rorl
lcall
dec
jl
daa
push
push
push
jg
jno
sub
adc
negb
xchg
call
test
in
lcall
je
xchg
ss
mov
push
push
add
mov
enter
dec
jl
popf
ficoml
stos
or
and
scas
cmpsl
add
out
test
jnp
cs
das
adc
pop
out
push
mov
xchg
fs
jge
push
das
sbb
mov
fldenv
outsl
mov
xchg
pop
hlt
jle
daa
mov
or
outsb
icebp
les
test
test
pop
testl
jp
test
jmp
in
push
pop
out
xlat
js
mov
inc
sub
cmp
cmp
inc
shll
xlat
enter
mov
aad
rorw
into
rorl
jecxz
mov
ljmp
inc
imul
pop
dec
dec
and
rcl
hlt
adc
jl
cwtl
cmp
dec
jp
std
inc
test
and
jns
xchg
pop
pushf
sbb
stos
xchg
repnz
or
bound
cmp
xlat
lret
jg
or
pop
shrl
xchg
jo
data16
clc
jb
les
mov
dec
jae
xor
adc
addr16
out
mov
mov
push
hlt
mov
in
pop
inc
mov
dec
dec
ret
cwtl
test
push
xchg
or
sbb
lods
aaa
gs
push
fiaddl
adc
sbb
cmpsb
repnz
test
pop
jecxz
adcl
cmp
pop
mov
jns
popf
jecxz
dec
adc
xor
pop
pop
shl
pop
jg
mov
pop
and
loopne
lock
std
stos
ret
jb
push
mov
lds
mov
mov
sbb
nop
xor
stos
in
and
loop
popa
iret
fwait
pop
out
lds
dec
mov
or
cmc
push
repz
xchg
jne
fnstsw
add
dec
push
add
and
pop
or
or
aad
sarl
cmp
xchg
inc
pop
test
push
sub
mov
aaa
lods
out
mov
push
mov
push
in
aam
lock
jnp
cmp
cmc
jo
insb
jmp
inc
jae
lcall
push
xlat
fcompl
mov
iret
ja
inc
test
mov
arpl
mov
xor
mov
mov
addr16
pop
mov
stc
xor
mov
in
leave
adc
cmpsl
push
cmp
in
jl
jne
jg
sub
cs
loopne
mov
flds
leave
push
and
ficompl
bound
adc
jno
and
pop
cmc
cmp
xor
or
adc
push
lock
jge
fidivl
sahf
add
nop
cld
mov
fsub
movsl
fs
stos
movl
js
inc
idivl
lods
inc
jg
mov
sbb
add
stos
nop
sbb
and
xor
mov
aam
mov
and
mov
sub
test
roll
mov
xchg
es
push
pushf
mov
addb
jae
pop
jb
filds
add
inc
inc
mov
jns
ret
xchg
leave
add
mov
popa
xchg
adc
cltd
ret
jnp
pushf
dec
movsl
sbb
and
pop
push
fidivrl
lret
js
or
daa
push
xchg
addb
std
sbb
or
add
push
mov
loopne
inc
lds
arpl
jne
inc
subl
xchg
inc
insl
hlt
lods
mov
pop
in
dec
lods
inc
dec
cmp
movsl
xor
mov
sbb
sub
jno
mov
ljmp
xor
in
or
dec
jmp
loopne
lea
dec
push
mov
xor
lock
inc
or
sub
outsb
call
lock
jne
fwait
stos
xlat
mov
cmp
test
jae
lods
adc
cli
ja
aas
xlat
push
nop
cmp
fdivl
in
cmp
add
sbb
test
sbb
fmuls
xor
sbb
mov
xchg
sbb
out
and
dec
xchg
lahf
mov
mov
pop
and
inc
inc
cmpsb
xchg
into
fadd
mov
and
push
mov
stos
aad
pop
push
inc
es
cmp
outsl
ret
stos
pop
fcoms
mov
xchg
decb
jno
stos
imul
sbb
push
js
xor
mov
loop
aad
lds
insb
mov
movsl
js
jb
int
js
dec
sbbb
dec
hlt
dec
nop
cmp
push
fldenv
jae
dec
xchg
orb
int3
xor
call
or
inc
mov
cmp
test
shlb
jb
stos
sub
mov
pop
ret
adc
pop
lret
xchg
inc
adc
dec
jbe
jp
push
jmp
lds
aas
push
xchg
and
in
cmp
ljmp
jmp
scas
push
pop
push
mov
or
fdivrs
aam
xchg
sti
pop
addl
mov
ja
adc
add
cmp
out
fnstsw
and
sub
dec
lret
push
inc
mov
push
ja
movsb
aad
testb
lret
xchg
insl
negl
jb
add
xchg
inc
leave
mov
rcrb
jbe
xchg
mov
stos
mov
mov
mov
imul
mov
nop
push
mov
adc
jle
cmpsb
ret
or
push
mov
rorl
cmpsb
stos
pop
aaa
push
push
dec
bnd
xchg
adc
mov
dec
test
cmpsl
in
and
sbb
pop
push
movaps
sahf
cs
xor
mov
sbb
push
roll
scas
insw
adc
fnstenv
mov
add
sbb
jmp
pop
aaa
es
sub
rcrb
aad
add
push
add
nop
push
cli
mov
fbld
std
sub
mov
xor
or
lcall
sbb
cmpsb
aad
divb
loope
lret
insb
sahf
jo
pop
xchg
add
lock
xchg
ret
cltd
cwtl
push
cwtl
jno
je
xchg
ret
jp
xor
push
rcr
dec
ret
inc
aad
test
orl
jge
mov
lret
sub
mov
xchg
das
outsl
sbb
pushf
xchg
sar
sahf
jg
out
cmp
mov
imul
jle
ret
push
jmp
sbb
test
jmp
add
jp
adc
dec
in
and
imul
loopne
mov
aaa
or
int
sbb
les
mov
dec
fisubl
push
rclb
jno
ret
clc
scas
bound
insb
dec
lret
subl
mov
insl
out
mov
push
lods
adc
push
bound
push
pop
or
push
xchg
out
popa
and
out
or
in
adc
imul
xor
out
test
xchg
imul
leave
scas
cmc
jae
dec
movsl
out
and
sbbb
je
mov
cmp
rorl
mov
loop
pop
cmc
mov
clc
inc
push
add
pop
inc
repnz
mov
fstl
cs
lcall
adc
jo
lds
test
in
mov
jo
xchg
fnstsw
pop
jmp
mov
ljmp
cmp
inc
enter
enter
jb
test
adc
rdmsr
cli
jbe
inc
fsubrp
adc
fs
shl
sarl
or
and
loopne
das
testb
hlt
imul
daa
xchg
ds
pop
mov
xor
jle
sub
les
testl
jle
sahf
cmpsb
fucomi
fisttpl
mov
stc
fstl
lcall
sub
jmp
imul
repnz
mov
mov
sbb
imul
insb
jecxz
ljmp
les
xorb
dec
xchg
test
push
pop
xchg
out
loop
push
fs
adc
sbb
push
cmp
or
sbb
fcoms
fnstsw
fld
dec
lret
push
test
fisubl
adc
lock
mov
test
dec
shll
outsl
jp
lret
jg
cmp
shrl
and
mov
cltd
push
jbe
mov
data16
mov
xchg
jmp
and
fwait
fwait
sahf
lds
hlt
lods
jmp
out
cmpsb
test
fadds
jecxz
dec
xchg
pop
jns
pop
jnp
lods
xor
shll
jmp
dec
fdivs
lods
call
cli
je
outsl
ret
sub
je
mov
pop
adc
sbb
sub
fsubs
inc
or
out
mov
or
imul
or
mov
and
mov
jns
mov
pop
adcl
cmp
push
or
out
sbb
xchg
and
lds
fisubrl
jg
mov
sub
and
orl
sbb
sbb
xorl
out
push
sti
add
sbb
ret
inc
iret
daa
pop
into
sub
icebp
mov
sahf
lods
sti
fwait
sbb
jae
leave
mov
push
lret
into
sar
mov
adc
mov
xor
fsubrs
fbstp
mov
or
sub
pop
sub
imulb
sub
add
jae
pop
inc
stos
stos
roll
adc
in
or
or
cmp
inc
dec
cs
test
mov
loopne
push
push
sbb
lods
in
mov
mov
lea
popf
out
mov
ror
fsubrl
inc
dec
lds
es
sbb
gs
jnp
sbb
aas
inc
sbb
out
push
mov
popf
cmp
jnp
jae
cmp
call
mov
pop
test
cs
in
lock
out
int
push
push
push
jns
sub
testb
adc
jmp
ljmp
sahf
call
sbb
stos
push
mov
movsl
xchg
mov
inc
movsl
and
xchg
rclb
js
or
sub
and
and
xor
movsl
jg
out
xchg
dec
in
psubsb
insl
jge
scas
mov
adc
dec
loope
lret
inc
xchg
xchg
lods
xchg
fs
xchg
test
mov
inc
and
and
pop
cmpsb
sub
scas
mov
lods
stos
leave
sbb
jnp
cld
push
movsb
jl
jne
xchg
adcl
dec
dec
fmuls
ret
pop
jl
fnsave
test
fiadds
adc
in
push
push
mov
sub
inc
and
inc
test
cmp
and
into
cmp
inc
lds
xchg
cld
mov
and
cmpsl
push
cwtl
fmuls
xchg
dec
jnp
clc
stos
push
dec
push
cmpsb
inc
lahf
jb
pop
nop
mov
ljmp
mov
lcall
sbb
mov
icebp
push
mov
jno
cmp
nop
xchg
mov
add
cmpsb
aaa
mov
sub
scas
rorb
incb
scas
in
mov
or
fs
inc
loop
push
add
mov
icebp
inc
mov
xor
sub
std
cmp
jmp
call
lds
sub
jmp
addr16
pop
jns
adc
andl
push
inc
inc
add
rcrb
dec
lret
jmp
shlb
rcrb
cmp
pop
sub
aad
pop
add
mov
xor
outsl
out
sub
scas
cmp
out
lahf
movsl
stos
mov
cld
shrb
xchg
sbb
pusha
push
mov
jb
dec
jbe
daa
lock
pop
sub
push
xchg
pop
lea
test
in
fisubrl
pop
aas
inc
aaa
les
mov
add
dec
push
sub
pop
loopne
hlt
pop
xchg
lods
test
je
enter
push
push
es
and
add
jo
inc
pusha
jnp
sbb
in
jae
scas
dec
sub
add
fisubrl
xor
cmp
push
int3
jle
cmpsl
lea
lahf
outsl
shrb
push
repnz
call
std
xchg
mov
repz
jno
mov
sbb
fsubrp
mov
data16
outsl
icebp
out
hlt
mov
in
shrb
mov
rclb
scas
mov
gs
das
adc
inc
test
test
insb
add
xchg
stos
jne
enter
cmc
push
mov
cmp
mov
int3
popa
out
mov
test
mov
jo
adc
jmp
mov
ret
xor
push
out
adc
stos
popa
xchg
sub
fwait
add
mov
add
push
call
andb
cmp
stos
mov
xchg
add
mov
divl
sbb
fs
xchg
cmp
roll
shrb
cli
dec
mov
dec
jnp
pop
or
iret
sbb
mov
sub
ret
clc
push
pop
popa
lods
cs
sbb
xchg
xchg
arpl
lods
icebp
or
push
movsl
or
xor
jle
dec
xor
add
dec
jae
pop
inc
mov
les
jns
mov
mov
fmull
rclb
arpl
mov
cmc
test
xor
mov
mov
clc
mov
sub
pushf
mov
sub
adc
adc
adc
add
or
insb
add
lds
leave
js
fcoms
mov
lcall
sbb
fwait
inc
push
or
out
test
jmp
loop
mov
iret
fcoml
dec
xchg
mov
cli
lahf
pop
dec
rclb
frstor
gs
arpl
pop
add
add
push
fisubl
jg
lahf
adc
mov
scas
lock
idiv
out
or
cmpb
add
fst
jl
mov
sub
stc
or
cmp
clc
mov
mov
inc
fsubl
jb
xor
shlb
mov
xor
lahf
cltd
and
jge
inc
adc
out
pushf
lret
fwait
adc
hlt
lahf
decb
imul
mov
testb
dec
out
push
dec
repnz
mov
cmpsb
outsl
fldl
aam
mov
test
hlt
sbb
push
adc
pop
popf
jle
cwtl
jbe
inc
inc
lret
cwtl
jns
leave
pop
xor
js
jo
out
cltd
sarl
insb
idivb
daa
and
push
push
leave
pop
fidivl
shll
pop
daa
cwtl
jnp
mov
jnp
sub
imul
mov
imulb
push
pop
bswap
sub
adc
shlb
loop
jbe
inc
adc
js
inc
imul
push
dec
xor
insb
mov
xchg
es
out
lahf
mov
push
sbb
push
movb
data16
add
idiv
popf
addr16
mov
jp
mov
sar
xchg
mov
sub
sub
fcmovb
adc
mov
pop
loopne
andb
adc
aaa
dec
dec
fcoml
sbb
stc
jle
ret
popa
dec
xchg
hlt
pop
xchg
cmp
mov
outsb
add
pop
lret
dec
lods
sti
ljmp
outsl
xchg
and
insb
clc
cmp
jns
ffree
cli
dec
movsl
mov
inc
adc
cmpsl
mov
adc
stos
pop
dec
addl
dec
repz
cmp
inc
xlat
cwtl
lods
jmp
call
push
sbb
rcr
xchg
cmp
adcl
ret
xchg
movsb
jmp
sbb
lds
ja
addr16
mov
mov
pusha
mov
pop
loop
lods
mov
ljmp
pop
in
mov
push
enter
mov
shl
mov
add
les
pusha
add
lods
int3
cmp
rorl
inc
jmp
out
call
xlat
xor
stc
jae
popa
pusha
xor
dec
aam
inc
js
cmp
xor
ret
stos
jns
notl
sub
pop
pop
add
adc
push
fwait
cltd
xlat
dec
xchg
pop
xor
int
push
mov
arpl
dec
fdivrl
cmpsb
mov
adc
or
push
and
lds
cmp
push
scas
loop
outsb
lcall
lods
mov
push
stos
sahf
sub
sub
data16
pop
jb
loope
mull
insb
loop
pop
fmull
inc
outsb
push
popa
mov
pop
cmpsb
icebp
jge
hlt
std
stos
jb
xchg
xchg
lcall
fimuls
mov
clc
add
scas
fstpl
nop
mov
sub
dec
push
test
stos
or
xchg
xor
pop
lcall
std
xchg
xchg
sbb
repnz
jecxz
push
pop
mov
sub
mov
insl
fsubl
mov
dec
mov
adc
neg
mov
jb
lea
fwait
jb
xor
dec
mov
mov
loop
rcrb
mov
addb
jb
imul
sahf
addr16
outsb
xchg
or
pushw
mov
and
fsubrl
movsb
mov
pop
mov
sub
aaa
scas
and
imul
adc
push
gs
popf
inc
out
loopne
sub
jbe
mov
repz
stos
sbb
add
lea
and
xor
iret
pop
into
xchg
jle
or
aad
push
imul
sbb
popf
fs
mov
jnp
pop
and
sbb
loop
mov
mov
imul
ja
cmp
mov
fscale
cmp
es
cwtl
mov
out
pop
stos
hlt
mov
popf
in
inc
enter
and
jmp
pop
out
jg
sahf
loop
push
dec
fs
ds
cmp
jle
mov
fwait
xor
dec
or
clc
xchg
cmpsb
or
sti
adc
xchg
lds
lcall
xchg
divb
or
xor
or
ficomps
cmp
mov
xorl
pop
lea
xchg
insl
mov
pop
jno
xchg
sbb
cmpsl
and
mov
cld
push
pop
into
push
add
adc
out
jge
or
popa
test
outsb
jge
cs
sar
inc
loop
pop
test
mov
add
enter
pusha
dec
dec
lahf
aaa
sub
arpl
fistpll
scas
xor
popf
rorl
xchg
fcmovne
ret
and
jl
in
jl
movsb
adc
sbb
cmpsb
cli
icebp
xchg
cmpsb
mov
cmp
pop
pop
mov
or
loope
pushl
movsb
pop
mov
sub
sub
icebp
cmp
mov
popa
jmp
and
fmul
cmp
call
sarb
popf
test
jne
mov
push
pop
fcomip
fildl
ss
push
sbb
orl
or
movsb
inc
jbe
and
pop
arpl
pop
mov
lcall
push
dec
pop
rorb
mov
insl
subb
arpl
je
xor
iret
mov
or
fcoml
dec
jo
lcall
mov
cld
push
jp
loope
fwait
sbb
xor
mov
sbb
mov
outsl
leave
repz
imulb
cltd
cltd
lods
int
shl
push
xchg
pop
sub
leave
icebp
test
shrl
popl
mov
ret
dec
lock
and
mov
add
js
movl
mov
ret
jne
sub
in
sub
je
mov
std
inc
sbb
mov
ds
xchg
imul
ljmp
cmp
orw
sub
sub
loopne
cmp
add
xor
mov
rol
repnz
xor
add
rcl
and
lret
xchg
fnstsw
mov
mov
lcall
sub
sub
fcmovne
sbb
sbb
lcall
enter
or
arpl
shlb
mov
push
adcb
mov
pop
repnz
lods
sbbb
dec
jge
mov
sbb
xchg
xor
sbb
aaa
mov
cmpsl
jecxz
gs
xor
mov
mov
ljmp
out
xchg
fcomps
jnp
test
insb
add
mov
or
es
test
aaa
sub
sub
movsl
lock
mov
daa
test
ficoml
loop
pop
jno
sarl
mov
nop
pop
pop
sti
nop
js
popa
aam
out
push
cmp
and
cmp
xlat
pop
popa
push
out
jmp
mov
sbb
jge
jne
leave
xchg
pusha
gs
cmp
adc
inc
lods
cmp
out
inc
frstor
mov
out
cmpsl
push
xorb
mov
mov
lea
or
adc
roll
das
dec
loopne
lret
xlat
dec
push
ret
and
and
jo
pop
aam
loopne
call
xchg
jb
mov
sbb
jae
ja
fisttpll
movsl
sbb
jecxz
mov
dec
fbld
aaa
inc
mov
jge
int3
and
cld
jge
mov
mov
test
dec
imul
ret
jbe
pop
jne
lahf
negl
sub
dec
lock
lcall
ja
ficompl
adc
pop
je
adc
fisubl
adc
push
loope
push
sbb
cmpsl
mov
sti
mov
jb
dec
data16
pushw
xor
add
enter
mov
shl
icebp
mov
loope
jmp
lods
push
mov
push
sbb
inc
test
cmp
lcall
jae
rcr
leave
add
jl
cmp
or
xor
mov
in
in
pop
out
out
dec
fdivr
js
and
adc
and
rorl
mov
nop
pop
sub
daa
dec
int3
es
dec
out
cli
imul
mov
xchg
out
int3
or
pop
and
cmpl
imul
cld
sub
test
mov
mov
lea
mov
mov
gs
and
in
jecxz
sti
xchg
pop
sbb
inc
xchg
sub
insb
sbb
jg
push
mov
icebp
mov
not
sub
les
mov
lret
xorb
ljmp
outsl
in
add
es
fcoml
out
push
test
mov
push
pop
push
test
imul
jb
jnp
inc
fs
push
mov
inc
dec
call
mov
push
mov
push
add
ficoms
mov
popa
mov
daa
sbb
or
or
jmp
sub
pop
sarb
idivl
cmp
fs
or
fnsave
adc
sbbl
aas
sahf
imul
std
jge
cmc
pop
mov
push
ljmp
push
jle
xor
push
call
lret
lea
cmp
ret
in
in
push
mov
mov
jp
mov
push
lahf
pop
outsl
cmc
cltd
dec
ds
pop
xchg
cmpsl
stos
mov
ret
pop
pop
pop
lea
xor
daa
fwait
arpl
sub
lds
aad
je
or
fstpt
mov
jp
leave
outsl
cmp
mov
xchg
inc
lcall
cmpsl
dec
orb
mov
jge
mov
lock
call
mov
xchg
inc
mov
jge
in
mov
mov
ds
cld
sub
dec
sub
stos
adc
pop
js
push
subb
ret
pop
divb
xor
lcall
or
daa
jo
add
xchg
out
adc
xor
clc
cmpsl
sbb
bound
add
int3
jle
stc
and
into
ret
mov
stos
sarl
aad
hlt
cmp
lret
sub
aaa
mov
jle
cmpsl
add
ljmp
add
imul
pop
sbb
mov
mov
test
sub
jnp
add
add
inc
adc
mov
jge
shlb
push
aas
outsb
rorl
lea
loop
mov
aam
mov
les
xor
stos
cmc
popa
cmp
test
lock
dec
pop
test
adc
xor
loope
scas
cmc
ficoms
xchg
nop
inc
xor
and
sbb
and
jns
repnz
inc
lds
or
dec
xchg
xor
mov
mov
push
je
pop
in
mov
and
nop
jecxz
cli
fisttpll
inc
lret
insl
mov
push
jnp
fiadds
jae
fyl2x
mov
add
jns
incb
iret
mov
daa
inc
std
inc
in
aas
aam
ret
mov
cmpsl
test
movsb
in
hlt
fstpt
aaa
xchg
aad
xchg
xor
out
fdivr
rep
cmp
imul
ret
push
out
jmp
clc
sub
or
je
mov
sub
dec
or
aas
hlt
in
iret
fmull
sub
mov
dec
pop
sub
sahf
add
inc
je
push
sub
xchg
mov
add
mov
mov
ds
pop
daa
arpl
push
mov
mov
cwtl
data16
sti
push
push
and
insl
add
int3
aam
and
fisubrl
push
cmp
sbbl
repz
inc
xchg
and
iret
leave
jo
call
mov
cmc
lods
sti
mov
inc
insb
and
xchg
lcall
sub
orl
lret
ljmp
or
mov
sbb
fstl
jmp
jae
mov
lock
or
aad
das
aas
ljmp
aas
push
cs
cmp
mov
imull
jle
int3
leave
xchg
cmc
in
aad
pushf
cmpsl
xchg
pushf
lret
jg
adc
arpl
cwtl
clc
mov
idivb
in
sub
cmp
jg
sbb
and
adc
flds
fstpl
mov
jae
adc
or
sarb
push
lods
movsb
ja
xchg
in
jns
std
inc
push
cmc
jp
mov
clc
sub
mov
dec
xor
push
adc
sahf
std
mov
push
mov
int3
movsb
shll
xchg
in
and
repnz
fs
outsb
push
das
dec
cmpsl
sbb
push
cli
cwtl
popa
movsl
cmp
mov
sub
xchg
dec
jmp
repnz
shrl
pusha
inc
movsb
lds
insb
outsl
shrl
les
jp
xlat
addr16
sahf
add
mov
sbb
cld
jle
mov
jo
sub
fidivl
sub
lock
cmpsl
movsb
pop
lret
cli
adc
xchg
sbb
jne
jb
sub
push
test
cmpsl
dec
push
rcrb
lret
les
pop
rorb
ljmp
int
sahf
stos
mov
arpl
repnz
pushf
xor
shlb
push
stos
fs
cltd
rol
sub
dec
mov
push
sahf
sarl
leave
outsb
adc
sbb
cmp
mov
sahf
add
mov
sahf
pop
inc
test
sti
dec
sbb
jge
push
or
sub
pop
push
ljmp
rcl
jae
jns
fadds
mov
inc
std
loope
pushf
xor
fsub
pushf
test
bound
inc
ror
mov
stos
int3
or
push
push
imul
add
mov
xlat
jl
mov
fwait
dec
insl
or
inc
pop
push
cmpsl
sub
popf
push
fstpt
xchg
sub
sbb
ds
mov
lar
mov
jle
add
dec
adc
mov
dec
jno
pop
mov
test
fbld
pop
cmc
cld
push
addr16
jmp
xchg
mov
aas
out
mov
sbb
rorl
push
adc
push
int3
jp
xor
mov
mov
pop
int3
push
shll
sbb
xor
jecxz
jnp
xor
jge
xchg
inc
pop
fwait
xchg
sahf
js
stc
xor
mov
dec
in
outsl
gs
int3
sub
aam
cmp
mov
scas
dec
cmp
push
ja
imul
pusha
sbb
insl
pop
jmp
cltd
adc
xchg
jl
lea
les
aaa
or
repz
add
sbb
dec
add
jl
clc
xchg
add
jl
es
repnz
pop
push
bnd
es
jmp
daa
in
push
mov
pop
push
xchg
insl
and
inc
in
imul
enter
shrb
cmc
clc
sbb
push
int3
add
xor
push
hlt
jmp
sbb
fimuls
scas
les
xchg
jnp
xchg
push
jge
mov
xchg
ret
or
lds
mov
push
push
lcall
mov
ja
inc
inc
pop
daa
cld
mov
cmp
loop
inc
and
pop
inc
mov
sub
mov
sbb
dec
adc
mov
sbb
dec
sbbl
xchg
ss
fs
out
iret
out
das
add
aad
imull
test
add
cmc
dec
push
pop
aaa
pop
rcll
push
mov
shlb
mov
ljmp
dec
lods
xchg
test
inc
test
adc
xor
fldl
jb
mov
push
int
insb
shrl
je
lods
lea
mov
cmp
aas
cltd
xchg
in
mov
movsl
xchg
xchg
aad
sub
and
incb
decl
or
sub
insl
and
lods
aaa
fists
jae
ret
cli
mov
jnp
out
pop
pusha
and
in
ds
xchg
mull
test
inc
bnd
cli
cwtl
lret
shr
rorl
dec
adc
or
push
or
mov
fdivrs
xor
stos
iret
or
cwtl
adc
out
testl
pop
or
adcb
jbe
scas
push
sarl
in
mov
push
push
mov
xchg
jo
nop
lcall
nop
subb
lods
fldt
mov
pop
outsl
addr16
in
cmp
and
mov
cmp
fsubrp
xchg
ljmp
imul
push
xchg
in
ja
xor
mov
lds
into
loope
insl
xchg
addr16
mov
cltd
fimull
dec
push
xchg
jp
test
loope
scas
jo
scas
adc
repz
jnp
sbb
fsubl
dec
mov
cmpsl
jle
popa
xor
ret
dec
push
scas
lock
loop
aam
rorl
dec
test
push
mov
mov
dec
inc
lds
mov
and
cmc
insl
xchg
xchg
jne
cmovnp
xchg
add
mov
test
sbb
push
fidivrs
ficoms
int
add
mov
lock
add
icebp
sbb
cli
repnz
fldt
sub
inc
pop
cli
paddsw
push
enter
repnz
adc
je
lds
adc
mov
sbb
pop
inc
lds
xchg
mov
ret
aas
nop
mov
mov
cltd
or
inc
mov
and
dec
dec
inc
hlt
jg
cmpsb
psubb
or
lock
inc
pusha
add
aad
clc
test
nop
addl
mov
les
sub
inc
jg
cmp
mov
repz
mov
ficomps
movsl
cmp
mov
js
mov
fldcw
fimull
ljmp
dec
add
inc
dec
sub
arpl
arpl
popf
clc
mov
xor
cmp
cmp
int
xor
cmp
ljmp
int
xor
adc
dec
push
mov
in
mov
jno
pop
sti
sbb
movsb
jne
push
loop
jb
pop
rcrb
fistps
lods
sbb
pop
fdivs
mov
out
mov
sub
ds
xor
and
push
jge
add
pusha
jb
cmc
lahf
leave
cmp
int3
jl
ror
mov
arpl
jbe
jg
lcall
and
shlb
or
jns
push
jge
mov
and
jno
add
int3
out
loopne
sub
xchg
loope
ret
sbb
lods
lods
xchg
and
push
test
scas
lret
test
popa
ss
adc
ljmp
and
imul
sbb
mov
decl
mov
fists
les
sub
add
call
cmpb
sahf
mov
mov
mov
ret
xchg
inc
mov
pop
or
mov
and
cmpl
ds
inc
fidivrl
js
sub
mov
cmpsl
add
pusha
repnz
or
xchg
lds
ret
loopne
lds
jmp
push
sub
loopw
jbe
sub
and
xchg
daa
push
mov
lret
fwait
jno
or
pop
lret
cmpl
mov
mov
repz
mov
sbb
and
push
mov
add
inc
sarb
sti
push
mov
ds
lret
mov
xchg
sahf
sbb
aad
insl
cmpsl
fsubrl
sub
sahf
daa
out
push
ljmp
pop
pushl
inc
xor
jnp
cs
lods
pop
lock
test
imul
fistl
cmc
sub
ds
and
cmp
jl
dec
cli
leave
hlt
jb
add
icebp
enter
cltd
stos
cmp
or
and
sahf
mov
pop
es
outsl
push
in
and
iret
bound
dec
mov
adc
xchg
sub
fcomp
outsl
js
scas
push
sbb
dec
psrld
adc
lock
pop
in
xor
mov
lods
mov
jg
ljmp
hlt
aaa
adc
sbb
js
and
adc
push
psllq
notb
inc
imul
pushf
xchg
and
pop
rclb
movsl
mov
inc
cmp
jmp
loopne
lds
xlat
mov
jl
mov
loopne
mov
sbb
addr16
in
fcomps
popa
nop
insl
cmp
fld
call
inc
adc
test
and
pop
push
lods
xor
imul
push
cmpsl
lret
sahf
mov
popf
dec
outsl
shr
add
add
xlat
adc
loop
push
stc
dec
sbb
adc
cs
xor
es
lods
fnstcw
dec
int
pop
imul
dec
imul
pop
dec
jne
adc
lret
xchg
ja
pop
pop
mov
jo
inc
add
and
and
loope
test
push
gs
cltd
shrl
movsb
sub
pop
pop
repz
bound
cwtl
cltd
jg
adc
outsl
pop
mov
rorl
and
lds
movsl
lret
sub
mov
cmp
gs
lret
fidivrl
mov
pushf
mov
fdivs
hlt
js
cmp
lods
adc
mov
sub
push
add
jnp
hlt
dec
hlt
mov
push
push
jge
or
bound
cld
sti
push
mov
rorb
enter
pop
out
pop
fucomip
lahf
push
jb
push
ds
repz
mov
or
cmc
mov
hlt
mov
and
lcall
outsl
in
lods
rcr
xchg
jne
outsb
popf
shl
or
mov
mov
pop
pushf
mov
daa
push
cmpsb
lock
mov
mov
mov
orl
in
ljmp
xchg
scas
mov
imul
and
mov
jbe
icebp
addb
dec
rcll
push
je
mov
icebp
insl
shll
and
out
mov
jl
daa
outsl
mov
cmp
xor
int
jg
dec
js
loope
imulb
mov
or
popf
mov
xor
or
mov
cmp
into
inc
sarl
sbb
cmp
push
les
nop
movsl
imul
std
jno
fstps
xor
sub
in
ret
rorl
and
mov
notl
jns
push
in
xchg
loope
mov
or
fildl
or
push
adc
out
mov
dec
stos
popa
hlt
xlat
push
add
add
ljmp
add
dec
jbe
clc
pop
mov
insb
push
pushf
lret
jl
divb
nop
fstpl
cwtl
pop
outsl
adc
sbb
mov
pusha
stos
mov
imul
inc
rcrb
data16
jo
or
shll
adcl
fbld
aam
push
mov
nop
pusha
xor
jle
jg
je
pop
jl
outsb
jb
cli
dec
fimuls
aas
cmpb
out
sbb
pop
jge
icebp
dec
mov
jno
mov
mov
mov
and
and
sub
sti
sub
cmp
testl
gs
jle
enter
dec
mov
loopne
mov
xchg
jae
jns
inc
sbb
mov
add
scas
or
mov
mov
push
hlt
xchg
dec
setno
mulb
into
das
or
mul
mov
adc
add
movsl
aad
cmp
mov
pop
pop
xchg
xchg
das
pop
push
sbb
push
or
pop
inc
cwtl
iret
mov
cmc
shrb
dec
arpl
and
mov
inc
subl
xor
pop
outsl
sub
lcall
cmp
jo
rorb
cmpsb
push
inc
ds
push
ss
sbb
cmpsb
xor
push
jbe
mov
cmpsb
push
or
insb
xchg
add
test
outsl
jo
xlat
push
enter
xor
pop
inc
ret
aam
push
daa
pop
fsubl
mov
lret
stos
int3
fidivs
sbb
mov
in
push
popa
test
insl
in
adc
dec
mov
cmp
pop
lea
stos
nop
xor
iret
or
jge
pushf
cltd
sti
jbe
sbb
push
sub
jno
fsubrl
mov
jb
inc
ret
sarl
dec
and
xor
adc
mov
sub
xchg
sub
sub
mov
inc
xor
mov
mul
xor
mov
fdivl
iret
in
push
push
jns
cltd
adc
cmp
aas
push
ja
lret
xor
xlat
cld
fsubrl
cmp
mov
mov
inc
and
shll
lds
daa
int3
mov
in
insl
ss
bound
dec
add
loope
cmc
adc
dec
test
cld
int
mov
inc
sbb
dec
sbb
or
push
das
mov
pop
pushf
jns
ds
xchg
dec
imul
mov
adc
std
mov
add
sbb
add
pop
cmp
lds
push
movsl
xor
and
dec
mov
mov
repnz
mov
fwait
enter
js
fdivs
dec
into
or
push
das
sbb
enter
cmp
xchg
jmp
in
mov
popf
inc
push
pop
sub
mov
repnz
and
mov
sbb
addr16
jb
sub
cmpsb
adc
pop
imul
ret
dec
nop
stos
jns
xor
inc
cmp
hlt
cmpsl
loopne
ret
dec
fidivrl
sbbb
sarb
pop
arpl
js
mov
bound
xchg
mov
jle
hlt
cmp
icebp
loop
mov
and
in
push
xchg
push
xchg
ds
jbe
data16
lcall
add
repz
xor
pop
lods
or
stos
push
sub
mov
push
fists
ror
pusha
jmp
pop
pusha
adc
sub
imul
push
jae
xchg
cmp
push
lock
xor
int3
jnp
jg
lock
pop
fldenv
or
push
and
pop
push
fldcw
push
lret
fstpl
cmp
ljmp
test
sbb
jb
pushf
in
out
inc
popf
cmpb
pop
push
jge
cli
and
xor
mov
imul
and
mov
dec
add
add
push
ds
jno
cmp
pop
mov
add
cmp
mov
mov
add
mov
sbb
mov
cld
orl
adc
fmull
mov
test
jae
sahf
shrl
sub
ds
stos
jmp
fstps
or
mov
movsl
and
jle
pop
mov
add
lahf
mov
xor
add
stos
dec
sbb
aam
xor
rcr
add
psubsw
pop
andl
inc
scas
adcl
dec
imul
and
xchg
ja
jg
xlat
mov
bound
popf
stc
jnp
mov
mov
pop
xchg
clc
adc
das
popf
int
dec
add
std
add
lods
mov
cmp
test
ds
addl
pop
dec
jge
imul
cltd
rclb
in
rclb
and
ret
xchg
mov
and
es
shll
pop
jp
fsubs
sahf
std
add
pop
lock
cwtl
stos
movsl
ss
xchg
adc
rcrb
stos
jns
insl
inc
inc
rcrb
jns
rcll
xchg
rcrl
xchg
std
test
test
cld
shrl
xchg
mov
in
xor
lods
dec
mov
jl
shl
mov
fidivl
out
sbb
push
ficomps
pop
add
or
lds
mov
clc
cmc
pusha
fucomi
inc
dec
add
stos
daa
inc
fdivl
push
iret
jo
jne
gs
punpckhbw
mov
push
sahf
lds
jne
les
mov
aam
xchg
fidivs
pop
aaa
push
mov
sbb
push
pop
mov
pop
mov
mov
push
gs
cwtl
push
bound
adc
out
or
or
je
jae
cmp
fwait
mov
xchg
inc
mov
sbb
decb
into
icebp
jecxz
jo
mov
jns
mov
xor
push
rolb
sarl
jp
js
xchg
cwtl
adc
dec
ds
push
daa
fcmovnbe
cmp
push
enter
jge
or
xlat
shll
sub
mov
or
fisubl
loopne
cltd
test
mov
mov
in
subl
cmp
cmpsb
push
inc
xor
imul
sbb
mov
adc
fnstsw
arpl
aaa
mov
into
inc
inc
popf
adc
fstpt
sti
and
stos
xchg
mov
push
push
jmp
fistl
lods
ret
aas
jno
icebp
ret
or
movsl
mov
xchg
lock
addr16
outsb
push
idiv
cmpsl
jno
loope
jle
fsts
arpl
inc
pop
cli
jae
frstor
jae
outsb
sbb
pop
repz
jbe
into
pop
xchg
mov
sahf
dec
pop
mov
imul
cmp
or
xchg
shr
and
push
stos
stc
lcall
sbbb
mov
inc
mov
mov
std
mov
push
pusha
add
mov
jmp
cs
fs
repz
loope
inc
in
and
sete
and
loope
mov
push
and
test
andb
ljmp
dec
mov
negl
add
add
xchg
push
xchg
js
mov
sub
sub
add
mov
dec
xchg
push
in
pop
pop
ja
cld
fistpll
iret
test
cmp
sub
js
push
flds
clc
mov
adc
sub
cmp
cmpsb
push
pop
sbb
xor
fidivs
fcmove
repnz
mov
xchg
aas
cmp
and
dec
xchg
jnp
movsl
cli
pshufw
adc
mov
repz
xorl
jae
movsb
dec
jo
mov
rclb
fdivl
jp
mov
arpl
xchg
fbld
mov
xchg
inc
sub
jae
negl
shlb
pop
test
cs
inc
stos
call
jnp
push
jl
sub
adc
cs
cli
push
push
xchg
push
jb
shl
outsb
lret
mov
xor
xchg
fimull
xchg
inc
push
or
iret
adc
dec
movsb
sbb
sub
out
orl
fimuls
sub
mov
mov
stos
adc
sbb
or
sti
jl
arpl
sbb
jge
es
pop
jns
xor
daa
add
xor
mov
cs
xchg
outsb
sbbl
inc
sbb
into
stos
sub
jecxz
data16
or
call
icebp
pop
enter
pusha
sahf
mov
dec
xchg
or
int3
cmpsl
clc
sub
roll
jle
jb
sahf
seto
xchg
lds
xlat
sahf
cmpsb
aaa
mov
fistl
dec
xchg
push
or
enter
loop
xchg
jge
xor
iret
stos
ret
fldt
mov
mulb
dec
js
cmpsb
mov
call
movl
gs
test
jg
imul
scas
mov
mov
scas
xchg
or
xlat
int3
mov
mov
mov
push
or
sbb
jo
rep
jmp
test
subl
cmp
cmp
inc
fs
and
stos
sbb
and
cmpsb
fcomps
dec
in
fwait
xchg
cmp
mov
inc
xchg
out
addl
mov
js
sti
aam
test
cmp
ds
inc
xor
dec
sbb
mov
adc
sbb
inc
jmp
insl
inc
repnz
jge
sbb
fsts
into
fidivs
jno
xchg
add
popl
sbb
cmp
cmp
push
mov
push
std
adc
gs
imul
pusha
inc
and
sarb
mov
imul
stos
aas
dec
pop
dec
add
clc
push
xchg
loopne
mov
sbb
jg
mov
lcall
cwtl
pop
mov
pop
enter
inc
ret
inc
cmp
pop
xlat
nop
sbb
mov
xchg
push
fwait
sub
jg
sub
test
mov
mov
mov
push
fnstenv
jnp
mov
loop
dec
ljmp
mov
repnz
xchg
sbb
scas
test
test
lret
pop
clc
ja
and
bswap
repnz
test
jecxz
pop
pop
sti
js
lea
or
push
mov
aas
sub
outsb
adc
mov
sub
cmc
mov
clc
negl
pop
lods
in
mov
or
insl
mov
jle
cmpsb
xchg
stos
dec
inc
sub
ss
outsl
pop
xchg
stc
shr
sbb
je
inc
lds
xchg
sbb
jl
movswl
rcll
ja
pop
jle
lock
lods
lcall
mov
hlt
adc
lods
shll
adc
test
mov
or
mov
cmp
fmul
fisubs
pop
iret
cmp
cli
pop
sbb
pop
test
scas
cltd
sbb
add
mov
adc
mov
xchg
test
ja
pop
dec
jnp
xor
pop
fwait
xchg
movsl
pop
cs
or
push
popf
mov
xchg
sahf
cmp
push
jne
jno
sub
push
fwait
add
mov
xor
int3
rcrl
in
jb
es
inc
mov
lahf
and
incb
aas
jp
pop
mov
cmp
iret
cmpsb
inc
clc
shrl
stos
outsl
ja
outsl
pop
int3
icebp
jae
xchg
jmp
daa
std
popf
je
loopne
dec
lret
inc
pop
pop
je
cmp
insb
imul
nop
aas
stc
adc
es
jbe
xor
inc
lods
jge
fisubl
adc
push
jbe
stos
in
and
fwait
jne
imul
mov
add
pop
xor
sub
mov
add
jno
or
mov
cwtl
cwtl
cmpsb
push
pop
ret
cli
push
push
mov
bound
mulb
inc
pop
lds
testl
sbb
push
jnp
mov
pop
mov
insb
mov
xchg
push
lret
and
mov
jne
ja
jmp
or
lret
cld
ret
mov
lret
and
xor
fucom
outsb
adc
mov
push
xor
sub
fwait
lret
push
add
mov
icebp
adc
adc
xor
jle
mov
jmp
test
lea
inc
mov
xor
outsl
ds
outsb
test
pop
pop
push
mov
es
pop
outsl
add
jae
scas
leave
stos
adcl
repz
jl
leave
cmp
pusha
cwtl
dec
sbb
adc
dec
imul
push
jno
add
dec
sbb
shl
mov
dec
ljmp
fstpl
dec
arpl
add
mov
mov
cmp
and
testb
add
jg
mov
pop
shll
repnz
add
in
mov
mov
and
inc
sbb
lcall
aas
cmp
dec
insl
push
mov
inc
add
push
dec
xor
inc
add
rcrl
cmpsb
push
clc
in
sbb
xor
jp
enter
sahf
dec
imul
inc
mov
gs
sub
test
mov
cmp
mov
pushf
ja
pop
mov
icebp
inc
daa
lock
push
pop
cmpb
jecxz
stos
lahf
mov
xchg
jo
ss
leave
data16
stc
popf
mov
popf
clc
push
sbb
xchg
pop
addb
aam
dec
clc
push
fwait
xlat
sbb
pop
bound
or
xor
dec
or
sbb
xor
clc
cli
sbb
lret
add
mov
xchg
les
and
ja
loopne
mov
loop
inc
mov
scas
jo
movsb
arpl
push
arpl
pop
cmpsl
push
mov
cmp
mov
sbb
stos
mov
jne
xchg
daa
nop
insb
xor
xchg
loopne
mov
adc
out
inc
pop
xchg
out
mov
push
or
xchg
cli
xchg
jno
inc
mov
xor
shlb
dec
shl
sarb
loop
inc
ret
test
rcl
imul
jl
add
dec
mov
rcrb
fwait
jge
jo
stos
mov
push
dec
dec
push
pop
filds
pop
fs
out
imulb
cmp
fadds
push
scas
test
xchg
jo
sbb
and
cmp
scas
pop
mov
imul
mov
pushf
push
jmp
mov
or
enter
xor
jp
inc
fstl
inc
lret
jg
push
orb
leave
add
fstpt
xor
sub
sub
cmp
push
mov
cmp
adcl
cmp
mov
shl
mov
dec
inc
cltd
cltd
scas
andb
pop
iret
sti
repz
out
or
out
popa
pop
aad
fcomip
cmp
dec
roll
dec
mov
faddl
clc
xor
in
and
das
in
stos
loope
inc
ret
imul
popf
jmp
pop
jecxz
push
enter
mov
inc
xor
test
push
hlt
or
add
leave
cld
icebp
out
ret
mov
cmp
clc
adc
push
clc
es
mov
adc
out
leave
test
push
in
sti
inc
push
inc
sub
movsb
push
push
icebp
sti
cld
lock
xchg
cmpsb
or
orl
or
xor
or
mov
pusha
or
mov
cmpsb
mov
xor
adc
insb
shrl
mov
stc
testb
mov
inc
es
push
pusha
push
or
xlat
stc
pop
push
push
scas
imul
in
jl
in
scas
out
divb
adc
pop
sub
jl
fimuls
mov
ljmp
loopne
arpl
jb
mov
aaa
and
divb
andb
lock
fisubl
lahf
mov
cmpl
adc
stc
out
sbb
and
std
addl
test
movsl
repz
jg
cwtl
rol
jae
std
fimuls
inc
fld1
fisttpll
cmp
jmp
aaa
or
stc
jmp
sub
push
mov
js
or
pop
pop
xchg
test
shrb
push
repnz
and
loopne
pusha
incb
cld
fs
ret
lock
push
dec
xor
fdivrs
mov
xor
popa
sbb
ret
sbb
mov
sub
jmp
mov
ret
insb
jl
ret
jmp
insl
xor
adc
dec
icebp
pop
xor
std
fnstcw
cmp
mov
sbb
inc
testl
pushf
xchg
lock
loop
and
pop
xlat
add
pop
out
sar
inc
pusha
cs
cmc
pop
and
sti
cmp
dec
sbb
dec
cmc
mov
push
imul
mov
aad
jecxz
scas
scas
add
out
sbb
mov
mov
cld
fisttpll
cmp
mov
dec
push
add
inc
inc
nop
adc
mov
shr
bound
cwtl
sbb
popa
movsb
call
mov
lods
or
mov
jp
stos
inc
mov
sub
cmpsl
data16
fcmove
cmc
inc
jge
xor
test
sbb
mov
cld
mov
sub
cld
subb
inc
jb
dec
push
shr
push
cli
mov
movsl
out
ss
cmp
test
pop
sub
pop
sbb
inc
gs
sarb
popa
sbb
je
jp
add
adc
std
stc
addr16
mov
jmp
lods
and
into
push
pop
sub
jecxz
push
mov
xchg
aaa
hlt
dec
dec
sti
sub
mov
scas
repnz
pop
insb
xor
xor
jecxz
adc
cmp
push
fmuls
adc
outsb
test
add
adc
mov
mov
mov
xchg
fistps
ds
mov
lock
mov
fabs
cld
dec
dec
daa
pushf
ja
fisubs
cmp
xchg
pop
arpl
mov
ss
mov
pop
dec
and
ds
pop
add
lahf
fmul
adc
mov
test
ffree
push
xchg
enter
mov
inc
stos
std
and
shrl
test
in
idivl
inc
iret
dec
fldenv
bswap
xor
out
in
sar
arpl
in
test
mov
jne
clc
test
pop
push
jg
faddl
jae
xchg
and
inc
sub
sub
sarl
ljmp
xchg
mov
pop
jg
sub
aas
out
jp
inc
cwtl
jecxz
test
xchg
mov
enter
mov
mov
cwtl
pop
or
cmp
cmpsb
shrb
sub
cmp
fwait
push
aaa
bound
arpl
inc
leave
sahf
push
ljmp
add
fcmovnbe
fstpt
sbb
push
aas
or
cmpsb
es
aaa
xor
out
mov
xor
ror
aaa
add
sbb
call
sub
sahf
test
cwtl
pop
add
popa
push
jge
xchg
pop
sti
mov
lds
fiadds
mov
hlt
hlt
mov
aas
pop
fcomip
fcoms
stc
cmp
push
sub
cmp
rolb
aas
pop
add
jae
sbb
mov
or
sbb
jmp
mov
cmp
clc
and
push
add
insl
xor
das
fwait
pop
and
std
xchg
out
int3
mov
out
xchg
ret
sub
mov
cltd
shlb
out
dec
push
aad
mov
dec
dec
mov
mov
dec
popf
inc
in
sbb
inc
lods
add
cmp
mov
call
or
and
mov
mov
add
adc
dec
sub
lret
shrb
rorl
dec
jo
pop
jge
jge
das
test
stos
scas
das
xchg
sbb
cs
fistps
mov
mov
pop
lds
inc
mov
lock
inc
cmc
push
sbb
lahf
roll
push
add
add
rcrb
cli
add
cli
ss
movsb
mov
jne
push
or
rol
jg
out
xchg
mov
in
lea
pop
adc
andb
pop
pop
insb
sub
pop
adc
pop
jecxz
add
cmp
sbbl
in
pusha
mov
dec
mov
popa
adc
aaa
sub
pushf
mov
adc
mov
lea
mov
mov
fnstcw
sbb
std
mov
jb
imul
jp
jno
pop
and
mov
in
adc
shrb
jecxz
pushf
arpl
and
dec
adc
fstpl
shll
pop
stos
jl
mov
or
out
mov
xlat
cmpsb
cld
ljmp
mov
add
test
dec
leave
adc
cmpsl
jge
xchg
lds
lods
and
sbb
xacquire
std
add
daa
mov
mov
xchg
mov
ret
push
pop
popa
insl
shr
jns
cmp
jb
movsb
jae
mov
or
repnz
test
jnp
mov
cmp
inc
jl
or
or
add
adc
add
add
lock
inc
inc
cli
test
pop
mov
test
jl
ret
jg
sub
sahf
xor
lods
les
xor
sbb
stc
js,pt
mov
mov
push
sbb
sahf
stos
xchg
pop
icebp
or
or
hlt
mov
test
shlb
jae
push
cs
or
rorl
pop
push
fmul
cvtps2pd
jecxz
or
mov
sub
jl
pop
pushf
inc
outsb
mov
mov
movsb
adc
cmp
fisttpl
xor
push
je
std
aam
imul
xor
sti
cmp
shl
mov
mov
aaa
aad
divl
shll
xchg
xchg
mov
stc
ja
int3
sahf
mov
call
out
popa
mov
aas
leave
rorl
push
mov
cmp
mov
push
jge
lea
mov
xchg
cmp
adc
ja
cmc
in
add
dec
xchg
pushf
jge
ljmp
push
mov
ljmp
icebp
lea
cwtl
aaa
and
cmpb
and
aam
ljmp
sahf
sub
js
fmulp
sti
pop
sbb
ljmp
mov
add
xchg
fistl
dec
pop
in
pushf
sub
clc
xor
add
add
js
ficomps
and
addl
cmpsl
orl
cmp
xor
mov
push
rorb
mov
xchg
mov
mov
adc
pop
pusha
mov
add
dec
mov
inc
sbb
imul
dec
xchg
pop
imull
cmp
das
xchg
cmp
out
das
and
or
insl
add
out
jmp
xchg
sub
fnstcw
add
mov
add
enter
pop
mov
xchg
sbb
sub
push
cs
or
jmp
sub
js
xor
aam
add
orl
pusha
rolb
mov
out
cmp
sub
xor
add
sbb
mov
in
aaa
push
cmp
dec
add
jbe
stos
push
out
xchg
pop
mov
push
out
div
ror
mov
leave
rclb
dec
in
mov
sub
dec
fs
add
fmuls
movb
adc
pop
nop
ljmp
stos
in
std
jmp
cmc
jg
dec
ret
ljmp
aam
mov
arpl
ret
cmp
mov
inc
addr16
cmp
enter
xchg
sti
scas
lcall
or
test
clc
ret
jmp
mov
rorb
push
mov
int3
sbb
mov
stos
adc
jae
add
pop
std
rcrl
cld
mov
divl
push
push
mov
fildl
pop
add
inc
jne
jno
imul
push
fistps
xor
or
pop
xor
pop
xor
push
xor
dec
cmc
pop
pop
mov
inc
push
pop
jge
rcll
popf
lock
jge
jbe
jl
fidivs
std
and
xchg
in
cli
pop
inc
test
andb
jle
push
cmp
xor
fisubs
loope
shll
cmp
push
in
je
sub
sub
lds
fldl
cmc
or
mov
nop
sub
cwtl
scas
mov
push
pop
ret
inc
test
lea
xlat
push
inc
negb
dec
add
orl
aaa
jae
jnp
mov
imul
mov
sub
icebp
cmp
mov
inc
push
adc
mov
aam
xor
fldt
pop
pop
pop
push
repz
aam
mov
repz
mov
cwtl
push
lock
enter
in
jo
test
icebp
sbb
xchg
dec
dec
pop
decb
push
popa
pop
xor
fmul
lock
leave
test
imul
cmp
std
outsl
js
rclb
sarl
lods
dec
or
jbe
lds
lret
iret
adc
pop
jle
and
in
inc
int
mov
dec
and
repnz
and
cmp
testl
and
out
mov
imul
cli
xchg
jecxz
fnstcw
call
sub
dec
inc
jg
push
xchg
dec
add
xlat
inc
or
jne
fs
and
sub
loop
sub
mov
sub
out
int3
mov
fildll
adc
test
jge
pop
sbb
fstpt
scas
push
mov
stc
push
dec
arpl
pop
sbb
sbb
gs
aad
push
mov
push
mov
int3
bound
stos
dec
dec
lock
ljmp
lret
push
xchg
imul
fisttpl
test
or
xor
movsb
adc
pop
sbb
or
lcall
in
neg
adcb
push
in
jno
jmp
and
push
bound
mov
in
dec
int3
or
inc
rolb
decb
push
xor
testl
sbbb
xchg
sub
sbb
pop
cltd
mov
ljmp
mov
outsb
xchg
xor
jp
xor
adc
or
dec
mov
cmc
cmpsl
xchg
push
mov
push
push
scas
dec
pop
insl
les
fnstsw
sbb
jnp
sahf
lahf
nop
fucomp
mov
mov
nop
push
cmp
mov
push
mov
cmp
pusha
scas
lahf
adc
je
insl
pop
repz
adc
popf
aad
xchg
repz
insb
testl
push
lock
ret
fsubrs
loop
test
pop
dec
sti
scas
test
pop
jne
xor
or
adc
dec
cmp
cmpsb
fsts
or
fucom
rcrl
mov
rclb
data16
dec
jp
mov
iret
stos
fsubrs
jno
add
mov
test
cmp
pop
jmp
and
sub
dec
mov
xchg
xchg
xlat
scas
dec
add
mov
xchg
and
fidivl
shrb
and
insl
push
jb
pop
jnp
leave
or
push
test
loopne
pop
cmp
sub
cmc
fisubs
test
test
dec
lods
mov
stos
push
sbb
insb
dec
cmp
lods
jae
scas
call
out
dec
mov
into
inc
aas
shrb
popf
lock
js
xchg
push
rcl
jmp
xor
and
mov
add
and
add
sub
xchg
push
mov
cwtl
cld
idivl
addr16
pushf
aaa
inc
pop
stos
pop
cli
pusha
mov
pop
or
jge
mov
lock
std
cltd
sti
inc
mov
in
mov
dec
xchg
xor
imul
inc
cmp
shlb
jnp
push
lahf
fs
pop
adc
mov
pop
mov
aad
pop
mov
ss
insl
adc
cltd
jp
pop
inc
or
add
lcall
mov
shl
fcomps
push
rep
call
and
or
jno
aam
daa
xchg
jns
sbb
inc
pop
pop
pop
es
movsl
jmp
ds
pop
pop
gs
leave
cld
sahf
aad
mov
test
aad
iret
in
mov
mov
js
add
jmp
jmp
mov
dec
in
je
int3
inc
xchg
cwtl
or
or
adc
adc
xchg
push
jbe
popf
add
pop
jge
inc
pop
rol
iret
add
scas
mov
out
dec
cmpsb
cmpsb
ds
sbb
sub
sarl
sbb
sahf
in
addr16
mov
repnz
lret
insl
dec
add
adc
shrb
pop
and
sbb
xchg
enter
cwtl
pop
mov
jns
mov
sbb
pusha
outsb
cli
jb
fidivrl
repz
pop
repz
xlat
xchg
cmpsb
jbe
xchg
sti
dec
aam
js
jp
movl
punpckhdq
mov
or
popf
push
cwtl
xor
mov
cmp
xchg
rep
aam
arpl
inc
push
jns
mov
mov
aam
testl
push
sub
jmp
js
cmpb
lret
hlt
insb
push
inc
cmp
adc
push
mov
adc
aam
or
push
rcrb
lds
push
inc
mov
notb
clc
mov
lret
loop
sbb
inc
sub
mov
int
sub
mov
pop
loop
into
call
adc
stos
mov
ret
push
in
jae
iret
mov
int3
cli
and
test
xchg
push
xor
lods
sti
ljmp
jo
xchg
js
add
push
xchg
ficompl
dec
icebp
fcompl
sub
xor
js
js
adc
ljmp
aas
lock
dec
add
shll
xorl
and
pop
xor
and
cld
dec
inc
cmp
jecxz
push
fisubrs
push
or
stos
sbb
mov
mov
pop
gs
imul
clc
rolb
sbb
cmp
shrb
test
cwtl
fiadds
mov
xchg
sbb
inc
imul
pop
leave
jo
aaa
inc
fcmovnu
or
fimull
lret
cmp
xor
loope
mov
dec
mov
fcoms
adc
and
pop
int3
lds
pop
sbb
pop
adc
pop
inc
fwait
pop
cmp
mov
scas
out
adc
and
inc
je
es
mov
std
out
leave
push
pusha
ss
cmp
call
mov
push
mov
mov
push
dec
imul
xor
pop
xchg
cld
sbb
mov
mov
fadd
cmp
rclb
and
xchg
sbb
adc
push
mov
sbb
repnz
and
mov
in
sub
sahf
inc
inc
cmc
fidivs
es
adc
xchg
mov
push
and
xchg
cmp
sub
dec
hlt
sbb
jnp
fcmove
stos
lret
mov
jnp
mov
movsl
pop
pop
cltd
xor
invd
arpl
js
jle
fnstenv
icebp
lea
xchg
sbb
sbb
sahf
scas
xchg
mov
jns
test
and
mov
jnp
rorl
inc
lahf
ljmp
jo
cs
mov
rcrl
or
cld
and
sub
mov
jns
rolb
inc
sbb
out
inc
mov
pop
sub
mov
stos
bound
sub
and
jb
mov
jae
mov
repz
sbb
aad
xorb
ds
cmpxchg
and
cmp
xchg
sub
mov
daa
ret
lea
repnz
psrlq
subb
leave
push
mov
loop
pop
lcall
stc
mov
jae
cmc
cmpsl
inc
in
xor
push
xor
jp
ljmp
jmp
xchg
sbb
mov
pop
mov
cmc
jae
test
shrb
push
je
xor
inc
cltd
out
xchg
sbb
je
inc
add
call
stos
mov
cmc
push
sub
repnz
mov
mov
adc
or
movsl
jge
into
xor
pop
xchg
push
fbstp
pop
xor
inc
std
rcll
inc
insb
lret
shll
sub
lret
fcompl
out
adc
jecxz
das
lods
or
aaa
rcl
nop
xchg
pop
add
or
mov
dec
stos
jnp
sbb
fbstp
jecxz
jmp
sub
loop
mov
cltd
pop
daa
mov
pop
ja
into
in
stc
add
sub
cmp
jle
cmpb
nop
lea
in
pop
mov
xor
and
jecxz
jb
mov
lret
dec
sbb
or
fnsave
int
inc
stos
sarb
and
xor
xchg
dec
in
and
in
and
mov
lret
pop
out
pop
lahf
or
xlat
cs
mov
test
and
or
adc
loopne
std
add
dec
xchg
ljmp
rolb
and
jecxz
push
gs
pop
sbbl
xchg
jmp
ret
in
dec
popa
test
popf
bound
sbb
add
test
lock
jle
mov
mov
adc
xchg
sbb
or
push
mov
mov
push
in
iret
xchg
jae
mov
scas
fsubp
rorl
mov
test
aaa
je
inc
aas
lock
ret
jae
cld
mov
sbb
lahf
imul
in
pusha
xor
shl
sbb
mov
inc
mov
aaa
sub
jno
mov
and
sti
lea
jno
decb
jg
mov
or
xor
cmp
mov
xor
inc
ja
push
push
inc
daa
ss
jmp
xchg
les
das
fwait
cltd
repnz
cmp
hlt
ds
jne
cmp
icebp
jno
fwait
dec
dec
stos
inc
lods
repz
mov
and
xor
cmp
jecxz
xor
imul
pushf
add
sub
jno
xor
push
adc
cmp
mov
test
nop
adc
mov
jmp
and
mov
mov
fisubrs
rcrl
jae
jg
cmc
lar
push
stc
fsqrt
int
rcl
or
pop
pop
inc
test
push
bound
mov
add
pop
lods
arpl
sbb
xchg
dec
inc
shrb
mov
xchg
xlat
pop
or
pop
lret
into
dec
dec
cmpsb
divb
and
sbb
pop
loop
addb
pop
sahf
adc
push
dec
mov
fstpl
leave
subb
test
add
xchg
popf
sahf
test
div
pop
es
aam
popf
mov
in
jb
stos
insb
out
pusha
mov
aam
fdivrl
ficomps
or
jp
pop
cmpsb
mov
push
sbb
cmp
popa
lahf
xchg
mov
fcmovu
xchg
shll
shll
pop
cs
jo
mov
mov
pop
and
mov
fs
or
mov
ljmp
pop
jmp
add
cs
sub
into
and
xlat
or
jbe
dec
ret
adc
lret
or
test
mov
push
sbb
sbbb
ja
push
popa
add
dec
fstl
jle
iret
stos
out
xor
popf
fisubl
movsl
push
cmpsb
fwait
jnp
test
mov
cmp
add
fistl
mov
int3
scas
ret
int
pushf
jo
fdivr
inc
mov
cmpsl
push
into
mov
shl
jge
loop
loope
pop
out
or
cmp
pop
mov
popf
xchg
and
sahf
sbb
mov
mov
dec
mov
stos
mov
sahf
ss
in
insl
add
sub
cmp
mov
cmp
ret
push
loopne
xchg
adc
xchg
and
jo
sub
xchg
imul
xor
add
push
lods
mov
cmp
pop
mov
mov
and
xchg
jmp
xchg
jp
pop
push
cmp
xor
and
pop
xor
mov
cmc
enter
inc
in
and
xchg
push
sub
xchg
insl
inc
fisttpll
mov
mov
xchg
lret
jno
scas
scas
lret
rcrl
mov
dec
mov
inc
adc
sti
je
bnd
bnd
jg
in
fldl
mov
sahf
sbbb
adc
pop
rcrl
insl
imull
jl
fimuls
rcrb
addl
cmp
shrb
sti
pop
dec
inc
cmpsl
inc
mov
aas
inc
repz
add
lock
pushw
adc
bound
mov
icebp
add
adc
les
dec
dec
mov
lret
outsl
out
inc
xchg
nop
test
adc
push
aad
mov
inc
rolb
pop
dec
out
add
mov
popf
mov
and
aas
mov
add
pop
or
mov
fisubrl
fwait
jmp
imul
pop
lcall
mov
inc
fwait
mov
clc
and
xor
add
xlat
lock
fiaddl
mov
mov
mov
xor
push
call
fidivrs
inc
popf
repz
pop
imul
nop
pop
addr16
sahf
dec
insl
mov
mov
xchg
cmp
nop
inc
mov
xor
movsl
outsl
jg
push
aad
mulb
inc
inc
mov
movsb
imul
out
lock
stc
sub
sub
push
jns
sbb
test
sub
popa
js
adc
je
adc
sbb
cmp
dec
sbb
mov
and
add
push
cltd
out
xchg
dec
xchg
cltd
stc
stc
insb
push
mov
inc
cmp
xor
push
orl
in
sbb
loopne
sub
sahf
xchg
push
mov
insb
ds
push
roll
and
sti
lahf
out
push
or
pop
push
or
sbb
add
add
in
movsb
arpl
xchg
mov
pusha
adc
pop
arpl
jp
scas
dec
pop
mov
lds
fs
sbb
mov
pop
cmpsb
out
lods
cmp
xor
sti
mov
lret
imul
jnp
loope
mov
arpl
cmp
or
add
sbb
in
jae
add
mov
lods
sbb
iret
add
xor
sub
mov
in
repnz
sbb
sub
mov
rorb
sbb
hlt
push
inc
mov
mov
mov
xchg
add
clc
lods
xchg
mov
jo
mov
stos
xor
es
fcoml
fnstcw
fiaddl
movsl
into
iret
inc
or
mov
std
jl
mov
and
xchg
lcall
pop
mov
shrl
or
in
pop
cli
dec
adc
aam
xor
shll
mov
and
and
aam
inc
lea
pop
jne
and
cld
inc
icebp
sbb
cmp
mov
mov
mov
mov
lahf
mov
loope
add
xchg
jmp
adc
faddl
pop
or
in
psubq
sbb
jb
inc
fldt
wrmsr
aad
in
mov
and
and
and
push
mov
sarl
inc
lret
mov
mov
or
dec
gs
aaa
js
jno
in
cmp
repnz
iret
sub
gs
pop
pop
push
ret
xlat
cwtl
loopne
adc
frstor
jno
ret
aam
push
call
pop
mov
sti
xchg
jmp
out
dec
sub
xchg
scas
mov
and
xchg
pop
lea
lods
adc
jns
cmp
iret
js
xor
push
sbb
xor
loop
add
adc
jbe
ret
xchg
loopne
or
jmp
arpl
imul
int
adc
bound
adc
push
sub
iret
popa
data16
sbb
push
out
int3
mov
or
xchg
mov
call
sbb
push
insb
mov
sub
pop
and
mov
push
xchg
mov
or
scas
test
fistpl
sbb
mov
add
scas
and
or
mov
imul
loope
dec
inc
add
shrl
lock
push
stos
lret
sub
es
push
or
int3
pop
sahf
dec
das
pop
cmp
fndisi(8087
cmpsb
adc
sub
outsl
fsubr
mov
popa
push
loopne
jmp
repz
out
xchg
mov
ret
pusha
in
bound
mov
jo
sub
mov
out
dec
cli
cmpsb
ljmp
cltd
adc
adc
or
mov
loope
jg
push
xor
mov
push
sub
push
test
ja
cld
out
aam
cmp
xlat
jg
xchg
mov
sahf
sbb
insl
in
cmpsl
jno
dec
pop
out
mov
stos
xor
fs
movsl
pop
push
cwtl
adc
je
and
lahf
test
in
add
mov
or
roll
inc
inc
add
in
data16
jo
lret
xchg
imul
in
loopne
mov
test
shrl
push
stc
imul
mov
and
test
sbb
adc
sub
lock
mov
ss
mov
push
pop
cmc
leave
jns
lret
sahf
inc
mov
sub
sub
mov
mov
pop
rcrl
scas
in
adc
xlat
adc
icebp
ret
mov
loope
inc
andl
xchg
bound
add
sbb
dec
adc
sub
inc
jne
xor
imul
cmp
cmc
es
idiv
jno
fwait
loop
or
push
push
inc
movsl
push
js
xor
push
add
dec
pop
mov
fbld
lahf
push
adcb
cmp
leave
jo
enter
fiadds
adc
adc
push
xchg
xor
xor
jns
inc
inc
jbe
leave
sbb
in
cmp
fs
int3
test
xchg
imul
pop
inc
xchg
pusha
jg
in
xchg
fistpll
or
das
je
jg
lds
pop
pop
adc
sub
pop
clc
push
cmpsb
xchg
loop
ds
xchg
pop
add
aas
xchg
lahf
loop
cmp
sbb
test
cmp
dec
or
std
sbb
push
adc
ss
mov
inc
out
lds
frstor
inc
push
int
repnz
fwait
dec
adc
es
mov
xchg
aad
stos
cmpl
inc
mov
out
bound
ret
lahf
cwtl
loopne
push
xacquire
mov
mov
jmp
call
popf
adc
cltd
jle
decl
imull
fimull
mov
bound
imul
in
or
les
mov
loopne
xor
xchg
pop
add
and
addr16
jp
popa
mov
rcl
jne
push
pop
fisubl
mov
adcl
fldl2e
xor
push
push
enter
inc
xchg
mov
jno
or
and
lods
push
in
sbb
mov
mov
adc
ljmp
jg
nop
out
popf
mov
cs
es
inc
pop
jns
or
xchg
mov
add
push
mov
loope
mov
rorb
or
dec
jno
outsl
out
mov
and
into
stc
icebp
cld
jg
mov
ja
loopne
pushf
adc
dec
call
cmpsl
inc
out
and
out
out
cmpsl
mov
jecxz
xchg
sti
sub
jne
add
test
mov
mov
lret
sti
pop
mov
arpl
into
pop
shrb
mov
insb
cmpsb
push
mov
loopne
jg
jne
inc
jg
push
push
ret
stc
leave
stc
shrb
ficomps
adc
js
sarb
cmp
ret
jnp
js
mov
mov
inc
mov
xor
scas
fwait
xchg
or
out
insl
int3
dec
pop
insb
xchg
lret
cwtl
xchg
pop
and
jp
dec
inc
gs
push
xchg
adc
and
lods
in
fninit
push
adc
or
push
cld
out
addr16
xchg
xchg
scas
icebp
mov
jmp
mov
sbb
rol
xchg
rcrl
test
inc
xor
mov
cltd
mov
mov
xlat
andnps
lock
xor
cmpsl
xchg
dec
xchg
mov
std
int
sub
rclb
xchg
lods
icebp
xor
or
mov
aam
bound
xor
insl
stc
rcrb
mov
lgs
inc
in
repz
addr16
outsb
push
dec
imul
iret
icebp
rorb
shr
mov
call
test
cmp
push
xchg
add
mov
mov
adc
jge
mov
into
mov
push
adc
xor
insl
or
add
mov
mov
rcrb
add
mov
cwtl
dec
rcrl
aad
orl
repz
mov
or
dec
loope
push
push
add
pusha
aaa
mov
cmp
add
adc
rcrb
enter
into
jecxz
aaa
mov
rcr
add
nop
in
push
mov
outsb
inc
sti
ret
sbb
sbb
inc
insb
addr16
adcb
sbb
mov
add
xor
adc
cltd
mov
inc
xor
jecxz
popf
gs
iret
shlb
into
mov
aaa
sbb
add
into
inc
shlb
int
jns
and
insb
or
jg
jns
lea
scas
out
mov
adc
cld
test
and
and
les
sbb
push
sub
mov
mov
or
imul
push
mov
mov
adc
dec
repz
mov
add
popa
or
pop
pop
fscale
mov
jecxz
repz
int3
loopne
imul
loop
mov
cld
and
mov
in
pop
shr
add
leave
addl
push
xor
rclb
mov
jns
call
ret
push
cmp
mov
cmpsl
push
movl
iret
adc
dec
and
push
popf
leave
dec
push
in
mov
push
jg
pop
cmp
leave
outsl
mov
bound
xlat
stos
ljmp
insb
inc
sarb
sbb
jno
sub
mov
sbb
inc
sub
xchg
lret
shlb
lock
ud2
sbb
sbbb
lock
mov
shr
in
dec
js
rorb
jecxz
xchg
loopne
pop
ss
shrl
pop
pop
inc
das
push
sub
into
aad
inc
push
loopne
js
adc
inc
and
test
jae
gs
push
xchg
mov
xchg
outsl
icebp
sbb
pop
iret
fidivl
push
jg
stos
imul
in
pop
pop
ja
into
push
into
jae
fxch
cli
jnp
out
pop
scas
jne
aas
jmp
cmp
movsl
jge
xchg
sub
xchg
ds
and
mov
cmpsb
or
adc
adc
int3
sbb
dec
xor
adc
test
repz
into
in
ret
push
andl
sub
or
jno
hlt
jbe
mov
mov
jmp
test
add
jo
mov
repz
cli
fcomps
dec
dec
fldcw
mov
fsubrs
subl
lret
rolb
lea
ret
movl
mov
xchg
xchg
sub
cld
sub
and
mov
insb
xchg
push
jo
popa
lods
sub
or
push
xchg
cli
mov
cmpb
inc
push
leave
fisttpll
or
cs
orl
aad
inc
cltd
dec
xor
in
jb
jmp
jmp
mov
xor
xchg
push
adc
out
add
pop
inc
aas
lret
sub
lcall
fdivr
pop
rcr
push
ja
mov
push
cmp
pop
adc
cwtl
push
gs
insl
sub
mov
jl
sbb
jmp
mov
push
xorl
pop
sbb
in
pop
enter
mov
ds
stc
fimull
sbb
fs
adc
inc
and
loop
jns
cmp
outsb
ljmp
std
jne
fcmovbe
mov
dec
add
sub
and
xchg
push
faddl
pop
dec
xchg
ror
std
inc
pop
and
cld
sub
sbb
push
mov
or
pusha
in
dec
test
add
mov
popa
mov
daa
push
and
sbb
cli
cmpsb
movsl
pop
adc
push
movsl
sub
pop
aas
mov
lret
xchg
mov
ret
rclb
pop
or
mov
push
sub
inc
fisttpl
push
mov
and
mov
daa
aam
shl
push
xchg
pop
cmc
jns
ljmp
shll
jns
in
popa
loopne
pushf
lods
daa
sub
stos
push
jle
xchg
jl
inc
pop
sub
mov
or
sbb
daa
push
and
inc
pushf
inc
add
in
enter
js
jne
inc
cmp
cmp
mov
mov
xchg
call
outsb
mov
lods
and
fisttpll
je
dec
lock
sbb
movb
jb
lret
sbb
cmpb
in
mov
inc
mov
mov
rorb
out
lods
adc
arpl
jbe
mov
fbld
stos
filds
pop
cmc
out
sbb
in
sub
je
lods
sub
pop
mov
add
dec
movsb
int3
inc
loop
dec
lds
sbb
mov
sbb
loop
das
jge
sub
jbe
dec
xor
jl
test
dec
lahf
jg
sarl
enter
inc
lods
popf
pop
sub
in
dec
jl
cld
fisubrl
sub
or
and
cmp
pop
ja
pop
xor
repnz
pop
cwtl
or
mov
faddp
out
push
mov
fmuls
dec
add
pop
dec
pop
dec
out
outsl
or
imul
negl
into
shlb
enter
rorl
orb
xchg
aaa
lcall
pop
pop
adc
jns
add
enter
enter
sbb
push
gs
imul
stos
in
sarb
xchg
mov
and
mov
cmp
cwtl
mov
dec
out
lret
repnz
xchg
pop
movsb
pop
jo
dec
inc
or
cld
xor
mov
push
push
xor
sbb
int
fmuls
lahf
int3
cmpsl
mov
adc
pushf
dec
arpl
push
in
sbb
pop
add
add
movsl
push
xor
cmpsb
sub
dec
push
int
std
aam
mov
or
add
adc
test
ficompl
inc
ss
out
mov
je
and
mov
out
mov
sub
lock
out
dec
gs
fs
mov
inc
std
xchg
xchg
pop
test
lods
fldenv
jo
push
xchg
enter
sahf
bound
inc
pop
cmp
data16
jecxz
out
popf
inc
add
enter
jne
fisubs
inc
mov
adc
adc
sahf
stc
mov
mov
cmpsb
outsb
fists
hlt
imul
and
idivb
push
int3
cmpsl
fisubs
jbe
out
adc
dec
xor
jnp
mov
push
cmpsb
mov
int
sahf
cltd
insl
aam
inc
int3
test
and
dec
and
add
dec
aam
mov
out
cld
loope
sub
jae
jo
cli
dec
xor
xlat
clc
les
push
add
pop
aam
aaa
dec
in
jne
or
pop
jbe
outsb
jno
jl
fcmove
clc
lods
mov
xor
push
or
loope
sub
mov
fwait
adc
rorb
dec
sbb
jecxz,pn
insb
mov
fbld
push
mov
inc
test
and
insb
adcb
ret
loopne
sbb
imul
pop
inc
pop
repnz
cli
xor
arpl
pop
jge
es
pop
lods
mov
js
and
sbb
sbb
xor
and
repz
pop
inc
and
dec
call
adc
and
gs
add
test
or
popf
iret
sbb
pop
sti
clc
sbb
mov
fdivrs
and
aas
add
nop
out
rol
xor
hlt
loop
lods
popf
jae
and
push
arpl
je
ffreep
or
movsb
and
dec
mov
mov
mov
mov
scas
inc
test
ss
addb
inc
fbstp
ljmp
jecxz
fsts
xchg
incl
out
mov
pop
and
push
hlt
lds
pop
inc
cmp
fists
scas
outsl
mov
lret
adc
adc
sbb
pop
iret
push
push
push
xchg
push
shll
into
push
xor
sbb
jnp
pushf
loope
xchg
inc
mov
inc
inc
sub
xor
mov
or
fisubrl
mov
data16
jmp
jg
mov
jge
outsb
xchg
pop
popa
mov
es
mov
cmp
pop
js
cmpb
ds
loope
fucompp
ficompl
sbb
in
mov
jl
and
icebp
mov
cmp
inc
test
jle
rol
sub
jbe
ja
sahf
mov
push
enter
cmpsl
test
sub
xchg
mov
and
xchg
pop
cmp
jnp
clc
scas
sahf
adc
cmp
adcl
lods
fwait
mov
ret
mov
dec
out
jnp,pt
add
jmp
adc
inc
sub
push
sbb
sbb
pop
and
or
iret
pop
dec
cmc
testl
xchg
pop
sbb
cmp
push
mov
push
jl
add
or
in
mov
out
test
inc
cmp
inc
sbb
xchg
xchg
popf
jg
mov
push
push
inc
and
mov
xchg
sti
imul
push
rcrb
cmp
adc
mov
adc
shll
cli
jg
mov
pop
shl
aad
pop
dec
data16
stos
out
int
xor
repnz
data16
xor
sub
sub
inc
outsb
int3
test
shlb
mov
roll
addr16
adc
jg
std
add
dec
adc
pop
cmp
push
ljmp
sbb
xor
aaa
test
mov
adc
xlat
dec
jbe
mov
mov
inc
inc
push
stos
sbb
inc
iret
jno
or
adcb
mov
mov
jns
lock
sub
sub
xchg
add
fmuls
ljmp
scas
mov
sti
mov
adc
arpl
dec
push
cwtl
pop
add
jmp
mov
les
lods
push
dec
dec
loope
sti
cmp
gs
push
aam
jmp
push
sbb
or
mov
inc
idivl
or
xor
and
xor
clc
cmp
ret
loop
fs
lret
roll
movsb
mov
ret
xor
sub
gs
mov
daa
in
xor
fidivrl
shlb
pop
mov
or
fldt
cli
scas
or
rcrl
lods
pop
repnz
std
popa
adc
orb
out
jae
add
cltd
idiv
mov
aaa
cmpsl
loope
sub
push
jecxz
inc
test
idivl
mov
fists
outsl
sahf
jmpw
inc
adc
aaa
inc
lret
adc
loope
xor
fistl
cmp
cli
stos
and
inc
adc
add
in
push
xchg
xchg
fnstcw
xor
jle
imul
push
mov
push
cmp
and
sbb
in
mov
or
shl
and
pusha
xor
mov
mov
mov
sbb
jb
add
mov
sbb
ljmp
jno
sub
outsl
adc
repz
pop
cmp
push
stos
sbb
adcl
ss
imul
mov
xchg
out
jmp
out
or
imul
mov
mov
mov
imul
lret
mov
mov
dec
mov
push
stc
fistl
fs
mov
adc
xor
mov
mov
sub
jbe
pop
fdivl
pop
pop
aas
xorl
sarl
xchg
mov
and
aas
xor
jg
mov
jl
test
jns
call
mov
push
je
and
inc
out
mov
inc
mov
out
sbb
and
xor
and
adc
bound
push
add
mov
mov
xchg
add
int3
jnp
xchg
mov
into
adc
leave
ffreep
adc
jne
push
mov
fwait
sub
dec
stos
hlt
in
jmp
insl
xchg
xchg
push
lods
xor
sub
pushf
or
cmpl
xor
xchg
push
mov
and
hlt
and
cmp
jne
mov
and
js
scas
xchg
cmpsl
jno
or
repz
inc
push
inc
xor
pop
out
leave
jecxz
push
scas
jge
sti
sub
in
add
sub
xor
inc
fwait
arpl
lahf
lcall
jo,pn
cli
jg
cmp
or
dec
mov
xchg
addr16
leave
xor
jl
jae
iret
fiadds
outsl
test
lret
and
push
mov
insl
insl
or
enter
mov
inc
into
stos
and
jecxz
mov
pop
es
adc
sub
pop
dec
push
out
ret
loopne
jbe
sbb
inc
popa
out
test
mov
pusha
stc
icebp
and
imulb
ja
sbb
xchg
jbe
mov
xlat
inc
mov
jmp
shlb
pavgb
cmp
add
lods
insl
call
repz
popf
icebp
mov
inc
mov
push
jle
push
xlat
jg
scas
dec
cli
pop
popf
pop
dec
scas
or
pop
mov
push
call
mov
sahf
daa
push
jge
stc
jl
lret
xlat
movsb
adc
and
or
or
lods
dec
mov
icebp
jb
cmpsb
mov
lahf
in
mov
jns
and
dec
rep
jg
mov
popf
mov
cmpsb
and
int3
arpl
jp
push
sub
push
cmpb
scas
fisubl
mov
xor
cmc
daa
ds
imul
fimuls
pop
rcr
repz
fisubrl
in
shrb
fdivs
and
outsl
lods
out
sbb
loope
lea
mov
cmc
outsw
mov
mov
or
mov
lret
mov
fs
push
mov
data16
cwtl
ret
push
jp
ficompl
pop
movsl
rcrb
pop
lock
fimuls
cmp
pop
sbb
jbe
rcll
push
subl
mov
push
hlt
stos
jl
ret
sub
cmc
mov
xor
xchg
sub
mov
gs
sub
loope
xchg
cmp
xor
fsubs
aaa
in
sbb
cmp
cld
xor
xor
scas
jbe
jbe
stos
jo
jno
sti
inc
jl
xchg
test
lds
xor
scas
jl
sbb
pop
xor
aas
mov
mov
adc
out
and
xlat
repz
cs
jne
xchg
data16
push
out
insb
not
cmp
icebp
bound
adc
push
or
lret
lock
and
mov
das
pop
xlat
ja
xchg
outsb
xchg
mov
push
pop
mov
out
repnz
jns
dec
add
stc
addr16
jne
cmp
lods
lret
dec
mull
and
into
inc
fucomip
outsb
xor
adc
ret
popf
push
pop
mov
xchg
ss
xchg
mov
into
mov
ret
out
xchg
mov
cltd
popa
shlb
scas
jle
sub
loopne
or
sbb
test
mov
out
pop
xchg
xlat
mov
and
jb
stc
hlt
sub
jecxz
jae
sub
fldenv
push
rcrb
cmpsb
lea
test
mov
inc
jl
xchg
sub
mov
out
push
and
sbb
and
and
aaa
enter
call
lea
cmp
sti
inc
lock
pop
test
out
sub
jle
push
test
sbb
jbe
and
inc
sti
mov
test
arpl
xor
xchg
daa
fwait
mov
mov
xchg
adc
fwait
clc
decb
cmp
testl
adc
fadd
loopne
sbbb
fstp
cmp
jecxz
xlat
rolb
sub
ret
xchg
sub
aad
lret
jo
add
ja
shll
mov
add
outsl
mov
icebp
inc
aam
sub
jge
cmp
hlt
pop
daa
fmuls
jb
cmp
inc
sub
dec
pop
lea
jp
dec
lret
cmp
add
orb
popa
mov
loopne
lds
pop
xchg
push
aam
dec
xor
pop
sub
cmp
cli
std
call
push
mov
pop
jnp
mov
mov
jge
add
pop
push
rol
pushf
xchg
fstps
call
xchg
cwtl
add
pop
rcll
lock
push
xor
movsb
add
adc
adc
shrl
mov
push
add
mov
or
pushl
jnp
sbb
call
lds
jb
dec
jbe
in
sub
xchg
out
xlat
rcrb
sbb
lods
lret
or
inc
cli
pop
addb
xchg
out
test
push
fucomp
scas
cmp
fdiv
pop
addr16
scas
in
sub
insl
loopne
testl
aaa
or
mov
insb
xchg
js
mov
inc
fwait
push
lds
invd
stos
sbb
pusha
mov
out
or
jmp
xor
inc
imul
sub
cld
push
lock
push
add
scas
cwtl
daa
jmp
dec
cmp
xchg
sub
cmp
pop
fs
fdivl
sbb
fisubrs
out
sbb
inc
mov
shrb
push
enter
mov
xchg
loop
add
sub
jecxz
popa
pop
movsl
inc
ljmp
xorb
iret
sbb
jmp
adcl
mov
aaa
xor
jl
and
out
mov
stos
imul
ret
xchg
inc
ret
repnz
arpl
std
add
cmp
or
push
xchg
mov
fildl
lret
ret
shl
mov
lock
test
fdivrl
mov
cmpsb
stos
add
mov
or
cmp
lods
fcmovnb
push
int
stos
test
loop
inc
cmp
add
push
jl
and
imul
addr16
lahf
insl
adc
add
aam
cmp
jnp
xchg
mov
mov
ja
mov
idiv
cld
pop
stos
lahf
pop
test
cmpl
ret
mov
ret
mov
cmp
xlat
test
cmc
imul
or
repz
in
aam
inc
cmp
push
pop
or
push
sbb
add
push
lock
popf
jp
mov
jbe
xor
inc
pushf
lea
cld
cld
shr
sub
cmpsb
fstl
jo
bound
add
jo
sub
sub
movl
sbb
shlb
mov
lcall
dec
xor
push
jl
and
addr16
and
aaa
or
scas
insb
pop
or
push
jl
popf
pop
jne
lcall
add
push
shll
fists
mov
pop
ja
lds
and
repz
mov
leave
sahf
inc
daa
out
movsb
clc
mov
cld
inc
push
jge
cmp
jae
sbb
stos
pop
std
stos
sub
inc
daa
lods
mov
push
fmull
sub
push
dec
cmp
and
or
mov
jbe
in
sbbb
sub
out
and
jle
jne
mov
call
out
push
shlb
mov
mov
pusha
fwait
xchg
cli
mov
mov
sbb
or
mov
lods
mov
jo
jae
push
xchg
insb
rcll
out
fstpl
popf
xor
cld
pop
pushl
fs
lret
cltd
mov
cld
aam
shr
mov
in
int3
lods
js
xchg
mov
iret
pop
add
cmp
aam
sbb
and
adc
popa
jo
hlt
dec
mov
push
xor
aam
test
out
sarl
add
scas
pop
mov
sbb
adc
stc
inc
adc
leave
and
mov
mov
jp
popf
jns
sub
push
inc
clc
mov
sbb
jle
dec
rclb
cmp
pop
mov
dec
fsubl
adc
into
and
fs
aaa
das
jno
add
jge
stos
inc
pop
sbbb
dec
stos
or
inc
outsb
popa
push
xor
out
mov
dec
aad
test
je
push
daa
subl
pop
or
in
add
jl
xor
mov
mov
pop
or
aad
repnz
dec
xchg
cmp
inc
mov
adc
cmp
sub
add
inc
pop
rcrl
rorl
cmc
mov
xor
jae
das
mov
sbb
jbe
lret
test
ficoms
subl
cs
mov
lods
lahf
add
fidivrs
jb
adc
sbb
pop
frstor
fs
scas
aam
aam
sub
insb
jge
inc
xchg
mov
jnp
push
sbb
xor
in
sub
cmpsb
sub
add
inc
dec
cmpsb
mov
mov
sarb
add
jmp
ret
ja
mov
hlt
les
pop
iret
fisubl
int3
mov
jne
in
dec
mov
sbb
push
or
adc
fildll
mov
repz
ror
dec
mov
sarl
push
dec
add
dec
iret
in
imul
ss
leave
pop
fdivl
fmuls
push
jmp
lods
fucomi
cli
or
xorb
sbb
out
jne
mov
mov
push
add
int3
dec
xor
ljmp
cmp
in
push
jge
test
movsl
int3
lret
mov
cvtps2pd
xor
mov
and
jbe
xchg
push
sbb
jo
adc
cs
lods
mov
and
jle
mov
imul
add
mov
add
sub
clc
add
leave
add
push
mov
mull
adc
push
mov
sub
lds
sbb
mov
xor
bound
adc
pushf
ret
add
or
add
push
out
rol
cmp
in
aas
jle
or
aam
lret
or
sub
popf
shrb
inc
dec
dec
pop
xorl
add
shlb
testl
add
add
cltd
push
pop
lods
divl
add
add
std
rcrl
andb
insl
jns
lock
hlt
cmc
das
cltd
fiaddl
arpl
mov
xchg
mov
out
in
movsl
mov
or
xchg
jecxz
fwait
cli
jmp
jns
ja
push
push
insl
push
pop
mov
icebp
ficompl
xor
dec
xchg
je
jb
ljmp
jbe
das
xor
fsts
inc
fsubs
and
jbe
dec
add
test
mov
mov
cltd
cmpsl
pop
jg
mov
push
stos
xchg
lret
and
or
mov
ds
mov
sbb
jle
loopne
pop
sub
pop
add
sub
enter
stos
adc
nop
sub
mov
sbb
hlt
pop
jb
out
inc
jp
jmp
mov
fs
sbb
pop
popa
dec
shl
jne
and
sahf
adc
jecxz
mov
push
fs
sti
sub
movsb
adc
mov
cltd
mov
addr16
mov
fiaddl
pop
dec
lea
jne
adc
popa
add
lret
add
loope
cmp
xchg
mov
hlt
mov
shll
xor
or
xchg
imul
imul
jp
leave
mov
pushf
insl
jecxz
mov
addr16
mov
cwtl
in
ficoms
test
cmp
sub
mov
cmpsl
inc
or
aaa
test
mov
xchg
fwait
sbb
pop
sbb
mov
movsl
decb
mov
cwtl
push
int3
rcrb
lods
cli
ret
sub
ljmp
out
je
sub
jp
dec
lds
in
or
fs
cmp
cli
ja
fisubl
iret
repz
add
xor
repz
dec
data16
adc
push
popf
xor
sub
mov
jg
aam
mov
int
dec
jne
int3
jno
notl
sbb
insb
inc
test
lret
push
push
in
test
sub
xor
icebp
cmp
out
lds
and
or
fmul
shll
shll
orb
add
orb
ds
lret
xor
orb
clc
jno
jbe
sub
out
or
rcrb
sbb
out
add
push
sbb
ljmp
pause
sbb
scas
negl
imulb
arpl
std
inc
out
cmpsb
cli
cmpsb
arpl
cltd
push
out
pop
sub
int3
cltd
xchg
ret
sub
add
aas
xor
cmp
xlat
test
daa
mov
inc
push
flds
sub
xor
out
dec
lcall
mov
int
push
or
cmp
imul
pushf
mov
xchg
inc
inc
or
inc
popf
fs
loop
xor
mov
jb
loopne
pop
ljmp
int
mov
fsts
add
xor
push
push
mov
cmp
in
mov
mov
leave
mov
mov
sbb
mov
and
inc
sub
dec
cltd
push
xchg
mov
scas
rcr
inc
popf
cmp
movsl
cltd
jg
or
mov
std
fisubl
inc
fwait
outsb
into
xchg
scas
loopne
outsb
or
addr16
sbb
lods
negl
imul
jle
fucomip
rcrl
dec
fcoms
roll
inc
xchg
mov
out
js
pushf
adc
add
in
or
popa
fisttpll
mov
das
sub
mov
decl
mov
sub
mov
jno
int3
mov
jne
repnz
dec
mov
push
dec
push
adc
add
jnp
in
mov
xchg
sub
fwait
ss
add
fisubl
call
cld
sti
popf
jge
and
aad
das
cwtl
cmp
push
pushf
cmc
or
mov
mov
jnp
data16
xor
jp
fsubs
cmpsl
xchg
aaa
inc
inc
ss
mov
push
ficoml
insb
lea
repnz
pop
dec
pusha
sbb
xchg
sub
gs
jne
ret
push
daa
stos
sbb
add
dec
mov
or
sub
fcomi
xor
mov
ret
lock
nop
aas
mov
jno
stos
mov
pop
shl
sahf
mov
mov
cld
imul
in
fcmovne
pushf
sub
xor
lahf
in
add
mov
enter
fbld
cld
pop
enter
sub
cmp
add
pop
xlat
pshufw
scas
cld
mov
icebp
sbb
pop
pop
sub
movsl
mov
outsb
inc
outsl
inc
rorl
mov
mov
or
sbb
or
pop
test
xchg
cwtl
xchg
xchg
out
es
mov
data16
mov
pushf
sbb
loop
in
in
std
enter
cld
test
cwtl
stos
andb
pop
sub
mov
in
loopne
mov
adc
addr16
iret
cmc
xor
mov
test
cwtl
push
xchg
lds
add
xchg
bound
or
push
dec
push
xchg
fldcw
cltd
pop
aam
sub
dec
jl,pn
pop
aam
xor
mov
xlat
mov
dec
adc
mov
addr16
add
and
adc
shlb
loope
xchg
repnz
lahf
adc
mov
lods
test
dec
arpl
jnp
xor
jns
sbb
jg
xor
cmc
pop
pop
pop
pop
pop
popa
in
mov
ds
jns
pop
into
xchg
mov
in
fisubl
jae
adc
xor
test
add
mov
inc
cmp
clc
scas
addb
jp
cmp
pop
test
jbe
ljmp
and
jo
bound
mov
sahf
push
pop
insl
jae
lea
out
xchg
test
test
dec
push
xor
dec
jecxz
sahf
lahf
mov
fsubs
adc
add
cltd
roll
test
and
inc
sbb
or
shll
mov
xor
cmpsb
mov
enter
jbe
pop
aaa
or
xor
es
push
rcr
imul
dec
mov
dec
aaa
scas
jmp
out
incl
addb
mov
jnp
scas
push
das
shl
mov
inc
jecxz
jo
lds
pop
imul
mov
push
iret
ret
sahf
ljmp
repz
loope
sub
test
jecxz
sbb
push
mov
lret
mov
dec
lds
loope
inc
cmp
scas
addl
stos
adc
lods
sub
lcall
cmp
mov
sarb
loopne
dec
xchg
adc
jo
out
inc
fs
mov
in
sahf
mov
pop
pop
sbb
fs
or
popa
push
lods
mov
into
shld
push
addb
mov
test
push
xchg
jle
inc
pop
pop
sbb
es
push
lods
out
fistps
loopne
pop
mov
fidivrl
lret
sbb
scas
pusha
shl
pusha
inc
ret
jo
mov
popa
jns
mov
mov
std
lods
lcall
push
test
gs
hlt
or
cli
les
repz
mov
jge
testb
movsb
cli
cltd
or
mov
js
xchg
orl
mov
ret
ret
iret
movsl
mov
es
sbb
orl
sbb
fs
mov
xchg
cli
xchg
addr16
add
xor
in
push
scas
imul
inc
jb
aas
mov
es
xchg
dec
cmpl
pop
jae
xchg
jle
iret
scas
in
cmp
out
sub
nop
dec
pop
ja
mov
in
aam
fs
test
rol
adc
imul
add
xchg
cmp
or
sub
cmp
jae
sbb
push
or
mov
fs
lret
movb
fimuls
jg
out
repz
mov
xor
xchg
aaa
das
mov
xchg
hlt
int
mov
ss
adcb
inc
adc
add
popa
inc
daa
sti
push
out
sbb
outsl
scas
mov
std
outsl
xor
or
sub
sbb
jmp
mov
or
dec
sub
cmp
inc
jecxz
mulb
movl
lods
sti
add
jbe
mov
sti
cmp
pop
and
xor
lods
dec
and
pop
sub
arpl
je
std
ss
fs
sbb
into
shlb
imul
mov
sbb
push
mov
jno
shlb
aam
loopne
mov
mov
dec
scas
aaa
in
dec
stc
fsin
testb
mulb
lret
lock
adc
cmc
add
sbb
loopne
inc
pop
aad
sbb
mov
rclb
push
xorl
jbe
test
mov
rcrb
mov
add
ds
cmp
iret
pusha
cmp
faddl
xchg
xlat
sub
jne
pop
fdivp
adc
test
cltd
mov
in
lods
test
xchg
out
lretw
lea
rorb
in
addr16
jmp
cmp
pop
std
pusha
jmp
mov
clc
ljmp
insl
cmp
sbb
mov
sub
cmpsb
cltd
mov
xor
sbb
pop
int
pop
roll
popf
movsb
jge
add
add
xor
imulb
xchg
mov
adc
popf
push
push
movsb
add
sti
add
or
pop
mov
cmp
icebp
iret
and
leave
popf
add
push
sbb
mov
jae
imul
imul
jle
sub
mov
jle
jb
shll
sub
stos
cmc
test
mov
lods
pop
dec
pusha
and
xchg
sub
shrb
push
mov
int3
xchg
cmpsb
enter
adc
mov
push
int
mov
hlt
mov
dec
scas
push
in
pusha
dec
and
mov
call
mov
in
shl
add
in
push
and
inc
and
adc
out
jo
push
jno
loopne
vunpcklps
sub
loopne
or
pop
xor
and
cli
stos
ret
sbb
mov
xor
fwait
jle
out
sti
into
fidivrl
sbb
jmp
ret
lret
dec
adc
pop
das
outsl
in
cmp
mov
mov
aam
xor
fadd
in
std
cmp
or
cmp
or
add
push
jmp
push
sbb
and
adc
scas
xor
js
push
ss
aas
pop
mov
popf
jne
inc
inc
test
or
xchg
or
sbb
pop
jge
jo
push
ret
xor
pop
in
jne
ret
outsb
sbb
sub
jae
fildll
inc
xor
cld
out
test
rcrb
jle
and
mov
sbb
jl
pushf
andl
iret
sbb
mov
leave
out
dec
ljmp
sbb
scas
xchg
mov
push
sbb
rorl
bswap
jae,pn
fs
test
mov
push
lret
test
push
mov
cwtl
lds
hlt
in
mov
and
add
lods
cmpsl
stos
mov
incl
mov
pushf
aaa
sub
cld
sarl
jb
jmp
les
loop
fs
mov
cmpl
sub
push
cld
getsec
or
mov
cmpsb
mov
dec
mov
ffree
cmp
push
mov
jmp
add
call
aad
mull
ror
cmp
sub
or
test
icebp
int3
mov
notl
mov
cmp
sbb
push
pop
jae
xlat
test
xchg
mov
adc
clc
in
sahf
popf
inc
fwait
dec
jge
inc
pop
sub
push
xor
sub
mov
xorb
test
pop
jge
jae
xchg
js
imul
test
jbe
push
mov
dec
sbb
fists
or
mov
xchg
jl
cmp
jmp
loopne
sub
cmp
test
push
lcall
jp
inc
aad
xchg
lret
adc
inc
mov
aad
pop
sarl
repz
hlt
jb
ljmp
mov
popa
lret
roll
jl
add
hlt
dec
rcrl
repnz
push
imul
jmp
lea
mul
insl
mov
pusha
xchg
insb
out
mov
lods
xchg
push
shlb
push
xor
or
leave
jecxz
jb
fcomps
insb
pop
rclb
push
das
mov
in
xchg
sbb
mov
dec
sub
je
mov
xchg
sbb
pop
in
and
rol
xchg
loop
divb
xor
mov
insl
repz
xlat
add
mov
addr16
jl
jno
outsb
add
in
inc
sti
fldcw
mov
xchg
and
out
xor
addr16
enter
sbb
cld
inc
fidivl
fsts
imul
orb
add
jns
scas
push
loopne
mov
sub
jnp
mov
mov
iret
cmovno
notb
test
sub
add
cmp
jge
mov
sub
int
push
pusha
call
lcall
xchg
lret
ret
push
sbb
add
dec
add
test
and
add
int3
insl
loop
cmp
das
pop
pop
in
jbe
mov
gs
es
jl
orl
scas
inc
dec
shlb
sub
loope
inc
popa
insl
mov
lcall
sub
cmp
or
shl
mov
ds
mov
sti
pop
adc
pop
mov
pushf
and
movsb
rolb
cmp
loopne
aaa
lea
xchg
sbb
adc
fstps
fsubrl
out
push
iret
mov
das
call
adc
push
cli
cmp
daa
test
ja
cmpsl
repz
repz
pop
mov
in
stos
push
in
xor
jbe
and
es
ret
dec
insl
push
push
inc
pop
mov
lea
std
cmc
xor
jecxz
add
insb
mov
arpl
out
leave
out
jg
or
sub
clc
mov
je
in
mov
cmc
cmp
insl
sub
addr16
in
jmp
rorl
jnp
hlt
test
test
pop
push
and
sub
adc
movsb
jno
pusha
mov
mov
jle
les
xchg
addl
mov
leave
xchg
mov
mov
sub
xchg
xchg
repz
mov
inc
dec
popf
jae
imul
and
lock
sahf
xchg
dec
pushf
pop
dec
js
sbb
jge
adc
sbbb
pop
push
les
mov
imul
pop
add
cmp
ret
dec
shlb
cmp
or
lret
dec
movsb
cmpsb
jg
repnz
test
test
sahf
xchg
sahf
lret
jae
or
into
xor
lret
hlt
pop
and
cwtl
repnz
jp
xchg
icebp
adc
icebp
ficoml
pop
cmp
mov
mov
insb
mov
leave
out
ret
imul
pop
int
fs
mov
enter
in
xchg
mov
out
lcall
and
jo
and
xor
add
fwait
pop
enter
seta
lds
mov
xchg
sub
add
sbb
adc
pop
sub
jmp
inc
or
cmpsl
push
cmpsl
loop
loopne
xor
lahf
xchg
jno
jne
outsl
mov
push
sbb
imul
scas
jl
push
mov
jno
jg
dec
andl
imul
push
mov
sti
scas
push
imul
mov
adcb
mov
pop
xor
sub
and
pop
push
in
cmp
sbb
je
sahf
notl
ret
pop
lahf
xchg
pop
xchg
inc
mov
dec
pop
dec
sahf
icebp
dec
call
cltd
add
sbb
mov
loope
push
jae
cmp
mov
add
sub
mov
out
mov
daa
xchg
push
cltd
mov
pop
or
adc
mov
jle
xor
ror
mov
jge
daa
xchg
xlat
pushf
pop
lcall
mov
sbb
sti
cmp
mov
mov
aaa
mov
sub
rcr
mov
xor
or
std
dec
jle
cmp
pop
mov
ds
push
scas
lock
cmc
adc
jb
cmc
dec
jecxz
xlat
lret
gs
cld
inc
test
xchg
je
jge
dec
xor
sbb
xor
sbb
mov
inc
xor
cltd
or
les
xor
push
cmp
pop
mov
inc
outsb
ja
and
sbb
push
xor
push
sbb
sbb
insb
shrl
mov
ficompl
mov
leave
cmp
ds
es
mov
lret
pushf
pop
push
ss
cmp
push
add
fisubrs
lock
mov
inc
js
sub
add
mov
pop
iret
adc
daa
loop
pop
int3
jo
xor
stc
hlt
dec
fidivrl
adc
push
dec
cmp
shrl
shl
sti
scas
sbbb
lock
add
stos
dec
popf
and
xor
adc
das
jbe
out
aam
fwait
jmp
sub
ds
cmp
nop
lods
sub
cvtps2pi
and
not
push
nop
adcl
out
fsubrs
jne
add
push
pop
push
sub
movsl
mov
call
xchg
scas
push
inc
adc
xchg
shlb
mov
fnstsw
rcll
pop
out
jp
repz
pusha
xor
jle
data16
xor
jl
enter
sbb
aas
outsl
pop
xor
lahf
jb
xchg
cltd
mov
xchg
inc
fcomp
out
xor
addl
test
mov
outsb
sbb
xchg
imul
or
push
aas
lret
dec
aad
dec
sti
mov
mov
shll
movsb
mov
mov
cmp
test
imul
add
cmc
popf
inc
pop
xor
into
ss
ljmp
add
je
mov
orl
dec
adc
push
roll
mov
testl
xchg
lcall
push
mov
cltd
or
add
add
rcrb
test
jge
jo
cmovp
test
and
stos
mov
mov
sbb
xor
pop
in
xor
xor
sbb
jge
xor
sbb
sbb
clc
sbb
outsb
mov
popa
mov
pop
bound
push
jg
xorl
push
iret
and
addr16
popf
testb
and
dec
jl
scas
xchg
add
loope
sub
out
or
mov
xor
js
popf
out
jl
xor
add
xor
cmpsl
int3
enter
pop
sub
adc
cmp
call
jns
pusha
fldt
sti
cli
push
and
pop
mov
cmp
mov
jns
cltd
or
inc
and
ja
mov
fs
sub
xchg
enter
fistpll
pop
incb
loopne
fidivrl
cmpsl
ljmp
imul
push
call
dec
nop
shll
cs
fcmovnbe
jb
popa
fstps
das
dec
js
fldl2t
bound
or
jmp
push
insl
add
ret
jnp
insl
mov
ja
sar
push
insl
push
pop
sbb
inc
ja
dec
loope
and
pop
sbb
pop
mov
add
outsb
mov
xchg
test
movsl
fdivrp
sub
stc
jb
cli
mov
clc
out
xchg
cld
out
xor
dec
push
fisubs
daa
jecxz
mov
xor
sub
stos
dec
fnstcw
adc
cmp
imul
jnp
lea
fisubl
inc
sub
fwait
sub
aam
out
pop
mov
std
sarl
cwtl
call
and
add
rorl
mov
mov
pop
push
subb
mov
push
icebp
push
fstpl
rcrb
pushf
xchg
xchg
sbb
pop
std
jnp
add
push
es
xchg
adc
loop
lcall
jl
pusha
or
shll
int3
adc
repz
mov
int
jmp
jl
push
inc
pop
push
xchg
mov
cwtl
cmp
dec
out
fcoml
icebp
adc
mov
sbb
push
push
dec
mov
insl
das
mov
mov
pop
jge
subl
std
fwait
aas
xchg
in
sbb
xor
push
jb
mov
lahf
add
loopne
addr16
inc
outsb
xor
into
pop
xchg
jae
aad
testb
inc
outsl
roll
pushf
lock
push
cmp
popf
cmpsl
or
in
adc
push
sbb
sub
ficompl
fsubrl
jne
xlat
arpl
adc
or
std
mov
std
insl
push
cwtl
outsl
andl
je
je
xchg
pop
les
test
or
mov
sbb
js,pn
movsl
pop
push
dec
icebp
mov
cmpsl
stc
jecxz
sbb
adc
and
sub
pop
inc
adc
in
pop
addl
or
stos
xchg
test
cwtl
jae
outsb
inc
and
or
roll
adc
data16
xor
jle
xorl
movsl
sbb
ret
mov
jne
sub
cmp
cmp
rol
movsb
push
test
jl
aad
lcall
jmp
test
dec
ss
pusha
xor
cwtl
mov
xchg
lret
pusha
adc
jnp
jnp
push
push
dec
sub
inc
lret
mov
call
ret
push
inc
dec
jl
into
push
or
mov
ret
sti
mov
dec
rcr
fcmovnb
sub
bound
test
xor
push
lret
aaa
popf
nop
outsl
lods
push
mov
aas
adcb
je
lock
mov
mov
cmp
push
add
or
add
pop
cmpb
psrld
mov
xor
popa
decb
dec
flds
sti
push
pop
cmpsb
sub
xor
addr16
dec
in
iret
jge
jo
dec
sbb
cmp
jnp
insb
jle
ret
mov
in
ss
jmp
in
pushf
daa
outsb
jmp
fsubrs
lock
sbb
fdivs
cmpneqps
rcr
adc
daa
add
push
jnp
sub
stos
cmp
lcall
test
insb
lcall
sahf
out
jge
jge
mov
addl
xchg
mov
mov
dec
add
mov
lret
adc
inc
std
mov
xor
repz
dec
je
inc
test
or
stos
fldcw
xchg
jno
outsb
xchg
push
mov
ja
xchg
mov
dec
pop
jge
mov
arpl
pop
dec
add
aaa
rol
stos
int
lds
bswap
ficoml
cwtl
test
loop
dec
dec
jge
adc
push
xor
mov
cmp
cs
xor
fs
pop
stos
shlb
pop
fists
push
push
insb
in
jg
sbb
mov
shlb
push
fwait
pop
cmpsl
out
dec
imull
add
lea
mov
loop
and
mov
sbb
sarl
dec
mov
out
aaa
mov
push
fimull
mov
lea
adc
loop
test
js
cld
or
xor
out
insl
dec
inc
mov
data16
dec
mov
inc
cli
call
out
dec
pop
popf
cmpl
jae
enter
sub
adc
cmp
push
adc
cli
jno
lock
cmc
sub
cld
mov
dec
cmp
lahf
or
stc
jecxz
inc
jnp
outsl
fwait
loopne
xchg
mov
fcom
adc
test
or
fstps
ret
jb
mov
add
lds
lcall
xor
sar
xchg
lcall
xor
sub
es
fnstenv
call
jge
adc
testl
push
negl
sub
daa
mov
inc
jb
popf
adc
lahf
movsb
loopne
xlat
dec
outsb
movsl
push
adc
repnz
mov
cs
js
jg
hlt
ljmp
pop
popa
xchg
mov
sbb
pop
mov
mov
idivb
ljmp
std
dec
dec
cs
cltd
roll
pop
or
pop
call
mov
jno
jmp
int
daa
pop
hlt
enter
or
jns
popf
xchg
push
sub
cmpsl
push
mov
cmp
xor
cltd
and
hlt
sub
mov
imul
xchg
mov
subl
outsb
dec
stc
sub
inc
xchg
dec
pop
into
outsl
aas
or
sub
fucomp
dec
xchg
mov
aaa
imul
xlat
push
outsb
movsl
cmp
mov
sti
std
mov
out
and
xchg
out
cltd
icebp
aas
xor
cmc
fxch
mov
push
lock
jmp
aas
rcr
xor
xchg
iret
and
xchg
lahf
mov
add
jge
orl
jno
out
popa
aam
mov
fsubrs
cli
aad
sbb
fistpll
and
fstpl
jmp
rolb
mov
jnp
js
xchg
dec
je
push
mov
push
and
fsubl
test
push
adc
xor
or
or
clc
inc
push
movb
test
mov
cs
jl
xorl
fcmovne
scas
cmp
add
cli
into
notl
movsl
shlb
push
pop
shl
push
pop
xchg
xchg
push
mov
xchg
lret
popf
in
xchg
jae,pn
shrb
mov
mov
xchg
sbb
inc
mov
sbb
fisttpll
push
pop
das
popl
insl
adc
mov
mov
or
mov
mov
test
mov
cs
or
add
mov
lret
lea
insb
in
and
jne
daa
js
pop
imul
imulb
outsb
sbb
sbb
lods
enter
leave
xchg
cltd
and
imul
xchg
out
out
mov
in
outsl
icebp
fldpi
mov
inc
or
imul
dec
dec
adc
mov
dec
mov
or
ja
and
jl
fld
cmpsl
fs
lret
mov
xchg
push
inc
pop
fisubrs
cmp
ja
jge
push
icebp
scas
roll
mov
sub
adc
or
sub
dec
xchg
std
in
iret
jbe
in
sarb
mov
ja
add
outsl
hlt
xor
jge
sbb
sbb
jno
mov
push
cmp
flds
andps
mov
sbbl
push
cmp
add
push
jmp
jge
pop
js
lods
sti
jne
sub
mov
nop
movb
hlt
and
inc
mov
or
ret
jnp
push
mov
xor
xchg
cmp
enter
and
mov
cmp
ljmp
xchg
pop
pop
les
leave
mov
cltd
add
mov
mov
or
and
push
lret
outsl
xchg
cmpsb
fsts
outsb
adc
adc
jp
fisttpl
push
scas
mov
es
dec
pop
inc
int3
loopne
mov
add
lds
out
or
fsubrs
xor
jmp
push
cmp
lods
adc
divl
xchg
testb
jno
xchg
popa
add
cmp
es
addr16
cwtl
pop
or
ss
pop
mov
push
rcrb
pop
xchg
mov
mov
push
jle
std
fucomi
and
xchg
lea
sarl
xchg
test
push
cltd
imul
loope
mov
enter
mov
mov
push
in
push
dec
add
push
repz
mov
clc
cwtl
std
jo
inc
xor
sbb
in
lea
and
jmp
lahf
sbb
xchg
inc
scas
mov
or
adc
pop
data16
mov
mov
mov
cli
xchg
mov
push
gs
xor
xchg
sbb
inc
out
sti
packuswb
jns
mov
xchg
dec
push
jg
nop
jmp
outsb
add
leave
call
cmpsl
push
or
push
mov
mov
cmc
xchg
lods
inc
xlat
xor
jno
jae
jb
jo
scas
out
pushf
jle
loop
test
lock
cmpl
jne
mov
setne
jg
notl
insl
outsl
aam
hlt
mov
fneni(8087
mov
adc
orps
test
mov
imul
loop
push
mov
stos
insl
cli
aam
mov
cld
daa
pop
cmpsl
jge
jne
shrb
sbb
push
jno
scas
jecxz
into
mov
push
push
pop
inc
je
gs
sub
movsb
aad
imul
insl
push
push
sub
out
add
lds
call
xchg
or
sti
in
jp
shll
in
sub
int3
jecxz
inc
pop
cmp
pop
ficoml
jge
repz
inc
fiaddl
mov
sub
shlb
inc
ja
fs
nop
aas
shl
aam
stc
sbb
or
imul
icebp
movsl
mov
jae
xchg
xchg
sbb
lret
cli
inc
add
xchg
lock
adc
push
out
xor
cld
outsl
mov
test
shll
out
rcrb
roll
lock
out
cld
ss
jge
jnp
mov
push
enter
pop
mov
mov
lds
hlt
sbb
push
push
loope
sbb
inc
or
pop
jno
lahf
scas
push
loope
push
adc
lods
stc
xor
sbbl
jbe,pn
push
incb
pop
int
ljmp
int
in
jb
mov
jae
enter
sbb
mov
xor
or
inc
inc
out
adc
or
push
cmpsb
sbb
test
icebp
cmp
es
lock
mov
ret
call
inc
pop
pop
jne
inc
xor
cmp
leave
push
mov
jae
mov
mov
or
adc
mov
repz
popf
pop
pop
jb
push
pusha
jl
xchg
rolb
sub
push
in
cmpsb
dec
aaa
xchg
repnz
in
add
ret
iret
aaa
out
add
jmp
popf
pop
mov
pop
stos
stos
sbb
sti
popf
pandn
mov
mov
add
movl
pop
int3
dec
mov
stc
cmp
idivb
mov
fsubl
aaa
mov
mov
sbb
mov
jb
mov
pop
insl
pop
mov
int
cmc
stos
jecxz
mov
test
xchg
out
nop
out
or
int
push
inc
insl
jge
rclb
stc
int
shlb
jo
push
pushf
pop
xor
jl
mov
push
push
std
outsl
js
jb
xor
cmp
jne
mov
mov
push
aas
sub
xchg
imul
sub
add
outsb
and
and
or
jnp
in
out
jae
in
lahf
push
sub
dec
lods
shlb
mov
mov
lahf
aad
testl
sub
dec
stc
fidivrl
pop
or
repz
addb
into
xchg
adc
cmp
cmp
jns
or
inc
mov
call
fists
orb
repz
dec
cli
dec
roll
movsl
xor
popf
jcxz
aas
push
int3
mov
shl
inc
test
imul
xchg
mov
or
clc
lahf
mov
xchg
addr16
mov
xchg
adc
jae
fdivs
into
mov
push
int
cmp
aam
inc
lret
es
add
imul
les
jb
cmp
bound
in
mov
icebp
add
cltd
jecxz
mov
xor
test
ljmp
mov
fmulp
in
cli
popf
dec
clc
gs
add
scas
and
xor
std
adc
and
cld
je
sbb
pop
popf
xor
repnz
and
or
mov
les
xchg
add
push
dec
or
sub
divl
xchg
daa
popa
mov
pop
dec
stos
xlat
loopne
pushf
repz
out
or
stos
or
test
jnp
jb
cmp
mov
ret
adc
adc
mov
add
adc
stos
push
jne
pop
lcall
sahf
push
and
ret
popf
dec
dec
arpl
xchg
bound
mov
sbbl
mov
cmpsl
out
and
mov
push
fidivrs
push
push
lret
lds
jno
shll
cld
push
loop
mov
push
cmp
ja
mov
dec
arpl
fadds
sub
loop
push
push
movsb
mov
push
mov
test
inc
mov
mov
pop
pop
inc
bnd
sub
inc
and
mov
loopne
push
div
stos
pop
pop
jb
daa
sarl
imull
fistps
and
je
xor
les
dec
data16
mov
cmp
cwtl
cmp
jg
jg
sahf
negl
mov
ja
xor
into
push
std
sahf
inc
add
jp
push
cmp
or
add
mov
arpl
mov
jge
adc
sahf
cltd
mov
adc
pop
rcll
xchg
stos
int3
in
jg
idivl
pushf
or
test
sub
jnp
call
and
ret
aad
es
lcall
cmpb
mov
sbb
test
in
out
xor
mov
test
pop
cwtl
adc
add
fcmovnu
loope
mov
aad
movsl
xor
stos
push
or
inc
inc
ss
push
dec
arpl
aas
fsubl
loope
movsb
pop
arpl
adc
pop
and
dec
je
push
or
movsb
icebp
call
dec
nop
cvtps2pi
fmull
gs
pop
push
and
loopne
xor
nop
push
dec
jmp
lret
in
sbb
mov
cmpsb
inc
movsl
icebp
mov
or
pop
sbb
pop
fisttpl
mov
dec
test
push
pandn
mov
add
dec
adc
aam
leave
fs
jb
xchg
push
lds
pop
loop
sub
push
cmp
mov
addl
ds
sahf
out
sbb
pop
popa
lods
adc
sbb
mov
cmp
shlb
arpl
push
mov
sub
adcb
imul
movsl
mov
jae
adc
pop
mov
jae
jle
xor
sbb
mov
mov
das
cli
jp
jmp
leave
mov
sbb
pop
push
stos
andl
das
cmp
mov
mov
lret
jle
mov
hlt
or
out
ds
dec
mov
nop
ss
mov
shr
lcall
cmp
arpl
icebp
or
in
mov
sub
ret
jle
lods
or
jns
push
dec
std
mov
icebp
rolb
jle
rclb
xlat
repnz
cltd
and
cmp
sbb
cmpsb
cmp
xchg
sub
cs
in
repz
out
push
adc
xchg
inc
sbb
cmp
adc
jno
rcrb
cmp
cmpsl
shr
jne
xlat
jl
xor
jo
mov
aaa
mulb
fs
mov
or
out
dec
mov
sub
push
add
test
xor
mov
or
sub
mov
pop
cmp
jge
or
out
jno
das
push
mov
fisubl
adc
out
aaa
cld
addr16
seto
out
pop
jnp
iret
adc
sarl
pop
addl
out
jl
out
mov
in
orl
ljmp
add
or
outsl
mov
sbb
pop
sbb
repz
jp
xchg
lcall
mov
test
cs
stos
dec
push
movsl
xor
clc
negb
cmp
cmp
mov
pop
mov
stc
pop
mov
jno
add
pop
aad
cld
pop
insl
cwtl
cmpsb
adcl
and
inc
xchg
icebp
scas
push
addr16
cmp
add
repz
cli
aaa
pop
sub
adcl
mov
xor
out
out
jns
jle
cmp
mov
scas
fdivrs
mov
adc
cld
mov
push
inc
lock
icebp
imul
lods
jne
jp
pushf
clc
pop
shlb
lods
mov
mov
xchg
xor
sbb
sub
mov
cld
jns
xor
and
out
inc
sub
jmp
add
repnz
je
in
mov
in
in
in
mov
data16
or
cmp
dec
sbb
add
xchg
or
sahf
fnstcw
fwait
cmp
imul
mov
lahf
lds
or
pop
loope
push
insb
add
pop
dec
repz
out
sbb
jbe
dec
pop
sub
in
mov
mov
shrl
fldl
leave
and
mov
enter
xchg
stos
popa
inc
push
aas
sbbl
jae
cltd
in
out
jmp
dec
or
add
cmp
cltd
mov
out
mov
xchg
mov
cmovo
add
xchg
int3
xorb
mov
mov
and
std
or
scas
xlat
mov
cmp
mov
ret
cmp
jmp
lds
inc
imul
rcrl
jecxz
in
mov
dec
movsl
in
mov
xor
fs
sub
repnz
pop
in
arpl
push
mov
push
adc
mov
std
aaa
mov
xlat
mov
lret
pushf
mov
cli
jns
xchg
or
gs
lret
call
jge
and
sar
insb
push
mov
shl
mov
pop
mov
sbb
pusha
hlt
ja
push
dec
xchg
outsl
inc
mov
xchg
pop
xor
push
lret
int
pop
mov
xchg
bound
xchg
mov
mov
pop
rorl
sub
dec
lret
jge
pop
iret
ljmp
repnz
sbb
xor
popa
sbb
stos
test
gs
or
lcall
ja
mov
cld
mov
mov
jge
js
js
sub
push
cmpsl
lcall
call
mov
insl
mov
cltd
mov
cmpsl
mov
cmp
stc
out
sbb
push
getsec
sbb
cmc
xor
pop
and
pop
in
add
mov
inc
iret
xchg
aad
jbe
cmp
outsb
test
adc
xchg
ficompl
mov
lahf
in
sahf
loope
sahf
adc
scas
lret
jl
rcll
idiv
paddq
sub
xchg
fsubrl
jae
jns
jecxz
movsl
sub
lods
dec
aad
dec
icebp
es
xorb
sbb
dec
arpl
pop
and
xlat
mov
mov
test
aaa
cli
push
mov
cmp
pop
jl
mov
and
repz
xchg
mov
jo
or
xor
mov
icebp
int
cmc
mov
js
jmp
ds
mov
rorl
bound
gs
popf
ljmp
sbb
lods
icebp
hlt
in
cvttps2pi
push
in
sub
xor
imul
test
push
movsl
in
hlt
dec
pop
push
xchg
xor
clc
pop
cltd
add
lods
push
lret
cmp
out
adc
das
pop
dec
sbb
mov
push
mov
push
adc
es
jmp
mov
pushf
jbe
cmc
and
lock
jo
lahf
pop
ret
lods
sbb
add
cltd
xor
or
sub
test
fdivrp
push
xor
or
ljmp
cs
fiaddl
daa
lahf
mov
jl
jle
cmp
pop
ss
cmp
pop
bsr
xchg
mov
inc
test
call
mov
jg
cmp
xchg
mov
and
and
sahf
jmp
jl
addb
lods
mov
add
movsl
fdivrs
inc
add
push
in
xor
test
orl
scas
outsl
cmp
into
orb
int
push
push
int
jne
ss
gs
inc
insl
aas
iret
pop
fisubs
inc
jo
inc
mov
pop
dec
pusha
mov
dec
mov
xor
hlt
lds
mov
jns
arpl
idiv
sbb
add
aas
xchg
jbe
dec
test
stos
jo
mov
push
fs
cli
mov
push
and
clc
mov
in
pop
sbb
cmp
mov
ljmp
call
adc
test
or
jecxz
mov
les
insb
sbb
out
or
cmp
addr16
cs
sbb
sbb
fnstsw
push
add
push
or
sub
std
fistpl
and
inc
sbb
xchg
cmp
add
subl
mov
ss
pmaxub
adc
jge
xor
fnsave
lds
das
xchg
dec
dec
mov
or
dec
jg
xchg
dec
dec
popf
cmpsl
jne
test
int3
jb
cltd
push
rol
pop
mov
add
dec
and
xor
adc
jae
nop
mov
mov
xlat
xor
pop
ss
mov
out
sbb
jne
pop
rcrl
sbb
jbe
or
cmpsl
mov
rcrb
dec
jae
es
sbb
inc
push
sbb
ljmp
jecxz
lahf
movsl
pop
test
cmpsb
inc
aas
pop
iret
adc
movsb
push
std
add
push
xchg
push
xor
xor
addl
dec
mov
mov
pop
out
lods
les
cli
das
rolb
rcr
mov
fwait
out
je
sub
addr16
mov
leave
call
lods
cltd
cs
sub
cmp
in
into
loop
jle
mov
out
ds
lods
add
inc
icebp
shr
cmc
shlb
jle
push
enter
sub
xchg
mov
jne
nop
mov
xchg
pop
xor
movsb
ss
pop
adc
and
mov
mov
pop
out
aaa
subl
and
lret
fsubrl
es
sbb
out
call
xor
insb
lds
insb
push
fidivl
out
xchg
into
scas
mov
and
mov
cli
sub
movsl
fistpll
sub
xchg
jns
fwait
xchg
sahf
mov
push
xor
push
push
cmpsb
int
aas
cmc
cli
aaa
sbb
imul
sbb
pop
les
cmpsb
ret
fld
mov
stos
sahf
push
pop
pusha
dec
mov
popf
ja
aaa
mov
dec
xor
add
adc
imul
add
test
aam
add
dec
cmpsl
daa
bound
push
mov
pop
insl
in
int
cmc
lret
mov
out
xor
popf
cltd
xlat
add
mov
data16
mov
fnstsw
stos
popf
pop
lods
xor
dec
push
sub
xchg
sbb
out
push
pop
lahf
daa
jae
cmp
mov
mov
push
bound
xchg
testl
jle
xchg
fwait
add
push
fs
jp
push
push
dec
loope
sti
or
scas
or
add
std
repnz
cld
fldcw
jns
mov
mov
andl
mov
enter
add
adc
add
jns
call
lea
in
pop
nop
incl
xorl
leave
out
out
or
mov
push
sub
mov
push
jp
out
ficompl
int3
inc
push
fmul
mov
xchg
xchg
mov
lret
inc
es
push
mov
cmp
push
push
push
filds
cs
xchg
outsb
mov
mov
addb
iret
pushf
sbb
pop
cmp
sbb
test
mov
mov
inc
repz
ljmp
fwait
push
push
adc
testl
push
xchg
xchg
mov
xor
outsb
cmp
cmp
fistl
mov
inc
mov
push
lock
push
nop
xor
sub
and
fcmovbe
or
lea
pop
push
inc
arpl
cli
imul
jbe
int
int
ud2
mov
cmp
ret
and
add
jbe
adc
es
jb
add
in
fldcw
add
mov
and
pushf
aas
or
pop
popf
fistl
jnp
idivl
pusha
inc
xlat
xor
jmp
add
xchg
insl
sbb
iret
loopne
pop
ljmp
es
mov
adc
mov
ljmp
sub
imul
push
and
call
mov
fisttpll
add
or
jno
sahf
js
mov
or
cmp
repz
cmp
out
push
lcall
mov
mov
push
sbb
arpl
adc
test
fstpl
fmulp
aas
adc
rol
dec
dec
or
pusha
xor
pop
xor
outsb
xchg
stc
fisttps
add
in
aaa
and
ficompl
mov
clc
push
mov
in
jae
shlb
pop
or
sub
jbe
dec
shll
gs
out
push
fidivrl
pop
lret
push
aam
and
pop
adc
jae
and
dec
cltd
and
jns
xchg
jmp
fmull
xchg
mov
mov
add
sbb
pop
sub
xor
inc
lahf
test
or
cmp
dec
ret
adc
ret
mov
push
gs
dec
jbe
test
cmp
push
out
push
dec
and
and
test
into
push
cmp
sbb
pop
loope
cmc
cmp
rcpps
inc
push
jns
and
imul
cli
and
ds
xchg
add
imul
fmul
out
es
sbb
inc
ret
mov
out
mov
ljmp
mov
dec
push
mov
xlat
ja
adc
lock
lods
pushf
pushw
fwait
sbb
mull
cmc
push
mov
jns
sbb
adc
inc
outsb
adc
enter
cmp
addr16
test
lock
fs
cmp
aas
sbb
popf
sbb
push
leave
incl
lods
lahf
repnz
test
mov
aas
sub
in
cltd
cmp
and
aaa
cmc
pop
cmp
push
xchg
push
clc
in
add
sub
inc
movsl
arpl
or
lods
repz
testb
leave
addr16
xor
add
jbe
inc
cli
mov
leave
mov
outsb
push
lods
stos
popf
ret
add
push
int
dec
cmp
pop
aaa
mov
dec
mov
fsubs
sbb
sbb
mov
stc
mov
mov
xchg
mov
js
add
rcr
dec
daa
in
cli
test
fmulp
nop
imul
jmp
movsb
fwait
loope
int3
push
inc
jp
push
jbe
aas
es
dec
xchg
mov
adc
movsb
lret
out
sub
repnz
inc
xchg
push
jne
dec
fsts
pop
dec
mov
movsl
fucomp
mov
lods
iret
clc
or
push
pop
xchg
xchg
dec
lcall
jle
imul
fwait
mov
sub
mov
ja
fs
add
xchg
daa
cltd
push
cmp
negb
jmp
je
imul
mov
and
dec
repnz
or
dec
aad
adc
mov
adc
fistpl
mov
inc
fistl
mov
cld
jno
push
mov
movsl
mov
push
pusha
and
xlat
xchg
mov
fcompl
sbb
mov
cmp
test
push
sete
push
and
jge
cmp
inc
cmp
fbstp
testb
lea
pop
outsb
mov
repz
mov
jmp
jae
wrmsr
cmp
insb
pop
inc
pop
pop
les
pop
loope
inc
mov
fcomps
push
hlt
scas
add
push
out
movsb
mulb
dec
lods
and
mov
rcll
xchg
cmp
inc
sti
add
sub
or
sbb
push
add
lret
jno
push
xor
xchg
jge
mov
ficompl
inc
in
dec
pusha
sbbb
imul
jge
stos
mov
fstl
lret
dec
mov
or
adc
pop
jo
push
dec
rorl
jecxz
mov
mov
fimuls
adcb
testl
cmp
lcall
lds
xor
dec
dec
inc
data16
cmp
cmp
xchg
jge
movsb
pop
pusha
pop
mov
fdivr
popa
fidivs
sub
movsl
sbb
mov
xchg
insl
cli
fucomi
mov
push
xchg
les
dec
push
hlt
mov
pop
rcrl
sub
sub
call
push
jp
arpl
mov
sub
lea
jae
sbb
lahf
shll
hlt
cmp
xchg
jae
fcmovnbe
shrl
jp
jo
xor
xor
xor
pop
dec
int
xchg
call
push
fsts
push
jne
in
aam
outsb
scas
pop
mov
mov
bound
mov
dec
loop
xchg
insb
sbb
stc
xor
xchg
push
test
mov
mov
mov
stos
cmp
dec
inc
lcall
sbb
add
xor
ss
mov
aaa
pop
loope
dec
outsb
dec
mov
push
pop
pop
shlb
loopne
lret
and
xchg
push
or
cmpsl
dec
arpl
pop
in
xchg
aad
and
mov
test
sub
dec
pop
orb
out
in
cli
pop
lock
pusha
push
lret
xor
cmpsl
pushf
aas
fdivs
aam
inc
xor
sbb
sbb
push
or
inc
and
rdtsc
mov
cmp
in
leave
test
sarb
xchg
cli
and
jp
jl
js
pop
adc
pop
enter
push
lret
push
xor
jo
mov
mov
xchg
jmp
mov
cmp
mov
movsb
stos
sub
add
mov
pop
mov
test
je
aas
insb
in
push
inc
push
sbbl
adc
rcr
pop
push
jne
jbe
stos
jne
add
es
mov
xchg
ret
test
je
jno
stc
mov
mov
mov
ffreep
icebp
rclb
mov
or
jbe
inc
sarl
dec
xor
cwtl
ja
ret
jns
ja
pop
push
xor
sbb
stos
lcall
dec
dec
movsb
shl
pop
lods
cmp
dec
dec
rorl
cwtl
mov
ja
inc
jg
mov
mov
mov
or
enter
xchg
mov
mov
adc
pop
xor
jecxz
outsb
push
ds
push
daa
lahf
mov
sti
lds
fmulp
sub
lods
fists
or
ficoml
repz
test
loopne
sub
jne
addr16
mov
lahf
notb
pop
mov
fsts
xchg
rclb
cltd
mov
insb
sub
rcrb
imul
cmp
jg
pop
push
cmp
add
data16
pop
adc
or
test
or
and
out
std
dec
neg
daa
add
pop
xor
aas
nop
ss
sbb
and
and
pop
stos
mov
mov
jne
sbb
xchg
pop
ret
pop
scas
shll
rolb
int
cmp
sub
in
inc
push
bound
mov
sarb
pop
das
addr16
pop
mov
popa
inc
sbb
pop
dec
jle
adc
jle
and
gs
lcall
sbb
mov
incl
std
cmp
stc
or
or
mov
movsb
push
inc
fisttps
sub
xor
xchg
inc
popf
dec
lret
dec
mov
int3
movsb
jle
cli
push
enter
dec
push
sub
dec
push
ret
jnp
mov
mov
or
test
sti
in
sti
loop
and
pop
int
mov
lea
ljmp
daa
leave
enter
pusha
pop
add
das
pushf
sub
out
mov
lds
or
aas
outsl
sub
xchg
gs
jmp
fistpll
int
pusha
cmc
sbbb
push
inc
xlat
mov
stos
std
pusha
int
xor
popa
lcall
pusha
or
mov
pop
repnz
imul
stc
cld
sub
mov
in
push
push
lret
aas
jp
adc
nop
pop
fisttpl
dec
push
aas
stos
int3
gs
test
push
mov
adc
daa
subl
or
in
js
jne
xor
outsb
mov
call
mov
lret
cld
cmp
repnz
test
mov
xchg
leave
cmp
sub
repnz
outsl
fstpt
mov
push
cmp
cmp
mov
clc
push
iret
addr16
cmp
lods
je
and
mov
leave
push
fmuls
adc
push
mov
or
movsl
lock
arpl
or
out
insl
jbe
sbb
xor
push
scas
mov
xor
inc
xor
std
lcall
adc
and
jns
mov
notl
outsl
mov
jmp
cmp
test
sahf
gs
mov
mov
repz
int3
ljmp
das
lcall
xchg
add
cwtl
and
jle
mov
loope
lds
fs
daa
mulb
xchg
push
loop
pop
sub
lods
pop
mov
sbb
aad
mov
xchg
gs
xchg
xor
in
add
mov
sub
cmpsb
xchg
rclb
int
sbb
pop
in
stos
or
or
sbb
jns
jbe
jo
sahf
cltd
inc
xor
and
and
pop
repz
xor
or
popf
in
pop
lcall
xchg
cld
std
clc
sbb
arpl
popf
imul
push
in
aas
and
lret
movsl
mov
mov
lock
das
push
sbb
nop
and
stos
mov
decl
jae
in
mov
stos
rol
push
mov
and
adc
roll
jno
movsb
aaa
jl
addr16
and
mov
cmp
xchg
pop
fwait
adc
outsb
sbb
sub
adc
mov
pop
inc
stos
hlt
clc
out
jg
fs
sbb
lods
cli
pop
test
roll
mull
and
pop
cmp
das
xchg
and
push
or
lock
fmull
sub
adc
cmp
xor
ss
pop
push
insl
stos
imul
adc
push
fcomi
mov
xchg
jbe
cltd
popf
and
jle,pn
xchg
shrb
jne
ret
repz
xchg
std
fldenv
xor
sti
out
lods
adc
popa
mov
mov
cli
xchg
xor
add
xchg
adc
jns
add
in
rorb
dec
inc
jbe
cwtl
lret
adc
inc
cmp
test
cltd
adc
nop
xor
and
jno
sbb
es
cld
repnz
pop
call
mov
lods
xor
shrb
inc
aas
enter
adc
mov
es
dec
in
dec
dec
rcll
sbb
out
popf
negb
pop
xor
mov
stos
inc
sarb
cltd
cltd
insb
aad
xor
jbe
add
sbb
in
iret
push
faddl
lock
mov
add
lcall
lock
je
pop
mov
mov
imul
xor
je
pop
cmp
add
jb
cltd
jnp
jb
push
mov
mov
adc
push
push
inc
test
out
pusha
inc
mov
jge
mov
mov
rorb
mov
test
jbe
pop
sbb
stc
stc
sub
mov
pusha
ljmp
hlt
adc
daa
nop
sbb
lods
mov
push
jb
push
jecxz
xchg
gs
jg
or
ljmp
jb
mov
adc
mov
lock
dec
mov
test
pop
cmp
mov
pop
aaa
in
repnz
mov
je
push
cs
scas
lahf
jo
rcl
dec
sbb
push
xor
cwtl
cmp
or
jnp
push
sub
or
fimull
dec
in
mov
jno
sub
jecxz
pusha
jb
mov
scas
aaa
stc
out
scas
dec
daa
add
cmp
and
lret
stc
jns
cltd
popa
add
stos
push
ficoms
int
dec
jle
daa
arpl
xchg
cmp
and
add
add
js
cmp
inc
aam
ds
imul
add
mov
mov
popa
aam
jae
jmp
or
das
test
xchg
or
test
jbe
int
test
imul
or
aaa
shrl
imul
jmp
stc
in
xchg
in
cld
dec
pushf
mov
out
outsl
mov
outsb
cld
in
xchg
push
jp
ret
lods
js
push
push
test
xchg
insl
fwait
jae
ficompl
dec
dec
cwtl
inc
enter
imul
pop
adc
xchg
lret
sbb
loop
and
aaa
mov
pop
cmp
popa
fsubrl
lcall
mov
aas
dec
jo
sub
xchg
xor
test
mov
push
mov
scas
stos
pop
test
adc
push
jbe
jge
aaa
jo
lret
divl
jl
pop
pop
mov
fdivrl
inc
xchg
iret
jno
dec
jg
add
xor
xchg
mov
mov
out
jae
or
sub
mov
push
pop
push
insl
dec
sbb
push
in
in
sub
sub
movsl
mov
mov
bound
rcrl
setb
xchg
xchg
pop
xchg
cmp
cmpsb
cmp
mov
xchg
jecxz
mov
out
and
pushf
dec
xchg
pop
in
loop
xchg
mov
push
addr16
mov
rorl
add
cmpb
dec
gs
mov
cld
fcmovu
sub
mov
adc
xchg
push
sub
add
pop
vmaxpd
mov
rdmsr
scas
xchg
xor
push
mov
xchg
xor
adc
xchg
fdivl
jo
test
sub
add
outsl
push
add
int
jmp
mov
sarb
xchg
jns
cltd
clc
jmp
mov
out
jo
sub
or
jmp
in
push
or
push
inc
cli
push
dec
jp
aas
fdivrl
cmp
mov
aad
xchg
inc
dec
cld
mov
push
aam
lods
jne
lret
dec
pop
clc
pop
pop
mov
mov
roll
sub
js
test
and
in
test
add
fcmovb
call
sub
mov
movsb
repnz
pushf
and
outsb
psubw
es
xlat
lret
in
lock
ds
add
jb
ds
rol
or
mov
xchg
push
cmpsl
call
movsb
sar
lock
push
test
and
mov
nop
jne
push
pop
xchg
popa
insb
int3
xchg
jmp
mov
cli
out
orl
sub
cld
hlt
jle
sbb
ja
and
wrmsr
subl
call
dec
lcall
adc
rclb
push
shl
movsb
mov
int3
lahf
insl
add
adc
outsb
mov
fwait
scas
test
push
jecxz
push
aam
jae
and
insl
sub
push
jle
in
jl
cmp
lods
cmc
fs
arpl
js
jmp
adc
out
cmc
dec
adc
movsl
fstp
cmpl
jecxz
push
cmc
push
pop
push
in
insb
mov
pop
mov
add
mov
sbb
lret
leave
adc
stc
sbb
cmpsl
pop
pop
add
or
jbe
mov
xchg
jg
fwait
cmp
adc
movsl
xchg
mov
push
mov
loope
iret
lret
inc
dec
sarb
cwtl
push
mov
sbb
ret
bound
andl
test
iret
pushf
jns
pop
cwtl
mov
fmuls
mov
mov
jp
test
jb
inc
and
scas
dec
hlt
pop
imulb
fisubrl
fcom
pusha
aad
scas
add
dec
jl
mov
mov
fldenv
cmp
xchg
cld
mov
xchg
cmp
nop
outsb
out
pop
jno
ror
pop
dec
frstor
mov
mov
mov
sbb
andb
mov
sub
mov
cld
mov
xor
mov
mov
mov
out
jge
fimull
lods
pop
pusha
test
repz
inc
mov
or
aaa
jg
and
loope
jns
ret
jecxz
lahf
sbb
scas
mov
lods
shl
cmc
pop
divb
pop
std
lds
add
jg
mov
push
pop
xor
imul
stos
lret
lods
cmp
adc
xlat
sbb
sub
mov
rcrb
dec
out
clc
mulb
shl
mov
jp
mov
movsl
incl
lcall
addr16
xor
rol
ret
fwait
dec
or
imul
pop
or
pop
push
add
scas
or
cli
enter
xor
push
sub
out
xor
jg
sbb
ljmp
cmp
xchg
pop
aad
adc
and
movsl
out
push
xchg
insl
nop
sbb
cmpsb
mov
mov
movl
sbb
inc
mov
addr16
in
jno
inc
adcl
sub
rcrl
add
insb
or
inc
mov
aam
inc
inc
mov
or
mov
inc
lds
shr
mov
sub
outsb
fnstenv
mov
pop
or
in
xchg
in
pop
cmp
pop
aad
je
and
push
jne
and
push
in
out
jno
mov
mov
sub
pop
sub
push
test
mov
add
fnstsw
pause
int
aam
stos
sub
int3
out
pop
add
cs
and
xchg
mov
das
pop
mov
sub
lods
sub
jnp
inc
push
repnz
imul
mov
sub
and
pop
inc
xchg
mov
mov
imul
clc
push
popf
daa
or
mov
cmp
push
aas
add
or
outsl
jo
xor
jbe
mov
std
out
paddd
insl
cmp
adc
jmp
xor
fs
jns
lock
and
sbb
daa
adc
int3
lret
mov
pushf
push
mov
movsl
mov
and
push
pushf
xlat
inc
add
cmpsl
jb
out
leave
xchg
arpl
push
lds
push
repnz
cmp
notl
xor
xlat
pop
xchg
xchg
and
data16
mov
push
pop
inc
xchg
mov
mov
push
adc
stc
and
and
fsubrs
popa
rcl
aas
mov
adc
popa
gs
gs
xor
jns
bound
xlat
bound
cmp
loope
dec
jmp
pop
add
xor
movsl
sub
pop
hlt
cmpb
jg
sbb
fsubl
dec
dec
mov
pusha
stc
addr16
js
xor
shll
sbb
lock
repz
sahf
mov
mov
or
xor
mov
xor
and
test
add
das
sbb
mov
fidivs
ret
dec
dec
pusha
test
test
push
into
dec
fisubrs
xchg
orb
scas
cld
call
inc
pop
fsubrl
mov
mov
push
ret
call
popf
sub
add
jge
cmp
loop
pop
je
int3
xor
and
cmc
call
mov
ljmp
sub
in
push
popf
lock
jnp
or
in
inc
pop
pop
inc
dec
push
fcoml
pusha
sbb
pxor
nop
sbb
xchg
jle
das
testl
jbe
movsl
xor
xchg
cmp
push
adc
and
jge
pop
dec
shlb
pusha
enter
sub
loopne
pop
mov
dec
cs
mov
mov
mov
loop
cld
jae
lret
cs
js
inc
out
sbb
jg
add
and
mov
xor
ficoml
add
push
pop
in
js
mov
xorb
mov
fsubp
inc
dec
mov
mov
cmp
addl
and
jecxz
stos
in
dec
xor
inc
add
in
push
pop
pop
lret
jge
aaa
leave
jge
mov
std
xchg
movsl
or
or
mov
pop
dec
xor
jl
push
lcall
orl
aad
ja
pop
pop
lea
nop
enter
fwait
cmovo
daa
int
cmc
dec
and
dec
insb
cmp
pushf
divb
mov
hlt
mov
mov
cltd
leave
outsb
push
xor
and
sub
fiaddl
insb
mov
ss
mov
mov
push
push
mov
pop
xchg
shrl
in
sbb
jl
mov
dec
aaa
jne
and
xor
adc
mov
sbb
or
inc
or
imul
repz
mov
jp
xor
bound
imul
jecxz
add
xor
enter
inc
mov
sub
xorl
sbbb
fnstenv
add
daa
cmp
and
push
add
jns
add
cmp
dec
lods
fcmovnu
mov
inc
hlt
sbb
mov
nop
pop
jge
xor
push
lsl
push
cmp
in
andl
cmp
roll
scas
arpl
out
stos
and
pop
sbb
nop
fldt
push
xchg
jecxz
call
add
pop
leave
sub
xor
and
or
jmp
in
add
cmpsl
push
aas
mov
faddl
mov
ret
cmp
lret
xchg
rcrl
xchg
in
and
bound
jno
adc
push
mov
aam
fisttpl
jno
sbbl
out
fisttpl
push
pop
ret
dec
jmp
gs
cld
ret
out
xor
mov
pop
ds
dec
xchg
xor
dec
push
mov
cmc
and
xchg
lahf
inc
sar
pop
call
sub
add
jle
das
jecxz
fbld
push
pushf
push
imul
cmpsb
push
lret
cld
lcall
test
mov
aad
cmp
sbb
mov
cmc
enter
and
push
cli
repz
filds
iret
gs
mov
and
shl
enter
insb
xchg
inc
and
xchg
mov
mov
or
in
jecxz
sbb
jns
jo
in
std
sub
mov
xor
push
and
sbb
inc
rcll
je
mov
sbb
mov
data16
orb
insb
mov
adc
mov
das
scas
jo
decb
inc
ja
mov
into
icebp
jns
je
sti
pusha
sub
dec
fmulp
repnz
mov
lret
push
or
xor
push
mov
pop
jno
das
inc
adc
mul
or
mov
shr
pop
and
pushf
pop
aad
lods
clc
stos
push
mov
test
jno
popa
out
out
call
xchg
cmpsl
mov
xor
loop
sbb
or
inc
enter
push
sti
cltd
int
int
mov
xchg
lea
test
lods
cmp
mov
mov
push
lods
cmovnp
test
int
outsb
jmp
add
mov
movsb
aad
fs
sahf
stc
iret
jge
jb
arpl
add
shl
sbbb
and
scas
hlt
cli
outsb
push
push
lods
notb
xor
xchg
or
lahf
fwait
mov
repnz
outsl
push
pop
into
sub
fcom
add
rorb
lods
inc
push
sub
sub
sbb
pop
mov
shlb
fwait
loope
push
insb
and
or
xorb
sub
faddl
jns
bnd
or
adc
clc
mov
ror
js
mov
out
mov
pop
fbld
bnd
fs
xchg
mov
inc
fisubrs
rolb
mov
popa
fbstp
cmpsb
mov
jns
sbb
pop
mov
cmp
nop
pushf
shll
rcll
dec
gs
insb
cs
mov
or
aas
out
and
dec
clc
fistpll
mov
or
inc
xchg
sub
movsb
push
aas
dec
pop
mov
pop
fs
xor
xchg
mov
lcall
xor
push
sbb
sub
push
pop
cld
adc
inc
out
pop
aas
sbb
inc
std
sub
pop
xorb
ret
sub
scas
out
leave
lea
xchg
dec
jle
aam
cmpsb
test
faddl
xchg
test
test
adc
ret
leave
cltd
lahf
add
jb
sub
nop
sahf
addl
pop
fidivl
push
sub
mov
rorb
jmp
dec
mov
es
lods
xchg
popa
xor
sub
rcrb
lahf
in
jg
aas
xor
jae
dec
jge
movsl
jecxz
test
test
inc
pop
sbb
xlat
cmp
pop
enter
jl
cmpsl
mov
inc
mov
into
push
push
pop
fcmovnu
loope
lea
mov
out
lods
pop
ljmp
outsw
mov
inc
xlat
inc
ljmp
or
xchg
insb
inc
jle
jmp
or
cltd
sub
pop
ret
test
arpl
stos
push
push
cmp
xchg
sub
jp
dec
pop
adc
aas
out
inc
fwait
in
xchg
scas
stos
jecxz
mov
mov
out
in
dec
hlt
mov
mov
fbld
arpl
jmp
test
mov
mov
cmp
rcr
add
das
std
popa
int3
lret
call
xchg
ljmp
stos
popa
fmul
add
aad
nop
cmp
adc
idivb
lcall
mov
into
jb
mov
lret
push
clc
mov
in
cmp
xchg
mov
jo
popf
xchg
pushf
mov
xchg
loop
and
cmp
mov
push
dec
add
stc
sbbl
fmuls
xchg
rcll
mov
sub
adc
sbb
fdivl
or
push
lods
sar
mov
ret
or
loop
in
cmpl
lods
shlb
adc
adc
js
fsub
scas
add
ss
adc
xchg
push
xchg
dec
inc
shlb
dec
int
dec
adc
mov
mov
lds
mov
push
sub
mov
inc
inc
push
out
mov
xor
out
sbbb
inc
gs
mov
insb
sbb
lret
inc
shlb
into
sbb
hlt
or
adc
movsb
or
xchg
fld
int3
out
xchg
sbbb
xchg
andl
hlt
sub
iret
push
repz
xchg
sub
mov
repnz
jl
test
cmc
setp
lods
mov
ljmp
pop
bound
mov
inc
call
fidivl
cld
sbb
enter
jle
dec
ss
mov
push
orb
loop
or
push
ficomps
ffree
in
enter
xchg
mov
scas
sbb
xor
ss
fadds
inc
mov
cwtl
sub
adc
and
incl
jmp
icebp
test
add
addb
push
in
inc
icebp
lahf
call
fsubl
into
pop
jecxz
push
ficompl
outsl
popf
xchg
mov
call
lret
stos
ret
push
adc
fucomp
test
pop
out
imul
ja
int3
dec
insl
add
dec
inc
les
jge
pop
xor
inc
or
loopne
xchg
fsubr
cwtl
mov
inc
and
out
xchg
push
loopne
int
lret
pslld
out
cmp
mov
loopne
inc
push
push
mov
xchg
test
xchg
or
repz
dec
sti
call
cltd
cmc
add
mov
cwtl
loope
mov
sub
and
lds
and
mov
inc
insb
fsubl
decl
cmp
loopne
fidivrs
inc
mov
bound
rclb
cltd
dec
pop
or
push
lds
pop
cmp
xchg
xchg
repz
iret
stc
adc
repnz
jns
out
popf
xchg
xor
shlb
lahf
or
push
insb
adc
mov
jmp
rcrb
hlt
sub
adc
icebp
aam
pushf
cmp
cmp
push
sub
add
call
xchg
das
popf
xchg
mov
jno
ss
icebp
hlt
add
punpckhbw
xchg
mov
and
xchg
cltd
jmp
push
outsl
or
inc
test
cli
cld
jg
xor
xchg
jo
xchg
daa
cmpb
cltd
ret
in
inc
and
sti
xchg
icebp
scas
in
shl
mov
xchg
scas
mov
fisubl
pop
push
adc
std
xchg
dec
jg
sbb
es
ljmp
bound
into
push
pop
mov
mov
push
lea
mov
fdivp
mov
jle,pn
pop
and
les
ljmp
ja
fsts
repnz
insl
inc
loope
divb
call
in
mov
sti
xor
pop
popf
and
shll
cs
dec
jno
cld
mov
inc
xchg
icebp
fistl
fwait
xchg
ud0
popf
ss
or
insb
jmp
push
outsb
hlt
out
sub
sbb
fs
pop
repz
mov
addr16
out
push
int3
xor
les
test
das
fs
sub
icebp
movsb
jnp
repz
lods
push
lret
add
mov
add
jns
xchg
pop
mov
mov
aam
pop
push
shrl
sbb
inc
lock
push
fists
pop
je
push
cmp
jb
outsb
fisttpl
outsb
out
insl
aaa
mov
mov
lds
ds
mov
jl
lods
push
lret
lea
in
out
movsl
loopne
mov
hlt
push
arpl
scas
int3
insb
and
mov
adc
dec
mov
xchg
or
enter
mov
bound
rcrl
mov
add
mov
test
inc
inc
cltd
outsl
and
jmp
mov
pop
das
mov
dec
push
sahf
cmp
pop
rorb
ljmp
icebp
dec
fadd
stos
hlt
jbe
dec
lret
adc
lods
fldenv
lds
int
lcall
push
add
daa
xchg
adc
fdivrs
mov
sbb
push
cmc
jecxz
adc
jmp
fistpll
insl
jb
arpl
sub
add
ljmp
or
xor
mov
mov
gs
rcrl
popa
aad
aas
push
push
fcmovbe
out
adc
cmc
dec
ret
xchg
push
mov
clc
pop
daa
jmp
stos
fcompl
push
xor
or
loope
es
jle
mov
loopne
lock
lea
mov
mov
imul
rol
jae
loop
push
dec
arpl
lock
ret
push
or
or
insl
push
ja
fcmove
jle
mov
adc
lods
mov
mov
mov
in
stos
dec
dec
insl
xor
enter
mov
adc
pop
lods
or
mov
ljmp
les
adc
jg
stos
adc
mov
xlat
xchg
in
inc
pop
cmpsl
test
rclb
xor
jge
ret
es
xchg
les
xlat
inc
pop
sbb
sbb
adc
push
ffreep
repnz
xor
popa
dec
jge
jecxz
mov
sbb
daa
dec
pop
xchg
lret
int3
stos
cmp
xor
xchg
fcmovnu
pop
and
es
push
loope
sub
lahf
mov
loopne
cmpsl
sub
je
cmp
push
pop
xchg
in
dec
mov
adc
popa
fsubrl
mov
sbb
cmc
dec
mov
insl
lods
inc
pop
out
loop
test
imul
push
pop
std
mov
push
nop
popa
aam
cmp
fadds
idivl
jg
xlat
cmc
js
hlt
xchg
sub
xchg
jecxz
mov
cltd
in
inc
add
mov
add
hlt
pop
lods
push
add
insb
mov
ss
sub
enter
aad
cmpsl
sahf
cmpsb
cmpsl
sub
lret
sbb
test
test
pop
add
mov
add
fldl
sub
stos
mov
and
sub
xor
lea
mov
jbe
movsb
jg
adc
scas
scas
mov
xchg
loopne
pop
je
pop
jge
cmp
push
inc
pop
push
inc
pop
iret
mov
mov
or
jnp
sub
pusha
jns
repnz
outsb
int3
dec
or
test
jge
in
mov
orb
jae
push
cmpb
lcall
mov
into
scas
scas
jge
addr16
sarb
in
mov
jnp
bound
lods
sbb
das
lods
out
dec
and
rcll
rcrb
cs
sbb
cmpsb
mov
mov
or
jp
dec
mov
dec
xchg
cmp
cmp
enter
xchg
sub
mov
cmp
sahf
cmp
add
scas
xchg
notb
mov
fucomi
or
mov
push
insb
std
fmul
ret
pop
jb
mov
add
mov
add
lahf
dec
jne
and
fiaddl
add
mul
sbb
std
sub
das
das
je
sub
add
loop
adc
xor
outsl
dec
andl
pushf
aam
inc
and
sub
les
sbb
push
mov
sbb
pop
std
xor
aam
cmp
xchg
jge
sbb
test
push
cmpsb
cmp
jo
push
lods
ret
mov
mov
mov
stos
push
and
pushf
push
or
rolb
sbb
xorb
pushf
dec
adc
adc
mov
mov
cld
rclb
out
cmp
test
cmp
inc
ret
jmp
xchg
mov
inc
in
loopne
push
dec
imul
icebp
push
inc
mov
sub
push
mov
jno
nop
outsl
mov
out
mov
outsb
or
into
xor
out
jmp
repz
dec
or
dec
jo
addl
lods
sbb
rol
in
call
rcll
or
sahf
pop
pop
outsb
cmpsl
xchg
nop
inc
int
adc
movsl
lea
lret
mov
adc
jle
cmp
jl
push
sbb
jo
arpl
lret
mov
pop
push
xor
adc
xchg
xlat
leave
pop
cmpsb
pop
mov
aad
outsb
pop
movsl
jl
test
xchg
mov
cmp
aad
adc
jo
jg
int
pop
push
stc
cmp
sub
out
stos
xor
movsb
repnz
sub
scas
add
pop
dec
cmpsb
mov
pop
push
or
jo
ret
xor
adc
test
es
sub
rorl
jmp
mov
pushl
repz
mov
xor
orb
iret
xor
mov
dec
mov
out
xor
sbb
or
pop
gs
jne
hlt
out
stos
jge
add
adc
je
cmc
imul
shl
in
sub
outsl
out
aad
xor
imul
out
jnp
jmp
wbinvd
xchg
es
lcall
in
pop
lods
adc
xor
push
pop
xor
js
push
pop
pextrw
pushf
shrb
and
xchg
mov
or
sbb
dec
jmp
sbb
sbb
mov
cmp
xor
in
dec
cs
jns
push
mov
mov
pop
jne
and
pop
out
add
into
mov
mov
jmp
cmpsb
or
movsb
jo
sbb
hlt
inc
xor
mov
fdivrl
outsb
mov
clc
cmp
mull
sub
sbb
jp
xchg
mov
in
jae
xchg
sbb
xchg
js
jg
int3
je
jb
repz
mov
adc
or
sbb
ret
jns
and
ret
mov
les
push
mov
loop
js
adc
jecxz
idiv
data16
push
push
test
cmp
mov
mov
xchg
push
push
push
call
adc
pop
sti
add
popa
xchg
mov
jge
fucom
jb
mov
lds
pop
push
fidivl
xchg
and
inc
dec
push
cmpb
out
jno
cmc
lea
mov
movb
sahf
ljmp
in
xchg
insl
aam
into
add
loop
mov
cltd
fstps
mov
pop
sub
aam
lret
ljmp
push
icebp
mov
cmp
out
mov
jge
push
aam
and
dec
jnp
inc
js
divb
push
adc
das
mov
sub
in
push
scas
int
sub
mov
sub
ret
shll
xor
dec
sub
jge
push
mov
jmp
mov
sbb
cmp
xchg
add
out
and
inc
dec
addr16
jae
fnsave
loopne
in
or
mov
cmp
mov
and
push
lods
loope
dec
push
out
jne
int3
fbld
mov
ljmp
in
mov
and
mov
les
stc
les
mov
cmc
sbb
lea
mov
scas
xchg
cmp
popa
cmpsb
stos
in
sti
daa
adc
jmp
jo
jecxz
xchg
clc
or
mov
dec
jmp
sub
inc
add
sbb
push
daa
mov
loopne
adc
dec
int3
data16
icebp
xor
ret
repnz
mov
xchg
dec
fsub
mov
gs
aad
out
jno
jb
jle
test
rol
call
xor
ficoml
lods
mov
hlt
or
mov
mov
cmp
xor
xchg
mov
pop
xchg
pop
mov
test
inc
cmp
cli
jp
pop
and
inc
in
pop
mov
sbb
mov
jno
add
mov
jecxz
adc
add
stc
inc
xchg
ja
arpl
jno
add
rorl
stc
cmp
jmp
mov
es
aad
sbbb
mov
and
rolb
pop
push
sbb
sub
jg
cli
cmp
push
sbb
into
xor
push
loope
jae
pop
mov
call
push
cli
xor
mov
dec
scas
adc
push
stos
add
cmp
ret
cmp
dec
sarl
iret
sbb
icebp
shlb
cmp
cmpsl
mov
push
pop
dec
jne
inc
cmpsl
mov
sub
mov
mov
dec
sub
xchg
add
mov
xchg
xor
sbb
out
rcr
mov
mov
mov
ud2
icebp
testb
rcll
xor
test
jbe
jecxz
pop
daa
shll
loop
jge
mov
out
je
ljmp
pop
sbb
push
cmp
fs
mov
dec
in
data16
fnsave
mov
dec
adc
addl
shrl
rolb
jo
mov
sqrtps
mov
mov
adc
mov
cmc
and
pop
fadds
push
pop
test
xchg
xchg
sub
iret
bound
mov
dec
pop
xchg
xor
jno
call
xor
insl
lods
push
and
in
cmp
std
xor
jp
movsb
out
cwtl
sub
mov
pop
cwtl
lock
and
push
pop
cmp
cmpsb
pop
mov
sub
lcall
xchg
mov
fs
scas
xlat
aas
out
mov
dec
jmp
sbb
insb
mov
dec
aaa
or
mov
sbb
mov
dec
aaa
or
mov
pxor
icebp
jnp
mov
dec
push
insb
aas
jne
lahf
repz
inc
push
test
ss
xchg
fstl
stc
jnp
push
jo
fsubl
cmp
mov
mov
ja
notb
mov
fists
dec
in
js
jge
push
push
lret
sub
mov
and
and
mov
in
jl
adc
iret
imul
out
je
outsl
call
dec
imul
into
add
push
fistl
mov
lcall
or
arpl
cmpsb
jns
add
add
aad
stc
fs
sbb
ss
movsl
push
mov
fwait
shrl
push
inc
dec
sbb
mov
push
adc
sbb
xor
je
pop
mov
test
mov
mov
xlat
inc
jg
mov
mov
lret
idivl
mov
or
xlat
xchg
in
or
test
xchg
xchg
rolb
xlat
xchg
push
stos
add
mov
or
insl
js
lahf
xchg
mov
out
xchg
cli
add
bound
out
push
test
loopne
out
into
mov
mov
leave
adc
adc
cwtl
icebp
cltd
mov
xchg
adc
add
inc
push
fptan
std
sti
add
adc
loop
xchg
out
ja
xchg
pop
sbb
mov
jle
mov
cmp
in
or
push
add
das
and
or
gs
mov
pop
arpl
jp,pn
movsb
jmp
mov
lea
adc
pop
dec
ficompl
mov
sub
mov
mov
mov
insl
dec
sub
mov
or
xchg
shll
cld
adc
js
les
jne
jl
inc
test
call
lods
pop
lods
jae
daa
outsl
xchg
movsl
or
icebp
push
or
or
push
aas
adc
sarl
jle
mov
aas
cld
call
push
mov
jmp
test
or
in
jp
cli
lahf
cmpsb
and
pusha
xchg
cli
jmp
jg
clc
daa
adc
jnp
sbb
jae
xchg
in
inc
test
lret
rcrl
mov
cmpsb
xor
pop
fdivr
insb
lods
mov
sbb
pop
cmpsb
lret
jle
xchg
push
out
jo
jns
mov
test
mov
mov
jecxz
pop
dec
in
into
dec
and
add
adc
xchg
add
fisubl
dec
jae
cmc
fmul
sub
push
jmp
out
xor
push
jle
jle
sbb
ret
sahf
shlb
and
inc
sbb
psadbw
xchg
inc
ret
mov
daa
mov
pop
into
sahf
icebp
mov
fwait
xor
jae
int
pop
scas
pop
dec
pop
lock
out
push
pop
in
in
fiadds
test
pop
or
cmp
xor
or
inc
jmp
cs
xchg
hlt
xchg
lret
les
ja
shll
testb
pop
test
das
clc
xchg
or
jecxz
jmp
inc
sbb
mov
push
fisttpl
dec
sbb
adc
cwtl
adc
mov
mov
pminsw
fcoml
insl
push
adc
leave
mov
scas
in
lcall
mov
insl
push
add
xchg
ficoms
cltd
or
mov
inc
push
xor
pop
pushf
push
mov
mov
movb
test
lods
clc
sbb
cmpsl
xchg
imul
hlt
popf
mov
sub
ljmp
mov
cmpsl
cmpsl
call
inc
inc
and
and
xorb
xchg
push
jg
ds
push
and
cmpsl
mov
and
sbb
mov
popf
jo
rcrl
pop
js
pop
repz
cmp
or
cmp
jl
xchg
mov
cmpsb
mov
jmp
lret
jae
je
lahf
les
mov
pop
test
mov
lret
cmp
neg
xchg
mov
add
in
popa
jb
popf
lea
push
std
int3
cltd
push
xchg
jnp
cmp
das
mov
xchg
lret
xchg
cmp
pusha
mov
shll
push
fcompl
push
loope
jmp
jo,pt
addr16
sbb
data16
rorb
aam
sub
fucomp
mov
adc
mov
ss
mov
jecxz
cli
add
inc
sbb
sbb
cmp
hlt
pop
in
lock
sbb
mov
push
dec
adc
push
push
inc
dec
sbb
insl
adc
lret
out
sahf
dec
lahf
mov
mov
stc
std
xchg
inc
arpl
icebp
sti
inc
mov
push
xchg
jmp
push
jle
adc
dec
xor
ficoms
lods
call
mov
adc
mov
push
movsl
decb
or
sti
xor
pop
das
mov
dec
jno
add
ror
iret
ret
sub
test
cli
outsb
movl
pop
cmp
mov
popf
aad
xchg
in
add
cld
shlb
adc
sarb
cld
out
lea
cmpsb
cltd
xchg
jb
add
cld
dec
sbb
leave
jnp
push
sbb
pushf
je
mov
out
std
lds
xchg
imulb
out
pop
sub
loop
cmp
inc
in
rorb
cmp
pop
scas
sbb
or
cmp
mov
add
sbb
icebp
push
pop
repnz
push
pop
fdivr
lods
lods
jae
inc
dec
loope
jae
push
and
cmp
in
xchg
xor
scas
test
lcall
and
jne
andl
mov
adc
aam
sub
in
push
push
sub
dec
push
jmp
hlt
adc
mov
sub
fucomi
loope
outsb
shl
call
mov
stos
je
cmp
imul
fdivs
add
in
stos
mov
enter
cmp
repz
xor
out
mov
mov
push
movsl
pop
cmc
jg
repz
rorl
out
and
loope
push
adc
push
sti
mov
and
jb
insb
je
bound
not
and
inc
into
inc
cld
xor
lods
sub
xor
ret
mov
dec
pop
gs
inc
mov
sti
je
inc
imul
inc
repz
cmp
leave
inc
mov
xchg
and
test
sub
mov
add
add
out
je
adc
mov
inc
jp
clc
lret
jecxz,pt
mov
fdivs
lods
mov
sahf
xchg
and
insb
aam
in
dec
cmp
adc
je
cmp
pop
js
imul
shl
in
arpl
shl
outsb
mov
adc
testb
and
lds
mov
mov
std
data16
mov
push
push
imul
jno
aas
mov
mov
mov
cmpsb
inc
imul
push
lret
mov
dec
or
add
rcrb
stos
addr16
fsubl
push
jb
jge
rcl
pop
leave
scas
push
jl
pop
pop
lret
cld
das
mov
out
push
mov
jge
dec
or
std
scas
mov
lahf
add
cmp
add
push
jae
mov
mov
lret
lods
int3
dec
aad
push
push
lods
jle
push
mov
sub
adc
pop
mov
out
stos
and
xchg
xor
dec
jg
gs
xchg
add
mov
dec
aad
and
xchg
xor
and
mov
sub
cmp
leave
sti
hlt
mov
call
cmp
pushf
and
add
ror
cmp
sti
popf
pop
jno
jno
mov
adc
ljmp
mov
mov
iret
inc
addb
nop
data16
mov
ja
repz
lcall
jb
sti
mov
dec
popf
in
adc
das
push
pop
lahf
jmp
fidivrl
enter
and
and
xchg
sbb
pushl
dec
and
shll
add
jns
arpl
jg
dec
jb
or
jl
daa
fidivs
iret
lods
mov
mov
cmp
or
test
aad
mov
and
shlb
inc
idiv
dec
mov
jp
ffreep
sub
jbe
dec
jnp
outsl
push
jle
push
or
sahf
mov
inc
mov
adc
ja
lret
add
jbe
ret
push
std
ficoms
mov
xor
pop
insb
inc
into
inc
or
fdivs
subl
dec
cwtl
ja
or
xor
loopne,pn
and
jae
rcr
repnz
mov
dec
cmp
adcl
rcrb
xor
and
and
jbe
in
iret
movsl
adc
insl
shll
cwtl
test
aaa
stos
mov
cli
xchg
inc
or
xlat
jge
test
imul
frstor
mov
push
outsb
or
fs
add
mov
stos
fstps
cltd
cli
push
ja
push
xchg
out
jno
push
dec
out
jo
in
add
pop
mov
pop
mov
fisubs
push
xor
or
mov
mov
mov
sbb
movsb
adc
or
scas
cli
push
pop
cld
xchg
fwait
dec
cmp
and
imul
pop
daa
pop
adc
lock
lahf
bound
and
mov
cmp
jae
das
jns
xor
out
cmpl
pusha
mov
cmp
outsb
inc
xor
add
pop
pusha
gs
and
xchg
dec
rorb
pop
add
mov
ret
mov
sti
push
pop
decl
mov
daa
xchg
aaa
pushf
adc
mov
jmp
inc
mov
sbb
cmp
or
outsb
filds
bound
push
loope
fdivrl
push
and
sbb
dec
and
aaa
scas
add
filds
jne
arpl
xor
push
imul
push
mov
and
enter
in
faddp
push
call
pop
jb
sarb
mov
addr16
jle
push
popf
adc
repz
pop
into
fdivs
loopne
sub
sarl
push
ror
cltd
fs
loop
out
push
insb
cltd
imul
or
clc
pop
sub
imul
pushf
sub
cmp
sbb
stos
inc
ja
test
addr16
push
and
jg
push
and
notb
dec
jmp
cwtl
push
sbb
insb
call
loop
push
mov
sub
rcrb
cmp
popf
lock
and
test
xchg
push
jp
jmp
or
jo
push
and
xchg
adc
mov
xlat
nop
fisubrl
dec
or
push
imul
orb
ss
and
sub
pop
jle
rclb
dec
scas
js
add
inc
mov
shlb
cmp
lcall
jmp
hlt
pop
scas
enter
push
push
or
sbb
xor
test
pop
jecxz
jb
dec
out
adc
mov
mov
pop
inc
push
sub
dec
or
fwait
xchg
xlat
icebp
lret
ss
adc
ss
fcomps
jge
jp
mov
pop
aaa
jnp
sbb
mov
push
cmp
pop
mov
jg
push
sbb
sbb
lret
sbb
xor
cmp
xor
inc
ljmp
or
repz
jl
rcr
pop
pusha
sub
sbb
inc
ljmp
into
lcall
xor
lcall
sbb
mov
xor
scas
js
dec
inc
mov
mov
in
or
mov
shll
mov
xor
nop
and
dec
into
mov
shrl
pop
addl
mov
es
or
push
jae
cmpb
cmp
cld
lods
pop
push
mov
dec
sbb
xchg
dec
xor
jg
jge
mov
xlat
jg
cld
bound
sub
sbb
push
shrl
xchg
mov
dec
mov
into
mov
xor
push
loope
xchg
repnz
imul
sub
inc
adc
add
pusha
xor
in
or
fwait
aas
addr16
sub
inc
sbb
dec
xchg
stos
jns
sub
shr
push
test
imul
xchg
mov
ljmp
mov
outsb
mov
cs
push
inc
addr16
jmp
clc
into
in
push
movsl
jl
ret
jmp
jns
mov
jae
addr16
push
jg
jb
lds
and
add
fcompl
test
fwait
loope
add
movsb
in
sub
pop
xor
incl
inc
aas
push
jo
and
aas
gs
data16
das
inc
add
pop
lcall
xchg
test
cmp
xor
das
adc
int3
es
in
test
dec
je
imul
jge
ds
mov
add
mov
push
sub
rclb
lahf
push
or
rolb
cli
sbb
stos
xchg
clc
mov
fistpll
aam
push
and
sub
mov
xchg
aaa
mov
xlat
jno
dec
dec
out
out
mov
push
adc
int
scas
cmpsb
and
mov
inc
test
sub
push
popa
rorl
or
bound
push
push
xchg
sbb
adc
mov
subb
cmp
and
sbb
mov
fdivs
test
jb
in
inc
inc
int
sbb
je
mov
in
out
cld
sahf
push
xchg
ficompl
adc
call
test
push
mov
add
movsb
push
ret
clc
adc
fildl
std
cmp
adc
je
sbb
rcrl
mov
pop
jp
add
sahf
dec
imul
sarb
pop
stc
pop
jle
popa
leave
jmp
mov
iret
sbb
jae
lret
daa
notl
sbb
inc
jno
mov
int3
popa
cwtl
std
out
or
and
sub
lods
dec
fidivrs
lcall
push
dec
nop
cmc
or
xchg
sub
xor
xchg
cmp
pop
decl
jae
fimull
or
popa
push
push
adc
in
or
andl
ret
inc
mov
add
aam
mov
adc
fldenv
mov
cmpl
push
arpl
inc
mov
outsb
cmpsb
xor
jbe
xchg
mov
mov
mov
cmc
nop
and
inc
adc
inc
pop
inc
pop
push
lods
sbb
test
cmp
es
mov
imul
fildl
mov
mov
jmp
cwtl
scas
popa
inc
sbb
jbe
and
cmpsl
inc
fsubrl
fwait
or
cmp
ja
xor
fs
inc
sbb
stc
aad
cmpsl
add
cmpsb
push
ret
push
jne
cmpsb
loop
jmp
mov
decb
mov
jge
cmp
out
ret
iret
mov
sbb
xchg
sbb
dec
jne
insb
pop
jno
mov
pop
bound
sahf
mov
xchg
fwait
mov
cmp
jbe
add
test
push
jae
dec
inc
pushf
mov
jp
loope
test
outsb
sbb
mov
das
bound
and
cli
pop
cmp
rol
push
int
inc
sub
shl
in
inc
aaa
add
inc
icebp
lea
jae
adc
adc
pop
fldenv
push
adc
popa
icebp
fcmovnb
sbb
nop
xchg
sbb
sub
xchg
mov
jne
push
popa
sbb
mov
mov
sub
outsl
popa
jne
mov
mov
ret
push
sub
xor
dec
sub
add
pusha
jne
push
xor
sub
fcmovnbe
pop
add
aad
sub
ja
lea
and
dec
mov
out
mov
jo
push
cmc
mov
mov
idiv
dec
jge
pop
push
xlat
cmp
dec
fdivrl
jo
xor
cmp
mov
cmp
loop
sbb
imul
ret
fiaddl
movsl
adc
aas
jp
push
mov
std
std
adc
cmp
dec
fildl
jl
and
divb
dec
xchg
mov
mov
gs
mov
or
popf
sub
mov
icebp
stc
and
les
add
loope
pop
pop
sarb
sub
sub
lods
and
in
ds
aam
dec
mov
in
cs
out
movsb
pop
and
mov
sub
pop
mov
test
dec
mov
sub
ss
adcl
stc
jp
add
cld
jle
sub
mov
mov
dec
int
lea
out
js
ret
xor
imul
loope
or
test
bound
repz
fidivrl
adc
xchg
aas
daa
fsubrs
jbe
adc
movsl
fwait
mov
pop
out
or
jae
or
out
mov
adc
pushf
sub
sub
in
shl
iret
outsl
xchg
mov
mov
stc
out
dec
cmpsl
xor
ja
add
mov
test
jnp
stc
mov
xor
orb
jp
rcl
daa
cmc
daa
xchg
in
aas
hlt
out
mov
xchg
dec
dec
sahf
xor
pop
loop
cli
pop
rolb
test
rorb
jns
out
pop
icebp
pop
xlat
enter
imul
ret
dec
add
fwait
test
xor
hlt
nop
vcvttps2dq
xor
rclb
popf
aaa
inc
and
andb
stc
xor
jp
lods
push
or
mov
xchg
add
jg
cld
repz
clc
addr16
push
popf
fs
push
add
add
pop
test
sbbb
mov
stos
xor
pop
out
nop
idivb
xor
sbb
mov
mulb
dec
lahf
loop
sbb
mov
push
mov
push
add
bound
aaa
add
and
mov
adc
mov
sbb
jns
iret
lods
sub
xor
bound
jp
pop
xchg
scas
lea
lcall
pop
fidivrl
xor
stc
cmp
cwtl
xor
fisttpll
push
xor
or
jnp
repz
sub
loop
loop
or
jbe
pop
popa
imul
jno
cmpsl
dec
imul
or
adc
xchg
mov
jle
imul
mov
add
out
sti
xchg
adc
xchg
clc
mov
data16
out
pop
mov
insb
adc
lret
in
inc
xchg
or
test
xchg
adc
aas
stos
out
aad
sti
into
notl
sbb
jb
mov
push
jmp
push
insl
nop
pop
jl
or
xchg
jno
pop
out
shrl
rol
pop
sbb
lea
xchg
xorl
addb
mov
add
sti
lcall
push
xlat
iret
mov
xor
test
movsb
push
ret
or
in
out
adc
mov
out
adc
lcall
push
jle
ror
aaa
and
aaa
xor
mov
mov
fldenv
mov
sub
iret
shlb
inc
xor
sarl
ss
or
movsb
push
scas
int3
test
out
loop,pt
repnz
insl
bnd
pop
sub
dec
inc
ja
sub
stc
rorl
dec
push
ja
xchg
ja
jno
call
out
inc
cmp
daa
cmpsb
mov
jne
mov
and
fwait
inc
cmp
pop
mov
shll
fisttps
mov
nopl
sbb
dec
xor
mov
xchg
pop
mov
and
pop
add
cmp
rcl
push
imul
and
push
lock
pushf
rolb
or
cmpsb
push
sti
xchg
adc
cmp
stos
mov
jecxz
test
jo
sbb
fwait
mov
pop
pop
adc
testb
push
adc
sub
sbb
mov
gs
cltd
fdivrl
jmp
mov
and
cmp
mov
ljmp
adcb
scas
inc
jecxz
in
cmp
stc
bound
ja
outsl
fwait
mov
add
xor
pop
push
std
cli
mov
adc
and
pop
and
or
push
fs
mov
stc
inc
mov
pop
repnz
xchg
pop
mov
jmp
or
mov
fwait
js
subb
sub
sub
int
das
sbb
sbb
addr16
dec
movsl
enter
mov
jb
mov
cmp
sarl
add
fistps
cmp
leave
sub
mov
jg
rcrb
aad
adc
fildl
pusha
jae
mov
out
outsb
dec
pop
cli
adc
pop
or
mov
dec
mov
mov
es
loopne
andb
stos
rcl
sbbb
or
int
cmp
jno
add
decb
mov
test
addr16
iret
dec
fs
pop
add
std
inc
mov
mov
lcall
sbb
js
mov
mov
add
sbb
push
in
push
mov
xor
outsb
ja
testl
pop
jmp
adc
call
and
fcomp
rcll
popf
popf
mov
xchg
stc
out
mov
sub
and
dec
dec
sbb
cmp
cmc
mov
sbb
stos
or
dec
dec
mov
aas
cmpsl
push
call
icebp
pop
cmp
jns
bound
sub
inc
mov
subl
add
pushf
iret
out
mov
add
push
push
aas
or
inc
cmp
out
cmp
mov
or
cmpsb
shll
popa
mov
pop
stc
push
lock
xor
push
int
mov
loop
cmp
pop
ret
into
in
fwait
stc
ss
mov
inc
repnz
std
ret
lea
push
xor
hlt
lahf
int
lahf
and
fcoms
call
jne
sbb
rol
jp
push
cli
adc
shl
or
and
mov
insb
shlb
dec
std
sbb
ljmp
dec
in
enter
jne
movsl
sub
rcrl
adc
xchg
push
rorl
outsl
xchg
sahf
js
and
test
push
lret
xor
jl
lcall
js
cld
sahf
jnp
xor
aad
push
pop
push
fstl
cmp
xchg
mov
fld
roll
sub
dec
scas
subl
fimull
daa
subb
push
cmpsb
insl
das
insb
sub
out
roll
or
jb
js
mov
pop
pop
xor
jmp
or
pop
push
das
fstpt
adc
leave
arpl
inc
int
push
addl
test
hlt
and
push
xor
adc
jg
pop
les
and
scas
inc
fldenv
add
rcrb
sbb
adc
jge
jo
imul
pop
pop
loope
ss
std
outsl
sbb
dec
outsb
jg
inc
sbb
push
xor
push
add
mov
lds
clc
pop
icebp
xor
push
testl
test
sbb
mov
popf
das
emms
xor
xchg
test
cmp
jg
xchg
mov
jns
enter
jecxz
pop
fisubrl
add
or
sub
out
push
in
inc
cltd
outsl
int
pop
fcom
js
rorl
mov
cmp
loop
in
sarl
and
jmp
jo
std
or
mov
jno
inc
cmpsb
cmp
inc
xor
and
and
insl
push
inc
nop
cltd
mov
mov
movsb
pop
push
and
mov
jne
jbe
cld
xchg
daa
and
jp
or
mov
add
into
fisttpll
pop
popa
fsubrl
dec
in
or
xchg
jne
inc
test
mov
cmp
iret
iret
les
in
jmp
jmp
imul
shlb
mov
lock
test
ss
jmp
xchg
je
and
cli
int3
clc
jmp
fisttps
out
jmp
mov
add
std
lahf
mov
hlt
daa
jmp
in
xor
aad
mov
in
or
cmc
xchg
in
ror
xchg
cmc
in
fmull
sub
dec
mulb
sub
js
mov
mov
in
stc
adc
sbb
mov
adc
or
test
dec
xchg
int3
jb
and
mov
sub
std
cmp
cltd
ljmp
mov
sub
jge
shrl
shll
sbb
outsl
lahf
mov
arpl
rclb
mov
mov
sub
xor
mov
jecxz
cmc
shrl
push
insb
out
mov
inc
call
push
jno
sbbl
aaa
popa
aam
icebp
repnz
sbb
xlat
or
outsb
dec
pushf
lods
mov
cmp
mov
idivl
xchg
adc
fnsave
xchg
lock
mov
or
and
cmp
int3
adc
cwtl
out
add
sbb
inc
push
repz
ret
add
aaa
lret
sysexit
bound
xor
popa
adc
push
jae
sbb
idivb
adc
inc
mov
in
mov
inc
inc
push
or
call
and
jae
popl
in
rcll
popa
out
mov
push
fucomp
sti
fs
outsl
fsubs
outsb
mov
inc
dec
les
jmp
adc
inc
xor
in
nop
fistpll
inc
fidivs
mov
xor
mov
and
dec
test
sub
arpl
mov
pop
outsl
bound
add
loope
mov
and
dec
lea
push
mov
cwtl
add
dec
test
rol
inc
dec
stc
int
iret
sub
std
sarl
fcomps
std
push
sbb
push
aas
cmp
repz
fs
je
sbb
pop
scas
push
jno
pop
xor
js
ss
or
jnp
adc
dec
shrl
loop
and
fstps
imul
bound
jp
pop
mov
fiaddl
sarl
sbb
adc
cmpl
into
test
cld
test
pushf
sbb
and
sbb
imul
and
out
dec
inc
sar
inc
in
das
leave
add
xor
aad
and
add
repnz
insl
ljmp
in
aam
imul
or
inc
xchg
rol
inc
dec
or
lcall
test
xor
rcr
outsl
shlb
imul
and
orb
mov
loope
cs
xchg
adc
scas
ficompl
jne
popa
jno
insl
fidivrl
nop
jg
in
cmc
int3
mov
inc
push
or
xlat
mov
jecxz
lret
cmp
inc
sub
sarl
xchg
pop
mov
or
scas
push
jns
jle
repnz
cmp
cmp
cmp
mov
aaa
jle
aas
cmp
mov
stos
insl
cltd
call
les
sub
sbb
std
inc
xor
push
les
rorl
leave
push
jl
pop
out
test
andb
pusha
inc
push
cltd
movsb
lcall
push
mov
into
fimull
test
fildl
pop
push
push
lret
pop
xchg
lcall
add
push
scas
dec
inc
addr16
dec
adc
nop
xchg
divb
in
stos
pop
and
mov
lahf
push
jmp
and
aam
cmpsb
inc
insb
sbbb
push
into
out
popa
add
pop
jp
scas
cmpsb
out
dec
jb
out
cmp
ret
hlt
pushf
push
mov
int3
rcll
push
cmp
ss
mov
mov
jae
dec
or
cmp
aaa
outsb
bound
push
out
test
sbb
and
push
pop
fwait
or
push
push
fs
or
lods
out
mov
jg
lds
xor
cltd
loopne
and
sub
push
imul
mov
lea
js
adc
jo
mov
loop
mov
fsubrp
into
scas
ljmp
mov
negb
lret
repnz
sbbb
decl
int
nop
inc
test
and
inc
lret
mov
outsb
adc
popf
cmp
jmp
add
xor
shl
fldl
mov
or
jge
ficoms
fsubrs
aam
sbb
scas
mov
pop
mov
jnp
out
sub
mov
add
pop
sub
inc
jp
daa
pop
inc
test
inc
int3
add
ljmp
mov
lea
push
xchg
testl
xor
fwait
jns
mov
xchg
iret
mov
movsl
pop
jp
inc
icebp
inc
movsl
cmp
int
or
mov
sub
scas
adc
cld
outsl
loopne
push
lea
nop
sbb
jae
test
xchg
call
mov
mov
mov
adc
xchg
sub
jnp
pop
out
push
mov
mov
rorl
scas
xchg
das
cs
dec
dec
adc
fmull
push
dec
aaa
sub
xlat
jno
jmp
dec
pusha
sub
push
inc
mov
jg
jge
sub
mov
jno
push
int
mov
push
and
mov
cmc
imul
adc
sti
out
sahf
push
pop
mov
leave
mov
pop
or
or
jbe
ss
sarl
iret
adc
pop
adc
in
dec
jge
xchg
xchg
mov
inc
sbb
xor
rolb
into
imul
push
sti
out
add
sahf
push
xor
xchg
add
aaa
or
add
ret
or
mov
gs
jl
dec
aas
xor
mov
cli
mov
pop
hlt
add
lea
rol
mov
push
int
not
mov
es
data16
cmp
cmpb
or
roll
cli
push
adc
jnp
jne
sbb
dec
jns
xchg
cmp
cmp
ds
mov
ds
inc
js
push
push
jns
mov
pop
sub
mov
inc
data16
push
cmp
push
aam
clc
aas
arpl
mov
pop
test
push
jl
ja,pn
add
push
jl
push
scas
jnp
and
int
cmc
inc
cld
aad
dec
dec
lret
mov
out
jmp
jae
sbb
jo
fwait
pop
or
add
dec
fsubs
push
dec
cmpsb
adc
test
dec
mov
sbb
fst
sbb
add
aas
pop
fsubs
xchg
ret
dec
les
in
sub
or
add
fistpl
test
loope
andl
lret
add
loopne
sbb
dec
aad
add
xchg
push
clc
ret
pushf
loop
cwtl
lds
inc
xor
aam
bound
ret
shrb
dec
dec
in
out
sbb
push
xchg
sbb
shl
sbb
pop
adc
adc
cmp
inc
por
xchg
lret
push
jg
pop
cmp
rorl
nop
jb
sub
jae
insl
sub
and
loopne
adc
cmp
mov
pop
bound
dec
shlb
inc
pop
cwtl
dec
inc
mov
cld
dec
cltd
or
add
ret
js
test
pop
sbb
test
inc
inc
dec
sub
imul
psubb
ret
or
jo
loope
sbb
cwtl
cmpl
leave
cmpsb
out
push
addr16
mov
mov
imul
ret
push
lea
mov
imul
and
frstor
out
mov
cwtl
mov
or
pop
sbb
cmp
push
inc
pop
sub
je
mov
add
sbb
rorb
in
outsb
xorb
movl
dec
sub
cltd
outsb
pop
xor
mov
rolb
fstp
loope
mov
inc
aam
inc
stc
mov
push
repz
adc
sub
adc
cmp
pop
jge
repnz
pop
push
mov
scas
into
mov
lret
lret
scas
mov
push
inc
in
addr16
push
push
sti
or
ja
add
and
xchg
lea
jp
lds
pop
xlat
adc
jb
popa
xor
xor
aad
ret
xchg
aas
mov
stc
dec
test
cmp
pop
arpl
ljmp
fistpl
pusha
jb
sbb
es
mov
sbb
scas
xor
scas
mov
lds
fildll
lret
lock
sub
and
xor
packuswb
push
insb
icebp
mov
je
push
xchg
or
imul
dec
and
mov
mov
xor
popf
jmp
clc
push
and
pop
mov
nop
repz
mov
pop
adc
sarb
outsb
adc
xor
imul
aaa
cld
insl
push
imul
sbb
mov
xchg
adc
fisubrl
add
outsb
outsl
and
mov
aam
xchg
js
jnp
out
js
mov
mov
fisubs
cli
dec
filds
mov
xchg
scas
test
mov
cmpl
and
outsb
and
test
ja
fmull
rorl
sbb
cwtl
dec
sbb
movsl
inc
xchg
daa
inc
aad
movsl
sti
pusha
arpl
fstpt
xlat
push
fs
je
push
mov
testl
dec
add
xchg
add
pop
imul
xor
dec
sbb
xor
out
les
rorb
addb
call
sub
xchg
idivb
mov
push
and
pop
xchg
sbb
push
call
xchg
jmp
aam
cmp
fisttpll
push
adc
xor
add
sbb
aas
mov
out
aam
adc
pop
push
leave
add
loope
mov
dec
lahf
mov
rorb
adc
por
inc
inc
repz
fimuls
lcall
arpl
jae
cli
rol
int3
icebp
cmpsb
push
cmp
daa
dec
daa
cmpsb
cmp
and
dec
cwtl
aad
bound
pop
inc
into
insb
fdivs
lret
cs
addr16
call
mov
sbb
mov
stc
push
dec
lock
negl
or
in
push
lret
pop
popf
mov
and
dec
js
and
insl
int3
inc
add
push
inc
movsb
mov
ficoms
push
loope
add
jecxz
popa
ficompl
jg
jbe
mov
aaa
cmp
dec
leave
in
aaa
jg
dec
in
xor
inc
jmp
cltd
lea
add
inc
sahf
fdivr
pop
rcr
sub
ret
cmp
mov
jl
clc
jge
in
xchg
sbb
jb
int
pop
and
mov
js
jl
in
pushf
sub
add
lcall
lods
rcr
scas
dec
xchg
add
lahf
adc
ja
stos
hlt
addl
mov
mov
adc
add
dec
dec
dec
or
dec
stos
add
push
pop
mov
fwait
xor
icebp
xlat
mov
pop
rolb
ja
mov
push
mov
xchg
ret
mul
cwtl
inc
gs
mov
stc
rcr
or
inc
test
cmp
push
popa
push
mov
push
mov
arpl
adc
inc
sbb
add
shl
inc
mov
cld
add
jp
jbe
push
hlt
xchg
leave
imul
inc
mov
lahf
out
in
add
add
dec
out
pop
push
cmpsb
jmp
bound
or
inc
xchg
out
and
das
shlb
mov
sub
ljmp
mov
sti
push
ret
jmp
call
fs
xchg
int3
mov
push
in
mov
mov
sbb
pop
jb
addr16
icebp
hlt
in
mov
sub
gs
mov
clc
lock
sbb
xchg
ss
out
andl
lret
es
adc
in
pop
mov
lret
stos
ja
mov
push
cmpsb
pushl
pop
ja
sbb
sub
pop
or
jae
jns
or
test
int
jb
adc
xlat
vmovq
out
jne
push
sub
sbb
clc
jnp
jp
push
xchg
ss
ret
jp
cmp
mov
mov
je
pusha
cmp
xor
subl
adc
inc
fmull
and
jne
inc
push
cmp
mov
aaa
adc
jmp
gs
inc
sahf
insb
jg
iretw
xchg
inc
cmp
shlb
scas
mov
mov
adc
pop
cmp
and
fists
mov
xchg
dec
ffreep
jle
and
insl
mov
addr16
adc
mov
xchg
mov
imul
add
into
sub
rclb
andl
jle
push
insb
xchg
xor
inc
xchg
jl
int3
xlat
pop
scas
and
clc
daa
mov
in
imul
lcall
test
cmp
xor
scas
scas
mov
imul
push
out
insb
repz
enter
pop
and
lcall
sbb
or
push
pop
pop
xchg
push
jo
int3
dec
popf
scas
cwtl
std
lods
scas
sub
shll
adc
lock
lea
test
mov
stc
into
jnp
shrl
test
adc
mov
cwtl
jecxz
add
popf
test
sbb
inc
sarl
mov
mov
pop
cmp
adc
pushf
dec
push
inc
pusha
or
ror
aad
rcrl
add
or
pop
adc
cltd
test
gs
aas
cmc
push
pop
addr16
pop
mov
mov
pop
pop
pop
in
ret
cli
and
inc
jle
dec
xchg
jne
mov
in
stc
fildl
mov
dec
fwait
or
cmpsb
sbb
adc
mov
int
mov
fdivrl
scas
shll
sahf
jno
mov
xor
cmpsb
outsb
sbb
mov
and
cmc
mov
jp
int
loopne
sbb
gs
or
and
pop
aam
inc
xor
inc
ja
inc
mov
push
fprem1
dec
ret
aaa
stos
adc
daa
sahf
push
mov
xchg
adc
mov
les
lock
iret
movsb
adc
add
test
jne
mov
pushl
fwait
test
pop
cmp
cmp
xor
mov
jecxz
dec
orl
jmp
nop
sbb
repnz
aaa
loopne
xor
cmpsl
sub
stc
mov
pop
test
clc
and
fbld
jl
jl
pop
sti
out
aad
fildll
push
cmp
push
jbe
mov
sbb
repnz
lret
dec
pusha
jnp
popa
jnp
out
pop
jo
test
push
das
or
sbb
hlt
daa
mov
push
cmpsb
mov
out
xlat
xchg
sub
hlt
inc
popf
jno
fistl
leave
aam
out
xchg
movntps
cmc
xor
jl
rcrb
faddl
fnstenv
ret
int
rol
pop
jl
jl
inc
mov
inc
in
cltd
icebp
lret
lds
mov
mov
adcb
mov
mov
push
lea
xor
pop
sbb
xchg
notb
popf
nopl
adc
jmp
push
aas
ret
sbb
sub
cmp
and
enter
sahf
subl
or
or
pop
sbbb
inc
push
out
mov
std
cmp
or
sbb
lods
out
mov
sbb
pusha
mov
addr16
jmp
mov
xor
insl
adc
or
sub
and
fnstsw
push
icebp
test
sub
popa
xchg
int3
jb
rclb
stc
inc
call
cmpsb
aaa
xchg
push
subb
shrl
das
shr
dec
push
roll
addr16
pop
leave
sahf
stos
daa
mov
jbe
ljmp
fcompl
add
pop
sub
lret
test
inc
push
sarl
ds
lock
push
adc
pop
les
fsubs
sub
mov
stos
add
in
pop
jmp
mov
mov
rcl
jmp
dec
jbe
aas
xchg
bound
lret
out
dec
jmp
out
ljmp
fsub
cmpsl
lods
xlat
adc
ret
lret
sub
mov
or
or
mov
in
dec
push
fdivrs
loopne
xor
and
push
jno
or
adc
xchg
and
sbb
mov
dec
jbe
frstor
pusha
mov
mov
xchg
xchg
xor
fisubl
or
dec
mov
mov
jp
mov
fimull
aaa
jle
adc
ficoml
sahf
sub
ss
and
mov
or
inc
sub
pop
jns
dec
or
push
push
scas
js
xorl
into
inc
add
jmp
push
dec
sbb
jp
sbb
mov
mov
jb
iret
fildll
pop
add
mov
mov
outsb
jge
dec
and
and
or
jns
sub
and
pop
sub
insl
add
arpl
aaa
popf
test
sub
xchg
popa
jecxz
daa
xchg
sbb
cmp
out
pop
lret
test
or
outsl
pop
gs
popf
sbb
cmp
fsubs
or
in
jns
push
add
in
call
or
cmp
aas
jne
stos
cmc
clc
mov
dec
into
call
and
jmp
sarb
adc
pop
push
adc
lock
add
adc
and
sbb
adc
pushf
inc
jo
xor
mov
mov
outsb
jnp
push
cmp
cwtl
out
pop
adc
fs
push
add
dec
or
mov
xchg
mov
mov
rclb
xorl
ret
arpl
jle
loopne
push
pop
mov
pop
fxch
mov
jmp
adc
mov
xchg
rcrl
xor
pop
push
pop
adc
sbb
mov
mov
xchg
scas
ret
push
out
call
femms
sarb
mov
incl
repz
sbb
ret
loope
loope
test
and
inc
sub
xchg
movsb
out
ret
scas
pop
xlat
aam
incl
jg
subl
imul
sti
rcl
into
lret
cltd
jnp
insl
cld
call
divb
xchg
xor
cmp
xor
cwtl
es
cmp
xor
jg
shrb
ss
lea
mov
sub
or
jne
cmc
dec
or
into
shll
jne
sub
xlat
mov
push
adc
pop
mov
mov
push
sbb
or
jne
hlt
imul
jg
sub
aas
fwait
pop
ror
bound
addr16
insl
mov
fisttpll
sbb
inc
jae
xchg
ret
movsb
mov
mov
and
jmp
pop
and
push
jo
mov
rclb
mov
not
popf
shrl
sub
xor
sub
rolb
push
pop
bound
jmp
sub
iret
mov
sbb
lret
xor
in
lret
xor
imul
repnz
hlt
dec
test
xor
test
adc
mov
arpl
pop
push
out
movsl
mov
xor
push
cli
adc
movsl
cmpsl
leave
fisubrs
testl
int
stos
sarl
scas
jns
add
sbb
pop
xor
pop
dec
pop
mov
aaa
push
push
jl
pop
or
lret
cmp
es
cmp
pushf
cmp
ja
jp
loop
mov
ficoml
es
movsl
shll
dec
mov
sti
scas
and
push
shl
lock
adc
adc
enter
bound
cld
mov
in
cld
push
or
lea
and
je
inc
mov
push
pop
xchg
push
or
mov
adc
dec
sub
int3
test
jmp
pop
jle
add
sub
jnp
add
adc
fbstp
inc
sbb
mov
call
inc
movlps
add
pop
push
jne
jle,pn
test
cmp
mov
aas
dec
adc
enter
ret
xor
fsts
push
push
mov
sti
sub
mov
inc
lock
jo
mov
xor
pusha
add
sbb
xorl
ss
jnp
mov
add
flds
add
lcall
scas
dec
aad
jb
or
mov
inc
pop
bound
mov
and
fs
in
add
loope
hlt
mov
loop
sti
pop
jbe
cs
jge
iret
cmp
enter
and
xor
lods
xchg
imul
scas
cmc
add
pop
dec
loopne
cltd
imul
push
cltd
orb
bound
testl
int3
js
lret
gs
inc
pop
dec
mov
cltd
aad
cmp
jbe
inc
out
cmpsl
loop
pop
push
sub
jmp
das
in
dec
scas
cmpsb
daa
je
fbstp
jnp
dec
push
adc
ret
xor
ret
mov
mov
xchg
inc
inc
xchg
mov
jns
xchg
xchg
cld
loop
or
cmpsl
sbb
sbb
pop
pusha
and
andb
aam
cs
xchg
adc
aam
lock
jmp
inc
je
outsb
orb
mov
jp
xor
xor
cmp
pop
scas
es
and
inc
and
movsl
sar
int3
or
mov
outsl
out
stos
sub
jb
cwtl
enter
or
push
add
fsubl
add
rcl
mov
shll
nop
push
or
jae,pn
fiaddl
xchg
xchg
jmp
lahf
mov
jl
ficompl
addr16
mov
loope
inc
mov
fstpt
subl
in
mov
push
xchg
cmp
mov
pop
push
lock
hlt
add
ss
cmp
aas
loopne
pop
das
xlat
lret
pop
ja
sbb
sub
sbb
out
and
leave
lock
enter
lcall
push
loope
mov
fildll
cmp
push
xchg
xor
push
inc
jnp
cmp
sbb
mov
fidivs
push
ljmp
sbb
jo
fwait
shlb
pop
xchg
mov
mov
in
push
aad
rcr
loope
and
or
out
mov
in
push
and
jle
popf
test
xchg
cs
mov
rcrb
daa
clc
pop
testl
cmp
mov
loop
fistpll
sub
push
mov
xchg
mov
adc
push
test
pusha
or
jecxz
pop
divb
iret
or
push
mov
push
cmpsb
out
push
jge
xchg
mov
adcb
icebp
lock
sbb
ficompl
fwait
jecxz
mov
jmp
adc
movsl
mov
enter
rcrl
lret
ficomps
ljmp
mov
imul
lds
repnz
adc
push
imul
ret
jns
cmp
pop
jge
outsl
pusha
pusha
mov
aad
daa
jns
dec
inc
mov
ret
xorl
int
xchg
mov
roll
aaa
int3
push
jmp
sub
lods
cltd
sbb
jl
jle
fdivrl
or
inc
in
and
add
mov
mov
mov
sub
xor
pop
cmc
inc
mov
fwait
jae
xchg
add
xchg
popa
repz
in
mov
mov
ja
push
pop
js
sarb
mull
fstps
mov
mov
mov
rcrb
inc
mov
ljmp
sbb
roll
ljmp
pusha
push
dec
push
mov
outsl
movsb
xchg
cld
push
adc
ffree
push
jo
imulb
jmp
push
dec
sub
ret
and
jno
aas
lret
sbb
lods
mov
out
mov
mov
sbb
mov
add
or
hlt
icebp
pop
sbb
shlb
pop
sti
xchg
inc
setl
pop
je
and
out
lds
sub
ret
aas
cmp
in
push
loope
dec
cmp
xchg
jg
xchg
or
ret
sbb
ja
pop
sbb
inc
aaa
push
mov
cmp
pop
gs
push
stos
dec
adc
or
xchg
mov
push
mov
outsb
aam
and
ljmp
pop
js
lods
addr16
in
jne
pop
push
cwtl
leave
inc
sub
sbbl
out
pop
out
dec
repnz
xor
xor
fsts
adc
enter
jge
sbb
sub
mov
sbb
call
push
shl
push
cwtl
repnz
bound
subl
jge
sbb
jae
inc
jl
dec
sub
add
push
sarb
insl
push
mov
imull
addr16
lcall
pop
xchg
jl
divb
and
pop
push
arpl
sbb
fidivrl
sbb
scas
jecxz
and
je
in
push
ret
fisttpl
divb
sarb
pushf
ficoms
jg
dec
push
jo
xlat
jg
xor
imul
outsl
adc
pop
ret
test
xchg
ret
or
imul
push
vpand
and
xor
mov
aam
pop
cltd
jp
pop
jle
in
arpl
push
mov
and
test
repnz
dec
fwait
jbe
ja
int3
popa
dec
lods
iret
outsl
push
push
lock
add
jbe
mov
add
test
add
fimull
xor
cs
mov
cmp
xor
or
jbe
mov
repz
xor
enter
in
push
jmp
popa
shlb
xchg
ljmp
adc
inc
push
mov
stos
cmp
pop
jns
in
mov
stc
subb
mov
cmp
pop
or
push
fs
and
stos
inc
pusha
xor
out
test
sub
mov
xor
dec
hlt
xchg
arpl
pop
loopne
xchg
xchg
push
pop
jg
push
lock
sbb
in
movsl
popf
dec
pop
int3
xchg
fimuls
sbb
pusha
xchg
nop
xor
mov
mov
jecxz
imul
loopne
push
fwait
bound
lods
fidivs
sahf
data16
or
inc
pop
pusha
adc
aad
in
sub
add
inc
sub
dec
filds
sub
xchg
cltd
int3
push
hlt
jne
aaa
dec
repz
adc
mov
sbb
mov
mov
push
cwtl
cmp
insl
add
xchg
insl
bound
pop
push
inc
push
ja
pushl
mov
sbbl
bound
push
das
mov
jge
js
cli
scas
outsl
inc
jp
imul
popa
iret
mov
lods
adc
fidivrl
scas
pop
mov
mov
orb
pusha
and
jae
mov
xchg
xchg
inc
jne
push
lea
pop
inc
jbe
aas
aas
std
fldl
stos
push
pusha
mov
mov
xchg
push
mov
jp
xchg
sbb
rol
dec
mov
dec
or
push
scas
loopne
pop
pushf
jns
outsl
scas
fucomi
fsubrp
mov
stos
aaa
pop
clc
lds
cs
std
mov
ja
xchg
xor
negl
xchg
adc
addb
or
daa
xchg
inc
lock
adc
ss
lahf
cmpsl
dec
push
mov
mov
sub
push
mov
test
loopne
mov
fmuls
xor
int
insl
mov
jae
pop
and
inc
and
das
push
fbstp
xchg
cmpsl
ret
shrb
sub
inc
pop
or
es
shll
loop
arpl
in
mov
fists
xchg
xchg
mov
stos
ljmp
mov
mov
imul
movb
push
push
xor
cmpsb
xchg
xor
ljmp
mov
or
loop
fwait
adc
jmp
sbb
inc
jnp
stos
ja
pushf
lret
fs
loop
ret
xchg
out
xor
push
push
into
xor
mov
xchg
insl
mov
sub
cmc
or
ret
js
shll
ljmp
jp
nop
into
cmp
push
inc
mov
xchg
test
lahf
cmp
sub
divb
mov
fimuls
dec
test
adc
jecxz
cmp
push
scas
sub
mov
xchg
mov
mov
out
adc
scas
dec
or
mov
repnz
push
adc
popa
subb
mov
scas
int
scas
push
and
repz
pop
sbb
mov
cmp
xchg
jno
sub
jae
rol
mov
dec
mov
push
fnstcw
mov
xchg
je
mov
fs
inc
mov
inc
scas
mov
mov
sbb
jl
adc
dec
repz
shl
or
jnp
and
xchg
mov
aaa
pop
adc
vmaxsd
inc
nop
pop
fcomps
adc
pop
mov
dec
sahf
hlt
xor
mov
sub
movsb
pop
ja
mov
bound
mov
cmp
xchg
add
shrb
cmp
test
adc
xacquire
jbe
sahf
or
lcall
or
xrelease
mov
enter
mov
xor
mov
mov
int
cli
pop
pop
sbb
lret
jno
jbe
xchg
negl
xor
xchg
add
and
adcb
in
mov
imul
add
div
rcll
adc
jae
in
rorl
cld
andb
xor
repz
cwtl
fidivrs
popa
mov
and
or
ds
adc
push
push
mov
sbb
enter
mov
call
scas
int
cmp
add
or
and
fisubl
fs
jg
imul
mov
and
or
arpl
inc
fs
xchg
loop
adc
lds
insl
cmp
out
mov
ret
lea
pushf
outsb
inc
rcll
cli
dec
aad
mov
out
hlt
test
and
sub
dec
jmp
jmp
jo
jecxz
mov
rorl
aad
fdivs
lds
xor
pop
push
sbb
xor
stos
dec
sahf
ljmp
xchg
mov
lret
mov
mov
movsl
les
pop
cs
xchg
add
add
jne
sti
pop
pop
jge
out
xor
out
cmc
cmpsb
pop
insl
adcl
pop
jb
push
bound
add
adc
mov
insb
test
fsts
pop
and
sbb
bound
fsub
jae
xchg
add
lret
rclb
adc
add
mov
mov
mov
pop
add
repz
push
scas
dec
adc
pop
add
adc
sub
test
je
mov
push
push
dec
flds
clc
inc
cmp
xor
xchg
mov
add
pop
mov
cmp
inc
in
in
test
or
popf
shrl
pop
testl
clc
push
iret
fisubs
xchg
mov
sbb
and
cmp
jg
pop
push
mov
test
loope
inc
pop
cmp
or
in
cltd
dec
imul
cmp
inc
sub
and
xchg
dec
popa
gs
xchg
fidivs
xchg
mov
jge
push
sbb
test
aas
lea
out
loope
pushf
int
std
cltd
iret
cmp
xlat
cmpsb
xorl
jnp
pop
push
inc
std
lds
mov
fistpll
sbb
bound
jo
xchg
cmpsb
icebp
mov
mov
jnp
and
xor
jae
mov
lcall
push
mov
cmp
imul
pop
inc
xchg
dec
arpl
or
sub
push
rolb
fsts
adc
mov
sbb
jne
lahf
mov
aaa
inc
jns
pop
dec
xchg
xor
inc
jae
incl
cltd
pop
addl
fcmove
ss
fisubrl
mov
mov
xchg
loop
mov
arpl
arpl
push
mov
pop
inc
inc
in
and
insl
jmp
jb
push
xchg
out
daa
imul
add
mov
in
jecxz
icebp
push
inc
je
dec
clc
mov
stos
xchg
mov
inc
pop
fcoms
xor
shll
vcvtsi2sdl
jns
mov
pusha
mov
cmpsb
andb
and
imul
ja
test
dec
sub
clc
fmul
ret
out
push
push
jg
xchg
pop
xor
mov
ja
dec
jecxz
js
cmc
add
push
popf
arpl
push
cli
push
dec
testl
and
daa
cmp
add
cmp
mov
add
cwtl
out
lcall
fisubrs
sub
sub
add
shrb
inc
or
or
sub
popf
jp
repz
sub
cmp
int
ret
fwait
xchg
mov
test
ja
mov
arpl
hlt
ret
fsubl
imul
dec
imul
inc
pop
cltd
mov
sub
add
pushw
in
xchg
sub
fwait
mov
sbb
pop
inc
cli
incb
je
ds
sbb
cmp
lock
sbb
aaa
sub
int3
jnp
stos
xor
cmpsb
loope
inc
addb
cmp
pop
aaa
or
mov
mov
cmp
xor
push
frndint
add
scas
fidivrs
pop
jns,pn
mov
lock
test
jmp
add
mov
push
aaa
mov
xchg
dec
movsl
inc
leave
mov
hlt
cmc
pop
jae
mov
xor
popf
popa
ffreep
scas
mov
pop
icebp
jns
pop
cld
xor
cmp
outsb
cmpsb
gs
sbb
xor
sub
testl
cltd
adc
sub
std
dec
push
popa
into
sbb
in
adc
pushf
mov
dec
jno
out
popf
cmp
scas
mov
xchg
mov
mov
clc
adc
aam
imul
leave
fcoml
push
and
out
push
sub
mov
sub
sbb
cmp
inc
test
cs
mov
pusha
jb
push
sbb
push
or
add
pop
cmp
sbb
adc
rcll
inc
pushf
jne
test
mov
jle
iret
sti
ret
fdivr
cli
cli
mov
divb
out
cld
adc
xlat
inc
mov
pop
sahf
lods
iret
sahf
cmp
push
leave
mov
cmp
jno
and
jbe
loop
fcmove
aad
mov
mov
pop
ror
mov
add
xor
push
cmp
and
callw
adc
adc
loopne
push
mul
sbb
test
call
pop
adcb
ljmp
pop
cltd
test
loop
push
mov
test
cmp
test
js
enter
ja
cmc
imul
jne
and
push
lock
cli
push
mov
ret
dec
add
into
pusha
pop
and
inc
rep
into
push
inc
insb
sbb
lret
imul
stos
add
lahf
sub
add
cmc
popf
fcoms
movsb
pusha
incb
lods
sub
enter
aam
mov
pop
jno
mov
mov
sub
fidivrl
inc
call
sub
mov
xchg
repnz
xchg
inc
dec
inc
js
fadds
add
sbb
sti
test
pusha
inc
jb
adc
int
insl
outsl
jle
sti
or
and
lret
or
int
stc
add
push
andb
fnstenv
dec
ljmp
aas
hlt
shrb
lock
inc
jp
mov
xor
call
jb
add
pop
and
aaa
fstpt
enter
je
sub
mov
arpl
hlt
xchg
inc
push
xchg
out
xor
mov
mov
xchg
cli
js
or
ror
cltd
imul
pop
fs
mov
sub
push
and
push
test
pop
mov
cmp
xchg
imul
int
ret
addl
mov
pop
aaa
cld
pusha
pop
pop
test
loopne
jp
nop
push
movsl
movsb
aad
imul
jle
inc
xchg
add
stc
add
push
fcompp
rcll
pop
adc
jg
inc
sti
stos
fs
mov
ret
push
jle
or
jne
stos
aad
add
imul
mov
mov
shlb
sbb
push
jnp
dec
add
inc
pop
inc
rorl
push
pop
dec
inc
fidivrs
jmp
cwtl
leave
inc
xor
dec
mov
cmp
and
mov
test
pushf
inc
and
mov
jg
mov
jl
in
mov
pop
cmp
enter
xchg
js
ficompl
enter
xor
int3
enter
dec
or
in
add
pop
pop
add
mov
or
adc
mov
das
lock
sbb
mov
mov
cmp
xor
negl
push
loopne
sub
jl
fcoms
mov
or
test
and
dec
push
ret
rolb
or
mov
repz
mov
leave
push
mov
loopne
imul
je
pusha
pop
inc
addl
push
movhps
and
lahf
dec
xchg
fsubrl
mov
cmc
in
jns
push
jp
xor
jge
xorl
xor
push
std
pushl
and
jnp
xor
sub
loop
or
jne
out
popf
cmp
shl
sub
mov
push
retw
push
lock
insb
mov
clc
xchg
scas
or
adcl
sti
mov
out
loopne
js
or
sub
jns
cmpl
sub
divb
push
xchg
fistps
pop
mov
gs
mov
xchg
sub
push
inc
mov
stos
mov
shl
movsl
adc
cmp
adc
mov
iret
lods
dec
arpl
fwait
mov
pop
push
int
leave
dec
inc
stc
pushf
mov
push
mov
je
cmc
jnp
js
mov
data16
adc
xchg
or
rcl
inc
xor
mov
inc
sbb
pop
pop
push
je
xchg
lods
inc
fnstenv
idivb
arpl
adc
pusha
sahf
and
fld
mov
fs
sub
add
je
rcll
insb
jmp
mov
xor
call
insl
cmpsb
out
loope
pop
add
incl
or
mov
pop
lret
pop
iret
push
adc
and
or
in
mov
pop
jne
in
lret
pop
aad
jne
cmp
dec
add
fidivl
dec
fs
and
cmp
xlat
icebp
fidivl
adc
add
mov
rcrl
ja
stos
in
or
repz
and
cmp
adc
mov
mov
mov
or
mov
adc
pop
pop
inc
mov
and
sbb
das
dec
aad
cld
adc
sub
and
mov
mov
cmp
inc
pop
sahf
je
mov
mov
pushf
add
bound
subb
jmp
arpl
mov
push
jge,pt
xchg
xchg
cli
sub
fwait
pop
mov
push
lcall
sbb
lods
inc
pop
hlt
dec
push
sbb
mov
sti
dec
leave
ljmp
add
adc
push
sbbl
pushf
les
mov
aaa
test
frstor
jne
cmp
sub
dec
xchg
stos
rcll
or
out
and
daa
stos
jae
fnstenv
push
lods
jns
dec
insb
jl
hlt
mov
pop
stos
fs
fmull
cli
sti
clc
pop
jnp
pop
and
inc
mov
rorl
xor
xchg
mov
pop
xlat
sub
xor
xor
mov
in
repnz
daa
jno
xor
dec
jne
pusha
mov
pop
pop
mov
dec
or
or
adc
ret
push
inc
icebp
out
daa
sbb
jno
testb
test
xchg
enter
sahf
pop
gs
xchg
addl
adc
or
cmc
or
adc
fisubrs
cmc
arpl
jbe
jl
jb
cli
outsb
mull
xor
xchg
sub
icebp
bound
jp
call
testl
mov
inc
cwtl
les
dec
push
data16
xor
outsl
xchg
xchg
sahf
pop
pop
cmp
sub
jmp
jg
and
sbb
leave
in
ds
leave
rcrl
adc
push
aaa
aaa
jns
jo
or
inc
nop
and
add
inc
mov
mov
mov
fstpt
cmp
out
sti
aad
jb
push
sub
add
sub
and
jne
sti
sub
xor
xchg
cmc
fidivs
sub
ja
ret
sub
cli
rcrb
xor
mov
in
jno
sbb
mov
pushf
es
lahf
push
gs
fidivrl
push
movsl
in
mov
cmp
ja
repnz
in
sub
mov
aaa
sub
test
lods
push
les
scas
lahf
add
sbb
lcall
xor
lret
faddl
in
inc
mov
dec
lods
ss
xchg
or
clc
push
imul
adc
mov
mov
lret
test
cmp
add
jmp
sbb
inc
fsubp
sarl
jo
int3
lcall
xor
dec
dec
ds
push
mov
scas
xchg
adc
adc
mov
push
dec
ret
fdiv
ljmp
add
out
mov
add
imull
cmp
push
test
sarb
mov
mov
fnstenv
test
repnz
and
cmp
mov
in
push
xchg
xor
in
cli
loope
repz
mov
les
jno
xchg
jbe
or
jnp
clc
aas
pop
orl
xor
scas
sbb
sub
repz
mov
mov
mov
dec
imul
add
arpl
mov
sub
mov
ds
je
adc
jae
cmc
pop
leave
xchg
cmpb
or
sti
inc
aas
jg
ss
push
sbb
or
popa
mov
mov
jl
lea
popa
jecxz
enter
add
test
xchg
jne
push
dec
out
fimuls
fwait
les
out
ss
std
roll
cmp
fs
loope
orl
test
out
sahf
pop
sti
mov
cmc
movsl
lahf
sahf
fsubr
fldt
shll
jle
sub
mov
jb
insl
das
pusha
or
pop
mov
add
mov
loop
mov
bound
mov
popa
pop
loopne
test
pop
and
imul
and
pusha
fidivl
adc
les
dec
das
mov
movl
test
jbe
lahf
mov
mov
sahf
and
lds
pop
inc
mov
lcall
and
mov
cs
lock
xchg
popa
loop
inc
sbb
inc
inc
dec
imul
insb
xchg
pop
addr16
outsb
movsb
jge
js
inc
cmpl
js
or
pop
pusha
mov
pop
cmpsb
sbb
in
ljmp
and
dec
cmpsl
loop
sahf
push
jnp
lcall
cmp
fstps
mov
push
inc
std
xor
addr16
push
mov
mov
push
mov
cmp
pop
sub
int3
push
fs
pusha
lock
gs
unpckhps
int3
dec
or
pop
idivl
mov
popf
jl
jnp
test
out
lock
shll
mov
pusha
and
xchg
inc
push
xor
imul
sbb
or
xchg
mov
jmp
push
in
fdivrp
jl
add
pop
jb
cmp
adc
mov
jl
mov
dec
out
fidivs
cltd
sub
call
jmp
dec
xor
xlat
mov
sub
jecxz
mov
lods
std
pop
aas
mov
or
imul
pop
jle
loopne
xchg
jbe
scas
ss
out
push
adc
repz
sbb
adc
xchg
mov
jmp
or
jns
pop
enter
in
loopne
mov
sub
mov
inc
xor
out
movsl
shll
jmp
add
iret
out
out
ds
shr
imul
inc
repz
jno
bound
insb
pop
add
sbb
or
or
sti
cmpb
jno
aaa
outsb
adc
in
mov
cmp
xchg
ja
aaa
sbb
ja
clc
and
enter
lods
cmp
mov
lock
mov
aam
in
dec
rcll
punpcklwd
cmp
into
cld
lea
dec
xor
scas
rol
cmp
and
inc
cli
jp
cmpb
mov
and
cmpsb
adc
mov
dec
mov
push
sub
rcrl
dec
in
xlat
sbb
push
mov
mov
sti
inc
dec
jp
sub
sub
rcll
xor
inc
mov
aam
test
add
jp
xchg
cwtl
xor
test
mov
mov
jp
fucomi
jnp
loope
es
scas
push
sub
add
or
xor
xchg
pop
push
xor
or
adc
rclb
push
vpcmpgtb
outsb
fisubs
adc
lret
mov
cmp
idivl
dec
mov
fwait
sub
in
xchg
dec
xchg
or
sub
push
jl
push
mov
or
das
push
fisttpl
pusha
pop
ds
fwait
jnp
sbb
gs
call
sbb
call
sbb
xchg
outsl
fiaddl
repnz
repz
std
jge
mov
sub
js
pop
addr16
lea
mov
sub
push
lcall
xchg
dec
cwtl
call
out
mov
cmp
cmp
push
fs
inc
call
add
sub
pop
dec
shlb
mov
push
cmp
cmp
fsubrs
xorb
xchg
int
test
popf
daa
jg
outsl
sub
jge
in
or
cmp
jecxz
inc
xchg
lret
or
xchg
and
pushf
enter
repnz
test
ljmp
popa
and
shrb
scas
in
stos
neg
hlt
sub
les
jmp
js
fstps
mov
xlat
pop
mov
jmp
mov
mov
aas
rcr
insb
repz
test
mov
das
and
es
lcall
cld
test
ds
xlat
cmp
xor
sbb
icebp
mov
pusha
cmp
mov
mov
add
out
cltd
fdivrl
mov
xorl
jbe
je
and
mov
and
scas
shlb
mov
mov
add
push
iret
inc
jbe
imul
pmulhw
enter
lds
mov
or
push
imull
lods
movsb
pushf
ret
inc
xor
and
push
shrl
sub
jne
gs
add
out
fnsave
dec
jnp
push
lret
jg
fbstp
in
mov
inc
mov
inc
cmp
loope
gs
push
sti
xchg
xor
jns
loop
add
dec
pop
and
xor
hlt
in
imul
in
jbe
lahf
pop
fistps
les
dec
cs
mov
cmc
into
push
inc
jge
sbb
sub
mov
dec
scas
or
aaa
and
js
lods
in
push
sbb
push
cmp
jb
inc
ss
fisubl
nop
ss
outsb
jnp
push
inc
in
sub
into
lcall
cmpsl
in
popf
dec
add
int
iret
imul
jnp
mov
jno
pop
outsl
or
add
daa
cmp
das
sub
nop
fldl
out
mov
push
mov
and
inc
popf
sub
pop
adc
xlat
add
dec
loopne
hlt
lret
sbb
push
push
outsl
div
or
lock
and
dec
shrb
inc
negb
js
std
dec
clc
dec
or
test
dec
dec
or
imul
aam
push
and
insl
out
push
subb
test
sub
push
leave
lret
jns
out
imul
in
xchg
xlat
fstl
int3
test
xchg
movsb
xchg
inc
in
fidivs
add
test
xchg
jmp
xchg
pop
arpl
sahf
jbe
xor
out
in
mov
aam
jle
bound
stos
pop
cmp
mov
jecxz
imul
mov
pop
add
or
movsl
dec
sbb
mov
pop
jae
or
adc
sub
sbbb
cmc
push
sbb
adcl
xchg
stos
pop
xchg
test
ja
out
pop
xchg
lahf
mov
sub
stos
xorb
mov
xchg
test
fistpll
jg
scas
je
mov
jg
jle
test
jge
in
adc
mov
dec
dec
popa
cmp
mov
addl
in
test
push
push
inc
mov
into
inc
lahf
notl
data16
add
pop
outsl
je
fstps
in
lock
aas
out
outsb
imul
push
dec
sti
cmp
inc
pop
imul
sar
imul
jg
fists
imul
xor
fistps
cmc
scas
lods
mov
dec
out
hlt
jecxz
pop
cmp
bound
rcll
jns
sbb
push
mov
popa
insb
mov
and
xchg
mov
loopne
in
and
jecxz
insl
mov
mov
stos
sub
ljmp
pop
repnz
cmpsl
jl
in
cmpsb
loopne
mov
mov
mov
je
fwait
jno
dec
loop
jg
and
lods
cmpsl
mov
insl
adc
lods
js
imul
xchg
sub
cmp
ds
sbb
dec
adc
scas
leave
mov
pop
clc
ret
mov
jge
lds
mov
xchg
jl
lret
clc
gs
mov
flds
aam
idivl
mov
ljmp
dec
aas
mov
sub
lock
push
add
les
test
popf
cltd
dec
repz
imul
jmp
mov
pop
in
or
into
dec
cmp
jne
jp
notb
and
dec
jb
test
xchg
andb
dec
mov
jmp
push
inc
mov
cs
dec
test
iret
mov
les
adc
pushaw
imul
or
scas
lcall
dec
andl
dec
insl
or
lock
cld
lods
and
sbb
push
adc
call
movsb
cmp
ret
insb
sub
jb
cld
jae
fdivl
and
cld
sbb
shll
and
xchg
andl
pop
jp
push
inc
sbb
and
or
pusha
out
test
add
dec
sub
and
pop
mov
jnp
cmpsl
inc
outsl
outsb
or
pop
cmp
or
and
sbb
or
push
cmp
pop
sub
sbb
stos
mov
xchg
in
fadd
pop
mov
es
add
mov
xor
mov
pop
les
mov
xorb
cmpl
mov
in
popf
dec
inc
mov
jecxz
out
sub
fisubl
mov
push
mov
mov
fimull
les
lock
mov
rcr
cmpsb
lcall
mov
adc
stc
insl
or
repz
out
iret
push
mov
dec
int3
mov
push
fldt
mov
dec
jp
pop
hlt
adc
inc
inc
fadd
stos
jne
add
fimull
clc
adc
sbb
jg
int3
adc
cmc
jae
rcll
insl
dec
loope,pt
fldenv
cs
and
sbb
xchg
xor
jae
into
sub
cmp
xchg
outsl
or
jae
push
xchg
mov
xchg
xor
inc
bound
or
push
aas
cltd
push
movsl
mov
mov
mov
aad
loope
pushf
add
push
xchg
ret
jecxz
rclb
inc
stc
fists
xchg
pop
pop
imul
push
insb
pop
mov
repz
rorl
xchg
push
daa
push
les
jo
xor
mov
jecxz
push
cmp
adc
and
fwait
or
mov
lds
test
push
lret
cli
pop
mov
addr16
inc
test
mov
push
cmp
imul
jno
insl
hlt
adc
shr
cmp
jo
aaa
stos
lods
test
or
imul
mov
neg
adc
push
pusha
dec
pop
fwait
push
jge
subb
add
mov
mov
test
mov
jnp
inc
sub
sub
mov
push
out
xchg
shlb
xor
mov
aad
adc
int
cmpsl
pop
hlt
lcall
fs
jmp
les
repnz
cli
pop
ja
hlt
shll
mov
dec
mov
xor
sub
mov
jge
fcomip
mov
jle
cli
sbb
pop
add
jle
and
cmp
and
std
and
out
mov
adc
cmp
push
mov
test
lea
mov
movq
movsb
enter
inc
aam
mov
mov
fistpll
add
adc
repnz
aam
ret
ljmp
jo
dec
xor
test
mov
push
ja
int3
push
inc
out
pop
mov
xor
or
mov
or
pop
pop
add
imul
in
out
lea
dec
std
hlt
lea
fcmove
mov
je
inc
imulb
js
mov
imul
into
push
shl
lock
mov
mov
or
ds
int3
mov
rcr
mov
dec
dec
and
xor
int3
dec
stos
shrd
ret
sbbb
stos
in
mov
pop
mov
jb
mov
sbb
or
call
mov
subb
enter
push
xor
adc
fisubrl
loope
sub
cltd
stos
idivl
repz
pop
dec
insb
sub
jns
jno
push
vdivss
pop
out
test
and
out
push
inc
shll
pop
xchg
cmp
inc
jmp
daa
and
inc
add
and
iret
ret
or
sub
mov
mov
fistl
push
lds
fmull
test
popa
sbb
cmpsb
add
push
jecxz
enter
insl
fiadds
push
hlt
push
cs
xchg
mov
gs
fnstenv
insb
shl
fdivl
out
lods
aad
sbb
inc
fs
cmp
int
fnstcw
push
shlb
mov
xchg
or
pop
inc
popa
jge
es
shl
and
pusha
pop
enter
mov
mov
fmuls
mov
hlt
out
pop
sahf
mov
adc
out
sbb
add
xchg
nop
ret
sahf
mov
pop
mov
inc
aas
push
movsl
cmc
fidivrs
dec
insb
int3
jl
sub
inc
pop
sbb
clc
test
xlat
fdivr
popf
or
pop
jl
scas
and
pop
arpl
hlt
xor
lret
mov
cmp
cmpsl
insb
adcl
pushf
bound
push
gs
cwtl
imul
outsl
and
iret
out
pushf
jp
lahf
lods
sub
push
mov
xor
xor
mov
nop
in
popa
xor
push
sub
add
stc
or
ror
mov
rorb
dec
mov
pop
rorl
pop
sbb
cmpsb
inc
rcr
push
into
mov
mov
ja
repz
sub
mov
fisubs
ret
ffree
in
sub
loope
sub
std
xor
sub
xor
lahf
into
in
mov
hlt
jo
adc
shlb
adc
rorb
jmp
mov
mov
aam
sbb
push
cld
rol
leave
xor
pop
or
push
and
inc
pop
and
push
dec
jae
jecxz
xchg
or
aaa
pushf
mov
sub
stos
daa
inc
mov
mov
loope
popa
imul
dec
jmp
mov
movsb
fmul
cmp
repnz
lret
dec
lods
jnp
incb
fsin
sub
jl
pop
hlt
loopne
cmp
push
dec
out
dec
push
fists
mov
adc
scas
mov
les
gs
ss
scas
mov
adc
test
ja
dec
pop
decb
insb
sbb
xchg
std
xlat
lret
sbb
mov
vpunpcklbw
xor
pop
mov
test
jle
adc
aas
fwait
lods
inc
jp
loope
xor
and
and
dec
ds
lret
pop
xlat
out
les
enter
mov
pop
push
test
ljmp
or
or
xchg
orb
icebp
adc
les
mov
xchg
xchg
pop
mov
mov
rcrb
push
mov
das
sub
dec
sahf
and
dec
rorl
mov
inc
orb
data16
adc
sub
jo
int3
imul
clc
fimull
sub
xchg
push
aas
jb
jae
jns
cli
add
insb
xchg
out
push
add
and
rcll
sub
and
out
xchg
jecxz
pop
adc
add
jb
mov
xor
mov
pop
or
add
or
out
rcl
iret
js
xor
add
xchg
leave
stos
pushf
pop
sub
out
mov
dec
jo
inc
jae
pop
test
pop
mov
sub
push
iret
dec
mov
or
mov
sarl
aad
hlt
jo
sbb
test
push
add
scas
je
dec
cmpsb
jecxz
out
adc
rcrb
loop
les
lods
push
cmp
dec
sub
mov
dec
jb
les
jp
sti
adc
out
jo
cmp
out
int3
inc
int3
mov
clc
jae
stos
or
xchg
xor
shll
add
push
jns
in
sbb
cwtl
out
xchg
or
rcrb
push
mov
mov
shll
fdivrs
inc
lret
or
mov
adc
mov
xor
add
adc
shrl
or
ds
xor
loop
pop
mov
imulb
int
pop
imul
shrb
imul
in
mov
push
sbb
pop
mov
ret
push
mov
mov
negl
les
jae
in
adc
mov
pop
iret
jns
cmp
pop
xor
mov
and
add
je
mov
sub
call
outsb
mov
pop
mov
out
and
call
cmp
mov
sti
jmp
add
mov
add
ret
in
sub
rcrb
ret
pop
out
repz
push
mov
or
insb
out
clc
jg
lcall
and
fs
popa
sbb
mov
dec
pop
jl
test
fisubrs
pop
push
cmp
add
mov
sbbl
jle
mov
notl
dec
movsl
syscall
fldcw
imul
push
or
push
jl
adcl
je
mov
xchg
jp
into
xorb
adc
imul
cltd
pop
icebp
xor
pop
cwtl
sbb
in
mov
push
jmp
icebp
xchg
or
sbb
push
int3
or
dec
sub
sub
add
in
cltd
mov
and
cmp
sbbl
or
or
push
cs
repnz
lret
in
mov
xor
data16
push
dec
add
pusha
loop
pop
dec
mov
dec
mul
sti
push
mov
mov
and
mov
pushf
jge
fcmovnb
pop
fsubrs
jbe
jns
or
push
int3
fimuls
stos
pop
pop
jb
jp
cmc
mov
or
stos
mov
movsb
xchg
inc
push
and
jp
add
sub
outsl
shr
jns
stos
mov
push
jnp
mov
xchg
push
mov
nop
test
pusha
jnp
loopne
out
je
add
fstps
es
dec
testl
cld
cs
out
and
pop
xchg
jae
mov
xchg
add
loop
mov
sti
push
dec
mov
inc
ficomps
cmp
adc
cmp
mov
stos
push
lds
push
pop
push
or
xor
jg
scas
sub
sti
inc
dec
in
xchg
call
jne
rorl
mov
lahf
pop
inc
cs
daa
stos
ss
inc
push
push
sarb
push
cmp
loope
shll
push
xorl
push
aad
pushf
dec
jmp
movsb
scas
scas
cwtl
or
fnsave
stos
cwtl
ss
mov
cltd
repnz
repnz
js
in
push
std
sahf
out
aas
divl
xor
xor
lcall
ffree
add
push
mov
xlat
pop
mov
insb
icebp
mov
mov
xchg
test
int3
mov
mov
jmp
fistps
jmp
aam
repz
lahf
sti
movsb
or
xchg
inc
jecxz
pop
push
lahf
sbb
data16
mov
mov
or
jnp
pop
or
and
adc
int3
inc
sbb
push
enter
jle
push
hlt
xor
pop
cmp
push
addr16
push
pop
mov
and
sbb
jnp
jp
inc
add
rclb
or
sub
mov
xchg
mov
mov
push
out
fsubs
mov
rol
aad
mov
int
imul
rcll
ljmp
pop
cmc
or
sub
cmpsb
setge
jmp
sbb
popf
repz
icebp
pop
lret
gs
mov
dec
sub
mov
sub
hlt
clc
cmpsb
iret
aas
jl
mov
data16
mov
dec
scas
daa
mov
pushf
add
pop
cmp
loopne
lock
mov
test
movsl
xchg
xorb
push
xor
rcl
dec
inc
mov
mov
scas
xor
mov
inc
shlb
bnd
pop
and
arpl
ljmp
hlt
adc
imul
lcall
pushf
cwtl
xor
out
cs
adc
jp
mov
gs
mov
outsl
lret
xor
popf
dec
push
mov
cmpl
jl
popl
pop
mov
ss
daa
ja
jge
dec
push
shlb
cmp
jno
jbe
bound
push
cltd
pop
sbb
in
loopne
out
stos
data16
mov
fstp
mov
fs
lods
nop
and
pusha
xor
sbb
jo
and
inc
ret
aam
push
mov
push
add
push
incl
and
sahf
cmovne
bound
loope
push
popf
adc
pop
jno
mov
adc
ds
addb
nop
imul
xchg
mov
std
dec
mov
push
leave
stos
or
jno
test
sarb
sub
lahf
pushf
inc
mov
xorl
xor
shrl
mov
sbb
mov
and
inc
rep
jno
mov
pushf
jl
dec
xchg
fisubrs
mov
mov
fadds
cmpsb
in
fs
push
sbb
xchg
fmull
pop
test
inc
cmpsl
cld
add
test
scas
lcall
cmpb
inc
out
jle
push
sbb
and
push
or
dec
cmp
aas
push
add
cmp
minps
cli
stos
lret
clc
cmpsl
mov
dec
call
ficomps
aaa
mov
jle
sub
repnz
mov
inc
fsubs
lods
push
lcall
insl
and
sbb
lret
pop
call
std
and
sub
pop
loope
call
inc
outsb
inc
dec
aad
scas
ljmp
adc
cwtl
insb
and
data16
out
pop
cmp
aaa
enter
or
and
fdivrs
add
cld
add
out
add
inc
mov
push
pusha
inc
sub
xchg
sbb
ljmp
cmp
pop
pop
or
xlat
or
or
push
jae
xor
ja
mov
test
ret
bound
fwait
and
insb
cmpsl
gs
mov
ss
and
fs
cld
leave
jns
pop
or
pop
or
pop
or
xor
enterw
add
cmp
jp
stos
push
mov
or
xor
jo
adc
aad
mov
jne
test
loopne
lds
mov
xchg
dec
cmpsb
fwait
and
dec
cld
stos
lret
pop
shlb
push
mov
jo
sarb
push
dec
add
mov
fxch
jmp
push
ret
dec
int3
jo
loope
xchg
clc
xchg
andb
in
inc
fld
mov
aad
test
stos
mov
pop
push
mov
subl
fadds
pop
cltd
ja
jb
nop
pop
sbb
sub
pop
stos
cmp
and
sbb
xorl
mov
xor
push
or
sub
xor
dec
inc
adc
push
pop
popf
adc
pop
mull
cltd
cmp
cmc
mov
mov
mov
jg
xchg
xchg
imul
shrb
scas
add
mov
outsb
dec
adc
lcall
inc
aas
sub
imul
imul
in
dec
xor
jl
dec
dec
cmp
mov
mov
xchg
dec
pop
aad
gs
gs
or
mov
mov
hlt
pop
out
sbb
jle
or
pop
pusha
adc
in
mov
jnp
sub
gs
cmp
pop
mov
aam
jge
add
mov
xor
out
aad
shrl
insl
js
fs
xchg
push
xchg
movsl
es
fwait
push
pop
mov
insl
pop
in
scas
ljmp
fs
cmp
leave
cmp
addr16
inc
cmp
push
aas
adc
mov
jle
in
jg
dec
hlt
cmp
push
mov
mov
fisttpll
dec
les
popf
dec
mov
ffreep
dec
dec
lock
andb
xchg
out
stos
pop
push
aaa
xor
pop
and
inc
and
xor
inc
popa
cli
fsubl
cmp
test
push
sahf
incb
leave
jg
daa
lock
mov
adc
loope
icebp
cwtl
sub
inc
in
xor
push
std
fcomip
fisubrl
enter
lahf
popa
nop
mov
push
faddp
es
test
add
and
stc
sbb
popf
repz
adc
pop
stos
jns
mov
adcb
ror
jecxz
stos
fcomps
xchg
dec
mov
jne
add
dec
ds
mov
xchg
sbb
xchg
and
push
jle
dec
lock
enter
or
and
icebp
mov
jl
xlat
adc
push
popa
mov
mov
sub
rcll
in
xor
cmp
inc
cmp
cs
andl
mov
fldenv
sahf
pop
repnz
push
cmp
xor
inc
adc
mov
cmp
adc
mov
daa
push
inc
jle
mov
inc
push
and
repnz
add
orb
test
fldl
out
jecxz
lahf
iret
testl
and
xchg
push
lods
lret
and
xor
mov
sbb
add
test
je
out
or
insb
cmp
pop
rolb
and
sub
ljmp
aam
mov
movsl
cltd
jl
lock
mov
lods
push
sar
shrl
xlat
sbb
sub
int3
xor
iret
test
mov
mov
xchg
arpl
push
dec
lcall
fldl
xchg
arpl
pop
ror
idivb
adc
xchg
sub
adc
mov
add
dec
cmp
fisubrl
iretw
ss
mov
add
mov
ljmp
aas
bound
in
pop
adc
fsubrl
and
movb
pop
or
jmp
jo
mov
push
lock
add
sti
jecxz
mov
fnstcw
or
cmc
rorb
mov
pop
aas
inc
cmp
lea
push
loopne
out
aad
mov
sub
cmp
dec
mov
and
and
cmpsl
sbb
mov
dec
pop
pusha
lahf
repnz
in
pop
in
fistpl
popf
inc
fisttps
test
fs
stos
in
fwait
aam
out
pushf
jb
jo
out
mov
loop
sub
mov
push
add
mov
mov
dec
mov
or
sbb
mov
mov
cmpsb
int
pop
xchg
dec
jnp
add
inc
inc
and
push
xor
mov
inc
shrb
add
xchg
push
sbb
loopne
mov
xor
lcall
pop
pushf
xor
sub
inc
int3
mov
aad
sub
mov
jmp
imul
mov
jo
push
cwtl
push
cmp
es
cmc
repnz
sub
test
xchg
inc
mov
cmpsb
pushf
mov
sbb
xchg
xchg
push
adc
cmc
pop
imul
in
loope
mov
jl
mov
test
dec
mov
pop
fdiv
mov
cmpsb
mov
adc
mov
adc
pop
dec
dec
jecxz
adc
xor
xor
add
push
fcomps
jmp
inc
je
dec
insb
and
cmp
mov
dec
in
les
or
clc
jbe
sub
mov
dec
dec
pop
loopne
xor
jl
mov
leave
push
mov
jnp
inc
push
adc
xor
lcall
sbb
dec
adc
lock
push
mov
test
ja
ss
repnz
ds
cs
test
arpl
mov
cli
xor
pop
loope
xor
test
xor
ja
ja
movl
cltd
ss
cmpsb
mov
iret
mov
push
mov
cmp
daa
fcompl
out
inc
int
jecxz
in
iret
shl
out
push
cltd
sub
jp
dec
jmp
popf
cli
test
leave
sub
jmp
mov
imul
lret
imul
lret
cs
cmp
or
pusha
in
call
dec
fucomp
push
mov
into
pop
loopne
out
lods
lock
hlt
imul
loop
push
in
sub
pop
arpl
dec
rorb
fstps
jmp
fisubrl
sub
add
mov
inc
sub
push
gs
mov
lahf
es
push
mov
push
outsb
test
sub
mov
pop
lea
push
inc
lods
inc
out
adc
ljmp
insl
outsb
pop
push
mov
adc
or
popf
cld
faddl
repz
rol
mov
mov
or
lahf
daa
clc
jae
enter
popf
xor
dec
filds
adc
int
mov
bound
mov
xchg
mov
pusha
mov
out
shrl
sub
int3
pop
popa
in
jne
popa
xchg
push
pop
inc
shrb
sbbl
fiaddl
lret
imul
pop
insb
push
push
into
or
jg
jns
cmp
cmc
test
mov
out
push
push
dec
test
xchg
cmp
cmp
repnz
jns
push
mov
add
sbb
addl
call
mov
outsb
scas
push
xorl
je
sbb
dec
inc
lock
inc
xor
in
dec
xor
inc
xchg
in
sbb
push
dec
jns
sbb
mov
insl
mov
push
out
loope
adc
sahf
mov
je
push
pop
sarb
clc
pop
mov
lods
stos
dec
daa
mul
sub
into
out
outsl
xchg
pop
andl
mov
test
popa
mov
out
fsubrs
js
lahf
aaa
fs
mov
movsb
out
sub
test
lods
mov
fists
insb
sub
rorb
fidivs
das
fldl
fldenv
cwtl
ds
aaa
enter
jns
ret
addl
mov
xor
xor
ret
fistpl
in
xchg
xchg
add
mov
ljmp
jge
shlb
fimuls
nop
enter
xor
mov
orl
dec
sub
call
adc
pop
push
outsb
lcall
dec
cmp
dec
add
add
inc
push
repz
insb
pop
mov
cmpsl
test
subb
jae
cli
jp
insl
jl
outsl
mov
enter
lods
push
push
popf
shll
add
movsl
and
mov
add
sbb
pusha
and
mov
xchg
cltd
jecxz
push
push
jg
negl
daa
inc
fwait
push
les
inc
dec
les
rcrb
push
pushl
dec
inc
pop
sub
xor
loope
inc
mov
leave
jbe,pn
shll
fadds
cmpsl
js
adc
xchg
push
xchg
xchg
mov
fdivl
mov
mov
cli
cmp
mov
inc
cmp
jns
cltd
js
mov
cli
pop
lods
jp
out
add
sbb
inc
fldcw
lcall
push
xchg
push
mov
push
dec
pop
popf
jae
cli
test
imul
ret
fdivl
pop
dec
push
aam
fmuls
stc
adc
jg
and
enter
ja
sti
and
mov
popa
gs
faddp
sub
mov
addr16
jno
pop
sbb
push
sbb
std
jmp
or
icebp
das
inc
std
loope
mov
test
cmpsb
mov
cli
jb
in
in
push
pop
and
test
lea
int3
movsl
add
mov
out
adc
roll
xchg
mov
sbb
loopne
clc
leave
aas
sti
jns
mov
in
jae
loop
stc
mov
mov
popf
xor
sub
mov
jb
cltd
adcb
mov
pop
dec
daa
jecxz
xor
cmp
mov
adc
pop
repz
jae
mov
pop
int
xorb
daa
dec
or
pop
in
inc
ret
sbbb
icebp
fildll
and
icebp
jnp
aas
sarl
movsl
outsl
cmp
and
movsl
or
lret
inc
mov
push
jecxz
push
sub
test
xchg
cli
lcall
jb
xor
mov
mov
mov
add
add
push
hlt
add
mov
in
call
push
movsb
lods
inc
fstl
in
push
cmp
lcall
and
jnp
xchg
and
sub
jg
adc
mov
mov
add
inc
stos
aam
mov
or
insb
test
mov
pusha
jns
sbb
push
xor
adc
pop
arpl
jnp
sti
mov
aaa
push
xchg
push
jecxz
mov
pop
push
sbbl
push
xchg
mov
dec
in
andl
inc
and
push
jo
outsb
ficoms
mov
das
push
inc
add
push
mov
std
fs
push
inc
jl
sub
mov
loopne
pop
lods
pop
mov
mov
pop
push
sbb
movsb
sbb
or
push
jp
fmuls
pop
adc
cmpsb
dec
les
arpl
in
in
lahf
jo
mov
or
mov
mov
jno
mov
pop
lret
fwait
daa
jae
mov
jbe
aas
in
mov
das
mov
in
clc
in
xor
mov
fcomip
sarb
js
jecxz
in
push
xchg
lret
mov
mov
rolb
mov
loope
test
pop
loopne
sub
jg
fisubrl
or
add
sbb
mov
pop
mov
push
sbb
cmc
push
lds
sar
lret
test
ss
lds
xor
push
inc
inc
adc
dec
add
and
scas
stos
daa
inc
push
sarl
pavgb
stos
push
sub
pop
addr16
imul
dec
pusha
mov
xorl
jnp
pop
out
imul
iret
loope
cmp
aas
std
int3
xchg
sub
aaa
loop
in
scas
xchg
mov
cmpsl
mov
test
push
xchg
mov
xor
inc
aad
inc
ret
mov
inc
or
pop
push
mov
xor
pop
sbb
xchg
and
mov
dec
insb
in
out
cmpsb
inc
adc
pop
mov
scas
leave
test
cmp
pop
mov
cmc
add
push
mov
jge
push
mov
and
pextrw
dec
scas
out
dec
aas
mov
jno
sub
mov
sbb
dec
repz
leave
xchg
cmp
imul
les
addl
mov
mov
ja
push
std
ja
pop
jae
imul
lods
xchg
xlat
loopne
hlt
cmp
popf
mov
jle
adcb
add
jle
xchg
adc
pop
and
lret
ror
clc
dec
repnz
xchg
rcl
faddp
loope
enter
roll
adc
mov
cmp
add
adc
jne
repnz
fs
xor
icebp
push
mov
scas
push
mov
sub
insb
mov
int
cmpsb
divl
js
rclb
loope
adc
out
loopne
sti
xchg
push
add
jle
add
xor
add
mov
push
push
jl
pop
in
aad
fcompl
xor
xor
or
xchg
dec
pop
and
in
xchg
or
push
stc
inc
sbb
xchg
push
dec
jge
sub
inc
cmp
cwtl
loopne
call
xor
and
cmp
cltd
pop
or
iret
and
andb
inc
mov
je
xor
and
or
repz
add
or
add
loop
fwait
roll
mov
mov
mov
gs
je
fisubs
les
sbb
scas
lock
push
repnz
iret
mov
cmp
cmpsl
push
xchg
cmp
stos
sbb
push
jno
add
adc
dec
cmp
ret
pop
pop
pusha
pop
aaa
rcl
das
addr16
clc
bound
lcall
gs
fnsave
fsubrs
and
add
lret
cmp
sub
leave
adc
mov
jmp
xchg
movsl
mov
add
pop
adc
xchg
es
or
out
in
mov
mov
pop
and
mov
in
stc
popa
lret
sbb
mov
or
daa
lds
js
imul
push
ss
jns
mov
xchg
jo
fbld
xchg
cmpsl
inc
icebp
stos
sbb
dec
loopne
jbe
xchg
mov
cld
hlt
popa
pop
and
pop
jle
push
adc
fnstcw
mov
pop
or
cmp
adc
mov
jl
cmp
out
jg
js
and
mov
add
fnsave
push
das
testb
cmc
sub
mov
sub
icebp
xchg
mov
xor
bound
aaa
mov
out
mov
les
cmp
xor
xchg
jns
pop
xchg
fisubl
push
and
in
outsl
pusha
lahf
fimull
pushf
test
das
or
cltd
gs
ret
movsb
lret
into
bound
mov
popf
xchg
mov
out
or
lock
pushf
add
fidivs
fstpl
in
adc
test
jmp
push
outsb
pop
repnz
mov
push
sbb
dec
shr
out
pop
mov
fisttpl
mov
adc
in
fs
jo
cmp
inc
mov
mov
push
idivb
push
dec
sarb
int3
stos
cmp
mov
nop
lea
sbb
push
mov
sub
sbb
dec
mov
pop
out
jnp
cmp
jns
movsb
dec
cmp
repnz
sti
add
fcomi
fstpt
sub
pop
outsl
and
xor
pop
add
xchg
cmp
icebp
iret
dec
xchg
out
inc
icebp
pop
inc
pop
fwait
pop
sub
jg
leave
cld
xchg
popa
roll
clc
sub
out
inc
scas
sbb
mov
iret
mov
leave
sbb
inc
jmp
repz
xchg
clc
mov
xor
and
clc
nop
push
jmp
enter
jns
and
adc
lods
cmpsl
shll
jae
popa
push
call
out
lret
xchg
ds
lcall
movsb
fistps
or
push
push
xor
das
add
mov
lods
scas
cmp
insl
sbb
pop
xchg
add
sti
cwtl
jno
mov
xor
sub
and
in
loop
add
jb
mov
test
pop
das
sub
dec
adc
mov
xchg
jns
sbb
and
popf
pop
add
sbb
add
xchg
or
cmpb
pushf
subl
ss
fmuls
or
loopne
xchg
jae
imul
fsubrp
xchg
mov
add
fcomip
stos
adc
outsl
mov
in
sbb
mov
mov
lret
scas
jo
ret
popf
testb
daa
rcrl
push
scas
mov
push
xor
add
and
in
add
lods
or
dec
dec
out
adc
inc
jp
rcrl
fstps
or
sub
jbe
scas
aaa
or
insl
subb
lods
es
inc
xchg
pushl
inc
fdivr
rorb
lea
stos
push
scas
out
add
xchg
stos
inc
add
mov
test
cwtl
daa
leave
jns
dec
push
xchg
cmp
push
xor
and
loopne
nop
movsb
je
pusha
lcall
arpl
cmp
cli
adc
rol
jge
aaa
pop
xlat
mov
mov
xchg
add
jae
ret
jns
cmc
xor
sbb
add
inc
mov
cmp
out
xchg
mov
jne
mov
out
in
enter
out
push
push
test
jl
ja
imul
pop
bnd
sbb
sti
ljmp
ret
outsb
hlt
mov
push
insl
maxps
or
xchg
mov
lahf
test
xchg
mov
rcrb
and
notl
imul
cmpsb
leave
inc
mov
cltd
mov
pusha
ss
lds
ficoml
inc
fbstp
jge
push
ds
add
ret
fcoml
mov
mov
xlat
push
xor
jae
cmpsl
inc
pop
icebp
fisubl
and
rcr
das
adc
out
add
lcall
sub
add
cli
dec
push
lahf
out
xchg
hlt
push
fbld
jo
mov
cwtl
aad
cld
sbb
mov
pop
mov
xor
mov
push
pop
add
fstl
push
add
and
push
call
push
sahf
jp
arpl
xor
scas
lcall
pop
add
jo
mov
out
push
aas
add
fistl
dec
mov
and
test
bound
sub
mov
mov
scas
push
frstpm(287
push
mov
outsb
xchg
imul
mov
pop
js
sub
ss
xor
push
sahf
outsl
adc
jo
aad
pop
loope
int3
mov
inc
out
xchg
data16
movsl
fsubr
push
adc
call
in
daa
or
outsl
or
pop
imulb
inc
sub
popf
dec
xchg
or
push
paddb
add
aad
inc
push
pop
and
iret
loopne
jp
shrl
roll
mov
inc
mov
mov
mov
lods
loope
stos
add
pop
sub
out
cmpl
movsb
dec
and
icebp
fstpl
adc
adc
in
jp
xor
fdivrl
adc
cmpsl
addr16
and
inc
xor
inc
push
lea
pusha
xor
cmp
mov
in
aam
inc
xlat
stos
in
dec
sahf
mov
in
outsb
pop
jns
aaa
popl
and
sbb
mov
cmpsb
adc
rclb
idivl
and
xor
lds
rorb
mov
pop
xor
incl
sbb
add
adc
stos
add
out
aad
push
jo
xlat
bound
cmp
fstpl
adc
add
aaa
out
pop
inc
enter
rcrl
pop
andb
cmp
sbb
xor
mov
sub
in
jne
jmp
pop
and
push
cltd
add
imul
cmpsb
addr16
mov
and
pop
repz
fmull
dec
mov
sub
xor
movsb
sahf
mov
fiaddl
add
mov
sub
cli
jo
mov
xchg
movsb
cmpb
pop
mov
les
cli
inc
lcall
push
push
inc
mov
ret
xchg
call
dec
lcall
test
add
stos
into
fstps
push
addr16
fiadds
fcmovnb
mov
data16
in
lcall
or
call
arpl
fwait
scas
adc
rcr
cmp
fisubl
cmp
imul
jecxz
push
fs
push
mov
cmp
sbb
test
mov
sbb
scas
mov
pop
ja
and
imul
sbbb
fsts
jmp
inc
mov
jae
cmp
frstor
mov
xchg
shll
data16
jns
pop
sti
and
test
out
enter
andb
loopne
adc
and
pushf
mov
xor
notl
cmp
hlt
loop
into
sbb
dec
ljmp
sub
ret
and
add
shrb
or
fdivrl
aad
push
or
adc
fdivs
rcl
jo
andl
loopne
movsl
outsb
pop
mov
loope
jg
cmpsl
pop
js
jg
subb
mov
in
and
pop
mov
sub
inc
mov
xchg
cs
cld
sbb
movb
xor
inc
pop
dec
test
inc
test
shl
pop
hlt
fyl2xp1
lods
mov
xchg
scas
in
xchg
gs
fadds
cmp
pop
cltd
pop
cmpsl
mov
xchg
mov
roll
adc
xor
mov
rdtsc
xchg
sarb
mov
xor
pop
mov
mov
pop
pusha
pop
pop
repnz
jle
jl
pop
icebp
fwait
sahf
push
sbb
inc
push
jl
cmp
jae
ja
mov
sbbb
cmp
jae
mov
scas
sarl
cmc
fistl
mov
cld
jg
pop
jge
and
sbb
sub
ds
jecxz
les
fstpt
icebp
jne
adc
mov
cld
test
mov
xchg
and
in
xchg
xor
or
xor
and
mov
cltd
jg
test
stos
shrl
mov
stc
jle
xchg
je
js
add
xor
adc
je
jmp
lods
pop
inc
sub
dec
enter
sub
jmp
push
and
cmp
cld
sbb
lods
daa
mov
insl
dec
out
mov
loope
jbe,pt
and
int
idiv
lret
movsl
pop
xor
mov
nop
jmp
stos
je
jnp
pop
dec
into
cltd
mov
cmpsb
loop
and
test
mov
lret
cmpsl
fstps
adc
cltd
jno
call
lods
inc
mov
lea
out
fildll
jo
push
cmp
subl
jb
inc
rcrl
add
inc
mov
loop
pop
mov
rcrb
sbb
mov
rcrb
dec
mov
push
or
fldcw
sub
jecxz
push
hlt
sbb
jbe
dec
pop
add
fistl
xor
inc
imul
inc
adc
lea
adc
ret
sbbl
negl
shl
clts
cs
jecxz
push
rolb
out
jmp
cs
mov
jge
sar
xchg
je
jno
add
cmc
lock
sbb
adc
enter
into
sbb
daa
xor
inc
xchg
std
testl
mov
push
push
pop
out
inc
cmp
out
push
pop
push
scas
xor
xor
fnstsw
or
cmpsl
dec
adc
push
loopne
lcall
push
movsb
sti
cmpsl
mov
addr16
xor
inc
add
mov
cmp
imul
jmp
mov
xchg
jne
shlb
adc
clc
xchg
popf
push
rorl
jnp
cmp
adc
in
dec
sahf
xor
faddl
add
sti
or
popa
aad
mov
lock
repz
insb
jl
sbb
scas
xlat
mov
pop
or
inc
rcrb
dec
adc
inc
fwait
xorl
jne
fldt
lcall
and
add
test
lcall
dec
mov
enter
call
xchg
push
sub
rcrl
unpcklps
jecxz
mov
clc
push
push
mov
movsl
mov
int
inc
out
mov
xor
sti
insb
hlt
xor
push
gs
mov
mov
mov
cbtw
jmp
or
jl
andb
inc
pushf
sbb
jp
xor
cwtl
sub
ret
lds
push
jl
iret
repnz
sub
add
mov
rorl
lea
mov
int
rcpps
or
pop
fisubrl
out
sbb
enter
xor
sub
mov
and
dec
sbb
lret
jo,pt
jle
push
outsl
xor
ljmp
jg
add
cmpsl
andl
mov
clc
add
push
dec
mov
sub
inc
xchg
and
fwait
pop
adc
inc
mov
mov
push
sbb
lret
and
int
mov
dec
fbstp
jecxz
cmc
jb
pop
and
out
loope
arpl
aad
xchg
ds
test
movsb
sub
or
stos
stc
mov
mov
xchg
or
cmp
pop
sti
fcompl
cs
fsubl
inc
aad
and
cmp
vpmullw
adc
mov
scas
push
gs
cmp
fistps
cmp
dec
mov
mov
and
push
ljmp
mov
ret
lret
cmpsl
jb
pop
add
xlat
xor
mov
popa
scas
es
ja
incb
mov
xor
stc
inc
add
mov
mov
icebp
push
cs
adc
mov
sbb
ret
adc
aam
push
fs
push
ret
cmp
pop
fs
daa
push
push
add
call
mov
addr16
xchg
add
or
sub
stos
pop
insl
test
ss
push
outsl
iret
ss
arpl
stc
sub
sahf
mov
jns
repz
pushf
ja
xor
pop
inc
fidivs
inc
cmpsl
addr16
adc
cmc
ja
clc
push
jno
jo
jp
enter
inc
shll
rcr
arpl
test
das
arpl
push
sub
enter
lret
jg
jae
mov
xchg
xchg
gs
mov
fwait
cwtl
pop
xchg
dec
pop
out
xor
cmpsl
pop
mov
mov
ja
sbbb
mov
add
dec
xchg
stos
bound
jo
popf
push
jae
jb
xchg
push
push
push
call
fadds
pop
xchg
cmc
mov
loope
mov
or
jle
mov
xchg
test
or
or
mov
fcmovnu
bound
stos
adc
jnp
mov
icebp
add
roll
dec
int
inc
stos
aad
test
mov
sub
int
stos
ja
cmp
mov
mov
push
push
fcmove
mov
flds
dec
push
add
dec
mov
dec
inc
outsl
xor
jbe
insb
fnstenv
and
shrb
mov
loop
ja
push
mov
push
pop
out
mov
insb
lahf
lds
inc
push
xchg
jp
xchg
and
mov
fmuls
popf
mov
repnz
jecxz
sbbl
push
repnz
insl
sahf
push
fwait
mov
add
adc
mov
lret
or
and
mov
sahf
cmp
inc
cmpsl
movsl
loope
pop
ss
sub
repnz
add
dec
cwtl
shrb
into
add
jne
popa
push
xchg
mov
stc
mov
ja
dec
pop
add
dec
jb
xchg
int3
and
shl
iret
push
sub
xchg
fmuls
or
test
push
jnp
aad
fs
rcrl
sahf
imul
hlt
pop
or
repz
jg
add
scas
loop
jp
or
jg
cmp
inc
pop
out
dec
xor
xchg
in
xchg
arpl
call
adc
jmp
sbb
xor
lods
loopne
xchg
daa
cmpxchg
fbstp
fdivrs
xchg
js
xchg
jne
and
or
lret
or
push
push
es
in
mov
push
lret
inc
xor
push
xor
mov
sbb
push
mov
mov
scas
cmp
sahf
addl
inc
push
xchg
popf
sub
test
and
imulb
in
sti
fwait
adc
push
out
jnp
pop
lret
cmp
aaa
inc
unpcklps
pop
out
xchg
cmc
popa
cld
and
adcl
call
mov
lea
sbb
inc
and
inc
xchg
mov
xchg
loop
and
dec
lret
dec
icebp
outsb
enter
xchg
out
dec
xchg
mov
pop
inc
stos
or
adc
shl
sar
lahf
xor
mov
mov
ja
jecxz
or
jne
mov
add
jnp
adc
loopne
adc
ficoml
enter
xor
insb
sti
sub
out
ret
mov
sbb
push
out
sub
mov
add
cmpsl
movsl
push
lods
adc
push
adc
mov
and
loope
mov
adc
lock
push
lret
frstor
pop
mov
inc
repnz
dec
xor
cmp
andl
fdivrs
push
out
cmp
outsl
sahf
mov
mov
and
stos
int
sbb
cmpsl
dec
push
fstpt
mov
and
mov
xor
push
iret
mov
int3
sub
push
or
add
mov
clc
test
dec
pop
sbb
shrb
pop
and
loop
aam
scas
shl
push
add
xlat
fstps
call
imul
std
loopne
stc
pushf
popa
loopne
and
mov
xchg
lahf
sbb
cmp
mov
or
jno
ret
pushf
mov
mov
stos
lahf
ds
jmp
push
je
test
push
popa
test
addl
pop
mov
jmp
cltd
dec
jne
fsubrs
les
int
dec
cld
es
xor
xchg
add
jns
inc
call
adc
popf
or
ss
test
je
imul
mov
rclb
les
xchg
cmp
sbb
fldenv
rol
sbb
jecxz
xor
sbb
jnp
push
jne
jo
outsb
and
inc
xchg
fdivrl
fcmovne
mov
xchg
and
pop
cmp
mov
cmp
nop
mov
cmpsl
lcall
and
mov
sub
pusha
xchg
inc
pusha
cwtl
pop
sarb
sbb
icebp
jmp
pushl
xchg
or
add
mov
cmpsb
push
sahf
frstor
and
outsb
add
mov
stc
mov
lret
fcoms
sub
ljmp
xor
xchg
add
jno
push
stc
xor
orb
xchg
jmp
inc
mov
xchg
xlat
pop
add
repz
jge
cmpsb
call
insw
stos
insb
lds
dec
push
pop
add
adc
imul
pop
push
call
ss
mov
loop
inc
out
pop
or
pop
scas
mov
shll
sub
cmpsl
test
inc
sahf
movsl
fcmovnbe
pop
das
dec
mov
jne
imul
add
outsl
in
pop
and
sbb
sbb
mov
sarb
sti
sbb
cmp
sbb
pop
xorl
mov
test
loope
fs
mov
mov
lods
out
incl
test
mov
sbb
out
xchg
push
add
out
cltd
fsubrp
fimuls
les
jns
sbb
cmc
jns
divb
lcall
loope
mov
stc
sub
ret
loopne
mov
mov
sbb
imul
repz
adc
jecxz
add
xchg
mov
dec
insb
stos
xchg
mov
pop
pop
cmp
ret
inc
outsl
in
lahf
jp
pop
divb
xchg
in
addb
cli
jmp
dec
add
bound
insl
and
js
cmp
es
mov
aam
lea
stc
xchg
xor
and
xlat
mov
decb
sahf
popf
ds
sbb
sub
sbb
shlb
outsb
stos
stos
daa
cmp
jp
mov
jp
movsl
in
lret
fwait
out
loop
and
mov
test
ja
push
lods
adc
cmp
imull
pop
sbb
pop
rolb
push
fisttpl
fnstcw
and
call
movsl
jge
sub
inc
sbb
bnd
xor
rcrb
inc
daa
outsl
mov
mov
mov
rcr
cmp
push
insl
mov
push
aas
fnstsw
call
mov
das
ljmp
pop
addr16
lods
pop
cmp
in
adc
rorl
dec
push
nop
inc
or
pop
outsl
out
mov
je
sbb
out
pop
daa
xchg
lret
mov
int
sbb
ds
mov
int
loopne
xor
test
cmp
scas
popf
or
or
sub
je
pop
int
xor
cmpsl
bound
sbbb
cmpb
adc
adc
sbb
push
inc
lds
icebp
add
mov
aas
in
cltd
or
or
mov
adc
cld
test
jl
js
jmp
xor
jbe
pusha
out
jo
aam
sahf
in
cmpsb
ret
xchg
hlt
sub
adc
dec
and
int
xlat
dec
inc
mov
mov
cmp
inc
mov
mov
mov
popf
fwait
and
pop
jecxz
cmp
mov
and
dec
mov
jp
dec
mov
test
jbe
fwait
mov
pop
push
or
in
ljmp
nop
push
add
sbb
sbbl
push
loopne
ljmp
and
iret
fs
push
jnp
and
and
mov
or
lds
lea
mov
inc
sahf
scas
out
pop
or
dec
dec
gs
cmc
nop
mov
fmul
inc
popa
daa
insb
fucomp
insl
divb
nop
jmp
pop
repnz
popa
xchg
int
inc
ss
cltd
jns
fldenv
push
pop
imull
jbe
dec
in
andb
movb
fisubrs
dec
or
dec
cli
inc
lea
out
and
sub
movsb
adc
movsb
testb
push
inc
sub
adc
lea
cli
jge
inc
loop
sarb
ljmp
insl
imul
or
daa
fstl
adc
xchg
repnz
dec
ja
outsl
test
jne
ret
push
stc
xchg
mov
adc
lahf
push
sbb
jp
mov
sub
xor
orb
add
xor
dec
jle
cs
xor
inc
sbb
je
fmuls
inc
xlat
push
add
xchg
pushf
dec
inc
lret
cmpsl
sbb
adc
push
mov
jno
arpl
add
orb
or
out
xchg
lods
xchg
xchg
or
push
and
xchg
data16
cmp
iret
adc
cli
iret
dec
movsb
add
test
pop
aam
iret
xor
push
in
xchg
roll
adc
jge
xchg
fs
pusha
hlt
outsb
hlt
mov
mov
xlat
dec
repz
loope
gs
js
in
mov
sub
call
sbb
xchg
sub
test
push
imul
sti
inc
cmp
xor
dec
pop
dec
pop
xchg
push
add
xchg
xchg
push
mov
dec
inc
mov
xchg
mov
mov
xor
and
gs
imul
loope
in
inc
lea
stos
xchg
cli
mov
dec
movb
das
scas
je
repz
mov
sub
icebp
cmp
fdivrl
call
push
mov
lcall
pop
inc
enter
aaa
cmpsl
sbb
sti
sbb
mov
sub
mov
pop
or
push
push
or
sbb
push
movl
insb
subb
adc
imul
and
sub
lcall
mov
shlb
mov
push
cmp
js
sahf
push
push
add
ss
rclb
fisubrs
cli
lahf
iret
std
sbb
cmc
fildl
dec
push
cmpsl
iret
js
push
mov
lds
push
xor
adc
std
jge
and
scas
vshufps
test
or
scas
xor
roll
clc
sub
add
push
jg
hlt
aad
mov
jno
xor
cmp
jbe
pop
sbb
mov
pop
jp
push
jmp
add
push
lss
push
loop
inc
stos
and
in
push
pop
sub
and
out
sbb
add
or
test
and
push
sub
enter
or
mov
out
sbb
ret
daa
and
popa
fidivl
mov
movsl
ret
imul
push
stc
pop
dec
bound
push
and
leave
mov
pop
pusha
out
pop
mov
aad
adc
fldpi
xchg
mov
insl
out
cmp
cmp
sti
call
mov
push
fwait
inc
lcall
xor
gs
xor
icebp
or
add
lods
stos
popf
jp
push
jno
lret
popa
mov
pop
ljmp
lea
push
xor
xorl
pop
mov
push
lcall
fs
mov
add
mov
lret
insb
scas
fldl
aad
lret
aam
outsb
mov
ficompl
pop
mov
push
dec
jmp
pop
mov
pop
xor
cld
fidivrl
xor
ja
cltd
cmp
push
jmp
xlat
or
or
mov
sbb
dec
stos
out
pop
dec
mov
mov
out
ficoml
mov
jp
jne
rcll
mov
cmpsb
add
mov
mov
stos
inc
push
loop
out
cwtl
add
dec
mov
xchg
in
es
mov
mov
sti
sbb
enter
pop
mov
sbb
sbb
inc
mov
sar
sbb
inc
xchg
sbb
cli
adc
call
mov
sub
cmpl
cmp
push
icebp
ljmp
or
cs
pop
rorb
or
fisubrs
shrl
mov
and
test
pop
mov
mov
gs
movsl
loope
mov
inc
std
or
cmpsb
adc
pop
popa
shrb
cld
test
aad
xchg
xor
mov
fdiv
outsb
push
test
jmp
ror
and
sub
insl
pushaw
fidivl
daa
insl
lods
cmpsl
xchg
jge
jo
and
xchg
ds
push
cmpb
mov
rcrl
call
gs
out
xor
aaa
pop
cmp
sbb
inc
xlat
jb
je
mov
fnstcw
int3
mov
mov
rcrb
lock
sbb
mov
cmp
xor
mov
pop
pop
inc
sub
mov
xchg
push
mov
data16
sub
adc
push
xchg
mov
and
inc
sbb
jmp
mov
xchg
push
pop
into
jb
pop
jno
pop
push
jo
loop
sbb
or
cld
jg
mov
jns
xlat
jno
fidivrl
jbe
inc
pop
loopne
lret
pop
in
cli
adc
clc
add
dec
popa
test
jns
pushw
cs
inc
xor
and
mov
push
movsb
fiadds
push
pop
xchg
inc
lcall
in
ja
sbb
mov
gs
dec
fsubl
pop
stos
arpl
mov
push
lcall
mov
movl
push
lret
xchg
pop
cmp
add
adc
mov
hlt
sub
cmp
lods
and
mov
out
fadd
dec
mov
or
push
mov
cld
adc
xchg
jmp
inc
xor
sub
jns
mov
and
pop
mov
int
sarb
mov
add
xor
xchg
xor
sbb
addr16
imull
push
stos
jle
pop
push
jb
mov
dec
mov
inc
fistl
xchg
push
xchg
call
and
pop
sub
test
fs
sub
das
mov
std
fscale
jp
cmpsb
sarl
test
popa
add
lret
test
mov
push
dec
in
lret
in
sbb
sbb
mov
ret
int3
leave
arpl
cwtl
int
push
and
lret
adc
dec
pop
movsb
mov
push
out
rorl
divl
lret
imul
scas
jecxz
dec
jnp
inc
push
xor
aaa
add
push
ss
sbb
xchg
aam
jnp
or
addr16
push
push
cmc
mov
fs
arpl
adc
and
shrb
movd
push
int3
popf
jge
jle
popf
movsl
in
dec
leave
out
icebp
xor
outsl
loop
push
xchg
stc
imul
jb
icebp
adc
mov
into
fwait
jno
pop
jge
test
push
mov
lods
pop
stos
stos
push
lahf
dec
jmp
outsl
arpl
int
xor
testl
and
push
into
and
jne
cmpsl
movsl
mov
loop
scas
movsl
jge
and
mov
xchg
subl
nop
lock
pop
dec
mov
xor
bound
or
cwtl
pop
push
xlat
test
mov
adc
sub
jb
aad
push
inc
pop
or
gs
mov
jbe
cld
outsb
jnp
fsts
push
and
test
xor
pusha
xchg
or
or
jge
aad
push
dec
push
push
jp
or
push
and
in
lret
xchg
jmp
in
inc
andl
aam
add
imul
dec
stos
mov
jl
stos
add
int
pop
push
mov
dec
and
jecxz
xchg
ret
fdivl
mov
sbb
xor
cwtl
aas
jge
cli
dec
fcmovnbe
adc
pop
xor
scas
jp
aam
gs
and
or
add
xchg
add
ret
and
popa
aaa
mov
mov
inc
jbe
scas
adc
mul
adc
fucomp
xchg
sbb
pop
mov
dec
insb
push
imul
test
shll
notl
cmp
test
out
icebp
pop
push
fs
mov
pop
ss
xchg
or
and
cmp
lea
je
xchg
incb
pusha
push
push
in
test
cmp
pop
lcall
xchg
popf
dec
lods
popf
orl
mov
dec
jge
icebp
aad
cmp
stos
xor
jo
femms
lahf
push
or
pop
mov
popa
sub
cwtl
mov
dec
jno
jnp
ja
int3
adc
push
jae
sarb
std
lret
stos
push
pop
arpl
or
push
insl
mov
add
imul
popf
lock
out
addr16
xor
jl
cs
cmp
mov
fdivs
add
cmp
out
xlat
imul
push
clc
in
lock
cmp
and
stos
inc
cmp
inc
push
add
cmpl
cmp
repz
outsb
xchg
mov
jbe
popa
sbb
add
scas
ss
fdivr
add
lahf
jbe
jg
push
pop
lds
pop
andl
mov
sbb
aad
daa
aad
inc
aad
and
xchg
and
fwait
sahf
movsl
cmpsl
shl
cli
add
iret
or
ficoml
inc
xor
test
and
push
cmp
fnstenv
or
and
inc
cmc
cmp
es
sbb
jne
out
mov
icebp
adc
test
jo
sub
sahf
cmp
xor
adc
mov
adc
fwait
lret
xchg
mov
loopne
xchg
loope
pusha
and
adc
test
loop
scas
dec
pop
lock
repz
mov
add
xchg
scas
cmovne
ds
mov
adc
push
xchg
adc
or
imul
bound
mov
sub
fistpl
fnstsw
cmp
les
in
jae
push
inc
gs
arpl
mov
das
lahf
xor
add
lahf
fs
imul
or
and
jbe
hlt
loop
rcrl
jb
inc
cmpsl
cld
shlb
adc
clc
jo
inc
testl
mov
inc
dec
fs
pop
jnp
lret
nop
or
bnd
dec
stos
mov
inc
sarb
test
ja
pop
sbb
int
fnstsw
mov
jbe
daa
xor
movsb
pop
xor
pop
stos
icebp
pop
repnz
xor
dec
gs
inc
call
out
scas
jg
divl
add
stos
lahf
inc
jle
je
xor
loopne
fisubrs
xor
or
or
mov
or
push
or
in
sbb
scas
mov
mov
mov
xor
mov
jp
sti
mov
pop
sti
xor
add
jae
inc
sub
sub
test
cmp
popf
mov
adc
ss
jp
pop
xchg
dec
rcll
cmc
popf
adc
ret
or
and
push
inc
repz
outsl
ja
sarl
out
mov
aas
mov
scas
inc
sbb
or
sbb
jne
jne
pop
or
test
pop
dec
adc
pop
xorb
push
xchg
out
push
pusha
test
add
test
es
lret
cwtl
cmp
cltd
mov
dec
jle
punpckldq
sub
xor
or
mov
mov
push
cmpsl
push
xchg
push
fwait
inc
inc
test
sbb
aad
xor
jmp
js
lea
xor
adc
loop
test
lods
lahf
jbe
sbbb
ljmp
icebp
mov
pop
xor
into
lea
mov
in
xor
xchg
push
cltd
add
test
cli
mov
sbb
lock
sti
test
xlat
div
imul
lret
cld
jnp
les
and
out
mov
push
jbe
movsb
ja
adc
dec
es
aas
push
inc
pop
in
inc
pop
dec
jg
faddl
add
or
xchg
dec
jno
pop
add
cwtl
mov
inc
punpckldq
movsl
imul
jb
mov
cmp
mov
lahf
dec
ss
out
push
add
pop
fdivr
out
dec
or
movsb
aam
add
sbb
cmp
jno
sarb
int
les
sub
clc
lea
scas
pop
pop
or
shlb
sbb
push
inc
xchg
pushf
call
cmp
imul
jle
arpl
add
sub
mov
xchg
inc
roll
inc
push
adc
test
fstps
mov
nop
cltd
fmul
or
xor
addb
loope
and
rcll
pop
sub
aaa
sbb
das
jns
mov
imul
scas
push
jmp
dec
in
pushf
push
cmp
xchg
xor
xchg
add
inc
into
adc
cmp
adc
jecxz
idivb
and
shlb
jmp
dec
inc
addr16
xor
insb
cwtl
push
clc
jnp
xchg
mov
rclb
inc
loope
inc
pop
js
lea
data16
mov
sar
push
jp
icebp
mov
mov
push
or
push
imul
push
test
sub
ds
ror
or
pop
sbb
push
jnp
lods
test
sub
clc
sbb
dec
inc
dec
cmpb
imul
sbb
rcl
ficomps
lcall
cmp
mov
iret
leave
add
pop
and
ret
sti
adc
or
insl
inc
lods
jnp
xchg
pop
push
xor
xor
push
xchg
ss
int3
jno
xlat
ds
mov
or
mov
call
inc
aas
repnz
xchg
cmpb
xorb
lods
pop
or
mov
shr
lret
movsl
pop
jle
cli
ret
cmpb
pop
dec
sbb
mov
rcr
mov
cmp
fldenv
add
push
sub
in
jge
rcll
sub
or
aas
ret
xchg
imul
mov
add
cli
addr16
xchg
in
push
cwtl
jmp
adc
scas
jo
sbb
shr
xchg
jno
iret
jmp
fldenv
pop
loopne
jl
mov
fistps
test
out
pop
mov
aaa
into
jb
adc
or
xchg
jns
mov
gs
sar
inc
daa
jmp
push
xchg
jbe
out
insb
jne
sub
dec
clc
dec
mov
test
test
dec
push
jnp
push
scas
scas
pusha
sub
push
setne
int3
aad
jecxz
fwait
xchg
loope
sbb
xor
xlat
dec
rolb
in
xchg
jae
push
decl
adc
rorb
arpl
cld
push
pop
and
sbbb
js
addr16
mov
or
push
add
mov
ret
or
add
addr16
jnp
arpl
test
pop
scas
cld
rorl
sahf
mov
andb
test
adc
cmp
dec
incl
inc
repz
sbb
dec
dec
scas
inc
pop
mov
or
aad
dec
out
and
add
out
and
mov
and
lcall
rorl
idivb
add
push
fcmovne
cmpsl
mov
repnz
pop
mov
aas
shrb
incb
call
scas
scas
cmc
test
jp
inc
mov
xor
xchg
andb
sbb
jbe
mov
setns
ret
mov
push
push
jmp
stos
dec
fists
rolb
out
jbe
adc
in
pop
push
add
stos
aas
xchg
repz
sarl
xor
xorb
fimull
repz
adc
inc
add
inc
daa
sub
jo
cmc
lods
add
test
loope
movsl
jbe
mov
jb
sub
inc
cli
adc
adc
xchg
pop
lea
repz
inc
xor
loope
xor
mov
and
inc
shlb
inc
ret
mov
sti
pop
cmp
fstl
out
ficoml
push
xchg
adc
lahf
pop
cmp
mov
pop
cmp
scas
inc
pop
js
or
shrb
mov
dec
adc
add
xchg
mov
js
loop
dec
jno
sqrtps
mov
mov
xchg
call
add
xorl
icebp
fwait
je
jmp
mov
xor
and
sub
pop
xchg
insl
cmp
jae
cmpsl
or
pop
test
push
sub
sub
or
rol
pop
cmpsl
push
stc
test
xchg
out
cwtl
ret
mov
mov
ds
mov
pushf
adc
jge
xlat
mov
sub
push
mov
or
mov
imul
out
mov
repz
enter
pop
nop
xchg
pop
outsl
leave
sti
add
add
stos
ret
sbb
fneni(8087
mov
xor
negb
jmp
out
sub
inc
addr16
mov
bound
mov
cli
push
push
clc
or
mov
pop
mov
push
icebp
popf
das
pop
fsubrs
inc
sbb
mov
xlat
push
sti
lods
inc
das
pop
jg
in
sub
xchg
aam
imul
push
adc
sahf
imul
ss
adc
pop
cwtl
and
test
cwtl
mov
repz
cmpsb
lret
lea
bnd
xchg
mov
ffree
xchg
jb
in
mov
adc
scas
in
push
inc
cmp
inc
jb
push
into
pop
push
loop
xchg
dec
lods
out
fcoml
push
bound
jbe
fcomip
and
ja
outsb
movsl
inc
addr16
and
push
in
cmc
mov
data16
subl
pop
mov
psubw
mov
fisubs
int
mov
pop
pop
ljmp
pop
jg
das
dec
and
mov
rolb
out
fcmovnbe
xor
ljmp
test
dec
ret
jo
call
outsb
mov
mov
pop
in
cmp
jno
and
stos
cs
incl
inc
sub
or
out
movsl
add
call
xor
test
xor
adc
push
dec
sahf
pop
sahf
cwtl
push
add
mov
mov
mov
fistpll
mov
jl,pn
mov
jmp
mov
aam
clc
lret
shrl
out
push
cltd
add
xchg
es
hlt
es
pop
xor
jp
dec
clc
fcmovnb
dec
sbb
jmp
ds
scas
out
loop
movsb
ljmp
in
mov
dec
pop
push
or
mov
dec
pop
out
xorb
lret
add
mov
call
xor
cmpsb
sbb
or
push
ljmp
iret
xor
mov
mov
add
mov
xchg
test
or
std
lods
repz
pop
ds
sub
scas
jns
jb
movsb
mov
push
idiv
pop
cmp
fldenv
addl
ret
je
inc
pop
es
rcll
test
sub
subl
loope
inc
mov
inc
fbstp
lds
leave
fiaddl
mov
and
adc
xchg
dec
push
mov
stos
jp
pop
jl
sbb
push
gs
xchg
movsl
push
xchg
sbb
dec
pop
mov
mov
fildll
insl
outsl
and
cli
pushf
stc
test
xchg
push
cltd
adc
push
pop
jmp
push
icebp
cltd
mov
sub
stc
ret
ret
sbbb
xor
roll
scas
ficoms
jmp
dec
inc
out
cmp
and
int
dec
sbb
add
jnp
fs
mov
fdivrs
popf
outsb
mul
shlb
ljmp
add
outsl
lahf
repnz
xlat
stos
xor
pop
pushl
push
sub
aaa
jle
mov
ljmp
mov
scas
in
xchg
loop
orb
pop
incl
sub
inc
orps
cmp
or
pop
fsts
movsb
jle
mov
repnz
or
ljmp
out
jmp
dec
xorl
fnstcw
aas
cmpsl
jnp
xor
jge
jo
jb
pop
add
je
sti
arpl
sub
int
aas
pop
dec
stc
jae
cli
cld
cmp
insb
push
lret
mov
jp
in
adc
mov
sbb
mov
xor
jno
ljmp
mov
rol
or
scas
fcoms
notb
insb
rsm
cmp
add
jecxz
mov
mov
scas
test
jg
inc
cs
imul
jb
push
fadds
iret
scas
add
scas
into
outsl
loope
mov
adc
xchg
jmp
in
fcomip
in
xchg
shlb
jmp
jno
jmp
sarl
sbbl
xchg
rcrb
ljmp
sub
mov
fwait
ja
rep
in
cmp
fsub
stos
dec
push
adc
fists
cwtl
and
aad
mov
in
shl
test
lods
nop
loopne
xor
xchg
and
call
mov
out
xlat
add
int
mov
mov
push
xlat
add
ljmp
pop
cmpsl
hlt
cmpsl
jp
cli
xchg
je
iret
pop
adc
aam
test
mov
dec
cld
mov
xchg
in
xlat
add
adcb
ret
push
test
xor
lods
add
imul
shl
xchg
sub
xor
ret
fs
inc
mov
gs
xor
push
fcoml
mov
inc
sarl
mov
or
into
and
adc
mov
dec
aaa
xchg
repz
jecxz
xchg
dec
pop
cwtl
lods
icebp
sbb
std
popf
push
pop
xchg
xor
sti
adc
push
cmpsb
rclb
lock
aaa
xlat
and
jp
xchg
test
jp
xor
xor
push
jo
inc
ljmp
adc
cmp
xor
inc
xchg
fdivs
mov
lret
nop
jmp
or
xor
pop
mov
roll
jno
add
out
xor
test
cwtl
lds
and
mov
iret
cltd
push
adc
mov
sahf
call
adc
hlt
jae,pt
jo
adc
fs
inc
stos
jmp
xchg
fwait
mov
pop
jg
es
jne
push
imul
aaa
mov
call
dec
jecxz
lret
mov
xor
out
out
aam
xor
hlt
sub
inc
pop
mov
push
lods
push
mov
push
push
or
lret
sub
shrl
adc
adc
xchg
pop
xchg
pop
jecxz
dec
imul
dec
ficoml
fldl
loop
push
cmp
mov
mov
lods
add
mov
xchg
cs
daa
mov
push
mov
push
push
push
mov
jae
mov
dec
les
or
shll
jmp
xchg
xor
mov
int3
inc
sbb
subl
mov
in
mov
in
scas
adc
in
popf
sbb
mov
mov
out
leave
mov
cli
dec
aad
in
pop
idivb
push
pop
push
mov
pop
jb
test
jg
outsb
ja
fistpll
xchg
call
test
sbb
xchg
and
mov
filds
mov
mov
subb
data16
orl
lds
fs
add
outsb
sub
clc
sbb
add
out
push
lea
inc
xchg
and
push
mull
fidivrl
movsl
push
pop
adc
pop
sub
int3
xchg
test
dec
inc
jne
mov
cmpsl
xor
cmp
adc
jg
xlat
fisubrl
dec
push
int3
mov
mov
or
adc
pop
push
mov
fwait
decb
jl
mov
ljmp
popf
mov
mov
mov
mov
mov
int
std
fldln2
loopne
mov
mov
jg
jmp
cs
inc
xchg
add
adc
push
mov
jmp
aas
pop
push
jmp
aad
pop
mov
cmp
xchg
push
and
sbb
aam
insl
mov
stos
pusha
jns
add
scas
sub
xchg
out
fs
mov
icebp
repz
mov
ffreep
imul
mov
insb
xor
fbstp
ret
jmp
outsb
mov
push
mov
pop
lock
mov
lahf
mov
dec
out
push
into
fadds
aam
sub
fcmovnbe
stos
mov
jg
and
cmpsb
or
xchg
inc
movsl
mov
sqrtss
pop
lock
subl
sbb
cld
rolb
jae
call
xchg
and
jle
fmull
fstpt
push
test
sub
scas
aam
cmp
clc
cmp
cmp
jecxz
leave
clc
arpl
pop
dec
loope
push
int3
and
jmp
inc
inc
test
es
pop
daa
mov
pop
iret
add
movsb
push
jl
cmpsl
jl
mov
loop
mov
pop
and
dec
xor
adc
fwait
push
es
lret
pop
mov
inc
mov
ret
pop
fdivl
lret
inc
addb
sbb
out
pop
mov
je
scas
out
lods
fdivr
dec
lods
lcall
mov
add
das
jmp
js
popa
scas
lahf
out
sbb
test
les
or
mov
dec
pop
add
adc
mov
les
jecxz
mov
negb
inc
dec
push
lahf
add
mov
ds
inc
xchg
lock
pop
pop
std
movsb
repnz
ja
push
pop
cld
sub
or
push
adc
sbb
lret
in
stos
push
cmpsb
inc
cmp
jp
int3
js
mov
mov
mov
int
dec
adc
add
out
addr16
sbb
mov
lea
test
jl
adc
bound
cmpsl
mov
mov
rolb
mov
xchg
data16
push
mov
mov
pusha
daa
jle
push
add
and
fsubrl
call
jo
arpl
lret
sahf
mov
ret
sub
push
insl
dec
pusha
lds
inc
scas
rolb
lea
sbb
jno
cmp
push
aas
jns
dec
and
mov
jno
adc
sbb
fs
stos
pop
in
push
les
lret
push
test
xchg
inc
outsl
jbe
iret
sbbb
ds
rclb
mov
ret
jns
nop
es
xor
xchg
fxch
push
inc
lcall
insl
xlat
imul
add
cld
scas
push
mov
pop
mov
imull
divl
stos
ret
push
jbe
gs
pop
dec
mov
push
ret
fmulp
mov
push
iret
adc
jmp
xchg
jb
push
loop
jne
and
pop
or
leave
mov
aas
xor
jne
out
mov
popa
invd
jge
es
ljmp
out
sti
incl
push
cwtl
pop
dec
shlb
dec
xchg
loopne
inc
jbe
adc
jo
cmp
adc
mov
pop
dec
cmp
fsubrl
cltd
xchg
fldcw
movsb
mov
mov
jp
sub
scas
out
jl
push
imul
xchg
in
aas
dec
test
subl
xorl
fdivs
test
pop
scas
sub
sbb
dec
movsb
and
inc
mov
mov
not
jne
mov
movsb
sub
sub
fisubrl
insb
mov
mov
adc
cmp
addr16
jg
push
mov
pop
fwait
bound
lcall
add
adc
notl
mov
dec
add
dec
shrb
loopne
cltd
lods
cwtl
scas
xchg
inc
mov
loope
xorb
loope
enter
cmp
adc
pop
pushf
mov
into
jl
pop
loopne
sbb
call
lret
add
mov
mov
xchg
cmpsb
rcrl
adc
ret
testb
jb
out
cld
add
xor
pop
in
out
cld
xor
pusha
mov
mov
pop
aaa
in
arpl
pushf
popf
inc
lahf
out
cwtl
repnz
and
test
xor
in
loopne
pop
fs
in
or
push
xchg
sub
sbb
in
mov
lock
test
lret
ljmp
bound
push
jbe
dec
push
push
inc
mov
dec
push
jmp
dec
adc
bound
cs
lods
imul
cld
js
fsts
jmp
cmpsb
fiadds
or
jge
jmp
push
test
rclb
dec
mov
int
mov
mov
out
mov
inc
fsubs
adc
hlt
add
popf
adc
sti
add
pop
iret
xor
lds
scas
ljmp
fwait
and
cmp
cmpsl
xorb
lcall
sbb
icebp
jle
fs
insb
pusha
fmulp
out
push
xor
or
clc
cmp
pop
faddl
mov
sysexit
std
mov
mov
pop
jno
adc
cli
push
xchg
notl
or
inc
inc
adc
mov
push
imul
mov
pop
sbb
outsb
add
cwtl
sbb
or
aam
movsb
cltd
jl
push
xor
mov
data16
mov
cltd
sub
xorl
mov
imul
mov
push
jne
das
scas
daa
ja
dec
mov
fistpl
movsl
rcrb
jno
dec
xchg
addr16
aam
imul
mov
testb
dec
jb
std
xor
sbb
mov
add
mov
mov
or
das
bound
mov
inc
xchg
cmp
xchg
jle
xchg
pop
int3
lret
xor
fidivrs
icebp
lds
cld
and
andb
shrb
mov
mov
mov
pushf
mov
inc
mov
clc
push
push
decb
mov
add
cmp
fnstcw
aaa
cmpsb
lahf
cmp
faddl
cmp
fwait
inc
add
push
inc
int
pusha
or
cmpsb
sahf
push
ret
inc
cli
push
ret
cmp
xchg
call
call
ret
jmp
inc
stc
movsb
mov
xorb
movsb
xor
decb
jle
setne
inc
mov
push
repz
ljmp
mov
pop
jecxz
pop
fdivp
mov
xorl
mov
mov
lea
loope
sbb
addb
pop
xchg
pop
lret
mov
and
fs
xor
lea
push
add
div
push
jecxz
adc
mov
push
xor
dec
xchg
setns
loop
jle
jo
adc
jae
pop
iret
or
xchg
stos
xor
dec
dec
pop
out
es
test
lahf
stc
cli
mov
inc
ljmp
or
xlat
clc
xchg
jge
jnp
jmp
insb
mov
fildl
daa
int
loope
rorb
xchg
icebp
les
in
xchg
and
adc
lods
add
add
inc
pop
pop
fistpl
mov
dec
xchg
cmp
and
jo
lcall
cmp
repz
jae
cmc
pop
hlt
out
mov
cmpsb
scas
and
fadd
push
push
ja
imull
dec
pop
cmpb
sub
fisubrl
aaa
adc
aad
mov
fsubp
jge
mov
sahf
xor
outsl
lods
push
cltd
inc
lret
outsl
push
pop
jae
inc
mov
nop
sahf
nop
inc
pop
ret
sub
sbb
daa
jecxz
mov
fwait
repz
les
xchg
jno
sbb
mov
lock
jno
sub
mov
sub
aam
lahf
fcmovu
int3
negl
push
lds
loop
insl
dec
add
adc
add
fs
out
push
aad
loop
dec
push
mov
mov
ljmp
mov
jge
or
mov
mov
out
ja
imul
and
and
or
xchg
xchg
ret
ljmp
loopne
pusha
pop
loope
push
movsb
mov
jne
dec
and
dec
outsl
es
jbe
pop
or
fimuls
pop
pop
std
mov
mov
fdivrl
repz
jo
out
mov
lahf
ret
push
mov
cmpsl
jbe
cli
and
push
mov
dec
mov
mov
in
scas
push
pop
add
std
lcall
xorl
push
jo
jo
jns
mov
out
scas
pop
repz
and
jne
lret
incl
mov
inc
jns
out
inc
adc
sub
dec
mov
mov
dec
xor
inc
inc
pop
inc
loope
shll
movsl
pop
sti
sbb
cmp
push
negb
inc
jbe
jae
fisubs
cld
cltd
jge
loopne
fdivl
mov
sub
jl
dec
xchg
mov
and
popa
xlat
cmp
push
iret
pop
jg
cmpb
test
icebp
mov
dec
mov
push
sbb
xchg
enter
sub
dec
push
mov
insl
fdivl
neg
and
sub
scas
enter
ficomps
cmp
push
in
add
dec
push
jg
subb
sub
adc
stos
jge
cmp
aaa
and
fisubrl
jl
mov
loope
pop
dec
adc
imul
leave
xor
nop
out
lret
add
jae
xor
es
lea
subb
pop
addr16
ja
sahf
inc
push
add
mov
and
in
repnz
mov
iret
mov
jno
mov
mov
outsb
sbb
dec
push
push
fstps
xor
flds
stc
adc
xchg
xor
inc
xor
mov
xor
adc
gs
test
data16
mov
loope
in
xor
std
mov
push
iret
hlt
adc
mov
sub
inc
cmp
loopne
jae
xor
ror
jle
or
shrb
mov
cmp
nop
call
xchg
nop
ret
icebp
xchg
sub
fistl
sbb
insb
stos
cmp
mov
fstpt
call
cmp
mov
stos
sbb
sbb
pushl
mov
fiaddl
sahf
movsl
roll
insl
mov
fmul
jo
daa
cmp
fmull
xchg
inc
popf
push
mov
cltd
stos
mov
fprem1
cli
cmp
xchg
mov
inc
pushf
or
xor
in
sbb
aas
push
add
jl
lods
js
pushf
push
pop
ljmp
cmp
loop
mov
mov
cmc
adc
adc
pop
test
divl
cmp
addr16
rcll
mov
imul
loope
sub
cmp
pop
outsb
adc
clc
insl
pusha
fists
and
shlb
adc
add
movsl
iret
mov
and
std
aam
int3
mov
in
mov
ds
aad
sbb
in
mov
dec
scas
sub
add
or
xor
fdivs
sub
adc
fs
in
push
test
pop
pusha
int3
sti
testl
xor
loop
adc
lods
cmp
inc
jns
je
ret
mov
dec
pop
fs
adc
pop
rolb
fwait
mov
pusha
push
les
aas
lret
imul
sbb
inc
int3
enter
dec
pop
cwtl
push
dec
cltd
aas
ret
fs
xchg
adc
in
sbb
or
int3
orl
xor
test
sbb
stos
push
mov
ja
test
sub
ds
loop
jnp
dec
in
aam
xchg
sbb
adc
out
popf
xor
inc
cld
in
mov
mov
popa
roll
and
lret
arpl
jae
sarl
mov
mov
leave
add
sub
add
push
repnz
sbb
push
sub
pop
and
inc
mov
in
jno
scas
in
xchg
xchg
dec
dec
loop
and
inc
mov
and
sbb
pop
rcrw
xchg
icebp
push
sbb
mov
js
add
jge
mov
mov
cmp
das
sub
push
cmpsl
mov
inc
cmc
out
out
jns
mov
cs
js
mov
mov
and
loop
lods
ret
push
repnz
xchg
mov
cmpsb
adc
pop
aad
xor
insb
adc
repnz
adc
icebp
sti
pop
dec
mov
xor
mov
cmp
add
jnp
xchg
push
scas
bound
outsb
pushf
xchg
sets
cmpsb
xchg
mov
mov
cmpsb
inc
roll
or
sub
sub
lret
jae
sub
jb
ljmp
es
push
stc
sahf
neg
lea
fsubs
iret
mov
out
gs
ss
repnz
rclb
push
xor
movsl
xchg
lahf
test
mov
sub
push
jecxz
rorb
sbb
fldl
push
outsb
cmp
lret
cmc
adc
cmp
and
fs
xchg
inc
xchg
fldcw
lret
lock
dec
enter
sub
pop
lods
fcoml
adc
in
push
mov
or
xor
adc
iret
mov
and
sub
fbld
inc
movsl
rcl
orb
push
add
adc
inc
inc
sub
nop
lods
aad
add
hlt
sar
dec
xor
cmc
mov
jp
mov
xor
int
or
xchg
sbb
push
mov
movsl
inc
sbb
je
push
shlb
or
cltd
xor
xchg
rclb
aas
shll
loop
lock
mov
cmp
in
pop
out
sbb
aad
lret
pop
or
pop
test
loope
stc
lods
jno
cmpl
call
cmpsb
and
sbb
xor
pop
adc
int3
jmp
out
add
fiadds
and
pop
add
xchg
sub
dec
das
pop
jg
cmp
mov
pop
dec
dec
pop
add
sbb
xchg
jmp
scas
jnp
js
sbb
aas
aas
pop
lods
sub
jb
loopne
insl
jge
ret
in
xchg
mov
adc
push
xchg
cld
cmpsl
lods
shll
outsb
cli
lret
lret
xchg
jle
out
idivl
pop
gs
xor
pop
fwait
pop
push
sbb
lds
jns
cld
xchg
aam
fldt
scas
int
and
inc
scas
rorl
out
les
dec
enter
adc
add
mov
ds
sub
jl
sub
fwait
lea
fmuls
fsubrs
sti
insb
inc
add
test
outsb
loopne
add
pusha
lcall
imul
popf
cld
push
bound
push
dec
cwtl
cld
pop
sbb
cli
mov
addr16
sahf
sbb
stos
push
test
test
data16
xchg
mov
rcll
inc
xchg
lret
jns
sub
cmp
mov
cmp
and
xchg
lods
leave
mov
jmp
jne
divl
jge
std
gs
pop
cmp
stc
out
cltd
fisttps
add
imul
hlt
sub
jno
xchg
sbb
mov
shrl
mov
bound
mov
add
sbb
jno
fwait
cmc
cmpsl
nop
sbb
imul
and
ret
sub
cmpsb
jg
xchg
dec
bound
inc
rol
jl
cmp
test
push
and
cs
cmp
pop
das
bound
mov
aas
jge
add
or
push
sub
cld
mov
pop
outsl
add
punpckldq
dec
lods
shlb
push
xchg
push
dec
fisttpl
add
pop
sub
mov
idivl
movq
sbb
dec
addr16
push
or
sbb
stc
add
imul
push
mov
jle
loopne
test
fistpll
test
and
call
rorb
aas
mov
in
daa
adc
ds
scas
xlat
push
aaa
shl
fstpt
fwait
adc
cmp
jge
out
sub
adc
rolb
push
lahf
out
xor
movsl
push
inc
xchg
sub
inc
mov
sbb
sub
mov
sbb
mov
in
inc
cmp
adc
mov
adc
divl
or
cmp
mov
mov
jnp
jbe
sbb
imul
dec
stos
scas
pop
insl
lods
jne
das
push
inc
and
add
dec
stos
popf
leave
bound
mov
pop
mov
repz
scas
fwait
clc
push
movsb
xor
mov
sbb
sub
into
xor
sbb
aas
pop
test
and
and
fidivrs
xchg
xor
insb
cmp
int
jle
sahf
pop
mov
dec
pop
jno
loopne
cmp
xor
mov
or
in
fwait
enter
ret
loope
mov
sbb
mov
fldcw
clc
xchg
or
cld
aam
roll
movsl
inc
fnstcw
add
jae
and
add
inc
sahf
adc
push
cmp
jecxz
mov
sub
das
sub
sub
jae
mov
icebp
jns
mov
test
xchg
stc
or
mov
sub
pop
push
push
mov
xor
push
fmul
std
icebp
xor
scas
maskmovq
imull
inc
xchg
dec
push
jbe
lods
inc
push
je
stos
std
mov
mov
xor
stos
dec
lock
jae
orl
scas
and
inc
push
mov
sbb
mov
in
sbb
int3
jg
dec
stc
out
test
loope
leave
jbe
negl
add
andb
lret
dec
dec
cmpsl
cli
or
sarb
add
stos
or
test
ret
cwtl
mov
mov
pop
add
xchg
push
mov
outsb
cmp
pop
insl
inc
popa
mov
xor
pop
sub
inc
and
push
aas
adc
jne
jnp
sbb
stos
rdpmc
ficoms
movsl
jmp
fs
ljmp
sub
paddsb
sub
add
mov
je
or
mov
in
jecxz
cmp
test
js
lock
add
icebp
cmpsb
push
shlb
jmp
or
jb
ret
jno
sbb
push
push
shrl
cs
mov
dec
ror
arpl
jg
lods
mov
and
test
out
pop
das
jp
adc
into
int3
cld
nop
xchg
stc
shll
pop
and
shrl
aas
adc
stc
mov
lahf
fsubrs
cwtl
jmp
mov
pop
jo
rclb
mov
sub
fnstenv
jl
fnstenv
mov
xchg
push
int
mov
add
add
dec
mov
add
fdivrs
inc
lret
adc
insb
cmp
inc
test
outsl
pop
xchg
pop
mov
aam
xchg
dec
clc
xchg
nop
lahf
pop
mov
divl
and
fsubrl
dec
adc
inc
mov
push
in
mov
icebp
addr16
add
lods
inc
or
ja
notl
mov
loopne
xor
sub
lahf
dec
push
dec
xchg
enter
sbb
pop
scas
enter
cs
loope
scas
sbb
movb
jecxz
lcall
dec
mov
dec
shll
push
test
jne
fwait
mov
adc
xor
fnstcw
lret
aas
cmc
hlt
xor
out
jns
xchg
call
xor
sbb
inc
js
push
aaa
pop
push
cmpsb
mov
push
popa
or
adc
sub
or
int
lahf
mov
std
or
sub
js
mov
mov
fiaddl
hlt
jmp
inc
enter
mov
test
pop
sbb
call
int3
into
repnz
andl
clc
pop
inc
jno
jns
mov
jmp
rdtsc
cmp
push
inc
jbe
insl
cmpsl
nop
pusha
jb
mov
bound
fildll
and
lock
in
fldl
inc
addr16
mov
xchg
dec
cmp
push
stos
xor
cmp
sub
xchg
iret
daa
and
or
ret
pop
inc
imull
test
jl
jle
jecxz
cmc
jge
inc
adc
mov
sub
pop
loopne
movsb
cwtl
sub
add
sahf
mov
dec
dec
add
es
dec
retw
push
adc
ljmp
lods
iret
push
mov
mov
or
mov
push
scas
mov
push
enter
sbb
adc
cltd
push
aam
jmp
notb
sbb
pop
mov
xor
xchg
xchg
stos
dec
add
sub
clc
nop
or
imul
jb
jg
jbe
jmp
dec
rolb
inc
dec
sub
mov
push
xor
in
add
insl
mov
xchg
dec
insl
outsl
xor
sbb
sub
jb
xchg
leave
sub
jecxz
xor
and
add
mov
and
pop
sub
pop
or
pop
in
cmp
cmp
cld
testb
imul
pop
and
xlat
cmp
cltd
loopne
xor
ret
cmp
and
sar
pop
jge
lods
clc
xchg
xorb
mov
sar
mov
sub
pop
inc
aad
push
dec
cmpsb
add
fcompl
adc
pop
ss
jge
mov
add
into
sar
dec
and
mov
sbb
inc
xor
ja
mov
mov
cmp
mov
out
adc
or
scas
push
pop
and
pop
or
dec
popa
les
and
fcoml
mov
sbb
pop
inc
inc
loope
mov
lret
dec
mov
mov
lock
cmpsb
adc
sar
movsl
mov
push
and
dec
sbb
sbb
inc
inc
mov
xor
cmp
mov
mov
push
pushf
pop
test
mov
xchg
mov
sahf
dec
dec
jo
gs
cld
insl
test
sti
jmp
hlt
sub
cmpsb
cmp
jecxz
rolb
inc
jns
pop
mov
push
pop
sbb
sub
mov
push
sbb
pop
enter
xchg
fcomps
xchg
jne
vpmulhuw
icebp
add
and
fcompl
lds
insb
mov
add
int3
mull
jge
je
mov
sub
push
je
je
xchg
sub
inc
lods
adc
inc
sbb
xchg
inc
inc
stos
push
mov
movsb
cld
dec
or
xchg
das
or
lea
outsb
movsb
jl
mov
imul
aas
notl
inc
shld
adc
adc
xor
stos
mov
outsl
cmc
dec
sub
out
es
xchg
push
pusha
inc
pop
cmp
shrl
pop
cmp
pushf
or
out
aaa
mov
sarl
push
sbb
lock
dec
pop
inc
push
xchg
enter
dec
fistps
or
xchg
and
sbb
fnsave
dec
outsl
mov
lcall
cmpb
mov
adc
adc
dec
push
enter
sbb
cmp
jnp
int3
push
popa
arpl
sub
pop
rorl
push
fst
adc
or
rorl
push
pop
mov
jl
shrb
cmp
lea
xor
inc
aad
mov
fadds
add
es
xchg
sbbb
jmp
pop
adc
addr16
lcall
mov
addb
idiv
fmull
cltd
xchg
stc
outsb
mov
aas
and
je
mov
lahf
jge
test
inc
leave
xchg
or
fstl
mov
jmp
fsub
pop
lret
fdivs
mov
dec
bnd
pop
sbb
push
mov
cmp
leave
xchg
pop
popa
push
cmc
or
pop
and
daa
aad
std
sub
mov
ret
cmp
sub
jl
cmp
xor
adc
enter
arpl
push
pop
or
mov
enter
fsubs
in
jg
sbb
aad
xor
in
insl
sub
xchg
les
push
aad
aaa
mov
lcall
dec
jne
jnp
fstpl
or
jae
jo
int3
ficoms
loop
repnz
lds
cmp
shl
mov
in
cwtl
ja
imul
xor
out
fsub
xchg
nop
orl
mov
outsb
dec
inc
movsl
dec
cmp
mov
mov
out
fcmovu
mov
je
movsb
lahf
enter
test
daa
xor
repz
mov
mov
ss
xchg
xchg
cmpsb
inc
add
sbbb
or
mov
fsubl
movsb
push
xchg
sbb
cmp
mov
imul
and
xchg
fisttps
fucomp
vxorps
xor
xor
mov
sti
ds
mov
sbb
repz
cmp
sbb
scas
sbb
repz
mov
dec
xchg
sub
stos
lret
hlt
inc
mov
adc
ja
pop
dec
fisubl
outsb
clc
jp
add
sub
jle
xor
xchg
jbe
outsb
ret
jl
inc
in
jb
and
jo
aas
xchg
rcrb
dec
movd
push
cmp
adc
push
jge
mov
push
sbb
or
rcll
inc
pop
push
push
clc
stos
movsb
sub
cmpsl
insb
pop
sahf
out
push
jae
decl
test
xchg
fildll
stos
pop
out
stos
ljmp
fiadds
mov
push
faddl
dec
add
or
add
testb
test
xor
or
sub
push
add
sub
push
inc
mov
gs
mov
xchg
or
lret
out
jo
cwtd
or
iret
jmp
pop
hlt
or
push
insl
std
in
hlt
sub
stc
jae
mov
mov
cmp
in
out
aam
js
bound
inc
sbb
test
xor
cwtl
jno
push
aad
sbb
mov
decb
pop
adc
add
popa
and
mov
push
cld
lahf
rcll
and
lock
bswap
jnp
push
jmp
cmc
push
add
pusha
pop
mov
and
add
loope
push
mov
jle
mov
pusha
shlb
cmpl
inc
push
mov
ljmp
jle
push
iret
rclb
pop
lret
dec
in
push
arpl
add
mov
mov
pop
lret
pusha
inc
add
cmp
stc
idiv
bnd
jae
rolb
pop
sub
xchg
add
js
sbb
idivb
and
xor
cmp
nop
lret
mov
dec
sbb
into
out
xchg
push
int3
push
jl
mov
sbb
lahf
inc
movsl
inc
fcomp
xor
dec
call
push
loop
lods
enter
dec
inc
cmc
sub
iret
push
test
pop
js
push
je
push
dec
adc
add
push
push
repz
outsl
rcll
not
pop
push
lahf
cmpsb
cmp
xchg
jp
shlb
or
aad
test
arpl
and
mov
cli
adcb
sbb
gs
out
hlt
stc
add
push
add
lret
sbb
mov
push
pop
and
push
xchg
mov
and
mov
xchg
ret
jnp
sbb
mov
jbe
movsb
fcmovne
lar
mov
cmp
dec
dec
dec
inc
jb,pt
sub
jo
in
fsubl
icebp
sbbl
jge
adc
aad
xchg
dec
mov
add
jp
pop
rclb
push
add
xlat
scas
cmpsb
inc
dec
pop
xchg
pushf
add
outsb
inc
test
push
inc
jmp
arpl
cld
data16
jmp
leave
data16
cmp
dec
adc
lods
cwtl
loop
int
inc
and
ss
mov
fs
adc
cwtl
mov
out
cmpsl
aam
mov
push
mov
shrl
xor
jno
test
xor
repz
insb
cld
push
cltd
clc
pop
xchg
imul
aas
push
je
xchg
icebp
xor
push
lds
test
and
xor
fsts
xchg
clc
gs
or
add
in
clc
mov
adc
dec
pop
in
scas
mov
push
adc
adc
cmp
lret
xor
sub
aaa
icebp
fbld
inc
nop
sub
push
push
jecxz
fucomp
or
punpckldq
jg
int
xchg
push
sahf
popf
mov
jae
int3
out
inc
in
cmpsb
fbld
shlb
cmpsb
fcmovnbe
aad
out
sbb
movsb
out
mulb
in
cmp
sub
mov
dec
fcoml
ret
jg
not
mov
sub
mov
stc
add
addr16
sbb
out
insb
insb
sbb
ficoml
push
movsb
mov
js
mov
into
jbe
mov
orl
push
mov
sub
outsl
fisubrl
or
test
mov
xchg
push
out
mov
push
xchg
sahf
in
scas
mov
jle
dec
divb
sar
int
inc
xor
out
jno
xlat
pushf
and
pusha
pop
rcr
ljmp
iret
sti
jge
jmp
sbb
dec
push
adc
jg
mov
push
adc
mov
fnsetpm(287
flds
fs
jmp
rcrb
fadd
mov
mov
xlat
pop
pusha
outsb
cmp
xlat
ds
test
push
push
test
imulb
repnz
fwait
mov
movsb
stos
gs
mov
sti
scas
push
sub
in
pop
xchg
mov
insl
pop
mov
push
xor
popa
xor
repz
ret
sub
jae
mov
idivb
and
mov
add
mov
sbb
jae
sub
stos
outsb
fstl
dec
or
push
mov
cmp
es
xor
jge
push
sbb
or
iret
push
push
popa
mov
mov
scas
movsl
mov
push
sbb
lret
add
sti
cmp
dec
lcall
jmp
mov
scas
xchg
pop
cmpsl
es
cmp
ret
faddl
fcoml
scas
inc
nop
jo
sub
xchg
sbb
es
mov
dec
out
dec
mov
lds
pop
mov
mov
adc
cmp
inc
xchg
inc
mov
cmp
test
jge
xchg
add
add
mov
out
inc
cmp
pop
xor
test
jmp
adcl
out
pop
or
push
inc
popl
or
mov
aaa
mov
subb
test
add
mov
mov
pop
jecxz
or
in
gs
scas
pushf
jno
shlb
dec
loopne
cmpsb
cmp
movsl
ret
mov
inc
jecxz
dec
shrl
jmp
out
mov
insb
push
jb
cli
cmpsb
pushf
aaa
fldl
call
xchg
sbb
jmp
mov
xor
inc
insl
into
movsb
add
pusha
cmp
rolb
repnz
jae
sub
in
mov
fldenv
ficompl
inc
shll
or
jnp
inc
sub
dec
xor
adc
data16
dec
jbe
movsl
iret
xlat
outsl
adc
inc
adc
fsubs
dec
and
cs
mov
mov
out
hlt
inc
ror
pop
jmp
or
cmp
and
push
shll
xchg
pop
test
jg
outsb
dec
enter
mov
stos
jmp
add
into
cmp
mov
inc
mov
sarw
lahf
sti
pop
jb
fsubrl
cmpsl
push
or
into
dec
pushf
mov
sbb
mov
jo
das
push
push
enter
mov
jg
xchg
jb
outsb
out
mov
jns
fadds
lahf
and
mov
sbb
and
mov
inc
push
sub
dec
mov
lret
jbe
mov
in
popf
inc
jmp
lea
int3
leave
inc
xor
sub
jg
mov
and
cmp
xor
xor
dec
sbb
decb
pusha
jae
adc
xor
xchg
pop
dec
repnz
sti
test
jl
xor
repz
sub
inc
pop
push
mov
adc
mov
dec
push
mov
movsb
cmc
orb
aaa
or
dec
or
test
fdivs
test
mov
sub
cmpsl
push
adc
ret
fcmovu
popf
movb
adc
lahf
or
or
xchg
jecxz
cmp
aas
jmpw
test
int
inc
xlat
dec
sahf
push
pop
xchg
fwait
arpl
xor
ret
in
mov
push
and
pop
jp
cmp
rcrb
and
stos
xor
mov
fldcw
dec
std
jge
or
inc
mov
mov
into
fadds
inc
jno
arpl
in
call
inc
shlb
mov
cmp
fisttpll
shlb
call
dec
pop
jecxz
mov
js
jae
aam
scas
xor
mov
in
cmpsl
pop
loope
cmp
filds
pop
mov
xchg
addr16
movb
xchg
loop
iret
daa
mov
cmp
pop
and
out
stc
push
lods
fs
test
cwtl
call
xchg
or
ja
mov
mov
mov
dec
js
xchg
ret
addr16
pop
ret
adc
jno
fs
test
int
xchg
movsb
fists
pop
jae
mov
addl
pop
out
add
push
nop
inc
mov
inc
popa
add
and
scas
out
pop
mov
inc
test
stos
faddl
adc
cmp
cmp
inc
push
adc
push
in
stos
les
adc
pop
mov
mov
std
shlb
faddp
sahf
or
mov
fisttps
sti
dec
cmp
scas
xchg
fs
adc
lea
push
daa
repz
and
scas
xor
add
ret
lret
pop
inc
push
lods
sahf
into
push
fdiv
inc
fsubrs
push
xor
pop
push
stos
jle
push
out
jle
addr16
inc
stos
cmpsb
int3
or
pop
dec
movb
js
pop
push
dec
or
negb
cmpsl
out
sub
adc
push
fidivrs
jecxz
pop
or
xchg
cwtl
bound
dec
out
mov
fcmove
sbb
sbb
mov
push
xor
sbb
cmp
popa
pop
pusha
pop
notb
adc
aas
scas
cmp
xlat
dec
sbb
setbe
ds
sub
jge
test
pop
xchg
cmpsl
pop
jno
mov
push
jb
xlat
jp
mull
out
lcall
xlat
mov
push
mov
ret
rorb
cmp
stos
ficoml
shld
cmp
or
fidivrl
fucom
xchg
cmp
lret
push
movsb
xlat
cld
insl
sbbl
pop
test
les
movl
aaa
xor
or
or
jbe
daa
dec
jb
or
dec
leave
aad
push
adc
dec
mov
xchg
dec
xor
sarb
push
fbstp
push
inc
stos
mov
inc
pop
add
xchg
push
dec
dec
aaa
jae
jl
bound
or
or
sub
jo
imul
je
subb
imul
rcrb
sbb
cli
leave
pop
push
mov
cmp
ret
iret
and
inc
and
imul
xchg
mov
mov
sub
ds
dec
mov
repz
mov
aam
outsl
or
cli
mov
sbbl
pop
sbbl
dec
xor
addr16
add
push
jle
add
shl
dec
cld
mov
hlt
popf
int3
jo
repnz
add
in
sbb
mov
adcb
ljmp
jbe
and
jg
or
cmc
sbbb
daa
fs
je
push
mov
aas
es
pop
gs
orb
sbb
xor
jecxz
mov
inc
fimuls
je
mov
xchg
add
pop
sbb
cmpsb
pop
push
repnz
cmp
push
push
insb
sbb
pop
rcr
dec
dec
daa
out
lahf
sahf
repnz
ficompl
inc
lods
dec
add
push
scas
daa
push
out
int
data16
bound
mov
inc
xlat
cmp
xor
aam
sbb
rol
xor
pop
and
sti
movsl
mov
xor
fsubr
and
rcrl
push
or
ret
out
mov
out
ja
mov
mov
sbb
lock
jecxz
cli
sub
lods
in
pop
pop
push
dec
aam
xchg
jbe
fadds
sbb
jl
cmc
ret
adc
cs
push
outsb
fmul
sub
mulb
xor
mov
call
xor
xor
shrb
sbb
shll
mov
loop
lret
rorl
sbb
shl
imul
lods
lods
test
les
fcompl
xchg
mov
mov
pushl
cmp
add
hlt
sbb
sbb
push
xchg
rol
xor
adc
gs
icebp
sbb
mov
inc
and
cmpsb
xor
dec
jle
repz
add
jns
scas
subb
jl
mov
cmp
bnd
rorl
lock
das
imul
sarb
add
jmp
mov
popf
dec
add
add
ja
in
mov
test
push
push
or
iret
stos
orb
xorb
xchg
bound
jae
sti
repnz
data16
or
or
push
jge
ljmp
fs
mov
sarb
movb
lahf
in
or
dec
pop
pop
sbb
jae
push
jle
test
sbb
xchg
mov
sub
lret
lret
pop
jle
mov
push
add
rcr
add
int
jp
inc
add
rcll
jge
push
aad
inc
cli
dec
shll
imul
xor
sub
cmp
xchg
and
dec
jmp
test
push
sub
gs
shlb
testl
dec
mov
mov
addr16
out
je
jp
addr16
dec
jg
dec
shr
fs
inc
sti
adc
sbb
pop
pop
ja
cmp
jns
mov
sbbl
into
gs
push
and
dec
mov
jnp
lods
mov
ja
jle
add
pusha
fdivs
pop
pop
into
push
jge
mov
mov
dec
sub
mov
push
xchg
or
mov
dec
in
ds
cmpsl
mov
notl
inc
mov
fiadds
sahf
xor
aad
rolb
sbb
and
cmp
pop
dec
test
jg
mov
push
aas
adc
data16
sbb
push
stos
xor
call
ret
cmp
xchg
cld
addl
jmp
clc
js
xor
sbb
insl
shl
ret
dec
mov
test
lret
cmc
inc
test
jnp
inc
inc
shl
pop
xor
andb
push
fdivl
xor
jno
or
sub
sub
ja,pt
mov
sbb
aad
sbb
adc
push
jl
lods
cmp
xchg
mov
jecxz
sbb
sbb
inc
adcb
jo
pop
jp
roll
adc
pop
xlat
negl
inc
add
inc
sbb
or
mov
inc
xor
jb
add
mov
push
je
pop
outsb
inc
cltd
in
in
jno
fwait
xor
fwait
xchg
jg
sub
pushf
lret
inc
pushf
or
das
dec
adcb
sbb
and
dec
jnp
push
mov
clc
testl
and
adc
leave
sahf
add
int
out
cwtl
cli
insb
daa
lods
dec
mov
jnp
ss
dec
inc
sub
ja
fwait
and
lahf
fldenv
ds
mov
jno
in
cmp
add
daa
sub
in
test
adc
mov
enter
daa
lods
ja
xchg
push
lret
fistl
leave
lahf
fwait
sbb
mov
cmpsl
and
scas
mov
adc
outsl
rep
add
pop
mov
xor
mov
push
jl
push
data16
mov
mov
or
in
sub
fdiv
movsb
test
cmp
mov
xchg
cltd
clc
rclb
xor
pop
or
pushf
jmp
adc
loop
popa
loop
xor
aam
int
sub
adc
iret
aad
mov
push
fwait
divb
dec
xchg
mov
subl
push
inc
pop
inc
mov
push
pop
pop
pop
ljmp
fsubp
test
testl
lret
sahf
push
pop
jnp
inc
adc
sub
ds
pop
cltd
jle
xor
out
add
testb
pusha
in
loope
ljmp
and
jns,pn
pushf
iret
lea
lcall
push
pop
inc
icebp
pusha
scas
je
jmp
push
add
adc
js
jno
mov
xor
pop
in
inc
lret
or
jnp
into
push
les
rol
aaa
inc
pusha
jle
arpl
jno
dec
popa
loop
outsl
cld
inc
pop
hlt
pop
sub
fnstsw
sub
div
jmp
loope
adc
xchg
ds
call
add
xor
dec
int3
push
repz
aaa
adc
rcl
insl
push
sbb
movsb
cmpsb
sbb
xchg
cmpsl
adc
xlat
lret
scas
and
lock
repz
xor
out
bound
pushf
cmc
cmpl
cwtl
or
popa
push
mov
sub
sbb
pop
mov
mov
out
mov
jl
xor
sub
enter
aas
loope
sub
mov
rorw
mov
popa
dec
mov
aas
icebp
outsb
cmc
cmp
xchg
sub
ja
push
inc
shl
repz
cmc
fistps
push
jo
mov
sarl
in
mov
out
mov
subb
and
jbe
jl
mov
stos
das
in
push
and
or
xlat
xchg
and
add
enter
lock
ljmp
icebp
fwait
or
mov
push
add
insb
in
lahf
sbb
stc
mov
and
aas
inc
cmc
insb
stos
fsin
or
mov
jnp
imul
push
mov
fcom
sbb
or
and
fwait
lret
inc
imull
test
cmpsb
pop
popf
in
mov
dec
push
insb
sbb
jp
addr16
xlat
les
xchg
pop
or
mov
cmc
fildl
xchg
inc
add
cli
subl
in
imul
or
push
faddl
jp
xchg
mov
inc
lods
ret
into
icebp
mov
xor
lea
push
sub
into
or
push
mov
xchg
jl
mov
sbb
xchg
out
lahf
xor
xor
popf
mov
mov
fidivs
push
in
mov
push
sti
pop
stos
loope
ret
into
xchg
push
filds
mov
sti
stos
xchg
int
xchg
fidivrs
add
dec
icebp
negb
adcb
frstor
xchg
pop
fildll
mov
jp
xchg
subl
rolb
jbe
sub
jns
ret
stos
push
xlat
dec
mov
mov
or
lds
fisubl
mov
fnstenv
popa
pusha
sub
and
neg
xor
ds
test
scas
lret
adc
rclb
xor
jno
stos
stos
cmp
push
inc
dec
sbb
in
out
enter
lahf
movsb
test
xor
xchg
mov
idivb
push
lods
xor
icebp
stc
or
mov
lret
nop
inc
mov
mov
leave
inc
jmp
adc
loop
ss
pop
repnz
cmc
ja
jl
cli
xlat
les
jbe
inc
xchg
push
sti
outsl
sub
pop
jo
adc
inc
std
mov
out
repnz
mov
test
fisttpll
xchg
or
jle
pushw
loope
and
fistpl
pusha
fwait
cmpsl
shrb
and
fbld
sub
mov
push
enter
addr16
xor
sbb
jg
sti
psubsb
stos
cmp
sub
cli
mov
cmp
adc
rorl
in
cltd
cmpsb
or
xchg
cs
dec
sar
rorb
or
inc
inc
sbb
pop
ljmp
test
mov
std
shll
push
bnd
repnz
cmpl
test
aam
add
push
test
push
aaa
fs
sbb
popl
dec
inc
mov
test
sbb
lods
mov
ljmp
insb
xchg
fwait
mov
outsb
jle
inc
push
movsl
subl
xlat
or
pop
popf
aaa
mov
mov
mov
cltd
les
sbb
mov
and
xchg
lds
mov
rcrb
lret
mov
data16
push
imul
mov
pop
int3
xor
add
jl
fsubs
repnz
cmp
or
jmp
ret
outsl
or
adc
jmp
jge
and
mov
mov
cmp
insb
jmp
ficompl
jg
jne
mov
xchg
lcall
jge
sbb
mov
sbb
js
cmc
out
test
sub
mov
inc
test
xlat
add
ret
inc
imul
scas
sub
xor
fldcw
popa
cmp
paddusb
adcb
ficoms
mov
mov
mov
sub
movsb
mov
jbe
js
sub
mov
pop
sbb
mov
mov
aas
mov
mov
mov
or
lcall
loope
sbb
xchg
sub
dec
ss
jmp
xor
mov
testl
addb
faddp
bound
xor
into
jnp
add
pushf
adc
fs
xchg
mov
sar
cmp
mov
jge
sbb
repnz
scas
inc
add
enter
mov
cltd
dec
mov
rclb
ljmp
jo
xchg
loopne
adc
jae
sub
or
clc
dec
xchg
adc
outsb
lods
ret
cld
xchg
icebp
jg
add
in
dec
sub
jno
inc
sbb
mov
das
sbb
jnp
cs
pop
data16
aas
xchg
jmp
shr
addr16
push
adc
fxch
push
sub
insb
ja
cmpl
shrb
cltd
mov
mov
add
xor
rcrl
data16
xchg
xchg
ret
push
clc
dec
sub
mov
jns
dec
jns
cld
adc
inc
or
ret
push
arpl
mov
subl
inc
add
sub
jmp
lods
ret
dec
and
xor
in
xor
outsb
into
mov
or
inc
test
xchg
pusha
pusha
rolb
pop
cmp
fidivs
sar
pop
stc
mov
xchg
nop
xlat
jns
pop
loope
push
push
inc
add
push
pusha
mov
cmp
lds
sub
dec
inc
cmp
push
lds
sub
test
mov
mov
outsl
mov
popa
jne
clc
xchg
pusha
add
mov
cli
mov
test
sbb
adc
and
dec
ret
in
lock
test
add
mov
repnz
mov
jne
mov
xorb
mov
ret
test
push
jl
mov
push
inc
dec
xchg
cmpsb
cmpsl
adc
insl
leave
mov
cmp
into
mov
adc
enter
ret
pop
data16
movd
out
shlb
les
mov
jo
outsb
insl
aam
inc
stos
adc
fbld
mov
int
xor
dec
inc
and
inc
and
xchg
jnp
pushf
sub
les
cmp
stos
push
xchg
mov
dec
mov
xor
mov
xchg
sub
jg
testb
and
repnz
xor
daa
cmp
imul
ljmp
subl
xchg
mov
jg
mov
stos
int3
sbb
sub
cmp
nop
pop
or
xchg
nop
imul
mov
lods
repz
pop
nop
xor
mov
rorb
xlat
lcall
add
xor
nop
mov
adc
jge
sti
pushf
mov
inc
sahf
shrb
jno
mov
dec
pop
icebp
xor
add
pop
js
cmp
cli
pusha
cmpsb
ljmp
loopne
loopne
cmp
or
sub
or
jmp
xor
lock
test
cld
adc
hlt
imul
mov
mov
in
out
sbb
sbb
inc
jo
and
test
jne
ret
ja
mov
mov
imul
pop
jle
es
mov
inc
jne
jno
push
inc
insl
or
fcomip
or
cld
sub
jnp
push
subb
push
cld
mov
mov
fidivrs
mov
xchg
and
daa
mov
jo
mov
adcb
movhps
mov
pushf
gs
or
jae
jne
mov
gs
mov
mov
xchg
jb
push
test
mov
clc
int3
inc
roll
inc
notl
pusha
test
sub
test
push
jmp
rclb
pushf
in
and
js
cmp
mov
lods
loopne
mov
cmpb
jg
add
xchg
addb
pop
and
add
inc
mov
adc
push
add
pop
jb
subb
out
shlb
mov
mov
jae
or
into
xor
enter
insl
jb
scas
iret
aad
mov
xor
int3
lds
loopne
pop
jo
out
and
out
arpl
stc
pushf
mov
mov
outsl
pop
add
mov
ljmp
pop
out
out
mov
jl
or
divb
or
es
xchg
rolb
sub
daa
dec
out
fildll
andb
push
out
sub
sub
inc
cwtl
cmp
mov
jmp
sbb
test
loope
decb
sub
iret
cltd
bound
daa
and
rcrl
push
cmp
pushw
mov
shl
xchg
jbe
loop
push
cmpsb
sbb
and
sub
cltd
sbb
sbb
push
mov
fsubs
faddl
xchg
and
add
cmp
shlb
fs
movsl
push
mov
mov
aas
ss
icebp
and
cmp
faddl
cmp
xor
data16
stos
divl
int3
push
sbb
dec
inc
loopne
aam
mull
in
pop
jmp
pop
stos
mov
jne
jnp
add
in
je
lahf
xchg
enter
pusha
test
mov
xchg
lcall
push
pop
dec
jno
sub
andb
ret
pop
xchg
lcall
mov
subl
fisttpl
adc
cmc
bound
pushf
lret
shrb
or
jo
pop
inc
xor
dec
push
test
mov
mov
push
enter
jne
add
iret
mov
shll
and
xchg
adc
arpl
xchg
inc
sbb
fwait
sbb
fmulp
inc
fimuls
and
and
scas
mov
or
ret
in
test
push
icebp
mov
test
inc
mov
jne
sub
xor
cld
cltd
clc
push
mov
mov
push
sar
mov
adc
imul
mov
xchg
push
inc
sbb
cs
push
pop
jae
lock
mov
push
and
mov
insw
xlat
mov
pop
mov
out
out
xchg
adc
jg
xchg
cmpsl
dec
imul
or
add
jo
repz
out
outsl
mov
mov
decw
xchg
fstpl
mov
dec
inc
cld
decl
cmp
dec
outsb
or
cld
fcmovnb
fimull
int
sub
mov
negl
shrb
jbe
movsb
shlb
push
ss
pusha
adc
xor
cmp
int3
xchg
push
mov
jbe
in
sbb
dec
outsb
push
or
inc
inc
bound
fdivrs
nop
mov
adc
or
sub
sbbb
repz
mov
mov
add
mov
push
in
adc
in
inc
jmp
lcall
outsl
or
add
sbb
mov
jmp
adc
pop
adc
jae
sbb
iret
cmpsl
dec
out
mov
pop
fisubrs
movsb
mov
hlt
cmp
movsl
jno
ret
andb
insl
mov
sbb
dec
mov
pop
jmp
cmpb
repz
cmp
leave
mov
inc
jno
inc
jl
dec
mov
cmp
cltd
jl
loop
cltd
hlt
imull
lods
imul
adc
outsl
ljmp
adc
lahf
mov
adc
mov
inc
out
enter
out
mov
out
inc
pop
in
outsb
bound
jb
mull
lods
push
ja
xorl
dec
mov
fs
cmp
or
xlat
int3
inc
jo
sbb
add
les
inc
jne
lock
or
add
repz
loope
sbb
xor
push
jmp
rcr
jns
out
lahf
fwait
clc
test
xchg
fldl
dec
lock
daa
xchg
push
std
addr16
pop
dec
mov
gs
xchg
ds
lcall
mov
cmp
push
inc
push
outsb
repz
outsb
cltd
insb
jbe
push
fwait
out
out
sbb
and
push
push
sbb
xchg
pop
fwait
pop
and
sbb
jbe
mov
cmp
adc
mov
int
rcrb
mull
leave
cmp
jns
jp
rorl
in
add
mov
jle
sbb
xchg
lods
inc
mov
jbe
cmpsb
fcmovnu
jns
aam
fs
std
aas
mov
and
data16
push
jno
mov
jmp
and
popa
push
loop
or
hlt
mov
fildl
push
jl
arpl
cwtl
pop
cmpl
clc
es
jae
and
fwait
mov
pop
xchg
xlat
jl
std
pushf
jecxz
leave
adc
jg
mov
ficomps
mov
and
mov
mov
cmp
scas
repz
nop
cmp
xchg
aas
test
xchg
mov
ljmp
sub
mov
mov
test
std
and
xchg
movsb
dec
cmc
jmp
cltd
ret
data16
imul
shlb
xor
mov
lcall
cwtl
jne
cmpsl
xor
lahf
cld
mov
lret
je
dec
sbb
cmp
jcxz
push
mov
int
add
or
jns
dec
das
cmp
push
adc
add
sub
ret
xchg
jne
sub
popf
lret
lds
and
mov
insl
repnz
bound
mov
push
lds
add
pop
push
lahf
ss
fldcw
aad
fwait
sbb
and
rolb
testl
jecxz
pop
bnd
jbe
ja
mov
lea
pop
xchg
loopne
clc
mov
loopne
das
clc
pop
jl
shll
xchg
xor
mov
xor
popa
sbb
loope
inc
scas
rolb
dec
loope
lret
mov
push
ja
divl
jle
add
sub
inc
out
adc
inc
sbb
in
fistpl
inc
pop
add
xorl
shrl
mov
sahf
popa
call
cld
test
and
push
add
adc
push
pop
test
jle
pop
jecxz
push
pop
mov
fcomi
dec
adc
mov
xor
push
ret
test
push
sbb
sbb
std
icebp
ret
testl
or
loopne
jne
pushf
std
push
decb
and
leave
push
dec
push
cmp
push
xchg
scas
sub
ret
lock
push
dec
rolb
sbb
in
push
sbb
cmpb
mov
jo
cli
lahf
cmp
in
xor
cmp
out
in
bound
and
xchg
subl
mov
jae
sub
sahf
imul
mov
xchg
jnp
outsl
sub
test
shlb
pop
adc
jne
xchg
or
aas
scas
dec
dec
xor
cld
cmp
clc
pop
incl
in
sub
sub
jns
inc
mov
or
sub
cmp
lret
sub
fsubrs
repz
xor
cli
inc
mov
repz
add
and
or
mov
sub
lret
fisttps
repnz
inc
out
bound
mov
jbe
sbb
cmc
btc
out
in
in
adc
fnstcw
cmpsb
cld
add
repz
add
sti
or
xlat
and
cltd
dec
mov
mov
dec
add
lret
mov
ret
add
pop
xchg
inc
xor
add
adc
inc
inc
lret
xchg
or
test
lea
roll
jae
adc
ror
xor
icebp
int
sub
rcr
aam
mov
xchg
add
sbb
mov
xlat
jns
add
movsb
mov
enter
jecxz
fwait
es
in
in
jmp
sub
xorb
repz
out
inc
mov
and
andl
inc
lahf
mov
out
sub
lods
or
jg
outsl
pop
shrb
jp
nop
or
mov
das
cmp
setge
fdivs
iret
xchg
popf
out
shl
sbb
mov
outsb
test
repnz
pop
push
lock
or
je
aad
xor
data16
lock
mov
or
mov
sub
mov
xchg
clc
sbb
inc
cmp
fidivrs
cmpsb
or
jnp
mov
pop
stos
frstor
scas
and
outsl
and
popf
push
jmp
sbb
add
mov
movl
xor
cmpsl
xor
push
loopne
push
pop
pop
xchg
hlt
dec
fldenv
jmp
fmull
imul
jbe,pn
jl
adcb
imul
scas
fadds
addr16
or
cmpsl
test
push
in
dec
test
adc
cmp
mov
in
mov
jp
push
sub
sbb
int
enter
cmpsl
loope
push
sbb
or
sub
sub
jbe
lods
inc
cltd
testb
pop
cld
notb
push
mov
mov
push
dec
popa
pop
sub
addr16
mov
imul
push
iret
sbb
xor
fnstsw
push
jp
bound
lods
mov
lahf
clc
aad
arpl
rcll
scas
rol
mov
jb
fxtract
int3
stc
jmp
and
ss
push
or
or
pop
insb
shrb
fstsw
and
clc
stc
flds
jg,pn
scas
mov
popa
push
and
les
mov
fs
mov
mov
mov
mov
popf
mov
aam
pop
rolb
pop
sub
fdivs
mov
jo
js
outsb
and
inc
mov
jno
aad
add
mov
push
mov
out
pop
rcll
stos
lods
andl
inc
inc
pop
and
push
popf
mov
mov
pop
outsb
cmp
inc
sbb
test
xchg
scas
repz
or
std
in
xor
xlat
mov
std
and
divb
bnd
xchg
stos
pop
cmp
lods
pop
cmp
fs
aam
sub
fs
jb
inc
cmpsl
pop
loope
mov
test
fsubrl
pushf
stos
push
jo
cmp
or
push
leave
psubb
scas
lds
sub
jno
rcrl
loopne
sarl
mov
inc
sub
jp
adc
xchg
add
xchg
cli
push
push
mov
movsb
popf
in
jb
mov
mov
dec
lds
out
pop
mov
adc
in
cmp
mov
in
cmpsb
pop
push
pop
mov
leave
sbb
fisubl
sub
dec
sub
push
xor
mov
xchg
or
push
cmpsb
pop
dec
imul
pop
xor
repnz
pop
inc
pop
pop
rolb
push
lahf
jnp
roll
test
and
repz
daa
and
repz
cld
and
scas
outsb
rol
or
adcl
jp
test
fdivrs
aas
lret
push
push
loopne
mov
adc
scas
fwait
xchg
push
pop
sahf
mov
rorb
lods
dec
xor
mov
push
sub
xchg
adc
enter
pop
inc
or
imul
sbb
dec
xor
jbe
push
fiaddl
test
clc
adc
loope
mov
dec
outsl
pop
leave
inc
mov
adcb
mov
ss
sbb
and
insb
xor
add
jl
add
cmp
xchg
jnp
aaa
repz
mov
mov
mov
js
ret
out
pop
les
fisttps
loope
dec
push
roll
scas
xchg
and
dec
out
pop
xlat
mov
fadd
xchg
mov
mov
dec
dec
scas
lret
sub
xchg
ret
out
in
ss
dec
add
dec
icebp
mov
mov
mov
inc
push
or
jne
ljmp
jae
test
dec
and
adc
jle
sbb
push
daa
dec
insb
std
call
fwait
or
xor
push
rep
movsl
or
mov
popf
pcmpeqd
mov
lahf
sbb
test
rclb
push
xor
sar
ljmp
mov
ja
psrlq
sub
add
les
dec
dec
mov
pusha
fisttps
sbbl
sbb
pop
jb
hlt
push
xor
jne
fwait
xor
and
adcb
pop
jb
pop
xchg
pop
or
add
dec
jmp
mov
fs
sahf
push
mov
add
cmp
add
cli
mov
dec
mov
mov
jge
fcoml
in
push
testl
enter
fimull
les
inc
daa
xor
xchg
xchg
and
frstor
adc
ret
adc
xchg
cmp
mov
nop
mov
pop
mov
inc
outsl
clc
mov
into
div
mov
or
fdivrl
rcrl
jmp
dec
pop
jae
xchg
dec
mov
das
fistl
ret
add
xchg
insl
out
xor
pop
das
push
popf
lcall
and
iret
jle
add
and
lock
fmuls
jge
mov
dec
test
inc
pusha
test
das
insb
idivb
or
imul
cmp
push
or
push
sub
clc
stc
pop
pop
sbb
dec
fistpll
loopne
fmuls
movsl
in
jge
ds
xchg
arpl
add
mov
cmp
adc
test
rolb
insl
sub
icebp
inc
lret
daa
jo
mov
inc
les
mov
jb
fcoms
insb
mov
shlb
inc
nop
out
cmpsb
lock
and
jmp
mov
or
xor
sbb
data16
mov
into
push
sbb
call
pop
push
in
xor
mov
lahf
fsubrp
imul
sub
in
cld
cmp
add
add
cmc
jnp
popf
dec
sub
xor
mov
inc
push
pop
test
in
rol
xchg
ds
pop
and
cmpb
cmpsl
movsb
int
cli
mov
sbb
enter
cmp
sahf
jg
cmpsb
mov
cmp
clc
cs
mov
out
sub
arpl
adc
arpl
sbb
jge
aaa
pop
xor
std
scas
pop
push
fwait
or
add
or
ret
xchg
dec
dec
and
jp
push
loop
cmpsb
pop
inc
xor
pushl
icebp
pop
fwait
jns
rclb
aam
lcall
in
pop
mov
divb
pop
xchg
mov
ja
imul
bound
in
call
negl
in
jnp
jl
mov
das
push
dec
subb
mov
push
jno
ficoms
rcrl
in
std
int3
test
xchg
cmp
lcall
ret
push
push
sub
add
fisubs
loopne
jg
inc
outsl
add
inc
out
in
adc
add
stos
stc
adc
xchg
fwait
aam
movsb
push
dec
jl
out
cmp
scas
sub
cli
and
sbb
leave
inc
lahf
clc
les
sbb
jmp
dec
and
fucom
fildll
cmp
cmpsb
insl
mov
into
push
push
adc
inc
add
lret
call
mov
sbb
xchg
test
pop
les
pop
fnstsw
lret
or
lret
sub
jge
xor
adc
adc
xor
push
in
mov
mov
push
fsubrl
or
xor
int
sub
popa
push
and
mov
rcrb
rolb
scas
mov
sub
xchg
scas
movhps
mov
pop
cwtl
push
mov
dec
mov
fnsave
stos
xchg
cwtl
mov
cli
cs
nop
leave
out
mov
cld
push
int
vmovsldup
shll
xchg
adc
fidivl
lods
inc
sub
adc
sbb
int
dec
aaa
dec
daa
ds
xchg
pusha
pop
sbb
sbb
jb
clc
shr
mov
lock
outsb
jns
lcall
ljmp
add
sbb
hlt
scas
aas
fldcw
jecxz
lock
pop
popa
fsubrl
cs
arpl
shlb
lret
push
pop
cmpb
test
inc
sbb
enter
es
ds
and
and
fisubl
fdivr
pusha
xor
cmpsb
notb
xor
fldt
jae
adc
inc
mov
cmp
cwtl
push
xchg
pop
pop
vpmovmskb
cld
sahf
xor
pop
dec
mov
pusha
mov
rclb
stc
mov
int3
nop
frstor
mov
shl
test
loop
xchg
fdivs
xor
clc
jo
fwait
mov
or
or
lock
loopne
popf
inc
cmp
loopne
popf
outsb
leave
sub
scas
aad
xchg
and
xor
andl
sbb
pusha
clc
mov
pop
leave
lret
loope
fisubrs
cltd
cmp
mov
ret
pop
xorb
mov
ret
pop
cmp
cltd
jmp
or
test
in
lret
push
push
jnp
push
xchg
mov
xchg
mov
inc
mov
repnz
jecxz
test
lds
mov
xor
ds
shr
inc
aas
pop
cmpsl
pop
leave
cmp
test
repnz
or
and
outsl
adc
mov
lods
or
mov
dec
cmpsb
push
fcomps
inc
mov
push
dec
arpl
adc
pop
incl
fdivp
cmpsl
push
xchg
adc
jbe
push
push
idiv
mov
xchg
sub
jno
cld
scas
mov
adc
xchg
sub
mov
push
mov
std
ficomps
lock
rorb
and
and
mov
adc
cwtl
pop
and
je
popa
push
test
js
sbb
cmpsb
icebp
xor
mov
insl
out
mov
fiadds
in
or
push
aam
repnz
cmovs
xor
inc
loopne
mov
sahf
in
in
pop
clc
push
xor
push
aam
cmp
lret
mov
mov
loope
mov
jae
test
pushl
rorb
ds
inc
sub
clc
jecxz
mov
adcl
push
push
js
mov
push
adc
lret
mov
xor
ret
adc
xor
or
dec
sbb
mov
into
dec
pop
call
push
jo
inc
push
xchg
cli
add
cmp
dec
pop
mov
add
adc
push
pop
enter
aaa
sbb
fidivrs
daa
dec
test
cmp
mov
test
or
notl
push
push
cmpsl
imul
or
sbb
pop
scas
and
push
push
out
jo
mov
mov
icebp
leave
and
sbb
xor
dec
sbb
jecxz
insl
sti
std
and
jno
mov
leave
mov
mov
in
cmp
in
js
popa
push
je
push
out
outsb
cmpsb
sbb
and
xchg
and
cmp
aas
cwtl
dec
xchg
inc
mov
jmp
mov
fsubrs
xor
insl
push
ret
xchg
arpl
dec
sub
ss
inc
fcmovnu
maxps
mul
xchg
fisubl
dec
icebp
jo
shll
jnp
dec
ret
imul
sub
add
mov
ja
dec
daa
jns
jl
fcoml
push
out
mov
fstl
push
ss
mov
sbb
push
add
ret
cmpsl
jecxz
fcompl
push
bound
faddp
imul
pop
xchg
fs
sbb
lcall
movsl
jp
add
push
push
xor
lock
jae
mov
lahf
or
hlt
and
and
stc
mov
mov
pop
icebp
test
pop
in
cmp
dec
pop
fistpl
sub
xor
cmc
mov
push
int
inc
ja
lcall
mov
lods
lea
notb
outsb
pop
sbb
sbb
jns
dec
sbb
jmp
cmp
pop
cmpsb
push
loop
fsubrp
lods
adc
ret
jns
cwtl
cs
ja
sahf
cmp
int
ja
jno
sub
lret
loope
loop
sar
or
ficompl
imulb
orl
mov
lods
xchg
mov
jno
cmp
push
and
les
test
mov
adc
xchg
push
icebp
lea
call
pop
int
mov
and
push
jbe
push
sbb
sar
pop
cmpl
sarl
cmp
daa
sub
push
mov
aas
notl
sub
sub
dec
lahf
enter
adc
cli
sbb
jmp
and
mov
cmp
aas
lods
enter
sarl
add
test
and
das
adcl
inc
jmp
add
mov
xchg
pop
das
mov
mov
je
dec
mov
lret
adc
xchg
xchg
rolb
add
sub
adc
mov
std
stos
into
mov
jmp
push
stos
das
mov
movsl
ljmp
and
pop
xchg
leave
mov
sbb
pop
xchg
hlt
fildll
frstor
aas
lock
mov
jae
stos
and
sub
jb
sub
shl
popa
sti
mov
push
negl
into
inc
jp
pop
int3
inc
push
hlt
popa
or
mov
cs
lret
mov
shl
fwait
int3
jp
out
stos
out
add
clc
std
cmc
std
dec
add
fdivrl
dec
jbe
mov
mov
cmp
fs
out
push
pop
in
jno
adc
or
inc
lahf
mov
mov
or
mov
cmp
sub
push
mov
movsb
mov
ss
xor
cli
lcall
push
sub
xlat
dec
push
pop
insb
test
jns
cmp
jo
sahf
fs
arpl
test
addr16
out
fwait
dec
pop
addb
sbb
movsl
sub
add
push
adc
rolb
stos
movups
ja
out
jno
jle
jne
mov
xchg
jmp
dec
std
cmp
mov
adcb
adc
scas
enter
ja
inc
jge
cmp
insb
and
loope
aas
sbb
dec
mov
int3
sub
mov
mov
pop
push
mov
or
fsubrs
pop
mov
cmp
in
sar
adc
lods
mov
roll
cwtl
push
test
adc
mov
rorl
subl
lods
adc
sub
fs
adc
outsl
iret
iret
lods
bound
sbb
sub
addr16
adc
into
dec
mov
mov
xor
scas
imul
inc
pop
call
inc
cltd
or
sbb
and
orb
cmp
mov
sub
mov
or
nop
jmp
ret
repnz
out
add
pushf
or
mov
insl
int
dec
arpl
jb
int
mov
inc
repz
xchg
dec
adc
xchg
in
lret
mov
out
lahf
dec
pop
sti
adc
xor
or
sub
xchg
mov
mov
mov
xchg
adc
out
fsub
out
orb
inc
cmp
mov
pop
adcl
into
shr
sub
pop
sti
sahf
and
add
push
iret
mov
push
xor
add
pop
mov
pop
out
fdivrl
dec
fwait
cltd
and
popf
mov
cmpl
xor
xorl
popa
lcall
mov
lds
jmp
xor
aaa
nop
adc
scas
sub
mov
push
loop
stos
daa
loopne
and
fimuls
cltd
xor
mov
pop
jbe
add
aas
inc
lret
scas
dec
push
out
add
insl
mov
dec
in
in
lcall
cmp
sub
das
sub
sub
inc
or
jge
js
mov
mov
sub
sarl
jle
and
push
je
lret
mov
sbb
fldl
xchg
xchg
sahf
push
cmc
add
mov
or
inc
sbb
dec
adc
jl
push
sbb
cmp
stos
subb
icebp
or
notb
out
and
scas
es
leave
dec
sub
ficompl
cs
inc
filds
mov
mov
fisttpll
jno
push
jo
lahf
fistl
pop
ds
sub
repnz
frstor
xchg
push
mov
pushf
test
fimull
mov
sub
lods
push
fwait
pop
sbb
fcomps
dec
mov
mov
and
gs
xchg
push
xchg
jmp
lods
pop
xor
sahf
movsb
filds
cmc
mov
sbb
fsubrl
xlat
adc
inc
stos
mov
jo
pop
sahf
outsb
adc
xchg
jo
xor
add
and
orl
cmpsb
pop
outsl
sub
cs
out
add
pop
lods
aaa
adc
dec
rcr
scas
add
dec
mov
push
mov
mov
inc
out
ja
pusha
ss
inc
data16
rcl
mov
xor
out
mov
movsl
mov
leave
ja
inc
dec
bound
mov
int
or
dec
pop
dec
xor
push
cltd
pop
push
hlt
js
mov
pop
mov
andb
cmc
nop
loope
xchg
mov
jp
fcomip
add
inc
movsb
xchg
mov
divl
dec
sub
mov
xchg
ljmp
push
in
fcoms
insb
sbb
sbb
daa
push
push
jno
iret
lea
je
or
enter
dec
movsl
mov
in
addr16
jnp
shrl
addr16
in
repnz
push
xor
repz
lret
and
in
in
pop
lods
rcl
clc
inc
xor
shr
xor
test
mov
scas
push
add
and
pop
push
lods
xchg
xchg
or
add
notb
inc
cwtl
clc
movsb
mov
mov
fmuls
push
arpl
push
fcomps
fstp
mov
leave
pop
int
cmp
and
imul
pushf
or
mov
mov
sub
insb
cwtl
shll
imulb
dec
fldenv
and
inc
call
popf
or
cwtl
jecxz
icebp
jp
sbb
dec
jecxz
inc
out
push
nop
fdivs
inc
add
lods
idiv
mov
rcrb
ljmp
pushl
arpl
fs
push
cltd
jno
jg
mov
cmovge
rcrb
push
xor
mov
pushl
push
pushf
int3
jle
xor
ret
pop
xchg
jmp
leave
add
adc
adc
mov
js
hlt
lock
jno
push
int3
jp
pushf
or
sbb
lcall
cmp
lahf
stc
cmp
pop
xchg
xlat
adc
or
jp
fistps
shlb
test
in
sub
fimuls
mov
shl
repz
or
jns
pop
xchg
and
inc
out
lock
movsl
xor
in
popf
sub
in
fidivrs
jns
cwtl
sar
out
jnp
mov
pop
inc
adc
loop
sub
push
lock
pop
mov
int3
fsubrs
adc
aaa
fwait
int
mov
outsl
jne,pt
lret
cmp
orb
imul
hlt
adc
andb
mov
mov
pop
pop
xor
mov
maskmovq
negl
imul
fs
out
push
lea
cs
shrl
loop
aad
add
inc
out
adc
shrl
add
dec
daa
js
xchg
inc
or
cmp
lds
sub
inc
js
mov
lahf
pop
rorb
gs
jp
or
mov
sbb
push
aas
xorl
push
lea
frstor
inc
aad
aas
test
jle
aad
mov
jg
popf
fidivrl
cs
cli
roll
in
adc
mov
mov
in
aas
or
fwait
out
test
push
loop
mov
or
xor
mov
outsb
cmp
stos
jb
lahf
ret
jmp
and
pushfw
jl
push
mov
ljmp
jecxz
push
shufps
add
cltd
mov
adc
ret
sbb
jp
inc
add
dec
sub
insl
ret
sub
loop
mov
lret
cltd
lds
lock
ds
popa
imul
xor
out
popf
imulb
int3
mov
sahf
scas
lret
adc
pop
jno
cwtl
pop
add
ja
lahf
mov
call
push
pushf
xchg
scas
rclb
jo
icebp
jle
or
test
xchg
sbb
fsubl
mov
insb
sbbb
test
inc
fidivrl
ja
lea
pop
add
int3
jmp
cmp
and
push
cmp
int3
rorb
or
xchg
clc
addl
ret
sbb
ds
xor
adc
stc
lcall
dec
inc
shl
movsb
movsb
loop
cmp
push
fstpt
mov
cmpsb
lods
sub
int
xlat
insb
xchg
jp
add
filds
or
fwait
dec
repz
outsl
xor
inc
dec
pop
cmp
pop
xchg
cs
scas
out
gs
sti
lods
mov
xor
jl
or
loopne
insb
scas
loop
dec
fistpll
out
jg
out
jns
mov
adc
add
gs
aam
jge
mov
shl
sub
nop
scas
int3
mov
and
mov
iret
dec
push
add
imul
sub
fcmovnb
ss
nop
mov
jp
jb
popf
aad
repz
mov
movsl
fists
dec
cmpl
cwtl
in
fistl
lea
int3
push
sar
imul
push
leave
add
xchg
jno
repnz
not
pop
cmpsl
sbb
sub
scas
call
jge
inc
inc
jg
sub
ljmp
loop
je
xor
adc
mov
outsb
xor
xchg
adc
xchg
data16
jg
loope
mov
add
jmp
mov
aad
jmp
test
cmp
push
repz
push
and
outsb
lea
out
pusha
lock
cmp
cmp
mov
hlt
push
xchg
testl
stos
and
ja
adc
lret
mov
out
cmpsb
push
push
rorl
subl
icebp
idiv
pop
clc
leave
mov
out
fmull
mov
rcl
jno
mov
orb
sbb
iret
mov
stos
mov
mov
ja
cwtl
jg
dec
mov
jns
push
mov
hlt
pusha
jl
adcl
sahf
daa
popa
in
lcall
push
jmp
in
push
aas
dec
sahf
lcall
movsb
or
or
adc
inc
stos
push
ret
lock
mov
imul
xor
int3
pop
jne
sub
cmp
xchg
mov
pop
adc
mov
xor
or
out
dec
xchg
xchg
xchg
jmp
xchg
push
dec
ret
inc
jnp
lock
pop
or
ds
and
pop
jb
lret
pop
xor
adc
enter
mov
pop
fistl
dec
insl
das
jge
sbb
test
cs
sbb
mov
jl
in
imul
dec
mov
dec
das
xchg
stos
mov
sbb
cmp
lcall
push
nop
and
push
sub
mov
xchg
cmpsb
mov
pop
dec
je
repz
daa
insl
cmp
testl
fstl
aad
and
faddl
test
lds
pop
jmp
pop
lret
pop
inc
sbb
int3
inc
cmpsb
mov
rcr
jp
clc
loope
sub
xor
bound
xchg
mov
sub
out
cmp
adc
pop
inc
or
adc
bnd
sarl
sub
mov
xorl
cwtl
jnp
sbb
push
fs
push
cmp
xor
jb
mov
fbstp
pop
push
mov
pop
add
mov
fcmovnbe
or
imul
cmpsl
inc
stos
repz
xchg
inc
push
bound
cmp
call
xor
lods
int3
cmp
jl
mov
scas
sbb
xchg
repnz
inc
pop
and
rorl
xor
push
lahf
jo
and
sub
push
pop
adc
shll
mov
fldcw
pop
cmpsl
out
xchg
pop
pop
xchg
loope
sbb
jecxz
int
jmp
inc
rolb
jne
add
test
add
sbb
add
and
sub
inc
add
test
add
sbb
pusha
cld
scas
mov
int3
xchg
or
cmp
add
inc
lds
imul
add
xor
inc
pushf
xlat
lock
cmp
scas
lcall
insb
mov
pop
jmp
ffree
pop
ret
mov
mov
xchg
mov
subb
pop
cs
inc
cmp
cmp
push
aas
lret
and
ret
mov
push
test
push
int
jl,pt
xor
pop
sbb
out
pop
sbbl
xchg
mov
add
push
out
cmpsb
and
pop
cmpsb
inc
lock
leave
ds
or
mov
mov
xchg
enter
mov
and
pop
sbb
je
adc
jnp
and
jno
test
adc
call
out
jmp
insb
inc
fcoms
inc
sbb
cmp
mov
dec
xor
jno
jo
sbb
notl
pop
pop
sarb
lock
dec
js
or
vorps
push
push
ret
mov
jl
sbb
ret
shrb
mov
loope
adc
adc
icebp
flds
push
push
lea
mov
repz
fs
popa
push
xor
ja
ljmp
mulb
in
bnd
mov
fsub
adc
or
push
jo
xchg
xchg
vmovsd
pop
lods
stc
jo
or
or
inc
fstpl
push
aam
test
cmpl
add
mov
loopne
and
mov
icebp
dec
out
out
add
adc
std
or
sbb
test
lret
mov
jmp
pop
pushl
imul
jle
cmpsl
pop
sub
adc
repnz
or
arpl
lret
aam
mov
insb
in
outsb
mov
add
sarb
clc
cwtl
lcall
jg
sti
iret
jns
pop
fcoml
inc
sti
xor
xor
fcomip
jo
dec
hlt
test
cld
pop
mov
xor
inc
shll
sub
dec
xlat
js
pop
adc
sbb
jb
adc
jmp
jbe
push
xor
test
mov
dec
mov
fdivl
xchg
lock
test
shlb
sbb
inc
push
inc
sbb
mov
es
jmp
dec
cmp
sbb
jb
addb
int
dec
xor
inc
sub
xchg
jp
movsb
rcr
jns
call
fs
mov
dec
mov
aad
jae
mov
pop
in
sbbb
mov
pop
imul
xchg
add
jg
into
out
cmp
mov
in
int3
pop
mov
mov
push
leave
or
fcomps
or
rcrl
hlt
inc
es
xchg
mov
push
imul
pushf
negb
test
les
sub
lcall
xchg
sarl
jae
movsb
cltd
loope
or
dec
cmp
xchg
out
jmp
add
push
dec
xchg
mov
adc
lds
fwait
pop
jg
jns
es
aad
pop
sub
icebp
cmp
addl
dec
outsl
xchg
pop
adc
and
sub
and
push
mov
fstp
inc
scas
push
pusha
scas
xchg
ja
in
xor
mov
jns
sbb
pop
test
pop
xor
push
pop
fdivp
into
test
mov
hlt
lea
sub
cmp
sarb
cmc
jns
int
dec
cmpsb
xor
sub
mov
sti
movb
sbb
cmp
cmp
mov
jg
xchg
mov
fistps
ret
fsubrs
xchg
cmp
outsl
add
adc
sub
pop
imul
scas
shrl
cli
pop
or
inc
xor
cmp
pushf
jp
sbb
lods
xchg
sahf
clc
mov
mov
pop
stos
mov
pop
aad
cmp
stc
or
popf
insb
ja
xchg
add
out
and
loopne
ds
test
cmp
jns
jle
notl
jecxz
adcl
or
xchg
or
lods
popa
fs
insl
lcall
inc
cmpsb
inc
mov
ljmp
mov
jo
mov
mov
stc
bound
aaa
pop
lods
lret
add
das
cmp
sbb
push
jle
inc
dec
mov
out
sbb
mov
inc
data16
jge
xchg
stos
jae
cs
roll
mov
mov
pop
ljmp
xchg
sub
outsb
jnp,pt
leave
inc
pop
xor
jge
pop
sub
gs
cmp
mov
xchg
jns
cltd
stos
mov
cltd
cmc
mov
inc
mov
sub
adc
in
pusha
mov
xlat
lods
dec
nop
xchg
jg
mov
cs
fisubl
in
mov
mov
xchg
mov
cmp
jno
leave
cmp
push
lret
in
mov
mov
jmp
or
bound
mov
data16
fdivrl
idivb
mov
cwtl
mov
push
shl
fsubr
ror
popa
mov
ficoml
inc
cmp
daa
lahf
xorl
mov
aad
lcall
fwait
cmp
mov
cmc
jb
les
je
push
mov
sub
fldl
lret
enter
xchg
popa
sbb
fstps
test
mov
ljmp
push
cmp
jmp
jg
stc
arpl
push
ret
lret
mov
nop
and
xchg
adc
call
mov
out
adc
add
fisubrs
sub
movsb
lret
push
test
jl
notb
pop
hlt
daa
popa
ret
aad
cltd
xchg
inc
fxch
sbb
mov
dec
xchg
int3
adc
push
std
xor
pop
and
push
mov
add
cltd
cmp
sbb
and
push
jle
imul
test
xor
bound
and
int3
dec
pop
ja
mov
mov
xlat
lods
scas
xor
enter
mov
xchg
notl
mov
add
mov
fdiv
xor
lds
push
rcrb
jmp
in
dec
dec
add
enter
push
mov
scas
call
add
les
sub
lahf
and
fsubl
aam
das
inc
daa
mov
movsl
cmp
jle
mov
xor
leave
mov
push
mov
xchg
inc
inc
pop
hlt
scas
mov
push
sti
pop
push
jns
test
sub
mov
cmp
xchg
dec
stos
cltd
adc
int3
cmp
movsb
fisubrl
sbb
bound
add
loop
jnp
or
push
xor
or
insb
fmuls
cltd
xor
ss
out
repnz
mov
sbb
mov
sub
xchg
cmp
sbb
divb
movsb
add
int3
addr16
sti
pop
dec
icebp
fildl
ss
sub
std
pop
or
call
mov
pusha
bound
and
insl
out
and
jo
and
add
sub
paddusb
cmp
inc
negb
insb
clc
xlat
out
aad
outsl
push
and
mov
rcrb
nop
pop
in
and
pop
mov
cs
es
pop
mov
bnd
sbb
pop
mov
push
mov
clc
loopne
popa
mov
sub
loop
jae
rcr
mul
out
in
add
pusha
jae
popa
arpl
pop
dec
xchg
pop
pop
jb
dec
cmp
sbb
test
push
sub
push
cltd
mov
push
lods
sbb
jb
in
push
fimuls
mov
or
lahf
push
les
sahf
pop
jb
mov
into
ret
jmp
mov
mov
test
ret
inc
inc
and
out
stos
cmp
adc
shlb
cmp
xlat
out
xor
sbb
push
sub
gs
outsb
mov
cmc
jno
out
xchg
mov
dec
adc
fldenv
dec
loope
je
xchg
add
dec
or
ljmp
mov
ljmp
jp
add
gs
sbb
clc
xchg
movsb
bound
repnz
test
dec
cmp
sub
inc
jo
clc
pushf
sub
and
cmc
cmpsb
mov
sbb
xor
popa
cmc
cmc
loope
xor
sub
daa
jmp
out
or
jnp
inc
int3
sub
inc
mov
in
cmc
nop
sub
pop
bound
push
push
popa
and
adc
popa
icebp
aas
dec
sbb
push
inc
xchg
or
into
test
or
dec
mov
mov
imul
inc
mov
dec
daa
add
rolb
sub
shrb
cmpl
scas
xchg
and
test
xchg
push
jae
out
or
mov
sub
cltd
lcall
and
in
adc
repz
decl
mov
ret
jnp
jbe
fcomp
or
push
inc
push
push
pushf
mov
mov
and
mov
add
fwait
ret
ljmp
and
inc
out
loopne
mov
mov
stc
imulb
and
pop
icebp
jp
pop
or
cmp
mov
rcrb
shl
inc
popf
xlat
call
push
cs
sub
push
xchg
push
rcrb
hlt
aaa
sbbb
fs
aaa
fimull
movsl
call
cmpsl
pop
popf
cmp
shl
lds
lods
mov
lods
cmp
aam
aam
adc
mov
push
dec
push
mov
cmp
mov
cmc
sbb
ficompl
lods
insb
pop
cmp
je
xor
ds
adc
enter
sbb
push
and
sarb
divb
mov
mov
cmp
daa
pop
imulb
lods
cmovae
push
xchg
fnstcw
imul
pop
shlb
ss
inc
aad
and
sbb
test
sbb
sub
popf
xchg
enter
inc
imul
mov
push
mov
cmpl
inc
daa
icebp
dec
testb
mov
and
stc
sahf
fndisi(8087
testb
mov
jno
add
mov
fnstcw
in
cmp
js
fs
insl
fcoms
bound
lds
rclb
push
pop
loope
in
mov
pushl
mov
pop
jle
out
mov
cmp
push
cmc
pop
movsb
mov
ds
gs
add
jb
lret
loopne
push
xchg
jp
or
cmc
mov
xchg
lock
in
lods
repnz
cli
add
xor
jle
cltd
xor
fs
mov
out
xor
aad
xchg
mov
pop
cmp
pop
push
scas
test
enter
jecxz
in
insl
lods
sbb
movsl
mov
fldl
cltd
outsl
mov
push
inc
xor
mov
pop
negl
cmc
fistpl
sbb
push
xor
jmp
das
addr16
sub
stos
pop
jae
enter
xchg
xor
xor
sbb
outsl
es
or
push
aad
cmp
dec
lret
xchg
cmp
data16
and
lahf
mov
pop
xchg
lret
dec
negb
jbe
les
insb
aaa
stos
cmp
cmpsb
outsb
jne
add
add
sbb
jb
loope
mov
das
xor
shlb
xorb
sub
scas
adc
jmp
dec
jne
sub
cli
shrb
mov
sarb
shlb
dec
ret
cltd
sbb
mov
lea
pop
test
push
mov
jecxz
inc
test
jl
jp
std
imul
hlt
roll
aas
and
lea
lcall
jmp
pop
insl
and
xor
sbb
test
jle
cs
scas
test
dec
push
xchg
ljmp
bound
or
mov
or
cli
in
or
xlat
and
addr16
sub
popf
sti
mov
jns
adc
das
pusha
xchg
pushf
das
inc
adc
pop
sub
xlat
jg
inc
mulps
mov
test
cltd
jl
xchg
addb
movsb
arpl
out
out
int
add
lcall
mov
in
or
leave
inc
ret
jp
push
out
push
jge
rcl
mov
push
xchg
cmp
fidivs
lcall
jno
push
jl
dec
jns
das
lret
cmp
add
dec
push
mov
cli
in
in
pushf
mov
sti
cmp
insl
lret
idivb
sub
test
add
decl
ret
arpl
mov
mov
outsb
pop
or
jnp
pop
xor
pop
xchg
pop
or
lret
jecxz
mov
mov
mov
daa
in
mov
test
and
ds
jecxz
stos
jne
ja
xchg
sbb
lret
push
push
pushf
outsb
in
xchg
ja
push
push
arpl
vprotq
lcall
in
inc
push
and
loopne
mov
lock
fldcw
fs
cli
mov
jecxz
repnz
in
push
jle
lock
idivl
iret
in
sbb
and
cmp
ss
notl
mov
lods
jne
cwtl
or
imul
mov
inc
shlb
js
mov
aam
pop
and
inc
mov
loopne
cmc
dec
imul
xchg
lahf
out
push
xor
aad
xor
sbbb
push
cld
aad
pop
stos
mov
test
inc
jo
inc
shl
fistl
jno
adc
mov
push
cwtl
lods
mov
mov
clc
hlt
sbb
dec
push
cmp
hlt
in
push
cmp
cmp
sbbl
addr16
das
add
roll
push
sub
adc
data16
xor
cmp
inc
arpl
push
scas
in
std
mov
lfs
fcoml
xor
out
push
add
daa
out
jb
push
sbb
out
popf
mov
pop
aas
pusha
std
mov
mov
fimuls
cmc
mov
addr16
cmc
leave
cmp
cmc
mov
hlt
into
in
enter
inc
cmp
sub
cmp
xlat
leave
inc
clc
xor
repz
dec
xchg
hlt
aaa
adc
jecxz
addb
sbb
or
cli
andb
cmp
mov
cmpb
jmp
inc
jb
and
call
test
imul
mov
std
mov
hlt
loope
xchg
imul
in
sti
and
daa
clc
dec
push
xchg
out
push
jns
fisttpl
pop
pop
fwait
cs
dec
push
xor
inc
pcmpeqd
cmp
daa
mov
mov
enter
cld
iret
imul
inc
jmp
push
cs
pop
push
jno
aam
pop
inc
xor
outsb
test
sbb
aam
dec
sbb
mov
pusha
push
and
jno
gs
out
test
mov
clc
int
arpl
scas
clc
fsubrs
lods
ljmp
fdivs
mov
inc
hlt
js
xchg
andb
mov
push
or
out
or
mov
arpl
test
ds
or
add
or
mov
jecxz
cmp
mov
inc
insb
cmp
lock
test
pusha
inc
pop
ljmp
stos
jmp
dec
adcb
adc
inc
test
lods
and
ljmp
call
cmc
pop
push
xchg
int
mov
hlt
outsb
cmpsb
ja
jg
lea
push
cmpsb
pop
std
nop
jo
insl
scas
stos
xlat
push
dec
and
in
push
inc
jne
or
leave
dec
push
mov
jbe
and
mov
mov
jbe
jl
inc
scas
or
dec
fsubrs
pusha
push
add
rcll
adc
mov
or
iret
into
add
sub
pop
fildl
icebp
lcall
fs
xor
mov
sub
add
cld
dec
cltd
iret
pop
outsl
iret
cs
addr16
push
dec
sbb
mov
add
jecxz
xchg
lcall
sbb
and
dec
testl
pop
xchg
xor
xor
stos
add
ss
cmp
leave
add
pop
shll
cltd
or
fiaddl
je
pop
aaa
psubb
mov
xchg
push
push
sarl
lahf
int3
ret
add
adc
or
neg
subb
nop
fidivl
mov
sub
fcomps
adc
dec
data16
mov
les
jbe
mov
adc
test
punpckldq
data16
test
sub
and
ficoms
in
xchg
aam
or
scas
push
push
sub
add
movsl
movsb
fstps
adcl
sbb
dec
inc
push
push
ret
sub
cmp
fimuls
filds
fdivl
lods
push
inc
push
push
in
dec
and
xor
scas
cltd
push
xchg
jecxz
cmpsl
mov
lcall
adcl
sbb
aam
mov
into
std
lcall
xchg
outsb
inc
hlt
jg
roll
sub
dec
lret
movsb
popa
imul
aad
ror
jl
out
ds
lock
pop
int
or
outsb
cmp
neg
inc
sbb
call
cmp
vmovhps
jb
dec
icebp
int
push
pop
arpl
pop
adc
pop
mov
adc
sub
jnp
ret
imul
push
xchg
testb
mov
or
int3
or
cmpsb
stc
add
mov
jnp
sbb
lea
dec
loope
or
incl
jnp
jo
dec
mov
xor
ret
mov
fidivrs
or
stos
push
in
lea
dec
mov
xchg
or
mov
cmc
inc
xchg
mov
fbstp
pop
or
or
fdivrs
inc
xor
into
dec
fidivrl
pop
mov
jno
test
cmp
or
dec
lahf
mov
out
jae
xchg
scas
into
es
jnp
pop
hlt
cmpsl
dec
mov
push
push
enter
loopne
enter
ds
push
sub
or
fisubl
leave
cmc
add
mov
popf
and
les
gs
lret
jmp
adc
fidivs
fcompl
pop
loope
jb
sbb
ss
imul
jne
xor
mov
xor
stc
xor
out
into
fdivp
xor
jecxz
xchg
scas
fcoml
stos
sbb
jnp
pop
lcall
push
les
dec
rorb
cmp
repnz
add
aas
jp
in
cmpsb
loop,pn
clc
add
cli
push
and
repz
aaa
rorb
scas
xor
push
rcrb
mov
mov
jge
movsb
ss
fbld
imul
cmpsl
jo
stos
xorb
jle
les
jl
dec
addr16
fidivrl
enter
and
pop
sub
mov
fwait
test
and
inc
xlat
jns
pop
nop
and
mov
push
ret
adc
dec
call
ss
xchg
add
addl
inc
mov
or
add
add
imul
lock
shll
push
add
pop
push
adc
push
jge
in
xor
cmp
pop
dec
cmp
push
bound
push
add
gs
or
jns
cli
mov
movsb
jge
dec
in
mov
jecxz
adc
mov
add
jno
popa
xchg
push
sbb
pop
or
fsub
push
cmp
outsl
fs
adc
ja
daa
lcall
test
adc
lea
cmpsb
insl
sub
cmpsl
ret
sbb
fwait
mov
sbb
add
sbbl
outsb
frstor
aam
push
fbld
jae
push
lret
dec
insl
in
xor
in
cli
movsb
lret
fdivl
data16
hlt
dec
imul
les
outsl
sarl
mov
addr16
and
adc
and
mov
fsts
jbe
jns
xor
mov
test
out
cmp
push
cmp
idivb
mov
jg
lds
adc
mov
add
aas
jmp
add
push
cmc
or
movsb
adc
add
loope
and
cmp
pop
jg
add
or
pop
test
fldcw
jp
add
enter
insl
outsb
add
xor
mov
mov
popf
imul
dec
dec
mov
loope
pushl
mov
cli
or
jno
mov
sbb
leave
xchg
or
std
sub
mov
xor
fsubp
inc
nop
notb
fidivs
push
in
cmp
mov
arpl
add
mov
jl
jg
add
push
adc
push
dec
jno
sbb
lret
sub
xor
jno
jb
ljmp
inc
jno
cmpsl
and
arpl
or
push
inc
nop
pushf
jb
out
adc
iret
pop
sahf
loope
mov
insl
aad
popa
jp
cmp
cmpsb
enter
imul
jo
repnz
bound
aas
cmpsb
orl
inc
add
rol
pop
cmp
leave
popf
sbb
scas
loopne
ljmp
mov
pushf
pushf
divl
out
shll
in
sub
jae
test
rcr
push
add
push
movsb
pop
sbb
inc
enter
sbb
jge
gs
out
add
pop
push
fcoms
shrb
adc
scas
mov
sarb
gs
pop
pop
rcrb
xchg
pop
neg
and
daa
data16
jns
jns
fs
push
dec
mov
add
push
inc
add
xchg
sbb
nop
sub
mov
xchg
clc
pop
sub
add
adc
cwtl
lea
cwtl
mov
cmp
ss
rorl
js
ja
jle
int
stos
adc
sarb
add
lret
lods
mov
xchg
icebp
loope
jns
shlb
ja
mov
ret
cmc
sbb
rol
dec
in
call
hlt
add
sbb
rcll
movsl
inc
jmp
xor
dec
add
das
pusha
push
cld
sub
mov
sbb
dec
cwtl
shl
ret
rcrl
jno
cmc
lahf
lret
aad
inc
xchg
push
js
loope
add
lret
cmp
ds
sbb
es
push
adc
out
pusha
mov
push
out
mov
cmpsl
sbb
mov
jns
cmp
sbb
cmpsl
cld
jbe
cmpsl
sahf
lcall
out
ljmp
outsb
ret
mov
mov
push
sbb
loop
jns
or
jbe
outsb
inc
bound
arpl
jle
decl
clc
sti
ss
scas
mov
add
out
fs
xor
stos
sbb
mov
jg
xlat
xchg
xor
mov
pop
push
add
inc
inc
dec
loope
or
push
lock
xchg
and
mov
mov
pop
in
sbb
test
in
push
or
enter
adc
mov
cmp
pushf
mov
subl
mov
push
mov
pop
inc
mov
into
scas
int
push
out
mov
jnp
mov
test
jns
test
mov
or
data16
test
mov
iret
mov
jo
add
push
xchg
lret
rcrl
frstor
jp
dec
cwtl
rcrb
cs
ja
out
sub
mov
mov
pop
xchg
lods
scas
pop
insb
enter
jmp
imul
and
or
leave
dec
jecxz
int
insl
pop
in
ss
jnp
testb
test
jnp
dec
xchg
sub
sahf
add
shll
or
mov
inc
das
xchg
lock
mov
outsl
icebp
cmp
testb
ret
push
ficomps
jne
pop
mov
insl
js
call
into
movsl
or
popa
xor
sub
adc
inc
sbb
insl
int3
cmp
lret
addr16
jle
insl
fcmovnbe
xor
mov
inc
jge
jl
sbb
fisubl
inc
std
dec
dec
mov
js
jle
jle
sub
cmp
and
aam
add
xchg
mov
push
imulb
icebp
add
mov
stc
xchg
pop
or
xchg
cltd
xchg
int
scas
mov
mov
cmp
pop
stos
rcrl
push
stc
add
push
rolb
int
rorb
nop
push
test
bound
mov
xor
ljmp
and
mov
dec
mov
jb
cmp
sti
insb
andl
mov
sti
dec
dec
mov
xchg
push
sub
and
cmp
imul
out
mov
sbb
sahf
je
jno
fdivr
or
sbb
sahf
cmp
shll
push
popa
xchg
out
cmp
cmp
mov
mov
rcr
fbstp
xor
mov
cmp
fucomp
add
cltd
cmpsb
cltd
mov
fucomi
jnp
lods
andb
pop
jo
xchg
push
pusha
xchg
stos
ds
clc
mov
les
pop
push
cs
cmpsl
push
testb
sbb
sahf
sub
mov
mov
xchg
jp
xchg
dec
xlat
jb
repz
std
mov
jne
scas
inc
popa
enter
jo
jo
add
push
or
insb
icebp
sbb
adc
std
aam
and
adc
insl
mov
push
rcrl
dec
mov
ds
jp
jecxz
jne
mov
xor
fildl
xchg
std
mov
jmp
jno
es
test
inc
xlat
repz
cmp
std
ja
sahf
imul
xlat
std
dec
add
mov
cmp
ja
scas
js
or
out
and
inc
sub
add
push
repz
mov
fstpt
dec
stc
mov
pop
das
jle
cs
shr
add
rclb
push
sub
aam
nop
fisttps
addr16
mov
pop
sub
enter
cmp
lcall
test
or
out
add
out
lcall
aaa
mov
les
imull
clc
or
orl
movsb
dec
jecxz
dec
sahf
xor
jecxz
add
push
jne
inc
mov
rcll
xchg
push
insb
cmpsl
sub
mov
mov
lcall
xor
not
out
mov
xchg
push
xor
das
push
cmp
xchg
js
add
mov
loopne
cli
sarb
mov
mov
lods
hlt
hlt
mov
nop
fucom
xor
into
outsl
jl
sbb
std
dec
dec
inc
orl
lea
xchg
into
inc
push
xor
daa
repnz
adc
enter
scas
les
mov
ja
cmp
mov
hlt
push
loop
lock
aam
lock
aas
cwtl
les
mov
call
into
add
aam
repnz
add
sbb
jle
or
icebp
add
cmp
inc
pop
xchg
scas
nop
mov
and
jge
dec
gs
stos
sub
sub
sahf
sub
lods
pop
addb
imul
mov
in
jne
xor
mov
gs
mov
addr16
lret
icebp
jge
mov
cmp
xchg
int3
imul
enter
fnsave
lcall
lret
cmpsl
mov
insl
aam
sbb
pop
xor
dec
jnp
movsl
mov
dec
iret
xchg
push
pusha
xor
std
mov
xchg
or
fsincos
jp
aad
repnz
lret
sbb
arpl
jg
lods
xchg
sub
inc
sbbb
lahf
add
rcrb
into
pop
jge
popa
leave
fstps
mov
out
cmp
pop
push
je
push
push
xor
repz
and
or
jno
jb
mov
push
sti
cwtl
into
repz
sub
sbb
sbb
jmp
repz
ret
daa
and
mov
fmuls
clc
push
or
fs
jns
fs
and
jecxz
jb
push
orl
or
scas
gs
out
pop
jne
mov
add
mov
aaa
test
psrlq
fldenv
lods
and
inc
pop
sti
in
cmpb
adc
pop
xlat
shll
push
sbb
in
in
icebp
stos
xchg
ljmp
xchg
in
stos
std
xchg
xchg
jno
iret
jl
movsl
pop
js
aam
or
push
xchg
push
inc
mov
adc
aam
mov
lret
xor
repz
ja
mov
inc
ds
pusha
add
js
cmp
mov
insb
mov
sahf
loope
sub
cmc
rcl
imul
cmp
shl
jno
push
lds
xchg
mov
or
pop
call
icebp
adc
jo
pop
add
push
ret
roll
rorb
xchg
add
push
lds
mov
jnp
sbb
rolb
nop
test
outsb
xchg
cwtl
xlat
lods
xor
mov
ret
jae
mov
mov
pop
lsl
mov
adc
scas
hlt
out
mov
mov
push
leave
sbb
in
inc
in
pop
dec
jle
xchg
and
pop
rclb
inc
repnz
add
test
lods
mov
sub
sbb
inc
mov
cmp
or
pop
ret
es
mov
dec
sub
imul
dec
lahf
daa
push
push
jp
cmpsl
dec
dec
loope
mov
cltd
in
jecxz
xor
fwait
insb
pusha
ret
and
and
jo
or
xchg
mov
sub
lcall
and
push
sbb
inc
out
inc
stos
stc
xor
sti
out
add
ja
test
pop
mov
andl
or
in
jno
pop
and
fstl
and
or
shlb
push
sub
or
xor
mov
mov
dec
inc
xchg
shrl
out
mov
ffree
les
imul
fnstenv
std
cmpsb
popa
sbb
jmp
sbb
add
push
clc
ret
nop
cwtl
daa
mov
rorb
jns
test
and
pop
adc
inc
jmp
fwait
inc
insl
movsb
mov
int
movsb
fidivrl
outsl
dec
fnstcw
lods
iret
xorb
lock
ja
inc
loope
fldl2e
pop
or
xor
inc
mov
out
push
shlb
jo
adc
in
push
xchg
add
gs
in
lock
enter
mov
inc
xchg
imul
mov
ljmp
push
lcall
push
icebp
pop
pop
insl
out
loope
aaa
xchg
lahf
shll
cmpsl
fstpl
or
addr16
add
sbb
pop
loop
jb
inc
shl
sbb
sub
repnz
lods
sub
dec
push
mov
and
jne
popf
into
adc
int
call
jno
cwtl
cmp
test
getsec
out
iret
outsl
lds
add
mov
mov
xchg
data16
lret
xabort
cmp
loopne
sbb
mov
inc
add
scas
push
mov
call
repz
stos
scas
jecxz
sub
jo
mov
push
mov
sbb
xchg
mov
out
ljmp
push
mov
inc
jae,pt
xchg
mov
stos
icebp
sbb
hlt
or
dec
insl
mov
int
xor
dec
xchg
cmpsl
pop
sbb
ret
pop
sub
sub
adc
dec
nop
jle
pop
and
cli
and
xor
and
scas
cmc
inc
pop
lret
push
pop
cs
or
cmc
rorl
out
dec
jae
mov
cltd
xor
cld
icebp
add
cmc
add
and
hlt
sub
inc
jns
push
cmp
and
jg
mov
fs
mov
fistl
jne
mov
into
push
mov
pop
pop
mov
cwtl
int
dec
test
imul
xchg
pop
jmp
or
movsl
push
xor
fucom
dec
mov
fwait
sahf
jnp
sub
cs
roll
outsl
jb
dec
ljmp
clc
test
pop
sbb
imul
sbb
cmpsb
push
mov
push
or
bound
add
call
xor
lock
negl
sbb
lcallw
xor
loopew
sbb
mov
xor
fisubl
shll
cmp
lret
and
push
jnp
jle
and
emms
out
add
shll
adc
out
in
push
push
jo
jmp
bound
enter
sahf
xchg
daa
mov
adcb
ss
or
push
scas
sbb
inc
lds
and
popf
cmp
fwait
or
jno
dec
xor
movsl
shlb
clc
inc
out
pop
xchg
and
outsl
or
mov
cltd
data16
repnz
and
mov
mov
bound
and
ficoml
sub
push
push
push
into
xor
call
sub
arpl
xor
iret
add
xchg
lahf
xchg
or
push
cmp
jmp
push
mov
sub
cwtl
out
pop
ja
and
xchg
pusha
call
mov
test
iret
mov
lea
xor
loope
mov
add
adc
inc
add
cld
and
in
jne
rorb
aas
cmpb
mov
sbb
test
pusha
loop
jge
cmpsl
dec
mov
inc
mov
subb
fcmovbe
jmp
ds
mov
das
lret
inc
icebp
or
mov
xor
in
lock
and
lea
jne
movsb
mov
fwait
dec
andb
lods
xchg
mov
sub
sarb
notb
or
jge
aaa
test
shll
dec
aam
fsub
movlps
push
shrb
aas
xlat
or
loopne
in
stos
push
jge
rorl
icebp
dec
mov
or
in
cs
shrb
in
xchg
mov
sti
in
push
repz
xor
xor
sbb
mov
push
sub
div
pop
enter
jnp
pop
dec
mov
jae
stc
jle
cmp
cmp
mov
adc
sub
pop
push
clc
mov
movsb
jb
mov
jecxz
popa
jae
je
mov
sti
lcall
out
mov
add
xor
out
je
ds
cltd
pushf
dec
and
jmp
jg
sbb
popf
dec
or
arpl
push
push
xor
scas
mov
popa
or
hlt
scas
pop
xor
int3
sahf
cmpsl
mov
xchg
xchg
and
icebp
mov
lds
sbb
push
outsb
inc
jmp
mov
int
dec
in
out
in
adc
sbb
jo
shl
shrb
out
aaa
sub
pop
in
ret
hlt
add
add
mov
test
sub
jbe
jg
sarb
outsl
fucomi
pop
push
jae
fwait
xchg
arpl
jge
gs
sti
xor
xor
int3
inc
jae
mov
jge
insl
and
push
mov
push
dec
dec
push
sbb
inc
pop
ds
sti
xchg
das
push
pushf
dec
inc
hlt
xchg
cmp
imul
inc
pop
pop
fcompl
ja
shl
pop
cltd
pusha
arpl
andb
mov
int3
stos
and
fisubrl
push
test
xchg
cmpsb
lret
adc
scas
in
pop
int
inc
inc
icebp
mov
adc
inc
outsl
cmp
incl
add
rcll
iret
ficoms
orl
xchg
inc
nop
shll
leave
iret
xchg
dec
jbe
out
out
push
mov
jge
movl
scas
hlt
push
push
ljmp
or
xchg
cld
mov
xchg
jae,pt
push
cmpsl
adc
jge
loope
sti
pushl
add
test
mov
gs
mov
xor
xlat
add
mov
test
xchg
adc
imul
das
cmp
js
or
mov
and
in
aaa
sub
pop
sub
test
xor
sub
js
inc
stc
das
or
loop
int
mov
vmptrld
test
pop
popa
and
cltd
or
cmp
je
pop
or
hlt
test
call
add
mov
dec
jmp
arpl
fdivr
out
mov
js
je
lods
inc
adc
out
das
cmp
pushf
inc
in
add
imul
notl
mov
or
mov
arpl
shlb
and
rcl
mov
mulb
ja
sbb
outsb
fimull
pop
rcl
cmp
inc
cmc
out
ret
pushf
rclb
stos
js
cmc
cld
mov
les
add
push
dec
fcoms
fldenv
and
movsl
sarl
and
pop
aaa
lea
mov
filds
scas
sbb
faddl
mov
imul
add
ja
push
mov
sbbl
mov
int
scas
xlat
mov
pop
mov
add
add
hlt
inc
ljmp
mov
rcll
push
icebp
xchg
xor
pop
xchg
outsb
xor
test
lods
adc
or
adc
daa
add
pop
mov
loope
bound
test
lods
sbb
imul
sbb
pushf
mov
test
or
leave
enter
mov
mov
inc
lret
lea
mov
outsb
jnp
mov
roll
push
push
mov
sub
xchg
adc
sarb
ror
push
cmp
loopne
leave
add
mov
adc
leave
dec
jmp
pop
xchg
in
cmp
fdivl
add
movb
add
dec
sub
ss
mov
cmpsb
pop
dec
jl
and
sub
loopne
inc
shrl
push
add
in
add
sub
data16
jne
bound
fldenv
pop
mov
xchg
cmp
aad
push
xor
mov
inc
out
pop
ffreep
fdiv
stos
pop
lods
jnp
xchg
mov
shl
push
jns
push
xor
ja
mov
nop
loope
insb
push
das
scas
push
jl
xchg
xchg
push
xchg
lock
out
ret
push
shlb
negl
sti
xor
and
fbstp
xor
jne
pop
jbe
jecxz
cmp
out
cmpsl
sbb
notl
rolb
outsl
and
clc
addb
movsb
movsb
mov
xchg
in
xchg
test
mov
push
into
sbb
mov
sub
xor
int
cmp
cli
push
inc
xchg
sub
data16
imul
sub
repnz
mov
in
in
or
fidivl
and
cli
sub
jne
aad
or
and
shl
mov
dec
es
pop
jbe
stc
jge
int3
adc
shl
mov
lods
ret
xchg
jne
jae
cmp
xchg
push
mov
mov
fdivrl
aam
stos
xchg
mov
out
xchg
and
jbe
dec
sbb
loop
loopne
jns
jo
dec
and
or
mov
je
out
inc
in
test
sbb
and
adc
into
rorb
xor
xchg
sbb
rcll
jge
daa
jbe
std
pop
inc
adc
stc
sub
negb
call
lret
push
aad
pop
mov
add
and
cs
jb
rolb
int3
outsb
cmp
mov
push
popl
mov
sub
fsubrl
daa
out
test
pop
add
and
fcomps
jmp
imul
sbb
arpl
rorb
aad
xlat
movsb
clc
pop
sbb
mov
xor
sub
ret
or
cmpsl
or
pop
cmp
jge
mov
mov
xchg
in
pushf
cmp
negl
cmpsl
loopne
mov
mov
pop
test
cwtl
add
in
add
popf
mov
inc
cmpsb
cwtl
ret
sub
idiv
imul
iret
push
xchg
lock
push
mov
pop
lds
imul
adc
mov
jmp
mov
sbb
jb
sbb
int
orl
push
popf
lods
shll
in
mov
out
aad
mov
insl
pop
mov
into
jl
mov
cmp
jnp
hlt
inc
in
pop
dec
lods
out
xor
cld
cs
pop
push
mov
loope
pop
je
sarb
aaa
jno
dec
rorb
mov
nop
jb
ja
or
leave
fldenv
xchg
ja
js
icebp
push
pop
aaa
cmp
mov
adc
pushf
ds
out
sub
shlb
ret
adc
mov
sub
xlat
cmp
pop
jl
pop
adc
lea
jp
test
lret
aaa
sub
sub
jge
xor
and
mov
push
lcall
sub
sub
adc
nop
add
imul
das
cmc
decl
pop
fs
xchg
xchg
es
ja
ja
aas
mov
jl
dec
outsb
ljmp
cmpsl
repz
jmp
cld
push
pop
and
in
push
jge
hlt
cmc
adc
xor
and
repz
lret
aam
fildll
test
loope
imul
in
sbb
cmp
movsl
bnd
pop
cwtl
and
and
mov
jo
adc
push
sbb
cmp
jg
add
mov
cmp
mov
mov
pushf
loopne
loope
nop
test
gs
call
sub
mov
iret
scas
jae
nop
aad
jge
sub
cmp
inc
ficompl
popf
mov
dec
dec
and
in
cld
scas
add
mov
push
mov
inc
scas
mov
mov
and
fcmovu
mov
fisttps
push
cmp
mov
mov
or
jle
xchg
js
imul
cmp
pop
mov
ret
andl
cmc
jno
xor
ds
adc
nop
mov
fsubrl
fisubl
scas
mov
sub
gs
mov
xchg
stos
xchg
into
inc
and
xor
iret
push
mov
shrl
dec
adc
xchg
dec
add
cmc
mov
outsb
fidivrl
loop
mov
cld
mov
arpl
lcall
and
push
push
scas
cmpsl
adcb
lahf
andl
jne
std
jne
pop
mov
nop
shlb
lods
or
adc
sbb
adc
adc
add
jecxz
scas
dec
cmpsl
movsb
pop
cs
jnp
fimull
in
jns
inc
insl
sbb
xchg
push
enter
jl
add
jb
repz
dec
dec
jg
xor
repnz
jnp
inc
xchg
jp
pop
fistl
out
outsb
dec
jge
mull
push
movsl
jnp
cmp
data16
movups
mov
test
mov
dec
cmpsb
cmpsl
cmc
inc
lea
int
into
inc
push
dec
jp
arpl
bound
clc
mov
test
decl
or
shr
mov
dec
das
arpl
inc
adc
cmpsb
xor
int3
push
imul
ret
mov
mov
dec
aaa
xchg
xchg
inc
adc
or
cli
movsl
dec
pop
mov
xor
loop
sub
mov
data16
mov
rolb
mov
outsl
cld
mov
stos
dec
jecxz
xor
xchg
xchg
in
fcomps
aad
mov
xchg
repz
std
adc
out
les
sub
insl
nop
jp
imul
mov
stc
dec
pcmpgtb
sahf
cmove
stos
int
repnz
aaa
cld
cmp
in
pabsb
mov
iret
jecxz
jb
insb
xchg
dec
cmp
push
jns
push
lret
and
mov
mov
insb
in
orl
jmp
mov
xor
out
hlt
je
dec
into
je
movsb
repz
lret
and
pushf
adc
jg
cltd
lea
testl
dec
or
adc
add
lods
or
mov
movsl
dec
cmpsb
inc
push
ljmp
sbb
dec
xor
clc
aad
jg
enter
sub
stos
xchg
in
fcmovnbe
push
fdivr
mov
data16
inc
outsb
push
pushf
arpl
push
mov
dec
mov
mov
shll
adc
fsubrl
pop
mov
or
jne
mov
dec
lods
add
lcall
dec
lods
cli
in
imul
imul
xchg
add
lcall
sahf
lds
shll
sub
xlat
mov
int3
xchg
bound
pop
xchg
cmpsl
mov
cld
adc
xor
xchg
sahf
call
lret
add
pop
and
lods
repnz
clc
in
in
sbb
xor
xor
pop
movsl
pop
out
test
sbb
jp
or
mov
push
cmpsl
jnp
cmc
arpl
cltd
out
and
sbb
pop
outsb
lcall
shlb
push
jle
rcrb
push
dec
jmp
movsb
dec
mov
daa
mov
inc
aam
fwait
movsb
daa
push
into
inc
or
pop
mov
inc
cmpsb
jbe
sub
jp
mov
cmpsb
push
aad
out
dec
jo
bound
sub
pop
cmpsb
dec
fldl
cmp
xor
mov
lahf
and
fcoml
push
push
or
out
and
sbb
or
sar
aaa
dec
lcall
mov
dec
rolb
or
push
xchg
sbbl
dec
mov
jle
imul
int
push
sbb
xor
shrb
in
pop
loop
test
xor
cmc
shlb
and
inc
das
mov
adc
js
xchg
mov
xor
icebp
push
mov
scas
jg
inc
push
loop
insb
mov
mov
sub
repz
or
push
jge
xor
in
ret
aam
nop
je
lods
leave
cwtl
cmp
jle
cli
mov
xchg
imul
add
xor
mov
dec
outsb
jmp
je
push
das
loope
insb
inc
iret
mov
ja
and
das
xchg
mov
in
and
mov
sub
daa
rclb
jb
add
int
mov
aaa
lods
jmp
test
lret
syscall
push
imul
mov
arpl
and
lea
and
mov
into
pop
lods
push
ret
gs
push
adc
xor
fldt
push
mov
jecxz
dec
lcall
mov
mov
mulb
sti
or
add
pop
mov
rorb
xchg
mov
test
orps
das
ret
test
das
cwtl
sahf
mov
lcall
inc
ss
outsl
sbb
stc
add
mov
pop
in
xchg
xchg
xchg
repnz
dec
dec
pop
sbb
pop
mov
inc
dec
std
loope
cmpsb
and
inc
daa
popa
nop
jp
mov
jne
sub
filds
stos
sti
rcll
mov
pusha
dec
add
mov
rorl
movsb
dec
cmc
inc
dec
cwtl
negb
xor
xor
subl
dec
mov
test
sbb
cmp
cmp
xchg
in
mov
mov
shll
cmove
fsts
pop
sahf
add
xchg
push
icebp
hlt
dec
or
or
leave
push
jae
loop
mov
inc
out
clc
ss
sbb
sub
jmp
in
pop
sbb
rorb
mov
ret
ret
dec
push
movsl
imul
push
aad
push
ret
jle
data16
movsl
lret
dec
inc
sbb
clc
cmp
js
or
sahf
outsb
fucomp
lret
mov
movsl
insb
dec
lret
rolb
movsl
dec
inc
ja
xchg
mov
fwait
pop
add
psllq
cmpsl
mov
xchg
or
push
das
cmp
sub
mov
pop
xchg
mov
xorl
in
or
notl
aas
xchg
push
mov
dec
clc
inc
mov
xor
enter
lahf
in
push
mov
adc
fsubrs
lret
loopne
out
inc
adc
in
dec
sbb
repz
idivl
lock
inc
or
dec
cmp
and
mov
jge
movsl
jno
stos
sar
call
fistl
sahf
pop
mov
lea
sbb
pop
mov
out
jl
cmc
xor
mov
hlt
adc
pop
gs
aam
cwtl
xchg
and
test
das
mov
sub
imul
mov
xor
and
fcomps
lret
xor
loopne
add
sbb
mov
jno
mov
xlat
cltd
pop
pop
adc
std
sbb
sbb
test
int
movsb
mov
adc
js
iret
das
out
and
xchg
scas
fwait
enter
xor
loop
mov
cmp
movsb
hlt
push
adc
add
popf
jns
outsb
sbb
pop
outsl
sub
and
lcall
mov
ds
add
test
lret
wrmsr
fmull
roll
cmpsb
js
ficoml
cmc
push
mov
pop
aam
mov
mov
and
inc
dec
sbb
and
out
and
aam
jno
lahf
jecxz
mov
out
jo
adc
add
pop
cld
lods
fldl
mov
shrb
enter
push
rcrb
pop
mov
lsl
sti
cmc
jle
pop
mov
adc
ja
leave
jo
inc
shlb
ljmp
jle
inc
xchg
cld
xchg
in
dec
and
mov
mov
div
add
pop
push
mov
dec
and
scas
test
test
ret
cmp
out
out
stos
fwait
outsb
xor
push
pop
mov
mov
loope
ljmp
frstor
lock
movb
pop
popa
pop
mov
lret
shlb
push
mov
clc
sbb
rclb
lret
stos
add
xchg
sub
push
jae
pop
dec
sbb
mov
jns
push
fdiv
leave
in
and
into
mov
mov
imul
xlat
cmp
and
in
in
push
test
dec
jb
add
mov
stc
lcall
rorw
jge
stos
mov
push
and
jg
pushf
jge
mov
xchg
xchg
push
imul
rorl
xchg
int
pusha
mov
cmp
dec
bndldx
mov
sbbb
mov
subb
es
loop
aam
jl
xlat
adc
divl
jmp
ror
in
aaa
mov
jnp
loope
add
mov
inc
ret
jle
cmp
push
testl
xor
inc
push
shrb
jnp
xchg
in
dec
adc
jg
push
and
xchg
rcrl
cmovs
fisubrl
lods
aas
dec
xor
dec
mov
pop
leave
adc
hlt
fidivl
sbb
mov
ljmp
push
pop
aas
inc
add
pop
fs
or
adc
sti
add
lret
ja
mov
push
dec
cmpsb
mov
stos
push
xor
cmp
sbb
leave
sub
inc
jecxz
cmp
addr16
xchg
stos
fbstp
pop
dec
inc
mov
xchg
cwtl
pusha
or
cmp
pop
lods
stos
dec
mov
push
mov
test
sub
xchg
xchg
xor
icebp
scas
hlt
lods
push
out
dec
mov
push
out
jae
into
push
add
sbb
jbe
and
les
jle
and
es
les
fcoms
mov
or
fisubrs
push
mov
sbb
outsb
leave
rorb
repnz
pop
cs
andb
aas
js
rcrb
call
mov
pop
ljmp
gs
or
scas
mov
test
in
mov
outsb
out
push
das
icebp
jno
push
fiaddl
pop
shl
test
sub
test
mov
pop
inc
mov
imul
stos
cmp
rclb
pop
inc
in
and
xchg
dec
push
inc
in
jo
dec
dec
roll
jg
sbb
ficoml
out
in
ja
das
cmp
add
lcall
mov
lcall
xchg
fmul
aas
xchg
inc
dec
cltd
movsb
in
pop
mov
lods
int
adc
xor
jmp
xchg
cwtl
and
adc
add
push
nop/reserved
inc
mov
das
pusha
jmp
push
and
dec
or
fiaddl
fwait
jle
loopne
mov
fwait
jge
dec
out
push
popa
jne
les
add
or
mov
xor
pop
cmp
idiv
outsb
push
loop
orl
jl
loop
mov
push
sahf
icebp
lds
or
lahf
das
xor
add
cmp
mov
mov
aad
dec
xlat
xchg
fidivrl
test
insb
js
mov
mov
push
xchg
pop
cwtl
xchg
daa
mov
fsubrs
adc
jecxz
leave
icebp
js
push
pop
mov
mov
sub
arpl
mov
dec
int3
push
or
dec
int3
push
or
xchg
dec
ret
cmp
mov
clc
xor
shlb
je
xchg
fld
orl
js
push
test
dec
cmpsb
mov
leave
pushl
cmp
push
cmp
adc
push
add
pop
iret
lock
stos
inc
insl
xchg
mov
das
loopne
outsl
adcb
pop
jg
mov
mov
dec
xchg
orb
mov
cwtl
rorl
or
loopne
neg
add
push
int
xor
push
int
sub
fwait
out
mov
sti
cmp
and
mov
add
push
adc
outsl
stos
mov
pop
lea
loop
or
mov
mov
and
add
and
mov
mov
mov
mov
xlat
sbb
push
cmp
cmp
loopne
shlb
cmpl
aam
test
or
aam
add
in
in
lret
fmulp
mov
iret
int3
outsl
ja
scas
sbb
push
sbb
js
cwtl
mov
inc
xchg
clc
mov
mov
scas
bswap
cld
mov
js
adc
or
cwtl
lcall
das
add
jne
add
cmc
inc
leave
hlt
mov
lcall
push
fisttpl
jns
sbb
mov
nop
stos
adc
dec
push
cmp
pop
push
jp
scas
les
aam
aas
cmp
out
fisubrl
les
lret
movsb
cmp
xlat
inc
inc
jbe
fcomps
mov
cmpsb
repz
das
lods
pop
repnz
stos
sbbl
rorb
push
or
bnd
or
xchg
out
orl
push
lods
pop
ja
iret
pop
cltd
add
jbe
mov
bound
js
mov
addr16
enter
ror
hlt
in
xchg
stos
sti
jge
aaa
mov
pop
inc
ljmp
sti
cmp
movsb
push
push
mov
mov
xor
movsb
or
add
pop
xor
mov
mov
jl
aam
ds
fisubrs
shlb
and
jo
mov
mov
stc
mov
sbb
aad
pop
cwtl
xor
aaa
pop
jns
and
leave
std
ljmp
dec
sub
inc
xchg
jmp
lods
das
dec
pop
pop
cmp
add
cli
pop
ja
pop
push
aaa
xchg
xchg
or
or
sbb
mov
push
sub
aam
mov
fs
int
ss
pusha
int3
add
test
inc
xor
mov
rorl
adc
vzeroall
push
out
outsl
xor
pop
jg
adc
sbbb
loope
lret
and
jae
call
jmp
adc
pop
loope
pop
shll
iret
sub
outsl
mov
clc
sti
insb
lods
lret
add
movsb
mov
lods
inc
mov
inc
push
outsb
lods
push
pop
mov
js
dec
cltd
cs
push
ret
or
lcall
addw
ljmp
add
mov
pusha
into
aaa
pop
mov
addr16
ljmp
pop
cs
pop
jl
lds
mov
mov
sub
mov
daa
and
add
inc
pusha
out
nop/reserved
jnp
cmp
adcb
adc
jg
clc
ds
sub
add
aas
jg
into
pop
shrb
pop
jbe
aas
inc
mov
pop
xor
sbb
scas
aaa
jnp
loope
fcmovnu
mov
fs
mov
xor
jp
xlat
js
lock
ss
out
cmpsb
psubsb
add
popf
data16
and
mov
sub
movsb
dec
aas
pop
or
out
repz
cmc
loop
out
in
inc
cmpsb
cmpsl
pushf
push
inc
into
and
imul
cmpsl
int
out
inc
loopne
pusha
add
push
shl
por
orb
and
aam
sub
sbb
xchg
mov
mov
iret
mov
xor
test
sahf
cmc
int
jbe
cltd
lret
jecxz
sub
in
cmc
ljmp
icebp
roll
dec
int
pushf
mov
push
movsl
out
in
jecxz
cltd
lcall
pop
test
sub
shl
or
xlat
xchg
daa
mov
sub
xorl
shl
sbb
dec
mov
std
cmp
fldt
pop
test
andb
lahf
mov
dec
mov
loop
cmpsb
dec
mov
dec
cmp
push
dec
mov
xor
mov
call
adc
xor
jno
ss
ja
inc
mov
inc
and
lds
adc
sub
pop
cwtl
cwtl
mov
fnsave
arpl
iret
popf
stos
test
pushf
sbb
jne
mov
fsubp
mov
frstor
mov
add
out
jg
cmpl
fcompl
mov
rcrb
mov
dec
sub
push
xor
arpl
sub
mov
pop
xor
and
sub
enter
or
mov
jo
xor
fadds
sbb
or
mov
pop
test
push
pop
xchg
iret
cmp
arpl
jnp
push
pusha
pop
add
lret
cld
or
cmp
daa
jno
mov
shll
mov
adc
inc
aam
pop
adcb
or
aam
inc
rorl
outsl
cld
shl
imul
test
addl
dec
in
repz
jg
pop
mov
pop
mov
pop
jb
pop
clc
inc
and
mov
push
enter
push
dec
pcmpeqb
mov
fucomi
out
add
xchg
lret
xchg
mov
jle
mov
jmp
lret
add
and
sub
jmp
test
or
test
cli
mov
addb
fsts
out
jbe
int
aaa
mov
iret
lock
aam
adc
sahf
mov
xor
fstps
orl
ret
cltd
in
data16
ret
lods
or
mov
in
or
ss
add
mov
mov
aaa
subb
xchg
sbb
xchg
xchg
enter
loope
mov
scas
pop
jns
or
push
fnstsw
leave
in
mov
inc
mov
mov
adc
lret
jb
ret
icebp
in
mov
aad
dec
mov
push
scas
outsb
cld
and
out
int
jae
in
xor
aaa
cli
mov
fmuls
jno
sbb
and
cmpsl
dec
fs
jl
sub
fbld
mov
or
call
sub
shlb
aas
and
mov
xor
hlt
cltd
push
mov
jmp
aas
enter
mov
cld
ret
fsubrl
mov
sbb
into
jno
outsl
stos
pushf
outsl
or
and
dec
and
fnstenv
cs
lock
push
sbb
mov
das
sub
sbb
lods
pushf
add
jl
inc
and
movl
add
dec
sbbb
adc
mov
je
jmp
jbe
dec
push
lds
gs
int
adc
mov
jecxz
faddl
or
std
pop
push
pop
add
and
inc
jp
pop
ret
mov
jo
enter
popa
movsl
mov
push
lds
pop
fsub
iret
movsb
gs
sub
and
inc
out
loope
push
push
jne
push
dec
repz
sbb
pushf
adc
ja
shlb
or
cld
loope
cmp
out
or
out
sub
jmp
add
test
in
in
ret
or
inc
in
neg
adcl
outsl
mov
push
pushf
cmpsl
and
pushf
push
mov
push
out
sbb
and
psubq
test
das
mov
insb
mov
inc
int
mov
cmp
shll
bound
jae
mulb
das
sub
sbb
aaa
push
sub
sub
aad
and
hlt
jnp
push
scas
pusha
or
hlt
clc
push
leave
in
push
pop
lods
outsb
stos
jge
sub
rcr
incl
mov
push
jb
pop
je
cld
rolb
aas
xchg
xchg
icebp
rorb
jp
not
mov
das
and
dec
loope
mov
outsl
add
ja
xlat
les
fs
loope
xor
pop
cwtl
mov
mov
in
fisttpll
dec
mov
jae
aad
es
popf
dec
pop
xchg
pop
sub
adc
rclb
lock
adc
fwait
sbb
or
repz
aam
std
push
jo
fnsave
ds
jae
cmpsb
or
dec
lea
insb
ja
stos
sub
adc
push
mov
mov
inc
xor
call
fcoms
pop
sbb
test
lock
or
ljmp
mov
movsl
shlb
insl
mov
cmc
and
adc
xchg
into
fidivl
pushf
std
add
jnp
in
adc
pushf
mov
and
sbb
xchg
mov
pop
sub
movb
shlb
orl
daa
nop
repz
lods
sbb
push
addb
xor
ds
bound
mov
dec
push
rorl
je
pop
sbb
repnz
shlb
push
mov
aas
cmp
into
push
nop
call
aam
sub
data16
fistl
add
pusha
lahf
pop
xlat
flds
adc
out
pop
push
add
mov
dec
mov
int
insb
out
dec
jg
in
xlat
fcmovb
fiadds
xchg
xchg
iret
lret
xchg
and
cltd
cmp
cld
dec
xchg
mov
int3
add
cwtl
jp
and
pop
push
push
test
jge
shrl
lods
push
shrl
mov
cwtl
or
stos
dec
pushf
pop
scas
pop
sahf
rorl
push
ret
idivb
mov
push
mov
dec
leave
push
divb
incl
xchg
xor
inc
cmp
orl
mov
int3
les
imul
aad
xchg
add
popa
or
imulb
scas
out
aaa
jmp
jg
jle
imul
mov
ret
test
dec
sbb
shl
jmp
dec
lds
roll
hlt
dec
cs
xchg
mov
mov
out
loop
cmp
ret
jge
inc
xchg
jmp
ja
add
pop
rclb
in
mov
sarl
sub
stos
shll
or
dec
pop
sub
das
jns
aam
mov
push
test
xchg
pop
inc
push
ljmp
xchg
fstl
clc
shl
xchg
pop
dec
sbb
sub
neg
loop
in
cmpl
mov
xchg
or
aam
mov
subl
cmp
aam
mov
jle
clc
bound
mov
sbb
arpl
ret
mov
aas
pop
in
mov
icebp
je
add
lret
or
push
punpcklbw
scas
icebp
aad
in
xchg
das
addr16
int
fistl
lea
mov
adc
repz
lret
insl
ja
out
jg
push
je
jae
add
inc
or
popf
cmpsb
adc
dec
dec
in
in
xor
inc
mov
inc
jns
sahf
popl
add
leave
cli
sbb
ds
pop
pusha
addr16
jnp
fdivrs
and
xchg
dec
negb
iret
lahf
int3
mov
mov
gs
rorl
loop
je
movsb
jae
sub
leave
out
test
lret
inc
decb
push
sbb
int
sbb
adc
loopne
jo
mov
mov
data16
push
mov
xchg
lret
mov
mov
adc
xchg
rcr
enter
pop
hlt
cmpsl
mov
xchg
xor
mov
or
jmp
push
sahf
xor
clc
sbb
push
sbb
mov
mov
mov
push
jne
loop
pusha
scas
imul
xchg
fwait
mov
imul
push
cmovg
mov
push
mov
dec
sbb
and
add
sti
mov
jp
xchg
test
push
in
add
cli
inc
or
arpl
cmp
cld
dec
addr16
mov
outsb
jecxz
xchg
fists
xchg
cmp
push
sbb
test
adc
mov
lock
test
fisubrs
mov
and
mov
test
iret
rclb
add
xchg
loop
inc
adc
sbb
ret
xor
jg
imul
icebp
or
add
loope
test
add
aam
jl
sbbb
cmpsl
mov
dec
gs
dec
mov
jbe
inc
mov
loope
int
adc
leave
and
pushf
jp
sbb
test
xchg
stos
popa
sub
js
sub
es
sahf
fsubrl
stos
hlt
popf
jmp
sbb
dec
jnp
fimuls
cmpsb
cmpb
out
jno
xchg
pushl
pop
xor
mov
cwtl
sbb
jb
in
ret
hlt
jnp
outsl
xor
gs
pop
mov
shlb
iret
xor
addr16
stos
rcr
cmp
cmpl
iret
gs
sar
add
mov
jl
dec
arpl
cld
push
jecxz
xor
insb
push
in
inc
push
rorl
xor
ret
aaa
mov
jl
es
jmp
add
and
ja
call
pushf
adc
add
imul
jns
leave
cltd
in
mov
out
push
aaa
mov
inc
cmp
jecxz
adc
mov
cmp
rcl
sub
push
in
xor
popf
cmp
push
cmc
cmpsl
lcall
adc
xchg
xor
pusha
fldt
jbe
pusha
jo
popl
pop
nop
arpl
push
adc
push
popa
push
mov
cmp
mov
jecxz
mov
prefetchnta
in
jle
mov
mov
push
lea
mov
imul
mov
inc
mov
inc
fmul
dec
pop
shlb
mov
popa
cmpl
xchg
scas
mov
aas
mov
inc
in
mov
punpckhbw
repz
dec
popa
test
or
jo
pop
popf
inc
cmpsb
ja
rcll
mov
movsb
mov
or
jecxz
in
inc
sub
push
push
push
mov
pop
icebp
imul
push
lcall
fwait
in
sub
mov
in
ret
pop
stos
cmc
je
scas
jmp
xchg
and
and
testl
lret
jb
int3
fistps
stos
out
in
cmpsl
movsb
jne
clc
arpl
xchg
ljmp
aam
mov
out
sbb
fyl2x
adc
les
pushf
in
sub
dec
out
xchg
push
cmovns
cmc
or
pusha
fbld
cmp
and
mov
fsubrs
lret
fadds
daa
push
pop
aas
and
clc
xor
xlat
test
pop
bswap
push
xchg
sub
rcrl
pusha
push
inc
lds
add
xchg
fdivl
mov
int
cld
mov
shlb
mov
push
clc
xchg
repnz
lahf
out
fdivs
flds
rorb
xchg
fcmovnu
and
int
mov
xlat
scas
mov
arpl
fbstp
mov
and
test
xchg
inc
mov
movsb
cmp
mov
xchg
in
push
mov
pop
stos
call
xor
sti
cmp
mov
psubsb
loope
enter
xchg
mov
sbb
inc
js
in
repz
mov
inc
jp
push
sti
mov
outsb
fcoms
sbb
testl
cmp
int
sbb
icebp
insl
xchg
mov
xor
sub
lea
mov
pop
dec
mov
dec
adc
add
lods
loopne
montmul
cmpsb
pop
ja
mov
bound
fs
add
xchg
mov
les
push
push
pop
push
adc
jle
push
sbb
pop
inc
cld
inc
dec
mov
std
xchg
push
test
insb
lods
fwait
push
xor
xor
mov
adc
cwtl
out
and
loopne
sbbb
sub
stos
mov
mov
pop
aad
mov
adc
pop
and
int
xlat
add
push
cmp
or
mov
adc
cmp
in
iret
scas
stc
imul
enter
push
mov
push
sahf
cwtl
mov
sahf
add
sbbl
sub
push
mov
sub
add
xchg
xor
int
test
ret
dec
push
inc
gs
mov
fistl
stos
fiadds
roll
push
jle
mov
jno
pop
std
loope
pop
aam
sub
and
mov
adcl
inc
lcall
or
vpminsw
je
dec
cmp
lea
int
dec
jo
mov
lods
sub
repnz
mov
xchg
dec
mov
inc
add
xor
mov
cmp
push
push
js
adc
test
clc
movsl
lahf
xor
sub
push
mov
adc
dec
rolb
fadds
mov
mov
pop
test
adc
mov
push
sub
scas
jns
sub
insb
shlb
mov
hlt
xchg
int3
outsb
jecxz
out
orl
adc
into
inc
repz
fiaddl
and
pop
call
jno
lahf
flds
mov
push
arpl
xchg
jae
outsl
inc
cmpsb
out
jno
shlb
leave
jmp
fiaddl
lea
popf
cwtl
pop
in
mov
sub
fdivs
jnp
xor
in
push
add
or
clc
pop
mov
cmpsb
xor
pop
sbbl
jnp
insb
dec
filds
fwait
xchg
scas
mov
push
push
jnp
adc
test
and
enter
inc
pop
add
inc
jg
add
and
mov
sarb
loope
inc
bound
addr16
stos
adc
ror
cwtl
jle
and
lds
adc
add
and
sub
iret
lcall
shll
pusha
push
insb
fistpl
shl
xor
aas
fildll
test
jnp
fimull
mov
mov
inc
lock
cltd
jecxz
and
jl
imul
cmp
pop
imul
cmp
xor
lea
dec
mov
inc
lcall
in
mov
sub
jl
mov
sub
cltd
dec
sub
dec
bound
insb
fnsave
xlat
in
call
je
push
jmp
cmovl
iret
insl
xor
xchg
mov
mov
cmp
and
mov
sub
lods
in
adc
cmp
adc
push
adc
sbb
aad
inc
inc
subb
xor
pushf
mov
test
sbb
movsb
fcomp
loop
pop
or
pop
add
ret
dec
mov
cld
icebp
xor
lods
or
push
sub
jecxz
into
jmp
shr
xchg
cmp
pop
inc
pushw
xlat
fistpl
movsl
cld
test
movsb
push
sub
mov
xor
mov
pushf
leave
je
lcall
inc
test
sub
shll
jle
rol
push
or
mov
mov
out
and
pop
cmp
addb
cmc
lock
and
pop
and
movb
enter
sub
add
pop
out
mov
gs
xor
xor
gs
and
or
hlt
or
fcmovu
push
cmpsb
popa
scas
shl
loopne
xchg
mov
sbb
mov
mov
not
fs
xchg
bound
stos
push
call
ja
fwait
mov
mov
sbb
aam
cli
fcomps
push
adc
loop
sub
loope
iret
orb
and
mov
inc
test
repz
roll
dec
or
push
movsb
rcr
jno
and
out
or
cli
add
fidivl
test
mov
and
mov
ljmp
xchg
xchg
ret
in
inc
xchg
hlt
cmp
out
mov
cmp
and
jl
cs
outsb
in
in
cmpsb
je
dec
pop
test
and
pop
insl
jg
fistpl
lcall
popa
ret
mov
sti
loope
pop
sti
mulb
add
rolb
lds
mov
push
sbb
push
ljmp
movb
xchg
outsl
jmp
pop
jge
xchg
push
or
jb
add
sub
sbb
inc
push
pop
jge
je
ret
mov
xor
pmaxsw
or
int
or
xor
jae
mov
lcall
movsl
nop
and
cmp
add
and
push
xchg
insb
pop
cmpsb
mov
rcl
mov
mov
xor
dec
jns
je
pusha
inc
ret
push
ror
pop
mov
loop
leave
ret
inc
pop
sti
insl
mov
arpl
and
push
cwtl
adc
and
sbb
push
dec
movzbl
push
cmp
ja
stos
in
mov
loope
shrl
mov
into
shrl
push
pop
jl
cmp
adc
mov
loope
mov
inc
inc
fs
or
and
sahf
sbb
stc
lock
inc
repz
cmp
popa
popl
xor
mov
cmpsb
sub
adc
inc
aam
sbb
push
outsb
shr
popa
sub
rcrb
pop
into
ss
cmp
insb
es
dec
lret
notl
mov
jae
cmp
pop
mov
xor
cs
add
xchg
stos
gs
int
dec
xchg
movb
scas
mov
sub
push
sbb
cmp
lea
test
mov
ret
or
lea
mov
cs
aam
mov
lret
mov
sbb
enter
pop
mov
xchg
das
push
enter
pop
mov
add
cmpsb
mov
pop
lods
and
lods
insl
ljmp
out
das
dec
xchg
pop
add
cli
in
sbbb
pop
aas
sti
jmp
jo
mov
repz
out
sbb
test
mov
jne
in
subl
test
xchg
int
push
loop
pushf
jg
es
std
pusha
mov
leave
cltd
cmp
mov
and
jmp
lea
in
cld
sbb
xorb
xchg
shrb
or
clc
mov
adc
loope
mov
outsl
nop
hlt
leave
into
cmp
notl
jg
pop
or
stos
inc
ficompl
lods
negb
js
les
or
subb
mov
mov
sahf
sub
insb
addr16
fmul
loop
or
adc
loopne
mov
das
sti
loope
xor
scas
inc
mov
pop
testb
test
fmull
aad
add
adc
dec
and
repnz
xchg
fmull
mov
lret
mov
insb
fld
or
jl
das
xchg
rcll
and
ja
test
pusha
aaa
dec
insl
cltd
jns
xchg
cmp
mov
outsb
data16
mov
sbb
inc
sbb
or
int
xchg
jnp
test
mov
adc
rorl
loope
sub
mov
divl
bound
fs
xor
leave
adc
test
and
xchg
or
sub
or
jno
outsl
movsl
inc
shll
dec
je
fwait
push
mov
ret
xor
and
adcb
push
pop
xchg
ret
add
or
xchg
in
pop
cmp
cmc
insb
or
insb
ret
or
cmp
jmp
push
js
cmp
xor
pop
out
add
mov
mov
xchg
jg
mov
mov
aad
pop
cmp
mov
push
shrw
lret
sub
ret
ds
popa
andl
mulb
push
push
add
addr16
jge
cmpl
or
pop
mull
or
testl
sub
fisttpl
mov
int3
subl
sbb
rcll
inc
leave
or
inc
daa
jl
mov
pop
push
in
jl
mov
aam
shrb
jecxz
mov
outsb
add
sbb
mov
xchg
add
in
in
loope
inc
pushf
cld
push
mull
in
dec
mov
addr16
je
ffree
shll
into
xchg
xor
xor
xchg
mov
mov
xlat
lahf
lea
rcll
xchg
test
ret
xorb
outsb
lods
mov
pop
stos
ss
jmp
add
pop
jae
ss
push
repnz
scas
push
cmp
pop
and
cmp
clc
clc
mov
ss
dec
movsl
sub
push
outsb
popf
dec
and
push
imul
popa
jmp
in
mov
xor
add
lods
pop
sbb
js
mov
xchg
sub
ljmp
out
cmpsl
add
or
rolb
in
loope
pop
testl
mov
mov
jmp
jae
adc
sub
cltd
ss
scas
adc
ret
xor
dec
lea
pop
xchg
fcomip
mov
sub
out
jle
movl
push
ljmp
xchg
xchg
aaa
jg
psubsb
fnstsw
push
mov
rclb
mov
push
xor
repnz
add
jno
call
in
lods
xor
leave
jle
pushf
nop
and
lea
into
loopne
ss
ret
push
stos
daa
clc
call
mov
adc
shll
iret
pop
jmp
dec
int
mov
pop
xchg
lcall
adc
cmpb
mov
and
cmp
or
es
fwait
push
cmp
mov
fldl
mov
mov
mov
or
daa
sarl
push
inc
push
push
popl
cwtl
cmp
jo
pusha
sbb
bound
cmp
xchg
inc
loope
xor
jns
test
xor
aad
es
push
xchg
mov
hlt
xor
sub
mov
xchg
test
mov
sbb
movsl
flds
scas
mov
sub
push
mov
xchg
mov
fwait
add
scas
daa
cmp
cmp
ret
and
loop
fisubl
testl
lcall
sub
jmp
inc
mov
loopne
jg
dec
outsb
or
mov
pop
mov
pop
leave
lcall
addr16
push
cmpsb
popa
add
xor
or
inc
out
lahf
lods
sub
adc
lods
and
xchg
movsb
les
loopne
xchg
test
xor
jbe
mov
mov
out
lahf
fucomp
xor
cmc
dec
or
inc
int
mov
into
into
push
jmp
shl
lret
cmp
out
iret
sbb
data16
data16
mov
lea
fisttps
push
notl
pop
sub
lea
in
ds
mov
cli
hlt
jecxz
sbb
out
es
push
mov
std
push
mov
adc
inc
dec
int3
adc
stos
outsl
add
das
sbb
in
pushf
popf
xchg
jbe
pop
jo
data16
mov
xchg
push
mov
pop
or
push
fiaddl
mov
dec
sub
sbb
jl
out
shll
sub
mov
arpl
cli
loop
push
jl
xchg
test
ss
cmp
cmp
fucomp
sbb
inc
pop
sbb
roll
popa
sub
rolb
sub
dec
mov
jl
mov
pusha
jmp
shll
cmp
and
imul
psubusw
inc
scas
test
mov
vmread
shrl
xchg
adc
rorl
stos
jg
xor
inc
in
gs
jg
lock
add
inc
dec
sbbl
lret
and
mov
pop
flds
movsb
arpl
stc
jns
lahf
xchg
xchg
jnp
push
jno
ljmp
dec
loopne
scas
and
cmpsl
cmp
push
and
dec
aaa
cmp
mov
cli
sub
sbb
sub
mov
inc
outsl
pop
mov
and
cmp
fwait
int
rcll
outsl
mov
mov
mov
sbb
shrb
mov
push
sbb
out
xchg
mov
lahf
cmp
or
dec
test
xor
iret
add
pop
mov
adc
cmp
push
hlt
ds
jno
dec
mov
pop
and
inc
xor
dec
inc
mov
enter
je
jbe
jnp
popf
and
mov
lcall
mov
xchg
adc
mov
and
mov
imul
mov
push
pop
add
sbb
rorl
or
xchg
jl
mov
mov
push
sahf
lret
inc
lret
or
pop
cwtl
lret
daa
lret
mov
fsubrl
cmp
adc
in
mov
sbb
pop
mov
dec
cli
mov
xchg
mov
or
xchg
lcall
inc
imul
repnz
mov
in
adcl
inc
lock
andl
aaa
adc
and
or
lcall
xchg
ljmp
pop
bound
icebp
das
aas
push
xchg
lret
insl
js
in
mov
cli
je
cmp
mov
stos
mov
pop
add
test
aas
test
xchg
push
sbb
popf
or
mov
or
add
pushf
lea
adc
in
push
xor
std
scas
mov
aaa
ficoml
inc
sub
inc
or
xchg
jg
adc
cltd
mov
roll
inc
or
or
mov
scas
frstor
cmpb
inc
cmp
cltd
sbb
std
dec
push
jno
or
inc
popa
in
and
icebp
sti
jbe
dec
adc
test
ret
incl
add
xor
sub
fmuls
outsl
sub
jb
or
push
gs
cmp
xor
inc
sbb
push
in
add
loope
cmp
pop
dec
xor
lcall
shll
jne
repz
pcmpgtd
xchg
cld
xchg
loope
fisttpll
je
insl
xor
sbb
pop
int
xor
outsb
ljmp
push
jmp
mov
push
je
adc
rolb
cmc
int3
add
aaa
out
lods
or
push
pop
lcall
mov
popf
pop
repz
out
in
jb
pop
or
jmp
dec
or
test
loop
les
std
call
jns
sbb
shlb
and
test
les
sub
popa
ret
cwtl
push
popa
adc
mov
mov
pushf
fbstp
pusha
mov
xorb
outsb
icebp
pop
jae
xor
sahf
sbb
jno
jae
jno
sub
ror
out
incb
jmp
das
movsb
ret
pushl
data16
dec
mov
inc
lcall
scas
mov
dec
push
xor
in
adc
xorl
lods
mov
rcrb
rorb
and
sbb
add
xchg
daa
fisttpll
int
incb
push
fcmovbe
test
aam
rorb
dec
or
add
in
cli
movsl
fnop
aad
in
aas
sub
je
shrb
in
outsb
xchg
int
and
sub
rolb
insl
inc
test
pop
fiadds
inc
jb
filds
add
js
jno
cmp
or
icebp
push
fs
aaa
inc
into
test
hlt
dec
xor
insl
xor
mov
std
lahf
ret
xor
pop
int
add
inc
lock
ljmp
test
jg
fnstenv
shlb
rolb
stos
fdivr
adc
call
jp
push
xchg
xchg
fwait
lods
stc
add
repz
mov
dec
test
xor
jbe
adc
cmp
add
inc
leave
test
sub
ret
adc
xchg
andl
and
xchg
fadds
xchg
sub
or
inc
adc
xchg
movsb
xor
movsb
mov
push
or
sbb
mov
xor
shrb
mov
stc
mov
xchg
loopne
mov
hlt
aad
lret
icebp
int3
mov
fdivrs
ficomps
push
dec
push
js
mov
xchg
lock
inc
push
das
int3
jle
ljmp
xchg
test
add
fsubrs
lods
push
ds
test
push
pop
sbb
sti
loope
push
and
jle
mov
test
imul
mov
inc
popf
loopne
jbe
jo
fmull
roll
xor
shrl
test
loopne
mov
jl
outsl
or
sbb
pop
add
bound
mov
fisubrl
xchg
rcll
shlb
lock
mov
popa
cmp
loop
addr16
push
xchg
mov
push
xor
xchg
dec
dec
cmp
and
push
jmp
iret
xor
pop
push
or
mov
jns
and
mov
pop
cmp
mov
and
cmp
push
inc
in
xchg
pop
mov
cmpsl
cmp
push
or
sbb
mov
aaa
lods
cmp
lds
mov
and
xchg
xchg
out
std
pop
lea
and
inc
dec
xchg
add
mov
fnstcw
mov
aam
cmpsb
jae
add
mov
dec
xor
rorl
loopne
xchg
out
insb
xchg
sub
mov
movsl
sarb
mov
xor
fildl
lret
sbb
add
scas
xchg
xchg
and
pop
je
mov
xor
jg
loope
mov
icebp
call
fs
stc
scas
cmpsl
inc
loop
fidivs
int3
jno
add
bound
push
rol
jno
into
lds
inc
xchg
pop
dec
xchg
jge
sahf
outsl
insl
flds
jb
or
es
push
inc
fwait
repnz
dec
lret
or
sbb
xchg
or
lcall
xchg
sbb
xchg
xor
gs
movsb
call
shll
mov
xlat
hlt
leave
enter
xor
mov
mov
adc
sarl
lods
or
sbb
xor
jo
jl
imul
ror
push
jo
call
add
lds
mov
fwait
adc
mov
cmp
in
mov
into
lods
leave
aam
push
and
cmp
push
pop
loope
adc
or
mov
sbb
dec
jl
ror
stc
leave
and
and
lock
test
pop
popf
jmp
std
dec
mov
cmp
mov
dec
mov
mov
push
jmp
outsl
cmp
dec
dec
inc
xchg
jne
mov
sub
sahf
mov
sbb
and
in
test
gs
dec
pusha
cmp
mov
dec
mov
xchg
xchg
sub
insb
and
push
sbb
cmp
enter
mov
sbb
std
sub
mov
fs
jmp
cmp
adc
std
lahf
cmpsb
jb
cmc
sub
jbe
out
cmp
insl
iret
lods
enter
pop
pop
outsb
cltd
sahf
add
cmp
push
lock
sub
push
popf
add
scas
fwait
add
out
adc
aad
mov
idivb
cld
add
in
or
addb
cs
fnstcw
mov
insl
fwait
pop
jbe
sti
pushf
rcll
dec
es
int
sub
icebp
adc
aas
jmp
adc
ja
push
sbb
xor
insl
cmc
dec
stos
xchg
inc
mov
cmp
in
and
test
dec
aad
daa
imul
in
outsl
push
movsb
or
out
xchg
cmpsb
sti
idiv
iret
incb
sbb
push
sub
fwait
mov
repnz
adc
imul
negl
dec
stc
rorl
rorb
sahf
mov
and
and
and
in
push
insl
cmp
fcmovne
lods
aad
out
pop
push
dec
stos
roll
stc
into
cmp
call
push
mov
int3
stc
ficoms
test
cs
add
flds
or
add
and
insl
pop
movl
xor
shlb
in
pusha
cmp
and
xchg
xor
jl
int3
xlat
add
loope
mov
mov
lock
insb
pop
sbbb
cwtl
nop
lahf
add
jmp
adc
jns
jmp
mov
cmpsb
ja
cmpsb
ret
sub
or
xor
dec
scas
dec
sahf
cmc
jnp
or
mov
sbb
insb
xchg
mov
test
sbb
insl
in
repz
imul
enter
inc
pop
adc
sbb
mov
cmpsb
test
jne
loopne
daa
cmpl
mov
fadds
push
cmp
dec
or
sbb
testb
mov
lock
cltd
pop
adc
lods
fadds
jg
dec
leave
add
sub
mov
cmpsl
hlt
fwait
xchg
xor
cmp
xchg
cmp
lcall
inc
les
mov
mov
ficomps
nop
jge
in
jl
mov
mov
pusha
mov
or
jle
mov
mov
ja
mov
push
fidivrs
loope
adc
cld
pop
cmp
in
jle
hlt
in
sub
in
test
adc
pop
jo
or
fdivl
mov
daa
into
mov
cltd
rclb
icebp
dec
push
pop
xor
pop
call
sub
inc
xchg
test
jecxz
push
dec
lea
in
sti
outsb
mov
mov
and
cmp
scas
sti
mov
enter
inc
es
js
lods
lods
outsb
shrb
cmp
mov
jbe
sbb
iret
dec
das
inc
adc
cwtl
loopne
add
xor
cwtl
mov
mov
jg
cmp
mov
sahf
pause
into
fstl
in
jns
sub
ja
sub
push
lock
cmp
jp
dec
shl
inc
lea
dec
in
cmpsl
jecxz
xchg
out
shl
inc
fnstenv
ljmp
pusha
sbb
fcomps
ja
lods
mov
mov
cwtl
sub
xchg
leave
push
inc
jp
sahf
sub
imulb
pop
dec
xchg
int3
mov
movsb
mov
xchg
daa
pop
movsb
mov
mov
test
jmp
xor
lret
sbbl
insb
adc
xor
mov
pusha
add
in
imul
into
push
mov
scas
ret
inc
dec
cmp
lret
outsb
adc
mov
fidivrs
fwait
add
sbb
ja
aas
sbb
cmpsl
sub
dec
je
xchg
push
mov
mov
cmp
push
jbe
jg
iret
sarb
js
pop
xor
ficoml
rcr
psubsb
lcall
arpl
xchg
xor
dec
or
ret
out
pushf
or
mov
aas
jge
insl
pop
mov
cmp
adc
xchg
mov
pusha
inc
xor
ficomps
popw
dec
jl
pop
ljmp
sbb
fisttpl
xor
out
mov
movsb
or
lock
lret
pop
sub
insb
mov
jno
jns
rcrl
and
enter
pushf
adc
inc
les
add
adc
loopne
rcll
mov
cmovo
lahf
ljmp
jnp
dec
insb
lds
jb
scas
pusha
xchg
in
dec
dec
and
stos
or
mov
dec
dec
aad
stos
hlt
call
jo
mov
stos
repnz
insb
cmp
add
dec
xlat
test
cmp
in
push
inc
setg
in
xchg
jg
or
insb
outsb
fnstenv
loop
outsl
xchg
xchg
mov
int3
cmc
loop
jns
xor
xlat
pop
sbb
pop
hlt
xor
aaa
xor
xchg
add
and
lret
lock
sar
test
test
inc
ret
or
or
cli
push
cmpsb
push
cli
inc
adc
call
mov
sbb
xchg
imul
packssdw
cmpb
cmp
mov
shll
sbb
cltd
jnp
out
sub
fcomps
sub
lret
push
imul
xor
sub
jmp
jmp
mov
inc
cmp
pop
xchg
and
xchg
jne
aaa
cld
fmuls
and
lock
out
es
into
pop
sub
and
lock
lcall
push
std
xlat
or
roll
cwtl
std
into
je
stos
fists
fisttpll
movsl
movsl
enter
push
push
testl
xchg
notb
pop
sbb
rclb
mov
test
cmp
mov
add
mov
cwtl
jmp
mov
pop
jge
push
cltd
and
dec
out
mov
fidivl
sub
ss
rolb
sub
inc
ret
jle
cld
daa
fsubp
loop
pop
add
dec
bound
addr16
stc
stos
mov
push
adc
in
or
fnstsw
sbb
rol
xlat
sub
lahf
subb
push
xchg
lret
cmp
jns
mov
mov
sti
mov
jno
mov
scas
data16
mov
mov
inc
xor
and
loope
or
int
pop
sbb
lahf
rcl
ret
mov
xchg
jge
inc
dec
dec
xor
outsb
adc
gs
xor
adc
in
mov
and
or
sub
insb
or
clc
test
xor
jmp
les
sub
inc
cmp
push
mov
xor
push
pop
sti
mov
pop
and
stos
loopne
jmp
mov
mov
stos
or
push
shll
sub
out
cwtl
fwait
and
cwtl
movsb
pop
js
cltd
pop
mov
insb
fwait
and
inc
lock
sbb
pop
int3
jne
sub
pop
xchg
scas
lret
scas
lret
or
mov
xchg
pop
fnstsw
jno
inc
test
dec
sub
pop
pushl
imul
ret
push
push
mov
push
mov
pop
movsb
cmp
aaa
jae
aad
mov
bound
xlat
push
notl
pop
cmpsl
mov
push
dec
xlat
adc
push
sub
lock
subb
sub
pop
mov
outsb
shrl
and
sbb
loop
div
cmpsb
mov
bound
fildl
shrl
inc
dec
in
jne
mov
shlb
adc
and
inc
mov
mov
cwtl
sub
int3
into
push
mov
movl
pop
mov
push
xchg
jo
jmp
enter
in
js
cld
adc
movsb
jo
sub
rol
cmc
xchg
xchg
mov
insb
adc
sub
pushf
test
fucom
sub
pop
out
mov
add
jae
cwtl
adc
test
fsub
and
and
inc
sbb
dec
sub
loopne
loop
test
shrl
ljmp
pop
lock
addr16
push
movsb
cmpsl
xchg
sub
sbb
mov
icebp
test
mov
jg
popf
pop
jg
clc
cli
sub
or
add
jo
imull
xchg
xor
mov
or
xor
loopne
aad
mov
sub
push
pushf
cmp
mov
fcmovne
jno
movswl
movb
mov
mov
or
fnsave
fsubs
sub
mov
outsl
cmp
leave
mov
pop
mov
and
inc
jo
mov
les
push
dec
repz
adc
test
push
mov
pushf
out
out
xchg
mov
cmp
sbb
or
xlat
xor
mov
mov
aas
sti
outsl
mov
lock
xor
cltd
or
lock
sub
pop
adc
mov
inc
sahf
aad
xchg
cmp
cmp
sbb
dec
mov
dec
popl
xchg
and
sbb
testl
or
call
push
int3
out
outsb
mov
cmp
push
mov
subb
cmpsl
faddp
test
fs
scas
adc
mov
sbb
loope
and
sbb
or
mov
enter
bound
std
push
or
insl
ror
sbb
imul
sarb
xchg
add
lahf
nop
inc
and
leave
call
or
stos
and
test
pop
xor
test
fsubs
hlt
sbb
fstl
mov
sbb
das
ja
mov
cmp
shll
mov
sbb
inc
add
mov
lahf
inc
aaa
pop
pop
sbb
mov
push
in
inc
out
aad
test
adc
enter
cwtl
sbb
inc
xlat
mov
push
jne
pop
js
stc
je
icebp
dec
loop
aas
xchg
cmpsl
stos
out
test
rcrb
inc
mov
xor
movsl
movsl
das
out
dec
pop
hlt
xor
jb
xor
cmp
xor
sub
ljmp
loopne
scas
jo
pop
js
push
addl
mov
sub
mov
ret
fcom
fwait
sub
jns
subl
loopne
cwtl
out
mov
mov
mov
lods
call
fcomps
pop
cmp
xchg
push
push
dec
cmp
aaa
repnz
sub
dec
inc
paddb
xor
inc
push
sub
and
leave
adc
xchg
push
call
icebp
mov
fwait
jb
lea
jb
sbb
cmpb
and
daa
mov
xchg
mov
fucomi
sbb
shlb
test
inc
insl
stc
dec
dec
or
ja
cmp
cmp
pop
sub
adc
repnz
in
bound
pushf
pop
lds
mov
data16
cmpsb
pop
jno
dec
cmp
repnz
mov
pop
sbb
imul
xor
outsl
and
sti
cmp
xor
sub
popf
cmp
gs
into
cmp
jne
inc
adc
les
xchg
add
leave
mov
dec
dec
fwait
cmp
cmpsb
or
insl
ret
xchg
xor
in
stos
sbb
das
sbb
push
jl
fidivs
scas
ds
lret
and
jge
movsb
es
sahf
and
mov
xor
cmpsb
xchg
sbb
ja
pop
push
jno
in
dec
dec
insb
xor
xchg
cmp
vunpcklpd
ja
add
out
mull
loop
push
push
pmullw
mov
outsl
sbb
mov
add
fwait
jecxz
sbb
xchg
pop
add
cmpsl
and
hlt
fwait
les
int
jmp
test
stc
sar
mov
cltd
mov
xchg
jno
sub
rorb
adc
enter
or
cmpsl
dec
arpl
les
jl
out
rorb
and
jns
in
int
cmp
xor
rclb
aad
out
adc
adc
sbb
xor
out
dec
lods
fidivrl
hlt
xchg
cmpsb
mov
and
dec
jo
test
sbb
stc
lods
pop
jmp
lret
push
insl
cwtl
ljmp
push
jae
fnstsw
inc
jl
mov
mov
and
jl
inc
stos
pop
mov
xchg
inc
andl
xchg
dec
test
loop
adc
shr
in
push
lods
cmpsl
sub
dec
je
shrl
and
adc
pusha
sbb
mov
out
cmp
xor
mov
test
arpl
sbb
mov
pop
xchg
xlat
ss
jle
loop
ds
ss
loop
dec
arpl
aam
iret
add
arpl
int
jae
and
ficoms
imul
icebp
dec
int3
aaa
and
pop
jge
in
out
xchg
aas
jae
add
sbb
jne
xchg
lea
pop
rorb
idivb
cmpsl
jb
fidivl
roll
test
pop
stos
in
nop
out
fnsave
ffreep
push
out
sti
inc
jne
xchg
add
loopne
mov
lds
pop
std
outsl
xchg
sti
call
inc
ds
int
cmp
mov
out
fmull
cmpsb
enter
mov
mov
pop
mov
cmp
ss
loop
daa
mov
mov
std
scas
dec
xor
and
das
movsl
sti
cmp
mov
sbb
bound
xchg
gs
xchg
arpl
cmp
into
jb
sbb
xlat
or
shlb
jb
mov
mov
lret
gs
movq
outsb
adc
ljmp
jge
xlat
fcmovbe
xor
inc
movsl
pusha
xchg
inc
or
sbbb
cltd
mov
mov
mov
xchg
fcom
subb
scas
cmp
out
cs
xchg
ret
xor
cmpsb
mov
das
sar
je
cmpsl
outsl
sub
lahf
sarl
jae
arpl
xor
jle
mov
mov
sbb
push
push
add
mov
xchg
pop
dec
xor
and
xchg
jp
dec
dec
mov
int
aas
inc
ret
notl
sub
push
mov
add
push
out
pop
popf
sahf
ds
dec
shrb
mov
mov
xor
call
out
mov
cwtl
loopne
xchg
js
mov
pop
fimuls
pop
outsb
divb
arpl
out
sub
cmpsb
dec
js
jle
adc
sbb
sarl
push
mov
je
mov
and
mov
sbb
inc
idivl
cmp
lret
lret
clc
push
inc
push
add
adc
shrl
insb
cmp
push
jno
inc
lahf
cmp
mov
call
sbb
test
cmp
cmp
mov
in
dec
push
and
mov
sub
fiadds
cmpsl
sbb
add
fimull
aas
jg
imul
or
mov
dec
jae,pn
sub
add
pop
cs
scas
shrb
push
cmovs
xlat
cmc
pop
sub
in
sbb
popf
popl
pushf
push
lods
aaa
jecxz
adc
mov
mov
jb
or
in
clc
or
das
cmp
or
push
mov
add
pop
jg
gs
rclb
inc
fldenv
aad
pop
arpl
xor
push
fnstenv
das
jl
xor
push
push
insl
adc
dec
xchg
out
repz
adc
and
xor
test
leave
enter
fstpl
repz
xor
pushf
pop
mov
bound
push
pop
xor
mov
add
call
xchg
xchg
pop
sar
cwtl
fwait
adc
imul
leave
lea
or
incb
pop
dec
test
add
fwait
mov
sub
push
pushl
loope
test
xchg
push
jb
xor
pop
sarb
ljmp
mov
jne
in
out
ret
cvttps2pi
jno
push
fwait
inc
cli
outsl
inc
xor
push
ret
inc
lock
add
push
push
pop
inc
cmp
adc
ds
dec
inc
sahf
frstor
out
mov
cmpsl
pop
mov
push
xchg
push
xchg
ljmp
mov
and
or
adc
jge
add
jb
mov
dec
adc
mov
mov
nop
sub
movsb
nop
mov
decl
and
push
pop
sti
mulb
lret
push
rcl
dec
mov
xchg
jo
jb
mov
pop
pushf
popa
rep
adc
mov
fistps
xchg
jmp
cs
mov
fwait
dec
lock
call
xor
pop
mov
mov
pop
pop
jo
xor
xchg
dec
or
aaa
adc
mov
mov
cmp
mov
mov
hlt
inc
lea
push
or
repz
lock
adc
popf
ret
sbbb
out
inc
xchg
push
jnp
adc
imulb
cld
repnz
mov
fldt
mov
inc
sbb
and
inc
inc
xchg
mov
int3
clc
pmulhuw
xchg
push
adc
rcr
cmpsl
xor
sub
rep
sub
jp
fnstcw
iret
mov
push
adc
das
fucomp
lds
mov
mov
push
inc
fwait
xchg
loop
jnp
pushf
cmpl
ds
in
jg
mov
jo
fcmovne
cmc
aad
and
adc
and
sub
jecxz
mov
add
pushf
arpl
sub
mov
inc
popa
or
push
jmp
jne
pushf
ja
pop
fmull
dec
adc
xchg
pop
fsubl
stos
mov
in
test
stos
push
push
xchg
popa
pop
push
insl
sti
dec
sti
ds
cmp
xchg
and
add
cmpsb
jmp
insl
pop
jns
add
push
push
mov
out
ja
and
dec
popa
and
lds
rclb
jle
in
cmc
mov
adc
push
mov
mov
repz
pop
inc
xchg
mov
dec
idiv
enter
jno
adc
xor
pop
jae
nop
shrl
mov
cli
sbb
pop
ret
nop
push
sbb
jnp
addr16
pusha
dec
lea
inc
stos
sub
jb
aas
and
or
jnp
ljmp
ja
insl
sub
out
sbbb
subl
dec
fisubl
ficomps
sub
mov
mov
jns
pop
mov
mov
xchg
sti
lock
das
insl
mov
push
add
push
xor
xor
mov
sub
mov
test
or
aad
lret
outsl
mov
mov
xchg
iret
and
cli
sub
lcall
pop
lock
fsubl
fld
pop
ret
loope
jbe
xor
ret
push
jge
lds
mov
adc
jg
push
scas
rol
lds
outsl
push
sbb
das
inc
jae
nop
cwtl
mov
gs
xchg
and
scas
maskmovq
negl
lds
aam
xchg
lret
ds
pop
gs
adc
dec
mov
imul
std
sti
rol
aad
jno
das
mov
shrb
xchg
imul
pop
aas
xchg
inc
dec
cmp
rclb
dec
dec
scas
pop
or
jo
jg
shlb
push
jecxz
or
repz
xchg
dec
xor
ret
sbbl
lea
mov
mov
push
dec
fidivl
rorl
push
fisubrl
pop
cs
pop
inc
sbb
lds
sbb
outsl
jmp
push
add
cmc
push
xchg
dec
xchg
jle
ds
bound
out
pop
inc
sbb
cld
les
adc
test
cmpsl
aam
out
adcl
jno
jno
insb
fcmove
xor
sbbl
jbe
sti
xor
std
add
mov
sti
cmp
push
clc
enter
and
push
adc
and
stos
mov
and
xchg
and
pop
jp
cwtl
sbb
incl
rcl
push
test
mov
gs
mov
push
std
subl
in
add
xor
int
lahf
fcmovnbe
and
push
add
stos
mov
xorb
leave
ffreep
mov
lcall
movsl
add
adc
inc
cli
lea
or
cmp
push
imul
dec
sub
cmp
insb
fs
out
cmp
jecxz
ret
imul
mov
lock
pop
ret
int3
mov
dec
cwtl
test
add
add
and
lea
inc
sahf
test
dec
test
push
sbb
and
or
lret
jno
ljmp
jbe
dec
into
popa
out
lret
pop
jno
arpl
mov
cld
cld
jl
arpl
mov
pop
adcl
jge
mov
out
inc
jp
pushf
subb
mov
add
jbe
mov
jl
jg
fimuls
or
outsb
mov
lods
xor
push
aam
loop
bound
shlb
xchg
out
fmul
jmp
or
movsb
sbb
or
push
into
adc
call
pop
movsl
in
mov
into
cmpsl
xchg
cmpsb
hlt
outsl
sub
outsb
and
pop
and
dec
dec
inc
fcmovnu
sbb
pop
xor
push
cltd
outsl
xor
test
insl
stos
push
jle
dec
cltd
movsl
leave
and
jmp
fwait
push
rcrb
mov
bound
mov
mov
cmp
add
out
sub
jge
xchg
xchg
out
addb
xchg
test
jns
in
inc
repz
pop
mov
dec
pushf
adc
push
data16
or
cmp
popf
push
pop
xor
push
rcrl
mov
cmp
imul
ret
decl
imull
mov
jns
or
cmovb
pop
hlt
jg
lcall
adc
outsb
jno
mov
mov
push
fadds
cmpsl
out
inc
dec
loope
add
mov
sub
or
jno
ret
movsb
daa
lds
xchg
stos
push
fistl
mov
adc
mov
add
xchg
push
es
inc
mov
or
mov
mov
mov
add
ljmp
lahf
jmp
adc
subb
stos
lahf
mov
and
lahf
xor
or
jmp
mov
aaa
add
jnp
jno
sub
sbb
and
jo
insl
push
or
or
xor
mov
adc
iret
xchg
push
out
dec
fabs
popf
sbb
lret
in
dec
fstpl
adc
mov
inc
das
hlt
cmp
scas
je
sbb
xchg
test
test
imul
pop
sub
pop
rorb
divb
shl
or
ds
mov
lcall
aad
xchg
dec
xor
mov
mov
repz
inc
inc
mov
or
popf
cmp
fistl
jle
xor
pop
add
dec
mov
dec
aas
jmp
cmpsl
mov
inc
or
dec
in
adc
and
loope
mov
cmp
aam
or
stos
popa
or
int
push
ds
insb
jecxz
es
sahf
push
mov
js
imul
icebp
dec
dec
ljmp
loop
addb
sbb
arpl
mov
add
lods
or
idiv
lods
data16
int
mov
cltd
mov
pop
sub
cmp
xchg
fildll
sbb
inc
jno
rclb
movswl
dec
std
in
pusha
push
dec
out
dec
xchg
cli
push
xchg
icebp
mov
cmovae
xchg
movsb
dec
les
xchg
cs
push
and
dec
cmp
aas
and
imul
arpl
mov
mov
sarb
jns
daa
push
outsl
jo
xchg
push
sub
xor
sbb
jnp
mov
pop
pop
mov
sub
xchg
scas
xchg
cmp
push
xchg
sbb
js
xchg
sbb
loopne
ficompl
fists
mov
mov
xchg
test
mov
jecxz
jle
mov
mov
push
mov
xchg
lcall
inc
aad
ficoms
mov
push
arpl
ficoml
pop
mov
push
imul
jecxz
xor
xlat
sbb
mov
movsb
leave
pushf
pop
mov
and
xlat
in
ljmp
inc
divl
dec
sub
sub
xor
inc
andb
mov
mov
jne
nop
push
inc
xor
imul
in
pushf
mov
sti
sarb
mov
cmp
call
les
or
mov
mov
imul
adc
int3
jo
in
les
push
or
test
cmp
push
into
cmp
iret
adc
outsb
pop
loopne
mov
push
imul
push
mov
idivb
jae
jae
and
ret
mov
sbb
daa
sbb
jge
pop
xchg
or
xor
add
loop
mov
fnstsw
pop
inc
movsl
add
xlat
pop
mov
stos
repnz
fmull
dec
mov
jnp
scas
sahf
cli
clc
repnz
sbb
inc
scas
in
orl
push
mov
add
or
push
sbb
cwtl
adc
jmp
in
mov
ret
inc
cmpsl
daa
shlb
adc
lds
inc
rcll
out
mov
data16
stc
sub
mov
or
and
std
leave
adc
roll
bound
into
into
outsl
ret
push
repnz
or
scas
mov
xchg
push
mov
aam
cmp
out
test
cli
lahf
push
lock
xchg
aas
pushf
dec
aaa
mov
fcmovb
mov
int
in
icebp
test
mov
push
push
mov
mov
imul
idivb
icebp
sti
pop
cmpb
pusha
hlt
add
inc
imul
popa
lods
jo
mov
mov
sbb
mov
or
dec
dec
mov
or
shl
mov
ds
sti
push
xchg
out
out
pusha
data16
mul
stc
mov
pop
cmp
push
stos
stc
push
xor
mov
vpmaxsw
out
mov
cs
in
test
aaa
fisttps
mov
push
push
cmp
mov
test
addl
fistl
sbb
push
mov
xchg
dec
in
xchg
lret
lods
xor
aad
sbb
daa
imul
scas
pop
mov
pop
ljmp
adc
cs
mov
push
jne
xchg
cmp
fists
mov
mov
rorl
das
mov
loope
roll
pop
ret
sub
sub
and
pop
movsl
sub
sbb
rorl
in
cwtl
std
add
aad
cmpsb
push
xchg
push
jmp
mov
adc
adc
rcrb
fldcw
lcall
mov
or
xor
es
daa
adc
into
inc
cltd
fiadds
nop
mov
mov
add
add
push
xor
mov
cwtl
and
notb
mov
imul
sub
cmp
pop
cli
jno
push
andb
repnz
ljmp
mov
cmp
adc
pop
xchg
es
in
sahf
lcall
js
push
lock
lock
enter
das
nop
lret
xor
push
in
push
iret
xchg
push
fnstenv
mov
jo
daa
cs
pop
aad
jns
xchg
push
cmp
add
cmp
push
daa
into
ljmp
lds
fcom
cmp
sbbb
xchg
enter
enter
fimull
idivl
push
jecxz
jp
push
mov
adc
outsb
mov
sbb
loop
dec
daa
aaa
int
jae
ss
and
or
jae
xchg
push
ljmp
adc
rorl
push
push
xlat
or
sahf
shl
sti
arpl
sahf
loope
icebp
xor
cli
je
push
adc
dec
imul
mov
fcomp
push
ud2
add
pop
rorb
cwtl
andb
and
cmpsl
pop
sbb
cmp
adc
mov
xchg
dec
xorb
flds
sub
stc
daa
mov
jg
subb
je
sub
mov
xor
mov
mov
repnz
xchg
push
xor
xlat
lods
cmp
test
and
xchg
aad
in
xlat
add
mov
lcall
or
dec
lahf
mov
rclb
ror
es
fcomps
pop
push
out
mov
sahf
fildll
bound
cmp
inc
loop
lcall
push
shl
inc
mov
mulb
lods
ja
mov
aam
push
mov
pop
or
push
loopne
popa
inc
push
inc
mov
or
add
mov
mul
int
ja
jecxz
aas
inc
xor
sub
pushf
jle
adc
xlat
mov
push
shll
xchg
and
lods
pop
jp
cmp
fistps
jecxz
jo
and
outsb
mov
lds
pop
sbb
inc
cs
inc
pop
mov
dec
iret
in
dec
addb
jae
sub
xchg
mov
movsb
ljmp
mov
rorl
add
movsb
inc
inc
dec
fstpt
aam
int
mov
notb
cs
popf
or
push
mov
sbb
adc
adc
nop
lods
add
inc
xorb
imul
repz
dec
cli
ret
add
dec
es
mov
divb
sub
sbb
xchg
push
cmp
sub
aam
jae
aam
and
out
jge
inc
fmulp
and
cmpsb
aam
inc
xorl
fidivrl
push
sub
sti
stos
aad
mov
xor
hlt
jp
add
jg
cwtl
aaa
adc
aas
popf
jbe
shr
sub
test
add
fldenv
sahf
mov
jmp
push
add
jne
mov
aad
out
xlat
xchg
push
in
ret
repnz
jns
sbb
fists
out
xor
inc
arpl
push
xchg
gs
les
call
stos
adc
test
loop
sahf
xor
cmp
mov
out
popf
adc
lods
lret
cli
aaa
in
sub
insl
mov
mov
xchg
xor
movsb
leave
shl
stos
ja
xor
sbb
fnstcw
not
bsf
iret
add
and
stos
adc
fistps
pushf
fcomps
fyl2x
cmp
push
popa
lret
loope
lret
cs
out
lods
in
repz
mov
subb
cmp
add
sub
pop
xor
or
mov
int3
call
mov
xchg
std
addb
rclb
addr16
outsl
mov
inc
fldcw
in
xchg
ret
roll
fcompl
out
fstps
xchg
call
inc
movb
mov
popa
xchg
mov
dec
lea
enter
and
dec
fistpll
dec
mov
add
xlat
inc
inc
mov
cltd
inc
dec
int3
cmp
cwtl
add
dec
sbb
outsb
xorb
sbb
dec
push
jnp
and
mov
sbb
mov
dec
xlat
jle
mull
fsubs
jl
xchg
scas
push
mov
orb
fucomip
stos
addr16
fcomip
xchg
mov
sub
push
fwait
jmp
mov
in
insb
int
mov
outsb
rolb
sub
or
insb
lret
mov
dec
mov
push
ja
push
pop
ja
int
shl
clc
test
sub
or
pop
in
aam
xchg
add
mov
or
push
xchg
iret
dec
shl
lret
out
xchg
adc
rorb
pop
or
rcll
or
adc
jge
pusha
cwtl
subl
movsb
mov
jecxz
push
adc
mov
sbb
xor
cli
fisttpll
fimuls
xchg
push
stc
mov
cld
test
mov
sbb
es
push
xchg
adc
xchg
loop
fistps
ffreep
cmc
scas
ljmp
out
push
add
ret
popa
je
xrelease
rorb
jge
dec
mov
sahf
arpl
xchg
lock
mov
or
xchg
add
or
popa
aad
mov
inc
xorl
lret
inc
std
mov
fidivrs
fcoml
mov
xchg
addr16
nop
sbb
es
into
mov
imul
inc
sbb
mov
add
cmp
push
out
add
rcll
dec
dec
xor
mov
xor
jne
push
gs
sahf
add
push
insb
lahf
sub
mov
or
xor
sbb
push
sub
adc
xchg
mov
push
stc
pop
imul
dec
ret
push
xchg
icebp
stos
and
adc
push
jmp
fdivl
mov
insb
and
inc
out
inc
mov
push
sub
test
cmpsb
iret
mov
push
pop
mov
or
fcomi
movsb
fisttps
and
adc
mov
sub
sbb
out
push
enter
sbb
add
mov
fcmovb
enter
push
je
movb
cmp
in
add
jns
repnz
mov
adc
jnp
enter
shrb
pop
push
jecxz
jb
mov
mov
jmp
add
loopne
xchg
jbe
addr16
insl
int
popf
jo
loop
test
jecxz
cmp
mov
cld
push
cmpsb
sbb
loop
cli
pop
loopne
cmpsb
add
movsb
jle
int
imul
stos
xorb
jbe
daa
loop
daa
imul
jmp
pushf
aas
xchg
xchg
jns
dec
in
inc
addr16
push
inc
push
cmpl
push
repz
cmp
mov
bound
fdivrs
hlt
dec
scas
mov
dec
cltd
rcl
mov
pop
mov
ret
loop
outsb
push
andb
loop
pop
inc
fldcw
jmp
iret
mov
lea
cmp
out
or
out
mov
sub
mov
push
push
sub
push
push
fs
orb
dec
xchg
lods
sub
add
pop
fdivrs
insb
outsl
inc
fwait
pop
fisubs
addb
mov
mov
mov
or
ror
lock
adc
scas
jle
pop
gs
add
xchg
dec
daa
mov
mov
lea
nop
dec
es
xchg
and
fstpt
scas
test
loopne
in
sbb
jb
pop
sbb
sbb
jl
es
mov
xor
mov
lock
mov
jne
insl
jmp
xor
fimuls
sbbb
cmp
dec
out
mov
popf
pop
scas
jo
es
xor
sbbl
mov
shr
iret
das
stos
dec
outsl
mov
imul
std
push
mov
shll
sbb
stos
ret
cmp
add
clc
sti
cmp
push
fsubp
lcall
jbe
mov
in
out
mov
sbb
imul
push
subl
cwtl
das
mov
fadds
inc
lcall
hlt
jnp
mov
arpl
sub
fs
lcall
mov
lods
or
push
scas
cmp
xchg
ja
jge
pop
mov
mov
nop
push
loopne
loope
ret
fucomip
add
jno
cli
mov
ret
out
leave
les
loopw
out
sub
xor
pop
mov
xor
pop
fistl
mov
xchg
push
cmc
or
push
cltd
mov
ret
cld
pop
repz
mov
xchg
imul
decb
push
jg
inc
loopne
or
test
or
fnstcw
pop
repnz
mov
out
out
mov
mov
jns
inc
jp
add
add
loop
rorl
insl
jae
or
xchg
mov
ds
fcom
inc
in
add
aam
unpcklps
mov
jbe
nop
pop
push
fists
cltd
out
pop
in
in
adc
test
xchg
sub
nop
adc
adc
xor
stc
sub
and
or
lods
xor
jno
or
inc
andb
sub
das
out
xchg
cmpsl
cwtl
ja
add
push
lea
sub
push
daa
adc
mov
lock
leave
and
jnp
outsl
adc
aaa
shll
into
jle
add
dec
push
xlat
ficomps
adc
in
daa
into
push
xchg
imul
sbb
sbb
pop
xchg
push
cmpsl
push
add
mov
add
std
hlt
inc
adc
cmp
xor
cmp
push
jmp
xor
mov
outsl
or
push
sbb
cwtl
mov
arpl
sub
lret
clc
mov
mov
iret
aad
repnz
addb
push
fadd
push
and
hlt
enter
repnz
test
and
mov
cmc
sub
sub
jecxz
mov
push
and
jns
pop
xchg
mov
fwait
movsb
ss
pop
mov
imul
or
clc
testb
das
ss
dec
or
sub
test
jae
dec
add
add
push
lods
and
xor
xor
ret
mov
icebp
imul
js
mov
sub
cmp
add
jns
xchg
iret
inc
mov
inc
test
out
push
add
ret
test
fs
mov
xor
insb
sbb
shl
lea
xchg
add
ror
loop
in
sub
push
andl
xchg
mov
or
mov
mov
dec
add
xor
xchg
outsl
insl
aas
xor
inc
mov
imul
pop
add
add
pop
dec
int3
ss
xchg
popf
cmp
dec
jge
frstor
test
addr16
dec
or
cli
repnz
mov
push
lock
cmp
add
imul
mov
test
enter
adc
lods
std
sub
shlb
outsb
push
mov
inc
xchg
mov
hlt
ja
aam
add
mov
js
mov
es
movsl
sbb
push
int
into
mov
inc
jno
push
jbe
jns
lods
sar
mov
pop
jno
push
sub
push
sub
mov
out
cltd
popa
adc
or
dec
sub
ljmp
movsl
inc
add
add
outsb
or
icebp
repnz
mov
pop
xorb
xchg
or
push
ffreep
jg
in
mov
push
ja
icebp
dec
mov
push
inc
cmpsb
or
cmp
dec
mov
sub
mov
in
xchg
subb
sbb
into
push
orb
dec
sub
in
cmove
into
push
add
popa
mov
addl
das
inc
pop
imul
and
adc
sbb
addr16
add
dec
jmp
data16
adc
jl
push
incl
push
xor
mov
mov
test
sub
jmp
scas
add
and
loop
out
repnz
or
jns
stos
xlat
dec
sti
test
add
pop
add
fisubs
out
mov
pop
pop
out
xor
pop
jbe
dec
jo
and
mov
cmp
lock
pusha
lock
loope
call
int
jp
cld
sbb
or
fwait
mov
adc
inc
or
xchg
inc
add
xchg
push
xor
jmp
stos
inc
in
arpl
aas
sub
outsb
dec
in
orl
or
jo
inc
daa
ja
fiadds
xor
or
lds
jmp
out
pop
push
mov
mov
sub
jns
js
cmp
add
sbb
leave
push
add
imul
cli
sbb
mov
mov
repnz
pushf
inc
sbbl
pop
repz
pop
int
sbbl
dec
aad
adc
imul
jnp
xchg
cmp
adc
insb
dec
fsts
addr16
jae
subl
xor
inc
mov
sub
sub
test
fcoml
xchg
xor
sbb
adc
faddl
jb
jg
dec
sbb
int
xor
test
js
hlt
sbb
fcoms
xor
lds
push
adc
imul
pop
or
inc
cmp
mov
shll
daa
fcmovb
xor
lcall
jle
adc
lcall
out
shll
jp
ror
in
sbb
push
test
lcall
mov
lods
and
add
dec
push
addl
mov
fldcw
dec
or
cmc
loope
jmp
gs
jns
pop
push
sub
sbb
cmovb
mov
xor
cmc
pop
adc
in
jae
pop
repz
out
sbb
leave
sub
add
or
stos
cmp
push
lcall
xor
mov
shl
stos
daa
leave
mov
scas
gs
push
addr16
jmp
pusha
and
lods
xchg
push
ficoms
mov
mov
rolb
xchg
lods
mov
test
cmp
movsl
jnp
ja
sub
and
inc
add
data16
jno
pop
out
inc
mov
movsl
or
jmp
cmc
imul
push
jns
int3
popa
inc
outsl
dec
add
popa
mov
je
mov
mov
sub
push
pop
and
xor
dec
mov
mov
stos
cmpsl
mov
inc
pop
sbb
fxch
or
iret
cmc
jg
sub
sub
adc
ja
sub
adc
mov
clc
or
pop
in
dec
lret
subl
xor
scas
ljmp
ds
icebp
adc
sub
ja
out
mov
mov
jnp
lcall
cmp
push
inc
ljmp
std
mov
mov
test
and
sbb
adc
jcxz
test
adc
out
cld
stos
push
mov
and
mov
xchg
scas
inc
xchg
pop
mov
mov
mov
js
xchg
push
xor
iret
xor
fiaddl
movsb
leave
mov
pop
in
lods
inc
inc
fwait
rcrl
sbb
ja
push
dec
jns
ljmp
lret
ss
sbb
pop
cvttps2pi
xor
fsubrp
mov
cmp
iret
ljmp
lahf
and
push
cltd
xchg
popf
pop
mov
cld
cmp
out
jb
daa
xor
jl
jae
shl
mov
adc
shll
pusha
sbb
add
jg
xchg
and
imul
repnz
scas
enter
iret
out
dec
shll
in
inc
mov
lods
cmp
xor
xor
negb
lds
jo
adc
push
nop
pop
mov
in
clc
or
adc
add
mov
sbb
push
les
cmp
loopne
xor
xor
ds
pop
sbb
cmp
dec
out
arpl
js
sbb
pop
loopne
jle
xor
outsb
jmp
pushf
inc
ret
cmpsb
inc
and
and
xchg
sbb
adc
mulb
cmp
sti
add
pusha
mov
call
shlb
mov
xor
pop
jns
mov
pusha
mov
ja
jecxz
jbe
lds
jns
cli
xor
iret
and
push
sahf
adc
daa
sub
xor
push
mov
es
and
xchg
push
mov
xor
and
inc
jg
sbb
dec
insb
cmp
xlat
jne
xor
aaa
and
inc
jle
and
sarb
cmp
shrl
lret
dec
cwtl
lods
bound
sti
lock
es
pop
sar
jne
loopne
cs
mov
imul
loope
cmp
ret
adc
pop
movsb
shlb
mov
das
pop
repz
loop
mov
lret
mov
add
xor
shrl
mov
fs
hlt
xor
push
repnz
pop
loope
leave
out
sub
negb
sub
lret
xor
imul
aaa
mov
xlat
movsl
movsb
cmp
sub
shll
inc
out
or
enter
bnd
nop
mov
fcomip
mov
scas
push
mov
clc
cmp
das
xor
lea
ljmp
adc
sahf
jecxz
nop
out
gs
or
shrl
cmp
or
xor
ss
jge
movsb
stc
add
and
adc
cmp
xor
repnz
fsubrp
mov
dec
es
idivl
jo
fstpl
dec
les
adc
dec
xchg
mov
loope
mov
mov
xchg
dec
in
popf
icebp
sarb
fistps
adc
rorb
sub
sub
hlt
out
das
je
dec
fldl
imulb
adc
cld
sahf
repz
call
add
push
cmp
inc
scas
push
repz
and
mov
push
dec
stc
repnz
leave
cmpsl
lcall
inc
cmp
orb
add
shlb
cli
xacquire
mov
inc
mov
jb
mov
mov
mov
add
sub
fistl
movsl
adc
cwtl
test
xchg
cs
mov
cmp
shlb
push
repnz
test
pop
jecxz
mov
dec
sub
jg
inc
mov
cmpsl
xor
xorb
and
pop
add
mov
pop
mov
sbbb
fwait
cmp
es
xor
mov
xchg
test
add
add
inc
push
and
xor
mov
mov
add
je
pop
mov
xchg
xlat
jno
ds
xlat
mov
add
xchg
hlt
in
int
jnp
movsb
jno
cmp
stos
out
push
or
pop
gs
testl
lods
dec
loope
andl
loop
gs
jns
mov
sub
sbb
fcoml
or
and
adc
addr16
leave
mov
inc
and
aad
ftst
cmp
pop
ret
divb
push
mov
sbb
push
sub
fbld
jne
mov
pop
adc
into
or
mov
test
fstpt
jae
sti
xlat
cmp
cmc
addl
and
and
dec
test
fldenv
fnsave
sub
testb
xchg
std
js
stos
gs
cld
ret
cli
sbbl
pop
pop
jl
sbb
dec
ss
out
cmp
pusha
mov
test
iret
in
or
addr16
bound
test
aad
mov
jae
mov
pop
cmp
popf
mov
jbe
or
out
imul
xchg
sahf
lods
iret
sbb
inc
insl
push
fsubrl
jl
inc
hlt
sub
mov
cmpsl
xchg
stos
pop
adc
out
out
in
jg
adc
mov
inc
fstpl
jecxz
fbstp
mov
pop
cli
out
mov
pop
gs
jnp
jns
xchg
mov
jmp
mov
mov
cli
sub
movsl
lods
dec
push
leave
add
cmp
dec
scas
ljmp
negb
lea
stc
add
cmc
xchg
sbb
stos
sub
fs
es
adc
and
pop
aaa
les
fwait
into
dec
sbb
imul
or
shl
sti
out
vpcmpeqb
test
inc
popa
pop
and
and
lea
gs
daa
subl
fidivs
jmp
dec
jge
mov
mov
xor
loop
bnd
aas
cmp
xchg
sarb
mov
loop
xchg
jbe
dec
adc
insl
cmpsl
jno
roll
mov
and
outsb
mov
xchg
and
or
pop
dec
fucomi
inc
mov
in
hlt
and
fnstcw
ret
pop
add
subb
xchg
jbe
dec
cli
cmpsl
mov
jae
cld
sbb
inc
in
fsub
sbb
sub
int3
adc
jmp
mov
andl
dec
jecxz
mov
repnz
test
leave
xor
rorl
cwtl
mov
mov
imul
jge
repz
fcmovb
out
sub
mov
mov
jle
xorl
dec
adc
js
and
mov
sbb
icebp
jbe
ret
and
hlt
jmp
addr16
int3
or
xor
jae
gs
xchg
cmpsl
lcall
fdivr
cmp
clc
mov
nop
loop
dec
cmpb
mov
jl
test
jb
ret
jbe
pop
dec
pop
orps
push
mov
mull
push
in
or
mov
xlat
and
sub
mov
movsl
into
mov
mov
adc
in
mov
cmc
mov
mov
js
push
int
mov
or
xchg
sbb
mov
jmp
and
xor
shl
scas
mov
int3
shlb
mov
stos
adc
cli
push
lret
cmpsl
daa
and
push
push
xchg
jne
xchg
push
push
jp
sbb
pop
xor
lods
mov
xchg
ret
push
pop
mulb
loopne
jp
add
cmpsl
cltd
rcrl
xor
aas
or
xchg
pop
lds
push
jle
cmpb
cltd
push
test
xchg
mov
stos
stos
mov
xchg
aas
pop
push
mov
fcomp
xlat
jecxz
xchg
mov
add
les
or
out
stos
sbb
xor
push
hlt
pop
cmp
cmc
repz
test
xor
pop
mov
lods
jne
rcll
aas
pop
lret
sub
iret
popf
mov
fadd
insl
cld
inc
movl
push
outsb
outsl
or
jecxz
mov
jnp
inc
jle
stc
cmp
jl
cmpsb
addb
xor
sbbl
xor
pop
sbb
in
jnp
lods
popa
iret
out
mov
or
push
cli
adc
fwait
mov
enter
aaa
jne
jae
cs
call
sub
cmp
dec
movsl
push
aam
cmp
cli
out
mov
sub
dec
or
xchg
add
pop
pop
lcall
and
cmp
cs
pusha
lahf
scas
sbb
sbb
loopne
xchg
sbb
clc
xor
push
lcall
mov
rcl
gs
aad
icebp
idivl
stos
fcomp
les
lcall
jno
fmuls
cld
fcompl
fisubl
ljmp
and
xchg
xor
sbb
mov
filds
dec
cmpsb
mov
jne
mov
rorl
in
inc
out
out
push
imul
mov
jmp
ret
or
jg
mov
xchg
aaa
push
jl
mov
pop
bound
add
cwtl
sub
push
shll
fsubrl
leave
add
pop
pop
adc
or
aas
cmp
mov
xchg
cmpsl
inc
arpl
push
mov
sub
daa
xchg
cmp
xchg
movsb
dec
stos
mov
dec
inc
jb
push
mov
dec
rorl
sbb
stos
cmpsb
sub
test
das
xchg
les
movsb
mov
jmp
push
add
cmp
xlat
jne
fwait
mov
stc
subb
les
in
sti
test
inc
or
imul
xlat
mov
stc
sub
or
sub
mov
imul
jo
cmp
and
xor
jmp
sub
stos
pop
call
add
ss
sbb
stos
sub
cli
mov
mov
adc
or
xchg
ss
dec
mov
inc
sub
xor
fldt
movsb
bnd
dec
mov
push
sti
inc
mov
mov
in
cmp
cmp
and
jnp
pusha
mov
dec
inc
loopne
out
stc
dec
xor
mov
ret
adc
cmp
icebp
aas
push
mov
incl
pop
inc
inc
sbb
dec
lret
dec
mov
sbb
hlt
sub
push
cmp
fisttps
scas
jl
js
push
adc
faddl
movsb
aam
insl
jo
sub
mov
sbb
es
mov
cltd
fnstenv
les
sbb
lea
cwtl
int
insl
mov
out
xor
rclb
rcrb
mov
hlt
jae
lds
aaa
ds
sbbb
mov
pusha
push
nop
out
or
lea
cld
lcall
cmpsb
jae
dec
stc
push
jns
push
imul
mov
adc
aaa
daa
insl
push
add
aam
orl
push
sub
xchg
dec
add
fsub
ljmp
dec
mov
in
push
push
out
das
faddl
mov
scas
mov
dec
outsb
xor
sub
gs
push
pop
dec
ss
mov
pop
jnp
outsl
jbe
filds
in
icebp
es
mov
push
iret
lds
sbb
repz
sbb
mov
or
roll
repnz
call
insb
in
jns
int3
and
mov
mov
fildl
mov
ds
sbb
or
push
inc
xor
jo
jp
cmpsb
das
sbb
jns
inc
adc
idivb
fwait
or
and
add
lds
add
inc
mov
xor
fs
adc
and
ret
mov
ss
andb
arpl
mov
mov
sbb
xor
or
in
push
adc
fstpt
dec
loope
das
sbb
xchg
pop
pushf
cmp
sbbl
call
push
movsb
pop
sbb
or
cmp
jae
rcll
xchg
cmp
in
pop
jns
cltd
mov
in
incb
fisttpl
jb
add
pop
adc
mov
mov
ret
repnz
pop
or
mov
cmp
adc
insb
xlat
shrl
or
pop
jge
adc
mov
add
mov
enter
cmp
pushf
or
cmp
mov
xchg
ret
fpatan
mov
sbb
and
pop
dec
hlt
dec
out
mov
sub
bound
dec
sub
es
movsl
shr
lret
int3
nop
pop
adcb
pop
leave
adc
popf
pop
push
subl
or
pop
dec
xchg
or
sub
dec
test
repz
iret
mov
scas
cld
sbb
mov
push
cmp
add
add
jae
movsl
lret
sbb
test
or
jle
mov
push
xchg
cmpsl
insb
sbb
mov
xchg
push
pusha
pop
insb
mov
mov
add
add
out
adc
cmp
cmp
xor
enter
sti
insb
arpl
out
ret
push
stos
cs
mov
lods
loop
add
xor
adc
out
fisubrs
ss
out
or
shlb
push
in
dec
int
xor
adc
lret
jge
nop
lods
test
setne
outsb
or
add
out
sbb
inc
and
dec
xchg
inc
in
mov
shl
repnz
leave
sbb
pop
sub
add
or
orl
inc
xor
jp
and
adc
jmp
cmp
adc
cmc
inc
sbb
or
mov
inc
in
mov
mov
out
les
and
test
inc
sarb
inc
outsl
xorb
jae
sbb
pop
mov
iret
sbb
add
pusha
push
imul
mov
jl
pslld
ljmp
into
out
sub
je
shlb
pop
rol
add
add
and
pop
sub
addb
jne
dec
dec
or
push
fs
jmp
and
adcl
mov
aad
testl
outsb
aad
insl
sbb
ljmp
cmp
stos
in
arpl
je
xor
lds
inc
imul
pop
loope
aam
cmpsb
push
dec
add
jns
pop
call
shlb
pop
and
ds
out
test
ja
jno
ja
pop
jns
dec
cmp
out
mov
xchg
stc
test
in
fs
cmp
mov
mov
sarl
das
cli
int3
jb
lea
mov
xor
inc
xchg
aam
or
and
sbb
sub
hlt
loope
jb
stos
pop
dec
cld
loopne
dec
cwtl
lods
scas
jle
inc
imul
jae
sbbl
pmaxsw
or
mov
fs
add
xor
xchg
inc
test
int3
xor
lret
in
insb
push
pop
mov
andb
fs
push
fwait
mov
repnz
pop
adc
push
sbb
sub
jp
cmp
sub
adc
scas
and
mov
pop
ror
or
mov
and
out
mov
rol
es
pop
mov
and
inc
pop
iret
push
fs
dec
cmp
xlat
test
pop
jns
cs
jle
insl
add
adc
nop
xor
mov
sbbb
jge
jp
pop
cwtl
sbb
mov
negb
dec
cmpsb
test
push
xchg
stc
repz
add
loop
in
das
vpsrld
psubb
push
xchg
mov
outsb
aam
sbb
sbb
mov
ljmp
push
xor
lcall
enter
sti
pop
or
push
lods
inc
into
data16
pushl
in
xchg
arpl
pop
pop
mov
fsubs
sub
in
sub
push
dec
aam
mov
test
mov
mov
dec
fs
scas
mov
inc
sub
dec
dec
sbbb
fsubrs
jmp
add
dec
stos
cwtl
sti
fadd
xchg
rorl
repz
rcll
data16
and
jl
mov
add
popf
jnp
pop
aaa
push
jne
sub
mov
push
cmp
mov
ret
sbb
xchg
mov
or
pop
lahf
ja
subl
inc
xchg
out
addr16
inc
test
sarb
mulps
int
pop
mov
icebp
sbb
stos
mov
mov
mov
sbbl
sub
jle
sti
insl
mov
ljmp
ja
inc
pop
sub
and
sub
and
les
mov
mov
cmp
orl
dec
mov
lods
mov
and
fs
sub
add
mov
icebp
js
out
fnstcw
and
jno
xchg
ret
ret
stos
adc
arpl
dec
or
add
sbb
psrlw
mov
xor
aad
mov
scas
mov
push
mov
pop
cmp
pop
sti
jns
mov
sub
lcall
mov
or
mov
pushf
sbb
mov
and
lods
iret
in
out
dec
lret
jmp
xchg
sbb
inc
scas
int
pop
sbb
jle
adc
and
adc
clc
jnp
inc
add
loop
clc
sub
jnp
pop
hlt
dec
push
add
adc
fldenv
xchg
rcll
push
subb
scas
insb
cld
pusha
sbb
pop
mov
sub
pop
xchg
outsl
dec
mov
scas
movsl
cwtl
mov
test
sub
notb
aam
mov
mov
cmpb
aam
xchg
xor
pop
sub
mov
mov
popf
mov
add
lea
sbb
ds
push
push
push
mul
lret
int
xchg
mov
gs
mov
dec
scas
lods
std
dec
lcall
cmp
xor
fs
ja
jp
sub
push
cmovge
int3
loop
jecxz
mov
filds
adc
cmp
scas
or
fsubl
out
cmp
fs
mov
jae
rcrb
fldt
mov
xor
imul
pop
mov
push
push
mov
loope
mov
adc
mov
cmp
fcoml
xchg
push
sub
jmp
inc
stos
xor
test
cmp
pushf
mov
test
mov
stc
adc
inc
daa
lret
sub
add
stos
and
aas
loopne
cmp
clc
fisubrs
movsl
hlt
cmp
pop
mov
pusha
imul
mov
push
lret
cwtl
ljmp
mov
add
loope
test
or
mov
cld
fsts
in
sbb
mov
sbb
jg
sbb
push
xor
xchg
mov
ja
mov
gs
notl
nop
xchg
mov
xor
lret
sub
mov
inc
push
es
shrl
ss
and
push
add
sti
jne
mov
pop
cmpsb
lods
call
or
mov
sbb
loop,pn
mov
cmp
cmp
les
addr16
ret
xchg
add
push
aam
pop
pop
fucomi
jo
pop
inc
dec
sbb
les
xchg
scas
push
xchg
jne
sti
leave
cmc
lds
push
ret
pop
je
test
push
sub
outsl
or
idivl
xchg
repnz
jle
adc
sbb
push
orl
pusha
xor
xor
push
and
sahf
push
les
js
js
insl
or
jl
imul
mov
jne
mov
mov
mov
imul
ds
addr16
mov
es
cmp
add
jno
cmp
fadds
jp
lea
jle
repz
jns
popf
mov
mov
mulb
pusha
xchg
dec
hlt
xor
xchg
jns
and
add
adc
out
inc
jp
in
int
and
ja
test
jo
aam
outsl
xchg
in
mov
outsb
mov
lods
jb
xchg
movsb
sub
dec
sbb
imul
fdivs
push
jmp
sbb
dec
or
int3
incb
push
cltd
fnstenv
pop
push
sub
sub
mov
inc
in
dec
xchg
mov
inc
push
fildll
insl
repnz
stos
inc
pop
push
inc
pusha
push
cmp
xchg
lahf
jbe
or
icebp
outsl
popf
pop
jge
leave
cmpsb
and
xchg
push
loope
mov
jne
jecxz
mov
add
jnp
sub
orl
dec
icebp
mov
mov
fwait
add
das
mov
outsl
pop
stos
int3
scas
pop
std
outsl
pop
dec
mov
xchg
fistpl
mov
shl
sbb
fistpl
mov
xlat
cmpl
adc
adc
mov
push
aaa
xor
cmp
lea
mov
in
cmp
fnsave
push
in
or
push
xor
or
fisttps
test
inc
std
loopne
adc
add
mov
mov
sarb
rcll
inc
xchg
aam
das
pop
mov
mov
fs
scas
adc
pop
je
mov
pusha
or
stos
leave
xchg
mov
inc
ss
int
adc
and
lahf
std
notl
fucom
sub
fucomip
cmp
fdivrp
inc
pusha
lea
out
mov
pop
mov
fucomi
sbb
pop
ss
imul
xchg
dec
unpcklps
mov
jns
xchg
mov
lock
fimuls
scas
ds
inc
push
add
xor
gs
cmc
fdivr
fisttpl
out
andb
out
mov
in
stos
cmpsl
orb
dec
xlat
lret
xor
lcall
rolb
dec
bound
xor
sub
rcll
jbe
mov
das
bndldx
xchg
sarl
xchg
pushf
xchg
ret
cld
roll
arpl
mov
test
lds
jnp
jbe
adcb
dec
and
insb
pop
xchg
push
pushf
out
push
mov
test
mov
test
sahf
xchg
inc
shr
ds
jb,pn
rcrb
sbb
push
xchg
sbb
out
xor
pop
loop
outsb
dec
in
outsb
imul
and
in
xlat
pushf
hlt
xchg
and
test
aam
add
jnp
or
jg
or
ljmp
movsl
pop
aaa
aas
jb
push
jne
or
jne
push
addr16
mov
orb
adc
pop
sbb
ja
icebp
rol
or
or
push
adc
popf
push
push
mov
mov
std
stc
stc
push
push
mov
xlat
imul
and
mov
add
lds
jae
xchg
xor
inc
sub
mov
and
mov
repz
stos
mov
cmpsl
stos
mov
mov
xchg
pop
xchg
inc
loop
push
jo
mov
sbb
aad
mov
pop
pop
pop
jns
cmp
pop
push
sbb
and
inc
pop
enter
sar
sbbl
loopne
and
outsb
pop
lods
jle
mov
scas
cwtl
das
push
mov
sbb
and
cld
and
push
xchg
mov
fldl2t
and
loope
in
sbb
or
lds
popl
imul
sar
adc
cmp
popa
imul
repnz
and
mov
dec
negb
or
pop
xor
pop
dec
out
adc
aaa
imul
adc
xchg
jp
fimuls
sti
and
adcb
nop
xchg
test
push
mov
stos
push
mov
cmp
loope
call
mov
dec
mov
std
or
or
sbb
inc
ret
pop
pop
sub
jae
scas
loopne
lock
inc
lahf
ljmp
dec
push
sbb
mulb
xor
lahf
int
jmp
or
jns
dec
inc
jnp
jno
lret
ja
cmc
jle
data16
ret
ljmp
ljmp
or
cmp
mov
or
rorb
adc
int
push
fxch
add
movsl
mov
and
pushf
push
imul
ja
rcrb
enter
sbb
mov
mov
jo
pusha
xor
add
xor
cmp
mov
inc
leave
mov
fsubs
inc
push
xchg
mov
cmpsl
lock
cltd
push
mov
mov
pop
xchg
sub
and
ret
nopl
xadd
loop
int3
test
or
mov
or
or
push
cltd
call
repnz
sbb
push
pop
lods
stc
mov
xor
jl
outsb
shll
sub
in
xor
push
outsl
pop
xor
jge
jae
cmpsl
dec
fs
int
xor
ret
or
sbbb
daa
cmp
xor
push
inc
and
push
push
pop
nop
sub
in
insl
repnz
in
add
loopne
or
push
jp
pop
enter
out
or
out
add
adc
inc
imul
push
in
mov
dec
mov
movsb
dec
mov
mov
cmp
push
cmpsl
lods
pushf
inc
test
and
scas
ss
sbb
dec
dec
push
les
in
mov
out
pusha
xchg
loop
inc
dec
dec
cmp
adc
pop
inc
push
inc
inc
cmp
inc
incl
lock
xchg
addr16
mov
sbb
stos
out
xchg
cwtl
adc
leave
xchg
fnstenv
cwtl
inc
mov
push
mov
pop
and
dec
outsb
loop
insb
push
pop
adc
mov
lret
pop
cmp
or
ds
pop
fadd
iret
fmulp
out
fldt
xor
mov
repnz
out
mov
and
mov
mov
xor
mov
movsl
lahf
data16
popf
dec
movsl
movsb
lods
ljmp
rcr
or
pusha
out
in
int3
test
jbe
std
pop
pop
and
or
cmp
or
in
pop
mov
dec
aam
mov
into
jno
adc
cli
jge
popa
xchg
movsb
insb
push
cmp
jb
mov
inc
dec
iret
dec
imul
ret
popf
jmp
ret
cltd
jp
and
out
jae
daa
lock
cmp
mov
sbb
dec
outsb
ret
frstor
popa
sahf
sbb
rcrb
aaa
cmc
jnp
icebp
xchg
jnp
mov
push
cmp
mov
movsl
aaa
fs
mov
sti
push
jmp
fildll
inc
sub
pushf
in
or
das
loopew
sbb
jl
imul
jmp
cmpsb
fidivrs
inc
push
sub
stos
aaa
lahf
leave
cmp
lods
xchg
testb
scas
push
inc
sbb
pop
and
xchg
gs
mov
pop
dec
cmp
idivb
cmp
cmp
dec
push
int3
stos
imul
psubq
push
dec
push
dec
mov
popf
je
jge
aad
adc
out
stc
sub
xor
cmc
pusha
or
sbb
push
in
gs
stc
je
cwtl
fsubrl
cmpsb
stos
mov
cmpsb
inc
push
sbbb
jae
insl
push
adc
jno
cwtl
das
mov
cmp
xorl
mov
ret
ja
add
movsl
push
pushf
test
loop
ss
mov
ja
xor
or
aad
ss
pop
fldt
dec
insb
lahf
test
mov
mov
mov
rorl
sub
push
popa
mov
loopne
mov
mov
mov
and
outsl
push
rorb
sbbl
imul
sub
jns
jb
sbb
clc
and
in
mov
cmp
test
std
or
cltd
or
test
psubsb
push
add
repnz
pop
test
cltd
rcrb
rcrb
stos
bound
test
sub
mov
sahf
mov
or
cmpsb
lock
mov
test
dec
push
icebp
idivb
test
or
mov
test
lds
add
xor
inc
mov
pop
cmpb
loopne
pop
adc
jns
mov
ds
sbb
push
and
adc
dec
lea
ret
jno,pn
and
fsts
shrb
pop
mov
je
fcmovbe
out
mov
xchg
sarb
call
imul
jnp
orb
es
xlat
mov
or
and
cmp
and
or
repnz
idivl
inc
imulb
je
jbe
sub
sub
fcomps
and
or
cmp
xchg
mov
scas
mov
or
push
dec
clc
cmpsb
fdiv
mov
mov
ret
jg
push
enter
jle
movsl
mov
pop
sahf
sub
mov
cmovp
xchg
add
lods
xor
pop
pop
push
or
pusha
or
sub
sarl
or
xchg
aam
jecxz
add
sub
cmpsb
inc
adc
dec
xor
or
mov
mov
fcoml
lret
adc
jno
mov
aam
lret
ret
pop
xor
push
xchg
sti
push
jg
pushf
adc
es
mov
push
out
stos
ret
movzbl
fs
or
test
mov
scas
movsb
imul
daa
or
cmp
sbb
jae
inc
call
addb
into
jbe
fs
mov
xor
clc
lret
or
xchg
in
add
and
mov
sub
pop
cmp
cmp
sbb
xor
pop
adc
or
xchg
dec
movsl
push
mov
sti
rcll
cmpsb
aas
bound
aas
ret
cmpsb
stos
insl
jp
pop
sub
push
mov
mov
inc
pusha
fsubl
adc
jmp
inc
sbb
jmp
int
jno
adc
cmp
into
mov
ret
push
pop
push
movsb
insl
out
cltd
rcrl
mov
cmp
test
aam
ficoms
loopne
jge
mov
pop
mov
dec
in
adc
cld
pop
dec
and
test
or
add
adc
in
adc
or
gs
pushf
shrb
add
xchg
dec
in
mov
push
shrl
popf
mov
or
xlat
push
jno
jle
adc
jae
loope
pop
cmp
inc
sub
add
cltd
mov
cltd
push
pushf
shl
jp
sahf
adc
addr16
out
jl
mov
in
in
into
adc
daa
clc
dec
in
jmp
lret
inc
push
loop
add
js
sub
ficompl
fmul
pop
dec
push
xchg
dec
inc
sbb
dec
ja
les
inc
sbb
add
jo
pop
gs
dec
stos
stc
test
or
cwtl
jo
sbb
push
jnp
xchg
das
and
xchg
cmpsl
sti
scas
shlb
xor
mov
in
repnz
xchg
mov
scas
mov
jg
ss
in
cmp
test
lods
lea
and
pushw
mov
in
sub
push
rorb
rol
or
dec
xor
mov
inc
dec
jge
sub
clc
daa
sub
jae
add
jmp
jl
imul
hlt
push
push
repz
cmpsl
sub
nop
lds
cli
add
adc
test
fsubrs
dec
cltd
fmull
loopne
cmp
pop
popa
call
dec
dec
cmpsl
add
lea
orl
mov
gs
sub
insb
or
jecxz
xchg
add
sub
stc
ficoms
jecxz
xchg
mov
cmp
sub
inc
ficomps
mov
mov
cli
jno
in
cld
push
out
push
mov
push
jg
cmp
push
stos
and
in
sub
cmpsb
add
inc
push
sahf
inc
out
and
sahf
addb
mov
xor
mov
jecxz
or
and
xlat
pop
inc
mov
scas
aaa
push
xor
and
push
mov
or
mov
nop
into
mov
fdivl
mov
sbb
jl
nop
into
adc
aad
mov
roll
aas
data16
int3
es
and
mov
movb
jl
rclb
inc
sti
add
popl
inc
mov
dec
repnz
sub
mov
imul
cli
jnp
jp
das
inc
sbb
inc
lods
xchg
bnd
mov
or
ret
movsb
sbb
xchg
cmpsl
lret
popf
dec
sub
xchg
pop
inc
or
dec
ss
loope
inc
jb
bound
cmpsb
sbb
mov
rorl
ret
mov
pop
jnp
jg
xor
pop
lock
movsl
insl
outsl
push
push
mov
push
aaa
sbb
das
mov
int3
cmpsl
imul
cmp
sub
pop
mov
inc
jge
out
cmp
inc
adc
xchg
add
jp
sub
arpl
pop
int3
cli
outsl
gs
pusha
ret
mov
xchg
movsl
mov
insl
pop
jne
cmp
sahf
loop
or
pop
fsubp
pop
cli
ficomps
mov
sti
das
or
ss
add
mov
xlat
repz
in
lret
fcompl
rolb
cmp
dec
jns
addr16
mov
call
imul
je
sahf
sub
xor
or
shll
pop
and
xor
fdiv
scas
cld
ja
scas
call
cmp
fidivs
addb
add
pop
xchg
ja
push
dec
mov
inc
push
pop
das
xchg
sub
stos
dec
add
mov
cmp
fdivrp
icebp
fdivl
notl
push
ds
popa
ljmp
dec
xchg
aas
int3
adc
or
mov
fsubs
sub
adc
test
leave
fsubl
jo
sbb
lods
pop
in
jg
fwait
jne
aam
sub
add
pushf
xor
xor
adc
out
aas
push
jb
and
mov
inc
xor
mov
push
sbb
mov
imul
je
jle
fwait
and
or
js
pop
mov
je
fcmovnbe
cwtl
inc
push
leave
dec
imul
shr
mov
pushf
xchg
je
cmpsb
das
inc
out
into
add
testl
in
popl
sbb
mov
loopne
push
jmp
pminsw
push
mov
icebp
out
and
orl
push
out
subb
pop
cmpsl
rorb
and
imul
mov
cmp
inc
dec
arpl
adc
xchg
out
sub
nop
or
sub
adc
mov
outsl
xchg
dec
or
cmp
inc
imul
sub
in
rol
mov
test
shl
jp
lret
cmp
or
inc
inc
pop
jmp
lock
in
imul
xchg
mov
cmp
and
mov
sbbl
inc
jb
inc
rcll
inc
xrelease
jl
adc
lcall
int3
sbb
mov
into
call
test
xor
vmwrite
lret
test
xchg
jge
cmc
std
into
fdivrl
add
scas
out
sbb
sbb
jb
nop
sbb
jne
sub
pop
jno
hlt
movsb
fimuls
xor
data16
jecxz
push
rcrb
arpl
data16
dec
add
cmp
push
movsb
test
sti
add
das
xorb
rcrb
stos
ljmp
xor
aad
xor
adc
shlb
or
mov
adc
xchg
daa
ss
test
mov
inc
stos
lahf
push
sbb
outsl
sti
lahf
mov
fs
cmp
mov
xchg
push
or
xor
aaa
les
push
cltd
out
jbe
in
push
jmp
fs
sub
ret
aam
add
sbb
push
rorb
pop
inc
sub
and
or
mov
daa
sbb
or
dec
xor
xor
std
sub
addr16
out
pop
aaa
lcall
mov
lds
out
pop
mov
daa
push
adc
nop
mov
mov
ret
jb
movsl
push
mov
dec
ret
loop
and
mov
xchg
leave
popf
cmp
push
imul
pop
jo
add
popf
pusha
into
fs
xchg
pusha
in
dec
or
jb
add
sti
xchg
ss
jg
jne
xchg
daa
dec
adc
push
loope
je
sbb
shll
sbb
jo
inc
mov
ds
cmc
imul
mov
dec
xor
popa
sti
sbb
or
sti
repz
inc
sbb
jmp
sbb
shlb
stos
les
fsubl
jg
xchg
push
fdivl
adc
out
mov
push
or
xor
pop
shlb
daa
loopne
fists
ret
rorb
dec
or
jg
mov
xchg
adc
ror
dec
repz
inc
shrb
pop
lds
pop
pop
or
lods
jo
push
mov
mov
or
inc
adc
test
jno
or
push
lods
aaa
pop
xlat
jo
cli
xchg
mov
mov
in
scas
pop
addb
jne
sub
cmp
add
jb
int
gs
idiv
test
cmpsl
jmp
mov
xchg
push
and
pop
in
or
mov
icebp
in
and
sbb
dec
aad
data16
inc
outsl
and
mov
mulb
push
pop
sub
and
adc
dec
sub
imul
xor
or
mov
das
mov
jle
cmpsl
mov
in
mov
jnp
movsl
pop
cmp
int
or
inc
out
mov
xchg
fisttps
adc
aas
cmp
pop
jnp
jae
andb
xchg
sti
xchg
shll
loop
movsl
xor
insb
xor
dec
out
xor
sti
fistl
dec
lea
imul
sbb
iret
int3
sub
dec
jp
ret
push
movsl
mov
xchg
popf
cmc
sahf
mov
mov
in
outsl
inc
lea
insl
xchg
mov
fs
popf
mov
add
ljmp
mov
dec
push
push
push
push
xchg
xchg
fbstp
fcompl
pop
ficompl
test
popf
jns
sub
jne
mov
test
in
xor
aaa
lods
adc
pusha
jp
sti
pop
arpl
pop
out
dec
xchg
and
sbb
add
jae
stc
repnz
xorb
rorl
pop
push
mov
pop
add
arpl
hlt
aad
stc
popf
mov
inc
xchg
fdivl
sbb
stos
cmp
imul
shlb
xchg
mov
cmpsb
jo
fwait
mov
push
das
lret
cli
mov
or
rcrb
stos
pop
adc
inc
movsb
mov
mov
mov
dec
inc
lods
inc
insb
push
in
js
xor
outsl
sub
hlt
aam
cwtl
iret
int3
fiadds
sbb
cmpsb
add
aas
out
or
stc
pop
std
push
mov
pop
sbb
call
das
xor
jae
dec
jae
add
ret
jl
movb
pop
pop
lahf
negl
pop
je
sub
sbb
addb
shll
jne
adc
js
jge
out
sbb
leave
or
mov
mov
cs
vstmxcsr
dec
lods
jb
inc
lods
xchg
jmp
mov
mov
add
cmp
push
dec
sub
mov
cld
dec
or
cs
xor
xor
mov
push
popf
xorl
lret
out
ficoms
jmp
jnp
or
sti
in
pop
xchg
mov
in
outsl
enter
xchg
mov
push
xchg
inc
ds
jae
mov
add
out
push
mul
sub
jno
aad
sub
mov
mov
adc
fistps
cmp
mov
fldenv
aam
mov
mov
stos
jmp
sub
sbb
aaa
loopne
pop
ret
mov
fucomp
mov
and
mov
es
pop
aas
jnp
xor
aam
lds
popf
fwait
movsb
in
in
xor
push
or
pop
jecxz
ret
dec
sti
cltd
mov
lods
stos
add
cmpsl
add
xor
movsb
ds
jno
je
not
mov
xchg
pop
push
cwtl
or
adc
sbb
je
mov
jae
stos
jmp
add
cld
or
push
and
jg
inc
add
jmp
jmp
lods
adc
cmc
jg
enter
loope
in
imul
or
pop
ljmp
outsl
jl
and
cmpsb
jle
cli
out
out
mov
push
jae
scas
stos
mov
inc
xor
sti
outsl
inc
and
jb
pop
jle
sahf
cmp
and
test
add
cwtl
and
js
xor
sbb
xor
bound
bound
lcall
adc
enter
jne
into
je
sbb
xchg
jae
push
dec
mov
pop
pop
push
cwtl
sbb
pop
outsb
jge
add
pop
sub
sub
xchg
sbb
sub
test
lods
and
out
cmp
imul
lds
das
js
and
pop
in
pop
mov
lods
sbb
icebp
test
sti
adc
adc
cmpsb
dec
shll
out
stc
sarl
das
daa
roll
inc
std
int3
sub
jle
cwtl
cmp
aad
cwtl
sar
daa
xchg
cmpsl
icebp
sub
cmp
cmp
sbb
cld
clc
sub
leave
cli
jp
pop
int3
jecxz
sbb
mov
jb
sub
jp
mov
jne
fdivrs
jae
and
ds
pop
inc
js
ret
scas
pop
rolb
cmp
out
or
and
ds
das
xchg
add
push
sti
fcomps
cmp
cmp
push
sub
mov
ret
movl
loope
daa
imul
push
test
push
test
mov
jns
fldcw
fimuls
inc
push
inc
jne
out
fidivrl
outsl
lods
push
push
mov
xchg
in
xor
je
sbb
arpl
push
pop
mov
popa
rcrl
ret
add
insb
mov
frstor
mov
inc
mov
aaa
jp
out
xchg
shrl
stos
push
shlb
outsb
nop
adc
cmpsb
iret
sbb
mov
dec
std
sbb
outsb
rorb
sbb
je
pusha
out
ficompl
fistpll
ljmp
adc
mov
jp
adc
mov
and
aad
je
out
test
dec
inc
movsb
negb
cs
cld
mov
sbb
or
lret
pop
push
addl
jb
cmp
or
hlt
cmp
dec
adc
mov
jmp
adc
adc
ret
mov
test
cmp
add
shr
fcomi
and
jl
xchg
inc
shll
adc
inc
mov
popa
sub
pop
sti
fxam
loop
push
je
mov
dec
sub
dec
dec
frstor
cmp
test
lods
push
dec
jle
lds
jmp
dec
int3
mov
imul
test
pop
test
clc
push
cltd
adc
repnz
sahf
cwtl
out
pop
and
sbb
mov
rcrl
enter
mov
inc
jne,pt
aas
sub
fldt
pushf
cmpsl
fwait
outsb
cmp
popf
add
jle
ljmp
cli
out
call
sub
aaa
inc
mov
pop
hlt
aad
sahf
xchg
lret
test
xor
mov
rorb
cmpsb
orl
ljmp
cmpb
cmp
mov
and
sahf
sar
popf
jae
jne
lods
sub
sub
dec
fbld
pop
push
enter
and
and
nop
rcrb
jb
int3
inc
jle
fwait
out
jo
xchg
mov
inc
mov
jmp
aaa
test
dec
jbe
shlb
addr16
ds
into
xchg
bound
test
scas
ja
hlt
add
fs
subb
pop
or
loope
mov
mov
shl
packssdw
gs
cltd
mov
inc
jbe
stos
into
mov
mov
into
push
call
and
js
fildll
std
es
pop
xchg
iret
sbb
popa
pop
xor
pop
dec
pushf
mov
shr
cmp
cmpsb
push
xchg
sub
mov
into
xorl
push
cmp
dec
mov
divl
cld
mov
add
mov
cmp
jl
fisttpll
pop
cmp
push
enter
mov
mov
movsl
pop
mov
mov
inc
and
mov
xor
adc
int3
dec
inc
xchg
xchg
pop
jne
cmp
xchg
fcomip
pop
inc
dec
in
inc
cmp
dec
adc
les
aam
xchg
xor
cwtl
cld
shl
mov
cmp
imul
adc
ss
adc
es
adc
mov
fs
dec
je
xor
lahf
aaa
mov
pushf
and
imul
push
inc
ljmp
in
es
adcb
enter
inc
lcall
je
mov
addb
cmpsl
fs
mov
inc
imulb
mov
pop
rorl
jecxz
jnp
xor
add
pop
or
lahf
lds
push
loopne
rclb
and
sbb
pusha
push
inc
popl
lret
lahf
push
xchg
or
xor
cmp
or
sbb
xor
xlat
lea
outsl
insb
mov
fisttpll
aam
mov
fcomi
loop
mov
push
pop
test
xchg
ljmp
icebp
pop
dec
push
push
lds
pop
das
roll
outsb
mov
jo
fnstenv
aas
addb
xor
mov
sbb
xchg
shll
test
jmp
cwtl
mov
stos
mov
jnp
sub
push
jg
mov
jecxz
test
sub
addr16
pushl
loop
adc
mov
dec
mulb
jle
and
in
and
pop
pop
mov
pop
lahf
mov
aas
jmp
sbb
dec
vandnpd
cmp
imul
mov
cmpsb
sahf
int3
arpl
adc
fsubrl
test
mov
or
mov
sbb
imul
aaa
andb
movsb
adc
xor
or
jecxz
adc
xchg
inc
fnstcw
es
aas
sbb
ja
mov
push
pop
mov
int
xor
cmpsb
stc
imul
cmp
sbb
sbb
jae
call
loopne
push
dec
pop
jbe
cmp
pop
call
mov
fisttpll
les
inc
arpl
push
mov
push
je
inc
fists
cmp
into
jnp
sbbl
aaa
addr16
jl
mov
pop
in
or
stos
and
cmp
test
addr16
out
cmp
roll
jns
mov
inc
xchg
xor
mov
mov
inc
and
sub
aam
sub
and
cltd
pop
mov
psrld
add
push
jbe
push
stos
jbe
or
hlt
scas
cmp
data16
dec
test
sarb
jb
popa
pop
hlt
adc
popa
je
push
negl
repz
jne
pop
mov
test
hlt
fs
adc
adc
test
test
ret
hlt
pop
xchg
in
adc
mov
adc
mov
call
pop
in
popl
jb
lods
cs
pop
outsl
test
nop
xor
sbb
mov
shrl
xchg
fldt
jno
incb
sahf
or
push
sbb
cmp
and
das
repz
into
mov
sbbb
jnp
cs
lea
ss
xchg
flds
out
push
repz
pop
icebp
and
jmp
bound
mov
in
testl
scas
lahf
cmpsb
cltd
jno
mov
stos
fwait
push
sub
xor
ss
out
cli
xor
jmp
xchg
fisttpll
adcb
addl
push
jmp
jecxz
jecxz
pop
push
pop
movsl
loop
or
dec
adc
add
mov
and
jge
cmp
jmp
dec
pop
mov
inc
leave
lret
test
int3
shlb
push
adc
mov
mov
inc
shlb
bound
pop
test
scas
sub
and
out
sub
lods
mov
sub
adc
adc
faddl
or
les
add
inc
xor
pop
mov
lret
mov
aam
jp
add
mov
icebp
mov
test
call
xor
mov
lods
cmp
sub
punpcklwd
xchg
jle
add
adc
cmp
push
mov
mov
push
sub
adc
fdivl
adc
mov
pushf
mov
scas
cmp
dec
seta
push
nop
fs
shlb
or
sti
pop
imul
mov
sub
jl
add
add
dec
mov
cmp
pop
and
adc
mov
nop
cmp
adc
shrl
ds
mov
mov
xchg
cmp
loop
movsl
pop
leave
insl
mov
pop
cmp
jge
ret
movl
fistpll
fists
cltd
jge
jno
and
lret
dec
mov
adc
stos
inc
xor
in
andl
es
add
mov
push
pop
movb
das
jecxz
jae
pop
or
outsb
push
pop
lock
cmpb
add
jo
push
pop
movsl
call
cli
lock
scas
loop
in
cs
into
fimuls
insl
mov
fldt
ror
push
filds
sahf
test
fbld
pop
mov
cmpsb
cmp
cmp
mov
xchg
xor
sbb
cli
pop
gs
mull
lods
and
fstpl
fisubs
xchg
adc
mov
je
scas
xor
leave
fidivrs
fcomp
bound
jno
push
jbe
lcall
iret
fcoms
out
mov
dec
xor
pop
push
lahf
std
jecxz
mov
sub
push
push
push
into
push
filds
push
dec
sbb
push
enter
addr16
mov
std
push
addr16
cmp
sub
leave
mov
jnp
pop
mov
or
js
pop
cmp
ds
mov
sub
inc
in
data16
outsb
xor
mov
fildll
stc
in
je
push
les
xchg
int3
mov
out
jno
add
loop
ja
dec
pop
lods
mov
sbb
sbb
sbb
insl
mov
shrl
cli
fistpl
movsl
push
fcmovnbe
add
in
xchg
inc
fisttpll
fld
fadds
jo
cmp
sub
out
in
jmp
sarl
nop
and
cmpsb
outsl
fdiv
mov
arpl
cmp
xchg
mov
inc
sbb
pop
and
mov
call
xor
and
outsl
lock
pop
push
add
test
xchg
lea
lahf
outsl
mov
add
pop
mov
add
arpl
scas
push
cmp
js
push
js
and
mov
adc
jl
mov
mov
sbb
sbb
loope
ret
je
cmc
add
dec
or
popa
push
sbbl
cmpsl
aaa
adc
fistl
jp
add
dec
xor
mov
fimull
insb
push
lock
dec
xor
adc
dec
jg
inc
fisttpll
pop
loop
xlat
inc
les
adc
push
test
fistl
dec
adc
pop
out
leave
test
int3
mov
mov
iret
ja
jge
out
mov
rolb
mov
fisubs
cmp
sbb
mov
adc
jns
lods
sub
add
popa
sub
rclb
aam
and
jl
xchg
jae
pop
aam
sbb
cpuid
hlt
fninit
cmp
or
cmp
mov
push
das
add
and
jl
xor
push
push
inc
push
mov
cs
shl
cmc
rcll
call
out
pop
mov
fcompl
dec
add
lret
dec
mov
push
rcrl
das
dec
jbe
std
mov
clc
mov
frstor
sbb
pop
int3
ljmp
incb
ljmp
add
xchg
add
xor
icebp
iret
mov
sbb
ljmp
xchg
xor
fldt
inc
imull
and
mov
and
fildll
fadds
jl
pop
into
in
push
fadds
pop
in
mov
ret
call
cmpsb
sub
mov
sbb
test
cmpsl
lcall
push
out
push
fadds
xchg
inc
shll
mov
push
pop
inc
outsb
ljmp
or
jmp
test
xor
adc
in
mov
push
outsb
push
test
xchg
outsb
cltd
pop
fisttpl
sbb
repnz
adc
or
xor
int3
movsl
adc
lods
inc
mov
push
mov
or
dec
aam
aad
add
sahf
insb
jle
lds
mov
sti
mov
fadds
cmc
rcl
and
jns
push
jbe
pop
push
mov
rdmsr
push
arpl
pop
add
jnp
jb
ljmp
mov
inc
loopne
and
into
out
xor
jge
in
mov
inc
popf
cmpb
lods
jmp
loop
push
and
sub
mov
xor
xchg
lods
push
add
out
mov
mov
mov
popa
sub
data16
pop
ret
dec
mov
jnp
dec
pop
popa
fldln2
or
sbb
notb
jo
adc
test
out
mov
push
data16
stc
xchg
jnp
fnsave
mov
cmp
incb
pop
jecxz
push
push
push
pop
or
push
or
pop
pop
mov
jmp
in
repz
test
outsl
push
xchg
jb
or
je
jmp
in
push
and
in
cmp
fstpt
dec
cmp
or
mov
aaa
test
xchg
mov
aad
sbb
dec
jmp
scas
iret
cmp
dec
cmpsl
mov
add
mov
lret
mov
mov
bnd
xor
lcall
enter
sti
xchg
scas
xor
mov
pop
push
adc
or
add
adc
in
inc
ja
pop
push
repnz
or
stos
push
xor
xchg
ret
hlt
jnp
xchg
jbe
fisttps
and
mov
insl
pop
xor
loopne
stos
xor
mov
or
xor
sub
in
cmp
add
jg
or
ret
pop
das
rol
ja
xchg
push
sbb
mov
and
mov
xchg
aam
push
call
enter
sbb
or
clc
sub
repz
adc
push
pop
ficoml
and
mov
adc
push
cmp
movsb
and
sbb
jbe
add
orb
add
dec
out
daa
scas
nop
push
jmp
add
loopne
mov
xchg
jnp
jnp
jo
ffree
jp
jo
sahf
push
adc
mov
andb
push
mov
push
ret
pop
movsb
pop
xchg
repz
popa
add
stos
mov
fldl
and
xchg
ret
scas
cmp
adc
insl
popl
fwait
cmp
repnz
pop
or
loope
out
shlb
aad
pop
push
aaa
sub
data16
outsl
lea
mov
xor
cs
loopne
mov
shr
in
ss
and
incb
add
jns
sub
outsb
insl
aad
sub
mov
test
cwtl
jmp
ds
pushf
sub
ds
int3
fwait
jb
push
push
arpl
push
into
shrb
xor
into
jmp
sbb
jne
jo
cmp
fstpt
adc
push
int3
jg
into
add
mov
imul
in
sub
dec
xchg
nop
fcompl
imul
push
mov
lods
dec
imul
xchg
jmp
jne
lcall
movsb
jnp
and
rcl
ds
lds
jg
jl
sbb
and
xchg
xor
or
lock
and
xchg
push
add
pop
insb
sub
aas
pop
pop
cmpsl
lcall
out
sub
push
clc
dec
inc
fs
jno
sbb
mov
pop
rclb
shl
repz
or
cmpxchg
xor
mov
aaa
cmc
mov
mov
jae
adc
shlb
dec
mov
popf
push
jno
sbb
loop
inc
ljmp
movsl
ret
push
outsb
subl
addl
stos
scas
dec
mov
xor
cltd
dec
loope
ret
mov
xchg
xchg
mov
je
push
mov
arpl
lret
pop
mov
inc
insb
jmp
xchg
inc
cmp
movsl
push
inc
xchg
jg
dec
pop
inc
fmuls
pop
xchg
pop
test
adc
push
xor
je
jno
sbb
mov
mov
and
sub
inc
mov
cmp
mov
xchg
dec
cmp
jo
jne
out
push
lcall
cmp
cltd
jmp
mov
inc
xlat
cmpsb
push
cltd
adc
ficoms
adc
out
mov
insb
loopne
mov
push
test
xorl
xor
or
jae
jbe
jp
outsb
mov
jl
stc
jg
lock
loope
sub
lret
dec
iret
inc
xchg
cmp
mov
movb
inc
sbb
dec
cmp
pop
sub
push
test
nop
ljmp
stos
mov
movsl
in
fs
add
sbb
iret
mov
pop
sbb
or
lea
hlt
pop
and
fsubs
repnz
jl
adc
adc
add
decl
cld
cmp
into
xchg
scas
movsl
iret
cmp
xlat
arpl
jp
popf
das
sub
jae
sub
gs
pop
sub
adc
cmp
shlb
jp
add
pop
sbb
fisubl
inc
sub
out
jbe
inc
fstps
lds
roll
lea
xchg
insb
xor
xchg
gs
nop
dec
addr16
jbe
inc
imul
insb
insl
jno
jno
test
mov
icebp
movsb
push
gs
or
hlt
xchg
test
mov
mov
sbb
sbb
jo
fimull
popf
push
adc
xchg
jo
cmc
and
cmp
push
hlt
sahf
dec
ja
xchg
inc
mov
push
paddd
mov
mov
cmp
das
push
dec
mov
lods
inc
and
xor
ja
es
stc
in
pop
cmp
ja
pop
mov
jmp
push
arpl
cmp
ljmp
das
outsb
pop
call
jmp
cwtl
mov
mov
mov
adcl
es
loope
out
sbb
jge
scas
sub
inc
cmpsl
ret
sbb
or
jne
popw
inc
dec
xlat
xchg
repz
stc
add
xor
mov
jno
loop
rorb
jle
inc
daa
sarb
adc
cs
je
mov
mov
fs
jecxz
fistpll
mov
lcall
jno
leave
inc
cmp
xchg
xchg
pop
ret
call
pop
hlt
test
jb
test
xchg
cmpsb
negl
dec
sahf
int3
insb
sub
cmp
cmpsl
add
and
hlt
lods
repz
aam
clc
push
inc
jecxz
and
bound
sahf
mov
int
psubsw
jb
dec
insl
sub
pusha
fnstenv
jle
mov
xchg
icebp
push
xchg
jae
mov
sbb
mov
pop
mov
xor
mov
mov
add
cwtl
in
int3
xchg
xchg
xchg
into
loope
mov
and
and
jl
mov
inc
mov
test
jne
sahf
xchg
xchg
rol
insb
mov
out
ret
repz
jl
xlat
pop
sbb
int3
sbb
cltd
xchg
pushf
cmp
pop
dec
out
stos
sahf
cmp
out
push
out
sbb
gs
test
pushf
lea
inc
pop
scas
xchg
cmpsb
add
ja
dec
pop
mov
inc
xor
icebp
das
lcall
mov
add
fnstsw
mov
pop
test
sbb
jp
sub
or
mov
jo
push
and
lret
mov
or
les
je
aam
imul
mov
add
int
adc
cs
sub
test
mov
pop
pop
xor
push
and
shlb
jge
sub
mov
mov
cmp
or
mov
sahf
out
inc
in
xor
lods
mov
add
mov
sub
push
lcall
push
in
pop
pop
mov
pop
or
bnd
jbe
movsb
sahf
mov
push
imul
movsl
out
sbb
addl
mov
out
out
js
mov
mov
sbb
lods
jno
repnz
mov
jmp
push
std
jne
js
mov
je
or
cmp
jmp
in
cmp
ret
dec
cmp
idivb
xor
mov
test
mov
sub
lret
sbb
hlt
test
mov
push
inc
add
loope
pop
into
jns
arpl
lahf
repz
shl
popf
mov
sub
jl
sub
cmp
sbb
idivb
vmptrld
stc
mov
push
mov
sub
sbb
shrb
or
mov
imul
inc
xchg
mov
rcr
or
pop
add
add
or
jle
sbb
sub
sahf
pop
mov
mov
mov
push
jae
imul
bound
aam
sbb
pushf
pop
popf
jmp
les
and
jne
lods
push
lret
outsl
aam
scas
and
test
ret
je
lods
mov
mov
outsl
mov
cltd
out
xchg
rclb
xor
cmp
xchg
cmpb
lods
add
sub
jbe
sbbl
pop
cmp
lock
insl
cltd
jle
xchg
repz
cwtl
fisubl
cli
lcall
lahf
push
gs
jp
cmp
jnp
fucomip
aaa
xlat
popl
push
leave
jle
and
cmp
popf
pop
shr
rcr
add
ja
ds
pop
lahf
inc
shlb
orb
sub
add
int
sbbl
lcall
xchg
and
shrl
es
adc
xchg
outsl
lret
sub
ficoml
and
fldenv
sarb
push
adc
test
std
or
mov
sub
xchg
or
xlat
inc
cwtl
xchg
mov
sub
lret
fdivr
dec
push
cwtl
jbe
push
arpl
fdivr
call
shl
out
pop
js
or
xchg
adc
mov
mov
ss
mov
xor
pop
lcall
and
cmp
mov
push
mov
test
cmpsl
xor
sub
mov
mov
stc
mov
pusha
ljmp
test
movsl
xor
adc
mov
mov
outsl
jmp
mov
call
movsl
cmovl
shrl
sahf
dec
shrb
clc
arpl
scas
sub
rorb
dec
test
repz
push
mov
and
pop
test
mov
pop
outsb
pop
sbb
das
sub
int
icebp
push
lcall
inc
mov
jo
negl
sub
pop
sbb
insl
inc
push
mov
cwtl
pop
mov
xlat
pop
clc
pop
mov
cmpsl
insl
xrelease
xlat
mov
insb
inc
adcb
push
jecxz
ljmp
test
pop
add
or
out
aas
adc
loope
xor
in
popa
and
adc
out
mov
nop
test
imul
dec
jmp
lret
inc
pop
or
in
ljmp
repz
and
push
jnp
and
mov
cmp
insl
repz
pop
and
xor
or
push
jnp
movsb
lcall
arpl
mov
sahf
add
add
leave
rol
and
dec
ss
jno
fsubl
dec
scas
inc
xchg
xchg
inc
jmp
in
icebp
pop
mov
add
xchg
add
sub
mov
mov
lods
stos
adc
dec
pop
out
and
or
pop
push
mov
mov
push
or
push
rcrb
imul
dec
movsb
sub
scas
add
push
pop
test
ljmp
ljmp
jne
bound
push
sub
fnstcw
cmp
push
scas
mov
inc
in
cmp
aaa
fldt
xor
cs
fisubrs
repz
jae
pop
addr16
lret
mov
insl
dec
in
outsb
inc
stos
add
sub
xchg
mov
lock
test
outsb
jne
pop
pop
jle
mov
cmp
and
pushf
and
iret
aaa
mov
mov
xchg
adc
mov
bound
in
xlat
and
sbb
or
sbb
inc
leave
iret
jge
scas
xor
mov
fsubs
inc
hlt
inc
hlt
and
jg
cmp
cmc
or
std
cli
jns
gs
push
pop
cmp
inc
push
mov
pop
add
push
aas
daa
add
mov
mov
cmp
sub
xchg
sub
outsl
push
adc
or
push
jno
inc
sbb
mov
sbb
or
jns
inc
sbb
leave
push
in
mov
orl
jbe
sub
int3
and
jnp
push
xor
into
hlt
add
cwtl
and
shl
sub
cltd
jp
xchg
dec
into
sub
es
js
js
cmp
js
lcall
mov
les
daa
popf
push
in
mov
cltd
xchg
xor
dec
test
xchg
xor
xor
ss
popf
paddq
pop
mov
mov
mov
jge
cmp
iret
fcomps
popa
jns
xor
std
test
cmp
inc
scas
bound
outsl
mov
pop
sahf
or
mov
or
iret
dec
stos
hlt
repz
test
add
notl
cmp
cmp
xchg
adc
pushf
pop
out
pop
xchg
sub
jbe
adc
cmpsb
add
mov
mov
adc
sub
push
andb
push
push
aad
cmp
adc
mov
test
cmp
mov
xchg
pop
addr16
dec
out
cmp
fisttps
cwtl
es
popf
rep
int
dec
loope
shr
push
pop
mov
push
fsubs
jns
fwait
inc
shll
xlat
mov
push
inc
shll
mov
and
cmpsl
mov
pop
rcr
jae
jno
sub
mov
ret
mov
mov
aad
std
mov
dec
int
pop
xchg
mov
pop
push
dec
loop
and
mov
cli
icebp
int3
pop
mov
jno
sbb
mov
jle
pop
xor
fcmovne
je
fwait
xor
movl
outsl
xchg
mov
les
lods
cs
xor
stc
xor
cmpsb
jge
data16
cmpsl
inc
and
pusha
push
in
xor
push
xchg
cmc
adc
daa
bound
adc
clc
daa
sub
sbb
mov
and
pop
mulb
loope
rcrb
dec
ljmp
sahf
or
xorb
rorb
ret
dec
jae
cmp
adc
stc
mov
movsl
mov
fwait
jb
jo
les
cmp
inc
loope
pop
jne
out
dec
in
mov
leave
dec
iret
mov
sti
gs
pop
fldcw
or
and
push
jmp
mov
pop
out
dec
fs
cmc
or
pop
sbb
jno
xor
fs
push
cmp
enter
jg
rcr
test
sbb
and
xchg
mov
dec
stc
lock
sub
jbe
rorb
out
or
jg
mov
lods
ljmp
push
cwtl
xchg
adc
add
xchg
dec
and
lahf
cmpsb
inc
call
adc
icebp
outsl
aam
lcall
out
pop
and
cmpsl
mov
cmp
and
cmp
jo
lea
add
xor
stos
push
outsb
stos
push
and
inc
xor
icebp
jae
stos
xlat
mov
and
movsb
dec
les
push
stc
cmp
or
mov
in
cmp
es
das
jae
mov
mov
pop
add
xor
sbb
pop
ljmp
rcll
rclb
outsb
or
lds
test
add
sub
pop
mov
pop
jns
rorb
xlat
push
or
ljmp
xchg
lods
and
mov
into
adcl
push
dec
je
ss
pop
cmc
fldcw
inc
andb
xor
sbb
xlat
xchg
iret
es
fildl
adc
pop
cli
add
or
inc
add
mov
cs
inc
sbb
js
pop
cmp
movsl
jge
scas
in
test
cmp
xchg
adc
and
dec
loop
xor
call
mov
shl
shr
sbb
cmp
loop
es
xor
push
mov
pop
and
mov
shll
inc
push
pop
fwait
mull
ret
push
ja
clc
icebp
xor
mov
jmp
out
mov
jecxz
xor
insb
push
outsb
leave
in
lock
cmp
pop
shl
sbb
adc
and
dec
test
pushf
jg
pop
pop
pop
cwtl
xchg
dec
cmp
push
sub
sub
dec
jmp
mov
les
pop
mov
adc
xor
dec
je
stc
mov
add
mov
mov
xchg
shrl
frstor
cwtl
repnz
mov
pusha
sti
das
or
movsb
pop
sbb
lahf
icebp
aam
sbb
add
rcr
xchg
fcompl
inc
pusha
movsb
mov
bound
rolb
mov
iret
xchg
scas
pusha
adc
fwait
and
cltd
add
xor
push
cmpl
xlat
jg
bsf
adc
jmp
aad
mov
sbb
lahf
mov
mov
rclb
dec
mov
xor
pushf
int3
adc
mov
add
pusha
xchg
call
call
mov
fs
pop
cmp
call
pop
cltd
pop
jle
cmp
or
jg
imul
mov
fcoms
xchg
call
pushf
xchg
or
stos
mov
push
and
mov
push
or
lret
mov
adc
mov
cmpsl
push
arpl
jne
sub
push
inc
push
adcb
add
in
mull
xchg
test
add
sub
mov
cmp
xchg
cmp
movsb
repnz
jmp
leave
popa
mov
fisubs
adc
mov
xor
sub
jns
leave
fstps
sbb
imul
add
xor
repz
scas
jge
dec
sub
add
or
xor
sbbb
inc
push
pcmpeqd
jmp
xor
aad
out
in
test
pop
jns
jg
test
ret
or
xchg
add
push
jo
dec
cli
push
or
mov
sub
xor
cmp
inc
mov
cli
bnd
int
ret
in
fmul
push
in
mov
mov
cltd
ja
xlat
push
rcrl
mov
dec
inc
pop
lods
mov
leave
or
ja
adc
shl
shlb
call
push
test
mov
pop
mov
into
or
mov
mov
rcll
push
xor
jl
lock
jb
aas
dec
and
adc
popa
sbb
sbb
je
fists
inc
and
sbb
fstps
addr16
sbb
xor
pcmpgtb
mov
js
repz
jo
or
pop
push
fistl
or
jne
or
into
push
mov
add
pop
jle
xor
mov
xor
shrl
add
cwtl
push
loop
sub
inc
dec
fldenv
mov
pop
or
xor
sbbb
xchg
mov
add
cmp
mov
mov
dec
xor
sub
xchg
into
out
jge
popa
out
adc
pop
cmp
push
les
int3
mov
lahf
push
stos
xlat
sarl
fsts
mov
out
inc
shrb
std
xor
xor
push
fdivrl
jne
xchg
and
sbb
dec
mov
inc
and
push
adc
inc
sti
dec
mov
cmp
cmpl
inc
fdivrs
pop
adc
cli
test
mov
push
scas
xorb
mov
push
fldenv
push
sub
pop
sub
lahf
movsb
or
mov
push
push
stc
mov
adc
mov
test
push
push
out
mov
aas
xchg
roll
xchg
inc
fldenv
and
sub
add
addb
mov
int3
daa
hlt
jae
push
pop
fildll
adcl
mov
sub
pusha
xchg
and
fcoms
push
gs
outsl
cmp
lea
loope
dec
push
das
iret
pop
jno
stos
cwtl
pop
xor
add
ss
push
cwtl
pop
dec
mov
repnz
adc
les
pop
pop
fnstsw
jl
test
xchg
and
xor
add
cmp
mov
icebp
push
pop
inc
cli
xchg
stos
outsb
pop
xor
push
xchg
xchg
scas
fadds
test
push
pop
and
into
ja
in
push
mov
icebp
sti
mov
dec
adcl
pop
fldt
jg
push
xchg
add
pop
loop
push
mov
pushf
or
dec
dec
mov
lock
inc
addb
mov
jle
insb
jmp
dec
add
and
inc
shrb
shrb
loop
mov
insl
pop
adc
fwait
cmc
or
cld
jle
lret
fnstcw
cli
movsb
out
in
inc
jae
fwait
out
push
push
stc
xchg
xlat
lods
add
or
and
mov
dec
sbb
mov
in
pop
adc
ds
sub
shlb
push
out
fmulp
mov
cltd
push
or
dec
wrmsr
mov
in
lea
test
inc
out
clc
movsl
mov
add
or
dec
sbb
mov
stos
jmp
imul
stos
add
test
loop
push
mov
test
out
jl
and
sbb
cmp
push
lds
cld
roll
inc
dec
gs
push
mov
add
mov
lret
das
dec
popa
sub
inc
pop
xor
movsb
sti
aam
arpl
arpl
and
sub
inc
lods
dec
push
mov
pop
pop
mov
adc
dec
jecxz
in
lods
outsl
cmp
jne
dec
fwait
insl
mov
push
jo
jae
or
lods
mov
mov
mull
jne
nop
jg
out
psubq
repnz
jecxz
xchg
int3
jl
stos
in
shll
inc
sbb
outsb
adc
lret
sub
and
data16
xchg
andnps
mov
fadd
lock
repz
and
sub
push
popa
and
xlat
inc
mov
and
aad
add
push
inc
adc
orb
jbe
and
add
insb
and
lea
mov
int3
adc
sqrtps
sbb
xor
add
or
movsl
movsl
xor
xor
movsb
and
cwtl
outsb
ss
push
xor
fstpl
jbe
in
repnz
dec
sarb
imul
test
adc
mov
hlt
mov
xchg
inc
xorl
sbb
sbb
clc
add
test
or
jb
imulb
ja
sbb
cmp
xchg
scas
pop
jp
lods
cltd
test
xchg
cmp
out
or
movsl
js
stos
mov
sub
js
cmpsb
repnz
xchg
add
nop
cli
pop
sub
xchg
mov
movsb
xor
in
pushf
xor
jl
mov
sub
aad
mov
push
out
push
inc
sbb
aam
jge
insl
sbb
jnp
nop
lret
jns
sub
insl
scas
stos
int3
sub
xchg
cld
cmc
inc
mov
pusha
lds
pop
iret
jb
or
out
outsl
xchg
push
out
out
loop
loopne
call
jp
sub
ret
push
add
or
xchg
cwtl
orps
jle
lea
inc
cmpsl
push
scas
insl
push
jle
lea
mov
out
ret
cli
jle
sbb
lret
push
adc
jne
lret
sahf
inc
std
mov
test
jnp
lods
mov
das
lret
outsb
push
or
lcall
andl
fistpl
dec
push
in
push
jl
add
pop
idiv
xor
das
adc
testl
mov
loop
into
lret
inc
inc
insb
daa
int3
out
out
inc
xchg
clc
or
loope
pop
fwait
xchg
xchg
sti
daa
pop
dec
xor
cmpsb
dec
pop
sarb
shl
insb
cmp
fadds
in
mov
jl
je
repz
push
out
icebp
sub
xor
add
xchg
xchg
push
mov
insl
or
mov
fsubrs
fldl
pop
cli
daa
xchg
aas
xor
jbe
xchg
inc
mov
mov
loopne
cwtl
cltd
add
mov
xchg
daa
xor
loopne
es
in
push
in
pushf
jg
xor
sub
xchg
popa
xor
ficomps
daa
fidivl
loope
jle
das
andl
or
ret
dec
stos
cmpsb
jno
or
push
mov
pop
inc
xlat
insl
pop
stos
sub
imul
lea
ret
cld
or
sbbl
addr16
xchg
mov
xor
or
dec
inc
cltd
dec
negb
pop
and
jb
testb
pop
cmpsb
sahf
sub
jno
inc
push
sub
and
jae
mov
xchg
mov
mov
neg
adc
xor
jbe
sub
lea
xchg
out
xchg
cmpps
push
inc
and
and
mov
aam
xor
adcl
and
shll
mov
lods
lcall
and
add
leave
daa
inc
dec
cmp
ret
test
adc
das
aaa
xchg
xchg
xor
adc
xchg
jbe
dec
pop
push
gs
push
dec
lret
adc
inc
sbb
data16
adc
mov
mov
scas
cmpsl
iret
mov
movsb
inc
xchg
stos
stc
mov
xchg
add
cltd
jbe
aas
inc
pusha
movsl
add
xorb
lret
femms
std
ja
pop
sub
and
dec
xchg
mov
sarb
or
std
das
pop
pop
and
gs
cltd
shrl
mov
push
mov
mov
cmp
test
mov
pop
jnp
rolb
push
stos
sti
jno
xlat
stos
mov
add
xor
leave
hlt
jg
add
adc
clc
and
add
mov
push
xchg
mov
int3
inc
pop
cmc
pop
pop
in
into
add
mov
cmpsl
ja
sub
pop
mov
ja
dec
and
xchg
jg
dec
sub
in
sbb
mov
push
push
testb
ret
dec
ret
adc
lcall
arpl
mov
mov
push
test
jl
jns
add
lods
aam
fstps
xchg
sub
pop
lock
dec
add
mov
pop
rcl
pop
aaa
adc
dec
inc
inc
mov
sbb
or
test
xchg
mov
push
in
sbb
ret
in
mov
mov
pop
cmp
daa
outsl
enter
lods
mov
inc
insl
jg
pop
push
push
mov
add
mov
rorb
jmp
sbb
push
mov
add
push
jno
orb
scas
stos
or
xorb
push
sbb
add
shl
mov
or
push
out
loop
std
jnp
ljmp
lods
andl
push
stos
sub
aas
lahf
cmpsl
xor
enter
mov
or
scas
ljmp
cs
pop
mov
std
cmp
mov
sub
in
rcrb
sbb
jecxz
popf
in
push
inc
popa
fbstp
push
jl
xorb
xor
push
lods
scas
repz
cmc
imulb
dec
jb
sbb
jmp
cmp
sbb
jge
pusha
sub
inc
cld
int3
out
or
push
and
dec
les
dec
sahf
test
sub
and
mov
and
dec
add
and
adc
inc
pop
add
mov
cmpsb
adc
icebp
movsl
test
push
jnp
out
movsl
mov
scas
inc
adc
icebp
mov
enter
dec
daa
roll
ljmp
stos
mov
lcall
adc
sub
lret
push
push
or
mov
adc
or
inc
mov
imulb
adc
pop
push
jne
xor
push
insb
mov
mov
jae
dec
pop
lret
test
out
cmp
nop
mov
jae
orl
fldcw
mov
mov
sbb
add
rcrl
push
ja
or
inc
scas
loope
imul
pop
int3
mov
aam
repnz
xor
inc
inc
add
mov
mov
rclb
xchg
sub
cmp
or
inc
pop
loopne
cmp
aam
psubsb
dec
and
mov
scas
add
jge
push
scas
push
dec
xor
xor
aas
jmp
repnz
loopne
addr16
rolb
in
ss
mov
dec
test
and
ret
insl
pop
sub
sbb
jne
mov
dec
mov
jg
sub
xor
daa
cli
das
fisubs
adc
notl
and
xchg
data16
in
es
movsb
lea
call
adc
sahf
inc
xor
cmpsb
add
add
inc
sub
scas
lea
sbb
aad
mov
in
stos
push
jge
push
ja
push
jns
add
and
iret
jp
dec
add
pop
or
fnstenv
ja
dec
push
mov
jnp
std
ljmp
pop
xchg
xor
xor
or
iret
roll
nop
or
iret
lahf
neg
inc
or
sub
movsl
sub
adc
inc
xchg
add
test
xchg
fwait
xchg
fmuls
cmpl
mov
xchg
add
pop
pop
add
mov
add
add
imull
xchg
js
mov
ret
aad
sahf
and
and
push
sub
jle
subb
jnp
rcll
in
mov
rclb
mov
fwait
iret
repz
ds
dec
pop
push
inc
movsb
stos
and
lret
aam
sub
cmp
mov
xor
pusha
andl
adcl
jo
sbb
sub
fwait
int3
jo
aam
push
push
cltd
ds
xor
mov
dec
inc
shrl
pop
lahf
dec
or
dec
xlat
fsts
mov
push
inc
cmp
and
push
cs
jns
add
ljmp
in
pop
js
cmp
fstpl
test
clc
cmpb
je
pusha
push
out
dec
insb
sub
es
mov
iret
js
repnz
push
xor
push
stc
stc
outsb
and
popf
fwait
dec
ret
out
push
mov
push
das
xchg
aaa
jp
fnstsw
mov
int3
sti
dec
xchg
pop
lods
sahf
pop
xchg
fisubs
data16
cmpsb
imul
mov
mov
mov
jg
jle
ret
dec
stc
icebp
std
ljmp
adc
loopne
push
xchg
js
xchg
mov
cmc
sbb
dec
inc
xor
and
test
cli
inc
in
repnz
pop
movsb
cmpsl
repz
ret
popf
cli
add
xchg
arpl
cli
lock
loop
and
push
cltd
sub
stos
push
mov
bound
cli
jae
mov
or
jge
xchg
or
movsb
movsb
ret
xchg
test
aam
das
lret
insb
iret
mov
pop
int
dec
pop
ljmp
push
pop
cmc
mov
mov
cwtl
fwait
pusha
sbb
inc
pop
xchg
jno
xlat
xor
leave
test
cmpb
xor
out
insl
push
in
pusha
adc
inc
daa
les
aaa
pop
mov
sub
push
out
adc
mov
or
pop
inc
data16
xchg
dec
or
hlt
or
cmp
mov
inc
jge
mov
adc
sbb
sbb
incl
jb
ret
shlb
sarb
cmp
mov
pop
pop
add
push
inc
dec
rep
cmp
mov
cmp
repnz
pop
adc
dec
js
sub
dec
pop
mov
xor
inc
xchg
outsl
xor
sbb
pop
add
mov
mov
bound
int
and
pop
sti
addb
jmp
add
mov
xchg
dec
ljmp
xchg
pop
xchg
leave
pusha
lock
addl
ret
decl
ss
dec
mov
push
pop
daa
cmp
lods
pop
push
imul
mov
push
pop
and
popf
cltd
lret
movsb
mov
and
xchg
notb
inc
pushf
iret
ljmp
xchg
dec
out
aad
out
pop
scas
adc
stc
mov
out
out
xchg
adcb
dec
out
pop
into
mov
cmp
test
jmp
aad
and
pop
lock
push
repnz
jge
or
cmpsl
ljmp
adc
jbe
push
aas
mov
dec
cmp
hlt
scas
lods
icebp
insl
lds
inc
ficomps
in
lahf
insb
scas
mov
in
dec
mov
ret
mov
cmc
sbb
jge
lds
int
pop
xchg
icebp
mov
shll
shl
or
push
push
sbbb
fcomip
sarl
add
jp
gs
inc
adc
push
clc
push
add
mull
xchg
outsl
sbb
lods
clc
imul
loope
cmp
repz
pop
les
negl
popa
jge
icebp
mov
pushf
pusha
roll
push
mov
push
mov
jge
cmc
mov
pop
cmp
add
jle
lods
mov
add
fisubrl
adc
push
imul
dec
jl
fcmovnb
lret
imul
clc
je
outsl
in
dec
loop
rcrl
sarb
adc
loopne
scas
dec
popa
js
or
sub
push
insl
inc
inc
aaa
mov
sti
mov
nop
sbb
outsb
scas
les
in
mov
sub
sahf
testb
mov
insl
sahf
es
test
sub
addr16
xchg
aas
ret
mov
jns
insb
js
out
xchg
cmp
in
adc
sub
sar
jmp
andl
sahf
dec
mov
loopne
sbb
mov
cmc
cmc
es
jnp
mov
xchg
nop
lds
lcall
add
pusha
adc
js
sub
mov
push
cmp
test
sbb
add
in
incb
push
es
pop
mov
push
or
ljmp
push
lea
sub
call
pop
sbb
xor
mov
das
lods
popa
or
bound
stc
repz
mov
jno
ret
clc
sub
jmp
add
xlat
mov
sbb
jmp
imul
and
add
push
xchg
push
mov
jmp
pop
cld
fdivs
fwait
lods
pusha
out
lock
xchg
in
scas
mov
test
mov
jg
lods
cmp
or
mov
push
movsb
leave
test
int
icebp
mov
repnz
out
adc
sbb
bound
lahf
or
mov
dec
cmp
cmp
add
push
test
push
int3
lods
inc
jbe
pop
or
loop
add
out
xlat
mov
mov
stc
test
cmp
fs
arpl
popa
adc
lret
dec
xor
dec
out
insb
cs
adc
push
rolb
das
ss
xor
xchg
addr16
aam
push
cld
cmp
adc
test
cmp
lock
js
fistpl
jne
xchg
xchg
xchg
add
or
dec
dec
gs
pop
stos
aam
mov
lods
repz
lahf
jg
in
test
mov
adc
xchg
cmp
push
test
test
mov
and
ljmp
pop
mov
movsl
push
add
mov
call
mov
faddl
std
imul
inc
sbb
jnp
dec
and
jmp
mov
mov
xchg
orb
fnstenv
cmpsl
fsts
pop
or
fmuls
pop
scas
sbbb
ret
leave
pop
ret
int3
cmp
dec
mov
cmpsl
insb
leave
fwait
sbb
inc
repz
jbe
shr
sbb
xor
sarl
push
dec
inc
test
scas
mov
mov
cltd
stos
lods
adc
lods
inc
aaa
sarl
cmp
test
or
cmp
mov
cli
mov
pop
jge
lea
pop
xor
jecxz
imull
mov
fistl
xchg
jge
and
popa
loop
call
pop
inc
scas
add
mov
mov
inc
jp
ret
pop
stc
fisttpl
push
mov
xchg
or
xchg
mov
mov
mov
fidivrl
jnp
cmp
out
mov
sti
pop
fs
cmp
push
setne
mov
mov
jp
fidivl
dec
in
loopne
sbb
push
add
lret
mov
sbb
mov
mov
jbe
adc
sbb
clc
pop
adc
enter
add
out
or
adc
bound
dec
out
mov
push
push
stos
xor
jl
packsswb
cmp
jbe
mov
dec
add
inc
mov
push
popa
lods
sub
jmp
add
push
mov
and
mov
xchg
cs
fildl
arpl
fwait
push
or
lret
mov
add
push
mov
ret
sub
and
lea
movsl
and
popf
pop
jbe
jmp
xchg
rolb
push
je
mov
and
mov
xchg
adc
js
test
mov
push
mov
inc
or
std
push
out
and
divb
int
out
adc
popf
shll
imul
jp
or
test
test
scas
js
test
dec
jge
inc
mov
sbb
xor
cltd
repnz
cmpsl
and
nop
ds
xchg
popf
pop
mov
out
test
and
ljmp
cs
sub
add
dec
xor
mov
cmp
xchg
or
xor
dec
add
in
xchg
sbb
mov
pop
imul
sbb
pop
into
sbbl
in
lods
std
or
ret
push
mov
xchg
insl
in
insb
dec
pop
arpl
loopne
dec
sbb
stos
push
and
stos
sti
xlat
lods
cmp
pop
out
xchg
adc
dec
mov
sarl
stc
out
stos
pop
adc
es
aam
rdtsc
and
pop
pop
adc
jg
pop
cwtl
imul
in
decl
shlb
sub
pop
inc
pop
and
push
cmp
leave
mov
inc
mov
and
outsb
xlat
sub
js
jb
push
push
bound
sbb
sbb
mov
or
stos
ret
cmp
test
adc
cltd
shlb
mov
sbb
fists
mov
jmp
push
xor
xor
call
enter
dec
and
aad
jnp
sbb
les
adc
insl
pop
cmp
dec
lods
cs
jae
aad
cmp
pop
clc
in
rcr
dec
test
test
js
xchg
push
jmp
test
jp
xchg
in
dec
sti
imul
pop
addr16
add
jnp
pop
mov
inc
pusha
ljmp
loopne
rcll
std
jle
dec
out
or
dec
push
mov
jle
std
lret
mov
xor
test
fisubrs
pop
cltd
jno
mov
lods
je
add
inc
test
push
adc
dec
loope
repz
aas
out
aam
push
fisubl
xor
int3
dec
int
and
fcompl
push
xchg
add
js
sbb
and
in
lea
inc
icebp
adc
out
cmp
or
inc
fisttpl
push
stos
pop
pop
fsubrl
adc
cmp
mov
stc
cmpsl
and
or
enter
dec
fnsave
aaa
mov
inc
xchg
xor
lret
and
mov
fnstcw
loop
xor
add
jge
dec
fistps
sub
les
pushl
pop
repz
in
mov
cltd
jns
xchg
lods
xor
sub
sub
mov
incb
cld
leave
lret
insb
rcl
mov
push
and
das
dec
jno
xchg
push
fisttpll
or
stos
sbb
add
adc
lods
xor
xlat
xor
lods
das
or
test
mov
mov
push
mov
push
cmpl
repz
pop
push
ret
and
sub
mov
ficompl
adc
push
pop
jmp
xchg
cmp
mov
jg
and
dec
inc
push
xlat
call
xor
push
add
or
sarb
call
and
adc
push
mov
sub
mov
inc
dec
popa
dec
subl
int
lods
data16
testl
adc
fstpl
test
in
lcall
outsl
and
dec
xchg
push
cmp
dec
inc
push
or
scas
aaa
popf
daa
mov
lret
xchg
stc
xchg
repz
jns
syscall
or
addl
and
movsb
pusha
stos
aad
fcmovbe
sub
imul
cmp
mov
dec
insl
shrb
in
dec
repnz
and
into
mov
cmpsl
push
pop
mov
stc
cmpsl
or
adc
test
repz
rcrb
push
mov
mov
iret
in
and
shl
cmp
stos
cmp
test
push
mov
out
bound
out
xor
mov
les
jbe
daa
or
fisttpl
xchg
sti
je
fsubr
sbb
push
inc
movsb
jns
js
sub
je
dec
aas
dec
jo
fisubl
fstps
mov
ljmp
cmp
or
in
inc
sub
shrl
movsb
daa
enter
cli
hlt
lods
test
gs
add
dec
enter
mov
cmp
movsl
stos
lret
fwait
outsb
icebp
push
jne
leave
shl
comiss
inc
xchg
movsb
test
push
mov
cmp
mov
mov
test
jmp
addb
fmul
in
pop
sub
or
adc
add
les
int3
or
mov
cmpsl
addr16
rcrl
fsubl
lcall
fdivl
fldl
mov
cmp
imul
push
xchg
clc
dec
cltd
arpl
stos
adc
push
js
lret
jle
adc
inc
or
shll
xchg
leave
sub
loop
data16
jp
mov
lods
cmp
je
daa
and
clc
sbbb
cmp
inc
lea
fwait
sti
nop
das
inc
lea
push
cmpsb
push
sub
and
mov
jne
mov
lahf
mov
nop
js,pt
test
jbe
sbb
dec
dec
insb
icebp
adc
out
inc
mov
xor
or
dec
xor
add
lea
pop
stos
mov
aad
es
mov
shll
les
mov
icebp
xor
icebp
mov
dec
lods
mov
push
add
mov
jmp
fdivrl
shlb
sub
jg
subb
orb
mov
dec
cmp
lods
xorb
mov
mov
xchg
jne
mov
push
cli
ja
mov
test
in
fs
popf
dec
or
cmp
pop
dec
into
mov
dec
jnp
std
loop
aad
xor
sarl
xchg
adc
out
jge
sub
test
loope
into
ljmp
clc
stc
int
adcb
imul
fucomip
loop
or
mov
in
jecxz
and
lock
and
push
mov
ret
imul
pop
aam
pop
out
jno
add
arpl
jno
loop
jmp
pushf
mov
pop
clc
andb
sbb
out
lods
cmc
scas
sub
sarl
loope
cmp
aas
jmp
jno
pop
fldt
xchg
mov
push
data16
pop
jge
pop
jbe
sub
push
or
imul
clc
push
rcl
cltd
fdivl
jecxz
loop
pop
insl
mov
fsubrs
movsb
cmp
std
push
cmc
loop
xchg
fdivrl
add
out
sbb
insl
pslld
mov
cld
cmp
jo
xlat
loopne
clc
adc
int3
mov
out
lahf
mov
into
lods
inc
mov
jecxz
inc
sahf
or
adc
insb
pushf
ds
or
jmp
or
shl
mov
mov
rcll
lds
pushf
int3
or
aaa
icebp
jle
inc
xchg
or
xchg
inc
mov
and
push
jae
negl
jne
cld
in
or
enter
ja
jb
push
push
xlat
ljmp
hlt
arpl
xchg
lea
jle
xchg
jp
addl
movsl
inc
inc
push
xlat
mov
inc
ljmp
inc
ljmp
movsl
adc
roll
push
sub
jne
jge
in
jle
cs
or
out
insb
notb
daa
pop
fsubrl
add
test
sub
pop
pop
dec
loopne
into
movsb
gs
daa
and
pushf
cmp
out
stos
gs
out
sbb
out
or
xor
inc
adc
lods
lods
repz
mov
xor
inc
aas
mov
cli
lock
fwait
popf
cltd
pop
in
loope
xchg
fdivrl
insb
fwait
mov
cmp
push
push
out
cmpsl
repz
sub
test
push
cmp
pop
insb
sbb
pusha
cmp
lods
pop
notb
or
testl
fildl
mov
push
cmp
popa
sbb
shlb
inc
mov
push
fcomps
or
xor
fwait
jne
adc
dec
mov
imul
mov
lock
mov
shufps
js
sbb
jne
shr
gs
mov
xor
jle
mov
push
sti
sarb
sbb
mov
dec
imul
enter
repz
mov
adc
rcrl
jge
jo
fadds
cmpsb
decb
adc
inc
in
mov
cmp
dec
test
jecxz,pt
mov
jno
scas
lcall
inc
cwtl
lock
mov
sbb
mov
sbb
cmpsl
adc
rclb
xchg
cmc
cld
enter
adc
push
jae
or
pop
jnp
xor
jae
sub
fists
sahf
nop
test
lret
sub
pop
adc
mov
push
pop
xor
imul
in
mov
mov
loope
je
fiaddl
lcall
fstps
je
xlat
cmp
fisubs
jnp
rcrl
lretw
aaa
into
pop
pushw
adc
push
dec
pop
sbb
mov
cmpsb
xlat
add
dec
jge
repnz
out
ret
daa
cmp
inc
movsb
mov
mov
mov
mov
push
das
cmpsb
xchg
sbb
int3
outsb
adc
push
jl
pop
stos
lods
loop
aas
out
cli
pop
cltd
lods
ret
push
xorb
rol
jne
data16
scas
xor
pop
div
aaa
push
call
push
andb
push
repz
xchg
mov
out
cmp
cmp
cwtl
popf
and
jle
jl
xchg
mov
jae
and
enter
jo
or
fcoms
mov
dec
cmc
addr16
pop
xor
lret
sub
mov
testl
adc
imul
push
js
mov
divl
insb
cmp
add
in
adc
or
mov
jl
ljmp
jecxz
inc
sbb
dec
inc
pop
mov
mov
dec
fs
je
int3
cltd
ficomps
test
jb
bound
xchg
jecxz
pushf
leave
mov
sub
in
jns
ret
ret
cs
repz
addr16
aad
fidivl
sub
mov
test
jmp
js
repnz
fsqrt
out
inc
leave
xor
cmpsb
jl
test
mov
push
pop
or
mov
jae
cld
sbb
in
shll
pushf
loopne
out
jb
inc
fildl
sbb
and
pop
or
cmova
sbbl
and
jmp
ja
aas
out
and
decb
xor
mov
or
or
out
inc
in
pusha
push
or
and
sub
rcl
jbe
stos
fstps
push
xchg
sbb
adc
mov
out
push
lods
cmpsl
xchg
mov
xchg
test
testb
pop
cmp
and
bound
jle
dec
aad
push
and
pop
xchg
ss
sbb
sbb
xchg
bts
xor
jne
jg
jbe
pusha
sbb
call
iret
aam
int
or
cmp
int3
mov
jmp
mov
popf
mov
or
lret
sub
pop
aad
sbb
in
fcomps
mov
stos
mov
stos
out
sbb
mov
xor
test
leave
lret
scas
rorb
aas
jmp
adc
iret
and
sub
jbe
pop
imul
mov
xchg
in
inc
jecxz
es
rclb
push
push
mov
loop
jp
scas
cmp
inc
shll
loopne
pop
rol
xchg
adc
pop
mov
rcr
sbb
xlat
orl
mov
js
sub
mov
mov
lds
inc
in
jmp
fnstcw
ret
dec
cmp
xor
inc
fistpl
jo
mov
xchg
push
hlt
addr16
mov
xor
mov
pushf
jge
sbb
ficoml
jbe
stc
fwait
ret
ror
mov
fiaddl
sbb
inc
cltd
ret
gs
fs
in
inc
int
mov
aad
add
clc
lret
aad
jne
push
pusha
bnd
sbb
jae
push
mov
lret
and
pop
sarb
push
mov
xchg
ficoml
je
lods
xchg
push
jg
mov
pop
ljmp
out
subl
daa
xorl
jecxz
insl
rcrb
mov
pop
aam
mov
in
cld
shrl
push
sbb
adc
pop
xchg
repnz
inc
adc
xchg
dec
xchg
ja
xchg
or
inc
dec
iret
push
fimuls
dec
adc
pop
push
dec
cmp
enter
adc
popf
dec
sbb
fiadds
lods
jno
test
ret
push
in
inc
testb
cmc
fistpl
mov
imul
push
outsl
cmp
js
pop
rolb
lret
jo
push
add
repnz
imul
adc
dec
popa
sub
mov
cmpsl
pop
jle
dec
cmp
xchg
adc
sub
daa
mov
adc
daa
test
jno
sahf
movsl
lock
xchg
lret
mov
adc
pop
jg
in
pushf
pushl
mov
cmp
fdivr
cmp
mov
and
mov
insl
push
jl
cmpl
xor
outsl
jb
js
dec
fs
or
shlb
sbb
pop
loope
lcall
in
pushf
lock
xchg
stos
xchg
adc
sbb
pop
push
or
inc
mov
movsl
cmp
or
push
pop
mov
mov
inc
pop
and
icebp
push
enter
pop
movsl
mov
mov
push
xorb
xlat
push
arpl
in
int3
movsl
imul
push
cmp
mov
test
add
aad
push
push
xchg
xrelease
movsl
xchg
sbb
jmp
arpl
cmpl
jmp
out
loope
setae
rcrl
mov
in
rorb
xchg
push
ret
cmp
imul
shr
pusha
scas
lock
mov
lret
or
scas
xor
subl
push
cmp
cmpb
mov
xor
mov
mov
daa
pusha
pop
fimull
dec
mov
add
je
es
es
adc
xlat
je
adc
xchg
out
jno
and
imul
jmp
iret
add
hlt
jp
and
push
mov
call
insl
xchg
lods
pop
test
or
call
xchg
add
lcall
pop
ds
fiaddl
xchg
xor
push
xchg
cmpsb
adc
scas
and
js
repz
lahf
addr16
add
mov
lea
pop
inc
dec
lods
xor
inc
pushf
nop
lret
fnstcw
lds
lcall
pop
push
inc
lea
push
mov
cwtl
cld
ret
dec
mov
push
sub
fwait
adc
cmp
mov
ret
xor
aas
lock
daa
js
std
xor
mov
mov
ret
dec
out
adc
jl
cmc
fs
test
dec
popa
inc
data16
fs
cmpsb
in
pop
push
add
movl
mov
sbb
dec
subl
pop
in
js
sub
cmp
mov
mov
aaa
fists
lcall
es
call
insb
push
stos
cs
mov
rcrl
outsl
fwait
adc
xor
fdiv
adc
jmp
gs
out
enter
cmp
push
aam
jnp
pushf
or
mov
add
jmp
pop
shll
mov
push
fprem1
adc
push
sbb
cs
cmp
jns
or
sbb
sub
sub
xor
insl
add
add
ret
mov
inc
lds
jne
add
sub
add
sub
imul
cmp
xlat
pop
aad
cmc
sarb
test
inc
out
loope
shr
idivb
pop
addr16
push
cli
xor
xchg
mov
xlat
loopne,pt
adc
inc
mov
adcl
shlb
ds
loope
rolb
and
push
adc
and
lds
shr
out
daa
sub
int
mov
test
xlat
mov
ret
lret
push
rorl
stos
mov
xchg
jno
mov
xor
xchg
cmpsl
or
cmp
push
adc
pop
jecxz
dec
sbb
in
mov
sbb
out
push
scas
xchg
sub
adcl
js
lods
mov
cmpsb
jp
stos
push
insb
mov
push
cmpsl
out
or
add
push
jne
test
loopne
add
bound
inc
lods
incw
dec
or
ja
or
or
pop
cltd
xchg
and
sub
inc
das
push
sbb
dec
in
aaa
bound
sub
std
in
or
cmp
dec
out
mov
xor
inc
mov
mov
das
fistpll
sti
mov
pop
xchg
push
out
sti
xchg
enter
dec
popf
mov
dec
lahf
nop
in
add
pop
sub
xor
hlt
js
pushf
mov
mov
lods
les
adc
dec
fsts
lea
add
sti
jp
mov
mov
lods
mov
aam
jo
xchg
mov
lcall
mov
adc
loop
and
lock
cmpsb
cmp
pushf
iret
xor
cwtl
push
push
push
mov
outsl
adc
sar
cmc
fcmovbe
mov
sbb
fdivrl
in
outsl
mov
ja
or
push
popa
cmp
cmp
stos
mov
sti
outsl
nop
cmp
seto
fwait
daa
scas
into
and
adc
pop
aam
jne
jecxz
lcall
iret
and
in
out
stos
jbe
rcrl
fs
lods
popf
push
fsubr
add
es
movsl
xchg
enter
add
jne
sub
insb
adc
lods
sub
cld
adc
movsb
sub
imul
aam
mov
mov
sbb
adc
lea
sub
cmp
mov
rclb
jbe
or
in
imul
fcmove
je
sbb
jle
out
insl
clc
rolb
add
call
and
jae
negl
out
ljmp
inc
xchg
adc
mov
sbb
test
loopne
ss
cmp
push
xor
add
rclb
shr
or
in
and
js
jp
je
push
mov
rorl
stc
loope
fdiv
xor
cld
or
jle
sbb
mov
xor
add
lahf
jne
test
mov
inc
aas
mov
movsl
ja
dec
dec
add
jecxz
fcom
insb
mov
mov
dec
cld
push
dec
rclb
fsts
xor
ret
push
dec
cmp
sub
or
jp
sub
and
mov
ljmp
js,pt
mov
or
lods
out
hlt
sbb
fwait
js
dec
les
push
pop
nop
rcr
mov
push
popa
mov
cld
cltd
and
sbb
jg
cmp
inc
pop
repnz
repnz
or
dec
xor
hlt
sub
sbb
movsl
fdivrs
lahf
cmpsl
xchg
pop
sbb
lods
shlb
mov
pop
inc
sbb
or
jg
xchg
enter
aad
inc
sahf
push
stos
faddl
dec
push
jge
push
dec
pushf
pushl
adc
jns
cmpsb
dec
xchg
lods
sub
les
pusha
clc
aaa
cwtl
int
stos
ja
adc
lock
daa
mov
call
je
lock
mov
cmpsl
xor
mov
bnd
test
sub
in
add
cmp
cmp
xchg
lods
adc
dec
addr16
pop
cmp
jmp
icebp
dec
js
mov
add
fbstp
cmp
inc
fdivrl
push
or
add
repnz
sahf
mov
test
cmp
fwait
jne
pop
or
rcr
aas
movsb
nop
or
or
aad
mov
dec
mov
in
jge
lods
jmp
mov
leave
movsb
xchg
call
call
xor
inc
cmp
xchg
jnp
sbb
mov
sub
cmp
js
outsb
adc
idivb
inc
iret
inc
lret
mov
mov
cmpsl
fdivl
repz
xchg
enter
popa
jno
arpl
dec
mov
sbb
addb
mov
popf
les
in
mov
and
cmc
test
loop
adc
cmp
inc
mov
push
push
sub
lock
mov
pop
mov
jg
sub
jne
push
pop
das
pop
aaa
repz
jne
popa
push
jecxz
sahf
clc
sahf
mov
jo
dec
push
xchg
sub
out
movsb
xor
dec
mov
test
sub
ret
pushf
push
mov
adc
jns
insl
cmc
xchg
arpl
dec
xor
xchg
ljmp
outsl
dec
enter
or
sub
out
push
pop
jle
aad
in
pusha
int
data16
push
inc
test
or
push
shlb
repnz
jno
leave
cli
jbe
push
js
repz
xor
push
push
mov
mov
gs
sub
outsb
adc
add
push
neg
mov
or
xlat
adc
jle
adc
pop
leave
mov
xchg
inc
mov
jb
mov
out
nop
and
es
mov
cmp
mov
in
sahf
icebp
jnp
mov
int
pop
or
subb
jmp
add
pop
mov
jns
mov
mov
dec
jg
mov
inc
out
ljmp
pop
xchg
mov
movsl
fidivl
cmpsl
clc
xor
adc
outsl
jo
jl
dec
mov
and
lret
push
pop
xorl
mov
int
pop
repnz
xchg
arpl
jne
sahf
adcl
dec
mov
mov
call
nop
xchg
or
ljmp
adc
leave
out
jno
setb
rcrl
sbb
adc
popa
pop
adc
mov
fcomp
pop
ret
cmp
faddl
je
jb
cmp
mov
shlb
fbstp
pusha
imul
sub
or
rolb
adc
dec
push
test
and
adc
jbe
sub
in
jo
fiadds
imul
dec
ja
aam
popf
fucomi
jns
insb
jne
add
jg
inc
int
xchg
add
fcoml
xchg
push
sub
mov
or
adc
shlb
or
test
mov
sbb
xor
loop
icebp
pop
mov
jo
mov
mov
addr16
out
inc
xor
pop
int3
adc
push
mov
sbb
jnp
dec
pop
push
push
rcll
add
pop
xor
cmc
cmp
loopne
icebp
jge
xchg
shr
lock
sub
push
push
jne
dec
les
popf
jmp
fstl
sbbb
arpl
fstl
out
testl
ja
and
or
mull
pop
scas
mov
dec
leave
aam
cmc
loope
shlb
cmp
leave
inc
subb
or
push
dec
dec
les
push
xchg
les
negb
aaa
xlat
mov
jp
imul
mov
nop
pop
mov
xor
pop
adc
dec
xchg
fildl
js
les
adc
adc
out
stc
int3
test
xor
or
fsubs
mov
call
and
sub
mov
aam
or
cs
xchg
insb
jmp
sub
cltd
add
mov
jb
rcr
mov
jo
popf
push
fstps
call
js
mov
fidivl
xor
sub
std
arpl
mov
std
arpl
dec
stos
arpl
mov
jb
and
adc
inc
mov
mov
jge
xor
jne
pop
hlt
mov
or
add
cli
popa
repnz
push
stos
outsl
push
addr16
jl
add
out
fistps
daa
pop
jecxz
mov
loopne
arpl
mov
inc
mov
in
outsb
mov
mov
addr16
and
push
xchg
test
ficompl
sahf
test
cmp
fadds
incl
push
cli
or
in
pop
enter
in
pop
add
mov
jnp
cmp
cmpsb
aad
ljmp
movsl
in
pop
adc
lods
flds
loop
movsb
popa
sbb
add
push
xor
aam
scas
mov
clc
xor
in
cli
xchg
imul
and
shll
lea
inc
loop
ffreep
push
pop
movsl
xchg
sub
mov
mov
lahf
mov
and
aam
adc
popa
enter
loop
or
data16
xor
in
daa
out
int3
int3
mov
aas
inc
into
add
push
jle
and
sub
jle
cmp
cmp
cmp
pop
std
sub
and
iret
or
sbb
push
mov
scas
mov
push
adc
sbb
stos
sarl
adc
push
dec
iret
mov
aam
dec
aaa
fcom
pop
pop
fstps
out
sbb
sub
push
or
pop
push
add
xchg
xchg
pop
imul
sahf
jbe
in
ror
scas
ficoml
psubusw
mov
out
jp
aaa
mov
push
add
xlat
or
dec
subl
push
mov
sbb
xor
lods
mov
aam
mov
adcb
sbbb
push
aaa
in
or
pop
addr16
mov
fisttps
or
jg
lds
mov
fisubl
pop
xor
fisubrs
vmread
fwait
or
loopne
cmp
add
jb
jp
cwtl
lahf
shrb
jg
out
mov
jb
jmp
add
ljmp
xor
sbb
and
iret
jp
push
outsb
sahf
mov
loop
aas
mov
out
push
out
push
mov
xor
jge
imul
rol
adc
and
lcall
pop
rclb
sub
aaa
and
inc
mov
mov
sub
lret
je
push
mov
mov
sti
loop
out
cmp
pushf
jae
sub
mov
pop
popf
fisubs
imul
test
adcb
pop
lcall
inc
subb
imul
cld
repnz
ret
xor
arpl
cmp
addl
mov
adc
dec
repnz
xchg
push
icebp
add
jbe
out
pop
mov
mov
cmp
dec
out
mov
fwait
mov
sbb
fld
outsb
mov
pop
int
clc
add
jbe
sahf
into
jnp
cwtl
and
scas
push
fdivrl
or
scas
aad
dec
outsb
hlt
out
mov
pop
sub
call
mov
arpl
or
jmp
out
cmp
icebp
es
sbb
popa
subb
cmp
mov
push
cmpsl
dec
testl
xchg
imul
mov
cmc
pushf
dec
movsb
fidivrs
push
and
lods
dec
dec
adc
push
icebp
cwtl
xorb
loopne
mov
cmpsl
fucomp
mov
push
adc
dec
mov
cmp
mov
xchg
xchg
add
int
sahf
ja
or
inc
dec
sbb
dec
add
hlt
xor
lods
jae
mov
push
cmpsb
sub
adc
dec
push
and
adc
cwtl
add
or
sbbb
ror
pop
mov
xor
rorl
sti
inc
arpl
lock
or
sbb
dec
cs
mov
popa
mov
test
iret
movsb
mov
jo,pn
xchg
mov
pushf
fisubl
imul
in
sti
mov
popf
sti
fcomp
inc
push
sbb
in
mov
pop
aam
and
and
xchg
and
push
rorl
xchg
mov
das
mov
xor
inc
sub
addb
dec
mov
mov
and
idiv
testb
test
out
iret
push
out
das
test
pop
pop
dec
rorb
call
dec
pop
push
das
push
pushf
subl
add
loope
les
cltd
jbe
enter
xor
or
push
jmp
aad
shlb
ljmp
popa
pop
add
dec
out
lcall
cs
ret
jb
clc
xchg
enter
push
pop
cmpsl
mov
adc
cmp
or
inc
sbb
dec
ss
out
ljmp
orb
xchg
xchg
js
cmpsb
daa
jns
xchg
stos
outsb
loop
jle
sub
fldt
aam
fnsave
xor
sbb
cmp
clc
push
cmp
pop
mov
jb
stos
adc
inc
cwtl
fists
in
sti
or
sub
and
jo
stc
in
call
out
jp
arpl
jns
or
xor
xchg
gs
or
adc
mov
in
cld
mov
rcrl
and
adc
push
or
ss
shlb
loopne
cmp
pushf
dec
daa
xchg
add
sub
dec
mov
jnp
or
adc
jne
fidivrl
sbb
dec
pop
cmpsl
xchg
or
into
lods
into
stc
insb
ss
dec
repnz
mov
addr16
sbb
add
es
mov
and
dec
lcall
imul
push
add
add
sub
mov
cmp
or
lods
fwait
cmpsl
cmpsb
push
jge
cmp
rcrl
jo
push
cmp
and
je
arpl
sub
pop
dec
jge
jmp
ret
loopne
and
sti
rolb
addr16
daa
out
sarb
fs
jmp
inc
pusha
dec
sbb
or
ucomiss
pop
dec
iret
test
xchg
dec
and
shlb
lods
xor
sub
add
out
inc
push
cmp
lock
mov
nop
jle
jbe
jb
hlt
add
sub
pop
push
das
sbb
das
push
jne
notl
sahf
pop
imul
inc
or
push
lods
xlat
rorb
mov
sub
rcrb
lds
adc
mov
push
sti
xor
cmc
adc
pop
mov
dec
cmp
rcll
mov
inc
jo
call
xor
add
loope
xchg
test
testl
add
outsl
sub
add
stos
xchg
sbb
push
test
xchg
jecxz
dec
xorl
cli
sbb
sbb
inc
jp
jb
mov
jbe
and
call
int3
std
loope
iret
cmp
out
dec
push
push
push
rcll
mov
adc
dec
xor
mov
outsl
adc
addl
mov
out
dec
ljmp
or
dec
sbb
pop
movb
xchg
and
out
into
test
pop
cmp
call
into
cmp
filds
sub
clc
fcomps
dec
aam
mov
movsl
add
push
cli
pop
jns
mov
hlt
outsl
mov
loope
fisttpl
or
loope
pop
int
mov
and
dec
aaa
mov
mov
push
aam
mov
cmp
test
adcl
out
and
xchg
inc
call
data16
cmpb
rcll
mov
pop
xchg
add
xchg
out
shll
repnz
cmp
jns
sub
leave
fnstcw
dec
add
sub
js
punpckhwd
jl
lahf
sub
pop
xchg
aas
or
push
insb
push
cmp
jne
imul
stos
dec
outsb
test
dec
stos
hlt
inc
mov
and
ds
cwtl
dec
mov
jbe
imul
icebp
divl
jle
push
nop
ret
or
mov
outsl
cmpsb
stos
xchg
hlt
sub
ja
mov
ljmp
jmp
or
movsl
push
jns
jae
jle
push
lret
fs
shlb
and
leave
xor
pop
inc
xchg
push
rorl
subl
js
enter
js
push
sub
mov
mov
xchg
imul
push
ret
cmc
sbb
inc
repz
pusha
cltd
push
and
pop
mov
dec
push
push
les
xchg
andb
xor
add
fs
ja
push
mov
dec
loope
push
in
sbb
mov
lret
xchg
fwait
std
mov
or
pop
jecxz
cmp
sbb
insl
pusha
xor
stos
in
add
xor
je
mov
inc
add
pop
ret
jg
call
test
push
enter
add
push
fdivrl
inc
popa
jo
jg
stos
test
cmp
mov
jg
inc
xchg
call
adc
xor
cmp
xchg
loopne
insb
add
xchg
jbe
jno
arpl
jae
daa
add
aad
es
mov
shlb
scas
cwtl
sarl
repz
jne
add
adc
xchg
jmp
aaa
sbb
mov
inc
aad
or
dec
loope
mov
ja
fwait
xchg
and
adc
sub
test
add
push
idiv
jnp
lods
mov
or
xor
aas
mov
aas
jge
dec
int
sub
jg
sbb
mov
push
pop
std
mov
pop
mov
inc
lea
scas
and
or
sub
jmp
jecxz
push
jb
mov
jo
cmp
les
aad
cmp
fsts
aad
push
inc
jl
repnz
cwtl
fidivrs
nop
sti
jl
cld
aam
push
aam
dec
fwait
test
jle
mov
into
lret
aad
je
jg
xor
lret
pop
add
ret
jmpw
push
dec
sarl
or
mov
mov
pop
repnz
lods
adc
out
xchg
inc
pop
in
mov
inc
mov
fcompl
mov
push
rcrl
inc
mov
lret
push
mov
push
outsb
loop
lret
mov
jecxz
push
mov
add
adcb
lds
inc
jne
sub
and
push
call
xchg
adc
dec
dec
es
lock
and
ja
mov
push
addl
sbb
test
cmpsl
roll
inc
sbb
sbb
cmp
lods
dec
or
data16
addl
lock
sti
pop
jle
mov
lods
xor
mov
push
push
movb
inc
add
jne
adc
in
jno
xchg
and
nop
cwtl
dec
por
mov
loop
into
jns
xor
xchg
fldcw
into
mov
cmp
and
push
cmp
adc
pop
fcomps
std
jne
xor
lea
fadds
cwtl
add
fmull
pop
cwtl
dec
in
pop
in
mov
int
jge
add
shll
adc
cmp
fs
push
cwtl
les
insb
push
loop
dec
jp
mov
xlat
mov
sbb
fst
sbb
test
sub
mov
hlt
xchg
push
xchg
lcall
shrl
adc
shll
movsl
shr
push
sti
adc
sub
cmpsl
imul
roll
add
push
mov
in
outsb
add
int
lods
cmp
mulb
cli
ret
sarl
fnstcw
aam
sub
xchg
push
lret
pop
imul
ret
add
inc
pop
xchg
push
xor
daa
iret
pop
pop
jmp
fidivrl
and
mov
repnz
out
jl
andb
mov
xor
call
pop
cmp
cmpsb
xchg
add
pop
ror
out
dec
xor
cs
orb
int3
lret
aam
std
lods
sub
lods
xchg
or
push
pop
gs
mov
xchg
cwtl
rclb
std
or
ss
lods
pop
mov
cld
filds
push
dec
lcall
sub
mov
in
sub
push
fcoml
xchg
fcoml
cli
pop
or
mov
mov
les
pop
adc
push
push
jbe
sub
lret
inc
inc
xchg
in
int3
xor
insb
and
lods
rcr
push
mov
imul
add
cmc
insl
inc
jl
out
jl
scas
jecxz
jmp
arpl
push
mov
js
es
mov
lahf
or
loop
fidivs
pop
iret
into
loopne
fsubs
lds
xchg
adc
js
xchg
leave
push
fdivrs
pop
stos
xchg
cmp
outsl
mov
and
es
cmp
add
aad
divl
or
lret
push
fdivrs
inc
mov
lret
arpl
mov
add
lcall
inc
pop
aas
insl
cmp
add
or
mov
xor
and
sbb
xchg
jns
jbe
add
cltd
xchg
add
sub
cmp
in
ja
push
aad
imul
mov
cld
and
pop
xchg
dec
mov
pop
inc
add
pop
inc
jle
or
cmc
je
lock
or
sahf
sbb
adc
out
lcall
mov
in
fiadds
mov
push
fidivl
pushf
mov
mov
je
fcompl
push
dec
xchg
jno
std
ret
scas
fildll
test
cli
aam
mov
ficoml
push
mov
xor
inc
adc
jnp
popf
pop
push
mov
sbb
cmpsb
fsubr
movsb
push
lods
scas
sbb
push
stos
fbstp
das
dec
pop
icebp
enter
pushl
cltd
out
mov
jle
or
mov
pop
pushf
sbb
or
scas
cli
cmpsl
out
in
daa
in
or
mov
ds
fimuls
imul
xchg
insb
push
pop
xchg
sti
sbb
cmp
mov
adc
push
js
inc
sbb
or
lret
sub
cmp
or
or
mov
out
movsb
pop
xor
aas
xchg
bound
es
and
in
jl
mov
jle
or
outsb
cmp
popf
and
xchg
sub
movsb
jle
rclb
or
and
cli
and
ret
mov
or
or
shrb
jge
xchg
mov
insb
jo
cmp
dec
scas
stc
int
xor
dec
clc
fidivs
xor
fcompl
pop
adc
or
stc
mov
inc
sbb
sub
loopne
push
insb
hlt
jl
in
mov
mov
xchg
pop
add
xchg
push
mov
mov
out
or
pop
mov
enter
mov
jmp
lret
lods
jno
xchg
lret
rcl
xchg
fisubs
test
fdivrl
rorl
scas
jb
cld
pop
mov
push
aam
cmp
sahf
dec
ret
adc
aam
cmp
test
orb
dec
cmp
rolb
cmp
sbb
inc
rorb
es
jo
lret
roll
iret
mov
jle
outsl
xor
je
jl
stc
cmp
pop
xchg
call
sbb
fstl
mov
push
loopne
cmp
in
jge
or
add
mov
cld
pop
arpl
test
jnp
sbb
and
lods
shll
in
sbb
jbe
push
jmp
nop
push
ljmp
into
mov
pop
dec
add
loop
jns
and
inc
les
mov
test
jno
mov
scas
dec
ret
sub
stos
test
pop
icebp
pop
jns
lds
xchg
add
sahf
lds
xchg
cmpsl
mov
xor
inc
cld
cltd
xchg
or
rcr
pop
cmpsb
mov
in
jmp
mov
xorb
sub
pop
pop
pop
pop
dec
les
out
cmp
dec
or
xchg
sub
mov
mov
lods
cwtl
sti
xchg
ret
out
outsb
add
enter
fdivp
out
out
inc
stos
push
hlt
or
pop
scas
or
mov
stc
jno
fildl
cmpb
les
sti
popf
xor
cmp
loop
in
rcll
push
das
or
ja
and
or
popf
cltd
jns
ret
adcb
outsb
dec
test
orl
cmpsb
push
sbb
and
ss
xchg
xchg
cmp
clc
add
outsb
out
negb
fistpl
xchg
push
imul
neg
mov
jns
mov
sub
aam
test
adcl
test
popf
daa
mov
add
out
adcl
xor
or
mov
testb
aaa
pop
adcl
aas
rcr
cmp
rcrl
or
mov
in
xor
rorb
icebp
or
into
aam
mov
ret
test
subl
orb
xor
add
push
jo
aaa
push
adc
fwait
adc
int3
idivl
daa
sub
add
jbe
pusha
ds
sbb
dec
push
dec
or
sbb
int
add
popf
out
xor
add
add
cmp
lea
push
dec
or
mov
pop
mov
lods
fdivs
or
push
pusha
xor
jnp
xchg
push
and
ja
ret
push
jns
mov
arpl
cmc
iret
out
xchg
mov
sbb
insb
pop
mov
xchg
subb
imul
cmp
leave
jne
mov
pop
push
push
shlb
les
stc
scas
call
clc
push
jmp
daa
inc
scas
leave
or
xchg
add
and
lcall
adc
jge
in
mov
xchg
and
cmpsb
aas
test
mov
mov
sarb
negb
inc
loop
outsb
lret
dec
jnp
or
dec
stc
sbb
xchg
out
and
mov
mov
fmull
lods
inc
jecxz
push
leave
aaa
call
icebp
pop
jb
jb
ljmp
and
cmp
repnz
add
jecxz
sub
push
shll
lret
and
outsb
jae
outsl
push
dec
cmpsl
jne
jns
stos
je
insb
push
pop
mov
cmp
adc
push
cld
mov
clc
lcall
inc
jns
push
sub
mov
or
push
jg
or
inc
addr16
xor
mov
outsl
in
cmp
mov
mov
jg
or
adc
arpl
add
movsl
or
ror
jb
mul
sub
fsubl
xlat
push
popf
jp
mov
mov
aas
in
push
jo
mov
sub
push
cmp
repz
push
dec
ret
sbb
jns
cmpsb
stc
sbb
xchg
mov
inc
scas
sbbb
std
mov
mov
cltd
mov
xchg
shll
pop
and
and
fcoml
fisubs
loope
in
fwait
mov
loop
or
inc
fdivrl
ds
popa
mov
in
imull
pop
or
sub
pop
cli
inc
sbbl
loopne
aam
out
test
inc
sbb
sbb
sub
xchg
fistps
pop
or
lahf
mov
rol
add
dec
pop
fsubr
mov
inc
mov
sbb
fldcw
nop
adc
stos
sub
and
lods
mov
shll
aad
pop
dec
popf
cwtl
cmp
xor
xchg
les
shrb
jp
aad
jb
adc
orb
cli
popf
mov
sub
loopne
adc
cmp
mov
pop
sbb
sbb
mov
xor
sar
inc
push
out
imul
or
adc
xchg
into
repz
cmc
dec
cmp
xchg
aam
ja
jmp
mov
sbb
and
sbb
cmc
mov
lret
jl
xchg
test
xchg
lea
dec
mov
movsb
inc
bound
jns
push
xchg
cmpsl
out
adc
or
repz
push
jae
sahf
pop
jl
popa
lea
outsl
mov
frstor
and
mov
jne
scas
sub
inc
sbb
test
popf
std
jecxz
mov
out
sbb
mov
mov
lds
mov
lea
or
push
imul
pop
or
shlb
lahf
jmp
mov
and
lcall
or
call
sub
push
fwait
xchg
mov
test
mov
call
mov
xchg
insl
inc
push
jns
lahf
bound
and
lock
xchg
pop
mov
lcall
and
popf
data16
hlt
xchg
adc
mov
xchg
outsl
repnz
xchg
aas
inc
pusha
pop
icebp
pop
push
test
int
dec
mov
gs
add
xchg
or
rcrb
xor
sbb
jo
fdivrp
cltd
jbe
mov
adc
scas
pop
pop
sub
sub
das
adc
incb
sbbb
clc
cmp
aas
or
loopne
cmpsl
test
mov
sub
rcll
jg
sahf
cmp
movsb
push
sbb
stos
push
aaa
xchg
fildll
add
sahf
pop
or
push
fs
popf
mov
outsb
sub
cmovo
or
jg
pop
or
rcll
mov
fimuls
les
test
cmp
push
dec
test
into
or
ret
fldt
setp
or
in
aad
addr16
ret
in
jmp
lret
mov
in
mov
aad
or
dec
lea
outsb
push
jl
out
dec
fwait
hlt
mov
xchg
test
mov
or
iret
and
push
push
movsb
xchg
cmp
jne
das
popa
mov
sarl
rcrb
jb
jle
pop
add
cld
pop
push
ret
jecxz
jno
adcb
ljmp
mov
mov
mov
mov
dec
shll
popf
jns
negl
insl
int3
add
cmp
or
cmp
add
ja
rolb
es
int
sub
fcomp
add
adc
xchg
popa
lods
push
jno
or
fistpll
xor
iret
sahf
outsl
in
rorb
loop
das
mov
adc
pop
js
xchg
les
outsl
jg
lods
nop
cld
pop
add
cwtl
push
pop
mov
jecxz
scas
leave
pop
imul
add
jbe
fildll
out
imul
adc
add
xchg
adc
ja
rcrb
cwtl
jo
pop
cmp
inc
mov
xchg
aad
roll
xchg
aas
push
mov
shrl
and
pop
nop
add
inc
leave
xchg
xor
push
jo
jmp
addl
dec
and
mov
add
divl
cmp
and
inc
movsb
pushl
mov
sub
push
jmp
popf
aad
decl
lret
rcr
lahf
shlb
or
mov
and
add
jmp
xchg
and
in
loopne
xchg
mov
sbb
push
adc
pop
cs
fwait
push
shld
mov
jbe
pop
aad
or
mov
xor
or
stc
lods
call
sub
dec
cmp
cwtl
lret
jne,pt
stc
aad
xor
pop
inc
outsl
push
sub
aad
sarb
lods
cwtl
sarb
xchg
xor
push
mov
push
sbb
add
call
enter
std
pop
test
cs
les
hlt
and
imul
out
adc
dec
inc
rol
testl
sbb
mov
xchg
add
ror
cwtl
rcrb
or
scas
test
push
movsb
pop
dec
in
int
hlt
xor
push
add
jno
in
push
dec
imul
push
jmp
shll
push
nop
adc
cmc
cli
mov
stc
xchg
test
inc
dec
mov
insl
sub
hlt
subl
and
xor
jae
out
fwait
scas
mov
xor
ja
rclb
pop
js
jno
popa
in
flds
addr16
shll
outsb
stos
sub
inc
inc
and
jns
adc
fs
jmp
jno
arpl
inc
inc
mov
shll
cmpsl
and
mov
imul
jge
lods
loop
lret
stos
ljmp
jl
pop
leave
dec
lahf
xor
ja
or
test
mov
mov
stc
aad
pop
pop
add
hlt
pop
or
xorl
movsb
mov
lret
mov
mov
and
je
mov
cmp
mov
mov
lret
ficoml
addr16
mov
jp
stos
fdiv
adc
xchg
sub
xchg
inc
xchg
xor
shl
pop
loopne
pop
negb
mov
sbb
inc
mov
dec
xchg
mov
and
inc
rcr
inc
pop
mov
out
mov
mov
push
pop
adc
cmpsb
in
cmpsl
pop
stc
push
int
jo
imul
pop
andb
adc
pop
inc
inc
enter
pop
push
pop
fisubrl
sbb
aad
push
add
or
pop
mov
mov
clc
pop
and
das
xchg
enter
push
in
stos
jo
std
iret
inc
jo
inc
lcall
lcall
cmpsb
vfnmsub231ps
and
add
sbb
mov
push
or
or
mov
lds
rclb
out
leave
cmp
jb
cltd
and
inc
mov
add
daa
push
jg
push
fldt
pop
iret
jno
scas
lahf
test
cld
arpl
enter
dec
jmp
dec
inc
mull
jae
xchg
jl
pop
ds
jg
sbb
dec
jl
in
sarl
jle
jnp
cld
pop
ret
and
popf
or
inc
rorl
test
xor
ja
cmp
sbb
out
cmpsl
xor
dec
mov
gs
adc
repnz
mov
and
les
movsl
add
lods
pop
cmovo
pop
leave
adc
loope
lahf
mov
movsb
mov
popa
pushf
fnstenv
and
fisubrl
sti
faddl
imul
dec
icebp
int
dec
mov
dec
data16
imull
bound
and
cmpsl
dec
ret
test
adc
imul
mov
sarb
jecxz
xchg
in
jne,pt
fnstenv
into
aad
mov
outsl
fisttpl
pop
js
imul
cwtl
lcall
mov
mov
in
xorl
push
sbb
or
pop
xor
ds
xchg
inc
mov
stos
shll
movsb
jne
inc
sub
shll
xchg
adc
cmc
xorb
out
cmp
adc
xor
mov
shlb
cmpl
out
mov
out
lcall
jmp
insl
cmp
and
mov
or
inc
mov
andps
cmpsl
mov
lret
in
xchg
add
push
aad
shl
ss
lahf
aaa
adc
push
cmpsl
subl
test
daa
test
cmpl
into
cmp
jle
cmc
shlb
mov
shrl
and
iret
or
mov
push
sbb
shrl
sbb
and
sbb
mov
jmp
mov
mov
and
xchg
lods
xor
sub
xor
jns
jl
paddq
movsl
cmp
dec
xor
mov
xor
aaa
sub
lea
test
aam
mov
ss
dec
mov
pusha
pop
mov
or
xchg
mov
test
inc
inc
push
int
push
out
push
ss
pop
es
loopne
and
lret
adc
out
jo
mov
inc
shrb
lret
test
in
out
fldt
pop
jmp
adc
xchg
popa
add
mov
sub
mov
sub
int3
dec
jmp
add
nop
repz
lret
xor
xlat
xchg
sbb
mov
stc
js
aaa
push
mov
mov
sub
rolb
movsb
mov
mov
adc
jg
ljmp
cld
and
or
mov
push
dec
push
xor
fwait
mov
pop
jno
imul
sahf
pop
mov
xor
mov
in
or
out
mov
lret
cmp
outsl
les
mov
push
loope
adc
cmpl
or
dec
movsb
push
movsb
mov
jne
pop
ja
mov
mov
push
add
pop
pop
ljmp
mov
or
jae
or
rcl
xor
addr16
test
cli
or
mov
xor
inc
cmpsl
jl
in
mov
xchg
or
icebp
cmpsl
xor
je
insb
outsb
pop
outsl
ror
lfs
xlat
xor
test
filds
sbb
andb
leave
fldcw
and
dec
pop
andb
jmp
cmp
mov
jge
mov
imul
push
insl
dec
mov
scas
leave
mov
sbb
mov
gs
mov
mov
xorl
mov
addr16
in
xlat
xchg
ret
mov
pop
push
add
cltd
pop
and
out
dec
daa
pop
xor
add
sub
xor
testb
out
cmp
ja
lcall
lahf
adc
test
pop
sbb
xor
cld
sbb
fistpl
xchg
push
push
mov
call
adc
sbbb
inc
ss
aad
pop
addr16
scas
jmp
leave
mov
add
lea
loopne
in
ja
call
popf
xor
sahf
inc
test
adc
mov
xchg
jecxz
ds
mov
jo
push
sarb
jbe
sbb
jae
pop
mov
icebp
push
cs
sub
cmc
stc
stc
nop
in
lret
sub
jb
or
mov
popfw
loop
push
and
adc
push
fmull
pop
es
sbb
mov
in
aam
lods
enter
sub
pop
shl
inc
pop
and
add
mov
out
sarl
sub
mov
test
mov
sahf
mov
enter
mov
loope
fs
aaa
inc
out
xor
add
jb
fcoml
shll
stos
stos
or
movsb
int
sbb
outsb
sbb
xchg
mov
fwait
and
movsl
cmpsl
rcll
or
xor
cmpsb
mov
ret
adcb
adc
jmp
mov
or
mov
mov
mov
sub
scas
xchg
xorb
jne
adc
pextrw
popa
sti
test
inc
fs
or
scas
fisttps
push
pop
fstps
and
sub
out
adc
and
cltd
jns
mov
push
dec
fs
or
jp
inc
mov
sbb
mov
push
jge
sti
out
fisttpll
rcr
add
clc
dec
sahf
mov
dec
inc
jb
mov
fwait
xchg
or
cmp
bound
lods
cwtl
mov
push
loopne
mov
dec
and
xchg
cmc
je
je
add
push
or
int
hlt
xor
sub
js
inc
movsb
mov
adc
je
jp
mov
aaa
das
jl
cli
insb
movsb
or
and
pop
inc
shrl
mov
data16
jmp
sbb
pop
sbb
ret
jl
push
xchg
inc
lods
mov
popf
aas
cmpl
mov
cmp
cli
movnti
sbbl
icebp
mov
hlt
lret
scas
sar
inc
mov
rcrl
rcl
ss
add
fsub
mov
lahf
adc
push
xor
dec
js
int3
pop
xchg
cmovns
lock
mov
aad
sub
mov
jge
fs
dec
mov
jne
js
mull
hlt
push
popa
xchg
mov
lret
fsubl
outsl
iret
or
pop
movsb
cmpsb
and
test
hlt
push
fists
adc
mov
push
outsl
dec
inc
push
push
rcrl
fnsave
xor
arpl
sub
lcall
adc
inc
insb
pop
out
jle
mov
or
push
fwait
in
and
or
data16
sahf
push
les
jno
icebp
dec
mov
cltd
mov
clc
pop
sub
enter
mov
xor
mov
push
call
test
mov
mov
pop
pop
std
inc
mov
push
xor
iret
sub
or
lcall
imul
pop
and
outsl
inc
mov
and
ss
inc
lahf
lea
ljmp
jno
test
bound
push
and
or
adc
std
push
imul
cmp
nop
mov
call
lret
sub
jno
sub
int
sub
rclb
or
inc
jl
inc
mov
les
bound
xchg
and
adc
xchg
inc
ljmp
inc
incb
aad
mov
mov
iret
fdiv
shlb
mov
push
outsb
jmp
dec
xchg
rol
sbb
test
pop
sub
lret
xor
insb
xchg
pop
insb
or
mov
dec
jno
inc
push
aad
aas
mov
cmp
and
or
popl
pushf
ds
push
or
mov
cld
pop
push
dec
pop
pushf
int
mov
jmp
popa
scas
in
rol
adc
dec
ret
pop
and
cmp
or
leave
loope
adc
decl
jae
in
xchg
cmp
or
fcoms
addr16
movsl
jge
clc
in
pop
mov
mov
in
test
xor
faddp
aad
inc
cli
call
lahf
enter
inc
pop
mov
aad
and
in
enter
movsb
mov
dec
jo,pn
mov
and
lods
fisttpl
aam
out
imul
xor
or
into
fmuls
jg
into
jo
push
mov
sub
ljmp
cmpsl
call
mov
or
jle
pop
les
pop
adc
xor
jae
and
arpl
shlb
xchg
dec
sti
popf
pop
mov
inc
clc
cmpsl
xlat
popf
add
or
push
jmp
lea
add
mov
cli
jecxz
test
fistpll
daa
jl
mov
xchg
ficoms
nop
jg
addb
cmc
sbb
cmp
and
loopne
adcl
xchg
stc
cmp
cmpsb
in
stc
push
loope
mov
dec
sbb
xchg
push
pop
scas
add
cmp
int
enter
mov
lret
jnp
xor
and
sub
pop
pusha
cmp
fwait
cmp
mov
pop
iret
jle
std
xchg
sub
cli
fcom
fldenv
push
stc
xchg
clc
push
push
aaa
lock
std
push
in
clc
outsl
sub
inc
in
pop
mov
add
les
xchg
test
arpl
lods
scas
pop
inc
inc
mov
outsl
sbb
mov
xor
mov
jle
stos
lock
dec
jecxz
fs
jb
mov
cmpsb
push
or
js
stc
xchg
popa
scas
pop
lock
repnz
mov
into
sub
xchg
outsl
and
out
in
lahf
sti
or
out
les
in
arpl
mov
nop
rcr
jo
and
fisttps
pop
mov
mov
lods
movb
psadbw
loop
ficoml
cs
xchg
fwait
xor
nop
imul
mov
push
push
pop
mov
gs
push
cmp
insb
sbb
xor
cmp
les
dec
iret
movsb
fwait
lret
mov
add
xchg
aad
push
addr16
xor
fsts
inc
dec
mov
cs
fadds
jl
xchg
ror
xchg
jns
stc
mov
and
movsl
push
dec
push
bound
bound
push
mov
mov
jo
mov
cmp
mov
out
ret
add
iret
push
cld
cld
pop
popa
in
sbb
adc
fcoms
or
push
dec
mov
adc
sub
push
mov
stos
inc
std
cmpsl
cld
mov
in
push
lcall
enter
stc
or
cmp
or
daa
adc
xor
jns
test
popa
or
jmp
inc
cmp
and
incl
and
or
dec
push
inc
stos
or
movsl
test
xchg
xlat
jp
sti
stos
inc
mov
pop
sub
sbb
stos
sbbb
lods
lahf
add
les
xchg
sub
mov
cwtl
cld
pop
add
xchg
sbb
pop
in
jnp
push
lcall
roll
pop
cmpsb
pop
orl
mov
fisubrl
pop
dec
mov
gs
mov
and
mov
sub
jle
and
or
push
sub
rcrl
lret
push
mov
clc
pushf
enter
and
jae
pushf
rcr
mov
lret
or
loop
push
and
jmp
cmp
and
lret
xchg
lods
mov
stc
cmpsb
or
mov
dec
mov
rorb
jl
sahf
rorb
sahf
cli
lahf
ret
push
mov
call
sub
push
push
in
push
ss
mov
mov
dec
imul
outsl
pushf
mov
sahf
decb
push
mov
inc
clc
addr16
repnz
jp
xchg
nop
xchg
inc
out
xor
lcall
imul
xlat
cltd
popf
test
sahf
ds
adc
and
lods
mov
notl
mov
sbbl
adc
repnz
jge
ret
pushf
sub
cmp
push
sub
leave
mov
and
faddl
sbb
push
into
arpl
nop
jl
adc
mov
bound
sbbb
mov
inc
or
xlat
imul
mov
loopne
cmp
addl
aad
mov
adcl
fbld
xchg
testl
frndint
scas
or
jno
sbb
pusha
aas
in
je
mov
and
sub
mov
cmp
mov
lds
insl
ja
stos
mov
addr16
mov
orb
sub
pop
mov
inc
lahf
dec
loope
xor
push
lcall
push
data16
and
addb
mov
push
adc
sbb
mov
pop
es
gs
dec
xchg
out
movsl
pop
ja
stos
daa
in
xchg
addr16
add
push
inc
sub
scas
xor
sti
push
pop
dec
push
xchg
cwtl
cmp
adc
lods
fnstenv
out
mov
repz
int
ret
xchg
add
enter
fisubs
stos
lcall
fwait
in
mov
movsl
repz
push
lods
jne
imulb
orb
sbb
mov
sub
out
dec
popa
dec
push
jns
mov
ljmp
lcall
and
stos
sbb
shlb
jp
pop
pushf
repnz
shll
xor
std
xchg
inc
jmp
fwait
pop
ja
lods
mov
pop
movl
ffree
xchg
roll
iret
std
je
into
mov
xchg
cli
test
dec
cmp
aas
fcmovbe
lds
lret
insl
pushf
stos
jg
jnp
les
push
inc
dec
xor
cmpsb
bnd
push
outsl
cmp
pop
pop
pop
movsl
xor
mov
les
out
stos
lret
dec
outsl
and
mov
repz
cmc
imul
xlat
push
dec
test
bound
and
and
int
jno
daa
fwait
xor
dec
xchg
xchg
mov
stos
pop
mov
sub
sub
jl
jno
scas
dec
cli
insb
push
movsb
loopne
sti
jno
sub
nop
jmp
insb
mov
in
pop
push
or
fiaddl
mov
out
pop
sub
dec
iret
jo
cltd
icebp
jl
add
add
inc
adc
insb
inc
xchg
stos
jmp
and
xchg
and
mov
lock
mull
and
pusha
xor
mov
adc
pop
push
xchg
leave
loop
push
cmp
into
cs
lods
mov
pop
mov
mov
pop
mov
lret
decl
or
sub
push
dec
cmp
push
dec
int
call
mov
pop
push
xor
mov
pushf
mov
outsl
ss
ret
or
jno
push
mov
fsubrp
dec
pushf
jmp
fcmove
jno
outsl
jecxz
ja
cmpsb
push
cs
popa
inc
das
pop
sbb
test
andl
cmp
adc
add
pop
pop
mov
js
hlt
jl
xor
stc
pop
sub
xor
inc
lods
push
add
add
test
xor
cs
fistps
pop
inc
or
addr16
mov
mov
std
pusha
popf
add
mov
and
lahf
std
pop
sar
xor
sub
daa
stc
mov
ficoml
sarl
mov
repz
decl
sahf
aam
es
mov
lret
iret
cld
xchg
cwtl
sar
ja
jmp
aam
inc
adc
inc
in
xor
mov
test
mov
and
enter
or
cltd
jae
adc
dec
add
addb
and
mov
cmp
adc
pop
push
pop
cmp
dec
gs
stos
rclb
leave
pushf
jbe
pop
lret
jmp
push
adc
bound
lret
js
xchg
jbe
xchg
dec
xchg
xlat
or
mov
add
sub
imul
sbb
jne
shrl
lods
iret
idivb
int3
mov
ret
push
jnp
call
adcl
adc
cmpsb
sub
scas
sahf
int3
mov
cmp
nop
cmc
push
dec
andb
fisttps
test
cmp
sub
xchg
ja
loop
xchg
das
or
inc
stc
adc
adc
pop
push
push
cli
mov
sbb
iret
lods
add
and
pop
xchg
imul
mov
jp
pop
jne
mov
xchg
push
cltd
fdivrl
mov
mov
gs
enter
jb
or
incl
xchg
roll
add
cmc
popa
js
sbb
push
into
xchg
test
jmp
idiv
rcrb
xor
and
incb
icebp
xor
xchg
enter
cmc
call
mov
cmp
mov
mov
and
stos
aam
xchg
aad
aam
cmpsb
addr16
push
sbb
mov
sti
cld
xor
cwtl
push
mov
xchg
adc
icebp
xchg
outsb
nop
inc
jb
mov
lea
or
add
mov
fwait
insb
lods
sbb
mov
sbb
aam
push
mov
add
orb
lods
mov
jmp
and
fs
lock
cmpsb
sbb
dec
or
fisubrl
movsl
ljmp
in
and
mov
shrl
in
outsb
xchg
pop
cmp
xor
rcll
cmp
xor
nop
push
rcr
mov
ja
mov
xor
pop
dec
adc
fidivrs
and
add
aam
xchg
ljmp
fwait
adc
add
arpl
adc
out
pop
cmp
pop
jne
sub
lret
shlb
stos
inc
mov
mov
nop
sbb
sbb
mov
cmp
xchg
shrb
mov
inc
push
push
repnz
mov
jge
pushf
mov
push
das
jp
xchg
push
add
jg
mov
out
lds
mov
rorb
insb
jg
mov
enter
fdivrs
dec
push
cwtl
or
jo
mov
ret
test
push
test
ret
or
jmp
pusha
xor
hlt
xchg
push
cmp
push
hlt
rorb
jg
push
movsb
dec
sbb
pop
or
shrl
and
imul
ss
xchg
fstps
mull
sti
cli
into
pushf
cmp
push
push
outsl
lods
out
shll
inc
add
stc
ret
cmpb
dec
mov
mov
adc
fs
ja
sbb
scas
test
xor
dec
xor
xchg
int
pushf
rcl
or
pusha
jmp
movsl
int
cmpsl
jb
jg
cmc
scas
mov
mov
rcrb
pop
pop
sahf
hlt
xchg
add
insl
cs
nop
mov
push
jns
icebp
or
aad
adc
xchg
adc
sub
mov
and
and
and
cmp
imul
xor
fwait
loop
pop
inc
jmp
cmp
scas
lahf
jns
sub
inc
cmp
cmp
test
xchg
js
ret
mov
inc
push
lcall
jmp
dec
push
mov
xchg
icebp
dec
enter
xchg
movsb
mov
mov
inc
add
mov
mov
fidivrl
xchg
subb
vmwrite
cmpsl
and
outsl
icebp
adc
inc
fidivl
and
or
or
and
adc
jae
lods
jbe
lret
popa
push
mov
mov
outsl
inc
xlat
add
icebp
jae
sbb
or
les
jnp
mov
sub
push
data16
mov
push
hlt
popa
sbb
imul
xor
or
scas
inc
dec
int3
sub
mov
push
mov
rcrb
inc
int
mov
mov
sub
push
and
pop
fcoml
push
or
xchg
call
fdivrp
and
jg
mov
xchg
inc
push
pop
adc
fs
test
mov
adc
pushf
nop
cmp
dec
lods
inc
loop
push
xor
mov
fnstcw
out
rcrb
loop
and
fstpt
mov
push
or
mov
pop
cmp
test
aam
jae
bound
mov
dec
loop
cmp
leave
js
lods
lahf
pop
jg
pop
rcrb
incl
dec
into
mov
and
xchg
mov
mov
add
jne
jo
icebp
ja
scas
jne
cli
cwtl
push
jae
push
push
lahf
pop
rclb
push
xchg
and
outsl
imul
imul
addl
loope
lea
mov
cli
xchg
outsb
out
jne
in
fcmovne
xor
arpl
cli
loope
cmpsb
or
decb
ret
sbb
xor
xchg
mov
lea
mov
mov
push
mov
jge
add
pushf
out
out
stos
fs
out
inc
mov
inc
ds
in
test
testb
cmp
push
push
mov
lds
icebp
lret
fdivp
push
int
inc
subl
pop
mov
pop
jecxz
sub
add
mov
test
and
push
mov
jns
xlat
mov
mov
mov
imul
jns
sub
push
push
ds
or
and
push
nop
cwtl
test
sbb
add
mov
cmpb
sbb
fcmove
adcl
pop
mov
or
xlat
or
cmp
jl
mov
pop
sub
or
mov
les
in
sbb
out
fdivp
ljmp
int3
aam
mov
test
hlt
sub
mov
push
lret
and
sarl
and
popa
addr16
testl
fcmovne
inc
int
adc
subl
cmp
sub
or
sub
jo
daa
inc
mov
std
push
addr16
nop
xor
sub
std
movsl
pop
push
shr
scas
lock
cwtl
aas
enter
adc
push
hlt
add
hlt
sub
adc
and
fisttpl
xchg
mov
das
test
sub
jns
test
int
inc
mov
mov
imul
jo
jne
frstor
arpl
cmc
mov
sub
jp
lods
imul
scas
xor
jns
daa
cmpsb
adc
repz
inc
dec
stos
shll
data16
push
repz
add
jns
jo
cmpsb
movsb
adc
mov
inc
pop
sarb
in
lret
mov
add
push
sub
cltd
and
sbb
sub
add
jmp
lret
jae
mov
sub
subb
enter
es
data16
fiaddl
test
fwait
dec
push
jp
jae
push
fidivrl
jno
lds
add
cmpsb
inc
cwtl
add
dec
jb
xchg
lcall
adc
jno
and
pop
stc
jo
add
test
test
in
push
hlt
and
lret
lea
dec
xlat
or
mov
frstpm(287
lret
test
push
mov
sub
outsb
lcall
xor
mov
mov
mov
imul
and
pop
pop
js
gs
push
jb
inc
fcomp
dec
xchg
pop
out
inc
insb
push
subl
mov
mulb
inc
loope
jge
out
push
push
out
mov
push
sti
subl
or
test
add
movsl
cli
add
adc
mov
shrl
decl
xchg
gs
cmp
sbbl
adc
lea
test
push
aas
out
xchg
orb
cmpsl
hlt
push
jecxz
mov
sbb
faddl
lret
ja
gs
cld
and
shll
mov
push
clc
cmp
pop
mov
add
cmc
xlat
sarl
jbe
xor
shl
and
fldt
cmp
fcompl
or
lods
dec
dec
int3
lcall
out
push
cmpxchg
imull
aad
das
xchg
inc
push
mov
jnp
mov
in
ja
iret
dec
add
sbb
pop
fdivl
and
repz
xchg
push
pop
out
icebp
and
lds
sti
jg
inc
nop
adc
scas
lret
inc
xchg
xchg
arpl
pusha
lods
testb
popa
xor
mov
mov
gs
sahf
mov
js
out
popa
stos
cmc
psllq
shlb
repnz
push
xor
rcrb
repnz
loopne
and
repz
sarb
xchg
repnz
xor
or
fidivrs
pop
cs
shrl
inc
mov
cmc
jns
ja
aad
in
add
pop
jae,pt
xchg
sub
push
mov
int
scas
sbb
nop
dec
rolb
dec
push
aas
jle
bound
daa
mov
test
fisubs
insl
sub
mov
aas
pop
push
jmp
mov
xchg
push
jmp
lods
and
test
pop
or
mov
cmpsl
lods
ljmp
cmpsl
test
or
sub
mov
mov
push
xor
notb
jo
cli
icebp
xchg
icebp
push
xchg
and
mov
mov
xchg
mov
sti
jge
jne
inc
mov
out
mov
ret
mov
inc
and
sub
pusha
and
mov
cs
push
jbe
and
sub
pop
and
xlat
dec
jle
xchg
push
imul
aad
and
jbe
in
push
pop
pop
adc
cld
into
pop
sbb
test
leave
mov
outsl
jg
xchg
xchg
test
adc
fwait
lods
mov
aas
cmp
inc
pop
loop
fsubs
sbb
in
jae
add
out
ret
stos
sahf
push
in
pop
cmp
rcll
test
inc
jbe
push
and
loope
lret
and
xchg
leave
aas
popf
cmpsb
inc
xchg
seta
xlat
push
jnp
pop
cmp
iret
into
loopne
sub
aam
cmp
fcmovnb
popa
sbb
stos
test
jge
mov
push
insb
mov
pop
in
clc
repz
out
dec
mov
mov
cmp
inc
stc
lds
fcompl
scas
inc
sub
mov
int
push
out
cwtl
fbstp
add
and
jne
mov
jae
jge
shl
cmp
lret
and
pop
scas
popl
loope
jle
xchg
pop
stc
fstpl
or
jae
cli
faddp
lret
pushf
mov
addl
icebp
add
pop
push
loopne
sarb
pop
mov
dec
jecxz
pop
sbb
pop
icebp
pop
sub
pop
sub
pushf
mov
cmp
loop
divb
mov
jns
inc
leave
inc
test
pop
inc
popf
subl
inc
test
es
in
out
add
cmp
add
mov
nop
sub
and
mov
ss
sbbb
in
ljmp
jp
fadds
pop
data16
movl
push
mov
sub
lods
sub
sahf
aas
je
cmc
xor
dec
xchg
or
repnz
mov
add
arpl
or
lods
fstp
aam
aad
inc
push
jl
ss
mov
ja
sbb
jns
mov
cmc
jnp
adc
filds
jle
cmp
cmp
testl
loopne
dec
insl
in
jne
mov
dec
mov
lock
enter
dec
jle
imul
mov
dec
sub
and
ret
mov
leave
sub
xor
push
sub
jmp
xchg
push
mov
mov
mov
addl
in
jne
outsb
adc
mov
push
std
dec
stc
add
pusha
negl
mov
imul
and
mov
pushf
mov
xor
scas
sub
outsb
movsb
adc
fwait
dec
nop
outsb
imul
rcll
test
lock
jns
faddl
or
cli
sarb
sbb
rcr
mov
cmp
xchg
and
sbb
push
push
and
or
outsb
jmp
shrb
int
push
test
movsl
mov
shrl
adc
jecxz
dec
inc
inc
dec
push
inc
lea
and
les
xor
mov
repnz
and
cli
cmp
sahf
push
ljmp
lods
cld
lods
jns
and
and
int3
imul
mull
decl
pop
daa
cmp
dec
sbb
mov
xchg
add
sub
test
jmp
cmpl
mov
xor
lcall
ret
pop
mov
repnz
cmp
fsubs
dec
rcr
stc
pop
call
ljmp
pop
pop
sarb
pushf
push
or
rolb
popa
mov
shll
jp
add
out
jbe
pop
out
cmpsb
xchg
jae
mulb
mov
add
xchg
jne
mov
add
dec
mov
in
sub
lret
rclb
ljmp
mov
outsl
jno
dec
nop
add
in
pop
imul
dec
es
es
cmc
mov
jle
sbb
adc
ss
and
test
dec
cmc
adcb
loope
fidivl
inc
inc
or
cmp
lcall
jecxz
adc
test
inc
fldcw
add
mov
in
ljmp
xchg
sub
gs
bound
pop
add
es
repz
xchg
mov
xor
inc
jg
or
push
adc
mov
xchg
or
arpl
pop
testb
fsub
adcb
out
fnstsw
stos
in
sti
ss
andb
mov
add
sbbl
xor
aam
push
ret
or
mov
std
inc
cwtl
mov
pop
xchg
arpl
mov
xlat
jo
js
xlat
xor
fwait
xchg
shll
inc
gs
xor
test
testb
and
fisubs
popf
xor
xchg
mov
pop
dec
call
fcompl
cwtl
and
add
mov
mov
cmp
adc
arpl
das
mov
out
and
add
sub
add
mov
xchg
push
push
idivb
ror
pusha
xchg
ss
mov
cmpsl
cmc
lret
xchg
lods
out
and
in
ljmp
push
lret
fsubs
sbb
add
adc
jmp
pop
sub
orl
popl
push
paddq
iret
xor
imul
shr
fsubrl
neg
loope
sbb
pop
pop
cmp
sbb
pop
test
scas
jge
cli
sbb
add
xchg
jb
mov
mov
mov
fnstenv
push
bnd
fs
push
pop
sbbb
xor
pop
or
push
push
ret
sbbl
pop
int
int
pop
jb
out
fwait
and
mov
cmp
mov
inc
sub
xor
adc
sub
aas
jns
ss
jae
xorb
cmp
ds
cmp
xor
mov
jecxz
mov
pop
bound
sbb
cmp
clc
and
jecxz
mov
insl
or
fisubl
aas
or
enter
cwtl
and
int
and
rcrl
inc
in
mov
sub
mov
out
fidivrs
sbb
xchg
lds
push
jle
push
xlat
push
out
adc
nop
sbb
lahf
ret
jns
insb
movb
mov
mov
loop
mov
xchg
mov
xchg
test
jno
addl
js
and
test
adc
cltd
xor
and
div
scas
cmp
xchg
cmp
xchg
and
jo
rclb
iret
or
push
inc
push
fdivrp
xchg
outsb
mov
loop
test
imul
sbb
popl
divl
xor
adc
mov
push
gs
mov
out
loopne
jmp
mov
mov
xlat
add
jns
jmp
dec
adc
dec
sub
dec
mov
xor
sti
mov
jo
jl
or
or
pushw
in
out
mov
mov
xor
andb
sbb
adc
mov
and
dec
pushf
cmp
bound
lea
lea
cltd
cld
call
insl
xorl
jle
or
fdivp
iret
or
mov
jecxz
in
cwtl
insl
xor
popf
push
lret
loope
jle
jp
xchg
ret
pop
dec
mov
dec
ret
rorb
xchg
rcl
stos
jmp
mov
cwtl
adc
mov
sti
in
push
nop
sub
pop
xor
fsubl
movsl
dec
lret
mov
jbe
out
sbb
lea
hlt
or
or
or
pop
in
hlt
rcrb
fisubl
push
pop
movsb
icebp
dec
sub
mov
sub
stos
cmc
cmp
scas
in
sub
and
dec
sbb
push
xchg
xor
pop
scas
popa
call
addl
or
out
jl
scas
adc
xchg
jl
cmp
pop
fidivs
sbb
and
cmpsl
mov
enter
cmpl
xchg
or
pop
jae
sbb
loope
push
xchg
mov
dec
mov
aad
pusha
in
xchg
fiaddl
cmp
pushf
into
call
cmp
ret
add
popa
dec
cmc
icebp
out
and
dec
or
mov
pusha
ret
mov
scas
lods
add
pop
mov
dec
imul
data16
cmp
rclb
dec
ret
xchg
dec
xor
mov
pop
jne
loope
pusha
jg
fwait
jae
dec
sub
dec
daa
das
cmp
fbld
ja
jnp
jp
repz
mov
lods
movsb
push
loopne
jg
jns
in
jne
out
lret
push
pop
negb
mov
cli
in
fdivs
or
pop
cmpsb
xor
sbb
xor
ds
pop
push
test
ja
push
out
rorb
jbe
repnz
ja
xchg
lods
subl
cld
jae
ja
aas
inc
orl
push
in
divb
xchg
push
jg
in
insb
mov
dec
xor
or
push
sub
in
jnp
lods
cmp
dec
into
sbb
cmp
callw
rcrb
filds
mov
mov
adc
rcl
sbb
cld
fwait
and
ja
mov
lock
push
cmp
fistpl
jmp
or
xchg
ljmp
loop,pt
insl
jmp
pop
mov
jns
jle
dec
mov
pop
fnstcw
loopne
ss
cltd
mov
insb
lret
je
call
arpl
test
js
mov
int3
sahf
sub
sbb
pop
sahf
cmc
cmc
popa
and
jl
movsl
shl
push
daa
imul
add
rcrb
call
xor
mov
mov
imul
mov
push
sahf
push
jb
enter
push
inc
cld
aas
add
adc
push
jbe
stos
jns
and
or
cmovg
mov
pop
pop
jge
in
push
jbe
shll
ja
xor
inc
xchg
xchg
adc
imul
cmpsl
sbb
je
arpl
fwait
sub
jae
pop
nop
imul
cs
mov
movsb
push
into
hlt
mov
lods
mov
enter
je
rclb
or
mov
out
les
jae
stos
xor
push
mov
test
dec
adc
stos
data16
movsl
in
and
insb
icebp
out
filds
orl
cmpsb
jo
sub
sub
adc
mov
cld
or
aad
mov
out
mov
mov
jecxz
xchg
jae
fmuls
cli
jbe
popf
cmp
push
mov
cmpsb
pcmpeqb
out
mov
xchg
mov
stc
adc
adc
jne
mov
or
fimull
jmp
movsl
push
jne
repz
inc
push
add
incl
adc
je
sub
icebp
cmp
lret
xlat
movsl
movsb
xchg
push
fldcw
and
movsl
divl
les
adc
jp
sub
mov
fiadds
lcall
sub
incb
orl
rep
sti
add
cmp
cmp
mov
loope
xchg
leave
dec
or
add
sub
ficompl
scas
jno
mov
xchg
cmp
xor
lds
cmp
test
dec
into
cmp
sub
cmp
xchg
mov
stos
and
test
adcb
jne
iret
scas
mov
push
lret
push
test
mov
cwtl
xchg
add
mov
xor
dec
jmp
data16
dec
push
jmp
shll
scas
push
xchg
sub
lret
or
inc
sbb
aaa
nop
mov
fiadds
jle
lods
inc
shlb
and
aam
movsb
fbld
sub
data16
sarb
into
dec
ss
pop
es
rol
lea
sti
lods
sahf
scas
cmp
aad
mov
je
daa
or
jg
jecxz
or
mov
ficomps
data16
push
rcr
fwait
jecxz
cli
mov
pusha
push
frstor
sbbb
xchg
pop
push
repnz
loope
lods
mov
xchg
or
adc
dec
adc
and
xchg
addr16
loope
fnstsw
dec
mov
inc
repnz
ss
into
fsubr
add
jae
mov
sub
outsl
loopne
sahf
add
ljmp
stos
cmp
das
ret
fs
xlat
test
ja
or
faddl
push
dec
test
into
imul
xlat
icebp
adc
out
and
cwtl
pop
lcall
lret
les
inc
adc
test
bound
or
mov
sub
imul
push
test
das
jg
mov
mov
inc
jb
stc
cmp
movntps
ja
iret
mov
sbb
dec
lods
fs
addr16
lock
add
cld
mov
inc
les
dec
mov
jp
cmp
aad
icebp
int
leave
mov
gs
add
sbb
insl
ret
int
mov
scas
fmuls
sbb
push
arpl
add
cli
mov
sbb
inc
test
adc
adc
dec
out
repz
xchg
or
or
mov
jns
fisubrs
inc
ljmp
mov
in
xchg
add
jmp
sbb
mov
js
testl
pop
pop
add
pop
sub
rcll
sbbb
pop
push
adc
loop
sub
dec
orb
repz
mov
mov
mov
xchg
push
sbb
xor
lds
cltd
insl
sbb
push
dec
xchg
lcall
test
xor
xor
sbb
inc
adc
sub
mov
mov
loopne
mulb
jns
push
fildl
xchg
fwait
repz
cmp
jmp
lods
cld
add
jns
jbe
stos
adc
repz
pop
mov
mov
push
xchg
movsl
adc
sub
outsl
jbe
push
fcmovu
outsb
in
jl
popa
adc
das
inc
xor
jp
mov
mov
popf
adc
xchg
xor
fnstenv
inc
adc
adc
add
add
mov
or
sub
xor
mov
adc
sbb
mov
push
or
insl
cmpl
lods
sbb
mov
mov
dec
cmpsl
push
add
bound
xor
imul
ret
in
into
loopne
dec
inc
fimull
pop
jecxz
icebp
jae
cmpsb
roll
int3
cmp
jle
test
insb
push
addr16
imul
adc
and
jmp
cmc
xor
add
xchg
movsb
xor
push
mov
stos
push
xchg
add
in
arpl
fnclex
psrlw
subb
sub
sub
out
xor
jge
add
repnz
mov
ja
jl
out
ret
fists
mov
pop
test
dec
lock
xor
dec
mov
inc
dec
cmp
and
imul
ds
xlat
dec
int
test
add
push
mov
ss
xchg
loope
dec
xor
sbb
xor
jae
jge
push
fucom
cmp
stc
mov
mov
test
pop
push
ror
inc
sbbb
movsb
pop
lea
xor
inc
adc
insl
and
cs
mov
jb
mov
daa
xor
jbe
outsl
mov
push
pop
add
lcall
and
jne
adc
outsb
popf
sti
xchg
popl
cmp
fcoml
sbb
hlt
xchg
push
xlat
mov
xor
repnz
stos
xchg
sub
mov
stos
pop
imul
ror
test
dec
cld
xchg
xor
add
or
cmp
lea
cmpsl
pop
pop
fsub
mov
xor
xchg
xchg
jno
dec
mov
shlb
adc
adc
inc
add
hlt
loopne
iret
stos
rorb
icebp
mov
pop
jecxz
and
test
jp
imulb
lret
mov
in
aam
icebp
rclb
mov
out
push
mov
scas
sbb
fwait
inc
cmpsl
into
arpl
stc
in
inc
bound
rcll
outsb
add
xor
mov
into
cld
sbb
repnz
in
dec
inc
sub
dec
iret
cmp
cmc
xor
ret
mov
jmp
cltd
fldt
adc
lock
xchg
jns
mov
in
jg
out
dec
add
out
rcll
sahf
sti
mov
jo
imul
push
cmp
outsb
sbb
inc
pushf
imul
dec
or
test
lret
jno
ja
add
sub
fsubrp
stc
imul
fs
mov
mov
das
adc
push
jmp
push
cmpsl
scas
push
dec
sbb
dec
ljmp
shr
jns
stos
push
enter
mov
mov
jmp
addb
lahf
dec
cltd
test
xor
mov
cmp
xchg
ds
imul
pop
test
je
jno
xchg
mov
xchg
inc
sub
leave
mov
sarb
pop
mov
enter
rol
test
cmc
mov
insb
dec
outsl
mov
jmp
sub
sbb
add
mov
xor
nop
xchg
inc
into
clc
mov
jb
cmpsl
or
xchg
push
mov
push
lret
pop
lock
sub
rolb
mov
xchg
in
aas
cmp
and
mov
adc
js
add
pop
xlat
and
inc
aaa
fsubl
ss
pop
inc
mov
pop
jne
das
push
lds
std
sahf
jne
jo
mov
loopne
addr16
fcmovb
inc
inc
iret
xchg
and
add
popa
push
adc
dec
mov
cmpsl
lret
mov
dec
add
dec
mov
clc
mov
sub
sbb
addr16
and
lds
dec
fmuls
inc
out
roll
dec
iret
pop
xor
push
mov
add
testl
xor
dec
imul
add
in
mov
cwtl
xchg
icebp
in
cmpsl
ret
xchg
dec
pushf
lahf
mov
jne
push
mov
push
adc
aam
je
adc
dec
sbb
lahf
ja
fs
jae
ja
xor
cwtl
iret
ret
sub
movzwl
movsb
lods
sub
jle
inc
mov
inc
mov
jnp
in
arpl
ds
push
inc
dec
add
sbb
add
lcall
js
jns
mov
fwait
mov
pop
into
fnsave
pop
lock
shlb
test
xchg
stos
int
out
pop
rorb
sbb
mov
jnp
sbb
lods
lods
sbbl
pusha
orb
pop
aas
sbb
sahf
sub
mov
sbb
mov
push
iret
pop
dec
addb
jb
imul
mov
jne
cmp
ljmp
fidivl
shrb
xor
clc
inc
mov
jns
mov
or
push
lcall
mov
dec
shrd
or
sub
xchg
jecxz
sbb
bound
mov
imul
xchg
mov
lds
clc
dec
pop
nop
xchg
loop
scas
mov
adc
out
aam
in
out
inc
jmp
pop
jmp
push
inc
mov
jg
fucomip
ja,pn
std
sets
add
lcall
movsb
and
jb
mov
xlat
stos
xchg
popa
loope
ret
add
cmp
mov
cmpsb
aaa
cld
push
mov
cmpb
xor
mov
loope
outsb
adc
in
fisubrl
add
data16
es
cmc
cmp
scas
adc
pop
jl
adc
enter
stos
or
pop
jmp
pop
loopne
insl
xchg
push
test
call
cmpsb
push
cmpsl
xchg
addr16
stc
mov
inc
dec
imul
xchg
int3
scas
mov
mov
inc
push
or
imul
test
pop
add
enter
inc
mov
add
jno
and
jae
pop
dec
out
je
xor
jp
ret
test
adcl
fstp
das
outsl
es
sub
sub
jne
jbe
lahf
push
lds
icebp
fildl
aad
les
gs
jmp
add
dec
lock
dec
cltd
dec
inc
push
xchg
mov
scas
repz
mov
and
stc
sbb
ret
add
in
adc
mov
std
mov
pop
pop
insb
ljmp
mov
cmpsb
dec
in
mov
and
pop
adc
ljmp
sahf
inc
mov
mov
jecxz
icebp
jle
in
jmp
push
arpl
pop
push
push
je
in
jo
roll
dec
jle
shlb
mov
sub
adc
gs
jno
test
push
or
out
jbe
or
call
dec
xchg
insl
cmpsl
movsl
sahf
adc
adcb
lahf
jnp
outsl
iret
icebp
sarl
and
stos
in
inc
fistpll
xchg
push
aaa
aad
sub
scas
sub
nop
xor
push
ljmp
ja
popa
dec
sbb
lcall
hlt
popa
mov
push
int
sub
insl
in
aam
add
sbb
in
mov
add
jmp
add
mov
sbb
test
xorb
insb
add
dec
cmp
adc
mov
clc
mov
aas
int3
repnz
in
lea
xchg
dec
and
aad
cmp
adc
xor
test
push
cmc
sub
jl
leave
add
inc
stos
mov
in
sub
sahf
ficoml
xchg
inc
lds
leave
xchg
adc
or
mov
push
jb
testl
inc
sub
adc
sbb
scas
jle
dec
stos
xchg
loope
mov
lea
sbb
aas
fisttpll
addr16
pusha
and
in
int
sbb
bound
setl
test
dec
les
sub
mov
iret
loope
push
lds
xchg
push
lcall
pop
jnp
enter
mov
xor
js
pusha
std
pop
cld
mov
add
pop
sub
mov
add
adc
push
jge
loope
fimuls
into
cmp
dec
stc
mov
lds
jp
cmpsb
insl
and
arpl
jnp
cmp
xor
inc
lea
sub
sahf
cmc
xorl
lret
push
jbe
sub
jae
xor
incb
or
jo
mov
les
inc
sbb
jb
stos
sbb
xchg
fcomip
pushf
es
in
lret
ret
inc
pop
js
adcl
idivl
push
cmc
add
jl
inc
imul
push
ret
call
lock
push
lock
mov
cltd
sbb
gs
sbb
inc
adc
cli
aam
repz
sti
test
mov
mov
push
add
cld
mov
roll
mov
cltd
pusha
notb
mov
pop
aad
and
pushf
in
jne
out
cmp
scas
addr16
pminub
in
cmp
std
aam
fcomip
cmp
shl
cmpsb
shll
imul
or
add
cmp
dec
enter
push
jne
scas
das
aam
cmp
xchg
jbe
mov
xor
inc
mov
enter
sbb
xchg
push
push
ljmp
lret
fsubrs
mov
cmpsb
orb
lret
in
popa
gs
ljmp
push
push
stos
mov
mov
fisubs
lods
push
out
lods
rcl
pop
inc
cmp
loope
lds
popf
mov
mov
aaa
pop
lods
sahf
dec
pop
lcall
pop
movsl
fnsave
cli
outsl
xor
mov
pushf
bound
jmp
test
jnp
ja
mov
rclb
push
mov
aas
xor
rol
xchg
nop
imul
xchg
or
pop
js
stos
jbe
add
xchg
pop
or
fsubrl
mov
add
and
cli
mov
rclb
inc
inc
mov
push
adc
push
xchg
mov
jg
mov
icebp
sbb
outsb
cmpb
lods
mov
mov
mov
fimull
movsl
cmp
scas
push
sub
and
sarb
adc
mov
dec
jb
mov
int
mov
pusha
jne
cmc
jp
push
add
leave
adc
out
outsl
adc
outsl
xorb
xchg
hlt
sti
inc
push
test
lcall
pop
in
dec
inc
loop
cmp
inc
pop
testl
push
mov
rclb
lahf
out
ret
mov
out
adc
sub
jmp
adc
mov
mov
jnp
insl
inc
out
push
into
imul
dec
imul
ret
es
stc
es
adc
adc
pop
loope
call
mov
adc
into
pop
stc
test
xlat
pop
sub
stos
into
sub
mov
popa
and
sahf
push
push
mov
shr
inc
icebp
add
mov
iret
push
test
push
sbb
xor
xor
loopne
xchg
stos
addr16
sbb
xchg
cmp
mov
inc
jnp
fldcw
xor
add
and
push
push
shll
sbb
sub
sbb
xor
mov
mov
cmp
repnz
mov
push
icebp
inc
sbb
fstps
test
ret
addr16
adc
dec
cltd
cmpsl
xchg
inc
arpl
xchg
mov
std
jecxz
ss
pop
mov
jle
inc
jl
dec
fnstenv
into
scas
inc
inc
mov
iret
aam
mov
das
lock
mov
sub
aad
adc
scas
mov
fdiv
add
add
repnz
mov
mov
fucomi
pop
xchg
adc
jmp
xchg
mov
push
jge
and
or
movsb
dec
gs
leave
pop
add
jp
cmp
inc
jae
mov
xchg
sbb
xlat
cli
repz
cmp
sbbl
push
je
in
cmc
adc
icebp
je
dec
sub
mov
jbe
call
loopne
lea
shll
push
cwtl
xor
jno
std
mov
mov
iret
mov
idiv
sub
movsl
lret
pop
push
loop
push
lods
adc
das
out
cmp
mov
jg
sbb
cmp
ss
mov
push
fimull
xor
shl
dec
xchg
dec
test
sub
sub
sahf
cmpsb
out
push
mov
xchg
xor
nop
dec
imul
xorb
inc
outsl
push
sub
into
int3
xchg
mov
je
cmpps
jbe
mov
xchg
add
cmp
cmpsb
add
adc
cmpsl
jl
outsb
pop
aad
mul
popa
jge
js
fwait
out
cwtl
mov
adc
push
add
dec
icebp
scas
push
fnsave
hlt
pop
aas
cmp
stos
inc
mov
repnz
test
mov
mov
out
sbb
mov
and
jecxz
leave
xor
xor
outsl
lret
jecxz
leave
loop
cmp
int
xor
loop
jo
idivl
sti
cmp
fs
inc
jp
jne
xchg
xchg
adc
in
clc
fbld
rol
ret
push
and
jo
and
pop
and
and
fisubl
or
clc
test
das
paddusb
mov
add
scas
sbb
cmp
mov
adc
inc
add
mov
fimull
negb
dec
ljmp
mov
les
inc
adc
test
cmp
push
fsub
mov
jae
pusha
inc
xchg
fsts
mov
jmp
push
add
les
mov
or
xchg
rol
scas
inc
outsb
mov
in
faddl
movsl
mov
cmp
dec
or
shr
mov
and
cltd
sbb
or
in
icebp
leave
ljmp
mov
xlat
int
shll
rorb
push
mov
pop
jno
xor
aad
xor
imul
mov
lods
cmpsl
andl
and
push
leave
mov
jmp
fadds
popa
pminub
add
pop
stos
mov
adc
mov
push
sub
pop
out
rcr
insl
nop
sahf
jbe
inc
ds
dec
fcom
or
out
mov
sub
js
push
sub
pop
ret
xor
xor
out
rorl
sbb
test
mov
cmp
sbb
jno
inc
add
loopne
pop
test
ss
bound
loope
in
push
and
movsl
imul
int3
pop
jns
cmpsl
mov
popf
shl
inc
jle
sub
jge
cmp
dec
xor
data16
es
dec
xchg
or
out
dec
inc
dec
fisttps
hlt
sbb
jbe
xchg
test
fwait
add
movsl
arpl
mov
stos
stc
sahf
jl
xchg
jle
mulb
fcoml
ja
fwait
mov
fldl
sbb
mov
addr16
adc
jle
push
xorb
pop
push
mov
mov
mov
or
gs
push
movsb
pop
enter
push
jo
pop
push
sti
mov
jmp
push
cmp
xchg
add
adc
popa
push
cmp
push
sbb
jg,pt
jmp
and
es
mov
cmp
cmpsb
in
mov
push
aad
xor
scas
mov
xchg
or
dec
icebp
test
jg
mov
xchg
rsqrtps
dec
jge
outsb
bound
lods
mov
jbe
push
dec
jmp
cmp
lcall
fucomp
mov
imul
pop
ret
cmpsb
test
add
pop
xor
je
rorl
mov
fs
bound
test
sbb
adc
aas
jl
lock
mov
ja
add
lahf
shlb
pushf
outsl
mov
xor
cld
push
pop
push
sub
in
scas
or
imul
inc
pop
push
sub
into
push
jle,pn
xor
stc
jle
notb
cmpsb
push
pushf
inc
cmp
cmp
cmp
xchg
lds
nop
mov
or
sahf
pop
inc
test
xchg
orb
push
loope
xchg
fnstsw
mov
jp
push
and
push
lahf
in
scas
push
into
pop
jmp
dec
es
jno
xchg
imul
mov
outsl
cmp
out
lds
add
orb
xor
cmpsl
lock
mov
stos
in
jns
stc
fisttpll
mov
sub
sub
jg
mov
cmp
inc
orb
loopne
movsl
movsl
arpl
ss
cmp
jge
js
jp
adc
push
imul
xchg
in
clc
jg
mov
cmp
negb
gs
rolb
bound
dec
push
mov
fcmovnbe
loop
stos
cmp
repnz
add
push
sub
mov
add
jl
cs
mov
xchg
sbb
mov
xor
call
mov
pop
loope
jb
pop
xlat
lods
incl
inc
pop
nop
jge
repz
test
jno
jo
loope
lcall
shrl
mov
fisubrl
jp
scas
xchg
pushf
xchg
je
inc
mov
fdivrp
mov
and
ss
in
adc
and
fsubrs
hlt
popa
pop
aam
pushf
mov
shr
pop
stc
push
mov
push
cmpsl
fwait
stos
jle
mov
mov
dec
leave
sub
cld
push
cs
push
fistps
dec
pop
fisttpll
pop
icebp
aas
push
dec
out
hlt
pop
inc
nop
lret
dec
outsl
pop
dec
repz
mov
dec
cmovs
in
and
mov
sbb
inc
mov
movsb
cmp
inc
cmp
bound
cmp
fs
inc
xor
jg
push
insb
js
jp
adc
inc
repz
xchg
add
insl
popa
mov
push
xchg
push
loopne
daa
xor
fwait
mov
inc
cmp
aas
lcall
pusha
sbb
sbb
les
xchg
cmp
mov
cmp
or
in
dec
mov
jecxz
mov
jl
pop
push
inc
int
push
cwtl
fs
gs
fisttpll
xchg
out
test
imul
xor
lahf
lcall
cs
cmp
movsl
outsb
lods
jb
test
shrb
sbb
movsb
out
mov
test
dec
jge
mov
stc
lahf
cmp
xchg
sbb
sbb
les
fidivl
mov
sub
loop
sahf
pop
pop
hlt
jo
mov
pop
push
xchg
stos
insb
mov
stc
jp
and
jl
mov
cmp
scas
mov
shrb
push
in
sub
loope
xchg
les
mov
push
rorb
cmp
adc
insb
loop
loopne
pop
push
insb
cmp
mov
add
mov
rcll
push
fdivp
stos
pop
test
sub
sub
mov
and
arpl
ret
cltd
sbb
and
mov
mov
adc
and
pop
or
xchg
pop
test
lock
jp
lock
inc
adc
fisttps
mov
jae
mov
popa
xor
scas
cmp
or
bound
out
mov
aas
test
loope
roll
xchg
add
xchg
pop
insl
aaa
shr
or
lods
std
and
fsubs
cmp
mov
pop
test
mov
add
hlt
repnz
pop
xor
dec
ljmp
es
add
fdivrl
scas
push
cmp
sti
inc
or
in
push
jg
bound
push
xor
or
and
iret
jnp
stos
jno
sub
pop
jns
and
call
loopne
sub
cmp
xor
outsb
pop
dec
jo
adc
push
loopne
aaa
cmpsb
flds
popf
jge
jno
shrl
jle
adc
and
jae
andb
enter
stos
sub
mov
dec
or
mov
jne
adc
aas
lods
pop
mov
adc
cmp
sahf
test
mov
lret
arpl
add
ret
pop
dec
dec
xor
jge
adc
daa
xchg
shll
or
mov
xor
loope
mov
icebp
sub
add
ds
dec
mov
shrl
lds
push
shl
into
int
out
pop
loope
cltd
xchg
push
aam
adc
dec
data16
fildll
ljmp
jo
mov
cmc
arpl
std
lcall
jbe
pushf
cld
addr16
jmp
outsl
add
sbb
in
in
push
out
cmp
rcrl
lds
ds
jno
sub
ficoml
jge
daa
cmpsb
and
in
shrb
xchg
jbe
jo
mov
mov
push
pop
fwait
repz
movsl
add
xor
sbb
sbb
sahf
adc
sbb
jle
ds
xchg
fimuls
decl
fwait
jecxz
test
fwait
sahf
push
xor
mov
ret
and
ljmp
xchg
das
mov
add
loopne
inc
push
idivb
jns
xchg
mov
int3
into
jmp
sahf
outsl
repz
pop
sub
gs
mov
adc
push
in
andb
movsb
add
mov
rol
or
and
jns
pop
lods
jo
imul
and
adc
popf
and
jno
inc
add
inc
stos
cmp
or
xchg
dec
lds
aas
jbe
lcall
jno
inc
out
ret
iret
ret
in
pop
cmpsl
scas
jg
pop
xchg
leave
xchg
repz
stos
shll
popa
mov
jle
jge
cmp
sbb
pusha
dec
repnz
scas
and
cwtl
adcb
xchg
mov
fnsave
or
out
addr16
ss
xchg
cltd
fs
sbb
arpl
stos
adc
xchg
fistps
xchg
xor
inc
loope
add
jmp
movb
jg
cmpb
mov
loope
enter
mov
and
cwtl
addr16
into
and
stos
icebp
mov
aam
int3
push
loop
or
jg
mov
fiaddl
push
nop
jo
loope
test
aam
jno
sbb
mov
jae
dec
movsl
add
out
pop
cmc
pushf
lods
push
mov
lods
cmp
rclb
xchg
jecxz
add
push
or
mov
les
daa
sbb
inc
xor
jl
fisubrs
imul
inc
fs
xchg
pop
pop
or
and
cld
mov
cli
in
movsb
subl
push
ss
and
xchg
js
xchg
lds
dec
ret
jg
xor
shll
push
mov
cmc
lods
ss
pop
push
dec
ljmp
add
or
xor
and
jno
lods
clc
lcall
sub
xchg
outsb
xchg
popa
pop
pop
jnp
les
mov
loopne
pop
xchg
pop
pop
addr16
lcall
test
push
and
add
fwait
mov
std
dec
jecxz
adc
cmp
push
xchg
fldt
mov
insb
daa
mov
xchg
lock
es
cli
sahf
pushf
loop
std
fdivrp
push
call
fisubrs
cltd
jecxz
inc
pop
sarl
ljmp
xor
cwtl
xchg
lret
ret
cwtl
mov
pusha
xor
jmp
addr16
xchg
dec
sbb
inc
rolb
fwait
inc
push
in
cld
test
adc
jae
xor
into
dec
jb
call
ja
rol
cmp
adc
jo
cmp
call
ja
popa
adc
mov
gs
ret
pop
stos
shrb
jne
sbb
mov
test
stc
testl
inc
sbb
and
inc
not
pop
xchg
push
mov
pop
out
xor
fiadds
push
add
cld
lret
sbb
lret
add
in
mov
xor
and
inc
sbb
pop
cmp
lock
std
sub
dec
jo
pusha
out
fidivrs
mov
daa
fdivs
stc
lahf
daa
add
mov
repz
jle
mov
xchg
mov
and
test
shl
lock
stos
sub
jo
scas
ret
jbe
addb
ds
leave
outsl
mov
xchg
jp
andb
stos
jle
fistps
cmp
cmp
mov
scas
push
add
sub
aad
lret
clc
dec
ja
or
ret
int
inc
mov
scas
sbb
jmp
xor
mov
mov
cwtl
pop
adc
pop
adc
iret
mov
movsl
stos
and
jmp
or
pushf
clc
and
or
fcmovnb
push
jg
subb
push
sti
jmp
scas
mov
push
xor
sbb
xchg
cwtl
dec
lcall
fnsave
mov
sbb
jne
ds
mov
dec
push
xor
jl
mulb
test
lea
rcrl
rorb
cwtl
fdivrs
pop
jecxz
xchg
jae
xchg
cmp
fld
rolb
mov
je
idivl
daa
in
add
sub
ret
andb
dec
out
mov
pop
test
push
pop
inc
inc
out
xchg
jmp
mov
jmp
jecxz
or
stos
cltd
xor
add
jae
hlt
mov
dec
repz
inc
cmp
sub
and
mov
loop
in
outsl
je
test
je
and
push
mov
push
lret
cltd
jle
inc
dec
add
std
iret
cmpsb
push
lock
xchg
xor
in
inc
cmpsl
fucomp
cmp
std
add
xor
out
aad
mov
jb
and
inc
or
push
sbb
mov
or
sub
popf
ret
add
leave
int3
lret
push
mov
je
sbb
lods
outsl
cld
adc
int
scas
sub
push
xchg
xchg
fnstenv
adc
bound
pop
jo
xlat
fs
mov
neg
push
jg
jmp
pop
mov
sbb
cmp
mov
cmp
lds
dec
rolb
insl
pop
xchg
mov
in
lods
test
push
add
mov
inc
shll
or
fldcw
je
xor
sbb
pop
cmp
popl
out
scas
cli
jp
mov
push
out
mov
jl
push
test
fcomps
js
jg
pop
test
xor
ds
out
push
pushl
mov
cwtl
int3
rolb
sbb
int3
cmpsl
pop
aaa
popf
pop
lock
adc
pop
dec
push
jb
scas
cwtl
lret
xchg
fcomps
push
mov
mov
lahf
xchg
mov
jg
lds
aas
jnp
insl
lahf
mov
cli
clc
push
enter
mov
xchg
add
in
mov
negb
cmc
out
aas
scas
xor
pxor
dec
gs
inc
sti
idivl
sub
aam
jns
fimull
lea
testb
shlb
fldl
popa
es
mov
mov
data16
dec
cmpsb
sti
fdivp
stos
and
out
fildll
ds
scas
sti
adc
or
std
mov
ja
pop
je
out
add
jg
xchg
cs
dec
adc
loop
andb
arpl
ljmp
inc
imul
cmpsl
sarl
shlb
stc
scas
cmpsl
xchg
jecxz
repz
jp
mov
out
mov
xchg
gs
test
push
arpl
sbb
std
outsb
inc
inc
repz
cmp
push
dec
test
xor
dec
test
nop
iret
addr16
xchg
jae
insb
sbb
mov
xchg
sbb
cmp
and
imul
insl
shlb
faddl
insb
add
in
jmp
and
daa
sarl
outsl
mov
cmpsb
jp
xor
push
in
mov
hlt
push
pop
pop
push
dec
daa
ficoml
sub
pop
push
push
add
fs
adc
ljmp
test
inc
mov
pop
xor
dec
push
inc
lock
cmc
xchg
outsb
test
addr16
lret
je
pushf
cmpsb
pop
jecxz
movl
inc
leave
fcmovne
mov
mov
mov
in
sahf
inc
or
insl
push
push
mov
divl
stos
xchg
sti
dec
jecxz
push
ret
xor
dec
dec
xlat
outsb
out
cmp
imul
call
inc
aad
sbb
xlat
inc
mov
fsubrs
mov
movb
call
aam
scas
imul
and
addb
int3
fidivl
xchg
outsl
sbb
inc
ja
aad
mov
mov
leave
xor
repz
lahf
cmpsl
inc
sbb
in
xchg
stos
jp
imul
subb
and
adc
adc
push
rorl
cld
ret
incl
fisubrl
imul
adc
outsb
mov
add
std
mov
jo
add
into
imul
jns
cmp
lcall
xor
xor
mov
jno
xchg
adc
sub
divl
cs
push
jp
mov
xchg
jecxz
gs
xor
daa
scas
fs
fisttps
sti
dec
aam
mov
pushf
lcall
fstl
rcrl
mov
adc
sahf
push
sti
mov
sub
mov
sbb
mov
sbb
scas
lret
lock
jp
xlat
mov
and
sbb
xor
cmp
loopne
dec
mov
inc
cmp
stc
sahf
mov
stc
pop
jno
xor
add
sub
jmp
fcmovne
rcll
or
hlt
pop
dec
pop
mov
or
jecxz
mov
inc
jmp
or
jle
enter
or
daa
nop
xor
movsb
aam
out
fildl
repz
cmp
mov
mov
lcall
xor
mov
loop
sub
loop
test
push
not
jbe
ret
mov
pop
dec
mov
push
add
es
lret
adc
jge
mov
lods
in
and
in
clc
pop
into
push
fstpt
mov
and
adc
test
sbb
cmp
jne
mov
hlt
int
fwait
lea
jb
cmp
shlb
scas
mov
or
movsb
mov
add
adc
mov
inc
jg
add
sbb
inc
test
jecxz
fs
rclb
lds
hlt
lea
mov
pop
add
in
in
fyl2xp1
xor
cmc
das
sbb
inc
icebp
fwait
cwtl
mov
inc
aad
or
pop
pop
fstps
mov
mov
test
lods
rclb
sahf
pop
inc
pop
repz
jno
push
lret
xchg
aad
sti
sbb
mov
xor
loop
in
add
or
adcl
dec
pusha
and
adc
cmp
imul
and
pop
or
sahf
shl
out
sbb
cmp
add
mov
sub
stc
out
in
in
inc
xor
xor
mov
jbe
adc
xlat
lods
mov
pushf
in
fldcw
xchg
fisubrs
insb
scas
int
sahf
lret
leave
pop
and
fsub
mov
ret
inc
mov
out
enter
es
imul
cmpxchg
fmull
mov
cmpsl
sub
inc
fwait
gs
jge
or
mov
push
sub
jae
adc
adc
push
ret
add
es
loop
jg
sub
repnz
mov
xchg
push
mov
ds
pusha
cld
mov
subl
jno
lret
jnp
cli
filds
insl
int
jp
popf
sub
not
adc
stc
int3
ljmp
sti
pop
inc
or
adc
aas
cmpsb
cmpsb
dec
and
mov
adc
mov
and
fsubs
das
mov
adc
add
mov
inc
shrb
push
fcom
push
lods
or
imul
into
add
xor
sub
sub
div
or
mov
lods
shll
icebp
jns
fs
rcll
or
mov
push
xchg
xor
aam
test
add
fsubl
mov
in
push
mov
jns
lea
rolb
pushf
mov
pop
pop
test
int3
les
and
test
xor
adc
mov
jb
divl
gs
mov
push
cmpsl
mov
push
fdivr
pushf
or
cltd
dec
das
xchg
dec
call
sub
pushf
or
dec
sarl
push
inc
hlt
cli
add
dec
fcmovne
xor
sub
fisubl
adc
scas
adc
clc
adc
fimuls
lahf
lret
add
push
lret
cli
and
lods
test
bswap
scas
icebp
ret
pushf
cmpsb
adc
add
enter
das
int
popa
pop
jle
pop
movsl
mov
push
or
push
arpl
imul
jns
jno
jg
divl
cli
es
sbb
repz
mov
push
ret
out
mov
pop
xchg
enter
or
or
lea
mov
inc
mov
pop
rol
popa
ljmp
jp
fmulp
cld
push
imul
in
stos
js
mov
xor
nop
xlat
loopne
mov
enter
add
pop
out
leave
cltd
int3
xchg
push
pop
outsl
inc
cltd
inc
add
test
repz
jge
pushf
or
dec
mov
popa
jmp
cli
std
icebp
loop
pop
in
xchg
dec
aad
push
ret
loop
fildl
lods
fcoms
mov
lods
xor
maxss
stos
mov
int3
popf
pop
ret
mov
jl
push
int
scas
sahf
mov
aad
dec
push
cmp
leave
les
mov
hlt
jl
movups
icebp
push
scas
add
in
mov
testl
push
push
test
into
cmp
test
or
jnp
pusha
cmp
loope
or
daa
inc
sarb
cmp
sbb
shll
inc
mov
fnstcw
jg
push
int3
mov
or
pop
xchg
dec
jp
cmp
xchg
int
xlat
aas
leave
nop
or
xor
jmp
cmp
and
dec
and
xchg
rcr
cmpsb
jge
negl
mov
xchg
pop
and
fdivr
push
dec
xor
push
out
mov
or
jmp
xchg
mov
shlb
pop
sbb
inc
aaa
mov
and
jl
icebp
sub
dec
in
ljmp
inc
mov
lret
and
out
push
jns
popa
and
ds
pop
push
es
cmp
std
nop
insl
outsb
mov
and
pop
loop
fmul
in
pop
imul
adc
cmpsb
add
nop
fcomps
xchg
mov
je
mov
inc
xlat
push
clc
and
sub
adc
mov
inc
lahf
xchg
mov
mov
pusha
aad
inc
cwtl
pop
cmp
icebp
pop
lcall
je
pop
xchg
in
xchg
daa
mov
aaa
push
mov
outsl
clc
movsb
je
pop
mov
push
je
mov
arpl
jecxz
jnp
jl
ffreep
inc
je
xor
cmp
js
adc
dec
outsl
mov
cbtw
imul
pushw
jmp
cmpsl
test
sub
popf
jnp
fdivr
out
push
test
sarb
cmp
ss
data16
sub
and
imul
xchg
cmp
pushf
in
loope
loope
xchg
push
loop
jecxz
cwtl
pop
sbb
subb
dec
insb
add
xchg
movsb
inc
pop
ret
jnp
mov
jb
stos
mov
imul
sub
out
scas
icebp
rorl
out
or
or
pop
mov
aam
fcomps
mov
lock
or
xchg
ror
sbb
insl
mov
lret
loop
or
inc
xchg
pushf
or
sub
mov
fstpt
js
cwtl
fwait
loope
jno
in
push
push
jmp
mov
xchg
or
pop
pop
sbb
mov
daa
push
sahf
mov
mov
xor
pusha
adc
dec
xor
das
jnp
cmpsl
fdivrs
and
popa
mov
pop
pop
repnz
shl
aaa
lret
push
inc
sub
cli
shrl
out
aad
jne
xor
out
cmc
push
push
push
lahf
pop
and
mov
mov
inc
lds
arpl
jmp
cmp
adc
or
shl
insl
jb
mov
scas
push
cltd
mov
std
dec
call
leave
xchg
push
bound
mov
and
adc
dec
mov
adc
leave
adc
dec
mov
add
cld
xchg
mov
add
repz
fstl
mov
xchg
add
push
cmp
shrb
cmp
jecxz
xor
adc
aam
xchg
js
cs
mov
push
lret
xor
jno
sbb
pop
mov
jbe
leave
stos
je
iret
push
daa
dec
das
rcrb
push
pop
xchg
lods
dec
adc
xor
mov
mov
inc
sub
addr16
addl
dec
rcrb
cwtl
and
jno
icebp
mov
gs
xor
add
fldcw
out
lret
lds
pop
mov
shlb
pop
enter
sahf
inc
cmp
int3
in
xchg
ds
movsl
pop
cli
push
out
sbb
mov
pop
roll
fcmovnb
jnp
rcrl
or
aaa
jno
jge
aam
movsl
nop
shlb
push
fmul
inc
stos
push
inc
sub
fbld
out
daa
cld
loopne
ja
adc
ds
cmp
es
mov
and
jge
notb
stos
mov
sbb
mov
jbe
xor
enter
pop
insl
ss
lcall
adc
fucomip
pop
loopne
mov
push
add
and
and
sbb
lret
test
or
aam
sbbl
mov
mov
dec
cmpsb
mov
jns
rolb
mulb
pop
out
or
mov
jae
xor
sub
movsb
mov
aaa
test
rcl
jno
adc
pop
cltd
pop
pusha
push
es
push
fmuls
pop
add
fdivr
ficoml
and
mov
inc
mov
icebp
push
hlt
jg
insb
loop
test
movb
sbb
and
xchg
cmp
add
cmp
adc
xor
add
mov
sub
xor
inc
push
or
and
gs
sub
mov
rcl
sub
cmp
jl
aas
les
sbb
mov
hlt
data16
popf
add
mul
xchg
in
xchg
mov
hlt
mov
nop
mov
pop
push
mov
lret
mov
sbb
int
pop
mov
fimuls
stos
cmp
xor
mov
dec
inc
push
fyl2xp1
push
mov
pusha
mov
in
loop
pop
cli
adc
adc
into
xor
cmp
dec
adc
out
or
scas
sub
dec
mov
xchg
scas
push
mov
in
cmp
mov
icebp
add
shll
iret
or
cmpsb
out
xor
dec
sbb
jmp
call
movsb
push
int3
sbb
sarl
cltd
jo
outsl
xchg
sub
add
jns
mov
jns
jno
or
mov
add
outsl
and
pop
daa
sbb
lret
mov
imul
jno
jb
xchg
mov
stos
adc
and
bound
pop
addr16
adc
or
ja
insb
xchg
lcall
rorl
xor
add
mov
xor
pop
mov
and
jae
mov
cmp
push
pop
pusha
ljmp
repz
xrstors
push
pusha
push
daa
jno
jo
pushf
stos
adc
pop
push
shlb
push
leave
inc
gs
orl
push
shrb
push
movsb
fldl
call
sti
dec
lds
daa
pusha
mov
dec
sbb
sub
sbb
jne
lcall
and
inc
rcrb
int3
xchg
insl
mov
mov
xor
push
inc
mov
stos
repnz
dec
inc
fs
jl
add
test
popa
mov
mov
int
fdivl
jo
sbb
out
push
jecxz
mov
call
xchg
outsl
bound
hlt
sbb
mov
pop
addr16
fsubr
popf
adc
mov
pushf
jbe
cltd
rcll
xor
cmc
mov
and
mov
lds
hlt
in
xor
mov
loop
or
dec
adc
jo
sbb
nop
in
stos
cmp
je
or
sub
ja
test
lahf
mov
imul
scas
dec
dec
sbb
sub
cmp
pop
int3
push
jge
or
fs
or
movsl
xor
gs
fnstsw
les
cmp
mov
mov
inc
test
addb
jno
orb
lcall
in
cmp
test
popa
add
push
push
adc
xchg
adc
js
jo
inc
ds
cs
jae
fcmovu
xor
data16
repz
jae
mov
scas
sar
or
dec
inc
ja
jmp
rorb
cmp
mov
nop
in
je
lret
push
cmp
stos
fildll
dec
pop
in
loopne
or
xor
xor
mov
xchg
into
fdivrl
xchg
in
push
js
and
invd
stc
mov
jnp
cmp
sub
cmpsl
iret
outsl
les
cltd
sbbl
mov
dec
xlat
cli
cmpsl
or
pop
les
sub
nop
pop
rorb
jns
mov
cmc
popf
in
jmp
sub
mov
pushl
js
mov
add
and
int
mov
push
divb
adc
push
lcall
subb
pushf
xchg
dec
mov
out
fwait
popa
xchg
inc
rcrl
push
add
es
jge
stos
jne
rcr
sub
add
in
and
ja
push
jle
adc
push
pop
movb
aad
push
outsl
data16
stos
add
and
arpl
out
adc
inc
testb
fwait
dec
out
jg
popl
fisubl
dec
sbb
mov
inc
push
lods
xchg
loop
adc
cmp
shlb
add
xor
cld
xor
jg
jae
fimull
jmp
adc
aaa
pusha
mov
cmp
fisubl
call
xor
xchg
mov
mov
test
push
adc
aas
xchg
adc
imull
pop
repz
cmpl
mov
sbb
shll
test
idiv
cmp
push
aam
cmp
mov
push
adc
push
jge
cli
add
ss
imul
cmp
ja
pop
sahf
aas
jle
shrb
pop
arpl
mov
fisubrs
dec
test
push
dec
cli
lds
outsb
pop
call
loopne
iret
and
mov
movsl
outsl
xchg
mov
call
mov
pop
xor
mov
iret
imul
in
sub
cli
in
sub
popf
fstps
dec
out
mulb
icebp
dec
frndint
dec
fwait
gs
mov
outsl
std
rorb
test
xchg
std
and
ret
push
movb
sahf
or
jp
stos
addr16
xor
dec
sub
xchg
xchg
cmpsl
movsb
das
arpl
xor
mov
cmp
daa
xor
push
test
pop
or
sbb
int3
sub
push
cmp
sahf
rolb
push
pop
into
xor
pop
enter
pop
and
lea
inc
fcomps
insl
mov
outsb
and
popa
cltd
or
mov
adc
pop
adc
js
sub
jns
mov
pop
arpl
xchg
pushf
pushf
loop
test
cs
jg
loop
jb
sahf
pop
lcall
nop
into
or
in
andb
cli
jmp
lret
movsl
cmp
inc
out
shll
mov
jl
cli
mov
ljmp
into
xor
xor
dec
frstor
xor
pushf
imul
inc
cmpsl
pop
sbb
dec
and
sbb
loopne
outsl
adc
ss
int3
add
pushf
jnp
dec
ljmp
push
bound
xor
pop
repnz
or
outsb
repnz
repz
mov
cmc
std
pop
and
xchg
xchg
daa
call
xchg
push
insb
aam
cmp
dec
out
int
mov
jae
adc
sub
mov
mov
sub
pop
test
mov
adc
jb
or
or
mov
dec
cmp
mov
notl
gs
into
mul
push
ret
ss
jle
imul
mov
pop
sbb
ja
mov
mov
dec
xchg
fstpl
jb
imul
and
pop
movsb
adc
not
ds
cmp
mov
dec
leave
or
jno
mov
adc
aam
ljmp
mov
mov
mov
inc
out
push
mov
push
mov
out
sti
cli
pop
loopne
xchg
repnz
outsl
xorb
lods
jno
push
lods
inc
movsb
and
clc
xor
pop
pop
mov
and
test
cmp
stos
inc
pop
cld
loope
add
lret
mov
js
dec
add
das
pusha
repz
fwait
or
dec
stc
mov
xchg
stos
xchg
cmp
inc
aad
lret
enter
jmp
xchg
cmpsl
lahf
push
adcb
lret
sarb
sub
and
cmp
sub
jle
cmc
xchg
enter
std
outsb
outsl
adc
pop
mov
decl
into
dec
cmp
mov
fidivs
jg
adc
shlb
in
pop
hlt
push
inc
cmp
add
outsb
jg
data16
mov
cmp
mov
int3
std
mov
mov
mov
mov
xchg
push
rorl
scas
push
add
nop
dec
jno
push
mov
push
xchg
ss
cmp
sbb
xor
dec
fisttpll
cmp
add
mov
jb
push
icebp
mov
mov
data16
fiadds
jo
sti
nop
mov
shl
xor
mov
xor
test
cmp
dec
add
mov
hlt
icebp
mov
mov
push
mov
outsb
pop
mov
adc
push
popa
xchg
aaa
push
popa
lods
adc
or
mov
jge
push
shr
push
pop
and
and
pop
sub
cmpl
mov
sbb
mov
ror
push
je
xchg
sahf
mov
push
out
sub
mov
pop
divl
scas
ja
mov
mov
inc
mov
das
and
test
loop
xor
jne
jae
mov
mov
enter
imul
pusha
push
cwtl
das
lods
repnz
mov
adc
jp
fidivrl
andb
jo
add
push
in
call
cmp
jp
outsb
push
lods
or
fimuls
mov
test
xchg
fldenv
xlat
mov
or
std
subl
out
mov
loopne
fsubl
pop
sarb
rorl
push
jmp
test
jl
andl
cwtl
pop
xorl
int3
popf
xchg
cld
stos
push
int
mov
sub
cmp
push
inc
es
clc
adcb
mov
imulb
push
push
cmp
outsb
outsb
loopne
adc
pop
in
hlt
pop
fwait
in
test
bound
les
ret
mov
xor
repnz
add
or
sbb
rcll
cmp
test
add
or
jnp
fidivs
mov
xchg
dec
inc
cld
movb
xchg
mov
notb
mov
sbbb
pop
mov
movsl
negl
mov
sbb
test
jmp
out
pop
or
repnz
xlat
jle
inc
fucom
test
add
fstl
pop
add
jl
pushf
test
test
cmc
jb
stc
or
pop
insb
and
pop
lret
mov
inc
jl
push
xchg
adc
dec
ficomps
outsb
mov
out
clc
mov
xor
xchg
add
scas
lret
cmp
and
xchg
or
push
mov
leave
mov
or
js
inc
mov
cli
mov
fmuls
vmovdqu
xchg
mov
ret
loope
add
adc
xor
mov
stc
mov
mov
test
mov
bt
cmpsb
dec
outsb
jbe
ret
xchg
adc
sbb
push
iret
mov
cmp
and
aaa
flds
popf
push
xchg
inc
faddl
add
mov
xchg
inc
insb
push
aaa
mov
jne
add
cmp
ret
and
dec
lea
xor
xlat
mov
xchg
dec
adc
inc
aad
and
aas
adc
loope
sahf
inc
pop
in
fdivrs
fwait
sarl
jbe
daa
leave
je
ja
inc
jg
lahf
sbb
inc
movsl
jecxz
and
shrl
fdivrl
xor
cmp
mov
cmc
pop
jbe
enter
or
and
clc
push
add
pop
xor
shll
xor
notb
mov
cmpsl
xor
sbb
inc
pop
adcl
aam
filds
sub
js
push
lds
mov
test
ficoml
sbbb
int3
xchg
xchg
dec
cmp
cs
pop
dec
jg
and
sti
and
lds
and
addr16
dec
dec
cmp
adc
clc
sarl
jnp
mov
pop
shll
mov
stos
add
xchg
adc
cmp
std
ss
enter
push
push
call
lahf
std
jne
sub
mov
mov
or
icebp
mov
adc
loopne
xor
or
sbbl
mov
ljmp
les
mov
hlt
lea
push
in
jo
incl
orl
cmp
xchg
pop
fidivl
in
pop
cmp
addr16
mov
ret
and
jl
xor
stos
ds
fs
test
xchg
stos
mov
ss
ret
push
fidivs
shlb
push
jle
xchg
dec
sub
loop
xor
cmc
jmp
aad
cmc
movsb
sti
pop
test
cld
pushf
fstpl
sbb
das
mov
sub
jns
pop
mov
or
sub
cmc
fcoms
pop
stc
push
xor
lds
jae
push
scas
push
inc
icebp
cmpl
fadds
jae
inc
inc
adc
adc
call
ja
stc
mov
addr16
pop
adc
push
cmpsb
cmp
in
mov
frstor
xchg
and
outsl
sahf
jae
ss
mov
or
sub
inc
in
push
add
pop
ret
mov
xor
fsub
pop
pop
xor
aas
sarl
jmp
stc
pushf
mov
scas
cltd
add
cmp
scas
push
ficompl
add
pop
pmaxsw
clc
sbb
cmp
pop
pushl
push
imul
pop
jne
inc
inc
cwtl
fcomp
pop
daa
test
inc
ret
dec
fst
inc
mov
push
fs
jp
mov
add
addr16
lret
out
ret
cmpl
fcompl
lods
xchg
jbe
loope
repnz
in
jmp
jecxz
xor
or
xchg
lret
jecxz
add
add
pop
mov
or
and
repz
and
xor
pop
mov
cltd
movsl
sub
decl
push
and
cld
jo
sbb
out
addr16
mov
mov
lahf
stos
xchg
sahf
rclb
and
fs
shlb
repz
xlat
dec
rol
imul
xor
jle
dec
aam
mov
mov
pop
jl
sub
push
inc
push
sub
or
push
mov
test
jecxz
xchg
inc
mov
sbb
lds
inc
fstp
xlat
fidivs
adc
out
xor
dec
shll
negb
into
pop
and
fnstcw
ret
push
push
xchg
xchg
loope
fwait
push
int3
xor
lahf
inc
xor
mov
int3
movsl
cmp
rorb
popf
jmp
add
gs
pop
sub
cs
mov
fcoml
add
mov
jo
imul
xor
testb
in
pop
inc
lahf
inc
adc
cmp
lock
jbe
sbb
daa
das
insb
sbb
stc
push
cwtl
dec
or
shr
pop
dec
ficompl
inc
mov
dec
mov
and
frstor
sbb
roll
cmp
cli
loopw
gs
pop
aad
mov
pop
jle
jge
jns
add
clc
enter
rcr
inc
test
je
and
divb
mov
test
roll
jmp
in
mov
outsl
in
mov
mov
dec
daa
push
cmp
cmp
out
jno
aaa
loopne
xchg
fistl
mov
out
mov
stos
mov
push
inc
xchg
jb
adc
mov
xor
mov
lods
mov
call
lods
sub
add
scas
inc
add
push
push
aas
pop
mov
dec
decb
rcrl
aam
out
push
ret
sbb
addr16
sub
out
xchg
cmp
adc
ficomps
or
jg
scas
and
incb
faddl
push
js
adc
push
imul
mov
push
into
mov
jo
ds
sbb
lret
iret
mov
xlat
fs
sbb
push
jmp
xor
ds
sub
mov
lds
pmuludq
jbe
inc
pop
push
cmp
test
rcrl
insl
shlb
lods
repz
xchg
and
mov
aad
push
sbb
and
imul
daa
sbb
push
sub
jle
enter
cmp
std
dec
stc
push
dec
mov
aaa
mov
jno
adc
xchg
mov
sti
imul
jne
imul
and
cmp
sub
cmp
or
jmp
int
jl
fnstenv
add
jb
push
fisttpl
jno
stos
mov
ds
push
or
sbb
into
jle
lcall
int3
xor
aam
dec
mov
ja
inc
xorb
push
push
push
mov
cmpsl
jmp
stos
jle
push
inc
pop
into
add
ljmp
or
cmc
pop
pop
mov
test
scas
xchg
pusha
aam
mov
int3
enter
cmc
xchg
fisubrl
jnp
mov
pop
mov
and
or
rorb
addl
push
jbe
out
sub
rcr
cmpsb
rclb
jecxz
pop
dec
mov
movsl
push
arpl
imul
std
rclb
adc
mov
cmp
inc
iret
iret
sbb
mov
ljmp
sbb
cld
pop
cli
jne
fsubs
cli
insl
ret
ret
ss
mov
nop
sbb
inc
jp
shll
adc
aaa
fwait
mov
clc
sbb
mov
cmc
mov
shlb
push
gs
mov
mov
cmp
lods
in
mov
sub
sub
inc
xchg
imul
dec
je
test
mov
scas
test
sub
cmpsb
push
xchg
add
sbb
decb
cmpsb
icebp
or
push
xchg
jns
incl
jbe
idivb
dec
in
lods
mov
cmc
ds
jp
push
imul
cmp
jmp
push
jns
add
int3
ret
mov
and
aaa
push
call
sub
xor
lods
gs
push
mov
mov
fistpl
repz
xchg
testl
fldcw
sbb
fidivl
push
aam
and
cmpsb
adc
xchg
and
pop
sub
dec
mov
fistpll
imul
arpl
and
pushf
jmp
stos
cs
lds
mov
inc
into
pop
leave
sbb
push
xor
stc
movl
mov
aaa
cmpsb
fidivl
inc
jns
xor
jns
clc
mov
fnstcw
xchg
outsl
into
pop
xchg
data16
push
mov
out
js
test
cld
push
xchg
or
or
pop
cltd
cmc
adc
mov
mov
sub
imul
xchg
iret
movsb
jb
push
jmp
cltd
mov
aaa
mov
out
dec
js
push
xchg
cltd
cmpsl
sbb
pop
test
rcr
in
cmpsl
nop
daa
mov
das
jp
dec
andl
rcl
andb
into
ss
popf
and
inc
ret
xchg
rcrl
xor
mov
mov
inc
aam
arpl
mov
outsb
pusha
repnz
flds
mov
aam
out
xchg
add
movsb
dec
mov
dec
jg
inc
adc
adcl
adc
sub
add
aad
fmull
mov
mov
xor
inc
mov
inc
push
and
outsl
leave
leave
inc
jmp
lods
aaa
adc
lods
or
clc
cmp
mov
decb
cmc
testb
ja
in
push
jl
cmp
shlb
pop
and
mov
stos
sub
lds
xchg
mov
xchg
mov
and
mov
add
mov
mov
cmp
out
pop
call
cmp
aam
xchg
test
xlat
pop
test
out
mov
xchg
cmp
js
call
push
sub
xchg
fisubrs
xor
push
push
mov
mov
ss
iret
repz
mov
mov
adc
pop
repz
jne
mov
aam
mov
out
jp
push
mov
aas
rorb
repnz
dec
in
mov
fdivrs
mov
mov
rolb
jbe
insb
aad
cmp
test
pop
dec
pop
in
and
in
or
outsl
push
fs
fwait
das
sub
je
enter
test
lods
bound
mov
xor
stc
stos
jmp
sbb
andb
and
cmp
sbb
mov
nop
lock
jp
nop
mov
pop
pop
sub
into
mov
cmp
add
fprem1
dec
test
adc
jae
scas
enter
lret
and
out
lock
dec
jl
inc
jo
ljmp
enter
inc
clc
mov
ja
fcmovbe
xchg
push
sarb
mov
inc
sbb
jg
movsw
rorb
lcall
cmp
outsl
nop
mov
cmp
dec
les
in
mov
cmp
aad
add
lea
and
mov
xchg
or
cmp
sti
call
ret
jmp
inc
xor
ret
sub
cmp
xchg
dec
or
lahf
jne
dec
cmc
and
dec
stos
or
out
sbbl
mov
push
mov
ror
mov
mov
das
ds
int3
cmpsb
out
fcomi
push
rol
call
int
xchg
inc
rolb
inc
jmp
jp
add
sub
addb
hlt
sahf
roll
outsl
mov
or
mov
push
mov
imul
inc
pop
push
xlat
out
shll
push
cmpsl
sahf
fists
cwtl
jl
xchg
ret
scas
push
aam
cmp
cmp
jmp
jno
imul
adc
pop
sbb
add
stos
push
fiadds
and
shrb
outsb
jmp
into
cmp
jp
fs
cmc
push
divb
xor
push
jg
push
fcompl
jno
xchg
pop
adc
mov
lods
and
out
sub
rcrb
sub
or
dec
nop
lods
aad
fistl
fisttpl
leave
je
push
ds
out
hlt
lock
es
pop
adc
xchg
cltd
pop
xchg
or
lods
out
dec
lods
adc
cwtl
testl
fdivrs
or
sub
and
cli
add
cs
fdivl
xchg
xchg
xchg
dec
fcomp
or
inc
sub
pop
imul
stos
test
mov
lods
repnz
xor
ds
and
xor
push
mov
pop
orb
sbbb
daa
sbb
sub
fwait
cmp
arpl
cmc
jne
lahf
imul
dec
stc
xorb
test
aad
mov
cli
test
scas
jp
jne
outsb
incb
pop
xor
cmovnp
daa
gs
xor
cld
movb
imul
dec
mov
subl
mov
insl
and
fdivrl
mov
dec
mov
ss
xchg
cmp
add
movsl
xchg
xor
jo
js
dec
ljmp
js
push
or
or
test
adc
mov
iret
pop
pop
aaa
sbb
int3
xchg
in
mov
mov
mov
pop
dec
mov
add
lahf
into
out
xor
mov
rcrl
push
xor
mov
shl
test
adcb
jp
jecxz
rclb
mov
xchg
adc
cmp
loope
lret
inc
push
mov
or
call
fmuls
test
aad
and
rorl
popf
fbld
push
es
outsb
sbb
mov
mov
dec
or
aaa
pop
and
rol
xor
and
xchg
or
push
mov
loopne
sti
jl
add
xchg
adc
push
call
jmp
dec
sbb
cmc
in
lret
and
dec
mov
mov
out
loopne
sbb
pop
dec
push
stc
mov
sub
or
add
in
push
into
dec
pop
inc
sub
push
add
outsb
xchg
pusha
mov
xchg
ss
jb
clc
jns
push
fbld
mov
adc
lds
inc
es
cmp
jmp
pop
test
sub
sub
xor
aas
adc
mov
mov
adc
stos
pop
or
fsubrp
out
pop
mov
ss
jb
push
icebp
cltd
jae
add
mov
inc
out
push
inc
call
cmpb
inc
sbb
and
jp
push
push
loopne
aas
pop
imul
pop
movsl
loopne
jl
sub
sub
data16
jl
push
dec
pop
inc
cmpsb
add
dec
jo
push
xchg
pop
dec
xchg
or
repz
repnz
or
push
out
dec
inc
ret
and
iret
xchg
and
mov
popa
cmp
lcall
lahf
dec
pop
enter
pop
add
mov
jp
inc
mov
loop
sub
and
mov
rorb
pop
stos
add
lret
iret
pusha
jns
orl
cli
stc
scas
fstps
jp
fsub
arpl
enter
pushf
mov
jae
lea
cmp
sub
test
test
fisubl
pop
decl
shll
aam
aam
dec
jmp
jmp
cmp
mov
int
jecxz
je
out
mov
mov
movsb
mov
scas
aaa
mov
lret
rcrl
xor
push
mov
ljmp
push
shrb
mov
sbbb
xchg
sahf
mov
leave
inc
or
std
inc
mov
cmp
shr
hlt
in
dec
lret
sar
lahf
insl
xorb
rorl
fsubrl
divl
es
xchg
les
pop
sti
add
clc
push
inc
lret
fists
mov
stos
mov
pop
sbb
jno
dec
or
ja
lods
test
imul
jp
sub
pop
pop
mov
xor
sbb
outsb
dec
cmc
test
dec
aaa
jp
xchg
pushf
jp
pop
roll
pop
inc
test
lods
pop
int
jl
cmp
in
add
xchg
sub
sub
scas
dec
mov
fstps
repnz
jae
push
jge
adc
jb,pt
dec
inc
mov
imulb
lea
add
rcrb
mov
sbb
cmp
mov
adc
stos
xchg
std
arpl
std
idivb
mov
rorb
pop
lods
cli
cmc
cmp
dec
adc
test
loop
adc
push
outsb
out
inc
xchg
push
mov
aas
das
add
test
and
and
inc
lcall
jb
pop
xor
adc
jne
scas
or
ficoml
dec
or
repz
mov
push
int
das
das
gs
jmp
sub
pop
nop
movsb
sbb
and
bound
pusha
add
or
push
ja
mov
adcl
popf
or
test
mov
popf
lock
inc
add
out
jns
mov
jbe
push
stos
adc
outsl
jnp
or
lahf
and
jecxz
inc
or
dec
mov
jnp
aad
cmp
fs
dec
jp
sub
push
rorl
jle
movsl
xor
imul
dec
push
sub
in
inc
arpl
stc
mov
mov
jl
cmpsb
out
sub
cwtl
cmp
sahf
insl
cmp
pop
cmc
push
sbb
xchg
pusha
lock
les
push
aaa
or
sahf
ret
div
mov
das
mov
add
ret
mov
fcomps
aas
pushl
mov
icebp
mov
sbb
xchg
in
cli
fcmove
mov
jecxz
enter
ret
movsb
aad
push
orb
lock
dec
or
pop
add
dec
sub
push
imul
in
lea
insl
lret
test
hlt
inc
popa
inc
lea
out
add
sbb
lahf
push
stos
mov
push
sbb
push
pop
andb
ret
movsl
and
add
xlat
pop
popf
push
mov
pop
or
arpl
test
movsb
pusha
fdivrs
jo
mov
sbb
out
sbb
mov
stc
jmp
jbe
and
test
or
sub
or
hlt
xor
hlt
adc
decl
jecxz
fsubs
cmc
mov
les
cmp
es
pop
and
in
andb
or
push
jge
push
xchg
lcall
mov
mov
mov
fs
rcr
mov
sbb
push
cwtl
adc
push
mov
and
sbb
xchg
mov
xchg
insl
repz
into
aam
pop
xchg
into
out
fcoml
mov
pop
and
dec
and
inc
mov
and
mov
mov
sub
cwtl
mov
sbb
test
lret
loope
add
andl
ret
mov
insb
jae
rcrl
lret
repz
adcl
mov
and
or
push
pop
sti
int
outsb
jno
mov
push
into
jns
and
and
pop
xlat
iret
push
dec
stos
xor
pop
push
xchg
mov
fistl
test
xchg
inc
rcrl
inc
lock
into
jno
addr16
sbb
je
sti
lods
cs
cli
jp
adc
ret
push
and
cmp
inc
popa
cmc
out
xlat
push
xchg
ja
mov
xchg
mov
mov
imul
cld
xchg
fs
fcmovnb
xchg
mov
dec
fs
and
ret
xchg
xor
jne
sbb
test
fistpll
add
loope
cmp
pusha
leave
lcall
pop
fnstenv
cltd
std
or
cltd
sbbb
dec
pop
dec
ret
xor
out
pusha
or
cmpsl
mov
loopne
adc
ret
fildll
jge
daa
loopne
cmp
pop
cli
push
push
add
mov
ja
lret
test
push
mov
clc
xchg
stc
outsb
xchg
sarl
les
lea
adc
stos
leave
adc
into
mov
fcmovne
les
inc
in
aam
xlat
jmp
inc
lock
mov
xchg
xchg
rcrl
sbb
int3
sbb
decl
lret
in
dec
cmp
outsb
or
movl
xor
shrl
or
pop
aad
std
and
sub
enter
adc
pop
add
loopne
leave
out
lds
and
sti
push
pop
sub
or
sub
jo
push
push
cmp
pop
pop
hlt
xor
cmovg
cld
or
jmp
sub
or
lret
ret
pop
pop
in
call
xchg
repnz
daa
inc
aam
adc
inc
adc
dec
test
mov
adc
mov
es
rcll
int3
jl
cmp
jae
nop
jnp
mov
jl
outsb
fldenv
mov
bound
clc
xor
sbb
cmp
or
mov
push
mov
daa
sbb
jecxz
inc
push
mov
aas
dec
xor
test
test
xchg
loop
aas
mov
xlat
cmpsb
lret
sub
stc
xlat
leave
mov
je
push
sahf
sub
pop
es
xor
stc
or
sub
jmp
ljmp
ds
mov
roll
or
mov
test
sar
xchg
pop
loopne
lock
lea
xchg
pop
push
outsb
insl
cmpsl
in
in
mov
mov
flds
push
cltd
add
adc
xor
ficoml
inc
xchg
movsb
fsubl
push
adc
in
adc
das
sbb
push
rolb
dec
inc
icebp
push
inc
shll
or
dec
int
or
jmp
sub
add
int3
inc
notb
std
push
dec
test
insb
stos
sub
repnz
pushl
sbb
add
add
pop
mov
aad
inc
sbb
fdecstp
mov
imul
fwait
adc
fcoml
jnp
sbb
lret
scas
mov
jmp
in
test
add
pop
mov
pusha
mov
push
scas
xchg
aam
imul
and
shrb
leave
test
mov
repz
ret
xor
lods
hlt
inc
in
mov
pop
es
vandps
imul
push
xor
inc
imul
jecxz
inc
xor
add
xchg
mov
push
popf
rcll
movsl
adc
sub
adc
adc
dec
aas
pop
pop
or
in
and
push
pop
jecxz
jmp
push
and
lock
movsb
fidivs
mov
sub
out
aas
jne
pop
jo
stc
pop
xlat
insl
sub
cmpl
push
push
push
cli
mov
mov
pusha
pop
lds
pusha
into
adc
ja
pop
test
and
movsb
outsl
sbb
mov
cld
sti
inc
test
or
shll
or
lret
lods
xorb
jnp
shrl
adc
mov
icebp
test
vshufps
cmp
jb
dec
pop
adc
lea
jnp
add
inc
sti
scas
dec
aam
xchg
call
mov
and
in
xor
cmp
mov
dec
movsl
mov
mov
xchg
loop
hlt
add
cmp
test
andl
add
pop
cmpxchg
std
mov
and
sub
aam
or
lods
push
dec
rcll
rclb
dec
or
mov
movsl
mov
push
sbb
push
jg
jb
call
frstor
ret
inc
cmp
ja
int3
mov
xorb
cmpsb
mov
pop
adc
mov
subl
push
adcb
mov
frstor
adc
fisubl
lods
inc
repz
xchg
mov
fwait
push
sbb
cmp
cs
cld
pop
incb
mov
pusha
jg
ja
jmp
mov
cmp
movsb
scas
loop
fimuls
out
in
cmpsb
fstps
movsb
xlat
and
aad
sbb
mov
pop
sbb
inc
imul
xor
ret
out
aad
hlt
out
mov
dec
sbb
gs
jne
pop
inc
movsb
xor
aad
xchg
ret
in
jge
lcall
and
sbb
inc
cmpl
testb
lcall
and
ja
inc
shll
push
out
and
movsb
jae
xchg
fwait
or
sbb
enter
or
cs
push
mov
jne
pop
mov
iret
inc
negl
push
outsb
call
xchg
xor
in
inc
insb
lock
repz
lea
push
dec
movsl
lods
imul
xchg
cmpsl
enter
xchg
insl
mov
push
dec
pop
inc
mov
xor
sub
push
push
aas
dec
adc
inc
stos
jno
cmpsb
aad
stos
add
add
iret
repz
je
cld
iret
jo
adc
dec
adc
into
inc
aaa
mov
daa
cs
dec
mov
or
and
xor
mov
ljmp
clc
mov
adc
in
push
arpl
add
das
out
hlt
jno
stos
js
mov
jge
mov
mov
or
stos
push
pop
lock
xor
mov
mov
mov
xchg
cmp
loope
call
test
xorb
add
push
mov
push
scas
inc
inc
enter
add
insl
inc
inc
cmp
adc
out
push
adc
mov
jnp
xor
adc
add
incl
dec
cld
add
fimuls
int
scas
sub
std
lcall
jmp
jne
adc
outsb
sti
scas
jo
scas
enter
hlt
dec
add
loop
sbb
filds
movsl
jle
inc
or
mov
mov
or
movsl
daa
shrl
sbb
shrl
aaa
mov
push
test
jne
xchg
mov
mov
fsubs
pop
xor
imul
aaa
push
and
fcompl
movzbl
nop
outsl
call
mov
and
sbb
mov
mov
out
in
cwtl
push
inc
adc
add
mov
es
or
ljmp
sbbb
pop
inc
jns
sbb
inc
test
or
mov
pop
jl
shlb
jne
adc
jmp
outsl
outsb
mov
movsb
icebp
pop
add
xlat
in
dec
int3
popf
fstps
out
and
sub
lret
cmp
push
push
add
fmull
jbe
int
int
jecxz
jo
addb
cld
mov
jge
cmp
mov
jae
dec
pop
sarl
fistl
movb
loopne
ficompl
cs
inc
test
insl
cmc
ds
dec
lcall
jns
adc
scas
sub
push
loope
sbb
push
push
or
into
repnz
pop
cmp
jnp
fdivs
lods
cmc
dec
push
inc
add
aas
fstps
les
jne
mov
lret
mov
mov
lds
push
ss
stos
rcrb
adc
cmp
xchg
testb
cmp
push
outsb
movsl
xor
mov
or
dec
pop
push
ja
add
mov
xchg
cli
sub
sahf
cmp
popf
imul
adc
inc
das
or
cmpsb
inc
sub
dec
adc
sub
clc
inc
lahf
push
sub
jne
sti
cmpsl
gs
pushl
push
jo
and
sub
out
lods
push
mov
inc
inc
mov
cmp
jle
out
rcl
ja
test
inc
pop
insb
gs
loopne
jns
cmp
mov
mov
xchg
inc
gs
xchg
pop
xor
xor
outsl
cmp
dec
mov
in
leave
insb
mov
sub
dec
ret
pop
xchg
jno
sub
mov
and
das
pushf
jg
icebp
fyl2x
and
pushf
into
sub
mov
insl
mov
inc
out
sarb
jle
mov
popl
mov
bound
aam
push
les
fs
lds
sbb
sub
dec
jg
call
mov
dec
pusha
push
cmpsl
jmp
lds
dec
pop
mov
daa
jb
fiadds
sub
and
and
cmpsb
lret
call
dec
test
fcoml
in
aam
mov
or
jmp
fisubrs
push
rclb
shll
dec
out
int3
aad
lcall
or
xor
fisubrl
int3
in
xchg
stos
fistpl
repz
divb
mov
fisttpl
mov
adc
push
nop
push
push
or
push
je
jle
add
out
pop
popf
sbb
insl
cmp
xor
std
ret
dec
lcall
xlat
hlt
jg
ret
icebp
shll
data16
loope
fistl
push
ljmp
shll
xor
sbb
movsl
daa
jo
pop
aas
iret
mov
push
lods
das
movl
jnp
push
rcrl
es
jbe
imul
cmp
into
push
aas
sub
fstps
cmp
js
pop
call
mov
ffree
mov
std
cs
sub
cmp
or
testb
xchg
jmp
iret
xchg
fbld
push
add
pop
aas
fsubrl
mov
xlat
loop
mov
imul
xor
xchg
dec
cmp
call
fdivrp
loopne
xchg
into
push
pop
dec
mov
in
push
xlat
push
adc
add
adc
lcall
or
in
push
js
fwait
add
cmp
dec
and
fmulp
dec
andb
jmp
insb
lahf
lods
xchg
jmp
test
mov
int3
lcall
imul
leave
sti
in
je
jbe
push
in
fmull
in
imul
or
aam
mov
push
pushf
cmc
mov
inc
aaa
aad
ds
and
mov
std
jle
out
aad
push
mov
stos
insl
in
push
loope
and
lock
lahf
leave
push
imull
push
xchg
or
dec
adcb
js
ret
push
dec
ss
inc
pop
cltd
mov
int3
add
nop
dec
inc
xlat
jle
inc
sub
sti
cmpsb
outsl
push
jo
jbe
or
sbb
push
mov
lods
sub
mov
add
enter
scas
sti
push
push
test
shlb
ja
data16
out
xor
shl
mov
cmpsl
mov
pop
xor
add
lea
cmp
pop
movsl
jg
xchg
shl
mov
dec
sbb
aam
ljmp
out
in
rclb
fidivrs
jo
fsubrl
sub
add
addb
imul
fwait
jnp
jo
rcr
pop
in
pop
or
rcll
fs
fbstp
sub
mov
jp
push
scas
inc
sub
sub
inc
sahf
mov
add
xchg
sub
ret
daa
roll
sub
lahf
xchg
pop
or
or
cmp
in
xor
mov
cmp
pop
fsubrs
mov
adc
pop
pop
movsl
cltd
mov
mov
shll
mov
clc
push
cli
icebp
push
test
in
pop
jmp
push
push
mov
lds
dec
sub
pop
fdivl
xlat
imul
loope
ja
pop
inc
jb
fdivl
push
mov
ss
cmpl
loopne
sub
xchg
dec
iret
mov
mov
loop
je
or
sti
and
or
pop
inc
push
pop
arpl
jbe,pn
mov
dec
test
lahf
dec
mov
out
nop
stos
mov
mov
stos
ret
icebp
mov
sbb
adc
sbb
push
mov
jno
ret
loope
pop
jno
add
or
push
test
lahf
filds
mov
aaa
fisubl
mov
cmpsb
inc
je
xchg
sbb
inc
sub
pushf
fnstcw
lret
mov
add
andb
mov
dec
stc
push
and
jg
int
ret
mov
jmp
or
push
push
leave
dec
movsl
sub
fmull
int3
inc
call
repz
jb
cmp
daa
ret
push
repnz
cmp
insb
push
nop
xchg
pop
add
add
or
ret
dec
inc
les
clc
test
xor
aas
jo
call
scas
stc
aad
add
sub
sub
pop
xchg
and
jbe
ret
jecxz
mov
push
xchg
mov
and
ret
and
or
mov
or
push
mov
jecxz
lahf
cs
int
jp
adc
dec
xor
out
and
clc
inc
xchg
ret
mov
xlat
mov
stos
cmpsb
js
pop
mov
es
rolb
jmp
test
adc
and
inc
add
cmp
xchg
data16
and
mov
lods
aas
sbb
and
pop
fiaddl
mov
fistps
loope
popa
pop
push
nop
cmpsl
addr16
mov
push
push
jns
add
inc
cmp
aas
rcrl
sub
pop
pusha
and
scas
sbb
mov
and
or
sub
out
dec
or
out
repz
out
and
push
adc
das
mov
sub
inc
shl
fistpll
mov
cwtl
loope
or
xor
add
mov
jp
mov
push
ret
jns
mov
sbb
stc
push
ljmp
lcall
popf
adc
cmpsb
and
int
sbb
inc
jg
and
sbb
inc
cmpsl
sub
sub
test
insb
lcall
xor
incb
xchg
rcll
into
fdiv
push
shll
jns
in
scas
popa
insl
sbbb
movsl
fsub
cmc
dec
sub
movq
ss
xor
mov
int3
mov
lcall
js
addb
movsb
mov
mov
sub
icebp
loopne
cmp
les
clc
inc
or
aad
or
ds
adc
popa
mov
dec
mov
add
mov
aaa
cli
popf
pop
fs
push
repnz
loopne
jne
push
movsl
loopne
mov
and
xorb
frstor
lods
fadds
mov
popa
loope
out
notb
scas
aad
adc
insb
pop
cmp
sti
mov
andb
pop
jo
push
inc
fists
sub
imull
lods
jne
repnz
dec
cmp
adcb
sub
out
push
mov
sub
dec
inc
mov
ficomps
push
es
in
and
mov
mov
xor
data16
scas
jo
push
and
stc
adc
std
and
jecxz
shrb
jo
mov
or
mov
inc
mov
mov
scas
sub
divb
les
imul
xchg
mov
arpl
cmp
adc
sub
pusha
cld
cmpl
in
decb
add
frstor
das
rolb
push
jl
rorl
popa
mov
mov
fidivs
and
push
inc
adc
mov
jo
dec
cwtl
popf
xchg
sti
out
and
nop
jl
pop
adc
jle
cmpsb
loop
fnsave
add
lods
pop
xor
push
push
aaa
jge
jp
cmpsl
dec
mov
insl
mov
or
mov
in
sahf
jno
sbb
fcoms
sub
insb
fdivrp
lds
test
mov
pop
sub
pusha
les
out
outsb
add
pop
fistpll
cmpsl
fwait
out
cmp
hlt
mov
xchg
imul
sub
rcll
jmp
sbb
push
adc
xchg
inc
dec
cs
mov
imul
mov
popa
rorb
sbb
rcrb
mov
mov
cld
push
jo
xor
pop
push
sbb
pop
loop
sbb
dec
jmp
sbb
icebp
add
mov
add
push
add
lods
jo
ficomps
test
gs
jp
push
mov
movsl
test
xchg
insl
out
insb
lds
dec
push
dec
out
add
loop
mov
mov
leave
lods
dec
cmc
lds
test
les
mov
jno
jmp
pop
cwtl
and
ror
adc
je
pop
lds
and
xchg
in
cmp
and
dec
fdivr
lahf
mov
stc
aas
cli
and
fisttps
add
scas
mov
les
in
loope
ficoms
xor
or
dec
call
xchg
sarl
push
mov
movsl
and
xchg
test
jns
mov
test
clc
pop
outsl
divb
out
fwait
imul
inc
xor
jmp
stos
fwait
mov
adc
and
xlat
sub
push
into
dec
sbb
jo
jg
xchg
jnp
data16
pop
in
mov
fldcw
pop
fsubl
in
repz
jp
jnp
lods
lret
stos
lods
pop
jecxz
cwtl
cmpsb
cs
fucomip
aaa
cmpsb
movsb
repnz
movsb
mov
fsub
les
or
add
sbb
push
std
mov
inc
mov
add
push
stos
inc
push
dec
sub
push
sbb
leave
push
sarb
loop
arpl
fsubr
je
lods
dec
rolb
aam
xor
aad
cmpsb
icebp
pushf
sahf
lods
pop
jbe
adc
outsl
jns
mov
fcompl
xchg
sub
mov
adc
xchg
adcl
mov
adc
xor
dec
or
and
inc
outsb
mov
dec
and
add
mov
push
mov
cmpb
pop
pop
xchg
and
pop
sti
lret
pop
lods
das
cmp
sti
dec
pop
stc
aas
loopne
push
dec
push
int3
push
lcall
fs
jns
ficomps
out
sub
icebp
xchg
push
dec
cmp
adc
paddd
dec
pusha
xor
xchg
mov
ss
add
pop
jp
or
ficoms
scas
xchg
or
stc
test
xchg
dec
ret
fcom
adc
aaa
insb
pushf
sbbl
pop
call
imul
gs
sub
inc
sbbl
in
aaa
adc
sub
cltd
dec
cmpsb
movl
inc
add
cld
lcall
cmpsl
sbb
xchg
fidivrl
in
jno
cmp
aas
inc
idivl
add
enter
shlb
in
mov
pop
iret
repnz
fcom
je
xorl
add
pop
xor
xor
xor
adc
push
cmp
movsb
xchg
mov
adc
es
push
out
sar
std
sub
repz
adc
cmpsl
mov
inc
icebp
rol
mov
mov
packsswb
stos
iret
outsb
cld
dec
lds
mov
adc
pushf
leave
mov
arpl
bound
sbb
jns
dec
stos
pop
jl
shr
sub
mov
call
or
shll
dec
cwtl
xor
mov
jnp
iret
icebp
mov
test
leave
data16
hlt
add
xor
pop
adc
out
xor
cmp
mov
rcrl
roll
lret
call
subl
lret
cmp
sbbb
cld
loope
pcmpgtb
push
cmc
int3
in
mov
push
lea
sar
rol
dec
xor
lahf
or
test
ret
xchg
imul
xchg
iret
addb
sub
inc
mov
lea
icebp
cli
int3
imul
cld
or
or
fidivrl
pushf
push
cmp
pop
jb
leave
dec
clc
pop
test
push
test
cli
inc
push
sahf
test
inc
test
adc
test
leave
sbb
pop
je
push
lock
loope
pop
loope
dec
std
and
cli
xor
mov
scas
stos
inc
jo
mov
enter
push
mov
pop
data16
jo
sub
loope
mov
adc
out
fiadds
pushfw
sub
pop
insl
inc
cltd
xchg
adc
rorb
cmp
xor
mov
jnp
aad
push
test
mov
lahf
das
data16
mov
ljmp
lahf
andl
sbb
or
mov
lods
dec
or
jecxz
mov
mov
mov
imull
xor
out
cltd
repz
aas
dec
js
mov
push
insl
outsb
into
fwait
mov
or
adc
rclb
test
push
nop
mov
mov
mov
inc
mov
push
faddl
fdivl
inc
push
sbb
xlat
pusha
popf
in
clc
popf
imul
inc
jle
inc
jne
xor
dec
rcl
test
out
sbb
adc
out
test
jns
scas
xor
push
mov
dec
mov
push
pusha
sbb
rorl
movsb
sbb
mov
lds
pop
xor
xor
aas
aam
sarb
inc
jl
push
sub
icebp
insl
loopne
adc
das
jecxz
sub
xchg
add
into
test
add
adc
out
xchg
fmul
jmp
aam
or
pop
jl
gs
sub
sub
loope
xlat
adc
ds
push
stos
std
or
push
dec
dec
cmc
xor
dec
mov
xor
or
lock
mov
jg
xchg
popa
cmc
cmp
movd
negb
loop
ja
arpl
stos
pop
fstl
fistl
mov
test
test
test
pop
mov
ss
rcr
popa
in
int
cli
mov
mov
enter
out
cmc
adc
mov
inc
sti
mov
mov
inc
insb
push
movsb
fsubrs
and
fldl2e
loope
movups
add
bswap
aam
popf
cmp
mov
push
dec
stos
and
xor
out
mov
dec
push
xchg
leave
fstpl
popf
mov
shlb
sub
mov
cwtl
or
lahf
ret
adc
test
std
bound
in
mov
ds
decl
add
push
and
cmovne
mov
js
aad
xor
inc
jns
out
push
dec
xchg
jno
jnp
lcall
lahf
sbb
adc
cld
sbb
sbb
mov
mov
aad
stos
cmc
popa
push
cld
jg
out
lret
dec
and
fidivrl
push
and
mov
sbb
ljmp
loopne
xchg
jle
sub
addr16
xchg
loope
inc
je
and
push
or
pop
es
test
cmp
mov
ret
and
cmp
cli
adc
lret
cs
stos
jp
addl
out
mov
dec
ret
push
adc
fwait
mov
rclb
nop
push
jge
pop
pop
dec
push
lods
cmc
ja
std
dec
cld
dec
faddl
cwtl
inc
mov
mov
subl
pop
test
mov
lcall
inc
fidivl
fdivs
xchg
lcall
ds
add
stos
inc
jecxz
dec
xlat
ljmp
dec
sub
xacquire
dec
orl
ficompl
push
mov
imul
xchg
add
mov
ljmp
pushf
inc
mov
xchg
icebp
xlat
and
mov
jno
pushf
nop
xlat
fucomp
dec
aaa
mov
out
inc
cmpsb
sti
repz
cmpsb
push
cs
mov
jmp
insl
add
aad
xor
js
mov
pop
mov
mov
dec
or
orl
mov
push
fisubrs
shl
or
pusha
jecxz
data16
adc
out
mov
mov
xchg
idiv
bound
hlt
nop
pop
mov
and
and
gs
sar
push
insl
mov
std
mov
pop
cmp
arpl
scas
dec
andb
test
mov
mov
cli
popf
pop
aad
outsb
mov
mov
or
stc
cmp
mov
cmc
popa
dec
or
mov
dec
adc
mov
mov
jmp
sbb
mov
xor
mov
mov
int
outsl
dec
jb
stos
mov
fucomp
jg
mov
and
movsl
xchg
in
push
mov
cmp
and
xor
fmull
shrl
adc
cmp
mov
ret
mov
pop
xchg
xlat
out
ret
adc
aam
hlt
cmp
cmpsl
test
push
lret
xor
inc
fmul
mov
push
mov
lret
xchg
xor
push
fadds
mov
js
dec
test
lret
jno
div
pop
or
arpl
xlat
inc
nop
cmp
dec
lds
jno
ljmp
fimull
mov
xor
pop
push
ljmp
or
arpl
adc
adc
test
cmp
fimuls
mov
jne
into
mov
shlb
and
pop
pop
scas
jp
xlat
ljmp
lret
dec
inc
int
out
pop
outsb
pushf
cmp
jae
movsl
das
mov
pop
aam
cltd
and
jnp
xchg
jb
and
cmp
or
test
xchg
cli
movsb
lahf
sarl
push
push
mov
or
pop
adc
lea
aam
fcompl
xor
cmp
ret
lea
add
add
aam
addb
sar
push
or
das
lret
lret
mov
pop
shlb
pop
ds
adc
pop
adc
icebp
xchg
xchg
mov
push
movsb
fldl
icebp
inc
mov
push
lods
lret
shlb
into
xor
in
inc
out
imul
pop
mov
enter
xchg
pop
je
lret
js
daa
aad
adc
pop
or
pushf
clc
insl
jne
sarb
cli
loop
sahf
out
mov
aas
mulb
shl
cltd
xor
inc
ret
push
xchg
pop
cmp
sbb
stos
ret
fcmovnb
outsb
sar
bound
and
xor
mov
adc
testb
adcl
jl
mov
jl
or
popa
dec
fucomp
sub
add
adc
add
into
movsl
subb
nop
popf
shll
out
lret
push
lods
repz
sbb
pop
sbb
adc
stc
vshufps
and
ljmp
sarl
std
popf
loopne
mov
movsl
jp
outsl
stc
es
push
aas
jmp
out
mov
andl
cld
es
push
stc
push
pushf
mov
add
fiaddl
xor
aam
adc
les
adc
fsubrs
shll
test
mov
test
sbb
fstpl
xchg
into
fistpl
movsb
jge
test
scas
push
jno
lret
adc
jbe
mov
adc
stos
fcompl
pop
jne
pop
cld
pop
fisubl
push
stos
ss
adc
lock
mov
xorl
mov
in
sbb
or
or
inc
jmp
pop
aam
sub
mov
jae
nop
mov
xchg
scas
jnp
and
mov
inc
frstor
pop
out
cmp
sbb
into
lods
or
sbb
push
enter
and
sub
adcl
imull
jg
mov
in
dec
cmp
fsubs
and
fs
popf
jno
mov
xor
in
or
fildll
cmp
insl
cld
in
addr16
or
ret
xor
or
daa
les
rcrb
cmpsl
ss
or
push
fwait
xlat
dec
jnp
movb
xchg
ret
mov
dec
jbe
fimull
mov
pop
jb
cmp
insl
sbb
jl
popa
mov
pop
pop
inc
pop
xor
jae
fsubrp
xor
mov
daa
div
data16
shrb
xor
icebp
sub
push
dec
loope
adc
cmc
push
inc
xor
popl
dec
rcll
cltd
stos
fdivrs
xor
aad
sub
jp
test
mov
into
pusha
mov
test
popa
mov
cmpl
rorb
mov
mov
loop
cmpsl
cmc
or
lret
je
inc
mov
andl
push
mov
sub
imulb
test
jns
outsb
imul
mov
push
repz
add
je
push
cli
adc
adc
push
and
inc
adcl
jecxz
divb
pop
dec
stos
fiaddl
add
inc
mov
test
xchg
shll
test
in
cld
cld
adc
inc
xor
and
sbb
or
cli
cmpsb
inc
hlt
lods
jl
test
ds
popf
jo
pop
add
ficomps
mov
sbb
sbb
dec
lea
mov
nop
stc
bound
ror
cmp
cli
nop
mov
push
sub
mov
or
mov
jbe
call
cmp
test
mov
jecxz
mov
jmp
inc
mov
sti
fsubl
scas
subb
decl
fnsave
jb
cmp
loopne
iret
loop
push
loop
jns
lds
and
faddl
loopne
mov
scas
lods
pop
mov
cmp
xchg
push
dec
push
test
sub
movsl
cmp
sahf
aas
outsl
inc
mov
lds
push
jne
test
mov
lret
push
movsl
mov
jmp
sub
movsl
shrb
xor
mov
fdivrl
lret
or
addr16
xchg
sahf
call
jl
div
adc
add
dec
and
out
popf
enter
shlb
push
pop
mov
pop
cmpsb
pop
imul
xchg
mov
pop
aaa
push
mov
fdivl
mov
fwait
cmp
insl
cmp
add
pop
aad
push
push
mov
cld
mov
out
mov
ret
enter
xor
mov
push
jmp
cmp
in
cmp
sub
icebp
adc
out
or
or
mov
adc
fldenv
xchg
dec
test
push
xchg
jbe
push
jg
pop
jmp
hlt
enter
enter
das
cmpsl
sub
push
jecxz
mov
inc
icebp
mov
adcb
xor
adc
xchg
jbe
insb
out
out
cwtl
adcb
cmpsb
xchg
repnz
mov
ss
xorl
adc
cs
push
mov
js
rclb
insw
jbe
ret
xchg
jg
ret
jae
mov
lret
popa
inc
jle
jns
call
inc
push
cwtl
mov
mov
inc
push
insb
enter
mov
stos
mov
and
test
cwtl
dec
xor
mov
rorb
push
sub
jg
js
inc
cmp
sbb
add
pop
or
sbb
popa
mov
jns
repnz
add
adc
subb
add
push
cmpl
mov
mov
dec
xchg
mov
push
pop
loopne
dec
inc
shl
jecxz
and
mov
mov
mov
push
andl
or
mov
pop
rep
fadd
push
cmp
pop
fs
sub
dec
mov
mov
mov
adcb
movsl
insb
sub
push
imul
mov
mov
subb
repnz
mov
mov
and
mov
or
sbb
out
cwtl
in
sbb
jb
fsts
push
push
aas
aad
fistpll
lock
insl
adc
into
mov
dec
dec
pop
call
cmpsl
mov
je
push
loop
inc
pushf
lea
lcall
push
pop
xchg
add
lods
cmp
add
daa
adc
ds
addr16
insb
mov
pop
dec
push
and
dec
mov
add
mov
push
inc
xor
sbb
mov
popf
xbegin
jno
or
scas
cmpsb
pushf
shrl
divb
mov
sub
mov
loopne
sbb
sbb
push
ja
dec
push
frstor
jmp
jl
lahf
xlat
push
dec
imul
inc
iret
push
nop
dec
push
sub
mov
mov
les
pop
cvtpi2ps
inc
daa
outsb
es
les
daa
and
and
pusha
cmc
std
or
push
pop
add
insl
inc
xor
insb
das
scas
push
mov
adc
mov
push
mov
js
andl
xchg
mov
mov
ja
jb
stos
inc
roll
test
ret
mov
push
push
repz
mov
out
push
pop
rolb
jns
push
dec
mov
mov
arpl
test
sbb
mov
push
or
stos
mov
into
stos
mov
or
aam
push
inc
bnd
js
xchg
cmp
hlt
or
mov
out
lcall
lret
lret
push
jb
push
lcall
sahf
sub
popf
and
dec
and
jns
dec
lret
dec
sbb
insb
iret
shrl
mov
bound
mov
stc
mov
xchg
cmp
sarl
adcb
in
push
outsl
or
sub
xchg
js
lock
cwtl
inc
and
cmp
out
out
xor
in
inc
mov
iret
repz
lcall
hlt
push
aam
cmp
out
cld
ja
pushf
push
mov
dec
mov
roll
adc
pushf
xchg
movsb
xlat
aam
test
and
mov
jge
lods
pop
out
loop
lcall
aaa
adc
inc
je
pop
mov
adc
or
leave
push
xchg
push
addr16
push
ret
cmc
aaa
pop
fcoms
mov
dec
rcrb
mov
mov
les
push
add
dec
mov
stc
dec
outsl
in
inc
out
lahf
in
decb
sub
dec
sub
jp
test
adc
sbb
dec
adc
and
out
push
iret
jno
cmpsl
and
fwait
mov
xor
or
cltd
pop
jge
pop
shlb
lods
mov
xchg
sub
stos
add
jb
popf
jmp
lahf
pop
or
sub
mov
or
jl
pop
js
pop
jge
dec
ficompl
cmp
xor
mov
test
sbbl
pop
cmp
push
and
fs
stos
xor
xor
rol
mov
je
inc
outsb
mov
adc
push
or
sbb
fbld
xor
ljmp
je
push
lret
pushf
test
icebp
jb
xlat
bound
dec
outsl
and
scas
ret
mov
int
pop
negl
neg
mov
in
sub
test
push
dec
fimull
lods
in
in
test
sbb
cmpsb
push
push
call
push
out
iret
mov
or
inc
imul
push
je
mov
jecxz
mull
jmp
mov
test
lret
movsl
cmp
ss
enter
sub
jns
sub
sti
inc
bound
dec
pop
subl
pop
jnp
pushl
add
push
adc
imul
insb
mov
aaa
add
mov
sarl
loope
mov
xor
and
inc
icebp
jg
push
sbb
fsubrl
inc
mov
push
int3
push
adc
xchg
mov
aam
vmovshdup
mov
mov
out
data16
sbb
in
pushf
in
sub
adc
sahf
or
and
lock
push
jo
rolb
push
adcb
xor
arpl
test
mov
pinsrw
rcrl
inc
push
jno
mov
xchg
hlt
cmpsb
xchg
inc
aas
inc
test
jo
gs
scas
stc
ret
lea
or
dec
jbe
cmp
xor
pop
sbb
xor
sbb
and
rcll
in
divl
add
mov
inc
pop
add
shl
cld
mov
out
mov
xor
jg
gs
lret
jae
imul
mov
jp
or
sti
mov
or
test
lock
cmp
hlt
sbb
lock
adc
pop
add
push
fsubrl
call
cwtl
xor
ret
xchg
lcall
xchg
stos
pop
std
ret
mov
xchg
sub
inc
mov
and
imul
push
call
loope
repz
lods
outsl
dec
sbb
push
mov
xchg
mov
imull
nop
add
or
cmpsb
aad
cmp
loope
pop
out
rcr
ljmp
shll
push
lods
dec
repz
popa
lcall
xchg
jle
xor
sbb
jne
and
fwait
cmpsb
in
adc
add
pop
addr16
addl
jecxz
rclb
xor
mov
mov
loope
mov
cli
aaa
out
in
or
ja
inc
mov
clc
xchg
mov
lcall
inc
adc
pop
stos
xor
mov
pop
lcall
std
sub
and
inc
add
jl
inc
jg
push
sub
rcrl
sbb
xchg
mov
ss
mov
push
lret
mov
mov
shl
mov
pop
fdivp
stc
pop
imul
and
mov
movsl
arpl
daa
jns
out
or
cltd
sub
dec
stos
sub
fwait
arpl
frstor
push
repnz
ret
cmpb
sbb
jo
add
stc
das
mov
lods
cmc
sbb
test
push
add
jno
dec
out
cmp
sub
or
gs
xlat
cld
inc
dec
orl
jl
jge
stos
cmp
push
cld
lret
push
shlb
xchg
mov
pop
es
popa
sbb
cmpsb
ret
jb
xchg
mov
mov
adc
sbb
int
xor
and
xchg
fidivl
jle
test
pop
dec
stos
or
xchg
mov
test
shr
sbb
aas
movsl
in
nop
aad
jbe
aam
sub
stc
mov
fbld
cmp
mov
addr16
and
clc
mov
jbe
add
cmc
adc
stos
mov
movsb
mull
xchg
add
lods
xor
sarl
sbb
repnz
adc
push
mov
cmp
popl
pmullw
adc
mov
test
xchg
mov
fnsave
outsb
push
mov
push
push
sub
xchg
adc
es
pop
jl
es
and
cmpsb
xor
mov
xor
mov
or
jge
inc
dec
jne
icebp
pop
cs
mov
mov
mov
paddw
ja
push
loopne
andb
arpl
mov
scas
addb
pop
test
enter
mov
insl
test
lods
outsb
mov
out
push
flds
xor
in
push
test
sub
cmp
data16
push
xchg
test
pop
data16
sahf
xor
adc
fnsave
inc
fsubrl
sahf
jle
int
and
popf
out
xor
fldt
outsl
cs
cmp
add
call
cld
sub
push
inc
std
push
rol
into
mov
adc
jno
jne
popf
xchg
push
test
out
pop
push
xor
xchg
xacquire
enter
bound
cli
shrb
push
mov
xchg
pop
idivb
fwait
into
das
leave
jb
xor
jmp
pop
adc
call
das
xchg
stos
sbb
add
inc
aam
sbb
jl
fwait
lret
rorl
push
ficompl
rcll
mov
jo
mov
dec
in
test
iret
scas
icebp
inc
std
adc
sbb
inc
add
and
pop
mov
sbb
stc
mov
xor
dec
or
adc
repnz
xor
in
cli
push
enter
aaa
pushf
arpl
subps
outsl
lds
in
in
imul
xchg
fldl
leave
stos
jl
cmc
jae
fldl
sbb
mov
dec
add
cmpsb
sub
outsb
test
int3
push
lret
cmp
loope
daa
push
xchg
mov
xor
xchg
pop
lea
or
nop
ficoms
and
jae
and
jnp
rorb
jns
les
xor
or
cmp
mov
ret
iret
movsl
rcrl
lcall
cmp
call
stc
cli
and
sahf
movsl
inc
cmp
cmc
mov
sub
cmp
sub
and
mull
loop
jne
fcmove
jno
push
cltd
imul
int
mov
insb
cld
popf
sub
es
pop
addl
test
pop
call
call
mov
add
mov
lods
daa
dec
fisttps
push
jge
rorl
repnz
lods
cmp
je
int
dec
sbb
dec
lcall
mov
prefetch
jo
and
inc
jbe
fiadds
jmp
push
jns
loopne
or
xlat
lret
leave
cmp
pop
fiaddl
pop
xchg
loope
adc
dec
ljmp
out
cmp
xchg
sbb
sub
or
mov
std
sbb
in
out
cmp
test
aam
lcall
testl
mov
shrb
jmp
adc
fimull
sbb
clc
mull
imul
push
sub
jle
fsubl
mov
lret
aam
int
or
insl
shlb
push
sahf
cmp
mov
xchg
insb
add
mov
imul
lock
jo
daa
push
leave
mov
popa
push
rcll
pop
outsl
xor
hlt
std
jge
cltd
xchg
into
stc
xlat
mov
pop
add
lods
and
iret
movsb
in
pop
push
movsb
std
and
aaa
dec
lods
xor
shl
push
fnsave
adcl
jbe
xchg
push
add
icebp
or
stos
shlb
repnz
or
add
xchg
sahf
stc
pop
fucomip
hlt
sahf
xchg
or
sub
or
lods
clc
std
sbb
sbbl
pop
lcall
xor
jmp
cmc
inc
mov
jmp
inc
pop
mov
mov
jno
insl
sti
push
jns
lret
call
xor
xor
mov
adc
dec
sbb
test
mov
push
push
in
mov
imul
jae
and
mov
xor
into
mov
repz
stos
hlt
cmp
sbb
adc
pop
insb
push
pop
xor
xchg
leave
xchg
fcomps
or
or
sbb
mov
test
subl
mov
jg
pop
mov
cmp
jmp
fisttps
pop
shll
fsts
pop
inc
mov
dec
xchg
jge
jg
mov
leave
call
mov
data16
and
icebp
fcmovnb
test
mov
mov
sbb
out
ja
jns
xchg
mov
imull
test
jo
push
sub
sub
push
dec
stos
or
inc
sub
and
test
xchg
xchg
scas
mov
insl
pushf
push
aam
fcomip
out
add
mov
add
out
loope
mov
idiv
rclb
outsl
outsb
pop
sbb
push
add
nop
cmc
inc
in
imulb
dec
push
sub
les
int
data16
mov
push
stos
enter
int3
pop
imul
es
int3
jo
in
iret
dec
jne
dec
pushf
dec
xlat
in
sbb
mov
push
test
and
mov
test
out
mov
push
jnp
cmp
or
lcall
dec
js
addr16
jl
rcrb
inc
cmp
push
and
sbb
add
pop
jmp
mov
imul
pop
cli
pop
test
cmpsl
fmul
sahf
cmp
sub
stc
jp
mov
xor
cltd
mov
lret
add
inc
negl
inc
sbb
cmpb
cli
int3
pop
ret
push
or
cmp
in
xchg
stos
cs
xrelease
addr16
xchg
sbb
mov
inc
pusha
push
mov
scas
push
xchg
cs
fldt
adc
andb
rcl
jecxz
inc
outsb
stos
fincstp
cmp
xchg
jns
dec
iret
or
pop
fidivrs
or
or
jecxz
xchg
push
pop
xchg
test
xorl
sbb
stos
push
dec
int3
inc
cmp
inc
mov
pop
aad
mov
mov
xor
ss
movsl
sub
in
push
cmp
and
movl
jle
cmpb
aam
cmc
xor
fwait
or
push
cwtl
inc
cld
lds
sarb
addb
fidivs
cltd
dec
in
rorb
testl
icebp
in
sub
jg
jb
outsb
xchg
add
cmp
jne
shlb
ret
daa
rol
test
les
mov
jg
cmp
iret
out
das
cmpsb
mov
mov
mov
adc
imul
jnp
pop
rep
ss
stos
dec
idivb
mov
addl
data16
jbe
xchg
out
int3
pop
sbb
lret
pop
negl
stos
les
mov
repnz
dec
int3
stos
insb
mov
inc
jge
and
cs
mov
shlb
sub
xchg
repz
cmp
aas
jl
test
add
fcmovb
in
popa
mov
push
dec
pop
mov
add
enter
stc
and
jl
mov
repnz
clc
push
pusha
jbe
jo
mov
mov
sub
xor
fmuls
lcall
xchg
push
std
gs
pushl
xor
inc
ja
add
dec
mov
or
shlb
aaa
decl
imul
xchg
cmp
ss
ret
push
or
pushf
and
adc
xchg
push
xchg
movsl
mov
push
cmc
push
pusha
out
mov
testb
in
inc
mov
inc
sbb
int3
cmpsb
inc
mov
aam
adc
mov
iret
add
inc
ljmp
addr16
scas
cli
repz
mov
aaa
das
push
mov
mov
mov
ja
sbb
adcl
rorl
push
mov
scas
into
pushf
stc
jo
mov
sbb
add
out
sub
stos
adc
xor
pusha
leave
pop
pop
dec
sbb
ret
xchg
dec
sbb
sahf
call
mov
mov
and
jmp
push
icebp
mov
inc
aam
je
imul
mov
fyl2x
mov
pushf
xor
les
jno
lea
das
sbb
add
add
xchg
xor
notl
xor
sti
shll
lock
je
int3
pop
cwtl
inc
bound
xchg
in
and
push
mov
pop
into
fisttpll
clc
pop
mov
push
leave
dec
notl
out
mov
outsb
mov
pop
ljmp
sub
adc
shrl
inc
mov
push
scas
repz
push
ret
and
js
sbb
daa
push
mov
inc
push
sub
icebp
mov
ljmp
stos
mov
lret
jne
jle
jns
pop
or
dec
mov
push
inc
xchg
mov
stc
xor
or
dec
stos
sbb
cmpsb
push
push
sub
pusha
and
jmp
lds
fisubrs
pop
dec
hlt
stos
add
es
cmpsl
adc
ljmp
mov
imul
mov
iret
ja
flds
fwait
ds
sub
inc
in
jne
jnp
xchg
lahf
jo
daa
testb
mov
mov
jne
lds
xlat
in
scas
movsl
dec
pop
mov
scas
rclb
jb
adc
shl
xor
std
lret
das
or
jno
add
mov
inc
iret
dec
arpl
xor
in
adc
jmp
cld
test
xor
adc
dec
out
adc
xor
rcrl
cld
push
push
sahf
les
sahf
addr16
push
mov
mov
push
fs
test
inc
push
ss
pop
shl
int3
test
cld
jb
cltd
rcll
or
mov
icebp
mov
pop
dec
mull
cltd
jmp
test
push
cmp
pop
jae
loop
movsl
ja
or
cs
mov
xchg
sub
xchg
fisubs
clc
mov
push
push
dec
idivl
jecxz
pop
pop
cld
xor
dec
out
sub
add
lahf
pop
not
inc
test
xchg
inc
pop
aas
cld
or
jb
jecxz
mov
mov
cwtl
imul
adc
adc
test
popa
pop
add
push
or
pop
and
add
dec
jp
or
xchg
xor
fimull
cwtl
jbe
or
sub
push
adc
fildl
mov
iret
cmp
sub
fsubrs
and
int
aaa
sub
fsub
fadds
xchg
jmp
jp
jp
jnp
imul
mov
mov
sub
or
rcrl
mov
inc
aad
fistps
sbb
lret
rcrl
popf
sub
push
fbld
fxch
ja
ret
lret
adc
shr
mov
push
or
add
sub
ljmp
mov
inc
test
dec
arpl
xor
and
push
stos
mov
mov
in
mov
fisubl
movsb
mov
repz
jns
scas
loopne
call
mov
jae
xlat
lcall
dec
into
in
lret
out
lock
loop
inc
popf
pop
leave
sub
pop
xchg
add
add
jns
xor
mov
out
or
push
mov
sbb
dec
icebp
fcomip
jp
jb
out
loope
adc
pop
fimull
scas
mov
xor
dec
cmc
or
jae
or
pusha
arpl
mov
fmul
add
sbb
gs
clc
xchg
movsb
pop
cmp
cmp
mov
pop
cmp
sub
mov
loop
adc
shl
insl
sub
test
push
fistpl
ret
pop
iret
ds
sti
xor
dec
and
add
add
mov
cmpsl
jmp
fs
movsl
or
jecxz
imul
fbstp
add
add
jae
jecxz
mov
in
jmp
pop
cmpsl
push
jp
cmc
stos
and
dec
inc
int3
loopne
loop
fs
jb
sub
xchg
mul
mov
enter
pop
cmp
outsb
xchg
adc
test
fucom
dec
shr
js
fwait
adc
and
negb
repnz
xchg
lds
movsl
mov
mov
sti
add
sbb
and
faddl
xor
or
aas
cwtl
push
dec
xchg
or
mov
cmpsb
test
cs
fs
dec
mov
das
mov
mov
xor
mov
adc
enter
arpl
popl
icebp
and
cmp
mov
insl
lahf
daa
adc
inc
jae
push
ret
mov
iret
mov
lds
jbe
pop
mov
xorl
adc
and
cli
mov
fsubs
dec
mov
call
pop
movsl
sub
xor
cmp
enter
pop
testb
mov
jno
insl
sahf
mov
mov
rorb
jmp
push
arpl
jl
push
dec
js
cmp
pop
dec
dec
dec
out
inc
cwtl
mov
xor
cmp
mov
xor
push
xchg
int
int3
mov
repnz
iret
scas
js
sub
loopne
cmp
dec
xor
out
call
push
sbbb
push
and
push
push
daa
pusha
or
push
fimull
cmpsl
shl
fisttpl
mov
enter
dec
popa
lcall
inc
in
inc
lods
rol
ret
xor
test
mov
pusha
fiadds
inc
dec
sahf
cmc
ret
ljmp
pop
jmp
add
mov
imul
mov
cmpsl
mov
lret
cli
pop
mov
pusha
mov
or
lds
mov
das
mov
xchg
cmc
add
mov
mov
jmp
inc
mov
pusha
shl
mov
mov
push
sub
lret
dec
lock
adc
mov
and
cmpsl
fisubs
and
cwtl
jno
loop
push
inc
pop
mov
add
jns
pop
rcrl
clc
cmpsl
inc
lahf
div
inc
xchg
and
xor
sbb
cmp
addl
jb
das
adc
push
and
jp
mov
xchg
out
mov
push
lds
jo
xchg
pop
ds
pushf
mov
mov
dec
ljmp
inc
or
aas
stc
jg
in
in
pop
and
fidivrs
cmp
inc
sbb
jecxz
icebp
push
sbb
push
xchg
xchg
mov
or
xchg
add
and
outsb
xor
inc
loopne
sbb
xchg
jl
or
sbb
jbe
cli
push
xor
in
pop
xor
mov
mov
ret
and
lock
dec
sti
loope
xchg
movsb
jge
int
mov
inc
cwtl
cmp
shr
aas
xchg
dec
sahf
inc
sbb
fwait
sbb
icebp
push
push
scas
aam
or
sarb
gs
and
repz
fxch
stos
push
mov
sub
call
inc
fwait
subl
rorl
pop
lock
lret
imul
jmp
mov
test
add
cmp
xor
ds
and
pop
mov
mov
or
and
lock
push
adc
mov
add
les
fs
push
xchg
ljmp
cmp
popa
vmwrite
test
test
sub
xor
mov
ds
push
pop
addl
dec
or
insl
push
inc
cmpsl
add
xor
leave
iret
push
ret
mov
push
shlb
js
xchg
dec
nop
movsl
pop
out
out
in
mov
jbe
popa
sub
add
sbb
mov
loop
sub
flds
repnz
in
inc
jnp
xor
pop
iret
mov
xor
int
cmc
push
lds
out
movsb
outsb
cltd
xchg
xchg
mov
and
fcompl
dec
xor
inc
sbb
icebp
sub
hlt
mov
stos
inc
pop
mov
xchg
lods
push
popl
mov
jp
sbb
clc
xchg
shll
dec
xor
dec
push
mov
jnp
fucomi
cmp
mov
test
call
mov
cld
sub
enter
femms
xor
cmp
jge
out
jno
and
xorl
jmp
mov
test
inc
lods
sbb
push
inc
lds
lea
in
loope
bnd
jae
xchg
in
call
jp
cmp
fmull
cmpsb
xchg
mov
js
xchg
cmc
test
fs
fsubrs
ja
call
sub
inc
int3
inc
aam
outsl
mov
pop
data16
or
in
push
inc
pushf
call
mov
mov
xor
and
test
push
pop
rolb
mov
jp
das
mov
outsb
sbb
jne
inc
mov
sub
test
stos
cltd
test
jl
insb
out
js
jl
push
movsl
add
mov
pop
in
std
subb
mov
push
imull
ret
push
dec
cmp
jnp
test
adc
inc
push
sbb
add
mov
cmp
push
mov
sbb
cmp
popa
adc
imul
sub
jns
add
xchg
xor
and
xchg
testl
dec
or
orl
jecxz
xchg
mov
ja
xor
jno
inc
inc
xchg
rcrb
mov
dec
xor
adc
mov
gs
mov
test
lds
add
push
push
xchg
sbb
jl
jnp
insb
jb
popf
and
loop
repz
push
cmp
add
xchg
jl
aam
test
and
fcoml
enter
xor
xchg
pushf
jnp
aam
lock
in
loopne
sbb
jbe
add
sub
iret
fldcw
xrelease
inc
adc
fld
xchg
outsb
sub
iret
jno
sarb
enter
mov
addl
xchg
pop
not
sub
cmpsb
sbb
andb
iret
adc
int
subl
aaa
mov
andl
sbb
sbb
in
xor
dec
cmp
outsb
xor
das
or
sub
in
lret
push
mov
push
inc
aas
dec
pushf
frndint
xchg
jle
push
mov
outsb
and
fldl
ret
fwait
negb
pop
push
mov
pop
int
push
xchg
pushf
lret
push
jmp
dec
mov
arpl
pop
cmpsl
pop
cmpsb
sub
xor
cli
addr16
outsl
out
add
icebp
mov
mov
fimull
adc
or
je
jg
mov
cmp
push
adc
xchg
mov
hlt
incl
in
xor
stos
push
std
cli
adc
adc
push
js
jo
dec
push
popa
mov
add
imul
cld
pop
jle
pop
hlt
cmp
out
int3
push
outsl
add
mov
pop
mov
cltd
outsb
adc
js
into
xchg
sub
cmp
lea
ja
jb
xlat
sti
testl
and
insb
xchg
mov
pop
mov
in
clc
mov
ss
dec
cwtl
mov
push
adc
inc
and
rorl
hlt
jo
daa
mov
cltd
in
out
sub
mov
popa
sarb
pop
cmpsb
outsl
test
push
push
mov
test
cmp
and
cmp
stos
rcll
ss
push
movsb
gs
or
sbb
mov
imul
xchg
pop
xchg
sbb
dec
adc
pop
add
and
cmpsl
test
es
pop
insb
adc
jmp
call
test
jecxz
test
add
out
arpl
cmpl
push
fistl
ljmp
jmp
or
mov
jne
daa
out
mov
hlt
and
fsubrl
pop
jp
ret
test
nop
addr16
jo
daa
adc
rorl
mov
shld
mov
pop
imul
cmp
bnd
push
jnp
shll
mov
js
daa
mov
mov
add
adc
xchg
iret
xchg
jo
or
out
jge
mov
ja
xchg
inc
xchg
cs
pop
stos
sti
pop
mov
xor
out
les
loopne
push
fsubr
leave
pop
xor
adc
sub
dec
vpmuludq
jle
not
insl
sbb
mov
cmpb
or
jb
push
movsb
daa
lea
xchg
inc
cmp
roll
imul
gs
cld
test
inc
push
push
test
inc
loopne
mov
test
add
hlt
repz
mov
sar
std
arpl
pop
inc
jo
add
out
aam
out
testl
cmp
inc
arpl
ja
add
icebp
mov
insl
in
lret
push
stos
mov
daa
repz
cmpsl
pop
lahf
in
sahf
mov
insl
movsb
cmpsb
cmp
sbbl
mov
and
push
je
jne
mov
repnz
mov
sbb
ljmp
in
rcl
push
js
jg
hlt
push
fidivrl
js
loope
jb
scas
adc
or
and
fwait
xor
cwtl
bound
incl
test
dec
mov
nop
call
lret
xor
push
addb
ror
mov
adcb
push
in
leave
iret
sub
jmp
iret
inc
mov
xor
push
and
xor
pop
jne
mov
or
sub
mov
xor
das
adc
sub
cmp
push
inc
int
or
test
xor
mov
or
out
sbb
jg
push
ficoml
xor
sbb
movsb
outsl
sub
mov
mov
dec
rcrl
ds
jle
sbb
pop
sub
clc
stmxcsr
test
cmp
pushf
push
sbb
xchg
aas
mov
into
out
jnp
xchg
mov
leave
addr16
sub
mov
test
jne
test
sahf
stos
out
pop
hlt
xchg
ret
xor
gs
add
enter
fwait
sbb
icebp
pop
jnp
inc
jns
je
sarl
inc
and
fs
nop
cmovb
dec
clc
sub
insl
push
rcl
jo
mov
add
std
sub
mov
dec
insl
xchg
cs
stos
jge
xor
pop
dec
sub
jl
movl
cmpsb
jo
js
push
jge
sbb
pop
pop
mov
repnz
jl
mov
push
sahf
popf
push
insl
mov
mov
adc
pop
imul
pop
dec
ss
jle
cmpsl
add
push
mov
lret
adc
pushw
push
push
jmp
lahf
and
cmpsb
mov
jmp
out
cmp
mov
pop
dec
outsl
adc
es
inc
insl
mov
push
scas
rcrb
and
repz
and
dec
cmpsl
adc
pop
fnstsw
xor
jo
gs
inc
in
fiaddl
leave
add
adc
mov
repz
cmp
stos
jbe
and
inc
add
xlat
cmpsl
jns
jns
jge
mov
mov
nop
gs
mov
ficomps
or
sti
repz
out
jne
icebp
dec
mov
push
rorb
xorl
test
cmpsl
iret
jle
mov
push
fisttpll
xor
sbb
mov
push
jno
or
push
mov
pop
mov
jg
cs
addl
xchg
hlt
cli
xchg
inc
add
cmpsb
jns
push
loope
mov
add
push
mov
sti
test
je
and
mov
fs
inc
xchg
mov
mov
fiadds
xor
mov
adc
xchg
jno
xor
movsl
ret
lret
mov
les
ret
push
sbb
in
add
addb
stos
sbb
mov
int3
cmpsb
mov
push
into
xor
stos
mov
popf
loop
lret
cli
idivb
jnp
dec
pop
push
xchg
mov
enter
dec
icebp
mov
pop
andb
push
pusha
orl
mov
mov
jg
xchg
mov
das
inc
push
psubsb
xchg
int
aaa
out
inc
hlt
addr16
mov
sub
add
test
jne
pop
fst
xor
stos
and
pop
adc
mov
cli
mov
cmp
leave
sbb
xor
xorl
add
stc
aas
daa
xchg
jae
adc
subl
pop
inc
test
add
ds
xchg
jl
jne
sub
std
pop
and
notl
xor
inc
xorb
outsl
add
out
dec
jo
inc
icebp
data16
mov
imul
cmpsl
je
movsb
ret
dec
push
cmp
cmp
lods
or
clc
sahf
outsb
je
icebp
shl
mov
pop
mov
mov
out
ficomps
out
cmp
mov
jp
push
lahf
int3
lods
call
xlat
push
mov
add
fildl
movsb
std
xchg
xchg
cltd
mov
jne
mov
pop
adc
pop
or
mov
push
lods
jge
ficoms
push
mov
jno
cmc
pop
add
imul
inc
imul
movsb
out
sub
push
aam
jnp
fwait
ja
pusha
mov
inc
mov
xchg
add
daa
sbb
jo
mov
xor
int
lahf
pusha
jne
sbb
xchg
jmp
jno
decb
addb
lahf
das
mov
mov
xchg
imulb
rorl
fstps
es
ja
adc
pop
leave
push
inc
test
movsb
mov
pushf
cmpsl
std
sub
jae
es
leave
lcall
mov
loopne
mov
add
jmp
das
cmp
popf
lea
inc
in
xlat
and
mov
push
pop
mov
pusha
xchg
ss
dec
mov
adc
push
lea
movsb
xchg
add
mov
movntq
mov
leave
sbb
xor
cmp
jae
in
pop
dec
ret
out
mov
jo
sbb
add
xchg
inc
jle
pushf
mov
popf
outsl
mov
pop
popa
xor
add
jecxz
mov
insl
fmulp
les
inc
insl
arpl
insl
ss
mov
adc
push
mov
dec
insb
inc
stos
sbb
lds
sub
or
lock
push
adc
jle
lahf
push
push
jne
pop
data16
out
dec
mov
mov
insl
std
add
inc
push
filds
push
jne
dec
loope
aam
mov
subb
cmpb
pop
push
sahf
std
pop
push
jno
jae
fs
push
lret
pop
fwait
out
je
insl
sbb
push
iret
mov
sbb
outsb
push
jno
mov
les
popf
rol
clc
jae
ffree
xchg
into
in
dec
ret
push
mov
jbe
or
jnp
sbb
pushf
adc
add
clc
ds
fwait
jno
enter
lods
lahf
sub
lods
test
mov
jmp
mov
pusha
xor
push
call
and
out
jbe
push
dec
dec
inc
into
fwait
dec
adc
push
lods
mov
dec
out
dec
lret
sbb
loope
pop
sti
jne
ja
push
pop
movsb
push
addr16
xchg
stc
insl
out
imul
fmul
push
jae
mov
lds
cmpsl
lods
jno
pushf
adc
fsubp
jb
test
test
inc
jae
icebp
enter
subb
cli
fsubrs
out
push
xchg
repnz
mov
fs
insb
sahf
repz
adc
lods
mov
call
and
or
inc
pusha
add
popa
mov
es
pop
ficomps
loopw
jnp
repnz
faddl
pop
add
sarb
popl
or
bound
pop
stos
hlt
dec
dec
inc
push
into
dec
stos
cmp
dec
jecxz
mov
pusha
addr16
xchg
dec
cmp
aam
cs
adc
mov
and
jl
mov
pop
dec
mov
sub
inc
lahf
mov
inc
mov
sbb
sub
mov
outsl
push
pop
xchg
out
fcoms
add
lcall
jo
cld
das
sub
xor
addr16
cmp
in
pop
inc
dec
push
int3
ss
add
out
pop
push
data16
jne
cltd
adc
popa
mov
push
enter
xchg
push
mov
and
gs
imulb
cmp
or
paddb
leave
arpl
test
jge
push
fists
mov
testb
les
and
shlb
or
pusha
test
int3
mov
inc
aaa
xchg
iret
int3
dec
cmc
mov
mov
mov
and
aam
xorl
xor
bound
sub
jno
lea
std
lret
shlb
cmp
jns
mov
adc
mov
data16
gs
pop
jge
push
mov
mov
loopne
mov
call
es
or
jbe
jmp
or
xor
cli
xchg
push
add
rolb
lcall
sub
loop
mov
in
nop
inc
xchg
mov
stos
jp
mov
movsb
jnp
add
cmpsb
scas
loopne
adc
lahf
push
adc
add
call
ret
mov
inc
ljmp
rorl
leave
pop
sbbb
adc
clc
pop
sub
out
xchg
shrb
mov
in
pusha
xor
and
push
or
scas
ljmp
push
mov
mov
andb
mov
sbb
ja
jbe
or
lods
jmp
adc
repnz
icebp
inc
cmp
inc
xchg
loop
lahf
jmp
loope
cmpsl
inc
adc
mov
hlt
dec
clc
nop
mov
test
ret
xorl
aam
mov
andb
xchg
mov
mov
mov
and
cs
push
add
mov
insb
mov
xchg
add
cmp
dec
je
stos
mov
ss
mov
dec
xchg
fstps
out
jnp
inc
mov
outsb
testl
pop
iret
add
add
cmp
mov
pop
sarb
pushf
add
arpl
push
arpl
mov
lods
std
push
inc
cltd
pop
inc
not
lret
or
cmpsl
xorb
and
and
and
iret
loopne
adc
shrl
pop
adc
aas
push
subl
lahf
fucomp
xchg
inc
insb
repz
add
push
out
scas
pop
repnz
add
dec
or
push
into
mov
jp
xchg
stc
out
repnz
jb
sbb
dec
into
mov
dec
sub
and
sub
cmpsl
xor
fwait
call
out
and
mov
ror
aam
mov
idiv
mov
and
inc
jns
stos
mov
dec
out
mov
sub
jnp
mov
cmc
lds
dec
mov
push
and
mov
stc
jns
lea
pop
jno
mov
iret
dec
lods
mov
stos
jo
ja
arpl
movl
and
mov
fs
cmc
stc
sub
sbb
inc
inc
mov
mov
mov
add
stc
dec
jg
scas
std
loop
int3
push
popf
pop
stos
dec
lret
setb
fbstp
ja
xchg
adc
test
mov
std
mov
sbb
jp
pop
pop
adc
push
aam
stc
stos
pop
stc
nop
loopne
lock
outsb
sarb
fstpt
test
out
cmp
pop
shr
mov
mov
les
sub
int
pop
mov
mov
push
out
lods
xchg
mov
sub
nop
pop
xchg
out
ret
loopne
inc
out
lret
psubusw
dec
push
stos
cmp
or
stc
add
adc
popf
mov
mov
jle
sub
loope
adc
cmp
cmp
pop
loop
nop
test
dec
out
cld
lret
into
cmp
or
roll
add
cli
hlt
fsubrs
jns
lds
sbb
leave
sub
mov
xchg
pop
outsb
sub
sub
or
jnp
or
pop
icebp
and
jl
mov
push
xchg
mov
mov
adc
push
iret
stos
cs
sar
jecxz
mov
add
mov
pop
shll
in
sub
add
into
and
lahf
mov
incl
ljmp
movsl
stc
mov
insl
mov
popl
fxch
ja
stos
js
mov
leave
maxps
sub
dec
mov
sub
outsb
rcl
push
fnstsw
sbb
mov
int
push
fdivrp
sbb
and
mov
add
pop
or
add
dec
mov
add
rcr
jmp
sub
stc
inc
xchg
ds
mov
testb
addr16
decb
popf
clc
mov
jnp
outsb
nop
fstpl
das
push
jno
pop
lahf
jo
jge
roll
repnz
cmc
insb
mov
sub
repnz
sub
mov
cmp
push
add
aaa
sub
dec
out
shrl
push
cli
popf
out
inc
jo
add
xchg
leave
dec
adc
aas
cmp
lock
cwtl
pop
imul
cmpl
bound
shrl
xchg
adc
sbbl
and
mov
out
lcall
jg
cmp
jge
movsb
pusha
in
xorl
in
loope
nop
mov
sbb
arpl
lret
cmp
aad
push
mov
mov
repz
mov
cli
mov
inc
ret
stc
inc
cwtl
push
loope
dec
mov
mov
int3
insb
pop
mov
out
inc
mov
std
jb
adc
dec
mov
adcl
ljmp
test
mov
jle
pushf
rorb
cmp
pop
insl
fmulp
mov
adc
iret
cmc
rorl
movl
push
inc
inc
filds
int3
adc
xchg
inc
dec
xchg
xor
flds
mov
movsb
cltd
rolb
outsb
fmull
jge
notl
mov
xor
fucomp
stos
push
push
lahf
fwait
test
sbb
jae
stos
leave
mulb
les
scas
addr16
lcall
xlat
pop
lret
out
push
out
fisubrs
jge
cmp
jecxz
cmpsb
xor
add
lret
mov
sar
arpl
pusha
inc
in
push
inc
mov
sub
and
pusha
pop
popa
cmpb
xsaveopt
out
out
insl
sub
mov
lock
adc
insb
or
sarb
in
xor
shll
xor
xchg
or
shrl
out
pop
out
mov
xchg
lret
and
mov
mov
dec
add
iret
dec
add
and
dec
mov
xchg
push
ss
mov
ret
mov
push
xor
lds
cmc
push
lods
xchg
mov
dec
xchg
jne
out
std
addr16
scas
aaa
add
push
es
jle
cltd
fnsave
in
mov
pusha
dec
lea
adc
xchg
dec
scas
or
lock
push
aam
cmc
pop
mov
movsb
pop
stos
lock
sbb
popl
les
rcrb
push
loope
xchg
jg
push
loop
pop
push
and
insl
jge
and
xor
pop
imulb
pop
or
pusha
stos
in
xchg
repz
xor
movsl
cmc
lret
lods
push
mov
ds
add
cmpsb
test
add
test
bound
pop
lods
lret
cmpsb
or
aam
ja
mov
std
mov
test
addr16
and
sub
ljmp
popf
pusha
push
inc
clc
or
push
mov
outsb
sbb
xchg
mov
in
adc
iret
jb
andb
cmpsl
and
cmp
xchg
jle
add
movsl
call
mov
pushf
nop
sbb
push
sub
add
cs
arpl
or
out
cmpsl
add
mov
lock
mov
into
sbbb
dec
shlb
dec
add
test
mov
jmp
test
es
jns
sahf
mov
jle
fistps
pop
fimuls
sub
adc
cli
iret
into
aad
pop
inc
sbbl
outsb
dec
cmp
imul
leave
or
in
ja
xor
loope
push
mov
cmp
ljmp
hlt
js
outsl
ljmp
loope
mov
inc
mov
fwait
test
pop
cwtl
ljmp
dec
xor
fsub
push
adc
sub
out
outsb
jo
and
adc
mov
add
int
pushf
xchg
mov
rorb
sbb
mov
and
pop
ja
mov
jmp
outsl
pusha
frstor
fcoml
outsb
add
jo
push
xor
js
pop
jg
mov
xchg
insb
sbb
movsl
cs
fcoms
push
xchg
inc
xchg
mov
scas
xchg
int
stos
test
mov
sub
idiv
pop
dec
xchg
sahf
jge
add
sbb
jp
mov
xchg
aaa
ljmp
subb
mov
fisttpll
stos
les
fs
test
scas
fmull
in
push
sbb
jmp
rcrb
movsl
xchg
mov
pop
inc
inc
ffreep
clc
nop
xchg
int
adc
stc
rcrl
hlt
into
mov
xchg
call
cmpsb
sar
ja
rcrb
push
shl
sti
lea
jns
jns
mul
sbb
fldl
push
jmp
clc
xor
xchg
rorl
and
jg
dec
pop
lock
cltd
xor
lods
or
sub
sahf
adc
push
cltd
xchg
std
pop
add
roll
cmpsl
insb
sbb
adc
bound
add
daa
in
sub
je
sbb
lahf
icebp
outsb
pop
enter
xchg
mov
subl
push
les
mov
adc
sub
test
das
pop
jne
andb
adc
adc
xor
rcll
jge
outsl
ret
jb
xor
inc
mov
sub
loopne
cmp
mov
mov
movsl
sub
inc
lds
out
mov
xchg
fbld
add
leave
or
xor
ja
popf
cmpsb
fdivrl
data16
add
and
add
add
dec
cmp
orb
mov
ret
add
rcr
dec
movsb
inc
iret
int3
add
jp
lcall
and
fldenv
seta
mov
adc
loop
xor
je
cld
pop
inc
or
inc
je
mov
sbb
cmpb
cmp
stos
bound
inc
jns
mov
filds
push
cmc
negl
mov
push
cmp
xchg
stos
sbb
icebp
sub
inc
jnp
push
lret
movsl
jmp
push
xor
sub
cmp
push
inc
insl
push
test
or
movsb
cmpsl
ljmp
pop
neg
mov
scas
mov
mov
cmp
jecxz
or
adc
inc
cmpsl
inc
push
xor
shlb
lods
sub
push
sbb
popf
pop
dec
or
pop
por
xor
out
xor
repnz
jp
popa
and
xchg
ss
mov
mov
jmp
add
stos
dec
jmp
mov
pop
in
cmc
fs
loop
cmp
dec
icebp
mov
sahf
mov
repnz
popa
push
mov
dec
dec
push
jmp
dec
pop
testb
xchg
dec
bound
inc
mov
dec
scas
jo
jmp
mov
jg
es
int
popf
dec
lcall
loope
sahf
jnp
push
test
decl
jl
lahf
aam
or
add
sbb
dec
sar
jbe
je
addb
in
xor
icebp
imul
aad
ret
jb
jmp
and
mov
movsb
dec
push
loope
inc
pop
mov
aam
aad
pop
jg
xchg
les
pop
jl
inc
xchg
in
jne
jo
push
fst
js
inc
loop
and
and
mov
add
sbb
add
jne
push
imul
pop
xor
call
in
in
push
stos
in
out
inc
add
inc
in
add
inc
mov
es
lret
fidivs
inc
sub
xor
movsl
int3
mov
test
lret
shr
inc
int
lods
mov
std
fnsave
xchg
imul
pop
add
add
lods
imul
call
aam
out
push
sbb
ss
pop
and
jle
aas
addr16
inc
pop
pop
out
or
data16
inc
mov
pop
mov
jo
fsincos
movsl
lods
imul
xorb
mov
xchg
into
les
push
cmpsb
xchg
loopne
addl
xor
test
jb
dec
inc
mov
cmp
add
movsb
xor
inc
rcr
jg
inc
nop
pop
mov
jecxz
jns
in
adc
mov
or
xor
mov
xor
inc
ja
fsubr
popf
push
insl
test
xor
push
fwait
push
mov
imulb
adc
cs
and
pop
movsl
movsb
test
or
inc
add
mov
out
mov
add
shl
xor
xchg
outsl
jg
push
push
inc
ret
add
cli
push
iret
mov
sbb
jns
pushf
lahf
wrmsr
jecxz
shl
push
or
inc
aad
jo
roll
insl
out
or
bound
test
out
fidivrs
stc
jo
iret
repz
sbb
stos
mov
inc
ret
popl
xchg
cmp
push
jle
or
repnz
xor
insl
add
jb
mov
dec
pop
imul
xchg
fisubl
jne
ret
ja
iret
ds
sahf
lods
popf
jge
mov
xchg
cmp
sub
sbb
ret
and
or
push
aad
insb
mov
scas
fchs
dec
insb
sub
or
pop
xor
scas
add
push
hlt
fdivp
adc
int
lock
adc
adc
lcall
mov
fs
mov
jno
mov
jl
fadds
out
xor
loop
xor
push
mov
popa
jle
cld
dec
dec
gs
jmp
inc
push
imul
sub
lret
lods
ja
push
mov
les
sbb
leave
pop
cmp
cmp
iret
xchg
gs
mov
stos
mov
xlat
adc
push
jns
inc
cltd
in
adc
ja
repz
adc
out
xchg
cmc
adc
loope
cs
jnp
push
push
pop
jmp
xor
cltd
xlat
fwait
in
addr16
fs
popa
adc
add
shl
js
inc
fdivrl
jnp
sbb
outsb
gs
scas
movsb
insb
lahf
mov
mov
dec
stos
push
std
xor
nop
pop
lret
shlb
ljmp
daa
or
std
loopne
rorb
inc
jecxz
inc
push
cmp
out
or
inc
mov
and
stos
cmpsl
pop
xchg
lea
adc
lods
mov
cmp
cltd
mov
in
mov
pop
cmc
adc
mov
imul
dec
test
adc
mov
jno
sub
push
mov
loope
cmp
in
bound
or
mov
roll
lea
scas
and
in
jl
dec
cmpl
lods
jecxz
push
fisttpl
add
addr16
int
lahf
or
test
repz
call
pop
dec
add
hlt
jae
addr16
loop
idiv
or
mov
lods
enter
das
std
es
and
push
aam
and
xor
sbb
mull
fisubl
fwait
insl
arpl
or
mov
mov
cmp
add
adc
repz
mov
push
fcmovnbe
and
fmull
into
push
je
les
xchg
dec
add
cmp
ret
cmp
ja
mov
pusha
mov
xor
cwtl
imul
iret
xor
aam
sahf
or
sarb
call
and
add
decl
push
in
outsb
xor
dec
adc
cli
add
sahf
stos
push
inc
ret
and
daa
pushl
push
pop
pop
mov
hlt
inc
pushl
sub
das
aam
push
loope
data16
mov
loopne
or
rol
xchg
mov
jp
xchg
sbbb
std
or
mov
add
aad
shl
mov
addr16
inc
sub
arpl
loope
mov
or
fildl
outsb
scas
lea
mov
shlb
notl
lcall
in
jg
dec
mov
xchg
mov
fcmovbe
bound
ret
stos
and
repnz
jae
sub
fcompl
out
mov
adc
or
dec
out
adc
arpl
mov
adc
xor
cmp
jnp
push
cmc
loop
inc
add
cmp
jo,pn
unpckhps
push
out
ret
mov
dec
mov
xor
inc
jne
les
jo
xchg
mov
pop
sbb
xor
cmp
push
movsl
push
jg
inc
cmp
push
out
inc
or
pushf
push
jecxz
test
xchg
push
movl
das
nop
xchg
test
addl
pop
pop
dec
clc
pop
inc
and
xchg
cmpsb
lret
daa
pop
movsb
cmp
inc
call
push
mov
xchg
movsl
dec
jmp
pop
mov
cmpsl
test
cmp
stos
mov
test
sbb
xorb
xor
arpl
adcl
mov
jg
iret
and
rolb
cmp
mov
insb
aaa
repz
or
add
lds
aaa
pushf
mov
jmp
mov
pushw
pop
lds
fstps
aad
cwtl
pop
pop
mov
push
bound
sub
xchg
cld
outsl
lahf
jmp
in
outsl
shrb
test
or
cltd
add
dec
push
mov
dec
or
pop
loope
dec
inc
jg
dec
cmp
push
movsb
mov
sahf
mov
stc
mov
adc
mov
in
pop
and
cmpsl
stos
xor
cmp
mov
pop
xor
xor
or
aaa
mov
outsb
sbb
hlt
cmp
inc
mov
push
fisttpl
in
add
sahf
mov
lds
lahf
add
jo
add
xor
sbb
add
add
xchg
js
mov
icebp
das
dec
cmp
lahf
dec
pop
push
jns
out
shr
cld
adc
xor
scas
add
shll
out
sbb
aaa
and
inc
enter
ss
rolb
and
test
jnp
xchg
adc
push
lret
int3
mov
xorps
int3
loope
xchg
pop
mov
pop
lea
aad
xorl
jecxz
imul
pop
sbb
repz
rolb
jnp
mov
jns
cmp
jg
std
push
int
enter
and
jns
stc
cwtl
imul
jg
xor
xlat
dec
pop
imul
hlt
out
mov
pop
pop
fdivrl
sub
clc
pop
and
int
xor
call
pop
inc
xor
mov
test
xor
lds
dec
dec
jae
frstor
mov
out
and
ja
inc
pop
push
xchg
adc
sbb
push
inc
outsl
add
xchg
call
shlb
xor
cmp
fwait
cmp
test
sbb
and
imul
out
dec
inc
clc
shll
shll
rcrl
jecxz
in
scas
cwtl
test
mov
ja
add
std
repz
out
pop
sbb
jle
sbb
push
sub
test
dec
and
xchg
mov
jg
bound
cmpsl
adc
xchg
ret
dec
xor
jae
adc
mov
bound
mov
pop
push
jl
outsl
jbe
pusha
or
imul
cltd
es
push
adc
loopne
mov
dec
or
daa
sbb
dec
jl
pop
and
insl
sbb
pushf
fdivr
scas
mov
jno
pop
fsubl
gs
ljmp
or
and
xor
adc
scas
lcall
je
sub
mov
sbb
sbb
in
jl
add
pop
out
repnz
aas
mov
mov
fs
push
cmc
popa
inc
xor
pop
pop
adc
jo
pop
addr16
popa
sbb
or
sti
into
loope
sub
lock
add
push
mov
pop
stc
adc
subl
fdivs
push
movsb
cmpsb
pop
mov
insl
ret
adc
popf
cmp
mov
or
inc
jge
mov
lret
stos
xchg
pusha
jl
sbb
lods
sub
inc
mov
gs
dec
jp
mov
fistps
jns
cmp
mov
and
jb
cli
addl
sar
je
leave
pop
std
cmp
or
stos
in
add
jg
mov
inc
data16
pop
es
lods
push
xor
lods
jb
dec
xchg
jae
jg
insb
out
in
dec
cmp
pop
scas
lret
shl
push
rcrl
jl
dec
dec
pushf
jge
xchg
add
cmc
lahf
cmp
sbb
cld
pop
fs
dec
aas
xchg
jo
inc
out
fnstcw
push
mov
xchg
push
aad
movsl
pop
jae
hlt
cmp
mov
sub
and
test
jecxz
sub
mov
out
daa
sbb
stos
mov
mov
add
xor
clc
mov
test
jg
jbe
mov
push
imul
subb
push
cmp
lahf
ja
int3
inc
das
aaa
sahf
insl
loopne
mov
jmp
jne
js
test
rcll
es
js
mov
xor
xor
mov
scas
inc
js
fsubs
cld
xor
lret
ss
xor
lcall
inc
xor
jo
xor
and
cmpsl
jg
lock
hlt
scas
prefetch
or
sbb
test
jnp
xchg
mov
fadd
sbb
sbb
ljmp
je
sbb
mov
scas
popf
jno
test
imul
mov
cmc
jmp
jecxz
sbb
mov
jno
test
sub
test
push
js
roll
sarb
adc
cmc
mov
mov
subl
int
es
and
icebp
int3
nop
addb
add
ret
add
inc
jp
subb
call
insl
or
stc
ret
cld
popf
mov
push
push
outsl
iret
jmp
popf
leave
push
sti
cwtl
outsb
pop
shll
mov
inc
popf
cmp
es
or
insb
aas
mull
jae
add
push
filds
addr16
nop
mov
xchg
data16
or
shll
jo
mov
xchg
push
cmp
and
aad
xor
xor
scas
loopne
add
outsl
add
mov
pop
pop
mov
negb
mov
and
pop
push
cmpsl
inc
call
sbb
xlat
xchg
bound
shl
adc
push
les
fwait
ljmp
push
cmpsl
jbe
mov
inc
loope
imul
shrb
jge
js
je
lds
out
inc
sub
sub
pop
outsl
stos
out
ljmp
shll
jbe
pop
in
stos
or
les
dec
or
out
sub
fwait
pop
pop
inc
push
cmp
dec
push
xchg
jbe
dec
fcomps
js
popf
or
adc
push
mov
enter
sarb
mov
dec
jne
icebp
sahf
pcmpgtd
push
inc
imul
xchg
xor
cmp
jge
and
nop
pushf
mov
out
pop
mov
outsl
or
arpl
test
cltd
lods
xchg
shll
push
push
mov
fwait
pop
lsl
mov
int
add
add
fimuls
xor
push
jne
sub
dec
outsl
pop
cmp
or
sub
and
sbb
fildll
sbb
cmp
and
call
push
jp
sahf
ficoms
jo
fdivs
jmp
or
xor
jg
les
inc
cmc
jmpw
and
clc
pop
pop
pop
cmp
mov
jg
pop
in
add
inc
mov
push
adc
xchg
in
push
jns
bound
xor
dec
lods
cwtl
imul
in
cwtl
fdivs
stos
aas
incl
outsb
cltd
sbb
jo
fstps
imull
arpl
ror
push
push
imulb
pop
or
mov
adc
mov
mov
mov
popa
ljmp
movups
ja
push
mov
imul
jle
or
jp
mov
movsl
mov
dec
pop
dec
addr16
addr16
stc
add
in
mov
movaps
mov
loope
mov
int3
inc
arpl
test
add
lea
pop
push
sbbl
push
insb
stos
shr
mov
stos
insb
in
adc
fildll
inc
push
pusha
inc
pop
lret
jle
inc
repz
arpl
dec
mov
pop
sbb
inc
xchg
sbbb
outsb
and
mov
sarb
and
arpl
and
inc
push
in
aad
sub
cmp
pop
lds
sbb
cli
dec
and
inc
and
leave
bound
popa
lock
cld
fists
push
sbb
ret
dec
mov
push
std
test
retw
xlat
xchg
movsb
jno
inc
std
jns
in
dec
mov
dec
mov
out
subb
cld
jmp
adc
iret
rcrl
inc
jg
dec
push
dec
push
or
rorb
dec
pop
cld
cmp
in
sub
xor
push
shlb
sbbb
jg
cmp
rclb
mov
stc
add
movsl
push
xorb
adc
jae
mov
lods
in
push
pop
cmc
pop
cmp
fwait
pop
cmp
xor
jne
call
int3
rclb
jle
fidivl
dec
leave
fnstcw
popa
sbb
pushf
push
adc
addr16
add
mov
sub
sti
jb
push
pop
cmpsb
cmp
add
dec
mov
cld
fstpt
dec
and
mov
sbb
mov
lea
aam
js
daa
lods
mov
nop
decl
jnp
outsb
adc
jle
xchg
outsb
mov
lahf
xlat
mov
and
icebp
fdiv
push
add
int3
std
in
mov
push
pop
mov
pop
jge
sub
jne
mov
popa
movsb
adc
les
int3
xchg
sub
pop
inc
adc
xor
fisttps
popf
test
xor
jns
xchg
into
push
adc
cli
loopne
leave
push
mov
and
out
std
rorl
push
ss
int
xchg
push
cltd
push
idiv
pop
inc
movb
xchg
and
mov
xchg
sbb
rorb
bound
je
dec
jle
xor
mov
out
push
push
int3
fdivl
jo
lcall
fldl
out
fsubs
imul
mov
sbb
dec
sub
test
inc
rolb
mov
pop
sbb
mov
lahf
sar
mov
fwait
adc
cmpsb
push
jp
xlat
sbb
lcall
cmp
sbb
push
push
js
sbb
mov
dec
push
or
mov
imul
jnp
imul
fmull
jbe
jl
mov
loop
inc
xor
inc
movsb
sbbb
ret
outsl
mov
jns
ret
dec
sub
sub
dec
dec
mov
orps
dec
sbb
jnp
xchg
sbb
dec
jbe
mov
lds
lcall
in
fs
mov
rcrl
jno
push
jbe
xorb
sbb
into
sbb
imul
xor
aam
jbe
sarb
push
or
xchg
cmp
cmpl
sahf
dec
nop
fcomps
or
mov
push
cmp
lea
int3
xchg
sbb
cli
das
xchg
pop
into
into
into
mov
pop
pusha
mov
dec
call
push
repnz
inc
push
jae
int
mov
push
cmp
inc
scas
imul
push
mov
push
mov
movsb
or
sbb
jp
mov
ficoml
jge
inc
jg
xchg
add
clc
adc
lret
repnz
pop
mov
xor
push
imul
lods
sbb
pop
pop
dec
dec
sti
sti
sahf
mov
fsubrl
cltd
es
jle
sbb
lahf
mov
mov
lods
push
sahf
pop
lods
adc
inc
push
iret
iret
jecxz
mull
je
iret
pop
push
out
adc
sub
lds
xchg
push
push
scas
push
fimull
cmc
and
jo
test
shlb
mov
cmp
and
mov
jecxz
sub
or
cmp
pop
adc
cmpsb
mov
and
sub
sahf
dec
jb
movb
xchg
bound
cmp
jne
dec
xor
and
mov
adc
mov
sahf
subb
inc
addr16
fcoml
jnp
add
subb
scas
xchg
cmc
ffree
jg
push
mov
gs
mov
dec
mov
cmp
mov
ret
adc
mov
test
adc
cmp
and
xor
test
mov
pop
test
out
pop
sub
insb
ret
add
mov
sub
scas
xchg
out
outsl
cmp
cmc
cmpsl
gs
in
push
mov
and
fistpll
out
mov
xchg
dec
sbb
push
add
test
xchg
push
test
hlt
stc
push
sub
push
dec
outsl
pslld
push
pop
adc
push
add
dec
add
push
rorb
and
push
mov
fwait
xor
lahf
push
mov
leave
fwait
repz
jno
gs
lahf
rolb
cmp
mov
out
stos
int
push
and
fsubrl
pop
xor
xchg
dec
fwait
mov
lret
pushf
movsb
fwait
jge
mov
sbb
pop
and
mov
lret
imul
fldt
lds
xor
adc
hlt
test
repz
out
test
sub
mov
rclb
jl
in
pop
xor
insb
clc
outsl
add
adc
jbe
xor
clc
pop
sarl
je
cld
adc
mov
xchg
mov
push
movsb
push
adc
xor
or
lahf
pushf
push
inc
adc
cltd
movsl
insl
inc
in
rcrb
add
fwait
stos
shrl
jno
jle
cmp
int3
dec
pop
and
arpl
scas
lea
cmp
cli
jl
test
push
fdivrl
into
and
mov
mov
jp
aaa
imul
mov
loopne
test
dec
shll
shlb
mov
loop
lock
add
xor
or
mov
leave
mov
stc
aas
cmp
push
or
movsb
or
fisttpll
in
xchg
decl
imul
and
and
stc
out
das
xlat
mulb
mov
jp
xchg
or
mov
iret
out
out
or
inc
cmp
mov
fwait
mov
ja
mov
sbb
int
inc
sub
movsb
xchg
nop
xor
in
mov
mov
xor
xchg
mov
or
xorb
cmp
mov
mov
sbb
sbbl
or
nop
jb
mov
inc
ja
push
jecxz
gs
jmp
sti
or
les
sahf
and
andl
xchg
adc
mov
rsm
ret
mov
push
sbb
xor
and
lret
mov
cwtl
push
dec
sbb
rol
pusha
xchg
sbb
jae
je
inc
sbb
cwtl
mov
and
lods
inc
jp
sbb
adc
lcall
icebp
adc
inc
es
xchg
mov
insl
jp
stos
xor
fiadds
ss
adc
arpl
push
inc
roll
jp
jo
shlb
pop
pop
clc
jns
jb
insb
push
popf
jno
inc
rcrb
mov
sbb
fcompl
cltd
pop
pop
lods
push
in
cmp
inc
iret
out
mov
jns
mov
mov
lock
dec
push
jns
or
in
fcoml
push
pop
call
inc
neg
pusha
cmp
lea
inc
pop
xchg
js
insl
dec
mov
addl
adc
cmp
inc
or
cmp
sbb
adc
andb
loopne
push
dec
mov
sbb
jmp
xor
repz
inc
cs
lahf
call
movsl
fucomp
sbb
xor
lods
push
jl
imul
dec
xchg
jae
jmp
test
add
cs
lods
cmp
jb
mov
dec
mov
fucomp
mov
mov
push
adcb
xor
cvtpi2ps
outsl
aas
daa
clc
jmp
fs
insl
cmpsb
adc
push
scas
mov
sbb
scas
lods
lds
mov
sub
out
push
mov
mov
loopne
ds
mov
cltd
push
pushf
cmpsl
in
jmp
mov
cmc
shrl
jecxz
jmp
sbb
lcall
xchg
stos
and
jne
xchg
jg
loopne
adc
leave
dec
pop
push
jns
pop
or
stos
ret
clc
aam
pop
shll
jl
xchg
pop
xchg
pop
push
icebp
shll
sbb
or
xchg
enter
cli
rcrl
adc
aas
data16
hlt
rep
mov
inc
addr16
mov
mov
dec
adc
xor
pop
adc
lock
fsubl
insl
and
xor
cmp
xchg
inc
pop
xchg
dec
sbb
out
cmc
sti
stc
xor
or
pusha
dec
jnp
dec
mov
or
sahf
jp
push
mov
aad
lahf
dec
push
out
aaa
cs
adc
xchg
or
dec
stos
je
or
mov
mov
insl
insl
in
xchg
in
es
subb
mov
fbstp
inc
inc
and
rcr
inc
lret
mov
mov
daa
inc
inc
cmp
inc
jo
add
sbb
sbb
icebp
stos
test
jno
and
sti
jb
inc
cmp
jb
xlat
sbb
lods
jbe
scas
push
shr
mov
incb
sbb
sahf
cltd
mov
outsb
lds
cmp
in
xorb
inc
iret
sub
push
dec
cs
cmpsl
cld
mov
mov
fistl
mov
sti
lock
daa
mov
fsubl
iret
imul
jae
mov
jge
lods
jno
es
pop
sub
or
lock
aas
mov
icebp
das
inc
dec
leave
and
inc
pop
sub
mov
shld
mov
cmp
jge
addr16
pop
or
movsb
movsb
loopne
add
add
mov
fisttpl
sti
repnz
je
jnp,pt
mov
aam
shrl
ret
call
loopne
rcll
mov
jns
xlat
and
ret
mov
jmp
cmp
ret
lret
enter
jbe
push
sbb
mov
into
loope
sbb
dec
mov
jmp
aaa
test
movb
mov
lret
mov
push
mov
mov
adc
and
lret
repnz
adc
sub
or
pop
inc
mov
dec
mov
adc
les
gs
xor
pop
push
leave
cmpsb
enter
ss
lcall
xor
or
mov
daa
imul
stos
push
jne
cmp
aas
adc
aaa
pop
sbb
jmp
add
pop
sub
or
cmp
les
outsb
mov
adcl
mov
lods
fwait
push
and
mov
dec
popa
or
vpcmpgtw
push
test
adc
in
sbb
xor
sub
and
mov
lahf
test
nop
outsl
cwtl
adc
in
lea
push
iret
xlat
push
mov
xchg
push
sbb
pusha
sub
mov
and
jge
std
stc
dec
mov
cmc
test
sub
mov
jg
outsb
xor
xchg
sub
daa
clc
lahf
push
inc
jo
cmc
cmp
push
cmp
or
int3
ljmp
scas
or
incb
jp
xor
sbb
cmp
dec
dec
lcall
lcall
xchg
adc
hlt
add
xorb
sub
mov
pop
cmc
enter
adc
push
sub
mov
pop
push
stos
mov
test
dec
aaa
pop
es
cmp
in
mov
mov
sbb
aam
mov
xchg
fsubrp
int3
jnp
icebp
adc
jmp
movsb
mov
cmp
jg
lret
jl
sbb
mov
js
push
or
push
pop
mov
bound
clc
shlb
pop
filds
in
pop
xchg
and
scas
lret
out
push
movsl
cmpsb
or
or
jno
pop
pushf
jo
lds
pop
das
out
pop
pop
jge
in
mov
inc
jne
sbb
mov
xor
iret
sbb
inc
mov
dec
test
out
mov
mov
lods
push
lret
mov
xchg
sbb
lods
inc
mov
dec
ror
and
add
lea
sbb
pushf
pop
mov
add
leave
and
inc
jno
out
sbb
adc
stos
mov
xchg
push
cs
push
jmp
sub
clc
cmpsl
sti
roll
adc
pop
pop
adc
inc
lret
xor
xor
mov
cmp
test
fmuls
inc
mov
cwtl
in
or
xchg
js
insb
sbb
test
pushaw
add
xchg
mov
pop
lcall
mull
mov
or
add
adc
sahf
adc
call
pop
rorl
jg
push
icebp
mov
add
xor
popf
pusha
sub
call
xchg
pop
and
pop
in
and
mov
pop
loope
push
mov
das
ds
cld
cltd
and
leave
stos
jo
add
clc
xor
jb
arpl
push
imul
xor
xor
out
push
cmp
or
sbb
outsl
addb
sbb
xchg
sub
or
jp
dec
adc
xchg
xor
testl
enter
icebp
std
enter
sarl
inc
adc
push
jle
xchg
adcb
jmp
jge
push
pop
lods
or
push
not
out
adc
mov
xor
repnz
mov
ds
jns
and
cmpsl
adc
xlat
pop
jg
lret
out
cwtd
test
mov
inc
jp
inc
lcall
jl
sbb
aam
pop
mov
push
rolb
add
or
pop
xor
loopne
loope
loopne
ret
pop
sbb
cmc
fistps
xchg
incb
sbb
jg
enter
call
lods
inc
mov
addr16
xor
jns
dec
xchg
cmpl
jmp
jo
cmc
jne
enter
lds
jae
and
out
sbb
or
mov
jmp
ss
jl
jp
sbb
daa
adcb
sub
fsubrp
jbe
dec
xorl
push
xor
push
push
jns
lock
clc
fidivrs
out
add
sub
push
add
cmpsl
out
cmp
push
mov
xchg
ds
andl
loopne
jo
outsl
popa
xor
fidivrs
imul
jnp
insl
and
loopne
rolb
js
push
test
mov
dec
mov
es
sbb
orl
mov
icebp
cmp
sbb
push
jmp
inc
mov
jnp
out
add
std
pop
mov
aam
cs
roll
ljmp
rep
push
dec
icebp
mov
cmp
fcmovnu
jmp
adc
push
inc
cltd
test
pushf
xchg
mov
and
mov
jg
ret
test
mov
pop
dec
mov
push
mov
popa
or
push
mov
xor
ljmp
idivl
clc
rorb
sbb
mov
out
sahf
mov
xor
push
pusha
or
adcb
fdivrs
inc
icebp
jecxz
hlt
pop
xchg
aaa
jmp
mov
pop
mov
lcall
xchg
les
dec
lea
ss
dec
push
sub
push
in
cwtl
push
je
add
xchg
mov
xor
mov
js
loope
fwait
fwait
repz
inc
js
sub
sub
push
xchg
cltd
jb
adc
cmp
inc
jb
add
pop
xchg
out
push
and
inc
mov
cmc
lret
xchg
imul
and
mov
fbstp
je
mov
cmp
xchg
ret
push
insb
cmp
out
insb
lods
mov
add
nop
mov
xchg
loopne
sub
jne
jb
out
add
add
push
sti
in
aaa
aam
ret
pop
js
xor
dec
xchg
lock
add
mov
shl
jl
lods
cmpsb
out
lods
sarl
outsl
jno
test
mov
popa
mov
and
cmc
mov
jmp
adc
and
mov
push
daa
sub
push
test
adc
and
cltd
ror
mov
sbb
fwait
jns
push
stos
mov
int
pusha
xchg
iret
mov
scas
cmp
icebp
push
aad
cmp
test
shlb
sbb
add
mov
bound
inc
insl
stos
or
iret
sub
and
dec
xchg
stos
lret
adc
dec
je
sub
inc
aad
jle
adc
adc
jmp
insl
jne
mov
bound
lea
jge
xorl
loop
xor
pop
add
mov
sbb
pop
frstor
xchg
dec
jecxz
daa
add
mov
stos
lods
aad
xlat
stos
push
jg
xor
out
jb
jmp
cmpb
push
mov
and
fst
rclb
hlt
cltd
pop
dec
mov
js
hlt
cli
std
sub
mov
cmc
lock
popa
cmp
push
addb
into
sti
sarb
jmp
popa
repnz
hlt
push
inc
push
call
sub
scas
cmp
mov
jno
pop
movsl
sbb
and
cltd
sub
into
ss
sti
es
jmp
jp
adc
fsubs
fstpt
mov
stos
fwait
cli
inc
imul
cld
call
dec
sub
fildl
fwait
adc
mov
xchg
in
push
repnz
push
imul
cmp
push
or
in
test
lods
push
fs
dec
xor
lret
fucom
sbb
sub
dec
idivl
dec
out
mov
mov
hlt
mov
shll
sub
mov
or
push
xchg
les
in
mov
ljmp
adc
mov
pop
jge
dec
aam
scas
xchg
es
cmp
add
jmp
adc
cmp
sbb
ljmp
adc
frstor
xchg
inc
adc
popa
incb
mov
sbb
inc
filds
nop
cmpsl
adc
add
inc
mull
push
scas
pop
xor
in
xor
mov
xor
iret
sbb
aad
sbb
mov
pop
pop
inc
std
ret
adc
cmp
sbb
inc
bound
and
outsb
sbb
aas
lods
iret
jbe
stos
fstpt
gs
pop
stc
inc
push
push
cmp
mov
jecxz
mov
lods
dec
pushf
jg
mov
or
inc
mov
xlat
int
jg
stos
sub
add
lods
jle
andl
nop
inc
loop
xchg
pop
jg
gs
cmp
hlt
iret
sbb
pop
or
imul
jmp
sti
das
dec
push
jmp
je
hlt
xchg
inc
scas
sub
or
ds
cmc
mov
push
mov
sub
push
push
and
mov
std
jnp
pop
pop
sub
pushf
dec
jno
jge
jl
dec
fdivs
fcom
je
jmp
inc
inc
xchg
jmp
mov
xor
mov
test
xchg
int
loopne
jp
cmpl
hlt
js
pop
sub
leave
adc
je
xchg
adc
lods
xor
lret
dec
lahf
adc
or
push
sub
fsubrs
rcrl
pushw
les
dec
sbb
jg
outsb
mov
stos
sbb
xchg
fldenv
mov
xchg
adc
in
dec
lds
pop
ljmp
lds
sbb
or
push
push
aas
out
repnz
sub
sbb
cmpsb
xchg
hlt
sbb
lds
fstpl
fdivr
daa
inc
xchg
loop
cmp
or
mov
mov
fildll
or
mov
stos
sti
enter
inc
cmp
xor
sub
adc
fnstsw
sub
adc
adc
das
mov
outsl
mov
popa
imul
push
mov
fwait
lods
mov
stos
inc
lods
enter
mov
pusha
push
push
cld
push
popl
mov
xchg
mov
dec
into
cmc
and
xchg
add
mov
xor
repnz
xor
cwtl
xchg
xchg
jp
test
sbb
lea
cmc
dec
gs
outsl
lds
loopne
fdivrs
mov
cli
js
mov
daa
sti
dec
test
dec
ret
sbb
jbe
loope
mov
add
sbb
inc
dec
stos
xchg
loope
xchg
add
in
pushf
push
sarb
jmp
into
mov
nop
or
inc
hlt
es
jns
sbb
add
in
pop
test
or
push
mov
cmc
pop
popf
daa
cli
jle
je
scas
pop
fsubs
pop
inc
add
push
xchg
movsl
mov
imul
jp
cld
fisttpl
jg
inc
in
imul
movsl
lret
jns
jge
inc
jo
gs
ja
cwtl
adc
cmp
mov
ja
xchg
jle
push
pop
cmp
jmp
dec
xchg
daa
into
loop
jns
addr16
mov
dec
mov
imul
pop
mov
cmpsl
nop
mov
fisubl
fisttps
xchg
insb
inc
andl
adc
cmovnp
lock
insl
shlb
add
cmc
cmp
jae
addb
loop
sub
insb
adc
enter
xor
popa
movsb
data16
mov
push
jmp
lds
xor
pop
pushf
gs
xor
or
out
jp
jp
jne
sub
sub
rorb
inc
ljmp
shll
aam
and
jle
jne
ljmp
mov
add
pop
mov
mov
xor
sub
clc
and
push
sarb
ds
scas
fmul
xchg
jg
or
das
out
mov
cwtl
or
mov
fstps
loop
and
xchg
sub
iret
adc
fs
dec
fisubs
pop
outsl
mov
cmc
mov
dec
cwtl
or
cmc
xchg
dec
loop
sahf
cmpsl
push
jo
jnp
orb
bound
jecxz
dec
divb
les
leave
ret
inc
mov
mov
lret
jecxz
in
cmp
adcb
imul
imul
xor
je
cli
mov
xchg
out
pop
scas
mov
cmp
aam
insb
sbb
cmp
std
out
int
sbb
push
or
pop
push
rorl
mov
insb
sbb
les
inc
je
stc
stc
jno
sub
xrelease
xor
pop
decl
jae
rcrl
daa
jl
lret
lret
jmp
repz
xsaves
lds
sbb
sahf
movsb
xor
iret
mov
inc
sub
xchg
pusha
ret
xor
jo
sub
add
lret
and
fstps
mov
push
sbb
popf
jo
xchg
xchg
cmpl
jno
ret
inc
popf
inc
mov
in
icebp
push
fistpl
jne
push
cmp
or
pop
aad
cmc
push
cmp
jg
and
jnp
pop
add
arpl
inc
call
faddl
and
mov
inc
inc
test
xchg
push
sub
imull
and
clc
jo
popa
inc
xor
outsl
xchg
pop
push
daa
bound
test
adc
push
stc
push
daa
fbstp
aas
dec
testl
push
push
stos
sbb
push
adc
cmp
push
mov
clc
mov
lock
dec
xor
stos
mov
pop
cmp
jae
xor
iret
fnsave
das
out
call
mov
pop
int
lds
nop
repz
and
push
push
dec
lahf
rol
mov
roll
mov
pop
outsb
filds
pop
dec
ret
push
test
outsl
jge
xor
mov
stos
scas
pop
pop
rcll
lahf
and
or
pusha
popf
mov
fmull
add
jl
pop
aad
loop
mov
mov
sahf
jnp
pop
push
xchg
flds
cli
adc
pop
cmp
pop
pop
test
rolb
xchg
insb
pop
mov
cmp
sub
push
add
jne
dec
push
aaa
mov
mov
data16
pop
adcb
or
or
jns
fsubl
sbb
data16
rcrl
nop
mov
jmp
mov
and
rcll
imul
lock
sbb
dec
hlt
adc
jo
or
dec
mov
bound
sbb
and
adc
inc
jg
fisttps
cmp
mov
mov
jmp
mov
int
dec
jne
aas
fsubrp
popa
mov
loop
jb
js
aaa
movsb
lods
in
fwait
ret
loope
xchg
pop
test
das
adc
fmuls
insb
and
or
mov
push
mov
xchg
inc
int3
inc
fwait
xchg
jo
xlat
ja
andb
bound
int
stos
hlt
xor
out
insb
pop
xchg
andl
pop
cmp
mov
movsl
addr16
stc
mov
mov
insl
fisttpl
adc
xor
sbb
and
daa
push
push
ja
sub
fs
out
mov
aad
xchg
pushf
fcomps
xchg
pop
and
insl
lods
xor
cmpsb
adc
pop
mov
sbb
push
and
popa
test
fildl
cmp
inc
inc
orl
pop
pop
jle
dec
out
jne
jp
push
lock
sub
jg
aaa
dec
stos
push
out
jne
cmp
cld
sahf
jns
insb
jb
loope
push
movsb
das
push
push
fcmovne
mov
xor
outsl
fwait
sahf
jb
cmp
leavew
jmp
outsb
cmp
pusha
add
lods
inc
pop
adc
xchg
std
ljmp
addb
xchg
ret
pusha
out
int3
jmp
fdivrs
push
push
pop
add
xor
mov
out
add
cmp
dec
cs
mov
push
shl
adc
or
and
lahf
or
ss
mov
outsb
out
daa
addl
ljmp
or
lret
in
xchg
testb
xor
out
dec
sbb
mov
mov
pop
aas
loop
leave
jbe
mov
sbb
pop
dec
xor
frstor
das
shr
cmc
out
jp
add
inc
mov
iret
sbb
add
mov
push
jae
rolb
loopne
pop
dec
xchg
filds
push
mov
cltd
iret
or
clc
fcompl
pop
popl
inc
xor
mov
push
test
or
pop
mov
lcall
faddl
pushf
dec
in
push
mov
out
pop
out
out
cwtl
dec
daa
inc
sub
lret
cmpsb
fstp
inc
test
test
adc
jge
sbb
add
jb
insb
movntps
lds
xchg
mov
push
ds
mov
fwait
ss
cwtl
lock
jae
mov
testb
add
and
mov
pop
into
and
mov
mov
sarb
cmpsl
aad
mov
dec
push
cmp
fwait
xchg
roll
add
sbb
pop
inc
scas
and
cmp
sub
clc
sub
ja
aad
dec
dec
pop
into
pop
xchg
push
cwtl
js
testb
rcll
call
std
stc
ds
jp
xchg
mov
pop
mov
clc
sub
push
mov
mov
xchg
repz
and
jbe
pop
fdiv
insb
add
cmp
cmp
pop
pop
subl
mov
inc
fidivrl
jno
mov
adc
cmp
lds
ret
jne
ljmp
bswap
or
xchg
sub
jb
fwait
ljmp
adc
fimull
fcomps
cmc
pop
cmp
push
arpl
xchg
pusha
adc
inc
push
jns
push
xor
inc
lods
imul
addb
jg
or
adc
jl
and
jnp
insb
or
lods
fcoml
mov
int3
cmp
jae
fwait
or
pop
loope
out
push
xchg
pusha
dec
dec
jno
and
mov
xchg
xchg
sbb
data16
xor
adc
notl
pop
cld
xchg
inc
out
mov
inc
rorl
ljmp
cmp
mov
xchg
inc
out
lret
shrb
nop
repnz
in
cmpsb
or
mov
dec
cwtl
test
lret
outsb
sbb
imulb
aam
in
lock
cmpl
add
pusha
lea
add
mov
push
or
test
dec
pop
xchg
fucomi
mov
and
xlat
jmp
xchg
mov
jo
mov
lret
push
mov
cmp
nop
call
and
adc
inc
mov
jb
fdivr
mov
icebp
xchg
add
push
inc
mov
adc
sub
and
ds
mov
pop
pusha
into
lcall
mov
scas
mov
cld
jge
pop
popf
call
fstps
and
ljmp
scas
mov
add
sbb
mov
aad
add
or
mov
out
lret
sar
arpl
jns
mov
repz
lock
stos
inc
cmc
cltd
js
imulb
dec
xor
mov
push
adc
sub
mov
in
or
fsubp
hlt
push
pop
add
sub
fidivrl
aaa
mov
cmp
and
loope
in
insl
iret
daa
decl
stos
test
lahf
mov
in
aam
ljmp
repnz
mov
out
jbe
outsb
xchg
jb
fdivs
push
pop
xchg
push
cmp
add
ja
inc
jp
mov
fsubr
dec
pop
shl
inc
or
orl
pop
or
mov
sub
loope
jnp
imul
xchg
in
sbb
dec
outsb
jnp
push
xor
jb
dec
faddp
jle,pn
popa
mov
jno
mov
adc
push
cmpsb
mov
pop
adc
jge
mov
hlt
sbb
jnp
je
pop
call
out
fdivl
dec
les
jne
test
adc
xchg
cmpb
repz
mov
aam
push
sbb
sub
xchg
test
cmp
shrb
inc
lret
mov
mov
mov
lret
out
mov
mov
mov
aas
notb
adc
pop
cmp
pop
inc
shll
mov
stc
push
and
jb
add
push
adc
addb
lret
cli
je
push
xor
stos
idivl
ret
and
cmpsb
out
dec
hlt
enter
popa
aaa
sar
fsubp
push
outsl
dec
scas
je
or
cmp
imull
mov
xor
mov
mov
jnp
push
daa
push
das
movsl
add
add
adc
and
imul
mov
cmp
xchg
mov
pop
mov
mov
push
xchg
pushf
insb
and
dec
inc
iret
mov
into
pop
xchg
mov
adc
dec
loopne
out
push
jne
out
aam
aas
popa
adc
jbe
fwait
cmp
dec
xchg
sti
mov
movsb
sbb
cmp
push
cltd
stc
or
test
fcoms
mov
mov
xor
push
jecxz
test
lret
shrb
jno
int
das
icebp
lods
scas
cmp
mov
xchg
lcall
sahf
adc
push
movhlps
and
inc
shld
insl
push
push
int
out
ja
fisttps
js
fsubs
fnsave
push
outsl
cmp
fwait
xor
cmp
aas
cmp
cs
popf
jmp
sub
push
js
in
lcall
mov
orl
and
and
movsl
mov
repz
jmp
in
jg
ror
xchg
mov
jns
scas
or
fwait
adc
cmpsb
mov
rorl
stos
sahf
sbb
push
shrb
lret
neg
adc
scas
mov
fcomi
inc
add
jo
sbb
imul
fdivs
cltd
fiadds
dec
das
fimuls
pop
fisttpll
imul
stos
test
xchg
cmpsb
mov
xlat
push
jle
adc
ja
lea
xchg
outsl
and
idivb
mov
pop
pop
call
dec
js
out
mov
popa
inc
fstps
pop
cmp
out
fbld
nop
or
call
xchg
pop
sub
sub
icebp
mov
shrb
test
mov
or
sarl
xor
lock
out
hlt
and
sub
xchg
or
xor
mov
scas
cwtl
cmp
cld
jae
mov
pop
cs
ret
pop
xor
cwtl
les
pusha
sahf
or
lahf
adc
mov
sbb
rcll
shlb
lds
mov
fcoml
stos
mov
mov
cmpsl
push
rcr
stos
test
push
jp
jecxz
data16
mov
add
pop
roll
int3
inc
lcall
pop
add
mov
fnsave
cmpb
push
stos
xlat
testb
loopne
xor
sbb
dec
insl
jmp
je
push
movsl
mov
out
and
nop
outsb
mov
sbb
out
sub
rcrl
mov
pop
dec
loop
scas
push
scas
xor
pop
xchg
xchg
mov
call
cltd
out
cmp
loop
mov
xor
cs
imulb
andb
rcll
jp
enter
scas
jno
dec
and
aas
xchg
out
cmp
aaa
or
in
cmpsl
in
inc
jmp
jno
jmp
addl
pop
sbbb
scas
xor
push
jecxz
add
cmp
negl
cld
add
xor
adc
sarb
in
into
cmp
pop
xor
cmp
inc
outsb
outsl
fistps
fdivl
jl
fdivrp
and
sbb
sub
pushaw
sahf
mov
mov
lock
sub
and
cmc
mov
xchg
lock
int3
sbb
sub
sbb
jb
push
xchg
mov
je
jmp
out
or
push
sbb
push
in
push
push
test
mov
cli
sub
out
addr16
in
inc
cmc
xchg
inc
push
into
adc
push
lcall
stos
mov
inc
in
loope
loopne
push
jb
mov
mov
sbb
xchg
mov
mov
sub
repnz
mov
aas
push
add
into
ja
fs
sub
jns
inc
pusha
mov
sbb
mov
jl
and
andb
cmp
out
adc
mov
pop
or
mov
pop
ja
bound
insb
out
jmp
lcall
in
dec
xor
clc
outsb
in
inc
jno
std
test
inc
push
inc
mov
mov
addr16
cmp
ds
mov
in
test
imul
icebp
mov
jne
sbbb
pop
cmp
mov
ss
push
ret
push
fidivl
test
test
add
sbbl
lret
and
cmp
mov
imul
popa
dec
pop
ret
jge
out
rcrl
dec
and
mov
cmp
dec
imul
mov
in
lds
add
jp
add
xchg
rclb
cmp
mov
iret
jge
lcall
mov
popf
inc
lret
adc
int
jnp
imul
cs
sub
rolb
outsb
lret
lock
add
add
daa
xchg
pop
add
push
jg
dec
jmp
add
arpl
pop
pushf
xlat
icebp
inc
movsb
mov
xor
sub
mov
outsl
push
sub
orb
adc
mov
push
inc
ret
scas
lahf
jp
adc
sub
push
aaa
cmc
stos
push
and
push
fnstenv
loope
add
aaa
mov
hlt
jne
xor
cmp
jp
stos
sub
int3
mov
jp
jge
out
fst
rol
repz
js
pushf
mov
pop
sub
mov
mov
xchg
cld
imul
pop
jmp
daa
mov
xchg
cmp
rclb
xor
scas
or
repnz
outsl
arpl
lods
out
adc
sbb
out
inc
out
leave
adc
pop
xchg
lahf
sti
lcall
mov
imull
mov
lods
jo
xlat
mov
arpl
test
adc
xor
sbb
fbld
mov
jg
jns
ret
push
xorb
hlt
jo
cmpsl
add
push
or
mov
call
add
push
daa
fmull
hlt
rol
inc
mov
lahf
add
lret
pop
or
xchg
imul
jecxz
outsb
mov
mov
div
fsubs
mov
int
out
scas
iret
scas
and
jae
popa
pcmpeqd
sub
dec
sbb
mov
ret
and
jnp
jne
sub
fsts
mov
loopne
andb
adc
mov
and
cmp
add
or
sbb
lods
xchg
add
cmp
adc
mov
jns
or
sbb
idivl
mov
and
lretw
pop
dec
push
gs
xlat
pop
in
fs
mov
xor
loopne
dec
into
outsl
dec
lcall
mov
mov
mov
and
cmp
addl
shl
arpl
mov
mov
cmp
loopne
lahf
in
adc
lret
lds
cmp
aad
sti
outsb
xor
xchg
xorl
pop
inc
add
psrad
cs
sub
pop
fnstenv
adc
out
pop
cmp
xchg
push
les
xorl
mov
mov
shll
xchg
adc
fstp
dec
xor
imulb
jbe
shlb
loop
jnp
insb
in
es
sbb
jle
pop
nop
lods
cmp
shrb
lea
push
sahf
xor
mov
outsl
mov
push
sbb
cli
fldl
clc
js
lret
mov
lds
mov
popa
jle
or
sti
push
ss
repz
sub
or
sti
inc
int
dec
mov
cs
testb
cmp
pop
push
mov
cli
mov
xor
cmp
mov
pop
xor
dec
mov
cmp
into
repz
sarb
leave
and
imul
mov
sbb
push
aam
xor
arpl
pop
mov
enter
popf
dec
and
fnstsw
or
outsb
fsubs
jo
jge
pop
mov
dec
and
movsl
cmp
stos
inc
out
lea
cmc
inc
push
cmpsl
movsw
and
in
sarb
ljmp
bswap
jo
or
cmp
cli
lret
push
cmc
mov
or
movsl
lea
adc
sub
or
mov
jp
pop
fiadds
pusha
mov
repnz
inc
adc
adc
gs
push
push
popf
adc
out
or
jmp
cs
lds
fildl
in
and
lods
xchg
sbb
lret
aam
leave
mov
cwtl
dec
jno
pop
mov
ficompl
and
pop
inc
or
cmp
push
dec
inc
jmp
push
sub
cmc
jle
repnz
fldcw
mov
add
and
fimuls
push
inc
in
icebp
cmc
jp
mov
fcoml
sbb
test
xor
xacquire
xchg
jge
adc
lds
sbb
lock
mov
into
icebp
scas
push
jb,pt
mov
out
clc
cmpsl
ret
push
adc
push
or
out
xchg
lcall
test
scas
rorb
cltd
jns
xor
add
and
cmp
xchg
mov
jp
jb
jnp
pop
loope
add
subb
testl
inc
sbb
fs
push
mov
ret
jecxz
mov
leave
std
nop
adc
jle
loop
xor
popa
repz
cwtl
clc
scas
mov
sub
inc
xchg
adc
mov
sahf
mov
xor
dec
movsb
xor
lahf
push
push
scas
aas
mov
sarl
mov
sub
pop
movsl
sar
les
cltd
ffree
ljmp
dec
adc
pop
pop
pop
inc
cs
sarl
rcrb
pop
mov
adc
mov
into
cmp
push
clc
out
sbb
mov
add
bound
iret
inc
xchg
pop
in
fistpll
imul
es
int
and
lcall
and
and
adc
in
xor
lods
mov
dec
jb
jb
jb
xchg
cmp
sub
push
mov
pusha
adc
cld
or
fcom
int
rorl
push
pop
mov
jl
jns
fwait
sbb
sahf
jne
fs
aam
ror
jp
lock
jp
sub
inc
sahf
push
test
mov
xchg
dec
or
shlb
xchg
jge
rol
jae
pushf
push
outsl
pop
out
xchg
inc
mov
nop
andb
mov
cld
mov
fildl
add
or
out
icebp
xchg
aas
push
add
daa
push
adc
jb
inc
in
into
jl
notl
out
lret
fldt
fmuls
adc
imul
jl
gs
sti
mov
add
cmp
cmp
in
int
jp
testb
loop
jbe
push
mov
subb
stos
fld
test
lret
mov
mov
sub
mov
dec
jle
push
test
push
and
xchg
dec
into
mov
cmp
add
adc
int
test
or
and
jnp
test
cmp
pop
mov
dec
fwait
sub
inc
xchg
dec
hlt
lret
in
pushf
icebp
adc
jne
decb
jle
ds
sub
jae
enter
mov
jg
sub
jae
push
jnp
push
cmpsl
jbe
ss
fnstenv
out
loopne
mov
or
push
imul
sub
rorl
jg
lods
pop
movsb
ljmp
mov
jl
pop
and
mov
ficoms
mov
add
sti
fs
shlb
rclb
dec
roll
sub
mov
xchg
sub
out
pop
orb
inc
lods
cwtl
shlb
lret
idivl
les
and
cmovbe
data16
xor
jmp
inc
call
sub
cmp
jnp
jecxz
cmp
xor
xor
mov
outsl
push
mov
test
iretw
addl
and
xchg
arpl
pusha
jecxz
nop
cltd
inc
scas
movsb
dec
cmp
repz
xchg
inc
xlat
xor
jl
cltd
xchg
andb
mov
pop
test
lds
mov
lret
xor
xchg
popa
push
cmc
ds
int
in
mov
cs
leave
test
inc
jmp
das
pushf
loop
int3
shll
pop
xor
out
addl
add
into
mov
loop
fsubp
add
enter
scas
push
fwait
mov
jns
cwtl
and
mov
lock
test
or
xchg
jecxz
jl
cmc
inc
fcomps
into
jle
sarl
nop
call
ja
mov
push
in
lods
push
movsb
and
mov
jnp
mov
data16
fabs
je
cmp
inc
in
movsb
mov
pop
popf
int
push
push
pop
mov
movd
pop
insl
inc
sti
mull
and
pop
xchg
lcall
aas
mov
inc
xor
inc
cmp
inc
out
test
jge
fstpt
fidivrs
lcall
out
cli
sbb
fwait
out
inc
mov
cmp
sahf
ret
daa
cmp
mov
and
clc
mov
push
fimull
xor
stc
mov
cld
iret
std
dec
repnz
fwait
push
push
push
inc
dec
mov
jp,pt
clc
repz
or
inc
add
lods
popa
xlat
lods
push
mov
ss
xor
fs
xor
lods
cli
mov
js
xor
leave
ret
pop
sbb
push
mov
xor
jb
lock
fucomi
std
int3
mov
outsl
into
mov
mov
xor
xor
jnp
cmp
and
aaa
xchg
jb
fs
fbstp
fisubs
out
cld
fwait
sub
fwait
shll
jge
xchg
aaa
shll
and
sub
inc
push
pushf
pop
jecxz
pop
ret
je
dec
push
cmp
std
adc
movsl
dec
test
loopne
jne
flds
les
enter
iret
fbstp
fidivrl
test
and
pop
add
jg
cmp
fdivrl
packsswb
cmpsb
out
rcll
jg
stos
mov
jge
sub
mov
cmp
insb
mov
ljmp
fcompl
inc
mov
and
add
xchg
out
rclb
push
stos
or
call
dec
add
cs
jmp
hlt
fcom
insb
vzeroupper
pop
icebp
push
pop
jns
adc
aas
jbe
stos
and
sbb
pop
sbb
pusha
or
jnp
pop
lahf
xor
dec
and
xor
js
loop
adcl
enter
push
adc
cs
enter
enter
inc
imul
add
cmpsb
xchg
push
adc
jle
sbb
lock
imul
inc
fnsave
sbb
mov
cmp
jle
in
sub
sahf
sbb
xor
xchg
sbb
pop
push
gs
imul
jns
clc
cmp
mov
jo
arpl
insl
inc
sub
xchg
or
lcall
clc
orb
loop
fstpl
cli
std
aad
lret
std
jle
adc
pop
jae
xchg
nop
sbb
int3
jo
pop
arpl
cli
pop
pop
add
sbb
roll
mov
pop
jle
adc
mov
fidivrs
mov
leave
stc
push
xor
cwtl
mov
cmp
lahf
xchg
stos
sarb
ss
push
push
dec
leave
ljmp
dec
icebp
dec
adcb
popa
mov
and
mov
adc
in
and
mov
xchg
hlt
pop
jo
xor
xor
add
fwait
jns
xchg
clc
and
mov
mov
adc
pop
mov
xor
hlt
pop
out
mov
xchg
mov
fsubrl
cmpb
cmp
jns
mov
pop
lock
dec
les
test
mov
xchg
leave
insl
ljmp
jae
in
adc
cmpsb
fwait
cmp
adc
and
divb
scas
mov
repz
out
cmp
and
mov
and
cmpsb
iret
xlat
add
aam
into
movsb
fcmovbe
cmpb
dec
and
add
lret
pop
xor
jae
ja
les
in
or
xor
mov
pop
fs
jae
rclb
popf
je
mov
and
push
sub
xchg
fs
adc
test
lods
fidivrs
mov
fsubrl
inc
jg
inc
mov
test
ret
ja
push
jb
sti
in
xchg
xchg
fildll
mov
jg
lret
cli
jne
fmuls
adc
push
insb
jns
movsl
incb
xchg
out
sbb
loop
pop
jae
aad
push
in
push
xor
add
inc
divl
jp
dec
pop
adc
push
mov
in
inc
xor
pop
cli
lods
push
les
xchg
jg
sub
mov
cmc
adc
pop
sbb
inc
dec
lds
mov
push
xor
sbb
shl
jmp
iret
addr16
orps
mov
stc
jbe
dec
or
mov
dec
jae
lock
adc
sub
rclb
inc
push
xchg
add
xchg
xlat
rorl
lret
add
mov
xor
xlat
stos
pop
pushf
ret
mov
jbe
lea
aad
and
sub
addr16
pop
stos
and
shlb
int
mov
sahf
sbb
sbb
xchg
mov
adc
mov
jb
adc
aam
cmp
aam
in
imul
shl
jg
cwtl
notb
es
rorl
xchg
in
inc
sti
mov
leave
mov
jae
pop
mov
int3
movsb
cltd
inc
loope
cmpsl
ficompl
xchg
inc
loopne
cmp
pop
and
and
sub
pop
mov
sbb
or
test
push
or
cmp
jne
xchg
jge
test
arpl
cmp
pop
ret
iret
fwait
jg
inc
popa
push
daa
inc
mov
cwtl
cmp
xchg
and
lahf
adc
je
jae
dec
insb
push
or
or
push
jge
jbe
call
xlat
nop
push
pop
add
insl
jne
pop
jbe
dec
movsb
inc
adc
mov
insl
icebp
mov
call
push
ss
xor
rolb
cs
enter
xchg
lret
lahf
jno
and
cs
mov
clc
lods
es
xchg
xor
fwait
mov
jnp
jl
mov
mov
push
rol
rorl
jo
mov
stos
jge
jno
imul
jno
sbb
cmp
mov
xor
cmpl
loop
xchg
xchg
nop
ret
je
not
popf
adc
xchg
push
cmp
cmpsl
mov
and
lods
enter
je
xchg
cmp
jge
jne
in
pop
repnz
fildl
mov
mov
stos
xor
mov
and
mov
jo
xchg
pop
iret
or
cli
mov
or
cmp
cli
scas
jmp
movd
loop
or
sbb
ss
sbb
jmp
rorl
mov
and
jns
and
lcall
jo
loope
cltd
push
gs
repz
cmpsl
shlb
pop
sub
movl
sbb
adcl
lret
sbb
jg
jnp
aad
in
out
insb
clc
lcall
lock
stos
in
cwtl
popa
imul
in
xchg
stos
lock
pop
pop
jb
cltd
pop
cmpsl
xor
int
xchg
fcoms
jge
scas
push
pop
mov
mov
orb
push
shl
fimull
push
movsb
icebp
in
aam
pop
mov
gs
xor
int
or
pop
cli
test
ss
xchg
pop
jle
adc
jns
inc
dec
mov
xor
negl
jmp
adc
dec
call
shll
adc
add
or
mov
sub
cli
or
subl
mov
in
shll
out
lds
pop
cmp
dec
mov
mov
jo
scas
xchg
push
jg
pop
dec
fld
or
in
jae
mov
or
fwait
call
sbb
mov
aaa
pop
jns
rolb
sub
xor
xchg
pop
sbb
std
loopne
dec
push
adc
adcb
call
mov
mov
sub
and
push
jb
je
add
lods
enter
je
xchg
or
dec
sarl
cltd
mull
mov
sbb
loopne
sbb
test
lahf
out
push
dec
popa
mov
ret
mov
loopne
lods
ljmp
cmp
push
push
aad
inc
adc
and
sub
in
or
inc
bound
adc
pop
jnp
clc
xchg
mov
movsl
ljmp
inc
push
imul
fbstp
cmp
pop
pop
out
bnd
lods
lret
pop
mul
push
adc
jg
jb
out
dec
int
imul
adc
lods
test
cmp
mov
and
pop
jbe
fwait
push
mov
cmp
ret
and
and
fnsave
stos
nop
cmc
jbe
dec
push
cmp
inc
insl
notb
jne
jle
or
pop
xchg
sbb
shl
push
mov
movsl
imul
testb
leave
adc
insl
inc
andb
hlt
fmuls
sub
movsl
data16
jl
inc
bswap
cmp
cli
aaa
xchg
notb
jbe
sahf
das
xor
mov
cmp
fs
fnstcw
cs
and
lds
cs
or
divl
jo
or
pop
mov
subb
pop
addl
inc
and
mov
int
xchg
mov
xor
adc
rcl
inc
and
flds
mov
fcoml
lret
test
and
mov
cwtl
cwtl
fwait
push
dec
add
sub
pop
push
popf
mov
push
xor
push
leave
mov
icebp
xor
pusha
andl
sbb
mov
mov
jne
sub
lds
shrb
js
sbb
cmp
lods
inc
icebp
add
test
into
mov
push
inc
mov
lock
scas
imul
push
insl
out
mov
sbb
and
lcall
dec
xor
addl
push
mov
xor
xor
dec
cmc
sub
jnp
inc
mov
and
sub
add
stos
stos
roll
fidivl
nop
xor
jae
addb
test
dec
push
cmpsl
scas
jg
sbb
xchg
add
arpl
mov
lahf
scas
clc
lock
add
push
sbb
cltd
leave
lea
or
mov
ret
outsb
fstps
insb
fnstsw
ljmp
sbb
mulb
imul
jle
mov
shr
shlb
sbb
push
sub
nop
inc
pop
mov
push
test
dec
pop
in
addr16
call
in
sbb
fdivs
std
push
or
and
loope
mov
fnstcw
nop
addr16
fbstp
dec
inc
sbb
fidivs
ljmp
cmp
aaa
cld
inc
xchg
sub
jmp
and
adc
les
mov
in
adc
jg
push
push
sarl
or
int3
out
loope
int
push
sub
ret
pop
pop
xchg
xchg
or
xor
sub
fcmovnbe
sub
inc
dec
enter
xor
push
jecxz
aas
cld
push
or
jle
mov
loopne
mov
negl
add
popf
arpl
sahf
testl
insl
push
inc
mov
jle
mov
mov
mov
fcoml
inc
mov
and
inc
cmp
adc
fstp
pushf
or
fwait
sti
ds
mov
sahf
inc
pop
je
addr16
jmp
aam
dec
xchg
sbb
mov
in
mov
push
shrb
daa
cmp
lea
inc
jnp
mov
outsb
mov
adc
lds
sbb
enter
subl
pop
push
ds
dec
inc
iret
mov
popa
add
jne
insl
nop
xchg
movsl
ljmp
dec
in
cmp
loopne
pop
and
jno
xchg
cmp
popa
bound
iret
sub
pop
aad
push
inc
pop
scas
sahf
push
mov
mov
jp
cmc
movl
cltd
in
mov
mov
sub
xchg
lds
adc
push
adc
cmp
std
inc
jp,pn
fcoms
out
cmp
pop
cwtl
inc
mov
or
pop
push
xor
mov
icebp
xorl
insb
xor
add
fistpl
lcall
dec
rorl
iret
xlat
adcl
divb
or
xor
or
mov
mov
inc
jl
xorb
sub
aaa
push
leave
leave
adc
push
jmp
lods
std
les
pop
aam
mov
pop
test
jnp
push
lahf
or
gs
int3
or
testb
lods
mov
dec
bound
sbb
or
push
jl
pop
orl
jae
sti
addl
jo
cmp
or
add
mov
notl
and
and
jg
rolb
inc
addl
pop
ds
scas
pop
out
into
push
lcall
lock
jb
pop
loope
inc
je
insl
mov
subb
fs
xor
insb
sbb
adc
mov
add
inc
mov
ljmp
pop
xchg
test
jmp
cmp
ret
lret
adc
cld
inc
clc
fwait
ljmp
enter
sar
cmpsl
enter
mov
test
stos
fsubrs
test
adc
inc
jo
stos
ds
jnp
cmpb
jge
into
cmpsl
sub
in
pop
aam
mov
push
fisubrs
push
xor
sub
push
and
jge
mov
popf
sbb
aaa
sti
sti
sub
xchg
addl
pop
ret
sbb
xor
sbb
pop
inc
cmp
or
pushf
cmp
cmp
popf
dec
or
jl
sub
cmp
jg
movsb
or
cmp
bound
into
pop
shlb
push
jnp
mov
jmp
lret
jne
outsb
jg
add
jmp
cmp
xor
mov
mov
xchg
rclb
push
fcompp
ss
je
xor
imul
mov
and
xchg
in
xor
mov
lods
lcall
pop
addr16
xor
cmc
mov
xchg
gs
rcrl
sub
sti
inc
arpl
cmpsb
xor
push
je
jnp
cmp
or
pop
push
pushf
lods
sbb
lret
inc
or
cli
ljmp
push
rcr
jl
xor
inc
jmp
mov
fmull
or
and
mov
push
mov
das
mov
js
test
wbinvd
and
lock
in
cmp
and
xchg
add
xchg
xlat
data16
push
xor
fimuls
jne
xchg
adc
cmp
pop
add
and
mov
pop
addr16
out
mov
mov
mov
fildl
mov
xor
sub
stos
pop
mov
loop
jne
xchg
clc
mov
inc
xlat
rcrb
rclb
fadds
cmp
sbb
sti
iret
xor
in
inc
xor
mov
push
mov
cli
je
test
dec
fadds
mov
cwtl
dec
adc
dec
xor
shrl
add
or
mull
fimuls
cmp
sbb
out
mov
mov
fdivl
mov
icebp
mov
cmp
jge
aaa
inc
icebp
add
xlat
int
lds
pop
test
mov
jno
xor
out
sbb
icebp
cmp
mov
rorb
push
xor
xor
movsl
int3
jae
shlb
xor
xchg
and
sar
je
in
push
sbb
addl
mov
jg
mov
das
cmp
push
jl
jns
add
mov
cwtl
imul
cltd
xchg
daa
jnp
mov
outsl
addb
fsubp
pop
inc
nop
and
inc
xchg
fmul
clc
mov
or
aad
mov
inc
call
inc
xor
in
push
cmpsl
jae
inc
test
or
xor
ljmp
sub
mov
jns
push
sub
mov
and
mov
iret
pop
mov
cs
orb
pop
mov
lods
popa
adc
or
and
cmp
fcompl
aam
bound
mov
mov
fs
loope
jb
lods
fcmovnu
addr16
lret
rclb
mov
inc
inc
in
pop
jmp
and
cld
mov
jbe
push
jge
addr16
hlt
scas
pcmpgtb
and
ret
dec
adc
ret
clc
pop
aad
cmp
cmp
xchg
and
mov
ja
xchg
imul
psubsb
cli
inc
push
outsb
nop
push
cmp
pop
into
pxor
test
cwtl
cmc
mov
flds
mov
test
inc
rcrb
xchg
push
imul
xor
mov
xchg
std
add
cmpsb
jno
neg
xchg
dec
mov
jo,pn
es
dec
andl
filds
sub
in
jge
sbb
jne
mov
fiaddl
popa
mov
lret
cmp
into
aas
clc
into
push
mov
mov
lahf
rclb
es
sahf
fldl
movsb
or
pop
int
int3
clc
push
mov
push
xchg
push
jae
outsl
jo
sub
ret
loop
rcrl
pop
je
dec
cmc
pop
push
outsl
stos
add
lret
mov
or
sub
or
push
scas
outsb
mov
adc
es
push
adc
pop
cmp
ret
jecxz
xlat
loope
jecxz
xor
es
xorl
aaa
shl
and
negl
xchg
enter
jmp
jmp
jb
xchg
out
mov
test
aam
hlt
pushf
in
out
mov
notl
mov
pop
in
test
in
loopne
sti
add
mov
add
cmpsb
and
pop
sbb
arpl
mov
mov
fiadds
mov
call
pop
pop
lods
cs
sbb
loop
dec
pop
cmpsl
jg
sbb
das
xor
lock
jbe
jo
dec
aaa
cwtl
inc
shll
lea
std
jmp
out
xchg
jne
or
or
or
or
jge
scas
fsub
bnd
pop
call
jb
jae
sub
repnz
mov
xor
fists
movsb
outsb
call
cmp
xlat
out
fldenv
mov
loope
aas
jb
aam
pushf
sub
add
ja
xor
lret
nop
mov
adc
cmp
jbe
jns
jae
dec
cmp
sub
xlat
jmp
xchg
mov
add
cltd
dec
pop
movsb
les
data16
subb
lock
push
rcrl
sub
out
insb
sbb
push
stos
out
mov
ljmp
inc
jbe
lods
movsl
mov
and
push
mov
and
sbb
add
pop
xor
adc
or
xor
adc
xor
cmp
test
int3
mov
xchg
lock
xor
sub
out
andl
sbb
push
or
mov
mov
cmp
roll
fmuls
sahf
sbb
mov
push
xor
dec
dec
cmp
cmc
jae
fwait
out
enter
sub
jo
les
mov
jmp
mov
shl
into
repz
std
enter
push
ds
fmul
push
inc
or
punpcklbw
inc
jo
pop
jle
rcr
dec
xor
jns
sar
fwait
dec
andl
inc
jne
divb
scas
sub
dec
imul
into
jne
inc
cmp
xchg
sbb
pushf
and
jmp
or
mov
or
js
push
test
lock
push
sbb
add
push
jmp
dec
int3
jp
lea
jecxz
mov
push
fisubrs
add
rcrb
fstps
enter
sbb
dec
ljmp
adc
fcomps
nop
arpl
push
mov
pushf
rorl
in
mov
pop
jb
pop
mov
mov
pop
out
and
xchg
fisubl
ficoms
das
push
mov
push
mov
sub
imul
inc
inc
mov
insl
adc
sbb
lret
or
std
mov
cmp
pusha
adcl
adc
mov
mov
test
push
pop
ja
test
ds
cmp
stos
fnstsw
sbb
cs
push
repz
stos
test
movsl
adc
shll
jecxz
icebp
jb
sub
dec
mov
mov
loope
test
push
repz
mov
lock
aas
andb
pop
or
repz
rolb
inc
push
dec
xchg
enter
adc
sbb
enter
gs
dec
mov
out
sar
pop
in
repnz
pop
add
xor
push
mov
fstl
pop
es
outsb
rcr
scas
orb
gs
push
push
mov
fistpll
jne
cli
scas
outsb
out
out
adc
dec
jns
xchg
loop
sbb
jnp
cmp
jle
and
stos
pop
sub
add
cmp
adc
push
aas
dec
xchg
inc
or
pop
xorb
push
outsl
xor
arpl
dec
mov
sbb
gs
dec
into
xlat
push
gs
inc
pop
pushf
mov
fucompp
insb
js
int3
subb
inc
bound
jle
adc
lods
push
mov
lahf
imul
sti
mov
xchg
stos
jnp
push
or
sub
stos
fadds
rclb
imul
push
inc
dec
dec
test
inc
jno
insl
rorl
pop
xor
mov
push
sub
int3
cmp
shlb
sbb
mov
rorl
xchg
outsl
adc
add
jp
cmc
jge
cwtl
scas
cmpsb
cmc
inc
sbb
aaa
sbb
push
fs
mov
dec
loop
pop
mov
adc
xchg
divl
mov
shll
jecxz
cmp
std
dec
pop
test
push
lods
add
jle
jmp
xchg
shll
imul
cmp
ret
or
xor
push
in
stc
repnz
xchg
ret
cmp
pop
push
test
dec
ret
lret
xor
push
adc
sbb
bound
pop
dec
mov
inc
fisubl
ds
mov
push
mov
cltd
mov
int3
mov
sub
idivl
jl
inc
dec
xor
es
jmp
push
and
scas
out
inc
out
mov
xor
xchg
fsub
lds
in
fidivs
or
cmpsb
addr16
mov
inc
xchg
mov
push
adcl
cltd
int
sbb
push
in
xor
fnstcw
mov
cmp
inc
es
in
or
ja
cmpsl
repz
repz
je
mov
sti
mov
and
jecxz
add
ds
add
inc
imul
or
dec
or
cltd
call
rorb
js
add
xchg
popf
xor
push
sbb
inc
lret
lcall
mov
lds
and
sahf
sub
push
mov
lds
dec
or
rorb
dec
aas
dec
push
cmp
dec
adc
xor
hlt
loop
enter
pop
pop
inc
stos
add
add
pop
or
or
in
scas
sbbl
mov
mov
xchg
jae
sbb
test
adc
shrl
mov
dec
sub
add
push
and
xchg
mov
cmp
push
and
iret
cmp
and
pop
pop
addr16
pop
notl
pop
pop
andl
mov
pop
xchg
outsl
pop
sub
ret
sub
xchg
mov
push
mov
popa
aas
xor
pusha
popf
pushf
cmc
adc
add
cwtd
cld
and
xor
in
xor
imul
shlb
xor
push
pop
mov
ja
xchg
dec
or
gs
add
movsb
add
adc
std
and
adc
jmp
aam
insb
fstpt
adc
repnz
aas
sti
add
lahf
sbb
fdivrl
pop
ds
push
adc
sar
imul
bound
dec
jle
scas
dec
mov
push
xor
adc
lret
sbb
mov
push
or
lea
sub
jb
jb
shlb
mov
jmp
dec
dec
mov
push
jnp
mov
cli
dec
dec
je
ljmp
icebp
ss
cmp
fmulp
ficompl
mov
pop
push
add
in
shll
pusha
lcall
andl
roll
inc
xchg
ret
loopne
jo,pn
push
aad
test
push
push
adc
cld
adc
jo
sub
sbb
imul
mov
adc
push
dec
and
add
xor
and
add
add
push
movsb
mov
int3
outsl
mov
xchg
mov
stos
dec
fdivrl
insl
sbb
dec
dec
in
cmp
dec
lcall
movsl
cmpsb
or
xor
loop
outsb
mov
aas
insb
shl
fdecstp
lods
sub
or
xchg
stos
ret
ja
cmc
push
cmp
pop
inc
pop
inc
test
hlt
mull
sbb
ret
mov
or
loopne
jnp
fistl
jecxz
jecxz
hlt
pop
in
fcoml
sbb
dec
add
mov
adc
and
andl
fistps
incb
sbb
ret
cmp
loope
fldt
jle
sub
xor
cmp
pop
mulb
cmp
or
out
jmp
shlb
push
add
aad
ret
cmc
rcl
mov
jo
dec
je
ftst
add
pop
cmc
mov
int3
mov
fnsave
sbb
add
jecxz
test
shll
out
lahf
iret
xor
repz
fimull
jnp
scas
xlat
lcall
push
mov
es
popa
sub
ror
or
mov
pop
xor
imul
addr16
xor
mov
sub
fcomi
out
cmp
out
into
lahf
push
shlb
pop
inc
push
add
mov
cmp
iret
popf
xor
xchg
xchg
call
rolb
sbb
ja
test
cwtl
jecxz
xchg
fimuls
in
imul
add
pop
stc
call
and
in
push
lock
dec
outsl
mov
sbb
aaa
xchg
add
cmp
adc
rcll
cld
xchg
ret
fs
xor
mov
fidivrs
notl
imul
add
sarb
jl
mov
repnz
cmp
adcb
mov
pushf
jno
mov
insl
and
lea
cmp
in
mov
data16
shll
push
cmc
mov
dec
fs
andb
or
sub
pop
push
and
xor
in
xchg
shll
jl
cmp
nop
mov
popa
lods
fadds
xor
in
divb
xchg
fidivrl
push
in
pop
scas
sbb
jns
pop
leave
int
sub
cmpb
dec
add
cmpb
add
add
in
cs
cwtl
push
loop
or
push
xor
adc
dec
mov
push
inc
or
pusha
pop
sti
cmpsl
xchg
jae
ror
push
jb
test
rcrl
sub
inc
mov
test
mov
adc
push
inc
lock
imul
ficoms
sarl
rol
xchg
in
stos
movsl
lods
lea
test
or
addb
sub
fs
mov
mov
cmc
js
stos
xchg
adc
sbb
xor
out
mov
in
stc
or
pop
insl
mov
ds
in
fsubrs
inc
in
shrl
sbb
ss
jg
and
es
lea
enter
popw
aas
inc
sub
cld
or
mov
cmp
int3
inc
dec
test
add
rcrb
cmp
insl
jle
mov
inc
adc
aad
aas
mov
sti
cmc
out
cmp
js
insb
jl
or
repnz
hlt
ljmp
mov
push
fisttpl
jbe
in
cmovl
fxch
sbb
sbb
daa
push
movsb
mov
cmpsb
sbb
int3
inc
unpckhps
inc
repnz
sbb
sbb
jno
fisttpl
test
popf
cmp
and
sub
xor
xorw
or
testl
mov
lret
push
loop
xchg
mov
xchg
rcrl
cli
imul
repnz
cmp
cmp
and
mov
mov
mov
mov
outsl
lods
inc
adc
gs
sub
shlb
int3
push
popa
or
arpl
xor
test
xor
out
xor
out
inc
adc
call
xor
jmp
mov
fildll
in
testl
sahf
inc
or
mov
adc
and
cli
movsb
mov
xor
jecxz
dec
cmpsb
or
clc
int3
repnz
mov
jle
pusha
out
xorl
push
mov
loope
sub
sub
sbb
push
data16
int3
mov
lcall
stos
cmp
jp
sub
mov
ret
jae
fildll
sub
pop
push
out
xor
ljmp
adc
adc
in
insb
jg
push
lret
lock
adc
xor
pop
or
mov
fcoml
out
xor
xlat
cmp
add
sahf
push
sarl
adc
sahf
test
and
push
jmp
mov
jnp
cmpsb
push
cmp
iret
xor
aam
flds
sbb
lds
lret
pop
xchg
or
xlat
and
adc
aam
stos
cmp
pop
ror
loop
jae
ret
cmp
xchg
stc
pop
cld
or
jmp
inc
imul
repnz
js
int3
cmp
insb
sub
inc
push
fucom
fldl
icebp
imul
cmc
pop
daa
mov
inc
sbb
sahf
scas
mov
fcmovbe
xor
sub
int3
xchg
push
mov
popa
bound
push
sub
mov
push
fs
xchg
push
pop
addr16
mov
and
mov
jns
inc
jp
push
sbb
lea
or
mov
dec
jnp
sub
lods
cmp
cmc
mov
cltd
xchg
xlat
std
js
pop
push
xor
mov
xchg
mov
stos
dec
and
push
mov
push
xchg
or
push
rcl
das
adc
inc
sbb
add
std
cmp
test
add
movsb
pop
mov
xor
sub
cmc
xor
insl
xchg
fsubs
rcrl
addr16
jno
push
stc
and
xchg
mov
out
mov
lock
jnp
iret
mov
pop
push
xor
push
aaa
inc
jecxz
mov
xor
dec
addl
pop
cmp
pop
jg
xlat
pop
subl
in
xchg
xlat
sarl
mov
push
aam
stos
pop
rorl
out
cmpsb
jge
fsts
xor
jl
and
push
adc
push
ljmp
sub
in
gs
push
jnp
lcall
mov
mov
pop
aaa
and
sub
mov
mov
enter
inc
lock
sarl
cmp
dec
stc
and
cmc
in
sbb
xor
ret
repz
repnz
pop
mov
fs
jo
in
lock
mov
orl
loope
dec
cmp
jecxz
inc
mov
sbb
mov
or
int
lcall
cltd
cmp
cmp
pop
popa
cli
mov
mov
pushf
mov
pushf
icebp
sub
xchg
movsb
mov
lods
es
mov
fstl
int3
dec
shlb
divb
dec
es
inc
out
and
mov
dec
aad
fnstsw
cwtl
sar
bound
dec
push
sub
pop
add
shll
iret
pop
std
addb
es
jnp
sarb
cli
xchg
scas
lret
pop
das
nop
cmp
or
mov
sub
cltd
les
pop
dec
cmpl
les
in
sbb
jmp
fsubp
aam
sbb
mov
mov
add
dec
imul
and
inc
stc
inc
cmp
jecxz
inc
outsb
aam
lods
out
test
jl
dec
xchg
hlt
push
loop
aad
mov
cmpsl
jmp
mov
daa
ret
inc
ds
or
adc
push
and
and
lret
divb
loop
fs
sub
mov
punpckhdq
and
out
mov
in
add
push
mov
mov
aaa
xchg
pop
mov
cmp
out
add
pop
cmpsb
cmp
pop
pop
or
xor
shl
add
mov
bound
xchg
sbb
adc
addl
movsb
cmp
mov
and
inc
lahf
imul
hlt
mov
pop
fldcw
mov
std
loope
int
cltd
cs
inc
or
or
test
inc
aam
sti
leave
cmp
lret
mov
inc
cmp
xlat
adc
cmp
add
cltd
add
insb
fstl
es
pop
out
pxor
xor
jge
out
jbe
adc
das
and
pop
das
pop
lret
dec
loop
inc
push
inc
insb
popa
dec
mov
in
inc
xchg
mov
inc
fs
out
dec
push
sbb
aad
sub
lods
sbb
cmpsl
leave
stc
loop
lret
push
stos
loope
sub
jo
arpl
idiv
outsl
sbb
mov
test
roll
cld
push
mov
scas
in
mov
out
pushf
mov
adc
mov
das
pop
push
imul
inc
mov
movsb
pusha
mov
pushf
jo
mov
pop
and
pop
push
ficompl
fiadds
cwtl
add
mov
repz
add
pop
pop
add
mov
leave
pop
int
jmp
jb
sub
divl
or
sub
rcll
test
test
insl
je
dec
out
mov
sub
push
cld
add
mov
test
pop
push
push
aam
in
xor
pop
dec
push
dec
sub
mov
orb
std
and
xchg
int3
in
inc
pop
mov
push
adc
and
push
cwtl
push
pop
or
sub
shr
mov
add
mov
ja
ret
daa
or
mov
stc
iret
push
pop
sbb
mov
das
daa
sti
cmc
das
lock
out
mov
mov
test
out
xor
nop
bnd
std
ja
movsb
imul
inc
in
cmpsb
shlb
and
sbb
aaa
mov
scas
imul
sbb
and
es
pushf
mov
lods
fstl
dec
lret
or
sbb
sahf
fstl
jg
push
shr
or
mov
mov
aas
into
cmc
pop
fidivrs
ficoml
in
loopne
inc
cmpsl
pop
cmpsl
in
add
cmpsl
ljmp
xor
test
ljmp
mov
add
sahf
mov
aas
ret
mov
adc
loop
fwait
std
xchg
xor
push
andb
mov
or
stos
and
push
inc
xchg
xchg
mov
jb
pop
popa
and
pusha
dec
dec
sub
orl
mull
mov
adc
xchg
popf
mov
push
dec
pop
shrl
rcll
gs
push
into
mov
xor
mov
add
cli
lods
jns
out
inc
dec
ret
push
xchg
notb
xor
enter
das
mov
stos
adc
pusha
push
xchg
jo
fildl
add
xor
out
leave
add
stc
ljmp
setge
sbb
lcall
adc
pop
fwait
lods
imul
xchg
repnz
std
dec
mov
sub
lcall
push
push
jbe
sub
push
test
sub
sub
sar
mov
in
and
addr16
push
xchg
sbb
inc
arpl
fmuls
mov
jmp
lea
insb
nopl
mov
movsl
std
das
dec
pop
mov
or
icebp
push
xchg
xchg
test
loope
sub
adc
mov
mov
mov
hlt
mov
hlt
pushf
mov
dec
ja
cmp
hlt
xchg
adc
sub
clc
sbb
push
test
adc
fs
jmp
pop
imul
or
cmc
mov
jo
pop
ds
push
xor
lret
je
std
les
andl
mov
mov
mov
xor
call
xor
sbb
xor
test
iret
push
pop
test
aas
sbbl
insl
mov
inc
cmpb
iret
push
sub
rcrb
lods
dec
or
sub
inc
mov
sbb
outsl
loopne
push
xlat
pop
jb
xchg
jae
jg
rorb
push
movsl
leave
inc
jg
or
insb
sbb
pushf
cwtl
fildl
xchg
mov
mov
call
stos
out
mov
mov
and
sbb
ja
sti
jae
jo
mov
mov
pop
gs
inc
xchg
out
sub
andl
add
inc
mov
push
sbb
ficoml
adc
hlt
cld
xchg
inc
arpl
pop
stc
loopne
cmpsb
push
and
or
not
jp
pop
sub
rcrb
jp
mov
adc
bound
inc
out
jb
push
ret
scas
add
push
hlt
mov
daa
add
leave
and
imul
sbb
push
or
dec
adc
xchg
gs
push
pop
pop
jge
rol
jge
shlb
add
push
imul
add
adcl
bound
fistpl
inc
and
lcall
lds
test
pop
xlat
sub
movsb
pop
ljmp
lea
jge
ret
pop
rcrb
ds
cld
cmp
test
pop
into
js
int
lea
cmp
imul
and
cmpsb
in
pop
cmp
dec
sub
sbb
popf
mov
in
jecxz
nop
xchg
jae
cmp
push
daa
daa
jo
xchg
stc
adc
mov
add
add
mov
in
jge
adc
jo
jmp
sbb
stc
imul
movsb
sub
mov
xor
dec
pop
xor
xchg
dec
adcb
adc
mov
loopne
ja
test
repz
mov
jbe
add
adc
xor
add
mov
sbb
lds
inc
lds
pop
inc
sbb
daa
jbe
push
push
gs
jle
xor
call
daa
hlt
ja
sub
sbb
in
out
sub
jne
pop
daa
enter
mov
das
outsl
push
arpl
inc
negl
mov
in
inc
adc
mov
mov
pop
fildl
imul
cs
push
mov
cmp
scas
idiv
das
aas
inc
leave
lcall
mov
or
sti
jbe
pushf
repz
cmc
stc
int
cmpsb
push
dec
push
adc
outsb
fucomip
mov
hlt
push
mov
pusha
lahf
pushl
lcall
push
in
cmp
or
repz
aam
paddusw
int3
cmc
lahf
jg
imul
subl
xchg
jg
ret
imul
xor
sarl
add
test
fidivl
repnz
iret
mull
jecxz
push
and
sarl
lds
lds
push
out
cmp
adc
push
xor
jae
pop
mov
inc
in
nop
mov
cltd
out
cmp
inc
xor
addr16
dec
es
pop
outsb
mov
and
cwtl
sbb
outsl
fsubrs
mov
mov
push
mov
in
enter
testl
test
dec
test
and
in
and
cmp
push
mov
adc
cmp
and
sbb
stc
push
sub
mov
out
in
xor
outsb
imul
mov
inc
push
lcall
outsl
imul
arpl
cmp
repnz
pop
sbb
or
pusha
pop
xor
mov
sub
pop
subb
inc
mov
sbb
out
stos
bound
cwtl
xor
int3
movsl
push
jb
mov
sub
fs
mov
loope
fdivrp
out
stc
inc
add
xor
and
call
out
mov
mov
out
aad
sub
xchg
xchg
lods
cmp
insb
xchg
test
out
cld
xor
fdivs
xchg
fdivrs
sar
loop
jge
push
mov
popa
lods
aam
sarl
aad
test
movsl
sub
in
aad
push
in
stos
inc
shll
clc
pop
mov
xlat
mov
not
shl
adc
jbe
idivl
push
sub
movsl
inc
jl
jp
adc
mov
inc
inc
aas
mov
xchg
xchg
pushf
inc
out
xor
out
cli
sbb
std
into
or
cmpsl
push
mov
sub
or
scas
ror
jp
sbb
push
push
movsb
push
loope
push
repnz
push
jl
enter
add
cmp
scas
dec
stos
lcall
fdivl
pop
add
sbb
or
out
fwait
add
sub
mov
nop
arpl
mov
pop
jno
jle
adc
fildll
subl
pop
hlt
lcall
add
out
mov
inc
movsl
pop
int
sbb
dec
dec
sti
and
sub
fcmovne
sub
call
lret
enter
imul
icebp
arpl
lds
in
mov
rcl
mov
push
imul
jmp
nop
data16
inc
and
insb
rcrl
leave
je
outsb
jbe
mov
mov
cmp
bound
lds
lods
xor
stc
jnp
sti
mov
inc
xor
and
push
icebp
out
and
mov
shll
arpl
cmpsl
pop
lret
js
sbb
and
jno
or
loop
jl
sub
fs
jae
mov
xchg
leave
mov
jns
pop
inc
das
push
aaa
or
loop
dec
repz
divb
cmp
or
aam
sub
push
insl
mov
stos
dec
inc
test
pop
ljmp
lods
mov
inc
subl
in
inc
and
shr
cmp
jle
mov
andl
lods
mov
cmpsb
cmc
stos
leave
in
xchg
adc
xchg
add
scas
mov
add
mov
out
das
or
mov
dec
xchg
sub
pop
add
fmuls
rcl
in
lcall
push
add
push
cmp
push
sar
push
mov
or
pop
push
mov
out
and
cmp
push
movsl
xlat
sbb
pop
out
push
sub
das
pop
dec
mov
roll
push
cld
add
mov
into
mov
lock
adc
jnp
and
or
mov
add
cwtl
sub
mov
jge
aam
test
aaa
lods
popa
nop
sti
test
and
ljmp
ror
jl
out
cld
lock
sarl
sub
jae
gs
cmp
xor
mov
jecxz
ret
aad
xor
lret
push
mov
insb
scas
sub
jnp
push
clc
les
mov
clc
repnz
xor
inc
iret
sarb
cmp
push
mov
lods
xchg
inc
hlt
loope
dec
jbe
push
or
inc
mov
clc
rcr
dec
mov
jmp
dec
pop
mov
repnz
ret
jmp
lret
add
pop
loopne
test
sub
adc
call
jg
jb
ret
fs
test
pop
mov
xchg
scas
sub
loope
ficoms
outsl
roll
ja
mov
mov
pop
movsb
xchg
or
adc
movsb
pop
adc
repz
xor
lret
arpl
adc
pop
xor
xchg
shr
jnp
xchg
lds
arpl
fisttps
dec
notb
xor
jno
inc
ds
mov
in
inc
jbe
clc
cmc
mov
aaa
fwait
or
aas
mov
lods
sub
aam
mov
icebp
leave
pop
iret
clc
addr16
pushl
fnsave
or
mov
sub
and
repz
das
cmpsl
pushf
adc
inc
xor
or
add
ljmp
loopne
movsb
dec
inc
aaa
jge
push
add
mov
or
add
cltd
xor
adc
push
aad
jns
and
imul
addr16
mov
leave
sub
daa
xlat
daa
jns
insl
lea
fs
popa
adc
or
stc
inc
dec
hlt
adc
pop
or
cmpsb
stos
inc
jge
or
xor
jle
scas
pop
divl
jge
mov
push
mulb
les
movsl
jmp
pop
mov
mov
mov
push
aam
pop
and
mov
or
adc
push
dec
pop
int3
sahf
out
scas
pop
ja
in
xchg
jb
sbb
mov
stos
leave
xchg
lods
fwait
cmc
stos
mov
jnp
sar
pop
jnp
into
into
mov
aam
xor
or
jl
popa
fisubl
adc
scas
xor
mov
mov
push
mov
mov
mov
test
subb
pop
ret
cmp
nop
int
fs
sahf
mov
and
maxps
mov
outsl
sti
popa
cli
out
je
jge
mul
js
fildll
sbb
clc
pop
inc
ret
in
fistpl
popa
cmp
push
ljmp
inc
xchg
je
cmp
push
xchg
insl
test
ret
cmpsl
cmp
shll
sub
adcl
loope
and
mov
jo
aad
xchg
fildll
insl
xor
es
pop
movsb
rclb
sbb
insb
in
sub
cmpl
movsb
adc
xchg
inc
mov
fidivl
ljmp
pop
in
push
mov
pop
fnstenv
xchg
sti
pop
out
push
cli
mov
pop
test
lret
shlb
push
inc
adc
rcl
sbb
mov
test
call
ss
adc
mov
jae
cwtl
arpl
mov
mov
inc
lret
int
push
xchg
and
in
mov
cmp
cs
pop
adc
cli
add
or
dec
mov
or
xchg
imul
shr
xchg
or
and
dec
add
out
xchg
sub
aas
ja
dec
mov
xor
in
int
jb
pop
mov
inc
out
push
sbb
xchg
mov
add
xor
dec
mov
jle
inc
sbb
aas
dec
icebp
jae
pop
mov
jmp
jle
repz
inc
push
jp
xchg
push
pop
jno
mov
js
jg
mov
sbb
cmp
jbe
jecxz
and
mov
pusha
popf
push
jo
jae
daa
and
and
aas
orb
gs
ljmp
fistl
xchg
jne
nop
aas
je
xor
sbb
scas
pop
int
icebp
addr16
aas
insl
mov
ljmp
or
pop
lret
push
loop,pt
push
xchg
add
or
add
mov
pop
adc
mov
cwtl
repz
or
adcl
leave
aaa
in
xlat
fmuls
stos
popa
and
movb
inc
cld
sti
xchg
int
cmp
rorb
cmp
xchg
fwait
into
and
scas
cmpl
mov
stos
mov
movsl
ja
in
fsub
xor
popl
pushf
fsub
imul
jo
ret
push
dec
int
das
into
in
negl
mov
call
jp
cmp
mov
adc
sbb
mov
inc
pusha
or
div
test
jno
push
xchg
ljmp
or
mov
cwtl
mov
outsb
cmp
sub
xchg
hlt
test
mov
in
scas
mov
and
jmp
cmc
loope
jne
jnp
fptan
and
mov
out
push
dec
fidivl
pop
sub
rorb
jnp
xor
or
pop
outsl
mov
xchg
push
xchg
push
cmp
mov
addr16
out
test
outsl
mov
jl
mov
jnp
mov
pop
aad
bound
fsubp
arpl
push
stos
aas
mov
jecxz
out
mov
mov
mov
loopne
test
sahf
mov
mov
mov
stos
into
pop
loope
sbbl
jmp
fwait
movsl
push
outsl
data16
or
lods
or
pop
pop
imulb
in
roll
outsb
test
cmpsb
loopne
dec
test
mov
stos
in
sbb
shll
sbb
cltd
xchg
aas
xchg
in
pop
repz
cmpsb
subb
daa
push
mov
cmp
pop
or
cmpsb
orb
imul
xchg
lods
imul
or
xlat
push
mov
jb
aad
mov
out
jns
push
fldcw
fdivr
and
cmpsl
insl
mov
iret
nop
sbb
cs
adc
and
sub
cmp
adc
jge
cld
fisttpll
mov
jne
in
xlat
clc
cmp
inc
and
add
addr16
jne
stc
cwtl
or
inc
cmc
int3
popa
icebp
pop
adc
xor
cmpl
lods
lea
bound
mov
std
adc
cmp
movsl
pop
lcall
adc
sub
inc
ds
pusha
xchg
les
arpl
mov
addl
inc
int3
xchg
push
or
cmp
addr16
data16
push
ret
insl
dec
push
mov
fldl
mov
pop
mov
scas
dec
jbe
xor
loopne
pop
cmpsl
pop
xchg
push
mov
mov
add
mov
aam
cmc
xchg
faddl
aam
invd
push
dec
or
sahf
mov
xlat
push
loopne
std
in
or
inc
cmp
jmp
jns
jb
inc
adc
mov
scas
insl
loope
push
in
mov
or
mov
mov
mov
push
test
leave
out
sbb
fsubl
pop
jecxz
arpl
jo
movsb
and
mov
bound
add
or
sbb
cltd
nop
das
out
mov
dec
sub
gs
jge
lret
outsl
add
inc
xor
jmp
das
insl
cmp
in
pop
jo
imul
pop
xor
lods
cmp
sub
cmc
data16
and
test
sbb
movsl
push
xchg
mov
loop
push
xchg
xor
je
push
decb
lods
data16
fisubl
cs
sbb
dec
push
inc
jmp
call
push
push
mov
testb
paddb
daa
pushl
je
sub
inc
fdiv
push
rcrb
mov
pop
sub
aaa
cmc
jge
outsl
xchg
daa
cmpsl
inc
pushf
mov
es
push
shrl
xchg
push
push
sub
lret
fldt
ret
cmp
aas
add
test
test
push
mov
movl
and
das
lret
xchg
test
movsb
fisubl
mov
push
pusha
je
pushf
pusha
rcll
jns
sub
popa
inc
or
movsl
push
mov
cmp
xchg
xchg
arpl
std
out
pop
bound
mov
mov
and
inc
sbb
jp
pop
aaa
mov
fsts
decb
fs
neg
cmp
dec
xor
jb
lret
and
cmp
inc
imul
aam
cmpsb
jl
cmc
push
js
jl
jo
xchg
lods
gs
add
dec
xor
lock
ljmp
addr16
and
arpl
pop
pop
scas
sbb
rep
sbbl
aas
leave
sub
xchg
icebp
mov
testb
sbb
jmp
xor
inc
lods
jae
sbb
cmp
mov
jg
sti
push
popa
adc
int
sub
repnz
push
mov
xchg
jns
or
mov
out
in
sbb
adc
ficomps
xchg
in
js
fwait
jmp
dec
or
add
jge
dec
xor
xchg
dec
push
inc
dec
dec
rorb
push
loope
flds
jnp
aam
iret
jge
ds
pop
cmp
sub
mov
mov
mov
cmpsb
push
mov
mov
insl
lea
sbb
mov
xor
fiaddl
popf
cs
mov
push
lock
pushf
idiv
mov
mov
cmp
jne
in
sar
shrb
sti
clc
cmp
movsl
call
sbb
inc
stos
sbbb
nop
or
pop
pop
addl
and
mov
mov
mov
lret
push
nop
fwait
mov
jno
in
xchg
cmp
rcrb
mov
repnz
gs
and
ds
cmp
push
adc
mov
add
sahf
and
shrb
nop
enter
enter
pop
xlat
enter
cld
loopne
data16
cwtl
inc
stc
sub
std
jecxz,pn
clc
xor
sub
shlb
or
pop
mov
pop
sbb
jo
mov
shl
push
sbb
mov
aas
imul
push
sbb
inc
sub
or
and
fsts
or
and
je
push
push
stos
jge
jne
cmp
scas
in
icebp
data16
mov
insb
jp
popa
mov
push
inc
iret
cmpl
mov
dec
dec
testl
pop
cmp
and
imul
push
dec
ljmp
inc
xor
xlat
lcall
push
fiadds
icebp
fistpl
stc
adc
mov
adc
cld
repnz
lahf
lahf
dec
push
pop
idivb
jmp
out
pop
hlt
sub
inc
sbb
mov
jns
jmp
dec
daa
cmp
push
push
int
clc
mov
cmp
sbb
insb
inc
popa
fisttps
fsubr
pop
lea
sti
and
pop
xorl
rorb
sti
das
ror
push
cld
mov
mov
fimull
lods
adc
mov
inc
mov
or
daa
jle
test
mov
inc
movb
in
loop
dec
in
aaa
cmpsl
inc
and
or
out
push
out
jne
pop
lret
sbb
popf
fldcw
orl
out
or
fimuls
mov
inc
push
cmovae
enter
mov
rcrl
repnz
cmp
bound
out
jmp
rolb
sub
or
out
adc
xchg
adc
ljmp
in
xor
lcall
lods
shlb
dec
ret
lret
sub
adc
in
or
neg
inc
pop
push
dec
xchg
jo
std
jg
sbbl
jb
inc
xchg
out
mov
pop
insb
jo
int3
cmpsl
adc
pop
and
sar
hlt
sbb
adc
test
dec
loopne
cmp
push
or
mov
push
lret
pop
pop
pop
push
es
mov
lock
cld
jmp
inc
or
jnp
jmp
std
inc
add
popf
faddl
xchg
cvtdq2ps
add
bound
movsb
xlat
xchg
jns
cmpsl
mov
lret
push
xchg
insl
add
mov
jge
push
test
cld
pop
jmp
dec
push
mov
ds
and
lcall
cli
mov
inc
mov
imul
adc
inc
fwait
hlt
pop
push
loop
push
repz
fisubrl
add
push
push
jno
fcomi
mov
push
jns
inc
sbb
ljmp
sub
cmp
sbb
jecxz
lods
shlb
out
mov
das
bndldx
jns
jle
sub
mov
xchg
pop
scas
mov
popf
repz
mull
insl
arpl
jbe
ret
inc
out
push
pop
in
jns
push
imul
fsubrl
das
and
inc
imull
cs
mov
cld
jno
push
dec
xlat
pop
pop
pushf
ret
divl
in
clc
js
sub
push
shrl
pop
shrl
cmp
sbb
stos
jmp
or
in
je
push
push
pushf
rolb
jecxz
and
jl
notl
jnp
icebp
push
xchg
lahf
stos
sbb
clc
ret
insb
and
push
mov
repz
mov
xor
outsl
out
sahf
cwtl
adc
inc
pop
lret
jecxz
sti
pop
in
cmp
push
jg
mov
push
jmp
mov
adc
cmc
data16
jmp
cmp
jno
daa
movsl
push
adc
jmp
jge
fsubrs
sub
sbb
loopne
negb
inc
test
ret
push
dec
out
jmp
push
jl
dec
pop
or
imul
and
cmp
dec
add
sahf
mov
or
cltd
pushf
pop
les
in
sub
cli
mov
packsswb
bound
shlb
push
cwtl
data16
test
je
sub
je
imul
xchg
dec
push
jnp
jp
jp
in
jge
ret
movsb
jecxz
test
insl
sbb
add
inc
pop
gs
mov
fnstsw
stc
inc
fistl
inc
rcll
mov
xor
jmp
or
xchg
pop
dec
mov
adc
or
imul
add
stos
das
orb
and
and
cwtl
je
es
int3
mov
jmp
and
pop
test
and
fmuls
xlat
push
push
loop
lahf
insl
sbb
imul
lods
jl
out
out
sarb
or
jmp
cltd
fisttps
sub
dec
adc
jbe
inc
sub
dec
stc
sbb
cmp
jae
adc
cmp
push
in
enter
xchg
xor
fidivs
gs
push
xor
push
push
dec
xchg
inc
xchg
mov
das
jecxz
mov
sub
repz
addl
mov
imul
inc
mov
push
movsl
push
xchg
push
fisttpll
xor
adc
adc
xlat
fbstp
lods
fisubl
or
xor
out
mov
daa
lret
cmp
call
inc
lea
mov
mov
pop
and
sbb
pop
enter
pop
or
mul
dec
imul
fwait
mov
jecxz
xlat
ljmp
lcall
mov
xorb
sahf
jb
les
cmp
stos
adc
inc
dec
mov
out
sti
repnz
enter
xor
arpl
pop
and
fildl
jmp
add
jmp
arpl
pop
shll
adc
jne
push
xor
hlt
xor
add
or
mov
inc
movsb
lds
mov
es
xchg
mov
mov
insl
sub
daa
dec
and
sbb
sbb
pop
mov
pop
jecxz
jle
in
cwtl
mov
repnz
xor
cmp
mov
jecxz
xor
lcallw
imul
nop
adc
lods
add
adc
push
pushf
mov
or
sub
fwait
test
adc
movb
jle
mov
ret
mov
aad
shlb
mov
pop
dec
popf
loop
test
mov
popa
push
loope
cmpsl
push
loope
inc
movsl
ljmp
in
jg
pop
pop
push
lods
xlat
push
jmp
imul
push
rcrl
cmpsl
mov
or
sub
sbb
push
fisubrl
adc
inc
jno
imul
sbb
das
sub
jge
pop
and
pop
cltd
dec
outsb
popa
ret
lock
fs
cltd
mov
int3
jg
add
fidivs
jae
scas
clc
sub
fwait
addb
pop
mov
jmp
pushl
hlt
rcll
mov
adc
mov
pop
jb
sbb
push
insb
add
pop
add
test
dec
mov
push
imul
jbe
xchg
test
mov
pop
and
sub
enter
sbb
cmc
inc
test
enter
sahf
sti
sbb
bound
xlat
jb
push
cs
xor
xchg
stos
push
jmp
aas
add
push
inc
add
and
pop
mov
push
ret
pop
mov
cmp
jmp
out
fidivs
pop
aam
movsl
mov
fcmovb
mov
mov
repnz
lret
lahf
stc
cld
lcall
push
push
icebp
in
outsb
pop
adc
xchg
cmp
je
fcomps
xor
popa
decb
aaa
mov
lret
fists
or
xor
nop
xchg
mov
das
fildll
cld
xchg
jmp
push
sub
mov
push
in
push
xchg
jne
add
add
dec
inc
mov
adc
sub
decb
cmc
dec
iret
pop
aaa
jg
in
cltd
add
pop
pop
push
imul
push
pop
popf
dec
adc
xor
scas
and
mov
mov
les
xchg
xchg
imul
nop
stos
push
shlb
ds
mov
cmp
or
push
cmpsl
in
sarl
out
rcrl
cwtl
or
mov
fwait
push
xlat
rolb
and
mov
cli
sarl
or
fsubrp
mov
bound
push
push
repz
cli
dec
jg
add
ret
pop
xchg
mov
sarl
mov
fnstsw
sahf
out
in
les
xor
test
mov
xor
push
int
inc
pop
sti
or
mov
imul
adc
popa
push
loopne
inc
xchg
loope
mov
out
push
pop
call
mov
and
dec
gs
lret
js
or
inc
pop
jnp
int
xchg
jno
mov
push
pop
std
xor
jg
add
inc
pop
dec
into
movb
aam
mov
sbb
xor
sub
les
dec
push
fcmovnb
sbb
pop
push
mov
clc
and
xor
xchg
xor
mov
mov
xchg
adc
xchg
sbb
mov
dec
insl
mov
fisubrl
inc
pop
lds
pushf
sets
jp
andb
cmp
inc
xchg
adc
adc
adc
push
cmpsl
dec
push
fsubrl
out
js
pop
inc
and
cmp
sbbl
dec
insl
push
fsubrs
adc
sbb
xchg
mov
sahf
shl
fisubs
mov
adc
and
lea
push
inc
lods
add
cmp
mov
jnp
jp
mov
std
loop
sahf
or
arpl
aas
mov
pushf
sub
adc
insl
push
stc
push
dec
xor
pop
mov
test
sub
ret
arpl
enter
pop
add
jo
adc
mov
shrb
xchg
xchg
mov
adc
or
push
xor
aas
pop
mov
and
jmp
jmp
sarb
and
and
mov
jg
add
mov
xor
pop
jne
jl
sbb
popf
pop
fdivp
bound
cmp
mov
jnp
test
adc
xchg
sarb
popa
push
int3
pop
out
xor
adc
jmp
stos
inc
pop
xor
mov
js
enter
int
fnsave
jge
xchg
or
lahf
sbb
lcall
or
repz
and
dec
stos
ss
adcl
aad
sub
fdivrl
mov
cmc
sbbl
jbe
inc
insl
mov
test
test
fisubl
mov
adc
dec
adc
jmp
sub
cmp
subb
movsl
push
pushf
jmp
aad
sti
pop
movsb
popw
inc
ffreep
and
imul
sarb
das
in
xor
enter
and
pusha
leave
push
cmp
push
add
xor
lods
jl
dec
jp
in
mov
jb
mulb
dec
xchg
mov
sbb
mov
pop
xchg
xchg
std
lods
adcb
es
jae
insb
out
push
aad
das
lret
stos
pusha
ret
sahf
jg
idivb
mov
push
gs
push
xchg
ret
jle
cwtl
dec
fmul
mov
and
jno
mov
stos
cmc
test
outsb
rcr
movsb
in
fwait
cmc
or
dec
mov
mov
add
jecxz
loope
ficompl
and
ja
push
js
and
out
jbe
repz
orb
ss
and
cmp
jns
push
lea
inc
push
sbb
mov
adc
jo
dec
lret
call
enter
int3
das
jb
pop
jnp
fcomi
dec
adc
mov
jae
inc
inc
fmul
push
jmp
out
loope
je
push
cmp
dec
add
test
mov
adc
int3
push
ljmp
outsl
loope
adc
sub
mov
cs
cmp
mov
jg
fcompl
mov
and
dec
mov
sub
cmp
ror
fsubrl
das
fwait
pop
inc
fsubs
push
sarl
sbb
mov
hlt
outsl
lods
xchg
mov
and
ds
pop
scas
scas
jns
push
int3
push
int3
mov
mov
add
or
addr16
mov
lea
xor
or
rorb
mov
mov
enter
loop
jbe
jnp
or
add
aad
add
mov
push
loopne
mov
jbe
and
pop
in
int
sbb
or
ljmp
data16
sbb
out
and
rcll
out
imul
lcall
ret
add
lock
inc
jg
sub
jbe
pop
mov
iret
fsubrs
lds
jbe
ja
pushf
mov
mov
mov
adc
inc
int3
pop
gs
mov
xchg
lcall
jp
not
mov
mov
lods
mov
pop
jbe
inc
cmp
push
enter
add
jmp
mov
das
inc
and
xor
sub
mov
mov
movsl
dec
in
inc
js
xor
pop
mulb
sbb
xchg
inc
sbb
sbb
or
sahf
jle
cmp
xor
rorb
jmp
mov
xchg
push
push
pop
sub
adc
mov
push
mov
out
push
push
fsts
fadds
jmp
jnp
outsb
xchg
aam
ret
lods
lret
push
repz
mov
add
fwait
xchg
js
dec
mov
popa
movb
cmp
insb
mov
add
mov
xor
mov
and
testb
jmp
pop
pushf
into
fsubrl
xlat
fs
jns
add
jbe
pop
push
xchg
lock
pop
cs
mov
push
fdiv
loope
sbb
lods
jne
mov
bound
test
push
or
dec
ljmp
or
xor
mov
sbb
and
pushl
stc
add
push
movsb
inc
or
in
fbstp
ja
inc
imull
jmp
add
pusha
shl
cli
ficomps
cltd
pop
push
iret
jg
pop
test
mov
cmp
out
insb
imul
mulb
mov
int
clc
dec
movsl
in
cmp
insl
or
lea
dec
dec
int3
stos
ljmp
adc
int
sbb
gs
dec
add
pop
adc
clc
dec
movsl
mov
and
cmpsb
sbb
jns
jle
out
sbb
mov
scas
jmp
cmp
into
scas
sub
ficomps
xchg
in
push
lods
popa
sub
fcmovnbe
or
lcall
mov
shlb
sbb
pop
and
addr16
mov
jnp
cmp
jp
push
add
data16
repnz
add
scas
sub
sub
test
scas
fisttpll
jge
dec
ja
sbb
repnz
and
sahf
add
sbb
aas
or
outsb
dec
push
jecxz
in
adcb
mov
push
or
jge
xor
out
movsl
lcall
cmc
ret
sbb
fsubrs
mov
adc
sub
pop
out
int
jno
enter
push
mov
pcmpeqw
idiv
je
xor
sub
mov
mov
sub
dec
popf
in
sub
or
add
add
adc
scas
jmp
xchg
mov
push
xchg
jns
add
testl
jmp
enter
dec
daa
fwait
sahf
jge
add
iret
arpl
mov
shr
xor
test
mov
shrl
add
out
push
xlat
inc
int3
jo
shll
sahf
fnstenv
add
dec
insl
cld
push
push
cld
pushf
repz
std
sbb
test
lcall
addl
inc
or
mov
mov
fsubp
dec
imul
aas
cmp
push
into
je
and
mov
sti
ds
dec
daa
outsl
fs
inc
pop
les
loop
out
xor
hlt
in
sarb
rcr
jno
pop
rcl
daa
mov
mov
jbe
les
xchg
xchg
sub
inc
jmp
pop
cld
push
js
nop
repnz
sub
popf
out
cmp
out
push
loopne,pn
popa
xchg
cmc
jbe
std
push
jecxz
mov
lods
xor
jp
repnz
std
cmpb
sub
pop
or
push
pop
je
jnp
add
outsb
jmp
stos
test
jno
jo
lahf
xchg
outsl
fnstenv
jne
insb
test
in
icebp
mov
stos
inc
lds
lock
loop
xchg
fs
aad
js
xor
lock
mov
dec
roll
imul
ss
jae
sub
scas
lock
pop
loope
sub
jbe
pop
call
outsb
xchg
cs
mov
ret
jnp
icebp
fisubs
push
jge
nop
mov
sub
popl
clc
pop
xor
dec
mov
inc
lea
dec
jp
jle
fs
in
mov
fwait
sub
jne
dec
pushf
paddb
mov
pop
push
sub
in
test
and
xchg
cmc
xlat
inc
jo
dec
mov
fisubs
mov
call
rorb
aam
add
sahf
xchg
js
xchg
bound
rcrl
xor
push
movsb
push
xchg
add
pop
movsb
bound
dec
in
js
pop
xchg
ljmp
jae
mov
xlat
popa
mov
arpl
inc
bound
cmp
dec
int
iret
push
pop
add
shr
xorl
pop
xchg
jo
loop
add
push
jecxz
stos
inc
pop
adc
xchg
mov
push
sub
jae
push
cld
pop
add
xchg
xor
movsb
cmc
cmp
clc
pusha
out
outsb
pop
xor
dec
xchg
cmp
pushf
lods
mov
rcr
xor
leave
push
sahf
jl
mov
std
cmp
cmp
loopne
jne
stos
and
pop
add
movsl
div
sarl
push
es
push
mov
xchg
pop
out
mov
mov
inc
sub
or
cmovg
dec
rclb
imull
test
inc
repz
adc
ljmp
pop
or
out
xor
mov
mov
xchg
push
and
xor
aas
xor
mov
add
sbb
int
stos
jg
jns
in
pop
leave
sub
sub
loop
add
cwtl
std
imul
fistl
xor
rcll
in
idiv
leave
rcl
repnz
push
lret
sbb
mov
cmp
and
fs
push
jnp
sub
pop
lcall
scas
shlb
popf
sub
into
mov
jmp
mov
xchg
lret
lret
sahf
ss
fidivrs
pop
jg
jp
push
nop
dec
fnstcw
add
add
or
cmpl
inc
adc
fmuls
out
mov
mov
scas
into
int
jmp
adc
push
mov
repz
dec
xor
xor
xchg
mov
cmp
sbb
out
add
fimuls
arpl
insl
dec
adc
ds
mov
fnstcw
mov
ret
loop
add
dec
mov
jl
test
push
inc
fs
jl
or
jo
mov
jge
jecxz
pop
adc
adc
pop
cli
imul
pop
mov
sbb
jmp
xchg
mov
dec
sub
inc
enter
pop
mov
jge
gs
cmp
jecxz
or
call
xor
movsb
pop
jne
adc
push
loopne
pop
fdivrs
movsl
jle
pusha
js
orl
sbb
or
adc
js
dec
or
les
mov
rorb
sbb
xor
push
in
int3
lods
pop
adc
mov
cmp
push
rcr
pop
cmp
mov
addl
and
push
mov
cmp
jnp
or
pushf
js
fidivl
lock
in
out
adc
bnd
sub
arpl
pop
cmp
movsb
jmp
inc
mov
push
data16
sbb
loop
jbe
into
pop
xchg
cmp
sub
or
mov
daa
out
bound
xchg
mov
icebp
mov
imul
cmpb
decl
mov
call
movsb
and
pop
shrl
cmc
add
fisubl
mov
aas
sub
pop
add
std
jecxz
inc
dec
xchg
imul
scas
lcall
dec
mov
leave
lods
or
inc
sbb
test
sahf
adc
add
mov
icebp
movsl
sub
xorl
mov
lods
test
inc
sub
jmp
pop
cmp
push
inc
sbb
popf
xlat
mov
inc
xchg
in
push
sbb
test
mov
sub
sub
dec
jae
pop
or
loop
cmp
pop
xor
inc
je
add
push
mov
inc
test
hlt
adc
push
and
add
lcall
pop
jmp
call
xchg
sbb
dec
mov
mov
pop
adc
cli
xchg
add
das
fs
arpl
cmpb
stos
clc
mov
ss
ret
popf
add
push
stos
stos
enter
int
repz
fisttpl
imul
xor
mov
cmp
bound
adc
xlat
fcoms
adc
fs
into
andb
incb
adc
int3
lahf
lahf
fnstenv
outsb
fmuls
mov
shl
sti
ldmxcsr
movsl
jb
xorb
decl
stos
dec
adc
scas
mov
cmp
inc
popf
aad
les
pop
pop
pop
pop
pop
xchg
push
aas
popf
cld
icebp
mov
daa
cmp
into
and
cmp
mov
mov
mov
jecxz
je
sub
and
xchg
mov
stos
lds
xchg
inc
pop
testl
insl
mov
es
mov
iret
fwait
lock
adc
mov
pop
pop
xlat
fldl
mov
imul
mov
mov
lea
imul
mov
and
dec
and
push
and
mov
xchg
xchg
dec
je
lea
ret
push
mov
push
fcoml
adc
stos
in
lea
dec
sahf
mov
into
adc
jg
lock
or
push
sub
or
push
xchg
jp
je
sarb
lds
mov
xor
fldcw
sub
xchg
jo
pop
hlt
in
mov
pop
cwtl
stos
mov
pop
test
repnz
xor
test
pop
mov
test
pop
lahf
es
xor
pop
loope
fsubs
pop
sahf
lea
inc
mov
popa
mov
jmp
jo
iret
xorl
fimull
jmp
mov
test
xor
scas
lret
and
adc
jnp
push
rclb
mov
sub
or
xor
sub
inc
lds
icebp
addr16
mov
pop
or
imull
mov
or
fcompl
cmc
in
xor
sbb
inc
cmc
test
stos
or
jl
ds
sbb
add
adc
jecxz
adcb
lret
add
pop
mov
outsl
fcomps
je
ja
fs
xchg
add
sbb
mov
pushf
cli
js
int
rcll
shll
cmp
fisttpl
dec
rolb
and
sbb
mov
xor
call
repz
ret
aaa
sti
lds
aaa
imul
dec
sbb
les
or
das
test
mov
mov
je
cmp
adc
enter
mov
xor
jno
mov
cltd
in
ficoml
into
in
or
imul
mov
mov
add
stos
pop
rcrl
les
or
ja
cli
lret
mov
stos
outsl
lea
cld
push
arpl
and
mov
xor
lds
or
adc
mov
push
jno
xor
mov
xor
cmp
push
push
cmp
in
pushf
aad
push
into
fwait
sahf
or
mov
jo
lret
xchg
mov
or
aas
or
or
in
shll
add
icebp
mov
adc
xor
repz
sbb
xor
rcr
loope
icebp
stc
and
mov
push
jl
jb
adc
shll
pop
outsl
popf
fs
jnp
pop
lcall
fldcw
cmc
les
and
ret
dec
mov
sub
notb
addb
repnz
mov
ss
jno
cmpl
out
movsl
cmc
xchg
mov
pop
cltd
in
xlat
fsubr
and
pop
or
or
jno
sbb
shll
in
pop
mov
stos
fldt
in
int
or
xchg
in
mov
cwtl
popf
out
stos
sbb
push
sub
push
sbb
mov
mov
mov
push
mov
inc
paddb
xor
fistpll
xor
popf
mov
scas
or
mov
dec
outsl
push
mov
lahf
xor
jo
mov
mov
pusha
pop
popa
push
sbb
or
lods
cli
pop
mov
iret
bound
pop
test
jmp
mov
mov
xchg
pop
or
into
loop
ret
call
and
clc
jge
lds
mov
pop
cli
fisubl
jle
jb
lahf
mov
xchg
push
lock
add
jmp
adc
fldt
pusha
dec
sbb
insl
lret
cmpsb
test
xlat
jo
xchg
xchg
add
test
or
pusha
jo
jnp
bnd
push
cltd
movsl
push
pop
add
or
icebp
cmp
cmp
leave
push
pop
fwait
std
stc
inc
sub
leave
xchg
mov
jae
fwait
mov
cld
ja
inc
ljmp
or
cmp
jb
inc
pop
cmp
pop
and
mov
add
or
rcll
out
mov
call
mov
fwait
daa
mov
mov
jle
icebp
lods
test
add
int
fs
sbb
test
jg
mov
dec
js
cmp
out
call
pop
xor
outsl
stc
inc
xchg
sbb
mov
iret
sar
push
aaa
outsb
ja
cmpsb
xor
imul
jb
push
fsubl
shrl
mov
notl
mov
cmp
mov
ud1
sbb
stos
or
pop
cli
lods
mov
sub
sub
mov
push
jo
popa
or
data16
cwtl
mov
dec
cmc
js
ljmp
popf
call
stc
add
or
mov
add
sbb
stc
pop
and
pop
mov
ljmp
and
adc
daa
lds
icebp
call
lret
addl
xlat
pop
jp
pop
movsl
pop
mov
test
dec
fcomps
clc
mov
movb
sub
xchg
dec
into
out
cmp
or
lcall
or
push
inc
pop
shlb
mov
sub
mov
mov
pop
inc
sbb
ds
les
hlt
or
mov
cwtl
jbe
inc
mov
or
inc
xor
sub
cs
out
xchg
scas
nop
test
pusha
and
jnp
je
pop
push
gs
gs
cwtl
inc
push
loop
lcall
std
xlat
mov
sub
mov
xor
xor
icebp
movsl
inc
mov
cmp
jbe
mov
sbb
and
or
inc
daa
fdivl
mov
cmp
faddl
cvtps2pi
sub
sub
dec
lods
in
dec
fmuls
pop
jns
add
jp
pop
jns
or
aam
xchg
loope
mov
mov
pop
jo
data16
xor
mov
ljmp
sub
jecxz
mov
xor
and
in
pusha
add
jns
mov
stos
lea
ss
icebp
mov
lock
ja
mov
cmpsb
out
jmp
lcall
dec
xchg
ljmp
outsl
fsubs
bound
mov
test
pop
xor
add
xor
sub
rcrb
pop
and
or
into
in
mov
and
lahf
xor
std
pop
mov
enter
loopne
mov
dec
push
call
popa
stos
mov
lahf
sub
inc
adc
lock
adc
xor
je
sbb
imul
xor
push
adc
stos
and
sub
inc
sub
loopne
aas
jg
dec
enter
out
xor
adc
push
ret
in
lcall
orl
add
adc
les
mov
les
pop
cmovae
pop
jnp
xor
and
loope
sub
pop
xor
insl
sub
inc
sahf
addr16
mov
fisttpl
cld
mov
push
lods
aad
out
add
jmp
addr16
ss
mov
cs
xor
ljmp
add
fisubs
cmpsl
push
gs
jle
mov
jb
jnp
call
mov
xorb
loopne
outsb
xor
jecxz
inc
jns
cmp
and
ds
cmp
je
mov
pminsw
jnp
push
dec
mov
pop
ds
ljmp
jp
cmp
fldcw
out
fmul
sub
cmp
outsl
clc
cwtl
out
cmp
adc
jnp
jecxz
repz
mov
xchg
scas
scas
sbb
sub
adc
icebp
ror
cmp
out
xor
lret
xchg
cmp
loop
add
xchg
scas
jge
push
push
cmpsl
lods
in
int3
rcrl
sub
sti
cld
fcmove
lds
lods
lret
clc
sti
lods
mov
jo
mov
mov
les
mov
mov
push
lahf
add
popf
and
int
push
mov
mov
js
adc
mov
pop
pop
mov
jl
mov
pop
sbb
xchg
add
leave
sub
data16
ljmp
jb
pusha
mov
hlt
jecxz
out
out
sub
mov
jns
decl
fs
push
add
add
movsl
movsl
scas
jle
jb
xchg
mov
adc
push
push
in
sub
xor
mov
cmc
and
repnz
sbb
rclb
dec
aaa
mov
push
xchg
rorw
stc
jp
scas
inc
mov
jbe
gs
sbbl
cmp
stos
out
std
dec
loopne
and
mov
or
loop
shrb
xor
cwtl
ret
mov
cmp
and
lret
inc
cs
shll
stc
mov
lcall
movsb
dec
cmpb
imul
fmuls
mov
push
stos
jo
fistl
call
fisubrs
cmp
rorb
inc
xchg
push
xchg
rolb
mov
cmp
xorb
ficoms
push
mov
cmp
je
iret
or
push
sbb
hlt
mov
dec
jecxz
lret
sbb
lcall
rcrl
mov
inc
cld
stos
adc
inc
push
mov
and
pop
jnp
xchg
aam
xchg
int
xchg
inc
push
insb
aad
adc
aam
cmc
mov
dec
jno
mov
leave
outsb
insb
ljmp
in
addr16
in
fwait
lcall
sub
mov
cwtl
mov
ds
stc
rclb
popf
xchg
in
sub
add
cmp
sub
daa
outsl
lock
gs
xchg
inc
mov
jb
fbstp
ret
push
push
fwait
std
inc
cmp
push
lea
xchg
mov
push
xchg
sbb
out
js
cmp
mov
out
jp
sarl
push
and
adc
test
jb
xorl
pop
sbb
popl
pop
jmp
mov
mov
stos
xchg
push
mov
sarb
daa
or
and
dec
ret
ret
mov
outsb
add
inc
mov
fcmovb
pop
pop
add
pushf
loop
loop
andb
pop
cwtl
stc
sub
pop
test
or
int
pop
dec
int
cmp
insl
cmpsb
or
pushf
rolb
fsts
js
test
fnstenv
mov
jno
mov
data16
or
xchg
mov
jge
mov
pop
mov
stos
pop
dec
xchg
sahf
out
push
push
adc
ljmp
push
adc
bound
out
dec
addr16
push
jae
pushl
add
xchg
or
loope
fisubrl
push
adc
rcrl
imul
and
inc
jl
mov
xor
jae
or
add
jmp
or
in
push
xchg
jae
sbb
outsb
jbe
rcrl
sbb
sbb
sbb
add
lea
movb
orb
jp
push
add
cmp
sbb
add
or
in
ljmp
enter
xor
cld
mov
xchg
cwtl
push
jp
test
jbe
inc
mov
stos
fninit
sbb
xchg
scas
addr16
cli
mov
cmp
sub
sub
dec
xchg
xchg
and
aaa
cmp
or
jbe
std
enter
jg
adc
and
ret
add
ss
or
rcrb
mov
mov
gs
mov
and
add
jg
scas
dec
std
inc
mov
xchg
xchg
jno
xchg
fildl
in
mov
jecxz
and
fsubrl
mov
pop
push
inc
xchg
inc
addr16
jmp
push
cli
stos
pop
sti
sbb
fnsave
repnz
das
adc
push
push
roll
fadds
cld
push
fnstcw
cli
dec
add
orl
sub
push
xchg
pop
cmpsl
stos
jg
aaa
fildll
dec
addr16
fistpl
outsl
mov
xor
fcoms
fprem1
or
lret
jne
inc
and
mov
sub
jp
sar
sub
enter
jle
push
xlat
jecxz
enter
and
shll
cmp
movsl
flds
dec
xor
hlt
es
aam
popa
test
test
ret
lret
std
mov
bound
jne
sub
mov
push
cmpsl
xchg
pop
ss
or
lcall
les
into
mov
mov
and
or
inc
sub
popa
lahf
fcomi
push
sbb
cld
clc
repnz
pop
sbb
sub
jecxz
rorl
push
sbb
dec
inc
jge
adc
adc
and
les
xchg
jnp
int3
ss
fldt
into
leave
cmp
scas
add
jmp
test
dec
push
mov
aam
push
push
cli
mov
push
jmp
jns
test
dec
mov
pop
xchg
push
fbstp
ds
call
insl
or
dec
xchg
int3
and
hlt
cmpsb
pop
mov
adc
inc
add
adc
lock
xor
xor
loopne
mov
push
js
mov
inc
dec
xor
add
outsb
enter
adcl
cmp
cs
push
lret
and
jmp
in
nop
cmp
cmp
in
xorb
leave
lock
sub
icebp
pushf
mov
or
je
pusha
push
outsb
test
or
push
fisubrl
pop
add
add
test
in
es
mov
mov
sub
mov
imul
sbb
loopne
sub
inc
mov
out
cmp
inc
mov
pop
pop
add
jno
dec
sub
xlat
aad
jnp
mov
in
push
sbbl
xor
cmp
add
xor
rcll
jge
cltd
popa
aam
imul
xor
or
pop
sub
sbb
les
daa
call
popa
jns
dec
jl
cltd
sti
lcall
popa
inc
push
sub
sub
test
js
loop
lods
mov
bound
sbb
xor
sub
xor
out
sbb
mov
stos
js
je
xor
push
outsl
pop
arpl
jno
prefetchwt1
sbb
push
lcall
push
cmp
push
outsl
lret
js
add
lcall
xchg
jmp
cwtl
loopne
ljmp
jno
int3
jl
mov
xor
out
mov
push
xor
cmc
das
dec
mov
cmc
mov
mov
add
jle
inc
in
lea
ror
pop
sub
inc
pop
mov
dec
stos
jo
outsb
outsb
and
scas
pop
sub
pop
sbb
das
adc
push
std
mov
gs
adc
mov
test
mov
sbb
arpl
jl
jle
jl
stc
xchg
dec
addb
stos
ljmp
sbb
dec
fisubrl
jle
mov
and
incl
scas
shl
xor
mov
movsb
ja
add
lcall
out
fdiv
xchg
cmc
fwait
cmp
les
sub
mov
iret
ja
fdivr
xchg
jle
adc
mov
sub
rorb
movsl
mov
jmp
sub
lods
out
ret
rcl
push
mov
push
xor
jnp
mov
cmpsb
sbb
dec
xchg
pop
sbb
subb
out
and
cmpb
push
or
dec
sti
jg
ret
xor
dec
mov
jle
aaa
sbb
mov
pop
mov
divl
fisttpl
notb
dec
aas
mov
scas
dec
mov
inc
das
dec
fwait
clc
test
xor
xorl
jo
sbb
fistl
add
lcall
cltd
imul
flds
mov
or
sar
pop
or
add
sti
add
adc
cwtl
sbb
sbb
cwtl
test
xchg
movsb
jae
xor
add
nop
cmpb
pop
pop
lahf
jg
cmpl
ja
cmpsl
cmp
mov
push
xor
sahf
lret
push
fwait
lret
ds
sahf
sub
lret
stc
inc
adc
aas
daa
inc
test
dec
aad
daa
add
outsl
mov
push
sub
mov
lret
dec
addb
mov
mov
and
pop
ss
inc
xchg
mov
ja
lea
out
das
enter
add
xor
ss
movsl
pop
sbb
dec
repnz
push
int
xorb
sub
pop
push
push
inc
stos
and
nop
ret
mov
ret
mov
mov
or
jbe
out
cmp
push
push
iretw
out
dec
xchg
adc
push
xor
cmpb
mov
cmp
dec
mov
pop
ljmp
mov
jb
sbb
das
mov
jno
push
add
dec
cmpsl
js
mov
lcall
adc
cli
scas
push
inc
xchg
ja
push
fildl
popa
or
push
int
mov
cld
ficomps
mov
in
xor
lahf
jecxz
inc
shrl
fistps
add
push
testl
mov
add
outsb
dec
jp
fwait
stos
mov
lods
inc
pop
rcl
mov
jbe
push
jg
enter
addr16
stos
or
push
std
mov
xchg
sar
popa
hlt
into
inc
pusha
cmp
mov
jae
cmp
scas
insb
movsb
jp
sub
stos
call
push
pop
push
jl
jp
test
xor
push
js
iret
sub
jge
xor
cmpsl
test
adcl
xor
mov
stos
imul
dec
inc
mov
mov
push
rcrb
cmc
icebp
popf
xchg
repz
pop
pop
imul
mov
pop
movsl
ret
inc
add
jo
and
shl
daa
mov
mov
xchg
call
bound
in
mov
pop
cmp
insl
cltd
arpl
xor
add
jg
push
xor
fnstcw
push
test
rcr
pushf
jns
mov
lods
mov
aaa
shlb
dec
addr16
hlt
mov
aas
stc
pop
push
fildl
std
into
addr16
addl
arpl
lods
xor
mov
pop
je
insl
push
jmp
push
pop
xchg
and
enter
dec
adc
ljmp
sub
orl
stos
lods
inc
mov
mov
push
adc
outsb
out
xor
in
aas
xchg
fs
enter
adc
shll
dec
cmp
fistpl
mov
icebp
ret
cmpsl
aam
cmp
mov
xor
cmp
push
in
xchg
jbe
and
mov
inc
into
dec
sbbl
je
pusha
fadd
or
fnstsw
mov
pusha
cmp
shll
cmc
sbb
push
jmp
out
imul
pushf
out
and
lods
cli
dec
lret
fcoml
inc
shll
fadds
jmp
mov
mulb
adc
das
lods
jb
pop
xchg
daa
lds
fdivs
cmpsl
test
lock
out
nop
jnp
clc
and
das
in
cmp
fstpt
sub
xchg
pop
inc
push
pop
leave
leave
mov
lock
in
dec
adc
dec
es
nop
lods
sub
sub
or
sti
cmpsl
xchg
in
sub
sub
popf
and
mov
inc
mov
sbb
daa
bound
mov
cmp
in
mov
jge
mov
dec
jge
iret
fwait
movsb
pop
aas
jno
push
hlt
jg
jno
stos
in
sub
add
sbb
and
fistl
xchg
rclb
cli
popa
dec
pop
data16
push
jl
push
roll
dec
push
subb
and
and
xchg
sbb
jl
dec
and
mov
jo
push
mov
mov
cmp
or
das
or
bound
rcr
repnz
imul
lcall
xchg
jno
mov
mov
cmpl
popa
outsb
xchg
adc
rorb
cmp
add
pop
gs
test
js
cmpsl
mov
dec
jbe
enter
mov
test
popf
cmc
stc
shlb
inc
jae
mov
xor
jb
add
insl
iret
push
sti
movsl
mov
sti
xlat
sub
fnstcw
ret
jae
xorps
out
std
int3
je
aaa
cld
mov
jnp
dec
addl
popf
inc
scas
dec
inc
inc
outsb
shrb
xor
cld
and
aaa
scas
pop
test
dec
pop
inc
xor
mov
test
mov
aam
not
fidivrs
mov
pop
scas
ret
mov
jne
dec
mov
andl
in
aas
cmpsb
xchg
lods
push
testb
sahf
ss
cmp
xor
das
push
jb
pop
dec
sti
dec
sbb
adcb
mov
mov
stos
jp
popf
cmpsl
xchg
ljmp
ljmp
outsl
dec
fiadds
in
or
ja
gs
mov
xchg
bound
xchg
push
xor
push
xchg
jne
mov
sbb
jecxz
outsl
xor
lods
push
cmpsl
mov
mov
or
push
mov
and
sbb
push
pusha
scas
mov
ficoms
cs
sub
mov
popa
dec
shl
push
and
adc
jbe
push
pop
mov
sahf
scas
xchg
repz
mov
pusha
xor
jecxz
shlb
xchg
movsb
cmp
hlt
jmp
xor
lret
rorb
mov
imul
scas
add
mov
push
shr
sbb
add
je
mov
and
pop
xor
mov
fstl
outsb
pop
add
adc
in
and
mov
loope
ja
pushf
or
mov
inc
pop
pop
sahf
add
bound
or
stos
decl
andb
rolb
aad
xor
xchg
jne
dec
adc
jnp
negb
sub
sti
pushf
push
enter
adc
xor
xor
add
jae
pop
cmp
gs
pop
xchg
pop
push
stos
xchg
negl
or
mov
js
cmp
mov
rorb
xchg
or
je
outsb
aas
ds
mov
aas
push
sarb
push
mov
repz
adc
push
mov
sbb
cmc
sub
cmp
aas
cli
aad
test
sub
mov
add
xchg
jl
outsb
mov
pop
xchg
add
loopne
sub
subl
dec
gs
mov
cwtl
mov
es
pop
adc
inc
les
cmp
hlt
mov
or
in
or
cmpl
inc
or
add
cmp
lret
xor
std
mov
sub
add
mov
fisubs
sub
mov
mov
xor
repz
ret
shrb
cmpsb
lds
inc
or
sbb
dec
into
push
xchg
mov
pusha
repnz
jns
pop
jp
push
ficoml
cmp
jo
les
push
xchg
test
andl
cltd
dec
mov
mov
ds
push
mov
insl
cmc
pop
int3
push
int
aaa
dec
sbb
jle
dec
loope
int3
movsl
cwtl
cmp
sbb
les
dec
cmp
push
xchg
in
xorl
sub
fstps
adc
fbld
mov
jne
pop
call
sub
fwait
pop
ss
push
pop
outsl
icebp
cmpb
add
sbb
xor
mov
outsl
xchg
loope
and
dec
and
xor
pop
adc
jp
sti
inc
clc
loopne
mov
test
inc
xor
cmp
into
pusha
out
leave
loopne
ret
add
xchg
test
mov
mov
out
pop
mov
fiadds
jno
aaa
xchg
jmp
xor
in
and
loop
aaa
cmovne
pop
lahf
cmp
data16
cmpb
out
xlat
xor
imul
cmp
jo
rcll
sub
test
cmp
mov
add
lret
dec
dec
roll
int
mov
jge
cltd
xlat
sahf
dec
mov
or
test
scas
push
mov
xor
test
jmp
xchg
test
mov
jne
lahf
fucompp
shr
add
jg
add
ret
ror
mov
pop
lods
dec
lods
inc
push
hlt
push
repnz
iret
insb
push
popa
mov
or
pop
xchg
xchg
or
rolb
inc
push
loop
rorl
lock
pop
jbe
rolb
mov
sub
icebp
add
mov
mov
pusha
mov
mov
jbe
test
dec
push
add
mov
inc
insl
or
pop
or
cmpsl
enter
std
mov
in
mov
sbb
call
fwait
shll
inc
nop
out
xor
cmp
jnp
dec
xchg
mov
enter
adc
mov
adc
in
mov
stc
icebp
aas
or
in
scas
fdivrl
imul
push
jecxz
jg
cmp
mov
mov
std
shrb
pop
es
jle
js
movsb
pop
cld
popa
sub
xor
cwtl
xchg
cmp
insb
cmpl
and
divb
sub
mov
jl
arpl
movsb
jmp
add
test
jae
adc
xchg
or
or
fisttpl
rorl
inc
adc
nop
pop
pop
add
mov
pusha
leave
je
jp
xor
popa
ljmp
or
jp
push
and
and
ljmp
jo
inc
xor
mov
insl
bound
or
pusha
mov
pop
push
jl
or
sahf
jp
fs
rorl
and
nop
das
cmp
in
mov
jle
lret
sbbb
sbb
aaa
and
lds
fxch
inc
add
jae
lcall
test
mov
fcmovnb
cmpsl
xorb
arpl
sub
sbbb
mov
aad
jl
enter
jg
sub
cmp
repnz
add
sarb
mov
ret
dec
xchg
xchg
xor
in
xchg
pusha
push
loopne
xchg
add
outsl
test
es
insl
std
cs
je
insl
decb
insl
xorb
push
jb
insl
or
leave
xchg
xlat
scas
ret
cmp
xchg
icebp
xchg
pop
mov
pop
mov
rcll
ret
dec
mov
push
in
inc
sub
or
test
loope
xor
mov
test
mov
and
aam
fwait
xor
and
adc
xor
mov
sbb
xchg
enter
ja
ds
push
daa
out
int3
nopl
lea
mov
iret
inc
mov
test
cmp
mov
xor
gs
fiaddl
fwait
aas
pop
ja
add
mov
jnp
lods
cwtl
popf
lcall
xlat
sub
xor
or
dec
shll
mov
sti
pop
pop
leave
shll
in
daa
testb
out
icebp
and
jbe
ret
xor
std
or
push
push
add
sub
clc
adc
es
xadd
out
lods
leave
jnp
pop
mov
pop
mov
repnz
std
and
out
cs
sbb
inc
mov
add
xchg
stos
mov
sbb
inc
pop
enter
sarb
mov
inc
inc
cmp
and
ja
les
cmp
stos
test
andb
out
dec
fdivr
imul
xchg
push
jg
sub
stc
cli
clc
cld
dec
stos
mov
movsl
fnstsw
cmp
mov
dec
adc
pusha
mov
js
repz
pusha
rolb
das
xor
or
in
xlat
es
int3
aad
sbb
loope
sub
js
xchg
sbbb
shr
scas
in
shlb
xchg
mov
clc
test
int3
jp
sub
aad
mov
mov
jge
mov
int
mov
pop
addr16
cwtl
cs
and
sub
dec
leave
leave
cmp
pop
dec
enter
dec
fwait
es
stc
mov
out
ljmp
movsb
ja
lods
mov
xchg
popa
stos
paddusb
pushf
xorb
fnstsw
pop
ljmp
gs
sbb
test
das
mov
lods
fimuls
dec
cmp
outsl
mov
movsl
cmpsb
stos
call
lahf
jmp
adc
shrb
xchg
into
adc
cmpsb
push
test
cmp
es
push
pop
adc
dec
jne
call
xor
mov
aam
push
mov
xchg
ror
pop
dec
int3
jl
lock
sbb
lods
cmc
and
es
or
or
js
mov
xchg
push
inc
pop
lea
pop
in
xchg
push
mov
in
aam
ret
ret
xchg
sbb
negl
loope
dec
mov
inc
rcrl
and
xor
sub
add
jne
mov
imul
push
xchg
lods
insb
insb
cld
mov
sbb
jno
out
mov
mov
mov
dec
xor
mov
jl
addr16
mov
dec
adc
out
ds
ljmp
out
shrl
stos
push
repz
lds
cmovle
dec
testb
cs
lahf
cld
dec
pop
es
cmc
testb
in
mov
test
enter
mov
leave
pop
lods
mov
dec
orb
xchg
insb
xor
pop
insb
jmp
push
xchg
sub
shlb
addr16
fildl
fidivs
or
sbb
jns
les
push
iret
xchg
ret
adc
pop
and
stos
xor
stos
cwtl
push
jo
sahf
mov
cld
jle
lds
js
test
lahf
xor
sub
xor
fstpl
arpl
adc
fildll
test
pop
lods
rcll
arpl
pop
xchg
push
jae
cmp
cmpl
jbe
test
mov
stos
popa
sbb
add
jns
xor
push
insb
ret
out
jb
jmp
push
jmp
out
cmp
aas
lds
scas
loop
leave
lahf
adc
inc
add
dec
es
int
or
loopne
aas
aaa
inc
or
rolb
push
cltd
xor
mov
pushf
popa
xor
mov
inc
mov
sub
add
pop
and
mov
xchg
push
or
inc
popf
xor
call
xchg
pop
and
ja
inc
pop
fadds
cmp
add
flds
and
mov
movsb
cltd
cmp
cmp
hlt
xchg
jnp
add
rolb
adc
xchg
stos
loope
sub
out
leave
inc
cmp
ret
out
out
stc
jecxz
cld
mov
jmp
or
mov
dec
aad
jne
cmpsb
testb
xlat
add
push
ljmp
mov
add
mov
out
sti
scas
jle
lcall
cld
mov
fadd
insb
mov
loop
stc
xor
nop
lock
fs
mov
out
inc
cld
jo
sbb
movsb
enter
inc
cld
push
mov
dec
enter
lret
xchg
pop
pop
mov
aam
fwait
dec
clc
imul
pop
jle
ret
ss
decl
dec
sbb
test
out
cld
fs
or
fwait
loopne
in
outsb
add
mov
test
rol
and
mov
test
mov
or
ret
icebp
fsubrl
test
mov
jbe
and
hlt
jge
inc
push
and
into
dec
dec
sub
cmc
pop
rcr
movsb
mov
adc
fwait
cld
loop
scas
adcl
jmp
xchg
lea
sub
sahf
mov
test
mov
out
je
filds
cmp
dec
pop
test
test
decl
addr16
testb
scas
shrl
sbb
cli
pandn
jb
push
push
xchg
pop
and
and
fsubs
ds
addr16
cmpsl
cmpsl
mov
mov
loope
mov
int3
dec
sbb
mov
sbb
jg
test
or
fisttpl
jge
std
fnsave
inc
sub
ficoml
mov
cmp
mov
mov
cs
pop
call
stc
push
pop
js
push
je
insb
gs
adc
lret
pop
mov
push
hlt
adc
test
lret
jne
or
aam
fcoms
testb
jecxz
dec
hlt
shll
ret
outsb
push
aam
sbb
inc
lahf
mov
or
or
imul
repz
or
push
xor
in
jg
sbb
out
xor
pop
mov
push
jbe
movsb
cmc
xchg
adc
xchg
imulb
mov
test
pop
and
aas
data16
cmc
and
ds
or
mov
sbb
push
out
add
fsubrp
out
stc
sub
rorb
push
mov
or
rep
lea
dec
out
mov
sar
sub
fistl
mov
xchg
stos
shrl
push
aad
testb
cmp
sbb
or
ja
push
xchg
jno
dec
or
shl
out
out
imul
inc
movaps
and
pop
sbb
in
out
in
imul
xor
inc
sahf
orl
mov
sbb
push
loope
pushf
adc
jno
aad
lods
mov
dec
std
dec
in
adc
jb
insl
adc
push
cmp
rcr
notb
ja
mov
dec
or
icebp
aam
test
xor
mov
push
rclb
adc
mov
push
lock
or
push
insb
lock
or
subl
aam
jnp
in
lea
ja
adc
or
shl
xchg
and
mov
adc
mov
and
jo
push
jp
inc
inc
pop
pop
stos
lahf
repz
ficompl
add
cmpsl
xchg
xor
mov
jae
mov
lods
stos
sub
inc
lea
les
sbb
shll
clc
orl
mov
or
cwtl
mov
xor
push
gs
imul
mov
lds
or
rol
std
sti
jecxz
pop
dec
or
xor
loopne
xchg
fs
cmpsb
sub
test
jle
fwait
mov
mov
or
out
pop
icebp
xchg
sbb
xor
add
adc
jb
movsb
xchg
and
xchg
enter
push
sub
mov
mov
mov
scas
test
cld
mov
lret
mov
pusha
xor
mov
push
fidivs
in
xor
arpl
js
mov
ss
mov
sub
jae
stc
cltd
mov
xchg
pop
xchg
movl
je
mov
aaa
mov
mov
call
ja
stos
je
push
add
lret
nop
add
cmpb
mov
cmpsl
dec
dec
andl
in
fyl2xp1
dec
push
iret
or
js
loope
push
insl
or
pop
aam
mov
mov
addl
push
sti
push
inc
fsts
or
mov
stos
mov
or
scas
gs
aad
add
xchg
mov
pop
das
rcr
sbb
sub
push
mov
jo
mov
outsb
out
or
jb
cld
and
das
mov
push
sbb
push
pusha
dec
xchg
and
daa
setns
sbb
loop
sub
addr16
mov
pop
ljmp
pop
mov
xchg
outsl
scas
mov
bound
shll
cmp
jmp
cld
and
lcall
fs
dec
mov
in
xor
jp
xor
lods
lea
pop
mov
int
daa
mov
in
and
fbld
sbb
adc
xor
jnp
lock
push
sbb
roll
dec
enter
pop
dec
mov
lret
xchg
aam
cmp
lods
pop
cmp
mov
out
mov
xor
or
out
test
dec
packuswb
out
cmp
adc
mov
in
pop
adc
jle
jle
int3
popa
scas
jns
lret
or
test
push
rorl
mov
insl
xor
sub
stc
fidivrs
aam
nop
les
inc
ja
adc
sbb
fmuls
shlb
in
dec
mov
pushf
addl
shrl
test
out
fsubrl
jbe
lods
and
shr
call
sbb
cmpsl
add
xor
stc
inc
push
sub
cmp
jnp
adc
inc
xchg
xchg
mov
push
enter
dec
mov
cmc
out
mov
sbb
insb
jno
mov
daa
add
push
test
pusha
or
jl
adc
dec
push
rcrb
mov
push
mov
mov
lret
arpl
aaa
mov
jo
or
movb
bswap
mov
dec
inc
lock
push
subl
gs
aaa
cmpsl
xor
mov
ret
xor
adc
xor
pop
ficompl
add
andl
popf
es
je
in
xchg
cmp
lahf
inc
mov
leave
fimull
daa
decl
sbb
sti
mov
test
cs
insl
shlb
adc
popf
roll
jno
repz
clc
outsl
or
adc
pusha
mov
je
out
icebp
jecxz
popa
aas
leave
dec
inc
cmp
xor
data16
movsb
push
inc
inc
shr
je
in
or
mov
mov
mov
xchg
jae
mov
lcall
pop
add
mov
imul
or
stos
inc
inc
pop
imul
movsb
inc
arpl
cmpsl
roll
clc
or
pop
lret
leave
fidivs
and
stc
mov
jge
add
cmp
pop
jmp
stos
xor
fisubrl
jae
sub
loope
dec
test
arpl
sbb
xchg
hlt
or
adc
fdivrl
jo
jge
mov
out
mov
dec
icebp
cmp
inc
shr
in
sub
ss
mov
push
mov
mov
lret
out
mov
sub
loope
mov
enter
xor
call
push
inc
or
ss
outsb
cmp
arpl
mov
iret
pop
dec
shlb
inc
mov
pop
mov
testb
mov
ljmp
fcomps
test
scas
cli
dec
dec
pusha
into
lcall
jns
out
pop
inc
pop
inc
push
sbb
pop
lods
xor
xor
add
popf
cmp
xchg
test
adc
mov
push
cmp
cli
outsb
scas
inc
push
test
mov
sbb
filds
idivl
push
fisubs
rorl
icebp
mov
lret
or
jl
divl
bound
imul
js
dec
cmp
movsl
out
aas
mov
daa
test
outsb
vmovss
inc
xorl
dec
psubb
mov
jne
jo
repnz
pop
sub
mov
lret
in
scas
les
jb
mov
or
cmpsb
lods
pop
out
mov
xor
or
cmc
imul
daa
and
imul
std
lret
add
push
dec
xchg
mov
cli
push
fwait
hlt
clc
lahf
dec
mov
test
lret
mov
out
xchg
lods
call
inc
sub
jnp
cltd
lcall
add
cltd
in
mov
push
mov
cmpsb
xor
push
fdivl
sbb
dec
out
ror
mov
push
mov
inc
dec
test
or
out
popa
decl
rcl
pop
imul
stc
pusha
incl
and
movsl
fiadds
cmpsb
push
xchg
push
add
adc
adc
andl
inc
mov
je
cmp
test
jmp
and
sbb
sub
pop
jne
iret
push
clc
divl
adc
addr16
push
or
pop
pop
bound
out
mov
xlat
mov
mov
ss
xchg
push
loope
outsl
int
mov
push
rol
adc
cld
stos
cmp
fldcw
shrl
push
pop
clc
jns
adc
scas
insb
push
fdivs
jns
lret
lcall
outsb
imul
ja
inc
loopne
sbb
mov
mov
je
sub
xchg
shrl
lahf
imul
jno
cmp
movsl
fdivs
lds
push
push
in
inc
inc
lcall
ret
jecxz
mov
cmpsb
lea
or
dec
test
mov
push
or
cltd
add
jno
cmc
iret
imull
ja
jmp
xchg
add
jne
imul
in
push
sub
gs
mov
movsb
mov
inc
cmpsb
xchg
fwait
cltd
mov
shlb
es
lcall
inc
lcall
fdivl
lock
imull
add
or
dec
icebp
sub
cmc
cmc
xor
inc
stos
es
lret
in
pop
dec
push
test
sbb
inc
call
cli
xchg
in
pop
dec
es
mov
inc
cmp
xor
divl
test
mov
cmp
cmp
out
shl
ds
cwtl
jns
push
fisubrs
mov
loopne
cmpsl
shrb
mov
sbb
xchg
das
mov
shll
push
cmpsl
insb
mov
and
xchg
pop
das
xchg
arpl
pushf
fists
push
lods
adc
dec
pop
push
cmc
xor
dec
mov
push
pop
mov
packsswb
push
and
inc
flds
add
pop
or
call
push
push
or
mov
adc
arpl
mov
mov
inc
mov
popa
mov
jecxz
seta
popa
in
outsl
inc
stos
inc
fstl
sbb
adc
inc
in
inc
sbb
pop
test
dec
jmp
jne
push
clc
mov
fdivs
cmpsl
outsb
xchg
sub
data16
add
inc
push
stos
push
pop
sbb
sti
push
ja
xchg
add
mov
shrb
shlb
and
add
add
xchg
push
jp
pop
ja
fmull
rcll
inc
push
aam
lahf
sbb
mov
dec
dec
mov
lock
or
cmp
or
and
sub
nop
jecxz
sti
xchg
ljmp
rorl
pop
fsubrl
cmp
pandn
ds
jecxz
or
fbstp
push
lods
push
inc
lods
scas
roll
lods
cmpsl
mov
xor
cmp
and
inc
in
sub
shll
andb
in
sbb
les
adc
and
lea
into
in
adc
stos
jmp
js
arpl
add
xor
cmc
mov
mov
pop
xchg
lods
ficompl
fninit
xchg
jne,pn
enter
dec
and
jecxz
subl
mov
or
and
enter
es
lods
xchg
lea
xchg
sub
out
in
xor
xor
push
push
mov
cltd
sub
je
mov
in
lcall
jmp
pop
lret
push
inc
mov
mov
xor
adc
jo
fs
popf
outsb
sub
in
stos
push
and
insb
test
push
push
popa
mov
jo
shlb
js
sub
inc
adc
sbb
sub
adc
scas
jge
in
xor
daa
and
xchg
mov
mov
mov
push
jne
mov
in
xor
bound
leave
cwtl
rcr
je
outsl
mov
leave
sbbl
sub
jge
cmp
aaa
leave
mov
inc
dec
test
aam
cmp
mov
adc
test
xor
inc
or
fdivl
in
mov
cwtl
repz
xchg
adc
lret
dec
mov
mov
aaa
ret
subb
xor
adc
lds
push
dec
cmp
inc
jo
pop
push
push
jle
sub
push
adc
cmp
std
pop
in
sbb
inc
jno
mov
es
mov
push
mov
push
push
cmpsb
jl
add
insb
xorb
or
mov
lret
push
dec
inc
sub
fildll
jge
mov
fidivrl
mov
dec
mov
adc
dec
arpl
dec
sbb
pop
mov
aas
in
pushf
mov
imul
pushf
pop
lret
xchg
stc
jecxz
adc
sarb
repnz
cmp
cmpsb
outsl
jp
in
push
inc
mov
add
push
in
add
adc
dec
mov
cltd
icebp
and
xor
cmp
sti
repz
sbb
and
cli
fs
pop
dec
pusha
test
dec
and
dec
addr16
push
int
cltd
jle
lret
and
dec
outsl
aas
sti
pusha
pop
fstl
icebp
xor
btr
in
add
cld
xor
push
fsubl
mov
out
pop
movsl
push
adc
xchg
std
aad
and
xchg
adc
cmp
pusha
rdpmc
adc
or
test
jl
push
jmp
stc
in
xchg
cmp
ljmp
lock
sub
pop
popa
das
pop
mov
pop
or
jnp
fsubs
jmp
jl
lret
pop
pop
loope
and
mov
xchg
push
xchg
mov
sbb
hlt
mov
sahf
sar
outsl
fisubl
add
js
mov
inc
orl
lahf
or
push
mov
mov
mov
mov
pop
push
push
sub
push
enter
mov
dec
xchg
jne
lock
sub
pop
jp
dec
popf
loopne
cli
data16
jae
inc
xchg
xor
push
jmp
cmpsl
fsubl
inc
pop
sbb
addr16
push
pop
in
or
inc
xchg
xor
fldt
cmpsb
jl
jbe
shrl
add
mov
leave
fld
nop
shll
xor
mov
hlt
xchg
adc
lea
cs
xor
js
imul
popa
mov
loope
aam
mov
in
mov
fsubr
xchg
ss
dec
push
test
add
adc
lcall
hlt
xor
xchg
mov
insb
cmp
jno
cmp
pop
and
adc
mov
lret
sbb
jle
or
loopne
mov
aaa
mov
mov
out
add
shlb
or
xchg
outsb
or
repz
jne
push
das
lret
pop
call
cmp
mov
pop
adc
hlt
xchg
adc
add
ljmp
push
std
xor
shll
cwtl
pop
add
mov
ds
mov
push
or
ljmp
aas
gs
idivl
mov
cs
sti
loopne
std
rclb
mov
aas
pop
sbbb
in
xchg
test
bound
in
sbb
sub
and
add
js
pop
lea
mov
lea
rcrb
pop
or
adc
mov
fimuls
mov
leave
scas
in
mov
mov
fs
fstps
js
lea
or
inc
bnd
leave
jb
lock
loopne
lcall
sbb
aad
ret
imul
cmpsb
scas
ret
in
dec
es
lods
push
out
mov
xchg
shlb
mov
adc
jb
iret
dec
jae
and
push
or
fwait
cltd
push
and
fwait
ljmp
ficompl
and
les
jmp
out
negl
sub
mov
mov
cwtl
call
cmp
cld
stc
lahf
call
xchg
add
inc
mov
sub
xchg
mov
push
dec
repnz
rcrl
lret
pop
jecxz
fisubrs
jecxz
imul
push
scas
mov
ss
sbb
rclb
repz
push
jbe
rcll
in
test
test
inc
jne
xor
ja
mov
mov
aad
and
jmp
sbb
jecxz
lods
xchg
inc
adc
mov
cmp
pop
push
punpckhdq
lahf
sbb
add
shll
repz
xor
clc
or
push
icebp
xchg
fisttpl
fstpt
inc
adc
in
rcr
in
in
xchg
inc
gs
pop
mov
inc
mov
and
mov
and
test
call
sbb
xlat
mov
xlat
xchg
jmp
push
sub
sbbl
pop
jne
add
daa
mov
pop
lret
add
sbb
mov
jae
mov
sbb
addr16
mov
lret
xchg
xor
jmp
or
jne
pop
add
fsubrs
pop
lcall
pop
mov
xchg
inc
and
jecxz
lods
mov
push
fbld
jns
mov
imul
mov
xorb
add
mov
and
jno
lock
test
addb
into
call
push
into
scas
test
loope
sbb
clc
mov
sub
stos
loopne
jne
adc
mov
js
cld
push
loop
pop
cmp
adc
cmp
mov
mov
lcall
adc
sub
push
push
and
lods
ljmp
mov
sti
cmc
jno
push
xchg
in
cmp
call
mov
or
add
xlat
push
test
dec
jae
adc
lods
dec
fisubrs
pop
lods
sti
fucomi
and
aas
inc
fnsave
jb
stos
and
sahf
rcl
lds
cld
sahf
push
jp
push
lds
mov
movsl
stos
push
ficoml
out
push
add
mov
push
jno
pop
mov
call
fisubrs
scas
sub
ret
imul
hlt
cld
ljmp
dec
push
mov
mov
les
xor
jae
mov
mov
lcall
sub
adc
xchg
clc
popa
dec
hlt
adc
popf
into
or
ss
cwtl
sub
jae
jp
xchg
push
sbb
xor
fs
sbb
or
or
out
movsl
or
imul
lahf
fisubs
mov
mov
add
xor
sub
movsl
fwait
lret
xchg
leave
movsl
mov
jle
cmp
out
mov
cltd
jecxz
lock
fsubr
pop
int3
lds
addr16
sbb
mov
adc
push
sbb
arpl
enter
and
repz
ret
leave
xor
dec
sbb
dec
cwtl
cmpsl
xor
sbb
dec
jbe
push
sbb
scas
cld
xchg
pop
dec
ficompl
rcrb
mov
mov
fcoms
lods
aas
pop
xlat
mov
gs
xor
shrb
add
stos
pop
mov
sbb
daa
fistl
and
rolb
xlat
push
sub
or
dec
or
iret
lret
mov
rcr
fxch
aad
add
pop
ja
dec
test
xchg
gs
out
cmp
pushf
into
add
lahf
jmp
sub
pop
fs
sarl
aam
icebp
pushf
insl
fwait
xor
mov
fiadds
scas
mov
xchg
mov
adc
pop
xor
mov
add
push
dec
inc
data16
loope
rol
inc
fistpll
mov
pop
jl
mov
pop
sub
xchg
sbb
adc
jo
mov
sub
in
jge
int3
les
std
xor
shl
fnstsw
cs
roll
pop
dec
cmp
out
adcl
ja
mov
pop
or
add
push
dec
fidivrs
jnp
dec
out
push
stc
jl
repz
dec
mov
sub
sbb
cwtl
js
in
or
imul
dec
sti
push
nop
add
andl
xor
in
test
push
imulb
cld
or
xchg
add
int
out
push
push
popa
xchg
pop
loope
leave
leave
mov
mov
imul
cmc
shrl
int3
cmp
sahf
gs
xor
enter
jbe
and
adc
jg
dec
icebp
jle
enter
push
cmp
out
lods
push
cmp
shr
mov
mov
jl
push
mov
outsb
lret
sub
test
imul
mov
push
into
sbb
out
xchg
mov
push
leave
and
or
sbb
clc
mov
inc
les
fisttpl
and
stc
jb
push
mov
jno
and
movsl
dec
movsb
adc
mov
xchg
nop
inc
or
adc
lock
insb
pop
bound
and
push
lods
inc
call
aaa
xchg
jns
mov
xor
pop
or
cwtl
mov
cmpsl
pop
or
int
xor
cmp
sbb
pushl
xor
sbb
lcall
fdivp
bound
data16
xor
and
lock
dec
std
sub
jbe
sub
inc
mov
shll
mov
test
addr16
outsb
hlt
daa
mov
dec
jecxz
sbb
add
cmp
insl
inc
jle
mov
ror
xorl
addr16
inc
iret
lods
mov
cmp
cmc
xchg
add
jo
scas
cmpsl
pop
cmpsl
aad
fbld
mov
or
inc
repz
cmp
call
fxch
mov
push
add
sbb
sub
int
add
into
jns
arpl
push
cli
mov
xchg
insl
or
lahf
test
nop
pop
gs
imul
hlt
lock
cld
mov
enter
jae
mov
sahf
dec
xlat
sahf
sbb
dec
fwait
or
jecxz
insl
mov
imul
int3
aad
es
or
sub
pop
dec
push
test
nop
mov
ficoms
jg
fwait
addb
pop
cltd
inc
and
fdivrp
into
cwtl
inc
fcoms
mov
flds
xor
mov
dec
hlt
test
sbb
pop
addr16
jmp
sbb
dec
std
dec
xor
mul
dec
out
xchg
imul
pop
adcl
cs
mov
jmp
pop
xchg
cmpsl
add
stc
imul
sbb
and
fisubl
das
cmpsb
cmp
data16
ljmp
fidivl
pop
out
push
sub
lds
fldt
adc
stos
mov
sbb
sbb
mov
int3
xchg
jp
mov
xchg
loopne
test
add
dec
mov
or
outsl
ds
jne
cwtl
jne
inc
push
add
sub
sub
jno
xchg
pop
pop
daa
jnp
or
push
push
clc
sbb
jo
adc
mov
pop
movzwl
sbb
and
insb
mov
xor
test
sbb
cmp
aad
shlb
fcmovu
adc
mov
jnp
jne
adc
pop
pop
fwait
adc
mov
iret
fmuls
cli
mov
arpl
or
cmp
mov
cltd
mov
aad
xor
dec
jle
aam
add
pop
xchg
stos
dec
in
pop
rolb
sbb
sbb
sbbb
sub
insb
sub
adc
mov
adc
shl
push
fwait
push
cwtl
push
sbb
or
gs
mov
adcb
jmp
add
iret
test
aam
and
sbb
hlt
jge
test
and
xchg
and
enter
sub
iret
inc
outsl
xchg
mov
mov
loop
add
aaa
xchg
out
inc
cmp
jge
data16
push
mov
shl
jb
fmuls
stos
or
or
aas
xor
fisubs
dec
mov
repz
fldt
enter
fisubrs
daa
adc
insb
inc
dec
xchg
les
imul
adc
xor
pop
es
out
push
fs
push
lret
insb
dec
xchg
mov
dec
hlt
or
addr16
jbe
imul
loop
ret
mov
cltd
fcoml
adc
dec
hlt
mov
mov
pop
stos
lahf
loopne
inc
xor
loop
push
dec
cmp
cmp
jo
dec
cmpsl
enter
sub
add
nop
xlat
mov
jle
jns
outsb
mov
sahf
mov
mov
sbb
add
test
pop
jmp
pop
add
fcmovbe
ja
js
and
in
jge
jg
lds
popa
inc
out
xchg
ret
adc
xchg
shlb
inc
and
push
hlt
mov
sub
pop
mov
sbb
adc
mov
or
add
xor
push
sti
popa
jo
mov
sarl
mov
movsl
arpl
stos
data16
and
hlt
or
mov
popa
lret
mov
dec
cmp
mov
and
inc
roll
imul
das
pusha
insb
jbe
pextrw
dec
jmp
subl
scas
pop
daa
xor
mov
aad
mov
jns
or
fcmovnbe
test
cmpsl
sbb
mov
cmp
mov
pop
dec
movb
out
push
outsb
aas
pop
out
dec
push
js
xlat
adc
sub
cs
sbb
int3
dec
sbb
add
mov
sbb
push
sub
andb
dec
scas
nop
pop
jle
test
aas
outsb
notb
push
pop
sub
cmp
xor
mov
stc
or
and
sub
mov
mov
vmovupd
imulb
fsts
jno
bound
sbb
mov
in
lock
popa
out
dec
fidivrs
dec
jae
jb
add
and
negl
sbb
xor
inc
out
push
sbb
jo
in
jmp
pop
popf
dec
sub
jle
push
bound
stc
inc
jns
inc
cwtl
fwait
out
jno
xor
jno
call
fsubrs
out
out
stc
push
jo
add
ja
stos
add
popa
shrb
rolb
adc
mov
inc
test
stos
xchg
dec
adc
inc
movsl
int
mov
imul
stos
push
rcll
pop
pop
lods
dec
push
push
aaa
xchg
fstpl
aaa
out
inc
scas
xchg
jb
mov
pop
aas
ljmp
mov
dec
ss
loope
dec
stc
movsl
dec
movsl
jp
xchg
fisubs
addb
and
fbstp
outsb
add
insb
out
adc
and
pushf
bound
scas
xor
cmp
mov
pop
les
xor
jnp
and
ja
ljmp
pop
ss
sti
inc
mov
lcall
and
push
mov
sub
push
addl
das
cmp
jl
orb
rcr
fs
mov
mov
int
push
sub
mov
pop
xchg
lock
js
outsl
inc
lret
xor
dec
push
sbb
mov
or
xchg
inc
add
nop
or
out
inc
orw
in
xchg
pop
cmp
fists
stos
outsl
rcr
sahf
jns
or
sahf
fistps
dec
shr
jmp
aad
mov
mov
pop
push
mov
dec
fnstenv
mov
lret
shl
cmpsl
add
inc
sbb
mov
fcmovnb
sub
adc
push
repnz
mov
das
adc
xchg
mov
dec
out
pop
lea
pushf
push
lods
test
mov
rcrl
jg
enter
lods
stos
xlat
out
scas
jne
je
xchg
cmp
mov
jne
out
adc
mov
push
push
or
push
js,pt
ret
pop
rorl
test
push
or
clc
pusha
mov
aad
fbstp
int
push
lcall
xchg
adcl
in
test
mov
arpl
dec
jecxz
pusha
mov
sbb
out
divb
lds
jmp
push
inc
jae
lret
inc
pop
popf
sub
add
cmpsl
repnz
inc
ds
mov
xorl
sahf
xor
and
xchg
pop
aad
dec
comiss
inc
mov
cmp
xchg
mov
mov
outsl
aad
sub
push
inc
push
jg
shll
xchg
mov
xor
cmp
xor
cwtl
lea
and
jl
syscall
mov
jecxz
ficomps
iret
stc
cli
mov
fpatan
mov
and
lret
pop
leave
sub
xchg
sbb
pop
lods
aam
test
ja
xor
mov
mov
jnp
fcomi
xchg
dec
sahf
xchg
jecxz
hlt
je
stos
shl
dec
rcll
or
sbb
jb
addl
loop
lahf
dec
stc
xor
xchg
outsl
pop
fisubrl
or
inc
and
repz
aad
jle
js
xchg
push
mov
inc
scas
mov
jae
in
jmp
cmp
dec
sbb
mov
or
idivl
xchg
shrl
je
sub
fldenv
scas
or
bound
xchg
cmp
mov
sbb
cmp
into
test
sbbl
jbe
data16
push
ret
and
sbb
adc
aam
push
negl
popf
jae
xor
xchg
cs
mov
mov
inc
mov
push
addr16
mov
sbb
int
lea
shrb
and
lahf
je
idiv
cmpsl
mov
dec
pop
stc
int3
mov
mov
mov
cli
lcall
int
adc
cmp
out
mov
mov
sbb
push
mov
shlb
out
or
ret
imull
xchg
pop
ja
push
scas
call
clc
jns
or
push
nop
xor
aaa
jmp
insb
std
mov
sub
cltd
add
lods
mov
mov
jmp
add
dec
clc
ret
in
dec
fsqrt
lods
aam
mov
mov
jl
fimuls
and
xchg
xchg
loop
jge
cmp
push
stos
add
int3
ja
jne
sbb
cmp
add
test
in
jg
inc
sbb
mov
aam
fdivl
out
push
push
cmp
loopne
pushf
icebp
mov
adc
scas
loope
mov
fisubs
dec
mov
mov
mov
stc
cmpsb
aad
std
nop
outsb
xchg
and
loop
movsl
jo
mov
ss
clc
adc
inc
xchg
jmp
lret
outsb
sahf
mov
cld
sub
xchg
jae
push
fwait
cmpsl
inc
lods
push
push
into
fs
or
shl
cmp
lods
ror
mov
std
outsl
loope
push
xor
sti
jns
push
xor
cld
sbb
pop
cmp
push
pop
inc
ret
arpl
das
out
inc
and
rcrl
fstpt
inc
mov
cmpsb
adc
xchg
mov
daa
test
outsb
out
mov
mov
pop
lods
mov
jle
pop
fisubrl
sub
add
movsb
loop
mov
or
jno
aad
or
pop
ja
adc
dec
jge
cwtl
sbb
sub
or
cli
in
or
jle
inc
push
insb
jnp
cmp
add
pop
sub
lret
imulb
lods
inc
push
mov
or
cmc
sbb
add
lods
sub
jnp
int
fiadds
sahf
fists
mov
inc
fdivrs
lret
clc
pop
add
pop
cmp
inc
push
sbb
lcall
cwtl
gs
mov
jle
mov
adc
mov
divb
cmpsl
cmp
xchg
cmp
ds
inc
fwait
pop
inc
push
or
shrb
fs
mov
stos
rorl
icebp
fidivs
movsb
fnstsw
push
cwtl
push
arpl
fwait
sbb
loope
fs
fisttpll
in
xor
mov
jbe
push
jne
push
repnz
push
sub
mov
cmp
mov
es
mov
or
pusha
adc
sbbl
or
int
inc
pop
xchg
movsb
insb
mov
fldt
iret
xor
std
dec
iret
out
aam
push
cmovnp
in
xor
fdiv
push
fwait
inc
xor
xor
xchg
in
mov
jo
repz
sub
xor
push
sbb
xchg
cwtl
or
imul
lock
dec
push
add
jge
rclb
shrb
int
mov
or
add
and
and
pop
ljmp
lea
dec
stos
out
rorb
loopne
dec
jns
or
sbb
mov
or
inc
arpl
leave
cmc
pusha
xchg
lods
popf
pop
cli
inc
je
xchg
xchg
xchg
xlat
push
sub
pop
testl
add
in
ficomps
jmp
or
mov
hlt
pop
xor
and
jmp
sbb
pop
test
fcoms
sbb
rolb
push
inc
mov
clc
dec
pop
gs
or
fadds
inc
mov
xchg
sahf
push
test
xchg
and
insb
das
sbb
adc
daa
je
test
jne
or
jmp
mov
and
imul
add
pop
lds
ljmp
add
xchg
mov
stc
repnz
add
out
xor
sbb
adc
push
sbb
stos
cmpsb
sar
call
arpl
push
sbb
filds
inc
xor
add
add
sbb
test
cmp
dec
xchg
sub
stc
outsl
test
cld
mov
sub
mov
decb
lods
and
pop
scas
dec
cmc
dec
cmpsl
adc
inc
jae
inc
push
scas
jl
daa
sub
outsb
cwtl
pop
mov
popf
in
mov
mov
je
or
sbb
sti
mov
ljmp
rorl
icebp
dec
jo
iret
pop
ds
jno
rcrb
scas
sub
mov
cmc
push
testb
sahf
arpl
xchg
dec
ja
pop
sub
jl
mov
movsb
test
pop
xchg
decb
pop
push
push
dec
mov
int
jae
gs
mov
cmp
jns
xchg
loope
lock
out
or
dec
mov
flds
pusha
lret
lods
mov
adcl
outsb
int3
mov
jg
mov
xchg
mov
and
mov
out
or
pushf
cld
movsl
xchg
shll
scas
add
mov
xsha256
cmpsb
aad
clc
xchg
xlat
movsl
mov
sub
int
xor
daa
cmp
sbb
out
push
dec
xor
testb
imul
xorl
scas
cmp
xor
movsb
pop
mov
das
add
lods
repz
sub
or
filds
push
inc
jg
lds
pusha
loopne
adcl
ret
iret
push
lahf
rolb
mov
jmp
push
xchg
pop
lods
call
cmp
push
stos
add
sar
adc
adc
js
mov
movsl
mov
das
divb
imul
stc
or
js
hlt
ret
pusha
push
mov
mov
jb
lea
cmp
jecxz
leave
and
lret
aam
inc
das
jno
lahf
rorb
push
inc
push
or
mov
mov
jg
scas
mov
in
test
outsb
pop
out
sbb
lock
dec
dec
push
nop
or
or
pop
jl
xchg
test
out
cmp
xor
or
sahf
imul
jge
adc
cli
push
dec
jmp
mov
das
and
mov
add
and
aas
and
mov
mov
call
shlb
movsb
mov
repnz
mov
in
lods
arpl
add
inc
dec
push
into
cltd
xlat
or
push
dec
cld
and
dec
mov
sarl
add
scas
fdivl
mov
dec
mov
sbb
test
sar
aad
push
jmp
icebp
icebp
ss
mov
xchg
mov
neg
push
ds
pop
cmp
dec
cmp
pop
mov
and
pop
mov
jne
insl
mov
dec
out
jbe
repz
or
mov
insl
aam
sbb
pop
fwait
sbb
aad
lea
and
lahf
xor
lock
jmp
out
les
jg
nop
fisubs
cmp
fwait
mov
mov
mov
cmc
in
mov
leave
popa
xchg
push
mov
mov
adc
and
ret
add
repnz
xchg
test
jb
out
jl
mov
test
inc
pop
and
inc
mov
insl
repz
xchg
cli
mov
inc
fmull
pop
lds
jg
add
push
push
sbb
subl
jle
loope
push
rorl
dec
pop
ja
dec
pop
adc
and
int
pop
getsec
or
repnz
dec
add
inc
inc
imul
nop
pushf
dec
dec
fiaddl
shrl
push
mov
jno
iret
jmp
jne
cs
mov
pop
pushf
in
rcrl
shll
mov
orl
pop
xchg
pushf
test
jne
pop
das
and
ds
push
leave
div
fcomip
and
jmp
or
testb
jecxz
lret
orl
pop
or
movsb
push
sbb
ja
int3
jge
cli
push
or
inc
sbb
push
aam
movsb
shll
popf
insl
push
jnp
fst
js
imul
shlb
bound
sbb
fidivs
out
mov
jne
add
mov
ret
jns
pop
clc
pop
out
jmp
test
xchg
mov
shrb
add
outsb
push
fs
imul
shlb
clc
add
int3
arpl
lods
daa
push
lcall
cmp
sbb
push
lds
hlt
cmp
cmpsb
andb
and
mov
inc
call
push
dec
mov
dec
sar
fdiv
pop
ja
int3
ret
sbb
ret
fs
imul
xor
das
sbb
retw
or
mov
idivl
cs
or
ljmp
dec
movb
push
xchg
lahf
lock
mov
and
jecxz
pop
xchg
shlb
in
out
pop
inc
add
and
adc
movb
or
jp
jno
loope
sub
mov
cli
xor
xchg
inc
in
dec
inc
sbb
sbb
adc
jmp
xor
icebp
nopl
xchg
mov
xchg
scas
jbe
push
sbb
rolb
call
lcall
sbb
jp
xchg
push
sbb
in
addl
popa
or
bnd
lods
int3
or
mov
mov
mov
idivl
lods
aas
jno
bound
pop
scas
mov
push
xchg
out
sub
in
fwait
dec
in
push
sub
inc
ret
or
jnp
jge
xor
movsb
bnd
es
pop
add
pop
cmpsb
mov
inc
roll
in
sar
mov
lods
cmpsl
test
das
dec
aad
clc
sbbb
jle
cmp
icebp
inc
cmp
push
add
pushf
cs
std
cmpsb
mov
inc
or
test
pop
xor
push
les
jle
add
fistps
rclb
shl
cs
mov
inc
icebp
jbe
or
int3
popl
push
je
sbb
lret
mov
jg
mov
push
leave
pushf
add
in
stc
pop
rcl
inc
adcl
enter
adc
pop
subl
pop
sub
subl
gs
xchg
push
test
mov
sti
ds
pop
and
cmp
mov
pop
and
out
sub
ss
lahf
sub
lret
or
lea
insl
xchg
sub
call
fisttpl
push
adc
sbb
clc
sbb
fs
and
mov
sbb
roll
loop
add
orb
xor
mov
xor
cmc
xchg
ret
stos
pop
sarl
jmp
cmp
iret
call
nop
push
test
pop
inc
rcr
cmp
aad
jno
loopne
push
mov
and
sub
adc
adc
or
pop
leave
lods
test
notl
xchg
test
dec
stos
cmp
repnz
push
adc
pmuludq
xor
sbb
inc
mov
add
cmp
mov
mov
sti
int3
out
mov
xchg
cs
mov
in
push
sub
jns
das
cmp
xchg
pop
and
iret
out
xchg
negb
mov
int3
sbb
jl
and
mov
out
das
ret
or
scas
xchg
cmp
inc
lret
mov
ljmp
lcall
insl
inc
lret
out
pop
cmpsl
xchg
sbb
cli
inc
negl
or
adc
test
pusha
rcl
pop
lret
cmp
sub
pop
sbb
or
test
push
dec
shlb
imul
sbb
xchg
ss
jb
lods
pop
or
inc
out
ss
sub
js
pop
outsl
jnp
les
iret
sbb
sahf
pop
xor
adc
xchg
and
scas
stc
mov
insl
imul
shll
and
mov
add
adc
push
loop
jae
push
pop
add
leave
xor
sbb
fdivrl
sar
push
add
pop
out
arpl
les
out
cli
pop
inc
mov
add
arpl
gs
mov
daa
pop
mov
stos
mov
mov
pop
or
gs
aaa
ret
mov
jg
jnp
leave
js
jo
sbb
adc
insl
jns
inc
sub
push
nop
or
sbb
test
jge
mov
fdivl
iret
inc
addr16
rcrl
sahf
test
push
repnz
insb
lock
dec
insl
cmp
mov
ja
jg
fwait
enter
or
fdivs
in
jnp
mov
cld
dec
push
fiadds
push
or
std
sbb
jae
push
decl
sub
push
fstp
fildl
out
inc
xchg
inc
lock
inc
mov
cld
sub
roll
xor
and
push
rcll
cmp
mov
mov
pop
andl
repnz
ss
sbb
push
pushf
inc
mov
adc
sbb
dec
int3
aaa
iret
das
xchg
aaa
daa
ret
and
cltd
gs
ja
int3
insl
mov
fs
or
inc
sbb
push
push
ds
inc
jns
scas
and
mov
mov
cmc
mov
dec
jae
mov
mov
out
addb
mov
jb
inc
in
jo
push
fwait
xor
adc
sbb
jnp
sbb
mov
dec
or
cld
leave
lret
sub
pcmpgtb
adc
cmpsl
in
push
dec
add
test
push
jp
ret
jbe
xor
inc
cltd
lret
nopl
sbb
add
scas
sti
mov
repz
jnp
dec
and
mov
xor
lret
addr16
dec
inc
inc
xchg
scas
cmp
jne
pop
xchg
loopne
fisubrl
dec
ret
lret
loopne
cltd
dec
sbb
mov
mov
mov
mov
es
daa
jmp
movsb
mov
jp
stc
cmpsb
inc
movsl
lahf
xchg
sti
add
mov
fsubrl
add
hlt
out
inc
jo
mov
aad
or
add
lahf
mov
push
dec
out
ds
out
push
add
insb
addr16
xor
mov
push
xchg
popf
fsubrl
pop
mov
lods
xchg
and
cmp
ja
and
sbb
bound
fnsave
and
mov
in
mov
fs
pop
push
inc
into
clc
test
fs
and
fbstp
imul
xor
cmp
insb
popf
sbb
jbe
and
outsl
arpl
sub
pop
leave
cmc
movsb
adc
shlb
loop
flds
lcall
testl
mov
pop
fimull
mov
mov
push
mov
mov
gs
ret
ror
ret
or
repz
mov
cmpsl
sbb
outsl
inc
sahf
sub
lock
mov
aad
mov
sub
cmp
popf
decl
ss
jp
test
cmpsl
lods
pusha
add
add
aad
cmpsb
cwtl
test
imul
repnz
cmp
mov
inc
aaa
mov
sub
adc
jecxz
test
mov
sub
movsb
adc
leave
pop
dec
lcall
inc
jmp
pushf
mov
sbb
aas
fisubrs
popf
stc
out
orl
into
data16
dec
mov
pushl
pushf
lret
out
push
fcom
inc
or
pop
rorl
inc
hlt
rolb
jecxz
hlt
sbb
movsl
movsb
lock
nop
or
outsl
mov
dec
mov
incb
fucomp
aaa
repnz
movsb
jp
pop
fstl
mov
push
rol
cmpsb
sub
sub
add
push
sbb
xchg
fbstp
in
add
xor
mov
icebp
mov
sbb
and
lret
or
scas
iret
int3
xchg
jl
sbb
sub
lcall
mov
xor
dec
out
test
aad
lahf
or
jp
dec
lcall
out
popf
mov
adc
pop
in
sbb
xchg
test
xchg
icebp
adc
pop
push
movsl
ljmp
xor
clc
xchg
icebp
ljmp
pop
fistpll
jae
in
cmp
jp
add
out
pop
or
aaa
pusha
addr16
icebp
cmc
loope
mov
inc
push
mov
mov
movsl
mov
lods
rcrl
cmp
cmp
mov
inc
stos
jnp
shrl
ljmp
mov
cmp
out
std
mov
and
sub
insl
out
std
add
add
mov
sbb
dec
sarb
hlt
jle
loop
xchg
lods
dec
out
shl
fdivrl
jl
rcl
testl
push
add
out
dec
xor
add
sub
dec
fcoms
test
cmc
jae
inc
jno
ret
jge
scas
ss
sahf
sbb
aas
ffree
pop
popa
cmp
lods
dec
shlb
push
jp
mov
mov
sub
rcrb
push
add
cli
and
lahf
xchg
push
sbb
mov
cmp
fsubrl
gs
jle
mov
jg
cmp
popf
sbb
xor
cmp
sub
in
xchg
int3
push
lds
cmp
dec
push
std
into
pop
mov
inc
xchg
dec
fsubrs
push
lock
popa
inc
add
into
cmpl
mov
es
push
add
rorl
sbb
xorl
dec
xor
cmp
in
imul
sbb
lods
psubq
outsl
mull
shlb
sub
gs
mov
int
inc
jae
cmp
ficoml
mov
cmpsl
int3
lahf
push
iret
adcb
jae
pop
aaa
add
movsb
es
push
js
and
jmp
jl
pop
mov
inc
lea
push
mulb
cmp
xor
xor
fnsave
sub
xchg
lret
jae
test
movsb
lea
xorb
fwait
lock
mov
insl
aas
jbe
cwtl
adc
hlt
mov
jp
mov
mov
or
outsl
ror
fldt
push
orb
daa
pushf
xor
jae
cmp
pop
fs
or
pushf
push
cli
mov
jb
push
inc
sahf
fsubrl
fisubs
cmp
cmp
rcrb
mov
int3
call
fbstp
ret
jmp
push
popa
xor
and
lods
out
mov
testb
stc
pushf
fwait
outsl
daa
test
jge
add
dec
in
in
movsb
rcr
fildl
ret
xor
bound
dec
aaa
push
xor
in
nop
je
out
cmc
repnz
dec
mov
fnstsw
pop
inc
and
mov
gs
pop
scas
aaa
xor
aaa
pmuludq
sbb
fistps
mov
cwtl
sbb
addr16
dec
hlt
mov
pop
subl
adc
pop
daa
sarb
dec
xchg
cmp
xchg
xor
pop
stos
sub
push
hlt
cmpsb
xor
jbe
scas
and
stc
sub
les
ret
mov
fs
fwait
out
mov
xlat
adc
pop
sbb
decb
cmp
mov
aas
and
mov
jne
mov
fisubrl
dec
mov
pop
push
jbe
imul
push
lcall
cmp
jbe
xchg
stos
mov
sub
int3
loopne
mov
jp
mov
jmp
stos
fsub
int
iret
push
cmc
lock
push
jnp
loop
inc
mov
fnsave
xchg
mov
rcl
inc
iret
mov
jle
push
xchg
and
je
cmpsl
xchg
mov
fwait
mov
pop
insl
xchg
icebp
xchg
push
fdivl
inc
imull
inc
xor
pop
pusha
xor
inc
jae
jmp
leave
jne
sub
inc
mov
test
fiaddl
jl
push
outsl
or
xor
mov
movsl
mulb
in
xchg
outsb
lds
das
push
dec
sbb
popf
fisttps
jne
push
xor
inc
rcrl
fadds
in
sar
int3
sub
push
push
sub
mov
je
sbb
push
cwtl
adc
ljmp
push
out
fldenv
inc
sub
scas
fwait
mov
loopne
scas
jo
out
aaa
repz
add
xchg
cs
je
adc
push
add
enter
arpl
fiadds
sbb
dec
push
sbb
fldenv
outsl
cmp
clc
pop
movsb
push
mov
lock
jno
xchg
scas
sbb
pop
lcall
imul
idivl
mov
jp
cmp
outsb
sub
cmp
shll
push
pushf
cmp
jp
pop
push
pop
pop
out
or
inc
inc
int
pop
lods
shr
psubusb
or
icebp
outsl
sbb
or
mov
jo
xor
call
cmpsl
xchg
inc
fs
popa
jmp
and
sbb
insb
in
repnz
dec
cmc
mov
nop
and
ss
clc
inc
mov
jo
sub
fldl
xor
imul
nop
push
je
jmp
pop
sbbb
fimuls
cmp
sahf
push
push
dec
sti
leave
and
es
insb
loopne
addb
jp
lock
jmp
cmp
add
xor
adc
add
and
nop
mov
cmc
into
ud2
inc
imull
push
jo
xor
xchg
ret
clc
push
mov
shll
push
arpl
inc
xchg
and
leave
test
jmp
xor
jmp
pop
sar
shrl
pop
mov
add
fldcw
or
mov
inc
xchg
icebp
loopne
mov
out
mov
icebp
mov
je
faddp
pop
fldl
or
dec
ja
inc
sub
pop
inc
in
adc
fcmovnbe
inc
fucomi
lret
dec
push
sahf
xor
sahf
ds
daa
sub
jo
fsts
stos
or
mov
movsb
out
mov
clc
or
fldcw
shll
add
daa
imul
and
sub
roll
dec
jbe
fptan
add
mov
jne
xchg
jmp
pop
fnstenv
out
adc
mov
pop
arpl
mov
dec
xchg
sub
pop
imul
inc
outsl
sbb
add
hlt
inc
push
test
push
arpl
out
inc
leave
adc
jo
sbbb
pop
inc
ficoms
push
test
ja
inc
cs
push
ret
popa
and
call
jnp
cmp
in
xor
adc
out
sub
lods
negl
filds
repz
cmp
stc
or
ficomps
mov
push
dec
cmp
stc
iret
inc
scas
lods
leave
mov
sti
pop
test
pop
mov
pop
pusha
mov
push
fcompl
pop
push
pop
dec
pop
lea
test
dec
icebp
sbb
xchg
popa
inc
test
enter
sti
sahf
lods
loop
lret
mov
and
cmp
ljmp
out
jne
test
push
cltd
test
or
mov
out
fwait
out
adc
sbb
cmp
stos
dec
push
push
clc
rcrl
dec
xchg
mov
jns
rcrb
add
movl
outsb
pop
testl
movsb
call
dec
lret
ficomps
stos
add
sub
clc
mov
sbb
adc
mov
dec
dec
jno
mov
jns
repnz
jmp
inc
xchg
jns
testl
jp
add
test
jo
sub
jae
imul
repnz
hlt
or
pop
stos
push
into
movsb
loopne
test
rolb
add
jl
lods
mov
pop
or
incb
adc
adc
test
cmpsb
push
enter
pusha
int3
pop
daa
and
push
aad
adcb
sub
sbb
into
iret
sub
stos
and
push
ret
cld
sbb
lret
es
loop
outsl
hlt
dec
push
stos
sbb
rcrl
and
adc
hlt
mov
scas
xor
and
clc
movsl
xchg
and
std
mov
inc
sbb
int3
mov
sub
jne
cli
push
sbbb
cmp
cmpsb
xlat
aad
push
sbb
test
bound
cmc
mov
and
or
loope
sbb
pop
test
fistpl
adc
lds
mov
aaa
pusha
mov
mov
pop
cmp
orb
mov
loopne
in
stos
faddl
dec
mov
push
jecxz
mov
lcall
push
add
pushf
add
cs
adc
or
sbb
adc
push
arpl
ja
jnp
pop
inc
sbb
mov
mov
loope
es
mov
mov
pop
mov
and
pushf
xor
add
adc
mov
pop
push
jl
insb
clc
add
sarl
sarb
sbb
cmp
not
movb
lea
andb
jle
inc
jne
mov
inc
xchg
pop
out
lahf
add
cmp
ret
scas
adc
fbld
es
movb
mov
adc
pop
push
push
cwtl
inc
sub
int3
add
pop
mov
movsl
cmp
sbb
std
adc
sti
and
sbbl
ret
jae
nop
pop
int
and
loop
aaa
pop
cmc
movsl
sub
cmp
xor
mov
call
xlat
cwtl
cwtl
loope
arpl
mov
outsl
jb
mov
mov
insb
push
mov
xor
mov
inc
cmp
pop
adc
mov
popf
imul
mov
xor
cmpsb
cmpsl
inc
pop
bt
jno
and
cld
jmp
daa
les
jg
lea
popa
sub
xchg
push
adc
in
lahf
aad
push
add
mov
mov
mov
dec
rcl
pop
sub
cmpsl
mov
clc
xchg
sbb
mov
add
inc
iret
movsl
jnp
xchg
cltd
jg,pn
rcll
pop
fstpl
mov
or
leave
fisubl
cmp
mov
adc
lods
icebp
xchg
xor
inc
and
jmp
inc
les
or
and
sub
push
movsl
out
and
pop
xchg
or
in
ljmp
es
ret
scas
mov
inc
stos
adc
adc
ds
xchg
lods
stos
seto
xchg
adc
pusha
xor
popa
jl
dec
cld
push
ss
rcrl
xor
out
int
scas
aaa
lar
add
xor
mov
push
inc
aaa
and
bound
test
mov
das
sbb
stos
cmp
add
pusha
jg
and
test
xchg
sbb
jecxz
test
push
push
daa
js
push
push
jge
cmpsb
push
mov
dec
cmove
mov
fisubrl
js
xchg
test
jns
fmulp
add
xor
xor
mov
mov
aas
insb
xchg
push
dec
jb
sub
ret
call
loop
add
les
mov
rclb
sbb
dec
jae
mov
inc
push
adc
xor
jmp
push
arpl
sub
xor
inc
jg
outsb
mov
add
sub
dec
jno
mov
fldenv
out
insl
test
push
add
dec
pop
add
fstl
adc
jmp
aam
inc
ljmp
push
add
mov
enter
sub
jle
shrl
jnp
stos
mov
int3
stos
daa
mov
cltd
loop
adc
subl
nop
pop
shlb
push
mov
inc
ret
test
out
fildll
and
xchg
or
rorl
les
mov
pop
je
xchg
pop
rcr
sarb
cwtl
xchg
adcl
xchg
pop
pop
jg
mov
dec
and
sub
mov
add
xchg
pop
pop
sbb
stos
inc
jnp
mov
jnp
jno
ret
mov
mov
mov
dec
sub
shrl
leave
in
jno
int
jo
mov
jecxz
cmp
sub
fcompl
ljmp
divl
xor
jae
xchg
sub
xor
push
push
pop
ds
cli
arpl
movsb
pusha
push
fildl
shrb
xchg
pop
bound
mov
inc
shlb
sahf
cmp
pop
xor
xor
cltd
imul
adc
sub
adc
outsl
les
push
mov
jno
lods
pusha
imul
xor
js
mov
sub
pop
into
add
adc
loope
push
aas
outsl
stc
in
aas
repz
adc
cltd
fistps
jge
js
mov
sub
popf
xchg
fdivrl
mov
cwtl
sbb
xchg
jl
pusha
hlt
ret
sbb
jle
aam
jg
lret
push
cs
inc
inc
leave
das
lret
or
or
mul
xchg
add
mov
les
sub
jecxz
daa
and
xor
add
pop
and
sbb
addr16
inc
pop
dec
icebp
mov
dec
mov
jecxz
pop
fcmovnbe
movsl
sub
movsl
insl
inc
movsl
jle
push
xchg
mov
aam
fwait
mov
fisubl
dec
lock
outsb
push
and
std
push
cmpsb
jb
push
cld
test
jl
arpl
test
jns,pn
push
sti
inc
mov
mov
cmp
xchg
shrl
push
pop
test
pusha
inc
mov
mov
add
cmp
pushf
sbb
and
fs
mov
outsl
es
push
push
aam
cmp
pop
nop
enter
decb
cmp
arpl
xor
sub
ret
or
pusha
call
data16
shrb
leave
fwait
mov
inc
mov
push
sbb
repz
and
sub
xor
push
mov
sub
out
ljmp
mov
xchg
rcr
ret
cmc
push
cmp
outsb
pop
sub
pop
addr16
dec
test
dec
in
xchg
fs
sub
xchg
out
pop
outsb
aam
and
cltd
cmp
call
lret
clc
daa
jmp
mov
mov
and
in
xchg
int3
enter
push
repz
cmpb
ret
jmp
push
jno
mov
sbb
mov
cmp
dec
xchg
outsl
or
fldt
nop
adc
sub
mov
jge
arpl
pop
negl
jge
shlb
push
mov
dec
lock
pusha
divl
adc
sti
movsl
push
jno
lahf
xchg
repnz
pop
adc
jae
push
xor
fwait
and
lcall
adc
mov
adc
loope
loop
mov
pushl
out
add
mov
out
sub
xor
and
enter
fistl
test
xor
mov
leave
push
cli
dec
lds
adc
mov
aam
mov
aaa
push
lret
pop
cltd
adc
popl
adc
and
adc
push
das
xchg
enter
imul
jb
push
push
mov
push
push
sahf
pushf
mov
lahf
mov
mov
cs
jmp
loop
cmp
dec
out
push
mov
sahf
std
aaa
or
incl
test
fcmovb
or
jae
mov
pop
bound
ss
fcmovne
popf
loop
or
dec
inc
dec
mov
repnz
sbb
add
outsl
inc
cwtl
cmpsb
mov
jno
mov
inc
pop
in
mov
jecxz
bound
dec
in
sbb
lahf
cmc
pop
ficoms
sbbl
movsb
inc
xchg
stos
ret
call
lcall
lods
xchg
jns
xchg
inc
add
popa
add
mov
pop
aad
and
or
and
sub
dec
jne
test
stc
out
jns
insb
add
cmpsl
setle
cmp
jge
rorl
outsl
idivl
rorl
and
or
jp
cmp
sbb
dec
push
cmpsl
pop
aas
pushf
mov
aas
dec
adc
lds
sti
xor
adc
cmp
mov
hlt
add
movsl
nop
dec
pop
jle
xchg
xlat
adc
out
add
orb
sbb
jae
sbb
mov
test
add
sbb
cmp
mov
ljmp
jmp
and
ja
mov
xor
or
adc
fisubrs
test
je
sub
bound
rcr
jge
push
or
mov
scas
push
ror
outsb
add
lret
into
cmp
push
movsb
jae
pop
repz
outsl
inc
addr16
popa
sub
push
jp
sti
in
pop
cmpsl
loopne
pop
and
xor
into
jge
and
ljmp
cmpl
shrb
mov
inc
movnti
dec
inc
fnstcw
add
mov
sbb
int3
cli
add
push
inc
jb
fisubrl
push
out
pushf
stc
dec
sti
xor
cmpsb
movb
or
add
or
push
enter
mov
ret
nop
pop
or
sub
jno
cld
lcall
fwait
push
add
daa
mov
inc
inc
lcall
icebp
dec
push
push
int3
rorl
outsl
or
mov
mov
cmp
les
and
jbe
inc
adc
mov
inc
mov
jge
scas
xchg
imul
mov
in
and
mov
push
jmp
mov
sbb
xor
jle
sahf
hlt
push
and
cmp
shl
hlt
rcrb
test
orl
rsqrtps
lods
add
push
xchg
sarb
in
inc
incb
or
sub
inc
gs
cmpps
ljmp
rcrl
mov
cwtl
jecxz
jne
mov
dec
rcrl
cli
jbe
out
and
xor
repz
aaa
lret
lods
xchg
xor
jle
out
movsb
imul
mov
sahf
jl
insb
inc
xchg
jb
js
insl
out
push
popf
mov
in
and
inc
inc
fldenv
fnstsw
fsubr
inc
cmpb
stos
fadds
test
lds
cmp
pop
add
fnstsw
mov
mov
call
shll
lock
ljmp
btc
sbb
dec
pop
sbb
out
decb
sbb
loopne
pushf
sub
call
and
jecxz
lods
push
rorl
pop
pop
sub
sti
comiss
and
outsb
or
jne
test
icebp
mov
pop
adc
je
pop
cwtl
or
sub
or
mov
out
lods
mov
rcrb
push
cwtl
fimuls
lods
jne
call
mov
in
es
sbb
fcoml
and
pop
sbb
jnp
inc
test
jo
adc
pop
movsb
xchg
push
pop
out
xor
aad
push
pop
jnp
or
imul
push
dec
and
fnstcw
jecxz
mov
decl
xchg
rcrb
pop
push
popa
mov
or
test
and
inc
movsb
adc
daa
ror
ljmp
sbb
push
idivl
mov
cmp
stos
push
dec
cld
fwait
imul
fwait
adc
out
sub
inc
les
mov
dec
jo
dec
cmpb
cmp
addb
pop
aaa
js
add
test
add
std
pop
inc
mov
std
xchg
fsubrl
mov
mov
cmp
xchg
in
pushf
jl
test
scas
hlt
or
pusha
lcall
aad
sub
cmp
lea
fcmovnb
push
pop
movsl
into
push
bound
das
repnz
and
loopne
call
push
mov
push
imul
in
jmp
pop
dec
in
jo
popf
xchg
test
ret
xor
jp
push
push
outsb
push
jno
int3
add
mov
ret
scas
xor
sbb
sbb
jp
mov
jmp
cmc
jnp
lods
popf
arpl
xlat
jecxz
push
ror
mov
and
mov
es
shr
popf
das
xchg
dec
jns
push
jne
push
dec
sbb
repnz
popa
and
mov
mov
movsb
jg
cltd
in
or
cmpsb
push
mov
repz
ds
jo
mov
push
xor
jle
sbb
inc
add
test
dec
iret
mov
iret
jg
mov
les
movd
cltd
cld
mov
or
inc
dec
xchg
fwait
sbb
or
mov
testl
jmp
insb
filds
into
cmc
ja
test
xchg
adc
test
ss
mov
sub
fs
sbb
mov
and
cld
mov
mov
out
add
mov
and
movsl
dec
leave
xchg
cs
out
add
cmp
mov
push
cmp
xchg
decb
addr16
mov
fidivl
sbb
cmp
jne
pop
push
jno
xlat
arpl
shl
add
fptan
stos
in
lret
xchg
sub
mov
push
push
and
test
arpl
mov
clc
test
pop
adc
jp
aam
mov
push
inc
lret
jle
dec
leave
sub
sbb
test
pop
iret
sbb
jnp
popf
fcompl
lods
es
add
stos
mov
sub
imul
adc
mov
dec
mov
shll
data16
aaa
and
adc
add
fs
mov
sti
mov
mov
idivb
inc
push
cmp
lahf
jo
xor
lret
sub
aad
lea
fwait
sti
push
fisubl
dec
int3
es
clc
inc
xchg
into
xorl
aam
nop
push
push
push
scas
popf
or
rorb
cli
sub
lods
inc
jp
sub
push
add
movsl
inc
jl
or
mov
push
adc
mov
rclb
lret
inc
repz
sub
jae
pop
fwait
jge
jge
movsl
jle
cmp
cmp
jae
jecxz
fdivs
inc
js
jo
push
push
push
cmp
ds
out
div
adc
lds
mov
loope
xchg
popa
shr
sbb
in
fcom
mov
adc
push
orl
stos
cld
das
lret
das
stos
mov
movsl
and
dec
mov
sti
fdiv
push
mov
out
divb
mov
sbb
ret
ds
or
push
cmp
aas
lahf
fidivs
dec
adc
into
inc
shrb
bswap
jle
testl
clc
xor
xor
pop
and
jbe
cmp
rcrb
lret
sub
cmpsl
xchg
inc
out
test
fstl
adc
mov
sub
lret
ljmp
iret
adc
mov
movsl
add
addr16
pop
es
movsb
arpl
jnp
imul
mov
loop
sub
dec
dec
imul
xchg
jns
add
fcmovnb
cld
in
push
pop
mov
mov
cli
loope
xchg
das
pop
popa
push
std
imul
sbb
nop
mov
faddl
xor
movsw
xchg
push
and
or
sti
mov
jl
and
and
or
push
pushf
into
cmp
mov
mov
movsl
and
into
push
cwtl
cs
rolb
jge
call
testb
push
add
shlb
cmp
sub
pop
nop
cmovl
mov
mov
insl
dec
jns
sbb
jmp
pop
movsl
pop
sbb
jbe
push
sub
sti
jno
add
icebp
lods
xchg
jb
xchg
leave
jns
mov
je
jae
int3
jns
leave
mov
hlt
clc
lret
mov
or
and
mov
leave
push
jno
xchg
add
scas
mov
loopne
cmpsl
repz
pop
nop
or
rclb
data16
stos
fistpll
adc
jle
pop
pop
dec
pop
addb
test
fidivrl
cmc
cs
icebp
sbb
leave
push
movsl
inc
jecxz
cli
cmp
inc
xchg
daa
cmp
clc
fbstp
adc
imul
inc
fimull
sbb
pop
data16
arpl
mov
pop
std
push
sbb
mov
in
fidivl
test
aad
sub
mov
pop
add
mov
popf
cwtl
loop
xor
lods
and
push
cmp
shlb
or
rcll
inc
jae
es
xor
repnz
xor
mov
cld
push
and
jg
into
movsb
inc
xchg
repz
dec
divb
rclb
jmp
pop
mov
fildll
or
dec
or
sahf
xchg
stos
fs
push
test
push
add
jge
ror
stc
mov
data16
adc
add
scas
sarb
mov
inc
pop
aad
and
addr16
in
jmp
in
dec
in
aaa
clc
lods
adcl
test
jge
push
loop
ret
lret
daa
ds
insb
push
sub
into
ss
test
lock
adc
lods
cmp
pop
jmp
call
mov
xchg
imulb
lcall
ret
jecxz
or
in
andl
sub
lcall
inc
xchg
mov
cmp
xchg
pop
pop
loop
daa
jp
loope
scas
mov
adc
jno
cli
sbb
cmp
jge
push
inc
dec
add
sbb
pop
jae
cmp
cltd
int3
and
fnclex
pusha
xchg
xchg
dec
sub
xor
scas
xchg
jbe
lcall
and
jp
push
ficomps
lock
imul
outsb
iret
cmp
mov
mov
sbb
jge
test
insl
jb
leave
sbb
push
mov
adc
outsl
adc
fldcw
adc
pop
mov
sbb
xchg
cltd
jp
lcall
ss
scas
dec
cli
push
xor
and
inc
test
add
mov
inc
mov
mov
repnz
push
push
jecxz
jg
sub
inc
ss
mov
xchg
je
nop
or
inc
ja
jnp
gs
pop
es
push
pop
jo
xchg
inc
setae
lods
sub
lret
in
xorl
pusha
push
mov
pusha
pop
push
or
push
pop
push
fnclex
repnz
push
or
push
inc
jmp
lahf
xchg
push
sahf
out
add
ret
inc
xchg
insb
jmp
jmp
sub
rolb
loopne
shr
shlb
cmp
and
in
mov
adc
hlt
push
out
bound
lods
mov
dec
cmp
sub
mov
lcall
int
daa
xchg
fistl
leave
rep
imul
aas
mov
fnstcw
cmp
es
push
or
cmc
mov
ss
out
std
mov
lret
adc
lcall
frstor
mov
negb
cmpsb
dec
shrl
or
enter
mov
or
mov
sub
mov
cmc
mov
setae
ret
out
pushf
into
clc
add
pop
rcll
mov
and
iret
mov
and
addb
in
cmc
mov
ds
push
xor
imul
xor
cmp
xchg
dec
jg
dec
inc
mov
adc
sbb
sbb
es
in
imull
aam
pop
loope
pushf
mov
cmp
sbb
sarb
mov
cmp
arpl
lock
push
mov
xchg
imul
jmp
test
xchg
and
xlat
arpl
cwtl
mov
vxorps
out
jnp
ss
mov
sub
dec
fisubs
mov
hlt
pop
std
lret
pop
ret
sub
aad
add
daa
bound
stos
cmp
sub
into
jl
adc
daa
in
push
leave
lcall
sbb
add
ja
scas
cmpsb
lock
stc
mov
clc
out
add
mov
mov
lcall
int3
push
add
cmp
lahf
arpl
das
addr16
add
lret
and
in
scas
lock
enter
outsb
sbb
stos
ds
outsl
rcr
test
xlat
loopw
mov
push
sub
sub
push
xor
in
mov
mov
in
xor
call
push
pop
daa
sub
mov
push
clc
subl
xchg
dec
dec
xchg
inc
mov
aad
xor
push
jbe
or
lds
or
inc
fnstsw
dec
lahf
in
adc
mov
or
fdivr
dec
adc
test
imul
or
xor
incl
lods
fidivl
jg
jno
fwait
insl
nop
std
xchg
iret
inc
jmp
fsqrt
mov
mov
cmp
jae
cmc
aaa
sahf
inc
xchg
mov
imul
mov
cmp
ror
and
and
and
cltd
incb
aad
fstpl
mov
movd
pop
int
lcall
cmp
push
les
sub
push
into
sbb
pop
cld
mov
adcb
orb
add
xor
leave
sbb
add
int3
pop
adc
les
mov
call
mov
pop
push
outsb
pop
push
mov
mov
pusha
mov
add
pop
push
and
imul
lds
or
pop
rcl
jns
mov
in
inc
lahf
xlat
push
loopne
test
inc
les
aad
xlat
test
stc
add
push
loop
xlat
jmp
fprem1
inc
aas
rcrb
sub
mov
inc
mov
lods
inc
jecxz
xchg
jecxz
cltd
mov
sbb
enter
adc
jbe
sub
popf
cmp
pop
aad
pop
popa
scas
adc
pop
sbb
ret
xor
sbb
xlat
mov
push
std
mov
or
or
jecxz
cwtl
call
in
jne
pop
ljmp
cmp
xchg
pusha
scas
adc
imul
popa
sbb
xchg
push
sti
inc
mov
jmp
test
jne
adc
filds
mov
mov
lret
mov
mov
iret
push
xchg
mov
adc
push
jl
movsl
cli
add
stos
adc
xor
xchg
daa
jl
adc
scas
imull
inc
out
leave
enter
mov
mov
dec
outsb
movsb
into
and
repnz
les
push
fstpl
mov
popa
jl
push
fs
mov
dec
inc
sub
outsl
rcrb
or
xchg
push
mov
push
pushf
ds
mov
adc
mov
scas
out
mov
push
test
xlat
fcoms
add
mov
push
and
push
cmpsl
mov
mov
push
gs
push
stos
add
fnstenv
dec
push
addr16
xchg
mov
adcl
repz
cmp
mov
push
or
aad
cmpl
enter
add
scas
pop
jb
mov
imul
imul
and
test
js
fnstenv
bound
push
in
fistps
clc
repz
sti
or
add
pusha
scas
mov
cmp
pop
or
cmpsb
ud2
aad
aas
or
mov
xchg
repnz
popl
dec
jno
ret
push
out
sbb
pusha
cmp
dec
xchg
xor
inc
cltd
dec
add
pop
fwait
test
aam
inc
fwait
mov
inc
push
subl
jo
mov
sbb
xchg
cmp
sub
jno
fadds
dec
lret
insl
out
jp
inc
add
adc
dec
ret
scas
jne
mov
addr16
pop
lds
cmp
rorb
sbb
adcb
fsubrl
ljmp
fldt
je
aaa
popa
sub
xchg
aas
push
stos
sub
insl
ss
push
sbb
adcb
mov
inc
daa
or
cmp
idivb
js
xchg
addl
daa
test
jl
ss
cmpb
test
rcrb
cmp
aad
scas
xchg
daa
jne
add
adc
cmp
xor
xor
in
outsb
xchg
dec
insl
pop
inc
fidivrl
pause
mov
neg
divb
dec
nop
sub
add
mov
pop
jb
cmp
cmp
pop
jbe
add
xor
pop
loop
movsl
mov
jb
outsb
idivl
pop
outsb
pushf
fmul
and
dec
sbb
xchg
in
jne
lods
addr16
popa
add
fisttps
aas
scas
dec
inc
mov
scas
sub
testb
std
lock
or
add
test
or
push
and
into
pop
mov
popf
rorl
sub
hlt
mov
jnp
sti
sti
pop
xor
mov
nop
out
or
ja
into
shrl
imul
xor
and
push
push
add
mov
je
cmp
mov
icebp
sbb
test
sbb
jbe
cltd
je
sbb
int3
in
and
or
aam
cmp
pop
xchg
mov
xor
ja
call
and
dec
pop
push
mov
out
aam
jecxz
ja
int
lahf
sub
jmp
mov
mov
pop
xchg
insb
cmpsb
cmp
jno
dec
xchg
negl
adc
inc
and
pop
js
shlb
mov
push
mov
jnp
mov
test
mov
in
test
pop
sub
xchg
repnz
pop
push
adc
mov
shrl
imul
fs
dec
fcompl
testl
add
ds
cmc
xchg
mov
push
mov
dec
mov
cmpsl
imulb
std
xchg
push
mov
outsb
ffree
push
mov
stos
pop
call
xor
lret
mov
pop
lods
xor
test
sub
insl
scas
dec
dec
into
pusha
add
xchg
dec
sbb
les
popa
push
imul
adc
cmpsb
stc
mov
or
mov
arpl
or
mov
xor
sub
mov
enter
jp
pusha
jmp
push
pop
rcll
out
lods
xchg
cltd
lods
pop
leave
sbb
outsb
sbb
and
and
or
ja
repnz
stos
mov
mov
mov
xor
dec
add
sub
das
in
sbb
mov
shll
call
lds
or
mov
inc
push
sub
cmp
fisubs
or
shll
mov
ret
pop
nop
sub
inc
xchg
mov
insl
rcl
add
jmp
and
jnp
cmp
neg
sub
and
lahf
jg
ljmp
cmove
in
imul
scas
outsl
inc
arpl
insb
fidivs
das
stc
test
lods
pop
push
mov
pop
popa
mov
xchg
jns
stos
xchg
subl
in
xchg
pop
inc
das
xchg
aaa
push
push
pop
nop
add
xchg
loopne
imul
and
pop
clc
dec
test
xor
jb
dec
imul
daa
mov
pop
cld
mov
inc
mov
test
dec
es
shrl
imul
daa
stos
mov
andb
add
xchg
jne
and
dec
adc
xchg
jl
cmpsb
test
cli
jg
inc
rcrl
pop
cmpsl
pop
mov
pop
mov
xor
mov
cld
xchg
push
aam
or
sub
out
cs
fcmovne
pop
pusha
mov
dec
popf
sub
push
cmp
xor
pop
rclb
jge
xchg
inc
pop
and
in
sbb
sub
adc
inc
mov
stos
repz
lods
ret
push
pop
lcall
and
jo
cs
dec
dec
pop
pop
cmp
ret
movnti
fildl
add
lahf
pop
xchg
jae
pop
lcall
dec
xchg
popa
jmp
or
ret
pushf
inc
daa
or
into
bnd
push
stos
test
mov
jbe
or
jo
mov
insb
or
mov
rolb
push
push
xor
lock
in
imull
ja
mov
push
xchg
add
jl
ret
sbbl
sbb
test
shl
stos
int3
jne
inc
test
adc
insb
inc
or
mov
ret
mov
or
repz
sbb
pop
outsb
das
data16
xchg
mov
push
pop
xor
push
rcl
setge
les
adc
fistl
int
cmp
testb
adc
jp
addr16
lods
in
std
add
lahf
jb
cmp
mov
fdivs
push
pop
pop
in
push
int3
jae
movsb
jns
jnp
inc
jbe
sbb
loopne
push
adc
fstps
and
leave
pusha
nop
repnz
cmpsb
out
sub
imul
ret
jnp
jns
mov
out
inc
lods
jb
or
sub
or
push
test
sub
jp
std
push
cld
mov
adc
rol
cli
mov
adc
mov
lcall
inc
rorb
lahf
or
in
mov
pop
mov
push
pop
mov
mov
inc
xchg
popa
xchg
stos
in
mov
jne
xor
dec
adc
inc
shlb
in
repz
add
in
sub
mov
add
cmp
mov
pop
pop
jle
mov
sbb
lret
sbb
and
scas
push
pop
lods
mov
sbb
fidivs
sahf
nop
xchg
pop
ljmp
sti
popf
xor
movsl
xor
jns
sbb
ret
jge
xchg
and
in
mov
push
mov
xlat
addr16
mov
sub
lock
scas
test
out
mov
add
inc
pop
bound
xchg
adc
or
out
cmpsb
push
lock
nop
lods
call
test
cltd
xchg
push
mov
jmp
cmpsb
pop
ljmp
leave
mov
mov
std
rorl
push
roll
int3
popa
adc
add
xchg
push
mov
imul
add
sarl
and
cmp
mov
and
xor
lds
idivb
push
cwtl
or
mov
jmp
pushf
mov
dec
adc
and
mov
fsubrl
push
sub
xchg
sbbb
inc
pop
xor
push
mov
hlt
imul
xchg
sub
into
push
inc
sub
inc
jo
xbegin
or
jns
and
lods
sbb
scas
adc
dec
fmuls
outsl
fwait
xchg
sub
cmp
fdivrs
mov
subl
mov
loop
jns
add
ds
sub
jecxz
adc
mov
cmp
shld
dec
test
loopne
mov
fimull
cld
mov
sub
xchg
xor
mov
push
dec
int
test
push
push
inc
je
je
sahf
or
ja
shr
cs
or
jmp
es
mov
jno
popa
fs
inc
jns
sbbb
jl
addb
incb
fwait
cmp
lcall
fldt
fstps
push
xchg
fisttpll
pop
xchg
icebp
sbb
out
mov
ljmp
ja
daa
roll
les
xchg
stos
mov
leave
ret
or
xchg
jg
mov
cmp
jno
adc
addr16
hlt
adc
push
lea
data16
inc
mov
lahf
das
dec
das
mov
push
in
in
pop
jbe
jno
pushf
or
mov
popf
xor
in
sbb
sub
push
lock
scas
mov
loope
out
call
mov
xor
mov
imul
add
add
push
into
and
das
mov
or
adc
xchg
and
and
mov
jb
test
insb
dec
movsl
push
loop
je
xor
pop
jae
aaa
das
lret
sbb
push
in
mov
repnz
test
dec
enter
push
and
ljmp
sbb
stc
mov
or
cltd
push
sbb
pop
in
jns
and
in
xor
cmp
add
mov
cltd
bound
xor
jg
popf
and
imul
shll
and
mov
loopne
je
xchg
pop
cld
movsb
ds
add
or
cmp
jns
mov
sub
mov
nop
int
mov
cmpsl
push
orl
js
jae
in
sub
mov
fcoms
xor
or
insl
push
arpl
arpl
xor
mov
scas
test
rcll
cmpsb
movsl
or
lods
and
loop
scas
test
jnp
lds
stc
cld
shlb
adc
sub
movsb
icebp
jnp
fbld
inc
inc
out
pop
std
pop
dec
pop
loopne
and
dec
or
dec
xor
insl
lds
insb
ljmp
push
in
test
mulb
cmp
xchg
sub
sbb
cmpsb
xchg
inc
arpl
fdivrs
rorb
inc
cmp
ret
xchg
and
mov
dec
addr16
lcall
movsb
iret
ds
ret
sub
add
add
lret
add
fs
jp
das
call
lock
cmpsl
imulb
lahf
test
enterw
pop
adc
imul
mov
sub
cmp
out
imul
loop
xchg
shll
sbb
jmp
call
js
adc
mov
cmc
out
jle
fwait
mov
fdivrp
xchg
arpl
mov
and
aad
adc
mov
cs
mov
cmpl
mov
dec
cmp
sbb
inc
stc
jno
popf
sub
repnz
in
repz
cmp
push
pop
cwtl
in
das
or
cmp
fwait
xchg
test
icebp
es
pop
and
test
ss
and
scas
or
scas
cli
pop
ljmp
xorb
xchg
and
pop
mov
xchg
insl
dec
push
mov
iret
nop
dec
adc
movsl
rorl
xor
das
outsl
aad
pop
out
dec
adc
add
test
int
mov
fildl
and
xchg
rcrl
cmp
std
mov
mov
push
push
out
lret
imul
stos
out
pop
xchg
mov
bnd
int
int
nop
cs
pusha
in
aas
mov
adc
and
inc
sub
sub
mov
nop
cmp
movsl
push
out
fisubl
sub
ss
pop
push
mov
fists
xor
add
cmc
into
inc
rclb
pop
rorb
jmp
subb
popf
adc
cltd
pop
addr16
mov
dec
dec
mov
andl
pop
adc
repnz
dec
mov
sub
sbb
daa
out
xor
mov
dec
int3
inc
add
repnz
xchg
inc
adc
mov
rclb
cmp
popf
xchg
in
cmpsl
jb
inc
mov
outsl
cmp
std
imul
jp
icebp
fists
inc
xchg
mov
xor
in
push
mov
add
cmc
sub
cmp
shr
rolb
in
pop
mov
movsl
fsubrs
into
dec
sbbl
fldenv
ret
scas
add
outsl
push
mov
or
dec
mov
jp
pusha
loope
popa
inc
mov
pop
fistl
mov
lods
push
adc
test
jb
lret
push
loop
popa
lock
mov
mov
std
arpl
push
std
inc
loop
push
insb
imull
test
fsubrl
mov
fnstsw
ffree
jb
sub
push
arpl
mov
into
sbb
pop
js
inc
or
iret
stos
mov
stos
sbb
mov
xchg
pop
jle
fbstp
fisubl
mov
ja
mov
sti
pop
test
sbb
sbb
sub
sahf
js
fistl
pop
setne
or
or
movsl
mov
test
or
inc
or
push
mov
lods
ja
xor
push
cltd
jl
mov
push
mov
cmp
add
aad
andl
sbb
sbb
sahf
fs
div
cmpb
fistps
mov
or
outsb
scas
push
mov
lea
loope
adc
fcompl
cmp
mov
sub
in
jnp
dec
fnstsw
lock
in
gs
or
and
mov
adc
mov
imul
sub
xor
adc
cmp
addr16
leave
ss
mov
in
sbb
mov
and
sbb
add
cli
aaa
std
xorl
lahf
loopne
push
fldcw
mov
dec
vpaddq
rolb
test
gs
sub
decl
int
xor
es
inc
stos
loop
dec
andb
dec
outsl
add
rcr
sub
push
ja
ss
imul
jo
gs
mov
insb
jbe
movsl
sbb
jne
adc
pop
dec
test
mov
cld
lahf
das
jecxz
adc
sub
inc
mov
daa
inc
shll
jne
mov
rclb
fsubrl
cwtl
pop
pop
xlat
fwait
mov
pop
cmp
in
cli
xor
sub
daa
imul
cmpsl
into
repz
pop
dec
insl
out
add
pop
fsubrs
inc
divl
adc
jge
lret
push
mov
fisttps
or
mov
lods
adc
adc
sbb
cmp
mov
and
xor
xor
jb
xchg
pop
ljmp
in
roll
int
mov
dec
pop
test
push
lods
mov
popf
gs
popf
adc
pop
sbb
mov
popl
loope
cmovl
jmp
outsb
xchg
cmp
mov
mov
mov
daa
dec
scas
fiadds
cmc
jae
outsl
out
add
jns
leave
mov
pop
out
shll
rcrl
dec
mov
jno
cmpsl
mov
sti
sbb
fdivrs
mov
aam
or
leave
std
aas
jg
push
in
arpl
pop
inc
orb
dec
adc
adc
pop
pop
dec
pop
add
subl
fmulp
pop
call
andb
scas
pop
adc
flds
ja
cmp
fbld
loop
add
push
pop
add
jle
sub
push
ljmp
sbb
fs
cmc
cs
mov
sub
mov
mov
lcall
xchg
popa
xor
shlb
into
leave
jne
test
or
das
clc
std
pop
mov
insl
and
test
sub
or
cmpsl
cmpsl
mov
xchg
imul
enter
in
in
jnp
mov
nop
rorb
sar
fsubrl
sub
mov
in
dec
mov
sub
pop
rcr
js
mov
aas
sbb
loope
pop
out
shr
xlat
addr16
frstor
lock
popa
andb
das
xor
inc
out
fs
mov
popf
adc
outsb
mov
jbe
jbe
cli
rcr
cmpsl
call
pop
out
mov
cmpb
pop
js
in
push
loop
test
jo
cmp
loope
cmp
xlat
push
push
cld
mov
dec
iret
hlt
xchg
icebp
xchg
dec
outsl
push
sub
and
or
cmp
mov
pushf
jl
jecxz
cld
mov
aas
cwtl
and
mov
mov
jge
adc
scas
cmpb
dec
js
shlb
scas
xor
push
insb
cli
inc
pop
test
pop
cld
mov
push
shrb
in
clc
out
push
cmc
pop
jo
fnstenv
stc
rcl
int
lret
imul
cmp
cmpsl
pop
adc
ljmp
jecxz
sbb
mov
int3
push
inc
lds
pop
or
iret
xchg
dec
mov
repz
dec
int3
or
nop
lds
adc
fcoml
shr
jo
push
adc
mov
mov
pop
pop
sbb
dec
test
add
adc
in
movsb
jae
stos
push
jge
sbb
loope
aas
cs
les
pcmpgtd
sarl
xor
stos
add
cs
or
aad
fstpl
popa
mov
inc
cld
insl
push
adc
add
xor
test
or
add
jae
movsl
test
mov
inc
jbe
sbb
int
adc
xlat
xchg
pop
inc
imul
fs
clc
pop
fiaddl
lock
xchg
adc
pop
call
xchg
sahf
xchg
je
mov
inc
dec
in
xchg
sarl
fwait
sbb
sbb
ret
fwait
push
in
aad
scas
lods
adcb
xor
and
jl
aas
sbb
iret
push
sbb
sub
mov
sbb
jecxz
out
aas
rcr
movsb
inc
and
int
jo
loope
fidivrl
fcmovnu
cmp
fists
out
stos
mull
movsb
in
xchg
mov
loop
adc
inc
mov
aad
inc
mov
jp
pusha
inc
sub
mov
xchg
adc
pop
dec
mov
fmuls
fs
cmpsl
sbb
xchg
inc
ret
sub
sub
imul
mov
push
out
hlt
lret
jg
icebp
divb
and
cmp
inc
inc
pushf
sub
sbb
call
or
ret
stos
mov
mov
cs
mov
repnz
rcrl
mov
xchg
stc
sbb
jae
lcall
es
ds
cltd
insl
mov
adc
adc
mov
ja
shrb
cmpsl
xor
cmc
outsl
in
lock
pop
fdivrs
xor
or
imul
mov
lea
cltd
popf
mov
adc
addr16
inc
xchg
fistpll
push
cmp
test
xchg
dec
pop
cmp
outsl
pop
ret
jo
into
in
cmp
or
int
mov
adc
test
test
inc
mov
inc
jae
fbld
lds
pop
repz
cld
stos
or
mov
mov
xchg
xor
jp
mov
pop
xchg
addr16
jne
mov
pushf
jne
test
jge
xor
flds
test
rol
push
out
hlt
call
js
imul
incb
xchg
and
dec
stos
in
jne
movsl
sahf
adc
pop
lret
fcomps
push
jge
ja
decb
jle
mov
xor
scas
arpl
mov
and
and
rcr
adc
inc
or
mov
and
sub
loop
add
xchg
fwait
pop
cmpsl
push
sbb
leave
outsb
fistps
pop
dec
bswap
mov
cmpsb
adcl
push
xchg
push
adc
repz
dec
push
pop
out
xor
std
movsb
fimull
ds
mov
lahf
xchg
iret
int3
stos
loop
sbb
sbb
mov
xchg
ja
and
arpl
cmp
push
and
mov
mov
lea
pop
jle
or
aaa
xor
lret
les
pop
adc
or
dec
les
add
mov
or
mov
ret
lcall
push
test
mov
mov
shrb
out
cmpsl
stos
xchg
sub
mov
dec
movb
lock
mov
add
testb
imul
inc
pop
hlt
fldenv
or
cmp
add
cld
fmuls
lahf
lret
aad
lret
adc
lcall
jmp
adc
jecxz
shr
push
call
leave
xor
test
mov
pop
sub
int3
mov
or
xlat
inc
or
jnp
sbb
jae
movsl
and
les
mov
mov
cmp
addr16
or
cs
cwtl
mov
pop
hlt
cld
push
mov
and
test
ror
sbb
hlt
pop
add
ret
clc
cmpsb
loope
sbb
adc
mov
rol
add
push
xor
call
cmp
push
cmp
std
int3
scas
and
pushf
or
adc
test
cmpl
xchg
xchg
mov
and
or
add
and
add
xchg
adc
cmp
enter
popa
jns
cwtl
adc
mov
std
fwait
and
int
or
push
aad
das
rclb
ds
imul
cmp
lcall
sti
sbb
push
push
inc
dec
jne
daa
push
das
dec
or
pop
sarl
fs
outsl
cmc
or
stos
cli
inc
sub
xchg
daa
xor
add
add
cli
fstl
xor
arpl
xor
setl
push
push
adc
pop
sbb
mov
out
shrb
out
cmp
cmp
mov
push
push
xchg
lods
ja
jb
add
loope
or
outsl
cwtl
std
je
lret
test
lret
lahf
pop
jbe
stos
pop
mov
sub
std
xchg
pop
dec
and
andl
sub
fs
mov
mov
sarl
arpl
jo
scas
cmc
xchg
les
jns
xlat
or
lock
sbb
or
push
aad
int
aam
pop
add
cmc
stc
sbb
or
mov
lods
adc
out
add
and
jge
int
or
pop
adc
push
xchg
inc
dec
dec
loope
xchg
js
fistpl
pop
cmp
push
add
fwait
mov
fldt
imul
fiadds
dec
push
mov
jp
mov
sub
mov
in
and
rcll
jle
cmp
cmc
cmp
sub
push
add
pushf
add
das
aad
addr16
cld
xchg
adc
xchg
xchg
int3
xchg
lock
xor
je
pop
jmp
xchg
or
sub
nop
sub
dec
mov
imul
pop
push
dec
jmp
rorl
and
mov
fstpt
push
pop
and
dec
cltd
jecxz
xlat
movsb
rcrb
out
stos
mov
dec
mov
fcmovb
xchg
repz
dec
ss
addb
jne
push
testb
xchg
repnz
imull
cltd
pop
sbb
pushf
rcl
in
push
pop
out
iret
or
pop
test
push
aam
loopne
mov
push
pop
add
fwait
xlat
outsb
ret
lods
enter
adc
mov
fs
mov
xchg
andl
dec
lcall
lahf
aaa
rclb
movsl
inc
cli
cmp
mov
mov
lcall
adc
int
mov
fwait
inc
and
mov
adc
xchg
out
punpckhbw
sub
xchg
sub
cld
xchg
clc
cmp
cmp
les
cmp
and
lcall
mov
push
int
scas
cmp
or
or
cmc
lcall
add
dec
push
lods
into
filds
push
scas
lds
fs
lods
lea
lea
xchg
pop
dec
cmp
mov
stos
or
mov
std
push
testl
jecxz
rcl
push
mov
fsubs
jmp
and
push
lods
sub
add
push
jb
cmp
aaa
mov
push
jp
push
fucomip
jmp
push
lahf
cmpsb
mov
push
add
mov
pop
mov
in
popf
sub
sub
insb
dec
bound
loope
cmp
xor
mov
leave
mov
mov
ret
test
sbb
jb
out
add
cvtpi2ps
xchg
inc
mov
lcall
inc
pop
sub
ret
ljmp
scas
xchg
push
pusha
xor
mov
aaa
jae
addb
fcos
cmp
imul
pop
cmp
jno
lock
inc
add
call
popa
inc
in
add
or
mov
cmp
add
int
sub
jb
push
mov
gs
mov
inc
jbe
adc
mov
dec
and
cli
daa
idivl
fmull
push
jle
lret
mov
fadds
enter
mov
ret
stc
clc
cmp
inc
fistpl
xor
push
jae
shrl
sbb
xchg
or
ret
add
fdiv
cmp
sbb
push
adc
jp
mov
movsl
push
das
lahf
adc
daa
repz
out
lahf
mov
cmp
xor
lds
pop
in
enter
call
push
xor
jno
les
ljmp
push
jmp
xchg
or
cmp
sbb
scas
rorb
cli
jle
popf
cs
xor
in
cli
cmc
scas
jmp
adcb
hlt
xchg
cs
lcall
adc
fisubs
mov
shr
das
aam
push
push
or
mov
push
pop
cmp
inc
cmp
jp
cmpsl
shlb
negb
sub
repnz
into
out
aas
adc
ficoms
mov
lods
xor
lea
xor
mov
shlb
sbb
adc
mov
and
push
or
int
fnstenv
fldcw
xor
xchg
and
xchg
sbb
leave
add
xchg
xlat
fnstsw
movsb
mov
xchg
clc
sub
mov
sbb
mov
pop
cltd
pop
mov
or
dec
or
sub
into
shlb
cmc
pop
jns
mov
xchg
scas
jle
dec
call
mov
mov
mov
rorl
adc
sub
ljmp
imul
daa
repz
fdivrp
push
xor
adc
or
in
in
movsb
imul
add
pop
dec
push
fnstcw
daa
adc
xchg
loope
ficoms
and
adc
dec
or
out
in
push
and
cmp
lcall
or
mov
popa
mov
xchg
js
inc
jae
cld
div
cmp
mov
clc
cmp
out
push
and
pop
jmp
sub
pop
cmc
sbb
push
lret
imul
add
jmp
push
shlb
pop
and
jge
stos
inc
scas
stc
out
cmc
sti
mov
mov
mov
mov
ds
push
and
pop
cmpl
ds
push
jnp
bound
dec
out
adc
in
aam
cli
or
cmp
iret
push
arpl
push
push
fcmovbe
mov
push
push
jmp
out
sbb
and
or
lods
out
xor
loopne
xor
test
jne
mov
xchg
fs
mov
pusha
adc
daa
out
or
inc
stos
or
in
dec
xchg
fmul
and
and
fidivrs
cmp
lahf
sub
lret
add
add
or
int
inc
inc
repz
fdivrp
stos
push
xchg
sub
fimuls
outsl
inc
ss
mov
xor
js
pop
cmp
xor
jns
sub
pop
jmp
lea
mov
mov
push
enter
nop
rorl
mov
rorb
mov
or
cwtl
mov
push
loopne
xor
xor
xor
xor
pop
inc
leave
add
repz
cmpsl
outsl
xchg
xchg
sbb
ljmp
dec
int3
icebp
push
lds
imul
cmp
loop
mov
shl
dec
stos
sbb
bound
xchg
jb
pcmpgtb
fimuls
dec
ljmp
pop
shll
jb
jmp
fisubrs
icebp
push
mov
inc
cmpsb
or
jae
xchg
jge
cli
into
push
pop
shll
jmp
jne
dec
and
cltd
or
cli
in
cmp
jp
std
aad
cmp
add
je
mov
mov
cmp
mov
daa
testb
arpl
jecxz,pt
int
push
xor
lds
stc
mov
sbb
inc
and
leave
ss
pop
fsubr
add
sbb
jb
mov
fcmovnb
xor
popf
ja
testl
shrb
xchg
sub
popa
push
cmp
and
sub
mov
xor
pop
adc
mov
mov
dec
test
sbb
cmpsl
adc
inc
sbb
cmp
mov
cmp
xchg
sbb
out
lret
cmpb
test
xor
fistpll
cmp
jg
leave
shr
mov
es
xchg
pop
push
daa
ret
ds
pop
clc
inc
enter
es
pop
pop
mov
popf
int3
jae
xchg
xchg
push
pushf
lret
and
scas
out
cltd
xchg
cmp
test
inc
ds
dec
jno
jp
inc
mov
js
into
in
idivl
fdiv
mov
jg
mov
aad
sahf
aas
cld
pop
cltd
jge
packsswb
push
jb
jne
adc
aad
push
mov
inc
lahf
xchg
ljmp
aad
stos
ss
pusha
jmp
ljmp
in
push
cmp
xchg
outsb
pop
adc
or
inc
repnz
repz
imul
dec
out
cltd
lahf
cmp
in
insl
dec
sub
les
sub
mov
mov
mov
or
adc
mov
mov
lcall
sbb
out
ja
addb
mov
and
gs
xor
mov
pop
xor
je
popa
sub
dec
add
mov
sahf
push
pop
sbb
ss
xor
push
and
xor
icebp
outsl
and
or
sahf
test
in
push
sub
sbb
pop
dec
inc
divl
lret
outsl
dec
fidivs
fsubrs
mov
xchg
cwtl
lret
in
xor
pusha
cltd
push
jp
in
adc
jecxz
add
mov
punpcklbw
ljmp
pop
push
adc
mov
sub
sbb
stos
or
stos
dec
push
cld
cmp
push
cmp
jns
movsl
int
add
mov
jle
add
or
cmp
mov
inc
jmp
repz
jl
pop
jecxz
jle
in
xor
js
sbb
gs
mov
sahf
mov
cmp
clc
aad
xchg
mov
scas
movsb
lods
xor
cmpsl
dec
xor
cmpsl
mov
push
arpl
fbstp
add
xchg
and
xor
fcoms
jno
ja
mov
mov
addl
dec
ja
in
xor
in
int3
sbb
push
test
mov
and
mov
push
sbb
sub
sti
popf
pop
bound
push
add
pop
test
xor
testb
dec
mov
int
ds
out
sub
pop
xor
jo
dec
dec
inc
push
jge
sub
or
fs
das
shrb
dec
push
test
loope
add
mov
clc
xor
je,pt
ret
call
xchg
aam
insl
idivl
ljmp
aaa
mov
inc
jmp
fs
cmp
fucomip
test
loopne
stos
inc
mov
and
jg
xlat
pop
bound
loopne
pusha
mov
mov
push
aam
sub
mov
icebp
in
add
cmp
insl
pop
test
xchg
xchg
sbb
incl
sahf
outsb
sub
cli
iret
out
pop
loop
pop
jne
rorb
jmp
out
aas
daa
or
mov
test
outsb
xor
bound
imul
mov
pop
xor
jne
inc
pop
push
pop
and
insl
ds
mov
aas
adc
cmp
mov
push
jecxz
loope
repnz
and
sub
rolb
popa
pop
push
inc
lods
add
aaa
fsubp
xor
lret
dec
mov
scas
inc
out
dec
adc
or
jge
mov
cltd
inc
pop
and
dec
cmpb
xchg
jno
lcall
sbb
xor
movsb
add
dec
jnp
fisttpl
xchg
stos
aam
add
aaa
repz
inc
pop
xchg
jae
and
jns
xchg
cmpl
bound
scas
inc
ret
incl
pop
inc
dec
mov
cmpsl
sbb
sti
dec
ficoms
sub
cli
xchg
movsb
test
cld
and
jo
mov
jmp
sarl
clc
test
mov
popa
and
dec
fmull
shrl
jne
test
aas
in
xor
mov
jae
mov
lds
lahf
adc
push
mov
shll
mov
cmp
lret
or
xchg
nop
rcl
loopne
cmp
ja
pop
pushf
sub
dec
clc
dec
clc
repz
into
sbb
jmp
fidivrs
aaa
mov
pusha
scas
mov
mov
mov
pop
gs
xor
add
lret
push
push
rorb
mov
and
pmaxub
jg
pushf
cld
cmp
push
inc
repz
shlb
jp
mov
mov
xlat
pop
jl
dec
or
stc
or
dec
inc
mov
std
or
push
lret
icebp
push
mov
rcrl
fistpll
pop
clc
dec
ja
cmp
fildl
les
pop
sar
cltd
clc
std
stos
shll
sahf
add
xchg
lods
mov
enter
xor
dec
lds
pop
enter
outsb
dec
cmp
fildll
roll
scas
xchg
xor
test
leave
and
fstps
cmp
jg
addr16
outsb
std
iret
fsubrp
dec
outsb
lds
loope
push
xchg
jne
cltd
andb
dec
jecxz
stos
jmp
adc
imul
test
ret
in
pop
in
mov
outsl
out
hlt
fs
sub
adc
push
inc
into
xchg
jbe
lods
mov
sbb
xchg
in
mov
xor
addr16
pop
inc
mov
movsb
mov
dec
push
jmp
xor
lods
mov
jmp
cmp
leave
push
and
cmpsl
arpl
and
dec
dec
cmp
rcr
push
pop
xor
add
int
leave
in
pop
sbb
test
sbb
mov
inc
pop
mov
add
pop
jl
fdivrs
jns
decl
or
sub
sbb
pusha
jns
outsl
lahf
aaa
add
adc
rcrb
mov
out
fsubl
es
jg
mov
in
test
add
jp
loope
mov
shr
frstor
jmp
xor
add
jne
scas
push
mov
sub
mov
jmp
xchg
aas
fs
or
sub
mov
mov
cmp
rcll
ss
cmp
xor
jl
fwait
push
aad
clc
ficompl
add
jg
int
jo
pushw
xor
movsb
fcomps
xchg
jmp
and
xchg
add
pushf
hlt
nop
cmpsl
fwait
cmpb
or
mov
jmp
lcall
test
push
push
cmp
fisubrs
js
mov
mov
lods
fwait
orl
outsl
movsb
icebp
adc
rcl
sbb
push
xchg
das
clc
jle
sub
idivb
jno
cmp
sub
xchg
mov
repz
pop
cltd
sbb
push
stos
jno
inc
push
or
outsb
pop
pop
icebp
push
dec
jo
aam
jmp
dec
je
pop
adc
ljmp
push
pop
cli
movsb
cmp
stos
mov
fmul
test
scas
jne
inc
mov
push
sahf
push
rolb
xor
out
aad
push
inc
movsb
mov
pop
mov
sbb
aad
sbb
mov
push
xchg
out
adc
and
jge
adc
ljmp
adc
fistpll
xor
jg
fwait
xor
sub
xor
mov
pop
mov
adc
push
cmpsb
jne
in
inc
inc
and
in
shrb
movsb
inc
test
xor
mov
inc
mov
dec
ljmp
outsb
jmp
loop
mov
insb
dec
jno
push
fwait
js
mov
jne
clc
jl
jnp
scas
iret
mov
push
cmp
std
xor
xor
adc
loopne
cmpsb
jnp
fsincos
fimull
pop
clc
sbb
in
lret
adcb
popf
lcall
dec
push
pop
lcall
scas
js
bound
push
shlb
jge
sub
rcrb
jno
stos
pop
cwtl
in
imul
mov
sti
jb
ret
iret
and
mov
push
jo
xor
inc
gs
jmp
out
shrb
pop
cmc
into
fdivl
inc
stos
sbb
and
push
in
push
sub
xor
insl
mov
fnsave
cmpsl
fbld
xor
sub
xchg
out
cmp
imul
pop
jle
cwtl
push
mov
test
xchg
xlat
push
push
jp
mov
sbb
loopne
std
mov
xor
outsb
pop
sbbl
and
ffree
dec
add
xor
mov
cmpsl
inc
mov
push
fcomps
cmp
cli
jb,pn
ret
push
push
cmpsb
mov
jnp
jbe
inc
adc
push
adc
pop
ljmp
ss
jno
and
sarl
popa
pop
mov
mov
sahf
imul
lods
add
mov
sbb
loope
mov
aad
rol
enter
mov
xor
or
xchg
xlat
and
add
dec
mov
pop
xchg
lods
push
push
test
ja
sahf
nop
xor
aam
cmp
and
jp
outsb
push
add
cmc
push
loope
mov
inc
or
sub
in
xchg
dec
inc
adc
stos
sbb
stos
xchg
and
add
or
sbb
mov
inc
nop
in
stos
rcl
rclb
je
jmp
dec
jl
or
pop
andl
lea
sar
and
aas
ficompl
fstl
mov
es
outsl
jmp
jns
mov
hlt
sbb
lcall
push
test
into
or
inc
push
dec
sbb
rorb
or
std
adc
and
mov
inc
test
xchg
bound
xor
lods
pusha
jp
add
push
mov
sub
mov
arpl
fimull
addl
ffreep
push
xor
jl
add
repz
jbe
lods
mov
mov
xchg
sub
shrb
orb
les
mov
jge
loopne
add
out
loope
or
dec
inc
adc
lahf
negb
stos
pop
push
ficoms
je
dec
aaa
iret
inc
mov
or
sti
popf
loope
mov
sub
popa
sub
inc
push
les
mov
pop
cld
lahf
jle
cmp
ret
mov
push
rcrl
leave
testb
out
inc
jbe
jecxz
xchg
outsl
mov
and
daa
cmpsl
mov
outsb
mov
cmpsl
adc
sub
gs
aad
and
and
test
ljmp
mov
cmp
mov
pop
fimuls
in
sbb
mov
cmpsb
sub
or
ds
aad
mov
clc
ljmp
inc
inc
loope
shl
rcll
adc
xor
jne
adc
imul
imul
add
mov
xor
jl
scas
sub
mov
sbb
and
push
xchg
or
popf
and
mov
mov
or
push
sub
mov
adc
cmc
call
sub
loopne
adc
sub
mov
repnz
repz
mov
fimuls
into
mov
sbb
mov
sti
xchg
roll
fsubl
sub
or
and
stos
je
and
hlt
data16
fnstenv
jno
daa
inc
push
sti
sub
or
rcl
mov
mov
adcb
sbb
pop
mov
sbb
dec
inc
ret
rorl
insb
out
xchg
xchg
dec
aad
fisubl
sbb
xlat
inc
testb
lea
jb
dec
cmp
jae
shll
dec
jp
movsl
mov
jno
and
jb
inc
adc
pop
or
es
mov
sbb
mov
out
and
dec
jle
andl
les
ret
and
sbb
jg
inc
add
dec
xchg
cwtl
lahf
mov
imul
into
loop
mov
jle
es
adc
jno
pusha
andb
jae
jno
dec
das
subb
pusha
dec
mov
add
in
call
adc
leave
or
adc
icebp
jne
repnz
push
je
cld
pushf
add
dec
out
dec
xor
leave
aam
insl
push
sbb
js
inc
xor
xor
in
jl
jns
sbb
pop
dec
add
sbb
jmp
imul
add
push
in
inc
mov
or
xor
jb
and
inc
jno
mov
popa
int
test
repnz
lret
xchg
cmpsl
nop
fsubl
cmp
inc
ret
cwtl
jae
popa
arpl
mov
in
stos
test
jno
cld
ss
xchg
inc
xor
aad
dec
out
aad
sub
loope
cmp
lahf
push
lods
outsl
into
xchg
dec
mov
sysenter
lahf
or
jmp
add
sbb
sub
lret
in
movsb
jmp
sti
lods
out
xchg
mov
das
lret
pop
pop
mov
sub
daa
mov
push
pop
enter
push
xlat
lea
lahf
addr16
fs
mov
pop
insl
add
out
mov
enter
cld
aas
inc
dec
inc
pavgw
shl
ss
jecxz
dec
in
mov
push
je
mov
ljmp
mov
iret
mov
imul
and
test
inc
mov
mov
mov
rcll
lds
pushf
mov
inc
xchg
lret
and
or
sub
out
nop
add
or
cmpxchg
push
adc
pop
mov
jns
std
roll
jmp
dec
inc
and
add
scas
or
inc
rcll
add
sti
in
xor
out
subl
js
mov
call
lret
jmp
testb
jbe,pt
sub
inc
xchg
pop
lea
test
xor
pushf
out
fsubs
fnstenv
ret
stos
xlat
cs
push
pop
cmp
xor
test
lods
les
sbb
hlt
les
imull
xchg
add
fldenv
aas
out
inc
xor
dec
movsl
jns
fwait
xor
push
fisubs
test
pushf
imul
sbbl
adc
faddp
mov
mov
mov
cmp
outsl
mov
adc
nop
sbb
sub
movsl
lds
nop
xor
fistps
and
fwait
cs
cs
adc
sub
in
sbb
in
lret
push
call
mov
jp
cld
dec
aad
lcall
ret
aam
jl
cmp
xor
pop
inc
lods
daa
cmc
xchg
bound
pop
jo
mov
xlat
rol
shll
les
pop
mov
cmp
ds
inc
jae
jnp
mov
pop
pop
testb
pop
or
push
mov
test
popl
jo
sarl
lock
sub
jecxz
adc
cmp
loop
fs
jle
hlt
lret
aam
in
adc
cmp
fidivrs
loope
mov
push
nop
mov
adc
dec
stos
movsl
test
lret
jno
fwait
mov
sbb
ss
fdivl
out
inc
xchg
xlat
outsl
out
mov
gs
jecxz
xor
cwtd
scas
ss
call
sub
xchg
or
sti
inc
test
xor
mov
mov
sub
js
les
adc
dec
add
mov
push
jle
mov
or
test
mov
push
out
push
pop
xchg
mov
into
out
mov
lock
push
decb
nop
bound
lock
dec
cmp
pop
iret
pop
aaa
cmpl
push
xlat
sbb
push
pop
clc
enter
xor
lods
sbbb
mov
out
faddp
lret
and
mov
pop
and
push
sbb
jno
and
mov
shrb
icebp
jp
mov
lret
mov
jne
sar
mov
bound
shr
pop
int
jmp
repnz
cmp
xor
icebp
sub
lods
ja
xor
xor
pop
adc
mov
mov
jae
cmp
insw
xchg
stos
xchg
pop
add
xchg
pop
lea
jbe
rorb
xchg
loopne
decb
fildl
inc
hlt
fcmovb
xchg
mov
enter
inc
cmc
pop
test
sbb
lret
stc
xor
ret
add
movsl
mov
mov
mov
add
leave
jne
sub
mov
mov
fidivl
test
jnp
shll
jecxz
pop
movsb
stc
and
cwtl
nop
test
call
dec
iret
fldenv
dec
cld
aam
push
jp
sarl
inc
stc
push
testb
ss
arpl
sub
in
inc
sbb
adc
push
lods
ss
xchg
pop
fistpll
fsubrl
ja
nop
lret
cltd
iret
aaa
ds
scas
js
fiaddl
in
pop
outsb
and
cmp
xchg
repz
and
push
pop
pop
leave
adc
inc
mov
repz
icebp
fwait
in
loop
jb
test
mov
mov
fsubr
ja
adc
adc
imul
inc
xchg
jge
add
adc
outsl
roll
xchg
push
mov
testl
movsl
stos
leave
inc
cmp
xchg
fistl
pop
pop
loop
pusha
dec
push
xlat
and
dec
cltd
movsb
sarb
mov
stc
les
mov
sbb
lret
inc
repz
push
lds
nop
pop
push
je
fucomp
jnp
mov
js
scas
jg
push
or
inc
inc
out
gs
cmc
mov
sbb
les
add
ja
pop
mov
xchg
mov
or
lea
pop
maskmovq
idivl
gs
sbb
jae
push
sbb
loope
in
cmp
cmp
loopne
test
enter
adc
es
sahf
or
xchg
les
js
xchg
and
push
mov
adc
xor
ror
movb
fsubp
pop
and
adc
dec
inc
pop
shrl
lock
cmp
je
test
stc
cmp
out
dec
and
scas
js
les
xor
js
pop
mov
cs
and
cmpsb
fdivr
cltd
into
ret
or
dec
ret
jae
mov
scas
lret
test
movswl
mov
jge
or
jge
xor
test
cmp
xor
pop
inc
add
scas
mov
cmp
bound
in
mov
push
iret
lea
cmp
mov
testb
mov
into
xchg
fnstsw
mov
jne
mov
dec
or
stos
icebp
adc
xchg
ret
mov
scas
xchg
lods
stc
xchg
mov
adc
dec
scas
jp
mov
aad
adc
jne
sti
scas
pop
mov
jl
leave
addb
inc
xchg
mov
cli
mov
mov
adc
pop
mov
inc
jns
pushf
loope
and
das
inc
jmp
das
push
jmp
ljmp
call
fs
cltd
mov
push
fidivrl
or
xchg
ljmp
insl
or
scas
add
cmpsb
pop
repnz
mov
mov
pop
pop
add
xchg
adc
stos
cmp
repnz
xorb
or
lods
sbb
xchg
sub
push
roll
mov
jmp
and
sarl
inc
repz
cmpsl
int3
xor
push
out
cmp
cmp
outsl
xor
mov
mov
mov
mov
xchg
pushf
mov
adc
fs
xchg
imul
int3
push
je
xchg
test
aaa
jmp
scas
add
mov
sub
dec
mov
or
push
mov
dec
push
jo
sub
lods
mov
sub
sub
jge
aaa
lahf
dec
call
fcoms
add
xor
pushf
cmp
inc
lret
xchg
push
daa
adc
aaa
cmc
mov
mov
pop
in
jmp
mov
adc
dec
in
adc
adc
push
lock
sub
les
pop
jb
xchg
ds
pop
push
adc
outsl
out
into
pop
dec
test
pop
pushf
sub
aaa
cmpsl
icebp
mov
sbb
dec
cmpsb
stos
or
popf
push
jbe
dec
clc
std
shll
jb
cmp
and
pop
mov
shlb
je
scas
out
outsl
les
nopl
xchg
pushf
sbb
xchg
cmp
js
outsl
push
dec
out
scas
mov
hlt
push
sbbl
cmpl
adc
fimuls
mov
add
insl
lret
out
in
pusha
leave
fidivs
push
dec
jo
mov
mov
xchg
or
pop
jecxz
push
sub
jg
add
pop
pop
mov
xchg
xchg
adc
out
mov
lahf
adc
add
pop
cmp
sti
sahf
stos
jl
or
xchg
sub
xchg
rolb
pop
sar
jae
out
mov
divl
in
jl
pop
push
adc
lahf
add
add
icebp
mov
inc
out
inc
cmc
lea
sbb
push
mov
fwait
cmp
xor
andb
sbbb
xchg
fstpl
inc
xchg
outsb
in
out
mov
sub
lcall
divl
jmp
xchg
mov
xchg
jbe
push
dec
sub
sub
subb
int
sbb
mov
test
addr16
mov
orb
pop
cmp
jecxz
mov
enter
add
sahf
clc
push
ret
xchg
mov
mov
mov
mov
jae
mov
xchg
or
clc
and
enter
xor
jp
pop
dec
ret
inc
xchg
out
aaa
sub
pop
adc
add
dec
inc
mov
dec
jmp
out
dec
test
sahf
insb
push
mov
xchg
xchg
jecxz
pushl
push
pop
imul
mov
scas
scas
cmp
mov
jecxz
sub
std
call
jg
sti
inc
push
cld
pusha
je
fidivrl
ja
add
out
pop
out
dec
adcl
adc
inc
repz
xchg
fwait
xor
ret
cli
mov
xlat
addr16
jecxz
jnp
inc
out
push
or
or
inc
or
int3
push
movsb
and
xor
test
outsl
inc
jne
cmpb
dec
mov
cmp
ss
rcll
push
sub
dec
push
push
ret
cmpsb
sahf
inc
jp
pop
jns
push
scas
cmp
movsl
jb
test
fs
jmp
mov
loopne
ror
or
inc
shrb
xor
int3
testb
pusha
inc
cmpsb
mov
mov
scas
mov
pop
xchg
mov
xchg
dec
jne
sub
mov
mov
int3
mov
and
mov
into
mov
dec
jecxz
adc
adc
pushf
mov
test
or
pop
aam
xor
fimuls
xor
xor
movsl
mov
add
clc
fs
mov
clc
mov
popa
dec
xor
stc
stc
sti
xadd
negl
and
mov
dec
and
addb
in
mov
out
std
repz
out
mov
lret
cmp
xchg
js
adc
jmp
shll
xchg
and
bound
and
nop
mov
inc
shr
cltd
add
add
popl
or
jmp
sbb
pop
mov
je
cmc
cmpsb
aaa
sti
lret
mov
mov
inc
popf
mov
dec
sub
dec
xlat
push
cmpsb
scas
and
cmp
fwait
fisubrl
jb
insl
rorb
sbb
leave
leave
lcall
or
scas
dec
push
lret
aad
repz
mov
shll
in
adc
jo
pop
xchg
mov
stos
or
xchg
fisttpll
ret
push
jmp
loopne
mov
inc
fidivs
add
xchg
int3
ljmp
cmp
cwtl
push
inc
jno
outsl
mov
and
roll
xlat
aas
out
mov
sbb
out
hlt
mov
stos
mov
pop
cmp
icebp
and
xchg
xchg
cmp
into
xchg
pushf
jno
fcmovnu
insl
sub
imul
fs
scas
or
push
faddl
cmc
jle
xchg
or
nop
cmp
fcomp
fistl
pop
out
xor
out
xor
lret
adc
call
cmp
call
cltd
dec
cmc
pop
repnz
cmp
push
xchg
pop
sbb
sbb
jle
add
xchg
cmpsb
mov
xor
jbe
push
sub
fisubs
les
fs
jns
xor
adc
push
int3
test
add
icebp
add
mov
cmp
hlt
lds
sbb
mov
in
push
cmp
stos
cmp
fnstenv
ffreep
xchg
and
lock
push
add
mov
pop
pop
mov
test
bnd
xchg
dec
std
mov
xor
xor
stos
mov
fsubs
aas
jecxz
xchg
xor
and
push
cmp
cmpsl
adc
xchg
lock
cmc
jge
push
in
loope
sub
inc
aad
mov
jge
int3
adcb
jmp
sbb
lcall
or
cmc
lds
cmp
jp
daa
dec
loop
pop
in
or
std
cs
inc
cli
mov
aad
lret
jb
xor
or
sbb
pop
enter
jmp
push
flds
push
dec
xchg
jg
push
les
add
and
xor
loope
dec
in
add
repnz
or
xchg
lret
pop
bound
insl
lock
mov
xchg
stos
out
mov
jno
leave
cmp
add
mov
sub
inc
pop
mov
inc
mov
fmulp
adc
mov
jmp
inc
xlat
loope
or
mov
fimull
add
xchg
std
stos
lods
mov
addr16
lret
or
cmpsl
testb
pushf
fists
sub
fnstcw
adc
int3
cmp
inc
cs
shl
sub
mov
sub
insl
movsl
mov
mov
push
xchg
lods
sahf
call
inc
int3
cmp
lcall
imul
sbbl
xchg
jg
pop
push
test
lret
popf
movsb
push
jle
cmc
cmpsl
jae
fs
jne
and
div
jns
inc
adc
and
mov
lret
inc
sub
shrb
loop
cmp
or
cmc
lds
enter
and
mov
pop
inc
jbe
sub
push
adc
jno
jle
sbb
enter
dec
and
cmp
push
cs
jae
cmp
sbb
shlb
cmpsl
jno
repnz
mov
mov
adc
push
sarl
repnz
loope
aaa
dec
pop
or
movsl
ret
mul
jle
imull
jno
in
pop
pop
mov
arpl
xorb
xor
icebp
adc
dec
push
jae
pushf
into
push
in
fidivrs
dec
pop
stos
icebp
mov
mov
arpl
lcall
cmpsb
in
or
push
fwait
inc
aad
mov
dec
fdivrs
ja
data16
push
mov
stos
dec
jmp
sbb
hlt
mov
outsl
xchg
ja
jl
push
adc
xchg
out
and
shll
xchg
aad
ret
daa
roll
jns
and
push
fwait
subb
push
int
push
xor
addr16
pusha
pop
es
sub
aaa
xchg
cmpsl
ret
mov
movsl
and
push
and
cld
sahf
icebp
cmp
jo
shl
outsl
ljmp
cmpsb
adc
punpcklwd
icebp
mov
xlat
mov
jns
cld
xlat
test
imul
idivb
test
pop
aad
mov
sub
dec
sarb
out
dec
sbb
push
adc
add
xchg
js
inc
xchg
mov
enter
in
mov
pop
sbb
cltd
shl
jae,pt
xchg
inc
cmp
jbe
add
into
sbb
jg
adc
aas
mulb
les
fcmovnu
idivb
xchg
mov
xchg
jno
pop
outsl
xchg
pop
scas
xchg
inc
cmp
lret
cwtl
mov
cwtl
in
xchg
dec
rcr
cmp
push
push
outsb
fsubr
imul
cltd
pop
mov
rclb
aas
and
mov
and
fidivs
jae
iret
lea
mov
fildll
pop
out
pop
or
dec
aam
and
pop
test
pop
xor
mov
lret
mov
scas
jle
push
adc
jnp
leave
jge
lret
pop
adc
mov
nop
mov
decb
mov
jno
rclb
test
adc
inc
push
call
lahf
in
xor
insl
jnp
ret
mov
cmp
jecxz
cmp
add
sbb
cs
or
mov
add
push
xor
cmp
jnp
faddl
xchg
sub
sub
jbe
loope
daa
adc
std
testb
cmp
or
inc
push
mull
lcall
leave
mov
outsb
cmpsl
cmp
lret
and
jae
aas
jno
and
and
repnz
mov
push
mov
imul
sbb
scas
cmp
push
test
mov
push
ret
or
dec
mov
inc
mov
mov
cli
push
cmc
sti
repnz
push
repz
push
mov
dec
mov
into
or
loop
mov
mov
mov
rcl
sbb
ja
pop
pop
int3
push
and
loopne
inc
mov
push
and
insl
mov
xor
or
lret
insb
adc
outsl
pop
addr16
inc
test
dec
aaa
mov
inc
adc
xor
mov
loop
xchg
sub
mov
mov
push
pop
mov
outsb
outsl
dec
dec
cmpb
lcall
arpl
xchg
roll
inc
sub
repnz
mov
mov
ret
dec
aaa
xor
mov
mov
loop
mov
mov
and
and
repz
cmp
ret
pushf
sub
in
pop
xchg
fiadds
out
dec
lcall
sub
inc
push
xchg
and
dec
in
movsl
mov
jecxz
adc
cmc
pop
movsl
das
dec
cs
js
ljmp
push
pop
mov
and
push
xor
xor
outsl
cmp
scas
cmp
mov
and
pop
mov
pop
lahf
rolb
decl
test
aaa
test
adc
jecxz
sbb
dec
xchg
xchg
inc
push
inc
popf
cwtl
movsb
xchg
js
cltd
fwait
pusha
loope
push
jmp
daa
jno
and
push
inc
test
notb
jle
test
push
test
or
ss
rol
fbld
pop
or
or
sbbb
hlt
mov
shr
insl
dec
dec
stc
cmp
rclb
cmc
mov
sub
subb
sbbb
negb
push
lcall
ds
enter
pop
clc
cmp
jp
inc
jg
cwtl
adc
repnz
call
xor
cli
xchg
xchg
xor
sub
adc
in
xchg
fnstenv
mov
outsl
jno
lahf
cmp
arpl
xor
cmp
repnz
jl
popa
sarl
fsubrl
cmp
scas
mov
cmp
mov
and
lods
pop
rorb
aam
dec
nop
sub
scas
mov
or
scas
xor
popa
mov
clc
mov
xorb
jnp
inc
mov
ret
int
mov
lret
cmpsb
mov
icebp
mov
pop
and
jb
test
imul
imul
add
cmpb
pop
clc
mov
dec
int
sub
xchg
cmp
sbb
subb
pop
shl
inc
sbb
imul
pop
loop
inc
jo
rcrb
sbb
fisttpl
xlat
fistpl
insb
jle
popa
daa
mov
pop
pop
or
jg
jnp
mov
push
jbe
inc
cvttps2pi
fwait
add
lods
dec
xchg
shlb
or
xchg
rcl
inc
popa
jae
shlb
dec
fcoml
jg
xor
movhps
sub
loopne
stc
push
sarl
sub
loopne
xchg
ds
add
nop
push
sub
bound
inc
clc
or
mov
loopne
dec
filds
cmc
or
xchg
fidivs
lods
nop
test
iret
stos
stc
cmpsb
in
mov
xor
push
ljmp
int
dec
out
clc
inc
add
cmp
es
les
sbb
xor
mov
cs
lcall
or
mov
mov
jp
std
mov
insl
or
dec
aas
adc
roll
fcompl
repnz
push
sub
fldl2e
hlt
faddp
pop
sbb
pop
jae
loopne
out
fisttps
outsl
or
push
mov
and
out
lret
inc
xchg
fcomps
ss
or
mov
adc
push
movzbl
rorb
pop
clc
sub
cmp
xchg
dec
cmp
fstpl
aas
xlat
inc
idivl
repz
xchg
aam
sub
mov
test
pop
ds
rolb
mov
in
aad
xor
inc
pushf
jno
pop
jmp
or
outsl
push
into
aad
add
cmp
sub
sub
std
subl
xchg
xor
push
push
pushf
out
loope
fcomps
inc
sbb
add
les
fs
std
and
dec
add
mov
dec
bound
cli
pop
sub
add
test
and
or
mov
xchg
jo
popf
adc
and
gs
js
jle
or
lds
aad
enter
pop
jl
mov
roll
scas
mov
inc
pop
push
fsubrl
orl
jmp
xchg
push
sarb
jecxz
mov
arpl
call
repz
xlat
scas
popf
mov
jle
jns
mov
movsl
pop
xchg
jg
fiadds
dec
xchg
int3
ret
xchg
inc
addb
dec
sub
push
gs
icebp
outsl
das
xchg
insb
ret
mov
mov
fidivrs
cmpsl
jge
xchg
cmpsl
xchg
loop
xchg
xor
popa
test
call
sbb
inc
push
out
ss
push
sti
xchg
jecxz
fldcw
jecxz
sub
adc
rolb
aas
or
adc
mov
pop
mov
bound
pop
or
aas
shlb
sub
pop
cmpsb
and
lahf
repz
mov
aad
fcompl
sub
push
ja
aad
lcall
sahf
repnz
xchg
or
pop
aam
lahf
cmp
hlt
fninit
xor
add
ret
or
sub
lds
add
lods
sub
inc
push
shll
adc
test
sti
ret
into
aas
addl
jne
in
les
scas
and
stc
xchg
into
xchg
or
mov
xor
mov
ficoms
sar
adcl
mov
stos
xor
jb
lods
fucom
lahf
scas
cmp
dec
popa
js
pop
sub
fistpll
mov
fidivs
clc
sbb
mov
mov
mov
mov
add
ret
push
movsb
imul
mov
pushf
adc
adc
cld
sub
lea
mov
sub
inc
pusha
push
lea
mov
mov
scas
mov
mov
mov
push
mov
jae
push
test
adcl
mov
scas
and
xchg
pop
mov
insb
and
cmpb
dec
enter
inc
or
bound
rolb
xor
sbb
xchg
cli
jmp
xchg
xor
lahf
push
scas
mov
jmp
jmp
in
test
mov
call
cmp
inc
sub
dec
jg
add
bnd
push
pop
fildl
es
push
or
sbb
add
jne
mov
pop
adc
lea
pop
cmpsb
mov
ja
dec
mov
jg
pop
mov
jns
mov
pop
xor
out
shlb
xchg
mov
in
mov
enter
mov
lods
sahf
xchg
xchg
jnp
mov
pop
pop
cmpsl
mov
jnp
sbb
mov
bound
xchg
cmpsl
push
js
bound
dec
xchg
pop
inc
sbb
test
or
iret
outsl
mov
out
sub
dec
imul
shr
xchg
in
cltd
xchg
push
cmpsl
mov
in
pushf
mov
jl
insl
add
cwtl
jg
popa
fildll
dec
fwait
ret
outsb
subl
pop
jno
adcl
inc
lods
movsb
lock
int3
call
lock
jge
mov
popa
or
inc
ja
add
les
ljmp
fdivs
je
addr16
lahf
cmpsb
xchg
add
mov
sbb
loope
insb
jl
mov
xchg
add
shll
or
sub
push
call
in
fwait
test
and
inc
es
push
scas
xchg
mov
out
stos
gs
je
out
or
xorl
ja
js
jo
jae
push
and
loope
or
cs
jmp
ja
sbb
dec
jbe
popa
inc
mov
pop
xor
ret
xor
andb
mov
sti
pop
fcmovnu
popa
stc
les
and
cli
push
push
xchg
mov
push
mov
test
lcall
inc
in
sbb
or
add
dec
jo
xor
push
push
pop
lcall
cmp
adcb
lods
fwait
cmpsl
sub
fxch
in
outsb
jp
mov
mov
xchg
cmp
stos
mov
jnp
add
aam
outsl
test
cmpsl
pop
ds
fadds
insl
stos
adc
fcoms
int
stc
stc
movsb
mov
ss
incl
mov
xorb
mov
outsl
lret
cli
push
or
add
xchg
idivb
pop
sbb
cltd
rcrb
pop
jno
push
test
fs
jo
adc
inc
push
shll
dec
test
cmp
jbe
repz
movsl
fs
cs
in
pop
pop
mov
imul
pop
mov
dec
cmp
pop
xchg
mov
aas
dec
add
mov
shll
mov
out
out
jle
xor
sub
fs
jb
push
lea
push
or
mov
mov
fstpt
sub
mov
pusha
adc
xor
xchg
imul
in
sar
movsl
insb
repnz
mov
xor
shll
and
jmp
in
and
and
mov
cmc
add
dec
leave
ja
dec
fisubrl
cltd
mov
xchg
clc
push
and
mov
jecxz
add
lret
insl
sarb
pop
hlt
jo
sub
clc
cmp
sub
xor
mov
outsb
xchg
jns
and
sbb
adc
sar
mov
add
popw
nop
imul
push
inc
xor
lods
add
mov
and
int3
lcall
jb
clc
sub
fcompl
xor
out
imul
mov
cmp
jnp
mov
popa
cmpsb
sub
pop
neg
jge
div
lods
mov
cmpsb
jg
test
imul
lahf
xor
scas
adc
and
std
aaa
ss
loopne
or
jp
or
push
into
jge
cmp
xchg
push
fisubs
sahf
and
inc
pop
gs
sub
scas
mov
mov
xorl
in
in
jge
ret
dec
stos
dec
out
repnz
cmc
pop
push
mul
dec
xor
inc
add
pop
xor
inc
inc
rorl
sti
cvtps2pd
repnz
push
xchg
clc
out
out
popf
sub
adcb
jns
cwtl
pop
mov
mov
jl
mov
clc
inc
outsb
gs
jbe
lods
stc
in
add
insl
leave
cmp
push
mov
test
pushf
lret
and
xor
xor
add
dec
jne
push
in
cmc
cmc
enter
adc
pop
adc
je
sub
popa
xchg
mov
xchg
enter
add
adc
stos
mov
int3
mov
lahf
jge
push
sahf
add
cmp
jno
mov
repnz
sub
pop
xchg
incb
mov
stc
scas
sbb
and
insb
push
push
aas
movsb
push
cwtl
sarl
sarb
sub
adcl
fistpl
orl
lea
fwait
add
movsb
mov
mov
cli
sub
and
call
fdivr
xor
fcmovnbe
lods
data16
or
inc
pop
daa
jg
jp
push
lds
jecxz
insl
mov
ljmp
sbb
int
loopne
push
inc
out
dec
std
mov
loop
fidivrs
leave
fldl
mov
jmp
jmp
je
fisttps
enter
or
and
jns
aam
sub
lcall
dec
fwait
add
or
dec
inc
mov
push
xchg
mov
shll
scas
jl
and
sub
mov
cmpsl
call
lahf
xchg
mov
jb
or
xchg
dec
out
cmpsb
and
push
inc
xlat
xchg
dec
mov
xchg
ror
jno
call
xorb
add
aad
hlt
push
fstpt
insl
or
pop
mov
or
mov
or
ret
fwait
inc
dec
iret
push
popl
movsl
hlt
stc
fistpl
lods
sub
sbb
test
psadbw
adc
mov
lea
push
mov
push
xchg
pop
shrb
cltd
leave
lds
aad
push
xchg
icebp
invd
mov
loopne
jns
xchg
xchg
sub
pop
popa
inc
sti
inc
aas
sub
add
jge
mov
icebp
mov
jl
movq
scas
xor
into
test
mov
gs
jge
xor
popa
xchg
mov
mov
xchg
mov
inc
imul
xor
orb
scas
jecxz
ja
popa
inc
stc
test
cld
xor
nop
iret
adc
aaa
dec
or
aaa
xchg
pop
cwtl
mov
add
scas
xor
clc
push
cmp
fwait
js
bound
lahf
nop
pop
mov
sub
shll
lcall
dec
stos
gs
or
xchg
xchg
push
lret
mov
stc
pushf
daa
sbb
roll
dec
jnp
aam
jo
and
cmp
aad
insl
jge
or
divb
fldl
push
fbstp
int
outsl
jns
sbb
xchg
add
in
rol
jle
jns
int3
stos
outsl
sub
pop
sub
or
inc
sub
jne
ret
imul
lds
sbb
push
push
jg
jbe
mov
push
incb
and
sub
incl
daa
mov
mov
divb
or
jge
dec
xor
sbb
or
adcl
inc
fxch
jg
hlt
jge
lods
dec
add
mov
xchg
add
incb
push
or
ret
pop
sub
mov
test
push
testl
aas
jns
int3
ds
loopne
add
aas
xchg
mov
sub
mov
and
mov
xrelease
adc
jae
fsts
inc
ljmp
sub
rcl
not
jge
adc
xchg
inc
sbb
fisttpl
and
adc
pop
pop
xor
bound
or
add
sub
mov
sbb
cs
insl
mov
rorb
add
or
mov
lea
sbb
cmp
mov
push
sub
xor
imul
out
dec
sahf
shll
jmp
fs
btr
cmc
cmp
in
scas
lods
push
pop
mov
out
pop
imull
test
adc
stos
ljmp
loopne
adc
add
xchg
inc
aam
lcall
mov
outsb
flds
mov
into
dec
cmc
inc
jnp
sub
inc
or
popa
mov
cwtl
pushf
les
or
nopl
andb
hlt
lcall
adc
in
cmp
scas
xchg
mov
jae
adc
xlat
or
dec
loopne
insl
ljmp
add
das
hlt
xor
mov
or
je
out
or
sbb
sub
in
cli
loopne
mov
push
push
sbb
dec
int
popa
sub
cld
pop
or
sarl
aam
cmp
cwtl
and
enter
test
xor
inc
mov
adc
jge
lret
jle
negl
xor
xchg
push
jle
jbe
mov
fistpl
add
test
ficoms
jp
pop
mov
adc
xchg
cmp
pop
pop
sbb
or
dec
fwait
lock
push
jl
cltd
push
or
fcomp
shlb
and
pop
cmp
in
jmp
jo
sarl
xor
andb
nop
imull
cwtl
test
cmp
lahf
dec
add
mov
cmp
adc
sbb
cmp
cmpsb
sbb
cs
push
repnz
movsb
popa
pop
jecxz
adc
js
xor
sahf
dec
shll
jo
pop
mov
mov
mov
pminsw
adc
shr
ficomps
jp
call
outsl
addr16
pop
add
test
sbb
inc
adc
rcrb
mov
adcb
sub
push
and
fwait
pop
and
repz
mov
add
xchg
shrl
sbb
mov
mov
ret
push
adc
dec
push
dec
jmp
mov
scas
repnz
add
fmuls
std
xor
scas
fidivrs
stos
xor
push
enter
sub
sub
into
jecxz
xchg
jbe
mov
jns
je
cltd
sbb
fidivrs
scas
testl
jae
mov
lock
cmpsl
and
jmp
inc
push
jmp
mov
std
mov
xlat
pop
movsl
cmp
pop
push
jnp
fwait
pop
jg,pt
es
add
push
add
adc
sbb
in
xchg
mov
shrl
ss
cmpsb
cmp
ljmp
jo
adc
les
nop
std
xlat
jl
test
sbbb
in
fcmovu
xchg
cmpsb
aas
cld
adc
cmc
inc
aaa
sbb
xor
lcall
mov
fsubrs
mov
pop
aad
xchg
dec
or
push
mov
inc
mov
rcr
inc
cs
add
jbe
rcll
popa
push
sti
inc
push
sub
fisttpll
xchg
push
jne
int3
shl
xchg
pop
sub
adc
pop
ret
orl
sahf
and
pop
les
repnz
sub
xchg
repnz
cmp
test
int3
mov
stos
xor
push
loope
jbe
enter
sub
out
mov
jg
jo
adc
mov
add
push
test
je
cmp
sub
mov
stos
cmp
cmpsl
jmp
movsb
jo
cli
iret
fmul
xchg
lods
popa
dec
xchg
cmpsl
cltd
lret
jmp
ljmp
mov
aad
rclb
sub
cltd
xchg
aaa
push
sahf
scas
push
xchg
xor
icebp
jno
jnp
or
lcall
imul
cmp
push
push
xchg
jle
jno
lock
mov
adc
popa
int3
orb
xchg
push
xor
scas
nop
test
stc
aam
pop
sub
lds
cmpsb
mov
fcmovnbe
mov
push
adc
inc
mov
in
xchg
into
and
in
jo
loop
pop
cmpl
sub
mov
jno
in
fisttpll
lahf
pop
loope
xor
jnp
adc
mov
mov
movl
mov
jb
or
xchg
xchg
dec
add
mov
ja
dec
dec
aaa
sbb
mov
mov
test
inc
roll
dec
add
int3
sbb
xchg
jne
and
ss
gs
pop
les
jle
cli
or
shrb
fsqrt
shrb
add
adc
fdivrs
out
pop
dec
add
pop
sbb
and
in
rorl
in
pop
jle
cmp
mov
push
ja
or
sbb
fldl
daa
lds
in
inc
fbld
test
icebp
mov
test
sub
adc
or
or
loope
and
in
dec
sub
cmp
or
or
xlat
shl
sti
cld
cld
mov
loop
cmp
jg
xchg
int3
sub
xchg
aam
inc
loop
push
pop
pop
mov
inc
or
add
imul
arpl
imul
adcl
ds
pop
repnz
and
adc
adc
cmp
sbb
adc
pusha
mov
mov
adc
cmc
pusha
or
pop
mov
cmpsb
dec
lea
push
loop
mov
js
dec
dec
add
push
lcall
lods
pop
cmp
mov
cli
cli
int
sub
mov
gs
push
push
cltd
xchg
cmp
sub
xor
xchg
sbb
aas
jne
movsb
repnz
imul
dec
inc
shl
sbb
out
lods
xchg
bswap
fnstcw
sbb
lock
js
js
dec
mov
les
insl
xchg
jae
arpl
in
xor
cmpsl
lret
xchg
sub
out
jecxz
ja
test
out
mov
decb
xor
mov
cmc
ffreep
dec
push
sysret
jae
les
push
sbb
or
xorl
mov
ror
cmp
dec
mov
lds
aaa
std
mov
je
fimull
pop
pop
push
lret
sub
rol
adc
sbb
sub
pop
or
aam
leave
arpl
xchg
imul
pop
inc
xchg
shrb
daa
scas
fs
and
xor
inc
data16
jle
jp
cltd
xchg
and
les
shlb
loope
bound
xor
dec
pop
inc
inc
push
xchg
cmc
mov
mov
lock
or
aaa
or
lcall
popa
imul
loop
fcomi
adc
cld
addr16
pop
cmpsl
je
xchg
jl
pop
and
xor
mov
stc
leave
push
or
xor
lret
sub
and
jne
fidivrs
fmuls
mov
mov
push
adc
arpl
loop
mov
mov
outsb
idiv
clc
test
jno
mov
loop
push
dec
std
sbb
xor
mov
mov
push
push
cmp
push
sbb
mov
outsb
shrl
leave
or
or
cs
scas
int
loopne
push
fs
jbe
cltd
pushf
out
mov
pop
cmp
xor
and
sub
cwtl
iret
sub
das
loop
cs
fisttpll
leave
lret
movsb
pop
cmpsl
cmp
mov
mov
mov
or
mov
aaa
arpl
jmp
test
lods
dec
jbe
sub
mov
daa
mov
push
and
xor
ror
aam
addr16
nop
cmp
fstps
nop
pop
xor
stc
ret
sti
inc
imul
xor
pop
jae
jp
adc
jb
push
loope
inc
aaa
loop
cmpsb
lahf
push
adc
xor
inc
and
push
or
mov
pop
mov
loopne
add
out
or
jns
mov
or
cmpsl
push
push
mov
adc
push
push
cmp
je
stc
ret
mov
mov
lods
push
jp
pop
or
mov
stc
leave
roll
fmull
mov
cltd
ret
stc
sub
outsb
xchg
test
sub
iret
inc
sahf
ljmp
ds
or
add
dec
mov
inc
dec
adc
repz
sub
jb
call
pop
inc
adcb
cld
pusha
or
mov
add
sbb
out
iret
clc
push
and
stos
adc
int
add
xchg
pop
loope
inc
lods
call
inc
clc
into
push
and
adc
stos
mov
or
push
sbb
ljmp
out
adc
addr16
adc
cmp
clc
pop
sub
sub
stos
ss
pop
inc
pop
aad
ds
dec
pop
mov
cmp
adc
and
adc
sub
das
inc
inc
sbb
inc
jnp
out
jmp
shlb
std
xor
push
test
and
xor
fsubp
out
mov
jmp
cmp
popa
fsub
and
ror
inc
aas
pop
mov
aas
or
and
adcl
mov
jbe
mov
cmp
xor
lock
aad
push
xor
add
add
stos
jmp
ljmp
mov
sbb
lcall
inc
xchg
xor
lods
jne
pop
jle
mov
fstps
and
inc
shl
pop
mov
and
pop
inc
cltd
call
jae
jnp
xor
push
inc
pop
mov
imulb
or
add
mov
stos
pop
pop
aas
cmp
push
fcmovbe
pop
outsb
int
pop
orb
lds
outsl
push
xor
xchg
jae
inc
add
push
loopne
xor
aas
iret
fadds
add
cmp
out
lock
loop
add
mov
insb
cmp
sub
stos
jns
or
popl
loop
and
pop
or
rolb
xchg
mov
xchg
subb
inc
gs
or
dec
or
mov
es
subl
int
enter
sub
xlat
out
pop
mov
mov
mov
or
dec
js
andl
sub
test
mov
and
mov
test
xor
fdivl
jp
mov
push
in
out
dec
jmp
and
pop
shrl
pushf
add
mov
outsb
push
mov
fsubl
cmp
js
mov
and
mov
inc
fisttps
imul
adc
adc
xchg
stc
xor
push
nop
subb
or
sub
ror
mov
es
xchg
fists
sub
push
arpl
jle
cmp
fidivs
les
mov
lods
cmpsl
sbb
push
repnz
sbb
or
pusha
or
out
adc
push
hlt
xorb
bnd
or
inc
inc
mov
mov
mov
dec
jne
mov
imul
jb
dec
leave
hlt
dec
test
test
popf
mov
test
and
jno
sbb
jp
icebp
push
cmp
mov
mov
ret
jmp
sub
dec
in
lds
movsl
enter
xor
inc
mov
jno
ret
in
lcall
fidivl
insb
adc
and
sti
lock
jae
add
pop
jle
decl
aas
jns
out
xlat
inc
sarl
nop
push
cmp
insb
push
pusha
push
fiaddl
testl
fwait
xor
aad
ds
stos
sti
outsb
nop
cmpsl
pop
push
arpl
pop
arpl
fsqrt
rorb
dec
arpl
jg
xlat
loopne
jp
lahf
mov
xchg
jne
adcl
lahf
push
adc
xor
or
cmp
out
adc
repz
push
and
inc
mov
imull
lahf
push
stos
dec
and
cld
mov
lea
repz
adc
inc
pop
repz
fbstp
push
and
movsl
push
add
pop
and
push
xor
arpl
clc
mov
mov
int
mov
enter
rcl
gs
jne
cmp
inc
cmpsb
loopne
cmp
in
xor
rcpps
xor
xorb
mov
xorl
dec
xchg
ficompl
sub
rcrb
bound
out
inc
add
imul
xchg
lock
xor
mov
ds
xchg
imul
mov
dec
icebp
sbb
cmc
adc
mov
out
icebp
dec
std
js
xchg
sbb
mov
xor
ds
cmc
shlb
xchg
mov
enter
or
mov
lahf
mov
sahf
lret
enter
dec
and
mov
fildl
sub
sti
imul
leave
xlat
dec
pushf
arpl
xlat
sti
fdivp
sub
add
cli
and
jg
in
adc
mov
insb
cmpb
lahf
mov
daa
in
mov
movsl
dec
inc
sub
or
out
cmp
movsb
jge
pop
aam
xor
in
test
loopne
mov
test
mov
jp
cmpsb
fwait
jns
cmpsb
cmp
loope
dec
add
push
int3
ret
cli
out
adc
shlb
mov
push
dec
dec
popf
insl
cld
test
cmpsl
jo
push
cld
sti
cmpsb
and
in
jmp
call
jle
popa
mov
xchg
rorb
xchg
pop
leave
push
fwait
adc
popa
xor
pusha
in
sti
sub
fs
cli
movsl
and
dec
ret
cmp
pop
out
je
outsb
push
mov
mov
int3
mov
popa
popf
les
and
lods
sub
xchg
lods
dec
mov
test
adc
nop
push
sahf
shrb
or
andl
movsl
mov
xor
inc
xor
lds
jns
xchg
aas
jae
jp
incb
push
inc
pop
cld
or
push
out
xchg
lahf
jp
or
pop
stos
fdivs
addb
jl
mov
mov
dec
repnz
add
pop
popf
lahf
pop
push
jbe
cwtl
adc
int
int3
jns
popf
mov
fimull
cwtl
mov
push
imull
outsl
jbe
in
mov
movsl
cmp
mov
add
fucomip
mov
in
fistpl
pop
aas
stos
jno
cmpsl
mov
and
mov
pushw
filds
daa
xor
push
lods
stc
mull
or
adc
and
popa
pusha
push
xchg
inc
sarl
or
popf
rcrl
dec
pop
cmp
pop
mov
outsl
stos
mov
ljmp
jb
xlat
cmp
int
jne
mov
jge
lds
test
push
mov
sbb
jbe
movsl
movsb
inc
fiadds
xor
xor
cs
cmp
adc
dec
scas
pop
enter
shll
and
xchg
in
add
jnp
ficompl
cmp
adc
decl
jge
sub
shrb
inc
pop
pop
cli
in
and
push
mov
movsl
faddl
data16
add
adc
mov
stos
cwtl
dec
jge
push
out
icebp
ret
fldcw
pusha
addb
mov
push
iret
xor
pusha
daa
or
cld
push
out
je
mov
cld
inc
mov
fs
iret
jnp
pop
daa
xchg
mov
test
insb
xchg
lods
aas
mulb
popa
data16
lret
movsb
pop
inc
jns
sub
movsl
cmp
push
mov
push
add
das
jmp
cmp
fstps
loopne
xchg
in
addr16
lods
ss
orl
pop
lods
or
mov
and
xchg
sbb
add
cmp
inc
in
popf
jmp
push
scas
out
jmp
cmc
rcrb
ret
jle
scas
cmpsb
fs
add
sub
imul
test
clc
pusha
jbe
pop
mov
in
cltd
insb
test
popf
mov
testl
fisubrl
aaa
push
test
nop
cmp
xchg
out
mov
xchg
sub
and
cmpsl
int3
push
pop
pop
mov
cmp
sub
xchg
push
dec
insb
dec
stos
xchg
dec
mov
jo
sub
call
fwait
rcr
pop
rolb
stos
fidivrs
xchg
sub
sub
mov
in
sub
mov
pop
daa
arpl
mov
sbb
popa
lock
repz
sbb
jmp
cs
jl
outsb
pop
xor
push
xlat
insl
repnz
lret
enter
in
adc
inc
es
js
sub
fdivl
jnp
and
sub
dec
adc
xchg
scas
fcmovbe
pop
outsl
rolb
mov
bound
pop
pusha
int3
in
ret
jle
rolb
test
pop
int3
scas
mov
stos
fsts
jmp
cwtl
inc
leave
outsb
pop
inc
jp
frstor
jae
and
push
sub
test
fbld
xor
test
sti
mov
fistpll
movsl
xchg
sub
dec
mov
scas
sbb
or
sbb
sbb
inc
popf
adc
add
adc
pop
mov
jno
xchg
xor
outsb
mov
sti
call
mov
bound
pusha
stc
loopne
out
std
and
aad
xchg
jecxz
add
jecxz
xchg
stos
nop
fucomp
out
mov
jb
rolb
in
or
fmull
daa
mov
inc
rcl
sarb
imul
ficoms
inc
xchg
mov
ds
mov
adc
mov
aas
sub
jo
xor
or
arpl
fmul
sub
xchg
loop
lds
dec
pop
pop
cmc
sub
inc
jmp
scas
inc
fidivrl
js
into
or
repnz
and
cmp
or
or
in
push
jb
cmp
push
sub
mov
vpshlw
scas
loope
sahf
mov
dec
inc
pop
std
fstps
mov
mov
sub
lcallw
mov
ljmp
aas
clc
popf
repnz
jecxz
sub
jp
mov
iret
sbb
push
ret
add
xchg
outsl
and
push
push
jae
out
xchg
arpl
pop
sbbb
dec
cmc
mov
mov
sbb
xor
xchg
jmp
sub
ret
das
sbb
dec
mov
daa
movb
mov
dec
arpl
adc
jmp
pop
fcomip
test
out
jp
add
fwait
lea
imul
xor
mov
imul
sahf
test
scas
js
xchg
mov
pop
movsb
mov
or
shll
xchg
add
mov
and
jne
add
hlt
jb
pop
cmc
sbb
jle
ss
cmp
fs
cmp
loopne
repnz
cwtl
xor
xor
xchg
push
cltd
test
xchg
fmuls
add
lret
shll
adc
cwtl
and
es
xchg
clc
or
dec
push
mov
push
pop
gs
clc
loop
and
pop
arpl
push
test
pop
sbb
mov
pop
dec
push
in
test
mov
loopne
rolb
daa
popf
xchg
cli
cld
xchg
int
in
aad
into
lds
sub
scas
mov
jle
xchg
push
mov
decb
lock
mov
cli
xchg
jb
xchg
ret
cltd
or
ds
lods
scas
or
hlt
fcmovne
mov
cltd
cmp
jns
adc
ss
scas
pusha
mov
daa
scas
insb
xor
lods
outsl
mov
add
jp
xchg
inc
sub
mov
sbb
adc
test
pushf
int
or
xor
push
sub
cltd
daa
pop
xor
push
adcb
and
mov
js
outsl
or
mov
nop
ficomps
insb
add
lret
inc
push
lods
nop
hlt
xchg
jnp
pop
push
insb
and
lret
sahf
cmp
mov
jbe
aam
sbb
jbe
iret
loopne
sahf
fadds
sti
dec
popa
loopne
fbld
cmpsb
les
cli
movsl
pop
or
xlat
dec
and
and
enter
pusha
or
jecxz
push
and
dec
mov
mov
adc
popf
xchg
jno
js
push
mov
sahf
in
push
out
clc
mov
fcompl
mov
jecxz
mov
popf
cld
mov
mov
ljmp
lock
pushl
push
mov
xor
lret
and
mov
daa
xchg
inc
les
test
push
add
fcom
repz
icebp
add
orl
in
lods
fsts
mov
mov
jle
ds
aad
jbe
addb
out
lds
stos
dec
xchg
je
aas
cli
mov
or
jns
das
pop
sti
les
mov
xor
stc
dec
mov
out
sti
xchg
pop
adc
mov
jecxz
xor
pop
or
sbb
aas
movd
dec
cmp
leave
dec
xchg
shl
jns
iret
or
mov
pusha
ja
sub
test
inc
addl
arpl
mov
cmp
mov
nop
ftst
inc
aas
and
pop
add
adcb
cmp
xor
xor
movsl
xor
or
push
add
into
jo
pop
xchg
cli
cmp
cmp
lods
pop
in
cmc
or
push
js
insb
movsb
mov
and
adc
adc
sub
stos
cmp
push
sub
adc
or
or
push
inc
jp
lods
hlt
push
loope
sub
lods
lds
aas
xor
dec
add
mov
fdivs
jmp
cmp
loopne
xor
xor
rolb
daa
insl
sbb
dec
xor
scas
jecxz
jne
cwtl
mov
push
or
mov
inc
add
bnd
mov
or
pusha
and
aaa
adc
ljmp
rolb
adc
sub
push
cs
sti
mov
push
jae
fnstsw
in
sbb
ret
inc
or
mov
movsb
loopne
pop
xorl
fstl
and
jmp
xor
notb
sahf
jno
adc
sti
andb
cmp
mov
dec
inc
icebp
inc
mov
pop
fwait
movsl
sbbl
movsl
pop
loop
add
dec
xchg
inc
loop
inc
dec
frstor
lret
mov
mov
scas
inc
jo
dec
aad
push
pop
jg
cmpsb
pop
outsl
pop
aaa
sub
cmp
dec
frstor
cs
cli
xorb
repnz
and
in
lret
xchg
sub
js
leave
shrb
fs
ss
xchg
adc
lods
push
fimull
add
push
sbb
lods
mov
popl
das
lds
jl
bound
es
sbb
xor
adcb
or
frstor
je
and
sbb
out
ftst
jge
cltd
nop
pop
adc
mov
out
xor
pushf
push
add
inc
lods
addr16
outsb
sbb
mov
js
mov
or
jecxz
fists
pop
push
les
cmpb
bnd
push
adcl
mov
inc
int3
push
shlb
sarl
xlat
faddl
xchg
iret
mov
jmp
cwtl
mov
ljmp
jle
jnp
and
cmpsl
shlb
fnstsw
dec
and
popa
cmp
dec
cmc
gs
aaa
dec
sbb
cmp
mov
into
push
outsl
push
sub
fmul
imul
adc
imul
push
push
inc
pop
push
xchg
mov
xor
inc
neg
in
mov
cs
les
iret
rcl
jle
cmpsb
and
mov
fstpl
mov
push
pop
aaa
push
or
xchg
std
adc
mov
es
and
std
rcll
addl
adc
test
ljmp
xchg
mov
fiaddl
inc
xchg
std
adc
jbe
jge
xor
enter
inc
std
stos
test
cltd
sbb
sub
or
imul
mov
push
lds
movsb
cld
cli
xchg
sbb
imul
inc
clc
mov
iret
bnd
ljmp
add
pushf
sub
sub
cmpsb
div
pop
in
pop
cmp
xchg
out
out
out
pop
dec
xchg
xchg
repz
xor
movsl
fdivs
test
push
js
jmp
or
sub
mov
or
inc
mov
sub
lcall
fimull
repnz
push
push
ds
xor
dec
movsl
push
push
xchg
mov
arpl
inc
cmpl
push
sbb
dec
mov
sub
cmp
popa
cmc
fisubs
out
enter
mov
ja
test
xchg
sbb
xchg
sub
loop
sub
stos
sub
add
loop
gs
push
push
ds
and
loop
sub
shll
push
cmc
int3
cmpsl
ja
inc
jbe
push
or
cmp
adc
rep
mov
cmp
sub
push
mov
or
xlat
mov
mov
fnop
lcall
push
mov
jns
inc
adc
clc
cmp
popa
push
mov
jno
cmc
add
sub
arpl
loopne
mov
pop
mov
and
and
enter
mov
outsl
xchg
fcompl
xor
cld
adc
sahf
adc
cltd
rclb
adc
das
lods
fucomp
pop
cmc
add
mov
mov
adc
pop
or
adc
xor
pop
mov
jmp
jl
fwait
cmc
push
pusha
jne
insb
arpl
std
sub
sarl
in
idivb
or
lcall
pop
mov
out
xor
adc
jmp
cmp
jne
sub
and
inc
jp
xchg
cmpsb
mov
rcrb
in
sub
loope
cmpsb
inc
jge
xchg
add
add
cmc
cmc
push
lds
pop
mov
das
pop
inc
dec
in
flds
lock
fdivr
and
pushf
andl
and
xor
ficoms
and
mov
inc
mov
out
out
aam
js
sub
xor
cmpl
mov
dec
jl
cltd
sub
movl
mulb
push
mov
ds
out
rclb
sub
add
inc
movsl
hlt
ja
push
mov
lret
dec
lock
push
mov
pusha
mov
jb
sbb
repnz
xchg
pop
sbb
sub
movsb
sub
repnz
arpl
push
std
fcoms
and
mov
aad
dec
xor
xchg
mov
ss
movsb
dec
add
sub
jnp
jle
stc
lret
fucomip
ficoml
jo
shll
inc
lds
mov
xor
lea
mov
test
xchg
ljmp
inc
xor
loopne
mov
inc
xor
inc
sub
mov
and
adc
push
test
sti
aaa
inc
imul
jle
in
cmc
fadds
test
fldt
fwait
xor
pop
push
mull
aaa
pop
push
sbb
mov
and
adc
rcrl
mov
aaa
das
and
mov
xlat
mov
lahf
or
xor
push
je
cmp
leave
int3
lret
jmp
mov
lock
rclb
xor
inc
shrb
clc
jo
ret
mov
xchg
notb
mulb
test
imul
jg
sbb
mov
pusha
popa
imul
xchg
shl
and
mov
mov
cld
clc
js
mov
out
adc
ret
imul
pop
andb
mov
loopne
data16
mov
adc
push
je
xor
jecxz
dec
add
test
mov
dec
push
jmp
cmp
ds
xor
pop
fstl
fistps
cwtl
sbbb
sbb
icebp
cld
rcrb
xchg
fs
push
add
fstps
sahf
xor
lock
je
mov
mov
add
jge
shll
cmp
fidivrs
sbb
cli
fildl
jmp
rcrb
cwtl
lods
fadds
sbb
mov
xchg
sub
jecxz
inc
fisubs
jmp
cmp
pop
es
jl
jmp
xchg
iret
iret
shrl
out
sub
mov
call
push
mov
mov
inc
shll
stos
jle
sub
lods
xor
dec
xchg
lock
mov
cmp
pop
fimuls
cmp
inc
mov
pop
sub
imul
xchg
bound
mov
mov
cld
sbb
add
xchg
les
and
mov
sub
js
jmp
rcrl
jb
and
sub
dec
int
mov
adc
outsb
push
bound
out
mov
pop
mov
call
lahf
scas
int
mov
push
fst
es
bound
jbe
call
popa
add
into
push
rsqrtps
pop
mov
inc
xchg
cmp
cs
and
xchg
push
push
cmp
decl
loope
push
lods
imull
xchg
je
xchg
lcall
xchg
sub
push
pop
mov
rorl
mov
inc
mov
loopne
mov
mov
inc
arpl
xlat
jge
mov
pop
cwtl
adc
xchg
sub
push
adc
inc
push
filds
push
lods
pop
push
lea
ficoms
out
lahf
jae
push
adc
dec
inc
add
jp
fdivl
cmpsl
lahf
cmp
pop
sbb
shlb
mov
lahf
jl
loop
pop
push
test
scas
cmp
push
lods
xlat
xchg
xchg
mov
popf
pop
xchg
mov
movsb
scas
lock
and
loop
sbb
mov
jg
mov
add
and
sub
mov
xor
jecxz
xchg
jge
sbb
out
imull
stc
loop
pop
ja
pop
push
data16
dec
push
decb
sbb
test
lods
arpl
xor
dec
sub
fldt
jbe
dec
imul
adc
out
sbb
push
popa
dec
dec
jg
xor
lret
negl
jne
imul
test
mov
jl
arpl
cmpsl
sub
cmp
add
bound
cmp
movl
pop
inc
sub
out
orl
nop
pop
push
push
xchg
aam
loopne
jbe
cmp
ret
lds
fldt
cmp
cwtl
aaa
xchg
pop
jecxz
jl
xor
call
sbb
add
les
std
cmp
test
cwtl
pop
imulb
mov
pop
scas
cmc
sbb
inc
xor
jl
xchg
std
rorl
stos
sarl
std
add
popf
in
cli
cli
int3
mov
and
rcrl
add
les
ss
arpl
xchg
xchg
popf
add
ffreep
in
sbb
gs
cmp
cld
stos
clc
dec
scas
clc
call
sbbl
mulb
scas
push
stos
lods
rol
inc
cmpsb
mov
adc
inc
inc
inc
jbe
mov
popf
jp
leave
lds
ljmp
sub
sub
or
cmp
cmpsl
shll
and
push
inc
sub
and
add
call
xchg
xor
test
int
dec
sub
das
std
mov
jo
mov
xlat
in
stc
xacquire
push
and
jp
test
leave
jb,pt
shrl
mov
push
sub
xchg
fstpl
sbb
inc
push
push
js
xchg
xor
insb
xchg
inc
push
xor
fxtract
gs
push
inc
movsb
xchg
xor
test
rcrl
push
pop
inc
dec
pop
in
rcrb
pop
pop
outsb
push
loope
outsb
pushf
ljmp
outsb
add
lret
jb
lret
aas
dec
in
es
push
add
push
add
mov
jno
lahf
sub
jo
nop
and
outsl
inc
rolb
mov
mov
mov
subl
add
lret
mov
or
and
cmp
lret
test
cwtl
adc
push
in
xchg
inc
mov
stos
mov
mov
adc
sbb
int
jne
pop
pop
rcrb
cmp
xchg
sub
jl
pop
xlat
test
xor
dec
add
test
jno
and
les
mov
clc
es
inc
jl
or
mov
lcall
dec
rorb
in
jmp
jp
sub
roll
inc
jo
in
cmpsb
dec
sub
movsl
mov
rolb
push
sub
fcoms
stos
negl
pop
add
or
pop
xchg
cwtl
loopne
shlb
rorl
arpl
jo
cmp
nop
pop
fsubr
or
xchg
test
out
jae
dec
sub
hlt
mov
js
lods
add
inc
xchg
inc
repnz
inc
and
push
dec
clc
test
pop
lret
sbb
mov
in
adcb
and
sub
shrb
xlat
xorl
out
or
mov
dec
ret
cmp
stos
lods
stos
insl
mov
cmp
mov
arpl
repnz
adc
xchg
aas
push
cmp
dec
push
out
lret
jb
movsb
mov
mov
push
sub
lahf
mov
dec
lods
fcoml
push
stos
cmp
cmpsl
daa
sbb
cmpsb
scas
xchg
lock
dec
cs
jl
int3
aam
mov
or
aam
xchg
jecxz
cmpsl
adc
jno
ljmp
cmpsl
out
xchg
ret
movsl
hlt
sbb
loope
ret
stos
pusha
mov
clc
aam
popa
and
shll
mov
push
lds
pop
cli
jmp
pushf
and
mov
aaa
fisttpl
inc
push
pop
andb
jb
mov
lds
adc
xor
or
test
xchg
call
or
xor
pop
subl
cltd
in
insb
cmc
inc
xchg
and
add
xchg
sub
jmp
shr
jne
fisttps
pop
mov
inc
adc
add
test
sbb
xchg
cmp
fucom
xchg
pop
sub
dec
fsts
jbe,pt
gs
lret
sub
jle
bound
aaa
jne
fwait
gs
push
jb
dec
sahf
cli
call
mov
dec
inc
rcll
test
es
xchg
repnz
cld
add
lock
adc
enter
fstps
fdivl
xchg
xor
stos
mov
dec
lods
sbb
jl
jb
jmp
pop
xlat
sub
cmpsb
addl
lods
enter
xor
jbe
sbb
in
mov
inc
inc
and
pop
loop
mov
outsl
ret
outsb
adc
les
daa
lret
fdivs
mov
and
ds
or
and
cli
and
in
push
cld
testl
hlt
sbb
imul
adc
loope
push
pop
mov
pop
fwait
test
or
sahf
ds
dec
push
and
loopne
test
cmp
popf
jmp
jecxz
test
mov
fnstenv
mov
mul
aaa
bound
cld
jno
dec
jae
pop
lods
scas
fldl
fisttpl
mov
leave
aaa
xchg
add
mov
out
xor
push
outsb
jbe
lret
ficomps
pop
cwtl
sbb
mov
pop
arpl
pop
or
imul
outsl
mov
addr16
in
jl
outsl
jne
inc
lcall
sbb
hlt
icebp
inc
nop
mov
rclb
adc
dec
cwtl
push
int3
mov
es
sbb
into
cmpsl
repz
xor
rcr
lds
dec
push
inc
and
add
dec
outsb
jl
repnz
xchg
jp
outsb
or
lea
fwait
gs
xor
testl
hlt
decl
icebp
into
sub
sub
sub
icebp
or
int3
mov
je
pop
cmpsl
pop
mov
push
push
ja
pop
shll
mov
mov
into
pop
push
jl
xor
test
mov
push
loope
mov
jp
inc
push
sar
mov
or
push
mov
repnz
pop
add
pop
lea
jecxz
push
fbstp
push
dec
movsb
cwtl
loopne
frstor
dec
subb
mov
cltd
icebp
add
mov
fwait
call
dec
roll
cmp
notb
test
and
or
xchg
pop
mov
arpl
sbb
stos
daa
mov
adc
fildll
pop
pop
push
dec
mov
fnsave
mov
sti
sbb
inc
mov
call
les
decl
cmpsb
push
out
popf
rorb
push
popa
mov
or
push
popf
aad
sti
mov
hlt
push
jmp
mov
cmpsl
loopne
ljmp
xlat
pop
or
rcrb
sarl
jmp
loop
push
fistl
jns
lock
sbb
je
lahf
lds
repz
mov
filds
ljmp
int
cmp
mov
pop
adc
dec
jnp
out
dec
shll
ljmp
in
dec
idiv
xchg
mov
dec
mov
jb
inc
pop
dec
cmp
jo
sti
jg
pop
icebp
in
mov
movsl
out
push
cli
inc
mov
inc
insl
mov
add
idiv
rorl
insb
cli
inc
and
cli
push
push
aad
or
xchg
sbb
lret
fsubs
adc
mov
mov
adc
daa
int
call
adc
repz
mov
sbb
call
cmp
xchg
cmp
fcmovne
popa
jl
movsl
cmp
mov
push
cmp
xchg
sbb
pop
add
les
sbb
inc
das
jbe
in
cmp
pop
xchg
and
ss
cwtl
mov
and
push
jnp
ja
into
outsb
loop
scas
xchg
arpl
mov
je
dec
sbb
dec
dec
xor
fs
sub
or
cmpsl
jle
xorl
aam
dec
insb
enter
jg
xchg
sbb
cmp
jnp
ret
cmp
xor
bnd
out
mov
mov
aaa
push
xchg
loope
sub
and
adc
or
jle
loop
push
xchg
xchg
pop
pop
xor
lds
pop
cmp
out
push
out
or
mov
or
jle
sub
bound
pop
in
fs
xor
shll
push
loopne
push
fcoml
imul
jmp
out
cmp
xor
dec
js
jecxz
push
pop
dec
push
push
sbb
push
out
fcoms
mov
cmpb
in
shrb
mov
popa
iret
int3
in
adc
xor
pop
mov
dec
and
adc
mov
push
cmp
sbb
in
dec
sbbb
adc
and
mov
mov
dec
stos
adc
mov
xor
jmp
mov
dec
jl
loopne
in
cld
or
int3
hlt
fidivs
lcall
lds
sbb
out
repnz
and
xchg
push
ret
mov
jb
ret
dec
sub
sub
mov
out
mov
xchg
ds
inc
mov
adc
sbb
scas
mov
mov
lods
dec
cwtl
subb
jmp
xor
and
cmpb
add
rolb
push
mov
sbb
sub
fld
lcall
add
cli
daa
lea
mov
int3
ret
mov
outsl
int3
dec
xchg
pop
jmp
aad
mov
idivb
push
adc
and
mov
imul
adc
or
jns
xchg
adc
xor
sub
ds
mov
sub
push
int3
aad
pop
jbe
roll
idiv
sub
into
jmp
sbb
test
orb
das
aad
add
mov
js
ret
scas
daa
xor
add
movsb
jno
sbb
xor
loopne
adc
rorb
mov
mov
sub
or
inc
sti
test
adc
fidivrs
or
mov
ljmp
cli
pop
movsb
dec
xchg
outsl
dec
inc
outsl
mov
cmpl
sbb
mov
adc
mov
movsl
bound
mov
jnp
shld
pop
sub
push
clc
mov
mov
je
adc
cs
les
aam
xchg
adc
xor
cli
sub
xchg
dec
clc
lea
sbbl
out
rclb
fimuls
in
ss
pop
ret
outsl
inc
and
jl
mov
mov
sub
rcr
pop
jnp
into
hlt
dec
cmp
pop
jno
lret
pushf
rcrl
pop
lret
jmp
pusha
or
sub
rorb
pop
xlat
xchg
movsb
mov
mov
test
or
mov
jmp
add
jmp
jns
into
inc
pusha
cmp
xlat
ja
popf
or
push
cmpsl
add
cld
fsubrp
jns
lds
jns
lret
dec
sarl
lahf
sbb
test
jnp
lds
out
es
aad
lock
pop
adc
jecxz
pop
mov
mov
inc
pop
cmpsl
aad
cmp
outsl
mov
sub
inc
push
pusha
int
sub
push
data16
jne
test
pop
into
jbe
adc
jmp
mov
in
cwtl
in
mov
and
xchg
sub
lret
lock
jnp
test
cmpsl
sbb
add
sub
popf
add
inc
scas
cmpsb
pop
in
int
pop
jnp
xchg
adc
sbb
js
pop
in
and
sbbb
mov
mov
aas
sbb
dec
sarl
sub
mov
pusha
shlb
push
iret
xlat
jne
jmp
jns
ja
les
add
mov
ja
mov
push
cmp
lahf
cmp
inc
movsb
cmpsb
jnp
jecxz
xchg
iret
je
lret
mov
add
leave
hlt
lahf
lds
aam
pop
je
push
stc
pushf
fistl
jg
cmp
jp
ds
cmp
sub
or
lea
cli
addl
ds
add
sbb
push
jp
loop
sub
add
sbb
pop
xor
cwtl
lock
add
sbb
xor
lahf
into
dec
sti
adc
in
lahf
mov
jmp
fidivs
gs
push
int
aaa
test
pushf
cltd
in
mov
repnz
int
int
cmp
popa
pop
rcr
push
sets
in
std
jg
inc
pop
adc
jecxz
subl
out
jg
in
or
shlb
inc
aad
jbe
iret
ja
or
mov
cmp
data16
insb
cmpsb
mov
fmull
out
les
rolb
inc
and
dec
pop
and
mov
jb
fidivl
sub
add
cmc
xor
in
test
and
jne
ja
dec
clc
jbe
shlb
sti
test
push
push
notb
out
movsl
clc
in
sbb
push
fldt
rclb
out
bound
sbb
repz
dec
mov
xchg
lock
jo
inc
test
lods
rcr
sbb
aas
pop
push
shlb
test
mov
into
sbb
ficompl
fsub
xchg
in
movsl
cmpsb
jmp
repnz
test
jne
and
dec
xchg
adc
or
sub
add
xabort
hlt
pushf
fs
lods
push
add
pop
sub
cmpsb
rclb
mov
ret
lock
mov
jno
jne
or
outsl
js,pt
shll
sub
dec
lahf
jmp
xchg
lcall
mov
loopne
int3
out
push
mov
sub
lods
lock
stos
cld
mov
out
jle
je
ja
orl
lahf
movsb
gs
ret
lcall
push
or
insl
ss
fmuls
push
cmp
mov
add
dec
mov
mov
iret
lock
mov
push
mov
push
enter
dec
pop
push
loopne
lock
pushf
xor
cli
push
lods
add
cwtd
pusha
or
push
and
dec
outsb
pop
cmp
mov
cltd
test
sub
sbb
and
cli
xchg
jge
ds
and
pop
lock
sub
sbb
push
imul
ds
subb
push
lret
je
add
mov
cmp
xor
xchg
dec
jg
clc
cld
sub
outsl
mov
ret
scas
xorb
orb
push
fcomip
in
aas
pop
sub
xchg
mov
ds
xchg
jns
pop
add
movsl
into
ljmp
leave
popa
jp
cmp
outsb
pop
sub
insb
and
mov
sbb
xchg
jmp
ret
dec
push
andb
push
or
xchg
or
shlb
jb
add
rclb
or
scas
mov
push
shrb
push
pop
outsl
xor
mov
cmp
inc
call
push
or
outsb
pop
mov
push
inc
jns,pt
mov
mov
cmp
faddp
sub
adc
dec
xchg
push
out
inc
or
xorl
push
xchg
scas
xor
out
and
clc
adc
dec
mov
inc
imul
push
xor
xchg
cmc
hlt
fs
adc
mov
push
cmpsb
jbe
mov
lahf
data16
sub
pop
adc
dec
arpl
subl
enter
repz
daa
xchg
add
addr16
cld
rol
pop
ficoml
push
xor
les
call
iret
lock
xchg
ljmp
and
icebp
cmpsl
push
jb
add
and
and
pop
in
pop
in
and
ds
pop
xor
or
insl
pushf
adc
sbb
push
lock
leave
lahf
xchg
repnz
xlat
mov
mov
cmp
ficomps
pop
xor
popa
mov
dec
mov
mov
test
sbb
sti
jb
jle
pop
add
rcrb
mov
xchg
sub
addr16
movsb
stos
out
out
xchg
das
sbb
ret
push
jbe
xchg
xlat
daa
mov
out
xchg
les
and
dec
cli
adc
jae
mov
fistpl
lcall
jmp
xchg
rclb
leave
xor
inc
adc
ret
enter
lods
jle
fnstenv
jno
or
jno
mov
adc
aam
fsub
insl
unpcklps
sub
jmp
xor
in
xor
out
rcrb
mov
sbb
pushf
sub
cld
mov
fiaddl
insb
cs
sbb
cmp
dec
cmc
xor
xor
push
mov
idiv
cld
scas
mov
scas
test
fcmovnu
fidivl
fldt
orl
ret
or
aaa
test
pop
test
lret
mov
enter
mov
popa
cmp
adc
mov
ficoml
inc
in
xor
ss
fnsave
sbb
xchg
cmp
nop
jns
cmc
outsb
aaa
cmp
xchg
leave
fsubl
sbb
fdivl
idivl
inc
cmpl
rsm
adc
inc
cmpb
loope
add
adc
in
aad
ucomiss
and
fbstp
enter
inc
adc
aas
pop
cwtl
cmp
inc
jl
addr16
arpl
clc
adc
mov
xchg
and
xchg
adc
sbb
lret
pop
cmp
fimull
aaa
add
add
lds
sbb
xor
push
jnp
mov
jle
xor
inc
mov
adc
test
int3
cmpsl
dec
loop
nop
pop
es
pop
outsl
jne
sub
push
pop
nop
scas
inc
cmpsl
xor
fs
movsb
xor
push
inc
adc
cli
inc
jg
cmp
mov
orl
cmpl
sbb
dec
or
sbbb
dec
or
fwait
inc
mov
loope
mov
lock
aaa
ja
mov
cmpsb
xorb
sbbl
adc
cmp
mov
and
lahf
inc
dec
mov
aam
push
mov
popa
cmp
and
mov
mov
dec
dec
int
push
repz
fisubs
lcall
dec
sbb
lea
aaa
bound
scas
int3
jl
mov
enter
mov
mov
std
aad
test
cli
roll
pop
movsb
push
lods
push
fnstenv
imul
mov
cmp
loop
or
dec
lret
jl
subb
push
popa
xor
and
vfixupimmsd
lods
cmp
pop
cmp
pop
in
or
pop
push
insb
mov
enter
aad
out
xor
outsb
add
int3
xchg
shrl
and
negl
or
ja
test
cmp
inc
jl
loope
sbb
into
imul
xor
push
movsl
imul
adc
in
clc
stos
dec
addr16
hlt
pop
rclb
orl
mov
das
dec
sahf
pop
ficoms
xor
or
sbb
inc
aad
push
cli
ljmp
adc
xchg
mov
cld
fwait
mov
xchg
and
xor
mov
sbb
scas
or
loopne
jnp
sub
sub
sbb
sub
stos
mov
andb
pop
dec
mov
cmpsb
jbe
aas
loope
cltd
adc
loope
mov
test
fwait
mov
xor
push
jl
mov
cmpsl
pop
scas
sub
fcmovb
aam
movsl
lods
dec
pop
pop
push
xlat
xlat
jle
pop
insb
ljmp
cmp
pop
dec
pop
fnsave
cmpsl
sub
mulb
jg
mov
push
adc
pushf
gs
aad
aaa
aas
outsb
and
sbb
or
je
inc
stos
inc
or
mov
js
adc
dec
pop
adc
andl
pop
test
lcall
add
sub
or
or
or
test
ret
fs
xchg
and
pop
in
and
or
sub
jb
jl
idivb
push
cmpsl
pop
ret
test
test
push
push
or
rcll
lds
mov
std
pusha
jmp
out
cs
push
in
nop
lea
cmpsb
cmp
in
aas
test
cmpsl
jb
dec
dec
iret
jmp
aas
movsl
cmpsl
ss
xor
mov
cmp
add
pop
lds
xor
out
fdivr
sub
or
push
pop
cs
movsb
popf
jnp
mov
ja
push
jecxz
icebp
and
cs
mov
push
je
pop
xchg
cmp
fidivs
push
xchg
imul
out
push
mov
mov
cmp
adc
inc
loope
pop
fldenv
es
xlat
bound
dec
int
pop
enter
cwtl
cmpsl
and
push
cmpsl
mov
clc
lahf
xchg
cmp
dec
xlat
mov
dec
xchg
adc
add
fnstenv
jmp
push
scas
xor
jb
push
adc
sarb
inc
push
nop
stos
scas
out
xlat
arpl
dec
imull
loope
or
ficomps
xchg
inc
mov
stc
lcall
test
int3
stos
out
inc
or
lock
repnz
sti
arpl
jg
adc
pop
mov
lods
mov
cmp
push
dec
inc
sub
mov
jl
push
add
out
dec
cmc
push
mov
pop
dec
inc
inc
dec
dec
pop
sub
mov
mov
iret
push
mov
jae
dec
insl
lds
push
inc
insb
repnz
jne
sbb
xchg
scas
repz
fadd
cmpsb
jp
mov
pop
xlat
enter
pop
fldt
ja
sbb
cmpl
adc
outsl
test
lcall
jge
popa
jno
and
lock
push
cmpsb
rolb
rcrl
notl
mov
dec
sbb
dec
cmc
cmp
shll
test
mov
pop
or
popa
pusha
push
sti
mov
stc
popa
jmp
inc
xchg
xor
fisubrl
dec
sub
sub
sar
add
or
add
sarb
lret
mov
jg
aaa
xor
and
leave
repz
pop
lret
mov
out
pop
jl
in
mov
xor
jle
pop
ret
rorb
mov
pop
js
das
or
in
pop
mov
mov
ret
loop
inc
dec
dec
jbe
mov
mov
or
and
fmull
mov
in
xor
sbb
dec
addr16
rol
push
lods
sti
xor
fisttps
sbb
or
fnsave
lcall
and
or
mov
test
test
sub
fldcw
or
scas
adc
cmp
push
pop
mov
push
iret
int
xchg
pop
xchg
jle
das
jns
or
clc
lahf
push
jle
rcl
clc
mov
pop
jecxz
mov
les
sbb
sti
xor
movsl
shrb
dec
mov
sbb
xor
fldl
pop
sbb
xchg
pop
out
push
push
mov
popa
and
in
jecxz
and
outsl
fdivp
lea
mov
lret
inc
jb
mov
iret
sbb
lods
xchg
xor
in
mov
lods
xor
push
sbb
jg
push
mov
pop
dec
push
cmp
stos
daa
push
mov
mov
aaa
sti
mov
enter
push
mov
inc
sub
adc
dec
lea
in
scas
push
jl
call
cmpsb
int3
into
in
push
fs
dec
add
pushf
lret
neg
jp
dec
add
push
xor
jo
and
outsb
pop
xchg
mov
and
push
sub
push
or
jp
hlt
fidivl
in
cmp
mov
cmpsb
fcoms
das
jge
xchg
popf
sbb
mov
aad
leave
aad
and
test
out
pop
jno
clc
dec
xchg
adc
add
fistps
sub
adc
ret
sbb
dec
push
popf
scas
fbld
fprem
xchg
call
loope
ja
sbb
add
fcomps
cmp
imul
negb
rolb
scas
cmp
jg
dec
in
shl
cmp
outsl
cld
popa
outsl
aaa
inc
ret
mov
mov
or
mov
int
int3
adcb
xchg
push
out
cli
sar
cmp
stc
add
lods
pop
push
loope
fwait
testb
dec
nop
leave
aad
inc
mov
mov
dec
push
jbe
mov
xchg
xchg
js
mov
push
clc
test
jnp
xchg
adc
cmp
sbb
mov
pusha
imul
cmp
mov
scas
mov
ljmp
push
std
ljmp
pop
sub
mov
adc
jno
mov
add
inc
mov
shll
imull
mov
orl
int3
push
std
cmp
test
or
fdivrl
dec
imul
sub
pushl
lret
stos
fmuls
arpl
adc
flds
or
dec
movsl
mov
cmp
cwtl
ficomps
push
mov
inc
int
jo
loop
dec
xchg
popa
xor
push
and
jg
inc
or
sub
insb
cmp
fimuls
mov
rolb
inc
loopne
mov
push
aaa
jge
sbb
cmc
dec
sub
rorl
lea
mov
sarb
cld
inc
mov
scas
rclb
cmpsb
sbb
shll
sahf
sbb
mov
or
lds
or
ds
outsb
jmp
inc
sbb
dec
mov
push
das
cmp
xor
jl
add
lods
push
sub
or
int
bswap
inc
fistps
popf
mov
iret
or
in
pop
pop
sub
jmp
mov
pushf
and
popf
hlt
inc
ret
insl
addr16
sbb
outsb
and
sbb
push
pop
jge
xchg
stos
push
cmp
xchg
pop
push
out
adc
jge
mov
mov
sub
push
aam
add
xlat
xchg
and
shr
int3
jg,pn
jge
jecxz
jbe
shlb
pop
mov
test
fidivrl
sti
aaa
daa
rorb
pop
or
pop
xchg
mov
mov
pop
rcrb
jp
flds
pop
push
cmp
xor
adcl
inc
in
nop
je
jns
push
adc
mov
popa
mov
nop
ljmp
popf
sub
mov
out
ja
lds
roll
popa
adc
mov
mov
adc
loop
and
pop
testb
jno
les
and
je
mov
out
lods
mov
jl
mov
dec
ret
mov
lods
ljmp
out
fidivrs
adc
imul
cld
push
xlat
sbb
xor
dec
pop
hlt
inc
rcll
in
mov
icebp
rcrl
xchg
adc
rcrb
cmp
inc
stc
data16
adc
xchg
daa
fsubrs
data16
cs
dec
test
add
adc
xchg
mov
les
push
or
xorl
sbb
hlt
xchg
ret
sub
sbb
adc
jae
nop
cmp
test
xchg
or
cmp
add
pop
hlt
mov
mov
adc
push
dec
aam
sbb
add
push
mov
add
cmp
in
mov
push
cmp
mov
fistpll
pop
sahf
mov
fimull
in
dec
and
mov
push
repnz
or
pop
pop
xlat
into
dec
add
jg
insb
addr16
mov
inc
mov
dec
div
sbb
add
or
mov
mov
addr16
mov
push
not
ss
jb
dec
push
inc
mov
test
pop
mov
cmp
sbb
shrb
push
test
push
dec
sbb
stc
out
lods
push
push
enter
mov
mov
and
gs
jae
inc
pop
pop
mov
sub
lcallw
lret
fwait
aad
inc
mov
push
mov
sub
pop
adc
mov
push
outsl
pop
jno
ficompl
inc
jmp
mov
idivb
cmp
mov
or
or
in
and
push
xor
mov
icebp
rcl
iret
nop
fdivrl
arpl
cld
iret
inc
or
shlb
add
xor
rorl
mov
push
xor
mov
insb
add
scas
das
cmc
or
adc
out
in
andl
sbb
mov
in
xchg
repz
in
jl
inc
cwtl
xor
in
sub
or
aad
iret
sbb
mov
imul
js
adc
imul
inc
aad
iret
test
xor
cs
pop
fs
jp
in
in
fnsave
int3
jg
fdivl
movsl
ds
es
push
push
dec
xlat
xchg
sahf
gs
in
sub
out
jmp
jae,pn
cmp
xchg
add
shl
inc
xor
fcmovne
fcomi
push
cli
loopne
mov
xor
addr16
xchg
mov
into
cmc
nop
mov
ljmp
xor
and
mov
or
jo
fisubrl
jg
or
sbb
addl
test
pop
pusha
repnz
sahf
bound
ss
fwait
in
lret
mov
pop
in
gs
addr16
push
xchg
mov
mov
mov
jb
movsl
and
pop
and
hlt
and
or
cmp
mov
jo
lea
decb
cmp
cli
test
dec
xor
clc
ror
mov
shrl
jb
jmp
jle
pusha
jl
sub
stc
dec
decb
ret
mov
in
test
addl
sti
mov
dec
xchg
adcl
test
stc
xor
push
dec
aaa
popf
sub
jl
or
cmc
repnz
icebp
push
or
mov
hlt
sub
mov
cwtl
aas
test
lock
or
push
jecxz,pt
push
bound
pop
mov
jmp
out
push
shrl
scas
mov
push
flds
and
sbbb
sbb
xlat
test
cs
or
xchg
btsl
stos
insb
mov
aad
mov
mov
inc
xor
sbb
jmp
push
jb
js
jmp
inc
cltd
cmpsl
inc
sti
cli
or
outsl
inc
push
in
and
push
out
xlat
sarb
movsl
mov
addr16
dec
cs
jbe
push
lcall
lcall
xor
dec
sbb
push
mov
repz
clc
push
inc
mov
popa
sbb
mov
xchg
pusha
insb
add
out
lahf
in
jle
testb
rolb
pop
sbb
icebp
cli
cmp
out
mov
and
pop
jno
stc
jl
xchg
sti
mov
les
pop
fadds
les
adc
insl
sub
xchg
or
cmpsl
dec
scas
fs
pop
ljmp
fidivrl
fisttps
cld
sub
scas
dec
sub
jp
out
pop
sbb
mov
mov
mov
mov
push
loop
out
add
push
or
cmp
lea
and
inc
into
int3
mov
aaa
fdivrs
jo
inc
std
pop
imul
sbb
add
fsub
data16
sbb
push
or
mov
cmpsb
pop
dec
lret
mov
add
stos
rcrl
jle,pt
arpl
ret
or
pushf
mov
subb
stos
out
adc
mov
xor
cmpsl
outsb
into
or
movsl
jmp
imul
cmp
jle
hlt
imul
adc
lock
adc
xchg
and
shr
je
inc
sbb
or
in
mov
and
ja
xor
jecxz
mov
pushf
lret
adc
or
lea
adc
adc
fmuls
inc
mov
add
testl
pop
adc
fisubl
add
scas
pushf
mov
push
push
sbb
pop
fsubrs
stos
xlat
xchg
pop
out
cmp
mov
shld
fiaddl
rcrl
sub
mov
test
mov
inc
xchg
cmp
rolb
and
adc
in
cmp
xor
pop
in
sbb
xor
jge
mov
test
arpl
dec
mov
adc
or
sbbl
shll
jns
push
xor
les
les
pop
pop
outsb
mov
pop
insl
dec
sub
xchg
popf
pop
stc
lea
cmp
iret
or
xorl
mov
frstor
ja
dec
loop
ret
mov
nop
cld
push
int3
dec
jmp
mov
je
data16
mov
loope
xchg
lcall
lock
jl
das
jecxz
dec
fstpt
fsubrs
notb
clc
cmpsl
loop
cmpsb
mov
sbb
es
cmpl
sbb
inc
dec
dec
mov
std
fdivrl
sbb
cltd
cmp
or
inc
outsb
das
mov
in
jae
push
js
aad
shlb
mov
enter
test
mov
add
addb
mov
jmp
divb
cli
xlat
sbb
mov
push
leave
mov
andl
dec
sub
mov
push
les
and
sub
mov
inc
add
outsb
mov
and
pop
inc
and
int
shlb
jecxz
cmc
lods
push
cld
lret
pop
addr16
jbe
xchg
mov
test
mov
flds
fcmovnbe
outsl
scas
aam
pop
cmpsl
out
jg
mov
notl
xchg
mov
cltd
out
popa
dec
mov
ds
pop
xchg
cmp
jno
iret
incl
cmpsb
fidivl
int3
int
or
jmp
pop
sub
aam
mov
insb
test
xchg
dec
inc
pop
movsl
mov
sbb
loope
ret
fwait
ss
ja
mov
dec
mov
sub
pop
lds
popf
cwtl
dec
cwtl
stos
lcall
jmp
outsb
dec
shrl
xor
jnp
rclb
rcl
addr16
sbb
cmpsb
add
lret
mov
js
out
mov
mov
sub
mov
loop
mov
iret
mov
mov
xor
fisubrs
rclb
inc
adc
ja
mov
movsb
sub
or
sbb
cld
cs
adc
sbb
adc
and
pop
sbb
xor
or
mov
subb
pushf
xchg
and
lret
jl
dec
insl
fstl
push
add
pop
or
xor
or
and
xlat
xor
lods
xor
divl
xlat
or
adc
add
and
dec
loop
and
out
xchg
fcompl
lahf
xor
leave
push
stos
xchg
jbe
dec
gs
jl
jno
mov
sbb
lea
bnd
fistps
sub
xor
sahf
insb
fists
mov
orb
pop
pop
das
pusha
dec
sub
and
lret
cmp
sbb
push
test
xor
lds
ljmp
sbb
sub
dec
fdivl
mov
cmp
jns
addr16
iret
stos
adc
xor
lret
gs
rclw
out
mov
and
xor
mov
js
mov
cltd
sub
fisttpll
dec
lea
sbb
cmp
push
scas
mov
dec
arpl
or
xchg
leave
ljmp
repnz
mov
lods
and
add
mov
in
dec
add
cmp
addr16
or
popf
add
out
dec
xchg
arpl
cltd
das
mov
fildl
mov
push
cmp
aaa
xlat
xor
mov
mov
lcall
dec
subb
xchg
jge
jl
mov
stos
int
pop
lret
arpl
loopne
cs
aaa
pop
pop
push
dec
sub
jl
sbb
push
jnp
aaa
std
xchg
push
aam
sbb
fdivrl
pop
fildl
pop
sub
fstpt
add
out
sbb
xor
adc
mov
lret
push
mov
cs
out
lods
test
loopne
push
and
pushl
test
add
nop
or
dec
testl
inc
pop
xchg
outsb
mov
mov
jmp
mov
jbe
ret
imulb
dec
addr16
rcll
rclb
aam
bound
gs
aam
out
xchg
pop
dec
mov
les
enter
cmp
inc
test
jl
cli
iret
or
popa
jl
scas
xchg
movsb
and
ja
push
rcll
push
mov
bound
sub
loope
sbb
stos
sub
icebp
push
test
lods
test
xchg
insl
jae
cmp
mov
cmp
inc
imull
pop
loope
test
js
lods
lods
xchg
sbb
push
add
lret
dec
lret
push
jmp
repnz
or
xchg
cmc
cld
popf
mov
pop
loopne
cli
add
pop
push
mov
jp
mov
out
pop
jae
sbb
xchg
sub
or
dec
adc
sub
shll
hlt
mov
cmp
jp
mov
pop
push
popa
test
dec
rorl
sub
jmp
jb
std
xor
addl
std
iret
xor
push
popf
and
inc
lea
fnstenv
sub
faddp
arpl
mov
mov
roll
mov
cli
inc
repnz
jo
mov
add
mov
icebp
cmp
dec
push
mov
dec
in
adc
inc
fwait
aam
inc
jl
cmp
sbb
iret
cmp
call
fcoms
test
lods
arpl
mov
mov
pop
adc
cmp
imul
mov
jae
out
hlt
push
mov
sbb
mov
inc
cltd
addr16
cmp
movb
sbb
sub
or
add
inc
vphsubbw
aas
cli
xchg
cmp
sub
mov
pop
fwait
mov
push
jno
sub
dec
faddl
adc
cld
add
push
mov
jecxz
popf
out
push
sbb
sub
dec
rorl
pop
inc
std
test
xchg
notb
push
pushl
adc
sbb
fidivl
vsubps
mov
push
mov
test
shr
aas
out
arpl
insl
loopne
push
emms
dec
inc
and
xchg
pop
lret
jae
lds
js
movsl
jp
aaa
mov
mov
daa
stos
cmc
adc
mov
push
clc
or
xor
lcall
and
jp
fst
mov
enter
out
cmc
and
fidivrl
ret
sahf
cmp
in
mov
mov
mov
jl
add
repnz
adc
bound
mov
adc
sbb
rolb
push
test
stos
add
gs
test
repnz
enter
jns
pop
push
sub
mov
sarl
sub
xor
hlt
icebp
sbb
stos
mov
ret
inc
adc
ret
mov
rcll
pushf
jg
test
hlt
ret
mov
in
adc
pop
add
test
fcmovne
mov
mov
xchg
cmpsb
push
lcall
pop
push
cwtl
fwait
icebp
stc
and
popf
in
test
in
pop
das
hlt
push
mov
enter
movsl
jae
ds
sub
or
in
push
imul
or
and
mov
xchg
pop
lea
lock
pop
and
sub
push
push
cltd
or
daa
push
push
push
out
and
or
inc
rorb
xchg
iret
ljmp
pusha
hlt
push
adc
lahf
hlt
enter
sbb
mov
sub
sub
push
inc
cmp
mov
enter
and
and
cmpsb
sub
popa
mov
imul
push
jnp
adc
std
daa
orb
pop
std
inc
or
outsb
popf
lret
cmp
outsb
jb
add
mov
scas
push
adc
in
in
testb
cmp
or
inc
test
imul
xor
lods
pop
aaa
cltd
mov
mov
movsl
jno
mov
pop
or
pop
rcl
decl
je
mov
iret
xchg
les
es
ds
addr16
and
mov
sub
dec
add
pop
mov
mov
imul
insb
push
idivl
flds
inc
mov
insl
pop
clc
movsb
gs
clc
and
in
loopne
in
clc
sti
xor
rclb
lret
test
lret
push
mov
cmc
inc
int3
inc
jbe
ds
jle
mov
cmp
jmp
dec
enter
int3
add
test
fsts
adc
push
andb
push
fstl
scas
push
lock
sbb
movsb
inc
mov
test
jmp
cmp
ret
pop
add
std
outsb
sub
imul
test
insb
dec
faddp
lea
add
pop
dec
aam
or
adc
ret
or
add
leave
cltd
and
pop
sub
mov
je
push
test
mov
mov
lds
jge
je
pusha
das
test
mov
scas
pop
jno
xchg
pop
repnz
sbb
pushf
and
cmpsb
jno
adc
lock
add
in
cltd
add
pop
iret
mov
add
lods
mov
cmp
fs
mov
pop
dec
in
and
jp
inc
test
call
icebp
jns
push
mov
test
repz
int3
adc
ja
mov
jno
outsl
xchg
adc
jp
popa
mov
clc
aas
inc
inc
xchg
mov
enter
lods
sub
sarl
sub
faddl
enter
stos
push
outsb
push
movsl
and
jbe
into
xor
fidivl
iret
dec
and
stc
enter
cmp
aad
adc
sub
add
popa
mov
cmpsb
iret
aas
jle
and
insb
and
mov
add
clc
lcall
mov
jo
ljmp
inc
cmp
mov
fs
dec
shrl
mov
int
dec
fst
jp
xchg
inc
outsb
aad
fs
lret
adc
lret
jecxz
std
push
mov
and
xor
pop
mov
dec
pop
mov
xor
mov
clc
or
mov
jg
in
sbb
add
andl
xchg
dec
mov
stos
adc
push
adc
lea
cmpsb
inc
ljmp
rcrl
std
sub
clc
loopne
push
cmpsl
xchg
fdivrl
sti
jbe
fistpll
fsubrl
add
pmulhw
dec
mov
mov
out
or
testl
mov
push
sbb
lret
pop
ljmp
fsubrp
mov
je
or
mov
jle
sbb
sub
pusha
cmpsb
and
add
lret
pop
insb
mov
lahf
add
nop
rcll
cmp
dec
push
dec
jo
pop
mov
sti
cmp
test
inc
adcl
popl
insl
icebp
test
xor
dec
mov
ja
ljmp
or
lods
pop
pop
jae
add
sbb
sti
cli
push
cmpsb
push
andb
stos
mov
pop
inc
movsb
cmp
push
ja
adc
and
cmp
adc
aaa
fxch
popf
adc
xlat
lds
fiaddl
ret
xor
sbb
cs
mov
xchg
outsl
test
jns
jo
mov
shl
jnp
fwait
inc
pop
mov
adc
enter
aam
mov
xchg
xchg
jle
popf
cmp
dec
adc
aaa
mov
jle
cli
mov
sbb
jns
inc
inc
movsb
xchg
xchg
and
adcl
clc
inc
mov
movsl
add
xchg
xlat
and
mov
xchg
sub
in
popa
jne
jo
jns
add
xchg
sbb
js
in
lahf
sub
xlat
call
sub
repnz
dec
imul
repz
dec
jae
shrb
add
rcll
lret
jns
sbb
jmp
and
cld
jae
push
sub
sub
fisttpll
arpl
fdivrl
push
dec
adc
or
or
rorb
push
aas
imul
lods
inc
xor
push
mov
push
fisubrl
ret
cwtl
fs
je
push
call
lds
repnz
repz
inc
sub
in
popa
sbb
xchg
leave
pop
add
or
icebp
outsl
or
ret
arpl
xor
aad
pop
int3
jg
loopne
fidivs
loop
and
shl
pop
jecxz
or
mov
aas
and
inc
or
je
ss
push
ret
movsl
pop
in
dec
ss
dec
aaa
dec
lret
sub
push
push
outsb
mov
int
insb
fcomip
sbb
cmpsb
inc
fistl
lds
adc
aaa
pop
mov
or
push
movl
data16
lret
adc
push
mov
cli
mov
das
fsts
adc
jne,pt
or
insb
add
inc
mov
insl
and
das
or
xchg
sbb
or
mov
movsl
roll
mov
bound
lret
adc
insl
faddl
mov
cmp
sbb
add
jne
inc
gs
jl
in
dec
std
jo
mov
cmp
pop
add
pop
or
mov
and
popf
enter
mov
shll
push
or
jo
mov
fstps
lcall
cmp
sbb
dec
pop
xchg
mov
cmpsl
in
cmp
add
outsb
jp
ret
loopne
xchg
push
mov
int3
sbb
pop
or
add
imul
inc
in
arpl
les
mov
repnz
add
repnz
pop
data16
shrl
xor
das
adc
movsb
cwtl
lods
xor
and
enter
or
pop
and
push
cmp
jp
xor
and
cmp
pop
std
cld
idivb
repnz
ret
es
les
loope
pop
fs
ljmp
xchg
in
mov
js
mov
adc
cmc
cmp
in
scas
in
push
lock
cli
jl
push
or
push
loop
mov
mov
mov
sbb
fistps
mov
outsl
gs
push
clc
loope
jmp
lods
or
mov
das
sbb
sub
push
xor
xor
fcoml
mov
es
out
mov
adc
mov
add
jbe
cmp
nop
push
or
mov
out
sbb
mov
dec
popl
push
nop
add
ret
xlat
in
xchg
jg
or
push
pushl
clc
movsl
mov
mov
mov
shll
jle
inc
dec
insl
cmp
out
xor
cmpsl
xchg
sub
imul
mov
and
push
cld
mov
out
lretw
mov
jp
test
mov
cmp
fdivs
clc
push
add
pop
cmp
ret
js
aaa
dec
inc
dec
pop
mov
add
mov
or
mov
xchg
aas
cmp
or
jnp
lcall
jae
pop
lock
icebp
dec
jl
std
popf
mov
jl
rclb
lcall
xchg
xchg
sbb
xor
and
or
sbb
jl
imul
loop
insb
pushf
mov
je,pt
mov
ret
add
mov
add
and
leave
xor
cmp
mov
outsl
jmp
ja
ljmp
mov
or
sbb
mov
jbe
xchg
rolb
imul
repz
or
aaa
mov
aas
jae
sub
sti
fwait
add
push
dec
test
mov
sti
push
ds
test
xchg
das
lret
adc
xchg
movsb
lock
pusha
lods
jp
push
mov
mov
clc
pop
aam
lahf
xchg
cmp
cmp
jg
push
dec
sbb
jl
xor
jns
cmp
add
jecxz
lock
xor
cmp
test
ficoml
and
adc
pop
push
sbb
pop
in
sbb
jo
test
mov
mov
sbb
loop
push
push
inc
cmpsl
rolb
xchg
ficoms
mov
xorl
hlt
xchg
add
xchg
lods
test
in
cli
stos
add
sti
push
add
or
ret
push
xlat
ficomps
out
outsb
pop
loope
jb
sub
fistpll
loopne
push
movb
test
inc
pushl
rclb
dec
jecxz
scas
mov
sbb
pushf
cld
in
cmp
pop
int3
in
pop
pop
xchg
imul
fdivrl
loopne
pop
lret
cmp
aad
enter
movsb
mov
or
mov
bound
loope
sbbl
or
clc
push
jle
data16
pop
js
cmp
insl
push
cwtl
mov
jmp
shlb
ds
jmp
add
pop
or
arpl
mov
in
dec
inc
adcb
xchg
ljmp
adc
inc
push
push
and
mov
jl
movsl
out
xor
decb
jbe
sbb
jne
arpl
sub
mov
aas
jbe
xchg
xor
in
les
call
jge
mov
fnstsw
mov
jp
mov
jg
movsb
and
sub
cwtl
js
out
gs
and
cld
push
mov
sbb
test
xor
cltd
mov
aas
jl
mov
std
mov
movsb
sbb
mov
push
mov
lcall
mov
sub
test
dec
dec
xor
mov
push
dec
push
adc
sahf
mov
fimull
cli
dec
cld
pop
mov
xchg
sub
out
and
das
sub
add
fcom
lret
xor
xor
jbe
leave
pop
movsl
jns
sub
mov
out
leave
or
mov
sahf
mov
xor
inc
jb
shl
or
dec
adcl
pop
shrl
jbe
push
sub
repnz
ljmp
fdivr
popa
fmuls
scas
loop
fisubl
push
mov
stos
push
xlat
sub
stos
lret
ret
pop
outsb
cmp
adc
je
in
mov
jbe
and
sahf
aad
and
mov
and
push
mov
push
sbb
sbb
or
cli
shll
lret
das
xor
jecxz
mov
pop
pop
sarl
xor
jecxz
aam
add
and
jno
fsubrs
lret
or
jge
cmpsb
and
lds
jns
cmp
mov
xchg
sbb
mov
mov
call
sbb
inc
and
sub
stos
and
xor
lahf
or
sahf
ret
addr16
sti
insl
xchg
sbb
les
cmp
mov
dec
pop
jg
mov
add
shlb
mov
xchg
xchg
dec
jmp
shrb
stc
cmp
mov
mov
dec
les
std
in
xchg
pop
xor
out
jmp
cmp
xchg
loopne
iret
cmp
testb
pop
pop
ss
xlat
call
clc
jne
push
gs
and
pop
movsl
sub
or
sub
stc
add
arpl
ljmp
sbb
and
or
repz
adc
pop
adcb
sbb
push
cmp
cmp
subb
aaa
push
mov
cli
mov
fmull
xor
inc
nop
mov
mov
mov
mov
push
dec
sub
or
xchg
xchg
ss
mov
or
sarl
pushl
dec
adc
push
iret
fcmovnu
mov
imul
mov
movsb
push
mov
jl
dec
in
or
dec
xor
addr16
ds
sbb
cmpsb
pop
stc
movsl
push
add
xchg
inc
loopne
pop
push
outsl
cli
jns
push
dec
sahf
repnz
dec
das
paddsb
arpl
mov
ss
test
stos
or
jmp
sahf
pop
jno
jle
pop
xor
stc
jbe
mov
push
aam
rcr
std
shll
cmp
pop
sub
pop
inc
mov
es
lock
addr16
js
and
lea
das
and
mov
mov
push
fs
jnp
dec
inc
cwtl
mov
inc
fildll
push
push
testb
pop
mov
jbe
mov
shlb
sub
add
icebp
ret
jge
mov
mov
push
insl
lock
and
xchg
mov
push
xlat
or
push
into
mov
mov
and
inc
sbb
and
cs
ds
inc
push
jmp
sbbl
ds
ret
jne
sub
sbb
ds
dec
insb
cmpsl
iret
dec
daa
add
fsubs
push
stos
loopne
or
mov
mov
pop
rorl
jl
movsb
and
aad
add
cmp
cmpsb
cmp
mov
mov
orb
cmpsb
inc
sub
popf
cmp
mov
repnz
andb
rclb
push
loope
and
fsubrl
dec
test
jg
jmp
cmp
mov
and
ret
test
daa
push
push
sbb
lret
sub
mov
mov
jg
mov
enter
sub
push
or
sub
inc
movsl
addr16
push
mov
pop
outsb
and
int3
sub
fists
rcrb
shll
aad
enter
jb
pushl
test
push
jle
push
jecxz
jne
shlb
xchg
jge
xor
mov
leave
or
cmp
sti
das
lret
out
sahf
dec
in
sbb
movsb
rcl
cli
pop
cltd
nop
nop
xor
xor
int
adc
insb
push
and
addl
cmp
push
out
jp
jne
lret
pop
pop
int
out
insb
xchg
adc
dec
cmpsb
popf
outsb
mov
push
cli
jg
sahf
dec
inc
or
push
sbb
daa
in
out
push
stos
inc
jg
xor
dec
and
test
divl
xor
or
pop
test
shrl
fs
call
mov
popa
xor
movsb
sbbl
cmc
je
outsl
loop
addr16
mov
in
push
in
hlt
imul
inc
inc
mov
pop
mov
pop
movsb
xlat
jg
cli
push
mov
or
ja
mov
sub
cwtl
push
popf
fs
xor
lret
cltd
outsb
and
daa
test
rcrl
mov
leave
sbb
aam
dec
xor
test
jmp
inc
sbb
add
dec
arpl
jecxz
jp
shll
insl
sbb
negl
or
mov
pop
leave
add
dec
sub
push
mov
pop
pop
cmp
div
test
inc
xchg
cltd
out
dec
mov
aas
mov
scas
insb
mov
jg
pushf
in
sub
mov
cmp
xor
in
ficoml
mov
aam
and
sbb
movsl
stc
sbb
mov
or
subl
pusha
cli
shll
in
jns
push
mov
mov
cmpsb
fnstcw
xchg
rcl
out
es
cld
jb
jg
es
mov
jno
enter
mov
push
jne
or
pop
inc
mov
sub
mov
je
push
adc
out
out
repz
adc
inc
mov
fstpt
aas
push
or
lret
xchg
nop
out
fists
lret
movsl
rcll
enter
and
test
out
into
push
loopne
xchg
push
out
lahf
push
xlat
mov
cli
xchg
jnp
pop
mov
fwait
xor
lds
and
fsubrl
cwtl
push
scas
outsb
shr
call
movsl
xor
xchg
push
push
mov
inc
cmp
cmp
gs
cmp
stos
add
jge
sbb
sar
inc
pushw
icebp
mov
sbb
lahf
imul
arpl
xlat
xchg
cmp
xchg
sub
inc
adc
or
lods
pop
adc
mov
sbb
rolb
in
pop
nop
push
pop
sbb
clc
mov
jno
jp
and
and
inc
pop
stc
xchg
sbb
push
fldt
mov
sbb
jne
xchg
stos
jno
xlat
pop
push
mov
in
and
cs
mov
mov
push
jnp
xchg
cmc
loope
into
out
adc
imul
cmp
sub
mov
xor
cld
xchg
or
aam
cli
stc
pop
leave
icebp
repz
xchg
sbb
shrb
cmp
insb
push
or
in
inc
das
xor
rcrb
sub
pop
lret
or
add
xor
pop
inc
lods
rol
push
scas
cwtl
pop
ds
adc
jnp
ds
and
add
scas
push
lock
test
xchg
imul
and
mov
inc
jp
jns
dec
fisubl
test
in
pushf
sub
in
adc
mov
and
loopne
jecxz
xchg
and
and
mov
cmp
aas
inc
jns
pop
xlat
push
or
and
adc
dec
jge
xor
aas
addr16
inc
push
imul
jno
mov
iret
xchg
push
jle
aas
jno
ds
lret
pop
sbbb
pop
data16
fldcw
in
or
sarl
xor
daa
fimuls
pop
movsb
jl
mov
pusha
sub
and
sbb
pusha
inc
xor
xor
sbb
lret
inc
call
fistpll
jo
mov
stos
outsl
je
jle
lcall
push
mov
cs
pop
gs
in
jmp
add
mov
pop
add
pop
out
xchg
ds
mov
xchg
pop
push
jb
push
xchg
and
out
leave
push
pop
push
outsl
stc
cmp
out
hlt
jg
sbb
sarb
fnsave
frstor
xchg
dec
std
inc
jo
fidivl
or
xchg
or
fildll
insl
test
out
push
xor
lea
or
leave
mov
out
aas
adc
adcl
loope
addb
lea
and
mov
jb
mov
inc
jl
mov
xchg
mov
insl
mov
mov
sbb
add
lds
scas
and
setp
das
adc
mov
pop
mov
lcall
ftst
or
push
jp
inc
lret
imul
test
mov
dec
leave
cmp
js
iret
and
mov
inc
jecxz
pusha
mov
mov
bound
inc
mov
xchg
mov
adc
push
shl
js
in
xor
and
mov
push
mov
jp
test
jl
aad
sbb
loope
sub
hlt
testl
pusha
xchg
mov
push
adc
and
add
and
cld
bound
fwait
jo
iret
push
mull
or
adc
fwait
jns
xchg
addr16
aaa
sub
xchg
roll
jb
out
push
cmp
aad
xchg
push
cli
imul
ljmp
mov
push
ja
cmc
fdivs
sub
mov
mov
das
add
outsb
outsl
cmp
das
sub
cmpsb
xor
andb
clc
or
insl
mov
les
in
cli
mov
leave
pop
or
fdiv
out
ret
test
dec
inc
or
jns
push
mov
sbb
hlt
sti
fnsave
ljmp
mov
dec
or
in
xchg
add
fistps
mov
popa
jns
push
push
dec
daa
fwait
mov
add
decl
or
sbb
std
jg
xorl
mov
lds
andb
shll
sub
add
imul
or
pop
lds
or
lea
xchg
mov
xchg
adc
jmp
mov
pop
inc
or
jmp
push
loop
sti
cmc
sbb
adc
outsl
dec
push
or
fs
mov
aam
das
cld
imul
jne
and
mov
sub
rol
fsubrp
adc
inc
xor
faddl
mov
pop
repnz
je
out
jb
lahf
cmpsb
fcoms
movsl
mov
es
pop
pop
cmp
sarl
lret
xor
jg
xor
fistps
xlat
push
or
ficomps
mov
sahf
xchg
loop
jecxz
inc
dec
outsl
or
push
add
mov
mov
pop
add
inc
mov
mov
popf
mov
ja
sbb
adc
mov
rcr
mov
mov
inc
mov
ss
stos
adc
test
ss
jp
adc
sub
and
mov
xlat
mov
jg
test
pop
push
cli
xchg
or
leave
cmp
cld
xchg
int3
jmp
mov
jle
mov
popf
rcll
mov
aaa
lock
mov
or
xor
pop
test
xchg
inc
dec
fsubl
cltd
mov
movsl
pop
jmp
aaa
out
int3
outsb
rcrl
mov
jae
iret
cmp
lock
jbe
ljmp
mov
xchg
jg
push
out
push
mov
das
lock
sti
sti
nop
xlat
fcmovnbe
inc
sbb
clc
jle
ds
push
fbld
cmp
lods
add
xlat
push
out
jno
xchg
xchg
shll
inc
fistl
adc
adc
add
mov
int3
pop
mov
shll
add
sub
cwtl
cmpsb
mov
push
fs
fmul
or
stos
pop
pop
sub
jl
lods
mov
shlb
ret
lock
cmp
push
dec
cwtl
int3
xchg
add
mov
jb
push
or
ja
push
inc
push
and
pop
in
add
movsl
cld
adc
test
adc
xchg
dec
push
in
mov
add
cli
xchg
mov
hlt
stos
push
mov
xor
push
into
add
jbe
xchg
sbb
add
sub
movsb
sub
insl
icebp
inc
jg
sub
jo,pn
aaa
push
mov
jp
aas
das
in
fsubl
pop
in
ss
leave
push
insb
push
mov
fisttpll
cmp
cli
jb
xchg
aad
inc
push
push
add
into
lods
in
pop
addr16
dec
jnp
and
addr16
loopne
adcl
dec
fstpt
aad
push
cmp
jp
inc
cmp
push
decl
mov
or
adcl
stos
sub
stos
fstl
cli
sbb
imul
inc
adc
inc
adc
jle
push
out
sub
ss
xchg
mov
lret
sbb
sahf
clc
cwtl
ret
cmp
hlt
call
mov
pop
pop
loopne
adc
push
sub
subl
call
pop
das
sahf
loop
testl
push
data16
leave
mov
cmpb
popa
mov
lret
cld
xlat
test
cld
sub
inc
ds
push
add
xchg
adc
daa
and
inc
pop
stos
repz
cmp
iret
bound
das
repnz
xor
fsubrp
cmp
xor
mov
mov
call
mov
sbb
into
jge
ljmp
popa
or
and
lcall
bnd
daa
lret
clc
xchg
mov
mov
pop
bound
push
and
repz
cmpsl
push
mov
xchg
sub
arpl
push
sbb
std
clc
popf
stos
pop
mov
jmp
lahf
jge
cwtl
xchg
and
xor
outsb
push
xlat
xchg
xor
fcmovbe
aas
xchg
pop
jae
insb
dec
in
cltd
mov
cmp
jae
cld
int3
cmp
sarb
je
mov
sub
xchg
imul
jmp
decl
in
mov
pop
ja
insl
mov
xor
push
inc
inc
jno
mov
mov
mov
cmp
xor
or
push
mov
pusha
mov
pop
pop
and
stos
and
out
inc
insl
shr
into
inc
mov
xor
mov
lock
subb
es
ds
scas
push
cld
test
rolb
mov
inc
pop
lods
jb
adc
push
xchg
loop
pop
jg
xlat
mov
dec
call
in
inc
mov
adc
cmpsb
cmpsl
mov
jne
xor
in
loop
dec
cmpsb
adc
mov
pop
shll
pop
xor
out
mov
fisubrl
sub
xor
mov
ret
jl
adc
dec
stc
mov
jno
test
inc
outsb
and
and
adc
inc
into
xchg
leave
jbe
xorb
inc
icebp
out
sbb
adc
sub
cltd
or
cmp
add
shlb
xchg
std
std
adc
and
add
int
xlat
dec
inc
rcl
jl
xchg
xchg
mov
in
fldenv
pop
xchg
adc
adc
dec
outsb
loop
inc
aad
mov
dec
dec
je
or
jmp
int
lods
mov
rolb
pop
out
lds
aad
in
add
shl
lret
pop
cld
push
cmc
dec
sbb
mov
mov
sub
sbb
sbbl
lods
push
mov
movb
orl
xchg
std
pop
div
ret
sbb
add
stos
outsl
mov
imul
sbbb
mov
mov
fisubl
jo
mov
pop
cmpsl
pop
xchg
lahf
popf
xchg
xchg
scas
cld
inc
out
xchg
dec
push
insb
jmp
aas
aad
pop
mov
xchg
outsb
cmp
sbb
imul
inc
shll
sbb
sub
sub
mov
or
cmc
jo
insl
int
pop
jne
std
inc
mov
cwtl
pop
loopne
iret
cmpsb
lcall
in
xor
popf
mov
dec
mov
push
push
and
pop
jnp
xchg
pop
outsl
fidivl
or
sub
or
mov
in
outsl
addr16
sbb
rcrb
mov
sub
mov
sti
jbe
es
imul
out
punpckldq
imul
or
cmp
add
push
add
in
pop
movsb
adc
pop
mov
loop
mov
cs
lret
jp
push
imul
daa
or
dec
out
movsl
ds
xchg
in
xchg
nop
out
les
mov
fwait
push
cltd
repz
stos
div
mov
mov
les
xchg
push
jmp
cmpsl
mov
fimuls
cmpsl
lock
mov
ja
scas
mov
bound
lret
sbb
gs
lods
js
sahf
push
mov
repnz
int
repz
je
sub
add
lods
scas
movsb
test
adc
xor
jmp
mov
ss
in
xchg
cmp
cmp
sbbl
add
pop
adc
hlt
test
pop
mov
and
xchg
ret
jne
push
mov
pop
rcrb
pop
lods
jne
outsb
add
insb
adc
jp
aaa
xchg
push
xchg
and
icebp
addr16
or
or
sahf
outsl
xchg
or
jmp
jmp
xchg
jo
loop
dec
gs
ret
lret
ljmp
imul
mov
ljmp
movd
or
pop
stc
mov
push
data16
lods
jl
push
mov
ds
imul
dec
repz
and
subl
mov
scas
in
bound
jbe
and
dec
lcall
jnp
iret
jae
mov
adc
inc
dec
test
mov
mov
fsub
pop
dec
adc
imul
fistl
mov
sub
mov
cmpsb
adc
lret
outsb
mov
jns
leave
js
out
sbb
scas
popf
dec
sbb
sub
add
pop
adc
inc
push
out
or
push
dec
lret
cmp
call
mov
int
ret
das
imul
test
jecxz
cmp
test
iret
inc
lahf
mov
adc
inc
scas
dec
jecxz
push
pop
mov
push
fisttpl
lods
sub
js
lods
daa
pop
aaa
and
sbb
outsb
xchg
test
push
inc
mov
lret
fdivrp
sub
ja
push
mov
mov
mov
xchg
aaa
mov
push
dec
xor
and
push
subl
fisttpll
sbb
jecxz
jecxz
xchg
cltd
scas
inc
popl
sbb
xor
jp
mov
mov
dec
sub
xor
test
mov
in
and
xor
xchg
cmp
data16
mov
cs
and
fcmovu
popa
test
stos
movsb
adc
cli
xor
test
test
out
push
lcall
roll
and
fdivrl
inc
stos
sub
xor
leave
xor
push
xor
and
fwait
fwait
gs
push
movsl
dec
cmc
push
fwait
imul
rorl
lcall
xlat
mov
mov
adc
out
cmp
add
inc
dec
shl
cmpsb
mov
cli
aaa
or
lock
pop
xlat
mov
dec
inc
push
lods
pop
sub
dec
jae
rcrb
mov
and
jno
cmp
add
add
fadds
xchg
sbb
xor
fs
pusha
jnp
stos
add
cmpb
adc
ds
out
xchg
adc
jno
imul
js
loopne
rcrl
adc
pop
aas
dec
test
cmp
into
cmp
sbb
push
add
pop
and
mov
add
xchg
xchg
clc
push
dec
in
ret
jbe
iret
mov
push
jge
sbb
push
xor
and
mov
rol
mov
jbe
mov
dec
and
push
or
inc
dec
idivb
add
jb
and
sbb
stos
jb
dec
aas
pop
mov
jae
xor
fcom
fcoms
xor
xor
loopne
popa
repz
xchg
push
gs
pushf
shll
pop
sub
addb
cmp
or
jno
sub
pop
push
fcmovbe
sti
ja
mov
adc
xor
mov
dec
mov
fstps
stos
stc
xlat
cwtl
push
es
insb
pop
rol
fldcw
into
xchg
call
mov
pop
fistl
sbb
lods
enter
mov
adc
es
add
mov
cmp
add
lock
xor
loopne
ljmp
inc
test
xchg
and
push
in
in
jb
jnp
dec
int
ret
sub
push
popl
cli
sbb
dec
xor
mov
insb
int3
push
cld
cmpsb
dec
aaa
cwtl
repz
dec
cli
adc
jp
aad
dec
ljmp
adc
lock
push
mov
and
push
aaa
mov
lock
fcoml
xor
dec
test
cwtl
adcb
adc
or
jmp
cwtl
sub
cmpsb
in
idivl
xor
xlat
lret
inc
cwtl
push
pusha
push
cltd
idiv
jmp
push
sbb
inc
mov
adc
and
lods
xor
aas
mov
mov
push
sub
data16
insl
mov
xor
push
jp
cs
pop
fmuls
adc
adc
ror
adc
xchg
gs
jbe
jmp
sub
sbb
add
lret
outsb
sub
fwait
arpl
ret
sub
mov
adc
xchg
js
out
insl
shrl
out
jae
es
cmpsb
lahf
push
inc
mov
aas
push
mov
xor
mov
in
adc
sbb
inc
fnsave
clc
cmpsl
call
ds
pop
inc
in
arpl
shlb
xchg
clc
adc
ss
ret
adc
jbe
les
xchg
scas
stos
clc
sub
xor
jbe
cmpsl
aad
ret
scas
jp
push
lahf
dec
pusha
mov
outsl
nop
clc
adc
adc
push
sbb
xchg
lret
int3
adc
leave
dec
inc
leave
jb
xchg
enter
bound
dec
lods
je
stos
cs
les
add
xor
dec
divl
sbb
movl
xor
and
inc
mov
jle
cmp
jb
and
lea
dec
dec
mov
and
push
adc
xchg
push
out
stos
int
popf
xchg
scas
es
adc
or
ds
add
loopne
rorb
or
movsb
and
addr16
int
adcl
push
adc
and
inc
jb
sbb
jae
mov
outsb
pop
movsb
xchg
add
mov
adc
xor
popf
scas
scas
popl
jns
js
iret
divl
shr
inc
pop
mov
sti
in
inc
xor
jae
daa
insl
scas
mov
rorb
out
cmp
xor
imul
sub
lahf
mov
negl
mov
inc
add
fidivrs
push
aad
pop
cmpsb
sbb
mov
insb
cmp
outsb
mov
in
rcrb
xlat
in
jmp
imul
adcb
shl
xlat
cmp
sbb
push
loop
fsubrl
push
aam
mov
or
cltd
int3
sub
cmp
mov
insb
jl
pop
movl
lret
cmp
sub
cld
and
popa
mov
decb
mov
lcall
das
sbb
in
cmp
fcompl
lods
or
mov
stos
into
or
xchg
outsl
leave
test
ret
pusha
push
xor
test
loop
cmp
call
sub
in
orb
sti
mov
cmp
or
pop
add
mov
mov
adc
negb
add
mov
or
and
loopne
data16
rcll
daa
sahf
movsl
hlt
or
xor
les
decb
mov
inc
aas
lock
dec
push
xor
sbb
xchg
add
jecxz
xor
xchg
rcll
into
cmpsl
stos
js
xlat
mov
lods
pop
popl
xor
mov
cmpsb
cmp
jae
mov
pop
ss
in
mov
mov
es
mov
popf
test
mov
jl
dec
fs
inc
in
pop
arpl
ret
fistpll
ds
jg
jb
out
leave
add
bound
cmp
fiadds
xor
xchg
aas
aam
add
xchg
mov
bound
add
xchg
sub
push
pusha
movsb
je
loope
cmp
arpl
mov
aad
xchg
jae
ljmp
add
inc
inc
ljmp
mov
add
xor
and
xchg
sbb
xchg
leave
sti
jge
in
xchg
mov
nop
fwait
jmp
rcl
cmp
or
lock
push
out
adc
repnz
es
lret
sahf
insl
mov
pop
mov
aaa
enter
sub
xor
fidivrl
fsubl
lret
mov
add
xchg
test
lcall
packsswb
dec
mov
addr16
xchg
cmp
mov
mov
iret
sub
cmp
cltd
xchg
fiaddl
dec
aaa
lods
and
sti
jl
test
lret
jp
jns
and
lcall
mov
and
sbb
loop
cwtl
dec
xor
fstpt
fdivs
gs
divl
loopne
xchg
sbb
nop
bound
jb
in
sub
inc
jbe
mov
push
rol
push
jns
mov
mov
xchg
jle
cltd
inc
pop
stos
sbbl
adc
cmp
mov
imul
sub
inc
icebp
mov
stc
mov
push
jnp
loopne
insb
or
sarb
outsl
mov
xor
test
adc
cmpsl
pop
fnstenv
aam
jnp
int
fdivs
imul
dec
rolb
xrelease
ret
lret
mov
shll
xchg
push
mov
push
dec
mov
push
mov
pop
dec
mov
aaa
aaa
jecxz
ds
les
repnz
or
cmp
push
loop
mov
xor
std
imul
movb
mov
xlat
and
imul
iret
es
and
adcl
and
pop
pop
push
mov
or
rclb
out
daa
add
cmp
popf
adc
lock
cwtl
and
bound
xchg
scas
mov
ss
dec
adc
and
jl
into
jne
pop
cmp
mov
push
mov
int
daa
subl
mov
push
lahf
mov
inc
int
xor
pop
sbb
lcall
outsl
jo
mov
dec
cmc
bound
add
test
mov
add
mov
enterw
lea
in
idivl
sbb
fisubl
or
cmp
dec
sub
mov
stc
leave
rorl
jno
mov
pop
xor
dec
sub
jecxz
lcall
sub
inc
xor
fdivrl
jmp
lret
movsb
and
imul
xchg
das
je
ds
fmul
xchg
pop
xchg
cmp
jo
je
pop
sub
jl
and
in
mov
add
push
mov
and
shlb
daa
xor
lret
je
add
mov
sbb
sbb
mov
les
push
push
fistpll
test
push
mov
sbb
push
rcl
test
xor
dec
loopne
jecxz
repz
ss
cwtl
enter
repnz
push
aam
in
mov
pop
gs
push
push
jbe
lret
in
xor
and
cwtl
sbb
mov
and
lret
stc
fdivrl
mov
inc
jmp
add
xchg
or
repz
ret
fsubs
jecxz
jae
xchg
inc
out
test
push
into
inc
pushf
mov
test
jb
add
and
mov
lahf
mov
mov
pushf
mov
stos
xor
mov
sbb
add
in
xchg
xchg
add
sbb
les
fcmovnbe
jnp
sub
jo
fincstp
popf
pop
xchg
test
shr
dec
mov
mov
ja
rorb
inc
fldt
decl
enter
xchg
test
jns
insl
out
arpl
out
pop
stc
fdivs
pop
andb
repnz
cli
or
loopne
jp
xor
stc
jle
cmc
jno
push
repz
popf
fiadds
cmp
ret
jmp
inc
add
mov
mov
sub
jbe
adc
enter
jmp
nop
sbb
inc
xchg
sub
imul
ljmp
lock
mov
xor
jmp
sbb
mov
dec
cmp
jns
sti
addr16
mov
mov
or
and
addr16
sbb
sub
push
test
daa
jg
add
rolb
dec
mov
sub
add
arpl
jp
addb
cmp
shr
aaa
xchg
cmp
jmp
mov
add
adc
cmp
ss
testl
test
negb
test
pop
rol
mov
repnz
imul
mov
imul
dec
xor
inc
add
mov
or
and
xlat
xchg
jle
das
js
cmp
push
into
jge
movsb
xchg
popf
cmp
jno
std
sub
jne
push
lahf
pmulhw
cli
sub
inc
fs
aaa
inc
lds
insb
fnsave
cmp
sbb
mov
add
mov
push
fcmovb
aaa
push
mov
sahf
das
pop
pop
jg,pn
loope
adc
pushf
jg
sbb
xchg
pop
or
outsb
adc
dec
push
aad
mov
xchg
mov
sbb
out
jge
je
or
dec
call
movsb
jae
sbb
mov
inc
dec
sub
cld
mov
lock
int3
insb
adc
test
ret
cmp
xchg
sub
pop
out
cmpsl
xorb
xchg
or
lods
ret
mov
fldcw
xchg
out
and
lods
incl
rcll
fldl
data16
ret
imul
mov
lahf
sub
mov
xor
test
push
lret
lea
in
daa
sbb
and
lret
add
add
dec
lods
mov
jno
pop
dec
fs
mov
mov
mov
inc
aas
dec
xor
and
mov
add
inc
shlb
jle
out
cmp
add
dec
outsb
shrb
test
fcomip
and
adc
and
xchg
mov
rcll
stos
ss
out
sbb
fwait
call
lret
sbb
sbb
jmp
nop
iret
cltd
sbb
lcall
dec
out
dec
inc
lret
push
pop
int3
fldz
frstor
sub
popa
mov
stos
test
mov
inc
ffreep
lods
jle
xlat
popf
xchg
jmp
out
rolb
inc
jno
ret
or
xor
pop
test
dec
or
xor
dec
fldenv
xchg
and
test
leave
push
push
push
xlat
adc
jge
clc
inc
jo
lods
mov
push
lcall
sbb
mov
xor
cwtl
gs
lret
arpl
fildl
cld
mov
inc
sub
sti
cmp
lock
dec
in
js
xor
insl
and
data16
ja
fs
das
shrb
dec
adc
out
imul
lea
jnp
sarl
cmp
js
inc
shll
mov
mov
pop
sub
ficompl
dec
adc
xor
dec
in
dec
leave
enter
xor
xchg
push
cmp
cmp
cmpsl
jne
fcomps
test
or
cmpsb
and
lret
pop
inc
movsl
xlat
stc
test
test
rolb
repz
js
arpl
cmp
xor
mov
xchg
mov
ror
fwait
cltd
leave
cli
lahf
sahf
xor
or
dec
subl
insl
in
imul
cmp
scas
xchg
ja
lret
les
sbb
sbb
pop
xor
and
dec
loop
test
xlat
and
sub
test
sti
xor
test
leave
ljmp
push
enter
pushl
or
mov
pop
loopne
outsb
jno
mov
fisubl
inc
sbbb
push
fsubrl
adc
in
fcomps
mov
fistps
add
imul
das
add
jae
ja
lcall
loop
mov
pop
pop
inc
sbb
or
test
fnstenv
stos
and
jmp
cmp
rcr
hlt
pop
fdivs
mov
adc
xchg
dec
sub
fisttps
es
add
mov
js
pop
dec
repnz
es
xchg
ja
sub
orl
xchg
fabs
incl
jge
adc
jae
jo
xchg
pop
std
xchg
lcall
xchg
jmp
sub
xor
dec
adc
or
mov
mov
bound
or
sbb
jo
cwtl
cvtdq2ps
in
push
jb
mov
shrl
sub
aad
out
push
or
adc
mov
lcall
daa
aad
inc
xor
sub
nop
int3
adc
cltd
test
or
pop
adc
mov
imul
call
xchg
adc
jno
aas
pop
movsl
inc
dec
sbb
xor
or
mov
or
and
aas
adc
or
mov
pop
add
sub
fucomi
sbb
adc
mov
push
mov
jne
fcmovnb
xlat
cmp
leave
movsl
jge
mov
int3
sbb
bound
dec
add
in
pop
sub
cld
jg
data16
adc
ss
and
jle
and
xor
pop
addr16
out
out
push
in
ja
rolb
andb
inc
push
xor
xchg
les
loope,pn
orb
xor
enter
add
pop
je
cltd
ds
add
addr16
mov
mov
movsl
faddp
leave
mov
adc
imul
xchg
fs
pop
and
sbb
push
testb
fildll
cmpsl
loopne
adcb
push
and
add
inc
push
mov
jne
outsl
and
scas
jns
add
or
xor
xor
mov
add
mov
jmp
push
pop
mov
repz
aad
push
jno
mov
outsl
add
test
nop
bound
loope
adc
xchg
sbb
lods
enter
mov
int3
jns
inc
pusha
mov
jge
data16
mov
jb
pop
daa
push
xor
and
cmc
dec
sbb
mov
jl
popa
sbb
test
leave
faddl
sahf
sub
pop
icebp
and
inc
into
push
mov
xor
pop
mov
sbbb
cmp
jmp
mov
or
jns
jnp
nop
dec
jge
mov
js
push
add
fisubrl
and
ja
push
push
out
pop
mov
mov
outsb
sbb
inc
xor
es
push
sbb
or
test
mov
mov
shr
aas
adc
dec
loopne
inc
xchg
xor
jmp
cwtl
iret
fs
icebp
scas
addr16
pslld
gs
fcmovbe
test
dec
inc
sbb
dec
mov
dec
aaa
dec
loope
push
insl
inc
inc
push
mov
and
cli
mov
push
add
iret
shlb
mov
lcall
rorb
jecxz
sbb
mov
mov
gs
aaa
jecxz
rol
test
inc
js
ljmp
dec
mov
or
fdivrl
xchg
adc
mov
outsb
mov
adc
jne
lahf
aad
arpl
popa
fdivs
fwait
xchg
mov
leave
cmp
jle,pt
xchg
or
or
out
adc
sub
aas
sbb
xchg
subl
and
adc
mov
mov
mov
xchg
jae
push
fisubrl
rclb
ss
push
adcl
es
loop
aam
lahf
and
lds
pop
sbb
call
clc
fwait
testb
lret
shrl
cmp
xlat
into
mov
mov
inc
xchg
jg
rorl
lock
xlat
fprem
out
enter
cwtl
sub
xorl
mov
sub
mov
test
push
adc
lret
loopne
aad
or
adc
push
sbb
fs
jg
cmpsb
aas
or
jmp
rcl
imull
or
jl
enter
clc
push
push
lret
shrb
pop
sbb
sbb
dec
test
cmp
xchg
and
jb
xor
or
jg
sub
and
jo
clc
dec
pop
in
adc
adc
loope
aaa
push
in
push
scas
cld
inc
in
ror
nop
push
add
loopne
dec
jl
js
mov
mov
and
arpl
sub
or
rcrb
jg
inc
cmp
sub
cmp
push
pusha
mov
xchg
push
push
out
xchg
lcall
mov
push
mov
mov
add
lret
arpl
cs
adc
insl
adc
sbb
push
dec
test
jb
sti
mov
mull
dec
cmp
cmpsl
mov
in
fwait
mov
popa
pop
mov
clc
cld
mov
in
imul
in
mov
push
jle
cld
push
xlat
jbe
xor
testl
test
mov
cwtl
sub
xchg
pusha
lret
in
iret
jg
ljmp
sub
mov
into
call
int
mov
das
lcall
and
scas
jecxz
cmp
adc
ret
out
and
sub
das
outsb
cli
xchg
cwtl
jns
ret
jbe
jbe
xor
loop
sbb
rorb
js
and
adc
xlat
mov
pop
leave
sub
jecxz
jae
mov
out
xchg
mov
xchg
in
icebp
add
lret
fucomip
in
or
pop
iret
sub
lcall
inc
cmp
jae
pop
fisubl
pop
mov
mov
mov
sub
arpl
mov
push
mov
scas
adc
cmp
lods
add
or
xor
mov
cmp
jnp
jo
je
lods
insl
in
push
in
sahf
jle
scas
inc
mov
pop
inc
scas
sbb
cmp
scas
or
divl
into
mov
add
push
movsl
lock
push
adc
mov
push
mov
cmp
enter
stos
xor
sbb
jnp
and
les
outsl
stos
lret
dec
ror
mov
push
mov
out
cs
jne
fcmovbe
out
nop
cmp
in
pop
data16
mov
shlb
pusha
lret
call
lods
out
std
andl
dec
adc
jns
je
cs
inc
fidivrs
dec
dec
cmp
push
mov
or
js
rcll
add
cmc
aam
inc
sbb
hlt
xchg
add
cmc
fs
add
aam
jl
xchg
cmp
dec
sbb
mov
dec
rcrl
imul
adc
mov
push
mov
mov
shrb
sub
test
add
jae
ret
dec
sbb
bound
jmp
sahf
push
push
or
pop
xchg
data16
in
cltd
adc
fwait
ljmp
inc
test
mov
xchg
mov
mov
push
add
fimull
daa
insl
and
fisubl
and
addb
mov
clc
in
dec
add
incb
mov
xchg
xchg
cmp
repz
dec
inc
xchg
lahf
flds
mov
aad
add
repz
inc
mov
xchg
call
xchg
mov
lret
or
add
push
mov
jnp
push
js
mov
pusha
xchg
pop
adc
ds
and
ret
mov
js
jecxz
xchg
and
mov
repz
inc
ds
inc
inc
cmpsl
out
cmp
imul
push
out
jno
push
inc
flds
cmp
sbb
fwait
xchg
adc
add
sbb
sti
ret
das
pushf
xchg
fisubs
inc
stc
sub
cmp
clc
jge
fwait
and
notl
or
call
xchg
cmpsl
imul
mov
pushf
or
jp
fsubrl
imul
aas
test
xchg
scas
mov
cltd
cmp
push
jecxz
notb
jle
out
xchg
shll
fcoms
stos
std
push
insl
lahf
mov
and
push
sbb
jbe
inc
inc
and
nop
icebp
push
or
movsb
clc
dec
mov
xchg
push
xor
push
enter
xchg
push
aad
jne
shrb
movsb
and
lods
pop
push
scas
mov
cltd
sub
loop
lret
and
and
out
std
loope
push
ret
and
lock
or
popa
scas
xor
and
mov
sbb
scas
into
std
rcl
aam
bnd
xchg
les
outsb
push
or
sbb
out
sti
pop
cmp
into
push
jge
cwtl
push
cmpsb
push
mov
rcll
xchg
fmull
aaa
jp
ficompl
stc
mov
nop
push
mov
jae
cmp
mov
pop
sub
jmp
fnstenv
sbb
lret
lods
fisubrs
js
ds
insb
xchg
xor
or
out
ljmp
or
jns
fsubrs
adc
mov
xchg
int
scas
ret
mov
mov
xor
cld
call
or
xchg
jne
jne
shr
ss
ja
xchg
into
rorl
fldenv
mov
imul
addb
fdivl
cmp
lds
inc
mov
dec
mov
test
sbb
fcoml
dec
adc
inc
and
es
xchg
insl
inc
cltd
mov
mov
adc
aas
andb
and
xchg
insb
es
mov
aad
outsb
jge
cmp
cltd
pusha
mov
or
jecxz
mov
cmpsb
jbe
xchg
sub
or
fs
mov
rcll
adc
push
sub
adc
pop
neg
push
add
jb
cmp
lea
mov
inc
mov
gs
lret
mov
in
mov
lahf
cmpsb
lcall
mov
jge
hlt
iret
dec
pop
pop
mov
scas
or
add
mov
int3
xchg
pushf
sbb
sbbl
or
fmull
mov
pop
aam
mov
or
jae
jmp
iret
das
daa
loope
ret
mov
cmp
test
or
sub
stos
inc
repnz
adc
pop
mov
sbb
xchg
fisttps
pop
xchg
xchg
xor
sub
out
rcr
stc
icebp
mov
xlat
ret
adc
bound
sbb
movsb
mov
pop
xchg
mov
inc
out
and
xchg
loope
aas
and
inc
pop
mov
adc
subl
adc
push
xor
dec
inc
popa
adc
sbb
push
scas
adc
dec
xor
mov
adc
cmp
inc
or
daa
push
xor
lock
in
jge
popf
into
xor
xor
sub
add
mov
cmpsl
inc
bound
insb
fs
jae
sarb
lahf
add
jmp
xchg
add
mov
xor
xchg
xor
pop
inc
push
cmp
mov
add
mov
mov
xchg
test
in
mov
testl
mov
xchg
ljmp
dec
cmpsb
frstor
popa
jne
pop
inc
loopne
push
sti
sbb
std
jno
push
out
or
xor
xchg
insb
mov
int3
call
add
out
rclb
in
adc
ret
sbb
call
sub
imul
cmp
js
and
leave
je
push
adc
fwait
pop
cmp
insl
xor
stos
enter
stc
sbb
adc
incl
sbb
pop
pop
arpl
pop
sub
rcr
pusha
jge
and
or
jns
out
lods
push
xor
pop
in
call
pop
jecxz
aaa
mov
adc
ss
xor
shlb
adc
pop
cwtl
rclb
cmp
sbb
in
or
out
or
fs
push
mov
cmp
push
int
fnstenv
stos
mov
xor
dec
push
cmpl
push
add
fs
ret
lahf
mov
lea
scas
push
es
mov
outsl
sbb
pusha
xor
mov
std
inc
xor
pop
or
pop
addr16
xchg
push
loopne,pt
inc
div
enter
fcmove
push
shrl
jmp
leave
inc
jb
inc
cmp
std
adc
xchg
push
sub
pop
pop
jl
lfs
repz
lret
mov
pop
jmp
js
mov
outsl
sub
jb
jb
test
pop
aad
outsl
jne
dec
xor
enter
mov
inc
ljmp
mov
xchg
repnz
jle
sub
jmp
xchg
int3
cs
test
loop
add
xor
push
repnz
xorl
js
adcb
mov
leave
xor
loop
cmc
cwtl
add
sbb
xchg
jae
xchg
lods
stos
mov
jmp
js
mov
dec
sarb
pop
inc
arpl
mov
dec
fnstenv
and
sbb
sub
test
and
int
js
insl
inc
and
fsubl
cwtl
jmp
insb
clc
cmp
inc
jmp
adc
ja
jmp
test
adc
mov
mov
outsl
in
shlb
outsb
shlb
cmp
sub
cltd
pusha
lds
or
lea
pop
rcrl
insl
aad
push
sbb
loope
jb
add
int
xor
dec
mov
jp
aas
mov
aas
pop
pop
shr
int3
pusha
sub
pusha
add
mov
mov
push
arpl
xor
insl
xchg
add
scas
inc
mov
ljmp
rolb
imul
and
cmp
mov
push
lods
sub
out
push
ret
dec
pushf
sbb
loopne
xchg
inc
push
push
and
xchg
rcrb
testl
int
mov
cmp
insl
jae
in
es
lret
lahf
push
nop
int
jge
imul
pop
or
mov
nop
xchg
push
sahf
push
mov
jge
cmc
dec
and
adc
loopne
xchg
ficompl
push
cmovl
jmp
out
insl
scas
or
lods
notl
je
dec
jge
jmp
xchg
sti
rcr
sub
lret
fnstsw
xchg
push
dec
mov
xchg
inc
add
pop
pop
mov
sbb
loop
sub
jne
mov
fldcw
add
sub
add
sub
mov
mov
inc
mov
dec
test
sarl
jle
jo
aas
adc
inc
rorl
push
sahf
adc
call
xor
or
xchg
shlb
icebp
test
sbb
jge
iret
mov
psubb
in
std
push
push
stos
fwait
xor
mov
mov
int
cwtl
repnz
lahf
jg
fiaddl
lods
out
xchg
adc
xor
loope
iret
cmc
xlat
inc
test
cmpsb
in
jns
xchg
scas
sub
cmpsb
mov
adc
jp
ret
inc
sub
fs
dec
daa
and
xchg
das
dec
adc
scas
mov
out
pop
aad
out
mov
inc
or
or
add
lds
comiss
and
dec
pop
xchg
mov
nop
push
pop
mov
cmp
cmp
xor
pop
xchg
push
stos
xchg
je
lds
jecxz
enter
cmpsl
fsubr
push
scas
test
mov
std
adc
data16
lods
subb
jno
test
and
push
jbe
loope
xchg
aaa
mov
insb
xchg
int
lock
adc
lcall
inc
cwtl
and
jae
xlat
mov
popf
xorl
push
sbb
jne
push
cli
loope
xchg
mov
jge
inc
cmc
sub
push
scas
bnd
sbb
push
fldl
mov
xchg
jp
and
and
lods
in
and
and
popa
mov
push
shrl
fisubrs
mov
jbe
pop
loop
outsl
rolw
sub
jle
shlb
xor
ficoms
mov
sbbb
xchg
jp
add
mov
mov
dec
add
pop
cmp
aaa
jns
ret
dec
cltd
xor
imul
mov
cs
ljmp
xor
xchg
jnp
xchg
rcrl
call
pop
push
xor
insl
stos
and
sbb
push
test
lds
push
test
dec
mov
cli
or
adc
int
mov
lret
repnz
scas
inc
insb
cmc
fstl
jne
jb
cmpsb
jle
cmp
dec
and
add
popf
ss
fisubrl
jp
pop
jb
adc
sub
sbb
push
bound
das
in
mov
inc
mov
inc
ret
out
cmp
insl
inc
and
dec
mov
testl
xchg
push
inc
pop
fsub
pushf
add
jo
jb
sarl
xchg
imul
xor
rclb
cld
xchg
test
shl
sub
inc
xchg
cmpsl
cmp
adc
outsb
sbbl
aad
mov
dec
or
mov
xor
in
mov
inc
int
cli
jbe
stos
and
lods
sub
hlt
add
push
sbb
aam
aas
sbb
call
fidivs
cmp
dec
push
pusha
xor
subb
sbb
add
dec
cli
mov
pop
lret
mov
int3
outsl
in
repz
pusha
in
jp
fisubrs
or
fwait
sahf
clc
add
daa
arpl
xor
repnz
mov
sbb
aaa
xor
ret
call
stos
mov
pop
int
add
xor
mov
mov
nop
mov
insb
xor
jo
imul
pop
popf
inc
ret
and
jb
mov
mov
jb
xor
inc
jle
or
lock
not
cmp
xchg
jl
test
imul
sbb
xlat
in
sar
push
popa
int3
cmpsl
sbbl
cmp
and
fadds
inc
sub
movsb
mov
mov
scas
jb
in
enter
sub
cltd
mov
mov
mov
bound
jmp
pop
mov
fs
loope
cmp
mov
mov
out
movsl
movsb
inc
roll
out
or
arpl
jno,pt
lcall
mov
in
and
pop
jae
jp
addr16
mov
shr
sbb
jg
inc
inc
roll
lods
outsb
inc
xchg
cwtl
sbb
cmc
or
fwait
ds
xor
xchg
cs
pop
jae
xor
push
out
aas
inc
inc
shr
gs
imul
xchg
imul
into
mov
test
aad
jg
aas
in
stc
fcomps
pop
test
fcoml
fimull
aaa
push
push
in
xchg
call
mov
xchg
add
pushf
mov
mov
arpl
pop
adc
bound
in
mov
cmp
mov
xor
jl
jno
in
xchg
xchg
bound
sub
jae
pop
mov
cmc
inc
sub
or
jnp
push
fnstcw
add
addb
loope
out
leave
jle
inc
call
adc
cmc
or
in
and
in
movsb
fs
test
enter
cld
adc
sbb
ret
gs
andl
sarb
ror
fdivs
pop
and
imul
loopne
cmp
test
popa
in
add
jl
jl
inc
arpl
mov
inc
inc
mov
and
bound
rcll
sahf
sarb
sarb
push
test
movsb
and
cmp
adc
mov
std
dec
or
xchg
cli
inc
repnz
imul
arpl
imul
loopne
cltd
and
pop
or
in
ficoms
insl
xor
and
ss
xchg
adcb
sbb
roll
jns
push
xchg
fistl
stos
jo
or
sub
xor
mov
ss
mov
xchg
loopne
xorl
imul
std
mov
push
outsb
movsb
mov
repz
xchg
pop
sbbl
js
cld
mov
jp
clc
xchg
adc
mov
movsb
push
cmp
jg
ljmp
fwait
inc
xlat
ret
cmp
push
mov
out
out
ret
jnp
jbe
aad
lret
jb
cmpsl
stos
in
xchg
jo
int3
push
cmp
xchg
adc
popa
dec
scas
shl
test
inc
xchg
push
fimuls
xchg
add
or
mov
cmpsl
sbb
cmc
stos
dec
adc
jne
leave
popf
mov
sbb
xchg
test
ret
xchg
jl
fdivs
pop
jae
sti
dec
sahf
and
xor
cld
cmpsb
cmp
sbb
push
mov
ret
pop
adc
test
sbb
or
jae
or
testb
or
ds
je
stos
sub
cmp
fisttps
or
idivb
jge
adc
mov
mov
inc
and
popf
nopl
imul
imul
call
addr16
test
cmpsl
dec
or
xchg
push
pop
test
shll
andl
lahf
pop
and
int3
test
xor
icebp
fbstp
dec
xor
mov
pop
add
rcrl
xchg
and
mov
xor
xor
jge
sub
add
js
in
sbb
sbb
adcb
mov
notl
ja
in
or
mov
inc
xor
mov
jb,pn
adc
ficompl
in
aam
in
mov
xchg
mul
lret
out
movsb
cli
and
lock
dec
sahf
inc
pushf
cwtl
mov
add
add
ja
add
ficoml
xchg
mov
adc
adc
daa
test
push
and
movsl
nop
aaa
and
push
adc
xor
shl
or
jecxz
shll
sbb
push
cmpl
and
into
pop
daa
out
sub
jge
cmp
xor
ficoms
insl
xchg
hlt
sahf
aam
stos
jb
inc
jns
dec
mov
add
push
sti
sbb
mov
jbe
out
popa
lret
xchg
push
lcall
and
shlb
inc
adc
or
xor
pop
xchg
mov
jmp
iret
dec
outsl
sub
mov
jg
jmp
ret
pop
lahf
lds
fldt
fs
or
pusha
jb
xchg
shrb
cltd
int3
cmp
inc
std
inc
loop
mov
cmp
cmp
or
mov
xchg
mov
insl
int3
scas
sub
lahf
movd
mov
adc
or
mov
xchg
mov
or
adc
cmc
cmp
pop
js
ror
test
or
mov
pop
add
les
push
mov
add
insb
sub
and
repz
cld
rol
push
xchg
clc
and
rorl
mov
push
sarb
mov
mov
pop
jecxz
sub
sub
cmc
ja
bswap
dec
mov
dec
arpl
sub
cltd
mov
sub
push
imull
inc
in
out
cmp
cmp
adc
inc
pop
adc
jbe
jecxz
cli
arpl
ja
mov
adc
mov
push
xor
sarb
xchg
inc
insb
jl
lods
in
roll
mov
dec
pop
push
push
inc
jno
xchg
cmp
stos
aas
fucompp
push
dec
rcrb
push
loopne
pop
into
fwait
aam
xor
dec
fimuls
sti
inc
inc
shll
mov
fistpl
enter
mov
xchg
insl
pop
inc
enter
pop
mov
cmp
cmp
dec
inc
imul
int3
xlat
cld
sub
cmp
loope
lock
mov
adc
clc
mov
jnp
pushf
mov
cmp
test
inc
stos
out
mov
movsb
arpl
cmp
sbb
sub
enter
cmp
mov
in
scas
cmp
cmp
lods
pop
cli
xchg
dec
rcr
cltd
adc
mov
push
cmp
xor
sub
jbe
cli
mov
cli
pop
xchg
cmp
mov
or
xor
pop
and
xor
dec
orl
mov
and
ss
ljmp
out
outsb
mov
in
pusha
nop
data16
out
mov
inc
pop
cmp
call
cmc
add
pop
lret
into
jbe
adc
lds
mov
ja
es
cs
jmp
sub
dec
sub
xchg
xor
jb
lods
imul
mov
xor
in
out
push
dec
dec
outsb
cmovae
lcall
movsb
je
pushf
arpl
sbb
mov
xchg
push
jae
and
inc
sbb
and
sti
in
mov
inc
lret
repz
and
gs
cld
adc
aam
jae
xchg
fucomi
mov
mov
sbb
pop
add
leave
cmp
xchg
jge
sbbb
xor
xchg
cld
xor
xchg
dec
lock
loop
je
jo
push
sub
mov
call
sbb
addl
sbb
repnz
rcrb
scas
push
mov
mov
jg
shlb
test
fiadds
jno
nop
push
repz
xchg
pop
xchg
jge
lds
movsb
jge
sbb
mov
mov
mov
arpl
add
stos
sub
scas
imul
cmp
sub
xchg
cwtl
cmp
jp
stc
cli
push
and
js
cli
mov
pop
cs
and
cmpsb
mov
and
dec
movsb
cwtl
jp
aaa
insb
jmp
stos
movsb
movsl
lret
mov
std
sub
in
add
stos
mov
inc
xor
sub
fisubrs
scas
aam
rolb
dec
sub
adc
push
andl
loope
sahf
or
mov
mov
dec
roll
ficomps
jp
out
nop
xor
or
dec
jae
testl
movsb
movsl
cmp
bnd
jge
notl
fucomip
fidivs
imul
inc
adc
bswap
es
cmp
mov
push
lds
cld
or
mov
mov
mov
enter
rcll
ret
std
cmp
jle
pop
stos
and
andl
cmp
push
cld
adcb
push
movups
fidivl
sub
dec
pop
scas
stc
inc
xorl
pop
sbb
inc
pushf
xchg
dec
stos
sbb
mov
fisubrs
das
or
dec
and
dec
inc
xchg
sbbl
add
cmc
mov
mov
cwtl
cmp
jb
insb
push
mov
sarb
pop
fldt
xor
jl
ds
cltd
jnp
popa
mov
or
and
movsb
std
fs
mov
fisubrl
push
iret
push
add
jnp
ret
add
dec
and
push
adc
fwait
repz
push
or
std
lcall
das
cld
cmp
mov
jmp
cmp
xchg
orl
xor
mov
notb
inc
pop
dec
pop
loop
adc
add
cli
test
fdivs
movsb
cmp
pop
sub
int
sub
inc
rclb
call
fsubrl
arpl
xor
jb
fisttpll
xchg
movsl
repz
jg
dec
cmc
dec
mov
outsl
outsb
xchg
jl
xor
pusha
shl
or
das
cld
fildll
in
push
adc
pop
jnp
bound
fdivr
sbb
xchg
xor
inc
repz
imul
mov
popf
ljmp
mov
dec
das
inc
mov
mov
push
inc
mov
into
cmp
bound
xchg
sahf
sbb
jle
dec
into
add
xchg
mov
adcb
xor
pop
shll
cs
sbb
loope
xor
je
vunpcklpd
int
adc
cmp
imul
xchg
add
outsl
adcb
fwait
aam
sub
bound
sub
das
jge
aas
pop
add
out
mov
cmp
jge
xchg
mov
and
cmpsl
dec
cli
adc
out
rclb
and
jne
push
xchg
or
popf
pop
aas
inc
sbb
stos
cmp
mov
pop
frstor
int
xor
pop
mov
insb
dec
xor
xchg
xchg
insb
and
push
xchg
xchg
and
cld
push
es
inc
out
dec
mov
push
lea
roll
push
imul
mov
sub
add
xchg
xchg
in
data16
add
movsl
inc
mov
clc
jl
out
out
mulb
jns
pop
outsb
cmc
insl
sbb
test
mov
imul
sub
xchg
jle
mov
iret
in
repnz
dec
add
scas
testl
lahf
jge
aam
pushf
out
dec
xorb
cltd
dec
or
iret
sarl
pop
xor
jle
mov
lcall
fcmovbe
int
aaa
rclb
por
mov
xchg
and
dec
mov
fstpt
cmc
test
xchg
enter
lcall
sti
pop
push
inc
pop
lcall
inc
add
maskmovq
divl
and
pop
pop
and
push
lret
mov
rolb
imull
lods
lea
mov
mov
inc
jle
adcb
and
repnz
jle
mov
sub
adc
jno
xor
sbbb
int
jae,pt
loop
adc
aad
nop
inc
xor
pop
xchg
jno
and
mov
adc
mov
inc
cmpsb
or
or
insb
add
or
enter
pop
sbb
gs
push
inc
popa
out
loop
test
xchg
ljmp
push
fucom
mov
pop
rorb
ror
mov
int3
jge
jns
into
lcall
sub
xchg
push
std
pop
aaa
push
push
jecxz
adc
leave
loope
movsb
push
push
inc
xchg
push
mov
jmp
push
add
push
push
stc
push
adc
test
pop
cs
mov
int3
push
jne
jp
or
xchg
and
jg
aas
lods
psadbw
mov
into
push
add
push
iret
lock
push
push
sbb
inc
loopne
lahf
cmc
inc
mov
in
bound
shrb
sahf
jle
mov
mov
pop
xchg
dec
lahf
sbb
push
sahf
or
mov
pop
jle
fcmove
and
inc
in
mov
push
sbb
xlat
sbb
pop
pop
mov
test
dec
xor
sub
or
test
cmp
cmpl
fldcw
and
jbe
insb
in
jb
in
vpshab
mov
pop
nop
jo
or
ss
clc
stos
fmulp
cld
adc
sti
xor
leave
mov
lods
mov
pop
pop
addr16
and
out
cmc
rdmsr
xchg
inc
ljmp
and
or
or
aas
sub
ret
lds
dec
fstpt
clc
loopne
notl
push
bound
lods
pusha
subb
test
xor
pop
sbb
loope
ret
mov
sbb
fbstp
cli
dec
iret
icebp
popa
xchg
aad
xchg
xor
jb
and
fimull
fstpl
and
sub
cld
jb
icebp
jae
es
xor
sbb
repz
pop
orl
leave
cmp
mov
lock
mov
xor
mov
inc
push
clc
addr16
add
dec
sbb
inc
lds
imul
jl
shrb
pusha
ds
adc
test
int
bnd
adc
jp
mov
je
cs
sub
call
scas
sub
clc
lcall
inc
mov
std
sub
mov
cmp
pop
insl
jne
pop
jl
pop
in
shll
push
pop
out
sub
cmp
pop
mov
mov
mov
ja
or
shl
xchg
and
mov
popf
scas
fdivrs
or
sbb
sbb
pushf
xchg
pop
int
mov
push
xchg
clc
xor
dec
cmp
pop
mov
mov
in
xor
sub
mov
mov
dec
and
mov
sbb
dec
inc
sbb
daa
cli
scas
movsl
fcomps
xor
pushf
xchg
hlt
std
fcmovnb
sbb
xor
or
lret
mov
hlt
or
les
loope
mov
push
push
sbb
ret
out
xchg
or
fldl
inc
dec
or
into
sub
int
or
outsl
add
xchg
in
pop
shrb
push
push
jl
pop
cld
ss
std
sub
xor
xchg
loope
cmpsl
adc
mov
aas
xor
lret
and
mov
jle
xor
inc
and
push
jno
sbb
xchg
inc
mov
cltd
ret
cli
hlt
testb
mov
inc
and
push
xchg
adc
and
pop
mov
ja
test
movsl
movsb
sub
imul
pushf
xchg
jae
mov
daa
xor
dec
idiv
inc
fsubl
jge
mov
sbb
cmp
insl
int
and
inc
add
stos
imul
bound
ret
in
mov
mov
fistps
mov
xchg
push
cmp
cmp
jnp
pop
dec
pop
mov
mov
pop
gs
xor
xor
mov
cld
mov
pop
jns
jecxz
xlat
gs
add
xlat
cmp
xlat
xor
movsl
fistps
sbb
int
test
sbb
shll
incl
cmp
lds
xchg
cltd
inc
jg
mov
mov
or
repz
add
jno
inc
fstl
in
pop
adc
xor
scas
sub
sub
std
mov
addb
cmp
insb
dec
movl
lods
mov
shlb
cmpl
dec
scas
sbb
lahf
gs
mov
or
lret
and
jg
or
in
imulb
sahf
popf
popa
sbb
jnp
imul
aam
inc
and
dec
jge
pop
arpl
sbb
fldcw
pop
sbb
lahf
fwait
and
insb
mov
repnz
sbb
pop
gs
sub
in
xchg
adc
clc
pop
arpl
mov
addr16
outsl
lcall
push
add
enter
enter
jg
lds
je
aad
mov
mov
int
sbb
sbb
aas
mov
jp
inc
sub
repnz
cmpsb
stc
mov
sub
mov
push
out
movsl
and
adc
les
xorl
and
das
test
jnp
xor
popl
inc
xchg
leave
inc
add
sub
jp
lds
fsubrs
std
jge
or
bound
js
aaa
lahf
pop
out
icebp
and
cmc
jle
jne
mov
xchg
mov
mov
push
loopne
sarb
nop
dec
or
dec
sub
sbb
jne
lahf
inc
clc
pop
cmp
push
mov
xchg
xlat
jg
cmp
mov
enter
lcall
in
or
add
loop
jmp
ja
icebp
mov
sbb
lea
mov
mov
imul
xor
test
subl
aam
inc
fidivl
rcr
shl
adc
test
dec
and
or
or
jno
or
fdivrl
push
lahf
add
adc
mov
scas
inc
loope
dec
jl
icebp
stos
loopne
jp
adc
popa
cmc
fimuls
jle
inc
leave
lret
out
int
dec
repnz
mov
sub
sbb
inc
popa
lahf
push
hlt
push
xchg
divl
loopne
aaa
cld
pop
inc
jl
ret
movsb
adc
jl
push
inc
das
out
and
and
dec
inc
or
dec
cwtl
adc
pop
pop
in
or
sbb
or
xor
cld
outsb
push
sbb
imul
aam
mov
fsubl
loopne
mov
addr16
cmp
ds
and
mov
dec
push
aaa
mov
xor
or
shlb
push
dec
mov
sbb
jne
mov
outsl
cmp
lods
mov
cmp
out
xchg
jo
sub
out
mov
mov
int
push
mov
dec
out
es
cli
sbb
outsb
int
js
sub
jle
lock
mov
push
cld
or
sbb
lock
push
rcrl
movsl
leave
es
push
out
mov
cmp
and
imul
cli
dec
notl
add
mulb
pop
push
mov
insb
lds
xchg
and
mov
dec
mov
add
lcall
lcall
pop
push
enter
inc
les
xchg
adcb
enter
jg
and
je
jae
mov
mov
mov
adc
mov
mov
mov
xor
cmpsl
lahf
adc
icebp
nop
popa
enter
sbb
lods
inc
pop
fdivrs
push
pop
mov
xor
sub
cmp
xor
fnsave
xchg
pop
iret
adc
sbb
les
mov
lahf
mov
inc
in
inc
pop
pop
xor
sub
lods
mov
xor
ficoms
inc
push
adc
loope
push
and
imul
icebp
les
fdivs
add
rcll
ret
sub
and
mov
das
mov
cli
xor
je
and
sar
push
jo
test
inc
out
subb
gs
xchg
loopne
addr16
jmp
sbb
xchg
or
jne
lock
ret
hlt
xchg
xchg
xor
xchg
mov
lods
and
repz
int
xlat
push
push
xorb
push
repz
xchg
call
into
into
pop
sub
sbb
and
sub
mov
idivl
gs
stos
pop
pusha
xchg
ljmp
dec
data16
int
pop
push
inc
lock
mov
pop
gs
pop
mov
js
in
test
lea
sub
inc
dec
adc
dec
aas
clc
inc
pop
mov
mov
sar
js
pop
sub
add
nop
mov
adc
subb
int3
fs
test
dec
xchg
insl
inc
jle
push
enter
mov
insb
fadd
and
push
jns
push
mov
stos
mov
jmp
in
into
movsl
pop
xor
add
xchg
mov
call
out
xor
pop
ret
imul
xor
push
call
in
sbb
sbb
iret
sbb
decl
sub
lcall
rclb
dec
out
add
nop
stc
popf
push
jbe
out
sbb
inc
ljmp
adc
daa
sub
incb
push
out
les
adc
pop
out
sub
notl
jp
mov
inc
mov
jp
xchg
aad
xor
negb
mov
lods
mov
stc
pop
push
sbb
dec
sub
jo
cmc
movsl
in
aaa
dec
cld
jns
sti
aaa
cmp
xor
inc
dec
aad
mov
icebp
mov
popa
aam
push
mov
push
adc
movsl
call
sub
call
ja
and
ja
mov
cld
sahf
mov
lea
sarl
cmp
lea
cli
sbb
jae
add
in
jle
inc
sbbl
mov
jp
add
pop
jns
push
mov
mul
push
sahf
xlat
sbb
in
push
loope
xor
call
scas
mov
pop
jl
mov
mov
out
push
cs
add
dec
les
push
mov
xchg
cli
dec
dec
shl
int
push
int3
xor
rcr
mov
push
adc
dec
or
and
jl
or
dec
sbb
dec
xor
mov
push
adc
lock
adc
jnp
mov
inc
or
rol
mov
sti
or
ret
icebp
xchg
out
or
sbb
sti
incl
lea
and
mov
lods
jecxz
dec
lods
mov
adc
hlt
dec
lcall
xchg
cs
ja
mov
iret
xor
clc
xchg
test
pop
cmp
cmpsl
or
stos
pop
ja
lret
xchg
inc
xor
push
xor
sbb
fs
mov
shl
pop
clc
lcall
sbb
movsb
insl
movsl
dec
pop
arpl
fstpl
rcl
dec
and
repnz
movsb
dec
test
pop
scas
dec
bound
jmp
ret
cmp
pop
cltd
jnp
add
scas
nop
icebp
ss
pop
cmp
and
js
lahf
mov
inc
push
pop
cmp
and
mov
ret
or
lahf
mov
xchg
divl
repz
jo
int3
or
out
out
jo
aaa
mov
in
shrb
dec
aas
scas
pop
xor
and
flds
sbb
pusha
sub
xchg
pop
repnz
dec
xorl
xlat
call
mov
sbb
jle
dec
arpl
push
fildll
pusha
sub
mov
sti
stos
cmp
xchg
pop
or
movsl
insb
shll
pop
mov
pop
ret
lahf
pop
outsb
mov
push
jle
jg
addr16
mov
roll
sbbl
cmp
push
xor
jo
sub
mov
ficompl
mov
lds
sub
or
leave
fstpt
nop
cmp
xor
push
pop
cmpsl
loop
mov
jae
pop
push
leave
mov
sub
js
and
arpl
and
jns
ja
or
xor
lahf
insb
sbb
cmpsl
pop
push
pushf
out
leave
insl
mov
or
lods
lods
push
fwait
or
jae
sub
stc
pop
das
adc
jp
dec
mov
mov
cmp
fsubr
mov
sub
movsb
ja
icebp
inc
cmc
gs
pusha
int3
push
popf
jae
lret
lcall
movsb
outsl
pop
and
das
out
arpl
cmc
lods
cltd
ljmp
xor
push
jnp
jae
insl
mov
add
xchg
cs
pop
pop
test
sub
aaa
mov
dec
push
mov
std
mov
popa
mov
jecxz
stc
push
inc
fldenv
pop
daa
cmp
dec
daa
test
pop
std
sbb
jmp
mov
aaa
popa
ljmp
fisttpll
push
loopne
xor
clc
repz
sti
lock
sub
scas
cmpsb
xchg
dec
push
inc
cmp
cmp
mov
movsb
call
mov
and
or
cmpsb
fs
cmp
mov
sub
sub
fmul
mov
cmp
push
inc
jno
cmp
out
ror
pusha
lods
inc
scas
aad
repz
cmp
sub
fistpl
mov
or
sarl
and
out
or
or
lock
cmp
ja
daa
xor
popa
call
call
les
fcoml
out
lret
add
stos
push
aad
popa
bound
jmp
hlt
mov
dec
jmp
ss
lock
or
movsl
cmp
xor
in
adc
inc
jbe
ret
jae
mov
popf
and
jge
inc
jmp
loopne
mov
roll
jl
mov
shlb
pop
dec
aad
mov
loop
aas
jo
mov
repz
jno
cmp
pusha
das
jp
lret
les
ss
nop
jbe
cmp
mov
mov
push
mulb
es
push
repz
sbbb
mov
repnz
jb
test
rorb
fiaddl
cs
sahf
jge
and
adcb
sbb
xchg
lea
cmp
dec
xor
jmp
testb
xor
inc
jnp
daa
pushf
dec
mov
mov
mov
rclb
aaa
out
mov
or
test
mov
adc
loope
jb
ret
pop
les
cmc
int
cmp
das
push
push
jae
cmp
daa
fsubrl
js
xchg
sub
sbb
fld
gs
pop
loop
out
dec
test
bound
adc
jg
xchg
push
iret
xchg
arpl
loop
or
addr16
push
xchg
fdivrp
dec
cmpsb
pop
fs
fstpl
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
jecxz
mov
mov
pop
pop
mov
in
scas
gs
out
push
mov
jb
sbb
dec
mov
imulb
push
mov
pop
in
shl
repz
push
or
scas
aaa
lcall
add
je
stos
push
sub
push
mov
dec
cmp
hlt
push
xchg
dec
test
mov
fdivrp
pushl
dec
mov
clc
insb
xor
test
push
cs
hlt
mov
call
lret
pop
mov
aas
mov
mov
out
repz
push
sbb
jne
mov
adc
lods
inc
int
and
stos
xor
orb
mov
adc
push
shlb
jbe
and
fwait
mov
cmp
stos
and
repz
add
cmp
adc
jle
sbb
pop
adc
inc
mov
xor
jmp
shr
sub
xor
push
cmpsb
push
cmc
cmp
mov
ds
inc
dec
cmp
rolb
jae
movsb
movsl
mov
fidivl
push
dec
dec
or
in
adc
jns
lock
rcl
dec
cmp
mov
jns
mov
daa
iret
rcrb
xchg
cmp
inc
out
outsb
nop
adc
mov
int3
or
and
jmp
xchg
jmp
cmp
cmp
rorb
jne
dec
sbb
fwait
xchg
ds
inc
inc
out
std
xchg
or
pushf
cld
decb
fsts
sub
clc
mov
xchg
inc
stos
pop
xor
xchg
push
pop
ret
push
dec
incb
repnz
sub
pop
or
pop
and
inc
out
xor
imul
pop
push
adcl
out
push
pop
mov
cmpb
and
push
mov
add
add
add
add
add
add
inc
xchg
and
ficoms
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
mov
add
