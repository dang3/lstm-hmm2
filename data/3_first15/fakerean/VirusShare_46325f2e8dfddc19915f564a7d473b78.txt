int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
ja
loopne
cwtl
sbb
and
sbb
and
sbb
and
push
loopne
sub
loopne
jae
loopne
sbbb
and
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
std
stc
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
dec
sti
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
faddl
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
rcl
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
jge
inc
add
call
mov
mov
inc
add
add
mov
add
cmp
jae
mov
mov
xchg
repnz
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
loop
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
xchg
push
inc
add
pop
add
psubusw
nop
nop
nop
nop
nop
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
jp
loopne
jp
loopne
cmpsb
xor
and
loopne
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pushf
xor
loopne
mov
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
and
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
mov
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
leave
lock
add
pop
add
cmp
inc
add
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
pushf
or
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
inc
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
add
pop
inc
loopne
sbb
pop
inc
loopne
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
ret
and
inc
loopne
bound
and
inc
loopne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
add
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
add
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
xor
inc
add
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
loopne
mov
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
call
mov
push
mov
add
in
add
fs
add
add
mov
test
xchg
pop
add
add
xchg
pushf
pop
mov
jle
add
jb
add
add
add
arpl
xlat
mov
lods
add
push
mov
add
push
push
push
push
push
push
lea
push
push
push
call
loop
add
mov
mov
jnp
cmc
scas
add
test
jmp
add
add
enter
movsl
into
call
add
add
lcall
inc
in
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
add
add
mov
add
add
mov
add
ret
ret
add
out
add
add
add
push
push
push
push
push
push
lea
push
push
call
add
outsl
mov
add
add
push
loope
pop
mov
roll
push
mov
jb
stos
add
add
add
mov
roll
sti
mov
rolb
push
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
movb
add
add
add
add
ret
arpl
cmpsl
push
in
out
add
pop
jbe
add
lcall
fsubrl
add
call
push
push
lea
push
push
push
push
push
call
lods
add
add
aam
xchg
add
add
pushf
imul
cwtl
add
cmpsb
add
xchg
add
add
add
add
int3
add
hlt
add
add
add
imul
mov
fs
add
sub
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
call
test
mov
pusha
cld
loopne
jecxz
imul
pop
mov
mov
leave
add
lcall
fdivp
pop
push
jne
sub
pop
jmp
ret
push
push
lea
push
push
push
push
call
add
xchg
xchg
push
loope
lahf
jnp
arpl
add
stc
js
lret
jae
add
add
fists
add
xchg
aam
add
call
mov
push
push
lea
push
call
ja
enter
jecxz
xchg
xchg
pushf
mov
add
add
add
add
pop
mov
add
lret
cmpsl
xchg
mov
std
test
movsl
aad
fadds
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
repnz
lret
xchg
addr16
add
push
fnstsw
test
pop
lret
movsl
cld
mov
mov
add
mov
add
xlat
add
add
sti
mov
add
mov
lcall
add
repnz
add
sti
add
add
add
lods
add
lcall
pop
in
add
push
push
push
push
push
push
lea
push
call
add
sti
add
pop
out
add
lret
mov
lock
ljmp
repnz
push
je
mov
sahf
add
pop
mov
add
add
push
push
push
push
push
call
mov
jp
mov
add
xchg
rolb
jb
loopne
add
icebp
shl
add
lret
fwait
add
xchg
clc
pop
ret
add
add
cwtl
add
sti
pop
jmp
add
add
add
ror
add
js
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
xchg
add
xchg
jne
mov
jle
add
mov
aad
jne
add
add
loopne
into
jge
je
lahf
out
add
enter
push
pop
fildl
sbb
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
jo
fwait
jl
rolb
xchg
outsl
rclb
add
in
stos
add
cmpl
xchg
mov
lods
insb
lds
enter
ja
sub
pop
add
push
push
sub
push
or
inc
add
not
sub
sub
ror
pop
shl
lea
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
enter
int3
add
mov
xchg
add
add
add
movsb
add
jp
popl
iret
in
xchg
add
pop
pop
scas
data16
add
add
add
out
xchg
stos
test
mov
in
jae
movl
jne
xchg
mov
fwait
add
imulb
xchg
add
add
xchg
test
lcall
jne
push
push
push
lea
push
push
push
push
push
push
call
pop
lret
add
add
addb
ljmp
pop
jnp
mov
add
add
add
add
add
scas
popa
add
mov
ja
ret
ja
mov
fnstsw
sub
pop
call
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
pushf
add
pop
std
add
adc
popf
loopne
jge
xchg
rolb
cmc
imul
test
add
cld
call
in
add
add
add
fs
add
add
add
add
add
mov
add
test
mov
scas
pop
test
sub
pop
movl
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
out
rolb
nop
iret
movsl
push
add
xchg
bound
add
add
bound
add
add
mov
add
add
lock
jle
sub
pop
lea
push
push
lea
push
push
push
push
lea
push
push
call
push
outsl
add
add
add
sahf
add
div
cmpsl
hlt
add
adcl
add
add
clc
add
add
rolb
jmp
add
idiv
add
test
add
add
sub
pop
pushl
push
lea
push
push
call
add
add
rcrb
ja
mov
sti
add
loope
cli
add
add
mov
jmp
rolb
cmpb
add
aad
sub
pop
pushl
call
push
push
push
lea
push
lea
push
lea
push
push
call
mov
fcmovnu
add
jae
nop
hlt
push
add
enter
les
idiv
movsl
mov
add
in
pop
pop
xchg
add
int3
imul
icebp
sar
jmp
out
mov
add
mov
add
add
add
add
add
add
lcall
jne
pushl
push
push
push
lea
push
push
lea
push
call
cltd
in
roll
jp
jns
pop
movsl
push
add
mov
insb
add
add
jno
push
add
pop
jb
mov
lock
adcl
add
push
mov
add
cmc
jbe
add
jno
in
call
call
push
push
shr
push
and
add
dec
shr
xor
lea
sub
ror
pop
ror
inc
pop
push
lea
push
push
lea
push
lea
push
push
call
mov
shlb
sti
jmp
clc
add
add
cmc
add
lahf
out
add
cli
aam
xchg
lret
loope
add
mov
pop
movb
push
sub
pop
pushl
push
push
lea
push
push
call
xchg
push
std
xchg
xchg
add
add
test
add
add
in
imul
stc
mov
add
pop
add
sti
add
pusha
mov
sub
pop
call
push
push
lea
push
push
push
call
pop
add
insb
xchg
mov
add
adcb
ljmp
shrb
shr
fucomip
ja
push
pop
pop
leave
add
mov
mov
push
in
in
lcall
inc
push
push
sub
shr
push
push
pop
add
add
add
sub
add
sub
sub
ror
lea
pop
add
sub
pop
push
push
push
lea
push
push
push
call
add
add
icebp
pop
xchg
add
leave
add
add
add
xchg
stos
cmpsb
lock
aad
add
pop
in
cmc
int
pop
rclb
mov
in
in
call
push
imul
jno
hlt
lea
push
call
addb
arpl
popf
mov
into
pop
cmpsb
mov
aad
test
mov
add
movsl
enter
mov
add
nop
add
jno
add
mov
mov
ret
mov
fcoml
clc
push
add
lods
pop
add
lds
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
mov
test
add
faddl
jge
loope
scas
lock
add
add
mov
ja
gs
lods
pop
add
add
pop
popa
add
xchg
hlt
flds
add
add
xchg
add
pop
mov
pop
add
add
stc
stos
out
movb
nop
imul
in
loopne
call
mov
push
push
call
fwait
lahf
orb
mov
fs
sbb
lods
add
in
les
add
jmpw
mov
add
add
movsb
sub
pop
push
push
push
push
push
push
push
call
iret
in
std
aam
mov
cli
fs
mov
add
push
mov
mov
insb
lea
add
in
cli
pop
add
les
pushf
add
add
lcall
push
push
call
add
add
repnz
add
movsl
mov
add
loopne
movsl
sbbl
add
iret
mov
test
add
add
sub
pop
mov
add
push
push
push
lea
push
push
lea
push
call
hlt
test
test
add
xchg
add
add
xchg
rolb
add
xchg
bound
stos
xchg
iret
jno
aad
stc
rol
add
pushf
enter
roll
add
jecxz
add
xchg
ja
cmc
lret
add
in
call
adc
add
inc
jne
call
popf
push
add
fiaddl
add
jp
shr
outsl
xchg
mov
push
les
repnz
xchg
add
mov
push
add
add
lods
sbbb
arpl
add
mov
add
push
push
push
lea
push
push
push
call
repnz
add
stos
mov
mov
add
add
add
rcrb
add
mov
mov
push
imul
loope
add
add
mov
testl
add
lea
incb
mov
add
add
les
add
out
gs
call
add
lcall
xor
adc
xor
movsb
mov
lea
push
push
push
push
call
add
cwtl
add
sahf
lods
add
add
push
icebp
push
mov
imul
add
jnp
rcll
xchg
ja
aam
iret
add
test
add
in
in
add
push
push
push
push
push
lea
push
push
call
push
cmpsb
add
add
mov
add
in
cmc
add
mov
add
stc
mov
add
flds
clc
fwait
clc
ret
mov
jnp
icebp
add
add
jle
pop
movsb
mov
add
sti
roll
test
jae
add
in
add
add
jl
in
in
lcall
push
lea
push
push
push
lea
push
push
push
call
pushf
push
ret
loope
add
mov
repnz
add
cli
jle
or
sahf
loopne
add
bound
leave
add
jnp
andb
pushf
jno
std
add
test
mov
add
mov
add
gs
add
popa
sub
pop
mov
push
push
push
lea
push
push
push
call
add
sahf
add
fwait
lds
add
add
add
js
add
jb
imul
add
mov
add
into
jmp
sub
pop
xor
push
push
push
push
push
push
call
add
notb
out
add
mov
lock
add
add
add
add
int
divl
jle
add
lods
repnz
fcmove
add
call
test
xchg
jno
jnp
in
add
fidivs
add
in
add
mov
fisubrl
sub
pop
add
push
lea
push
push
call
add
aam
jmp
cmc
out
add
add
add
ljmp
add
lea
push
enter
fs
xchg
mov
fwait
movsb
mov
add
add
add
jae
add
hlt
lods
mov
add
test
add
lock
push
lea
push
push
lea
push
push
call
mov
pop
sbbb
add
add
pop
jnp
out
mov
pop
ljmp
jle
add
jo
add
repnz
add
scas
outsl
lcall
add
mov
shlb
testb
jns
les
les
int
xchg
aam
jbe
add
in
call
pop
mov
xor
push
push
lea
push
push
lea
push
call
add
add
in
add
mov
mov
add
je
add
je
add
addl
add
add
jne
add
add
xor
out
gs
mov
push
add
imul
add
in
pop
push
push
push
push
push
push
push
push
push
lea
push
call
lahf
je
xchg
mov
in
fadds
mov
imul
jmp
mov
jmp
add
movsl
mov
add
filds
lcall
inc
or
adc
add
pop
add
add
add
into
add
scas
jmp
add
out
mov
ljmp
jae
jns
movsb
addb
out
xchg
imul
pop
add
mov
add
xchg
clc
popf
push
lret
jns
add
xlat
sahf
add
int3
shl
icebp
arpl
pop
stos
xlat
add
fcmovbe
push
add
sub
pop
sub
push
push
push
lea
push
call
add
js
add
add
add
add
add
mov
add
fiadds
xchg
add
ja
stc
ficoms
nop
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
pop
iret
add
imul
icebp
push
loopne
flds
add
add
push
pop
fidivs
fstl
scas
fdivrl
add
jb
add
add
sub
pop
rep
push
push
push
push
push
push
call
scas
add
loop
incb
push
test
add
add
aad
fcmovb
xchg
mov
add
add
out
ljmp
in
call
hlt
push
push
push
push
push
push
push
push
push
call
add
push
pushf
stos
mov
pop
movsb
jae
jo
lcall
jns
jecxz
fiadds
je
data16
add
push
out
int3
fdivr
mov
add
mov
insb
add
addl
mov
imul
lcall
pop
in
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
add
lret
add
into
js
mov
add
push
cli
addb
add
add
add
mov
add
add
add
in
imul
in
add
int3
add
mov
sub
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
add
lret
mov
lods
add
xlat
scas
std
fcoml
jo
out
pop
add
into
jle
in
xlat
add
gs
jb
lods
add
nop
push
hlt
mov
add
jbe
push
movsl
add
mov
fisttpl
pop
add
push
push
push
call
add
mov
jae
mov
add
add
add
int3
add
add
add
add
add
push
jge
xchg
icebp
lea
mov
mov
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
in
pusha
add
push
add
jl
addr16
ja
push
add
ja
pusha
cld
push
jne
lock
mov
add
jl
out
add
add
movsl
xlat
cmpsb
testl
lcall
mov
roll
testb
in
fcomps
add
push
lea
push
lea
push
push
call
add
addr16
mull
rcr
test
sbbl
test
call
call
xchg
ret
in
lock
lcall
les
lea
push
push
lea
push
push
push
lea
push
push
call
out
imul
jns
push
add
addr16
add
mov
push
frstor
push
push
mov
add
fcomps
add
jmp
add
add
lock
shll
movsb
int
test
in
add
data16
add
clc
stc
add
add
out
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
call
clc
pop
add
aam
lcall
std
rcll
jle
iret
add
add
fmull
mov
add
add
add
add
pop
xchg
jo
mov
scas
add
xchg
insb
sub
pop
mov
push
push
push
push
lea
push
call
add
add
out
mov
jne
pop
mov
add
arpl
add
pushf
mov
mov
addr16
sbbb
stos
js
mov
fldenv
add
lods
add
xchg
incb
add
add
add
out
ja
add
mov
test
pushf
add
mov
add
mov
pop
stc
sub
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
call
add
sti
add
mov
ficompl
clc
add
lahf
aad
pushf
add
mov
in
add
add
jge
add
test
add
in
shl
add
add
lret
mov
out
jb
scas
mov
lret
flds
add
add
andl
popa
out
add
lcall
les
add
push
lea
push
call
add
test
int
add
int
movsb
add
pop
push
add
add
out
cmp
jge
add
add
add
add
pop
test
mov
add
mov
add
lret
sub
pop
add
add
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
std
mov
cmpsb
add
mov
xchg
mov
cmpsb
add
jne
add
jp
add
rolb
add
icebp
sub
pop
mov
push
push
push
push
pop
add
sub
shr
rol
sub
rol
add
shr
pop
shr
pop
push
push
push
push
push
push
push
call
add
fwait
sahf
test
add
pop
push
add
lods
add
int
jl
jb
out
mov
add
add
ja
push
add
int
mov
add
add
roll
xchg
lcall
jne
push
lea
push
push
push
call
roll
rolb
stos
add
lods
add
test
add
xchg
cmpsb
add
mov
subb
add
scas
rorb
pop
in
sarb
mov
add
call
add
jae
aam
xchg
add
add
add
addb
mov
testl
add
sub
pop
call
push
push
push
add
lea
push
or
not
add
dec
sub
sub
sub
lea
not
pop
ror
pop
push
push
call
add
push
jne
fcompl
jbe
int3
add
add
sahf
add
fmulp
add
jbe
rolb
mov
out
push
add
je
pop
add
cltd
mov
pop
pop
xchg
xchg
sub
pop
push
push
push
shl
pop
call
mov
push
push
push
push
push
push
call
stos
add
fwait
mov
insb
xchg
fnstcw
add
jno
fstpl
add
enter
loopne
movsb
add
cmpsb
add
add
bound
add
mov
popa
mov
sub
pop
push
push
lea
push
push
push
push
call
add
add
push
add
pop
add
mov
pop
in
mov
add
add
addl
add
andl
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
call
jae
push
add
push
mov
add
mov
add
loop
jnp
push
mov
jl
jne
icebp
mov
in
call
push
lea
push
push
push
call
add
ljmp
lods
mov
cmpsl
call
mov
mov
mov
add
imul
add
mov
add
cli
add
cmc
add
in
in
add
arpl
addr16
add
aam
shr
add
sub
pop
add
add
push
rol
inc
pop
add
mov
push
push
push
push
lea
push
lea
push
push
call
mov
jno
jecxz
loop
add
in
xchg
imul
jne
xchg
add
test
add
add
in
test
scas
stos
push
insb
add
jno
lds
jns
mov
mov
nop
cli
add
add
xchg
add
push
add
add
loopne
add
sub
pop
xor
push
push
push
push
call
add
jb
hlt
je
add
pop
jo
add
xchg
in
xor
add
xorb
stc
mov
add
add
iret
imul
pop
add
add
add
add
add
add
jl
add
lock
lcall
les
add
push
inc
shl
pop
add
push
lea
push
lea
push
push
push
lea
push
push
call
cltd
add
jge
cli
pop
add
lea
xchg
out
add
in
loopne
pop
xchg
hlt
mov
add
popf
add
out
cli
add
add
xlat
add
add
addr16
cmpb
jo
fiaddl
fldenv
mov
add
add
lock
stos
outsl
popa
add
push
push
lea
push
push
push
push
push
push
push
call
ljmp
add
push
add
jno
add
fildll
lahf
add
mov
add
add
add
test
popa
test
int3
test
pop
ljmp
xchg
addr16
add
andb
loope
cmpsb
icebp
add
clc
add
jmp
sub
pop
mov
xor
push
ror
lea
shl
pop
add
push
push
push
call
mov
pop
fnstenv
push
cwtl
xchg
mov
jecxz
pop
jl
add
mov
jae
add
add
jnp
mov
add
pop
mov
mov
ljmp
fs
add
jns
add
out
mov
pop
push
ror
dec
inc
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
loopne
cmpsl
out
bound
jl
mov
mov
scas
pop
mov
lds
xorl
fstpt
in
call
xor
push
push
push
push
lea
push
push
call
add
roll
add
push
mov
ficoml
add
nop
add
add
ja
loope
add
add
push
in
icebp
pop
lea
add
add
add
stc
lcall
pop
add
push
push
push
push
push
push
push
lea
push
call
add
jge
je
add
into
add
out
andl
add
add
add
push
stc
xchg
les
add
sar
scas
mov
add
jle
loope
filds
add
into
mov
add
aam
je
xchg
push
add
in
in
loopne
rep
push
push
push
push
push
call
in
fiadds
in
test
add
add
fsts
add
mov
add
add
jne
add
fildl
add
outsl
faddl
dec
and
icebp
xor
adc
data16
or
push
call
add
jne
fldl
add
int
add
add
test
xchg
js
cwtl
fdivrs
jae
add
add
add
add
les
fmulp
faddl
loopne
xchg
add
lcall
leave
je
push
inc
pop
mov
xor
push
rol
lea
shr
shl
pop
mov
push
push
lea
push
push
push
lea
push
call
xchg
int3
in
jmp
rcl
add
fisttps
xchg
add
lret
addb
mov
insb
xchg
les
lcall
adc
push
push
call
mov
jmp
nop
js
nop
add
sahf
pop
pop
add
pusha
add
movsb
push
add
mov
add
addl
mov
add
lcall
les
sub
sub
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
icebp
add
add
jle
mov
pop
mov
stos
push
roll
add
mov
jmp
add
add
add
add
lods
mov
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
loop
add
roll
enter
add
push
xchg
add
cmc
lcall
into
add
in
add
add
out
cli
add
pushf
jo
loop
out
mov
add
addl
fwait
xchg
test
add
add
add
add
out
test
fdivrl
in
fcompl
push
xor
pop
mov
xor
push
push
lea
push
push
lea
push
call
add
movl
add
mov
add
scas
roll
ja
add
hlt
xchg
add
loope
pop
ljmp
add
add
lock
lea
lcall
lock
sub
add
xor
pop
pop
push
add
pop
rep
push
rol
sub
shr
pop
mov
push
push
lea
push
push
lea
push
push
push
call
add
les
std
rcrl
pop
add
add
into
add
fldl
add
mov
outsl
lret
add
add
enter
add
into
push
add
add
ret
frstpm(287
add
mov
add
out
cli
jl
jns
out
mov
add
loop
add
mov
add
mov
leave
lock
in
call
push
lea
push
push
push
lea
push
lea
push
call
add
rcll
add
popa
push
push
in
xchg
jno
out
shll
add
push
add
add
add
loopne
add
mov
add
mov
jo
in
call
add
add
shrb
or
push
push
push
push
push
lea
push
call
add
out
iret
add
add
imul
lret
fiadds
add
add
add
insb
mov
add
add
add
in
fdivr
lcall
leave
je
push
push
lea
push
push
push
push
push
call
rcr
add
add
add
jns
add
out
mov
shl
jge
aam
add
xor
mov
xchg
data16
xchg
mov
add
fsubp
mov
addr16
popl
add
add
mov
add
push
shr
shl
inc
pop
add
rep
push
pop
pop
push
push
lea
xor
not
rol
push
sub
add
ror
lea
sub
ror
not
shr
add
pop
ror
sub
shl
pop
push
shr
xor
add
pop
pop
push
push
call
movsb
imul
add
fdivl
mov
add
add
jae
add
fcmove
add
xchg
gs
scas
pop
xchg
push
mov
add
in
add
add
add
push
mov
cmpsb
in
outsl
jbe
add
add
stos
push
loop
aad
add
add
add
popf
rol
mov
sub
pop
mov
push
sub
pop
mov
push
rol
sub
ror
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
stos
insb
mov
push
add
lock
mov
mov
icebp
add
cltd
jnp
stc
add
add
ja
out
jge
sahf
add
mov
in
fcomps
loopne
push
push
call
xchg
ljmp
xchg
shl
imul
push
jae
loopne
jb
jecxz
jmp
mov
xchg
xlat
push
add
add
je
jp
add
sti
movsl
icebp
sub
pop
push
mov
push
dec
xor
shr
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
aad
add
push
push
mov
add
lods
mov
mov
pop
mov
fdivrl
movsb
popf
popa
cmpsl
aam
js
add
push
xchg
out
test
push
add
pushf
jle
push
add
add
add
rolb
push
push
push
lea
push
push
lea
push
push
call
test
add
add
je
bound
add
cmpsl
mov
fsubrp
add
add
add
roll
add
add
mov
out
add
mov
mov
in
in
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
int
add
mov
add
lahf
fstpt
imul
shll
rolb
mov
repnz
add
mov
add
add
add
mov
add
add
add
mov
popf
add
add
add
add
push
cmc
fs
in
in
lcall
inc
cld
push
push
push
push
push
call
add
test
aam
push
add
jle
mov
out
ljmp
js
cltd
sahf
cli
movsl
test
sub
pop
pop
push
rol
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
call
xchg
add
add
jmp
call
faddl
jp
leave
xchg
lods
in
leave
aam
popa
cmpsb
clc
lcall
fisubl
add
add
push
xchg
fildl
int
xchg
add
push
fidivrl
add
fs
fbld
test
pop
pop
pop
push
lea
push
push
call
mov
faddl
shr
xchg
pop
arpl
mov
add
flds
jge
add
add
pushf
mov
add
int3
pop
add
testl
loopne
add
rcr
fiadds
push
push
lea
push
push
call
mov
lahf
push
add
add
add
add
add
sarl
add
add
push
mov
add
push
push
sub
pop
ret
push
push
pop
mov
add
push
dec
ror
sub
pop
push
push
push
lea
shr
pop
push
push
rol
pop
push
push
add
xor
pop
movl
addl
push
inc
shr
ror
pop
test
je
mov
push
shl
pop
pop
push
sub
pop
pop
pop
push
shr
sub
inc
pop
pop
leave
push
lea
push
push
push
push
push
push
call
add
cmc
add
add
nop
fistps
leave
clc
jecxz
mov
cltd
add
andb
stc
add
hlt
add
call
pop
add
add
scas
cmpsb
mov
lock
jae
add
add
add
fs
add
test
imul
popf
testl
in
ret
push
push
push
push
call
mov
add
pusha
add
stos
cld
add
add
add
cli
add
add
stos
out
in
add
xchg
fcmovbe
add
mov
mov
add
mov
add
jae
add
mov
scas
mov
pop
xchg
add
fbstp
mov
add
cmpsl
push
lea
push
xor
shl
pop
mov
push
push
push
push
push
push
push
push
call
push
je
add
fwait
xchg
rolb
repnz
add
stos
out
popf
cmpb
fwait
add
add
pop
sub
pop
add
push
inc
rol
pop
push
push
push
shr
sub
add
pop
push
push
push
push
push
push
call
push
add
lods
imul
add
mov
rcl
xlat
lds
fbstp
add
mov
pop
sti
add
add
jp
out
mov
fwait
mov
add
add
push
lods
addl
push
testl
add
andl
push
testl
push
push
call
xchg
add
std
add
add
pusha
jb
mov
rolb
add
rolb
pop
fcoml
add
add
add
add
add
cmc
pop
add
mov
add
jb
into
add
into
sub
pop
addl
push
push
push
push
lea
push
push
push
call
add
cmpsb
sti
add
sti
mov
add
lret
pushf
mov
pop
mov
mov
rolb
lcall
add
xor
add
pop
call
mov
push
lea
pop
pushl
push
push
push
lea
push
push
call
push
leave
outsl
ja
testb
mov
imull
mov
add
add
test
add
add
mov
add
pop
xchg
movsl
sub
pop
push
push
push
push
push
lea
push
call
add
pop
push
add
hlt
add
addb
imul
add
testb
mov
aad
add
add
xchg
add
cmc
add
mov
pop
add
out
in
in
pop
call
push
push
push
push
push
push
call
add
shlb
add
loope
in
add
pop
mul
addb
add
add
add
add
jge
add
test
call
jp
xor
dec
xor
pop
pop
push
dec
shr
pop
pop
push
push
push
push
push
push
push
call
cli
add
arpl
add
push
jae
mov
jecxz
add
add
push
add
mov
add
jb
hlt
imul
mov
xchg
add
jae
testl
xorl
int
add
pop
pop
push
push
push
push
push
push
call
add
add
mov
mov
add
fs
ja
ljmp
in
add
mov
add
add
jns
lds
push
in
call
pop
push
inc
not
pop
leave
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
cmpsb
xchg
add
sti
outsl
popf
ljmp
add
pop
lods
pusha
jae
jle
add
fadds
add
add
add
push
add
clc
add
add
jb
sahf
sub
pop
ret
push
push
dec
lea
ror
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
call
out
add
mov
xchg
test
aam
mov
add
add
outsl
cmpsl
xchg
pop
jo
fstl
jbe
bound
stos
xlat
jo
movb
add
jmp
mov
popl
js
mov
cmpsb
in
movsl
fistpll
add
add
mov
lock
add
pop
stos
lds
loop
in
loopne
add
push
sub
ror
pop
push
push
rol
pop
push
push
push
add
inc
pop
push
movl
push
push
lea
push
push
push
push
lea
push
push
push
call
sarl
stos
pusha
lcall
add
int3
pop
add
jmp
cmpsb
aad
lret
scas
aam
add
stos
lds
mov
add
pop
push
add
jle
jmp
add
arpl
pop
jle
add
add
int
out
stos
jle
mov
add
stos
sub
pop
push
push
push
lea
push
push
lea
push
call
add
cmpsb
loop
sti
mov
pop
add
clc
js
out
rorl
jb
pop
int
repnz
testb
mov
mov
out
add
jno
push
mov
imul
in
in
lcall
inc
stc
ljmp
push
pop
call
push
sub
pop
subl
push
ror
xor
pop
cmpl
jne
pop
push
inc
pop
pop
push
push
push
push
push
push
call
fld
popf
ret
mov
add
add
insb
enter
aam
je
add
pop
fadds
insb
push
lcall
bound
add
jae
test
add
cwtl
fbld
pop
in
xchg
mov
shrl
pop
mull
xchg
lods
sub
pop
pop
pop
push
push
push
push
call
add
ret
add
leave
jo
xchg
out
add
hlt
mov
mov
pop
loope
pop
add
add
lods
add
add
adcl
in
push
mov
add
add
popl
andl
push
push
push
push
lea
push
lea
push
push
call
jo
jno
add
rcrb
mov
popf
add
xchg
std
xchg
aad
add
add
fnsave
enter
stos
add
mov
xchg
add
add
scas
add
push
xchg
add
rcl
add
ror
nop
bound
mov
imul
add
addb
mov
in
lcall
push
rol
shl
pop
push
push
push
push
lea
push
push
lea
push
call
add
mov
jle
add
add
fiaddl
push
mov
arpl
add
add
add
out
add
add
mov
call
mov
push
dec
sub
inc
inc
pop
add
push
push
inc
add
pop
push
push
sub
rol
rol
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
lahf
add
pop
in
popf
popf
add
push
into
add
pop
add
incb
fisubl
push
js
add
mov
push
enter
mov
add
add
push
mov
aam
lcall
imul
shll
xchg
loope
les
lcall
mov
push
push
push
push
call
test
rorl
push
jl
add
mov
add
xchg
lock
rolb
mov
lahf
xchg
shrl
add
addl
add
jno
sahf
lea
inc
cmp
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
fildl
mov
mov
add
pop
add
test
stos
add
rcrl
add
mov
call
fdivr
lcall
call
inc
xor
pop
mov
push
sub
lea
pop
shr
push
sub
inc
pop
add
push
lea
pop
mov
push
sub
sub
pop
mov
add
push
push
call
add
xchg
push
add
xchg
add
in
imul
add
mov
mov
gs
add
add
mov
add
add
cmpsl
add
mov
jns
push
mov
add
add
shrb
add
add
shlb
lea
add
shr
pop
mov
mov
push
shr
sub
pop
cmp
jne
cmp
jne
push
not
pop
mov
push
lea
pop
movl
push
lea
pop
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
fwait
cmc
add
mov
add
rcr
fdivs
add
add
jp
add
mov
add
mov
push
mov
lds
mov
add
shrl
lcall
inc
cld
push
lea
add
dec
pop
mov
push
add
dec
rol
pop
sub
jne
push
push
call
xchg
add
add
aad
out
incb
mov
lods
add
lretw
add
cmp
mov
repnz
ror
add
pop
add
add
add
cli
sub
pop
mov
push
not
add
not
pop
movl
push
lea
push
push
push
push
push
push
call
add
pushf
add
pop
add
add
rol
repnz
shl
add
add
jo
add
les
add
jle
pop
add
pop
add
filds
testb
add
out
add
xchg
add
add
cld
add
push
add
add
mov
add
add
add
in
jmp
push
push
lea
push
push
lea
push
push
call
mov
jne
jp
shl
jbe
lcall
push
out
cltd
add
int3
add
mov
add
mov
add
popf
arpl
add
rolb
add
add
mov
test
in
call
push
add
ror
shl
pop
mov
push
lea
push
lea
push
lea
push
call
mov
out
push
testb
ljmp
in
add
add
jl
add
pop
mov
mov
add
add
incb
in
add
add
xchg
pop
sub
pop
cmp
jne
push
xor
xor
sub
pop
mov
push
shl
sub
lea
pop
movl
push
add
add
inc
pop
jmp
push
sub
sub
add
pop
mov
push
push
push
push
push
push
push
call
jns
imulb
sub
add
fidivl
add
je
scas
cmpsl
testl
add
push
xchg
fwait
jle
add
cli
mov
fiaddl
scas
jns
mov
idivb
mov
arpl
add
pushf
lock
add
movsb
cltd
mov
add
in
in
cmpw
jne
push
push
call
add
fs
add
testb
gs
add
push
imul
add
xlat
mov
pop
lahf
std
pop
add
add
imul
mov
add
add
add
scas
test
add
stos
mov
je
in
clc
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
jecxz
fidivl
add
mov
lods
add
mov
mov
add
ljmp
push
js
mul
mov
add
add
filds
andb
je
pop
add
icebp
fs
ret
fdivr
lcall
add
sub
lea
dec
pop
jmp
push
push
push
push
push
push
push
push
call
add
cmpsb
add
add
icebp
ljmp
pushf
add
pop
shr
popa
mov
enter
xchg
mov
add
icebp
mov
lods
push
hlt
mov
mov
xchg
add
int
add
add
xor
add
xchg
jns
push
loopne
xlat
push
cmc
add
insb
in
jns
fdivrl
push
lods
repnz
add
lcall
pushl
push
shr
pop
pop
mov
push
push
push
push
push
call
add
add
bound
add
hlt
add
ja
mov
int3
add
aam
mov
pop
add
add
popa
add
nop
cmpsl
add
rclb
add
add
call
xchg
mov
pop
cld
out
add
add
sub
pop
mov
push
add
rol
pop
mov
push
push
shl
not
sub
push
and
add
add
inc
xor
rol
sub
shl
lea
pop
not
pop
push
lea
push
push
lea
push
call
addr16
add
add
xchg
add
add
add
pusha
xchg
mov
add
mov
mov
int
mov
nop
data16
stos
pushf
rolb
test
xchg
ljmp
add
mov
mov
in
lock
lcall
call
push
dec
pop
cmpl
je
push
push
sub
push
or
inc
add
shr
dec
sub
shl
pop
dec
pop
push
push
push
push
push
lea
push
push
push
call
lcall
adcb
mov
add
add
std
cmpsb
add
mov
mov
xchg
repnz
pop
add
test
add
add
add
fistl
add
add
add
stos
add
add
mov
stc
add
cmc
sahf
test
cmpsl
lcall
loopne
push
call
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
aam
xlat
pusha
add
sti
outsl
add
add
imul
add
sub
pop
cmpl
je
push
push
add
rol
inc
sub
push
and
add
sub
shl
pop
add
lea
shr
dec
pop
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
std
add
jne
add
mov
add
add
movsb
pop
add
add
push
loop
hlt
sahf
test
mov
add
mov
add
shl
jl
aad
cmpsb
hlt
add
add
xchg
add
mov
loopne
ja
add
jecxz
pop
test
lahf
outsl
add
add
sub
pop
push
push
push
push
lea
push
push
call
outsl
sbb
jb
add
add
xchg
add
mov
aam
popf
add
fiaddl
gs
xchg
je
je
add
jo
add
lcall
pop
js
add
add
add
add
adc
add
mov
in
lcall
insb
cmp
add
das
push
push
push
push
push
call
add
stos
xchg
add
mov
add
fnsave
add
add
xchg
add
aam
mov
jne
mov
add
cld
mov
sub
test
cmpsl
repnz
lcall
cmp
add
int3
je
push
push
push
sub
add
sub
pop
pop
push
push
lea
push
call
mov
pop
add
add
fdivs
cld
add
add
add
add
add
add
repnz
add
shll
add
fsubrs
add
add
out
sub
pop
push
push
rol
pop
call
push
push
lea
push
push
push
call
add
bound
add
xchg
add
roll
ljmp
xchg
testl
xchg
add
add
add
lcall
cmp
rol
je
push
push
sub
inc
shr
dec
push
and
add
sub
ror
sub
lea
sub
inc
lea
ror
ror
pop
shl
inc
rol
pop
push
push
lea
push
push
push
push
push
push
call
shlb
add
iret
subb
add
lock
iret
add
enter
data16
push
jo
in
out
add
add
andb
arpl
add
repnz
fnstenv
mov
sub
pop
push
call
push
ror
sub
pop
cmpl
je
push
push
sub
sub
push
or
not
add
sub
inc
ror
inc
sub
xor
not
pop
inc
xor
sub
dec
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jl
add
stos
add
add
add
mov
add
add
gs
add
test
add
push
xchg
add
cmpsl
jns
fldl
xchg
mov
in
mov
in
add
pop
jo
notb
add
add
add
push
add
add
out
add
rolb
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
pop
add
add
cli
add
mov
jmp
fdiv
jp
loope
mov
ljmp
add
add
mov
in
add
jo
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
call
pop
mov
add
loopne
xchg
stos
movl
add
out
imul
lods
gs
mov
test
pushf
repnz
mov
push
lods
add
add
push
sahf
add
push
addr16
pop
cmpl
je
push
push
sub
ror
push
or
inc
add
ror
lea
sub
shl
xor
pop
shl
inc
add
pop
push
lea
push
push
push
push
lea
push
call
add
jl
test
mov
push
js
movsl
xchg
add
mov
mov
out
sti
xchg
out
out
out
lahf
add
mov
add
add
arpl
call
imul
lret
add
arpl
enter
add
add
add
fyl2xp1
mov
push
jmp
add
xchg
lcall
call
push
dec
add
pop
cmpl
je
push
push
inc
push
and
add
dec
sub
rol
sub
add
not
pop
inc
add
inc
pop
push
dec
xor
not
sub
pop
push
push
push
push
push
push
call
add
mov
popf
jmp
add
add
lds
mov
add
xchg
lret
xchg
add
push
fwait
add
cmc
cmc
add
push
add
gs
pop
call
cmpl
je
push
push
lea
sub
push
and
add
rol
lea
sub
lea
pop
inc
add
rol
pop
push
push
push
call
add
lock
pushf
leave
push
mov
mov
add
push
add
jge
jmp
add
in
jns
add
sub
pop
push
push
lea
shr
lea
sub
pop
call
push
push
push
push
call
data16
adc
add
scas
popa
mov
loopne
xorb
mov
add
add
add
jl
bnd
flds
mov
push
mov
add
in
cmpsb
add
add
add
xchg
xchg
add
add
lock
cmpl
je
push
push
sub
not
inc
push
and
add
sub
ror
rol
sub
add
shl
not
pop
shl
sub
lea
pop
push
push
push
push
call
lahf
rcr
lock
enter
add
add
add
mov
mov
cli
add
test
add
add
pusha
data16
add
add
rcr
add
pop
add
incb
jns
push
clc
add
add
add
test
xchg
add
call
push
shr
add
not
pop
cmpl
je
push
push
rol
not
push
or
inc
add
add
lea
shl
sub
sub
lea
add
pop
add
add
inc
pop
push
push
lea
push
push
lea
push
push
call
lods
stc
ljmp
add
add
insb
test
cmpsb
lahf
mov
add
xchg
mov
push
imul
sub
pop
push
push
add
pop
call
push
push
push
push
push
lea
push
push
call
add
add
add
jp
cld
data16
lret
add
add
add
add
push
pop
in
jne
push
add
add
add
add
cld
jae
add
scas
ret
mov
add
sub
pop
cmpl
je
push
push
xor
add
push
sub
add
sub
sub
rol
sub
xor
rol
pop
not
add
sub
rol
pop
push
dec
pop
push
push
shr
not
rol
not
pop
call
push
lea
pop
cmpl
je
push
push
push
sub
add
shr
rol
sub
sub
lea
shl
pop
pop
push
shr
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
push
iret
in
stc
filds
mov
add
pop
int3
add
lock
mov
mov
mov
pushf
add
stc
je
in
mov
in
mov
add
cltd
cld
add
add
add
add
jae
in
fdivr
lcall
js
xor
pop
ret
pop
add
add
sahf
mov
lret
push
call
mov
add
lcall
jle
add
add
je
push
xchg
int3
in
lret
into
pop
add
test
sub
pop
mov
push
push
call
mov
movsl
in
arpl
out
ret
popa
add
add
add
push
lods
push
flds
test
push
insb
ljmp
nop
cli
pop
add
add
jns
add
test
add
push
add
lcall
add
add
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
lock
lret
xchg
rolb
ja
les
cmc
pop
add
mov
add
lods
add
jo
pop
loopne
sti
cmc
add
lea
cmc
add
popa
add
mov
pop
jge
mov
roll
lds
add
lcall
or
add
push
ror
rol
pop
xor
pop
push
lea
sub
pop
pop
push
not
pop
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
mov
lahf
stos
fmulp
add
add
mov
fcom
ret
fiadds
into
addl
jb
add
add
xchg
mov
cmpsl
add
add
subb
jl
mov
stc
clc
add
lcall
push
push
push
push
push
push
push
push
call
mov
jge
push
jbe
add
ja
jecxz
add
insb
pop
bound
add
jge
jge
add
addr16
in
andl
pushf
stc
jno
sub
pop
ret
push
push
push
push
push
call
add
ljmp
cmpsl
add
add
stc
popa
add
mov
add
outsl
int
jle
popf
add
pop
jno
pop
push
add
add
jle
into
add
add
pusha
scas
jle
leave
add
leave
imul
bound
mov
push
lea
ror
add
pop
add
push
rol
pop
cmpl
jne
push
push
push
or
inc
add
xor
sub
sub
ror
pop
shr
sub
lea
sub
pop
push
lea
pop
pushl
push
dec
shr
inc
sub
pop
call
push
push
pop
call
push
lea
push
call
mov
jno
push
mov
add
add
add
add
ljmp
mov
add
jno
pushf
xchg
add
add
add
add
add
add
cli
sub
xchg
add
add
add
insb
add
scas
add
call
add
add
lcall
pusha
add
add
sub
add
push
push
lea
push
lea
push
push
push
call
add
pushf
aam
add
jmp
add
add
icebp
lock
jmp
mov
enter
add
push
add
add
jb
add
push
roll
add
pop
xchg
add
loop
lret
jns
fstps
add
mov
in
call
cmpl
je
push
sub
not
ror
pop
cmpl
jne
leave
push
push
push
lea
push
push
push
push
push
call
add
add
in
add
lahf
mov
add
pop
imul
int3
ret
pusha
out
jnp
add
bnd
mov
fnstsw
ja
popa
jae
pop
mov
mov
add
add
cltd
sub
roll
mov
push
sub
pop
add
push
push
push
lea
push
push
push
lea
push
call
mov
xchg
insb
xchg
icebp
mov
xchg
lods
call
add
add
fisubs
call
mov
mov
pop
filds
add
hlt
sub
pop
pop
push
sub
not
rol
pop
pop
push
ror
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
shll
add
add
mov
add
xorb
pop
jno
cli
imul
xchg
add
lcall
add
add
xchg
sub
pop
pop
push
dec
pop
leave
push
push
push
push
push
lea
push
call
add
add
add
jbe
add
add
mov
ljmp
int3
add
add
mov
in
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
xchg
mov
add
mov
add
pop
add
popf
add
clc
add
sub
sti
out
stos
arpl
ljmp
add
xchg
add
xchg
push
or
push
jnp
xorl
pop
ret
push
push
lea
push
push
push
lea
push
push
push
call
jb
arpl
add
sahf
add
jo
std
jge
ror
add
push
push
pop
in
mov
loopne
lcall
inc
sbb
add
cmpl
jne
push
push
shl
xor
shr
push
push
pop
add
not
shr
add
sub
pop
inc
not
ror
pop
push
dec
lea
shl
pop
pushl
push
xor
pop
call
push
lea
push
push
lea
push
lea
push
push
call
subl
loop
fldl
les
jno
outsl
add
pop
add
pushf
data16
popf
les
fs
add
add
add
lock
arpl
add
add
jb
jmp
add
add
add
add
fiaddl
add
add
push
push
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
testb
cli
add
add
jge
add
movsl
add
xchg
cmc
add
mov
add
add
push
xchg
add
push
loopne
je
add
lcall
rclb
sub
shl
pop
jmp
cmpl
jne
push
push
lea
push
call
mov
add
push
in
add
mov
add
add
int
jo
add
push
cltd
push
ja
fstps
add
cmp
lret
jae
add
adc
jns
add
ret
arpl
push
popf
enter
cld
add
jle
imul
add
add
add
repnz
add
mov
push
sub
pop
mov
push
push
push
shl
shl
push
push
pop
add
sub
sub
rol
inc
pop
dec
ror
sub
pop
push
push
push
push
call
add
add
add
cmpl
add
scas
add
loope
popl
jae
add
stos
sti
add
add
add
xchg
add
push
lcall
jne
push
lea
push
push
lea
push
push
push
call
addl
iret
add
jne
add
add
add
add
add
mov
lods
je
add
add
jb
add
jmp
test
movb
add
add
add
add
mov
jns
add
outsw
push
sbbb
pop
call
call
push
push
shl
shr
push
push
pop
add
ror
sub
pop
inc
add
lea
pop
push
ror
shr
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
call
add
cld
icebp
add
imul
rol
add
add
fadds
les
cmc
stos
add
ja
flds
leave
scas
jno
mov
add
hlt
add
lcall
shrb
das
sub
push
or
not
add
ror
lea
sub
shl
ror
pop
dec
inc
pop
push
push
push
push
push
lea
push
call
std
xchg
xchg
testl
mov
xchg
add
mov
out
lods
add
mov
pop
sub
pop
pushl
call
push
sub
pop
call
push
push
shr
push
sub
add
inc
sub
lea
xor
inc
pop
xor
sub
pop
push
push
call
add
add
jae
add
jp
test
test
add
push
in
in
in
sti
add
roll
out
arpl
add
loop
pop
add
orl
add
shl
add
cmpsl
add
add
je
push
out
pop
push
mov
jbe
std
cwtl
jle
add
sub
pop
pushl
push
sub
add
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
cmpsb
pop
add
loope
clc
mov
jo
pushf
filds
pop
mov
add
in
xlat
mov
mov
add
add
fidivrs
add
add
add
push
jecxz
jbe
les
cwtl
leave
mov
add
push
jae
mov
in
loopne
call
push
push
ror
dec
sub
push
and
add
add
shr
shl
sub
add
xor
pop
xor
pop
push
push
push
push
push
call
aad
add
add
pusha
fildl
cmpsl
add
add
mov
pop
add
add
xchg
add
mov
pop
add
mov
mov
in
in
pop
pushl
push
push
push
call
pop
nop
add
fiadds
jge
add
out
clc
add
fildl
lahf
xlat
xchg
add
cmc
xchg
jbe
add
insb
add
add
mov
leave
xchg
add
add
fwait
mov
lods
sub
pop
call
push
lea
add
pop
call
push
push
xor
add
push
xor
add
lea
rol
sub
add
pop
dec
add
not
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
loopne
mov
or
add
into
push
add
mov
add
jecxz
cmpsl
add
add
cmc
add
stos
cmpsb
fcmove
add
std
pop
push
hlt
add
mov
add
add
add
cmpsl
add
nop
xlat
icebp
int3
fwait
add
add
add
lcall
jne
call
push
sub
pop
call
push
push
sub
not
add
push
xor
add
sub
shl
not
pop
inc
xor
pop
push
not
dec
pop
pushl
push
lea
push
lea
push
push
push
push
push
lea
push
call
pusha
fwait
cltd
mov
jns
add
les
mov
lea
mov
push
ror
add
add
add
cmc
les
jns
incb
jo
movl
and
add
shrb
mov
xlat
ror
add
add
push
sub
add
xor
ror
rol
sub
rol
pop
sub
sub
shl
pop
push
lea
push
push
call
lods
sahf
test
add
loopne
test
lods
cld
add
add
pop
sar
cwtl
fisubs
mov
faddl
ja
add
add
jnp
add
jne
push
push
lea
push
call
mov
add
repnz
add
xchg
add
add
lret
mov
orb
stc
lcall
js
push
add
xchg
in
roll
hlt
add
cmpsb
ja
add
aad
add
loopne
popf
xlat
add
add
add
xchg
jo
xchg
popf
mov
mov
call
push
push
push
push
push
lea
push
call
mov
add
in
pop
add
mov
xlat
pusha
add
add
add
fcomp
add
pop
test
lods
pop
jno
mov
shrb
adc
and
add
sub
ror
sub
pop
not
pop
push
xor
pop
pushl
call
push
inc
pop
call
push
push
push
push
pop
add
inc
sub
sub
pop
pop
push
add
not
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
xor
pop
int3
fisttpll
add
add
jne
roll
lods
shlb
lods
pop
add
add
add
push
add
in
cwtl
add
add
xchg
cld
add
jecxz
add
je
jne
imul
jb
sub
pop
lea
push
push
lea
push
push
push
push
call
add
rolb
lds
mov
jmp
fistpll
add
mov
pop
call
ja
add
xlat
mov
in
mov
cmpsl
add
add
sbbl
add
add
stc
popa
push
fcoms
add
call
push
push
sub
push
xor
add
sub
sub
ror
rol
inc
pop
add
pop
push
sub
pop
pushl
call
push
xor
inc
xor
pop
call
push
push
push
or
not
add
lea
shl
sub
shl
add
pop
sub
shl
pop
push
push
push
push
push
lea
push
push
push
push
call
fwait
add
add
clc
add
cmpsb
add
mov
lret
push
add
add
movl
add
add
repnz
leave
add
mov
add
add
add
adcl
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
add
xlat
cmpsb
add
add
pop
cmpl
stos
call
mov
ljmp
add
test
jo
add
into
testl
rolb
mov
shlb
je
add
add
lcall
lret
add
imulb
imul
xchg
jbe
ret
sub
push
push
lea
push
push
push
push
call
test
arpl
bound
add
add
add
enter
add
add
jecxz
add
add
add
mov
jl
add
add
add
ljmp
lcall
shrb
mov
stos
push
sub
ror
dec
xor
push
sub
add
ror
sub
pop
sub
pop
push
push
push
call
cli
test
mov
push
xchg
cmpb
add
hlt
imul
add
xchg
mov
testb
push
cmc
sahf
imul
lcall
jne
push
push
push
push
push
push
lea
push
call
lcall
mov
leave
pushf
mov
arpl
jmp
in
add
clc
cmc
add
leave
in
add
clc
rolb
add
repnz
sub
pop
call
call
push
not
sub
rol
pop
lea
push
push
ror
shl
add
push
and
add
lea
sub
sub
add
sub
add
lea
pop
inc
ror
pop
push
add
pop
pushl
push
sub
lea
pop
call
push
shl
pop
push
call
push
push
not
lea
push
or
not
add
sub
inc
sub
ror
shl
pop
add
pop
push
not
rol
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
jle
popa
push
fldenv
scas
pop
jle
add
add
aad
add
add
add
add
mov
add
fiaddl
add
xchg
notb
jns
lock
shl
add
ljmp
in
call
call
push
lea
pop
call
mov
push
push
ror
push
push
pop
add
shr
lea
inc
sub
shl
pop
add
shr
sub
pop
push
push
lea
push
lea
push
lea
push
call
mov
add
push
add
xchg
add
pop
push
ljmp
add
add
add
pushfw
out
cwtl
add
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
roll
add
add
fisttpll
add
icebp
repnz
add
add
add
enter
mov
out
add
jge
movsb
not
add
fcomps
cmpsb
sbb
add
shr
add
add
testb
jecxz
push
add
mov
mov
leave
add
testb
add
ficompl
shlb
shl
fldl
xchg
add
mov
jnp
test
add
pop
lret
add
insb
mov
lea
in
clc
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
mov
hlt
add
add
icebp
nop
fucomip
jp
add
add
fadd
xchg
add
add
xchg
lahf
add
add
rcrl
jle
add
pop
mov
jnp
add
jno
add
mov
in
fdivr
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
call
xchg
add
add
add
mov
sti
jae
lcall
xchg
xchg
lock
loope
add
mov
stos
cmpsb
jp
add
jne
add
flds
shrb
pop
pop
add
add
testb
add
add
add
add
cltd
mov
push
add
xchg
sub
pop
call
push
push
lea
not
add
not
push
push
pop
add
shl
not
sub
not
add
shl
pop
add
shl
lea
pop
push
xor
inc
not
pop
pushl
push
shl
sub
shl
pop
call
push
push
lea
lea
shr
push
and
add
ror
add
sub
sub
pop
dec
inc
dec
shl
pop
push
push
sub
push
push
pop
add
inc
sub
sub
add
add
ror
pop
inc
pop
push
shl
shr
ror
pop
call
push
push
sub
push
push
pop
add
not
not
add
sub
rol
pop
dec
shr
pop
push
push
lea
push
push
push
push
call
lret
lret
add
stos
xchg
lret
test
add
add
aad
lcall
stos
jecxz
add
mov
int
add
jecxz
add
lahf
fwait
sub
pop
pushl
push
push
push
push
lea
push
lea
push
call
jmp
lods
pusha
add
xchg
add
pushf
add
add
cmpsb
iret
add
add
add
add
pop
add
lock
xlat
nop
mov
add
add
mov
add
cmpsl
cmpsb
add
jbe
push
add
fnsave
fistpll
add
movl
mov
add
pop
call
push
sub
sub
pop
mov
push
rol
xor
shl
pop
lea
lea
push
push
push
push
push
push
lea
push
push
call
add
testb
mov
mov
clc
jmp
xchg
add
add
add
stc
push
pop
xchg
add
push
add
stos
int
pop
xchg
sub
pop
push
push
sub
pop
push
push
rol
pop
push
push
not
pop
push
push
inc
pop
push
push
not
xor
pop
push
push
push
push
push
lea
push
push
push
call
js
nop
mov
mov
in
add
add
add
mov
faddl
add
add
jne
jns
xchg
rolb
add
fwait
hlt
in
push
cld
xchg
add
cwtl
mov
lcall
add
jne
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
out
mov
cmpsl
imul
push
add
add
add
add
add
add
add
add
xchg
add
add
fwait
mov
ret
add
addl
in
fcomps
add
push
hlt
push
push
dec
shl
push
sub
add
sub
lea
sub
add
pop
lea
dec
pop
push
push
push
lea
push
call
add
xchg
mov
jae
out
addl
add
add
jnp
add
add
sti
mov
add
sarb
add
xchg
lcall
add
add
mov
add
add
add
pushl
call
push
rol
add
rol
pop
call
push
push
call
pop
add
int
add
add
jecxz
in
mov
ret
add
add
pushf
and
test
push
sub
pop
mov
push
xor
add
not
pop
pop
push
push
push
lea
push
push
push
call
add
fdivr
add
rolb
push
mov
mov
add
xchg
add
mov
jns
fsubr
xlat
xchg
add
movb
add
out
rcrb
stos
mov
cld
mov
jbe
mov
mov
add
xchg
add
jb
pop
add
add
sub
pop
dec
jne
jmp
push
sub
shr
shr
add
pop
call
push
push
lea
not
shr
push
and
add
add
lea
sub
not
rol
pop
lea
not
shl
shl
pop
push
inc
shl
pop
pushl
push
sub
sub
dec
pop
call
push
push
push
call
mov
push
mov
pushf
clc
add
mov
add
add
imul
add
arpl
fcoml
add
mov
add
mov
gs
testb
add
lods
add
add
nop
cmc
push
add
add
out
add
add
rcr
idiv
add
add
add
mov
in
clc
pop
call
push
lea
push
push
push
call
mov
add
add
fs
cmpsb
std
add
out
xorl
mov
add
in
add
scas
add
fadds
ret
les
lock
mov
lea
push
push
add
sub
push
sub
add
sub
sub
not
ror
shl
pop
shr
pop
push
xor
pop
pushl
push
xor
shl
pop
call
push
xor
inc
shr
pop
push
push
shl
lea
xor
pop
call
push
push
ror
shr
push
or
inc
add
shr
not
sub
sub
dec
pop
rol
pop
push
lea
push
push
push
push
push
lea
push
call
push
add
imul
mov
ror
add
add
jecxz
stc
iret
mov
jo
filds
mov
lods
nop
stos
mov
add
jl
add
js
pop
lret
in
pushl
push
push
push
call
pop
add
add
cmpsb
add
add
addw
add
add
into
add
rcll
pop
add
test
add
mov
fistps
cmc
leave
imulb
test
out
lods
jmp
sub
pop
call
push
pop
call
mov
push
push
push
push
call
test
lods
mov
xchg
add
mov
mov
rolb
popa
add
hlt
jmp
xchg
add
nop
mov
cli
jae
add
mov
mov
add
push
jge
mov
add
fiadds
hlt
add
add
jns
add
add
hlt
add
add
add
xchg
in
mov
lea
push
push
shr
rol
push
sub
add
rol
inc
shl
sub
add
add
inc
sub
pop
pop
push
dec
pop
pushl
call
push
lea
push
push
push
lea
push
push
lea
push
call
mov
insb
add
repnz
insb
cltd
add
fisubrs
add
cli
push
lods
sti
add
xchg
jo
add
imul
mov
jbe
push
mov
add
pop
jne
add
push
cmc
add
add
push
xchg
mov
mov
add
add
add
pop
lea
push
ror
add
sub
pop
push
push
dec
pop
push
push
push
ror
inc
add
pop
pushl
push
push
add
shl
dec
push
and
add
shl
inc
xor
lea
sub
rol
shl
pop
add
sub
pop
push
push
push
push
call
roll
add
add
addl
add
fcmovnu
add
addl
lahf
test
mov
fdivs
shll
lret
push
xchg
imulb
add
jl
leave
stc
add
mov
add
addl
push
lret
sub
pop
push
call
push
push
sub
dec
inc
sub
push
push
pop
add
rol
add
sub
add
shr
sub
add
pop
add
pop
push
not
sub
rol
pop
pushl
call
push
push
push
push
push
push
call
add
mov
mov
xchg
mov
add
add
add
add
push
aad
add
push
ret
jne
lds
push
jns
pop
mov
in
hlt
jo
add
fwait
add
add
add
add
add
mov
lcall
call
push
push
shl
push
or
not
add
sub
xor
rol
add
sub
dec
add
shr
dec
pop
lea
pop
push
add
pop
pushl
call
push
push
call
add
je
jnp
mov
add
jle
insb
lcall
add
mov
add
add
cmpsl
mov
ja
and
add
xchg
fadds
add
lahf
add
sar
lods
cmc
addl
jmp
jecxz
cltd
mov
add
out
js
add
xlat
out
xchg
cmpsl
add
pop
shlb
fcoml
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
add
pusha
mov
add
add
stos
hlt
add
je
add
jmp
add
sti
rcr
in
add
add
loopne
push
add
add
add
push
fiadds
add
loopne
nop
mov
fldl
jno
mov
jmp
push
sub
ror
pop
pushl
push
rol
pop
mov
jmp
push
push
shl
push
sub
add
sub
ror
sub
lea
dec
pop
add
pop
push
inc
pop
pushl
push
ror
dec
sub
dec
pop
call
push
push
sub
pop
call
push
push
rol
push
or
inc
add
shl
sub
add
rol
inc
add
pop
xor
sub
pop
push
push
lea
push
push
lea
push
push
call
fimull
xchg
adcb
loope
bnd
add
movb
add
add
mov
add
xchg
add
add
cmc
add
scas
fwait
shlb
in
lret
hlt
mov
lock
test
test
mov
aad
addb
in
call
push
sub
pop
call
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
ret
mov
jecxz
movl
mov
xchg
out
add
mov
sti
mov
pop
push
out
add
lcall
in
in
lcall
ror
push
lea
xor
not
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
mov
pop
add
addl
test
add
add
roll
jmp
in
add
add
roll
add
in
mov
add
sarb
add
in
loopne
pop
pop
push
add
inc
dec
pop
pop
push
xor
dec
xor
pop
pop
leave
push
lea
shl
ror
pop
add
ret
push
sub
lea
sub
sub
pop
leave
push
push
lea
push
push
push
push
push
lea
push
push
push
call
sbbb
cwtl
fs
add
arpl
out
add
add
add
arpl
add
out
add
test
mov
outsl
les
nop
sti
add
add
add
pop
ret
push
push
push
push
push
push
push
push
push
call
add
fucomip
jmp
add
add
add
add
fwait
push
out
add
cmc
mov
add
add
add
loopne
lcall
in
push
rol
inc
add
pop
cmpl
jne
push
not
inc
pop
mov
jmp
push
push
call
add
add
mov
push
mov
push
add
add
jnp
add
add
mov
pop
cltd
mov
jmp
add
add
lahf
fldl
out
js
jb
icebp
pusha
addl
mov
add
add
lcall
inc
or
xor
inc
pop
and
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
lock
mov
add
mov
add
mov
add
add
stos
add
xchg
lret
mov
add
push
in
in
lcall
push
je
scas
push
push
lea
push
lea
push
push
push
push
push
call
add
rcr
add
test
bound
xchg
add
add
add
out
stos
mov
pop
jmp
scas
add
pop
add
jl
cli
add
imul
popf
add
hlt
out
in
fdivr
lcall
rolb
push
push
call
imul
add
loope
repnz
add
add
push
add
mov
add
add
mov
add
push
lret
pop
iret
gs
repnz
out
push
rolb
add
mov
add
push
add
mov
mov
lcall
dec
call
pop
push
push
inc
rol
pop
dec
sub
push
sub
xor
sub
pop
jmp
push
add
not
pop
sub
push
dec
sub
not
pop
pushl
pop
push
dec
sub
pop
sub
push
lea
push
push
push
push
push
push
push
push
call
xchg
loopne
add
cld
add
in
scas
jecxz
mov
mov
add
stc
ret
add
out
rolb
fiaddl
lods
in
pop
add
mov
fsubrl
jae
in
fcompl
cmp
jg
decl
jno
cmp
cs
push
push
lea
push
push
push
call
add
jae
jae
lea
add
pop
xchg
pop
js
out
imul
mov
shlb
push
xchg
pop
xchg
icebp
add
pop
jle
add
rolb
sub
add
int3
jle
add
cli
pop
mov
roll
lea
out
out
sub
pop
lea
push
shr
lea
pop
sub
mov
push
inc
lea
add
pop
shr
push
push
lea
push
call
add
add
loop
add
pop
add
add
mov
add
add
add
add
sahf
cmpsl
add
pop
add
scas
out
add
cld
cli
in
add
lcall
enter
inc
bound
test
push
dec
jl
push
lea
push
push
call
fwait
add
add
pop
mov
int
add
movsl
add
add
add
push
add
fadds
add
lret
add
jmp
rolb
add
stc
test
jp
jb
loopne
fidivrs
add
rcrl
add
mov
pop
add
sub
pop
sub
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
add
movsl
push
fadds
movsb
add
push
add
add
mov
push
add
in
push
push
jne
frstor
xlat
lods
ret
mov
xchg
fs
add
movl
insb
add
add
fwait
mov
addr16
pop
pushl
pop
push
pop
shr
and
push
pop
sub
push
not
ror
pop
cmp
jne
push
not
sub
not
pop
leave
push
dec
ror
ror
rol
pop
ret
push
push
not
lea
pop
mov
add
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
xlat
add
push
lods
pop
add
add
loopne
pop
add
add
mov
addr16
add
add
call
add
add
fbld
add
cmc
add
push
push
lea
push
call
mov
push
mov
jae
data16
fdivl
add
add
test
addb
mov
in
hlt
lcall
push
shl
rol
rol
pop
push
push
lea
push
push
push
call
int
int
jne
lods
xchg
add
scas
mov
add
aam
add
add
out
add
loopne
shr
mov
mov
add
add
popl
nop
lcall
nop
jecxz
testl
add
movsl
fcomps
mov
in
lock
push
push
not
pop
push
mov
push
lea
push
push
call
add
add
add
lea
add
mov
jo
add
scas
mov
add
jl
testl
mov
out
jo
mov
xchg
push
add
add
add
int3
sti
enter
jle
mov
sub
pop
lea
sub
push
lea
push
lea
push
push
push
call
xchg
push
enter
jmp
jne
lea
filds
leave
jne
call
lahf
add
testb
pop
test
roll
add
push
add
cli
mov
clc
add
sub
pop
mov
shr
push
sub
sub
add
pop
add
push
xor
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
add
incb
add
enter
add
jge
fsubr
mov
mov
add
mov
shll
add
add
mov
add
pop
fldl
imul
add
add
lahf
add
add
mov
jnp
insb
fildl
push
jmp
jecxz
jecxz
add
sub
pop
add
push
xor
shl
pop
mov
add
push
push
push
push
push
push
call
add
fs
in
add
add
lret
sahf
mov
xchg
add
test
pop
lret
jmp
arpl
add
addb
fisubl
test
add
add
add
mov
arpl
add
sub
pop
xor
push
push
call
lods
loopne
adcb
lea
loop
pop
iret
push
lcall
add
push
popa
xlat
mov
add
scas
mov
test
xchg
loope
add
add
add
ja
jl
add
push
sub
pop
mov
and
push
push
push
call
ljmp
add
fadds
lcall
cmpsb
add
add
loop
add
add
add
add
aam
imul
test
add
xchg
add
not
popl
add
xchg
jecxz
addr16
cmc
add
out
add
fs
pop
rol
rol
push
shr
pop
xor
push
sub
shl
ror
pop
inc
cmpb
jne
push
lea
shl
xor
shr
pop
add
cmp
je
push
push
push
push
push
call
mov
add
mov
shlb
aam
push
push
add
xlat
add
add
out
lock
lcall
out
mov
mov
imul
mov
add
add
jae
cmc
add
jnp
jae
add
add
push
add
push
add
lds
in
in
pop
add
push
push
lea
push
lea
push
call
push
add
mov
mov
bound
add
add
xchg
add
clc
test
lahf
pop
mov
jno
add
xlat
movl
lcall
add
pushf
iret
rolb
jge
xorl
sub
pop
cmpl
jne
push
push
push
push
call
mov
stos
add
rolb
lock
push
out
pop
rolb
jae
add
jns
mov
mov
mov
cmc
sbbl
testb
mov
add
push
add
scas
cmpsl
mov
mov
jnp
add
mov
lcall
rclb
pushf
mov
jecxz
arpl
sbb
xchg
push
mov
add
add
jle
add
add
xchg
nop
pusha
lods
popl
add
add
add
xchg
subb
add
add
add
add
repnz
add
jge
pop
imul
add
add
jmp
adcl
fs
sub
pop
pop
push
dec
lea
shr
shr
pop
pop
push
push
lea
push
push
call
add
add
loop
add
addr16
add
mov
add
outsl
add
mov
push
xorl
imul
add
xchg
add
add
ror
add
mov
mov
add
add
xchg
xchg
mov
mov
in
lock
lcall
pop
push
rol
shr
add
pop
pop
push
shl
pop
leave
ret
push
sub
ror
pop
mov
add
push
push
call
in
lcall
jbe
jae
jmp
out
mov
add
ja
rclb
add
add
nop
ror
pop
add
cmpsl
nop
test
jns
cwtl
xchg
add
cmc
enter
add
add
clc
add
add
add
lcall
push
sub
shl
dec
pop
push
push
sub
rol
shl
add
pop
add
push
push
push
push
push
push
call
add
addl
add
add
add
test
addl
add
in
out
add
add
add
add
imul
add
add
mov
add
roll
add
cld
popa
repnz
jae
push
jmp
add
mov
in
jne
popa
mov
cmpsb
sub
pop
mov
testw
push
push
push
push
push
push
call
add
cwtl
add
add
add
in
std
jmp
mov
shrl
add
fsubrl
nop
test
fistps
xchg
add
incb
add
add
data16
add
sub
pop
pop
pop
push
push
push
push
push
call
add
nop
add
push
add
add
jne
loopne
add
add
add
add
pop
mov
add
add
cmc
loope
out
xchg
push
lahf
into
stos
add
add
sti
call
in
in
lcall
add
push
push
push
lea
push
push
lea
push
call
add
add
xchg
stc
lock
incb
add
add
add
scas
testb
gs
jle
lea
sti
cli
jne
cmpsl
mov
in
loopne
push
call
push
xor
sub
pop
xor
pop
push
sub
pop
pop
push
rol
inc
pop
pop
push
lea
push
push
call
iret
add
add
js
pop
mov
mov
sar
mov
outsl
jmp
test
add
add
gs
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
jb
lock
jmp
mov
into
cmpsb
lock
nop
pop
mov
add
jle
add
fdivrl
aad
loopne
add
add
push
pop
in
in
fcomps
push
sub
add
shr
pop
leave
ret
push
add
pop
push
mov
push
dec
inc
pop
add
push
pop
push
push
push
xor
ror
pop
push
push
add
inc
add
xor
pop
push
push
shr
add
add
pop
mov
push
ror
ror
pop
push
push
push
call
add
add
lock
add
leave
shr
into
pop
mov
lods
in
loopne
push
xchg
add
add
add
into
iret
add
add
lret
add
sub
pop
pop
lea
push
not
pop
sub
push
push
call
jnp
add
mov
jne
add
lret
test
pop
int3
mov
add
test
faddl
xchg
add
in
add
mov
in
add
mull
pop
in
in
add
sub
pop
mov
push
lea
push
push
lea
push
push
lea
push
call
add
clc
mov
mov
add
in
fwait
add
nop
xchg
add
fistl
add
add
jno
mov
mov
xlat
cltd
sub
pop
shr
push
xor
add
dec
pop
add
push
add
pop
mov
push
push
push
push
call
add
cmpsb
clc
add
mov
je
add
in
add
add
mov
add
outsl
arpl
fwait
add
test
lock
cwtl
hlt
cli
jbe
push
add
add
add
cltd
mov
jge
add
fildl
cli
jecxz
in
lock
lcall
fsts
jns
jl
std
pop
pushl
push
push
push
lea
push
call
xchg
aam
add
test
aad
mov
fistl
lret
mov
pop
ret
mov
out
add
mov
lcall
inc
clc
mov
push
push
call
xchg
add
fcoml
test
jnp
test
int
push
add
add
add
mov
add
xchg
add
lcall
stc
xor
push
push
push
push
push
push
push
push
push
push
call
cmpsb
add
xchg
mov
add
pop
add
jmp
add
scas
pop
xchg
mov
add
in
lcall
ja
lods
addw
in
fdivr
lcall
adc
push
push
lea
push
call
test
add
add
add
loopne
lds
cmpsb
jecxz
xchg
add
add
jecxz
rolb
add
jb
std
add
cmc
add
in
hlt
pop
mov
push
xor
sub
sub
pop
add
push
push
push
push
lea
push
lea
push
call
faddl
test
jp
fstp
xchg
mov
fs
add
add
add
add
add
add
add
jae
mov
loopne
call
mov
push
aad
loop
add
add
add
add
in
add
lea
add
add
push
in
call
xor
rol
push
shl
lea
pop
nop
push
push
lea
push
lea
push
lea
push
push
call
add
scas
aam
stc
add
add
add
lret
xchg
jb
add
lods
add
mov
loop
ror
in
test
mov
decb
push
movl
add
add
cld
jno
add
stos
shl
clc
icebp
fldl
add
add
out
outsl
xchg
imul
nop
xor
push
xor
not
pop
nop
nop
push
add
sub
pop
inc
push
push
push
lea
push
call
popa
jns
mov
add
add
add
lods
add
popf
add
add
add
xchg
add
fsubr
loop
add
add
xlat
jmp
int3
add
shll
sbbb
xchg
add
add
jge
sub
pop
nop
push
xor
rol
ror
pop
nop
push
inc
pop
cmpb
jne
add
push
rol
add
pop
nop
nop
push
lea
pop
cmp
je
nop
push
push
push
push
push
push
push
push
call
add
int
mov
add
mov
jnp
pusha
shrl
add
loopne
xlat
lret
jp
test
add
push
push
mov
jge
jecxz
add
jno
loope
hlt
add
test
add
aad
jo
lcall
cli
leave
icebp
add
adcb
add
add
jmp
aam
mov
sub
pop
nop
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
stos
add
jle
push
popl
xchg
mov
rolb
bound
add
test
xchg
add
add
popl
adcb
mov
shr
iret
xchg
add
add
arpl
mov
insb
insb
add
cli
add
add
sub
pop
inc
push
not
pop
nop
push
pop
nop
push
push
push
push
push
push
push
call
jnp
add
add
ja
add
mov
add
add
enter
pop
mov
add
mov
add
popf
mov
mov
add
jne
jb
xor
push
ror
pop
jmp
mov
push
ror
shr
sub
shl
pop
add
movzwl
push
push
push
push
push
lea
push
push
call
add
mov
enter
add
jecxz
ret
add
mov
mov
faddl
add
nop
lret
call
movl
movsl
jle
add
xlat
add
lcall
ror
add
add
movsb
add
add
sub
pop
mov
push
push
push
call
add
jns
lret
mov
mov
add
pushf
push
lret
pusha
mov
xchg
lea
pushf
leave
add
mov
push
mov
data16
add
roll
add
mov
add
mov
add
add
leave
pop
pop
xchg
jmp
in
sub
pop
add
push
push
push
push
lea
push
lea
push
call
jo
out
add
add
xchg
add
add
jb
add
mov
int3
les
add
scas
fisubrl
leave
in
andb
cld
out
cli
mov
pop
add
in
add
iret
in
int
push
add
dec
hlt
push
push
push
lea
push
push
push
push
push
call
roll
add
add
nop
add
add
add
imul
add
gs
hlt
add
push
add
jbe
add
sti
add
jae
scas
add
stos
add
jmp
add
sti
fcomps
pushf
fldl
add
mov
fadds
lock
add
flds
mov
stc
fsub
mov
add
lcall
leave
push
push
lea
push
push
push
call
add
add
dec
pop
loop
call
add
call
mov
lods
add
int3
add
add
mov
loope
jecxz
xchg
sahf
add
add
add
dec
nop
add
lea
not
pop
shl
xor
push
push
push
lea
push
push
push
push
push
call
pop
mov
js
clc
add
pushf
add
add
add
mov
add
popf
add
ja
jp
in
push
add
cwtl
fs
loopne
mov
mov
sahf
sub
pop
shl
push
push
push
call
add
cmc
int
add
add
test
lcall
add
jae
add
add
push
push
popf
jnp
cmc
test
jb
add
popf
add
mov
add
add
mov
clc
jle
push
add
add
test
add
sub
pop
xor
push
ror
pop
shl
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
pop
fidivs
add
push
outsl
jnp
add
push
mov
mov
mov
pop
rolb
add
xchg
sub
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
add
loope
add
jne
bound
int
add
mov
imul
push
add
cmpsl
push
add
mov
add
add
lret
scas
arpl
cmpsl
lret
pop
add
add
rcll
movsb
cmpsb
sub
repz
call
add
add
pusha
add
cmc
add
add
add
jns
mov
mov
add
js
lods
icebp
js
sti
ficomps
add
jp
subb
xchg
imull
push
add
notl
add
movsl
add
push
cltd
stc
add
xchg
add
lcall
inc
hlt
push
xor
sub
sub
shl
pop
pop
pop
push
push
lea
push
call
add
add
add
mov
mov
push
mov
add
adc
pop
in
fcompl
add
rcrb
xlat
push
add
add
lods
fsubl
fadd
add
add
mov
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
add
mov
xchg
add
addl
icebp
add
ljmp
xchg
out
roll
bound
into
add
test
mov
add
test
add
lret
popf
push
lret
je
add
sub
pop
pop
leave
push
pop
ret
push
rol
shl
ror
add
pop
push
mov
push
rol
pop
push
push
shr
shr
pop
push
push
lea
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
notl
add
into
xchg
add
mov
xlat
add
pushf
loope
add
add
jbe
bound
add
add
mov
add
cmpsl
add
mov
add
add
jns
roll
sar
mov
add
stos
scas
stos
sti
add
dec
or
shl
pop
mov
push
not
xor
add
sub
pop
mov
push
push
push
call
add
data16
jp
xchg
add
fcomi
jb
cwtl
int3
add
js
add
add
in
mov
jo
imulb
movsl
add
stos
out
iret
loop
lods
xchg
je
lock
sub
pop
test
je
push
lea
push
lea
push
push
push
call
fldl
push
enter
fiaddl
add
xchg
mov
jns
imul
scas
mov
add
jo
lods
roll
mov
pop
gs
add
mov
fwait
mov
in
pop
mov
test
je
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
les
xchg
aam
mov
lret
ja
add
out
add
test
add
mov
add
add
or
add
add
push
fcomps
notl
not
rol
pop
mov
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
scas
cwtl
add
cli
out
mov
add
mov
mov
fildl
add
add
add
adc
add
rolb
add
jp
add
add
repnz
add
add
rolb
hlt
cmc
nop
xchg
xchg
mov
sub
pop
inc
cmp
je
push
xor
add
xor
rol
pop
test
je
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
xchg
loope
xchg
ljmp
add
xchg
cltd
mov
out
add
jae
add
jl
in
in
mov
inc
push
add
ror
sub
pop
cmp
je
push
push
push
push
push
lea
push
lea
push
lea
push
call
sar
lea
add
push
test
add
test
xchg
xchg
mov
jne
jbe
add
push
pop
repnz
clc
js
pop
jnp
add
pop
xchg
add
jb
add
out
gs
add
add
jo
in
sub
pop
test
jne
push
add
pop
xor
push
shl
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
pop
aad
add
add
lock
sarl
xchg
add
add
mov
lret
int
add
add
imul
call
push
loopne
pop
scas
stos
add
push
add
add
add
mov
rolb
out
into
mov
mov
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
call
rolb
add
sti
jl
lret
jnp
add
sbb
lcall
add
add
add
mov
mov
push
je
in
pop
sub
pop
pop
push
push
lea
push
call
movsl
out
add
add
ret
add
rol
add
lock
mov
fs
mov
jmp
add
lds
add
out
popl
add
add
aam
movsb
mov
mov
add
jmp
add
add
leave
ret
push
push
call
leave
pop
sarl
add
lods
negb
stos
out
add
add
jb
mov
lods
fsub
add
cld
add
add
add
add
mov
add
add
mov
add
shlb
in
add
mov
cltd
add
xchg
out
rolb
lcall
push
push
xor
pop
inc
push
push
push
push
push
push
push
push
push
call
movsl
imul
lock
add
add
insb
test
scas
add
addl
add
jb
test
add
add
add
loopne
mov
add
call
jns
movsl
fstpt
xchg
js
mov
xchg
add
call
add
sub
pop
cmp
jne
push
sub
inc
pop
lea
push
pop
mov
push
push
push
push
call
xchg
push
bound
add
rcr
in
jno
add
loop
add
movsl
mov
add
jl
pop
test
add
add
mov
mov
mov
imul
icebp
lret
flds
movsb
nop
loopne
outsl
add
add
add
add
add
mov
lock
test
je
push
add
dec
pop
mov
add
push
sub
sub
rol
pop
cmp
jne
push
lea
push
push
lea
push
call
add
add
cltd
shl
add
add
add
add
add
jle
cli
add
add
orl
lcall
add
inc
add
add
push
rol
shl
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
sti
in
add
out
add
add
pop
mov
jecxz
clc
test
mov
add
add
out
fcoms
cmc
add
into
mov
sub
pop
add
push
pop
cmp
je
jmp
push
add
add
shl
pop
xor
pop
push
lea
rol
pop
pop
push
push
push
lea
push
lea
push
lea
push
call
add
call
xchg
add
add
testb
lret
lcall
mov
mov
jno
add
test
add
jnp
in
call
cmp
pop
rorb
loope
push
call
push
cmpsb
outsl
test
add
cmpsl
mov
mov
mov
lock
jno
add
stos
fstl
rolb
add
ret
leave
out
add
out
lds
add
add
test
aad
add
lcall
leave
push
pop
ret
lea
push
rol
xor
inc
rol
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jbe
int3
std
fldz
mov
mov
mov
mov
pushf
popl
push
sahf
add
loope
add
add
add
mov
pop
add
lcall
pop
push
push
lea
push
push
push
push
push
call
jmp
pop
mov
add
ljmp
push
push
add
data16
lds
push
lahf
mov
nop
movsl
popf
xchg
lock
add
push
pop
movsb
add
pop
push
loopne
fisubl
testl
mov
pop
in
fs
add
enter
clc
shlb
add
add
add
pop
pop
push
push
push
call
mov
add
arpl
mov
rcl
jno
xlat
add
xchg
add
jle
add
in
mov
xlat
add
mov
shrb
lock
fnstcw
xchg
mov
loope
push
fadds
stc
scas
add
add
ret
push
push
call
xchg
data16
add
add
xchg
add
xchg
add
mov
add
mov
les
stos
add
push
mov
jmp
scas
jnp
add
pushf
add
fs
push
ror
mov
out
add
loop
add
mov
add
add
stos
push
add
sub
pop
mov
pop
push
push
push
call
push
add
add
add
outsl
add
sahf
test
out
lock
stos
movsb
add
int3
add
std
push
add
add
rolb
arpl
mov
mov
rcr
jb
add
les
add
xchg
popf
add
add
sub
pop
pop
push
shl
lea
pop
pop
pop
push
inc
shl
pop
leave
push
shl
dec
pop
ret
xor
cmp
shlb
cmp
xor
adc
and
adc
dec
cmp
sbb
cmp
dec
stc
cmp
xor
adc
jb
adc
add
add
cmp
pop
pop
cmpb
jae
pop
cmp
lods
cmp
sti
mov
add
ffree
outsb
adc
xchg
cmp
scas
dec
call
addr16
mov
mov
int3
adc
gs
xchg
ss
cmp
out
mov
pop
test
cltd
inc
daa
mov
cmp
repz
inc
xor
cs
cltd
mov
mov
repz
jge
cmc
mov
test
movsl
repz
std
lcall
push
cltd
ret
mov
sti
jecxz
dec
lahf
lods
push
aas
mov
aad
sarl
adc
addr16
xor
lock
movsl
andb
mov
xchg
cmp
jge
mov
xchg
mov
mov
add
sbb
dec
inc
xchg
pop
jb
inc
shl
test
cmpsb
fwait
outsl
and
loope
push
mov
ret
cmpsb
mov
inc
adc
and
and
test
mov
jecxz
inc
enter
add
test
mov
pop
sub
adc
out
call
in
lret
movsb
hlt
cld
add
push
orl
add
aam
ret
neg
leave
stos
roll
enter
stos
xor
push
sti
pop
jecxz
mov
mov
sub
inc
cwtl
jl
outsb
adc
jnp
aas
sub
pop
fmul
add
sbb
rcrb
mov
out
addr16
cmp
in
add
cwtl
sub
pushf
mov
xchg
mov
popf
mov
dec
cmc
out
dec
xchg
out
adc
lret
lcall
aaa
pushf
xchg
into
and
sarl
sub
adc
sub
outsb
jecxz
popf
sbb
sub
fisttps
push
out
mov
or
stos
or
pop
ss
or
xchg
test
lcall
mov
enter
aaa
sub
mov
dec
stc
mov
stos
add
mov
orb
sub
push
adc
mov
xor
add
cmpl
sub
lods
xchg
lcall
ljmp
ja
mov
sub
xchg
jnp
enter
xor
lret
xor
pop
mov
push
mov
popl
add
fsubl
push
jae
add
add
jbe
iret
pop
loope
cld
dec
jge
fimuls
loop
in
or
std
mov
mov
jp
mov
adc
dec
into
jns
sbb
mov
jae
adc
test
int
out
lods
subl
sbb
enter
nop
dec
aas
lret
mov
out
xor
test
loop
pop
in
mov
test
push
pop
xor
mov
out
mov
dec
repnz
pop
cmp
jnp
in
mov
xor
xor
mov
xor
dec
aam
aas
mov
repnz
cmp
pop
pop
movsl
push
jae
jmp
fwait
neg
xchg
add
sbb
in
push
xchg
add
test
mov
pop
adc
dec
lret
add
pusha
sbb
adc
icebp
mov
push
in
mov
inc
mov
movsl
nop
idivl
subl
inc
pop
push
jns
xor
xor
test
lcall
jb
add
lret
add
shll
add
ljmp
jge
mov
xchg
xchg
adc
popf
push
sbb
loope
enter
inc
push
test
aas
das
xor
jbe
inc
gs
cmp
clc
xor
mov
jmp
add
pop
ja
fisubs
mov
popa
mov
rcrb
cs
jge
jae
xor
dec
push
bswap
xor
mov
ljmp
mov
rolb
or
mov
es
jle
fwait
pop
int
add
stos
ret
addr16
sub
outsb
and
xor
jo
cmpsb
inc
aas
dec
jae
push
in
cmp
xor
setne
pop
jmp
mov
cmp
sub
clc
xchg
push
sub
jb
dec
ds
lock
in
adc
shll
imul
js
test
loop
push
cwtl
xchg
aam
or
mov
push
sub
sbb
test
mov
inc
or
ret
mov
or
test
jne
gs
mov
fnstcw
sbb
mov
out
add
xor
lret
mov
nop
mov
mov
jae
mov
mov
mov
add
das
jno
push
mulb
push
dec
imul
mov
rorb
xchg
xor
xor
aas
inc
mov
mov
out
push
pop
mov
mov
mov
nop
shrb
out
pop
jecxz
sub
pop
mov
sbb
xchg
push
stc
lret
mov
pop
cmp
fsub
mov
pop
lods
pxor
test
rcrl
or
test
mov
mov
inc
push
mov
mov
and
jns
mov
mov
cld
push
mov
cmp
mov
jge
mov
icebp
je
mov
or
pop
mov
xor
lock
lea
std
loop
pop
jo
push
dec
pop
mov
hlt
dec
inc
xor
xor
std
sbb
stos
imulb
adc
loop
add
and
pushf
adc
push
into
dec
jo
mov
xchg
jae
jbe
incb
mov
mov
loope
pop
sbb
imul
xchg
in
nop
push
and
cld
pusha
test
inc
dec
xchg
in
fwait
mov
into
pop
imul
jno
pop
popa
ljmp
test
sarb
mov
mov
inc
icebp
aad
adc
or
push
data16
jns
sub
hlt
stc
aam
or
cwtl
fdivrl
cmp
lcall
lret
inc
add
in
jno
lcall
pop
jmp
mov
adc
lret
push
cli
xor
inc
jle
std
rcrb
rcrb
lret
orb
mov
ficomps
pop
inc
loopne
push
movsb
add
pop
xchg
std
hlt
and
xchg
pop
xchg
sub
inc
dec
das
repnz
push
and
jmp
movsb
lcall
or
test
mov
mov
pop
dec
inc
fwait
das
mov
pop
add
ss
adc
adc
pop
sahf
jle
xchg
pusha
sbb
mov
dec
repnz
push
sub
jo
inc
push
mov
mov
add
leave
addb
in
mov
or
push
pop
pop
clc
jns
fcomp
sbb
cwtl
stc
and
and
std
adc
gs
out
jnp
pop
std
addr16
ja
movsl
inc
iret
sbb
jnp
mov
pop
xchg
sub
mov
aaa
or
and
loope
in
in
imul
xor
scas
into
push
add
pop
pop
loope
xchg
sub
jo
and
ds
dec
in
in
sbb
cwtl
stos
lds
mov
add
imul
test
dec
data16
sbb
or
pop
and
pop
ficompl
pop
xchg
jns
out
or
push
adc
data16
scas
imull
add
inc
ret
push
notb
add
mov
jnp
pop
stos
xchg
int
mov
aaa
fistpll
dec
mov
inc
rol
inc
bound
mov
push
ds
cmp
push
test
jno
push
clc
xchg
jmp
adc
and
ds
fbld
js
and
xchg
dec
jae
or
mov
negl
addr16
add
xchg
fbld
mov
mov
enter
cmp
inc
rclb
ret
ret
push
addr16
sbb
ret
xchg
fnstsw
outsb
stos
inc
push
push
out
sub
add
push
pop
pop
xchg
jae
cmpl
lock
inc
mov
xor
mov
adc
int
or
xchg
mov
cmpsl
inc
icebp
divl
mov
pop
jle
sub
sub
push
xor
jl
or
cmp
cli
mov
nop
pop
add
xchg
mov
xlat
lret
addr16
add
jle
sub
cwtl
mov
ss
push
pop
xor
fdivrs
pop
pop
inc
shl
ffree
shll
subb
icebp
xor
sub
mov
jne
bound
outsb
test
ja
cmp
dec
inc
loope
xchg
insb
cmp
leave
imul
ljmp
pop
jb
fstpt
jle
mov
fdivrs
pop
xchg
cwtl
cltd
js
in
clc
ljmp
xor
int
test
negb
mov
jecxz
iret
add
jp
dec
jmp
lret
pop
push
test
repnz
sub
frstor
repnz
inc
imul
jne
aad
lcall
les
data16
and
mov
sub
sbb
mov
push
mov
shll
jp
out
lahf
xchg
lods
stos
pop
test
xchg
jg
test
or
cmp
inc
inc
pop
mov
mov
push
cmp
mov
push
rorb
push
lods
cltd
xchg
call
mov
jnp
jns
lock
pushf
dec
shll
in
or
int3
pusha
inc
push
jne
xchg
lods
adc
not
dec
mov
idivb
pop
mov
iret
adc
inc
cmp
js
adc
adc
pop
mov
cmpsl
mov
scas
jp
lds
mov
cs
les
cmp
fiadds
mov
or
es
leave
mov
fiadds
out
xor
mov
popf
lahf
cli
jp
pop
call
fxch
push
mov
pop
arpl
shll
aaa
xchg
sub
mov
mov
andl
jmpw
inc
xchg
in
das
test
ret
mov
mov
jl
cmp
dec
cmp
or
scas
aaa
xor
push
or
fimuls
stos
fimuls
scas
add
insl
sub
adc
xchg
cmp
xchg
pop
lret
fbld
je
nop
dec
xor
mov
xor
xor
mov
dec
inc
pop
out
test
cmpsb
fistpl
mov
mull
pop
pop
imul
xchg
pusha
test
movsb
adc
lret
mov
sub
pop
outsb
xchg
bound
add
mov
fs
call
repz
int
imul
cmp
arpl
add
loop
mov
cmc
push
lret
sub
dec
adc
ljmp
cmc
adc
rorb
fs
aam
adc
aas
lds
push
ror
or
inc
cmp
pop
xlat
shl
jns
fsub
mov
shlb
leave
mov
inc
repz
mov
jne
rclb
out
pop
ffreep
cmp
sbb
js
hlt
inc
negb
pop
inc
std
daa
insb
gs
xor
ljmp
movsb
fwait
cld
sub
xor
xor
push
or
aaa
inc
mov
and
and
movhps
test
add
jecxz
mov
stos
xchg
in
adc
fidivrl
xor
idiv
sti
jp
push
mov
sarl
add
sahf
sahf
out
or
lods
add
pop
push
rorb
sbb
sub
sti
xchg
or
fcoml
dec
mov
mov
sub
int3
fildl
sti
cmp
data16
xchg
push
push
mov
push
xor
xchg
ret
xchg
mov
xchg
inc
loope
or
mov
inc
aas
dec
sub
lcall
sub
xchg
ljmp
bnd
gs
cltd
mov
inc
adc
stos
outsb
push
mov
addr16
lahf
stos
jl
pop
scas
pop
shrb
push
xlat
pop
aaa
push
nop
mull
push
movsb
xchg
into
jae
call
mov
dec
pop
xchg
ficomps
and
out
outsl
mov
mov
jne
jbe
xor
or
lds
pop
mov
xor
jb
aad
dec
aam
mov
xor
cmpsl
fs
jnp
aas
mov
dec
pop
popa
lea
sub
stos
xchg
and
push
imul
das
fisubrs
mov
cltd
lcall
dec
aaa
arpl
xor
pop
les
jecxz
shll
scas
into
out
mov
lods
pop
insb
test
les
adc
mov
int3
jb
push
lcall
mov
ljmp
xor
mov
pop
push
fistl
sbb
dec
jbe
xorl
mov
in
ret
add
loope
out
in
arpl
repnz
dec
jno
test
jecxz
sbb
imul
inc
aaa
add
orb
pop
out
mov
lods
inc
adc
inc
mov
mov
push
and
push
cmpsb
dec
pop
dec
jle
adc
cs
inc
cmpsl
mov
clc
nop
das
sub
mov
mov
jle
in
int
lods
clc
push
and
pop
lret
andb
add
orb
add
inc
test
cmp
fidivl
dec
jle
aad
xchg
adc
lods
cld
shlb
in
mov
push
xchg
movsl
cli
loope
das
int3
jbe
jl
pop
out
pop
lds
aas
adc
pop
mov
sub
repz
xor
cld
mov
pop
orb
lock
int3
mov
and
fldl
cmpsb
stc
orl
add
loop
in
adc
movsl
insl
mov
cli
mov
and
push
jae
ret
add
inc
cltd
cmpl
mov
mov
outsb
mov
or
xchg
movsl
mov
sub
addr16
push
movsl
push
jmp
xchg
adc
cmpl
jle
stos
xor
data16
lcall
sub
shrl
sbb
xchg
jp
ljmp
or
fwait
iret
cmp
mov
jo
pop
pushf
insl
push
lret
push
inc
pop
divl
shll
pop
sbb
insl
and
push
sub
faddl
pop
ljmp
dec
out
cld
call
movsl
stc
insb
cwtl
xor
adc
push
push
pop
ss
aad
pop
outsl
push
loope
sub
mov
xchg
mov
cs
popa
aam
stos
repnz
int3
fisubrs
cld
pop
jnp
adc
pop
inc
jnp
mov
jecxz
sbb
daa
into
imul
dec
gs
adc
repz
cltd
shlb
add
mov
dec
ljmp
xchg
andb
insl
mov
adc
testl
adc
lds
mov
fcoms
setns
aas
add
push
push
and
popa
jo
dec
out
fwait
cmp
call
in
mov
add
out
in
xlat
push
fcoml
pushf
iret
sub
insb
mov
in
add
shlb
ljmp
mov
mov
fsubrl
ret
cltd
sar
insl
cmp
mov
inc
pop
mov
repz
test
xchg
jecxz
imul
add
adc
lahf
lods
jo
scas
icebp
push
popf
or
cmp
hlt
add
in
bound
mov
aad
cmp
out
fwait
mov
subb
es
scas
stos
sbb
cld
xchg
push
inc
pop
jecxz
xchg
mov
mov
movsb
nop
or
xchg
xor
dec
mov
les
add
mov
add
xorl
vunpckhps
push
test
pop
add
mov
jmp
outsb
pop
data16
mov
add
fimuls
fstl
aaa
andl
pop
test
lret
test
jmp
insb
add
lods
call
inc
stc
cld
xor
in
fwait
xchg
mov
xchg
xchg
in
lret
jbe
dec
mov
mov
in
jae
sbb
mov
push
pop
call
lds
adcb
in
adc
xchg
insl
dec
or
out
cli
jns
lds
xchg
cmc
test
sub
shr
dec
adc
idiv
or
adc
enter
dec
daa
cmc
lret
pop
and
jo
dec
lret
push
arpl
and
aad
xchg
popfw
mov
pushf
pop
sbb
ljmp
inc
pop
shlb
fucomip
jle
pop
ss
sub
repz
stos
inc
push
push
dec
pop
and
push
push
fisubl
and
jnp
dec
jno
xchg
xchg
movl
mov
fildll
pusha
xbegin
add
js
test
mov
hlt
push
lea
push
adc
jmp
xorb
pop
inc
push
daa
data16
scas
cwtl
aas
pop
loope
xor
add
in
jmp
mov
sbb
jp
adc
inc
cmp
es
mov
push
push
add
jecxz
aad
mov
xor
ja
rorb
daa
dec
xchg
test
fwait
sub
add
add
insb
jo
insl
cmp
xchg
shlb
insl
fdiv
mov
inc
test
hlt
sbb
call
mov
push
inc
dec
sub
xor
ja
out
iret
or
xor
icebp
jmp
pop
cmpsl
insb
test
sbb
jnp
mov
rcrb
adc
xor
or
mov
scas
loop
icebp
inc
mov
xchg
or
and
push
push
rol
jns
mov
push
cs
mov
popf
ret
out
adc
in
sbb
inc
subb
in
push
mov
lahf
jae
push
push
cmpsl
mov
xor
mov
stc
aad
ret
push
jb
pusha
fbstp
jb
inc
jl
lcall
into
ror
aaa
adc
sub
mov
lret
add
or
cwtl
push
push
nop
in
xchg
adc
gs
frstor
xorb
xchg
inc
jge
sbb
inc
adc
dec
repnz
pusha
into
cltd
fsubs
jg
jns
sub
sarb
jecxz
leave
cmpsb
or
daa
cmpsl
jl
icebp
stos
jl
adc
xlat
mov
sub
jl
jl
add
mov
mov
lret
add
pop
addr16
inc
insl
and
pop
insl
mov
jbe
lahf
xor
xorl
aaa
xor
in
xchg
xor
stc
lcall
xchg
cmp
outsl
cmp
sub
xchg
bound
rclb
xchg
inc
pop
mov
mov
test
pop
ja
sarl
inc
aad
dec
test
add
fsub
cmc
add
incl
or
loope
ret
pop
inc
fwait
and
rcll
add
in
xchg
jecxz
scas
pop
push
xor
stc
jne
sbb
push
out
aas
push
fcompl
dec
imul
mov
call
test
test
jp
sub
mov
lods
pushf
enter
roll
pop
ljmp
dec
push
test
xor
dec
inc
sbb
xchg
cmc
dec
cmp
sbb
gs
rcrb
pavgw
inc
enter
aaa
mov
cmp
cmp
testl
stos
sub
xchg
lahf
push
and
stc
out
mov
aaa
pop
mov
cmpl
lds
add
popa
testb
int3
and
xchg
jns
scas
clc
mov
mov
fisubrs
insl
test
jmp
mov
pop
imul
test
xchg
lock
repnz
lea
dec
and
dec
push
loope
mov
mov
repnz
in
push
mov
add
nop
push
xor
mov
pop
adc
push
ljmp
xor
popa
mov
les
jg
ljmp
rorb
out
popa
mov
pushl
xchg
jo
arpl
mov
xor
addl
loop
leave
test
adc
insl
inc
pop
pop
push
data16
out
pop
mov
lea
mov
ljmp
adc
xor
cmp
arpl
mov
iret
cmp
mov
loopne
iret
cmp
mov
cld
inc
sbb
lcall
loop
or
je
dec
test
push
stos
daa
dec
and
inc
inc
push
mov
add
aaa
xor
fimull
in
xchg
les
dec
mov
jne
pop
mov
scas
ja
jnp
mov
lahf
pop
fdiv
jbe
fs
sbbb
add
shl
out
leave
push
adc
or
fisubs
sbb
xchg
dec
dec
cmpsl
int
stos
mov
dec
sbb
in
sbb
ljmp
sub
pop
jp
rolb
xchg
adc
lods
aam
mov
pop
mov
push
pop
inc
test
out
movsl
fcmove
sbb
ds
xor
test
or
pop
jp
dec
sub
or
rdtsc
xor
sarl
pop
popf
iret
outsl
bound
mov
das
gs
out
shl
inc
xchg
xor
in
sbb
leave
clc
dec
or
add
dec
shr
mov
and
sbb
insl
sbb
hlt
xchg
mov
ds
add
lahf
pop
xor
mov
daa
cmp
lea
out
lods
stos
jmp
sbb
add
in
sbb
inc
and
push
xlat
aaa
mov
lret
fs
outsb
divps
mov
xchg
mov
out
cmp
sahf
mov
insl
mov
push
iret
and
xor
aad
adc
jbe
jecxz
or
sub
mov
cmp
mov
ret
or
leave
push
mov
mov
icebp
lods
movsb
push
sti
aad
add
sub
pop
std
mov
fbld
sbb
rclb
lods
push
inc
pop
fcomp
xchg
pop
mov
and
repnz
lcall
jbe
leave
xchg
nop
sbb
ret
les
ret
out
repnz
add
outsl
push
lret
sub
shl
iret
ror
inc
loope,pt
pusha
dec
xchg
inc
mov
stos
xchg
and
pop
sahf
jae
and
add
mov
or
jg
fwait
nop
mul
and
ja
cwtl
adc
push
mov
ficompl
xor
fcmovb
and
das
jno
lods
dec
repz
dec
sub
int3
push
push
mov
sbb
cmp
adc
dec
xor
sub
in
jns
cmp
pop
mov
bound
mov
sub
and
push
adc
out
xchg
pop
push
mov
jg
xchg
mov
mov
subb
mov
push
stos
or
mulb
into
jg
inc
pop
mov
dec
pop
repnz
ret
jno
lahf
mov
rolb
dec
sbb
push
into
or
sbb
push
xchg
and
jb
jg
dec
movsb
or
push
sub
ja
std
je
arpl
mov
jno
xor
mov
mov
shlb
sbb
sub
bswap
xor
aad
push
pusha
out
repnz
push
pusha
push
es
adc
in
ds
test
fiaddl
xor
add
movsb
xchg
jl
and
data16
sub
mov
test
in
mov
or
insl
fwait
loop
sub
daa
nop
cltd
mov
lcall
enter
fcomps
jne
push
lock
inc
cmp
pop
pop
test
popa
ljmp
sbb
nop
daa
jg
and
adc
cmp
pop
repnz
mov
add
cmpsb
out
mov
popf
add
cmp
jmp
add
out
xor
idivb
or
fdivrs
jne
or
jge
inc
test
cld
addr16
xor
adc
adc
xchg
mov
or
push
out
sahf
xor
adcl
notl
aad
add
subb
sbb
hlt
mov
cmp
fwait
in
adc
and
jno
push
aas
xlat
mov
dec
push
push
mov
and
xchg
fisubs
fbstp
outsb
jae
pop
mov
sbb
push
push
xchg
mov
rclb
outsb
push
adc
shll
ljmp
pop
mov
cli
jns
lahf
cmp
or
inc
test
movsb
inc
pop
jl
fcmovnu
adc
adc
std
dec
loope
sbb
inc
andl
aam
nop
xor
cmp
and
pop
jg
loop
pop
dec
xor
imul
mov
cmp
inc
subb
mov
lods
adc
mov
mov
icebp
enter
es
out
push
push
insl
mov
or
pop
mov
push
inc
stc
fimuls
jl
outsl
repnz
xor
aam
pop
mov
test
rcrb
iret
mov
shrb
and
inc
mov
mov
imul
dec
fimuls
lahf
mov
dec
call
pop
insl
cmp
adc
test
cld
leave
or
stos
mov
ds
xchg
cmpsl
sbb
sub
adc
and
or
ljmp
xchg
cmp
mov
dec
ljmp
pop
sbb
cmp
aad
dec
sbb
add
dec
mov
movsb
or
in
mov
je
jecxz
mov
jl
sti
movsb
xor
and
xchg
lahf
clc
cmpsb
add
cmp
xchg
mov
jbe
adc
sbb
pusha
pop
jb
adc
mov
das
data16
cltd
loop
jb
sbb
cwtl
jg
sbb
pop
sbb
adc
push
mov
bound
dec
mov
or
scas
movsl
popa
in
lds
mov
icebp
rorl
popf
jb
in
and
mov
cld
xchg
pusha
adc
xor
lods
movsl
out
ja
add
lret
xchg
enter
mov
mov
inc
in
rcll
test
call
sbb
cmp
push
lods
popf
lods
test
adc
mov
lock
sub
mov
mov
pushf
mov
es
jle
fsubrl
pop
add
test
into
cmp
push
int
jmp
icebp
mov
arpl
in
pusha
es
or
test
nop
sub
repnz
inc
fdivl
lea
lea
sti
mull
lahf
les
push
push
lods
sbb
arpl
mov
scas
push
repz
fsubrs
jnp
jge
dec
xor
cwtl
inc
inc
imul
mov
mov
xchg
out
dec
xchg
push
outsb
test
mull
and
push
cmp
sti
mov
jge
jl
rcrb
nop
inc
xor
dec
inc
or
cmp
imul
test
sub
push
call
jp
imul
out
sbbl
push
jne
cmp
and
xacquire
push
pusha
ret
outsb
call
sub
cs
in
out
add
sub
cs
or
cmp
push
pop
lods
arpl
fimuls
push
adc
and
scas
loopne,pt
xchg
out
push
jmp
mov
jp
add
dec
mov
and
sbb
ja
or
adc
dec
jl
dec
movsl
cmp
jb
test
nop
fdivl
adc
jle
jo
shlb
add
add
push
std
xchg
repnz
and
fs
mov
xor
imul
lret
popf
add
xchg
inc
adc
iret
sahf
pop
xor
imul
cmpsb
xchg
jno
lcall
inc
pushf
adc
insl
push
addr16
lods
xchg
lds
mov
and
inc
and
adc
insb
lds
mov
sarb
shrl
mov
or
inc
jns
xchg
repnz
push
dec
dec
xor
mov
aam
das
negl
push
outsb
inc
out
jge
aas
mov
or
int3
push
inc
fdivl
les
push
scas
mov
inc
ljmp
popa
and
mov
xchg
sbb
ljmp
popa
push
jmp
xor
mov
and
pop
mov
and
jae
lcall
mov
lcall
sub
cltd
adc
jns
nop
inc
gs
int
hlt
ret
jnp
pushaw
dec
sub
dec
jns
out
je
mov
add
xor
xor
fimull
cmp
out
dec
lea
pusha
xor
sar
pop
cmpsl
xor
je
cmp
adc
std
pop
mov
into
fstps
or
jl
jecxz
dec
pop
sub
mov
cmp
push
fnstcw
hlt
adc
inc
int3
sti
or
xor
jnp
ljmp
adc
jb
int
shll
sbb
xchg
call
lods
jg
jb
mov
xchg
stc
or
xor
lcall
mov
mov
in
dec
out
and
adc
xor
xchg
mov
insb
fcoms
pop
ljmp
xor
aas
jae
aaa
mov
jae
ja
inc
sbb
incb
or
inc
sbb
xor
mov
cmp
gs
pop
and
mov
scas
dec
add
enter
nop
mov
leave
xor
add
push
push
xchg
jl
mov
push
int
inc
adc
sahf
cmpsb
loope
idivb
cmp
pushf
xor
push
lods
jno
lret
cmc
ficomps
mov
inc
sti
js
pusha
push
mov
movsl
jno
cld
mov
or
sarb
sub
jge
imul
mov
mov
sub
jge
xor
out
pop
and
test
movsb
test
xor
pop
cmp
inc
or
jg
push
inc
lcall
repnz
pop
and
jae
testl
mov
repnz
add
insb
fdivrs
add
xchg
pop
jp
movsl
pop
hlt
mov
xor
neg
cmpl
int
shlb
int
cltd
subb
stos
cmpsl
hlt
mov
stos
sub
jns
adc
mov
dec
pusha
pusha
push
inc
add
pop
out
cld
and
les
jae
ljmp
enter
jo
stc
lea
and
fisttpl
mov
js
cmp
shlb
repnz
movsb
push
add
jecxz
add
loopne
adc
testl
pop
xor
mov
pushf
inc
xor
shll
pop
sub
jae
decb
mov
shlb
mov
or
fiaddl
pop
or
out
int3
das
in
aas
jge
je
aas
cmp
dec
fistpl
adcl
leave
sub
filds
popf
popf
fs
iret
nop
enter
push
fnstcw
je
mov
sbb
inc
xor
bound
push
cmp
hlt
sub
jae
mov
aas
xchg
mov
or
mulb
arpl
cmc
ss
push
stos
stc
pop
mov
or
mov
push
insl
mov
cwtl
lods
rcll
test
mov
pop
das
enter
or
and
xchg
cmp
xchg
loop
or
push
sarb
jne
in
gs
xor
xor
inc
jge
fsubr
ret
repz
add
outsl
xchg
ljmp
xor
lods
inc
scas
xor
sbb
repz
mov
sbb
pandn
cmp
mov
push
pop
cmp
xorl
sbb
out
add
and
shll
stos
mov
in
adc
enter
mov
or
mov
ret
adc
test
push
xor
mov
rcrl
mov
and
push
fbstp
mov
out
in
outsb
int
test
add
fidivrs
pop
mov
iret
sub
mov
fstps
iret
sub
nop
push
imul
insb
mov
mov
dec
mov
dec
push
dec
push
cmpsl
xchg
inc
mov
ret
std
adc
inc
jmp
inc
add
mov
outsb
adc
push
inc
andl
xchg
pushf
push
and
loopne
subb
andb
mov
sub
push
jbe
xchg
rcrb
in
sbb
dec
inc
sub
cmpsl
ja
popa
arpl
shlb
lret
xor
dec
fisttps
mov
es
mov
mov
insl
cmp
add
gs
inc
out
ret
jl
and
cmp
ficoms
xchg
pop
mov
aad
hlt
lahf
aad
mov
pop
jno
insl
out
xchg
sbb
and
push
popf
iret
push
sarb
and
jl
jmp
or
dec
xor
scas
xor
pop
and
fwait
add
fisubrs
sbb
xor
movsb
push
xor
dec
clc
arpl
popa
bound
fistpll
inc
jle
sahf
sub
sub
push
cmp
es
pop
mov
xchg
mov
fwait
jo
adc
int3
lcall
movsl
movsb
repz
imul
out
aaa
lods
and
fwait
pop
cld
out
xchg
orb
out
xchg
test
cltd
inc
pop
pop
cltd
lock
or
repnz
test
jle
out
sbb
cld
in
mov
mov
loope
xor
push
lods
add
out
sarb
test
ljmp
add
pushf
add
jbe
popf
mov
mov
pop
inc
inc
hlt
cmpsl
shll
xchg
repnz
adc
jbe
fisttps
inc
ret
push
xchg
dec
stc
xchg
inc
xchg
sahf
push
movsb
gs
cmpsl
out
in
mov
decl
sbbb
addr16
out
and
call
add
int
cltd
pop
adc
iret
ret
pop
ja
xlat
cltd
ds
jae
inc
sbb
jecxz
xor
jnp
into
or
xor
out
icebp
loop
sub
jno
inc
icebp
enter
nop
cmp
fstps
cld
xlat
xchg
stos
dec
enter
sbb
in
stos
and
aam
mov
fbstp
add
xchg
aas
aam
or
movsl
dec
test
mov
lods
sub
cmp
sub
xor
xchg
das
xchg
push
xor
shl
scas
popf
push
scas
xchg
in
ret
movl
xor
sbb
mov
cmpsb
sub
adc
divl
push
sbb
inc
ds
outsb
test
stos
in
pushf
or
sub
mov
movsl
rol
inc
iret
jne
arpl
adc
adcl
ss
jno
jno
push
or
and
insl
pop
mov
jle
inc
dec
aam
sub
sbb
mov
subb
pusha
popf
mov
jnp
out
push
mov
aam
rorl
mov
or
adc
es
push
pop
add
cmpb
push
push
data16
sbb
leave
cmp
xchg
rcrb
mov
or
in
mov
xor
pop
dec
gs
das
outsl
out
aad
insl
notrack
sarb
shld
add
mov
inc
rcrb
pop
pop
xchg
jl
and
xchg
jbe
push
bnd
push
mov
repnz
mov
in
push
pushf
pop
pop
sahf
xchg
pushf
fxch
sti
notl
loope
or
fcompp
xchg
xor
pop
scas
adc
dec
pop
lret
push
adc
pop
xor
xchg
es
pop
jb
outsl
enter
push
stos
ss
daa
mov
test
fnstsw
test
jbe
lods
mov
out
sbb
lods
mov
sub
mov
loope
push
push
lea
lcall
sub
popa
adc
push
std
lods
daa
push
or
mov
add
aad
imul
cs
movb
fstp
jnp
inc
roll
fnstenv
push
dec
pop
pop
or
push
out
jg
rorb
sahf
xchg
xchg
cltd
inc
call
outsl
mov
sbb
loope
xchg
addl
lcall
push
in
sub
sub
jbe
cmpl
int
mov
jns
outsl
mov
fs
xor
daa
add
lret
leave
stos
fst
lods
add
clc
std
rol
call
dec
adc
add
dec
pushf
lock
arpl
mov
mov
xor
sti
test
push
xchg
out
sbb
fcmovb
jns
sub
dec
ja
out
ljmp
pop
aam
jnp
add
out
je
sbb
dec
mov
sti
aad
dec
hlt
mov
jge
dec
add
xor
sbb
dec
sub
mov
ja
pusha
test
xor
mov
pop
jge
inc
mov
cmp
stos
cmpsl
daa
adc
add
jmp
xor
jbe
jne
lret
popf
sahf
rcl
add
sarb
sub
pop
test
mov
mov
mov
dec
mov
icebp
cmp
divl
testb
loop
movsb
jne
xorb
pop
icebp
and
scas
dec
mov
add
sbb
dec
jg
push
stc
lcall
sub
addr16
js
jecxz
cmpsb
push
fsubr
pop
mov
mov
repz
std
inc
movsb
test
adc
repz
aad
cmp
inc
sbb
into
imulb
sbb
mov
xchg
and
sbb
jl
mov
mov
add
xor
cmp
push
cmpsl
pop
push
in
clc
stos
mov
inc
lock
cmp
adc
mov
dec
loope
addr16
repz
jns
inc
addr16
call
les
loopne
push
pop
loop
out
imul
gs
call
mov
jns
adc
sbb
mov
mov
into
lret
sub
jge
test
outsl
mov
rcl
in
aad
in
mov
push
cmp
cmc
lcall
xlat
int3
xor
movsb
mov
pop
mov
enter
fiaddl
je
repnz
inc
pop
nop
jno
or
aam
push
addr16
leave
and
add
ficoms
fcmovu
jo
xchg
repnz
icebp
pop
scas
cmp
pop
rolb
testb
or
pop
fwait
rcrb
xchg
dec
notb
xor
das
pop
push
test
notl
mov
sbb
pop
xorl
rorb
testb
and
jle
int3
sub
sub
cltd
clc
pop
adc
jnp
addr16
lret
add
cld
scas
in
imul
xor
add
cli
cli
fwait
test
push
popf
repnz
dec
in
fwait
icebp
scas
mov
jbe
mov
mov
fildl
xor
scas
jbe
movsl
mov
dec
fdivrl
sub
sbbb
mov
sti
inc
add
test
js
imul
gs
and
dec
or
or
sti
jbe
cmc
out
das
in
sub
ficompl
mov
dec
fimull
mov
xlat
fisubl
fdivs
aas
call
xchg
out
rolb
mov
cwtl
push
lods
inc
jg
cmpsl
les
test
decb
push
dec
push
pushf
jle
popf
test
push
dec
out
data16
in
and
dec
dec
out
insl
push
cmp
and
mov
dec
lds
push
fadds
xor
out
mov
pushf
scas
xlat
int3
xor
xor
outsl
xchg
movsl
lahf
cmpsb
stos
xlat
scas
add
ret
sbb
test
loope
dec
or
xor
les
sbb
xchg
jp
pop
scas
dec
jmp
divb
lods
fnsave
pushf
jb
popf
add
mov
pop
mov
xor
dec
sbb
sti
jmp
and
outsl
mov
sti
adc
les
pop
adc
push
mov
add
push
outsl
cld
add
dec
inc
xor
aam
movsb
sbb
cli
shrb
and
popa
adc
out
or
cs
sbb
popa
int
les
gs
dec
mov
popf
cld
jns
mov
subl
dec
xor
dec
insl
aad
push
int
inc
mov
adc
das
inc
adc
sbbl
fcomp
inc
push
leave
aad
mov
pop
adc
in
rolb
pop
cltd
xchg
jae
lock
cmp
sub
daa
mov
cmp
jnp
imul
push
jmp
bound
stos
lret
and
cmpsl
mov
pop
cld
shll
and
mov
test
jp
fbstp
jg
sbb
sahf
je
hlt
test
xor
fwait
adc
imul
fdivs
stos
testl
in
mov
dec
das
je
inc
into
arpl
popf
xor
cli
push
incb
or
lcall
sub
rorl
ret
dec
cmpsl
inc
in
in
mov
pop
int
push
mov
push
mov
testb
push
dec
andb
sub
sbb
pusha
repz
enter
sbb
jecxz
inc
jmp
push
jb
sar
sub
mov
lds
jg
sbb
pushfw
xor
sbb
shlb
sub
pop
push
fs
es
push
adc
sub
mov
outsb
mov
push
push
push
leave
add
pop
xor
icebp
sbb
inc
push
sub
pop
ret
add
test
sub
mov
repz
and
xor
fwait
cmp
and
sbb
icebp
xchg
mov
mov
jo
in
lods
adc
insb
cwtl
cmp
cld
push
repnz
loop
jl
ja
out
pushf
or
out
fdivs
scas
push
aad
jp
scas
jp
arpl
mov
mov
adc
fbld
lar
inc
subb
inc
or
xor
or
cmpsb
mov
or
mov
xchg
push
orb
hlt
cmpsb
aam
push
and
cmp
inc
dec
adc
divb
in
fisubrs
xor
cmpsl
into
out
cmpsl
lcall
sti
sbb
mov
adc
push
sub
std
cwtl
cwtl
es
mov
andl
lcall
psrlq
dec
push
add
cmp
pusha
testl
lret
aaa
or
mov
sbbl
sbb
mov
jg
lahf
shr
jno
je,pn
arpl
inc
jecxz
jbe,pt
lods
mov
push
lret
and
lahf
push
jg
test
sahf
outsb
addl
mov
push
out
push
out
mov
push
and
mov
push
cltd
xor
push
pop
jmp
mov
mov
adc
and
fisubrl
add
xor
dec
cltd
repnz
lret
jle
lea
dec
add
imul
add
push
jmp
xor
out
nop
scas
jp
push
mov
testb
ret
mov
lods
fcomip
dec
jle
aas
icebp
adc
jb
mov
mov
ret
scas
xor
and
fucomp
xor
rclb
nop
aam
lods
int3
sbb
call
hlt
in
mov
lret
xor
dec
adc
aas
jbe
mov
aas
pop
jne
dec
adc
cmp
adc
lods
add
popf
or
jle
mov
dec
jb
jmp
movsb
lods
lods
nop
xchg
lods
inc
xchg
movsb
sbb
dec
loope
in
subl
sbbl
insb
inc
xlat
inc
stos
xchg
inc
lods
sub
in
sti
jg
sbb
aam
shrl
outsl
jne
leave
mov
fisttpll
or
in
lods
lds
mov
jle
jnp
outsb
int
mov
mov
addr16
push
repz
in
sbb
ficomps
push
xchg
mov
stos
test
subl
jecxz
inc
int
mov
xchg
lcall
or
lods
pusha
je
push
sbb
adc
sti
pushl
lock
xchg
xchg
cmpl
dec
sub
inc
push
xor
mov
jo
or
lcall
sub
insb
or
push
xor
neg
fiaddl
dec
mov
ret
in
xor
jl
mov
insl
xor
insl
icebp
lock
mulb
sbb
mov
test
or
xor
and
jb
jo
daa
mov
mov
inc
add
cli
inc
pop
pushf
pop
sub
adc
mov
xchg
imul
call
sbb
mov
sbb
test
pop
xor
pop
shlb
or
stos
sub
sbb
mov
test
lret
add
or
xchg
pop
mov
dec
inc
dec
out
mov
sbb
call
xchg
call
jp
out
pop
gs
mov
pop
sbb
mov
cmc
pop
adc
lea
adc
cmp
pop
push
sarl
testb
addl
lret
arpl
jl
mov
pop
or
cwtl
xchg
pop
imul
cmp
cmp
dec
push
push
sbb
adc
pop
addb
addl
and
xorl
enter
and
mov
mov
aas
in
mov
scas
adc
dec
mov
jecxz
jecxz
fs
adc
repz
scas
and
cli
aam
push
imul
mov
jmp
scas
pop
pop
push
adc
jns
fnsave
adc
and
cmpsb
add
mov
rclb
lds
icebp
fldenv
or
xchg
pop
fs
into
sub
in
cltd
inc
lcall
inc
xor
xlat
sub
mov
add
sub
mov
mov
lds
push
pop
es
push
push
mov
jge
addr16
push
sbb
adc
xor
jnp
push
imul
call
cmp
mov
push
adc
add
insb
xchg
push
xchg
sub
iret
lret
in
push
stos
movsb
out
dec
out
icebp
in
mov
jb
mov
jnp
pop
stos
mov
jo
inc
push
push
add
cmp
in
lock
lret
cld
sbb
push
adc
pop
mov
cmp
mov
xor
shl
pop
or
fistps
sti
scas
dec
fdivrp
jmp
loopne
call
call
lcall
mov
adc
jb
jmp
pop
fwait
sarb
adc
addr16
aad
cmp
push
add
stc
or
mov
push
adc
cli
and
dec
lods
fistl
aad
xchg
cmc
test
fld
ficompl
inc
add
test
pop
lods
sub
fldcw
ret
lea
mov
out
iret
ret
xchg
and
loop
nop
mov
outsl
mov
loopne
mov
clc
loopne
push
aas
mov
sbb
push
xchg
xchg
and
in
push
mov
gs
mov
sbb
inc
stos
sbb
iret
mov
ss
pop
jo
xchg
sbb
mov
in
scas
dec
pop
jb
insl
pop
and
imul
add
std
outsb
in
mov
jns
add
adc
pop
xor
in
call
jne
add
pop
dec
cmp
rolb
ret
lods
arpl
adc
mov
xor
inc
inc
lahf
scas
jp
pop
xor
repz
jo
or
inc
push
inc
xchg
add
arpl
out
out
sbb
std
xlat
push
sub
push
mov
add
pop
dec
dec
mov
dec
lods
mov
mov
jne
test
out
test
lret
mov
adc
push
insb
xchg
bound
arpl
adc
je
jl
iret
mov
mov
cltd
fmul
adc
pop
cmp
mov
sbb
pop
mov
adc
aas
adc
subb
dec
sbb
xchg
push
add
sub
lret
and
pusha
bound
cltd
fcompl
dec
adc
int3
jge
imul
xorb
test
into
jns
jecxz
pop
aaa
call
repz
pop
adc
mov
mov
and
adc
xchg
jp
das
mov
cli
dec
sub
pop
es
pop
adc
loop
add
outsb
mov
xchg
mov
aaa
aad
mov
mov
push
ffreep
mov
mov
mov
loope
xor
jle
cmpsl
push
inc
jno
js
add
mov
push
push
mov
pop
push
push
adc
aas
lahf
fcoml
push
fidivs
test
movsb
movsl
pusha
insb
adc
xchg
fwait
jmp
add
jmp
sbb
jg
lods
pusha
xchg
jo
xchg
mov
jb
mov
outsb
or
pop
cmc
xchg
nop
out
push
and
out
ss
imul
pop
push
popf
and
pop
arpl
adc
push
aas
ficompl
aaa
rcrl
or
and
mov
inc
cs
into
or
lods
test
movswl
adc
or
aam
inc
xor
cltd
daa
sbb
dec
outsl
sub
arpl
ret
int3
out
or
jmp
pop
xchg
test
inc
out
imul
pop
es
stos
repz
stos
bound
cmpsl
jae
ljmp
or
sqrtps
mov
or
jecxz
loop,pt
ret
mov
pop
mov
pop
add
add
aas
lea
push
orb
jmp
out
or
and
add
sub
in
jp
cwtl
cmc
roll
mov
sbb
inc
sub
sbb
ljmp
gs
jno
add
data16
stos
adc
lret
aas
div
ljmp
iret
popf
mov
sub
mov
out
das
lock
pop
nop
fdivl
std
dec
fsubrs
popa
cs
cwtl
jge
push
mov
xchg
and
out
out
jb
in
cmpsb
cs
mov
out
or
mov
add
stos
pushl
rorl
imul
mull
sub
je
lods
fdivl
jp
mov
test
push
xchg
inc
in
jne
push
xor
jle
mov
sbb
bound
pusha
jp
cmpsl
inc
mov
pusha
mov
xor
xor
dec
mov
mov
push
test
sbb
cmpb
sub
xor
and
sub
nop
loopne
jnp
ds
xor
cwtl
daa
scas
out
lret
dec
popa
add
rorb
push
in
xchg
shrl
popf
cld
sbb
add
cld
jmp
test
in
fnstsw
dec
mov
sbb
jmp
loop
push
or
push
pop
mov
cmp
aam
mov
inc
leave
push
inc
mov
sbb
push
jnp
cmp
sbb
out
or
shl
mov
enter
fcoms
scas
mov
jmp
or
push
int3
mov
sarl
push
xchg
push
dec
jg
add
pop
aaa
out
mov
jge
cmp
push
lret
or
lcall
popa
clc
pop
fadd
xchg
jge
loope
lock
dec
je
movsb
das
call
ret
push
out
xchg
jb
js
push
fstpt
jbe
xchg
daa
xchg
dec
fcoms
lahf
imul
mov
movsb
scas
adc
jbe
cmpsl
sub
or
sti
and
mov
aaa
je
daa
adc
dec
fcomps
movsb
push
notl
pop
push
adc
aad
ds
jmp
cmp
xorb
xchg
cmp
mov
mov
pop
pusha
push
add
mov
shl
dec
mov
push
xlat
gs
xchg
out
mov
scas
aam
xchg
mov
push
sahf
xor
sbb
lods
dec
jno
shll
in
mov
push
xchg
cmpsb
into
mov
xchg
dec
mov
fs
imul
or
icebp
and
pop
jne
jbe
fidivrs
cmpsb
mov
mov
dec
lret
mov
mov
fs
test
inc
loopne
or
not
adc
mov
sbb
rol
out
daa
xchg
lret
xchg
add
add
insl
iret
inc
rorl
xorl
xor
fsubl
pop
int
cs
into
dec
std
cmpsl
inc
mov
imul
mov
js
push
stos
mov
and
in
add
xorl
test
pop
fdivs
imull
lret
aad
shlb
cmp
fstl
dec
test
xor
fst
movsb
pop
or
sub
imul
jns
xorb
negb
std
es
arpl
xchg
jp
imul
lret
inc
push
cltd
dec
sub
mov
mov
insl
stos
gs
insl
adc
jp
sti
jle
scas
mov
xor
mov
xchg
pop
add
lea
or
mov
cmp
dec
or
lods
jmp
movsb
adc
pop
pop
arpl
loopne
or
xchg
push
push
dec
or
in
jnp
jno
sub
ja
xor
add
pusha
pop
push
mov
mov
jnp
scas
mov
lret
mov
or
shll
or
sub
out
dec
mov
push
or
mov
loope
movb
xchg
pop
mov
jecxz
testb
out
fmul
lds
into
out
pop
out
mov
pop
or
pop
daa
or
mov
imul
pop
add
inc
xor
push
in
mov
inc
dec
movsb
insb
imul
push
out
popa
push
cltd
test
shrl
fdivrs
cmp
les
cld
cmp
pop
rclb
out
adc
ret
enter
fs
imul
ja
repz
cmpsb
sub
push
xor
jle
jp
lea
mov
dec
and
test
lods
clc
lahf
sbb
or
fistps
stos
test
les
das
js
jge
dec
out
mov
pop
das
mov
inc
ja
repz
xchg
xchg
sub
adc
inc
mov
jae
mov
mov
in
aam
aas
rcrb
cmp
xchg
xchg
jno
pop
popf
fisubrs
cwtl
lock
xchg
mov
xchg
xor
mov
loop
cmp
mov
mov
mov
and
leave
push
jae
rolb
in
add
jnp
adc
lret
in
push
fldenv
xchg
sarb
mov
pop
inc
cmpl
adc
xchg
lods
xchg
jg
cli
in
cmp
sbb
negb
mov
pushl
pusha
sbb
xchg
add
cmc
out
out
cmp
jmp
aam
inc
xor
mov
mov
fldt
add
jmp
dec
aaa
stos
cld
fcomps
cmc
dec
sub
or
enter
pop
repz
dec
adc
leave
insb
arpl
cmp
adc
mov
popa
sub
imul
cli
push
mov
filds
add
or
inc
inc
push
pop
pop
cmpb
les
imul
pop
push
out
andb
sub
mov
xchg
aas
inc
jnp
push
and
pop
push
push
loope
xchg
dec
ret
jnp
mov
fwait
xchg
out
or
test
mov
lods
push
dec
mov
stos
stos
ds
mov
or
loopne
lea
sahf
xor
mov
and
je
inc
nop
mov
sbbl
jg
inc
scas
movsl
test
jecxz
repnz
fcoms
imul
jge
out
lea
leave
push
add
mov
add
pushf
aas
dec
push
mov
push
addl
rorl
loopne
dec
cld
lret
dec
sub
jo
loopne
push
std
and
xor
sti
js
addb
add
daa
in
jmp
mov
pop
pop
jbe
cmp
push
jne
imul
mov
jecxz
aad
scas
movb
stos
mov
or
push
xchg
mov
xchg
jg
xchg
mov
or
xchg
xchg
aam
inc
mov
xchg
lea
fstpl
movsb
roll
mov
and
mov
lods
or
data16
mov
pop
enter
mov
fildl
pop
cs
dec
and
mov
jae
jecxz
and
mov
loopne
aaa
mov
aam
mov
sti
mov
cli
sbb
and
in
add
mov
test
jne
sbb
cmp
ret
sbb
mov
imul
pop
mov
push
out
sbb
inc
test
js
cmpsb
in
cmp
pop
cmc
mov
pusha
mov
ja
pop
out
mov
ja
adc
icebp
in
movsl
fsubrs
ja
cmp
aad
scas
orl
xchg
les
data16
cmpsl
insl
jp
dec
gs
xlat
int3
lret
cmpsl
in
jmp
imul
or
rolb
xchg
jle
sbb
jecxz
scas
dec
rcrl
imul
aas
test
xchg
repnz
in
push
out
pop
dec
leave
mov
mov
std
fisubs
cmpsl
or
xchg
xor
int
icebp
les
fxch
and
les
cmpl
jl
iret
dec
adc
mov
cmp
pop
outsl
rorl
stc
ja
stc
push
ficomps
sbb
push
ss
call
iret
out
les
pop
and
cmp
and
rol
mov
mov
mov
out
std
add
insb
mov
and
jmp
movsl
fdivl
in
test
inc
bndstx
xor
rcll
xor
add
test
insb
test
adc
ret
ljmp
and
xorl
adc
xchg
adc
jo
cmpsb
jae
add
adc
test
int
dec
pop
pop
js
lds
pop
mov
adc
cmp
xlat
xor
fld
push
mov
mov
std
pushf
mov
jg
fldcw
jbe
or
fcoms
ss
jp
mov
or
fisttpll
inc
mov
cltd
and
pop
jl
jmp
push
jle
fs
lds
jno
cltd
and
jne
pop
mov
loope
and
aas
lret
adc
and
outsb
pop
pop
mov
inc
inc
loope
sbb
mov
sbbb
adc
xchg
ret
sbb
mov
js
cwtl
xlat
int
in
ret
int
inc
shrb
mov
jnp
inc
jne
or
data16
rol
lahf
fsubp
insl
aam
inc
xchg
sbb
dec
std
gs
add
stos
xchg
pop
nop
pop
cmc
mov
stos
lock
bound
add
in
dec
jp
lret
pop
and
daa
cmpsb
fnstcw
nop
push
jecxz
cmc
sbb
mov
dec
subl
repnz
mov
xlat
mov
call
movsl
arpl
mov
in
outsb
and
pop
lret
sahf
xchg
mov
test
adc
or
and
pop
mov
jne
push
and
adc
jne
leave
fimull
lahf
ret
jb
sti
idivl
adc
movsb
test
pushf
pop
inc
add
adc
lcall
or
xchg
mov
std
lea
add
addr16
repnz
mov
inc
scas
out
xchg
loope
push
cs
lret
call
xor
cmc
push
adc
scas
mov
jmp
inc
popf
ja
jge
int
aam
addl
fs
cmp
test
scas
mov
cmp
es
fcompl
cmp
scas
sub
add
cmp
test
scas
mov
int
jne
lock
jae
loope
fsubs
cmpsb
jle
nop
add
inc
out
icebp
stc
and
cwtd
pusha
and
out
rclb
ljmp
loope
pop
rorl
aaa
adc
mov
lahf
in
out
xchg
mov
testl
cltd
dec
sbbl
mov
scas
pop
xchg
pusha
ret
inc
jne
cmp
and
shrb
mov
dec
xor
nop
ds
dec
dec
gs
sub
js
outsl
dec
sbb
pop
mov
les
mov
push
movsb
movsl
mov
pop
xchg
inc
sbb
mov
push
aaa
sbb
stc
mov
push
adc
js
and
mov
not
faddp
push
push
add
xor
imul
repz
sub
fistpl
push
mov
xchg
outsb
push
fwait
mov
inc
shlb
xor
loop
mov
pusha
idivb
repz
xor
xor
adc
push
sbb
push
adc
ret
inc
or
insb
push
xchg
sar
cmp
cwtl
xor
xor
and
xor
iret
cmp
int3
outsl
jns
out
jge
mov
pushf
inc
int
or
test
mov
inc
xchg
sbb
popf
fstl
pushf
pop
fs
daa
popf
je
fdivrl
addr16
jmp
test
rcl
fcoml
mov
movsb
divb
subb
dec
mov
lcall
xchg
dec
lods
mov
mov
inc
mov
lcall
or
push
adc
call
xor
jno
sub
pushf
or
cwtl
insb
cwtl
je
push
push
or
push
cmp
fnstenv
fisubrs
stos
scas
aam
repnz
rcl
pushl
ds
fisubrl
adc
dec
fadd
jmp
mov
leave
add
lahf
sub
jmp
mov
into
push
xor
mov
mov
xor
pusha
pop
js
lock
mov
sarb
mov
jg
lret
pop
xchg
ss
push
scas
fwait
sub
jnp
shrb
sbb
jmp
ds
xchg
push
mov
fs
fcoml
repnz
mov
inc
ficoms
popf
mov
in
mov
mov
mov
mov
sbb
rcll
inc
or
int
jno
subb
jb
std
into
or
fwait
push
cmp
pop
in
mov
lret
int
and
dec
mov
pop
dec
daa
adc
jg
daa
add
scas
leave
and
in
cld
lods
fld
je
mov
ret
sbb
xor
xor
fdivr
in
and
or
sub
testl
inc
sbb
xchg
sbb
or
shlb
mov
fwait
mov
arpl
adc
fstl
jp
fistpll
sub
arpl
insl
or
addr16
add
arpl
xchg
and
out
pop
xchg
popa
cmpsl
jbe
enter
or
stos
shrl
mov
ret
mov
xchg
sti
stos
sbb
rorb
jg
rep
xchg
rcl
rclb
lds
mov
and
int
jmp
or
xchg
les
mov
hlt
adc
add
cmpsl
icebp
lret
xor
adc
adc
add
dec
mov
pop
add
dec
test
adc
inc
das
xor
scas
adcb
mov
inc
push
add
loopne
clc
dec
je
repnz
int3
inc
xchg
mov
mov
xchg
imulb
jg,pt
test
test
or
jge
mov
repnz
out
inc
in
test
xchg
lock
std
mov
xchg
insl
jmp
stos
scas
lods
ja
out
adc
adc
sub
std
lock
sbb
or
ss
sbb
ret
sahf
stc
out
sbbb
ljmp
repnz
in
xor
popf
or
les
xor
rcrl
cmp
andb
mov
mov
es
cs
andl
sub
adc
or
cmc
inc
gs
sub
pop
add
fwait
imul
xchg
jbe
xchg
pop
outsl
jnp
fwait
and
or
add
imul
lcall
xchg
mov
mov
adc
dec
cmp
mov
movsb
push
jecxz
xor
pop
repnz
aaa
cld
pushf
mov
mov
clc
in
test
mov
roll
aad
jl
and
push
mov
sub
nop
dec
mov
shll
pop
addr16
jbe
roll
ds
add
sbb
mov
dec
push
cmp
inc
call
xorb
mov
std
and
or
ss
es
dec
insb
insl
push
xchg
cmp
scas
shrl
imul
movsl
push
leave
out
incl
mov
pop
cmp
cmp
mov
or
out
std
std
nop
mov
cmpsl
addr16
lock
or
faddp
xchg
mov
sbb
cwtl
gs
pop
and
das
or
pop
cmp
and
sbb
cmp
clc
sahf
cmp
cmp
and
xor
jle
jecxz
cwtl
int3
je
in
adc
pop
bound
add
add
or
in
ret
into
sub
inc
mov
fld
push
and
cmp
mov
and
ficoml
ds
clc
push
or
mov
shll
andl
push
enter
cmp
xor
dec
hlt
stc
or
push
mov
sahf
aas
ret
push
lods
xor
fsts
scas
xor
dec
jnp
sub
fnsave
arpl
ljmp
rcrb
insb
pop
sbb
ss
inc
aam
pop
sbb
roll
inc
fstpt
jnp
sbb
pop
mov
test
fwait
sti
ljmp
xchg
cmp
incb
lock
push
push
jp
inc
pop
adc
repz
dec
and
scas
int
adc
and
mov
into
leave
dec
fildll
xchg
xchg
cs
lock
push
and
shl
shlb
ret
mov
dec
aad
sti
in
stc
adc
fwait
mov
mov
insb
add
pop
jg
jg
scas
cwtl
mov
outsb
shll
test
cmp
jecxz
loop
jno
inc
cmp
mov
mov
inc
andb
add
sbb
inc
mov
rol
out
push
fwait
xor
fidivrs
sub
mov
mov
push
jge
ljmp
mov
dec
xchg
cmc
push
cld
scas
sbb
and
and
cmp
lret
sub
ret
nop
dec
rcll
mov
arpl
dec
pop
adc
ljmp
cmpsl
push
pushf
popa
or
repnz
inc
lds
inc
lock
les
in
jecxz
aaa
cmp
adc
and
inc
in
sub
hlt
clc
arpl
bnd
xor
stos
or
dec
mov
imul
repz
fistpll
fiadds
add
ss
sbb
inc
or
js
jle
inc
mov
adc
mull
adc
jle
pop
pop
mov
adc
lahf
stos
rorl
jmp
pop
cld
adc
out
cwtl
and
in
inc
cmp
dec
xchg
fmuls
sbb
push
pop
repz
mov
xchg
push
fsubs
xor
xor
push
inc
jne
fcomps
dec
pop
mov
orb
xchg
fdivl
pop
repnz
testl
icebp
pusha
add
mov
test
sbb
lea
enter
adc
mov
cmpsb
popf
mov
mov
sub
mov
cmpsl
adc
adc
push
int3
or
push
xor
push
push
lret
lcall
pop
hlt
mov
cmp
lret
cmp
dec
and
push
jmp
mov
xchg
stos
fisubrs
sub
icebp
inc
or
outsb
add
sbbb
mov
sahf
and
sub
and
iret
mov
push
aaa
mov
les
mov
and
lcall
jl
mov
cmp
mov
lahf
inc
mov
and
rcll
dec
test
dec
dec
or
sbb
sub
inc
lret
inc
gs
fidivrl
and
rcr
je
out
xchg
push
push
mov
add
mov
leave
mov
mov
out
ret
jnp
adcb
fnstcw
mov
leave
cmc
cmpb
pop
push
mov
mov
cld
xor
test
push
add
xchg
fstl
mov
das
add
cld
out
incl
or
ror
fldt
push
repz
cwtl
push
fstpl
adc
pop
dec
or
sub
in
and
cmp
lds
jp
and
pushf
xchg
cmpsb
iret
in
clc
mov
sbb
pop
mov
or
roll
cltd
xchg
inc
cli
sub
ja
mov
cmp
cmp
mov
imul
int3
dec
aas
stos
lret
pusha
sarl
add
out
hlt
xchg
out
or
test
out
push
mov
icebp
xor
shrb
or
sub
mov
pop
shr
dec
lcall
add
pop
hlt
pop
xchg
jae
inc
mov
fdivrl
mov
mov
ds
bswap
pop
dec
and
repz
test
sbb
movsl
pop
or
push
shll
rep
push
insl
in
jae
inc
and
pop
xchg
and
pminsw
into
xor
fistps
cmpsl
pop
lea
cmp
dec
lds
mov
test
sbbb
or
push
sub
stc
addr16
adc
out
lods
in
pusha
mov
imulb
popf
addl
pop
adc
sti
pop
lods
jne
jne
and
repz
mov
es
jle
cmp
mov
adc
pusha
test
cmp
shll
pop
lods
outsb
sub
shl
or
fsubl
inc
dec
incb
sub
mov
or
cmpsl
ljmp
shrl
ret
aad
out
sub
ljmp
jg
adc
and
ljmp
or
xor
push
outsb
ljmp
adc
cmp
jmp
dec
cmp
xchg
cmpsb
cmp
psubusb
xchg
les
ljmp
xlat
imul
lods
jns,pn
out
adc
fpatan
sub
ja
push
dec
jo
mov
sbb
push
xchg
shl
dec
arpl
mov
lret
push
jae
gs
push
into
inc
dec
add
in
or
test
lcall
cltd
sbb
lcall
lds
in
mov
dec
mov
dec
arpl
nop
adc
je
scas
pop
jecxz
pop
jb
bound
jg
jno
dec
fists
jle
mov
cmp
xchg
jge
std
ficompl
inc
lcall
mov
xchg
lret
pop
xor
and
push
loopne
insl
leave
cltd
adc
mov
xor
sub
sub
cmp
addr16
mov
mov
xor
lods
add
jg
dec
or
push
leave
mov
push
adc
les
mov
shll
fnsave
sub
pop
xor
mov
insl
mov
aad
xchg
stc
or
mov
repz
jns
mov
sub
pop
xchg
test
insl
test
jne
mov
clc
xchg
push
or
addl
mov
dec
add
vmaxsd
outsb
jp
jo
cwtl
outsb
mov
mov
sbb
fs
mov
pop
jno
adc
jns
outsb
mov
xor
and
pop
dec
notb
cmp
aad
dec
mov
loopne
xchg
pusha
je
jns
jp
xchg
movsb
mov
andl
or
ret
into
out
mov
sbbl
jg
lret
dec
dec
mov
mov
mov
fwait
mov
dec
outsb
ljmp
fldenv
dec
fwait
add
lock
pop
and
pop
mov
das
insl
repnz
pop
xor
mov
dec
push
ss
xor
dec
jns
push
rcrb
data16
hlt
test
cmpsl
int3
popa
adc
xchg
lods
add
mov
mov
loopne
inc
lods
push
push
mov
stos
es
arpl
push
cmp
in
shrb
lahf
mov
jmp
lahf
filds
or
insl
lret
ss
sbb
movsb
push
pop
out
ja
dec
out
or
add
movsb
iret
in
outsb
adc
shrl
in
xchg
lods
and
nop
add
push
sti
cmpsl
push
je
mov
lret
push
stos
in
ret
jle
sahf
shrl
inc
mov
push
fimull
inc
adc
xor
rcrl
pop
jae
insl
cltd
jbe
dec
cmpsl
cs
inc
push
cmp
int3
jl
das
cmpsb
xor
cld
sub
in
mov
out
js
data16
jno
loopne
pop
lds
inc
push
mov
xchg
cld
shll
mov
xchg
faddp
popf
mov
bound
mov
add
ss
aas
insb
xchg
add
sahf
and
mov
mov
into
push
cmpsb
mov
pop
inc
pop
cmp
popa
xchg
push
push
cmp
jmp
xchg
xor
mov
std
in
pop
repz
mov
xor
aas
push
sub
gs
jnp
pop
pushf
and
mov
xchg
out
imul
hlt
sahf
inc
push
rorb
xor
sbb
or
mov
es
sbb
and
inc
rcrl
adc
mov
or
pop
or
xor
scas
jne
imul
add
cmp
dec
xchg
lods
rcll
imul
or
mov
clc
fisubrl
mov
cmpsl
popl
mov
es
cmp
out
mov
jbe
xchg
mov
pusha
js
mov
push
sub
add
ljmp
pop
leave
pop
mov
fisttpll
inc
ret
fwait
iret
pop
sub
and
and
adc
aam
pop
mov
xor
ljmp
sbb
movsb
and
push
loope
arpl
fstl
jno
mov
adc
ss
or
gs
stos
shlb
fisubs
mov
lods
sahf
lock
fsubs
ret
pop
cmp
fsub
xchg
add
shr
jle
cmp
jbe
pop
xor
jnp
flds
push
bound
call
mov
cmpsb
sarl
nop
push
addr16
scas
data16
fs
imul
out
movsl
mov
ja
fsubp
inc
xchg
sub
pop
inc
fnsave
loopne
fcmovb
xor
movsb
pop
mov
stc
in
pop
mov
sbb
mov
hlt
mov
cwtl
add
sahf
hlt
push
fcmovnbe
mov
mulb
int3
sbb
mov
loopne
movsl
fwait
sub
popa
pushf
icebp
movsb
push
xchg
ljmp
push
jns
pop
or
adc
arpl
aad
and
adc
je
std
cld
jae
adc
sbb
int3
icebp
pop
mov
jl
test
popf
out
in
pop
lock
cwtl
push
lcall
andl
pushf
shl
xor
lret
je
les
mov
sub
inc
mov
and
frstor
ds
mov
push
fdivr
pop
fistpll
out
sbb
call
je
shrb
mov
decb
arpl
sbb
clc
sub
aad
sti
in
sti
movb
jp
jne
mov
mov
xchg
mov
addl
and
arpl
push
add
xchg
xor
cs
int3
rcrl
push
sub
std
ret
inc
test
pop
movsb
add
ret
fidivrs
int
jmp
jecxz
jecxz
dec
inc
cli
adc
jg
jbe
or
add
mov
outsl
xchg
pop
call
repnz
fadds
inc
testb
cltd
je
repnz
mov
inc
ss
es
mov
xchg
mov
pop
sbb
popf
notl
lods
xor
pop
inc
adc
push
shl
insb
and
pushf
ja
or
imul
xchg
lds
adc
cltd
in
hlt
fstl
pop
popf
dec
in
dec
lods
sahf
push
dec
adc
jne
test
pop
xor
dec
or
int
pop
mov
test
mov
repnz
mov
mov
hlt
xchg
andl
sbb
jne
les
rcrb
hlt
jbe
xchg
xor
xor
sub
nop
cwtl
lea
int3
pop
popa
pop
or
dec
lock
aad
mov
sbb
pusha
test
test
idivw
adc
aam
mov
ret
adc
push
push
outsl
dec
mov
shlb
add
popl
ljmp
mov
and
repnz
stos
scas
std
in
jmp
aam
or
popf
cwtl
lcall
sti
outsb
adc
mov
loop
mov
repnz
pop
out
adc
cmp
int3
mov
out
es
orl
scas
pop
mov
pop
stos
out
dec
mov
add
jbe
in
lods
or
shll
nop
add
push
inc
jge
dec
mov
ret
fdiv
mov
loope
xchg
jecxz
rcl
pop
out
push
push
inc
frstor
fdivr
pop
pushf
pop
xlat
xchg
nop
cli
pop
lret
jb
dec
xor
test
fnsave
xlat
sub
lods
inc
xor
out
loop
jecxz
jg
mov
pop
pop
xchg
and
jne
or
push
js
hlt
cmp
cld
dec
xor
enter
inc
xor
add
iret
popa
lahf
push
xchg
ljmp
and
jno
sbb
cltd
test
outsl
pop
jge
mov
or
movsl
mov
subl
push
mov
cwtl
add
jle
int
lea
std
xchg
dec
pop
push
out
stos
test
jb
idivl
mov
push
and
cmp
jl
pop
add
jns
int
in
test
bound
out
test
dec
test
mov
insb
push
jl
rcrb
xchg
xchg
sbb
dec
add
or
lahf
push
ret
and
jb
cmp
inc
push
xor
sub
js
jo
sbb
subb
dec
cmp
adc
jg
inc
or
lahf
jl
dec
and
jbe
imul
daa
push
xor
mov
add
test
sbb
pushf
sub
subb
out
xchg
mov
in
mov
js
mov
cmp
mov
xlat
push
andb
stc
repnz
push
leave
inc
inc
sbb
inc
rorl
inc
outsl
adc
ja
and
jecxz
dec
sub
push
sub
lea
jo
pop
mov
pop
push
cltd
or
mov
enter
aam
frstor
js
mov
add
mov
cli
jno
icebp
out
and
cmpsl
pop
xchg
sbb
nop
daa
xor
rcll
jg
out
roll
test
and
stos
xchg
pop
out
inc
fs
sti
mov
aam
pop
in
pop
pop
mov
xorb
lcall
add
icebp
add
adcl
mov
add
mov
xchg
cmpsl
xchg
mov
movsb
in
nop
xchg
pop
pop
dec
xchg
jmp
out
mov
insb
sub
das
dec
pop
xor
mov
lock
pop
out
ret
cltd
arpl
pop
cmpsl
into
push
data16
sub
xchg
arpl
mov
rol
adc
lods
andl
es
bound
popa
shll
xchg
bound
or
push
test
push
push
lds
insl
divb
pop
sub
in
and
mov
imul
loope
lret
and
cmpb
test
push
mov
shr
je
gs
jno
push
xchg
dec
test
fnstenv
sbb
in
jmp
adc
popa
mov
jmp
xchg
xchg
or
shrb
iret
sahf
push
lret
leave
stos
call
mov
push
out
ret
jnp
cmp
dec
sbb
lret
jge
dec
lods
inc
stc
sarl
sbb
xor
das
icebp
jp
push
jge
into
mov
push
xchg
sub
fadds
lret
jmp
xchg
adc
mov
in
and
push
or
fistl
add
leave
pop
sub
push
das
jg
add
xchg
mov
lret
jno
push
lds
scas
mov
jp
cli
xchg
daa
movsl
andl
clc
das
pop
bound
loop
pop
push
testb
push
xchg
jg
lock
mov
mov
lret
push
loop
aaa
mov
add
push
loope
pop
pop
xor
clc
xchg
enter
xchg
cmp
js
cmp
cmp
sub
pop
dec
xchg
decl
push
push
into
data16
hlt
sub
idiv
lcall
sub
push
enter
into
xchg
adc
push
outsb
lret
dec
sbb
cmp
outsl
jmp
fisubs
and
xor
cs
test
mov
arpl
xlat
xchg
mov
shlb
sub
sahf
enter
push
mov
es
test
das
push
shrb
stc
push
adc
mov
or
fwait
sbb
insl
pop
jg
push
push
adc
int3
adc
ss
inc
pop
imul
mov
int
sbb
mov
jae
sub
jecxz
add
sti
jbe
adc
push
pop
sub
sarl
es
dec
mov
andl
inc
scas
add
or
inc
jns
mov
jnp
sub
cmp
fwait
push
fildl
sub
mov
push
les
mov
in
adc
dec
fwait
je
pop
add
stos
sub
xor
mov
cmp
dec
dec
in
fidivs
jae
xchg
js
mov
out
lods
xor
xchg
xchg
in
imul
ret
pop
cli
and
dec
and
cld
pop
xchg
inc
adcl
lcall
mov
aas
jecxz,pn
cmp
jbe
sarb
xlat
jecxz
daa
js
cmpsl
adc
dec
movsl
in
xchg
jne
sahf
adc
rcrl
aad
bound
in
in
adc
lds
add
lret
lahf
mov
repnz
sbb
jg
lret
mov
stos
fisttpll
jg
mov
fsts
jle
sub
orb
adc
clc
mov
cmp
stos
cmp
pop
and
popl
sti
addr16
fldcw
xor
lock
and
jp
sbb
icebp
push
pop
pop
ret
jae
sub
or
mov
or
roll
fxch
fisubl
out
lods
push
dec
cli
inc
cltd
pusha
mov
insb
ljmp
cmp
mov
adc
std
jno
mov
loope
jo
insb
or
int3
sbb
jno
gs
out
dec
test
xchg
out
xor
and
ljmp
in
mov
or
insl
and
sbbb
dec
dec
dec
test
stc
leave
or
sub
lods
sarl
cwtl
push
mov
or
insb
xor
and
test
adc
lock
dec
setno
xchg
pxor
aad
cmp
push
xorl
pushf
mov
pushw
negb
dec
sbb
fidivs
js
sub
mov
mov
inc
mov
shrl
in
outsb
lods
add
inc
sbb
pop
loope
and
or
add
out
stos
jns
out
repz
xor
adc
sti
dec
cmpl
call
pop
out
test
lods
aaa
mov
cmpsb
cmp
scas
inc
ret
ss
push
jne
scas
dec
stos
shlb
pusha
jge
or
ficoms
in
jnp
sbb
shll
dec
mul
cs
push
add
pop
data16
mov
add
loope
cmp
jb
js
js
pop
in
and
jbe
jle
jbe
repz
pop
test
loope
pop
xor
out
out
dec
or
shr
mov
cs
lock
xchg
push
enter
dec
lods
hlt
inc
lods
mov
inc
mov
and
inc
lock
leave
mov
adc
jbe
je
test
cwtl
and
jb
arpl
sub
fucomi
mov
xor
xlat
leave
pop
ss
pop
fmulp
mov
push
xor
lahf
lock
jmp
movsb
les
les
test
sub
cmp
jmp
into
aad
dec
pop
lock
and
mov
xor
test
mov
loopne
cmc
lcall
jmp
in
pop
cltd
push
jge
test
dec
sbb
fwait
mov
xchg
pop
std
rcrb
inc
loope
adc
stos
arpl
mov
add
sti
mov
cld
scas
jb
outsb
fld1
sub
call
push
cltd
sbb
bound
stos
mov
cli
adc
cmpsb
mov
pop
les
lret
lret
dec
aad
sub
jmp
inc
jns
fwait
ret
imul
push
inc
adc
xchg
fsubl
aas
jg
or
aas
sbb
loopne
push
jbe
addr16
push
es
or
lahf
inc
aas
and
dec
adc
inc
push
adc
inc
stos
leave
fwait
adc
xor
xor
test
dec
ud2
fisttps
push
or
cld
addl
mov
arpl
addl
cmpb
cmp
fs
mov
out
enter
xor
sbb
jge
hlt
les
xchg
popa
aas
stos
xchg
pop
sbb
mov
loope
or
lods
mov
sar
test
push
outsb
mov
xor
cltd
gs
inc
dec
add
orl
xor
xchg
adc
add
mov
seta
insb
pusha
lcall
notl
lret
popa
cmp
cmpl
sub
je
or
push
mov
aas
ror
pop
loopne
iret
xchg
test
sub
rorl
adc
mov
ficomps
rcrb
aad
jbe
es
imul
xchg
xchg
int3
push
adc
xor
sub
fs
or
cmp
cmc
mov
dec
bound
ret
xor
fcmove
dec
ljmp
daa
cltd
or
sub
cmp
inc
popa
and
jae,pt
ret
pop
adc
pushf
jle
ret
adc
sbb
shlb
jp
xchg
jp
mov
mov
int3
push
jbe
iret
call
gs
mov
aam
repnz
mov
in
rcrl
push
stos
sub
call
enter
cmp
mov
add
leave
dec
sub
aam
stos
negl
aam
push
adc
xchg
das
js
lds
mov
jecxz
pop
hlt
insb
rcll
fcmovnbe
out
dec
dec
idivb
es
icebp
scas
sbb
mov
pop
jmp
pop
clc
jno
add
jmp
aas
adc
sarl
adc
mov
and
ja
xlat
mov
mov
shrb
pop
inc
scas
fsubrs
bound
call
xor
push
inc
jmp
inc
mov
cmp
test
fwait
lods
xchg
xlat
xor
sbb
stos
lods
lea
loopne
adcb
sbb
fstpt
mov
add
enter
push
xchg
and
iret
cwtl
in
insl
sahf
cmp
incb
daa
scas
pushaw
in
xor
jae
cmp
jae
daa
test
mov
movsl
dec
in
hlt
add
dec
inc
xchg
cmc
fwait
adc
xor
gs
and
and
mov
fcomps
lcall
sbb
dec
jp
jb
sarb
pusha
add
test
dec
add
in
stos
adc
lds
es
test
fidivrs
fcmovnb
rolb
add
int
les
dec
stos
adc
and
and
or
fs
or
sub
test
bound
add
jae
stc
mov
mov
pop
jns
jne
push
pop
jg
fwait
sahf
adc
in
jno
repz
fsubs
movsl
in
mov
push
ss
fst
xchg
push
xchg
or
mov
les
pop
loopne
cltd
mov
mov
fwait
push
pop
rorb
inc
out
jp
pop
std
cmp
mov
int3
dec
iret
in
hlt
cmp
lods
and
add
xchg
push
pop
mov
add
and
dec
ret
stos
ja
xchg
sub
xor
mov
jno
jo
or
js
dec
imul
dec
pop
adc
stc
or
ss
xor
test
loopne
aaa
xchg
push
fdivrl
xor
mov
mov
and
sbb
push
lcall
mov
inc
int
jo
dec
and
mov
push
ret
pop
bound
ss
mov
or
int
rorl
fwait
out
inc
ss
addr16
addr16
daa
test
call
clc
jb
jbe
sahf
mov
mov
iret
add
mov
dec
insb
add
push
jecxz
dec
out
mov
mov
xor
out
arpl
jmp
inc
mov
mov
push
loop
xor
sbb
std
in
bnd
fisubrs
test
gs
aaa
jb
shl
jbe
in
aam
xchg
sahf
push
aad
divl
repz
gs
aas
inc
mov
sti
cmpsb
jl
jnp
mov
inc
or
pop
fsubrl
jle
ss
xor
sub
jbe
imul
pop
mov
or
add
inc
or
data16
pop
dec
and
fwait
jae
sti
xor
adc
sbb
out
pop
push
jle
xor
notl
mov
push
sub
cmc
repz
add
or
pop
mov
sub
xor
sub
inc
mov
mov
mov
ja
pop
push
imul
sub
push
cmp
dec
cltd
sbb
lret
jg
out
or
mov
inc
loop
loopne
xor
jno
lahf
outsl
cmp
lret
xor
inc
sbb
sub
jae
add
pop
scas
aaa
mov
loopne
repz
int
xor
pop
mov
pop
sub
orb
mov
jg
shrl
adc
xchg
ljmp
mov
ss
adc
add
and
mov
lcall
addb
inc
push
aam
pop
lea
mov
test
insl
jg
xchg
add
push
lcall
aam
sbb
cmp
push
rorb
xor
aas
dec
push
orb
xor
jne
sub
imul
ss
fisttpll
adc
inc
add
inc
mov
in
andb
sbb
push
ficoms
cmp
outsb
add
das
mov
jne
pop
cmp
or
pop
out
mov
xor
popf
loope
rcll
js
ret
aaa
mov
sbb
rcrl
pusha
fsubl
jg
out
insb
xchg
pop
sub
pop
push
hlt
std
rclb
xchg
je
aaa
pop
nop
xor
arpl
mov
data16
push
cs
jo
pop
xchg
mov
hlt
add
fwait
mov
xor
dec
cmc
or
sysenter
std
popa
cli
mov
pop
dec
xor
sub
decl
mov
outsl
jno
push
jle
xchg
and
call
adc
pop
mov
fildll
addr16
sbb
push
cmp
xchg
int3
cld
cmc
pop
xor
mov
adcb
and
xchg
test
dec
leave
mov
push
int3
adc
loop
ljmp
cmc
and
les
jne
dec
icebp
inc
ds
mov
icebp
adc
andl
cmp
pop
mov
mov
bound
arpl
mov
sub
lock
mov
icebp
stc
mov
roll
cmp
xchg
es
iret
mov
xorl
mov
jl
movsb
cmp
xor
arpl
insb
loopne
pushf
mov
mov
jno
into
xchg
pop
xchg
xor
mov
cmp
sbb
and
inc
scas
xlat
sub
fwait
inc
jmp
jbe
adc
jg
inc
mov
mov
jns
cmp
inc
xor
or
add
adc
bound
fsubs
push
sub
cmc
and
fisttps
pop
inc
or
punpckldq
and
in
jne
bound
pop
mov
loopne
stc
sbb
jle
sbb
dec
scas
xor
cmp
fsubrs
jo
mov
inc
mov
in
out
pop
cmpsb
ja
scas
mov
dec
lret
xchg
insb
or
aaa
and
push
addr16
push
ret
icebp
and
pushf
data16
push
push
sbb
xchg
jb
insl
cmp
aam
mov
and
adc
sub
mov
mov
fnstsw
cmpsb
addr16
xor
into
nop
jg
jg
mov
cmc
data16
add
out
ret
lret
xchg
lahf
mov
fcomps
jns
adc
mov
xchg
mov
dec
xchg
or
mov
in
mov
jo
iret
das
stos
sbb
xchg
mov
inc
jmp
adc
dec
lock
jmp
cmp
rorl
hlt
xchg
andl
in
and
jne
sub
mov
inc
repz
sub
jno
addr16
and
xchg
xchg
cmpsl
mov
das
out
cmpsb
in
aad
inc
cmp
push
xor
cwtl
pop
mov
stos
movsl
xchg
pushf
sub
or
push
mov
jmp
sub
jnp
aad
xchg
imul
xor
shll
xchg
pop
add
push
jge
in
fcompl
xchg
xor
mov
add
jg
into
aaa
mov
fidivrl
push
push
and
pushf
and
mov
inc
lods
cmc
in
daa
out
ret
ret
fists
loop
push
mov
sub
push
or
ljmp
fwait
push
dec
cs
mov
mov
shlb
or
movsl
push
cmpsl
out
mov
adc
adcb
shrb
es
push
movb
loope
enter
int3
loop
push
cmp
mov
in
add
fadd
std
xlat
sub
jg
xchg
xchg
das
in
inc
leave
loopne
mov
xor
test
jmp
sub
imul
das
lret
aas
mov
test
arpl
jbe
aad
xchg
mov
scas
ret
jl
adc
lea
out
enter
or
push
enter
jg
adc
jmp
adc
popf
mov
ss
dec
add
loop
xorl
push
in
add
inc
mov
out
and
enter
aam
pop
push
aam
imul
jbe
dec
in
jbe
push
aaa
call
aam
push
cld
xchg
jo
xlat
jne
pop
xor
aad
sub
lds
mov
lods
mov
shrb
jns
cmpsb
sub
daa
xor
daa
sub
mov
pop
es
cmp
mov
add
test
jg,pt
repnz
fcoms
mov
lock
or
cltd
sub
in
mov
push
popa
scas
cld
pusha
mov
stos
rol
xchg
into
cmp
dec
sbb
or
inc
or
sbb
fs
out
xor
lock
sbb
ljmp
jne
add
cmp
sti
inc
mov
aam
push
mov
fcoms
cltd
push
push
mov
sahf
outsb
popf
iret
mov
in
ss
inc
push
and
jmp
test
scas
adc
mov
xchg
add
ret
movsl
jae
and
xchg
cmpl
jae
add
push
outsl
jmp
dec
in
adc
jmp
addr16
mov
sub
loopne
loop
sbb
inc
pop
sub
jb
ret
test
lods
lret
cs
mov
test
xchg
je
testl
sub
sti
out
outsb
xchg
xorb
mov
and
xorb
xchg
mov
outsb
mov
mov
mov
push
push
fiaddl
pop
cmp
push
in
lock
dec
push
mov
out
xchg
sti
mov
lds
and
sub
or
bound
mov
rcll
cmp
pavgb
mov
adc
xor
aas
fcoml
bnd
adc
js
pop
js
add
add
mov
dec
pop
pop
sub
pop
stc
jmp
iret
dec
in
sbb
mov
ja
mov
shll
test
jmp
mov
arpl
and
jmp
call
push
adc
bound
inc
inc
in
or
gs
cwtl
cld
pop
int3
jp
xor
out
idivl
and
stos
adc
lret
lea
lahf
xor
mov
ja
out
popl
into
mov
ret
in
aad
dec
mov
dec
mov
lret
into
lahf
fisttpll
dec
imul
test
mov
aam
pop
cwtl
aad
cmpsl
in
movb
pusha
sbb
jns
leave
lahf
lahf
xor
enter
push
insb
xchg
sub
dec
add
shlb
jo
int
mov
xchg
inc
sbb
and
sbb
mov
xor
gs
cmp
fs
cmp
push
inc
ss
lahf
clc
test
sbb
test
push
push
mov
cmp
fldl
lahf
jns
jbe
cmp
dec
or
push
das
and
mov
test
fldenv
pushf
xor
ljmp
jg
aaa
push
inc
mov
jmp
and
dec
stc
mov
pusha
mov
dec
cli
jo
rorb
mov
xlat
cli
aaa
jge
adc
mov
ds
lahf
xchg
cli
mov
out
mov
pop
add
xchg
cmp
or
mov
inc
aam
xchg
inc
pop
pop
jge
and
mov
mov
cmpsb
and
xchg
mov
jle
inc
or
fnsave
jecxz
int3
mov
orl
cmp
adc
mov
mov
aas
mov
int
aaa
cltd
std
insb
or
push
xchg
fmul
pop
add
xchg
cmpsl
push
mov
mov
mov
jne
mov
lock
jge
out
add
sbb
push
jmp
mov
popa
lods
loopne
idiv
sahf
cmp
pusha
pop
push
sub
jb,pt
filds
repz
fs
mov
and
inc
movsl
gs
cmp
xchg
rcrb
ja
rorb
fadds
add
movsb
shl
sahf
push
and
push
add
pop
and
in
cmp
jmp
or
xor
orl
and
or
cmpxchg
aad
mov
push
push
das
ret
mov
mov
out
or
push
jne
fs
jo
clc
and
out
and
cli
pop
cmp
insl
jns
test
pop
scas
pop
ljmp
ret
gs
sub
pop
dec
jge
lods
sbb
shrl
mov
scas
pushf
inc
sub
addb
js
scas
pop
dec
push
imul
aam
sub
repz
push
imul
push
rcrb
pop
into
mov
imul
mov
adc
push
sub
push
fistl
shlb
fdivr
ja
inc
ss
mov
cmc
cmp
xchg
mov
jmp
cltd
jnp
adcb
dec
inc
mov
push
jae
mov
sub
scas
stos
mov
testl
mov
add
gs
orl
xor
add
jo
dec
mov
lret
jp
daa
pop
imul
cmp
ss
sbb
push
pop
cmp
and
jb
pop
out
or
adc
push
cli
scas
inc
mov
pop
or
cmp
cmpsl
nop
adc
nop
popf
jmp
mov
jbe
aas
loope
xchg
outsb
arpl
cmp
mov
xorb
repz
mov
movsb
fisubrs
mov
xchg
cmpsl
insl
out
xchg
stos
cmpsl
adc
aaa
repnz
ss
sarl
xlat
mov
mov
mov
scas
push
mov
jle
xchg
lahf
jecxz
popf
les
sbb
pop
push
or
shlb
repnz
mov
cld
dec
pop
cltd
movsl
jbe
pop
mov
mov
push
repz
dec
jo
repz
dec
xchg
xchg
jmp
pop
cmp
mov
iret
push
imul
inc
inc
out
pushf
fdivs
mov
gs
jae
xlat
mov
js,pt
cmc
into
and
adc
mov
xchg
and
dec
pop
jbe
test
and
adc
mov
scas
flds
jo
sarb
fldl
adcb
mov
xchg
aaa
sub
call
adcb
out
mov
ret
fprem1
cmp
mov
mov
inc
push
sbbl
jbe
loope
test
adc
mov
add
ljmp
pop
pop
pop
rorb
mov
push
fucomip
andl
pop
inc
adc
jnp
jno
gs
mov
push
lds
mov
insl
mov
or
jp
sub
mov
pop
cmc
ss
subb
movsl
sti
mov
xor
negl
cwtl
cmp
es
jo
enter
fstl
js
add
push
rcrl
into
pop
ficoms
pop
and
push
in
sub
out
das
loop
enter
testl
loop
xchg
lock
xchg
out
xchg
adc
jmp
leave
repz
mov
xchg
mov
pop
stos
ljmp
xor
jp
inc
repnz
mov
add
lock
push
mov
cmp
xor
arpl
sbb
or
pop
arpl
lret
bound
out
daa
or
lods
pop
pusha
xchg
add
inc
push
sub
rcl
mov
ljmp
xchg
lock
pop
adc
in
xor
mov
js
loope
call
mov
inc
or
xchg
out
ror
or
divl
lods
xchg
xor
stc
repz
movsl
pop
int
in
mov
push
adc
cmp
cltd
lods
adc
fwait
mov
dec
inc
inc
lods
insl
or
nop
adc
xchg
xor
sub
xor
adc
in
push
and
inc
push
and
jb
xor
cmpb
sbb
jmp
nop
stos
aad
mov
adc
repz
pop
cmp
xadd
jb
inc
cs
or
mov
xor
add
or
subb
add
adc
sub
out
stos
sbb
mov
or
mov
rcll
jo
cmp
and
ret
js
jae
adc
gs
dec
data16
jo
jbe
xor
push
or
inc
jo
test
mov
mov
les
xchg
test
pop
push
inc
or
dec
push
add
jl
mov
icebp
shll
pop
jl
xchg
lret
mov
jb
pop
sahf
mov
cmp
lods
inc
sarw
or
jno
cmp
mov
or
pop
push
pcmpgtb
dec
jle
cmc
jmp
lcall
sub
int
cmpsl
xor
push
mov
adc
lret
cmp
and
adc
ljmp
fistl
inc
in
add
add
xlat
imul
or
sub
add
movsb
sbb
and
daa
bound
out
jge
sbb
cwtl
scas
cmp
mov
push
push
xchg
loop
jno
dec
loope
sbb
mov
int3
fadds
sub
sbb
jecxz
mov
stc
lock
adc
out
jg
rcr
sti
fisttps
scas
clc
push
push
pushf
outsl
mov
or
pop
decl
mov
cmp
xchg
ja
and
mov
js
adc
mov
aaa
mov
cltd
mov
sar
shll
pop
dec
jp
pop
or
mov
test
push
test
sbb
les
pop
xchg
jle
out
andl
pop
xchg
subl
xor
dec
pop
fistpl
orl
push
jno
jg
int3
aad
jne
mov
jno
and
dec
les
cmc
imul
int
jmp
jnp
pop
aad
icebp
sub
mov
cmp
xchg
cli
dec
int
jno
pop
inc
cmp
push
fs
mov
cs
xlat
insl
mov
andl
fwait
shlb
stc
ljmp
add
jp
aaa
mov
or
sbb
jge
sub
xor
ret
jo
xorl
lret
and
js
and
dec
adc
xor
sbb
bound
jecxz
or
inc
mov
dec
cmpsl
cmp
mov
lret
push
mov
and
xchg
addr16
lods
add
mov
movsl
cmp
out
cltd
dec
push
sahf
out
jecxz
mov
popa
push
jl
cmp
imul
mov
scas
pushf
lods
popa
jns
or
adc
mov
xor
scas
outsl
bound
xor
in
les
push
addb
xor
or
enter
fdivrl
lret
test
dec
dec
loope
repz
adc
jmp
ret
clc
shrl
ficoms
mov
push
push
sbb
jl
add
jne
std
jns
das
or
jno
nop
es
rclb
dec
mov
mov
xchg
inc
aas
cmp
aaa
out
aam
mov
push
sub
icebp
cmc
cmp
cltd
aas
orl
mov
movb
jmp
loop
js
out
jle
dec
lahf
mov
push
lock
adc
aaa
inc
cs
pop
mov
popa
dec
add
xchg
inc
inc
pushf
dec
adc
punpcklbw
out
in
pop
nop
insl
push
and
ss
mov
cmp
cmp
dec
inc
mov
imul
or
xchg
ds
push
aas
ja
cmc
xor
mov
adc
subb
aas
add
lock
lds
cmp
lods
ret
sbb
xchg
cmpsl
aam
add
fldt
pop
fs
stc
add
or
sub
pushl
insl
push
mov
fnstsw
lock
mull
imul
sbbb
repnz
pop
shrl
lods
mov
fdivrs
push
lods
pop
dec
aam
pop
dec
ror
push
pop
mov
stos
ljmp
xchg
fldcw
dec
jo
je
jnp
lea
push
cmc
mov
mov
sbb
mov
test
inc
fiaddl
int3
cmpl
mov
lea
in
stc
xchg
sub
aaa
jae
out
sbb
sahf
movsb
xor
inc
add
dec
mov
ljmp
mov
mov
iret
jb
ja
mov
jb
jns
sahf
lret
inc
int3
in
loopne
cwtl
mov
jns
mov
clc
cwtl
das
push
fdivp
lahf
pop
mov
pop
jnp
movsl
sub
testl
es
sub
mov
hlt
repnz
into
in
cmp
xor
mov
mov
add
sub
pop
sahf
or
fmul
push
or
out
add
jb
insb
fisubs
sub
mov
mov
mov
inc
add
ljmp
push
rolb
je
repz
xchg
push
xor
inc
mov
xchg
scas
push
xchg
add
dec
pop
mov
push
add
rcl
pop
mov
je
pop
enter
add
jnp
addr16
jmp
inc
ja
mov
pop
pop
es
mov
jp
pushf
lea
pushf
ss
sbb
popf
sub
repz
dec
insl
in
imul
ja
add
xlat
mov
and
loope
jno
sbb
aam
fcmovnb
aad
xchg
adc
and
xchg
sub
push
test
xchg
inc
xlat
das
lcall
add
pop
outsl
jp
out
mov
push
xchg
xor
scas
mov
repz
out
out
pop
mov
cli
loopne
insl
std
cmp
roll
pop
adc
push
rcrl
and
or
mov
push
fmull
jns
sbb
mov
xchg
sarb
ja
xchg
add
aaa
flds
xlat
xchg
push
push
pop
test
xor
or
ljmp
lcall
test
lds
out
lock
jae
pushf
rdmsr
pop
lock
stc
out
in
bound
je
push
fidivl
push
loopne
or
lea
xchg
sbb
xchg
lahf
xchg
jae
ljmp
inc
jae
cld
pop
imulb
push
sub
arpl
mov
icebp
adc
gs
aaa
lahf
xor
adc
adc
insl
adc
out
das
mov
jp
lret
dec
idivb
add
incl
dec
ss
fwait
scas
enter
out
sbb
enter
cli
clc
sub
xor
in
pusha
adc
jno
xchg
and
push
test
add
and
jae
sub
fistpll
pop
gs
jno
es
add
out
loopne
int
xor
mov
dec
out
jg
mov
mov
popf
and
fbstp
rolb
int
xchg
xor
pop
les
push
icebp
neg
pushf
popa
aad
dec
loopne
xchg
xor
mov
out
mov
into
add
mov
lret
aad
lahf
pop
mov
dec
sbb
sub
lret
in
mov
stos
fiaddl
and
jo
hlt
aas
subb
std
out
mov
add
fcmovb
pop
push
enter
pop
popf
out
jg
loop
dec
dec
adc
sub
adc
lahf
dec
lret
push
test
bound
pop
iret
and
adc
mov
enter
addl
clc
jmp
pop
pinsrw
mov
pusha
cmpsl
daa
adc
sub
pop
xor
xchg
insb
pop
bound
clc
mov
xchg
in
gs
push
dec
inc
test
add
mov
add
pop
mov
cmpsl
push
cld
pop
push
and
xor
shll
sub
dec
popf
std
addb
repz
aas
bound
adc
lock
in
int3
cmp
imul
aam
scas
jg
xchg
jnp
stc
pusha
lods
and
add
fists
pop
div
sub
fwait
incl
cmc
cmp
lahf
adc
jns
or
push
mov
subl
jno
fadd
jmp
enter
hlt
mov
sub
push
cwtl
mov
inc
out
inc
sar
mov
or
pop
jp
lahf
shr
push
cmpsb
imul
push
jecxz
out
loop
cmp
fadd
int3
pop
dec
jnp
xchg
popf
shrl
loop
push
bound
cmpsb
rolb
sub
jb
add
sti
xchg
cmpsb
jbe
popf
sbb
scas
repz
push
adc
repnz
push
fcmovnb
adc
fidivrs
ja
jge
lods
hlt
adc
int
jg
nop
cmpsb
daa
inc
cmpsb
in
jmp
sbb
jnp
push
cld
sub
fsubp
iret
les
lods
push
daa
xor
and
cs
adc
push
mov
pop
aas
pop
testb
mov
or
or
jo
inc
lods
insl
dec
and
push
fadd
fldt
push
lods
mov
jle
movsl
sbb
jno
cld
in
xlat
mov
inc
push
das
fs
xchg
pop
mov
enter
aaa
push
xor
pop
fnsave
loope
daa
mov
imul
ret
xor
test
aad
cli
add
test
iret
subl
mov
imul
inc
sbb
out
adc
push
lods
out
daa
iret
sub
mov
sub
or
xor
scas
scas
mulb
fcomps
dec
mov
inc
sarb
adc
add
add
les
hlt
xchg
cwtl
cmpl
xchg
sub
jnp
dec
pop
lret
mov
pop
adc
faddl
dec
fnstsw
cmp
aaa
push
ja
iret
ljmp
movsl
and
sub
into
pop
mov
es
cmc
jmp
sbbb
hlt
mov
dec
in
lcall
pop
inc
pop
jle
xchg
add
stc
or
cwtl
cmp
push
add
cmc
inc
cmp
mov
pop
pop
push
xlat
push
loope
pop
xchg
xchg
gs
and
ja
mov
and
sub
sub
jecxz
stos
decb
in
imul
aam
aaa
imulb
gs
shrl
mov
cmp
mov
loopne
sbb
xchg
stos
std
cmp
inc
ror
add
lock
fs
and
add
push
or
jge
es
adc
icebp
ret
arpl
leave
test
add
ret
test
adc
jbe
sbb
cmpsl
mov
repz
aaa
xlat
sbb
ret
fadds
mov
jnp
fcoms
push
jno
xor
rcll
or
mov
fs
dec
stc
or
or
loop
push
mov
mov
faddp
add
push
jb
fbld
imul
mov
lea
adc
ret
fists
imul
pop
jmp
dec
inc
mov
sti
inc
add
lods
push
negb
cmc
out
test
divl
cmp
push
mov
xchg
lods
movups
and
xchg
aas
adc
sbb
sti
cwtl
cli
movsl
mov
or
lret
adc
rclb
jb
and
sarl
xlat
jne
repnz
sub
cs
movsl
repz
and
push
aam
aam
pop
shlb
pop
rcrb
test
mov
jmp
lock
mov
mov
push
popf
aam
pop
mov
nop
inc
push
aad
push
mov
cmp
inc
xchg
sqrtps
inc
adc
mov
inc
adc
jb
cmp
dec
test
xchg
pop
icebp
cmp
mov
sub
cmp
mov
into
loope
adc
daa
cmp
fisttpll
jbe
fnstenv
movsl
or
ja
pop
std
mov
xorb
jl
fs
fsubr
popf
out
jmp
popf
and
call
sbb
stos
sbb
gs
or
mov
gs
sub
mov
mov
sub
add
jl
and
cmpsb
sub
mov
fildll
cwtl
or
cs
jle
iret
aaa
inc
push
or
push
cmp
add
test
lahf
adc
mov
ficomps
in
repz
sahf
in
mov
xor
fsubs
cmp
arpl
or
jmp
aad
andb
les
out
sub
ds
int3
push
adc
clc
adc
ret
dec
jo
daa
xor
pop
add
jns
inc
dec
adc
rcrb
pop
aas
xor
dec
fs
movsl
jp
add
fisubrs
mov
test
movsl
loopne
inc
xchg
popf
movsb
imul
scas
fisttpl
data16
js
mov
cmc
sbb
add
pop
and
iret
and
mov
pop
imul
int
repnz
nop
les
sub
addr16
leave
dec
mov
into
xchg
pop
sbbl
cmp
insb
push
cmpb
inc
push
adc
mov
mov
psubb
lret
int3
xchg
jb
mov
add
insl
popf
jmp
mov
and
mov
ljmp
les
or
and
mulb
adcl
mov
mov
push
or
into
fistl
push
out
push
adc
dec
xchg
test
jne
adc
xor
loop
mov
int3
adc
lea
inc
scas
jg
sbb
dec
ss
stc
fdivp
xrelease
mov
hlt
mov
cmp
mov
shll
sbb
aam
adc
loop
clc
imul
or
cmp
xchg
xchg
scas
sub
jecxz
shl
outsl
xor
scas
add
jge
in
popa
roll
outsb
cmp
cmpsl
popf
mov
mov
call
sub
rolb
or
mov
mov
and
jp
and
ror
cmp
mov
inc
pop
jl
adc
inc
cmp
gs
push
mov
add
add
cli
pop
stos
push
sub
mov
test
cmp
pop
test
and
dec
adc
jmp
testl
shll
jno
xorb
push
cmp
cmp
xor
js
ljmp
mov
orb
jbe
and
test
add
mov
jb
jl
popa
jno
ljmp
add
xorb
adc
jp
cld
push
enter
mov
insl
xchg
cmp
idivb
lcall
cmp
add
mov
add
jp
mov
hlt
lock
xchg
out
mov
mov
fcompl
daa
les
arpl
scas
cmp
jno
jle
xchg
shlb
cmp
les
lcall
mov
xor
shl
sub
cmc
jle,pt
mov
inc
in
mov
mov
xchg
mov
and
fld
out
add
inc
fstpt
inc
sub
cmp
je
loopne
sub
pop
cmp
jne
out
push
jecxz
pop
lahf
js
sbb
in
xchg
movb
mov
mov
repnz
pop
pop
mov
cmp
or
inc
mov
mov
or
js
mov
in
inc
push
adcl
sub
mov
testb
pop
dec
inc
lods
or
or
jl
js
jmp
jle
sbb
loope
rcl
outsb
dec
mov
test
xchg
mov
dec
ret
addr16
cmp
imul
xlat
push
rcrl
mov
sbb
push
clc
sub
out
lea
push
and
test
stos
nop
fldl
out
jne
mov
inc
mov
jno
pop
add
xchg
sbb
adc
mov
dec
lods
fcomps
adc
outsb
push
cmp
sbb
inc
cli
cmp
fisttps
push
rcrl
fstl
mov
push
rorl
jne
jo
arpl
iret
pop
int
outsl
test
xchg
lods
sti
xchg
jno
pop
scas
sbb
sub
inc
std
sub
mov
push
mov
xchg
mov
mov
xchg
sti
aam
jmp
and
push
lock
rcl
xchg
and
mov
pushf
sbb
pushf
daa
pop
and
aam
jae
xor
popf
mov
fstps
mov
popf
shl
pop
mov
into
add
sub
mov
clc
sbb
and
mov
mov
cwtl
outsb
and
aaa
mov
in
sub
lcall
jo
xor
inc
in
outsb
fcmovnb
or
fnstsw
adc
adc
in
ret
push
xchg
outsb
mov
sub
shlb
xlat
popf
insl
xor
mov
and
sbb
mov
imul
fwait
push
js
aam
movsl
pop
in
add
inc
lret
cmp
xchg
pop
div
jns
mov
pop
bound
cmp
sahf
cmpsb
imul
sbb
sarl
cmp
sbb
mov
loopne
ret
push
sub
pop
cld
pop
out
stos
enter
pop
xor
and
lds
ret
adc
inc
sub
pop
popf
dec
pop
mov
cld
pusha
or
inc
add
mov
mov
leave
adc
sub
testl
shlb
push
jmp
and
enter
pop
cmp
cs
push
sbb
adc
mov
pop
add
lea
cmpl
outsb
push
stos
pop
int
dec
inc
data16
push
cmp
data16
in
rclb
push
insb
xchg
jmp
aam
sti
cltd
or
mov
clc
aad
jmp
adc
mov
sub
xchg
pop
cmp
movsl
or
mov
aas
out
imul
lret
fistps
pop
or
xchg
ds
data16
movsb
fmull
pop
cmp
dec
cwtl
and
nop
outsb
popa
mov
mov
mov
fsubrl
and
dec
or
fsubrs
push
dec
inc
add
dec
inc
sarb
mov
dec
pop
mov
inc
sahf
xchg
sbb
mov
adc
mov
insb
int
out
inc
push
shr
fwait
mov
es
idivb
pop
lods
cmp
push
inc
clc
mov
leave
xor
sub
loop
xchg
cli
xchg
adc
mov
mov
imul
lahf
inc
leave
mov
jp
hlt
shrb
inc
sub
mov
jp
fildl
mov
imul
xor
jge
sahf
loopne
adc
insb
testl
mov
inc
inc
mov
jae
push
nop
push
nop
addr16
mov
pop
pop
inc
rep
fildll
imul
ss
fs
or
ljmp
shrl
xchg
mov
adc
aam
add
xchg
imul
inc
jmp
fdivs
mov
sub
stc
xchg
pop
in
sbb
xor
test
out
mov
mov
shlb
pusha
data16
in
clc
jmp
lods
es
adc
mov
shrl
fiadds
xor
in
rcl
inc
jmp
int
pop
jns
loope
int3
adc
push
mov
test
pop
rcrl
popa
call
loope
lds
jmp
fmull
sub
jmp
mov
loopne
and
inc
pop
lock
ror
push
or
push
xchg
std
ror
lock
lods
cmc
mov
mov
cmp
gs
push
ror
mov
imul
add
xchg
pop
das
mov
addr16
mov
jmp
roll
xchg
xlat
sub
cwtl
test
pop
imul
fs
negl
pop
adc
add
pop
cmp
movsl
lcall
push
mov
out
add
stos
pop
inc
js
inc
ljmp
scas
lods
xor
jne
lock
mov
add
rcrl
or
push
jl
jecxz
cmp
sahf
out
js
test
cmpsb
lods
mov
adc
jmp
sub
sub
scas
jmp
ss
scas
hlt
es
cmp
and
lret
loop
mov
aad
mov
add
inc
cwtl
xor
popa
push
mov
xchg
xchg
add
mov
popf
iret
call
pop
test
pushf
mov
cmp
sub
cld
xchg
pop
add
lds
or
xchg
movsl
sbbl
xchg
lods
jne
mov
insb
or
dec
int3
rorl
cld
test
xchg
and
sbb
movsl
xor
adc
movaps
dec
adc
pop
sub
aas
cmp
xchg
add
push
pop
jb
push
and
push
mov
add
in
seto
shlb
jmp
mov
push
sbb
call
test
xor
mov
pop
repnz
call
fstpl
mov
repnz
pop
push
lock
std
js
xchg
jg
mov
pop
insl
or
arpl
loop
pop
mov
shll
sbb
and
xchg
lea
xor
in
loope
inc
cmp
sub
adc
imul
fs
ficoms
test
test
fsubrl
inc
push
push
clc
fcompl
dec
xor
jno
and
jmp
inc
stc
subl
hlt
das
test
insl
dec
testl
xor
ja
xchg
loop
mov
cli
stos
mov
les
mov
dec
loopne
xor
aaa
ja
pop
xchg
jmp
iret
pop
mov
outsl
mov
lea
sbb
and
mov
inc
push
mov
inc
mov
inc
sub
lock
xchg
push
mov
in
repnz
jle
insb
jne
loop
mov
jo
into
mov
dec
lds
jno
cmp
outsb
lret
in
jo
nop
xor
scas
leave
call
int3
inc
dec
sahf
and
out
xchg
sub
and
popf
pop
push
pop
in
std
push
paddq
and
xor
andb
mov
stc
addb
testl
adc
jns
out
lcall
notl
test
testb
mov
pop
adc
mov
jns
cmp
ret
dec
fimull
fs
or
and
aas
jg
mov
sbb
cs
lret
cmp
out
loopne
xchg
xchg
ds
scas
or
add
cli
xchg
sbb
and
dec
jg
sti
aam
pop
popf
push
xchg
int
mov
ss
mov
mov
je
pop
cwtl
sti
std
pusha
std
sbb
cmp
clc
out
adc
sbb
ficoml
mov
sub
rol
mov
and
jb
scas
cmpsb
sti
sub
rcrb
scas
push
xor
adc
mov
dec
sarl
repnz
add
enter
pop
out
js
fiaddl
push
imul
dec
xchg
bound
add
push
shl
mov
dec
sbb
les
pop
mov
ret
mov
mov
mov
sarb
aaa
stos
xchg
and
xor
lcall
mov
mov
es
outsb
pop
pushf
scas
repnz
jl
mov
pop
inc
cmp
mov
jb
loope
cmpsl
pop
les
call
push
inc
in
push
jmp
jne
push
hlt
xorb
mov
movsl
sbb
ficoml
xchg
or
add
and
mov
clc
sub
call
sbb
loope
sub
fdivrl
popa
inc
mov
xor
test
dec
push
hlt
lds
sbb
inc
mov
stc
jp
adc
cli
clc
aad
cmp
sub
data16
imul
dec
mov
inc
pop
ds
leave
ja
fists
repnz
repz
dec
mov
mov
adc
inc
inc
mov
lcall
dec
stos
mov
pop
inc
ret
adc
mov
lods
fcoml
sbb
push
add
sti
mov
lret
mov
das
pop
leave
lods
in
push
adc
int3
out
cltd
xor
out
cli
cmp
push
cmp
ror
mov
cs
and
vaddsubps
paddw
ds
fcmovnb
mov
xchg
hlt
cmpsb
cwtl
mov
mov
cmpsl
lahf
and
lock
arpl
push
hlt
mov
mov
and
test
imul
cmp
push
loopne
mov
cmp
mov
negb
mov
les
jl
cmpsb
jecxz
bnd
sahf
or
mov
add
mov
cld
dec
sahf
dec
shll
sbb
mov
jae
jo
out
loop
cmp
ds
dec
cli
in
jecxz
pop
adc
xchg
leave
inc
sbb
sub
xchg
mov
lret
mov
popa
add
sbb
arpl
xor
mov
out
jl
pop
dec
ret
xor
pop
in
mov
pop
jg
sti
mov
push
sbb
cltd
fld
pop
mov
fwait
push
xchg
or
push
sub
jb
sub
jmp
sbb
or
nop
flds
adc
int3
mov
add
jo
std
rorl
jo
jno
stc
repnz
sbb
pop
lods
cmp
mov
mov
inc
xchg
jp
arpl
jnp
mov
scas
mov
adc
rcll
pop
lcall
das
daa
or
mov
xchg
jg
push
bnd
imul
in
nop
lret
cmpsl
jns
jb
mov
sub
push
mov
out
pop
cltd
dec
xor
jo
sti
xor
decb
jne
sbb
leave
xlat
aas
jnp
test
mov
imul
ret
dec
pushl
cmp
loop
pop
repz
fnsave
mov
in
insl
sbb
loop
movswl
cmp
fists
dec
lret
mov
std
fdivp
and
mov
test
or
jbe
mov
jnp
inc
enter
pusha
mov
pop
clc
xor
and
pop
lcall
sub
cmpsb
jecxz
cmp
movsl
lea
int3
push
out
insl
jecxz
xchg
fwait
das
lods
imul
mov
sub
mov
jecxz
popa
jae
jne
inc
fwait
andl
rorb
push
stc
xchg
add
pop
or
rorb
jb
pusha
add
rorl
testl
pop
sarl
sub
and
push
or
pop
pop
dec
loopne
hlt
arpl
pop
test
sar
sub
xor
ljmp
enter
mov
cmp
xor
in
add
fistpl
mov
xor
in
sbb
jns
cmpsl
mov
mov
add
popf
inc
cmp
push
mov
movsl
in
cmp
push
vshufps
fidivrs
scas
pop
iret
in
out
sbb
test
adc
xor
stos
pop
imul
mov
push
addr16
jne
or
jg
push
scas
jnp
jo
cmp
sbb
push
cmpsl
es
adc
pop
orl
sub
xchg
test
rcl
rorl
and
lods
jg
testb
fisttpl
sbb
call
push
scas
mov
adc
mov
sarb
xchg
mov
stos
mov
push
jp
cmp
mov
outsb
repnz
cmpsb
xchg
sub
imul
jbe
pop
pop
pop
adc
inc
flds
cwtl
call
push
mov
mov
xchg
cs
mov
outsb
push
pop
int3
sti
xor
test
cmp
push
or
mov
int3
mov
mov
jnp
fs
mov
mov
subl
xchg
dec
std
scas
jnp
roll
in
insb
inc
in
inc
mov
cld
leave
xchg
fwait
or
fdivl
imul
adc
jge
and
sub
mov
mov
add
scas
mov
inc
fnop
xor
lcall
cmpb
mov
xor
icebp
adc
lods
in
or
xor
rcpps
in
hlt
mov
ss
shlb
push
pop
xor
ds
jle
cs
mov
enter
mov
enter
mov
add
cmpsb
loop
dec
stc
or
popa
pop
ret
mov
mov
lods
gs
cmp
roll
out
cltd
sub
subl
lock
jmp
lret
in
and
int3
cmpsl
sahf
dec
jecxz
leave
xchg
mov
stos
or
mov
testl
ret
loope
and
aad
sub
inc
or
je
hlt
sar
mov
rcrl
adc
jno
ljmp
dec
or
pusha
jbe
loope
lea
xchg
shr
mov
les
pop
and
testl
js
call
cmc
ljmp
sahf
pusha
lods
mov
jge
xchg
test
insl
inc
iret
sbb
xchg
dec
movsb
pop
mov
sub
jecxz
cmpsb
nop
adc
leave
lods
cmpl
in
call
pop
fistl
sbb
mov
add
sbb
das
mov
sub
pop
out
bnd
add
xchg
mov
dec
sti
pop
cmp
push
adc
mov
loop
or
xchg
pop
sarb
insb
into
push
nop
out
push
ljmp
sub
dec
popf
xlat
aam
test
loope
dec
scas
xor
inc
xorb
imul
mov
sub
xor
jmp
stos
stos
loope
and
add
or
mov
xchg
clc
and
push
mov
inc
outsb
inc
mov
hlt
hlt
push
jnp
xorb
fadd
loope
sbb
enter
mov
andb
add
mov
shrl
daa
andl
inc
jo
sbb
pop
and
mov
push
divb
outsl
test
sbb
insb
rclb
inc
lahf
repnz
hlt
cltd
rcrb
das
jo
sti
iret
mov
std
push
xor
push
push
mov
test
movsb
les
mov
enter
std
sbb
jle
mov
pop
mov
fiadds
dec
ret
mov
jns
orl
cmc
sbb
mov
rorb
fldcw
ret
shl
inc
daa
pusha
mov
or
xchg
lret
push
lahf
xor
pop
in
sub
dec
nop
inc
mov
mov
sub
ljmp
int3
push
sbbb
gs
dec
stos
jns
mov
or
mov
xchg
sub
jns
pop
outsl
fcom
loope
cli
movsl
clc
and
es
ret
push
sub
xor
sub
dec
lcall
rcrl
jo
mov
xor
xor
pop
imul
inc
filds
add
xlat
scas
arpl
andb
adc
loope
and
js
inc
cmp
insl
sbb
xor
sbb
inc
pop
sbb
pop
imul
shlb
xchg
popf
xor
sub
test
jns
and
add
ja
pop
test
rolb
rorl
xchg
popa
inc
dec
jns
push
out
pop
mov
jp
int
or
addb
fldenv
and
xchg
lcall
mov
push
inc
gs
jae
push
loope
imul
lret
lret
iret
stc
adc
push
jne
jl
adc
jge
pop
lret
notl
test
cwtl
pop
mov
mov
jne
mov
std
shrl
pusha
and
nop
mov
mov
adc
mov
push
insb
lds
jecxz
push
call
pushf
repnz
inc
cmc
mov
mov
cmpb
jecxz
add
xor
cwtl
sbb
icebp
mov
in
sub
add
rcr
jo
movsb
inc
jmp
ret
pop
add
aaa
mov
aam
and
pop
dec
push
in
pop
pop
cmpsb
lret
cs
xchg
mov
or
sbb
and
iret
adc
cmp
imul
mov
sbb
push
mov
xchg
jbe
mov
push
lock
ja
jae
sar
shlb
lahf
mov
vmovdqa
test
mov
lret
adc
cmc
adc
scas
cld
pop
loop
sti
dec
push
xor
or
sub
and
int
popa
iret
test
dec
mov
dec
aas
pop
push
loope
lret
cmp
icebp
sub
mov
test
pop
rol
aad
inc
mov
push
inc
sub
dec
dec
test
pop
inc
mov
mov
xchg
jecxz
pop
arpl
push
dec
shr
adc
lods
mov
roll
lods
fwait
inc
sub
cmpsl
sti
enter
push
lods
pop
int3
les
jmp
aam
cmp
mov
out
pusha
iret
jbe
nop
dec
addl
subl
dec
out
outsl
pop
mov
std
sbb
cld
in
andl
mov
dec
cmp
push
inc
cmp
push
jl
dec
mov
popa
mov
jno
fists
loopne
dec
jb
and
insb
ret
sti
cmp
cmp
add
xchg
xchg
shlb
adc
test
out
mov
cwtl
cmpsl
inc
aaa
mov
in
dec
push
mov
rorl
xchg
push
scas
out
mov
gs
orl
in
mov
js
or
mov
inc
movsl
sarl
cwtl
or
mov
jl
dec
jns
dec
adc
cmc
and
cmc
icebp
sub
int
gs
sub
dec
mov
add
lret
repz
sbb
jae
in
mov
jno
jne
mov
push
xchg
pusha
add
mov
les
mov
sbb
mov
les
sti
iret
fwait
cmp
mov
pop
push
lret
aaa
dec
test
les
cmp
mov
call
lahf
mov
rcll
in
mov
fsts
addr16
and
in
addr16
orl
lock
sbb
ljmp
cmp
out
sbb
pop
std
repnz
popa
jge
fiadds
adc
std
and
cmp
jl
mov
sbb
test
ja
and
test
jne
push
pop
jge
push
repnz
mov
adc
pop
fdivl
cmp
cmp
pop
mov
aad
xor
mov
add
pop
dec
stc
and
gs
cmpsb
xchg
out
gs
insl
mov
sbb
inc
jno
xchg
mov
insl
xchg
sub
cmpsl
inc
ds
sarl
add
cmp
das
outsl
lods
test
push
bound
movnti
sbb
or
push
mov
cmp
mov
sti
loope
in
mov
adc
cld
popf
addl
jb
aas
inc
rcr
jecxz
adc
dec
inc
jnp
arpl
and
inc
pop
std
mov
xor
dec
dec
std
test
jo
bound
pop
das
add
repnz
fisttps
shlb
jne
or
xor
inc
dec
dec
pop
idivl
push
add
out
insl
xor
xor
inc
adc
push
es
cmpsb
in
push
shrl
push
out
sub
mov
leave
xlat
ja
mov
addr16
rcll
roll
sbbl
pop
test
insb
mov
adc
imul
sbb
or
shll
ljmp
cmp
push
fnsave
dec
pop
jp
xlat
arpl
adc
jmp
je
nop
leave
repnz
cs
inc
sub
jnp
pop
adc
sub
xor
rcll
xchg
sahf
xchg
in
sbb
cwtl
mov
aad
in
jb
adc
push
add
sahf
pusha
stc
es
pushf
les
adc
xor
fstps
pusha
mov
out
les
or
add
add
xchg
popa
inc
shrb
push
pop
inc
ficoml
sub
gs
pop
or
cmp
mov
pop
outsl
or
das
and
sbb
add
nop
decb
ds
ds
ja
dec
ss
ss
ss
cmc
rcll
add
mov
pop
sahf
and
xchg
repz
pop
xlat
into
pop
mov
and
test
jp
in
lock
xor
cmp
popf
fsubs
fdiv
loopne
adc
icebp
pop
repz
xor
mov
ret
xchg
and
loopne
stc
jns
fucomi
xlat
adc
scas
mov
sub
sub
or
push
add
lahf
jno
cmovle
gs
adc
jecxz
orl
jo
fsubrs
mov
fsub
inc
nop
cmc
decl
pop
inc
adc
outsb
mov
test
adc
or
fiadds
dec
out
add
ret
stc
ret
jmp
ret
insl
fldt
inc
mov
jge
out
das
xchg
inc
jmp
aaa
pop
ret
sbb
je
out
mov
jge
cld
bound
into
sub
cmp
rorb
cli
out
mov
js
mov
inc
ja
push
cmpl
push
aad
xchg
add
in
cmp
mov
mov
lcall
mov
in
fdivs
repnz
push
out
sub
lock
repz
arpl
rcl
and
ror
mov
jle
shll
cld
adc
jbe
jg
xchg
mov
push
push
and
inc
push
not
cmp
dec
xchg
int3
sub
adc
ss
ret
cwtl
clc
cmpsl
dec
inc
xor
add
sub
popa
cld
mov
jae
and
insb
sub
and
push
out
in
das
daa
mov
cs
xor
sti
int3
cmpb
ljmp
adc
mov
mov
pop
jp
adc
inc
or
pop
in
fdivp
mov
push
push
pop
dec
pusha
sub
push
clc
aas
mov
push
fs
sub
jne
aad
adc
cli
mov
dec
loop
pushf
out
sub
cmp
mov
pop
in
ja
pop
bound
addr16
pop
mov
cs
jmp
adc
mov
call
fldl2e
jo
mov
mov
mov
xchg
gs
xchg
push
sub
push
and
dec
adc
outsl
add
jp
sbb
fdivr
dec
mov
sub
jno
dec
fs
test
lret
loope
ret
pop
loope
negl
scas
mov
pusha
fistl
push
jp
negb
or
scas
fstpl
movsb
add
sub
pop
es
lods
dec
xchg
cltd
fmuls
in
inc
nop
out
sbb
repz
js
loope
pop
cmc
adc
dec
fsubrs
mov
fadd
clc
dec
test
call
cltd
cmp
int3
in
fucomp
nop
int3
mov
test
in
aad
in
negb
sahf
jns
jne
sti
in
sbb
mov
orl
xlat
rcrl
jno
mov
lods
sbb
in
mov
xchg
stos
fcomps
dec
mov
and
ljmp
sbb
cmpsb
xlat
jle
pop
lret
imul
inc
outsb
test
cmpsb
cwtl
xor
shll
jbe
or
mov
push
push
jle
lods
mov
jle
movsb
shlb
movsl
popf
jge
bound
sarb
cmp
pop
arpl
push
xor
repz
sbb
imul
add
or
pusha
insb
mov
push
mov
repz
pop
push
lods
add
mov
sbb
and
dec
out
mov
hlt
out
nop
mov
scas
mov
mov
out
jns
pushf
es
jge
mov
mov
sub
sbb
pop
pop
mov
mov
mov
or
jg
ficoml
movl
xchg
push
xor
xor
jp
sub
test
pop
ret
rol
mov
outsb
pop
mov
jle
mov
inc
shlb
das
and
fstl
pushf
gs
addr16
lock
cmp
pop
test
push
lods
arpl
or
sbb
jb
xchg
fsts
lahf
bound
cmp
outsb
push
shll
sub
dec
addr16
dec
sbb
cmpsl
icebp
add
dec
adc
sbb
sub
in
dec
mov
sbb
cmpsb
cmp
adc
aam
xor
mov
dec
cmpsb
sahf
lcall
pusha
test
ss
aaa
xchg
or
xchg
loop
cmp
test
iret
mov
rorb
xlat
inc
dec
cli
sti
pop
aam
pop
xor
stos
lds
in
insb
adc
pop
push
fmul
pop
or
inc
iret
mov
loop
and
ds
adc
mov
movsb
jmp
stos
jb
jbe
ljmp
jecxz
jle
xor
rcll
enter
jl
dec
fstpl
pushf
enter
push
cmp
stos
xor
aam
aam
mov
ret
add
and
push
push
lock
imul
mov
call
jmp
cmpsb
mov
mov
js
enter
push
or
clc
xchg
fimuls
mov
and
test
lods
fs
leave
loope
stc
jne
hlt
xchg
pushf
lcall
popa
or
cs
or
cmp
pop
insl
test
call
loope
mov
adc
clc
lock
jno
inc
add
sbb
push
pop
mov
mov
xor
push
mov
mov
adc
into
lds
mov
and
test
cmp
cmpsl
pop
jns
imulb
les
push
rcrl
push
jnp
cmpsb
and
adc
daa
or
scas
ja
push
jg
adc
cmp
stc
pop
mov
out
mov
mov
mov
push
push
decb
and
and
sub
fstpl
bound
push
das
add
repnz
sar
xchg
out
pusha
ds
mov
inc
xchg
push
push
mov
mov
sub
push
mov
jg
movsb
and
jecxz
mov
out
cmc
pop
cmp
pminsw
lods
lret
mov
pop
shlb
pushf
loope
and
mov
jg
inc
mov
jnp
rclb
mov
js
sarl
andb
ljmp
jp
stc
adc
xchg
lods
or
into
je
sti
pop
xlat
mov
pushf
mov
mov
jbe
shlb
imul
popa
dec
cmp
jbe
pop
adc
lahf
cmp
push
shrb
xchg
sbb
movsl
shrb
and
and
aas
and
mov
rclb
mov
fisttps
in
mov
dec
xor
ret
mov
jge
cmp
pop
xor
sbb
mov
sbb
js
mov
addr16
sub
insb
out
in
and
ljmp
mov
repnz
jnp
pop
icebp
sub
fisubs
add
cltd
mov
inc
hlt
into
and
movsb
jle
push
pushf
movsb
push
add
add
aas
popa
addb
inc
adc
pusha
mov
dec
sbb
push
jp
jb
test
imul
lret
cmc
cmp
sbb
xor
xorb
pusha
repnz
and
inc
outsb
je
lods
popa
mov
lcall
push
lahf
jecxz
aad
sbb
or
or
mov
jl
sbb
xchg
sub
mov
cli
iret
faddp
clc
push
loopne
pop
or
stos
enter
scas
rolb
pusha
jo
add
outsl
mov
movsl
das
xchg
cmp
inc
xchg
mov
cmp
in
xchg
pop
out
data16
dec
test
cltd
pop
dec
pop
test
mov
ficoms
data16
in
xchg
cs
or
mov
cmp
mov
lret
pusha
add
js,pn
xchg
push
cmc
fistpl
out
call
adc
push
test
add
xor
cmp
dec
push
gs
mov
fs
dec
inc
outsb
xor
inc
pop
jo
fdivl
pushf
pop
aas
pop
pop
test
sub
mov
push
push
repz
lods
xchg
fistpll
pop
push
mov
xchg
in
mov
pushf
out
mov
sti
xor
shlb
pop
cwtl
loopne
mov
sbbl
shll
aas
xlat
popa
xchg
cld
aad
fsub
in
inc
push
popl
pop
xchg
lds
dec
dec
je
push
clc
sub
data16
push
rclb
mov
sbb
cmpsb
inc
xchg
sub
jp
pop
int3
incb
inc
aaa
ja
xchg
jg
jno
pop
sbb
cmp
fidivrs
fidivl
rcrl
jae
loop
cmpsb
iret
mov
xchg
pop
sar
adc
adc
cmp
aaa
cmc
mov
cli
inc
jge
add
xor
pusha
out
dec
lods
jge
sbb
add
inc
cs
mov
inc
in
stc
xor
and
pushf
xchg
xchg
xchg
mov
pop
int3
pop
test
xor
add
xchg
mov
sbb
or
scas
cli
ficoms
xchg
mov
imul
inc
xlat
arpl
or
into
jmp
adc
cwtl
xor
icebp
jmp
cmp
xlat
into
shr
mov
call
mov
add
add
pop
pop
jle
mov
or
jge
fnstcw
xchg
pop
jecxz
pop
mov
mov
and
fucomi
mov
pusha
push
pop
jns
push
fcomp
adc
adcb
out
mov
xchg
pop
jg
nop
aaa
lret
inc
sub
inc
aad
fistpl
mov
cltd
pop
ficomps
lods
cmc
ljmp
and
sbb
sub
fisubrl
xchg
icebp
push
repz
sub
lahf
dec
cmp
scas
cltd
adc
mov
imul
jns
in
sub
subb
or
nop
data16
icebp
lret
or
mov
push
dec
enter
rclb
sub
xor
mul
jmp
test
push
add
jl
adc
int3
outsb
jns
ljmp
fmull
adcl
push
ret
pop
cmp
add
es
add
jae
leave
shll
idivb
and
xor
mulps
jb
mov
jae
push
int3
std
pop
movl
sbb
shrb
mov
movsl
xor
enter
cs
cmp
ss
cmp
push
sub
inc
sbb
pop
cmp
adc
rcll
in
loope
dec
cmp
cmp
data16
js
mov
mov
xor
leave
xchg
movsb
sub
inc
sbb
add
out
or
jp
adc
xchg
imul
sbb
lds
jmp
mov
roll
ss
jnp
jnp
test
mov
outsb
test
imul
and
in
lods
fildl
pop
inc
lock
dec
lods
data16
out
mov
aad
inc
scas
mov
das
dec
es
sub
outsb
or
stc
ds
out
out
jbe
pop
mov
pop
dec
jecxz
mov
pushf
adc
jle
rcl
rclb
out
sbb
test
add
jb
popf
xchg
sub
adc
and
fldt
push
enter
testl
jmp
pusha
aam
subl
cmp
mov
fmuls
mov
push
sbb
sbb
ss
loop
dec
push
sub
sbbl
sub
adc
mov
sub
xor
pop
mov
mov
xchg
push
or
push
mov
or
std
iret
add
pop
mull
cmp
jge
pop
jecxz
sbb
in
cmp
lods
inc
dec
std
sbb
add
div
loopne
inc
mov
dec
mov
adc
push
cmc
popa
or
mov
cmp
cld
in
add
movsl
or
aam
xchg
jb
shlb
out
jecxz
push
pop
jae
jmp
fisttpll
add
aam
lret
icebp
icebp
or
jne
cmp
pop
inc
push
sbb
adc
sub
test
mov
aaa
push
out
cmp
movsl
test
adc
add
mov
das
jne
jp
ljmp
mov
add
js
xchg
cld
sbb
sbb
jnp
into
jecxz
fdivr
xor
xor
std
repnz
pop
nop
test
nop
mov
pop
scas
inc
out
push
fistps
nop
roll
mov
jo
fisubrl
mov
jb
jecxz
ljmp
jge
cmp
lds
sub
xchg
dec
decl
pop
add
ja
push
subl
inc
push
aam
icebp
sbb
mov
push
sbb
clc
sbb
dec
lds
arpl
in
out
mov
fs
aaa
mov
adc
mov
push
in
push
or
pop
or
add
div
mov
js
sub
std
pop
rclb
inc
inc
or
mov
lahf
scas
mov
cmc
lea
mov
push
or
stc
cli
pusha
push
leave
adc
pushf
lds
add
inc
or
mov
lds
std
icebp
pop
or
into
cmp
cmp
aad
test
sbbl
scas
add
sbb
addr16
scas
push
sub
mov
mov
addl
addr16
lret
mov
sub
mov
jge
loopne
xchg
fldt
push
mov
insl
fisttpl
pop
sub
mov
popa
shll
sub
imul
mov
jo
scas
lcall
test
pop
jo
mov
cwtl
shlb
std
lds
add
and
jns
sub
sub
out
add
movsb
push
mov
mov
xchg
popa
dec
sbb
data16
inc
movsb
addr16
cmc
xchg
sub
dec
andl
lock
push
and
leave
sub
add
pop
addr16
and
mov
cs
and
cltd
fldenv
xchg
sbb
sahf
outsb
sti
push
call
in
pop
xor
adc
pop
or
inc
inc
pop
fdiv
inc
fstpt
mov
xchg
jns
pop
sub
add
cli
cmp
test
and
sub
sbb
mov
and
imul
push
xor
jge
inc
push
pop
jl
sbb
or
xchg
repz
cmpsb
push
adc
add
dec
repz
fidivrl
pushf
adc
push
and
hlt
sbb
dec
pop
mov
mov
cli
lods
fs
inc
das
movsl
enter
mov
xor
pusha
xor
mov
xor
test
push
lret
movsl
cld
outsl
out
int3
mov
adc
xchg
cld
mov
jb
lock
leave
add
in
es
out
fisubrs
std
mov
jne
insb
addr16
cltd
xlat
fwait
jmp
mov
outsb
push
cmpsl
cmp
add
in
pop
cmp
mov
add
stc
mov
or
outsl
movsb
nop
ret
stos
in
cwtl
out
add
std
and
cmp
clc
dec
mov
test
pop
aaa
call
inc
gs
fsts
jb
mov
pop
fisttpl
mov
sahf
js
push
mov
mov
adc
gs
adc
repz
popf
inc
aas
repnz
je,pt
cltd
sbbb
das
and
jnp
in
dec
or
lahf
add
and
sbb
dec
sar
fcoms
or
adc
arpl
xor
in
dec
xchg
inc
idiv
test
mov
pop
in
lea
jmp
push
mov
mov
fisubrs
lret
lahf
cmp
jae
lea
jecxz
int
mov
add
push
add
mov
bound
ja
ret
sbb
lcall
xchg
inc
mov
push
pop
pop
cmp
xchg
int3
adc
ja
sbb
lods
lret
in
xor
aas
leave
sbb
out
pop
sub
rol
mov
mov
icebp
test
js
mov
pop
inc
cmpsl
jge
das
shr
imulb
and
popf
in
pop
fisubrl
jne
add
adc
mov
lret
pop
sbb
mov
inc
xlat
inc
in
cmp
or
cmc
mov
xor
mov
loop
jp
sahf
and
dec
jb
fld
aad
adc
adc
push
test
xchg
pop
insl
in
sbb
cmpsb
cmp
sub
mov
dec
inc
pop
orb
orl
daa
into
lea
and
push
sub
push
mov
or
std
or
jp
sarb
lods
movsl
mov
leave
mov
movsb
xor
dec
pop
jno
jb
add
sub
sub
sub
mulb
call
mov
movsl
jge
test
dec
mov
scas
xor
cld
cmpsb
pop
test
repnz
inc
ret
jl
lock
mov
dec
push
movb
or
mov
aaa
xor
loopne
cmp
int3
das
std
fbld
xchg
pop
sub
mov
notb
outsb
mov
and
or
iret
sti
xor
xchg
fwait
or
popa
leave
shrb
jno
pop
lea
pop
xchg
sti
call
sub
ds
andb
pop
adc
cmpsl
sub
imul
xchg
lds
mov
xor
xor
cltd
cmpb
pusha
sbb
push
jecxz
imul
aas
stc
sahf
ret
mov
cs
push
add
pop
je
jne
dec
popf
add
frstor
nop
add
xor
jb
adc
jecxz
test
call
loop
cli
mov
xchg
adcb
outsb
adc
lock
fsubrl
adc
scas
addb
stos
mov
or
fists
or
push
push
sbb
and
lods
push
ret
js
and
or
out
pop
cmp
jmp
mov
fld
pop
xor
repz
cmc
mov
dec
sbb
fisttpl
sti
mov
push
dec
pop
pusha
push
mov
and
xchg
push
lahf
jae
icebp
pop
and
jl
stc
inc
enter
push
adc
inc
xor
pop
sbb
jl
in
dec
pop
les
in
pop
add
enter
insb
ss
jle
fwait
out
xor
pushf
cmpsl
xchg
xor
cmc
jns
push
cld
in
push
loopne
xchg
test
lahf
in
add
inc
pushf
ret
loope
mov
sahf
push
leave
pop
or
adc
and
jno
mov
lea
cmp
rcrb
lock
mov
or
xchg
jg
arpl
inc
and
add
push
pushf
xchg
pop
prefetchnta
mov
cmpsb
xlat
lcall
push
jae
cmp
subl
mov
inc
rcll
shll
mov
notl
mov
insl
jae
mov
insl
push
shlb
mov
mov
inc
jecxz
sahf
lret
lcall
inc
and
mov
xor
inc
leave
pop
cmc
mov
out
mov
imul
stc
adc
or
loope
xchg
inc
adc
sbb
sahf
cltd
mov
jnp
icebp
clc
inc
clc
or
outsb
andl
scas
cmpl
and
inc
push
push
jmp
lods
xchg
les
ret
scas
push
mov
dec
fnsave
push
outsb
cmp
or
jecxz
lds
icebp
popf
mov
fiadds
scas
ja
es
xor
pop
xchg
adc
dec
pop
imul
cmp
jae
cmc
inc
sub
lret
push
rep
dec
jbe
and
xchg
pop
xchg
int
pop
out
mov
cmp
lcall
xor
jno
bound
and
test
or
addr16
pushl
sahf
and
bound
jle
xor
sub
add
outsb
add
nop
pop
xchg
lds
ret
lcall
aad
out
xorb
js
adcl
test
arpl
sbb
or
adc
cmc
push
pop
or
in
ret
sub
cmp
loope
inc
mov
ds
mov
stos
or
in
scas
or
adcb
in
xchg
in
mov
repz
push
jmp
jnp
imul
mov
sub
lcall
inc
sbb
jmp
icebp
dec
adc
push
pop
fdivrl
pop
sub
jb
pop
stos
int3
pop
clc
loopne
cmpb
pusha
xchg
push
push
jo
mov
pop
push
jo
ljmp
xchg
scas
rorb
inc
mul
sbb
std
jns
dec
repnz
fstpt
push
dec
pop
lods
call
pop
sahf
lods
cmp
frstor
out
pop
mov
push
jae
test
jnp
test
ffree
mov
jae
cmp
mov
bound
push
add
test
nop
test
hlt
fcomps
adc
push
cld
cld
stos
outsl
jns
push
adcl
outsb
xor
iret
inc
adc
pop
leave
ds
add
movsl
pop
mov
add
adc
iret
mov
adc
test
cmp
ds
movsl
mov
iret
cld
lahf
insb
xchg
dec
dec
sbb
fidivrl
cmp
lcall
jnp
fyl2x
inc
jl
or
gs
fcomps
sbb
add
xor
je
inc
inc
fs
sbb
cld
xchg
into
fdivrp
fists
out
scas
rorb
mov
pop
dec
inc
push
aaa
mov
lcall
jge
mov
hlt
cmpl
bound
dec
push
pop
pop
lret
adc
xchg
adc
mov
icebp
pop
mov
dec
mov
pop
sbb
mul
add
add
push
in
cld
incl
cmpsb
xchg
mov
loope
repnz
mov
sub
mov
das
add
xchg
outsl
inc
xor
jmp
int
dec
dec
lea
or
jle
lods
pop
xchg
movsb
loopne
iret
add
das
add
andb
add
stos
aaa
xor
xor
pop
das
push
aad
push
scas
pushf
xchg
dec
fsub
cmpsl
sbb
adc
loopne
xchg
and
cmp
sub
dec
call
adc
gs
scas
jecxz
xor
fidivs
xor
nop
adc
add
mov
xor
outsl
mov
in
jmp
mov
sbb
and
xlat
sub
fxtract
test
dec
aas
in
xlat
icebp
aam
lock
cmp
shrb
dec
mov
xor
int
stc
in
inc
mov
int
cmc
aad
jp
hlt
ret
movsb
das
es
or
stc
icebp
xchg
and
je
enter
xchg
int3
insb
in
and
call
adc
testb
cli
in
mov
mov
daa
cs
fwait
data16
pop
test
push
push
in
jle
test
scas
popa
lcall
mov
sub
arpl
push
adc
ret
aad
add
jo
mov
inc
lds
insb
sahf
push
sqrtps
or
movsb
aam
mov
push
dec
ss
inc
pusha
sub
sbb
mov
jle
fldcw
scas
clc
aaa
mov
hlt
or
dec
sbb
lea
cmpsb
jb
cmpsl
mov
lcall
jnp
cmp
or
aam
out
mov
mov
mov
mov
outsl
sbb
mov
mov
cmp
jmp
jle
add
addr16
mov
ds
aaa
movsl
jmp
lds
jno
fnstenv
and
cmp
in
pop
lods
pusha
mov
das
and
adc
add
daa
rclb
aaa
cwtl
mov
sub
insb
movsb
push
push
adcb
jbe
stos
or
add
fdivrl
or
jne
mov
or
fucomi
fcmovbe
mov
dec
pop
pop
cmpsb
sbb
std
mov
movsl
cwtl
dec
lahf
popa
xchg
jmp
mov
data16
inc
dec
movsb
imul
imul
or
mov
leave
rcr
xchg
pop
or
imul
sub
nop
push
xor
test
mov
push
or
gs
xor
std
inc
in
outsb
pop
inc
inc
jmp
aad
adc
sbb
imul
testb
lods
int3
inc
mov
std
xchg
inc
jmp
pop
mov
sbb
add
pop
xchg
xlat
popa
jbe
fstp
aad
fnstenv
mov
cmp
inc
dec
mov
cmp
or
nop
xor
add
ljmp
frstor
or
xchg
cmp
xchg
inc
xchg
leave
enter
lea
fwait
or
jle
jns
scas
out
hlt
mov
add
pop
mov
outsb
fsubr
inc
fidivrs
and
lcall
or
repz
movsl
arpl
push
imul
hlt
sub
xchg
add
pop
bound
mov
out
sbb
dec
rcrl
arpl
push
mov
add
mov
xor
arpl
addb
lods
ja
and
xchg
mov
cmp
pop
ljmp
and
push
sub
daa
cli
jmp
push
dec
es
fabs
out
dec
nop
jo
sarb
pop
dec
and
xor
lret
pop
out
pop
popf
mov
lahf
xchg
fisttpll
pop
inc
and
sbb
test
enter
pop
inc
mov
sbb
inc
add
mov
dec
outsl
mov
ret
fcoml
mov
sub
mov
scas
mov
lret
int
sub
shrb
xchg
add
sub
jge
inc
mov
pop
in
loop
mov
inc
lods
jne
in
push
xor
xchg
add
dec
inc
lahf
addr16
andl
pop
mov
or
jnp
cwtl
and
setle
and
hlt
jnp
dec
adc
out
test
sbb
xchg
aaa
inc
movsl
clc
push
mov
push
lret
dec
jmp
arpl
and
in
mov
xor
dec
inc
or
out
fcomps
add
hlt
jns
out
scas
xchg
xchg
inc
push
mov
lock
icebp
repnz
enter
cli
std
and
sahf
mov
ljmp
sub
cmp
int3
adc
icebp
sbb
outsl
inc
imul
sbb
and
stc
or
pop
xchg
jle
cmpsb
lret
fcomps
movsb
sub
outsb
aaa
lret
das
stos
sbb
push
lods
ror
mov
pop
popl
out
pop
xor
insb
mov
and
cli
dec
jnp
aam
imul
test
roll
and
mov
push
inc
fsubl
mov
cmp
jle
decl
and
pop
ficoms
divb
adc
cmpsb
jnp
pop
lahf
fwait
mov
repnz
mov
push
loop
or
in
add
das
out
je
fwait
lods
dec
mov
call
push
xor
and
cmpsb
fxch
mov
imul
mov
sarl
rol
jmp
sar
push
shl
imul
add
mov
into
and
imul
lahf
pop
shrl
pop
movsl
sub
push
icebp
inc
sub
repz
mov
jno
loope
scas
outsb
mov
cmp
enter
pushf
gs
nop
dec
ret
jb
add
gs
inc
iret
mov
daa
popa
test
data16
pop
jnp
test
push
xor
ret
aas
call
mov
sub
pop
adc
dec
movsb
movsb
arpl
mov
adc
xchg
lea
jno
aam
ficomps
test
push
jle
cmp
cltd
and
aam
cli
inc
jb
out
sti
inc
lcall
mov
outsl
jle
xor
cmpsl
pop
addb
push
mov
roll
lcall
popf
addl
jnp
mov
in
dec
and
rcll
mov
pop
ljmp
cmpsb
add
push
dec
adc
hlt
lret
xor
add
popa
dec
jecxz
data16
push
pop
outsb
dec
push
test
mov
cmc
in
adc
inc
and
cltd
pushf
ss
ljmp
dec
add
aas
adc
lods
rorb
cmpsb
sbb
rclb
mov
aaa
call
mov
jmp
icebp
cmp
push
repnz
dec
adc
xchg
jg
xchg
xchg
mov
pop
aaa
inc
pop
lods
enter
sti
in
adc
mov
or
and
pop
and
jecxz
sar
mov
fnstcw
or
mov
inc
pop
lods
xor
sbb
push
add
sub
dec
fs
fwait
in
mov
pushf
lods
inc
aas
lea
lret
push
jo
adc
fld
ss
sbb
or
test
jmp
sbb
inc
mov
mov
sti
inc
push
inc
or
pusha
sbb
or
xchg
decl
pop
outsb
loopne
jg
jge
stos
popf
inc
sub
leave
mov
std
test
es
mov
in
fdivr
sub
xor
ljmp
fsubl
test
or
shrb
jae
aas
jb
adc
pop
das
inc
outsl
data16
in
bound
xchg
pop
push
or
out
xlat
xor
xor
out
stos
movsl
jle
mov
xor
mov
push
pop
cmp
std
lret
pop
frndint
stc
pop
add
sub
add
add
jno
inc
lds
cs
inc
aad
icebp
adc
dec
mov
push
sbb
into
or
mov
test
cltd
testb
and
add
sbb
flds
orl
add
and
cltd
mov
lock
mov
jae
ds
bound
xlat
xsavec
outsl
mov
sub
pusha
push
or
add
add
jae
fisubrl
mov
push
icebp
push
push
push
mov
cmpsl
shrl
ljmp
adcl
push
aas
pushf
lea
cmp
jno
and
insl
in
cwtl
xchg
cmp
cmp
add
mov
cmp
bound
int
inc
fucom
fcoml
bound
outsl
cs
fsub
sub
dec
cs
sbb
loop
jns
sbb
adc
addr16
mov
xor
movaps
icebp
xchg
cmp
cmp
decb
xor
rorb
jb
sbb
push
cmp
sbb
aad
mov
add
mov
lret
sub
scas
sbb
cmp
insl
lret
and
cmp
in
pop
aam
lods
push
mov
sub
es
sbbl
mov
add
push
pop
pop
cld
cmp
xchg
std
sar
push
sbb
pop
out
adc
movl
dec
inc
rcl
sbbb
icebp
or
adc
jecxz
mov
movsb
push
out
pushf
sti
int3
out
xlat
mov
jbe,pt
cmc
aad
insl
sub
stos
movsl
jne
rclb
enter
pop
pop
adc
xchg
into
cmp
mov
pop
call
mov
outsl
nop
dec
inc
push
or
ja
push
push
adc
pop
std
or
xchg
icebp
xchg
xchg
jl
pop
test
and
sar
xlat
lea
pop
cltd
sub
arpl
push
sahf
mov
cmp
lods
data16
fidivs
outsb
daa
out
pushf
pop
inc
jle
xor
cmp
push
cmp
mov
les
mov
inc
cmp
xchg
adc
xchg
into
outsl
pop
mov
popf
push
jmp
imul
hlt
inc
sub
cmp
popf
jnp
lret
loope
enter
pop
push
mov
sbb
mov
lret
or
shll
push
mov
pusha
mov
xor
mov
mov
repz
cwtl
dec
outsb
mov
sti
pushf
flds
xchg
sub
enter
testl
in
nop
adc
sbb
jo
ret
sub
fcmovnb
xchg
mov
xor
mov
jmp
or
cmp
and
in
mov
movsl
mov
inc
sub
iret
arpl
dec
je
repz
xchg
mov
popa
fimuls
daa
mov
fimuls
into
imul
repnz
add
jge
mov
shlb
imul
scas
or
mov
add
push
mov
push
loop
imul
sbb
call
repnz
cwtl
mov
mov
into
lahf
gs
inc
dec
out
mov
lods
jae
enter
outsl
jmp
mov
jmp
movsb
cltd
lods
mov
mov
inc
mov
inc
sub
pusha
int3
loopne
test
adcb
int
pushf
pop
sbb
ljmp
push
inc
loop
sti
adc
popf
cmp
dec
lock
pop
fs
add
stc
adc
or
pop
push
icebp
lock
add
pop
and
dec
adc
out
les
push
mov
sbb
xor
into
rolb
out
adc
pop
outsl
xor
and
cmp
loopne
jg
arpl
mov
dec
or
dec
fists
or
sbb
repz
out
inc
cmc
fcmovnbe
cwtl
xchg
sub
in
adc
add
pop
jne
outsb
sti
inc
out
add
mov
push
jle
lods
push
mov
ds
cmp
repz
mov
mov
bnd
and
lret
sub
fcmove
cmpsb
aaa
xor
or
sti
das
adc
loope
push
lahf
jo
dec
pop
imul
and
lahf
mov
pop
repz
push
pushf
xor
jno
or
clc
add
xchg
push
and
dec
pop
pop
in
xchg
andb
cli
mov
pop
inc
lods
enter
mov
push
xor
cmc
inc
sbb
and
and
imul
pop
add
leave
mov
sbb
bound
out
mov
popf
cld
mov
and
inc
pop
stc
and
das
addb
roll
cmp
inc
inc
imul
mov
pushf
bound
mov
std
into
jmp
out
shrl
inc
cli
mov
fmull
fs
dec
das
pop
test
cmc
insb
cwtl
pusha
das
mov
inc
and
in
cmp
outsb
pusha
xchg
aad
divb
fcomps
mov
push
loopne
cmp
push
dec
cld
mov
leave
push
xchg
mov
mov
idivb
mov
mov
cmp
fstps
loop
stos
fadd
cltd
pop
cmp
pop
aam
test
pushw
sbb
sub
pusha
xchg
dec
fbstp
in
cmp
dec
stos
nop
lcall
std
pop
setb
add
sub
lock
rcl
pop
lea
jmp
mov
stos
rol
lret
clc
daa
push
push
sub
fisubrs
push
mov
cltd
dec
icebp
or
adc
bound
loopne
add
andl
movsl
mov
test
and
inc
arpl
pusha
into
gs
dec
scas
and
jecxz
fidivrl
shll
mov
ret
cmc
jge
ficomps
shlb
inc
jmp
rorb
ja
ss
inc
fstps
xchg
lahf
int
inc
xchg
mov
je
test
jg
push
adc
negb
fidivl
rclb
jp
dec
sbb
jmp
lds
inc
dec
repnz
int
jecxz
cmp
int3
xor
dec
in
xchg
nop
mov
stos
sub
cmc
xor
orl
pop
nop
mov
bound
mov
pop
sub
mov
xor
jb
dec
outsb
sub
mov
out
enter
shr
sub
mov
clc
out
push
mov
sti
aas
pop
mov
sub
mov
jl
arpl
jge
push
mov
lret
insb
dec
arpl
sahf
neg
pusha
mov
jae
jmp
xor
stc
pop
dec
mull
repnz
ficompl
mov
int3
jbe
call
decl
icebp
inc
or
aad
mov
out
outsl
or
pop
or
inc
jg
xchg
sub
mov
aaa
and
pop
aad
add
imul
sahf
inc
dec
xchg
xchg
je
mov
iret
and
xorb
mov
decb
pusha
pusha
das
or
push
inc
xchg
iret
pop
lock
or
js
gs
dec
pusha
out
pop
lods
lahf
je
xchg
or
movsb
cli
sbb
out
insb
cmp
sbb
sub
pop
std
xor
jno
popa
imul
les
mov
aas
fcmove
pop
cmp
mov
ja
jo
test
push
jno
fwait
sub
fdivl
addb
cmp
jp
jb
mov
xlat
dec
std
iret
sub
and
push
push
push
sub
xchg
cwtl
mov
aaa
xlat
pop
aad
jecxz
les
jle
in
jo
stos
push
jnp
or
xchg
adcl
popa
das
ret
inc
jle
test
push
or
push
push
cltd
pop
mov
outsl
and
cmp
inc
xlat
ss
lea
cmp
addr16
arpl
lds
popf
pop
sbb
ljmp
outsb
jecxz
mov
mov
pop
outsb
xchg
loop
jno
imul
xchg
pop
hlt
mov
pop
je
sub
and
in
xchg
in
mov
and
rorb
mov
inc
and
or
pop
xor
mov
loope
xlat
addr16
xor
push
sub
nop
pop
jmp
ja
mov
dec
int3
rcrl
or
adc
sub
pop
jmp
mov
push
scas
inc
jbe
into
sbb
xchg
sub
pop
add
mov
jo
dec
xchg
jnp
xor
cli
fwait
push
add
pop
sbb
jb
push
sbb
mov
call
stos
jb
btc
and
nop
push
dec
adc
xchg
loope
test
push
popf
push
lea
mov
cmp
xor
adc
insb
and
adc
scas
in
popf
jb
sub
js
mull
pop
scas
inc
fistps
mov
ds
insb
pop
mov
pop
jnp
into
shrl
std
testb
fs
add
movsb
adc
mov
adc
pop
jmp
add
and
dec
sub
push
repz
out
jne
aaa
js
add
fwait
cmp
push
sub
les
sub
ja
cld
fistpl
movsl
sahf
sahf
cmp
dec
add
mov
push
sub
inc
or
adc
sahf
nop
push
out
pop
cmc
pop
out
jns
xchg
push
inc
lret
and
ljmp
sbb
xor
scas
pop
mov
daa
mov
fisttps
pop
out
pop
pushf
fcoml
pop
mov
cmpsb
icebp
ja
pop
mov
inc
test
mov
or
mov
mov
pop
mov
push
and
and
cmp
mov
and
je
jecxz
mov
clc
cmp
xchg
mov
mov
out
mov
stos
or
mov
xchg
fldenv
lahf
leave
shll
push
pop
cwtl
pushf
xor
cmpsb
stos
movsb
stc
not
icebp
test
mov
daa
push
cmp
insl
popf
xchg
add
xor
clc
push
xchg
fnstcw
cld
shll
pop
in
mov
movsb
push
in
sbb
and
shl
xchg
sub
inc
cltd
mov
lret
dec
nop
mov
je
lahf
jmp
gs
imul
xlat
loop
mov
sub
cmpl
sbb
outsb
cmp
scas
mov
arpl
sub
add
lea
daa
movl
aas
jbe
mov
dec
jo
dec
jnp
cmp
xlat
ret
ss
movsb
sbbb
pop
les
out
ret
and
test
jno
lea
les
push
fidivs
push
push
arpl
nop
sub
xchg
mov
sahf
jmp
adc
movsl
into
and
mov
movb
subl
cmp
xlat
ja
add
sub
and
mov
mov
call
ss
sti
cli
je
push
cmpsb
mov
push
test
cmpsl
popa
or
xor
jl
sub
xor
out
xchg
inc
push
mov
pop
imul
cmp
movb
bound
idivl
sbb
push
jbe
cmp
rcrb
adc
lds
hlt
xchg
aad
mov
lds
subb
pop
mov
and
adc
lods
xor
sarl
scas
ds
lea
xor
xchg
imul
mov
push
sub
add
lret
mov
out
loopne
sbb
mov
insl
add
enter
popf
or
lods
cmp
dec
or
pop
data16
mov
sti
cmp
mov
pop
xlat
testb
addl
cld
inc
scas
ror
or
int
call
sbb
jge
mov
shlb
lods
aas
ljmp
mov
adc
mov
stos
cli
adc
xorl
jno
dec
inc
and
out
sub
add
pop
adc
aaa
aas
jge
add
xor
les
mov
xlat
or
sub
and
adc
pop
aam
adc
aaa
adc
add
out
popa
incb
push
jge
jp
xor
dec
mov
pusha
shl
mov
and
pop
pop
mov
pop
stos
mov
jo
xor
adcl
out
lods
fists
adc
pop
sbb
imul
pop
mov
shl
or
ret
test
push
in
xchg
lret
aaa
mov
adc
jne
test
clc
jmp
mov
fs
jp
pop
adcb
or
gs
fisubrl
addr16
sbb
bound
lahf
movsl
bound
pop
add
cmp
lret
in
jo
cltd
stos
addr16
xor
inc
mov
ret
mov
dec
fisttpl
enter
push
pop
scas
cld
addr16
lock
gs
adc
mov
add
das
jnp
aaa
xor
add
push
in
pop
clc
mov
aad
icebp
adc
mov
push
push
or
mov
add
jl
xor
inc
pop
imull
stos
out
lret
mov
xchg
dec
ficoml
add
or
pop
stos
and
mov
adc
mov
ret
lahf
cmpsl
clc
inc
xor
rorl
outsb
sbbl
cmp
in
jno
in
fidivrs
aaa
or
cmp
cmp
les
sahf
sbb
or
inc
int
repnz
movl
xchg
jmp
std
adc
hlt
xor
cmpsb
lahf
jnp
sub
mov
cs
xchg
mov
push
adc
jb
sub
mov
testb
dec
or
inc
push
out
scas
daa
jb
cld
stos
sub
mov
xlat
pop
cmp
or
mov
add
xchg
nop
in
adc
cmp
xor
inc
mov
stos
inc
int
icebp
cli
pop
aas
arpl
shlb
cld
stos
imul
or
dec
aaa
add
sub
mov
das
in
aaa
and
aas
fwait
jns
stos
mov
xor
jbe
mov
bound
bound
jae
mov
or
inc
scas
ret
dec
adc
xchg
filds
cmp
daa
pop
and
into
mov
pop
and
out
ss
shll
mov
fldl
push
add
loope
add
mov
lods
add
stos
pop
mov
cmp
and
mov
jmp
jge
adc
xchg
movsb
js
xor
aad
inc
mov
pop
lea
pop
mulb
cmp
sbb
int3
inc
add
sbb
mov
cmc
insl
popf
mov
loopne
jl
aaa
pop
pushf
mov
mov
xlat
and
aaa
imul
mov
cmp
loopne,pt
jp
mov
dec
sub
imul
mov
cmc
or
sbb
xchg
cmpsl
testl
xor
scas
pop
ret
dec
cld
dec
je
mov
js
xchg
imul
xchg
mov
xchg
add
mov
fwait
sbb
or
arpl
loop
pop
jl
in
jle,pn
inc
bnd
pusha
xchg
jbe
fldln2
in
mov
pop
push
adc
pop
repnz
mov
ds
scas
repnz
mov
sub
adcb
pop
aaa
fwait
push
jo
mov
rcr
js
stc
and
pop
pop
xchg
push
jb
mov
rcll
mov
pop
push
sub
sbb
cmpsl
jns
push
aam
xor
lahf
and
sahf
stos
in
imul
fstps
xor
mov
sbb
rcrb
stos
add
cmp
cmpl
aad
xor
jg
and
jp
sti
adc
xor
dec
lret
mov
mov
jo
xor
jmp
lods
xlat
js
dec
mov
xor
cmp
lcall
cmp
testb
pop
mov
cmp
mov
cltd
setb
les
inc
or
outsb
pop
mov
adc
push
mov
pop
std
loop
outsl
cmpsb
fcomps
dec
mov
jo
xchg
test
push
je
bound
lcall
repnz
aas
arpl
pop
out
pushf
adcl
mov
push
ja
orb
in
cltd
leave
outsb
lds
pusha
arpl
out
test
fsts
into
sbb
movsl
ficomps
les
fwait
in
mov
or
sbb
idiv
jne
push
cmp
add
dec
inc
xchg
shll
mov
cltd
int3
mov
adc
mov
jecxz
hlt
or
rcll
pop
cmp
outsl
xor
shl
xchg
sub
mov
adc
jmp
mov
stos
movsl
rcl
xchg
mov
xor
push
sub
jmp
imul
jae
push
push
test
pop
xor
lret
mov
popf
cmp
rorb
dec
mov
push
je
push
stos
into
and
mov
sbb
mov
mov
leave
add
sbb
mov
add
ss
sub
inc
cmp
inc
sti
add
into
push
inc
and
sahf
pop
jne
mov
push
add
xor
adc
mov
lahf
inc
popa
sbb
pop
rcrb
ret
rcll
lock
mov
enter
repz
cmp
add
lods
iret
mov
loope
and
inc
xlat
test
loop
mov
lcall
xchg
lods
jge
xor
xchg
scas
pusha
sbb
movsb
dec
test
imull
cmc
pop
jle
insl
push
mov
pop
bound
cld
sti
aaa
pop
lds
inc
pop
or
adc
mov
jno
loop
rcrl
lock
pop
mov
mov
pop
sbb
xchg
pop
mov
lods
push
aad
mov
or
idivb
pop
push
enter
sub
scas
mov
dec
sbb
xchg
mov
add
cmc
adc
lods
mov
add
test
xor
sbb
iret
imul
call
fadds
stos
jmp
shll
pop
mov
or
push
adc
shll
xor
sub
or
or
xor
push
leave
fs
or
idiv
rolb
push
sbb
mov
cmpsb
mov
cmp
dec
int3
dec
or
iret
mov
adc
fisubs
cmp
inc
loop
and
in
xor
sti
loope
scas
stos
xor
arpl
mov
xor
push
sbbb
cmpsl
add
leave
sub
or
sub
mov
sahf
jne
mov
inc
fwait
lret
cmpsb
fsubrs
in
dec
insb
ret
fbstp
adc
inc
or
sbb
rol
sbb
testb
mov
inc
outsl
out
adc
xchg
adc
xor
int3
outsb
pop
loope
xor
repz
je
gs
fxch
mov
xor
filds
fld
mov
aas
mov
mov
test
xchg
jbe
cmp
pop
hlt
adc
cs
pop
lods
pop
ret
ds
jle
mov
xchg
jecxz
scas
cmp
imul
mov
xchg
cwtl
pop
push
popf
dec
pushf
out
and
lcall
sti
repnz
lds
cmp
cmp
xchg
cmp
and
adc
sub
push
xor
dec
pop
jbe
pop
sub
imul
iret
fistpl
xchg
pop
xor
sub
loopne
push
ja
lret
lret
out
cmpsb
mov
arpl
idiv
test
cmp
mov
testb
cmp
cli
mov
jge
mov
dec
dec
addr16
jo
xchg
pop
xchg
fucomp
dec
adc
adc
push
dec
and
out
jle
stos
sti
cmpsl
scas
aaa
daa
aaa
xchg
jae
cmp
mov
pop
mov
lds
jecxz
call
cmp
or
iret
pop
mov
push
das
sub
out
arpl
sqrtps
ret
dec
or
xchg
pushf
shll
gs
hlt
rcl
mov
push
ret
addr16
push
push
imul
mov
ljmp
mov
sar
add
inc
xchg
loopne
pop
insb
lods
fwait
inc
loop
fs
push
sti
cmpsb
mov
les
out
jbe
sub
movsl
int
not
mov
sbb
mov
push
cmp
inc
loope
push
push
mov
adc
out
cwtl
cmc
cmp
stos
and
lods
imul
jle
icebp
push
xchg
pop
clc
sub
das
loopnew
test
lds
ficompl
repnz
jecxz
jne
addl
adc
sarb
adc
mov
fimuls
aam
or
ficoms
outsl
std
pop
pop
sub
aad
mov
in
add
mov
dec
pop
xor
ror
seto
int3
dec
xchg
test
add
lds
jg
es
imul
mov
outsl
das
mov
mov
or
in
data16
fstl
mov
sbb
jmp
push
rcrl
shr
dec
mov
or
push
sbb
inc
repnz
rcl
ljmp
cmpl
out
addl
dec
jmp
xor
push
push
xchg
lods
sahf
fidivrs
int
push
dec
and
test
inc
mov
out
clc
clc
pop
mov
sbb
jbe
jle
dec
inc
in
add
rclb
add
push
or
and
decl
jecxz,pn
inc
cltd
xchg
js
add
outsb
add
push
xchg
inc
cmp
jb
mov
mov
add
inc
dec
mov
js
test
jp
rorl
lea
cwtl
sub
mov
in
orl
iret
add
shll
push
pusha
jl
adc
jmp
mov
int
jg
mov
sbb
sub
scas
or
cwtl
pushf
outsl
pop
mov
lds
test
and
call
mov
out
aam
push
push
popf
stc
movsb
mov
inc
lods
add
iret
mov
cmp
or
jmp
jb
pop
adc
sbbl
inc
xor
aas
decl
loopne
popf
lea
das
cmp
es
mov
and
xchg
rorb
pop
mov
pushf
sub
into
es
enter
push
adc
lds
lcall
stos
je
repnz
ljmp
adc
push
sub
pop
adc
jecxz
fadds
sahf
sbb
ret
loope
mov
imul
lods
sbb
dec
shl
add
sub
jle
icebp
je
fcompl
test
or
icebp
rcll
das
lock
out
cld
mov
dec
sub
add
or
mov
sbb
jbe
adc
aad
fwait
push
cmc
sbb
sti
pop
roll
pop
push
jbe
pop
xor
pop
stos
repnz
mov
lock
pop
fistpll
pop
mov
dec
sbb
jb
test
mov
cli
sub
rcrl
loopne
and
xor
mov
cs
pop
ret
popf
mov
xchg
mov
lret
mov
je
push
inc
ret
sub
iret
pop
ret
adc
test
pop
inc
push
inc
jp
adc
dec
xor
add
inc
test
inc
mov
dec
jge
and
pusha
sub
inc
je
inc
out
xor
jno
popa
mov
or
movsb
inc
clc
int
inc
out
xor
or
cltd
lds
cmp
lock
xor
out
cmp
mov
push
and
call
clc
gs
xchg
xchg
sub
sahf
jecxz
les
mov
push
ret
jmp
push
test
int
push
or
mov
rorb
jo
mov
enter
sarb
push
and
testb
roll
sub
enter
ds
rcr
xor
fwait
cmp
frstor
das
push
cmp
idivl
jne
adc
js
repz
push
clc
vpmaddwd
orl
out
sti
add
test
mov
xor
in
inc
mov
or
adc
pop
xor
add
clc
jecxz
xchg
pop
mov
fwait
cli
lock
rcrl
jbe
pop
jns,pn
cmpsl
les
pop
test
lea
scas
or
lods
das
sbb
jne
push
scas
xorb
cmpsl
std
rcrb
fnstenv
xchg
out
aas
movsl
pushf
jl
mov
lahf
imul
out
push
and
fidivrs
cmp
push
dec
jnp
adc
movsl
stos
add
dec
mov
or
or
or
add
mov
xchg
pusha
daa
dec
ficoms
out
out
dec
rcll
loop
pop
cmc
hlt
fistpl
xor
pop
cmpsb
lret
cmp
dec
arpl
push
aaa
xlat
mov
mov
jg
push
lea
inc
add
and
and
cmp
cltd
inc
and
push
mov
ficomps
jmp
lcall
xchg
mov
out
call
sbb
jne
loop
out
or
inc
mov
out
shlb
ss
sti
int3
mov
push
push
jb
dec
test
mov
sbb
out
ja
cltd
enter
cmp
xchg
mov
pop
jmp
cmp
bound
outsl
test
arpl
mov
fwait
rcrb
fisubrl
cmpsb
lahf
sahf
repnz
sbb
dec
movsb
call
out
mov
xor
ror
or
fdivrl
inc
or
stos
push
jae
clc
xor
push
outsb
jno
je
push
push
sbb
lods
test
jbe
idivb
enter
cltd
dec
xor
inc
aas
pusha
sub
dec
popf
daa
js
fwait
add
loope
stos
test
cwtl
pop
xchg
cmp
je
pop
jp
mov
inc
loope
loop
pop
addr16
push
jl
xchg
inc
fwait
enter
out
pop
jp
rorb
andb
neg
xchg
mov
ss
hlt
rolb
lock
adc
outsb
cli
popf
mov
pop
inc
out
call
push
add
mov
mov
pusha
ret
inc
mov
or
loope
outsb
stos
popa
sbb
imul
xchg
and
jp
add
mov
loope
pop
pop
mov
fs
push
xlat
lods
jb
xchg
pusha
pop
es
dec
lods
xlat
pusha
imul
repnz
sbb
iret
mov
mov
insb
ljmp
mov
ror
xchg
cwtl
aas
push
lret
cli
jb
push
mov
push
sub
out
inc
fldt
std
xchg
xor
mov
inc
clc
xor
cmp
dec
mov
xor
or
dec
shrl
lcall
int3
push
xor
test
inc
or
jne
lock
lods
jge
add
push
arpl
and
roll
or
fistpll
or
sahf
xor
rcr
pop
aas
int3
cmp
lds
je
mov
dec
lcall
adc
xorl
pushf
rcrl
dec
shl
pop
loopne
stos
aas
cmp
insb
dec
aad
in
add
cmp
jp
push
imul
mov
lret
xchg
ret
sub
les
mov
adc
out
cmp
sbb
data16
je
xchg
jae
jbe
adc
add
cmpsl
jbe
bound
xor
add
ds
mov
enter
dec
or
fnsave
ljmp
pop
rorb
and
or
inc
adc
aas
rol
ret
mov
sub
out
mov
das
rol
push
in
or
and
and
mov
pop
and
loop
mov
sbb
mov
inc
test
icebp
push
sbb
fsubrl
je
xor
inc
cmpl
xchg
out
add
sbb
insl
outsl
mov
dec
xchg
mov
inc
inc
add
and
sbb
sbb
stos
pop
push
adc
lds
sub
movsl
mov
mov
or
jge
imul
mul
push
push
or
aad
rcrl
dec
cs
adc
add
ffree
lds
jb
js
mov
ds
adcl
test
loope
repnz
mov
jne
aam
dec
loop
popa
repz
int
movsl
mov
mov
int
in
sub
sbb
cwtl
mov
push
inc
jecxz
dec
jns
jle
rclb
arpl
lcall
push
andl
lods
pop
fstl
sub
pop
adc
int
dec
xchg
int3
andl
sarb
mov
outsl
add
popf
fisttpl
pop
repz
sub
cmp
call
and
fsubl
xchg
movb
jg
jmp
pop
cmpsb
push
mov
mov
cmpl
pop
pop
add
and
aas
out
jecxz
cmpsb
dec
cmp
es
ljmp
jbe
repnz
fsubs
pop
mov
jle
test
sbb
jo
pop
fstpl
adc
out
sbb
xor
push
lods
adc
cmpsb
sub
aam
outsb
push
scas
mov
pop
scas
ljmp
mov
xchg
mov
inc
mov
fsubrp
add
ss
out
dec
sbb
fmull
cmp
mov
clc
push
adc
jno
push
or
adc
mov
sbb
mov
and
fnstenv
test
add
ja
xchg
mov
pusha
jg
ja
jno
or
shlb
sub
xchg
adc
mov
inc
adc
sbb
push
xor
mov
xchg
cmp
stos
out
mov
insl
lahf
adc
lea
cwtl
lcall
ret
ja
mov
and
sar
ret
lahf
ret
fsub
mov
out
jno
sub
faddp
mov
aam
xor
mov
leave
in
push
popl
pop
cmp
mov
dec
mov
fs
sub
test
adcb
int
or
aas
inc
or
dec
lret
in
jns
adc
enter
adc
pop
cmp
je
lret
push
inc
sti
lods
test
and
sub
mov
cmp
inc
cmp
or
lret
sub
mov
out
push
mov
and
lret
aas
xor
gs
dec
lods
mov
push
stos
xchg
dec
or
push
add
loopne
fmulp
arpl
mov
and
sbb
xor
cmp
inc
into
addl
movsb
xor
frstor
cld
mov
sbb
pop
dec
icebp
xor
jb
xor
or
mov
cwtl
jg
and
pop
stc
jp
sub
dec
pushf
in
imul
sbb
mov
icebp
out
mov
sbbl
sub
xchg
call
insl
inc
daa
mov
scas
fwait
cmc
sub
scas
daa
repnz
jge
sub
mov
test
das
push
push
pop
jl
mov
push
shll
test
fmuls
in
add
mov
mov
jno
ret
cs
and
mov
jb
cli
repnz
pop
sub
jbe
pop
add
sub
rorl
lea
sub
into
dec
mov
insb
sub
fwait
out
lret
fucomi
imul
sub
test
or
cmp
adc
insb
jbe
add
ret
enter
and
or
inc
and
mov
cmp
lock
aad
outsb
sarb
call
mov
and
call
sub
imul
mov
dec
push
cmp
aas
rolb
pop
add
lret
stos
mov
nop
mov
ja
mov
punpckldq
inc
jne
enter
sub
rcrb
mov
mov
dec
pop
lock
aam
fidivrl
mov
push
es
lret
lret
call
arpl
cmp
xchg
mov
enter
pop
icebp
cmp
xorl
aaa
ficomps
cmp
out
mov
les
jge
stos
lock
leave
push
mov
xor
pop
adc
sub
push
fsubrl
sbb
call
jnp
outsb
ret
lods
push
jg
rcll
inc
arpl
push
push
fnsave
and
sub
cmp
sti
and
fstl
inc
inc
pop
mov
sub
cmp
dec
pop
insl
scas
jmp
js
xor
jmp
popf
lock
arpl
cmp
std
pop
mov
push
repnz
out
and
ss
dec
je
test
arpl
aam
stos
add
negl
into
mov
mov
test
inc
imul
iret
adc
test
shrb
or
out
adc
add
enter
imul
cmp
cld
mov
lock
xor
dec
dec
sub
gs
jno
jmp
dec
jl
or
punpckhdq
push
inc
test
stc
sar
loopne
imul
mov
stos
pop
int3
xor
adc
mov
push
sbb
jo
mov
mov
mov
cmovb
iret
daa
or
xchg
add
mov
mov
sub
aas
jp
in
lods
lret
in
mov
or
and
cmp
cmp
dec
repnz
ret
sti
scas
ja
ljmp
pusha
and
repz
stos
outsb
mov
pop
dec
and
push
nop
xchg
sbb
lods
cmpsl
sbb
rcrb
out
lods
out
inc
imul
stc
gs
pop
add
inc
lock
pop
pop
imul
lds
mov
cmp
int
cmpsb
out
cs
enter
pusha
mov
xor
icebp
adc
insb
sbb
mov
stos
lea
sahf
shl
insb
call
jno
lods
pop
in
lcall
xor
xchg
pop
inc
in
cmp
pop
sti
gs
jne
stos
in
out
sbb
jmp
mov
xchg
mov
bnd
add
insb
sbb
xor
xchg
dec
add
mov
sti
add
jmp
xchg
mov
pop
or
xor
mov
mov
insb
fs
push
sahf
dec
cmp
popf
rorb
pushf
push
xchg
fnstsw
hlt
xchg
hlt
in
sbb
jae
jg
inc
and
fildl
andb
jb
lods
stos
fstl
fcoms
push
lea
sbb
jnp
and
data16
dec
cmp
push
mov
es
add
lahf
xor
dec
push
lcall
jge
in
or
xor
sbb
cmpl
cmp
mov
push
outsb
mov
mov
pop
dec
cltd
mov
mov
pop
add
pop
dec
mov
mov
jecxz
loop
in
daa
ret
jl
xchg
testl
xorb
stc
call
cmp
jbe
sub
in
sbb
and
cmp
cmpsl
mov
rcr
xor
dec
pop
lret
cmpsb
ja
push
or
add
jp
fmuls
dec
jns
stos
aas
fnstenv
pop
mov
stc
xchg
xchg
cmp
arpl
mov
and
and
cmp
fwait
test
dec
pop
je
popa
pop
or
mov
popa
cli
and
xor
dec
cmp
mov
and
cli
inc
mov
push
mov
xor
mov
jno
pop
inc
icebp
jno
push
sbb
fistpll
adc
dec
lcall
sar
outsl
pop
lds
mov
jb
stos
fs
sbb
rolb
mov
gs
mov
push
cs
adc
sub
fmuls
aaa
jmp
test
and
mov
push
std
mov
jne
dec
andl
cmc
push
inc
addl
add
pop
pop
jl
jnp
sub
push
jg
mov
inc
movsb
push
xchg
cmp
das
jne
lret
xchg
popf
loop
stos
mov
push
mov
lret
mov
aad
leave
sbb
xor
in
jl
sub
or
popa
ljmp
or
push
sbb
mov
xlat
and
jne
cmp
sub
mov
push
xchg
call
mov
lahf
xor
push
jnp
pop
mov
xchg
or
jnp
sbbb
mov
scas
ret
add
or
sbb
adc
dec
sar
movsb
sub
jae
sub
fdivr
ss
cmp
cs
cltd
insl
dec
popa
jbe
ds
daa
dec
jg
mov
xchg
fimuls
sub
lods
xchg
lahf
cs
pop
lret
gs
dec
and
sbb
add
stos
dec
xchg
dec
mov
mov
and
rcrl
pop
push
xchg
sub
or
mov
adc
push
lods
int
jmp
mov
clc
xor
das
xchg
xlat
test
sti
ror
outsl
lret
scas
out
jmp
lods
or
mov
mov
out
xchg
cmp
adc
jge
js
js
shlb
adc
cmp
push
adc
xor
cwtl
lret
into
mov
and
clc
movsb
rcrb
sbb
mov
sub
mov
inc
xchg
inc
fsubrp
jg
mov
or
xor
dec
inc
orl
mov
into
scas
mov
arpl
mov
inc
mov
dec
in
jne
mov
mov
aad
xor
and
test
adc
dec
xlat
push
std
jmp
cli
inc
dec
inc
pushf
mov
frstor
fidivrs
ret
mov
xchg
stos
orl
dec
mov
rolb
mov
lret
xor
movsb
iret
pop
leave
mov
xor
in
lods
jecxz
and
xor
test
dec
popa
cmp
jo
mov
sub
cmp
lods
fiadds
mov
mov
xchg
sbb
adc
ds
std
push
sbb
xchg
jmp
jae
pop
push
jb
jne
mov
jmp
arpl
lods
stos
sub
xchg
cmc
mov
popf
pushf
jno
xor
subps
add
aam
pop
js
jl
mov
cltd
lret
jp
dec
push
xorl
xor
insl
pop
jp
faddl
das
mov
mov
pop
cli
cmp
or
sbb
les
rolb
das
les
aas
inc
mov
xor
push
mov
loope
loop
gs
lea
xor
nop
movsl
lea
aad
sub
pop
cmpsb
inc
aas
cmp
xor
rcll
add
push
dec
loop
arpl
ror
dec
pop
jae
loop
jae
xor
ss
push
adc
in
cmp
xchg
inc
rorb
pop
xchg
sbb
cmp
push
mov
push
inc
fldt
scas
add
cli
push
insl
inc
add
loop
nop
int
les
push
mov
test
mov
scas
and
and
xchg
jl
pusha
fidivrs
sub
dec
popf
rorl
repz
mov
outsb
popa
or
add
add
jb
popa
movsb
inc
aaa
leave
or
ja
pop
push
pop
imul
pushf
jmp
push
out
lret
pop
in
cli
cmp
repnz
xlat
icebp
rcrb
mov
push
pop
and
std
js
popl
inc
sbb
fwait
or
popf
mov
push
or
int
cmp
lock
push
fdivrl
adc
test
scas
lahf
je
sbb
and
insl
cmp
inc
push
and
push
pop
ficoms
xchg
mov
imul
out
xchg
and
les
fsubrs
mov
aaa
jg
rcl
pop
cmp
cmp
pop
repnz
mov
dec
mov
sbb
leave
xchg
and
push
adc
push
nop
jge
rcr
sub
in
test
xor
out
nop
int
scas
imul
es
js
push
mov
sahf
mov
ljmp
imul
jmp
xor
aad
add
fbstp
testb
sub
xlat
aas
cmc
in
add
cmc
test
cmc
pop
test
adc
jns
std
jb
push
sbb
jp
jns
lods
add
sbb
xchg
dec
aam
mov
loopne
sahf
adc
cmc
jmp
xchg
xor
stos
jg
int
push
mov
or
test
ds
cmpsl
pop
iret
mov
dec
stos
ret
ds
in
ret
cmp
js
js
xchg
js
mov
and
xlat
lods
xor
inc
ret
push
add
jecxz
dec
popf
ss
xchg
aad
data16
mov
sahf
jo
pop
sarl
push
mov
mov
mov
cmc
cmpsb
je
dec
out
aad
mov
or
jb
incb
and
push
ja
scas
je
lods
insl
lods
inc
adc
jns
mov
adc
dec
mov
inc
push
pop
dec
cli
fwait
xor
lock
shr
js
pusha
leave
xlat
sbb
mov
ret
push
adc
xlat
das
cmc
in
xchg
out
mov
outsl
das
out
pushf
cwtl
nop
lock
ftst
in
jecxz
addr16
or
lea
add
inc
das
lods
pop
sahf
xchg
inc
xorl
jmp
push
into
aas
lahf
push
push
lea
outsb
ss
jb
movsl
out
shrl
fbstp
repz
dec
outsb
sbb
dec
insl
sbb
mov
lea
aas
adc
decb
jl
mov
jl,pn
mov
int3
cmc
push
imul
aam
call
pop
movsl
ret
xor
cmp
mov
xor
das
pusha
lret
or
ss
ficoms
sbb
xchg
cld
aaa
mov
mov
andb
push
mov
mov
mov
mov
push
lcall
inc
mov
je
lods
outsb
cmpb
pop
loop
mov
jl
stc
pop
sub
add
sar
jbe
push
out
aaa
inc
xchg
hlt
cmp
fldcw
out
push
pop
aam
movsl
push
adc
pop
sbb
mov
test
inc
pop
popa
repz
shll
jns
fldenv
mov
ss
fidivl
fistps
hlt
mov
pop
sbb
scas
mov
lahf
mov
stos
and
xchg
sub
ret
in
dec
loopne
pop
cld
loop
add
sub
xor
add
cmp
cs
adc
in
inc
push
jns
or
call
mov
outsl
dec
jge
loope
arpl
mov
sbb
in
fidivs
insl
icebp
jle
pop
adc
cmp
cli
dec
jge
rcr
push
daa
cs
outsl
pop
push
adc
xlat
xor
inc
mov
insl
mov
clc
push
sti
pop
sbb
xchg
push
mov
mov
or
mov
cld
cmp
pusha
lock
ljmp
and
cmpsb
mov
and
xorl
push
mov
inc
xchg
ficoms
das
xor
sub
jmp
push
js
sbb
sub
mov
jb
fists
clc
fiaddl
in
lods
fs
push
outsl
push
imul
rorb
fildl
aas
fcoms
push
repz
fidivl
mov
enter
mov
adc
in
push
test
repz
in
jmp
aam
sbb
mov
sbbl
or
inc
mov
loopne
repz
and
fadds
mov
cs
cmp
xchg
jo
add
mov
leave
sub
inc
mov
xor
call
frstor
leave
dec
adc
lds
mov
cmp
adc
sbb
sub
and
scas
mov
test
inc
xchg
mov
enter
pavgw
sub
mov
jae
int
mov
in
push
dec
lret
mov
push
pusha
ja
push
dec
mov
cltd
jno
mov
xchg
push
repz
xchg
loopne
pop
pop
sub
fdivr
popa
dec
mov
cwtl
stos
add
in
adc
and
fwait
add
mov
cld
mov
in
or
mov
dec
sarb
das
push
jg
rclb
mov
inc
out
pop
out
loop
lcall
lods
aaa
les
rolb
cs
das
pop
inc
ja
or
cmp
ret
pop
cmp
popa
out
lods
enter
mov
addr16
ljmp
lcall
fistps
cmpsb
adc
lods
enter
int3
in
shlb
mov
negb
and
mov
rorl
js
notb
cmp
mov
test
xor
dec
js
mov
imul
adc
jb
idivb
push
or
add
mov
dec
dec
lea
xchg
sbb
sbb
adc
push
xor
cltd
dec
hlt
mov
leave
or
dec
out
addr16
pop
mov
push
out
push
jmp
rorl
stos
or
sbb
inc
mov
xchg
push
mov
dec
mov
test
clc
jmp
out
mov
sub
out
std
insl
loope
jmp
gs
orb
mov
mov
pushf
pushf
popa
jp
aad
push
ficompl
bound
inc
or
rcr
mov
test
adc
sub
ds
cmp
push
loopne
mov
xchg
mov
rclb
repz
fcomi
jbe
sbb
arpl
xchg
sub
ds
pop
jbe
xchg
mov
mov
cvtpi2ps
adc
mov
push
xorl
xor
sub
mov
xor
cmpb
js
push
and
fimuls
mov
push
mov
xchg
cmp
mov
outsl
cltd
outsl
inc
push
xchg
outsb
jae
add
repz
xor
push
dec
into
sub
loope
ret
notb
daa
mov
shlb
jle
mov
roll
xchg
cmc
xchg
mov
aaa
cmp
mov
and
loopne
std
mov
in
fnstsw
out
enter
mov
adc
cmpl
inc
mov
xchg
daa
fldenv
loopne
inc
popa
cmp
jo
js
fisttpll
mov
mov
fs
inc
mov
sbb
inc
xchg
add
push
js
aas
outsb
xchg
or
cmp
decl
ljmp
mov
add
adc
je
mov
ret
mov
pop
arpl
and
pushf
fucomip
or
sbb
xor
insb
xchg
adc
push
adc
mov
pop
fs
lods
add
dec
push
negl
mov
mov
lds
cld
xchg
xor
scas
rol
mov
aaa
imul
fbld
andb
sbb
cmpsl
xchg
sub
bound
sbb
les
outsb
pop
pop
insl
pop
fs
cmpl
out
std
popf
jne
in
sbb
xchg
pop
in
insl
shll
jo
rcrl
push
aas
adc
jae
xchg
inc
mov
push
lahf
lret
add
mov
xchg
sahf
xchg
fs
daa
test
stos
rcl
cmc
xchg
mov
movsb
mov
add
xchg
test
pop
xor
adc
cmp
jmp
movlps
lock
xchg
xchg
sbb
data16
out
stc
stos
or
adc
test
mov
dec
jae
pushl
movsl
imul
jmp
mov
aam
int
pop
fadd
xchg
arpl
pop
jno
adc
lods
cs
or
in
mov
sahf
push
jne
jmp
push
push
loop
out
test
dec
ds
into
mov
testb
mov
cli
mov
addr16
mov
push
mov
mov
mov
adc
jae
ret
pop
jne
adc
mov
jg
push
out
out
cld
jbe
movsl
xchg
xor
push
pop
lods
jl
std
sbb
sbb
sub
push
stos
pop
mov
je
push
xchg
mov
ss
iret
nop
stc
insl
sarb
sub
mov
addb
leave
and
push
inc
sub
sbb
sti
mov
inc
lcall
xor
push
push
push
jp
xchg
push
loope
mov
fcompl
call
sub
mulb
push
stos
pop
cmp
push
les
mov
fwait
add
dec
mov
jg
stos
sbb
push
mov
lret
iret
ja
nop
flds
jno
int
rcrl
sti
shrb
push
jg
adc
mov
mov
sbb
shrl
sub
ret
and
rcrl
jmp
sahf
cld
and
aas
and
iret
jo
js
in
sbb
test
in
inc
out
mov
jnp
out
sbbb
xlat
adc
pop
sub
pop
ds
push
mov
lret
hlt
nopl
imul
and
jno
sbb
rolb
sub
inc
pop
into
je
adc
sarl
rcrb
lods
jge
cmpsb
outsl
jmp
mov
addr16
add
test
cmp
xor
sbb
xchg
sub
cmpl
cltd
ja
in
sub
les
cmp
sub
push
mov
dec
xchg
fisttpll
test
mov
add
lds
pushf
js
arpl
movsb
ret
jp
outsl
pop
in
ds
mov
mov
inc
leave
push
mov
and
xlat
ja
jg
jns
mov
mov
push
in
push
pop
and
ja
nop
mov
adc
and
out
repnz
xchg
cltd
mov
loope
int3
lret
int
dec
adc
int
jmp
mov
mov
cmp
add
adc
jnp
imul
mov
cmp
pusha
lcall
add
out
mov
nop
push
pop
out
ja
dec
repz
gs
ret
lods
iret
imul
stos
add
push
clc
pop
lock
imul
mov
pop
js
and
stc
rcrl
stos
pop
mov
adc
das
subl
sbb
test
jb
int3
xor
inc
mov
mov
addr16
insl
test
mov
jle
and
lret
mov
sbb
popa
mov
imul
sub
mov
mov
inc
push
push
xchg
sbb
adc
lret
adc
ret
and
mov
sub
dec
aas
mov
dec
leave
movsl
mov
push
movsb
arpl
pop
insl
imul
pop
lret
mov
mov
fmull
rcrl
jge
mov
cmp
stc
add
sbb
jg
push
nop
jecxz
mov
mov
mov
and
and
push
ljmp
xchg
jb
mov
sbb
push
jbe
adc
lea
xlat
icebp
dec
jp
dec
or
mov
push
mov
insb
hlt
pop
add
and
popf
mov
cmp
stos
sti
imull
dec
push
sub
stos
jmp
loope
xor
mov
aas
push
popa
aad
cmp
jle
cltd
loopne
adc
call
and
jecxz
dec
aad
jbe
int
es
mov
inc
dec
cmp
sti
repnz
fdivrl
xor
add
mov
adc
loope
scas
sbb
in
pop
aaa
ret
adc
int
xchg
jmp
jne
stos
inc
shr
stos
sbb
das
inc
push
in
or
dec
jecxz
or
xor
xor
aam
hlt
mov
stos
adc
lock
inc
cmpsb
mov
outsl
cmp
mov
inc
mov
add
imul
subl
pop
ja
push
and
cmp
dec
insb
adc
sbb
les
xchg
push
adc
in
mov
outsb
mov
pop
rcll
lahf
xor
dec
repnz
scas
outsb
aam
lcall
cmc
add
rorb
idivl
cmp
hlt
xor
iret
les
clc
mov
jmp
lods
or
cmp
and
xor
cmp
repz
pop
stc
pop
add
pop
rcll
inc
jne
xchg
mov
add
cmp
pop
jecxz
push
push
shlb
aaa
repnz
and
loope
icebp
out
rorl
pop
mov
std
and
call
ret
enter
push
mov
fs
mov
bound
bound
mov
lcall
loopne
pop
pusha
or
push
mov
fwait
hlt
movsb
cmp
lret
inc
andb
arpl
movsl
xchg
mov
cmp
mov
out
mov
sahf
push
push
lea
loope
add
stos
add
cmc
mov
fwait
aam
pop
and
pop
add
cs
push
sub
adc
push
mov
pusha
gs
cmc
aaa
test
aad
adc
mov
cltd
xchg
test
stc
negl
xchg
mov
mov
lods
inc
push
adc
add
pop
inc
dec
lock
jl
pop
cmpsb
clc
xor
mov
push
inc
xor
xchg
xor
push
addl
or
ja
movsl
inc
mov
aad
not
dec
pop
cmp
adc
mov
aam
and
loopne
push
rcl
and
addr16
dec
xor
and
adc
or
int3
inc
sbb
icebp
xchg
insl
add
mov
cmpsl
pop
daa
mov
lret
subl
pop
and
xchg
imul
adc
add
pushl
sbb
lahf
push
sbbl
cmp
loopne
popf
stos
loope
push
cld
mov
or
jnp
push
ret
fwait
pop
out
and
or
pop
out
frstor
push
rorb
push
jo
fidivrs
mov
push
push
lret
jnp,pt
inc
push
sbb
mov
in
xor
repnz
inc
xchg
add
inc
jg
outsl
xchg
inc
pop
sahf
lahf
stos
adc
in
out
in
mov
shlb
cwtl
ret
fidivl
aaa
xor
fisttpll
popa
mov
inc
outsb
push
into
ret
fldlg2
cs
inc
jg
les
mov
sbbl
ret
pop
or
mov
jbe
jle
sub
mov
mov
js
pop
adc
xorl
adc
lea
lahf
and
repz
testl
ss
lea
dec
xor
inc
ffree
sbb
inc
adc
push
cmp
dec
xchg
in
push
cld
push
fidivrs
mov
sub
sub
push
pop
fld
add
imull
jae
or
add
lahf
in
aam
sub
insl
test
test
mov
idivb
aad
rorb
mov
or
inc
and
bound
mov
ja
and
xchg
or
inc
mov
pop
sbb
gs
mov
mov
jecxz
xchg
push
loopne
mov
icebp
push
jne
rcr
pop
push
push
scas
and
xlat
pop
cld
push
sbb
or
mov
mov
dec
inc
pop
xchg
pop
sub
fstp
icebp
and
adc
out
mull
dec
sti
rcl
add
je
ja
lea
sbb
cmpsl
and
push
mov
or
fildll
cmp
aam
fcoml
or
pushf
lcall
and
xchg
and
imul
stos
xchg
ljmp
or
lods
or
and
mov
xchg
xchg
xchg
jnp
aaa
push
movsl
mov
out
fcmovne
and
xor
pop
jecxz
lods
mov
and
cld
fisubl
and
outsl
inc
nop
push
sbb
xchg
in
popl
push
bound
cmp
fsts
mov
mov
out
push
cmp
pop
pushf
xchg
dec
mov
negb
pushf
insb
push
std
mov
and
push
push
cld
and
adcl
lret
add
lods
clc
xchg
jge
iret
iret
ds
pop
adc
cmp
fadd
and
push
outsl
int3
clc
mov
xchg
inc
cmp
scas
lds
in
mov
sbb
lock
cmp
xor
hlt
cli
add
pop
mov
adc
hlt
jg
and
or
sbb
or
push
mov
sahf
mov
add
mov
gs
stc
mov
in
icebp
pop
or
cli
adcb
push
inc
inc
xor
enter
xor
ret
cmc
ss
popa
stc
scas
jns
cmp
mull
push
cmp
ja
push
insl
sub
ljmp
mov
loop
enter
subb
out
or
arpl
add
pushf
data16
cmpsb
jo
cmp
in
enter
jb
sarl
test
cmp
jns
shlb
fisttpll
dec
in
das
movl
pop
into
inc
add
fsub
cli
int3
fmuls
fdivrl
mov
xor
shlb
imul
push
mov
imul
sbb
dec
mov
inc
sub
ds
adc
lea
xorl
loop
arpl
pop
inc
inc
adc
ret
mov
fsubs
mov
out
in
fwait
xchg
pushf
inc
enter
lds
cmc
in
cld
lods
arpl
in
insl
dec
xor
mov
out
adc
jne
es
cli
scas
fs
sub
scas
test
add
arpl
mov
sar
les
ds
out
out
in
pop
or
out
pop
mov
inc
shl
pop
cmp
jmp
jg
into
inc
imul
dec
mov
aad
cmc
dec
jmp
scas
adc
pop
or
fisubrs
cmp
test
xchg
sbb
adc
cmpl
sub
jmp
and
stos
mov
add
fnstcw
sub
dec
push
imul
and
push
addr16
adc
lahf
fldt
dec
sbbl
or
test
pop
in
push
or
jmp
cmp
cld
in
and
cmpsb
xchg
mov
fsubrl
mov
fsts
push
lods
add
cltd
jp
sahf
dec
fcoml
dec
sub
cmc
pushf
insb
pop
ljmp
test
dec
out
mov
aaa
adcb
pop
sbb
xor
add
xor
dec
sub
clc
mov
mov
test
xchg
push
test
sub
inc
movsl
jp
rol
lret
lods
lret
push
lcall
pop
inc
mov
mov
cld
mov
hlt
push
popf
push
mov
sbb
imul
aaa
ds
movsl
xor
mov
lods
xchg
adc
pop
aad
in
mov
push
fidivs
push
dec
bound
sub
in
sbb
mov
push
mov
cmpb
or
lcall
or
icebp
sbb
int
xchg
adc
repnz
imul
andb
add
push
xor
xchg
popl
jmp
mov
dec
aad
rorb
hlt
movd
shll
repnz
test
mov
sbb
mov
cmc
pxor
sahf
mov
push
sbb
add
dec
xchg
mov
lds
inc
rcll
stos
dec
dec
cmc
mov
dec
pop
stos
mov
push
add
add
sbb
adc
sub
sub
pop
int
and
jmp
add
dec
out
mov
sub
mov
mov
mov
adc
mov
shl
popa
arpl
sahf
in
sub
cld
test
out
jmp
jb
insb
pusha
int
adc
std
maxps
pop
insb
in
and
imul
mov
mov
mov
adc
and
repz
lret
pop
pop
fucom
xchg
add
outsb
mov
iret
xchg
mov
adc
mov
fnstsw
std
sbb
sti
in
push
add
push
cmovs
addr16
cmpb
out
mov
adc
pop
mov
outsb
ja
add
or
outsl
jl
jne
xchg
lret
ljmp
dec
or
sbb
sbb
pusha
jp
loope
call
mov
jg
xchg
pushf
xchg
dec
mov
jno
fwait
or
notl
cmp
inc
sti
test
and
cmp
inc
jb
aam
xchg
outsl
scas
xchg
jae
je
out
inc
xor
mov
aad
mov
js
jns
icebp
lods
ds
scas
int3
pushf
dec
hlt
out
clc
aas
in
pop
pusha
pusha
aam
icebp
lods
les
and
mov
xor
cld
insb
icebp
mov
out
or
lea
pop
adc
mov
add
mov
faddl
jbe
enter
shll
xor
sbb
push
loop
hlt
jb
cmpsb
andb
mov
sub
or
adc
mov
in
out
xlat
popa
inc
ds
sub
or
mov
sub
adc
bound
fcoml
outsl
push
push
subl
sub
add
jg
arpl
xchg
add
push
jae
aas
cmp
inc
js
cld
ss
mov
addr16
out
push
fcomps
cli
mov
jg
xchg
pop
dec
lock
xlat
cmpsl
inc
dec
inc
mov
xlat
push
ljmp
imul
leave
mov
ss
test
pop
or
ret
rcl
mov
mov
ljmp
es
lods
scas
in
ss
loope
push
sub
inc
lea
or
sbb
dec
jecxz
sub
adc
sub
enter
sub
repz
ret
out
jg
mov
popf
xchg
adcl
jnp
sub
out
sbb
push
roll
or
out
and
dec
xor
icebp
lret
shl
jmp
inc
adc
dec
cmp
inc
loopne
mov
fiaddl
cli
sbb
jne
loopne
or
or
shrb
sarb
jbe
mov
xor
sbb
lahf
stos
mov
insb
out
popf
inc
sub
and
fwait
andl
data16
ja
std
in
jp
add
mov
nop
push
idivb
out
pop
xchg
add
mov
push
arpl
pop
xlat
ret
test
stc
scas
lret
inc
mov
pop
lahf
cmp
push
or
cld
push
jae
sub
cmp
add
pop
scas
push
mov
adc
push
sti
push
cmpsl
pop
negb
push
and
scas
popa
cwtl
rorb
and
aam
cld
or
adc
pop
adc
lock
stc
dec
jbe,pn
add
dec
adc
sbb
cmc
jb
sub
mov
mov
lods
xchg
stos
xchg
cltd
push
cmp
sbb
add
pushf
cltd
push
pop
insb
outsl
ja
mov
shrb
js
mov
jge
inc
movsb
icebp
aaa
lock
mov
xchg
cltd
push
in
xlat
cmp
jecxz
cld
pop
adc
cmp
and
div
adc
mov
xor
outsb
inc
and
mov
icebp
mov
divl
sbb
jp
fildl
shr
aas
stos
mov
add
loope
lcall
push
hlt
lret
xchg
xchg
mov
xlat
push
decl
cmp
scas
xchg
cmp
sbb
cld
or
js
add
mov
jns
or
jo
adc
pop
sub
and
ret
pop
jle
in
or
mov
stos
fsubl
mov
hlt
pop
jbe
xlat
lret
push
roll
icebp
pop
pop
push
inc
inc
pop
fsubrs
and
add
ljmp
mov
mov
dec
inc
pop
out
test
loopne
outsb
xchg
pusha
mov
push
int3
aas
mov
pop
cmp
pop
iret
in
jecxz
xchg
incb
dec
lods
push
inc
jns
xchg
sub
and
and
pop
xlat
ljmp
jp
jle
and
sub
sub
cmpsl
jae
jecxz
addr16
add
fdivrs
push
xchg
loop
and
hlt
outsl
call
mov
sub
scas
mov
pop
add
lret
jns
mov
outsb
jbe
aaa
in
cmpsb
dec
fwait
js
ret
cmp
insl
sbb
scas
xchg
mov
loopne
pop
jne
pop
pop
inc
les
sbb
jb
lea
lret
lock
lds
adc
aam
std
mov
cmp
stos
pop
test
ret
add
inc
jne
out
lcall
mov
flds
mov
push
lds
jae
jg
mov
call
stc
aam
shlb
mov
shrl
push
jp
pop
push
push
jg
xchg
imull
lret
mov
ljmp
dec
jo
fs
out
mov
iret
out
cmp
cmp
jmp
sub
jb
jl
mov
xor
fnstsw
rorb
into
xchg
lock
jmp
mov
in
mov
sbb
in
mov
jb
icebp
or
cmc
in
test
inc
leave
push
push
push
inc
out
daa
clc
lret
mov
push
cmp
sbb
dec
out
sbb
clc
popf
lahf
ljmp
test
cmp
push
in
pushf
pop
cmpsl
in
cld
cs
imul
xchg
std
mov
insb
inc
dec
dec
push
fisttpll
stos
std
push
icebp
inc
push
test
xor
sahf
mov
lahf
shl
aas
jae
mov
add
pop
push
or
dec
mov
lods
dec
subb
fs
mov
call
xchg
push
add
aad
es
or
add
mov
push
cltd
adcb
mov
xchg
adcl
rcrl
push
pushf
ficomps
push
jg
mov
fxam
push
or
icebp
dec
mov
test
enter
cmp
bound
es
cmpsb
imul
inc
adc
movl
loopne
xchg
jle
popf
mov
mov
rcl
and
lret
xor
jae
rorb
rorb
xor
int3
or
mov
addr16
pop
loopne,pn
sub
fcompl
add
in
into
mov
hlt
or
xchg
out
and
jo
rcll
clc
sub
xchg
mov
xor
and
shlb
aad
mov
jecxz
sbb
or
or
outsl
fisttpll
xchg
dec
je
sbb
shl
push
out
adc
push
sub
loopne
and
sarb
lds
stos
imul
mov
in
xor
push
mov
jg
iret
mov
fmul
adc
jle
fsubrs
adc
inc
outsl
cmpsl
std
scas
in
fcmovnb
scas
add
outsb
pop
mov
inc
add
or
sub
or
inc
xor
xchg
push
mov
idivb
pushf
out
inc
dec
or
loopne
pop
cmpsb
xor
and
and
aam
add
pop
cmp
mov
ljmp
imul
sub
scas
and
dec
rclb
mov
repnz
or
fdivrl
out
subb
cmp
hlt
inc
fdivp
xor
mov
add
jne
inc
push
and
and
sbb
test
ret
scas
pop
inc
enter
sbb
jne
insl
inc
dec
xor
imul
negb
ja
movsl
or
jns
adc
shrb
xchg
imul
push
lret
push
adc
inc
stos
add
jecxz
jp
in
sub
add
cmp
sarb
movsb
sti
and
and
sub
mov
icebp
popa
or
inc
cmc
sub
mov
fwait
adc
xchg
xorl
mov
inc
dec
out
test
and
mov
and
push
xor
inc
mov
and
add
mov
fcomip
ret
shl
inc
cmp
sub
xor
push
sbb
sub
popf
and
xor
xor
jmp
fisubrl
push
cmp
sarb
es
arpl
in
cltd
sbb
mov
nop
stos
ss
enter
in
mull
sahf
test
ss
xchg
xchg
test
jl
fstpl
lods
and
xchg
mov
inc
into
xchg
cmp
sub
sbb
sbb
addr16
dec
loope
mov
sub
inc
popa
insb
insl
pop
xchg
fcmovb
sbb
push
pop
sub
sar
lock
mov
xchg
adc
add
xchg
outsl
in
pop
mov
lods
adc
mov
push
and
pop
mov
ss
and
mov
mov
inc
mov
dec
ds
push
call
stos
cwtl
ret
sub
fsubrs
mov
push
int
aam
xchg
in
jmp
inc
mov
xor
cmp
imul
mov
pop
xchg
jne
inc
aad
shrb
push
das
cs
out
and
test
mov
add
pop
mov
mov
jne
xor
or
shrl
ret
mov
repnz
mov
sbb
es
or
stos
xchg
out
cmovbe
push
out
int3
ret
add
lahf
lods
pop
jp
loop
call
push
cmpsb
jp
insl
inc
je
inc
sahf
cmpsl
je
out
mov
pop
mov
cltd
out
lret
adc
js
lea
jp
jg
push
add
movsl
push
lcall
call
xchg
sbb
in
add
jle
adc
in
inc
nop
je
cwtl
mov
inc
inc
aas
int3
stos
jnp
scas
leave
out
sub
sahf
stc
out
jno
mov
dec
push
pop
popa
js
pop
push
iret
jne
aam
lds
sahf
cld
push
outsl
das
test
dec
mov
out
scas
cmp
push
mov
jno
stos
outsb
pop
lock
cmpl
rol
loopne
loope
enter
jge
xor
pop
xchg
lahf
out
mov
push
scas
js
mov
and
pushf
mov
push
mov
sbb
loop
mov
add
movsl
mov
xor
cwtl
jecxz
movsb
mov
pop
add
adc
mov
mov
adc
js
out
enter
lds
popf
and
dec
ret
inc
cmc
jns
nop
pop
jno
dec
ret
push
shlb
mov
mov
sarl
push
fnstsw
mov
pop
inc
adc
inc
outsl
popf
ja
xchg
jo
aam
int
rcr
add
sub
mov
test
dec
xchg
inc
addb
xchg
jno
das
test
dec
fwait
test
rcrl
hlt
lods
jg
fwait
test
xlat
push
inc
aaa
mov
in
adc
mov
scas
rol
gs
mov
rcl
sahf
cli
popa
mov
and
test
jne
cwtl
lret
jne
lahf
cmp
iret
lea
mov
push
adc
imul
push
jmp
aaa
or
sub
inc
in
fsubrs
lods
or
mov
pop
stos
or
pop
hlt
push
sbb
cmp
fstpl
arpl
shl
adc
aad
ss
subl
lret
pushf
mov
xor
inc
push
cmc
jle
sbb
fistpl
addr16
xchg
cmp
fistpl
push
test
cmpl
jne
sbb
fwait
loopne
arpl
push
adcb
fadd
movsb
sahf
jnp
in
mov
xor
in
mov
inc
xor
in
pop
ret
data16
mov
addb
sub
std
sub
dec
test
loope
or
shll
movsl
fwait
sahf
movsb
inc
adc
loop
cmpsb
xor
push
ret
aam
scas
inc
jl
and
je
add
scas
jg
xchg
popa
cmpsb
push
mov
add
fcoml
jle
lock
xor
mov
sbb
ss
or
push
or
cmp
lret
lcall
es
lcall
xchg
ljmp
add
loop
fwait
ds
cld
dec
add
fmuls
jl
add
fildl
imull
fs
call
dec
pop
ljmp
mov
inc
mov
hlt
sub
call
xchg
aad
clc
jmp
push
cmpsb
stos
out
mov
jg
cli
adc
sbb
nop
sub
add
ss
sub
out
repz
fistl
jns
pop
fstps
pop
fidivrl
movsl
jp
pop
dec
into
cmp
mov
lcall
push
fwait
call
push
rorb
pop
test
adc
mov
mov
xlat
repnz
or
pop
and
stos
jno
push
cmpsb
enter
adc
adc
and
in
icebp
addr16
pop
movsl
aaa
jge
ljmp
popf
std
fxch
std
xor
popa
jno
insb
popf
cmp
mov
fisttpll
inc
test
sbb
add
pop
pushf
lock
fildl
adc
lahf
push
mov
xchg
lcall
pop
or
pop
enter
loope
sahf
nop
enter
stc
mov
insl
jmp
fisubs
adc
add
cwtl
lret
clc
mov
pusha
mov
and
and
fistl
jmp
cmp
nop
fisubrl
je
mov
imul
or
dec
xchg
scas
push
ja
lcall
outsb
rclb
mov
and
mov
mov
shl
and
fcomps
mov
fwait
mov
lds
test
mov
enter
rolb
push
push
cld
sbb
inc
and
xchg
stc
push
stos
stos
lea
icebp
xor
xchg
push
xchg
cmp
jle
or
pop
fnstenv
rclb
jbe
cmpsb
adc
push
pop
cmp
pop
lock
dec
faddl
jae
enter
mov
push
and
lods
cmp
push
cltd
out
jle
mov
jle
jp
test
jne
cmp
out
jmp
test
jle
mov
push
dec
dec
pop
mov
ja
xor
or
mov
fidivs
dec
out
cmove
add
mov
pop
into
in
adc
sbb
and
push
cmp
and
jecxz
pop
mov
xor
mov
js
dec
cmp
xchg
xchg
or
fidivl
pop
add
ljmp
std
cs
lret
test
xchg
mov
jmp
mov
pop
mov
inc
sub
iret
dec
lods
adc
and
test
xor
sbb
and
sbb
sub
xchg
insl
add
push
sahf
jmp
sub
int
mov
push
xlat
mov
pop
hlt
imul
arpl
dec
fwait
lahf
shll
sbb
xor
aad
dec
outsl
xlat
iret
cmpsl
insb
and
shld
adc
jmp
sbb
add
jmpw
ja,pt
aad
lret
cmpsl
scas
or
pop
push
je
cmp
gs
mov
call
xchg
and
dec
ja
in
cld
jno
sub
sbb
jnp
std
mov
jp
add
or
fwait
mov
cmp
sub
int3
movsb
pop
pop
mov
fmuls
popf
mov
pusha
jno
rclb
and
xchg
pop
mov
int3
jle
cmc
push
mov
xchg
popf
imull
cmpsl
fisttps
fists
mov
mov
push
inc
cltd
jbe
int
addr16
stc
pop
fdivrp
or
sbb
jbe
ffreep
ljmp
movsb
xchg
mov
movsl
inc
and
sahf
sub
add
into
es
mov
jg
mov
scas
jbe
out
repz
test
std
popf
mov
popa
stos
fs
enter
sub
popa
shl
mov
dec
repnz
push
sbb
cmp
mov
stos
sub
mov
pop
and
inc
pop
mov
mov
aad
das
loopne
stc
out
xchg
addr16
push
imul
rcl
push
and
insl
xchg
inc
mov
lods
jo
movsb
ja
mov
cs
mov
xchg
xchg
xchg
jecxz
bound
cmp
xchg
fcompl
add
inc
push
in
in
shll
pop
lea
rorl
cmp
cltd
or
and
dec
inc
scas
outsb
sub
mov
push
push
and
pusha
cmpsl
out
nop
inc
mov
adc
sbb
inc
mov
outsb
jmp
sbb
sbb
pushf
mov
sub
cmp
lahf
ds
xchg
jns
or
jecxz
enter
xor
inc
and
pushf
jns
cmp
add
push
lods
sbb
jp
or
cmpsl
stos
aaa
cwtl
sub
mov
in
stos
jnp
add
dec
mov
xor
mov
mov
mov
mov
lods
nop
adc
or
out
push
xchg
dec
enter
lret
or
cmp
iret
jle
pop
jge
xchg
adc
mov
xor
movsl
sub
mov
arpl
aaa
mov
jge
sti
sarb
xor
in
lret
test
add
int3
add
shll
int3
test
lds
in
xor
js
inc
imul
cmp
fisubl
aas
jmp
inc
adc
popf
data16
add
push
pop
push
cmp
mov
mov
cmp
mov
dec
fs
shrb
test
adc
lret
mov
cld
stc
jmp
es
cli
in
ja
push
mov
pop
shl
inc
out
cmc
lods
dec
lods
push
lret
lods
sbb
xorl
popf
nop
mov
je
int
popf
je
xlat
pop
mov
push
popa
outsl
sub
mov
push
mov
cltd
and
addr16
sbb
push
inc
and
add
xchg
xchg
adc
daa
pusha
pop
pop
pop
sbb
rcll
jmp
xchg
imul
mov
rclb
sub
jge
jae
push
cmp
outsl
lret
mov
mov
push
sub
loope
mov
adc
test
enter
xlat
insl
lret
xchg
jl
or
mov
xchg
pop
mov
pusha
mov
dec
outsl
shlb
pop
cmp
in
dec
push
sti
stos
inc
pop
mov
dec
jae
adc
xor
xchg
in
lock
stos
punpckhwd
pusha
jae
fimull
cmp
dec
insl
stos
jns
dec
jp
jns
aas
shl
push
std
jl
sbb
sbb
cmp
lea
mov
push
xchg
movsl
adc
mov
lret
mov
push
popa
sbb
mov
loopne
dec
jae
sbb
mov
and
lock
dec
outsb
and
leave
pop
pushf
dec
cmp
addb
xor
jle
xor
jns
pop
out
xor
sbb
push
in
testl
mov
jns
imull
inc
add
stos
add
inc
das
push
and
xchg
out
shlb
inc
cld
ja
out
xchg
and
dec
ret
cmp
xor
lea
push
cmpsb
lcall
loope
rcrb
xor
or
sub
je
adc
repz
test
and
push
loop
add
mov
inc
ror
repz
scas
xchg
shll
or
push
mov
ror
push
xor
xor
push
or
xlat
test
and
repz
cmp
xlat
jno
add
jne
stos
sub
jl
or
ret
inc
dec
icebp
ljmp
std
xchg
mov
loop
clc
sbb
and
xor
adc
adc
pop
pop
aas
mov
sbb
daa
rclb
popa
das
jl
lret
mov
adc
addb
mov
xlat
mov
xor
into
popf
loop
cmp
pop
ja
add
out
add
dec
in
xchg
notl
je
xlat
ss
push
push
loope
loope
xor
mov
aam
repnz
test
insb
sarb
shrl
lock
lahf
inc
pop
daa
mov
jle
cld
imul
dec
scas
cmpsl
jnp
cmp
add
cmp
jno
pop
xor
adc
mov
stos
seto
xchg
cld
mov
cmp
jecxz
dec
lods
subl
or
mov
pop
push
std
mov
mov
cwtl
adc
or
dec
cmpsl
cmp
fstpt
dec
adc
mov
out
nop
test
ljmp
shll
fcmovne
inc
outsl
jle
aam
cld
or
mov
popf
inc
aaa
out
add
shll
mov
rcrb
in
and
inc
or
ds
or
addr16
xor
stos
in
daa
lcall
addr16
jmp
lods
aad
movsl
adcl
mov
xchg
ds
das
or
jecxz
lcall
sub
xchg
xchg
in
adc
sahf
imul
lock
stos
pop
pop
sbb
scas
xor
into
mov
mov
add
pusha
dec
in
in
adc
pop
fbstp
sbb
push
dec
sub
jne,pt
push
jecxz
mov
add
xor
xchg
pop
aas
mov
je
ja
clc
leave
pushf
stos
mov
daa
aas
sahf
and
testb
mov
sub
scas
mov
push
xchg
push
mov
lea
inc
or
adc
leave
jecxz
sub
sbb
lods
sti
pop
jb
aad
outsb
jns
nop
sti
mov
in
repz
xchg
sbb
mov
repnz
push
jo
mov
nop
or
adc
pop
in
fs
icebp
jns
mov
test
fisubrs
dec
aaa
dec
subl
sbb
repnz
scas
pop
fdivrl
jp
ret
andl
dec
out
xchg
jl
pushf
ficoml
ret
lods
inc
jno
test
rcl
clc
cmp
pop
sarb
add
and
add
lahf
xor
jle
cmp
dec
shrb
sub
dec
hlt
push
and
lret
mov
xchg
push
rcr
daa
outsb
mov
test
les
es
cmpsl
or
test
fidivrs
testl
dec
dec
mov
das
mov
iret
or
lret
mov
test
xchg
lret
mov
adc
outsb
cmpsl
mov
fdivrp
popf
dec
xchg
or
flds
in
sbb
imul
data16
jge
ret
xor
adc
rorb
repnz
add
push
jmp
mov
inc
mov
mov
fisttpll
push
jmp
push
movsl
pushf
aaa
sbb
scas
mov
pop
dec
js
imul
movsb
push
sarb
push
xchg
inc
inc
insb
jbe
adc
sbb
inc
gs
dec
movsl
shr
mov
push
int
outsl
cmp
dec
jp
xor
out
pop
add
fisttpll
mov
movsb
stc
out
scas
sbb
clc
push
jne
sarl
cld
lock
addr16
mulb
enter
clc
sbb
xchg
push
xchg
sub
movsl
xor
dec
in
jl
push
jp
mov
sbb
mov
in
ss
adc
sub
sub
outsl
push
nop
mov
ret
sub
mov
sahf
xor
pushf
sbbl
xchg
cmc
ret
mov
mov
push
xchg
xor
minps
js
mov
pop
pop
lods
stos
dec
out
inc
cmp
inc
mov
jbe
jae
nop
push
cs
fs
inc
arpl
insl
add
enter
mov
cmp
sbb
xlat
cmp
cmp
lret
repnz
and
movsb
loopne
decl
add
in
mov
push
jo
xchg
xor
outsb
insl
cli
test
mov
out
cmc
out
xor
pop
dec
pop
xlat
aad
call
fadds
inc
inc
sub
scas
xchg
test
aas
cltd
inc
dec
add
dec
cmpsb
pop
scas
mov
xchg
insb
mov
test
jmp
std
xchg
cmp
push
xor
xor
outsb
loop
incb
aad
jo
ret
outsb
pop
rcrb
jnp
mov
sbb
imul
sahf
jno
inc
repz
adc
inc
test
pop
movsl
shlb
adc
lcall
stos
mov
lcall
sarb
cmc
sub
iret
push
xor
pop
loope
in
es
mov
int3
lret
inc
movsb
or
testb
xchg
or
cltd
popa
lds
fidivrl
popf
ds
lret
ja
js
imul
enter
or
jno
lea
stos
and
push
jl
stc
lock
mov
mov
mov
popf
xchg
xchg
movsl
jge
mov
fistl
push
xor
or
inc
sub
xlat
in
int
inc
sarl
lock
movb
sarb
clc
ds
cmpsb
fildll
aaa
leave
ret
fisubs
ss
incb
fucomi
adc
std
and
int3
or
lods
inc
xchg
pop
add
jmp
iret
les
scas
pop
outsb
dec
lock
jmp
cmpsb
add
xchg
dec
mov
dec
xor
jecxz
push
insb
push
icebp
push
push
mov
mov
and
cmp
insb
sbb
fs
or
pop
mov
and
and
mov
mov
adc
test
fadd
stos
mov
sub
dec
stos
movsl
in
or
sbb
mov
pop
and
mov
inc
mov
leave
xor
js
mov
test
into
adc
cmp
cmp
sahf
testb
mov
orl
and
inc
rclb
into
rcrl
stos
test
lock
xchg
or
xchg
dec
xchg
push
cmc
rcr
stos
sub
mov
clc
insl
mov
push
inc
xchg
daa
mov
mov
pop
hlt
incb
sti
and
ljmp
in
adc
xor
xadd
jnp
xchg
bound
adc
test
mov
and
inc
test
imul
sub
mov
xor
fisubrl
loop
cli
mov
add
inc
fucomip
pop
enter
or
cs
rep
enter
addr16
adc
addr16
xchg
mov
lret
xlat
mov
cs
mov
cmp
xchg
inc
cmp
movsb
add
adc
mov
rcr
in
push
sub
jno
cld
dec
std
pcmpeqd
ljmp
jno
pop
clc
xor
insb
cmpsl
pop
mov
push
cli
sub
adc
in
cmc
fdivrp
jecxz
add
sub
out
push
orb
cmp
pop
int
insb
mov
andb
pcmpeqw
sbb
in
test
adc
mov
es
shrb
xchg
inc
mov
js
popf
cmpsb
adc
pop
test
dec
jno
xor
clc
enter
gs
lret
adc
adc
das
xor
enter
pop
std
and
fstps
add
mov
mov
jo
aam
mov
xchg
aad
sub
sbb
adcb
movsl
jp
sbb
pop
into
jne
mov
xchg
dec
js
gs
jl
enter
sbb
pop
cmp
cmp
sbb
jmp
mov
arpl
call
push
jo
mov
inc
bound
mov
rcr
loopne
xchg
jno
add
or
pmaddwd
call
divl
ret
dec
lahf
jbe
loope
fsubrl
orb
loop
sbb
stc
int3
mov
sub
mov
cmpsb
icebp
pusha
mov
sbb
enter
dec
sahf
xchg
lahf
insl
inc
dec
pushf
jl
in
test
mov
jp
jle
rcl
mov
clc
fiadds
adc
or
insl
shlb
cmpsl
inc
in
or
negb
out
scas
sarb
cld
or
mov
movsl
popf
cmp
insb
ja
out
sarb
paddw
je,pt
cmc
aad
mov
adc
fadd
jne
aaa
and
stos
push
mov
outsl
xor
sub
or
mov
test
mov
xchg
pop
out
sub
fsubrl
mov
mov
sub
push
shll
sub
push
jge
sbb
push
lock
or
stos
push
iret
bound
add
inc
loop
ljmp
sbb
sarb
pop
ja
les
push
enter
jge
aad
pop
adc
hlt
jge
jecxz
pop
ja
inc
dec
adc
call
and
call
cmp
push
clc
adc
shrl
xor
mov
mov
dec
push
sub
outsl
xchg
dec
scas
sar
sbbb
mov
enter
int
sub
pop
cmc
decb
sbb
in
movsl
shlb
fsts
push
lods
mov
das
pop
int3
push
sub
add
dec
pop
test
xchg
push
mov
sub
lret
dec
popl
adc
pop
and
fdivl
bound
les
sbb
inc
cmp
add
in
lret
jnp
ljmp
rorl
arpl
inc
sbb
les
dec
mov
xchg
hlt
mov
arpl
dec
sbb
es
repz
notl
xchg
scas
loopne
mov
fistpll
fwait
lcall
mov
xlat
jb
and
aas
and
push
js
dec
bound
fwait
inc
pop
ljmp
divl
xorb
scas
rcll
aas
adc
sbb
push
out
xchg
data16
cltd
cmp
es
jo
xor
cltd
rorl
js
pop
cmp
jo
push
imul
cmp
pop
sub
out
mov
lea
out
and
dec
ret
jae
lds
gs
into
ss
push
xchg
inc
mov
shlb
xor
dec
sti
adc
adc
xchg
dec
leave
cmp
fnclex
mov
pop
xlat
or
das
jp
adc
outsb
jmp
in
mov
popa
push
xor
out
cwtl
xchg
and
mov
in
add
mov
push
xor
out
sub
mov
stos
mov
scas
adc
repnz
sbb
jge
add
test
or
shlb
idiv
mov
mov
fldenv
xchg
in
cwtl
bnd
sti
xor
dec
sub
roll
mov
and
test
xor
pop
sub
les
call
mov
leave
jns
repz
and
xchg
jne
scas
imul
adc
or
sbb
lret
mov
sbb
fwait
add
inc
cmpsl
dec
test
ds
sub
insb
push
dec
test
or
sub
add
dec
imul
cs
lret
bound
dec
jbe
xchg
sahf
hlt
aas
fistl
sbb
mov
or
in
mov
je
jecxz
aad
fldl
stos
jns
popa
gs
sti
fcmovb
sub
xchg
sbb
in
aam
dec
test
mov
ss
mov
cli
lds
pusha
clc
sub
ja
fs
rcrb
dec
clc
cmpb
push
mov
xor
push
dec
loopne
bound
cmc
lods
and
dec
pop
xor
pop
imul
movsl
ret
scas
sbb
pop
sub
stos
cmp
jmp
cld
add
xlat
cmp
aaa
in
enter
addr16
jno
jp
adc
mov
in
js
ljmp
fwait
rclb
jg
pop
pusha
dec
jno
mov
pop
push
faddl
inc
mov
push
cmp
mov
sti
adc
inc
cmc
inc
inc
and
je
jae
arpl
inc
into
cmp
pop
adc
inc
xchg
loopne
xchg
hlt
imul
out
xchg
arpl
pop
sub
sub
inc
cmp
xor
lea
cmpsl
std
mov
dec
xchg
push
sahf
cmpsb
pop
pop
mov
sbb
loope
daa
lods
adc
push
xor
lds
cmp
popa
cs
xchg
cld
repnz
in
inc
jmp
repnz
mov
inc
dec
sub
cmp
cmp
lock
sar
addr16
jle
fdivs
dec
fs
out
add
aaa
jl
mov
pushf
sbb
cmpsb
or
mov
mov
jg
pushf
inc
dec
mov
test
push
inc
je
adc
fsubrl
xorb
adc
sbb
sti
inc
adcb
xchg
in
xchg
sbb
add
pop
inc
rorb
outsl
sbb
out
jle
sbb
call
push
adc
cmp
or
mov
outsb
cmpsb
pop
push
push
xor
pop
lods
dec
arpl
insb
int
push
loope
fidivrs
cmp
push
and
push
rcl
int
movsl
icebp
test
sub
daa
mov
ffreep
mov
imul
mov
sahf
jne
cs
shlb
shll
les
cmp
sahf
outsl
dec
dec
iret
mov
lret
sub
int3
sbb
ss
or
sbb
loope
pop
xor
pop
rcrl
fs
xchg
jmp
scas
inc
addb
test
xchg
sbb
das
sub
jnp
cmp
roll
mov
lcall
nop
cs
pop
in
fadds
repz
addr16
aad
js
sub
jbe
add
sbb
or
pop
cs
rol
test
add
sub
es
imulb
sub
stos
lret
xchg
inc
aad
xchg
push
jns
int
addr16
dec
dec
fisubl
stos
pop
out
daa
mov
cs
pusha
or
xor
add
push
jecxz
call
jae
mov
sti
add
dec
mov
or
inc
dec
mov
aaa
lcall
ljmp
push
test
xor
cmpsb
mov
push
clc
push
cltd
mov
sti
adc
scas
xchg
into
or
push
dec
xor
mov
xchg
int3
insb
pop
ja
mov
es
stos
mov
out
push
mov
mov
add
xor
push
insl
dec
mov
jg
mov
in
pop
ss
imul
das
adc
iret
jge
sahf
subb
aad
mov
push
mov
ljmp
fsubl
pop
pusha
setne
test
jmp
fs
dec
push
das
jmp
aas
xor
ljmp
or
lods
inc
sbb
and
sbb
jge
ljmp
cmp
adc
stos
ds
test
sub
cwtl
inc
sbb
jl
cltd
xchg
jge
test
out
and
insb
mov
pusha
or
out
mov
ss
push
jnp
mov
test
sub
pop
mov
xor
repnz
dec
mov
or
arpl
sbb
adc
add
dec
movsl
sub
orl
jnp
jl
mov
jp
push
push
push
fistpll
fs
adc
out
and
adc
rcrl
xchg
jns
push
xchg
adc
jns
data16
addr16
cwtl
xor
popf
lret
mov
fwait
and
enter
xchg
loopne
mov
aas
adc
outsl
test
xor
sbb
dec
jne
inc
jg
loopne
and
neg
int
sbb
fnstsw
sbb
je
mov
jns
xchg
sbb
shufps
cmpb
add
cmp
add
xorl
ljmp
bnd
mov
je
pop
xorb
inc
cmc
push
int3
lret
inc
cmpsl
adc
jns
sahf
sbb
std
mov
xor
jae
pop
mov
arpl
lods
imul
cmp
es
cmp
and
jecxz
int
pop
or
mov
pop
sbb
push
mov
cmpsb
jae
push
jmp
pop
push
jp
inc
mov
lcall
in
xlat
mov
jecxz
and
or
mov
ds
mov
ficoml
cld
and
add
std
push
test
call
dec
les
inc
ret
icebp
ds
std
ret
lds
sbb
or
add
pop
addr16
std
fldenv
and
and
std
clc
push
adc
popf
sbb
cmc
repnz
test
sbb
cmpsl
push
sbb
push
inc
lods
shrb
xor
ret
sub
cmp
pop
mov
sub
push
mov
in
jnp
add
sub
ljmp
inc
xor
or
mov
xchg
adc
int3
icebp
movsl
sahf
cld
jmp
cltd
int3
xchg
stc
jecxz
jge
out
ror
adc
pop
fwait
mov
lsl
jb
jp
mov
ss
jns
mov
mov
fsts
je
adc
jp
lret
lods
pop
mov
lods
clc
lds
push
adc
mov
fsubs
out
pop
loop
sub
std
in
push
jle
in
popa
pop
mov
jp
les
flds
xchg
push
adc
js
jp
xchg
mov
lds
push
cmp
mov
mov
pop
push
mov
das
data16
rorl
lahf
aas
and
jnp
xchg
mov
mov
inc
jns
sub
inc
jnp
aas
sub
jl
and
push
es
xchg
xchg
ficoms
jecxz
not
fisttpll
mov
fmuls
int
aam
push
cmp
mov
gs
adc
or
mov
mov
iret
pop
bound
enter
mov
mov
or
inc
cmp
dec
mov
inc
pop
add
xorl
mov
xchg
outsl
push
stos
nopl
mov
mov
dec
pop
or
mov
sub
inc
inc
cs
lcall
add
or
and
fucom
loope
xlat
or
inc
mov
jecxz
add
push
sbb
rorl
testb
repz
shlb
xor
pop
icebp
insb
enter
aam
sbb
push
ret
add
mov
out
mov
aaa
adc
nop
fiaddl
ljmp
in
mov
sub
stos
fistpl
sahf
icebp
or
fucomp
incl
push
fadds
sub
pop
dec
fildll
or
repnz
mov
xchg
shlb
push
mov
or
dec
and
dec
out
push
lcall
je
imull
push
jp
add
pop
cwtl
mul
cwtl
nop
lods
push
int
mov
mov
push
divb
sbb
push
and
lcall
repz
inc
insl
mov
xchg
sub
call
cmp
push
lds
mov
sub
bound
xlat
sbb
addr16
inc
out
outsl
into
lea
popf
ss
test
jno
adc
ficomps
icebp
mov
frstor
lds
push
push
mov
cmpsb
jbe
roll
xchg
lahf
stc
mov
pop
mov
sarb
jle
or
add
sbb
pop
mov
sbb
add
add
sbb
cmp
divb
aaa
enter
inc
loope
test
pop
xchg
fdivs
lods
pop
jne
data16
out
dec
jecxz
sti
adc
mov
fadds
lods
xchg
push
pushf
xor
mov
pop
int3
mov
int3
pusha
mov
lods
js
loopne
loop
push
adcb
pop
pop
push
sub
or
inc
in
dec
mov
stc
sub
or
xor
jbe
addb
test
pop
icebp
cmp
cmp
xor
push
add
mov
pop
daa
jnp
push
push
ret
xor
sub
add
xor
jl
push
int3
stos
or
dec
ret
inc
lcall
cmpsl
sub
mov
push
mov
mov
pusha
fidivs
ds
cmp
into
out
xor
shl
outsb
adc
cld
cmp
ja
pop
dec
mov
ja
xor
les
mov
push
jbe
mov
and
iret
or
push
sbb
xor
pop
mov
in
pop
push
cmc
mov
loopne
push
bound
shlb
and
enter
pop
mov
mov
cmp
cwtl
je
xchg
in
fsubp
xor
jecxz
repz
popf
xlat
gs
push
out
fimull
mov
aad
jnp
in
test
jecxz
dec
rolb
and
jle
mov
sbb
cmp
lods
stos
fwait
pop
rcr
jmp
inc
mov
mov
xor
cld
dec
test
jno
fld
xchg
and
mov
outsb
mov
adc
or
and
cmpsb
outsb
sub
dec
inc
loope
pop
or
repnz
popa
mov
pop
jmp
pop
lret
cmp
mov
insl
sbb
pop
call
je
and
push
dec
xor
lret
pop
add
lds
or
sahf
jno
lea
lahf
aad
jno
mov
ret
jl
cmp
inc
outsl
test
push
push
and
in
xchg
inc
fs
xor
aam
enter
xor
mov
lcall
repnz
cmpsb
xchg
sub
cs
mov
lcall
cmpsl
mov
fistl
leave
xlat
test
in
or
fidivrs
push
jge
jbe
cmp
int3
cli
cmp
push
xor
insl
jl
fstpt
push
popf
imul
lods
jle
jo
mov
lahf
add
xchg
fbstp
shl
xchg
xor
pop
xor
stos
outsb
cli
pop
pushf
stos
mov
mov
mov
ja
movsb
or
mov
mov
or
int3
hlt
dec
out
insb
mov
stos
inc
jbe
pop
or
adc
mov
sbb
dec
jl
pop
popf
xor
scas
adc
lret
lahf
fisubrl
pop
addr16
mov
adc
lret
dec
jg
ja
xchg
sbb
xchg
xor
jb
fcmovnb
inc
and
rcll
and
or
xchg
fimull
push
xor
leave
push
jmp
rcl
arpl
test
sbb
xor
fucom
push
stos
pop
scas
dec
shrb
cmp
pusha
in
aad
mov
fld1
scas
sub
inc
iret
cmp
shl
out
jl
lahf
stc
push
xor
push
or
and
ret
or
aam
loop
dec
fldcw
sbb
push
jbe
xchg
fistpll
movsbl
aad
fsubr
add
and
out
repnz
icebp
cmc
insl
sub
scas
jge
mov
pop
jae
push
dec
sbb
cmp
daa
in
pop
test
subb
jnp
stc
enter
mov
nop
lods
push
push
ljmp
inc
sub
inc
inc
jle
adc
cmp
loopne
jb
in
xlat
pop
mov
add
arpl
inc
js
jg
rolb
fdivrl
inc
inc
ljmp
add
pop
jns
mov
popa
adc
sbb
adc
fwait
or
rol
lods
xor
adc
aad
lock
in
das
aam
or
or
lds
imul
jg
push
leave
mov
dec
shll
test
xlat
and
jae
out
push
inc
jbe
push
dec
xchg
pop
insb
dec
cmp
adc
xchg
loopne
xchg
or
sbbl
dec
xor
pop
aaa
sbb
in
idivb
jle
push
adc
mov
inc
xchg
or
jmp
mov
xchg
jb
adc
repz
movsl
lcall
adc
cmpsb
or
mov
xor
cld
inc
dec
pop
test
in
mov
iret
out
xor
sbb
sti
cmpl
gs
inc
mov
mov
in
inc
and
je
add
gs
adc
fisttps
orb
sub
mul
fistpl
inc
bound
stos
adcl
cld
sub
lock
pop
inc
paddsw
adc
dec
mov
adc
sti
mov
repz
in
mov
ret
push
cvtps2pi
out
push
and
adc
adc
or
jg
test
je
jl
jne
inc
xchg
adc
push
sbb
xor
mov
lods
out
jnp
jge
add
add
sbb
icebp
and
adc
mov
xor
mov
or
test
sarl
pop
sub
hlt
jmp
jle
jge
jge
mov
test
xor
inc
faddp
push
mov
add
mov
nop
dec
cmp
test
scas
mov
icebp
and
inc
push
mov
and
inc
mov
add
sti
and
sar
jbe
in
adc
xchg
pop
jae
adc
mov
jnp
xchg
mov
daa
pop
leave
lods
repnz
mov
stc
pop
and
andl
jnp
psubd
lods
xor
cmp
fs
nop
jg
orb
imul
stos
push
pushf
bnd
mov
sub
push
daa
je
leave
dec
mov
inc
or
ficoml
push
dec
sub
sbb
int
lcall
mov
jmp
add
aam
jge
aad
inc
jb
push
ljmp
aaa
out
push
and
lea
icebp
lret
dec
mov
aad
push
dec
jge,pn
fists
imul
xchg
dec
mov
fisttpl
cmp
mov
subb
pop
stos
andb
lds
fcompl
subl
daa
mov
mov
loope
lahf
lds
sub
js
neg
ret
push
hlt
gs
dec
push
shll
roll
adc
add
outsb
and
pop
lods
je
gs
sahf
das
mov
xor
popa
push
adc
xor
ret
jb
xchg
jb
pop
fdivl
mov
lds
inc
jmp
push
dec
cs
in
push
and
and
push
stos
std
cs
jno
xor
lret
ret
add
cs
sub
and
loope
sbb
and
and
repnz
push
cmpsb
sbb
mov
cmc
pop
jmp
push
and
fmuls
and
mov
stos
sub
add
adc
add
stc
xor
int
add
adc
popa
or
fisubrs
shlb
push
ljmp
ss
arpl
ja
iret
adc
rclb
mov
daa
push
lds
adc
add
imul
sub
rcrb
cmp
pop
rorb
rorl
cli
popf
out
cs
cld
ret
sub
mov
rorl
popa
pop
fiadds
adc
aam
loop
xchg
pop
iret
lahf
mov
mov
mov
adc
sti
lret
jp
push
out
xchg
mov
and
push
add
repz
xlat
int3
adc
mov
repz
pop
push
fisubrs
cmp
addb
out
lods
test
inc
ljmp
std
adc
pop
push
in
mov
add
dec
movsb
lods
ret
mov
push
cmp
sub
push
mov
fisubrl
mov
jmp
dec
lods
divl
xchg
mov
cmp
cmpsl
sub
imul
jle
and
dec
xor
push
out
xchg
movsb
loop
loop
sarl
push
stos
fistl
enter
setge
lods
sarl
xchg
mov
les
scas
aaa
sbb
jl
xlat
mov
xchg
xchg
dec
mov
cli
dec
jo
mov
hlt
icebp
orl
mov
cmpb
or
or
setbe
fwait
mov
scas
push
or
pop
pop
add
mov
icebp
packssdw
push
adc
push
int
xchg
lods
shll
add
jae
sub
xor
rcrl
fimuls
daa
cmc
adc
mov
jl
clc
lock
xchg
lret
enter
pop
xor
mov
jecxz
push
dec
ret
aam
test
repz
push
ljmp
fbld
popa
mov
icebp
and
test
mov
int3
sbb
jnp
loope
scas
movsb
jns
xchg
xlat
dec
loopne
add
mov
mov
hlt
enter
repnz
inc
ficompl
sbbl
jb
popa
ja
sbb
jge
xchg
push
iret
orl
fsubl
and
mov
jbe
xchg
add
pop
mov
add
mov
das
xchg
sbb
push
roll
lea
push
cwtl
jmp
sub
dec
xlat
cmp
jge
scas
mov
mov
cmp
scas
pop
xor
xor
jp
shlb
movsb
adc
add
sub
push
xchg
jns
cmp
test
xchg
out
lock
cmpsb
ljmp
mov
inc
push
enter
jne
jge
dec
dec
inc
xchg
int3
mov
dec
add
clc
cmp
pusha
out
sbb
imul
arpl
pop
and
xlat
imul
in
and
inc
xchg
or
mov
add
lods
in
jmp
faddp
push
sbb
sbb
ljmp
mov
cmpsl
cld
enter
adc
js
divb
inc
sahf
sahf
mov
fcoms
push
flds
inc
mov
ret
cs
dec
pop
stc
add
push
mov
xchg
jecxz
jno
shlb
pop
pop
popf
bound
sti
cs
push
lock
inc
mov
dec
ljmp
push
mov
in
jg
fs
dec
fisttps
cltd
gs
cmp
mov
popf
in
inc
mov
ja
xchg
xor
dec
and
test
mov
fadds
bt
mov
jbe
sub
add
lcall
push
ljmp
hlt
jecxz
sub
fisubrs
push
push
fwait
cs
and
idivb
lret
dec
jle
mov
mov
jno
mov
push
lcall
rorb
movsb
cmp
or
jl
jae
push
cs
out
imul
mov
push
jmp
hlt
mov
pop
xor
xor
fistpll
fcompl
std
cmp
aam
popa
cmp
or
lea
pop
inc
sbb
shl
ret
lds
lea
cli
ja
inc
xchg
xor
lret
dec
sbb
loop
dec
sbb
sub
idivl
push
jg
cltd
mov
mov
ret
push
sbb
loop
push
test
insl
mov
dec
jne
jnp
add
loopew
mov
mov
pop
sbb
pop
dec
out
mov
mov
add
inc
xchg
mov
push
mov
loopne
push
jle
hlt
adc
push
pop
sub
ds
lret
sbb
lahf
add
mov
pop
or
cmpsl
mov
cmc
in
orb
imull
outsl
mov
adc
inc
ret
cmp
push
andb
mov
aaa
mov
xor
loope
fldenv
mov
fistps
xor
int3
xor
push
push
pop
mov
mov
pusha
pop
pop
and
fdiv
and
inc
pop
pop
clc
dec
subb
xor
mov
arpl
popa
sbb
pop
add
inc
nop
xor
push
sub
enter
jmp
jp
xor
nop
aam
adcl
sbb
mov
je
outsb
mov
cmpsl
into
sbb
hlt
cmpsb
cmp
cmp
fstpt
cwtl
dec
into
mov
push
call
sbb
arpl
bound
das
lds
in
or
mov
mov
dec
cmp
sahf
lods
mov
movb
mov
inc
popf
popa
push
pop
xchg
push
pop
mov
mov
mov
xor
dec
cmp
sbb
scas
lds
pop
sub
aam
leave
lods
jmp
cmp
lods
mov
sub
xchg
cld
iret
jae
mov
ficoms
jmp
fs
cmp
xor
or
inc
adc
or
xchg
jp
jecxz
adc
pop
iret
xchg
bound
xor
push
push
lea
inc
adc
cwtl
imul
jae
sbb
stos
mov
outsl
adc
out
in
icebp
in
pop
test
xchg
inc
stos
jg
sbb
shll
gs
enter
push
int
mov
and
sbb
in
push
ljmp
ljmp
adc
lahf
popf
push
xacquire
cmpsb
sbb
aam
mov
push
push
gs
add
jns
decb
cmp
or
test
and
sub
sub
rorb
rorl
and
jne
adc
pop
leave
aas
int
push
cmovne
dec
cli
in
pmaxub
jle
in
test
jge
fwait
cli
push
fildll
je
sub
mov
ret
imul
das
lds
sti
jecxz
addl
xorl
and
sbb
and
push
pushf
jae
jns
adc
leave
inc
aas
rcll
inc
sbb
out
repnz
imul
or
mov
add
dec
mov
mov
fisttps
pusha
or
and
daa
or
movsb
mov
loop
call
push
imul
mov
xor
jnp
addr16
dec
jmp
push
jge
mov
xchg
enter
mov
dec
mov
lahf
add
xor
out
pushf
jne
or
and
rclb
push
mov
push
and
xlat
add
pop
mov
popl
aas
jp
stos
fwait
mov
movsl
aam
jp
and
and
inc
cld
adc
jge
jge
jbe
test
repnz
pop
xchg
out
ljmp
ror
in
and
out
icebp
dec
into
cmp
scas
cmp
or
pop
test
mov
mov
mov
lahf
mov
repnz
pop
jo
add
divl
add
add
mov
and
fsubrs
or
mov
in
inc
adc
loop
jne
xchg
xor
jle
fstpt
cli
xchg
ficompl
test
add
cmp
jne
es
jnp
push
pushf
arpl
addl
cmpl
scas
in
mov
ja
jmp
mov
cmp
add
or
jecxz
outsb
sub
and
out
idiv
cmp
xchg
mov
jg
or
loopne
inc
xor
js
or
jge
gs
and
xor
cmp
pop
test
xor
add
cmpsl
imul
push
testl
mov
int
pushf
add
sbb
mov
scas
jbe
push
add
push
movsb
cmp
dec
inc
addb
gs
push
sbb
jmp
adc
push
add
std
pop
sbb
rclb
fmuls
fwait
xchg
inc
das
js
jmp
mov
sub
ret
mov
js
lret
das
out
cmp
dec
mov
mov
push
mov
sub
hlt
sub
ret
pop
jmp
movsl
aaa
aam
aas
cli
outsb
sbb
aam
mov
test
inc
call
lret
in
pop
or
lahf
or
pop
xchg
xlat
push
idivl
cmc
shll
add
je
dec
es
cmp
cmp
mov
mov
movsl
out
sbb
sahf
jmp
sti
sub
and
add
cmpb
inc
or
repnz
cltd
mov
xchg
jmp
je
out
fistps
xchg
into
shlb
iret
ret
testb
aas
mov
outsl
js
add
aas
push
jg
cld
push
das
inc
push
jle
das
dec
inc
push
pop
xor
out
mov
jmp
shrb
aaa
xchg
stc
xlat
fstpt
push
pop
test
gs
push
orb
enter
inc
push
lds
cmc
movsb
fidivrl
mov
jecxz
or
cmp
test
shrl
and
outsl
push
push
in
sbb
push
int3
adc
xchg
fcomps
xchg
das
scas
xchg
js
sub
ss
in
cwtl
cmp
jecxz
xor
xor
les
inc
add
sbb
divl
pop
mov
popa
dec
mov
loop
push
push
aas
popa
mov
add
in
jno
aaa
fs
int
mov
enter
int
mov
les
and
pop
imul
jbe
out
jo
test
loope
lahf
sbb
pop
and
jo
pop
xchg
push
mov
pop
or
mov
and
sbb
cwtl
jae
and
js
daa
jle
adc
add
loope
out
fwait
int
inc
jle
sbb
xchg
sbb
pop
xchg
cmp
cld
arpl
adc
testl
sbb
ror
xchg
adc
xor
jg
mov
ret
add
rolb
mov
loopne
mov
inc
adc
xchg
aaa
cmp
aad
insb
imul
add
jno
and
fwait
cmp
or
outsb
fiadds
out
cs
cmp
mov
inc
popa
dec
movsb
mov
call
in
enter
icebp
mov
cmp
enter
mov
aaa
xchg
mov
loope
je
mov
jg
mov
adc
pop
jecxz
xchg
insb
scas
test
out
test
in
push
lock
inc
dec
xchg
cmp
stos
das
xchg
icebp
mov
jb
sbb
js
mov
enter
mov
js
test
cmpsl
add
lock
mov
or
es
dec
push
jmp
fwait
xor
ss
aam
shrb
lret
cmpsl
or
sub
xor
inc
repnz
jg
cwtl
jg
fildl
pop
cmovs
bound
testb
lds
inc
js
test
ret
add
orb
imul
push
or
arpl
cwtl
xchg
xor
or
enter
clc
sbb
rorl
sahf
enter
movnti
dec
lock
in
or
mov
jle
aad
and
pop
movsb
mov
fstl
fnsave
mov
dec
mov
scas
test
fistpl
daa
pop
xchg
jae
mov
inc
dec
out
cli
es
add
cmpsl
out
fs
jns
pushf
je
fwait
or
mov
mov
int3
outsb
hlt
lock
ret
adc
pop
push
repnz
addr16
and
sbb
inc
push
fisttps
sub
jp
jb
jno
fsubrs
dec
xchg
movsb
xor
fwait
push
pop
out
es
ror
stos
mov
or
mov
inc
out
addl
jne
cmp
xor
mov
aad
int
scas
sbb
movsl
iret
mov
orb
rcr
icebp
xor
mov
add
sarl
inc
arpl
mov
adc
push
loopne
dec
and
sbb
iret
orb
std
mov
and
jb
adc
jnp
fadds
jmp
test
subb
out
add
repnz
pop
mov
push
nop
mov
jl
dec
xchg
es
pop
mov
pushf
in
and
hlt
push
stc
mov
pop
idiv
cmp
insb
das
push
mov
stc
in
addr16
decl
es
test
int3
pcmpgtb
es
stos
xor
add
xchg
xor
mov
jo
movsl
es
insb
insl
jl
push
lret
imul
sbb
dec
pop
pop
mov
pop
cmp
add
sbb
shrl
add
or
mov
mov
and
repnz
in
into
sub
sbb
rcrb
dec
aas
aas
add
js
enter
or
cmp
fmuls
rcrl
out
push
mov
imul
aaa
cmc
mov
and
sbb
xchg
mov
scas
push
bound
imul
mov
sub
insb
icebp
mov
test
pop
jmp
inc
mov
cmp
xor
add
mov
lods
repz
fcompp
pop
mov
mov
adc
jp
cmpsl
jmp
mov
push
mov
push
adc
xor
mov
or
imul
cld
aam
cmp
int3
ljmp
test
fdivl
faddl
xor
adc
sub
gs
out
xor
sbb
mov
xchg
cld
mov
outsl
mov
into
xchg
cltd
lret
shrb
add
aas
add
pop
pusha
xor
sbb
mov
mov
xor
int3
inc
aas
mov
inc
test
mov
jae
mov
cmp
mov
loopne
repnz
clc
ds
sbb
push
sub
jbe
push
mov
fwait
arpl
mov
movsl
pop
int3
cltd
adc
icebp
jae
dec
mov
pop
stos
jmp
sub
aas
into
lea
in
adc
in
pop
adc
movb
mov
mov
fisttpl
inc
cltd
mul
fidivrl
pop
push
pop
scas
inc
ficompl
das
and
fsubs
and
fstpl
and
pop
bound
fsubrl
idivl
outsb
mov
fcomip
ja
fldcw
out
dec
insb
mov
scas
call
or
aaa
jg
insb
sub
dec
faddl
pop
mov
jae
xchg
push
cmpsl
cmp
mov
loop
jae,pt
dec
pop
mov
shlb
inc
xor
lcall
xchg
and
add
mov
sti
mov
gs
je
stos
push
mov
lret
inc
ja
mov
and
fcomp
lret
out
adc
lahf
mov
scas
mov
loop
add
mov
mov
jns
in
push
sbb
xchg
je
in
or
fidivl
outsb
add
mov
ljmp
and
pop
jp
jns
stos
dec
outsb
fwait
sahf
xor
fsubs
sbb
lret
sarb
pop
mov
out
sub
mov
sbb
lahf
mov
xchg
in
lret
inc
push
sbb
fsubrl
addr16
popa
fisttps
push
fdiv
jo
mov
int
ds
cmp
imul
or
es
loopne
clc
lcall
fldcw
mov
inc
nop
out
mov
and
gs
cmpsl
test
cmp
test
sti
shlb
negb
lret
mov
pop
mov
mov
cs
add
inc
push
daa
fstpl
xor
xchg
push
dec
jg
mov
movsb
aaa
push
pop
inc
mov
cmc
aas
flds
pop
daa
pop
mov
cmp
jge
aas
test
lods
mov
cmc
addr16
stos
jp
ret
mov
out
jmp
mov
pop
push
loopne
xchg
mov
sti
mov
sti
popf
mov
add
pop
in
stos
fiaddl
mov
mov
mov
add
mov
imul
je
mov
aas
outsl
popa
stos
inc
or
pop
adc
cmpl
outsl
out
in
mov
psadbw
inc
sub
xor
aad
lret
or
out
ss
mov
fisttpll
add
adc
xchg
mov
add
into
lret
subl
dec
cmp
xlat
aas
sarl
test
test
mov
jo
cmp
mov
xchg
movsb
cld
lods
sbb
cmp
push
mov
pop
lods
mov
add
mov
lahf
dec
dec
jecxz
dec
mov
cmp
lock
test
lds
add
shlb
jge
or
xor
xor
ljmp
mov
sub
mov
std
inc
out
mov
hlt
mov
adc
fidivs
in
adc
rsqrtps
pop
std
mov
pop
adcl
push
mov
jno
push
pop
fs
jns
clc
mov
sub
xor
js
push
sub
leave
push
cmp
mov
outsb
aad
mov
mov
pop
adc
stos
out
inc
pop
push
cmp
mov
jl
in
out
adc
dec
test
pop
mov
xor
add
out
mov
adc
stc
mov
shl
loop
sti
dec
or
mov
dec
pop
fstl
xor
adc
lds
fists
fisubrs
push
aad
xchg
in
sub
pop
xchg
fs
test
inc
pop
inc
mov
xchg
pop
sub
shl
add
aad
mov
in
xchg
lret
push
rcrl
pop
add
mov
cmp
pop
push
and
inc
pusha
rcl
xchg
mov
lods
testb
and
repz
test
les
sub
xchg
outsl
loop
fldl
enter
jp
mov
mov
movsl
ljmp
push
jbe
ja
lea
std
repz
adc
mov
into
push
mov
enter
outsb
daa
dec
cmp
or
jecxz
dec
and
insl
jle
mov
mov
sub
test
mov
push
xchg
adcb
out
sbb
pop
inc
rcrb
aas
dec
add
and
sahf
fsubrl
cmp
es
nop
idivl
add
sbb
adc
cltd
mov
adc
movsb
inc
mov
lock
adc
mov
add
mov
sbb
sbb
cmp
test
lahf
ret
jmp
jg
pop
lock
or
hlt
mov
cmp
arpl
adc
insl
sti
dec
scas
pop
jl
mov
les
mov
push
daa
out
push
in
lret
pop
xchg
jae
mov
jae
cmp
stos
in
jl
mull
pop
out
adc
les
mov
divb
pusha
xor
cmp
and
xor
call
or
testb
mov
pusha
inc
enter
add
jge
lock
jns
aam
mov
mov
sbb
sarl
sbb
jmp
cmpsb
insb
jl
sbb
cmp
test
aam
repz
or
jle
aas
and
es
scas
mov
pop
fldl
outsb
xchg
pop
cmpsl
mov
cld
push
cltd
in
inc
fcmovb
pop
pop
lea
daa
lods
in
daa
out
jge
xor
jae
xchg
push
or
pop
xor
lods
cwtl
push
and
mov
dec
push
jl
mov
movsl
stos
xchg
sbb
xchg
mov
lds
pop
mov
stos
dec
add
setp
mov
and
lds
push
enter
adc
movsb
movsl
inc
mov
sub
fbstp
xchg
sarb
bound
loopne
adc
lret
test
add
mov
shrb
jnp
rorl
lea
cmp
sbb
sub
pop
inc
fnsave
adcl
sbb
cld
xchg
fs
or
aam
and
movsb
cld
test
mov
mov
cli
loopne
pop
mov
lcall
push
gs
mov
mov
xchg
mov
notb
scas
jae
in
sub
cmpsw
test
jno
push
mov
xchg
imul
cwtl
dec
test
paddusb
mov
fdivrp
fists
daa
fnstenv
inc
push
lcall
mov
mov
mov
mov
outsb
pop
and
icebp
add
jmp
sti
leave
pusha
mov
or
mov
clc
inc
lds
inc
scas
cld
fildll
mov
dec
stc
cmp
shll
adc
adc
add
scas
decl
addr16
sbb
cmp
scas
es
mov
mov
testb
sub
adc
xchg
sbb
adcb
inc
movsl
sub
sub
xchg
dec
sbb
lods
and
push
repz
jo
jbe
or
xchg
xor
jge
repnz
push
mov
cmp
cld
xchg
loopne
or
push
and
cmp
jge
cmp
cmc
push
mov
pavgb
ret
inc
dec
iret
jl
or
cmp
add
das
nopl
test
popf
hlt
adc
cmp
inc
aas
jae
dec
nop
adc
mov
sub
or
pop
and
fnstcw
sar
xchg
xchg
lcall
int
mov
adcl
xchg
movsl
mov
push
pop
push
addr16
xor
jmp
insb
mov
cmpsl
dec
shl
sahf
stos
pop
popf
push
xlat
fistps
ljmp
push
mov
scas
daa
and
out
mov
or
jb
cmp
add
jbe
popa
pop
addr16
addr16
mov
roll
sahf
inc
dec
xor
lods
scas
xchg
xchg
in
ja
mov
test
inc
test
sbb
xchg
aas
enter
sbb
or
mov
sub
sbb
in
pusha
lock
fst
dec
add
or
cmp
xchg
sub
inc
sbb
mov
imull
jge
sbb
call
imull
outsb
or
push
dec
mov
jo
insb
imul
cmp
subl
jnp
mov
adc
negb
scas
testb
je
mov
les
idivl
les
mov
pop
fcompl
out
pop
icebp
add
and
push
jno
xchg
lcall
ja
or
sbb
inc
xor
adc
mov
inc
mov
mov
inc
addr16
lret
repz
or
loop
dec
xor
fstl
xlat
mov
mov
xor
adc
arpl
adc
or
jnp
fldt
cld
mov
add
gs
inc
mov
xchg
xchg
sub
icebp
adc
adc
add
fnstsw
roll
push
popa
push
dec
sbb
or
and
lcall
stc
lods
jns
pop
bound
sbb
in
in
cmp
clc
mov
jmp
inc
test
pop
rcr
lea
out
adc
or
pop
jmp
jo
sar
push
repz
je
mov
test
outsl
lods
dec
dec
push
mov
pop
stos
mov
mov
push
pop
mov
nop
in
clc
into
pop
mov
enter
shrl
fnsave
int
cmc
and
xchg
test
xor
fstps
mov
enter
bound
mov
movsb
shl
loope
cmp
and
fld
js
loope
rcll
cmp
lahf
sbb
jle
sahf
mov
fdivp
ret
insb
fisttpl
or
push
sub
icebp
xchg
fcmovu
cwtl
sarl
enter
xchg
cmp
les
mov
cmp
add
and
fmuls
lahf
mov
inc
outsb
aad
push
in
pop
jg
push
rcrl
in
push
jp
shrl
push
in
out
mov
sbb
inc
call
lods
mov
arpl
sbb
or
movsl
int
cmp
fistpll
and
sub
pop
ds
sub
rcl
mov
call
sbb
ds
sbb
mov
insb
mov
lahf
push
jbe
test
dec
adc
mov
jo
and
aaa
cmp
loopne
lahf
sub
xchg
adc
xlat
into
lock
into
mov
imul
xchg
dec
aad
pop
es
fdivs
adc
sbb
loopne
sbb
fcmovnu
decb
scas
aam
nop
pop
mov
call
pop
in
and
imul
adc
icebp
jecxz
sub
adc
testb
jg
pop
mov
cs
int3
lret
ret
and
adc
mov
inc
es
adc
hlt
hlt
mov
bnd
fbld
das
movsb
add
add
xlat
in
mov
fisttpll
loope
inc
and
push
cmpsl
push
mov
inc
sub
sub
js
push
enter
mov
out
cmp
mov
std
das
adcb
test
sub
push
cmp
pop
cli
orb
stos
mov
xchg
or
aad
jge
push
leave
jl
push
jl
dec
insb
loop
cmp
xor
sub
sbb
lods
in
lret
cltd
cmp
call
andl
int
mov
fstl
sbb
imul
ss
sahf
push
mov
test
mov
pop
lea
inc
mov
adc
xchg
pop
ret
adcl
dec
sti
sbb
push
stos
dec
dec
test
jnp
jns
xor
or
inc
add
push
mov
stos
pop
mov
mov
push
lods
xchg
fldt
xchg
pop
push
stc
xchg
sub
or
movsl
mov
push
xorb
adc
sbb
push
push
cli
sbb
ljmp
pop
call
ja
add
inc
mov
lahf
out
inc
xor
cltd
jl
xchg
shlb
incb
or
sub
sbb
dec
xlat
dec
mov
in
movsl
push
lods
icebp
jl
sub
daa
jmp
stc
cli
sbb
sbb
aaa
adc
xchg
data16
clc
mov
sahf
jne
loope
test
mov
mov
cmp
hlt
mov
pop
mov
into
mov
fs
and
and
int3
mov
inc
sbbl
push
mov
inc
sub
sub
dec
jne
xlat
jb
or
xor
popa
sahf
sub
ficomps
or
inc
mov
out
daa
push
imul
mov
out
mov
sub
cltd
fwait
ljmp
out
lds
xchg
xchg
jb
fsubs
mov
addr16
mov
jmp
dec
and
roll
pop
dec
cmp
or
cwtl
bound
nop
mov
pusha
xchg
mov
mov
jbe
push
gs
mov
xchg
pop
les
or
jmp
inc
popa
push
sub
leave
sub
into
cmpsb
inc
mov
and
push
xchg
fs
push
xchg
sub
pop
imul
fisubl
cmp
gs
mov
loop
cmp
aam
adc
sbbb
gs
aad
scas
jne
adc
xchg
shrl
jo
arpl
js
cmp
pop
enter
call
jecxz
mov
jge
push
inc
sub
femms
xor
arpl
sarl
add
xchg
push
add
sub
cmp
inc
dec
or
aas
or
dec
xchg
sti
pushf
lock
sbb
jecxz
mov
cld
cmp
pop
cmpsb
add
sbbl
inc
pop
or
imulb
popf
mov
stos
cmp
lret
stc
hlt
fisubl
cmp
cmp
mov
addr16
add
mov
rorl
test
popf
mov
or
cmp
js
fs
mov
enter
loope
jne
in
das
in
xchg
mov
fstpt
mov
xchg
adc
pop
into
in
popf
icebp
sub
loop
mov
fcomps
dec
das
dec
lcall
icebp
cmpsl
lds
lea
fsubs
dec
push
dec
add
addl
sti
lods
jl
sub
dec
dec
pushf
mov
add
pop
adc
out
cmpsl
scas
dec
fmul
jmp
mov
adc
xor
imul
cmp
adc
mov
int3
movsb
cmpsb
jecxz
scas
sub
jl
repnz
lods
mov
or
jl
mov
mov
outsb
mov
sbb
cmc
add
in
fsub
and
mov
or
fstp
rclb
imul
xor
repnz
add
fildl
in
push
push
sub
cmp
mov
pushf
iret
lods
cltd
repnz
pop
pop
sbb
and
and
nop
mov
lods
aam
jbe
xor
xchg
cmc
ret
add
mov
rorl
cmpsl
repnz
adc
xchg
int3
add
lock
cmp
adc
add
je
es
jb
lret
pop
push
fstp
call
adc
mov
out
xor
mov
jb
in
stos
movl
mov
outsl
xor
add
test
bnd
sub
in
xor
lret
mov
inc
dec
xchg
and
out
movl
out
mov
sar
pop
mov
pusha
xchg
jecxz
xor
add
imul
out
or
movsl
out
or
push
fdivr
out
dec
mov
adc
pop
push
stos
iret
xor
testl
in
cli
call
mov
xor
mov
daa
out
ss
lcall
cmc
leave
mov
mov
push
loopne
rcr
jmp
mov
or
pop
movsb
ret
xor
inc
pop
rcrl
push
adc
jae
popf
push
in
outsb
scas
dec
and
jns
dec
xchg
jg
sub
mov
shll
lcall
push
iret
loop
mov
mov
xchg
jne
sarb
pop
les
test
jns
imull
mov
cmc
ss
dec
orb
push
push
pop
inc
sub
or
jmp
jge
in
xchg
stos
cmp
je
add
shlb
mov
xchg
jb
lods
dec
movsl
out
test
pop
stc
sbb
add
pusha
jp
add
test
or
incl
mov
cmp
js
int3
dec
cmc
adc
push
xchg
daa
adc
mov
or
dec
jecxz
incl
push
cmp
jns
mov
jle
sbb
lcall
mov
pop
cmpsb
and
jge
jo
jl
push
scas
adc
lret
ds
into
jb
lcall
xchg
push
xchg
xlat
sbb
dec
outsl
cmc
pop
ret
repz
mov
arpl
pop
push
cmp
insl
push
sbb
fcoml
in
mov
shl
sbb
loopne
daa
mov
hlt
aad
and
std
call
pop
jge
mov
and
xor
dec
or
sub
mov
stos
shl
imul
mulb
negb
clc
pop
rcl
fstps
xor
test
test
dec
rorb
inc
cmpsb
pop
lahf
jbe
dec
pop
sbb
jnp
dec
insl
xchg
scas
out
mov
mov
imul
ja
es
cld
xchg
mov
shrb
in
push
mov
lcall
xor
test
jnp
roll
adc
pop
lcall
pop
in
insl
loop
xchg
cmp
mov
hlt
dec
sub
rolb
mov
xchg
pop
pop
shrl
iret
fwait
cmp
aas
js
mov
cmp
sub
push
subl
lods
jmp
lcall
sub
adc
sub
sbb
lea
jg
xchg
push
stos
push
push
out
mov
out
adc
addr16
clc
loop
mov
cmp
xor
add
sbb
dec
call
std
flds
dec
push
push
scas
inc
fcomps
adc
pop
out
jns,pt
sbb
and
shll
out
mov
cmpb
imul
pop
out
fnstenv
lret
popa
and
mov
test
lods
cmc
outsb
add
mov
adc
xor
push
jns
xchg
rsm
lods
in
pop
xchg
dec
xchg
dec
aad
imul
jbe
sbb
xchg
es
subb
sub
push
push
call
inc
adcb
subb
dec
orb
icebp
ret
add
ljmp
movsl
or
push
inc
mov
cli
sub
cs
sub
xor
aam
jae
in
mov
mov
mov
mov
pop
mov
pop
int
pusha
test
pop
pop
lret
loop
xchg
xor
push
mov
xor
mov
rcr
aaa
xchg
pop
enter
lcall
dec
test
mov
xchg
outsl
sbb
sub
loop
xchg
loopne
cmp
popf
jno
mov
sub
stos
push
sub
ss
les
lahf
cmpsl
insl
or
mov
loopne
js
ret
adc
pop
ljmp
test
mov
les
cmc
mov
jb
jnp
jg
iret
mov
fiaddl
ss
sbb
test
test
push
lret
dec
jmp
and
sbb
sub
and
pop
stc
xor
stc
bnd
inc
stc
rcrl
add
mov
dec
popa
or
arpl
in
mov
pop
arpl
pop
sub
daa
mov
fisttpl
mov
out
fcompl
mov
sbb
xor
push
loopne
sbb
mov
cmp
dec
popa
in
push
scas
mov
call
sbb
mov
and
jl
mov
mov
sbb
add
jbe
lcall
add
in
out
ret
loope
push
dec
orl
sarl
movsl
loope
adc
xchg
inc
lods
lods
movsl
addr16
ja
sbb
adc
xlat
mov
pop
push
sub
std
int
pop
mov
ret
imul
jmp
lock
sbb
movsl
outsb
js
stos
icebp
repnz
push
in
or
insb
pusha
add
stc
push
gs
mov
or
into
pop
add
cwtl
stos
jno
loopne
fs
fs
icebp
scas
notb
jb
cmp
lods
lds
shll
inc
movsb
mov
cmp
mov
andb
inc
enter
push
pop
out
pop
lret
xchg
cli
stos
xor
or
imul
xchg
or
das
dec
inc
jne
pop
inc
outsb
jge
sarb
mov
and
push
icebp
cwtl
std
push
mov
bound
popf
inc
fcoms
repnz
lods
outsl
fldl
mov
int
ds
adc
cmc
and
dec
insl
dec
fsubs
xchg
nop
inc
sbb
mov
sbb
sahf
imul
push
mov
out
push
mov
shll
push
negl
jnp
adc
mov
pushl
outsl
out
sbb
jl
mov
loope
rcrl
scas
daa
or
push
enter
rorl
cmp
out
lahf
dec
pop
js
lock
sub
push
out
ljmp
lds
cwtl
mov
jp
or
dec
addr16
pop
mov
xchg
mov
daa
jno
pop
inc
mov
cmp
push
outsb
xlat
cltd
repz
int3
rcrl
imul
add
cmpsb
inc
mov
cmp
cwtl
mov
mov
ficoml
jle
pop
push
std
inc
sub
cmp
fcomp
in
lods
pop
ljmp
adc
dec
jns
mov
mov
es
stos
adc
int3
test
dec
cmp
inc
pop
mov
cltd
pop
jl
roll
xchg
push
push
js
ret
bound
aaa
mov
push
add
insb
fbstp
inc
inc
cmpsl
popf
mov
sbb
xchg
jecxz
mov
mov
sub
lahf
cs
add
lret
jge
dec
sub
xchg
sub
cmp
mov
pop
incl
mov
lock
push
lds
mov
aam
inc
jb
mov
adcl
sbb
aas
inc
test
popa
push
jmp
stos
jns
mov
push
mov
iret
mov
imul
jnp
mov
les
jb
mov
push
cmc
mov
sub
sbb
subl
sub
cmpsl
cltd
and
lret
leave
mov
cmp
xor
adc
in
jl
push
subl
dec
push
sub
subb
or
sbbb
cmp
pop
dec
test
pop
and
jl
push
fcoml
pop
and
sarb
pop
imulb
inc
outsl
xlat
xchg
lret
dec
insb
test
aad
lcall
std
lods
mov
sbb
js
xchg
mov
inc
aam
push
test
sbb
adc
push
insb
cwtl
std
testb
mov
xchg
jg
out
cli
enter
add
lds
in
loop
xchg
mov
mov
mov
setl
add
or
ja
into
or
fnstenv
dec
mov
jns
mov
push
jl
cwtl
jg
into
inc
jo
neg
out
jge
and
xchg
mov
int3
stc
dec
mov
paddq
inc
cwtl
cs
mov
fdivs
fs
cld
repnz
inc
cmpsl
lods
cwtl
adc
test
loope
jmp
ljmp
lock
mov
push
arpl
call
test
out
sub
loop
pop
xchg
add
pop
inc
mov
sub
scas
cld
jg
sub
mov
out
mov
add
daa
push
scas
push
pop
test
inc
test
xlat
sub
fwait
mov
xor
fneni(8087
mov
sbb
jl
cli
repnz
sub
xor
test
adc
jb
aad
inc
int3
int
insb
mov
push
nop
test
push
and
test
sub
js
int3
push
mov
out
insl
push
push
jle
or
icebp
add
cs
ret
cmpsl
mov
or
pop
jbe
mov
outsl
popa
sub
rcll
push
cmpsb
in
add
sbb
shrb
adc
add
mov
push
xchg
adc
mov
mov
dec
sarl
xchg
xchg
mov
sub
loope
pop
mov
test
scas
inc
fiaddl
stos
pop
add
jg
out
mov
out
insb
popf
ret
mov
hlt
ljmp
sbb
jae
push
pop
scas
mov
ret
jno
sub
push
scas
inc
popa
mov
add
aad
xor
mov
sbbb
out
add
lret
mov
pusha
pop
xor
add
movsb
out
xor
repnz
loopne
in
cmp
aam
addr16
dec
inc
push
mov
out
scas
xchg
add
out
inc
inc
xchg
scas
addl
cmp
lods
fs
lods
xchg
adc
jnp
mov
and
cmp
fs
hlt
loope
adc
pop
gs
movsb
aas
inc
xor
adc
inc
mov
push
cltd
int3
stos
xor
cmp
shl
xchg
dec
cmp
shrb
xor
add
rclb
push
popa
xchg
jo
xchg
xor
push
shrb
arpl
jmp
push
rcl
dec
gs
scas
lods
ffree
gs
js
inc
scas
dec
mov
jbe
pop
dec
sbb
push
repnz
ret
add
or
mov
ljmp
pop
jp
ja
out
push
shrl
mov
jnp
lods
dec
cmp
mov
or
push
stc
les
push
pop
mov
xchg
and
faddl
enter
test
mov
or
dec
cwtl
es
or
sbb
mov
ss
push
pushf
cltd
jmp
or
add
lahf
mov
and
pop
add
jne
loop
testl
cmc
cld
loope
push
subb
adc
bound
movsb
ret
dec
pop
add
les
fs
sti
in
lods
sbb
adc
sub
adc
nop
cmp
scas
jle
and
mov
mov
mov
inc
mov
lret
mov
sbb
hlt
shrb
push
jb
jmp
mov
fsts
ret
jb
sbb
decb
xchg
jo
loopne
or
mov
mov
jbe
and
sub
pop
mov
add
adc
push
dec
jns
mov
cmp
in
adc
or
nop
mov
mov
sbb
lods
and
in
and
or
jno
incl
fldenv
outsl
data16
ret
push
and
mov
xchg
sub
jle
pop
mov
testl
dec
cmpsl
std
mov
jns
test
dec
inc
fstpl
stc
sarb
xchg
push
sbb
insl
outsb
mov
mov
es
out
fnclex
or
xor
xor
leave
pop
test
or
cmp
mov
push
and
imul
popf
cmp
dec
loopne
dec
jo
jge
sub
test
cmpsl
push
jno
xor
popf
xor
jg
enter
shll
movsl
dec
jbe
lret
inc
xor
shll
fldenv
gs
cs
data16
test
lahf
addr16
mov
dec
repz
stos
mov
out
adc
stos
lret
mov
mov
mov
xor
lods
das
mov
cmp
sqrtps
out
push
cmpsl
dec
push
js
ret
or
cmp
outsl
jae
fcomp
cmp
cmp
pop
dec
or
adc
insl
aaa
mov
jne
imul
or
dec
add
mov
icebp
in
jge
repz
and
cmp
adc
insl
jp
jg
outsb
xlat
jle
add
dec
scas
jbe
jmp
jp
out
icebp
insl
jl
test
push
and
sbb
jmp
ljmp
fcoms
stos
xor
mov
sbb
dec
faddl
mov
pop
and
inc
gs
in
clc
pavgb
mov
icebp
pusha
cmp
mov
mov
test
xchg
mov
out
pop
jmp
pop
cmp
pop
fidivs
push
mov
mov
dec
cmp
out
mov
je
jge
mov
sti
inc
push
insb
mov
leave
in
ds
jb
cmpsb
mov
push
mov
repz
test
scas
pushf
sbb
xor
out
mov
or
mov
fwait
pop
lcall
mov
mov
pop
pop
rclb
pop
ljmp
jns
sub
fwait
scas
add
in
fdivr
or
popa
fwait
xorb
mov
dec
pusha
xlat
mov
mov
or
pop
and
out
fld
aam
pop
or
cwtl
mov
adc
into
scas
rcrl
push
fsubrs
ss
adc
shl
mov
leave
adc
push
sbb
subl
push
pop
pusha
les
or
mov
xchg
xor
fisubrs
or
in
pop
or
pushf
push
das
push
insb
fadds
stos
pop
push
jns
popf
lret
inc
and
mov
jle
lea
pop
cwtl
incb
mov
xchg
adcb
pop
out
icebp
and
scas
imul
adc
filds
mov
or
and
xorb
xchg
push
mov
rcrb
dec
mov
scas
or
pop
and
push
inc
and
scas
fdivrl
mov
xchg
test
jae
push
icebp
or
sub
push
loope
mov
mov
in
cmp
scas
add
sub
and
das
mov
xor
in
iret
outsb
or
mov
mov
fsubr
pop
fldl
inc
nop
jno
or
jecxz
sti
mov
filds
fs
xor
dec
push
mov
mov
mov
xchg
subb
int3
mov
addb
jmp
inc
jne
jp
out
pop
add
sub
sbb
cld
mov
mulb
and
jb
jno
clc
push
mov
mov
cmc
and
add
test
clc
enter
add
pop
idiv
aaa
pop
vunpckhps
fdivrl
ss
sub
inc
push
es
insl
dec
loop
js
adc
test
mov
jge
sbb
mov
jae
jbe
arpl
pop
xchg
mov
pop
xor
outsb
pop
sbb
or
lea
xchg
add
cmp
jle
aaa
pusha
jp
rcll
je
aaa
dec
cwtl
mov
mov
pop
cmp
xor
or
add
and
jnp
adc
cs
icebp
clc
lods
shl
sbb
in
or
mov
xchg
addr16
sub
sbbl
dec
or
out
pop
add
lret
dec
sub
or
out
fdivp
in
xchg
or
int3
mov
out
xchg
stc
inc
adc
sbb
push
add
xchg
adc
imul
sub
std
enter
push
add
mov
push
das
mov
mov
aas
add
pop
sub
mov
cmc
test
mov
imul
adc
pop
cmpsl
pop
jl
lea
sbb
out
shlb
inc
lret
cmc
sub
scas
pop
faddl
gs
dec
cmp
lahf
rolb
xchg
sbb
cmp
xor
xchg
ja
add
mov
movsb
mov
clc
fistpl
add
out
pop
nop
fisubs
enter
idiv
and
sarl
imul
leave
ja
dec
push
cmp
jne
test
fstpt
cmp
loop
aad
ja
cmp
fs
mov
stos
in
inc
jbe
sub
add
js
pop
ja
in
addr16
cmpsb
scas
repnz
stc
cmp
mov
ret
add
mov
push
or
and
jp
dec
les
mov
cmpsb
mov
daa
les
lock
jno
push
dec
inc
ds
mov
cmp
jo
inc
add
in
outsl
pop
mov
push
push
inc
add
pop
movsb
mov
jo
sbb
sub
pushl
cmp
and
push
call
loopne
mov
adc
out
outsb
icebp
mov
mov
out
mov
adc
outsl
mov
mov
dec
jp
push
icebp
mov
jmp
inc
cmp
add
les
lahf
inc
push
ja
or
mov
popf
push
mov
adc
outsb
outsb
mov
mov
xchg
cmp
inc
popa
push
das
leave
mov
xchg
mov
mov
mov
dec
lock
dec
or
mov
icebp
stc
jne
cmp
mov
mov
outsl
outsb
test
scas
sbb
sub
adc
gs
out
sarl
and
mov
adc
add
mov
out
sub
sub
pop
push
pop
leave
jecxz
xor
rcl
je
mov
mov
xchg
mov
pop
lcallw
add
xchg
cli
mov
sub
pop
aas
icebp
and
stos
mov
sbb
xchg
addl
mov
fdivrl
jge
mov
cmpsb
mov
in
add
cmp
pop
sbb
push
push
imul
mov
hlt
dec
mov
out
stos
mov
cmp
fwait
sub
pop
xchg
pop
push
xor
stos
xor
xchg
mov
or
aaa
mov
pop
movsl
stc
lock
pop
xchg
stos
xchg
in
sahf
test
and
clc
mov
data16
in
out
hlt
mov
popf
cs
cld
sub
aaa
outsb
xor
mov
dec
mov
in
mov
lcall
mov
cmp
pop
pop
push
mov
add
mov
inc
push
or
cmp
cmp
and
or
enter
inc
and
icebp
ret
xor
hlt
sub
or
sbbb
pop
nop
lods
int3
add
aaa
add
aas
push
sbb
clc
or
adc
in
xchg
hlt
mov
push
shlb
pop
mov
adc
cmpsb
test
sbb
pop
inc
add
rcrl
adc
popf
xchg
icebp
jmp
in
int
repz
add
nop
jmp
mull
in
leave
scas
mov
xor
cmp
dec
cmpsb
and
mov
aam
bound
repnz
and
lock
push
mov
subl
out
sbb
push
jnp
fs
xchg
push
mov
mov
out
mov
stos
scas
aaa
in
adc
dec
and
inc
adc
addr16
repz
icebp
and
lret
cmp
mov
das
mov
xor
jae
test
sbb
dec
lods
dec
cmp
xor
mov
js
ja
dec
mov
test
mov
mov
mov
xchg
cmpb
shll
cmp
out
insl
push
aad
or
sub
xor
sbb
ret
mov
sbb
mov
scas
mov
jle
out
jno
jne
into
fimuls
std
add
in
mov
inc
cld
lahf
xchg
xchg
cmpsb
aam
in
push
insb
xor
lret
aaa
mov
or
cmp
cld
pop
lahf
mov
fcompl
mov
out
stos
sbb
lcall
mov
jo
outsl
in
pop
cmp
mov
push
outsb
enter
jb
xor
mov
clc
ret
ljmp
or
punpckhwd
icebp
cwtl
nop
ret
push
subb
ret
in
mov
daa
adc
icebp
lret
rorb
fsubp
xor
cltd
xchg
xchg
mov
in
fiadds
cmp
add
pop
jo
test
ret
stos
movsl
pop
xchg
cmp
push
out
sub
fs
xlat
es
fists
fbld
out
ret
push
cmp
iret
insb
in
mov
jmp
mov
jb
stc
sbb
cmp
inc
adc
or
cmp
shl
cmp
mov
cwtl
or
mov
cs
add
jns
stos
int
xorl
lods
lea
dec
les
in
jo
sub
jno
xor
shl
outsb
push
dec
adc
adc
sub
mov
push
xor
xchg
fadds
or
mov
cmpsb
sbb
xchg
repz
test
notl
mov
aam
push
xor
mov
inc
inc
push
push
in
dec
test
add
rcll
xchg
iret
call
pusha
mov
imul
add
xchg
push
nop
cli
dec
xchg
sbb
mov
mov
fsubrs
and
mov
push
xchg
mov
scas
and
dec
leave
lret
pop
jo
loop
jo
lret
and
fisubs
jle
in
in
jae
out
int3
les
sub
test
cmp
push
sbb
mov
lret
out
cmpsl
jmp
into
push
inc
mul
mov
xchg
fcomps
hlt
mov
push
test
test
fcomps
sbb
rcrb
shrl
mov
out
std
jnp
and
cmp
cwtl
add
fimuls
sbb
push
mov
call
push
dec
add
push
sbb
orl
bound
pushf
xor
cmp
popf
aad
imul
insl
std
mov
sbb
xor
out
cmpsb
push
inc
push
mov
out
jae
dec
mov
jns
add
std
mov
aam
rolb
cwtl
stc
sbb
lahf
dec
sub
fildl
xor
push
fs
cmc
rclb
ss
push
jle
lea
sarb
xchg
xchg
aaa
mov
out
add
insl
cmc
enter
stos
pop
nop
fisubrl
cmp
dec
shrb
mov
mov
rcrb
jp
leave
lock
loop
pop
fsubrl
xchg
mov
lock
arpl
xchg
sbb
movsb
mov
or
in
ja
inc
sub
test
pop
cmp
push
or
aas
enter
arpl
mov
push
repz
add
jmp
movsl
add
ss
push
mov
aaa
jns
cwtl
out
loopne
movsb
out
lds
adc
pop
sbb
test
lret
sbbb
outsb
loopne
shrb
sar
add
and
std
sbb
loopne
rcll
lods
jle
popa
xor
inc
xlat
xchg
inc
pop
push
shll
pop
stc
stos
jbe
jg
aam
mull
xchg
mov
mov
or
pushf
mov
test
daa
xor
or
push
hlt
push
cltd
pop
sahf
xor
add
repnz
clc
and
mov
xchg
and
push
aam
adc
repz
fs
add
mov
push
repnz
xor
sub
ss
mov
nop
lcall
rcrl
mov
adc
insb
jae
aaa
and
sub
sbb
mov
cmp
xchg
stos
mov
and
shl
mov
cwtl
mov
cs
push
cmc
mov
add
dec
dec
jne
push
mov
bound
mov
fldenv
jge
sti
adc
movsl
or
xchg
lds
cmpsb
mov
adc
xchg
jle
rcr
cmp
movsb
mov
jbe
mov
ja
dec
push
fwait
mov
subl
lods
mov
shr
push
les
mov
sbb
adc
inc
jge
subl
mov
mov
andb
add
mov
gs
jbe
mov
push
pop
dec
xchg
and
adc
mov
mov
jecxz
cmp
adc
sahf
or
mov
sub
push
xchg
sbb
inc
repz
stos
mov
and
and
jmp
js
dec
roll
and
jb
scas
jae
xchg
adc
pop
in
xchg
clc
cmpsl
aad
add
mov
mov
outsb
aaa
sub
fisttps
mov
out
inc
xchg
pushf
outsl
fistpl
mov
loope
pop
movsl
cld
inc
fsubr
inc
sub
es
or
mov
sub
cmp
stc
jbe
add
int3
call
sub
dec
ret
imul
fs
stc
outsl
add
add
mov
fisubrs
jne
sbb
add
cwtl
jp
jge
sbb
lock
fiadds
ds
dec
mov
andb
mov
ret
cmp
imul
fcom
push
test
scas
sub
sub
in
mov
setae
in
xchg
or
jnp
stos
insb
scas
aas
dec
adc
jno
mov
and
inc
out
mov
shr
xor
mov
sbb
mov
mov
loopne
aaa
mov
iret
and
and
imul
sti
pop
lahf
add
inc
mov
push
sbb
fisttps
cltd
rcrb
sub
ljmp
sbb
stc
lahf
cs
and
ljmp
push
mov
xchg
ljmp
lret
pop
mov
mov
jp
add
mov
test
cld
testl
loopne
or
dec
sub
cmp
icebp
mov
inc
mov
pop
mov
dec
je
mov
push
testb
ljmp
dec
mov
jecxz
sub
divl
mov
jne
add
xchg
in
shl
mov
les
neg
and
shrb
addr16
fimull
xorb
xchg
jno
mov
xchg
pop
mov
in
test
imul
mov
das
rcrb
xlat
or
mov
lret
jae
or
add
cld
jb
dec
int3
fidivl
adc
jne
adc
sarl
sub
cld
movsl
add
or
call
andl
and
or
ret
outsl
popl
dec
push
test
out
faddl
sbb
pop
sub
sbb
jne
outsb
push
jo
dec
test
mov
rorl
xor
fmuls
mov
in
orl
mov
sbb
pop
call
data16
lret
jge
mov
xor
dec
dec
dec
or
pop
fsubs
scas
test
fwait
lea
leave
stos
adc
sbb
dec
adc
iret
pop
adc
and
mov
pop
push
push
mov
lcall
stc
mov
roll
dec
sti
int3
movsb
sub
mov
loopne
pop
jp
lods
mov
test
repnz
xor
insb
push
adc
ficoml
cmpsb
mov
out
push
fwait
pusha
repnz
push
repz
mov
adc
mov
cmp
inc
aas
in
lods
or
xchg
jnp
push
je
add
stc
in
pop
push
jg
mov
cmp
jg
pop
mov
cmpb
daa
mov
hlt
stc
push
fnstcw
jb
and
jno
lods
rcll
mov
cmp
jnp
jns
dec
pop
or
mov
sti
repnz
mov
xchg
imul
imul
iret
ljmp
inc
or
pop
sbb
gs
into
int
iret
inc
js
xchg
pusha
lods
es
sbb
xchg
pop
cli
lcall
cmp
stc
jns
std
mov
pop
fstpl
pop
or
pushf
addps
dec
scas
adc
repz
movsb
mov
out
push
dec
fsubl
mov
adc
inc
lret
icebp
or
adc
push
and
mov
or
sbb
mov
fcomp
je
insl
xchg
jb
outsl
or
int3
sbb
sti
sbb
pop
out
or
pop
jl
mov
push
cs
mov
push
cld
call
jmp
lods
inc
push
loop
jl
xchg
mov
and
cld
and
pop
mov
icebp
lret
xor
lds
xchg
test
in
sub
jp
insl
jb
imul
mov
out
and
adc
mov
pop
push
cs
cmp
in
aam
inc
jno
mov
outsb
int
pop
fcmovbe
inc
in
pop
push
jge
mov
movsb
xchg
and
jge
cld
mov
or
cwtl
gs
mov
sub
fdivrs
xchg
dec
xchg
cmpsl
int3
or
in
cmpsl
insb
out
mov
sti
xchg
popa
rorl
pop
cmpsl
or
sbb
nop
push
dec
mov
xor
or
inc
fisubrl
lods
decl
lcall
push
paddd
orb
icebp
movsb
in
push
movsb
push
outsl
sahf
cmp
nop
inc
inc
popf
sub
cmpsb
scas
test
shlb
ds
dec
aam
into
shll
fld
pop
jns
pop
xchg
pop
dec
adc
or
add
std
jb
mov
xchg
pusha
mov
fildll
push
mov
cmp
or
and
fnstcw
ljmp
cmc
in
mov
lock
jno
addr16
fnstcw
mov
inc
aad
stos
jns
addb
shrl
inc
dec
mov
mov
repz
add
sahf
pusha
add
stos
dec
add
jecxz
loopne
pop
adc
inc
or
dec
adcl
push
out
notl
imul
add
clc
jbe
imul
pop
mov
js
jg
push
mov
sub
orb
scas
test
in
dec
xor
movb
es
mov
sbb
lret
loop
test
scas
out
push
dec
vcmpsd
imul
loop
or
or
xlat
and
mov
sub
imul
dec
out
sub
popa
ds
clc
clc
push
sub
in
out
fiaddl
xchg
xchg
xor
add
jne
push
stos
or
imul
lods
xchg
jbe
bound
jmp
das
rcrb
fwait
ja
mov
data16
repnz
mov
mov
lock
fwait
mov
mov
popa
add
int3
int3
shl
xlat
push
xchg
aas
gs
pop
outsl
add
mov
in
xor
jmp
popf
mov
insb
das
jnp
jmp
test
outsb
adc
sbb
mov
or
ret
jecxz
mov
jne
outsl
sarb
jns
cmp
mov
lock
jbe
push
and
cmp
and
sbb
inc
inc
call
jle
sbb
mov
push
xor
mov
data16
lcall
mov
xor
lahf
mov
cwtl
aaa
outsb
cmc
addr16
in
adc
and
das
mov
add
add
xor
xchg
push
mov
pop
push
ss
scas
inc
dec
lea
shrb
cmp
sbb
inc
cmp
cmp
popa
xchg
push
xchg
jl
mov
mov
jo
or
push
mov
and
mov
push
lret
cmp
inc
orb
or
testl
iret
xlat
outsb
mov
push
popa
xchg
adc
push
and
push
or
js
xchg
mov
inc
cmpsb
pop
mov
mov
std
in
lods
pop
pop
shl
mov
insl
inc
pop
cs
leave
add
loop
jp
mov
push
mov
pop
fcmovb
mov
out
in
inc
xchg
xor
test
dec
cmp
inc
in
jg
rcrb
test
hlt
into
aam
cld
cwtl
pop
fmuls
mov
add
xchg
gs
shll
loop
cmp
movsl
in
jno
cmpsl
xor
repnz
fisubrl
push
dec
dec
add
sarb
push
mov
ret
out
sar
stos
xchg
inc
sbb
imul
pusha
into
mov
pushf
and
leave
gs
lcall
sarb
pop
dec
dec
pop
adc
push
sub
dec
lods
shll
and
out
pop
add
push
cli
test
fistps
lock
mov
cmpsl
rcrl
mov
std
inc
jae
sub
mov
cmp
jb
xor
and
xor
inc
jge
jno
bound
fsubl
push
mov
sub
jne
insb
jmp
or
fnstcw
xor
lods
pop
sub
lea
dec
push
jp
jecxz
mov
or
pop
testb
test
aaa
test
js
or
push
out
xor
out
jle
fwait
adc
cmpsl
data16
cmp
in
mov
iret
cmpsb
sub
leave
xor
sub
dec
fcomp
pop
sub
cs
scas
and
ljmp
xchg
shl
cwtl
dec
cmovns
mov
inc
popa
or
int
test
jmp
xchg
insl
leave
shrl
or
mov
mov
mov
cwtl
or
in
xchg
jne
sti
andl
arpl
lods
dec
jb
xor
xchg
in
pop
pop
jl
ror
pop
addl
jg
mov
mov
jecxz
dec
xchg
subb
aaa
addr16
shll
iret
sub
shll
mov
or
or
rcr
js
push
sarl
push
or
jne
adc
int
mov
dec
sti
adc
and
fmul
fwait
fwait
or
mov
ret
adc
stos
lods
inc
xchg
mov
xlat
fs
cmp
out
xchg
aas
jp
test
xchg
push
das
push
ret
insb
dec
mov
les
and
in
xorb
cmc
adc
fs
sub
mov
jo
mov
sbb
cli
inc
aaa
pop
js
scas
sub
add
aaa
mov
loope
sub
push
test
js
aas
push
add
xor
icebp
mov
inc
idivb
adc
sub
and
cmc
ja
xchg
dec
xchg
daa
stos
pop
add
cmpsl
icebp
and
addl
fisttpll
cmp
insl
sub
push
push
mov
loopne
stos
arpl
push
je
lock
jnp
jb
aas
add
out
mov
xor
push
test
aam
aad
in
lahf
stos
push
movsl
mov
lret
sub
pop
or
stos
jo
sbb
fcoml
dec
dec
mov
mov
mov
pusha
or
fiaddl
pop
rolb
and
fdivs
popa
iret
daa
insb
loop
adc
push
arpl
xorl
jo
mov
sbb
leave
sub
dec
mov
aam
jl
push
lahf
fs
sbb
fcomps
jmp
in
lret
adc
inc
mov
fdivrl
bound
xorb
sub
mov
mov
pop
mov
xor
mov
out
push
jmp
mov
xchg
jge
dec
inc
addr16
ficomps
fdivp
fwait
ja
jbe
inc
push
mov
xchg
jmp
or
inc
add
cmp
sub
mov
test
add
xchg
aaa
and
jae
cli
mov
shll
xor
in
jp
fbstp
aam
ja
stos
pop
stos
je
push
popa
xor
jb
push
cmpsl
icebp
sub
mov
lcall
mov
add
dec
pop
loopne,pt
xchg
mov
inc
sub
jp
pop
add
add
shrb
mov
cmpsl
pop
sub
sbb
inc
inc
xor
xchg
or
das
imul
mov
lock
pusha
inc
and
rcr
pop
dec
sbb
sbb
outsb
lcall
sub
pop
mov
inc
das
xchg
sbb
subb
insl
hlt
mov
and
add
mov
fwait
shlb
inc
pop
int3
out
daa
outsl
aas
ret
cmpb
sub
xchg
or
sbbb
cs
dec
cmpsb
aad
xorl
pusha
lret
mov
pushf
cld
cmp
ljmp
sbb
and
cmp
test
or
subb
or
lock
push
mov
movsl
push
les
in
into
ds
aaa
inc
adc
adc
add
push
test
jecxz
cmp
xor
fldenv
xor
ss
mov
mov
jns
cmp
xor
pop
repz
mov
lods
les
test
daa
lds
dec
aaa
jecxz
xor
jge
call
adc
fs
fwait
in
test
xchg
les
push
mov
or
ja
mov
pop
dec
sahf
push
push
inc
push
mov
pop
cmpsl
fstpl
orb
and
clc
mov
lcall
mov
sbb
mov
iret
sahf
adc
and
or
clc
push
add
push
pop
dec
mov
fistps
rclb
test
gs
mov
aaa
add
mov
xor
inc
mov
cmp
dec
or
mov
jo
mov
mov
mov
je
cmp
or
sub
fstp
push
popf
adc
mov
push
push
addr16
push
es
in
lahf
push
push
rcrl
pop
and
outsb
xor
and
cltd
clc
cli
in
popf
lea
xchg
popa
mov
pop
mov
test
icebp
inc
sarb
jp
ret
sub
out
data16
rorb
cltd
or
repz
ficoms
xchg
pop
and
fstps
movsl
lret
xchg
in
xadd
repnz
insl
jo
xchg
out
jp
mov
iret
xor
push
xchg
pop
mov
bnd
mov
cwtl
loope
sub
testl
pop
inc
push
in
mov
add
push
push
and
jmp
mov
dec
mov
xchg
imul
inc
pop
xor
nop
jne
inc
rcrl
add
pop
hlt
icebp
or
xchg
push
das
pop
mov
lock
xor
cs
in
bound
test
pop
rcll
scas
add
jne,pt
div
sub
sbb
jle
add
loopne
push
sbb
shll
fbstp
pop
cld
xchg
add
xor
xchg
or
nop
ficoml
das
adc
lock
cltd
imul
dec
xchg
pop
fildl
pop
and
mov
negl
xor
jl
and
cmp
les
sbb
fcoms
rcl
imul
mov
xchg
js
xor
pop
out
pop
xor
push
dec
mov
in
cmp
shlb
loope
xchg
push
sahf
pop
dec
pop
mov
in
scas
fs
sti
mov
and
dec
cmp
xlat
jo,pn
testl
mov
or
pop
movsb
shl
aaa
push
mov
jle
das
or
ja
push
push
in
movsb
sbb
lea
ja
pop
jne
mov
jb
iret
push
inc
sbbl
std
push
push
sbb
pop
pop
jne
or
push
xor
insb
lret
and
je
stos
sahf
data16
testl
rorb
inc
cli
jnp
sub
pop
loopne
dec
adc
sahf
hlt
lahf
dec
inc
mov
xchg
clc
in
jbe
aaa
ss
fmulp
add
xchg
xchg
outsl
jae
lret
mov
ljmp
notb
xchg
movsl
jno
sahf
repnz
fs
push
or
push
push
cltd
xchg
sti
leave
scas
sub
add
mov
or
add
lds
pusha
pop
std
jne
jp
sub
repz
ja
cmp
pusha
clc
add
test
mov
ret
add
popa
jg
adc
dec
rcr
mov
jbe
cmp
sub
xchg
shll
adc
leave
cmp
fists
sbb
popa
sub
orl
int3
sbb
movsb
push
scas
clc
inc
inc
mov
push
inc
push
nop
xchg
lods
mov
adc
in
sarl
xor
fidivrs
pop
lods
in
test
lock
and
adc
or
ja
and
jbe
sub
jne
icebp
daa
push
inc
xor
fsts
add
pushf
cmp
add
push
or
mov
rcrl
adc
add
push
test
lret
and
dec
push
mov
mov
pop
lds
jl
sbb
lahf
imul
aam
push
pushf
cmp
inc
je
icebp
es
mov
jbe
fdivrs
and
stos
pushf
daa
cmpsb
lods
xor
test
inc
lock
pop
jp
out
sti
sbb
sbbb
jmp
pop
dec
pop
cmp
in
aad
fwait
push
and
cmp
pusha
fwait
jp
leave
and
into
xchg
jne
inc
sub
jnp
mov
aam
jae
mov
add
fistpll
add
mov
mov
out
loope
rol
out
jmp
mov
pop
dec
or
push
cmp
movsl
adc
xchg
pop
adc
notl
das
push
mov
jb
out
sbbl
sahf
fstps
mov
test
xor
fidivrl
arpl
or
xchg
cmp
call
sub
xchg
xor
sbb
jo
push
inc
mov
int3
or
mov
dec
or
jge
clc
pop
and
ret
imul
dec
pop
sahf
mov
mov
lret
xlat
jns
add
loopne
sbb
rcl
push
or
xchg
dec
xchg
stos
testb
in
fld
ds
mov
test
dec
lcall
lods
sub
sub
mov
fbstp
outsl
inc
iret
cmp
cltd
jecxz
cmp
adc
sbb
pop
cmp
pop
xchg
mov
jmp
movsb
adc
rol
push
std
mov
sbbb
adc
enter
cltd
sub
inc
add
rcll
dec
mov
jg
int3
leave
sbb
jmp
pop
cmp
ljmp
push
and
pop
jb
mov
cli
int
push
or
mov
pop
pop
mov
lock
scas
adc
adc
mov
icebp
cwtl
add
fsubl
xlat
mov
or
loope
stc
in
shlb
ja
gs
dec
cmc
mov
mov
sbb
fst
or
push
pop
imul
cmp
aas
daa
sbb
and
pop
roll
mov
jecxz
mov
aas
xlat
in
in
dec
xchg
adc
aaa
fs
push
add
pop
cmp
jmp
mov
imul
shll
push
test
jb
mov
rolb
ja
cmp
outsl
xchg
jbe
lods
jnp
mul
mov
dec
out
adc
sub
xor
js
addr16
xchg
mov
fidivrs
out
cld
insl
mov
shrl
xchg
stc
stos
mov
xchg
or
and
outsl
je
jae
pop
pop
or
mov
inc
cmp
adc
leave
int
dec
and
lea
out
dec
inc
push
dec
sbb
notl
aam
xchg
in
insb
int
mov
call
mov
add
xchg
push
sub
pusha
popa
xchg
popa
and
pop
dec
aaa
jo
sub
repnz
xorl
sbb
and
lret
mov
add
mov
cmp
in
xchg
pop
sub
pop
outsb
imul
jb
xchg
imul
out
mov
sbb
cmp
cmp
mov
leave
test
push
sub
push
dec
scas
push
push
pop
xchg
cld
lret
inc
scas
shrl
fisubl
dec
lods
fiaddl
faddp
xor
jnp
xchg
cmpsb
and
movswl
pop
std
cltd
xor
cmpsl
sbb
sub
repnz
in
je
in
ljmp
cld
push
stos
dec
inc
mov
sbb
ret
and
loopne
js
jecxz
pop
adc
daa
cld
fisubs
call
ljmp
movsb
mov
ljmp
lds
xor
aad
sub
dec
xchg
sub
fwait
and
cmpsl
repnz
jmp
jbe
cs
fistl
jae
mov
inc
or
inc
fs
and
inc
jecxz
and
pop
loope
xchg
dec
out
ficoml
push
push
int
sbb
jl
fsubr
xor
shrl
cld
pusha
aas
std
inc
cmpsl
ljmp
dec
add
mov
lcall
xchg
mov
ficoms
or
jnp
leave
xchg
inc
push
jnp
inc
lea
sub
cmc
cmp
in
or
nop
adc
subb
xchg
imul
hlt
dec
out
push
fs
leave
mov
xor
pop
inc
lock
sub
jb
mov
arpl
jmp
mov
outsb
xchg
popa
push
sbb
cmpsb
mov
mov
mov
sub
roll
mov
cwtl
je
xor
stc
fistps
pop
scas
add
hlt
pop
stc
xchg
xlat
pop
daa
mov
addl
pop
out
pop
shrb
xor
idivb
lcall
jg
adcl
jnp
adcb
sub
add
jmp
and
or
or
popa
xchg
mov
jne
outsb
fbstp
hlt
pop
add
out
and
ss
insb
add
enter
push
lods
pop
ret
aam
cmpsb
xor
int3
lcall
stos
jecxz
daa
mov
cltd
add
into
and
mov
push
mov
push
out
popa
daa
mov
sbb
imul
ret
fucomi
mov
mov
sbbl
fistl
inc
xchg
push
add
enter
lcall
mov
ja
xchg
mov
pop
leave
jo
sbb
aam
mov
cmpsb
insl
fcomp
cmp
push
inc
jecxz
dec
out
in
nop
pop
jg
or
insl
subl
cltd
mov
in
out
mul
shll
fistpl
mov
pop
inc
icebp
cmp
test
xchg
mov
jne
fstpl
xchg
sbb
inc
mov
cmp
mov
les
sbb
xchg
mov
inc
jno
mov
mov
movsl
rcr
mov
ret
adc
cmp
movsb
add
out
push
ret
call
sti
jns
je
mov
je
gs
cltd
test
out
xor
inc
fisttps
inc
and
mov
das
sbb
in
sar
sbb
out
scas
xchg
sub
std
loop
out
cs
enter
add
mov
adcl
jns
cmp
cwtl
sarl
icebp
aaa
dec
and
mov
loopne
sahf
test
xor
int
nop
mov
cmp
lea
aam
lahf
pushf
or
pop
mov
stos
enter
sahf
mov
cmpsb
lret
call
pop
movsl
rorb
enter
out
fmull
dec
mov
in
lods
cmp
int3
pushf
jp
cs
pusha
inc
add
fcom
sbb
hlt
pop
cli
xor
push
std
adc
fdiv
pop
push
inc
fs
mov
scas
jo
jbe
add
jnp
mov
sub
ret
into
dec
insl
shrb
fneni(8087
add
rcll
mov
fldt
xlat
or
daa
shrl
jl
mov
adcb
dec
pop
sbb
jbe
push
repnz
lock
push
cld
iret
add
jp
aad
xchg
movsl
ret
sub
fldcw
xor
mov
popf
mov
or
aad
pusha
ja
xchg
in
or
andl
mov
sub
lods
jle
fists
push
cld
orl
into
cmp
jmp
push
inc
hlt
out
sbb
adc
leave
mov
test
add
push
cli
sbb
test
dec
and
leave
stc
sbb
mov
xor
cmpsl
out
inc
rcrl
jno
stc
cs
add
hlt
mov
ss
sarb
pop
mov
push
daa
pop
notl
mov
jl
out
enter
jge
movsb
push
stos
pop
cmp
lock
add
inc
mov
inc
repz
dec
sub
mov
adc
sub
fs
mov
push
outsb
sbb
dec
inc
mov
movsl
es
sub
int3
data16
inc
in
aas
and
cs
fcmove
sub
clc
inc
stc
add
jmp
mov
jnp
mov
and
dec
fs
imul
sti
int
flds
clc
imul
inc
out
movsb
sbb
jp
shrb
insb
leave
sub
sti
dec
inc
stos
mov
push
mov
jne
aad
adc
mull
test
mov
jp
xchg
imulb
mov
mov
lock
xchg
dec
call
lods
add
sub
mov
xor
or
dec
pushf
int3
or
pusha
pop
add
in
push
jp
inc
adc
mov
daa
mov
icebp
xchg
jo
jbe
mov
push
negb
or
pop
inc
add
mov
add
icebp
jle
repnz
dec
fdivs
insb
and
or
fdivrs
loopne
mov
test
fdivr
daa
and
mov
adc
mov
lods
test
mov
or
push
inc
xor
dec
add
loopne
push
xchg
mov
xor
lock
mov
jne
or
or
aam
jnp
mov
sub
push
cmp
bound
push
inc
pusha
jbe
inc
popa
mov
cltd
pusha
negl
mov
pop
adcb
dec
inc
pop
fstps
cmp
push
mov
cmpsl
sbb
nop
neg
iret
movsl
dec
incl
cltd
out
jecxz
xor
pop
sub
jnp
subb
ret
pushf
out
ret
fdivrl
pop
sub
lds
mov
aaa
sub
out
sub
popf
cltd
xchg
popa
push
in
ds
cld
jp
jp
xchg
cmpsb
iret
xchg
add
icebp
mov
xchg
add
xchg
jmp
mov
adc
pop
scas
add
pusha
push
aas
adc
sbb
sbb
insb
adc
push
mov
cmpsb
rcr
mov
jg
add
out
hlt
stos
es
push
outsl
sbb
std
in
xor
cmp
test
inc
sub
push
mov
jle
fucomi
xchg
pop
dec
loop
insl
popa
and
lret
xor
dec
nop
pop
jge
lods
cld
lret
xor
jb
cli
sti
inc
fstp
sub
jg
sbb
push
repnz
xor
dec
subl
sahf
jle
adc
hlt
mov
ret
js
leave
cld
inc
cmp
ficoml
sub
fsts
push
mov
popf
fsubl
xor
mov
lret
ljmp
jge
ja
popf
and
es
cli
sub
jmp
lods
sbb
loop
push
inc
push
sti
cmpsb
add
ficoml
sub
sti
mov
adc
incb
jb
orb
rcrl
dec
pop
xchg
ret
ret
adc
pop
dec
xchg
notl
in
inc
int3
iret
inc
mov
negl
leave
std
push
jae
pop
loop
out
xchg
mov
push
pushf
rorl
push
jbe
push
cmp
cmpsb
jge
sahf
fisubs
sbb
push
mov
jp
sub
dec
xchg
dec
test
sbbb
lods
pop
lahf
or
cltd
in
and
ss
fsubs
lds
mov
mov
test
lahf
lds
and
cltd
mov
and
pop
mov
addps
std
fs
lcall
xor
push
stos
cli
push
and
repnz
rclb
push
dec
jne
fisttpll
imul
mov
pusha
and
cmp
rcl
out
mov
pop
or
iret
xchg
fisubl
notl
push
sbb
in
sub
xor
test
adc
inc
dec
cwtl
pop
popa
enter
add
adc
and
fstpt
rcrb
mov
jecxz
mov
iret
fistpl
dec
jns
mov
lock
xorl
nop
inc
les
or
movsb
mov
mov
xchg
cwtl
rcll
pop
jge
push
ret
ret
lods
mov
lods
testl
push
imul
mov
mov
cmc
aad
repz
outsb
cmp
shll
push
out
jg
mov
add
mov
sub
adc
ds
daa
mov
bound
aaa
fisubrs
loope
insb
cmp
xchg
aad
dec
int3
mov
dec
pop
dec
mov
mov
aad
sub
fsts
sub
iret
or
add
fdivrs
xor
stos
dec
int
push
or
cmp
fnstsw
cmp
inc
jl
mov
test
jecxz
leave
into
popf
in
push
or
pcmpgtd
cmp
adc
sub
clc
fdivs
adc
mov
add
fsubrl
push
or
or
pop
jae
inc
movsl
mov
pop
dec
jo
call
push
lea
bound
add
adcl
sub
dec
jmp
push
mov
xchg
fsubrp
lcall
push
outsl
jno
jp
lods
xchg
ja
testl
loopne
or
mov
inc
idiv
lret
pop
dec
nop
xchg
cmp
and
lods
shrb
xchg
fincstp
stc
pop
pop
xchg
fidivs
jp
xchg
sub
cmpl
sarl
adc
xlat
jge
cmpb
std
mov
mov
push
lock
sub
loopne
mov
xor
sbb
mov
and
mov
in
cli
jl
mov
and
pusha
popf
cmpsl
testb
lods
mov
inc
sub
lahf
inc
pop
push
outsb
xchg
add
mov
xchg
pop
insb
mov
hlt
xchg
cli
jbe
jo
neg
sub
sub
inc
pop
mov
add
loop
and
sub
jne
xchg
and
cmc
mov
lods
xor
pop
scas
add
xorl
mov
xchg
mov
jl
and
lret
xchg
mov
push
jge,pt
fisubl
mov
imul
push
btc
imul
adc
jb
xchg
movl
popl
cmpsl
mov
stos
roll
aas
jp
sarb
inc
sbb
shl
pop
repz
mov
xchg
nop
out
dec
adc
dec
xor
mov
mov
push
test
es
push
sbb
mov
loope
xchg
dec
loop
dec
je
sarl
adc
inc
push
push
scas
pop
xchg
or
cs
sbbl
iret
cli
loopne
mov
or
mov
cmp
sbb
shrl
add
call
movsb
fldl
pop
lahf
negb
sub
clc
jns
aad
jbe
popl
les
mov
jo
scas
jb
test
dec
mov
sub
popf
push
mov
cld
mov
add
lods
fisubs
mov
jmp
ss
cli
mov
push
push
cmp
or
fisttpll
or
stc
dec
jge
or
sbb
aaa
xchg
push
movsb
mov
popf
mov
xlat
aam
add
lock
pop
and
sbb
push
or
imul
pop
push
jno
mov
jp
adc
jg
out
movsb
data16
pop
mov
popa
cmp
adc
jnp
out
push
test
pop
ja
inc
sbb
lock
lcall
mov
dec
cmp
mov
xor
jmp
in
or
pop
mov
mov
gs
stos
fsub
and
mov
mov
cli
cmpsl
dec
mov
fs
jne
mov
out
or
cmc
pop
pop
xchg
sub
or
lcall
mov
inc
mov
mov
clc
stos
andb
iret
dec
arpl
jns
sub
xchg
in
inc
sub
inc
inc
and
mov
cwtl
fs
js
or
lock
sub
imul
adc
xchg
or
test
fcmovu
jb
jmp
sub
subl
ljmp
jns
es
mov
dec
or
jbe
inc
js
scas
pop
or
faddl
rcr
mov
enter
mov
into
mov
push
arpl
or
aad
dec
pusha
sbb
mov
iret
push
lret
js
aad
mov
inc
dec
aad
cltd
cmpsb
fcomps
xor
hlt
cmpsl
popa
or
add
out
scas
push
and
imul
stos
push
fdivrp
ds
mov
xchg
and
push
dec
dec
push
mov
jge
fiadds
xchg
xchg
ds
push
cwtl
sub
popl
mov
or
sbb
mov
lret
lods
adc
test
das
push
lods
aam
cmp
rclb
inc
inc
loopne
inc
sbb
add
aad
mov
jl
mov
lods
pop
enter
push
push
inc
sub
adc
inc
cli
push
fbld
or
lret
hlt
add
pop
gs
xor
pop
stc
jecxz
cmpsl
pusha
fldl
sbb
lahf
fnstcw
lods
dec
push
mov
sti
in
arpl
add
outsl
inc
pop
loop
add
jmp
jmp
in
pop
data16
aaa
std
ret
cwtl
and
xor
test
jg
xor
in
xchg
sbb
pop
xor
cmp
out
pushf
xchg
mov
push
xor
jecxz
in
std
arpl
xchg
notl
out
sub
cmc
sbb
mov
ret
ds
fs
sarl
add
and
popf
jle
das
dec
stc
mov
adc
pop
sti
in
xchg
cmc
and
xchg
add
push
aad
lahf
fisubrl
frstor
sbb
mov
js
add
mov
dec
outsb
mov
into
adc
jge
push
or
jl
sub
shl
je
pop
push
inc
adc
in
rcrb
jne
push
and
out
stos
out
and
adcb
aam
out
outsb
adc
xor
xor
jl
lret
mov
mov
lods
add
clc
pop
mov
push
inc
aad
imul
icebp
insl
add
or
aam
pop
divl
jns
mov
sahf
pop
or
pop
jns
pop
pop
stc
out
testb
scas
sbb
xchg
ficoms
xchg
mov
lahf
xchg
icebp
stos
out
pop
mov
loopne
push
mov
std
andl
cmp
lods
loop
fcompl
push
push
aam
mov
mov
cs
push
fiadds
sub
iret
xchg
mov
xchg
ljmp
jmp
sbb
ss
xor
ret
push
ss
or
mov
shld
mov
test
sub
rcrl
popa
xchg
daa
mov
cmpsb
outsb
push
cwtl
sub
xchg
out
pop
inc
test
insb
pop
fisubs
ja
lahf
mov
adc
in
and
enter
or
add
and
mov
imul
inc
enter
test
test
into
push
nop
stos
adc
xchg
push
xor
call
lret
pop
shrd
insb
sahf
ret
fisubrs
xchg
faddl
jl
aam
sub
dec
jbe
inc
mov
push
int3
push
dec
add
arpl
and
jo
xchg
rorb
jmp
jge
mov
inc
mov
pusha
cwtl
or
fsubrl
push
cmpsl
pop
sbb
fistpl
dec
outsl
push
shrl
aas
out
and
jle
sub
mov
mov
shrb
lcall
sub
stos
push
sub
fadd
fsubrs
and
inc
loope
mov
jl
sbbb
mov
or
push
xchg
mov
jecxz
jle
lods
jb
dec
out
or
sbb
es
xchg
rcrb
sbb
fsubrl
es
pop
and
add
pop
xchg
data16
adc
int3
sahf
lods
xor
decl
leave
fstl
add
push
or
mov
lret
cmp
and
add
inc
nop
imul
out
xchg
dec
sbb
divb
popa
mov
int
aaa
adc
xchg
loop
pop
xchg
sahf
xchg
inc
repz
aas
fdivrl
adc
lret
cltd
cwtl
mov
xchg
pop
fdivl
push
hlt
mov
cmp
xlat
jne
xchg
cld
std
mov
pop
mov
inc
mov
out
ja
pop
xchg
test
sub
sub
add
fwait
push
jnp
andl
in
inc
popa
hlt
xlat
xor
jle
call
push
jg
mov
lahf
es
pop
xchg
nop
sbb
in
xchg
sub
fists
push
inc
cmp
xchg
sub
adc
inc
std
mov
out
sub
es
lret
push
shll
daa
in
cltd
push
adc
in
mov
sub
ret
les
dec
out
pop
lods
push
cli
out
sbb
jbe
mov
pop
push
push
mov
ret
mov
mov
sahf
ljmp
sbb
in
mov
sub
mov
push
cli
sub
pop
pop
aas
push
push
pop
jge
arpl
pop
mov
xchg
sbb
loope
repz
pusha
adc
sbb
out
fwait
inc
dec
mov
lods
test
pop
adc
test
test
jp
add
andl
push
idiv
mov
pop
jbe
enter
hlt
rolb
pop
mov
xchg
fs
pushaw
pop
out
fs
sub
fnsave
cli
mov
pop
cmp
roll
rorl
mov
jo
push
les
out
sarb
fnstcw
lcall
mov
cli
pop
addr16
xchg
jge
sub
jb
add
pop
sahf
inc
sub
jae
cmc
xor
add
add
nop
jmp
push
or
sarl
mov
mov
std
je
imul
push
or
sub
movsl
push
and
into
mov
cmp
add
xlat
jnp
fcomps
sar
mov
sbb
xchg
pop
pop
sbb
or
dec
iret
fsub
lret
jge
push
adc
mov
dec
push
lret
adc
jmp
xor
xor
cmp
pop
jp
pop
icebp
cmp
mov
stc
fs
push
pop
scas
adc
jmp
pop
mov
stos
ret
fcoml
lret
cmp
shll
sar
repz
xor
aas
add
cmp
into
in
int
adc
and
sbb
or
pop
shlb
shll
push
add
sbb
pop
lcall
sbb
push
xchg
lds
daa
or
lock
and
jo
mov
or
pop
and
add
xor
mov
jo
aad
shrb
add
ljmp
inc
incb
dec
mov
mov
jge
sahf
xor
movsl
push
jb
lcall
mov
jge
rorl
nop
jg
mov
cs
cltd
rorl
notb
pop
fdivrs
sbb
jmp
mov
pop
pop
and
jo
mov
sbb
repz
outsl
jns
dec
xor
push
adc
cmp
push
add
leave
jae
das
shrb
shll
es
mov
dec
and
aam
mov
xchg
js
cmovae
jl
shl
fcompl
fwait
jae
or
inc
call
mov
in
xchg
sub
jnp
adc
dec
cli
arpl
in
and
sbb
test
mov
mov
pop
cld
cld
in
add
mov
mov
jmp
dec
sub
mov
enter
loopne
jg
sub
or
lds
scas
xchg
mov
cmp
aam
popa
lds
sbb
call
xor
loopne
adc
or
cmpsl
mov
jmp
orb
mov
mov
xchg
adc
loope
dec
lock
js
repz
loopne
xchg
add
lret
push
xchg
push
cmp
jno
mov
pop
mov
scas
aaa
sbb
out
add
and
test
clc
xchg
nop
sbb
or
cmp
insl
and
fisubrl
cmpl
xchg
in
adc
jp
in
adc
sub
movsl
mov
push
adc
inc
ret
int3
push
jns
mov
cmc
test
scas
inc
and
xor
add
mov
xchg
in
push
lock
fs
pop
inc
test
xor
ret
arpl
movsl
xor
push
and
pop
pusha
jbe
popa
ds
out
dec
scas
pop
add
popw
mov
scas
xor
clc
inc
loope
out
cmc
adc
cmpsl
subb
mov
popf
xchg
es
cmpsb
jbe
scas
int3
mov
mov
sbb
sbb
add
xchg
lds
jecxz
mov
call
rorl
sti
fs
cmpsl
sub
outsb
gs
mov
add
push
sbb
sub
je
or
xrelease
mov
push
sbb
xchg
fsubrs
cmp
or
jns
jle
ficoml
movsb
pusha
sbb
mov
pop
jb
out
pusha
stc
int
pop
fwait
push
push
mov
inc
aas
mov
and
daa
push
mov
mov
lods
int3
je
sahf
hlt
pop
cmp
pop
arpl
filds
rcl
xchg
fldl
rcll
xlat
movsl
test
push
xlat
sub
sub
sbb
popa
std
add
sbb
mov
mov
mov
ljmp
enter
xor
movb
sbb
out
sahf
xor
movsb
loope
bound
lret
notb
aam
sbb
stos
sbb
fcomps
subb
cwtl
cltd
in
sbb
sbb
leave
jo
sub
into
xlat
aaa
and
pop
mov
sub
rcrl
cmp
fs
cwtl
add
movsl
pop
jp
mov
or
dec
cwtl
lods
fmulp
mov
xor
pop
mov
aad
stos
aas
sbb
dec
mov
pop
scas
dec
popl
stos
mov
shl
and
jne
shll
dec
std
jecxz
aad
pop
dec
ljmp
mov
add
sarl
or
pop
imul
inc
cmp
push
inc
cltd
mov
fwait
clc
xchg
or
into
sbb
rcr
mov
push
outsl
std
idivb
push
dec
mov
jnp
les
icebp
fmull
hlt
cwtl
adc
cmpsb
sub
push
jo
orb
dec
jnp
jo
jo
or
push
daa
popf
push
jge
add
js
dec
cmp
ja
dec
xlat
add
inc
and
test
sub
pop
fmuls
ss
sbb
sbb
arpl
mov
adc
movl
jge
pop
xchg
mov
push
iret
das
into
mov
inc
popf
mov
adc
cs
pop
mov
movsb
outsl
aas
inc
mov
iret
sub
fsubr
push
test
in
mov
stos
std
out
lret
inc
data16
mov
filds
inc
sub
adc
mov
push
icebp
jmp
rcll
pop
xor
inc
daa
je
data16
add
sub
outsl
fucomip
stc
sub
sub
pop
dec
sub
push
adcb
sub
xchg
inc
in
adc
mov
push
xchg
lahf
xchg
push
pop
dec
sbb
pusha
add
sub
repnz
adc
insl
mov
sbb
sbb
fs
dec
pop
cmp
pop
xor
or
sub
jg
mov
sbb
mov
push
dec
jmp
out
inc
movsl
dec
fyl2x
pmullw
insb
sbb
sahf
xchg
xor
popl
pop
sbb
push
jno
inc
push
push
in
loop
pop
push
in
xchg
into
dec
add
or
ja
aas
mov
adc
fs
add
mov
mov
cmpl
mov
repz
pop
or
orb
push
pop
pop
adc
std
xchg
aad
inc
sbb
xor
xchg
adcl
sbbl
mov
pop
cmp
or
bound
or
pop
push
sub
push
push
mov
je
dec
hlt
call
shll
and
es
mov
xchg
push
decb
lcall
mov
out
adc
push
mov
mov
ret
cmp
mov
ss
cmp
stos
push
mov
movl
mov
out
std
push
out
or
pop
fisubrl
out
jnp
aaa
sbb
shrl
testl
adc
jecxz
sbb
pop
sbb
arpl
leave
aas
sub
popf
fwait
mov
repz
sbb
add
jnp
mov
push
pop
daa
mov
outsl
addr16
in
push
cmpsb
xchg
mov
loopne
nop
push
out
sub
es
jnp
les
repnz
pushf
in
movaps
lock
mov
jnp
js
jae
in
mov
repnz
pop
and
jae
and
pop
outsl
es
xchg
pop
jmp
xchg
fdivl
xlat
push
shl
or
shlb
out
cmpsl
cld
inc
rclb
aad
pop
lcall
sub
mov
js
xchg
inc
dec
xchg
jne
dec
mov
inc
out
cmp
and
pop
push
and
stos
mov
pusha
out
dec
xchg
add
dec
sbb
rorb
jne
mov
cmp
aaa
sbb
push
loopne
sub
clc
lods
add
and
xchg
call
mov
jl
leave
mov
dec
in
clc
or
lock
mov
clc
jae
push
lock
outsb
add
mov
rclb
xchg
dec
repnz
xor
inc
add
in
xchg
shlb
jns
and
push
fmuls
sbb
fcmovnu
test
lods
fnsave
mov
insb
adc
add
pop
inc
xchg
push
je
fwait
dec
mov
cmp
mov
cmpsl
in
cld
test
stos
add
lea
lds
in
add
fistl
data16
test
mov
cmp
pop
icebp
int
repnz
cli
cmp
pop
aad
and
gs
pop
out
loop
and
fpatan
lret
cmp
pop
out
sbb
mov
add
jg
imul
ficoms
lods
pop
push
pop
xchg
lods
push
jb
mov
cmp
push
cltd
fdivrp
jl
pop
into
pop
cld
add
xchg
push
addr16
push
push
jbe
push
test
xchg
repz
inc
stos
inc
call
adc
xchg
stos
arpl
jl
mov
or
and
adc
rolb
dec
xchg
testl
mov
sbb
cmp
pop
or
cmp
adc
push
mov
jle
xchg
lods
jno
jp
jno
or
adc
xor
mov
mov
test
cli
xor
and
and
xor
movb
mov
rolb
data16
sub
cld
dec
lret
mov
outsb
out
pop
mov
xchg
dec
mov
sub
aad
adc
and
push
xchg
aad
or
jmp
pop
leave
pop
addb
sub
fs
imul
inc
jno
sbb
dec
jg
jp
mov
in
fistpll
push
or
xor
scas
jns
xchg
sub
dec
jl
pop
xor
xor
cmc
or
mov
sbb
xor
daa
rcr
jmp
fadds
lods
inc
cltd
mov
or
cwtl
lods
xchg
push
mov
rclb
push
jle
sbb
notl
mov
jo
or
jle
inc
movsl
movsl
pop
mov
fstps
fistps
sbb
test
jae
jae
ret
mov
mov
mov
test
shlb
mov
cmp
jo
xchg
stc
cs
xchg
jp
sbb
mov
jo
xchg
jge
push
cmc
cmp
or
idivl
das
xchg
mov
inc
imul
add
inc
leave
push
adc
cltd
mov
dec
xchg
xchg
out
pop
fwait
adc
negl
aad
jg
push
clc
add
aas
cmpsl
int3
xchg
and
testl
int
adc
mov
mov
stos
adc
repz
and
jge
xchg
in
push
xchg
sbb
rorb
jp
inc
in
xchg
daa
pop
rolb
lcall
jno
shlb
push
mov
insl
stos
gs
out
dec
test
lods
ficoml
cmp
dec
imul
iret
jo
testl
movsl
es
cmp
or
fdivl
fdivr
jecxz
mov
in
push
test
scas
repnz
xor
and
and
dec
adc
aam
or
sub
adc
xrelease
adc
xchg
pop
cmp
xchg
lret
mov
dec
int
add
faddl
aaa
insb
in
mov
add
push
loope
cwtl
xlat
lea
andb
outsl
xchg
sbb
jecxz
mov
ss
scas
lret
lods
add
push
les
movsl
xchg
jecxz
in
lds
xchg
in
addr16
cmp
cmpsl
push
aam
push
movsb
cmp
fld
inc
int
push
movsb
add
in
icebp
shr
push
jno
mov
inc
roll
pop
arpl
test
ret
roll
mov
xor
in
stc
test
inc
jmp
or
push
in
add
jp
out
xchg
mov
inc
in
xor
push
je
inc
xchg
jp
fcoms
sbb
gs
cmp
sub
inc
dec
aaa
mov
adc
mov
test
in
pop
pop
arpl
cltd
mov
xor
dec
pop
in
inc
test
cli
mov
subl
shll
cli
movl
push
repz
jnp
pop
sub
fwait
scas
and
insb
in
cli
mov
imull
mov
rcl
aaa
in
divb
rorb
rolb
pop
mov
mov
dec
jb
les
imulb
jno
cmpsl
sarl
sbb
nop
rcrb
daa
les
call
in
shll
pop
pop
mov
dec
mov
out
fsubr
pop
push
loop
sti
mov
outsb
dec
inc
add
dec
mov
xor
fdivrl
mov
ljmp
and
pop
filds
xchg
jb
sbb
scas
adc
iret
stos
cmp
mov
xor
push
fnsave
aas
outsb
ja
cvtps2pd
rcl
cs
jno
fst
cmp
mov
mov
jle
push
imul
out
ret
aas
or
ss
xor
jbe
loopne
mov
xchg
sub
fadds
aam
out
icebp
jo
mov
repnz
jbe
ds
testb
iret
adc
mov
mov
out
adc
movsb
xor
das
dec
add
sarb
loopne
test
jno
xor
mov
mov
fisubrs
es
les
insb
loopne
sahf
jg
sahf
cmp
daa
xchg
push
mov
fmull
icebp
loope
jno
pop
fwait
cwtl
mov
sbb
sbb
inc
repz
push
rol
pop
es
inc
xchg
sbb
inc
xchg
fucom
aam
rorl
dec
mov
int3
pop
adc
jge
and
push
popf
xor
pop
or
push
aas
stc
cmpsl
dec
pusha
xchg
sbb
stos
add
dec
ds
mov
adc
cmp
cmp
loopne
hlt
jbe
xchg
outsb
jmp
sbb
imul
cmp
scas
scas
add
inc
mov
leave
repnz
sub
fisubrs
fisubs
dec
lock
incb
in
gs
jb
out
mov
xor
mov
xor
lret
in
sbb
stos
add
push
inc
push
or
cmpsb
mov
mov
cmp
outsl
rcrb
test
add
jae
movsb
sbb
mov
jbe
sbb
stc
pop
push
out
arpl
mov
inc
leave
das
mov
bound
pop
mov
and
xor
push
xor
xlat
xor
int
adc
aam
bound
vcvtdq2ps
loopne
sbb
sarl
lods
imul
icebp
inc
xchg
nop
push
xorl
mov
popa
aas
movsl
fmull
add
mov
jo
push
push
repnz
push
push
sub
jmp
shlb
cmp
mov
aam
push
fcmovu
stos
sub
mov
inc
dec
test
stos
adc
xchg
ret
stos
clc
push
pop
loope
jne
cli
stos
rorl
adc
mov
sbb
mov
negb
sbb
or
lods
jb
scas
lods
lcall
jns
pop
cltd
movsl
inc
enter
and
aam
xor
ret
fs
push
out
ret
or
inc
push
push
stos
xor
cs
adc
lahf
or
cmpsb
inc
ret
jae
call
adc
and
shlb
loopne
jbe
add
dec
insb
cmp
xlat
fsubl
pop
fcomps
jp
xor
mov
aam
pop
xlat
xchg
pop
pop
mov
xor
fsubrs
cmc
cs
push
push
xchg
mov
or
lods
push
jae
push
test
scas
dec
adcb
pop
aaa
cmpsb
push
dec
repz
push
int3
add
push
in
data16
es
jo
adc
rcrb
fwait
push
xchg
push
add
sub
scas
cmp
mov
insl
xor
mov
mov
jne
mov
xor
push
imul
push
sti
hlt
lret
and
std
mov
pop
fsubr
jp
and
jecxz
lock
cmp
stos
mov
or
and
pop
cwtl
js
pop
and
addr16
cwtl
and
pop
shl
pop
data16
sub
or
jo
mov
add
in
cld
cli
out
sub
enter
movsl
ljmp
fsubrs
aad
into
jne
mov
bnd
push
add
xor
adc
mov
push
in
repnz
nop
loope
xchg
mov
icebp
adc
mov
dec
aad
sub
or
xor
add
inc
je
xchg
stos
xor
mov
or
dec
sub
pop
push
outsl
sarl
cmp
and
pop
ret
decl
sub
in
stos
and
push
loope
xor
pop
addr16
adc
sbb
insb
outsl
nop
rcll
loope
jns
out
andl
mov
fwait
popf
mov
gs
pop
rclb
sti
out
pop
push
mov
mov
lock
fildll
inc
pop
mov
js
popf
jmp
fnsave
popf
and
js
iret
push
mov
insl
lahf
mov
inc
ret
cli
out
jb
push
fisubrs
cmp
mov
into
popa
sbb
dec
lods
push
jge
mov
sbb
jno
stos
inc
cmp
rcrb
mov
jns
lock
cs
mov
call
out
xchg
iret
cmp
and
cmc
cltd
push
xchg
enter
inc
ret
popa
cmp
adc
pushf
movsb
jbe
dec
mov
mov
loope
jmp
sbb
lods
repz
mov
adc
popf
test
jb
in
dec
xchg
mov
pop
rcrb
ss
lahf
out
cmp
push
inc
pushf
das
subl
mov
cmpsb
xor
icebp
imul
add
arpl
in
inc
nop
not
fisttpll
push
int
jno
aas
sbb
cmp
stos
ja
sub
jno
xchg
bound
add
pop
mov
cwtl
cld
jp
dec
ficoml
fcmovnu
xchg
xchg
lock
repnz
xchg
jle
add
outsb
xchg
jo
xor
push
ret
insl
jp
cld
dec
xchg
in
mov
xor
push
movsl
sbb
add
cltd
je
dec
adc
nop
pop
xchg
outsl
or
movl
xchg
sti
push
jmp
loop
and
fwait
adc
and
pop
orb
aaa
add
stos
jp
jl
loop
insl
jae
add
mov
in
push
push
test
cld
mov
push
adcl
adc
fisubs
dec
push
xchg
dec
lock
cli
idivl
pop
and
xchg
fdivr
enter
je
add
dec
mov
pusha
popa
in
xchg
mov
adc
jp
js
mov
pop
in
lods
push
dec
out
test
xlat
mov
sbb
pop
inc
cwtl
pop
mov
in
and
xlat
cmp
in
sub
and
adc
jno
or
sbb
stc
arpl
xor
inc
in
inc
fisubrs
hlt
dec
xchg
rcr
notb
jnp
lret
adc
cmp
mov
add
add
into
mov
mov
fcomip
xchg
pushf
inc
cmp
xchg
dec
sub
jb
xchg
cmp
add
xor
mov
dec
mov
jecxz
xor
stos
cmc
pop
aam
inc
xchg
and
sti
test
mov
rclb
sbb
hlt
loop
sbb
nop
xor
or
outsb
sarb
je
sahf
jecxz
push
cwtl
adc
sbbl
pop
dec
lds
imul
cmpsb
inc
xor
cld
hlt
in
stos
xchg
aaa
or
or
sahf
and
mov
out
cli
add
ret
iret
pop
mov
aam
mov
or
pop
aad
pop
cmc
sbb
add
and
stos
cmp
loop
xchg
cpuid
adc
or
mov
jne
cmp
repz
fcomip
movsl
adc
sbb
loope
mov
jbe
in
push
fidivrl
mov
cwtl
mov
icebp
sbb
mov
xchg
push
shr
cld
mov
dec
adc
adc
int
xchg
mov
adc
cltd
push
lret
lahf
rorb
aas
inc
push
arpl
fs
sbb
push
mov
outsb
clc
std
xchg
or
mov
or
dec
pushl
jl
cmp
mov
or
sbb
jno
sbb
xor
adc
jecxz
xor
arpl
cmp
mov
xor
lea
cmp
mov
call
mov
xchg
pop
stos
mov
push
mov
jl
xor
ja
lret
js
and
movsl
cltd
shlb
or
fs
shrb
jle
or
pop
cmovb
in
iret
bound
in
sub
xlat
cltd
in
pop
mov
cltd
lret
xlat
push
aam
sub
fmull
les
or
roll
pop
js
cmp
mov
data16
sbb
call
and
xchg
out
bound
jno
add
adc
in
fcmove
push
or
dec
incb
push
dec
shll
ja
sbb
jge
xchg
cmp
cmp
adc
mov
cmp
loopne
mov
mov
push
stos
rclb
and
inc
mov
dec
std
lea
mov
inc
dec
aam
and
mov
dec
out
ss
and
adc
dec
pmulhuw
testl
fs
fsubrl
jbe
cmp
pusha
aam
push
cmp
mov
xor
dec
inc
pusha
fldt
adcl
les
mov
ss
inc
cmp
adc
loopne
cmp
inc
sub
mov
inc
flds
pop
inc
std
pop
mov
insl
mov
mov
and
and
out
push
xchg
mov
iret
mov
mov
int3
sbb
sahf
xchg
sub
jmp
or
loope
mov
cmp
insl
loop
xchg
jae
inc
fisttps
out
mov
mov
je
stos
das
adc
fnsave
inc
in
out
or
mov
mov
adc
mov
cmc
js
xor
sbb
imul
ss
in
mov
jae
adc
add
mov
sbb
les
cwtl
mov
loopne
int
mov
and
rorl
leave
out
addl
xor
mov
cmp
lods
je
dec
ret
fcmovbe
jge
ds
and
mov
cs
fdivrs
mov
adc
xor
aam
daa
rorb
insl
ljmp
lods
mov
jge
int
or
adc
xlat
scas
or
add
aaa
in
push
cmpb
xor
pusha
fisttpll
insl
jecxz
mull
ljmp
ss
mov
dec
mov
iret
in
sti
mov
inc
stos
mov
xchg
fimull
xchg
or
repnz
xor
inc
ja
cmp
bound
sub
or
mov
bound
and
add
and
inc
pop
loope
pcmpgtb
xor
lods
popf
add
sub
lahf
mov
push
clc
lds
and
and
sbb
xlat
sti
xor
jne
and
cli
repz
jno
mov
and
mov
aaa
lods
insl
test
arpl
push
mov
mov
insb
xor
pop
mov
lret
jmp
icebp
bound
mov
mov
xchg
mov
popf
push
mov
cmp
pop
push
add
mov
sti
sbb
inc
adc
adc
push
adc
push
movl
inc
je
xchg
shlb
icebp
ja
mov
cmp
push
in
fmul
cwtl
xchg
repnz
adc
lcall
add
scas
mov
ja
cmp
pop
cmpsb
inc
stos
cld
adc
xchg
fs
aad
sbb
cmp
xor
mov
rcrb
inc
fisubl
sub
jmp
aas
je
cmc
mov
fists
inc
clc
xchg
jg
mov
pop
jns
iret
inc
loop
out
popf
out
inc
mov
mov
out
mov
xor
out
mov
ffree
mov
fs
adc
dec
addr16
mov
pushf
fdivs
imul
ds
inc
mov
cmpl
stos
je
jne
hlt
enter
dec
movsl
roll
push
mov
mov
sahf
mov
stos
mov
aaa
lret
shlb
scas
repnz
lods
sbb
mov
ss
das
sbb
test
fadds
outsb
lcall
mov
scas
xchg
cmc
je
shrl
cmp
mov
push
lret
addb
inc
mov
cmpsb
icebp
mov
jge
cwtl
inc
nop
cmp
dec
loopne
sti
xor
ljmp
ret
test
test
adc
add
adc
sub
pop
andl
fstpl
inc
inc
add
mov
lock
inc
icebp
sbb
ja
dec
jg
movsl
imul
add
enter
sahf
inc
mov
push
pusha
jnp
mov
sub
xchg
inc
and
sub
or
adc
pop
data16
lret
dec
push
mov
mov
pop
mov
sti
cmp
mov
sub
dec
decb
clc
xchg
mov
add
pop
les
xor
arpl
dec
add
cmp
add
popf
mov
ret
ss
dec
dec
cmpb
cmp
mov
into
or
jle
stc
sahf
or
mov
in
scas
mov
andb
cmp
ds
adc
push
jnp
push
xchg
in
push
loopne
nop
movq
jo
les
jmp
out
sbb
mov
push
mov
push
out
pop
mov
push
loope
popa
inc
xchg
stc
enter
pop
push
xor
add
iret
aad
push
mov
or
jno
inc
cwtl
add
repnz
shrb
test
cmp
les
dec
stc
jmp
inc
les
xchg
adc
xorb
mov
clc
fimuls
scas
sbb
mov
mov
out
dec
lahf
push
aad
ds
cmp
xchg
ss
sub
cmp
mov
arpl
daa
mov
loop
or
insb
dec
cmp
sahf
adc
xchg
stos
repnz
insb
or
movsb
mov
jbe
pushf
int
push
outsb
outsl
push
sbb
mov
or
scas
inc
call
out
ret
add
inc
mov
mov
sbb
popf
jmp
mov
leave
dec
or
mov
xchg
arpl
jg
and
jae
fbld
adc
cmp
xor
dec
mov
mov
jle
repz
sbb
cmpsl
add
inc
sub
cmpsl
outsb
mov
in
sub
mov
ss
mov
jp
movsb
insb
out
pop
rolb
or
pop
xchg
xor
xor
imul
repnz
push
js
nop
push
repz
mov
jle
pop
inc
sbb
ret
lds
push
fwait
cmpsb
pop
imul
push
movsb
push
roll
rcll
xor
roll
insl
negl
cmp
add
imul
stos
addr16
sbb
out
pop
xorb
leave
push
scas
or
adc
in
bound
add
push
mov
mov
mov
out
enter
rorl
xor
cmpsb
add
insb
mov
rorb
jae
nop
inc
rcrl
adc
adc
mov
fisubrl
in
mov
cmp
out
or
and
das
mov
pusha
push
jno
push
and
lret
ljmp
and
test
outsl
and
and
lods
cmp
mov
sbb
jecxz
mov
lret
jle
ja
jl
movsl
push
push
adc
dec
es
pop
sar
mov
shrb
les
inc
cmp
push
pop
cmp
dec
adc
outsb
cbtw
adc
jge
adc
mov
loope
or
add
push
jecxz
push
rcll
repnz
dec
lcall
cltd
ret
cmp
cmp
icebp
rcrl
sub
jno
adc
jno
popa
cmp
jae
push
outsl
hlt
push
pop
das
xor
pop
sub
ret
xor
outsl
pop
pop
in
or
mov
add
fildll
js
insb
add
jb
xor
adc
mov
ja
push
mov
jne
imul
pop
jge
aam
mov
repnz
daa
jnp
scas
faddl
pop
jle
daa
sbb
lret
and
call
sbbb
inc
clc
xor
xor
mov
inc
stos
pop
lcall
inc
jbe
and
js
mov
or
add
cmc
mov
aad
jbe
pop
loop
enter
das
je
loopne
sbb
push
and
fdivs
push
into
test
lcall
test
mov
stos
ret
stc
mov
xchg
lcall
pushf
inc
xchg
movsb
inc
stos
sub
add
stc
mov
ds
xor
add
fwait
jbe
push
mov
dec
test
out
xor
cmp
jbe
scas
hlt
repnz
xchg
rcrl
int3
jg
push
enter
inc
mov
jecxz
ret
mov
jae
popa
push
mov
cs
add
push
add
fs
lahf
aaa
sahf
and
cmc
lds
inc
push
ficomps
js
add
out
in
shl
int3
jae
negb
pusha
ficoms
adc
mov
pop
lahf
adc
repz
ret
mov
aas
sbb
fldt
shlb
arpl
rorb
fistpl
lods
bound
outsb
dec
ja
add
leave
pop
stos
push
xchg
test
add
shlb
dec
add
sub
xor
mov
repz
dec
dec
pop
addr16
leave
lcall
fs
pop
sbb
push
and
jb
jno
repnz
in
xchg
mov
cld
add
cmc
push
sub
mov
out
mov
outsl
test
xor
mov
sbb
iret
mov
inc
inc
mov
pop
aad
clc
sbbl
and
cmpsl
fwait
popa
in
jecxz
add
ja
fneni(8087
push
ljmp
sbb
and
add
cmpsl
push
push
push
adc
mov
mov
mov
push
lea
int3
add
push
gs
shll
mov
sub
shlb
adc
sbb
adc
fistpll
popa
sub
mov
shrl
je
vmptrst
inc
or
jo
sti
xchg
stc
je
rol
cmc
das
jecxz
jno
imul
test
les
adc
movsb
xor
roll
xchg
fdivrl
push
jge
and
addr16
mov
mov
aam
push
pop
pop
aam
jg
push
push
jbe
sbb
dec
shlb
stos
test
push
sub
jmp
fcmovbe
push
data16
push
inc
xor
ljmp
pop
mov
loopne
xchg
enter
scas
or
sbb
push
loop
test
dec
push
push
scas
dec
loope
or
xor
loopne
add
ja
jl
dec
lret
dec
icebp
aam
mov
add
push
jne
ret
pushl
and
adc
movsl
mov
mov
sarl
cwtl
adc
pop
or
inc
and
lahf
and
mov
pop
or
int3
enter
out
sbb
into
in
and
cld
sbb
xor
cmp
cld
xchg
adc
jns
mov
aas
jg
xor
scas
cmp
inc
and
or
xor
xor
les
push
mov
dec
adc
inc
push
xchg
stos
into
clc
fistpl
fsub
mov
fsts
adc
arpl
mov
or
sbb
in
mov
fdivrs
add
mov
pop
mov
mov
lds
mov
pop
mov
dec
ror
fisubrs
outsl
inc
lods
outsl
mov
fcompl
cmpsl
shl
cld
fadd
push
out
mov
call
jl
jo
int
loop
xor
fistpll
inc
pushf
lret
push
pop
in
inc
test
fdivs
pop
or
inc
dec
mov
lock
test
fildll
xor
call
ljmp
add
pushf
mov
loope
push
xchg
lret
add
mov
enter
inc
insl
sbb
addr16
push
popa
and
inc
mov
cmp
mov
loop
addr16
dec
xchg
push
or
or
aad
mov
lahf
sbb
inc
imul
loop
inc
popl
fs
xchg
xchg
cmp
in
dec
test
ror
out
sub
cmp
fnstsw
cmpsl
jae
inc
bound
jmp
cwtl
push
push
jnp
ljmp
test
int3
dec
cltd
add
xchg
dec
repnz
push
insb
jmp
cmp
cmp
jo
jg
das
cmp
mov
test
push
icebp
inc
iret
hlt
hlt
and
fisttpll
cli
js
dec
add
mov
enter
sub
jp
loope
test
pop
pop
and
sub
out
lods
cmc
and
lcall
mov
pop
lret
mov
xchg
std
xor
imul
mov
push
test
test
and
daa
inc
dec
xor
in
mov
cmpl
test
insb
or
pushf
xchg
push
add
add
daa
add
xor
sbb
cwtl
cmp
sub
or
xchg
inc
gs
into
dec
mov
push
push
fcomps
sub
data16
stos
add
push
mov
outsb
fisttpl
out
or
in
xchg
ret
xchg
and
cmc
shl
adc
aam
lods
jp
ljmp
ret
or
sub
adc
scas
mov
jecxz
dec
jge
sbb
icebp
pop
mov
lods
outsb
les
in
xchg
jge
cmpsb
and
jp
mov
aaa
push
mov
negl
arpl
out
lock
imul
out
fsubl
sub
loopne
addr16
test
gs
aam
xor
lds
pop
imul
jg
cmpb
mov
mov
push
jns
push
es
ds
bnd
aam
pop
test
mov
add
in
push
dec
es
cmp
fmuls
push
and
fcomi
adcl
push
filds
add
adc
dec
lds
aas
je
lahf
sbb
jmp
out
pop
ja
es
xchg
xor
jno
xchg
dec
mov
jbe
adc
add
aam
imul
out
cmpb
sahf
mov
sub
mov
push
out
fcompl
push
add
pop
xor
repnz
fnsave
lods
push
movsl
jle
or
pop
jbe
jge
sbb
shrb
xchg
push
aam
or
and
inc
mov
cmc
addr16
add
sub
pop
ret
in
mov
mov
mov
shlb
mov
xor
add
test
out
fistpll
fwait
jne
sbb
fwait
je
sub
insl
movsb
outsb
aam
inc
outsl
pusha
mov
push
andl
push
add
stos
mov
pop
mov
fisubrs
dec
outsb
and
dec
mov
andb
mov
push
sub
lcall
outsl
stc
mov
cwtl
popa
mov
push
dec
mov
sbb
push
adc
test
fmull
lea
icebp
sub
rcll
out
les
adc
cmc
insb
flds
lret
dec
out
jnp
xlat
cmc
fdivs
xor
je
xor
mov
push
pop
aaa
bnd
sbb
popf
jg
push
push
daa
pop
dec
fcomps
mov
lret
or
out
jg
leave
push
pop
mov
xchg
mov
je
and
mov
aas
xor
popf
ljmp
and
mov
loope
popa
mov
pop
fcoml
cmp
ret
sbb
call
inc
pop
add
and
sbb
nop
sub
inc
clc
jb
test
xchg
mov
ret
pop
leave
xchg
inc
in
mov
sbb
inc
lods
out
xchg
jno
mov
repnz
gs
jecxz
cltd
or
sub
xchg
mov
add
cltd
js
dec
and
add
mov
jle
mov
add
add
xchg
je
mov
jnp
clc
fwait
pop
sbb
mov
jle
in
pushf
std
push
in
in
mov
dec
add
mov
test
imul
sbb
xor
lahf
clc
in
mov
pop
mov
sbb
fs
mov
in
sbb
jae
cs
inc
es
mov
mov
shlb
std
ja
xor
loopne
jg
nop
push
and
xchg
adc
sarb
cltd
cmp
dec
pop
loopne
cld
fucomp
gs
std
daa
mov
sbb
in
push
popl
push
push
sbb
icebp
mov
insb
pop
xchg
jb
cwtl
inc
push
add
xorb
cltd
rcl
mov
cmpsl
pop
rclb
pop
pop
ds
sbb
sub
jle
mov
data16
cs
mov
xchg
jno
sub
jne
dec
shll
xchg
adc
not
lret
inc
mov
fbld
lea
inc
adc
cmp
ljmp
fwait
shr
pop
in
adc
jecxz
iret
testl
loopne
cmp
pop
push
or
mov
fs
lods
push
leave
mov
push
push
fsubrs
pop
xor
add
leave
mov
pop
mov
lods
fs
sub
pushf
sbb
xchg
fdiv
push
icebp
mov
scas
xor
cld
icebp
mov
fimuls
jmp
and
push
imul
xor
insb
xchg
sahf
sbb
xlat
es
fsub
rcrl
es
lods
pop
stos
mov
push
ss
lret
push
mov
ror
dec
mov
cmp
jb
adc
shl
push
lds
mov
fs
xor
sbb
sub
mov
cmp
sahf
dec
add
addl
mov
cmp
out
loop
fs
cli
cld
mov
add
rcll
add
dec
and
cmpsl
xchg
mov
mov
out
xchg
sub
jo
mov
je
std
lret
mov
or
sbb
lahf
imul
insb
push
fistpll
inc
insl
ljmp
jp
ss
jge
push
inc
sub
mov
scas
xchg
out
cld
sub
adc
in
jmp
les
mov
fmulp
and
fldenv
or
out
pushf
mov
or
stos
or
shrb
cmp
mov
faddl
notb
cmp
push
sarl
push
lea
dec
jge
pop
mov
mov
lret
roll
faddl
into
dec
add
mov
nop
adc
jo
sub
pop
adcl
repnz
cltd
sub
andl
movsl
sub
xchg
inc
inc
fbstp
mov
lcall
aam
lahf
mov
sub
iret
popf
or
cmp
outsb
xchg
pop
inc
enter
pop
sahf
bound
popa
out
or
pop
mov
fsts
cmp
mov
xor
cmpsb
out
call
add
mov
in
adc
jecxz
pop
mov
jnp
aad
add
xchg
pop
mov
test
pop
pop
jb
adc
adc
jae
mov
cmp
dec
in
daa
scas
dec
pushf
mov
je
movsl
fstpl
jg
pop
test
out
pop
imul
idivb
repnz
mov
rcl
sbb
pop
xor
inc
test
lds
and
dec
jo
push
sbb
stos
add
mov
test
push
bound
out
rorl
pop
or
jl
pop
cmp
mov
mov
lods
and
mov
jmp
sbb
in
push
adc
mov
call
jnp
push
je
mov
xor
bound
mov
enter
jns
ja
mov
pop
loope
shrb
mov
adc
pop
push
in
sbb
xchg
ljmp
inc
neg
push
push
inc
jg
mov
pop
jle
popf
mov
sbb
fbld
push
clc
stc
cmp
mov
imul
movsb
in
xor
pop
and
fs
push
pop
dec
je
and
fucomip
sub
test
das
lret
pushf
and
rolb
lahf
mov
pushf
into
inc
stos
sub
adcl
xchg
and
inc
pop
das
pop
pushf
mov
dec
cmpb
sbb
pop
dec
loope
or
sarb
xchg
mov
jl
mov
daa
test
jl
aad
cld
iret
add
in
add
lahf
add
scas
addr16
pop
xor
sbb
aam
mov
xchg
mov
xchg
sub
mov
or
lock
sti
fstpt
jns
inc
iret
out
pop
dec
adc
inc
add
insb
data16
fwait
jge
dec
push
and
mov
mov
sub
mov
and
jl
add
fldt
out
add
jle
pop
add
insb
mov
sub
lds
repnz
or
outsl
push
cmp
fstpl
lds
xchg
inc
lret
aad
cmp
sbb
pop
mov
mov
negl
enter
jge
mov
pop
pop
fcom
push
cltd
jecxz
cmp
test
ljmp
out
or
cltd
idivl
push
sti
cmp
push
addr16
push
ja
call
leave
and
jg
das
push
jecxz
xchg
ja
jo
mov
mov
fiaddl
and
int
add
nop
cmpsb
imul
mov
aad
mov
dec
ljmp
fmul
outsb
add
jge
xchg
pop
filds
repz
fmul
mov
jnp
sbb
jecxz
cmp
xor
and
push
lret
adc
icebp
popf
lret
mov
das
jmp
or
out
fidivrs
or
sbb
push
sub
cltd
mov
pop
mov
push
frstor
push
cmp
xor
lods
testb
test
cmp
cwtl
xchg
fisttpll
add
push
mov
cld
dec
push
lock
sbb
dec
lahf
lcall
jle
pusha
sarb
xchg
and
adc
in
flds
sbb
aad
cltd
pop
or
and
dec
mov
insb
bound
sub
insl
xor
add
imulb
inc
js
adc
push
xchg
mov
int3
xchg
xchg
aam
popl
mov
add
push
push
add
cmp
sbb
addl
pop
pusha
sub
jmp
adc
ss
out
scas
lds
dec
pop
mov
aaa
jmp
jl
hlt
cld
scas
fisttps
scas
add
gs
jle
push
fnstsw
insl
ss
adc
in
test
call
cmp
xor
cmp
scas
pushf
pop
clc
andl
or
pop
xchg
mov
clc
inc
dec
cmpsb
fcmovne
pushf
mov
sub
jb
mov
lret
int
push
mov
fs
xor
ds
sbb
adc
rcll
sbb
mov
pop
incb
mov
mov
inc
rclb
lret
fidivrs
mov
mov
jge
cmpl
inc
lods
mov
or
mov
out
pop
sub
outsl
mov
movsl
ret
insl
cmp
mov
lds
inc
neg
mov
wrmsr
inc
stc
das
pop
out
ficompl
scas
shll
in
jmp
add
cltd
dec
xchg
out
adc
mov
popf
and
aaa
in
pop
adc
pop
and
xchg
clc
push
sub
inc
sub
jo
sbb
lock
xor
arpl
mov
add
and
testb
lcall
sub
jne
cli
push
dec
cmpsl
push
push
jg
cmp
je
dec
lds
push
sbb
xor
dec
scas
sub
push
repnz
and
push
adc
cmc
push
xchg
outsl
in
xor
pushf
xchg
lret
push
push
add
and
fistl
lods
xchg
pop
push
pop
pop
movsb
je
xchg
dec
fwait
loope
popf
and
sbb
xlat
and
add
leave
mov
jg
mov
in
loope
ds
lds
ljmp
les
ret
loop
sbb
adc
flds
jno
pop
ds
or
cmp
adc
adc
fwait
or
pop
jg
pop
jb
cli
test
sub
cld
add
push
mov
movsb
jbe
jo
insl
int
jl
loopne
or
or
mov
fisubs
inc
fwait
cmp
adc
xchg
ret
das
cmpsb
sub
and
sahf
cli
scas
aaa
and
push
cmp
std
cwtl
mov
insl
xor
or
out
lret
testb
popa
pusha
fildll
or
out
xor
loopne
lret
clc
mov
or
ljmp
mov
cli
gs
inc
fistpl
scas
js
mov
lea
mov
jmp
jns
jge
ss
insl
pop
xchg
mov
mov
fcmovne
jle
cmp
lret
add
lcall
lods
push
cmc
mov
ret
iret
cli
xchg
xor
lods
pop
jns
mov
lea
xchg
call
dec
mov
sbb
int
pop
call
cmpsb
sub
out
int
xorl
enter
sahf
mov
mov
jp
xchg
adc
mov
cmp
cmp
add
inc
inc
mov
imul
push
enter
cmp
inc
pop
jg
movsl
stc
pop
sbb
je
mov
mov
sbb
mov
out
loopne
sub
std
cmp
jmp
mov
or
imul
shll
mov
ja
loop
xlat
sti
dec
mov
popa
mov
andb
mov
insl
mov
xor
adc
sbb
je
imul
out
bound
rcr
push
mov
in
test
jp
cli
leave
hlt
popa
add
xchg
jae
jno
sub
jl
sub
mov
mov
orl
xchg
int3
inc
fistl
and
xor
push
push
xchg
imul
loope
aaa
loopne
adc
loopne
les
jecxz
dec
dec
pop
iret
add
jmp
jecxz
pop
out
adc
subl
ss
xlat
jmp
dec
fnstenv
push
or
jp
mov
insb
repnz
imul
hlt
repz
je
xor
insl
int3
push
sbb
sub
stc
adc
pop
mov
cld
pushl
repnz
outsb
test
and
call
push
outsb
repnz
out
gs
sbb
fwait
in
movsb
pop
aad
bound
pop
xor
loope
ret
outsl
adc
sti
test
fisubl
iret
scas
pop
pop
sub
test
lret
inc
or
adc
jle
xchg
dec
xchg
shrl
test
sbb
or
andb
dec
pop
lds
dec
xor
sub
xor
fmuls
cli
lods
pop
int
mov
data16
mov
mov
add
jns
cmp
sbb
add
sub
filds
push
pop
pop
push
push
sub
push
sbb
inc
je
stc
sbb
subb
movsl
sub
pop
jle
push
insl
test
lea
mov
std
dec
jno
ja
mov
sarb
lods
pop
mov
dec
mov
pop
aam
shlb
pusha
aad
push
cld
cmp
cmpsb
push
or
insl
xor
or
loopne
push
xchg
sub
rorb
or
ljmp
int
es
pop
jmp
xchg
mov
mov
xchg
into
notl
sahf
push
mov
sub
pop
int3
int3
sahf
insb
out
into
jle
jg
adc
xor
js
xchg
sub
lahf
roll
dec
cmp
jno
jbe
inc
jle
mov
inc
repnz
xchg
push
jg
add
push
stos
cmp
adc
cwtd
mov
test
push
rcrl
mov
out
insb
push
nop
push
push
out
lock
push
mov
mov
hlt
stos
aaa
jb
jns
inc
or
outsb
sub
repnz
aaa
inc
insb
fadds
ds
adc
or
sub
fistps
in
rorl
adc
lahf
lahf
pop
jnp
fnstcw
imul
stos
jle
and
lahf
or
in
shll
icebp
std
xchg
sub
sub
sub
test
aam
dec
xor
imul
cmp
cmpsl
aam
push
cmc
jl
ret
jo
push
insb
xchg
and
sti
lods
lods
jns
sbb
mov
sbb
add
sbb
je
xor
jecxz
sahf
pop
cmp
stos
fldl
adc
sahf
cli
scas
call
adc
fsubs
pop
es
mov
inc
jnp
decl
mov
sbb
sub
das
insl
cmpsb
sbb
aad
push
xor
loop
pop
mov
sub
inc
fidivrs
hlt
sbb
mov
aam
in
mov
out
les
outsl
pop
sub
cld
cmp
xchg
cwtl
xchg
sub
mov
ret
jg
sub
mov
xlat
jle
imull
ffree
shll
mov
lods
pop
xorl
sub
das
int3
xchg
icebp
aaa
mov
std
jmp
out
sbb
and
hlt
loopne
dec
aas
cs
in
push
dec
pop
push
mov
ss
adc
and
adc
sub
mov
push
mulb
ret
xchg
fwait
xchg
dec
mov
into
push
or
jle
dec
mov
scas
sub
sbb
inc
or
icebp
mov
repnz
out
lcall
insl
mov
pusha
dec
jl
in
cmp
add
dec
aam
pop
add
dec
bound
nop
add
adc
mov
cmpsl
sub
call
mov
fs
push
int3
ja
pop
mov
mov
insl
pop
sbb
jge
and
xchg
ss
loop
dec
mov
push
in
and
sbb
pop
pusha
test
into
imul
outsl
jl
call
pop
and
icebp
pop
addb
mov
enter
aam
and
adc
inc
mov
jae
or
ror
sbbb
testb
or
out
dec
jne
cmp
inc
out
adc
int
test
fimuls
in
rorl
cld
mov
in
push
jbe
movsl
inc
jp
sbb
xchg
mov
ss
pop
movl
add
mov
dec
lods
and
call
adc
fnstsw
dec
cmpsb
lds
les
test
inc
xchg
jecxz
xchg
cwtl
loope
sub
cli
dec
out
xor
jge
jb
mov
frstor
inc
ja
jmp
pop
lods
jge
out
lods
hlt
cmc
stc
bound
pop
pop
sub
mov
lret
adc
in
fwait
and
repz
jb
mov
pushf
adc
sub
mov
jmp
push
insb
inc
mov
mov
mov
imul
cmpsl
out
xchg
ja
dec
cmp
aam
popa
mov
ret
xlat
aaa
fwait
mov
cmpsl
lahf
or
sub
loope
hlt
mov
cmp
sub
mov
daa
sbb
popf
mov
outsl
mov
call
pop
mov
sbb
xlat
sub
mull
fistl
insl
cmp
sarb
js
xchg
mov
testl
mov
iret
pop
sbb
jmp
ljmp
dec
inc
aad
push
mov
pop
sbb
stos
lods
jle
jecxz
xchg
ljmp
and
jmp
arpl
mov
pop
int3
cmc
pminub
adc
add
out
test
sub
stc
movsb
ds
add
sbb
jns
inc
xchg
ljmp
push
push
inc
add
inc
outsb
and
or
xchg
scas
arpl
insl
xchg
mov
pop
xor
dec
loop
into
xor
or
or
push
rcll
sbb
jmp
out
outsb
inc
pop
push
nop
std
cmp
dec
or
fldenv
into
xor
jecxz
mov
inc
mov
add
loope
int3
in
add
mov
mov
and
and
mov
leave
pop
sahf
sarb
ss
mov
sbb
mov
lock
xor
dec
iret
cwtl
mov
inc
pop
stc
lea
imul
movsb
hlt
add
jecxz
subl
cs
pop
std
mov
mov
dec
decl
sti
int
fsts
jmp
into
lret
inc
xor
xchg
clc
and
movb
cmp
dec
sbb
into
in
mov
adc
inc
lret
cwtl
xor
lcall
shlb
out
aaa
dec
pusha
ficomps
xchg
mov
sub
pushf
push
lahf
pop
xlat
popf
cmp
xor
xchg
fdiv
push
movsb
das
sub
lock
cmp
jle
fs
pushf
loopne
add
xor
pop
hlt
adc
mov
mov
cmpsb
out
nop
ljmp
pop
add
lahf
push
scas
cmp
xorb
stos
lods
mov
push
sub
loope
xchg
cmp
shl
mov
test
jmp
sbb
push
imul
adc
sub
sbb
std
add
jle
lret
lahf
xlat
mov
testl
sbb
pop
jecxz
insl
dec
sar
lret
scas
popf
sbb
sbb
sahf
cli
add
in
hlt
fstp
mov
cmpsb
or
iretw
and
and
imul
jb
dec
pop
lret
ds
pop
notl
out
subl
sbb
or
cmpsl
pop
das
repz
inc
sub
and
mov
iret
test
add
outsb
insb
lds
pop
dec
lds
jp
ljmp
aad
jl
rcrb
sbb
xchg
inc
int
push
out
mov
stos
in
xor
leave
fsub
loop
cmpsb
fabs
adc
movsb
cmp
inc
stc
lret
sub
ficoms
fucomp
add
lods
scas
lds
add
inc
mov
sub
jbe
fabs
xchg
and
imul
int
ficoms
ljmp
push
pop
ret
xor
jae
cmp
in
pop
sub
popf
sahf
cmp
xlat
push
dec
cmp
daa
ds
and
iret
sub
ficoml
out
dec
out
popf
adc
adc
jne
lcall
sbb
push
pushf
cmp
lret
mov
cmp
inc
out
dec
je
into
push
rolb
lds
mov
xor
inc
inc
pop
push
and
adc
outsl
mov
cmp
push
cmp
aas
adc
out
dec
mov
jl
inc
fwait
or
test
inc
or
sbb
cmpsb
mov
inc
fsub
or
js
cwtl
xor
in
int3
loopne
daa
es
sub
sbb
and
sahf
pop
or
mov
cltd
movsb
mov
subb
adc
sub
mov
mov
scas
ds
sub
pop
or
inc
or
test
xor
dec
call
pop
sbb
push
jns
or
stos
add
cltd
and
xor
cld
imul
cmpsb
pushf
sbb
icebp
fidivl
jmp
mov
dec
lret
stos
push
or
lods
call
inc
mov
sbb
mov
aam
mov
xchg
mov
into
xor
lea
sub
cmp
aam
addr16
gs
aaa
pop
dec
mov
pop
sub
and
mov
mov
xchg
mov
push
cmp
dec
cmpsl
sbb
stos
cli
scas
and
nop
ss
bound
idivl
aad
into
mov
pop
sahf
mov
sub
imul
decb
inc
inc
clc
and
data16
cmp
jae
mov
cmc
push
cmp
out
lods
lods
mov
dec
int
les
adc
push
cmp
mov
notl
xlat
xor
out
icebp
gs
iret
xlat
popf
std
inc
imull
pop
and
adc
rcrb
aad
lcall
out
jg
js
into
call
mov
andb
ret
push
mov
xor
inc
xchg
push
mov
jbe
icebp
sti
leave
inc
das
into
inc
xchg
imul
and
enter
mov
cmp
insl
ljmp
push
adc
mov
add
add
inc
xchg
xor
inc
mov
jnp
sbb
jge
xor
inc
pop
lret
jmp
sbb
sti
stos
pop
lcall
cmp
loope
jne
lods
lcall
push
mov
pop
add
and
aas
mov
xchg
ss
jge
fildll
dec
jbe
mov
lds
pop
sbb
sbb
je
rcll
shll
into
cmp
test
iret
push
test
out
pop
loope
das
inc
adc
fnstcw
xor
cmp
in
sbb
inc
mov
in
fcomps
sub
pusha
fstps
jp
mov
pop
lock
jmp
sub
movsl
scas
loop
mov
fcoms
xor
mov
or
mov
aas
ret
adc
dec
xchg
ss
shr
push
repz
mov
shrb
sbb
adc
test
push
pop
rolb
or
adc
xchg
arpl
js
cmpsl
ret
es
cmpsb
sub
jp
insl
daa
clc
mov
pop
pop
movsb
xchg
mov
mov
mov
xlat
push
es
out
call
mov
push
cmpsb
mov
xchg
aas
mov
divl
lods
jge
loop
adc
add
loopne
sbb
cmp
or
cwtl
adc
xor
dec
scas
lods
mov
inc
lea
add
xchg
call
sub
jns,pt
mov
outsb
fidivrl
sub
das
inc
dec
sbb
and
sbb
mov
imul
rcll
rcl
push
sub
xchg
shrb
dec
xchg
dec
hlt
cwtl
lcall
cld
inc
push
push
push
out
xor
mov
repnz
imul
xchg
and
pop
leave
jmp
scas
xchg
mov
call
into
std
mov
xchg
lahf
jae
sub
or
aas
jl
std
dec
imul
fs
scas
jle
cli
xchg
xchg
sbb
rcrl
fsubs
jge
inc
ds
aam
popf
dec
aam
inc
push
shlb
dec
sahf
push
xor
fdivrs
lcall
repnz
setno
xchg
iret
fadds
xchg
cmp
add
jbe,pn
push
imul
inc
mov
mov
mov
dec
test
or
in
movsb
fninit
std
es
dec
mov
and
pop
cmp
dec
cwtl
stc
dec
mov
sbb
fsub
ja
or
sbb
std
stos
inc
daa
idivb
and
xchg
fsubrs
sbbl
sub
in
ficoml
or
mov
int
xor
sub
inc
iret
or
lret
pop
enter
loope
and
pop
popa
mov
mov
pushf
into
and
push
or
jae
push
lret
icebp
and
jl
add
inc
shr
fisttps
mov
or
stc
lret
pop
and
mov
push
inc
add
pop
mov
idivb
test
mov
jecxz
xchg
and
unpcklps
cld
std
xchg
mov
inc
daa
adc
ss
add
push
xor
in
mov
aad
pop
rorb
sbb
cld
hlt
aam
lea
adc
cli
jl
test
call
cmpsb
cmp
std
xchg
ret
xlat
fs
shrb
inc
in
loopne
ret
loope
adc
mov
aam
sarl
jnp
inc
mov
loop
cmp
pop
fsubl
int
fimull
mov
xchg
pusha
ja
xor
jp
fdivs
ljmp
mov
pop
cltd
mov
data16
bound
or
sub
aas
lock
inc
call
hlt
and
mov
sar
xor
jmp
sbb
shlb
ljmp
fimull
daa
scas
outsl
addl
or
mov
xorb
xlat
je
stos
adc
mov
addr16
mov
sbb
pop
ret
test
push
jb
push
lds
mov
cld
call
mov
nop
bswap
in
clc
sub
imul
arpl
push
cltd
sbb
sbb
popl
stc
int
xchg
and
out
stc
aam
idivl
cs
lret
sbb
adc
pop
mov
xor
xchg
cmc
repnz
jecxz
mov
cli
xchg
icebp
inc
enter
push
jmp
shrb
nop
in
jmp
shrb
xchg
xchg
xor
lea
out
push
push
inc
pop
xor
xor
push
dec
daa
shlb
sub
jmp
pop
and
mov
out
sti
sbb
in
xor
dec
ret
xor
ja
push
add
test
mov
jg
xchg
and
loope
jno
mov
xchg
imul
fildl
jecxz
notb
push
and
add
push
testb
loopne
imul
fstpt
push
leave
or
aas
sub
pop
xchg
push
daa
aas
ljmp
lahf
mov
adcb
pushf
pop
sub
fsub
push
shlb
adc
shll
dec
or
outsb
mov
nop
jb,pt
ret
iret
shrb
pop
daa
push
mov
and
adc
in
and
push
pop
in
bound
imul
pop
pop
mov
imul
cmp
xor
mov
out
dec
mov
mov
mov
mov
pushf
xlat
adc
sbb
add
mov
cwtl
fiaddl
pop
cmpsl
dec
or
loope
dec
jno
dec
sbb
and
cmp
jmp
and
add
call
push
gs
mov
sbb
sbb
fadds
mov
push
xchg
shll
push
jecxz
push
scas
lods
and
cmp
icebp
jecxz
mov
xchg
fsub
dec
mov
dec
rcll
add
adc
es
or
add
mov
or
xorl
mov
js
pushf
in
cwtl
xchg
inc
pop
out
aaa
addb
stos
popf
test
ljmp
iret
xchg
nop
or
or
xor
in
je
jns
dec
outsb
enter
ret
cmc
test
in
push
push
popf
add
lds
fisttpll
cmp
repz
loopne
test
sub
fldl
ret
mull
fld
inc
mov
or
dec
add
movsl
sub
push
pop
outsb
dec
sub
push
push
nop
add
sub
decl
xor
mov
daa
mov
into
shll
xchg
daa
add
mov
or
push
mull
cmp
and
xchg
test
aaa
mov
mov
cmp
mov
cli
orb
imulb
xchg
sub
gs
cmovb
icebp
xchg
add
jbe
xchg
mov
hlt
pop
lock
repnz
iret
cli
pop
sti
sub
pushf
jae
mov
sbb
adc
lock
rcll
insb
loopne
mov
fdiv
add
mov
fsts
repz
jno
notl
xchg
push
mov
xlat
loopne
xor
out
mov
loopne
xor
das
clc
test
repz
add
aad
loop
mov
repnz
cmpsb
jns
subb
mov
movsb
and
mov
lret
pusha
xor
sub
js
leave
stos
sub
call
shr
dec
sti
daa
out
xor
fisttpl
dec
imul
and
movsb
in
mov
cmp
in
roll
in
lea
stos
mov
cmpsl
mov
jae
xchg
dec
cmpsl
xor
mov
mov
call
jmp
push
mov
je
les
sarb
dec
and
sub
imul
dec
fcmovb
sbb
int3
stos
push
mov
jg
push
fmul
js
and
adc
inc
hlt
cmpsb
jle
clc
sub
mov
out
inc
rolb
mov
xchg
rcr
add
sub
ds
daa
add
and
notl
fisttps
xchg
fbld
mov
sbb
faddl
xchg
ljmp
lret
lret
das
popf
fbld
xorl
mov
mov
xchg
xor
push
mov
test
jecxz
sbb
xor
pop
jge
inc
rcrb
stos
stc
add
cmp
lret
das
dec
mov
sti
inc
das
daa
ja
insb
cltd
jns
push
ja
cmc
xchg
es
idivl
pop
mov
push
rclb
repnz
rcll
mov
shlb
jb
imul
lret
push
pop
or
addr16
prefetchnta
ret
inc
clc
cmp
mov
mov
repnz
mov
or
xchg
sti
call
mov
insb
mov
lcall
adc
lcall
cmpsb
push
setb
subb
jnp
adc
fdivrl
imulb
out
mov
dec
sbb
jo
insl
mov
pop
add
fsubs
popa
das
and
lahf
push
hlt
movsb
scas
scas
ret
pop
sub
jns
ss
push
xlat
mov
push
xor
lods
pop
push
push
xchg
js
pop
mov
xchg
cmp
cmpsl
xchg
sub
inc
mov
mov
int
lods
push
cmpsl
in
out
fidivs
xchg
mov
int3
clc
outsb
pop
sub
repz
aad
jnp
or
xchg
sub
cvtpi2ps
aas
cmpsb
adc
xchg
sub
pop
jecxz
imul
push
sbb
add
push
or
arpl
sub
mov
ljmp
xor
jg
mov
adc
adc
aas
and
out
leave
adc
or
xchg
out
adc
fnstcw
sbb
mov
push
pop
loopne
std
addr16
and
into
test
insb
lahf
cli
sti
xor
and
lods
jle
mov
adc
sbb
push
adc
xchg
cmc
mov
outsl
aad
jae
mov
xchg
sbbb
pushf
ret
jle
int3
adc
pop
mov
ret
mov
dec
inc
jmp
rolb
inc
inc
arpl
imul
shll
mov
or
and
leave
inc
cmp
dec
pop
nop
xchg
mov
scas
imul
jns
mov
js
imul
pop
pop
dec
aaa
repnz
ds
xor
jle
mov
pop
pop
and
sub
ds
stc
pop
xor
imul
cmp
jle
call
mov
push
cmpsb
xchg
jp
rcrb
push
and
aad
loope
popa
sbb
adc
cmpsb
xchg
sbb
lds
mov
add
xchg
cmp
jmp
shr
sar
cs
stos
push
xor
mov
inc
cmp
fs
dec
inc
aam
lods
sahf
pop
mov
fidivl
sub
cmpsl
mov
int
cmp
loope
push
insl
or
mov
out
insl
jne
xchg
jmp
and
ds
mov
test
fmulp
in
out
mulb
jo
jnp
cmp
mov
push
ja
fisttpl
inc
daa
xchg
fldenv
add
lods
lret
add
fdivrl
cmc
loope
cmp
inc
sub
pop
mov
dec
int3
cwtl
hlt
and
and
add
push
and
pop
test
test
int
add
enter
add
orb
or
in
xchg
insl
mov
mov
mov
std
aam
mov
divb
jg
adc
and
xor
sbb
andl
das
or
mov
xchg
xlat
in
or
test
mov
gs
sar
rclb
call
xchg
pusha
xor
in
sub
hlt
outsb
ret
divl
imul
enter
cmp
sub
sbb
xchg
inc
insb
mov
inc
pop
icebp
sti
lret
rol
mov
xchg
out
imulb
xchg
mov
dec
jae
or
cmc
xor
test
ljmp
adc
and
sar
je
hlt
rcr
in
dec
pop
dec
jae
push
movsb
pop
rol
jne
push
hlt
dec
in
and
xor
sbb
xchg
inc
fyl2x
int3
mov
xchg
push
aam
mov
into
testl
mov
or
insb
ds
adc
jnp
add
test
sbb
push
jge
fldt
sub
mov
mov
dec
out
and
jecxz
mov
jecxz
pop
mov
xchg
jnp
sub
cmpl
push
aam
push
mov
mov
sub
arpl
fdivp
pop
mov
shrb
scas
pop
movl
xchg
push
jecxz
ret
in
sbb
sub
movsb
shrl
movsl
and
ja
mov
push
fisttpll
les
stc
jp
icebp
jnp
lock
rolb
inc
aaa
xchg
add
test
testb
inc
cmpsb
pop
inc
adc
mov
into
mov
inc
pop
dec
pop
loop
ljmp
pop
cli
fs
push
fistl
lods
add
repz
cmp
cmp
cwtl
in
or
aas
fsubs
inc
dec
inc
rcrb
inc
lahf
mov
push
add
mov
jae
jne
mov
push
or
shll
rorl
pop
addr16
lahf
or
mov
fbstp
pop
xor
rcrl
test
mov
xlat
loop
cld
sbb
push
dec
pushf
mov
adcl
insb
test
ljmp
adc
add
andb
push
sbb
shll
fwait
sbbb
xor
mov
mov
cmpsb
ret
xchg
faddl
xchg
icebp
mov
lcall
aad
mov
ja
dec
ja
xlat
inc
les
inc
rcr
repz
sbb
mov
or
popa
jge
jns
or
mov
ja
ja
fsubrs
idivb
xor
inc
jmp
popa
mov
addr16
scas
div
dec
or
arpl
iret
mov
lea
pop
test
out
mov
aad
or
and
jmp
lahf
sahf
adc
mov
sub
xchg
push
adc
and
ret
add
sub
jno
test
pop
add
fiadds
out
cmp
add
pop
ficompl
filds
imul
test
mov
fwait
add
loop
or
jle
sbb
je
scas
inc
setns
or
sub
xchg
out
adc
lods
lret
ss
add
mov
mov
out
jmp
repz
mov
xor
cltd
mov
jge
cmp
mov
push
add
incb
movsb
inc
push
dec
xor
push
jns
and
jbe
pop
dec
and
sar
mov
lahf
cmp
stos
hlt
sub
ja
xorl
sar
pop
loopnew
mov
sub
push
pop
and
add
pop
and
adc
mov
movsb
je
les
push
sub
cmp
adc
popf
mov
outsl
mov
daa
adc
cmpsl
push
jne
sub
cs
mov
or
fs
lods
lds
sti
jb
mov
mov
in
fisubrs
or
imul
roll
sbb
andl
es
dec
mov
dec
fiaddl
or
out
popf
in
das
sbb
sahf
xlat
push
jmp
xchg
in
xchg
jp
sub
dec
add
mov
or
pop
jns
lods
lods
xor
sti
sub
loop
dec
lock
repnz
cmp
mov
test
ja
std
test
rol
jae
shl
inc
repnz
xchg
scas
outsl
incb
cmpsl
or
jo
xchg
jne
push
dec
scas
fldenv
xchg
mov
or
mov
lcall
sub
les
adc
aaa
rcrl
and
ja
clc
inc
push
stos
je
pop
jae
mov
repz
ds
or
js
adcb
mov
lcall
sahf
lahf
xor
fdivs
jp
jmp
movsl
dec
int3
push
or
loope
jl
mov
mov
cmp
movsb
jecxz
add
mov
test
mov
sub
test
aas
adc
inc
popa
jmp
jp
call
popa
lods
lcall
xor
dec
loopne
add
xchg
xor
popa
out
mov
adc
push
push
out
aaa
popa
in
jne
hlt
mov
xchg
inc
add
andb
cmp
xor
lret
sahf
xor
xchg
out
outsl
cmpsb
dec
sub
nop
pusha
push
cmp
fildll
fimull
and
out
push
in
push
jnp
in
ja
js
addb
clc
into
sub
fbstp
add
stos
pushf
xor
and
jecxz
outsb
sub
xchg
imul
pop
clc
or
adc
xchg
xlat
xor
ss
insb
mov
adc
xchg
lret
mov
shl
cmc
inc
loop
or
clc
icebp
push
stos
adc
ds
mov
addr16
addl
dec
sub
push
sbb
adc
test
popf
imul
outsb
sarb
jl
imul
or
ss
es
mov
fdivl
jle
mov
je
fldenv
insl
dec
xchg
xchg
fucomp
cs
mov
jmp
rclb
dec
aad
sub
scas
mov
push
flds
pop
or
pop
jle
jbe
or
nop
js
test
out
hlt
pop
pop
repz
bound
sub
cmp
push
in
xor
sti
js
mov
adc
sbb
xchg
mov
mov
pushf
ret
mov
adc
ficoms
jmp
dec
mov
nop
push
inc
and
adc
fildll
out
imul
push
out
imul
sbb
loopne
dec
xor
and
xchg
testl
mov
cmp
fsubl
and
add
bound
fidivrl
inc
insl
pusha
out
jmp
mov
or
cmpsb
sbb
cmp
adc
out
cs
mov
push
mov
sub
lods
cli
inc
mov
mov
mov
inc
cmp
sbb
xor
fistpll
jle
outsb
or
lds
imul
test
aad
cmc
fbld
xchg
test
orl
pop
inc
test
cld
dec
cmp
add
rclb
mov
cmp
or
and
insl
aas
pop
or
cmp
jecxz
push
cmpsl
out
or
add
or
in
pusha
and
xchg
lret
jnp
lgs
push
xchg
and
cltd
hlt
jne
mov
push
jle
push
and
cwtl
inc
push
cmp
pop
fsubrl
cmpsb
imul
jb
mov
bound
mov
sbb
ja
cmpsl
and
pop
imul
int
push
jo
mov
fsubrl
xor
jbe
mov
xchg
xchg
fwait
xlat
cmp
pop
imul
pop
icebp
push
pop
ljmp
lods
fsub
leave
lock
xor
hlt
mov
pusha
and
cmpsl
popa
ret
jg
sbb
push
push
push
adc
sarl
sub
aad
sbb
jnp
xor
mov
and
jle
xchg
dec
sub
inc
mov
jecxz
pop
and
fisttpll
arpl
xchg
and
stc
enter
mov
push
test
sub
cs
push
cwtl
sub
repnz
mov
roll
ficomps
int3
repz
fwait
push
cmp
mov
pop
pop
dec
arpl
and
lret
push
sub
lock
leave
dec
les
push
pop
inc
mov
jb
dec
mov
cmc
das
sub
jecxz
adc
in
sbb
outsb
leave
mov
lret
push
dec
out
incb
sbb
imul
mov
dec
dec
fmull
add
leave
push
std
popa
ffree
fidivrs
and
movntq
out
mov
or
mov
shll
mov
mov
stc
iret
adc
das
movzwl
cmp
inc
lret
inc
adc
sub
imul
adc
mov
ss
cli
pushf
cmpsb
paddsw
pop
movsl
ret
lahf
adc
inc
rcl
clc
pusha
mov
lds
mov
or
ret
sub
lock
inc
push
in
insl
iret
push
pop
enter
sub
out
loopne
or
testl
and
mov
jecxz
lret
add
mov
xor
roll
cmp
xor
sbb
sti
ss
mov
push
sub
jno
mov
mov
push
mov
ds
loop
lock
xchg
jbe
aas
insl
xlat
add
bound
out
shl
bound
inc
mov
and
or
add
cmp
aas
std
jno
adc
mov
fnsave
testb
inc
pop
clc
jnp
stos
mov
adc
adc
jge
and
xchg
fs
aad
sbb
aas
and
adc
lds
mov
out
adc
jp
sbb
test
jno
dec
push
es
faddl
pop
fmul
dec
fstl
jae
loope
mov
sub
movsb
mov
movsl
js
fcoml
jmp
inc
xorl
mov
fadd
lcall
rep
mul
mov
adc
jecxz
or
xchg
aas
sub
sbb
xor
push
pop
int3
mov
push
imul
pop
mov
fdiv
mov
add
nop
mov
pop
sbb
rsqrtps
push
jnp
in
xchg
dec
xchg
xchg
sbb
mov
insl
loope
test
push
push
mov
and
mov
daa
stc
std
inc
cmpsb
xlat
xor
repz
pop
and
scas
mov
movsl
iret
pop
lahf
mov
adc
jp
rcll
rolb
and
mov
pop
xchg
aas
in
pop
cmp
call
jo
mov
loop
out
mov
dec
aad
lods
ret
jg
mov
push
rclb
add
cmpsl
test
xchg
mov
shl
mov
aas
pop
movsl
lea
jae
push
sbb
mov
cmpsb
sbb
sbb
cmp
push
fildl
dec
adc
mov
mov
outsl
pop
and
pushf
xorl
pushf
mov
outsb
call
add
insl
fistpll
add
inc
sbb
outsb
pop
subb
xor
aam
xchg
sbbb
push
inc
adc
rcrl
loope
xlat
hlt
mov
outsl
and
mov
dec
cmpsb
adc
lods
sub
psadbw
leave
xor
cmpsb
out
or
xchg
aaa
cmp
dec
leave
inc
and
push
mov
repnz
inc
aaa
or
dec
sahf
dec
and
adc
int3
scas
call
aam
add
inc
inc
inc
lcall
int3
outsb
push
aad
dec
mul
das
jne
add
cmpsl
sub
mov
loopne
repz
add
inc
push
push
ret
sbb
sti
pop
and
push
sbb
jnp
es
xchg
rcll
or
pop
jb
insb
jbe
pop
lret
cmpsb
repz
pop
cmp
scas
mov
sbb
nop
add
push
test
jle
pop
and
sbb
dec
jmp
cwtl
in
mov
sti
jmp
test
int3
clc
sbb
adc
int
pop
inc
cmp
fisttpl
push
xchg
mov
fcmovbe
jb
mov
fprem
adc
out
cwtl
xlat
sub
cs
repz
xchg
lret
jecxz
sub
dec
inc
inc
out
out
jge
inc
or
cmp
ja
ret
fidivl
fwait
pop
xchg
mov
mov
imul
add
fistpll
js
jae
xor
pop
adc
add
and
fdivl
inc
mov
insb
aas
pop
dec
cmp
aas
or
popa
jno
data16
out
popa
cmp
or
sub
shll
ret
pop
jecxz
lds
pop
and
adc
inc
fisubs
sbb
xchg
notb
daa
and
mov
cmpb
cmpb
pop
mov
push
popa
or
xor
rcl
sar
idivb
insl
xchg
inc
adc
jne
inc
jge
fisttpll
xchg
cmpsb
jbe
adc
pop
pushf
jns
sub
mov
push
sub
jnp
cwtl
in
or
leave
add
push
jae
pop
dec
mov
int3
sbbb
repz
int3
adc
xlat
repnz
out
icebp
lahf
cld
adc
and
ficompl
lret
shrl
or
mov
sub
mov
sbb
inc
sbbb
sbbl
popf
in
div
lcall
fidivrl
les
inc
inc
mov
fwait
jnp
mov
inc
adc
enter
out
dec
das
cmp
and
add
pop
cs
or
push
rorb
mov
add
shrl
inc
or
and
cmp
pop
add
dec
add
jae
lea
leave
xchg
pop
adc
sbb
rorb
mov
lcall
cwtl
scas
lcall
ja
int
ja
cmp
pushf
jmp
sbb
cmp
sbb
and
jne,pt
mov
lcall
and
lock
sbb
stos
rcrl
aad
dec
and
jne
outsb
fst
arpl
inc
in
pusha
cltd
xchg
lret
inc
ds
inc
pop
cmp
popf
jo
sarl
mov
cwtl
xor
out
push
iret
push
push
int
inc
xlat
add
sub
jo
xchg
ror
pop
lret
cs
xorl
out
mov
and
sub
xchg
adc
inc
in
push
mov
stos
dec
pop
cli
fiadds
sub
dec
movsb
xchg
imul
or
mov
jae
loop
cmp
or
adc
shl
into
sbb
pop
xchg
mov
cmp
and
push
sub
call
xchg
leave
pop
outsl
push
mov
and
jmp
mov
insl
and
mov
cmpsb
arpl
dec
cmp
scas
cmpsl
dec
mov
jle
mov
aas
xor
sbb
jecxz
fstl
aas
in
jnp
add
fiadds
je
sub
stos
add
orl
adc
xchg
or
sbb
sub
push
clc
popf
ret
pop
cmc
rolb
sahf
jmp
loop
aas
mov
jmp
push
pop
shll
lret
lcall
lds
and
sbb
loop
lock
cmpsb
mov
or
hlt
xchg
push
jp
roll
jecxz
push
pop
aad
imul
inc
out
cmp
inc
lea
fwait
out
lret
lret
or
jl
bound
dec
inc
mov
jbe
inc
in
jo
inc
pop
xchg
xor
sbb
cmp
hlt
cmpsl
fisubrl
lret
pop
test
int
xchg
enter
imul
sub
hlt
scas
je
filds
mov
scas
and
mov
dec
aam
xchg
cltd
in
fnsave
cmp
stos
fcomps
jne
sbb
jmp
sbb
ficoml
lahf
dec
pop
repz
mov
js
aad
loope
stc
popf
loope
sub
pushf
pop
add
fwait
adc
jae
sbb
stc
mov
lcall
inc
in
fdivrp
stos
rclb
in
divl
push
js
jle
in
push
popf
dec
rorl
xchg
out
mov
shrl
movsb
ret
mov
and
les
jne
fstp
pop
fwait
sbb
jp
mov
jns
xor
push
les
aam
fst
fdivl
cwtl
cmp
sbb
sub
mov
fsubrs
call
lds
sub
fwait
mov
jl
cmpb
sbb
loop
iret
and
imul
lahf
mov
call
unpckhps
in
dec
sbbl
or
push
shlb
xchg
xor
pop
lret
mov
cli
out
popa
popa
pop
sub
pop
and
mov
shrb
ds
jo
sarb
mov
ljmp
mov
shll
push
and
or
sub
hlt
std
mov
mov
xchg
xchg
or
pop
lods
outsl
pop
ljmp
jl
jl
outsb
mov
mov
mov
xlat
cmp
ret
mov
dec
pop
cmpsl
rcl
stos
lock
scas
cltd
cmp
fisubrl
lahf
mov
sbb
sbb
xor
xchg
dec
pushf
and
fildll
mov
push
sub
xchg
fisttpl
xor
push
lret
pop
xchg
es
inc
faddp
int
pop
xor
inc
call
cmpsl
mov
sub
sub
add
ret
cmp
push
mov
mov
push
push
jno
das
xor
fmull
xchg
daa
ret
sti
pop
ret
xor
scas
xor
add
imul
add
push
in
lods
push
sbb
add
cmpl
xchg
loop
pop
fmul
inc
sar
push
in
push
stos
mov
xlat
out
jns
arpl
sbb
pusha
cmc
jle
xchg
rorl
push
inc
cmp
jne
fildll
jb,pt
in
clc
shrl
aam
adc
stos
sbb
icebp
mov
xchg
xchg
lahf
pop
xlat
or
ret
inc
repnz
lods
and
aas
aad
or
jno
popf
ljmp
jg
push
loopne
mov
arpl
adc
adc
les
cltd
adc
pop
int3
addl
mov
into
pop
sbb
notl
adc
loopne
faddl
pop
jge
xchg
jmp
daa
inc
or
xchg
dec
adc
and
daa
xchg
dec
sbb
dec
xchg
jne
and
ljmp
stos
xchg
lods
push
rorb
rorl
fs
push
int
imul
jo
dec
out
add
mov
add
sub
rcll
sub
aas
pushf
rcrb
lret
mov
push
popa
andb
xchg
dec
jo
mov
sahf
inc
dec
shlb
cmpsb
and
push
shr
jmp
aam
pop
xlat
loope
std
mov
fistl
xchg
xchg
icebp
mov
inc
es
stos
adc
inc
jp
jecxz
shll
jo
insl
mulb
mov
xchg
inc
repz
jbe
inc
ljmp
daa
es
inc
push
das
sub
sub
fmuls
and
stos
mov
cmpsb
xchg
sbb
cmp
into
out
push
cmc
push
pop
xorl
sarb
cmpsb
dec
loope
and
mov
push
popf
mov
andl
xor
fldt
sbbb
xchg
imulb
nop
aaa
xlat
cmpb
outsl
jge
pushf
clc
push
sub
mov
xor
orb
ljmp
mov
bound
xchg
or
and
jp
xchg
addb
or
mov
cltd
ret
pusha
js
jo,pn
lea
xchg
sahf
mov
lret
mov
push
sub
cmp
ja
pushf
notl
add
adc
popf
mov
or
sbb
inc
sbb
push
rorl
aas
cmp
pop
pop
pusha
mov
sbb
stos
xchg
aad
stos
xchg
mov
inc
and
cmpsl
scas
js
inc
mov
mov
fldcw
push
jg
or
in
adc
lea
add
hlt
outsl
in
repz
mov
shrl
adc
push
and
es
sarl
inc
adc
xlat
daa
jmp
cmpsl
lea
push
xchg
fst
sub
leave
xchg
inc
dec
mov
loop
lods
jbe
int
inc
int3
in
cmp
out
sbb
lcall
mov
xor
arpl
scas
push
mov
orb
mov
and
cmp
adc
cld
addr16
subl
pop
add
xchg
xchg
pop
test
xchg
imul
add
jno
mov
loop
lods
fsubs
jne
sub
mov
sbb
inc
int3
push
arpl
xchg
and
std
sbb
cltd
add
rcll
rcll
popa
inc
pop
inc
adc
or
fildll
cmp
fbstp
scas
fdivr
stc
out
addr16
dec
out
test
ficoml
mov
dec
and
es
or
sub
or
nop
mov
pusha
outsb
dec
mov
adc
xchg
xchg
sti
incb
loop
leave
sub
mov
mov
push
test
jne
jmp
push
xchg
add
cmp
nop
cli
push
fiadds
js
dec
fdivs
movsl
pop
ret
test
adc
insb
xchg
jmp
sahf
xor
jmp
sarb
sbbb
adc
out
push
mov
sbb
adc
adc
jnp
stos
dec
dec
iret
xlat
mov
mov
xchg
pop
aas
sti
sbb
mov
dec
xor
cltd
cwtl
test
push
jbe
inc
mov
mov
jp
xor
jge
out
outsb
sub
aaa
test
pusha
in
mov
iret
pop
jo
ja
sbb
movsb
fs
lds
lds
fwait
rol
ja
sbb
es
mov
aaa
cmc
push
std
fs
push
stc
jecxz
and
xor
adc
popa
leave
out
fnstsw
push
bound
or
into
cltd
push
ret
xchg
sub
mov
mov
jb
jmp
adc
push
fwait
jle
adc
es
inc
mov
out
inc
shlb
orl
inc
daa
pop
gs
sti
enter
add
or
ss
sbb
shl
fcoml
mov
push
cmp
fcoml
and
out
mov
leave
sub
adc
mov
inc
mov
jns
negb
in
aam
mov
xor
loope
jmp
mov
xchg
fcoms
and
cmp
xchg
cmp
mov
mull
xor
scas
ja
xor
sub
sbb
pop
ljmp
cmp
sbb
movsb
mov
lahf
push
mov
pop
rorl
dec
ret
bound
popa
sub
fdivl
lods
mov
enter
push
enter
dec
pop
inc
sub
rcr
sub
lods
or
adc
lcall
mov
xchg
loopne
pop
cltd
pop
scas
out
call
inc
push
push
test
jne
mov
adc
lret
push
stc
or
arpl
push
aaa
cmp
or
dec
sub
push
sbb
daa
out
or
add
mov
lock
jle
adc
lds
mov
mov
dec
xchg
aaa
pop
aad
inc
ret
xor
and
push
and
jmp
lds
mov
and
cli
inc
fldenv
lods
jb
ret
sub
mov
aas
mov
pop
and
mov
jns
aad
and
repz
loope
cli
dec
loopne
push
aas
mov
fisttps
cmp
mov
lcall
or
sbb
xchg
cmp
data16
sbb
fcmove
pop
orb
mov
test
ret
sub
sbb
xor
push
xchg
gs
jns
scas
shlb
cltd
aaa
pop
push
sarl
cmc
pop
stc
lds
shll
sub
int3
inc
int
pop
dec
in
sub
lea
das
bound
adcl
xchg
arpl
xor
sub
xchg
movsl
push
mov
inc
xchg
dec
outsb
mov
xchg
std
or
or
in
xor
lock
or
lcallw
psubq
cmp
orl
dec
repz
push
mov
pop
rorl
inc
inc
sub
or
dec
sahf
aas
push
mov
jb
lcall
xchg
adc
jp
mov
adc
shlb
and
xchg
xorb
xor
xchg
inc
lods
jne
sbb
fmul
mov
ljmp
fisttpl
dec
push
fsubr
je
aad
mov
jb
pop
outsb
mov
daa
xchg
in
push
xor
ftst
incl
mov
stos
or
jae
push
adc
push
icebp
pop
imul
popa
xchg
xchg
std
bound
mov
push
imul
movsb
cltd
sub
or
cmc
xchg
je
mov
repnz
out
sbb
pushf
sub
or
sbb
or
xchg
and
test
dec
int
push
push
scas
aas
jl
push
out
mov
sub
mov
mov
mov
aaa
mov
fbld
lods
fwait
add
push
jbe
sub
iret
mov
roll
cwtl
es
mov
les
popf
inc
jge
dec
xchg
pop
adc
mov
push
fnsave
dec
lcall
mov
adc
lahf
xor
add
cltd
dec
add
insl
mov
xchg
test
data16
or
jne
and
das
mov
and
dec
cmp
cmp
or
lcall
int
jg
scas
pop
andl
js,pn
xchg
stos
inc
mov
adc
pop
rcrb
fs
movups
inc
fdivrs
jecxz
xor
cmpsb
add
dec
popf
scas
or
mov
loop
xor
stc
mov
insb
lods
jb
hlt
int3
xor
xchg
mov
push
adc
in
pop
lahf
mov
test
cs
inc
xor
adc
xor
gs
dec
cmp
mov
dec
lahf
dec
jns
cld
or
push
push
negl
sbb
cmp
push
cmc
pop
xchg
fstpl
adc
or
ret
test
sbb
sarl
adc
jge
mov
enter
loope
cmp
sti
and
fdiv
xchg
lcall
cmpsl
test
call
loopne
clc
ret
xchg
push
or
xchg
xchg
nop
sbbb
les
imul
in
jnp
dec
mov
push
jb
sub
int3
mov
in
les
fwait
inc
test
inc
mov
enter
push
pop
mov
movsl
xchg
xchg
add
add
dec
or
cmpb
xchg
addr16
xchg
pop
mov
out
enter
and
sti
test
cmp
add
ret
jp
or
xchg
inc
adc
dec
dec
push
jge
xchg
and
jb
cmp
leave
cmp
push
inc
dec
xchg
xchg
repnz
and
data16
xchg
pushf
inc
adc
mov
test
ss
mov
lods
jo
jne
lock
divl
xchg
decb
cmp
call
test
mov
gs
fmul
mov
and
addb
lret
cltd
jmp
mov
dec
pop
scas
cs
pushf
out
fiaddl
rcll
sbb
int
cmpsb
out
lret
mov
xchg
movsl
shll
iret
call
jp
shl
push
ret
pop
out
cmp
mov
ds
push
dec
jecxz
mov
mov
orb
int
je
jns
pop
mov
fstp
fisttps
cmp
cs
dec
out
pop
cli
add
fisttpl
pop
add
push
mov
or
and
add
andb
sbb
mov
movsl
xchg
imull
push
mov
push
hlt
cli
dec
lods
push
es
adc
xlat
mov
or
jb
adc
sub
test
xchg
add
inc
jo
les
stos
adc
into
mov
xor
test
sbb
arpl
test
imul
inc
out
loop
rcl
sbb
pusha
xchg
arpl
shlb
adcl
fdivl
cmc
xchg
clc
cmp
pop
push
xchg
inc
out
inc
sbb
push
std
mov
cmp
shl
pop
daa
inc
jae
or
fisubrl
and
aad
arpl
mov
loopne
cli
int
ss
or
push
scas
loopne
mov
xchg
mov
test
insb
dec
dec
fbld
rorb
out
ret
push
pop
mov
cli
shl
or
sub
push
mov
jmp
rcrl
pop
arpl
popa
xchg
imul
dec
jae
or
mov
inc
add
cmp
add
shll
xchg
sub
push
pop
int
or
add
lock
popa
popf
sbb
cwtl
cmp
sbb
stc
mov
sti
cmp
je
repnz
pop
sbb
ret
adc
cmc
iret
pushf
lret
add
push
js
repnz
mov
xor
cmp
sbb
leave
imul
push
push
jle
gs
mov
pop
pop
ja
dec
sbb
das
mov
clc
das
pop
mov
mov
mov
xchg
pop
jbe
and
data16
movsl
leave
push
mov
loop
inc
cmc
dec
clc
aas
ljmp
adc
cmp
das
mov
xchg
xor
das
add
in
add
shrl
push
in
scas
mov
inc
stos
and
and
test
cmp
sbb
sbb
lret
popf
ljmp
xchg
sub
movsb
push
mov
inc
in
mov
pop
xor
jmp
iret
fwait
xor
outsb
loope
cmp
xorb
dec
mov
xchg
xor
xor
insb
sub
loope
inc
jnp
insb
mov
iret
jae
push
data16
data16
ret
dec
out
lcall
clc
lahf
pusha
adc
fbstp
push
js
or
jl
shl
sbb
xchg
pop
dec
cmc
jecxz
pop
mov
push
popa
loope
icebp
inc
rorl
out
rcrb
push
mov
int3
insl
lahf
mov
test
sub
leave
push
sub
loope
sbb
sbb
dec
scas
jne
pop
gs
mov
push
mov
pop
inc
push
sahf
sub
pop
inc
inc
sti
popa
data16
pop
mov
shl
sbbl
cmp
push
xchg
fs
je
jns
or
pop
fidivrs
cmpl
jl
xchg
fcmovnu
sub
cmp
sbb
dec
lahf
sbb
and
mov
sub
imul
lock
cmc
hlt
mov
cmpsl
loopne
sub
stc
push
mov
xchg
enter
push
insl
scas
push
jbe
jns
out
ret
scas
jmp
or
adc
stc
or
stos
mov
sub
aaa
leave
in
pop
in
and
pop
push
xor
pop
cmp
fildll
push
fnstsw
and
mov
insl
lahf
bound
cmpsl
pushf
add
aaa
xchg
daa
sbb
fwait
lret
mov
shlb
out
pop
push
insb
addr16
into
or
enter
inc
push
mov
mov
test
fstpl
or
ret
or
aad
xor
fadds
jae
mov
fildll
sbb
pop
shlb
rcrl
xchg
loopne
jb
add
mov
std
xorb
icebp
popa
jmp
fidivs
mov
push
scas
out
pusha
jl
dec
inc
rorb
cld
es
dec
sbb
sbb
cwtl
mov
cmp
fstpl
insb
sub
je
and
in
and
add
ljmp
jb
adc
xchg
push
lret
push
mov
mov
insb
jp
sub
cwtl
push
inc
bound
sahf
xchg
cltd
push
xorl
jns
nop
test
mov
mov
fs
sub
insl
mov
sbb
movsl
lret
lock
test
jmp
add
mov
and
sub
fwait
add
mov
notb
leave
xor
jl
iret
mov
shrb
or
and
adc
mov
or
cmp
mov
dec
inc
outsl
push
aaa
out
ret
push
xor
lcall
cli
out
inc
fdivp
repnz
int3
fwait
pushf
xor
adc
mov
movsl
and
dec
repz
shll
jge
xchg
sbb
leave
mov
je
ljmp
or
scas
arpl
mov
xchg
sub
ja
dec
cld
insl
daa
ja
add
pop
pop
cmp
mov
jl
dec
inc
xchg
mov
dec
add
add
or
push
movl
shlb
iret
or
jle
sub
pop
fcmovbe
int3
and
inc
ret
dec
nop
dec
dec
xor
int
iret
aad
bound
ret
sti
fidivrl
sbbl
xlat
jmp
push
sub
add
or
popf
fst
mov
jecxz
lcall
sub
and
bound
stos
add
mov
das
pushf
jae
cmpsb
add
mov
xor
dec
add
push
add
xor
dec
adc
mov
cld
clc
lcall
popf
mov
mov
lods
inc
inc
mov
adc
lods
testb
mov
lock
ljmp
jl
xor
cwtl
imul
push
sbb
xchg
cmp
cmp
xor
clc
and
dec
and
jl
shrb
outsl
int
jne
add
in
cmp
jne
mov
fists
mov
or
aaa
mov
std
sub
sbb
xchg
test
stos
add
and
mov
add
fs
pop
loope
mov
mulb
sub
aad
ror
adc
stc
sbb
xchg
add
ja
pop
sbb
push
rcll
js
and
addr16
dec
push
lret
sub
pop
out
cmpsb
cld
xor
and
dec
gs
pop
mov
mov
push
test
outsl
or
xchg
mov
dec
sbb
test
ret
pop
imul
push
jmp
jge,pn
xor
fs
and
inc
push
lods
mov
inc
inc
in
adc
daa
test
aas
rcll
stc
gs
shlb
sub
pusha
add
jns
inc
cld
outsl
inc
jmp
in
daa
xchg
sub
cltd
sub
popf
stos
test
xor
jge
imul
sbb
movsl
inc
popf
jmp
jp
jecxz
push
adc
sub
cmp
jnp
push
jecxz
push
jmp
xchg
imul
insb
nop
fsts
ds
push
les
outsb
sub
xchg
leave
xor
in
loop
jo
movl
stc
lods
add
ss
mov
and
pusha
fwait
pop
jmp
sbb
mov
test
dec
out
sbb
jl
and
call
inc
jmp
orl
cpuid
sahf
and
pusha
insl
sub
pop
cwtl
cmpsb
cwtl
lahf
dec
out
sbb
je
shrl
into
cmp
xchg
sub
xor
xlat
bound
mov
fstpt
xorb
mov
adc
cmp
mov
jle
outsl
or
cmp
inc
xor
cmp
and
mov
xchg
push
push
mov
xor
mov
jl
jecxz
xchg
push
cld
xchg
imul
mov
aas
xor
pop
mov
ss
push
fidivrl
sub
jae
xor
iret
push
jge
test
jg
xchg
dec
jp
fwait
push
aas
sbb
ja
or
cmp
and
fldcw
cmp
xor
lret
leave
out
xchg
jmp
loope
shrb
ret
popf
dec
add
ljmp
jbe
xchg
imul
fwait
stos
push
sub
sarb
mov
pop
and
mov
loop
sbb
sbb
repnz
push
loopne
leave
mov
push
popl
and
pop
push
scas
mov
int
dec
push
mov
dec
push
stos
shll
les
add
sub
out
cli
push
stos
das
mov
movsb
and
mov
mov
add
rcr
idivb
inc
cmp
in
cmp
dec
movsl
test
sbb
call
insl
xor
or
fdivr
ret
insl
jb
outsl
aaa
mov
sbb
push
lcall
mov
scas
add
sarl
add
sbb
fwait
sbb
inc
inc
popf
cmp
push
pop
aam
fimuls
ret
inc
add
fsts
out
testb
xor
dec
stos
mov
shl
xor
adc
add
out
int3
or
pop
xchg
jp
xlat
in
jge
jno
mov
xchg
pushf
inc
stos
addb
adc
add
insl
inc
add
add
inc
lret
sbb
and
fcomp
in
nop
daa
dec
mov
inc
cwtl
cltd
and
sub
jbe
adc
js
outsl
pop
xchg
call
jmp
dec
push
lret
and
loopne
xchg
shlb
in
lahf
sub
fnstcw
jo
xchg
dec
push
stos
add
inc
ja
push
sub
pop
mov
mov
test
adc
rorb
push
movsb
pop
stc
add
stos
daa
pop
mov
or
add
add
sbb
sbb
push
popf
or
lock
or
dec
popf
sbb
jmp
lcall
xchg
test
sub
xchg
icebp
dec
add
dec
and
sbb
jno
mov
fidivl
outsb
or
ss
add
test
add
aad
jecxz
cmp
popa
adc
xchg
mov
fs
data16
pop
mov
pop
loopne
in
test
jl
testb
out
and
mov
in
insl
test
lret
jle
push
jmp
insl
cltd
test
mov
add
test
dec
inc
sti
jno
aas
mov
sbb
je
cmpsl
sub
cs
jb
cmpsb
enter
mov
pop
mov
popf
lds
xchg
inc
jne
repnz
in
and
ret
lock
xor
les
sub
or
int
imul
fwait
imul
scas
lea
or
dec
mov
outsl
pop
shlb
push
cli
cwtl
mov
cld
mov
std
xor
mov
xor
imul
or
lock
adc
mov
fdivl
mov
rolb
add
aad
mov
add
or
and
sbb
lods
or
mov
pusha
jns
inc
pop
fisubrs
aad
push
std
push
shrl
mov
icebp
add
jo
jb
stc
cmpsl
xor
pcmpgtw
test
test
xchg
fs
rdtsc
mov
sbb
js
pop
aas
pop
subb
cmc
mov
js
or
cli
cmp
xchg
sbb
pop
cmp
pop
xor
je
out
adc
mov
xor
sub
cs
insb
and
fidivl
pop
or
mov
cwtl
push
lahf
push
aaa
jmp
or
mov
xor
fsubl
fists
mov
or
mov
int
mov
dec
mov
dec
push
sbb
mov
cmp
fstpl
pop
gs
pop
mov
push
push
sbb
rolb
pop
inc
push
test
xchg
imul
aam
ret
adc
outsb
fmuls
lods
in
sub
push
adcl
hlt
cmp
jle,pn
pop
adc
pop
jb
das
lods
popa
push
or
add
mov
push
sbb
lods
sub
xchg
iret
idiv
push
loopne
leave
in
cmp
xlat
sti
ret
xorb
enter
xor
push
or
add
andb
jecxz
cltd
and
addb
fstpt
mov
inc
xor
dec
imul
adc
sub
lahf
adc
outsl
loop
push
mov
pop
into
mov
nop
push
sub
pop
jo
ja
inc
loopne
inc
xor
arpl
adc
sub
inc
push
sub
sbb
sbb
test
push
adc
lods
test
decl
data16
or
loopne
arpl
adc
mov
jo
aad
out
mov
xor
shrl
inc
popf
loop,pn
rcll
aam
in
repz
xor
xchg
call
aam
loopne
in
ja
ja
mov
xchg
inc
sti
sub
xor
mov
sbb
pmullw
mov
clc
ja
xor
dec
xchg
cmc
mov
icebp
mov
mov
stc
ffreep
push
mov
mov
sti
icebp
push
jl
pop
adc
out
rcr
aas
call
cwtl
data16
xchg
cmovg
inc
mov
repnz
shlb
mov
dec
fs
lcall
hlt
stc
and
xor
scas
add
aam
lcall
ficomps
das
mov
lods
push
jp
push
jge
add
shl
sub
and
xchg
sub
into
in
xchg
in
call
test
loopne
cmp
push
push
mov
sbb
fmull
dec
or
pop
mov
not
pusha
fcoml
roll
loopne
hlt
adc
mov
cmp
push
stos
enter
negl
add
adc
xchg
mov
jno
sub
pop
lahf
and
inc
xchg
adc
adc
fisttpll
inc
dec
xor
pop
repnz
lods
xor
popf
mov
mov
adc
and
int3
inc
fsubrl
mov
ror
outsb
xchg
into
add
icebp
in
mov
dec
jge
push
inc
add
pop
int3
push
cmc
aaa
cmc
pop
sbb
cld
push
icebp
mull
and
push
push
mov
push
push
lret
sarl
lret
jno
shrl
popf
and
pop
adc
sub
imul
mov
stc
mov
sbb
push
popa
jmp
das
dec
cmp
out
outsb
pop
xor
lock
xor
stos
jg
jo
add
lea
jmp
mov
dec
jb
mov
mov
clc
mov
or
rcl
imul
add
stos
xchg
daa
fimull
xor
sbb
push
sti
in
mov
ret
cmp
jp
xchg
lds
push
mov
or
jp
xchg
inc
addl
out
hlt
out
idivl
outsl
pop
lret
pop
cmc
test
fnsave
xlat
xchg
imulb
fnsaves
inc
fimuls
push
test
pop
jns
sub
ficoms
cmp
jb
add
xor
jmp
mov
idivl
cs
movsb
add
cmp
adc
cmp
sbb
xchg
xor
test
into
dec
roll
repnz
add
pop
fwait
lods
outsb
iret
insb
inc
or
fisttpl
adc
mov
inc
scas
hlt
aad
xor
int3
inc
pop
rdmsr
pop
popa
jno
dec
ret
ds
adc
aam
add
inc
adc
jmp
jo
push
jmp
xchg
jecxz
loop
xchg
mov
lods
mov
insb
or
das
stos
mov
jecxz
push
decb
lret
loopne
dec
or
push
ss
cwtl
cmp
jecxz
mov
cwtl
add
pop
and
aam
cmp
add
lret
lret
cmpsl
or
jae
xor
sbb
ret
roll
data16
fsubrs
xorb
cmpsb
adc
aaa
test
jnp
mov
push
mov
loopne
adc
stos
out
nop
inc
xlat
mov
xor
inc
xchg
inc
pop
pop
ret
jb
out
lock
arpl
pop
pop
dec
mov
mov
pop
sub
push
mov
jl
je
sbb
sub
dec
into
pushf
out
mov
rol
es
push
imul
mov
lret
imul
push
and
js
cmp
ficoml
and
xchg
ljmp
inc
test
repz
stc
mov
scas
loopne
mov
sbb
loope
ljmp
dec
or
cmp
int
inc
stos
pushl
movsb
adc
inc
jge
add
inc
add
jne
jmp
cmp
mov
popa
dec
push
sub
jle
jp
jnp
cmp
fwait
mov
mov
loop
sbb
xor
sub
call
pop
jne
testl
js
add
roll
call
rcrb
mov
mov
push
mov
sub
inc
popf
mov
es
mov
fs
push
nop
sub
dec
adc
bound
mov
xor
rcrl
subl
das
daa
sbb
test
push
out
mov
jmp
inc
push
in
out
jbe
inc
js
out
bound
push
xchg
and
jp
xlat
dec
and
cmpsl
ss
fbld
arpl
aam
inc
pop
roll
jmp
inc
sahf
add
inc
ret
shrl
dec
or
ljmp
cltd
sbb
adc
push
int
in
rclb
dec
dec
mov
dec
inc
imul
hlt
lods
push
outsl
out
inc
and
sti
push
jb
mov
pusha
mov
adc
outsl
mov
mov
dec
pop
stc
pop
test
lcall
or
push
in
cli
pop
imul
fs
push
xlat
sbb
out
or
mov
sub
sub
cmp
pushf
stos
ljmp
or
jo
dec
into
pop
sbb
or
int3
pop
or
aas
lahf
inc
imul
inc
and
call
aam
je
ja
jg
fidivrl
mov
xor
daa
fcomp
mulb
loopne
sub
outsb
xchg
nop
fsts
stos
or
and
pop
pushf
mov
push
sbb
xchg
into
fldcw
rolb
add
stos
pusha
outsb
jecxz
mov
and
xor
pop
out
sbb
xor
adc
sbb
clc
data16
loopne
lods
ror
cmpsl
cmpsb
loope
jns
in
adc
add
in
or
inc
orb
inc
fcompl
jnp
mov
outsl
shll
push
enterw
dec
pop
push
imul
popa
cwtl
enter
sub
shl
sti
sti
inc
sbb
dec
and
and
pop
lcall
mov
pop
insl
mov
sub
jbe
xchg
pop
test
movsl
push
jae
mov
addl
xchg
pop
stc
jbe
mov
adc
mov
cmp
jns
scas
subb
xchg
daa
and
pop
int
jle
out
push
mov
lods
rorl
std
fcompl
xorb
and
push
aam
ljmp
leave
imulb
sbb
lods
add
dec
xor
js
iret
test
frstor
ret
cmp
mov
outsl
mov
xlat
xchg
pop
pop
cmpsb
push
pusha
ja
adc
subl
js
shl
pop
cmpsb
je
cs
xchg
sub
push
jl
movl
xchg
stc
stos
push
cli
outsl
or
or
popf
ret
sbb
sahf
cwtl
fistpll
scas
out
jecxz
push
lahf
or
dec
repz
imul
inc
jne
sbb
std
lret
daa
pop
jge
or
aaa
pop
and
loope
adc
dec
test
jecxz
into
test
adc
lahf
inc
addr16
mov
pusha
mov
pop
xchg
add
jl
xchg
dec
xor
test
rorb
jo
push
sub
fwait
mov
xchg
inc
adc
jp
push
adcb
dec
xchg
inc
xchg
test
sti
movsl
int3
adc
les
lds
push
arpl
mov
push
addl
test
mov
lock
pop
add
jne
loop
sahf
ficoml
test
je
cltd
mov
xorb
sbb
repz
xor
jnp
add
pushaw
mov
testb
andl
mov
mov
jb
xor
ret
ss
inc
pop
sub
sub
imul
movsb
push
xchg
lahf
vreducesd
or
xor
fisttps
cmp
aam
imul
cmpsl
push
push
in
rcl
idivl
mov
fwait
clc
inc
inc
add
push
js
xor
sbb
mov
cmpsl
stos
add
push
mov
fs
loop
dec
sarb
pop
mov
incl
mov
shll
mov
in
test
dec
jo
pop
jecxz
dec
sbb
out
mov
jbe
sub
ja
pop
lods
jp
ret
pusha
pop
push
hlt
mov
mov
pop
movsb
fadds
cmp
fldl
adcb
jno
pop
xor
test
rorb
leave
ret
sbb
les
or
divb
fisttpll
fdivl
add
cmp
mov
pop
mov
xchg
xor
aas
sub
dec
push
mov
sub
lea
lret
daa
lret
movsl
push
and
mov
pusha
jle
psubsw
pop
jne
dec
xchg
inc
pop
testb
shll
pop
lds
and
mov
fwait
xor
mov
test
adc
inc
inc
outsb
mov
xchg
lahf
dec
inc
push
sbb
pop
mov
adc
cmpsb
into
mov
scas
aaa
in
inc
inc
ds
fisttps
cmp
leave
sub
add
rorb
cltd
or
mov
movsb
jecxz
mov
into
fiaddl
pop
cmpb
sub
adc
or
fnstenv
mov
shlb
sahf
fcmovnu
cli
aad
cmp
daa
bound
nop
stos
and
lea
mov
jmp
rorb
scas
jns
inc
pop
sub
cmp
mov
xlat
cli
scas
push
sahf
loop
in
and
fwait
xor
push
and
stos
cwtl
pop
mov
sbb
std
jecxz
loop
rorb
shrl
pop
jo
mov
adc
mov
xchg
icebp
mov
adc
inc
sub
jno
rol
push
or
in
imul
cli
ficoms
add
pop
xchg
push
fs
jl
cmp
add
inc
pushf
xorb
fdivl
lock
in
outsb
mov
dec
sub
and
xchg
enter
inc
xchg
ss
inc
filds
mov
mov
pop
push
pop
rol
cmp
sti
je
cmp
fsub
clc
and
rcl
das
lea
inc
mov
repz
repz
js
pop
rolb
mov
and
dec
int
imul
loop
jle
flds
push
mov
cld
fsubrs
insl
add
jp
inc
or
movsb
incb
repz
xchg
inc
dec
pop
or
fsubrl
sti
rcl
cmp
int
xchg
in
and
call
cltd
mov
push
inc
mov
stos
rolb
loope
push
int
popa
dec
into
andl
mov
xor
xor
dec
or
insl
mov
dec
jae
and
inc
push
cmc
xchg
stc
xchg
fstl
and
pop
xor
dec
xchg
out
ja
dec
jbe
out
mov
sarb
hlt
adc
dec
jnp
ds
xor
adc
test
outsl
pusha
hlt
xor
mov
test
jg
test
mov
jae
mov
je
mov
lods
out
adc
dec
cmp
ret
loope
inc
ss
xchg
lret
pop
or
data16
cmc
mov
adc
daa
inc
nop
pop
clc
aam
insb
mov
adc
out
jb
into
test
leave
mov
xor
sub
jnp
mov
mov
pop
mov
scas
dec
rdtsc
inc
ja
ret
dec
sbbl
cmpsb
cmp
push
aaa
out
mov
xor
sbb
fnstcw
sub
int
ret
jbe
dec
outsb
ljmp
icebp
int
outsl
mov
pop
jge
rolb
mov
inc
fidivrl
push
and
inc
dec
dec
adc
inc
int
cs
mov
mov
into
add
fidivrs
sbb
jmp
jmp
test
fisubrs
lods
dec
pop
mov
mov
cltd
arpl
inc
sbb
add
add
pushf
push
xchg
mov
xor
call
sub
add
in
aaa
sub
mov
dec
add
push
fildll
sti
inc
loope
mov
adc
sarb
ret
in
mov
arpl
clc
mov
cmpsl
cmpl
and
dec
jmp
xor
mov
adc
adc
or
mov
popf
adc
and
out
ret
shll
cmp
mov
jmp
lahf
jl
mov
lahf
pop
fcmovnbe
pop
xchg
jge
popf
pop
inc
add
and
fs
mov
rolb
dec
cmp
xchg
repz
adc
je
or
jns
test
in
scas
mov
out
popa
imul
test
cs
jge
out
fstpl
mov
xor
bound
std
add
jbe
lcall
dec
inc
addb
cmp
or
sub
std
aas
mov
sub
cli
outsb
and
cmpsb
test
push
leave
ds
stos
iret
jno
jo
pushf
mov
or
jl
mov
add
shl
loop
imul
divb
sar
sahf
push
fimuls
addb
xchg
dec
xor
data16
push
mov
test
out
sub
jg
mov
mov
push
repnz
sub
pop
add
loop
mov
pop
mov
xchg
fdivl
push
das
pop
lcall
test
lret
add
nop
cmp
leave
jmp
dec
mov
sbb
cmp
int3
mov
jnp
fadd
fbld
shrb
or
mov
push
sbbb
mov
jbe
fistl
push
and
cli
cs
rol
jmp
adc
jecxz
or
sbb
xor
mov
dec
enter
jecxz
fsubr
adcl
jg
xchg
and
xlat
mov
bound
test
sbb
xor
aad
cltd
adc
adc
cli
cltd
cs
stc
cmpsl
inc
out
and
mov
cmpsb
and
mov
ret
xlat
add
push
cmp
rorl
cmc
and
cwtl
popl
push
xchg
push
dec
insb
mov
cli
jg
push
cmp
pop
icebp
sub
sbbl
xor
movsl
inc
insb
movsl
ret
fs
andb
shlb
inc
mov
mov
bound
add
aam
fbstp
ds
pop
jmp
lods
push
gs
dec
pusha
das
sbb
jmp
jno
in
and
adc
outsl
jae
fstl
std
pop
inc
push
stos
mov
ret
icebp
xchg
dec
push
add
pop
cmpsl
inc
lock
cmp
sbb
into
inc
and
lods
inc
mov
jp
mov
inc
xchg
imul
stos
jmp
lock
push
cmpsl
xchg
mov
jns
mov
scas
cwtl
xchg
sub
sbb
mov
enter
pop
cld
inc
scas
dec
dec
test
clc
test
cmp
hlt
adc
push
xor
xlat
push
pusha
push
mov
in
mov
jmp
xchg
stc
fprem
fisttpl
cmp
sbbl
or
xor
dec
rcr
adc
sbb
pusha
or
jns
jnp
out
stos
clc
lds
outsl
faddl
dec
idivb
fsubrl
stos
mov
aad
cmc
xchg
sub
sbb
in
dec
or
push
inc
push
mov
jae
cmp
jo
jae
adc
sub
clc
out
sbb
shrl
in
adc
jne
and
add
add
stos
push
pop
inc
lahf
add
stos
dec
andb
rcrl
mov
jge
frstor
jmp
push
add
ds
xchg
mov
lds
scas
cltd
adc
ljmp
inc
mov
test
enter
rolb
sbb
stos
mov
sbb
test
or
sub
mov
mov
ficoml
lcall
addb
xor
mov
jmp
cld
xchg
xchg
hlt
dec
daa
sbb
pop
xchg
jge
insb
mov
aam
mov
adcb
jb
aad
mov
ficomps
dec
mov
sbb
insb
push
cmc
jmp
in
push
mov
sub
stos
andl
ds
cmp
xchg
pop
add
and
in
sbb
sbb
pop
or
lcall
jmp
cld
jnp
les
out
pop
loopne
cwtl
imul
out
and
fcmovnu
lods
push
or
fisttpll
in
outsb
jl
aad
jbe
fldl
xchg
gs
test
pushf
mov
inc
pop
adcl
clc
jbe
jnp
int3
movsb
andl
cmp
int
out
sbb
cmp
aaa
filds
inc
imul
insl
jbe
cmc
loop
sarl
cwtl
enter
cli
mov
jbe
xor
sub
mov
mov
aas
xlat
pop
arpl
jbe
fmull
cli
js
sub
mov
movsl
fildl
loopne
sbb
cmc
sbb
push
loop
mov
imul
cli
daa
or
outsb
iret
pop
out
push
fbld
inc
cmp
lds
pop
imul
lcall
orb
shrl
sti
lahf
cltd
mov
fmuls
mov
add
xchg
stos
cltd
hlt
cmp
es
add
sub
insb
push
outsb
push
jbe
call
cmp
xchg
loopne
and
pop
loopne
lds
lahf
mov
xor
aaa
cmp
xor
jno
call
jmp
mov
cwtl
sub
and
mov
ficomps
xchg
mov
adc
fcomip
lods
out
dec
popf
fadds
stc
push
fwait
jne
stos
sarb
sbb
sub
mov
cmp
addr16
add
push
mov
rolw
mov
dec
jbe
lods
js
movsb
pop
and
or
pop
cld
mov
fistps
sbb
mov
clc
inc
sbb
xor
add
mov
push
nop
test
test
mov
mov
ljmp
or
dec
les
fnsave
dec
pusha
pop
jno
jle
and
and
aas
inc
cltd
mov
outsl
dec
push
das
loope
adc
xchg
push
add
push
dec
and
dec
fdivp
or
ret
ja
jecxz
and
jnp
jg
mov
cmpsl
pop
pop
sub
add
or
cmovbe
and
add
inc
call
adc
push
in
add
cmpsb
aam
test
pop
cmp
cmp
stos
adc
jle
pop
jmp
and
add
gs
sarl
inc
mov
pop
sbb
pop
xor
int3
xor
mov
or
fnstenv
mov
jmp
sbb
sti
aam
fs
ret
popa
jp
xor
sub
ja
dec
stos
js
rolb
add
or
frstor
adc
adc
imul
push
and
cmp
push
jle
das
sbb
hlt
arpl
mov
and
in
loope
popf
inc
leave
outsb
popa
fimuls
inc
adc
mov
mov
into
push
lea
jae
dec
push
stos
roll
mov
mov
or
sub
mov
call
shl
cs
push
mov
push
mov
in
dec
pop
jns
push
aas
adc
ret
adc
aas
dec
das
gs
mov
pusha
inc
pop
fildll
rcrb
insl
sbb
mov
cld
push
out
int3
in
mov
lock
push
pop
cmp
dec
test
jno
mov
push
fstpt
inc
mov
sub
dec
sbb
mov
dec
or
xchg
sub
cs
jne
mov
ret
mov
inc
repnz
out
xor
movsb
lret
daa
dec
fstps
addr16
xor
inc
into
cmpsb
call
xchg
out
jb
and
pop
jnp
lea
inc
mov
mov
std
cmp
mov
hlt
mov
mov
or
sbb
mov
das
jmp
add
int3
arpl
les
add
dec
xchg
mov
cld
repz
fnsave
mov
mov
push
cli
sub
mov
scas
xor
mov
pop
movl
loopne
and
out
rol
dec
or
cltd
in
and
lidtl
and
mov
sub
imul
fildll
das
xchg
jmp
fadd
shrl
xor
es
inc
pop
sbb
xchg
jnp
jg
or
or
inc
pop
loope
ret
pop
xlat
shll
imul
popa
mov
add
jae
leave
cmp
test
mov
lods
dec
lret
and
cwtl
outsb
inc
adc
mov
fdivl
outsb
jbe
lds
xchg
sbbb
not
scas
add
cmp
and
push
add
repz
sub
mov
adc
aaa
mov
and
add
cs
inc
std
fwait
mov
mov
pop
subl
mov
ret
mov
cmp
mov
in
pop
cltd
fstps
ja
gs
call
cmpsb
les
pop
je
icebp
sahf
in
sbb
pop
out
and
sbb
cmp
test
inc
mov
lods
pop
xor
out
jno
pop
mov
dec
mov
inc
cmp
push
xor
aam
cli
std
push
mov
mov
cwtl
push
mov
out
fwait
mov
xchg
sbb
push
sahf
sbb
arpl
dec
jns
imul
sbb
sbb
loop
and
cmp
push
mov
gs
jmp
add
xor
bound
hlt
xchg
jl
jge
dec
xlat
mov
jns
ret
cmp
lock
aas
sbb
out
push
ficomps
mov
xchg
movsl
mov
and
shr
das
fcompl
mov
hlt
fwait
fs
add
adc
repnz
mov
pop
sub
mov
idivl
idivl
jnp
je
jmp
or
xchg
popf
adc
fldcw
mov
adc
or
es
xor
jb
sahf
in
shlb
imul
movsb
insl
mov
xlat
lahf
out
sub
repnz
or
enter
aam
add
fnstcw
fbstp
push
inc
push
and
mov
mov
push
cmp
adc
push
movl
pop
add
out
outsb
inc
cmpsl
push
ror
sti
fbld
stos
mov
sub
inc
test
dec
dec
and
and
ljmp
mov
test
out
lods
rolb
in
decb
popf
int
mov
data16
sbb
add
pop
lret
or
int
inc
cmp
sub
xchg
jae
psubsb
mov
je
lea
dec
jge
pusha
and
adc
lods
adc
lret
jnp
out
repnz
push
or
dec
push
fcoms
scas
nop
and
out
cmpsb
test
xor
push
cmp
inc
shl
cmp
xchg
pop
pop
mov
pushf
inc
mov
ret
loope
pop
not
add
loope
cmp
xchg
data16
mov
adc
lock
push
test
sbb
pop
int3
fidivs
aam
cli
in
cmp
mov
sub
loop
pop
lds
jne
cmp
dec
stos
mov
mov
popf
dec
aad
mov
ds
popf
aas
fisubl
and
mov
jg
sbb
pop
inc
je
das
lods
test
push
jb
sbb
adc
dec
ficoml
lods
out
pop
push
mov
das
lgs
cmc
xchg
cmp
xor
mov
into
push
push
int3
rcl
cld
out
lods
lea
cmp
pop
inc
out
aas
enter
sub
call
sub
mov
push
movsb
mov
aas
pop
lds
mov
cmc
push
sahf
add
and
outsl
sbb
outsl
sti
orl
cmc
mov
inc
jno
mov
test
or
mov
test
xor
cs
cmpb
mov
and
dec
sahf
or
jl
inc
mov
lds
mov
aam
mov
inc
add
and
jae
insl
dec
push
mov
addr16
aaa
mov
test
mov
outsb
bound
xor
icebp
repnz
dec
testl
ds
andb
std
mov
rcrl
jns
mov
pop
je,pn
shlb
clc
push
cmp
jns
mov
and
je
cmp
insb
scas
decl
sbb
fists
mov
xor
sahf
ljmp
enter
in
lret
pushf
or
pop
lock
mov
out
aas
hlt
stos
movsl
adc
in
orb
push
jecxz
xchg
loopne
mov
dec
neg
data16
sbb
lret
sub
frstor
dec
unpcklps
xlat
pop
sub
add
mov
push
lret
movsl
cmp
inc
out
fcoml
sub
test
jnp
shlb
mov
out
pop
xlat
fadds
adc
cmc
jbe
or
xchg
lods
outsl
gs
loop
fwait
dec
jle
das
jb
test
mov
cmpsl
pushf
adc
dec
sarl
and
add
lret
sbb
adc
call
jno
icebp
jp
mov
insl
push
faddl
enter
dec
call
std
and
lret
notl
push
xor
and
test
repz
add
push
jns
dec
cmp
outsl
xor
mov
push
mov
leave
roll
adc
adc
out
cli
ret
test
popf
movsb
jp
rorb
jns
jo
in
fisubrs
fldt
add
scas
and
pop
push
dec
dec
and
adc
or
jae
inc
das
dec
sub
jne
bound
jbe
pop
sub
shll
ret
aas
gs
and
outsl
mov
adc
dec
xchg
inc
mov
mov
xchg
xor
dec
dec
push
aam
repnz
cmp
stos
add
icebp
into
cmpsb
fstps
cmp
and
xlat
dec
rcrl
stos
faddl
inc
fidivs
aam
sub
adc
mov
cmpsl
repnz
dec
dec
jge
mov
sahf
dec
mov
mov
add
fstps
nop
jecxz
push
cld
fs
jecxz
push
jge
pop
xchg
popf
stc
mov
aaa
movsb
push
xchg
ficoms
sbb
mov
inc
cmp
cwtl
or
sub
scas
jno
js
and
push
call
push
cmp
data16
gs
adc
jmp
mov
lahf
addr16
mov
pop
gs
call
in
mov
sbb
aas
or
in
leave
push
cmp
pop
cmp
dec
movsb
orl
or
sbb
es
mov
mov
push
flds
popa
pop
pop
xchg
clc
cmp
sbb
cmp
or
lret
jp
pop
mov
outsb
sahf
loope
xchg
movsl
jne
and
add
cld
xchg
push
jno
add
out
push
mov
ret
dec
inc
push
popf
inc
loope
cmp
iret
test
movsl
loope
lock
cld
aad
sub
cmp
mov
sbb
popa
out
sbb
cmpsl
lods
outsl
pop
repnz
sbb
fstpt
xchg
mov
cmpsl
xchg
aam
popa
aaa
cmp
scas
pop
jl
pop
adc
stc
and
inc
add
push
mov
inc
scas
push
add
add
jnp
cmp
popa
push
or
test
jg
push
sub
bound
or
xchg
mov
dec
shl
xor
nop
pop
pop
xor
cmp
jmp
xchg
add
push
mov
push
and
fs
push
cmp
mov
cmpsl
ds
mov
xchg
xor
jb
rol
scas
sahf
popa
repz
inc
ds
cmpsl
dec
sahf
pushf
jbe
xchg
xchg
cmp
leave
sbb
fisubs
dec
cmp
push
jge
popf
xchg
push
popa
shlb
sahf
icebp
cmp
add
aad
add
pop
fcoml
cmp
xchg
mov
les
and
nop
leave
xchg
pop
popa
ljmp
insl
in
mov
sub
adc
scas
and
shlb
dec
push
mov
cld
dec
push
lcall
and
or
add
negb
mov
outsl
icebp
push
cltd
sbb
xor
andb
jecxz
cli
xor
dec
cld
push
cmp
je
inc
movsl
cmp
jo
sahf
adc
pop
sbb
mov
pop
data16
sti
xchg
adc
jno
jl
dec
lea
outsb
sub
fdivrs
dec
aam
dec
sahf
adc
and
mull
addr16
xchg
lods
sbb
or
hlt
fstps
add
pop
dec
inc
xchg
mov
add
insb
jp
push
jae
aas
mov
cltd
dec
sbb
rclb
sub
mov
popa
adcb
pop
rcrl
pop
mov
ret
cmp
shll
scas
sbb
pop
bound
pop
fs
je
rorb
sahf
rolb
in
mov
add
pop
add
pop
ret
mov
loope
inc
push
and
shlb
loope
cwtl
lock
adc
xor
xor
mov
in
lods
xchg
inc
jae
cmp
int3
mov
movsl
lea
ret
sub
dec
or
mov
dec
pop
out
loop
std
fcomps
mov
push
pmaddwd
cmpsb
cltd
xchg
jno,pt
imull
sub
out
push
dec
sti
add
loop
mov
sbb
pop
mov
and
mov
add
movsb
bound
ja
adc
sbb
mov
jecxz
iret
mov
lods
mov
pushf
mov
into
xor
push
jecxz
jle
in
and
adc
mov
popl
dec
xchg
leave
jg
inc
xchg
pop
pop
or
outsl
in
xchg
xchg
add
daa
iret
push
mov
xor
cmpsl
test
cmp
jg
stc
jl
and
pop
inc
jns
sbb
sbbb
xchg
outsb
push
stc
je
outsl
iret
push
inc
insl
mov
loopne
lods
fs
fidivl
fndisi(8087
dec
in
test
dec
mov
push
scas
stc
mov
sub
popa
fs
pusha
loopne
movlps
mov
inc
pop
rorb
pop
inc
out
inc
int
imulb
scas
incb
cmpxchg
aam
pop
xchg
dec
push
test
inc
sahf
push
cwtl
sub
inc
pop
dec
xor
out
jmp
mov
adc
jno
xchg
popf
and
iret
ret
cmp
add
mov
jno
mov
push
push
lock
inc
out
lret
fs
push
mov
testb
addr16
cltd
jns
jmp
leave
mov
push
out
sbb
sub
inc
in
push
xor
push
dec
lock
push
stos
jne
push
dec
test
in
cmp
repz
loope
jb
aam
call
xchg
jo
in
push
pop
mov
lock
xchg
sub
cmpsb
fdivrl
addr16
pop
sub
mov
add
xor
aam
dec
pop
inc
stos
movsl
inc
repz
jns
dec
shlb
cmp
sub
cmpsl
mov
stos
mov
shlb
insl
dec
enter
sbb
xlat
dec
xor
xlat
lcall
icebp
js
and
or
mov
lcall
dec
inc
pushf
nop
jnp
inc
jae
push
inc
xchg
call
push
xchg
jns
mov
repnz
insb
dec
popf
jae
pushf
aam
add
add
out
jno
push
pushf
stc
mov
lret
jge
cltd
outsb
dec
xchg
rcl
xchg
jl
mov
dec
fdivrl
fsubs
push
adc
jae
add
sahf
fadd
pop
stos
jno
add
xchg
push
dec
push
std
jg
xchg
sti
in
xor
or
pop
xor
lods
add
push
bound
aam
add
outsl
inc
xchg
add
fsubs
xor
jno
sahf
xor
mull
jmp
mov
ds
fisubrs
push
and
in
mov
clc
aaa
add
std
sbb
stc
xchg
loop
mov
fidivrl
pop
sub
pop
in
test
mov
cli
lods
loopne
popa
es
xchg
pushf
dec
in
cmp
das
nop
jmp
sub
jge
sbb
and
loop
daa
cmp
out
pop
xchg
hlt
sub
or
mov
xchg
das
jecxz
push
inc
push
cli
jnp
lcall
sti
imul
sar
and
sub
adc
xor
in
xchg
lock
adc
mov
lock
add
cmpsb
ret
rcrl
pusha
cmpsb
fdivrl
ljmp
dec
sti
dec
push
cmp
loope
xchg
sbb
xchg
xor
les
sbb
into
jp
jg
out
xor
sbb
sub
pop
mov
or
loopne
inc
cmp
divb
aaa
fsubs
stc
roll
mov
inc
loop
loopne
mov
dec
ret
and
mov
lcall
mov
mov
popa
mov
sti
shll
fildll
xchg
hlt
ljmp
xchg
sbb
lock
dec
add
cld
pop
mov
xchg
and
cltd
lret
inc
ror
call
cmp
hlt
cmp
adc
jbe
push
pop
add
aam
dec
xlat
mov
test
cs
jo
imulb
lds
popa
std
stos
pop
push
pop
loop
pop
jne
jno
mov
mov
loope
cmp
lret
or
xchg
pop
std
inc
dec
xchg
cmp
imul
jo
jae
into
inc
cmp
in
pushf
idivb
in
dec
rcll
sbb
or
orb
out
fiadds
and
cwtl
call
cwtl
leave
adc
sub
rclb
pop
jbe
xchg
xchg
stos
and
mov
imulb
add
push
mov
push
aam
jl
bound
sbb
cmp
fstps
add
ret
push
in
cmp
dec
cwtl
pushf
push
pusha
insb
add
jnp
lret
hlt
dec
lock
je
loopne
mov
imull
cmp
movsl
sbb
or
inc
adc
shll
into
scas
xchg
dec
cli
or
sti
stos
adc
push
lret
dec
mov
and
jle
arpl
pop
or
iret
cmp
sbbw
push
dec
shll
jb
or
or
mov
mov
inc
imul
fwait
shlb
add
ljmp
mov
or
pop
int
daa
lahf
push
sub
dec
or
mov
push
out
rcl
cmpsl
push
mov
out
push
sbb
lods
or
mov
jl
dec
daa
inc
adc
jns
cwtl
cmpsl
adc
stc
lret
pop
mov
loope
jecxz
ret
mov
les
andb
testl
jnp
inc
sahf
daa
sub
mov
ret
cmp
jnp
popa
loope
scas
push
mov
sti
mov
insl
and
sti
pop
aam
int3
fcmovu
dec
fsubrs
test
push
fisubrl
sti
mov
inc
mov
and
mov
outsl
test
in
outsl
fidivrl
xchg
jnp
or
test
sbb
mov
pop
scas
fmulp
sbb
pop
inc
rcrb
addr16
inc
push
sub
iret
and
insb
push
clc
outsb
inc
stos
sti
cmp
add
test
in
push
aaa
fmuls
cwtl
jle
sub
idivl
loope
in
ds
cmp
xor
sahf
sbb
mov
loope
outsl
fidivs
lods
or
pushf
cmc
xchg
mov
sbb
outsl
in
push
inc
fstl
mov
lea
movsb
mov
push
gs
andl
mov
test
jnp
sahf
adc
and
pop
mov
rcr
bound
ja
push
frstor
lock
lretw
lods
lret
lock
add
loope
idivb
mov
jle
lods
inc
mov
movsb
xchg
movsb
pop
lcall
cwtl
lods
xchg
sbb
cmp
call
sbb
cmp
mov
or
pop
mov
test
pop
out
gs
test
lock
out
mov
xchg
pop
cmc
and
mov
ret
lcall
mov
jne
cmp
es
pop
and
add
js
in
add
clc
test
mov
fldl
sarb
loopne
or
outsl
sbb
jo
cmp
aaa
in
daa
testb
mov
sub
data16
rcll
std
jno
mov
insl
or
push
sub
loopne
insl
xchg
or
push
sub
out
ja
imul
jno
adc
into
fwait
and
roll
add
cmp
push
in
dec
movups
sub
repz
and
movsb
cmp
add
pushf
sbb
sub
and
test
lods
out
popl
add
mov
subl
mov
faddl
ficoml
outsl
es
sub
pop
call
xchg
cli
xchg
sbb
push
adc
mov
inc
jae
pop
add
cmpsl
addr16
cmc
inc
adcb
sahf
mov
jecxz
jl
test
lea
mov
test
lahf
pop
mov
jae
cmpsl
fwait
sbb
push
xchg
push
lds
mov
push
push
outsl
repz
mov
or
and
pop
pop
mov
or
or
jl
jns
inc
das
cmp
dec
jp
xor
fs
mov
les
push
adcl
bound
ret
mov
xor
push
pushf
add
insb
shll
outsl
xchg
dec
movsl
jo
mov
cli
lods
insl
pop
pop
adc
test
sarb
std
mov
insl
popa
insb
pusha
dec
or
fmul
sub
inc
movsb
push
mov
cmp
mov
adc
jns
mov
push
addr16
xchg
test
jmp
ss
sti
sarb
xchg
shlb
lret
jne
mov
jno
pop
hlt
jle
lods
ror
ret
inc
add
popa
popf
lods
jle
cmp
lock
cld
int
daa
fisubrl
fcoml
ficoml
pushl
pop
stos
push
mov
and
imulb
pop
pop
fcomp
pusha
pop
pushf
jge
imul
negb
ss
iret
mov
out
ja
push
ss
jl
movl
pusha
decb
les
stos
ret
pop
jmp
jb
les
xor
mov
pushf
outsb
lods
xorl
and
mov
push
aam
enter
jg
das
dec
int3
mov
movsb
xchg
nop
pop
fcompl
std
push
xor
in
sub
fcoms
xchg
ds
jl
test
and
mov
gs
or
jns
insb
push
xor
loopne
divl
inc
fcmovu
ss
or
adcb
ja
xchg
ss
out
andb
dec
add
and
jne
mov
pop
out
xor
xor
insb
in
bound
std
ret
cltd
jp
jnp
mov
or
pop
push
mov
pop
mov
shr
pushf
cmp
jnp
stc
cmp
sbb
hlt
add
icebp
mov
lret
mov
scas
xchg
sti
sub
cmp
lret
insb
pop
cmpsb
mov
repnz
xchg
or
call
jns
mov
mov
mov
adc
sbb
fisttpl
xchg
push
sahf
int3
imul
rcr
mov
mov
add
pusha
adc
push
lret
mov
jbe
pop
mov
jbe
repz
jbe
sub
jp
ret
sub
fwait
xor
or
ffreep
inc
pop
loope
pop
sbb
shlb
fdivrs
rcrb
xchg
dec
inc
out
iret
and
loop
cmp
idiv
inc
push
int
dec
adc
mov
in
mov
xchg
sub
in
xchg
fdivl
nop
out
lret
in
mov
lock
test
lret
xchg
and
fsubp
mov
or
cmp
rcrb
in
and
mov
jns
add
cmp
jp
jge
mov
adc
mov
and
mov
mov
cmp
out
shl
bound
mov
jb
mov
pop
jo
sbb
test
or
cmpsl
test
inc
mov
in
mov
pop
adc
jecxz
int
sub
cmp
inc
fwait
dec
lret
nop
fisubrs
cld
mov
cmp
bound
mov
popf
mov
pop
sub
pop
in
xchg
scas
mov
data16
sbb
dec
into
leave
dec
add
xchg
pop
popa
push
push
popf
in
outsb
sub
mov
jno
out
pop
scas
dec
mov
mov
push
sbb
scas
dec
mov
jl
jo
push
jp
push
mov
in
dec
xchg
int3
push
and
mov
lods
js
lahf
pop
pop
mov
adc
cli
not
cld
in
pop
and
nop
outsl
addr16
bswap
repnz
test
mov
or
dec
decb
and
aaa
jp
add
je
testl
mov
xor
loopne
mov
add
daa
and
push
mov
pop
xor
mov
jge,pn
xchg
jbe
add
or
add
sub
adc
outsl
ret
adc
mov
enter
loop
mov
inc
mov
and
or
push
aaa
test
scas
or
dec
pop
iret
xor
cmp
mov
mov
sub
into
popa
mov
scas
sbb
cli
adc
xor
lret
sbb
dec
fistpll
cmp
jne
mov
inc
outsb
fidivl
push
int
int
mov
subl
flds
sbb
int3
mov
mov
dec
iret
out
dec
pop
mov
mov
push
adc
orl
dec
cmc
xor
ret
js
out
testl
adc
xchg
xlat
not
lahf
iret
ja
mov
add
int3
data16
mov
xchg
cmpsb
sbb
mov
sub
jne
jb
and
out
inc
out
fldenv
xor
imull
and
ljmp
sbb
push
lods
repnz
mov
cmp
subl
rep
mov
mov
and
in
cmp
add
int3
mov
jecxz
xor
add
cmp
and
fwait
sub
dec
js
clc
mov
inc
roll
fisubl
mov
int3
loope
or
inc
iret
push
xorl
cmp
cltd
ss
mov
enter
jge
inc
inc
mov
xor
les
push
mov
jmp
call
repz
outsl
sub
adc
pusha
insb
sub
xchg
icebp
mov
aas
mov
cmpsl
stos
int
sub
or
je
mov
aam
sahf
mov
stos
pop
popa
nop
push
jle
insl
ljmp
jecxz
or
jnp
out
fists
inc
push
dec
andl
outsb
mov
stc
inc
xchg
leave
in
cmpsl
mov
test
inc
push
inc
dec
xchg
out
inc
in
mov
sub
cwtl
adc
mov
dec
jae
lods
enter
lcall
or
lds
pop
xor
xchg
sbb
mov
das
xor
lret
out
adc
jnp
addl
mov
aam
lods
repz
scas
sbb
dec
sub
lahf
stc
or
cmpsl
fs
jecxz
dec
jne
dec
push
mov
dec
add
cmp
fldcw
xchg
ret
or
popa
imul
sub
and
sbb
nop
xor
mov
scas
mov
cwtl
movsl
pop
dec
ja
mov
sbb
push
sbbl
arpl
mov
andl
xor
mov
mov
xor
addl
mov
lock
xorb
jl
inc
jl
sub
aas
inc
orl
sub
dec
pushf
flds
scas
loop
add
into
or
sub
xor
mov
sub
add
add
pop
xchg
ja
add
xchg
rolb
jmp
and
rorb
or
add
outsb
dec
push
lea
cmpsl
movsl
cmpl
or
mov
pop
ja
mov
test
fdivl
outsb
sub
inc
sub
inc
pop
cmpb
push
lods
mulb
sub
jmp
pushf
aad
out
jne
sbb
and
test
inc
lret
roll
test
jne
mov
xor
jp
addr16
or
test
inc
ss
cmp
test
das
xchg
fs
in
sub
ret
xor
xchg
outsl
push
roll
xchg
push
mov
adc
mov
outsb
pop
test
sarl
arpl
sbb
xchg
imul
cmp
movsl
lcall
jb
movsl
mov
adc
mov
jb
add
fadd
xchg
into
pop
jmp
xchg
mov
in
cmp
in
cmp
dec
xchg
arpl
mov
jg
loopne
sti
test
aas
scas
jge
or
movsb
fwait
xchg
dec
mov
stc
div
fwait
outsl
loop
repnz
inc
ret
adc
cmc
dec
cwtl
aam
mov
fsubrs
xlat
pop
out
or
out
out
push
jmp
inc
pop
xor
jmp
orb
or
cmc
cmpsl
mov
xor
addb
test
test
icebp
jne
pop
jge
js
lret
jge
loop
fdivrl
dec
lcall
test
xor
in
xchg
mov
js
call
andb
mov
pusha
adc
repz
xchg
mov
sarl
sbb
daa
xor
repnz
jno
das
mov
xor
add
cmp
rorl
stc
lcall
fbld
rcll
and
sub
push
or
sub
ljmp
mov
insb
jae
sbb
xor
and
fbstp
sub
sub
pop
aam
test
pop
jno
fwait
lcall
call
cmp
or
bswap
cmp
arpl
sub
stc
mov
push
mov
rcrb
pmuludq
xchg
sar
push
scas
lea
and
sub
mov
inc
fistpl
ljmp
or
dec
jp
js
mov
fstpt
jge
dec
pop
adc
cmp
xor
inc
loopne
gs
rorb
cmp
jmp
or
out
push
mov
mov
adc
mov
fs
pop
add
jge
add
int3
xchg
cmpsl
fucom
pop
int3
sub
divb
adc
jns
sub
lahf
sub
loop
in
out
lcall
pop
lods
push
xor
lcall
imul
je
shll
cmp
dec
pop
repnz
test
sbb
movsb
mov
xor
dec
fildll
jb
add
push
mov
cmp
pop
pop
push
jecxz
cmp
and
cmp
popa
sub
jmp
jmp
cltd
clc
sbb
loopne
lock
cmp
mov
jge
xor
movsl
pop
add
push
test
scas
sbb
nop
ret
pop
cmp
mov
push
jge
or
mov
sti
push
xlat
imul
loop
pop
add
scas
pop
aaa
scas
mov
sbb
mov
mov
fs
and
imul
cmp
dec
mov
push
jbe
dec
pop
and
out
out
repnz
and
frstor
lock
fdivp
jp
xor
std
iret
and
xchg
cli
jo
lods
xor
iret
and
push
in
out
or
inc
data16
shrb
pop
outsb
popl
fmul
aad
js
add
lock
mov
pop
pushf
xor
sub
shlb
enter
and
pop
mov
push
out
shrl
mov
pop
pop
xchg
loopne
fs
push
sub
mov
test
inc
push
jmp
lcall
fisttpl
pop
sbb
std
in
xor
jmp
jae
jl
das
movsb
sahf
cld
mov
sarl
jae
das
mov
xchg
in
pop
sbb
xorb
aam
xchg
sarb
std
popa
mov
sbb
mov
daa
arpl
sbb
stos
or
jnp
jae
push
adc
movlps
dec
jge
pushw
pop
mov
das
cmp
ljmp
test
popf
sbb
daa
sahf
insb
pushf
jbe
sbb
outsl
cmp
mov
and
pushf
sbb
sarb
cmp
xor
sub
pop
aas
rcrl
or
push
xchg
inc
jae
push
movsl
outsl
lock
lret
das
push
popa
pusha
aas
dec
lret
loope
int3
repnz
fnstsw
dec
and
subl
push
dec
repnz
jmp
push
cmc
inc
dec
xor
inc
icebp
cltd
jne
cmc
mov
push
idivb
jns
sub
cmpsl
add
fisubrs
pop
aas
ret
call
mov
shlb
and
nop
adc
fistps
out
lcall
mov
pop
sarl
mov
call
inc
and
stc
rol
cmp
test
pusha
and
cmp
xchg
mov
insb
popa
scas
mov
push
inc
cld
fdivr
inc
lret
pop
jge
pushf
nop
jns
inc
stc
or
lock
inc
adc
add
push
out
fsubr
test
out
mov
jbe
cmp
fwait
jnp
sbb
cs
and
jo
cmp
test
aas
mov
loop
fbstp
mov
mov
cltd
call
arpl
sbb
cli
push
int3
xor
jne
test
inc
fcmove
xchg
inc
jns
or
mov
jne
xor
mov
arpl
cmp
aam
pop
mov
test
hlt
inc
pop
imul
std
cmp
cmp
es
les
popa
push
rol
inc
xchg
push
inc
imul
jno
seta
push
lret
lea
mov
add
sub
outsb
xor
push
mov
ja
out
sbb
fnstenv
cmp
iret
push
mov
sbb
push
xor
jns
hlt
fbstp
popa
iret
cmpsl
incl
mov
mov
push
or
dec
out
or
movsb
jns
pushf
push
and
xchg
mov
in
dec
push
int3
jl
cld
pop
inc
xchg
popf
mov
cmp
xchg
mov
cmp
adc
xchg
sbb
gs
adcl
cli
aas
mov
pop
push
sub
pop
pop
les
adc
out
inc
adc
pop
cmp
hlt
sbb
pop
nop
xchg
pop
enter
scas
mov
daa
lret
cmp
xor
sahf
xor
loope
outsl
lea
pop
inc
nop
scas
add
jne
ss
das
jle
dec
clc
add
mov
out
cmp
pusha
sbb
jp
mov
arpl
or
xchg
cs
shll
dec
push
sub
sti
dec
lds
imul
ss
mov
adc
sbb
scas
repnz
int
fmuls
icebp
in
pushf
sub
loop
repnz
push
add
and
lret
stos
data16
dec
or
jle
jg
and
rcrl
popa
test
xor
cwtl
mov
mov
fnsave
int3
mov
jne
pop
or
xchg
dec
pop
pop
jp
rorl
cmp
or
push
popf
es
cmpsb
cmp
xor
add
data16
cmp
push
jecxz
repnz
jl
roll
fxam
xchg
sarb
mov
xchg
mov
ret
jmp
mov
dec
mov
rorl
fsubrl
dec
bnd
and
dec
jmp
in
mov
ss
xor
lret
nop
and
mov
xchg
cwtl
mov
adcb
movsb
loop
mov
or
outsb
add
outsb
lret
add
xchg
pop
movl
lock
mov
arpl
or
in
xchg
rclb
cli
add
and
test
pushf
lret
inc
cmp
sbbl
sub
dec
xorl
fsubp
in
fdivs
rcrb
mov
mov
xchg
lcall
sub
stos
mov
movsl
les
aad
cmp
xor
ljmp
push
in
gs
or
rcrb
enter
pop
xor
mov
xorl
sub
dec
jbe
mov
dec
pop
and
mov
dec
test
cmp
jo
pop
aam
push
jmp
jecxz
push
jne
iret
sbb
or
mov
mov
data16
test
xor
fiaddl
cmp
fcomp
dec
add
stos
fldl
cmp
decb
es
mov
adc
pop
mov
cld
jo
pop
popf
xchg
bound
popf
mov
or
outsl
xor
test
stos
sub
xchg
inc
push
loopne
push
mov
shll
and
and
sbb
mov
push
xchg
mov
loope
push
fs
aaa
push
dec
mov
stos
aam
in
jb
mov
shll
push
mov
sub
pop
pop
int3
mov
push
push
stos
es
mov
lods
and
cltd
daa
adc
xchg
or
or
fisubl
int
icebp
jl
add
inc
int3
dec
push
data16
lret
and
xlat
add
inc
jecxz
test
fbstp
cmp
ficoml
lahf
mov
mov
inc
popa
and
inc
sub
xchg
jmp
mov
xchg
rolb
pop
xchg
dec
mov
lock
icebp
push
adc
repnz
sub
add
add
jns
imul
jb
out
filds
rorb
mov
sahf
out
les
xor
mov
cli
lds
shl
vsqrtpd
ds
outsl
pusha
pop
inc
test
adc
jbe
call
add
jecxz
test
cwtl
out
sub
aam
scas
inc
or
jmp
aas
pushf
scas
push
data16
xor
xchg
pop
ja
jbe
and
fildl
js
jl
push
xchg
mov
mov
lcall
lahf
sarb
xor
pop
scas
pop
loope
dec
dec
in
and
jb
arpl
sbb
and
jo
adc
pop
mov
insl
je
loopne
shlb
mov
aas
and
sub
mov
lods
jmp
pop
out
jns
movsb
jecxz
sti
mov
imul
shrl
cwtl
loope
testl
push
pop
push
push
pop
ss
iret
jae
or
push
mov
push
mov
mov
cmp
xor
iret
push
dec
aas
adc
mov
inc
inc
add
push
movzwl
inc
cmp
push
pushf
jbe
mov
aas
arpl
fbstp
jg
in
and
dec
repz
dec
out
add
shrl
inc
and
out
push
add
ret
orl
subb
mov
aaa
mov
stos
pop
lahf
scas
sbb
int3
ficomps
out
scas
adc
sbb
hlt
lock
add
pop
jae
stc
rolb
jle
mov
into
movsl
in
fldcw
out
and
stc
fadds
shrb
hlt
inc
push
adc
cli
mov
jle
mov
fcmovbe
shl
scas
outsb
sub
ret
push
jb
inc
jns,pt
fldenv
test
mov
xor
push
clc
pop
test
pop
aaa
bound
mov
and
sub
mov
in
cltd
popa
hlt
add
xchg
pop
mov
adcl
ret
lock
movsb
jb
mov
add
inc
imull
in
int3
cmpsl
iret
shlb
xchg
unpcklps
ret
imul
ss
out
fnstenv
dec
cmpsl
mov
cmp
ss
popa
pop
and
push
push
clc
jae
jno
test
mov
sahf
int3
jg
imul
cwtl
mov
cld
icebp
jb
les
pop
stos
aas
aaa
cltd
fidivrs
fs
jmp
lahf
cmp
loope
cmpsl
int3
mov
xchg
push
dec
push
rol
mov
push
daa
adc
fsubr
push
jecxz
mov
fistpl
lcall
add
iret
mov
dec
pop
sub
aam
leave
or
cli
pop
fsts
lock
int3
add
leave
push
leave
lea
push
outsl
loop
nop
imul
inc
dec
push
sub
clc
xchg
movsb
adc
scas
xchg
sub
stos
mov
inc
push
mov
nop
popf
notl
decb
shll
mov
xor
dec
nop
insb
pushl
jnp
sub
orl
rolb
mov
mov
mov
adc
loopne
incl
pusha
sbb
mov
or
dec
inc
or
inc
and
sbb
or
and
daa
aam
push
jb
inc
or
jne
inc
arpl
mov
lods
xchg
scas
imul
and
nop
sbbl
ret
out
mov
mov
dec
xor
sbb
sbb
lds
jae
insb
add
push
jmp
icebp
mov
std
or
mov
dec
aas
and
outsb
xchg
insl
or
jnp
movsb
cmpl
and
jno
jae
test
pop
aad
xchg
dec
mov
push
lcall
pop
shll
push
in
inc
enter
test
push
leave
gs
imul
push
mov
jbe
das
jbe
int3
or
or
push
xor
lds
push
push
dec
inc
adc
adc
push
mov
fisttpll
pusha
mov
mov
xor
push
push
jl
aaa
test
inc
ds
stc
out
mov
push
loop
mov
movsl
mov
outsb
adc
sbb
mov
mov
cltd
adc
fildl
pop
fstl
inc
xor
imul
imul
scas
add
shrb
les
inc
lcall
xchg
lea
inc
xchg
call
pop
imul
dec
push
xor
mov
test
lcall
mov
push
xor
mov
mov
cmpsl
xchg
popf
sbb
mov
dec
fidivl
inc
lods
sbb
iret
outsb
adc
ret
sub
pop
stc
jns
addr16
cwtl
or
sub
outsl
jmp
jmp
add
in
sbb
aam
daa
shrb
sbb
int
lret
movsl
je
lcall
dec
xorl
pop
out
mov
jb
call
adc
xlat
dec
adc
xlat
leave
pop
mov
sarb
mov
jge
insb
cwtl
push
lock
movsb
clc
fwait
mov
xchg
out
cmc
ljmp
inc
out
sbb
xchg
cs
mov
insb
xchg
and
push
arpl
mov
aas
fisubrs
sti
int3
das
jp
push
xchg
xchg
lods
cld
jecxz
insb
mov
pop
scas
fcoms
cwtl
jmp
adc
and
push
sahf
into
stos
test
mov
pop
shlb
xor
mov
xor
adc
sub
lods
rorl
pop
cmp
mov
sbb
push
movsb
add
mov
loop
push
daa
scas
int
es
inc
xchg
test
into
lea
jns
shll
push
dec
cld
pop
mov
scas
cmp
add
sbb
outsl
insb
sub
xor
dec
or
inc
cmp
add
sub
adcl
cmc
mov
aas
xchg
mov
sbbl
je
or
scas
dec
jl
add
movsl
cmp
jno
xor
mov
fcoml
push
jb
repz
stc
ret
gs
xlat
clc
out
cld
inc
or
sahf
andl
push
sub
ja
mov
lods
sub
xchg
push
bound
lret
pop
xchg
ret
rolb
add
jnp
outsb
iret
lcall
fwait
scas
pop
pop
mov
xchg
push
xlat
mov
int
dec
push
add
and
mov
lret
xchg
sbb
icebp
xor
pop
dec
mov
nop
sbb
inc
pop
pop
fnstenv
scas
shll
mov
push
in
outsl
xchg
hlt
fsubs
push
addb
jne
ret
shl
int
pop
mov
lcall
mov
push
adc
fbstp
inc
bnd
pop
out
into
jg
mov
xor
xorb
push
add
das
mov
es
bound
or
mov
push
insl
js
jg
cwtl
andb
cmp
je
or
sub
cmp
mov
xchg
ja
jbe
repz
or
lret
jge
mov
inc
inc
xchg
addr16
enter
fcomps
cli
fwait
cs
xchg
adc
daa
add
add
sahf
fwait
aad
jns
and
dec
in
push
cwtl
in
pushfw
jecxz
xchg
xchg
mov
into
daa
mov
xor
push
jne
mov
jno
outsl
in
cmp
jecxz
mov
shl
xchg
pusha
adc
add
pop
push
cli
lds
rcll
xchg
cld
arpl
nop
loopne
push
adc
or
inc
lods
cli
pop
dec
sbb
pop
int
push
or
adc
sbbl
rclb
sbb
xchg
add
pop
and
xchg
dec
fwait
movb
aas
arpl
dec
cmp
xor
sub
inc
shr
mov
mov
mov
mov
pop
or
push
mov
pop
pop
into
push
call
jp
push
stos
adc
push
enter
xlat
inc
sbb
add
cs
sub
scas
clc
les
clc
movsl
lock
sbb
data16
pop
std
mov
sub
repnz
push
int
mov
subb
or
sub
mov
rorb
dec
or
enter
test
nop
mov
xchg
icebp
jns
push
mov
shl
xor
call
adc
mov
iret
sbb
sbb
es
js
sub
xchg
dec
or
jns
mov
or
jns
mov
or
repnz
fidivrs
shrb
mov
pushf
mov
sbb
inc
test
dec
mov
sbb
and
mov
lahf
and
push
cli
inc
fstpt
out
movsb
pop
inc
rcrb
enter
ret
popf
lahf
mov
mov
in
nop
or
xchg
stos
scas
sub
loopne
aaa
adc
cmp
or
repz
daa
in
mov
lret
ljmp
shll
inc
cmp
lea
inc
cmp
notl
inc
push
mov
mov
xchg
push
push
push
out
add
subb
imul
jg
sarl
add
subb
sbb
nop
mov
push
aaa
into
jno
jmp
mov
movl
int3
mov
rcll
fisubs
ficomps
adc
sbb
jno
pop
mov
mov
pushf
mov
aaa
idivl
cmp
push
and
jo
icebp
in
lret
into
push
pop
pushf
loope
pop
outsl
sbb
and
data16
sarl
shlb
cmp
jmp
sub
add
dec
nop
sbb
push
lods
scas
rorl
push
mov
adc
movsb
cmpsl
xor
mov
movsb
add
testl
and
mov
data16
test
fstpl
add
lods
mov
inc
loopne
pop
in
add
inc
adc
ja
add
sbb
push
lds
bswap
mov
mov
add
pop
xor
jns
push
dec
mov
mov
mov
fs
andl
xor
add
push
jae
cli
mov
push
sub
lds
sbbb
or
je
mov
mov
jnp
add
ret
add
adc
out
adc
outsl
hlt
test
adc
dec
sbb
and
or
lods
mov
addr16
out
adc
push
test
arpl
jg
popf
lds
loopne
sub
fmuls
add
inc
repnz
xor
add
xchg
xor
shlb
mov
mov
mov
mov
imul
add
fcmovnb
mov
inc
pusha
and
stos
lock
arpl
xchg
or
inc
push
in
mov
sbb
add
lret
fisubrs
xor
in
popf
movsb
jae
stos
mov
lcall
ret
lds
idivl
mov
in
sti
and
orl
jp
js
jg
dec
fwait
insb
clc
sbb
and
mov
in
sbb
imull
sbb
add
sti
sbb
xchg
push
imulb
fs
push
mov
out
mov
out
cmp
lcall
addr16
sbb
lea
inc
int
or
adc
sbb
out
stc
stos
hlt
pop
inc
mov
push
lcall
mov
dec
mov
adc
insb
xor
mov
movsb
test
push
and
and
jno
movsb
mov
sub
pop
sbb
push
pop
in
sub
mov
lock
das
nop
or
mov
add
sahf
or
pop
ret
dec
ficoms
push
stc
jno
mov
cmc
lret
push
mov
push
imul
jmp
jnp
pop
mov
xor
xchg
adc
pop
sub
cmp
nop
iret
scas
or
push
pop
std
jnp
sti
push
xor
xlat
pop
add
cmpsb
jmp
test
add
incl
fldt
xchg
out
jmp
inc
cs
scas
adc
jecxz
cmc
nop
add
stos
sbb
push
mov
dec
cmp
idivl
je
fistl
pop
inc
push
dec
ret
bound
shlb
sbbb
call
inc
cmp
sbb
mov
jb
ret
sahf
adc
and
add
js
enterw
rorb
iret
aaa
jecxz
mov
js
xlat
mov
inc
xchg
xor
pop
jbe
por
cli
leave
pushf
sbb
decb
cmpsb
loopne
inc
pusha
fidivl
pop
lea
mulb
stos
in
xchg
repz
cmpsb
inc
sub
jns
sbb
sti
add
add
push
std
imul
scas
mov
aas
jmp
movsb
das
ljmp
mov
out
jl
xchg
xchg
sub
mov
js
out
aas
xor
xor
xchg
jp
mov
mov
and
iret
inc
cld
out
jbe
push
inc
stos
mov
call
adc
enter
test
enter
out
cld
mov
lahf
je
and
test
pop
sub
lret
pop
add
in
fildl
adc
mov
loop
outsl
roll
je
movsl
pop
cmp
pop
and
stos
pop
inc
add
stos
cmp
push
mov
jbe
dec
cmp
push
push
stos
sub
inc
sub
jg
js
cmc
pop
inc
js
lcall
fcmovbe
sbb
and
cmp
jp
sarb
loopew
ss
loop
mov
cmp
push
lea
outsl
mull
ljmp
jp
dec
pop
push
ds
mov
cmp
mov
mov
mov
movsl
stos
mov
ds
mov
rclb
push
mov
test
add
rorl
int3
and
out
pop
add
imull
xchg
fiadds
aad
aam
imul
adc
jbe
icebp
cmp
pop
fisttpll
pusha
ret
push
imul
in
pop
jb
stos
jnp
call
jb
and
negb
pop
fcom
das
and
pushf
mov
dec
mov
test
stc
mov
or
hlt
jecxz
iret
insb
cmp
imul
push
fldl
mov
adc
or
mov
mulb
mov
dec
loop
and
pop
mov
lea
test
lods
mov
pop
xlat
nop
out
pushf
jp
lea
dec
add
inc
mov
dec
subl
fimuls
dec
mov
cmp
push
inc
xchg
jecxz
or
mov
push
xchg
jmp
sbb
fldcw
xchg
sub
add
add
mov
sbb
or
inc
sbb
pop
sahf
add
outsl
sbb
jecxz
push
loop
out
add
and
shrl
js
jp
adc
pop
cmpl
pop
clc
out
movups
jge
mov
sbbl
cwtl
pop
lods
add
cmc
dec
into
leave
xchg
sub
mov
fistpll
adcl
divb
add
and
lock
outsl
lahf
mov
loope
jecxz
daa
xchg
or
sub
add
mov
xor
add
push
mov
jmp
in
int3
das
pop
sbb
out
mov
push
push
pop
jb
aad
out
inc
sbb
ljmp
inc
jg
inc
lcall
xchg
fstps
lcall
adc
shrl
sbb
and
popf
ss
and
adc
add
rclb
add
inc
and
lahf
fstl
add
leave
shrb
mov
pop
jecxz
es
push
lods
into
mov
jns
xor
sub
inc
and
add
xchg
jns
jl
xchg
dec
sub
in
scas
and
push
xchg
movb
jno
jne
xchg
arpl
mov
je
movsb
mov
push
add
push
sub
add
sbb
stos
xchg
mov
test
and
lea
stos
inc
les
mov
call
xchg
pop
sub
mov
bound
inc
jne
push
scas
imull
jmp
in
fdivl
xchg
outsb
les
enter
lods
out
xchg
adc
mov
mov
xchg
pop
jge
int
mov
nop
fwait
imul
or
push
sub
cmp
sbbb
sahf
daa
gs
enter
mov
mov
push
jae
inc
cmp
out
jecxz
fadd
cltd
adc
outsb
popf
dec
pop
out
push
cltd
dec
divb
and
mov
loope
sahf
aas
jl
pop
push
xor
mov
mov
jmp
out
dec
aad
sar
gs
adc
mov
test
out
loope
das
ret
cs
les
push
ljmp
and
outsl
push
dec
and
xor
loope
push
sti
mov
adc
cmp
scas
mov
push
adc
lock
imul
cmpsb
push
scas
jb
xor
cld
lock
add
insl
xchg
lret
aaa
pop
dec
ss
enter
icebp
aaa
fcompl
mov
aas
rclb
push
xlat
add
or
jg
jmp
xor
test
push
mov
pushf
cmp
pop
adc
les
faddl
ror
pop
or
push
xorb
xor
lods
shll
clc
add
xor
fdivrl
xchg
pop
imul
cmpsl
ds
mov
sbb
pcmpeqb
aas
sbb
and
clc
push
lds
fwait
jae
shr
xchg
xchg
sub
cli
dec
push
add
and
roll
add
xor
pop
mov
jge
pop
xchg
xor
ljmp
jno
outsb
xchg
sti
push
icebp
cmpsb
and
pop
push
fcmovbe
jg
js
jp
mov
pop
in
ficomps
and
int3
repnz
fistpll
pusha
aam
push
call
xor
pop
jae
orb
rcr
shlb
sbb
mov
push
cmp
imul
lret
push
or
adc
outsb
mov
das
dec
add
fnsave
stos
or
pop
sbb
shl
in
pop
scas
subb
or
or
xchg
push
dec
into
rol
fsubl
xor
inc
jbe
nop
stos
in
inc
mov
clc
push
mov
out
call
js
mov
push
sar
xor
mov
add
loope
imul
mov
sub
mov
int
xor
fcoml
out
pop
xchg
sub
jle
xor
push
adc
inc
dec
and
dec
popa
out
push
out
mov
inc
jle
scas
xor
daa
popa
sarb
iret
cmp
cltd
pop
cltd
dec
mov
cmp
pop
jl
scas
jb
adc
mov
in
add
inc
jmp
mov
inc
xchg
push
push
orl
mov
std
in
ss
movsb
jg
popf
shll
cwtl
inc
es
movsb
push
ja
sub
jmp
je
mov
mov
insl
cmpsl
mov
imul
xchg
cmp
negb
sbb
mov
add
je
jmp
shr
jge
push
and
shr
mov
daa
lods
test
sub
jmp
mov
mov
data16
sbb
mov
inc
cmp
insb
addr16
outsl
push
mov
pop
pop
mov
cmpsl
daa
xchg
ret
fwait
aad
lock
xlat
pop
int3
pop
imul
push
out
jnp
aas
cmp
cmpsl
inc
out
dec
adc
pop
mov
push
mov
loop
aaa
cmc
shrl
mov
mov
stos
icebp
lds
pop
or
sub
adc
insb
xchg
cltd
ljmp
call
int3
mov
sti
cmp
xchg
mov
adc
mov
inc
jl
or
dec
cmc
rcl
std
push
movsb
lret
neg
divb
mov
icebp
lahf
mov
hlt
lret
dec
fiaddl
ret
shrb
mov
enter
pusha
data16
fstps
lcall
cmpb
fst
inc
lods
sbb
repz
ss
inc
adc
and
adc
push
pusha
jb
ljmp
aam
sub
push
pop
inc
jecxz
rclb
movsb
add
aas
push
mulb
mov
and
in
mov
dec
mov
inc
pop
bound
fs
xor
mov
add
jb
pop
adc
cs
out
mov
add
fstl
mov
and
xchg
mov
insb
fs
gs
test
or
out
fistl
enter
inc
or
into
xchg
lds
adc
test
leave
cmp
mov
and
ljmp
mov
mov
pop
cwtl
outsb
jno
loope
sub
lods
inc
jb
out
dec
xorl
lahf
test
lcall
jb
cmpsb
pop
jne
jg
mov
mov
xor
rcrl
stos
dec
push
mov
in
and
sub
in
inc
mov
loope
lcall
lret
mov
adc
jo
adc
imul
and
adc
jb
push
leave
leave
aad
sbb
fdiv
push
pop
test
and
jae
xor
adc
mov
lds
nop
notb
mov
mov
push
inc
xchg
lea
mov
adc
lds
add
cmp
leave
cmp
jge
into
stc
pop
icebp
ret
inc
inc
or
mov
hlt
xor
cmp
or
or
inc
mov
mov
dec
cmp
xor
jbe
add
add
and
push
int
mov
jge
dec
sub
stos
dec
xor
ljmp
lret
adc
dec
mov
adc
adc
lea
lock
into
jge
mov
mov
mov
xchg
or
and
ret
mov
dec
pop
cmpl
sbb
add
bound
dec
xlat
js
imul
shlb
xor
sbb
inc
jecxz
jne
mov
int3
mov
inc
push
inc
adc
sti
cmp
and
sub
bound
dec
jno
insb
xor
xor
push
imul
xchg
scas
adc
mov
repnz
and
sub
ficoml
in
inc
jnp
push
stos
inc
jl
mov
mov
jbe
pop
xor
inc
lds
pop
xor
or
push
loop
sub
sub
add
ljmp
repnz
sub
shl
iret
sahf
jge
dec
push
testl
dec
loopne
jl
ja
jne
push
ss
xlat
sub
int3
cmpsb
jns
sub
pop
and
int3
loope
js
or
fistpll
enter
sbb
mov
push
xchg
loope
inc
popa
mov
lea
xor
add
or
stos
pop
outsl
ljmp
lods
and
xor
ljmp
cmp
cltd
popf
iret
jge
sbb
mov
lock
dec
sub
xchg
sub
mov
rep
or
inc
inc
inc
mov
aad
std
repz
insb
and
insb
push
cmp
or
sbb
or
mov
or
mov
iret
insl
sbb
stos
or
jns
dec
jmp
dec
lcall
fldl
mov
insb
sbb
pop
lock
sub
pop
push
cmp
add
and
pop
enter
and
ja
hlt
jg
inc
xchg
das
faddl
sub
daa
popa
jnp
int3
mov
fsubr
hlt
fcomip
repnz
xchg
mov
add
aad
add
outsb
mov
pop
or
js
lock
xorb
sbb
in
cmp
shlb
inc
popf
cmpsb
rcrb
sbb
sub
stc
out
test
or
jecxz
stc
mov
or
fdivl
movsl
sbb
std
dec
xchg
lea
cmpsb
cld
mov
out
test
mov
jmp
outsl
es
push
fistl
sub
sub
adcb
fsubrp
pusha
inc
orb
bound
or
mov
and
add
push
out
sub
sahf
inc
xchg
inc
mov
out
xor
push
sub
fildl
push
pop
dec
lods
jg
addr16
pop
fildl
jg
ret
loope
das
xor
sub
push
push
cmp
and
inc
aam
push
and
pop
pop
jp
xchg
mov
and
fwait
ret
mov
add
mov
rolb
mov
jg
in
test
sub
cld
fadds
lcall
into
out
std
ds
and
je
mov
add
adc
out
sahf
sahf
orl
jnp
in
mov
adc
adc
or
sub
movsb
pop
mov
lds
mov
xor
iret
mov
jl
nop
mov
cmpsb
scas
jno
sbbb
push
cli
call
or
loop
mov
xor
inc
jns
push
cwtl
enter
pop
into
sbb
adc
outsb
lret
mov
movsl
xchg
xor
add
popf
pop
pop
jmp
test
pop
lret
repz
mov
fcmovne
mov
jo
mov
mov
fs
cmp
adc
xor
outsb
jbe
andl
inc
rcrl
cmp
sti
call
ret
adc
scas
sbb
rcr
cld
sti
subb
jns
rorl
outsb
nop
enter
mov
cld
loope
jecxz
and
xor
clc
push
cwtl
push
sbb
add
cmp
jb
in
call
push
sub
inc
adc
and
lods
ret
insb
adc
xor
cld
mov
sarl
and
push
in
mov
loopne
sub
adc
mov
cmpsb
popa
ss
cli
inc
or
inc
rcrb
or
dec
dec
sarb
dec
push
sahf
shrb
mov
add
ja
and
test
ret
push
pop
dec
stc
ret
jle
cltd
xlat
stc
test
jb
xchg
mov
or
aaa
dec
pextrw
stos
ja
push
sbb
sbb
cmp
cmpsb
pop
leave
lahf
repz
sbb
test
pop
xor
xor
ds
ds
cmp
lds
stc
icebp
inc
sub
xchg
nop
fwait
mov
cmc
pop
or
jp
outsl
lahf
cmp
ss
imul
dec
dec
add
cld
pop
mov
pushf
mov
adcb
mov
mov
cmc
pop
pop
xchg
rcrb
clc
negb
sbb
fisttpll
push
adc
repnz
in
out
sub
imul
mov
dec
pop
jb
mov
mov
ret
cmpsb
movsl
and
push
cltd
repnz
push
mov
sbb
ret
mov
jl
xchg
out
es
mov
repnz
test
push
push
adc
mov
outsb
dec
cmc
cmpsl
int
pop
jo
adc
mov
loope
outsb
xchg
ret
std
subl
mov
lds
movsl
call
sbb
xchg
repnz
xlat
adc
add
aam
push
cltd
sbb
lcall
std
pop
cmp
mov
jl
ffree
add
sbb
add
mov
cmp
dec
ljmp
jno
shll
loope
adc
add
sbb
mov
outsb
inc
fldl2e
lods
bound
inc
clc
cmp
jp
cmp
leave
jle
pop
sbb
push
loop
or
xlat
fsubr
aam
mov
imul
negb
adc
and
lret
test
fidivrl
xor
jp
aad
loopne
add
push
cltd
stc
and
hlt
shrl
xor
outsl
cwtl
or
pop
mov
add
popa
mov
sbb
xor
and
cli
scas
outsl
cmp
cmp
add
test
jp
pop
movsb
push
inc
cmpsb
js
loop
push
lock
sub
loope
push
enter
iret
fcompl
faddl
jbe
sub
cld
add
push
or
neg
aam
and
sbb
ret
popa
hlt
pop
or
sbb
sub
ret
xor
push
push
sbb
popa
lret
mov
popa
and
lods
mov
add
pop
cmp
cld
mov
movsb
in
std
cmp
les
inc
sub
sbb
loope
in
mov
mov
xchg
sub
lcall
icebp
icebp
push
mov
dec
cmp
sbb
mov
cmc
scas
mov
xchg
iret
inc
enter
lret
jbe
mov
cmp
inc
jnp
sub
lcall
hlt
mov
into
jno
roll
mov
sbb
adcl
lods
inc
cltd
jp
cmp
test
aaa
stc
push
pushf
push
aam
gs
add
call
jp
outsl
cmc
aas
inc
mov
negl
shll
adc
sbb
mov
xchg
in
imul
icebp
push
stos
mov
in
add
jno
stos
iret
cmp
aam
pop
mov
jmp
push
icebp
jae
pop
add
and
cmp
cmp
add
insb
les
cmp
inc
inc
and
push
orl
push
jns
mov
sbb
xchg
dec
scas
sbb
subl
cmpsl
xchg
jl
xchg
adc
sbb
imul
inc
xor
fcoml
cwtl
cld
jnp
out
cmp
and
out
mov
popf
fidivrl
sub
pop
cmpsl
xchg
fnsave
xor
fistps
scas
sbb
dec
xchg
das
loop
inc
mov
icebp
inc
lds
xor
jp
out
mov
test
mov
je
iret
sbb
and
xchg
int
divb
les
bound
arpl
add
add
fildl
inc
push
jmp
or
cmp
or
dec
xor
push
sbb
rcll
fnsave
push
or
push
sahf
loope
mov
xor
jb
and
repz
adc
mov
icebp
popa
xchg
push
mov
stos
xor
scas
fnstcw
mov
dec
mov
andl
clc
int
sub
stc
outsb
pop
mov
fcmovnb
jg
sbb
cmp
adc
loop
jb
rcl
sbb
inc
inc
pop
int3
dec
into
bound
fldln2
or
inc
push
adc
mov
push
nop
int
cwtl
mov
pop
inc
out
mov
lods
cmp
subb
jle
js
inc
roll
popf
add
or
loop
and
mov
inc
jg
and
push
in
imul
xor
mov
insb
aam
dec
jne,pt
sub
dec
mov
cmp
mov
dec
pop
add
xchg
mov
jle
mov
jge
lret
jle
sub
ret
adc
fs
add
push
mov
and
jl
out
hlt
fsubrs
sbb
flds
data16
test
jb
pop
mov
jbe
pop
and
xchg
and
loope
jg
in
test
test
notl
mov
enter
mov
call
lahf
and
jl
mov
adc
es
xchg
and
in
lret
repnz
movb
and
out
add
adc
xor
inc
outsb
push
or
loope
push
xor
xchg
sti
push
aaa
lds
nop
xchg
lcall
cltd
inc
push
test
rorb
fdivrp
fbld
in
mov
nop
out
cmp
in
clc
mov
inc
mov
add
add
add
push
insb
bnd
dec
mov
sub
jg
imul
push
mov
pop
pop
aaa
push
imul
ds
sbb
pop
jle
insl
and
cmp
mov
mov
sbb
mov
loop
xor
mov
scas
addl
pop
dec
adc
ds
push
mov
aam
sti
xor
ds
fsubr
jno
rclb
jne
lods
or
in
cltd
adc
xchg
mov
arpl
lret
push
jae
jl
ffree
sub
rorb
cmp
mov
jnp
cmp
sti
sbbl
or
pop
sbb
sbb
mov
mov
daa
mov
add
mov
rcl
pop
cli
sbb
fsubrl
inc
jg
outsb
outsl
fisttps
and
cs
and
sbb
scas
add
in
test
sub
jne
aaa
scas
push
test
rcrb
imul
lret
mov
sub
and
add
adc
dec
pop
cld
call
add
and
cmp
and
scas
push
pop
dec
mov
iret
adc
cmp
iret
mov
cmp
and
into
xchg
mov
mov
mov
lds
sub
fwait
and
lds
mov
xor
mov
inc
outsb
mov
and
insl
and
add
inc
push
fcmovnbe
out
ss
push
fcos
sbb
out
in
mov
data16
fsubrl
test
out
and
dec
mov
pop
cmp
mov
xor
jne
int3
pop
enter
fsubrs
mov
cwtl
cld
icebp
insl
lahf
std
mov
sbb
fcoms
int
and
jnp
fsubl
aam
sbb
hlt
insl
push
fstp
insl
sbb
out
dec
add
test
push
movsb
jg
pop
test
ljmp
or
push
mov
adc
pop
dec
sbb
or
xlat
aaa
es
insb
or
cmp
mov
out
cwtl
test
fsubrs
movsl
xchg
jge
lcall
dec
jo
mov
and
push
roll
inc
dec
loope
jl
xchg
pop
movsl
mov
inc
xchg
push
mov
aaa
inc
lods
push
orl
cmpsb
add
outsb
bound
xchg
enter
les
sahf
xchg
bnd
movsb
lock
lcall
outsl
push
mov
and
push
xor
add
xchg
xchg
xchg
cmp
imul
outsb
jno
mov
adc
mov
pop
inc
scas
dec
inc
lods
push
mov
sbb
pop
jmp
add
repnz
cs
push
dec
inc
or
pop
sahf
or
sub
cmp
cmp
rorb
ja
iret
lret
data16
pop
xor
xor
mov
les
push
insl
jmp
scas
sti
daa
popa
jne
shlb
push
sub
cmova
cmp
and
aas
jae
fucomp
mov
aad
sbb
testb
inc
sub
fdivs
mov
mov
push
out
mov
xchg
mov
mov
inc
outsb
sub
xor
and
xchg
in
xor
test
mov
or
test
bound
into
jmp
push
fwait
subl
jno
xor
cmpsl
and
xor
sbb
mov
fs
ds
pusha
xchg
dec
or
dec
mov
or
xchg
add
in
das
xchg
les
cli
movsl
push
test
leave
rcr
insb
cmp
test
mov
aas
add
fdivrs
push
cmpsb
mov
je
shll
dec
xchg
inc
pop
and
pop
cld
pop
lret
and
insl
xor
push
add
pop
jnp
loop
imul
movsl
sar
popa
je
lahf
sub
push
adc
aas
sub
cmpsb
loope
hlt
and
jo
fwait
lret
cltd
cli
js
fidivrl
hlt
xchg
out
pop
std
ret
dec
jno
sub
cmc
mov
lods
dec
lods
gs
out
pop
dec
test
pop
cmp
sbb
mov
xor
mov
das
mov
insb
fwait
xchg
pop
enter
sbb
sbbb
jecxz
test
gs
fwait
fs
movsb
clc
cmp
lahf
pop
push
push
inc
in
xchg
out
out
insw
xor
and
fsubl
dec
sub
adc
jp
fadd
xchg
xor
cli
push
movsb
mov
jmp
lret
xchg
and
and
mov
loope
xchg
outsl
fstpt
iret
jne
cltd
xor
mov
xorb
mov
dec
jo
out
call
jne
pushf
cmp
push
mov
leave
push
xchg
cmpb
addr16
xor
in
enter
dec
es
sti
or
loopne
xchg
lcall
sub
rolb
push
and
jge
sarb
xchg
push
pop
or
popa
dec
loope
shll
mov
or
les
mov
movsl
jmp
lcall
mov
sub
lcall
cmp
ja
or
insb
cmp
cmp
inc
int
ss
mov
outsl
xchg
push
adc
dec
scas
xchg
mov
and
xchg
inc
fistpll
arpl
out
push
orl
push
push
dec
push
out
xchg
add
leave
cmpsb
mov
or
testl
scas
xchg
xchg
ljmp
jne
xor
fimull
sbb
sub
cmpsl
xchg
inc
dec
mov
pop
cli
and
push
pop
sbb
ds
pop
daa
inc
cmpsb
mov
cmp
push
pop
mov
lock
out
fs
es
fildl
clc
sub
mov
add
adc
push
mov
fs
push
movsl
addr16
out
or
imulb
dec
and
inc
out
daa
leave
xchg
cltd
push
clc
add
out
push
cwtl
das
ret
enter
pop
imul
pop
test
repz
in
into
cmpsb
jecxz
adc
movsb
xchg
adc
scas
out
mov
iret
add
and
shlb
movsw
idivl
fcoml
insl
pushf
ret
mov
cs
cmpsb
add
rcll
pushf
fucomi
mov
aas
js
daa
add
js
insb
dec
lret
inc
in
shll
add
mov
mov
jmp
stos
xchg
push
add
mov
dec
jae
out
adc
out
mov
lcall
cmpsl
sahf
pop
dec
inc
mov
cli
fisubrl
push
pop
xor
in
sub
mov
push
stos
test
xchg
dec
int
pop
push
je
jbe
loopne
cmp
fstps
imul
push
xchg
push
xor
cmpsl
ret
and
fists
hlt
or
sub
scas
adc
lea
fmuls
ja
inc
cmp
xchg
push
insl
pop
out
punpcklbw
mov
pop
je
and
adc
mov
std
add
xlat
push
mov
pop
pop
mov
xlat
adc
insl
sub
pop
fidivs
or
ds
scas
adc
xchg
jbe
xchg
lcall
and
or
movsl
xchg
jl
xor
mov
sub
or
test
mov
xchg
mov
add
and
sbb
sahf
movsl
movsl
or
in
jae
ss
jbe
sub
cs
insb
sbb
mov
addr16
enter
loope
fistpl
cli
xchg
dec
ja
cmp
test
mov
aam
xchg
adc
cmp
mov
icebp
nop
into
pop
sahf
aam
mov
xor
mov
jmp
pushf
dec
jno
dec
outsb
xchg
fisubrs
mov
jns
int3
mov
jle
xchg
dec
js
inc
sti
cmp
scas
es
inc
add
jo
pop
add
sub
adc
imul
mov
mov
inc
adc
mov
push
pop
roll
push
call
fistpll
xor
jae
lret
cmpsl
or
mov
das
mov
inc
jnp
hlt
add
movsl
int3
out
outsb
xor
int3
ret
jb
push
insl
xor
lahf
cwtl
mov
test
cmpl
push
and
leave
mov
cmp
jo
mov
add
subb
pop
iret
ret
ja
xor
inc
stc
adc
mov
mov
leave
repz
call
mov
mov
pop
push
or
inc
adc
xchg
mov
or
xor
xchg
dec
cmp
xor
push
rol
push
sub
out
dec
iret
les
test
stos
mov
jmp
mov
lret
sub
jmp
dec
add
into
loop
insl
mov
nop
or
cmp
lcall
inc
adc
lock
notl
dec
cmpsb
dec
mov
movsb
call
sub
js
jns
add
test
pop
cmp
mov
inc
loopne
ret
and
mov
xchg
inc
or
jb
sub
push
out
fistpl
cltd
sub
shll
mov
imul
and
sbb
and
cmp
addb
jae
movsl
popa
imul
orl
mov
loop
out
movsb
jo
lea
into
outsb
negb
rolb
shrb
out
inc
adc
push
add
ret
addl
jno
inc
jnp
aam
inc
cmp
test
add
pop
sbb
mov
aas
inc
stc
ds
jo
pop
fmul
popf
rcrb
pop
push
call
push
aam
ds
sbb
jb
fistpll
push
sahf
in
scas
sub
pushf
cltd
cli
in
inc
push
ja
daa
mov
iret
popa
or
cltd
pop
cmc
sbb
mov
xor
lahf
dec
push
lods
cltd
sbb
ja
jno
push
xor
pop
mov
ja
pop
fstps
sbb
test
add
mov
inc
pop
jge
mov
std
ret
lods
icebp
loopne
pop
andl
shrl
mov
divl
xchg
mov
inc
dec
push
cmc
adc
cld
mov
dec
xor
arpl
es
rorb
xor
lds
jo
std
or
push
adc
rcll
jge
scas
push
fstl
push
out
and
stos
sbb
call
push
daa
sbb
imul
jg
xor
filds
and
sti
jo
mov
ljmp
lret
mov
dec
mov
in
inc
sbb
filds
aas
jbe
iret
add
shrb
inc
jle
xor
mov
inc
lcall
testl
inc
inc
push
insb
mov
pop
cld
lods
cmp
cmp
outsb
pop
cld
xchg
sub
xchg
in
dec
ror
dec
in
mov
push
or
je
cmp
pop
xchg
movsl
xlat
rclb
mov
loopne
dec
ficomps
sbb
xchg
std
mov
insl
inc
fistps
filds
ja
das
pop
sti
fldcw
loopne
cmpb
adc
inc
dec
push
jno
add
invd
cmp
jmp
mov
enter
and
adc
rorb
pushf
shrb
inc
pop
insl
cmp
and
lea
sbb
fdivrl
data16
daa
insb
lock
aas
mov
loop
lods
decb
sbb
mov
or
and
mov
push
sbb
std
or
inc
xchg
inc
cmp
cltd
adc
dec
cltd
mov
xor
xor
andl
and
mov
push
call
mov
aaa
sbb
movsl
lods
mov
fistpll
ljmp
aaa
cmp
cmp
rolb
stos
sub
shl
push
ficoml
aam
mov
jnp
shl
and
mov
mov
addr16
sbbb
push
gs
daa
or
pop
sub
lods
push
and
fwait
test
sti
dec
jo
jmp
sub
imul
ss
out
cmp
pusha
inc
gs
dec
shrb
fstl
nop
pop
ds
aas
les
in
mov
pop
je
xchg
pop
es
mov
cmp
add
lock
adc
cmp
adc
mov
mov
and
jg
mov
lcall
std
mov
cmp
xchg
jnp
push
loopne
adc
adcl
jnp
rclb
fildl
adc
and
nop
ret
xchg
cmp
imul
test
fstps
hlt
and
mov
jle
and
into
push
dec
es
mov
push
adcb
andb
mov
imul
pop
es
or
sahf
cmp
fsts
inc
and
arpl
dec
sub
pop
mov
dec
pushf
pop
cmp
push
mov
cmp
dec
in
sbb
cmp
mov
rorl
mov
jno
test
xchg
cmp
pop
sub
subps
jbe
and
jecxz
xor
int3
xchg
jmp
rorb
mov
iret
mov
stc
xor
dec
dec
test
pop
movsb
push
cmpl
and
fadds
push
clc
pop
rcl
push
pop
mov
push
rorl
mov
push
cmc
pop
shrb
test
mov
loop,pt
xlat
adc
fwait
scas
aad
jmp
lcall
dec
inc
cwtl
jno
lods
jbe
cwtl
cmp
push
mov
inc
sub
dec
ljmp
ds
mov
lcall
test
adc
imul
outsb
push
mov
or
push
xor
shlb
int
nop
pop
repz
push
test
in
daa
sbb
idiv
in
or
jge
push
mov
stos
in
sub
dec
dec
fwait
lret
imul
mov
movb
icebp
mov
lret
push
ret
jno
das
scas
inc
int3
mov
push
mov
aaa
adcl
mov
shl
dec
cmp
cmp
sub
inc
sbb
cmp
and
or
and
pop
pop
dec
sahf
jmp
out
mov
cmp
jge
cmp
arpl
gs
sahf
pop
mov
xchg
mov
in
out
iret
mov
xchg
jns
mov
sub
mov
mov
push
aaa
popf
clc
inc
adc
adc
dec
pop
push
push
loopne
sbb
cmp
add
lods
fsubp
adc
add
jne
shl
popa
jmp
inc
aas
cs
push
lahf
push
pop
mov
inc
pusha
sahf
xchg
aas
gs
popf
mov
test
mov
outsb
popa
inc
stos
in
add
dec
aaa
lock
jecxz
loopne
mov
xlat
test
adc
sbb
shll
arpl
inc
mov
push
cs
sbb
jnp
fsubrs
xor
xchg
sub
stc
sahf
ja
fcoml
in
es
mov
xorb
pop
mov
cli
ds
push
mov
jl
cmpsl
xchg
jno
scas
mov
mov
shl
imul
rclb
loope
in
into
xchg
aad
xchg
mov
bound
daa
rclb
sub
jge
out
dec
sbb
mov
cltd
jl
pop
inc
or
mov
push
inc
dec
pop
push
mov
call
and
mov
xor
sti
adc
imul
stos
test
je
decb
mov
push
imul
call
sti
jnp
push
out
notl
dec
or
pop
mov
mov
adc
inc
jb
or
fstpt
data16
int3
cmp
push
mov
xchg
sti
data16
in
sub
loop
js
jno
hlt
flds
push
xchg
add
std
sahf
ffree
xchg
inc
fcoms
out
xor
xor
sbb
jo
fnsave
sbb
jmp
adc
inc
sub
std
out
addl
xor
cmp
ljmp
shrl
shrd
jge
std
xchg
or
movsb
mov
into
enter
scas
test
movsl
push
pop
pop
pop
xchg
sub
shrl
fdivrl
jge
add
ret
flds
xchg
xchg
outsb
mov
add
sub
dec
push
or
les
inc
inc
lds
mov
lods
adc
cwtl
add
testb
push
xchg
pop
push
or
push
xchg
sub
mov
in
stos
lahf
dec
stc
push
lahf
mov
popa
mov
push
gs
movsl
push
pop
enter
mov
inc
loope
mov
cwtl
mov
mov
push
lahf
or
xchg
pushf
adc
push
dec
dec
adc
dec
mov
fdiv
lods
jle
in
mov
inc
in
outsb
es
jl
xchg
bound
pop
sarb
cmc
xchg
dec
mov
push
lret
xor
cmp
and
repnz
test
pop
out
jne
xchg
pop
cwtl
cmp
sub
xchg
das
xchg
ret
int3
subb
gs
dec
lods
decl
cmp
insb
cbtw
push
cmp
xchg
lea
and
mov
add
xchg
insl
roll
sti
sub
pop
cs
fiadds
scas
cmc
lcall
or
or
dec
mov
xor
ja
rolb
lods
fucomp
scas
roll
loopne
mov
push
fidivl
mov
std
add
inc
lea
stos
pop
out
fmulp
lds
mov
cmp
pop
xor
ret
lret
in
insb
call
cmp
aam
mov
dec
scas
in
mov
lods
sbb
dec
jge
in
lret
int
lods
shll
xor
je
cmp
mov
popa
xchg
loop
xor
fwait
cli
add
out
js
cmpsb
jbe
cmp
or
in
xchg
push
cmp
sbb
xchg
mov
in
rcll
mov
out
aad
scas
or
push
cmp
arpl
jno
bound
add
jge
xchg
xor
inc
test
add
imul
lcall
mov
xchg
mov
add
add
dec
adc
adc
dec
fadds
jp
ret
stos
xor
xchg
leave
push
scas
jmp
mov
call
cmpsb
in
adc
add
cmpsl
ret
test
dec
insb
and
or
nop
mov
shlb
cmp
mov
cmpsl
or
sahf
xor
xchg
pop
sbb
roll
adc
pop
pminsw
mov
lods
add
add
cmp
pop
pop
and
sbb
orb
sbb
leave
ds
adc
into
rolb
stos
jmp
es
arpl
les
sahf
jne
pop
test
dec
loope
sbb
pop
out
adc
ljmp
test
lcall
in
je
pop
ret
inc
in
dec
leave
pop
enter
test
inc
sub
cmp
shll
adc
stos
call
push
jp
lahf
and
mov
jb
xchg
and
or
cmp
lods
out
or
clc
inc
cmp
mov
or
lret
xchg
orps
add
inc
add
xchg
adc
test
xor
cltd
jnp
xor
hlt
and
mov
aam
adc
cmpsb
push
into
xchg
insl
aaa
push
sub
cli
insl
dec
xor
or
arpl
adc
test
pop
jl
shr
and
fiaddl
pop
test
enter
hlt
loopne
ffree
mov
rcrb
cmpsb
addb
push
mov
sbb
push
loope
sti
into
pop
aad
mov
push
gs
into
sbb
mov
pop
sbb
aas
jl
mov
xchg
ficoml
push
and
mov
mov
je
stos
and
jae
xchg
imul
addl
xor
add
shlb
in
adc
add
and
sti
xchg
into
aad
push
aaa
incb
pushf
out
sbb
outsb
std
in
add
add
or
or
insl
out
out
call
mov
std
inc
pop
jle
pop
iret
lret
mov
inc
in
fiaddl
in
lahf
xchg
push
fdivrl
jge
cmp
test
mov
ss
xchg
cmp
inc
and
lods
or
xor
cmpsl
xor
jge
ja
out
out
push
sahf
push
cltd
xor
push
repz
aad
dec
stos
sbb
mov
pop
mov
jge
aam
xor
sahf
jns
mull
push
mov
out
call
mov
sbb
mov
adc
or
test
insl
pop
xlat
stos
inc
mov
jg
cmp
cmp
mov
cmp
cmpsl
mov
outsb
arpl
jns
fstl
daa
pop
repz
arpl
test
jnp
mov
inc
mov
jb
adc
jo
xcrypt-cbc
cmpsl
push
mov
jo
mov
lock
scas
adc
jg
add
lods
mov
in
pop
xchg
fisttpl
dec
clc
jl
int3
mov
out
mov
mov
jno
adc
xor
push
pop
shlb
dec
xchg
push
xchg
bound
pop
and
stos
xor
and
loop
clc
pop
xor
ds
rcll
pop
fisubs
cmp
xchg
push
rep
xor
in
xor
jb
in
adc
mov
sbb
pop
popf
xchg
das
hlt
xchg
cwtl
sbb
aaa
inc
adc
push
fidivl
or
xchg
or
cmp
aaa
sub
sbbl
popa
sti
pcmpgtb
insb
dec
daa
lcall
xchg
repnz
mov
lods
and
pop
in
aaa
push
push
ljmp
jmp
inc
mov
lods
jg
dec
pop
fcmovnbe
mov
dec
add
push
vpaddd
cld
mov
imul
fisubrs
mov
loop
jnp
clc
mov
nop
adcb
push
fstps
jo
aas
mov
dec
in
adc
mov
mov
cmp
test
out
pop
sahf
mov
out
or
pop
mov
xchg
addr16
mov
sub
and
nop
dec
adc
bound
push
push
movsl
in
ljmp
sarb
pop
cmpsb
cmpl
out
imul
push
cs
notl
inc
push
call
mov
lcall
mov
or
or
scas
cmpsb
decb
or
jle
imul
ljmp
sub
dec
cmp
jae
adc
mov
js
push
roll
das
test
call
cli
push
test
push
dec
popf
jbe
adc
sub
fs
test
and
xchg
inc
pop
inc
and
inc
imul
sub
xchg
push
lea
adc
adc
iret
push
cmp
inc
mov
xchg
scas
ret
lea
inc
pop
pop
dec
and
movsb
lret
rcrb
cmp
and
insb
out
lret
mov
xor
xchg
dec
ficoml
lock
repz
pop
vunpcklps
lret
aas
aas
or
les
lock
mov
ja
test
test
dec
jle
sbb
int3
mov
dec
addr16
sub
int3
ret
mov
fdiv
mov
xor
mov
mov
jne
sub
xchg
inc
fwait
pop
pop
xchg
insl
andl
add
cwtl
inc
hlt
xchg
xchg
int
sahf
test
js
aam
xchg
push
pop
or
pop
mov
xchg
hlt
sahf
jecxz
adc
inc
mov
hlt
in
repnz
and
xor
mov
and
mov
adc
add
stos
mov
sub
push
mov
pop
push
loopne
fsubrl
and
jecxz
aaa
jmp
sbb
loopne
mov
sub
mov
cmp
xchg
dec
add
pop
outsb
push
push
jne
sbb
vpcmpeqd
adc
mov
fcoms
inc
mov
lret
mov
cwtl
addl
std
fstps
adc
sbb
ret
aas
imul
stc
in
xlat
addl
out
adc
sti
push
fidivl
notl
aad
xor
fstpt
ret
mov
fldl
int
das
cwtl
xchg
mov
in
mov
mov
pusha
add
into
ljmp
push
or
add
mov
leave
xor
or
mov
add
mov
gs
fisubl
cli
jne
aam
mov
cmp
inc
loopne
cmpsl
clc
gs
cmp
dec
mov
enter
hlt
xor
cwtl
je
inc
push
mov
outsb
orb
sti
or
or
test
int3
and
insb
stos
mov
fstps
mov
cmp
mov
xchg
sbb
add
add
push
jne
fwait
hlt
sbb
inc
sub
mov
loop
xgetbv
jg
xchg
sbb
or
and
xchg
cmc
je
popa
sti
mov
dec
lret
jp
enter
add
and
cmp
sub
sub
jno
push
fsubrl
add
out
in
pop
inc
add
adc
jbe
shl
shl
clc
scas
lret
scas
xor
push
push
aas
sbb
into
jns
sub
in
jne
out
lods
mov
out
and
push
sbb
enter
push
das
mov
mov
push
xchg
sub
ss
push
cmpsl
testb
dec
mov
add
bound
stos
lea
fadds
cmp
lock
xchg
cmp
stc
pop
mov
insl
aaa
enter
ficoml
and
imul
pop
sub
add
mov
lock
mov
jmp
std
lds
fucomip
jp
es
xchg
cltd
lods
lock
push
imul
mov
mov
or
rorl
push
cmc
movsl
mov
cmpsl
pusha
xchg
pushf
enter
adcb
push
in
cmp
mov
aas
pop
pop
ja
adc
enter
int3
lock
loopne
movsl
and
sub
cs
repz
dec
xor
or
cwtl
pop
push
push
stos
insl
loop
sub
mov
inc
call
xchg
outsl
insb
sbb
fwait
inc
xchg
out
mov
cmp
ljmp
adc
loop
mov
mov
inc
inc
mov
pop
lds
lods
push
test
call
mov
lock
call
and
xchg
addr16
outsl
ret
xor
inc
je
xor
mov
cmp
inc
jmp
rcll
pop
fistps
dec
mov
dec
jo
movsb
dec
pop
repz
sbb
and
jne
ljmp
and
push
jmp
jecxz
icebp
add
mov
pop
jno
sbb
pop
or
cmc
adc
mov
clc
pop
loopne
rcr
clc
mull
mov
mov
arpl
loopne
inc
and
mov
sub
insb
push
pop
xchg
imul
test
mov
mov
pop
xlat
mov
insb
scas
sub
lret
sub
mov
outsl
aaa
sbb
leave
push
jnp
inc
rcr
pop
sub
das
lods
mov
lret
pop
push
jbe
inc
lods
rep
dec
sbb
mov
inc
pmaddwd
dec
pop
outsl
out
push
test
arpl
cltd
push
sub
jo
mov
dec
movsl
mov
push
sbb
leave
jns
mov
sub
mov
mov
aad
xor
jg
xlat
xor
jl
jno
dec
cmp
fcomi
adc
pop
push
push
dec
sub
out
shlb
into
movsl
xchg
fcmovne
xchg
ret
ds
or
mov
jmp
pop
lds
mov
cmp
filds
push
fldl
push
cmp
dec
outsl
adc
mov
pop
lcall
addr16
fstpl
fs
data16
scas
shrl
roll
jge
xchg
rcrb
pusha
xchg
imul
mov
sub
sbb
dec
push
push
shll
cmp
fimull
divl
test
cli
div
sbb
pop
and
xor
rol
rcrl
inc
push
mov
enter
int
sbb
inc
mov
cmp
jnp
add
pop
cli
jae
sbb
rolb
repnz
leave
ret
pusha
xor
lods
mov
xor
mov
fwait
adc
mov
push
pop
adc
in
mov
rolb
mov
aas
lret
adc
lock
jne
jp
js
loop
fstp
and
into
pop
fs
cmp
lret
scas
xor
pop
leave
ljmp
sbb
fbstp
leave
ja
addr16
or
push
jmp
lret
pop
push
das
xchg
mov
ret
int
mov
mov
enter
gs
lds
pop
or
pop
cltd
nop
mov
add
mov
pop
repnz
mov
and
cmp
popa
ljmp
lods
cmp
mov
mov
sbb
aad
pop
sahf
inc
aaa
repnz
mov
jne
fdivrl
inc
lock
pop
nop
push
imul
movsl
mov
push
lahf
jnp
or
repz
mov
xchg
hlt
daa
mov
test
popa
lahf
dec
dec
push
dec
dec
push
sbb
mov
xchg
in
xchg
cmp
xor
mov
fcompl
mov
jbe
xor
cmpsl
adc
das
cltd
dec
mov
gs
and
dec
push
test
jg
out
loop
dec
inc
daa
stc
push
mov
ret
addr16
leave
mov
push
dec
loop
cli
daa
jbe
mov
bound
mov
data16
inc
mov
mov
sub
mov
jp
jbe
push
popf
and
das
lods
xor
test
aam
sbb
sub
les
and
insb
mov
push
mov
cwtl
cs
loop
mov
loop
adc
fildll
aad
pushf
inc
imul
aaa
fidivl
jae
rcrl
cmp
lea
add
sahf
xchg
aad
sub
pop
movsb
and
js
inc
sub
icebp
mov
mov
stos
sbb
push
in
add
jl
addb
aaa
push
insl
repz
out
inc
pushf
and
cmc
add
add
ret
push
pop
sub
sub
mov
int
ftst
mov
cmc
xchg
push
xchg
aad
imul
jle
dec
add
mov
je
xchg
push
dec
push
lds
scas
push
clc
xor
xchg
jl
xor
or
push
mov
repz
subb
in
jge
inc
dec
jne
xor
inc
mov
popa
int3
loope
loopne
push
sbb
pop
dec
jo
mov
xchg
xchg
fadds
mov
mov
sub
mov
nop
add
pop
scas
jg
push
fcoml
ja
subl
push
fwait
pop
xchg
cmp
jo
xor
loope
adc
xchg
push
and
xchg
pop
xor
out
testl
add
cmp
std
enter
pop
mov
cmc
movd
cli
je
jl
pop
cmp
mov
xchg
daa
scas
sub
movaps
dec
shll
mov
pop
hlt
adc
insb
ja
enter
and
adc
daa
sub
xchg
aas
pop
mov
jb
dec
push
xor
test
sub
cmpsb
clc
lahf
add
loope
mov
pop
and
push
pushf
ret
mov
mov
movsb
loopne
mov
das
mov
ljmp
ret
adcl
test
mov
xlat
mov
popf
ja
pop
in
fcmovu
lods
ja
stos
popa
cld
jmp
pop
in
repnz
cmc
jno
fisubrs
inc
out
scas
mov
mov
rcl
insl
and
cli
dec
cmp
jp
popa
add
push
xor
ja
enter
faddl
lret
popf
pop
jge
out
lods
dec
lods
aas
ljmp
pop
pop
in
sub
and
push
mov
jbe
fdivr
in
jae
jle
and
xor
fsubrl
fs
sbb
ljmp
sub
pop
mov
imul
add
add
mov
jle
aas
fwait
pop
jnp
repnz
xchg
jp
in
and
mov
pusha
rolb
leave
scas
pusha
outsl
xor
and
ljmp
add
inc
mov
sub
push
data16
ja
filds
insb
inc
mov
imul
jecxz
jae
rcrl
mulb
mov
xlat
pop
lock
dec
ret
daa
mov
pusha
cmp
mov
jnp
push
and
xchg
xor
jbe
int3
lods
leave
or
inc
pop
jne
inc
and
stos
gs
inc
sbbb
gs
sub
mov
call
mov
pop
stos
fnstsw
cmpsl
fcomps
leave
daa
or
call
lret
aad
xchg
je
int3
aam
pusha
jl
mov
jb
and
xchg
sahf
or
lahf
mov
dec
aaa
push
shrb
jecxz
js
lods
push
js
xorb
add
push
adc
es
fstpl
xor
sbb
adc
xor
xchg
sbb
inc
push
xchg
lock
movsb
clc
mov
sbb
sbb
addr16
push
sub
cmpl
adc
int
cli
mov
push
into
enter
sbb
add
stos
and
add
xchg
lods
and
mov
call
jno
mull
mov
mov
shlb
cmpb
push
xchg
mov
sub
jo
add
dec
cltd
inc
lds
popa
sti
xchg
inc
jle
or
test
into
sub
xlat
aad
xchg
dec
pop
fs
js
or
filds
in
rcrl
sbb
mov
shlb
ret
push
mov
in
mov
mov
cmpsl
subl
daa
lahf
fwait
adc
mov
ss
rorl
push
iret
xchg
or
scas
sahf
and
fcom
xor
dec
push
lcall
push
adc
jne
ror
movsb
ret
add
mov
xchg
jmp
addr16
mov
in
dec
lea
lahf
gs
lret
sbb
sti
in
mov
arpl
imul
sbb
sub
cli
mov
pop
add
scas
or
in
pop
adc
sub
sbb
fstpl
or
movsl
cmpl
and
push
test
jecxz
lea
pop
iret
push
adc
mov
pop
aas
dec
xchg
loop
lahf
sub
sbb
adc
mov
scas
das
sti
lret
add
mov
dec
inc
jae
gs
stos
aad
mov
fwait
test
test
pop
roll
lea
xor
or
fistpll
rcll
cmp
pop
jecxz
jmp
push
inc
xor
fisttps
cmpsl
call
mov
sahf
call
mov
lret
hlt
or
mov
js
lea
cmpsb
hlt
in
loope
mov
push
scas
divl
out
add
das
ja
pushf
in
pop
fisubs
jb
inc
and
jg
sbb
mov
inc
cmp
or
push
inc
jo
clc
add
dec
hlt
adc
out
inc
and
out
mov
mov
or
jae
jle
adc
pop
cmp
push
cmp
fildll
test
lret
iret
pop
fdivs
pop
test
or
mov
sbb
popf
adc
cmp
inc
js
rcrb
imul
call
and
test
sti
mov
loope
stc
xor
sub
sbb
arpl
xchg
mov
jno
test
popf
enter
movsb
push
test
push
jge
aaa
or
idivb
lock
push
mov
cmpsl
pushf
mov
mov
ja
and
xchg
mov
inc
cmp
hlt
mov
stos
dec
adc
sahf
data16
js
adc
lret
enter
stos
ljmp
mov
addr16
ljmp
test
pushl
push
insb
add
aas
stos
es
sub
ret
add
scas
add
fsubr
adcl
push
jne
jae
out
sub
stos
sbb
mov
cmpsb
push
dec
out
ja
dec
cmp
lret
jmp
sub
xchg
hlt
jl
shlb
jo
xor
mov
es
add
daa
jge
in
clc
sub
and
int
jmp
mov
inc
fs
in
add
sti
cmp
and
nop
or
ret
pushl
fwait
leave
push
inc
test
xchg
cmpsb
aas
mov
dec
or
lcall
sti
mov
or
jnp
sbb
adc
mov
mov
mov
inc
out
pop
arpl
and
in
jne
dec
xchg
xchg
int3
enter
stc
rol
outsb
lret
jle
nop
std
lret
cmp
and
sub
mov
cld
mov
inc
fidivs
stc
insb
rcrl
dec
sub
stos
xchg
repz
mov
inc
fistps
cmpb
mov
add
outsl
enter
mov
dec
lret
xchg
jo
outsl
cmp
call
fidivrl
aaa
test
inc
mov
fnstenv
dec
ss
mov
sub
cmp
inc
dec
cmp
movsb
pop
ret
add
clc
inc
xlat
scas
jl
lcall
mull
cmpsl
addb
jp
and
sbb
sub
adc
lcall
jge
cmp
pop
jns
push
and
faddl
int
sbb
push
fists
mov
test
aas
push
jge
notb
mov
mov
cs
pop
sbb
push
aaa
sub
cmpsl
sti
fldt
mov
jne
repnz
sub
in
add
roll
pop
mov
imul
fwait
cmc
rcrb
push
repz
mov
jp
mov
testb
xchg
mov
out
and
pop
xorl
push
movsl
ftst
xchg
adc
push
fs
pusha
in
and
mov
or
jne
lret
adc
iret
add
andl
or
popa
js
das
imul
xchg
inc
mov
sahf
dec
pop
roll
jmp
pushf
inc
and
push
mov
pop
adc
not
mov
sti
out
nop
adcb
in
add
fsts
out
xchg
lahf
and
popa
imul
or
lods
pop
addl
dec
mov
in
addb
or
sub
ret
add
pop
arpl
mov
imul
and
or
test
ss
sbb
add
mov
inc
outsb
repnz
inc
fildl
imul
subb
jecxz
push
mov
lahf
addr16
jo
cld
pop
sub
jmp
fst
cwtl
push
aam
test
loop
xor
jge
fs
jmp
dec
mov
mov
out
arpl
add
xchg
in
arpl
xchg
cs
int
xchg
test
adcl
clc
pop
inc
add
inc
mulb
jle
xchg
outsb
jae
into
pop
loopne
insb
dec
cwtl
imul
dec
cmp
shrb
data16
call
pop
cmp
addr16
cmpsl
sbb
cmp
call
rcrl
imul
sbb
jecxz
sub
out
dec
xor
xor
cmc
jl
adc
and
int
mov
xchg
aaa
sbb
mov
cs
and
filds
in
cmc
in
mov
fcoms
call
fwait
fs
pop
cmpsb
faddl
xchg
and
addr16
ud0
mov
mov
into
mov
decl
xchg
sbb
pop
sahf
in
or
mov
int
jmp
mov
mov
mov
cmp
xor
ss
decb
pop
icebp
movsl
mov
shll
fidivrl
inc
xchg
pop
cmp
and
aad
fstpl
outsl
sub
cld
outsl
jno
and
in
dec
xchg
ljmp
add
sbb
or
addb
ss
hlt
loope
or
add
add
gs
mov
push
jae
pusha
jno
xchg
arpl
stos
sbb
inc
sbb
cmp
and
mov
pusha
mov
fdivr
pop
insb
leave
inc
xchg
mov
push
add
push
fidivrs
pop
mov
mov
stc
repz
pop
into
testl
mov
cld
and
cs
mov
in
fiadds
sub
repnz
aas
dec
sub
lcall
sub
and
cmp
sub
fnsave
lret
ret
cmp
push
lock
xor
fimuls
js
cmp
lods
dec
bound
xchg
push
ror
xchg
cmpsl
jnp
inc
pusha
int
lret
loope
jb
icebp
xchg
shlb
sbb
dec
pop
adc
xchg
fbld
leave
adc
mov
out
sub
mov
or
inc
lea
push
mov
pop
hlt
push
xchg
out
bound
cli
and
shlb
dec
xchg
push
or
dec
inc
jle
sub
add
or
shll
xchg
cmc
cld
stc
push
enter
jne
into
jb
xor
xor
in
stos
mov
js
inc
dec
sub
cmp
mov
ljmp
push
and
jecxz
test
cmp
imul
movl
push
sub
jp
xorl
inc
xorb
pop
ss
pop
pop
icebp
std
rolb
mov
cmpsb
loopne
insb
mov
jmp
mov
std
ljmp
icebp
je
dec
test
mov
cltd
stos
pop
pop
popf
xchg
push
outsl
dec
xchg
mov
jo
xchg
fs
or
in
adc
bound
jmp
jge
mov
and
stos
inc
shl
sub
dec
and
xchg
push
in
xor
ss
cmp
movsl
cmpsb
repz
out
mov
cmp
dec
mov
cmp
xchg
cmp
iret
mov
int
enter
or
jge
fs
xlat
dec
movsl
out
in
stos
sub
shl
aaa
add
js
mov
ret
pop
cmp
adc
sbb
aas
add
mov
push
or
jge
cmpsb
les
add
inc
in
xchg
and
mulb
cli
and
inc
inc
xchg
inc
dec
add
xor
ret
stos
xchg
sbb
es
xchg
inc
pop
sub
enter
jns
lret
das
pusha
adc
mov
pop
fcomps
sbb
mov
push
neg
mov
popa
sbb
ret
xchg
xchg
into
and
dec
mov
cs
pop
xchg
mov
enter
aad
xor
mov
scas
push
xchg
lds
inc
mov
popf
stos
xchg
scas
rol
push
jg
subb
and
and
test
pop
leave
imul
xchg
sub
mov
push
ffree
or
stos
and
cmc
pop
cmp
pushf
xor
out
jmp
mov
jb
add
mov
shrl
mov
add
aad
test
loop
xchg
movsl
push
sub
mov
mov
inc
imul
icebp
mov
push
mov
repz
pop
xor
xor
push
add
ss
test
and
jp
mov
add
les
pop
inc
sbb
push
or
stc
add
ds
or
lea
pop
cli
mov
push
dec
xchg
cli
or
loop
shll
adc
pop
int
cmp
pop
xchg
sbb
imul
insb
fldenv
call
les
mov
rcr
sub
das
es
push
lock
mov
cmc
js
push
xor
and
out
xor
js
jle
dec
orb
fsubrp
rorl
and
dec
insl
incl
loopne
inc
aaa
lods
push
incl
cmc
ja
pop
repz
xchg
cs
jp
test
xchg
ss
rcrb
add
dec
add
mulb
inc
sbb
daa
ss
movlps
daa
add
testb
imul
bound
cmp
cli
push
rcr
lods
lahf
pop
or
sub
pop
dec
mov
mov
ds
stc
push
push
ret
push
jno
mov
xor
push
cmp
adc
in
jecxz
insl
jnp
lahf
sub
icebp
test
push
shlb
mov
or
repnz
xchg
inc
cltd
mov
dec
mov
mov
popf
scas
sti
in
mov
pushf
jmp
jl
mov
adc
sub
and
add
roll
fucomp
incb
shll
xchg
negl
mov
and
xchg
inc
out
xor
mov
sti
pop
aad
outsl
loope
mov
clc
mov
data16
into
mov
lods
sti
arpl
jmp
lahf
inc
loopne
pushw
addr16
popf
loop
aas
mov
cmp
pop
or
cwtl
xor
xor
cmp
pop
imul
inc
push
push
push
adc
xchg
cmp
xchg
cmc
movl
cwtl
daa
push
dec
cmp
adc
les
aam
push
mov
push
outsl
lret
adc
in
cli
cmpsb
ljmp
xor
sbb
pushf
xchg
cmpsl
stos
rcr
imul
inc
stc
adc
call
push
sub
cmp
xchg
loope
cli
or
ss
fildl
enter
cmp
dec
push
xchg
and
xchg
mov
or
and
pop
dec
xchg
sbb
xor
mov
mov
out
cmp
mov
jle
mov
cltd
clc
int
adcb
mov
or
ljmp
into
or
push
ret
test
xchg
dec
aas
stos
pop
and
arpl
inc
jns
lahf
cmpsl
shlb
sahf
push
add
mov
push
mov
dec
mov
mov
jnp
std
roll
mov
jo
xchg
daa
aaa
cwtl
mov
xchg
loope
rclb
shll
jno
fiadds
sub
aam
jb
xchg
imul
or
mov
repz
int
cmpb
dec
and
test
adc
inc
jle
lods
fwait
icebp
add
pop
push
shlb
mov
pop
es
sbb
inc
sub
ljmp
xchg
fwait
mov
daa
jmp
movsl
fstps
adc
mov
push
cltd
cmp
jmp
mov
rcr
cld
add
popa
dec
loope
mov
mov
or
popa
xor
repz
out
lods
jmp
cmc
xorb
sub
or
jnp
dec
fbstp
push
inc
stc
cs
insb
mov
xor
mov
inc
sbb
scas
mov
mov
mov
inc
xor
mov
inc
sub
or
es
fwait
stc
pop
lock
or
xor
std
adc
adc
push
cmp
sarl
adc
xchg
popf
pop
andb
mov
aam
push
xor
cwtl
nop
push
out
out
sbb
mov
mov
sbb
adc
data16
fidivrl
mov
lahf
lea
mov
enter
call
mov
ss
repz
outsb
cwtl
push
lods
iret
lods
ja
mov
scas
repz
jns
mov
jge
fdivl
adc
ja
push
or
repnz
into
test
mov
cli
int
ja
std
sbb
ret
je
xchg
shll
pop
cmp
test
inc
imul
lods
movsl
mov
and
xchg
jbe
jle
rolb
mov
enter
movsl
out
icebp
jb
clc
sub
inc
and
add
push
jbe
mov
test
mov
imul
sbb
test
inc
and
ret
sub
loope
fs
jbe
int
cmp
inc
cmp
sub
data16
mov
test
rolb
loop
pop
xorl
or
push
cmpsb
mov
add
lods
adc
idivb
inc
add
push
cmp
add
insb
sbb
ss
imul
add
lock
out
xchg
jl
jg
inc
cltd
popa
mov
cmp
pop
mov
addr16
dec
mov
push
cwtl
mov
push
push
sbb
xchg
sbb
add
jbe
pushf
int
rcrl
xchg
cld
mov
jno
notl
jns
cmpsb
inc
out
add
adc
fisubs
dec
es
mov
jb
test
or
das
and
cltd
jns
mov
ljmp
bnd
xlat
cwtl
int3
push
add
addr16
push
or
dec
jbe
inc
adc
sub
bound
push
and
ret
jge
mov
jne
xchg
mov
flds
ret
and
movl
imul
dec
pop
lcall
mov
add
or
fucom
pop
insb
stos
push
xchg
inc
push
das
lea
and
xchg
into
mov
dec
jo
hlt
mov
test
pop
aad
jae
inc
inc
inc
loopne
ss
out
mov
pop
jns
mov
pusha
cmpsb
push
mov
lds
xchg
sub
cmp
js
xor
fstps
inc
mov
mov
mov
sahf
xchg
mov
loop
add
stc
lcall
mov
pop
shr
shlb
fsubrl
cltd
lock
sbb
adc
and
xlat
cmp
test
andb
ja
lods
dec
std
or
push
lahf
cmp
xor
push
add
aad
push
lcallw
xor
xor
fwait
mov
test
stos
pusha
pop
jge
adc
mov
add
add
jne
xor
cld
jge
jne
in
pop
js
test
stos
sbb
nop
sub
and
ror
push
hlt
jo
in
clc
cmc
jno
jno
aam
add
mov
pop
sbb
call
dec
test
push
adc
test
sbb
adc
imul
push
sahf
xor
bound
mov
mov
mov
scas
adc
xchg
subl
xor
repz
adc
mov
aam
pop
gs
mov
fildl
cwtl
inc
xorl
cli
lds
inc
xchg
out
mov
negb
ja
cmp
inc
add
adc
or
lret
scas
fwait
adc
jp
add
pop
xor
push
mov
js
xchg
js
push
pop
clc
dec
les
idivb
dec
jae
inc
mov
push
movsb
and
cmp
test
stos
cmpb
test
aaa
mov
adc
mov
lret
and
push
sub
fsubr
xchg
push
xor
sub
jg
out
outsb
mov
rol
frstor
xlat
test
bound
dec
mov
fnsave
popl
popa
stos
mov
test
jmp
fadd
or
mov
xchg
pop
or
adc
movsl
cmp
dec
and
loop
jb
pop
pop
push
mov
dec
out
mov
loopne
or
scas
sahf
inc
mov
mov
lock
cmp
out
ret
push
mov
filds
jle
mov
fcomps
sbb
stos
fwait
stos
xchg
dec
pop
push
imulb
test
or
xor
inc
stos
push
jb
xchg
or
inc
inc
mov
pop
mov
enter
push
in
mov
out
sbb
pop
mov
cmc
cmp
add
cmp
nop
pop
imul
test
pushf
push
faddl
cs
frstor
std
add
bound
imull
aam
and
call
mov
jecxz
jae
xchg
in
cmc
xchg
mov
stc
jmp
push
dec
iret
aam
cmpsb
lea
push
mov
movsb
out
test
scas
sbb
xlat
ja
mov
add
push
leave
cmpsl
je
in
loope
mov
pop
sbb
mov
loopne
pop
aas
add
or
sar
xchg
dec
cli
sub
push
lds
fidivrs
movsb
ss
ret
fnstsw
dec
mov
ljmp
and
inc
addb
mov
and
lock
pop
add
or
inc
movsl
sub
es
jb
dec
lea
xchg
roll
out
or
cmp
mull
sub
push
jle
out
test
push
jae
scas
push
cmpsb
pusha
mov
es
insb
cld
sbb
push
nop
fdivrl
movsb
xchg
fldcw
mov
inc
and
jne
mov
shrl
push
fadds
sti
push
or
hlt
cs
push
push
jno
sub
add
leave
pop
lock
inc
jge
test
mov
mov
sub
pop
out
jle
popa
dec
sub
inc
mov
xor
roll
xor
xor
sbb
inc
stos
int3
pop
ss
loop
out
cmp
aam
jl
pop
or
xlat
cmc
call
pusha
sub
xor
je
xchg
daa
xchg
sti
mov
negl
rclb
pusha
fisttpll
mov
in
xchg
push
push
shlb
iret
movaps
in
adc
push
jp
out
int
and
mov
jmp
mov
addr16
xor
loopne
cmpsl
mov
cli
push
ljmp
sub
popf
jl
dec
add
xor
cmc
fdivl
repnz
xchg
loope
sub
inc
dec
cmpsb
jecxz
sbb
icebp
subb
out
sbb
sub
aas
adc
in
shufps
sbb
inc
mov
in
fidivrl
push
lock
push
push
iret
in
out
outsb
popf
cmp
or
dec
fmul
ds
mov
movl
inc
sbb
xor
push
cmc
pusha
xchg
xchg
in
jae
pop
and
xor
mov
aam
cli
push
cli
pushf
pop
inc
int3
daa
mov
mov
call
adc
push
fdivr
xor
imul
data16
rsqrtps
clc
adc
jg
or
sub
jo
mov
jb
dec
add
psrad
into
add
inc
in
lock
jnp
cli
ret
mov
jae
jl
xchg
push
ljmp
and
sarl
bts
add
pop
xchg
dec
mov
into
jmp
outsb
lahf
lea
pop
xchg
add
push
stos
mov
xchg
loope
mov
mov
mov
es
sub
push
mov
mov
js
jmp
lret
mov
push
mov
mov
test
int
hlt
aas
pop
jnp
or
mov
lea
push
clc
cmpsl
je
push
mov
sub
movsb
lock
sbb
addb
rorb
jb
mov
in
jecxz
repz
mov
iret
repz
pushf
pop
or
fsts
pop
mov
fisttpll
loopne
inc
repnz
imulb
ret
xor
cmpsb
movaps
push
test
or
les
fcoms
pop
data16
and
daa
and
push
mov
jb
mov
int
mov
in
je
adc
test
inc
je
jns
and
pmulhuw
dec
or
xchg
dec
and
cmpsb
imul
in
test
scas
mov
in
mov
addr16
push
adc
stos
adc
jae
cmp
mov
cmp
fdivrl
js
mov
repz
loope
out
fldln2
add
inc
or
push
or
pop
and
xor
mov
pop
dec
inc
fs
mov
adc
mov
lret
jle
dec
adc
or
xor
lods
scas
stc
movsl
aad
cs
inc
insb
push
jecxz
jbe
loop
icebp
jno
shrb
push
sbb
ret
fildl
inc
in
push
std
clc
and
dec
or
jb
jbe
push
jno
out
pop
insl
loope
pop
and
cmp
add
loope
pop
jae
pop
movsb
mov
add
inc
lea
fildll
mov
stos
sbb
cmp
jp
repnz
mov
imul
push
mov
outsb
movb
sub
scas
pop
cmp
sahf
cmp
loope
push
sahf
sub
jnp
inc
daa
int
daa
movsl
add
cmp
xor
xchg
lahf
mov
jl
mov
ljmp
dec
and
out
nop
adc
push
clc
xchg
movl
pusha
jmp
pop
cmpl
lcall
in
test
mov
cs
movsl
dec
inc
icebp
sbb
lods
stos
sti
pop
sbb
in
and
mov
js
mov
push
cld
xor
pop
fsubrs
push
mov
mov
jae
mov
sbb
adc
jle
movsl
xor
ret
bnd
jns
jbe
les
xor
xchg
mov
xor
mov
inc
sti
stc
rcrb
aaa
xor
inc
arpl
js
fstps
insl
and
popa
sbb
jae
xchg
pop
ja
push
mov
into
test
mov
lcall
loope
inc
pop
push
fldt
fidivs
jnp
push
add
popl
adc
out
shll
or
les
add
cmp
fiadds
sub
cli
cld
inc
sahf
xchg
cmp
add
ret
xor
test
aam
insb
divb
and
ret
stc
movsl
inc
ret
mov
rcl
mov
inc
add
and
mov
mov
push
cmp
pop
ss
icebp
sahf
lea
push
jae
jne
scas
push
xchg
adc
mov
dec
sub
enter
xor
iret
cmp
scas
sbb
jae
and
sbb
popf
test
out
cmpsb
cmp
es
fs
dec
sbb
loope
sarl
rcl
int3
sbb
push
pop
jae
or
xchg
popa
in
je
jbe
push
jne
sub
xor
push
inc
cmpsl
xchg
mov
adc
push
pop
push
enter
push
add
push
imul
jb
mov
mov
adc
xor
mov
dec
mov
sti
outsl
pop
push
idiv
out
in
lahf
sub
and
out
lods
aas
mov
cmpsb
mov
pop
lock
jmp
incl
mov
mov
enter
cli
je
out
push
or
mov
jne
xor
mov
lock
pop
adc
shll
insb
cmp
dec
loope
imul
mov
cmp
jg
test
ret
notb
std
jg
adc
rcrb
dec
mov
add
push
add
ret
pop
dec
mov
sbb
jbe
sub
mov
cmp
mov
mov
adc
bound
je
cmpsl
mov
andw
push
adc
or
and
pop
out
std
fistpll
jns
adc
rorb
sub
bound
test
dec
jo
dec
lahf
push
stc
cld
movsl
test
inc
pop
jle
jg
aam
rcrb
adc
pop
aas
add
call
jnp
enter
pop
cs
xchg
dec
mov
out
hlt
push
inc
sub
adc
or
mov
dec
add
jbe
sbb
hlt
dec
jmp
push
pop
sahf
or
nop
xchg
inc
icebp
stc
inc
push
andb
and
jb
mov
pop
pop
dec
adc
cs
lock
dec
push
or
dec
xchg
push
cs
and
loope
addr16
inc
subb
pop
cmc
jmp
adc
scas
mov
xor
mov
mov
adc
inc
dec
mov
int
xor
fwait
sahf
dec
add
sbb
jmp
dec
out
or
sub
cmp
pop
xchg
mov
imul
movsl
lahf
fidivrs
int
and
das
mov
std
inc
cmc
cmp
lds
popf
pop
mov
mov
dec
add
sbb
dec
cmp
int3
push
in
cmp
pop
das
lcall
pop
les
mov
scas
sbb
xchg
ja
bound
loop
jns
mov
cmpsb
lahf
ret
sbb
fcmovb
in
inc
xorl
inc
mov
or
push
cltd
mov
pop
ljmp
shrl
pop
movsl
es
inc
jecxz
push
push
pop
cmc
out
ror
mov
popa
and
jecxz
mov
dec
pop
adc
pop
lods
sbb
bswap
ja
imul
jbe
test
setne
pop
add
popf
or
pop
aas
push
jecxz
icebp
into
dec
aas
jmp
cmp
fdivr
xor
out
xchg
adc
sub
ret
imul
jg
cli
jg
jmp
ds
test
lock
and
test
sub
dec
push
mov
sub
pop
lret
jle
aas
sar
das
pop
aad
leave
pop
enter
roll
imul
or
loopne
pop
mov
and
loop
enter
cmp
add
or
fwait
mov
push
or
rcl
fcoml
insl
mov
xchg
xchg
mov
outsl
sub
bound
add
pop
popf
ror
shrl
fninit
cmpsb
xchg
gs
sub
in
pop
add
cld
dec
pop
bound
inc
pop
jns
cmp
bound
imul
decb
enter
into
sub
xchg
dec
mov
jle
dec
fdivrl
push
push
or
xchg
imul
xor
insb
in
jecxz
gs
into
pop
inc
mov
add
and
fistps
jae
sub
das
push
adc
push
imul
lret
xor
fsubr
cwtl
mov
fidivl
jmp
popf
dec
inc
xchg
mov
cmc
and
pushf
clc
inc
sbb
rorl
gs
jnp
cmp
inc
xor
jnp
pop
test
lods
jae
mov
idivl
xchg
insl
pop
sub
dec
pop
les
ret
das
scas
mov
push
pop
sbb
xchg
inc
and
adc
cli
sbb
xchg
mov
mov
jnp
sahf
movsl
fwait
hlt
daa
fstps
dec
inc
in
sti
and
mov
inc
out
dec
adc
add
js
mov
lea
sbb
mov
inc
insb
xor
fisttps
cmp
rcll
jge
fwait
cmpsl
sub
out
cwtl
and
popf
cltd
scas
sbb
shlb
rcll
sub
mov
push
adc
pushf
add
xor
inc
jne
jnp
mov
loop
cs
in
fsubs
and
jp
sti
fiadds
sarb
jecxz
cld
or
sbb
es
fisubrl
mov
mov
fs
jb
jge
xor
xchg
in
xor
xlat
imul
shrb
sbb
pop
xchg
scas
lret
jl
adcb
ja
mov
fidivs
sar
jo
xor
rcrb
les
mov
or
sbb
loop
sub
cld
cltd
out
xchg
aam
mov
out
aad
pop
inc
pop
test
fsubrl
fldcw
cmp
mov
shrb
jecxz
test
insl
mov
jle
aas
std
and
jno
outsb
dec
xchg
pop
mov
iret
adc
out
add
and
das
sub
dec
ja
add
test
and
test
ss
addr16
mull
out
stos
pop
xchg
xchg
imul
or
stos
ret
test
lods
cbtw
aas
sub
imul
fs
jge
aaa
nop
loopw
xor
sub
and
enter
stos
mov
or
popa
sub
push
fisttpll
mov
adc
aas
aas
adc
mov
sbb
lahf
jecxz
sub
lods
ss
nop
int3
in
pusha
inc
or
insl
movsl
inc
mov
mov
sbb
cwtl
lcall
rcrb
pop
sbb
lds
fwait
cmp
pop
xor
pusha
and
mov
cmpsl
test
jge
mov
fists
sub
xchg
xchg
adc
and
cmpsl
pusha
shll
sub
mov
or
pushf
push
sub
stos
shr
repnz
xchg
cmp
rcl
sub
lods
test
and
addl
les
lock
scas
lret
xor
hlt
in
aad
addr16
mov
repnz
cmp
inc
mov
jne
inc
pop
lds
adcb
out
idivb
sub
xchg
inc
sbb
pop
pop
jl
mov
js
mov
adc
mov
rcrb
fcmovnu
cmpsb
or
test
call
mov
xchg
movsl
mov
imul
mov
and
adc
or
lods
xlat
push
adc
sub
add
cwtl
inc
sti
bound
mov
push
dec
out
insl
dec
cmp
cs
ret
hlt
test
lock
rol
dec
imul
in
scas
inc
and
addr16
jae
je
out
aad
lds
or
xchg
push
push
sub
adc
mov
sti
out
pop
aas
loop
mov
xchg
sub
or
mov
sbb
mov
stos
mov
enter
xor
ja
out
clc
mov
scas
lea
push
sarl
test
jmp
jns
adc
das
lret
jg
fs
loop
loopne
add
jg
cmp
out
lds
cmp
pop
cmpl
pop
notb
sbb
aam
sub
mov
enter
pop
shrd
sbb
push
dec
mov
repz
stos
xor
ds
repnz
cmp
mov
pop
jmp
push
lods
mov
jmp
jno
jle
adc
adc
push
sbb
lds
cmp
out
push
push
pop
jmp
popf
xor
call
ficomps
push
js
adc
push
xor
cmpsb
popf
ljmp
mov
cmp
decl
mov
or
sahf
pop
pusha
xlat
jb
ss
call
lret
mov
fnsave
inc
negb
testb
and
mov
adc
rcll
mov
cmp
xor
jmp
jno
jno
mov
xchg
xchg
inc
sbb
add
or
hlt
addb
shl
jge
xchg
inc
and
ds
fadds
aaa
ss
stos
cmp
aam
insl
lods
ficompl
pusha
jg
stos
lock
cmp
sub
jo
mov
jp
movsb
fstpl
lcall
jne
inc
pop
stos
xchg
stos
adc
xchg
cmp
sbb
mov
mov
movsb
fmuls
xchg
dec
mov
lcall
repz
call
lret
sub
enter
xchg
aad
test
pop
mov
inc
mov
jns
test
xchg
adc
into
aaa
fisubrl
stos
rcrl
pop
int3
xor
ficomps
shrb
shl
jl
inc
cmp
pushf
aam
cli
mov
call
sbb
movsb
cmpsb
jg
adcl
xchg
paddb
sbb
sbb
pop
movsl
add
and
inc
icebp
icebp
cli
inc
adc
pop
jae
mov
fcoms
dec
je
sbb
xchg
cld
das
push
adc
mov
and
jo
add
xchg
lods
or
lcall
xchg
test
mov
xchg
popa
jle
test
jb
mov
sar
repz
push
inc
ss
sbb
dec
inc
mov
inc
orb
andb
jl
dec
decb
inc
pushf
pop
xlat
and
lret
insl
push
sti
jge
ja
xchg
in
jmp
cmp
dec
sub
push
aaa
pop
outsl
sbb
rclb
mov
sbb
outsl
mov
repz
fsubs
icebp
loop
inc
cli
fildll
testl
aam
sbb
adc
fnstenv
and
push
mov
test
lods
cmp
cltd
ret
xchg
adcb
sbb
sbb
sub
ja
mov
je
xor
dec
cmc
cli
ds
ficompl
xchg
and
mov
sbb
cmp
out
rorb
push
and
in
stos
xchg
sbb
mov
ds
mov
mov
subb
jae
or
inc
or
outsl
lods
enter
test
lods
lods
jmp
sbb
ret
or
mov
cwtl
push
outsl
insl
push
cmp
cli
lahf
xchg
lea
mov
xor
cmp
sub
cmpsl
pop
add
xchg
pop
adc
neg
pop
pop
jmp
xchg
jno
inc
loopne
popf
mov
inc
sbb
outsl
cmpsb
push
mov
xchg
test
xchg
sbb
call
add
push
cmpsb
mov
xchg
out
mov
push
sub
adc
push
aas
fisubs
rorl
insl
mov
push
push
mov
xor
test
sbb
iret
js
movntps
lds
xor
fst
jo
pop
and
sbb
fisubrs
stos
pop
stc
xchg
push
hlt
enter
add
mov
sub
sub
xchg
adc
std
clc
cltd
stos
out
fadd
pop
push
cld
call
pop
outsl
int
mov
mov
pop
outsl
int3
lret
ret
inc
xchg
rclb
xchg
cmpsb
mov
xchg
stos
mov
daa
push
add
xor
jg
fwait
lahf
or
insl
jbe
mov
pop
cwtl
popf
hlt
and
jg
push
push
mov
pop
cs
sbb
pop
xor
or
sub
mov
xor
adc
aas
insb
inc
xchg
pop
lahf
aas
gs
pop
int
bound
pusha
sbb
shlb
pop
mov
ret
hlt
push
jae
xchg
push
add
cs
cs
sub
or
mov
dec
enter
scas
dec
fists
sbb
insb
mul
cli
cmp
lcall
inc
sub
add
stc
insb
dec
add
fadd
test
mov
shl
cmp
mov
cmp
stos
add
push
xor
jne
sub
xor
aas
sub
and
and
jle
pop
adc
mov
xlat
js
dec
cwtl
sub
push
das
cwtl
xor
sbb
inc
ret
adc
cs
push
imul
xchg
ja
jbe
lock
ror
mov
cwtl
sbb
sub
aaa
mov
cld
mov
xchg
mov
cmp
les
push
sub
and
pop
mov
repz
into
out
ljmp
popa
outsb
mov
in
jbe
stos
scas
sub
cmp
xor
insb
int
pop
cld
push
xlat
mov
add
xlat
jne
push
imul
jne
repz
pextrw
ds
mov
mov
lret
outsl
imul
jo
or
adc
dec
xor
xchg
dec
sbb
test
or
sahf
xor
