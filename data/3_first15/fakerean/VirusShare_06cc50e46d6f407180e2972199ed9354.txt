rcr
mov
add
add
incl
add
fsubl
and
push
aam
adc
mov
cmp
push
jno
jns
and
jns
cld
adc
je
test
xor
mov
mov
push
add
or
out
add
and
push
push
loope
shll
mov
pusha
mov
clc
call
push
add
loopne
jns
adc
add
jns
cld
test
jl
test
das
or
add
bound
jae
fimuls
sti
incl
add
pop
mov
loope
cmp
dec
cmp
add
movsl
push
dec
je
jg
ljmp
jg
popf
sub
imul
jg
int
jne
test
pop
jns
add
test
ja
mov
ret
repz
add
add
dec
mov
fmuls
inc
pop
std
inc
imul
flds
inc
or
out
iret
fiadds
push
lods
or
add
jns
add
ret
push
jns
inc
je
out
ljmp
and
inc
in
inc
push
jns
add
clc
and
lock
sub
stos
jae
dec
pop
lock
clc
out
add
add
sbb
inc
inc
add
jge
inc
inc
add
sub
sar
inc
dec
imul
inc
je
data16
or
or
xchg
mov
mov
aaa
inc
inc
add
test
mov
mov
jbe
rolb
jns
mov
jns
jnp
mov
mov
mov
cmpsl
je
test
cmp
test
sti
add
jns
in
cmp
jns
cmp
sar
pop
inc
mov
fdivrs
call
mov
std
xorl
inc
add
enter
mov
hlt
xchg
pop
adc
daa
notb
push
lock
inc
sub
fcomi
xchg
arpl
cmp
pop
and
fcoml
cmp
xor
dec
and
xor
push
cmp
pop
cs
pop
and
fcoms
es
push
xor
ljmp
adc
push
cs
adc
or
dec
or
out
push
outsl
sub
cs
jp
adc
sub
push
and
sub
adc
sub
adc
ljmp
jnp
pop
and
out
pop
jno
ljmp
xor
adc
in
pop
cs
adc
daa
notb
cmp
dec
jno
lock
jno
call
pop
xor
pop
cs
bound
sub
xor
hlt
pcmpgtw
pop
aas
xor
pcmpgtw
push
xor
adc
xor
adc
push
insb
jnp
pop
xor
pop
cmp
ficoml
cmp
pop
das
das
lock
arpl
fstl
jno
push
es
and
jb
push
sub
xor
push
data16
cmp
fs
dec
and
xor
pop
and
ljmp
daa
repnz
jno
sub
push
inc
jl
adc
dec
icebp
jns
mov
icebp
arpl
xchg
pop
dec
icebp
pop
jno
sbbb
cmc
js
or
aam
push
pop
or
push
pop
mov
mov
aas
out
mov
or
jmp
icebp
xchg
sti
hlt
or
push
jl
shl
iret
or
sbb
icebp
sub
mov
mov
cmpsb
notb
mov
and
aas
pop
and
pop
dec
adc
mov
hlt
dec
aas
xor
scas
adc
je
and
fsub
xlat
arpl
icebp
push
ds
ficoml
fstps
and
rcl
fldl
and
nop
pop
dec
icebp
out
mov
in
call
nop
sahf
repz
mov
call
mov
jo
scas
pop
cli
in
ljmp
mov
aam
or
lea
jnp
mov
pusha
call
insl
fimull
or
movsl
cmp
pop
test
loop
mov
int
fdiv
pushf
repz
cs
and
mov
lock
pop
faddl
fwait
jne
xchg
pop
dec
fs
dec
xor
dec
jne
xchg
pop
dec
add
cs
pop
je
je
test
jbe
pop
mov
pop
je
in
jne
inc
dec
xchg
fcoml
push
mov
gs
dec
icebp
jbe
loop
xchg
cs
jno
pop
fsubr
adc
jle
cltd
pushf
repnz
pop
sbb
scas
test
ret
ds
sar
dec
dec
jnp
adcb
mov
mov
xor
insl
jae
gs
aas
out
mov
or
aam
mov
loope
mov
add
adc
sbb
xchg
pop
dec
icebp
adc
inc
jae
dec
dec
cli
movsl
dec
icebp
xchg
pop
aam
jne
dec
jp
mov
sbb
lock
pop
out
mov
pushf
add
dec
jl
lahf
aam
mov
scas
test
xor
push
push
xor
sbb
test
data16
pop
jne
dec
clc
push
sbb
xchg
mov
dec
pop
push
xor
pop
cmc
and
mov
pusha
jp
cmpsl
push
mov
xlat
ss
pop
aam
pop
or
mov
pusha
sub
das
and
xchg
push
lret
pop
dec
inc
pop
mov
out
mov
or
repz
pop
aam
mov
loop
cli
pop
dec
icebp
xchg
scas
test
hlt
cmpsl
dec
pop
mov
aam
fwait
cmp
xor
adc
pop
xchg
pop
repz
cmc
pop
and
cmp
call
or
pop
jl
pop
or
add
nop
push
and
cld
push
inc
clc
cld
cmp
inc
inc
aas
loop
nop
and
inc
push
aam
jns
dec
mov
shlb
jl
dec
aam
test
xlat
cld
nop
sub
ss
pop
lea
int3
scas
imul
in
fcomp
mov
leave
icebp
xchg
pop
insb
dec
or
int
xchg
pop
dec
inc
mov
fdiv
mov
push
aas
sub
ljmp
mov
negl
loope
sub
jge
cmp
and
test
dec
pop
mov
clc
out
lea
push
mov
hlt
dec
push
or
pop
mov
loope
test
add
mov
test
aam
mov
add
nop
push
and
flds
push
mov
cmp
out
icebp
xchg
pop
dec
pop
je
nop
out
lods
icebp
xchg
pop
aam
nop
and
inc
push
int3
fimull
lock
out
mov
andl
dec
icebp
xchg
inc
and
stc
nop
fisubrs
je
pop
dec
icebp
js
fstpt
xchg
pop
insb
inc
or
icebp
xchg
pop
dec
pop
mov
paddsw
int3
mov
or
xor
insb
fldenv
mov
dec
jl
repnz
sub
pop
aam
mov
dec
jl
pushf
mov
pop
dec
hlt
ds
aam
test
pop
sahf
lock
mov
dec
dec
mov
repz
pop
pusha
pop
mov
jmp
icebp
or
jl
dec
aam
cltd
cli
clc
jp
inc
pop
mov
dec
sub
fcmovu
or
xor
dec
xchg
aam
in
xor
pop
xchg
xor
push
mov
pusha
ss
mov
in
mov
jb
popf
mov
mov
pop
dec
stc
addl
xchg
out
mov
jecxz
xor
sub
sub
dec
les
divb
shr
es
nop
push
add
out
dec
adc
in
pop
lock
jno,pn
add
push
dec
sub
jne
cmp
mov
pop
pop
popa
imul
xchg
or
dec
mov
add
xlat
inc
mov
outsb
out
push
jb
out
sti
ret
lcall
cli
mov
xor
inc
add
dec
mov
mov
inc
push
dec
lahf
std
xor
fldcw
lods
cld
std
sub
xchg
cmpsl
cmp
lds
push
repnz
inc
cmp
lea
dec
scas
inc
cmp
daa
jae
mov
stc
sbb
cmp
push
sub
addl
pop
or
inc
inc
cmp
repnz
mov
mov
inc
hlt
arpl
ljmp
subl
or
dec
mov
cmp
arpl
dec
sbb
aas
lahf
or
ss
nop
das
cmp
pop
mov
ljmp
rcll
mov
frstor
xchg
jle,pt
test
add
xor
stos
popa
add
mov
jno
or
repnz
adc
or
loop
dec
dec
jbe
mov
dec
xchg
fidivs
adc
aaa
cmp
scas
aaa
add
mov
and
push
pop
outsl
stc
or
ret
cmp
decl
sahf
adc
push
push
cli
std
or
push
dec
cltd
and
fimuls
sub
lret
out
adc
and
dec
push
stc
test
je
fs
inc
cltd
add
xchg
inc
rolb
dec
and
in
push
test
add
fdiv
fwait
jp
shrl
hlt
jnp
inc
icebp
loop
pop
pusha
les
sbb
fcomps
mulb
xchg
and
push
push
sbb
inc
aaa
popa
jl
cmp
pop
inc
adc
or
cmc
pop
pop
je
jp
xchg
push
pminub
aaa
push
das
cmp
arpl
test
in
lcall
xor
push
jbe
add
pop
push
jns
js
sbb
sub
dec
mov
and
dec
xor
jno
or
mov
xchg
outsl
lret
jge
sub
lds
pop
mov
or
or
mov
jo
insl
popf
or
cs
push
push
lods
daa
push
xchg
fldenv
mov
xor
push
mov
jge
xchg
inc
dec
mov
push
fdivrs
adc
push
idivl
cmp
out
dec
fimuls
adc
dec
test
pop
mov
outsb
lea
loope
push
int
push
dec
nop
and
ds
dec
jp
mov
push
mov
mov
pop
lods
test
sbb
lea
push
call
push
in
inc
cli
cmc
daa
sub
adcb
dec
xchg
cmpsb
adc
adc
loop
test
inc
imul
es
fistps
les
dec
popa
jno
sti
pop
adc
pop
repz
dec
xchg
cmp
lret
nop
mov
out
push
mov
aas
sbb
sbb
jno
pop
cs
adc
repz
subb
push
mov
aam
push
push
js
dec
mov
and
add
mov
dec
dec
fwait
inc
es
add
call
jecxz
sbb
cld
xchg
push
sub
cmp
insl
stos
push
daa
insl
sbb
mov
jns
inc
jne
dec
aas
aam
repnz
and
inc
push
pop
xchg
xor
ja
popf
aaa
lret
in
flds
xorb
add
pop
inc
xchg
jle
jbe
sub
add
push
mov
fwait
dec
arpl
imul
test
or
and
push
adc
add
fildll
pushf
lret
rcrl
dec
out
mov
cmp
adc
clc
inc
test
dec
adc
ret
pop
dec
enter
cltd
xor
imul
flds
jl
popf
ret
pop
orb
mov
and
lret
xchg
or
es
dec
shrl
pop
pop
pop
jb
cmc
orb
mov
xor
cmp
arpl
mov
cmovs
sahf
stc
mov
mov
mov
jnp
sub
or
dec
jmp
and
jle
xchg
and
ljmp
push
sbb
dec
loope
addr16
sub
sbb
std
bound
pop
xor
or
mov
pop
shll
leave
mov
inc
xorl
xor
add
ret
adc
jo
ja
pop
mov
sbb
or
popa
sbb
incb
fs
jecxz
movl
sbb
inc
aam
fstpt
clc
inc
enter
scas
jge
shll
dec
dec
out
mov
xchg
and
test
test
pop
clc
jae
sbb
mov
pop
sbb
aas
subl
adc
pop
push
je
mov
fldcw
scas
push
adc
or
std
pop
jge
fwait
pop
dec
xor
pushf
mov
add
fmuls
xor
pop
div
pop
testl
out
add
or
push
adc
cmp
js,pn
data16
jl
int
push
jb
mov
xor
movsb
inc
fs
in
sbb
mov
dec
adc
daa
pop
fimuls
or
sbb
mov
std
pop
int3
sbbl
xor
mov
and
sbb
jl
cmp
add
lret
sub
inc
daa
jno
fmul
cmp
and
mov
cmpsb
cmpb
inc
cmp
jns
fldz
mov
movsl
sahf
testl
jle
cmp
xchg
add
push
je
adc
push
les
andl
out
jg
and
dec
ljmp
and
xchg
fnstcw
cmp
cmpsl
gs
cmp
nop
mov
xor
push
dec
and
push
mov
jecxz,pt
push
xor
outsl
outsl
sub
sti
in
test
popf
pop
mov
daa
or
fnstenv
sub
jnp
js
aas
test
dec
bndstx
cmp
loope,pt
leave
in
pop
fmull
mov
xor
and
dec
das
cmpl
ljmp
adc
mov
sub
push
rol
add
stos
addl
dec
loopne
dec
fldt
loope
aam
gs
ret
insb
or
pop
xchg
jne
or
add
in
fs
adcb
lahf
outsl
adc
adc
aam
loopne
dec
jns
sub
fs
sbb
adc
sbb
cwtl
or
repnz
daa
fisubrl
cwtl
jmp
add
xor
pop
out
xor
dec
mov
cwtl
test
xchg
testb
rolb
mov
push
jne
imul
cwtl
push
or
xchg
push
addl
xor
cltd
dec
inc
lods
hlt
arpl
cmp
aas
and
jb
adc
mov
inc
scas
push
inc
aas
cli
sbb
scas
into
pop
xchg
add
lret
loope
and
hlt
jp
or
iret
sbb
adc
xor
loope
test
and
outsb
test
aam
cmpb
pop
popf
jnp
mov
pop
xchg
dec
xor
imul
jmp
sub
repnz
or
pop
sarb
mov
neg
adc
cmp
cmp
fst
pop
cld
and
inc
loop
scas
stc
mov
dec
cli
add
cmp
repnz
test
xchg
aad
data16
dec
pinsrw
jecxz
out
cmp
loop
adc
push
xchg
enter
fidivrl
mov
or
mov
jo
mov
pop
add
mov
loope
pop
daa
in
outsl
adc
rclb
sbb
jno
mov
adc
stc
test
stos
mov
sbb
mov
add
aam
jns
fisttps
push
inc
lods
xchg
cs
das
mov
adc
dec
aad
cltd
cmp
inc
outsl
jb
inc
jns
jns
loopne
inc
pop
push
or
pop
or
dec
jbe
fimuls
sub
nop
ret
fstpt
jmp
jns
test
sbb
imul
lret
and
jb
xor
and
dec
enter
xor
adc
daa
adc
scas
push
sub
aaa
sbb
outsb
xor
and
mov
xchg
push
jne
sbb
dec
jnp
out
push
dec
in
pop
sahf
mov
out
inc
bound
add
xor
fucomip
js
fdecstp
daa
push
insl
outsl
push
les
sysexit
outsl
dec
mov
cmp
mov
int
or
cmp
sbb
sbb
jecxz
dec
das
cltd
jae
sbb
jns
pusha
pop
ds
enter
adc
or
pop
push
sub
cmc
addr16
add
mov
loop
xchg
adc
int3
push
int3
inc
insb
adc
xor
fadds
iret
ja
daa
addl
xchg
xchg
push
faddl
movsl
dec
inc
sarb
mov
das
int
push
pop
in
push
in
jge
mov
out
arpl
push
or
inc
int3
lods
or
push
roll
jne
incl
pusha
andb
jnp
add
push
std
pop
or
sbb
psubusb
push
jmp
xchg
xor
sub
cmpsl
cmp
aad
in
mov
test
les
dec
add
adcl
pop
ss
mov
mov
imul
xchg
mulb
leave
jo
fincstp
mov
int
int3
dec
xor
xor
cmp
flds
imul
push
mov
xor
dec
pop
nop
std
aam
lret
insb
mov
stos
dec
stos
push
and
mov
mov
mov
push
mov
and
ja
xchg
pusha
xchg
daa
xor
mov
jg
addr16
xchg
mov
inc
mov
subb
mov
push
lcall
int
push
popf
pop
sbb
add
test
fcom
cmp
mov
lock
fs
lea
dec
mov
mov
or
xor
jbe
loop
push
sarb
arpl
fcos
pusha
sub
jno
dec
dec
sub
pop
aad
inc
inc
adc
mov
jl
push
inc
insb
outsb
aam
subb
or
insl
dec
mov
inc
mov
out
aaa
cmp
pop
mov
push
enter
sub
ljmp
data16
dec
mov
aaa
sbb
xchg
insb
inc
into
sub
gs
jnp
jnp
jae
sahf
or
cmp
mov
pop
pop
and
gs
jo
jecxz
mov
sar
cmp
push
cmp
ja
jmp
cmpsl
movsb
pop
imul
pusha
outsb
test
mov
dec
ds
shl
adc
jb,pt
cs
push
lcall
mov
aad
das
or
xchg
add
sub
fidivs
outsb
jns
xchg
std
mov
add
sbb
in
and
test
mov
mov
push
std
jge
loope
mov
pusha
push
shlb
test
stos
stos
mov
push
add
lock
mov
xchg
jns
mov
pop
lret
push
mov
push
sbb
jbe
mov
or
sbb
mov
scas
sbb
dec
jno
add
push
mov
and
xchg
popf
aas
in
mov
cli
pop
cmp
stos
fcoms
aas
push
shlb
iret
push
dec
andb
aam
loope
cmp
jne
sub
outsb
icebp
xor
add
jl
dec
push
or
insb
mov
lcall
jmp
cmp
lcall
cmp
ljmp
pusha
leave
inc
leave
lea
sub
into
jnp
movsl
add
cmp
loopne
mov
mov
repz
and
fbstp
xchg
push
adc
adc
popa
testb
and
dec
fcmovne
ficomps
sub
shll
mov
das
pop
imul
movsb
stos
sub
loopne
cmovle
sub
cmp
cld
dec
fcoms
out
sub
push
jecxz
xchg
pop
add
nop
cmp
inc
mov
xchg
jo
rcr
jl
pop
push
adc
pop
push
pop
add
cmp
push
sub
pushf
ret
mov
push
cmp
negl
enter
repnz
jne
repnz
js
scas
out
dec
mov
push
cltd
popa
xor
jl
std
bound
addr16
mov
cli
jmp
ret
xorl
test
out
bnd
or
lret
push
into
push
mov
lock
inc
test
jnp
ret
mov
subl
fildl
mov
test
and
push
push
repz
das
test
sbb
push
or
lds
jns
adc
lahf
cmp
adc
add
mov
cwtl
lds
pop
pusha
push
aas
dec
loope
scas
pop
fldcw
ja
cli
xchg
push
jbe
jb
int
arpl
imul
lcall
stos
mov
and
xchg
into
pop
push
mov
ret
sub
sbb
mov
mov
fistpl
es
jp
int
test
scas
pop
pop
cmp
push
dec
and
lods
es
imull
negl
dec
outsb
xchg
adc
daa
xchg
add
ret
sub
sbb
push
lds
mov
in
loope
add
pushf
repnz
mov
jns
cld
mov
jnp
push
add
jnp
lret
shr
sub
imul
sub
nop
and
stc
sub
shr
stos
gs
adc
dec
or
ss
fimuls
scas
inc
sub
loopne
push
testl
outsb
push
jae
fmull
inc
cmpsl
scas
aam
jle
je,pt
sbb
xchg
int3
mov
clc
bound
pop
cltd
cmp
or
arpl
and
or
in
outsl
cmp
lretw
mov
xor
mov
or
outsb
pop
shll
inc
mov
dec
jne
mov
adcb
inc
push
sub
mov
jns
popf
repnz
fxam
mov
and
pop
lea
sub
pop
iret
je
sub
mov
pusha
ja
dec
mov
outsb
xor
test
lock
bnd
pop
pop
xchg
insl
shrb
pop
sbbl
push
dec
sbb
xchg
icebp
or
jae
popa
and
dec
add
or
inc
or
and
mov
inc
push
sar
jbe
sbb
jae
mov
lds
push
push
dec
faddl
fcmovnu
in
adc
jae
jp
jno
add
dec
sub
sbb
add
repnz
cltd
jmp
rcl
cli
pop
test
test
outsl
je
test
daa
aaa
aaa
mov
xchg
je
in
sub
icebp
push
lea
and
les
push
ds
clc
or
dec
cld
sbb
dec
mov
pushf
test
xchg
bnd
out
sbb
push
fnstenv
sub
rclb
mov
cmp
in
dec
movsl
cmp
inc
movntps
inc
insl
sub
jne
pop
adc
daa
sub
inc
mov
adc
sbbb
inc
adc
sub
sub
data16
fimull
jo
movl
mov
inc
sbb
pop
dec
imul
push
popf
js
mov
dec
call
inc
sub
daa
int
cmpsb
and
cld
add
cvtpi2ps
push
fs
test
push
mov
or
jecxz
add
pop
xor
jecxz
jne
repnz
je
mov
push
adc
xchg
pop
push
mov
xchg
test
or
or
pop
jno
or
sbb
pop
xchg
outsl
arpl
js
sub
fidivrl
dec
dec
inc
or
cmp
and
adc
cmp
push
jb
xchg
lods
mov
je
and
je
adc
mov
push
popa
jns
dec
popa
inc
test
test
movsb
clc
faddl
mov
test
outsl
and
push
pop
push
dec
push
leave
mov
xor
sub
shrl
jnp
mov
sarl
sbb
clc
fmuls
pop
ds
pushf
sbb
das
add
bound
jne
dec
leave
and
mov
dec
mov
call
outsl
jne
fs
push
or
inc
scas
fwait
mov
add
in
mulb
mov
cwtl
mov
loopne
mov
ja
outsl
stos
cmp
dec
test
in
addr16
add
addr16
adc
test
fisubl
in
and
scas
std
adc
sub
sub
dec
pop
sub
dec
sahf
or
xor
push
dec
jge
push
fsts
jb
mov
adc
imul
add
push
and
xor
add
cs
jo
or
cld
test
cmp
xor
pop
repz
iret
xchg
pop
or
mov
sti
scas
std
mov
inc
imul
push
in
add
outsb
call
xchg
sahf
mov
lds
cmc
call
mov
push
or
push
jbe
push
push
push
fsts
iret
dec
or
sub
outsb
pusha
jge
gs
jl
pop
lret
sub
cmp
dec
mov
add
mov
push
pop
mov
dec
cmp
push
or
xchg
int3
loope
cmp
mov
dec
jnp
and
jle
int3
or
jge
lret
mov
bound
cmp
loope
jg
mov
bound
add
jg
push
sub
mov
push
testb
pop
pop
sub
inc
les
leave
sub
ja
jne
addr16
jle
xchg
cmp
mov
ja
cli
ds
je
push
call
cmp
in
js
mov
xchg
add
xchg
aaa
mov
pop
adc
push
test
inc
test
inc
fptan
push
xor
inc
outsl
leave
in
jg
out
loopne
xchg
mov
jp
sbb
lret
push
mov
sub
xor
or
pop
std
cmp
mov
cmpl
xchg
loopne
pop
inc
mov
cltd
mov
stc
dec
or
stos
fbld
jmp
pop
lcall
std
rol
and
jbe
adc
std
mov
pusha
stc
dec
aam
mov
mov
xor
xor
lds
pusha
sub
sahf
js
cmpsl
dec
inc
decb
test
sbb
clc
jae
mov
push
out
add
test
push
push
or
jle
or
and
rcll
shll
in
pop
cltd
adc
jge
add
orb
pusha
popa
add
and
ds
adc
jne
add
xorl
or
ss
shlb
aad
xchg
cmp
dec
roll
ret
outsl
push
or
xchg
sbbb
xor
ljmp
sbb
sub
push
cltd
mov
in
divl
bound
adc
popf
mov
jns
and
repz
cmp
icebp
inc
sti
mov
adc
lret
jnp
call
xor
inc
call
sub
push
dec
mov
shl
xor
test
push
adc
or
xchg
xchg
push
cmpb
addr16
push
insb
call
aam
pushf
cmp
pushl
mull
jge
push
xorl
push
fcoml
mov
dec
movaps
popa
shrb
adc
pop
push
dec
and
cs
inc
dec
adc
cmpl
or
mov
cwtl
aam
inc
insl
jp
incb
mov
mov
movl
jns
jno
xlat
or
or
int
loopne
xor
je
push
jne
xchg
aas
sub
rorb
int
or
aad
mov
les
add
out
pop
mov
cmp
push
dec
popa
pushf
mov
pop
inc
dec
or
cmp
test
pop
jo
into
adcl
dec
xchg
mov
jmp
leave
stc
inc
mov
mov
in
std
push
xchg
sub
stc
jb
cmc
lods
outsb
jmp
scas
lods
mov
lods
jne
or
loope
push
lcall
or
push
inc
repnz
dec
std
add
bound
shlb
sbb
inc
xchg
dec
xorl
pop
pop
pop
test
xchg
sbb
jl
jmp
icebp
movsl
push
out
inc
ja
in
push
mov
stc
push
cmp
sbb
mov
inc
dec
lds
add
shrb
mov
movb
ja
pop
jb
test
gs
adc
fyl2xp1
mov
sub
adc
in
data16
mov
repnz
aas
or
fucom
inc
notb
lret
inc
pop
mov
xchg
jmp
aad
loop
fst
insl
fsubs
or
sbb
push
xchg
mov
dec
fcomps
xor
add
and
pusha
sub
clc
dec
mov
or
popa
push
inc
dec
dec
sti
test
repz
inc
aad
dec
inc
jne
mov
jge
jno
movups
adc
and
push
and
cmp
fptan
xchg
inc
cmpsl
cmp
in
xchg
sbbb
inc
or
jb
jo
iret
pop
cmp
sub
jge
out
jo
sahf
outsb
dec
roll
dec
insl
or
jecxz
mov
fdivl
add
inc
out
js
cmp
test
inc
push
push
mov
leave
xor
xor
cmp
leave
fcoml
jg
inc
push
nop
fwait
out
xchg
in
jmp
scas
sub
popa
mov
sarb
or
inc
daa
mov
pop
sub
xor
in
in
pop
adc
sub
nop
jle
xor
movsl
scas
pop
xchg
test
lock
stos
push
cmp
adc
and
or
test
jno
mov
cmp
aam
push
jns
add
sahf
je
scas
es
or
push
mov
push
cmp
adc
ret
lcall
mov
jnp
dec
add
cli
push
and
aam
and
lds
sbb
mov
jl
xor
sarl
push
pop
mov
sbb
push
nop
pop
push
or
mov
jns
or
ds
sti
movsb
testb
mov
stc
sar
mov
cmc
in
shll
inc
pop
or
stc
sub
cwtl
nop
or
test
jnp
fnstenv
sub
xor
mov
push
test
cmp
mov
cmpsb
jno
test
jae
mov
pop
clc
or
cmc
insl
xchg
mov
or
jle
jl
adc
jnp
loope
ret
push
dec
push
pop
jo
fidivs
xchg
sbb
jecxz
lods
jge
gs
sub
mov
jnp
push
int3
push
push
jl
mov
fildll
in
xchg
jns
and
ror
and
inc
outsb
imul
andl
lret
movaps
mov
push
data16
jne
imul
sbb
cltd
sub
imul
add
xor
cltd
push
pop
pminub
jle
cld
sub
imul
clc
out
int3
fnstcw
jnp
and
popf
sbb
push
jnp
int3
es
imulb
jl,pt
shrb
flds
adc
push
inc
ja
and
push
push
imul
jp
adc
dec
dec
push
das
enter
pop
mov
jns
push
into
lcall
and
dec
sbb
pop
jb
mov
sbb
jle
mov
lret
shl
pop
mov
insl
inc
jmp
jno
shr
repnz
fiaddl
sub
and
pop
fiaddl
inc
or
cmp
pop
cmp
in
stos
inc
adc
jne
and
int
xor
adc
cs
jbe
sub
cmpsl
icebp
push
jo
push
cmp
cs
sbb
sub
clc
or
leave
outsl
adc
push
sarb
iret
lea
xchg
xor
cmp
push
lds
gs
cltd
dec
test
push
mov
xchg
sub
jl
lret
jbe
inc
and
cmp
adc
in
jae
sahf
or
xor
pop
clc
xchg
rcl
adc
xor
pop
stc
dec
lods
cmp
cmp
mov
imul
jle
inc
pop
mov
leave
aam
stos
sbb
sub
jne
movsb
jae
idivb
call
mov
push
dec
adc
jo
sbb
pop
inc
hlt
popa
cwtl
mov
cmc
aam
outsl
outsb
int
out
dec
cmc
xchg
mov
lea
stc
leave
dec
leave
fxch
stc
mov
loope
inc
aaa
jl
inc
xlat
inc
cmp
mov
jmp
cld
stos
out
pop
movsl
fstpt
sub
and
inc
pop
loope
mov
sub
pop
xchg
loope
test
das
xlat
mov
int
dec
sub
fmull
pushf
and
imul
cmpsb
shrl
aad
mov
jge
adcb
push
sub
popa
xor
popf
pop
filds
jl
notb
sahf
cmp
outsl
or
dec
mov
or
outsl
sub
aam
repnz
movsl
into
jg
sub
cmp
bound
rorl
push
and
lock
push
mov
mov
adc
and
sar
je
sub
hlt
or
pop
lds
ds
mov
push
sbb
das
mov
sub
popa
add
inc
das
scas
mov
adc
mov
lea
adc
rolb
gs
ljmp
dec
push
jg
add
cli
pop
cmpsl
add
lcall
sub
fldcw
mov
cmp
loopne
in
mov
and
add
inc
popa
sbb
je
sub
sbb
cmpsb
pop
pop
mov
jbe
cmpb
roll
in
imul
push
dec
cmc
js
pop
xchg
and
push
adc
cmp
adc
push
popa
shlb
stc
sub
adc
sub
mov
pop
lods
jns
sahf
xchg
imul
stc
or
pop
jmp
push
test
sub
fwait
jl
xor
addl
jg
sbb
int3
jl
add
mov
add
inc
xchg
jnp
xor
pop
in
fildll
dec
adc
inc
xor
dec
cmp
pusha
lods
push
sub
jno
mov
test
mov
lea
js
outsl
sub
mov
xor
dec
and
scas
aam
test
cmc
mov
out
shl
out
andl
int
scas
jo
rorl
mov
adc
in
inc
dec
iret
stos
xor
adc
or
jl
jp
sub
aaa
cmp
pop
mov
adc
mov
push
movsl
jp
and
adc
dec
mov
das
dec
rol
addr16
sub
dec
cmpsl
and
add
ljmp
adc
stos
dec
loope
notb
popa
push
push
xchg
testb
movsb
xchg
or
add
pusha
scas
sub
pop
cmp
sbb
pop
cmp
lcall
inc
inc
mov
aaa
lea
lcall
popf
inc
stos
subl
in
mov
jmp
and
push
hlt
cmp
sub
add
pop
gs
xchg
pop
movsb
imul
push
mov
outsl
pop
faddl
nop
xor
loop
pop
pusha
push
xor
push
inc
inc
popa
xor
inc
daa
int
push
lret
sarb
xor
push
hlt
cmpb
push
std
or
cmp
sub
rcrl
sbb
sbb
jae
xor
mov
lods
outsl
in
test
sbb
in
xlat
lds
or
dec
mov
mov
stc
mov
fldenv
lfs
add
int3
mov
xchg
cmp
stos
mov
adc
pop
mov
mov
test
fcompl
js
dec
or
adc
pusha
aad
add
aas
push
cmpsl
mov
jae
push
int3
ljmp
or
cli
sbb
xor
adc
sbb
push
jl
fwait
pushf
clc
sti
jae
stc
pop
push
push
lea
push
stos
stc
sti
sub
lea
xor
jp
in
push
inc
or
xchg
in
stc
pop
xor
fnstenv
sahf
cmc
jns
ss
dec
or
fisttps
mov
outsb
add
icebp
sub
out
jae
repnz
mov
ret
cli
rclb
xrelease
xor
adc
lods
dec
sub
mov
aam
xchg
inc
nop
imul
int3
jl
addl
fdivs
inc
arpl
xorl
insl
mov
int
mov
outsl
cs
pop
add
jnp
dec
xor
xchg
push
jne
cmp
add
sbb
mov
mov
aaa
aad
pop
sbb
mov
sarb
dec
mov
lods
lock
scas
pop
mov
or
addr16
push
push
dec
and
xchg
cmp
aas
sub
fadds
push
fnsave
mov
cmp
fwait
jge
jns
div
push
or
push
cmp
and
ja
mov
imul
nop
xor
jno
imul
xchg
and
sub
or
scas
lods
std
or
pop
dec
sbb
arpl
jl
dec
push
pop
add
adc
xor
loopne
cli
aaa
mov
inc
aam
push
inc
out
xchg
xor
inc
aam
sub
lock
sar
pop
and
xchg
or
ds
sarl
and
sbb
pop
adc
and
pop
adc
dec
cmc
and
test
or
sbb
adc
in
data16
pop
repz
les
jl
push
xor
xorb
mov
xchg
fs
ds
jle
test
pushf
pop
rorb
add
in
clc
dec
inc
jne
mov
test
out
ds
mov
ds
outsb
je
lods
dec
out
cli
inc
in
sbb
adc
pop
jns
mov
scas
mov
mov
inc
adc
mov
jbe
push
mov
ljmp
add
lock
and
pushf
and
or
push
sbb
pop
gs
xor
dec
pop
xor
xor
push
jl
orb
add
std
loop
jge
divb
push
cmp
dec
lock
pop
ljmp
lods
jae
or
leave
fs
pop
mov
jle
in
sarl
or
jns
pop
sbb
dec
gs
repnz
add
xor
sub
fsubrs
cmp
sub
sti
test
pop
lea
stc
fistl
cmp
and
lcall
mov
decb
cli
push
mov
je
std
pop
dec
push
adc
cmp
daa
add
dec
mov
out
loope
inc
inc
lock
je
jge
aad
in
jbe
sub
mov
sub
daa
sbb
lcall
sub
cs
movsl
adc
jmp
rclb
popf
movl
lret
sbb
xchg
loop
push
xor
or
fldenv
mov
sbb
popa
scas
dec
sbb
sbb
jge
mov
xchg
mov
inc
sbb
mov
sub
rcll
mov
subb
addr16
and
pushf
loop
mov
or
jl
jns
cmp
loopne
jl
jge
andl
fldenv
xor
stos
jb
fwait
jg
loop
gs
xchg
movl
jge
mov
cmp
cmp
pop
imul
mov
lret
mull
add
adc
mov
in
andnps
insl
lcall
int
mov
lds
enter
bound
cmp
sbb
jne
jb
or
add
insb
sub
xchg
sub
sub
sub
outsb
dec
ja
xchg
ret
test
dec
pop
ja
dec
xchg
nop
and
dec
mov
add
mov
int
test
and
popa
ret
or
js
add
jp
std
inc
fistl
sbb
cld
xchg
std
sar
or
movsl
cld
jno
push
dec
insb
jbe
iret
dec
add
push
repz
adc
jge
insb
cmp
jle
xor
pop
xchg
repz
clc
shrd
fmuls
popf
push
lahf
cmc
xchg
lret
jns
shr
movsl
adc
or
imul
mov
adc
out
aad
addr16
popa
js
xchg
sub
fpatan
rcrb
je
aas
adc
sub
pop
insl
leave
xchg
mov
push
or
or
stc
into
sub
sbb
or
jo
jmp
imul
jmp
mov
cmp
mov
dec
add
adc
fisubs
jle
jecxz
lds
pusha
shl
movsl
push
mov
or
movsb
cmpsb
lahf
icebp
js
loopne
outsl
inc
test
pop
inc
mov
push
xchg
bnd
cltd
cmp
leave
jnp
sahf
xchg
pop
mov
popf
std
test
cltd
add
and
scas
cwtl
and
iret
testl
fwait
push
sbb
mov
cli
inc
sahf
in
sub
clc
or
inc
xchg
lret
xchg
pop
xchg
and
stos
mov
pop
push
lahf
dec
aas
adc
aas
test
xchg
hlt
fldz
push
rorb
test
repz
mov
jp
test
pushf
lea
cmp
sbb
cmp
inc
or
pop
enter
dec
lods
push
movsl
pop
popa
mov
sahf
stos
test
xchg
fld
and
sub
sti
inc
inc
and
adc
push
aam
adc
sbb
daa
pop
xchg
push
mov
mov
rcll
fidivrl
repz
rorb
pop
lods
mov
adc
or
clc
loop
fs
data16
and
addl
cmp
js
jge
lea
pop
roll
aam
push
dec
or
xchg
push
lret
sub
jb
sbb
lea
pop
into
js
xchg
mov
shrl
push
test
stc
dec
jnp
call
push
dec
dec
lahf
rclb
xor
sbb
jge
test
add
xchg
sbb
loop
loop
xor
or
push
pop
push
outsl
pop
jg
dec
mov
pop
out
fbld
push
mov
pop
das
sbbl
stc
dec
pop
sbb
pop
dec
pop
xorb
rorl
cmp
fstl
addr16
in
fisttpll
out
inc
test
jno
sub
xor
mov
out
and
hlt
outsl
xor
loope
jp
xor
leave
out
pop
cmp
push
aam
mov
dec
sti
push
push
adc
push
push
lret
xor
fcmovne
das
push
pop
dec
pop
adc
xorl
push
cmp
dec
or
mov
outsl
adc
or
fiaddl
frstor
mov
jno
inc
ljmp
sub
cmp
icebp
gs
fistps
out
cwtl
cmp
or
dec
mov
xchg
pop
cmp
subb
adcl
pop
or
cmp
orb
jge
pop
call
fstps
pop
mov
loope
or
daa
dec
add
jns
cmp
mov
arpl
mov
pusha
mov
mov
mov
mov
jg
dec
movsl
sub
out
filds
cmp
pop
inc
shl
enter
int3
imul
xchg
orb
push
push
pusha
ds
cmpsb
push
fdivrs
je
push
inc
push
ss
jb
fmuls
call
fwait
xlat
int3
mov
popa
aam
xchg
repz
ss
js
jg
xchg
inc
fidivrl
pop
ljmp
push
cs
mov
fnstcw
daa
pop
cmc
jp
dec
mov
mov
cmp
mov
rcrl
or
subl
sbbl
sub
jecxz
rclb
dec
je
or
add
incl
shll
and
je
ffreep
adc
aas
sub
or
push
sub
or
inc
test
or
add
loop
je
xor
sti
addr16
and
sub
scas
fwait
cltd
cmp
xchg
sbb
dec
mov
pop
rcrb
and
clc
mov
and
jno
loopne
ss
ja
mov
dec
inc
out
mov
dec
ret
and
push
nop
test
pop
mov
pop
imul
adc
xchg
or
push
out
pop
lcall
mov
mov
loope
lcall
xchg
pusha
test
stos
push
push
nop
and
jbe
jne
loop
push
outsl
jg
xchg
mov
outsl
push
test
push
decb
xchg
cmp
jg
out
and
push
or
xlat
sub
sbb
fcomps
cltd
inc
dec
mov
and
ds
aaa
aaa
movsl
inc
push
sbb
in
outsl
stc
mov
xor
movsl
dec
call
xchg
shl
inc
jg
and
in
sub
fdiv
scas
mov
rcrb
jmp
mov
mov
lahf
dec
sbb
call
repnz
cmpsl
lahf
jbe
add
sbb
jns
pop
pop
sub
movsl
lret
pop
adc
xlat
mov
mov
and
repz
xchg
add
mov
test
cli
fsubrs
dec
dec
cwtl
adc
inc
enter
lds
mov
cli
xchg
dec
dec
dec
test
sbb
ret
adc
dec
lods
icebp
xchg
aas
sub
dec
xlat
insl
cli
test
pop
add
out
cmp
sarl
sub
jae
sarl
int
sbb
stos
mov
push
clc
pop
arpl
pusha
fstl
pop
lods
fsubl
jg
mov
sub
test
xor
jb
fdivs
mov
dec
jp
push
adc
jmp
cld
cmp
sbb
ds
cmpsl
loope
push
xor
cmpsl
pop
cmp
sbb
add
insb
filds
jp
sub
push
movsl
imull
jge
sbb
int
int3
pushf
insl
fmul
dec
push
sbb
cmc
ret
icebp
jmp
lea
movsl
xlat
je
xchg
pop
daa
mov
xchg
insl
pop
stos
test
mov
push
mov
cltd
fisubrs
clc
inc
and
jae
sarb
cli
nop
cltd
jbe
imul
push
test
sub
pop
loopne
test
icebp
pop
shll
rolb
mov
dec
cld
fldt
out
ss
xchg
ljmp
or
xor
leave
hlt
add
dec
mov
sub
scas
popf
in
icebp
push
sbb
aam
lods
pusha
lods
or
shrb
cld
xor
xchg
aad
pushf
adc
ds
and
cltd
in
sub
ss
dec
pusha
test
popa
cltd
test
bound
js
or
and
icebp
or
jns
and
cld
fwait
aad
xor
dec
dec
jno
daa
cmc
mov
out
adc
adc
and
outsb
jecxz
or
cltd
movsl
movsl
cmp
and
dec
jnp
cwtl
pop
inc
rcrl
fcoms
or
in
dec
push
push
clc
fadds
mov
pop
xor
cs
bound
fwait
pop
sbbl
or
es
inc
into
test
mov
sub
cwtl
ljmp
leave
and
nop
or
daa
test
mov
cwtl
jnp
shrb
cmp
testl
xor
sbb
scas
cli
stc
pop
add
push
dec
lods
sub
pop
jp
mov
or
cmp
adc
out
push
ucomiss
or
xchg
pop
push
xor
pop
in
test
jae
pop
fwait
test
inc
mov
imul
push
fstps
fsubrs
ja
ljmp
or
call
mov
insl
fstl
jg
sub
pop
xor
rcrb
iret
push
mulb
xor
xorb
add
test
pop
sbb
ret
aas
cmc
pusha
dec
push
jns
and
pop
std
or
fwait
add
push
in
test
scas
jb
mov
pop
loop
gs
jmp
das
adcb
movsl
pop
std
xchg
dec
or
jle
aas
shr
sub
dec
and
push
in
fimull
imul
push
jp
inc
xor
lahf
cmp
jno
fcomip
sub
cmp
push
xor
mov
loope
jo
sub
add
sar
cld
mov
pusha
ret
sub
aam
jecxz
sbb
lods
imul
mov
add
pushf
sub
outsb
shrl
enter
jne
or
xchg
and
sahf
or
mov
xor
out
lahf
daa
ljmp
inc
xorl
mov
icebp
xchg
bound
in
cld
out
xor
nop
sbb
inc
and
mov
jle
inc
cmc
daa
aaa
push
stos
das
push
dec
mov
jge
xchg
xchg
sub
inc
push
test
mov
jge
outsb
fnstenv
outsb
push
xor
jge
adc
ret
push
in
inc
lahf
daa
out
insl
icebp
push
cld
inc
stos
fimull
adc
imul
mov
lahf
in
fadds
insb
sub
filds
out
pop
push
pop
mov
dec
es
inc
mov
in
push
sbb
or
mov
popf
xor
pop
pop
mov
out
mov
xchg
push
imul
xchg
lods
ljmp
mov
jb
pop
add
stc
or
movsb
push
mov
aas
stos
adc
sbb
inc
add
or
das
lret
fsts
cli
push
add
mov
xlat
fmull
xor
push
loope
insb
dec
orl
mov
test
ret
jl
push
sub
push
pop
insl
and
adc
pop
xchg
dec
pop
dec
hlt
jle
addr16
mov
jmp
pop
cmp
sbb
int3
in
jecxz
dec
sbb
in
loopne
aas
lock
insl
and
adc
mull
shrl
add
push
sbb
mov
sbb
test
pop
in
jnp
xor
inc
jg
adc
cmp
outsl
inc
xor
jl
je
sub
repz
fstpt
mov
shlb
sti
in
push
and
int
jno
and
cmp
popf
cmp
inc
lds
jle
inc
pop
sub
cmp
fs
pop
pop
ds
gs
xlat
adc
pop
pop
fcomi
in
test
mov
addr16
pusha
int3
gs
jge
push
fildll
xchg
lahf
movsb
mov
or
cmp
inc
mov
mov
int3
inc
sub
inc
andl
int
hlt
rorl
jae
mov
lds
xchg
insb
inc
or
inc
test
jnp
ficompl
cmpsl
into
mov
push
nop
and
push
dec
dec
jae
mov
ret
mov
lcall
adc
pop
leave
fwait
stc
jns
mov
sbb
lods
sub
outsb
aaa
cmp
test
lcall
mov
scas
adc
inc
leave
das
adc
mov
cli
fsubs
mov
gs
jmp
push
adc
pop
add
mov
scas
jno
dec
mov
repnz
loop
fneni(8087
jp
adc
sub
daa
daa
pop
pop
and
gs
pop
cmpsl
mov
dec
js
lds
pushf
jecxz
dec
popa
sub
jbe
das
push
dec
stc
outsl
rorl
xor
jg
pop
sti
test
enter
aam
dec
test
or
pop
or
and
cltd
mov
or
mov
xor
or
aaa
stos
clc
lods
mov
sti
push
mov
push
fincstp
lahf
cmpsl
outsb
insb
lret
or
sub
std
jno
aaa
test
jge
mov
mov
test
js
inc
dec
add
in
sub
pop
stos
add
clc
nop
iret
ret
pop
mov
js
cmp
xor
add
push
xor
and
xchg
xchg
pushf
pop
clc
sbb
pop
scas
jbe
dec
fpatan
iret
push
push
clc
cld
adc
aad
push
shll
adc
in
imul
pop
inc
inc
and
fidivl
dec
out
jns
push
pop
sbb
fmuls
jmp
xchg
fisubrs
mov
add
and
inc
mov
mov
mov
cmp
or
insb
mov
jns
dec
mov
insb
push
mov
and
lret
push
sub
pop
rcrb
rcr
insb
loop
sub
dec
jg
ret
mov
jo
push
mov
into
insb
rcll
adc
sbb
pop
mov
aas
sti
fidivs
icebp
mov
fidivrs
sub
or
push
push
push
or
dec
cwtl
test
es
fiaddl
outsl
cmp
jp
push
fwait
pop
ss
lcall
dec
cltd
ss
push
push
in
inc
mov
ds
idivl
aam
je
sbb
cmp
jb
pop
adc
loope
inc
shrl
push
fcompl
and
xor
jbe
pop
test
fs
jge
dec
cmp
scas
pop
mov
xchg
adc
and
outsb
mov
imul
cmp
cmp
test
repz
sbb
xlat
xchg
jp
sbb
inc
inc
hlt
lret
clc
jg
cwtl
mov
sarl
std
push
clc
jns
push
outsl
rcrb
fscale
in
dec
push
mov
push
or
ja
test
pop
pop
inc
loope
int
in
insl
adc
mov
push
movsb
add
ds
mov
or
pop
dec
out
cmp
shlb
popa
cmc
mov
or
outsl
pop
pop
ja
aaa
lea
addl
stc
lds
pop
add
sub
sub
fcmovbe
jmp
sahf
loop
push
ror
hlt
xlat
std
lods
mov
inc
stos
stos
sub
test
mov
or
push
in
iret
dec
enter
push
pop
shll
and
or
fdivr
fwait
cltd
adc
add
lods
ss
stos
jb
pushf
dec
dec
mov
mov
aaa
in
repz
sahf
lret
in
xchg
leave
addr16
lods
gs
or
rcrb
lods
pop
stos
mov
lea
cmc
daa
imul
sbb
int
loope
mov
jp
cmp
scas
pop
iret
sar
ds
std
jnp
jl
pop
jns
fstl
insl
pop
jns
sub
sbb
fstps
outsb
mov
out
hlt
les
hlt
lea
lds
mov
cmpb
stos
cwtl
sbb
and
add
xchg
unpcklps
pop
push
push
dec
mov
mov
push
jno
pop
cli
cmp
rcll
aam
sbb
daa
into
cmp
daa
mov
pop
repnz
push
push
push
imul
lret
loope
mov
mov
mov
js
out
and
arpl
and
idiv
mov
jecxz
int
lods
add
cltd
repz
inc
push
addl
mov
arpl
cmc
jo
pop
call
or
mov
xor
scas
cmp
sbb
inc
cwtl
push
cld
iret
int3
mov
mov
add
les
mov
jns
xlat
inc
aad
xor
lcall
mov
xchg
mov
push
aam
xor
ja
xchg
pop
sbb
push
add
nop
hlt
add
jl
adc
lock
inc
fmuls
in
xor
cli
sub
push
xor
cli
fstps
loope
sbbl
lret
stos
stos
or
aas
scas
cs
dec
divl
mov
jae
and
push
mov
mov
pop
fucom
inc
ss
jmp
mov
push
mov
fs
shr
icebp
mov
and
lahf
push
cmp
fdivr
xchg
hlt
adc
lock
mov
test
push
in
icebp
dec
das
xchg
cmpsl
inc
xchg
mov
add
shl
push
aam
mov
and
test
mov
mov
jge
mov
mov
push
lock
add
enter
es
jnp
iret
int
leave
nop
jno
mov
jno
xor
imul
and
movsl
xchg
data16
push
adc
cltd
xchg
cmpsl
xlat
sub
loopne
jns
jne
lret
dec
outsl
xchg
fnstenv
les
inc
push
roll
lods
mov
mov
orl
aam
sbb
aas
bound
loopne
outsb
gs
adc
inc
lds
xorb
cmp
push
shl
add
add
adc
dec
aaa
mov
add
and
dec
xorb
mov
push
std
into
sub
lds
pop
jg
push
mov
push
subl
inc
jp
enter
andb
stos
cmpsl
es
test
sub
add
aad
cmpsl
add
sub
dec
daa
cmp
fwait
popa
pop
fwait
int3
mov
fbstp
loope
imul
arpl
jp
adc
and
pop
add
push
xor
je
sbb
out
pop
stos
inc
cmp
ss
or
call
mov
jbe
push
dec
frstor
push
mov
orl
adc
std
xchg
mov
cmpsl
sub
mov
pop
mov
das
xchg
jae
mov
add
cmpsl
dec
add
sbb
dec
rcrl
jnp
dec
xchg
jne
sub
outsb
sbb
xchg
or
rcl
notb
push
sbb
es
lcall
mov
lret
mov
jp
push
adc
jmp
in
out
adc
sbb
shll
cmpsb
cmp
call
jge
stos
das
rcrb
std
outsl
mov
mov
xchg
sub
push
dec
pop
repnz
mov
sti
in
frstor
mov
add
add
inc
xor
or
sbb
push
or
push
std
push
and
hlt
xor
mov
adc
lock
add
mov
shll
cmp
mov
pop
mov
hlt
sahf
jg
pusha
fisubl
mov
sbb
adc
cltd
xor
cmp
push
pop
imul
aam
outsb
add
data16
lods
mov
mov
and
ljmp
ret
js
arpl
or
push
mov
inc
jnp
test
push
push
nop
pop
fldcw
mov
repnz
adc
adc
dec
push
fnstenv
mov
pop
shll
out
popa
mov
pop
add
mov
cli
inc
out
lret
mov
inc
std
push
aad
mov
std
shll
aaa
ret
inc
outsl
mov
or
push
fbstp
inc
daa
xor
std
or
push
repz
cmp
xchg
push
loope
sti
sub
lea
xor
xchg
dec
or
add
add
jnp
or
leave
adc
test
orl
subb
stc
sub
jl
fsts
sub
sarl
cli
sbb
mov
sub
jnp
aam
inc
dec
sub
sub
push
js
ffree
and
pop
fstl
iret
xlat
jnp
dec
xchg
shlb
push
or
and
roll
and
sub
or
repz
in
mov
xorl
jle
insl
cld
dec
addb
cmp
fcomip
into
lcall
inc
fwait
sbb
test
mov
fstl
movsb
popf
lods
enter
bound
dec
mov
mov
les
sub
sub
push
test
stos
adc
xor
add
sub
or
lea
movsb
ds
fs
cwtl
add
stos
into
pop
jae
add
stc
cs
mov
dec
pushl
and
push
jmp
sahf
mov
bound
addr16
mov
pop
fdivrp
int3
pop
lods
or
jns
mov
jns
les
js
sahf
and
pusha
lahf
sub
mov
jno
aas
std
dec
das
push
shrl
addr16
dec
or
inc
xchg
jle
sub
jp
int3
push
jge
decb
rolb
movsl
lret
sbb
cltd
push
push
lret
mov
ror
bound
add
push
inc
mov
push
sub
push
add
mov
daa
add
insl
cmp
lods
xchg
fisttpl
ja
cs
jl
shll
daa
scas
outsb
and
dec
aas
and
add
dec
cmc
pushf
xchg
cmc
sbb
ljmp
es
inc
jg
inc
push
jp
mov
and
aaa
aaa
aaa
mov
cmpl
das
push
sub
add
insb
cli
adc
cmp
cmpsb
and
call
mov
dec
inc
inc
fists
test
mov
fxch
add
call
jp
adc
pop
jg
out
fcmovu
jo
out
ja
mov
js
outsl
cmp
in
pop
loop
pushf
add
imul
push
inc
jmp
dec
cmp
cmp
xor
iret
pop
jo
pop
fiaddl
dec
sbb
xchg
fsub
jne
dec
push
arpl
or
sub
pop
cmpxchg
aam
mov
test
fidivl
sbb
inc
pushf
in
sbb
push
clc
inc
std
mov
imul
or
cmp
push
clc
int3
mov
inc
js
enter
xor
cmp
mov
movsl
repz
and
dec
pop
mov
jmp
push
xorl
pop
repz
out
dec
cli
sbb
sbb
test
sbb
or
fstps
sub
scas
push
dec
jbe
mov
lret
push
jmp
stc
call
mov
sbb
add
jmp
pop
adc
push
lods
stc
jmp
mov
out
outsl
inc
popf
cmp
jmp
or
cmp
pusha
notb
push
sbb
sub
outsb
popa
or
enter
fs
cmc
or
sbb
ss
iret
or
push
aaa
dec
and
push
popa
sti
jnp
dec
popa
pushf
jbe
hlt
stc
hlt
adc
dec
punpcklbw
adc
test
push
jle
push
mov
or
out
pusha
aaa
stc
fcmovu
ja
decb
insb
jne
sub
adc
add
sub
shlb
pop
mov
mov
rolb
add
clc
push
jmp
shr
dec
push
std
push
sub
sbb
lret
sbb
jbe
xchg
nop
mov
or
add
std
and
ja
dec
mull
into
test
js
std
adc
lret
not
mov
xchg
clc
pop
push
add
inc
or
insl
push
pop
movsb
out
mov
jp
dec
push
mov
mov
dec
jnp
fadds
rorb
jb
cmp
push
mov
fisubrs
xorl
push
rorl
cli
pop
mov
stos
filds
or
ret
adc
insb
aam
dec
jle
lcall
adc
sahf
xchg
adc
xchg
imull
aam
push
aaa
imul
xchg
xchg
jae
dec
movsl
xchg
mov
loope
daa
fstpt
ss
out
adc
mov
mov
out
push
data16
sub
je
je
mov
jle
adc
call
imul
xor
jbe
push
popf
xchg
adc
dec
mov
int3
fldenv
xor
iret
test
pop
ret
add
cmpsb
fsubr
push
clc
push
test
loopne
ljmp
call
xchg
pop
int
xchg
push
jle
outsb
pop
repnz
mov
jge
dec
add
pop
push
push
mov
cs
xchg
cmp
mov
lret
out
fwait
xorl
dec
adcb
cmp
pop
orb
dec
arpl
ds
testb
mov
inc
pop
pop
cmp
addr16
stos
test
outsb
cmp
stos
jae
cmp
std
pop
jne
xor
adc
rcll
push
dec
or
scas
inc
dec
and
rol
push
aam
cmp
flds
stos
cmc
xlat
loop
outsb
int
cmp
xchg
lea
push
aam
enter
inc
or
lods
push
mov
call
xlat
orl
js
or
inc
sar
jecxz
test
adc
in
mov
add
dec
push
push
mov
sbb
inc
pushw
push
mov
int
icebp
and
mov
pusha
loope
inc
jb
sti
pop
mov
lcall
dec
psubb
test
or
mov
stos
mov
test
jmp
test
pop
int
dec
cmpsl
adc
aad
movsl
add
int
jne
adc
or
jecxz
xchg
pop
fildll
mov
mov
push
mov
bound
notb
and
stos
and
lahf
sbb
stos
xchg
andl
xor
rcrl
leave
add
inc
cwtl
std
std
push
ljmp
outsb
fisubl
xor
jbe
adc
cwtl
xchg
das
sbb
outsl
push
or
dec
adc
std
mov
inc
inc
gs
adc
fildll
add
jmp
fs
andb
lock
and
and
inc
sub
inc
inc
jne
and
inc
test
insb
or
iret
mov
mov
inc
dec
inc
xor
pusha
pop
cmp
or
imul
in
sub
or
punpckhwd
shlb
cmp
xrelease
mov
fidivrl
sub
add
inc
xchg
inc
inc
jns
and
ja
incb
loop
fstl
or
cli
and
pop
xlat
adc
fsubl
xor
mov
mov
inc
mov
or
jmp
push
inc
dec
sbb
out
mov
test
ficompl
push
pop
cmp
mov
jp
es
xor
mov
sub
daa
cmc
cld
cmc
or
mov
clc
push
bound
test
movsb
in
mov
ds
dec
dec
lock
cltd
jmp
mov
lods
mov
add
adc
dec
loopne
outsl
push
cltd
fwait
rclb
inc
and
and
mov
mov
lea
pop
outsl
adc
mov
clc
adc
cmc
lret
dec
add
lahf
jg
or
add
dec
sub
pushfw
push
jp
stos
insb
insl
sbb
dec
int
ds
popa
clc
imul
pop
outsb
aas
daa
imul
add
xorb
int3
ret
cwtl
xchg
dec
mov
in
clc
xlat
outsl
inc
jg
dec
mov
movsl
mov
add
mov
jp
push
dec
cmpl
push
cmpsl
sbb
push
mov
dec
mov
dec
jmp
cmp
xchg
inc
pop
cmp
xchg
dec
lock
push
dec
jns
or
cmp
cltd
daa
das
push
mov
ret
sub
in
sbbb
xlat
lds
test
lods
mov
aas
xchg
pop
or
fadd
cmp
add
cmc
lret
lea
and
cld
inc
pop
js
insb
sbb
and
and
pushf
pop
push
rolb
mov
into
mov
int
sbb
imul
in
pop
cli
xor
cmovs
push
pop
push
js
loopne
rcll
sub
cmpsl
loope
or
outsl
dec
cmp
jge
dec
adc
xor
mov
cmpsb
sbb
popa
mov
inc
inc
mov
cmp
push
imul
mov
fisttpll
outsl
std
aad
rdtsc
fwait
sub
test
pop
jecxz
cmp
jae
lods
outsb
subb
mov
loopne
sbb
loop
cwtl
test
das
loope
xor
sbb
insl
push
and
pop
jae
mov
and
xchg
sbb
xchg
add
leave
into
shlb
sti
sarl
dec
cli
ficoml
dec
xor
push
or
cmpsb
cmp
push
or
fs
adc
push
sbb
adc
scas
sub
pop
mov
lock
jp
outsl
add
mov
sarb
add
sub
fwait
lock
pop
enter
fcoml
dec
mov
stc
xchg
or
insl
jp
std
int3
shr
movb
dec
adc
lcall
int
fnstsw
mov
pushf
jne
in
jecxz
adc
sbb
fldt
dec
sbb
xchg
pop
push
loop
insl
movsl
test
femms
xlat
inc
pop
adc
sbb
test
inc
aaa
and
or
clc
push
push
adc
inc
movsl
in
orb
mov
movsl
outsl
leave
into
adc
xchg
jle
out
nop
mov
cmp
xor
adc
mov
cmp
xchg
not
mov
adc
test
fwait
adcl
push
cmp
bound
stc
sbbl
push
ficomps
test
movsl
push
xor
mov
enter
pop
push
fisubl
sub
outsl
fcom
sub
jns
add
in
jo
pop
jo
imul
adcl
mov
hlt
dec
pop
or
roll
fstps
or
andb
jmp
mov
inc
xor
std
push
flds
cmp
adc
push
loop
cmp
decb
xor
imul
out
daa
je
inc
jl
mov
or
jg
nop
and
gs
daa
test
jb
repnz
dec
jae
jecxz
xlat
add
shlb
push
or
ljmp
cmpsl
cld
sub
xor
push
fmuls
outsb
mov
loopne
cltd
xor
test
fcmovbe
in
aas
mov
sarb
pushl
fstpl
add
cs
pop
mov
xor
dec
mov
dec
es
daa
sub
clc
cltd
iret
dec
pop
sti
pusha
dec
mov
pop
lods
int
adc
or
or
mov
dec
out
sti
jp
add
xor
icebp
adc
push
cli
cmp
outsb
xor
jmp
xlat
mov
hlt
les
popf
adc
shlb
in
xchg
push
hlt
and
xorb
sub
les
mull
xor
in
test
jb
aaa
imul
mov
outsl
xchg
js
insb
add
outsb
fimull
jle
mov
dec
mov
and
andl
pop
dec
in
xor
push
mov
mov
ljmp
jno
sti
jnp
cmpsb
popa
std
paddsb
pop
push
std
loop
data16
shlb
jb
sbb
rorl
xor
int
xchg
or
out
cmp
cwtl
pop
and
std
push
sti
jl
adc
xchg
sub
jo
or
aaa
sub
insl
mov
fistl
cs
dec
sub
pusha
xchg
lcall
push
or
int3
inc
jns
add
es
and
cmp
rcll
nop
and
leave
sbb
jbe
and
jno
and
lahf
jg
and
inc
xchg
sbb
sub
xor
ja
fidivl
fisubrl
insl
xor
pop
lcall
jno
mov
addb
mov
pop
subb
in
jl
and
repz
call
fdivrs
rcll
ss
cmpb
test
jge
xchg
sbb
add
push
jo
dec
pop
shrb
pop
dec
cmc
out
mov
add
fistps
xlat
fstl
rcll
pop
mov
shrl
clc
xor
mov
daa
lods
pop
cli
dec
push
fildll
lods
cli
adc
ljmp
xor
mov
pop
mov
cmp
frstor
mov
mov
rcl
outsb
test
shlb
dec
xchg
mov
nop
cmp
adc
sub
cmp
scas
or
or
pop
js
mov
sbbl
adc
popf
xchg
mov
jnp
push
arpl
leave
daa
sbb
ret
jle
jno
data16
sub
lods
jmp
jae
pop
aad
mov
pop
adc
sbb
xchg
mov
fildll
inc
popa
popf
das
ja
add
imul
cltd
clc
dec
clc
add
fcoml
push
jo
inc
mov
popf
jmp
fdivs
jae
add
ret
jp
xchg
add
mov
xchg
sbb
in
movsb
ljmp
xor
fildl
xchg
in
setp
in
mov
and
imul
out
iret
mov
sub
or
adc
jo
push
xchg
and
loope
xchg
cmc
sub
aas
cld
cltd
popf
cs
adcb
lcall
cmp
pop
lahf
jne
push
std
js
popl
ljmp
out
inc
gs
or
aad
push
pop
mov
add
andl
ja
jmp
dec
popl
or
xor
sti
dec
jbe
sub
jle
scas
orl
mov
sti
or
je
fadds
sub
push
adc
test
xor
or
sub
push
flds
inc
xor
mov
mov
ret
dec
aam
mov
or
mov
or
cmc
cltd
cmpsl
fstpl
xor
out
jl
movsb
fcmovnu
dec
dec
subl
jne
scas
and
test
sbb
jbe
lods
cmp
stos
insl
jl
sbb
sbb
int3
pop
push
sbb
ja
imul
pop
xor
cmp
test
sub
lret
in
cmp
mov
pop
cltd
sub
mov
hlt
icebp
mov
aaa
push
std
mov
inc
dec
bound
cli
mov
cs
xlat
mov
dec
mov
int
xor
je
out
or
frstor
inc
sbb
js
push
ficoml
jl
js
push
fiaddl
jl
test
dec
fidivl
jb
stos
xor
insb
push
dec
or
jp
push
in
addr16
mov
or
std
stc
dec
cmc
cmp
out
lea
xchg
xchg
and
dec
pop
mov
shlb
int3
sub
out
xchg
pop
sub
mov
fmull
cmp
cmp
loope
jo
mov
add
sub
adc
add
sbb
cmp
ret
mov
mov
jl
adc
das
mov
add
cmp
cli
inc
ficoms
adc
xor
push
lret
gs
sahf
cmp
push
and
dec
and
adc
mov
sahf
gs
outsb
imul
sub
dec
stos
std
push
lds
das
push
lahf
flds
scas
lods
mov
stos
xchg
mov
lds
sub
cmp
or
xor
lea
fldcw
xor
repz
ret
fwait
out
xor
push
sti
imul
rorb
xlat
lock
xlat
jb
sub
cmp
pop
aas
cs
push
popf
cmp
popa
jb
insb
pop
or
fbld
cmp
lds
add
arpl
int3
aaa
and
xlat
jns
mov
jne
push
adc
out
iret
aas
sarb
mov
pop
aam
cmp
mov
push
es
cmp
and
sbb
mov
sarb
mov
shlb
and
in
jne
add
and
sub
imul
mov
pop
and
cmp
int3
imul
popa
or
lret
jg
outsw
jne
cs
sahf
aas
pop
int3
push
arpl
jbe
inc
pop
sbb
mov
mov
dec
push
cli
cmp
dec
pop
std
ss
adc
adc
out
loop
movsl
pop
clc
cltd
leave
pop
ljmp
jne
and
ja
stos
and
jbe
sbb
sahf
mov
std
xchg
mov
jp
ja
inc
push
jmp
fstpt
test
dec
mov
xor
cmp
cmpsb
daa
mov
nop
adc
mov
xor
jle
popf
subb
adc
jnp
int3
pop
adc
jbe
cmpsb
push
sub
mov
cmp
dec
dec
jge
add
das
enter
sub
bound
mov
pop
jg
push
in
rcrl
push
aad
imul
cs
rclb
jl
or
ror
rcr
aas
push
aam
mov
js
in
or
push
imul
aad
adc
cwtl
faddl
mov
xchg
loope
leave
push
dec
jbe
mov
aam
adc
and
and
pop
mov
sub
or
lds
adc
shll
sbb
cmc
sbb
pop
testb
pop
adc
fwait
mov
mov
clc
bound
repnz
icebp
repnz
mov
mov
das
xchg
repnz
test
push
es
adc
std
cmp
adc
mov
das
xor
jl
xlat
rcll
out
cmp
jmp
rorb
js
adc
cmp
aam
inc
ror
xchg
xor
pop
push
les
adc
mov
xor
jl
popa
cmp
sub
jle
xchg
pusha
or
jne
lret
dec
dec
fnstsw
push
sbb
pop
dec
mov
mov
sbb
and
push
loope
ja
cmpsl
test
aas
and
lea
add
lods
xor
subb
into
push
push
add
aad
jo
sub
dec
xor
in
or
test
loopne
shll
pop
adc
imul
fiadds
mov
std
xchg
test
dec
cmp
movsb
sub
or
mov
mov
mov
cmp
std
push
or
fcompl
sbb
push
out
mov
dec
loopne
push
pop
xor
push
or
dec
jo
out
js
pusha
cmc
mov
not
sbb
in
sti
cmp
jmp
and
ret
jns
push
cmp
dec
cld
pop
lods
roll
xor
cmpl
xchg
cmp
push
push
lods
std
jp
jbe
bound
popf
sbb
aam
out
mov
std
ljmp
dec
sub
aam
push
push
push
mov
xchg
int
insl
gs
aad
sbb
imul
mov
rorb
fimull
mov
test
cmpsb
and
aad
cltd
and
xchg
adc
xchg
test
fucom
or
scas
pop
mov
in
std
sub
xchg
pop
and
cltd
jae
outsl
mov
arpl
mov
adc
cmpsl
push
add
cli
cmp
mov
jmp
mov
arpl
fdivrs
adc
push
fcomip
xor
pcmpeqw
mov
adc
popf
xchg
cld
mov
mull
aaa
cmp
push
scas
xchg
std
idiv
mov
into
and
data16
dec
es
test
xchg
das
jne
mov
cmp
xchg
inc
arpl
arpl
pop
mov
inc
test
adc
jge
xchg
xchg
imul
push
int3
aaa
xor
pushl
gs
aam
sub
xchg
jne
and
xor
jno
push
or
stos
enter
ret
dec
cmp
fisttpll
dec
cmp
jnp
pop
or
jno
or
inc
jnp
pop
xchg
loopne
pop
pop
dec
cwtl
inc
cmpsb
repz
jno
jns
test
pusha
ffreep
sub
mov
cmpsl
push
ds
dec
xor
in
inc
outsb
fdivrs
or
pusha
jbe
mov
add
mov
imul
adc
sbb
jecxz
fdivrs
jb
int
mov
cld
dec
jmp
ret
cmpsl
push
xor
push
cltd
dec
sahf
mov
icebp
dec
cmp
mov
mov
stos
or
jmp
mov
cmp
gs
xor
mov
mov
add
cwtl
mov
and
sub
push
and
push
stos
shrb
test
jne
aad
in
xor
rcrl
xor
xor
fists
and
adc
push
inc
inc
jmp
jmp
lahf
mov
pushf
in
pop
incb
or
cmp
mov
push
sbb
or
jmp
rorl
std
add
scas
int
mov
decl
sub
sub
inc
out
test
mov
divl
mov
inc
rorl
and
sbb
ljmp
lcall
cmp
dec
sub
pop
mov
inc
mov
cmc
ret
clc
sbbl
jae
mov
pop
bound
outsl
repnz
stos
mov
inc
cld
lea
inc
aas
ror
adc
or
flds
sbbb
loope
and
cs
pop
pop
push
sbb
cmp
adc
repz
inc
roll
jb
outsb
lret
mov
fmull
std
cmpsb
mov
cld
pop
pop
mov
test
stc
push
adcw
ss
ljmp
cmpl
daa
or
jnp
ret
icebp
lcall
mov
lahf
push
or
mov
add
and
add
sarb
jbe
gs
sub
xlat
mov
int3
sahf
cli
sub
stos
fildl
rcrb
adc
dec
pop
mov
jne
pop
fsubrs
nop
dec
imul
cmpsb
inc
push
stc
mov
push
add
push
or
aad
jge
dec
popa
sti
out
xor
jmp
jns
jg
cmp
pusha
int
cmp
mov
bound
test
adc
add
pop
cmp
add
cmp
push
imul
inc
push
xchg
addr16
aam
lea
imul
clc
addr16
fdivrs
sbb
pusha
cmp
inc
sub
xchg
lods
jmp
cs
scas
fcoml
adc
sub
sub
sub
loope
vmovupd
add
mov
cmp
movl
enter
xchg
imul
test
push
sub
mov
rolb
xchg
sbb
jns
mov
aad
push
in
popa
jns
adc
cmpsl
sbb
testl
pop
rorb
popf
cmp
in
add
popf
rol
lret
fsubrp
inc
mov
inc
fwait
jns
aam
mov
jmp
jo
mov
movsb
mov
dec
or
fbld
and
cmp
jb
ljmp
add
das
jno
clc
dec
test
scas
or
jb
lock
jns
and
push
mov
add
je
jl
inc
mov
add
mov
inc
loope
cmp
out
nop
lea
aad
inc
fistps
xor
mov
sbb
push
sub
movsl
fidivl
push
xchg
add
cmp
cli
je
in
scas
pop
push
cwtl
rcrb
lods
idivb
mov
cmpsb
scas
jecxz
jp
jbe
jno
aas
stos
and
mov
lea
push
push
cmp
xchg
add
mov
sub
lods
and
mov
adc
pusha
aaa
cmp
mov
cmp
jae
adc
mov
xlat
dec
cmp
xor
and
xor
push
sub
pop
fcompl
addr16
pop
push
aaa
xchg
stc
push
cmp
pop
fyl2x
cmpsb
aaa
and
mov
dec
or
mov
mov
adc
inc
push
mov
mov
repz
add
fistl
xchg
popf
dec
lret
jno
mov
jnp
dec
test
dec
jb
inc
in
pop
pusha
or
mov
fs
xchg
and
notl
fbld
push
cmp
xchg
test
adc
mov
aam
fdivs
cmp
movsb
sub
out
mov
mov
stc
mov
outsl
cwtl
das
aaa
in
lea
js
inc
outsb
adc
pop
adc
xor
inc
testb
jbe
push
push
sarl
xor
lret
mov
pop
add
inc
adc
and
movsl
pop
add
dec
pop
aad
sub
ret
ret
test
gs
xor
rcrb
lods
gs
neg
popf
sbb
addr16
sub
fcomps
or
mov
in
push
and
mov
push
add
mov
and
mov
bound
test
and
mov
cld
loope
int3
xchg
int3
cmp
lods
pop
ret
test
fsubp
sub
cmp
pop
mov
insb
pop
sbb
inc
mov
xor
lods
pop
lret
pop
in
mov
clc
jne
imul
test
xor
cmp
test
mov
mov
std
sub
cmp
lds
test
sarl
cmpb
dec
shll
xor
and
in
cmp
sbb
sub
add
test
sub
xlat
inc
adc
movsb
mov
add
mov
pop
mov
pop
inc
sub
negl
or
push
or
pand
imul
movsb
outsb
add
mov
outsb
pusha
sub
push
push
sbb
adcb
negb
mov
sub
jge
daa
add
popf
aam
sub
and
repnz
cmpsb
js
push
repz
fidivs
mov
add
out
lods
xchg
mov
sub
es
stos
dec
add
push
cmpsl
outsb
loopne
xchg
fisubrs
dec
insb
fisttps
push
lock
add
rcll
dec
aaa
xchg
push
push
mov
popf
dec
cmp
dec
fisubs
outsl
leave
sti
sub
clc
jl
inc
push
jp
inc
jb
jp
cli
dec
push
add
push
dec
sub
mov
adc
dec
je
and
inc
and
ds
aam
inc
pop
dec
push
test
test
sbb
cmp
lock
cld
jg
dec
cmpsl
mov
and
int3
fadds
inc
push
add
insb
pop
add
push
daa
lahf
fmuls
xchg
sbb
cmc
and
jbe
dec
pop
testl
insb
cmp
xchg
mov
scas
ja
fistps
addr16
mov
lret
lea
repnz
push
xchg
movsl
in
push
and
jno
leave
sbb
outsl
cld
push
or
inc
loop
cs
cmp
loopne
repnz
adc
aam
xchg
adc
cmp
pop
lahf
and
rcrl
fnstcw
mov
std
mov
ljmp
aaa
test
push
imul
add
adc
pop
jecxz
xor
outsl
out
adc
insl
xor
xor
cs
loop
das
shr
adc
insb
sti
xor
dec
mov
push
or
das
cltd
jl
xchg
push
pop
es
sub
inc
jle
jae
aad
xor
inc
fldt
shlb
inc
jmp
mov
inc
fistl
pushf
and
cs
test
and
xor
dec
addr16
mov
mov
jmp
inc
inc
ret
test
imul
bound
lahf
lods
add
mov
cwtl
mov
xor
sbbl
pop
push
jmp
sbb
out
pop
fwait
incb
push
scas
pusha
sub
inc
and
push
or
sbb
sarb
ljmp
xchg
pop
ja
clc
sub
lds
scas
addr16
inc
push
mov
sahf
jl
jne
lret
sub
lods
lods
shll
ss
xor
adc
dec
test
add
popf
sub
incl
mov
ljmp
cmp
pusha
lds
sub
in
or
sub
jle
sarl
pop
sub
jge
push
mov
pop
inc
push
jns
popf
aad
and
dec
or
xchg
xlat
into
negl
sbb
pushf
daa
outsb
hlt
insl
mov
xchg
jecxz
rclb
cmpsb
pusha
scas
xchg
inc
js
pop
cmp
pop
sbb
loop
lock
or
or
sub
test
out
out
sub
movsl
call
cld
mov
daa
cmpsl
sub
iret
sbb
sbb
jns
imul
lds
or
movsl
test
cltd
push
sahf
add
adc
bound
out
jg
sbb
lahf
and
int3
cmpsl
movsl
mov
add
mov
dec
popa
sbb
xor
popf
inc
dec
xor
incb
loope
push
test
ljmp
add
mov
pop
push
leave
xchg
insl
ds
push
add
scas
iret
pop
push
and
xorl
mov
adc
adc
outsb
push
sub
enter
inc
adc
pop
lea
sbb
pusha
pop
cwtl
cmp
sbb
repz
clc
xchg
fwait
jo
imul
xor
sub
mov
mov
popf
aaa
bound
push
ss
jns
or
xlat
ficoms
jp
rcl
test
cs
lods
or
clc
enter
sbb
inc
loop
add
mov
pop
mov
mov
mov
loop
inc
push
mov
movsb
insb
cmpsb
dec
leave
mov
dec
adc
jbe
xor
xchg
and
mov
stos
xor
pop
fcmove
push
jno
aas
add
push
cmp
mov
pop
std
lds
cs
addb
xor
pop
lcall
popa
lods
cmpsl
push
leave
xchg
xlat
adc
lahf
push
sarl
sarl
inc
cwtl
in
xchg
aam
pop
cmp
jmp
hlt
test
xchg
aaa
dec
mov
js
adc
sbb
pop
xchg
test
outsl
or
sub
pop
push
and
fsubs
dec
or
imul
jno
loopne
push
ja
or
lea
cmp
movsb
jl
pop
inc
and
adc
xor
shlb
repz
inc
inc
test
add
xchg
dec
dec
bound
adc
cmpsb
mov
call
mov
nop
and
xchg
daa
je
pop
sbb
or
sbbb
xchg
das
pop
sub
xorb
push
jp
movsl
cmpl
sub
xchg
sub
addr16
xor
jl
cli
xor
cli
movsl
jnp
add
dec
js
fistpll
cmpsl
and
stos
jae
addr16
adc
push
hlt
sbb
inc
mov
mov
push
sahf
pop
lcall
mov
jnp
push
testb
aam
scas
stc
xchg
lret
xchg
push
cmp
add
cld
jo
mov
push
sbb
and
pop
outsl
out
jbe
inc
or
pusha
push
xor
aas
pop
cmp
int3
inc
mov
push
pop
fdivs
mov
jae
fsubrs
and
inc
adc
mov
sub
fisubs
push
or
sub
sub
mov
pop
or
lds
movsb
sub
pushf
pop
nop
stc
inc
lahf
or
in
fstps
adc
test
lods
leave
je
fdivrl
or
cmpl
shll
mov
fnstcw
int
gs
xchg
sub
cli
ljmp
and
hlt
mov
or
iret
push
test
dec
mov
mov
loop
cmc
pushl
adc
dec
test
cmc
sbb
cmc
add
or
imul
pop
cvtps2pi
jmp
and
or
iret
pop
cmp
adc
outsl
mov
sbb
xchg
jle
jle
stos
adc
test
mov
xor
or
xor
outsl
dec
addl
mov
imul
push
repz
or
inc
std
sbb
push
xchg
dec
test
dec
jno
repnz
push
adc
add
cmp
inc
outsb
rolb
lock
cmp
filds
loop
or
insb
or
xchg
lcall
mov
iret
pop
int3
rolb
jns
push
cli
insb
sub
cmp
sbbl
cmp
lret
pop
xchg
in
push
pop
mov
lret
mov
push
jl
movsl
movsb
push
loop
stos
jp
jns
adc
dec
imul
test
jge
dec
sbb
push
and
dec
sub
mov
adc
xlat
or
jo
movsb
mov
mov
dec
rolb
adc
xchg
inc
in
xchg
add
pusha
mov
mov
sbb
push
inc
dec
push
adc
movl
dec
movsb
jnp
or
movsl
in
dec
or
lods
insb
sub
mov
dec
add
add
rcll
xor
mov
and
jge
outsl
aaa
or
loope
dec
leave
fcoml
aam
dec
and
stos
push
cmp
les
enter
cmp
jbe
daa
pop
jp
bound
cmp
cmp
psubusb
rorl
sbb
dec
jo
insl
push
fld
repz
xor
pop
cmpb
lret
xor
jo
sub
or
sub
std
stc
je
fnstenv
push
cmp
push
dec
mov
repnz
cld
cmpsl
imul
leave
or
inc
or
outsl
xchg
sbb
push
mov
and
stc
push
cmpsl
xor
sti
xor
outsl
sahf
dec
push
inc
movsl
adc
in
daa
int
test
jbe
push
adc
adcb
xchg
xor
dec
popa
and
das
popf
cs
fsubrs
xor
mov
jmp
add
test
cwtl
inc
sbb
fwait
std
sbb
je
adcl
cmp
push
pop
jmp
hlt
les
es
fcmove
call
dec
aam
push
test
jne
sbb
jne
or
jo
test
xlat
inc
or
fldcw
js
bound
xchg
mov
stos
loope
sub
fisttpll
insl
push
clc
add
pop
insl
aas
faddl
dec
and
xchg
dec
enter
cmp
ja
jmp
inc
push
sub
mov
imull
cmpl
add
inc
lods
mov
out
ret
lock
pop
push
jae
stos
jp
mov
stc
mov
jb
test
xchg
jle
stc
leave
mov
mov
inc
insb
xchg
stc
test
pop
or
xlat
or
das
xor
ja
push
dec
and
lahf
xor
cmc
jg
int
and
inc
jl
lods
ss
jne
shlb
xchg
stc
imul
out
in
lahf
add
fisubl
sub
adc
dec
xor
xchg
push
cwtl
sub
xor
aas
sub
dec
cltd
lods
loopne
and
scas
push
out
iret
cmp
int3
or
jo
clc
sti
sbb
ss
cld
sub
mov
mov
or
jmp
cmp
int
jne
push
jnp
lods
dec
or
or
mov
jl
pusha
pop
test
jge
push
fs
fmulp
test
sbb
mov
inc
ds
icebp
js
enter
lcall
es
movsb
sti
push
dec
push
aam
jg
sub
mov
sub
dec
push
les
rcrb
sahf
or
fs
mov
movsl
jge
jns
or
add
stos
adc
jmp
hlt
xchg
addl
sbb
mov
push
in
jge
cmp
dec
pop
jle
aam
sub
lahf
rcr
sahf
dec
insl
fs
or
aaa
pop
inc
mov
cmp
adc
mov
mov
sub
cmp
cmp
in
or
inc
outsb
jno
or
stc
lea
mov
pop
mov
inc
mov
stos
repz
loope
xchg
subl
test
xchg
iret
adc
aam
loop
add
pop
mov
cwtl
xchg
mov
inc
stos
xor
push
add
sbb
ret
inc
push
mov
pop
and
pop
and
stos
cmp
mov
mov
call
test
jl
mov
inc
movsl
push
mov
mov
cmp
jae
fidivs
popf
adc
stos
sub
hlt
fcomi
fildl
pop
popaw
popf
pushf
sbb
xchg
aas
pop
jne
and
scas
xchg
lahf
sub
xor
sbb
mov
movl
cmp
repz
pop
scas
inc
sbb
or
dec
inc
mov
dec
cmc
jecxz
mov
sbb
or
mov
popf
cld
pushf
outsb
push
aas
jge
cwtl
dec
bound
push
test
xor
xor
jecxz
call
rcrb
icebp
adc
scas
dec
int3
aam
out
cltd
push
cmp
dec
adc
test
icebp
insl
not
add
jg
and
adc
xchg
xor
into
fldcw
xor
daa
or
push
sub
shrb
les
dec
inc
push
aaa
mov
in
mov
clc
pushf
jne
and
arpl
inc
mov
or
sub
daa
jmp
jbe
pop
cmp
test
mov
loopne
dec
mov
pop
or
fdivl
sbb
int3
pop
in
mov
repz
jmp
or
xor
xchg
inc
adcl
subps
add
dec
rcr
inc
leave
roll
pop
push
xchg
inc
adc
clc
mov
adc
lea
and
xchg
lods
cmp
cmpsb
jge
popf
adc
push
pop
hlt
sbb
push
dec
in
jno
lret
mov
imul
ja
jmp
adc
adc
test
pop
mov
push
xchg
call
add
inc
ret
dec
int3
push
rorl
loopne
out
je
or
repz
xor
movsb
sub
dec
test
adc
mov
jne
pop
sti
negl
sti
sbbb
jmp
dec
xor
les
or
cmp
or
cmpsb
push
or
add
pop
lahf
jp
or
sbb
insl
fcoml
mov
or
loope
mov
test
cmp
add
les
push
cmp
cltd
cmp
sbb
dec
subl
sbb
sbb
mov
outsb
jmp
faddl
cmp
sub
rclb
mov
aas
mov
in
sub
jae
sub
in
lods
adc
adc
incb
or
or
jge
fcmovnb
fwait
ret
stc
cld
pop
mov
sbb
mov
jmp
loop
sbb
pop
in
pop
or
insl
mov
sub
sub
jge
scas
xor
mov
pop
mov
cmc
clc
adc
ljmp
clc
sbb
movlhps
xor
stos
inc
ss
sub
mov
jmp
bound
dec
leave
test
aam
adc
adc
or
adc
mov
adc
sbb
add
pop
dec
xlat
add
mov
jl
mov
push
andb
sub
and
jl
mov
and
outsb
out
addr16
mov
push
out
nop
dec
mov
cld
push
jnp
addr16
mov
test
sti
test
inc
jmp
or
sarb
out
inc
lret
mov
lret
sbb
subl
mov
mov
xchg
sbb
aad
in
cld
mov
push
pop
mov
lcall
lret
aas
push
lds
incl
mov
or
les
ret
adc
cmc
or
xchg
push
data16
dec
pop
dec
fstpt
shll
dec
lret
aam
fnsave
cmp
push
cwtl
pop
add
sbb
scas
arpl
mov
js
sbb
adc
push
js
daa
in
imul
mov
test
inc
inc
and
jp
aaa
mov
inc
insl
cwtl
jmp
cmp
rorl
mov
mov
das
rolb
xor
inc
dec
xchg
gs
mov
out
pop
das
in
pop
dec
and
push
push
jns
sarb
lcall
mov
jge
mov
sahf
xor
leave
stc
and
push
mov
arpl
mov
fsin
pop
jne
insb
jl
jmp
cmp
test
push
lahf
or
mov
cmc
jge
test
lahf
mov
add
lds
inc
xchg
mov
aad
sub
das
inc
orl
or
push
int
jns
cmp
push
in
pusha
cs
and
jmp
outsl
xlat
test
mov
sub
outsb
jae
nop
add
ljmp
sbb
jne
loopne
add
mov
aas
incb
mov
jne
rolb
in
lock
movsb
imul
lock
pushf
inc
fucom
xor
push
movsb
or
adc
cmp
aad
adc
jb
jnp
lods
outsb
cmc
inc
repz
dec
or
daa
cmp
inc
push
decl
mov
jns
jo
push
pop
dec
lahf
ja
push
xchg
outsl
in
or
sbb
adc
pop
cmp
or
or
sub
push
cltd
jae
mov
xchg
clc
or
mov
scas
mov
inc
cmp
add
or
inc
add
dec
cmp
pop
faddl
jno
dec
pop
xchg
flds
push
sub
adc
cs
mov
ds
fcmovnbe
adc
jns
jns
and
mov
dec
xchg
xchg
das
jg
sbb
and
add
jnp
adc
movsl
or
or
out
loope
popa
outsb
fldenv
insl
jb
cmp
jns
mov
insl
in
or
push
push
gs
cmp
push
push
push
cmc
xor
mov
mov
popf
es
push
and
xor
testl
xchg
xchg
adc
sub
jmp
mov
mov
jecxz
sti
fstpt
aam
inc
or
test
loope
jbe
fistl
addr16
lods
jmp
icebp
lret
sbb
pop
xchg
add
mov
bound
mov
xor
cmp
jmp
loopne
or
pop
pop
jl
lret
movsl
arpl
lea
push
sub
pop
pusha
push
jae
cmovns
outsl
mov
cmp
es
aaa
mov
ljmp
adc
daa
pop
mov
lahf
in
xchg
mov
shrl
out
lock
push
pop
lcall
dec
dec
inc
test
data16
das
inc
fidivrl
add
pop
stos
xchg
jp
or
pop
arpl
cmp
adc
pop
or
dec
testl
dec
cli
int3
lret
pusha
add
mov
push
ds
sub
dec
sub
dec
icebp
pop
test
or
sub
jmp
subb
dec
jne
mov
data16
dec
aad
test
push
inc
in
xor
sub
cs
loopne
or
push
pop
add
push
jg
in
mov
sti
jo
dec
lds
daa
fsubrl
add
das
cmp
fsubl
mov
xchg
sub
jns
mov
fdivs
mov
lock
sub
mov
out
xchg
fldl
cmp
inc
and
dec
addl
lret
pushl
ljmp
and
mov
add
cwtl
dec
loopne
and
dec
jo
lods
inc
je
enter
mov
call
jb
scas
adc
pop
pop
loope
mov
les
dec
pop
xrstors
push
push
pop
testl
lahf
iret
xchg
lods
icebp
iret
cmpb
jb
mov
lret
rcll
sub
mov
std
pop
inc
lds
mov
xchg
adc
jg
jb
dec
mov
mov
xchg
jmp
sti
cwtl
jbe
mov
jb
jmp
jno
sti
inc
in
lret
jns
data16
scas
dec
sub
add
cmpb
aas
call
xor
test
cmp
cmpsb
mov
movsl
js
sbbb
addb
dec
fistpll
sbb
push
xchg
adc
int
mov
xor
pop
sub
xchg
pushl
or
lods
in
mov
or
xchg
or
push
push
sub
xor
int3
fdiv
std
je
std
imul
ds
xchg
and
xchg
iret
je
dec
pop
adc
mov
jl
add
cmp
in
das
ret
daa
add
cmp
push
dec
shll
or
sbb
mov
pop
mov
push
adc
shrb
jbe
std
fcom
aad
add
js
fildll
dec
cltd
and
rcll
xchg
stos
jb
mov
inc
cli
inc
mov
std
clc
xor
cmpsb
data16
add
pop
jnp
push
mov
out
or
decl
xchg
adcb
aas
out
sub
pop
dec
xor
push
xor
cmpsb
aaa
dec
in
stos
dec
loope
sbb
int
sub
int3
das
mov
sbb
sub
and
jmp
rcrb
dec
addr16
jge,pn
xchg
js
and
fwait
push
test
xor
fidivl
cmc
adc
jne,pn
das
xor
and
nop
sti
repnz
mov
mov
sub
js
pop
cmp
sbb
pop
push
mov
lods
dec
jmp
cwtl
lds
add
jb
in
cmp
jne
xchg
stc
or
ret
cmp
push
jno
out
test
cmc
loopne
inc
notl
jb
dec
mov
lret
xor
cld
in
push
frstor
movsb
push
ja
pop
sbb
mulb
jge
rep
xchg
push
push
nop
fldcw
idivl
call
fwait
sar
inc
sbb
daa
int3
dec
fstp
daa
or
ror
sti
xchg
flds
inc
iret
mov
pop
int3
les
sub
lret
xor
sbb
insl
mov
inc
jg
jbe
divl
insl
pop
xor
dec
mov
stc
lds
cld
in
addr16
dec
add
push
jle
gs
xorl
loope
sub
pop
fnstcw
stos
xchg
or
add
imul
movsb
cmp
and
dec
cmpsl
jae
adc
add
mov
mov
pushf
data16
int
lea
ss
push
out
cld
xchg
std
push
jnp
cmovae
cltd
xor
fildl
call
jb
jo
mov
cmp
call
pop
xor
xchg
gs
out
into
aad
pop
and
jo
jns
fisubrl
jbe
iret
scas
dec
and
mov
imul
lea
int
sub
mov
mov
pop
iret
adc
pop
gs
gs
or
fidivs
outsb
xor
push
aad
sub
mov
and
bnd
aas
stc
cmp
rolb
das
cwtl
dec
inc
shlb
out
cld
dec
mov
and
inc
mov
cmpsl
pop
out
mov
pop
loop
lock
mov
cld
mov
enter
test
fcomps
aad
jno
dec
movl
pusha
xor
mov
dec
mov
mov
mov
in
test
jne
jmp
push
xchg
iret
mov
push
test
test
rcrb
fnsave
dec
not
cmpsl
cmp
sbb
insb
mov
in
cmp
adc
add
aam
fdiv
sbb
aaa
xor
mov
loop
insl
pop
mov
cmp
je
cld
rorb
mov
xchg
push
pop
push
xchg
push
outsb
jnp
push
test
daa
nop
daa
inc
fmul
repz
inc
lret
xchg
scas
mov
dec
mov
dec
mov
push
lret
and
push
dec
mov
mov
ds
repz
lea
ss
mov
mov
out
iret
and
sub
mov
cmp
stos
xor
arpl
jle
imul
cs
lds
hlt
push
sti
and
in
add
push
cmpsl
pop
cwtl
icebp
sbb
daa
fcompl
test
cmc
int
mov
clc
fsubs
rolb
push
lret
popf
mov
fisttpl
into
lock
outsl
inc
lret
mov
jmp
xchg
pop
test
lret
fildll
xlat
js
hlt
lds
sbb
lods
mov
mov
xchg
test
mov
movsl
aad
into
dec
xor
in
iret
fdivrl
mov
xor
dec
sahf
es
dec
mov
daa
push
adc
xchg
js
sub
outsl
or
fldl2t
inc
jge
sbb
mov
xchg
xchg
jge
adc
inc
test
hlt
mov
or
xor
outsb
xchg
mov
shll
pop
jecxz
xor
push
or
sub
push
pop
fistpl
push
xor
push
fsincos
cmpl
insb
xor
push
ret
push
add
sbb
inc
imul
out
dec
jno
and
push
xchg
jb
xor
test
xor
fsubl
push
and
jmp
pop
adc
jbe
jne
push
sahf
adc
repz
imul
push
lock
pop
and
daa
add
lods
dec
sub
stos
lock
sbb
stc
lock
sub
jae
xor
lret
add
jnp
pop
cs
cld
jne
or
jae
sub
push
aad
cmpb
or
sbb
adc
sbb
inc
sbb
imul
xchg
jp
popa
push
cmp
pop
mov
add
iret
cmp
int3
out
testb
insl
mov
jbe
and
dec
mov
outsl
je
lahf
sbb
pop
popa
mov
pop
dec
insl
lcall
mov
mov
pop
cmp
ret
and
fldl
and
sti
ljmp
jl
jmp
rorl
dec
push
jne
sbb
sub
inc
dec
pop
call
push
jle
aad
pop
out
sbb
add
pop
sbb
dec
lret
add
pop
push
insl
int
jno
inc
ret
xchg
jns
jg
jl
push
cmpsb
jmp
cmc
jp
xor
cmc
les
lock
jns
aaa
jge
mov
mov
addr16
push
cmc
test
jg
js
mov
fistpl
add
mov
xchg
cmp
pop
add
sti
cwtl
fwait
sub
and
adc
sbb
xor
sub
inc
int
dec
stos
je
mov
jge
cmp
lods
cmpsl
add
insl
fcoms
outsb
mov
dec
fidivl
out
arpl
or
jg
cmp
sbb
sub
jne
xchg
cmp
cmpsb
xchg
sub
mov
mov
mov
add
sub
jle
inc
sub
cmpb
pop
mov
push
scas
push
add
lret
aas
cld
inc
sub
or
pop
repz
rorb
push
push
and
cmpsl
dec
xchg
xchg
dec
pop
mov
stos
lds
fldl
cli
pop
pop
jns
int3
sbb
dec
sub
dec
into
xor
fistps
cmp
dec
lds
mov
xchg
jns
add
jmp
ret
daa
sub
mov
or
sbb
jmp
cmc
test
cmpsl
add
lds
mov
cld
mov
fsubrs
daa
xchg
daa
pusha
xchg
adc
loopne
or
je
fldt
inc
or
push
jns
cmp
mov
xchg
add
lahf
mov
cmp
pop
pop
addr16
xor
call
or
jno
dec
out
or
lcall
imull
jae
pop
jo
and
out
lahf
mov
or
shrb
mov
inc
cmpsb
or
adc
and
icebp
dec
inc
ja
sbb
aas
mov
dec
repz
aaa
jns
jmp
cs
inc
imul
sti
fdivp
adc
mov
jb
inc
fiaddl
inc
gs
dec
pushf
scas
shr
fwait
ljmp
add
sub
leave
jae
push
clc
lea
sub
jg
or
dec
cmp
scas
std
xchg
test
sbb
add
xchg
stc
and
lret
dec
clc
mov
pop
stc
inc
jnp
push
out
adc
mov
aas
pop
lods
push
aad
test
fstpl
jns
mov
xchg
jl
xlat
out
lahf
or
shl
inc
mov
adcl
shll
add
xor
or
cltd
scas
jmp
sub
cmp
pop
and
loop
cltd
mov
add
inc
clc
jo
push
pop
mov
ljmp
ret
cmp
fcoms
loop
sahf
stc
add
lret
dec
jge
or
sbb
mov
sbb
les
add
adc
xor
loop
fisubs
lahf
pop
mov
cmp
mov
xor
cmp
fcom
daa
and
dec
lods
and
lahf
fldcw
inc
jecxz
ret
inc
cld
jg
cmp
in
jbe
jne
lret
call
mov
cmp
out
aad
jbe
ds
pushf
mov
std
aas
push
mov
adc
inc
xor
sbb
bound
fwait
cmpsl
out
pushf
in
add
xor
xchg
stc
jecxz
das
xchg
jo
dec
in
popf
test
and
and
cwtl
cwtl
orb
mov
cwtl
movsb
cmp
inc
ss
dec
mov
out
cmp
pop
aad
xor
mov
les
mov
and
shrl
mov
leave
push
xor
or
push
popf
cmp
stos
popa
fwait
pop
incb
loop
mov
loopne
fdivr
mov
dec
out
adc
add
sub
push
inc
sub
das
lock
fdivs
popf
out
popa
inc
inc
push
dec
aas
sub
push
push
test
mov
jmp
shll
push
js
cli
sarb
les
aaa
sbb
cmc
inc
lea
or
or
mov
xchg
jae
push
test
cmp
out
ds
cmp
adc
mov
idivb
mov
ljmp
ficomps
outsl
imul
fnsave
or
mov
dec
cmp
mov
adc
mov
mov
push
sbb
imul
lret
mov
push
outsl
sti
pop
fnstenv
mov
jg
jl
adc
fsubrl
add
sub
add
and
pop
sbb
cmpsb
pop
push
fnstenv
push
rcrl
fisttps
xchg
mov
insb
mov
dec
push
addr16
aad
mov
jge
int
adc
lods
nop
push
sbb
push
test
xchg
mov
and
cmp
inc
rcrb
or
adc
mov
inc
loope
jecxz
add
lds
int
pop
gs
es
mov
leave
xor
xor
or
pop
sub
mov
flds
mov
mov
push
add
rcrb
push
aaa
inc
stos
roll
scas
inc
jo
xor
pop
sbbb
movsl
loope
movq
scas
adc
xor
js
cmp
stc
pop
insl
lods
movsl
jmp
lcall
stos
inc
jp
fbld
std
lods
inc
mov
mov
les
or
fsub
xlat
push
insl
sub
xchg
insb
push
repnz
mov
mov
jb
dec
out
jae
out
cs
push
ss
fstpl
imul
jge
push
cltd
push
hlt
or
fsubrl
out
mov
sub
data16
movl
popa
test
adc
sbb
sti
aaa
or
cli
push
jbe
adc
jp
insb
ret
push
pop
pushf
aas
cmp
push
sbb
pusha
and
mov
cmc
dec
mov
orb
loop
or
out
dec
ds
insl
mov
pop
mov
sbb
xchg
cmp
cmp
faddl
mov
test
push
mov
fisubrl
lcall
or
mov
lret
cmpsl
sbb
mov
and
jns
pop
push
and
push
lea
xor
leave
or
xchg
jmp
dec
jno
pusha
inc
subb
jle
leave
xchg
loop
adcb
mov
les
adc
ds
test
mov
pop
out
jne
push
lahf
movsl
mov
jb
ss
xor
dec
sahf
in
mov
repnz
dec
pop
xorb
add
adc
cmp
xchg
ret
int3
cmp
or
dec
and
or
dec
cmp
mov
or
push
pop
jmp
cli
bound
mov
mov
cmp
in
aaa
mov
out
popf
mov
enter
sbb
mov
cltd
lods
imul
xchg
sub
xchg
and
call
inc
repz
add
jl
js
enter
imul
daa
out
cmp
dec
xor
cmp
push
repnz
sub
loop
cmc
aam
mov
or
inc
test
dec
in
fildll
fisubrl
orb
adc
addr16
addr16
push
inc
sub
or
jmp
mov
gs
icebp
mov
mov
adc
dec
mov
ja
dec
cmp
xchg
xchg
cmp
aaa
in
ds
jne
push
daa
gs
push
cld
jns
movsb
hlt
neg
mov
pop
enter
xor
inc
repnz
rorb
xor
xchg
mov
lock
jo
cmp
jle
dec
pop
pushf
xor
out
pop
stos
mov
cmp
outsl
cs
rorl
push
lret
fstl
adc
stc
sbb
sub
cltd
push
push
add
int3
test
popa
jno
mov
je
jle
popf
pushf
cmp
test
inc
ss
inc
scas
sub
and
aad
mov
dec
negb
or
fwait
dec
and
push
adc
in
push
pop
loop
sar
mov
dec
les
dec
out
jecxz
cltd
jp
cmp
lods
mov
ficoml
aas
lods
adc
popa
into
sbb
stos
es
cwtl
push
pop
les
fs
pop
pushf
lea
cwtl
jno
jecxz
insl
cmpsb
push
or
loopne
push
cmp
icebp
dec
push
repnz
cmp
iret
and
lods
shl
xor
sti
int
aam
push
sbb
mov
aad
cmc
mov
lcall
pop
mov
out
sub
loope
in
push
mov
mov
stc
xchg
cld
cmp
out
pop
dec
cli
adc
not
xchg
jne
push
mov
jae
aad
jae
adc
push
insl
or
dec
xchg
popf
bound
jmp
adc
inc
call
cmp
mov
or
adc
sub
imul
adc
fisttps
jns
cmpsl
dec
pop
dec
cmc
lahf
out
cmp
call
imulb
mov
rcr
sub
popf
and
push
in
or
jns
hlt
popa
adc
fwait
jnp
clc
or
xor
test
pop
or
dec
pop
repz
ds
pop
sbb
arpl
mov
pop
mov
mulb
push
lock
icebp
stc
mov
fmuls
mov
mov
and
or
je
jns
mov
ds
mov
inc
jmp
xorb
lods
dec
scas
sti
jae
dec
jl
int
popa
gs
mov
and
sub
dec
fdivr
cmp
adc
mov
loope
inc
in
lods
scas
lahf
in
sub
cmpsb
scas
or
daa
push
lods
aam
inc
push
icebp
add
pop
push
aad
fldcw
fstl
sbb
pop
xchg
sub
and
and
or
mov
cmp
xor
jne
je
test
lea
orl
iret
xchg
jne
dec
or
sahf
mov
push
js
mov
jbe
pop
mov
lret
aas
push
icebp
inc
lcall
hlt
xor
ss
dec
sub
sub
scas
arpl
and
das
mov
sar
subb
movsl
fisubl
lret
cmpsb
cli
fcompl
pop
jne
add
and
fcoml
aas
jl
ja
pop
mov
sub
adc
int3
push
push
inc
imul
cmp
fisttps
and
or
cs
dec
negl
push
in
stc
nop
cmp
icebp
push
imul
jno
repnz
mov
sub
mov
loopne
ret
aaa
push
jmp
clc
data16
xlat
pshufw
sar
and
push
pop
jmp
push
sub
js
bound
jo
xor
jle
mov
lods
mov
and
sbbb
mov
push
out
xchg
and
cs
popf
rcrb
adc
inc
fnstcw
fildll
stc
dec
pop
shrb
mov
jle
es
ja
or
loop
mov
jl
fsubrl
pop
in
adc
sub
cmp
pusha
xchg
js
inc
inc
xchg
adc
pop
xchg
sbb
imul
fldlg2
pushf
inc
mov
loopne
bound
movsb
mov
or
jle
fwait
dec
insl
cmp
dec
push
and
mov
push
dec
iret
lcall
cmp
andl
into
sbb
insb
rcrl
pop
xor
or
mov
add
sbb
enter
pop
inc
divl
shld
mov
leave
lcall
icebp
jnp
add
lret
or
int
js
fstps
pusha
pop
cmp
scas
rclb
cwtl
push
sub
fcomps
in
push
pusha
pop
cmpl
jo
inc
jno
push
cld
cmp
push
lds
xor
and
jae
enter
jno
sub
push
dec
int3
push
pusha
sub
inc
imul
fcmove
hlt
push
mov
out
pop
pop
or
sbb
shr
sub
cmp
xor
push
cmp
cld
loope
mov
add
and
xor
cmp
adc
insb
sbb
mov
pop
jno
dec
hlt
cmp
loop
lods
out
icebp
adc
sbbb
sub
cmp
scas
pop
jo
dec
pop
inc
rcr
xor
xchg
xor
xor
cmc
fdivs
mov
fisubrs
jae
outsl
jnp
lahf
push
or
xorl
cmp
jns
inc
xor
jge
add
es
call
nop
pushf
fmul
push
pop
xlat
adc
push
jbe
cmp
mov
sbb
cltd
sub
pop
cmp
and
jnp
jle
fdivl
jge
sub
imul
inc
push
xchg
dec
flds
fimuls
fstps
int
cmp
daa
sub
aas
je
ret
push
sub
adc
jo
pop
xchg
push
jne
fistl
adcb
mov
mov
jbe
cli
push
mov
sub
in
in
popa
or
dec
cmpsl
and
mov
mov
add
cmpsb
add
mov
out
sub
sub
in
mov
subb
dec
sbb
push
lea
scas
xchg
xlat
loop
test
in
mov
pushf
or
scas
sbb
imull
mov
jnp
push
cmpsb
push
lods
or
push
subl
mov
xchg
clc
cmp
push
or
stc
ret
add
inc
test
mov
cwtl
mov
lea
nop
push
mov
jp
loope
and
mov
ficompl
pop
js
mov
fdivrs
mov
mov
push
inc
lea
mov
cmp
mov
arpl
xor
xchg
pop
inc
sub
repnz
lret
add
add
repz
out
mov
sti
pop
test
xchg
pop
inc
xchg
mov
lds
aas
jp
xchg
push
or
sub
ss
xchg
jo
ret
pop
or
sub
jno
sbb
adc
dec
shlb
imul
je
fsts
mov
add
rcll
jne
rcr
add
push
and
inc
loopne
cmpsl
add
push
ds
inc
int3
cltd
sub
mov
xlat
lea
movsb
adc
pop
rcll
sbb
mov
fst
mov
push
push
pop
lcall
mov
cmp
shrl
mov
lods
sub
sbb
push
lock
sbb
popf
cwtl
dec
dec
sub
mov
sti
dec
jns
adc
rcrl
jae
xchg
pop
fstps
inc
loopne
inc
mov
adc
push
sub
stos
mov
gs
mov
imul
inc
jne
sub
dec
and
xchg
call
mov
push
test
lret
loop
inc
cmpsl
sbb
repz
cmp
dec
pop
adc
lock
adc
sarl
pop
pusha
frstpm(287
aad
mov
sbb
sub
pop
idivb
hlt
into
mov
xchg
cmp
fidivl
jle
pop
cltd
ret
cmp
ljmp
mov
hlt
xchg
int
xor
rcrb
adc
pop
push
fsts
add
aad
pop
clc
sbb
xchg
xchg
adc
and
ds
push
andl
jae
xor
jnp
push
xor
dec
xchg
rcll
mov
mov
mov
les
adc
or
inc
fwait
mov
cmp
outsb
inc
lock
push
pop
jp
je
mov
jo
mov
add
push
inc
lea
pusha
push
xchg
push
xchg
aad
cmp
mov
je
jp
cltd
cmp
lea
loope
jp
daa
dec
lds
push
scas
dec
pop
pop
into
out
jp
frstor
outsb
int3
scas
pop
and
and
jns
arpl
mov
and
mov
push
and
or
pop
mov
mov
xchg
nopl
inc
inc
hlt
ret
pop
lcall
push
frstor
ja
pop
lahf
lahf
xor
out
fmulp
sub
sbb
movsl
repz
and
jp
add
and
xor
jno
rorb
je
ds
in
imul
lods
push
shr
pop
fimuls
sub
js
pop
sub
cmp
or
pop
imul
inc
xchg
or
pop
iret
fimuls
mov
pop
push
movsb
lret
imul
push
adc
or
enter
mov
cmp
dec
jo
mov
pop
pusha
cmp
mov
mov
push
or
cwtl
cld
jp
xchg
mov
fbld
shlb
jne
inc
aad
mov
jns
loop
xchg
call
mov
push
enter
inc
in
imulb
push
jb
shr
xchg
jecxz
aas
lahf
xor
dec
ljmp
push
or
pop
mov
pop
clc
fadd
sub
stos
enter
push
mov
mov
jo
pop
xchg
shlb
pop
lahf
sti
arpl
mov
pop
sub
repnz
add
idivl
dec
jp
test
adc
loope
daa
adc
jne
ja
or
and
inc
pop
cld
xor
in
bound
xor
sub
xor
pop
ret
sti
lahf
fs
sbb
inc
cmp
and
dec
adc
adc
push
shlb
push
jle
sbb
push
ficompl
or
iret
ja
jne
nop
mov
enter
cmp
xchg
mov
xor
adc
adc
cmp
sbb
jle
pop
int
test
imul
cmp
sbb
jg
int
lea
sti
fdivrl
push
push
or
xor
or
xchg
xchg
xor
flds
push
push
jbe
or
dec
repnz
cld
add
add
adc
std
popl
sbb
push
mov
lcall
data16
loop
lcall
push
jae
adc
in
xor
pop
jecxz
and
jmp
mov
cmp
shrl
lds
lea
mov
pop
out
push
mov
dec
mov
fdivrl
movsl
gs
sarl
jecxz
pushf
adc
mov
adc
in
imul
pop
inc
loopne
jnp
jns
pop
lea
jl
cwtl
ret
pop
xchg
roll
push
lcall
aaa
mov
push
push
enter
push
fidivrs
jle
sub
dec
mov
adc
or
mov
cld
aaa
out
rorb
mov
test
mov
fstl
and
scas
cmp
dec
jbe
jne
push
loopne
ror
dec
cli
or
repz
ret
and
cmp
xchg
cmp
rcll
mov
pop
mov
xchg
and
test
and
shr
sub
push
and
lret
fmull
cmp
xchg
jl
in
mov
mov
cmpsb
sub
dec
dec
lret
add
sub
aaa
call
fisubrl
enter
idivb
cmp
fwait
sbb
mov
or
dec
xor
cmpsl
mov
inc
outsb
mov
dec
jne
jns
push
stos
xor
xor
idiv
push
repnz
xchg
push
arpl
outsb
rorl
push
arpl
inc
fdivl
mov
push
mov
pop
into
shl
mov
add
lea
adc
lock
pop
cwtl
sub
sahf
fidivrs
bound
push
das
sub
push
mov
adc
test
mov
cli
lcall
stos
test
enter
scas
pmaxub
inc
idivl
mov
jo
and
daa
sub
pushl
incb
daa
sub
and
lods
or
iret
iret
ja
outsl
pop
je
rorb
push
pop
or
xchg
sbb
push
jmp
add
int
pusha
loop
sub
mov
mov
xchg
test
inc
insl
xor
mov
add
mov
outsl
push
lea
lods
test
jno
icebp
mov
std
mov
push
fldenv
xlat
adc
fistpll
sub
mov
out
xor
imul
xchg
pop
arpl
imul
popl
sub
dec
movsb
lahf
jmp
lock
mov
inc
mov
hlt
ljmp
or
fimull
insl
mov
cmpb
loop
or
fiaddl
dec
inc
sbb
mov
ja
inc
pop
or
add
jecxz
jle
add
mov
dec
jnp
movsl
addr16
es
shll
pop
sbb
or
push
je
cmpsb
daa
xor
in
mov
xchg
xor
aam
testl
mov
leave
dec
imul
jle
inc
jne
call
or
fs
jge
inc
fwait
fwait
or
mov
adc
stc
outsb
cmp
fucom
jne
mov
push
inc
or
xchg
insl
sub
dec
mov
das
dec
rcrb
pop
inc
sub
sbb
repz
or
inc
movsl
sub
imul
push
aam
int
add
imul
gs
stc
pushf
loop
adcb
aam
inc
fldcw
jns
out
jo
pop
dec
push
push
dec
cld
adcl
cmp
mov
rorb
call
inc
cld
push
inc
mov
jbe
scas
imul
inc
jbe
mov
add
sub
fsubr
push
jnp
cmc
jne
data16
or
mov
add
popa
or
shrb
movsb
test
mov
jbe
inc
hlt
xchg
stos
jae
and
repnz
jae
outsb
xchg
enter
mov
jmp
pop
xchg
sub
daa
or
movsl
out
or
push
aam
or
dec
loopne
mov
movsb
push
push
cmp
mov
lret
clc
push
add
es
leave
cmpb
push
pop
sbb
xor
cmp
into
jb
filds
addb
insl
cmp
sub
std
lcall
cmp
add
into
testb
sub
push
push
es
xor
hlt
sahf
push
and
iret
cli
addl
in
jne
adc
mov
mov
pop
pop
fs
mov
cmc
xchg
sub
lds
sbb
leave
insb
lods
push
inc
dec
push
mov
sar
rcrl
popf
leave
lret
mov
int3
movsl
pop
xchg
icebp
dec
std
test
imul
cmp
sub
and
ret
adc
int
int3
xchg
roll
mov
in
mov
xor
test
adcl
inc
out
inc
mov
pop
cmc
or
push
leave
mov
clc
mov
cmp
lods
add
outsb
adc
pushf
outsl
jae
int3
flds
mov
pop
adc
pushf
pop
insb
mov
or
or
ja
lcall
sub
mov
or
aaa
sbb
mov
movsl
cmp
fscale
jns
aas
dec
cmpsb
shrl
lret
inc
sub
in
outsl
dec
jmp
sbb
and
push
mov
and
aad
mov
xor
xor
and
cs
insb
sub
outsl
bound
rorl
mov
push
xchg
popf
push
arpl
push
push
insl
in
add
lret
adc
jns
leave
fcompl
dec
icebp
sub
mov
cmp
test
enter
out
adc
ss
mov
pushf
js
mov
push
loope
mov
lods
enter
mov
pop
jno
lcall
pop
dec
jbe
fsubl
movsl
mov
cmc
inc
out
dec
cmp
in
pop
pushf
jge
mov
ljmp
data16
filds
rep
mov
push
add
mov
pusha
roll
push
lea
mov
movb
xor
imul
jno
jmp
xchg
cld
jne
gs
inc
push
mov
adcb
sahf
leave
and
jg
repnz
jge
xchg
adcb
bound
and
sub
cmc
hlt
sbb
fmull
push
xchg
jno
das
mov
ds
dec
jge
xchg
mov
push
adc
mov
inc
mov
mov
std
test
pop
dec
cmp
xorb
cmp
adc
mov
fwait
pushw
stos
push
dec
adc
and
mov
outsl
mov
fildl
push
add
or
icebp
sbb
aas
adc
xchg
ret
int
mov
xchg
fadd
mov
push
rolb
rolb
fidivrl
js
cmpsl
push
shll
xchg
add
xorb
shll
shrb
or
int
je
adc
pavgb
pop
inc
pop
cmc
test
dec
shlb
test
pop
mov
repz
adc
push
loope
jo
rcrl
sub
int
jle
fwait
ret
fwait
cmpsb
add
adc
inc
enter
repz
or
pop
xchg
lea
lret
outsb
push
popa
cmp
cltd
sbb
xchg
fs
loope
shll
adc
fidivrl
pusha
sub
cmpsb
dec
sbb
rcll
jae,pt
push
xor
mov
push
pop
xlat
push
orb
sti
push
sbb
data16
inc
cld
cmc
addr16
inc
clc
xchg
mov
sti
inc
xchg
mov
inc
push
movsl
int3
js
in
mov
inc
cld
mov
xor
pop
mov
ds
sub
add
jge
dec
xorb
push
inc
pop
xchg
xchg
loope
cmp
dec
inc
leave
lcall
mov
push
adc
xchg
fstpl
ficoml
mov
push
repz
pop
mov
data16
mov
out
movsl
jg
dec
cmc
inc
mov
fcmove
inc
cmc
jo
leave
xor
jl
mov
inc
popf
mov
subb
fnsave
fsubl
fs
xchg
test
lods
jp
cmp
inc
sbb
je
sbb
sbb
mov
es
xchg
pop
filds
mov
test
add
mov
add
fwait
mov
mov
js
jmp
add
mov
mov
outsl
xor
notl
bound
add
enter
sub
outsb
sub
sbb
rorb
or
clc
pop
repz
or
push
inc
pop
xchg
xor
or
pop
or
mov
jp
test
hlt
and
movl
call
pop
xchg
lods
jmp
fcmovb
inc
mov
inc
inc
lds
jge
int3
jmp
sbb
dec
aas
and
pop
sub
lds
sub
xor
push
dec
aam
ret
ljmp
add
enter
bound
inc
mov
push
jg
out
das
ja
std
lret
xchg
sub
cli
inc
adc
pusha
lret
mov
mov
push
arpl
test
loopne
sbb
jp
insb
outsl
fbld
divl
lods
adc
lea
ret
in
cwtl
sbb
xorl
leave
jnp
xchg
mov
push
jns
pop
mov
int
aaa
out
push
or
or
cmp
cmpsl
in
hlt
loopne
push
stc
or
loopne
pop
push
stos
and
movsb
scas
lods
daa
inc
inc
ret
pop
pop
xchg
push
sbb
hlt
cmc
add
dec
mov
repnz
outsb
pop
mov
mov
jnp
out
cmpsl
mov
mov
jo
mov
fsubr
fildll
mov
andb
xchg
lds
mov
and
adc
fldenv
out
cli
lea
xchg
lret
mov
push
dec
jo
jb
mov
lods
jb
cwtl
stc
cmc
fdivrs
or
sbb
inc
xor
mov
jb
pop
repz
outsl
pop
je
add
aaa
jo
mov
pop
lds
scas
push
adc
imul
add
push
pop
out
pop
pop
lods
mov
stos
mov
addr16
add
push
leave
call
sbb
std
sbb
inc
lahf
mov
cld
jae
imul
sub
nop
push
xor
frstpm(287
add
dec
movsl
loop
js
adc
push
pop
lahf
or
sub
jnp
sbb
inc
jmp
xchg
movsl
cmp
call
stc
fstps
jmp
cmc
dec
xor
xchg
dec
adc
lods
or
pop
rcrl
pop
decb
adc
lahf
mov
jg
inc
xchg
dec
imul
adc
xor
adc
and
addr16
push
or
in
dec
inc
lods
sbb
xchg
sahf
out
xchg
sub
aas
dec
push
push
pop
jge
ljmp
and
xor
push
pusha
repnz
adc
shlb
pop
out
mov
xor
xor
rclb
mov
into
jmp
shll
sarb
testb
push
mov
inc
out
ja
xor
shll
mov
inc
xchg
clc
sbb
sub
movsl
xchg
jne
sbb
pop
xlat
inc
sbb
imul
xchg
aad
loopne
nop
adc
lock
adc
loope
outsb
sbb
sbb
push
leave
mov
out
push
addb
mov
and
mov
fcmovb
and
lods
or
add
inc
cmpsl
imul
js
pop
push
mov
inc
in
add
cmp
adc
sbb
cli
xchg
dec
xchg
cmp
xchg
int3
out
push
push
and
mov
mov
jb
int
fwait
dec
cmc
dec
imul
lods
std
or
jno
lea
pop
in
dec
inc
hlt
or
adc
mov
mov
shll
int
xor
mov
cmpsb
daa
mov
pusha
add
add
gs
pop
popa
testb
lea
cwtl
lea
jno
mov
jle
in
ficoml
in
jecxz
popa
jecxz
nop
sbb
aas
adc
mov
jle
pop
or
cmp
mov
icebp
lret
add
sub
xor
cmc
rcl
push
fnstcw
cld
push
inc
or
xor
push
mov
or
lods
popa
and
jb
into
lahf
mov
cmp
pop
cli
aam
ja
pop
sbb
xor
test
repnz
rcrl
jle
enter
dec
adc
insl
repz
mov
push
out
ja
pop
add
xor
add
daa
aaa
mov
push
clc
pop
dec
test
stc
xor
fisubrl
sub
mov
jge
gs
or
cli
and
sti
test
pop
jge
dec
test
aas
xor
dec
cltd
fwait
or
mov
andl
or
and
sti
cmp
test
inc
sarl
push
pop
idivl
xlat
shl
push
lea
std
outsb
pop
arpl
pusha
shll
js
sbbl
push
mov
xor
sub
or
rcl
data16
cmp
mov
aad
icebp
cld
pop
aam
test
fidivrl
jb
leave
xor
dec
cmpsl
add
jp
cmp
sub
fidivrl
in
pop
and
stc
test
frndint
jecxz
or
repnz
cmp
int3
or
pop
lods
aad
enter
ret
and
insl
push
icebp
aam
pop
mov
mov
cmc
cmp
int
mov
inc
repz
xchg
sub
ss
aam
and
sub
addr16
add
in
lcall
pop
inc
sub
inc
stos
arpl
push
inc
pop
fnstenv
mov
mov
fdivl
xchg
and
jge
mov
sbb
xor
dec
push
cmp
or
aad
pop
fnstcw
fcomps
cmp
jne
xor
cmp
add
pop
rcrb
inc
xor
imul
icebp
sub
dec
push
or
ret
sarl
fs
push
sbb
pop
push
loopne
sub
dec
int3
jae
int
dec
testl
jbe
insb
inc
add
dec
pop
mov
imul
lret
xor
sar
pushf
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
push
nop
nop
push
push
nop
call
push
nop
nop
nop
call
nop
sub
nop
nop
lea
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
push
nop
push
nop
nop
nop
nop
push
push
nop
nop
nop
call
nop
nop
nop
nop
add
mov
nop
mov
nop
nop
shr
nop
nop
nop
nop
nop
jmp
lods
nop
add
xor
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
dec
nop
je
nop
jmp
nop
nop
nop
nop
nop
pop
nop
nop
nop
pop
nop
nop
pop
nop
nop
nop
jmp
