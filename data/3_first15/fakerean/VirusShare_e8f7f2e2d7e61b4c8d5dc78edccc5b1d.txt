sbb
add
mov
loop
mov
out
cmp
inc
push
aas
dec
into
lock
mov
adcb
pushf
inc
cmp
mov
int
stc
iret
in
jge
sub
add
imul
fisubs
addb
lea
push
jp
lahf
xor
rorl
mov
push
push
pop
mov
aad
mov
daa
push
hlt
leave
cld
das
xor
adcl
jo
push
inc
sub
or
pop
enter
ds
push
std
inc
sbb
in
shl
stos
movsb
enter
decb
inc
and
inc
xchg
mov
call
movsb
inc
jne
pop
adc
jne
mov
or
fildl
adc
mov
mov
xchg
shlb
push
or
push
outsl
imul
call
push
clc
vpminub
mov
cs
test
cmpsb
push
js
mov
pop
test
add
xlat
sar
dec
or
aad
xor
cmp
adc
adc
daa
ret
out
js
and
out
mov
test
in
data16
and
push
xor
fcmovbe
loop
push
pop
cmp
mov
xchg
mov
test
enter
adc
cwtl
rcrb
jg
inc
pop
sbbl
inc
vpaddusb
lahf
ret
outsb
fldt
mov
lock
pop
mov
loopne
test
sbb
jo
lods
mov
inc
or
pop
lcall
movsb
cs
pop
xchg
loope
sub
xchg
jno
pop
imul
ror
mov
add
scas
cmc
sarl
inc
xchg
or
and
sbb
push
xchg
sbb
jns
mov
adc
and
sbb
inc
mov
push
aaa
shlb
cmp
insl
fdivr
or
dec
fwait
and
mov
fsubrp
pop
aam
pop
adc
std
jp
mov
or
roll
dec
inc
lret
cmpb
jmp
sbb
aam
repnz
jne
xchg
push
out
fiaddl
mov
inc
dec
adc
in
aas
xchg
iret
mov
int3
jne
cmp
xchg
mov
push
mov
jne
dec
mov
or
sub
jne
mov
out
xchg
and
scas
push
jb
cmc
in
inc
push
xor
inc
and
inc
stos
add
cmpsl
mov
mov
xor
and
xor
adc
fdivrp
mov
push
mov
jmp
addb
mov
scas
and
rcl
mov
out
jae
xlat
lret
xchg
cs
cmp
je
inc
pushf
lock
int
ja
jbe
ljmp
movsb
call
lds
mov
jb
sbb
push
cmpl
push
fistps
adc
fisubrl
jae
loope
int3
ja
xor
gs
addr16
hlt
jns
ret
adc
mov
cmpb
xor
fs
test
arpl
push
loope
push
xor
xorb
adc
lcall
push
pop
xchg
ss
or
jb
mov
dec
dec
dec
ljmp
out
call
loop
adc
sbb
je
fstp
int3
xchg
push
cmp
adc
popa
push
lret
push
les
in
pop
dec
out
inc
or
xor
adc
in
js
dec
mov
ja
out
data16
pop
jp
mov
mov
sub
rclb
mov
mov
push
mov
sbb
inc
or
add
pop
push
arpl
pop
scas
fisubrl
dec
adc
jnp
ds
aam
mov
rclb
add
lahf
mov
lcall
dec
push
inc
enter
mov
mov
pushf
aam
icebp
dec
push
mov
adc
dec
stos
inc
push
lods
cmp
ss
xor
inc
push
dec
lds
fdivs
or
popf
xchg
pop
xchg
mov
mov
push
faddp
push
std
or
ja
sti
ss
test
sbb
mov
inc
inc
arpl
popa
dec
inc
mov
add
test
adc
pop
inc
jb
lds
mov
dec
faddl
addr16
add
hlt
push
daa
xor
pushf
push
dec
cmp
nop
ljmp
inc
sub
push
icebp
sub
sbb
imul
pop
push
cmp
or
add
lods
testb
jecxz
aam
insb
inc
push
stos
mov
jp
sub
xlat
pop
add
mov
sub
cltd
xor
test
ds
mov
ljmp
jbe
mov
shl
mov
push
pop
xchg
inc
imulb
or
and
jb
mov
dec
enter
xchg
repnz
cmp
mov
inc
xchg
pop
out
ficompl
orb
out
adc
jne
or
daa
pop
jnp
shrb
cmpsb
int3
enter
jns
fwait
xchg
pusha
and
push
push
pop
mov
add
mov
and
sbb
insb
fimull
cmp
aam
pop
dec
in
dec
daa
sub
insb
daa
fstpl
push
cmp
dec
clc
rorb
cld
fidivs
cs
and
pop
mov
sbb
lods
pop
mov
out
rolb
sbbl
mov
mov
dec
iret
test
xchg
or
lret
sbb
mov
add
mov
jecxz
pushf
push
imul
sbb
das
mov
je
xchg
out
int
outsb
push
clc
cs
sbb
cmp
inc
xchg
shrl
insl
out
dec
mov
adc
dec
mov
pop
and
pop
add
rolb
je
pop
data16
rorb
cmc
push
sub
movaps
lret
test
inc
push
jne
int3
lods
or
inc
add
fcmovbe
clc
data16
inc
test
ds
mov
or
jp
mov
push
cld
sysenter
adcb
adc
out
xor
out
test
pop
mov
lahf
fwait
push
push
dec
lret
icebp
aas
outsb
iret
addr16
inc
xor
popa
cmp
dec
test
sub
sbb
out
push
pop
jl
lcall
mov
xorl
repz
shrb
ljmp
pop
inc
sbb
sub
add
std
push
movsb
pop
xor
mov
popf
xchg
add
aad
or
push
jns
js
cwtl
andl
pop
leave
jg
cli
xchg
repz
lea
jnp
lds
pushf
xor
in
mov
mov
lea
lods
xor
lds
gs
sahf
mov
sub
fidivrs
inc
push
hlt
scas
mov
imulb
insb
mov
or
gs
call
cwtl
push
xor
sub
and
jmp
xchg
sbb
pop
mov
fwait
adc
mov
push
dec
sbb
jle
clc
lods
adc
imul
push
shrb
test
scas
flds
push
movsl
cmpl
sbb
bound
adc
sub
scas
and
fisubrl
jo
out
jp
xor
out
movsb
sahf
rclb
mov
pop
mov
rol
jb
movsl
and
pop
push
in
add
int
add
pop
xor
pop
fst
mov
movsb
cld
adc
mov
enter
sub
add
mov
cmp
push
repnz
repz
imul
dec
mov
in
xlat
stos
or
xor
imul
mov
cmp
loope
xchg
rcll
in
lds
push
and
fistl
int3
jecxz
rcrl
cmp
jnp
cli
or
ljmp
nop
fisubrs
loopne
pop
jb
in
adc
dec
cs
mov
cld
and
ljmp
jno
sbb
cld
push
imul
sbb
rcrb
mov
cld
aaa
pop
push
and
rorl
clc
adc
popf
js
push
sbb
mov
lods
lods
pop
out
lods
dec
out
push
mov
and
pop
mov
in
jl
mov
scas
mov
in
int
lahf
push
lcall
push
ret
mov
mov
and
xor
call
mov
cmp
jnp
icebp
mov
popa
or
fmul
add
inc
dec
pop
test
outsb
lock
sub
mov
jmp
enter
mov
and
das
popa
push
add
dec
mov
int
xor
dec
pop
lret
or
adc
sub
sbb
jge
mov
ljmp
inc
mov
mov
out
add
test
dec
mov
iret
and
push
pop
loopne
stos
xchg
fwait
lea
push
nop
imul
add
fwait
test
and
mov
ds
mov
movntq
jbe
jle
scas
mov
jge
stos
sbb
rorl
aas
jns
sbb
pop
stos
or
xchg
test
xchg
mov
cmp
inc
aam
fidivl
add
push
jnp
rorl
xor
outsl
mov
lret
xchg
mov
xchg
dec
in
ljmp
in
sub
mov
sbb
mov
push
mov
dec
insl
addr16
cwtl
push
push
lahf
add
lock
inc
arpl
lcall
das
int3
mov
in
inc
jne
dec
jmp
mov
jnp
xchg
repz
jne
aam
repnz
push
push
push
jge
mov
sub
movl
or
imul
mov
sarb
idivb
cli
out
test
jae
fisttps
sbb
shrb
mov
sbb
repz
in
sbb
je
xlat
repnz
nop
xchg
mov
push
pop
lret
ja
fidivrs
push
in
jne
or
cmc
outsl
ficoml
test
test
lret
push
and
push
sbb
mov
or
mov
test
outsb
pop
insb
inc
inc
insl
mov
movsl
add
xchg
inc
or
push
push
xchg
adc
or
sbb
mov
cmpsl
cmpsl
movl
addr16
push
or
das
jae
fwait
xchg
dec
loope
out
mov
sub
mov
xchg
cmc
sbb
adc
sahf
sub
cmp
adc
stc
clc
jns
bound
mov
lret
sub
adc
icebp
jecxz
pushf
icebp
lods
xchg
push
into
mov
lret
pop
sarb
aad
cmp
cmp
jge
hlt
pushf
lock
push
icebp
adc
xor
lret
sti
stc
js
xor
adc
imul
test
inc
pop
pop
sub
faddp
adc
jae
pop
imul
scas
addb
es
test
push
jp
in
cmpsb
mov
gs
lods
sub
inc
lahf
sbb
xchg
adc
mov
insb
add
std
scas
pushf
dec
cmp
xchg
push
adc
lock
frstor
ds
testl
and
repz
into
ret
mov
or
in
and
test
mov
xchg
imul
push
cmp
lea
imul
inc
cmp
add
dec
inc
dec
dec
push
or
pop
loopne
in
cmp
cmpsl
mov
imul
arpl
loopne
mov
cmp
mov
es
pop
or
inc
mov
js
gs
inc
xor
aas
mov
pop
imull
and
fldenv
imul
and
or
cs
fwait
add
jge
rclb
jno
icebp
dec
stos
sbb
divl
rolb
loop
pop
les
cld
push
xchg
aaa
pushf
les
jp
pop
andl
nop
dec
out
xor
loop
cmp
xchg
shlb
lahf
cmp
div
cmp
shll
mov
mov
xlat
hlt
sti
ret
cmp
cmpb
jge
call
stos
add
out
jl
pop
cld
mov
cmpsl
mov
cmp
push
outsb
pushf
loop
mov
ret
or
jbe
sbb
repz
xchg
in
vprotw
bound
and
mov
lret
mov
lret
gs
mov
rol
inc
sub
in
jb
mov
dec
clc
or
jbe
mov
mov
push
cmp
cmpsl
rclb
loopne
cs
cs
ds
repnz
jb
push
sbb
sbb
sbb
push
or
mov
push
mov
popf
and
mov
mov
call
sub
xor
fdivs
inc
testb
mov
into
lds
cltd
repz
push
das
and
or
mov
es
into
xor
mov
in
adc
jl
stc
pop
lcall
xor
sbb
sbb
test
jg
mov
or
mov
and
out
mov
rorb
je
hlt
addr16
mov
dec
mov
sub
and
fstpt
stos
mov
xchg
lods
imul
push
mov
add
std
nop
into
imul
or
daa
push
sbb
sub
mov
dec
cld
lods
movsl
sbb
popa
mov
xor
insl
in
push
xchg
mov
out
xor
jp
pop
data16
arpl
lods
xlat
in
add
int
sub
mov
jns
xchg
push
push
divb
mov
cmc
pop
cmpl
jg
pop
test
push
dec
sbb
sbbb
mov
cmp
jmp
adc
lea
push
cli
and
add
sbb
jecxz
pop
cwtl
test
jmp
dec
dec
enter
inc
dec
adc
mov
sub
cmp
jno
ret
adcb
inc
and
and
clc
outsb
test
out
sub
je
mov
cmpl
test
xchg
fcmovnu
inc
cmpsl
aam
movb
sbb
stos
or
jle
aas
mov
push
loopne
cmp
scas
int3
push
movsl
lcall
pop
xor
std
fstp
inc
popa
data16
push
inc
rorl
or
mov
mov
sti
outsl
lahf
data16
or
adc
jae
mov
iret
subl
and
cmpsb
jmp
test
push
jl
dec
cmpsl
pop
ja
pop
shrb
mov
mov
mov
pop
cmp
push
pop
sub
push
lahf
popa
cmp
or
pop
out
push
fsubs
sti
sti
jne
mov
or
xchg
mov
xchg
add
into
lret
mov
xchg
cmp
imul
inc
and
or
lahf
in
mov
out
mov
or
movsb
mov
je
jno
dec
jo
push
adc
outsb
xor
test
push
sbb
fnstenv
cmpsl
push
addr16
pop
xor
popa
or
es
in
dec
pop
mov
faddl
gs
jo
cli
cmp
popa
adc
cmpsl
incb
mov
and
inc
nop
scas
imul
mull
nop
cmp
push
out
test
pop
into
mov
cmc
adc
fcomi
movsl
xor
mov
jl
and
out
fmuls
andb
lds
out
movsb
adc
or
pop
sbbb
test
loop
inc
daa
pop
pop
je
gs
adc
push
movsl
jbe
adc
fisubrs
scas
add
daa
sub
push
xchg
hlt
dec
pop
xchg
aaa
lcall
adc
and
dec
imul
mov
arpl
das
sbb
xorb
aas
mov
add
push
out
push
pusha
filds
outsl
mov
adc
xchg
mov
mulb
cli
xchg
sbb
inc
imul
push
loopne
mov
sub
pop
lods
mov
repnz
icebp
xchg
movsl
lea
sbb
in
out
sub
movsb
cmpb
xor
hlt
inc
in
dec
pop
hlt
mov
xchg
movsb
loope
sbb
out
push
rolb
inc
jae
pop
mov
repz
mov
add
push
sub
mov
sbbb
jge
push
or
in
adc
dec
dec
cmpsb
aaa
xchg
fcompl
jmp
lret
fcoms
icebp
xor
ss
jns
shlb
pop
pusha
mov
lcall
mov
xlat
mov
sti
repz
shrl
xor
ja
int3
adc
mov
mov
jl
push
in
orl
aam
ret
repz
xchg
push
stos
arpl
fnstsw
push
movsb
bound
daa
outsl
jl
daa
push
divb
sub
ss
loop
notb
repz
es
mov
and
and
out
ds
pop
psrld
pop
stc
push
insb
mov
in
sbb
push
sbb
es
std
fcompl
ret
gs
or
fidivrs
aaa
loope
data16
lret
xor
mov
leave
jno
jle
bound
sbb
ljmp
sub
nop
shlb
std
mov
lcall
dec
add
xchg
movsb
inc
jbe
jne
je
push
sbb
lea
sub
out
fdivs
xlat
cs
jno
jg
sti
xchg
push
cmp
adc
sbb
xchg
jmp
fs
std
and
sahf
movsl
pop
pop
shlb
xchg
adc
sbb
jne
xchg
dec
out
jge
push
negl
and
cmp
inc
jmp
pop
mov
lcall
mov
adc
push
mov
test
and
sbb
test
mov
and
or
ds
sbb
insb
pop
pop
adc
repnz
pop
out
nop
jge
pop
sbb
orb
push
sub
dec
ret
adc
ficomps
arpl
and
mov
push
test
fcoml
and
fisubs
fsubrl
mov
push
pop
cmp
cmpsb
add
add
xchg
in
and
dec
rclb
repz
dec
and
xor
mov
popf
xor
xchg
divl
mov
jns
fdivs
mov
jecxz
std
sub
cmc
pop
push
and
sbb
fdivs
jle
imul
icebp
or
push
ja
jno
or
fildll
xor
testb
push
xchg
mov
nop
gs
or
mov
sarl
pop
sub
add
sub
pop
add
pop
aam
cwtl
jbe
mov
sahf
hlt
mov
in
cmpsl
push
dec
pop
sbb
mov
leave
pop
mov
add
mov
push
enter
in
xchg
adc
sbb
cmp
add
jae
int3
mov
in
and
xchg
out
lods
or
aad
int3
neg
loop
aaa
mov
dec
mov
dec
or
inc
mov
hlt
cmp
repz
jns,pt
scas
jo
xor
or
loopne
xlat
mov
cmp
imul
push
fidivs
lods
leave
and
or
sbb
popl
ret
icebp
or
mov
mov
inc
lods
and
lcall
dec
xchg
push
push
mov
mov
cmp
test
or
mov
inc
jno
mov
dec
cmpl
and
aaa
mov
repz
stos
dec
outsb
push
pop
stos
cmp
mov
es
icebp
inc
mov
stos
call
inc
push
lock
push
push
cli
outsb
sub
or
and
mov
pushf
inc
orl
out
xchg
ljmp
psllq
push
cmpsl
xchg
lret
icebp
rcrb
int3
mov
xchg
pop
sub
inc
adc
add
add
mov
jl
pop
mov
mov
lods
je
fildl
inc
mov
or
mov
pop
outsl
jp
das
sub
cmp
push
jnp
push
adc
ror
jg
pop
jbe
lods
adc
jg
inc
cmp
fildll
repnz
jmp
daa
add
sbb
sub
xchg
add
enter
stos
dec
insb
inc
and
ret
imul
ret
mov
sbbl
cli
je
adc
fwait
xlat
xor
fisubrl
dec
pop
mov
std
sbb
xchg
jns
mov
add
insl
cmp
pop
sahf
in
inc
sbb
mov
ret
imul
mov
sbb
icebp
jmp
rcll
mov
sahf
jl
and
pop
xor
jmp
xor
pop
out
stos
ja
pop
mov
icebp
pop
add
mov
pop
push
out
push
hlt
pushf
mov
pusha
jle
lods
xchg
jge
js
jo
call
out
daa
mov
lock
rclb
aas
inc
cli
insl
sbb
mov
lea
aas
lcall
adc
data16
jl
stos
fs
jl
bsr
sub
out
repnz
mov
lock
xor
out
inc
xchg
aas
lret
cs
cltd
cmp
hlt
hlt
imul
inc
arpl
and
fcmovb
mov
sub
ss
adc
jne
cmp
push
popa
jle
popa
test
imul
push
das
shrb
mov
xor
fcoms
sbb
inc
mov
insb
inc
es
xor
xor
xor
fcomip
out
xor
dec
pop
ja
dec
daa
mov
cld
jo
pop
loope
add
jo
insb
add
pop
xor
adc
pop
sti
inc
push
stc
dec
bound
inc
outsl
or
in
enter
and
pop
inc
mov
xchg
cmp
cmp
pop
es
lret
adc
sbbb
rolb
adc
jp
lods
cld
test
je
mov
dec
es
jae
cmp
and
out
add
lock
lds
push
mov
jg
jg
mov
cmc
adc
jmp
fcoml
aam
sub
push
mov
mov
jmp
push
js
push
sbb
in
int3
xchg
into
cmp
stc
lods
fdiv
xor
mov
outsb
mov
popa
fsubs
and
lods
fisubl
mov
or
repz
js
xor
dec
mov
mov
push
mov
xchg
imul
mov
daa
adc
cmpsl
orl
pop
outsb
ds
pop
imul
dec
jmp
adc
xor
jmp
inc
ja
add
pop
mov
rcr
xor
xchg
xchg
loopne
jl
call
xor
ffreep
clc
fwait
sbb
dec
subb
inc
fimull
adc
gs
push
mov
popf
push
call
sub
push
sahf
test
adc
into
jb
pop
in
mov
addr16
orb
xor
sub
movl
mov
sub
lock
mov
sub
lods
lahf
xor
sbb
sbbl
mov
shr
adc
arpl
shl
iret
xor
sub
mov
push
push
dec
push
cmp
sub
scas
fstpl
sbb
aaa
das
dec
out
xchg
inc
xor
and
mov
push
dec
fs
out
mov
add
jns
cltd
inc
xor
fldenv
push
push
xor
cmp
fsubp
je
lods
mov
dec
outsb
mov
cmp
push
xchg
adc
jp
jae
test
mov
cmpsl
dec
in
cltd
cmp
out
rclb
xchg
mov
std
xor
fsubl
and
imul
repnz
push
xchg
pop
pop
mov
sbb
xor
loopne
jecxz
inc
lods
lods
or
and
xor
and
mov
out
sbb
lea
inc
dec
std
push
cmp
mov
cld
mov
xor
ret
xorb
inc
mov
or
sar
inc
mov
lcall
lret
push
mov
mov
aas
mov
hlt
mov
push
xorl
sub
icebp
xchg
inc
xor
idivb
sub
mov
push
add
xlat
cld
lcall
in
sub
out
mov
lret
sti
sbb
imul
push
xchg
sub
out
xchg
lods
icebp
aad
outsl
mov
push
xchg
push
lret
adc
mov
imul
inc
xchg
in
adc
xchg
mull
repnz
insl
dec
adc
arpl
scas
dec
inc
and
fcoms
loope
stos
mov
pop
mov
push
ss
int3
out
jns
outsb
cmp
mov
pop
in
popa
vpcmpgtw
mov
jb
adc
fcomps
in
pop
push
rcll
push
inc
and
push
fldenv
into
and
repz
pushf
lock
aas
fucom
fsts
lahf
jb
jl
dec
adc
pop
std
mov
lret
mov
adc
xchg
lcall
sbb
push
movsb
cmpsb
adc
xlat
outsb
mov
add
or
dec
xor
imul
gs
fisttpll
les
mov
rclb
and
mov
cmp
dec
pop
mov
pop
mov
andnps
mov
and
push
aad
dec
inc
xchg
jne
out
pop
push
cmp
test
jmp
scas
outsl
cmc
dec
es
scas
pop
loop
jg
adc
out
lret
cmp
lock
mov
inc
sbb
pusha
pop
out
and
pop
push
iret
push
adc
jns
fnstcw
cmp
dec
rcll
add
push
dec
aaa
adc
push
add
or
arpl
rorb
das
push
lea
xchg
sbb
and
add
sub
xchg
mov
cmpsl
xchg
insb
imul
or
xchg
inc
push
ja
call
aad
adc
jne
or
jno
dec
aaa
ds
fdivs
int
out
or
ljmp
sti
xchg
dec
xchg
test
pop
adc
mov
rclb
testl
mov
mov
mov
in
je
inc
xchg
in
sub
push
or
jo
decb
add
clc
sarl
xchg
push
adc
mov
xor
sub
cwtl
pop
or
fistps
into
out
ja
nop
jmp
lods
test
sbb
andb
inc
fistl
dec
pushf
push
rclb
xorb
fcoms
mov
pusha
shlb
sub
or
push
sbb
xchg
addr16
clc
test
inc
jne
xor
lock
ljmp
pop
ds
add
jb
loopne
xorb
clc
sub
scas
mov
stos
in
mov
or
or
test
std
arpl
loop
out
in
jnp
lret
aam
lods
push
mov
sarb
push
xchg
pop
pop
inc
imul
mov
sbb
or
sub
xchg
sbb
inc
mov
cmpb
fsubs
add
pop
pop
fcoml
add
xchg
pmuludq
ja
adc
in
testb
jb
mov
icebp
add
mov
xchg
fdivl
dec
inc
push
inc
int
dec
mov
fistl
mov
xor
or
fnstsw
lret
inc
fcmovnb
pop
jbe
lcall
mulb
pop
pop
sub
lret
or
cmc
mov
cmp
xorb
jg
pop
push
inc
gs
mov
movsb
fnstsw
test
cmp
mov
popf
jb
sbb
pop
adc
daa
sub
lods
outsl
dec
xor
clc
js
pop
add
adc
mov
xchg
cli
push
adc
add
jb
je
cli
sub
and
sbb
mov
dec
pop
lods
lock
cmp
outsl
icebp
ss
daa
cmp
xchg
sub
test
xor
sbb
stos
dec
mov
popf
cld
roll
lcall
mov
imul
jne
iret
xchg
cwtl
jns
fcomp
filds
pop
inc
dec
push
pushl
pop
pop
xor
xchg
mov
pop
gs
enter
testb
jmp
cmp
scas
and
lcall
sub
xor
cmc
inc
call
adc
cmp
leave
insl
mov
mov
or
sbb
cmp
outsb
cmp
lar
out
cwtl
mov
mov
cpuid
dec
mov
lods
sbb
insb
xlat
outsl
add
popl
xchg
xchg
rclb
bound
push
mov
out
push
pop
cmp
jbe
pop
out
sub
mov
inc
pusha
mov
xor
mov
data16
call
aad
insb
inc
mov
dec
repnz
fnsave
mov
fcmovne
sub
incb
or
daa
mov
rorb
cmp
fs
cwtl
stos
jnp
jbe
outsl
lret
mov
pop
icebp
mov
jno
dec
and
addb
aas
adc
les
sbb
stos
push
pop
call
into
mov
mov
pop
or
or
mov
pop
and
cwtl
test
mov
adc
idiv
int
scas
add
adc
ret
mov
js
pop
movsl
and
sub
addl
outsl
test
outsl
adc
imul
popa
xor
ss
ja
add
push
xchg
sbbl
lods
xchg
xchg
ss
mov
xor
sahf
adc
pop
mov
aas
mov
cmpsb
test
fidivl
clc
sbb
sbb
cmp
adc
xchg
lret
add
push
ja
outsb
daa
xchg
in
mov
push
cli
das
jg
addr16
cmp
and
subl
adc
cmpsl
jno
dec
pop
out
out
js
jmp
das
add
ss
pop
scas
push
mov
pop
push
inc
loopne
cld
xchg
adc
xor
jle
sbb
xor
xchg
scas
mov
sbb
jecxz
sbb
jo
mov
pop
movsl
ret
in
xor
adc
mov
jno
stc
jne
test
inc
in
mov
dec
int3
or
stc
shll
fdivl
imul
mov
jle
pop
fstpt
ds
pop
ljmp
sub
lret
lahf
mov
mov
fstpt
out
clc
push
or
jne
fsave
fldl
cmp
mov
sbb
daa
mov
push
xor
mov
rorb
sbbl
cmp
fimuls
mov
fs
mov
loop
lahf
push
dec
adc
imul
cwtl
pcmpeqw
enter
sar
cmpsb
and
or
push
xor
xchg
test
dec
push
andb
or
pushf
std
mov
aas
push
and
mov
int3
add
xor
adc
mov
enter
aad
jo
test
call
int3
lods
xchg
scas
scas
stos
mov
cmp
sbb
movsb
cmpsl
hlt
movsl
jmp
jns
xchg
add
mov
push
test
enter
bound
dec
and
icebp
insl
xor
add
popf
imul
pop
and
mov
testl
frstor
xor
in
test
sbb
and
xor
and
sub
inc
xchg
push
jp
sti
adc
out
and
inc
aas
movsl
adc
repz
mov
add
lods
sbbb
jno
xchg
call
xor
out
jae
inc
scas
repnz
aaa
fildll
scas
sahf
pop
pop
fnstenv
push
cvtpi2ps
stos
stos
mov
cmpsl
mov
ret
inc
jge
aaa
push
add
or
jl
out
daa
mov
andl
insl
sbb
std
test
hlt
popa
mov
dec
cmp
shrb
or
andl
in
and
push
lret
mov
jl
addr16
push
std
hlt
mov
or
cli
push
and
xor
cmp
push
pop
fcoms
in
dec
lret
push
sub
ficomps
into
pop
jne
dec
jmp
ljmp
stc
xchg
mov
inc
push
cs
sub
and
mov
popa
mov
inc
mov
data16
pop
aaa
lds
dec
cld
lds
mov
popa
ret
inc
sarb
fnstenv
in
inc
cmp
jno
push
pop
stc
lcall
mov
cwtl
leave
repz
rolb
and
fs
sbb
xchg
enter
enter
shll
sub
xchg
inc
sahf
nop
mov
jge
andb
mov
ret
rorb
lret
mov
insb
insl
bound
dec
in
sbb
aaa
loopne
clc
movsb
cwtl
test
xchg
pop
jno
mov
scas
jmp
dec
pushf
lahf
lock
icebp
mov
push
mov
mov
xorb
mov
sarl
mov
inc
in
enter
ja
test
cmpxchg
mov
cld
sbb
add
cmp
imul
decb
pop
js
pop
dec
dec
leave
mov
dec
int3
aaa
cmp
out
and
push
and
xchg
sarl
enter
jne
dec
push
ficoms
push
cmpsb
std
cmp
lret
std
sbb
push
push
imul
jle
shrb
mov
mov
xor
push
cmp
shlb
loope
mov
sbb
repnz
mov
negl
mov
jecxz
es
hlt
or
pop
icebp
or
push
dec
add
lahf
sbb
adc
movsl
mov
push
repnz
jnp
test
mov
loopne
sbb
jb
push
jne
xchg
mov
inc
inc
xchg
pop
mov
pop
ret
je
jecxz
cmpb
inc
lret
test
mov
stc
xchg
in
cmpsl
pop
in
les
movsl
jmp
dec
ja
fstps
jbe
in
sub
hlt
cmp
lret
sub
xor
push
lret
fs
setp
xor
push
adc
pop
xor
gs
js
cltd
jle
shl
dec
ud1
fwait
push
lfs
mov
mov
mov
test
sbbl
shlb
popa
lret
and
js
add
stos
scas
test
xchg
aam
cltd
push
and
js
jmp
push
push
dec
ljmp
xor
xor
add
cmp
outsb
push
mov
cmp
adc
jl
xchg
and
add
je
mov
push
sti
pop
lods
rcrl
and
lahf
or
mov
mov
in
std
rcrl
or
stos
adc
mov
arpl
pop
lds
mov
roll
inc
or
mov
lahf
push
fisttpl
xchg
into
out
out
shrl
gs
xchg
xchg
mov
cmc
mov
dec
imul
mov
fists
insl
int3
stos
in
cmpsb
mov
gs
jp
and
jge
push
xchg
scas
divb
mov
inc
xor
imulb
nop
loop
xchg
mov
sub
push
push
or
dec
dec
repz
rcr
rcll
or
leave
dec
mov
pop
cmp
dec
lcall
xchg
test
in
sbb
push
clc
jo
pop
xor
xor
subb
vmwrite
inc
mov
jae
test
push
in
mov
and
call
xlat
jbe
push
lods
push
push
dec
and
leave
out
mov
stos
and
repz
add
cs
push
xor
xlat
fistl
add
dec
mov
cmp
push
test
lcall
lods
das
fiadds
sbb
cmp
in
pop
in
out
mov
int
js
ret
sahf
scas
push
sub
iret
test
and
imul
cmc
xchg
jbe
cli
sti
sub
adc
mov
insl
jmp
repnz
rolb
fimull
lds
push
jnp
stos
dec
sbb
lock
xor
call
mov
adc
inc
fsubl
fs
mov
scas
inc
gs
imul
sti
clc
scas
mov
xor
movb
pop
ds
or
imul
add
xchg
xor
or
mov
push
cmp
push
pusha
dec
and
cmpsl
in
loopne
std
cld
pop
adc
xor
in
loop
xchg
lcall
push
pop
pop
jbe
scas
inc
lods
and
cltd
lods
dec
or
mov
les
xor
popa
push
ds
enter
sub
mov
push
sbb
jmp
sbb
movsb
jmp
imul
adcb
orl
repnz
inc
adc
cli
out
xchg
xor
push
movsl
mov
jo
pop
jmp
sti
inc
xchg
or
sbb
ret
scas
imul
inc
mov
int3
adc
xor
cmc
pop
outsb
pop
mov
push
dec
push
mov
pop
add
push
je
sbb
xchg
enter
push
fcoms
cmp
movsl
mov
mov
cmp
pop
popf
dec
nop
xor
sub
or
mov
daa
arpl
movsl
dec
mov
fsubrl
jo
scas
xor
jle,pt
adc
in
testb
adc
mov
sbb
adc
das
mov
stc
mov
push
dec
mov
jl
shll
jmp
aaa
and
call
mov
add
inc
xchg
in
add
hlt
and
mov
sarl
movsl
lds
outsb
inc
jbe
nop
sub
jnp
xor
ret
mov
addb
pop
fadds
mov
push
adc
test
pop
loop
je
das
pop
insl
loope
shll
stos
cmp
pop
ror
sub
adc
fstl
stc
test
repnz
arpl
mov
jnp
pop
mov
jns
fidivrl
in
or
fisubs
jb
inc
outsb
in
daa
xchg
ja
fnstsw
dec
repnz
aas
pop
dec
stc
or
mov
and
pop
inc
mov
jb
int3
push
push
sub
and
jne
aas
pop
mov
push
jmp
pop
mov
jl
test
dec
out
cmp
fwait
add
fiaddl
pushf
jl
inc
aad
je
popw
add
mov
movsl
or
daa
cmp
sub
inc
outsb
push
push
xor
dec
and
frstor
adc
xlat
lods
push
cmp
fs
xor
fldt
mov
jnp
iret
int
mov
cmc
jno
sbb
lods
mov
push
or
mov
ret
sti
push
popf
push
jge
pop
xchg
fldl
cmp
jmp
sbb
mov
push
dec
icebp
scas
xchg
cmp
shrb
fbld
fdivrl
jge
mov
insb
mov
lock
fisubrl
push
add
jne
pop
mov
push
xor
push
out
sub
mov
mov
test
leave
pop
cwtl
push
cmp
fsubr
and
popf
pop
push
scas
jg
call
insl
inc
lock
xchg
outsl
rcrb
sub
int
xor
and
or
cmp
push
xchg
aaa
add
mov
mov
mov
xchg
push
mov
add
mov
int
sub
lret
mov
std
ja
popf
jb
aas
rcll
and
fdivs
imul
and
ffree
mov
dec
ja
out
push
cs
xor
xor
inc
clc
in
ja
lock
fwait
adc
adc
adc
clc
sysret
stos
push
lods
out
sarl
test
jecxz
adc
jmp
pop
repnz
hlt
jmp
hlt
push
mov
pop
cmp
loopne
adc
negb
shlb
jbe
ljmp
push
mov
and
les
xchg
pop
ds
stc
sbb
ss
dec
cwtl
xchg
inc
mov
not
xchg
xor
sbb
and
testl
xor
out
xchg
imul
jne
and
fs
add
mov
in
add
dec
ret
mov
scas
add
test
cmp
pop
pop
int3
jecxz
clc
or
push
das
mov
mov
mov
iret
aaa
pop
and
sbb
cmp
inc
jp
lods
repnz
xchg
push
or
fnstsw
add
or
fnsave
jnp
sub
in
push
dec
daa
and
xor
xchg
fcomi
js
ds
jnp
and
roll
int3
sub
mov
test
and
dec
cs
test
push
out
sbb
pop
shrl
cmp
cmp
mov
punpcklwd
adc
lret
push
dec
fucom
scas
mov
mov
dec
stc
xchg
add
bound
sbb
aas
lcall
sub
dec
es
sbb
inc
add
pop
pop
mov
pop
lcall
add
jl
sbb
fisubrs
jb
in
orl
shll
loope
leave
out
and
mov
mov
aas
mov
imul
jne
loopne
inc
pop
lock
int3
lds
mov
ljmp
ss
or
out
dec
mov
fcoml
mov
mov
add
mov
inc
jae
xchg
xor
jle
mov
mov
push
inc
mov
addr16
movsb
mov
add
test
add
dec
push
pop
xor
fstpt
jecxz
and
cmp
sub
andl
cmp
or
push
xchg
repnz
lock
mov
mov
les
sbbl
gs
or
sahf
lcall
push
mov
lds
xorl
adc
adc
inc
fisubrl
mov
aad
mov
ja
movsl
scas
push
andl
sbb
jmp
cli
out
xor
addr16
test
mov
mov
insb
iret
clc
ficoms
sahf
into
push
shlb
push
push
clc
ss
lcall
fwait
testb
sbb
push
repnz
xchg
gs
lds
xor
lret
imul
pop
not
mov
fst
insb
mov
call
add
fld
mov
adc
or
sub
and
or
xor
push
inc
fwait
leave
les
fnstcw
aad
pushf
cmc
xchg
cmc
dec
lock
fadds
mov
sub
gs
xchg
cli
out
jp
or
dec
pop
mov
and
sub
call
bndldx
sub
cs
subb
xchg
inc
pop
mov
mov
jbe
dec
sbb
jb
mov
lea
jl
inc
testb
pop
repnz
in
jbe
out
mov
out
xor
cmp
jp
or
pop
loop
scas
insl
cmpsb
or
or
adc
ss
xchg
dec
nop
out
pop
add
pop
lret
fs
push
cli
or
dec
mov
lods
in
fs
add
push
jecxz
in
out
mov
fimull
jmp
adc
inc
push
pop
jle
dec
cmc
lds
imulb
call
mov
fwait
jne
repnz
push
adc
cs
mov
inc
sbb
stc
cmp
jge
ja
inc
repnz
cmpsl
and
push
fsubrs
cmp
hlt
int3
push
xchg
cld
pusha
pop
inc
loopne
sub
loop
cmpl
sub
adc
aaa
rorl
cmp
repz
repz
or
sub
sbb
and
insl
inc
popa
clc
loopne,pn
lods
xor
cmpsl
sbb
ss
dec
repz
add
push
pop
nop
adc
lret
xor
js
jmp
lret
xchg
cwtl
adc
ret
stos
insb
inc
int3
jle
mov
movsb
mov
inc
test
adc
xchg
add
mov
imul
add
movsb
pop
and
dec
add
mov
adc
cmp
mov
dec
lret
cmp
shr
aad
mov
rolb
inc
or
push
lods
dec
sbb
loopne
ret
das
arpl
lret
jge
cmp
mov
lock
loop
xorl
lock
pop
mov
imull
mov
sub
mov
in
jle
sub
stos
addl
dec
jmp
xchg
or
jp
ficoms
in
aas
push
push
push
push
out
adc
stos
test
push
sti
in
fisttpll
sahf
mov
push
lcall
jbe
das
dec
sbbb
push
jnp
jle
movsb
fs
fimuls
jecxz
lahf
stos
shrl
xor
pusha
aaa
lret
xchg
lods
adc
imul
rcll
sahf
cmp
dec
repz
adc
inc
lds
fwait
add
xchg
fiaddl
sarl
sbb
out
sbb
out
adc
pop
pop
daa
shll
test
inc
bound
cmp
imul
fidivrl
pop
fisttpl
push
xchg
inc
addr16
stos
push
push
testl
mov
roll
stos
dec
sub
testb
out
mov
sbbl
mov
cmp
mov
addb
pop
or
dec
dec
mov
pop
pop
outsb
jo
incl
leave
cmp
imull
sarl
push
fistps
cmc
mov
mov
aam
adcl
outsb
pop
outsl
outsl
and
xchg
cmpsl
lock
out
mov
cmc
test
ficomps
fdivs
out
lds
mov
in
pop
out
cld
jns
pop
cmp
add
adc
push
pop
bound
test
cmp
js
jne
adc
stos
imul
lcall
mov
test
push
jle
jae
or
lahf
frstor
test
les
pop
mov
cli
testl
cmp
pusha
or
loope
aas
push
fiadds
das
push
std
adc
inc
pop
ds
add
pop
test
mov
or
pop
sbb
cmp
rcrl
loopne
jecxz
loopne
add
add
jno
stos
add
ja
sti
popf
jnp
shrb
std
mov
rcrb
cmovl
sbb
js
mov
das
dec
lret
push
inc
xor
decb
mov
imulb
mov
pop
clc
outsl
test
jae
and
fdiv
dec
fwait
push
clc
fadds
xor
shlb
dec
enter
lods
dec
mov
gs
lret
push
and
filds
pop
stos
dec
popa
imulb
inc
gs
mov
xchg
dec
stos
insl
out
ja
shlb
push
pop
push
jns
push
cmp
int
pop
mov
sbb
out
xchg
fcom
ret
add
fs
enter
jmp
jg
xchg
adc
fsts
push
sbb
gs
int3
jle
inc
jp
loop
mov
jg
xor
pushl
icebp
push
adc
and
mov
push
pop
push
xor
outsb
inc
test
cmp
mov
ja
daa
xchg
xor
shrb
jg
aad
xchg
fimull
lock
or
lret
jae
int
pop
pusha
adc
in
xlat
inc
add
and
push
mov
into
xchg
dec
addl
roll
pop
nop
aad
xor
test
mov
xchg
sti
adc
mov
sar
lret
sbb
pop
xor
movsb
addr16
jnp
decb
repz
cmp
xchg
arpl
lds
loop
cltd
add
and
jne
rorl
adc
sbb
mov
mov
mov
mov
popa
mov
pushf
add
movsl
mov
sub
xor
jns
ja
pop
mov
cmp
addr16
jne
outsb
lret
pop
adc
pop
stos
ret
push
movsl
ljmp
mov
jecxz
fmull
gs
pushf
push
push
or
push
lock
pusha
jmp
add
cwtl
mov
out
aas
lcall
push
sbb
scas
push
jge
cmp
sub
fistl
jl
cmpsb
push
jecxz
add
adc
addr16
push
dec
lahf
test
adcb
jecxz
int
ret
pop
adc
lds
idiv
adc
push
add
or
fstps
xchg
mov
xor
outsb
in
jmp
lcall
mov
pop
push
dec
cld
xchg
push
imul
sbb
sarb
imul
mov
jbe
addl
inc
repnz
mov
popa
outsb
fiaddl
xchg
mov
sub
mov
mov
std
sbb
cmpsl
iret
neg
xchg
js
jmp
icebp
add
lock
or
xchg
gs
shrb
add
mov
pop
fcomip
sub
lahf
scas
divb
sbb
arpl
popa
pushf
and
enter
mov
loope
push
adc
stos
aaa
mov
mov
dec
sbb
pop
fbstp
xchg
mull
xchg
xor
nop
lret
or
pop
movb
ljmp
popl
xchg
aas
mov
push
sarl
mov
scas
ljmp
addb
mov
mov
fcmovnu
and
cli
inc
or
int3
jnp
pushf
lret
leave
ds
push
and
mov
test
or
inc
movsb
xor
xor
dec
jle
mov
or
insb
pop
mov
mov
or
push
in
int3
inc
pop
xlat
dec
xchg
inc
and
push
inc
fstps
lods
je
sbb
mov
in
push
insb
repnz
mov
mov
in
lock
or
ret
xchg
clc
and
add
pop
outsb
sbb
add
sub
sti
inc
enter
sbb
mov
mov
push
pop
pop
test
mov
push
shl
fnstsw
or
push
jle
mov
and
sub
pop
int
and
jg
repnz
sbb
xchg
cmp
and
sub
inc
ljmp
push
shl
loop
frstpm(287
stc
push
ds
mov
add
mov
jle
xor
adc
inc
lods
sbb
mov
sahf
ficompl
lods
loop
sahf
lods
dec
sbbb
fisttpl
fsts
lcall
add
jge
mov
cmp
movsl
cmc
outsl
adc
xor
bound
jns
pop
xchg
arpl
push
es
push
bnd
lcall
jg
or
mov
xchg
cltd
cli
or
pop
inc
fisttpll
leave
sub
sub
sbb
test
fxch
test
das
addb
add
xor
enter
pop
stos
adc
mov
subl
mov
jmp
lahf
jbe
xchg
xchg
xorl
or
add
jecxz
inc
pop
xor
mov
rcll
mov
bound
into
pop
add
jl
mov
out
cli
lods
sbb
cmpsb
rol
or
out
xlat
cltd
aad
mov
mov
push
jnp
insb
shlb
xor
jl
push
xor
sub
cwtl
xchg
incb
test
mov
jae
js
inc
mov
mov
ds
sbb
mov
pop
andl
inc
mov
scas
std
jecxz
push
push
sub
sarb
inc
inc
mov
stos
push
and
mov
inc
sub
pop
stc
loope
mov
iret
and
adc
jnp
push
sbb
int
insl
sti
mov
nop
push
adc
cwtl
movsb
pop
jns
shlb
mov
sahf
test
add
or
insb
sub
cmp
data16
sub
mov
ret
xchg
cmp
sub
xchg
pop
call
sbb
ret
pop
ds
mov
xlat
je
lock
push
mov
adc
out
cmp
xchg
decl
jmp
sbb
gs
push
outsb
push
cmpsb
xor
push
stos
scas
pop
xchg
sbb
aas
and
add
loopne
pushf
popf
push
aad
and
in
in
mov
adc
xchg
and
push
pop
mov
mov
cmp
mov
inc
movsb
add
insb
cwtl
jle
or
inc
mov
movsl
xchg
dec
and
xchg
in
into
push
rcl
in
aas
and
movsb
push
inc
pop
pop
fidivs
push
adc
stos
jecxz
mov
mov
decl
sbb
mov
adc
cwtl
mov
cwtl
push
popa
pop
ret
data16
xor
mov
movsl
lds
adc
mov
xchg
ss
dec
add
mov
les
popa
test
adc
fisttps
cs
jecxz
out
jecxz
addr16
mov
or
or
pop
cmp
outsl
mov
cmp
push
cld
xchg
stos
add
fdivrl
cltd
push
xor
cmc
cmp
jnp
xchg
lret
loope
stos
push
das
adc
out
mov
jo
int3
ficoml
imul
cwtl
int
xor
jo
mov
adcl
aam
jmp
push
lock
aam
ror
push
int3
cli
adc
adc
mov
add
dec
std
sbb
scas
mov
sub
mov
mov
sti
out
pop
sti
pop
test
push
mov
sub
xchg
push
or
movsb
add
fiadds
dec
sar
xchg
jge
ret
out
jmp
jbe
insl
xlat
dec
adc
add
test
add
cmpsl
pop
and
call
jne
insl
les
add
cmc
lods
sbb
js
lods
in
or
int
gs
mov
stos
int
mov
jecxz
xlat
sarl
pushf
pusha
cmp
sarb
inc
jp
icebp
mov
lret
rcl
xchg
or
xor
aad
movsl
mov
jge
push
pushf
imul
ljmp
lahf
dec
imul
adc
inc
fstpl
or
nop
lret
aam
pop
mov
les
inc
xorb
push
mov
shrb
sub
sbb
outsb
add
dec
scas
and
loopne
cmc
es
pop
test
repz
jge
sti
or
jnp
fists
in
mov
leave
repz
lret
dec
push
cmp
fidivs
sub
adc
addr16
inc
sbb
stos
mov
int
insb
xchg
js
sarb
outsl
aas
push
roll
xor
mov
in
dec
mov
imul
or
sub
cmp
inc
inc
sub
sub
jae
insb
mov
sub
push
aaa
adc
push
aas
xor
pop
rclb
ja
or
xor
out
xchg
mov
push
pop
sub
stos
dec
cmpsb
jae
push
js
mov
std
xor
aaa
pusha
cmp
leave
cwtl
cmp
in
push
sub
pop
dec
es
cmp
outsl
jns
call
pushl
popa
pop
cmp
and
in
sahf
ret
pusha
dec
push
imul
mov
hlt
lcall
dec
rol
int3
stos
add
dec
int
popa
lahf
in
inc
in
dec
hlt
in
sbb
stos
xor
or
lock
cmp
ljmp
lcall
test
stc
fsub
outsb
into
fstl
cmp
ret
mov
pop
cmp
mov
adc
lahf
adc
clc
or
sbb
lods
sub
test
and
imul
mov
jle
icebp
sbb
push
pop
xchg
int
cmp
lret
sbb
cmp
jge
shl
xor
mov
pop
pop
addr16
mov
lock
pop
xlat
jnp
xchg
inc
adc
les
fldt
dec
mul
arpl
adcb
outsb
stos
flds
imul
cmp
sahf
in
sub
shrl
fistl
push
mov
cmp
adc
xor
dec
bnd
cmp
sub
mov
cmc
je
adc
mov
mov
js
inc
lcall
cmp
jnp
pop
jge
pop
fwait
pushf
pusha
mov
dec
outsb
out
outsl
mov
cs
call
out
jg
add
and
in
hlt
dec
lock
push
mov
das
stos
scas
stos
les
mov
daa
push
pop
addb
and
aad
daa
into
mov
psubusb
scas
jno
mov
aas
in
cmp
test
jns
pop
mov
cmc
adc
push
or
pop
call
mov
or
xchg
fisubrs
popf
loop
cmp
jg
sahf
aas
icebp
cmp
lcall
sub
add
pop
cli
add
pusha
into
dec
adc
jg
sbb
test
sahf
sbb
jge
daa
leave
pop
icebp
dec
fists
cmp
jne
inc
jb
adc
add
inc
mov
in
aam
divl
fmull
and
icebp
js
fisttpll
sub
inc
fisubs
pop
jb
dec
loopne
aaa
sbbl
xor
ds
popa
push
insl
adcl
mov
jno
and
out
adc
test
cmp
or
jnp
andl
lahf
xchg
das
pop
fldcw
push
lret
jecxz
pop
xchg
jb
insb
adc
mov
mov
test
popa
stos
xchg
mov
mov
insl
repz
sti
mov
ss
mov
dec
mov
jge
xchg
cli
mov
xchg
jge
xchg
rorb
sub
sub
test
or
dec
xor
cltd
insb
outsb
jno
mov
fcoms
jecxz
les
add
xchg
and
and
jmp
pop
popf
pop
push
jge
add
pop
xchg
testb
mov
dec
dec
js
repz
xor
popf
pop
ds
jmp
xor
out
and
or
outsl
mov
mov
and
outsb
mov
pushf
cmp
and
xchg
jns
push
sbb
or
add
xchg
push
repnz
outsb
and
mov
lea
mov
mov
repz
imul
rol
mov
divb
cltd
test
out
push
add
mov
cs
je
loope
clc
cltd
or
inc
mov
mov
adc
adc
mov
stos
push
test
popf
out
aaa
enter
outsl
scas
sbb
inc
xchg
daa
cmp
pop
pop
push
cs
insb
stc
mov
fs
pop
and
jecxz
pushf
pushf
test
popf
cmc
rcr
sti
sub
cmp
imul
adc
notb
cmovge
cmp
aam
and
ret
jp
scas
les
and
mov
fsts
sub
les
mov
xor
fdivs
popa
fidivrl
jo
sub
daa
jb
cmpb
arpl
rclb
daa
and
or
inc
pusha
pushf
in
jg
sti
shrl
or
add
call
sub
xchg
push
imul
push
mov
and
dec
or
cmpsl
mov
push
adc
xchg
mov
push
cltd
das
int3
sub
sbb
lcall
cld
ret
adc
pop
mov
sub
pop
adc
push
outsl
and
dec
outsl
jne
cmp
adc
cs
sub
aaa
jp
addr16
xchg
push
sarl
xchg
jns
scas
mov
mov
mov
jg
jg
int
pop
jmp
adc
add
or
sbb
and
cwtl
push
or
pop
xor
je
ljmp
xlat
inc
jge
popa
push
testb
push
je
pop
shrb
bound
ds
inc
inc
lds
pop
shll
ss
inc
mov
mov
sub
cmpb
in
movsl
pop
ficoms
jnp
popf
mov
fs
outsb
mov
sbb
loope
test
aad
cmc
repnz
xchg
adc
pop
mov
enter
into
pusha
shll
dec
cmp
and
and
popf
sbb
mov
and
lock
jns
lock
adc
cmp
lods
aad
insl
pop
jmp
mov
lahf
push
scas
xchg
fs
sbb
mov
xor
adc
xchg
aad
aam
pushf
adc
out
aam
sbb
int3
cwtl
mov
pop
mov
daa
lds
mov
xchg
ljmp
sub
and
mov
hlt
rol
pop
pop
and
xor
pop
or
and
incb
lds
mov
or
inc
jnp
mov
pop
sar
adc
call
push
inc
gs
scas
push
jl
mov
roll
adc
in
aaa
loopne
sub
movsb
jae
outsb
aaa
paddsb
xor
mov
xchg
jae
pusha
or
jno
fsub
das
imul
fistps
jbe
mov
sbbl
push
pushf
pop
adc
or
sub
dec
adc
dec
xor
clc
in
xchg
push
pop
test
repnz
fstp
dec
insb
leave
fsts
pop
aaa
inc
cmp
stos
lock
fwait
mov
push
mov
repnz
fistl
mov
subb
cmpb
mov
dec
dec
mov
daa
jo
mov
imul
jno
push
add
mov
push
pop
rorl
mov
mov
xchg
pop
in
dec
mov
sub
add
adc
out
mov
or
aas
fisubs
mov
mov
enter
cmp
or
fmull
jmp
dec
pop
nop
in
xchg
adc
push
aaa
jmp
pop
fcomi
cmp
rcrb
xchg
adc
popa
lock
mov
ljmp
out
mov
sti
jns
insl
lods
rolb
inc
nop
nop
das
into
mov
sub
xchg
adc
fsub
jne
xchg
xchg
pop
pop
cmp
mov
in
rolb
xchg
or
fisttps
inc
sub
sbb
rorb
leave
fmuls
sbb
dec
inc
pop
shrl
sbb
push
inc
mov
std
inc
fwait
xor
repnz
out
scas
pop
xor
pop
cld
adc
jbe
iret
mov
in
push
jmp
cmp
fadds
das
out
mov
loope
mov
push
jo
jae
enter
pop
sbb
test
mov
js
pop
inc
cmp
jl
push
pusha
arpl
xchg
jb
adc
mov
fdiv
jb
mov
fmul
mov
imul
adc
sbb
ljmp
negl
ficompl
stc
or
je
lock
sti
jno
cmc
mov
pop
cmpsl
push
imulb
push
mov
mov
dec
lods
add
sub
out
mov
push
in
push
adc
jae
lret
xor
repnz
push
pushf
push
push
movsl
adcb
mov
das
and
jl
lock
nop
lods
inc
int3
loop
sbb
rorb
xchg
je,pt
ljmp
add
add
dec
cmpsl
jg
adc
dec
inc
push
adc
and
jge
sub
pop
insb
mov
cmp
notb
mov
fdiv
in
gs
pop
cmp
mov
push
push
mov
popa
std
mov
jg
test
cmp
ror
out
pop
jge
cmpsl
jl
push
pop
clc
test
mov
mov
adc
jl
mov
scas
mov
jns
add
jg
rcrl
pop
aaa
lods
pop
xchg
pop
or
rol
fsubs
lcall
lret
pop
dec
jge
fiadds
lea
lcall
jnp
cld
sub
fs
and
or
inc
adcl
mov
lcall
xor
mov
add
mov
imul
in
cltd
xor
fdivrs
lcall
push
adc
je
sarl
pop
adc
ret
sbb
fnstenv
das
or
adc
jbe
out
add
clc
or
cli
enter
adc
fnstcw
incb
adc
dec
sbb
mov
out
cmp
xor
xor
sub
stos
cmp
inc
sbb
shlb
xor
jno
clc
mov
fucom
int3
or
push
sbb
mov
add
xor
xchg
andb
orb
es
lods
xchg
aad
clc
outsl
dec
out
lret
sbb
xchg
insl
mov
mov
pop
in
adc
lods
jl
lea
cmp
mov
mov
or
dec
mov
iret
sub
push
sbb
sbb
mov
bound
data16
into
sahf
or
mov
xor
notl
sbb
in
sbb
flds
jns
lahf
xchg
xchg
push
mov
jp
xlat
test
ljmp
xor
movsl
insb
sub
fisttpll
loope
xchg
rcrl
lods
sub
call
les
push
enter
call
outsl
div
enter
mov
jg
dec
jo
xlat
es
push
dec
cmp
movsl
xor
insl
mov
std
add
adc
adc
add
aas
push
movsb
iret
dec
sbb
popa
aam
lock
mov
ret
push
sarb
inc
xor
lcall
jecxz
inc
dec
adc
inc
arpl
xchg
xor
adc
pop
out
mov
scas
add
hlt
sub
mov
or
jp
inc
dec
mov
inc
out
stc
stc
ror
lahf
out
and
mov
js
inc
or
fwait
clc
xchg
or
and
sar
sub
je
mov
insb
adc
pop
jno
mov
xchg
dec
push
or
inc
mov
pop
cmp
aam
test
out
pushl
mov
or
jge
push
and
push
dec
mov
add
xchg
test
imul
scas
sbb
adc
sar
pop
jns
into
lods
rcrb
push
clc
bound
push
iret
adc
std
imul
enter
int
fnstenv
xchg
out
pop
out
jge
add
xchg
rorl
mov
push
aad
icebp
sahf
mov
mov
adc
xchg
jne
lret
stc
call
add
xor
cmp
mov
xchg
add
outsb
int3
sub
jne
xchg
jo
scas
lret
xchg
sub
cmp
clc
xlat
mov
xchg
push
imul
sub
shll
pop
insb
into
in
push
or
and
xchg
insb
jns
nop
and
hlt
mov
gs
xor
mov
jmp
scas
daa
push
and
test
add
leave
cmp
and
pop
xchg
mov
and
push
jnp
jecxz
aam
sbb
add
outsb
mov
inc
aad
addr16
in
jo
dec
sub
repnz
cmpsb
adc
xor
cmp
aad
push
daa
imul
dec
adc
add
xor
sbb
cmp
ss
mov
lock
aas
ja
xchg
aaa
repz
jae
out
stos
mov
inc
mov
addl
roll
inc
mov
mov
imul
cmp
mov
jno
push
outsb
loop
out
cmp
mov
add
mov
inc
inc
mov
aaa
pop
xor
repnz
sbb
inc
ljmp
data16
push
rorb
fldt
and
jns
call
cmp
mov
adc
xchg
adc
loope
sbb
adcl
mov
sbb
ss
pop
or
push
jg
insb
sbb
mov
mov
fisubrs
loope
rcll
mov
mov
sbb
pop
cmp
jecxz
pusha
ja
push
arpl
xchg
xchg
sub
jmp
test
imul
push
aam
fsts
push
mov
fisttpll
ljmp
inc
mov
es
and
sbb
je
inc
xchg
mov
data16
and
aas
jecxz
mov
in
push
out
xchg
cmpb
add
dec
sbb
sub
xor
inc
cmc
adc
xchg
movsl
dec
daa
sub
das
sti
or
in
rcrl
mov
sub
jno
or
add
cmp
mov
rcr
pop
rcrb
jp
pop
adc
popa
jbe
fldenv
shll
ret
fmuls
nop
adc
mov
xor
jb
push
adcl
push
or
mov
std
jno
dec
dec
gs
ljmp
pop
cli
mov
repz
dec
mov
sub
jecxz
ds
or
inc
xchg
xchg
inc
js
pop
pop
daa
push
ljmp
push
dec
pusha
and
dec
mov
mov
and
cmpsb
cmp
enter
add
mov
or
add
jge
mov
jbe
mov
mov
adc
xchg
dec
push
mov
and
fstp
adc
pop
xor
xchg
adc
test
fstl
test
xchg
sub
aaa
sbb
mov
iret
xchg
mov
js
jg
mov
jbe
sbb
mov
adc
loop
stc
movsb
or
jg
jp
popf
aad
xor
fsubr
xchg
adc
xorb
ret
jmp
xor
jae
pop
fcomip
nop
add
idivb
mov
jno
sub
or
into
jbe
adc
mov
push
jbe
frstor
mov
jecxz
scas
xchg
test
fs
push
dec
mov
jnp
pop
mov
push
and
cmp
xchg
push
mov
push
push
jp
pushf
sahf
cmp
mov
mov
inc
cli
repz
adc
sbb
xchg
ljmp
sahf
push
clc
or
jb
sbb
add
jmp
out
jge
sti
scas
add
mov
mov
loope
dec
into
push
imul
or
mov
or
push
sti
pusha
dec
xchg
addl
rorl
xchg
dec
cmp
or
mov
jo
pop
add
stc
xor
fisttpll
clc
aas
push
mov
stos
imul
xchg
add
add
insl
dec
icebp
cld
xor
adc
inc
and
in
aad
loop
jge
jbe
xlat
jns
xchg
xor
lock
lret
sub
jnp
insl
jbe
dec
mov
bound
jmp
xlat
and
lcall
and
jb
cmc
and
fadd
jb
fwait
cmp
fcomps
push
call
mov
pop
lea
fsubr
mov
cmc
xchg
inc
mov
jle
emms
mov
sub
enter
jno
lea
hlt
outsb
sub
push
sbb
ja
xor
pop
pop
push
mov
stos
jle
sbb
cltd
dec
fldt
cmp
cmp
cmp
xchg
sub
mov
ds
add
scas
adc
cld
shrl
fistpl
insl
fldenv
mov
jge
call
dec
stc
mov
aam
imul
adc
aam
aaa
xchg
mov
fdivs
out
repnz
mov
stc
mov
sar
mov
mov
push
xchg
scas
lcall
xor
dec
neg
ffree
std
movsl
fs
repnz
sub
xchg
cmp
movl
inc
jo
xchg
push
dec
jne
push
ss
mov
stc
mov
data16
sub
cmp
push
xor
es
push
pop
sub
pusha
loop
sbb
jmp
decl
xor
mov
addr16
cmpsl
push
arpl
push
mov
pop
xor
push
xchg
and
scas
out
pop
add
out
adc
mov
sub
rolb
cmc
popa
in
ret
xor
mov
add
add
jmp
dec
leave
fcomp
imul
fwait
fs
movsb
jbe
popf
sahf
mov
lods
test
xchg
push
or
xor
stc
mov
gs
add
push
adc
and
sbbl
xchg
shlb
push
cmpsl
movsb
mov
es
testl
jnp
xchg
jecxz
pop
jb
jmp
jp
sbb
inc
cmc
frstor
shlb
mov
inc
and
or
adc
adc
sbb
fcmovu
stos
cmp
xchg
arpl
mov
mov
iret
into
mov
stc
jmp
movsb
dec
lret
rcrb
xlat
mov
mov
out
cmp
fistps
cmp
fisttpll
pop
jne
ret
pop
jo
jno
jbe
sub
iret
nop
loop
cmp
mov
ret
push
jbe
inc
mov
fstpt
mov
idiv
mov
cmp
xchg
jecxz
fsubs
call
in
sub
lods
arpl
sub
ficoml
sbb
data16
daa
test
sub
and
fcmove
cmp
fstpt
test
cmc
std
leave
insb
out
lahf
pop
push
arpl
dec
insb
add
mov
scas
mov
dec
ds
cmp
jg
inc
push
xlat
jb
inc
and
sbb
sub
push
adc
sti
sbb
or
lods
cltd
pop
add
dec
push
dec
nop
push
push
jmp
bt
add
inc
lret
push
xor
test
leave
inc
mov
add
sub
mov
je
out
into
mov
fnstcw
fbstp
jle
int3
and
mov
imul
ljmp
faddl
push
cld
xchg
icebp
fs
and
pop
mov
push
and
push
or
test
mov
and
stos
cmp
icebp
imul
mov
dec
ror
sbb
jbe
enter
shll
sbb
mov
and
dec
jnp
loop
lret
call
inc
push
int3
push
enter
dec
out
mov
sti
sub
lret
ret
xchg
test
movaps
pusha
sub
and
pusha
enter
and
cmovae
ljmp
inc
lahf
inc
std
arpl
inc
or
mov
xchg
jne
dec
mov
das
adc
shll
or
pop
ficompl
add
enter
aad
fwait
mov
ret
scas
or
xlat
add
and
or
ljmp
or
call
xor
mov
mov
aaa
test
xchg
and
movsb
or
movl
call
jecxz
popa
fnstcw
je
popf
mov
adc
pop
leave
jns
pop
enter
cmp
push
mov
arpl
stc
push
fists
jnp
outsb
sbb
add
cltd
mov
adc
add
sub
mov
inc
push
loopne
sub
aam
pop
push
push
xlat
into
pop
or
inc
jnp
hlt
adc
lcall
pop
and
push
sub
push
mov
sbb
jae
int3
fbstp
xchg
xchg
imul
fcmovnbe
enter
lcall
jb
jmp
mov
mov
orl
ss
les
mov
push
stos
cmpsl
sbb
jmp
nop
lret
pusha
popf
inc
dec
sbb
mov
jmp
add
sub
xlat
push
aam
sbb
mov
push
hlt
pop
clc
mov
pop
or
cmp
mov
jmp
int
fimull
aas
fiadds
rolb
mov
sub
les
mov
cmp
mov
xchg
mov
sbb
mov
hlt
jns
out
jb
hlt
jge
mov
cmp
mov
pop
iret
stc
sarb
pop
sbb
cmp
mov
out
sub
pop
test
cld
xchg
scas
hlt
jae
notl
xor
nop
or
out
mov
sahf
lahf
jle
or
mov
fs
out
fiaddl
subb
clc
or
and
xor
das
sbb
hlt
mov
cmpb
pop
sbb
repnz
mov
dec
sbb
push
outsb
aaa
ret
mov
push
insb
inc
dec
outsl
leave
pop
xchg
out
nop
push
and
cmp
xchg
mov
rorb
xor
lods
xor
in
dec
jno
push
mov
out
mov
ljmp
and
fimull
cmp
mov
movsb
push
sbb
adc
or
test
loopne
stos
jg
and
fs
add
jp
nopl
mov
push
js
jge
insb
jle
sub
iret
scas
push
xor
out
popa
dec
lahf
lcall
mov
inc
mov
xor
daa
fnstsw
jp
scas
xor
or
outsl
xor
leave
xor
and
out
sub
fistl
stc
cmpsl
jno
push
jo
fistps
gs
mov
stos
es
inc
test
mov
sbbb
rcrl
push
popf
cmpsb
adc
fildll
in
adc
sub
cmp
iret
das
nop
es
insw
cmp
jns
xchg
adc
push
outsl
arpl
dec
gs
mov
lock
fs
test
icebp
xor
adc
mov
pop
sub
sub
out
inc
jne
and
or
jo
xor
dec
add
push
imul
sbb
rcrl
jbe
jp
xor
mov
xchg
sbb
stc
or
ja
mov
xor
pop
into
jecxz
es
dec
daa
gs
inc
testb
mov
cmp
std
pop
repz
lret
cmp
dec
shlb
mov
add
sarl
jg,pt
mov
in
pop
daa
jns
push
xchg
in
jae
xor
push
and
xor
add
repz
pop
loop
sub
dec
sub
adc
cmp
jl
sbb
fnstcw
test
sar
mov
xchg
rorl
or
xor
cmovle
sub
out
jnp
fistpl
dec
adc
pop
jmp
roll
push
lock
shrl
pop
and
push
jne
call
lret
pop
cmp
cmpsb
mov
push
in
push
aam
mov
nop
push
mov
or
jo
loope
outsb
add
add
push
jg
idivb
enter
fwait
sbb
ss
xor
daa
and
push
data16
mov
stc
cmp
data16
xchg
jbe
lahf
je
jmp
pop
and
jnp
fists
repnz
cmp
lods
mov
jb
out
push
mov
or
pop
add
inc
xchg
push
xchg
shll
rcll
mov
hlt
mov
hlt
adc
lcall
je,pn
sub
mov
subl
xchg
xchg
mov
dec
jl
add
shrb
icebp
test
outsl
bswap
sub
and
pop
sbb
inc
xchg
pop
mov
and
pop
jnp
sbb
mov
stos
fsubs
aaa
cli
inc
xlat
or
xor
loop
mov
xor
cmp
mov
push
jge
inc
or
orb
xchg
test
popa
fs
jmp
sub
dec
adc
xor
pop
leave
jns
imul
in
adc
dec
xchg
sbb
mov
pop
mov
pop
int
cs
push
and
dec
xor
into
outsb
xor
add
dec
mov
mov
in
movsl
movsb
call
push
add
popf
pop
cmp
sbb
cmp
pop
lods
loop
jae
mov
jbe
fs
sub
adc
call
cmp
dec
jp
push
cmpsb
stos
sbb
push
in
mov
sub
outsb
push
loopne
ss
int
fimuls
pop
mov
pop
pop
pop
fimuls
push
cli
pop
push
mov
dec
fnstsw
inc
scas
sub
mov
adc
enter
push
mov
push
js
or
mov
jne
jne
push
mov
outsb
mov
jo
std
mov
testl
push
and
sarl
iret
out
xchg
xor
inc
sbb
mov
xorl
jge
loop
or
mov
dec
lahf
add
cmp
xorl
cmp
pop
mov
jbe
test
pusha
adc
lds
pop
jo
loope
add
adc
std
mov
mov
dec
lcall
mov
sbb
xchg
mov
dec
xchg
test
lock
mov
sbb
cmp
daa
sbb
test
mov
mov
adc
pushf
cmp
xchg
in
xor
mov
adc
call
lcall
pop
cmp
jb
pop
fwait
cmc
or
or
dec
cmp
or
pusha
repz
sahf
popf
inc
cmp
push
push
stos
fwait
adc
cmpsb
loope
aam
sbb
ljmp
mov
ss
push
cmp
stos
cmpsb
int
addr16
mov
ss
rcll
and
push
mov
inc
cwtl
cltd
enter
xchg
mov
and
jle
cld
test
scas
out
jns
sbb
in
movsl
inc
xchg
xchg
test
mov
test
xchg
sbb
mov
mov
jne
mov
idivb
mov
rcrb
sti
aaa
dec
inc
lahf
std
xchg
in
mov
ljmp
test
jl
imul
push
or
jp
fidivs
std
cmp
loope
and
pop
and
gs
mov
sbb
movb
loope
out
pop
ss
popf
or
dec
loope
and
lods
lods
and
fmull
xor
cmpl
fs
sbb
add
mov
icebp
inc
popf
cmc
orw
fwait
adcl
bound
adc
add
add
repz
xchg
fcom
cmp
pop
push
jg
dec
dec
pop
es
mov
scas
fists
les
or
mov
addr16
push
jl
out
loope
push
sbb
adc
sub
or
mov
pop
mov
add
mov
lea
or
push
inc
xor
lret
or
jg
jge
mov
hlt
pop
fcoms
xor
pop
pop
mov
jno
pop
das
loope
es
imul
dec
int3
mov
xchg
lcall
test
icebp
jae
sahf
mov
das
dec
cwtl
leave
push
loopne
aam
xchg
lret
imul
adc
pop
es
lret
scas
insb
int3
int3
inc
jmp
and
aam
push
sti
es
push
ret
sbb
cmpsl
cmp
imul
mov
arpl
or
imul
adc
cmpsb
mov
xor
mov
sbb
xchg
pop
out
insb
pop
mov
or
or
lds
and
or
scas
inc
xor
js
sbb
push
sub
push
jmp
xor
cmp
pop
jle
sbb
std
xor
lock
pop
jo
iret
orb
lock
sarb
mov
imul
mov
xorb
cmp
xor
jl
in
mov
cmpsl
lock
sub
sub
les
and
negb
lret
pop
inc
mov
aad
lods
outsl
xor
shlb
sbb
mov
jecxz
or
adc
cmpsl
mov
test
movsb
sahf
mov
sub
mov
xchg
mov
mov
cmp
daa
aas
insb
dec
xor
and
jp
dec
jmp
leave
jb
mov
add
andb
and
push
sub
mov
negb
fadds
cmp
add
jnp
mov
sbb
or
xchg
jp
insl
repz
jb
pop
out
sbb
mov
pushf
xchg
mov
aad
inc
gs
xchg
leave
mov
es
sbb
sub
aaa
lahf
ret
fstps
and
int
xlat
das
ja
movsl
adc
ss
pop
ficoml
jl
push
add
pusha
cmp
incb
je
sbb
dec
daa
mov
adc
sarb
xor
jno
xor
add
mov
or
lds
int3
test
xor
jp
xor
loop
push
jge
mov
pushf
xor
jp
mov
jo
andl
popa
xchg
ret
xchg
jbe
fsts
out
cmp
outsb
xchg
jge
mov
fbstp
xor
push
arpl
daa
adc
fsqrt
sbb
sti
xor
mov
int3
sahf
mull
pop
jbe
cmp
es
gs
xlat
out
lea
or
stc
push
adc
pop
add
cmpsb
fimull
cmp
xchg
outsl
sahf
mov
jmp
movsb
cmp
inc
cs
push
mov
or
push
sarb
dec
sbb
inc
das
mov
sub
sub
sarb
popa
rcrb
hlt
add
xchg
mov
cwtl
fdivl
xor
les
js
outsl
addr16
sub
es
adc
adc
call
sbb
rorl
out
shr
mov
xchg
or
cmp
out
xor
cld
adc
sub
aaa
add
cltd
mov
sub
xor
bound
mov
sub
and
jne
and
add
faddl
xor
pop
pop
add
cmpsl
iret
loop
cs
lock
dec
pushf
fnstsw
gs
pop
insl
dec
push
add
inc
xorl
dec
dec
inc
mov
add
idiv
pop
mov
add
adc
jge
cmp
mov
cld
leave
mov
lds
jne
xchg
jg
push
sbb
pop
out
or
leave
stc
shrl
int
cld
int3
mov
xchg
clc
jae
adc
dec
fwait
push
lret
xchg
mov
mull
in
mov
adc
clc
fs
pop
mov
mov
rorl
loop
inc
pushf
stos
es
cld
imul
and
inc
mov
lahf
scas
pop
mov
inc
popf
scas
sbb
insb
addr16
sub
jecxz
ds
nop
dec
sbb
arpl
fldenv
loop
cmp
movsb
fs
mov
push
xchg
aas
lret
cld
stos
enter
pushf
lret
std
mov
inc
and
sbb
sub
out
jp
je
lods
scas
pop
inc
stc
dec
sbb
clc
sbb
rclb
aam
or
divl
cwtl
movsb
dec
xor
sbb
mov
icebp
ds
negb
aaa
repz
decl
jne
add
aaa
pusha
pop
mov
popf
cld
les
and
xchg
call
xchg
dec
pop
cmp
add
fcompl
adc
out
xchg
test
lcall
jge
or
xchg
mov
fsubs
call
std
lret
jne
call
stos
test
add
ss
popa
divb
rcrb
push
jl
xor
cld
adc
outsb
jns
mov
lcall
pop
imul
mov
sbb
pop
int
jp
xchg
lock
mov
lods
cmpsl
sub
cltd
sub
es
fistpl
jge
addr16
sub
xchg
cmpb
pop
xor
stc
inc
cmp
mov
mov
xchg
aaa
lock
aas
jmp
nop
mov
pop
test
cmpsl
and
fwait
sbbl
add
in
imul
dec
pop
enter
mov
int3
dec
xchg
mov
in
mull
dec
inc
fucomip
mov
push
and
lahf
and
ficomps
sub
rcl
push
andl
jle
jae
inc
enter
call
outsb
jle
or
lcall
je
mov
push
xor
call
loopne
mov
and
fdivrs
rol
push
push
ja
push
fucomp
ds
sbb
das
dec
push
pop
into
cmp
mov
jle
loope
jp
pop
nop
fists
imul
push
xchg
jg
inc
adc
out
insl
cmp
fcomp
push
mov
add
cmpsb
lea
es
mov
sub
fwait
jae
xor
mov
stos
sub
mov
insl
xor
loopne
push
pop
dec
jg
orb
imul
pop
iret
dec
es
cmp
xor
xor
xor
movsb
inc
cmpsb
fcoml
pushf
dec
shld
das
lock
mov
in
js
pop
aas
arpl
push
stos
les
xchg
push
pop
xchg
mov
xchg
shr
fnstenv
and
sbb
cmp
std
lods
jp
testb
jno
icebp
mov
xor
pop
pop
jmp
sti
jecxz
inc
mov
ret
cmp
mov
outsl
xor
mov
std
insb
jne
xchg
add
mov
mov
cmp
sub
push
pop
xor
ficomps
notb
or
adc
pop
pushf
push
xor
inc
int
int3
aam
inc
lods
xlat
mov
or
mov
and
pop
aas
js
pop
adc
ret
shr
pop
in
cld
push
mov
dec
ret
lock
stos
movsl
leave
sbb
mov
jne
and
pop
es
mov
je
test
xlat
shrb
inc
into
pop
and
push
add
cmp
int3
cmp
sub
add
adc
push
jp
pop
stos
rcll
mov
sti
insl
in
add
dec
cld
dec
or
sub
and
mov
cwtl
insl
push
in
xor
stos
popa
repnz
sbb
add
inc
inc
pop
jb
adc
bound
sbb
lcall
daa
pop
cmc
xchg
push
mov
lock
xchg
roll
in
test
sub
fs
xchg
ljmp
scas
in
dec
or
adc
mov
addr16
pop
mov
push
jne
call
jle
in
xchg
jae
divl
mov
sub
inc
push
cmpsl
xchg
push
out
cmpsl
mov
cmp
cmc
lret
fnstcw
cmp
div
scas
test
imul
orb
fildll
fdivrl
pop
add
lcall
sub
sbb
sbb
js
daa
cs
mov
fisubs
jbe
push
out
ret
mov
orb
lahf
xchg
pop
dec
test
lret
push
imul
sbbb
jecxz
imul
push
mov
ljmp
dec
leave
lret
cmp
xchg
and
mov
dec
stos
or
call
sbb
cmpsb
rclb
out
daa
or
jo
test
dec
push
sbb
xchg
sbb
push
dec
cmp
or
fwait
std
jo
shlb
jo
inc
sub
inc
jno
out
dec
loopne
aam
jg
xor
rclb
lods
mov
iret
or
mov
mov
add
push
mov
lods
fidivl
add
push
ss
xchg
cmovs
gs
jecxz,pn
xor
repz
mov
xchg
adcb
mov
shll
mov
adc
insl
or
mov
mov
mov
jecxz
test
and
pop
sbb
fmul
lods
fs
xchg
icebp
js
outsb
jne
inc
fbld
adc
xor
in
gs
xor
test
test
mov
mov
adc
or
pop
arpl
filds
mov
xor
mov
cmp
inc
test
lret
aas
popf
and
roll
test
mov
stos
pop
jo
bound
mov
aam
enter
push
in
stc
pop
into
or
into
dec
sbb
fdivl
mov
xor
call
std
movsl
and
test
or
cltd
daa
fcomps
hlt
dec
and
sbb
xchg
jbe
movsl
and
cmp
add
rclb
sub
sbb
xchg
lea
inc
and
adc
cmp
orl
jl
cmp
xor
div
enter
xorl
leave
inc
stos
popa
jns
ds
pusha
mov
lock
ss
out
adc
sub
push
push
add
into
rep
jno
jns
mov
push
push
and
mov
cltd
and
cmp
es
orl
aam
scas
push
sar
or
adc
movsb
push
jl
inc
cmpsl
mov
shrb
popf
shl
jo
jp
js
gs
jg
mov
push
filds
jl
jmp
mov
or
adc
iret
es
mov
pop
arpl
out
ds
lahf
imul
push
and
aaa
notb
dec
dec
loope
loope
inc
add
loopne
mov
dec
rclb
mov
fisubl
stos
xchg
push
cmpsl
cmpsl
aad
add
ret
mov
out
lods
inc
icebp
and
xchg
jg
in
cmp
in
xchg
inc
pop
push
add
xchg
and
push
cli
insb
movsl
pop
xor
jno
sbb
sbb
pop
mov
dec
rcr
fsubp
push
inc
inc
cmp
push
mov
dec
dec
push
movsb
sarl
loopne
mov
testl
movsl
xchg
dec
sub
rorl
aaa
and
cmp
lods
call
add
cltd
and
std
or
mov
aad
xor
jmp
fldenv
pop
jg
fstps
sub
sub
dec
or
sub
stos
mov
call
pop
lahf
movsb
sbb
lock
add
mov
cmp
xor
mov
or
jge
jnp
adc
movsl
xor
adc
and
xchg
shll
mov
inc
ret
sbb
jge
das
fcoms
out
xchg
dec
push
cmp
ljmp
pavgb
mov
cmp
mov
cmp
mov
dec
xchg
lcall
sub
sahf
jns
push
xor
ds
repnz
cmp
sbb
idivb
fidivl
stos
inc
xor
sub
xor
aaa
int3
adcb
subb
dec
test
imul
loopne
xor
sbb
inc
xor
ljmp
inc
cs
testb
outsb
xlat
push
cld
xor
popa
dec
mov
loop
into
addl
mov
mov
outsb
push
in
xor
stos
and
cwtl
insb
and
cmp
stos
xor
enter
hlt
jle
xor
push
lret
xchg
je
fdivr
arpl
push
mov
cltd
outsl
and
pop
cmp
dec
test
mov
xor
xchg
push
dec
lcall
pop
data16
mov
fcmovbe
cltd
cmp
jnp
xchg
inc
ror
or
movsb
das
cltd
orl
adc
pop
rorl
outsb
mov
cmpsb
fidivrl
int3
pop
sti
lcall
cltd
loop
cmp
pusha
dec
mov
xchg
nop
ss
loop
cmp
mov
push
lret
fwait
mov
xlat
mov
int
mov
dec
cmpsb
jnp
cmc
mov
cwtl
into
sbb
fst
mov
jg
jp
fadds
out
ficoml
sbb
cwtl
add
xchg
repz
jle
adc
iret
pop
sub
daa
sar
aad
negb
sti
shll
xchg
stos
mov
pop
cmc
movsb
jo
inc
xchg
jp
mov
rcrb
mov
sub
dec
dec
loop
idivb
jecxz
into
roll
stc
lcall
dec
add
lcall
push
dec
inc
push
mov
stos
and
or
mov
je
mov
popf
insl
push
push
xor
push
sbb
aas
jo
cltd
lods
push
and
sbb
sar
idivb
flds
ja
jbe
push
call
inc
sub
mov
jae
cmp
test
push
mov
mov
mov
bound
mov
rcrl
inc
push
mov
pop
mov
and
sub
jae
ds
push
jl
cs
aad
js
pop
nop
out
stos
xor
scas
data16
jle
adc
and
cwtl
inc
dec
dec
sbb
cmp
jb
je
adc
ljmp
out
xlat
pop
push
add
negl
lock
jns
mov
subl
sub
xor
insl
shll
xor
sbb
rcr
movsl
adc
iret
xchg
sub
xchg
cmpps
sub
repz
mov
jnp
daa
jl
pop
adc
ficompl
jmp
push
outsb
sbb
add
sti
aaa
insl
inc
mov
or
cwtl
in
jbe
cld
ret
sahf
pop
gs
iret
xor
rcrl
xor
cltd
jl
dec
mov
jns
adc
imull
or
or
jg
and
mov
fsts
or
mov
add
aaa
sub
mov
xor
push
andl
cli
cmpl
push
clc
sbb
xor
adc
popf
jl
adcb
bnd
mov
pop
les
jo
cmpsb
mov
iret
sbb
pop
out
dec
cmp
add
mov
push
fstps
sub
out
push
inc
cmpsb
cli
adc
fisttpll
dec
or
mov
dec
and
mov
dec
mov
cmp
adc
jb
cwtl
lret
bnd
nop
aas
xor
sub
xor
fwait
sub
mov
lcall
inc
mov
imul
in
push
xchg
jmp
lds
bound
dec
xlat
mov
cltd
outsl
jns
mov
xor
sbb
scas
push
mov
cltd
ds
ljmpw
adc
cld
ret
and
push
cli
pop
imul
adc
pop
push
test
aas
repnz
cmpsl
xor
mov
ljmp
pusha
adc
out
and
pop
jmp
pop
mov
in
jb
pusha
aad
pop
movsl
mov
jnp
or
mov
in
in
filds
add
mov
or
out
sub
adc
ret
aad
enter
and
push
iret
fwait
sub
data16
cwtl
mov
xchg
cmp
adc
push
hlt
lds
sub
pusha
leave
aam
out
dec
std
or
push
out
ret
cmpsb
pop
pop
test
dec
xchg
aaa
sub
mov
xchg
sbb
rol
jecxz
sbb
mov
add
nop
and
xor
gs
sbb
fidivs
mov
imul
std
mov
test
xlat
aam
fiaddl
shl
ljmp
hlt
mov
sub
lea
or
cmc
mov
push
inc
pop
idivb
xchg
loopne
movsl
les
hlt
cmc
cs
sbb
lret
add
pop
arpl
sarb
mov
xchg
inc
mov
fstpt
push
push
cmp
in
sbb
push
mov
xchg
push
dec
mov
fisubl
push
xor
sub
dec
or
lods
data16
scas
in
stc
cs
mull
adc
push
pushf
sti
data16
or
mov
hlt
js
ljmp
andl
pop
mov
push
or
inc
xchg
sbb
pushf
mov
jb
xor
outsl
dec
std
ljmp
jge
cmpsl
pusha
inc
loop
imul
leave
andb
shl
das
fwait
mov
adc
testl
insb
stc
dec
xchg
push
clc
mov
pop
out
mov
mov
stos
test
mov
data16
push
scas
mov
test
cmp
rcl
arpl
in
mov
mov
mov
insl
add
pop
jo
aas
xchg
pop
pop
outsb
mov
leave
xchg
out
pop
sbb
or
sahf
inc
into
lret
dec
sub
or
les
inc
push
jae
mov
and
leave
mov
xlat
fstpl
stc
aaa
iret
incb
pop
fiadds
stos
aas
insb
mov
dec
movsl
pop
xchg
dec
xor
xor
jno
push
movsb
je
dec
out
mov
imul
sbb
cmp
inc
movsb
jmp
and
lahf
ret
nop
popf
in
inc
sarl
or
decb
imul
sbbb
jo
aam
ret
jle
lock
inc
popf
pop
adc
cmp
loopne
and
lea
inc
das
rcrb
in
pushf
mov
gs
mov
aad
mov
andl
lret
mov
mov
jg
mov
imul
dec
mov
cmp
pop
mov
lret
jbe
sbb
aam
lret
mov
mov
add
dec
xor
xor
inc
test
inc
stos
test
pop
test
es
sbb
cmp
repz
add
add
loope
in
xchg
divl
jmp
ficomps
jbe
fdivl
dec
add
testb
mov
add
aad
cmpsb
xor
adc
xchg
ror
mov
in
cmpsl
dec
xor
stos
lock
mov
xor
adc
and
imulb
add
inc
mov
mov
movsb
pop
mov
jg
das
inc
inc
push
pop
into
mov
sti
xor
cmpb
xchg
int3
in
repnz
mov
xchg
loope
pop
mov
pop
dec
pop
sbb
leave
jecxz
sbbl
lret
fildll
jmp
cmp
stos
test
out
lcall
mov
roll
jo
cmp
repz
dec
insl
fmull
xchg
mov
cmp
xor
aas
cmp
jl
bound
stos
es
jmp
addr16
sub
cld
dec
mov
dec
sbb
xor
or
xor
mov
xchg
movsb
les
mov
daa
rclb
or
adc
push
jmp
arpl
ret
loopne
inc
lds
xchg
hlt
jno
ljmp
mov
cmc
xor
out
xor
loopne
shl
cmpsb
fbstp
xchg
fnstsw
repnz
and
js
mov
adc
push
sbb
lcall
add
and
mov
mov
jg
lret
xchg
pusha
xchg
and
cmp
iret
fmul
push
mov
mov
bound
insb
loope
pop
xchg
push
xchg
add
jnp
push
int3
rolb
mov
jg
mov
insl
jle
dec
xchg
sub
jnp
int3
fs
or
in
jo
pop
iret
icebp
jbe
gs
int3
mov
repz
bnd
mov
out
jg
cmp
in
insl
and
insl
rorl
xchg
out
outsb
cwtl
ret
or
pop
mov
inc
mov
cmpl
sbb
xchg
out
jg
mov
sti
das
repnz
cs
dec
shrl
inc
data16
int
xchg
xor
inc
add
or
push
pop
stos
outsl
xor
loop
pop
shlb
jecxz
fwait
js
out
inc
push
scas
vcvttss2si
pushf
sbb
les
jp
jge
lret
jle
mov
jae
jae
jb
and
scas
push
ret
add
push
dec
inc
dec
push
jecxz
pop
mov
in
jg
and
mov
sti
rolb
imul
cmp
cmp
push
bnd
push
xchg
inc
xchg
and
pop
and
shl
movsl
movsl
leave
dec
jbe
sub
pusha
pop
or
rorl
xchg
dec
add
mov
cli
sbbb
pop
xchg
pusha
push
addr16
cltd
mov
add
leave
sti
inc
xor
shrl
loope
std
adc
insb
lahf
std
ss
subl
xchg
sub
mov
xor
cmp
inc
push
or
inc
dec
mov
popa
sbb
sahf
out
push
inc
cmp
out
sub
pop
psubq
inc
cmp
icebp
pop
cltd
test
rolb
lock
stos
pop
xor
stos
mov
into
cli
lret
enter
push
cltd
adc
cmpsb
aam
pop
mov
out
adc
mov
pop
pop
and
xor
imul
inc
int3
pop
fwait
loopne
jne
inc
dec
mov
sbb
mov
pop
cmp
xchg
and
or
icebp
mov
dec
mov
dec
push
out
pop
xchg
cmp
ret
pop
adc
ds
push
shll
fstl
jb
cmp
in
push
rcr
movsl
cmp
jbe
and
pop
movsl
test
testb
das
out
aaa
daa
out
dec
pop
popf
inc
dec
lea
inc
dec
xchg
inc
ret
mov
xchg
imul
mov
and
xchg
xchg
testl
sub
inc
fldt
pusha
ss
sbb
loop
fnstcw
adc
cs
xchg
sti
cmp
jo
xor
cmc
pop
xor
subl
mov
loopne
movsb
cmp
xchg
data16
mov
pop
mov
sahf
sub
add
jecxz
in
pusha
push
cli
mov
push
fnstsw
and
popf
stos
aad
rcll
repz
mov
jo
lods
imul
push
aaa
jp
mov
xchg
je
loop
jns
mov
das
jne
pop
sub
mov
pushf
negl
pop
or
scas
lods
xchg
jb
mov
push
adc
fadds
sub
sti
orl
and
adc
ljmp
adc
xor
lcall
mov
bound
dec
xchg
pop
popf
xchg
inc
movsb
test
dec
cmpl
nop
es
int3
sub
std
mov
push
mov
in
adc
or
cmp
outsb
ja
sub
imul
loope
fsubrl
insl
jg
push
loop
cmp
mul
push
fisttps
push
xchg
inc
dec
push
jmp
inc
dec
or
ss
imull
xchg
xchg
lcall
dec
push
cmpsl
mov
push
das
lds
pop
jb
daa
loope
xor
sub
xor
xchg
jecxz
cmp
mov
nop
into
jo
lret
in
push
cmc
xchg
mov
jle
cmp
mov
mov
dec
push
mov
ss
inc
push
xor
push
cmp
loope
jne
adc
mov
out
mov
adc
movsb
mov
add
dec
mov
or
sbb
jbe
test
ret
test
and
adc
scas
fs
roll
cmpsb
lret
loopne
jbe
jbe
repz
xor
add
push
pop
daa
sti
daa
jb
fildll
int
xor
adcl
out
pop
add
stos
cmp
cmpsl
cmp
cld
inc
xchg
adc
cld
mov
stc
inc
jl
pop
outsl
xor
mov
repnz
into
jge
pop
sti
andl
mov
and
cmp
std
dec
jb
mov
test
rolb
xchg
cmc
out
jge
or
adc
rcl
add
pop
cmp
mov
shr
cmc
dec
pop
push
in
shlb
jae
sbb
mov
test
subb
cmp
fisubs
xor
lret
repz
adcl
mov
les
ds
lea
test
jge
xlat
mov
mov
add
lret
out
in
sub
fdivl
outsb
and
push
push
or
xchg
cmp
fcomi
jl
test
shll
inc
or
int
and
or
push
adc
divl
nop
mov
jp
push
sbbl
bound
fisubs
xchg
pop
xchg
dec
jo
xchg
dec
std
or
and
movsl
cmp
lods
hlt
xor
mov
icebp
xchg
mov
xchg
insb
pop
mov
adc
adc
jl
dec
or
or
jno
sbb
push
push
mov
sbb
loope
xlat
push
mov
push
rcl
ljmp
push
pop
inc
movsl
jo
sarb
pop
cld
outsb
rorl
xor
push
pop
mov
stos
sbb
fsubp
lret
test
or
push
inc
pop
lods
testb
xlat
push
mov
or
inc
and
fnstenv
sti
xor
pop
dec
test
or
aam
jp
pop
sbb
xchg
jbe
into
nop
cmp
call
mov
inc
das
lock
lods
push
mov
jmp
in
mov
test
push
or
sar
adc
adc
pop
addr16
push
arpl
stos
xor
in
pop
dec
sahf
or
add
fxch
mov
mov
inc
outsl
add
popf
mov
adc
xlat
xchg
rorb
jle
das
repz
or
ja
xchg
mov
sbbl
fs
fcmove
data16
add
mov
mov
jmp
push
lcall
jmp
add
ret
addl
rcll
cld
ret
loopne
mov
xchg
xchg
jno
push
aam
or
shrb
scas
sub
cmp
cli
aad
xchg
mov
repz
dec
xchg
movsb
fidivrl
add
mov
adc
xor
add
loop
lods
fs
mov
push
imul
fwait
ror
div
push
jge
inc
popf
inc
xchg
mov
gs
insb
and
sub
fs
mov
sbb
sbb
pop
popa
outsb
jle
jmp
pop
pop
dec
pop
lock
mov
shll
jae
xorl
jno
imul
cmpsb
adc
pop
enter
jmp
push
outsb
popa
sub
mov
jae
pop
sahf
add
cmp
sub
lret
xchg
lock
mov
fildl
push
fdivp
or
stc
js
cmp
shlb
mov
inc
cwtl
decl
out
add
and
and
cmp
mov
sahf
test
sub
lds
cli
push
or
or
jmp
movsb
mov
fs
mov
repz
jb
test
fistl
push
jle
or
cltd
js
lret
cmpsl
test
fwait
mov
pushf
xchg
mov
add
push
xor
ss
mov
and
out
lret
mov
loop
ss
cltd
xchg
mov
xchg
dec
inc
shll
sbb
lds
sbb
divl
aas
and
lea
stc
push
xor
aaa
sbb
es
lret
add
pop
xchg
ret
mov
ds
ret
hlt
jns
add
bound
xchg
push
pop
lret
cmpsl
dec
data16
jl
jno
imul
lods
xorl
xchg
jmp
in
int
fxch
add
xchg
rclb
add
mov
lods
jnp
jecxz
test
js
sbb
inc
loope
dec
out
dec
pop
mov
xor
cmpsb
jp
cmc
rcll
mov
sub
in
pop
xchg
in
loopne
fdivs
cld
insb
jo
or
outsb
out
xor
inc
iret
imul
out
mov
cld
cltd
jns
ja
cs
inc
push
lods
dec
cli
rcrb
cld
inc
mov
pusha
enter
xchg
into
fs
fwait
sarl
inc
mov
aaa
mov
push
mov
out
popa
sti
fadds
xchg
lret
dec
ficoml
cmp
cwtl
stos
hlt
fstpt
xchg
pop
imul
jnp
dec
ret
rcr
or
cmc
jmp
je
mov
push
nop
fcmovb
and
std
xor
inc
sbb
push
inc
and
sub
movsb
cwtl
lods
inc
cltd
sbb
ja
mov
ret
stos
jnp
inc
jle
push
sbb
xorb
or
pop
mov
lods
cmc
sbb
inc
sbb
adc
sar
scas
repz
or
sub
adc
shl
jl
push
add
adc
nop
jmp
outsl
jno
xchg
inc
notl
out
xor
mov
jnp
lods
repz
cmp
aad
dec
xor
mov
ficoml
loopne
clc
out
pushl
lods
int3
xlat
pop
sbb
xor
or
cld
dec
bound
subl
mov
arpl
repnz
stos
dec
or
push
push
daa
int
loopne
xchg
and
cmpsl
pop
mov
push
jno
nop
fdivrs
movsb
outsb
in
add
mov
jns
jnp
int3
or
pop
inc
sub
mov
jnp
sbb
stos
iret
pop
add
mov
popl
fimuls
out
mov
pop
cmp
xor
mov
cld
dec
and
xchg
inc
xor
push
xlat
adc
repz
jae
cmp
pop
ficompl
test
mov
inc
sub
loope
aas
das
xchg
cmp
mov
xor
scas
andl
enter
xor
xor
scas
not
std
and
lea
add
or
sarl
adc
shrl
inc
iret
lret
rorb
dec
out
xchg
imul
push
hlt
mov
loopne
mov
cmc
in
js
xor
cmp
add
sub
sti
cs
jae
mov
mov
icebp
ja
mov
sbb
orl
cmp
push
mov
aam
dec
out
fs
jg
test
mov
in
jns
mov
call
jge
sbb
ss
add
les
jno
sbb
movsb
sub
lods
dec
std
cs
mov
cmpsb
mov
data16
xor
xchg
and
jp
jg
stc
add
js
mov
add
stos
jno
cltd
dec
jmp
push
call
jle
lea
inc
icebp
jl
sbb
mov
xor
jb
pop
movsb
pop
sub
stos
add
jmp
out
sahf
sub
push
inc
inc
jmp
stos
pop
pop
insl
or
dec
fdivl
cmp
xor
repz
sub
out
xchg
xchg
inc
sub
cmp
pop
popa
mov
imull
mov
sbb
fcmove
inc
xor
mov
out
test
daa
repnz
push
ds
cltd
sbb
inc
pop
sbb
imul
jb
add
lret
subl
in
jb
in
orb
mov
enter
and
cmp
fisttpl
mov
repz
insb
aam
inc
cmpsb
pop
xchg
jae
mov
ss
adc
hlt
cmp
outsb
dec
inc
and
mov
sub
movsb
je
jns
mov
out
leave
hlt
je,pt
or
aad
xor
inc
out
lods
jp
add
lcall
cmp
test
dec
mov
sbb
or
dec
test
in
out
add
push
inc
jae
sbb
xchg
imul
jecxz
rorb
pop
mov
push
inc
mov
scas
test
sub
jo
aas
mov
stc
gs
mov
call
push
sahf
ljmp
into
push
imul
mov
mov
mov
aas
divl
sub
sbb
dec
mov
xchg
or
imul
cmpsb
fcoms
aam
lock
add
inc
loope
cmp
pushf
je
jb
sahf
pop
add
push
sahf
movsb
imul
sbb
or
jg
xlat
cmpl
inc
xor
ror
pop
cmp
inc
movsb
push
int3
lahf
sbb
pop
loop
xor
mov
add
fistpl
shl
aam
movsb
mov
je
push
fists
cmpsw
cmp
rcr
add
ret
mov
shrl
dec
jp
icebp
jge
fdivl
push
push
fnsave
ss
mov
cmpsb
out
and
pop
xor
push
cltd
cwtl
jmp
fnsave
push
ja
aaa
pop
pop
jo
lcall
in
jle
daa
sub
jge
mov
push
je
dec
lods
idivb
mov
into
and
inc
mov
cmpsb
pushf
or
fwait
test
out
call
jae
adc
or
and
xor
or
cwtl
push
sti
shl
mov
mov
cmpsb
jg
and
xchg
mov
jp
xchg
repnz
dec
bound
or
jns
mov
or
bound
mov
inc
enter
sub
inc
out
mov
out
mov
push
xchg
sahf
dec
js
fucomp
mov
inc
nop
mov
mov
or
int
mov
mov
orb
lret
xor
js
jge
xchg
js
jecxz
cmp
adc
or
jb
mov
add
xor
cs
ss
mov
cmp
loop
xor
lcall
fcomip
sbb
jle
movsb
cmpsb
pop
inc
dec
cmp
sti
sahf
mov
mov
add
jecxz
mov
das
pop
cwtl
dec
xor
test
iret
insb
pop
jo
push
iret
mov
or
adc
xchg
fadds
push
test
rorb
xor
and
mov
notl
inc
adcl
sub
xchg
in
fildll
mov
inc
cmpsb
pop
std
loope
ja
sahf
ja
or
xor
ljmp
add
dec
xlat
das
or
and
mov
push
jg
outsl
mov
mov
fcoml
mov
imul
sbb
or
sbb
inc
xchg
or
lds
xchg
es
mov
cmp
outsl
lods
iret
jne
loopne
lcall
je
mov
dec
jns
dec
stos
pushf
std
leave
pop
mov
dec
out
cld
push
fstl
xor
xchg
sbb
rorl
sbb
cli
nop
ja
in
insb
or
jb
mov
nop
pop
roll
push
dec
lea
pop
pop
sbb
clc
push
mov
fbld
ret
xor
inc
pop
adc
lock
inc
xchg
or
out
xor
push
xor
mov
in
jle
mov
fisubl
jb
xchg
shl
push
mov
mov
shlb
lds
or
cmp
mov
mov
xor
leave
sub
jns
movsl
loopne
fcompl
sbb
pop
jmp
adc
in
std
or
cwtl
sbb
aaa
aam
mov
pop
call
jmp
xor
leave
outsl
in
sbb
ljmp
jmp
popa
int
push
xchg
loop
lcall
jo
mov
aaa
and
add
dec
pusha
add
and
aad
or
xlat
or
jne
repnz
test
and
pop
popa
fnstenv
xchg
xchg
cld
mov
dec
fwait
mov
iret
and
mov
mov
fsts
xchg
call
cli
cmpsb
lcall
mov
sti
fs
xchg
xchg
insl
mov
xchg
mov
mov
sub
fisttps
push
stos
out
std
cmp
cmc
movsb
sbb
mov
outsb
mov
into
lcall
xor
nop
fdivl
jmp
jo
loop
aaa
jbe
mov
push
cmc
pop
cmpsl
sbb
pop
stos
xchg
xlat
cltd
and
mov
pop
sbb
push
sbb
cmc
rcrb
sub
fs
xor
inc
mov
push
inc
mov
fninit
je
addl
fwait
shlb
xor
pop
mov
sub
icebp
stos
and
mov
or
testb
push
jecxz
nop
dec
cmp
xchg
and
pop
stos
ja
je
frstor
add
subl
xchg
dec
mov
ja
nop
fwait
stos
fisttps
pop
jb
jno
in
outsb
fwait
sub
ds
jne
es
dec
ret
in
mov
push
inc
aam
mov
sbbb
pop
divb
cmp
push
pop
cltd
out
fwait
dec
or
mov
cmp
test
mov
loopne
rcrl
shll
sti
cmp
leave
hlt
sub
jge
in
cmpl
fwait
and
les
mov
lock
mov
in
and
in
or
jp
enter
lahf
imul
sbb
insb
push
jb
in
cmp
pop
into
sbb
das
test
mov
push
rcrl
outsb
ffreep
mov
test
xor
sahf
mov
and
lods
dec
roll
insb
lret
pop
iret
nop
bound
xchg
repz
ret
lock
sbb
and
stos
rclb
lret
xor
mov
movsl
push
in
push
hlt
jmp
sbbl
lret
outsl
dec
aad
cmp
jmp
aaa
in
push
sbb
data16
inc
adc
inc
jmp
iret
loopne
push
mov
mov
sub
mov
repnz
adc
test
sar
mov
sbb
sub
shll
fidivrs
dec
out
push
xchg
add
fcmovnb
inc
jp
push
cmp
sub
mov
jmp
fbld
repz
mov
and
pop
xor
mov
popa
xorb
sub
lret
pushf
cmp
pop
mov
mov
cmp
jb
fsubs
mov
shl
fldenv
in
pushf
sub
mov
lahf
lret
aad
add
mov
in
push
popa
xchg
inc
add
fs
mov
repz
inc
daa
pop
ret
dec
push
xchg
lods
fistpl
int
cmpsl
aaa
push
adc
jmp
or
outsl
mov
je
add
or
lahf
fstps
mov
push
subb
add
shlb
insl
popf
add
and
mov
push
dec
push
lock
repz
mov
mov
fistpll
or
and
adc
scas
mov
cmp
inc
sbb
fwait
std
inc
and
lea
add
ret
xor
cld
les
in
cmpb
push
cmp
sub
into
sbb
push
imul
mov
lcall
push
sub
dec
outsl
lds
or
popa
in
pop
xor
stos
mov
int
mov
dec
sub
cwtl
mov
add
ja
cmc
fistl
int3
cmc
xchg
jl
mov
in
push
add
add
inc
sub
sub
aad
sub
adc
xchg
sub
xchg
sbb
push
sub
sbb
outsl
repz
adc
out
inc
pop
sub
imul
sbbl
ja
in
imul
cmp
adc
and
or
hlt
test
pop
bnd
in
jecxz
mov
sub
or
fwait
cmp
cmc
pushf
inc
in
jo
shl
jecxz
cltd
cmpsl
loop
or
jg
arpl
test
sub
and
cmc
lea
and
mov
sahf
jecxz
daa
lds
lods
ss
int3
imul
mov
mov
xor
jl
mov
test
outsb
push
push
inc
or
cltd
addr16
and
add
dec
out
movsb
test
in
cld
daa
enter
sub
jle
imul
pop
or
dec
add
gs
mov
jp
mov
pop
out
mov
repnz
loop
adc
outsb
xor
shll
add
sbb
jae
fadds
or
ljmp
pop
pop
xor
pop
in
icebp
mov
or
jae
in
sbb
loopne
or
je
fwait
scas
sub
mov
in
xor
cmp
movsl
fwait
mov
jae
scas
addb
push
xchg
adc
data16
mov
fcoms
inc
cmp
fldenv
enter
lret
popa
mov
andl
cmc
test
mov
mov
cmpb
sarb
sbb
add
xchg
cmp
aad
xlat
xor
xchg
repnz
or
xchg
xchg
inc
add
jecxz
jo
sbb
xor
test
call
pop
call
adc
shll
in
fnsave
xor
sbb
push
stos
jns
pop
xchg
add
int
sti
inc
mov
pushf
add
jecxz
neg
add
sub
mov
sbb
mov
mov
test
jmp
push
mov
and
pusha
aaa
jge
cs
jns
push
mov
pop
dec
fs
or
movsb
mov
rcrb
ud0
mov
fdivl
cmp
pop
mov
les
lahf
fdivl
cld
int3
movsb
jg
ja
or
inc
popf
call
dec
shll
cmpsb
rorb
mov
and
repnz
aam
subl
ds
fstps
mov
cmp
scas
cld
and
out
mull
push
arpl
sub
addr16
fadd
mov
xor
lret
pop
outsl
mov
shlb
cs
xchg
mov
pop
loope
jno
add
jns
mov
scas
push
push
mov
pop
addl
icebp
dec
and
jmp
sub
sarl
leave
and
mov
loop
enterw
outsb
popf
and
stos
stos
das
jno
add
cli
popa
lret
pop
lret
test
and
sub
xchg
inc
fwait
das
sbb
xchg
push
sub
xor
jmp
inc
xchg
dec
jecxz
pop
mov
shll
mov
mulb
jae
or
or
popa
fcoms
jbe
and
dec
arpl
outsl
mov
testb
mov
jle
xlat
adc
insb
xchg
cmp
sarl
movl
or
xchg
mov
dec
dec
out
pop
test
inc
or
popf
arpl
pop
push
fstl
xor
outsl
dec
push
pop
or
shl
adc
add
push
movsb
addr16
mov
cmp
test
test
pushf
push
xor
add
fwait
popf
aaa
xor
jmp
ljmp
enter
xchg
ja
add
call
pop
or
out
inc
xor
mov
mov
aad
rol
orb
bound
cmpsl
fdivrl
rcr
inc
jns
lock
cmc
mov
xchg
in
in
test
dec
jmp
push
mov
mov
rcrl
pop
xchg
push
faddp
or
xchg
mov
pop
ja
pop
add
push
loopne
adc
jmp
mov
out
add
xor
int
arpl
jle
adc
popa
mov
imul
add
in
push
mov
test
dec
fcomps
add
test
leave
cmpsl
or
jnp
jno
rcrl
repz
stc
jno
lods
outsb
lods
mov
pop
cs
jo
out
sti
clc
cmp
stc
or
aaa
cltd
outsb
icebp
lret
sub
cmp
mov
or
loopne
incb
cltd
pop
ljmp
and
sbb
test
lcall
sbb
addr16
add
imul
xchg
aas
scas
and
mov
lods
mov
sub
test
idivb
mov
js
mov
shlb
pop
sbbl
push
jle
mov
push
icebp
xchg
adc
push
je
jns
jle
es
cli
sbb
jo
out
jmp
je
aam
mov
xchg
scas
mov
in
test
shr
test
and
arpl
cmpsl
notl
dec
das
cmpsl
aas
pop
xchg
in
ret
push
divl
mov
cmc
fisttpl
jmp
les
fs
xchg
mov
test
cs
lods
test
jne
mov
xchg
andb
jmp
js
push
mov
sbb
lods
cwtl
fsubrs
mov
out
cs
mov
pop
add
mov
add
cmp
orl
leave
adc
xor
push
mov
inc
adc
xchg
lret
push
add
movsl
in
push
out
ss
push
inc
std
xchg
enter
cwtl
lahf
cmp
cwtl
bound
fwait
call
push
out
add
jns
push
mov
repz
fldl
xchg
mov
pop
jecxz
cmp
push
dec
add
adc
jg
mov
jns
imul
mov
add
in
jns
add
incl
scas
mov
iret
xchg
mov
or
pusha
cli
fcomip
mov
jp
push
mov
mov
inc
pusha
jns
push
or
xor
pop
int3
add
daa
imul
mov
xchg
push
iret
dec
lcall
dec
pop
pop
jle
ret
jp
mov
pop
pop
adc
ret
jne
iret
insb
sbb
add
shr
xchg
push
int3
lds
pop
leave
push
dec
mov
mov
adc
push
inc
push
mov
push
jp
jae
addb
outsl
imul
stc
fdivs
bound
jb
out
pop
sub
cmc
mov
sub
mov
mov
jecxz
mov
push
mov
out
nop
push
inc
iret
jno
into
filds
xor
mov
lock
sub
orl
add
cmp
inc
pop
lahf
sub
xchg
jg
fxch
pushf
movsl
popa
and
sti
lock
shl
xor
push
and
xor
and
or
dec
and
push
lcall
sub
push
mov
mov
mov
push
sbb
aas
mov
jge
cmp
arpl
cmp
lcall
scas
stos
jb
xlat
sbb
lea
cmp
xor
sbb
sbb
xchg
in
lods
and
sarl
shl
js
sub
movb
jo
dec
ss
pop
cli
dec
pop
call
out
fwait
fildl
test
cmp
roll
mov
jbe
ljmp
dec
mov
xchg
jno
rclb
jge
xchg
sahf
adc
mov
mov
test
pop
jnp
adc
xor
mov
or
fcompl
mov
shll
pop
xchg
inc
add
subl
pop
jns
or
loop
lea
mov
jnp
jmp
imul
out
mov
xchg
xchg
or
jne
insl
and
xor
mov
push
adc
xlat
or
lods
ja
push
xor
mov
movsb
push
xchg
fsubrl
adc
idiv
jmp
cmp
sbb
jl
sbb
mov
sub
inc
dec
jno
pop
hlt
sti
dec
jge
loope
inc
pop
push
shr
push
jmp
mov
je
add
fs
pop
lds
push
pop
scas
sub
cmp
dec
sbb
xor
and
int3
les
sub
mov
ret
int
lods
push
inc
sarb
push
xchg
jae
sbb
cmp
sbb
xchg
add
les
or
push
fcomps
cs
inc
sti
dec
sub
jmp
dec
loop
cmpsl
adc
mov
mov
dec
hlt
cmp
pop
ret
mov
jne
adc
dec
mov
xchg
and
shrb
lcall
mov
aas
mov
out
pop
ss
movsb
sbb
dec
mov
nop
or
mov
les
xchg
and
jmp
les
jl
fs
movsb
fiadds
int3
scas
lret
lret
push
in
test
sub
pop
sar
ret
inc
and
stos
fidivrs
int
xor
outsb
repnz
jae
movsl
int3
xor
sbb
test
mov
jl
out
repnz
sub
sbb
loop
imul
out
cltd
cmp
sbb
out
mov
add
cmp
inc
cld
in
inc
leave
sbb
jge
push
pushf
cs
in
jbe
cltd
jmp
or
lret
inc
xchg
lcall
loop
icebp
jmp
out
push
aaa
and
out
subb
adc
xchg
je
pop
pop
icebp
pop
mov
in
movsl
xor
cmp
mov
cmpxchg
lds
sub
xlat
xchg
clc
ret
sti
stos
fimuls
stos
jge
jo
mov
jg
orb
jne
shl
xchg
mov
test
mov
cmp
or
sahf
jmp
cwtl
xor
inc
mov
in
repz
mov
das
inc
lods
push
adc
add
jo
lahf
int3
leave
ret
mov
inc
stc
xor
mov
inc
rcrb
and
subl
push
pop
cs
and
or
xor
dec
xor
mov
jae
rcrb
addr16
mov
dec
push
jae
cmpsl
rorl
mov
in
add
fistl
add
or
push
mov
adc
loope
mov
jne
mov
gs
cmc
jno
pusha
cmp
cmp
mov
inc
fidivrl
mov
and
inc
test
xorb
push
sub
inc
jne
push
dec
ficoms
add
es
aam
mov
imul
in
fisubrs
ss
test
pop
stc
and
adc
pushf
popf
adc
das
out
dec
pop
xlat
push
sbb
mov
ds
sub
xchg
cmc
cmp
or
mov
mov
xor
lods
inc
mov
pusha
clc
and
mov
sub
test
mov
push
mov
xchg
push
mov
sub
cmp
movsl
mov
mov
mov
cmp
mov
int3
mov
imul
out
sub
xor
xor
nop
hlt
mov
cmpsl
sti
cmpsb
dec
or
jl
andb
mov
pop
mov
xchg
neg
gs
loop
or
test
push
mov
add
or
clc
mov
je
int3
or
add
dec
mov
dec
or
je
xchg
pusha
aas
in
dec
bound
js
xor
push
xor
out
jl
add
mov
pop
push
lret
mov
bound
xchg
mov
pop
xor
mov
test
cmp
icebp
popf
mov
insl
pop
rorl
rcrl
jbe
leave
mov
andb
jbe
fdivrl
jo
dec
popl
add
mov
loop
dec
add
movl
pop
jle
and
es
scas
cltd
mov
push
les
pop
xchg
inc
jge
push
mov
jmp
inc
inc
mov
popa
sbb
or
mov
bound
mov
mov
in
stc
sbb
sub
adc
and
cltd
dec
mov
enter
xor
dec
cwtl
mov
push
in
popf
ret
sbb
addr16
movsb
and
xor
das
out
mov
stc
punpcklbw
mov
dec
dec
in
pusha
and
push
pop
pop
push
outsb
loop
mov
fsubrs
jne
mov
ret
sub
add
sbbb
movsl
cltd
mov
cwtl
flds
xabort
cmp
loope
icebp
ret
fucomi
cmp
sbb
jge
xlat
push
imul
fdivrs
rcrb
xor
mov
xchg
pop
in
lds
jmp
dec
sub
sahf
push
cmp
arpl
pop
fsubrs
in
mov
imul
mov
and
fists
je
mov
aaa
stc
int
cwtl
loope
iret
in
lods
mov
sbb
lret
add
fidivrs
ds
incb
jge
fbstp
cltd
js
inc
sarl
mov
aam
xor
cwtl
or
shlb
xchg
stos
push
rcr
jp
sbb
mov
mov
ja
xchg
dec
movsb
push
xchg
mov
push
fistl
mov
loope
ds
pop
pop
fldcw
push
scas
and
xlat
inc
adc
pop
and
and
sbb
loop
daa
inc
sahf
mov
jmp
adc
xchg
jge
pop
imul
jge
lret
mov
push
imul
dec
test
dec
jne
adc
and
fmull
jno
adcb
xlat
xchg
popf
lods
mov
stos
fildl
push
std
rorl
mov
inc
xchg
in
jge
mov
movsl
xor
int
cmp
and
lods
sbbb
mov
mov
cmp
movsb
push
lea
shll
adc
adc
pushf
das
push
sbb
lret
cmp
fstl
add
pop
sbb
mov
inc
jmp
pusha
pop
add
lahf
cld
arpl
cmove
cwtl
sub
mov
jo
or
aaa
jmp
jecxz
jno
inc
fisubrl
xor
xchg
dec
in
mov
leave
sub
aaa
mov
mov
popf
sbb
loopne
aad
sub
repz
push
mov
stc
xlat
or
je
or
lods
sub
adc
imul
stc
movb
and
fld
and
pop
adc
popa
jne
mov
repnz
aam
dec
cmp
xlat
movsb
loopne
mov
sub
nop
cwtl
push
pop
fisttpl
test
popf
xchg
popa
cmpsb
mov
sbb
std
fistps
add
cmpb
pop
mov
cld
arpl
and
xchg
fcomps
adc
inc
pop
mov
inc
jb
popf
mov
jnp
daa
movsb
push
push
rorl
test
ja
es
aad
mov
push
sbb
add
ds
enter
lahf
dec
lock
fimuls
cmp
mov
movsl
or
or
aam
and
add
inc
push
mov
sarb
sbb
pop
std
imul
sub
mov
mov
fnstsw
mov
xlat
cmpb
testl
jge
test
into
or
or
jl
scas
xlat
repnz
mov
dec
mov
push
cmpsb
add
and
jnp
hlt
push
lea
mov
insl
pop
lock
cmp
insl
enter
arpl
inc
xor
scas
rorl
xor
jae
xlat
iret
dec
ret
sbb
jno
mov
in
insb
sub
mov
add
ljmp
ret
cmpsl
inc
addr16
movsb
popa
cld
scas
sub
jg
icebp
lret
fsubrp
xchg
mov
enter
pop
shlb
es
aaa
cmpsl
and
cmp
mov
movsl
xchg
pusha
call
test
idivb
xchg
sbb
push
jp
call
loope
dec
mov
sub
xchg
lock
mov
imul
xorl
sahf
push
xchg
mov
iret
push
inc
ficoms
xor
mov
in
sub
out
lcall
pop
cmp
loop
or
or
push
scas
imul
mov
jae
or
or
and
subb
push
gs
pop
in
push
inc
push
inc
ljmp
cld
inc
arpl
push
and
outsl
mov
lods
rolb
sub
adc
std
push
push
cwtl
dec
lcall
leave
mov
mov
push
mov
xchg
cmp
idiv
popf
es
dec
movsb
mov
sbb
lahf
inc
xchg
popl
test
inc
mov
cmp
sarl
xchg
clc
or
stos
mov
movsl
pop
mov
pop
dec
dec
ljmp
loopne
test
xchg
sub
and
jae
inc
pop
jnp
cmp
stos
pop
fldenv
push
xchg
dec
popf
add
jno
fldl
rcr
sar
mov
lods
add
jmp
cmpsb
fsubl
xchg
mov
js
mov
and
mov
fwait
mov
adc
push
sbb
push
or
mov
imul
xor
out
mov
sbb
xchg
adc
fidivrs
push
cmp
add
and
sub
pop
push
test
loopne
insb
push
push
cmp
mov
clc
faddl
pop
push
daa
decb
adc
mov
call
decb
push
movsb
and
frstor
rorb
out
js
xor
mov
mov
ds
iret
roll
jmp
mov
cmc
xchg
loope
sub
push
mov
push
cmp
je
je
jo
xchg
andl
repnz
out
mov
pop
xchg
iret
or
sahf
dec
add
mov
mov
enter
push
fs
push
dec
test
xchg
sub
xchg
mov
mov
es
mov
mov
or
sahf
inc
test
cmp
sar
mov
repnz
push
add
dec
xor
mov
sub
test
push
fbstp
lock
arpl
mov
repz
lods
daa
cmc
xor
sub
out
cmp
push
inc
jo
ljmp
lcall
lahf
into
imul
daa
movsl
jecxz
icebp
inc
ficomps
les
in
ljmp
cltd
in
int
sbb
fcmovu
sbb
sbb
movsl
in
lret
sti
movsl
xchg
addr16
push
iret
jmp
pop
mov
add
xor
mov
fwait
cmp
ret
dec
jo
add
mov
mov
or
mov
pop
out
cmp
cmp
daa
xor
and
mov
jecxz
dec
les
or
dec
mov
sarl
bound
in
mov
push
jno
clc
xchg
dec
push
mov
int
push
sbb
test
aas
xchg
push
out
aam
cmp
mov
cmp
stos
call
xor
mov
out
es
fwait
push
mov
jge
pop
cmc
jmp
and
jl
out
inc
lret
mov
lods
add
outsl
or
cmpl
cmp
fldl
jae
dec
lcall
int3
sbb
push
jmp
test
sbb
pop
xor
pop
not
stc
jmp
fstpl
sub
xor
daa
repnz
or
imul
in
jge
xchg
fld
ss
loopne
push
test
sub
stos
ss
cmc
stos
xchg
mov
ljmp
xchg
outsl
xor
cmpsb
sub
orl
xchg
int3
rcrl
pusha
pushf
push
mov
inc
jno
dec
or
ret
mov
outsb
pop
mov
outsl
xor
imulb
hlt
xchg
pop
inc
aas
inc
dec
cmp
cld
xchg
push
cmp
or
adc
dec
or
arpl
jb
movb
out
out
pop
data16
das
fwait
mov
mov
inc
lds
mov
ret
enter
hlt
and
xchg
les
call
sub
pop
mov
xor
xchg
stc
fsubp
test
imul
pop
xchg
sbb
lock
mov
test
mov
cmpsl
cld
pushf
aaa
dec
jge
xchg
popf
jp
mov
inc
hlt
xchg
mov
adc
out
in
xchg
arpl
cmpsb
or
insb
out
sarb
lods
mov
pop
mov
inc
or
mov
clc
insl
dec
push
pushf
dec
lahf
and
mov
cwtl
push
aam
scas
inc
add
lds
test
daa
in
jmp
repz
mov
mov
push
std
mov
out
in
xchg
mov
aad
cmp
fcoms
insb
aam
loope
mov
test
adc
mov
jl
das
mov
mov
inc
imul
ss
imul
fidivs
addr16
push
mov
pushf
mov
ds
pop
jo
jo
inc
pop
dec
ficomps
mov
sub
ret
imul
cmp
ljmp
jmp
xchg
lret
xor
inc
addl
mov
add
rcr
mov
aaa
outsl
fimuls
clc
ds
movsl
mov
in
mov
add
shrb
cmp
ljmp
sbb
dec
dec
cmp
cmpsb
fildl
repnz
sbbl
imul
cmpsl
mov
sbb
xor
and
push
outsl
ret
xor
pop
mov
mov
add
mov
out
enter
mov
enter
cs
and
jmp
daa
cli
push
cs
pop
inc
dec
hlt
lds
jb
cmp
xor
dec
fdivrs
iret
gs
dec
enter
aad
in
sbb
sbb
mov
lods
and
testb
test
xor
popa
xlat
dec
aad
stc
inc
cmpsl
xor
or
inc
out
mov
fmul
int
mov
stos
mov
stos
jo
jge
mov
rcr
icebp
mov
sbb
jo
push
sbb
push
add
jp
andb
andl
data16
ret
and
shll
xchg
xlat
push
push
pop
addl
fs
arpl
fsubrl
mov
pop
cmp
rorb
pop
lahf
or
dec
aaa
mov
xor
cmp
add
push
dec
addl
sahf
repnz
xor
mov
push
xchg
adc
inc
jg
jecxz
cwtl
mov
mov
inc
push
testl
inc
push
mov
cvtpi2ps
pop
adc
push
fmulp
xchg
inc
mov
mov
jb
cmc
dec
push
adc
out
and
xchg
push
jae
push
jae
filds
and
mov
lcall
test
xor
jecxz
mov
rclb
loope
test
cmp
dec
mov
aam
sub
mov
stos
mov
jbe
dec
xchg
pop
sbb
mov
mov
test
fstpt
aad
test
push
mov
cmp
mov
leave
sbb
lds
nop
addr16
scas
pop
sub
gs
rorl
jp
sub
pop
jge
cmp
fnsave
shrl
arpl
ljmp
push
inc
testb
xchg
cli
mov
js
push
push
dec
movsb
jo
dec
dec
sub
ss
mov
cmpsb
int
imul
das
icebp
cmp
pop
lahf
mov
ds
arpl
ficoml
lahf
xchg
pop
aad
or
test
sub
cmp
ffree
and
mov
jno
adc
cmpsl
push
cmpsb
push
jp
fs
shrl
cmp
aam
xchg
dec
mov
push
shrb
bound
pop
ljmp
adc
test
push
or
out
xchg
sbb
or
aaa
int
push
cmp
out
into
jp
loope
loop
jmp
pop
push
mov
inc
or
mov
enter
ss
or
call
jge
lcall
leave
mov
or
pop
clc
mov
push
mov
inc
add
xchg
mov
sbb
mov
jae
and
sbb
stos
pushf
push
mov
ljmp
mov
adc
test
incl
inc
jb
out
sbb
pop
or
mov
mov
jle
xchg
mov
mov
mov
mov
rcr
dec
stc
insl
xchg
mov
xchg
mov
test
mov
pop
pop
cmp
xchg
mov
and
dec
lods
pushf
xchg
out
ret
mov
pop
xchg
xor
adc
ret
mov
jno
dec
sbb
lcall
aaa
mov
lcall
scas
xchg
push
ss
loop
lret
xchg
jmp
push
out
add
dec
push
arpl
cmp
xchg
in
popf
test
mov
insl
ror
gs
inc
vmptrst
sti
xchg
addl
orl
cli
test
mov
cmp
pop
psubusb
pop
sbbb
popa
add
dec
fidivl
es
inc
sub
mov
mov
jns
aas
testl
push
add
mov
lret
jae
adc
cmp
sub
mov
int3
mov
in
add
adcb
or
inc
rcrb
pop
sub
and
ficompl
mov
pop
push
cs
cmp
push
xlat
cmp
xchg
scas
pop
dec
xor
mov
xor
mov
scas
inc
inc
les
pop
lock
fs
ret
insb
call
inc
repz
pop
mov
fldenv
inc
cs
clc
pop
mov
xchg
popa
mov
ja
xor
lret
or
mov
jg
push
mov
push
and
stc
scas
mov
fwait
add
add
cmpb
inc
xor
jmp
and
aaa
or
pushf
sub
clc
add
sbb
les
push
mov
pushf
icebp
lcall
push
adc
into
aas
jg
cld
aam
cmpsb
ret
add
and
cmpsb
pop
mov
std
scas
ds
or
or
add
inc
enter
das
test
add
push
subb
movsb
sbb
and
push
sub
adc
test
movsb
sub
xchg
jne
cwtl
xor
cmp
aad
movl
clc
enter
xor
cmpsb
cmp
mov
imul
inc
jecxz
outsb
sbb
loope
inc
js
lods
out
mov
or
fs
gs
xor
xchg
xchg
cmp
pop
inc
pop
ret
xchg
mov
shrb
dec
add
lods
pop
mov
and
xchg
movsl
jg
mov
testb
and
sub
dec
mov
pop
pop
jae
mov
lods
pusha
pop
dec
xor
sub
leave
xlat
stos
dec
jb
xchg
dec
jg
jp
jp
fscale
pop
loopne
xchg
cltd
scas
clc
sbb
lods
stos
iret
shlb
out
push
lock
and
dec
sti
cmp
rorb
push
fadds
loop
pop
mov
lods
repz
mov
imul
fwait
push
mov
or
push
cmc
mov
cmp
iret
xor
and
into
push
sbb
icebp
out
fldt
pop
or
gs
inc
enter
mov
pop
pop
mov
pusha
aam
add
sti
xor
sti
pop
test
inc
sub
ret
jecxz
andl
scas
sub
xchg
nop
daa
imul
xchg
pop
sbb
sbb
cwtl
outsb
push
in
subl
inc
mov
xor
push
lds
cs
ficoml
outsb
inc
outsl
incb
clc
add
dec
push
mov
cld
dec
pop
adc
and
pop
pop
jge
stos
test
sbb
enter
call
xchg
popf
fnsave
mov
sub
rcll
inc
aas
testb
pop
mov
jns
gs
pop
int3
stos
bound
loop
or
out
push
jbe
add
ds
mov
adcb
jge
xor
cmp
inc
xor
pop
xor
or
bound
out
out
in
mov
adc
adc
mov
daa
cmp
ret
bnd
jge
cmovbe
lods
mov
mov
or
inc
push
popa
ret
xor
into
cmpsl
aas
shr
dec
rolb
inc
cmp
mov
fsubr
stos
mov
pop
xorl
or
pop
xchg
fmul
or
mov
sub
mov
ret
add
js
mov
mov
push
xor
lods
inc
push
jecxz
sbb
mov
and
mov
test
cmc
fs
das
outsb
rcrl
pop
mov
cmp
movsl
jo
jle
push
pop
sbb
popf
out
mov
push
loope
out
fiaddl
pop
iret
js
stos
cs
pop
jbe
scas
cmp
gs
mov
push
mov
call
add
andb
or
neg
bound
subl
jae
xchg
lret
repz
aaa
or
mov
fwait
in
push
push
iret
out
out
mov
out
cmp
add
fcompl
lahf
mov
pop
lods
add
stc
mov
xchg
jb
scas
fdivs
dec
lds
hlt
daa
nop
outsb
jge
cmp
jmp
rcr
push
adc
jns
dec
gs
shlb
adc
inc
jmp
les
push
aad
and
jno
insl
push
mov
push
jge
inc
dec
shll
jmp
movsl
adc
sti
aaa
addr16
pusha
fisubl
gs
jmp
fsubl
negl
dec
out
jg
sbb
xchg
xchg
inc
movsb
sbb
cmp
xchg
mov
sarb
or
mov
inc
mov
leave
imul
shl
add
mov
mov
adcl
rorb
mov
shrl
int3
fcoms
jnp
inc
insl
and
dec
mov
nop
andl
xchg
jmp
push
out
or
aas
mov
scas
push
dec
icebp
and
lds
iret
adc
stos
pop
inc
jecxz
pop
imul
pop
rorl
bnd
popf
inc
dec
fsts
add
fadd
sarb
mov
cmpsw
ret
push
xor
pushf
lahf
or
push
rorl
sbb
clc
sub
jmp
out
out
mov
add
adc
mov
out
fstpl
inc
pop
sbbb
push
imul
dec
popf
lods
xchg
cmp
aaa
mov
mov
in
in
pop
mov
jne
push
imul
mov
outsl
enter
xchg
fsts
ret
and
sub
sub
and
enter
push
adcl
mov
int
cmp
inc
push
ss
xchg
mov
push
jl
rolb
push
jns
mov
popa
cltd
ficoms
cmpsl
iret
jle
cs
in
sub
les
out
mov
push
jno
mov
dec
fwait
or
es
maxps
jnp
insb
mov
or
addr16
pop
push
or
xchg
lcall
mov
cmp
lods
jecxz
inc
xorb
lcall
pusha
lods
sub
sbb
lahf
xlat
mov
dec
ljmp
inc
popf
test
arpl
xchg
mov
cmpsb
movsb
jne
std
pop
dec
cmp
in
outsb
adc
inc
sar
in
lret
xor
fsts
rep
nop
xchg
dec
pop
rclb
cmp
aas
orb
sahf
loope
ffree
outsl
cmp
jbe
push
mov
xor
add
sbb
out
push
addr16
jo
cld
nop
and
sbb
in
int3
xchg
pop
pop
mov
push
in
mov
push
push
xchg
out
mov
push
stc
test
pop
std
inc
pushf
out
xlat
outsb
xchg
sarl
add
fdivp
and
mov
or
push
dec
sub
out
or
je
inc
loopne
jmp
cwtl
imulb
or
daa
cltd
mov
std
mov
push
push
push
mov
call
mov
ss
dec
test
mov
pushf
or
hlt
sbb
push
push
lcall
sbb
push
aam
popl
in
cmpsl
pop
mov
in
add
adc
ljmp
jp
push
add
movsl
dec
ret
add
std
inc
out
fmuls
mov
dec
inc
or
or
outsb
xor
xor
jecxz
inc
lcall
gs
mov
aad
inc
xchg
outsb
xor
lidtl
sub
inc
xlat
shl
mov
sub
lods
cmp
mov
add
inc
and
mov
jmp
stos
jmp
andb
dec
add
decl
popf
cmp
test
adc
dec
cwtl
not
loop
or
jp
cli
adc
pop
xchg
cmp
adc
push
icebp
cld
xor
xor
pop
cltd
cld
lds
sub
jmp
lahf
movsl
xor
add
scas
add
push
aas
ret
mov
mov
adc
xchg
pop
dec
mov
pop
in
cmc
xchg
mov
xor
insl
loope
fildl
mov
inc
insl
inc
loopne
push
pusha
pop
mov
vphaddudq
mov
sahf
cs
xchg
sub
adc
adc
add
and
xor
stc
lods
push
push
stc
seto
pop
pop
inc
clc
jns
test
cwtl
mov
mov
pop
fcompp
fcmove
add
xchg
enter
aaa
int3
sub
out
push
aaa
cmc
lds
xchg
lcall
rorl
push
outsl
iret
cmp
imul
lret
ljmp
shl
xchg
mov
into
dec
cmp
dec
mov
jne
or
leave
leave
rol
mov
mov
mov
fbld
stos
xchg
push
lods
lods
pop
mul
nop
lahf
js
fsubs
test
adc
pop
out
sbb
ljmp
xorb
pop
inc
or
insb
cmp
inc
out
ja
aas
jmp
push
stc
mov
mov
xchg
insl
xor
jge
int3
aad
inc
sbb
arpl
adc
pop
fs
lds
ret
js
pop
push
adc
fimuls
mov
push
out
lds
dec
xchg
lods
shrb
test
jnp
or
pop
into
jmp
cmp
lcall
mov
sub
mov
addl
adc
in
xchg
xchg
nop
andl
pop
in
insb
shl
and
shll
mov
mov
sbb
test
add
xchg
scas
or
popa
inc
sbb
add
out
lcall
fisttpll
mov
xor
xorb
inc
insl
pop
cltd
mov
aas
xor
xor
pusha
sub
pusha
into
subl
sahf
test
push
test
lret
inc
movb
lea
cmp
pop
fdiv
rcll
mov
jg
push
adc
push
push
mov
in
enter
xor
mov
imul
in
fs
popa
loop
xor
cli
dec
adc
jo
addr16
xchg
cmp
fs
ja
mov
pop
outsl
popf
mov
outsl
lret
cmc
dec
leave
jg
add
dec
addr16
dec
push
mov
sbb
je
cmp
leave
js
push
mov
subb
addr16
aam
cmp
flds
push
and
inc
cmp
daa
repz
js
xchg
jnp
sbb
jbe
push
sbb
fidivrl
hlt
cmp
mov
sbb
mov
jge
adc
fwait
pop
les
int
stos
fisttps
inc
mov
movq
stc
and
call
and
fistps
xchg
push
sahf
loope
je
aas
fs
cwtl
fucomp
and
push
inc
push
aam
mov
inc
xchg
fisubrl
outsl
sbb
xor
adc
push
or
popw
lcall
dec
sbb
test
ss
jae
mov
fbld
mov
cmp
fs
jl
adcl
jne
in
push
add
sub
test
fsub
loope
int3
je
fwait
pushf
inc
jnp
enter
ret
dec
inc
mov
pop
ret
push
and
jge
mov
xchg
or
pop
mov
movsl
cmp
mov
lea
jnp
xor
cltd
xlat
jecxz
adcl
add
jp
es
jnp
mov
push
imul
xchg
pop
mov
fwait
stc
lcall
cmpl
ror
sbb
lods
mov
xor
xor
inc
loopne
mov
sbb
in
add
iret
cmp
jecxz
cwtl
imul
mov
mov
cltd
fs
insb
lahf
adc
pop
das
icebp
mov
mov
pop
loopne
adcl
lods
gs
mov
stos
cwtl
cmp
push
or
xchg
hlt
push
push
xor
xchg
sub
pushf
xchg
mov
inc
and
lock
cmp
sbb
js
stos
push
push
repnz
add
insl
out
mov
mov
pop
loopne
lcall
clc
stos
xor
mov
loop
stos
mov
add
fs
xor
outsl
addr16
inc
cld
jne
rclb
test
adc
adc
ret
mov
nop
jbe
out
das
mov
dec
add
movsb
jns
mov
scas
xchg
push
mov
test
adc
ret
sub
sbb
rolb
imul
mov
jmp
mov
js
adc
fnstcw
repnz
mov
add
pop
loope
dec
js
adc
int
adc
lods
jl
out
enter
jnp
out
xchg
imul
loope
inc
loop
loope
inc
aas
sbb
leave
cmp
std
xchg
stos
xchg
loop
mov
push
push
pop
sar
sbb
mov
xchg
xlat
pop
mov
and
fisubl
mov
sub
inc
or
sbb
mov
push
ret
push
dec
ja
pusha
adc
xrelease
push
ja
or
clc
add
loopne
push
mov
adc
aam
pushl
jp
jae
cmpsl
inc
adcb
daa
int3
cs
fisubl
dec
lods
shll
xlat
xor
mov
xchg
sub
std
cmpsb
mov
scas
nop
mov
sbb
aad
xor
and
sahf
mov
ror
xor
xor
imul
fnstsw
test
das
inc
pop
mov
add
mov
movsl
in
xchg
cld
imul
gs
cmp
push
jp
or
add
mov
fidivrs
and
mov
xchg
sub
stos
fisubl
and
fcoms
out
mov
mov
pop
dec
and
stos
out
lret
and
outsl
fcomp
ljmp
aaa
inc
add
outsl
push
int
pop
fs
add
pop
dec
or
fsubl
xor
cld
add
mov
stc
dec
repz
xchg
jns
xchg
into
add
minps
into
lcall
stos
mov
dec
ffree
pusha
movntq
sarb
inc
jb
adc
inc
jp
pop
jmp
push
test
lods
jo
fsts
repnz
cmpsl
lahf
pop
in
inc
in
iret
mov
pusha
inc
popa
lea
mov
inc
lods
push
add
iret
cmp
je
sarl
negb
sti
cli
loopne
lds
lret
in
add
data16
inc
cmp
leave
and
and
lods
cmp
mov
lret
mov
insl
incb
aad
shll
dec
lcall
js
dec
pop
outsb
add
fiadds
lcall
orb
push
pop
ljmp
test
pop
sbb
inc
lahf
or
mov
xchg
rorb
xchg
inc
mov
cmp
jno
jo
xor
mov
pop
popa
cmp
mov
jns
or
pusha
je
jno
xchg
xchg
enter
xor
fcmovb
cmp
movsb
xchg
fwait
xor
clc
dec
faddl
in
and
sbb
pop
add
idivb
call
or
imul
pop
fdivrl
jns
xor
frstor
jno
mov
cmpsl
or
or
mov
insl
adc
into
mov
out
cltd
hlt
mov
xchg
nop
bnd
scas
lcall
lcall
enter
sub
xchg
mov
mov
aam
or
ja
stc
daa
roll
pop
pop
idiv
sbb
sbb
pop
inc
adc
mov
mov
xchg
sub
and
jae
sbb
or
sbbb
stc
lea
orl
and
xor
or
std
cmp
pop
jecxz
xor
imul
push
push
sub
gs
arpl
mov
fwait
push
mov
cmp
in
adcb
fsts
lock
js
jae
adc
outsb
lds
ficompl
xchg
mov
sub
lcall
out
dec
mov
data16
hlt
jae
pop
jge
cmpps
mov
jmp
sahf
inc
test
push
pop
andl
lock
gs
in
loop
and
mov
jl
outsb
mov
inc
dec
cmp
jp
insl
leave
adc
outsl
imul
lret
inc
mov
test
inc
jae
jg
orb
pop
iret
fsubr
bnd
sbb
lock
adc
mov
inc
dec
or
mov
push
decb
outsw
inc
sbbb
push
sti
std
mov
andb
in
rcrl
inc
fwait
dec
repnz
pop
mov
mov
push
push
divb
add
hlt
sbb
bswap
cmp
test
push
jno
push
inc
mov
das
and
into
adc
mov
mov
daa
hlt
es
fwait
imull
or
pusha
jmp
call
or
stos
test
inc
sbb
or
mov
sbb
push
add
sub
outsl
aas
ljmp
and
gs
xchg
sbb
mov
arpl
inc
hlt
and
push
xchg
ret
sarb
addb
loop
pushl
fcoml
pop
xor
inc
in
jns
test
or
sbb
sahf
cmp
add
add
push
repz
arpl
out
sub
aas
mov
aam
cmpsl
push
pop
movsb
cmpsb
push
mov
jge
stos
mov
in
mov
scas
sub
cwtl
je
arpl
imul
fidivs
int
push
loope
xchg
cwtl
inc
cli
sub
sahf
out
pop
inc
dec
mov
push
jecxz
fcomip
xchg
sar
xor
jg
add
dec
nop
and
or
dec
add
mov
das
lods
dec
adc
and
adc
mov
cmp
stos
int
sub
xor
idivb
movsb
ret
jmp
jnp
movsb
mov
push
adcl
sub
mov
add
imul
outsl
dec
fbld
ljmp
daa
sub
dec
jle
out
loopne
sbb
rcr
out
enter
cmpsl
andb
into
repnz
pop
cmp
jmp
lea
loop
popf
xchg
pop
and
notb
pop
int
fcoms
andb
icebp
mov
or
inc
push
sbb
es
cmc
sbb
push
xchg
cs
inc
lds
cmpsb
mov
mov
shrl
imul
cltd
hlt
insb
cmc
aas
testl
gs
sahf
roll
or
nop
jg
inc
lret
mov
lea
push
sub
mov
movsb
push
sbb
stos
and
cli
popa
pop
loop
loopne
stc
int
jecxz
cmp
pusha
out
addr16
ds
call
mov
cmp
ss
and
xor
or
xchg
xor
dec
movsb
test
adc
stos
pop
add
mov
xor
jle
outsl
mov
mov
sbb
push
adc
push
rolb
sbb
adc
shr
adc
push
popl
testl
std
mov
mov
or
insb
test
inc
xor
popl
push
int3
test
dec
enter
xchg
lock
sbb
cmp
mov
mov
dec
mov
jne
push
repz
bound
enter
inc
mov
adc
mov
cmp
dec
inc
dec
icebp
daa
mov
mov
ret
cmp
fisubrl
cwtl
shr
mov
mov
cwtl
stos
jl
mov
into
add
test
mov
pop
inc
rorl
aam
and
jb
xchg
push
orb
dec
jns
imulb
dec
data16
clc
sub
js
andl
arpl
cwtl
inc
push
fidivs
sarl
mov
cli
push
das
outsl
jo
mov
out
jp
outsl
mov
movsb
insl
push
icebp
cmpsl
and
mov
out
xor
mov
ja
xchg
sahf
sub
les
jge
pop
loop
mov
jmp
mov
sbb
mov
outsl
shll
mov
repnz
test
cmp
bound
cli
mov
aas
pop
fs
add
or
es
mov
stos
in
das
cmp
mov
in
jl
sub
pop
enter
push
aas
aam
cltd
pop
inc
hlt
mov
sub
stc
scas
sti
xor
xchg
data16
and
mov
add
add
add
sub
in
xlat
xchg
sbb
xchg
fmull
mov
int
jnp
outsb
mov
jbe
ljmp
rcrl
pop
mov
loop
push
sbb
insb
push
scas
mov
outsb
fwait
dec
jle
or
mov
xchg
leave
cli
stc
inc
mov
fcoms
shl
sub
sub
ret
push
or
mov
and
adc
mov
lds
jb
mov
nop
sbbl
cmp
loope
or
jp
jno
dec
testb
jp
jae
and
into
xchg
sub
and
fwait
and
xor
daa
mov
gs
push
test
sbb
sbb
addb
ja
sub
xchg
sbb
je
jp
sti
stos
push
outsl
clc
lds
mov
pop
out
loop
aas
jb
ds
popa
lcall
sub
fcoms
in
aad
fld1
rcl
or
ss
js
inc
roll
test
inc
cmp
xchg
inc
insl
inc
pop
out
sbb
shl
gs
mov
out
lds
out
test
pop
dec
jne
test
loopne
xchg
lds
nop
pop
int
aad
pop
shr
dec
test
xor
pop
je
sub
int3
inc
fdivrs
lret
fwait
loopne
testl
mov
addr16
popl
cmpsl
push
xor
loopne
hlt
push
sbb
in
test
inc
adc
dec
aaa
jmp
into
popf
divl
imul
jmp
jge
arpl
ret
cwtl
popf
sub
imul
dec
andb
dec
adc
imul
into
scas
pop
mov
mov
fistpl
or
into
mov
jmp
jg
xor
mov
es
lods
mov
es
fdiv
inc
in
std
popa
xchg
pop
popl
adc
sub
jae
pop
cli
dec
imul
mov
js
icebp
subb
sbb
xor
mov
cmpsl
and
mov
xchg
push
sbb
and
dec
mov
mov
mov
cmp
xor
repnz
lret
fsubrp
jne
add
mov
cmp
fwait
xor
repnz
mov
rorl
int
in
pop
mov
roll
pusha
inc
aaa
adc
xor
pop
das
rorb
repz
imul
inc
or
imul
mov
jle
orl
lods
push
movsb
jge
scas
cmp
fadd
out
and
add
je
inc
loop
pop
jmp
xchg
inc
sub
mov
mov
leave
inc
xlat
lea
cltd
pop
jb
push
rolb
jno
dec
add
and
push
adc
add
add
mov
ss
scas
or
pop
fidivrs
nop
gs
sub
sub
outsb
cmc
ja
push
adc
shrb
pusha
dec
test
sbb
pushf
push
addl
push
sub
sar
jl
fwait
push
sahf
mov
ja
into
dec
cld
dec
jb
pop
adc
fisubs
fidivrl
inc
stos
push
add
adc
push
mov
lods
mov
push
inc
sbb
add
imul
ret
mov
mov
mov
js
add
cli
subl
dec
repnz
xor
imul
xchg
jns
test
icebp
and
jne
lds
hlt
xlat
mov
daa
ret
jnp
and
pop
leave
inc
inc
ret
mov
test
out
popf
cwtl
scas
xchg
fwait
cli
and
adc
das
xchg
add
fbstp
outsb
push
lahf
movsl
scas
adc
into
xchg
fldcw
out
aad
lcall
sub
inc
cli
cs
sbb
add
pop
inc
shl
xor
ret
pop
push
and
movsl
cmpsl
test
add
fwait
pop
into
les
lret
or
xrelease
sbb
add
xchg
repnz
pop
pop
push
xchg
dec
insl
pop
shlb
outsb
and
sahf
pop
in
inc
nop
adc
leave
out
in
xchg
das
mov
int3
bound
add
or
mov
cmp
mov
mov
mov
bound
fidivs
rol
icebp
fcomip
int
aaa
ret
subl
pop
lret
adc
jl
sub
lds
adc
mov
sub
mov
jg
jo
jge
pop
aas
out
notl
adc
mov
mov
incb
popf
add
into
loopne
mov
xlat
sub
xchg
xchg
or
or
inc
mov
out
sub
sbb
push
repz
pop
hlt
das
xorb
mov
mov
pop
cmpsl
xchg
jb
jecxz
adc
sub
mov
xchg
mov
mov
xchg
or
push
das
inc
ficoms
dec
enter
adc
arpl
hlt
js
and
testl
arpl
mov
shlb
add
adc
xorb
mov
sarl
push
out
mov
mov
cmpsl
push
mov
sub
mov
pop
cmpsb
and
sub
ja
jp
mov
arpl
xor
aam
mov
lret
lea
jnp
mov
add
dec
mov
dec
mov
popa
fcmovbe
mov
leave
inc
orl
sbb
or
lods
xchg
fimuls
add
aas
ss
xlat
sub
sbb
sbb
mov
inc
add
mov
xor
or
stos
jge
mov
enter
rolb
decb
jge
inc
fstpl
cmp
in
cmp
inc
adc
xchg
fs
pop
cmp
stos
ret
int
jae
ss
jp
stos
push
jmp
lahf
movsl
fiaddl
jae
scas
je
stos
cmp
cmp
pop
sub
pop
jns
js
es
int3
cmc
or
pop
sub
or
push
or
or
orb
test
shrb
ss
lea
cmpsb
arpl
mov
xchg
mov
add
xchg
aam
inc
sbb
mov
jge
add
inc
or
mov
rorb
mov
popa
push
xor
jo
imul
pop
mov
js
pop
sbb
shrl
pushf
aaa
imul
sar
xchg
push
dec
push
aas
inc
add
xchg
flds
sbb
jecxz
mov
ds
lods
fsubr
sti
cmp
stc
push
sub
push
scas
mov
mov
shrb
iret
repz
pop
ds
rol
inc
das
adc
out
les
int3
out
push
fiaddl
push
pop
or
dec
int
out
mov
push
jno
es
lahf
aaa
add
pushf
aas
cmc
imul
movsb
jle
mov
ss
fists
ficoms
arpl
push
adc
mov
cli
iret
sub
aam
fsubr
lea
sbb
fmul
adcl
jmp
push
cwtl
lds
sbb
mov
mov
and
test
icebp
call
shlb
pop
adc
push
scas
sbb
inc
scas
and
dec
cli
outsl
xchg
push
shlw
scas
sbb
orb
popf
jl
mov
mov
mov
clc
pop
stc
out
pop
jmp
sub
loope
lods
ja
dec
ljmp
pop
cli
inc
mov
addb
add
pop
sbb
ja
xlat
push
xor
popf
mov
outsb
pop
jne
cmp
iret
stos
cmp
push
mov
dec
cmpsb
icebp
mov
loop
mov
fldenv
mov
xor
arpl
sbb
adc
mov
cmpsl
in
in
scas
mov
sbb
lahf
inc
push
and
sbb
in
std
into
cmp
cmp
lret
dec
out
pop
shrb
adc
lods
out
es
push
push
xor
push
xor
add
jns
add
push
cmc
or
imul
pop
push
mov
in
sub
xor
fstpt
outsl
bound
or
insl
fnstcw
pop
movsl
clc
nop
xor
in
push
pop
mov
xchg
inc
shr
lea
jno
jo
sub
pop
das
cmp
push
jne
stos
mov
sbb
aaa
shll
inc
sub
add
lret
ret
xchg
pop
loop
xor
push
or
or
add
cld
push
arpl
jne
mov
xchg
pop
push
ror
fbld
cmp
arpl
mov
das
sbb
aam
out
gs
cltd
ret
dec
jbe
dec
cmpsl
jmp
fisttps
fldt
push
inc
lret
cmp
aaa
in
mov
out
push
cmpsl
cmc
loopne
jo
icebp
mov
xor
jne
or
mov
loope
pop
lret
or
test
mov
mov
movsb
jnp
pop
mov
aad
or
in
cmp
out
fwait
sbb
xchg
fmuls
push
sub
dec
mov
cmp
pop
fnstcw
notl
xor
repz
cmp
or
and
sub
dec
add
outsl
mov
mov
fs
bound
mov
shrb
js
add
ret
fsubrs
pusha
pop
pop
pop
jecxz
outsb
and
inc
aaa
jnp
push
movsb
mov
ret
jp
das
push
mov
dec
pop
xlat
and
push
sbb
fcom
jno
cmp
xor
cwtl
adc
fwait
leave
inc
int3
sub
out
inc
mov
pop
cmp
sub
add
cmp
pop
xchg
lock
and
sbbb
shrb
nop
jecxz
push
add
mov
xor
mov
xor
les
rcll
mov
mov
sbbb
dec
mov
dec
fcoms
leave
dec
push
outsl
lcall
push
scas
popf
je
cmp
jae
inc
xor
lea
loopne
outsb
movsb
add
pop
pusha
lods
push
les
push
das
ret
loop
sahf
cli
aam
jmp
jp
arpl
jecxz
cltd
es
xchg
out
pusha
sahf
jle
shlb
jg
leave
out
sbb
stos
add
sahf
cld
hlt
movsb
inc
cmc
jl
sbb
and
iret
fadd
jp
not
add
mov
jno
sub
xchg
repnz
test
pop
outsb
adcl
xorb
test
mov
out
int3
in
xor
mov
fwait
mov
pop
pop
out
or
cmpsl
lret
cmp
loope
mov
dec
enter
inc
mov
outsl
and
ds
push
loop
fdivrs
andb
lods
out
jl
mov
imul
sub
dec
xlat
xchg
add
or
push
cmp
add
jno
lock
loopne
dec
mov
fimuls
das
and
adc
push
addr16
mov
sub
outsl
lods
dec
mov
ds
jge
ss
pop
add
ja
lds
das
push
xchg
jmp
ret
xor
pop
dec
sbb
mov
aas
and
jecxz
mov
lods
adc
ss
mov
mov
adc
ljmp
rclb
lret
cmp
and
add
mov
lret
mov
ja
std
sti
out
xchg
mov
fistpll
sbb
ds
das
pop
jp
stos
mov
xchg
sbb
lock
sub
inc
imul
jmp
xchg
ret
js
mov
pop
jmp
in
jl
push
in
cmp
jno
in
call
insl
inc
push
dec
orb
daa
or
inc
into
push
aam
in
jne
rol
push
out
mov
and
jg
mov
mov
and
mov
call
mov
add
xchg
lret
out
push
dec
lea
mov
xlat
out
add
fucompp
sbb
inc
or
cs
add
fistps
jnp
jge
call
ret
pop
push
and
loopne
inc
cwtl
xor
repnz
popa
mov
cmp
stc
stos
out
out
xchg
aam
popa
ficompl
mov
aam
pop
mov
jl
shlb
dec
sbb
imul
inc
pop
imul
sbb
pushf
insl
xchg
cmp
ljmp
jg
jle
stos
test
xor
icebp
jb
cwtl
jno
inc
jnp
push
jo
mov
loope
das
mov
sub
pop
or
test
dec
inc
or
jmp
mov
repz
movsl
mov
adc
mov
test
or
and
es
mov
icebp
mov
mov
pop
out
into
and
movsl
int3
adc
std
test
idivl
imul
hlt
dec
xchg
shll
test
fdiv
clc
shll
xor
aam
aad
sbb
lods
mov
pop
or
mov
repz
push
xchg
dec
out
push
sub
pop
mov
inc
xchg
jge
js
and
sbb
cli
jns
nop
mov
ret
test
or
mov
lods
mov
and
movl
repz
mov
cmp
inc
leave
incb
inc
ss
push
jg
add
push
test
data16
mov
cmpsb
in
aad
cltd
les
insl
pop
out
cmpsb
and
sub
ljmp
or
aam
jl
ja
sub
in
xor
or
into
add
fadd
and
mov
sub
xchg
sbbl
int3
adc
and
inc
cmpsl
nop
adc
daa
dec
rcrb
sti
addl
out
fcoml
cmp
push
cmpsb
out
gs
idivl
push
sbb
push
nop
hlt
scas
and
jecxz
lds
sbb
inc
fldenv
adc
mov
addr16
sbb
dec
stc
xor
incl
mov
enter
imul
xchg
decl
out
mov
sti
jp
add
xchg
idivl
push
push
scas
push
sarl
pop
pop
xlat
cmp
adc
cmc
or
out
out
addl
fiaddl
roll
inc
or
sbb
js
nop
cmp
stos
clc
xlat
mov
mov
in
popa
xchg
rcrb
sub
cmc
xchg
cmp
push
xor
xlat
jl
dec
or
inc
adcb
loope
jmp
fdivl
jae
scas
shrb
dec
data16
jb
jg
mov
sub
mov
add
gs
pop
mov
scas
js
test
xchg
sbb
in
pop
push
sbb
mov
ljmp
dec
insl
sbb
mov
cmp
jbe
in
xor
xor
das
or
push
mov
js
pop
push
leave
pushf
into
sub
aas
jl
add
jmp
ret
and
add
int
lret
aas
sub
dec
jmp
mov
jo
push
fldenv
les
mov
add
stos
xlat
xor
ficompl
or
add
mov
jg
add
xlat
test
in
inc
ret
mov
and
adc
cmpsl
mov
inc
jns
xor
push
popf
push
pop
fwait
in
dec
inc
cwtl
mov
test
fcomp
adc
sarb
sub
pop
insb
out
rcrb
sahf
into
aaa
mov
insl
cmp
xor
aad
jecxz
ds
into
and
mov
xchg
in
and
mov
jae
lods
sahf
pop
scas
cmpsl
js
in
jmp
fisubl
pop
mov
adc
pop
xchg
jo,pn
add
fidivl
adc
cli
bound
mov
pop
push
loop
adc
mov
inc
and
outsb
jl
or
sbb
orb
mov
lahf
mov
adc
test
push
imul
push
rcrb
aas
push
daa
arpl
mov
pop
xor
adc
fildll
adc
pop
push
shr
popa
push
mov
cmp
sub
loopne
and
aam
lock
push
or
fistpl
fistpll
mov
xchg
int
lret
xor
push
jne
lcall
xchg
stc
aas
fdiv
pop
mov
mov
ret
jne
jp
insb
xor
insb
xor
cmp
adc
out
aad
scas
repz
int
rcr
and
test
loope
jp
shl
xchg
mov
adc
je
call
jbe
push
and
divb
lea
and
jne
inc
mov
push
out
cli
and
or
jle
xchg
or
mov
sbb
inc
xor
aad
push
pop
subl
push
mov
mov
jae
or
sub
mov
lods
mov
xor
jb
push
ja
xchg
es
clc
ljmp
cmp
popa
mov
fwait
mov
call
shr
push
mov
adc
jmp
aas
jae
sbb
or
cmp
outsb
dec
adcb
lods
xlat
adc
int
mov
dec
mov
and
jmp
push
pop
mov
bound
dec
fdiv
nop
jmp
push
popf
sub
or
push
rep
sbb
gs
mov
jnp
pusha
stc
mov
or
sub
mov
jnp
sbb
test
les
aad
aaa
mov
scas
lds
inc
add
and
add
jle
mov
repz
shll
mulb
fbstp
je
in
mov
fs
mov
mov
fs
sbb
cmp
mov
pop
out
std
xor
roll
test
push
pop
dec
and
jnp
jne
jbe
sub
push
add
lds
sahf
gs
push
mov
push
lret
cltd
or
mov
psubq
imul
repz
push
mov
xor
mov
in
xchg
adc
lret
jb
aaa
xor
sarl
les
daa
scas
imul
sub
out
xor
pop
std
pop
sbb
adc
jo
push
mov
imul
rclb
or
dec
pop
add
inc
add
push
push
and
cmpsl
clc
inc
test
in
jg
push
adc
fs
jmp
fmull
xor
pop
js
dec
test
inc
sub
xchg
into
cmc
pushf
fbld
dec
clc
fistpll
push
test
and
mov
cmp
jg
jl
rcrb
loopne
inc
test
popf
xor
pusha
pop
pop
jo
and
and
fmulp
push
push
insb
mov
and
and
mov
jmp
jb
cmpsl
insb
push
call
push
pop
scas
mov
mov
jno
pop
out
into
loopne
out
adc
aam
sbb
imul
gs
add
cmp
and
loope
sbb
xlat
or
and
scas
loop
nop
and
sti
stc
mov
adc
inc
or
pop
enter
fiaddl
dec
aam
xchg
outsb
dec
push
out
push
shlb
cmpsl
push
push
test
imul
ret
stos
xchg
mov
adc
ljmp
test
testl
sarb
push
push
and
addr16
movb
mov
and
pop
mov
stc
ss
push
lods
ja
push
dec
lahf
in
add
push
mov
cld
lcall
ja
sub
jle,pt
add
repnz
cmp
inc
push
mov
xor
mov
movsl
or
xor
cmpsb
stc
xchg
pop
mov
xchg
xchg
xchg
cs
mov
inc
inc
mov
in
or
or
push
jge
sbb
mov
notb
dec
dec
cmp
aad
fwait
xchg
xor
scas
pop
and
aad
scas
hlt
ja
mov
xchg
cmp
cmpsb
xor
adc
testb
push
clc
pushf
inc
mov
sbb
push
jle
push
dec
outsl
test
xchg
pushf
pop
insl
cmp
daa
pushf
jmp
test
aam
xor
ret
mov
das
pop
enter
insl
dec
cmpsb
adc
jmp
jbe
and
aas
out
bound
shlb
xor
inc
aam
test
or
das
adc
xor
clc
aaa
jne,pn
lea
push
mov
jae
rep
adc
cli
mov
xchg
lods
mov
ds
and
outsl
adc
mov
or
lret
push
dec
dec
cmp
adc
ficoms
xor
dec
out
into
xchg
push
mov
mov
outsl
sub
pop
adc
cmp
xchg
shll
rcrl
mov
fsubs
testb
mov
or
add
xlat
mov
insb
mov
das
insb
shlb
testb
pop
push
movsb
mov
mov
enter
dec
les
icebp
mov
in
stos
ja
mov
xchg
cmp
divl
inc
mov
lret
int3
addr16
sbb
les
xlat
imul
inc
sbb
out
jno
pop
jl
add
int3
in
int
mov
mov
mov
movsl
pop
cwtl
xor
jb
jb
ljmp
mov
and
pop
mov
or
and
mov
scas
inc
in
inc
jbe
arpl
pop
sub
es
xor
test
aam
notb
jmp
fldt
cmp
pop
or
xchg
in
sbb
inc
xor
jp
fmull
and
out
inc
repz
jge
mov
test
adc
push
push
mov
lret
bound
notl
icebp
push
pop
sbb
call
or
jle
data16
mov
jne
add
pusha
filds
loopne
dec
mov
xchg
push
mov
mov
mov
test
lea
add
inc
push
push
call
repnz
sbb
jns
sti
xor
arpl
cli
jne
fcmovne
push
jp
negl
lea
or
cld
push
idivl
cmp
mov
hlt
xchg
inc
hlt
das
pop
clc
fsubs
cltd
iret
xlat
sub
mov
sub
movsb
test
lods
ret
sub
mov
cld
fidivs
clc
cmp
mov
inc
or
icebp
nop
xor
pop
xchg
xchg
mov
add
xor
orb
jb
inc
push
dec
xor
xchg
movsb
sti
mov
cmp
je
outsb
cld
cmpsb
test
pusha
add
sub
aaa
leave
or
dec
aaa
imul
rorl
repnz
inc
setb
lret
imul
inc
cltd
jo
mov
push
xor
push
mov
ds
pop
dec
inc
leave
cmp
into
lret
ret
pop
jl
dec
test
push
sub
out
pop
nop
adc
sbb
xlat
push
xor
outsb
pop
xchg
shlb
jmp
add
hlt
test
inc
fmull
push
in
cmpsl
mov
std
and
pop
sbb
pushf
aad
lods
mov
out
movsb
loopne
push
jnp
inc
aad
in
inc
loop
icebp
shl
cmp
test
pusha
or
xor
jns
sbb
inc
xchg
les
cmp
dec
push
mov
es
push
or
add
adc
popa
xchg
into
cmp
cld
pop
jge
das
add
popa
mov
sar
xchg
imul
mov
mov
es
adc
pop
push
inc
leave
sub
insb
fmuls
pop
jmp
cmp
adc
or
xchg
xchg
and
add
dec
xchg
pop
les
sub
xchg
push
jl
roll
mov
inc
stos
sbb
arpl
out
mov
push
into
dec
sbb
jo
mov
pop
cmp
ret
pop
pop
jle
je
xchg
rorl
mov
jno
aas
call
push
sbb
shl
test
outsb
xor
mov
in
mov
push
ret
mov
les
adc
push
int
insb
cmpsb
sti
pop
cmc
iret
mov
and
int3
dec
insl
insl
scas
mov
jge
push
push
xchg
stos
pop
push
int
jg
test
call
mov
mov
test
cmc
mov
neg
stos
and
and
inc
loop
lcall
mov
sbb
ret
sub
jno
popa
loopne
cld
ss
sub
loopne
inc
jae
mov
inc
mov
call
shll
inc
fnstcw
outsb
add
xchg
jbe
dec
inc
insb
adc
repnz
in
cli
pop
pop
testb
into
lds
out
adc
push
xor
loopne
hlt
xor
hlt
and
sub
sub
stos
and
mov
pop
aad
repz
sub
xchg
sub
sbbb
ss
movsb
dec
sub
jno
lret
out
mov
pushf
gs
adc
lret
cmp
jmp
test
and
add
out
or
or
pusha
xchg
pop
sbb
shl
in
fcmovnbe
xor
add
xchg
lahf
insl
or
addr16
lret
lcall
mov
roll
iret
and
push
push
insl
ucomiss
mov
fdivrl
mov
xchg
pop
ret
in
and
adc
lahf
push
lcall
xchg
sbb
aad
sbb
in
into
std
mov
mov
movsb
in
mov
out
stc
fiadds
mov
push
pushf
push
clc
jmp
cmp
fwait
pop
push
dec
lds
imul
inc
xchg
mov
inc
xor
and
fwait
mov
insb
lcall
xor
xor
mov
jb
mov
ds
sub
fwait
ds
inc
dec
jno
enter
adc
out
jmp
out
and
aas
jge
pop
test
ljmp
outsl
pop
fwait
jmp
xor
stos
and
loopne
cltd
in
mov
push
cmp
test
movsl
in
test
mov
sub
call
test
push
cmc
aad
dec
cltd
xor
mov
ret
mov
in
clc
mov
or
lret
jns
xchg
mov
and
or
loopne
mov
arpl
into
int3
xchg
pop
fidivl
mov
popa
pop
popa
insl
cmc
mov
test
dec
or
xchg
push
inc
test
nop
cmp
bound
loop
nop
xchg
popa
test
jle
pop
stos
xor
pop
inc
fsubl
or
inc
out
mov
dec
mov
pushf
and
repnz
stc
xchg
mov
sbb
es
jle
mov
adc
cmp
jno
mull
js
pop
shl
fwait
cmp
cmc
cmp
popa
and
popl
sbb
inc
fldpi
scas
adc
fsubs
dec
aad
cmp
fisubrs
push
jb
in
addb
pop
fiaddl
adc
sbb
das
add
mov
in
or
out
ret
leave
aaa
sbb
aas
fcomip
mov
lcall
inc
sub
push
push
xor
int3
push
pop
ds
xchg
outsl
lahf
mov
mov
out
bound
call
je
dec
test
lds
sbb
xchg
fsubrl
and
out
shl
xchg
xor
je
test
ja
and
jbe
or
inc
cmpsb
push
add
push
xchg
xchg
mov
test
jge
rclb
stos
or
fs
insb
in
aad
sti
cmp
ljmp
ljmp
mov
mov
or
sbb
push
test
stos
push
mov
out
sub
mov
out
sub
xchg
andb
scas
lcall
cmpsl
and
and
subl
popf
insl
xlat
push
xchg
push
test
pop
cmp
or
sbb
mov
daa
sub
fistl
or
arpl
movsl
sub
pop
clc
in
data16
insb
inc
dec
test
nop
jge
sub
pop
push
scas
in
cmp
xor
or
cli
cltd
push
adc
insb
sarb
mov
divb
add
in
add
ret
mov
iret
call
dec
loop
out
sub
jl
mov
push
ret
filds
jbe
imul
push
repnz
mov
pop
adc
xchg
scas
lods
cli
or
push
int
inc
cmpsb
and
and
cmpsb
dec
mul
adc
xchg
mov
cli
popa
xor
xor
lds
imul
push
bnd
fmul
cmpsb
out
stos
fsubs
sbb
je
dec
jns
stos
lahf
call
jns
fsubs
out
dec
sub
pop
aaa
mov
xchg
push
sbb
sub
rol
inc
lods
lret
dec
mov
mov
or
iret
push
xor
xrelease
in
push
sub
lea
cs
and
pop
xchg
leave
push
sti
stos
mov
lods
lea
test
lcall
test
fs
cli
sbb
sbb
aas
jg
movsb
jno
mov
jnp
xor
mov
mov
stc
or
dec
shlb
mov
dec
scas
in
into
adc
sahf
xchg
out
cmp
dec
or
mov
rep
negl
addr16
jg
xchg
or
in
clc
cmpsb
mov
or
jge,pn
cmp
dec
mov
xlat
call
data16
fstl
add
mov
add
stc
insl
in
jb
ret
mov
in
test
jmp
mov
sbb
shll
cmp
adc
ret
mov
or
out
hlt
inc
inc
ret
scas
cmpsl
adc
outsb
loop
sarl
call
or
add
or
jge
jno
das
cmp
adc
lods
dec
jbe
push
loop
test
outsb
cmpsl
popa
mov
out
pop
enter
add
or
mov
out
test
outsb
in
add
fadds
pop
mov
xchg
popa
insl
test
or
pop
aam
test
popf
add
les
mov
std
inc
into
cs
sbb
dec
pop
cli
mul
mov
pop
out
scas
push
xchg
aas
fists
pushf
mov
lcall
push
and
xor
int3
cmp
ljmp
cmpsb
pop
stos
dec
mov
xchg
mov
lods
add
mov
push
dec
iret
mov
out
imul
sbb
dec
add
xchg
xchg
cltd
int3
adcb
cwtl
jbe
out
leave
pop
in
lods
stos
cmp
fsubrl
cmp
cmp
lahf
fcmovb
outsl
mov
aas
fwait
push
icebp
and
call
out
sub
mov
jb
mov
shr
xor
aam
out
xchg
jne
push
ds
inc
jb
xor
sub
outsl
test
add
adcb
sbb
jno
mov
dec
popf
mov
xchg
jnp
test
iret
ror
fsts
jne
insl
nop
jns
sub
push
dec
daa
popa
add
fisubrl
imul
jmp
imull
into
xor
outsl
movsl
mov
daa
add
fistl
icebp
nop
repnz
call
xchg
leave
and
mov
out
cmp
dec
and
mov
add
lods
mov
test
add
pop
pop
or
mov
cmp
inc
and
test
pop
mov
inc
insl
out
dec
dec
pop
pop
cmpsl
jb
clc
in
out
pop
rcrb
sbb
add
sub
jp
outsl
ret
pop
sbb
mov
cmc
inc
pusha
data16
clc
hlt
lahf
test
sbb
push
sbb
sub
arpl
sbb
negl
movsb
push
add
adc
fwait
mov
pop
and
push
mov
push
shrb
dec
push
jb
ds
movsl
fidivl
cltd
out
mov
sbb
sub
leave
je
aam
mov
fwait
pusha
insb
popa
xor
fwait
and
jne
jl
fs
icebp
pop
ret
shrb
push
jno
std
js,pt
or
je
cmpsl
nop
iret
adc
loopne
lock
mov
cmp
je
cmpb
popf
dec
stos
outsl
sub
xchg
popf
push
push
mov
nop
loope
in
pushf
mov
mov
push
adc
push
dec
pop
cwtl
imul
xor
rolb
loopne
xchg
add
xchg
and
shlb
std
lret
cltd
add
mov
daa
cmp
push
daa
lcall
es
push
js
sub
push
lahf
cmpsb
or
adc
js
push
mov
das
mull
mov
mov
xor
repz
aam
xchg
js
add
dec
dec
push
loop
adc
inc
lds
stos
outsb
cmp
imul
in
add
jne
lods
cmp
in
cs
jmp
insl
out
dec
jl
jns
aad
push
push
pop
mov
ffreep
mov
adc
aaa
pusha
sbbb
in
in
es
rorb
adcb
les
and
jmp
cld
lcall
notl
ret
js
aad
mov
adc
mov
pop
and
out
fwait
pop
cmp
aam
mov
jmp
cmp
loope
out
scas
jl
loopne
ret
dec
addr16
shlb
jns
pop
sub
push
and
add
mov
adc
add
push
movsb
mov
or
insb
test
dec
roll
addr16
pop
incl
mov
xor
xor
mov
cmp
mov
mov
aam
cltd
mov
cmp
push
mov
fisttpl
jo
flds
jle
nop
out
mov
cmpsl
or
xor
negl
mov
aas
ficoml
mov
std
xchg
xchg
xor
cmp
pusha
add
sbbb
aaa
aad
pop
cs
into
mov
lret
jnp
sbbl
pop
or
jbe
pop
mov
sbb
and
xor
and
mov
sub
xor
push
fucomip
shl
cld
fdivr
jge
ss
lods
scas
clc
push
repnz
dec
add
cmc
lcall
mov
xchg
mov
loope
imul
rcrl
add
pushf
xchg
andl
lods
fiaddl
dec
cmpsl
jb
jns
cmp
into
ds
rcr
pushl
mov
fcomip
int
jg
sbb
adc
lea
dec
movntq
out
pop
push
popf
jecxz
and
mov
sub
mov
jb
dec
arpl
and
jl
mov
jne
lret
repnz
arpl
push
push
and
data16
mul
push
fsubrl
in
push
adc
outsb
pushf
pop
mov
orl
sbb
les
fiadds
adc
lea
shll
or
jp
mov
inc
inc
mov
out
mov
xchg
aaa
sub
push
sub
and
dec
fnsave
xchg
call
addr16
xchg
mov
in
out
pop
mov
fbld
adc
imul
push
fists
iret
mov
imul
pop
sub
sbb
ljmp
xchg
mov
add
cmp
stos
scas
jp
mov
pop
xchg
xor
pop
mov
sbb
mov
loop
mov
sbb
sbb
xchg
and
dec
push
jno
add
scas
popf
loope
mov
leave
mov
and
fisttpll
scas
pop
jno
push
xor
xor
pop
or
rol
push
push
cmpsb
xchg
pusha
push
loop
mov
mov
jns
xchg
loope
leave
repz
add
clc
sub
fidivs
xchg
xchg
sub
in
cmp
push
insb
or
mov
cmpsl
shrb
dec
into
out
sub
or
push
and
mov
adc
jne
fstps
push
sub
mov
clc
mov
iret
bound
or
sti
ja
iret
sahf
cmp
rorb
mov
je
sbb
out
mov
sub
clc
sbb
inc
cltd
lea
inc
xchg
int3
cmp
mov
imul
dec
push
cmp
ja
movsl
hlt
lcall
pop
mov
jmp
jno
test
adc
movsb
mov
push
dec
aam
cmc
shrl
push
call
fxch
pop
lcall
int
scas
je
cmp
cmc
sbb
jo
add
dec
out
jnp
test
ffreep
jecxz
imul
sub
in
and
call
stos
xchg
dec
xor
arpl
jne
mov
cmc
clc
sbb
dec
pop
jbe
mov
out
sub
enter
shrl
xchg
leave
xor
jmp
cmpsl
jbe
push
adc
loop
arpl
cmpsb
js
cmp
adc
shrd
pop
mov
data16
push
insb
jmp
pop
rcrl
into
jl
in
and
lock
push
add
push
sub
add
fcoms
ret
iret
mov
loop
xor
stos
shrb
push
mov
xor
push
mov
imul
je
insb
cmp
mov
cmp
mov
cmp
sbb
push
cmp
push
imul
jmp
test
push
add
add
hlt
adc
dec
repz
testl
ds
cmpsb
test
std
cmpsl
dec
jle
cmp
dec
out
dec
jns
xor
jecxz
icebp
jmp
cltd
faddp
sbb
pop
add
push
aas
push
add
out
mov
jne
push
cmp
sub
sahf
dec
aam
sahf
outsl
lea
cmp
call
out
cmp
fnstenv
mov
das
test
roll
mov
xor
fidivrl
push
int3
test
aam
push
stc
adc
pop
mov
imul
das
sbb
scas
insb
xchg
jno
mov
rclb
push
mov
movsb
push
push
mov
insl
mov
or
in
jp
out
and
dec
iret
bound
inc
mov
or
insl
or
negw
sub
sbb
repz
popa
sub
adc
movsb
ss
and
bound
sbb
push
ja
test
mov
rcl
mov
adc
jns
inc
sub
imul
sahf
sbb
or
cmpsb
jbe
xor
scas
dec
jne
cmc
nop
jb
aaa
test
aam
mov
jp
pop
adc
pop
mov
in
and
fistps
pop
push
repz
sub
test
lret
and
mov
sbb
mov
mov
subl
leave
mov
hlt
mov
sahf
into
in
mov
ds
mov
mov
iret
mov
icebp
mov
mov
jae
pop
pop
repz
mov
pusha
push
out
adc
fcomi
jle
dec
fbstp
sbb
mov
dec
push
add
fmull
pop
mov
insl
imul
mov
fldl
popf
iret
daa
mov
push
push
pushf
es
mov
push
cmp
adc
loope
inc
xor
inc
lcall
icebp
sahf
je
mov
aas
mov
add
pop
test
or
sub
cmc
loope
cmp
pop
in
stc
jno
cmpb
lea
sub
cmpsb
jl
dec
xchg
imull
cmpsb
outsl
shl
lods
loope
add
and
inc
sahf
mov
or
dec
add
dec
or
ss
sub
sub
sbb
scas
xchg
nop
int
test
mov
and
cld
add
mov
repnz
es
and
sub
mov
stos
push
daa
jge
rcr
sti
fs
pop
or
shll
aad
or
pop
fdivrs
lahf
clc
cmc
aam
pusha
repnz
cmp
inc
pop
repz
inc
pop
mov
dec
in
sbb
les
std
push
mov
dec
adc
pop
shrb
mov
xchg
pop
lods
lcall
mov
scas
call
mov
rclb
out
adcb
adc
xor
mov
out
add
and
shr
in
xchg
push
std
inc
cltd
cmp
adcb
ljmp
mov
pop
loopne
in
xchg
mov
push
cmp
orb
jg
es
inc
test
adc
out
arpl
adc
pop
inc
cmp
cmp
and
inc
mov
leave
movsb
pop
mov
push
aad
into
adc
xor
mov
mov
das
call
jecxz
stc
jns
jmp
xchg
mov
jo
jge
sarl
or
enter
aaa
xchg
outsb
push
testl
lds
mov
sub
sub
pusha
jge
jb
mov
adc
sub
dec
cmc
cmp
subl
dec
out
clc
cmp
jge
push
adc
in
mov
data16
rcl
adc
fiaddl
int
scas
xchg
insl
call
lods
xor
xorl
push
imul
imul
sub
add
xlat
pop
push
mov
mov
jae
sahf
cmp
add
outsl
mov
xchg
es
sbb
jl
flds
add
inc
fdivp
scas
gs
pop
mov
sbbl
and
mov
rcrl
inc
add
testl
xor
je
aaa
mov
outsb
cwtl
pushf
and
xor
mov
call
sub
jle
sub
jns
pop
or
ret
cmpsb
sub
std
jbe
jo
mov
mov
stos
pop
mov
movsb
orb
mov
or
js
shrl
ja
or
cmp
cmp
daa
xchg
je
mulps
cmp
in
shlb
lret
pop
dec
iret
cmpsl
xor
mov
mov
cltd
stos
adc
mov
jb
mov
pusha
adc
pop
mov
adc
add
xchg
push
xor
jge
jbe
lahf
pop
cmc
fsubl
ljmp
lods
mov
movsl
div
inc
push
pop
aaa
shll
mov
faddl
add
sbb
jl
dec
fldcw
movsl
push
push
pop
and
imul
in
aas
or
int3
aad
xlat
dec
scas
stos
nop
cli
loopne
and
stos
xor
lea
int3
mov
push
or
mov
mov
pop
add
sub
hlt
fnclex
pop
aam
mov
test
add
lcall
in
jb
sbb
add
jno
clc
add
mov
mov
fwait
data16
mov
stc
rcll
cld
call
repnz
outsb
out
shl
inc
ss
push
mov
shll
mov
xor
mov
mov
mov
out
cwtl
xor
mov
stos
ret
aaa
add
in
daa
xchg
sarb
adc
sti
rorb
out
dec
out
jl
mov
pop
call
test
pop
pop
out
push
dec
sub
push
popf
push
ja
hlt
mov
loop
sarb
push
push
or
sbb
aam
int3
and
or
push
fwait
mov
xchg
bound
mov
cld
mov
sbb
pushl
iret
push
aaa
or
les
fildll
test
stos
ss
hlt
imul
in
mov
aam
in
ds
cmp
cmpsl
sub
jp
addb
or
shrb
inc
push
mov
imul
and
pop
pop
bound
js
push
add
addr16
adc
test
fwait
clc
and
loope
sub
mov
imul
pusha
ljmp
jns
pop
push
mov
loop
sbb
xor
stos
aad
xchg
sti
repnz
lods
pop
lock
into
shl
mov
cmpb
stos
out
ja
in
insb
idivl
inc
jmp
xchg
mov
nop
cwtl
sub
clc
imul
mov
cmp
push
sti
add
out
mov
fnsave
mov
mov
fisubs
aam
ja
mov
push
inc
stc
jg
leave
fldcw
ss
add
aad
ret
sahf
xchg
shl
insl
stos
inc
push
hlt
xchg
je
xchg
adc
stos
mov
scas
push
push
dec
test
pop
cmp
movsb
xchg
stos
dec
mov
mov
mov
or
popf
and
in
xchg
or
gs
js
das
cmp
or
xchg
lret
hlt
xor
jb
mov
or
push
mov
mov
hlt
mov
push
ja
stos
mov
push
fists
inc
cmp
jno
mov
mov
int3
inc
mov
inc
sbb
int
popa
pop
jae
jmp
mov
or
xor
shrl
push
xor
xor
fmuls
aas
mov
inc
cld
dec
bnd
cmc
push
not
ds
inc
ret
sub
pop
iret
fidivl
add
jecxz
and
insb
loop
ret
sub
cmc
inc
clc
xchg
in
lock
jo
add
xchg
add
pop
cmpsb
imull
gs
sbb
out
lock
pop
jae
icebp
je
and
in
pop
add
push
lahf
mov
push
int
fisubrl
push
mov
nop
mov
cs
pop
cmp
fstl
out
fadd
push
iret
out
adc
movsl
ret
lret
stos
adc
pop
popl
dec
cs
stc
add
inc
mov
loope
lret
cmp
loopne
sub
xchg
std
dec
push
mov
and
cmpsb
xchg
stos
pushf
lods
punpckhbw
bswap
pusha
mov
shrl
popa
fisubrl
pop
jb
out
mov
mov
rol
inc
gs
outsl
mov
enter
cmpl
sub
pusha
add
das
js
sbb
xor
dec
sti
xchg
mov
mov
cwtl
jne
jb
ljmp
sarb
fs
cld
or
adc
add
fdivrp
add
popf
pusha
jge
xchg
repz
xor
ret
dec
bound
int
call
mull
sbb
mov
pusha
jo
push
cmp
lods
popa
adcl
inc
sbb
out
adc
mov
xchg
into
lods
mov
rolb
lods
push
add
pop
mov
js
sub
sub
ja
stos
mov
ret
jns
inc
add
shrl
ret
cmp
std
push
xor
in
call
and
add
inc
mov
mov
cs
mov
mov
jnp
xchg
loope
push
jecxz
popa
out
mov
imul
push
pop
jecxz
jl
add
lret
les
leave
fstl
mov
cmp
dec
adc
enter
lock
push
mov
and
and
shlb
xlat
data16
or
xor
xor
xor
xor
sbb
repz
cmp
out
sbbl
xor
add
aas
cmpl
mov
je
mov
xlat
insb
jmp
lds
dec
add
rclb
sahf
cmp
mov
leave
in
and
fistpl
xlat
frstor
outsb
mov
loop
cmp
in
int3
scas
dec
sbb
out
sub
loop
inc
shll
cmp
xchg
cmp
call
pop
jp
xlat
in
and
sbb
push
ret
mov
ds
xor
and
repnz
scas
into
lret
call
xchg
popa
daa
mov
test
daa
cmp
sbb
loopne
add
add
fistpl
jno
sbbb
jp
in
or
sub
pop
leave
push
sub
push
scas
cwtl
jmp
aas
push
xor
push
push
rcr
xchg
dec
jns
ds
mov
cli
in
pop
or
repz
das
outsb
loop
js
test
frstor
pop
shlb
out
imul
mov
push
shll
aas
push
leave
add
in
dec
dec
in
aas
pop
or
lods
inc
push
mov
iret
bound
inc
cmc
lahf
pop
and
lds
into
rcl
ret
jmp
mov
stc
pop
jl
xchg
mov
pop
psubb
insl
shlb
out
inc
je
test
pop
mov
stc
mov
mov
mov
jle
stos
sti
push
and
sbb
movsb
pop
cmp
das
dec
mov
fcomps
push
add
push
sub
push
push
sbb
push
xor
pop
push
jecxz
sti
dec
test
xchg
imul
inc
pusha
mov
add
mov
loope
pop
mov
mov
in
or
orl
test
icebp
mov
pop
cmpsb
jge
push
out
shlb
int
add
push
ljmp
pushf
push
and
rep
inc
cmpsl
add
repnz
pop
cmp
xor
stos
fld
popa
push
sub
adc
push
xchg
jo
jmp
lods
cli
inc
push
fwait
mov
add
js
jbe
inc
cmpb
rcll
in
ret
xor
xchg
or
xchg
jo
inc
sbb
mov
cltd
and
into
ret
orb
mov
cmc
in
jnp
pushf
lods
aaa
mov
or
rorb
arpl
fstpt
sahf
sub
imul
jo
sti
repz
lahf
pop
insb
xchg
cmpsb
dec
or
xor
push
jl
cmp
jnp
fmul
subb
mov
xor
filds
into
mov
sbb
lahf
adc
add
aad
lods
xchg
or
lods
scas
inc
mov
xchg
aam
jl
sti
dec
bound
adc
in
aas
jns
pop
cld
loopne
dec
in
mov
push
dec
add
popa
sahf
sub
in
fistpll
push
shlb
pop
sub
idivl
shll
rcll
or
sub
jns
dec
negl
sbb
xchg
jb
aam
inc
js
push
or
mov
cmp
xchg
enter
mov
imul
js
ljmp
or
jns
shll
xor
lods
push
sbb
adc
aad
push
nop
mov
or
adc
clc
mov
daa
mov
mov
lret
popf
jp
xchg
xor
out
inc
dec
push
je
push
or
data16
dec
adc
sti
outsb
add
addb
pop
repz
movsb
mov
in
jo
push
shlb
sub
add
scas
scas
enter
popf
xchg
xor
xor
jne
gs
aad
mov
xchg
test
lds
pop
test
ficomps
push
jecxz
push
iret
fldl
cmp
cltd
dec
lret
sub
push
mov
data16
mov
cmpsb
test
lahf
mov
scas
fidivs
fists
popf
inc
test
inc
xchg
jecxz
or
mov
nop
mov
dec
outsb
idiv
cli
fsubr
enter
fcomps
jl
sbb
xchg
cwtl
lcall
push
dec
mov
and
gs
cmp
jecxz
inc
push
out
jns
imul
jbe,pn
loop
mov
stc
jg
sahf
jne
icebp
shl
mov
int
jmp
shrl
jle
cltd
and
cmpb
sub
or
jle
cmc
dec
dec
jg
jne
repz
mov
int
lea
add
xor
cmp
xor
sbbb
jnp
scas
movl
pushf
aad
fstl
loop
icebp
aad
hlt
repnz
lds
ss
out
jmp
pop
and
pusha
je
jae
or
or
mov
lock
mov
pushf
cmp
jno
cmc
dec
lods
cltd
fsubrs
push
stos
dec
mov
cmc
int3
cmp
sahf
je
xchg
nop
and
stc
hlt
pop
pusha
adcb
sarl
mov
and
cs
sub
add
sub
add
pop
movsl
loopne
leave
push
mov
scas
mov
xchg
sub
sbb
push
pop
cmp
pop
inc
push
pop
push
movsb
stc
pop
mov
dec
movsl
adc
insl
pop
or
cmp
arpl
add
in
mov
push
cbtw
aaa
jo
stc
test
call
fcmovb
hlt
movl
notb
jnp
outsb
insl
outsb
xor
push
cltd
repnz
and
xchg
in
mov
cmpl
adc
scas
pop
nop
or
outsl
push
lea
cmp
pop
mov
cmpsl
roll
insb
cltd
cwtl
out
dec
fmul
gs
sahf
or
stos
das
shl
es
mov
gs
xor
or
and
jne
mov
int3
jnp
das
adc
aas
shll
mov
pop
mov
push
out
testl
pop
push
lcall
cmpsl
lock
jb
mov
mov
push
lret
add
add
fstl
and
repz
jl
xchg
fs
lret
or
scas
mov
je
scas
dec
loope
xor
push
push
mov
pop
out
out
cmpsb
fcoms
pop
mov
bound
lahf
adc
push
idivb
fs
sbb
lcall
mov
xor
addb
pushf
ss
lahf
fcom
imul
jg
nop
sub
xlat
jg
or
std
jge
ffree
jecxz
aaa
push
fstpt
int3
and
mov
mov
cmp
rcrl
push
inc
aam
sub
test
and
inc
sub
loop
pop
xchg
pop
aas
pop
adc
xor
ss
push
dec
bound
popf
repnz
stc
rorb
stc
bnd
stos
scas
mov
jecxz
mov
add
movsb
adc
fcomps
cmp
lds
ror
mov
cmp
fbld
mov
or
dec
ret
lret
clc
adc
dec
out
lret
pop
add
dec
int
mov
data16
push
pop
jns
daa
dec
cli
cli
cs
pop
pop
jmp
xchg
lret
xchg
add
fdivl
and
xchg
jp
jmp
xchg
xchg
roll
enter
xchg
mov
inc
mov
inc
pusha
mov
sbb
jmp
faddl
mov
xchg
cld
xchg
cmp
dec
mov
rcrl
movsb
addl
icebp
sub
sub
jbe
sbb
sbb
mov
loope
cmp
cmpsl
test
fidivs
clc
rcrl
and
jl,pn
or
call
sbb
rcll
popf
sbb
fiadds
xchg
int3
test
cmpsl
jb
jbe
imul
pop
das
bound
outsl
lcall
jnp
inc
mov
inc
push
out
cmp
or
testb
add
loope
push
mov
xor
inc
sahf
rolb
lods
push
adc
test
push
mov
icebp
inc
ret
push
fcomp
mov
mov
dec
inc
sbbb
cltd
leave
arpl
ljmp
cmp
out
adc
lahf
mov
add
ret
jge
xchg
arpl
mov
cmpsb
push
in
js
adc
test
pop
push
dec
ficomps
cli
sub
or
sahf
or
js
sub
fldenv
xchg
insl
addr16
filds
rol
dec
aas
push
adc
inc
shrb
sahf
pop
das
sbb
cld
adc
xchg
mov
stos
es
out
add
in
adc
out
pop
or
push
ja
cmpsl
sub
jb
cli
iret
shl
aad
and
lahf
pop
mov
mov
add
fs
lea
ret
push
in
lcall
rorl
cmp
std
xor
frstor
dec
push
cmp
aaa
repnz
in
aad
xchg
xchg
sub
ret
lock
out
cmp
flds
movsb
xchg
jmp
jns
repnz
mov
out
dec
mov
loopne
or
scas
mov
out
sub
mov
cmc
mov
mov
jg
jae
pop
cmp
sahf
cli
mov
adcl
or
popa
pop
cld
push
cmp
pop
subb
cld
iret
push
or
mov
sub
mov
test
mov
cmpsb
lock
lss
test
call
or
scas
sub
stos
mov
or
fstpl
data16
adc
sbb
sbb
aas
sbb
jno
jecxz
addr16
mov
add
jp
enter
inc
in
popf
mov
cmp
and
or
hlt
xlat
shr
mov
ja
sub
push
pop
pop
out
xlat
es
movsb
mov
in
out
xchg
xchg
dec
inc
dec
jbe
aaa
cmp
jnp
ret
pop
hlt
lods
mov
rol
xor
shll
stc
imul
mov
or
push
and
jb
jp
daa
test
mov
xor
inc
mov
dec
jno
dec
add
jbe
dec
mov
add
pop
sbb
fldcw
cmp
jnp
add
inc
and
test
mov
mov
outsb
inc
subl
or
push
xor
mov
outsl
stos
pop
pop
fnstsw
add
adc
push
in
or
cmp
stos
or
inc
mov
jmp
cmp
les
aas
sbb
add
mov
jmp
sub
imul
into
push
pop
pop
sub
xorps
ja
cmpsb
mov
mov
fimuls
dec
inc
push
dec
push
mov
mov
lret
jo
and
ljmp
ljmpw
add
xchg
stos
inc
out
add
cwtl
jmp
test
mov
movsl
stc
lods
sbb
jg
shlb
enter
adc
xchg
es
mov
cltd
fnstenv
dec
gs
pop
mov
fiadds
adc
test
xorb
sahf
dec
pop
adc
in
xchg
out
outsb
mov
sbb
xchg
das
sub
inc
lcall
or
andb
mov
mov
push
pop
dec
cli
xchg
stos
mov
mov
dec
mov
mov
fstl
lods
std
sbb
inc
dec
jmp
inc
ret
cmc
sbb
sub
fists
and
addr16
push
pusha
lea
jb
sbb
cld
xor
and
jecxz
lcall
sub
mov
sub
xor
pop
std
lret
lea
sbb
push
xor
out
mull
push
into
xlat
mov
insl
testb
lods
cmp
mov
or
and
push
adc
push
test
mov
pop
add
or
dec
lods
mov
xchg
cli
push
ss
cmpsb
cltd
stc
jp
cld
sbb
and
cltd
ljmp
add
lret
mov
cltd
in
dec
pop
sub
inc
out
cmp
fdivrs
scas
vpperm
sub
call
inc
jne
fs
sub
or
jns
gs
jnp
adc
mov
pop
bound
decl
shlb
fwait
xchg
push
xchg
push
xor
add
inc
add
loopne
sti
cltd
cmp
hlt
push
jmp
adc
sub
mov
mov
fsub
adc
xor
dec
loope
adc
push
mov
xchg
lds
xor
or
aam
popf
into
rol
mov
sub
or
call
pop
jo
push
push
in
divl
negl
in
imul
scas
bound
cmp
xchg
cltd
in
push
mov
stos
nop
add
in
dec
cmp
dec
jle
fimuls
int3
adc
cli
cmp
jbe
jmp
inc
adcl
pop
cmp
jae
out
lea
pop
mov
mov
sahf
lret
push
mov
mov
jnp
jae
sahf
clc
sti
call
sub
inc
jno
aas
ror
push
fs
or
cmp
leave
arpl
std
mov
xchg
mov
mov
in
mov
imul
jno
xchg
jecxz
cmp
xor
jmp
lock
loopne
mov
cmpsl
pushf
fnstcw
mov
in
fidivrs
scas
out
cwtl
in
lea
xchg
cs
jb
inc
push
xor
sub
call
jmp
dec
mov
out
scas
fldl
int3
popa
lahf
push
sbb
aas
je,pn
jne
cmp
jae
test
ror
clc
lods
stc
dec
adc
mov
sbb
or
inc
rcrl
and
ds
add
je
add
cli
or
sbb
test
imul
mov
jae
xchg
stc
pop
sbb
lds
outsl
ficoml
add
call
int3
xor
lcall
outsb
lock
or
jb
push
xchg
pushf
stc
cmp
or
inc
lods
lea
mov
rcll
testb
pcmpeqd
hlt
pusha
int3
pop
adc
inc
xchg
xchg
add
mov
xchg
jl
ret
sub
xrelease
add
mov
jae
inc
mov
mov
fnsave
cmp
jbe
jl
and
mov
adc
ljmp
pop
ret
add
sti
stos
sbb
sbb
xor
inc
mov
and
dec
mov
cmp
test
ljmp
add
sub
and
xchg
pop
arpl
lahf
divl
leave
lock
fdivrs
dec
aad
dec
mov
sub
and
addr16
inc
mov
sub
scas
mov
lret
sahf
dec
cmp
jb
mov
fsub
xchg
cwtl
jno
in
imul
dec
pusha
mov
stos
push
mov
enter
pusha
pop
and
insb
push
out
inc
shlb
add
roll
stos
mov
cs
xor
inc
mov
pusha
push
aaa
xchg
cmp
mov
and
rclb
xchg
dec
inc
call
push
mov
inc
outsb
inc
cmp
sbb
paddw
incb
rcrl
xlat
jmp
push
mov
dec
loopne
cmp
sub
std
dec
sar
mov
push
xor
xchg
stc
adc
xor
incb
sbb
push
lahf
cmc
filds
push
mov
push
pop
imul
xchg
push
in
bound
push
adc
cmp
and
mov
dec
jo
mov
out
inc
outsl
loope
jbe
xor
mov
push
loope
ss
roll
jbe
pop
data16
cld
add
leave
stos
pop
jae
sub
int
xor
sub
mov
sub
fcomps
and
push
aaa
stos
pop
inc
mov
arpl
push
ret
xchg
in
jbe
repnz
pop
pop
aas
xchg
cmpsb
in
mov
and
cmp
mov
inc
cmp
int
sbb
icebp
sbb
pop
xchg
scas
mov
hlt
arpl
pop
imul
xchg
mov
or
cld
lea
mov
inc
test
mov
add
sbb
push
sub
iret
stos
jl
jge
pop
imul
test
add
in
pop
push
pop
loope
or
jg
sbb
adc
push
out
xchg
jne
push
mov
test
adc
cmpsb
add
cmp
ljmp
push
sti
or
icebp
push
adc
out
icebp
pop
stc
movsl
je
xchg
scas
cmp
add
sub
jg
int3
outsb
adc
daa
cwtl
jle
xchg
sti
push
ret
mov
and
sub
inc
sub
xchg
push
test
rolb
je
and
sub
or
mov
adc
pop
mov
push
fs
sub
testb
imul
lcall
xchg
mov
lea
hlt
insb
movsl
inc
mov
cmpsb
push
test
jl
pushf
dec
cmpsb
jns
pop
and
mov
xchg
add
int
mov
outsb
inc
in
sub
fucom
xor
mov
pop
jno
dec
aam
xlat
xchg
movlps
imul
out
and
fisttps
data16
lahf
pop
in
xchg
aam
icebp
xchg
xor
mov
ljmp
add
ljmp
jl
mov
mov
mov
ficomps
pop
dec
pushl
sub
inc
repnz
sbb
leave
repnz
inc
mov
daa
imul
mov
mov
push
sbb
pop
pop
inc
repz
dec
jge
dec
sarb
jae
push
stc
cwtl
je
fwait
sub
mov
bound
mov
cmp
arpl
fnstsw
into
es
out
or
inc
sarl
repnz
add
xchg
pop
cmp
scas
mov
mov
sub
icebp
dec
xor
test
std
dec
push
xor
fisttpll
add
mov
lahf
mov
jo
mov
push
push
sarb
push
std
je
xchg
jnp
out
cltd
mov
add
xchg
and
mov
and
push
iret
mov
dec
adc
outsb
adc
fiadds
xchg
cmpsb
dec
adc
and
dec
ficomps
xlat
push
add
push
and
addr16
in
outsl
xor
sbb
movsb
cmc
mov
add
or
insl
js
jg,pn
mov
pop
mov
lods
push
mov
imul
inc
enter
inc
out
push
or
ss
repnz
data16
dec
push
into
js
pop
and
adcb
or
or
pusha
adc
add
ret
mov
out
stos
adc
je
stc
sbb
out
sub
outsb
mov
jmp
mov
xor
fdivl
mov
inc
add
popf
sub
ljmp
cmpsl
int3
jecxz
dec
mov
or
dec
in
rcll
xchg
outsb
repz
pop
or
or
push
hlt
mov
pop
sub
fimuls
sub
pop
call
shll
out
mov
push
pushf
xchg
out
mov
mov
push
iret
rcll
popa
xchg
pop
sbb
sub
sub
adc
in
sbb
mov
or
je
gs
movsb
sub
lock
pop
imul
test
push
fnsave
stos
push
stc
ret
popa
or
nop
fwait
jns
fisubs
insl
loop
std
roll
or
mov
pop
test
mov
ret
cmp
loop
mov
inc
inc
xchg
in
pop
cld
mov
push
lret
adc
ljmp
or
jecxz
test
repnz
pop
test
mov
cmp
mov
xor
ds
fwait
mov
push
lret
jne
cmp
leave
mov
ja
sbb
lret
outsb
shll
dec
sub
out
add
ss
fldt
into
push
cmp
cmpsb
mov
cld
jbe
mov
lods
rsqrtps
movsl
mov
jb
add
xorb
ds
push
adc
mov
jge
jg
outsl
sub
inc
gs
enter
loope
pop
or
aad
loope
arpl
mov
pop
sarl
imulb
push
mov
xchg
fyl2x
push
adc
sub
cltd
and
divl
mov
dec
and
or
insb
into
xchg
ficomps
xor
fmulp
in
fdivrp
nop
out
data16
pop
add
pop
repz
cli
pop
add
cli
pop
clc
inc
sti
sbbb
cmp
jmp
fldcw
push
idivb
push
mov
jp
mov
sbb
pushf
pop
ficoml
sub
imul
icebp
out
aam
nop
push
popf
sbb
or
sub
mov
in
jge
sarl
push
jnp
add
arpl
inc
mov
push
pop
or
xor
repnz
mov
dec
or
lods
ret
mov
stc
add
cld
mov
shrb
loop
rcrl
mov
shlb
cmp
inc
fcompl
push
lret
insl
repz
jmp
push
out
addr16
mov
push
adc
jp
cmpsl
inc
add
or
popa
ret
into
cltd
and
imul
orl
sbb
xchg
lahf
adc
je
fs
push
mov
lcall
repz
mov
adc
inc
call
xor
popf
fcomps
inc
pop
cmp
movsb
test
mov
test
or
dec
movsb
lret
xchg
or
test
in
sbb
cmpsb
add
mov
mov
shl
rorl
pusha
and
sbb
dec
insb
pop
rorl
pop
xchg
xchg
sbb
ss
insl
jb
hlt
stc
icebp
jns
pop
in
and
adcb
pop
mov
sbb
push
sbb
fcoml
mov
mov
pop
push
scas
push
pop
xchg
test
fsubl
mov
scas
cwtl
or
inc
pop
mov
inc
push
jl
jl
iret
fadds
out
ds
fadds
mov
sub
adc
dec
adcb
movsb
in
mov
mov
or
sub
lea
ds
push
ljmp
imul
hlt
stc
push
addr16
add
push
inc
sbbl
jo
cli
ret
pushf
sbb
jbe
adc
das
dec
call
dec
inc
dec
jp
leave
out
mov
lea
dec
xchg
aaa
sbb
scas
add
fcompl
add
jne
mov
pop
jle
lods
in
sbb
cmp
and
pop
xor
and
xchg
out
stos
mov
ja
cld
in
mov
push
sbb
lahf
scas
push
out
movsl
ja
push
and
ljmp
sbb
ss
pop
mov
fnstsw
xchg
add
cltd
sub
aam
enter
mov
shll
mov
sub
sub
imull
push
out
inc
push
pushf
adc
addr16
lock
sarl
jge
stc
cs
je
xor
cwtl
dec
and
or
push
adc
subl
aad
rorb
aad
jno
iret
jp
ljmp
inc
add
call
enter
fs
je
enter
fwait
xor
or
pop
stos
fcoms
es
fildll
rolb
mov
repnz
or
push
lcall
mov
imul
sub
ret
mov
aas
inc
or
test
sub
push
mov
and
hlt
cmp
and
out
repz
test
and
adc
xchg
pop
mov
push
out
jnp
mov
xor
mov
out
popf
into
shrb
int
xchg
test
into
xchg
outsl
lret
cmp
mov
or
mov
loopne
xchg
stos
dec
pushf
xor
rorb
aas
daa
popa
daa
shlb
adc
mov
xor
les
xor
push
sub
mov
outsb
inc
sbb
cmp
jne
pop
jmp
mov
dec
js
imul
in
dec
xor
or
pop
sub
iret
sbb
lcall
fwait
pop
mov
adc
inc
test
pop
rol
imul
psadbw
add
push
jl
test
filds
dec
cwtl
pop
push
scas
push
push
lret
fnstenv
test
adc
cmp
xchg
sbb
scas
dec
cmp
or
xchg
xchg
imul
xchg
pop
jp
jb
xor
pop
sti
jecxz
fbld
test
inc
outsb
adcl
lahf
jae
rcr
into
cmp
insl
daa
xor
or
jb
sub
pop
mov
fstl
js
adc
mov
leave
mov
mul
jl
insb
lret
xchg
shrb
pop
sub
enter
xchg
punpckhdq
cmp
dec
movsb
test
xor
call
movsb
fstp
dec
xchg
add
jl
jge
loopne
outsb
fldl
cmp
add
cltd
and
dec
out
cs
push
comiss
pop
xchg
mov
sub
ja,pn
je
std
xor
das
mov
leave
fcmovnb
mov
push
adc
movsl
mov
mov
push
pop
out
mov
lret
fst
sub
notl
mov
add
loop
cmc
mov
jne
mov
jo
jo
inc
mov
inc
lds
insb
jge
sub
jmp
and
jmp
push
dec
and
mov
push
cmp
sbb
cmp
gs
dec
bound
imul
push
cwtl
cmp
or
in
or
push
jns
stos
or
jbe
ret
ss
jp
cmpsl
dec
out
push
xchg
push
or
sub
and
or
popa
sbb
sbb
cmp
xchg
jecxz
inc
stos
pop
sub
or
frndint
jnp
or
mov
mov
ljmp
sub
loop
jp
add
sub
pop
das
pop
or
or
ret
cmpsl
hlt
push
mov
xor
test
fmull
sbb
xor
inc
sarb
mov
mov
inc
cmp
aas
out
xorl
sbb
and
inc
sub
cmp
jmp
insl
cmp
loopne
fcoms
lahf
xchg
cli
jo
shlb
addl
mov
insl
in
cmp
jle
hlt
out
pop
mov
popa
lea
js
lock
push
pop
insl
and
aam
mov
cmp
push
test
insl
sub
xchg
mov
insl
and
scas
sub
repz
sti
and
rcll
dec
inc
fdivs
std
rclb
xlat
jle
pop
int
push
test
andb
aad
mov
leave
in
cmp
sub
push
scas
mov
pop
repnz
mov
imul
outsb
cmc
out
imul
imul
cmp
aaa
rol
cld
insb
jns
imul
addl
jns
push
iret
in
mov
dec
fiadds
sub
inc
or
xchg
loopne
in
or
mov
movsb
cmpsb
cmp
mov
mov
insl
sbb
cmp
dec
mov
js
jle
jae
stos
pop
mov
push
push
inc
andl
es
mov
and
pushf
inc
dec
std
push
mov
shlb
mov
sarl
arpl
mov
jle
sub
adc
ret
movsl
mul
xchg
addr16
ljmp
pop
jmp
not
sub
push
dec
stos
dec
mov
mov
mov
sbb
or
cmp
icebp
and
sub
cs
nop
cmp
orl
cli
inc
adcb
imul
and
jp
xor
stos
sbb
mov
add
cmpsb
pusha
lcall
xor
out
inc
cmp
movsb
leave
xor
cmpl
mov
xchg
call
ss
adc
fcomip
pop
xorl
fwait
pop
and
and
arpl
mov
popf
sbb
sub
lcall
dec
adc
xor
loop
out
mov
inc
cmpsl
xor
scas
imul
pop
dec
cmp
cmpsb
je
and
cmp
or
cmp
in
mov
fadds
mov
jg
call
mov
stos
test
stos
pop
mov
into
gs
adc
pop
test
xchg
aad
jbe
filds
out
mov
mov
jnp
lock
push
div
std
jmp
cmc
push
push
fisttpl
xchg
cltd
xlat
into
in
test
clc
or
mov
int
mov
in
outsl
jae
mov
jl
leave
jp
xorb
das
outsb
inc
push
pop
fs
sub
dec
adc
dec
push
push
dec
sub
cwtl
adc
cmp
lods
aam
add
or
cmpsb
adc
jno
out
pop
out
sahf
test
push
orl
sar
fstpl
sbb
cmpsb
stc
enter
popf
and
jg
loopne
pop
lods
rcl
add
cmp
pop
scas
lahf
sub
xchg
adc
adc
xchg
add
dec
loope
inc
clc
push
cmp
cld
and
push
fadd
das
xor
fsts
cmpsl
inc
gs
stos
daa
cltd
sub
pop
cmpl
std
scas
mov
aam
fsubl
nop
xchg
mov
inc
mov
jae
fcomps
mov
push
jbe
lret
ret
cmc
jne
dec
or
dec
jno
xchg
mov
cmpsb
cmc
xor
mov
in
jae
lcall
ja
mov
mov
inc
push
sub
xor
push
jp
push
mov
sub
xor
lds
inc
sahf
xchg
push
sti
scas
arpl
adc
inc
lods
fwait
shll
addr16
push
out
lcall
dec
mov
inc
adc
in
mov
jbe
jle
js
jnp
stc
jnp
jl
xchg
jmp
mov
mov
je
call
out
or
mov
aam
mov
inc
aas
pop
inc
or
cltd
xchg
mov
sahf
mov
xor
loope
dec
iret
sbb
addr16
mov
cmp
insb
push
mov
aas
push
fidivrs
or
mov
mov
add
cs
in
add
sub
xorb
xor
cmc
dec
rorl
sbb
stc
clc
dec
add
cli
jle
push
jmp
dec
xor
in
cltd
lret
out
sti
inc
scas
inc
stc
in
shr
arpl
in
cmp
testb
addr16
icebp
cmp
push
mov
cmpsb
scas
clc
rclb
sub
aad
leave
fcomp
hlt
popf
adc
lahf
inc
mov
jne
xor
addr16
scas
sbb
lock
out
jno
daa
in
popa
adc
push
inc
mov
lds
dec
ja
test
xchg
nop
add
jns
test
inc
lahf
adc
insb
lock
cwtl
cli
sub
push
mov
cwtl
or
mov
push
cli
or
add
scas
adc
fsubr
pop
mov
pop
adc
add
or
mov
add
mov
mov
fists
push
pop
or
call
jge
ljmp
cltd
pop
adc
sbb
push
inc
scas
repnz
mov
inc
adc
sub
push
mov
mov
mov
adc
fistpll
in
fnstsw
arpl
inc
imul
mov
es
jb
jge
leave
rcl
stc
dec
loope
xor
fs
adc
loop
mov
mov
and
test
jno
loop
jecxz
mov
mov
test
popf
push
lcall
push
sbb
movl
movzwl
sti
ror
iret
adc
sbb
jo
mov
add
dec
loop
jnp
hlt
xchg
enter
sbb
nop
mov
outsb
outsl
mov
in
fistps
mov
and
sbb
test
sub
lea
adc
gs
pop
leave
and
or
pushw
mov
dec
jo
inc
imul
mov
ljmp
push
add
xor
and
lea
xchg
idivl
xchg
fsubr
push
dec
inc
adc
adc
jg
ja
vpsadbw
in
imul
in
push
adcb
sub
xchg
cli
arpl
cmp
push
and
cld
inc
push
popf
pop
add
sbb
sub
or
xor
or
jle
stos
loopne
scas
xchg
mov
xor
test
adc
ret
push
gs
sbb
repnz
fisttpll
or
clc
add
inc
pushf
xchg
mov
ret
fiaddl
pop
scas
cmpsb
aam
add
jae
addr16
repnz
mov
lock
mov
push
or
lock
scas
cmc
out
rcll
lahf
xchg
iret
sbb
xor
cmp
mov
in
push
test
adc
fmuls
sbb
xchg
push
mov
or
movsb
sub
xor
mov
jae
sub
dec
sub
xor
lods
out
or
sbb
jp
ficoml
cmp
push
je
push
or
add
into
cmovbe
int
sarb
or
repz
sub
or
jne
adc
call
jnp
jg
cmpsl
stos
movsl
xor
movsb
mov
dec
testl
sti
frstor
fst
xor
test
dec
cmp
sbb
pop
orl
int3
push
fstpl
in
cmpsl
inc
stos
pop
or
adc
ss
and
cltd
dec
mov
ret
inc
and
movsl
mov
sbb
loopne
mov
mov
popf
push
in
push
jno
sahf
mov
adc
arpl
xchg
and
adc
push
ret
sub
xchg
sarb
sbb
mov
jb
sti
xlat
or
aas
popf
imul
xchg
aad
outsl
ljmp
scas
pop
or
sbb
in
xchg
cmp
call
sub
xchg
jl
and
popf
push
aas
push
cmp
dec
test
stc
clc
mov
movsb
cli
push
add
insb
xor
mov
adc
or
jmp
pop
xchg
insb
daa
sbb
insb
adc
dec
aad
lea
dec
nop
sar
push
mov
jle
scas
mov
icebp
cmp
pusha
cwtl
ret
lcall
into
cmpsb
inc
in
notl
pop
ja
stos
dec
pop
call
pop
xlat
adc
mov
hlt
lret
push
push
xor
cmpsl
lahf
push
xorb
or
mov
xor
jecxz
cmpsl
inc
lds
sbb
shrl
fs
pusha
pop
les
jle
mov
xchg
mov
add
push
fdivs
adc
clc
mov
stos
inc
jmp
mov
cmp
push
jne
xor
inc
outsb
popa
lds
sti
fwait
xor
mov
xor
rep
or
push
sub
and
push
imull
sbb
loope
xchg
call
bound
xchg
repz
mov
jl
and
cmp
ficomps
mov
loopne
push
lahf
jecxz
mov
jp
lods
mov
lahf
dec
xchg
push
imul
test
add
cmp
sub
mov
pop
lahf
mov
aas
in
jg
sbb
jg
popa
dec
mov
call
movsb
lret
int3
adc
mov
repnz
sub
sub
mov
dec
cmp
test
aas
ret
cmp
test
iret
loope
inc
pop
mov
mov
ja
cmp
test
test
or
dec
mov
iret
mov
out
addr16
push
subb
xchg
push
in
std
mov
inc
mov
je
popa
push
pop
leave
ss
aaa
mov
mov
femms
rclb
jp
sbb
in
ja
jle
jnp
gs
aas
insb
inc
dec
or
jmp
popf
mov
jecxz
dec
push
aad
pop
dec
xchg
sahf
inc
adc
inc
popa
push
fldt
test
pushf
jmp
jmp
addr16
ret
push
sub
imul
xor
mov
in
in
dec
mov
pop
xchg
in
shrb
add
xor
jbe
mov
loopne
rcll
or
in
pop
mov
sbb
push
cmp
aam
sahf
cmp
cmp
add
adc
js
xchg
decb
push
add
cmp
jnp
data16
xlat
xchg
jb
mov
and
jne
xchg
sbb
add
jge
imul
aad
xor
sahf
push
xchg
mov
and
jns
mov
mov
cmpsl
jb
cwtl
cld
adc
pop
dec
lahf
out
cltd
popf
loope
test
sbb
in
push
sbb
and
lret
rorl
add
mov
jb
leave
add
and
pop
cmc
lcall
lock
ret
rcll
mov
clc
push
js
hlt
inc
stc
mov
arpl
bound
mov
addr16
adc
rol
scas
gs
je
pushf
adc
and
xor
mov
add
cwtl
inc
arpl
jns
mov
pop
insb
inc
jno
or
jae
fcoml
and
cmp
mov
sbb
or
out
rorl
mov
into
jecxz
popa
sbb
dec
out
mov
cmpsl
mov
fcompl
inc
stos
stc
jge
dec
call
das
xchg
test
and
jmp
pop
xor
mov
add
cmp
jecxz
lret
inc
cmp
loop
mov
adc
pop
mov
fwait
pop
add
rorl
mov
and
xor
int3
jecxz
bound
jmp
std
fwait
aaa
add
xchg
add
sub
or
lods
jae
lods
add
lret
mov
aad
pop
mov
jb
xchg
clc
jno
sbb
adc
data16
mov
aad
adc
xchg
enter
xor
sub
hlt
out
fmull
test
xchg
xchg
xlat
push
inc
cmp
mov
xchg
stos
shlb
je
mov
js
sub
test
sbb
les
sahf
addb
std
imul
mov
ss
int
add
in
outsl
add
movsl
test
aaa
loope
sahf
ljmp
adc
loope
filds
sub
jp
scas
int3
and
aaa
sbb
mov
mov
jbe
inc
adc
dec
mov
xchg
ficoml
inc
sub
mov
xchg
jle
or
popa
mov
mov
adc
push
sbb
cli
popf
cmpsl
mov
cld
pop
xchg
sbb
pop
cmpsl
aas
ja
push
in
jb
dec
ds
sub
insl
ss
stos
mov
fnstcw
xchg
cmpsb
js
test
add
fidivl
xchg
xchg
aad
and
cmp
aaa
inc
icebp
push
dec
int3
loope
test
das
and
cmp
ffreep
mov
scas
stos
sbb
fsts
ljmp
push
pop
int
jo
ret
lcall
mov
es
inc
adc
dec
cmp
push
rorb
adc
sub
adc
je
movsl
pop
ds
cwtl
stc
mov
mov
sahf
add
sub
mov
cmpsl
nop
add
push
push
jmp
push
fbld
jge
das
add
or
mov
nop
ucomiss
jnp
push
daa
mov
xchg
mov
pop
incl
push
sbb
pop
sbb
or
or
push
pop
sbb
mov
mov
sbb
add
xchg
mov
pop
push
xor
inc
mov
mov
jo
cmp
stos
testl
inc
adc
insb
add
cs
mov
jbe
adc
inc
xchg
sub
or
xchg
jg
ret
in
sub
mov
ficoms
addb
inc
adc
and
push
lret
ja
jge
test
in
dec
addl
jg
fdivr
shrl
mov
insb
jne
xchg
add
and
punpckhwd
dec
pop
inc
lods
iret
mov
jo
fisubrs
hlt
cmp
xlat
xchg
sti
into
iret
push
insl
sub
and
shlb
add
mov
mov
pop
mov
cltd
int3
push
stos
add
fidivs
dec
xchg
mov
inc
fsts
jle
dec
cmp
and
cltd
xor
add
xor
frstor
xchg
xlat
lcall
jp
lahf
or
sub
mov
neg
jecxz
int
shr
push
lahf
lahf
sbb
xchg
int
pop
in
hlt
mov
push
lret
clc
xor
out
in
or
push
jecxz
popf
lcall
inc
hlt
aas
xchg
fists
cld
pop
sbb
test
dec
or
push
mov
call
shrb
adc
cltd
or
aaa
mov
xchg
data16
repz
jmp
iret
sarl
cmp
idivb
and
into
adc
pushf
push
pop
push
das
out
js
stos
ret
sahf
sub
cmpsw
test
push
and
int3
or
stc
aas
repz
imul
or
mov
leave
push
mov
pop
push
fnstsw
and
ljmp
lret
cmp
stos
jbe
test
adc
jecxz
cmp
sub
dec
add
daa
pop
adc
lcall
or
xor
and
in
xor
out
jecxz
stc
fcomp
das
pop
jno
jns
ss
xchg
out
sbb
jge
mov
andb
cltd
inc
cld
sbb
js
fdiv
adc
xorb
int3
mov
push
mov
subb
mov
stc
dec
iret
sbb
jecxz
das
cmpsl
leave
fnstenv
sub
push
rolb
pop
pop
loope
jp
and
sbb
mov
inc
sbb
js
mov
or
ret
dec
dec
xchg
ret
cmp
cmp
pop
inc
ficoml
push
jae
dec
push
mov
cmp
imull
xchg
or
xchg
aaa
out
vpshad
adc
push
into
mov
or
and
cmpsl
and
insl
cmp
add
int
sub
xor
in
and
cmpsl
je
les
cmp
negl
cmp
sub
lret
pusha
mov
lods
addr16
jo
mov
push
dec
pop
idivb
mov
lret
mov
arpl
sti
stos
add
lret
sub
in
mov
cwtl
stc
mov
push
or
movsb
sbb
inc
xchg
dec
imul
xchg
jo
cmp
lods
aaa
ret
fdivrl
stc
xchg
mov
inc
sarb
pop
loop
pop
mov
movsl
sub
add
sub
lcall
sbb
data16
add
call
pand
and
pop
test
mov
and
les
adc
and
mov
popf
inc
xchg
movsb
fstp
push
inc
aam
cmp
in
inc
repnz
bound
filds
mov
je
jle
daa
xchg
add
add
push
addr16
push
adc
mov
or
sbb
sbb
xchg
mov
pop
push
dec
xchg
xchg
scas
mov
pusha
sarl
dec
fsub
xchg
fwait
sub
cmpsl
int3
icebp
inc
imul
in
inc
adc
stos
sbb
mov
ror
clc
mov
mov
shrl
jae
add
loope
push
in
shll
inc
or
sbb
push
sahf
sbb
inc
cmp
test
xorl
xchg
sti
cmpsb
in
xchg
stos
xchg
xchg
mov
bound
cmc
jle
and
jne
jbe
ds
dec
xchg
lea
add
adc
ret
lods
adc
clc
lock
popf
testl
aam
mov
push
in
jp
aad
dec
and
lock
ret
cmc
or
inc
mov
cwtl
fbld
pop
shlb
push
mov
inc
adc
adc
sub
and
and
xchg
add
add
or
mov
or
mov
mov
xchg
std
push
hlt
repz
adc
adc
imulb
fwait
pop
cmp
xor
aas
adc
stc
gs
iret
mov
mov
loope
xchg
clc
push
in
push
sbb
xor
or
in
div
mov
mov
mov
mov
add
sahf
popa
push
mov
push
frstor
xor
lret
mov
test
sbb
in
jnp
adc
pop
mov
mov
inc
es
push
nop
lods
jbe
mov
ficoms
adc
mov
imul
xchg
rcll
push
into
loop
cmp
mov
cld
mov
xor
pusha
mov
ds
mov
in
daa
add
movsb
ret
mov
cmc
jmp
xlat
add
mov
aam
out
pop
call
ljmp
push
push
mov
sbb
in
sbb
xchg
out
shrl
call
jge
mov
sub
cwtl
out
jb
adc
mov
lea
add
and
gs
sbb
in
in
xchg
test
fcmove
or
pushf
shrb
inc
aaa
enter
mov
add
jecxz
fbld
adc
arpl
fs
lcall
repz
out
xchg
mov
mov
test
xor
enter
or
jmp
jbe
clc
enter
xchg
fadd
out
mov
mov
dec
push
add
setno
sbb
sbb
push
out
push
jo
aas
lret
aaa
or
shll
dec
adc
sti
cwtl
add
aam
enter
mov
xor
inc
stos
or
rcr
dec
mov
cwtl
jnp
xor
lret
rcrb
lret
js
inc
sub
es
idivl
shl
push
jns
enter
movb
aaa
icebp
push
push
repnz
cmp
in
jnp
ds
mov
insb
mov
scas
das
sbb
push
ja
imul
rcl
in
xor
fildl
jno
cmp
popa
std
stos
push
es
ret
xchg
das
push
mov
out
ljmp
cmp
inc
inc
xchg
push
xor
push
push
subl
jecxz
mov
aam
popf
jne
mov
pop
jae
ss
lcall
xchg
dec
dec
fcomip
js
push
enter
enter
pop
ds
test
repz
divl
scas
cmpsl
mov
push
or
xor
pusha
and
imul
jb
cld
lock
xchg
dec
sbb
xchg
ss
push
xor
jecxz
jg
cmp
es
pop
fistpll
add
and
shlb
out
andb
and
loope
jp
and
pop
daa
dec
sbb
or
pop
pop
daa
dec
jp
shl
incl
std
sub
test
jp
sbb
jb
inc
aam
add
fstpt
jb
adc
ss
in
fwait
sbb
sub
jo
in
jbe
inc
cld
leave
mov
bound
jae
imul
xor
sub
jg
mov
arpl
lock
jb
inc
mov
into
mov
fs
push
scas
xor
mov
movsb
adc
loop
insb
test
int3
mov
lods
mov
adc
mov
sub
divl
mov
xor
cmpsl
mov
push
test
push
in
xchg
rclb
mov
movsb
cld
cmp
dec
push
sub
inc
push
sbb
mov
loop
add
mov
cmp
inc
inc
cmpsl
outsl
pop
xchg
mov
cmc
fisubs
dec
xor
dec
loope
add
cmp
mov
pop
test
popa
sub
mov
mov
adc
jl
add
fmul
sub
cli
arpl
fnstsw
gs
inc
jmp
mov
inc
scas
adc
jns
xchg
add
dec
push
int
push
shrb
testb
mov
sbb
addb
jmp
movsb
bound
bound
stc
and
push
and
jns
fbld
lret
inc
mov
add
push
pop
shrl
es
clc
cwtl
jbe
and
sbb
xor
dec
movsb
out
inc
rorl
jmp
ror
mov
icebp
xor
pop
dec
scas
dec
out
mov
push
fidivrl
adc
pop
int
mov
xchg
loopne
sbb
push
flds
iret
daa
push
mov
enter
fdivrs
ret
mov
dec
sarl
popf
int3
int3
pop
in
stc
pop
aas
movsb
cmovno
push
lret
aad
call
push
sub
xchg
outsb
mulb
mov
and
es
fcoms
lods
mov
or
and
jl
sub
movaps
test
cmp
popf
adc
insl
push
xchg
mov
movsl
fwait
das
sub
xor
jb
inc
mov
inc
in
call
repnz
outsl
adc
clc
mov
aas
aam
pusha
xlat
jno
xlat
add
mov
dec
stos
call
inc
lahf
mov
sub
pop
adc
mov
push
jb
aaa
inc
push
imul
arpl
dec
imul
rorl
cmc
pop
inc
arpl
or
mov
adc
lock
cmpsb
lock
pop
inc
mov
xchg
js
lods
mov
xor
xchg
ss
int3
clc
sbb
mov
sarb
mov
movsb
push
outsl
sarl
and
pushf
inc
mov
pop
test
lods
mov
int
pop
and
adc
or
mov
push
mov
and
mov
cmpsl
mov
xor
enter
xchg
push
and
mov
aas
dec
or
mov
fldt
shll
aad
mov
adc
cmc
xor
mov
js
stc
jb
jl
push
mov
test
lret
mov
sbbb
cmp
mov
inc
ss
ss
push
jmp
jmp
imul
fimuls
test
stos
les
xchg
mov
orl
dec
dec
add
lret
into
rcrb
test
into
mov
inc
sbb
dec
repz
jne
das
or
jmp
push
add
test
insb
cmpsl
roll
sbb
movsb
test
push
inc
push
test
fmull
sbb
test
xor
shr
aaa
call
inc
and
jecxz
push
mov
lea
jae
lods
mov
mov
xchg
mov
cwtl
fdivs
jle
dec
push
mov
adc
jb
mov
push
or
sub
xchg
or
pop
roll
mov
cwtl
add
push
xchg
ficoml
mov
adc
cltd
ljmp
inc
add
cmp
std
sti
cmpsl
loopne
jae
icebp
sbb
out
nop
push
sbb
lcall
imull
adc
mov
jbe
movsb
pop
test
xor
jne
sbb
in
test
xor
dec
in
and
fdivs
cmp
js
jle
pop
xor
push
mov
dec
out
or
cmp
xor
push
ljmp
mov
push
add
add
push
cmp
test
add
dec
mov
pop
mov
outsl
dec
xchg
in
pop
into
ljmp
imul
inc
dec
xor
mov
add
pop
xor
push
sahf
inc
jo
into
sahf
mov
mov
popa
cmc
and
aaa
or
addr16
mov
lret
dec
cmp
add
mov
dec
and
adcl
add
or
pop
clc
lcall
xlat
xor
in
mov
and
icebp
jp,pn
out
mov
sub
mov
into
jmp
ret
cmp
aas
imul
fsubrl
dec
sbb
xchg
dec
enter
ss
jno
das
add
push
insb
mov
std
mov
pop
jne
bnd
jecxz
add
lcall
mov
jbe
or
outsl
ficomps
jns
fs
xor
lea
cmp
sahf
mov
imul
mov
movsb
test
test
out
jae
ja
push
jle
jg
push
pop
cmp
dec
pop
rcll
xchg
lcall
dec
push
fwait
enter
lods
pushf
push
stc
sub
adc
gs
pushf
cmp
ja
mov
jbe
sbb
inc
cld
sub
into
bound
and
lock
pop
xchg
movsb
pop
pop
sub
out
sti
hlt
outsl
adc
seto
sub
pop
lods
mov
insb
mov
sarb
or
cmp
out
and
push
sub
mov
add
repz
lahf
push
or
lcall
jno
lods
dec
sbb
cmp
mov
xchg
push
xor
pop
cltd
lds
push
pop
jge
adc
mov
into
daa
jb
mov
out
stos
cmpsl
cltd
loope
pop
push
scas
repz
pop
jl
fxch
ja
sub
cmpsb
sbbb
mov
imul
lds
mov
jnp
fiadds
imul
nop
das
mov
sahf
test
and
test
sub
fadds
mov
imul
mov
inc
mov
inc
ret
jno
xchg
cmp
neg
negl
scas
xor
pop
add
sbb
adc
clc
out
pop
sti
jmp
mov
push
aaa
nop
sarl
xor
pop
pushf
cs
add
sbb
ds
out
aas
adc
loopne
and
and
jb
mov
xchg
stos
adc
xchg
jmp
xchg
loop
mov
mov
stos
pop
lcall
hlt
out
jae
add
js
inc
lahf
sub
mov
dec
pop
push
add
push
ret
inc
xlat
imul
shr
mov
jecxz
adc
outsl
imul
mov
adc
push
fwait
lds
mov
and
push
lret
rclb
pop
xor
cmp
jb
inc
fists
push
xor
adcl
push
sti
lods
sbb
mov
test
addr16
lret
pop
or
gs
ret
sbb
loop
mov
iret
cltd
cmp
jae
xor
mov
pop
jns
push
xor
mov
push
sub
push
movsb
pop
outsb
mov
and
jmp
jbe
outsb
stos
bswap
sarl
jg
fwait
and
xchg
jl
incl
nop
iret
test
mov
aaa
scas
aas
mov
adc
fdivrp
mov
loope
sti
rolb
jg
xor
or
mov
mov
adc
push
dec
sbb
in
adc
jp
sbb
pop
adc
lea
add
loop
loope
imul
bound
sbb
pop
add
iret
nop
push
xchg
cmpb
xor
imulb
arpl
sub
lods
mov
jmp
filds
dec
ljmp
add
in
sub
cli
mov
test
and
mov
out
roll
imul
ret
mov
push
inc
and
xor
out
testl
mov
push
scas
jl
jge
xor
jb
xchg
out
sub
int3
nop
cwtl
pop
fbstp
dec
loopne
pop
jo
xor
adc
adc
or
mov
lock
lds
decl
pop
imul
push
sbb
jae
push
in
ja
pop
sbb
adc
rcrb
adcb
jb
sahf
xor
jge
popa
fcmovnu
shr
icebp
in
pushf
sub
dec
andl
xor
sahf
xchg
pop
sbb
xor
and
push
bound
mov
test
push
pop
int
enter
xchg
fistps
pop
stc
std
int
xchg
xor
xchg
fs
ret
push
in
or
dec
in
pop
lea
test
in
in
jne
les
push
add
cmp
sahf
mov
push
mull
sbb
das
out
cmp
lsl
mov
hlt
and
pushf
pop
adc
int
pusha
mov
fstl
pop
pop
sub
popa
insl
xor
sti
mov
push
js
mov
outsb
or
jb
fwait
cmpsb
fstpl
cmp
sti
mov
xchg
mov
xchg
sub
mov
fwait
inc
mov
jmp
cwtl
orl
jle
adc
andl
inc
push
pusha
xor
loop
iret
fmulp
fsubl
loop
mov
jge
arpl
or
enter
pop
sti
mov
int3
psrld
jmp
mov
andb
xchg
dec
or
pop
jle
or
cmp
test
and
mov
jb
mov
pop
xchg
dec
mov
pop
repnz
fnstsw
outsl
ret
inc
fdivrs
aas
clc
or
ds
clc
jmp
inc
cltd
jge
imul
test
std
in
mov
jae
mov
cmc
add
and
cmp
lret
pop
mov
push
movsb
mov
mov
sbbb
pushf
cmp
pop
lret
mov
lods
xor
and
out
lods
dec
mov
inc
clc
icebp
ja
and
mov
out
sub
xchg
xchg
mov
push
jo
dec
sbb
outsb
iret
loope
jae
inc
xor
stc
jo
mov
lods
test
xor
dec
test
xchg
xchg
daa
add
push
scas
aaa
jae
push
adc
lret
stc
push
test
mov
jno
xchg
ljmp
stos
adc
movsb
insl
lock
sbb
sbb
pop
unpckhps
pop
push
sbb
int
mov
aas
daa
adc
and
sub
rcrb
jmp
aad
cmp
or
inc
add
das
xor
xlat
aam
pop
icebp
stos
icebp
add
mov
lcall
mov
jmp
pop
ss
mov
rcrl
jae
mov
andl
push
mov
mov
mov
daa
or
sbb
scas
pop
pop
push
pop
addr16
sbb
push
sti
imul
addr16
daa
mov
ljmp
mov
mov
fwait
popf
push
stos
std
jle
push
cld
mov
je
fisttpll
loopne
add
push
xchg
or
inc
shrl
mov
pop
sbb
push
push
pop
je
pushf
pushf
push
mov
aaa
and
loope
daa
cmp
fsubs
das
cmp
cmp
xor
add
mov
popa
adc
movsb
adc
sbb
mov
outsb
movzwl
dec
lds
ret
mov
xchg
shlb
stos
mov
lds
push
aad
div
mov
dec
fimuls
jns
cmpsb
in
sti
push
testb
fwait
pop
sbb
pop
add
sbb
jl
dec
ret
and
shl
xor
fsubr
mov
sarb
rcrl
sub
aas
mov
pushf
jg
and
lea
or
jne
clc
xor
imul
pop
outsb
loopne
pop
jg
orl
add
loopne
adc
jecxz
pop
fistpl
push
mov
xor
jle
sub
mov
sbb
lods
pop
push
jae
xchg
ljmp
fiaddl
lods
xor
push
and
mov
enter
jl
sub
jmp
scas
xlat
test
and
js
pop
aad
shll
leave
out
mov
hlt
int3
cmpsl
std
jg
pop
cmp
sub
mov
sbb
cwtl
js
mov
xor
out
and
sbb
dec
and
cmp
cmp
push
and
xor
jns
xchg
call
mov
sbb
mov
insb
rol
xchg
add
movsl
mov
int
mov
adc
in
pop
mov
and
push
pop
pop
sti
dec
xchg
xchg
lods
push
jg
and
out
lret
push
or
loop
or
cmp
js
dec
sub
cltd
xchg
pop
mov
int3
mov
lods
leave
jb
cli
adc
shl
mov
pusha
rorl
sbb
xlat
jp
insl
mov
add
mov
movsl
push
xlat
pop
popa
and
test
inc
xor
dec
icebp
aas
mov
cmp
cs
jle
push
mov
jecxz
lret
or
leave
mov
add
gs
outsb
fs
les
push
test
xchg
mov
add
inc
jge
mov
and
nop
clc
jb
jg
or
and
push
jae
push
jns
and
cmc
mov
aas
mov
rcl
cmpsl
out
dec
cmpsl
addr16
dec
inc
mov
jg
stos
scas
sar
adc
cmpsl
pop
push
out
inc
cmp
fdivs
stos
mov
addr16
pop
xor
aas
aaa
cwtl
jns
jg
xor
fwait
mov
fisttps
mov
movl
int
mov
dec
jbe
pusha
js
mov
repz
nop
push
fwait
sub
pop
mov
adc
cmp
mov
push
cltd
mov
fcmovnb
ss
jp
mov
mov
jns
dec
xor
add
andb
std
lret
xchg
neg
ret
cs
adc
xchg
sub
jb
sbb
push
mov
sub
les
xchg
insb
jge
push
out
adc
add
pusha
inc
mov
cltd
jno
loopne
jle
lea
xchg
xor
jnp
movsb
sti
inc
test
push
cltd
jmp
or
xor
stos
icebp
lods
ret
xchg
cld
and
out
jp
xchg
dec
stc
insl
je
push
mov
mov
loop
xchg
push
pop
jns
scas
loopne
adc
ss
sbbl
outsb
xor
adc
adc
and
cltd
push
adc
fsubrs
je
lahf
out
pop
inc
pop
stos
cmp
push
lcall
add
popa
mov
cmp
sub
fnstsw
mov
arpl
sub
add
subl
xchg
sbb
out
ret
shlb
or
cs
aam
sub
pop
in
mov
scas
movsbl
push
push
test
hlt
hlt
stos
jle
mov
push
mov
fldt
daa
out
fists
mov
fbstp
fcmovnb
and
rol
stos
sub
jne
std
pop
push
mov
mov
add
mov
push
test
out
jl
inc
mov
dec
cltd
pop
push
out
leave
mov
sub
jmp
mov
sbb
xor
xor
mov
int
cltd
movb
mov
stos
cmp
aad
shl
std
pop
fsubr
dec
icebp
aas
xchg
pop
ret
jno
xchg
xchg
xor
ja
mov
jns
jnp
sbb
cs
lret
hlt
xchg
mov
flds
in
or
jbe
nop
mov
mov
inc
stos
xchg
je
mov
cmp
add
mov
dec
push
pop
pusha
or
jbe
loopne
sub
xchg
rcrb
les
lcall
pushf
icebp
xor
mov
dec
sub
sar
push
aas
fdivs
pop
push
lods
sbb
cs
jae
sbb
pop
aas
and
cs
jae
add
ja
mov
lcall
mov
jns
add
movsb
fwait
icebp
enter
in
les
xorl
pop
sub
lret
mov
mov
xchg
les
data16
test
jle
jbe
or
imul
jp
jns
jne
or
cmp
rclb
pop
add
out
sbb
and
aas
lcall
pop
jecxz
mov
shlb
inc
nop
rclb
popa
pop
jle
setg
push
mov
fs
push
sub
std
aaa
mov
rcrb
sub
daa
push
adc
push
repz
xchg
mov
mov
repnz
lcall
test
lods
jp
jg
test
bound
mov
in
mull
rcl
mov
and
pop
bound
xlat
stos
popf
call
dec
jg
inc
xorl
push
or
cli
das
addr16
fisubl
scas
pop
ljmp
push
push
movsl
pop
xchg
call
xchg
xor
imul
jg
or
jno
insb
push
fsubp
enter
enter
xchg
lcall
pop
push
dec
sahf
mov
xchg
jecxz
insb
outsb
fldl
and
jnp
cli
mov
jne
jge
pop
sub
inc
orb
insl
orb
sub
add
in
mov
in
jnp
jne
ljmp
aad
negb
mov
xor
clc
cmpsl
rcrb
faddl
int3
aad
sub
nop
mov
ret
mov
xor
sbb
int
jmp
cwtl
into
movsl
les
mov
imul
loope
lahf
mov
test
xchg
lock
repnz
mov
add
mov
std
xchg
fs
jb
stc
icebp
test
ret
mov
push
push
and
adc
mov
orb
xchg
push
mov
push
ds
mov
aaa
daa
fstl
xlat
mov
sub
mov
sub
mov
and
aas
mov
cmp
mov
adc
sub
dec
pop
push
in
pop
imull
sub
push
and
jp
push
daa
sub
and
and
dec
sahf
fsts
js
cmp
xor
xchg
sti
inc
jns
les
jmp
dec
push
or
mov
shr
bound
lods
test
iret
adc
dec
jle
pop
add
stc
mov
pop
cmpsl
xchg
dec
xlat
add
insl
leave
mov
pop
mov
jb
testb
dec
jns
stc
fs
scas
adc
stos
mov
popa
aad
mov
ret
jle
sahf
scas
pop
test
fs
cwtl
mov
sahf
push
jp
out
hlt
push
mov
sbb
out
and
dec
pop
xchg
stc
lret
jl
xor
inc
add
push
dec
out
sbb
inc
dec
cmp
adc
push
mov
mov
lret
scas
rcll
fsubrl
test
gs
add
xchg
test
push
jbe
push
loope
adc
sti
clc
lds
subl
xor
dec
jg
inc
mov
out
inc
mov
dec
mov
sbb
xchg
add
push
mov
sbb
outsb
mov
lret
pop
enter
inc
mov
cmp
mov
test
ja
mov
or
or
dec
sbb
sub
pop
push
lret
js
or
dec
xor
je
fldt
jl
aas
mov
sub
xor
enter
loope
add
jge
sbb
inc
mov
xor
mov
bts
hlt
mov
add
mov
xchg
clc
ret
pop
das
cmp
gs
int
jbe
inc
cmp
stos
ljmp
imul
push
pop
or
mov
jmp
out
mov
jno
adc
test
lret
pop
cmpsl
xchg
dec
das
addl
cltd
xchg
and
pop
inc
adcl
int3
pop
jnp
or
mov
test
jno
adc
gs
mov
sahf
pop
lea
or
adc
mov
push
pop
or
xchg
or
stos
jae
sub
push
rorl
xor
bound
loopne
out
dec
jb
cmp
loope
movsb
in
lds
inc
jle
jle
sti
jb
sbb
push
sub
in
sbb
mov
mov
icebp
fs
mov
iret
push
jge
int
mov
inc
jae
sub
jns
xchg
sti
or
and
mov
insb
mov
mov
push
add
aad
adc
push
mov
xchg
in
sbb
or
push
rcll
mov
insb
data16
ret
adc
push
cs
lahf
js
mov
daa
sahf
ret
fildll
ja
mov
jl
xor
sbb
sub
stos
repz
dec
pop
dec
mov
outsl
shlb
dec
xor
pop
push
or
test
sti
test
mov
cld
jne
mov
push
mov
pushf
out
int3
pop
xchg
jmp
mov
in
je
fisubs
cli
jns
mov
outsl
frstor
inc
into
jbe
orps
fsubrs
mov
xor
es
pop
add
mov
mov
into
jne
jl
push
rolb
mov
cmp
or
in
pop
xchg
push
jo
xchg
mov
test
lret
push
lock
fistps
out
cwtl
lods
jl
cmpsb
ror
test
xor
stc
hlt
ljmp
repz
mov
and
lret
xchg
in
inc
xor
dec
mov
mov
scas
sub
mov
sbb
stos
outsl
fucomip
es
loope
cmp
or
or
sub
jge
ss
loop
je
fisttps
xorl
iret
imull
cld
cmp
sbb
test
sub
jnp
xchg
int
sti
adc
cmp
imul
or
adc
in
push
pop
out
mov
adc
dec
jecxz,pt
mov
or
push
negb
test
lahf
xchg
push
outsb
mov
mov
mov
jmp
push
inc
iret
imul
adc
ss
push
insb
or
rorb
xor
jbe
add
insl
mov
xor
les
pop
lret
xor
mov
sub
mov
popa
int3
subl
adc
xchg
add
cli
popa
lcall
out
jl
xchg
sub
sbbb
das
cltd
adc
in
mov
pusha
sub
mov
lea
rcrb
dec
pushf
cmc
inc
dec
push
mov
cmpsb
adc
and
dec
jg
sub
clc
xchg
push
fcmovnu
pusha
and
pop
sbb
movsb
jae
or
les
frstor
push
push
fldcw
mov
pop
scas
and
mov
cs
fldenv
ds
xor
int
or
xor
inc
ror
sbb
or
testl
or
cmp
pop
and
add
mov
push
fbld
stos
adc
in
insl
or
aas
jge
lds
lock
sub
sti
iret
pop
aam
and
lret
lods
dec
negl
push
mov
sub
les
sub
and
rep
jbe
cmp
lret
jne
in
ds
cs
and
mov
mov
xchg
mov
inc
push
shrb
bnd
xchg
push
sub
movsb
repnz
aas
fistpl
lahf
push
mov
fs
adc
pop
sub
test
xor
inc
pop
outsl
sub
cmpsl
mov
lcall
and
aam
pop
xchg
push
mov
add
mov
jbe
call
cltd
out
sbb
test
sub
sub
mov
mov
pop
les
or
fcmovnb
push
mov
dec
xchg
xor
clc
push
xor
test
repnz
push
inc
cli
mulb
and
and
dec
daa
inc
mov
inc
add
add
out
in
stos
adc
push
imul
popf
mov
pop
cmp
xchg
inc
rolb
and
jns
dec
fcoml
lock
rcl
jbe
cmp
dec
push
negl
sti
push
mov
faddl
hlt
or
lahf
aad
mov
cmp
mov
in
je
add
movb
repnz
fsubrl
or
sbb
pop
aad
aam
mov
cltd
out
jae
test
stos
or
in
fsubp
sub
jnp
sahf
adc
out
aaa
or
xchg
sub
jl
sbb
mov
and
cwtl
jno
imulb
cmp
gs
out
add
outsb
sub
push
xlat
je
add
aad
push
dec
and
jns
lods
add
sbb
idivl
outsb
inc
rol
out
pusha
xor
push
out
js
sahf
adc
xchg
stos
sub
adc
fnstenv
or
push
dec
sub
mov
dec
adc
test
and
in
mov
das
out
jp
insb
pop
lock
cmpsl
xchg
dec
lahf
mov
xchg
add
xchg
pop
into
ljmp
loop
fbld
inc
shrl
in
sbb
push
es
and
fnstenv
mov
jle
pop
jbe
mov
push
pop
jp
xchg
fnstsw
test
stc
lret
scas
push
lds
fstpt
ret
les
int3
ljmp
enter
sbb
ja
rcrb
into
push
pop
inc
xlat
or
inc
sbb
dec
test
dec
xor
push
jne
popa
fisubrl
jo
lret
in
add
int
inc
leave
push
mov
mov
cmp
push
adc
cmp
pusha
push
jp
nop
fidivs
cmp
inc
shll
shrb
jg
push
mov
mov
adc
mov
hlt
lea
in
dec
and
pushf
lret
mov
sbb
xchg
ficomps
mull
mov
jbe
cltd
jns
cs
rclb
cs
or
psubsb
ljmp
pop
push
call
xchg
lahf
mov
xorl
fildll
rorb
adc
cs
jmp
pop
inc
sbb
ja
daa
rcrl
xor
xchg
addr16
imulb
add
inc
mov
fdivrs
add
outsb
pop
loop
inc
repz
push
jl
push
add
push
or
inc
mov
mov
add
scas
hlt
ret
daa
inc
or
jp
jo
enter
stc
data16
cmc
nop
mov
lods
fdivrl
jmp
test
in
mov
aam
mov
mov
mov
mov
mov
and
or
cld
dec
loope
sub
int
jecxz
loope
sub
aam
cltd
mov
jns
lcall
jge
push
das
jnp,pn
and
lahf
or
mov
mov
mov
adc
sub
in
mov
add
in
out
or
in
lds
aad
imul
jecxz
mov
pop
sbb
pop
mov
loop
add
lcall
lods
add
push
out
fwait
pop
aam
xchg
inc
cld
cmp
mov
jns
push
fsubrs
mov
in
push
repz
fsubl
fwait
dec
mov
rcl
ret
cmp
aaa
add
imul
mov
dec
scas
outsb
add
test
adc
movsl
enter
aaa
xchg
faddl
jmp
cmp
sub
stos
leave
mov
imul
call
push
xchg
sub
push
fwait
loop
int3
test
add
pop
addr16
mov
clc
cmc
or
cmp
nop
cmc
stc
pop
lock
adc
add
jo
push
fldl
call
sub
roll
mov
insl
cmc
mov
jnp
incb
ret
scas
repnz
pop
outsb
pop
aam
call
loopne
mov
imul
jns
lods
jp
xor
addr16
jmp
and
rcll
pop
pushf
inc
cmpsb
mov
dec
test
and
dec
loopne
ljmp
add
mov
lcall
loope
hlt
cmp
repnz
xor
ljmp
push
mov
decl
dec
pop
adc
mov
loopne
js
jbe
out
push
adc
nop
fadd
int3
out
ss
fwait
mov
icebp
xchg
gs
push
andl
adc
push
stos
scas
mov
and
lods
mov
add
pop
or
push
ljmp
jmp
cmp
push
gs
fsub
leave
scas
dec
stc
andl
inc
jno
int
aad
leave
sarl
dec
jmp
push
xchg
mov
outsb
dec
push
out
mov
fistpl
call
pop
sbb
movl
mov
inc
jp
and
xchg
hlt
cmp
sbbb
cmpsb
mov
shrd
and
sti
xabort
lahf
insl
test
popa
sub
popa
add
jbe
push
mov
int3
inc
aas
add
iret
jno
inc
clc
dec
leave
fcoms
fildll
mov
xchg
adc
ja
inc
pop
xchg
lods
lock
sbb
mov
pop
iret
mov
push
xchg
mov
cmovo
mov
sahf
add
mull
and
or
lods
pushf
mov
mov
mov
sbb
add
bound
cmp
jo
rclb
and
xchg
mov
shrl
inc
jl
daa
adc
mov
jae
pusha
test
adc
jle
je
dec
sbb
jle
divl
cmp
sub
cmpsl
loopne
es
popf
adc
mov
rcll
and
pusha
cmp
xchg
popf
cld
mov
int3
jp
sbb
sbb
mov
test
dec
mov
mov
je
into
sub
or
cmp
mov
mov
stos
sbb
fidivrs
sub
jl
rorb
dec
les
in
xchg
mov
adc
cmp
fcmovne
das
cmp
addr16
idivb
ljmp
fisubs
loopne
cmpsb
lds
mov
mov
xchg
jle
bound
pop
add
jl
inc
dec
xchg
inc
push
sbb
cwtl
test
inc
rclb
ljmp
inc
leave
ret
jo
cmp
ja
movsb
push
pusha
xchg
pop
repnz
xlat
jnp
cli
jns
mov
add
or
repz
sub
adc
movsb
push
jmp
addr16
cmp
add
repnz
push
push
xchg
lock
jge
out
mov
jecxz
and
dec
orl
jle
add
jno
lods
push
dec
je
in
or
mov
add
lcall
adcl
mov
cs
out
mov
cmpsb
out
push
push
xchg
sbb
jl
ds
aad
inc
cltd
pop
sbb
adc
inc
cmp
pop
xor
lret
push
adc
and
es
test
mov
jbe
lds
aaa
or
in
mov
and
out
test
aam
cmpsb
xorb
in
cmc
lods
mov
sbb
mov
les
and
sbb
clc
sub
scas
jmp
cmpsb
jnp
and
iret
jle
lods
ja
adc
jae
nop
inc
push
mov
push
insl
in
int3
pop
cmp
push
clc
or
xchg
sahf
mov
popf
adc
cltd
lahf
rorb
mov
mov
cmp
inc
stc
mov
mull
lock
cld
xchg
out
add
or
dec
fwait
popl
shll
dec
shr
xchg
mov
jmp
xor
adc
gs
das
mov
in
add
sbb
mov
popa
aas
call
dec
sbb
clc
pop
mov
movsl
repz
out
inc
mov
pop
ret
ss
mov
pop
clts
pop
cltd
mov
cli
mov
or
mov
push
inc
adc
sbb
inc
scas
mov
dec
addr16
jne
mov
pop
je
divb
inc
xorb
sar
fiaddl
jbe
mov
dec
mov
push
xor
loopne
imul
xchg
mov
push
insl
or
dec
fwait
or
xor
adc
sbb
out
sub
in
xor
lcall
aas
and
push
jb
pop
psadbw
neg
jge
dec
outsl
imul
jg
ljmp
or
sbb
sub
pop
fcmovnb
cmp
scas
xchg
insl
lods
xchg
cmpb
fcompl
rcrb
in
scas
pop
mov
push
push
aad
stos
movsl
sbb
jmp
cmpsl
pop
pop
lea
jecxz
mov
cli
mov
scas
sbb
cltd
xchg
pop
mov
pop
fdivrl
int
xor
lahf
inc
mov
roll
push
or
out
xchg
push
add
inc
xchg
or
pop
fwait
loopne
imul
jle
popf
push
ja
xor
jbe
push
icebp
mov
mov
adc
cmpsb
cwtl
sub
lock
fidivl
dec
inc
imul
lcall
mov
lock
pop
sbb
insb
insb
int
jb
pop
jmp
dec
movsl
test
xor
cmp
or
in
outsl
shlb
and
lahf
leave
sbb
cmp
pop
repnz
xor
dec
int3
lods
mov
in
sbb
mov
cli
sub
outsb
push
out
in
pop
popa
adc
sbb
ret
cmp
jmp
push
adc
cwtl
pop
push
psubusb
add
mov
add
adc
bound
ret
icebp
jnp
mov
xor
pop
xorb
into
ds
jmp
mov
out
and
lods
pop
or
aad
cld
jno
pop
enter
cltd
aam
push
pop
lcall
call
sbb
notb
mov
test
or
push
in
and
aas
mov
jb
push
jle
xchg
push
add
fsubrs
jns
leave
xchg
lret
lret
sbb
fmuls
test
fwait
push
xor
daa
jge
testl
inc
pop
aad
sbb
add
and
icebp
test
sbb
mov
mov
insb
aam
sbb
decb
insb
daa
pop
mov
insb
mov
jg
fwait
jecxz
fists
mov
push
lock
xchg
in
enter
ljmp
aam
cltd
imul
mov
and
lret
outsl
fnstenv
nop
dec
pop
das
pusha
pushf
outsl
imul
popf
cli
xor
sub
pop
repz
icebp
and
ret
mov
push
and
push
sbb
daa
push
fcoml
push
add
jg
dec
or
adc
mov
mov
loop
fs
fcoml
sub
pop
and
pushf
and
movsb
int
or
or
leave
mov
mov
push
jecxz
inc
insb
out
sbb
ja
and
out
pushl
insl
outsb
jmp
inc
aam
dec
rol
and
pushf
push
and
out
clc
mov
jb
mov
jmp
xchg
into
insb
and
adc
cli
rclb
jmp
inc
cld
push
bound
leave
rorb
cwtl
add
pop
fmull
inc
push
cs
ret
sub
aaa
pushf
pop
cwtl
nop
cmpsl
inc
xchg
shrl
hlt
pop
call
jae
cmpsb
jo
sbb
out
inc
adcb
mov
lcall
push
inc
jns
jg
cmpsl
xorl
mov
or
mov
jne
dec
in
cmp
jnp
das
data16
cwtl
xor
outsb
data16
nop
xchg
adcb
xor
lret
pop
add
pop
xor
jmp
popf
bound
add
testl
adc
xor
cwtl
push
mov
jecxz
in
lock
dec
movswl
enter
xorb
hlt
rcrb
mov
xchg
or
push
cmp
mull
push
cld
mov
inc
incb
xor
or
dec
push
aam
xchg
push
dec
mov
jae
push
mov
fisttps
loopne
lods
dec
shr
jl
pushf
aas
cmp
out
sahf
dec
push
or
pop
insl
pop
cvtps2pd
sub
iret
test
jp
xor
push
out
stos
xchg
jge
arpl
mov
mov
mov
loope
scas
mov
lea
mov
andb
dec
stos
xchg
hlt
xchg
cwtl
xorb
jl
push
inc
lock
cs
push
jo
mov
sub
cmc
mov
ror
add
sbb
aad
mov
fisubl
cmp
push
or
mov
popf
mov
inc
outsb
gs
orb
push
xor
dec
mov
stc
ds
xchg
sar
add
adc
outsl
ja
push
in
or
ror
cmp
cmpl
inc
jnp
mov
cmp
aas
mov
xchg
in
cmpsl
std
mov
add
xchg
lret
jo
sbb
add
mov
sbb
push
adc
mov
fnstcw
pusha
cmp
out
cmc
nop
scas
outsl
push
xor
add
and
and
mov
btc
fs
loop
pop
sbb
mov
mov
pushf
sarb
jmp
fdivl
fcmovnb
iret
mov
sbbb
mov
xor
xor
aad
mov
outsl
or
and
and
add
push
insl
jno
cmp
add
cmp
lods
mov
pop
xchg
imull
pop
pop
dec
loopne
gs
adc
mov
push
push
lock
sub
mov
pop
inc
push
fimull
test
pop
aad
sahf
jmp
imul
mov
cmp
mov
movsb
cmpl
xlat
sub
push
cmp
iret
sub
mov
push
or
in
rorl
push
or
pop
push
mov
loope
ror
mov
jne
push
data16
in
loop
pop
ret
rcll
aaa
push
sbb
inc
je
imul
push
int3
nop
mov
mov
pop
es
xchg
lods
aam
sub
pop
jle
pop
pop
out
sbb
inc
jg
aas
and
mov
sbb
xchg
idivl
jmp
add
xchg
lahf
sub
aas
jge
loop
popa
stos
outsb
mov
pop
pop
adc
sbb
sub
iret
sub
imul
mov
adc
push
js
xor
pop
aam
aas
dec
mov
insl
gs
xor
js
cli
fcompl
sbb
and
stc
inc
cld
push
dec
lods
hlt
sub
sbb
mov
movsb
add
jne
pop
sbbl
jmp
pop
imull
insb
icebp
imul
adc
cwtl
push
xlat
testl
push
push
mov
cld
jbe
or
shrl
mov
xor
jns
pop
in
xorl
cs
loop
dec
cmp
or
std
add
cmpsb
movsl
or
and
cs
add
sbb
push
mov
pop
js
mov
sbb
cmp
cmp
mov
adcl
orl
ljmp
xor
out
sub
fwait
sahf
shr
out
loope
movb
mov
lahf
inc
test
imul
jg
jo
add
add
hlt
lret
imul
pusha
imul
push
jne
cmpsl
xchg
push
add
cli
pop
cli
push
data16
fdivrl
adc
and
addr16
repz
sar
push
in
repnz
imul
fimull
bound
mov
cld
pop
xchg
scas
sub
insl
lcall
dec
mov
jmp
cmp
mov
pop
lcall
xor
aaa
mov
roll
test
mov
rcll
mov
sub
lods
stc
xor
jae
xor
xor
aas
cwtl
mov
loop
jmp
test
fiaddl
add
or
ret
in
rcr
outsl
dec
ja
lcall
mov
orb
imulb
int3
jg
bound
in
jnp
xchg
gs
xor
addr16
insb
mov
inc
lar
fwait
scas
rclb
jne
gs
add
inc
aas
ret
in
dec
mov
sbb
jne
adc
adc
push
dec
cld
dec
fsubs
cltd
minps
lcall
xor
pop
mov
ljmp
mov
dec
push
cmp
jge
mov
repz
jne
aaa
jb
xchg
jge
xor
or
push
addl
out
xchg
pop
fs
fsubl
dec
mov
pop
je
loop
js
jae
movsb
add
imul
andl
hlt
pop
ss
ret
clc
and
inc
sarb
shll
sub
fdivp
ret
cmpsl
iret
xor
ljmp
dec
fistpl
call
mov
fwait
mov
sar
imul
lcall
xchg
mov
cmp
ja
ss
mov
mov
and
repnz
sarb
fs
xchg
into
icebp
punpcklbw
and
lods
adc
lock
push
pushf
adc
filds
fbld
sub
mov
dec
cmpsb
push
leave
push
add
xchg
jecxz
sub
shlb
sub
stos
sub
xchg
push
insl
xchg
sbb
cld
jns
inc
adc
sbb
fldcw
arpl
dec
lahf
push
jg
sti
adc
add
inc
stos
ret
mov
cmp
out
pop
icebp
cmp
adc
pop
in
lock
rcr
mov
cmpsb
data16
dec
cmc
icebp
aad
aam
hlt
imul
xchg
test
cmp
dec
subl
push
or
fisubl
add
lds
xchg
mov
mov
hlt
mov
mov
leave
rcll
dec
pop
loopne
into
cmp
adc
rorl
jmp
dec
mov
ret
lods
movsb
dec
mov
cltd
repnz
sbb
push
fwait
mov
arpl
mov
adc
dec
sub
sbb
and
and
fisubrs
ds
or
popa
sbb
dec
or
call
out
push
leave
lods
test
testl
lock
xchg
lahf
dec
cli
popf
xlat
movsl
out
imul
outsb
adc
inc
pop
fstpl
lea
push
and
icebp
sub
pop
adc
add
inc
pop
mov
aad
dec
insb
subl
into
add
lcall
mov
dec
mov
xchg
xchg
stos
adc
jp
fs
jecxz
pop
scas
ja
dec
imul
add
pushf
aad
loope
in
xchg
mov
sahf
add
and
xchg
xchg
repnz
xor
lea
ljmp
neg
icebp
adc
out
add
cmpsb
xchg
cmp
dec
scas
push
jmp
mov
mov
mov
mov
cmp
pop
mov
push
push
in
fdivr
pop
gs
jecxz
test
fsubr
nop
pcmpgtb
push
fcmovb
pop
lock
or
fistpl
ud1
mov
push
mov
pop
cmp
les
je
stos
add
in
aam
fisubrl
test
sbb
xchg
inc
jne
dec
cmpsb
lods
push
shrl
jmp
mov
dec
inc
and
pusha
sbb
cmp
inc
mov
pop
cmpb
jns
clc
xorl
gs
inc
std
jbe
add
cmp
pop
out
call
lea
mov
mov
mov
adc
pop
shll
ret
mov
push
in
cmpsb
popf
enter
jb
or
push
rcrl
andl
loopne
or
pop
cmpsl
cli
scas
lock
or
sub
pop
pushf
jmp
pop
push
loop
xchg
mov
fidivrl
mov
mov
pop
notl
cld
lods
adc
sbb
pop
xor
call
dec
pop
xor
enter
cmp
xchg
insl
mov
repnz
sbb
dec
dec
ret
fcomps
xor
sbb
and
mov
and
popa
repz
out
mov
ret
jmp
lret
rcrl
test
aas
clc
fadd
pop
pushf
aam
cmp
inc
stos
push
mov
pop
add
pop
nopl
ret
or
push
xchg
push
push
jmp
and
push
push
mov
mov
mov
add
icebp
dec
push
xchg
shll
sub
pmuludq
ret
fstl
lcall
xor
and
into
adcb
and
repz
dec
fwait
inc
mov
lret
fst
rcrl
scas
dec
cmp
leave
mov
and
jp
xchg
dec
test
or
cmp
pop
inc
aam
leave
inc
aad
mov
out
fsubrs
pop
fs
lea
insb
adc
popa
imul
mov
addr16
hlt
or
pop
jecxz
jg
xchg
movsb
adc
adc
sbb
adc
ficoms
jns
into
push
mov
test
sub
je
adc
sahf
out
int3
adc
mov
in
sbb
rorb
call
add
xchg
push
adc
out
cmpsl
inc
int3
fwait
div
sti
loopne
add
or
lods
or
outsl
out
adc
push
test
or
jae
mov
ds
or
fdivrs
push
sbb
bound
xor
jo
mov
cmp
inc
test
jmp
jmp
ret
in
jmp
inc
xchg
daa
rolb
out
dec
mov
movsl
jp
cmpsl
pop
pop
sti
inc
push
jle
mov
jns
mov
inc
add
out
jp
mov
adc
divl
jmp
nop
rep
or
cmp
xchg
in
xor
lock
xor
nop
xchg
jbe
adc
push
sbb
pop
dec
test
dec
shr
cs
das
push
pop
jo
pop
mov
add
adc
or
lahf
ret
mulb
mov
mov
mov
mov
test
pop
jb
jnp
insl
cwtl
mov
lret
xchg
sbb
xchg
dec
mov
xchg
inc
mov
cld
push
and
popf
stos
xchg
pop
leave
or
and
mov
sub
dec
les
pop
add
std
dec
repnz
pusha
pop
int
push
sbb
mov
push
insb
into
daa
sub
fchs
pop
sahf
les
test
out
addr16
push
sub
dec
mov
xchg
mov
inc
js
flds
divl
xlat
daa
sub
dec
jl
sbb
add
dec
andb
cmp
cmp
arpl
mov
xor
out
jge
xor
decb
inc
push
div
pop
stos
mov
mov
jg
push
sahf
sbb
sub
out
enter
test
dec
mov
pushf
jg
pop
add
lahf
jp
jg
iret
cld
repnz
push
pop
pop
sub
push
sahf
into
xchg
sbb
test
test
mov
xchg
popf
fadds
mov
mov
lret
and
dec
stc
daa
and
aad
fisubl
mov
out
sub
ret
imul
sub
wrmsr
cwtl
std
jp
out
daa
dec
adc
xchg
xchg
popa
add
into
rcrb
into
ret
jg
jmp
push
insl
push
int3
xor
cld
test
xchg
test
in
sti
movb
stos
sub
xchg
add
jecxz
adc
sbb
lret
pop
inc
sbb
add
sbb
repz
jb
in
pop
mov
cwtl
inc
push
adc
xor
in
mov
std
loop
orl
xchg
int
stc
sub
sahf
int
test
ss
push
mov
pop
adc
cmpsb
aam
scas
lahf
pop
fcomps
cmp
cld
repz
std
enter
popf
insb
xchg
add
sti
rol
loope
dec
lock
icebp
test
sarb
ficomps
xor
int3
mov
sbb
mov
xchg
push
push
dec
test
xchg
enter
and
hlt
xor
mov
out
icebp
aas
or
dec
mov
mov
pop
sbb
dec
pop
repnz
or
lods
cld
ffreep
js
lea
bound
xchg
sub
or
js
mov
jb
cmp
pop
cmp
insl
or
xorl
incl
mov
mov
adc
ss
jae
jle
mov
in
adc
sub
mov
xchg
cmp
jne
xchg
in
mov
mov
push
cmc
cmp
inc
sbb
icebp
pushf
jg
aad
push
lret
rolb
xor
dec
lcall
xchg
loop
shll
leave
jno
mov
jp
cmp
mov
xchg
jge
adc
cmp
pop
pop
sbbb
mull
sarb
push
add
mov
add
and
push
push
add
xchg
mov
mov
xchg
sub
inc
imulb
mull
dec
mov
inc
clc
je
add
enter
inc
cmpsb
jl
shrb
cltd
ffree
out
mov
daa
xor
jmp
je
fnstcw
int3
dec
cltd
ljmp
jo
jp
mov
popa
pop
inc
mov
lcall
pop
test
orb
or
aaa
out
inc
ds
inc
lret
cs
dec
dec
pop
mov
xchg
xor
and
idiv
xor
mov
cmp
mov
xlat
in
push
xchg
add
data16
inc
jno
jnp
mov
faddl
repnz
jns
ret
xor
mov
mov
imul
scas
xor
xchg
xor
enter
mov
dec
sub
ja
inc
icebp
sub
sbb
fsubl
outsl
jbe
in
adc
jmp
out
and
loope
jns
inc
sub
xor
popa
mov
hlt
cwtl
outsl
shrl
mov
movsb
xchg
sub
cmc
addr16
fsub
pop
stos
jo
test
mov
ljmp
mov
xor
jo
and
lock
jle
cmpsb
cltd
and
and
adc
clc
dec
add
dec
movsb
inc
psubsb
in
lods
in
push
adc
pop
addr16
mov
sub
mov
data16
mov
or
clc
and
xchg
ss
and
dec
in
fs
mov
test
pop
das
mov
jg
xchg
xor
inc
idivb
cmpsb
pop
ss
sti
lock
lret
mov
test
push
mov
cltd
inc
and
or
pusha
dec
add
sub
adc
leave
jl
sti
clc
add
hlt
pop
jg
inc
ret
xor
test
pop
lock
mov
push
pop
mov
inc
js
out
mov
mov
cmp
dec
clc
enter
and
das
dec
mov
arpl
stos
hlt
jg
xchg
pop
int3
xchg
mov
push
bound
test
icebp
push
into
lock
addr16
and
fldt
int
enter
popf
sub
fs
les
mov
ja
mov
add
outsl
pop
xchg
inc
sbb
sbb
push
sub
mov
sbb
mov
or
sti
jmp
xchg
idivb
or
cmp
add
mov
jge
push
jg
movsb
dec
pop
push
push
pop
mov
and
subb
mov
stos
pop
push
fdivrp
dec
mov
jle
mov
outsl
pop
clc
mov
ret
mov
and
jmp
adc
sarl
mov
push
xchg
fpatan
and
daa
pavgb
sub
subb
push
and
jle
pop
pop
icebp
cmp
dec
lahf
mull
xchg
mov
pop
add
cmp
xchg
call
clc
or
jmp
push
stos
xor
dec
xchg
adc
out
sti
add
mov
xor
sti
mov
aad
lods
in
xchg
pop
mov
loope
incl
xchg
mov
scas
xchg
cmp
push
movsl
lds
out
ret
push
xor
aam
lds
xchg
sti
xor
dec
cld
vpshaq
sub
outsl
stos
sub
icebp
push
movb
adc
mov
out
cmp
jge
jge
push
inc
nop
loopne
je
das
adc
mov
lock
in
add
xor
rclb
jmp
stos
fisubrl
mov
xlat
cmp
mov
cmpsl
pop
aas
out
dec
ret
sahf
adc
xchg
xchg
and
dec
andb
in
and
sbb
pop
cmp
push
in
enter
lret
lcall
lahf
mov
push
mov
daa
cltd
fidivrs
push
les
arpl
or
dec
sbbb
stc
sbb
adc
xor
iret
loop
inc
mov
pop
daa
mov
adc
pop
or
cmp
ficompl
aam
shrl
push
push
lret
outsb
fwait
out
fiaddl
jno
ficompl
mov
xor
push
je
mov
pop
pusha
addr16
sahf
sahf
arpl
lret
push
jb
sub
inc
pop
movsb
out
push
std
inc
mov
xor
inc
inc
loop
ret
shr
mov
fisttpll
cli
loopne
cwtl
jmp
out
movsl
inc
jl
inc
push
jns
mov
xchg
pop
sub
push
add
adcl
enter
daa
sbb
cli
sti
jle
stos
sbb
inc
dec
iret
dec
sarl
movsb
sbb
aad
pop
or
pop
incb
aaa
jle
cltd
fmulp
sub
pop
in
mov
adc
pop
popa
mov
adc
or
inc
push
incl
push
fistpll
fwait
in
mov
adc
pop
roll
and
dec
bound
scas
sub
mov
sub
pushf
mov
arpl
pop
jbe
jae
jp
mov
push
js
push
outsl
aas
addl
loope
inc
pop
movsb
cld
mov
and
cmp
pop
and
sbb
divl
aaa
xchg
inc
divb
outsl
pusha
or
add
mov
mov
jnp
aas
fstp
mov
cmp
dec
xchg
popf
and
sti
in
sub
test
sbb
push
arpl
add
cmpsl
in
or
bound
sub
das
mov
es
ss
mov
jb
or
push
imul
jne
sbb
and
subb
sbb
je
movsb
pop
aam
jge
xlat
cmpsb
sbb
int3
push
pop
mov
call
ret
dec
sub
pminsw
popl
dec
lcall
aad
cmpsb
mov
popa
mov
inc
and
xchg
adc
test
adc
inc
mov
cli
sub
loop
inc
add
into
lea
ss
jb
push
sti
test
pop
lea
lcall
jp
test
into
xchg
hlt
lret
les
jbe
stos
jnp
push
rcll
aaa
loopne
cmp
mov
int
xchg
jle
mov
lods
prefetchwt1
or
ret
and
pop
push
sub
popf
pusha
mov
adc
mov
sub
test
xor
fldenv
jns
mov
push
testl
cmp
dec
fucomp
out
jb
imull
jge
fwait
repnz
jg
mov
aaa
add
push
fidivl
sti
imul
adc
stos
cmp
jle
sbb
pusha
mov
jne
sbb
arpl
stos
lods
js
rclb
fdiv
add
ja
imul
push
sub
push
and
push
loop
or
mov
cmp
inc
lock
aam
push
call
mov
enter
ret
xor
aam
shlb
inc
cwtl
inc
lcall
sti
push
into
adc
mov
fsubrp
loop
cmpsb
sbb
jge
sbb
xor
adc
inc
push
and
dec
xor
data16
movb
loop
xchg
into
in
test
fisubs
pop
out
test
jg
pop
sbb
cltd
movsl
jns
jbe
pusha
lret
push
dec
lock
sub
sbb
cmp
rorl
outsl
xor
mov
add
mov
cmp
cmp
jmp
shll
sub
repnz
imul
cvtps2pd
mov
data16
ret
jmp
add
mov
mov
adc
add
adc
and
cmp
adc
mov
dec
outsb
mov
push
stos
mov
int
loope
pop
mov
pop
shll
scas
cli
fsubl
std
mov
push
int
lea
mov
mov
mov
xor
call
push
fs
fadds
push
xchg
jmp
push
in
fsts
fcompp
mov
dec
dec
add
arpl
xchg
js
and
aas
cmp
test
add
pop
mov
lcall
push
cmp
sub
pop
and
enter
jle
and
push
mov
ret
and
aaa
shll
push
inc
into
adc
sbb
dec
or
gs
outsb
stc
sub
call
and
fimull
mov
ss
push
add
push
es
sub
lods
pop
shl
dec
and
data16
pop
sbb
jns
pop
xor
mov
fwait
movsl
test
push
or
scas
mov
stc
into
sbb
mov
js
sbb
rorb
fildl
icebp
cmp
ficomps
je
add
js
or
fs
dec
cmp
outsl
dec
xor
push
dec
jmp
lock
mov
lods
mov
stos
and
lcall
ret
dec
mov
test
xchg
add
add
pop
pop
mov
pop
mov
cs
arpl
xchg
push
iret
push
fbstp
shll
mov
sub
xor
cmp
jl
pop
arpl
jg
shl
fimull
xchg
pop
ljmp
nopl
cmp
iret
test
mov
sub
jecxz
notb
fdivrs
mov
mov
jnp
mov
mov
clc
jge
std
fsubl
and
out
pop
dec
dec
stos
mov
lret
xchg
outsl
pop
mov
aas
dec
jo
push
insl
imul
jo
inc
loope
push
shll
mov
mov
or
pushl
jnp
pop
mov
jl
inc
xchg
leave
and
pusha
jge
fs
pop
xchg
adc
inc
lcall
lret
cvtps2pi
arpl
repz
iret
ret
jge
fcmovnu
fcompl
stc
mov
leave
pop
and
jnp
pusha
xorb
int3
push
popa
push
scas
es
cmp
stos
jle
cmp
pusha
js
xchg
mov
mov
dec
fs
push
ljmp
cs
imul
decl
subl
jge
and
into
cmp
xor
cltd
icebp
addb
repnz
repnz
out
push
pop
mov
pushf
mov
push
sbb
bound
adc
mov
leave
mov
inc
mov
inc
jmp
or
mov
jb
and
xor
inc
jns
cwtl
pushw
push
les
lea
not
nop
ret
pop
out
int
outsl
push
in
dec
fimull
fwait
data16
xchg
push
imul
fdivrl
fmuls
dec
mov
push
call
gs
xor
mov
lods
cmp
inc
push
dec
pop
xchg
jb
jmp
jl
or
push
sub
sub
sar
inc
cmp
cmp
mov
outsl
sub
add
test
lods
fs
pop
xor
pop
jae
pop
hlt
xchg
in
mov
sarl
fimull
mov
imulb
pop
push
push
aam
jns
inc
fdivrl
insl
scas
mov
mov
test
mov
add
dec
jb
xchg
add
cld
pop
loopne
mov
inc
jecxz
dec
push
leave
in
ljmp
scas
clc
cwtl
mov
js
js
cmp
mov
jnp
xor
loop
sbb
cmc
out
xchg
cltd
fucomip
jl
insl
shll
cmp
pop
or
jo
pop
dec
std
sahf
pop
lods
lret
push
and
filds
aas
mov
insl
inc
xchg
cwtl
insl
out
pop
inc
scas
stos
mov
xor
or
cmp
sahf
fwait
jl
ret
cli
test
stc
out
cmp
add
mov
ljmp
popa
test
jo
inc
in
jg
cmpsl
adc
fisubl
fdivl
xchg
xchg
mov
test
fisubrs
inc
das
dec
cli
in
pop
inc
mov
mov
mov
ret
mov
fs
push
xchg
outsb
dec
push
pusha
jb
test
lods
pop
mov
add
popa
xchg
dec
mov
mov
xor
fistpll
mov
je
push
add
hlt
mov
and
fs
dec
mov
call
pushf
lds
dec
mov
lea
enter
int3
mov
clc
mov
xchg
in
xor
fimull
outsl
jae
xchg
xchg
idivl
iret
dec
push
in
mov
cli
jno
insl
les
pop
xlat
sti
addr16
rolb
adc
and
mov
inc
push
inc
sbb
sbb
call
mov
inc
push
roll
jl
mov
leave
pop
push
daa
and
pop
repz
sub
mov
xor
add
xchg
icebp
call
add
mov
mov
stos
inc
sbb
mov
or
stos
addr16
push
test
mov
stos
call
fldl
sti
or
jecxz
cmp
int
mov
mov
add
adcb
mov
cmpsb
xor
or
sbb
and
add
hlt
push
enter
mov
jnp
rcll
mov
adc
shrl
xorl
lea
insb
popf
lret
scas
lahf
push
shl
sbb
iret
ret
mov
mov
sub
inc
js
fs
pop
push
leave
dec
test
pop
add
sub
mov
mov
sbb
icebp
push
cmc
dec
pushf
adc
arpl
sbb
enter
pop
cmp
sti
mov
fwait
repz
es
mov
fsubs
or
dec
fld
dec
out
andb
and
int3
cmpsb
lea
pop
or
sbb
shlb
add
dec
mov
add
loope
inc
movb
mov
push
jle
repnz
sbbl
test
add
mov
daa
add
popl
fsubs
frstor
mov
insl
mov
xor
loop
jmp
mov
xor
rorl
faddl
push
xlat
and
and
jl
sub
mov
cmp
fists
cld
push
mov
je
cwtl
or
fsubrl
ljmp
and
pop
or
inc
mov
sub
std
xchg
push
ds
aaa
and
inc
sub
fists
push
lahf
and
adc
jg
cmp
std
jmp
test
fdivrl
push
inc
pusha
sub
into
mov
js
mov
add
movups
lret
out
push
orl
stos
hlt
pusha
cmp
xor
pop
fistl
xor
stos
pop
push
das
arpl
movsl
mov
mov
shll
into
out
xor
mov
in
xchg
cmovs
mov
mov
lods
mov
inc
mov
gs
in
aam
test
ljmp
dec
jnp
mov
insl
jecxz
gs
mov
xchg
nop
push
ss
mov
pop
push
push
sub
push
test
cmp
sbb
shl
cmpsb
ja
jp
xlat
or
mov
xchg
add
add
sub
xchg
pop
cwtl
mov
cmc
test
aas
xor
adc
enter
sbb
movsl
jbe
mov
lret
cmp
aaa
scas
push
daa
push
xchg
test
lret
icebp
int
xor
movsb
mov
loopne
ret
fs
add
dec
aas
test
mov
lea
outsb
shrb
sub
cmpsl
jl
push
fsubr
js
call
stos
popf
sbb
add
ss
jp
adc
orb
inc
push
fwait
out
add
xchg
sub
fisubrs
pop
mov
push
sbb
inc
xchg
inc
mov
xchg
pushf
cmp
loop
mov
fists
popf
or
inc
movsl
push
pop
sti
iret
xor
es
add
daa
dec
xorb
mov
in
xchg
outsb
out
or
mov
inc
test
jmp
dec
mov
cs
rcrb
adc
xor
push
mov
outsl
hlt
movsl
add
rolb
repz
push
movsb
inc
mov
hlt
sahf
cmp
xchg
and
push
fwait
dec
sbb
ds
push
aas
stos
sub
add
fstpt
arpl
loope
in
sub
mov
inc
push
mov
or
jns
rep
mov
mov
test
mov
xchg
nop
cld
xchg
mov
outsl
xor
pop
testl
ss
lods
xor
fisttpl
dec
jns
push
punpckldq
push
pop
jno
cmp
leave
in
mov
mov
inc
cltd
lods
mov
movsb
fsubp
imul
mov
inc
repnz
xchg
into
push
movl
dec
and
lods
aad
sbb
lahf
aam
sahf
jae
in
fs
jae
je
enter
orb
bound
and
sub
cmp
fsubrl
cltd
repnz
out
sub
iret
add
sub
and
push
scas
sbb
push
adc
mov
scas
fdivrl
stos
scas
cmp
aad
mov
adc
adc
xchg
cli
mov
popf
mov
rcr
into
lock
cltd
adc
dec
add
mov
mov
in
data16
mov
pop
or
ret
sbb
loope
jg
cli
add
jp
pusha
cmp
addr16
rep
ret
xchg
out
loop
pop
data16
loop
jg
or
hlt
in
pop
dec
lock
xchg
xor
stc
std
andb
jg
fdiv
cmp
rcll
movsb
add
aad
xchg
mov
out
inc
mov
stc
outsl
mov
cltd
sbb
mov
cmp
test
cwtl
mov
movsl
loope
mov
pop
and
jmp
cli
sarb
aas
movntps
cmp
mov
data16
daa
or
imul
sub
jo
stc
push
add
xchg
fdivs
popf
sbb
xchg
lods
fidivl
jmp
mov
jbe,pn
dec
add
adc
jp
dec
ss
xor
mov
test
cmp
xchg
xchg
dec
rorb
xchg
sub
inc
and
inc
or
or
ret
sbbl
orb
loopne
es
add
mov
push
cmp
decl
aad
ret
sub
xchg
clc
mov
insb
fadd
hlt
inc
lea
sub
ret
pop
jnp
negb
add
mov
dec
rcl
ss
sti
test
lcall
or
pusha
fdivrs
push
loopne
lods
fbstp
cmc
jo
push
inc
icebp
dec
push
sub
adc
inc
ljmp
cmp
ficompl
jnp
lock
dec
jecxz
outsl
lret
jl
inc
pop
cs
pusha
and
dec
sbb
pop
xchg
push
inc
ja
stos
adc
hlt
gs
add
dec
mov
push
hlt
testb
push
jle
pop
jmp
jp
add
push
sub
inc
test
data16
es
pushf
icebp
xlat
or
pop
adc
fidivrs
leave
divl
mov
fldt
pushf
pop
adc
iret
imul
mov
mov
out
cmp
jle
addr16
or
fdivl
test
mov
jno
pushf
in
mov
popa
nop
mov
jp
ljmp
hlt
leave
cmp
dec
xchg
repz
popf
mov
das
push
mov
pop
mov
jae
and
add
pop
push
out
push
xor
imull
push
ss
sbb
addr16
out
test
cli
dec
push
ds
cmp
stc
popf
pop
test
jg
push
mov
int3
and
push
push
test
fisubrl
fiaddl
jne
sub
pusha
mov
cmp
and
lds
ds
dec
enter
mov
pop
popa
jmp
mov
imul
and
pop
jb
mov
dec
pop
or
cld
inc
dec
aaa
les
jmp
and
push
or
sub
adc
shlb
mov
sbb
cmp
shll
lock
inc
and
test
test
inc
pop
fcomps
pop
and
dec
mov
jbe
pusha
adc
mov
lret
push
pop
push
jge
mov
lea
cmp
push
push
stc
sarb
jo
movsl
mulb
pushf
add
test
sar
arpl
pushf
sub
push
cmp
repz
push
in
push
xchg
insb
or
mov
jo
push
lahf
test
outsl
lret
push
mov
and
pop
outsb
nop
mov
stos
and
pop
ljmp
fwait
jge
into
std
xor
mov
adcb
and
sub
scas
bndstx
pop
shrl
les
fwait
popa
and
or
loopne
mov
cmp
push
shll
mov
jge
cs
in
or
xchg
mov
daa
lods
jo
sub
fs
and
xchg
push
fnstcw
or
mov
cmpsb
mov
cli
mov
movsl
mov
ret
jg
jp
mov
inc
xor
sub
movsl
push
mov
ffree
sub
mov
inc
sti
dec
insb
sbb
pop
inc
ret
ficoml
jns
dec
push
inc
ljmp
in
mov
cmpsb
test
insb
sub
es
out
pop
arpl
imul
rcll
jmp
cmpsb
lock
pop
inc
addb
mov
int3
decl
fwait
loop
mov
pop
jae
outsb
mov
fildll
push
std
aam
pop
add
adc
adc
adc
add
mov
sbb
dec
inc
ja
out
lret
aam
or
xor
cmp
jmp
mov
outsb
imul
je
and
sub
xor
stos
or
jp
xchg
or
and
nop
pop
test
dec
jo
rcrb
add
mov
lock
sub
pop
jle
or
xlat
pop
cmp
int3
dec
int
dec
pop
call
je
mov
xchg
sbb
xchg
test
dec
pop
dec
popa
xor
aaa
push
ja
add
add
mov
pop
ret
movsb
push
stos
cltd
lret
jne
nop
les
cmp
and
push
iretw
mov
cmp
xor
loope
and
xchg
stos
out
popf
js
xchg
xchg
fistl
outsl
mov
cli
pop
bswap
push
fistpl
jmp
clc
cmp
sub
hlt
pop
sti
push
xchg
sbb
mov
rolb
sbb
insl
jns
out
sub
jle
sarb
insb
in
push
sbb
shll
popa
jecxz
dec
fadds
or
ja
xchg
jo
jmp
mov
ljmp
psrlq
sub
jnp
fsubs
nop
sub
fisttps
test
or
dec
sub
push
outsl
sarl
adcl
fstps
jb
push
dec
add
xchg
mov
sti
mov
cltd
insb
push
adc
sbb
lret
fmuls
mov
inc
dec
mov
sub
or
ja
ret
cmp
scas
cmpsb
bound
popf
sub
addr16
mov
out
inc
dec
jecxz
sub
imul
jecxz
aam
inc
and
cmp
cli
jecxz
xor
xor
jbe
sub
loopne
pop
inc
std
gs
cmp
sar
xor
cmp
cwtl
sub
jle
mov
pop
aas
jne
pop
imul
pop
enter
dec
insb
cs
inc
fldenv
popf
fimull
rorb
addr16
mov
lods
xlat
inc
cld
por
mov
dec
add
sbb
jecxz
ss
push
test
push
add
xchg
inc
subb
loope
dec
xchg
jecxz
icebp
ss
movsl
addr16
rol
testl
test
cmp
push
or
xor
cmpsl
or
leave
mov
dec
ficomps
insl
xlat
mov
bnd
call
icebp
mov
in
das
or
lahf
add
outsb
jmp
xchg
push
mov
ss
cmp
iret
test
mov
sub
test
xchg
jge
out
ss
call
push
ss
xor
add
jbe
shrb
rorl
mov
inc
out
es
out
jbe
adc
ss
cmc
inc
pusha
pop
xchg
test
mov
leave
ljmp
outsb
repz
mov
lea
cli
lret
and
lcall
jecxz
jno
pop
lea
mov
sub
mov
dec
ret
push
imul
jb
dec
dec
cwtl
push
fcomps
shrb
nop
into
cmp
or
xor
movsb
fistpl
shlb
shrl
xlat
lahf
and
push
outsb
jb
jo
jp
jmp
jle
aam
jne
inc
pop
popf
or
icebp
mov
leave
std
loopne
inc
in
cli
ljmp
ss
das
cmpsb
cltd
jae
loopne
lods
and
lcall
ret
lcall
lods
or
or
push
mov
cmp
scas
mov
stc
data16
ret
dec
or
inc
out
pop
scas
pop
clc
bound
jae
dec
movsl
loop
subb
lea
fs
je
insl
push
sti
sub
sub
adc
dec
jge
mov
inc
lcall
jl
and
mov
jae
inc
or
in
mov
ss
mov
mov
push
mov
jb
adc
ljmp
pushf
fcoml
jne
sbb
jp
push
xchg
cld
cli
and
sub
xchg
es
dec
dec
les
jo
sub
inc
adc
imul
roll
mov
imul
lahf
movsb
and
dec
out
and
shl
adc
jl
inc
sub
sub
dec
out
repz
xchg
loope
mov
ss
cmp
or
iretw
faddp
lock
push
fistl
cmp
xchg
jl
call
add
add
mov
mov
outsl
stos
xor
push
cmpsb
mov
insb
inc
mov
sub
ds
cmc
int
outsl
cwtl
aad
popa
pop
pop
adc
push
xchg
out
cld
adc
mov
cmp
sub
test
fnstenv
fstl
sbb
lret
and
cmp
and
incl
gs
xor
inc
dec
xlat
xchg
add
sub
stos
mov
lahf
sbb
enter
out
adcb
into
cmp
outsb
pop
sub
inc
mov
dec
adc
sub
sbb
div
jmp
xchg
aaa
sbb
stos
sbbb
fcmovb
repnz
insl
jp
mov
jbe
mov
dec
push
sbb
add
subb
sbb
data16
ljmp
inc
aam
or
sar
gs
dec
mov
cmp
mov
mov
in
push
addb
retw
add
pop
push
and
inc
insl
sub
fidivs
pop
ficoms
call
iret
inc
or
xor
into
inc
je
or
sub
push
cmp
add
mov
imul
pop
mov
mov
jb
iret
popf
les
add
inc
cmpsb
out
cmp
xor
mov
in
pop
test
ret
test
fnstenv
and
push
mov
add
mov
jo
popf
std
aad
iret
mov
jge
test
ret
adcl
add
arpl
fwait
xchg
fs
jge
adc
push
mov
pop
jnp
xor
xchg
mov
pop
mov
push
xlat
push
dec
add
rclb
enter
aas
inc
int3
in
mov
mov
test
cwtl
sub
sub
add
sbb
dec
push
inc
mov
dec
daa
fiadds
into
and
and
or
test
and
push
movsb
fiadds
push
pavgb
sbb
add
mov
dec
out
mov
pop
ds
std
lret
lods
and
testl
push
adc
push
andb
xchg
jns
iret
fwait
loope
sub
ffreep
ret
sub
pushf
mov
pop
push
mov
lcall
imul
out
scas
sub
dec
bound
jno
mov
leave
insb
inc
mov
xchg
leave
sarb
fldt
mov
mov
leave
xor
movsb
andb
dec
xchg
adcl
xor
push
push
lcall
jle
mov
imul
xlat
push
nop
mov
pop
std
cmp
sub
scas
or
pop
addr16
push
icebp
clc
or
pop
mov
outsl
loope
xor
movsl
imull
push
mov
mov
mov
pushf
lcall
xchg
inc
gs
call
add
push
jmp
in
add
adc
ljmp
loope
jno
adc
lea
in
loope
sysexit
lods
push
or
jbe
sbb
idivl
repz
jno
lcall
aam
or
adc
sub
dec
aam
in
xchg
dec
nop
adc
lahf
stos
in
shrl
cs
lcall
and
sub
inc
testl
lcall
bound
dec
sbb
imul
add
sub
rorl
mov
mov
inc
jecxz
shrb
xor
insl
dec
cmp
outsl
push
ja
mov
out
inc
stos
push
jnp
arpl
iret
enter
jbe
or
in
mov
stos
fbld
sbbb
ret
jne
dec
mov
into
push
add
add
shlb
imul
fcoml
mov
sbbb
push
outsl
icebp
dec
lahf
ljmp
jge
cmc
mov
mov
cmp
aad
and
sub
push
or
pop
in
nop
int
ss
in
adcb
insl
cli
arpl
mov
daa
mov
mov
dec
mov
ljmp
insb
je
shrl
fadds
add
arpl
and
xchg
lret
cmp
insb
pop
dec
out
mov
jge
cltd
mov
mov
int
add
push
inc
pushw
dec
xchg
jns
movsb
dec
push
pop
mov
inc
jge
fmull
jmp
in
inc
adc
insl
repnz
mov
dec
testb
cmp
outsb
mov
add
cmc
cmc
jbe
loope
push
lret
pop
das
mov
test
mov
ljmp
into
xlat
add
stos
scas
mov
outsb
sbb
leave
xor
ja
lret
orb
sub
cli
icebp
xchg
int3
inc
movsl
mov
jmp
mov
movl
push
mov
fwait
mov
sbb
adc
mov
adc
faddl
aaa
ds
add
popa
jb
enter
jg
stos
ret
out
push
sub
dec
cmp
dec
jp
mov
les
xor
jl
js
jl
inc
pop
movsb
jbe
loopne
into
in
test
adc
and
ja
fadd
enter
or
and
cmpsb
jae
outsl
mulb
pop
test
pop
subl
adc
clc
adc
or
test
push
das
lea
fisttpll
cwtl
das
pop
mov
xchg
insb
sub
jle
in
imul
popa
mov
das
shll
pop
xor
sbb
fcoms
sbb
push
add
push
movsl
pop
xlat
or
sti
das
test
mov
cld
sub
mov
out
lock
push
cld
adc
pop
js
jne
in
mov
xchg
fst
nop
sbbl
or
adcl
xchg
daa
jge
xor
int
rcr
mov
sub
dec
cmp
cltd
and
add
pop
and
test
pop
pushf
outsl
aas
mov
jge
fildl
cwtl
and
mov
sbb
pop
jmp
xor
and
js
jg
sbb
push
mov
movsl
in
xchg
cmc
popl
xchg
ret
shl
xchg
mov
sarl
icebp
pop
es
xchg
sub
lret
xchg
xor
cmp
loopne
mov
adc
mov
push
xor
jge
out
popa
rcrl
add
xchg
xor
mov
push
nop
cmp
xor
mov
test
inc
sbb
and
fld
mull
cmc
insb
std
inc
or
adc
das
cmp
push
xchg
lock
push
adc
in
ds
sub
jmp
xor
jne
mov
aad
inc
sbbl
jmp
xchg
mov
cmp
lods
lods
adc
xchg
and
cmpsl
adc
mov
jmp
aam
ret
loope
cmpsb
testl
cmp
jle
test
pusha
insl
rclb
or
xchg
inc
jbe
jne
aaa
push
sub
shrl
jg
mov
inc
push
add
cmp
data16
push
mov
cmp
inc
arpl
mov
outsb
pop
scas
fst
sub
mov
shrl
xchg
lcall
leave
mov
pop
pop
inc
xor
xor
scas
js
inc
mov
insl
xor
fimuls
rep
loop
aaa
lock
sbb
fnstenv
push
sbb
ret
xchg
mov
inc
xor
popf
shll
add
cltd
fsts
loop
stc
dec
mov
hlt
leave
mov
sub
pop
mov
pop
adc
adc
out
insb
inc
lret
and
divb
xor
push
and
lods
gs
xlat
pop
loop
sub
pushf
cmp
mov
cs
insl
fldt
xchg
dec
out
inc
jecxz
xchg
leave
pop
es
and
cld
movsb
pop
repz
shl
scas
stc
mov
push
out
roll
scas
cltd
std
sub
sub
mov
punpckhwd
fcoml
test
in
sbb
xchg
lds
les
xor
ss
mov
push
sbb
dec
jno
pop
stos
mov
adc
and
add
mov
ja
roll
fistl
fistpl
push
std
mov
subl
stc
leave
subl
adc
js,pt
out
sub
or
mov
inc
rcl
out
and
faddl
ret
pop
sub
mov
xor
dec
jg
in
mov
decb
movsb
dec
scas
xchg
push
add
rcrb
xchg
push
jmp
cmpsb
cmpsb
divb
sbb
mov
popa
jb
bound
push
rcrb
mov
push
add
inc
jo
out
int
jge
into
cld
xchg
ret
sub
push
stos
punpckhbw
dec
mov
loope
insb
pop
jge
int
mov
sub
push
enter
adc
xchg
outsb
push
sub
mov
test
stos
xlat
repnz
lcall
or
in
shlb
dec
mov
outsb
mov
mov
or
xchg
push
fildl
cmp
fcomip
sbb
push
rcr
lds
cmpsb
out
es
shlb
pushl
jl
xchg
dec
mov
inc
movsl
insl
or
jg
ss
fcompl
jnp
dec
testl
adc
xor
mov
dec
fcomip
clc
stc
repnz
enter
mov
pop
inc
daa
int
xchg
cmc
push
dec
dec
pop
cmpsl
stos
sub
cmp
push
insl
adc
mov
jae
push
test
ljmp
enter
mov
sbb
inc
std
loope
lock
or
xchg
loope
jae
and
jns
out
and
sbb
movsl
sub
dec
add
imul
mov
pushf
loope
jmp
jmp
cltd
fstps
cmp
ss
push
fldl
mov
movsb
dec
push
out
loop
rcrl
daa
decb
cmp
ss
leave
push
pushf
xor
out
adc
test
mov
adc
jmp
jp
movl
out
mov
xchg
xor
cs
call
js
ja
hlt
movsb
call
in
inc
jle
out
inc
and
jo
les
mov
cli
xchg
fisubl
into
test
jae
movl
insl
mov
sahf
cmc
mov
inc
loope
lds
sub
mov
lods
loope
or
scas
mov
cld
push
jnp
call
jnp
mov
jecxz
push
sub
shl
cmp
lock
xchg
push
and
adc
xchg
sbb
add
pop
mov
mov
lds
into
leave
shll
xchg
scas
cli
pop
jg
jle
pushf
pop
push
insb
inc
outsl
xor
lds
jbe
popf
mov
movsb
shl
add
xor
mov
pushf
jnp
popf
leave
cmp
push
outsl
pop
pop
mov
or
add
mov
sbb
xor
fpatan
decl
jp
add
out
roll
inc
and
mov
cmpsb
sahf
xchg
cld
std
gs
aam
push
inc
adc
ret
inc
lret
ja
sub
daa
pop
mov
imul
aaa
adc
cmp
adc
jo
repnz
or
daa
jge
fs
addr16
test
out
jmp
cmp
mov
push
pop
lea
or
jmp
cmp
aaa
les
sbb
rcl
adc
mov
mov
js
lods
mov
pop
lcall
mov
push
and
pop
cmp
xchg
xor
xchg
out
in
xchg
in
push
in
mov
mov
mov
xorl
clc
mov
cmp
mov
pop
fdivr
mov
jp
push
cs
lods
mov
fcompl
xor
pop
pop
xchg
pop
cmpsb
lods
stos
pop
mov
jecxz
adc
mov
cld
jns
jg
push
cmpsb
insl
ficoml
fnstenv
in
es
outsb
adc
std
int3
or
and
movsl
cmpsb
sub
cmp
inc
imul
jne
sti
fidivrl
dec
dec
rorl
pusha
nop
xchg
push
popf
aas
xor
test
or
stos
in
es
gs
pusha
test
jo
dec
lds
xchg
lock
adc
ja
mov
fdivrl
mov
xor
loope
dec
adc
fbld
lea
cmc
lea
sarl
cmc
inc
lea
pushf
mov
addr16
inc
mov
mov
pop
inc
es
cli
nop
mov
cmp
mov
mov
cmpsl
pusha
inc
mov
pop
sub
jg
adc
push
call
adc
xchg
into
pop
addr16
inc
movsl
and
aaa
les
stos
mov
sub
sbb
scas
inc
adc
popl
inc
mov
fcomps
xchg
adc
push
enter
out
add
loopne
outsb
stos
jno
push
cmp
mov
ja
mov
test
jge
mov
fcmovnbe
in
cmp
pop
dec
out
adcb
int
sub
out
or
push
mov
or
add
ret
mov
mov
jle
sub
sbb
imul
or
sub
scas
push
xor
je
or
dec
jnp
test
outsl
lret
cmpsl
fisubs
repnz
lock
lods
iret
mov
ret
dec
scas
sbb
test
inc
shll
out
loope
and
mov
test
sbb
int
or
inc
lods
aaa
xor
sahf
or
and
enter
subl
dec
aas
popf
push
inc
fistpll
pop
in
inc
add
orl
or
cwtl
sub
mov
jmp
pop
sti
push
testb
adc
and
out
dec
rorb
addl
or
sbb
enter
sbb
jg
mov
xor
inc
mov
fsubs
mov
repnz
jbe
cmp
icebp
mov
in
out
xchg
push
cmp
imul
mov
xchg
sbb
xchg
mov
push
adc
xor
add
aas
into
icebp
dec
fcmovbe
jg
imul
add
shlb
mov
es
mov
or
out
push
sub
inc
adc
xor
jae
mov
testl
popa
xchg
and
pushf
xchg
popf
mov
nop
lret
cld
sbb
jnp
xchg
in
lock
push
push
add
jmp
mov
or
aas
mov
sarb
in
pop
push
call
cmp
inc
push
xor
lods
test
mov
ftst
adc
inc
push
push
dec
push
testl
sub
imul
cmp
sub
push
push
jae
push
pop
or
mov
mov
mov
jp
sti
leave
ret
lcall
xchg
popa
loope
loopne
repnz
and
pushf
mov
mov
pushf
xchg
xchg
pusha
inc
sbb
rorb
cmp
fdiv
or
mov
out
movsl
adc
pop
rorb
sub
mov
lea
lcall
out
cmpb
cwtl
jmp
push
nop
in
inc
mov
popf
xchg
in
shll
sub
inc
pop
std
xchg
scas
out
fs
sbb
jmp
pusha
arpl
mov
movsb
lret
cmp
je
ss
jo
scas
dec
jne
add
jno
cmp
sahf
mov
or
push
mulb
mov
es
in
cmpsb
out
test
pop
js
lods
cltd
inc
adc
std
sbb
mov
out
popf
out
inc
mov
jbe
lods
out
push
xor
shll
xor
leave
lahf
adcb
imull
popf
mov
out
ljmp
xchg
pop
test
jecxz
mov
data16
outsl
fisttps
in
xor
or
pop
adc
jo
dec
or
and
jecxz
loop
int
mov
cmp
mov
aas
pop
rol
sbb
and
fdivr
repz
rcrl
push
fwait
sarb
mov
sbb
lahf
inc
lret
aas
imul
xchg
pusha
and
xchg
js
pop
jnp
pusha
dec
push
in
inc
cmpsb
cmp
fimull
les
mov
pop
xor
pop
inc
in
ficoms
outsb
xlat
nop
jo
je
rcll
mov
jge
mov
add
inc
push
cmp
psubsb
add
popl
push
dec
setb
or
lods
daa
loop
jecxz
insl
mov
fildll
into
xchg
sbb
mov
out
jbe
cmp
stos
mov
jmp
sub
pop
in
mov
mov
sub
subl
mov
ss
sub
push
das
xor
enter
icebp
sahf
or
insb
mov
in
fsub
push
pusha
xchg
in
ljmp
mov
sbb
cmp
addb
mov
pop
fcoml
sbb
mov
sarl
mov
icebp
jge
lret
pcmpeqw
add
mov
and
data16
in
sbb
and
dec
xor
sbb
dec
ret
add
clc
xor
inc
xor
ss
popa
int
inc
inc
orb
dec
loop
loop
leave
stos
fdiv
or
pop
and
mov
mov
cltd
push
mov
bound
and
in
test
popa
loope
jecxz
adcb
mul
jne
cmp
inc
xorl
mov
jo
jno
mov
adc
or
mov
jno
inc
int3
imul
std
adc
or
mov
ljmp
pop
cmp
and
cmpb
sbb
test
popa
xor
mov
push
push
cmpsl
adc
fidivl
fidivs
push
lock
insb
fcoms
cltd
std
jnp
xchg
pop
dec
jle
xchg
ja
cmpsb
daa
add
inc
add
and
inc
and
test
jg
xchg
icebp
or
mov
or
sahf
movsl
stos
add
cmp
and
push
clc
out
push
movsb
and
bound
stos
ja
dec
insb
test
inc
xchg
push
fldcw
push
mov
test
lret
sbb
mov
or
jg
pop
in
das
sbbl
mov
data16
and
loopne
and
inc
push
pop
clc
adc
jnp
xchg
les
add
push
and
insl
pextrw
lods
mov
aaa
cli
or
inc
out
or
cmp
loope
pop
dec
stos
lahf
adc
imull
jmp
nop
adc
mov
arpl
jo
fimull
xchg
dec
stos
push
repnz
jns
jae
test
leave
pop
push
shll
sub
arpl
mov
jbe
popf
pusha
cmp
data16
dec
cld
adc
sbb
mov
pop
mov
fstpl
dec
es
fwait
mov
mov
add
out
cmp
mov
fisttps
xchg
aam
lods
imul
dec
arpl
je
in
cmc
lret
sub
sbb
jno
pop
in
sbb
push
xchg
fsubrs
fbstp
insl
inc
xchg
sti
mov
imul
aad
jg
or
fistl
scas
adc
out
and
popa
test
mov
loop
sbb
xchg
mov
jne
jl
stos
xor
pop
setns
push
pop
adc
cli
shlb
dec
mov
xchg
cmpsb
xor
loop
sub
insb
push
insb
sbb
sarb
loope
jno
scas
arpl
push
push
repz
ds
push
jbe
inc
subb
mov
inc
mov
and
inc
add
popf
xchg
jle
and
sbb
add
lods
faddp
addr16
aam
push
dec
jecxz
in
setnp
mov
out
or
push
cltd
jbe
cmpsl
in
cmpsb
sub
push
into
fwait
shlb
imul
out
sub
push
sbb
repz
sbb
push
pop
pushl
aam
xchg
scas
jb
iret
loopne
lea
lea
das
adc
add
ds
mov
lahf
adc
jo
dec
je
in
inc
icebp
mov
sahf
dec
push
aad
and
mov
into
fwait
fs
jg
pop
cli
pop
jb
cli
jns
out
jp
mov
xchg
xchg
push
out
xchg
psllw
xlat
cmp
fwait
sub
stos
mov
dec
inc
sbb
movsb
ljmp
mov
ljmp
xchg
movsb
inc
cmc
mov
mov
inc
jo
jg
mov
add
mov
mov
mov
sbb
jno
add
ret
xchg
call
js
pop
jmp
sti
sahf
or
ret
es
ss
mov
stos
pop
and
mov
mov
fnstcw
lret
aam
adc
adc
out
dec
out
cmp
fs
and
push
ss
push
jg
pop
cmp
shr
xchg
ds
rorb
pop
repnz
bound
addr16
cmp
sub
aam
outsl
xor
push
xor
fsts
sti
fstpl
cltd
xor
jge
pop
jbe
daa
mov
lea
adc
ret
cltd
in
idiv
dec
mov
mov
aaa
jmp
movsl
sarb
inc
loope
ret
adcb
pushf
adc
loop
or
insb
mov
nop
nop
mov
sub
insl
pop
aaa
mov
pop
in
insl
insb
lock
pop
push
mov
test
loopne
movsb
fidivl
and
and
ret
push
xor
adc
inc
cmpsl
jge
adc
pop
je
inc
pop
push
push
pop
mov
ss
add
pop
int3
fmul
inc
jmp
dec
arpl
sahf
pop
and
sti
jns
lods
xchg
jmp
inc
aaa
sub
mov
sbb
fcompl
loopne
inc
fstp
or
bound
mov
in
scas
mov
cmp
std
or
aaa
dec
sub
xor
dec
movsb
in
je
in
xchg
cld
push
adc
out
fsubl
push
in
add
jb
mov
jle
adc
subl
xor
dec
dec
inc
xlat
sahf
push
sub
inc
add
push
xorb
mov
movsb
in
test
bound
loopne
push
or
mov
sub
icebp
jge
sub
lock
mov
mov
sahf
test
loop
push
sbb
in
mov
push
adc
lcall
stc
addr16
jnp
stc
es
les
pop
push
div
shrb
mov
add
push
cli
jne
std
mov
outsl
and
arpl
xchg
rolb
xchg
mov
mov
xchg
mov
mov
fwait
inc
insl
int3
insl
pop
cli
aad
mov
push
ret
int3
cmpsb
jge
cmp
adc
jnp
push
inc
mov
xchg
ljmp
push
divb
outsb
mov
popf
icebp
jbe
outsb
or
push
repz
jbe
sub
add
xorl
mov
shl
push
inc
dec
pop
out
mov
shlb
ja
addr16
lds
inc
arpl
outsl
xchg
push
sub
rorl
or
daa
add
inc
jb
pop
dec
dec
imul
adc
dec
xor
fstpt
sbb
xchg
adcb
sbb
lahf
in
xor
adc
mov
repnz
test
mov
fst
inc
leave
pop
andb
es
aas
fadd
jp
cmp
mov
push
push
push
pusha
push
stos
popa
adc
fisttpl
ds
gs
sarl
cwtl
stc
lea
out
xchg
fildl
cmp
push
pop
mov
sub
ljmp
and
mov
push
and
mov
stos
fs
mov
push
push
jmp
pop
pop
mov
mov
popa
lds
imul
fwait
ljmp
pop
adc
sbb
out
cmp
or
sub
cmpsb
out
sbb
mov
adc
push
adc
das
jle
incl
adc
cld
xchg
add
shll
jb
push
adc
fdivr
lock
dec
lods
iret
push
jmp
outsb
push
pop
and
test
sbb
loopne
out
add
inc
add
insb
cli
prefetch
or
pop
push
adc
imul
loope
movsl
test
repnz
jae
icebp
push
jl
mov
xchg
hlt
fisubl
cld
int
mov
push
pop
pop
cmpsl
sbb
test
mov
cmp
aam
call
add
out
repnz
inc
mov
mov
les
jle
jb
xchg
in
sbb
jge
cld
arpl
imul
adc
loopne
cmp
imul
inc
loopne
arpl
xor
jecxz
dec
pop
mov
xchg
xchg
jae
les
nop
fnsave
jno
xor
cmpsl
sti
sti
jae
fwait
mov
into
jmp
cmp
dec
cltd
xor
iret
lcall
call
adc
dec
icebp
cmp
cltd
clc
inc
addr16
clc
mulb
fcmovnbe
mov
xchg
shrb
inc
sub
dec
xlat
xor
mov
jp
int
rcr
jl
jns
lret
lea
push
stos
out
pop
in
fs
jb
dec
aas
ds
out
cld
insl
push
int3
push
jae
int
shl
lahf
jae
mov
nop
pop
adc
mov
sbb
mov
sar
faddl
testb
nop
call
push
in
ret
push
arpl
mov
sub
out
scas
inc
cmc
ficomps
inc
or
sbb
mov
cmp
cmp
mov
dec
push
mov
shrl
sbb
sahf
xchg
aaa
ret
sbb
jecxz
jb
ljmp
add
sahf
and
das
xchg
adc
mov
mov
adc
rcrb
push
leave
gs
dec
stc
hlt
jge
fisubs
jb
into
and
sbb
out
popf
sub
sbb
and
stos
add
sbb
and
rcrb
stos
shrl
jl
aad
jmp
cmc
dec
lgdtl
adc
das
rol
test
pop
insl
sub
rorb
xchg
mov
cmp
scas
push
jmp
or
pop
xor
or
xchg
movsb
out
aam
enter
mov
in
xchg
sbb
ja
test
frstor
push
add
sarl
or
push
rcll
pop
fnstenv
pop
jle
jp
ret
add
sbb
push
cmc
sti
jo
mov
out
inc
jl
xorb
js
push
sub
push
jbe
dec
xor
hlt
dec
push
jns
ret
xchg
pop
shrl
leave
subl
je
add
adc
xchg
or
fidivrs
push
or
faddl
sbb
loopne
leave
andb
or
xor
pop
push
fwait
jle
fs
iret
out
lret
inc
inc
out
andb
bound
dec
or
lods
jae
out
cli
mov
push
jno
mov
adc
enter
xor
addr16
mov
int3
mov
flds
cmpsb
loop
mov
int
dec
out
xor
into
xchg
inc
xor
aaa
or
xchg
mov
mov
notl
mov
sbb
or
push
adc
incb
fs
push
and
fildll
outsl
sbb
ljmp
adc
adc
mov
rcr
ret
pop
bound
mov
xchg
cli
jno
push
insl
cmpsl
js
push
movsb
insl
push
push
jbe
mov
lods
mov
rcll
mov
into
and
push
xor
lret
push
sbb
pushf
xchg
mov
jg
test
pop
insb
in
mulb
xchg
out
rcl
xor
cmpsb
push
out
aaa
lds
push
xor
dec
pusha
jae
movb
and
mov
lret
mov
lahf
scas
ret
pusha
inc
nop
adc
xorl
hlt
or
mov
lock
jns
repnz
dec
ss
xor
call
inc
dec
dec
and
cmpsb
jl
jge
bound
inc
mov
stos
cmc
sbb
adc
mov
sub
movsl
gs
icebp
jg
jns
pusha
adc
in
and
dec
addr16
and
pop
pop
lret
fwait
scas
add
nop
mov
pop
imul
sub
add
xchg
mov
dec
xor
mov
and
jns
mov
inc
sbb
mov
sti
mov
movsl
pop
fisubl
cmp
or
cmp
into
test
cmpsb
loop
cmp
adc
xor
mov
mov
sbb
or
sub
adc
lods
or
push
and
cmp
sahf
push
dec
sub
loop
cmp
pop
int3
cmp
lds
mov
mov
xor
js
imul
testb
cs
imul
pop
push
enter
adcb
mov
add
jno
and
mov
rcl
pop
and
push
jl
or
and
adc
pop
or
movsl
daa
jb
adc
mov
fidivrl
sbb
loop
adc
lds
inc
sub
lret
aas
pop
xchg
jle
jns
repz
pushf
cli
fnstcw
cmp
pop
jmp
loopne
call
mov
pop
or
enter
pop
lret
dec
sbb
cli
int3
sub
mov
ret
push
adc
test
into
and
pop
mov
cmp
hlt
jb
in
inc
daa
lret
imul
or
bound
lods
cltd
or
dec
sub
sub
inc
mov
repz
inc
fisttpl
mov
mov
ljmp
call
cld
jmp
and
arpl
xchg
pop
push
mov
cmp
into
mov
adc
scas
fdivp
mov
fldenv
fwait
lret
jg
xchg
cwtl
adc
sub
loopne
shlb
cli
cld
lcall
imul
repnz
rcrb
insl
adc
pop
xor
lret
xchg
mov
dec
mov
gs
lret
cmpsb
cld
outsl
jl
xor
jl
xchg
sub
sbb
adc
or
jb
xchg
adc
xchg
mov
sub
je
hlt
lock
adc
int
cmp
dec
arpl
inc
adc
pop
mov
scas
mov
mov
arpl
out
or
push
inc
enter
sbb
int
adc
push
mov
cmc
dec
mov
stc
insb
xchg
xor
adc
and
dec
cmp
dec
and
cwtl
xor
hlt
outsb
adc
cmp
jne
dec
xor
xor
cli
inc
dec
xlat
enter
xchg
aas
sbb
sbb
add
cmp
setp
test
push
sbb
xchg
stos
push
jo
es
mov
rolb
pop
negb
test
mov
sti
xor
and
dec
das
mov
js
cmp
jp
in
loope
sbb
ret
mov
inc
mov
and
push
inc
or
mov
or
movsl
sub
les
loopew
imul
add
jno
imul
fisubl
mov
sub
jl
and
or
test
les
and
jmp
inc
push
leave
gs
je
xor
or
aas
ljmp
mov
arpl
mov
and
sbb
in
addr16
add
ds
sub
pop
xor
cwtl
test
push
stos
lds
xor
das
jb
mov
test
ljmp
adc
into
and
pushf
push
pushf
xchg
push
push
inc
pop
pop
sbb
cmp
cmpxchg
dec
leave
paddusb
jb
mov
test
xchg
adc
push
cwtl
push
xor
cli
mov
popf
mov
bnd
imul
or
xchg
jbe
push
jno
cli
and
in
mov
in
jle
imul
fildll
aaa
xor
decl
in
jo
pop
sub
xchg
cwtl
xor
stos
jmp
fcoml
adc
sbb
ret
rep
jp
cmp
add
ja
add
cmp
dec
jb
cmpsl
cmp
inc
adc
ljmp
scas
xchg
xchg
jl
out
popf
movsb
arpl
nop
bound
addr16
in
jae
mov
and
jecxz
pop
push
push
daa
ja
bound
aam
fnsave
sub
cli
pop
xchg
addr16
movsb
jmp
push
mov
dec
ss
fnstenv
insl
push
add
lcall
sub
fdivrs
int3
inc
repnz
enter
cltd
les
jae
ss
fsubs
cmc
jb
mov
lock
loope
mov
adc
jmp
push
pop
push
movsb
in
xlat
xor
sahf
add
negl
repz
jne
pop
push
add
mov
enter
les
mov
mov
jno
popf
push
adc
push
adc
scas
imul
fsubl
xchg
aaa
mov
mov
fcos
and
xor
cmp
movsl
xor
cmc
loope
int3
sub
fmul
mov
shll
popa
popf
scas
mov
or
jns
into
orl
lcall
mov
mov
add
cmp
dec
mov
in
outsl
push
dec
xor
push
hlt
sbb
nop
mov
sub
dec
pop
or
mov
sub
mov
shlb
out
aam
leave
icebp
and
inc
shll
or
sub
repz
loopne
and
pusha
xchg
xchg
ljmp
pop
clc
jmp
inc
pop
loope
dec
jbe
sbb
sub
jo
in
cmp
xchg
jne
xor
dec
mov
mov
cmp
sub
jo
push
push
push
pop
jl,pt
insb
xor
push
push
cmp
push
cmc
add
ljmp
mov
cmp
mov
rcr
dec
push
loopne
dec
cmpsb
test
add
sarb
sbb
jmp
insl
iret
imul
inc
aam
nopl
xchg
iret
push
or
add
cltd
cmp
mov
sub
out
cmp
xchg
sbb
push
push
cmc
jns
pop
mov
push
stc
inc
dec
lods
jo
dec
loop
xor
movsb
xchg
nop
and
insb
and
in
jmp
mov
aam
call
fsubrp
dec
nop
sbb
mov
mov
les
ret
add
xor
push
ja
push
cmp
cli
aad
jno
xchg
inc
add
arpl
popf
and
pop
pop
adc
or
jne
dec
lcall
push
add
lcall
loop
in
and
adc
daa
add
pop
insl
loopne
xor
jp
push
int3
jns
insb
mov
or
cmpsb
lods
outsb
addl
mov
sub
jb
lret
xor
sbb
mov
addl
rcl
movsl
enter
dec
insb
popl
dec
jne
lret
sbb
mov
pop
test
repz
add
inc
xor
push
fwait
cmp
mov
mov
in
or
cmp
or
mov
jne
xor
clc
imul
push
fdivl
or
jmp
xchg
mulb
pop
mov
sbb
xor
test
xchg
jg
lret
sbb
xchg
push
shrb
jle
and
add
pop
xor
nop
js
inc
sti
pushf
aad
inc
jg
xchg
jg
inc
scas
mov
insl
mov
pop
leave
scas
and
fadds
rcl
xor
mov
and
in
adc
mov
push
push
cltd
mov
scas
test
cld
xor
add
and
or
incl
add
out
dec
push
cmovae
rcll
es
push
xchg
and
add
je
xor
xchg
mov
push
movntps
and
leave
mov
sub
xchg
dec
and
push
test
xchg
and
xor
test
pop
dec
out
mov
scas
xchg
out
cltd
daa
bound
xchg
insl
dec
mov
fwait
xor
pop
sub
cs
jge
es
outsl
iret
popa
xchg
jns
sti
inc
addl
cmp
push
icebp
inc
data16
push
mov
stos
jnp
jae
mov
add
movsb
scas
inc
mov
ss
stc
add
push
inc
in
ds
push
in
xchg
sahf
fldl
jp
movsb
jmp
jno
bts
mov
push
push
mov
push
mov
mov
push
jle
imul
mov
mov
bound
add
fisttpll
dec
lods
mov
xchg
sub
out
or
hlt
mov
sbb
out
jne
push
popa
jmp
push
lcall
pop
lahf
loop
je
xchg
ja
sbb
fstpt
fcomps
fwait
jp
into
dec
xor
aaa
add
in
fmuls
jno
xor
insb
fldpi
in
xchg
mov
imul
mov
cmp
jmp
das
add
dec
push
int
shl
arpl
cwtl
xchg
sahf
xlat
lea
mov
or
cmp
mov
cmp
divl
and
jno
movsl
jl
pop
out
xchg
fisubs
inc
ds
xor
jp
shrl
lret
mov
enter
pop
inc
jg
outsl
ljmp
adc
add
in
shlb
pop
xlat
xchg
dec
ret
sti
pushf
jl
sub
daa
xor
iret
xchg
pusha
or
sti
pop
mov
and
xchg
sahf
shl
cli
repz
jp
xor
loopne
jns
aaa
addl
lock
xlat
jno
add
popa
nop
mov
adc
sub
and
jg
add
xlat
adc
mov
push
rol
xchg
sub
insb
fcmovu
inc
mov
adc
dec
add
fisubs
loopne
loopne
sub
xor
popf
xchg
test
fstpt
or
or
fildll
push
lcall
daa
adc
jge
mov
rol
sbb
jle
aad
lods
inc
pop
sti
popf
stos
lds
vpaddw
push
xorb
mov
push
pop
popa
fadds
mov
pop
lods
xor
gs
pop
mov
out
lret
aam
sbb
inc
or
aad
int
enter
or
push
pop
int
jae
mov
xchg
lret
fisubs
out
mov
mov
xor
out
mov
cmp
js
cmpsb
add
int3
lret
cmpsl
add
xchg
clc
mov
inc
add
xchg
cmp
mov
out
sahf
adc
rcrl
inc
push
xor
call
pop
dec
nop
shl
fsubrs
xchg
and
inc
movsl
inc
sahf
jle
xchg
rolb
stos
ror
cmpsl
outsb
lcall
subl
aaa
or
adc
out
dec
adc
imul
or
jecxz
sbb
movsl
and
lret
loopne
dec
mov
push
mov
xchg
jno
imul
in
loop
mov
mov
sti
das
sbb
adc
or
jmp
movups
add
lret
inc
lds
insl
mov
pop
cli
fcom
xchg
jmp
push
outsb
lret
ds
jmp
and
dec
xchg
sub
jg
fs
aaa
cmc
gs
jmp
lcall
loope,pt
xor
push
jg
push
xchg
adc
xchg
pop
movl
dec
lds
xchg
loop
add
adc
jle
pop
jecxz
jg
add
hlt
or
daa
push
pop
arpl
dec
int3
rorl
cmp
sbb
insl
jmp
scas
jl
out
cmpsl
aas
push
pop
push
jmp
inc
js
andl
std
or
jg
cs
fisubl
in
movsl
pop
mov
cmp
sbb
mov
sub
xor
jns
gs
aad
cmp
rorl
insl
mov
in
mov
mov
fwait
adc
and
shrl
insb
popf
ljmp
cld
sti
pop
hlt
pop
adc
xor
xchg
out
stos
fcomps
sub
mov
push
mov
pop
jecxz
mov
insl
push
xor
push
push
les
stos
cmp
mov
inc
sbb
test
nop
test
fidivrl
imul
sub
fwait
mov
into
lods
push
arpl
adc
std
mov
fildll
dec
hlt
loopne
rclb
xor
pushf
sbb
and
jbe
bound
push
and
xchg
inc
popf
jmp
fwait
push
movsl
cmp
rcrb
jae
stos
js
dec
mov
add
int3
fldenv
push
mov
jb
pminub
fnsave
pop
int
ret
dec
ret
mov
sti
mull
or
mov
mov
xor
repnz
test
cwtl
push
aam
cmp
push
jbe
xor
jne
stos
pop
repnz
mov
mov
inc
dec
scas
push
out
mov
inc
ljmp
jbe
out
and
leave
xor
mov
subb
xor
jb
cmp
jno
xchg
or
adc
ficomps
xchg
sbb
xor
dec
popf
std
mov
sbbl
add
jle
cli
jmp
cld
dec
movsb
in
pop
push
lock
movsl
pushf
fcmovb
ret
mov
jno
adc
mov
push
popa
pop
mov
sbb
popf
and
push
addr16
mov
outsb
push
cmpsb
sub
sub
gs
int3
cwtl
push
push
xchg
fdivrl
push
test
in
lcall
notl
pop
jno
mov
adc
cmp
or
xor
jecxz
lret
sbb
adc
cli
je
jmpw
add
out
inc
jns
iret
add
mov
int3
fcmovnu
xchg
pop
or
lea
pushf
test
test
push
or
clc
ss
sarb
xchg
push
jnp
pusha
push
stos
mov
imul
mov
cld
out
out
jge
gs
lcall
adc
imul
cmpsb
hlt
xchg
pop
pop
lods
mov
dec
mov
add
stos
mov
pop
xor
push
cmp
mov
inc
gs
loope
insb
in
pop
inc
jbe
cld
pop
in
jge
mov
icebp
adcb
test
or
ljmp
jae
iret
js
sub
les
cmp
imul
pop
lret
jbe
cmp
xchg
aad
movsb
add
notb
pop
mov
icebp
ja
sub
cmp
lods
aad
out
daa
mov
and
outsl
lds
xrelease
adc
add
aas
addr16
sbb
inc
pop
data16
mov
movsb
inc
sahf
test
jb
inc
test
cld
adc
adcl
inc
mov
add
les
cli
pop
sbb
dec
jno
shlb
mulb
stc
inc
add
dec
sarl
adcb
mov
jne
adc
subb
mov
mov
outsb
sub
jp
or
aas
dec
je
leave
pop
cs
push
stc
xor
sbb
jmp
fadds
arpl
scas
add
ret
adc
mov
xor
rcll
cmp
jno
push
pop
outsb
mov
pop
xchg
adc
adcl
in
dec
in
dec
mov
testb
ja
cld
mov
add
pop
fmul
cli
movsl
stos
mov
xlat
add
cwtl
push
add
out
mov
mov
repnz
cmc
jge
hlt
int
fdivr
push
ss
mov
das
cltd
push
test
or
xor
mov
fdivl
gs
int
ret
mov
jl
add
fwait
mov
and
in
push
or
int3
sub
xor
mov
shrb
cltd
repz
inc
sub
je
out
stos
clc
pop
inc
pop
cltd
test
inc
sbb
mov
into
mov
xor
inc
jl
and
movsl
int3
outsl
icebp
or
mov
sub
mov
loop
add
ret
adcl
and
mov
add
mull
push
daa
sbb
add
adc
push
dec
ljmp
add
lods
ret
lahf
lret
shll
pop
sbb
jmp
add
pop
dec
jae
jae
or
add
mov
daa
popa
xor
das
cmp
xor
push
dec
push
je
fucomp
add
inc
out
in
mov
sub
pushf
idiv
push
mov
push
stc
iret
pusha
hlt
pop
adc
dec
outsl
mov
shr
lods
push
add
mov
push
rcrb
addl
stos
xchg
push
iret
lea
les
dec
push
pop
push
adc
mov
fs
ljmp
cmp
mov
inc
dec
xchg
inc
inc
sarb
fidivs
pop
xchg
addr16
aad
dec
add
fucom
jae
repnz
xchg
imul
mov
repnz
insb
imul
pushf
push
mov
and
xchg
xchg
mov
jno
and
ficompl
pop
jns
fisttpl
jo
inc
sbb
movsb
push
loope
add
inc
dec
mov
in
jo
bound
sbb
push
stos
xchg
iret
and
sti
stos
dec
inc
push
xlat
bound
pushf
aas
inc
and
mov
xor
daa
ja
sub
sti
pushf
repz
fwait
mov
sub
fcoml
ljmp
sar
lds
test
sbb
jno
aad
fwait
push
and
bound
fnsave
imul
and
pop
or
lods
nop
adcl
fcompl
loop
test
add
pop
dec
pop
nop
loopne
fs
jae
xor
inc
in
mov
fistpl
cmc
int
jecxz
sub
sti
push
sbb
xor
mov
pop
pop
cmc
xor
push
out
push
icebp
jg
in
js
in
mov
inc
sbb
xor
test
inc
mov
test
inc
testb
lcall
adc
jle
inc
repz
mov
negb
xorb
sub
dec
sti
sbbl
inc
cmp
add
mov
and
insl
ret
pusha
ficoms
pop
gs
rcrl
fisttpll
xor
xor
js
pop
pop
xor
sub
in
mov
aad
adc
sbb
add
in
adc
stc
jno
pop
add
mov
std
jp
xchg
cmp
push
adc
movb
out
lret
mov
rcrl
aas
xchg
cmpb
sbb
xor
rcll
int3
sub
xor
scas
fldcw
push
sbb
mov
loop
and
imul
add
inc
mov
repnz
sti
mov
data16
pushl
push
or
rolb
nop
in
adc
or
pop
lret
insb
cmpsl
jno
call
sbb
addr16
imul
or
mov
sub
push
lods
sbbl
fsubrs
lods
jns
pop
cld
insb
ret
cmc
data16
lods
lahf
sub
aam
cmpsl
stos
jns
stos
sbb
add
adc
cltd
lock
push
dec
shll
jecxz
mov
jmp
pop
rcrb
fdivp
xchg
xor
jo,pt
xlat
outsb
pop
jo
inc
fsts
aam
cmpsb
push
push
cmp
pop
js
cs
fadds
mov
test
adc
xchg
test
fistps
dec
iret
sbb
cltd
cmp
es
or
mov
dec
sub
nop
sti
pop
jno,pn
and
test
cmovs
sbb
mov
or
arpl
jne
aad
cmp
pop
sub
dec
mov
fcmovnb
sbb
or
lahf
sub
popf
add
fmuls
mov
pop
mov
stos
push
gs
push
subb
out
pusha
cmp
outsl
mov
sub
jo
and
xchg
add
nop
mov
aaa
dec
sub
xor
into
ljmp
push
mov
jo
lods
das
popa
jle
dec
ja
in
pushf
lcall
sub
adc
push
xchg
jnp
mov
shll
and
andl
fisubl
idiv
or
stos
ss
cmp
fucomip
sbb
mov
inc
jno
xlat
jns
gs
dec
xchg
xchg
and
test
push
mov
stos
leave
xchg
mov
jl
dec
dec
test
mov
or
call
addl
xor
inc
lock
icebp
xrelease
inc
adc
push
mov
xchg
xchg
jno
sub
add
adc
mov
pop
shr
jecxz
adc
stos
jo
lret
sbb
mov
and
rcrb
jle
fildll
fbld
in
or
jno
bound
stos
ss
divb
shl
push
ret
gs
mov
and
sbb
jge
pop
test
cmp
push
in
inc
adc
sbb
mov
and
mov
inc
in
sti
push
loop
dec
data16
gs
dec
fnstsw
jne
scas
push
sbb
rorb
lret
dec
lret
mov
add
outsl
fildl
lods
jmp
nop
cltd
inc
inc
or
jle
mov
adc
xchg
add
xlat
mov
rcr
int
push
xor
mov
outsl
rcr
cli
cmpsb
pop
inc
dec
cmp
sub
jae
jle
sarl
push
frstpm(287
mov
int3
and
iret
gs
mov
sub
lahf
xchg
std
mov
loope
arpl
icebp
jae
sti
push
mov
cmpsl
and
cmp
iret
and
xchg
mov
sub
inc
push
cmp
gs
aam
adc
xchg
aaa
xchg
dec
arpl
push
cs
dec
lahf
mov
adc
pop
sarb
ret
jno
pop
int3
lret
out
rorb
xor
mov
pusha
xchg
sbb
mov
sbb
cmpl
jg
pop
subl
mov
out
sbb
cmp
jmp
call
pop
mov
shll
popa
and
ret
fstpt
lret
fdiv
adc
push
xchg
fdivrl
push
lret
jp
push
jp
jns
into
aad
shl
cs
addl
nop
call
and
and
cltd
test
mov
cmp
stos
inc
dec
xchg
dec
xchg
or
cmp
ret
cmp
cmc
fwait
movl
push
sbb
jl
test
push
xor
dec
push
add
aam
cmp
jg
incl
adc
xchg
xchg
mov
or
pop
inc
pop
add
xor
mov
sahf
mov
xchg
test
xor
pop
mov
cmp
leave
int
cmpb
pop
inc
jmp
pushf
sub
enter
sbb
lret
test
dec
or
das
fdivr
fs
das
es
xor
shll
jmp
popf
daa
loopne
pop
insl
ds
imul
in
imul
cmp
sbb
fcompl
dec
and
stc
pop
xchg
leave
sub
stc
dec
xchg
lock
mov
and
push
inc
mov
jge
mov
and
pop
push
in
in
jecxz
cli
xor
fisttpll
imul
jbe
cs
or
mov
cld
rclb
mov
mov
in
mov
les
sbb
sub
xor
pop
cmpsl
and
jbe
hlt
sbb
or
push
fisubrs
mov
mov
rcrl
mov
aam
xchg
sub
fs
lods
mov
add
aas
xchg
je
mov
dec
push
inc
nop
mov
xor
add
xchg
gs
scas
gs
fiadds
inc
inc
inc
jge
jp
xchg
les
xor
mov
mov
push
sbb
mov
sti
cmp
aas
adc
hlt
in
pop
fisubrs
jnp
xchg
dec
xchg
xor
push
addl
ljmp
push
jns
clc
or
pop
pop
xor
push
adc
loop
sub
shll
das
push
stos
or
shll
add
incl
sti
add
cwtl
and
push
das
lds
fidivrs
adc
repnz
inc
aaa
stos
mov
dec
rorl
cli
xchg
leave
jne
cli
clc
icebp
lea
hlt
cmpsb
repz
call
and
addr16
mov
mov
sub
int
sbb
jns
std
push
xlat
push
jl
lcall
cmc
and
lods
push
mov
mov
mov
pop
sahf
push
lcall
jnp
cmp
jb
stos
mov
stc
xchg
push
jl
out
lret
imul
fmuls
cld
daa
push
ss
push
out
and
jp
out
sti
sti
xchg
cmp
mov
xchg
xor
sub
std
cmp
cmp
jae
lea
dec
pop
aam
out
sbb
and
popf
cmc
pushf
stos
shll
out
jne
jecxz
mov
dec
pusha
enter
mov
cmc
cli
jp
test
inc
and
xor
mov
inc
scas
popa
les
dec
pop
and
mov
popa
pop
outsb
or
aaa
jnp
mov
icebp
in
ret
xchg
push
test
test
imul
out
mov
and
xorb
std
jge
cmp
das
mov
scas
push
pop
and
or
mov
xchg
js
adc
mov
jmp
push
adc
sbb
cmp
dec
push
mov
cmpsb
fcomps
lret
repz
sbb
xchg
scas
add
push
movsl
jg
xor
inc
add
sbb
jecxz
xchg
aad
sub
sbb
sbb
aaa
inc
push
jp
je
lahf
mov
xor
xchg
bound
mov
cwtl
rol
or
sub
int3
iret
hlt
sub
data16
xor
frstor
clc
mov
aas
je
xor
out
push
inc
in
cmp
adc
inc
push
ds
inc
cmp
or
mov
mov
or
mov
hlt
movsl
loope
rol
xchg
lret
inc
popf
adc
and
hlt
mov
movsb
scas
imul
jmp
stos
shl
lock
rolb
mov
lods
scas
dec
fcoml
jecxz
subb
pop
dec
inc
xlat
mov
xor
mov
jae
mov
xor
sbb
cltd
fists
jns
into
inc
pushf
lock
or
jp
mov
negb
ljmp
loop
das
xchg
jnp
mov
daa
ret
sti
movl
dec
movsl
lahf
and
popa
push
sbb
xchg
push
inc
daa
adc
sti
pandn
adc
in
js
inc
js
lea
pushf
jmp
stc
fisubrl
and
push
mov
pop
lock
adc
jge
ret
pop
pushl
repnz
int3
sarl
inc
hlt
ljmp
fisttpll
jae
xchg
sub
cwtl
fwait
xchg
inc
negb
pop
scas
or
int3
rcrl
imul
rcrl
xor
int
filds
pop
inc
cld
add
pop
nop
mov
push
cmp
int3
stos
pop
rcrb
xchg
es
sbb
jl
push
pop
icebp
cmpsl
cltd
push
int3
dec
dec
dec
or
cmp
push
imul
cmp
jo
shr
dec
push
xchg
pop
mov
out
dec
fisubs
mov
mov
mov
jmp
dec
test
mov
xor
das
rclb
push
ljmp
push
jb
dec
es
inc
aas
orb
test
enter
mov
xor
cmp
int3
and
pop
shll
mov
cmp
jns
adc
jmp
xchg
sub
adc
and
mov
mov
push
into
leave
mov
hlt
mov
fldenv
adc
cli
incl
push
into
dec
mov
cmp
push
sar
mov
dec
jl
jg
jne
bound
and
stos
xlat
jl
mov
lods
sti
dec
rorb
repz
lahf
mov
js
mov
push
and
fcmovnbe
test
fcmovne
lret
xor
lods
jnp
sub
push
cmp
jmp
pushf
mov
inc
mov
pop
popa
notb
fsub
xchg
loopne
dec
scas
sub
mov
mov
jo
ljmp
jle
out
fstpl
mov
dec
das
jbe
jbe
popa
dec
pop
xor
popf
cmp
js
shlb
inc
das
jge
jbe
pop
sbb
mov
inc
pop
add
mov
scas
insb
std
iret
sbbb
cmp
add
push
cmp
cmovo
jmp
insb
lahf
scas
fstpt
inc
imull
jnp
scas
fdivl
mov
incl
mov
pushf
popf
mov
push
stos
fisubl
cld
inc
aaa
adc
mov
fidivrl
pop
push
enter
hlt
leave
push
or
jge
cmp
add
inc
or
or
or
loop
stos
loopne
lret
aas
pop
and
leave
and
xorb
add
inc
sbb
jno
shll
lahf
adc
ljmp
test
xchg
xchg
push
stos
jno
stos
pop
adc
sbb
mov
pop
int3
or
dec
xchg
jno
pushf
out
pop
jecxz
mov
xchg
mov
mov
inc
cmp
sub
lock
push
lock
shrl
jne
inc
cmp
adc
inc
inc
ljmp
int3
lahf
sub
fwait
jmp
ja
push
lds
pop
repz
xchg
mov
inc
mov
mov
insb
clc
sbb
daa
push
inc
adc
ret
jns
or
push
out
jecxz
int3
adc
imul
mov
int3
xchg
fidivl
dec
xlat
pop
aas
xchg
lods
add
mov
mov
mov
pushf
je
push
xchg
imul
pop
sub
xchg
add
pop
in
mov
mov
mov
add
rorb
clc
das
test
aam
cmpb
pop
xorw
addb
lret
lret
insl
xchg
add
adc
stos
loopne
sub
mov
jns
insl
mov
or
out
inc
dec
lret
fldenv
push
aas
and
or
pop
int
jge
idivb
add
dec
sbb
lcall
adc
add
mov
imul
ds
sbbb
stos
shll
inc
adc
les
or
aas
or
push
dec
decb
test
loope
sbb
xchg
popa
sbb
sub
xchg
or
je
xchg
andb
lods
addb
jl
in
inc
mov
add
rcrb
xlat
push
xchg
mov
mov
add
jo
shlb
xchg
mov
int
lods
pop
xchg
xchg
add
sub
es
push
rorl
imul
sub
daa
mov
push
jg
adc
scas
sti
cmp
add
xor
in
pop
out
dec
and
xchg
movl
shll
adc
aam
cmp
mov
les
pop
mov
sbb
daa
jb
mov
addr16
insb
lods
and
pop
add
mull
aam
sbb
dec
insl
jmp
test
xchg
xor
shll
fisubrs
jbe
adc
ja
mov
test
rcrb
adc
test
push
mov
pop
stc
out
ret
adc
push
inc
je
mov
lock
shr
cmp
bnd
cmp
out
test
mov
sbb
sub
fsubl
jbe
test
leave
in
sbb
xchg
and
mov
sbb
add
xchg
dec
mov
mov
leave
nop
inc
jl
jge
mov
outsl
sbb
pop
mov
lea
xchg
daa
sbb
pop
jge
jecxz
sub
add
pusha
in
int
sti
mov
add
inc
out
mov
loope
cs
jg
adc
jecxz
enter
imul
jne
adc
aam
lret
jne
mov
xchg
sub
popf
inc
adc
xlat
ljmp
dec
ss
pop
add
pop
daa
mov
pop
adc
inc
inc
mov
sub
stos
inc
xor
mov
clc
test
outsb
push
mov
adc
mov
dec
cmp
cmp
fs
mov
dec
push
inc
or
int3
je
cli
sbb
jge
cli
adc
cmpsl
mov
icebp
cld
mov
push
addl
ficomps
push
push
loope
lcall
nop
inc
xor
xor
das
inc
outsl
mov
cwtl
xchg
pop
mov
inc
and
imul
inc
lea
mov
sbb
pop
sub
xchg
aam
or
in
and
sbb
pop
lods
xchg
fbld
inc
xlat
lods
xor
scas
mov
pop
out
out
hlt
xchg
arpl
pop
lret
dec
es
inc
mov
sbb
subl
pop
push
mov
push
sub
or
lcall
repnz
gs
in
and
pop
jns
pop
mov
xchg
rclb
es
mov
mov
enter
pmuludq
adc
lcall
xchg
pop
lods
pop
sub
aam
sbb
cli
movsb
dec
mov
jmp
je
mov
jp
xchg
pop
pop
sub
int
mov
mov
scas
cltd
int3
mov
shrb
out
xor
gs
mov
sub
cmp
test
inc
lahf
pop
scas
add
cmp
aam
mov
dec
movl
outsl
test
pop
loop
leave
sub
mov
and
inc
inc
push
mov
out
pusha
pop
mov
in
hlt
sub
or
mov
sti
jbe
or
cmp
or
adc
popa
push
shll
mov
ret
fldenv
mov
mov
in
xor
xor
pusha
xor
jne
inc
repnz
inc
out
fsts
xlat
pusha
and
jns
or
jo
inc
adc
and
xor
loop
aam
jge
and
inc
jg
test
ss
add
inc
sbb
push
or
hlt
stos
popa
lret
dec
lock
rol
test
push
dec
sbb
mov
inc
xchg
jbe
pop
sbb
in
mov
fldcw
enter
lods
shr
nop
mull
test
adc
sbb
pop
push
or
xor
stc
in
mov
xchg
lea
xchg
outsb
mov
and
mov
js
pop
jl
movsl
jge
outsb
scas
xchg
aam
das
push
jnp
and
pop
xlat
imul
test
divb
pushf
adc
sahf
mov
inc
into
mov
rorl
add
popf
add
test
mov
and
in
mov
dec
mov
fisttpll
xor
dec
in
dec
mov
imul
add
jbe
ficoms
sbb
xchg
xchg
jns
push
ja
pop
fnstenv
and
jbe
aad
add
xor
shll
sbb
sub
insb
mov
insb
xchg
pop
xor
fs
pop
push
jne
jecxz
cmp
mov
not
les
mov
mov
inc
sub
adc
add
inc
jle
aam
out
popa
nop
or
es
cwtl
and
stos
xor
addr16
shll
xor
fidivrs
pusha
cltd
push
lock
int
add
jp
or
adc
loop
gs
ja
popa
mov
leave
sub
fs
mov
dec
xor
cmpsl
dec
push
and
lock
lret
xchg
data16
fnstsw
fidivrs
and
cmp
js
sub
mov
mov
inc
pop
and
or
xchg
jae
pop
pusha
mov
and
push
xchg
jmp
push
xchg
mov
divb
or
fnstenv
mov
test
pop
inc
mov
dec
xor
pop
aaa
test
addb
mov
sub
pop
push
movsb
dec
stos
inc
in
or
sbb
repz
pop
idivb
xchg
cmpsl
iret
push
arpl
rcll
push
sti
scas
imul
lcall
cld
lods
xor
out
mov
cwtl
xchg
or
add
mov
mov
mov
sbb
push
rolb
or
hlt
sbb
cmp
fisttps
test
scas
outsl
in
lret
and
or
or
in
add
icebp
mov
push
repnz
pop
push
or
mov
das
ljmp
jg
imul
mov
sbb
jns
setnp
hlt
fldl
mov
mov
bound
cmp
ret
add
xchg
ds
push
scas
jg
xlat
sub
ret
mov
add
into
xor
mov
lcall
ficoms
sarb
imul
add
lret
mov
sub
fisubl
pop
ss
sti
stc
insl
xor
inc
xchg
imul
adc
pop
nop
pop
push
fdivl
mov
xor
dec
pop
cs
scas
sbb
jp
stos
xor
stos
cmc
sub
fs
cli
jmp
xor
jbe
les
inc
xor
adc
xchg
jg
add
jge
push
stos
enter
push
sbb
in
add
lods
xor
jno
pop
pusha
inc
jmp
dec
pop
out
mov
jg
adc
xor
js
stc
mov
sub
arpl
mov
pusha
push
rcll
lahf
cmp
xchg
add
int3
sub
iret
iret
push
ja
arpl
push
leave
sub
xchg
push
mov
push
dec
jl
fmuls
imul
jmp
or
or
jbe
inc
xchg
push
jmp
push
stos
jnp
jg
cmc
push
leave
addr16
dec
insb
fs
mov
pop
mov
jl
and
adc
and
loope
dec
addr16
fcoms
push
xlat
pop
xor
rcl
ja
pop
sahf
xchg
jno
jp
jbe
mov
xchg
inc
out
cltd
mov
or
enter
pop
dec
sti
pop
int
dec
adc
lret
jnp
lods
enter
imul
mov
iret
xlat
pop
or
orl
sti
lods
mov
xchg
testl
pop
lock
xlat
imul
imul
xor
or
push
jg
jg
pop
push
inc
fisubrl
pop
shrl
mov
mov
mov
mov
stc
inc
fsts
fcmovu
dec
movsl
rorb
push
imul
adc
mov
jg
add
jns
add
in
es
cmp
dec
lock
leave
pop
dec
mov
pop
or
shlb
arpl
in
jmp
fwait
daa
mov
int
jl
add
cmpsb
mov
or
js
dec
dec
fildl
mov
xchg
mov
mov
aad
xchg
aad
out
pop
mov
es
into
mov
ss
sbb
dec
xchg
es
test
add
push
lds
xchg
inc
out
sub
gs
jl
cmp
arpl
aam
aas
inc
push
cmp
mov
lods
lcall
mov
push
adc
cli
pop
imul
outsb
loope
xchg
mov
repnz
movsb
push
mov
cmp
sub
push
push
jecxz
test
leave
jge
push
or
pop
push
imul
daa
jae
pop
jmp
lods
or
dec
add
and
add
ss
jbe
outsl
jnp
push
jle
lea
aaa
fsubs
and
popf
mov
pop
dec
lea
aam
pop
mov
mov
sub
cmp
out
adc
dec
xor
jns
mov
mov
sbb
dec
mov
loopne
push
iret
jg
jp
adc
or
dec
mov
xor
sbb
mov
syscall
orl
nop
pop
dec
pop
xchg
fwait
aaa
sbbl
insl
arpl
sub
cltd
mov
stos
lods
xchg
mov
cmpsb
or
test
out
jae
inc
fsub
test
insb
xor
lods
lods
mov
push
test
nop
in
xchg
push
lcall
stos
push
std
fnstenv
cmp
movsb
mov
into
sub
inc
incb
mov
popf
jno
daa
pusha
and
xor
movsl
jge
dec
in
notl
out
sbb
mov
adc
inc
push
add
dec
mov
jl
mov
push
jmp
pushl
aas
fcmove
ljmp
dec
test
mov
fsubrl
xchg
sbb
fmull
js
outsl
out
push
fists
aas
push
sbb
ret
mov
addl
jle
push
xchg
inc
sbb
pop
xchg
repnz
jmp
or
hlt
xchg
mov
mov
sub
and
sub
fisubs
rcr
cli
jge
mov
or
sub
dec
frndint
out
pop
cli
lods
les
cmp
out
repnz
lcall
iret
sbb
or
shlb
sub
inc
shl
sbb
mov
cli
pusha
cld
inc
mov
xchg
ljmp
xor
testl
insl
ljmp
and
repnz
mov
cmc
das
int3
cmp
add
xor
push
xchg
or
das
pop
mov
pop
push
and
push
adc
cmp
popa
mov
mov
cmp
mov
jnp
loopne
pop
cmpl
mov
cmc
xchg
notl
mov
pop
rcrl
stc
in
xchg
fisubrs
dec
call
test
pop
fildll
mov
inc
ds
leave
not
lea
leave
fldcw
dec
xchg
arpl
xor
xor
mov
enter
imul
fwait
cwtl
divb
and
push
xchg
mov
adc
or
loopne
xlat
sub
mov
bound
pop
mov
notb
ds
hlt
pop
mov
push
iret
imul
dec
push
mov
dec
loopne
icebp
in
lea
dec
lods
cmp
sti
xlat
mov
inc
dec
movsl
rcl
movsb
mov
popa
xchg
clc
addr16
inc
push
push
push
push
xor
lahf
mov
cmp
imul
mov
test
dec
sbb
pushf
repnz
cld
loop
jbe
mov
hlt
push
sbb
sub
dec
gs
rcrw
mov
pop
adc
sub
dec
pop
lods
push
daa
jl
into
hlt
mov
xchg
mov
data16
lcall
cwtl
aad
pop
icebp
mov
cmp
icebp
jb
sbb
sub
lock
leave
subl
fwait
stos
test
cltd
in
jnp
cmpsb
aad
sbb
xorb
fcmovnu
or
insl
add
cld
aad
mov
cltd
mov
jae
std
shl
out
push
orb
xchg
mov
pop
xor
mov
and
push
popf
push
pop
es
push
or
addr16
dec
arpl
mov
ret
lcall
sbb
outsb
adcl
insl
or
in
fcoml
dec
cwtl
ret
dec
cmp
aad
bound
add
leave
pop
cli
movsb
mov
dec
or
cmp
mov
xchg
in
aam
lods
arpl
add
jp
mov
pop
jbe
mov
nop
outsb
cmp
mov
ss
cli
outsb
inc
mov
mov
fdivl
jns
inc
xor
and
loope
mov
or
incb
rcrb
mov
sbb
lock
dec
out
cmp
fnstcw
call
movsl
movsl
imul
fwait
cmp
pop
cmp
add
cmpsb
mov
cmp
xchg
adc
icebp
sarl
jno
mov
aad
adc
aad
bswap
sbb
in
or
push
sbb
cltd
adc
aad
repz
cmpb
mov
mov
adc
xchg
js
push
lods
imulb
push
cmp
xor
mov
std
stos
ret
pop
out
and
loope
daa
scas
inc
lcall
fidivs
mov
inc
sbb
push
je
aas
aas
xchg
shlb
ret
lods
lds
arpl
hlt
pop
adc
or
cmp
pop
xchg
loope
iret
lods
jno
cmpsl
xchg
outsl
dec
jl
das
push
xor
imul
ja
inc
inc
mov
mov
push
push
sub
fwait
outsb
dec
test
xor
jae
mov
ds
jno
fisttpll
lods
jg
jl
xor
pop
mov
fimuls
and
adc
bound
sbb
push
mov
cmp
fstpt
test
or
dec
pop
into
jecxz
movsl
cmp
sahf
push
pop
faddl
sbb
sti
mov
aaa
lea
insb
cmpsl
icebp
cmp
fsubrl
clc
xchg
mov
nopl
mov
cmc
lcall
orb
loopne
mov
xchg
xor
mov
jmp
push
sbb
jns
cmp
push
aad
mov
add
xor
xchg
arpl
in
sub
inc
iret
inc
daa
adc
xchg
jne
push
pop
stos
xor
rcl
gs
cmp
leave
xchg
dec
sbb
push
push
xchg
inc
inc
cld
mov
or
jle
leave
jb
loopne
out
lods
cltd
mov
or
ds
and
add
ljmp
mov
scas
mov
sti
add
mov
xchg
repnz
rorb
sbb
cmp
xor
jle
xchg
adc
bound
leave
shll
or
fistpl
mov
add
pop
jle
aad
sub
xchg
movsb
mov
or
loope
addr16
aaa
jns
jge
xor
mov
and
mov
aad
inc
adc
adc
pushf
mov
pushl
sbb
xchg
inc
xor
inc
cmp
or
fwait
insb
dec
mov
xor
add
dec
pushl
into
mov
pop
sub
out
andb
inc
push
movq
imul
jae
cmp
dec
lock
ljmp
dec
add
mov
lods
sub
xchg
aaa
push
or
lods
pop
push
in
out
lcall
gs
fcom
loope
leave
push
adc
mov
fistl
testl
jns
sub
cli
mov
int3
outsb
cltd
repz
ret
pop
out
cltd
leave
sub
scas
loop
int
dec
push
xlat
or
jnp
adc
rcrl
scas
adcl
sub
pushf
pop
dec
mov
in
mov
jle
outsl
cmp
pop
jl
lds
rcr
bound
negl
leave
loop
rorb
sub
cltd
xor
int
call
les
fildl
clc
push
mov
hlt
cmpsl
xor
push
out
sbb
push
and
fs
mov
das
stos
or
and
insl
int3
bound
sbb
cltd
mov
mov
aas
push
push
arpl
hlt
outsb
pop
daa
push
movsl
sti
mov
jmp
jmp
xchg
rol
insb
xor
repz
or
mov
sahf
jno
enter
fwait
and
decl
sahf
xor
mov
icebp
jno
jmp
mov
mov
bnd
jg
pop
les
mov
or
add
imul
iret
cmp
lcall
xchg
push
mov
and
mov
sbb
sbb
dec
inc
mov
xlat
mov
ljmp
adc
int
rcrb
bound
xchg
and
out
dec
adc
jg
les
xchg
jb
enter
test
test
lret
fs
inc
cmc
cmp
and
mov
bextr
adc
ss
lods
xchg
sbb
pop
aad
add
xchg
imul
insl
add
lret
push
jge
inc
sahf
mov
or
xchg
jo
mov
out
sub
pop
jnp
fldcw
sub
mov
test
int3
xor
sub
sbb
sbb
leavew
dec
xor
and
stos
cli
xchg
fists
in
jo
scas
sti
pop
push
add
aam
mov
test
mov
jb
xchg
sbb
mov
fildll
in
in
pop
xor
cs
int
movsb
mov
push
push
loope
sub
xor
pop
jbe
loop
outsb
pop
jns
mov
or
jmp
cmove
pop
inc
das
mov
fs
int
mov
or
insl
stc
xchg
adc
dec
addr16
cmp
subb
lret
jl
fsubrl
lock
rorb
cmp
xor
adc
fsubrp
iret
rcrl
inc
nop
sub
inc
dec
jne
mov
cmp
aaa
lcall
call
mov
loop
pop
mov
loope
xchg
test
xchg
xchg
insb
out
inc
inc
loopne
sbb
push
shlb
stos
add
subb
or
sub
and
int3
decb
dec
insb
bnd
cmp
shrb
inc
sti
pop
lds
or
mov
inc
rcr
inc
mull
push
in
inc
mov
pop
dec
fmull
arpl
or
lods
ds
je
add
jecxz
shll
or
jmp
xor
cmc
iret
adc
out
mov
out
adc
shll
clc
jbe
fisubrl
in
iret
cmpsl
sbb
adc
ret
fsubrs
xorb
inc
popf
adc
fdiv
cmp
xchg
xor
or
addr16
jne
lods
xlat
test
loop
ds
mov
outsl
inc
xchg
inc
push
mov
jecxz
iret
pop
dec
imul
dec
fisttps
testl
loopne
xorb
scas
out
testl
clc
dec
adc
jns
add
xchg
xlat
jl
addr16
insb
lods
call
cmp
orb
sarb
test
int
xchg
nop
fsubs
rorb
dec
ljmp
mov
xchg
push
mov
or
outsl
ljmp
daa
push
ret
mov
leave
stos
lock
loope
adc
jnp
punpckhbw
sbb
push
sub
xchg
mov
loope
mov
add
in
jg
lea
xlat
test
jecxz
out
xchg
ja
dec
cmp
insb
ds
inc
shrb
pop
jmp
mov
inc
pop
mov
add
out
jp
cmp
dec
movsb
mov
leave
mov
sub
dec
cmpsl
and
inc
iret
int
push
push
push
xlat
test
sub
sbb
jb
cmpsl
mov
repnz
iret
lret
lds
jno
push
jl
pop
and
add
rorl
sbb
or
sbb
inc
aad
mov
xlat
jecxz
pop
xor
out
pop
stos
mov
push
icebp
in
repnz
lock
in
sbb
fidivrs
adc
gs
into
mov
cmp
js
ds
xlat
int
les
insb
pop
insb
cmpsl
scas
filds
ss
pop
repz
adc
mov
mov
lahf
mov
add
addr16
push
pushf
imul
cltd
mov
pop
int3
or
mov
cmp
push
sbb
push
pop
stos
mov
or
push
pop
clc
mov
adc
push
mov
xor
fstpl
adc
popf
fnstenv
ds
and
jae
mov
out
dec
jae
das
sbb
xchg
jmp
pop
jmp
scas
mov
popl
sbb
push
sti
lods
movsl
mov
adc
sbb
into
fcoml
test
xor
scas
popf
adc
out
hlt
push
cmp
adc
and
xchg
cs
insl
mov
out
fists
insb
ljmp
daa
popf
mov
aaa
jae
out
sub
mov
mov
xchg
movsb
in
sub
rorl
adc
popf
sub
xchg
xchg
pushf
in
xchg
repz
loopne
ja
insl
ret
mov
loopne
loop
jnp
xchg
mov
mov
xor
dec
cmpsl
lods
inc
adc
push
adc
imul
pmaxub
sub
push
push
stc
out
pop
addb
lea
mov
cmp
into
adc
stc
int
into
rcll
pop
dec
shrl
inc
ds
pop
add
scas
mov
les
notl
rcll
sbb
push
mov
inc
pop
dec
gs
ds
leave
into
sub
dec
xchg
in
and
xor
cld
cltd
or
adc
adc
and
and
push
inc
scas
lds
dec
mov
jge
divl
loopne
cmp
jle
fdivrl
test
ljmp
pop
push
cmp
mov
jno
imul
mov
bound
push
out
mov
clc
inc
xchg
jb
jne
aaa
cmpsb
inc
dec
inc
test
sub
cmp
or
adc
push
inc
mov
jge
add
inc
fwait
aaa
mov
movsl
cmp
jl
and
mov
call
mov
cmp
data16
andl
pop
mov
add
daa
add
movsb
scas
call
pop
into
lds
imul
lret
aaa
jnp
nop
lods
dec
outsl
cmp
mov
xchg
jp
enter
and
pop
lret
mov
add
cmp
push
add
xor
xchg
mov
dec
mov
jmp
test
ljmp
or
jnp
dec
lcall
jns
data16
les
rorb
in
jns
cmpb
out
xor
adc
or
xor
adc
jge
pop
int3
mov
jno
dec
stc
and
sub
scas
leave
jp
xchg
push
push
adc
adcb
rcl
arpl
bound
sub
sbb
push
aam
push
je
loopne
fsubp
in
shll
jns
sbbb
cltd
frstor
gs
mov
cli
faddl
dec
and
pop
adc
stos
mov
xor
jecxz
scas
jne
fwait
test
mov
lods
pop
jle
pop
fnstsw
push
push
cwtl
mov
add
ret
in
pop
js
push
adc
mov
inc
inc
push
add
mov
xor
inc
addr16
xchg
in
lahf
jl
clc
in
cmp
inc
imul
cmp
enter
into
iret
mov
rcrb
mov
lea
add
call
cmp
lods
clc
or
push
xchg
mov
out
loopne
iret
incl
mov
jae
jle
imul
in
push
xchg
jae
leave
cltd
es
pop
movsl
sub
fwait
imul
xorl
xchg
mov
sub
and
lea
scas
push
lds
mov
lret
mov
mov
pop
and
dec
dec
inc
add
insb
inc
dec
xor
stc
sbb
cmp
adc
in
fstl
sub
test
inc
or
insl
lcall
pop
mov
adc
sarl
jecxz
or
inc
push
add
rolb
and
pop
xor
sub
inc
aam
sub
dec
xor
sub
imul
movsb
les
push
xchg
and
sub
or
orl
cmpsb
cmp
lahf
in
mov
or
jecxz
cli
mov
cli
fmul
sbb
nop
es
pop
push
shl
lret
cmp
sbbb
ret
aam
ljmp
xchg
xor
ret
fmull
insl
inc
adc
and
xor
loop
cltd
cmc
fs
sbb
movsb
clc
addr16
sub
loope
mov
ja
xlat
sbb
cmp
mov
cmc
xor
xor
push
xchg
pop
js
mov
xlat
out
xlat
mov
jne
sub
xchg
lock
mov
sti
mov
xchg
es
hlt
xchg
sbb
inc
sub
pop
mov
jmp
adc
jno
or
jno
mov
ss
dec
xchg
mov
out
aaa
sub
add
mov
xchg
andb
cmp
mov
push
test
mov
inc
pop
mov
pop
push
icebp
clc
sub
shlb
jbe
inc
and
sbb
iret
push
push
incl
test
adc
test
repz
pop
adc
popa
sbb
nop
jl
xor
cmp
std
mov
lahf
test
and
jne
movsb
gs
adc
icebp
push
bound
popa
lahf
cs
out
je
aad
xchg
jns
test
fnstcw
pop
lock
sbb
sbb
xchg
push
mov
adc
movsl
shlb
rcr
mov
test
push
setns
or
stc
pop
inc
rorb
std
stos
push
arpl
das
lds
addl
pop
adc
push
pop
arpl
cmpsb
or
push
cli
add
fdivrs
lds
js
imul
add
mov
out
rcl
mov
fwait
loopnew
and
lds
mov
ret
lds
and
push
iret
ret
jmp
daa
fiaddl
jecxz
popf
pop
int
lock
xor
negb
aaa
movsb
push
pop
inc
clc
leave
rclb
sub
push
scas
mov
xor
insb
pop
adc
pop
dec
mov
cwtl
or
cmp
data16
xchg
jmp
mov
cmpsl
test
inc
mov
pushf
rcrl
add
scas
leave
pop
or
aam
fst
xor
push
or
ljmp
mov
repz
scas
sub
and
jae
into
jge
sbbb
push
sbb
mov
je
ror
mov
dec
xor
loop
xchg
xchg
adc
pop
cmp
jmp
pop
out
fldenv
lods
insb
mov
test
xchg
gs
hlt
lret
push
inc
xor
test
mov
xchg
in
out
dec
nop
scas
in
add
jecxz
add
and
pusha
imul
xchg
mov
adc
nop
mov
loop
subb
xchg
stos
mov
mov
jecxz
mov
shrl
outsl
adc
lcall
mov
dec
insl
and
pop
xchg
rorl
inc
inc
add
cmc
xchg
ds
pop
movsb
pop
int3
test
cmp
cwtl
xor
int
mov
and
imul
movb
push
std
inc
int3
mov
in
repnz
jae
sbb
sahf
pop
cmp
sub
pop
sub
jae
xchg
jne
data16
pop
jg
mov
in
cmc
cmc
mov
jl
push
add
mov
cmp
and
xchg
loope
jle
and
shl
sub
mov
ja
iret
les
adc
test
xchg
mov
inc
cld
call
scas
in
or
sub
dec
sub
jnp
popa
sbb
aas
cmp
repnz
ljmp
mov
lods
imul
hlt
jns
jnp
pop
out
mov
or
jno
inc
adc
jg
mov
clc
rcr
into
adc
cmp
sub
cmp
inc
or
sub
sbb
pop
idiv
mov
jb
mov
scas
push
notb
shlb
push
jle
cmp
add
push
dec
add
add
loope
or
xlat
push
cs
cmc
enter
or
adcb
jmp
mov
jo
test
jmp
scas
xchg
in
idivb
xchg
inc
repnz
or
pop
lret
clc
xor
ret
and
idiv
movsl
hlt
adc
das
push
push
fadd
int
push
out
test
rclb
xor
out
sti
push
xchg
push
cmp
loopne
stos
lds
test
mov
sub
jns
jnp
lock
adc
inc
dec
fs
int
test
fcoml
lock
out
and
cmc
xacquire
testl
arpl
add
add
xchg
fmuls
addr16
sub
andl
sarl
fdivrl
xchg
rol
pop
or
push
mov
and
push
rep
or
and
aas
pop
ficoml
cli
fmull
lret
loope
xchg
push
mov
shrl
mov
pop
xor
call
sar
pusha
test
mov
sbb
neg
sahf
cmp
daa
mov
or
push
pushf
stos
add
mov
ret
sub
mov
add
pop
rclb
mov
mov
testb
int3
sub
push
das
dec
mov
mov
bnd
dec
fsub
popa
fimuls
dec
clc
pop
xchg
hlt
jae
sub
dec
mov
cmc
test
fisttpl
shll
inc
cltd
ja
mov
fimuls
xor
cmp
hlt
out
jae
hlt
or
xchg
pushf
and
jae
inc
adc
jns
sti
jle
mov
sub
mov
ljmp
ret
cmp
mov
inc
outsb
ja
rorb
jae
jmp
inc
xor
sbb
movsb
loope
cmpsl
sbb
push
aam
xchg
push
lods
imul
cwtl
inc
mov
push
scas
pop
jge
jns
incl
mov
sub
jae
xor
inc
in
leave
add
push
lret
mov
adc
pushf
pop
pop
sub
pusha
or
into
shll
or
scas
lods
add
jecxz
and
mov
or
and
pop
mov
ficoms
scas
nop
arpl
add
mov
ret
mov
das
jb
pop
sub
push
push
rsm
mov
test
cmc
xchg
and
and
std
pushl
sbb
pop
sbb
mov
add
mov
out
or
fsubrl
sub
pop
or
les
rorb
xor
jb
es
jecxz
pop
mov
aad
push
es
pop
ret
inc
dec
cmpsb
rcrl
jle
cs
push
sahf
lahf
jle
lods
mov
pop
mov
or
dec
cli
xchg
dec
int
lahf
inc
lock
adc
lea
push
mov
scas
and
or
lcall
jmp
or
ss
jb
lds
cmp
shrl
cwtl
es
dec
xor
mov
aaa
aaa
mov
in
rcrl
pushf
and
sub
scas
imul
rorl
scas
leave
fsubp
mov
cld
fidivrl
or
aas
or
fcoms
inc
faddl
sub
xchg
dec
xchg
sub
aaa
or
xchg
icebp
push
inc
push
mov
jp
pop
fistl
hlt
mov
adc
aas
add
adc
adc
dec
xchg
xchg
jo
daa
jno
scas
dec
jle
aas
fs
ja
adc
mov
andl
pop
ror
pop
cld
int3
push
or
mov
push
subb
ss
test
pop
push
mov
pop
scas
pop
scas
jns
fnsave
push
test
push
fwait
into
outsb
and
fwait
shrb
js
pop
in
out
gs
or
movl
pop
add
jmp
mov
inc
xor
aaa
ja
cmp
lods
dec
sub
cmpsl
test
sbb
js
or
push
push
inc
pop
mov
ja
pop
loope
lods
sbb
pop
incb
and
inc
aas
pop
push
jle
xor
jae
fs
dec
shrl
les
push
xchg
pop
in
sub
mov
fisubrs
jb
sbb
dec
loope
xor
stos
add
mov
leave
popf
cld
jb
mulb
out
or
mov
jle
mov
sbb
add
dec
mov
push
xlat
xor
scas
inc
mov
mov
stos
dec
call
dec
cmc
insl
sub
xlat
mov
stos
pushw
loope
jae
std
xor
pushf
shll
or
xor
pop
lret
out
rclb
nop
add
inc
aas
loope
mov
mov
test
stc
fisubs
inc
lcall
addl
loop
iret
and
xchg
and
loop
pop
inc
dec
scas
fldl
dec
add
cmp
adc
push
push
fistps
stc
adc
sub
test
test
sub
mov
xor
jecxz
jge
lahf
pop
jb
aam
sbb
imul
xor
repnz
cmp
xor
dec
xlat
dec
jbe
out
inc
push
cltd
addr16
pop
addr16
jecxz
xor
cmp
mov
call
test
lock
inc
pop
test
sub
jl
in
clc
cwtl
dec
cmpsb
push
push
aad
xchg
push
add
jbe
jne
sarl
loop
jb
xorl
stc
jae
lods
lods
int
pusha
mov
xor
jmp
mov
cmp
cmp
es
push
mov
insl
or
add
test
fnsave
inc
icebp
data16
jo
jns
jo
in
mov
sbbl
sti
jno
fst
test
vmulss
leave
clc
add
jmp
lock
sbb
daa
cs
hlt
inc
cwtl
sbb
rcrl
sub
xor
es
fldl
mov
cmp
in
insb
mov
mov
addr16
sbb
jecxz
mov
xlat
jnp
test
mov
sbb
add
inc
cmp
push
fld
mov
xor
pop
mov
dec
cld
pop
dec
lods
sbb
outsl
test
and
fwait
xor
add
jge
inc
push
popa
add
jns
sbb
jp
decl
mov
sub
inc
jbe
out
js
push
add
add
add
add
cmp
shld
push
jo
pushf
fcomps
add
out
movsb
mov
pushf
rcll
insb
scas
cmp
out
outsl
shr
inc
sahf
and
leave
andl
out
jb
into
call
scas
imul
sahf
mov
jo
repz
outsb
jg
inc
xchg
xor
push
mov
cmp
loop
dec
mov
mov
inc
sub
lahf
fldl
je
arpl
mov
and
out
lret
pop
cmp
mov
mov
sbb
scas
adc
aad
add
je
test
int3
mov
adc
shrb
call
stc
call
dec
inc
xchg
xor
cwtl
dec
push
out
or
call
out
pop
xor
add
xor
xor
mov
mov
lock
sub
incl
xchg
jmp
out
add
lret
leave
aad
lds
aam
inc
loopne
jl
xor
daa
pop
shl
pop
inc
inc
xchg
sub
ret
dec
out
outsb
add
jmp
std
dec
ja
and
cmp
mov
push
sbb
inc
cmp
stos
push
jmp
fs
mov
jne
shll
mov
in
loop
stos
sti
mov
or
mov
mov
mov
push
mov
lret
mov
clc
rcl
adc
rcll
pop
pop
test
push
push
inc
in
cltd
mov
ret
enter
jmp
jg
aas
in
sub
inc
and
jmp
and
imul
cmp
outsl
or
inc
mov
aam
call
and
mov
or
test
or
in
leave
test
jge
pop
push
sbb
int
movsl
mov
dec
add
lcall
adc
xor
ja
xchg
mov
and
jl
mov
ja
int3
push
test
xchg
xor
outsl
in
fistl
in
js
mov
cltd
lret
call
loope
pop
mov
xchg
push
xchg
jl
inc
sbb
inc
sbb
ja
adc
mov
hlt
shll
movntq
outsb
jge
paddusw
or
add
stos
and
jae
mov
pop
pop
xchg
sti
sbb
mov
sar
and
push
outsb
fstl
fisubs
popa
iret
xchg
mov
shlb
fimull
ja
mov
push
lahf
jae
dec
enter
ficoml
stc
mov
es
push
mov
fstl
ficompl
push
sub
lock
and
xor
ret
sbb
xchg
mov
cltd
cmp
push
icebp
call
jge
dec
jp
ret
in
imul
jne
jns
hlt
std
lret
test
shlb
push
out
aad
imul
inc
mov
std
mov
dec
cmpsb
test
jle
cmp
inc
adc
lcall
dec
out
mov
xor
push
insb
lock
lahf
jns
fists
adc
aas
shrl
movsl
out
pop
out
jae
xchg
xor
dec
xorl
and
xor
into
jne
xchg
call
jmp
loop
sub
stos
mov
mov
cmp
sub
cld
in
push
rcrb
mov
cmc
push
rcrl
jb
push
and
loop
in
movsb
shlb
push
ds
clc
mov
or
pop
jae
and
icebp
sub
or
imulb
pop
fadds
lock
cld
pop
and
inc
dec
jo
add
sub
addr16
pop
mov
pusha
orl
add
adc
mov
sub
sti
and
cmpsb
enter
mov
push
sti
xchg
aam
jmp
repnz
adc
push
sbbb
fists
rorl
shlb
das
notl
inc
dec
xchg
mov
add
xor
adc
orb
and
dec
mov
push
inc
je
push
movsb
orl
add
addr16
dec
mov
mov
ds
mov
sub
push
xor
mov
push
outsl
push
mov
add
loopne
scas
jg
push
pushf
out
ret
scas
add
pop
popa
clc
xor
jecxz,pt
inc
or
insl
cltd
cmp
bswap
jae
lret
jle
push
mov
sub
and
push
insb
mov
out
enter
ds
cld
mov
pop
push
cmc
out
testb
xor
sar
mov
mov
inc
hlt
cmp
jb
sti
jmp
fimull
dec
jmp
int
imul
dec
xor
xchg
and
jecxz
mov
lock
lds
inc
xorl
adc
sti
roll
or
and
fwait
or
lds
push
repnz
lret
and
jo
cmp
icebp
movsl
nop
jns
fidivs
add
hlt
test
or
pop
in
loopne
dec
sbb
sbb
mov
inc
pop
mov
mov
fldt
or
xchg
push
cmpsl
out
push
sti
repz
inc
mov
icebp
movsl
js
dec
ds
dec
icebp
aad
inc
out
out
dec
lret
cmp
ds
inc
pop
jo
mov
xor
xchg
int3
push
nop
xor
rorl
jnp
sub
loope
adc
push
or
notl
mov
mov
outsl
aam
sub
pop
mov
lcall
or
in
in
xchg
addr16
lcall
sub
cmp
mov
nop
lea
dec
pop
jecxz
and
xchg
push
repz
mov
stc
jo
jle
cmp
popa
mov
insl
shl
insl
mov
mov
pushw
rdpmc
stc
fmuls
out
pop
aaa
cwtl
iret
lods
cwtl
cmp
std
cmp
jl
and
jne
adc
dec
mov
xchg
icebp
jno
pop
loopne
in
xchg
pop
pop
sahf
into
iret
es
cmc
les
add
in
das
data16
ds
popf
imul
sbb
xor
call
loop
jecxz
adcb
mov
adc
test
mov
jmp
dec
insb
mov
adc
and
cld
inc
cmp
sub
jle
es
and
pop
nop
outsl
cmp
or
lcall
int3
mov
or
popf
and
lcall
and
cmc
inc
clc
pop
push
out
test
bound
andb
dec
xchg
lods
loope
cmc
dec
fisttps
dec
pushf
stos
imul
adc
add
or
lcall
shll
inc
inc
pop
aaa
cmp
mov
ds
xor
add
out
xchg
mov
iret
cmovge
and
fstpt
cmp
xchg
jp
or
test
fsubl
sbb
mov
fldt
cwtl
add
outsl
push
or
cmp
xchg
dec
rol
and
mov
inc
aas
sbb
push
mov
dec
cmpsb
pop
roll
add
cmpb
push
pop
shrl
mov
inc
scas
add
xchg
pop
in
test
adc
rcrl
subl
cs
xchg
lcall
imull
mov
jl
out
pop
mov
xchg
icebp
jmp
jg
js
cmp
pop
rclb
adc
cmp
lret
and
aam
test
dec
or
pop
xchg
lret
test
xchg
iret
sbbl
jl
loopne
xchg
xor
notl
mov
dec
dec
lds
push
iret
hlt
es
faddl
leave
shrb
cmp
and
jmp
out
sbb
call
dec
mov
into
or
stc
xchg
test
fldenv
dec
xchg
fidivs
jns
out
cmpsl
sbb
cs
into
fidivrs
pusha
hlt
in
pop
lds
mov
xchg
outsb
mov
bound
push
mulb
mov
lret
cmp
adc
ret
xchg
xchg
leave
mov
jmp
jns
xchg
dec
mov
cmp
divl
mov
inc
leave
out
in
stc
mov
daa
ss
clc
mov
sub
xchg
enter
fistl
jmp
and
out
inc
add
daa
sbb
test
test
push
xchg
es
fcomps
xchg
pop
dec
dec
pop
push
inc
sub
sub
and
jmp
push
fdivrl
aaa
pop
int3
mov
inc
daa
jae
pop
xchg
xlat
xor
ss
add
imul
in
dec
pop
adc
cmp
aas
dec
jne
sub
test
addr16
test
mov
js
pop
mov
sbb
cmpsl
lahf
inc
push
shll
lods
scas
popf
jne
cltd
mov
aaa
mov
xchg
fnstsw
dec
ja
and
cmp
clc
add
aaa
mulb
dec
std
mov
mov
sub
cmp
xchg
mov
lret
dec
inc
jb
add
pushf
mov
addr16
cmpsb
sahf
or
pop
jecxz
adcb
pmullw
mov
fs
and
xchg
jb
pop
pusha
ljmp
push
and
out
inc
insl
add
jge
jns
push
add
lret
add
lods
push
push
cwtl
imul
mov
pop
push
mov
mov
ja
lds
rorl
movsl
sub
in
out
cltd
dec
sub
mov
icebp
lods
repz
stos
cs
sbb
adcb
sub
add
xchg
cwtl
int3
xorl
sub
loope
pop
adcb
push
fwait
mov
leave
mov
mov
mov
mov
mov
roll
pop
aad
xchg
div
test
rolb
test
cwtl
loop
aad
lea
fists
jne
lcall
movsl
or
fsubrp
push
mov
lcall
cmp
roll
cli
pop
ja
jae
and
and
xor
subb
xchg
push
lret
inc
mov
fisttps
adc
and
stos
test
xchg
dec
test
xor
or
je
jno
cmp
sti
pop
fs
and
into
in
pop
aam
out
xor
and
rorw
cmp
mov
movsb
in
xor
cltd
lods
popa
inc
daa
add
inc
imul
gs
jb
rorl
sub
insb
sub
sbb
mov
jbe
insl
push
out
out
movb
jns
cmp
xchg
sti
xor
mov
popf
mov
pushf
mov
xchg
jl
mov
mov
push
mov
and
lret
or
imul
mov
pop
sti
and
into
lea
stc
ret
pop
orl
divb
or
inc
out
lahf
dec
inc
fbstp
or
dec
fsubs
adc
popf
call
jae
out
ss
pop
test
inc
dec
in
aam
mov
lret
or
jmp
pusha
or
daa
pushf
cvtps2pd
fstl
sbb
sub
test
fisttps
adc
fmuls
int
ljmp
pop
sti
in
jecxz
sbb
je
mov
rcll
jno
xchg
add
adcb
mov
int3
pop
imulb
mov
lret
fstp
and
out
sub
iret
sub
dec
test
js
inc
imul
sub
jle
les
out
pop
and
mov
insb
loopne
mov
js
and
leave
cmpl
push
cmp
enter
inc
repnz
push
in
sbb
dec
in
xchg
push
movsb
andb
scas
mov
stos
int
cmpsl
in
or
mov
imul
xchg
leave
dec
pop
sbb
mov
lret
mov
push
cld
je
xchg
jl
aad
xchg
fmull
jo
sub
clc
sub
enter
shrb
enter
jbe
enter
pop
push
mov
sub
loope
inc
fnstenv
xor
push
pop
or
xchg
incb
icebp
jmp
pop
data16
ja
idivl
pop
jl
loopne
in
popa
in
push
mov
dec
mov
dec
xor
sub
arpl
xchg
ja
movsb
fildll
push
cli
xchg
cmpsl
fstps
add
insl
sub
mov
jbe
adc
js
mov
adc
fimuls
xlat
sub
je
icebp
add
out
repnz
xor
push
add
xor
push
in
cmp
jge
ljmp
aad
cmp
aas
popf
mov
xchg
aaa
pop
jnp
and
lods
mov
cltd
hlt
loopne
inc
js
push
loopne
jg
sub
sbb
lods
jae
mov
iret
and
lcall
out
mov
cmp
pushf
cltd
xor
sti
sub
into
out
pushf
mov
std
mov
or
idivl
in
fwait
pop
icebp
jl
rcll
jae
dec
cmpsb
insb
jnp
ljmp
mov
es
xor
xchg
clc
push
and
push
addr16
imul
mov
pop
adc
outsl
mov
repz
je
imulb
loope
pushf
out
bound
cmp
mov
sahf
out
out
xor
loop
call
xor
pop
ficomps
mov
addr16
xchg
es
add
ret
loope
adc
mov
mov
mov
es
sbb
repnz
mov
mov
and
cmpsl
enter
xchg
daa
pop
adc
lods
pop
notb
aad
or
jle
imul
pusha
and
xor
and
dec
scas
into
fs
out
xchg
push
jbe
std
xor
ret
xchg
mov
sti
adc
mov
pop
cmc
dec
cmp
insl
inc
aaa
lds
or
jb
pop
or
jp
jecxz
jle
sub
imul
or
cmc
stc
mov
imulb
lret
dec
fcmovnb
jl
lahf
sarb
loop
and
js
dec
inc
jmp
xchg
sub
lods
push
cmp
cmp
loop
cmc
dec
xchg
push
or
dec
daa
shll
sbb
mov
cmpsb
push
in
addl
dec
test
ret
mov
mov
xor
cmpsl
cwtl
repz
mov
fldcw
mov
sbb
sub
mov
lods
mov
mov
inc
addr16
pop
out
push
mov
addr16
sub
sbb
rorb
or
lods
and
dec
icebp
jne
fs
adc
mov
das
shrb
mov
xchg
bound
cmp
sub
movb
inc
stos
cli
sbb
ljmp
add
aam
sbb
repnz
pop
hlt
pop
mov
mov
xor
leave
sub
sbb
fxch
pop
mov
adc
jle
jbe
mov
test
cli
cmc
or
adc
xchg
jmp
out
or
cld
movsb
mov
pop
enter
fwait
push
fcoml
mov
lret
jnp
mov
inc
fdivrl
sahf
fdivs
mov
stos
lods
mov
insl
cmp
dec
lret
sbb
mov
in
rcrl
sbb
cld
clc
cmp
fwait
sub
stos
adc
ljmp
test
sub
test
loop
xchg
and
xchg
pop
sti
test
pushf
inc
pop
mov
pop
xchg
jp
pusha
xor
mov
pop
sbb
mov
out
cmp
icebp
xor
mov
xchg
xor
push
mov
cmc
in
xlat
inc
pop
lcall
fs
stos
imul
cmp
outsb
cwtl
stos
jp
push
push
cmp
into
sahf
push
mov
fucom
pop
lock
sbb
loopne
mov
fwait
cmp
cltd
pushf
gs
arpl
daa
mov
lret
mov
nop
jecxz
rcrb
testl
in
das
in
es
ret
test
mov
mov
pop
cli
je
pop
fs
push
mov
ja
dec
sub
std
adc
sbb
call
xor
adc
lcall
or
cmp
fsubs
mov
inc
xor
movsl
push
mov
or
pop
jbe
pop
iret
add
ret
gs
test
sbb
inc
notb
lcall
lcall
ds
jg
sub
sarl
jne
rorl
repnz
stc
mov
cmpb
sbb
mov
push
mov
pusha
mov
cmp
int3
xor
add
mov
dec
and
mov
add
notb
cmc
popa
shlb
out
cmpsb
mov
mov
sub
clc
into
xor
adc
int3
adc
mov
cmpsl
aad
push
lea
out
in
insl
or
sbb
lods
shl
cmp
jne
bound
and
or
inc
dec
lods
outsl
shrb
scas
xchg
lea
fnsave
insl
addr16
or
bound
mov
stos
cmp
out
int
push
pop
in
xchg
xor
add
xor
inc
pop
rorl
daa
mov
or
or
dec
dec
pop
and
gs
std
or
adc
xor
lods
fistpl
push
das
adc
mov
dec
clc
outsb
outsb
loop
icebp
and
repz
push
lahf
ljmp
inc
cmpl
jbe
hlt
cmp
iret
and
pusha
repz
not
mov
pop
jle
cmp
fdivrs
push
stos
movsb
aam
data16
mov
cmp
mov
inc
mov
movsb
ja
cmp
cmp
jo
mov
pop
cs
jge
or
mov
mov
jne
mov
jle
les
mov
cmp
or
lret
lods
repnz
pop
xchg
clc
lods
stos
gs
test
test
js
push
pop
and
mov
shlb
xchg
nop
call
or
jle
inc
in
jg
jae
int3
int
cmp
std
xorb
adc
and
pushf
push
and
or
lods
inc
push
push
imul
inc
shll
movsl
lret
inc
xor
mov
inc
jecxz
push
inc
adc
fmull
mov
int
inc
pop
push
js
test
out
mov
mov
mov
bound
xor
mov
ds
out
mov
mov
enter
sub
pusha
adc
fimuls
push
jg
insb
dec
pushf
jg
add
dec
sub
loopne
fwait
cltd
orl
sbb
lea
aaa
xor
sub
mov
mov
adc
ret
lock
cwtl
in
cmpsb
sub
stos
adc
mov
inc
mov
in
mov
in
xor
inc
and
cmp
jl
call
mov
jb
shlb
mov
mov
iret
adc
jl
mov
int
push
gs
sub
jns
sbb
lock
push
jae
stc
xor
jp
aaa
sbb
and
add
jne
xchg
xchg
xor
aam
fldt
add
adc
adc
jle
imul
call
leave
xchg
or
inc
lock
jmp
push
push
lods
ljmp
arpl
test
xchg
repnz
out
fwait
mov
ja
sbb
aad
mov
xchg
xchg
push
push
aas
inc
mov
inc
cmp
pop
fisubs
mov
rcll
sarl
and
mov
sub
mov
xchg
imul
sbb
pop
push
xorb
mov
outsb
cmp
jmp
pop
push
nop
leave
dec
or
mov
hlt
loop
addl
xchg
pop
xor
daa
ja
pop
sbb
lret
flds
xor
pop
xor
mov
xchg
mov
adc
outsl
jmp
fwait
or
fsubl
cwtl
and
push
leave
cmp
out
popf
push
jle
lea
jg
ficoms
adc
out
fiaddl
call
xchg
shlb
negb
add
stos
arpl
sbb
outsb
sub
adc
aaa
jae
stos
mov
inc
push
jnp
shrb
dec
sbb
add
adc
imul
fcompl
cld
adc
dec
imul
cs
dec
lock
pop
lods
xchg
xlat
xor
adc
mov
cmp
push
cli
cmp
in
fcoms
enter
jae
fildll
add
pop
add
or
mov
pusha
cmc
out
scas
cli
idiv
test
mov
push
or
sbb
mov
repz
mov
xlat
fdiv
push
adc
sbb
stc
xor
repz
pop
or
imulb
daa
sbb
mulw
mov
adc
gs
mov
out
push
stos
sahf
stos
mov
insb
sar
lahf
cmp
fldenv
scas
fildl
ja
adc
inc
rcr
sub
outsb
mov
dec
jge
and
xor
rclb
xor
jecxz,pn
stos
pop
mov
repz
flds
pop
test
dec
pop
sbb
jmp
cmp
daa
and
cs
ret
lahf
push
test
sbb
mov
inc
or
xorb
jle
or
xor
inc
mov
adc
inc
sti
hlt
mov
sbb
ja
movsb
int3
push
loop
xchg
out
jle
or
ljmp
into
rorb
add
sbb
out
std
jge
mov
cmp
pop
imul
pusha
push
push
adc
sbb
decl
jns
leave
pop
jb
mov
arpl
outsb
out
scas
filds
sahf
sbb
mov
bound
inc
imul
imul
mov
jb
int
cmpsl
scas
mov
sbb
addr16
lods
lcall
mov
xchg
or
xor
mov
dec
add
inc
not
and
jns
stc
fnstsw
aas
inc
sub
jns
leave
push
int3
adc
loopne
sbb
aas
mov
xor
adc
or
outsl
outsb
add
jae
add
sub
dec
pop
mov
mov
inc
inc
insl
pop
das
jmp
jecxz
jecxz
pop
cli
xor
in
out
out
and
jle
outsl
addr16
and
or
clc
dec
dec
dec
andl
out
mov
pop
mov
add
scas
nop
or
call
lods
js
cmp
or
adc
leave
adc
cmpsb
jnp
out
nop
cmp
stos
mov
ss
push
ds
mov
imul
jae
and
and
das
adc
repz
adc
mov
inc
mov
lahf
ja
jne
mov
stos
rcll
push
add
jb
sub
aas
jecxz
outsb
enter
hlt
cmp
fdivs
push
pop
xchg
mov
mov
outsl
mov
mov
mov
lcall
sbb
jmp
mov
rolb
pop
subb
fwait
mov
cmp
inc
bound
adc
or
in
mov
jle
cmc
andb
inc
push
dec
mov
sbb
add
ljmp
imul
mov
push
xor
stos
xchg
shl
lock
jb
xor
mov
pop
jns
in
cwtl
into
cmp
hlt
add
fwait
daa
lcall
inc
xchg
lea
mov
das
push
inc
push
dec
shrb
push
lcall
adc
push
aad
inc
ljmp
outsl
xor
hlt
xchg
push
loop,pt
sbb
lahf
adc
xchg
add
dec
cld
hlt
pusha
jo
jae
repnz
inc
jp
out
xor
andb
xor
xchg
xorl
push
adc
xchg
inc
popf
pushf
sub
nop
jg
and
mov
jae
enter
mov
xor
sub
cs
or
or
pop
mov
pop
nop
inc
loope
or
or
arpl
fs
enter
pop
adcl
xchg
jnp
ss
nop
jp
sahf
call
and
pop
jo
or
pop
lea
stos
push
insl
subl
mov
sahf
movsl
scas
mov
loope
int3
cmpsb
mov
push
xchg
mov
aaa
xlat
imul
arpl
inc
lcall
or
test
xchg
cmc
jo
repnz
imul
lea
dec
push
scas
test
ljmp
cmp
pop
dec
out
mov
mov
shll
pop
or
pop
inc
mov
orb
pop
add
xorl
push
sub
xor
push
gs
movb
sbb
das
cmp
call
xor
xchg
mov
adc
aas
ds
push
xor
push
inc
sub
jae
in
daa
adc
pop
adc
mov
aas
push
lcall
enter
nop
fiadds
es
arpl
cmp
push
jns
push
cmpsl
jo
cwtl
pop
mov
lret
mov
fnstenv
hlt
xchg
das
jne
jnp
adc
jo
sbb
sub
dec
cmp
mov
arpl
lcall
dec
hlt
rorl
and
or
sarb
loope
mov
xor
lret
dec
out
mov
pop
mov
js
shll
xchg
ja
cmpsb
test
pop
hlt
daa
pop
out
bound
inc
movsb
pop
adc
sahf
dec
sbb
xchg
addl
adc
mov
out
mov
inc
jbe
push
clc
icebp
pop
lret
pop
in
cmp
test
pushf
sub
push
ret
push
push
mov
popf
pop
aad
call
outsb
jge
addr16
cmpsb
or
mov
pop
sub
add
dec
scas
sub
pop
lret
lret
rcl
sbb
dec
sub
mov
sahf
xchg
add
mov
std
mov
pop
mov
push
repz
adcb
cmc
xor
jle
or
jge
in
inc
ss
push
mov
cwtl
inc
enter
loope
mov
test
jbe
jnp
ret
lds
nop
pop
cmc
lods
add
insl
dec
adc
push
or
cwtl
data16
push
inc
pop
es
jmp
dec
cmp
dec
push
cmp
mov
xor
ficomps
cli
mov
shl
mov
and
loope
jl
push
pop
ficoms
and
dec
jmp
scas
shrb
mov
and
xor
cmc
mov
sub
ja
negb
rol
dec
aas
push
add
mov
cmpsb
xchg
ds
lret
pop
insb
and
jecxz
mov
shlb
data16
es
xchg
and
out
jne
repz
dec
adcl
jb
xchg
sti
inc
adc
mov
sti
add
andb
scas
sub
or
push
sbb
add
xorl
jno
jno
outsb
fsubs
push
leave
imul
jns
xchg
int3
mov
ret
ret
stos
dec
insl
iret
inc
sub
xor
pusha
and
xorl
jo
out
dec
pop
adc
xchg
jb
aaa
mov
cli
mov
mov
add
add
push
xchg
sub
adc
mov
push
sbb
xchg
adc
arpl
int
mov
cld
push
mov
mov
mov
mov
jnp
pop
fstp
inc
add
push
jmp
cs
xor
subb
xor
inc
mov
jecxz
adc
xchg
aad
daa
data16
dec
ret
loop
in
iret
add
aam
dec
xchg
call
popf
sub
lret
fsubrs
in
sbb
repnz
sbb
sub
push
and
add
addb
inc
push
test
cmpsl
pusha
mov
stc
xor
ja
es
mov
negb
out
sub
aad
loope
adc
out
fistps
push
pusha
pop
push
sbb
xchg
rclb
pop
int
dec
mov
lds
mov
test
dec
mov
andl
mov
cmp
testb
sbb
cs
fsubr
fimuls
adcl
lods
xchg
jecxz
in
test
inc
sbb
in
mov
test
cmp
or
testl
add
xchg
filds
or
aad
sub
pop
pop
inc
mov
mov
adc
orb
or
and
addr16
cli
mov
loop
dec
mov
cmp
sub
out
pop
dec
xchg
popf
cmpl
adc
ja
xlat
insb
ds
add
mov
adc
addr16
sub
dec
cmp
jb
push
lahf
adc
xchg
sub
mov
add
sahf
out
mov
mov
rcl
sbb
insb
repnz
cmp
dec
cld
sbb
xchg
inc
mov
mov
inc
push
xchg
mov
fidivl
mov
imul
cltd
ret
mov
jmp
dec
mov
xor
std
mov
mov
cmp
cmc
pop
fcomps
loope
arpl
scas
insb
lahf
inc
negl
into
int
cmp
sbb
mov
cmp
test
rcll
mov
jecxz
fstpl
out
je
mov
mov
push
or
test
xor
push
orl
bound
pop
imul
mov
pop
pop
ss
jae
mov
inc
mov
pop
jne
sub
xor
xchg
mov
cld
add
out
dec
xchg
pop
aad
mov
adc
ss
jae
lds
xor
pop
sub
mov
push
push
push
adc
pop
ljmp
adc
xchg
pop
xor
loop
adc
jmp
cs
sbbl
mov
mov
cmp
popf
shll
inc
add
dec
jnp
inc
inc
xchg
movsl
dec
mov
sbb
inc
add
xchg
push
outsl
lock
pop
out
inc
mov
push
sbb
jne
orl
leave
inc
jbe
jl
fs
and
js
sbb
imul
adc
push
fs
mov
cmpsl
xchg
sbbb
cmp
daa
push
jae
mov
sbb
bound
filds
int3
outsb
jns
sar
mov
movb
mov
xchg
mov
sub
scas
in
fistpl
push
and
ljmp
dec
sbb
data16
push
push
ss
das
sbb
addr16
adc
pop
push
icebp
sti
xchg
inc
push
push
int3
nop
into
push
bound
dec
flds
lock
pop
sbb
jns
and
xchg
ds
dec
fbstp
push
mov
mov
fildl
fbstp
addr16
cmp
je
stos
xor
inc
popf
mov
movsl
mov
call
sahf
pop
sti
loopne
jno
mov
aaa
dec
in
dec
dec
sbb
call
stos
shll
ds
lea
xor
xorl
adc
ljmp
mov
cmp
jge
mov
mov
inc
sbb
ja
shll
scas
les
mov
push
mov
mov
repz
lds
ss
dec
add
cmp
inc
subl
xchg
lret
lods
jl
mov
and
push
daa
jo
je
cmpsl
fisubrs
push
orb
or
sub
jo
xchg
cld
inc
icebp
mov
mov
popf
fsubrs
test
mov
aaa
mov
sub
inc
shrl
in
mov
scas
jecxz
xchg
notl
mov
cmp
or
lret
fwait
sub
inc
add
mov
mov
or
pop
or
add
or
xor
sub
and
add
pop
xor
push
aaa
data16
push
cmp
xor
icebp
push
pop
xor
addr16
cmp
cltd
inc
pop
mov
xor
adc
mov
jge
aas
lock
xchg
into
hlt
push
push
jge
loop
or
insl
pop
hlt
movsl
addr16
mov
adc
mov
pop
leave
ret
leave
enter
addb
int3
in
push
mov
and
xchg
lods
xor
cwtl
and
jns
sbb
into
mov
push
int
test
jns
adc
adc
out
outsl
ret
loopne
ds
sbb
xor
mov
xor
pop
mov
aas
ljmp
daa
ret
std
addb
ss
inc
inc
mov
add
mov
and
mov
test
inc
mov
pusha
int3
adc
nop
jo
bound
loop
dec
pushl
idiv
mov
xor
cltd
xchg
cmp
cltd
jbe
mov
jge
loop
leave
xor
lcall
sbb
sub
pushf
mov
sub
out
andb
repz
insb
sub
mov
or
mov
jo
repnz
cmpsb
outsb
mov
rolb
loop
div
dec
push
push
mov
imul
sub
xlat
imul
mov
mov
movsl
add
xchg
jg
ss
xchg
icebp
push
push
add
push
pop
repz
stc
sub
fmuls
push
or
mov
out
pop
jle
fsts
in
in
sub
aam
add
hlt
mov
filds
pop
mov
scas
mov
sbb
pop
xchg
mov
stos
ljmp
cwtl
ljmp
ljmp
add
push
dec
push
push
mov
jbe
clc
or
in
cmc
adc
jb
fsubs
cmovo
xor
in
fwait
aam
sbb
mov
dec
xchg
jge
add
jp
ja
add
xchg
cmp
pop
push
fcomps
adc
xchg
mov
mov
xchg
add
es
jl
add
shll
mov
out
mov
leave
scas
add
ljmp
mov
inc
inc
adc
out
out
inc
test
cmp
mov
jg
lods
add
and
mov
dec
aam
push
and
fstps
or
jb
jl
add
dec
cld
push
cmp
mov
fstpl
inc
or
pop
stos
adc
push
les
inc
xchg
ss
add
push
and
ret
adc
cmc
cltd
faddl
pop
cs
cmp
sbb
orb
jle
enter
repnz
mov
enter
fisubs
daa
shrb
pop
pop
jmp
ds
loope
inc
test
int3
inc
arpl
lds
pop
rol
inc
sbbb
lret
cmp
int
fisttps
insl
nop
push
hlt
gs
out
fs
int
fcom
cmpl
inc
mov
cmc
fcmovb
arpl
xlat
int3
std
js
xchg
flds
iret
adc
and
cmp
push
sar
xchg
repnz
mov
out
sbb
into
push
nop
into
test
push
scas
mov
lret
or
idivb
mov
lcall
repnz
std
cmp
adc
movsl
arpl
inc
in
fdivl
movsb
in
lock
xchg
xchg
jmp
cmp
or
and
decl
outsb
sbb
mov
cmpl
add
lods
xchg
lods
repnz
outsb
out
loope
aad
cmp
xchg
inc
mov
pop
ljmp
cmp
std
cld
push
test
lock
mov
ja
fldcw
out
xor
sbb
mov
icebp
loope
nop
mov
dec
cmp
inc
cld
sti
add
jae
mov
and
fdivl
aad
out
stc
xchg
mov
nop
xchg
call
push
add
push
xchg
subl
test
cmp
lods
mov
ja
jmp
dec
mov
mov
bnd
sub
jle
add
repz
iret
addl
cld
mov
add
sbb
push
inc
add
mov
mov
icebp
mov
pop
pop
lea
jl
cs
ret
fnsave
mov
jno
or
fs
add
adc
jle
daa
jne
jl
sub
inc
xchg
inc
insl
dec
pop
popf
addps
div
inc
xchg
aad
rcrb
pop
push
mov
out
in
sti
fisubrs
aam
cmpsb
fidivrl
inc
xchg
xchg
jecxz
push
leave
loop
mov
dec
and
ret
pop
orl
lahf
js
jbe
stos
ficomps
push
gs
adc
addr16
adc
jge
pop
or
add
imul
dec
cmp
lahf
add
enter
xchg
pop
push
and
pop
xchg
test
sbb
xor
pop
jge
bound
push
dec
xchg
mov
jle
mov
das
mov
sbbb
pop
inc
add
mov
lcall
pop
shl
stc
mov
xchg
jl
popa
scas
icebp
and
add
fwait
bound
mov
lret
out
ja
daa
mov
mov
in
push
adc
xchg
dec
rolb
and
and
movsl
cmp
daa
mov
jae
mov
xchg
fisttpll
mov
rclb
ljmp
adc
inc
sub
lods
insb
pop
xor
ret
je
sbb
sti
jns
and
hlt
lods
inc
xchg
icebp
push
add
mov
enter
int
or
pushl
lahf
sbb
adc
dec
add
idivb
jge
aam
mov
and
je
and
xor
icebp
js
jp
jge
adc
stc
scas
jg
mov
xchg
shlb
dec
pushf
xor
adc
cld
pop
enter
cmp
mov
repz
lods
mov
cld
mov
gs
and
addr16
jno
mov
in
add
scas
jge
lods
jle
dec
dec
nop
pop
aas
int3
fidivrl
cli
sahf
cmp
addr16
fsts
cs
rcrl
inc
dec
and
dec
sbb
mov
inc
repnz
mov
insl
data16
jmp
xchg
sub
jle
mov
insl
scas
add
loop
in
pop
cmp
mov
aad
leave
inc
aas
pop
cmp
in
in
add
popl
and
in
orb
imul
int
sti
out
sbb
aaa
xor
rorl
sub
lods
add
pop
shlb
rorb
jmp
pop
faddl
lods
sub
inc
cli
push
adc
sbb
out
mov
out
mov
push
int
adc
call
sbb
mov
insl
aas
into
or
push
pop
mov
outsl
mov
cmc
in
adcl
js
add
icebp
pop
popa
push
pushf
loop
rol
loope
push
js
in
outsb
mov
or
xchg
xchg
js
mov
sub
and
mov
sbb
cltd
outsl
mov
lcall
push
repnz
std
jp
inc
mov
xor
and
lock
pop
or
rorl
inc
fdiv
lods
add
mov
push
aam
sarb
fs
push
sbb
sbb
add
sti
inc
lea
jp
fs
sbb
fs
push
sti
sbb
inc
scas
dec
mov
or
aas
cmc
in
aam
test
dec
xchg
push
sub
jne
push
orb
outsb
idivl
pop
or
fmuls
nop
aaa
sarl
inc
and
sbb
inc
iret
ds
shl
dec
sbb
icebp
pop
fsubp
push
xor
inc
sahf
aaa
inc
das
mov
in
aam
sbb
push
inc
inc
xchg
insl
xchg
jp
and
sub
lods
adc
cltd
ret
mov
push
adc
aaa
shlb
enter
pop
xor
adc
jg
and
sbb
addl
sub
sbb
mov
call
std
push
xor
mov
cmp
jnp
mov
fistl
gs
jmp
stos
in
iret
aam
add
rorb
pop
stos
stos
pusha
sbb
sub
inc
pop
cmpsl
mov
stc
add
outsl
in
cmp
add
xchg
paddusb
xor
mov
subb
jp
lock
and
cld
adc
push
orb
add
mov
or
outsb
cmc
pop
pop
aaa
lahf
outsl
dec
jns
lret
jg
fadd
inc
ret
push
jle
insl
lock
cli
jle
pop
adcb
cmp
je
shrb
sub
lahf
cmpb
dec
xchg
mov
movsb
pop
jnp
ret
jmp
rorb
jecxz
jbe
or
cmpsl
or
mov
lret
cmp
pop
aaa
pop
fldcw
push
push
adc
jecxz
loopne
sub
iret
mov
repz
adc
pushf
push
inc
popf
push
push
rcl
cwtl
pop
es
push
sahf
aam
ret
pop
xor
jp
or
lock
mov
outsb
pop
xchg
ljmp
cmp
jmp
leave
and
xchg
jae
sub
ret
or
aad
sbb
out
movsb
int
jle
repz
dec
cmp
in
jle
lock
xor
shrl
insl
adc
in
or
add
jge
pop
mov
test
push
inc
jb
pusha
push
push
testl
push
insb
xchg
pop
xlat
leave
sti
push
jg
adc
mov
or
lock
aaa
sbb
adc
clc
scas
ficoms
aad
adc
jecxz
xor
dec
sub
dec
aas
xchg
inc
lahf
adc
cwtl
imul
cmp
cwtl
cmpl
push
fsubl
daa
aam
fiadds
push
test
movsl
popa
popa
jnp
cmp
je
int3
out
adc
popa
inc
mov
scas
inc
dec
sbb
std
adc
ja
xor
test
clc
mov
loop
sub
or
fwait
repnz
jbe
jmp
sbb
mov
dec
push
and
pop
lcall
in
and
fsubs
lret
adc
jbe
jnp
sub
cmc
jmp
push
dec
sub
jg
and
xchg
pop
pop
adc
push
add
pusha
inc
stc
es
insl
mov
js
pop
pop
xor
sbb
xchg
push
rcrl
adc
loop
jb
clc
in
movsl
aam
sub
inc
inc
rcr
jns
test
sbb
dec
xor
xchg
xchg
mov
push
pop
int
in
mov
mov
cmp
verw
scas
jle
cmp
ljmp
mov
push
xchg
das
lret
jg
or
cli
icebp
mov
inc
rcll
insb
fdivrs
dec
ret
add
add
jno
adc
test
or
mov
aas
dec
cmp
adc
pop
add
dec
in
jne
into
inc
xlat
stos
test
shl
mov
push
add
cmp
xchg
cmp
dec
insb
sub
xchg
add
fidivrs
data16
out
gs
inc
movsb
inc
imul
jne
jnp
imul
in
xchg
inc
test
dec
lock
shlb
clc
lcall
aad
jns
mov
push
ss
or
jp
imul
icebp
frstor
jb
add
jb
js
mov
xchg
cmp
and
mov
mov
xor
mov
test
add
xchg
loope
xor
mov
add
mov
in
lods
mov
in
jecxz
or
jg
dec
jge
lcall
loopne
xchg
cmc
adc
sub
sub
pop
adc
push
cmp
jl
sahf
xor
aaa
push
adc
scas
ljmp
pop
out
pop
push
sahf
lahf
call
stos
mov
je
xchg
mov
push
scas
neg
hlt
inc
and
in
in
dec
adc
rorb
sbb
repnz
arpl
subb
or
cmp
or
add
or
out
adc
lcall
pop
jecxz
inc
mul
popa
mov
aaa
add
loopne
js
jae
push
inc
xor
xchg
je
xchg
xchg
call
shll
sti
test
scas
dec
repz
mov
ss
push
insb
jnp
mov
hlt
loope
emms
test
pop
xor
rep
loope
cld
push
lret
imul
adc
sahf
stc
xchg
xor
pop
int
iret
shrb
push
push
jno
ret
test
into
push
xchg
leave
popa
ja
cwtl
lock
jns
ljmp
inc
mov
repz
jo
repz
divb
dec
pusha
ret
xor
mov
inc
mov
adc
es
jmp
ret
hlt
js
mov
outsb
push
pop
push
mov
mov
in
jns
push
sbb
dec
or
xor
ss
pop
jmp
inc
jbe
stos
pop
cmp
xchg
sbb
movntps
cmp
int
push
daa
or
les
call
mov
loopne
cs
mov
mov
aaa
js
movsl
cmp
jae
push
cltd
testl
or
loop
aam
push
int3
mulb
cli
aaa
adc
push
dec
mov
movsl
shlb
es
dec
add
push
dec
jmp
or
lds
mov
dec
pusha
jge
subl
out
loop
insb
mov
and
xchg
jg
jg
add
xor
jge
pop
cmp
xor
pop
rol
adc
incl
adc
mov
loopne
xchg
inc
sbb
pop
mov
testl
in
dec
lret
subb
xor
or
jecxz
adc
test
sarl
out
lock
es
cmpsl
ss
mov
pop
cmp
add
cli
push
pop
mov
mov
pop
stos
dec
icebp
loopne
in
dec
jle
out
sar
mov
inc
and
push
jg
icebp
nop
push
xlat
mov
int3
aaa
in
jns
sbb
jecxz
pusha
adc
test
jb
ret
inc
adc
daa
mov
jg
push
js
and
push
fisubl
jp
dec
cmpsl
jge
movsb
stc
mov
cld
push
adc
add
fwait
or
inc
mulb
hlt
loopne
fcoms
push
pop
daa
mov
dec
push
pop
fcomip
pop
loop
inc
cmpsb
repnz
mov
repz
xchg
clc
data16
fmuls
adc
mov
bound
inc
iret
icebp
adc
js
cwtl
mov
fistpll
push
xchg
daa
stos
or
adc
in
iret
lds
shll
lds
js
push
jne
cmp
adc
pop
or
sbb
fs
sahf
sbb
fnstenv
int3
in
mov
mov
jne
adc
movsl
lret
aad
out
fcmove
sar
mov
mov
push
mull
xchg
std
popf
jle
dec
dec
mov
mov
add
sub
cmp
test
clc
push
loop
out
cld
jge
div
fdivrs
lahf
repz
scas
in
xchg
out
xor
stc
mov
sbb
xchg
mov
pop
inc
push
mov
mov
rcll
mov
call
rcrl
loope
into
ja
xchg
cmp
add
add
push
mov
adc
mov
andl
jg
mov
mov
xchg
jg
and
pop
popa
fcompl
cmpsb
mov
add
flds
in
xchg
mov
push
adc
push
mov
xor
bound
fs
jg
xchg
push
inc
push
inc
in
jnp
adc
mov
inc
in
add
adc
insl
fildl
mov
fisttps
movsl
pop
cmp
out
sahf
dec
push
orb
mov
push
ficoms
aam
cld
xor
and
jecxz
fstl
test
ljmp
lcall
shlb
into
leave
xor
test
push
xchg
les
adc
sub
in
pop
mov
dec
xchg
aad
xor
or
aaa
test
or
imul
ljmp
adcb
test
bound
iret
dec
arpl
enter
pop
mov
sbb
cmp
adc
sub
mov
inc
jae
pop
mov
dec
jb
sub
push
add
ret
fsubrl
push
adc
inc
and
cli
pop
cmc
mov
ljmp
mov
xor
mov
or
xor
xchg
rorb
dec
cmp
xchg
addr16
ret
jns
out
jp,pn
push
pop
jle
dec
in
in
ret
push
lcall
lret
cltd
cltd
ret
pop
jge
hlt
cwtl
out
jae
mov
lods
nop
inc
data16
pop
mov
cmp
jmp
or
shlb
dec
or
jl
pop
mov
or
js
aaa
sarl
movb
or
pop
out
outsl
daa
insl
cmova
stos
xchg
call
pop
insl
fwait
push
testb
pop
mov
mov
stc
xor
push
jge
push
lds
dec
cmp
rcrl
cltd
push
jns
sbb
arpl
pop
or
jae
pushf
stos
pop
jae
push
or
lret
in
loopne
jmp
push
lods
sub
std
test
pop
cld
jne
adc
push
cmp
rorl
popa
and
cmp
lods
pushf
pop
sbb
icebp
in
loopne
push
cmpl
fnstcw
xchg
sti
pushf
xor
add
add
dec
inc
mov
outsl
repnz
mov
adc
dec
sbb
aam
iret
mov
lret
shll
fprem1
sarb
icebp
inc
mov
sbb
dec
bound
or
or
js
xchg
mov
test
add
mov
push
xor
mov
fwait
push
pop
je
and
dec
imul
mov
call
sub
xchg
shl
sbb
push
dec
imul
cmpsb
sahf
add
aaa
lods
pop
pop
mov
in
cpuid
sub
orl
pushf
sbb
fstl
out
mov
sbb
vcvtpd2dq
sub
cmp
xchg
and
sahf
inc
push
in
scas
iret
mov
es
insl
sbb
test
jmp
push
in
dec
std
lods
sti
mov
scas
fisubs
enter
jg
xchg
stos
lret
in
mov
adc
test
push
mov
aas
mov
sub
or
mov
aaa
cmpsb
fld
adc
xor
mov
adc
mov
fimull
pushf
sbb
sub
insl
jo
pop
out
mov
insb
call
fiaddl
pushf
and
pop
add
sarl
cmp
outsl
insb
enter
stc
testb
shlb
out
mov
sbb
xor
xchg
push
lods
out
jge
call
mov
in
inc
call
in
xchg
cmp
mul
jno
outsb
popa
xlat
mov
mov
xchg
pop
mov
push
sub
mov
pusha
cmc
and
pop
or
test
daa
loop
sbb
sarl
mov
fistpll
outsb
xchg
daa
cmc
dec
outsl
mov
xchg
cmc
push
jns
push
inc
or
int3
mov
and
dec
std
mov
inc
into
sbb
into
inc
inc
sti
shl
jmp
jno
and
dec
inc
lcall
inc
sbb
int3
push
mov
pop
imul
jp
imul
or
aaa
outsb
or
fstps
cmp
or
stc
xchg
hlt
jae
aam
pop
dec
cmp
lret
dec
xchg
cld
nop
pop
jae
or
pushf
fisubrs
fidivl
jle
sbb
call
and
out
add
enter
dec
pop
add
xor
fmul
sbb
je
decb
and
das
loope
add
xchg
mov
sbb
mov
mov
sub
xchg
in
repnz
cmp
fwait
or
mov
jge
cmp
push
lods
inc
xor
test
and
scas
inc
xor
mov
xor
ja
mov
cmp
jne
adc
inc
pop
movsb
jg
jae
nop
sub
pop
adc
icebp
test
cmp
xchg
ret
ret
fstps
lock
incb
and
les
push
adc
fcompl
pop
lods
dec
adc
cltd
mov
fidivrl
pushf
push
push
sar
lock
mov
outsl
jmp
imulb
mov
and
sarb
pop
aas
mov
addl
xchg
sbb
cmp
in
cmc
ljmp
call
std
hlt
sar
and
out
sbb
jne
aas
push
mov
pop
pop
cmpsl
rcll
std
or
xchg
sbbb
rolb
inc
or
jnp
shlb
xchg
pushf
stc
bound
inc
idivl
dec
dec
or
call
cli
pop
movsl
ja
nop
xor
loop
ds
jg
arpl
enter
stos
sbb
mov
xor
jnp
jl
dec
stos
cmp
sti
add
xchg
out
test
not
and
fwait
scas
and
mov
xor
mov
mov
inc
sub
stos
pop
hlt
fidivs
mov
push
mov
cwtl
dec
paddsb
fildll
mov
push
add
int3
rcrb
repnz
or
xor
lods
jmp
fcomps
adc
xchg
pop
or
int
testl
mov
xchg
inc
jle
push
es
jbe
repz
mov
loop
inc
test
jmp
inc
sbb
cld
dec
sub
aad
dec
ss
jbe
out
add
xchg
jg
jle
mov
pop
add
adc
popf
add
clc
push
stos
mov
sbb
in
push
imul
sbb
adc
jmp
js
shll
and
xchg
xor
rcr
imul
mov
mov
iret
xchg
pop
mov
repz
stos
jmp
cmpsl
cmpsb
fbld
dec
push
les
and
lcall
push
addl
adc
xlat
jbe
or
test
sbb
cld
sarb
and
mov
mov
push
stos
sahf
stos
cmp
dec
mov
adc
rcr
pop
fsubr
div
mov
inc
pop
fwait
mov
adc
mov
mov
xchg
testl
or
dec
aas
jbe
call
loope
mov
cmp
pop
mulb
insb
xchg
push
mov
ret
push
ss
unpcklps
cld
adc
out
jl
mov
jg
arpl
pop
nop
std
in
dec
aaa
das
push
dec
negl
sbb
out
mov
add
jae
out
aam
int
pop
push
xchg
push
mov
test
cld
popf
imul
subb
cmc
arpl
imul
notb
push
inc
sbb
test
or
mov
adc
mov
pop
xchg
jb
mov
jnp
lods
test
sub
cmpsb
jo
dec
xchg
mov
jp
inc
nop
pop
mov
add
xchg
outsb
adcb
icebp
sbb
repz
mov
jno
jg
std
ret
ja
cmp
adc
mov
mov
scas
xchg
dec
mov
std
insb
or
loope
imul
cmp
xlat
sbbb
sbb
jb
popf
push
or
into
inc
mov
cmc
adcl
decl
mov
arpl
fmull
outsb
adc
out
adc
adc
sti
or
sbb
sbb
sub
movsb
mov
cmp
lret
ret
jmp
fs
gs
sbb
or
sub
clc
shrl
mov
xchg
xor
shr
scas
pop
pop
sub
lret
pop
in
lds
jbe
dec
lods
sub
pusha
pop
icebp
jmp
jecxz
add
hlt
xchg
push
in
call
cmc
mov
push
mov
jb
icebp
xchg
push
and
aad
xor
shrl
icebp
pop
xchg
push
jmp
fwait
xchg
dec
pop
or
xor
xlat
and
cmp
sbb
xchg
in
mov
sub
negb
insl
hlt
stc
mov
inc
jmp
mov
xchg
stos
iret
das
in
mov
xchg
divl
ljmp
jl
roll
adc
mov
add
push
mov
adc
add
adc
xorb
hlt
sbb
jo
xchg
mov
negl
adc
imul
sub
scas
test
divl
add
push
inc
cmp
ret
mov
in
aas
jo
push
mov
aaa
cmc
stos
out
std
cmp
jle
clc
ret
push
inc
inc
hlt
movsb
pop
add
mov
popf
jecxz
icebp
subl
push
mov
aas
outsb
adc
jns
arpl
aaa
or
push
mov
pop
outsl
xchg
mov
pop
cs
xchg
mov
mov
pop
pop
mov
push
xlat
lds
mov
out
pop
push
inc
cmp
pop
jle
pop
popf
adc
inc
rolb
dec
arpl
gs
fwait
jbe
mov
pop
sub
pop
pushf
aad
jne
je
adc
loope
mov
jp
or
repnz
sti
xor
stc
add
into
fists
xor
cmp
xchg
repz
andb
mov
gs
nop
lret
fsubs
dec
jno
sbb
dec
shll
cs
push
in
dec
out
sbb
inc
mov
jbe
leave
mov
ret
aam
cmc
jl
nop
mov
sti
inc
paddw
add
sub
cwtl
jg
add
das
push
dec
cmpsl
ret
in
ds
movsl
push
and
pop
in
test
sbb
cmpsb
mov
repnz
movups
add
and
lcallw
jecxz
fldenv
pushf
sbb
mov
cmp
call
mov
cli
arpl
cli
mov
imul
int3
fnsave
fwait
push
cltd
mov
fnstsw
rcll
mov
adc
gs
and
push
in
sbb
in
dec
iret
and
loope
hlt
xor
fildll
rclb
mov
or
mov
add
push
inc
mov
xchg
cwtl
push
aas
and
into
mov
sbb
call
sbb
jmp
aad
loopne
orl
scas
push
xchg
dec
pxor
pop
jno
mov
sbb
rorb
push
lods
xor
add
xor
sbb
dec
push
rcrb
lea
push
dec
out
dec
jb
lret
test
leave
push
or
mov
popf
loop
jae
jp
sub
lods
in
xchg
push
mov
out
jbe
pushf
sbb
loop
int3
mov
sbbl
sbb
sti
and
andl
mov
mov
cmp
fs
insl
cmp
cmpsb
sbb
jno
jnp
push
jmp
rcll
mov
loopne
clc
mov
adc
scas
xchg
sub
mov
xchg
mov
sbb
inc
stos
je
icebp
and
fs
cmp
repz
mov
jp
movb
xchg
lods
out
fstps
inc
push
jo
xor
lods
jo
cmc
mov
push
aas
in
bound
cwtl
ss
shrb
shlb
jne
daa
xchg
mov
adc
jl
mov
push
rol
add
addl
cwtl
stos
sti
outsl
stos
lret
adc
ficomps
push
gs
jns
push
xchg
mov
mov
aas
inc
ret
add
ljmp
fsubr
xchg
test
or
mov
mov
test
jns
and
popa
inc
adc
in
dec
je
sbb
mov
fwait
jno
aaa
cmp
cli
pop
cmpsl
add
sub
testb
and
push
divl
je
jae
xor
or
repnz
mov
aad
inc
cmp
push
shlb
cli
pop
insl
cltd
pop
lds
sub
lea
or
bound
out
lret
lret
cmc
and
mov
iret
jno
and
inc
aas
aam
xchg
idivl
dec
popf
push
sub
data16
arpl
sbb
cmp
push
das
sub
dec
hlt
dec
sub
jle
std
dec
mov
adc
add
dec
mov
push
and
add
inc
push
addb
je
enter
inc
out
and
aad
xchg
or
imul
inc
xor
nop
dec
push
cmp
pop
pop
and
aas
cmp
dec
ds
mov
cld
jp
inc
lock
in
mov
pop
jne
clc
and
pop
out
or
call
fsubl
ljmp
aaa
loope
or
inc
je
add
dec
jle
mov
arpl
lds
xlat
icebp
pushf
lret
lea
pop
jmp
roll
pop
lcall
std
dec
imull
jb
stos
pop
add
pop
pop
repz
clc
sarb
mov
and
lods
imul
jl
jg
stos
jmp
mov
add
outsl
ss
and
arpl
sub
pop
mov
add
loope
adc
push
mov
and
mov
xor
lock
movsl
out
sub
sub
cmpsb
push
sub
jge
adc
js
and
add
aaa
mov
xchg
in
nop
and
aas
sahf
gs
clc
sub
idivb
test
jl
xchg
mov
lret
mov
jg
mov
jg
sub
mov
jb
adc
stc
cmpsl
sub
out
pop
fsubl
and
xchg
jb
inc
and
fs
fdiv
andl
sbbl
jmp
adc
out
mov
push
mov
jo
inc
xor
add
ljmp
xor
push
jle
das
test
scas
sbb
idivb
xor
jno
add
sbb
or
cmp
les
movsb
mov
adc
fidivrs
addr16
cltd
mov
dec
orb
in
aam
mov
sbb
jno
lcall
pop
ds
add
cmp
cld
out
loop,pn
push
stos
fcmove
adc
adc
sbb
jl
pop
shlb
mov
or
xchg
cmpsl
ret
adc
adc
repz
mov
aad
add
jmp
test
lret
xchg
jae
cmpsl
add
je
repnz
dec
jns
push
sbb
dec
lods
mov
fidivrl
mov
jno
das
cmp
push
daa
inc
jle
inc
in
push
mov
inc
sbb
mov
mov
rcrl
iret
adc
push
inc
pushf
mov
pop
and
lret
lret
les
lock
int3
faddp
xchg
sbb
xor
into
mov
neg
push
xchg
sarl
pop
cmp
fwait
sbb
mov
jnp
loop
iret
test
jae
mov
call
jno
leave
faddl
enter
rcrb
sar
jne
enter
fimuls
fiadds
adc
cmp
mov
aas
jle
jns
sub
addr16
cmpb
xchg
out
push
adc
bound
das
in
int3
bound
ror
sbb
pop
and
or
lret
notb
dec
xor
scas
clc
mov
repnz
add
adc
mov
jb
inc
jle
enter
add
bound
mov
cmpsl
sub
icebp
or
pop
dec
repnz
mov
cmp
ror
loop
add
pop
pushf
test
xchg
inc
aas
inc
les
inc
xor
xor
in
into
sub
xchg
mov
sbb
es
xor
jne
push
push
xor
cmpsb
je
mov
pop
pop
or
lret
xor
cld
cmp
xchg
mov
cmpsb
add
icebp
xchg
mov
daa
int
xor
cmp
out
out
mov
adc
push
sub
fwait
jae
repnz
decb
sbbb
mov
imull
sub
movsl
rorb
dec
fildll
aam
or
push
test
insl
fisttpl
into
or
xorb
jae
jo
jl
sarb
movsl
sub
aam
gs
testb
aaa
es
mov
inc
add
sub
push
int3
lods
adc
sbb
std
cmp
jp
out
inc
add
xor
je
leave
xchg
pop
inc
add
cmc
outsb
popa
mov
sarb
dec
mov
mov
orl
dec
jne
jg
outsl
xor
jle
jb
mov
xor
dec
les
iret
or
mov
call
mov
inc
call
xchg
mov
and
lcall
in
mov
and
fistpl
pop
add
les
scas
sarb
xlat
fcomps
roll
out
adc
inc
sbb
out
bound
jbe
fistps
in
sub
push
std
jne
add
cltd
or
mov
insl
push
jb
adc
adcl
out
cmp
loope
ss
testl
mov
iret
dec
cmp
and
adc
mov
mov
dec
into
scas
xor
and
adc
mov
cwtl
adc
push
push
add
ss
jae
xlat
xor
movsl
cmc
dec
xor
js
pop
jns
mov
push
mov
mov
xchg
pusha
xchg
popf
into
aam
adc
jne
pop
lahf
add
mov
insl
gs
out
push
gs
and
push
add
add
bound
pop
mov
xchg
inc
in
mov
xor
addb
pusha
sbb
aaa
adc
push
testl
mov
pop
sti
lods
lcall
inc
mov
xorb
push
call
test
or
mov
jne
sub
xor
test
pop
out
sbb
lcall
sub
addb
push
xchg
cli
mov
mov
jl
loope
fisubrl
adc
test
xor
popa
cmpsb
mov
fdivs
es
sti
and
repnz
iret
nop
std
dec
jg
dec
cli
enter
pop
stc
and
cltd
adc
fisubl
push
pop
lcall
pop
cmpsl
inc
cmpl
sub
aaa
shrb
jge
leave
aam
ret
mov
movsl
fistl
adc
loopne
add
jo
mov
and
sbb
adc
cmpsl
add
lods
push
mov
outsl
lcall
xchg
and
dec
iret
icebp
or
cmpsl
cmpsl
scas
and
push
fcoms
cwtl
jle
xchg
addr16
xor
lcall
xor
aaa
pop
xchg
cmp
dec
pop
ret
insb
mov
lret
sar
jbe
xor
popf
pop
sbbb
jb
xor
jg
sti
iret
lcall
pop
cmpsl
out
fistps
outsb
fnstcw
in
dec
cmp
out
lcall
repnz
lods
add
pop
bnd
sub
mov
xor
sahf
bnd
popl
mov
cmpsb
mov
adc
cmp
xchg
lea
xchg
xor
pop
sbb
pop
clc
ret
out
cmp
adc
xor
or
or
std
or
bound
pop
and
bound
cwtl
add
lahf
orl
xor
bound
iret
sahf
mov
push
das
lret
adc
in
mov
mov
ljmp
mov
loop
push
pushf
leave
jb
push
xchg
pop
or
cld
or
rcr
loope
pop
dec
lahf
pop
je
adcl
add
inc
push
imul
dec
int3
xchg
jae
out
xlat
and
jg
cmp
jns
adc
adc
stos
and
adcl
mov
xor
stos
fistpll
in
inc
push
stos
scas
jo
nop
fsubl
mov
xor
mov
push
jae
ret
imulb
bound
cmp
test
mov
dec
jg
cvtps2pd
popa
jns
movsb
xchg
popf
sbb
add
gs
pop
or
fadds
jecxz
push
movsl
sub
push
push
fdivl
inc
inc
in
outsl
jmp
sbb
cmpsl
enter
push
addr16
xchg
add
jmp
inc
add
int
sub
jne
fs
imul
out
lret
scas
jnp
push
add
pusha
or
adc
cmpb
shll
cmp
push
or
jne
ja
pushf
test
subb
sbb
xchg
out
rclb
clc
sub
shll
rolw
pop
xor
out
lods
ljmp
filds
pop
cmp
mov
daa
sbb
idiv
pop
xor
mov
sbb
xchg
cmp
cs
fidivrl
or
push
popf
sbb
cmp
and
stos
cld
dec
shll
pop
jg
lcall
subl
jnp
sbb
jo
je
sbbl
popf
sar
push
pop
mulb
cld
ffree
sub
out
sub
mov
sub
fcom
mov
movsb
and
rcll
ds
mov
rclb
push
enter
add
jae
cld
and
ss
and
data16
jae
shl
and
loop
xchg
es
mov
fmuls
push
sti
sbb
push
ror
enter
aad
adc
out
test
cmp
in
jbe
pop
cmp
lods
dec
in
into
je
and
in
call
cs
cmp
fwait
sbb
cltd
bound
lret
lods
loope
inc
mov
xlat
data16
daa
push
lock
ss
popf
and
xor
jl
arpl
mov
les
in
pusha
stos
dec
dec
push
lcall
mov
lcall
mov
adc
adc
out
test
aaa
sbb
insb
mov
inc
xchg
push
ds
ret
cmpsl
mov
dec
in
add
cmpsb
rclb
xor
outsb
mov
test
mov
push
dec
test
loop
push
inc
lret
and
mov
cmp
jo
mov
adc
inc
popa
call
lcall
mov
adc
mov
or
nop
rolb
mov
add
inc
mov
or
insb
ljmp
outsl
sbb
pop
pop
outsl
jns
adc
cmc
popf
mov
push
les
jne
mov
push
sub
push
xchg
xchg
outsl
rorl
rorb
cmpsl
xor
mov
pop
in
nop
push
mov
in
adc
out
ss
imul
repnz
cmp
xchg
pop
add
insl
jp
adc
cwtl
outsb
add
jnp
xor
or
out
jbe
loop
dec
inc
add
jmp
xchg
les
mov
dec
cmp
addr16
lds
jp
repnz
nop
xor
push
fistpl
out
shll
aas
dec
cbtw
mov
daa
adc
fistl
push
sbbb
sbb
sub
add
xor
fs
es
or
scas
decl
xchg
ret
cmp
jb
jmp
jno
add
jne
cltd
inc
popa
aas
or
and
xchg
sbb
adc
xchg
inc
inc
jne
mov
or
sub
lcall
aam
mov
add
mov
mov
mulb
sub
rorl
out
ret
and
stos
mov
pop
insb
jns
mov
ljmp
cmp
ret
and
sahf
mov
jne
loopne
jmp
out
or
std
inc
push
lds
and
pop
adc
cli
arpl
enter
inc
dec
pop
and
cmpsb
or
jo
mov
jmp
jle
aas
pusha
shrl
and
lret
lret
stos
dec
add
dec
std
int3
push
ret
movsb
pop
repz
outsb
icebp
mov
push
fsub
mov
pop
mov
imul
mov
inc
mov
das
adc
push
stos
pop
push
je
shlb
imul
add
and
nop
dec
lahf
push
sbb
jnp
lock
sbb
negb
sti
daa
dec
mov
pop
dec
cmc
xor
pop
push
in
adc
test
add
bound
sbb
dec
mov
or
dec
shll
stos
inc
cwtl
hlt
push
dec
push
pop
push
xchg
sbb
mov
jo
insb
add
enter
outsb
mov
mov
loopne
pushf
mov
jne
das
sub
bound
cwtl
pop
push
add
imul
sbb
int3
insb
mov
sbb
cmc
mov
xor
cmp
xchg
popf
hlt
and
xorl
add
adc
inc
xor
pop
sub
fsubrp
loope
inc
push
xor
mov
test
inc
insb
add
adc
pusha
int3
sub
movsb
mov
xchg
popf
gs
rcrl
movsb
rcll
rcll
movsl
mul
fwait
dec
jno
movsl
add
add
cmp
mov
add
inc
pop
hlt
inc
jo
cltd
lret
repz
lea
cmp
mov
pop
stos
fldenv
iret
xor
push
fists
add
jne
and
xor
fdivrs
in
xchg
inc
pop
inc
movsl
pusha
cmpsb
loop
iret
mov
cmove
push
shlb
sti
aad
mov
call
push
or
insb
lret
pop
mov
std
dec
xchg
pop
and
jp
mov
mov
hlt
push
adc
pop
pop
mov
es
push
ds
lock
lods
faddl
sub
rclb
lret
test
xor
insl
and
lods
inc
or
cltd
pop
jmp
mov
imul
inc
jl
idivb
sub
mov
and
cmpsl
lret
ljmp
fs
add
mov
and
xchg
sti
push
xchg
add
leave
xlat
test
iret
lds
in
inc
mov
xchg
inc
xchg
push
fwait
cmpsb
fisttpl
xor
mov
mov
mov
or
in
test
outsb
sti
mov
stos
ret
in
inc
xlat
fsts
or
aaa
aad
or
lcall
test
push
pop
add
add
inc
jg
scas
cmp
pop
mov
inc
pop
sti
pop
dec
pusha
call
pop
lret
dec
cmc
addl
or
fwait
ret
mov
pop
ljmp
or
std
sub
push
dec
sub
jo
mulps
or
jnp
cs
jns
in
lret
inc
outsb
jae
inc
movsb
sti
in
out
repnz
mov
js
test
nop
xor
jo
pushf
notl
push
loope
dec
xchg
leave
and
je
or
pop
shlb
inc
cmp
test
pop
jns
jmp
loopne
lds
push
lods
outsl
push
mov
enter
push
jo
xchg
sbb
pushf
dec
xchg
mov
cmp
xor
fsts
lret
pop
fistps
push
out
add
outsb
mov
or
sbb
negl
mov
in
sti
mov
enter
fcoms
js
out
ljmp
dec
dec
leave
jp
std
and
lock
jo
movsb
cwtl
cli
dec
jge
lea
sbb
dec
inc
jp
jg
jns
push
sub
mov
pusha
lds
fs
mov
lock
mov
fistpl
fidivrl
mov
lds
mov
shlb
lds
cmpsb
and
insb
xchg
pop
adc
icebp
mov
xor
repz
mov
enter
js
add
movsl
and
cmpl
leave
cld
imul
stos
xor
lds
mov
lret
xchg
pop
es
mov
push
sbb
loop
xchg
pop
fstl
mov
shlb
aas
push
mov
fcmovbe
fadds
and
jo
pop
xchg
adc
add
fistps
das
and
inc
flds
cmp
repnz
adc
mov
imul
aad
shlb
imul
pop
and
ja
push
ds
lret
mov
adc
data16
repnz
aad
jmp
mov
loop
cmp
js
arpl
mov
lret
loopne
icebp
push
jl
add
mov
xchg
add
push
pop
stos
loopw
push
pop
stos
fwait
out
push
jg
bound
movsl
int3
inc
std
pop
cld
das
stos
cmpsl
pop
ja
push
pop
sub
push
jbe
cmpsb
sbb
out
test
sub
mov
mov
push
repz
test
imul
rcrb
imul
pop
push
loop
sbb
push
cltd
std
fcos
xchg
std
add
imul
dec
scas
cwtl
push
insl
imul
mov
out
pop
mov
jmp
push
fstpl
add
pop
enter
mov
push
mov
xchg
dec
mov
lock
arpl
jmp
lret
repnz
sub
outsl
sbb
addr16
adc
jl
dec
clc
shlb
mov
rcrb
inc
cmp
js
cmp
pushf
and
lock
pop
add
sub
and
into
jle
inc
inc
movsb
mov
shl
add
add
cwtl
pop
xchg
dec
mov
xchg
sbb
pop
shrl
ljmp
add
push
mov
outsl
aam
and
lea
push
push
mov
js
fcomp
mov
push
jecxz
sub
cltd
sub
call
mov
ret
mov
orl
mov
push
into
jg
lock
jmp
shrl
inc
cld
out
mov
div
adc
sbb
xchg
mov
push
push
test
sbb
cmc
leave
fiaddl
inc
add
cld
movsl
imul
sub
xchg
cmp
ja
shlb
mov
or
es
mov
rcll
aas
adc
imul
inc
add
lret
xchg
movsb
shlb
and
push
pop
push
stos
sbb
ret
sub
cmc
cltd
sub
push
pop
push
pop
xchg
fwait
gs
push
or
adc
jne
sahf
add
lods
into
stos
pop
xchg
loopne
in
add
push
inc
or
shrl
adc
pop
mov
addr16
pushf
push
add
xor
push
push
sub
out
xchg
or
ja
inc
jmp
mov
sti
sub
mov
pop
push
mov
jle
xchg
inc
and
cltd
repz
fadd
repnz
out
cmpsl
std
mov
insb
scas
push
in
je
adc
jae
leave
imul
les
repz
ss
fildll
cmpsl
stos
pop
int3
xor
push
repz
xlat
push
lcall
pop
mov
jno
jp
mov
sarb
or
cmc
shrb
and
and
sbb
in
lret
andl
fldl
sub
pop
pop
sbb
mov
mov
pop
sub
mov
fldl
outsb
add
hlt
dec
stc
scas
out
push
mov
cmp
movsb
xor
data16
int3
lods
andl
xchg
sub
adc
and
lds
fcomi
cmp
leave
jecxz
ret
jno
popf
jge
int
sub
dec
dec
pop
mov
test
sub
in
add
push
pop
mov
push
lods
pop
jno
add
cmpb
jno
cmp
lock
stc
mov
xor
xor
icebp
loop
inc
imul
mov
mov
push
mov
movsl
pop
cmp
pushl
dec
cmp
fld
mov
dec
push
das
addr16
cmp
ficoml
leave
ss
inc
sbb
loope
aaa
pop
movsb
xchg
dec
popl
or
push
push
mov
enter
mov
xchg
cli
cmpsl
sbb
or
sbb
mov
xchg
jg
xchg
jno
dec
jo
jl
sbb
addr16
pop
aas
sahf
das
dec
mov
inc
test
inc
sub
test
xchg
adc
inc
fidivl
mov
cmp
inc
lret
cmp
and
sub
scas
inc
mov
mov
fst
jb
mov
fdivrs
mov
sbb
sbb
or
jno
and
mov
popa
pop
mov
repnz
or
outsb
jnp
subl
mov
inc
xor
jns
and
icebp
pcmpeqd
leave
rcrl
cmp
xchg
mov
cmp
lods
in
add
sti
xchg
jmp
lds
call
cmp
in
mov
addr16
scas
in
mov
test
popf
bound
or
movsl
lret
mov
mov
mov
adc
push
jnp
push
in
pop
push
filds
add
and
xor
xlat
ja
mov
mov
subb
loopne
cmp
pop
jae
aam
clc
mov
add
daa
pop
pop
mov
cmpsl
push
negl
imul
xchg
lret
test
mov
out
outsb
test
lcall
and
pop
cmp
and
les
mov
lret
dec
adc
ret
enter
and
test
and
cmpb
in
pop
sahf
daa
sub
push
stos
mov
xor
mov
sub
insl
insb
outsl
pop
lock
nop
inc
lcall
lds
dec
xlat
xor
lahf
ret
jle
jp
mov
mov
repz
adc
cltd
mov
push
subl
scas
fs
cmp
push
inc
cmp
adc
mov
clc
xor
sub
loopne
scas
mov
mov
fstps
pop
fldl
fwait
js
mov
and
adc
fisttpll
and
push
and
or
add
jae
pop
mov
mov
fidivrs
es
sti
es
jle
int3
repz
push
pop
mov
sub
repnz
inc
lahf
notl
loopne
and
fldt
mov
dec
stos
scas
jne
inc
fsubs
ljmp
mov
cmc
in
inc
insl
adc
into
jno
adc
mov
dec
mov
add
rcl
push
fidivrl
xor
dec
inc
nop
sub
int
out
bound
ja
das
cmp
xor
iret
push
addr16
iret
lds
cmpsb
or
popf
fstl
in
jo
xchg
scas
rcr
aad
or
dec
cmp
xchg
pop
clc
rorb
or
enter
lcall
clc
imul
jmp
jge
mov
sti
cs
cmp
lcall
push
cmpsb
jb
test
arpl
cld
or
daa
xor
xlat
and
shrb
xor
cmp
rcrb
mov
lret
mov
cmp
in
mov
ret
xor
cmp
xchg
push
int3
mov
jns
push
fiaddl
hlt
cmp
enter
mov
movsl
bound
jne
rclb
test
fildl
and
loope
sbb
dec
aad
dec
jle
fs
dec
inc
iret
inc
mov
cmp
xor
imul
push
add
mov
imul
xchg
or
jecxz
jns
cmp
xchg
jmp
dec
test
shl
rolb
cmp
test
fwait
cmp
shrl
mov
mov
xchg
dec
xor
sbb
sbb
xor
cmpsb
aas
dec
and
xchg
popl
loope
mov
mov
dec
fmull
inc
mov
mov
aam
ljmp
xor
pop
mov
fstl
jg
cmp
sbb
rcll
dec
inc
or
dec
fdivrl
or
inc
mov
adc
jle,pt
leave
out
push
dec
push
in
mov
push
jl
xor
jmp
rorl
pop
lock
jp
test
mov
sub
loop
dec
test
adc
push
pop
repz
push
movsb
jo
dec
ror
cmp
fcom
stos
ja
cwtl
in
xchg
iret
icebp
jbe
push
push
arpl
jns
sbbb
and
jecxz
jae
nop
pop
jge
xchg
ds
or
mov
jne
cld
dec
sub
lea
push
jbe
add
cmp
cmp
jl
mov
push
lock
dec
jmp
push
cltd
mov
or
and
jg
stos
pop
sbb
xchg
lods
and
sahf
jnp
fucomi
jns
mov
xchg
repnz
adc
ja
mov
cmp
cmpsb
rcrl
rorl
cwtl
and
clc
in
inc
stc
orb
stc
pop
in
cmpsb
xor
pop
xchg
scas
subb
sbb
inc
inc
jbe
loopne
subb
leave
push
es
sub
mov
bound
push
add
shr
in
xor
xchg
std
lods
pushf
imul
sub
cli
call
sbb
dec
lret
stos
jle
add
outsl
jg
repnz
and
mov
adc
mov
pusha
sarl
xchg
test
push
shr
xchg
jns
shrb
and
adc
sti
stc
in
xchg
bound
mov
xor
das
and
call
test
ds
xchg
shll
fstp
sub
or
leave
arpl
cmp
negl
outsl
loope
inc
pop
push
je
mov
push
cs
loope
add
cmp
add
sbb
push
push
sub
popa
push
add
mov
test
int
xchg
bound
pop
cmp
lret
nop
xchg
mov
cmpsl
stos
sbb
mov
jmp
out
xorb
addr16
push
cld
adc
mov
mov
push
in
popf
push
cwtl
cmp
outsb
test
xor
jecxz
filds
sbb
ret
ret
mov
add
cmc
rcrb
jo
popa
xchg
cltd
inc
test
ja
jg
rorb
sub
xlat
cmp
mov
mov
adc
or
das
rcl
aad
loope
adc
pop
jge
xchg
inc
ret
fcoml
idivl
xor
xchg
aas
sub
inc
or
in
pop
mov
mov
mov
mov
inc
pusha
mov
add
cmp
push
enter
movsb
or
pop
sub
out
xor
pop
inc
aad
cmp
orb
dec
popa
cmpl
add
in
mov
subl
adc
call
mov
lcall
gs
and
in
int3
data16
roll
aaa
jp
loopne
test
nop
sub
scas
stos
mov
xchg
push
xchg
sbb
xchg
cld
ja
cmc
out
insb
cld
sub
mov
sar
inc
mov
mov
das
cmp
mov
enter
popf
add
psubsw
xlat
in
bnd
push
iret
cmpsb
mov
dec
pop
xor
out
loopne
das
mov
mov
shll
xor
int3
xchg
xor
mov
sub
shlb
sub
fldenv
sub
ret
stos
jmp
nop
dec
stos
sub
xchg
popa
push
xlat
les
sti
xchg
adc
shl
arpl
lret
fisttpll
sti
scas
sub
scas
add
cmc
xor
stc
cmpsb
outsb
push
adc
js
dec
push
inc
dec
ret
xor
loopne
add
dec
cmp
and
subb
lret
jb
sub
sub
gs
jb
stos
mov
ret
lods
arpl
lods
icebp
and
pop
imul
and
mov
outsl
inc
cmp
xchg
int
loop
sub
add
push
mov
cld
add
filds
cmpsb
lret
xchg
and
mov
sti
sbb
jae
mov
sub
loopne
sub
sub
dec
sbb
lahf
mov
mov
cmpsb
or
aad
mov
mov
jb
add
inc
cmp
and
cmpsl
xor
aaa
subb
and
sbb
test
popf
cltd
fwait
adc
mov
xor
xchg
dec
xchg
jb
xchg
aaa
push
hlt
adc
cmc
mov
pop
add
jnp
popf
in
lcall
jno
test
push
repnz
mov
in
mov
mov
loope
cmc
hlt
xor
lock
out
cmc
loop
js
fildl
ds
insb
pop
pop
xchg
cmp
jns
cmpsl
cld
nop
or
or
xchg
cmpsl
sbb
in
mov
jb
xchg
push
push
imul
sti
test
pop
lods
mov
or
jmp
mov
inc
mov
negl
les
outsl
pop
mov
or
sub
sbb
pusha
push
sbb
popa
insl
or
adc
outsl
inc
stos
jae
mov
mov
mov
push
sub
add
imulb
daa
test
outsb
cmc
fsubl
stos
ficoms
push
shlb
ret
mov
xchg
push
xchg
push
daa
scas
repz
adc
dec
popf
loope
sub
cmp
adc
aaa
mov
aad
inc
decl
mov
pop
es
jp
jg
push
ret
xchg
adc
fnstenv
scas
cmp
in
mov
mov
std
fcompl
or
fs
lods
and
push
pop
rorb
dec
sub
ret
xchg
ret
faddp
imul
and
cmp
inc
sbbb
outsb
inc
sub
add
xor
ret
data16
jg
vshufps
idiv
shrb
jno
and
std
aam
mov
ljmp
jl
xchg
inc
loope
adc
adc
inc
mov
dec
dec
sub
mov
repz
outsl
lods
dec
shld
lahf
lds
mov
pop
jb
icebp
arpl
sub
ret
xchg
or
movsl
add
cmp
pusha
jecxz
mov
xchg
xchg
xorb
push
inc
lods
imul
mov
inc
sub
mov
aam
jmp
mov
pushf
mov
mov
lods
and
leave
inc
gs
fstpl
lock
mov
pop
pop
push
icebp
pop
xchg
xchg
mov
cmp
std
push
hlt
adc
jecxz
adc
xor
in
mov
jo
inc
push
loopne
dec
out
or
push
sahf
clc
insl
xchg
int3
xor
ja
jmp
andl
test
mov
adc
rcrb
pop
sbb
into
inc
mov
pusha
jno
popf
inc
cmc
adc
stos
js
or
mov
pop
adc
dec
adc
mov
fwait
pop
cmp
stc
cmp
sbb
cltd
xchg
jl
add
stos
fdivrl
or
mov
dec
addr16
push
popa
out
cmc
jae
jg
xchg
push
pop
xchg
int
mov
lea
mov
stc
in
enter
jp
inc
cld
lret
mov
gs
mov
repz
in
and
jns
cmp
test
pop
mov
jecxz
jmp
lret
adc
iret
in
mov
mov
lock
cmpsb
inc
inc
es
mov
out
mov
cmp
mov
dec
insl
pop
es
push
add
xlat
cmp
movsl
jge
rorl
mov
cmpsb
dec
sub
repz
ret
mov
out
inc
mov
or
xor
call
xchg
fistpl
mov
xor
xor
lds
jle
cmpsl
out
add
out
fisubrl
push
test
xor
mov
push
out
loopne
in
dec
push
xor
cmp
ja
mov
jg
sbb
popa
inc
mov
jbe
fbld
cmpsl
test
rolb
data16
daa
pop
pusha
sbb
xor
mov
icebp
andl
je
push
cmp
adc
cli
lods
inc
sub
add
jl
dec
mov
xor
jp
in
mov
aad
add
pop
adc
and
or
mov
sti
fdivl
add
test
push
in
xchg
push
int3
cmp
in
adc
dec
or
adc
ds
mov
ja
mov
mov
mov
sahf
cmc
test
es
pop
rcl
mov
sub
and
je
popa
add
push
lcall
jecxz
mull
xchg
cmp
xchg
push
dec
lret
inc
not
inc
mov
ja
add
lahf
cmp
xchg
test
pop
fidivs
cmp
shll
les
push
roll
xor
lock
gs
data16
or
adc
dec
scas
inc
andb
gs
jp
or
movsb
ja
push
in
xchg
into
cmp
aaa
push
xor
mov
fxam
push
and
pop
lret
or
daa
push
add
std
js
insb
inc
jnp
lahf
adc
aas
aas
xor
adcl
arpl
in
divl
pop
jbe
cmp
sub
dec
inc
pop
popa
hlt
or
sahf
mov
sbbl
cmp
pop
ljmp
xlat
lods
and
jns
adc
xorl
orl
les
xor
cmpsb
loop
mov
mov
mov
cltd
insb
in
xchg
mov
iret
fimull
dec
movl
ret
push
xlat
xor
jle
push
sbb
ret
enter
notb
pop
cld
popa
pop
jge
push
out
les
or
dec
aaa
outsl
int3
jbe
sub
sbb
out
adc
lahf
mov
pushf
xor
mov
sub
std
cmc
jecxz
or
dec
mov
shr
ficomps
hlt
into
sti
adc
out
add
sbb
cmp
stos
jmp
mov
jns
and
faddl
lea
mov
mov
pop
ret
adc
push
ds
and
fidivrl
ljmp
shrl
arpl
scas
call
rorb
ss
inc
into
sbb
lock
in
stos
pop
aaa
leave
adcb
cld
ds
roll
enter
bound
jo
push
cmp
insb
jecxz
int
mov
jecxz
popw
in
jge
mov
mov
mov
shll
imul
adc
jno
dec
sbb
xor
mov
mov
mov
fs
pop
in
into
fwait
idivb
xchg
cmp
xchg
sahf
or
add
push
push
into
pop
mov
cli
xchg
clc
mov
psrad
imul
enter
xchg
mov
sti
push
test
scas
aas
cmc
shll
aas
into
stc
mull
mov
jge
addr16
and
pop
mov
stos
push
lret
or
lock
fistps
add
insb
xor
nop
xchg
jge
clc
jo
test
dec
lods
and
pusha
imul
shrb
or
shlb
add
jae
xchg
or
pop
jae
inc
es
fsubrl
cmp
jae
in
jns
sarb
lods
dec
inc
mov
mov
inc
shll
dec
daa
int3
jge
shr
gs
jnp
pop
xlat
sub
jge
mov
insl
push
addl
mov
sub
fsubr
sbb
scas
jnp
mov
stos
out
in
dec
push
lods
fadd
push
js
or
aad
jp
jbe
sbb
sub
gs
jmp
cmp
repnz
movsb
pop
ror
sbb
jecxz
ds
cmp
in
outsb
mov
sbb
push
add
pop
or
pop
push
pop
mov
ret
sub
lahf
xor
xlat
and
fucomip
div
or
stos
inc
mov
push
pop
and
dec
lds
aaa
jmp
inc
lea
repz
mov
and
adc
rolb
inc
xchg
fwait
and
movl
xlat
arpl
xchg
or
sub
jb
sar
pop
mov
push
sbb
icebp
xor
inc
push
lea
clc
dec
adc
mov
jle
dec
out
scas
or
pop
mov
xchg
cmp
int3
xchg
not
roll
mov
inc
clc
scas
push
outsl
mov
xchg
stc
int3
decl
sahf
xchg
shl
in
inc
inc
stc
and
cmpsl
mov
or
pop
add
pop
sete
xchg
loop
outsb
shll
adc
cmp
bound
stc
lret
mov
out
push
out
push
push
test
mov
jo
add
jbe
inc
add
adc
popa
clc
lods
xchg
push
sarl
jmp
ss
cld
out
jle
jae
xorb
out
out
fnsave
jle
pop
xor
adc
jne
sub
scas
test
push
inc
dec
jb
pop
stc
hlt
inc
icebp
mov
jl
cwtl
xchg
sbb
dec
mov
mov
int
mov
test
dec
adc
scas
inc
mov
aas
lds
dec
jecxz
enter
pusha
inc
frstor
pop
xchg
and
xor
sub
mov
lods
dec
inc
movsb
xor
mov
loopne
rolb
jp
popf
bound
ret
ds
pop
add
test
shll
mov
push
dec
loopne
cmp
mov
jno
or
std
push
sub
and
out
push
testl
xor
push
pop
popf
lret
add
addl
xchg
in
mov
pop
sub
int3
xchg
mov
pop
adc
pop
test
pushf
and
fdivl
pop
mov
punpckldq
mov
std
push
mov
pop
cmp
repnz
mov
insb
jmp
pop
dec
out
add
push
xchg
sub
mov
and
pusha
cmp
lock
cmp
xchg
inc
decl
cmp
rcrl
sbb
dec
inc
and
stos
ret
dec
jmp
xor
std
popa
jecxz
xorl
bound
lret
dec
adc
sub
in
aam
adc
push
cmp
bound
stos
mov
xchg
or
daa
xchg
orl
or
or
xchg
push
xchg
xlat
clc
outsb
cmp
loopne
cmp
cmp
adc
inc
daa
inc
cld
out
add
stos
lret
xchg
sahf
nop
xchg
notl
sbb
adc
shll
push
or
pushf
jg
push
sub
adc
jl
push
inc
mov
pop
aad
out
mov
cmp
lahf
inc
adc
inc
xchg
sbb
xor
lods
mov
nop
add
cld
or
imul
cmp
adcl
lds
pushf
or
outsl
mov
in
lahf
imul
ss
or
dec
mov
stos
jnp
roll
loopne
xor
loop
repnz
xchg
fldt
outsb
mov
out
aas
call
jle
jecxz
ret
into
pop
pop
mov
jb
dec
xor
inc
mov
ja
dec
push
mov
jl
mov
les
fs
jnp
push
hlt
sbb
and
or
addr16
push
adc
cmp
aam
cmc
jbe
jp
and
mov
pop
dec
int
shlb
mov
iret
mov
fs
lods
cmc
ss
pop
gs
int
lcall
inc
or
fstpt
jb
sub
jp
shrb
xchg
dec
popf
mov
add
inc
and
int3
mov
addr16
in
push
adc
movsl
out
jnp
inc
cmpsb
dec
addr16
fs
lahf
push
xlat
inc
call
in
xor
outsb
imul
loop
sbb
jne
mov
jle
push
outsb
sahf
xchg
scas
jecxz
cwtl
or
aas
sub
add
lock
cmpsl
sub
and
outsl
push
add
jecxz
je
imul
mov
dec
mov
stc
or
mov
push
dec
subb
push
mov
aaa
scas
or
mov
fcomip
mov
jge
add
xchg
arpl
sub
outsl
cli
nop
cld
shlb
push
js
xor
or
in
ss
push
mov
jne
sbb
clc
mov
jmp
rorb
mov
adc
dec
out
xchg
movsl
and
pop
clc
or
test
in
fstl
data16
xor
out
pop
and
push
mov
ss
stos
outsl
xor
dec
adc
mov
negl
ficoms
call
xor
push
test
mov
pushf
lahf
dec
jl
rcll
pop
push
xorl
push
inc
fistl
mov
pop
test
xor
jp
jg
roll
idivb
jne
ficoms
clc
xchg
mov
fs
cmpsb
repnz
or
pop
mov
mov
and
in
sub
mov
cld
rclb
hlt
adc
mov
and
shr
iret
inc
cld
aaa
movsb
inc
imul
cmpsl
xchg
popa
dec
mov
mov
mov
and
xor
je
cmp
out
dec
jp
stos
inc
xchg
pushf
outsl
sbb
adc
jle
gs
sub
rclb
std
aad
mov
xchg
bound
inc
arpl
jp
out
outsl
cmp
inc
adcb
pusha
push
stc
cmp
movsb
rorl
into
xchg
push
scas
std
push
inc
xchg
pop
hlt
jmp
cmp
mov
sbb
add
adc
repz
imul
mov
jne
jg
jbe
mov
add
inc
cs
inc
mov
push
pop
rorb
sti
cld
push
stos
add
mov
fstpt
test
mov
popf
notb
mov
and
adc
jb
aaa
add
in
adc
jge
xor
leave
pop
sub
sub
dec
loop
pop
cmp
ret
xor
lea
in
push
dec
dec
out
pop
or
lods
or
dec
sarl
add
and
sub
lods
int
jnp
test
cs
jae
clc
imul
mov
dec
shlb
mov
out
fcoml
jecxz
cmp
movsb
ret
nop
stc
ja
push
pop
mov
adc
jge
fstl
iret
lods
jae
xor
sbb
jge
shll
xchg
in
adc
movsl
pushf
rolb
lret
leave
pop
jne
sbbb
mov
aas
xor
xchg
add
add
cmp
movsb
push
icebp
or
cltd
mov
sub
sub
ds
mov
or
loop
push
mov
sub
cmp
stc
fsts
jl
push
test
cwtl
mov
cmp
mov
xchg
in
xchg
add
jne
dec
push
lock
ret
mov
sbbb
mov
sahf
pop
flds
xor
pop
ds
mov
gs
jle
cltd
fldl
xor
movsb
adc
repnz
shl
pop
notb
sti
ret
mov
fwait
shll
enter
in
insl
popa
fdivrl
xchg
lahf
aam
push
push
aad
out
push
jmp
cmp
and
mov
rcrl
int
pop
cwtl
shrl
xchg
and
jle
pop
and
in
sar
test
cmp
lea
sarb
imul
mov
push
and
movb
push
fcomps
push
addr16
out
adc
fisubrl
sbb
negb
pushf
aas
sub
js
and
jnp
bound
out
cmp
gs
push
jp
iret
add
lret
enter
stos
pop
or
cmp
pop
cmp
lcall
jns
pusha
hlt
test
jbe
pop
andb
subb
sub
mov
cmp
sti
mov
sub
or
xor
jno
lcall
add
jns
lret
ss
ret
aad
adc
and
jecxz
outsb
mov
push
pop
pop
enter
int
loop
sub
dec
jmp
or
pop
add
movsl
xchg
jg
rdpmc
out
je
mov
push
sub
pop
lds
mov
imull
jl
clc
jb
push
adc
or
test
add
and
pop
leave
cmp
mov
xor
xchg
dec
out
and
jmp
out
pop
arpl
cmc
pushf
push
mov
xchg
dec
sub
scas
xchg
mov
adc
out
clc
jle
and
scas
add
ljmp
push
loopne
push
pop
jp
popf
sbb
in
outsb
scas
inc
mov
shll
loopne
punpckhwd
loope
pxor
adcl
mov
mov
into
xchg
dec
ds
push
sbb
lds
ffreep
and
fs
add
push
mov
insl
ret
das
repnz
sbb
pushf
daa
fstps
sahf
cli
pop
mov
mov
clc
pop
cld
pop
or
addb
ds
sbb
data16
cmc
pop
xor
xchg
pop
pushf
add
push
pusha
call
arpl
push
dec
in
add
dec
mov
cld
test
adc
stos
mov
lea
lahf
sbb
es
inc
gs
fidivrl
sbb
inc
sub
sub
fstpt
mov
arpl
pop
adc
mov
leave
aas
xchg
jb
xchg
or
add
outsb
stc
lods
push
ds
push
fwait
mov
inc
arpl
les
pop
shll
test
ljmp
push
das
push
and
cmpsl
or
sub
outsb
mov
aad
fs
push
mov
mov
cld
mov
xchg
jle
cltd
jo
sub
ds
out
jmp
ja
inc
fwait
cmp
push
jns
outsl
rcrl
mull
xchg
inc
insl
jl
insb
mov
pushl
pop
xor
fs
and
add
dec
jae
sub
fisttpll
test
fdivr
lods
scas
jnp
lods
push
push
dec
les
mov
jmp
mov
inc
pop
ret
mov
imul
xchg
sub
mov
pushf
adc
test
lcall
scas
test
xchg
and
pop
dec
cld
dec
and
clc
mov
insl
fnsave
aas
sbb
test
push
sbb
pop
xor
or
mov
and
and
inc
aas
je
cli
lahf
and
fdivrp
and
lea
fildll
fiadds
push
cmc
leave
imul
or
push
mov
ds
rclb
test
inc
push
imul
dec
mov
les
repz
leave
pop
mov
outsl
jbe
inc
rcll
xor
inc
mov
push
mov
inc
push
push
mov
stos
jg
xlat
adc
pop
repnz
pop
xchg
mov
or
dec
shll
xchg
mov
stos
pop
orb
or
fiaddl
outsl
sub
sti
cmp
add
test
cld
repz
cmp
mov
mov
inc
xlat
jbe
ret
lahf
js
movsb
inc
push
fwait
je
mov
or
inc
xchg
in
aam
movsl
jae
mov
orb
fidivrs
push
cmp
fwait
js
mov
cmp
sbb
mov
iret
or
lods
cmp
pop
and
fcoml
mov
pusha
pusha
mov
popa
cmc
cmc
fcomi
daa
imulb
loopne
jmp
test
xor
adcb
sbb
sub
jecxz
notl
fwait
dec
pop
xor
xchg
mov
orl
xor
dec
dec
insl
lcall
testl
shl
bound
pop
sub
inc
shr
sarl
pop
jnp
jmp
jne
xchg
xor
mov
add
int3
ss
cli
cltd
adc
xlat
rcrb
push
xchg
sbb
shrl
mov
icebp
jmp
mov
cmp
lea
lods
lcall
mov
daa
xorl
stc
push
jbe
sbb
xlat
adc
sbb
or
xchg
test
mov
sahf
insb
andb
and
inc
js
mov
into
lcall
inc
inc
loop
or
test
pop
lods
and
xchg
arpl
jns
xor
fistpll
out
loopne
push
jge
sahf
mov
movsl
or
cmc
loop
ljmp
leave
addr16
push
neg
push
add
push
les
inc
into
ljmp
jb
mov
pop
stos
inc
xchg
cmpsl
lret
xorb
aad
lcall
jo
adc
shll
sub
sbb
seta
dec
subl
stos
xchg
fwait
push
icebp
adc
movsb
cmc
lock
and
ret
add
ds
push
scas
and
loopw
cs
mov
cmpl
ret
add
xchg
mov
jo
push
and
sbb
shrw
stos
in
shll
sahf
xlat
mov
daa
std
adc
cli
mov
stc
hlt
pop
pop
leave
iret
sbb
pusha
subb
gs
jbe
cmc
leave
push
jl
lds
push
push
or
inc
ds
scas
jecxz
mov
cwtl
and
adc
js
dec
mov
dec
mov
mov
and
jb
jns
cli
adc
nop
loopne
gs
aam
add
cmpsl
nop
nop
lods
in
cmpsw
add
push
push
mov
push
or
fs
or
mov
xchg
loop
retw
xchg
aas
cmpsl
xor
jg
cld
pushl
cmp
mov
sbb
cmp
mov
fsubs
push
pop
and
fsts
ret
insb
popa
push
add
ret
clc
xor
outsb
outsb
pop
xchg
jnp
inc
and
imul
aaa
mov
pop
cmp
out
xchg
and
pop
push
mov
cltd
ljmp
std
mov
cmc
mov
adc
lret
lods
addr16
je
fwait
pop
inc
mov
add
call
inc
xchg
jecxz
incl
enter
orb
fisttps
pusha
jl
lds
jae
les
insb
xor
lods
add
ret
push
cld
movsl
ja
dec
inc
pop
xor
jp
pop
jne
jnp
mov
or
adc
cmp
push
jle
mov
movsb
hlt
cmp
test
add
xor
sub
out
out
andl
add
pop
cli
punpcklwd
adc
lods
and
xchg
shrb
sub
push
fnstcw
aam
out
imul
fs
inc
in
push
inc
jle
nop
mov
fsubs
gs
ret
decl
or
dec
inc
cmp
adc
jge
bound
stos
mulb
jno
int
ficoml
test
adc
dec
addl
adc
pusha
fistpl
pop
cmp
repz
ret
or
into
jae
xor
fstpl
xchg
out
les
pmaxub
icebp
das
stos
adc
in
jecxz
fsubrp
xor
daa
xor
ret
dec
jbe
mov
pop
testb
imul
pop
sub
aaa
mov
subb
and
js
cmp
xchg
out
jmp
add
push
andl
pop
inc
pop
mov
add
outsl
das
scas
repnz
mov
mov
loop
scas
dec
mov
mov
ficoms
and
or
pop
jno
push
inc
scas
jns
loope
mov
orb
fistl
inc
scas
or
lahf
clc
adc
pop
mov
and
idiv
mov
cmc
adc
cmpsl
lds
cltd
repnz
les
cmpsl
fs
cli
xchg
subl
xchg
test
pushf
clc
or
outsl
sbb
mov
cmpb
test
fs
push
mov
in
cmc
add
lahf
jg
and
mov
cmp
jge
pusha
int3
mov
sub
js
out
lahf
pop
pop
pushf
jbe
imul
push
mov
xchg
stos
imul
jns
add
xor
out
mov
xchg
xor
push
add
mov
insl
pop
sub
inc
pop
fmull
mov
xchg
adc
int
fxch
mov
rclb
hlt
scas
mov
dec
movsb
dec
xor
aaa
add
mov
mov
mov
inc
mov
jmp
cmp
push
or
scas
test
pop
jecxz
mov
daa
xchg
das
sub
hlt
cld
test
fidivl
dec
fidivl
fstpt
jg
hlt
lahf
inc
shl
pop
cmpsb
add
mov
out
mov
loopne
outsl
mov
movsb
test
test
adc
sub
stos
cmpsb
ret
mull
fstl
sub
mov
adc
inc
test
pop
jg
and
icebp
dec
into
push
lods
movsb
inc
iret
in
popf
adc
xchg
call
fidivs
sub
mov
adc
rcrl
out
and
lock
enter
xchg
jo
mov
loop
addl
test
mov
in
adc
xchg
adc
add
add
inc
mov
and
je
mov
movsl
jo
fisttpl
adc
aaa
xchg
inc
pushf
push
cmc
push
pop
add
pop
iret
jl
adc
mov
xor
sub
dec
adc
dec
mov
sub
out
xchg
mov
dec
aam
int
leave
stos
inc
adc
xor
into
pop
imul
mov
js
mov
sub
inc
mov
mov
mov
pop
loop
cmpl
gs
scas
inc
jg
mov
cmpsb
mov
pop
sub
mov
bound
add
scas
push
rorl
mov
cli
sar
adc
jecxz
inc
push
sbb
inc
cwtl
mov
sbb
mov
inc
pop
imul
sbb
subl
lods
fsub
rcl
inc
ja,pt
jnp
xor
inc
dec
and
test
clc
adc
test
dec
add
pop
add
fsts
and
mov
aad
aad
negb
or
shlb
cmp
jp
repz
or
fadds
mov
push
jnp
xor
push
in
icebp
or
or
icebp
imul
jge
xchg
cmpsb
push
scas
inc
outsb
add
jae
adc
cmp
cli
sbb
addr16
xchg
cmc
jmp
or
dec
cmc
mov
cwtl
mov
cmp
inc
inc
repz
faddl
inc
sbb
cmp
mov
pop
or
lea
sub
pop
popl
mov
dec
add
xlat
insl
dec
inc
adc
and
mov
jne
aad
arpl
imul
adc
sub
les
sarl
loope
fdivl
js
xchg
icebp
xor
add
pop
xor
sbb
add
lahf
movl
sub
idivb
pop
dec
sbb
sarb
xlat
cmp
jg
pop
les
repnz
push
test
cmc
mov
out
xchg
lods
add
dec
insb
out
sub
sbbl
ss
sbbb
scas
das
inc
sbb
mov
mov
adc
mov
and
or
jo
loop
scas
in
lcall
in
jns
pop
or
lahf
push
mov
inc
xor
sub
insl
sbb
xchg
jno
shll
test
inc
sub
add
imul
and
cli
in
out
sbb
push
repnz
pop
cld
push
push
frstor
sarb
out
das
ret
and
fbld
imul
inc
hlt
inc
pop
fmull
jmp
sbb
repnz
enter
ret
sahf
and
rorb
fcmovb
sub
dec
jno
ret
mov
or
out
stos
and
fwait
xchg
jns
xor
cwtl
rol
mov
stc
pusha
pop
mov
int3
mov
fwait
jg
cmp
pop
mov
pop
and
push
push
mov
outsl
ret
test
hlt
lea
mov
jns
add
push
popf
popa
and
add
or
test
inc
aad
pushf
fnstenv
rolb
je
cs
cmpsb
or
jl
pop
mov
fcomps
or
rcrb
jns
lret
aam
arpl
ljmp
stos
jg
mov
test
push
and
adc
sbb
test
int3
xchg
add
mov
pop
push
cltd
or
dec
lods
imull
ss
imul
mov
cmp
test
mov
mov
popf
repz
mov
daa
insl
pushf
pop
nop
push
sbb
inc
pushf
cmpsb
fildll
add
scas
sub
dec
adcl
mov
mov
adc
push
insl
jecxz
jmp
push
push
sub
mov
add
popf
sahf
mov
xor
push
sbb
test
and
call
mov
ljmp
rorb
mov
insl
jo
call
cli
enter
xchg
dec
cmp
stc
and
jg
lcall
insb
sahf
dec
add
bound
mov
or
cmc
pop
pop
ss
sbb
movsb
sbb
mov
or
cmpb
movsl
les
in
les
jg
pop
sub
xchg
leave
ret
dec
cmp
xchg
sub
mov
mov
jle
out
and
mov
jge
sbb
mov
inc
lds
jge
test
imul
jns
cs
je
jno
imul
sahf
jns
mov
fldt
xor
std
ja
pop
jmp
inc
cmp
into
clc
fcmovbe
jno
sbb
pop
adc
and
nop
xor
popf
sbb
aas
test
int3
adc
fistl
or
jns
xor
mov
jns
lea
xchg
arpl
or
push
gs
xor
mov
call
add
pusha
xor
xor
add
and
addr16
pop
int
inc
arpl
fldenv
pop
mov
cmpsb
cs
xorl
ret
cwtl
mov
out
rclb
sub
xor
sbb
jg
sub
pop
sub
test
orl
and
movl
mov
xchg
sahf
sub
pushf
int3
out
std
in
sarl
rorl
push
cld
bound
adc
mov
push
jge
lods
push
je
xchg
iret
pop
or
fisttps
mov
inc
or
fcmovu
xor
lods
adc
es
push
addl
mov
mov
mov
mov
sub
pusha
mov
dec
imul
ss
mov
lret
or
mov
push
or
pop
or
dec
adc
mov
pop
ja
pop
mov
adc
rcl
sbb
mov
out
adc
adc
jnp
cwtl
add
lods
push
out
adc
cmp
pop
dec
andl
adc
cli
cmc
loope
test
jge
mov
or
orb
sahf
insl
push
aas
or
jle
dec
cmp
sbb
pushf
fsub
addr16
add
jecxz
and
adc
pop
rclb
in
or
aad
pop
mov
mov
stos
popf
xor
mov
sub
add
mov
xor
and
cmc
outsb
lds
xlat
in
jb
mov
pop
inc
xchg
pop
sub
sub
clc
inc
int
gs
add
movsl
jo
ljmp
repnz
jge
pop
adc
inc
mov
push
mov
pop
cmp
fwait
inc
rcll
imul
fwait
imul
sub
test
mov
pop
mov
push
ret
jge
jmp
or
insb
mov
cmpsl
xlat
inc
xor
mov
in
push
mov
inc
ret
jge
ljmp
call
xchg
mov
mov
inc
test
ljmp
mov
or
clc
jbe
mov
jae
sbb
arpl
test
jle
scas
jae
hlt
inc
test
movsl
or
add
adc
mov
add
lret
hlt
inc
jbe
xchg
je
outsb
aad
cmp
lahf
push
mov
mov
dec
inc
jbe
inc
xchg
dec
add
in
cmp
lds
push
sbb
in
dec
xchg
outsl
xchg
aas
rcrl
test
cmp
pop
adc
ds
mov
or
push
and
and
xchg
les
imul
daa
adc
inc
push
and
cmp
lods
popa
or
sti
and
in
sub
pop
cmpsl
xchg
dec
cmp
and
mov
mov
fcomp
mov
add
push
mov
cld
xchg
insl
sbb
inc
loop
cmpsb
jne
or
jo
mov
xor
stos
sarb
jle
fucomi
pop
push
enter
mov
dec
push
cmc
mov
mov
inc
fs
push
cs
adc
jecxz
push
lea
sub
fs
les
clc
inc
sub
xchg
fildll
fwait
movsl
enter
jmp
leave
sbb
or
test
cmpsb
lcall
in
mov
pop
sti
xor
jle
and
push
sub
lods
sti
xchg
xchg
lock
in
adc
push
bound
mov
data16
call
sbb
pusha
jecxz
sbb
sahf
fs
mov
dec
inc
dec
mov
lds
clc
sub
movsl
xchg
xchg
add
aas
outsb
inc
inc
xchg
dec
pop
divb
jle
out
sbb
push
ficoml
xor
arpl
mov
stc
xchg
inc
xchg
xor
or
add
add
cs
shlb
fidivl
xlat
jl
jecxz
outsl
incb
push
pusha
dec
or
lea
jmp
ds
cld
out
mov
scas
imul
cs
xchg
pop
shlb
mov
xor
mov
xchg
outsb
mov
or
jecxz
mov
lret
jae
sbb
adc
call
dec
iret
add
push
lea
ljmp
sub
lea
pop
sub
and
xor
adc
ljmp
in
loope
adc
push
mov
push
in
or
xchg
pop
ljmp
fistl
insb
mov
loopne
je
imul
fstps
pop
push
push
or
fwait
adc
cmpsb
mov
dec
adc
inc
xor
mov
cmpsb
xor
sub
dec
lds
or
push
mov
inc
mov
xchg
dec
add
stos
mov
shrl
pop
jnp
sub
std
sub
popa
cmpsl
aas
fiadds
inc
hlt
and
outsl
lock
fsubrl
in
pop
in
xor
xlat
push
hlt
fwait
add
lahf
mov
enter
sbb
push
push
mov
cwtl
std
pop
cmc
cs
xor
aam
xor
mov
enter
mov
jbe
jle
inc
pop
cmp
or
ficoml
aas
pop
xor
mov
adc
out
ds
pusha
adc
lahf
mov
les
mov
and
sbb
jnp
dec
mov
decb
push
ret
call
dec
jbe
pop
mov
pop
inc
ficompl
jle
shl
jmp
fnstsw
imul
jge
aaa
repz
or
add
jo
sub
es
leave
and
outsl
jmp
std
cmp
in
leave
popa
inc
cmpsl
mov
adc
shrl
xlat
ss
jbe
mov
add
cmpl
and
andl
xor
mov
cmp
and
hlt
lret
orl
or
inc
in
or
pusha
mov
fcomps
pop
inc
sti
out
mov
jle
out
in
add
cmp
lret
hlt
in
cwtl
lea
ret
lods
pop
adc
sbb
lret
gs
mov
dec
aas
int3
push
fsubr
mov
vpaddsb
cmc
pop
imull
test
mov
mov
jb
jno
test
add
daa
je
mov
int3
mov
sahf
xor
cmp
movsb
arpl
lret
lods
fmul
xlat
mov
push
ljmp
leave
push
pusha
inc
sub
add
movsl
sti
jg
int3
or
out
jo
jge
ljmp
jne
mov
cmp
sbb
adc
lods
sbb
xor
ds
sbb
addr16
mov
jnp
pop
rorb
das
xor
aaa
imul
mov
xor
xchg
or
and
cmp
xlat
nop
in
cmpsb
mov
mov
push
jbe
xor
aad
dec
rcll
push
dec
sub
fistpl
jg
add
mov
jl
sbb
pop
pop
jns
inc
and
pcmpgtd
cmpsl
mov
pushf
ds
pop
cld
jb
jp
or
dec
jnp
mov
arpl
dec
mov
or
pusha
dec
jle
repnz
popf
lds
out
xor
lea
xor
mov
mov
mov
inc
divl
or
xlat
jns
xor
pop
ss
movsb
push
jecxz
jle
enter
dec
enter
hlt
dec
xchg
jnp
jmp
mov
ss
pushf
dec
cmp
mov
add
push
jne
sbb
out
xchg
push
in
pop
ret
movsb
jecxz
inc
aam
into
cmc
insl
xlat
in
or
inc
mov
adc
push
cltd
mov
das
lcall
dec
mov
xor
frstor
arpl
xlat
sbb
stos
add
or
int3
mov
cs
loopne
push
add
mov
out
xchg
mul
jge
pop
sub
shr
mov
add
jmp
add
pop
stos
orl
sbb
mov
stc
repnz
sbb
adc
jne
jmp
test
mov
or
out
add
aad
inc
xchg
dec
push
pop
or
nop
cmp
pop
and
addb
sbb
inc
clc
xchg
xchg
outsl
sbb
adc
push
shlb
xchg
jle
lods
dec
sub
stos
scas
xchg
and
xchg
sub
ret
ljmp
cli
jo
adc
xchg
xlat
loope
imul
test
mov
mov
pop
clc
xchg
scas
and
sahf
loop
leave
movsl
test
adc
jo
sahf
icebp
ja
and
lock
push
enter
sbb
enter
sub
mov
xor
int3
pusha
pop
iret
movsb
les
or
inc
into
or
test
or
xchg
imull
out
push
sbb
mov
das
cmp
or
and
lcall
test
jae
movsb
addr16
jbe
dec
mov
jno
test
xchg
mov
roll
nop
int3
pop
arpl
adcl
lea
js
or
sub
repz
xchg
std
mov
lods
push
test
stos
leave
lret
imul
jnp
nop
in
push
xchg
jnp
adc
xchg
fwait
mov
ficoms
scas
outsl
pop
cwtl
mov
jne
bound
ret
cmp
js
jmp
test
pusha
stos
jp
insb
leave
dec
sarl
scas
out
scas
push
test
mov
adc
das
repz
mov
popf
into
clc
sti
cmp
sahf
fucompp
lahf
sbb
sub
fsubs
xor
popf
sub
out
xchg
test
adc
imul
sahf
hlt
add
or
mov
outsl
es
add
imul
mov
jle
mov
sub
jmp
mov
sbb
ljmp
xorb
lret
sbb
jecxz
mov
mov
xor
ss
adcl
fists
mov
adc
pop
and
mov
push
adc
cmpsb
clc
fs
hlt
enter
cmc
cmp
jbe
mov
and
int3
pop
out
push
inc
test
xchg
test
adc
call
sarb
or
inc
loopne
out
jbe
cmp
add
push
dec
popf
adc
and
adc
jnp
xor
mov
in
inc
cmp
es
dec
pop
dec
lahf
adc
fistpll
lds
sub
jecxz
push
push
dec
cli
sbb
sahf
pushf
mov
sbb
mov
lods
test
loope
jl
test
mov
push
das
idiv
arpl
cli
jecxz
int
repnz
pop
lret
cmpsw
int
data16
dec
mov
popa
mov
fmull
bound
sbb
xor
inc
mov
ljmp
bound
adc
jae
sub
or
sub
dec
and
aaa
dec
lret
popa
mov
sub
xor
out
jmp
shlb
jmp
out
shlb
push
lds
cld
mov
or
adc
xor
dec
stos
mov
lods
sub
data16
cmp
jbe
pusha
add
mov
jmp
shr
push
pop
and
aas
bound
sub
das
jno
xchg
mov
and
jle
ljmp
add
bound
scas
xor
stc
jns
hlt
fnstenv
orl
test
inc
lret
mov
xlat
jnp
pop
xchg
insb
aad
scas
mov
cwtl
ldmxcsr
push
imul
pop
push
outsb
imul
scas
movsl
xchg
sub
add
xor
testb
cs
cmp
ds
xorb
or
divb
stos
cmpsb
gs
or
sub
and
push
jp
cmpl
dec
rcrb
pop
sbb
dec
dec
stos
inc
jae
clc
loop
adcl
test
xor
popa
dec
rolb
or
outsb
sub
pop
push
and
sub
mov
enter
arpl
push
mov
lods
arpl
hlt
fldenv
or
outsl
ljmp
cmp
jne
lret
shlb
mov
pusha
daa
pop
cmpsl
hlt
jb
inc
pop
sarl
adc
cmp
loop
lock
fwait
push
bound
daa
cmc
hlt
call
jb
movsbl
pusha
mov
and
les
or
pop
call
mov
dec
les
stos
sbb
xor
xlat
fcomp
ret
xor
lret
enter
pop
les
imul
ja
xor
sub
mov
lods
cltd
jp
cmp
mov
fistps
out
sub
mov
pushf
push
inc
mov
mov
jecxz
fs
add
cmp
ja
push
insb
out
mov
jbe
and
enter
and
inc
jge
andb
in
dec
sub
pop
fistps
jmp
jno
iret
pop
mov
sahf
push
lcall
orl
pop
stc
int
push
popf
fldl
mov
fcoms
pushf
mov
push
fistpll
into
lcall
into
sbb
outsb
cmpsl
jno
or
pop
cmc
lret
adc
ja
icebp
leave
mov
mov
rcr
movsb
out
mov
mov
sti
push
ljmp
sbb
scas
cmc
pop
stos
mov
mov
aas
ss
lret
lahf
adc
dec
mov
mov
mov
cltd
jl
jb
mov
loop
fwait
shrb
enter
xor
xchg
arpl
rol
cmp
out
in
mov
cmp
sbb
or
insl
xchg
jno
daa
sub
pop
je
add
xchg
and
mov
ss
loop
and
scas
push
cmp
lods
addr16
int
shll
jae
loopne
scas
adc
rep
loope
or
cltd
pop
push
inc
mov
pusha
add
jge
pop
push
nop
xchg
xchg
test
cmp
xchg
mov
fmulp
mov
sub
xchg
popa
mov
mov
popa
sub
test
jno
mov
fildll
lcall
fst
std
data16
xchg
out
xchg
popf
stos
js
pop
in
cwtl
jo
ret
xchg
mov
cmp
xchg
out
and
cmc
sbb
or
fildll
xchg
adc
cmp
rcrb
sub
hlt
push
andb
jbe
shrb
orb
jnp
push
and
pop
hlt
movsb
push
pop
jno
cmp
sub
cmpsl
and
add
mov
jecxz
fisttpll
pop
mov
iret
jg
pop
ret
daa
aas
nop
sbb
imul
cmp
sbb
stos
jp
push
dec
stos
add
push
add
jl
and
andb
cld
into
mov
filds
cmp
pop
daa
movsl
sbb
mov
test
and
sti
xor
outsl
inc
cmp
pop
mov
and
cmp
or
push
mov
movsl
addr16
mov
mov
add
add
mov
lret
pusha
jecxz
out
mov
cmc
popa
sub
dec
and
rorb
add
xlat
jp
sub
in
pop
inc
shlb
jne
sbb
mov
or
insb
pop
jmp
cmc
ja
rorb
and
movsb
out
inc
mov
xor
and
fsubr
in
das
and
and
xchg
lea
cltd
aaa
pop
mov
push
call
scas
sbbl
jmp
insl
xchg
shll
lock
mov
test
xchg
xchg
stc
mov
xchg
les
xchg
sbb
adc
repnz
sbb
mov
pop
push
jg
xchg
aam
dec
in
pop
or
mov
sbb
aas
jae
mov
adc
pop
rcrl
jmp
js
scas
xchg
cmp
inc
mov
xor
jg
xchg
aad
push
arpl
lds
leave
cs
cmp
fbld
fldcw
push
lea
and
jne
cmp
cs
popf
dec
jno
pop
sti
cmpsb
aaa
es
mov
mov
mov
movsb
dec
stc
push
or
dec
out
mov
xchg
or
xor
xchg
scas
insb
cmpsl
add
cmp
test
repnz
fwait
sbb
fisubrl
push
lcall
mov
insl
mov
push
ljmp
aaa
in
push
notb
out
mov
mov
bound
scas
hlt
fisubrl
cmc
rclb
xchg
cli
mov
add
xchg
mov
pop
cs
push
xor
sub
rcll
ds
std
std
das
jecxz
out
enter
push
add
in
in
ficomps
std
aad
fnstsw
sbb
ja
jle
lcall
sbb
mov
dec
pop
jg
and
dec
mov
pop
or
or
sub
adc
aad
push
add
orl
inc
xor
adc
enter
or
popf
xchg
inc
jmp
icebp
inc
stc
in
pop
xchg
xor
xchg
daa
ljmp
mov
out
outsl
negl
adc
insb
push
cld
sbbl
out
inc
dec
or
mov
and
hlt
arpl
push
das
sub
fimull
mov
inc
fwait
push
lahf
and
xlat
movzbl
stos
inc
dec
sbb
lea
sbb
add
insl
xor
and
sub
fldl
fnstenv
add
cmpsb
jns
fisubrl
punpcklbw
ret
fs
push
xchg
push
stos
lds
ss
mov
and
lret
and
cwtl
push
push
push
and
dec
ljmp
push
push
ss
rorb
enter
push
shlb
es
add
mov
stos
mov
repnz
pop
nop
jle
push
mov
repz
mov
pop
ljmp
pop
test
pop
je
pop
repz
pop
popa
gs
imul
shlb
ficompl
xor
js
mov
imul
sbb
lods
pop
lea
mov
adc
or
adcb
jmp
ret
inc
sbb
outsl
int3
lds
and
std
and
cwtl
repnz
outsl
lock
jae
jae
dec
into
inc
adc
dec
mov
loopne
xor
icebp
xor
xor
rorl
push
out
mov
push
sbb
fs
xchg
cli
sub
mov
push
nop
imul
jecxz
add
pop
inc
xlat
mov
cmpsb
nop
push
push
jmp
pop
cs
mov
xor
loopne
call
adc
in
push
inc
fbld
fidivs
je
push
roll
ss
or
int
xchg
cmp
pop
sub
mov
jnp
lret
and
insb
adc
xor
jnp
jne
xchg
push
cmp
cmc
notb
movsl
iret
orl
sbb
andl
lahf
add
or
icebp
mov
ret
loop
xor
fimuls
pop
imul
mov
cltd
lcall
out
cmp
or
adc
push
js
out
es
push
push
mull
sbb
fwait
add
jmp
cmp
xchg
adc
sub
popf
insb
es
xor
mov
cmp
mov
fs
lods
dec
mov
pop
sti
jbe
bound
pop
repz
jecxz
push
mov
imul
movsl
jne
pop
lea
cltd
cmpb
ret
cmp
xchg
inc
xchg
shlb
in
insb
mov
pop
jecxz
arpl
push
mov
xor
lods
sub
mov
push
mov
scas
insl
pop
sub
ret
clc
stos
sbb
push
dec
clc
cli
lcall
sub
push
or
mov
scas
cltd
pop
mov
xchg
imul
in
inc
fwait
gs
pop
jns
in
daa
rsm
pop
jg
ret
div
jmp
xor
mov
scas
pop
rcrl
mov
aaa
xchg
call
insl
andl
test
mov
rorl
outsl
adc
or
push
mov
fdivl
out
sbb
js
mov
outsl
or
test
xor
push
hlt
les
lods
cmpsl
cld
pop
loop
pop
dec
sub
lcall
mov
jns
adc
pop
xchg
xor
fcomps
and
fisubrl
jno
inc
mov
push
ja
xchg
stc
xor
mov
iret
data16
inc
xchg
pop
or
xchg
mov
or
xchg
sbb
adc
les
movsl
aas
popa
push
sub
adc
dec
and
dec
and
int
aas
mov
mov
dec
dec
push
push
jmp
jecxz
and
mov
sbb
std
cmpsb
inc
sub
das
enter
cs
cmc
jbe
std
into
push
or
mov
mov
cmc
loope
addr16
adc
jno
sbb
loopne
mov
fucomi
es
jmp
rorb
add
adc
adc
mov
xlat
movsl
pushf
xor
sbb
mov
and
push
adc
imul
loope
outsl
mov
les
mov
cmc
mov
cmp
scas
scas
dec
scas
mov
xchg
add
hlt
ss
inc
cmp
mov
int
and
and
lea
aam
pop
xchg
add
adc
mov
in
lret
pusha
add
inc
ljmp
enter
mov
stos
adc
mov
xor
mov
sub
mov
outsl
fcoms
mov
push
sarl
mov
in
xchg
mov
pop
dec
movsb
push
jge
mov
cwtl
cs
mov
aas
clc
pop
sbb
int
inc
pop
int
pop
mov
out
das
test
rorb
leave
xor
mov
add
mov
popf
test
adc
inc
dec
xchg
fwait
xchg
rolb
mov
xchg
sahf
xor
cmp
movsb
inc
aad
and
add
jle
sub
movsl
jecxz
xor
dec
mov
mov
inc
roll
sub
dec
outsl
add
mov
mov
xlat
jbe
and
andb
push
out
add
adc
mov
aad
fcoms
inc
rcrb
xchg
aaa
inc
movsb
scas
stc
jl
lret
sbb
cmpsb
jmp
inc
adc
sbb
ffreep
dec
scas
iret
nop
mov
aaa
inc
in
adc
insl
and
shll
inc
imulb
push
mov
dec
popf
repz
daa
dec
fwait
in
fs
mov
dec
mov
push
stc
sub
pmulhw
ljmp
jge
es
and
xchg
pop
stc
sub
sahf
push
push
fistps
mov
repz
mov
out
add
xor
push
mov
ds
cmpsl
push
sbb
adc
test
or
mov
test
jge
lahf
sub
xor
mov
je
jns
jmp
fs
xchg
and
int
out
jb
sub
cmc
ret
in
enter
push
sbb
lret
cmpsl
cwtl
push
jb
inc
pop
sub
loope
in
lret
mov
mov
or
xchg
jns
das
fistl
push
xchg
repnz
test
int
sub
jnp
dec
pop
xor
and
jb
jg
bound
push
les
cld
push
jae
cmpsl
sbb
inc
in
inc
inc
or
dec
lret
inc
push
scas
ret
pop
or
adc
in
clc
xchg
xlat
leave
sbb
jg
push
push
repz
mov
sub
lret
push
mov
jns
xchg
lahf
mov
mov
jge
xor
orl
sti
jp
aas
scas
push
add
cmp
daa
add
fadds
or
push
push
mov
dec
sub
sub
cmp
sub
mov
adc
loopne
cltd
icebp
loop
scas
cltd
cmpsl
jge
push
insl
add
call
mov
test
jge
std
icebp
repnz
add
inc
insl
testb
xor
ret
cwtl
adc
cltd
push
or
stc
dec
mov
iret
push
xchg
adc
cmpsb
mov
fwait
bound
cmp
jnp
rorl
jl
and
test
mov
rclb
xchg
shl
fmull
scas
sub
inc
pusha
push
xchg
jae
add
nop
jecxz
fidivrl
mov
and
xlat
rolb
xor
popf
mov
subb
or
mov
adc
jnp
inc
popa
xor
orl
inc
inc
push
fadds
ds
popa
repz
lcall
leave
fisubrl
sahf
mov
dec
xor
adc
add
adc
sti
sub
les
inc
dec
repnz
add
sub
popa
inc
enter
and
mov
movsb
loope
xchg
ds
cli
lea
push
mov
lods
rcr
xor
bound
pusha
xchg
in
mov
cmp
jmp
shrb
mov
jne
adc
mov
std
inc
inc
pop
daa
and
jle
mov
lahf
fdivs
idivb
xchg
adc
jne
push
repz
inc
mov
cltd
movsl
icebp
mov
xor
xchg
or
mov
dec
sub
ret
mov
inc
pop
xchg
mov
fs
xchg
mov
test
mov
lahf
ss
mov
jae
dec
repnz
xchg
dec
fisttps
fsubr
sahf
lret
jmp
and
pop
dec
jne
push
lahf
imul
cmp
andl
outsl
test
inc
xchg
aad
rcl
mov
addr16
add
xor
lcall
cli
jge
and
addr16
fadds
in
jle
std
xor
inc
hlt
push
and
pop
fistpl
out
adc
into
pop
cmp
mov
or
pushf
imul
pop
sbb
ljmp
rorl
cmp
xor
sub
xchg
mov
sub
fwait
pop
add
mov
ss
in
lret
bound
xlat
xor
xor
ss
pop
enter
bound
push
cmp
mov
fmuls
jo
push
xor
clc
popa
lea
int
pusha
ljmp
mov
or
push
push
jg
xchg
into
jmp
sub
shlb
sti
decl
add
or
mov
test
mov
mov
push
adc
push
sub
pop
out
aaa
dec
push
jbe
jle
jno
into
jmp
cmpsb
test
mov
rorb
mov
xor
int3
fldcw
push
fimull
lods
jge
out
jne
cmp
les
rol
mov
sbb
decl
sbb
lahf
imul
imul
sbb
jge
fwait
jmp
in
sub
lahf
mov
out
les
scas
or
inc
add
mov
adc
cmp
inc
add
jno
hlt
test
dec
out
shrb
sbb
and
lds
clc
shlb
cmp
pop
dec
sarb
or
or
cmp
arpl
dec
ror
popf
or
popf
sub
add
push
dec
and
and
loop
jbe
lock
gs
jns
loope
ds
pop
mov
das
mov
lods
mov
scas
mov
xor
cmp
insl
lds
jb
outsl
fwait
pushf
out
scas
mov
mov
cmp
popf
movsl
in
jmp
jno
loopne
adc
fsubl
mov
mov
jle
sub
inc
sbb
in
in
data16
test
mov
jmp
inc
ja
dec
or
js
pop
dec
pop
push
sub
out
popa
cmp
mov
and
xchg
cltd
and
xchg
sub
sub
push
iret
popf
rorl
and
or
std
cmp
fsubrl
subb
jnp
stc
push
and
popa
test
adc
mov
addl
push
fnstcw
adc
rolb
in
popf
subb
sub
out
loop
push
enter
push
mov
mov
adc
jnp
push
out
filds
sub
adc
xlat
pop
scas
xor
sub
push
dec
lcall
xchg
scas
movsb
fildll
dec
cmp
jbe
pushf
jecxz
das
jl
adc
aad
cmpsl
jg
xchg
lcall
mov
cmp
dec
cld
cmp
call
adc
ss
scas
push
mov
xlat
and
and
sbb
fwait
lcallw
and
call
daa
mov
mov
andb
aam
dec
and
adc
sbbb
push
clc
mov
sub
sti
lcall
loope
xchg
push
call
xchg
inc
stos
lds
fyl2x
nop
sahf
pusha
mov
rolb
in
in
popa
mov
int
adc
adc
out
fldcw
jbe
push
imull
cmpsb
orb
hlt
dec
out
adc
jns
dec
fucom
xchg
mov
nop
mov
test
sahf
lahf
jge
sar
push
dec
cwtl
sbb
sbb
mov
daa
scas
jp
pop
jge
mov
aad
lcall
cli
sbb
push
jbe
or
jg
into
and
mov
mov
jbe
mov
out
daa
jb
sbb
cmp
or
in
push
jmp
mov
cmpl
or
iret
leave
shl
aaa
fisubrl
aas
lret
sbb
rorl
dec
gs
jbe
outsl
inc
push
cmp
test
jmp
and
ss
jle
notl
jns
xchg
ficomps
cmpsb
pop
jl
adc
test
jnp
xor
push
add
inc
sbb
subb
push
bound
repnz
pop
add
std
mov
lock
daa
jnp
test
outsl
aad
jg
fiaddl
pop
insb
lret
inc
leave
dec
sbb
test
mov
dec
push
adc
in
dec
push
mov
cli
cmc
sti
mov
or
movsl
pop
sarb
lcall
je
nop
cmp
jmp
repz
jle
inc
xchg
adc
aaa
lods
dec
iret
push
lcall
nop
shr
movsb
sub
dec
je
jecxz
xchg
jecxz
cmpsb
lret
mov
pusha
sub
stos
out
je
inc
outsl
cli
stos
or
push
lret
fdivs
add
and
ret
insb
pop
adc
test
das
bound
push
mov
add
in
add
iret
fs
das
mov
rclb
cmp
jo
sbb
test
xor
dec
cmc
rcl
push
adc
or
adc
rclb
and
sahf
jge
fists
inc
xor
mov
in
xchg
gs
dec
jecxz
xor
lods
push
mov
lock
xor
data16
push
inc
add
xchg
orb
testl
lret
sbb
addl
pop
cmp
dec
push
push
mov
add
out
xchg
inc
sbb
std
xor
mov
jb
sub
ret
push
cmpsl
nop
xchg
add
out
icebp
inc
cmpsl
mul
mov
std
jp
inc
nop
push
xchg
mov
iret
aas
mov
inc
cmpl
pop
clc
cmp
xchg
daa
lock
popf
clc
movb
imul
inc
mov
test
ret
in
jb
mov
cs
pusha
push
xchg
xor
sbb
loopne
scas
fdivl
in
js
aad
jecxz
push
push
mov
cmp
shlb
xor
leave
xchg
cmp
pop
pxor
or
inc
out
fisubrl
stc
dec
lea
ret
sub
int
and
xor
inc
dec
push
hlt
add
dec
jle
mov
inc
xor
jb
push
mov
jle
fstps
push
fsubrl
fwait
mov
adc
dec
xor
adc
xchg
lods
out
out
dec
bnd
addr16
hlt
outsb
cmpsl
loopne
les
xchg
enter
fidivrs
or
mov
mov
ret
sbb
test
js
cmpl
sbbl
mov
cltd
add
lea
lock
lods
bound
cwtl
push
xor
jae
ret
sub
shll
adc
mov
xorb
add
xchg
push
cmp
mov
out
adc
push
sbb
gs
scas
or
xorl
add
cmp
rcll
mov
out
mov
mov
pop
lret
jecxz
adc
insl
fisttpl
inc
jo
cmp
lret
stc
add
add
cs
rorb
sub
arpl
and
into
dec
jle
jns
test
xchg
xchg
frstor
cltd
adc
sahf
cli
cs
in
jp
sub
movsb
add
pop
movsl
xchg
stc
sbb
inc
push
xor
movsl
dec
sbb
lret
negb
xor
fistpll
pushf
loopne
adc
adc
jbe
ds
sub
rolb
adc
pushf
idiv
dec
or
and
xchg
lock
cmp
sahf
add
cld
cmp
jae
stc
in
repz
sub
ret
mov
sbb
test
fisubs
jge
lds
and
mov
andb
cmpsl
sti
test
mov
push
stos
add
div
pop
sbb
test
or
test
mov
dec
addr16
scas
loope
test
and
iret
pop
jnp
fsubl
mov
inc
xchg
ret
xlat
pushf
adc
sbb
mov
lret
xchg
pop
push
clc
scas
std
mov
cmp
jmp
lret
cmp
cli
xchg
lcall
xchg
test
insl
jbe
mov
idivl
fidivrs
orb
sub
push
cwtl
popa
sub
fs
adc
mov
mov
mov
rcrb
mov
in
outsb
loope
xor
push
in
push
or
add
enter
pusha
push
loop
pop
mov
xchg
jecxz
and
sarb
in
lret
out
inc
leave
imul
mov
movsb
push
mov
outsl
mov
jo
adc
and
xchg
cmp
mov
xchg
xchg
xor
scas
mov
test
sbb
xchg
mov
or
mov
gs
sub
fiaddl
xchg
xlat
scas
adc
mov
xchg
fstpt
inc
ret
shlb
roll
push
movsb
xchg
add
subb
addl
pop
push
std
mov
insb
dec
pop
dec
hlt
call
pop
popa
or
xchg
movsl
les
sub
lds
dec
mov
mov
mov
sbb
pop
pop
sub
or
xor
or
movsl
mov
lds
mov
and
outsl
lods
sbb
loopne
xchg
aas
adc
arpl
mov
sbbl
shrl
push
stos
les
cmpsb
jge
lcall
popa
dec
cld
jns
scas
cmp
lea
hlt
xor
ds
aad
movsb
push
cmp
std
sub
into
test
mov
stos
pop
aas
xchg
adc
fsin
stos
ror
xchg
test
push
jae
test
push
imul
adc
jb
jl
divl
aam
inc
jns
xor
fs
and
daa
xchg
aas
daa
shll
mov
icebp
xlat
add
in
lret
sbb
dec
push
push
pop
xchg
inc
and
aaa
lcall
adc
loope
rcll
mov
xchg
dec
roll
pop
xor
mov
movsl
cmpsb
popf
mov
mov
lahf
fdivl
sbb
mov
cmp
addl
add
popf
ljmp
sub
sub
sub
lods
aas
xor
ss
push
or
inc
dec
xchg
push
dec
fcmove
sub
pop
sbb
and
mov
pop
mov
sbb
sbb
cmp
mov
ja
fwait
es
gs
popa
push
aaa
dec
pop
mov
jns
les
sub
push
xlat
iret
cmp
pop
mov
movsb
ds
mov
ljmp
xchg
ds
or
xchg
inc
das
xchg
push
or
mov
es
add
out
cmc
rolb
jne
xor
jae
ljmp
std
in
jo
xchg
adc
bnd
mov
lahf
imul
push
lcall
push
pop
jmp
pop
pop
outsl
daa
popa
push
repz
clc
cmp
daa
repz
jle
mov
add
popf
jno
fcoml
arpl
out
or
sbb
test
xchg
or
push
mov
inc
pop
mov
xchg
icebp
inc
or
xor
test
mov
xchg
std
jo
adc
xor
ret
mov
xchg
sbb
or
mov
mov
lds
les
inc
push
shlb
call
negl
xorl
fcoml
inc
push
bound
inc
aam
xor
mov
lahf
add
jg
insb
mov
das
loope
xchg
pop
xchg
add
jge
xor
jecxz
cli
pop
adc
enter
daa
lcall
mov
xchg
aad
ds
stc
shll
jne
dec
bound
cli
es
lret
jb
push
inc
fs
pop
sbb
pop
stc
pop
pop
cmp
loopne
ljmp
mov
test
pop
xchg
jmp
dec
push
push
inc
cmp
sbb
out
add
fstl
nop
add
xor
push
and
rcl
mov
jle
lock
sbb
test
xor
mov
push
xchg
lds
add
xchg
adc
mov
inc
inc
fsubl
dec
xchg
and
fists
push
jl,pn
xor
out
pop
mov
jmp
loope
cmpsb
or
add
push
shrd
or
fcom
jno
fistl
sub
repz
sbb
test
and
dec
rorb
fmul
int
dec
inc
call
dec
inc
es
bound
push
jecxz
mov
adc
sub
nop
inc
mov
negb
jbe
mov
fcoms
jmp
cmp
dec
cmp
decl
scas
push
jl
mov
cld
cmp
jp
push
add
dec
xchg
int
cs
and
sub
stos
inc
xor
adc
aam
or
mov
je
shl
jp
pop
bound
xchg
dec
pop
stc
jo
pop
pop
mov
scas
aam
cmpsl
movsl
pop
push
push
lcall
sub
push
jecxz
shrb
leave
and
and
ja
xchg
orl
nop
mov
stc
adc
dec
pop
sub
cmp
sbb
jae
dec
add
jno
push
adc
jg
adc
clc
outsl
jmp
arpl
pop
clc
pop
cmp
shrb
loop
jge
sahf
push
lea
cmp
fdiv
xchg
push
mov
addr16
dec
jp
adc
jg
mov
cwtl
cmp
mov
fsubr
push
push
push
aas
out
lea
cwtl
out
mov
insl
or
loopne
out
insl
inc
orl
mov
lods
adc
jbe
mov
test
adc
out
sbb
in
cmp
adc
or
push
add
xchg
repnz
popf
lea
ret
leave
mov
je
ja
stc
add
pusha
mov
das
pop
or
enter
test
lahf
popa
cmp
cwtl
jg
inc
loop
push
movsl
hlt
inc
jbe
movsl
jno
jmp
mov
cld
xchg
stos
mov
test
mov
cwtl
dec
mov
and
adc
aaa
and
pop
outsl
pop
pop
iret
jb
ss
sub
sub
retw
xchg
daa
or
mov
cltd
pop
enter
in
mov
and
test
pop
es
gs
cs
shr
mov
push
mov
movsl
mov
imull
jecxz
push
push
lea
mov
lret
adc
orl
dec
push
out
stos
hlt
adcb
mov
xlat
lock
test
mov
sti
lods
clc
or
stc
insl
int
insl
in
sub
push
rcrb
sbbb
das
outsl
push
lods
in
push
or
jns
mov
mov
stc
and
jo
lcall
cltd
jl
insl
int
xor
subb
pop
adc
cmp
xor
cmp
adc
jl
sub
loop
std
in
test
push
and
mov
xchg
faddl
pop
movsl
lret
adc
mov
mov
xor
sbb
mov
sbb
jbe
into
adc
cs
movsl
cltd
mov
ficompl
jb
test
add
xchg
insl
push
cmpb
loope
bound
lret
bound
sbb
test
cmpsb
fisttps
lods
pop
jns
mov
out
scas
sbb
push
mov
cs
cmpsb
mov
loopne
cmp
cmp
jg
mov
lods
or
jge
jne
rol
xor
mov
in
or
mov
pop
insl
shll
les
sbbl
popf
mov
mov
clc
inc
jae
scas
cs
sbb
jo
cwtl
data16
leave
push
push
sbb
push
jle
ror
jp
mov
mov
popf
push
mov
mov
subl
mov
fwait
addr16
ss
cli
xchg
ds
mov
fs
scas
sbb
pusha
inc
push
popf
out
loope
push
xchg
std
popf
das
imul
icebp
push
inc
jb
jno
pop
stos
mov
into
xorb
mov
sbb
pop
sbb
adc
loop,pn
into
jl
xor
stos
fisttpll
xor
mov
sub
lods
xchg
add
movsb
cltd
xlat
test
fwait
fwait
fs
sub
out
dec
aad
out
jge
movsl
leave
test
jle
mov
int
sbb
mov
mov
and
in
mov
sahf
negb
lods
push
daa
push
cld
jo
jge
xlat
ret
xchg
loopne
mov
movsb
in
and
pop
pop
jle
das
push
or
push
pop
inc
jns
mov
adc
jnp
and
les
push
jno
mov
sub
inc
jo
and
test
xor
sub
push
gs
adc
sub
mov
pop
mov
insl
adc
aas
xchg
je
inc
cmp
sbb
vmovsldup
lods
pop
jb
loope
imul
mov
std
jg
inc
fcmovnu
imul
xchg
push
sbbl
xchg
fyl2x
mov
xor
or
popf
dec
mov
bound
inc
sti
xchg
push
dec
pusha
cli
sbbl
pushf
shll
cmp
xchg
data16
insb
or
std
pop
adc
stos
enter
mov
or
movsl
xor
lods
mov
sar
mov
mov
xchg
inc
or
mov
sub
test
mov
or
sub
mov
mov
jecxz
dec
ja
mov
aas
push
xchg
pop
xlat
fadd
mov
adc
cmp
ret
clc
jmp
insl
or
sbb
aam
inc
iret
mov
bound
nop
cld
jecxz
xchg
or
mov
ret
sub
pop
add
and
mov
aaa
xor
stc
push
sbb
dec
add
lahf
jl
lock
dec
jl
mov
nop
leave
cmp
into
orl
sub
dec
shll
inc
dec
add
call
loopne
cli
jle
mov
std
lods
rorl
ljmp
movsb
clc
lret
lcall
mov
mov
dec
pop
in
cmp
fisttpll
xor
inc
jbe
cltd
mov
repz
mov
and
lds
jmp
jbe
arpl
pop
out
xchg
test
lods
shl
pop
pop
mov
scas
xchg
repz
or
jb
cwtl
test
xchg
mov
popl
and
xchg
push
iret
pop
cmpsb
aad
test
mov
jge
sub
scas
adc
pop
loop
jne
mov
out
mov
adc
int
xor
addr16
pushf
shrb
mov
push
fstpt
cli
adc
lods
mov
pushf
inc
in
repz
sub
repz
lds
enter
or
fmuls
and
clc
cltd
xchg
pop
stos
adc
rol
out
inc
xlat
pushf
pop
loopne
stos
insl
inc
mov
mov
je
das
fnsave
xor
lods
fisttpl
xchg
lahf
push
and
mov
mov
sub
mov
mov
test
xchg
fdivrp
mov
mov
add
fptan
loope
fwait
mov
into
jno
add
cwtl
mov
outsl
movb
lock
sbb
push
idivl
sub
lret
bound
xchg
sar
in
cld
xor
sub
insl
mul
sub
and
mov
jge
roll
scas
dec
pop
iret
and
xchg
adc
cld
push
mov
clc
sbb
push
pop
xor
jns
lock
xchg
or
xchg
int
es
sarl
mov
add
incb
xchg
leave
xchg
adc
mov
fwait
adc
push
mov
cmp
lock
dec
mov
xorb
loop
adc
orl
xor
out
cmpsl
add
push
cmp
add
insl
nop
add
loop
mov
scas
push
in
pop
mov
clc
xchg
lods
mov
aad
test
inc
or
push
loop
jl
xchg
es
add
ret
jp
xor
dec
pop
cltd
pushf
xor
jg
stc
sbb
in
or
es
xchg
movl
jno
mov
mov
lret
sub
sarb
stos
ret
popa
cmp
movsb
mov
push
and
sbb
int3
fwait
inc
or
pop
sub
orb
pop
pop
insb
mov
jo
test
loopne
adcl
adc
ss
inc
sbb
jb
xchg
out
mov
push
test
movl
lock
mov
sub
and
lods
enter
mov
xlat
and
rol
movsb
imul
loopne
fidivs
lahf
pop
or
pop
pop
jmp
cmc
lods
aas
or
daa
pop
out
push
cmp
cmpsl
add
scas
adc
bound
in
std
loopne
loope
jbe
sbb
push
lods
pop
rol
dec
xchg
pop
add
dec
sbb
add
fidivl
adc
sahf
scas
out
or
sub
adc
inc
push
xchg
push
in
add
xchg
dec
dec
mov
sahf
inc
test
mov
in
mov
jne
out
bound
or
repz
test
mov
or
je
dec
sub
xchg
xchg
pop
sti
rol
cmp
sub
pop
adcb
xchg
in
add
lods
sub
dec
push
outsl
out
dec
mov
adc
xchg
outsb
push
lock
push
mov
xchg
add
jmp
jg
mov
dec
and
sbb
mov
shrb
pop
lods
rcrb
inc
test
cmpsb
fistps
lcall
mov
xchg
xchg
rcll
dec
xor
out
fiaddl
pop
scas
rorb
fadd
mov
les
mov
and
add
lret
jnp
cmp
add
lahf
imul
xor
bound
mov
cmp
xor
lcall
mov
mov
fimuls
sbb
js
scas
out
leave
iret
push
nop
push
pop
mov
loope
loopne
dec
lods
and
and
loop
test
sbb
sub
decl
inc
add
sub
mov
sbb
dec
adc
sti
or
adc
sbb
cmp
loop
cltd
adc
das
sahf
xchg
rorb
stc
mov
cmpsb
js
and
rcrl
andnps
lods
lds
lods
pop
inc
es
cmpsl
add
clc
cmpsb
lods
jl
lock
cwtl
bound
ret
and
loope
sbb
dec
int3
rcll
jne
adc
bound
mov
in
cmp
cld
nop
sbb
cmp
movsl
jnp
popa
mov
or
data16
cmpsb
adc
dec
out
fwait
popa
sbb
adc
andl
mov
repnz
adc
inc
cltd
sbb
cmp
sahf
xchg
sbb
xor
dec
sahf
mov
dec
repz
sti
or
cwtl
gs
mov
adc
sub
push
or
dec
fmuls
push
popf
lods
test
aaa
incb
aad
mov
enter
adc
addr16
mulb
pop
scas
add
push
loop
int3
and
outsb
fstps
out
cmc
add
pop
xchg
mov
js
scas
xor
sub
or
ficoms
mov
cmp
xchg
inc
adc
cmc
sub
push
mov
outsb
mov
fs
inc
pop
xchg
jle
rcr
and
pop
fcmovbe
and
js
jl
and
shlb
ffreep
mov
jo
mov
xlat
mov
sbb
je
scas
in
gs
jb
aam
mov
sbb
loope
and
jmp
ja
cmpsb
sub
test
cs
xorl
and
mov
ss
sarl
pushf
mov
xrelease
imul
and
xchg
popf
mov
fs
inc
sub
rcll
andl
rcrl
push
adc
dec
aam
stc
ret
add
leave
imul
pop
aaa
out
mov
xchg
and
stos
mov
mov
mov
stos
mov
icebp
shrb
les
mov
insl
inc
jb
sub
gs
jbe
test
push
je
sub
add
ss
outsl
test
fmull
jp
mov
dec
inc
xchg
push
mov
pop
insl
sub
cmpsl
jnp
les
cmp
inc
cmp
pop
pop
push
pop
jbe
or
push
mov
pusha
or
ds
xor
mov
push
adc
mov
fnstenv
pop
or
push
ret
xchg
and
outsb
scas
enter
fistpll
mov
jno
jne
or
push
loopne
loopne
jb
xchg
xchg
dec
jecxz
fcmovnbe
testl
lret
movsb
pop
movsb
xor
push
adc
lods
xchg
sbb
cmc
xchg
xchg
loope
lea
xor
mov
stos
inc
pop
pop
or
rcr
jg
nop
mov
test
test
cmp
xchg
out
mov
jg
jmp
das
cmpsl
shl
scas
out
push
or
and
sub
test
or
push
add
dec
xchg
xchg
pop
xchg
cmovne
adc
lea
and
cmpb
lock
dec
xchg
lock
lds
pop
push
movb
mov
cwtl
mov
das
jne,pn
mov
mov
mov
or
insb
sbb
imul
cmpsl
add
out
add
notl
sbb
stc
roll
jo
sbb
push
mov
fcomip
dec
ja
stos
push
in
xchg
in
xor
push
pop
jns
sar
les
fadd
sbb
pop
aas
pusha
neg
movsb
insb
mov
fsubs
dec
stc
sub
mov
in
mov
out
decl
mov
mov
pop
int3
or
int3
fisubl
scas
inc
push
fcomip
mov
fwait
push
fmul
orl
jmp
cld
jecxz
sub
aaa
dec
insl
xchg
int
pop
mov
mov
insb
cld
cltd
in
cmp
pusha
pop
adc
mov
cld
mov
mov
subb
arpl
lcall
sub
cltd
adc
add
lock
outsl
mov
je
or
pcmpeqb
push
sub
cmpsb
adc
mov
pop
int3
or
int3
dec
test
mov
addr16
lods
sahf
cmp
pop
mov
jae
scas
fcomip
pop
sbb
lods
cmp
test
daa
dec
shlb
dec
es
inc
or
pop
into
sub
test
ss
inc
mov
adc
movsb
push
push
xchg
pop
leave
daa
or
cmp
dec
sbb
xchg
decb
mov
ret
inc
inc
and
lock
adc
xor
or
adcl
cmc
mov
push
push
dec
xchg
test
push
out
dec
push
jecxz
add
cmp
leave
pop
or
cmp
mov
clc
adc
lcall
mov
adc
sti
arpl
mov
and
xchg
jecxz
inc
lods
out
xchg
inc
cltd
fistpll
and
and
imul
popa
mov
mov
lods
stc
inc
iret
inc
aad
dec
xor
xor
push
mov
push
xorl
fiadds
push
mov
mov
push
ret
mov
ljmp
insl
adc
jns
inc
xor
xchg
mov
push
icebp
in
pop
cmpsl
dec
scas
insb
dec
pop
xor
pop
addr16
jno
outsb
pushf
jmp
push
add
xor
adc
je
mov
rorl
das
mov
ds
cmp
data16
push
dec
fdivrs
xchg
adc
into
xor
mov
mov
jl
inc
arpl
in
out
ss
inc
xor
popa
mov
lcall
bsr
pop
ficompl
mov
dec
test
scas
je
dec
jno
mov
mov
imul
and
mov
and
adc
lret
cld
push
insl
pusha
add
mov
push
aas
sub
jae
lret
xor
pop
cmp
jl
cs
mov
xchg
outsl
push
fwait
mov
inc
adc
call
mov
mov
or
shrl
adc
scas
jbe
and
push
pushf
subb
fbstp
adc
add
sbb
sub
dec
adc
fldl2e
push
xor
pop
jle
inc
sahf
fidivrs
push
mov
outsb
movsb
jbe
cwtl
add
mov
lahf
mov
sub
mov
rcll
faddl
jb
rorl
orl
lret
inc
cmp
jno
or
cmpl
shll
loopne
mov
popa
jecxz
push
cmp
sbb
je
ret
cld
mov
add
push
or
add
mov
adc
mov
xor
mov
cwtl
mov
dec
adc
test
push
mov
fsts
in
xchg
shrb
inc
dec
and
inc
mov
jne
and
jo
or
loope
lcall
inc
add
or
dec
hlt
fsub
ljmp
and
popf
sub
sbb
jmp
sbb
push
test
mov
adc
xchg
lcall
in
mov
jb
jns
stos
pop
xchg
add
out
das
fs
or
addb
add
sbb
test
jno
movsb
xchg
flds
push
inc
mov
jecxz
fwait
loop
cld
adc
lret
jge
gs
cmp
and
add
fildl
jg
cwtl
adc
roll
rorb
sub
idiv
inc
sbb
test
cmc
rcrl
imul
mov
pop
sub
mov
pusha
push
iret
push
lods
sub
push
pop
and
mov
jge
cli
xor
cld
dec
xchg
xor
xlat
jne
test
or
sub
xchg
arpl
in
mov
fsubrl
mov
daa
xor
inc
or
into
push
rorb
lods
pop
sar
shrb
xchg
mov
sbb
iret
inc
dec
fsubrs
mov
jg
ret
stc
gs
insb
or
cmp
mov
cld
stos
rorb
aaa
jge
popa
lret
in
loope
and
dec
pop
test
pop
mov
cmp
xor
mov
mov
and
and
pop
sbb
push
xchg
rorb
data16
in
dec
scas
pop
in
popa
jmp
add
jb
ds
lahf
pop
mov
stc
scas
xchg
test
push
adc
aaa
iret
call
pusha
stc
lea
xor
bound
add
aas
xor
out
js
ds
and
stc
iret
xchg
xor
adc
push
sahf
ds
push
imul
into
repnz
or
int
mov
mov
inc
mov
jnp
das
shrl
int3
sbb
jecxz
mov
std
cmp
call
dec
or
add
jbe
inc
pop
fnstsw
inc
pop
cmovs
pushf
inc
mov
xchg
xlat
adc
int
pop
xor
testb
loop
das
sarl
push
jmp
push
xlat
fcmovbe
mov
sbbl
pusha
xor
pop
dec
movsb
clc
in
test
pop
mov
xor
pop
pop
nop
sub
pop
addr16
push
jge
pop
xchg
insb
mov
aas
or
repnz
shlb
mov
aad
ss
idivb
fwait
push
jns
sbb
ja
mov
sub
push
rsm
mov
cmp
cwtl
xor
jnp
data16
ret
jae
js
pop
jmp
dec
bound
adc
push
mov
jo
push
mov
pop
loop
xor
add
push
xor
xlat
adc
xor
push
fs
and
dec
gs
bound
loope
shrl
xchg
or
cld
pusha
push
xlat
ss
push
dec
inc
pusha
fbld
sub
loop
sbb
into
inc
adc
repz
push
std
lods
mov
sub
jae
lret
or
fildl
mov
add
push
movsb
std
push
xchg
rorb
aas
push
lea
push
jle
or
loope
jl
mov
gs
sub
cltd
rcll
rcll
mov
mov
loopne
fwait
or
in
stos
push
addb
cmc
and
sub
mull
rcrl
adc
bound
mov
std
loope
push
cwtl
add
mov
dec
pop
sbb
jne
mov
stos
das
dec
pop
pushl
outsb
repz
pop
cli
call
outsl
pop
adc
loope
jae
sbb
imul
and
int
jmp
scas
add
pop
and
shlb
jl
dec
push
add
mov
mov
fwait
nop
pop
sbb
sbb
mov
push
inc
sub
xchg
testl
icebp
mov
mov
pop
jbe
icebp
stos
cmpsb
ja
or
sbb
iret
cmc
dec
out
xor
imul
xchg
loop
xor
fwait
or
pop
scas
addr16
xchg
jecxz
xchg
cmp
push
sbb
test
sbb
pop
pop
aam
js
daa
addl
aam
imul
lods
aas
jbe
dec
adc
mov
mov
pop
cmp
shrl
mov
mov
dec
out
ljmp
mov
repnz
pushw
mov
jge
pop
aad
adc
addb
outsb
ja
xchg
into
push
jns
mov
add
push
and
push
cmp
push
sbb
enter
inc
cmc
sbb
jge
inc
push
std
scas
out
push
pushf
inc
jmp
sbb
push
adc
mov
out
sbb
add
jmp
pushf
rcll
jne
andb
and
mov
xchg
mov
fildll
adc
cmovp
xchg
or
rcll
test
loopne
iret
cmp
and
jns
push
lret
mov
sbb
jmp
fists
rorb
stos
xchg
pop
inc
sub
xor
jecxz
xor
mov
test
sbb
mov
iret
int
xor
dec
push
and
mov
jno
mov
xor
adc
movsl
inc
addl
mov
fwait
inc
sub
mov
ja
je
jle
xor
pop
xchg
push
fpatan
jp
or
sbbl
adc
jg
std
lea
aad
subl
xchg
rcrb
xlat
jne
loop
dec
or
push
aas
fdivl
aam
out
jb
div
ss
ret
movsl
andl
mov
insl
test
in
cmc
sub
sahf
leave
inc
mov
mov
ljmp
jl
xor
push
mov
lret
iret
leave
dec
movsl
in
add
pop
ljmp
xchg
icebp
push
sub
aam
cwtl
sbb
sbb
pop
les
rorl
lods
lcall
mov
jbe
mov
mov
fdivl
fstpt
dec
push
sbb
add
and
sub
jbe
in
and
in
mov
fdivl
dec
pusha
add
jle
gs
repz
lret
cmpsl
fs
cwtl
gs
jne
sub
in
mov
dec
lcall
mov
shrb
dec
xor
fistpll
xor
daa
mov
cmp
ja
fistpl
xchg
jmp
data16
push
push
aad
js
mov
mov
stos
insl
and
into
push
mov
fs
loop
jns
adcl
pop
push
mov
addl
aad
mov
and
adc
jnp
faddl
mov
push
lds
fwait
inc
cmp
adc
insb
subb
adc
jl
dec
popa
daa
adc
loop
cld
or
mov
xchg
icebp
addr16
ja
scas
add
les
lock
lds
push
or
add
shlb
int3
mov
int
fisubs
in
or
stos
add
cmp
cmp
xchg
out
pop
lock
cld
shlb
or
jle
or
out
adc
sarb
iret
mov
lahf
jmp
data16
lds
aad
out
sti
dec
add
xchg
xor
scas
fcomi
sbb
dec
xor
pop
jae
sbb
jno
addr16
jbe
rcrb
addr16
dec
cmp
test
mov
adc
inc
fwait
inc
rcrl
pop
mov
jl
fsubl
addr16
inc
dec
mov
mov
cli
aas
mov
in
stos
imul
aas
dec
fnstsw
outsl
xor
sbb
inc
fld1
arpl
lods
sub
mov
lea
in
stc
rcll
sbb
jno
inc
addr16
sbb
jno
mov
sarb
and
leave
jp
or
rol
cltd
inc
test
and
sbb
jmp
andb
inc
notb
ret
dec
xchg
pop
jg
dec
xchg
jp
inc
pusha
repnz
pop
adc
loopne
pop
xchg
dec
inc
push
lds
push
orl
cmp
out
jnp
rcll
ss
ja
pop
sub
jo
sbb
cld
mov
jo
in
loop
xor
in
lahf
or
inc
repnz
sub
and
fsubrp
jge
adc
dec
cmp
cld
daa
sub
movb
push
and
mov
cmp
sbb
xchg
clc
je
adc
dec
and
or
and
out
mov
push
xchg
sub
mov
lock
lds
movsb
or
dec
jb
and
ss
push
data16
push
lds
push
stos
dec
nop
or
mov
xor
mov
daa
xchg
pop
or
ss
in
out
cmp
pop
scas
mov
fwait
ljmp
ljmp
fmuls
aas
std
mov
xchg
mov
mov
pop
ror
mov
in
inc
add
mov
loope
jecxz
fwait
mov
test
int
lret
aas
fsubrs
inc
gs
sbb
xor
or
pop
sub
mov
ja
nop
push
push
mov
int3
sub
pop
push
sar
jno
sub
pop
push
jmp
notb
or
mov
xor
fprem
fs
je
mov
push
jge
and
imul
repz
adc
jmp
push
hlt
hlt
sbb
insl
pop
pop
mov
pop
ret
movsl
add
movsl
ret
jb
iret
imul
lock
jecxz
mov
fnsave
add
daa
mov
jl
in
repnz
ret
pop
xor
aas
aad
xor
add
dec
pop
xchg
ret
repz
inc
iret
scas
mov
push
movsb
imul
push
cmp
pop
sar
sbb
std
cmpsb
pop
dec
or
rcrl
out
add
pushf
push
push
dec
repz
add
cmp
test
out
and
and
push
fisubrl
int
jbe
xchg
les
ja
std
leave
add
mov
push
mov
mov
and
jns
cmp
jle
add
pop
aaa
sbb
mov
dec
std
sbb
xor
mov
cwtl
sub
sub
mov
push
subb
mov
or
int
sahf
or
xor
sub
cmp
mov
dec
push
cmpsl
aaa
lods
mov
imul
sbb
push
mov
xchg
out
daa
scas
lret
add
insl
mov
bound
lcall
ds
inc
xchg
sbb
popa
jae
es
adc
xor
out
into
sub
popa
int
add
dec
mov
incb
mov
pop
cmp
sbb
cld
mov
or
jbe
adc
inc
stc
dec
das
pop
rcll
push
push
outsl
popf
xchg
jp
sarl
sub
push
movups
ss
pop
mov
xchg
sbb
pop
fdivl
int3
lahf
mov
and
add
or
xchg
testl
or
jle
push
push
cmp
test
int
xchg
push
cmp
decl
push
mov
mov
jne
push
shrl
xchg
mov
dec
enter
mov
mov
push
pusha
and
push
push
std
jno
jle
push
iret
jge
add
mov
dec
dec
adc
pop
out
pop
sti
cmp
inc
js
mov
jae
out
jl
stc
das
inc
popa
lret
into
adc
sbb
jno
sti
mov
cmp
dec
jno,pt
rol
pop
lods
movsl
sbb
aad
aaa
dec
pushf
jb
hlt
mov
in
sbb
add
push
mov
fildll
lods
mov
fstpl
sar
push
inc
icebp
ret
out
jge
xchg
add
push
loope
icebp
dec
loopne
push
inc
roll
mov
cmp
cmp
mulb
mov
aam
movsb
sbb
pop
pop
jnp
sbb
xor
popa
call
fistps
es
pop
fidivs
adc
xchg
movsb
add
iret
insb
xchg
ja
lds
jne
push
pop
mov
mov
pop
scas
jle
or
jbe
stc
movsb
jb
inc
mov
clc
aas
jmp
mov
push
add
out
xor
ja
pop
or
imul
aas
xor
inc
lcall
enter
mov
mov
cmp
sar
dec
sbb
sbb
push
icebp
dec
sub
push
push
sbb
in
test
in
xchg
sub
mov
cmp
leave
jbe
sbb
rcrl
ret
inc
lods
mov
in
cmpsl
add
icebp
or
adc
fs
and
lock
or
dec
lahf
dec
mov
je
movsb
cmpsl
push
inc
mov
rolb
insl
add
les
push
pop
xor
stos
xlat
cmp
pop
pop
adcl
cmp
push
adc
into
inc
loopne
dec
inc
dec
jg
pop
daa
call
dec
fstpl
mov
inc
push
sbb
int3
mov
popa
pusha
and
testb
in
jecxz
lret
lods
movsb
cmp
movsb
pop
jecxz
or
jmp
rcrb
push
stos
pop
js
fimuls
ljmp
inc
mov
lcall
or
lahf
and
push
dec
pop
cwtl
inc
mov
fs
fnsave
adc
sldt
and
arpl
push
mov
or
inc
cmp
xchg
in
sarl
push
pusha
stos
inc
movsb
inc
lds
add
mov
movsl
push
sub
inc
out
js
cs
or
scas
js
mov
sbb
les
rcl
sub
scas
sbb
je
sbb
or
iret
dec
dec
movsb
std
and
cmp
les
ret
fs
ss
repnz
add
mov
xor
adcb
loope
add
adc
cld
insl
out
popa
jge
enter
push
imul
sbb
hlt
adc
cmp
sub
imul
jl
or
mov
ffree
icebp
in
div
and
add
xor
mov
cmp
ret
pop
dec
outsl
stos
add
aad
jne
pop
mov
sbb
jo
daa
movsl
enter
mov
mov
push
in
jae
mov
aad
cwtl
and
add
repnz
test
sub
push
cmp
scas
fmul
neg
adc
mov
or
sub
in
pop
pop
flds
cvtps2pd
inc
mov
dec
es
shl
jno
or
push
arpl
jle
push
mov
mov
test
fnstenv
xor
adc
lds
ret
ja
ja
adc
dec
jle
fcoml
pop
mov
inc
sbb
jmp
loope
in
inc
shl
xor
aaa
call
xchg
aas
mov
imul
sbb
sbb
add
push
popa
aam
lock
stos
clc
in
xchg
add
dec
mov
stc
test
rcr
jmp
jne
push
jp
std
push
mov
xor
lret
xchg
cmpl
incl
les
lret
push
sbb
mov
xchg
sbb
or
les
jmp
sub
outsl
inc
push
pop
inc
adc
fwait
lret
add
push
add
testb
xor
adc
repz
xor
and
cs
out
xchg
lret
sub
pop
xor
aaa
push
mov
cwtl
imul
scas
test
push
xor
pop
popa
jg
pop
push
inc
rclb
leave
arpl
pushf
fcoml
mov
adc
mov
sbb
out
or
sbb
out
or
xor
hlt
pop
fdivr
mov
bound
cwtl
cmp
push
pusha
add
rclb
mov
inc
sub
rcll
xor
clc
in
in
popf
mov
xor
mov
ss
inc
fucomp
mov
adc
cmp
xchg
ja
sti
or
xor
mov
mov
xrelease
ret
sti
mov
insl
mov
sarl
adc
jecxz
cmp
scas
adc
jg
pop
cmp
in
sub
iret
lret
and
data16
jg
roll
lods
or
jb
mov
inc
adc
jb
popa
add
je
pop
cmp
mov
sbb
in
dec
push
pop
mov
lods
push
mov
sbb
je
mov
sti
add
or
aas
loop
push
jp
lcall
inc
inc
outsb
adc
push
xchg
cmp
hlt
sub
enter
lock
adc
outsl
mov
stc
push
push
mov
rcrb
cmp
in
add
sarb
lcall
jb
test
mov
imul
and
jbe
jecxz
outsl
xor
enter
mov
aas
xor
pop
add
mov
push
test
arpl
adc
pop
enter
mov
dec
adc
outsl
int
sub
push
xor
mov
les
jne
and
sahf
pop
or
dec
inc
fs
mov
add
out
pop
loop
xchg
cmpsl
sub
jb
or
xor
push
out
inc
jg
pop
jns
push
sbbb
jecxz
push
fdivrl
dec
dec
xchg
js
mov
mov
loopne
rorb
cs
xchg
add
adc
in
mov
ljmp
push
pusha
in
inc
inc
lds
pop
ljmp
or
int
xor
clc
and
enter
mov
sahf
mov
pop
push
or
movsl
jl
cli
adc
loopne
push
xor
mov
out
and
aad
cmp
aaa
adc
imul
xchg
push
scas
xor
adc
dec
cmp
xorl
pop
adc
sbb
pop
jbe
fwait
mov
dec
pop
mov
ret
repnz
adc
cld
rorl
pop
enter
and
mov
imul
mov
outsb
mov
cld
and
aaa
shll
xor
les
add
jg
and
movsb
lds
jnp
adc
mov
pop
call
lcall
pop
imul
nop
xlat
push
or
jnp
imul
adc
adc
push
lcall
notl
inc
dec
sub
xchg
inc
jle
mov
out
sbb
mov
xor
cmp
faddp
jl
pop
push
add
push
in
fimuls
cli
jge
in
jo
mov
jmp
pop
pop
stos
or
lds
mov
add
xchg
xchg
jne
in
ljmp
cmp
pop
cmp
mov
add
xor
mov
jg
cmp
lcall
cmp
test
mov
cmpb
xchg
stos
insl
jp
decl
cmc
fmuls
dec
inc
arpl
js
popf
pop
daa
mov
mov
mov
add
lea
cld
lret
ret
add
fnsave
lret
lods
jge
mov
rolb
add
loop
out
jo
xor
mov
push
sarb
cmp
push
xor
inc
fs
mov
jb
idivl
ret
test
dec
xchg
dec
add
mov
add
aas
add
arpl
int3
add
je
fs
fwait
cmp
addr16
jl
mov
and
pop
push
mov
cmpsb
push
loop
mov
dec
cmp
inc
lahf
popa
in
call
push
sbb
inc
aaa
sub
out
pop
xor
xchg
pop
mov
push
cwtl
in
sbb
sbb
aas
sub
loope
stc
push
cmpsb
mov
out
repnz
jbe
or
fwait
loope
sub
cmpsl
add
push
int
ljmp
push
loope
punpcklwd
std
clc
jns
clc
sbb
inc
jmp
aad
mov
jmp
dec
loope
inc
in
in
inc
repz
stos
push
jmp
or
dec
xchg
adc
and
in
jge
cs
inc
pop
pop
jno
ja
mov
ret
dec
stos
xchg
aas
roll
mov
roll
andb
sbb
lea
rcrl
mov
mov
in
add
jl
push
mov
in
xor
mov
cmp
rcll
lret
jne,pt
sarb
scas
xlat
sahf
or
dec
aad
jecxz
mov
mov
daa
or
sbb
add
es
dec
mov
das
mov
mov
clc
dec
das
lods
test
vandps
and
xbegin
mov
mov
sbbb
daa
imul
add
adc
sti
ljmp
push
mov
mov
sbb
cmp
arpl
movl
push
cmpsb
enter
xchg
std
icebp
stc
sub
pushf
inc
scas
adc
cmp
sub
movb
sbb
mov
in
mov
ficoml
push
aam
add
xorl
xchg
pop
xchg
push
push
dec
or
pop
jge
mov
lret
jmp
cmpsl
or
fcmovu
cmp
mov
pusha
mov
cmp
lahf
mull
leave
jmp
jno
mov
movl
add
in
adc
imul
and
push
fcompl
inc
mov
xor
jecxz
mov
les
aam
arpl
insb
cmpsl
jae
sbb
pop
mov
fnstsw
shufps
das
movsb
popl
data16
in
cs
scas
jge
out
pop
mov
popf
fwait
pop
inc
push
cli
xor
jp
aaa
in
inc
sahf
dec
mov
orl
sar
hlt
pop
movsb
sub
xor
fisttpl
pop
dec
fstps
into
jns
les
push
pop
bound
sahf
out
xor
and
push
inc
push
inc
sbb
adc
imul
sub
mov
mov
lahf
out
jle
lea
mov
repnz
inc
rcrl
xchg
and
iret
imul
xchg
cmp
rclb
jns
js
mov
pop
testb
pop
test
out
xorb
arpl
inc
mov
xor
ljmp
leave
push
sbb
push
pop
mov
call
sub
push
scas
jne
and
sti
sub
fbld
xchg
mov
outsb
sub
mov
arpl
adc
adc
sub
aad
or
fildll
jp
jle
fcoml
add
adc
xchg
ljmp
push
inc
imul
lahf
fmul
cmp
cmp
out
jnp
ret
mov
pop
je
jb
lods
adc
jns
or
out
loop
repz
xchg
out
das
push
sub
jge
stos
icebp
pop
cwtl
jle
jne
out
dec
xchg
sbb
mov
xorl
inc
mov
xor
and
cmp
or
mov
jg
jmp
cmc
ficoml
into
adc
test
jle
in
push
je
jnp
and
pop
je
in
mov
xchg
mov
arpl
and
aaa
adc
cmp
push
mov
pop
pop
adc
add
icebp
andl
loope
pop
push
jmp
mov
xchg
adc
xor
loope
mov
sbb
int
loopne
rorl
mov
pop
sar
or
lcall
iret
dec
cmpsb
cmpsb
outsl
cmp
ret
pop
xor
cltd
fimull
lahf
aad
and
add
lcall
mov
dec
sub
in
pop
inc
call
pop
push
inc
cmp
shlb
jo
loopne
or
sbb
push
js
cld
xor
sbb
fistl
xchg
leave
inc
test
incb
xor
sti
gs
fistps
push
rcrb
in
test
mov
lods
pushf
inc
xchg
lret
shll
sti
leave
sub
pmaxsw
cltd
idivl
and
sub
jo
xor
or
ficompl
sub
push
mov
cmp
int3
xchg
sbb
ja
push
stos
imul
pop
cli
or
xor
pop
sub
cmpsb
add
les
jns
cmp
mull
movsb
ljmp
dec
jno
arpl
dec
xchg
sbb
pop
hlt
dec
into
loopne,pt
and
inc
inc
or
mov
mov
rcll
cld
stc
adc
shlb
sarl
xlat
inc
int3
push
inc
add
addr16
sbb
int3
test
or
stc
sarl
jl
pop
cld
pop
icebp
mov
test
fldl
push
pop
nop
insb
jecxz
mov
je
sub
mov
ja
cwtl
sbb
lret
mov
movsb
inc
addr16
stc
imul
cmp
lahf
stos
jge
imul
cmc
push
es
mov
sqrtps
add
lock
bound
inc
icebp
ljmp
push
push
loop
insb
jne
into
pop
movsl
sahf
push
jp
jecxz
adc
inc
or
sbb
loop
pop
push
jnp
jge
std
insb
inc
fs
or
lcall
cmp
cmp
loop
out
aas
cmpsb
insl
push
js
std
sbb
push
or
loop
push
jge
ret
push
jmp
cmc
lods
in
stos
icebp
pop
mov
inc
adc
xor
call
jmp
cld
aad
scas
push
leave
loopne
dec
fs
jl
test
xor
sbb
in
stos
test
xchg
ret
add
push
lea
mov
stos
add
arpl
mov
iret
push
pop
sub
out
pop
cltd
nop
xchg
stos
andl
fisubs
push
mov
jo
ficomps
xchg
adc
xor
xor
loopne
push
stc
sub
inc
dec
xchg
mov
push
push
xorb
fbstp
imul
ret
add
int3
or
adc
mov
sbb
sti
push
ja
jb
adc
out
and
xor
xor
fstl
rcrb
fistps
add
stos
mov
inc
xchg
sub
add
xchg
scas
in
adc
and
shl
push
lea
adc
inc
mov
loopne
insl
sbb
lods
dec
add
ror
fldl
push
pusha
mov
dec
mov
xchg
in
pop
sub
leave
int3
fisubl
mov
jge
inc
in
jmp
jmp
leave
je
push
or
mov
sub
pop
out
fsts
inc
sbb
adc
xor
movsl
sub
clc
sti
imul
mov
fwait
sbb
jp
inc
jecxz
call
adc
dec
movsb
les
mov
test
int3
imul
jmp
lds
adc
les
fmuls
mov
xor
notl
jnp
xor
add
outsl
leave
cmp
xor
leave
push
test
ss
lods
fsubrl
inc
aam
pop
jae
stos
add
mov
xlat
jns
mov
jp
rorl
test
mov
mov
jnp
mov
in
ds
mov
mov
ds
sub
add
jp
in
movsb
mov
cltd
mov
mov
not
mov
insl
rcll
jns
mov
sbb
jecxz
pop
addr16
arpl
mov
jmp
xor
cmpl
fcompl
out
xlat
test
and
push
adc
push
sub
outsb
push
lods
cmpsb
mov
xchg
movsb
xor
hlt
fs
lock
int
daa
repz
and
addr16
loop
testb
xor
or
pop
xchg
sbb
mov
cmp
outsl
movsb
fldenv
add
fsubrp
xchg
in
fisttpll
data16
push
jae
das
xchg
hlt
fmull
dec
cmp
in
add
shlb
mov
sarl
fcomps
call
push
mov
pop
xchg
adc
mov
jb
imulb
sbbl
movsl
and
divl
aas
cmc
pop
repz
jmp
mov
lret
enter
daa
mov
test
inc
popf
fbstp
mov
cs
jge
xor
pop
leave
hlt
dec
test
rcrl
inc
cwtl
xor
pop
addb
insl
aam
pop
push
lret
int
sub
jmp
adc
jg
inc
ljmp
adc
adc
push
xchg
jp
aad
or
cmp
push
test
mov
pop
hlt
and
cltd
dec
sbb
or
iret
or
mov
pop
mov
push
imul
bound
adc
test
jmp
mov
xor
xor
imul
mov
das
addr16
mov
lcall
and
test
ret
add
fxch
icebp
std
sbb
pop
imul
lock
lea
xchg
xor
fidivl
inc
add
fidivs
ja
xchg
ficoms
adc
fld
decl
dec
fisttps
paddd
in
sarl
je
push
aam
test
outsl
scas
lcall
add
flds
inc
jge
push
and
out
adc
shl
mov
cli
imul
or
vaddsubpd
cli
xchg
push
imul
test
xor
or
dec
xchg
sbb
jp
jne
lock
sarb
or
jg
cli
jl
pop
popa
pop
push
fsubrl
lock
dec
lds
sub
jl
cmp
xor
xor
insl
pop
mov
jecxz
or
aam
mov
ja
decl
push
jp
sbb
cltd
jecxz
jnp
test
jmp
fs
xor
orl
push
sub
loope
lcall
mov
dec
fs
cltd
ljmp
cmp
mov
repz
rcrb
sub
pop
and
xchg
push
mov
lods
arpl
pop
cwtl
ret
cmpl
xchg
push
mov
popa
xchg
cmp
mov
push
mov
or
push
ret
sti
jmp
cwtl
popa
push
xlat
stos
mov
enter
stc
test
sub
xchg
rcrb
cmc
xchg
iret
xchg
leave
int3
push
sub
adc
in
andb
jge
adc
pop
pop
adc
loopne
sbbb
mov
sbb
add
push
push
aaa
adc
xor
sbb
idivl
out
mov
xor
sub
adc
add
xor
outsb
leave
jae
cmp
push
pop
test
or
fiaddl
jnp
in
push
sbb
push
xor
ss
jle
dec
cmp
mov
orl
sub
mov
xor
mov
xor
cmpsb
fdivl
push
and
push
out
jbe
fucomp
fs
sbb
jmp
cmp
push
lods
sbb
xchg
mov
lahf
int3
mov
rolb
iret
andl
xchg
fyl2x
dec
push
push
mov
add
or
rclb
lock
movsl
movsb
sahf
sub
movsb
pop
sbb
out
filds
cmp
mov
and
and
sub
inc
loope
sbb
call
jle
xlat
daa
add
out
ret
nop
push
lret
sbbl
inc
leave
lds
mov
adc
sbb
sahf
lret
or
arpl
xor
cld
scas
jecxz
in
push
xchg
sbb
repz
mov
mov
or
and
ljmp
loop
out
pop
idivb
fidivs
imul
push
jne
xchg
xor
stc
sub
cltd
cmp
out
sub
lahf
ljmp
leave
ficomps
inc
mov
popa
testl
enter
jle
std
popf
mov
or
subb
lea
add
mov
inc
and
out
jp
mov
fmull
adc
add
sub
push
xor
fimull
repz
lock
push
ja
lret
dec
xchg
mov
enter
cmp
push
xor
lods
mov
test
scas
outsl
je
out
sbb
mov
mov
lods
xchg
fwait
loop
cli
stc
add
jno
sahf
cmp
pop
jl
mov
rclb
xchg
push
sbb
sub
aaa
xor
inc
xchg
cmp
mov
sub
rorb
enter
js
cmp
fs
in
test
loope
pushl
in
mov
pop
cmp
xor
xor
push
push
aaa
fwait
xor
sti
fidivs
mov
adc
imul
repz
or
mov
scas
xchg
jmp
xchg
outsl
cmc
fsubs
xor
mov
nop
idivl
xor
outsb
clc
loope
loopne
xlat
out
cmp
xorb
cmpsb
lahf
sub
mov
mov
xor
dec
add
jp
cmpsl
out
lock
xor
add
std
jmp
pusha
add
loop
jnp
or
mov
mov
sbb
imul
dec
fcoms
pop
or
cmp
call
mov
inc
leave
push
fdecstp
xor
adc
call
stos
mov
and
pop
sbb
andb
movsl
pop
aam
popf
inc
jle
test
loope
cmp
xor
imul
inc
xchg
jl
inc
push
out
arpl
mov
imul
inc
and
mov
shr
sub
mov
nop
inc
mov
mov
add
xchg
jl
roll
sub
push
sub
mov
in
pop
mov
cmp
xchg
loopne
loopne
xor
cli
jg
adc
cltd
ret
adc
jbe
repz
js
scas
fucomp
mov
add
dec
shll
jne
cltd
cmpsl
lahf
add
lock
or
push
jmp
lock
in
mov
adc
fwait
sbb
jle
mov
inc
arpl
mov
enter
sbb
imul
xchg
test
addr16
and
push
pop
das
aaa
test
add
push
sbb
mov
sbb
aas
rcrb
xlat
mov
mov
dec
int
add
mov
add
xlat
fwait
out
stos
fmull
lret
inc
fwait
out
in
scas
adc
cmp
leave
sub
xor
ss
jae
es
xchg
aam
dec
idivb
inc
imul
mov
add
testl
mov
dec
mov
scas
xchg
add
inc
ret
sahf
push
or
stc
sub
mov
sbb
inc
out
xchg
out
outsl
jae
and
mov
repnz
jg
sahf
adc
stc
int3
mov
jmp
ror
pusha
push
aam
loopne
movsl
andl
bnd
or
movsb
cmpsb
xorl
jl
and
sub
outsl
loopne
iret
in
mov
outsb
aad
fisubs
scas
cmp
pop
fildll
stos
test
xor
and
shll
jecxz
lahf
arpl
xor
sub
mov
jbe
ss
cmp
adc
arpl
fwait
out
call
sub
jno
jl
xchg
daa
inc
js
or
jp
or
push
lods
mov
bound
pusha
sub
push
or
mov
push
add
loopne
lods
cld
mov
push
ret
dec
cmp
lock
sbb
and
stos
clc
and
mov
or
cs
or
dec
mov
pop
aaa
push
inc
mov
pop
ret
jae
sbb
dec
call
xor
cmp
sub
pusha
jmp
es
jnp
xor
push
outsb
stos
push
shr
lret
mov
pop
or
dec
pop
add
in
fnsave
mov
test
insl
sbb
in
cltd
xchg
mov
loope
ret
inc
add
jae
inc
mov
pop
pop
pop
inc
mov
enter
pop
ret
stos
in
repnz
imul
add
push
mov
stc
xchg
loop
inc
sub
mov
jle
aad
add
push
test
outsl
push
jns
repnz
mov
mov
into
das
pop
cmpsb
pop
lcall
and
cmpsl
lods
and
hlt
sub
leave
jge
out
add
xor
int3
mov
push
or
sub
repnz
iret
loope
hlt
cmpsl
sbb
push
les
cli
xchg
arpl
pushf
fwait
sub
outsb
setl
gs
dec
push
xlat
sub
lods
jmp
add
cmp
pop
inc
xor
xchg
popa
ja
hlt
push
mov
out
iret
mov
pop
sbb
dec
pop
jb
fmul
and
xor
xor
pavgw
xchg
push
popa
sahf
xchg
ss
repz
and
jb
int
push
sbb
xlat
add
out
pushf
push
ret
scas
leave
mov
dec
fisubl
rcrl
mov
arpl
aam
pushf
rcr
gs
fisubrs
dec
dec
xchg
xchg
jae
popa
movsb
lahf
jle
repz
test
ljmp
inc
cmp
insb
or
xchg
mov
mov
xchg
aaa
test
push
mov
call
sbb
jnp
fcmovb
xchg
int3
mov
inc
std
lods
add
mov
loopne
cwtl
out
jno
cltd
in
sbbb
div
int3
subb
or
inc
push
and
movsl
adc
pop
stc
jo
mov
jg
outsb
insb
js
fnstsw
mov
sbb
fs
pop
add
push
into
inc
or
adc
jne
fucom
mov
add
mov
pop
mov
dec
stos
xor
pop
je
sbb
push
sub
mov
inc
and
sarl
lcall
xor
bound
and
loopew
faddp
test
outsb
sbb
fcmove
gs
std
cmpsl
fxch
aas
and
mov
push
sbbl
scas
js
ret
and
pop
jg
call
lea
shll
int
mov
pop
mov
mov
mov
xchg
add
jl
push
sub
fsubrs
inc
andb
mov
jo
stc
mov
fs
aas
sti
xchg
push
mov
jo
and
cwtl
ljmp
ss
aaa
add
imulb
push
sbb
popa
mov
cmp
push
jle
inc
or
jmp
mov
in
and
ret
or
dec
mov
cmp
jl
xchg
je
add
mov
out
inc
mov
call
xchg
inc
ljmp
fwait
bswap
jle
push
in
jbe
fldenv
push
cwtl
xchg
jp
fmulp
stc
in
sub
loop
xor
in
in
or
sbb
mov
in
sbb
sub
fsub
pushf
fcmovnb
dec
stos
out
mov
jno
aam
cs
cmp
cmp
imul
push
lret
jecxz
sbb
xlat
loope
sbb
push
xchg
shlb
lret
push
es
in
push
pop
and
mov
arpl
scas
dec
inc
xchg
mov
lahf
mov
pushf
shl
mov
and
sti
mov
in
sti
fs
mov
mov
mov
xchg
int
dec
push
cmpsb
ss
pop
stos
and
rcr
stos
dec
daa
mov
and
repz
popa
mov
add
xchg
dec
test
lods
inc
cmpsb
movsb
rclb
push
lods
xchg
nop
lahf
test
adc
out
adc
popa
stos
rcrb
and
in
testb
pop
mov
int
add
in
arpl
mov
arpl
movsb
xchg
sub
add
mov
inc
ret
sarl
sbb
or
sti
mov
aas
push
add
mov
fcmovnbe
fwait
in
repz
enter
scas
jns
mov
mov
loopne
dec
sub
lock
int3
cmp
push
jne
mov
jmp
insb
xchg
push
mov
dec
cmp
fwait
sbb
pop
int3
mov
shlb
hlt
addr16
iret
into
div
add
int3
jbe
outsb
jno
pop
mov
fcmovne
out
cmpsl
jmp
mov
rclb
pop
inc
mov
add
clc
outsl
clc
out
std
movsl
or
sub
stc
scas
lds
add
cmp
inc
test
pop
xor
jecxz
in
rcrl
mov
in
cmp
out
in
int3
sbb
mov
mov
pop
mov
stos
mov
std
mov
mov
push
push
adc
adc
mov
out
pop
add
sahf
mov
xor
sub
sub
mov
leave
push
push
fcomp
mov
rolb
stos
daa
mov
inc
lds
inc
fsubr
mov
xchg
es
pushf
mov
dec
jecxz
aad
leave
jae
or
dec
pop
sti
push
fidivrs
xor
mov
fldcw
push
jp
fwait
cmp
and
jmp
ds
dec
jb
lods
in
lret
and
data16
jl
cltd
les
shrb
sub
incl
popa
cmpb
jle
or
aad
in
adc
or
mov
je
xchg
mov
clc
cmp
aas
push
ljmp
cmp
daa
imul
xchg
pop
or
in
loopne
xlat
hlt
mov
negl
pop
pop
out
outsl
jnp
jmp
movsb
jmp
fbld
cmpsb
in
push
lcall
add
or
push
mov
inc
or
aaa
stos
aaa
sbb
or
in
sub
sahf
add
addr16
leave
and
int
mov
test
pop
mov
sub
jge
pop
mov
scas
pop
adc
mov
pop
fistpl
add
jp
cmc
ja
jmp
push
mov
outsb
outsl
mov
imul
mov
aad
xor
inc
movsl
addr16
xorb
rolb
pushf
mov
lret
lret
hlt
pop
pop
sub
xchg
outsl
scas
mov
jmp
lods
int
cmp
and
cmpsb
je
mov
mov
mov
not
mov
idivb
jecxz
btr
rolb
lock
mov
mov
shl
mov
xor
sub
icebp
mov
scas
mov
mov
and
add
pop
jns
jne
push
fbstp
add
push
mov
stos
ret
xchg
xor
cmp
or
sbb
xor
idivb
iret
cli
pop
xchg
jae
jmp
jno
dec
jns
dec
sbbl
sahf
lret
jmp
add
dec
and
mov
jp
popf
jmp
add
xchg
mov
add
mov
mov
cmp
mov
movl
adc
mov
push
fucomi
ret
fwait
ret
mov
cltd
add
daa
ljmp
pop
push
adc
inc
std
loopne
aas
popf
out
add
lods
xor
fisttpl
inc
adc
and
cld
mov
pop
cmp
xchg
push
mov
xchg
lcall
xchg
roll
outsl
sbb
jmp
xchg
ret
inc
ss
sub
and
jge
mov
xchg
mov
pop
sbb
xchg
or
cld
inc
mov
push
dec
pushl
popf
into
jb
popl
xlat
mov
pushf
icebp
sbb
test
cli
repnz
das
push
sbb
push
jge
mov
inc
cs
lahf
loope
ficoml
jl
out
pushf
mov
mov
fldenv
mov
cmp
dec
and
aam
fadds
xor
dec
leave
dec
jge
mov
stos
add
fisubrs
push
push
push
jmp
jo
rorl
dec
push
jl
lds
subl
inc
loopne
cmp
inc
mov
fists
fnclex
pop
jb
inc
out
shlb
inc
fisubrs
cmp
popf
inc
ja
ret
call
js
mull
push
out
mov
pop
cmp
repz
adcb
dec
nop
decb
jp
push
adc
and
lret
push
leave
dec
dec
mov
push
push
pusha
push
int3
nop
pusha
int
mov
xchg
addr16
test
jecxz
cmp
sbb
mov
push
outsb
out
loope
xchg
jecxz
xor
adc
sbb
bound
pop
jae
andb
enter
ss
outsl
ja
or
outsl
adc
push
out
mov
sbb
adc
push
cmp
push
mov
rcrl
dec
add
jle
ret
rolb
insb
int
jnp
dec
or
push
sbb
addr16
or
push
lret
scas
dec
adc
dec
lret
push
jns
xor
xchg
jne
xchg
mov
ja
andnps
stc
mov
inc
in
es
pop
enter
xchg
xor
arpl
in
lea
repz
jnp
addb
loopne
stos
pop
sub
fcmovu
outsl
cmp
es
xor
out
sub
arpl
xchg
sahf
fisttpll
sbb
add
mov
mov
call
add
or
shlb
insl
or
fcomps
lahf
push
cs
es
sbb
and
dec
cmp
xor
inc
shl
outsl
inc
fs
std
shrb
imul
sbb
addr16
int
out
popf
cmpsb
stos
repnz
aaa
test
fimull
hlt
push
pushf
cs
test
xchg
notl
inc
fbld
in
mov
or
xchg
xchg
add
test
test
pop
aam
imul
clc
inc
inc
test
dec
xchg
push
lahf
xchg
fisubl
into
fdivs
xchg
fildl
xor
enter
into
insb
fidivrl
fs
sub
fs
ds
imulb
push
addr16
es
lea
lods
outsb
xchg
aad
fcoms
and
call
cwtl
cwtl
or
jno
mov
ds
jo
add
mov
mov
movsl
dec
in
fisubs
mov
ret
mov
int
iret
and
pop
inc
push
push
je
int3
xchg
mov
decl
ja
scas
fistpl
scas
call
and
mov
xor
imul
dec
aas
mov
ret
adc
mov
mov
stos
pop
subb
xlat
sti
pop
mov
lds
outsb
xchg
fs
call
fcomps
cld
lret
pop
and
ja
mov
adc
sbb
adc
mov
jle
rcl
xchg
pop
ret
jb
testl
inc
ljmp
jno
fcmovb
dec
stos
add
dec
push
lods
incl
sub
mov
or
out
push
int3
lods
adc
pop
or
adc
dec
mov
push
jmp
push
mov
xor
sub
xor
lock
gs
mov
movsb
test
fisubrl
call
sti
pop
clc
pop
out
sarb
xchg
jne
cld
fs
xchg
or
shr
xor
push
cmp
mov
dec
cmpl
out
and
div
add
fsubrp
aas
jno
cli
les
mov
popf
pop
loope
cwtl
das
lea
xchg
or
lret
bound
stos
imul
jp
bound
mov
inc
incb
outsb
ret
mov
pusha
ret
mov
mov
sbb
cmp
inc
fists
inc
stos
in
cmpsb
xchg
notl
sub
cli
incl
data16
push
cmp
sub
fisubs
loop
jns
xor
pushf
sbb
mov
arpl
mov
dec
xor
mov
int3
jl
das
sub
test
inc
and
xchg
loop
out
lcall
pop
inc
aam
cld
inc
jo
cwtl
push
mov
mov
movsb
push
loopne
inc
enter
lret
adc
loopne
or
lcall
adc
cmc
test
cmpsb
xchg
and
pop
in
in
pop
push
loope
inc
psllw
sbb
sbb
sbb
xchg
fnstcw
in
adc
sbb
xchg
sub
xorl
xchg
lcall
les
push
enter
push
xchg
xchg
ret
js
jae
adcl
rclb
jmp
fs
jmp
xchg
cmc
div
sbb
jmp
add
mov
insl
dec
mov
mov
dec
ds
js
cmp
mov
inc
dec
pop
add
out
inc
aam
movq
jns
in
gs
sti
stc
int3
daa
push
and
push
add
test
lahf
push
idivl
out
xchg
jmp
mov
ret
mov
icebp
adc
mov
push
sub
pusha
test
mov
and
cmp
xchg
enter
inc
es
and
call
enter
popf
in
mov
dec
push
stc
into
push
fwait
mov
push
xor
cmp
jmp
cmp
jg
call
pop
test
sbb
pop
sahf
mov
jg
dec
pop
mov
cmp
fmull
movsb
sbb
cmpsb
xor
jbe
mov
or
adc
pop
push
mov
hlt
xor
ficomps
pop
mov
sub
nop
push
mov
mov
popa
jne
int3
push
pop
repz
testb
mov
or
insl
lret
js
in
fstpt
inc
cmpsb
pop
or
sti
call
jne
into
loop
mov
pop
and
pop
movsl
jl
push
addl
jne
test
xor
sbb
pusha
clc
mov
ret
mov
aaa
imul
jnp
xchg
ret
inc
xlat
pop
andl
test
bound
cmp
leave
loopne
mov
pop
sub
setp
push
stc
lds
int3
mulb
adc
or
pusha
jae
lcall
ljmp
test
or
stos
inc
cmpsl
or
adc
add
and
fs
hlt
push
jnp
int3
stos
test
movsb
or
mov
adc
stos
add
ret
push
jae
into
xchg
loopne
fists
pusha
push
pop
push
lods
jnp
jno
outsb
fistpl
jb
pop
bound
push
insb
xchg
loopne
pop
pop
ja
add
test
pop
out
inc
mov
gs
mov
outsl
and
shrb
sbbb
sbb
xchg
xchg
or
icebp
mov
fcoms
fisttpl
arpl
ja
into
push
mov
or
xchg
add
inc
mov
lret
inc
mov
dec
data16
mov
xchg
jne
stc
decl
ret
push
cmp
mov
orl
lods
fcomps
les
leave
or
ret
dec
clc
sbb
mov
xorb
fldt
jmp
adc
mov
xor
pop
fcmovne
mov
int
sbb
mov
sub
pop
ficompl
je
cmp
clc
jo
xchg
scas
shll
or
cmp
adc
loop
stos
je
adc
lcall
pop
shlb
imul
jp
aad
dec
sbb
fwait
sub
push
in
jnp
mov
or
es
fs
xor
mov
xchg
mov
jmp
and
in
ljmp
je
adc
bound
mov
cs
jb
in
dec
mov
idiv
mov
jecxz
mov
js
dec
jo
jge
incl
fs
xor
out
or
sbb
data16
mov
xor
ljmp
add
dec
pop
push
push
dec
dec
xor
stos
aam
xchg
iret
pushf
xchg
cltd
xlat
inc
or
mov
notl
jbe
fidivrl
or
repnz
pop
jbe
push
jbe
inc
pop
sahf
cmp
pop
outsl
loope
adc
jb
or
sbb
pusha
testl
insb
adc
add
fs
lret
cltd
mov
sbb
sahf
sbb
push
cmpps
cltd
je
out
or
dec
ljmp
add
insb
fs
test
imul
mov
add
adc
loope
clc
lret
or
and
pop
pop
test
push
pop
xlat
mov
fstps
push
jl
dec
push
mov
adc
outsl
mov
and
pop
pop
sub
negl
or
jo
aad
popa
and
adc
aas
xor
outsl
out
cmp
repz
ss
mov
shrb
movsl
andb
cwtl
xor
stos
pop
mov
push
cwtl
add
add
jns
call
mov
add
fld
insb
xchg
fwait
rclb
jmp
add
lret
and
clc
gs
shlb
xchg
stc
xchg
ret
rcrl
dec
sub
addr16
dec
adc
fistps
test
aas
dec
roll
out
jns
push
add
jl
push
test
aad
adc
inc
inc
jb
mov
adc
pop
shll
fldenv
daa
push
into
je
push
sub
push
mov
std
sbb
mov
stos
pop
or
mov
cmp
dec
lcall
sbb
dec
sub
in
push
ds
addl
je
sub
push
mov
pushf
xchg
fimull
push
insb
or
pop
jnp
lret
mov
lret
cmp
jne
push
jge
pop
andl
pop
and
cltd
pushf
push
lock
mov
and
mov
inc
pop
cmp
mov
mov
iret
push
push
sarb
sbb
xorl
xchg
mov
push
and
dec
out
mov
mov
daa
cmp
lahf
jg
sub
or
jmp
sub
or
addr16
sbb
cmp
pop
mov
nop
fwait
icebp
call
pushf
adc
rcr
daa
mov
scas
mov
test
dec
scas
adc
fwait
test
mov
aad
dec
std
fiadds
loopne
sbb
cmpsb
or
adc
lds
mov
dec
bound
xchg
mov
xorb
and
and
push
sub
inc
xor
aad
pop
in
pop
pop
ss
xor
or
push
xchg
mov
ret
xchg
mulb
or
ljmp
fs
xchg
out
xchg
mov
ret
pusha
xchg
push
mov
std
mov
enter
sub
xor
inc
xchg
pusha
std
mov
pop
in
xlat
mov
iret
testb
ret
add
push
out
ret
scas
push
xchg
dec
mov
rorb
je
pushf
or
movsl
push
ror
adc
push
adc
ret
mov
clc
mov
outsb
and
jmp
adc
mov
je
decb
xor
fsubrp
in
mov
sbb
pop
fwait
cmp
push
das
mov
mov
out
cmp
imul
mov
add
push
push
inc
jmp
dec
adc
push
mov
incb
ret
sub
mov
sub
and
mov
insb
adc
mov
fmuls
repz
movl
and
ja
repz
add
sub
xchg
ljmp
in
push
das
jg
or
jg
push
dec
xor
mov
and
movsb
out
add
mov
pop
shl
sub
dec
dec
outsb
push
push
pop
leave
dec
fistpl
insb
mov
int
adc
test
push
mov
xchg
repnz
loope
lret
cmpsb
xchg
test
test
mov
ljmp
jl
clc
rolb
pusha
daa
add
and
movsl
movsb
sbb
pop
idivb
cmc
mov
or
jg
mov
jnp
fcomp
jl
pushf
push
js
sbb
inc
mov
xchg
mov
sahf
push
pop
es
dec
sbb
sbb
adc
dec
jae
mov
push
xchg
dec
dec
mov
stos
clc
cli
xor
lods
std
xor
sarl
push
imul
and
pusha
pop
sbb
jl
int
and
test
pop
add
mov
xchg
fwait
xchg
nop
xchg
mov
shr
adc
rcll
jecxz
clc
xchg
orb
enter
test
inc
insl
ja
and
test
iret
cmp
pop
or
pop
push
nop
adc
fstl
jns
addr16
xor
cmp
push
mov
sbb
ss
imul
jae
out
inc
ja
push
outsl
stos
push
into
jl
sbb
and
mov
test
fucomp
adc
lcall
in
sahf
fdivrs
add
sbb
add
inc
rcrl
add
out
stos
lahf
and
pop
popa
ret
pop
pop
loop
rclb
xchg
xlat
ljmp
cmp
pop
dec
mov
dec
aaa
cmc
sub
pop
fstl
je
imul
movsl
rcrl
jb
fsubr
push
fincstp
jmp
das
xor
lods
push
xor
xor
mov
stos
jle
push
loop
fadds
adc
push
add
in
dec
fistps
cmpsb
pop
mov
in
push
cmp
inc
mov
inc
popa
outsb
in
les
and
sbb
dec
sub
xchg
cli
lcallw
mov
jbe
outsb
rclb
jae
testl
cltd
jo
ret
jo
mov
pushf
icebp
std
int3
fnsave
push
test
xor
or
jns
gs
andb
das
popa
repnz
lock
aam
pop
shrb
iret
imul
push
mov
jmp
cld
daa
or
in
jno
shrb
stc
movb
enter
sub
adc
sti
jl
test
imul
sbb
mov
push
std
lods
cmpsl
or
push
jp
mov
scas
test
outsb
sbb
mov
loope
pop
pop
subl
int3
or
sbb
lret
xor
xchg
cmc
sbb
ret
mov
ret
lahf
call
xor
ss
gs
cmp
movsb
in
cld
mov
jbe
jbe
and
xchg
lods
popf
cmp
fstpt
out
mov
dec
xor
lcall
mov
xchg
pusha
in
aad
sub
fcmovne
roll
xchg
aad
out
ss
xchg
push
shlb
and
arpl
cmp
cmp
adc
mov
add
out
add
jle
mov
adc
push
scas
sbb
hlt
dec
xchg
cld
mov
pop
dec
lret
and
shll
ds
fstpl
sbb
aas
daa
aad
add
push
xlat
xor
idivl
inc
mov
xchg
aad
fidivrs
cmp
dec
pop
popw
mov
int3
add
or
int
mov
push
adc
mov
push
ss
inc
aad
shrb
sub
jae
loopne
and
cmpsb
out
lea
cmp
add
inc
popf
pop
neg
decl
pop
std
cld
dec
jp
pop
rcrb
inc
cmp
cmp
dec
in
pusha
xchg
pop
mov
pop
inc
dec
lds
daa
mov
dec
leave
in
xor
and
jno
push
lods
incb
mov
lods
pop
popf
add
lret
mov
mov
dec
test
sub
pop
mov
adc
fs
cmc
cmp
and
push
sti
fcomps
popa
cmp
jle
xor
adc
add
fsubl
mov
mov
xchg
jno
cltd
inc
imul
sub
push
into
orb
js
sbb
pop
sarl
lea
mov
addb
push
push
jb
repnz
jmp
sub
xchg
shr
xchg
lods
push
in
pop
in
ror
imul
loopne
test
jl
aam
inc
add
cmpsl
mov
pop
add
leave
dec
push
inc
test
mov
sub
divl
sub
jp
fnstenv
mov
xor
call
sarl
add
jne
inc
movsb
dec
mov
push
es
out
inc
add
pop
cmp
mov
sub
xor
jmp
mov
sub
sarl
scas
pusha
sahf
into
cmpl
and
cmpsl
xchg
or
lcall
xchg
fdivrp
int
test
pop
mov
cmp
lds
sahf
xchg
cltd
sarl
clc
pop
push
stc
inc
pop
jle
cltd
or
or
loopne
inc
adc
insb
add
sbbl
xchg
jle
sbb
mov
stos
xor
dec
les
popf
or
sbb
xor
das
incb
insb
inc
adc
jae
pop
push
sbb
cwtl
cmpsl
jae
mov
out
add
pop
xchg
dec
dec
push
push
sarb
in
dec
mov
jno
dec
push
push
sbb
inc
lea
pop
xor
out
add
les
fdivl
rclb
inc
mov
add
je
sbbb
mov
test
cmc
loopne
pop
cmpsl
loop
es
sub
aas
mov
or
mov
int
and
dec
arpl
mov
sub
mov
testl
xchg
jle
adc
push
in
fmuls
jae
aas
hlt
outsb
loopne
adc
or
sbb
cs
mov
push
test
fwait
pop
pop
push
popa
jae
jns
xor
sahf
popf
inc
sahf
mov
cwtl
jo
inc
loope
or
xchg
pop
xchg
dec
dec
add
lcall
or
scas
repz
sub
push
test
int
filds
cmc
push
mov
mov
hlt
loopne
popl
dec
push
mov
dec
and
and
in
fcompl
xchg
aam
push
mov
xchg
jns
xor
into
or
cmpb
jo
mov
mov
pop
faddl
fmuls
push
popf
xchg
pop
push
jo
xchg
sbb
mov
mov
cwtl
mov
scas
out
cmp
xchg
and
jo
leave
or
xor
lock
mov
xor
je
jmp
inc
daa
xor
push
adc
push
mov
xlat
lods
repnz
divl
mov
scas
adc
sbb
sbb
mov
sbb
adc
inc
rorl
bound
insb
sub
or
dec
push
sub
or
add
cs
push
stos
dec
mov
xchg
pop
mov
cs
das
and
and
dec
imul
dec
dec
lcall
jbe
sub
pop
mov
cli
int
jmp
in
movb
out
xchg
mov
or
sbb
popf
lret
cmovnp
inc
xchg
stc
mov
fwait
inc
add
adc
mov
xor
lods
pop
enter
cmp
cmp
mov
add
ds
iret
ljmp
sbb
int3
xor
rcll
or
push
mov
push
or
pop
or
stc
push
and
xchg
xlat
test
daa
or
fadd
push
adc
cs
fdivs
mov
xor
bsf
mov
repnz
mov
mov
cli
std
mov
mov
pop
and
stos
cld
sbb
xor
imul
loop
mov
xchg
stos
js
fldl
dec
stos
xor
pop
cmp
icebp
rclb
icebp
jne
mov
sbb
inc
int3
mov
pop
iret
lcall
add
mov
push
daa
dec
shrl
jmp
ss
popf
cmp
dec
sahf
mov
stos
sahf
mov
jbe
outsb
pop
pop
mov
repz
cs
adc
stc
scas
sub
dec
jb
in
shlb
in
fsub
loop
or
sub
fdiv
mov
arpl
stc
loopne
das
lahf
pop
movsl
push
pop
push
mov
fwait
inc
jecxz
mov
mov
pop
ffreep
icebp
daa
mov
jbe
inc
inc
leave
inc
jne
inc
xchg
xor
das
xlat
lret
cmp
push
dec
cmp
lret
sbb
sti
or
aad
or
lahf
shr
enter
les
cli
adc
sub
jp
mov
and
sbb
movsb
std
lahf
mov
mov
out
int
fstl
mov
lcall
pop
loop
ret
call
das
into
cmc
add
cmc
subl
xor
aas
adc
or
or
or
je
call
jle
imul
mov
jnp,pt
mov
test
push
push
test
jge
test
xor
leave
inc
push
mov
btrl
push
xlat
mov
xor
out
xchg
roll
daa
cmpb
out
mov
fsts
mov
movsb
fldl
cmp
jp
mov
inc
inc
xchg
xchg
les
insl
xchg
sbb
or
divl
sub
out
in
mov
push
adc
pop
sar
jae
popf
and
stos
and
xchg
sub
test
xchg
push
inc
or
lahf
add
pop
and
fildl
pop
add
icebp
jle
scas
ja
jne
mov
aad
mov
xor
push
mov
clc
mov
push
mov
dec
cltd
fisubrl
add
inc
hlt
arpl
enter
data16
xorb
popa
loop
push
pop
incl
inc
mov
fldt
fcomps
cmp
stos
lods
xor
sahf
enter
dec
insb
mov
out
or
scas
push
mov
add
pop
or
rorl
ja
add
adc
outsl
inc
jg,pn
push
and
push
or
ror
test
or
adc
icebp
xor
inc
add
jle
inc
mov
add
jecxz
lcall
fisttpll
rcll
loopne
push
mov
lahf
movsl
jb
clc
nop
dec
andb
pop
mov
push
mov
sti
add
std
sub
mov
pop
fsubs
shll
pop
cmpsb
ss
pushw
loop
mov
or
add
mov
and
add
pop
cli
sub
pop
xor
stos
jmp
scas
fsubr
cltd
clc
jno
arpl
stos
out
mov
rorb
xchg
data16
cmp
sbb
in
adc
mov
and
iret
xlat
out
add
xchg
mov
mov
arpl
scas
mov
mov
outsb
ljmp
in
sbb
inc
lret
xor
mov
jnp
loopne
imul
mov
mov
mov
ret
pandn
aam
in
mov
dec
mov
xchg
push
inc
jo
mov
xchg
mov
popf
fdivrl
iret
push
notb
inc
cmovno
imul
out
push
mov
in
popf
ror
daa
add
test
sub
cmpsb
lods
out
cmpsb
xchg
fs
ret
push
xchg
dec
insl
pop
insb
push
jg
cmp
inc
cli
xchg
rclb
popf
fisubl
push
ds
add
mov
out
mov
xor
neg
or
push
cmc
sti
fcomip
in
out
popa
mov
int
jg
inc
and
mov
mov
bound
jle
pusha
xchg
sbb
out
mov
dec
repnz
sbb
mov
aaa
mov
sbb
pop
mov
or
xor
pushf
dec
pop
xchg
pop
push
mov
lock
icebp
je
mov
adc
loope
pop
dec
call
xchg
pop
xor
insl
mov
pop
add
sarl
call
test
icebp
pop
mov
jne
push
pop
push
push
adc
popa
decb
and
xchg
imul
jl
jnp
sti
je
ret
test
ret
dec
decb
add
lock
mov
cmp
cwtl
stc
call
push
leave
adc
mov
lea
jl
icebp
jbe
jl
bound
jae
lahf
stos
sub
push
jge
leave
pop
push
fsubl
data16
mov
or
movsl
mov
mov
mov
negl
push
xor
sbb
inc
adc
sbb
and
test
push
fmull
sub
and
pop
jg
dec
and
push
sbb
jnp
sub
jg
lea
rcll
out
xchg
imul
clc
inc
scas
mov
mov
mov
ss
mov
push
lcall
lea
shlb
movsl
inc
jge
imul
mov
and
ret
fldcw
inc
jle
xlat
mov
sub
jmp
push
xorl
lds
mov
pop
dec
idivb
jp
sahf
scas
ja
mov
fisubs
aaa
clc
test
popa
addr16
dec
mov
jmp
inc
or
cmp
pop
in
cmp
dec
outsb
mov
lods
insl
clc
cmp
push
cwtl
xlat
adc
mov
mov
lds
push
fdivrl
ret
mov
out
push
xor
xor
or
int
sub
xchg
iret
into
shlb
adc
call
jecxz
jbe
stos
mov
dec
lock
pop
dec
roll
mov
adcl
pop
or
xchg
fs
insl
movsb
loopne
loopne
sbb
mov
mov
sub
sbbb
jne
and
mov
rorb
fs
movsl
mov
adc
sti
xor
pushf
mov
mov
pop
cmpl
xchg
jge
pop
sbb
fnstenv
inc
pop
shrl
shlb
js
xor
cli
sahf
dec
clc
mov
imul
inc
movsl
pop
jg
mov
xor
popf
dec
in
dec
lcall
inc
outsl
mov
shll
out
mull
sti
in
pusha
pop
sbb
xchg
cmc
icebp
idivl
xchg
outsl
cmp
adc
addb
xor
inc
sub
cmp
shl
ss
fsubs
xchg
test
add
push
xor
iret
lret
clc
xchg
iret
insl
aam
lods
mov
notl
push
push
imul
stos
mov
jp
and
ds
mov
stc
xor
add
xchg
ja
mov
inc
cmpsl
or
hlt
sbb
adc
push
scas
inc
add
out
lret
mov
xchg
mov
gs
shl
shrl
jae
push
in
xchg
jmp
add
int
outsb
xchg
pop
icebp
fiadds
inc
cwtl
notl
sub
popf
je
xchg
jecxz
or
jle
aaa
std
dec
fists
shr
into
push
sub
sahf
pop
sbb
call
and
shll
iret
cmp
and
pop
std
jne
movsl
es
clc
mov
mov
scas
movsb
outsl
arpl
push
add
and
cmp
mov
out
hlt
push
fcmovu
repnz
jne
add
add
push
sub
imull
dec
xor
sbb
cmp
pop
nop
push
xor
jno
jne
movb
jg
fisubl
push
xchg
mov
stos
aaa
push
sub
jle
aaa
or
cld
pop
gs
fistpl
adc
mov
push
stos
dec
push
out
incb
pop
mov
sub
and
xor
and
lock
and
sub
jmp
or
cmp
nop
pop
sbb
dec
sub
pop
movsb
int
fildll
inc
mov
lret
mov
loop
call
xchg
vmovhps
jbe
jge
in
mov
nop
jge
push
push
inc
inc
add
sahf
test
xchg
and
jno
insl
push
sub
push
pop
jg
xor
jne
nop
dec
add
mov
test
and
fldl
std
mov
cmp
movsl
xor
cmpsl
push
lock
xchg
andl
cmc
out
insb
js
add
adc
mov
jns
jl
pop
ret
push
mov
mov
add
rcll
sarb
ja
mov
sub
or
push
pop
sahf
popf
xor
inc
xchg
rcrb
add
jne
icebp
sarb
mov
xor
int
pop
or
pop
daa
out
mov
test
es
pop
push
loopne
sbb
insl
mov
aam
pop
aas
rol
pop
xor
idivb
mov
jno
push
insw
dec
cmpsl
fsts
stos
pop
xchg
lea
sbb
test
sbb
mov
lcall
rcrl
repz
enter
dec
and
stc
mov
subl
dec
inc
jnp
cmc
roll
test
rclb
daa
clc
repnz
sub
jmp
xor
add
and
mov
xor
mov
mov
in
hlt
aam
pop
mov
or
jle
push
inc
push
mov
pop
adc
ret
ss
fwait
loop
pop
inc
mov
in
mov
xor
enter
xchg
mov
lret
clc
xor
sbb
sbb
aaa
lahf
pushf
popf
in
pop
jge
mov
sbb
mov
mov
ljmp
xchg
icebp
lods
fdivrl
xchg
out
sar
daa
mov
testb
xchg
cmp
popa
xor
lock
mov
aas
dec
mov
jl,pt
data16
adc
fcom
mov
into
add
int
popf
inc
mov
jl
jecxz
cld
and
iret
out
jl
test
or
dec
test
dec
cmp
xchg
or
mov
in
sub
inc
imul
jo
inc
sahf
repnz
and
es
jle
mov
in
test
jno
aad
sub
xchg
or
cmp
lds
jbe
mov
iret
mov
sub
cwtl
fsubl
or
inc
jae
aas
sub
push
push
xor
jno,pt
and
data16
in
mov
pop
push
divl
dec
push
popf
pop
push
sub
add
sbb
pusha
out
cmp
add
scas
mov
mov
xchg
outsb
scas
call
pop
gs
sub
jecxz
inc
mov
mov
sbb
adc
repz
push
mov
pop
mov
pop
dec
cmp
ja
jge
pop
test
xor
faddl
xchg
lea
sbb
inc
and
mov
push
or
adc
xchg
lock
or
mov
adc
and
les
out
in
jne
sub
push
sbb
in
test
sub
xor
dec
push
fwait
mov
xlat
lods
loope
pop
in
aas
mov
xchg
mov
mov
cmp
add
cmp
rcr
inc
ficoms
adc
add
dec
shlb
add
mov
sub
cmpsl
pop
xchg
xchg
xchg
add
leave
jle
movsb
aaa
incl
addr16
pop
xor
outsl
ja
inc
mov
fnstsw
int3
js
idivl
mov
aad
jp
or
adc
xor
sub
cmp
icebp
mov
xor
add
mov
int
mov
sarb
pop
outsl
mov
jge
icebp
aaa
pop
stos
imul
push
sbb
iret
push
insl
ja
and
pop
xlat
jmp
cmpsl
clc
push
push
fsubs
lret
sbbb
dec
and
in
dec
sahf
lret
jle
mov
dec
int
inc
icebp
mov
mov
push
repz
mov
or
cmp
push
add
xchg
jno
mov
xchg
rclb
in
adc
outsl
and
jp
test
sahf
or
std
push
std
sbb
jmp
ret
xchg
stos
cmp
push
daa
lret
and
rcrb
es
or
inc
add
xchg
call
adc
push
or
xchg
mov
sub
mov
push
lods
add
xchg
rorb
mov
bound
fs
dec
push
mov
jmp
ficompl
pushf
cmpb
ss
cltd
repnz
shll
xchg
adc
aaa
mov
test
add
sub
loopne
lret
adc
adc
cs
xchg
ja
lods
mov
sarb
pop
pop
rcrl
fwait
ljmp
insb
sub
xchg
and
xlat
sub
movsl
divl
pop
mov
out
stc
jmp
ljmp
add
int
int3
sub
sub
es
pop
xor
es
hlt
popa
jb
pop
mov
sbb
jg
inc
and
imul
out
mov
mov
dec
into
loope
in
mov
sbb
mov
cwtl
or
enter
test
imul
jmp
rcrb
stos
jmp
int
mov
test
xchg
jle
test
mov
sub
dec
mov
lods
mov
sar
aas
sub
aas
out
pop
cmpb
cld
jno
mov
dec
mov
lds
mov
cmp
add
call
cltd
data16
cmp
mov
add
jle
xor
adc
push
jg
loope
lods
fsubl
mov
mov
cld
shlb
xchg
outsl
xchg
adc
and
xlat
dec
cmp
data16
jbe
fnstenv
lcall
adc
inc
sbb
jg
scas
xchg
mov
outsb
sbb
in
inc
or
movsl
jae
dec
inc
outsb
pop
bound
repnz
js
xorl
decb
jb
dec
fcos
dec
fmul
out
sub
and
cmp
sub
sub
mov
pop
xor
rcl
in
clc
fisubrl
imul
sub
push
nop
adc
loop
gs
jno
sbbb
pop
and
notb
or
dec
fbld
jmp
outsb
or
lea
push
push
in
cmp
addr16
ret
add
jae
inc
outsb
scas
cmp
out
and
add
cmp
cli
and
loop
insb
mov
jl
hlt
out
mov
and
lods
sub
and
lahf
test
sub
lods
xorb
mov
inc
cmp
sub
inc
mov
adc
mov
mov
scas
xchg
out
pusha
loopne
lahf
in
inc
pop
inc
arpl
loope
int3
sub
mov
lock
push
mov
or
data16
pop
hlt
cmp
inc
fs
jns
jno
fisttpll
movd
in
mulb
ja
imul
sbb
mov
xor
cld
shrb
mov
jl
cmp
sub
push
scas
jl
dec
stos
mov
or
jno
test
push
pop
mov
cmpl
push
sub
dec
aaa
jmp
out
inc
call
sarl
iret
out
pop
mov
daa
loopne
orl
pop
xchg
add
pop
inc
int3
outsb
pop
test
xor
mov
in
into
jo
xor
jecxz
es
xchg
ret
ljmp
add
scas
mov
adc
pushl
cmp
iret
repz
testl
sti
sub
das
inc
scas
push
dec
xchg
xchg
fisubs
in
inc
imul
aaa
pusha
ret
sub
jmp
test
add
sub
cwtl
lea
out
imul
jmp
in
fwait
xor
xor
dec
push
sahf
fildll
repnz
jns
lahf
int
mov
mov
mov
lret
je
cmp
aam
out
fistl
xchg
mov
mov
nop
clc
sbb
scas
add
pop
je
pop
std
mov
loop
scas
fidivl
pop
cld
pusha
jecxz
testb
push
dec
cmpsl
fwait
leave
jecxz
inc
das
mov
pop
mov
cld
pop
jg
or
pop
sbb
inc
mov
mov
cmp
sbb
cmp
test
into
loope
lods
sbb
push
scas
popf
and
push
sbb
shrb
push
mov
ror
cli
or
stc
xchg
mov
fiaddl
xor
jno
ss
repz
push
je
mov
cmpsl
ja
or
jno
xorl
jae
incl
sbb
cltd
mov
in
cltd
jae
mov
lea
adc
cmp
fsubrl
data16
stos
scas
and
loope
mov
pushf
adc
mov
es
jmpw
adc
divl
pop
cmpsl
mov
std
inc
mov
lods
shll
xor
push
sahf
test
imulb
mov
movsl
push
add
movsl
daa
cli
dec
rdpmc
xor
std
and
push
and
xchg
xor
push
divps
stos
cwtl
fiadds
pop
or
add
clc
adc
or
jg
sbb
or
in
adc
jmp
mov
or
call
sbb
adc
gs
aam
insb
ficoml
jg
dec
imul
std
mov
xor
lods
subb
inc
xor
clc
dec
leave
jl
adc
pop
iret
lahf
mov
and
cmpsb
lcall
xchg
push
cmp
or
add
pop
cmp
ret
mov
out
mov
inc
dec
xchg
scas
lock
jae
roll
repz
push
sub
out
push
das
shrl
lret
pop
xor
stos
or
pop
sarb
xchg
sbb
loop
fldenv
rcrl
stos
mov
ret
inc
dec
mov
mov
xchg
outsl
bound
lcall
ret
cvtdq2ps
mov
cmc
ret
fidivl
push
pusha
pop
push
push
xlat
int3
and
adc
fs
insl
mov
in
sub
or
sub
dec
aaa
mov
cmp
mov
pop
xor
push
mov
pushl
mov
pop
mov
addr16
int
lea
jecxz
cltd
adc
cmp
sbb
sub
mov
pop
test
add
mov
jl
call
adc
and
pusha
xor
fdivl
sbb
lea
sub
sub
push
dec
mov
aaa
out
shlb
movsb
mov
fstl
loopne
icebp
es
mov
adc
pop
in
xorb
pop
lea
mov
sbb
and
daa
mov
pop
in
fs
cmp
aas
add
sbbl
mov
dec
mov
insb
sbb
dec
pop
and
mov
insl
pop
out
je
pop
repnz
mov
jno
hlt
jbe
test
cld
into
mov
mov
add
xor
dec
adc
sahf
and
sbb
adcb
shlb
nop
rcl
aas
jnp
xchg
addr16
rorl
push
leave
mov
xchg
mov
mov
xchg
or
xor
out
push
jnp
pop
ror
mov
movsl
mov
cmpsb
dec
pop
xor
mov
sbb
fsubl
lret
out
decb
mov
sar
push
xor
dec
repz
cmpsb
xchg
xchg
lcall
xor
cmpsl
fcomip
and
std
cmp
adc
insl
xchg
test
loopne
jae
sbb
testl
cmp
xor
mov
and
cmp
aaa
mov
mov
mov
mov
fs
les
cmp
es
jp
test
int
pop
push
mov
mov
inc
inc
test
push
pusha
imul
andb
sub
sbb
inc
sbb
adc
lock
xchg
sbbl
jnp
bound
add
les
mov
xchg
cmpsb
in
jo
inc
inc
mov
ds
pop
xor
icebp
bound
fimull
loopne
push
sbb
jmp
or
ljmp
pop
insl
mov
xor
mov
and
std
push
sub
mov
shlb
adc
lcall
sti
scas
clc
cmc
scas
xchg
xor
stc
fldl
mov
leave
adc
test
stos
icebp
xor
cmpsb
pop
cmp
inc
daa
inc
sub
sarl
in
out
mov
push
mov
rorl
int
inc
xor
jl
or
sub
xor
ss
xor
popf
cltd
mov
dec
push
mov
jns
imul
inc
xchg
bound
pop
test
and
adc
aas
enter
jb
lahf
roll
addr16
fisubs
jno
sahf
loop
loope
add
push
mov
inc
aad
dec
fwait
add
fstpl
mov
jmp
fidivrl
jne
mov
lods
pop
jmp
lret
int
lods
js
fdivrl
gs
sarl
jne
loopne
mov
sbb
aas
cmc
cmp
out
mov
xchg
icebp
dec
jg
and
adc
addr16
add
cmp
arpl
xchg
fwait
lods
loop
cli
test
mov
xor
add
cmp
dec
fmuls
add
shlb
bound
arpl
cmpl
mov
dec
push
mov
testb
mov
cmp
dec
xchg
jns
xchg
mov
jmp
or
sub
xchg
sti
loop
adc
scas
js
add
jl
push
or
pop
jecxz
xlat
rcll
mov
into
jae
scas
mov
push
mov
hlt
cs
push
dec
xor
inc
xor
or
xchg
stos
or
xchg
iret
aas
cmc
sub
add
mov
bound
mov
add
repz
in
push
out
in
inc
fldenv
jg
xchg
xchg
cmpsb
push
xchg
sbb
sbb
cmpsb
jbe
ffree
and
sbb
mov
xor
mov
cwtl
wrmsr
dec
inc
xchg
int3
repz
add
imul
sub
push
ret
jle
xchg
ljmp
loopne
xchg
pop
xchg
subl
ret
dec
push
jge
hlt
lea
ret
cmpl
js
xor
jmp
pop
gs
dec
and
xlat
push
mov
xor
dec
cs
adc
pushf
sarl
push
push
and
inc
out
aas
adc
fwait
les
jl
dec
cmp
dec
icebp
mov
and
inc
pusha
mov
leave
sbb
stos
call
mov
mov
imul
adc
aaa
jo
mov
jmp
ja
andl
shrb
insl
ljmp
cmp
fistpll
cmp
xchg
and
sbb
cwtl
repz
out
outsl
aas
sbb
sub
ljmp
mov
stc
fsts
dec
xchg
mov
or
mov
ret
xlat
xor
dec
lahf
pushf
push
cmp
adcl
cmpsb
daa
out
imul
aaa
jo
xorl
jecxz
lea
scas
inc
cmpsl
jmp
jmp
push
insb
leave
fsubrs
xor
push
bnd
movsb
dec
lret
mov
ret
sbb
lahf
xor
adc
cli
xor
int3
insl
push
repz
incl
lock
or
aas
xor
cmp
popa
xchg
mov
dec
mov
cmp
mov
movsl
cld
stos
mov
data16
cmc
adcb
xchg
loopne
jne
sbb
imul
sbb
addr16
rcll
xor
xchg
mov
bnd
jge
inc
and
add
das
xor
mov
movsl
or
or
jnp
inc
iret
in
xchg
jbe
negb
or
mov
ss
xchg
sbb
ljmp
xor
jmp
stc
sbb
mov
sbb
pop
cld
push
jge
mov
cmpsb
pushf
fwait
inc
arpl
and
in
das
sub
sti
push
push
sahf
int3
loop
inc
mov
mov
sti
sub
jecxz
cmp
outsb
sbb
neg
add
imul
sbb
push
or
xchg
je
push
mov
cli
imul
jle
add
cmp
dec
fwait
test
fiaddl
mov
mov
std
cmp
cld
pop
sub
insb
movsl
into
cmc
stos
mov
add
and
mov
loopne
enter
aam
or
cmc
mov
mov
lods
xchg
ja
dec
testl
mov
andl
and
push
xor
shlb
add
int
fnstenv
faddl
xchg
pop
mov
and
ljmp
xor
cmp
hlt
add
add
out
insl
dec
lret
repz
pop
ja
ss
in
cltd
aas
adc
insb
sti
cmc
cli
imul
jo
or
xchg
dec
leave
aam
cmpsl
lods
xor
sbb
mov
mov
dec
rclb
sub
into
inc
push
mov
out
mov
pop
lock
adc
cmp
js
inc
and
jmp
or
in
cs
and
add
lret
test
cmp
std
nop
adc
jg
mov
ret
ret
add
sbb
or
loopne
in
xchg
mov
fdiv
mov
inc
sub
push
aam
out
xchg
mov
mov
lock
cmpsb
out
dec
aas
lret
push
nop
lods
mov
ja
out
add
jmp
stos
scas
push
nop
cmp
cmp
movsb
add
sbb
stos
add
xor
jnp
jnp
add
xchg
pusha
push
popa
cmp
inc
or
mov
dec
ss
out
hlt
sbb
mov
cmp
mov
inc
test
loopne
in
dec
stc
in
addr16
iret
loopne
imulb
out
xchg
test
push
mov
mov
addr16
cmpsb
loope
aam
push
push
mov
mov
scas
and
inc
fiadds
iret
aas
lods
int3
lock
xchg
mov
in
dec
ficomps
outsb
cli
or
adc
std
add
mov
mov
arpl
sbb
fistpl
jae
mov
insb
test
stos
stos
jmp
testb
pop
hlt
in
xchg
aaa
stc
push
clc
xor
ja
mov
hlt
testl
das
inc
call
dec
aas
loope
mov
sbb
push
mov
pusha
mov
xchg
pop
add
sbb
sbbl
pusha
xor
adc
mov
ja
popf
add
insl
movb
lock
mov
scas
test
shlb
push
fcmovu
mov
cmp
loop
inc
ss
dec
mov
xchg
adc
pop
test
rclb
sub
pop
inc
repz
and
movsb
mov
repnz
mov
mull
inc
notb
fs
adc
push
cli
inc
arpl
mull
pop
movb
inc
inc
xchg
and
push
mov
sti
out
ficoms
push
clc
fwait
pusha
pushf
aas
dec
inc
xchg
sbb
xchg
pop
add
mov
mov
int3
sub
in
lret
pop
inc
aas
dec
outsb
out
aaa
pushf
lret
aas
cmc
adc
sti
or
add
bound
sahf
add
rcl
pop
sub
pop
je
mov
pop
movsl
cmp
push
push
sbb
lahf
in
mov
nop
shlb
jnp
mov
jmp
pop
inc
sahf
xlat
jecxz
cmpsl
lock
ss
adc
fisttpl
dec
iret
into
dec
aam
push
and
std
jno
ret
outsl
pop
stos
mov
stos
xor
dec
scas
ds
sub
repnz
lods
int3
outsb
push
into
shrb
fs
cmp
sub
nop
inc
xchg
jecxz
add
scas
cmp
loop
sub
mov
fs
ja
jno
std
and
lea
push
or
outsl
inc
adc
sbb
aad
jmp
pop
jge
jge
push
lds
gs
arpl
xchg
iret
cmpl
xchg
jns
div
add
jmp
rorl
sbb
push
out
push
push
add
mov
inc
xchg
jle
fists
dec
cmp
add
mov
mov
ljmp
rclb
add
aad
movsl
mov
rorb
inc
dec
pop
push
sbbb
pop
lea
data16
pop
push
dec
aaa
fisubrl
or
mov
adc
cmp
inc
inc
jmp
mov
dec
mov
mov
lock
dec
dec
mov
in
call
stc
roll
dec
or
cmp
sub
add
xchg
out
cltd
xor
test
fimuls
std
adc
jl
sbb
jns
ret
fbstp
xchg
xchg
movsb
or
cmp
jmp
and
or
sahf
xlat
fiaddl
fwait
repnz
insl
cs
hlt
int3
sahf
cmp
jle
cmpsb
ss
sbb
xor
mov
pop
fcmovnbe
cmp
pop
add
in
pop
int3
bound
test
ljmp
pop
les
pop
dec
stc
hlt
clc
cmc
pop
inc
or
shlb
test
pop
pop
sbb
lret
mov
sub
idivl
jecxz
lahf
pop
sub
xchg
pop
sbb
mov
jg
xchg
repz
and
insb
mov
xlat
sbb
jecxz
lock
lret
test
ss
jmp
jl
mov
cmpsb
inc
aas
shlb
xlat
jmp
xor
fs
stos
jmp
mov
movsb
jno
lahf
jecxz
xor
aaa
js
push
cs
xchg
xchg
das
lret
pop
mov
xor
jl
test
ret
std
repz
int3
ret
lods
xor
cmp
jbe
lahf
aam
pop
jb
jg
or
repnz
rcl
ss
cmp
cmp
cmc
inc
add
xchg
mov
push
fstpt
xchg
pop
call
mov
sti
test
and
loope
push
scas
xchg
push
icebp
lcall
gs
inc
push
mov
hlt
add
mov
test
out
shlb
push
cld
daa
ja
ret
es
cli
xchg
mov
sahf
mov
divl
cli
out
jge
cmc
add
inc
cmp
sbb
scas
out
mov
sti
ja
inc
and
adc
hlt
in
cmpsl
sar
mull
ja
push
mov
jl
jne
ret
and
and
push
sub
sahf
sub
insl
jo
add
jae
jo
les
pushl
or
icebp
repz
inc
jmp
popa
mov
inc
adc
call
dec
cmp
lcall
lock
sub
xchg
addr16
and
ja
inc
ret
ret
repz
pop
sbb
lds
inc
pop
fisttpll
aam
sbb
imul
rcll
sbb
pushf
and
adcl
xchg
pop
iret
fsubs
pop
loop
push
cmp
mov
cmp
js
decl
cmp
xorl
lds
mov
rol
pop
mov
sbb
outsb
and
inc
out
cmp
mov
jecxz
fcompl
xchg
jb
xchg
xor
ffree
fsub
adc
addb
movsl
pop
sbb
repz
popf
mov
icebp
fstpt
stc
enter
clc
xchg
negb
ret
cltd
jmp
cli
mov
dec
ret
ret
imul
mov
fs
in
or
xchg
cmp
mov
rorb
xor
sahf
add
out
icebp
adc
pop
pop
mov
in
adcb
ljmp
pop
arpl
xchg
cmpsb
push
in
insb
sub
xor
ret
clc
push
out
js
sbb
in
sbb
aad
fstpt
inc
jle
cltd
mov
loopne
inc
fcoml
int
test
inc
fildl
popa
push
xchg
fwait
mov
aad
lods
loope
push
push
orl
shrb
out
mov
mov
dec
push
mov
lea
hlt
leave
xor
adc
out
add
lahf
pop
out
jg
or
or
sub
or
jo
sub
aaa
bound
xor
push
icebp
mov
xchg
push
in
and
mov
xchg
mov
xchg
add
inc
adc
stos
imul
xchg
push
xor
mov
adc
scas
jns
test
jnp
insl
ret
inc
in
push
mov
dec
jno
pop
dec
mov
test
sbb
rorb
add
sti
mov
xchg
cltd
or
pop
xchg
or
adc
mov
roll
inc
lret
lret
mov
frstor
rolb
push
movsl
cmp
fimull
jae
lods
shlb
dec
or
and
or
mov
js
pop
xlat
jmp
and
xchg
xor
xor
in
out
call
dec
pop
mov
imul
incb
scas
mov
adc
out
xchg
mov
or
cmp
mov
cmpsb
or
mov
stc
mov
pusha
aad
imul
in
imul
test
xchg
cwtl
dec
test
pop
inc
fucomp
lret
jno
rclb
pop
in
xchg
insl
push
andb
add
leave
stc
mov
cmp
fwait
cmp
fistpll
inc
mov
imul
add
xadd
inc
sbb
mov
mov
cmp
adc
popf
fisttps
jbe
lcall
pushl
mov
icebp
sbb
in
cld
or
push
add
adc
sahf
imul
jno
jae
repnz
mov
popf
loopew
pop
pop
jl
dec
xor
cmp
xor
and
cmp
in
imul
xorl
js
pusha
cmp
add
sahf
frstor
scas
and
pop
stc
cpuid
add
pop
shlb
mov
mov
jne
fiaddl
sub
cmp
out
pop
cld
pop
mov
mov
add
jmp
scas
jae
iret
or
loope
inc
test
xchg
cmpsl
xor
in
aas
sti
mov
adc
repz
popf
or
dec
popf
xchg
popa
sahf
rcl
inc
rclb
and
cmc
cmp
jle
jnp
adc
mov
jmp
and
sahf
mov
cmpsb
fwait
xchg
sub
ljmp
adc
sahf
cmpsl
je
pop
xchg
push
fcomp
mov
push
pop
in
and
jge
cmpsl
jnp
sub
mov
lods
jecxz
and
rcrl
outsb
cmp
sub
jno
dec
xor
xchg
xor
dec
movsl
in
ljmp
dec
in
loope
sbb
and
adc
leave
and
jge
testl
loopne
or
jns
lods
fsub
jl
pop
dec
xor
push
jne
in
cltd
cmp
adc
fildll
loope
lods
mov
push
mov
or
std
or
pop
mov
mov
xchg
out
jmp
fs
or
inc
stos
aas
into
xchg
js
lahf
ss
jbe
cmp
push
pop
lds
jmp
in
jl
cmpsb
pop
lret
sbb
test
daa
into
loopne
cli
std
mov
lods
jecxz
enter
xor
gs
sbb
or
int3
lahf
xchg
mov
jne
pop
lods
xor
jbe
into
hlt
int
push
mov
call
or
push
dec
cmpl
push
test
ss
or
adc
or
sbb
jnp
inc
shll
mov
icebp
xor
lock
lock
cmovnp
roll
inc
in
mov
pop
fbld
push
ljmp
mov
stc
xchg
mov
outsl
sub
mov
mov
ja
jle
dec
mov
mov
xor
sbb
outsb
xchg
sub
mov
aas
and
dec
xchg
mov
fidivrs
je
jp
sub
jp
dec
sub
push
test
adc
jp
cmc
popa
or
sahf
icebp
inc
in
xchg
fldcw
or
leavew
adc
xchg
pop
mov
push
addl
push
dec
pop
movsl
test
pushl
xor
push
jnp
push
in
lds
dec
outsl
sarl
ss
outsl
pop
dec
fisubl
jnp
pop
jmp
inc
cltd
arpl
fnstenv
mull
and
popf
or
fcompl
cmpsl
daa
int
fs
sbb
sti
aam
push
jb
jle
or
daa
push
clc
mov
adc
cmp
das
mov
sub
pop
sti
adc
xor
dec
inc
ret
or
dec
or
push
sub
mov
ljmp
xlat
pop
dec
fidivs
pop
pop
sbb
in
ror
mov
idivl
inc
ret
cmp
cmp
mov
xchg
dec
movsb
jg
fildl
adc
test
xchg
fimuls
jge
filds
inc
sub
pop
inc
pop
imull
xor
inc
dec
jbe
mov
jno
flds
push
mov
cs
dec
lea
inc
or
movsl
mov
push
das
sub
jle
les
iret
xchg
cmp
dec
les
push
popa
pop
and
popf
push
mov
push
push
rcrb
inc
js
cmpsb
cmc
sti
mov
dec
sahf
pop
movsl
add
dec
into
jmp
mov
sub
push
adc
xchg
add
pushf
ljmp
dec
inc
sub
aam
loope
and
pop
mov
sbb
mov
add
mov
xor
sub
or
test
xchg
icebp
pushf
addr16
lods
or
push
sahf
ss
and
mov
mov
sbb
or
incb
xchg
ss
adc
inc
pop
mov
repz
and
push
fstpl
iret
std
jno
hlt
fcmove
rorb
hlt
lret
int3
out
jnp
mov
jg
add
cmp
add
addr16
sti
and
mov
pop
sub
stc
push
or
mov
or
out
add
mov
push
ss
idiv
pop
inc
in
fdivrs
lds
aas
lss
iret
adc
adc
popl
mov
loopne
dec
fwait
sbb
mov
sbbb
push
cld
enter
pop
addr16
jge
jge
stos
in
mov
xlat
incb
cmp
out
lods
std
stos
pusha
hlt
lods
inc
xor
pop
and
xor
add
aaa
jl
ja
rolb
orl
mov
xchg
push
stc
jp
pop
or
stos
int3
test
rcll
xchg
push
push
mov
jnp
lahf
mov
cltd
sbbb
stc
or
mov
pop
cmc
mov
scas
pop
test
nop
call
sti
push
cli
cmpb
shrl
cmp
push
fwait
or
ficoms
addr16
sub
into
push
dec
add
pop
cmpb
sub
xlat
les
mov
add
das
stos
bound
aaa
xchg
adc
int
bound
pusha
movsb
and
or
in
stos
xchg
mov
mov
ja
adc
xor
push
lcall
aaa
test
fsts
dec
mov
inc
dec
in
shll
sbb
cld
cltd
movsb
test
pop
scas
xchg
je
mov
pop
and
mov
cmp
insl
pop
leave
ficoms
jg
add
dec
add
movsl
sbb
mov
and
scas
not
inc
dec
pop
sub
lods
jb
out
mov
dec
insl
subps
lea
ret
mov
push
call
loop
aam
outsb
loope
jae
xor
roll
repz
cmp
insb
imul
adc
in
or
out
cmp
inc
add
push
or
xchg
rolb
pop
sbb
add
push
inc
out
jle
dec
pop
bound
jecxz
adc
jo
jns
ja
sub
cmovo
xor
and
mov
popf
loopne
inc
shr
xchg
rolb
jecxz
push
sub
aaa
mov
cld
pop
cld
mov
int3
add
or
pushf
in
imul
push
mov
repz
dec
test
sbb
pop
ret
dec
out
cmpsb
int
xor
loope
out
push
xor
mov
repnz
pusha
call
jns
pusha
cmpsb
mov
mov
js
aaa
and
je
add
cmpsb
arpl
aad
hlt
jno
enter
add
mov
jo
ficoml
sub
and
sbb
out
test
push
mov
pop
sub
subb
push
stc
movsl
lock
xor
inc
xchg
ds
loop
daa
rcll
imul
pushf
mov
jmp
add
pop
scas
cmpsl
sbb
push
insl
es
add
sbb
or
mov
xor
cmc
fdivl
fsts
xchg
insl
stc
popl
lods
aaa
mov
mov
aam
test
xor
push
jnp
mov
ss
fcoms
mov
fidivl
rcll
les
jnp
lods
pop
push
fldcw
roll
mov
push
lcall
push
push
sbb
outsl
stos
clc
leave
and
movsl
inc
stos
push
jp
and
loope
in
add
adc
sti
xor
pop
fcmovnu
and
jne
loope
xor
push
stc
jo
mov
push
or
scas
pop
icebp
out
dec
test
lods
lods
jle
test
dec
pop
lea
movsb
xchg
cmp
mov
jecxz
ss
mov
mov
stos
sub
jecxz
dec
movsl
je
mov
or
cmc
cli
mov
mov
js
test
hlt
jnp
push
sub
inc
aas
pop
sbb
jae
std
sub
or
nop
lea
rcrl
out
add
fdivs
test
cwtl
lds
dec
mov
xchg
or
jp
and
xchg
mov
nop
cmp
in
push
mov
or
mov
aad
loop
pop
sbb
les
fcom
movsl
sahf
sbb
fstl
add
addr16
rcll
movsb
aad
hlt
iret
cmp
and
fmull
mov
or
adc
mov
das
jge
outsb
ficompl
cmpsl
xorps
dec
cmc
xchg
jo
pushf
pop
imul
mov
pop
xor
js
mov
in
dec
xchg
mov
and
jae
jae
mov
fcmovu
adc
loop
mov
mov
dec
xchg
in
leave
pop
arpl
loope
jp
loop
and
arpl
inc
fisubs
xor
cld
jecxz
mov
mov
dec
cld
or
bnd
mov
stos
or
cwtl
xchg
out
loop
or
stos
cmp
ret
xchg
mov
pop
fidivrl
jnp
lds
pop
movsb
cmp
cltd
xor
repz
jno
negl
jmp
test
in
add
scas
mov
push
mov
push
mov
push
adc
adc
add
test
inc
cmc
andl
cltd
or
jge
cmp
popf
pop
mov
pushf
xchg
in
inc
rorb
test
lret
stos
pminsw
mov
xor
outsb
movb
push
cmp
movsb
leave
icebp
xchg
add
popa
dec
outsl
jecxz
pusha
mov
xor
push
cmp
xchg
jo
xor
push
pop
jp
or
stc
scas
push
pop
mov
loopne
stos
cmpb
loope
stos
adc
dec
pusha
adc
clc
rcrl
mov
stos
sbb
outsb
sub
lret
push
scas
gs
jl
into
lret
cltd
fidivrs
and
and
adc
in
mov
clc
xlat
inc
loop,pn
xchg
jo
int3
leave
jg
int3
pop
loop
hlt
testl
lea
cli
inc
cmc
das
pushf
hlt
push
fildl
xor
lods
in
outsb
mov
and
aad
int3
xchg
fcmovbe
inc
out
inc
mov
loopne
add
hlt
rcrl
es
ficoms
add
adc
jo
into
mov
loope
dec
sbb
push
rorl
cs
sub
ja
xor
aad
es
jno
clc
pop
xlat
cwtl
sub
fst
fcom
push
cs
inc
sbb
ret
lahf
out
mov
pop
aad
add
imul
in
push
fxch
outsb
rclb
mov
or
and
js
into
or
aas
das
scas
sbb
subl
out
or
mov
pop
negb
aas
mov
scas
addr16
in
outsl
into
fbstp
jbe
push
mov
mov
sti
jle
std
js
aam
fsubr
mov
stos
mov
jge
jle
push
sub
hlt
lahf
addb
push
cwtl
cli
decb
jmp
js
mov
iret
ret
or
je
stos
mov
mov
or
jbe
and
and
xchg
jne
call
inc
or
jmp
mov
cmp
ljmp
adc
push
out
dec
outsl
jp
test
pop
imul
mov
xor
scas
xchg
and
dec
cmp
scas
data16
sbb
out
stos
sub
mov
sbb
xchg
adc
pop
mov
popa
inc
inc
sbb
aam
dec
out
push
je
cmp
movsb
inc
mov
incb
into
dec
mov
mov
jp
in
sub
xchg
mov
data16
jecxz
inc
sub
and
mov
popa
and
mul
dec
adc
bound
aas
in
neg
daa
out
jo
sbb
dec
lds
jecxz
inc
or
cmp
test
sbb
into
movsl
fs
adcl
dec
add
movsb
pop
orl
cmpsl
loop
cli
dec
shl
in
cmp
dec
subl
sbb
jno
push
negb
pop
or
or
cmp
inc
inc
inc
adc
cmpsb
popf
dec
shlb
stc
mov
and
jns
fs
pushf
adc
adc
push
sub
mov
mov
sub
in
xchg
cmp
test
mov
ss
inc
push
and
jp
sahf
mov
push
sub
lcall
jmp
sti
push
testb
int3
sbb
sbb
jle
mov
add
jl
movsb
mov
fsubl
sub
adc
cld
sub
imul
xchg
mov
pop
scas
clc
cld
aam
or
outsl
loopne
push
xchg
cmp
shrb
lret
dec
adc
pusha
dec
push
lds
out
push
mov
xor
in
cmp
cs
or
push
mov
mov
je
add
les
call
lods
mov
xchg
insb
push
sbb
xor
mov
cmpsb
sub
jl
fidivs
bound
ficomps
push
sub
jb
mov
pop
cltd
adc
shlb
outsl
or
xlat
cmc
jnp
and
cld
cmp
cwtl
orl
call
ss
into
cmp
pushf
jmp
imul
push
data16
and
lret
sub
adc
mov
jecxz
clc
popa
js
mov
jecxz
cmc
push
sub
mov
aaa
pop
iret
call
sbb
cmp
push
sbb
mov
jle
or
fldt
rolb
sahf
sarb
sub
pop
pushf
js
lret
xor
fcmovne
mov
mov
mov
lcall
imul
xor
push
push
jge
aad
mov
pop
xchg
jne
push
jmp
dec
inc
jns
sub
mov
ret
testb
fistpll
pop
imul
mov
pusha
xchg
stos
ss
xchg
bound
mov
dec
dec
aas
daa
ret
sbb
push
out
dec
mov
insb
dec
ficomps
sbb
mov
add
icebp
dec
movsb
push
shl
push
xchg
pop
mov
fbstp
xchg
movsl
push
push
test
cmp
pop
push
nop
loop
data16
add
div
or
xor
cmp
jge
pop
repnz
sub
ds
jmp
fstpl
ret
icebp
outsl
ja
and
lahf
into
mov
jb
xor
lods
cli
or
mov
pop
xchg
xchg
push
sbb
push
xchg
bswap
rorb
or
dec
add
push
or
xchg
mov
out
cld
mov
test
popa
or
imul
test
jmp
fists
repnz
lahf
cwtl
pop
in
nop
and
andb
or
loope
pushf
ret
ret
sbb
popa
leave
adc
mov
mov
pop
inc
push
or
scas
pop
adc
pop
jnp
std
loope
pushf
push
ffreep
in
pushf
clc
gs
bound
dec
insb
sub
jno
sahf
mov
test
dec
or
ljmp
mov
in
mov
int
jno
and
dec
icebp
mov
sbb
gs
das
outsl
movsl
movsb
adc
cmp
pop
xchg
imul
mov
sbb
cld
pop
jb
bound
rcrb
and
cmp
ljmp
cld
xchg
outsb
adc
mov
mov
daa
add
sub
sti
lods
xor
xor
int3
subb
cmp
and
arpl
mov
jno
mov
mov
fnstcw
in
xor
mov
mov
dec
jnp
scas
fisttpl
or
jle
pop
loop
pushf
lods
pusha
jecxz
cld
int3
inc
in
loope
fcomps
or
or
mov
push
leave
xrelease
jp
sub
pushf
faddl
mov
roll
or
int
imul
orb
pop
ficompl
jge
mov
mov
leave
pop
push
mov
fsubl
mov
daa
sub
das
bound
outsl
mov
xor
stc
pop
aas
outsb
arpl
in
lea
dec
add
in
daa
jecxz
mov
push
jb
into
mov
test
adc
iret
mov
aad
insl
ljmp
ret
adc
int
stc
dec
dec
xchg
shll
into
ljmp
cwtl
in
xlat
sbb
xchg
in
mov
add
shlb
sahf
jbe
mov
mov
mov
pop
pop
or
xor
xor
xor
xchg
jg
push
lret
mov
sbb
aad
aad
pop
dec
cmp
pop
mov
mov
clc
mov
mov
sub
flds
cmp
test
dec
mov
jg
fst
dec
push
cmp
jle
lods
les
xor
sbb
and
dec
sbb
ret
add
mov
add
hlt
pop
jnp
in
dec
sub
nop
adc
or
sub
jne
repnz
ret
jne
call
xchg
cmpsb
jle
imul
jmp
mov
xchg
dec
mov
repnz
jge
adc
popa
leave
loopne
dec
adc
decb
xor
mov
pop
cli
adc
shll
or
aas
daa
dec
or
imul
mov
or
sbb
dec
data16
jmp
cmp
addr16
sbb
mov
cli
sub
les
push
cmp
mov
leave
pushl
test
scas
cmc
and
das
pop
push
push
sti
popl
js
test
push
xchg
cmp
dec
mov
or
push
lods
movsb
mov
add
pop
jbe
xchg
jle
repz
stos
mov
lahf
ja
xor
xor
cltd
sbb
outsb
jp
adc
scas
adcb
shl
sarl
into
mov
inc
cmpb
pop
test
or
push
stos
xchg
je
and
in
fsubrs
mov
xchg
sarl
dec
pop
sub
adc
dec
and
jmp
in
bound
jp
cmp
xchg
push
inc
icebp
mov
nop
cmpsl
rclb
sub
into
jge
push
dec
lds
add
mov
fstpl
bound
adc
xor
add
je
inc
xor
loope
xchg
adc
movsb
and
or
sbb
mov
inc
stos
repz
popf
mov
insl
sti
sbb
mov
addr16
pop
cmpb
call
push
inc
pop
xor
inc
movsl
ds
cmpl
and
sbb
push
push
in
adc
or
xorb
cmpsb
test
clc
pop
pop
call
push
pop
out
rol
ret
mov
pop
out
out
sbb
lock
inc
idiv
addr16
mov
mov
or
cmp
ret
jnp
jno
cmp
adc
jmp
pop
dec
lock
push
pusha
ja
loopne
faddl
outsl
jp
out
movsl
hlt
dec
pushf
sbb
popa
loopne
jno
push
adc
cmpsb
das
mov
xchg
push
insb
pusha
cli
push
imul
sar
mov
shl
xchg
pop
push
push
fisubs
xchg
xor
mov
sub
xor
and
xor
xchg
sbb
mov
xchg
inc
cmp
call
add
mov
mov
sbb
outsl
cld
faddp
sti
insl
add
popa
mov
pop
or
hlt
sbb
movsb
scas
jns
ljmp
shl
xchg
mov
dec
mov
mov
sbb
fimull
pop
in
cmpsb
data16
push
lock
pop
mov
lea
sbb
push
insb
jb
cwtl
dec
or
test
sub
add
inc
movsl
insb
or
jo
lods
adc
std
pop
or
sub
mov
addl
pop
mov
stos
scas
and
push
xchg
sub
popf
push
ss
ror
cmp
bound
xor
imul
or
sub
lahf
push
mov
stos
push
xor
daa
imul
dec
in
sbb
out
pop
sti
push
cmpsl
adc
sub
lea
test
dec
pop
into
xchg
inc
mov
mov
dec
cmp
push
test
adcl
movsl
je
or
inc
data16
clc
mov
mov
neg
mov
and
test
sub
cs
add
jp
lcall
jbe
push
pop
push
jb
outsl
mulb
push
dec
add
adc
dec
sub
mov
dec
inc
roll
xchg
push
jne
das
sahf
je
add
in
pop
jae
push
jg
dec
cld
xor
lock
imul
lahf
sbb
rcrb
jle
push
sub
xor
or
ljmp
jle
scas
push
pop
cmp
fimull
and
shlb
notb
jno,pt
into
jp
loopnew
xor
adc
mov
push
test
cmpl
mov
sbb
sbb
jecxz
inc
xchg
adcb
adc
adc
sti
scas
stc
adc
addr16
lret
out
sub
add
push
jnp
push
int
mov
or
fistl
lods
inc
dec
xchg
inc
insb
xchg
jecxz
imul
fs
cmp
int
add
ds
xor
addr16
xchg
add
rcl
pop
dec
scas
inc
ret
or
in
mov
pop
dec
lock
ficompl
adc
addr16
outsl
hlt
subl
sub
incl
mov
inc
add
adc
and
stos
pushf
push
pop
shrb
fcomp
pop
adc
stc
les
movsb
inc
rorb
push
cli
sbb
stos
stos
std
in
xchg
sbb
push
lahf
sahf
and
and
nop
hlt
loope
outsb
xor
loopne
mov
mov
and
jg
xchg
mov
shrl
mov
push
and
ret
jecxz
xchg
leave
inc
pop
lds
lds
subl
pop
xchg
sahf
xor
dec
les
cltd
sub
mov
shlb
push
leave
fs
or
cmp
cmp
cmp
aas
mov
rcrb
enter
cmpsl
mov
mov
push
cmp
mov
sub
cmp
xchg
sub
das
aam
pop
push
and
pop
push
stos
clc
pop
adc
sub
fsts
ds
int
sti
jecxz
ret
or
rcll
push
mov
pop
and
shrb
imul
fbstp
xchg
call
xlat
and
push
cmp
mov
shrb
add
inc
lea
out
jbe
pop
pop
popa
push
hlt
dec
xor
fstpl
in
fs
arpl
rolb
mov
mov
movsb
inc
lds
iret
sbb
xlat
movl
scas
mov
aam
fmulp
mov
sti
pop
js
arpl
dec
dec
or
repnz
in
fsts
and
fildl
add
cli
and
xor
mov
sub
mov
sub
lea
fcmovnu
jge
or
push
or
adc
add
cmp
sub
xchg
pop
jge
xor
push
addr16
sub
movsl
mov
mov
mov
dec
into
call
nop
pop
mov
aam
stos
repz
mov
mov
fsubl
and
lret
sti
out
sbb
mov
cltd
in
aam
iret
sbb
mov
sbb
loope
xchg
lret
cmp
cmp
ds
fstpl
jae
int
jg
movsl
and
sahf
xor
shrb
mov
int3
das
xor
push
lods
xchg
in
test
int
jg
call
xor
dec
adc
sbb
or
popa
imul
pop
cmp
push
loopne
pop
mov
pop
insb
pop
mov
cmp
sbb
mov
ret
sub
push
cld
and
into
or
pop
mov
mov
dec
push
mov
sbb
and
rcrl
inc
gs
or
mov
fdivrs
daa
jnp
xchg
jne
testl
movsb
push
or
mov
ror
lret
xor
sub
addl
push
out
pop
or
mov
and
insb
ret
and
outsb
cmp
push
and
les
xchg
jae
divb
and
or
scas
xchg
lret
jae
mov
mov
inc
mov
add
loopne
into
xchg
scas
imul
inc
or
gs
loop
lahf
movsb
cli
js
andb
cmp
pop
sbb
movsl
in
jbe
adc
jne
push
test
jmp
insb
mov
and
mov
js
add
and
xchg
nop
mov
into
and
faddl
loopne
dec
jmp
jl
fldln2
ljmp
mov
insl
dec
les
andb
pop
fdivrs
mov
xchg
decb
shll
sub
test
cli
inc
iret
mov
xchg
lods
fists
push
jmp
xchg
cmp
leave
repz
or
sbb
jl
cmp
mov
icebp
fisttpll
cmpsb
jle
mov
in
cwtl
push
loope
lret
arpl
dec
stos
scas
aam
sbbb
ljmp
adc
inc
repz
push
inc
scas
std
xchg
add
rcll
and
popa
sub
aad
xchg
rclb
mov
iret
in
sub
mov
cmpsl
push
xchg
jg
jb
repnz
popa
fidivrl
adc
push
lret
pusha
pop
fidivs
xchg
cmp
outsb
sbb
push
dec
dec
mov
xchg
push
test
lret
enter
iret
pop
subl
add
and
adc
mov
lock
in
mov
into
add
mov
jmp
and
in
mov
mov
loop
xor
and
jp
cltd
mov
jl
mov
repz
cmpsb
les
mov
pop
inc
movsb
daa
pop
icebp
adc
inc
popa
lods
and
or
jns
stos
movsb
xchg
in
pop
add
jp
push
xor
cld
push
movsb
pop
fdivs
and
push
xchg
call
hlt
es
adc
mov
mov
mov
jl
out
push
lods
inc
fimull
push
mov
jle
push
shl
pop
push
lock
lret
xchg
mov
add
jg,pt
leave
sarl
sahf
ss
mov
leave
enter
leave
jp
jp
stos
aas
mov
xchg
scas
and
pop
pop
popf
out
jecxz
mov
ljmp
xorl
lret
mov
or
jp
dec
cltd
mov
jae
mov
fsubrs
xor
xchg
add
inc
lret
fisubrs
popw
mov
push
fstl
and
adc
mov
stc
push
cmpsb
sbb
adc
adc
push
fcomps
jecxz
bound
outsb
add
shll
hlt
inc
movsb
pop
in
and
sarb
add
lea
dec
fldt
pushf
jne
lret
pop
movb
mov
cmpsl
sbb
stc
in
sarl
cmp
inc
int
rcll
mov
dec
call
fs
xchg
push
jecxz
jecxz
scas
pusha
fnsave
jmp
fnstenv
cmc
inc
cwtd
lcall
shr
fisttpll
lock
cmp
lret
dec
sti
push
imul
lea
in
ljmp
sbb
pop
add
popf
adc
pop
shll
sub
inc
mul
sbbb
sbb
mov
jns
sbb
sbb
imul
data16
stos
fiaddl
scas
jb
ficomps
out
xchg
pop
or
stc
mov
es
xlat
cmp
into
fiadds
in
scas
mov
enter
aas
inc
sar
pop
mov
pop
add
in
mov
adc
hlt
sub
pushf
xor
les
mov
push
pop
dec
mov
mov
imul
call
push
dec
inc
mov
mov
lea
ja
icebp
sub
mov
adc
jecxz
stos
jo
adc
lcall
outsb
cmp
mov
mov
xlat
pop
sbb
pop
cmp
ss
jb
test
stos
sub
in
outsl
add
add
mov
xchg
sub
add
popf
repz
dec
jb
xchg
xor
or
test
aad
mov
clc
jl
std
imul
mov
adc
dec
ss
pushf
inc
and
nop
popl
jg
in
dec
push
clc
in
out
shr
fcomps
mov
xlat
dec
cmpsb
sub
sub
movsl
cmp
xor
fnstenv
jo
mov
mov
lods
cmc
xlat
xor
and
lret
mov
leave
js,pn
fdivp
nop
out
fsubrp
sahf
push
rcr
adc
fsubs
push
ljmp
lcall
out
sbb
jae
sbb
fistpl
sbb
je
lcall
dec
jo
cmpsl
mov
call
inc
cmp
mov
mov
jnp
scas
xchg
rorl
je
add
repnz
mov
push
pop
xchg
dec
mov
iret
testb
shlb
xor
int
cs
sbb
sub
iret
pusha
mov
lret
das
mov
rorb
mov
sub
inc
xor
sbb
mov
pop
in
lds
and
mov
mov
xchg
shll
sub
sbb
in
in
fdivs
xor
ljmp
mov
sti
sbb
and
jl
in
mov
ret
jmp
pop
rclb
int
rcrl
je
jle
jb
test
add
pop
gs
int3
inc
loope
and
inc
xchg
test
aam
jge
sbb
cs
lcall
pushl
push
dec
and
adc
sbb
xchg
xor
adc
pop
dec
mov
es
insb
push
adc
incl
faddl
stos
lods
adc
sbb
push
push
stos
sbb
pop
xor
gs
popf
test
imul
jne
fprem
jmp
push
pop
nop
push
inc
fwait
push
cs
mov
aam
push
adc
push
cmc
mov
idiv
lods
orb
dec
adc
adcl
jb
pop
mov
into
cmpsl
jbe
into
lock
ficompl
push
mov
gs
popf
repnz
loope
hlt
outsb
rcll
dec
fildl
mov
call
inc
fsubl
jbe
mov
push
dec
je
in
int
mov
jae
pop
insb
mov
push
sahf
mov
scas
cmp
adc
test
jl
jns
pop
mov
int
dec
mov
push
aam
imul
out
add
das
dec
loope
hlt
jnp
xchg
inc
sub
cmp
mov
mov
es
cmpsb
cmp
pop
hlt
mov
adcb
fdivrs
sti
jmp
xor
int3
xor
sub
push
and
daa
pop
mov
jmp
add
outsb
add
xlat
movsl
mov
sbb
push
inc
sub
mov
frstor
leave
mov
xorb
fs
pop
dec
aad
shl
push
jle
scas
decb
jmp
dec
jle
mov
or
idivl
add
movsl
cmp
ret
hlt
mov
insl
mov
ss
out
addb
jmp
aas
jecxz
adc
adc
sti
scas
mov
xor
fimull
xchg
sbb
daa
orb
mov
sbb
push
jmp
jmp
sbb
fs
xor
or
xchg
out
sub
sub
cs
push
test
jnp
rorb
xor
lret
fldenv
roll
cmovne
xchg
dec
sarb
mov
or
js
into
pop
in
stc
loope
cmc
mov
push
shll
aad
cmp
cmp
nop
cltd
or
lods
cmp
cltd
xchg
stos
xchg
inc
push
gs
xor
xchg
aas
dec
out
xchg
daa
cmp
dec
outsb
js
push
jae
mov
lods
ds
in
arpl
pusha
mov
push
jo
mov
mov
sub
addr16
dec
in
insb
clc
arpl
test
out
out
xor
fisttpl
pop
sbb
ja
or
stc
push
out
or
push
test
lock
ret
cmp
pop
cltd
arpl
mov
imull
xor
pusha
fisubl
pop
mov
mov
imul
fsubl
cmpsl
nop
mov
insl
lock
test
aas
sarl
pushf
sbb
mov
pushf
mov
mov
scas
jmp
xlat
sub
mov
test
sub
movsl
pop
mov
xchg
iret
rcl
cld
inc
test
ret
mov
and
out
sbb
mov
js
hlt
inc
das
adc
int
out
in
leave
pop
cmpsl
mov
xlat
pop
inc
jno
test
out
pop
mov
or
je
lcall
jne
imul
lods
loope
ljmp
pop
mov
movsl
rclb
int
aaa
jno
das
iret
cmp
sbb
mov
sbbb
test
adc
loope
sbb
pop
out
lcall
mov
lret
in
sbb
jmp
ss
bound
mov
ret
or
sahf
add
ds
clc
pop
ret
test
repnz
out
and
lods
in
adc
or
gs
aaa
dec
cmp
outsb
scas
fimuls
mov
insl
test
aad
int
sub
pusha
in
ret
jnp
aas
arpl
jmp
insl
adc
cltd
in
push
into
filds
xor
jmp
inc
aaa
push
scas
sti
add
and
pop
outsl
adc
out
sbb
cmp
mov
adc
dec
and
sbb
sbb
pop
fiadds
mov
pop
jb
add
mov
fs
fmul
cli
addr16
inc
pop
xorb
mov
leave
out
mov
jg
sbb
sti
scas
push
adc
loope
mov
push
jl
or
push
push
push
out
jo
add
fisttps
push
adc
mov
xchg
jno
rorl
mov
cld
int3
test
sbb
out
cmp
mov
mov
cld
xchg
mov
lcall
inc
fists
inc
cmpsl
inc
mov
push
mov
xchg
stos
sbb
in
or
fcompl
adc
imul
push
or
in
sti
xchg
push
inc
sbb
and
imul
stc
lods
mul
icebp
dec
xchg
adc
orl
pop
sbb
dec
sub
insb
push
iret
aad
imul
xchg
inc
call
icebp
push
insb
inc
ljmp
cld
out
pop
xchg
pop
cwtl
xor
cmp
adc
pop
outsb
dec
mov
cmp
int
addr16
cmp
rolb
imul
dec
mov
mov
pushf
aas
xchg
mov
push
mov
mov
movsl
push
mov
xchg
out
mov
test
or
out
movsl
negl
fcompl
and
cmpsb
in
clc
adc
adc
xchg
cmp
lcall
cltd
xor
sbb
pop
je
and
imul
sar
mov
jg
notl
icebp
hlt
sbb
loop
sahf
sbb
data16
sti
mov
xchg
fadd
push
xor
jle
dec
inc
iret
sbb
ljmp
mov
push
cmp
pop
outsl
fnsave
scas
and
and
dec
movsb
add
fwait
push
or
mov
jmp
sub
fistpll
int
mov
xchg
adc
repz
jmp
jnp
mov
lahf
int3
push
pusha
mov
repnz
or
and
test
dec
icebp
xor
popa
daa
inc
stos
adc
jmp
stos
pop
cmp
adc
mov
push
lahf
aaa
inc
movsb
mov
dec
xor
outsl
incb
jne
cmpsl
clc
shl
cmp
and
add
sahf
fnstcw
sub
cwtl
pop
lcall
inc
and
mov
jmp
cld
iret
addl
pushf
mov
xchg
xor
mov
popa
pushf
insl
dec
mov
mov
adc
subl
es
inc
jne
insl
movsl
lock
mov
fldcw
rcll
ror
push
repz
aaa
and
mov
ret
dec
push
pop
fstpt
cmp
leave
xchg
xor
sub
adc
imul
add
clc
in
mov
xchg
jo
aas
add
mov
pop
jmp
lock
popa
jne
xchg
cwtl
sub
nop
nop
xor
or
inc
sub
ja
mov
pop
sub
icebp
rol
add
hlt
cld
jl
jne
aas
cmpb
lcall
adc
dec
cmpb
ret
pop
mov
push
xor
mov
js
outsb
push
addr16
inc
inc
push
adc
inc
int3
mov
repnz
push
int3
mov
in
mov
cwtl
imul
jno
outsb
movsl
cld
pop
outsb
test
adc
adc
aas
fsubrs
xchg
testb
jp
enter
fistps
or
loopne
iret
int3
xor
xorb
cmc
movsl
mov
adc
lods
push
std
adc
movaps
jne
dec
fldz
sbb
filds
pop
push
mov
je
fsubrp
aas
xchg
mov
cmp
mov
pop
lahf
add
fidivs
jge
or
imul
push
mov
dec
pop
pop
xor
adc
outsl
add
out
popf
add
push
xchg
or
fsubr
mov
push
inc
fsts
jmp
fbld
mov
inc
xlat
and
dec
ja
and
push
xor
jb
inc
and
fadds
adc
xchg
daa
or
insb
lahf
cmp
cmp
jl
aam
sub
adc
js
dec
and
and
push
dec
orl
sub
xchg
mov
mov
pushf
push
push
ljmp
sub
sbb
cmp
aad
adc
xchg
xchg
mov
add
insb
and
push
mov
cwtl
xlat
rclb
fwait
and
repz
and
gs
cmpsl
xor
outsb
stc
lock
fnstsw
rcll
add
add
cs
sahf
pop
dec
push
sbb
insb
subb
jmp
repz
dec
sti
dec
jp
fidivrl
or
loopne
inc
dec
int
jl
sti
mov
popa
sub
icebp
and
pop
xor
sbb
stc
dec
push
iret
pop
ret
sarl
sbb
inc
insl
inc
sbb
lahf
aam
aaa
or
fidivrs
jmp
mov
pop
ds
pop
repz
outsb
push
sub
mov
xlat
push
rorb
into
mov
sbb
cltd
fwait
int3
xlat
je
popa
push
cs
push
sub
es
jnp
mull
pop
pop
int
jg
push
lcall
or
dec
push
mov
pop
dec
imul
mov
mov
adc
bound
in
push
sbb
test
xor
imul
movsl
mov
mov
push
cmp
fsubr
aas
les
rcl
or
cmp
push
mov
and
mov
stos
sbb
pop
inc
scas
fs
out
adc
dec
jb
mov
or
out
es
popa
jnp
adc
inc
jae
fwait
or
je
adc
xchg
lods
in
arpl
mov
setge
das
js
push
inc
mov
daa
push
out
fs
jne
sbb
stos
mov
mov
out
ds
add
cld
adc
jb
stos
or
cmp
ret
hlt
mov
repnz
js
jg
ss
inc
fdivr
push
mov
in
enter
iret
mov
aas
out
mov
xchg
xor
pop
movsb
test
call
mov
addb
push
in
test
cmc
adc
adc
push
ja
jnp
je
mov
cmp
in
repz
cld
test
sbb
outsb
sub
cmpsb
dec
das
and
pop
sub
or
popa
shlb
fisubl
mov
xor
push
xor
push
jle
mov
xlat
je
jno
arpl
out
dec
rcrb
sti
mov
mov
or
mov
cmp
and
cmpsb
and
cmp
ret
out
imul
jns
test
sub
adc
pop
inc
and
ss
push
and
push
hlt
dec
lds
stos
mov
lahf
shlb
out
fstl
les
call
dec
or
jge
mov
push
aas
jl
cmp
inc
pop
fldt
insb
sub
pop
call
into
push
ss
cs
aam
fs
cli
xlat
into
xchg
xor
jb
mov
fcmovu
mov
xlat
inc
and
xchg
movsl
sbb
push
cwtl
mov
pop
lret
add
jmp
arpl
std
enterw
cmpsb
jle
mov
or
add
inc
push
std
cmp
repz
xchg
mov
cwtl
cmp
cs
outsb
jg
divl
imul
imul
push
pop
xor
pop
jg
push
ds
test
imul
add
pop
lret
push
xor
loop
imul
lds
ss
rcrb
test
xchg
mov
shlb
lock
jp
into
xorb
int3
test
and
sbb
dec
cmpsb
loope
repnz
mov
inc
xchg
imul
xchg
mov
or
loop
push
out
xor
or
fistl
iret
dec
es
pop
sahf
sub
arpl
shrb
dec
xor
xor
cmp
fnstcw
movsb
mov
and
mov
sbb
shrb
xchg
cmp
xchg
mov
stos
out
movsb
mov
push
dec
xor
dec
sub
les
push
movl
les
in
push
loop
call
movsb
inc
sub
mov
adc
insl
mov
mov
cmp
les
mov
les
xor
loope
mov
ss
insl
popa
dec
rclb
sahf
add
mov
ljmp
hlt
fcompl
add
sub
lret
mov
mov
jbe
lods
inc
cltd
sub
pop
jb
dec
fidivs
xchg
sbb
call
mov
mov
xor
cmp
cs
popa
push
cmpsb
cmp
jle
cs
push
mov
xor
scas
test
aaa
sbb
mov
cmp
and
sub
inc
and
cwtl
loopne
sbb
imull
js
inc
icebp
insl
iret
dec
loopne
dec
jae
sub
iret
mov
xor
outsb
test
add
fdivs
ror
movsl
test
ror
dec
mov
popa
xlat
lret
xor
pusha
sahf
cltd
jg
mov
dec
sbb
jmp
mov
sar
xor
pop
stc
inc
cltd
shl
jecxz
jle
cmc
lcall
mov
sub
inc
out
loope
mov
jbe
outsb
mov
push
mov
sarl
push
add
movsb
das
nop
out
loopne
adc
add
hlt
sbb
adc
dec
pop
mov
mov
fwait
sub
lret
ret
cmp
ffreep
cmpsl
adc
xchg
stos
sub
repz
aam
cmp
bnd
std
hlt
je
iret
into
ret
daa
arpl
ljmp
inc
out
jmp
xor
pop
dec
mov
jecxz
push
aaa
jns
xchg
jge
fs
lret
push
mov
add
mov
pusha
xchg
int
cmpsb
outsb
pop
cmp
inc
sarl
mov
in
jns
mov
call
pop
mov
or
pop
fs
sti
adc
push
hlt
stc
xor
adc
cltd
ficoml
inc
push
and
and
pop
filds
movsb
sbb
push
test
or
aas
cli
push
add
sub
mov
sub
loopne
stos
lods
dec
lret
adc
scas
lret
xor
cmp
jge
filds
scas
cmp
jp
jb
aad
mov
xchg
cs
mov
adc
aas
ss
jg
or
daa
enter
cmc
xor
mov
faddl
inc
fcoms
gs
push
sbb
pop
sub
pop
xchg
fwait
jb
and
in
fidivl
std
jp
int3
fistpl
adc
insb
inc
outsl
scas
clc
jb
js
add
jecxz
or
or
call
pop
jnp
mov
rcll
cmc
xor
shrl
movsl
stc
js
aad
negb
sub
je
scas
test
mov
repnz
addb
std
jmp
aas
cmpsb
cmp
xchg
ret
bnd
sub
test
pop
pop
orb
xchg
xchg
aad
clc
xor
sub
hlt
and
or
dec
and
negl
aaa
mov
lcall
add
lcall
out
jl
jb
lods
rol
pop
mov
push
fadd
stc
mov
mov
push
mov
cmp
adc
add
push
ja
xorl
mov
shlb
int3
sbb
cmp
adcl
push
cltd
pop
sahf
gs
and
aas
stos
scas
bound
cmc
out
mov
mov
neg
out
aas
nop
fdiv
mov
dec
or
jnp
dec
jg
mov
xor
iret
call
adc
and
insb
push
daa
jecxz
insl
jb
jmp
inc
sub
aaa
xor
and
push
inc
test
movsb
syscall
xor
xorl
mov
pop
cltd
fisttpll
lods
aad
cmpsb
mull
daa
mov
test
pop
add
xchg
push
pop
or
xchg
lds
ljmp
pop
fwait
or
inc
xor
sub
in
and
stos
or
loope
cmp
mov
inc
clc
jae
popa
cmp
dec
out
movsb
testb
mov
jb
movsl
sbb
fsub
es
aas
sbb
adc
and
shlb
or
xor
push
stos
cmp
sub
dec
cmpsb
pop
lods
iret
int3
andb
mov
dec
aad
xchg
sbb
pop
cmpsl
cmp
adc
pop
ret
or
and
jo
and
lahf
push
call
sbb
jecxz
xor
sbb
lahf
add
inc
xchg
push
lock
add
mov
pop
lcall
xor
inc
cmpsb
scas
dec
sbb
ds
int3
push
fmuls
scas
pop
setp
cmp
dec
lcall
pop
les
lret
or
cmp
std
test
push
mov
cmp
and
cmp
mov
fistps
fldenv
aam
push
xor
jb
outsl
adc
loope
pop
mov
iret
sti
mov
mov
out
cmp
inc
jns
cmp
jge
mov
pop
pop
ds
subl
fsubl
enter
jo
mov
mov
xchg
push
sahf
lock
mov
daa
mov
aam
xor
rorb
mov
addb
push
pop
mov
iret
adc
loop
pop
aaa
jg
cld
sub
xchg
adc
repz
mov
jge
lret
test
sahf
mov
lcall
pop
mov
dec
xor
bound
movsb
cs
dec
ss
jne
scas
jmp
rolb
sbbb
sbb
mov
fidivl
jae
inc
aam
fwait
divb
test
hlt
rclb
xor
ja
adc
cmp
push
adc
push
test
and
in
pop
mov
pushf
xchg
testb
sbb
push
daa
add
stos
dec
jno
cs
or
test
cmpsl
push
cmpsb
pop
sahf
jle
testb
jno
test
cli
pop
inc
or
jno
cwtl
fwait
add
pop
rolb
scas
pop
fwait
sbb
pop
inc
fs
mov
mov
mov
cmpsb
mov
ljmp
bound
pop
mov
xchg
sbb
xor
orl
les
or
sbb
mov
xchg
pop
mulb
lods
cld
push
mov
lods
lahf
inc
insl
out
xchg
inc
into
ret
jo
sub
mov
jge
mov
xor
jge
hlt
insl
cmpsb
push
scas
add
lods
mov
inc
into
je
sub
mov
pusha
aaa
dec
mov
rclb
adc
xchg
jl
sahf
repz
shrl
add
push
bnd
add
inc
dec
imul
adc
lret
stos
adcl
pop
js
mov
orl
dec
adc
jo
out
das
iret
xlat
cli
mov
leave
jns
cmp
aas
rep
aam
push
clc
adc
sbb
cmp
xor
sub
imul
repz
sub
in
mov
out
repnz
pop
or
mov
iret
mov
aad
outsl
sahf
inc
sub
lcall
jecxz
or
mov
sbb
cli
add
lahf
imul
cli
cmp
adc
push
int3
nop
jg
movl
rcrl
in
jmp
cmp
pop
pop
out
cmc
and
enter
jb
std
inc
jp
iret
mov
daa
adc
test
push
push
imul
pop
in
inc
gs
jb
enter
setns
jne
push
movsb
outsb
xchg
out
std
sti
add
xor
xchg
cmc
icebp
add
push
lret
push
std
inc
imul
fucomip
sbb
scas
pop
or
int3
push
out
jb
xor
into
mov
jle
pusha
out
adc
loope
dec
or
sbb
adc
inc
xchg
shrb
mov
and
mov
ret
xor
repnz
dec
add
iret
ss
out
sbbb
jp
mov
jae
jmp
stos
imul
in
sbb
jno
in
bound
pop
cmp
in
inc
orl
sbb
add
sbb
sahf
pop
stos
sbb
sti
cmpsl
into
add
outsl
and
or
scas
fs
fistl
sahf
sub
push
sub
popa
loopne
pop
adc
int
lahf
pop
stc
pop
mulb
fcoms
jmp
inc
dec
scas
push
dec
push
mov
mov
pusha
cwtl
sbb
sti
jns
bound
sti
jle
sbb
xchg
mov
sub
adcl
pop
mov
xchg
mov
or
aam
sub
insl
daa
xchg
xor
movb
orl
addr16
sbb
sbb
aam
imul
sub
mov
adc
int
and
addr16
ficomps
pop
pushf
xor
xor
scas
lods
arpl
xchg
dec
inc
nop
icebp
sub
imul
test
pushf
or
jmp
jo
insb
js
mov
sbb
fsubrl
mov
sub
mov
pop
xchg
cld
jno
pop
push
dec
push
jno
enter
lret
pop
lock
loope
xchg
jns
cwtl
lret
mov
loopne
push
aad
fdivl
xchg
lods
and
pop
sahf
popa
loope
fists
outsl
sub
pop
repnz
pop
mov
ds
imulb
scas
mov
xlat
icebp
ljmp
arpl
jmp
jns
and
push
push
jno
jbe
and
pusha
push
jno
loop
jne
lods
clc
movsb
or
lcall
pop
shrb
jle
loopne
sbb
inc
sub
pop
or
int3
inc
in
mov
arpl
aaa
mov
push
testl
xor
ds
test
outsl
cmp
sbb
lods
jns
mov
mov
cmp
sub
shrl
xchg
cmpsl
insb
add
xchg
sub
and
dec
imull
cmpsb
adc
sub
jecxz
testl
out
adc
push
mov
inc
mov
pop
dec
add
in
pop
xchg
and
cs
xor
pop
test
sarl
mov
aas
loop
pushf
mov
mov
and
aas
fwait
clc
cmc
fcomi
push
shll
lods
ja
jp
lret
cltd
xlat
mov
and
inc
loop
fcomps
pushf
imul
test
lcall
or
xor
xchg
mov
cmc
jno
add
pop
cmc
mov
lahf
jo
sbb
pop
xchg
cmp
clc
inc
xor
les
xchg
xchg
ficompl
jb
jg
pushf
cld
roll
dec
jae
pop
sti
mov
lds
mov
lret
shrl
aad
addr16
pop
mov
popa
pop
jg
lcall
sub
dec
insb
pop
fnstcw
xchg
test
repz
ss
js
movsb
xlat
adc
cmp
sbb
out
jmp
dec
jle
mov
sti
es
notb
add
outsb
cs
sub
sbb
popa
add
push
sbb
sahf
dec
dec
ss
lea
mov
inc
dec
adc
or
adc
scas
cmp
mov
mov
push
xor
push
jmp
add
ds
es
and
dec
inc
dec
mov
xchg
adc
pop
add
rcrl
and
push
pslld
mov
pop
sub
lock
fwait
in
inc
clc
test
cli
inc
pop
fsubp
add
jae
adc
lods
movsb
aas
call
lahf
inc
orl
adc
ljmp
ret
add
push
push
push
mov
pop
and
lods
jo
xchg
mov
cmpsl
call
mov
adcb
push
jg
leave
mov
je
rclb
dec
xor
push
adcb
jno
dec
cmp
mov
sbbl
andb
push
push
popf
sub
shl
pop
pusha
mov
sahf
push
leave
cwtl
aad
sub
push
mov
mov
and
in
scas
in
shlb
dec
flds
ret
mov
push
and
xchg
jnp,pt
stos
push
mull
dec
push
in
in
inc
sub
jne
inc
aad
enter
mov
sub
dec
sub
sbb
pop
aas
inc
jmp
std
roll
xchg
out
ljmp
dec
fdivrs
hlt
add
inc
mov
cli
daa
push
loopne
mov
sub
inc
lods
test
mov
push
and
and
jbe
jns
or
mov
xchg
icebp
mov
shlb
fisubs
enter
push
scas
das
popf
sbb
out
scas
inc
fdivr
sahf
jae
popf
repz
sbb
mov
pop
inc
inc
cmp
xchg
mov
jo
aas
pop
fiadds
icebp
lds
pop
mov
fcmovnbe
xor
dec
pop
jbe
rol
in
jge
out
ljmp
cmp
adc
mov
lret
or
pop
mov
lahf
daa
bound
ret
inc
lret
push
dec
pop
mov
jno
push
aas
jmp
xchg
add
inc
je
cmp
mov
loop
sbbl
inc
inc
and
test
inc
fs
clc
push
or
mov
mov
or
sub
add
rorb
sbb
dec
xchg
mov
or
mov
pop
mov
and
push
icebp
adcb
out
xor
push
iret
ror
fwait
mulb
jl
xchg
shll
cld
cld
adc
xor
fnstcw
es
imul
fdivp
rcl
mov
sub
pop
mov
into
mov
mov
add
push
fstpl
sti
dec
pop
fcoml
rolb
popa
out
sahf
and
add
ljmp
push
into
in
loope
fstl
les
xchg
in
fs
cwtl
lea
add
sub
sarb
add
je
aam
dec
fsts
ljmp
add
adc
nop
jne
sub
adc
mov
nop
jg
mov
sub
movsb
cmp
and
jmp
ficomps
mov
mov
jl
sti
enter
add
lret
inc
fsubs
in
push
test
or
ds
fldcw
ljmp
sbb
sub
sbb
daa
cmc
sbb
roll
sub
xor
cmp
dec
dec
and
xchg
sub
hlt
cmpsl
sbb
imul
std
jno
push
into
fsubl
fiaddl
ret
sahf
jecxz
fildll
inc
aad
jo
jl
dec
jnp
push
and
xor
add
stos
pop
das
adc
or
clc
mov
mov
call
pusha
and
loopne
fistpl
jmp
cmp
jno
les
sub
icebp
and
cmp
xor
push
xor
cmc
mov
movsb
das
or
aaa
jp
or
adc
xchg
xchg
push
push
dec
lret
jns
mov
cmc
scas
stos
mov
roll
ds
push
roll
daa
dec
out
xor
add
hlt
push
mov
cmp
xor
xor
mov
leave
lret
and
adc
push
dec
hlt
inc
call
mov
push
aaa
cmpsl
ds
dec
rol
fldenv
out
scas
push
cmpsb
push
mov
mov
je
fcmove
push
aad
dec
addr16
sbb
xchg
pushf
hlt
cmp
and
scas
sbb
das
add
and
mov
dec
ss
hlt
xchg
ret
aam
push
add
outsb
add
push
add
sahf
and
scas
sub
push
cld
out
jns
mov
mov
or
pop
ds
addr16
leave
mov
jb
daa
imul
jp
inc
gs
popa
inc
out
in
shll
pop
push
mov
mov
mov
pushf
enter
push
push
loopne
pop
mov
imul
or
scas
aas
in
push
inc
shlb
push
cmp
lret
mov
add
inc
adc
jl
jg
dec
shrl
arpl
out
outsl
push
call
mov
mov
daa
mov
xchg
adc
rorb
pop
test
pop
jno
lods
cmp
icebp
shr
lret
bound
or
ljmp
mov
adc
mov
sub
stos
push
test
pop
test
cmovs
mov
lods
ffreep
or
or
mov
in
mov
pop
test
pop
push
out
xor
dec
outsb
and
cwtl
pop
sbb
js
in
dec
loopne
fcmovu
mov
int
fucom
pop
shlb
in
scas
scas
jne
pop
dec
pop
pop
pusha
mov
in
mov
pusha
sub
jp
test
mov
dec
addr16
nop
lahf
sub
aaa
pop
sbb
loopne
push
sbb
xor
xchg
xchg
movsl
mov
pop
mov
lods
mov
sbb
test
pop
call
mov
jg
test
sbb
sbb
adc
cmp
test
pushf
or
or
mov
arpl
jl
sub
xchg
cmp
or
std
stos
push
jmp
outsb
mov
jbe
xlat
lret
mov
int3
and
pop
push
sbb
jb
dec
fbstp
or
std
negl
testb
xor
sub
push
imul
pushf
dec
lcall
call
mov
int3
mov
add
push
hlt
fsts
dec
or
pop
outsb
jae
ja
stos
or
or
mov
and
imul
ret
scas
pushf
adc
fwait
call
movsl
dec
roll
call
push
bound
movsl
jecxz
jg
add
pop
pushf
enter
sbb
stc
adc
xchg
lods
inc
aam
test
push
scas
je
pop
shl
or
and
fwait
jecxz
and
jae
push
jns
pop
mov
mov
ret
lahf
rol
xorl
lock
fisubrl
mov
into
jmp
pop
int3
xchg
xchg
mov
sub
ficompl
pusha
adc
cs
jno
push
in
add
and
sub
nop
scas
pop
mov
ret
adc
fs
mov
xchg
test
mov
dec
add
lahf
sub
scas
dec
dec
inc
or
repnz
outsb
sub
jecxz
hlt
jmp
mov
pop
xor
mov
call
fists
loop
popa
enter
cmc
in
inc
push
arpl
mov
push
mov
xor
shlb
inc
jbe
pop
cs
and
add
cmc
sbb
bound
cltd
sbb
mov
mov
sub
push
or
and
int3
out
test
std
rcl
pop
roll
mov
rorl
lock
popa
testb
int3
imulb
cmp
inc
mov
cmpsl
pop
push
repnz
xor
repnz
xchg
out
xchg
fisttps
out
insb
insb
lods
jns
mov
mulb
cmp
mov
cmp
hlt
pushf
jns
sbbb
pushf
xchg
push
add
mov
out
lahf
cli
inc
sub
mov
jnp
fildl
daa
jno
rcr
pop
and
sub
xor
lahf
or
mov
sbb
pop
test
sahf
mov
shld
and
leave
fdivs
fimull
mov
rcrl
in
lcall
sti
sahf
enter
lret
xchg
lods
data16
out
sub
aad
insl
scas
data16
xchg
add
dec
xchg
into
sub
test
cmp
sbb
insb
insl
pop
es
jle
add
cli
mov
nop
rcrl
fisubl
dec
cli
lret
mov
fiadds
dec
test
lret
sub
popa
cmpsl
sub
in
aas
mov
dec
testb
subb
and
popf
mov
cmc
pop
mov
ret
cmpl
popa
adc
and
xor
stos
jge
adc
arpl
xchg
push
and
push
cwtl
mov
cmpsb
hlt
ljmp
into
lahf
je
mov
mov
rclb
ret
xor
popf
inc
mov
andb
jo
out
xchg
imul
sbb
pop
jmp
dec
jb
dec
xchg
outsl
call
inc
xorb
clc
mov
nop
fldt
inc
or
push
xchg
add
jmp
ffreep
clc
nop
sub
sbb
lock
gs
sub
or
sbb
test
imul
das
call
or
mov
sub
ror
adc
pusha
fsubrl
sbbb
dec
movsb
xchg
fidivs
dec
lock
mov
repnz
push
aaa
out
xlat
pusha
mov
dec
sbb
stos
mov
lods
adc
ret
mov
mov
sbb
std
scas
daa
mov
loopne
or
or
fscale
idivl
lret
or
and
inc
inc
jo
pop
sarb
ret
fwait
jecxz
push
int3
push
jnp
fldcw
cmc
cmp
lahf
dec
mov
push
pop
popa
sub
icebp
dec
push
imul
dec
cmpsb
xor
mov
addr16
loope
cmp
mov
sar
or
add
fisttpl
cmpsl
ljmp
mov
jle
xor
lods
dec
movsl
pop
cmp
ss
or
outsb
sbb
enter
mov
nop
mov
mov
in
loope
in
mov
fmuls
lock
inc
data16
pushl
pop
push
sub
mov
xor
adcb
scas
push
add
scas
movsb
and
call
jmp
imul
in
sbb
pop
inc
aaa
sbb
repnz
xlat
dec
ret
xchg
dec
or
popf
sub
fs
insl
mov
out
cltd
add
scas
repz
add
es
out
push
out
adc
fmul
sub
or
sbb
and
mov
sub
mov
mov
pop
cmp
pushf
pop
push
sbb
jge
adc
dec
xlat
mov
pop
das
adc
push
loop
push
cs
sbb
outsb
call
cld
inc
outsb
insl
dec
xchg
lods
push
outsb
adc
test
push
jle
cli
xchg
sbb
mov
pop
sbb
mov
adc
lods
rol
test
iret
mov
mov
dec
sub
and
fdiv
xor
sub
lahf
pusha
sti
cs
orb
lock
push
arpl
add
mov
dec
sbb
arpl
les
jnp
xchg
ret
insb
dec
data16
sbb
sbb
mov
shr
mov
sub
push
jnp
int
and
test
dec
daa
stos
jge
pushf
adc
mov
inc
and
sbb
cltd
popa
dec
xchg
lods
sbb
jns
add
xchg
ret
js
add
ds
xor
dec
out
sub
lods
pop
mov
fs
add
das
mov
enter
les
xchg
inc
push
ret
add
sbb
add
sub
xor
jp
daa
les
call
hlt
adc
sub
and
aad
inc
pop
xor
mov
and
push
clc
imul
loope
pop
pop
out
jb
pop
lret
pop
and
test
xor
sahf
mov
adc
adc
inc
jo
clc
mov
insb
xor
rcrb
cmpsl
push
push
test
dec
xor
adc
lret
cli
mov
dec
sti
cli
orl
outsb
mov
add
loope
in
adc
sub
pop
mov
xor
insl
popa
mov
adc
push
sbbb
movsb
pop
cmpsb
movsl
syscall
add
push
and
pop
js
xchg
dec
cli
and
sarb
je
and
fiaddl
lea
cmpsb
sub
push
push
adc
sbb
inc
aam
xor
and
pop
sub
cmpsb
push
inc
loope
lret
insb
nop
add
out
sbb
je
mov
sbb
or
cmp
add
mov
fldenv
dec
xor
dec
outsb
and
fwait
inc
lret
lcall
jne
popa
pop
andb
xchg
cmpsb
pop
loopne
test
mov
pushf
pop
push
pop
call
mov
call
sub
mov
aam
xchg
es
aad
ret
sub
pop
stos
dec
mov
notb
inc
push
push
xor
push
fwait
popf
scas
adc
popa
push
shll
sbbb
fdivp
mov
and
push
pop
call
cmp
insl
inc
mov
xor
out
dec
jne
fimuls
and
jl
xor
push
jns
add
jbe
mov
nop
and
ret
iret
cltd
in
lea
xor
pusha
cli
mov
mov
push
pop
sarl
mov
iret
test
lcall
add
sbb
lret
rolb
add
aam
int
push
inc
cmc
lcall
xchg
scas
dec
std
push
ljmp
dec
insb
xchg
push
movl
jg
jmp
mov
sub
xor
adcb
pop
clc
mov
dec
adc
dec
adc
jnp
push
inc
in
lds
cmpsb
sub
jge
sahf
dec
push
jge
push
data16
addb
and
sub
add
ror
or
mov
jecxz
pusha
roll
push
pop
hlt
arpl
dec
jae
mov
test
jle
test
mov
bound
nop
call
loope
push
mov
pushf
fs
cwtl
jns
daa
push
fmull
cmpsb
in
sti
test
adc
fsts
or
add
adc
test
hlt
pop
pop
call
inc
rorl
loope
dec
dec
xlat
mov
mov
cli
pop
adc
cld
push
icebp
or
xor
mov
insb
test
test
dec
test
je
or
loopne
lods
mov
mov
into
cmp
adc
divl
mov
imul
inc
dec
ja
fsubrs
pop
push
adc
xchg
push
cmp
aad
inc
push
sbb
fdivs
xchg
enter
mov
sahf
rorl
out
mov
ljmp
out
fldln2
sbb
loop
leave
divps
push
xchg
xorl
out
stos
pushf
add
lea
icebp
popf
insb
test
adc
mov
jmp
adc
pop
test
dec
shrb
testl
xchg
cmp
fbstp
jecxz
not
adc
dec
inc
mov
xchg
pop
push
xor
inc
mov
sub
xlat
mov
cmp
std
xchg
clc
sub
mov
ss
divl
or
push
in
pop
xor
inc
adc
xor
xor
add
aam
mov
movsl
daa
out
mov
aaa
pop
js
cmpsl
stos
mov
fadd
addb
fildl
cmp
jns
scas
mov
pushf
pop
sub
sub
dec
mov
add
cmc
mov
jl
ljmp
testl
cld
divl
push
push
lret
sub
mov
push
pop
mov
ss
sbb
push
cmp
inc
clc
or
mov
idivl
pop
jmp
jmp
sub
sahf
cmp
lret
gs
fisubl
mov
rol
sub
ja
les
add
and
movsl
stos
arpl
loope
mov
call
add
les
inc
notw
mov
dec
mov
xchg
sub
cmpsl
xorl
loop
cmpsl
jnp
jg
push
or
cwtl
aad
sub
popf
add
cltd
out
dec
jge
pushf
mov
bound
add
jbe
pop
cmpsl
rorb
icebp
outsl
xchg
mov
negl
jbe,pn
rcl
push
mov
test
jne
mov
shl
movsl
mov
adc
or
movsb
mov
aaa
mov
add
pop
out
adc
pop
lret
imul
add
aaa
sbb
icebp
dec
lds
gs
addb
adcb
les
mov
jnp
leave
sarl
jl
aad
dec
pop
shll
cmp
xchg
dec
xchg
lods
lar
push
cmp
mov
out
dec
jl
js
pop
lea
mov
mov
movsl
arpl
in
loopne
adc
into
xchg
mov
sahf
push
fcoms
in
dec
pop
ss
adc
loopne
pop
mov
mov
scas
and
shrb
shll
aam
movsl
stos
mov
movhps
out
mov
fidivrl
adc
ficomps
lea
lret
and
jl
sbb
sub
fldcw
mov
lahf
jl
sbbl
sbb
or
cmp
jae
out
cmp
aad
xor
repnz
call
lds
or
jbe
iret
addr16
pop
sub
clc
dec
xchg
aas
lea
roll
mov
sbb
mov
xchg
std
xor
mov
out
mov
or
or
imul
adc
cmp
add
fildl
sbb
sub
pop
lds
fisubl
jae
jnp
sbb
cmp
mull
mov
loopne
dec
in
add
xchg
dec
xchg
and
or
jg
sub
xor
or
mov
push
sbb
and
dec
ret
xchg
mov
xchg
fcmovne
lds
push
dec
xchg
std
iret
mov
stos
ret
cmpsl
adc
rcll
mov
loopne
or
pop
pop
xor
pop
xor
das
or
xor
cmp
ss
addr16
pop
dec
cmp
int3
out
test
mov
jo
jmp
pop
push
push
fnsave
push
cmpsl
sbb
rcrl
sub
mov
je
sub
iret
dec
es
xor
push
inc
es
cwtl
mov
icebp
nop
insb
ret
jne
cmp
std
popa
pusha
cmpsb
add
push
adc
aad
cmp
jg
xchg
iret
adc
aas
faddl
sbb
cmp
dec
and
icebp
push
add
popa
add
jp
add
xchg
mov
popf
push
mov
es
cmp
pop
jge
xlat
dec
mov
jbe
rol
xor
adc
cmc
jae
ficompl
mov
xchg
ret
xchg
outsb
adc
pop
and
ds
les
popf
sub
sar
insb
scas
push
add
or
sbb
ret
scas
ja
nop
xchg
xchg
mov
fnstcw
or
lods
push
cmpl
pop
push
jp
test
shlb
jns
inc
dec
sbb
insb
in
push
xor
or
test
in
outsb
jmp
in
inc
test
mov
and
mov
xor
xchg
mov
pop
xchg
sub
pop
jne
jns
inc
data16
je
js
icebp
mov
stos
repnz
popf
mov
push
test
xor
mov
movsl
sar
pop
cmp
mov
lods
push
xlat
mov
lock
xorb
sbb
xor
mov
cltd
pop
mov
jge
pusha
or
mov
push
jo
xchg
pop
dec
add
lcall
repnz
jmp
pop
and
cld
mov
ret
or
sbb
inc
mov
sub
insb
adc
sbb
xchg
sub
leave
into
jecxz
aad
xchg
adc
adc
cli
lret
adc
inc
pop
shll
sub
push
leave
inc
mov
jp
xor
into
pop
dec
fdivp
push
inc
xor
add
mov
xchg
sbbb
dec
mov
dec
insb
mov
roll
sbb
imul
mov
inc
xor
pop
mov
dec
or
push
leave
sub
test
jbe
dec
jle
std
leave
sub
out
stos
cltd
inc
inc
add
dec
jae
pushf
jb
imul
and
or
cmp
mov
push
fwait
push
cwtl
mov
mov
or
imul
fcomp
aas
jae
inc
ljmp
out
cwtl
aad
loope
dec
jmp
cmc
mov
cmp
jg
or
push
and
mov
lods
mov
mov
lret
mov
loope
add
dec
mov
lret
dec
inc
scas
pop
jmp
divb
insl
orl
pop
add
cmpsb
mov
fisubrl
jnp
mov
rolb
imul
xchg
sti
loope
push
sarb
cld
pop
fistps
test
fisubl
cmpsl
xchg
xchg
mov
arpl
stc
add
movsl
loopne
lahf
pusha
add
push
lahf
sub
fadds
fcomp
popf
or
mov
outsb
filds
push
sbb
in
js
mov
in
mov
inc
mov
ss
in
outsl
cld
xchg
cmp
int3
int
dec
das
imul
shrl
shrb
jge
lods
pop
or
adc
cmp
mov
scas
das
or
mov
xchg
xchg
sub
dec
pop
clc
cmp
loop
mov
mov
sub
rorb
push
pop
lret
sar
test
xchg
add
inc
lods
mov
jmp
mov
std
in
ret
mov
mov
adc
sbb
cvtps2pi
leave
gs
inc
mov
pusha
jp
dec
cmpsl
or
loopne
es
mov
es
call
inc
pusha
lahf
mov
cmp
xchg
test
add
inc
inc
mov
cmp
mov
out
aad
fwait
imul
es
or
ret
adc
les
cltd
mov
out
and
in
inc
sbb
into
jae
dec
bound
cs
mov
aad
add
mov
mov
pushf
loope
imul
call
adc
hlt
cmp
in
sbb
inc
mov
sub
sub
lahf
mov
jl
jle
and
sarb
fdiv
clc
popf
lock
add
xchg
sub
jbe
add
push
mov
cmp
and
leave
push
aam
pop
mul
jbe
push
call
xlat
dec
pop
xlat
dec
flds
mov
mov
pop
punpckhbw
inc
adc
push
std
jne
movsl
imul
lods
test
fstps
les
adcl
and
push
jno
sarl
xchg
lock
loop
inc
cmpsb
out
or
jb
mov
push
or
dec
lods
pop
out
test
push
out
outsb
xchg
mov
pop
mov
addr16
int3
inc
out
stos
mov
xor
jl
mov
xchg
cltd
psubb
dec
push
insl
jns
pop
ss
sub
mov
aad
std
test
lcall
rol
jmp
nop
mov
jns
es
xor
fldenv
aaa
dec
addl
jne
mov
xchg
jno
adc
pop
jo
cmp
ds
lcall
fwait
adc
lock
test
add
clc
mov
iret
insb
and
cli
test
cmovge
push
cmpsb
pop
mov
cmp
in
gs
out
int3
xor
xchg
fcoml
shr
pop
push
sub
xchg
inc
and
cwtl
in
loope
or
push
daa
push
jnp
push
cmp
jns
dec
fdivrs
xchg
push
leave
jo
xor
cmp
add
stos
fistl
sub
push
push
push
mov
mov
push
fs
and
xchg
enter
js
or
adc
inc
mov
sbb
loopne
xchg
adc
out
ror
testb
xor
cmpsl
cltd
xor
xor
xor
pop
mov
sub
add
dec
or
pop
adc
push
das
push
pusha
in
mov
loop
push
mov
flds
mov
inc
and
dec
and
add
icebp
sbb
icebp
js
scas
sub
lds
push
in
or
or
js
addr16
mov
jg
nop
ds
mov
lods
push
fbstp
add
jo
mov
pushf
mov
push
cmp
add
pop
inc
gs
repnz
fiadds
sub
push
jae
sbb
cs
out
jl
fcoms
mov
mov
pop
adc
jmp
lds
and
scas
xor
scas
xor
fcmovnu
imul
jmp
in
push
inc
and
std
xchg
pop
mov
push
push
add
insl
rcrb
jg
mov
jp
ret
in
xchg
push
push
jnp,pn
xchg
mov
jb
sub
mov
imul
xor
lods
ds
jg
jns
cmc
mov
jp
xchg
and
out
ljmp
ret
inc
in
in
stc
xchg
lods
pop
icebp
push
jnp
sbb
mov
je
scas
outsl
or
mov
lret
out
and
pop
mov
pop
ret
out
mov
xchg
outsl
pop
das
in
xchg
les
sub
mov
adc
adc
fucomip
inc
xchg
aad
sbbb
or
dec
fs
push
sub
jns
ficomps
push
repnz
jbe
sub
lahf
rcl
cwtl
fldt
fcomps
in
pop
dec
dec
pop
sahf
and
mov
es
sbb
sbb
xchg
push
xchg
divl
sub
push
cmp
pop
push
nop
push
nop
es
xchg
inc
mov
ds
inc
push
aam
fdivs
sub
arpl
pop
addb
mov
pop
addb
hlt
mov
cwtl
mov
mov
push
xchg
adc
mov
daa
jecxz
sbb
cmp
test
and
call
mov
xchg
dec
lret
inc
aaa
sbb
int
dec
mov
xchg
sbb
xchg
daa
lock
mov
push
test
bndstx
in
cmpsb
xchg
inc
inc
inc
push
mov
jb
inc
cmpsl
addr16
push
or
int3
enter
loope
push
mov
pop
jo
arpl
mov
test
push
imul
or
sbb
xchg
mov
xchg
cld
mov
sbb
test
sub
es
leave
xchg
xchg
sub
in
cmp
mov
pushf
add
push
xlat
lret
xlat
ret
test
shll
insb
sti
das
pop
stos
sbb
push
ss
or
daa
sbb
jge
jns
call
dec
mov
jae
inc
inc
jae
and
popa
and
lock
test
mov
mov
sub
pop
test
or
lds
ds
js
fwait
sub
mov
mov
mov
pop
or
fsubrp
roll
orb
jno
rcll
ffreep
pop
cwtl
jno
sub
mov
push
push
push
pushf
xchg
cltd
loope
pushf
insb
sbb
dec
sub
sbb
in
fwait
pusha
sbb
cltd
insb
xchg
push
mov
in
inc
ret
mov
push
push
iret
mov
jno
push
and
jg
xchg
and
mov
gs
clc
xor
loopne
sub
pop
jmp
xchg
outsl
xlat
gs
les
xchg
pusha
cwtl
pop
xor
stc
call
mov
mov
mov
dec
mov
jge
push
dec
xchg
pop
xchg
push
sbb
xor
dec
ret
or
and
dec
push
loope
test
aas
insb
lds
or
pop
std
ds
jg
jne
and
mov
in
push
fldcw
mov
or
mov
jb
je
aas
jl
cmp
xor
les
ljmp
in
popa
push
cmp
loope
cmp
sbb
adc
dec
pop
das
fidivrl
shr
cmpsb
mov
add
sub
out
push
mov
fdivl
sbb
push
xor
ret
cs
jb
dec
addr16
pop
outsl
iret
mov
and
repz
sbb
sub
mov
stos
ret
jmp
enter
sub
mov
outsl
push
data16
les
cwtl
mov
dec
aam
sub
jns
pop
xchg
sub
xor
mov
jl
xor
pop
sbb
xchg
addr16
mov
repz
and
divl
jmp
mov
lods
pop
push
mov
and
dec
mov
push
ret
outsl
imul
mov
adc
fnsave
jb
or
imulb
inc
sub
and
add
pop
pushf
cmpsl
push
xchg
fildll
jae
je
push
int3
cmp
and
enter
in
adc
es
xchg
mov
mov
out
shll
shll
inc
in
add
push
ds
push
aas
pop
bound
mov
je
lea
insb
xchg
inc
movsl
fucomp
pop
xor
add
mov
inc
xor
dec
sub
sbb
cmpsl
fistpl
mov
mov
fwait
ljmp
cmpsl
fwait
ret
push
or
jns
popf
notl
cmp
xchg
xchg
inc
push
adc
push
ja
push
insb
shrb
jp
and
xchg
mov
inc
out
aaa
adc
xchg
inc
push
dec
je
cmp
inc
outsb
in
jns
clc
add
divb
pop
xor
push
mov
adc
or
sbb
jbe
iret
pop
sbb
std
pushl
sbb
outsb
ficoms
dec
jno
je
testb
inc
mov
js
icebp
add
push
rorl
aad
mulb
sub
enter
or
fsubs
adc
xchg
lcall
lds
adc
in
sub
cmc
and
mov
push
mov
popf
jns
fyl2x
jp
jns
dec
comiss
sti
cwtl
push
arpl
inc
shr
xchg
lods
and
adc
scas
jnp
mov
push
int3
jl
call
popl
xchg
shrl
sub
or
cmp
jnp
lcall
gs
adc
jb
push
inc
or
sub
loopne
or
and
scas
add
insl
mov
or
adc
imul
xchg
jae
xchg
cmp
cltd
cmc
jl
movsb
fstpl
and
fimull
cmp
mov
imul
mov
sarb
lods
and
call
cmp
and
push
push
sbbb
pop
xchg
mov
mov
mov
mov
fildll
std
jae
mov
stos
mov
leave
cs
repnz
push
xor
stos
mov
dec
shll
and
testl
popl
xor
fmul
push
mov
out
movsb
clc
cmp
inc
mov
stc
inc
add
push
mov
movsl
inc
push
in
call
out
aas
pusha
int3
xor
pop
pop
mov
mov
int
push
jge
add
aad
jb
ja
inc
mov
enter
push
xchg
sbb
fidivs
jne
lds
and
test
mov
cmp
mov
negl
add
mov
popa
idivb
mull
pop
je
out
out
jecxz
sbb
std
lock
or
xchg
push
hlt
cmp
xchg
mov
inc
sahf
das
fnstsw
sbb
mov
stos
outsb
and
inc
test
shr
and
push
fsubr
rorb
add
fwait
inc
repz
lods
pushf
add
mov
dec
jmp
or
xchg
and
aaa
cmp
shrb
or
dec
cmp
cmpsl
fld
or
out
xchg
scas
and
lock
out
inc
stos
pusha
in
lcall
mov
sqrtps
dec
push
aad
fistpll
subb
lret
test
inc
out
cmp
inc
call
or
roll
mov
mov
addl
jbe
push
or
mov
sbb
sbb
scas
adc
sahf
test
jp
adc
lock
mov
xor
js
inc
mov
xchg
negl
or
int
dec
sti
inc
test
pop
cs
notl
pop
mov
xor
add
mov
lds
div
jbe
lcall
push
mov
jne
fiadds
adc
lods
pop
loopne
popa
mov
cs
neg
sub
ret
and
jle
inc
jno
lods
push
mov
adc
mull
push
adc
rcr
test
sti
mov
sbb
lret
jmp
and
jmp
insb
into
xchg
push
mov
or
pushf
jg
push
push
xchg
aad
jle
out
mov
mov
xchg
push
dec
cli
icebp
fildl
pminub
mov
stos
leave
push
or
js,pt
out
sub
xchg
and
and
fldcw
and
ss
jo
add
xor
inc
in
sub
loope
mov
mov
bnd
jmp
ret
cmpsl
cltd
xchg
push
mov
sbb
inc
dec
outsl
xor
daa
push
test
adc
mov
ja
mov
mov
mov
inc
stos
shlb
int
pop
jns
jle
sbb
sahf
push
mov
pop
jmp
mov
pop
and
sbb
pop
arpl
faddl
mov
test
mov
mov
mov
cli
sub
out
push
sar
test
loope
pop
push
out
imul
clc
cmp
shrb
inc
pop
mov
test
adc
xchg
hlt
mov
leave
xchg
mov
test
and
icebp
mov
or
mov
mov
jge
mov
dec
jnp
adc
insl
or
test
cmc
aaa
bound
xor
ja
inc
mov
xchg
lods
sbb
ss
dec
adc
adc
gs
dec
popf
sbb
fistl
adc
ds
insb
mov
testl
lret
adc
dec
or
xchg
andl
lcall
pop
ds
add
pop
shrb
mov
jo
andb
outsl
xchg
adc
rorl
mov
ror
mov
dec
mov
lret
push
shl
sbb
mov
cmp
out
insl
add
pop
lret
sbb
add
lcall
imul
daa
hlt
xchg
sub
in
mov
pusha
adc
sub
movsb
popf
cwtl
inc
fwait
inc
mov
in
clc
push
lds
rolb
sbb
xchg
xor
jecxz
ja
repz
fists
sbb
fildl
pop
iret
je
adc
xchg
cmc
fsubr
adc
ljmp
xchg
loope
and
jnp
mov
cmp
ret
adc
or
ss
rclb
in
enter
cmc
mov
jg
adc
push
mov
xor
mov
mov
js
sbb
inc
movsl
dec
mov
jae
xlat
push
sbb
sub
and
in
std
mov
cmp
bound
pop
push
dec
lods
add
adc
push
mov
adc
jnp
jns
sahf
lods
inc
xchg
sub
es
push
adc
sbb
fistpll
dec
xchg
fdivrl
testl
testl
and
inc
cmp
test
adc
add
jb
xchg
push
scas
xchg
inc
cmpsb
mov
fistl
daa
add
push
fadds
and
fdivr
insb
test
add
fdivl
shrb
xor
cmp
xchg
cmp
sbb
mov
test
xchg
push
ret
jbe
jge
out
testb
loop
mov
and
xor
sbb
out
inc
sub
sbbl
pop
dec
lock
popl
mov
cmpsl
icebp
cltd
jmp
hlt
popa
mov
sahf
pop
sub
subl
shrb
mov
out
mov
push
xor
adc
inc
dec
sbb
mov
es
xor
push
pop
fdivr
cmc
sbb
jnp
xor
out
ret
fidivrs
lods
movsl
scas
add
dec
leave
jmp
das
negb
out
shrb
mov
fldcw
in
pop
sbb
sar
pop
and
inc
mov
xchg
or
bound
add
enter
cmp
xchg
popa
shll
pop
xchg
push
mov
or
lods
push
aad
js
and
out
and
sti
ja
xor
mov
dec
rcrl
xchg
cmp
aam
add
icebp
fbld
add
push
loope
and
inc
adc
and
mov
push
ljmp
aaa
inc
jle
inc
out
ss
addr16
xchg
outsb
lods
mov
mov
xor
popf
or
push
call
loope
xor
movsb
int
mov
push
leave
dec
pmulhuw
or
xchg
daa
push
aas
inc
mov
sti
out
sub
lock
inc
or
cmp
push
mov
sbb
sarl
add
mov
add
aam
xchg
xor
adc
cmp
pop
mov
pop
cmpsl
sub
call
adc
fldl
idivl
jge
out
xchg
push
cmp
fisubl
pop
xchg
push
pop
sti
pop
mov
or
add
cmp
and
lcall
cmp
cli
pop
stos
loop
outsb
add
lock
mov
shr
lods
mov
xor
jle
sbb
iret
jno
inc
mov
sbb
push
add
xchg
dec
ljmp
nop
jp
sub
fstps
faddl
and
jb
xchg
jb
mov
pop
xchg
dec
subb
neg
xchg
ss
lret
inc
idivb
lcall
xchg
pop
add
xchg
cli
and
lret
stc
incl
cmp
push
pop
mull
das
imul
inc
add
add
negb
cmpsb
rorl
lods
add
mov
mov
dec
out
mov
pop
xor
push
dec
mov
mov
cmp
inc
and
insl
hlt
testl
mov
dec
and
in
pop
push
lret
rclb
cmp
jo
cmp
dec
jno
xor
adc
dec
mov
lds
pushf
sti
inc
test
cli
add
or
pop
lret
adc
lods
stos
lcall
insl
and
mov
icebp
sub
ds
mov
and
mov
outsl
xchg
mov
push
mov
mov
int
sub
add
mov
out
mov
fsubrl
clc
test
mov
or
sbb
insl
lds
pop
dec
test
lret
subl
mov
pop
dec
testl
lods
add
sti
jae
loopne
mov
or
mov
and
ret
ljmp
xor
cmp
outsb
gs
cmpsl
push
das
mov
xor
popa
lds
outsb
pop
or
das
fidivrs
ja
cmp
dec
dec
andb
adc
add
sbb
mov
sbb
xchg
aas
aam
xchg
out
xor
loope
popa
mov
aaa
cmp
dec
ret
pop
dec
sbb
mov
shrl
jne
xchg
iret
mov
jp
mov
xchg
sti
lret
orl
cwtl
dec
push
movl
fists
shl
loop
jo
stc
pop
jg
or
sub
imul
arpl
push
out
decl
gs
mov
rorb
shrl
adc
ret
rcr
jb
add
xor
pop
cltd
orl
in
mov
das
or
fistpll
fwait
xor
mov
pop
xchg
ret
adc
jge
das
dec
jne
xor
ds
add
cmp
adc
push
dec
jp
mov
inc
aad
and
inc
push
mov
jg
mov
sbb
sub
and
sub
or
pop
pop
fildll
mov
int3
pop
pop
adc
scas
leave
data16
scas
scas
cmpsb
sbb
or
xchg
hlt
in
pop
pop
bnd
jbe
daa
cmp
xorb
jo
ret
xorb
out
cltd
test
lcall
cld
xchg
ljmp
in
mov
lods
adc
dec
xchg
clc
cmp
sub
mov
shll
in
dec
or
pop
aaa
dec
add
shrb
jmp
cld
pop
movsl
loopne
dec
mov
and
jbe
xchg
fwait
aaa
jmp
shrb
pop
test
std
pop
mov
mov
and
mov
sbb
jns
mov
fdivrs
out
das
cs
mov
je
dec
xor
mov
fildl
or
shlb
xor
ljmp
or
and
or
jmp
xlat
sbb
jmp
adcb
dec
pop
mov
cs
fsubs
pop
cmp
sbb
mov
incl
sbb
dec
mov
mov
int3
mov
dec
push
mov
inc
push
test
addb
mov
icebp
jle
lahf
fs
outsb
js
imull
loop
mov
std
iret
mov
mov
add
shr
pop
adc
cli
loop
and
mov
decb
cmp
das
push
mov
cmp
push
push
test
push
xchg
cmp
sbb
mov
lret
or
ja
pusha
cmp
mov
jg
test
icebp
push
pop
ret
pop
dec
inc
jne
sbb
js
mov
outsl
stos
dec
jo
pushf
mov
sbb
in
and
or
mov
adc
pusha
je
inc
cmpsl
sub
rol
rorb
jo
sbb
sub
cmp
lods
ja
clc
leave
leave
xchg
enter
arpl
stos
fisubrs
or
das
add
pop
push
addr16
imul
mov
push
sbb
xor
pop
ror
adc
dec
cmp
pop
in
movsb
ret
inc
fists
movsl
mov
lds
add
xorl
pop
mov
js
shr
lret
pop
jmp
gs
in
cmp
loop
jae
cmp
sbb
imul
outsb
call
lahf
imul
mov
sub
ss
daa
push
mov
repz
mov
xchg
orb
dec
or
cs
jp
in
pushf
movsb
or
imulb
js
cmovge
fs
cwtl
dec
lcall
jbe
xchg
into
sbb
fwait
jp
push
inc
and
ret
ret
out
or
mov
pop
lret
mov
mov
nop
shll
gs
xchg
mov
jl
xchg
insb
inc
lds
cs
rcl
push
pop
mov
mov
cmc
fisubrl
jg
xchg
lcall
cmpsb
aam
frstor
movsb
int
iret
hlt
mov
fst
scas
lret
adc
and
mov
cmp
cmp
push
push
xor
pop
ljmp
orb
mov
mov
jmp
ds
mov
or
add
pop
mov
xchg
js
jmp
pop
call
imul
mov
mov
mov
dec
imul
sub
inc
js
fwait
icebp
int
xor
scas
xor
into
pop
fidivs
hlt
lret
in
es
push
dec
test
cwtl
ja
mov
mov
mov
sub
loope
cmp
gs
ret
mov
dec
cmp
aad
sub
push
loope
rcll
mov
cmpsl
and
nop
enter
repnz
mov
sahf
pop
enter
pop
pop
enter
mov
bound
lds
aas
aad
cmp
sbb
pop
fstpl
mov
adc
push
imul
lea
icebp
mov
nop
scas
nop
fstl
jns
aas
fs
inc
ja
or
jnp
or
xchg
lahf
fidivl
adc
xchg
pop
mov
lea
jne
enter
cwtl
mov
xor
test
dec
mov
jno
mov
js
xorl
mov
divl
leave
ljmp
les
fimuls
add
aad
outsb
shll
rcl
push
popa
arpl
popa
add
fnstsw
mov
cmp
roll
xorb
aaa
clc
clc
xor
cmp
mov
push
mov
pop
sub
adc
fisttps
inc
mov
mov
stos
dec
in
aad
setg
push
add
aaa
sbb
jmp
adc
jnp
lock
jb
adc
fs
popf
add
int
dec
and
out
shll
push
dec
cmp
or
push
xor
inc
inc
imul
cwtl
xor
or
stos
outsb
or
cwtl
into
stos
xchg
repz
xor
fwait
out
cmp
loope
jl
lahf
dec
mov
jnp
mov
das
jno
adc
and
jo
les
into
jo
out
cmc
decb
stos
pop
out
mov
inc
jl
insb
ljmp
mov
mov
xchg
mul
mov
setb
jmp
fmull
mov
rcrb
js
cltd
push
in
xor
test
mov
stos
shlb
pop
nop
sub
adc
in
sbb
sbb
lods
mov
add
pop
inc
or
mov
inc
pop
pushf
cmp
dec
in
mov
adc
xlat
cld
mov
aad
addb
fiaddl
add
cmp
movsb
shll
rclb
sarl
xchg
js
ret
sub
sbb
loop
scas
sarl
out
scas
pop
xor
adc
jo
lahf
cli
mov
int3
pop
shll
or
adc
mov
pusha
add
jae
or
cmp
fidivrl
sbb
movsb
in
js
lods
out
jb
mov
adc
dec
les
push
movsb
jo
loop
mov
or
cmp
fiadds
mov
cmp
cwtl
arpl
ror
cmp
mov
or
in
xorl
dec
fs
mov
xor
adc
repz
test
cs
sub
dec
xchg
jmp
pop
cmp
cmpsl
loop
mov
in
loop
or
in
sarl
rclb
xchg
fcoml
mov
not
sbb
cltd
clc
fnsave
push
inc
pop
mul
loop
add
rcl
add
inc
bound
mov
push
je
pop
adc
shll
ficoms
in
lcall
ljmp
jns
sbb
les
adc
enter
outsl
or
popa
test
pop
sub
mov
out
push
test
pusha
or
pop
jae
cmc
stos
lds
sbb
push
fisttpl
test
ss
cmc
push
cmp
pop
adc
mov
and
jb
and
mov
in
daa
sti
cmp
out
mov
rorb
push
pop
pop
mov
repz
or
andl
and
adc
jbe
xchg
and
sub
push
mov
imul
fstpt
mov
jge
out
and
hlt
adcb
inc
jnp
cli
addb
arpl
mov
imul
lods
sub
or
cmp
adc
or
mov
add
push
lcall
sub
and
movsb
push
int
adc
inc
cli
decl
stc
addr16
jne
xchg
movsl
pop
xor
mov
pop
and
mov
call
inc
cmp
lret
add
cmp
mov
xor
int3
xor
push
std
adc
jne
lret
jnp
shll
js
dec
adc
fcoml
scas
cmpsb
test
and
shll
out
cmpsl
mov
aaa
nop
dec
mov
cmp
push
or
lds
sar
jmp
cmpsl
pop
and
mov
adc
gs
jbe
not
jb
ret
frstor
xchg
mov
pop
testb
jmp
mov
lods
fsub
push
call
push
mov
mov
inc
jecxz
cmpsb
test
inc
loopne
cmp
lret
cltd
jns
add
sbb
stos
lret
cwtl
int3
and
inc
pop
jnp
idiv
xchg
out
dec
lret
xor
mov
insb
push
fwait
leave
adc
jno
subb
cmpsl
mov
inc
xor
nop
inc
sub
jl
fdiv
rorl
cltd
hlt
pop
insl
incl
jnp
inc
adc
add
mov
pop
imul
push
pop
push
lea
rcr
cwtl
mov
mov
nop
mov
bound
sub
push
cmc
stos
cwtl
inc
movsl
xchg
jmp
out
je
add
pop
arpl
xor
into
mov
and
adc
clc
dec
dec
incl
xor
loope
cmc
dec
mov
adc
out
jbe
mov
lret
cs
cmpsl
cli
inc
mov
mov
xchg
dec
aad
lods
bound
mov
or
sahf
orb
dec
repz
std
leave
cmp
cmpsl
xor
cltd
mov
inc
rclb
rcrb
lret
fidivrs
inc
mov
mov
or
lock
dec
cmpsb
pop
in
fists
ret
shll
test
fists
mov
iret
sbbl
xlat
out
jmp
xchg
rolb
and
in
jbe
xchg
sub
ja
push
scas
jbe
jl
insl
xchg
pop
pusha
push
in
inc
daa
nop
xchg
fmull
add
shrb
mov
scas
sbb
or
nop
insb
fisttpl
repnz
popa
inc
inc
nop
or
popa
xor
test
dec
loopne
and
adc
aas
pushl
mov
pop
cmp
aas
mov
push
mov
sub
xchg
shlb
xor
xchg
aaa
push
das
add
or
imulb
sub
icebp
lcall
sbb
cmp
and
sahf
lock
mov
stos
dec
fstpt
les
roll
dec
in
mov
ss
mov
out
mov
jo
scas
add
cmp
and
mov
pop
rolb
cmp
loopne
mov
mov
pusha
ret
xchg
pop
xchg
inc
push
ss
pop
outsl
pop
jb
cld
fwait
adc
cmp
fistl
inc
loopne,pn
jae
and
add
icebp
fisttpll
pop
stc
push
dec
jle
dec
xchg
mov
mov
push
adc
dec
push
dec
out
jmp
imul
not
imul
and
mov
pop
pop
xchg
outsb
fwait
jnp
sbb
dec
adc
aam
das
in
pop
mov
cmp
out
cs
cmp
xor
mov
pop
movsl
inc
push
inc
mov
pop
gs
into
push
xlat
mov
popf
adc
aaa
imul
push
inc
jbe
mov
push
aas
sub
movsb
jp
mov
push
xor
mov
lret
incb
push
sar
and
pop
sub
test
mov
xor
enter
repz
rcll
lcall
leave
es
pusha
negb
cwtl
push
lret
mov
data16
in
and
js
in
and
fbstp
jl
imul
testb
dec
push
xor
add
test
daa
and
daa
ja
dec
pop
sub
out
mov
mov
popf
movsl
jp
aad
data16
adc
xchg
stc
xchg
jne
hlt
addl
mov
xor
jl
push
or
jb
xor
outsb
inc
cmp
jecxz
mov
lret
mov
fs
pushf
rolb
loope
jle
pusha
mov
xchg
push
jl
xchg
in
rcr
or
sub
lret
aad
add
inc
movsb
outsb
mov
pop
sbb
mov
xchg
mov
fsubrl
pop
push
and
lahf
xchg
lock
or
jg
jmp
outsb
mov
insl
and
mov
aad
pushf
adc
fcmovnb
mov
je
bnd
cmovne
imul
mov
inc
clc
mov
ja
fldcw
pop
insl
sub
movsl
adc
addr16
cmp
mov
sbb
inc
xchg
into
rorb
rcll
jnp
stos
xlat
mov
stc
aas
xor
dec
or
repnz
loope
push
cmp
mov
nop
sbb
cld
mov
push
lcall
jl
and
lock
cmp
repnz
dec
stos
push
xchg
out
cmp
inc
mov
lret
sti
in
insb
sub
icebp
push
in
cmpsl
in
sti
sbb
xchg
fsubl
xchg
jb
adcb
scas
jecxz
cmc
cs
and
xchg
mov
jo
or
jl
ret
xor
add
inc
mov
mov
outsl
rcrb
lods
mov
fildll
stos
jnp
cld
add
push
sbb
lret
ss
inc
push
je
fdivrs
mov
test
push
out
sti
xor
insb
mov
repnz
sti
jo
sbb
outsb
xlat
add
pop
dec
and
sub
adc
inc
imul
mov
arpl
cmp
test
lret
dec
popa
push
clc
push
rcl
or
aaa
out
pop
xlat
or
mov
les
sub
xchg
mov
pushf
test
push
jmp
jg
cld
scas
sbb
sbb
sbb
jnp
push
jae
scas
mov
adc
jle,pt
cmp
scas
dec
xor
outsl
popf
xchg
ja
push
dec
loopne
sub
adc
adc
mov
out
outsl
cmp
mov
pop
pop
in
fmul
fidivl
sbb
aad
or
leave
iret
dec
pop
xchg
lods
cld
mov
stos
jne
bound
push
or
insl
push
and
lcall
popl
mull
pushf
push
ret
movsb
lea
rcr
cmpsb
rcrl
push
dec
hlt
hlt
or
push
cmp
or
std
pop
pusha
je
adcl
fs
sbb
cmpsb
das
fstps
adc
clc
icebp
sbb
leave
mov
scas
shl
rclb
mov
cmpsl
push
fsub
push
into
sub
mov
sub
jbe
push
push
push
xchg
dec
xchg
mov
stos
in
aaa
xchg
lcall
mov
mov
adcb
xor
xchg
rolb
movsl
enter
jp
sarl
xlat
adc
imul
iret
or
push
ljmp
pop
pop
or
inc
test
adc
and
pop
xlat
repnz
lcall
pop
xlat
cmp
push
cld
lods
cmp
ja
adc
cmp
xor
sub
aad
hlt
and
incb
push
mov
movsl
push
adc
and
inc
jl
dec
jle
movsb
test
or
dec
mov
shrb
fcomi
loop
lcall
mov
xchg
mov
enter
add
push
ljmp
in
ss
movsb
fstl
movsl
inc
cmp
xchg
mov
mov
test
jno
inc
mov
sub
sbb
cs
les
cmp
insb
dec
aas
adc
hlt
sbb
arpl
push
mov
insb
inc
sub
and
adc
decl
lods
mov
pop
jle
int
mov
mov
sub
andl
fisttps
dec
pop
mov
js
jmp
out
pop
dec
xchg
sub
pop
mov
adc
or
repz
clc
andb
lock
scas
xchg
arpl
loope
jp
push
fld
paddw
sbb
mov
dec
adc
xchg
lods
xor
sub
movsl
jno
jne
lcall
insb
popa
push
jns
hlt
fwait
mov
cmp
mov
adc
nop
lret
fstps
popf
pop
mov
lea
mov
daa
mov
xchg
ljmp
sahf
xchg
bswap
mov
cs
adc
mov
test
aas
mov
das
mov
fs
fldenv
add
insb
inc
int3
push
push
subl
and
pop
sub
and
nop
fidivrs
leave
mov
fcmovb
dec
mov
mov
cmpsb
cmp
mov
scas
xchg
test
in
mov
pop
imul
lret
dec
loopne
out
loopne
add
aaa
test
aas
dec
fisubrl
cmp
mov
jg
sti
sub
sub
adc
test
stos
icebp
push
test
lock
add
jmp
adc
outsl
pushf
jnp
xchg
mov
cmp
incb
pushf
jmp
adcb
jbe
push
nop
mov
in
call
rorl
out
sub
xchg
inc
mov
inc
jbe,pt
bound
pop
cmp
lahf
out
test
test
mov
hlt
mov
dec
push
jns
mov
int
push
out
mov
fldl
xor
js
xchg
pop
test
call
push
xor
nop
inc
pop
outsl
lods
jg
cmpsb
sub
out
jl
push
fcmovu
lahf
js
stc
popa
adc
inc
push
mov
lea
jo
mov
xor
insb
mov
test
jl
jge
ss
inc
adc
inc
jnp
les
lahf
adc
insb
mov
add
push
je
test
mov
je
inc
loop
xchg
sbb
push
insl
outsb
aam
inc
lahf
jl
jae
inc
lret
xchg
in
fisubl
out
mov
xchg
hlt
dec
nop
fs
and
push
leave
pushf
jmp
adc
sysret
jnp
sbb
repnz
mov
lods
xchg
sbb
push
idivl
sub
roll
push
mov
or
xor
add
sub
xor
cltd
sub
xchg
stos
lods
pop
mov
xor
add
lods
adc
inc
adc
xor
fs
shl
add
in
sbb
jb
dec
xor
cmp
pop
int3
mov
jo
xabort
fmull
pop
addl
aad
arpl
ret
popf
xor
lret
enter
or
dec
or
or
es
idivl
stos
add
sar
add
pop
pop
cltd
test
mov
cwtl
lods
mul
scas
pop
shrb
in
enter
shr
mov
dec
inc
int3
sbb
sbb
xchg
imul
fs
sbb
dec
iret
out
inc
ja
icebp
lret
sbb
out
adc
imul
out
dec
pop
and
adc
mov
sub
sub
jmp
aad
sbb
lret
inc
mov
ret
mov
mov
xor
addr16
iret
cmp
sbb
notl
xchg
aas
movsl
imul
xor
push
enter
decl
pop
and
testl
and
lods
push
mov
mov
cmovnp
int3
dec
pop
adc
push
add
push
push
pop
or
rcrl
stos
adc
xlat
adc
call
insb
pop
pusha
loop
mov
push
call
popf
sbb
add
mov
mov
into
mulb
push
mov
leave
and
insb
data16
cmp
adc
fldl
mov
sub
sub
mov
and
jo
mov
inc
cmp
dec
mov
lahf
xor
test
jnp
mov
andl
sbb
pushf
pop
cli
push
push
mov
fs
mov
cmp
test
xchg
stos
cmp
mov
adc
sti
fsubrs
das
es
pop
pushf
jbe
push
lret
push
movsb
ja
push
or
xor
mov
add
sub
mov
gs
dec
decb
fcomi
cld
fdivrl
test
mov
movsl
push
je
inc
pop
test
add
mov
mov
mov
cmpsb
cld
test
push
mov
push
ljmp
ss
add
sbbb
inc
fwait
scas
ss
lods
or
inc
insl
jp
repz
lahf
adc
das
stos
in
sarl
mov
and
push
rcll
ds
sbb
jo
adc
int
test
addl
fcomp
xorb
out
loop
imul
stos
jl
sbb
loope
lahf
inc
lds
sub
lods
das
icebp
je
data16
pop
es
icebp
lret
jg
add
adc
inc
xor
repz
inc
jbe
es
jl
inc
add
push
xchg
cli
mov
dec
outsl
orl
sub
stos
pusha
inc
and
push
ja
movsl
or
adc
sub
xchg
jno
mov
jo
pushl
mov
push
jmp
cmc
movsl
fisttps
xlat
imul
inc
call
adc
inc
mov
stc
mov
insb
and
testl
push
dec
pushf
dec
inc
pop
push
test
pop
pop
mov
jno
inc
sahf
repz
mov
shrb
in
out
mov
leave
shrb
ja
aaa
dec
mov
mov
movhps
cmpsb
pop
mov
fimuls
repz
rcr
push
loop
add
sbb
stos
push
test
sbb
xlat
data16
fistl
adcl
sbb
mov
lret
shlb
cs
loope
mov
mov
add
mov
or
out
mov
scas
nop
add
repz
fdivrs
imull
and
enter
fs
insl
cld
pop
lods
addr16
push
negl
xor
jg
cmp
out
mov
inc
adc
dec
daa
fwait
test
ss
mov
pop
clc
inc
push
add
ja
sub
xchg
inc
insb
xchg
ret
pop
stos
or
push
jns
lock
xchg
inc
test
pop
cltd
out
pop
xor
cwtl
dec
loope
mov
cli
pop
push
insb
ja
push
pop
aaa
dec
and
gs
lahf
icebp
scas
imul
push
and
inc
jle
or
xchg
jmp
enter
dec
scas
jae
adc
jge
sbb
cmp
leave
imul
or
pop
jl
ret
add
mov
xor
bound
mov
cwtl
xchg
into
fisttpll
icebp
pop
mov
leave
inc
arpl
in
xchg
into
lea
add
mov
scas
das
shrl
dec
and
or
push
xchg
adc
cmpb
lret
pop
sbb
inc
scas
fildl
dec
pop
inc
xor
adc
push
cmp
sbb
gs
jl
pop
out
jb
push
or
push
mov
bound
dec
lods
lea
aas
fisubl
fnsave
mov
lock
adc
loopne
movsb
and
ret
cmp
in
pop
sub
cltd
inc
mov
inc
lds
outsl
lahf
orl
sbb
push
push
mov
xchg
sub
or
testb
sahf
lods
dec
mov
stos
jbe
aad
adcb
popa
xlat
movsb
stos
pop
or
lods
popf
inc
testl
aad
adc
test
xchg
inc
inc
rorl
imul
jl
call
imul
int
pop
mov
xchg
mov
movsb
inc
push
sub
shr
jne
mov
add
xchg
mov
std
in
mov
insl
mov
jmp
or
push
lret
ds
dec
out
iret
cmpsl
mov
push
sub
sbb
and
or
xchg
mov
cmp
rcll
fcompl
pop
ficoml
paddusw
xor
call
mov
push
lea
dec
movsb
xchg
push
add
xor
cwtl
scas
icebp
mov
jns
inc
pop
lret
frstor
push
inc
sbb
sti
xor
stos
movsl
push
pop
mov
xchg
pop
lret
adc
mov
pop
pushf
cmp
jbe
push
stos
cld
ficoms
and
int3
jl
sbb
bound
loope
mov
addl
push
lods
out
lahf
je
and
sarb
add
bound
inc
pop
mov
push
scas
push
lds
lods
add
cmp
lea
fidivrl
loope
js
pop
xchg
ds
in
adc
cmp
ds
cmp
mov
mov
xor
lods
sub
adcb
scas
sti
xchg
push
mov
dec
jb
test
lock
fidivrs
mov
add
or
ja
xlat
xchg
dec
adc
xchg
xchg
out
mov
aam
mov
cs
cmpsl
xor
sahf
int
clc
jo
fisubs
sub
xor
mov
andl
dec
mov
mov
ljmp
pop
push
push
sarb
xor
mov
stos
outsl
jge
jnp
andb
outsl
pop
leave
dec
std
repz
and
sti
cmp
and
xor
mov
cwtl
repz
shl
jno
imul
push
into
rcrl
xchg
insl
mov
inc
int
lret
mov
mov
mov
and
rclb
cmc
jbe
jecxz
aas
shl
dec
popa
xor
bound
dec
inc
sbb
outsb
mov
loope
iret
push
lret
rol
add
sbb
xor
lahf
lret
pushw
jae
fsubrs
mov
xchg
stc
sbb
jecxz
rcrb
cmp
mov
cmc
das
je
jp
rorb
xchg
int
in
out
test
fdivrl
fldenv
pop
flds
xchg
or
test
mov
cmp
not
sbb
xor
adcb
addr16
es
sub
or
push
xchg
idivb
mov
ja
pushf
and
and
lahf
int
stos
inc
or
or
outsl
pop
shlb
dec
dec
cmp
dec
int3
dec
add
stos
mov
xor
or
mov
pushf
fildl
pop
movsb
das
mov
push
inc
pop
xlat
fs
sbbb
imul
jmp
mov
das
mov
mov
xchg
inc
and
push
out
and
mov
mov
pop
out
push
ds
clc
mov
jl
pop
lret
or
xor
mov
push
hlt
sub
not
xchg
push
daa
es
out
cmp
mov
decl
loop
add
xorl
ficoms
lahf
sub
sub
stos
and
punpckhdq
repnz
xchg
pop
xchg
jno
sbb
cmpsb
pop
rclb
jb
jno
dec
cli
loopne
hlt
gs
icebp
mov
adc
lods
pop
xorl
and
adc
cmc
hlt
jb
loop
add
lods
outsl
cld
xor
mov
adc
add
xchg
xchg
cld
cmp
jb
es
out
xchg
rorl
push
clc
aas
xor
add
and
lds
mov
mov
hlt
adc
pop
loop
inc
fcomps
push
xor
test
xchg
rol
push
hlt
in
fsubrl
stos
mov
jae
fdivp
cmpsb
adc
lods
lods
clc
loopne
dec
cwtl
cld
mov
sub
scas
loope
adc
adc
mov
push
fwait
jge
dec
fadds
int3
dec
cmpsl
sti
repz
aas
inc
add
xchg
daa
cmp
push
adc
jl
ret
or
jecxz
popa
sti
addr16
dec
push
adc
lea
ja
cmp
push
push
xchg
fs
rolb
mov
stos
fcomps
sub
dec
hlt
lods
sbb
jb
pop
cmp
das
cmpsl
mov
aad
andb
stos
inc
cmc
add
fst
jmp
icebp
mov
mov
ficompl
into
sub
sub
mov
out
shr
aaa
stc
incl
xor
sbb
jnp
out
jge
push
test
pop
push
push
inc
lea
ret
cwtl
xabort
push
lcall
aas
jecxz
pop
or
xchg
test
arpl
xor
ljmp
dec
lahf
cmp
sub
dec
pop
std
sbb
and
gs
push
dec
xor
or
cmc
jb
cmpsb
fwait
and
add
add
push
jl
stos
xchg
outsb
stos
cmp
xchg
jnp
popa
enter
cltd
out
adc
js
mov
dec
aam
lahf
or
scas
inc
shrb
js
lds
stos
insl
rcrl
pop
sarb
xchg
divb
addl
ja
out
ret
aas
mov
aad
mov
in
push
dec
ss
or
hlt
adc
leave
push
lret
pushf
lock
mov
dec
pop
in
jae
in
addb
inc
inc
jb
adc
push
or
cld
dec
test
leave
push
ss
mov
shl
push
adcb
ljmp
test
shll
repz
add
pop
cmp
es
sub
aam
pop
add
add
lods
jl
xor
xchg
popf
pop
inc
rolb
movsb
push
jne
fnstsw
enter
xor
mov
es
in
ds
inc
dec
mov
cmpxchg
jmp
ret
add
push
inc
mov
dec
inc
mov
mov
add
fisttpl
and
insl
add
push
rorl
pop
mov
mov
cmpsb
dec
repnz
dec
scas
das
push
xor
adcb
ret
movsl
clc
ds
das
mov
and
push
stc
in
out
aaa
shll
f2xm1
imul
repz
mov
sub
in
gs
dec
fstps
pop
mov
cmp
ror
addb
mov
adc
sbb
xchg
lock
push
and
inc
add
fdivs
sub
sbb
adc
repnz
loope
add
fwait
dec
push
cld
add
aaa
movsl
dec
hlt
in
sarb
repz
rcrb
push
ffreep
pop
pop
mov
stos
or
aam
jg
int3
xchg
mov
push
pop
jnp
aad
idiv
sti
aam
xchg
divl
push
mov
int
pop
loop
push
outsb
mov
fisubl
inc
mov
in
push
rcrl
iret
ret
pop
shll
add
out
mov
jnp
in
pusha
shlb
call
lahf
lods
clc
mov
shrl
mov
in
fsubr
mov
dec
adc
lea
inc
lea
sub
ljmp
mov
mov
cmp
sbb
int
movsb
roll
stos
rolb
xor
jl
mov
pop
pop
in
xor
cmpsb
jne
mov
xchg
pop
inc
jg
mov
cmp
daa
xchg
test
jo
sbb
and
cmp
mov
or
push
inc
jo
ljmp
aas
seto
cmp
cwtl
out
ret
rcrb
les
jl
mov
push
xchg
int
sti
mov
sarl
fdiv
repnz
push
fldcw
mov
stos
mov
mov
mov
sub
mov
and
lcall
dec
sti
jnp
pop
fistpll
mov
or
inc
adc
mov
mov
daa
inc
pop
sub
outsl
mov
stos
inc
inc
jecxz
adc
push
loope
les
mov
inc
sbb
les
aad
pusha
mov
ret
sbb
push
xchg
add
mov
sub
cld
pop
cmp
inc
js
push
pop
test
pop
divl
jae
aaa
cltd
js
mov
orl
xlat
out
jge
call
cmp
sarb
pop
xchg
les
cs
cmp
addr16
sbb
stos
or
mov
mov
and
test
mov
pop
fucomp
mov
xor
lret
xor
dec
push
mov
lods
addr16
aaa
pusha
lock
mov
mov
out
daa
push
fildll
addl
out
aam
test
out
adcl
and
mov
push
les
sahf
add
ret
test
xor
hlt
dec
sub
fildll
pop
call
sahf
mov
xchg
cmpl
jno
bound
add
dec
scas
adc
pop
xor
cmp
mov
stos
imul
cmp
jge
out
jbe
aaa
pop
jno
shl
imul
ja
adc
or
fwait
js
in
cld
jle
negb
dec
popf
jg
xchg
lret
mov
aam
shr
cld
outsb
ja
mov
cwtl
fst
jge
mov
jb
or
sub
fs
cmpsl
pop
push
dec
leave
sbb
into
xor
test
adc
inc
stc
call
xchg
xchg
fsubs
sbb
in
sub
pushf
inc
or
fmull
lea
das
xchg
loop
loop
add
mov
inc
and
fistpll
ljmp
and
cmp
sbb
xchg
and
fwait
cmp
fimull
and
stc
adc
mov
sub
jbe
sub
rolb
dec
fs
fnstsw
mov
imul
aad
jle
or
add
and
mov
lods
pop
ret
mov
sbb
nop
cmc
jae
shlb
xchg
roll
and
cld
push
and
xchg
lret
outsl
mov
outsb
imul
dec
push
push
xor
mov
or
xlat
test
jno
loop
mov
push
psubsw
add
test
pop
and
add
test
mulb
pop
pop
and
inc
jb
sub
jle
adc
cmpsb
sti
add
pop
push
push
int
mov
ljmp
test
push
movsl
js
mov
shl
jno
enterw
and
and
hlt
xchg
stos
test
icebp
cmpsl
mov
pop
mov
pop
addr16
sub
sub
cmpsl
xchg
repz
out
mov
or
sti
mov
or
dec
pop
cmp
call
pop
cs
leave
push
and
inc
or
pusha
push
cs
dec
cmpsl
fidivs
insl
or
or
sarb
int
fxch
add
dec
jge
insb
int
les
repz
dec
gs
sbb
jl
lds
pushf
adcl
sti
adc
repz
into
fs
enter
or
adc
cmpsl
add
cltd
ficompl
or
pop
in
sub
lock
ret
jo
xchg
xor
stos
test
push
jl
xchg
call
clc
sbb
cld
mov
test
aad
aas
ficompl
dec
and
push
push
push
addr16
dec
xchg
lock
test
and
popa
test
mov
cwtl
repnz
and
clc
enter
hlt
sbb
std
cmc
push
jmp
and
aaa
xor
lods
jbe
adc
cltd
test
and
push
add
out
movb
cmp
mov
call
test
or
sub
cmp
mov
lret
sbb
push
xor
push
and
lret
fisubrs
mov
dec
nop
sub
mov
inc
mov
cs
ss
jbe
sbb
fisttps
xchg
and
mov
sub
adc
test
dec
pop
push
jp
imul
dec
xchg
mov
mov
mov
dec
push
inc
mov
bound
fiaddl
mov
mov
mov
out
push
sub
or
sti
adcb
xchg
adc
inc
adc
jecxz
mov
pop
lret
aas
pusha
sub
adc
sub
inc
mov
dec
add
fcomps
int3
insl
aas
mov
sub
dec
movsb
jb
and
mov
jnp
inc
and
fsubl
int
std
cmc
shl
sarb
xchg
ret
push
rcll
in
xor
sbb
ficoml
ja
push
mov
clc
adc
lds
pushf
dec
inc
xchg
jnp
push
jge
je
out
stc
cmc
push
lcall
mov
mov
xor
xchg
call
jno
mov
testb
int3
push
mov
out
jno
ja
and
mov
adc
fwait
mov
mov
rcl
arpl
je
xchg
lds
xchg
xor
mov
jo
inc
dec
ja
cmpsb
push
pop
lret
and
sbb
pusha
rcrl
ja
jb
popl
push
loopne
dec
loop
push
add
mov
mov
lret
cltd
xor
lea
into
jns
rcll
sahf
xor
sbb
xor
mov
push
adc
leave
sbb
in
leave
cld
or
and
cld
arpl
ds
or
in
sbb
mov
fcmovbe
ss
les
dec
sbb
sbb
push
in
inc
or
clc
xor
in
jmp
mov
cmp
lods
divb
arpl
fisubs
inc
data16
sub
inc
sahf
adc
out
orb
or
cltd
inc
inc
and
rclb
cmc
outsl
mov
pop
pop
leave
enter
sarl
scas
jmp
sbb
push
in
sahf
sarb
xchg
enter
enter
lock
icebp
inc
mov
sbb
aas
and
notb
pop
fsubs
pop
jecxz
inc
mov
mov
push
in
mov
popf
push
sahf
fldt
push
ss
in
arpl
enter
push
mov
ror
in
or
mov
dec
sub
jns
jbe
jns
dec
push
call
mov
pop
iret
push
mov
jb
jmp
and
mov
or
aas
and
aas
repnz
jp
mov
push
push
fldl
repz
jns
in
cmp
loopne
push
outsl
leave
xor
inc
lds
fisttps
and
es
add
test
mov
mov
cwtl
testb
or
int
jns
lds
enter
push
or
xchg
pop
inc
pop
aad
mov
and
mov
stos
jbe
cmp
lock
inc
pushf
das
cmp
mov
xchg
scas
pop
sbb
xchg
fs
mov
jp
pop
mov
test
je
std
ret
add
jg
push
adc
aaa
mov
scas
clc
in
xorl
pop
sar
icebp
adc
cmc
add
mov
sub
xchg
sub
push
mov
gs
sbb
bound
call
lcall
out
push
pop
sbb
jg
mov
inc
xchg
aas
or
or
test
es
or
ss
es
add
fstpl
lahf
and
negl
pusha
push
sub
fmull
add
stc
push
stos
imul
ljmp
xor
jne
sbb
inc
jp
xchg
addr16
lea
jne
mov
inc
lds
adc
push
xchg
sti
shrl
xchg
xchg
enter
or
movsb
xor
jecxz
add
jecxz
jbe
stos
neg
call
jbe
cwtl
mov
mov
jle
mov
ss
mov
add
lods
push
mov
sbb
xchg
fwait
cmp
cltd
jp
push
xor
sub
jne
pop
repnz
cmp
lock
icebp
dec
lahf
pop
in
in
rolb
mov
ja
scas
push
fnstsw
testb
repz
cs
xor
pop
mov
lock
xchg
cltd
add
stos
imul
mov
push
jmp
add
mov
xchg
mov
push
mov
sub
add
bnd
sub
pop
lea
out
xor
aam
mov
movsl
in
sti
sahf
aas
sub
inc
sbb
pop
rorb
lods
sti
pop
sbb
add
mov
push
xchg
test
out
pushl
inc
or
das
mov
lea
enter
addr16
out
mov
out
rcl
mov
or
xorb
xor
jbe
jbe
add
maxps
pop
sub
popf
pop
out
xchg
sar
cltd
push
into
inc
in
rcrl
cmc
jge
int3
sub
mov
push
xor
sahf
sar
push
sti
mov
fdivs
jg
ret
xchg
gs
int
jne
fnsave
push
call
out
pop
cmc
cld
testl
cmp
and
xchg
cli
xor
push
aam
mov
test
enter
arpl
icebp
mov
mov
test
mov
mov
add
dec
andl
mov
fildl
xor
mov
dec
cmp
mov
push
inc
jg
js
stos
push
jmp
dec
push
inc
cmpsb
xor
pop
gs
or
loop
mov
pusha
dec
jne
call
sub
mov
pop
and
hlt
mov
stos
stc
addl
add
pushf
and
fwait
mov
jbe
repnz
cmp
inc
jbe
pop
mov
mov
xlat
push
shrl
jae
jnp
fwait
mov
popa
orb
stos
je
aaa
lahf
mov
cli
stc
pop
notb
arpl
mov
or
jbe
mov
test
jnp
inc
mov
sahf
pop
sub
or
push
cmp
or
iret
mov
jle
adc
sub
inc
stos
mov
adc
xor
mov
xor
push
sbb
push
pop
sbb
push
add
addr16
popa
jmp
mov
lcall
mov
mov
jle
movsb
setne
imul
jge
leave
inc
inc
subb
xor
mov
jmp
ljmp
pop
push
outsb
mov
or
pop
jle
nop
xor
push
fldl
out
jno
stos
mov
jnp
and
add
imul
scas
jb
js
in
mov
ss
cmp
jb
jbe
ss
lret
mov
loope
or
cmpsb
inc
shrb
cs
sbb
hlt
xor
addr16
vminps
imul
mov
ficoms
sbbl
push
mov
ret
add
dec
rcr
mov
inc
cltd
iret
sbb
jmp
jg
jg
mov
cmp
shll
xor
jl
xchg
ret
call
and
bound
push
enter
scas
cmp
add
outsb
xor
jp
stos
pop
cmpsl
adc
push
jae
out
in
iret
add
mov
add
xchg
adc
fcomps
in
repz
mov
push
push
and
lcall
imul
dec
mov
mov
mov
out
outsb
xchg
sbb
jge
iret
pop
mov
adc
or
and
add
mov
cmpsl
mov
orl
je
fsts
xchg
iret
push
lea
pop
cltd
test
inc
push
hlt
jg
sbb
adc
out
pop
jno
mov
pop
fildll
pop
and
daa
mov
and
and
lcall
mov
scas
pop
and
ds
pop
stos
mov
stc
jbe
sub
scas
rclb
insb
mov
adc
sbb
mov
in
lret
imul
js
push
jnp
xchg
xor
inc
pop
aaa
xor
xor
push
adc
lods
add
push
popw
adc
pop
mov
fwait
mov
dec
pop
and
sbb
xchg
jp
test
mov
fsts
jp
jns
stos
sub
jl
nop
lds
jne
aam
fldl
push
rorl
lret
ljmp
fs
stc
mov
idivl
outsb
cli
mov
sarl
mov
out
rcll
cmpsb
scas
jb
std
and
shl
cmp
fsubrs
mov
sbb
xchg
and
ret
and
nopl
clc
xchg
leave
and
sub
call
pop
movsb
add
sub
cmpsl
scas
mov
icebp
mov
stos
mov
xchg
pop
fs
into
mov
in
mov
fiadds
repz
or
addr16
pop
ljmp
shl
stos
fmuls
lods
shrl
leave
fsubr
push
or
add
out
lods
and
sub
sub
repnz
xchg
inc
test
jmp
sbb
xor
ljmp
or
mov
jle
xchg
scas
pop
mull
andl
out
xchg
jl
int3
or
and
ds
sbb
fnsave
pushf
hlt
sub
enter
dec
mov
mov
pop
je
repnz
jecxz
pop
jo
test
sbb
add
ret
aaa
xchg
cmp
inc
xchg
mov
push
xchg
fs
adc
inc
xchg
mov
call
cmp
push
adc
lret
jbe
jo
jmp
inc
ret
jmp
cltd
push
or
int
aaa
push
movsb
icebp
mov
ljmp
loopne
mov
clc
inc
xchg
mov
divl
repz
xchg
jp
mov
aam
test
inc
idivb
scas
mov
push
rol
mov
sbb
xor
xor
out
and
std
xor
dec
scas
add
pusha
je
sbb
sarl
push
icebp
lahf
mov
cli
cli
leave
stc
or
pushf
sahf
pop
ja
xorb
add
rcll
adc
scas
addr16
std
fs
stc
jecxz
jmp
cmc
ret
and
cmpsb
pop
cltd
push
xchg
leave
pop
jbe
mov
jne
sub
sti
pop
and
push
lds
fs
and
sti
push
pop
rcl
cmc
sub
xor
in
xchg
lret
jbe
cltd
push
cs
out
jnp
add
and
hlt
filds
js
sub
sbb
pop
js
dec
mov
push
sbb
fs
xor
dec
cltd
lea
outsl
fs
or
cld
sub
test
dec
into
and
mov
mov
shl
loop
in
cmp
mov
orb
or
test
xor
mov
sub
mov
ja
inc
testb
jmp
in
dec
push
ret
sub
xchg
and
bound
insb
cmpsl
testw
and
ret
int3
or
dec
jb
aaa
adc
dec
inc
or
mov
popa
xor
int
pop
mov
pop
pop
and
insl
jp
push
movsb
sbb
cmp
rcll
loope
icebp
mov
std
push
arpl
sub
loopne
jmp
pop
xchg
hlt
mov
push
out
adc
scas
dec
jecxz
pop
or
adc
out
inc
mov
stos
sbb
iret
movsl
bound
nop
mull
adc
repnz
cmp
xchg
xchg
sbb
sbb
cmpb
jge
outsl
dec
test
push
mov
xlat
jnp
jge
or
mov
sub
jo
inc
mov
pop
inc
mov
mov
adc
jge
cltd
rolb
add
mov
ds
popa
imul
icebp
sub
and
push
add
in
mov
add
pushf
sub
stc
rcrl
add
xor
cmc
mov
bound
fsubrl
mov
add
jnp
mov
add
and
jb
dec
xchg
test
xor
xchg
stc
and
adc
adc
out
mov
xchg
dec
lret
mov
xchg
sbb
hlt
insb
xchg
push
lcall
mov
inc
cmp
inc
popa
cld
pop
push
mull
push
out
xchg
sbb
fcoml
jge
lret
mov
sahf
mov
leave
pop
and
sti
loope
idivl
cli
fidivl
adc
adc
mov
fwait
mov
out
xor
sub
add
pop
pop
mov
scas
andb
pop
iret
xchg
mov
sub
lock
lds
js
aas
and
or
sbb
push
sbb
fcompl
jge
scas
mov
int3
and
jno
cmp
testb
notl
or
push
aam
xor
add
mov
dec
inc
aaa
mov
dec
pop
mov
fs
push
adc
ds
popa
xor
in
stos
addr16
lret
testl
insb
ljmp
insl
in
cmc
shlb
inc
arpl
add
js
rcrl
xor
sub
inc
fdivrl
cmp
add
pop
lock
scas
adc
cmp
lods
xlat
mov
movsl
or
nop
adc
mov
jo
in
lcall
nop
fwait
test
inc
out
push
test
xchg
test
icebp
icebp
gs
push
inc
xor
clc
out
cmp
adc
aam
movsl
out
lods
mov
in
jmp
jb
xchg
pop
dec
sub
testl
sub
mov
mov
sahf
cli
push
or
mov
loop
arpl
pop
je
xchg
sbb
arpl
aam
mov
sub
push
js
roll
dec
and
inc
cmc
inc
lods
cli
jg
arpl
pop
add
ds
mov
fcomps
mov
xchg
sbb
cld
aam
outsl
xlat
jno
test
inc
dec
rcrl
sahf
pushf
adc
mov
pop
aad
jle
nop
adc
sbb
cmp
add
gs
push
inc
xor
cmp
inc
int3
push
aad
sbb
outsl
mov
mov
and
mov
pop
inc
adc
movsb
dec
xor
jb
sub
sub
mov
and
sub
push
cmp
fstpt
and
xchg
pop
adc
push
pop
cli
add
out
push
jbe
dec
cmp
lods
in
push
mov
pusha
jecxz
aad
mov
rep
cmp
out
xchg
push
mov
dec
and
dec
fs
roll
mov
in
and
aas
jp
addr16
cli
sti
ror
push
and
adc
mov
mov
mov
in
add
cmpsl
ficoml
js
out
jge
sbb
lea
gs
dec
fsubrl
imul
push
adc
cmc
xor
lods
sub
add
inc
xchg
loope
cmp
mov
mov
cs
out
faddl
fwait
mov
xor
testl
lret
jb
mov
push
in
mov
mov
pop
cmp
or
or
fs
frstor
das
jp
jge
or
jo
sbbb
or
dec
xor
popf
loope
testl
jge
sbb
jnp
pop
mov
loop
les
stos
sub
add
jg
pop
mov
mov
mov
sub
aad
inc
inc
icebp
pushf
shll
ret
dec
push
bound
add
popa
sub
and
cmp
sub
loop
stos
jecxz
test
or
in
shll
pushf
jecxz
arpl
in
outsb
es
dec
out
mov
sub
test
aam
dec
inc
xchg
cmp
mov
mov
dec
mov
dec
cwtl
stos
aad
hlt
cmc
add
or
xchg
sub
mov
or
in
mov
inc
ljmp
gs
adc
jnp
cmp
or
ror
xchg
and
cmpsl
adc
or
minps
pop
mov
xchg
and
std
movsb
or
jno
push
inc
xor
cmp
mov
fsubrp
xor
dec
or
loop
and
jle
rorl
mov
add
ja
mov
cmp
mov
inc
sbb
mov
sbb
addr16
icebp
dec
jmp
mov
adc
cltd
sahf
pop
mov
outsl
cmp
cmc
mov
insl
jne
stos
je,pt
arpl
dec
fidivs
mov
sub
and
inc
lock
jl
mov
add
fnstenv
xchg
movsl
inc
mov
push
cmp
fsubs
pop
pop
rorb
xchg
aad
int
mov
adc
xchg
cmpsb
mov
mov
sarl
dec
add
lahf
inc
shll
adc
mov
pop
mov
sti
lock
stos
cs
sbb
cltd
popa
push
cmpsb
add
dec
add
and
xor
arpl
xchg
out
cmp
jnp
sar
inc
and
add
mov
addb
jle
popf
jl
fcomps
and
cmp
clc
iret
aas
cmp
clc
jmp
dec
pop
pop
or
pop
mov
push
push
cld
dec
xchg
push
jp
addr16
jno
bound
aaa
mov
xor
sub
pop
insb
jnp
les
lods
pushf
mov
push
addr16
fsub
xor
jb
push
jl
jge
mov
add
fdivl
adcb
repz
and
insl
mov
adc
mov
push
ss
sub
and
arpl
test
test
xor
insl
lds
ret
xor
scas
in
icebp
jl
test
mov
cli
stc
mov
leave
test
inc
out
cmp
xor
mov
fwait
and
cmp
lret
jo
scas
aam
lret
mov
pop
ljmp
pusha
fs
dec
in
mov
sbb
adc
repz
sbb
xor
in
into
xchg
dec
fs
pop
inc
in
mov
xor
jle
cmp
lds
adc
in
subb
sbb
leave
xchg
sub
stos
test
sar
jle
je
fisubs
clc
dec
roll
cld
stos
andb
in
xor
or
xchg
adc
mov
cs
cmpl
lods
or
clc
sar
ljmp
loope
jl
pop
cld
sbb
nop
enter
rcll
mov
sub
jecxz
mov
fadds
les
sub
adc
add
test
pop
scas
xchg
push
jp
cli
sub
call
sti
mov
mov
add
lret
call
push
shr
xchg
cmc
jg
mov
shl
jo
loope
cmp
adc
mov
or
repnz
xchg
hlt
push
repz
es
mov
jp
xchg
add
jge
xor
jmp
sub
mov
and
aad
dec
repz
cmc
cmp
lahf
popa
add
roll
add
sub
pop
ss
pop
in
pop
stos
inc
and
test
ds
lret
daa
mov
std
out
mov
popf
sub
jb
cmp
arpl
cmp
and
push
mov
movsl
ljmp
push
imul
mov
je
xor
mov
jp
pop
fsubl
mov
and
sub
mov
push
push
push
les
outsl
shlb
xchg
loopne
aad
aaa
arpl
lods
popl
rcrl
xlat
adc
daa
repz
jg
dec
sub
repz
lea
rcrb
xor
aam
int3
insb
mov
invd
mov
enter
cmp
hlt
fstl
aas
cmpl
dec
popa
jnp
or
pop
jb
hlt
sub
mov
scas
pop
inc
mov
adc
das
insl
leave
inc
or
xor
jnp
xorl
mov
mov
shr
lret
es
sub
popa
scas
sbb
jge
xchg
mov
inc
packssdw
xor
sbb
iret
push
add
and
sti
or
outsl
push
nop
mov
sub
mov
adc
sbb
xor
or
mov
hlt
pop
shlb
and
pop
push
stos
pop
push
lds
stos
xor
stc
xchg
rorb
push
ja
sbb
mov
mov
and
sbb
sub
or
lods
or
adc
sub
jmp
cmp
pop
cltd
mov
in
cmp
movq
ljmp
mov
iret
or
sbbb
outsl
add
inc
cltd
jb
mov
loopne
dec
pop
andb
inc
imul
fbld
dec
jo
inc
dec
jo
pusha
pop
dec
loopne
mov
out
les
xchg
jne,pt
push
sbb
insb
cmp
scas
shll
hlt
inc
lock
push
sub
xor
push
cmp
test
cmpsl
mov
mov
jl
inc
mov
jb
jecxz
inc
mov
cld
incl
xchg
loopne
sub
mov
adc
fs
mov
cmp
gs
int
mov
adc
or
jmp
je
xchg
mov
lods
xchg
jbe
and
mov
mov
shrl
sub
jns
jmp
mov
jge
ret
xlat
sbb
mov
xor
pop
mov
lcall
jb
cmp
adc
out
or
or
dec
pop
pop
cld
add
jle
cltd
inc
aas
adc
aas
or
mov
push
dec
aad
mov
jge
cmp
pop
cmp
icebp
fsubs
sarb
stc
imull
lret
stos
cld
in
insb
shr
enter
jns
hlt
outsl
out
adc
nop
rcrb
test
inc
or
lock
lcall
jno
cld
mov
daa
inc
cmpsl
jge
adc
popa
je
mov
bound
fisubl
mov
imul
mov
push
cmp
or
cmc
dec
dec
sbb
outsb
mov
movsb
cltd
and
xchg
push
test
cwtl
mov
ss
clc
push
pushf
out
sti
xor
cld
mov
mov
adc
and
xchg
test
adc
rcrb
pop
rdtsc
rol
clc
or
sub
imull
movsb
stos
movsl
filds
pushf
lock
inc
insl
or
ja
and
icebp
addl
pop
into
loope
fs
fistps
aad
cmp
ljmp
and
outsl
adc
addl
stos
mov
cwtl
int3
pusha
rep
popa
ret
in
lcall
dec
popa
fsubl
mov
mov
test
das
xchg
imul
or
test
fxch
mov
xchg
test
cmp
jp
scas
loopne
mov
jmp
nop
jno
leave
stos
cmp
popa
fidivrl
mov
test
into
pop
test
sub
mov
repz
int
loope
addb
stc
push
cmp
sbb
sti
xchg
out
jg
icebp
add
dec
xchg
stc
fadds
popf
ja
inc
stos
mov
gs
out
jno
adc
out
mov
mov
out
inc
xorl
inc
inc
sarb
outsl
cwtl
div
sbb
inc
loope
cmp
int
jg
xchg
fsubrs
mov
repz
mov
addl
nop
mov
inc
loop
nop
popa
nop
or
in
roll
adc
test
mov
pushf
mov
cwtl
sbbb
jecxz
jo
cwtl
sbb
cs
mov
mov
xor
subb
sbb
jg
inc
and
push
add
jae
test
loopne
punpcklwd
imull
and
or
nop
mov
jp
pushf
fcom
cmp
loop
pop
push
xor
sub
push
adc
aam
comiss
mov
and
pop
jns
inc
adc
addl
mov
push
sub
add
lds
or
pop
adc
pop
adc
fnstenv
aaa
popf
mov
push
scas
sub
in
pop
jbe
and
fistl
sahf
andb
call
mov
cld
sub
mov
es
pop
out
pop
inc
daa
cltd
jae
inc
inc
push
cs
popf
daa
pop
stos
cmp
jbe
loopne
scas
mov
ljmp
xchg
xor
xchg
popf
push
or
xor
scas
mov
jecxz
fstl
xchg
sbb
cmp
int
xor
dec
fistl
aaa
dec
inc
xlat
lahf
mov
mov
or
fbstp
and
or
bound
scas
sti
lock
cs
cmp
or
and
sbb
sub
or
fidivl
sbb
out
int
adc
or
mov
fs
xor
dec
push
dec
loopne
pop
fcomp
sbb
inc
ret
mov
out
mov
push
xchg
pop
cmp
sub
test
pop
rolb
xor
xlat
sahf
out
cltd
inc
add
and
fsubrp
mov
iret
outsb
orb
popa
je
mov
clc
nop
add
bound
sbb
popa
test
stc
pop
iret
or
sbb
cmpsb
rcrb
repnz
movsl
imul
adc
clc
lret
loop
xchg
jo
adc
inc
adc
xchg
cmpsl
xchg
jle
pop
add
xor
xchg
xchg
xchg
pushf
repnz
or
shl
jne
push
cmp
sbbb
test
fucomp
jae
xchg
dec
mov
adc
pop
sbb
loope
fdivrl
and
rcr
dec
movsl
or
lods
xorl
lret
sbb
xor
dec
ja
test
outsl
pop
cmp
cmp
ds
ja
sub
je
loope
dec
ljmp
xchg
sti
xchg
out
imul
fnsave
lods
fisttpll
ljmp
stos
pop
pop
or
loop
scas
jecxz
into
inc
or
iretw
adc
push
stc
sub
clc
pop
lahf
mov
call
les
repnz
outsb
mov
inc
orb
pop
pop
sub
cmp
adc
sub
add
mov
dec
sub
arpl
pop
icebp
jb
dec
cmpsb
clc
dec
jmp
mov
das
int3
xor
mov
mov
insb
test
jp
fwait
pop
stos
movsl
push
add
in
mov
sub
mov
out
push
dec
mov
mov
mov
cmpsl
scas
mov
mov
je
ss
aad
push
hlt
fs
fldcw
pop
jae
orl
mov
jnp
pop
loopne
insl
repnz
mov
fdivp
jge
out
cmp
repz
push
dec
jns
push
inc
rcrl
clc
std
push
jo
arpl
mov
cmp
adc
aas
out
outsb
mov
jbe
pushf
mov
dec
sarl
in
cmc
aaa
cwtl
pusha
pop
cmp
pop
imul
push
in
out
popf
aad
ljmp
adc
push
cmp
cmpsb
cmp
sbb
cwtl
inc
pushf
imul
cld
aad
sub
jo
xor
fiadds
pop
pop
cmp
pop
dec
xorl
sahf
xor
cmp
xor
inc
leave
sub
or
loop
xchg
das
out
and
icebp
rolb
xchg
adc
pop
xor
add
pop
xor
mov
push
leave
xchg
jl
iret
push
aam
lods
ds
mov
jno
popf
mov
sub
xor
push
scas
in
push
xchg
out
add
cmp
hlt
sub
cmpb
jmp
jae
sarb
dec
inc
pop
sbbl
test
test
jmp
f2xm1
mov
adc
imul
or
inc
aaa
hlt
push
mov
clc
insl
jne
lcall
shl
sti
rcrl
mov
push
cmpsl
pop
dec
outsb
lock
outsb
gs
cmc
cmp
sbb
incb
inc
clc
jle
fidivs
sub
nop
out
mov
aad
testb
jge
pop
and
xchg
sub
mov
scas
sub
call
aad
mov
ret
mov
dec
sub
and
repnz
push
out
loopw
out
pop
ss
add
enter
xchg
hlt
popa
ss
sub
fwait
les
push
jge
push
cmp
jl
std
xchg
mov
lea
inc
pop
das
aad
ljmp
dec
cmpb
mov
pop
stos
xchg
mov
sub
daa
mov
std
push
fcoms
mov
pushf
and
jmp
stos
xchg
xchg
push
mov
inc
xor
das
mov
adc
jns
mov
jnp
fwait
jecxz
xchg
in
sub
popf
pop
xchg
dec
leave
inc
push
mov
aaa
push
and
xchg
mov
dec
shlb
ds
cmp
sti
and
fcmovnb
out
push
in
fwait
dec
inc
negl
lock
hlt
xchg
scas
call
mov
mov
movsb
or
sbb
lret
cmpsl
test
or
iretw
lahf
xchg
inc
fwait
out
adc
xchg
jae
and
inc
in
and
mov
je
fmulp
lahf
sbb
test
add
and
xor
mov
mov
pop
add
xor
sbb
pop
xchg
mov
pop
add
dec
cmp
scas
fldenv
fsubrl
and
sahf
mov
cwtl
sub
cmc
mov
ja
sahf
call
ret
fcomps
andb
adc
mov
cmp
pop
cwtl
dec
sahf
adc
dec
insb
rcrb
pushf
xchg
adc
inc
hlt
add
mov
inc
mov
lahf
jne
mov
out
fdivrs
and
nop
dec
int3
push
fstps
push
int3
mov
lcall
pop
inc
in
xchg
inc
xor
cld
jle
mov
clc
inc
popf
jg
jl
mov
push
push
into
popf
push
jno
lds
pop
popa
das
ret
inc
dec
outsb
test
das
lock
daa
sub
xchg
mov
int
enter
outsb
jb
test
adc
mov
je
push
scas
xchg
mov
decb
sbb
push
fcoml
sbb
daa
or
xchg
mov
push
repz
jg
sbb
leave
jbe
imul
int3
xchg
pushf
dec
mov
out
mov
mov
mov
pop
int
stc
mov
aaa
outsl
or
cmc
jle
pop
ficoml
jne
iret
mov
stc
xor
fwait
cmp
iret
bound
and
jno
cmc
and
jmp
mov
mov
mov
pop
fwait
pop
enter
xor
mov
push
or
xor
mov
jle
add
int3
jb
xchg
xor
push
add
int3
shll
push
jmp
pop
pop
je
dec
xchg
xlat
arpl
pop
lock
mov
cmpxchg
rorl
lea
mov
lock
cs
data16
in
or
shlb
add
and
jae
mov
sub
shlb
iret
fsubs
sbb
mov
mov
hlt
je
into
fistl
sbb
lret
cmc
nop
dec
inc
ret
or
cmp
sarb
adc
dec
mov
sub
jnp
and
dec
push
or
dec
sbb
std
inc
push
imul
xor
dec
adcl
xchg
sbb
cmp
jbe
ret
fsubl
cmp
in
and
lcall
sbb
push
dec
xchg
ja
or
pushf
fimuls
cmpsl
ljmp
inc
sub
sub
lret
mov
inc
sbb
std
pushf
cmp
push
mov
sub
jg
sub
lret
inc
push
nop
xor
rclb
rclb
mov
jnp
in
add
cltd
ja
dec
push
jo
push
repz
lahf
popf
mov
xchg
lods
or
mov
mov
mov
das
adc
data16
lock
xchg
sbb
lock
gs
mov
jg
inc
sbb
test
pop
dec
leave
ret
mov
nop
fstl
inc
cmp
push
cmpsb
clc
mov
xor
jo
add
popa
push
arpl
test
leave
sub
sub
xchg
jbe
shlb
sbbb
mov
repz
lcall
das
and
sarl
push
ds
dec
dec
lret
pop
cmp
shll
cmpb
loope,pt
and
xchg
pop
and
xchg
rcrb
push
sti
inc
xor
cmp
shr
lds
test
mov
scas
ret
insl
stos
xor
shr
mov
and
pop
out
inc
adcl
jns
jnp
pushf
cmp
test
adc
and
outsb
repnz
icebp
enter
ret
mov
rcr
dec
or
test
enter
scas
xchg
add
imul
mov
push
pop
pop
push
mov
scas
inc
js
adc
hlt
fs
bound
jg
mov
fmull
repz
loope
into
sbbl
stc
out
cmpl
jg
les
rcll
jne
sub
jecxz
push
adc
lcall
push
cmpsl
stc
cs
std
jns
aad
mulb
mov
lahf
xor
imul
aas
jns
std
cmc
jle
xchg
mov
mov
cmp
xchg
mov
les
icebp
mov
mov
adc
mov
cmp
aaa
fisttps
adc
mov
inc
mov
test
mov
xchg
lret
pop
push
out
iret
cmp
out
icebp
scas
sbb
cwtl
hlt
ss
hlt
into
loope
sbbl
into
fidivs
fwait
sti
mov
subl
scas
icebp
xchg
sbb
push
xchg
mov
lds
add
pop
sahf
repnz
nop
mov
mov
dec
mov
push
pop
sub
mov
dec
fsub
push
push
mov
cmp
pop
push
mov
sbb
and
xchg
lods
scas
jmp
sbb
jns
rol
and
lcall
jne
jnp
stc
inc
cs
adc
scas
arpl
mov
test
adc
and
cmc
cld
push
xchg
mov
and
aad
sahf
out
loopne
cmp
adc
call
inc
and
inc
adc
sub
push
mov
arpl
inc
mov
xchg
push
divb
jns
test
add
xor
ret
mov
jnp
push
push
lcall
mov
dec
mov
lret
cwtl
xchg
cmp
subb
arpl
inc
xchg
fs
jge
incb
sub
jle
xchg
scas
inc
lods
into
aad
sbb
and
jne
add
dec
lret
jg
mov
call
mov
out
push
jmp
daa
push
es
fwait
lods
xor
push
jge
mov
mov
cmp
inc
jg
inc
pop
bound
jmp
je
sbb
jp
sarb
ficompl
mov
fsts
cmp
sub
and
push
push
dec
pop
mov
je
out
leave
aam
inc
cmpsb
push
data16
xchg
push
dec
outsb
fldlg2
test
cmp
out
orb
xchg
jnp
arpl
jge
xor
dec
ds
or
dec
push
movb
cmpsb
cs
dec
and
fcomps
imul
jmp
mov
movl
push
xor
subl
xchg
adc
xor
xchg
mov
mov
shlb
sbb
rorl
mov
data16
out
into
sti
sti
cmpsb
out
pop
push
out
xlat
sub
push
test
jg
cltd
adc
bound
test
lret
fs
and
out
sti
lea
scas
popa
inc
fcmovnbe
jecxz
enter
stos
and
or
test
pusha
sbb
or
loopne
out
mov
cmpb
out
rdtsc
loopne
mov
adc
cmp
and
or
sub
xchg
test
ret
repnz
inc
mov
fwait
jmp
mov
xor
xchg
test
adc
ljmp
dec
push
aam
add
aam
in
mov
lds
adc
sbb
mov
or
or
dec
push
test
add
xchg
mov
pop
mov
push
xlat
sub
ljmp
arpl
fsubl
pop
push
mov
inc
fidivl
jg
sbb
test
cmp
clc
xlat
sahf
sbbl
push
mov
adc
or
sbb
xchg
xchg
add
xchg
jae
je
cmp
mov
jg
adc
hlt
lds
sbb
pop
in
push
cmp
popa
sub
lret
xchg
sub
cld
xlat
dec
out
and
fwait
push
fs
jp
inc
add
mov
or
outsb
outsl
and
sbb
xor
lret
clc
out
les
push
into
xchg
imul
jbe
xor
mov
adc
cltd
sub
imul
cmp
push
mov
popf
jno
in
cmpsl
iret
sub
hlt
jle
or
and
cmpsb
sbb
add
add
ret
leave
das
aaa
scas
in
xchg
jae
pop
hlt
outsb
lret
loopne
push
outsl
jb
xlat
push
push
pushf
add
loop
lods
outsb
gs
clc
arpl
xor
aaa
push
xchg
sahf
sbb
sbb
fldl
fnstcw
movsb
cmc
movsb
push
push
xchg
das
data16
cld
cmpsl
mov
pop
or
and
andb
sub
call
inc
jl
int3
repnz
cld
cmp
inc
or
fdivp
pop
loopne
adc
test
iret
ret
roll
stc
scas
jbe
fstl
popa
sti
scas
sub
scas
test
lds
push
pop
inc
xchg
daa
adc
adc
pop
dec
hlt
cmp
mov
adc
shrb
xchg
fiadds
shll
int3
push
lret
rcll
mov
clc
icebp
aam
in
inc
aad
jle
cltd
and
imul
dec
and
outsl
mov
out
leave
add
xor
orb
lock
xor
lea
mov
subb
cmp
outsl
mov
jno
setae
lock
fisttps
loop
inc
cli
test
mov
aas
stos
xor
testl
inc
sub
jns
add
mov
mov
repz
jne
adc
xchg
push
test
cmp
stos
jl
or
test
iret
mov
adcb
sub
hlt
pop
cmp
or
jno,pn
add
sbb
push
nop
mov
dec
adc
ret
into
cmpsb
in
fisubl
ljmp
fidivrl
and
enter
fldt
pop
sub
mov
rolb
sar
les
cmp
mov
fnstenv
and
cmpsb
jbe
sbb
mov
mov
adc
andl
data16
lret
inc
sbbl
sbb
cmp
gs
jle
pusha
shll
add
ret
push
rcll
lahf
loop
sti
std
pushf
ja
or
ret
mov
mov
sahf
and
mov
aas
stos
push
outsb
push
cld
test
xchg
and
inc
sub
or
imul
mov
sbbb
iret
mov
ja
lcall
adc
push
loopne
and
adc
das
nop
shlb
dec
int3
iret
fistpl
dec
fwait
mov
imul
aad
mov
out
push
test
jo
mov
loop
sbb
mov
ds
jp
loopne
xor
jnp
loop
loope
inc
mov
mov
jmp
ljmp
cmpsl
inc
mov
xchg
pop
ljmp
scas
sti
add
fdivs
int
ds
sbbb
mov
test
add
icebp
and
mov
ljmp
push
in
and
sbb
js
dec
imul
lods
fisubrs
and
mov
xor
je
icebp
dec
ja
inc
cmc
fiaddl
sub
adc
daa
add
sub
cmpsb
mov
flds
movsb
out
sbb
xchg
shlb
sbb
int3
push
mov
adc
xor
jo
push
popf
pmaxsw
jb
mov
call
cmp
fnstcw
loope
or
fs
mov
shr
cmp
movsb
dec
int
shll
pop
lret
push
cmp
cmp
and
and
and
in
in
and
lahf
push
xchg
inc
jg
adc
cmp
adc
movsl
push
movb
or
fbld
pop
lods
imul
jmp
in
pop
dec
xor
sarl
fidivl
pop
jg
pop
dec
add
push
gs
bound
insl
cmp
mov
push
sub
dec
xchg
jecxz
mov
mov
mov
add
pop
fldenv
pusha
cltd
icebp
bound
arpl
push
popa
roll
pop
cmc
movsb
adc
shrb
xor
into
js
out
jge
or
or
into
fisttpll
push
arpl
wrmsr
jbe
jl
insl
jge
mov
cmpsl
rcll
sbb
inc
push
and
dec
movsl
dec
popa
xor
inc
je
xorl
xor
inc
inc
cmp
inc
or
push
fwait
stos
mov
out
lock
xchg
sub
ret
dec
adc
fldcw
add
fisttpl
rcrl
mov
call
fcmovne
push
xor
fistps
pop
sahf
push
pop
pop
in
adc
mov
xchg
lahf
enter
call
jb
icebp
addl
maskmovq
divl
and
push
test
aas
jne
iret
jne
mov
mov
add
pop
xlat
sarl
test
mov
pop
pusha
cmpsl
or
ja
icebp
dec
imul
mov
dec
test
add
mov
lods
out
mov
stos
bound
sahf
rcrb
test
flds
data16
mov
push
loope
psadbw
fneni(8087
and
sbb
and
call
dec
jae
and
sbb
push
xchg
sbb
into
xchg
sbb
leave
pop
pop
jo
ret
lods
mov
jae
test
dec
sub
dec
cli
imul
mov
push
sub
pop
add
pop
loop
outsb
xchg
lahf
loope
mov
aaa
ret
mov
pop
iret
adc
sub
push
rclb
adc
inc
pop
lds
sbb
addr16
ljmp
scas
cs
mov
dec
pusha
sti
and
out
pop
cli
lea
pop
jle
pop
adc
shlb
popa
js
lock
jo
inc
push
cmp
jl
sub
push
sbb
lret
inc
out
outsb
mov
mov
es
push
cld
jo
insb
push
enter
push
or
divb
xor
xor
pusha
cmp
or
jns
push
xchg
mov
mov
vpxor
hlt
decl
sub
fidivl
pusha
dec
aad
cmc
and
ljmp
sub
jmp
xor
or
in
imul
jbe
scas
and
jnp
xchg
mov
mov
push
pop
xchg
gs
outsb
cmpl
call
nop
lods
pushf
sub
repnz
jge
sahf
loopne
testb
cmp
xor
negl
adc
in
sub
add
enter
mov
test
sbb
dec
or
push
jne
cmpsl
icebp
xchg
std
push
cmp
inc
in
inc
push
ds
cmpsb
sbb
popf
dec
pop
or
out
xorb
add
insb
fcomps
stos
imul
orb
mov
test
mov
sub
sbb
jb
scas
rcrb
sub
scas
jae
call
pop
add
lahf
xor
stos
mov
fdiv
sbb
jb
adc
or
outsb
push
fadd
push
sbb
pop
xchg
xor
gs
out
xlat
fiaddl
mov
xor
dec
xor
lret
push
leave
jae
scas
xor
cmpsl
pop
or
dec
add
or
dec
sbb
mov
jbe
xor
lcall
mov
pop
popf
filds
jmp
xchg
sahf
cmpxchg
in
push
mov
out
lcall
stc
cmp
jmp
fdivs
sub
pop
or
or
xor
xor
xor
mov
cwtl
cs
dec
inc
xchg
mov
xlat
pop
mov
jnp
nop
shld
push
out
mov
dec
mov
sub
repnz
jge
and
mov
scas
push
in
fisttpl
inc
sbb
sbb
test
cli
jbe
mov
or
adc
andb
movsl
mov
in
jae
and
push
mov
xchg
out
in
jb
cs
roll
inc
push
xor
cmc
xor
lock
adc
inc
or
and
fiaddl
imul
xchg
imul
add
mov
aam
es
es
xlat
cmc
push
sti
push
xlat
adc
dec
mov
inc
out
scas
mov
mov
pusha
fwait
inc
rorb
pop
adcb
mov
sub
mov
xchg
mov
push
idiv
sub
aad
push
jo
pop
dec
mov
xor
cwtl
push
inc
stc
cs
pushf
imul
subl
test
sub
js
mov
lea
fwait
into
adc
push
mov
sbb
mov
sub
add
in
rclb
inc
ret
inc
pop
cmp
scas
lcall
jle
push
adc
sbb
xchg
adcl
cmp
addr16
jp
jmp
pop
jp
js
ss
insb
and
mov
scas
stos
cltd
cwtl
pop
leave
pushf
cmp
fcoms
test
out
sub
movsb
scas
add
jno
xchg
mov
mov
in
ret
test
xchg
daa
mov
pop
cmpsb
mov
not
push
mov
and
jp
shl
pop
add
lock
adc
hlt
xchg
arpl
lahf
pop
or
cmp
cli
out
add
fwait
mov
cmp
dec
movsl
and
sub
icebp
pop
inc
mov
push
jo
cmp
and
adc
and
in
fnstcw
lahf
mov
pushf
jp
push
mov
out
hlt
pop
pcmpgtw
and
mov
or
testb
into
inc
xor
push
mov
js
inc
jb
mov
dec
push
into
cwtl
or
inc
cmp
xor
pop
jno
cld
sahf
mov
mov
int3
add
movsl
jmp
das
add
fdivrs
inc
hlt
push
cmp
dec
jle
and
daa
add
out
mov
or
add
or
jb
in
pop
lds
js
iret
push
shll
push
mov
adc
sub
adc
xor
rcrb
out
jae
addr16
sub
shrb
lret
sahf
jae
and
es
lock
xchg
mov
jo
int
fistpl
cltd
xchg
pop
lret
out
mov
xor
int
sub
mov
push
inc
lret
in
pop
sub
es
adc
in
cmpsl
fldl
pop
fisubrl
les
push
call
bound
sub
sub
stc
addl
dec
adc
rclb
ret
loopne
out
push
adc
stos
fs
push
js
sti
push
test
inc
or
loop
sub
or
inc
mov
insl
jp
mov
sub
xchg
push
pop
call
sub
add
adc
pop
sbb
sbb
jge
lret
popa
ds
dec
and
dec
pop
pop
jg
mov
movsb
shlb
adc
loopne
sbb
dec
mov
add
ja
sbb
lods
jp
repnz
testb
mov
push
add
xchg
les
cmp
mov
and
aaa
xor
pop
dec
mov
cmp
test
xlat
lock
dec
call
add
outsl
mov
out
sub
mov
in
jg
push
test
sub
dec
xchg
push
pop
push
std
insl
ror
xchg
pushf
adc
popf
sbb
cmpb
push
jbe
xor
pop
fcomi
scas
push
out
das
cmp
and
push
aas
imul
sbb
ds
pop
lds
test
in
pop
pop
pop
sub
clc
nop
ja
mov
test
adc
inc
sbb
dec
fistpll
mov
ror
in
outsb
cmp
sub
pop
sbb
dec
mov
das
and
adc
sti
fsubs
inc
push
ds
int3
stos
andb
add
pop
stc
xor
pop
dec
xor
je
inc
movsl
mov
nop
sub
and
imul
rorb
and
out
pop
out
xchg
or
sub
push
jne
fimuls
je
lods
sub
pop
xchg
inc
lahf
ret
sbb
sub
pop
jecxz
or
xor
jo
fs
push
js
or
ss
lret
mov
enter
ficomps
mov
sub
int3
xor
int3
dec
mov
pusha
mov
pop
rcl
xchg
lret
xor
dec
test
add
pop
mov
push
push
jp
jecxz
mov
sub
andl
sub
fnstcw
add
ret
in
inc
push
ja
lods
push
daa
pop
pop
cmpsb
jp
jae
insb
mov
push
insl
insl
fcmovbe
dec
test
adc
stc
cltd
pop
sbb
lods
daa
add
xor
mov
push
xchg
mov
dec
psrld
out
xor
push
negb
jl
ret
frndint
and
push
lret
inc
lods
ja
scas
mov
or
in
ret
pushf
mov
jae
lea
daa
ljmp
cltd
sub
jmp
jmp
aas
adc
jnp
sarl
ret
dec
cmp
stos
fisttps
data16
mov
mov
inc
jb
scas
cmp
adc
into
cmp
cwtl
pop
sarl
ljmp
test
pop
sub
xchg
fistl
fs
jecxz
dec
mov
push
dec
adc
mov
out
adc
mov
mov
sti
scas
xor
cmp
cmp
pop
imul
or
lahf
dec
jecxz
jg
push
xchg
out
lcall
in
pop
xlat
sub
into
shrl
sahf
push
cli
pop
jo
jnp
push
imul
xchg
test
sub
xlat
mov
es
sbb
dec
ss
test
iret
xchg
sahf
test
std
jo
mov
test
pop
in
mov
popf
or
insl
cmpsl
adc
bound
sub
mov
sub
addb
icebp
outsb
gs
xchg
ss
push
xchg
cmpl
push
jle
xchg
or
inc
sahf
fistl
mov
int
inc
sub
rorb
dec
sub
aaa
mov
push
pop
loopne
mov
xchg
in
movsb
dec
cmp
loopne
rcrb
push
negb
ret
add
inc
xchg
mov
jecxz
sbbl
push
sub
pop
mov
mov
out
pop
mov
xor
das
fdivl
test
add
arpl
insl
mov
and
jg
shufps
inc
push
hlt
mov
fisttpll
jp
aam
popf
arpl
and
cmpsl
outsb
pop
int
stos
notb
jle
mov
mov
and
jnp,pt
sub
jo
movsb
mov
bound
push
imul
mov
out
cmp
popa
mov
sbb
ficoml
fistl
jmp
leave
jnp
push
sub
xor
jns
mov
add
inc
xchg
lods
in
mov
gs
test
cld
sbb
mov
pop
jg
pop
cmp
mov
xchg
fstpl
pop
pusha
mov
imul
pop
pop
adc
shlb
test
xchg
int
mov
mov
xor
aam
aam
outsb
jmp
jp
push
cltd
xchg
iret
test
cmp
popf
fsub
add
xchg
into
mov
mov
fiaddl
mov
inc
dec
mov
es
mov
push
aam
inc
les
nop
lahf
jmp
sahf
les
aas
add
movb
push
popa
cmc
pop
pusha
mov
xchg
mov
adc
mov
inc
add
adc
leave
xchg
mov
push
inc
mov
mov
inc
popf
add
sub
iret
mov
orl
pusha
push
jp
lods
mov
fstl
dec
ja
stos
rcll
mov
xor
iret
das
cmp
mov
pop
push
inc
stos
inc
fdivr
xchg
mov
imul
jne
xchg
fbld
repz
mov
pop
push
fwait
or
fsubs
pop
add
in
aas
add
je
into
xor
pop
leave
lds
sbb
jle
adc
aad
sti
rcll
xchg
cmp
push
jns
cli
lea
stc
insl
repnz
mov
scas
xchg
cmp
cmp
and
push
dec
pop
stc
sub
jne
popf
cli
xor
sbb
inc
stos
add
mov
scas
mov
and
mov
mov
sub
insl
xor
push
xchg
ds
mov
jno
jl
mov
push
loop
and
mov
rclb
pop
jns
cwtl
inc
imul
dec
scas
and
mov
xor
sbb
adcb
mov
sub
push
std
in
jecxz
xchg
add
rcrl
cmc
sub
fcoml
je
push
out
lds
in
push
or
in
pop
xor
stos
push
xchg
push
loopne
lea
mov
ds
cmp
in
ret
push
mov
jne
test
cmpsb
or
jmp
es
mov
clc
fmuls
inc
adc
rorl
mov
rcr
xor
jnp
sbb
int3
push
xchg
jp
jl
popa
mov
cmp
and
pop
ljmp
aam
inc
inc
dec
ja
xchg
pop
push
push
sbb
sahf
mov
pop
es
out
push
mov
lds
rorb
push
mov
cltd
jp
adc
mov
xchg
lds
cs
sub
add
dec
adcl
shll
addr16
mov
leave
ret
sub
pop
gs
lods
fs
stos
mov
in
divb
loopne
dec
andl
sbb
and
aam
push
mov
adc
test
loope
xchg
daa
ss
jns
mov
into
cmc
sbb
mov
adc
int
fwait
cmp
lods
mov
sub
je
sbb
pop
adc
popf
js
dec
xchg
add
inc
js
or
movsb
sbb
xchg
adc
jb
mov
mov
and
xor
inc
pop
mov
aam
sub
and
sbb
les
push
movsl
add
push
push
in
loop
cmp
shlb
movsb
fsubrl
test
mov
xchg
pop
test
fistl
icebp
add
test
cmp
push
dec
mov
test
xchg
mov
inc
inc
dec
pop
pop
push
cmp
sub
mov
mov
mov
loopne
pop
insl
jmp
push
arpl
rcrb
pop
jl
lcall
fldl
and
sub
push
data16
dec
cli
sub
xchg
mov
jne
lea
mov
ds
push
push
out
pop
les
sbb
test
imul
or
int
push
push
repnz
push
mov
je
pop
int
aaa
adc
ja
mov
movsl
aad
lock
sub
add
cmp
push
cmp
xchg
sbb
mov
push
pop
addr16
pop
push
mov
jge
jecxz
sub
adc
mov
insb
mov
add
add
outsl
insb
mov
enter
cmp
pop
xchg
adc
lods
aas
xchg
test
cmp
pop
xor
adc
aaa
or
aam
and
arpl
and
jmp
jnp
out
scas
imull
leave
adc
movsl
fildl
addl
out
xchg
aaa
push
adc
inc
jo
gs
jmp
xchg
or
cltd
lock
aad
jg
ret
dec
xchg
ds
mov
jecxz
sub
popa
mov
aaa
mov
andb
jb
enter
negl
enter
jmp
dec
mov
inc
hlt
shlb
mov
stos
push
add
subl
icebp
add
mov
cmp
add
loop
js
xor
roll
cli
fstl
mov
jnp
lock
jge
adc
jbe
insl
cmc
mov
test
shrb
pop
aad
cmpsb
inc
dec
test
xor
mov
dec
mov
fisubl
icebp
test
mov
sti
bound
test
mov
lods
arpl
hlt
mov
sub
scas
sub
in
jmp
stc
shll
rcll
adc
mov
sbb
mov
fs
mov
xor
std
push
pop
cmp
add
int3
dec
mov
xchg
jb
ja
xor
push
stc
inc
mov
in
cmc
add
or
popa
sbb
ss
jge
addr16
jns
dec
push
dec
movsb
or
xor
sbb
out
sub
mov
inc
test
mov
and
fcoml
and
xor
sbbb
pop
mov
sbb
cmpl
and
add
and
out
stos
lods
or
push
or
push
add
cmp
cld
or
repnz
jnp
pop
cmp
subl
mov
fwait
add
pop
mov
addr16
ljmp
mov
add
leave
adc
sub
mov
sub
loopne
dec
mov
lahf
cwtl
das
jmp
rcr
aam
xor
xor
in
mov
jno
ja
mov
pop
dec
dec
mov
stc
jle
sub
jns
sub
push
repz
push
stos
inc
jecxz
xchg
inc
or
pusha
leave
jne
les
icebp
pop
adc
dec
adc
int3
arpl
xchg
and
adc
shrb
sbb
xchg
xor
cwtl
push
cs
jl
ljmp
xchg
xor
pop
xchg
mov
or
xlat
and
xor
jbe
stos
test
call
cmc
push
lea
jae
push
imul
push
push
jp,pt
cld
cmpsb
pusha
insb
push
in
jle
push
jmp
pop
mov
sbb
out
mov
mov
and
add
jg
pop
mov
push
out
hlt
cmpsl
mov
xchg
xchg
mov
mov
xchg
cmpsb
sbbl
imul
cli
jbe
js
loopne
cmp
dec
adc
gs
loop
mov
and
mov
mov
ficoms
aas
cmp
mov
push
in
inc
fwait
mov
add
mov
testl
repnz
sbb
cmpsb
add
shrl
popf
imul
test
mov
lock
or
cld
sub
add
xchg
popf
rclb
inc
pop
bound
cmp
cli
sub
jo
daa
mov
jb
pop
sub
mov
pop
sahf
fmull
dec
xor
movsl
ret
ds
push
mov
inc
test
lock
sbb
mov
gs
pop
add
xor
addr16
shl
lods
push
or
cmpl
add
or
shll
out
lret
sub
sub
lret
cwtl
jecxz
xor
shlb
rcll
or
and
sarl
fs
inc
mov
xor
and
popa
mov
filds
scas
repnz
pop
mov
hlt
and
adc
xchg
cld
scas
xor
test
aad
jo
jnp
stc
je
lea
mov
push
push
mov
mov
stos
add
pop
scas
cmpsl
jg
hlt
out
mov
dec
into
cmp
test
outsl
mov
push
jmp
lock
cs
and
lcall
rolb
cmp
jle
dec
incb
rcll
pop
push
add
sbb
inc
pop
jg
and
xchg
iret
xor
lods
ja
repnz
or
push
fisttpll
shlb
jmp
cmp
mov
js
enter
add
dec
in
mov
dec
and
inc
or
pop
xor
fnstcw
dec
ret
push
fildl
loopne
mov
jbe
cwtl
aaa
loopne
sub
sub
test
pop
shll
dec
mov
dec
xchg
or
mov
in
dec
inc
pop
ja
and
mov
fwait
inc
ds
cmp
lret
out
into
adc
fldl
mov
and
les
fs
push
add
lahf
lahf
mov
in
incl
or
jg
jge
cli
lods
push
sti
test
shlb
push
jbe
sbbb
repnz
std
enter
cmp
test
mov
out
jnp
jle
loopne
jne
cmc
xchg
stos
aam
or
out
lret
icebp
aaa
scas
cs
sub
aas
ret
or
mov
dec
inc
jge
dec
std
push
mov
sub
orb
mov
mov
push
adc
cli
popf
stc
jae
dec
aas
sbb
aam
pop
xor
pop
jnp
lds
es
jne
sub
clc
cltd
idiv
mov
cwtl
jb
dec
push
cmp
push
jmpw
sub
ret
test
insb
push
or
xchg
pop
dec
daa
jp
mov
loop
cli
ljmp
mov
inc
xor
pop
je
dec
sub
cwtl
inc
add
movsb
mov
es
scas
loop
pop
rcll
xchg
xchg
in
add
dec
dec
mov
js
mov
jle
pop
add
cmpsl
sbb
mov
cmp
scas
aam
mov
rorl
lahf
jecxz
xchg
dec
inc
ret
jl
cmp
movsb
sub
cmp
mov
jecxz
addl
sbb
jnp
inc
mov
js
inc
add
xchg
jns
pop
int3
cli
out
jmp
mov
pop
aas
leave
inc
cld
cmp
cmp
xchg
adc
mov
cmc
les
lea
sbb
subl
push
enter
lds
add
jle
ret
add
out
jp
bound
fucomi
jp
add
ret
test
cmpsl
add
imull
outsb
xchg
pop
add
insb
cltd
stos
orb
and
xor
xorb
and
sub
dec
add
cld
hlt
mov
xchg
dec
sub
outsl
cmp
loope
aam
std
sahf
movsb
push
stos
or
dec
pop
sti
dec
sbb
jbe
and
xor
dec
mov
cwtl
std
mov
mov
out
scas
sbb
add
add
and
mov
addr16
mov
in
inc
outsb
mov
cmp
adc
sahf
stos
jge
jle
ss
in
out
dec
ds
loopne
stos
lock
loop
test
jns
sbb
mov
sahf
stos
and
enter
lcall
sub
ret
pop
pop
jns
adc
sbb
aam
shl
addb
aaa
mov
xor
lret
sub
jnp
mov
xchg
sub
push
test
push
mov
dec
js
scas
pop
and
sbb
mov
daa
jno
mov
sarl
add
jg
outsb
test
jbe
xchg
inc
push
icebp
out
clc
pop
jge
mov
jp
cmp
lcall
xor
push
xlat
or
adc
mov
xchg
adc
aad
pusha
mov
mov
es
mov
or
or
xchg
dec
std
outsl
cmc
mov
insl
mov
les
push
loop
push
xchg
repnz
or
mov
test
fisttpl
mov
jl
xchg
jl
fisubrl
lcall
jns
ficoml
mov
repnz
bound
sahf
add
xchg
cltd
das
fcmovnb
inc
jb
std
sub
jb
cmp
jl
movsb
sbb
dec
push
bound
std
adc
fistpll
mov
adc
scas
call
mov
jo
push
sar
les
jmp
inc
xchg
inc
mov
stos
push
popa
shrl
ss
push
pop
rcll
imul
lods
repnz
loope
sub
mov
push
je
lds
into
enter
sub
das
sbb
xchg
push
dec
int3
lret
stos
loop
loop
and
xchg
pop
lods
cmpsb
xor
sbb
and
mov
mov
xchg
mov
pop
adc
dec
mov
dec
les
pop
popf
cs
je
sbb
mov
push
nop
inc
fwait
push
popa
mov
jb
jl
sub
cltd
and
inc
xchg
jg
pop
int
fs
outsb
movsl
aam
jb
jne
jo
rcll
cld
dec
inc
stc
loop
fstpl
mov
daa
cmp
push
push
sub
dec
movsl
shll
jno
fs
scas
mov
ss
push
xchg
cmpsb
adc
ret
sti
ds
dec
cmp
mov
test
add
mov
mov
jp
cmpsl
inc
ret
dec
inc
cmp
das
push
xor
lea
sbbb
jmp
adc
sub
pop
cmpsb
inc
into
lahf
sarb
repnz
daa
adc
push
and
dec
xchg
loopne
rcll
movsl
subb
cmpsl
testb
pop
mov
stc
je
mov
sbb
mov
or
mov
mov
in
xchg
push
in
and
test
movsl
mov
sub
jno
xlat
or
sub
mov
lret
mov
rcl
mov
sbb
sbb
ror
insb
pop
cmc
dec
insb
cwtl
cmp
aam
sbb
movl
xchg
xchg
or
sbb
mov
mov
xor
clc
xor
add
cmpsl
jg
push
in
mov
adc
es
inc
add
xchg
push
jae
cltd
push
shlb
adc
fadd
movb
fmul
push
fldlg2
sub
test
or
jmp
lods
xor
fcmovnu
ss
lods
lods
lret
add
neg
sbb
cli
mov
xor
orb
add
rorl
xchg
sub
pop
and
movsl
mov
shrl
mov
aas
daa
add
leave
aad
incl
push
ret
lock
inc
cld
mov
test
push
cltd
xchg
adc
std
lret
scas
and
adc
cwtl
ds
cli
rclb
mov
lret
jge
xor
in
js
pop
hlt
mov
std
movb
fdivs
shl
pop
pusha
idivl
jns
push
push
hlt
xchg
and
sbb
popa
add
sbb
pop
cmpsl
gs
fcoms
inc
dec
xorb
popa
inc
test
xor
icebp
push
data16
enter
xchg
test
clc
mov
mov
dec
pop
pop
and
and
push
loop
sbb
pop
xchg
arpl
ret
fistpll
xor
inc
jne
and
xchg
xor
or
mov
sbb
sub
mov
sbb
hlt
gs
pusha
shl
clc
test
and
add
cld
cwtl
jo
ret
dec
pop
jg
dec
aaa
fwait
pop
and
aaa
xchg
inc
pop
add
pop
push
mov
jmp
sar
and
and
rolb
sti
jmp
call
aaa
in
jecxz
mov
cmc
adc
mov
mov
mov
or
arpl
pop
jecxz
lods
enter
stos
jge
cmpsl
in
movsb
and
movsl
jns
scas
jg
lcall
mov
fcoms
xor
jne
mov
mov
jae
push
dec
insl
lods
sbb
sbb
mov
mov
rol
iret
sbb
cltd
xchg
subb
xchg
pushf
fldcw
insl
flds
or
xchg
ret
and
mov
sbb
jns
pop
cmp
jae
stos
push
xchg
mov
adc
cmc
xchg
dec
out
ret
dec
aam
aam
mov
cmp
mov
mov
mov
or
adc
dec
inc
mov
cmc
arpl
adc
add
push
pop
sti
add
sub
cltd
out
sbb
int
aaa
xlat
nop
repz
shrb
mov
in
addb
mov
popa
dec
sti
sarl
call
adc
scas
int3
cmp
loopne
lock
push
mov
lret
lods
push
inc
jbe
push
andb
push
repz
jmp
push
xor
rolb
mov
stos
inc
sbb
dec
pop
and
mov
pop
add
les
push
and
lcall
dec
insb
rclb
lods
mov
and
mov
xchg
aas
sbb
into
and
mov
dec
lret
int3
mov
push
mov
adc
repz
add
test
xor
pop
xorl
push
xlat
out
sub
jg
push
movsb
aad
push
or
cmc
add
dec
mov
lea
jno
push
mov
imul
das
mov
hlt
pop
dec
or
fs
xor
mov
ret
int
inc
jg
push
jecxz
es
add
mov
popa
stos
xchg
std
jnp
lds
cmp
pop
adc
enter
aad
add
mov
dec
imul
cmp
negl
pushf
out
aad
arpl
inc
loopne
dec
sar
bound
jecxz
inc
jg
add
pop
xor
pop
imul
add
mov
fisubl
inc
hlt
inc
inc
push
sbb
jl
dec
add
adc
arpl
sub
loopne
fs
testl
and
mov
add
inc
in
jmp
push
add
and
enter
jo
clc
shl
mov
je
and
pop
or
dec
and
lret
or
xor
lret
inc
cltd
jl
or
js
dec
rcrl
push
jne
lods
shll
or
insb
nop
loop
into
add
ja
or
jecxz
dec
sbb
cmp
push
mov
cmp
push
movsb
ljmp
mov
and
add
cltd
dec
insb
pop
inc
push
repz
or
mov
mov
add
popf
or
lods
leave
lock
sbb
cmp
dec
in
sub
mov
inc
popf
out
int3
sarb
leave
stc
push
mov
into
and
ror
hlt
aam
lods
pop
pop
xchg
test
inc
mov
cmp
inc
add
dec
jne
negb
mov
cs
stos
push
push
and
and
and
outsb
sbb
out
xor
mov
push
loop
jnp
jbe
cli
adc
and
unpcklps
cmp
loopne
push
sbb
in
xchg
sbb
cmpsb
xor
enter
shlb
xchg
out
mov
or
push
pop
mov
push
xchg
jp
mov
rclb
enter
mov
loope
repz
sbb
pop
arpl
test
push
adc
lret
outsb
lds
dec
es
xor
dec
pop
ret
out
inc
fucomi
lods
loope
or
jo
in
rolb
pop
xor
and
fyl2x
jmp
xor
inc
fsubs
push
adcl
imul
xchg
aam
mov
and
hlt
and
mov
fcomp
dec
cmpsl
fldenv
dec
xor
push
dec
push
nop
jecxz
mov
add
clc
std
mov
in
dec
dec
out
or
xorb
inc
mov
and
int3
pushw
jecxz
push
or
adc
jne
jno
shlb
pop
xor
xchg
cld
pop
mov
mov
fcoml
ja
fld
gs
stos
mov
imul
lock
cmp
add
orl
adc
jp
or
jg
xchg
gs
stos
jge
jge
xchg
add
jg
rcll
scas
mov
sbb
push
lods
jae
roll
jb
rorl
fists
insl
pop
leave
mov
mov
lods
sub
push
adcb
fwait
and
pop
dec
jle
mov
lds
add
enter
lock
mov
cld
in
mov
rol
fistl
test
xor
push
stos
pop
ljmp
sub
dec
xor
mov
push
inc
repz
out
repz
cmp
jbe
push
mov
shr
add
adc
gs
aad
sahf
xchg
enter
cmp
push
jmp
lds
or
inc
and
pop
mov
mov
dec
or
jmp
lds
mov
mov
fcmove
rorb
mov
ljmp
jg
incl
pop
pop
sbb
cmp
mov
dec
dec
aad
arpl
or
jae
pop
mov
iret
xor
push
xchg
sub
xor
cmp
cmpsl
mov
push
pop
mov
sub
mov
leave
push
lret
enter
mov
xor
mov
mov
mov
add
pop
or
and
fisubrl
fisubs
pop
sbb
cmpsb
mov
push
jo
jnp
jbe
sbb
dec
dec
jno
insl
mov
scas
pop
and
fdivl
mulb
outsl
xor
movsl
ret
cmpsb
js
push
xlat
fsubrl
int3
mov
mov
cmpsb
aad
inc
jle
arpl
inc
sub
imul
jno
arpl
bound
ficompl
pop
jp
ret
push
mov
std
sbb
int
data16
pop
dec
test
adc
sbb
int3
push
jbe
inc
inc
pushf
mov
xor
push
push
fimuls
loop
les
repz
divb
lahf
ds
cmpb
in
outsb
popa
insl
push
lods
mov
adc
stos
incl
lea
jnp
mov
xchg
mov
icebp
in
lahf
inc
sbbl
add
stos
push
push
sbb
push
daa
cmp
cli
leave
sub
mov
ja
jle
or
sub
adc
xchg
sub
aaa
and
dec
push
adc
in
rcl
int3
cwtl
xchg
dec
pop
es
xor
jl
and
xchg
adc
jno
test
mov
add
sbb
or
loop,pt
aad
push
sub
and
xchg
mov
pop
scas
pop
inc
cltd
jmp
push
cmp
jge
mov
bound
loope
mov
fwait
lahf
out
push
or
movsb
out
cmpsl
les
mov
dec
jge
xor
pushf
int
add
push
jo
xchg
jns
jne
add
mov
insb
lds
push
aam
mov
outsl
fldl
mov
push
cli
jl
loopne
jbe
insb
enter
push
les
in
nop
cmp
inc
push
fistl
pop
push
pop
cmc
sub
xchg
push
xchg
mov
cltd
je
xchg
mov
xor
loopne
std
xor
div
nop
int3
test
stos
mov
pop
pushf
cmpsb
lcall
outsb
add
mov
mov
add
jne
mov
ljmp
fdivl
add
xchg
movb
fldt
outsb
aaa
and
inc
repnz
inc
inc
stos
imul
inc
mov
cmp
and
jb
xchg
out
push
jns
pop
jp
jne
sub
mov
scas
xchg
out
and
mov
mov
jl
mov
jmp
stc
jbe
pop
jnp
mov
mov
xor
daa
movb
pop
cmp
data16
pop
inc
cmp
insb
cmp
out
repz
or
sub
ja
pop
cmp
push
enter
mov
jg
pop
push
daa
adcb
mov
push
int
bound
lret
pusha
rclb
jge
into
lret
shlb
imul
jge
mov
mov
test
xor
xor
jecxz
cmp
stos
sub
enter
push
cmp
pop
cs
jmp
aas
lcall
loop
push
jge
fidivrs
pushf
aas
imul
adc
aad
arpl
dec
mov
shrl
daa
sbb
push
stc
sub
and
add
xor
nop
mov
mov
je
xchg
jmp
jns
in
sbb
gs
jne
sahf
popf
sub
xchg
mov
jmp
xor
pop
test
sahf
das
pop
push
js
xchg
jmp
aad
jbe
xchg
les
int3
aam
mov
inc
daa
cmp
mov
mov
pop
test
push
rcrb
cmp
add
or
push
orl
adc
iret
adc
push
xor
or
pop
xchg
pop
pop
into
testl
pop
sar
imul
fldl
les
int3
loopne
xchg
adc
sbb
mov
cmpsl
cmp
in
popf
xor
dec
ss
ljmp
pop
ror
and
push
repnz
cmpsl
mov
jb
mov
stc
jb
mov
or
pop
fistpll
adc
xor
mov
push
push
or
pop
movsl
inc
ret
mov
cli
inc
add
mov
and
test
call
std
out
outsb
stc
ja
xlat
xorl
push
dec
adc
cmpb
loop
and
clc
bound
cmp
pop
je
mov
push
lret
push
jnp
xor
popa
mov
cmp
int3
scas
rcr
mov
arpl
sti
or
js
sub
mov
jae
hlt
sub
cmp
adcl
loop
mov
jae
mov
mov
inc
fnstsw
stc
mov
call
jno
stos
gs
cltd
jo
scas
lods
cmp
push
repnz
mov
subl
mov
shrb
or
stc
and
movsl
jns
mov
mov
dec
daa
ret
mov
add
pop
pop
fiaddl
adcl
lods
in
pop
xor
ljmp
in
sbb
add
insl
xchg
lods
std
push
push
in
iret
dec
jnp
inc
mov
ja
jae
xchg
xchg
pop
scas
andl
sarb
iret
mov
jnp
sub
jle
popa
push
lock
sub
in
xchg
jns
xlat
dec
js
mov
pop
fcmovu
mov
rorl
xchg
sub
pusha
out
clc
call
enter
scas
negl
mov
or
insl
rcrl
and
mov
js
mul
mov
aam
mov
xor
add
mov
lret
push
mov
mov
pop
test
sbb
jp
enter
add
fdivrs
inc
mov
mov
pop
cwtl
mov
pop
add
and
adc
not
lds
add
adc
enter
loop
rclb
lock
lea
rorb
sbb
xchg
inc
jp
sub
adc
or
lret
mov
mov
xchg
aaa
cmp
call
dec
cwtl
cmpsb
jne
push
mov
dec
popf
mov
pop
loop
mov
sti
cld
sub
sbb
test
xchg
jg
je
dec
dec
test
insl
adc
xor
mov
push
and
lahf
or
or
leave
out
stc
xor
xlat
sbbb
jl
mov
push
push
sub
pop
rorb
sbb
dec
or
pushf
and
fildl
adc
stos
cs
insl
push
sbb
arpl
sub
in
inc
lds
xor
mov
sbb
mov
inc
pop
add
into
out
movsl
or
push
scas
aad
std
jb
shl
fiaddl
adc
mov
lahf
jbe
push
aam
xchg
test
dec
ret
in
insb
cs
cmp
push
sbb
shl
jns
out
sbb
xor
loope
add
pushf
xorl
out
lret
or
loope
movsl
out
inc
add
mov
xchg
leave
jmp
fdivrl
rcrl
out
popa
nop
mov
jae
adc
push
pop
inc
xlat
sub
sar
adc
cmc
lds
nop
insb
cmp
stc
or
push
test
or
push
dec
andl
es
add
dec
lret
iret
jp
dec
inc
sub
in
stc
xlat
sub
movsb
into
adc
mov
push
sub
fcmove
sbb
adc
in
fidivrs
inc
add
xor
adc
cld
adc
cmp
xchg
push
repz
adc
popa
es
addr16
mov
dec
fsubrs
mov
cmc
loope
ret
inc
or
dec
mov
sub
jle
pop
jb
lret
xchg
cmp
sbb
inc
push
jne
movsl
sub
popf
pop
andb
sub
clc
jg
ret
les
outsl
dec
dec
fdivrl
mov
out
movsb
fs
mov
sub
or
mov
mov
cmp
les
adc
or
adc
dec
test
adcl
in
sti
xchg
dec
sbb
lods
pop
cli
mov
xor
outsb
loope
or
dec
push
mov
pop
orb
flds
cmp
and
loopne
pop
sub
push
imul
inc
test
test
add
loop
push
sub
pop
addl
add
pop
push
movsl
insb
mov
mov
es
xor
popa
nop
in
jne
mov
mov
add
stos
pop
je
leave
gs
shl
divps
es
fcoml
aaa
out
icebp
add
jecxz,pt
cmc
adc
in
dec
add
jle
mov
lea
inc
loope
lret
mov
int
pop
adc
sbb
xor
push
decl
cwtl
scas
adc
sbb
ss
into
loopne
leave
sbb
rcrb
in
sarb
xor
mov
jp
outsb
jecxz
mov
push
mov
shr
sbb
cmc
adc
xlat
loope
outsl
iret
jmp
rorl
testb
sbb
ss
int
rcrb
ds
mov
lods
or
mov
add
jae
stos
ds
cmp
and
mov
sbb
adc
mov
loop
ja
mov
mov
hlt
xchg
loope
cli
ja
mov
push
es
std
lahf
jne
push
iret
mov
loope
fistl
bound
pop
mov
cmc
mov
push
shrb
xchg
cmp
adc
inc
dec
dec
or
test
xlat
cmp
call
ja
mov
cmp
cld
fs
shr
xchg
cmp
and
stos
pop
and
cwtl
or
add
cmp
dec
orl
leave
add
cmp
inc
jno
inc
iret
push
inc
or
pop
loope
cwtl
insl
jge
sbbl
dec
seto
sti
sub
sbb
shrl
popa
cmc
jl
repz
test
decl
jecxz
sbb
inc
lock
dec
fiaddl
jns
push
aam
add
rorb
sbb
push
or
es
push
int
std
je
mull
xorb
xorb
loope
mov
dec
loope
movsl
pop
sbb
fisttps
dec
jl
xchg
mov
je
xchg
sti
cltd
jne
adc
inc
pop
xlat
jecxz
pop
pushf
hlt
call
inc
cltd
sub
pop
leave
insb
in
xchg
push
xchg
mov
xor
out
cltd
imul
mov
cs
or
fsts
xor
or
adc
pop
sub
cltd
pop
out
mov
and
dec
pop
sbb
dec
mov
and
cmp
in
xor
sub
inc
xchg
xor
out
sub
ds
in
out
lods
dec
adc
rcl
and
push
jp
or
jle
lods
ljmp
jne
je
sub
pop
scas
dec
test
ret
jae
sub
or
ret
nop
mov
and
fcoms
aaa
cmp
inc
ss
loop
shll
into
js
aas
aas
daa
dec
les
cmp
sbb
loope
adc
pop
mov
lds
mov
and
js
dec
inc
je
inc
xchg
ret
mov
clc
mov
loope
dec
sub
cmp
mov
sub
and
cmp
xor
cmp
jb
ss
jp
ja
je
cmpsl
cwtl
cmp
push
mov
cmp
pop
xchg
jl
add
dec
push
lea
lahf
or
add
cmp
outsb
xchg
dec
dec
mov
sub
push
rorb
jns
cltd
cs
xchg
out
fwait
pop
sbb
or
hlt
cmp
das
cmp
int3
xor
test
shlb
add
fisubl
nop
pop
pop
push
pop
xor
pop
test
int
xchg
movsb
notl
and
ja
mov
sbb
xor
iret
and
jae
clc
xor
cli
xchg
cmc
jno
sbb
inc
inc
mov
sbb
pop
loope
mov
mov
roll
cmc
ficoml
movsb
xlat
outsb
out
jbe
push
adc
mov
jae
hlt
pop
aaa
popf
add
adc
cmp
in
dec
std
cmc
jmp
mov
ljmp
jmp
stos
xor
dec
out
xor
jle
pushf
or
add
lock
or
bound
ljmp
insl
cmp
lods
mov
jmp
sbb
push
mov
and
xchg
popf
jle
cld
pop
xor
pushl
stos
pushf
lds
aad
in
or
mov
push
xor
sub
jle
scas
ds
inc
pop
or
mov
in
cld
leave
sub
cltd
lock
ret
aas
pop
pop
mov
xchg
lods
mov
push
scas
aam
movsb
inc
insl
jo
push
sbb
xor
ja
jns
mov
das
insl
adc
cli
int
fldcw
call
dec
fucomip
cmpsl
aas
insl
fsts
adc
pop
mov
push
pop
fidivrl
add
mov
mov
push
test
gs
sub
imull
loope
jne
sahf
addl
push
bound
fnstsw
enter
mov
dec
faddl
xor
fists
mov
jo
mov
push
xchg
inc
int3
insl
mov
scas
dec
xor
xor
sbb
mov
inc
push
add
les
mov
repnz
or
aaa
push
sub
in
push
xlat
pop
sarl
out
xor
and
fisubl
adc
fsubrl
call
dec
mov
pop
and
push
fwait
sbb
gs
mov
jle
inc
pop
inc
fldcw
or
mov
in
xchg
dec
lock
push
lret
jecxz
clts
jg
cwtl
fdivr
mov
les
orb
xchg
lods
lcall
shl
dec
xor
inc
test
sbb
jae
fisttpl
sbb
fs
push
cmp
adc
xor
out
and
xchg
xchg
push
lret
mov
leave
fimull
scas
test
jno
jns
mov
aam
fisttps
sub
adc
call
ffreep
pusha
dec
mov
fstpl
pop
mov
mov
cmp
dec
lods
jb
mov
cwtl
into
clc
lock
mov
call
rol
adc
aaa
jp
dec
ret
repz
sbb
stos
dec
add
mov
sahf
pushf
fcoml
rcrl
ret
mov
fwait
sbbl
sbbb
xor
lea
pop
outsl
imulb
xchg
js
imul
subb
fwait
or
jae
fimull
dec
pop
mov
cmpsb
aaa
cmp
dec
cmc
or
jbe
clc
mov
dec
adc
jae
and
mov
xchg
cmpsl
fcmovne
cmp
pop
push
adc
mov
in
aam
mov
shrl
or
les
mov
notl
pop
icebp
mov
fists
mov
or
sub
sub
xchg
fldl
inc
scas
cmc
notl
iret
ret
mov
inc
repz
lretw
sub
call
and
sbb
and
fcoml
inc
enter
test
repz
jg
inc
lcall
adcb
loope
dec
pop
adc
xchg
js
fs
adc
inc
hlt
add
mov
ret
lods
mov
sub
mov
jg
or
mov
mov
lods
dec
or
mov
jl
jnp
leave
dec
sub
jg
fcompl
pop
jge
lock
mov
das
add
push
cmp
pop
adc
xchg
lahf
sbb
xchg
cmpsb
mov
mov
loop
mov
sbb
mov
adc
lcall
out
std
mov
pop
mov
in
dec
sbb
loope
dec
dec
pop
push
int
inc
mov
adcb
clc
inc
pop
lds
in
fists
data16
cmpsb
scas
and
mov
sub
jns
mov
and
mov
mov
and
jns
and
cmc
inc
pop
jmp
xor
les
divb
jnp
and
hlt
sbb
jge
xchg
xor
iret
test
cmp
cld
xor
xchg
mulb
jg
cli
add
leave
xor
movsb
pushf
imul
mov
ficoms
popa
cmp
call
mov
rcll
cmpsb
add
daa
cmp
mov
push
xor
inc
adc
pop
ret
fists
adc
add
mov
add
sti
xor
ret
into
inc
pop
push
mov
mov
mov
fwait
sub
mov
cmp
test
pop
mov
pop
push
mov
cmp
adc
add
lahf
jne
xchg
mov
jbe
cld
push
adc
test
mov
mov
clc
neg
xchg
pusha
into
out
or
sti
inc
cmp
lods
xor
popa
pusha
imul
jp
jo
sub
pop
imul
mov
stc
push
mov
xchg
xchg
adc
loop
adc
dec
push
sbb
adc
and
pop
sbb
inc
dec
or
or
push
xchg
mov
das
xor
pop
lods
imul
add
hlt
pop
jo
and
rol
or
xor
pop
mov
inc
pop
pop
sahf
cwtl
fsub
cmp
sub
ljmp
mulb
mov
lods
idivb
bound
data16
nop
out
pop
ror
cmp
js
js
cmp
and
mov
mov
jge
push
xchg
js
fldcw
cmp
pusha
mov
jp
insb
cmpsl
push
pop
stos
inc
xchg
rorb
movsl
inc
dec
push
ds
pop
pop
xor
sti
adc
push
out
push
xor
pop
loop
pop
mov
sbb
jge
push
div
lock
adc
push
fldl
fcoml
mov
stc
fidivs
inc
xchg
mov
xchg
cmp
pop
int
sub
mull
or
push
fwait
mov
in
pop
insb
sbb
adc
jb
insb
aam
xor
lret
lock
lret
push
rol
or
addr16
adc
lahf
mov
and
popf
mov
dec
in
in
in
stos
lret
mov
hlt
sub
mov
dec
jb
cmp
sbb
mov
call
lret
idivl
and
sbb
add
push
mov
sbb
dec
jmp
leave
sti
pop
rcrb
rcll
mov
push
test
outsl
or
fnsave
mov
pushf
adc
mov
inc
pop
pop
push
cwtl
and
mov
dec
iret
pusha
push
out
and
stc
mov
outsl
pop
and
jno
fstps
mov
pop
pop
aam
ja
ds
lods
test
xchg
pop
push
rclb
aam
call
xor
sbb
inc
xchg
jns
mov
jle
stos
jnp
cld
jo
fwait
stos
xchg
xchg
scas
ja
dec
lock
daa
fimuls
dec
pop
jp
arpl
jnp
pop
adc
mov
jge
inc
fcompl
pop
sub
fisttps
add
dec
add
jl
or
mov
or
aam
pop
sub
rcll
cmpsb
pop
xchg
mov
out
addr16
test
leave
mov
inc
push
stos
movsb
cwtl
filds
data16
ret
push
scas
push
sbb
in
flds
cmp
ffree
ss
mov
sti
sbb
icebp
cmp
loopne
insl
xlat
or
sub
std
test
jb
mov
push
inc
test
push
int3
dec
call
js
jnp
mov
pop
scas
inc
inc
popl
dec
push
int3
ss
iret
or
fwait
jecxz
xchg
mov
cmpsl
lock
push
test
cmc
daa
js
int3
out
shrl
or
push
inc
insb
ds
rcll
rclb
ja
adc
xchg
jbe
sbb
push
shl
std
and
sub
adc
nop
xor
or
in
repnz
icebp
cmp
fisttpll
jle
frstor
mov
repz
scas
push
popa
leave
and
out
out
jle
cld
sbbb
dec
pop
sahf
jp
loop
push
push
dec
enter
js
pop
mov
insb
es
add
movsb
lods
add
cmp
icebp
scas
repnz
cli
xor
pop
aas
sub
aas
and
jmp
mov
adc
push
loopne
shrb
dec
and
das
ret
pop
adc
lahf
mov
sahf
cmp
fidivl
leave
fsts
sub
loope
in
dec
push
inc
loope
mov
ljmp
popf
pop
and
ffree
loopne
test
inc
mov
sahf
fimuls
xor
or
int3
jmp
dec
imul
mov
repnz
pusha
mov
mov
bound
mov
xor
inc
ss
fscale
push
dec
jmp
mov
jecxz
pushf
and
mov
cmp
sub
fildll
sub
mov
lcall
xlat
push
insb
std
pop
fcompl
jmp
iret
and
in
mov
ret
ret
lds
ss
push
repz
mov
repz
in
sbb
dec
mov
repnz
mov
shrb
jle
mov
mov
push
popa
sbb
push
push
out
push
inc
jl
xchg
cmp
fmull
fadd
cld
dec
call
std
pusha
mov
lret
in
push
clc
inc
enter
or
xor
sub
out
add
mov
jb
cmp
rol
pop
xor
pop
push
jp
pop
aas
cmc
subl
jp
and
cli
pusha
lret
mov
cltd
add
insl
jl
jae
mov
pop
dec
jne
iret
xor
lock
out
push
dec
xlat
dec
jno
xchg
es
jge
mov
xor
fimull
in
cs
jp
call
mov
xor
jae
fldt
movsl
int3
out
push
or
xchg
sub
ret
push
pop
cltd
in
lret
sahf
out
ja
stos
sbb
pop
fcmovbe
mov
jns
out
mov
xorl
ret
inc
adc
push
mov
pop
push
cld
inc
push
jno
pop
je
xchg
fidivrl
ja
cmpsl
mov
and
in
and
or
out
push
mov
in
adc
jp
or
fwait
add
mov
jmp
cmpl
mov
hlt
jno
dec
aas
dec
xor
or
adc
call
repnz
shll
or
xor
cli
cmp
cs
add
mov
into
lahf
jmp
inc
hlt
sub
lea
xor
jle
cmpsb
push
stos
out
in
sub
nop
dec
popf
adc
pusha
and
and
mov
and
nop
and
add
pop
iret
popa
inc
xchg
lds
loopne
push
jne
jbe
movsb
xorb
add
sbb
sbb
jle
call
call
mov
pop
cli
dec
mov
movsb
push
stos
jno
mov
lcall
je
ficoms
add
adc
stc
out
push
loopne
stos
mov
insl
imul
cs
rorb
clc
mov
mull
pop
push
push
loope
stc
push
jb
popa
ja
mov
addr16
sub
cmpsb
shrl
pop
addr16
pop
jno
stos
test
dec
cmp
ffreep
sahf
loopne
int3
cmp
sub
in
stos
mov
adc
jbe
cmp
out
xchg
lcall
or
test
clc
or
mov
nop
imul
in
add
sub
or
mov
ret
roll
and
cmpsl
cmp
imul
sub
mov
sub
add
or
jno
repz
mov
in
xchg
cmp
cmp
clc
out
jns
pop
jo
jbe
cld
in
sahf
test
xlat
pop
dec
dec
xchg
mov
fwait
mov
jmp
sbb
ljmp
repz
mov
adc
dec
fwait
push
pop
ret
scas
mov
xchg
ja
fwait
lods
sti
mov
cmc
sahf
add
fidivrs
into
xlat
mov
dec
imul
insl
mov
inc
jecxz
mov
rcrl
push
loope
lret
mov
mov
fistl
jne
jmp
loop
inc
pop
andb
clc
pop
lea
iret
mov
fst
cmp
lcall
js
xchg
rorl
es
insb
ja
int
addl
pop
push
lahf
and
sbb
popa
ds
push
insb
adc
mov
jb
mov
add
pushl
pusha
mov
dec
inc
insl
pop
or
xchg
pop
cmp
fldcw
movsb
pop
add
repz
dec
jge
sbb
push
add
movsb
fnstcw
inc
jae
sbb
leave
jnp
cltd
pusha
mov
cwtl
mov
add
shrb
stos
xlat
call
out
int
in
mov
xchg
sti
sub
loope
xchg
insb
mov
in
cmpsb
lods
scas
fs
and
ja
jb
and
in
dec
xchg
push
xchg
fbld
adc
add
sbb
cmp
push
and
push
daa
cmpsl
jnp
cmp
and
cmpb
inc
fisubs
stc
jns
rorl
dec
iret
xchg
jg
iret
sub
popf
xorl
cld
or
and
daa
adc
clc
jp
rol
jne
or
pop
aad
je
cmp
nop
cmp
mov
sbb
sub
pop
cmp
xor
push
sbb
push
jb
nop
mov
sbb
sub
xor
lock
dec
pop
cltd
sub
popf
mov
dec
imul
pop
test
aas
out
mov
test
pop
dec
outsb
mov
inc
mov
jecxz
lret
das
jmp
pop
enter
lea
xchg
mov
sbb
push
pop
push
or
jnp
in
and
pop
sbb
rorl
dec
pop
sub
decl
sbb
inc
cwtl
mov
or
mov
ss
imul
testb
pop
div
in
jge
dec
push
mov
xor
xor
dec
xor
adc
mov
rorb
test
mov
xchg
stos
push
aaa
xor
bound
mov
dec
cld
add
push
jg
les
cmpsb
sahf
imull
mov
data16
inc
rcrl
ret
jb
ljmp
mov
inc
jg
mov
dec
jns
pop
pop
push
sbbb
leave
out
push
std
and
jb
lock
jo
dec
les
mov
sub
jecxz
jno
movsl
repz
dec
repnz
add
les
dec
add
popf
dec
mov
loopne
insl
and
movsb
pop
jo
out
cmp
mov
int
in
int3
or
aam
inc
pusha
adc
pop
les
jp
mov
leave
mov
aaa
xor
fisubrs
sub
lea
mov
out
adc
inc
mov
icebp
insl
cmp
pop
rcll
test
cmp
repz
stos
popa
bound
mov
xorl
push
push
inc
mov
ret
popf
mov
cmp
addl
mov
push
pop
sbb
cwtl
mov
cmpsl
cltd
std
dec
sbb
pop
pop
icebp
push
mov
fisubrs
adc
les
mov
mov
adc
or
xchg
repz
lea
push
je
fscale
mov
ja
dec
cmp
fld
mov
xor
stos
mov
inc
xchg
pop
adc
dec
mov
outsl
and
inc
rcrl
imul
popf
cmpl
xchg
outsb
jns
pop
faddl
nop
mov
bnd
jae
jbe
pop
cmpsl
in
out
aam
push
push
icebp
fwait
push
int3
or
test
pop
clc
sub
shrb
xchg
sub
gs
fwait
adc
xlat
movsl
popa
pop
lock
std
jbe
ds
xor
aad
lea
adc
loop
fsub
push
pusha
pop
stos
adc
xchg
test
lret
addr16
stc
rcrl
push
add
inc
pop
sub
jl
inc
xor
outsb
pop
lods
xchg
js
sbb
cmp
and
orl
xchg
outsb
lea
push
and
testb
push
dec
cmpsl
xor
call
and
aad
push
aas
aas
ffreep
aad
jmp
mov
sti
and
pop
xchg
cmp
cmpsb
sbb
xchg
push
sahf
adc
mov
inc
jmp
lahf
adc
cmp
sub
insl
adc
icebp
xchg
mov
or
enter
jmp
sub
and
adc
jne
fcompl
enter
xchg
mov
xor
out
out
or
into
cltd
fbld
and
pop
add
rcrb
rorl
jne
cmp
cld
pop
mov
and
cli
icebp
sbb
dec
loope
sbb
dec
jns
adc
rcl
xor
out
sub
icebp
imul
fsubrl
sub
jne
outsb
pop
arpl
shl
adc
fwait
inc
pusha
es
std
mov
mov
pop
jae
test
loopne
hlt
xor
es
mov
scas
dec
dec
cmp
daa
cld
in
enter
lock
ljmp
test
or
lret
push
adc
insl
mov
push
and
adc
cmp
sbb
mov
vmovss
aaa
mov
imul
arpl
jb
aaa
sbb
in
in
iret
sub
mov
jp
lahf
rolb
dec
popf
xchg
in
dec
jb
xor
fstpl
and
jmp
push
sahf
xchg
outsl
popf
iret
cmp
xchg
cmp
das
sbb
sahf
pop
lahf
push
out
sbb
sarl
out
int3
mov
outsl
loop
cmpsl
add
inc
pop
sbb
aad
mov
jmp
mov
push
xchg
mov
jecxz
mov
loop
movl
pop
fbld
jbe
push
fistpl
push
ds
mov
clc
bound
pop
stc
push
mov
repz
iret
ds
sbb
push
inc
test
push
jbe
pop
lcall
cmp
mov
adc
fwait
icebp
dec
sub
jb
or
add
scas
pop
inc
jne
jns
push
filds
fsubl
xchg
cmc
rolb
hlt
stos
bndstx
dec
fists
mov
pop
xor
and
xchg
and
pop
jl
setno
jo
push
push
jl
ficompl
xor
or
mov
insb
pop
inc
fcomps
push
add
jno
and
xchg
add
mov
mov
data16
dec
cmp
movsl
add
cmp
push
in
and
cmpsl
adc
inc
ds
outsl
inc
test
ss
dec
or
jmp
in
ficompl
add
jno
cmc
xchg
sbb
in
ret
pop
cmp
divl
fsubrs
sti
or
sarb
stos
daa
xor
xchg
lret
dec
mov
stos
mov
es
imulb
das
cld
imul
sbb
sub
jmp
dec
jo
mov
in
add
insb
inc
add
movsb
sub
scas
xor
sbb
fwait
mov
andl
push
cmp
xor
cmpsl
xchg
pop
xor
lahf
sub
pop
dec
ja
out
sahf
inc
add
mov
sbb
cmp
xor
in
cmpl
cs
out
repnz
je
xlat
imul
sahf
jl
arpl
dec
pusha
xor
xor
xchg
and
popa
xchg
jp
sti
or
cltd
pop
int
push
jl
in
lods
leave
xor
fs
mov
adc
mov
outsb
and
jae
inc
xchg
mov
dec
sub
icebp
stc
and
popa
andb
pop
and
aam
das
push
jae
fs
cmpl
inc
jns
andl
movsb
inc
test
dec
int3
inc
outsl
icebp
fst
dec
or
or
pop
mov
sbb
pop
jl
clc
xor
movsl
test
and
sub
pop
insl
shrb
sbb
imull
fadd
mov
fisubrs
cmp
or
xchg
cmp
xchg
dec
hlt
mov
cmp
push
xchg
stos
sub
push
ficompl
pushf
xor
gs
pop
adc
pop
fwait
mov
and
inc
sub
inc
pop
dec
jmp
roll
pop
add
and
add
pop
jb
movsl
xor
int3
addr16
das
pop
lods
dec
push
inc
adc
jns
xchg
js
adc
sbb
push
ret
test
jo
jo
sti
mov
sbb
arpl
dec
cmp
add
sbb
lret
loopne
pop
jo
call
repnz
lret
mov
shl
mov
pop
inc
dec
hlt
insl
add
hlt
rorb
add
neg
loopne
mov
adc
js
in
sbb
sbb
mov
xchg
enter
es
mov
jmp
in
cld
jo
or
jg
icebp
jp
jb
jl
stos
arpl
rcrb
jl
mov
sub
sub
dec
fisubrs
ljmp
or
or
push
or
cmp
xor
fs
aam
fldcw
shrl
sbb
push
xchg
out
cli
mov
rolb
addr16
fs
in
sub
popa
scas
rclb
mov
mov
pop
sbb
push
pop
mov
mov
adc
inc
pusha
cwtl
iret
add
xchg
jge
add
addr16
popf
adc
insb
popa
test
test
fsubr
movsb
lods
mov
popf
jmp
dec
popf
pop
scas
orl
sub
cmp
aaa
test
lods
jmp
sbb
or
mov
cmp
pop
test
pop
fcompl
pop
mov
jnp
imul
nop
sbb
cmp
cwtl
jp
stos
cmp
cmpxchg
adc
sbb
inc
pop
test
pop
mov
cld
sbb
jb
pushf
dec
sbb
sub
lock
sahf
or
or
pop
cmp
pavgb
out
pop
dec
mov
pop
outsb
inc
daa
xor
mov
ss
dec
cmp
mov
dec
fwait
cmc
rclb
sahf
jmp
rol
add
dec
and
cmp
outsb
or
je
and
push
mov
push
hlt
aam
repnz
in
adcb
mov
les
sbb
testb
leave
test
lods
mov
es
ficompl
aad
lea
push
xor
or
adcb
push
fcoml
cmp
sub
in
icebp
pop
stc
sub
mov
or
std
loop
inc
cmp
mov
sti
pop
rsqrtps
jnp
mov
jl
and
arpl
or
daa
mov
dec
and
inc
in
cld
adc
mov
ja
adc
lahf
or
or
cmp
xor
push
xor
repnz
cmp
add
push
movmskps
inc
push
stc
jle
bound
imul
fwait
adc
repz
lea
bound
xchg
sar
xchg
or
mov
mov
fistps
stos
lcall
in
add
out
movsl
adc
jmp
dec
or
fisubs
std
lret
js
lock
pop
pop
sub
add
fidivl
gs
pop
in
mov
sbb
cli
mov
in
hlt
test
or
loopne
lret
and
les
adc
xor
cmpsl
add
sarl
push
pusha
pop
push
pop
mov
mov
pop
aaa
mov
sub
xor
sub
xchg
xchg
mov
ret
pop
jo
popf
lods
pop
mov
cmp
and
push
or
repnz
icebp
jb
adc
inc
sahf
or
sbb
std
jmp
xchg
sbb
mov
cmpsl
in
pushf
jns
out
lods
inc
scas
adc
lea
mov
shrl
mov
shll
hlt
or
jle
fiadds
pusha
xorl
in
loop
and
push
and
jnp
ret
push
fiadds
daa
roll
outsl
rolb
jb
mov
call
lock
mov
sbb
js
gs
xor
and
push
movsl
loop
aam
stos
cmpsl
and
xor
jle
add
mov
push
mov
jmp
das
add
daa
rorb
and
and
cmp
test
pop
jecxz
sub
lcall
mov
xchg
pop
and
push
fisttps
inc
loope
pop
push
cltd
jmp
mov
mov
and
sbbl
adc
pop
lods
and
sub
fs
xchg
jge
sub
adc
or
imul
mov
mov
aam
and
mov
or
jge
pusha
loopne
xchg
and
jbe
int3
mov
pop
xlat
push
ret
sub
sbb
mov
inc
pop
in
hlt
cmp
insl
daa
pop
jbe
xchg
xchg
aam
stos
pop
ret
mov
mov
leave
mov
lret
je
push
dec
jo
aaa
in
sbb
jo
inc
pop
sub
jno
push
stos
push
xchg
inc
push
andl
jnp
outsb
icebp
flds
cmp
sbb
test
mov
mov
stos
iret
sahf
xchg
mov
cmpsl
push
repnz
pop
enter
sub
xchg
mov
pmullw
push
cmp
movsb
sbb
test
out
lcall
sbbb
sub
into
icebp
iret
out
push
test
mov
push
movsb
outsl
mov
xchg
filds
xor
aas
jp
xchg
jge
adc
out
sub
icebp
pop
loope
pop
pop
jbe
push
push
cld
bound
gs
xchg
xor
xchg
jbe
in
jbe
and
add
mov
fcmovne
cmp
mov
xlat
cmpsb
lcall
adc
xlat
call
xor
test
fisubrs
es
adc
push
cwtl
cmpsl
inc
add
sbb
ss
xor
std
adc
sub
mov
ss
pop
xchg
enter
stc
lcall
rcl
jmp
or
lahf
shrl
out
sub
sub
pop
or
lret
lea
aaa
sarl
sbb
out
loope
xchg
ja
rorl
pop
in
pop
pop
jb
dec
sbb
jns
mov
cmpsb
ret
and
out
push
bound
les
mov
test
cmc
pop
mov
out
out
int3
and
push
hlt
cwtl
mov
inc
arpl
sbb
add
outsb
in
mov
fwait
loope
test
roll
arpl
ljmp
leave
repz
test
sub
pop
lock
and
cmc
push
int3
push
outsb
mov
in
dec
cmpsb
mov
jle
ret
mov
lods
rolb
jl
mov
adc
scas
jl
mov
mov
mov
aas
xchg
push
sbb
nop
push
mov
pop
iret
stc
xchg
inc
in
sbb
sbb
mov
xchg
mov
je
leave
dec
and
ds
aam
jo
cwtl
dec
popf
orl
cmc
xlat
fsubp
in
imul
sbb
fisttpll
sub
add
inc
loope
popf
xchg
dec
aam
push
adc
xor
inc
movl
test
xorl
inc
push
cmp
add
out
out
jp
outsl
jle
fstpl
int3
cmpsb
push
or
mov
or
jmp
inc
fiaddl
adc
out
dec
pushf
inc
cltd
cmp
jl
dec
lods
push
xor
dec
xlat
or
lods
test
xor
cmp
push
pop
test
add
pop
and
popf
mov
int
ret
fucom
incl
gs
dec
test
dec
sahf
mov
out
or
jb
push
pop
aad
cltd
and
mov
fsubrs
mov
xchg
mov
xchg
pop
stc
cmpsl
lds
cmpsl
sbbl
add
bound
mov
dec
mov
and
mov
xor
jo
vcmppd
fnsave
in
and
rcll
js
mov
dec
sti
gs
sub
push
cmp
mov
xchg
pop
cmp
add
mov
in
roll
add
xchg
movsb
push
sub
mov
pop
adc
cli
push
aas
xor
fisttpll
mov
sub
cltd
jb
xchg
push
add
jae
cmp
or
xchg
out
xchg
cli
ret
and
in
mov
sbb
imul
lret
fcomi
and
xchg
mov
sbbl
movsb
fcoms
sti
rorb
or
mov
xor
stos
fisubrl
ror
in
pop
ljmp
xor
fwait
xor
pop
or
inc
insb
dec
out
sbb
push
mov
shlb
lahf
lock
push
rcrl
mov
ret
aam
xor
aad
cmpsl
mov
ret
gs
mov
pop
xor
adc
mov
pop
mov
xchg
movsb
add
jns
pop
xor
sub
lods
adc
or
sub
xchg
push
shll
xchg
xor
mov
jne
fildll
aas
mov
xrelease
das
lret
stos
es
add
lods
cmp
dec
incb
pop
ss
out
test
lods
addb
stc
sbb
jbe
cmp
jecxz
bound
lahf
icebp
pop
sbb
cmc
jnp
ret
jmp
add
fwait
xchg
push
mov
push
das
jno
cmc
ret
sahf
imul
dec
mov
add
add
loopne
cmp
cmpsb
int
adc
xchg
mov
cmp
dec
movsb
loope
negl
imul
out
in
inc
or
pusha
push
lods
jmp
repnz
lret
and
push
or
pop
inc
or
out
movsb
adc
or
xor
out
mov
xchg
mov
lods
sahf
shrl
push
jg
test
sub
or
pop
loopne
add
iret
call
inc
ret
mov
push
dec
pop
aaa
ret
mov
or
or
mov
xor
aas
add
or
pusha
dec
fisttps
push
mov
mov
push
inc
pop
dec
jno
xor
xorl
cltd
in
add
and
stos
insl
mov
jbe
pop
sti
add
xchg
mov
outsl
jmp
xchg
test
sbb
cld
aaa
mov
cwtl
andb
add
mov
es
and
test
cld
mov
adc
loop
pop
int3
shr
push
rorb
cwtl
mov
sbbl
out
fwait
icebp
inc
dec
or
push
sbb
cmp
sub
mov
sarb
adc
repz
shlb
or
cltd
inc
enter
xchg
lret
xor
adcl
imul
mov
push
cmp
pop
mov
and
in
mov
xor
test
cmp
popa
insl
sti
jbe
lahf
test
mov
icebp
sbb
sub
inc
insb
cmp
int
mov
dec
fimuls
add
ret
add
ja
arpl
add
jno
mov
outsl
jae
ret
into
lret
arpl
and
mov
test
jne
enter
outsl
inc
loop
adc
add
lea
icebp
xchg
lea
das
rcrl
push
popf
push
sbb
rclb
outsl
mov
das
out
jnp
scas
xor
enter
mov
sti
push
cmp
repz
int
or
mov
movl
les
outsb
outsl
sbb
in
ret
test
and
xchg
lret
pop
je
aad
jle
mov
mov
cmp
mov
out
ss
mov
iret
sbb
jl
aad
popf
cmp
pop
popl
ljmp
jge
arpl
aad
stos
test
mov
ffreep
fstpt
mov
cmp
sub
stos
mov
add
xchg
and
das
push
jno
hlt
xchg
leave
jl
push
icebp
mov
enter
xchg
jg
or
jae
out
sbb
ret
xorb
sbb
adc
mov
loope
ret
add
xor
movsb
in
adcb
adc
mov
dec
dec
enter
adc
arpl
jle
inc
sbb
mov
ja
rcrb
and
dec
xchg
mov
fstpl
sub
jle
out
or
mov
test
jle
mov
jbe
sub
mov
outsl
mov
push
sbb
fwait
jb
push
cmp
xor
dec
push
lods
into
ss
andl
or
punpcklwd
pop
leave
std
rcll
fdiv
or
sub
lods
out
cmp
rorb
xchg
test
stos
daa
and
scas
cmp
mov
mov
inc
push
jo
fsubrp
in
jg
clc
xchg
mov
sbb
cmpsl
aaa
test
movsb
int
pushf
mov
jb
ds
xor
and
loope
dec
mov
sbb
push
dec
loopne
clc
ds
movsl
mov
mov
xchg
shll
sub
xchg
loop
scas
daa
sub
ret
mov
mov
sbb
mov
dec
int3
inc
dec
add
adc
adc
xorl
jg
mov
mov
mov
mov
ds
adc
cmp
or
lret
mov
loope
int
pop
inc
mov
jno
mov
mov
xor
xor
es
push
out
outsl
mov
neg
cmp
repnz
ljmp
test
std
xor
adc
mov
jge
pop
jp
sbb
hlt
dec
test
and
jp
lock
insl
fwait
mov
lods
lret
sub
rcr
test
push
arpl
ret
xchg
push
fucomip
dec
repnz
dec
inc
mov
and
push
fcom
sbb
or
push
fbstp
sub
mov
stos
ss
rcrl
adc
fistpll
lret
dec
mov
cli
or
lcall
push
cmpsb
aad
push
stos
add
push
test
jp
mov
push
jl
cmpsl
mov
lock
add
aaa
xor
push
jg
dec
test
mov
sub
xchg
scas
in
add
pop
mov
sbb
leave
jmp
mov
adc
sub
cltd
sbbb
lock
xchg
xchg
aaa
mov
rclb
gs
xchg
pop
out
cmp
push
pop
jmp
std
mov
movsb
xchg
cmp
push
jmp
scas
lock
shlb
or
mull
nop
fistl
cmpsb
mov
leave
adc
add
cmp
pop
lret
adc
jmp
lahf
and
and
push
repnz
pop
jl
lahf
roll
stc
cmp
xchg
imul
and
sub
jp
dec
lahf
cld
sub
inc
add
pushf
mov
push
fcompl
jge
pop
pop
sub
mov
out
cmp
ss
iret
mov
xchg
in
repnz
jb
push
lock
push
and
pop
les
or
or
pop
jno
push
mov
inc
fmuls
movsb
lcall
sub
mov
addr16
fprem1
xchg
adc
xor
mov
andl
sbb
sub
aaa
test
adc
cmp
movsl
push
lahf
xor
mulb
lock
pop
cmp
inc
pop
jns
int3
adc
jle
outsb
aaa
pop
lods
mov
sbb
shll
and
fwait
sub
in
jno
lcall
push
int3
jnp
test
xorl
fdivs
mov
jl
ds
adc
jns
dec
orb
pop
mov
pop
call
inc
stos
jb
cli
pop
out
fwait
lret
fmul
out
dec
mov
fsubs
rorb
cs
jl
int3
jno
and
dec
sub
notl
aad
movl
mov
test
or
sahf
std
outsl
andb
or
mov
pop
out
fsub
popa
shlb
add
ss
xchg
inc
mov
inc
dec
jo
jge
mov
cs
inc
xchg
addb
pop
jne
jp
mov
aam
sarb
sub
pop
xchg
xchg
ds
addr16
sub
pusha
sub
push
outsb
jg
sub
jl
add
out
leave
les
dec
jbe
test
je
mov
mov
pushf
int
dec
xchg
xlat
xchg
dec
pop
cmp
mov
lcall
loop
xchg
sbbl
pop
imul
std
push
or
testl
lret
cld
xchg
xchg
or
ljmp
dec
ja
xor
xchg
cmp
xchg
out
cmp
icebp
cltd
add
test
in
xorb
mov
pusha
sti
test
add
jl
ret
or
xchg
call
xchg
fimull
aad
imul
or
inc
leave
cmp
mov
or
js
mov
fiadds
and
cltd
mov
orl
popa
lea
sets
sbb
addr16
xchg
sbb
out
shl
mov
mov
cs
or
push
jmp
push
aas
and
lcall
sbb
xchg
sbb
xchg
xchg
inc
test
idivb
sub
call
jb
loopne
leave
or
in
out
lds
jae
inc
cmpsl
cmp
jae
pop
inc
notb
mov
mov
das
sub
mov
insb
addb
cmp
mov
stos
sarb
loope
out
call
pmovmskb
imul
sbb
jae
inc
lods
push
je
mov
lret
mov
push
inc
inc
das
fs
sbb
jae
add
push
jo
xchg
cmp
out
mov
out
inc
jg
cmp
sub
add
fmul
xor
lods
or
mov
lahf
repz
insl
jecxz
ret
add
test
icebp
fistpl
test
int3
stos
clc
lret
fimull
stc
xchg
addr16
cwtl
cmpsl
pushf
sub
dec
ror
shrb
push
jmp
popa
sbb
fwait
cmpsb
and
sbb
pop
push
jecxz
fiaddl
iret
cmp
scas
iret
cmpsb
fs
pop
in
xchg
push
sub
mov
rep
push
call
pushf
mov
and
in
cmpsl
pop
mov
inc
sti
xchg
xchg
pop
mov
adc
mov
jge
cmp
pop
out
dec
inc
test
test
xchg
pop
pop
sti
push
inc
xchg
or
inc
xchg
lea
dec
jbe
mov
push
lods
xchg
pop
data16
xchg
repz
mov
lahf
dec
xchg
xchg
cmc
dec
into
cmp
addl
mov
aad
out
mov
mov
loopne
push
mov
lret
frstor
lret
jg
subl
jp
pop
pushf
mov
push
push
and
push
outsb
movsb
or
pop
sbb
out
add
fidivl
dec
xor
lods
jg
loope
push
jae
pop
add
xchg
andb
push
mov
add
test
imul
cmpsb
adc
mov
sbb
lods
sti
cwtl
xchg
or
insl
sahf
sbb
out
pop
test
and
mov
int
xor
loop
cmpsl
cmpsb
mov
outsl
ja
and
jne
test
mov
sub
leave
push
cmp
mov
jns
push
shr
mov
ja
iret
dec
push
xchg
or
xchg
and
popf
xchg
popa
adcl
jl
mov
call
mov
xchg
in
fisubrl
mov
subb
rclb
adc
ds
xchg
push
mov
stos
jg
pop
mov
lods
stc
add
and
rcr
scas
lret
inc
push
aaa
and
inc
dec
fwait
icebp
stos
scas
or
test
dec
fxch
stc
cmp
fcmovnu
jecxz
mov
xor
aad
mov
adc
dec
mov
sub
es
mov
inc
push
push
adc
dec
or
out
sbb
mov
imul
sbb
sti
out
push
jle
cld
cmp
cmpsb
or
mov
imul
mov
and
lds
sbb
enter
cmp
stos
pop
inc
mov
stos
sti
cmp
hlt
andb
pop
or
insb
test
and
or
jae
call
add
lahf
cmp
xor
jb
adc
cmp
pop
xchg
dec
mov
and
aam
adc
jl
repz
jg
jnp
pop
pushf
movsb
ss
mov
stos
mov
pop
rorl
fstp
arpl
stc
mov
jmp
movsb
testl
and
mov
sub
popa
dec
push
mov
mov
mov
inc
cmp
mov
test
sbb
in
ficomps
cltd
divb
pop
js
data16
ja
inc
out
fnstcw
mov
lret
out
adc
xor
push
pop
popf
sti
inc
cmp
stos
movsb
fwait
enter
je
sarb
arpl
cmpsb
jecxz
sub
cmp
je
jge
xor
stos
jl
mov
sub
scas
mov
in
mov
or
out
test
cltd
mov
adc
jb
mov
aad
inc
add
mov
shll
mov
mov
push
ret
push
aad
int
pop
sarl
cltd
leave
adc
push
fwait
push
sbbl
push
xchg
pop
vmwrite
sub
and
mov
cmp
mov
pop
pop
jae
push
inc
mov
fadds
pop
lahf
jbe
xchg
mov
cmp
jle
mov
mov
cltd
sbb
xlat
mov
insl
ret
sub
or
dec
jne
dec
jmp
xchg
mov
leave
xchg
or
stos
jge
inc
aas
xor
icebp
lds
cld
and
cvtps2pd
pop
into
imul
push
sub
push
hlt
shlb
mov
loopne
out
je
xchg
in
jge
mov
or
inc
mov
adc
test
mov
mov
inc
outsl
or
cli
add
xor
add
xchg
adc
fdivl
adc
je
jg
mov
cmpsl
sti
data16
les
imul
movsb
adc
jne
shr
inc
test
lds
repnz
stc
jae
in
lea
dec
mov
xchg
js
lods
pop
push
mov
sub
sub
fcom
jge
jnp
out
test
sub
push
jecxz
mov
or
jbe
das
or
cmpsl
pop
insl
jnp
jp
js
sub
js
mov
mov
or
mov
call
lods
nop
mov
push
enter
popf
mov
sub
mov
or
mov
jbe,pn
sbb
add
xchg
add
in
ja
je
ss
je
inc
jae
mov
pop
jnp
push
std
jmp
fbstp
cmp
fwait
adc
mov
fisttps
lods
xchg
popf
jmp
out
out
cmp
orl
mov
cld
xor
jg
dec
sbb
mov
orl
lahf
out
fsubrs
jns
push
cwtl
sbb
inc
push
ficompl
adc
jbe
pop
push
icebp
add
mov
sti
loop
pop
push
jp
xor
cli
rolb
mov
pop
out
pop
imul
mov
jae
in
mov
pop
icebp
xor
out
arpl
mov
push
xor
stos
jno
andl
je
xchg
cs
jg
int3
cmp
nop
in
in
inc
xor
rorl
mov
mov
dec
mov
popf
cli
adc
aas
mov
push
cmp
inc
daa
pop
in
pop
mov
mov
and
negb
sub
movsb
or
xchg
imul
cmpsl
mov
cmpsl
mov
push
mov
into
cmp
shl
lcall
push
push
or
xchg
adc
jecxz
or
leave
and
cmp
jno
movsl
adc
lahf
ret
jns,pn
xor
shlb
sarl
lods
in
push
outsl
cmpsb
loop
sub
mov
or
xchg
pushf
ret
fwait
int3
mov
adc
lds
jne
mov
cmp
xor
xchg
test
sub
sarb
mov
and
lcall
daa
addr16
shlb
adc
dec
jle
mov
and
jns
xor
int3
jmp
pop
lret
test
inc
and
pusha
test
es
ss
pop
stc
out
outsl
in
mov
dec
test
xor
enter
es
xor
or
sbb
fld
mov
int
lds
call
and
enter
test
and
or
push
ficompl
mov
mov
xchg
pop
push
pop
mov
int
iret
push
mov
inc
test
out
pop
clc
xor
in
in
mov
das
mov
dec
lret
mov
in
mov
in
into
loope
adc
sbb
push
clc
xor
idivl
fdivl
mov
add
jns
adc
stc
sahf
cmp
lods
jno
shrl
int3
push
jge
and
pop
inc
xchg
mov
lahf
pop
repz
add
les
je
mov
ret
loop
mov
or
sbb
stc
lods
mov
add
xchg
loop
movsb
jge
ljmp
repnz
addr16
outsl
jl
test
dec
imul
jp
out
pushf
bound
cmpsl
out
loopne
mov
or
jne
add
adc
dec
sub
jp
or
mov
cmp
call
lods
push
jl
mov
js
jl
jno
std
push
lods
inc
push
push
mov
push
mov
xchg
mov
jbe
sbb
cmpsb
cmp
jecxz
scas
lock
fdivrl
iret
in
adc
ljmp
cs
jl
iret
xchg
mov
mov
loope
ja
pop
aaa
aaa
inc
mov
dec
jg
adc
xor
mov
movsb
lds
imul
insb
inc
out
imul
gs
xor
jne
pop
decb
push
sub
out
jmp
cmp
push
daa
jg
lret
aad
jae
push
insb
mov
mov
mov
mov
lret
push
lods
push
xor
push
push
into
lret
inc
xchg
in
lahf
loopne
cmpsl
insb
es
loopne
or
data16
sub
sbb
mov
mov
fsubs
xchg
pushf
cmp
mov
ljmp
jge
sub
mov
lods
cmp
int
jg
xchg
fdivrl
es
std
insl
cltd
loopne
or
or
mov
inc
cld
in
insb
push
xorl
mov
test
lods
out
stos
out
int
fsubrl
rolb
rorl
lods
xor
add
pop
loope
pop
jp
xchg
push
xor
mov
lea
adc
xchg
addb
sbb
shrl
inc
push
jmp
dec
cmp
fbld
aam
loopne
stos
jle
out
std
andl
inc
scas
sti
mov
sti
mov
or
cs
cmpb
scas
repz
adcl
pusha
jae
or
lods
jmp
pop
or
ret
dec
in
mov
daa
add
mov
xchg
and
insl
lret
arpl
in
mov
leave
loop
lods
mov
pop
mov
stos
lds
add
push
ja
push
stos
out
stc
dec
jmp
out
jno
ja
push
enter
arpl
push
push
jg
dec
in
incl
adc
adc
jb
insl
out
add
xchg
dec
cli
mov
mov
fsubr
ds
dec
cmpb
xchg
ret
fiadds
adc
nop
cmp
push
int3
cld
ljmp
ljmp
mov
xchg
inc
into
dec
arpl
orl
fstl
push
les
cli
out
cmp
xchg
inc
mov
push
and
sti
outsl
mov
jno
pop
sbb
mov
rclb
jecxz
cmp
test
jl
popa
or
ljmp
xchg
arpl
cmc
fsubrs
pushf
int3
fnsave
xor
mull
aas
mov
xor
mov
ja
mov
cltd
test
xchg
std
inc
dec
cwtl
xchg
push
inc
adc
ret
mov
mov
shll
daa
out
mov
mov
ret
imul
sub
lds
dec
dec
cld
push
out
cmp
mov
movsl
out
lods
cmpsb
cmp
outsl
or
jle
sbb
mov
in
cmpsb
push
and
xchg
and
sti
lret
addr16
mov
rcr
dec
xor
fcmovnb
testl
or
sbb
mov
sub
jl
push
fwait
xlat
loop
xor
mov
cmp
pusha
testb
cmc
outsl
aad
pop
popf
ret
and
xor
jge
push
cld
lcall
inc
in
daa
xchg
sub
push
xor
in
push
jge
fiadds
ja
sbb
push
hlt
cmc
lock
or
addr16
loopne,pt
fistpll
mov
mov
xchg
cmpsb
ret
aad
sub
out
insb
cmp
mov
push
lds
inc
fs
in
shlb
rcll
pop
xchg
jmp
fsubr
sarl
xchg
ljmp
lock
jne
or
cltd
rorb
dec
ficoml
push
add
pop
aad
fbld
and
loop
xorb
mov
mov
daa
out
jae
imul
adc
mov
jmp
int3
test
pop
xbegin
iret
loop
fildl
sub
pop
decb
cld
clc
das
into
js
lea
add
adc
pop
mov
test
mov
daa
daa
mov
sbb
movsb
sbbb
mov
sbb
stc
lahf
cmp
add
jle
jno
mov
cmp
pop
scas
pop
xlat
cmp
insb
lret
sub
sub
mov
and
pushf
cmpsl
sti
loope
fmulp
shlb
sub
mov
fistpll
pop
repnz
lret
cmp
inc
icebp
push
imul
dec
mov
repz
fistpll
test
dec
push
iret
pop
flds
xchg
mov
or
int
dec
xchg
lock
jmp
mov
sub
jp,pt
inc
pop
xchg
cltd
es
xchg
lds
and
sahf
xor
inc
pop
insb
cmp
jg
xlat
inc
mov
push
into
cmpsl
or
fsubl
xchg
add
push
mov
repz
int3
movsl
and
test
int
aam
imul
mov
mov
addr16
jne
inc
mov
repz
cmp
icebp
or
cmp
dec
push
cmpsb
leave
or
ret
mov
sub
pushf
int
mov
mov
daa
fstp
or
sbb
outsl
dec
js
xor
mov
inc
std
out
mov
dec
push
mov
int
ja
sahf
imul
or
add
add
add
sbb
jecxz
or
xor
mov
lds
lods
insb
roll
xor
cmpb
call
fdiv
jg
mov
imul
mov
cli
inc
cmp
int
mov
mov
ret
stos
notl
movsl
jge
icebp
data16
xor
sbb
or
xchg
mov
hlt
jo
jecxz
mov
jnp
popa
pop
cs
ret
mov
jnp
leave
mov
movsb
rol
pop
dec
ljmp
mov
xorb
mov
adc
dec
cmc
mov
jns
inc
xor
inc
inc
jo
pop
inc
inc
xchg
pop
push
negb
scas
hlt
and
stos
pop
mov
xchg
subl
xlat
dec
sbb
cmp
dec
lea
fimuls
pop
sahf
in
dec
dec
mov
int
movsb
lcall
inc
fdivl
repz
sub
or
test
fcmovu
arpl
jns
sar
rol
jo
std
mov
xlat
int3
dec
jo
pop
fnclex
cltd
pop
pop
test
aas
xchg
popa
mov
push
flds
inc
mov
fdivs
lret
push
jbe
call
ret
insb
inc
ficompl
xchg
int
pop
aam
cmp
rorl
scas
pop
push
xchg
add
add
mov
call
pop
fidivrl
pop
mov
fdivrl
int3
inc
lods
jbe
push
xor
add
dec
mov
pop
dec
shrl
loopne
aas
add
cli
popf
shrb
roll
pushf
mov
jmp
out
push
xchg
inc
inc
ds
push
out
push
hlt
pop
inc
stc
sub
inc
into
dec
aad
inc
push
pushf
push
sbb
cwtl
sti
inc
stos
push
gs
cmp
aas
movaps
fstpl
out
inc
ja
fiadds
xchg
cli
ds
mov
push
stc
sub
mov
xor
insb
mov
fwait
outsb
bound
inc
mov
or
cmp
jae
pop
arpl
dec
mov
mov
xchg
sub
lahf
sub
and
popf
or
add
push
inc
or
in
adc
dec
or
jae
xchg
mov
push
sbb
sub
test
ret
sub
dec
cwtl
jle
add
ja
xchg
repnz
mov
sti
daa
loope
daa
sbb
inc
dec
cld
jns
dec
call
ficompl
xchg
adc
dec
out
int3
or
jmp
rorl
sbb
inc
cmp
popa
adc
pop
push
into
jp
sub
dec
dec
lcall
fmuls
mov
test
add
cmc
test
pop
cli
hlt
leave
mov
add
and
int3
ffree
iret
pop
shlb
inc
jp
lcall
arpl
add
sbb
inc
xchg
aad
movsl
add
xchg
adc
xor
cmpl
jb
jmp
xchg
in
mov
adc
xchg
pop
xor
movsl
cmp
and
lahf
enter
pop
cmp
lods
jns
adcb
stc
or
sbbb
js
push
fistpll
add
pop
sbb
into
sub
push
ret
adc
jo
mov
cmp
xchg
daa
cmp
xor
and
or
lret
sbbb
ret
sahf
icebp
push
xor
xor
aam
adc
or
fisubrl
pop
movsl
xrelease
jno
movsb
sub
movsb
xlat
sahf
notb
jae
adcb
mov
xchg
icebp
loopne
inc
aas
xor
outsb
into
in
jbe
ret
push
ljmp
and
pop
fucom
leave
pop
mov
xlat
stos
push
jge
in
jno
int3
fs
adc
imul
lods
inc
shlb
cmp
out
jo
cmp
push
in
lahf
arpl
in
adc
mov
repnz
push
dec
int3
add
movsl
inc
xchg
xor
sbb
dec
push
sti
and
mov
xchg
add
xor
cmp
mov
mov
shl
imul
mov
push
shrl
sbb
into
lods
mov
push
ja
mov
sbb
mov
and
jb
mov
push
add
cmp
push
mov
cmp
data16
dec
lret
cs
xchg
lret
push
in
push
fisubl
aam
xchg
xlat
fstpt
and
add
adc
mov
lds
mov
sbb
dec
mov
aam
psraw
xor
jnp
andl
inc
cmp
sbbb
repnz
rol
push
push
repnz
xchg
lods
mov
roll
les
fistps
jmp
bound
add
shll
adc
in
das
shrl
enter
adc
mov
addr16
mov
insb
sti
xorl
aam
pusha
inc
in
insb
js
std
stos
les
dec
into
rorb
addl
sub
out
mov
outsb
gs
pop
mov
loopne
xchg
mov
shrb
cltd
or
inc
and
stos
pop
ljmp
aad
cmpsl
dec
call
in
xchg
sbb
test
and
add
mov
mov
inc
xchg
pop
pop
sub
and
stc
rcl
mov
pop
dec
xchg
jno
arpl
filds
mov
sbbl
lock
or
popa
jle
mov
jae
dec
jg
sarl
and
jbe
mov
xchg
adc
jnp
lds
xchg
scas
in
sub
mov
sub
sbb
xchg
sub
enter
test
inc
fs
mov
outsl
out
push
pop
imul
push
data16
out
xchg
and
xor
aam
inc
mov
inc
push
popf
in
imul
jb
pop
and
ja
dec
mov
mov
jns
adc
mov
lock
mov
rclb
sbb
mov
cmpsl
enter
imul
movsl
xchg
aas
bnd
mov
cli
jge
cltd
mov
inc
fsubl
pop
pop
ja
add
roll
in
loope
or
mov
aaa
push
fs
jp
pop
sub
mov
or
jbe
mov
mov
mov
icebp
int3
mov
push
fs
insb
lea
mov
popa
jb
push
icebp
inc
push
dec
ret
out
push
es
mov
sahf
cltd
fadd
enter
jo
xorb
or
mov
jmp
push
adc
repnz
xchg
js
and
xchg
cmpsl
dec
push
mov
mov
pop
in
movnti
mov
insb
test
mov
sub
pop
sbb
popa
mov
or
push
decb
shl
hlt
pop
adc
dec
mov
xchg
mov
leave
cli
adc
fs
jns
subl
jne
fucomi
mov
push
pop
movsl
js
je
cltd
fiadds
dec
hlt
adc
mulb
aad
dec
xchg
lods
pop
sbb
mov
pop
jb
mov
dec
shll
mulb
or
add
dec
inc
xchg
fidivrl
ret
sbb
xchg
imul
enter
add
lds
imul
jp
sub
jmp
loopne
mov
mov
sbb
fiadds
add
adc
clc
aad
dec
mov
adc
loope
fs
sub
into
or
fisubs
mov
adc
inc
in
fiaddl
jl
mov
mov
in
roll
shlb
insl
jnp
js
xchg
fmull
sub
jle
jl
xor
mov
pop
xor
sbb
or
dec
mov
cmp
lret
imul
jo
jge
aas
pop
fcoms
mov
push
sub
cs
ja
loope
lock
mov
cmp
sti
mov
cmp
sbbb
sbb
dec
jmp
cmpsb
pop
rol
test
pushf
mov
push
gs
out
mov
in
and
jge
push
outsl
jo
push
aaa
daa
jnp
lret
stos
aam
fs
dec
push
aas
pop
cmp
std
mov
cwtl
sub
ds
cs
ffreep
dec
imul
sbb
cmp
stos
jb
jge
or
pushf
les
or
push
data16
scas
pop
ja
push
adc
fstpl
sub
xor
fwait
pop
pushl
jbe
filds
pop
dec
hlt
xchg
and
add
pop
sbb
push
xor
fimuls
dec
dec
mov
jne
cmp
loopne
pop
mov
std
xchg
cld
mov
cmpb
add
sub
ds
jae
fisttpl
iret
xor
cli
or
data16
cmp
xchg
fimull
fisubrs
mov
mov
mov
repz
bound
sub
pusha
jecxz
ds
mov
es
mov
sub
xchg
xor
lahf
aaa
add
cli
stc
xor
cmp
push
dec
sbb
xor
cmp
mov
fcoml
std
inc
dec
fs
imul
fwait
or
sbb
sub
pop
pop
lret
in
bsr
xchg
inc
and
cvtdq2ps
mov
xchg
mov
jae
subl
out
shlb
xor
out
xor
adc
in
pop
loop
pop
xor
mov
das
sbb
imul
jno
sbb
mov
jbe
bound
fldt
leave
lea
rol
pop
jns
mov
push
adc
loopne
fmuls
xor
into
out
xchg
mov
sti
push
daa
add
rolb
aaa
jge
les
aam
xchg
andl
jecxz
sbb
push
aaa
in
cmpsb
and
std
out
mov
and
add
cmc
arpl
lock
xor
int3
adc
ds
push
cmc
inc
les
sbb
inc
xchg
cmp
std
fucomip
xchg
stos
pslld
pop
sbb
loopne
repnz
mov
call
push
xchg
push
mov
inc
pop
popa
cmpsb
les
incl
mov
aas
sti
or
ljmp
cld
pop
mov
pop
pop
bound
stc
aam
iret
push
and
mov
or
adc
aaa
dec
out
sbb
cmp
inc
mov
aam
xlat
mov
imul
xchg
jae
sbb
cmp
stc
pop
mov
loope
loop
pop
xchg
lods
pop
incb
xor
and
iret
and
cwtl
push
mov
lods
jge
xor
push
jno
xor
mov
mov
popa
xchg
repz
sub
dec
popf
data16
iret
or
das
pop
cwtl
dec
mov
or
addr16
xor
lods
iret
xlat
and
imul
and
jmp
mov
dec
cmp
in
pop
xchg
or
in
test
mov
mov
xor
adc
das
mov
imul
mov
sbb
pop
mov
stos
inc
push
push
aam
nop
fidivrs
adc
je
sub
adc
dec
inc
ret
xchg
sbb
call
loopne
outsl
or
push
lea
sbb
frstor
jge
aad
mov
idivb
jb
pop
int
inc
mov
mov
aaa
mov
adc
cwtl
and
lahf
out
imul
inc
xor
int3
ret
add
pop
or
and
icebp
in
stc
std
aaa
mov
lcall
add
cs
push
int3
xlat
clc
outsl
sub
ds
cmc
cmp
das
dec
out
inc
pushf
jge
pop
lods
in
pop
ljmp
add
xor
jge
gs
add
ja,pn
sbb
or
mov
push
ret
enter
cmp
mov
ficompl
gs
ja
jno
stos
pop
int
sub
cmpb
sub
loopne
sbb
idiv
stos
insb
pop
cmp
xchg
iret
dec
lahf
inc
adc
mul
out
fwait
sub
push
rcrl
fs
mov
imul
sahf
ret
jmp
dec
int
bound
inc
divb
add
out
mov
out
xchg
fcoml
out
leave
int
sbb
andl
sub
xchg
shll
shr
push
imul
mov
out
sub
dec
pop
and
xlat
ret
inc
loope
mov
push
push
jno
pop
or
testl
add
scas
fwait
jge
clc
rorl
xchg
jne
fildl
rorb
xchg
mov
std
mov
loop
fs
out
mov
inc
mov
xchg
nop
mov
cmpsl
es
cmp
xor
cld
jge
adc
cmp
mov
cmc
add
les
test
xchg
inc
imull
jo
cmp
stos
cltd
or
and
jg
in
arpl
imul
inc
imul
shl
leave
lret
outsl
lahf
scas
jnp
mov
jnp
mov
loopne
push
test
adc
mov
in
jmp
jmp
xchg
sbb
je
sub
sbb
jae
xchg
out
jns
sub
jmp
xchg
dec
dec
insl
bound
sub
clc
jge
insl
add
jbe
loop
ret
cmpsl
repz
dec
sarb
jge
jo
add
add
pop
lahf
jg
subl
dec
and
push
stc
loop
pusha
jle
add
mov
ja
mov
mov
xchg
xchg
and
jae
push
and
dec
push
pop
xor
cmp
mov
fcomp
pushf
cmp
jle
and
je
int
xchg
jl
add
inc
sbb
sbb
jge
addr16
dec
repz
pushf
sahf
xchg
push
js
push
iret
push
mulb
bound
xchg
sbbl
pop
dec
xchg
cmp
xchg
stc
inc
imul
xchg
bound
dec
push
out
adcl
adcl
clc
push
arpl
mov
sbb
je
cmp
ljmp
jo
sub
pop
popa
cmp
adc
mov
pop
push
push
fs
daa
fildll
push
cmpb
stc
aaa
jge
shlb
sti
jge
push
cltd
cmp
and
stos
dec
cmpsl
notl
add
push
sbb
das
cmpl
dec
aas
pusha
outsb
leave
int3
int
inc
ret
or
mov
pop
and
jg
push
test
lahf
jbe
lahf
dec
sub
push
imul
sbb
push
pop
pushf
stos
push
xchg
push
cmpsl
lods
orl
sub
imul
push
push
add
cmc
pushf
aas
mov
lret
in
test
and
push
lret
adcb
xchg
inc
addr16
jne
movsl
fs
lods
push
cld
out
sbb
and
hlt
push
mov
icebp
xor
mov
pop
cmp
pop
fnstenv
mov
rorb
shlb
cmp
rcl
pop
sbb
jnp
cs
inc
and
jne
out
pop
es
lcall
out
insl
icebp
sub
std
xchg
int
imul
cmp
and
sbb
test
xor
pop
xor
loope,pt
pop
aam
rolb
es
cmp
jo
fmull
faddp
adc
sarl
sbb
mov
xor
scas
ds
add
ss
mov
xor
push
pop
pop
cltd
inc
roll
cwtl
shr
imul
inc
stos
and
adcb
and
jle
mov
nop
pop
or
call
jbe
sub
aad
cmp
scas
rcll
lods
jg
imul
lret
in
inc
and
and
fbstp
jg
sbb
test
mov
mov
mov
dec
cmpsl
jp
clc
lret
cmp
pusha
popl
scas
ds
add
arpl
mov
ds
dec
mov
xor
shll
pop
mov
loopne
add
rorb
lds
push
mov
fs
cwtl
dec
add
or
jnp
sbb
out
and
jno
xor
test
stc
push
cmpsb
imul
repz
mov
xor
xchg
sub
into
or
les
es
sbb
mov
std
dec
mov
pop
pop
push
into
pop
pop
add
or
push
rorb
les
imul
lock
je
xor
sub
andl
cmc
mov
xchg
pop
sahf
out
test
adc
lods
aaa
xchg
jle
mov
jg
mov
repnz
pop
fcompl
inc
icebp
jb
test
mov
adcl
fstpl
movsl
shrl
sbb
push
popa
loope
and
sub
jecxz
or
xor
fisubl
fcomps
loope
inc
pop
pop
push
adc
int
in
jns
pop
jnp
cmp
xchg
xcrypt-ctr
cmpsl
test
jl
add
mull
or
js
ret
fwait
mov
in
or
mov
inc
mov
pushl
repnz
adc
and
arpl
popf
jbe
mov
lcall
stos
data16
jl
inc
lods
divl
push
sub
lock
data16
mov
adc
inc
jno
cli
lea
in
dec
jle
imul
faddl
and
cmpsl
or
fistpl
pop
fdivrp
push
test
xchg
clc
pop
and
out
adc
fidivrs
in
inc
sti
test
sub
xor
je
inc
shlb
cld
popa
or
imul
jne
mov
push
and
jmp
loopne
in
jg
shr
in
scas
repz
and
xor
mov
or
or
call
test
repz
bound
jb
add
dec
imul
out
roll
sub
bound
sbb
push
outsb
das
sub
push
fyl2xp1
loop
push
and
fcmovu
pop
ficomps
push
lock
xor
pmullw
icebp
pop
sarb
mov
sbb
adc
mov
imul
xchg
scas
inc
repz
inc
pop
cltd
dec
inc
pop
or
out
aad
inc
mov
mov
jns
xlat
dec
inc
lret
sar
jnp
popa
punpckhdq
adc
in
mov
push
jg
jmp
or
fnstsw
int3
leave
lahf
lds
adc
inc
and
sub
xchg
pop
jbe
repnz
mov
mov
mov
aad
out
mov
mov
es
pop
bound
out
mov
shll
mov
int3
lcall
repz
cwtl
xor
push
stos
mov
sub
shl
xor
ret
sti
and
mov
sbb
aas
cmp
int
mov
out
stos
add
mov
jnp
push
pop
jns
mov
xor
call
fistps
mov
mov
mov
and
push
or
les
jl
les
sub
shrb
push
and
xor
push
jecxz
clc
xor
call
mov
das
aam
sbb
pop
fwait
arpl
out
xchg
xor
test
fwait
jne
lcall
xor
inc
pop
sahf
aaa
lahf
push
out
push
leave
popa
jp
push
out
dec
inc
sub
push
jp
xchg
dec
xchg
into
bound
xlat
aas
sub
adc
sub
rcl
inc
jo
call
aad
roll
scas
dec
nop
jb
das
cmp
std
mov
jge
pop
mov
xchg
sbb
add
push
stos
stc
enter
shll
test
jns
data16
out
imull
jp
cmpl
inc
ret
test
sbb
hlt
ljmp
test
pop
insl
xor
ror
and
loop
and
icebp
cli
mov
and
jno
lahf
dec
mov
hlt
sbb
ds
cld
fcompl
or
insb
jp
in
cli
mov
and
adc
mov
push
stc
jo
dec
or
push
std
std
fdivl
jno
pop
das
inc
pop
xor
arpl
mov
cwtl
mov
scas
cs
cli
movsl
movsb
mov
sbbl
push
jb
or
sub
out
pushf
mov
insl
add
and
enter
fwait
push
imul
shll
shl
mov
stos
std
fildl
inc
adc
lock
fistl
mov
xchg
xchg
and
push
dec
imul
cmpb
xlat
sbb
inc
sbb
sbb
xor
bound
sti
mov
outsb
add
adc
cmpsb
sub
mov
pushf
mov
insl
mov
std
iret
mov
jle
nop
xchg
aas
mov
in
iret
xchg
jg
jmp
xchg
add
lock
mov
cmpl
aaa
loope
popf
jge
sbb
dec
mov
outsl
cli
push
mov
imul
xor
cmp
mov
ds
inc
cmp
cmp
movsb
mov
cmpsl
jnp
xchg
mov
addl
test
push
mov
adc
cmp
mov
loop
cmpsl
or
sti
push
jl
or
inc
dec
mov
loope
mov
sbb
jg
jg
dec
sbb
test
cs
xchg
push
in
sub
outsl
ja
cmc
cmpsb
idivb
adc
aaa
mov
std
push
int
outsl
fcmovbe
in
and
mov
das
jp
les
mov
sub
mov
cs
inc
sub
nop
leave
and
jae
xchg
into
jns
sbb
push
cmpsb
sbb
cmpsl
pop
pop
mov
out
push
jmp
daa
dec
lahf
clc
out
outsl
fmuls
sub
xor
mov
pop
cmp
pop
xchg
mov
inc
lret
push
ja
popf
xchg
and
inc
inc
fistpl
das
cmp
data16
and
or
adc
pop
ret
cld
mov
inc
subb
out
inc
ret
jle
xor
mov
es
sbb
push
pushf
pop
rcrb
std
push
je
pop
cmp
mov
push
ds
sbb
leave
dec
push
mov
cmp
mov
dec
enter
xchg
jne
pop
sub
jne
ss
bound
imul
xchg
cltd
mov
sub
pop
xchg
cmpsl
imul
pop
mov
popa
inc
in
pop
mov
pop
pop
pop
cmp
pop
mov
gs
push
mov
rcll
movd
inc
or
xor
mov
popf
scas
stos
jnp
mov
scas
xchg
add
jge
mov
jb
inc
push
and
mov
pusha
push
cli
push
push
sbb
sub
pushf
imul
xor
repz
push
out
sbb
cltd
lock
pop
loope
cmc
pusha
pop
mov
inc
jns
aam
mov
fwait
push
enter
mov
arpl
xchg
inc
fdiv
dec
std
jns
out
test
xchg
shl
lods
or
jbe
add
sub
je
subl
ds
insb
inc
pop
sub
cs
call
call
dec
pop
push
push
mov
and
dec
dec
cld
out
popa
call
fucom
movsl
push
mov
jbe
pop
out
cmpsl
sahf
hlt
std
leave
es
stc
test
mov
movsb
inc
div
es
push
out
dec
stc
out
cmp
insb
test
cwtl
ja
lock
inc
jbe
pop
push
xor
lock
rcrl
outsb
pop
and
std
add
push
inc
fdivrs
mov
cmpsb
mov
imul
test
test
inc
xchg
mov
sub
rclb
mov
and
loopne
ds
pusha
outsl
pusha
mov
add
or
fdivs
imul
dec
jge
or
push
pop
shr
mov
sub
scas
xchg
xchg
pop
repnz
mov
in
xchg
or
clc
xchg
mov
sbb
and
in
xchg
and
pop
aas
inc
inc
in
mov
xchg
mov
jg
jmp
mov
sbb
repz
ja
dec
cmp
test
aam
xlat
roll
sbb
aaa
xchg
jmp
push
inc
mov
ret
dec
in
jb
idivl
mov
jae
cmc
jo
pop
mov
xchg
or
ret
push
gs
je
out
inc
imul
iret
jecxz
leave
and
push
mov
cli
insb
sub
mov
xchg
cwtl
int
jo
fs
mov
shlb
and
mov
jp
std
xor
push
lcall
xchg
jo
data16
inc
push
cmpsb
or
shll
leave
pop
lds
mov
addr16
push
xor
int
dec
movsl
loopne
test
jb
dec
fwait
rclb
gs
stos
adc
jmp
dec
push
jae
xor
sbb
aam
cltd
notb
mov
push
inc
fidivrs
sub
aad
mov
push
dec
popf
add
imull
ja
xchg
loop
mov
mov
cmp
iret
aad
add
jg
mov
shr
aaa
in
cli
cmc
lahf
movsb
mov
int3
cld
and
in
fnstcw
or
iret
ja
sub
pop
jne
mov
int3
fidivrl
lods
rol
mov
inc
aam
mov
ret
sub
mov
and
test
pop
cmpsb
inc
int
xor
fcmovu
mov
fcom
aad
rolb
pop
clc
repnz
inc
mov
lock
popf
dec
mov
push
lret
cmp
ljmp
push
movsl
adc
mov
mov
lret
cmp
add
jg
push
xchg
dec
andnps
push
pop
push
outsb
loopne
iret
pop
andl
xchg
and
xchg
sbb
sbb
push
jecxz
aam
rolb
in
test
insb
fldl2e
pop
xchg
sbb
jecxz
xor
lahf
dec
xlat
and
sbb
dec
mov
push
dec
daa
mov
push
xchg
dec
fwait
xor
inc
and
sbb
lea
ss
or
push
lds
mov
in
fsub
lcall
test
xor
lcall
add
push
sarb
xchg
dec
sbb
mov
mov
or
xor
pop
out
cmp
cmp
adc
shrl
aam
scas
xchg
pop
xchg
add
jecxz
pop
out
faddl
stos
fcomps
sahf
xchg
mov
les
cmp
lods
mov
insl
popa
or
adc
mov
idivl
mov
xchg
jp
dec
mov
inc
test
es
test
gs
insl
sub
movsl
int3
jb
xchg
popl
xor
or
inc
in
push
adc
ljmp
push
mov
pop
adc
cmpb
jl
mov
fwait
imul
aaa
mov
mov
xchg
mov
sub
and
adc
clc
xchg
ss
lods
aad
pushf
jae
aad
in
lds
stc
sbb
ja
cmp
pop
jmp
push
dec
sub
std
out
or
outsb
push
sbb
mov
and
test
scas
add
call
cmp
xchg
pop
mov
jle
insb
imul
testb
cmpl
sbb
mov
jmp
sbb
or
pop
inc
out
push
adc
mov
sub
jnp
jns
mov
int3
cltd
out
add
shll
push
xor
push
sarl
sub
outsl
cld
sub
into
loopne
lds
dec
add
sub
scas
pop
sbb
inc
das
scas
xchg
mov
insb
pop
and
xor
dec
cmp
dec
aam
jp
sub
scas
or
aas
aad
lods
fildl
out
pop
pop
inc
adc
mov
or
add
push
cmp
outsb
jbe
outsl
push
out
out
or
imul
adc
xor
xchg
mov
addr16
xor
fcmovbe
dec
mov
shrb
xchg
xor
cmp
inc
jb
psrld
loope
inc
shl
divl
adc
idivl
xchg
xchg
ret
push
pop
bound
jnp
xchg
out
ret
imul
and
imull
rclb
cmp
jge
repz
or
mov
push
in
fsubrl
lcall
adc
cmp
fisubs
add
or
push
dec
cli
into
fimull
imul
jecxz
in
mov
sbb
fistpll
je
jb
or
lods
test
push
xchg
out
stos
lcall
xchg
lds
frstor
out
adc
fldcw
shll
imul
pop
xchg
movsl
adc
mov
fcmovnbe
dec
mov
popf
mov
or
xchg
xchg
xchg
mov
pop
xchg
shl
xchg
stos
jge
and
notb
pushf
insb
mov
mov
and
mov
mov
dec
sbb
jmp
jnp
xchg
mov
jo
inc
insl
dec
and
mov
add
and
jbe
cmp
sbb
inc
push
lret
mov
stos
inc
shll
nop
sahf
loope
pop
mov
mov
push
repz
in
cwtl
movsl
pop
and
xchg
xor
lret
jecxz
mov
inc
xor
jno
fmuls
adc
stos
into
mov
mov
and
pop
inc
faddl
das
and
or
pop
cmp
jno
aas
rcrb
in
aaa
stc
push
insl
jg
jnp
mov
xor
mov
dec
lret
arpl
stos
mov
pop
jg
pop
mov
add
out
fucomip
jecxz
hlt
test
icebp
or
push
mov
aam
inc
repz
xor
shlb
mov
inc
fwait
and
push
lahf
leave
sbb
pop
and
and
fcom
daa
in
sti
xchg
nop
push
mov
mov
jmp
xchg
jg
xlat
dec
inc
adc
mov
imul
mov
call
cltd
rolb
insb
test
sbb
into
fs
pop
into
or
movsb
jge
out
or
xor
mov
andl
aas
clc
cwtl
ja
xchg
icebp
lods
das
and
mov
xchg
cs
mov
add
push
inc
cs
push
ss
int
daa
jmp
adc
jecxz
lahf
xchg
shlb
iret
rol
mov
jne
mov
scas
mov
arpl
push
adc
imul
cmp
xor
insl
or
cltd
inc
push
sbb
add
test
call
xchg
and
sub
or
add
sbb
xchg
add
cmp
dec
jbe
add
mov
cmp
iret
dec
repz
jmp
jb
mov
fwait
xor
add
pop
mov
scas
sub
lcall
fnsave
or
cltd
lock
lods
mov
icebp
ja
jb
insb
ret
xchg
jecxz
enter
bound
jle
out
ja
inc
out
xchg
data16
mov
sub
test
mov
mov
or
inc
rcrb
mov
ds
add
and
sub
repz
jo
rolb
sub
xchg
pop
pop
pop
pop
pop
pop
shl
ss
or
sub
inc
ss
or
sub
ret
dec
mov
sahf
insb
les
pop
xchg
aad
scas
inc
rcl
xor
sub
add
and
jg
xchg
test
sub
and
imul
repz
loope
xchg
adc
cli
and
and
mov
xchg
xchg
adc
test
adc
inc
stc
loop
add
push
mov
test
xchg
inc
leave
push
add
inc
insb
movsl
leave
jg
mov
int3
mov
subb
call
jle
aas
lods
xchg
dec
mov
dec
aaa
pusha
rorl
cmp
fsubrs
cltd
ja
iret
fsts
push
push
les
scas
push
adc
mov
fldcw
pop
test
test
xchg
dec
inc
and
ret
lahf
adc
mov
inc
dec
and
mov
repnz
sarb
dec
iret
aas
cltd
movsb
jno
cld
and
fcmovbe
add
movsl
and
mov
rdpmc
cmpl
test
push
clc
out
inc
mov
push
push
or
int
push
adc
inc
push
jle
push
cmc
and
jo
xor
xchg
push
dec
fisttps
fstpl
xlat
sar
movsl
aam
les
inc
cmp
in
pop
lahf
xchg
cltd
push
cs
dec
outsl
repnz
roll
xchg
pop
jno
lods
fistpl
adc
push
cwtl
and
in
mov
xchg
mov
and
add
rsm
pop
loope
dec
adc
arpl
inc
dec
sbb
into
xor
test
aaa
stos
cwtl
and
pop
out
and
push
es
pop
or
mov
lret
sub
jnp
iret
push
loope
push
pop
jbe
push
pop
jae
iret
lcall
xchg
and
xchg
sbb
adc
mov
imul
mov
push
faddl
arpl
leave
inc
jb
pop
mov
push
inc
leave
mov
mov
dec
push
repnz
ds
test
xor
icebp
cmp
xchg
dec
fsubrs
cmp
les
test
out
addr16
test
fidivs
mov
orl
ss
jg
jbe
mov
xor
inc
insb
int3
outsb
push
lahf
lock
cs
mov
push
jp
push
xor
fld1
pop
adc
lods
mov
gs
mov
pusha
push
adc
out
push
sbb
mov
fists
out
dec
clc
sub
jmp
addl
mov
leave
mov
push
mov
xchg
add
shr
inc
xchg
mov
lods
jle
mov
mov
cmpsl
loope
movsb
mov
arpl
lahf
push
insl
jg
call
arpl
adc
adc
sti
dec
and
les
cltd
out
push
xchg
aas
cmp
fisubrs
arpl
push
shll
xchg
ret
movsb
mov
es
aad
fcmovnu
lahf
push
mov
push
inc
push
pop
aaa
jle
shll
repz
pop
int
stos
or
mov
adc
dec
pop
or
sub
cwtl
cmovle
outsb
jb
out
mov
mov
mov
mov
nop
and
fldenv
xchg
mov
inc
jecxz
icebp
ret
xorb
sub
pop
mov
jge
hlt
sbb
sbb
inc
fidivl
stos
xor
iret
stc
pushl
and
adc
lock
sub
push
xchg
arpl
push
stos
shl
pushf
call
xor
fistps
inc
packuswb
ss
jnp
inc
out
pop
mov
rorb
push
clc
xchg
cli
sub
out
push
cld
pusha
cwtl
mov
jnp
sub
popa
sbb
add
pop
out
cwtl
cmp
xchg
pop
in
popl
xchg
test
lods
nop
inc
outsl
clc
cmp
scas
push
or
insb
hlt
xor
fstpt
push
jb
sub
out
fidivl
aas
sub
pusha
andb
mov
pop
fadds
push
adc
nop
or
aaa
rolb
push
leave
xchg
jge
push
jmp
mov
test
inc
jmp
mov
pavgw
xor
movups
into
mov
gs
push
adc
test
dec
dec
fldz
xor
sbb
mov
inc
sub
out
mov
aaa
aaa
jg
fidivl
scas
gs
xchg
dec
js
add
xchg
imul
cmc
outsb
adc
sbb
ss
xchg
stc
mov
cld
mov
addl
ficoml
cmpsb
in
pop
sbb
cltd
mov
mov
stc
subb
lahf
lahf
pop
out
adc
lods
or
into
adc
jp
out
sbb
mov
mov
fmuls
fsubrs
cld
cld
addl
cltd
pop
mov
or
nop
cli
pop
dec
andl
aam
pushf
out
jo
and
jbe
sbb
out
cmpsb
adc
mov
pushf
jecxz
mov
ret
aad
adc
pop
mov
ja
adc
cwtl
sub
pop
adc
sarb
mulb
pop
fwait
and
mov
xor
icebp
adc
in
popa
fsubr
repz
enter
sub
movsb
pop
mov
add
dec
inc
jo
xor
jecxz
jge
gs
push
mov
rorl
repnz
lret
lock
push
xchg
test
jl
cmp
leave
lahf
cld
inc
mov
pop
pop
iret
mov
jg
std
mov
loop
mov
pusha
fstpl
into
cld
lds
out
cld
ror
jne
adc
pop
rcrl
mov
rorl
cmc
lea
fistpll
negl
xor
cltd
push
xor
nop
bound
xor
popl
cmp
roll
adc
fsts
fdiv
xchg
std
scas
out
adc
mov
rolb
pushf
sbb
sub
fistpll
lea
dec
inc
aad
in
aad
popf
dec
adc
ljmp
xor
xchg
cmpsb
push
sbb
pop
fsubl
cs
in
jmp
sub
or
nop
insb
cmp
xor
mov
test
nop/reserved
and
push
je
in
jae
sub
sbb
sub
xchg
out
sbb
sub
movsb
mov
ljmp
loope
in
or
loopne
stc
mov
pop
add
fistps
and
fmulp
imul
and
sbb
popf
jg
and
xchg
sbb
push
push
xchg
cld
shll
sub
pop
jl
cmp
lea
jl
sub
push
fidivrs
cwtl
jae
mov
mov
loopne
mov
pop
inc
push
test
mov
jecxz
idivl
cs
add
or
out
push
movb
aas
scas
fstpt
pop
std
inc
loope
out
jl
fnstsw
jns
jne
push
pusha
test
jo
inc
and
mov
sbb
jno
ja
inc
pushf
mov
and
push
inc
inc
jae
xor
sti
fsubp
xchg
cli
notb
cld
adc
jmp
movsb
inc
pop
adc
stos
fstps
sub
fldt
insb
out
lret
shl
outsb
arpl
fcmove
adc
fisubl
imul
imul
ljmp
jmp
scas
cmc
pop
push
mov
cmp
loop
and
mov
clc
mov
ss
inc
jb
adc
aad
fcomps
xchg
fadds
gs
movsl
js
xor
sub
mov
pop
cmp
repz
sub
xor
mov
call
pop
ja
lret
cmp
aas
lock
jp
xchg
jo
cmpsb
jne
es
pushf
xchg
add
ret
sbb
std
sbb
xchg
mov
sub
mov
mov
jb
add
xchg
aaa
int3
mov
gs
sub
ret
adc
mov
ljmp
add
adc
push
addr16
adc
stos
inc
mov
movsl
xchg
sub
sbb
nop
test
cli
pop
sbb
insb
push
cmp
pop
test
push
js
ret
and
pop
stos
mov
jnp
mov
dec
stos
outsb
ljmp
or
fldenv
frstor
inc
and
fidivl
aad
and
stos
dec
insb
imul
je
int
sbb
xor
or
or
repz
in
movsl
xchg
in
mov
mov
mov
mov
roll
divl
hlt
iret
ja,pn
inc
js
stos
xchg
jge
stc
fcomps
mov
push
push
push
loop
jne
adc
ljmp
fstpt
push
xor
js
lods
pop
rcll
pushf
xchg
loop
jmp
and
sti
push
xchg
scas
mov
mov
sub
xlat
mov
push
test
aaa
sbb
clc
les
dec
or
mov
lret
aam
sbb
mov
cmp
mov
mov
inc
icebp
jg
ljmp
movsb
movsb
pop
lret
fwait
xor
es
inc
xor
jmp
inc
dec
das
cmp
sub
jmp
into
mov
push
adc
movaps
pop
push
addr16
nop
add
xor
cmp
mov
mov
adc
pusha
inc
in
cmp
movsl
pop
cmpsb
fsts
enter
adc
int3
and
js
sbb
inc
jecxz
or
out
in
outsl
adc
pop
jp
add
insb
pusha
or
sbb
pushl
negb
dec
scas
ret
xor
xor
pop
xchg
dec
push
fisubrs
push
aaa
pop
push
add
movsb
mov
rclb
push
mov
mov
enter
in
mov
mov
popa
push
inc
sub
out
inc
xchg
push
add
xor
or
cs
adc
mov
enter
test
dec
iret
xchg
outsb
dec
inc
adc
pop
mov
dec
jbe
pop
scas
mov
rorl
xchg
xor
fstpl
dec
test
fstpt
je
jp
lds
pop
xchg
imul
xchg
mov
adc
mov
push
in
mov
push
lds
cmp
add
add
pop
jne
rcr
aam
rcrb
pop
sbb
divl
test
or
sub
jle
test
data16
xchg
imul
dec
xchg
jnp
fnstsw
mov
sub
sub
mov
inc
sbb
lods
mov
dec
out
ss
mov
fwait
outsb
aam
or
adc
xchg
dec
adc
fldenv
xchg
icebp
add
dec
test
push
jmp
mov
mov
test
sarl
sub
jns
lods
movsb
aad
mov
ljmp
pop
addr16
jne
stos
add
jmp
pop
xor
adc
je
xor
push
inc
sahf
or
fists
sub
out
insl
mov
fnsave
mov
jne
hlt
inc
xor
push
and
push
xorl
jle
out
test
add
adc
cltd
iret
inc
sahf
divl
inc
push
orl
xor
scas
inc
sbb
push
mov
lds
sti
out
jmp
cmpsb
mov
daa
sub
sbb
in
push
in
xchg
packuswb
outsl
ret
jl
scas
cld
hlt
jle
pop
test
scas
fwait
pop
sar
and
pop
adc
push
jl
nop
xchg
and
fucom
add
repz
pop
pop
xor
cli
jle
mov
add
dec
call
shll
pop
pop
cmp
inc
loope
mov
mov
aaa
mov
push
xor
add
fidivrs
aam
outsb
pop
popf
jg
cld
jp
fisttpll
sub
push
popl
push
repz
ljmp
and
outsl
in
sbb
pop
loop
rolb
dec
cmp
mov
sub
bound
push
hlt
add
out
iret
sub
fcompl
lods
fildl
nop
int3
mov
bound
ds
jae
adc
mov
adc
pop
push
lret
dec
xchg
aad
lock
cltd
mov
cmpsl
mov
mov
add
aad
mov
pop
imul
es
iret
push
in
push
mov
jle
sub
or
pop
lcall
outsb
fiadds
lock
mov
push
mov
sbb
mov
and
into
lods
xchg
adc
out
cmp
mov
or
adc
mov
xor
dec
mov
je
xchg
xchg
and
add
stos
pop
push
cs
push
std
xor
jne
pop
insb
mov
dec
sub
inc
push
and
and
sbb
test
sub
push
sahf
aad
cmc
push
out
pop
lods
stc
push
orb
push
jno
mul
xchg
push
cmpsb
es
mov
mov
insl
pop
test
dec
cmp
shlb
das
lock
xor
js
divb
mov
lea
cwtl
push
cmp
push
mov
cmp
lock
cltd
outsb
pop
jnp
xchg
stos
xor
es
cmp
pop
cmp
cmp
add
xor
test
jl
jns
into
xchg
icebp
xor
mov
test
lret
mov
in
movq
sub
add
pop
mov
pop
sbb
stos
fwait
xor
lods
xchg
loope
and
fdiv
std
aad
inc
out
inc
mov
cli
jg
xlat
sbb
roll
jl
sti
jg
push
movsl
mov
mov
test
mov
xor
ljmp
dec
mov
push
dec
add
cld
cli
daa
fisttpll
pop
and
int
aam
les
pop
push
adc
pop
insb
movsl
or
fwait
ss
gs
push
or
popf
rcrl
mov
lahf
test
clc
fsubrs
ljmp
lock
lahf
mov
mov
repz
rcrb
push
dec
push
jg
addps
aad
cmp
shl
sub
aas
xchg
sub
pop
pushf
jge
push
pop
jmp
push
jle
mov
pop
aam
xchg
outsb
test
sub
jecxz
and
out
shl
mov
in
sbb
pop
mov
xor
push
fld
cwtl
cmpsb
cltd
inc
jecxz
sbb
idiv
or
push
jp
add
ret
setle
imul
ret
cld
data16
push
enter
push
popf
int3
iret
in
adc
jno
jae
testb
mov
xchg
cmc
dec
sub
or
popa
jmp
mov
xor
mov
cmp
mov
pop
push
in
mov
jle
push
mov
pushf
mov
les
pop
out
inc
fs
mov
sub
dec
orl
and
cli
orb
xchg
add
lahf
sub
dec
mov
push
loop
shl
xor
lods
incl
pop
mov
fadd
icebp
popf
mov
mov
push
or
shll
and
pop
add
cmp
stos
loopne
dec
jecxz
std
cmp
test
pop
pop
sbb
js
and
rorb
cmp
rclb
cwtl
jno
jl
jle
repnz
push
bound
jle
mov
push
arpl
cmp
or
insl
xchg
pop
mov
ret
or
lahf
insl
insb
mov
xchg
xchg
mov
fxch
mov
or
jns
orb
sub
mov
dec
jne
jns
mov
pop
aam
sub
pop
test
loopne
out
sbb
cli
sub
push
popa
cmp
ss
push
int3
stos
pop
push
pop
arpl
sub
pop
xlat
dec
sbb
or
sub
outsb
fxtract
jo
xchg
loopw
sub
mov
push
pushf
cmp
sbb
mov
cmp
cmp
ret
cmpsb
pop
idivl
movsb
lret
add
ret
or
cld
pushf
lea
cmp
cmpsl
roll
mov
mov
inc
xor
hlt
add
imul
adc
jl
mov
sub
lods
sub
cltd
sbb
dec
inc
push
loop
mov
push
or
cmpb
out
mov
pop
roll
xchg
jno
lock
ret
mov
adc
loop
jmp
cmp
stos
jecxz
dec
or
and
mov
push
test
jmp
push
jg
xor
pop
push
mov
mov
mov
imul
subl
out
imul
xchg
enter
jne
pop
mov
aam
pop
push
incb
imul
mov
mov
subb
mov
and
ljmp
cmp
xor
sub
std
jmp
or
ss
aad
cwtl
inc
nop
inc
roll
test
cmc
ljmp
divb
inc
mov
xchg
jle
das
inc
mov
jnp
jae
adc
pop
adc
cs
mov
adc
push
sub
je
dec
popl
push
pop
arpl
sbb
jae
or
push
sbbl
and
arpl
cmp
inc
inc
aam
adc
xor
mov
sub
jp
cmc
sbb
or
pop
push
cmc
mov
mov
out
stos
mov
test
mov
pop
pop
iret
sbb
mov
cld
and
add
xchg
or
adc
ror
inc
xchg
pop
dec
ljmp
imul
xchg
sbb
push
cmpsl
add
dec
pop
add
pop
mov
fsubrs
add
add
rorl
lret
jne
xchg
mov
sub
add
and
sahf
cmp
loopne
xor
movsb
cmpsl
mov
mov
jb
mov
add
fsubl
ja
inc
dec
and
fstps
push
sbb
dec
mov
xchg
shll
gs
leave
sub
test
test
pusha
popf
mov
xor
cmp
mov
mov
les
pop
les
sub
mov
stos
adc
ret
and
aaa
inc
inc
adc
pushf
push
lret
shll
mov
and
addl
mov
dec
dec
sub
cmp
dec
adc
fsubrs
sub
xchg
sahf
xor
int3
mov
sti
rcr
mov
jecxz
jb
jbe
int3
ljmp
xchg
add
push
jp
and
xchg
xlat
fisubrs
cmp
fsubrs
and
add
clc
push
pop
xchg
loopne
sbb
mov
push
stc
cmp
imul
xchg
repz
adc
xchg
cmpsl
xor
repnz
jno
aad
xchg
push
push
or
mov
cltd
add
arpl
fld
ret
inc
decb
aas
dec
mov
enter
or
jecxz
mov
pop
pop
ds
ljmp
cmp
lods
out
mov
fstps
lods
stc
pop
out
sbb
mov
adc
neg
or
cmc
lret
jbe
in
cmc
popf
popa
push
orl
in
lea
test
adc
in
enter
cli
pop
mov
test
mov
dec
mov
push
bound
loopne
mov
and
in
pusha
sub
out
in
test
fildll
cmp
fs
inc
lret
aas
popf
xchg
cltd
daa
add
inc
imul
push
xor
dec
jp
fldl
xchg
jmp
pusha
stos
mov
int
xor
clc
cmp
and
fwait
pushf
sub
jmp
sbb
sbb
push
aam
pop
popf
jno
push
sti
add
mov
dec
dec
sub
jmp
add
enter
add
push
push
inc
pop
and
imull
xchg
insb
scas
incb
in
mov
jmp
loope
pop
sub
ljmp
mov
js
in
dec
je
dec
lods
and
test
outsl
add
loope
insb
hlt
fldcw
lret
jnp
loope
pop
jge
aas
mov
dec
bound
popa
push
loope
cmpsl
xlat
lods
pop
and
or
je
arpl
jl
sub
push
fdivs
outsl
mov
pop
pause
jmp
and
lock
frstor
add
pop
jae
jle
stc
push
aas
ja
sbb
dec
sub
mov
dec
js
pop
pop
jb
int
mov
cmp
push
dec
out
and
push
fisubs
mov
les
sbb
ret
outsl
dec
cli
test
add
mov
cmp
cmpsb
mov
mov
sub
pop
mov
mov
dec
fstl
sub
into
dec
aaa
das
or
mov
xor
or
pop
cmp
insb
rol
stos
cmp
aas
mov
fstpl
sti
cmpb
push
xor
lret
mov
pop
clc
cmp
xchg
das
das
jp
jae
in
inc
jb
jmp
sub
or
adc
in
lret
sub
dec
lcall
repnz
mov
pop
jecxz
cmc
pop
fcmovne
inc
dec
clc
aaa
in
inc
out
lods
xchg
jecxz
cltd
loop
in
imul
and
test
mov
test
mov
pushf
jmp
imul
or
or
cld
lahf
jmp
in
mov
sub
pop
lods
popa
test
dec
cld
xor
repnz
mov
lods
mov
jmp
aas
out
xchg
es
nop
icebp
fiadds
outsb
push
outsl
cmpsb
and
mov
push
lret
pop
rcrb
pop
inc
outsb
out
test
repz
add
mov
inc
lods
dec
add
test
scas
cld
jge
jg
orl
xchg
push
push
lahf
les
dec
sar
cmp
xchg
ret
sub
add
add
into
in
arpl
mov
pop
test
sub
xchg
js
and
adc
leave
ja
fcoms
dec
dec
push
or
fwait
adc
mov
pop
and
sub
mov
out
lock
cmc
in
mov
hlt
js
adc
xchg
out
sub
fwait
js
cli
loop
fistps
daa
jg
scas
lods
inc
nop
movsl
stc
push
mov
ret
popf
xchg
repnz
pop
test
fcom
mov
push
enter
jle
jl
sahf
cmpl
movsb
lods
dec
and
aaa
hlt
sbb
jge
and
or
dec
and
push
mov
addr16
fidivrs
adc
and
or
inc
movsl
inc
push
fdivp
sti
add
insb
bound
cli
mov
jb
call
testl
repnz
outsl
sbb
mov
push
stos
sub
movsb
xchg
sub
push
fldcw
cmp
loope
aad
pop
jb
js
sbb
shrl
jb
shll
pop
jo
shrb
push
lretw
loope
or
jae
mov
or
stc
out
into
sti
cli
xor
mov
push
jb
sbb
xchg
pop
inc
popf
out
cmp
xchg
nop
and
js
repnz
jns
lea
fdiv
orl
repz
adc
adcl
cltd
sbb
xchg
mov
sbbb
int3
es
or
sbbb
ret
pushl
ja
xchg
or
or
jno
aam
das
ret
pop
notl
test
cli
dec
int
push
leave
inc
dec
lock
and
or
idiv
dec
pop
aas
lcall
add
xchg
rolb
cmp
fnstcw
gs
es
push
das
mov
outsl
pop
aam
or
mul
xor
inc
inc
imul
mov
cmpb
in
mov
repnz
mov
pusha
pop
fdivp
nop
jno
fbld
loope
sahf
cmpb
xor
pop
arpl
cmp
dec
lcall
dec
in
es
add
xrelease
cmp
in
pop
jl
int3
cmpl
cli
cmp
xor
mov
push
adc
in
and
add
push
subl
loopne
enter
sbb
dec
fucomip
jp
je
lahf
cmp
es
dec
call
push
lret
out
push
cmp
push
fbld
mov
dec
xchg
inc
dec
xor
lods
outsl
pusha
rolb
pop
push
gs
ljmp
cmp
hlt
sub
push
repnz
data16
and
clc
jmp
push
or
push
inc
cwtl
call
mov
and
mov
mov
mov
cld
fs
js
jns
lock
aaa
stos
and
adcb
adc
lahf
out
mov
inc
test
jns
adc
cmpsl
scas
rcr
dec
or
stc
call
int
mov
push
ror
inc
je
jbe
test
add
cs
cmc
in
stc
lods
mov
sbb
jns
push
and
inc
iret
mov
mov
in
jle
sbbb
sbb
out
xchg
and
fucomi
fists
mov
sub
ljmp
push
enter
dec
push
orb
loope
shll
and
xchg
push
or
jg
sbb
sbb
pop
ja
cmpsb
popf
movsl
jge
or
adc
insb
test
rcll
testl
add
inc
icebp
and
fisttpl
pop
sub
movsl
mov
mov
daa
sbb
jp
mov
shrd
mov
nop
pushf
or
dec
hlt
and
mov
jo
fistpll
pop
je
les
inc
xchg
andb
inc
fs
sar
sbb
and
aad
dec
imul
repz
inc
mov
add
sub
lds
mov
clc
xchg
out
imul
push
xorb
lods
xchg
repz
dec
jmp
fcmovnbe
sbb
lea
or
js
in
repnz
adc
mov
dec
adc
xchg
mov
test
jl
jo
pusha
dec
cmpsb
sub
into
incl
inc
lret
out
sub
mov
sahf
int
les
lret
pop
add
sub
push
fstpt
and
loope
cmc
jae
jg
ja
sahf
cld
jne
in
xlat
mov
inc
lock
setnp
push
jge
cmp
pop
add
repnz
popa
sbb
stc
pop
into
mov
mov
jge
mov
pushf
inc
outsb
fnsave
and
push
mov
push
fsubs
cmp
cwtl
std
rolb
add
inc
mov
xchg
mov
repnz
xchg
push
stos
jb
fwait
mov
and
add
mov
mov
call
lea
xor
or
cs
aam
xor
movb
hlt
fdivl
push
jns
jae
test
sub
sbb
enter
loope
xor
xchg
outsl
pop
pop
daa
addr16
push
mov
pop
mov
xchg
negl
in
adc
pop
dec
loope
and
fcomip
mov
cmp
inc
insb
jne
jo
fwait
mov
popf
daa
ret
fcoml
fldcw
enter
popa
mul
inc
insb
scas
movsl
mov
or
popa
popf
add
out
imul
dec
inc
mov
sbbb
jbe
inc
fs
pop
fmull
jns
test
lahf
popf
mov
cmpb
or
ret
lds
rcrb
js
fmull
in
popa
push
push
push
inc
push
adc
sbb
arpl
into
andb
inc
jp
add
enter
cmp
dec
lock
mov
lea
add
push
out
pop
rorl
pop
popf
cmp
loope
push
pop
pop
or
out
clc
push
lods
and
adcb
cwtl
ljmp
jle
bound
adcl
and
jge
jl
insl
mov
jno
nop
push
xchg
sub
lea
push
jnp
or
cmpsl
jl
es
pusha
cmp
push
mov
sub
cmp
dec
or
sti
lahf
lret
aam
out
popa
push
cld
out
aas
and
ret
outsb
xchg
aad
mov
outsb
stc
dec
pusha
aad
push
pop
cmp
pop
mov
and
push
cmpsb
jmp
test
cmp
sub
ljmp
jae
repz
and
movsl
sahf
mov
repnz
jns
xchg
mov
pop
mov
test
es
je
mov
lcall
mov
aad
scas
mov
add
xor
mov
jge
shlb
dec
jo
lock
xchg
and
jecxz
movsl
cwtl
xor
jno
pop
push
add
and
test
xchg
fcoml
adc
jnp
jg
add
das
mov
in
jl
enter
sahf
loopne
push
add
mov
cmp
mov
jo
outsb
push
mov
mov
cltd
repnz
adc
mov
mov
pop
loope
xchg
and
dec
sub
push
cwtl
mov
data16
jmp
std
jae
mov
xchg
test
lods
scas
in
je
push
xor
sub
gs
enter
cmpsb
stos
add
jne
into
das
jns
xchg
dec
sub
or
lcall
imul
inc
sti
inc
inc
jmp
call
int
xor
sbb
add
add
in
inc
repz
dec
call
imul
mov
ror
jbe
fcoml
ljmp
cli
jbe
xor
sub
into
lret
cs
push
xor
xchg
data16
xchg
shrb
pop
dec
gs
lret
rcll
shrb
pop
call
adc
bnd
adc
push
ss
mov
test
outsl
lret
mov
imul
mov
mov
addr16
cmp
lods
ret
nopl
jns
in
pop
push
scas
adc
insl
cmp
test
mov
fnstenv
sub
shl
mov
mull
pop
sbb
pop
es
ljmp
add
xchg
dec
iret
add
lods
sbb
cmpsb
movsb
fcompl
mov
hlt
imul
aad
xchg
xchg
inc
adc
sti
cmpl
ret
test
and
popa
cmp
js
stos
mov
mov
outsb
xor
xor
shll
cmp
and
scas
mov
gs
ror
stos
data16
dec
xlat
mov
loope
aas
pop
test
lret
jns
jg
or
imul
ds
les
and
cmp
xor
loope
jmp
mov
and
xchg
sti
aad
inc
dec
mov
cmp
xor
ret
jae
enter
push
and
push
pop
adcb
arpl
loop
arpl
cld
sub
push
jnp
inc
clc
fldenv
jnp
pop
or
push
call
test
and
movd
dec
cmc
cmp
lret
cltd
sti
test
xchg
lahf
cmc
adc
popf
stos
outsb
push
jl
xchg
leave
mov
into
add
aaa
mov
adc
inc
fldt
or
loope
jae
jns
sbb
aam
imul
outsl
xor
pop
add
daa
jmp
xor
sti
jmp
inc
cmpsl
add
jbe
push
mov
stos
mov
repz
push
cmc
pop
pop
jge
std
ja
inc
sub
out
push
sub
inc
mov
push
and
ja
jmp
inc
aaa
scas
mov
and
xchg
jno
fstpl
sbb
aam
inc
stc
bound
jne
ds
mov
fcoms
adc
mov
and
mov
notl
js
mov
xor
push
dec
push
mov
sahf
out
ja
into
xor
loopne
mov
sbb
mov
movsb
mov
lret
and
sbb
jg
cmp
or
push
sti
sub
adc
ret
push
cmpsb
arpl
lret
inc
test
add
jmp
push
sbb
dec
mov
jmp
sub
jmp
jmp
outsl
mov
enter
sub
mov
adc
cwtl
sbb
decb
ds
xchg
mov
or
add
jl
mov
subl
sti
insb
push
lcall
insb
dec
sub
lret
jno
fcom
push
ret
into
incb
outsl
mov
add
movsl
movsb
sbbl
mov
add
inc
jmp
cmp
adc
xchg
in
sbb
push
int
out
loop
xchg
flds
fcmovnu
or
dec
mov
pop
subl
aad
and
mov
mov
add
stos
stos
pushf
adcl
mov
test
mov
pop
test
xchg
jp
xchg
sub
lock
mov
into
mov
loope
enter
aas
fdivr
jae
pop
pop
out
jmp
aam
in
ror
aam
in
rol
dec
or
jmp
out
lret
cmp
iret
inc
in
xor
popa
cmp
xor
mov
scas
ror
add
or
es
push
or
add
add
outsb
sub
or
mov
pop
jns
je
fistps
hlt
pop
jnp
jge
or
mov
mov
jg
aam
ret
jg
outsl
sub
inc
fistps
and
sub
mov
adcl
mov
jo
add
sub
and
or
lock
cs
mov
push
jne
mov
inc
roll
out
std
push
imul
mov
xlat
adc
cmp
jae
mov
jecxz
xor
mov
sbb
or
mov
jle
cwtl
sti
sbb
push
test
cmc
fwait
push
dec
scas
add
inc
lea
mov
imul
mov
cltd
jb
test
jne
jns
pusha
and
mov
or
or
and
jae
pop
mov
std
push
std
shl
mov
jecxz
popf
jmp
lods
mov
or
add
bound
addr16
clc
sbb
inc
push
mov
enter
dec
mov
jb
sub
iret
add
aad
lahf
jo
mov
movsb
pop
add
addr16
ret
cmp
out
cs
in
das
mov
adcb
or
and
push
loop
push
push
orb
xchg
xor
repz
mov
xlat
cli
mov
das
stos
pushf
or
mov
or
mov
jne
pop
out
call
leave
push
sbb
shl
lods
jne
or
jb
ljmp
adc
sbb
fists
pop
and
lahf
pop
iret
xchg
movsl
clc
negb
push
add
inc
sub
xor
jns
or
popa
mov
xchg
lods
pushf
ret
inc
lock
pop
sub
loope
push
mov
sahf
pop
shlb
adc
aam
lahf
enter
xlat
repz
jp
pushf
and
repnz
jne
repz
cmpsb
mov
adc
jb
cmp
popa
adc
in
lahf
clc
push
ljmp
dec
lret
fxch
sub
stc
xor
pusha
mov
pop
push
xlat
sub
call
daa
mov
add
scas
out
push
xchg
test
das
imul
shrb
stos
dec
out
push
mov
mov
cmp
dec
pop
call
cmp
jp
ficoml
pop
jae
fldl
sub
in
sub
rcrb
push
decb
and
out
pop
ss
test
add
jge
pop
in
inc
xor
mov
sbb
cmp
repz
jle
adc
out
inc
lcall
xlat
lret
bound
jae
into
rolb
pop
push
dec
in
int3
lods
inc
aaa
cmp
or
or
ljmp
iret
dec
ret
stc
scas
popf
jbe
and
mov
int
xchg
lds
xlat
push
pop
adc
mov
push
movsb
nop
fistl
mov
sub
out
call
adc
iret
and
out
push
stc
pop
cmpsb
fs
arpl
mov
pushf
add
orl
sub
and
repz
jb
sub
rolb
dec
cs
jno
adc
jne
xchg
lret
imul
enter
movsb
dec
shrb
dec
popa
xchg
mov
inc
mov
inc
cltd
push
xor
or
inc
clc
xor
mov
in
in
inc
xchg
out
xor
sbb
in
lahf
sbb
ror
xchg
xchg
bound
push
shll
push
jl
fmulp
imul
dec
mov
mov
xchg
notl
mov
popa
lods
mov
out
mov
pop
leave
cmp
lret
rolb
inc
call
or
or
push
fs
shlb
fwait
daa
pop
insl
in
mov
loopne
sar
mov
xchg
or
in
mov
xor
ret
js
notl
mov
push
push
out
add
loopne
sbb
idivb
js
adcl
sub
xor
xchg
test
and
xchg
sub
into
lret
sub
fisttpl
mov
out
push
sub
leave
shrl
imull
sbb
mov
push
sahf
es
stos
les
push
cmp
xor
pushf
fiadds
jno
and
lcall
xchg
stos
jmp
bound
addr16
inc
xor
mov
xor
xchg
pop
in
dec
cmp
add
stos
cli
pop
sbb
add
insb
ds
movsl
cmc
ljmpw
mov
sbb
das
aad
jbe
sahf
jb
dec
push
jo
xlat
mov
mov
loopne
mov
add
sub
fcoml
pop
movsl
jbe
dec
fwait
sbb
rcll
jo
add
mov
mov
lea
lods
pop
jle
orl
repz
push
dec
or
out
orb
push
addr16
mov
das
cmp
mov
out
cltd
clc
push
jp
insl
pop
xchg
and
insl
outsb
push
inc
cs
cmp
ds
push
jno
pop
cmpsl
fs
sbb
push
xorb
pop
cmpsb
aam
pop
aas
push
daa
sub
add
mov
insb
or
inc
push
outsb
fildl
jle
iret
pusha
mov
popl
or
movsl
mov
dec
pop
xchg
or
push
pop
cmp
mov
sub
imul
adc
enter
hlt
shrl
jne
movsl
dec
out
push
adcl
mov
dec
push
in
jp
inc
int
bound
ret
or
in
flds
les
add
mov
dec
add
fcomp
stc
sbb
mov
pushf
insb
adc
fcoms
repz
lret
xchg
test
jbe
mov
push
mov
sub
push
mov
cmp
adcl
stos
pop
sbb
jno
cmp
int3
ss
mov
nop
fdivl
mov
sbb
movl
roll
adcl
test
add
stos
mov
ret
pop
lds
dec
lret
icebp
and
arpl
xor
subb
inc
lock
mov
mov
cmpsb
jns
xor
ss
dec
adc
mov
clc
adc
cwtl
xor
push
add
adc
pop
lock
xchg
pushf
mov
js
aam
push
popf
pop
imul
repnz
inc
in
dec
xor
std
xor
jecxz
enter
cmpsl
sub
cmpb
nop
flds
in
cli
jmp
ss
cld
jo
insl
push
inc
les
push
aas
shll
push
push
sub
scas
push
in
fstl
lea
xchg
mov
movsl
push
jecxz
or
and
pop
push
shlb
or
rclb
repz
mov
cmp
pop
mov
roll
int
cmp
sti
divl
xchg
loop
push
leave
or
fcompl
clc
rcll
mov
out
lock
mov
popf
bound
adc
adc
sbb
push
bnd
xchg
xor
ret
sbb
push
ss
inc
aaa
cltd
fsubl
xor
jb
notl
cmc
ss
outsb
inc
int3
lea
mov
inc
add
sahf
push
data16
fcmovnu
dec
inc
and
mov
push
and
push
aaa
or
add
or
xchg
push
add
fimull
arpl
xor
int
pop
push
cmc
jo
mov
mov
cmc
xchg
cmpb
fs
into
push
jl
or
add
push
sub
adc
sbb
push
jmp
enter
out
or
movsb
mov
aas
inc
inc
js
mov
popf
aaa
scas
in
lret
in
popf
pop
sub
xor
popf
mov
cmp
or
vpshufbitqmb
jecxz
cwtl
mov
out
sbbb
xchg
add
pop
dec
cmpsl
mov
xor
cltd
imul
push
jb
imul
cmp
adc
fstps
jne
std
xchg
mov
fmuls
pop
std
push
mov
jo
adcb
inc
test
loop
mov
mov
stos
je
daa
adc
jmp
inc
sub
mov
es
fnstenv
sahf
pop
ds
lea
int3
das
fwait
jno
or
jmp
lret
mov
mov
jle
ret
je
jo
daa
lea
repnz
mov
and
sbb
sub
in
gs
lea
jne
cmp
adc
je
jmp
loop
xor
test
movsl
arpl
cmp
cmpsb
dec
xchg
in
outsb
cld
jmp
lret
leave
jmp
ds
into
mov
icebp
inc
sbb
dec
jo
out
cmp
jle
ficoml
aad
out
lock
xchg
popl
fisubs
sub
lret
xor
in
fdivrp
lret
xchg
sarb
dec
es
aad
fdivs
mov
or
hlt
rorl
mov
pusha
lahf
aam
psrld
xchg
sarb
add
leave
jmp
pop
adc
dec
mov
mov
jl
int3
es
inc
xor
test
add
push
xlat
cmc
push
pusha
mov
ljmp
lahf
fimull
and
ror
fmull
jg
add
imulb
mov
les
pop
lret
jo
imul
mov
addr16
lods
ds
inc
testb
and
mov
xlat
lods
push
jmp
cmp
outsb
dec
loop
and
jno
scas
add
xchg
pop
arpl
sahf
sahf
out
ret
clc
ret
inc
cmp
push
xlat
cmp
cs
fldl
dec
cmpsb
out
ljmp
mov
aaa
hlt
pop
pop
in
adc
dec
sbb
ss
stos
xchg
xchg
lea
mov
add
mov
shlb
lods
test
sub
subb
and
mov
ficoms
enter
mov
sbbl
jb
lods
pop
int3
adc
loope
aas
cmp
mov
jge
jbe
jmp
inc
add
jne
js
rcrb
cmp
and
int3
repnz
jecxz
xchg
bound
mov
into
sahf
les
cmp
adc
andl
lods
insb
sahf
out
inc
and
incl
add
mov
das
pop
test
cmp
decl
push
mov
shl
sub
inc
mov
add
scas
dec
ss
cmp
jl
out
jg
sub
insl
mov
adc
inc
mov
sbb
movsl
mov
dec
popf
ljmp
add
adc
inc
mov
cltd
mov
mov
pop
xor
jmp
push
les
inc
xchg
flds
loopne
mov
and
ljmp
add
dec
mov
roll
inc
xor
cmp
mov
enter
pop
and
negb
or
repnz
mov
pop
jbe
push
cli
xchg
and
iret
movsl
xlat
push
pop
adc
mov
test
je
mov
out
ret
adc
lods
stos
stos
mov
std
push
enter
mov
mov
shll
or
test
jno
sub
and
das
inc
sub
iret
and
aam
test
js
add
push
jp
mov
inc
ret
lea
loop
call
dec
insb
fstpt
xchg
les
cmp
cmpl
jecxz
add
mov
add
lahf
sub
pop
jnp
xchg
pop
mov
or
cmp
xor
cmp
sbb
mov
push
inc
jns
lea
mov
xorb
gs
lret
mov
dec
inc
cmp
pop
push
cmp
pop
sbb
inc
jae
adc
in
dec
scas
pusha
fwait
repnz
mov
adc
and
and
inc
jmp
ljmp
mov
cmp
aaa
inc
jl
ljmp
imul
xor
add
ficoml
aas
nop
adc
sub
cmc
int3
sub
sahf
cli
pop
clc
inc
ss
inc
pop
loop
sti
nop
mov
jns
add
or
mov
xchg
or
sbb
jmp
divb
data16
pop
mov
cli
fidivrl
xor
test
pop
jl
push
je
daa
cwtl
pop
pop
aad
dec
mov
xchg
inc
or
xchg
xor
jge
addb
push
enter
arpl
in
test
dec
in
sub
jb
jmp
inc
test
mov
push
fdivrl
int3
cmc
out
push
dec
lods
pop
stc
fstl
xchg
lea
xchg
call
push
cld
jae
int
mov
jmp
fcmovu
fistpl
enter
xchg
fisttpl
cwtl
sub
mov
jnp
movsb
mov
inc
daa
in
sbb
cmpsb
negb
rcr
sub
push
mov
inc
rol
add
or
push
fcomps
jmp
jp
out
or
jnp
ffree
mov
push
mov
arpl
mov
mov
xchg
bound
mov
enter
dec
and
adc
loop
cmp
mov
loopne
movsb
cltd
shll
dec
pusha
test
pop
ja
scas
push
or
jne
lods
stos
push
xor
push
mov
pop
push
xchg
sbbb
xchg
sub
jmp
and
xlat
lea
shr
ficomps
lret
jmp
leave
inc
imul
mov
inc
sar
jg
jecxz
pop
pop
jb
adc
or
aas
xchg
lea
mov
ret
jne
dec
fimuls
cwtl
dec
push
xor
mov
sub
mov
mov
push
dec
dec
mov
lods
popf
sahf
sbb
sbb
stc
mov
cwtl
lods
mov
shlb
imul
cld
add
sti
inc
cmp
loop
push
hlt
inc
inc
push
leave
mov
add
les
lret
pop
mov
sub
jb
xor
sbb
fsubp
sub
stos
cs
sbb
dec
xor
xchg
std
adc
into
push
jmp
popf
mov
xchg
or
aad
mov
pushf
mov
out
ret
out
pop
and
sbb
popa
test
sbb
xor
push
mov
lret
mov
xchg
sbb
xchg
imul
jae
decb
leave
adc
fisttps
push
out
test
jns
mov
imul
add
clc
fsubrl
and
aaa
jbe
dec
out
ds
mov
data16
nop
fimull
pop
cmp
loopne
ret
es
and
ret
hlt
test
or
shlb
mov
pop
out
cmpb
jnp
jge
lods
xchg
je
lods
jo
pushl
xor
xor
into
cwtl
into
jge
andb
xor
sub
push
xchg
inc
mov
fdivp
mov
xchg
dec
cli
mov
xchg
jo
dec
mov
frstor
lock
int
adc
inc
push
int
push
push
leave
sbb
imul
loop
test
mov
mov
out
dec
stc
add
dec
nop
sub
shlb
push
xchg
ljmp
rclb
iret
inc
push
dec
lcall
test
jmp
jecxz
pop
push
push
int
add
rcl
xchg
pop
pop
inc
test
pop
out
or
rcrl
dec
iret
shll
push
lods
out
int3
loopne
je
sahf
jle
daa
iret
inc
aad
ljmp
push
pop
lret
imul
rorl
fnsave
ljmp
mov
fwait
mov
xor
dec
push
mov
cmp
hlt
fsubs
mov
arpl
jne
xchg
es
enter
sti
pushf
daa
mov
inc
fwait
jp
sbb
push
push
std
mov
add
rolb
xor
xor
outsl
incb
adc
xchg
jg
cmp
ss
bound
pop
aaa
cltd
imul
shlb
add
or
jge
pop
mov
loope
scas
ja
dec
call
repnz
cld
add
inc
push
out
clc
or
hlt
test
inc
mov
mov
pop
fwait
movsl
iret
jae
daa
inc
xlat
push
xor
cmc
testb
movsb
out
sti
inc
push
movsl
or
fisubs
xchg
loope
push
outsl
pop
dec
leave
jae
adc
mov
mov
jmp
pop
and
andb
loopne
mov
shr
popa
das
lret
test
pop
add
cmp
pop
sbb
rcl
inc
mov
scas
inc
adc
mov
cmpsl
pop
xor
adc
dec
ror
ja
push
sbb
jp
jle
sbb
mov
es
push
ljmp
imul
dec
pushf
mov
in
pop
ret
sub
or
push
in
jnp
dec
movsb
cmp
decb
data16
je
push
push
std
mov
cmp
dec
or
pop
je
fbstp
ja
pop
or
pushf
inc
cmc
fcoml
unpckhps
pop
movsb
mov
push
cmp
cwtl
pushf
sub
mov
stos
push
pop
fwait
cld
in
sub
sbbb
lahf
ds
int
mov
std
arpl
call
mov
add
inc
xlat
sbb
pop
mov
fstpl
xor
dec
pop
js
inc
mov
rorl
mov
mov
xchg
inc
and
jmp
inc
push
test
or
xchg
in
out
cli
leave
pop
jo
lea
and
unpckhps
mov
add
fld
mov
cmp
stos
mov
pop
dec
mov
and
cmpsl
cmp
cmpsb
popl
lahf
pushf
pop
lret
jg
lods
jmp
pop
enter
add
xor
push
faddl
push
ret
inc
add
repnz
stc
xor
pop
dec
mov
aam
xchg
dec
fstl
pusha
outsb
loopne
push
jns
or
inc
pop
jbe
lods
std
push
sub
call
lret
push
dec
mov
or
inc
call
std
rclb
cmp
fs
les
int
scas
sbb
mov
xchg
mov
int3
pop
jbe
fdivrs
aad
dec
lock
in
push
mov
insl
imul
cmp
sbb
inc
mov
mov
xor
and
inc
xchg
mov
aad
inc
or
cli
adc
and
pop
mov
insb
jle
mov
cwtl
cltd
pop
loop
adc
shrl
pop
outsl
sahf
shrl
lods
cmp
int3
in
xor
cmp
lds
lretw
mov
jae
inc
sub
pop
in
or
ljmp
cmp
jnp
mov
rol
in
inc
sbb
mov
les
in
out
cmc
adcl
adc
inc
mov
push
sub
xor
jbe
cmp
adc
mov
cmp
rcl
es
push
or
inc
inc
mov
shlb
ffree
dec
ljmp
mov
dec
stos
xchg
sbbl
cld
sti
adcl
push
rclb
ljmp
sub
lahf
add
int
ret
test
repnz
push
shrl
sahf
repnz
jge
jmp
es
xchg
sbb
test
mov
cmp
xor
fcmovnu
mov
nop
loope
xchg
leave
sub
sub
adc
sbb
bnd
mov
mov
xchg
pusha
hlt
dec
inc
xchg
insb
push
ljmp
xchg
sbb
xorl
xor
in
aas
inc
xor
push
clc
ret
daa
stos
negl
lahf
fbstp
stc
xor
adc
les
cmpl
cmc
adc
clc
cld
fcomp
fildll
pusha
mov
mov
stc
mov
mov
and
pop
and
cld
call
popa
sbb
leave
cmp
pop
cld
les
in
sub
xchg
mov
jle
ljmp
sbb
add
fcmovb
inc
jmp
ret
sub
clc
sahf
sbb
dec
add
mov
mov
xchg
sbb
shrl
add
jmp
int
cmp
fnstcw
pop
and
add
ficomps
fidivl
jb
pop
ficoms
ss
in
dec
inc
push
adc
lcall
aam
jbe
cld
sub
imul
es
and
jmp
shrl
dec
pusha
push
sub
jl
fmull
jae
sbb
or
mov
movsb
cwtl
cli
xchg
cli
std
xchg
popa
jo
mov
jbe
jno
mov
jo
fwait
adc
push
insl
xchg
ss
and
stos
fs
add
sbb
mov
add
sbb
push
xchg
mov
dec
fdiv
push
push
mov
push
lds
push
add
sub
mov
dec
push
add
and
push
pop
stc
mov
bswap
in
lret
sub
adc
xchg
mov
mov
es
xchg
and
repnz
cmc
sahf
loope
pop
dec
mov
addr16
call
cmc
popa
jge
push
pop
mov
mov
out
push
xchg
mov
sub
outsl
add
cmp
mov
jmp
in
cmc
xor
xor
sub
pop
xor
popa
cmpsl
out
or
or
in
cmpsb
fwait
adc
push
cmp
jnp
cmpsl
push
ret
mov
pop
test
vunpcklps
or
js
sub
loopne
inc
stos
or
testl
movsb
divb
xor
sbb
inc
das
inc
cmpl
mov
mov
push
pop
shrb
xlat
movsl
sbb
rorb
repnz
ret
into
or
test
or
jnp
out
mov
jle
or
xor
popf
lods
mov
dec
lahf
pop
or
jnp
mov
lods
les
mov
jb
sbb
popf
xorb
call
icebp
sarb
fs
addr16
lock
xorb
inc
mov
mov
repz
cmp
fnstenv
ja
out
add
insl
addr16
push
cmp
mulb
mov
jecxz
mov
xor
std
adc
dec
fnstcw
aas
rcrl
sti
inc
and
sub
fidivs
xchg
jge
mov
mov
test
lods
iret
jmp
xchg
fld
es
add
scas
in
bound
insl
cmpsl
adc
cli
or
xor
adc
adcb
cmp
lea
fsubrl
jecxz
repnz
je
and
xchg
adc
sub
jae
in
fldl
insl
jbe
mov
bound
lods
xor
popa
xchg
cmpsb
test
mov
iret
or
js
add
xchg
cmc
loope
je
divb
push
xchg
addb
jo
int3
idiv
jmp
sub
cld
insl
xlat
lcall
cmc
repz
mov
daa
pushf
jmp
cmp
xor
nop
stos
test
adc
mov
cmp
and
mov
jne
scas
cmp
pop
dec
shrl
int
xor
adc
push
pop
cltd
push
push
dec
fcoms
mov
out
inc
rcrb
jle
xchg
jae
pop
cmpsb
cs
push
ja
dec
insb
push
ja
aam
jns
or
mov
mov
xor
imul
push
add
ljmp
jbe
shll
ret
stc
enter
push
dec
mov
cwtl
adc
or
mov
pusha
enter
xchg
lahf
nop
decb
jnp
das
mov
cld
test
out
push
mov
and
sbb
aad
dec
pop
adc
ret
ja
mov
and
and
rcll
out
iret
cmp
add
xchg
popf
mov
call
call
std
call
dec
mov
push
loop
xchg
movsb
enter
cmp
add
push
mov
popf
std
fdivrl
lods
dec
xor
fucomp
dec
gs
or
mov
mov
loope
imul
scas
insb
icebp
outsb
ljmp
addb
out
cmp
cmp
ret
or
sti
jg
lods
pusha
cmp
mov
inc
cmpsb
pop
lea
adc
jl
jnp
sub
stos
scas
prefetchw
or
cmp
loope
sti
ror
aam
cmp
cmp
xor
sbbl
sbb
stos
inc
in
jmp
fcomps
rol
xor
leave
dec
mov
popa
sub
push
lret
movsb
fwait
mov
imul
jl
ljmp
xor
push
insl
mov
add
loop
das
mov
das
pop
imul
push
sbb
pop
xor
xchg
test
dec
jl
jbe
xchg
xchg
outsb
push
xchg
xor
aaa
test
std
xchg
mov
cwtl
jnp
fadd
jb
clc
and
sbb
daa
cs
lock
cmp
sbb
jmp
xchg
mov
and
mov
cmp
leave
popf
cmpsl
mov
mov
cli
call
dec
push
and
xchg
mov
mov
testl
push
aad
xor
fdivrs
add
mov
mov
cmp
pop
outsb
dec
jmp
jbe
push
dec
gs
lcall
or
sbb
sub
out
nop
psubb
inc
loop
xor
sahf
push
mov
or
ss
inc
add
jp
gs
movsb
push
push
ret
add
fildll
mov
dec
dec
mov
pop
sbb
fwait
rcrb
push
xor
sub
or
cltd
hlt
or
testb
loopne
lea
pop
jg
icebp
stc
loope
pusha
push
and
out
inc
push
stos
xor
dec
add
pop
and
add
push
inc
rol
xchg
or
sar
out
andl
cmpsb
dec
outsl
jl
and
hlt
cmp
jl
jg
pop
or
sub
lock
dec
and
popf
leave
mov
sbb
test
cmp
and
sarl
daa
rep
or
out
jo
loopne
xchg
insb
rcrb
jecxz
iret
sub
idivb
and
xchg
push
dec
test
int
sub
adc
cld
push
xchg
fdivrs
nop
pushf
jo
das
lret
int
loopne
or
leave
and
pop
push
and
imul
aad
and
roll
mov
push
cmp
iret
and
rcll
fcmove
push
out
dec
repz
sti
jmp
sub
xchg
mov
sti
push
push
push
push
out
dec
sbb
cmp
pop
mov
adc
jge
jbe
cmpsl
inc
ja
movl
jnp
insb
xor
or
mov
add
imul
loop
inc
adc
pop
or
sbb
in
loop
jecxz
and
mov
xchg
add
mov
fcomp
aas
lock
es
rcr
dec
stos
enter
dec
sbb
sbb
stos
in
mov
lods
cmpsl
cmpsb
stc
mov
xchg
int
leave
pop
mov
stc
test
xor
outsl
adc
lret
das
mov
cmp
scas
test
ret
mov
jno
lret
dec
xor
out
push
add
adcl
push
loop
jae
aaa
fs
hlt
xor
movsl
lds
rorl
push
xchg
orb
jae
xchg
dec
insl
adcl
icebp
dec
jmp
xacquire
mov
pop
jno
mov
and
adc
mov
ss
or
scas
cs
xor
push
xor
or
jecxz
testl
aas
mull
aas
xor
pop
mov
fdivl
cmp
mov
dec
outsl
ret
sub
push
jbe
push
orb
mov
lret
ds
push
pop
mov
gs
js
cmp
dec
add
mov
fsubs
jns
cmc
lahf
mov
mov
xchg
mov
or
push
cmc
testb
data16
sbb
lret
or
dec
js
pop
mov
xchg
adc
ret
aaa
adc
jne
pop
popf
dec
dec
cmp
lods
cld
adc
cmpsb
sbb
sbbl
lea
mov
cld
dec
clc
or
lock
xchg
leave
push
clc
xlat
sbb
jge
adc
or
xchg
and
loopne
add
pop
movsb
scas
loopne
movl
popf
ret
scas
fistl
mov
cmp
dec
rclb
lahf
rcll
add
std
fisttpll
sub
fsts
sub
add
out
push
adc
cmp
incb
jl
push
nop
jnp
push
pop
mov
ret
mov
fisubs
popa
jo
and
rcrb
insl
jbe
fmulp
sbb
negl
lods
iret
loop
sar
mov
xor
bound
xchg
inc
fs
popl
adc
pop
dec
sub
jnp
jae
xchg
push
add
sub
jl
out
and
jno
dec
sub
bound
mov
sbb
popf
dec
leave
push
xchg
out
mov
xchg
out
pop
out
sbb
pop
jbe
inc
jecxz
repnz
in
push
pop
mov
mov
ljmp
push
xlat
xchg
inc
cmpsb
jecxz
hlt
jns
in
mov
lahf
dec
adc
mov
out
shrl
lret
lods
jl
xlat
mov
das
xchg
cmpsl
pusha
sbb
and
movsl
cmp
ss
les
lods
popf
inc
int3
fs
push
mov
cmpsl
imul
mov
mov
inc
add
cmpsl
aas
mov
mov
jo
outsl
mov
lock
scas
mov
push
push
sbb
sbb
insb
fsubl
aaa
leave
into
cmp
shrb
aas
jo
les
mov
inc
push
mov
xor
sub
xchg
lret
xchg
sub
arpl
int
pop
lods
sub
out
sub
in
xchg
xor
xorb
ret
repz
das
mov
mov
enter
sar
adc
stos
xor
sbbb
leave
or
xchg
movsb
mov
out
inc
jo
inc
xor
inc
push
cmpsb
pushl
or
or
pop
pop
std
mov
out
icebp
inc
fs
mov
outsl
add
pop
cmpsl
add
mov
xchg
pop
adc
jbe
mov
lcall
rcll
inc
cli
or
shr
rcll
es
jne
lcall
fnclex
cmp
sar
insb
insb
xor
adc
sub
or
insl
adc
add
pop
decb
mov
mov
push
or
lds
in
ret
mov
jg
adc
lret
ret
or
mov
nop
into
sub
fnstsw
cmc
sti
mov
push
jbe
add
mov
dec
xor
sub
jg
mov
mov
clc
imul
adc
push
jl
fildl
out
test
sub
in
or
pushf
test
pop
add
cld
bsf
cmp
xor
ljmp
push
inc
mov
or
mov
inc
push
add
adc
popf
into
out
mov
add
out
lods
out
or
sub
adc
add
in
pushf
lods
adc
popf
fdivrl
popf
stc
push
dec
cmc
gs
ljmp
inc
shll
dec
sbb
std
sub
pop
lret
hlt
cmp
lea
cmp
iret
dec
sbb
les
mov
scas
test
mov
jne
sbb
jmp
jns
mov
incb
inc
sub
push
push
cli
or
arpl
leave
test
and
push
ljmp
or
adc
nop
fcomp
xor
mov
lds
adc
rcrb
repnz
xchg
sub
dec
loop
repz
xchg
fwait
mov
mov
repz
fdivrl
push
push
out
cmp
mov
daa
hlt
fcmovu
fsubr
and
out
xchg
mov
add
mov
xchg
cmp
cld
test
jg
push
jb
or
sub
jae
test
addr16
mov
in
call
adc
sbb
ja
jns
mov
leave
cwtl
cltd
aaa
inc
xchg
mov
or
cmp
mov
sti
aaa
xchg
sarl
fsubr
loope
insb
test
fdivrl
push
enter
jb
xchg
mov
jmp
bound
xor
sub
popf
and
mov
in
pop
int3
es
ds
ret
push
scas
jb
xor
or
add
stos
test
inc
test
arpl
cmova
lods
adc
mov
sbb
push
mov
imul
sbb
sub
int3
movsl
sub
stos
jmp
mov
sahf
cmpsl
jo
push
or
and
xchg
jo
inc
jne
subb
and
sbb
push
push
stos
imul
cwtl
xor
xchg
xor
out
ret
lret
insl
mov
out
jg
pushf
fidivl
mov
jmp
subl
dec
aas
mov
scas
pop
popf
repz
popf
ds
xor
sub
gs
jmp
pop
std
add
jno
sbb
cmp
call
lahf
cmp
arpl
add
arpl
pop
xchg
fisubrs
inc
mov
repz
pop
leave
cmovp
cltd
jnp
cmp
or
add
pop
les
pop
xchg
out
push
sbb
dec
ljmp
pop
test
cmp
jmp
mov
adc
mov
xchg
inc
in
rcrl
lods
cmp
and
push
out
push
andb
xor
sbb
test
mov
pop
cmp
call
jno
pop
movsl
sub
lret
in
jo
test
ds
sub
mov
test
cmp
lods
aad
adc
scas
dec
push
xor
push
rcll
arpl
jns
push
mov
dec
in
imul
mov
jp
mov
dec
adcl
cmp
or
push
jge
sub
lods
fcomi
stos
add
sub
lea
cmp
ljmp
mov
jne
fs
push
pop
add
mov
pop
cmc
lret
ret
shlb
sub
in
std
xlat
ffree
and
fs
out
dec
push
jb
subl
loopne
dec
adc
mov
pop
mov
std
or
lret
ror
push
mov
mov
fidivrl
pushf
mov
mov
mov
lods
movsb
cmpsl
jge
xchg
cmp
loop
jns
sahf
jnp
stos
mov
xchg
jbe
divb
pop
mov
fsub
fsts
pushf
xlat
push
cmp
inc
sub
mov
and
repz
loope
repz
inc
scas
je
xor
and
adc
insl
jg
mov
push
gs
mov
push
pop
jbe
outsl
test
pop
xor
mov
pop
or
lea
mov
in
and
daa
imul
sbb
sub
pop
pop
mov
dec
add
push
jno
adc
pushf
dec
hlt
mov
aam
push
mov
or
test
fdivrp
pop
ja
jp
sbb
and
enter
pusha
cwtl
sbb
fdivs
mov
test
test
push
loope
leave
out
push
test
xadd
or
das
call
pop
stc
sbb
fimuls
xor
testb
jmp
push
xchg
or
pop
inc
or
jo
repnz
fmull
mov
mov
ds
icebp
fs
sbb
lods
inc
fs
inc
pop
idivb
scas
and
ret
cld
es
repz
jge
mov
push
xchg
dec
and
cmp
dec
jo
enter
fadds
jne
jno
daa
insl
lods
mov
stos
sti
lret
xor
test
movsl
jmp
add
lock
push
xor
dec
sti
push
inc
mov
into
inc
add
iret
mov
mov
addl
or
mov
pop
cld
fwait
repnz
adc
cs
inc
mov
and
push
pop
sub
dec
nop
and
mov
lahf
jmp
repz
dec
pop
jno
or
add
sub
jg
jb
jecxz
loop
cmpsb
lods
dec
fdiv
cmp
call
shrb
mov
and
or
inc
sbb
dec
mov
lds
cmp
sbb
stos
mov
and
les
das
jne
adc
sbb
out
pop
push
test
dec
fcomi
or
xor
out
insl
fwait
shrl
lds
test
aaa
fisubrl
cltd
pop
lock
out
mov
xor
or
in
mov
cs
call
sbb
mov
fildll
cmp
pop
cmp
arpl
lcall
in
inc
std
jo
fbstp
neg
or
dec
sbb
loope
je
into
dec
pop
sbb
jg
test
jp
cltd
insl
fldcw
leave
ss
outsl
mov
leave
loope
sub
pop
iret
xchg
aas
js
jmp
xchg
rcr
outsl
test
and
mov
push
pop
cmpsl
mov
and
jo
sbb
pop
addr16
add
or
inc
and
ja
push
mov
test
clc
cmp
xchg
add
xor
dec
push
jge
std
fdiv
imul
mov
adc
dec
and
int3
cli
xlat
test
sub
inc
ss
rcll
mov
pushf
cmp
aad
out
jno
dec
dec
add
in
jmp
popa
int
mov
test
and
push
dec
fsts
mov
or
dec
outsb
out
popf
test
lds
idivl
xchg
fiaddl
movsl
test
loop
leave
daa
sbb
iret
nop
dec
scas
hlt
push
nop
dec
sub
xor
test
cs
mov
add
rcrl
stos
ljmp
int3
inc
xchg
adc
gs
mov
mov
dec
into
add
dec
mov
pop
push
push
push
push
enter
fs
adc
cltd
sbb
sbb
hlt
push
pop
push
push
adc
dec
sub
clc
std
push
std
mov
cmp
push
pop
xor
jmp
or
leave
mov
mov
cmp
mov
stos
repnz
test
call
jge
aaa
enter
dec
aam
das
adc
push
xchg
xorb
add
leave
leave
cmp
add
mov
cmp
adc
stos
pop
or
jns
nop
test
lods
out
clc
adc
andb
movsl
arpl
in
push
jmp
daa
xchg
fsts
es
fs
mov
mov
mov
xchg
lds
mov
sub
std
xchg
popa
jge
insb
inc
outsl
sub
pusha
xchg
push
jmp
mov
imul
repnz
scas
adc
sar
int
sti
pop
or
pop
cmp
int3
pop
mov
pop
jbe
mov
insb
adc
xchg
cmp
sbb
andl
sbb
int3
call
pop
pushf
mov
pop
inc
popl
adc
or
dec
mov
jno
call
out
incl
mov
movsl
mov
fs
or
cs
and
inc
es
jne
jl
cmp
testb
outsb
je,pt
or
pushf
jmp
cmc
insl
cld
sub
jmp
ficoml
sbb
jae
jnp
xor
ss
test
loope
movl
xor
dec
insb
cmp
shlb
pop
enter
xor
jecxz
ljmp
jae
arpl
inc
and
or
addb
cmp
lret
cmp
xor
pop
add
lea
mov
inc
lods
sub
mov
pop
scas
and
jmp
clc
mov
push
enter
inc
lods
iret
clc
pop
mov
and
xchg
jnp
sti
loopne
cli
inc
add
nop
pop
pop
rclb
mov
xchg
and
cmc
dec
and
inc
dec
stos
cmp
cltd
pcmpeqw
push
cltd
and
xorb
shll
sbb
add
ss
sbb
sbb
and
jno
ljmp
in
ljmp
cmp
cmp
xor
push
movsb
data16
mov
mov
fstpt
cmc
push
lods
jmp
mov
int3
or
pop
mov
add
fsubrl
mov
fiaddl
mov
in
iret
popf
lret
loop
cmp
jnp
inc
cmp
les
or
push
jne
fucomi
jb
jge
lods
dec
dec
pushl
std
popf
fcomps
insb
es
push
dec
lock
aam
cmp
test
sbb
and
ss
xchg
pop
mov
pop
cmp
movsb
frndint
repnz
clc
mull
lahf
jo
in
daa
jge
popf
mov
hlt
xor
push
pop
fwait
ljmp
sub
fmuls
jmp
mov
mov
iret
stos
and
and
lds
inc
xorl
cmp
fidivrs
imul
insb
mov
adc
fimull
dec
out
imul
jecxz
sbb
jo
insb
inc
jnp
or
repz
aaa
mov
ret
pop
insl
mov
in
jecxz
mov
xor
ffree
adc
les
or
sub
sbbb
sti
push
adc
into
or
xchg
or
pop
inc
sbb
jne
ja
jae
sti
subb
pop
data16
and
jmp
adc
movsl
push
jg
mov
popf
lock
adc
dec
imul
push
inc
out
ja
icebp
movsl
nop
xor
movsl
cmc
mov
mov
ret
push
shrl
sbb
mov
iret
xchg
pop
jns
mov
insb
sbb
aam
ror
sahf
std
cli
adc
and
adc
xchg
lea
leave
xor
sub
out
mov
xchg
stc
sub
xchg
adc
sbb
mov
ficoms
bound
les
lods
cmp
imul
inc
fistpl
popa
std
roll
cmpsl
pop
xchg
repnz
sub
mov
xor
push
shrl
in
rorb
test
dec
sbb
loop
add
mov
pop
jno
test
and
jecxz
sub
enter
pop
pop
cli
pop
das
hlt
push
popf
mov
or
dec
jne
imul
push
fwait
cmp
sbb
shlb
mov
scas
leave
icebp
jecxz
inc
es
adc
popf
imul
sbb
cld
repz
xor
outsl
ffreep
popa
roll
jo
fs
or
rorl
adc
das
pop
loopne
jle
shlb
test
xchg
mov
jno
jns
fildl
xor
cmp
nop
jno
mov
cmpsb
adc
scas
decb
loope
xor
js
enter
pop
jne
pop
cmp
ret
sarb
into
dec
arpl
aam
test
call
xchg
out
jns
adc
int3
jo
int3
dec
sub
hlt
imul
arpl
ret
orl
jle
je
adc
jg
and
stc
mov
or
adc
inc
mov
push
and
sti
mov
push
fisttpl
push
xorb
fs
sub
test
shlb
mov
sub
cltd
not
cmp
sub
ljmp
and
xor
sbb
out
cmc
push
fldt
dec
ds
into
repz
pop
sbb
adc
lahf
clc
dec
lcall
and
jns
scas
lcall
lcall
or
inc
mov
popa
xchg
pop
addr16
ret
push
add
pop
jge
je
pop
sahf
xor
in
xchg
and
mov
pop
pop
out
and
mov
dec
hlt
ror
rcrl
mov
lock
lods
push
popf
mov
ds
xchg
lock
mov
popa
cmpsl
pop
mov
mov
ret
and
cmp
in
clc
and
js
outsb
sarb
and
shll
andl
jmp
add
in
push
push
add
sbb
call
pop
dec
cmp
or
and
inc
xchg
adc
sub
out
fsubr
dec
xchg
pop
data16
clc
pushf
cmp
lahf
or
adc
in
popf
lea
push
dec
daa
incl
jnp
stos
jo
ja
mov
daa
aaa
lods
pushf
jg
and
popf
movsl
sbb
xchg
lret
mov
push
lret
pop
in
movb
icebp
mov
cltd
out
sbb
adc
loop,pt
ss
sbb
jbe
sarb
mov
arpl
faddl
enter
lods
inc
add
mov
mov
xchg
xor
jbe,pt
movsb
pushf
in
pop
cltd
loope
cltd
clc
push
dec
lock
rcl
mov
sbb
xchg
add
inc
dec
cltd
test
arpl
jne
test
test
sub
jg
leave
shll
andb
and
cld
adc
mov
mov
ss
mov
sub
les
pop
cs
xor
das
push
out
dec
sub
fwait
insl
xor
fsub
mov
push
shlb
fisubrl
xchg
cmc
inc
sti
xchg
inc
lock
leave
imul
and
and
les
arpl
or
sub
adc
adc
mov
loopne
mov
mov
repnz
rep
aas
cld
mul
push
ficoml
ds
outsl
imul
adc
dec
cmp
sub
adc
incl
sub
sub
fldl
je
es
int3
sub
movsb
mov
fistps
fstl
and
insb
pop
cmove
rcll
sbb
icebp
inc
xchg
mov
repz
fsubr
push
lcall
cs
pop
scas
mov
imul
ret
xchg
or
mov
and
je
push
leave
pop
mov
push
mov
cmpsb
xlat
loop
sub
mov
cmp
or
popa
lret
dec
data16
adc
dec
pop
mov
arpl
jp
push
mov
int
ucomiss
pop
pusha
sub
sub
in
xor
sbb
or
mov
fisubrs
in
pop
cmp
sbb
push
in
pop
jmp
mov
xor
push
cmpsl
lock
adc
aam
add
dec
mov
or
int3
sub
in
inc
out
rolb
lcall
out
mov
sbb
jb
pop
mov
mov
in
pop
int
adc
mov
or
lret
inc
add
incb
insb
popf
mov
fmull
cld
inc
sbb
test
ret
push
add
adc
adc
and
inc
dec
jl
sub
mov
fsubs
out
hlt
mov
push
mov
jno
sarb
test
cmc
jp
repz
jmp
push
xor
mov
jmp
push
inc
inc
xchg
pop
cmp
push
jl
mov
inc
cmp
das
fstpl
lret
adc
and
repz
jno
jl
js
scas
sub
mov
rcrl
pop
mov
add
inc
pop
imul
bound
cmpsl
mov
inc
mov
icebp
cmp
xor
iret
mov
mov
imul
xchg
scas
mov
pop
not
jae
sub
and
test
mov
rcrb
mov
adc
and
stos
in
icebp
add
mov
and
mov
jmp
and
push
mov
pop
sti
int3
or
imul
or
jmp
pop
fistpll
cmpsl
imul
int3
test
mov
lock
and
andb
mov
js
popf
inc
sbb
scas
xor
movsl
lret
into
fwait
cli
fimuls
push
inc
das
jo
loopne
in
rolb
xchg
ljmp
lahf
std
jmp
scas
lcall
xchg
jno
in
or
mov
scas
fwait
jle
clc
jno
stos
or
sub
xchg
or
test
imul
and
jne
pop
pop
lods
movb
fcompl
xor
lods
shll
aad
pop
fcmovu
or
add
push
jle
dec
imul
jae
addb
sbb
jns
jge
xor
test
lock
jo
or
sbb
test
cmpsb
push
bound
fcompl
jmp
jecxz
cmp
mov
inc
adcb
test
and
jge
inc
dec
call
fdivrp
dec
or
out
sub
repnz
frstor
popa
mov
icebp
in
pusha
or
fadds
push
inc
sbb
pusha
rorb
inc
jo
sub
faddp
push
push
xchg
scas
mov
je
xor
test
xchg
out
lods
jb
imul
cmpsl
jmp
fwait
in
jecxz
ss
pop
test
and
stc
sbb
mov
fwait
mov
inc
inc
jno
xorb
xor
mov
mov
ja
mov
mov
aad
cmp
ds
mov
fwait
call
pop
jmp
and
dec
push
mov
out
sbb
daa
jnp
mov
jne
les
enter
pop
cli
mov
in
aam
int3
gs
frstpm(287
fldcw
add
into
cli
add
xchg
adc
or
js
pop
jns
jb
or
mov
stos
test
push
or
jo
rcrl
data16
inc
out
pop
movsl
mov
mov
bound
dec
jo
push
pop
pusha
out
stc
push
ficoms
addl
add
adcb
stos
aas
lea
cltd
add
outsb
sub
test
shll
inc
sbb
or
and
mov
mov
add
es
rcrb
jg
aas
xor
xor
mulb
std
xlat
rclb
shlb
pop
test
xchg
fs
arpl
int
int3
aaa
insl
add
fdivs
icebp
pop
push
pop
xchg
xchg
clc
dec
adcl
pop
inc
pop
mov
ja
cli
mov
jb
aas
movsb
xchg
mov
xchg
jns
dec
loope
dec
idiv
xor
scas
pop
popa
mov
mov
popa
loop
movsb
mov
cmpsl
jl
cmp
cmp
fnstenv
insl
into
into
pop
stc
or
or
mov
les
rcrb
cmpsl
addr16
cmp
cmp
rcll
push
in
test
imul
fcompl
jp
pushf
leave
call
cld
and
or
pop
push
push
repz
fmull
xlat
xor
and
sbb
out
xorb
int3
aaa
and
or
inc
pop
inc
mov
mov
outsb
dec
pop
jmp
imul
in
nop
mov
cmpsb
inc
mov
xor
lret
and
jmp
jle
inc
jmp
xchg
cmpsb
movsl
push
loope
or
and
lods
pop
outsl
pop
iret
cmpl
and
flds
pop
shlb
nop
jbe
sbb
in
loope
insb
in
fsubrs
aaa
lret
test
aas
dec
in
pushf
mov
test
mov
fdivrs
pop
scas
mov
mov
pop
pxor
and
imul
fwait
mov
arpl
pusha
push
mov
outsl
sti
sar
data16
jnp
sub
or
and
mov
and
das
jno
jae
jle
imul
and
out
cmp
and
jecxz
orb
sub
int
add
aaa
inc
push
fistl
in
push
jp
in
insb
dec
imulb
or
push
rolb
adc
xor
fcoml
nop
mov
sbb
and
lret
push
scas
xor
pop
ja
scas
cmp
push
jmp
and
sbb
jnp
lods
test
xor
adc
ret
jp
shlb
inc
cmpsl
and
std
repnz
pop
or
stc
xchg
pop
cmp
pusha
mov
paddusw
in
rclb
jmp
cwtl
scas
out
jo
outsb
fnstsw
cmp
mov
xchg
xor
out
gs
mov
xchg
push
sbb
dec
movl
nop
outsl
lock
int3
pushf
ds
scas
jno
insb
sbbl
fadd
jge
pop
rcll
sti
push
les
cmpsl
or
mov
in
mov
aas
xchg
xchg
int3
out
sbb
rcr
leave
mov
push
jl
mov
sbbl
cwtl
in
or
push
or
cltd
push
fdivrs
arpl
jb
testb
push
sub
adc
mov
imulb
outsb
fcoms
repz
mov
stos
mov
sbb
pop
pop
insb
insl
mov
cmp
mov
inc
out
mov
icebp
push
jnp
xlat
xor
daa
pop
int3
xor
jp
mov
jo
jmp
in
pop
pop
cli
jmp
sbb
orl
hlt
push
je
mov
js
mov
mov
dec
adc
mov
mov
jo
mov
push
test
cmpsl
inc
and
adc
test
popf
push
ljmp
cmp
nop
push
ret
mov
xor
sub
les
loope
outsl
fs
mov
inc
movsl
dec
dec
mov
jns
pop
mov
in
into
pushf
xchg
aas
scas
insb
pop
mov
test
pop
fs
ror
sarl
loop
stos
int
in
sahf
enter
mov
push
ret
icebp
inc
in
lret
mov
arpl
mov
mov
sub
jle
shlb
mov
gs
mov
adc
mov
imul
sbb
mov
jns
je
sti
sub
call
mov
loopne
xlat
xor
dec
xor
lcall
jbe
jns
mov
enter
pop
mov
lret
aaa
fisubl
push
ljmp
imul
rclb
sahf
dec
sub
stc
in
xor
inc
popf
mov
pop
bound
cmc
push
push
fidivrl
adc
fcmovnbe
gs
or
aad
mov
sbb
lcall
lods
aad
loopne
mov
mov
add
sbb
pop
or
or
sbb
or
xor
and
insl
mov
shl
ret
xchg
test
dec
xor
loope
mov
ret
gs
mov
pop
int3
mov
pop
sbb
jg
add
sub
dec
mov
divl
push
movsl
sbb
out
arpl
aad
lods
or
xor
xchg
stc
lds
jnp
ds
cld
cltd
icebp
dec
in
dec
jecxz
dec
scas
movsl
test
arpl
aas
and
lcall
mov
and
cmpsb
and
sub
mov
sub
mov
rcll
les
push
xchg
arpl
inc
jg
inc
repnz
hlt
mov
adc
dec
stos
lods
dec
dec
push
pop
xor
cmp
mov
pop
ret
cs
rorb
mov
pop
cmpsl
sbb
sub
xor
in
cld
out
out
subb
jge
xchg
in
dec
jg
sbb
mov
mov
cld
xorl
or
jle
mov
loop
incb
test
cmpsb
sbb
or
ss
cltd
hlt
sbb
push
into
xchg
cmc
popa
adc
sub
and
cmp
ljmp
xchg
movsl
dec
push
in
xchg
mov
es
icebp
pop
popf
mov
scas
mov
jecxz
xchg
dec
in
imul
daa
mov
mov
std
add
lret
mov
cld
jl
sub
movsl
call
mov
out
icebp
daa
xchg
xchg
js
shll
jae
test
imul
mov
add
or
push
test
mov
mov
shll
lret
in
dec
adc
add
inc
mov
std
xchg
inc
ljmp
mov
inc
data16
adc
mov
enter
int
lock
inc
imul
cli
jecxz
pusha
imul
jp
sbb
lahf
sub
sub
mov
das
lret
mov
in
repnz
mov
loop
stos
lock
adc
call
jnp
test
mov
xchg
movsb
and
jl
mov
lret
push
xor
xchg
mov
loopne
in
sahf
addr16
jns
push
inc
inc
test
sub
ja
push
out
pop
inc
xor
jg
mov
mov
inc
lahf
out
dec
jno
hlt
lea
bound
mov
xchg
leave
jne
ljmp
or
adc
push
loope
cmp
sub
mov
enter
arpl
leave
scas
pushf
mov
adc
jae
jmp
lods
cltd
adc
ss
xor
sbb
jo
aad
inc
aas
sbb
jle
dec
shll
cmp
jecxz
insb
push
mov
jp
sbb
adc
dec
aam
xlat
aam
jp
mov
jp
loop
or
rcll
dec
pop
adc
xchg
fsts
pop
pop
insb
lea
pusha
imul
adc
cmp
mov
push
in
sub
popa
mov
sbb
or
mov
inc
movl
adc
cwtl
mov
push
popa
loop
shl
inc
mov
ret
js
mov
sarb
adc
icebp
int3
dec
inc
jmp
ret
xchg
and
stc
cmpsb
lret
mov
clc
sarb
lds
mov
movsl
out
jo
out
into
les
sub
add
lea
or
into
mov
cld
adc
rcll
aas
bound
xchg
aam
cmp
add
je
lahf
push
cmp
pop
or
scas
xor
xchg
out
in
ret
and
push
test
jbe
loop
or
add
xor
roll
insb
xchg
ret
mov
scas
jmp
vcmppd
addb
ss
sub
mov
mov
out
stos
jns
mov
outsl
jecxz
xchg
dec
arpl
fcmovbe
add
out
scas
cmp
pusha
aam
fs
xor
jne
popa
stc
xlat
inc
int
iret
push
mov
loope
pop
movsb
into
mov
int
fs
andl
call
cltd
jne
ror
xchg
xor
loopne
les
xor
cmp
fistpl
scas
stc
imul
and
or
mov
xchg
pop
sub
inc
add
bnd
repz
pop
scas
jg
add
loop
push
test
sbb
sub
icebp
addl
xchg
adc
int3
pop
loopne
cmpsl
repnz
push
inc
push
adc
cmp
lock
mov
fwait
dec
imul
or
lret
int3
jne
push
jecxz
sub
push
push
testl
ficomps
mov
xor
mov
or
jle
icebp
jl
cs
cld
push
int3
dec
inc
and
inc
testl
xor
popf
mov
push
ja
inc
sbb
aaa
movsl
in
outsb
add
cmpsl
sbb
or
and
jg
or
inc
arpl
mov
and
lds
jns
sahf
std
cli
das
push
xor
iret
xchg
pusha
and
imul
in
cmc
loop
daa
xor
jmp
lahf
dec
lods
push
lds
adc
aam
push
mov
clc
jnp
or
fsts
iret
or
aas
mov
aam
and
jnp
jg
dec
cmp
scas
pop
cmp
jl
mov
mov
aaa
popa
sbb
cs
dec
and
xor
pop
out
sbb
mov
call
inc
out
sub
cli
idivl
mov
fidivl
inc
and
in
mov
clc
andb
adc
dec
cmp
scas
rcll
push
out
jmp
jo
in
xchg
xorl
jg
pop
sbb
stos
loope
insl
jae
push
mov
or
arpl
inc
lods
je
stos
aaa
and
test
mov
pop
adc
call
inc
add
adc
dec
and
dec
pop
mov
pushf
push
and
inc
mov
or
mov
jbe
and
movsb
jnp
pop
lds
push
ja
jp
inc
add
bound
jge
ror
aam
adc
stos
ds
in
jne
cmp
xchg
or
xor
xor
xchg
add
int
lods
mov
aas
add
mov
call
push
jmp
fsubp
idivb
dec
loopne
mov
mov
push
mov
xlat
dec
shl
sbb
int
fs
add
sarl
ja
sbb
cmp
sub
imul
inc
jmp
hlt
imul
cmpsl
push
movsl
arpl
mov
dec
cmp
aas
mov
loop
cmpsl
jmp
ds
in
cmp
dec
mov
insb
lcall
sbb
mov
mov
mov
adc
gs
pop
push
add
pop
mov
push
cmp
pop
pop
lret
jne
sbb
jge
or
repnz
stos
lret
ficoms
pop
xor
sbb
sahf
jecxz
iret
and
or
pop
mov
dec
mov
outsb
mov
pusha
cmp
fdivs
or
movsb
sub
inc
sbb
jmp
lods
sysenter
js
into
jne
dec
jp
scas
xor
stos
xor
jne
or
lahf
cmpsb
xor
fdivrl
and
inc
loop
movsb
in
outsl
jo
jp
fildll
xor
call
push
jnp
out
das
sarl
push
aad
cmp
test
inc
mov
div
xlat
sbbl
out
inc
repnz
mov
push
fimull
cmpl
push
xor
pop
mov
pop
dec
ret
stos
push
sahf
scas
enter
cltd
gs
sti
or
dec
andb
mov
sahf
cmp
mov
lret
pop
jo
and
mov
repz
dec
cmp
scas
jl
sbb
lret
jmp
mov
movsb
outsl
jnp
pextrw
mov
loopne
shrl
sub
test
mov
mov
cmc
xchg
pushf
or
cmpb
cmc
mov
icebp
sub
jno
xor
repz
push
addr16
into
cltd
inc
idivl
int
js
dec
out
mov
ret
lods
aam
push
ja
adc
mov
movsl
fwait
fwait
lcall
mov
vmwrite
in
and
idiv
mov
pop
lcall
lods
push
fimull
jl
call
xchg
shr
imul
or
mov
imul
jnp
push
icebp
fdiv
rol
push
stos
add
iret
cmpsb
and
ss
mov
push
inc
push
stos
lods
lods
cmp
stc
xor
mov
cmp
jno
add
popf
xlat
loopne
push
jle
pop
lods
or
xchg
and
lcall
sbb
push
xchg
xor
rorl
imul
fidivs
or
jl
ja
inc
xchg
daa
test
pop
sbb
jbe
fimuls
loope
push
stos
push
lods
enter
pop
jnp
scas
xor
js
movsl
xor
daa
dec
pop
lahf
aad
lcall
lock
lret
stos
push
xchg
fsubrl
mov
push
push
pop
inc
dec
xor
cmp
mov
inc
mov
in
cltd
push
in
xchg
lods
repnz
sbb
or
inc
mov
push
or
iret
mov
shl
jno
and
jbe
fidivrl
push
xchg
dec
xchg
jl
aam
push
repz
lcall
or
iret
cld
pop
out
mov
xor
push
mov
loop
pushl
mov
lret
popf
bound
rorl
cmp
sub
mov
sbb
mulb
popf
imul
pop
dec
js
push
lock
sub
dec
cmpsl
xchg
lock
scas
scas
cld
sbb
and
loop
bswap
pop
inc
in
or
mov
sub
xor
sub
fidivrs
mov
or
roll
sarl
or
xor
je
int
or
cmpsl
mov
sbb
hlt
mov
sbb
add
cwtl
mov
jecxz
mov
mov
mov
push
xchg
cli
inc
stc
lock
test
lret
or
jge
ljmp
push
pop
sbbb
and
mov
adc
out
sub
fnstenv
cltd
push
cs
stos
mov
inc
icebp
inc
jno
adc
loope
insb
push
repnz
sti
in
dec
aaa
pop
cmc
mov
xor
sbb
cmp
in
jle
dec
sub
or
mov
pop
mov
mov
inc
xor
and
lods
outsl
data16
pop
movsl
push
or
gs
fmull
and
jmp
and
cmp
inc
mov
jge
daa
das
je
loopne
inc
xlat
inc
sub
es
scas
push
clc
in
mov
es
aam
imul
add
cmp
bsf
push
jo
lds
inc
jb
test
inc
aas
push
jl
out
jmp
sub
std
and
test
jae
or
and
repnz
mov
jns
ja
adc
cmp
cmc
adc
cmpsl
stos
jge
addr16
cmpsl
push
mov
outsb
mov
ret
stc
sub
mov
sub
jmp
test
mov
scas
mov
mov
sub
es
insl
or
pop
mov
xchg
xor
leave
mov
push
lock
lcall
cmp
daa
sbb
rcrb
and
add
xchg
cmpsb
mov
pop
aas
ret
pop
int3
pop
aas
mov
mov
pop
imul
dec
insl
adc
mov
mov
cmp
ss
mov
adc
popf
pusha
ror
ret
mov
mov
jg
xor
ss
push
inc
add
or
mov
lea
mov
stc
pop
xor
xor
sbbb
adc
loop
ljmp
jnp
and
iret
mull
xchg
ficompl
xlat
pop
xchg
stc
ds
movsl
or
mov
and
sub
push
push
ljmp
call
clc
testl
mov
xlat
pop
inc
jg
movb
pop
lret
and
cltd
sbb
mov
jle
out
mov
cmp
fcmovnb
jnp
mov
adc
push
ret
lahf
push
mov
adc
mov
xor
and
lods
jae
xchg
mov
pusha
jne
pushf
inc
cmp
mov
daa
fmull
mov
cltd
mov
cmp
cmp
adc
cltd
cmpsl
pop
out
test
repnz
inc
and
aas
xor
mov
mov
jae
bound
es
aad
mov
mov
add
lock
sbb
arpl
mov
inc
inc
cmp
cli
fnsave
sub
out
push
sub
xor
adc
fmuls
lods
and
sub
and
xchg
movsb
mov
xchg
adc
lret
rcrl
shrl
xor
xchg
sbb
jle
cwtl
and
lods
pop
aad
sbb
fdivrs
dec
push
xchg
cmp
jg
movsl
pop
push
mov
sti
cs
xor
aam
mov
sub
push
xor
not
sbb
xchg
and
rcrb
dec
push
sub
mov
inc
push
test
jns
add
pop
loope
cld
pop
loope
adc
xchg
sbb
adc
mov
push
xor
sbb
ss
dec
push
and
imul
push
sbb
xlat
loope
sbb
dec
sub
test
loopne
in
mov
sub
popf
mov
mov
ds
prefetch
push
aad
or
leave
pushw
jb
out
lds
int3
dec
insl
test
fsubrl
or
or
jg
dec
cmpsb
int3
add
in
ret
inc
aad
cmp
ljmp
fnsave
add
int3
and
and
cltd
dec
cmpsb
nop
and
xchg
fld
stos
fisttps
jb
jb
jp
mov
lock
shrb
mov
push
push
xor
ret
cmp
movsl
pop
jmp
movsb
inc
mov
int3
cmp
mov
cli
xchg
add
imul
icebp
rclb
mov
in
jb
dec
je
jmp
jnp
xor
shll
xor
push
int3
imul
mov
mov
nop
xchg
ret
dec
mov
psubsb
insl
out
mov
push
ret
hlt
add
out
leave
cwtl
jns
ds
sbb
add
push
cmpsb
int
loope
call
cld
test
or
push
int3
pop
mov
sbb
fistpl
jp
fnstenv
jg
cmpsb
pop
cmp
xchg
sbb
hlt
aaa
ret
out
cmp
mov
and
cmp
iret
inc
int3
jmp
aad
jb
lock
dec
test
jmp
enter
stos
dec
lret
scas
xor
push
outsb
cmp
clc
loop
pushf
and
mov
orb
aad
push
push
clc
enter
mov
sti
lret
dec
test
stc
cmp
mov
lahf
cli
testl
rcr
sti
or
clc
iret
xchg
lret
rcrb
jmp
mov
adc
rclb
dec
push
add
pop
popa
popa
inc
xchg
jae
mov
or
inc
in
pop
add
cmp
negl
cmpsb
fcoms
lret
notb
mov
push
in
cmp
incb
push
call
inc
or
and
xor
test
mov
dec
bound
lret
mov
ds
inc
jg
push
les
je
mov
jae
push
push
mov
fnsave
std
shlb
pop
cli
lcall
lods
xchg
out
sbb
sbb
or
pushf
add
push
xchg
out
dec
outsl
xor
pop
pop
jae
shll
movb
lock
dec
pcmpgtb
jmp
aas
mov
or
roll
gs
xchg
loope
pop
pop
fisubrs
out
into
push
fwait
and
sbb
fstps
pop
adcl
xchg
andb
mov
movsl
jbe
mov
loop
shlb
ljmp
push
addl
push
movsl
loopne
xor
mov
xchg
jmp
addr16
aaa
dec
test
test
mov
xchg
push
lret
dec
pop
mov
insl
idivl
shll
mov
cmp
sub
scas
out
push
outsl
into
add
lcall
je
push
out
adc
test
pusha
sub
cs
sti
in
inc
mov
lea
clc
jb
movsl
pop
addr16
xchg
lahf
stc
stos
inc
mov
rcrl
lret
pop
xor
enter
ret
iret
sbb
sbb
imul
push
cmp
mov
pop
mov
xor
jg
test
jl
mov
lcall
adc
mov
int
sti
xchg
adc
sbb
inc
sub
sub
mov
or
mov
inc
outsb
inc
pop
and
dec
dec
test
dec
add
cmp
jecxz
mull
fwait
addr16
push
scas
jecxz
mov
mov
fsubs
jb
jnp
sbb
jecxz
push
jnp
adc
into
and
inc
fiadds
repz
jo
sub
int3
fidivs
cli
jmp
imul
and
xor
mov
dec
aad
jbe
cmp
shll
mov
add
add
inc
stos
mov
mov
adc
fwait
xchg
and
lock
dec
outsb
out
fsubl
scas
shrl
inc
lods
dec
or
movsb
sub
into
xlat
repnz
adc
inc
add
ret
sub
and
popa
sti
leave
mov
gs
add
jae
sbb
add
cmp
jo
or
jo
addb
adc
push
push
pushf
adc
out
shrb
push
call
daa
jg
xor
out
pop
cmp
push
icebp
add
adc
dec
stc
sub
push
icebp
mov
sbb
cmp
dec
pop
add
popa
cmp
pop
mov
arpl
loopne
ret
jmp
inc
inc
jp
pop
fisubl
rorb
mov
inc
jo
mov
stos
std
clc
data16
lea
jg
adc
cwtl
xchg
scas
shr
inc
out
ret
cs
xchg
or
xchg
into
ljmp
sub
jle
repnz
scas
and
cmp
lahf
xchg
inc
bound
cmp
fwait
dec
subb
fidivl
mov
jns
xchg
adc
and
add
rcll
xor
insl
cmp
cmpsb
add
jns
daa
movsb
aaa
imul
test
pop
mov
enter
dec
hlt
mov
inc
xor
mov
cwtl
lods
sti
jmp
adc
into
shr
cmp
mov
loopne
loopne
sbb
mov
mov
addr16
rcrl
lret
fistl
sbb
push
popf
loope
movsb
add
les
jl
xchg
aaa
dec
mov
scas
inc
and
jbe
push
fnstenvs
mov
out
sub
pop
movsb
ret
and
les
into
cmp
mov
mov
cltd
nop
sub
je
rorb
push
inc
leave
idiv
add
jmp
pop
adc
push
insl
sub
dec
jge
test
clc
xchg
in
jns
inc
jecxz
enter
or
test
in
call
jecxz
mov
dec
sbb
int3
jg
out
int3
test
mov
test
push
push
icebp
or
fs
in
pop
lea
sbb
lcall
popa
xchg
arpl
push
and
sub
sub
shrb
fistl
movsl
jo
scas
mov
or
pop
js
xor
mov
in
into
test
and
mov
out
jg
clc
mov
dec
jno
aaa
pushf
int
gs
icebp
cmp
shrl
xor
xchg
cmpsb
ret
push
mov
add
sahf
repnz
inc
push
jne
movsb
cmp
ss
loopne
ret
insl
and
sar
sahf
mov
movsb
pop
pop
sub
or
xchg
ds
ret
mov
negb
out
dec
aad
in
jae,pt
and
sbb
cmp
cmp
and
xor
les
aas
test
aas
test
fbstp
rcll
dec
sub
test
pop
lahf
xchg
jp
mov
xor
fwait
mov
xchg
notb
pop
outsl
jge
es
inc
dec
jecxz
ljmp
fisttps
xor
dec
dec
mov
leave
testb
adc
fiaddl
int
jl
add
movsb
cmpb
insl
add
add
push
movsl
cmpl
lret
js
negb
add
cmp
sbb
add
and
pop
and
sub
xor
jno
rol
pop
mov
mov
adc
push
sub
fadds
lods
lea
dec
pop
stos
mov
sahf
push
lahf
mov
movsb
mov
test
xchg
cld
pop
cmpl
imul
dec
fimuls
test
and
push
aas
or
mov
or
sub
stos
xchg
lods
aaa
xchg
aas
lds
fdivrs
sub
cmp
sub
lods
push
fcmove
mov
and
mov
sub
lods
test
mov
loope
test
lret
in
adc
cmpb
into
lcall
jge
loopne
mov
repnz
cmc
push
std
xchg
cwtl
mov
cmp
pop
scas
adc
and
inc
lods
push
push
sbb
cmp
pusha
or
mov
xor
imul
adc
dec
gs
mov
adc
repz
jle
lock
mov
test
movsb
sub
inc
in
dec
dec
cmc
xor
popf
imul
bnd
sti
push
je
xchg
jp
pop
ljmp
add
xchg
inc
pop
add
cmp
ljmp
push
pusha
cs
mov
sub
push
test
and
and
mov
add
sbbb
movsb
call
xchg
push
push
mov
into
push
xor
sahf
mov
inc
mov
ljmp
mov
cmp
sti
jmp
insb
in
push
jmp
shll
stos
or
adc
addr16
dec
mov
gs
sub
hlt
adc
pusha
push
sbb
jnp
sarl
movsb
mov
pop
add
cmpsl
sbb
push
pop
test
cmpsl
mov
add
aad
cmp
int
jle
lea
das
jne
cli
or
sbb
cwtl
sti
test
jp
dec
stc
cmp
or
cld
sarb
mov
xchg
push
lods
sahf
mov
xchg
jno
ljmp
xchg
cld
fnstcw
push
mov
xchg
add
movsl
testb
jmp
pop
sub
sbbb
fistl
add
leave
adcb
jg
addr16
sub
imul
shl
fnsave
jl
inc
enter
mov
aam
mov
or
pop
xor
cwtl
jg
mov
adc
not
or
mov
mov
js
mov
mov
push
sub
inc
mov
loop
iret
lsl
mov
je
jecxz
enter
testl
pop
rclb
dec
pushf
gs
add
xchg
mov
popl
add
je
negl
popf
or
jae
loop
adc
or
test
pop
cmp
mov
push
sub
adc
pop
and
insb
movb
push
orb
mov
xor
fdiv
movsb
cmpsl
mov
lret
shl
frstor
mov
dec
inc
cwtl
add
mov
mov
dec
out
fistpl
cwtl
pop
popa
mov
push
fdivl
cmp
fs
les
rclb
aam
push
mul
leave
out
movsl
add
cwtl
adc
pushf
scas
mov
push
shlb
xchg
arpl
xorb
addl
mov
push
shrb
fs
jae
es
loop
sarb
adc
cmc
mov
push
fcomps
lods
xor
jmp
frndint
pop
push
imul
stc
das
pushl
loope
test
out
jge
mov
mov
or
push
lea
push
cld
std
cmpsl
imul
sub
sub
dec
out
fldenv
test
mov
call
repz
leave
ret
stos
popf
lock
fisubrl
pop
adc
mov
popa
pop
jae
repz
sub
std
pop
mov
jmp
cs
xlat
dec
sbb
mov
dec
test
jae
popa
sub
pop
xchg
inc
sbb
ja
jp
pushf
rcrl
xchg
sub
or
shl
fscale
ss
sub
aas
jo
loope
xchg
pop
ds
mov
adc
dec
push
jbe
shlb
push
inc
sub
inc
mov
lods
rclb
jge
fucomp
mov
add
fdivp
arpl
test
mov
mov
jo
negb
jne
sub
das
jo
jno
and
mov
ror
dec
aaa
imul
into
outsl
sbb
lret
xor
add
andl
mov
fs
out
mov
jns
outsl
negl
pop
sbb
pop
adc
lea
xchg
in
push
adc
call
mov
xchg
lods
loop
cmpsb
nop
fnstenv
aam
in
test
fbstp
sub
sub
inc
xor
inc
sbbb
jmp
sbb
mov
pop
cmc
ljmp
sub
rcll
aam
jp
sub
pop
lahf
js
xor
dec
data16
xor
pop
jmp
scas
stos
in
jecxz
and
fadds
mov
sbb
in
pop
pusha
push
sti
pop
int
fcomps
lar
jb
mov
int
jecxz
je
movsl
lret
xor
loopne
jl
or
and
dec
sbb
sbb
cmp
xchg
outsb
sbb
add
adc
cld
fwait
loop
push
lea
mov
in
stos
cmpsb
and
jp
dec
adc
js
xchg
es
out
cld
aas
aaa
addr16
sarl
push
loopne
mov
mov
push
jge
pop
push
pop
cmpsl
popa
jbe
lret
sub
mov
stos
fdivrl
sub
lods
xlat
cld
sub
ja
xor
mov
loope
mov
outsl
jecxz
mov
das
es
stc
lcall
and
maxps
push
sar
and
inc
jne
pop
cmp
enter
insl
sub
lret
push
cmpsb
fsubs
out
cmpsl
push
pop
mov
stos
movsb
cmp
out
dec
imull
cmp
enter
cmpsb
into
fsub
mov
insb
lcall
nop
setbe
lods
lods
sbb
pop
dec
lret
cmp
fidivs
nop
out
es
out
into
push
ret
push
cmp
cwtl
mov
cs
add
fcomps
push
or
mov
mov
push
ret
ss
je
mov
jns
mov
and
aaa
dec
ja
mov
cmp
and
adc
test
inc
aam
outsb
or
sub
inc
xchg
mov
xchg
in
dec
ja
jg
mov
dec
xor
pop
pop
sbb
or
lods
enter
inc
fists
inc
adc
loope
adc
cmp
movsl
mov
mov
sub
jae
mov
mov
in
pop
add
and
mov
jnp
call
cmpsb
pop
incl
shl
rorb
push
mov
mov
pusha
sub
leave
mov
cli
or
sti
or
fsqrt
xchg
je
sbb
test
mov
pushf
jne
imul
dec
inc
iret
xchg
scas
es
mov
mov
pop
stos
sub
aas
xor
andl
lds
mov
xchg
data16
jne
std
je
int3
push
xor
pop
ja
dec
cmp
mov
adc
mov
sti
and
sarb
pop
ds
mov
ret
ss
sbb
aad
shl
jmp
aam
jge
addr16
negb
rcr
mov
das
je
cld
jmp
cmp
fsubp
fdivrl
dec
mov
frstpm(287
and
push
enter
lea
xchg
incb
push
fsubrs
push
cbtw
add
adc
jmp
sbb
inc
pop
fwait
mov
cli
jns
out
test
sub
pusha
gs
mov
cltd
push
sbb
pushf
xor
push
jge
inc
negb
xchg
xor
aam
push
jl
push
test
jne
xor
xchg
repz
mov
sub
cmpsl
rclb
rcrl
mov
lock
popl
jmp
pop
pop
xchg
insl
nop
fwait
test
push
das
inc
cmpsb
lock
xchg
jecxz
jno
call
lea
andb
mov
cmpsl
pop
jo
adc
dec
or
cwtl
sbb
sbb
cs
adc
cmpsb
jbe
add
push
and
mov
pop
pop
es
aas
clc
sub
subl
pusha
adc
dec
and
add
scas
js
add
icebp
fisttps
pusha
mov
or
daa
dec
test
shl
xchg
adc
loope
xor
incb
and
lahf
pop
and
inc
cmp
cmp
aas
cwtl
movsb
push
out
and
adc
cmpsl
jbe
lods
push
xchg
lods
vandnps
mov
jle
repz
sti
or
and
or
rolb
sarb
pop
addr16
mov
in
lret
clc
jb
jb
stos
inc
outsb
outsl
clc
pop
dec
idivb
test
mov
icebp
push
addl
mov
in
gs
or
mov
sbb
jg
push
enter
jne
stc
xor
fwait
mov
icebp
mov
imul
or
sub
loopne
je
xor
call
mov
cs
sub
xor
out
sbbl
int
test
test
push
xlat
push
cmove
adc
lods
dec
xchg
add
adc
xor
daa
cmp
loopne
xchg
cmp
repz
movsl
gs
cmp
leave
or
push
xchg
or
add
jecxz
cmp
push
adc
leave
jle
scas
pop
pop
push
out
sbb
inc
xor
xor
xor
xorl
icebp
cs
mov
in
sbb
fcoms
lahf
mov
adc
cmp
fisttpl
addr16
fsubr
dec
ficoml
sarl
jg
test
dec
xchg
mov
add
loope
int3
cmp
push
mov
push
cmpsl
pop
mov
je
cmp
rcl
dec
mov
push
xchg
or
mov
adc
mov
mov
xlat
add
or
divl
daa
out
test
mov
les
shr
sub
in
std
out
lret
push
jae
xchg
enter
jmp
pop
push
jb
int3
pop
stos
xor
push
xor
lods
nop
pop
sub
fcomi
push
sub
hlt
jne
inc
lret
das
scas
or
push
and
movsl
cmp
inc
and
ss
mov
mov
in
push
das
lock
mov
push
jns
xor
ss
jno
fcoms
adc
bound
lcall
jecxz
cmp
mov
ss
ret
jge
pop
or
sbb
mov
inc
sti
jnp
inc
mov
inc
inc
pusha
lcall
push
leave
insb
and
jg
leave
ds
mov
pop
jnp
out
mov
push
cwtl
mov
lds
js
inc
dec
pop
mov
icebp
jle
inc
lock
sub
popl
cmp
mov
jbe
push
inc
xor
dec
lods
dec
jge
push
and
sbb
imul
mov
and
test
imul
lods
mov
jnp
scas
dec
ljmp
rcrl
xchg
xor
sbb
outsl
pusha
jecxz
jecxz
pushf
fsubrl
aaa
adc
jge
sbb
int
loope
cmp
aam
ds
dec
int
jge
daa
ss
incl
ds
stos
js
mov
outsb
sbb
les
inc
js
popa
icebp
adc
dec
repnz
int
xorl
jae
into
fisubl
dec
jo
mov
cmp
pop
xchg
in
mov
in
or
int3
shll
jnp
dec
mov
dec
cmpsl
shrd
dec
sbb
push
sahf
mov
rcll
pop
adc
es
dec
cmpsl
cmp
mov
aad
in
ljmp
jne
fnstcw
aas
outsl
jbe
movsb
clc
and
xchg
mov
leave
int3
mov
out
int3
enter
mov
sub
inc
push
mov
push
cmpsb
in
cmp
test
push
pop
cmp
pop
cmpsb
mov
add
ficoml
je
test
int3
cmp
rcll
repnz
push
adc
push
insb
js
add
and
incl
lds
mov
xchg
pop
cld
aam
push
or
push
xchg
add
or
test
mov
mov
clc
das
and
aas
call
cmp
lock
jg
fst
add
mov
pop
or
inc
jg
addr16
and
fdivrp
add
test
add
out
mov
out
je
sbb
imull
arpl
clc
aas
xchg
pop
andb
popa
mov
ret
or
nop
sar
mov
jae
jns
subb
dec
cmp
add
lds
into
cmpsl
int
mov
fs
rcr
pop
ret
lock
and
mov
bound
or
mov
xor
test
sbb
xor
rcrb
push
in
jle
popf
lret
jns
out
jne
jbe
lahf
clc
sahf
inc
lods
je
int3
jb
xchg
xor
xchg
pop
enter
mov
xchg
mov
lret
and
mov
imul
loope
pushf
sbb
gs
cld
mov
mov
out
mov
out
rol
push
popf
inc
mov
xchg
scas
out
pop
notb
push
es
jg
mov
insb
jmp
popa
movsb
mov
popa
loope
push
push
insb
cld
sub
lods
leave
rorb
add
shll
loope
data16
int
push
bound
pop
push
aam
lods
fcomps
jae
mov
pop
sbb
mov
test
and
aaa
cmp
loope
mov
dec
jne
shrb
dec
jo
aas
leave
mov
jmp
adcb
mov
dec
rcrl
mov
xchg
lea
popa
mov
dec
mov
push
inc
das
cmp
xchg
out
mov
int3
sub
pusha
es
fmuls
pop
cs
inc
sub
inc
addr16
into
push
lret
inc
or
jmp
mov
inc
and
js
xchg
dec
sub
iret
lods
jae
in
pop
sub
rclb
push
pushf
dec
out
push
xor
xchg
mov
sti
fcomi
jp
loop
adc
add
test
add
repz
cwtl
sti
sub
repz
xchg
dec
push
scas
test
or
inc
in
daa
or
lods
lods
sub
stc
lret
dec
mov
enter
js
add
dec
loope
lahf
pop
mov
popa
push
or
sub
mov
mov
test
int
mov
pushf
xadd
cs
sub
sahf
inc
fstpt
lahf
fisubs
fisubrs
sub
sub
jne
inc
ret
movsl
xor
fdivrs
xor
mov
cmc
outsl
mov
and
les
lret
cmp
paddusb
mov
stc
pusha
lret
aam
jbe
adc
and
lret
mov
lret
xchg
xor
in
or
das
fimull
test
xchg
xchg
int3
jle
xchg
ficoms
cltd
xchg
ja
sbb
dec
xor
inc
adcl
fs
lea
pop
push
and
xchg
pop
ja
and
lcall
ljmp
imul
push
push
je
push
repz
jbe
mov
sub
and
and
repz
and
jno
adc
out
pop
push
mov
mov
adc
add
loop
jnp
pushf
enter
fisttpl
scas
sub
cmpb
repnz
ret
mov
movb
jne
push
out
bound
dec
inc
insl
xchg
pop
or
out
sbb
push
add
fucomp
mov
or
jg
out
out
popf
cmp
out
pop
xor
sub
xor
aam
mov
inc
rorb
add
movsb
jno
add
sbb
mov
sub
test
xchg
ret
mov
xchg
sub
sbb
xor
dec
rcl
out
or
cld
push
add
mov
or
repz
shlb
mov
scas
pop
add
push
lea
mov
int3
cld
sub
dec
test
mov
mov
push
sbb
loopne
adc
and
or
or
cmpsb
lock
cli
out
hlt
pop
push
inc
fstpl
pop
test
mov
sub
decl
add
jmp
sbb
jmp
bswap
pop
pop
pop
aad
jle
sub
das
push
mov
sub
push
pop
iret
insb
sar
sbb
xchg
popl
test
outsb
addl
je
and
xor
adc
outsl
xor
sbb
xchg
jle
cmp
int
and
cmp
sub
pop
lock
stos
test
test
sub
jmp
lea
fbstp
cmp
mov
leave
insb
or
fisttps
cmp
push
push
fwait
loope
loop
test
andl
call
mov
ja
out
iret
hlt
into
cmp
push
adc
int3
adc
dec
outsl
mov
xlat
xor
adc
ret
and
and
mov
fcoml
sbb
push
jnp
in
jmp
sbb
sub
jge
das
mov
mov
mov
pushf
xchg
push
fdivl
cmpb
addr16
mov
hlt
add
mov
or
fstl
stos
in
mov
push
call
into
les
add
sub
push
imul
push
in
scas
xchg
idivb
mov
addr16
sbb
dec
dec
push
insl
dec
cmc
sub
push
mov
or
xor
or
cmpsb
stc
rcrl
rcrb
mov
stos
jle
imul
imul
leave
push
jb
rorl
in
lods
popf
cli
push
inc
sub
icebp
cmp
stc
add
sub
xor
hlt
ror
jp
mov
int3
test
jo
daa
lcall
and
ret
push
mov
ss
out
das
push
test
or
cmp
xchg
cld
out
cmp
inc
push
stos
cmp
push
pop
jbe
pop
push
dec
clc
push
aaa
sub
cmp
mov
pop
lahf
push
fdivrs
inc
sbb
fisubs
stos
nop
adc
push
and
inc
xor
mov
inc
dec
hlt
push
int
xchg
dec
or
sbb
outsl
ficoml
fistps
or
push
adc
ljmp
jne
icebp
and
pop
push
fs
add
xor
push
or
sub
out
inc
ss
pusha
lods
clc
lea
push
stos
fwait
nop
in
hlt
mov
cli
outsb
xchg
mov
lods
daa
adcb
cmp
and
inc
mov
mov
mov
add
and
sbb
stc
aas
push
sti
fisttps
jmp
insb
inc
dec
dec
loopne
adc
aaa
sub
pop
loope
inc
ja
rcll
and
lret
out
push
xchg
mov
fstpl
sarb
pop
std
aas
adc
inc
jg
out
xor
lods
xchg
push
lahf
dec
sub
fldcw
mov
xor
fiadds
push
mov
mov
mov
jle
cmc
pop
adc
lret
xor
lahf
xor
jmp
dec
fs
push
pop
sub
test
shrb
xchg
jl
int
jmp
pushl
push
insl
xorl
jbe
and
jle
cltd
icebp
xchg
push
xchg
xlat
cs
add
inc
loop
adc
loopne
andb
pop
mov
out
push
adc
cli
mov
dec
sbbl
mov
aam
inc
pop
sbb
ja
mov
inc
popf
add
lcall
and
ja
sbb
test
jno
cmp
es
xor
jb
push
lret
mov
cmp
mov
push
sahf
movsb
push
push
sarb
popf
pop
jnp
xchg
out
lds
bound
rcl
push
fdivp
sub
out
mov
ret
movb
adc
xchg
inc
adc
ljmp
pop
stc
out
lret
push
aas
fwait
mov
adc
daa
cwtl
pop
mov
test
push
dec
icebp
lcall
xchg
or
call
stc
inc
fcoml
popf
sub
popf
sub
push
add
aaa
stc
and
push
insl
sbb
test
xor
fimuls
popfw
shll
repz
pop
mov
idivb
cmp
aad
mov
xlat
ret
fldt
mov
cltd
adc
ret
out
mov
rolb
mov
lds
sti
call
or
rorl
pop
mov
test
es
jecxz
pop
in
repz
and
lea
jo
xor
cmp
cmpl
ja
jne
hlt
or
mov
rolb
push
cli
xor
fwait
inc
jo
adc
mov
xor
stos
bsr
sbb
cmp
or
push
mov
ss
leave
push
pop
das
lret
enter
lock
test
bound
ljmp
cmp
and
inc
dec
outsb
sbb
sbb
sbb
and
cld
notb
leave
stc
mov
test
mov
adc
lds
push
lock
icebp
addb
scas
xchg
fcompl
aad
mov
lds
jnp
lods
jle
imul
je
and
sbb
rorb
adc
out
imul
cltd
push
ja
test
push
sub
ds
sub
pop
sbb
mov
or
es
js
stos
int3
pop
pushf
push
imul
mov
xor
cmpsl
aam
mov
shl
fwait
daa
cmc
mov
jl
dec
shll
add
jne
hlt
js
cli
orl
mov
dec
cmp
cmp
js
cmp
adc
sti
iret
test
in
sarb
ja
add
pop
arpl
or
cmp
push
dec
xchg
push
cmp
fiadds
xorl
test
push
inc
test
lea
repnz
mov
sbb
xchg
push
cmp
ret
sbb
xchg
or
fsts
in
mov
mov
push
icebp
jg
xchg
cmpl
cmp
and
subl
jg
xor
fs
test
ljmp
mov
rorl
rol
xlat
sbb
jbe
mov
mov
or
loopne
in
cmp
mov
jbe
sbb
xor
adc
popa
popl
loope
sbb
pop
pop
pop
mov
mov
fscale
xchg
dec
test
pop
mov
jns
lret
jmp
or
push
pop
dec
shlb
jb
inc
xchg
adc
xor
mov
push
adc
test
nop
adc
stos
fsubrl
unpckhps
dec
out
loop
mov
mov
pop
imul
xchg
sub
sarl
pop
je
or
or
ror
mov
xchg
in
aas
and
fwait
cs
in
dec
out
mov
in
inc
js
int
push
push
outsb
add
out
add
repz
movsl
std
movsb
dec
mov
jl
subl
push
faddl
mov
mov
insb
lea
adc
mov
xchg
negl
jge
fs
jecxz
sub
or
mov
lods
jns
and
jge
pusha
daa
push
inc
stos
push
push
sbb
xorb
fistpll
adc
pop
mov
sub
jb
ss
and
sbb
xor
pop
aas
scas
lock
dec
fidivrs
test
sbb
lret
or
scas
scas
xor
xor
push
cmp
mov
sub
cmpsl
scas
lahf
adcl
lret
mov
orb
push
arpl
xor
mov
mov
jnp
fsubrl
pop
mov
test
push
lock
dec
push
js
pop
add
movsb
outsl
sub
cmpsl
sarl
add
mov
out
ret
jbe
out
fcoml
neg
jp
xchg
sbb
mov
adc
lds
loop
jp
mov
mov
std
xlat
ffreep
jmp
push
push
mov
xlat
mov
xor
pop
js
and
inc
iret
testb
shrl
xor
dec
add
pop
fstps
and
lret
xchg
and
jb
jo
lahf
out
sub
fistps
mov
rcl
fbstp
scas
clc
imul
repnz
in
scas
mov
lahf
lahf
gs
jp
pop
rorb
or
je
loopne
test
sbb
out
or
iret
je
mov
addr16
negb
fidivrl
mov
or
add
add
ja
lahf
pushf
mov
mov
sub
out
jae
dec
out
pop
mov
jae
add
mov
xchg
push
sub
lods
clc
pushf
test
test
aaa
sbb
cli
repz
shll
inc
aas
lds
xchg
call
lea
xor
adc
xor
jnp
dec
or
mov
mov
div
std
add
daa
mov
xor
arpl
pushf
mov
pushf
sbb
ss
into
lret
xor
jl
lahf
pop
pop
insl
in
aam
or
fwait
push
out
fwait
push
call
adc
push
or
fdiv
xor
fneni(8087
in
mov
movb
enter
cmp
fmull
sub
test
jge
cltd
sar
push
jbe
mov
or
sub
imul
pop
jecxz
insb
fnsave
cltd
mov
pop
jg
bound
je
xchg
mov
xchg
mov
cmovbe
popf
and
cmp
fldl
xor
lcall
adc
cmp
push
mov
lods
sbb
fmull
into
cwtl
repz
cwtl
insb
mov
jnp
insb
xchg
mov
out
push
lock
cmc
mov
sbb
push
clc
scas
mov
and
or
xchg
push
push
lcall
cmpsb
repz
adc
xchg
out
xor
or
cmp
imulb
aam
in
pop
sub
mov
mov
lock
dec
enter
cli
xchg
mov
mov
jnp
pop
dec
cltd
insl
fcmovu
subb
or
sahf
and
xchg
iret
fbld
lods
inc
inc
jae
sti
push
push
jecxz
inc
ds
mov
mov
ja
or
jmp
pop
sub
flds
aaa
mov
xor
mov
mov
out
test
dec
fcom
pusha
inc
push
mov
std
sbbb
sub
dec
sarl
xchg
arpl
int
sub
iret
jno
jbe
ss
inc
mov
movsb
inc
xchg
mov
pusha
rclb
push
mov
cwtl
mov
je
pop
xchg
jb
mov
loope
cltd
shll
mov
pushf
xor
cld
cmpsb
inc
sbbb
dec
sbb
sbb
mov
jno
cmp
ds
adc
repz
mov
sub
xchg
repnz
ljmp
rorl
insl
mov
cmpsb
bound
mov
fcmovne
out
les
jb
pop
add
mov
xor
adc
inc
pop
fistpll
mov
lahf
loope
ss
and
roll
mov
addr16
icebp
jns
cmp
out
leave
aas
leave
pop
repnz
pop
jp
pop
dec
inc
fsubl
lds
in
data16
out
and
jb
xor
cli
nop
aam
es
sub
sbbl
cli
les
das
mov
int
out
pop
testb
pop
pop
es
jne
add
gs
push
ret
lods
test
orb
shll
shlb
cwtl
sbb
or
inc
dec
in
pop
dec
and
inc
mov
cmp
xchg
jbe
mov
mov
insl
out
sahf
jecxz
out
xor
and
test
das
mov
push
add
inc
pop
mov
cwtl
stos
cld
ret
and
mov
sub
in
mov
addr16
testl
add
mov
mov
dec
lock
lods
arpl
les
shrb
insl
or
js
add
xchg
iret
adc
pop
inc
aaa
out
sub
out
mov
cli
add
cwtl
pop
mov
xchg
add
mov
xor
or
testb
push
subb
xor
inc
ret
mov
fldenv
and
insb
xchg
xor
rorl
mov
repnz
nop
sbb
arpl
cwtd
in
push
xchg
ss
push
shl
xchg
aaa
dec
dec
movsl
pop
xchg
aam
cli
mov
arpl
adc
into
push
xchg
xchg
mov
sub
push
jns
out
jmp
roll
dec
or
mov
or
xor
add
push
inc
mov
cmp
pop
lret
pop
cld
xchg
mov
cwtl
dec
stos
push
mov
jmp
enter
mov
adc
notl
jg
jmp
mov
fst
scas
hlt
sbb
inc
xchg
enter
in
mov
dec
outsl
adc
cmc
xchg
and
in
out
shlb
lcall
xor
sbb
loopne
cmp
dec
fildll
jle
jb
lea
ret
or
or
enter
pop
dec
cli
in
mov
test
insl
fisttpl
insl
in
mov
and
cmp
outsl
shll
sub
and
jp
pop
std
daa
lahf
xor
or
pop
lods
push
pop
ja
mov
loope
sub
mov
pop
jmp
cs
out
jmp
fsubp
and
pop
adc
pushf
cmpsb
or
cmc
dec
fstpl
sbb
test
pusha
orb
jmp
jg
ss
lcall
mov
fisubrs
dec
xor
lea
mov
ret
arpl
insl
jbe
push
imul
fists
js
jnp
add
mov
xor
xchg
icebp
xor
jnp
pop
imul
dec
in
popa
mov
pushf
imul
push
inc
sahf
aaa
cwtl
iret
dec
mov
or
scas
stos
add
iret
mov
iret
ljmp
xor
cmp
fists
faddl
and
mov
sub
push
gs
addr16
adc
xchg
fdivl
rorb
xchg
dec
sub
xchg
lret
shlb
mov
fisttpll
in
sbb
xchg
insl
enter
sub
cld
rcrb
cmp
adc
dec
cs
inc
jb
add
dec
mov
cmc
repnz
inc
shrb
sbb
or
and
mov
stos
mov
sarb
ljmp
popf
mov
jbe
xadd
movsl
in
popf
jl
jp
leave
pop
iret
mov
cmc
das
daa
stos
mov
pop
push
fsub
cmp
outsl
sbbb
and
ds
shll
fdivrs
imul
sti
adc
mov
ss
mov
cmp
movsb
lods
psrlq
mov
nop
aas
push
mov
movsl
test
mov
clc
inc
cmpsb
sbb
aas
and
inc
jno
inc
pop
adc
lahf
push
call
push
sbbl
inc
iret
ja
jo
cmp
aam
xor
or
push
fists
mov
enter
adc
aas
add
in
pop
mov
sbb
push
jmp
sub
jmp
xor
gs
pop
pop
dec
inc
btr
sub
or
in
mov
add
dec
pop
je
movsl
sbb
es
aad
jmp
loope
xor
aas
mov
lret
lods
push
imul
jl
cmpsl
mov
adc
aas
ret
bnd
xchg
shll
out
or
imul
repnz
inc
and
rclb
fsubl
mov
test
pop
inc
xor
pop
jo
aaa
filds
sub
std
mov
lods
mov
lahf
inc
fwait
cmc
cmpsl
add
mov
testb
in
cltd
mov
shlb
test
dec
ret
cmp
inc
fidivrs
int
jo
shl
adc
sub
lock
adc
rcll
and
test
pop
sub
adc
adc
imul
dec
fstpl
stos
mov
sub
insl
pop
xchg
adc
sbb
jns
add
cmp
adc
pop
mov
add
and
add
lea
sub
sti
cmpsb
pop
and
add
das
jle
test
daa
lret
jge
jecxz
dec
pop
loop
aaa
jbe
mov
sbb
stc
xorl
insb
cmp
insl
aaa
iret
insl
mov
push
xchg
push
mov
pcmpgtd
inc
das
clc
adc
push
cmp
or
call
out
and
mov
aam
pop
mov
add
int3
xchg
sti
cltd
scas
rclb
sbb
outsb
xchg
sbb
fildl
xor
out
jne
adc
in
test
lcall
movups
sbb
and
pop
xor
mov
jmp
aas
mov
ret
movsl
dec
xchg
xchg
push
and
inc
xchg
adc
adcl
mov
cmp
xlat
aad
ljmp
bound
ret
mov
xchg
cmp
je
fstps
pop
jns
cmpsb
cltd
adc
aas
dec
mov
or
data16
lcall
mov
in
fdivrs
aad
jno
sub
jg
pop
or
inc
lods
xorb
jae
mov
ds
add
adc
sub
jecxz
std
lock
sub
push
into
push
fwait
sub
mov
sbb
mov
fstps
inc
adc
jo
and
sub
jne
mov
in
pop
outsl
cwtl
and
xorl
xchg
scas
lcall
xor
add
pop
mov
sbb
push
or
xor
sbb
sub
out
cmp
stc
cmp
jp
pop
mov
and
repnz
mov
js
sub
fcmovne
jno
and
inc
pushf
push
push
out
in
pop
aam
inc
xchg
xor
ret
inc
aaa
push
inc
fadd
sub
and
bswap
out
mov
xchg
cmp
push
xor
or
cmpsl
cmp
xchg
sub
jecxz
mov
jnp
das
insl
retw
mov
cltd
fdivrl
pop
add
jecxz
cs
adc
sbb
mov
aad
mov
sub
pop
stc
scas
loop
mov
mov
inc
fisttpll
lods
movsb
jecxz
push
mov
mov
scas
cmp
dec
inc
shll
sub
inc
dec
pop
aaa
mov
xchg
mov
add
and
mov
leave
mov
add
out
test
in
insb
jb
dec
out
int3
mov
mov
xchg
loopne
icebp
jle
dec
cmp
loope
cmc
mov
mov
out
mov
js
pusha
dec
decl
mov
pusha
cmp
lods
es
sahf
cmp
adc
xor
psrld
sbb
stc
pop
in
popf
lcall
fsubrl
xchg
push
insl
ds
cmp
call
mov
mov
clc
fcmovbe
push
cmp
jmp
mov
jnp
ljmp
add
dec
sbb
push
cmpb
dec
xchg
mov
shl
add
dec
push
or
xchg
aaa
cld
lahf
stc
test
push
xor
jg
ret
test
cmp
out
std
loope
popa
pop
push
aad
mov
dec
add
call
or
leave
repz
ret
es
xchg
jecxz
scas
push
in
mov
adc
test
ja
mov
pop
mov
aaa
filds
jmp
ss
fcomip
in
testl
xchg
popf
or
jnp,pt
push
stc
sub
sarb
mov
xchg
jle
pop
lods
mov
insl
fs
aas
pop
fstps
insb
pop
xlat
sbb
jae
sti
sarb
lea
mov
arpl
cli
ret
dec
lds
add
and
add
xor
dec
adc
or
push
jecxz
sub
xor
pushf
lret
xor
cmp
add
xor
and
or
xchg
aas
xchg
cs
jno
daa
pop
xchg
insl
inc
inc
ljmp
xchg
aad
daa
or
loopne
int
mov
adc
inc
dec
sub
movsl
in
testl
test
fwait
int
dec
jns
dec
cwtl
push
insb
or
ss
xchg
adc
or
arpl
jae
fisubs
adc
sbb
sub
push
out
jbe
xor
cmp
mov
cli
push
aaa
outsb
push
outsb
cld
in
sbb
mov
test
pusha
jge
add
addb
push
pop
inc
hlt
mov
fstps
shlb
clc
and
inc
push
add
cmpb
cmp
decb
or
ficoml
sbb
cmpsl
popf
shr
in
fidivrl
or
pushf
mov
mov
pop
sbb
adc
and
adc
cmpsb
xor
scas
scas
lea
xor
or
movsb
sub
sbb
hlt
xor
mov
adc
scas
inc
inc
pop
std
sub
jecxz
and
add
xlat
iret
clc
jns
fucom
or
sub
push
addb
jmp
xchg
out
add
adc
lret
sbb
add
mov
jo
call
pushf
mov
aas
sbb
mov
cmc
aam
incl
stos
jle
fdivs
pandn
in
mov
pop
sub
jo
xor
sbb
inc
test
and
mov
or
adc
aas
lcall
or
sub
rolb
adc
aam
mov
xchg
and
add
lcall
fistl
ficoms
enter
xor
repnz
adc
sahf
cs
cmp
pop
xor
jbe
adc
or
push
repz
cmp
loope
adc
out
fnsave
xor
fdivrp
cli
out
stc
mov
in
xor
in
test
cltd
repz
mov
cmp
cltd
cwtl
dec
mov
addr16
icebp
xchg
xchg
xchg
sar
stc
jl
mul
fldenv
call
sahf
test
shlb
popa
add
cmc
xor
xor
jns
mov
jmp
adc
out
into
dec
or
sub
lcall
outsl
nop
addr16
and
xchg
inc
jecxz
adc
data16
hlt
popf
cli
mov
das
pop
fidivrl
cs
rolb
sub
das
mov
insb
loope
fsubrp
clc
fcompl
inc
pop
les
mov
add
add
adc
xor
add
xor
pop
dec
outsb
mov
pop
inc
mov
push
mov
adc
data16
rcrl
push
call
sti
and
mov
cli
cmpl
and
sub
in
or
jmp
xchg
aam
sbb
in
and
out
lahf
repz
pop
cmp
flds
xchg
or
imul
dec
mov
pop
aad
xchg
js
sbb
mov
sub
dec
lret
mov
shlb
xchg
mov
stc
sahf
or
js
and
aam
jmp
mov
mov
push
add
pop
xchg
gs
pop
and
fwait
call
clc
xchg
inc
lahf
int
or
xor
stos
add
inc
fs
fnstenv
dec
lahf
movsb
int3
jne
shlb
inc
insb
ljmp
adcb
rcrb
inc
imul
arpl
mov
arpl
sub
pop
push
js
mov
pop
movsb
mov
push
enter
push
in
xor
and
repnz
fpatan
cmp
negb
negl
inc
jbe
pop
and
mov
fiadds
mov
es
xor
pop
and
popf
test
icebp
std
out
popf
fcoml
int
in
sbb
sub
xor
sarb
push
in
jbe
aad
das
push
jp
adc
xchg
insb
or
out
and
dec
mov
sub
pusha
lahf
sarl
pop
xchg
ret
daa
push
jo
in
scas
pop
pop
insb
xor
sbb
adc
push
flds
adc
or
stos
push
sbb
or
add
lods
test
pop
lods
jl
mov
cmp
push
fcmovnb
inc
mov
and
les
inc
testb
movb
loop
movsl
in
mov
cs
push
dec
test
jbe
in
movsb
cmp
lea
jge
or
jb
div
clc
sub
and
cmpl
pop
test
jmp
cmpsb
or
fwait
adc
scas
push
mov
pop
push
cmc
mov
lds
xchg
imul
xchg
sbb
adc
or
int3
faddl
and
sub
jno
les
loope
in
out
jmp
cmp
inc
inc
into
loopne
test
sub
sbb
or
loopne
jp
ja
pop
dec
scas
ds
shll
test
jo
sbb
lret
aad
adc
mov
mov
movsl
nop
scas
mov
test
xor
add
cmp
mov
mov
push
aaa
add
cwtl
sub
rorl
pop
cmp
sub
mov
hlt
jne
mov
dec
add
roll
cmp
data16
adc
push
mov
xor
aaa
mov
xchg
sbb
scas
inc
and
sti
icebp
cs
in
lock
xchg
fiaddl
adc
or
push
hlt
sub
adc
clc
xor
and
adc
jo
cs
out
or
push
icebp
clc
lcall
cwtl
mov
dec
jno
in
cld
and
stos
jae
mov
jnp
xchg
xor
dec
jecxz
xchg
adc
xchg
push
cli
sub
loop
mov
repnz
mov
and
out
loopne
insb
pop
mov
mov
and
mov
addr16
mov
into
xlat
jp
shlb
in
mov
aam
jne
faddl
pop
pushf
or
jbe
xor
movsb
inc
pop
push
stc
mov
cmpsb
das
sub
jge
ret
out
popa
test
aaa
mov
jge
pushf
ja
pop
insb
mov
popf
push
sbb
push
lret
fbld
fidivl
clc
and
popa
pop
jg
cmpsl
repz
push
cmpxchg8b
arpl
fs
adc
int3
fwait
adc
xor
mov
dec
xchg
iret
xchg
movsl
pop
dec
mov
mov
loop
enter
lahf
pop
push
nop
cmp
cmp
pop
iret
ja
jl
pop
std
pop
jo
pop
add
ss
das
adc
rcl
pusha
ret
pop
insb
data16
sbb
inc
mov
push
mov
mov
sti
stos
fisttps
into
push
bound
hlt
xchg
es
sbb
sbb
jge
insl
je
je
sub
in
gs
hlt
pop
xor
cmpsl
mov
or
xor
mov
lea
push
and
add
jge
icebp
out
mov
push
bound
mov
push
inc
and
addb
ror
push
mov
pop
loope
xchg
inc
sbb
daa
xor
fsubrp
popa
xlat
adc
mov
mov
or
or
insb
jp
fsubs
jp
mov
xor
pop
in
mov
in
insl
insl
adc
mov
test
fs
movsl
and
sbb
add
mov
inc
out
int3
cmp
ds
sbb
inc
outsb
xchg
in
cmp
test
aam
mov
ljmp
dec
or
insl
lcall
xor
sub
mov
mov
in
in
ss
inc
stos
sub
add
shlb
xchg
cmpl
in
mov
lret
xor
orl
test
daa
js
push
cli
fmuls
in
ja,pt
inc
add
jno
sti
lcall
rorl
jmp
jns
aaa
in
daa
int
ds
fildl
xchg
jns
xor
or
jbe
stos
iret
jmp
clc
cmp
xchg
or
pusha
repnz
adc
lds
cld
fcmovu
aaa
mov
loop
xchg
xor
repz
xchg
and
aaa
lods
lock
push
or
jmp
push
cltd
loop
fucomip
adc
lret
sbb
sbb
add
mov
jmp
test
test
int
pop
pop
push
lea
pop
js
jge
dec
mov
jle
push
sbbb
jae
fcoml
cmc
pop
ret
sbb
mov
inc
sub
push
aam
shlb
lods
arpl
xor
dec
adc
xchg
dec
or
mov
insl
loope
out
dec
dec
pop
loopne
adcl
xchg
adc
roll
mov
xor
xchg
shll
adc
ret
jl
jb
test
lret
fnstsw
lds
push
jae
xchg
sub
ds
gs
enter
outsl
and
or
sub
lret
sbb
pop
push
hlt
ss
jmp
les
inc
in
and
hlt
cmpsb
out
cmp
adc
mov
lret
mov
decl
enter
add
or
sub
push
push
sub
cmp
or
mov
xchg
pushf
lock
orl
cmp
pop
mov
loopne
sub
push
jp
jge
outsl
pop
es
js
pop
adc
mov
push
and
mov
push
mov
adc
lock
not
jmp
jmp
popa
push
aam
lods
shlb
cmpsb
scas
jmp
fisubrl
push
push
negb
adc
jnp
data16
test
jae
clc
adc
stc
push
rcll
xor
mov
sti
ret
out
and
xchg
ret
stos
dec
xchg
int
jg
call
movsl
xor
mov
fwait
mov
pushf
sti
in
pop
rorl
lods
int3
cld
sahf
push
and
movsb
jmp
je
cmp
mov
and
das
in
push
push
daa
inc
or
mov
push
lock
jmp
scas
inc
push
xor
test
mov
jp
test
xchg
xchg
test
imul
dec
inc
imul
sbb
sub
jecxz
add
cmpsl
outsl
shlb
stc
iret
in
fs
insb
jg
cmc
sbb
inc
aaa
or
or
iret
addr16
add
mov
sub
jno
mov
testb
shll
insl
sbb
sti
jae
dec
das
lcall
xor
or
repnz
sarl
add
jg
sub
sub
iret
mov
ret
dec
nop
push
adc
jmp
pusha
push
mov
jae
xlat
dec
xlat
fwait
jg
and
xchg
aas
add
ss
int3
stos
lods
xorl
pop
xchg
push
sbb
dec
hlt
pop
psubd
push
js
cld
dec
in
xor
pop
mov
icebp
mov
imul
mov
clc
cmpsl
gs
inc
lods
je
cltd
icebp
nop
rolb
xchg
sub
loop
es
push
pop
mov
push
push
incl
outsb
mov
sbb
imul
addr16
clc
gs
mov
in
dec
pop
adc
mov
dec
repnz
ljmp
cmp
jae
cltd
out
stc
dec
data16
or
outsl
addr16
clc
shrb
mov
jae
jl
imul
mov
cmp
sub
lret
adc
in
dec
fcmovbe
mov
jne
loop
xor
mov
add
pop
andl
daa
push
lods
add
aad
push
pop
mov
sbb
popf
jg
aaa
and
mov
xchg
pop
outsb
inc
mov
mov
pop
pop
jmp
push
pop
movsb
push
les
xchg
popa
and
popa
arpl
jg
scas
jl
arpl
push
lds
jb
ds
sub
popf
sbb
add
in
xchg
pusha
mov
push
mov
mov
scas
pop
popa
mov
push
jnp
imul
lock
jmp
jne
inc
pop
mov
lea
mov
test
jge
mov
test
push
mov
cmp
cwtl
mov
lods
push
stc
add
pop
daa
ljmp
inc
mov
out
cwtl
ret
sub
xor
dec
aaa
push
adc
ja
lahf
jne
shl
insb
or
jb
cmp
adc
pop
int
orl
loop
test
mov
dec
add
sbb
ret
sbbb
push
pop
jo
js
ret
lret
cwtl
lock
fwait
lds
cs
mov
iret
mov
mov
shrl
jno
or
dec
pop
rorl
out
and
in
and
cli
add
and
xchg
aam
stos
shlb
gs
or
aam
insl
loope
enter
insb
ja
push
push
inc
push
loope
mov
xlat
dec
and
xchg
mov
in
stos
cmp
add
push
add
mov
push
test
test
ret
andl
out
inc
xchg
cmp
pop
ret
xlat
loopne
jb
int
cli
test
mov
pop
pushf
faddl
push
push
adc
or
jle
loop
pop
aas
into
popf
rcrl
dec
icebp
std
leave
mov
fldl
mov
pop
cmpsb
mov
xor
push
xchg
mov
insb
jno
test
lock
jae
mov
add
mov
jne,pt
lds
ss
addr16
and
jne
je
pop
add
adc
jg
lds
je
mov
loope
pmulhw
push
rcr
les
mov
inc
pop
and
js
cmp
xchg
pusha
call
and
jo
in
iret
dec
ret
clc
jbe
rolb
jo
sbb
fsubp
adc
shl
shll
xlat
pop
loope
xchg
ret
repz
push
and
idivb
sarl
cmpsb
add
mov
dec
cmpb
aam
push
sub
sarb
push
pop
out
das
jo
pop
lret
movsl
imul
cmp
dec
fisubl
cmpl
or
cwtl
sahf
mov
push
adc
mov
sbb
sub
inc
sub
push
or
outsb
insl
jmp
gs
cmpsl
fistpl
cmp
cmp
lock
aam
mov
scas
mov
std
into
adc
sahf
insl
cltd
adc
xorb
mov
sbb
cmp
subb
push
jg
xchg
loope
bound
lcall
pop
mov
fadds
adc
lock
cmp
jbe
pop
outsb
inc
xchg
sti
nop
aam
mov
ja
jmp
jg
outsl
enter
sub
jbe
pop
cmp
repz
outsb
mov
add
xchg
idivb
pop
cmp
imul
xchg
enter
mov
rcrl
outsb
repnz
cmp
pop
add
mov
push
fdivs
in
pusha
mov
shrb
mov
cmp
loopne
fimuls
xor
push
sub
or
shrl
insl
push
sbb
xchg
fistps
mull
fcoms
xor
scas
pop
and
es
cmpsl
mull
repnz
pop
jmp
je
scas
in
nop
loop
daa
sbb
insl
leave
mov
dec
mov
gs
daa
imul
popa
pop
in
sbb
adc
xor
xor
addr16
fdivl
lock
mov
add
push
jl
dec
popf
out
push
add
pop
push
inc
hlt
inc
shll
in
lds
push
hlt
lcall
cltd
mov
jl
mov
in
ss
ret
add
and
adc
fidivrs
mov
xor
jmp
mov
loope
fdivrs
pop
lret
ja
push
iret
insl
mov
fadd
adc
lea
sti
jnp
test
xor
repz
fwait
sbb
jge
lock
push
orb
enter
loopne
add
sub
scas
dec
add
and
xor
outsb
int
stc
pusha
hlt
out
sub
or
jo
test
dec
sarl
pusha
sub
aad
pushl
add
fmul
push
sbb
or
addr16
lret
lahf
addr16
ja
push
dec
in
mov
sub
lret
inc
sbb
out
sub
inc
cld
imul
fsubs
adc
mov
imul
fisubs
btc
and
scas
repz
lds
jns
push
or
repnz
or
cmp
stos
ficoms
cs
scas
mov
jge
mov
es
jb
out
lea
gs
mov
sets
mov
fs
jl
pop
jp
jo
xor
xchg
mov
adc
xchg
or
ret
push
jl
push
cmpsb
stc
sub
ret
popa
pop
movsb
adc
addr16
lcall
or
daa
daa
repnz
cmp
pop
or
pop
cmp
inc
iret
or
cwtl
cmpsl
sub
movsl
ja
sbb
in
cli
fisttps
hlt
add
insb
cli
mov
dec
stos
gs
and
clc
adc
sbb
out
in
jne
std
pop
stc
sti
sbb
aam
rcl
lret
call
imul
fidivl
jge
xchg
mov
lcall
out
pop
adc
leave
jmp
adc
lock
xchg
mov
sub
ret
dec
xchg
jl
xor
mov
jbe
mov
and
lods
jmp
inc
mov
rorb
pop
stos
inc
imul
aaa
cs
mov
fwait
or
test
mov
stos
sub
jl
ror
leave
jnp
inc
jmp
pushf
xchg
iret
push
lds
xchg
sbb
push
pushl
sub
cmp
or
push
lods
push
fnstenv
push
mov
repz
pop
mov
cmc
js
popf
adc
dec
lcall
movsl
push
pop
mov
insl
xor
int
clc
cltd
lods
mov
stos
out
jae
stos
push
ja
in
pop
test
nop
jns
int
insb
pop
mov
leave
jnp
fs
hlt
dec
pop
imul
sbb
cmp
lret
inc
pop
call
and
ret
btr
repnz
shlb
mov
dec
cmp
push
mov
sub
sub
fisttps
sti
mov
sahf
loope
ret
mov
jo
pop
rcrb
out
je
insl
xchg
sub
fs
dec
inc
dec
push
pusha
pop
cmp
mov
ja
inc
push
movsb
lods
fstpl
or
or
pusha
fidivs
sahf
push
mov
adc
mov
mov
adc
and
cmpsl
inc
or
mov
mov
mov
iret
jg
je
xchg
and
mov
repnz
lds
cmp
imul
sub
pop
mov
lods
xor
push
psllq
add
sub
jo
inc
inc
or
fadd
xorl
sbb
xor
sbb
lods
dec
repnz
scas
pop
or
cmp
adc
adc
jl
mov
cwtl
inc
pop
mov
push
fs
inc
icebp
sti
mov
pusha
lods
mov
aad
dec
or
pop
cmpsb
xchg
aam
lods
inc
hlt
sbb
xor
pop
sub
je
jecxz
loop
dec
ds
push
inc
repnz
enter
in
testl
sub
mov
imul
pop
add
rorb
sarl
lret
push
mov
mov
lods
mov
mov
ret
aad
sub
add
cmp
movsb
addl
notl
push
mov
xlat
outsb
stos
sti
inc
jmp
call
and
jle
loope
adc
ficoms
mov
sub
scas
sti
mov
test
sahf
dec
sbb
fcompl
pushf
xor
dec
and
mov
sbb
or
ja
in
test
cld
sbb
inc
cld
dec
jecxz
sbb
mov
fscale
and
mov
and
sbb
addr16
mov
pop
adc
add
push
test
push
mov
mov
cmp
sbb
sub
dec
cltd
loopne
sub
pop
fs
test
aad
jecxz
mov
and
notl
sbb
mov
jp
push
movsb
pushf
jle
clc
fistps
mov
scas
rclb
test
bound
lods
jmp
sbbb
jmp
sub
mov
or
das
cmp
pop
mov
aad
pop
adc
loope
push
out
pop
cmpsb
imul
fnsave
inc
push
cs
pop
cmp
pop
sub
out
fisttpll
les
sahf
mov
push
xor
xor
cmp
adcb
mov
jo
cmp
fadd
ret
sbb
inc
adc
inc
cmpsl
mov
jmp
xchg
push
sbb
mov
inc
ret
lcall
mov
arpl
lret
sbbb
and
repz
cmpsl
es
jp
push
adc
pop
push
xor
popa
push
xchg
adc
nop
lahf
fldenv
imul
jbe
jl
rorl
mov
lea
jg
popa
test
pop
fisubrl
aam
push
add
out
shufps
xchg
call
fisubs
daa
imul
or
xchg
sahf
add
ljmp
les
cmp
loope
fiadds
sar
divl
test
pop
lds
pop
adc
arpl
sbb
mov
lcall
xor
test
inc
cmpsl
or
addr16
mov
mov
fdivr
sarl
ds
or
jnp
les
ror
sbb
mov
ja
fcomi
push
in
fbld
mov
dec
adcb
xchg
pop
daa
push
pop
sub
mov
xchg
cmp
aam
pop
sbb
repnz
push
dec
pop
xchg
ficompl
and
imul
jo
es
xor
jle
fistps
pop
xchg
mov
xchg
fs
ds
jo
sub
cld
add
jae
rcrl
xor
into
and
push
mov
cmp
loop
lods
or
fs
stc
movsl
out
jl
test
sarl
cs
jo
fcomps
dec
lea
test
adc
push
inc
dec
jge
sbb
inc
in
ret
mov
inc
addr16
into
sbb
pushf
mov
insl
in
xchg
lret
fcmovb
sahf
shrb
fidivs
xor
inc
fdivrp
or
xor
bound
mov
push
les
jmp
pop
dec
jmp
push
rorl
add
fimuls
inc
cs
mov
ficompl
jp
negb
mov
pop
push
int
mov
add
out
xor
xchg
into
int
jmp
add
adc
aaa
insl
dec
outsl
or
pop
jb
xchg
sub
and
popa
js
shrl
inc
movsl
pop
sub
push
mov
jg
mov
popf
cmp
push
dec
imul
cmc
adc
push
mov
push
out
dec
filds
bound
jp
mov
jb
push
lods
nop
xchg
adc
fs
adc
jg
jp
xor
movsb
std
pop
push
ret
fsubs
cs
test
adc
push
arpl
repnz
or
rolb
scas
pop
in
in
mov
mov
mov
shrd
lea
popa
push
sub
ds
dec
rol
repnz
popa
or
ret
imul
push
out
rorb
push
adc
sbb
mov
jbe
pusha
dec
in
aad
shlb
push
mov
dec
or
mov
mov
mov
stos
lods
mov
roll
int
xchg
int
lcall
xor
sbb
loope
jge
adc
xor
int
cld
xchg
push
jle
dec
lret
sub
mov
faddl
pop
popl
xchg
sub
aam
push
pop
das
imul
in
mov
xor
insb
es
dec
mov
lods
pop
fisttps
jb
shrb
mov
push
dec
adcl
cmpsl
shlb
in
pop
es
adc
test
xchg
and
pushf
or
adcb
or
add
mov
add
mov
movsb
bound
inc
mov
dec
loopne
sub
or
mov
or
xchg
stos
mov
or
rorb
sub
pop
sub
mov
jmp
ficoms
mov
data16
shll
lea
xor
pop
pop
cmp
lods
mov
testb
testl
loop
test
pushf
mov
or
pop
jb
stos
push
cmpsb
jae
adc
jge
xlat
notl
dec
and
jne
aaa
xor
jae
in
sbb
test
jbe
pop
add
pop
lds
test
shl
xchg
cmp
jns
and
jmp
fisttpl
push
xchg
cmp
sarb
fldt
arpl
adc
stc
fdivrs
push
aam
mov
addb
inc
cmpsb
pusha
test
out
ss
push
scas
sbb
insb
and
test
dec
push
or
rcrl
mov
outsl
add
in
cs
add
dec
xor
je
icebp
xor
dec
xchg
sti
in
dec
xchg
aas
xlat
std
out
lock
shl
xchg
sub
mov
cmp
out
and
xlat
daa
mov
jg
mov
xchg
dec
jne
xchg
shlb
pushf
dec
inc
addr16
dec
jmp
outsb
stos
push
jae
or
adc
cli
and
xchg
or
xchg
inc
xchg
or
orb
idivb
pop
insb
inc
dec
pop
out
push
in
pop
pop
xor
lret
inc
data16
loope
inc
faddp
sub
in
mov
jne
mov
cmp
aam
int3
adcl
mov
out
aas
out
div
sahf
add
add
xlat
cld
add
mov
fcmovnu
push
int3
stc
hlt
loopne
and
mov
dec
sahf
stc
mov
and
fwait
mov
jne
adc
and
push
outsb
push
mov
mov
fs
jecxz,pt
outsb
jne
jno
inc
dec
inc
mov
mov
pop
sti
les
jp
push
xchg
repz
sub
and
aas
lods
mov
adc
jge
incb
gs
cltd
fimull
xchg
repnz
jns
jns
mov
xchg
xchg
jmp
outsb
lea
lods
into
cmc
loop
std
add
into
push
add
das
imul
inc
shll
enter
adc
mov
int
push
lret
mov
scas
push
lret
loopne
negl
mov
arpl
pop
jecxz
jmp
and
imul
lods
pop
pop
mov
dec
or
lock
mov
ss
ret
adcl
pop
test
and
aad
ds
add
xchg
jns
pop
lea
subl
rcrl
jbe
mov
imul
adc
pop
push
mov
adc
or
dec
aad
jmp
repz
idiv
ss
push
aas
das
or
adc
dec
mov
pop
fisubrl
aas
xor
xor
arpl
les
sub
or
cmp
insl
lods
faddl
dec
mov
loopne
aaa
add
popf
pop
and
stos
scas
adc
mov
rcl
rclb
and
into
inc
mov
inc
sbb
scas
stos
add
pop
fwait
outsb
ror
popf
daa
adcl
xor
push
rcrl
push
mov
fnclex
jnp
cmpsl
cmpsb
inc
mov
sub
in
sbb
mov
repz
sub
push
mov
adc
inc
cmpsl
leave
mov
jne
shlb
mov
nop
je
out
fwait
rcll
stos
loop
or
aas
das
jl
pop
mov
mov
lret
xchg
jmp
fmuls
mov
mov
add
test
cwtl
fidivrl
aaa
inc
loope
sahf
sub
lret
loope
paddusb
lahf
push
pop
xor
cmp
aaa
jb
pop
hlt
xlat
xor
push
push
test
into
mov
scas
inc
sbb
sti
xchg
adc
mov
xor
xchg
jp
fisubrl
ljmp
push
add
jae
push
jnp
sbb
push
push
dec
adc
and
stos
pop
out
push
cwtl
xchg
incl
sarb
push
mov
loopne
dec
jns
popa
push
out
jecxz
mov
pop
inc
pop
mov
xor
std
xchg
mov
into
test
lahf
rorl
cld
xchg
iret
mov
pusha
mov
call
jno
outsl
nop
cmp
sub
inc
cmp
outsb
cltd
push
adc
insl
and
xchg
insl
inc
mov
repz
xchg
int
icebp
cmp
arpl
push
cmp
add
out
jns
loopne
sbb
pop
in
je
and
adc
push
mov
inc
mov
cmc
ret
inc
sub
stos
dec
jne
mov
mov
xor
lds
add
jbe
mov
sbb
push
testb
xchg
lret
pop
push
call
xchg
adc
mov
push
inc
mov
add
mov
fidivrs
stos
in
adc
clflush
lock
fs
adc
das
je
stc
adc
mov
outsl
cmp
pop
mov
popa
mov
jl
adc
lds
mov
sarb
inc
mov
mov
inc
xor
lcall
jns
pop
arpl
shrl
inc
sub
and
xor
rol
xlat
sub
lds
aaa
lahf
jo
mov
movb
pop
ret
cmp
mov
arpl
jno
xor
jno
cmc
jle
in
mov
lret
dec
repnz
lods
and
xor
inc
and
inc
gs
push
cwtl
leave
cwtl
out
mov
cmp
mov
pop
es
adc
repz
popf
xorb
lret
mov
xchg
in
adc
movsb
dec
scas
cwtl
cmp
pop
pop
add
shlb
pop
mov
sub
cwtl
push
add
setbe
int3
xor
mov
jb
lds
mov
push
jo
faddl
adc
sub
scas
shlb
mov
push
mov
and
inc
jge
mov
pushl
mov
jno
ss
cmp
and
and
push
mov
fwait
fwait
orl
fwait
pop
xchg
jecxz
push
jne
scas
sbb
loopne
mov
xchg
ficoml
mov
movsl
rolb
test
push
dec
inc
rorb
push
cmp
nop
mov
addr16
scas
iret
sub
scas
push
outsb
ltr
pop
push
aam
jp
outsl
rcrb
ror
jecxz
and
push
test
into
xlat
xchg
adc
xor
dec
js
cmp
mov
push
adc
test
stos
iret
sbbb
sbb
ja
dec
mov
shl
lahf
xlat
add
repnz
xchg
or
cmpl
sub
cmp
mov
sbb
xchg
mov
bound
mov
xchg
cmpsb
imul
lods
insl
cltd
jbe
mov
xchg
add
add
fstpt
inc
repnz
shll
sub
mov
push
push
cmpsl
push
clc
das
jl
xchg
jae
pop
pusha
fxch
adc
ja
mov
cmpsb
mov
or
lods
mov
xchg
lcall
push
mov
cmp
shr
dec
movsl
pop
cmp
imul
data16
mov
or
push
mov
sbb
scas
cmp
popa
inc
hlt
fidivrs
inc
pop
enter
push
and
cmpsl
lock
mov
imul
jbe
dec
mull
fisttps
dec
jecxz
jl
addr16
arpl
mov
addb
inc
xor
jnp
push
mov
add
movsl
sub
fsubrp
add
lahf
mov
push
xchg
cld
pop
stc
xlat
int3
xchg
or
repnz
test
mov
inc
inc
jge
xor
je
push
push
or
jmp
pop
add
adc
pop
mov
adc
imull
imul
shlb
mov
loope
xchg
leave
inc
mov
addr16
sbb
pop
adc
pushf
sbb
mov
inc
into
jbe
pushf
ret
jo
clc
es
or
nop
ret
insb
xchg
in
enter
ljmp
add
adc
test
and
out
add
fwait
scas
dec
mov
add
shll
push
fsubrs
mulb
out
pop
pop
inc
mov
pop
and
insl
cltd
in
rclb
cmp
mov
popf
xchg
scas
lock
jb
jo
xor
push
cmp
push
mov
lods
jge
inc
ficompl
fdivs
xor
mov
xchg
enterw
xchg
fstps
mov
clc
push
and
pop
out
sbb
mov
pop
xchg
aad
in
xchg
data16
xchg
jne
iret
dec
sti
pop
in
adc
sbb
push
dec
sti
pop
idivl
and
and
stc
cmp
ljmp
scas
imul
into
mov
les
sbb
cmpsb
inc
stos
fisubs
outsl
adc
stos
jge
cwtl
lret
cld
xchg
pop
outsb
cmp
adc
xchg
or
ljmp
repz
clc
pop
inc
repnz
fiadds
imul
out
or
popf
or
gs
xchg
in
mov
hlt
clc
cmp
mov
in
jge
xor
aad
insb
jl
xorb
cmpsl
jmp
jnp
cmp
cli
mov
mov
cmp
and
mov
xchg
insb
fstpt
lret
cmpsl
dec
mov
cmp
cmovge
pop
sbb
icebp
and
xchg
xlat
xor
pop
iret
jg
in
ds
gs
pop
jns
aas
outsl
rclb
adc
xchg
lahf
hlt
dec
ret
inc
cli
fimull
popa
fbld
push
mov
jge
pusha
inc
cltd
pop
cmp
push
sub
js
dec
sub
shll
fwait
sbb
rolb
insl
push
or
mov
lods
sub
outsl
decl
sbb
mov
iret
mov
jecxz
subl
gs
add
fnstcw
fs
xor
leave
jno
inc
cmp
jecxz
or
xor
pusha
cmp
pop
mov
aas
sub
mov
and
lea
inc
cmpsb
loope
inc
imul
iret
mov
aam
fsts
das
or
mov
not
cmp
and
sub
in
aas
scas
fidivrs
pop
push
xchg
xchg
xchg
inc
gs
stos
xlat
mov
sub
aaa
imul
out
sub
lea
stc
add
inc
pop
arpl
jl
jecxz
leave
xchg
loopne
test
and
push
ljmp
push
cmp
stos
insb
pop
idivl
test
icebp
mov
icebp
push
mov
add
push
int
adc
cld
cli
fldt
jbe
ror
iret
inc
mov
or
mov
cmp
mov
stos
popa
jmp
jp
cwtl
cwtl
inc
cmp
pcmpgtd
mov
rcl
mov
adc
or
scas
mov
in
adc
mov
pusha
pop
jne
divb
cmp
pop
movsl
push
lret
dec
ja
dec
push
mov
push
pop
inc
push
mov
std
push
ds
cmp
mov
inc
aaa
xchg
imul
cmpsl
lret
jbe
inc
cmpsb
mov
test
add
jmp
lret
add
pop
pop
test
and
xchg
and
xchg
sbb
bound
je
iret
repz
push
sbb
sub
push
out
push
out
stos
aad
jb
push
stos
mov
push
int3
inc
test
add
adc
stos
in
in
ds
pop
sarb
in
out
adc
pop
push
mov
std
and
xlat
lret
mov
push
inc
sub
mov
pop
pop
inc
sbb
fisubrs
rcll
xchg
and
and
mov
sbb
mov
fisttpl
addr16
sbb
sbb
inc
mov
mov
mov
pop
jb
pop
pop
jg
jge
and
mov
pop
pushf
jmp
push
mov
gs
repnz
xor
xchg
pop
dec
pusha
push
lret
xor
jmp
cwtl
cmp
test
sarl
adc
xor
das
dec
add
fsts
xchg
mov
add
adc
jnp
or
sub
mov
push
xor
ss
pushf
sbb
push
std
ret
data16
push
imul
shlb
gs
insl
mov
sbb
jo
cld
imul
jg
bound
aam
dec
sbb
dec
mov
xchg
in
xchg
or
sbb
insb
icebp
test
mov
dec
dec
mov
in
inc
das
aaa
cmpl
cmp
mov
push
jns
sbb
dec
pop
fstl
loope
sbbb
movsl
orb
imul
std
jmp
jge
mov
icebp
mov
cli
dec
ret
jae
xorl
xor
sbb
add
mov
arpl
fs
jecxz
jp
arpl
fbstp
jg
leave
fistps
sbb
jmp
cltd
fstl
xchg
or
sub
jg
mov
mov
mov
push
outsl
cld
jl
loop
mov
pop
jb
cmpsb
test
adc
dec
out
and
add
mov
inc
adc
insb
les
clc
negb
cmp
mov
lock
test
loop
cmp
std
push
mov
dec
dec
fwait
clc
test
jle
std
dec
outsb
mov
into
lcall
jmp
insb
mov
mov
pop
mov
ds
mov
mov
mov
pop
sbb
or
int3
cmpsb
and
pushf
inc
jnp
neg
jmp
cmc
pop
seto
in
bound
dec
sbb
jae
inc
stos
cmp
gs
daa
lock
pop
movsb
and
mov
stos
xorb
and
popf
popa
pop
ss
mov
loop
pop
sub
sbb
mov
xor
daa
xchg
cld
loope
push
sbb
push
pop
std
sbb
lcall
and
fistl
inc
pop
rorb
jno
or
or
sbb
dec
mov
outsl
mov
jno
dec
pop
push
dec
vpbroadcastd
rcrb
mov
mov
mov
add
adc
pop
cmpl
sbb
jbe
mov
sbb
xchg
loop
adc
addr16
xchg
sub
mov
lcall
pop
into
dec
repnz
lret
push
jecxz
push
xor
pop
in
push
push
push
aad
scas
hlt
mov
test
movsl
loopne
in
aad
scas
movsb
movsl
pop
loope
adc
pop
or
mov
mov
iret
jecxz
xor
jmp
push
mov
mov
fidivs
sbb
sub
pushf
inc
xor
cltd
push
ja
arpl
inc
subb
xchg
sti
jmp
xor
out
test
sub
fists
xchg
pop
test
js
pushf
and
jne
cmpsl
rorl
rclb
and
es
fwait
es
push
and
lds
orl
xchg
ret
cmp
dec
sarb
dec
scas
sub
mov
sub
shll
push
dec
adc
and
js
xor
ja
mov
aas
movsl
mov
add
or
xor
xchg
add
cmpl
addb
mov
fdivr
lods
shrl
lret
sbb
test
push
adc
lea
pop
add
data16
sarl
mov
js
mov
sarb
cmp
or
loope
jne
sbb
call
dec
into
and
addl
clc
xor
mov
lods
inc
xchg
sar
dec
es
add
fucomp
out
movsl
lods
sbb
adc
mov
dec
js
ffreep
stos
inc
dec
sub
stos
or
mov
pop
push
or
lahf
sub
fsubr
xorl
sbb
dec
cmp
ficoml
jle
lea
xchg
pop
dec
or
std
ss
sub
xchg
loop
aam
mov
push
aas
in
hlt
xor
xor
xchg
mov
xchg
testl
xlat
dec
test
mov
mov
mov
icebp
pop
xchg
push
cmp
jecxz
jg
sbb
xchg
xchg
mov
jno
xor
or
addr16
test
scas
mov
mov
test
clc
pusha
add
sub
addr16
aas
push
dec
icebp
lcall
inc
cmpsl
push
or
sub
cmpsl
inc
mov
scas
jbe
sbb
aaa
cmpsb
xor
xor
fldt
dec
das
jbe
add
fists
fisttps
pop
lea
movsb
mul
dec
jmp
in
or
je
mov
pop
mov
imul
xchg
mov
pause
out
xor
js
aas
shr
dec
cmp
jle
out
test
rcr
sbb
mov
mov
sbb
inc
pop
outsl
in
subl
aaa
inc
icebp
cmc
imul
jg
jg
lcall
incb
fwait
sub
dec
mov
sbb
movl
mov
pusha
and
sbb
jne,pt
mov
std
lods
xor
push
jmp
or
scas
adcb
mov
cs
sti
mov
sbb
call
dec
es
in
and
sti
mov
out
popa
mov
fisubs
dec
xlat
sub
aaa
shr
je
lea
adc
xchg
fisttps
lret
jge
mov
jb
test
ror
call
daa
jg
adc
sbb
repz
sub
enter
icebp
jne
dec
pop
mov
push
inc
mov
mov
sbb
or
fists
sar
dec
and
in
mov
aam
call
pop
pop
fdivr
je
imul
jno
ljmp
or
lcall
sahf
scas
rcl
xchg
dec
mov
pop
xchg
mov
rclb
data16
cmc
loop
lea
ds
cmp
fisttpl
cli
mov
xchg
sub
or
das
insl
cmp
test
push
repnz
std
adc
push
jnp
test
out
movsb
lret
xor
sbb
and
lock
mov
push
out
inc
hlt
cmpsl
outsb
pop
imul
loope
jmp
and
or
inc
push
mov
bnd
in
pop
call
xor
or
adc
dec
xchg
test
cwtl
into
rcll
mov
and
call
shll
push
cld
xor
ljmp
push
cmp
sti
push
lahf
push
es
push
jne
mov
ret
mov
mov
jno
int3
mov
sti
pop
es
push
dec
ror
sbb
xor
lods
mov
pushl
jbe
adc
lahf
inc
pop
mov
adc
sbb
in
cmpsl
xchg
ljmp
mov
mov
jb
scas
pop
dec
fincstp
sub
mov
adc
mov
iret
popa
mov
dec
sub
mov
arpl
sub
add
pop
push
push
mov
das
push
ja
rorl
adc
outsl
cmp
out
mov
push
fs
mov
jno
data16
mov
arpl
das
ljmp
mov
mov
push
add
mov
add
loope
mov
out
sti
scas
adc
pop
cmp
dec
dec
push
shrb
aas
test
adc
ror
mov
adc
inc
cmp
lock
jno
xchg
lods
push
testb
mov
lahf
sbb
mov
mov
rorb
iret
bswap
mov
push
jns
es
addl
inc
loope
arpl
fscale
in
std
inc
imul
mov
pusha
leave
out
fidivrs
fmull
adc
adc
mov
push
iret
out
and
int
jae
ret
pop
std
lahf
in
fnstsw
add
lahf
int3
shl
inc
cmp
add
adc
aad
and
jp
iret
jmp
ror
fldl
sbb
lods
mov
enter
mov
clc
mov
and
and
shll
adc
movsb
or
lds
mov
jmp
mov
pop
popf
push
push
divw
or
jnp
popa
outsb
popa
insl
adc
push
push
mov
mov
aaa
mov
sbb
in
mov
jb
pop
outsl
pushf
inc
pop
sbb
loop
push
cld
xchg
push
or
pushf
add
jo
add
out
push
je
and
jg
movsl
and
loopne
insb
rolb
cwtl
adc
ds
jnp
out
lock
mov
xchg
jl
add
inc
xor
push
and
xchg
fists
add
inc
movsl
repz
lcall
jno
dec
mov
cmp
outsl
fsubr
push
push
xlat
and
mov
cmc
cmp
inc
inc
mov
sub
sbb
xchg
pop
cld
dec
lds
xor
and
jns
in
jecxz
push
ds
scas
mov
int3
aas
nop
adc
std
mov
rolb
test
loopne
notl
out
xchg
push
lret
push
or
sbb
adc
mov
jae
addr16
mov
movsl
jne
adc
mov
jo
and
cmp
sbb
das
stc
icebp
sub
jmp
and
into
jle
in
fwait
sbbb
xchg
fidivs
push
pop
and
xchg
into
hlt
loope
insl
and
and
push
jle
jno
mov
rcl
cmp
cmpsl
sbb
scas
jl
cltd
lea
mull
int
push
inc
loopne
imul
dec
stc
pop
mov
xlat
push
adc
pop
and
aam
cmp
popa
orb
pop
mov
dec
stos
pushf
cld
inc
fcoml
jge
lods
sbb
notl
aaa
sbb
sbb
in
dec
mov
mov
push
hlt
fwait
jbe
xchg
sub
rcr
repnz
or
scas
jae
cwtl
imul
add
mov
xchg
mov
cmp
in
fucomp
adc
sub
sub
popf
jecxz
fists
fisttps
jae
idivl
inc
fwait
xor
mov
lahf
sti
nop
mov
push
inc
push
sahf
xor
ja
jo
addl
and
shrl
sub
jo
or
outsb
dec
cmpsb
popf
dec
cmpsl
inc
jb
xchg
sub
stos
cmp
addl
outsb
dec
sub
ret
cmpsb
push
int3
movsb
xor
fstl
adc
mov
pop
ss
mov
cld
push
aaa
rcl
jge
add
lcall
mov
pop
gs
aas
xchg
pop
ret
outsb
xchg
pop
imull
xchg
push
movsb
and
mov
and
mov
pop
pop
je
adc
lods
ret
test
in
sahf
decb
sub
mov
jg
add
cld
jns
mov
sub
stos
cmp
or
sti
xchg
jg
icebp
sbb
jp
xchg
sbb
jmp
inc
mov
jmp
sbb
mov
xor
rcl
sub
fdivrp
addr16
add
adc
ret
shlb
movsl
sahf
xor
test
out
or
daa
stc
inc
sub
divb
xchg
jbe
cmc
and
stos
ja
popa
dec
lcall
push
push
scas
and
loopne
xchg
push
pop
pop
pusha
mov
and
mov
into
xor
dec
pop
sbb
mov
fbld
jmp
rcrb
icebp
fnsave
lds
iret
dec
sub
fwait
loope
negb
xchg
inc
ja
cmp
mov
je
jle
movsb
fadds
mov
xchg
sub
les
xor
scas
pop
lcall
nop
sti
cli
push
xchg
iret
and
cmp
inc
loopne,pt
mov
stc
xchg
inc
push
movsb
movsl
cli
cmp
pop
sbb
das
dec
dec
out
pop
push
lret
jb
and
jo
in
test
xchg
sbb
add
add
push
dec
push
dec
push
fnstenv
and
xor
loope
clc
lods
jae
push
push
mov
insb
push
push
mov
xchg
adc
or
bound
imul
movq
in
mov
mov
xor
pop
rorb
pop
ljmp
xor
dec
or
stos
and
mov
ja
cmc
mov
movsb
add
pop
stc
pop
push
imul
adc
xchg
ret
pop
repz
pop
ja
inc
je
scas
adc
stc
or
push
cmp
cmpsl
or
mov
xchg
stos
movsl
mov
dec
push
mov
adc
mov
sbb
xchg
mov
inc
push
loop
flds
test
dec
test
shlb
push
jae
pop
jle
jbe
pop
push
scas
jne
pop
gs
jns,pt
jge
jmp
mov
loopne
xor
jo
repz
xor
cmp
add
xchg
push
dec
sti
mov
dec
mov
jae
push
mov
insl
dec
cwtl
popa
out
push
loopne
inc
test
out
mov
data16
push
shrl
js
lods
jb
rorl
mov
repnz
mov
sub
cmpsl
mov
adc
shr
addr16
pop
inc
pop
stc
inc
outsb
call
dec
mov
fimuls
daa
jge
in
or
sub
mov
push
notl
test
sbb
enter
in
rcrb
jl
xor
and
shlb
sub
push
mov
jg
xor
scas
xlat
fstps
sbb
add
sub
fdivl
dec
rorl
testl
push
jg
jb
add
nop
cmp
dec
subl
cmp
adc
cmp
insb
gs
stos
je
dec
mov
das
cmp
std
outsl
jle
std
mov
add
adc
and
repnz
push
lods
push
outsl
lods
out
ret
stos
add
push
add
in
push
stos
pop
incl
xor
push
int
orb
sahf
loop
js
xor
fstpl
xchg
pop
dec
repnz
out
je
insl
sub
and
out
adc
nop
inc
fwait
fs
clc
xchg
roll
fmuls
gs
add
jbe
sar
dec
xlat
in
add
mov
mov
sbb
jl
ljmp
mov
push
mov
addr16
aam
pop
jno
cmp
cwtl
aad
movsl
imul
cmp
cmp
xchg
push
add
jbe
shlb
and
xchg
jp
je
add
mov
jne
stos
inc
cwtl
fs
fidivrs
sarb
xor
aad
aam
xchg
sti
loopne
les
fcompl
inc
push
imul
repz
xchg
out
stos
mov
mov
cmp
xchg
push
add
cmp
mov
jge
jae
call
sub
or
xlat
ja
imul
jo
out
pop
push
cmpsb
mov
mov
pusha
test
xchg
sbb
loope
ret
push
rcrl
add
push
icebp
stc
sbb
dec
popa
mov
jge
lods
ss
inc
and
xchg
cmc
xchg
xor
mov
mov
or
mov
xor
dec
into
outsl
mov
aaa
aas
lods
adc
mov
idivb
call
cmp
les
fstps
push
cmp
mov
and
out
dec
repnz
outsb
pop
test
dec
das
cmp
loope
dec
push
adc
and
adc
jno
pop
xchg
sbb
shrb
fwait
icebp
test
add
xchg
xor
and
addl
jae
mov
clc
ror
outsl
sbb
pop
stc
inc
xor
push
cwtl
je
repnz
jno
test
sahf
sub
add
sub
push
scas
sub
je
rolb
rclb
outsl
mov
fcoms
add
sti
lea
ja
xchg
ja
inc
jle
ret
insl
add
sub
cmp
nop
repz
movsb
loopne
ljmp
aam
sbb
jne,pt
jle
leave
or
sbbl
xchg
jno
dec
xchg
mov
dec
jge
sub
mov
push
inc
insl
mov
pop
and
js
mov
mov
movb
sarb
xor
push
lcall
cmp
aam
js
mov
in
mov
jno
cld
ret
jl
pusha
mov
pop
jne
pop
xor
mov
xor
dec
mov
push
cmpsl
mov
mov
mov
sti
ret
pushf
mov
sbb
neg
sahf
outsb
xchg
mov
push
mov
bound
into
sahf
and
and
in
pop
jnp
and
icebp
fcmovnu
jae
dec
addl
int3
push
cmp
dec
pushl
push
jno
mov
sarb
mov
xlat
aaa
xchg
sbb
bound
adc
fbld
push
jecxz
xor
jne
pusha
lods
xor
jg
sbb
test
and
dec
stc
imul
xchg
xchg
pop
icebp
dec
cld
das
test
adc
cs
stos
es
and
dec
ret
js
lahf
mov
inc
add
push
pop
stos
xchg
test
imul
jmp
sbb
xchg
jmp
mov
cmpsb
rorl
and
mov
pop
or
imul
pop
or
xor
ljmp
out
arpl
lods
sbb
dec
fdivrl
pop
mulb
js
pop
xlat
fidivrl
jg
in
or
popf
adc
add
xor
sub
lcall
test
mov
out
lret
xchg
push
mov
push
jle
sbb
test
dec
or
fisttpll
incl
dec
lea
mov
push
fisubrs
out
inc
mov
out
mov
bound
inc
add
dec
roll
push
lea
subl
sarb
cmp
negl
lret
mov
pop
repz
sub
jmp
pop
cmp
mov
dec
push
ss
push
inc
and
fidivrl
cs
cmpl
fldcw
mov
dec
lret
xor
push
repz
aaa
arpl
loopne
mov
fisubl
add
pop
ds
mov
dec
into
pop
into
mov
add
push
cmp
int
movsl
sub
cli
push
jg
mov
dec
inc
enter
inc
test
jp
jecxz
cmp
popf
daa
out
sub
jecxz
inc
fdivrl
negb
xor
mov
shlb
lods
std
mov
xorl
adc
mov
cld
movsl
out
mov
cld
dec
data16
jo
notb
mov
push
loope
in
test
into
mov
les
pop
cmp
insb
outsl
ret
fldln2
fildl
inc
xchg
sub
xchg
sub
fisubl
aas
je
test
push
jle
inc
clc
jbe
arpl
push
push
xchg
ds
cld
aas
in
test
adc
inc
aas
dec
xchg
ja
sbb
mov
jmp
addl
or
loopne
std
pusha
dec
andl
adc
inc
dec
es
stos
mov
test
pushf
adc
xor
std
out
pause
dec
mov
and
or
mov
std
sub
mov
inc
insb
pop
fidivl
ss
pop
jg
scas
inc
xor
xchg
pushf
rcrb
or
and
push
inc
mov
aad
fstl
mov
loopne
jg
data16
cmp
lea
pop
add
mov
les
or
sti
mov
inc
xlat
xchg
in
es
or
pushf
pop
pop
push
das
movsl
int3
jg
iret
loopne
pop
push
jbe
std
mov
std
add
push
out
lret
sbb
adc
dec
fwait
push
lea
or
in
imul
pop
subb
sbb
fisttpl
jbe
iret
add
cld
inc
or
mov
es
or
push
lods
js
add
dec
mov
adc
mov
fstpl
sbb
outsl
sub
out
dec
sarb
or
xchg
or
dec
lcall
sbb
jg
xchg
or
clc
jo
dec
call
cmp
mov
popa
gs
pop
out
imul
lret
bound
sub
and
add
dec
mov
scas
push
mov
pop
ja
pushf
inc
and
addr16
cmc
jbe
sbb
adc
mov
sbb
and
ret
mov
sub
std
mov
lds
stos
lds
sbb
inc
data16
sub
cmp
xchg
pop
loop
loop
test
ffreep
cmc
or
scas
pop
push
mov
imul
je
imul
aaa
dec
movsl
movsb
push
pop
adcb
and
or
cmc
adc
mov
pop
sbb
and
rorl
push
jmp
pusha
mov
inc
dec
cltd
mov
aam
popf
scas
dec
outsl
fisubrl
frstor
andl
outsb
lods
jecxz
loopne
sahf
push
std
push
xlat
sbb
or
ficoml
inc
and
pushf
adc
xchg
mov
dec
inc
jg
pop
inc
or
ds
movb
pop
push
cmpsl
mov
les
pop
shll
fs
aaa
sub
mov
cmp
sbb
jae
nop
xchg
daa
test
jnp
or
rolb
jp
mov
aad
mov
out
sbb
pusha
out
ds
adc
pop
test
daa
jnp
popf
in
dec
insl
pop
ret
pop
stc
xor
inc
push
bound
push
add
mov
add
leave
clc
mov
ret
xchg
in
lcall
push
jecxz
icebp
and
dec
push
lahf
jge
in
adc
sti
incb
mov
push
push
and
or
pop
pop
loop
jmp
sub
pop
push
mov
xchg
dec
mov
scas
sarl
mov
xchg
imul
mov
xchg
outsb
push
xchg
xor
xor
mov
mov
or
xchg
pop
or
sbb
mov
loopne
cmp
gs
and
sbb
sub
inc
lahf
mov
adc
icebp
or
stos
nop
movb
mov
out
cmp
push
add
xor
push
pop
fwait
sbb
mull
or
adc
jmp
leave
int
push
push
outsb
mov
aas
repnz
push
or
add
pushf
add
iret
add
test
and
pusha
push
out
jns
pop
adc
inc
jnp
pushf
mov
jno
aaa
cmp
and
jmp
or
sub
gs
pandn
xchg
sbbl
sbb
xchg
sub
fadd
cmp
fmull
dec
mull
mov
jnp
cltd
inc
iret
jp
xchg
data16
mov
xchg
lret
mov
int3
dec
xchg
mov
sub
lock
xor
pushf
jle
outsl
lds
dec
out
adc
insb
sti
jp
ja
xchg
scas
fdiv
cmpsb
push
dec
adc
cmpsb
iret
imul
mov
pop
lods
and
or
inc
mov
sbb
adc
xor
xor
mov
or
inc
mov
cli
mov
subl
arpl
xor
sbb
mov
ret
jg
aaa
push
pushf
aad
dec
cmp
push
hlt
out
mov
jb
lds
dec
and
out
add
jle
call
adc
xchg
jg
adc
jae
inc
mov
cmp
fcmovbe
dec
add
addr16
push
pop
dec
sub
rcr
adc
dec
and
int
jp
xchg
in
fidivrl
mov
dec
mov
call
push
or
dec
adc
dec
cld
iret
and
lea
add
call
mov
fwait
hlt
lds
out
inc
cmp
pop
es
es
push
or
dec
jns
in
enter
dec
mov
dec
rcl
sbb
addl
dec
lds
out
push
xor
testl
aas
sub
pop
lock
mov
xor
lock
sub
inc
jb
sti
shll
xor
aaa
push
scas
jnp
mov
xchg
jae
pop
cmp
mov
adc
xor
adc
mov
jmp
out
inc
mov
jge
clc
push
aad
pop
xchg
lds
dec
mov
and
xchg
sbb
pop
jno
add
mov
out
jb
mov
cmp
inc
add
outsl
cli
test
pop
ss
leave
shrb
or
sbb
adc
clc
sarw
gs
jbe
outsb
fsubs
xlat
es
out
mov
movsb
adc
test
cmp
inc
mov
pop
add
push
mov
and
pusha
mov
int3
jns
sahf
push
iret
xchg
push
pop
stos
pop
push
dec
mov
dec
nop
movsl
adc
repnz
mov
es
ret
push
jns
inc
mov
lret
insb
sbb
cmpsb
mov
dec
xrstors
and
jne
rcr
ds
jno
cmp
jbe
dec
sub
cmp
cs
data16
clc
call
jnp
pop
jns
push
pop
repz
data16
push
pop
pop
sbb
xchg
jno
sub
les
decb
mov
and
das
pop
xchg
pop
push
xchg
and
daa
lods
cmp
lods
pop
pop
jbe
shr
lret
pop
or
add
mov
sub
aad
mov
xchg
push
push
shr
adc
cmp
lret
inc
mov
pop
xchg
insb
xor
pop
push
jmp
lahf
xchg
lods
cmc
mov
and
fcompl
mov
repz
and
dec
inc
adc
movsb
stc
clc
lods
push
inc
lock
or
aas
or
or
push
enter
fmul
aad
popa
push
push
mov
sub
orb
mov
mov
push
mov
and
lock
pop
jno
pop
popf
outsb
or
scas
jnp
push
fwait
dec
dec
inc
add
cmpsb
lahf
pop
fcomi
xor
mov
push
push
repnz
lahf
das
add
std
pusha
fs
sbb
fsubrl
into
shlb
aam
cmpsb
jbe
daa
popf
ds
lret
arpl
mov
xchg
xchg
xchg
hlt
mov
pop
pop
cmpsb
outsl
xchg
cld
jb
and
in
xchg
pop
push
add
out
mov
lcall
nop
loop
sbb
test
popa
add
mov
cwtl
xor
aam
std
xchg
jg
subl
jae
lock
iret
ret
addb
cmpsl
push
mov
push
xchg
out
pop
scas
and
inc
daa
jae
pop
fmulp
mov
mov
paddb
out
cmpl
mov
xchg
sub
jecxz
fsts
mov
xor
pushf
mov
mov
pop
sub
jp
jo
xchg
and
stos
mov
out
ds
lds
jns
or
lcall
inc
push
je
insb
andb
mov
outsl
test
insb
xor
insb
pushf
insb
test
dec
inc
std
push
jno
xor
mov
loopne
xchg
test
cltd
jb
dec
lret
sahf
lock
push
sub
inc
xchg
ja
mov
dec
addr16
pop
call
mov
leave
sub
icebp
test
mov
bound
jle
fdivrp
xchg
push
movsl
mov
and
imul
add
push
notb
ds
xor
add
or
and
popa
dec
cmpsl
pop
sbb
inc
xchg
xchg
cmpsl
ret
fisttps
and
idivl
call
rcrl
fs
test
mov
scas
sbb
outsl
cmp
mov
dec
mov
mov
mov
push
cmp
clc
xlat
dec
and
pop
sub
push
sbb
aam
in
adc
pop
cmp
out
sbb
inc
and
fistpl
mov
hlt
out
bound
push
mov
dec
psraw
fucomi
xchg
pop
sub
out
sub
sarl
xor
mov
vmovq
jmp
clc
cmp
cmp
dec
dec
pop
std
cmpsl
loop
ss
mov
testl
lcall
cmpsb
add
sub
cmp
jmp
push
imul
aaa
pop
cltd
out
mov
clc
dec
dec
sub
sub
leave
push
pop
int3
add
fisttpll
movsb
fsubrp
lret
test
mov
nop
cmpb
mov
jp
cmp
jmp
add
push
mov
mov
pop
xlat
adc
in
cmp
or
xor
fstps
jl
jle
imul
add
mov
loope
jns
add
ljmp
mov
mov
adc
push
in
sub
loope
xchg
cmp
lahf
out
cmp
add
push
and
lret
push
ds
testl
test
jne
nop
cmpsb
aas
sbb
mov
lcall
pop
aas
lods
mov
xchg
sti
jae
xchg
faddl
popa
sar
adc
push
aad
shr
push
dec
shlb
and
aaa
ret
pop
test
dec
and
test
sti
pushf
mov
inc
adc
sarl
jecxz
and
cmp
inc
lret
mov
fwait
loopne
scas
sub
ja
adc
pop
fisttps
xorl
sbb
add
sbb
outsb
dec
cmpsl
punpckhwd
icebp
bnd
sbb
and
loope
push
lea
enter
fwait
or
push
test
cmpsb
jge
sbb
xlat
inc
xchg
push
aam
outsl
cmp
or
mov
adc
test
sub
pop
das
cmpl
in
mov
mov
cmpsb
push
inc
cmp
mov
inc
out
out
out
pusha
out
test
and
fnstcw
push
jno
dec
lods
ja
jl
aam
jp
stos
shlb
mov
mov
fnstcw
pop
das
sbb
or
pop
addl
pop
mov
jle
cmp
pop
movsb
dec
mov
inc
jmp
inc
xor
xor
jb
cmp
hlt
pop
scas
jge
or
xorps
xor
or
lahf
addr16
scas
or
cmc
mov
in
insl
mov
inc
push
pause
aam
enter
dec
pop
fwait
adc
shlb
clc
jb
and
or
xorb
fbstp
push
cwtl
lahf
pop
cltd
lds
popf
shr
dec
or
pop
pop
imul
sbb
xchg
lahf
sbb
sub
dec
fs
outsl
ss
jmp
jmp
push
ficomps
pop
movsb
push
xchg
and
leave
add
out
cwtl
push
pop
push
xor
push
sbb
les
mov
sar
xor
and
dec
scas
xchg
out
inc
adc
lcall
jge
jo
xchg
cmpsb
out
inc
lret
cmpsb
int
insb
clc
imul
mov
cmp
xor
je
jbe
inc
inc
outsb
xchg
test
in
insb
jge
loopne
fisubs
dec
cmp
cmp
pop
xchg
pop
scas
cmp
into
lahf
add
enter
jb,pn
ja
jecxz
ljmp
repz
repnz
push
xchg
xchg
pop
call
pop
add
xor
mov
pop
add
call
xor
clc
scas
push
rcrl
pop
cmc
addb
aas
xlat
jecxz
pop
roll
lods
sub
jp
notb
inc
fst
mov
pushf
test
mov
mov
imul
xor
mov
enter
or
mov
dec
and
mov
jns
inc
cmc
daa
popa
mov
imul
or
gs
mov
rorb
scas
mov
out
cli
jae
stc
xor
add
je
xorl
adc
or
cmp
negb
add
xchg
inc
adc
lahf
sub
rcrl
pop
mov
lods
sub
and
xor
js
push
jp
inc
fmull
pop
mov
mov
cs
inc
les
fs
gs
push
daa
fdiv
inc
jmp
imul
jecxz
fdivrl
outsl
jb
mov
enter
mov
sysexit
adc
jecxz
sub
sti
sahf
mov
movsl
int3
xchg
cltd
in
testl
insb
cmpsb
pop
mov
dec
inc
mov
insb
xor
les
out
add
sub
fmulp
fsubp
lcall
sub
jne
cmpsl
pop
adc
inc
xor
jo
xchg
lock
out
lcall
ja
iret
mov
bound
dec
add
mov
pop
inc
fstpl
cld
jb
mov
xchg
sarb
cmp
inc
push
or
mov
cmpsl
xor
lock
shrl
sahf
test
lcall
ds
dec
rcrl
pop
add
in
push
fistpl
xchg
sbb
sbb
stc
inc
mov
mov
orl
mov
sbb
das
repz
inc
pop
inc
fbld
mov
add
mov
mov
dec
xor
repz
xor
pusha
movsb
xchg
jno,pt
mov
push
dec
adc
fstl
push
into
stos
dec
xchg
xor
jnp
divb
inc
mov
sub
jg
cwtl
inc
insb
and
decl
jp
mov
cwtl
pop
fildll
mov
cli
push
push
fisubrs
add
test
stc
scas
inc
add
xor
push
pop
mov
jle
cmp
jmp
inc
inc
std
nop
rorl
es
pop
das
sti
pop
cmp
push
fisttpl
and
adc
fidivrs
sbb
push
jno
and
add
addr16
xchg
sbb
das
xlat
hlt
scas
insb
push
push
cmp
and
addr16
pop
push
adc
xor
sbb
imul
inc
dec
lds
xlat
jl
pop
shlb
push
add
ja
xor
faddl
das
push
inc
scas
mov
subl
push
dec
shrb
scas
push
push
dec
xchg
adc
std
dec
mov
cmpsb
xchg
test
insl
push
xchg
push
imul
jo
rcl
call
shl
jg
lahf
or
shll
or
mov
mov
pop
push
add
pop
sub
and
mov
sbb
nop
adc
xchg
aas
movsl
test
add
dec
jmp
aaa
fstl
aaa
add
pop
mov
push
gs
cs
pop
lcall
call
les
rep
inc
sub
ljmp
pop
icebp
in
inc
out
aad
repz
and
aad
loop
mov
iret
cwtl
inc
mov
sub
popa
insl
or
mov
and
jnp
adc
cmp
sub
jg
and
jl
idiv
mov
fwait
push
xor
iret
movsl
pop
movsb
mull
lods
sahf
push
arpl
gs
jp
xchg
lret
mov
mov
jmp
icebp
inc
cwtl
fisubl
sub
and
add
dec
pop
inc
pushf
aaa
cmp
cmp
les
or
adc
jmp
mov
fdivrs
lds
pop
cmp
out
mov
add
sbb
iret
fmull
aaa
add
dec
fsubrs
jo
ljmp
lock
call
gs
adc
ja
sahf
test
jbe
jns
jbe
fwait
call
jb
fsubr
not
imul
or
cmp
imul
ds
add
inc
sub
jp
inc
pop
and
mov
mov
and
cwtl
movsl
cwtl
pop
std
notb
out
neg
pop
or
push
test
lahf
test
or
adc
scas
pop
hlt
mov
fists
jbe
jmp
add
rcr
test
jge
jo
daa
clc
ret
pop
or
test
cmpsb
pop
loop
mov
insb
xchg
xchg
inc
jo
loop
rcll
data16
adc
hlt
lahf
cmp
in
bound
dec
mov
mov
cli
fstl
in
faddl
jae
cld
into
call
adc
cs
push
jo
mov
pop
sub
fucomi
loop
nop
sarb
idivb
test
scas
mov
jmp
xor
jp
adc
js
xchg
xor
fiaddl
lcall
repnz
lea
sbb
cmp
cmp
je
outsb
xchg
pop
stos
or
or
push
scas
adc
out
push
lods
es
roll
loop
mov
call
or
out
pop
popf
scas
lahf
sub
pop
popf
mov
test
pop
and
pop
addb
or
and
sbb
js
inc
cmp
lret
push
add
popa
add
pop
pop
iret
mov
sbb
int3
mov
or
shrb
stos
adcl
xchg
addr16
add
mov
mov
sbb
stc
cmpsb
jo
xchg
outsl
mov
mov
push
cmp
sbb
and
mov
lock
mov
adc
mov
cmpsl
testl
loopne
jmp
popf
test
outsl
iret
mov
aaa
add
divb
nop
inc
lods
pop
cmp
pop
adc
ljmp
aad
mov
and
xor
or
test
or
dec
cld
fstpt
cltd
lds
out
pop
js
jmp
or
mov
jnp
icebp
lahf
jg
sbb
scas
test
outsb
test
out
es
xchg
mov
mov
lret
xchg
push
loopne
mov
jg
outsl
or
mov
cltd
cmp
outsl
sbb
xor
lods
ror
jl
mov
shrl
jo
cmp
xor
pop
adc
xchg
pusha
add
int3
mov
sub
pop
or
into
daa
fucompp
xchg
repnz
dec
imul
xchg
repz
sub
ljmp
and
cmp
outsl
jmp
mov
fcomip
mov
cmp
mov
loop
inc
test
cmp
adc
fs
dec
dec
pop
push
nop
mov
cmp
scas
xchg
pusha
xorb
mov
fisubrs
fists
fstl
loop
ret
lcall
jne
xorb
lds
mov
loope
pop
fidivrs
lock
test
jae
push
test
sbb
repz
add
rol
adc
shrl
xchg
mov
mov
rcrb
lock
in
xor
mov
cmp
jl
pop
push
add
or
jp
mov
test
mov
mov
lcall
or
jp
sub
xor
inc
mov
adc
fimull
lret
hlt
ljmp
sub
inc
sub
into
sbb
adcb
push
movb
lods
loop
outsl
ja
cmp
stos
fistpl
cwtl
jae
and
xchg
mov
arpl
jae
mov
jle
ss
inc
and
sub
sub
mov
pop
lock
lcall
push
iret
out
sahf
xchg
sbb
mov
outsb
pop
jmp
lods
push
inc
sbb
dec
mov
daa
shll
jge
xchg
rorl
imul
xor
popf
push
or
sysexit
and
icebp
ficoml
test
ret
out
inc
push
sahf
xchg
xchg
popa
inc
iret
outsb
add
loope
adc
xchg
inc
imul
cmp
xchg
add
jge
mov
cmp
dec
add
add
push
push
icebp
in
xchg
cmp
les
xor
fnstcw
or
lret
mov
outsl
sti
test
cmpsl
imul
es
in
fisubrl
in
xchg
push
mov
daa
ret
xor
lock
dec
das
out
or
push
inc
sbb
cs
adc
clc
ss
inc
or
sbb
inc
sub
cmpsb
idiv
imul
add
lock
add
push
das
out
xchg
mov
std
xor
shll
mov
inc
xor
rcr
clc
cmc
shlb
jb
xor
loope
mov
icebp
jns
pop
jge
sub
aam
fcmovnbe
cmc
dec
nop
in
pop
mov
in
outsl
sub
movsl
mov
push
mov
sbb
fwait
inc
jl
loope
movsl
cmp
int3
popa
cli
mov
push
rol
scas
std
mov
jg
sti
imul
scas
lcall
jne
cmp
fstpt
stos
leave
mov
scas
jnp
scas
cmp
into
loop
aas
or
or
mov
inc
mov
imul
dec
lret
push
fsubs
stos
lret
push
push
popa
dec
dec
cmp
and
cmpsl
stc
orl
adc
mov
sbb
adc
ja
cwtl
mov
xchg
mov
jge
pop
xor
sbb
test
inc
add
or
jl
adc
inc
lods
adc
add
xchg
data16
movsl
sahf
push
roll
lcall
cmp
or
lret
jnp
xor
adc
adc
fisubrl
add
xchg
xor
inc
inc
loope
mov
mov
mov
dec
cmp
add
xor
rorb
iret
dec
in
jb
cmpsl
jae
mov
pop
clc
arpl
nop
xchg
push
xor
mov
add
add
inc
lahf
loope
in
movsl
jnp
xor
sahf
je
adc
les
sub
popf
push
push
mov
pop
mov
and
cmp
loope
jecxz
jbe
mov
add
int
push
adc
mov
rcll
adc
adc
ss
dec
push
mov
cs
or
sub
lret
xchg
sbb
xor
or
cli
jb
mov
fisubrs
and
pop
stos
push
loopne
or
xchg
jo
mov
sti
push
loop
jno
addr16
cltd
mov
mov
pop
cmp
add
ljmp
and
cltd
and
inc
imul
push
mov
sti
ljmp
faddl
xor
rclb
push
inc
pop
test
js
sub
in
sbb
stos
lahf
xchg
pop
in
sbb
mov
xor
jb
iret
push
bound
jl
fisubs
es
adc
push
shrl
imul
adc
adc
jnp
push
lahf
add
test
jecxz
leave
and
pushf
loope
mov
fldl
push
sub
lret
jne
scas
orb
lods
adcl
ja
adc
js
cmp
cmpsb
test
xor
inc
jo
mov
icebp
loopne
pusha
ss
imul
imul
test
cmp
lea
movsl
dec
mov
or
and
xchg
daa
mov
jbe
rolb
mov
inc
lds
and
push
xor
orl
jno
fnstenv
andl
dec
in
cmp
jle
mov
xchg
rol
push
sahf
pop
mov
xor
mov
ss
rcll
xchg
jmp
pop
sbb
outsb
mov
scas
fdiv
ret
in
fwait
add
add
pusha
xchg
popf
mov
adc
nop
testl
aam
dec
push
aaa
mov
or
sub
add
scas
mov
adc
sbb
push
cmp
mov
lods
leave
xor
xor
hlt
inc
cld
mov
fildl
and
or
gs
xchg
lds
cmp
mov
dec
outsb
sub
and
imul
xchg
ljmp
inc
les
orl
and
mov
loop
mov
stos
xor
ss
dec
push
lea
mov
leave
pand
or
out
cmp
adc
aas
mov
testl
xchg
pop
pop
xor
call
mov
inc
push
xor
dec
inc
scas
adc
and
rcr
fldt
lret
or
cmc
imul
loope
push
cld
jg
sbb
and
mov
pop
pop
out
cld
sbb
add
push
rcrl
mov
cmp
ljmp
inc
ret
popf
outsl
rolb
clc
cmpsb
fs
pushf
xchg
insb
mov
fildl
ds
mov
mov
sahf
dec
sub
cmpsl
jb
xlat
in
pop
int3
decl
ja
iret
or
sub
xor
leave
mov
adc
inc
adc
jmp
outsb
mov
cmp
mov
push
je
or
cli
and
scas
mov
ljmp
and
jo
xchg
test
dec
xchg
sarl
test
add
bound
cmp
cmp
mov
cmp
sti
xchg
jp
cmpsb
clc
int3
nop
pop
enter
repz
inc
ljmp
jo
arpl
cwtl
pop
cmp
pop
loopne
and
enter
push
and
push
mov
ret
cmp
js
jge
jp
flds
pop
pushf
mov
xor
dec
inc
scas
cmp
scas
mov
sub
add
sbb
ret
mov
arpl
lret
adc
push
cli
ja
cmpsl
std
add
insl
or
arpl
aaa
adc
test
add
lret
cmp
mov
arpl
sbb
pushf
aam
std
scas
mov
mov
cwtl
dec
loop
arpl
inc
xchg
push
and
clc
sub
nop
cltd
push
pop
mov
sbb
xchg
fildl
stos
jge
outsb
movsb
add
in
lcall
insb
mov
jbe
xchg
adc
testl
push
inc
sbb
insl
fbstp
xchg
idivb
rclb
fldcw
ficomps
pushw
and
sub
gs
testl
xlat
mov
loopne
adc
in
pop
xor
imul
mov
icebp
mov
repz
notl
sbb
sbb
outsb
or
mov
ja
mov
cli
xchg
fs
mov
pop
lahf
stos
jmp
das
sub
mov
xor
sbb
sbbb
int3
std
jb
fidivl
notb
inc
pop
addr16
sbb
fistpll
int
std
movsb
jo
or
xor
adc
pop
and
test
jnp
loop
nop
je
jns
adc
into
xchg
or
ficompl
mov
ds
test
jnp
out
mov
xchg
jb
add
mov
enter
lret
push
sub
sbb
jnp
lock
xor
add
cmp
mov
test
repz
jno
imulb
rcl
data16
add
daa
push
mov
push
ss
test
imul
sbb
push
xchg
adc
xchg
jne
test
test
lret
jp
cmp
xor
adc
adc
jle
xor
cld
ds
addl
stos
addr16
mov
sbb
psllw
dec
aam
cmp
int
divb
jle
fs
aaa
pushf
fcompl
cwtl
pop
mov
push
sub
mov
aas
lods
test
cmp
cmpb
testl
sub
push
mov
inc
imul
pushf
fists
movsb
adc
and
sbb
push
inc
out
pop
shlb
sbb
test
push
test
nop
lods
xor
push
je
leave
insb
cmpsb
pop
add
mov
sti
xchg
jno
fistpl
cmp
mov
fldcw
add
cmpsb
sbb
dec
cmp
cvtpi2ps
or
jae
push
pop
xchg
or
aas
js
std
mov
jle
mov
lcall
mov
pushf
fimull
std
rcll
xchg
add
lods
lcall
sub
lds
enter
dec
loopne
repnz
inc
iret
inc
xchg
or
ret
pop
unpcklps
es
xor
dec
push
stos
push
pop
xor
pop
std
loopne
aad
xor
cmc
insb
sbbb
pop
lods
cmp
xchg
mov
jae
fsubrs
ljmp
and
jb
pushf
or
icebp
clc
sbb
mov
les
test
aam
mov
ljmp
mov
sbb
cmp
lods
mov
inc
mov
rorl
jns
push
test
inc
test
or
or
mov
push
dec
dec
xor
lcall
mov
xchg
insb
jmp
in
mov
js
dec
das
ror
outsl
or
mov
inc
mov
mov
xchg
dec
lock
add
scas
lret
pop
test
je
jl
sub
push
and
mov
xchg
dec
and
fcompl
fsts
mov
mov
jo
mov
or
out
jns
jp
jg
pop
xchg
add
push
sub
adc
insb
xchg
repnz
mov
fnstsw
or
in
pop
pop
imul
lock
mov
push
add
fwait
aad
cwtl
scas
xor
add
inc
push
xor
subl
call
cmp
pop
popf
xchg
dec
arpl
out
xchg
fidivs
or
cmc
out
loope
push
jb
adc
cmp
mov
lea
ja
dec
rcrb
dec
and
add
xlat
fiaddl
sub
fstps
mov
lahf
or
lock
sbb
mov
mov
aad
cmp
cmp
fists
dec
mov
mov
imul
add
mov
mov
push
test
mov
ljmp
js
and
mov
in
cmc
neg
cmpsl
mov
ds
jb
xorb
cmp
mov
leave
mov
fidivl
in
lret
pop
adc
aad
inc
repnz
sbb
in
jnp
ja
mov
inc
sub
jo
call
jecxz
cmp
sub
mov
mov
push
sub
lea
or
inc
cmp
mov
and
inc
imul
lret
or
outsb
mov
je
inc
mov
imul
cli
mov
cmp
lds
adc
jp
outsl
mov
dec
cld
outsb
iret
and
push
cld
pushf
lods
or
das
push
popf
imul
jbe
leave
fstps
pushf
les
nop
and
mov
insb
xchg
mov
inc
pop
stc
out
sbb
aas
and
in
ficomps
sbb
idivb
add
lods
push
add
daa
cmp
shlb
mov
aad
jp
mov
loopne
xor
mov
dec
add
add
mov
sub
sbb
push
fcmove
cmpsl
mov
cld
icebp
cmp
mov
scas
pop
pop
sub
and
inc
jne
sbb
loope
ret
jae
mov
push
ljmp
inc
clc
and
adc
cld
jmp
mov
xor
pop
cmp
inc
add
ret
pushf
jne
and
fmuls
inc
je
insl
jp
mov
sbb
call
pop
sahf
jl
add
mov
or
insl
inc
inc
div
inc
shlb
xor
cmp
xor
push
cmp
jns
jno
clc
mov
adc
shlb
push
insb
insl
mov
aas
sahf
movsl
repz
clc
mov
repz
cwtl
js
or
fs
and
int3
shr
test
je
pop
mov
test
lret
rol
push
and
or
test
mov
loop
xchg
fstl
shrl
xchg
stos
mov
movq
cmp
leave
pop
leave
int
ljmp
scas
dec
test
xorl
fdivrl
pop
cltd
sub
add
jae
mov
and
xor
lahf
push
lret
mov
jne
sub
push
fldl
loopne
sub
mov
mov
push
xchg
jg
adc
nop
mov
movsb
pusha
push
in
aaa
cmpsl
and
enter
in
jae
repnz
cld
rcrb
push
sub
xchg
popf
cwtl
cmp
push
jb
lret
mov
es
ss
adc
mov
and
repz
add
inc
insw
dec
movsl
ds
mov
push
out
insl
out
bound
movsl
xchg
jmpw
aam
fistl
cmpl
roll
mov
jne
dec
xor
outsb
stos
daa
pop
adc
pushf
xchg
lcall
stos
xor
jmp
push
xchg
test
hlt
mov
stos
dec
ds
cmpb
xchg
mov
cmc
or
push
imul
lods
cmp
pop
cmp
pminsw
adc
add
mov
xor
fwait
shlb
sub
cmp
xchg
test
mov
dec
jae
mov
add
push
es
xor
pop
dec
pop
cmp
clc
mov
cmp
xor
mov
dec
test
arpl
sbb
fsts
decl
in
rolb
jl
xchg
into
lret
xor
jge
pop
or
pop
xchg
and
sbb
inc
mov
sti
cmp
popf
inc
adc
fldenv
jecxz
dec
gs
test
push
mov
add
dec
testl
push
jmp
call
mov
popf
inc
out
enter
inc
sub
jbe
mov
not
in
ss
scas
push
push
into
popa
and
lods
insb
adc
mov
insl
push
les
in
scas
cs
clc
sbb
push
and
addr16
jle
jmp
mov
mov
loope
arpl
jg
mov
push
mov
xchg
jno
scas
xchg
push
pop
test
pop
out
pop
cmp
mov
push
int
fcoml
jmp
les
aam
shlb
sti
pusha
push
aad
mov
adc
push
xchg
mov
pand
and
sahf
into
jne
mov
js
mov
sub
push
stos
jae
xor
insb
leave
xor
data16
sbb
aaa
decl
or
jbe
stc
icebp
jg
out
jbe
jl
bswap
lcall
mov
cmc
into
sbb
fsubrl
ljmp
mulb
jo
jnp
pusha
cmpsb
sti
fnstcw
inc
jnp
es
inc
movl
add
sahf
ljmp
leave
sbb
mov
daa
les
imul
in
int
pop
inc
or
hlt
push
xchg
out
or
jp
rcl
jg
or
or
and
dec
int3
pop
jbe
int3
mov
lods
or
mov
in
jb
cmp
jae
scas
xchg
jp
mov
lods
and
fsubrp
stos
sbb
fwait
ljmp
sub
lcall
jno
push
dec
push
add
dec
mov
mov
ljmp
pop
add
dec
and
mov
sbb
xchg
leave
adc
xchg
and
or
sbb
cmp
adc
fistps
rclb
and
and
stos
mov
adc
mov
fildll
add
rolb
mov
cmpsl
and
out
aad
inc
sub
orl
inc
cwtl
add
jg
push
lahf
xrelease
pushf
xchg
or
sub
mov
lret
fnstsw
jae
nop
leave
and
sbb
int3
mov
sub
sbb
sbb
in
jns
test
jne
cs
out
pusha
cmp
inc
pop
push
push
in
bound
cwtl
jecxz
jl
leave
pop
ja
xchg
scas
mov
cmpsl
in
cmp
icebp
loop
mov
push
add
cmp
push
lods
push
push
cs
or
pmullw
jno
dec
push
pop
fwait
icebp
and
ja
or
mov
aam
pop
leave
js
mov
addl
or
lods
fildl
jge
push
push
pushf
jo
cltd
dec
push
movsl
mov
xorl
je
xchg
jo
mov
shlb
push
es
in
jnp
mov
jb
xor
and
jle
mov
adc
and
je
rolb
std
stc
jae
out
cld
jns
fsubs
es
sbb
jo
mov
sbb
fiadds
sbbb
and
ret
pop
in
cmp
add
iret
xchg
dec
aaa
push
fildl
in
movsb
mov
fnstcw
test
mov
subb
push
loope
aas
pusha
dec
int
repz
xor
mov
mov
or
mov
jecxz
call
xchg
or
mov
pop
mov
push
lods
inc
jle
cld
aam
pop
sub
push
sbb
enter
xchg
mov
je
scas
nop
xor
lcall
outsb
arpl
int3
add
aam
dec
pop
cmpsb
fldcw
in
ficomps
xor
fcomip
jb
xchg
out
xor
call
or
imulb
loope
std
repz
lock
cmpl
pop
shlb
dec
imul
mov
or
int3
or
icebp
push
inc
fistps
sbb
rcr
scas
stc
shl
test
and
xorl
out
sub
ljmp
cltd
mov
outsb
sub
pop
movl
add
leave
mov
push
inc
int
sbb
imul
int
jecxz
jg
popf
aas
outsl
leave
add
std
bound
sarb
pop
lcall
inc
or
jl
jge
lret
inc
shrl
and
mov
lret
leave
icebp
mov
sti
mov
mov
mul
mov
out
popf
movsl
std
adc
jne
inc
sahf
push
mov
push
push
ja
cmp
out
in
jg
mov
mov
mov
movsb
xor
pop
ds
add
cmc
std
popf
mov
lods
call
mov
stos
pusha
sbb
testl
popf
sub
fldcw
std
loope
cmp
testl
or
in
rol
bound
mov
jo
xchg
jg
or
aam
adc
in
movsb
dec
lods
add
hlt
dec
inc
push
push
test
call
fcoml
movsl
ss
cmp
inc
jnp
stos
fnsave
dec
dec
stos
rcrl
roll
lock
into
add
sub
inc
addr16
adc
clc
xlat
xor
faddl
sub
ss
mov
popa
dec
je
iret
dec
and
hlt
jmp
out
cmc
jge
jle
ficoml
pop
testl
and
sub
cltd
and
int
int3
mov
enter
outsb
fnstenv
cmp
outsb
add
scas
mov
cmpsl
xorl
push
mov
sbb
popa
negb
lret
out
div
xchg
mov
sub
test
inc
in
hlt
lea
dec
imul
push
imul
pop
int3
sbb
dec
iret
out
aaa
sub
mov
out
shll
or
leave
imul
jne
mov
push
aas
in
mov
jno
jnp
mov
mov
jmp
mov
add
jp
js
jae
lock
test
fistpl
std
or
inc
fs
stc
mov
sahf
mov
cltd
inc
rolb
lea
test
cwtl
loop
hlt
test
push
push
mov
cs
ss
loope
sbb
in
cmp
pop
shrl
add
sbb
xlat
push
jge
nop
lock
jle
push
add
adc
cwtl
add
cmp
mov
fwait
pop
outsb
push
mov
insl
rclb
and
and
stos
xchg
fstps
adc
mov
clc
inc
add
xchg
push
popa
dec
int3
inc
fwait
rcrl
fldt
jne
adcb
push
add
in
or
lret
ret
scas
in
stos
dec
or
movsb
add
ja
mov
fisubrs
pop
add
lret
roll
fcoms
inc
xchg
pushf
push
sbb
xor
pop
mov
adc
mov
idivb
ret
call
cmp
cmpsl
or
mov
stos
sub
outsb
leave
jb
jo
mov
pop
and
sub
xchg
sub
adcb
lds
js
imul
out
repz
call
mov
sub
sahf
xor
pop
mov
fdivl
sbb
popf
add
mov
fs
pop
test
sbb
andl
sub
sub
lock
push
lea
push
mov
add
xchg
and
repnz
dec
and
lods
mov
and
jo
hlt
scas
xor
pop
movsb
hlt
push
ja
hlt
aam
out
sbb
jge
std
jmp
hlt
fmul
sahf
push
mov
outsl
and
lret
fldcw
push
or
ja
cmp
enter
repnz
sahf
dec
filds
or
and
pop
std
pop
pop
cmp
add
nop
or
lock
aaa
pop
xor
lods
out
outsb
in
mov
push
or
ja
push
dec
ja
mov
fisttpll
xor
add
push
mov
daa
sbb
mov
inc
sub
and
mov
loopne
jg
out
or
jp
sub
sbb
fwait
clc
inc
jp
int
dec
iret
sti
idivb
dec
push
ficoms
sub
adcb
fs
loop
inc
ja
xor
push
add
testl
pop
loope
cmpsl
test
mov
and
movsl
mov
insl
int
ja
mov
lds
or
shll
xor
inc
xchg
or
cmp
cmc
adc
xor
push
int
rcl
fnsave
dec
sub
movsl
outsl
mov
push
jmp
xlat
mov
repz
jge
jb
mov
jg
scas
xlat
sbb
dec
inc
sbb
cli
ss
inc
push
call
loope
das
cltd
mov
call
out
in
xorb
ja
xchg
mov
outsb
in
mov
xor
cli
call
lea
sbb
jg
mov
mov
add
adc
xchg
pandn
popa
adc
sti
pop
cwtl
mov
jne
inc
mov
pop
sbb
add
xor
repnz
jmp
mov
or
fstpl
aad
pop
fwait
sahf
sbb
imul
mov
int3
or
mov
jmp
out
das
adc
jl
fnstenv
sti
aas
loopne
mov
mov
scas
push
xor
push
movsl
xor
repz
mov
in
ficoml
sbb
lcall
cmpsb
and
mov
xchg
loopne
leave
xlat
imul
mov
xchg
lret
cld
jle
jb
shl
out
test
cmc
jo
cld
pop
lret
pop
mov
out
cmp
in
cmp
push
add
cmp
in
lock
negl
lret
or
sub
mov
lret
daa
jg
push
pop
es
mov
lods
fsubrs
and
cli
jmp
jno
dec
xlat
push
pusha
xor
inc
aaa
push
sub
xchg
jge
das
ja
bound
cs
ret
adc
add
or
into
subb
insb
add
push
mov
int3
lods
in
scas
gs
pop
push
js
call
aad
enter
sub
repnz
dec
or
mov
sub
jno
das
cmp
lock
das
pop
sub
dec
push
out
loop
and
mov
sub
imul
fimuls
xchg
stos
data16
inc
pushf
xor
inc
aad
ljmp
dec
jo
or
mov
or
call
sbb
xchg
movsl
test
jp
aas
das
rol
sbb
test
iret
cmp
lods
jg
or
popa
inc
comiss
std
xchg
stos
pop
in
xorb
loop
xchg
push
nop
repnz
mov
adc
out
xchg
xchg
enter
cmp
adc
or
arpl
pop
mov
adc
ds
push
push
lahf
push
and
xor
fldt
pop
shl
notl
push
in
jo
inc
mov
inc
add
xchg
mov
lds
cltd
cmpsb
cmp
lcall
repz
scas
aaa
dec
jo
int
add
pop
dec
scas
fidivrs
cmp
out
loopne
ds
pop
push
or
jno
stos
push
loop
popa
mov
xchg
mov
aas
dec
outsl
outsb
push
dec
pop
cwtl
loope
xor
loop
cmpsb
jp
fnstenv
bound
xlat
fucomi
adcb
add
xor
imul
ljmp
fsts
pop
or
dec
push
mov
hlt
xor
xchg
outsl
es
inc
cli
imul
cmpsl
iret
aad
mov
scas
out
arpl
arpl
popf
out
xchg
ds
insl
pushf
popf
jae
popf
std
push
inc
cld
sub
cmp
cmp
add
shlb
jbe
cmp
fwait
push
ja
fwait
cs
mov
into
das
mov
sub
daa
outsl
sub
xorb
int3
jmp
xchg
pushf
ds
int
mov
push
jae
dec
imul
and
out
test
sbb
pop
mov
addr16
imul
mov
in
lods
push
dec
mov
ds
mov
mov
dec
pop
mov
and
lods
loopne
aad
adc
pop
and
push
lret
pop
sbb
jmp
iret
or
xor
insb
pop
arpl
in
xor
aam
stos
or
mov
jne
shlb
pop
pop
cs
test
xorb
jbe
add
xor
rcrb
pop
lahf
mov
testb
test
xor
adc
and
pop
xor
cmpsb
jo
mul
insb
inc
mov
mov
cwtl
xor
in
movl
and
sub
shl
jg
test
push
clc
je
sub
nop
lods
icebp
cmp
gs
or
gs
jns
push
mov
aad
cmp
jb
loope
loope
int
xchg
sbb
in
mov
popf
mov
loope
jecxz
jge,pn
call
mov
jno
mov
adc
jp
fmuls
dec
mov
pop
xchg
lds
lahf
and
mov
mov
in
aad
and
mov
jge
mov
pop
icebp
shlb
add
sub
movsb
sbb
cmp
or
in
das
cmp
mov
jl
addr16
mov
lcall
mov
fs
cmp
add
adc
stos
repz
test
push
cmovb
out
stos
cwtl
fnstenv
pop
and
arpl
movsb
dec
mov
mov
inc
cmp
mov
cmpsb
loope
in
push
fnstcw
mov
in
push
mov
sub
clc
das
mov
add
mov
xchg
or
pop
xchg
push
pop
stc
mov
notb
mov
mov
je
idiv
pusha
sub
mov
jecxz
pop
pop
cmp
cmp
xlat
pop
shlb
add
sub
testb
cmp
mov
ret
fistpll
mov
ja
xchg
jge
xor
push
pop
adc
mov
jne
push
aaa
pushf
add
bound
ror
lea
aaa
dec
adc
mov
push
jbe
sub
lods
test
pushf
test
lahf
push
cli
inc
fs
clc
popa
sbbb
test
adc
sti
inc
rclb
and
cli
sbb
sub
mov
jmp
sets
in
cmp
inc
fwait
push
in
arpl
add
push
jg
iret
push
fs
enter
imul
sti
aam
cwtl
sarl
inc
xchg
test
xchg
and
xchg
popf
sbb
insl
popf
lea
jns,pn
push
pop
stc
pop
cs
mov
decl
push
ret
cld
cmp
jo
sbb
scas
in
inc
xchg
cli
xor
xor
cs
xlat
clc
fldcw
out
lret
fcmove
xchg
leave
push
push
sbb
jmp
and
push
mov
pop
sahf
pop
adc
adc
add
mov
cwtl
lahf
popa
add
loopne
cmp
xchg
mov
and
cmp
bound
out
sarl
shl
sbb
iret
lret
rol
pop
cltd
ss
cmp
xor
xor
aas
frstor
adc
es
pop
das
pushf
cli
xchg
inc
or
pop
mulb
xor
sub
dec
jecxz
popa
or
stos
push
push
sub
mov
sbbb
test
push
pop
enter
mov
pop
cwtl
xchg
xchg
ss
cmc
cmp
aaa
xor
loopne
sbb
mov
iret
add
iret
lret
jmp
jo
mov
mov
adc
les
in
leave
ss
adcb
mov
jp
pushf
lea
push
mov
dec
loop
sub
in
xor
sbb
dec
or
adc
mov
outsb
test
rolb
pop
std
mov
shr
xchg
push
inc
jge
or
mov
std
orl
or
stos
pushf
fiaddl
xlat
lret
loope
xlat
enter
sub
es
leave
repnz
mov
clc
mov
mov
and
mov
jmp
ss
out
adc
out
sahf
push
lds
fistps
fsubr
enter
int3
insl
jb
xorb
sbb
dec
movsl
jp
and
dec
out
cltd
sub
adc
mov
sub
or
fstpt
push
cmp
out
and
mov
movsl
loopne
js
cmp
sbb
ficomps
sbb
mov
add
mov
ss
jb
in
lea
dec
sub
or
addb
adc
subl
adc
jae
daa
cmp
rol
sbb
daa
repnz
lret
and
cli
adc
fld
inc
dec
imul
push
insb
loope
or
inc
fdivrl
mov
movsl
loop
xlat
xchg
xchg
xlat
daa
sbb
sub
pop
sub
and
hlt
or
jo
jle
pop
push
jle
sbb
sub
mov
out
in
xchg
or
cmp
jmp
stc
mov
dec
imul
sub
cmpsl
inc
insl
pop
xchg
mov
je
pop
pop
adc
mov
dec
comiss
pop
jmp
das
sahf
out
add
add
sti
loopne
aas
mov
test
dec
imul
adc
sub
cmc
inc
es
add
rorl
and
pop
push
xchg
fxch
adc
push
rcrb
jecxz
push
and
in
aam
ret
adc
or
dec
insb
push
fisttpll
adc
mov
sub
push
pushf
jns
lahf
xor
pop
pop
xchg
pop
jecxz
lret
loope
push
jae
mov
jg
jmp
testl
ljmp
inc
push
sub
pusha
mov
pop
cmp
push
scas
add
addb
ds
or
push
xor
push
mov
mov
sbb
cmp
notl
icebp
cmp
mov
ficompl
cmp
call
sbb
inc
xchg
jp
mov
xor
xchg
mov
adc
xor
mov
rcrb
cwtl
cmp
int
in
into
xchg
orb
xchg
mov
sahf
sbb
dec
dec
pop
pop
mov
aas
jg
xchg
ss
imul
pop
jb
mov
cltd
sbb
mov
popa
sbb
roll
sub
or
divb
cld
sbb
cltd
je
lods
insb
xchg
push
in
mov
cmp
push
fldl
hlt
fidivrl
imulb
lret
jae
scas
lds
dec
push
movsl
das
or
movsl
arpl
mov
ret
fisubrs
leave
dec
xlat
aad
scas
outsl
dec
cmp
mov
add
fmull
test
xchg
aad
fcoms
push
adcb
mov
cli
mov
lock
and
pop
push
fldl
inc
ja
clc
in
mov
jmp
and
cs
les
orl
loop
push
ss
mov
mov
movsl
sub
and
mov
jns
shlb
adc
mov
adc
jns
lcall
mov
stc
outsl
scas
or
ret
data16
jg
or
adcb
lahf
jmp
out
sbb
mov
imul
dec
mov
in
cmp
rcrb
xchg
lea
jmp
out
ljmp
push
cmpsb
mov
shrl
pop
fstpt
jno
jnp
mov
push
inc
dec
xor
jns
enter
jno
lcall
fists
pop
sbb
test
repz
add
and
jmp
xchg
inc
dec
add
pop
es
ja
push
in
push
loop
cmp
ja
dec
fimuls
cmpl
inc
lret
shll
sahf
inc
lea
daa
push
cltd
call
icebp
cs
xorl
jno
test
pop
mov
sub
xor
fwait
mov
lock
inc
mov
adc
das
fcmovb
add
notl
decl
lret
jl
aam
fwait
sahf
arpl
hlt
loop
adc
cmp
test
xchg
xor
sti
xchg
insb
subl
mov
aam
sarl
and
inc
insb
add
jl
cld
mov
jl
dec
loop
sbb
sahf
test
inc
test
and
std
and
jnp
fucomip
adc
sbb
popf
int
mov
movsb
test
push
xor
dec
aad
sbb
xchg
insb
add
sarb
sub
fwait
lea
and
into
mov
adc
insl
int
stc
lods
fildll
jns
or
push
xchg
cmp
add
xor
push
add
and
movl
repz
mov
and
or
loope
pop
inc
inc
stc
int
xchg
xor
pusha
jae
out
push
fldl
insl
cmp
adc
pusha
jae
adc
push
cs
cmc
sti
int
mov
shll
jg
repnz
lods
in
and
cld
movsl
sbb
push
push
sub
sub
mov
mov
or
mov
mov
mov
jecxz
int
push
test
or
add
iret
mov
mov
cmp
imul
cltd
jle
mov
subl
push
push
stos
andb
in
imul
and
xor
imul
mov
test
add
or
sbb
scas
pop
inc
xor
nop
nop
sub
mov
les
xchg
pop
jp
in
inc
add
lcall
fldenv
adc
inc
ljmp
sbb
pusha
lret
cmc
jnp
sub
xchg
xor
flds
fldt
cltd
dec
in
xlat
pushf
adc
fdivl
addr16
push
adc
in
sahf
pop
pop
xchg
in
xor
mov
pop
inc
push
in
xchg
cltd
mov
dec
ficompl
pop
nop
cmp
sub
push
push
clc
or
push
add
xlat
or
clc
sub
sub
mov
ret
and
mov
xchg
mov
popf
jnp
lahf
xor
rclb
out
mov
add
inc
das
or
xchg
mov
push
cmpsl
adc
mov
in
sub
clc
cmp
js
or
jg
ljmp
or
out
mov
enter
fmul
pushf
or
xor
inc
scas
mov
ljmp
add
pop
pop
push
scas
insb
inc
cld
inc
adc
sarb
add
out
inc
mov
pop
xchg
repz
mov
pop
fists
jg
pop
out
aad
push
adc
ljmp
lea
aad
push
xchg
or
int
mov
vpor
rcrl
mov
push
mov
mov
inc
xor
stc
jecxz
stos
or
pop
jmp
mov
sbb
sub
aad
adc
dec
test
and
imul
xor
lock
out
es
pop
cmp
adc
sarl
inc
out
push
cmp
cmp
out
les
push
adc
out
ret
xor
inc
inc
mov
stc
popa
lcall
sti
lods
fcomps
test
mov
stos
ret
inc
sub
dec
aad
push
and
push
aaa
push
cmp
xchg
fistpll
cs
mov
xchg
outsl
ud1
lock
lds
das
dec
ds
je
pop
or
test
nop
sub
fdiv
sub
fldt
mov
xchg
call
inc
or
sti
mov
shlb
aaa
pop
out
cltd
inc
push
in
loope
xchg
fstpt
call
jle
xchg
push
mov
cmpsl
jo
push
pop
sbb
call
or
outsl
inc
adc
inc
mov
mov
nop
dec
jecxz
test
push
out
jg
sbb
add
into
cmpsl
cld
add
mov
mov
adc
mov
sarl
inc
push
dec
inc
cmp
in
xor
mov
fistl
les
leave
in
imul
lcall
and
leave
jle
rclb
mov
mov
inc
addr16
out
mov
hlt
jecxz
dec
sbb
add
jb
fwait
pusha
inc
cmp
pop
mov
nop
mov
vrcpps
mov
pop
mov
lock
sub
arpl
jo
or
or
cmp
fldt
das
dec
sub
negl
xchg
inc
xor
jge
mov
in
mov
adc
lea
repnz
dec
insb
out
mov
push
sub
push
add
ljmp
sub
sub
nop
add
mov
push
dec
int3
xchg
arpl
jbe
push
lds
jb
mov
mov
and
in
imul
sub
xor
ja
mov
inc
out
adc
push
ja
or
mov
mov
add
clc
cmc
fcompl
xchg
out
xchg
mov
out
cmpsb
sbb
sub
cwtl
call
xchg
fdivrs
lcall
imul
sbb
jp
icebp
adc
pop
add
jge
push
dec
pop
sbb
xchg
or
roll
into
incb
imul
mov
xor
das
lock
outsl
ljmp
mov
out
xlat
js
negl
adc
shrl
shll
lods
xor
dec
mov
je
mov
push
adc
movsl
inc
xchg
inc
js
mov
shlb
adc
cwtl
lods
mov
pop
je
stos
js
mov
pop
jo
testl
cmpsl
and
pop
cmp
jae
mov
cld
repnz
and
xchg
sbb
jl
insl
inc
or
loopne
cmp
in
push
or
mov
pushf
or
pop
ret
cmp
mov
or
cmpsb
sbb
xchg
ficoms
pop
fmull
and
dec
dec
loopne
test
pop
enter
mov
jecxz
pop
ja
mov
clc
insl
mov
bound
cltd
stc
ljmp
into
add
dec
cld
movb
mov
mov
mov
shl
sub
mov
and
rcrb
mov
mov
and
lods
insb
dec
push
aaa
aam
dec
sti
roll
mov
xchg
lods
push
and
jg
cmp
fucom
or
adc
in
mov
add
pop
mov
es
andl
mov
in
popa
pushf
addr16
addr16
pop
jns
loopne
inc
nop
mov
popa
and
fstpt
loopne
in
movsl
aam
lods
scas
mov
xchg
int
shrl
mov
lcall
jnp
jb
push
sub
cmp
adc
loop
aas
mov
inc
lret
lret
fcomps
jle
dec
loopne
stos
dec
mov
push
or
inc
pop
jg
aas
adc
xor
arpl
mov
leave
rcrl
ljmp
sub
dec
and
xor
nop
nop
mov
lret
in
vcvtps2dq
shlb
in
jne
mov
jp
or
mov
lahf
jmp
dec
dec
dec
js
or
xchg
add
cmp
push
sub
adc
mov
push
lahf
scas
push
xor
cmp
push
movsl
outsl
inc
sub
add
fiadds
pop
addr16
insb
cmp
cmp
lea
mull
inc
jecxz
stc
fwait
test
cmp
pop
xchg
jle
xchg
std
aas
push
push
gs
movl
push
movups
enter
decb
daa
jo
leave
ljmp
fisubl
mov
insl
and
adc
jge
popf
mov
cs
iret
ds
aas
stos
pop
ret
jae
outsl
insb
inc
push
dec
mov
pop
inc
hlt
in
dec
mov
bound
jno
add
mov
stos
push
add
and
mov
in
clc
int3
mov
sbb
jo
arpl
imul
test
adc
inc
xor
shl
adc
stc
les
pextrw
mov
mov
pusha
inc
rcr
inc
fisttpll
xor
cld
lock
adc
add
ret
push
int3
pushf
ja
jl
cltd
sbb
pop
fimull
jmp
add
mov
mov
test
in
inc
std
lahf
or
arpl
les
cmp
dec
jo
cld
add
insb
xchg
mov
mov
push
adc
dec
mov
or
cwtl
fistpll
mov
cmp
pushf
mov
xor
sbb
test
lahf
leave
mov
out
pop
xor
add
add
jle
xchg
sub
sbb
loopne
call
mov
inc
mov
testb
in
pop
sub
mov
lret
xor
daa
nop
pop
mov
cmp
fdivl
cmp
lcall
fistpll
add
xlat
lea
ljmp
sbb
aad
sti
mov
cmp
fwait
cmpsl
outsl
or
push
xchg
lret
pop
and
xchg
mov
inc
lret
add
stc
pop
stc
aad
aas
in
add
shll
stos
incl
stos
adc
mov
js
push
imul
sbb
mov
jge
ret
mov
les
insl
orb
mov
push
inc
mov
in
push
and
pop
sbb
cmpsl
push
sub
pop
jge
out
gs
jbe
stos
scas
incb
movl
dec
aaa
and
test
push
les
leave
shlb
lret
fstpt
inc
addr16
sub
sbb
fists
pop
pop
push
mov
in
mov
in
push
cwtl
daa
inc
dec
xor
insb
inc
scas
jb
decl
stc
jp
movl
cmp
or
lods
mov
or
push
insl
xor
lret
xor
mov
lea
rcrb
xor
jne
test
mov
loopne
add
xchg
int3
xor
pop
inc
inc
adc
rol
sbb
mov
jno
push
fidivrs
shlb
jb
push
aas
sub
sahf
mov
fldt
int
icebp
jne
mov
lret
je
or
ljmp
jnp
dec
popf
push
mov
push
jg
xor
jae
adc
popa
xchg
xor
pop
pop
fisubrs
popf
into
or
sbb
cli
cmc
bound
loopne
sbb
fmuls
mov
iret
mov
fstpl
sub
mov
daa
push
repnz
into
jmp
iret
idivl
mov
rorb
repnz
idivb
mov
push
adc
push
mov
dec
daa
fwait
adc
and
test
out
jp
xor
pop
mov
sbb
imul
or
dec
mov
imul
xchg
lock
roll
fsubrs
dec
sbb
stos
nop
xor
xchg
pop
int3
cmp
in
or
or
jnp
dec
mov
cmp
in
mov
jbe
inc
test
sub
or
mov
iret
fdivl
push
imul
rcr
cli
add
lods
jg
inc
inc
fbstp
mov
mov
je
cwtl
lret
out
out
scas
shll
jp
cs
das
mov
sub
push
fistps
xchg
dec
test
adcb
dec
xor
int
pusha
ds
insl
sar
jne
cmpsl
bound
and
in
fwait
test
fnstcw
push
movsb
jmp
xor
fsts
adc
mov
mov
test
xor
daa
lcall
adc
mov
lret
mov
test
js
stos
clc
sbb
nop
adc
dec
ja
jle
ljmp
jmp
xor
aas
mov
mov
adc
jnp
pop
sarl
insl
mov
insl
mov
ret
mov
dec
mov
mov
test
xor
movsl
jns
mov
addr16
mov
out
sti
push
outsb
inc
push
or
jp
fildll
je
add
or
jae
xor
sahf
mov
lahf
push
or
and
js
push
in
notl
aam
ljmp
push
les
mov
int3
stc
mov
imul
mov
mov
dec
loop
jmp
xor
icebp
mov
movsb
lds
pop
mov
ss
inc
xor
xor
sbb
sahf
cmpsl
mov
add
aaa
iret
aaa
imul
dec
pushf
scas
cmp
jg
and
outsb
getsec
loopne
jl
scas
gs
bound
movsl
jg
add
mov
pop
xor
fldenv
leave
movsb
or
imul
xchg
into
sub
xor
aad
jl
mov
adc
data16
xor
imul
adcb
roll
in
or
jmp
mov
iret
outsb
or
jmp
lods
xor
sub
arpl
scas
cs
add
pushf
dec
test
dec
outsb
fwait
jno
adc
test
xchg
insl
dec
lds
ja
stc
mov
lcall
ja
pop
test
loop
dec
iret
rep
mov
ja
mov
inc
mov
insl
cmpsl
sbbb
outsb
push
cwtl
cmpsl
mov
pop
jg
adc
popf
and
mov
pop
adc
cmp
pop
sub
out
popa
sbb
xor
es
dec
lods
fimuls
cmp
mov
cld
jbe
sbb
aam
jbe
sbb
inc
xlat
jno
dec
outsb
into
popa
in
jge
add
andb
adc
lcall
stos
sahf
mov
shrb
mov
adcb
push
orl
jp
sub
adc
sub
add
and
loope
mov
or
fucom
push
dec
icebp
rcll
clc
and
fildl
pop
int
mov
jae
bound
and
ret
lret
repnz
sbb
das
cmp
mov
adcl
xchg
insb
xchg
divl
add
xchg
in
mov
adcb
call
pop
sub
jbe
xchg
xor
sub
aad
xor
fs
in
out
xchg
popf
push
ss
ficoml
dec
jle
pop
rcl
pop
xchg
pop
cmp
and
in
push
mov
ficoml
fdiv
or
in
push
push
jp
xor
mov
ja
in
xlat
repnz
mov
xchg
icebp
mov
outsb
js
add
cmpsl
inc
rol
xor
scas
lret
sti
enter
lods
ret
pop
ret
stos
popa
xchg
mov
mov
sbb
inc
je
add
icebp
add
lret
jae
dec
outsb
or
shrl
bound
push
jp
lea
imul
cld
shrb
ret
dec
repz
addl
sub
iret
mov
sub
pop
add
lods
lods
fldl
jnp
mov
fldl
out
dec
jns
pop
cmpsb
lret
cmpb
je
getsec
cmp
fs
fdivrl
cmp
dec
js
dec
bound
mov
mov
fs
fisttpll
mov
fwait
imul
subb
xor
xorb
cmp
push
iret
add
cld
in
cmpl
aam
inc
mov
jmp
inc
or
mov
imul
mov
cld
into
inc
pushf
pop
mov
out
xchg
sbb
pushf
xchg
or
lock
cmp
outsb
outsl
in
int
pushf
push
das
jae
cmp
andl
push
inc
pop
in
add
rorb
imull
jo
dec
cs
insb
and
xchg
cmpb
push
and
xor
jl,pt
lock
sbb
cs
loop
loop
jle
dec
insl
sbb
insb
gs
inc
iret
arpl
cld
xchg
outsl
imul
push
lahf
cmp
popf
rcrb
and
mov
ret
adc
inc
ljmp
fndisi(8087
adc
sub
pushf
imul
pop
orl
sub
and
enter
adc
fnstcw
sbb
dec
mov
into
add
andb
cmp
push
sub
pop
dec
jp
and
add
push
or
dec
xor
push
cmpsb
ret
mov
incb
jg
lret
sbb
rcrl
mov
jg
adc
loopne
mov
lods
clc
mov
dec
test
mov
add
xor
ds
in
sbb
out
es
sti
xchg
shrb
scas
cli
mov
fiaddl
cwtl
add
cld
fs
decb
icebp
mov
in
xchg
fwait
mov
inc
in
sub
repnz
push
and
test
sbb
jns
push
jl
mov
shll
push
inc
in
push
iret
ds
lret
clc
xchg
imul
xchg
jecxz
or
orb
sti
aaa
pop
pop
out
adc
mov
aaa
jns
mov
mov
in
push
adc
mov
or
or
popf
mov
pop
stc
test
or
mov
shl
add
lret
xchg
sub
js
jl
add
mov
fsubrs
dec
pop
ja
add
loope
xchg
add
mov
cmc
adc
or
lods
inc
jb
std
jns
pop
popf
outsl
mov
je
rcrb
fnstcw
push
stos
pop
nop
out
inc
inc
cld
cmp
mov
cmpsl
les
xchg
outsl
lret
jecxz
cmc
mov
add
outsl
mov
mov
xor
rcrl
scas
sti
mov
and
ja
xor
add
add
pop
or
into
jle
loop
rcll
mov
jle
out
lret
clc
iret
adcb
jbe
sub
jge
mov
je,pn
data16
jle
push
popa
ja
or
je
xchg
inc
xchg
pushf
pushaw
mov
imul
mov
sbb
pop
push
pop
out
mov
sub
xchg
pop
fs
mov
mov
and
movsb
and
jo
or
push
and
rcrl
jae
xchg
sub
mov
lret
or
jnp
add
pusha
add
sbb
outsl
mov
scas
or
mov
adc
lods
andl
xor
orl
mov
repnz
push
sub
sarl
push
push
inc
mov
test
xchg
test
das
add
lods
divl
loop
div
cmp
add
sbb
xor
sub
jno
bound
xchg
repnz
stos
cmpsb
push
lods
sbb
cs
iret
shl
pop
lods
lods
push
mov
mov
repz
mov
test
mov
cmc
xchg
inc
sbb
cltd
push
stos
jg
sub
sahf
testb
xchg
cmp
fsubs
adc
pop
mov
adc
out
stc
pop
js
xchg
jno
setns
inc
scas
adc
fwait
testl
jae
sub
pop
push
and
cmp
mov
cltd
ljmp
xor
lea
xlat
adc
jns
cmp
js
outsl
mov
add
pop
push
addr16
rcr
xor
loope
mov
mov
ss
sbb
out
in
mov
and
dec
pop
test
fdivr
add
pop
mov
lcall
int
in
lret
dec
mov
inc
shl
xorl
xor
out
mov
adc
xchg
mov
pop
lret
jne
push
adc
callw
mov
push
inc
lret
cld
pushf
cmp
jmp
cld
icebp
in
aam
scas
pusha
add
xchg
adc
insl
repz
mov
mov
add
sub
into
into
mov
frstor
les
xor
movsb
cmpsb
jo
xchg
loope
icebp
fmuls
xor
insb
or
mov
or
mov
mov
into
xor
fdiv
jo
and
les
xlat
push
mov
daa
loope
and
or
sbb
mov
movsb
enter
ror
adc
dec
mov
insb
lods
mov
mov
cwtl
cmp
cld
push
fs
fdivp
lea
cwtl
mov
jne
or
lods
lret
sti
pop
fwait
test
dec
aam
inc
cwtl
lods
int3
dec
mov
std
push
add
cmc
jl
repnz
in
test
pop
cs
lret
mov
int3
mov
pop
clc
mov
cs
push
sbb
cmc
repnz
sbb
mov
xor
aas
mov
addr16
in
dec
subl
cld
adc
movsl
imul
mov
jp
push
adc
sub
sti
jno
cwtl
and
incl
call
ret
seta
pop
jg
testl
cld
xchg
pop
jns
push
movsb
add
xor
sub
out
add
push
inc
sbb
enter
cs
fcmovnb
int3
sub
dec
sub
push
and
xchg
sahf
sbb
rclb
mov
pop
mov
sbb
push
stos
mov
enter
adc
std
sub
mov
aad
sbb
outsl
and
mov
fistpll
mov
push
jp
cs
push
es
ret
scas
jmp
ljmp
test
out
sar
jmp
decb
xor
pushl
xchg
out
lea
je
dec
pop
js
xchg
sbb
cmp
lret
cli
jns
nop
js
pop
and
clc
out
je
fs
aam
xchg
xchg
lret
inc
or
jg
add
mov
mov
xchg
shrb
xchg
ds
mov
std
sarl
push
fwait
push
sbb
jl
inc
test
int3
cmpsb
testl
aam
inc
jb
lock
rorl
jno
dec
icebp
repnz
jg
sub
loopne
scas
mov
sbb
outsb
loop
fisttps
nop
xorl
testb
jge
sbb
push
xchg
mov
mov
loop
aam
adc
dec
inc
fldcw
iret
sub
sbb
daa
dec
adc
mov
pop
les
adc
pop
nop
sbb
mov
in
inc
inc
sbb
repnz
jnp
cli
adc
imulb
into
fdivl
cli
repnz
xor
cmp
aad
ljmp
fcmovnu
cs
fsubl
call
add
inc
test
inc
in
jge
hlt
or
out
jp
xchg
mov
pop
inc
or
dec
ret
mov
mov
hlt
xchg
and
and
in
jae
cwtl
pop
or
adc
sar
movsl
push
cld
dec
insb
pop
ret
clc
stc
in
outsl
dec
push
push
jne
daa
addr16
incl
sbb
cltd
dec
out
lock
loop
movsl
nop
push
xor
jno
popf
cmpb
out
add
orb
test
jns
clc
pop
adc
pushf
das
jb
sahf
adc
mov
cmpsb
adc
push
insl
mov
add
data16
inc
cmc
xor
or
rorb
dec
or
and
dec
popf
add
rcrl
and
lds
das
call
imul
add
cs
fcomip
ss
mov
enter
inc
mov
cltd
lock
addr16
dec
push
inc
jbe
or
fwait
and
ret
mov
out
mov
cmc
out
sub
dec
icebp
inc
adc
xor
aas
jmp
cwtl
sahf
cmp
mov
repnz
cwtl
cli
jg
pusha
roll
xchg
test
jmp
lret
imul
mov
mov
dec
jmp
icebp
pop
jmp
xchg
negl
inc
add
xchg
lcall
dec
cmp
sbb
mov
pop
cld
add
inc
pop
inc
jp
mov
outsl
lea
cmp
or
pop
lods
orl
xchg
jb
mov
and
pop
pop
sub
negb
xor
xlat
loopne
sub
push
jl
repnz
flds
aaa
and
xchg
enter
lret
out
inc
mov
jmp
push
mov
push
add
test
jecxz
insb
add
push
in
add
mov
ret
aam
lret
pushf
loopne
adc
inc
push
mov
pop
stc
mov
inc
test
scas
mov
in
adc
xchg
mov
mov
pop
out
mov
rorb
and
test
mov
xor
addb
mov
mov
je
insl
pop
stc
shlb
insl
outsl
movsl
jns
mov
mov
xchg
clc
out
xor
and
inc
adc
stc
pop
js
jge
mov
and
xchg
or
pop
int
stos
dec
pop
adc
pop
fwait
add
sbb
fists
ss
sbb
fists
pop
jg
pop
gs
dec
cmc
shlb
or
cmp
popf
pop
icebp
add
mov
cmp
insl
outsl
scas
xchg
mov
inc
add
pop
mov
xchg
test
gs
hlt
lahf
lods
dec
pusha
cs
sub
hlt
test
lar
sbb
or
or
cmp
jbe
or
pushf
ja
mov
or
mov
pop
and
fs
xchg
enter
inc
inc
and
fdivr
cmp
xlat
and
add
ret
lods
scas
daa
cs
dec
lods
xor
outsb
sbb
test
xor
mov
inc
cmpsl
dec
mov
aam
inc
push
outsb
jns
out
push
jb
daa
in
xor
sbb
cmp
dec
cmp
dec
subl
push
out
rorb
and
shl
in
negb
loope
cwtl
notl
jne
iret
and
inc
pop
or
sbb
xchg
mov
mov
mov
les
mov
pop
mov
add
inc
sahf
ret
and
lods
add
xchg
xor
outsb
and
insl
fstl
mov
adc
jge
aam
jmp
loope
xlat
lock
cmp
add
inc
std
jl
jecxz
sub
and
aam
mov
xor
in
xorb
mov
sahf
mov
and
lret
cmp
cmc
inc
xchg
nop
daa
inc
idivb
mov
enter
imul
fcomp
mov
mov
in
ficoms
lds
scas
or
xchg
cmp
add
push
ffree
imul
mov
scas
data16
lods
adc
jp
imul
loopne
pop
imul
mov
cwtl
inc
out
mov
repz
xchg
mov
std
push
mov
lahf
sbb
nop
gs
or
or
insl
fimull
xchg
or
iret
push
insl
push
sbb
cmpsl
fs
push
inc
add
jp
add
mov
pop
adc
jns
jg
jno
mov
ror
inc
cmp
xor
jp
push
mov
xchg
inc
ficomps
loopne
or
movsb
movsl
lret
or
mov
scas
inc
jp
lcall
adc
mov
xchg
lcall
out
insl
jle
sub
inc
add
or
shll
pop
imul
mov
roll
pop
popa
into
dec
insb
test
popa
jl
or
dec
arpl
and
iret
sub
aas
gs
lret
jb
fiaddl
adc
and
stc
sub
jne
mov
idivb
lret
inc
jp
scas
jl
data16
test
xchg
outsb
xor
mov
add
and
push
ret
ss
cmp
test
pop
pop
adc
jp
mov
daa
pop
xchg
shll
jl
or
xor
lea
movsb
lock
sbb
add
adc
mov
shl
loopne
sbb
icebp
inc
popf
dec
movsl
enter
mov
daa
fst
test
mov
call
out
mov
pop
cmpsb
mov
sub
xor
stos
out
pop
xchg
test
cltd
mov
daa
es
pop
cmp
jbe
or
xchg
pusha
xorb
addr16
adc
adc
push
xor
ljmp
pop
test
stos
and
lock
push
jbe
fstps
sub
jecxz
pop
push
js
leave
dec
leave
addr16
or
jge
nop
and
or
scas
mov
inc
aad
out
punpckhwd
leave
push
rcl
in
pop
mov
fisubrs
ficoms
jmp
inc
push
add
sub
cmc
mov
iret
ljmp
cmp
fs
push
lcall
pop
adc
pop
and
jmp
shl
gs
mov
aas
scas
movsb
sahf
adc
scas
aam
test
pop
xchg
int3
movsb
cwtl
mov
push
hlt
mov
fdivrp
rcrb
leave
mov
xchg
mov
jg
es
dec
sbb
adc
aad
mov
cld
test
enter
sarb
mov
cmp
movq
in
adc
icebp
pop
mov
ret
fiadds
test
mov
jmp
pop
sti
mov
jl
inc
push
cmp
cmp
call
mov
ds
rolb
jecxz
push
dec
ja
push
jbe
les
inc
ljmp
cli
lods
pop
dec
arpl
xchg
jg
mov
jo
jo
dec
dec
in
data16
fs
sahf
popa
and
xor
and
test
mov
in
dec
pop
dec
sub
add
pop
push
pop
xchg
popf
xchg
xchg
test
dec
loopne
mov
jp
hlt
cmp
in
pusha
repz
mov
out
sbb
fidivs
lea
inc
setno
mov
out
fisubrl
fidivl
or
loop
xor
stos
pop
int
test
sub
pop
xchg
mov
fs
repnz
xor
and
fdivs
add
push
shrb
aas
repz
xchg
repnz
popa
out
lret
sub
jge
pushf
sub
jecxz
cmp
mov
in
adc
pop
shlb
rcll
andl
xchg
adc
rol
lahf
add
pop
into
mov
dec
decb
scas
xlat
dec
mov
mov
lret
xorl
add
inc
popa
stos
pop
cmpsl
sbb
pop
test
and
xchg
std
push
push
mov
mov
pop
inc
pop
or
sub
das
ja
in
pop
loopne
shlb
push
sub
dec
fcompl
call
xor
fsts
mov
sub
adc
test
cmp
add
xchg
push
dec
and
icebp
xor
popf
sbb
and
pop
xchg
pop
jle
adc
cld
sub
jae
sahf
aaa
push
cld
or
mov
push
mov
adc
imul
xchg
shlb
cmp
imul
loopne
mov
pusha
enter
jge
dec
xchg
mov
pop
sbb
jo
fdivl
ljmp
adc
adc
rclw
jnp
mov
movb
inc
mov
cmp
mov
cmpsl
mov
push
xor
ja
xchg
test
cmp
jge
cld
ret
int3
pop
dec
dec
jmp
hlt
cld
jns
add
pop
test
jne
insb
cmp
cmp
loopne
mov
fsubrl
lock
adc
mov
cld
gs
xchg
mov
add
adc
inc
inc
out
rorl
push
int3
loopew,pn
jmp
xchg
jmp
mov
pop
icebp
jns
in
out
add
or
int3
adc
jnp
inc
int3
cmpsl
in
jne
lret
xchg
ljmp
rclb
lahf
ja
add
sub
jmp
mov
notl
and
push
and
jo
mov
repnz
adc
rcrb
les
int
xchg
aad
xchg
into
add
in
gs
adc
adc
cmc
xchg
leave
mov
ds
cmc
mov
or
xor
js
sbb
dec
in
push
adc
and
sbb
arpl
lret
dec
inc
inc
mov
ret
mov
pop
fs
or
inc
pop
sub
mov
ret
jnp
and
mov
dec
js
push
lea
and
cld
fdivr
outsb
mov
lds
jns
push
inc
sti
fcoms
cltd
sbb
push
cli
in
les
inc
xor
dec
in
and
or
mov
daa
jmp
jnp
inc
test
or
adc
sub
pop
xchg
dec
pop
mov
mov
jns
aad
fidivrs
add
jno
inc
pop
xor
loop
ret
scas
and
xor
lods
jne
or
mov
scas
or
rolb
ret
pusha
jl
and
inc
add
jp
xchg
or
int
pop
aaa
inc
jne
inc
pop
sti
aas
outsb
js
xor
lcall
fbstp
pop
shlb
insb
scas
add
lea
popf
pusha
adc
dec
leave
jl
dec
loop
xchg
pop
insb
jp
stc
loop
sarl
xor
fstps
and
bound
pop
xchg
xor
in
inc
jmp
aaa
fldcw
dec
pavgw
ljmp
and
jge
pop
dec
xchg
fcoml
xor
pop
xchg
xorb
push
je
and
sbb
mov
out
fbstp
popa
pop
or
push
pushf
lret
fisttpl
mov
stos
adcb
mov
inc
dec
xor
cmp
xor
and
loope
test
ret
test
or
in
std
andl
xor
push
sbb
add
outsb
hlt
movsl
mov
flds
aaa
je
loopne
sar
ljmp
dec
aad
xor
scas
jnp
cmp
lret
cmpsb
jmp
pop
movsb
jge
addr16
clc
lds
sub
inc
nop
call
mov
mov
mov
test
lea
into
add
add
cmp
push
jns
or
pop
or
call
mov
and
ret
in
xor
leave
stc
rdtsc
mov
xchg
jbe
xchg
mov
and
lods
jnp
negl
pop
pop
addr16
inc
pop
and
adc
pop
sub
lds
lock
gs
pop
roll
aaa
inc
es
fcomps
and
mov
add
xchg
stos
xchg
mov
add
inc
fmul
mov
lret
into
in
dec
and
add
cwtl
jge
push
bound
shlb
sbb
adcl
push
stos
and
mov
nop
in
inc
sub
sub
idivl
xchg
stos
jo
and
adc
scas
out
mov
stc
xchg
mov
gs
sbb
and
rol
cmp
xchg
mov
sbb
pop
push
cmc
jne
mov
leave
xor
ljmp
test
jp
shlb
fistpll
push
cli
push
flds
icebp
jns
std
dec
mov
cmp
xor
sti
sub
sarl
jae
icebp
pop
and
test
test
mov
cltd
dec
dec
xor
jo
outsb
aam
push
pop
jg
stos
out
rolb
dec
cmpsl
idivl
popl
pop
xor
or
dec
mov
mov
dec
bound
pop
sub
sbb
mov
popa
jge
scas
and
push
movsb
popa
xchg
orb
in
je
hlt
sbb
into
addr16
xchg
insb
xchg
or
and
pop
mov
pop
cmp
lret
sub
imul
inc
xor
mov
xor
push
mov
mov
push
push
push
hlt
mov
mull
xchg
mov
xor
std
xor
xor
sbb
gs
insl
push
stos
cmpsb
adc
push
fnsave
jno
dec
cli
push
mov
jge
xor
test
or
sbb
dec
dec
sbb
movsl
mulb
out
fucom
arpl
icebp
pop
data16
jge
pop
ljmp
cmpsb
or
ror
gs
pop
dec
sub
sbb
lods
cltd
sahf
jae
jne
push
mov
xor
fiadds
mov
imul
enter
stos
mov
lret
mov
mov
es
push
push
outsb
push
lea
pop
mov
fimuls
adc
out
lret
mov
mov
jbe
dec
inc
or
mov
xchg
pop
pop
std
ss
movsb
pop
dec
and
or
into
adc
jle
mov
popa
cs
mov
rolb
std
fcomp
fstps
out
lods
push
or
mov
pusha
out
xchg
mov
pusha
pop
mov
pop
push
test
addb
adc
inc
jecxz
test
lock
xor
arpl
xor
jno
stc
xor
and
mov
in
ret
push
loopne
je
arpl
les
mov
insb
xorl
sbb
cmp
sahf
sti
adc
aam
xchg
adc
call
dec
mov
pop
aad
fidivs
shl
pop
dec
sub
push
mov
outsl
inc
loop
ljmp
test
cmp
cmp
jp
cmc
mov
mov
vcvtps2dq
pushf
ljmp
lcall
loop
aam
xchg
ret
ja
cmp
arpl
sti
push
mov
mov
inc
pop
push
loopne
jg
data16
data16
jecxz
mov
cmpsb
xor
mov
lea
and
mov
dec
xor
cmp
inc
dec
inc
jg
mov
fstl
cmp
loopne
sub
loope
pop
jae
inc
mov
pop
and
dec
mov
dec
aad
add
xchg
mov
mov
ret
mov
mov
hlt
dec
xchg
cwtl
adc
ret
dec
sub
je
or
fcomps
ljmp
xchg
and
xor
movsl
in
pop
jmp
jle
lcall
leave
ss
testl
sub
les
mov
xchg
in
xchg
jl
lea
inc
shrb
outsb
mov
xchg
add
out
ljmp
lods
jbe
dec
pop
in
mov
sahf
out
mov
dec
aam
and
dec
scas
test
jl
and
shr
jle
test
fdivr
stos
xchg
mov
add
cs
not
mov
sub
pop
jb
sti
dec
push
leave
pop
adc
out
rcl
mov
gs
and
dec
test
mov
cmc
decb
add
decl
fcoms
mov
mov
enter
adc
pop
adc
frstor
pop
sub
xor
cmpsb
push
jb
mov
adc
lds
sahf
jge
aaa
and
add
rclb
jns
iret
cld
add
out
jmp
cwtl
push
rcll
into
inc
mov
iret
dec
loop
js
jmp
xor
xor
lods
push
cmpsb
cmpsb
cwtl
cld
pop
jb
or
add
or
inc
xlat
push
mov
sbb
rolb
add
pop
repnz
inc
stos
in
cmp
cld
xor
cs
daa
test
nop
cmp
inc
jg
sbb
rcrl
mov
divl
sub
cld
dec
mov
rcll
dec
lods
add
sbb
lea
movsl
sarb
cwtl
orb
pop
add
dec
lea
xchg
sti
jmp
test
sbb
cwtl
sbb
sub
rcrl
xchg
fidivs
addr16
je
jg
insl
inc
dec
fildll
push
push
sub
pop
push
aad
ret
loope
aaa
lahf
inc
inc
inc
test
add
inc
pop
xchg
add
fyl2x
in
sbb
pop
mov
rol
xchg
outsb
imul
insb
jae
divl
dec
test
into
xor
daa
enter
adc
or
jno,pt
push
rorl
imul
cmc
push
addr16
je
mov
loopne
mov
inc
int3
stos
xchg
mov
sbb
sar
jmp
mov
sbb
jmp
jae
jne
int3
inc
out
lcall
jne
dec
cld
cmp
ljmp
sbb
pop
mov
or
out
dec
addr16
add
and
out
fdivp
lahf
les
push
arpl
stos
aaa
jae
mov
ror
or
dec
xor
pop
inc
outsb
inc
mov
push
sbb
iret
int
repz
test
pop
iret
pop
adc
ds
inc
das
lcall
dec
jnp
cmp
cmpsl
inc
pminsw
test
aaa
jbe
das
lret
jno
pop
adc
cmc
fwait
mov
scas
jno
jl
dec
bound
ret
daa
and
imul
daa
mov
mov
or
cld
xchg
xor
xchg
pop
jns
loopne
jo
pop
shrl
add
mov
cmpsb
cmpsl
inc
sbb
pop
data16
adc
leave
shlb
fbstp
and
fiadds
dec
lret
and
add
mov
adc
aaa
push
push
cmp
adc
sub
or
cmp
adc
mov
lea
xchg
cltd
push
sbb
push
jmp
mov
scas
lods
jae
push
adc
add
cmpsl
dec
xchg
adc
repnz
mov
mov
mov
push
stos
roll
pop
enter
dec
mov
aaa
inc
adc
adc
cmpsl
and
movb
xor
pop
lods
dec
arpl
dec
mov
inc
arpl
mov
mull
sub
dec
mov
dec
jecxz
mov
fcoms
mov
dec
and
sahf
or
sbb
adc
xchg
ret
xor
mov
dec
pop
rcrl
mov
sbb
pop
pushf
ljmp
add
dec
nop
lret
cmp
lret
mov
je
je
out
or
stos
mov
or
xchg
fstp
push
insl
lock
mov
add
add
decl
cs
mov
mov
push
inc
jbe
insb
mov
adc
pop
adc
popa
fs
sub
sbb
add
movl
mov
stos
inc
sahf
pop
loope
das
jnp
int
popa
daa
test
add
mov
data16
inc
sub
jg
ret
aas
out
pop
dec
xor
xchg
sbb
stos
push
or
lods
or
repz
mov
fistl
push
adc
ja
dec
add
iret
xor
call
push
ret
fdivs
add
cmc
shlb
fildll
rol
bound
fcomp
scas
jg
push
daa
jns
repz
not
mov
add
les
repnz
lret
sbb
repnz
and
cwtl
imul
daa
push
mov
mov
jb
jmp
clc
imul
sbbb
shll
into
dec
push
int3
sbb
sub
or
xchg
inc
das
jno
add
mov
daa
add
popa
xchg
in
or
mov
push
xchg
shll
mov
add
pop
idiv
push
mov
lods
inc
mov
mov
push
gs
jp
hlt
pop
leave
mov
cli
push
xor
mov
inc
sbb
xor
xor
fmul
popf
xor
addl
mov
add
add
dec
sub
inc
and
aaa
mov
nop
ds
das
push
and
mov
into
pop
mov
push
aas
push
sub
pusha
scas
in
cmp
jl
fiadds
dec
pop
sbbl
cwtl
cltd
rol
ljmp
adc
sbb
dec
stos
sbb
mov
mov
sub
scas
mov
loopne
fs
or
push
rorl
and
dec
add
sbb
nop
iret
jno
cmp
enter
or
in
pop
mov
out
sbb
cmp
or
mov
cmp
inc
add
daa
add
std
pop
adc
mov
outsl
faddl
pop
and
push
inc
mov
in
aaa
jecxz
loopne
out
ja
mov
adc
add
lret
iret
or
aad
pop
mov
test
inc
mov
pop
cli
sub
jmp
and
pop
xchg
aaa
sub
push
push
imul
rcl
pop
lods
cld
test
pop
test
or
sbb
sub
jle
stos
fbld
dec
and
mov
add
notl
push
imul
jmp
adc
mov
cmp
mov
or
jg
dec
into
mov
rcll
adc
cmp
dec
xchg
mov
cld
sarb
sub
or
sub
jo
fnstenv
sub
inc
dec
stos
daa
ss
push
out
inc
fcoml
and
mov
add
mov
fs
or
or
cmp
cmpsl
xchg
cltd
and
xor
shlb
jns
lret
push
pop
xorb
cmp
test
hlt
pop
xchg
jecxz
je
lods
add
dec
outsl
dec
push
lret
jge
cwtl
or
xchg
jle
stos
pop
insb
out
fstpl
bound
adc
test
dec
xchg
arpl
lock
xchg
adc
int
aaa
inc
leave
jnp
sbb
test
and
cmpsl
insl
jle
mov
aaa
sub
fcmovne
mov
clc
or
test
sub
or
pop
sub
stos
mov
push
imul
lcall
push
mov
inc
xor
rol
into
and
aas
push
fxch
wrmsr
cltd
jg
sbb
mov
xchg
movsb
out
adc
sub
add
pop
fucomip
repnz
lock
fs
into
jmp
fadd
inc
js
fsubl
pop
or
outsl
adc
cmp
inc
pusha
add
jmp
or
lods
xchg
xchg
lcall
lret
adcl
mov
std
rcll
mov
rorb
std
fdivs
bound
adc
mov
xchg
dec
inc
inc
out
mov
aad
les
adc
jnp
add
jnp
cs
ljmp
lcall
in
push
sub
sub
mov
mov
and
mov
mov
popa
cli
dec
and
and
jno
add
or
jp
shll
xor
mov
sub
sbb
std
dec
jl
mov
insb
mov
push
cwtl
outsl
ficomps
repnz
sub
jbe
pushf
inc
outsl
popa
dec
mov
xor
cwtl
sti
or
rolb
fistpll
jns
pusha
aas
mov
mov
dec
fsts
movsb
push
sarl
icebp
inc
lods
pop
sbbb
pop
imul
fdivl
jo
enter
fdivrp
xchg
sub
mov
pop
mov
add
push
lret
mov
xchg
push
jmp
incl
lea
inc
int
mov
adc
lahf
sub
inc
adc
mov
xchg
imul
je
inc
pop
or
xor
imul
add
nop
ss
sahf
movsl
xchg
test
adc
popa
or
test
inc
sbb
neg
bound
add
xlat
mov
mov
dec
lret
xchg
int3
jl
jp
mov
daa
jmp
cmp
adc
lock
pusha
insl
ljmp
mov
ffree
shl
dec
and
sbb
lret
inc
mov
pop
lret
rclb
adc
es
jle
repz
mov
daa
aas
cmpb
mov
sti
int3
insb
sbb
and
xchg
repnz
sbb
repz
pop
xchg
shll
dec
push
xor
mov
mov
or
mov
push
pushf
mov
push
mov
imul
add
aaa
sbb
inc
inc
clc
shlb
jns
sahf
dec
dec
lea
sbb
cwtl
leave
fstpt
popa
loopne
or
mov
mov
jmp
outsb
push
sti
shlb
nop
sbb
jb,pt
pushf
dec
mov
je
sub
movsb
in
in
js
xchg
mov
outsl
je
xor
mov
les
jl
xor
test
aaa
in
movsb
arpl
or
shrb
xchg
or
inc
sbb
cmp
sub
ds
push
xor
hlt
mov
lret
push
mov
push
dec
or
int
loop
dec
push
xor
jbe
push
mov
adc
lahf
and
das
or
ret
push
xchg
inc
mov
inc
push
das
cmp
aam
pusha
frstor
xor
dec
in
imul
jl
push
push
fldt
fimull
in
inc
jmp
mov
or
fiadds
dec
sub
inc
int
and
adc
pop
inc
loope
xorl
and
pop
outsl
ror
xor
test
mov
mov
xor
add
fiaddl
dec
mov
push
rorl
imul
push
outsb
mov
jne
les
inc
outsl
pusha
or
mov
ds
pop
nop
mov
scas
xor
rorb
and
or
icebp
adc
jmp
sbbb
ret
lahf
xchg
ljmp
data16
fsubs
dec
addr16
push
adc
lahf
outsb
pop
pop
sbb
pusha
xchg
shl
sahf
pop
movsb
arpl
nop
jge
cmpsb
pop
outsl
dec
cs
and
sbb
sub
or
lcall
or
or
push
push
inc
xchg
inc
sbb
xchg
aas
repz
mov
cmpsl
ret
out
stc
stos
pop
mov
jg
pop
or
in
cmc
shlb
push
add
bound
lret
mov
lcall
dec
cmc
jns
xorl
cmp
or
scas
daa
sti
in
pop
mov
push
push
ds
gs
adc
cmp
cld
add
sahf
adc
aas
inc
inc
fsubrl
andb
movsl
sbb
sbb
pop
movsb
pop
pushf
inc
add
xor
loop
mov
sahf
mov
mov
pop
cmpsb
stc
inc
adc
dec
inc
inc
mov
jns
rcrl
lcall
aaa
stos
data16
dec
imul
pop
mov
stc
out
adc
jae
inc
jno
rolb
mov
mov
movsl
add
cmp
push
cli
lahf
sbb
xchg
scas
adc
cs
test
fdiv
cmpl
jmp
les
orb
or
bound
add
hlt
xor
xor
mov
xchg
inc
mov
sbb
or
js
cmpxchg
mov
and
insb
ljmp
pop
pop
mov
pushf
lock
rorl
mov
cmp
jo
sub
xorb
fwait
cmp
stos
pop
imul
out
pushf
insl
mov
std
mov
lahf
mov
pushf
bound
and
mov
pusha
xor
les
mov
or
mov
inc
cmp
fs
xchg
ret
mov
out
and
cmc
push
sbb
sahf
mov
shll
push
ss
out
adc
add
nop
imul
jae
push
andl
cmpsb
and
pusha
pop
shll
ret
xchg
sarb
scas
pop
adc
ret
mov
outsb
add
lret
sub
js
sbb
and
loope
or
ja
aaa
xchg
fsubp
in
stos
lahf
gs
testb
jns
and
je
cmp
outsb
mov
and
cmp
cmp
cld
stos
outsb
mov
push
or
out
jnp
in
xor
outsb
pop
cltd
dec
or
sbb
pop
enter
movsl
insb
adc
jecxz
push
fistps
push
pop
bound
ds
dec
icebp
out
daa
dec
and
jae
adc
and
shl
mov
andb
imul
xchg
sahf
out
bound
paddusw
xor
popa
and
push
ret
xchg
inc
pop
out
mov
push
dec
adc
jg
adc
cmpsb
xchg
add
scas
mov
mov
pusha
test
shll
psadbw
pusha
cld
imul
mov
pop
mov
xor
gs
aas
jmp
stc
dec
cmpb
jno
mov
subb
sub
fdivrp
jb
or
dec
js
jle
inc
sahf
mov
ss
xchg
push
clc
daa
dec
ja
in
cmpsl
cmp
dec
mov
and
inc
cwtl
push
in
movsb
cwtl
push
cmc
push
pop
and
mov
jmp
add
inc
xor
dec
mov
or
dec
push
hlt
fsin
out
shrb
sub
mov
sbb
adcl
stos
arpl
adc
sbb
orb
hlt
xchg
insl
inc
dec
scas
fldl
mov
adc
ljmp
insb
xchg
std
subb
mov
xor
cmp
outsb
mov
sub
in
movsb
inc
insb
aaa
mov
pop
sub
shrl
dec
adc
push
test
mov
push
sub
lock
jo
lods
mov
sub
add
popa
je
dec
xlat
test
jne
push
stos
fimuls
sahf
cwtl
mov
or
inc
rol
sbb
sub
fstl
test
lea
shlb
dec
jne
outsl
stos
or
popf
lret
push
mov
popf
lret
int
hlt
push
push
mov
push
inc
dec
xor
pop
and
cmpsb
movsl
or
inc
in
adc
fldln2
and
push
popf
in
inc
jmp
inc
repz
inc
mov
aam
sub
jae
subb
and
push
aas
rclb
in
jbe
cmc
and
pop
sub
and
jge
mov
or
cltd
sarb
pop
or
sbb
pop
movsl
xchg
flds
push
mov
popl
rcrl
imul
loope
sahf
mov
and
cmp
loopne
push
jmp
xchg
dec
cmp
sub
mov
jmp
test
jmp
cs
stc
std
push
jno
inc
fmull
outsb
and
movsb
js
and
jb
push
inc
jp
test
mov
in
inc
pop
pusha
xchg
fsubp
mov
daa
lcall
mov
push
jmp
xchg
rorb
bound
insl
dec
in
cmc
leave
das
mov
aaa
shll
push
xchg
outsl
xchg
and
adc
sahf
insb
std
adc
push
and
fincstp
xlat
stc
ret
xchg
data16
adc
loope
sbb
mov
lds
pop
in
jbe
mov
sbb
sub
add
sbb
jmp
xor
xorl
add
cmpsl
addl
inc
out
jns
jmp
stos
cmc
mov
pop
xrelease
mov
xor
cmp
lret
dec
pop
mov
aas
mov
xor
lcall
dec
add
lods
cmp
or
sub
adc
cmpb
xor
jl
icebp
mov
pop
cmp
xor
push
mov
mov
fbstp
xchg
and
inc
xor
sarb
sbb
add
sub
cli
das
subl
xchg
xchg
dec
movsb
scas
add
pusha
rcrb
loopne
mov
adc
jp
push
imul
es
jg
pushf
mov
mov
sbb
xchg
xor
jecxz
adc
jo
jecxz
jo
xchg
jmp
and
sarl
sub
in
inc
sbb
mov
pop
cmp
ret
pop
stc
mov
and
dec
mov
xor
aas
pop
mov
push
jmp
lea
mov
and
pop
into
pop
test
and
add
sbb
push
inc
shl
xlat
mov
imul
outsb
sti
inc
pop
sti
in
adc
sti
fcmovnb
sub
jae
inc
stos
inc
and
jns
push
cli
jno
fldl
adc
fsubrl
mov
inc
stc
xor
clc
cmp
mov
cwtl
loop
js
rcr
and
negl
adc
shrb
pcmpeqb
les
rcr
loope
jb
inc
ret
decl
rorl
outsl
jmp
mov
negb
mov
fnsave
mov
mov
dec
jg
sbb
xor
push
int3
out
sbb
or
cmp
roll
jmp
push
stos
rcrl
ss
ds
into
adc
loop
xchg
adc
pop
dec
xchg
xchg
push
push
shl
pop
mov
icebp
xor
mov
loop
mov
jae
jecxz
movl
arpl
push
movsl
pop
fldenv
jae
or
pop
mov
jmp
push
and
jb
push
xchg
inc
mov
and
pop
pop
add
jbe
push
mov
stos
dec
inc
out
mov
pop
inc
incb
xchg
lret
loopne
pop
repz
je
mov
leave
push
dec
orb
shlb
push
in
dec
cmp
fnstenv
mov
push
sbb
int
add
dec
add
push
pop
out
mov
mov
js
pop
sbb
and
jge
xor
in
push
cs
popf
xor
stc
xchg
incb
aaa
iret
popa
push
pushf
repz
aaa
push
mov
test
mov
hlt
pop
fstl
sub
and
aas
gs
pop
lds
inc
flds
imul
fnstsw
mov
xchg
jno
into
jge
push
rorl
stos
cmp
andb
subl
cmp
out
cmp
inc
cmp
leave
ljmp
call
in
xor
rorl
mov
sbb
push
ret
test
sbb
das
xor
stc
jnp
jo
adc
imul
lret
jb
dec
cmovge
in
test
mov
lret
clc
push
out
pop
mov
adc
add
sti
cmp
sahf
mov
ljmp
sti
mov
and
add
shrb
and
test
lock
add
rol
lods
xchg
pushf
pop
sbb
cmp
pop
shr
xchg
popa
cwtl
scas
xor
mov
push
adc
xchg
lcall
addr16
and
inc
sbb
or
lcall
jno
cmc
dec
dec
fsubrl
in
lock
popaw
jno
jl
subl
mov
xor
or
call
arpl
xchg
dec
pusha
imul
inc
lret
jbe
mov
or
nop
lods
cmp
scas
and
mov
jno
adc
out
lahf
inc
sbb
syscall
ret
xchg
cltd
cmpsb
into
jae
cvtdq2ps
fwait
shl
je
aam
mov
popf
bound
mov
jne
icebp
sub
pop
mov
push
push
jecxz
enter
in
and
push
cs
movsl
lock
or
push
loop
ss
icebp
ss
cli
test
push
pop
pop
mov
push
jb
js
or
out
mov
mov
ret
jne
add
mov
mov
shlb
stos
fdivl
xchg
inc
pusha
xor
xchg
data16
mov
mov
mov
inc
imul
push
jmp
lcall
cmp
jg
push
pop
xchg
inc
or
rcrl
jnp
nop
cld
xchg
xchg
dec
mov
cmp
rorb
leave
cli
mov
jbe
or
xchg
std
cmp
inc
adc
inc
popf
aaa
inc
dec
mov
xchg
enter
cmp
pop
scas
sti
sub
insb
push
insl
gs
dec
xchg
movsb
dec
and
test
inc
imul
cmpsb
jnp
gs
mov
sub
pop
xchg
xor
or
push
ds
inc
mov
mov
nop
daa
lahf
jl
loope
push
imull
pop
lret
mov
int3
inc
sub
dec
loop
stos
lods
shlb
test
stc
movl
mov
dec
push
push
mov
sbb
imulb
stos
imul
dec
pop
fdivrl
or
push
sbb
cmp
adc
push
jmp
dec
je
fists
inc
test
mov
xor
in
inc
cld
xchg
fs
fnstenv
sahf
jmp
hlt
dec
jbe
jmp
push
lea
pop
xchg
pushf
or
jbe
jle
inc
add
adc
mov
push
addb
inc
xchg
dec
push
xchg
jno
cwtl
xor
pusha
and
incl
ja
aad
or
sbb
loope
push
movsl
lcall
inc
dec
lret
mov
xchg
xor
movsl
pop
lods
out
lcall
sbb
scas
loop
aaa
gs
jp
pop
jle
adcl
mov
daa
cld
out
sub
pop
addl
adc
roll
xor
dec
fnstenv
js
add
movl
jl
test
sbb
repnz
into
lcall
mov
loop
fcmovu
dec
mov
out
cwtl
in
inc
jae
cmpl
lea
inc
cmc
mov
jle
scas
jbe
addr16
mov
lahf
ljmp
js
test
lods
xchg
or
cltd
pushf
jge
sbb
lahf
xor
xlat
dec
dec
cli
pop
dec
mov
lods
sbb
psraw
cmpsb
sub
div
push
cmpsl
in
shrl
add
xchg
mov
gs
dec
aam
add
bound
aad
and
es
push
push
adc
insb
adc
out
in
push
pop
sbb
mov
in
xor
scas
outsb
js
into
lret
sub
insb
les
leave
mov
sbb
push
xor
addr16
adc
sbbl
and
enter
ss
and
add
jecxz
mov
lcall
fstp
jle
mov
and
sti
mov
ljmp
adc
xchg
ljmp
jo
mov
sti
lea
mov
add
inc
test
loop
sub
in
dec
repnz
addr16
pop
xlat
out
xchg
addr16
jmp
adc
dec
push
rorl
mov
clc
pop
pusha
or
ffreep
aaa
jp
cmpsl
cltd
ror
mov
pop
dec
es
cmc
insl
dec
adc
loopne
mov
inc
push
cmp
inc
aam
fdivs
ja
and
dec
insb
mov
loope
jbe
cltd
clc
mov
mov
cmc
pop
and
fwait
xor
mov
cmp
loop
js
test
jmp
sbb
test
dec
jl
and
fdivrs
push
es
pop
data16
sbb
imul
ds
inc
mov
add
mov
sahf
mov
and
stos
cmp
cmpl
iret
std
movsl
mov
xchg
mov
or
lret
sbbb
addl
out
xor
or
mov
cmp
fisttps
push
mov
push
add
lea
mov
cli
dec
shrl
push
movsb
cmpsb
mov
cmpsb
sub
jb
outsl
in
cmp
fdiv
push
dec
daa
call
cmp
decb
or
mov
jbe
and
mov
adc
add
popf
scas
add
cmc
jmp
jecxz
testl
xor
mov
rorl
cmp
jp
sti
xor
fucomip
pop
sub
aaa
roll
jnp
pop
les
mov
test
jae
imul
loop
cmp
out
ficomps
clc
dec
jmp
push
fistps
fnsave
xor
or
in
clc
sbbl
mov
out
dec
push
stos
mov
aaa
cmp
sub
pop
mov
or
lret
inc
es
inc
je
stos
enter
jecxz
xor
push
xchg
cmp
ljmp
adc
and
and
cmp
sub
sbb
sbb
mov
test
and
outsl
push
inc
pop
sarb
lds
and
cmp
jbe
stos
nop
nop
mov
jnp
fmull
in
cmp
testb
jecxz
jge
int
out
pushf
pop
push
xlat
jb
pop
inc
sbb
cmpsl
fisubrl
cs
lea
movsl
out
dec
movsl
int3
inc
pop
jecxz
loope
push
sahf
mov
rcll
cmpsl
mov
adc
jecxz
pop
jl
lds
sbbb
jge
mov
jp
mov
fwait
mov
ljmp
ss
mov
cmc
scas
add
xchg
jo
es
cld
xchg
and
test
leave
hlt
jne
std
subb
dec
ds
push
add
jnp
addr16
mov
sbb
sub
repz
outsb
mov
push
mov
mov
push
mov
pop
fists
push
loope
xor
push
test
out
mov
xor
cltd
sbb
xchg
aas
lds
outsb
jne
stos
gs
pop
std
shlb
out
in
pop
inc
and
int
xor
das
lock
jb
push
lods
jb
addr16
xor
mov
clc
ja
xchg
dec
hlt
and
pop
jge
xchg
cmp
inc
jge
lods
subl
mov
inc
push
nop
push
test
push
das
or
dec
pop
mul
pusha
jbe
mov
out
pop
faddl
mov
xor
add
fwait
imul
das
repz
ret
lods
mov
or
sbb
sbbb
sti
icebp
inc
js
popa
mov
lret
mov
aas
pop
vminss
mov
adc
mov
xor
in
cmp
dec
loope
ja
pop
cltd
cmpsl
cmp
insl
out
ds
or
mov
adc
jl
daa
idivl
or
fsts
ljmp
xlat
pop
aam
ret
popa
pop
out
cmp
mov
mov
in
pop
ret
xchg
enter
js
add
mov
and
dec
adc
insl
push
popl
pushf
xor
xchg
outsb
in
sbb
aam
rclb
mov
xchg
sub
xchg
imul
std
fildl
rol
rol
sub
neg
loopne
ds
jg
sub
fimull
jmp
pop
scas
inc
ficomps
mov
push
pop
inc
arpl
mov
inc
xchg
dec
mov
fsubrl
cwtl
xchg
in
lahf
xlat
mov
inc
mov
incb
cld
add
std
push
dec
fnstcw
cmpsl
hlt
xor
sub
inc
cmp
stc
sarl
flds
mov
decb
push
dec
or
fs
in
dec
dec
xchg
ja
outsb
jg
inc
shlb
sarb
lds
add
pop
xchg
insb
ret
in
or
cmp
mov
aad
mov
out
jb
add
into
xor
or
mov
pop
hlt
lret
insb
clc
out
sar
sbb
rcrl
pop
sub
dec
xor
jg
fsubr
test
and
imul
aam
adc
xor
call
mov
push
in
ret
push
pop
push
mov
add
sub
xor
fwait
xor
push
xchg
sbb
rcll
ds
orl
dec
inc
cwtl
mov
mov
mov
dec
aad
push
shrb
sbb
in
xchg
mov
mov
dec
in
sub
add
inc
jnp
xchg
dec
out
xor
mov
push
divl
sbb
cmp
pop
dec
ds
sbb
rorb
xor
xchg
sub
push
inc
mov
sbb
add
movsb
sbb
mov
aad
cmp
xor
sbb
mov
js
daa
popa
xchg
lahf
mov
les
loopne
mov
mov
clc
dec
mov
and
cmp
stos
cmp
dec
push
cmpsb
push
cmp
aad
idivb
mov
int
xadd
mov
divb
dec
pop
in
movsb
and
lret
leave
or
mov
mov
mov
jge
push
lret
popa
bound
pop
xchg
cmpl
adc
aam
push
add
fwait
testl
add
xor
inc
pop
jmp
mov
pop
test
in
adc
leave
test
int
adc
dec
xchg
pop
loop
ja
dec
cmp
cli
cmp
fdivs
lods
dec
gs
add
fidivrs
nop
cmp
ror
pop
jne
mov
push
fiadds
lds
int3
fidivrs
xchg
pusha
xchg
cmpsb
das
push
mov
inc
jnp
inc
test
pop
push
push
repnz
je
xor
daa
push
lret
push
push
lea
scas
popf
dec
mov
test
ret
loope
hlt
adc
dec
xchg
insl
xchg
movsl
into
ret
test
and
stc
movsl
adc
test
jmp
xor
loop
in
cmp
cmpsb
or
fisttpll
subl
lret
andb
sub
jecxz
cli
mov
lock
jae
jg
mov
and
inc
xor
push
repnz
data16
sub
fistl
fwait
xor
push
mov
outsl
scas
jge
dec
xchg
lea
out
mov
add
int
and
mov
ss
sbb
pusha
sbb
aaa
rcrl
loop
data16
loop
mov
aad
fcomp
outsl
mov
push
lahf
jp
out
inc
inc
aaa
test
push
push
in
push
cmp
lret
das
sbbl
lods
cmp
mov
test
repnz
or
idiv
add
jecxz
jge
sbb
adc
daa
inc
pop
cmc
dec
jg
cmpsl
jbe
aaa
adc
mov
mov
faddp
jno
pop
addb
enter
push
xchg
pop
int
xor
out
jg
jo
int
jecxz
mov
js
mov
scas
mov
lock
xor
jne
cmp
nop
in
mov
out
mov
jp
pop
push
pop
cmp
xorb
mov
push
push
mov
ljmp
lds
dec
mov
pop
adc
cmp
xchg
ss
push
icebp
push
bound
jns
xor
pop
ficompl
stos
xor
lret
inc
pop
push
rol
mov
mov
sahf
movsb
pop
push
scas
pop
orb
int3
mov
push
xorl
add
jb
int3
inc
fld
push
aas
loop
mov
push
pusha
push
mov
mov
xchg
leave
jg
mov
xchg
push
or
insb
jne
pop
adc
seta
mov
test
popf
mov
mov
into
repz
mov
lea
or
in
adc
xchg
push
push
imul
call
mov
popa
sub
jg
adc
or
lahf
ds
lret
cld
ja
mov
ret
sub
sbbb
mov
lcall
add
fdivl
mov
lods
icebp
adc
iret
cmp
movsb
addl
xor
sbb
insl
push
data16
mov
enter
ret
or
lods
mov
jnp
orl
adc
fcmovnu
div
xor
jbe
rorb
sbbl
dec
adc
inc
jb
xor
inc
push
daa
arpl
scas
xchg
mov
call
mov
test
jne
ds
ss
mov
xor
cli
int
insb
inc
shlb
or
pop
sub
mov
pop
mov
js
arpl
je
mov
out
add
repnz
and
sbb
test
fistl
cwtl
outsb
inc
insl
xchg
lahf
jae,pn
pop
arpl
js
out
mov
in
aas
fisubl
mov
enter
jb
mov
push
or
mov
inc
and
jb
mov
lds
ds
out
jne
stc
aad
addb
popa
mov
push
bound
push
inc
shlb
dec
jo
xchg
cltd
iret
testb
xlat
push
jl
js
push
js
lret
or
mov
loopne
jns
lock
rol
stos
cmp
and
in
mov
lcall
xchg
push
mov
cmpsb
dec
xor
cld
out
jle
cmpsb
xorl
push
sub
scas
cltd
cmp
je
add
jmp
or
aad
mov
mov
jp
push
dec
out
push
jle
cmp
fcoms
adc
sub
cmpsb
mov
push
push
push
out
bound
fwait
mov
jae
lcall
movsb
push
xor
scas
das
stos
ret
xchg
inc
mov
mov
pop
cmp
test
push
xchg
mov
loop
ds
es
imul
sub
adc
movsl
jbe
pop
mov
jns
int
imul
test
xor
lret
mov
jb
sahf
cli
in
ss
xchg
push
xchg
jl
lods
add
imul
enter
or
inc
xor
or
add
inc
stc
popf
xchg
jnp
aad
aam
or
daa
das
insb
mov
out
and
sub
faddl
loope
jmp
xchg
cmp
cwtl
add
add
bound
xchg
cmp
mov
pusha
pop
dec
push
mov
push
call
mov
sub
sbb
xlat
nop
outsl
int3
call
daa
lret
popaw
sub
fwait
pop
lods
subb
or
mov
inc
xor
add
cmpl
ret
pushf
fisttpl
lock
xchg
xor
adc
xchg
sub
dec
xchg
sub
aam
sub
ja
insl
imul
imul
sbb
enter
test
sub
dec
sub
cmpsb
mov
movsb
rcrb
mov
idivb
or
jge
pop
out
mov
rcrb
pop
or
push
pop
pop
shll
mov
fsubl
sub
sub
sahf
push
cmpsl
jns
bound
inc
fwait
into
add
inc
dec
xorl
pop
iret
cmp
loope
inc
shl
dec
or
enter
dec
jbe
das
mov
mov
jg
xchg
rolb
addr16
roll
sub
or
stos
dec
lds
insb
xchg
pop
inc
or
xor
cmpl
adc
mov
cli
scas
xchg
jl
mov
dec
and
in
inc
pusha
and
push
mov
imul
push
mov
and
pushf
popa
add
xor
sbb
icebp
jge
push
pop
pop
loope
mov
and
xor
in
or
push
mov
jo
mov
adc
sbbl
push
cmp
bound
or
sub
pop
pop
shll
fistpl
data16
sub
je
xor
pop
xlat
imul
adc
das
jbe
xchg
jns
xor
mov
lea
test
inc
dec
inc
or
add
cmp
aad
mov
test
pop
mov
insl
mov
cltd
pop
cmp
fs
inc
lds
cmp
mov
pop
inc
ljmp
outsb
clc
sbb
adc
and
dec
inc
xchg
adc
mov
mov
cs
mov
xchg
lods
jmp
nop
mov
adc
push
dec
cmpsb
and
roll
ds
and
xchg
je
pushf
inc
cmp
inc
dec
push
iret
out
daa
sti
cmp
lahf
push
add
or
inc
std
nop
add
repnz
test
mov
mov
fdivs
sbb
sub
mov
inc
roll
fs
imul
ret
and
ds
movsl
sub
pop
jge
xchg
jp
sub
lret
pop
push
lock
push
mov
int3
insb
inc
xchg
dec
fwait
or
hlt
mov
add
inc
insl
or
rclb
or
mov
arpl
in
adc
scas
lcall
jb
or
dec
mov
inc
es
mov
int3
xchg
inc
in
fwait
xor
fs
std
fs
jno
inc
in
mov
adcl
inc
cmp
fwait
repnz
xchg
cwtl
mov
adc
enter
or
lret
mov
mov
sbb
add
jne
inc
arpl
test
in
loope
xchg
es
enter
sbb
cmp
push
popf
dec
popf
scas
popf
pop
jmp
push
popl
jo
test
outsb
add
imul
fmull
movsb
repnz
cmp
dec
movsb
mov
test
xchg
movups
mov
adc
cmp
push
pop
insb
in
xchg
mov
rcll
stos
inc
mov
test
dec
in
inc
jne
xor
jg
je
loope
loop
push
ljmp
notb
mov
out
dec
xor
sysexit
add
stos
ficomps
aam
mov
pop
je
jae
fdivr
sbb
inc
icebp
jno
les
mov
sbb
cmpsl
sti
fsubl
imul
add
js
not
xor
xor
sub
mov
ret
outsb
mov
aam
cmp
mov
jmp
sbb
inc
and
mov
mov
test
xor
incl
mov
push
cmc
jo
stc
sti
jg
xor
cmc
daa
stc
or
mov
pusha
insb
inc
es
cwtl
pusha
and
and
jno
imul
sub
xor
outsl
xchg
inc
jg
inc
shlb
xlat
xor
mov
push
cmp
icebp
sahf
add
mov
add
insb
sbb
push
shll
lahf
sbb
xor
dec
aas
adcl
sahf
mov
dec
jle
aaa
shll
xchg
sbb
ljmp
sbb
pop
mov
inc
out
ja
shll
cmp
fwait
addr16
sub
mov
cltd
mov
in
add
push
std
inc
pop
cmp
sbb
push
pop
popa
frstor
sub
jl
mov
mov
jmp
push
mov
lea
cmc
push
adc
imul
mov
ret
aaa
ds
test
int
jno
mov
fstpl
stos
sbb
sahf
mov
pop
std
mov
jno
inc
fists
push
or
or
imul
fwait
jle
shlb
in
fcompl
ja
jns
xchg
push
mov
xlat
daa
stc
pop
dec
push
mov
mov
pop
rorl
or
jno
pop
nop
sbb
cmp
in
insb
rolb
int3
pop
fs
mov
in
and
lret
add
or
adc
aad
mov
adc
shll
aad
inc
pop
test
or
je
test
mov
imul
jbe
or
loop
test
mov
xor
fcomip
cmpsl
push
movsl
pop
jle
and
sub
mov
lds
pop
shr
or
fadds
inc
loopne
bound
sbb
mov
cmpsb
sti
fs
enter
add
pop
add
enter
mov
imul
sbb
xchg
outsb
xchg
xchg
aas
and
and
imul
leave
jbe
dec
incl
inc
sub
inc
in
sbb
push
sti
insl
addb
rcr
cld
mov
stos
xchg
xor
sbb
stos
mov
or
stos
jns
cld
test
inc
sti
adc
mov
xchg
mov
ss
lods
mov
fdivs
inc
or
nop
and
push
mov
inc
inc
pop
sti
pushw
lcall
mov
dec
in
sahf
dec
insl
lret
es
aam
test
adc
adc
fiaddl
mov
sti
leave
push
repnz
imul
and
mov
jne
jp
pop
and
jl
adc
mov
adc
rorl
imul
lds
push
lret
xlat
mov
fnstcw
lods
xor
loope
pop
push
cmp
gs
fsubrp
cs
addr16
sahf
lret
push
lods
push
testl
sbb
sarl
gs
ret
jne
mov
mov
subb
push
pop
sub
cmp
cmpsb
or
out
das
xor
cli
pop
hlt
or
sahf
push
in
scas
mov
xchg
dec
pop
sub
les
cltd
pushf
enter
cmp
adc
mov
pop
or
fnsave
xchg
cli
mov
test
sbb
outsb
imul
test
jle
adc
and
jle
out
xor
scas
mov
cmpsb
jae
jo
icebp
xor
cmc
roll
and
cwtl
pop
lret
xchg
add
fisubl
adc
loop
sub
and
push
out
mov
mov
sub
dec
out
fcompl
dec
pop
sbb
fcmovnu
outsl
arpl
push
push
fildl
mov
inc
pop
xchg
jp
pop
je
jnp
mov
dec
pop
cmpb
repz
loope
lahf
add
sub
push
and
out
cmp
fs
and
ficoms
inc
in
test
aaa
idiv
push
push
rcll
gs
icebp
and
cmp
fisttpl
es
xchg
popf
sti
movb
dec
inc
add
js
jecxz
dec
xor
sbb
or
lcall
jo
in
sub
jne,pn
jmp
jp
jns
mov
rolb
jno
dec
xchg
and
xchg
mov
imul
aaa
mov
cwtl
xor
insb
out
or
aas
sbb
xchg
rcll
xorl
test
push
in
jge
sbb
jns
insl
ret
jne
rcrl
mov
cltd
jb
mul
pop
pop
sbb
lea
cmpsl
fidivs
mov
int
mov
lcall
mov
pushl
mull
enter
cmp
int
or
js
loop,pn
ljmp
pop
addb
xchg
or
sub
fucomp
pushf
pushf
push
imul
sub
xorl
testb
int
mov
mov
or
adc
xor
sub
add
in
sbbb
mov
addl
pop
cmpsl
fisttpll
sbb
int
mov
cmp
sbb
clc
and
sub
adc
cmc
mov
push
push
imul
lock
and
or
pusha
cli
mov
add
stos
mov
adc
iret
rolb
lock
notb
insl
les
xchg
cwtl
xlat
xor
mov
cmpsb
push
fdivl
insb
insb
and
int
xchg
sbb
imul
cmp
loope
pop
fildl
popf
jno
xchg
pop
pmaddwd
pop
jnp
stos
mov
imul
shll
dec
jmp
add
dec
jge
repnz
lahf
xor
push
aam
je
lods
xchg
clc
aas
rolb
sub
test
enter
lahf
xchg
mov
push
adc
push
ds
test
mov
cwtl
repz
lcall
sub
out
add
std
movsb
fxch
rcrb
adc
in
mov
xor
ss
repnz
cmp
fidivrl
dec
sbb
or
daa
lea
and
movsb
xadd
stos
inc
xchg
fsubrl
mov
xor
movsl
popa
mov
xchg
outsb
cmpb
pop
push
subb
add
loopne
int3
add
jmp
bound
in
aaa
xchg
lock
or
test
add
push
push
imul
ja
out
lcall
mov
push
inc
std
fwait
cmc
pop
hlt
adc
lret
or
scas
movsl
in
mov
xchg
pop
cmp
sbb
pop
in
dec
pop
insb
shrb
jo
addb
jle
das
cwtl
arpl
mov
or
xchg
adc
lods
cmp
loope
sub
adc
and
or
mov
dec
mov
imul
or
adc
or
test
mov
push
negb
mov
testb
nop
xchg
and
mov
imull
lods
pop
les
divl
pop
ret
push
cmp
repnz
xchg
in
jl
jl
lods
push
or
out
fistl
adc
sub
mov
xor
xchg
loop
adcb
jle
inc
insb
lds
or
ret
jne
sbb
jo
push
xor
and
inc
andl
js
lds
mov
ljmp
lock
lahf
outsb
mov
jae
xor
mov
dec
ret
in
adc
shl
mov
sbb
pop
popf
lock
fnstenv
rol
jae
adc
push
icebp
jp
sbb
je
adc
push
mov
pushf
jle
mov
xchg
hlt
es
call
movsl
and
jbe
mov
inc
mov
outsb
mov
loope
fisttps
addb
jbe
fsubl
shlb
jno
mov
sahf
add
test
subl
or
or
cli
jg
push
sbbb
sub
cld
jb
sti
in
in
jnp
push
sub
outsl
cmp
arpl
cmp
pushf
test
lcall
mov
pop
dec
mov
add
mov
lea
mov
ds
dec
in
inc
cmp
or
sub
je
mov
outsl
cli
jg
lret
inc
aam
iret
push
adc
stos
mov
loop
or
adc
popf
sti
test
xchg
aam
push
mov
lock
cmp
movsb
lock
fistl
ss
jmp
fsubs
xchg
test
inc
and
repz
shl
jg
icebp
data16
mov
mov
mov
and
xor
push
sti
imul
mov
movsl
pop
lock
stc
cmp
push
sbb
dec
inc
xorb
inc
cmpsl
hlt
pop
adc
lret
pop
push
push
call
inc
pop
lods
outsl
lods
stos
xlat
dec
or
icebp
mov
fistpl
mov
aad
lcall
adc
outsb
lret
xor
cmp
sbb
pushf
jae
call
je
sahf
sbb
mov
pop
cmp
lods
inc
leave
sbb
cmp
inc
pslld
add
insl
addr16
mov
push
cmp
iret
in
sub
inc
mov
sub
ja
xor
lahf
inc
mov
xorl
sbb
sub
sbbb
lods
movsl
fcomps
repnz
or
testl
cld
and
imul
sbb
or
dec
and
pop
mov
xorb
push
add
dec
mov
or
aad
pop
or
fidivs
aas
pop
mov
cs
sti
fbld
fwait
dec
cmp
mov
aaa
and
push
mov
lds
data16
mov
push
loope
fsubr
scas
inc
mov
sub
stc
scas
mov
inc
imul
push
sbb
xchg
test
sbb
leave
dec
mov
lahf
hlt
push
sub
daa
mov
fiaddl
mov
dec
jle
xlat
jg
gs
xchg
jge
mov
bound
das
and
cmp
scas
mov
mov
movsl
mov
and
lods
rorb
sub
adc
push
fstpt
outsl
mov
dec
sahf
or
and
aam
loope
imul
imul
push
jle
in
adc
cmpsl
push
xchg
in
push
xchg
mov
into
mov
rclb
push
movsl
push
test
add
xor
aam
xlat
inc
pop
stc
popa
insb
lea
inc
jmp
dec
cmpsb
jnp
jge
xor
shl
xor
fsubrp
inc
add
shll
arpl
or
pop
mov
std
in
insl
xchg
push
loop
nop
nop
mov
xchg
imul
sbbb
andl
inc
int3
stos
sbb
xor
sub
or
out
out
mov
insl
nop
enter
cmp
and
fwait
inc
jbe
jns
xchg
jle
and
stc
push
cltd
and
sarb
mov
shlb
rcrl
inc
mov
gs
push
jae
mov
ret
inc
xor
ret
pop
sahf
and
call
outsl
pop
notl
mov
push
jae
pop
clc
repz
xor
jle
fbld
xor
xchg
pop
xor
and
out
lods
jae
lods
cld
dec
push
add
sbb
lods
ljmp
push
jnp
dec
das
movsl
sub
in
mov
ds
fdivs
cli
cmpsb
and
nop
leave
aaa
or
outsl
push
ficoms
mov
pop
xchg
popf
mov
push
mov
mov
mov
movsl
leave
aam
cmp
nop
xchg
add
or
mov
mov
or
push
out
dec
jmp
mov
mov
mov
xchg
jmp
cwtl
lret
fadds
dec
xor
fisubs
lcall
push
inc
das
dec
scas
hlt
lods
dec
fadds
and
mov
mov
leave
fwait
inc
and
xchg
xchg
pop
insl
pop
sub
adc
inc
aad
movsl
xlat
xchg
add
mov
divl
daa
pop
je
xchg
lret
leave
cmp
repz
add
aad
fscale
nop
mov
add
pop
inc
push
add
ja
popa
sbb
mov
dec
repnz
xlat
mov
repnz
scas
call
inc
push
inc
mov
shlb
popa
aad
std
lahf
lock
stos
jecxz
adc
outsb
add
sbb
push
add
ljmp
out
inc
sub
sbb
cmp
inc
ja
repz
adc
insb
scas
mov
out
xor
push
lds
sbb
les
mov
pop
add
dec
out
pusha
aaa
cmp
into
rcl
clc
and
pop
pop
cmp
sbb
cmp
addr16
xor
jbe
sub
xor
mov
popa
jno
pop
mov
pop
imul
shrl
jge
sbb
js
sar
imul
cs
shrl
dec
add
or
pusha
sbb
pop
mov
scas
xor
sub
rcll
mov
adc
rcrb
hlt
fmuls
addr16
and
fwait
imul
cmp
jl
xlat
or
mov
and
mov
pop
xor
push
mov
repz
bound
xchg
pop
gs
mov
cmpsl
inc
mov
pop
mov
repnz
jle
fnstenv
push
sbb
int3
test
xchg
fld
aad
or
js
mov
cmp
js
or
les
shll
shl
jp
pop
repz
and
arpl
and
lret
pusha
push
sub
sbb
call
add
push
bnd
shll
loope
and
addl
push
andb
lods
int
addl
loope
push
mov
mov
cmp
mov
lods
test
inc
pop
cmp
mov
fimuls
mov
popf
ja
filds
mov
aas
hlt
mov
lret
repz
clc
mov
adc
popa
int3
in
mov
mov
inc
jmp
std
push
xchg
dec
add
or
stos
xor
sti
bswap
cmpsl
xchg
call
mov
mov
sbb
clc
popa
xchg
dec
jg
and
outsl
mov
dec
and
add
in
xor
xchg
sbb
cmp
mov
in
test
cltd
popa
push
ljmp
or
repnz
xchg
pop
xor
lcall
and
fimuls
loope
out
ljmp
lods
xchg
cmp
push
loope
and
in
jne
stos
lret
xor
clc
inc
add
lret
and
in
sbb
xchg
xor
les
lret
jp
fdivl
adc
xchg
push
cmp
loopne
ret
mov
xor
repnz
pushf
pushf
jns
xor
xchg
stos
aas
push
test
test
ret
pop
mov
jmp
or
clc
xor
mov
mov
inc
repnz
pop
js
enter
clc
lcall
jbe
mov
pop
in
or
dec
push
out
sbb
and
mov
dec
into
outsb
ja
dec
add
roll
and
outsb
xchg
push
push
iret
add
inc
mov
dec
xchg
ficoms
and
or
mov
fs
stos
scas
pop
insl
shrl
out
add
cmc
inc
loope
sbb
leave
mov
and
mov
nop
xchg
pop
jg
mov
lds
inc
les
adc
repz
jge
mov
pusha
loop
ret
and
leave
push
push
out
jecxz
lock
push
xor
ss
and
xor
or
int
in
pop
jbe
js
inc
data16
adcl
push
or
lcall
pusha
or
jmp
cmp
aas
push
cmp
jb
nop
push
outsb
and
sti
sbb
inc
dec
sub
push
addr16
div
nop
and
insl
mov
push
mov
stos
sbbl
inc
xchg
aaa
mov
sub
mov
push
inc
cmp
nop
adc
xchg
out
into
ret
jae
fwait
mov
xchg
fcoms
jbe
sbb
or
ljmp
cmpsb
in
lds
outsl
sbb
in
lret
je
and
mov
push
imul
inc
add
test
divb
xor
cli
ficoms
add
outsl
out
pop
pop
scas
rep
aas
xchg
xor
sar
cmp
stos
pusha
push
pop
cmpb
pop
mov
test
shrl
cmc
sahf
ret
xor
cli
cld
push
pusha
out
push
sbb
sub
cwtl
cmp
mov
mov
push
sub
adc
sub
push
iret
fisubrs
lods
enter
leave
lret
sub
mov
fistpl
cwtl
lock
lret
hlt
fstl
mov
test
jge
stc
leave
dec
aaa
fisubl
mov
ror
and
push
lea
jbe
lods
or
test
les
es
sub
xchg
jmp
shll
outsl
pop
je
mov
jmp
push
inc
test
mov
pop
pop
xchg
xchg
sub
and
jno
jl
add
inc
repnz
and
xor
cs
rol
in
mov
push
jp
std
xchg
pop
or
pop
push
sub
xlat
xchg
push
lcall
or
loope
dec
sub
movsl
out
pop
or
jbe
stos
mov
stc
push
xchg
pop
cmp
add
into
rcl
nop
dec
into
popa
mov
mov
add
mov
xchg
js
sbb
push
orl
test
and
daa
sbbb
cmp
or
mov
cmpsb
dec
sti
loope
dec
mov
jno
xorb
sbb
add
adc
pop
xchg
je,pt
pop
imul
and
mov
aam
push
dec
fs
push
lret
aas
xor
aaa
adc
pushf
push
daa
insl
sub
addl
std
jp
cs
movsl
cwtl
and
mov
mov
push
dec
dec
xor
cmc
mov
add
mov
and
lods
jb
add
push
adc
mov
xchg
or
inc
in
add
add
repz
out
lods
aaa
mov
push
inc
loop
sub
xlat
push
xor
lea
mov
int
pop
adc
in
daa
test
adc
lcall
lea
mov
cli
and
and
daa
subb
mov
mov
fs
icebp
and
add
cmp
adc
rclb
movl
in
jmp
in
jno
pop
xchg
sub
enter
dec
jne
ficoml
push
repnz
mov
push
adcb
mov
lock
popf
fisubrl
mov
jb
xor
xchg
fidivs
cmc
ljmp
mov
cmp
mov
mov
ficomps
dec
adc
add
dec
xchg
sub
sbb
jns
outsb
in
pop
in
push
jmp
repnz
lds
cltd
inc
add
cld
out
into
mov
in
xchg
cmpsl
inc
push
xor
leave
mov
outsl
lcall
push
mov
inc
sub
add
pop
or
pop
arpl
rcrl
xor
or
xchg
aas
dec
cmc
subb
cs
mov
mov
add
adc
and
shl
int3
pushl
push
add
scas
clc
xchg
inc
xor
loopne
cmpb
mov
xchg
jnp
inc
mov
test
mov
sub
push
shl
or
gs
test
push
pop
std
inc
pop
movsl
hlt
sub
scas
xchg
sahf
and
pop
mov
push
pop
imul
daa
dec
and
jb
jmp
cmc
xchg
mov
or
pop
lret
arpl
inc
out
popa
les
sti
jmp
xchg
iret
push
add
mov
mov
shrl
sub
mov
pushf
shll
add
data16
jp
sbb
mov
add
scas
sbb
push
push
add
test
into
push
inc
imul
insl
cmp
cwtl
push
cmp
mov
fwait
popf
inc
ss
push
mov
mov
sarb
add
xor
fwait
add
clc
aad
xorl
mov
cmpsb
push
push
movsl
ret
hlt
je
jg
cmp
or
std
cmp
into
rcrb
cmpsb
rcr
mov
stos
stos
dec
fildl
adc
dec
dec
out
outsb
repnz
mov
sbb
push
and
aam
repnz
or
add
jle
aas
outsl
jnp
adc
dec
sbb
cltd
imul
mov
fs
lods
pushf
adc
mov
mov
aad
mov
mov
push
es
xchg
stos
xchg
into
es
dec
jmp
sub
jle
mov
and
inc
std
fisubrs
loope
mov
jae
loop
cmpsb
xor
cmp
cwtl
cs
lods
je
adc
js
sub
daa
aaa
imul
xor
dec
pop
out
stos
dec
fisubl
mov
adc
jmp
str
mov
cltd
sub
push
loopne
inc
stos
ljmp
imul
jne
sub
adc
sub
loopne
cltd
mov
daa
mov
push
jbe
or
xor
mov
inc
out
leave
mov
jge
int3
dec
jnp
jmp
clc
push
or
fimuls
out
lahf
mov
pop
out
dec
lea
popa
test
mov
test
ret
jp
rcl
mov
stc
aaa
arpl
je
cld
jb
and
sbb
add
lods
push
in
mov
cmp
xor
xchg
mov
test
mov
je
sbb
adc
xchg
inc
mov
lds
xlat
adc
xchg
jg
imul
outsl
push
addr16
ficoml
adc
aas
jbe
in
xor
addr16
movsl
test
or
ds
cmp
mov
std
sbb
addl
cmpl
inc
sub
stos
insl
mov
sub
cmpl
jno
dec
test
cmp
inc
das
movl
je
cmp
add
cli
lea
jl
mov
pop
loope
cld
inc
add
push
bnd
and
add
cmp
fsubr
loope
stos
lock
sub
mov
pop
movsl
cmp
xchg
test
xor
inc
in
inc
sub
ljmp
repnz
loopne
cli
fdivs
and
hlt
mov
jbe
pop
pop
test
sub
sti
fisubrl
add
xchg
rcrl
fidivs
xorl
rorb
push
scas
xor
imul
dec
inc
xchg
sub
icebp
addb
dec
test
cmp
xchg
fsubp
loopne
ljmp
push
jle
inc
test
mov
push
incl
shl
in
xlat
pop
out
popf
sub
push
stos
jp
lock
incl
ret
cwtl
testl
add
jmp
xchg
xchg
add
sbb
push
add
inc
add
arpl
out
or
or
scas
repz
or
mov
fildll
scas
and
icebp
cmp
ret
rcr
rolb
inc
aad
add
push
imulb
div
jo
and
in
and
push
push
and
dec
mov
fnstcw
inc
ljmp
xor
shl
daa
std
sar
test
lcall
shl
inc
outsl
sub
sub
push
repnz
mov
sub
stos
daa
stos
scas
test
mov
or
popf
or
ds
fisttpl
mov
mov
xor
jne
cmp
and
jno
fldcw
or
js
dec
daa
push
add
scas
inc
dec
cmp
call
xor
cmp
cmp
je
cwtl
je
lds
addl
subl
in
loope
ljmp
int
xchg
neg
xchg
mov
rolb
push
adc
xchg
lea
leave
sbb
or
adc
and
add
cmpsl
xchg
sub
in
lods
cli
pop
lock
lea
in
test
ss
and
and
aas
and
jb
fnsave
add
es
lcall
rol
xor
aaa
jno
ret
enter
mov
int3
rcll
mov
test
mov
int3
ljmp
in
push
pop
adc
movsb
lds
mov
int3
inc
mov
incl
and
jge
add
ljmp
cmpsl
dec
lds
xor
js
sub
xchg
mov
mov
cwtl
mov
mov
and
mov
fsubrl
xadd
add
add
push
pop
xor
inc
push
pop
clc
mov
xchg
or
add
aas
mov
adc
adc
hlt
cld
push
mov
test
test
sbb
sub
ss
jno
push
in
xchg
scas
mov
jecxz
push
xor
adc
pop
lds
cltd
aam
push
lds
push
ss
sub
je
dec
xor
dec
movsb
aas
popf
dec
jno
cmc
dec
sti
push
sub
test
sahf
scas
fmul
jns
pop
and
cld
ja
popf
add
sub
and
imul
lret
xchg
lock
xchg
add
fwait
in
or
cmp
mov
mov
pop
std
ss
loop
daa
jns
rorb
inc
jl
movsb
testb
aaa
add
xor
sbb
inc
stos
pop
mov
xchg
test
pusha
xor
ds
das
jmp
push
xchg
mov
jl
sbb
fcomi
sbb
daa
mov
nop
mov
jns
mov
pop
adc
shlb
mov
jo
mov
loopne
int3
mov
pop
cmp
xchg
lret
mov
mov
rclb
sub
push
ret
loope
fsubr
aaa
sbb
mov
xlat
es
xor
xchg
outsb
out
clc
ja
pop
jecxz
aam
repz
repnz
fcompl
mov
sbb
daa
aad
pop
mov
mov
cs
cltd
jbe
lods
rcr
out
xor
mov
inc
mov
daa
les
mov
mov
loopne
cs
and
pop
scas
scas
xchg
lds
push
adc
ss
inc
mov
push
push
iret
push
out
cli
jmp
push
leave
push
lcall
jl
adc
addr16
ret
insb
push
sub
inc
add
loop
lcall
mov
out
outsl
pushf
into
inc
push
aad
in
pop
in
out
enter
sbb
popf
aaa
cmp
inc
xlat
xor
push
shr
or
add
test
add
cmp
sbb
or
push
ret
cli
or
dec
pop
jle
pushf
cmpsb
push
sbbb
inc
xor
lea
sub
sbb
shl
pushl
mov
dec
fwait
cwtl
push
in
jp
adc
inc
fdivrs
mov
jp
mov
pusha
mov
fbld
push
jle
xchg
ljmp
push
iret
jbe
mov
cld
xor
inc
out
pusha
mov
aad
sti
xor
test
inc
mov
push
push
lea
mov
adc
xor
stc
ljmp
pop
test
mov
jmp
jns
jmp
pop
dec
jne
mov
cmp
sbb
inc
mov
in
cmp
pop
xchg
mov
jb
dec
loop
cmovno
popf
dec
xor
pop
mov
out
movsl
call
sti
add
insl
cs
into
or
in
lds
loope
fsubrs
movsb
dec
inc
pop
or
nop
push
cwtl
push
or
outsb
mov
test
pop
mov
jle
ljmp
and
push
leave
cmc
adc
xchg
mov
adc
insb
outsb
jmp
add
jle
enter
xor
icebp
sbb
cmpsb
aaa
jmp
vmovsldup
es
rcl
push
xchg
and
push
push
insl
cmc
pop
in
and
dec
add
arpl
arpl
mov
roll
sbb
outsb
add
pop
decl
ds
nop
int3
pop
lods
ss
pusha
addr16
in
mov
or
push
adc
xor
cmp
testb
mov
sub
xchg
sbbl
scas
jge
dec
push
pop
iret
mov
jae
cmpsl
leave
pop
inc
and
xchg
cmp
outsl
lret
es
adc
xchg
mov
addr16
dec
push
mov
scas
insl
hlt
lock
scas
pop
push
ljmp
or
scas
dec
cli
test
pop
push
lock
shlb
cmp
in
jg
cmc
icebp
sub
loop
xchg
scas
subl
push
jp
call
sbb
pushl
roll
sub
sub
aad
mov
out
les
pop
inc
xor
ret
xchg
loope
mov
fisubrl
lds
sub
jns
sub
cwtl
and
out
add
mov
and
cmp
sub
jb
lock
mov
adc
scas
cmp
mov
pop
pop
addr16
jns
sbb
xor
jmp
popf
in
inc
addb
ja
inc
insb
and
aaa
lods
xchg
int3
add
mov
imul
movl
dec
fmulp
mov
inc
out
sbb
call
mov
jp
and
inc
enter
insb
inc
sub
and
loop
in
sbb
imull
cs
jg
mov
pop
and
jmp
pop
movsb
xchg
or
xor
stos
pop
or
push
jae
mov
stc
xchg
jecxz
fisubl
sarb
adc
inc
push
mov
outsl
mov
jb
or
arpl
bound
sbb
pop
imul
xchg
pusha
lcall
test
loope
bound
out
xchg
jnp
xchg
pop
mov
stos
cmp
aas
pop
mov
pushf
pop
lcall
jno
out
sbb
mov
and
cmpsb
les
push
mov
cmpsb
aad
iret
test
fcoml
lcall
daa
inc
aas
push
xchg
sbb
xor
ljmp
pop
pop
test
or
outsl
xchg
imul
rorl
in
mov
xor
inc
xchg
das
ljmp
sbb
fiaddl
xchg
pop
add
adc
add
ljmp
ds
inc
push
dec
pop
les
int
shll
xor
pushf
ja
cltd
adc
sub
push
mov
std
add
aas
push
aas
add
xor
in
sbb
mov
jno
jno
cmp
cmp
leave
std
push
mov
mov
mov
popf
stos
into
cltd
push
pop
pop
arpl
test
mov
and
jnp
jle
pusha
push
mov
filds
rolb
and
jno
mov
pop
mov
xchg
xor
xchg
pop
cltd
sahf
mov
sbb
xchg
fmulp
or
push
xchg
fldt
mov
push
mov
jns
and
xchg
mov
push
inc
leave
fstps
stc
mov
out
mov
sub
mov
lret
lahf
and
ret
jno
in
jmp
cmpsl
aas
subl
push
sub
mov
cmp
push
adc
pop
sbb
or
xchg
into
adc
out
xlat
rclb
jns
lret
and
push
mov
out
jb
pop
shll
popa
xchg
xor
pusha
mov
cmp
mov
mov
xchg
lret
loopne
jmp
arpl
pop
dec
cmp
dec
adc
hlt
mov
cwtl
xlat
pop
inc
add
sahf
loop
call
rclb
or
scas
inc
push
xchg
lock
mov
lods
ljmp
mov
xchg
xchg
push
xor
js
in
jl
repnz
mov
adc
ret
or
jno
ret
pop
mov
les
add
mov
shrl
dec
dec
lds
sbbb
fstps
jle
cltd
movsb
pop
scas
hlt
and
fsts
scas
fdivrs
movsb
test
jbe
adc
jae
lea
fmul
jmp
movsl
lods
icebp
mov
test
jge
jecxz
gs
pop
addr16
xor
lret
xor
pop
fcmovnb
push
push
mov
mov
shrb
scas
imul
out
mov
addl
dec
dec
pop
mov
xor
ja
add
mov
or
pop
push
dec
sub
ja
push
test
fisttps
sub
sub
inc
sub
push
fsubrl
mov
push
cmpsl
and
cmpsb
cmpb
jmp
mulb
xchg
lea
cmp
dec
sbb
int
push
mov
addl
shlb
or
flds
scas
test
add
mov
fisttpl
fdivrl
sub
ds
jmp
cmp
xor
mov
stos
push
pop
mov
add
lret
cltd
ja
subl
cmp
jae
pusha
mov
ret
and
cli
mov
cmp
pop
test
sbb
xchg
mov
xor
mov
push
pushf
andb
pop
jns
pop
leave
pop
pop
fstps
mov
jp
cmp
jns
fucomip
arpl
stos
jl
lock
loop
sbb
xchg
lds
imul
pop
inc
or
add
or
mov
xor
cmp
inc
push
mov
inc
dec
dec
add
xor
jmp
loope
mov
sub
hlt
rol
js
mov
add
inc
pushf
lods
cmp
sti
jne
and
insb
loopne
leave
in
addr16
test
cli
or
hlt
ljmp
ja
add
push
fwait
clc
push
ljmp
lret
xor
xchg
sbb
adc
fstpl
jge
insl
mov
decl
addr16
iret
pop
les
sbb
movsb
jg
sbb
push
outsl
iret
rdtsc
cmp
push
call
mov
mov
inc
test
fwait
cmc
mov
rorl
shl
push
xchg
lods
fs
addr16
sbb
xor
loop
popa
leave
aad
lahf
add
je
push
push
ds
adc
mov
pop
fldenv
cmp
push
inc
in
call
mov
icebp
and
ja
inc
pop
jl
pop
sub
mov
test
das
addr16
adc
or
pop
and
or
push
add
rorb
js
insb
mov
cmp
dec
pop
push
test
dec
xchg
lea
outsb
pop
lea
fdivp
imul
or
add
push
sub
add
lret
cmp
addr16
jg
jmp
sti
test
cmc
adc
adc
mov
jo
aas
or
mov
lock
cmpsl
nopl
rorb
clc
cmp
push
mov
ret
mov
xchg
mov
xchg
push
into
test
mov
lcall
mov
mov
popf
ret
mov
xchg
or
cmp
cltd
lret
fstps
jmp
mov
pop
inc
cmp
mov
icebp
mov
lds
mov
or
repnz
jge
mov
pop
fistpll
cld
xchg
push
fnstenv
jb
mov
mov
jge
mov
rcrl
xlat
ret
sub
loope
rcrb
push
xchg
adc
les
pop
xor
sub
daa
pop
int3
inc
lea
dec
push
hlt
xor
jmp
mov
fisubrl
jb
pusha
cmp
icebp
loope
cld
sbb
mov
cmp
stc
push
jecxz
scas
insb
sbb
addr16
out
out
xlat
int3
and
sub
adc
sti
pop
xor
daa
int
fs
popf
dec
frstor
xor
insb
sbbb
insb
ss
or
stos
js
in
inc
out
arpl
or
push
mov
adc
nop
out
jle
xor
or
xlat
out
mov
aam
mov
jg
pusha
cltd
insb
inc
xchg
jae
inc
adc
hlt
in
fwait
mov
jne
jne
mov
push
pop
dec
adc
mov
jns
xor
stos
add
enter
addr16
dec
xchg
in
inc
jmp
sbb
dec
aad
push
sbb
ss
cmp
int3
xchg
scas
adcb
sbb
xor
sub
fdivs
mov
sub
jle
adc
mov
mov
pop
test
jae
add
sub
mov
add
cwtl
fadds
pop
mov
xlat
dec
outsl
in
mov
scas
dec
lret
inc
jg
inc
sub
xchg
jl
push
push
push
xchg
mov
dec
push
ficomps
lcall
and
jmp
cld
into
imul
subb
jge
dec
mov
jo
dec
or
mov
leave
sbb
mov
ljmp
iret
or
pop
fs
call
fcmove
cmpsb
jno
cltd
cmc
in
jns
jg
jo
xor
pop
fsts
push
test
in
incl
stos
outsl
stos
cltd
mov
out
out
dec
pop
imul
add
out
test
add
adc
mov
mov
in
cltd
rclb
mov
or
inc
iret
inc
call
aas
dec
test
inc
fisttps
dec
lcall
sarl
or
clc
fldt
push
aas
ja
in
data16
cmp
sub
pushf
stos
jge
mov
inc
add
aaa
inc
or
xor
mov
xorb
imul
outsb
mov
xlat
adcl
bound
movsl
cltd
add
jecxz
cmp
mov
cmp
roll
in
sub
xchg
cmc
pusha
sub
ret
mov
loopne
bound
add
cmp
in
lods
inc
aad
scas
mov
adc
fcompl
push
shll
movl
sbb
sarl
outsb
stc
scas
cmp
add
in
loope
aam
jl
pusha
sbb
dec
xlat
lds
push
bound
shr
cmpsl
leave
lret
ss
or
stc
xor
jmp
and
je
lret
pop
jl
cmpsb
cmc
push
int3
inc
cmp
mov
daa
test
mov
push
dec
sub
push
pop
pushf
loopne
sbb
and
push
negl
push
sbb
ds
cltd
cwtl
lds
pop
jle
jnp
cmp
mov
mov
test
pop
cmp
and
sub
enter
popa
cmc
outsb
cmp
in
dec
mov
pop
fcmovbe
mov
adc
cltd
cmp
pop
fs
push
sub
or
jns
out
mov
cmp
rcr
pop
bound
inc
pusha
lret
cmp
pop
lret
mov
popf
mov
ja
sub
ss
jecxz
xor
js
notb
int
and
push
sti
push
mov
and
xchg
out
imul
fsubrl
inc
cltd
shlb
test
sbb
mov
jmp
inc
adc
and
xchg
es
pusha
mov
xlat
adc
shl
jp
sbb
jae
int
out
jns
ja
push
mov
neg
in
leave
jle
scas
test
sub
xchg
loope
cltd
xor
repz
dec
insl
sbb
imul
int
data16
adcl
or
jp
out
push
test
and
stos
mov
mov
push
sub
mov
pop
inc
adc
sub
xor
das
fdivrs
push
xchg
mov
stos
xlat
cmpsb
fildll
fnstenv
outsl
jge
inc
in
inc
lods
push
les
adc
bound
loopne
and
push
je
sbb
mov
out
xchg
loop
xor
pop
or
mov
ljmp
inc
cmp
movsb
lret
mov
cmp
idivb
mov
push
repnz
and
push
int
add
or
cltd
inc
pop
mov
jmp
mov
scas
adc
enter
int3
push
loop
adc
cmp
bnd
xchg
sbb
adc
or
push
sub
sub
shll
dec
nop
movb
cmp
inc
bound
inc
lret
lcall
cmp
in
adc
sbb
or
bound
outsb
push
repnz
cmpsl
cmp
lret
inc
jmp
sbb
repz
icebp
pop
dec
loop
mov
push
mov
inc
or
lretw
or
xor
xorl
idivb
ds
jnp
imul
cmpsb
mov
adc
mov
lods
pushf
xor
mov
pop
pop
jbe
flds
add
stos
add
iret
mov
sahf
imul
pushf
movsl
dec
push
fimull
cmc
push
cmpsb
or
adc
dec
pop
add
stos
int3
and
inc
loop
mov
shrl
ja
icebp
sub
aad
clc
push
out
lock
fdivrs
jno
or
cld
xor
mov
mov
xchg
sub
scas
xor
xlat
hlt
fbld
nop
add
cmp
hlt
arpl
add
jo
dec
rcr
cld
xlat
cmp
xchg
out
xor
movsb
inc
inc
test
data16
mov
cmp
sbb
pushf
fdivrs
dec
pop
ss
sub
addr16
iret
popf
xlat
add
test
or
test
stos
cli
dec
add
js
insb
dec
pushf
sbb
test
pop
cmpsl
sub
mov
rolb
push
sbb
rcrl
popl
outsl
inc
frstor
sbb
enter
mov
subb
jecxz
stc
jnp
sbb
bound
mov
addl
js,pn
xor
adc
dec
push
fmul
dec
cltd
jg
test
cmpsl
jb
mov
lods
popa
sbb
or
fs
adc
xchg
xor
sbb
pop
push
vpmacssdqh
mov
ja
adc
sarl
fchs
jmp
xor
daa
fldt
jno
pop
mov
scas
xlat
inc
repnz
out
test
insl
xchg
cmpsl
jb
pop
adc
sbb
pop
mov
adc
imul
pop
push
push
mov
push
and
xchg
mov
or
mov
out
ret
mov
mov
out
out
jp
pop
fcmovb
decl
add
enter
scas
pop
repz
shlb
pop
mov
lahf
mov
mov
or
les
shll
lcall
add
aas
addl
and
inc
lds
or
push
sub
pop
ss
xchg
xchg
pop
dec
testb
or
ss
push
push
jne
sbb
and
pusha
ret
fimull
adc
dec
or
outsb
imul
shrl
jbe
pop
fldt
push
js
lock
fnstcw
ret
in
pop
movsl
ja
shrl
push
push
mov
adc
pop
push
xchg
jbe
mov
jno
std
xchg
arpl
push
ret
mov
cld
aad
fists
std
mov
movd
lods
inc
or
xchg
ret
arpl
stc
mov
push
test
out
add
push
scas
loope
xchg
mov
mov
pop
call
mov
stos
jecxz
outsl
jne
fsubs
cs
push
arpl
scas
lock
xor
xlat
lret
xor
pusha
sub
sbb
push
hlt
mov
mov
lock
movsb
int3
inc
lock
xor
sbbb
addr16
mov
dec
push
add
cmp
mov
xchg
cwtl
push
sbb
lret
add
roll
xchg
ljmp
mov
or
jl
cmp
fbstp
pop
std
or
xor
test
test
sub
loop
lahf
or
insl
gs
inc
mov
pop
push
stc
rcrb
sbb
push
popa
mov
adc
ja
jbe
jo
sbb
pop
cmp
dec
jecxz
lods
imul
mov
mov
iret
divb
bound
daa
ja
push
pop
cmp
aas
mov
stos
iret
into
adc
add
jle
stos
cmp
sub
les
popf
adc
leave
jge
jp
pop
pushf
dec
xchg
xchg
in
sbb
loopne
push
add
xlat
jmp
or
leave
js
repz
aas
ljmp
mov
shlb
test
lock
imul
pop
mov
sbb
scas
jae
push
sbb
je
xor
std
shll
or
into
jle
mov
out
std
and
push
test
xor
or
pop
pop
mov
popf
add
push
xchg
popa
xchg
in
cld
mov
outsb
cmp
xchg
cmp
xchg
in
inc
loop
fldenv
inc
movsb
and
dec
fsubl
or
mov
shl
jno
flds
ret
push
jle
pusha
divl
jecxz
mov
fisubl
inc
mov
add
andb
fistpl
dec
test
sbb
jo
sub
daa
in
je
and
pop
push
fcompl
ds
dec
sbb
call
mov
lret
sub
sub
lret
cmp
inc
hlt
hlt
pop
push
push
sbb
xchg
clc
fs
pop
cli
inc
leave
mov
fbstp
pop
andl
inc
clc
iret
pop
outsl
cmp
loope
jns
add
push
mov
dec
jecxz
xchg
or
popa
int3
inc
loope
and
or
inc
pushl
fimull
fildl
test
xchg
cmpsl
int
cld
leave
pop
jg
sbb
aas
add
mov
push
ds
mov
fmul
cltd
lahf
jno
or
xchg
nopl
std
lea
xor
xchg
mov
aas
lret
pushf
cli
loop
sub
jb
mov
icebp
jnp
call
jmp
jl
fidivl
adc
ret
mov
or
movsl
lret
imulb
loop
dec
addr16
lds
js
xor
jae
inc
shrb
xchg
xor
and
mov
or
jge
fninit
mov
div
and
repz
pop
jmp
push
fwait
cmp
sub
mov
adc
test
loopw
lea
mov
fsubs
cld
in
sub
stos
in
pop
pop
insl
adc
inc
push
les
cs
jl
insb
jno
sbbl
mov
dec
jbe
out
leave
out
popa
add
aam
xlat
xchg
into
inc
jmp
push
imul
push
lret
mov
leave
or
movsl
aas
or
ret
cli
test
sarb
lret
aad
cld
cmp
sub
adc
clc
sub
jmp
xchg
rol
inc
jo
addr16
adc
repz
cmpsl
arpl
scas
pushf
sub
fimull
test
popf
std
dec
pop
inc
jg
jns
mov
sub
inc
and
ret
pop
cmp
jp
cmp
sbb
stc
xor
pop
data16
add
jno
and
pop
insb
shlb
stos
mov
loopne
shll
or
insb
int3
gs
jmp
inc
mov
cwtl
add
xchg
jle
or
pop
jo
ret
scas
fistpll
imul
or
mov
aad
inc
dec
les
pusha
mov
dec
fstps
std
mov
add
mov
in
inc
jnp
jno
notb
mov
iret
insb
out
sub
cmpsb
inc
cld
mov
add
dec
push
incb
and
enter
cltd
dec
mov
out
mov
sub
leave
sahf
dec
mov
bswap
dec
rcll
jge
pop
lret
push
inc
fcompl
sbb
pop
lods
and
or
mov
repnz
popf
out
lcall
bound
cmp
mov
add
addr16
dec
pop
adc
mov
mov
pop
cmc
ja
mov
stos
pushf
fldcw
and
stos
lcall
ljmp
mov
sbb
popf
shrl
xchg
fldl2t
lock
dec
rol
lea
jmp
movsb
push
addr16
xor
out
inc
ret
or
mov
rcl
xchg
movsb
cmpsl
rorl
out
fistl
sub
test
push
inc
lods
cmpsb
jne
cmp
into
fcomps
fistps
scas
and
dec
movsb
stos
mov
adc
out
lcall
or
loopne
dec
sbb
insb
jno
shlb
add
aam
and
sub
das
xor
push
inc
movsb
jbe
shll
sub
and
lret
cmpsb
ljmp
or
jge
jecxz
cs
sysret
xor
xor
or
in
jo
push
mov
xchg
lock
icebp
cld
push
cwtl
pushf
int
xchg
sub
cltd
xchg
cmpsb
rcrb
xor
pushf
inc
pop
mov
adc
jmp
adc
jle
jmp
cmp
ljmp
add
jp
stos
fidivrs
adc
mov
jns
cmp
push
imul
push
lsl
dec
sub
jno
xor
jb
adc
popf
bound
and
loopne
jno
gs
fs
mov
jp
mov
jle
push
test
dec
bound
add
xor
pusha
incb
pop
mov
cmp
lret
stos
push
xchg
jge
cmpsb
or
sbb
pop
xchg
mov
sbb
mov
inc
and
pushf
jae
in
add
aam
push
inc
and
dec
loop
inc
lods
dec
sbb
pop
jecxz
pop
fcmovnb
mov
or
test
sbb
inc
in
sub
shrl
aas
jns
sub
lods
call
add
mov
int
jb
sbb
mov
bnd
sbb
lret
push
pusha
mov
jne
mov
jbe
dec
mov
mov
lahf
imul
ja
mov
push
xchg
into
dec
jle
pop
jae
lcall
mov
pop
pop
addr16
lods
push
add
in
mov
mov
negl
jno
jne
jge
aaa
nop
loop
test
es
mov
xor
ljmp
scas
adc
sbb
pop
pusha
sbb
dec
outsl
sub
push
xor
xchg
push
mov
std
push
cmpsb
fmul
scas
or
jmp
repnz
xchg
popf
loopne
adcb
mov
cmpsb
rclb
imul
imul
xor
dec
xchg
orl
inc
mov
jge
mov
aad
inc
sti
lret
jae
mov
and
and
sub
dec
mov
or
inc
add
ret
lock
add
pusha
test
inc
data16
in
lret
pmuludq
fimuls
jmp
mov
loopne
or
mov
mov
gs
add
sahf
aaa
mov
jnp
loopne
in
mov
pop
mov
imul
jb
mov
cwtl
mov
cltd
mov
mov
loop
xlat
add
aas
enter
push
rcrl
push
pop
test
into
sbb
arpl
pushl
lcall
fidivs
dec
push
loope
fistps
aam
lods
dec
and
jle
push
in
xor
lcall
rorb
mov
jecxz
loop
inc
xor
sub
mov
mov
in
hlt
shll
ljmp
sub
fcompl
mov
sub
cmp
xchg
mov
and
add
aam
lcall
jne
loop
xor
push
sbb
inc
and
dec
inc
clc
jmp
dec
popf
xor
push
rcr
dec
popf
sub
movsl
xchg
xchg
push
xor
enter
mov
jecxz
out
pop
inc
sti
ret
jbe
lods
push
stos
mov
push
cwtl
lea
jl
fs
sub
sub
je
lds
shlb
mov
mov
aaa
add
push
leave
gs
adc
add
jno
and
rorb
es
xchg
dec
imul
dec
mov
xchg
jnp
add
stos
hlt
adc
jb
xor
mov
rcrb
add
mov
add
xchg
xchg
or
cmp
mov
cmpsl
add
cltd
imul
rorb
fld
jecxz
neg
adc
call
cwtl
xchg
bound
mov
daa
or
lods
in
repnz
jnp
aaa
in
adc
into
mov
mov
lds
pop
and
sbb
mov
pop
test
sub
adc
mov
and
jp
pop
sub
inc
insb
lret
jno
jge
subb
in
stos
scas
ja
inc
aaa
dec
adcb
mov
sub
or
bound
mov
ljmp
shl
jge
in
or
scas
arpl
sub
in
push
or
xor
daa
loopne
xor
ret
das
rclb
sti
js
push
sub
xor
jne
dec
ret
hlt
push
cmp
scas
lea
test
adc
push
aaa
sbb
sub
cmpsb
sarb
out
outsb
outsb
add
ffree
pusha
not
add
iret
insb
sub
inc
movsb
leave
push
pop
jbe
adc
test
push
ret
mov
xchg
mov
xchg
ljmp
jecxz
xchg
cwtl
lods
cmp
add
and
push
cmpsl
push
sub
push
mov
xchg
sub
adc
ret
mov
mov
add
movd
test
in
outsl
pop
clc
pop
addr16
lahf
mov
dec
cs
testl
push
push
pop
ljmp
or
push
jne
scas
les
adc
inc
xor
popa
popa
iret
in
sti
or
or
ja
jp
in
repnz
negb
inc
fwait
lea
push
jno
sbb
cmp
push
lods
sub
fwait
mov
mov
mov
outsl
loop
and
xorl
xor
mull
mov
test
push
imul
or
cwtl
aaa
mov
ret
xchg
sti
inc
pop
fnstenv
jp
push
fldl
rorl
mov
aas
add
lods
pop
dec
pop
push
fstpt
mull
mov
pop
inc
and
mov
cmp
loop
fwait
das
movsb
mov
movsb
xor
sub
shr
in
cmp
shll
fdivrs
fdivl
scas
adc
jg
pop
roll
ret
mov
mov
push
jle
mov
sbb
xor
jl
nop
mov
mov
xor
push
in
mov
cmp
lahf
cmpb
test
pusha
cmpsl
pop
popa
dec
sub
loope
fs
push
mov
sub
dec
shll
sub
push
data16
stc
fcompl
push
in
or
call
cwtl
repz
pop
sbb
pop
jp
cwtl
sbb
dec
loopne
mov
jb
mov
xor
stos
daa
pop
add
out
push
pop
aad
cmp
push
jo
inc
mov
pop
sub
mov
jecxz
or
dec
jge
xor
jmp
mov
cld
lds
pop
insl
bound
add
mov
jle
xor
lds
cmpsb
fcmovnb
cmp
add
add
subb
ljmp
mov
sahf
xor
cmc
xor
testb
imul
enter
lret
inc
es
in
cmp
pop
add
cwtl
je
cli
pushf
cmp
pop
jl
dec
inc
gs
pop
fldt
mov
jl
imul
xor
cmpsb
stc
fwait
sarb
inc
icebp
lods
jae
sbbb
mov
ss
rorl
sbb
in
and
add
mov
hlt
mov
imul
scas
pop
push
or
cmpl
call
rcrb
cli
xchg
jmp
and
je
pop
add
mov
sub
js
dec
cmp
ljmp
and
loope
in
mov
sti
fidivs
call
not
sti
les
dec
ss
mov
jecxz
and
or
mov
jb
lea
dec
mov
mov
sbb
sub
jns
push
stos
js
fnsave
xchg
add
mov
cltd
sti
xchg
cmpsl
es
iret
ret
test
push
imul
push
adc
es
int3
shlb
les
mov
xchg
jno
push
push
lds
aas
out
push
push
xor
dec
mov
loope
sbb
mov
fstpl
xor
xchg
stos
push
fldenv
out
xchg
dec
adc
jl
add
jl
loope
aam
arpl
adc
lret
sbb
xchg
xor
js
negb
fistps
lods
jo
aam
cltd
mov
xchg
sub
mov
jno
inc
cmp
jns
outsb
cmc
int3
dec
mov
popa
jno
dec
lret
imul
and
inc
jecxz
xor
aad
sahf
lret
loopne
sahf
mov
test
or
stos
mov
loop
fnstcw
and
and
mov
pop
inc
jns
in
mov
adc
add
xor
ficoms
pop
in
inc
cli
dec
inc
push
ret
cmp
jle
dec
and
shll
filds
and
cld
dec
fcmovne
pusha
cwtl
sub
roll
imul
inc
or
xchg
pop
cmp
xor
gs
pusha
out
fbld
les
push
adc
or
mov
in
js
or
sub
dec
lods
lds
ja
out
jne
dec
cli
mov
inc
js
sbb
pop
mov
and
loope
enter
inc
inc
daa
pushf
fs
xor
test
push
xchg
add
nop
movsl
and
fbstp
push
stos
adc
mov
adc
mov
xchg
fsub
lea
mov
add
mov
stos
push
xlat
sub
xchg
xchg
rorb
fstpt
cmpsl
ja
ret
dec
or
cs
inc
popf
outsl
mov
stos
gs
insb
xor
loop
mov
lret
sub
or
test
fildl
rcrl
jns
or
data16
mov
cmpsl
adc
xchg
inc
cmp
lock
and
daa
js
sbb
push
lahf
cmp
lea
xchg
mov
adc
fsubp
mov
sti
dec
stos
xchg
push
aas
adc
inc
mov
mov
or
sub
pop
push
adc
test
addb
jns
sbb
adc
mov
pushf
pop
mov
out
jo
push
mov
xor
inc
rcrb
xchg
and
lahf
fiaddl
fsubs
repnz
jg
push
jl
or
mov
stos
sub
inc
jmp
call
fisttpl
daa
pushw
orb
clc
seto
add
test
fstpl
inc
add
sub
xor
int
mov
sub
es
mov
inc
and
shll
sbb
and
push
dec
leave
pop
dec
test
mov
fsub
sbb
push
xchg
inc
or
mov
imul
stos
fsub
push
and
cmpsb
mov
jb
bound
cmpsl
pusha
inc
in
ret
mov
sbb
pop
pushf
mov
mov
add
data16
adc
sti
aam
stc
je
aaa
dec
inc
aas
rclb
sbb
out
mov
outsl
xor
sahf
sbb
push
kaddw
stos
xchg
push
leave
pop
test
in
mov
loope
packssdw
adc
fidivrl
arpl
pop
xor
movsl
cmp
sbb
stos
stc
rcll
lret
in
jnp
ret
lcall
in
jge
add
pop
xchg
lret
std
repz
inc
sbb
arpl
repnz
subl
pusha
pusha
insb
shl
push
cwtl
bound
or
repz
jmp
cmpl
sahf
mov
dec
dec
sub
adc
sub
mov
pop
mov
adc
loop
or
xchg
push
push
sbb
ret
cmpsb
mov
cmc
or
pop
cmp
xor
sub
pop
pusha
jne
sub
mov
testb
cwtl
pushf
jbe
cli
adc
mov
mov
xchg
fisubl
fildll
xchg
push
lods
iret
mov
lea
and
mov
add
dec
and
and
out
imul
pop
bound
add
inc
in
mov
inc
mov
rcll
stos
inc
enter
mov
clc
hlt
movsb
scas
xchg
shl
inc
cmp
shll
add
pushf
pop
pop
cmc
xor
push
inc
mov
push
dec
mov
dec
into
jle
cwtl
inc
inc
fdivl
icebp
xchg
lods
out
xor
int3
ret
mov
daa
cli
ljmp
adc
bound
and
jecxz
sbb
ficoml
loop
inc
es
jb
and
in
jne
pop
mov
sahf
mov
sbb
push
mov
jnp
sahf
sub
data16
or
jge
icebp
push
test
imul
pop
and
mov
adc
movsb
xchg
inc
adc
xchg
inc
cmp
rolb
dec
sub
or
rorl
ljmp
adc
daa
rolb
push
dec
aaa
cmp
adc
int3
rolb
sbb
int
fcomip
mov
pop
cmp
xor
cs
pop
and
ja
mov
lret
xchg
jbe
int3
sbb
mov
ljmp
insb
mov
add
aaa
loop
inc
and
imul
lcall
test
jnp
push
lret
adc
cs
jnp
sub
cltd
cmp
and
pop
lods
or
sbb
sbb
cmc
push
dec
xchg
ss
and
mov
aas
out
push
mov
jno
or
pushf
push
or
cld
push
movb
xchg
dec
popa
fsubs
mov
pop
in
shl
rorl
out
dec
cli
in
lds
dec
cmp
cmp
cmp
jge
dec
pushf
mov
cltd
or
xor
subb
in
inc
mov
ljmp
cmp
cmp
mov
repz
mov
and
fsubs
jl
add
imul
or
jge
scas
jmp
or
rorb
mov
int
pop
dec
xchg
xchg
push
xchg
loop
pop
adc
mov
xchg
and
jmp
fwait
push
lret
adc
scas
lods
mov
ret
sub
jp
adc
push
testl
addr16
addr16
in
or
mov
sub
dec
dec
adc
bound
mov
xchg
icebp
pop
sub
add
xchg
pop
pop
dec
push
jno
push
xlat
xor
lcall
pop
sub
xor
fidivs
and
jne
je
push
iret
dec
clc
imul
mov
push
adc
mov
lahf
pusha
in
mov
sbb
ja
les
sub
dec
mov
ljmp
lea
pop
xchg
mov
mov
jb
lcall
mov
mov
scas
xchg
push
lret
outsl
jecxz
push
mov
or
jae
dec
mov
cmp
fs
lods
pop
push
loop
cltd
mov
or
or
mov
in
popa
and
dec
sbb
shrl
call
hlt
outsb
pop
cmp
mov
popf
inc
sbb
add
sti
inc
mov
pop
out
add
cltd
push
movsl
addb
mov
xor
add
mov
mov
pop
ret
lea
and
test
mov
xlat
mov
jle
outsl
out
pop
arpl
mov
lahf
out
in
inc
sub
sbb
pop
dec
pop
addb
test
call
sub
test
push
xchg
inc
out
imul
bound
or
and
jle
sub
add
pop
ja
lret
pop
cld
ret
sbb
ficoml
and
sbb
dec
pushf
in
les
or
jle
push
jg
sbb
mov
jnp
add
js
cwtl
movsb
push
imul
fnstenv
adc
and
in
sti
pop
cwtl
repnz
cs
push
jo
mov
dec
pop
loopne
or
cmpsb
ds
insb
fimull
rcrl
stos
push
pop
xor
stc
sub
jl
jge
xor
mov
mov
imul
mov
inc
or
jnp
and
je
sbb
leave
push
jns
or
sbb
in
cmovne
call
mov
jae
jge
jp
out
lcall
sbb
js
jecxz
mov
ljmp
pusha
adc
mov
mov
lods
push
pop
jb
fcoms
mov
mov
mov
sub
xchg
in
sti
sahf
mov
xchg
xlat
int3
mov
and
daa
mov
inc
and
pop
xchg
pop
pop
pop
pushl
cmp
adc
popf
and
insb
in
jecxz
mov
lods
shrl
dec
shl
push
inc
sub
mov
mov
push
sub
mov
aas
adc
cwtl
popf
mov
xchg
dec
pushf
ljmp
out
clc
aaa
dec
in
les
pop
push
sbb
in
push
orl
pop
adc
and
sti
jl
jl
push
sbb
inc
gs
stos
xchg
rorl
jg
pop
cmp
dec
jg
aaa
dec
sbb
aad
arpl
fistps
pushf
or
fst
mov
sbb
inc
cmp
cmp
js
xchg
int3
stc
or
pop
lcall
pop
mov
xor
pop
sub
add
lret
mov
ds
cmp
pop
data16
fsubrs
cld
call
leave
mov
jmp
mov
pop
std
mov
movsl
lret
xor
enter
sbb
lock
mov
mov
mov
push
xchg
and
mov
xchg
cmp
cmp
cltd
mov
aam
sti
daa
jne
push
mov
into
or
xchg
iretw
scas
xchg
cmp
inc
pop
mov
rclb
mov
add
push
gs
out
adc
les
in
call
stc
push
sub
push
mov
xchg
pop
xlat
ljmp
jnp
jp
roll
sub
sbbl
xchg
in
dec
sbbb
cli
add
jecxz
add
lahf
jge
aad
push
loope
inc
prefetch
xor
xchg
enter
cmp
mov
inc
pop
mov
dec
xchg
data16
data16
cli
xchg
adc
add
inc
mov
push
xor
push
ret
sub
jecxz
mov
sub
adc
pop
xchg
jb
xchg
out
fcomps
sbb
inc
xchg
xor
inc
lods
sarb
jbe
cwtl
or
clc
insb
stc
ljmp
xor
cmp
call
fisubrs
xor
sahf
mov
cmpsb
pop
xor
fstps
sbbl
cmp
push
cld
cmpsb
pop
jle
push
add
loop
and
pusha
jle
ds
test
adc
mov
jns
sub
ds
xor
xor
fs
movsl
xchg
add
fldt
push
mov
pushl
xlat
shrl
mov
jo
xor
ds
lret
mov
pop
std
pop
xchg
push
xchg
mov
mov
in
insb
dec
out
aaa
out
sbb
xchg
dec
and
sbb
pushf
push
aam
lods
or
aas
icebp
cmp
add
out
rcl
repz
out
sbb
pop
das
jmp
je
sbb
das
pop
xchg
mov
mov
fs
push
or
jo
cli
js
out
push
xchg
push
daa
fcmovnb
jne
jo
push
std
outsl
loopne
pushw
shr
jnp
in
adc
pop
or
lret
rol
lahf
xchg
push
dec
lock
cs
or
mov
mov
jecxz
pop
inc
mov
enter
dec
mov
push
outsb
fwait
lret
xor
inc
push
inc
cmp
mov
test
add
ds
stc
mov
push
cltd
mov
sbb
stos
inc
hlt
outsl
xor
dec
or
dec
push
mov
mov
cmc
mov
pop
sub
andb
sbb
mov
scas
popf
daa
daa
clc
push
lret
loop
mov
push
daa
jae
sbb
inc
adc
je
and
imul
aaa
cmp
cmp
inc
stc
xchg
jne
jl
cmp
mov
sub
mov
mov
or
xchg
push
sbbb
xchg
and
inc
das
sub
adc
jge
push
mov
in
jno
incl
or
notl
popa
xchg
inc
fwait
repnz
xchg
jl
xor
std
rcrb
mov
dec
sub
dec
inc
mov
jmp
jbe
jno
test
pop
shlb
mov
add
inc
mov
or
mov
aad
push
jns
je
out
aad
lahf
fildl
push
mov
xchg
daa
mov
fdivs
fucomip
xchg
mov
loopne
and
push
pop
mov
pop
rcrb
in
cmp
ja
jne
dec
cmc
in
lods
push
mov
popa
ret
jbe
push
xchg
and
jmp
mov
arpl
jnp
roll
lods
or
cmp
add
inc
push
pop
xchg
dec
pop
ret
jnp
cli
mov
ljmp
ss
dec
not
jo
movsl
sti
dec
fcoms
subb
call
xchg
and
xchg
mov
cmp
inc
or
mov
push
push
pop
xor
popl
notb
xor
neg
cltd
push
push
test
outsl
and
push
maskmovq
divl
jbe
sti
cmpsl
push
mov
mov
sub
ret
xchg
pop
inc
inc
test
mov
or
or
pop
and
repnz
mov
aad
cli
out
adcl
adc
sub
out
xor
cmpsl
sbb
cltd
jle
xchg
jp
jae
sbb
add
into
cmc
aam
mov
aam
data16
jecxz
sbb
lock
pop
aaa
add
lcall
ret
mov
scas
fwait
andb
insl
sbb
mov
mov
mov
pop
mov
cmp
inc
adc
popa
mov
jns
fisubrl
sub
loop
xor
jmp
jg
ja
add
push
stos
dec
adc
dec
mov
pop
mov
mov
outsl
jne
data16
or
xor
push
das
stos
mov
adc
mov
xor
jp
xor
fstps
arpl
cmp
pop
out
popa
ljmp
test
test
adc
jge
sub
xor
aas
or
mov
inc
imul
cmpl
sub
mov
mov
dec
and
mov
shlb
push
stos
popa
insl
and
inc
or
int
xor
imul
push
mov
or
pop
adcl
cwtl
repz
jne
mov
mov
test
jno
mov
js
aaa
xchg
clc
jbe
stc
scas
xor
mov
fldl
sbb
ds
add
adc
pop
icebp
xchg
fwait
jb
sbb
xor
rcrb
inc
cltd
sbb
ljmp
sti
or
sub
jns
es
push
scas
mov
aaa
inc
sahf
cmp
jbe
mul
lret
xor
aaa
lahf
inc
jp
pop
pop
sbb
shl
xchg
sarb
xorl
lods
fwait
jbe
sahf
lods
pop
insl
pop
sub
lcall
jo
sbb
and
fcoms
add
ljmp
cmp
xchg
mov
xchg
aaa
aas
xchg
pop
addl
scas
pop
mov
daa
xchg
iret
jp
movsb
pop
stos
ror
fsubs
dec
gs
add
xchg
and
xor
cld
sub
gs
cmp
aad
pop
xchg
mov
andb
adc
and
test
dec
xlat
into
imul
or
sub
cmp
fidivl
dec
scas
xchg
fimuls
xchg
shl
dec
mov
icebp
js
xchg
cwtl
pop
mov
sbb
out
cwtl
hlt
adc
jp
ficoml
xchg
insb
rorb
xor
inc
ss
cmpsb
push
xchg
pop
lret
jge
outsb
pusha
jge
test
sbb
mov
jo
hlt
rcrl
and
lods
outsb
add
inc
dec
push
lret
imul
in
movsl
sbb
cmp
jnp
jl
jl
mov
and
div
mov
loope
mov
lret
or
cli
mov
lret
aam
or
outsb
push
das
lcall
xchg
call
aas
aaa
dec
pop
mov
mov
sbb
pusha
or
stc
xor
in
xchg
jl
pop
sarl
das
pop
push
mov
push
xor
mov
das
jne
sahf
stc
jge
popf
inc
mov
insl
and
dec
mov
cmp
dec
je
iret
inc
data16
xor
xor
jns
add
and
jbe
lods
bswap
lea
in
ljmp
cmp
push
xchg
xchg
insl
fs
mov
insl
nop
or
cmpb
test
adc
repz
inc
gs
adc
cmp
ret
shrb
sbb
jp
or
pop
fs
sbb
ret
jge
xor
stc
inc
xchg
fdivl
pop
xchg
lret
ss
iret
loop
and
and
dec
inc
push
dec
sbbl
filds
ja
adc
and
sbb
fistpll
push
orb
ficomps
arpl
add
scas
jp
fcompl
clc
mov
adc
sub
mov
xchg
adc
cmp
jmp
or
mov
scas
inc
pop
stc
xor
or
sub
mov
call
jge
repz
lahf
sub
sub
xchg
adc
sarb
sbb
cld
pop
std
gs
dec
and
mov
es
mov
dec
xchg
retw
mov
lahf
adc
xchg
or
cmp
hlt
xchg
fists
lods
adc
inc
lds
adc
inc
mov
loope
sti
adc
mulb
es
sub
add
insb
stc
daa
inc
sbb
jp
xchg
pop
les
pop
fdivrl
xrelease
inc
jle
aas
enter
xchg
mov
in
mov
xchg
icebp
push
sahf
popf
jle
dec
cmc
aad
jecxz
mov
cmp
out
stc
lret
cs
adc
in
shlb
cmp
imul
outsl
xchg
pop
jmp
jb
rolb
mov
sbb
es
int3
jp
lods
ficoml
imul
rcl
sbb
jp
mov
mov
mov
or
repnz
lret
or
mov
ljmp
lret
xor
enter
push
mov
mov
fisubl
inc
addr16
test
dec
mov
shrb
mov
inc
adc
cmpb
js
rcr
fistps
fildl
xchg
jg
ret
jl
pop
loope
js
fsts
or
add
cmp
pop
mov
rcrl
pop
adc
and
cwtl
ret
or
ja
aam
cmc
fsubrs
push
jne
xor
cmpb
xlat
jnp
int
jbe
sahf
cmp
cmp
test
icebp
loop
mov
pop
inc
icebp
out
lock
pop
imul
adc
add
jle
ljmp
loopne
adc
mov
sub
sahf
pushf
mov
subb
xorb
movsl
nop
mov
mov
in
out
mov
sti
xor
cmpsb
cmp
or
pop
inc
fs
addr16
lret
cmp
fidivrl
int
inc
cmp
popf
aas
cmp
sub
mov
add
or
mov
dec
mov
or
jns
sahf
or
or
rcrb
rorb
movsb
shll
fisubs
call
push
out
and
std
rorb
bound
pop
gs
and
gs
add
or
dec
aam
mov
push
xor
xorl
add
inc
mov
imul
or
out
cmpsb
aad
xlat
cli
inc
jbe
mov
into
in
push
sub
fwait
or
popf
jl
mov
xchg
cmp
aam
and
sbb
xor
rep
xchg
inc
rolb
or
mov
sti
jb
or
inc
in
jbe
xor
fists
inc
mov
xchg
mov
xor
add
jg
lret
mov
xor
cmp
sub
ret
sub
cmp
fadds
stos
or
dec
lcall
test
stos
clc
pusha
lock
pop
cmp
fmuls
lcall
shrl
pushf
dec
sahf
or
sbb
xchg
stos
in
stc
mov
dec
out
push
outsb
ret
cwtl
xor
ljmp
xchg
adc
aad
loopne
cmp
push
push
movsw
loop
lret
pop
lahf
sbb
call
pusha
imul
cmp
pop
xchg
cmp
test
orb
fmull
jl
inc
sbb
gs
lods
jg
jns
push
xor
jns
add
dec
adc
or
popa
sub
jp
or
std
push
mov
pop
sbb
js
shr
inc
rcrb
int
cmp
leave
imul
jecxz
or
fbld
add
fildll
jmp
jmp
mov
push
xchg
jnp
adc
mov
test
jg
fs
mov
or
xor
lods
or
lds
fidivs
cmpl
push
cmp
enter
cltd
sti
in
mov
popa
xchg
jge
loope
ds
leave
adc
in
stos
mov
and
mov
jp
lock
std
dec
int
add
sub
sub
daa
mov
mov
sbb
inc
xor
xchg
pop
mov
fdivr
push
loopne
add
arpl
add
stc
mov
stos
cmc
cs
mov
shl
popf
lods
in
loop
fildl
hlt
popf
xchg
cltd
xchg
sbb
imul
xchg
push
jge
sub
mov
pop
shlb
cmpsb
in
push
add
cmp
add
mov
inc
jo
jae
pop
pop
test
add
ljmp
std
imulb
and
cmp
ret
dec
decb
fs
addr16
sbb
push
das
pop
stos
xchg
jae
pop
mov
movsl
js
imul
xchg
std
mov
cmp
mov
xlat
and
or
cli
jns
int3
adc
jb
and
test
pop
mov
xorl
daa
sub
lret
lret
inc
xor
int
mov
aad
sbb
rol
call
xlat
jbe,pn
jbe
inc
int3
imull
mov
scas
mov
mov
pop
ror
dec
push
push
add
mov
popf
adc
mov
dec
fcoml
jmp
popa
dec
jp
out
mov
sub
push
mov
dec
push
outsb
add
lea
add
lods
lret
movsl
popf
lods
mov
cmp
pop
or
mov
jae
mov
scas
les
lods
mov
xlat
data16
push
xchg
jg
out
mov
in
in
mov
cmp
rorb
test
shrl
in
mov
mov
call
mov
ds
xor
call
cmc
scas
fs
lret
imul
cld
ds
push
or
mov
dec
lea
outsl
fucomip
loop
aas
jbe
dec
out
xor
je
in
xchg
jno
and
xor
das
bound
popf
test
scas
lods
inc
into
in
push
scas
sbb
aaa
add
cld
aas
xor
xchg
mov
cmpl
and
leave
mov
inc
gs
test
ds
sahf
push
and
jmp
fnstsw
jb
add
lea
push
lods
imul
sti
jb
pop
jmp
negl
orb
push
out
insb
mov
dec
fisttps
std
lret
hlt
inc
out
jo
jmp
mov
jmp
and
sub
aaa
outsl
lods
test
das
inc
xor
sub
ret
inc
in
adc
jl
push
shrb
std
mov
dec
insb
into
cmp
adc
mov
sarb
stos
mull
inc
push
push
cld
lea
cltd
pusha
movsl
dec
fsub
in
inc
lock
mov
pop
and
cmp
into
pop
or
clc
or
push
ret
fisttpl
and
lock
jno
cmpsb
mov
orl
push
mov
push
into
or
sub
cwtl
jle
frstor
out
stos
pop
mov
dec
stc
pop
push
jmp
gs
repnz
fcomps
fistl
cmp
mov
out
pop
jg
mov
scas
lods
fdivr
mov
mov
ret
mov
popa
push
daa
ss
jp
outsl
jge
aas
das
mov
fucomip
sub
jle
and
xor
shll
add
imul
pop
mov
add
jo
imul
sar
sahf
push
fsts
sbb
test
jl
and
xor
scas
out
mov
mov
in
xchg
sbb
int
cmc
xor
mov
popf
adc
je
aad
out
fisttps
lret
mov
in
mov
arpl
lods
cs
lcall
ja
or
or
jae
leave
es
loop
imul
sub
cmpl
jb
pop
mov
in
roll
xor
cs
test
pop
push
xor
outsb
dec
std
mov
adc
inc
push
aad
inc
xor
xor
lcall
test
das
pop
mov
mov
sub
xor
scas
outsb
fwait
test
dec
mov
aam
int3
lds
add
dec
popa
dec
or
aam
mov
cmp
and
mov
inc
lds
or
jns
mov
arpl
int3
dec
call
cltd
test
movsb
jle
maxps
sub
shrb
clc
cmp
pop
mulb
jbe
jbe
std
cld
mov
pop
push
cmp
insl
jne
daa
pusha
std
and
addr16
or
push
fidivl
pop
adc
sbb
mov
jnp
or
ljmp
imul
addr16
cmp
jl
jmp
ss
xlat
cwtl
shlb
jne
adc
add
dec
cmp
fs
jmp
pop
mov
push
adc
cmp
aam
enter
cmp
sti
dec
jne
in
jo
aad
cmp
sub
aad
jmp
mov
xchg
xor
jge
stos
cltd
jb
mov
xchg
imul
xor
jecxz
fldenv
jp
jnp
mov
pop
stos
push
push
lock
cwtl
js
xor
mov
cltd
sbb
jg
jno
jge
xchg
cmp
push
cld
das
sub
and
add
scas
push
pop
push
icebp
lcall
mov
mov
cmp
insb
fs
add
sub
cmp
mov
cmp
jo
xor
std
jmp
ja
inc
inc
jae
js
lcall
mov
aaa
lret
inc
ret
notl
mov
adc
lret
cwtl
pop
and
jbe
xor
jle
mov
cmp
xor
add
or
test
push
inc
orb
jbe
ja
cltd
inc
adc
jns
push
cmp
addr16
add
fcomps
sti
mov
jl
imul
mov
fidivrl
es
or
sti
and
jns
pop
daa
adc
lods
movsb
arpl
sahf
and
xor
js
mov
loopne
shrl
jno
fbstp
mov
sarl
inc
xchg
mov
push
cmc
xor
into
xor
mov
stos
lahf
sbb
mov
inc
adc
and
cli
xor
pop
mov
push
scas
pop
sub
mov
int
test
or
jbe
mov
inc
lock
pusha
fcmovnb
int3
repnz
leave
jle
clc
and
mov
xchg
insl
pop
push
and
in
lcall
fnstcw
call
jp
add
pop
jo
push
sar
hlt
arpl
jle
adcl
fistps
das
cmp
std
xchg
test
es
fistl
push
push
into
je
pop
mov
outsb
jnp
inc
aad
bound
inc
rorl
bound
dec
dec
pop
mov
js
mov
in
sbb
pop
jg
xor
pop
inc
xchg
cmp
ds
or
push
mov
jge
sahf
pop
shlb
divb
inc
arpl
adc
mov
add
push
pop
scas
imul
adc
fisttps
addl
pop
jp
xchg
loop
dec
mov
pop
jl
std
addl
mov
xchg
dec
and
sbb
fs
stos
xor
push
js
mov
mov
pop
fisttps
inc
scas
pop
js
loopne
xchg
add
push
es
out
xlat
mov
xchg
movsl
rorb
out
sbb
stos
add
dec
pop
mov
call
je
xchg
in
scas
mov
xchg
or
stos
jnp
push
pop
push
xchg
push
cmp
insb
fildll
icebp
mov
ret
shll
andps
mov
in
xchg
pop
insl
aaa
pop
mov
xor
xchg
inc
and
xchg
addl
lods
mov
jecxz
mov
out
mov
inc
scas
fbld
cmc
stos
adc
loopne
mov
mov
or
jnp,pt
pop
lods
loopne
dec
stos
mov
mov
push
ret
mov
outsb
push
rol
jb
push
addl
mov
stos
dec
das
mov
lret
xor
aam
dec
adc
and
std
xor
lods
nop
rcrl
arpl
pusha
inc
hlt
loope
xchg
into
inc
aam
mov
jnp
and
jge
dec
push
out
mov
or
push
dec
stos
test
scas
sub
lcall
pop
mov
call
xchg
lock
rorb
jns
loope
mov
jnp
scas
js
cmpsb
sbb
pop
inc
dec
xor
xor
mov
test
jo
dec
out
push
in
and
pusha
pushf
push
add
cmp
pop
cmp
adc
sbb
dec
aas
icebp
push
push
enter
cmp
clc
fildll
jae
fidivrl
repz
cld
arpl
cmpsl
adc
jnp
pop
cmc
pop
jle
sbb
or
push
jo
xchg
movsl
cmpsl
je
and
mov
add
dec
out
fildl
ja
cmpl
stos
add
je
sbb
hlt
test
dec
lret
cmp
popf
jne
cli
mov
mov
push
or
das
sbb
or
push
js
push
and
outsb
pop
sub
sbb
int3
je
or
add
ret
xor
mov
test
lea
sbb
fldt
inc
nop
fs
test
scas
sarb
lret
lods
sarl
aas
nop
insl
push
push
lods
adc
dec
sbb
std
pop
cltd
loop
pop
mov
fstpl
sub
out
aam
cld
insb
aam
push
lods
sub
jnp
mov
lds
xchg
lods
and
jns
loopne
fistpll
fbstp
rcrb
mov
mov
lahf
pushf
xor
fs
ljmp
xchg
loop
mov
loope
xchg
xor
inc
or
jo
stos
je
insl
cmpsl
add
adc
andl
inc
mov
mov
in
loopne
xchg
sub
sahf
cmp
movsl
push
sub
mov
jb
or
lcall
out
jae
stos
push
cmp
lods
jno
jl
hlt
mov
leave
nop
push
icebp
xchg
cld
ret
xor
leave
sub
int3
mov
pop
pusha
sti
subl
mov
test
pop
fimuls
lcall
jmp
shll
sbb
mov
dec
lret
sbb
push
adc
or
push
stos
ljmp
loopne
sub
imul
jns
mov
test
sbb
sbb
jl
daa
pop
in
push
popa
pusha
cmc
adc
dec
int
inc
dec
pop
mov
jae
push
pop
mov
rcrb
push
test
mov
iret
fcomip
rolb
cmp
sbb
xor
adc
adc
xchg
xor
inc
pop
xchg
les
pop
dec
mov
fcmovnu
cs
mov
push
push
pop
mov
xlat
push
mov
push
gs
sub
add
mov
loope
pop
xchg
adc
out
mov
lods
out
and
xor
jge
repz
outsb
in
pop
xchg
dec
hlt
sbb
xlat
lock
nop
mov
and
inc
mov
stos
sbb
test
je
emms
fildll
xchg
adc
pop
int3
repz
cmp
add
adc
out
mov
push
push
jmp
insb
sub
pop
mov
push
ss
sub
sbb
push
fildll
mov
xlat
aaa
xorl
cmp
sbb
xchg
and
sub
adc
sti
out
inc
stos
push
and
pop
or
push
mov
sbb
xchg
imul
sub
push
xchg
xchg
mov
xor
out
in
shl
jp
aad
lret
pop
les
aaa
cmpsl
das
cmp
jb
sbb
lret
and
jg
fdivl
cmp
aam
outsb
dec
inc
bound
xchg
or
jo
inc
mov
leave
loope
adc
pusha
cmpb
pop
jno
xchg
loop
lahf
fcomps
lcall
mov
jmp
ja
scas
aad
jp
fnstenv
push
xchg
outsl
xchg
cmc
lahf
stc
daa
dec
fs
leave
insb
jnp
or
jno
pop
mov
icebp
in
mov
jne
dec
mov
out
pop
add
adc
sbb
or
es
push
mov
js
jo
xor
xchg
push
or
fadds
sahf
fbstp
andb
push
decl
inc
cmp
in
stos
mov
mov
decb
stos
nop
mov
pop
fdivrl
movsb
cmp
ja
ret
mov
lret
adcb
outsb
inc
in
pop
push
adc
mov
repnz
adc
cmpsb
daa
sti
mov
dec
in
cmpsb
sbb
push
xchg
jmp
inc
and
cs
out
insb
jl
sub
add
stos
xchg
sub
mov
add
jno
imul
nopl
add
cmp
sub
mov
fdivrl
add
loopne
or
cwtl
aaa
cwtl
xchg
test
das
dec
mov
push
xchg
dec
aad
push
insb
cld
or
pop
insb
in
clc
push
in
repz
mov
gs
pop
inc
lods
mull
pop
push
inc
xchg
fiaddl
cld
pop
add
jecxz
push
repnz
mov
push
std
jo
cmc
mov
into
cld
add
mov
cmc
and
mov
bound
das
call
lret
push
xlat
rolb
hlt
sbbb
fiaddl
enter
popf
mov
push
dec
or
dec
mov
jbe
lods
repz
or
mov
push
push
pop
fs
xchg
and
push
sub
jmp
xchg
pop
es
mov
out
fnstcw
cld
push
loop
int3
xchg
imul
addr16
add
adc
movsl
inc
scas
mov
mov
dec
add
mov
xchg
inc
mov
xor
idivb
inc
ja
loope
xor
frstor
add
lods
lret
pop
dec
enter
imul
sub
xchg
mov
cmp
mov
sbb
mov
shlb
jae
and
lock
mov
mov
and
loopne
jne
fidivrs
mov
stc
pop
popa
cli
cld
push
fsubrp
push
in
ljmp
and
loopne
cmp
push
jge
mov
push
insl
ss
jne
popf
test
sbb
adc
pop
mov
add
sbb
push
mov
in
bound
cli
mov
popa
mov
mov
iret
mov
add
push
sarb
ljmp
xlat
xchg
sub
int3
jb
ss
sahf
hlt
cmpsb
repnz
pop
test
mov
jp
jb
mov
idivb
aad
jb
inc
inc
mov
add
push
and
add
scas
and
jb
xor
mov
jp
popf
mov
in
sub
fwait
push
pop
mov
movsb
mov
add
xchg
jl
outsb
rep
add
sbbb
jo
insl
jecxz
rcrl
push
in
shrb
aas
scas
pop
mov
dec
dec
push
push
and
cmp
dec
cmpsb
or
mov
pop
inc
test
and
mov
xchg
pop
data16
xchg
mov
mov
aam
sub
shlb
push
sbb
pop
adc
and
ja
xchg
and
sub
pop
jno
fiadds
mov
mov
mov
std
clc
mov
pushf
repz
cmpl
cltd
repnz
dec
stos
lret
mov
scas
push
rolb
push
lahf
repz
push
gs
inc
cmpsl
mov
test
push
imul
sub
pop
enter
pop
jae
xchg
int
mov
dec
test
xchg
ret
jge
jecxz
adc
test
lock
jl
sub
pop
cs
sub
mov
pusha
ror
cmp
jmp
stos
cmc
sub
cli
dec
sub
dec
sub
into
xchg
daa
jb
pop
fists
outsl
cld
xchg
gs
cmp
pop
xchg
xor
pop
scas
insb
xchg
jne
ja
lahf
dec
xchg
push
and
cli
push
inc
push
insb
or
lds
or
add
das
sub
int3
and
sub
push
jl
mov
sahf
lods
je
sti
pushf
or
inc
xchg
sbb
fdivrl
imul
divb
addr16
adc
fdivs
imul
pop
sti
inc
xchg
scas
push
sub
fwait
dec
movsl
inc
sub
rcrl
bound
mov
in
inc
cmp
push
scas
sub
fnstsw
cld
mov
lea
enter
jp
dec
dec
dec
xor
push
pop
outsl
leave
xlat
outsb
in
in
out
mov
stos
mov
and
mov
in
rol
aas
mov
mov
cwtl
or
pop
pop
je
and
mov
nop
pushf
aad
xor
fadd
or
leave
xor
fimull
sub
jns
mov
mov
roll
das
mov
add
xchg
and
repnz
sti
clc
leave
dec
inc
push
add
fdivl
xor
orb
cmp
ret
jmpw
popa
sub
or
daa
aaa
push
mov
xchg
cmpsb
pushl
cld
xchg
mov
adc
jno
or
mov
pop
js
negl
pop
mov
push
xor
ljmp
dec
pop
inc
out
in
jo
scas
mov
shll
jecxz
ss
cmp
push
shr
xchg
rolb
xchg
lret
scas
decb
xchg
out
pop
push
cli
lahf
or
inc
cmpsb
ja
or
imul
sarl
fs
add
nop
fisttpl
loop
and
in
rcrl
add
aas
jecxz
cmc
dec
pop
outsl
xlat
das
xor
out
sbb
sub
fdivr
rolb
add
mov
ljmp
lock
fisubrl
js
jns
leave
pop
and
loop
popa
into
push
push
out
sub
stc
sbb
sahf
bound
in
add
xchg
add
outsl
out
push
xor
mov
repnz
push
cmp
pusha
sahf
dec
pop
in
add
mov
push
in
loop
out
jbe
sub
scas
or
adc
mov
inc
add
das
xchg
mov
pop
cmp
cmp
push
inc
cmp
sahf
out
xchg
xchg
cltd
loop
iret
pusha
xchg
gs
inc
leave
es
push
je
mov
mov
mov
movsb
shlb
fcoms
stc
sub
jmp
jo
add
cmp
roll
mov
pop
jecxz
adc
stc
loop
popa
and
jb
pushf
dec
dec
xchg
dec
jmp
xchg
stc
inc
push
inc
addr16
xor
ljmp
leave
pop
test
test
pop
ds
sub
push
and
pusha
push
xchg
sub
mov
mov
mov
xchg
pop
push
mov
inc
push
aas
inc
push
sahf
cwtl
mov
xor
cltd
shrb
dec
mov
adc
sbb
xchg
push
xor
push
jno
cmp
gs
ljmp
out
andl
mov
in
jmp
rorb
mov
pop
cmpsl
roll
adc
push
xchg
ljmp
push
xchg
mov
pusha
inc
and
pop
adc
sbb
movsl
dec
stc
aaa
or
cld
fmul
mov
int3
inc
test
sbb
lret
in
fs
rcr
imul
mov
sbb
push
sbb
and
inc
sbb
call
sub
mov
push
cmp
test
ja
in
mov
jb
mov
push
jo
dec
dec
lret
add
mov
mov
pop
iret
push
mov
jae
pop
in
lds
xor
mov
inc
sbbl
mov
and
iret
xor
shll
jp
mov
or
in
stos
push
sub
loope,pt
ret
filds
and
bound
fcmovnu
lret
inc
or
or
mov
inc
lds
xor
xchg
mov
push
sbb
stos
movl
popa
xchg
or
stc
inc
aad
es
les
into
lretw
add
mov
das
pop
inc
inc
in
xor
inc
fstpl
jp
dec
sbb
stos
lahf
fsubr
scas
mov
seto
sbb
sbb
xchg
jl
repz
or
fcomi
add
out
pop
repz
fcmovu
lcall
fstpl
inc
aas
jns
das
inc
lods
pop
aaa
sbb
shl
push
aas
cmpsl
div
and
push
xor
out
sub
push
nop
sbb
rcll
push
adc
sub
ja
jbe
mov
mov
loopne
push
inc
rcrl
ror
cmp
out
push
js
inc
sub
pusha
ss
push
out
lahf
or
mov
inc
mov
mov
pusha
je
push
cmp
push
xchg
cwtl
lods
outsb
jno
or
sub
mov
mov
xchg
lds
insl
into
outsl
pop
xor
mov
cmp
lret
inc
aam
pop
lahf
sbb
out
imul
add
sbbl
and
fisttpl
add
mov
pop
push
sbb
les
sub
push
add
test
sbb
dec
add
push
pop
adc
add
mov
test
adc
pop
fimull
hlt
push
xlat
dec
lret
or
push
mov
das
insl
movsb
mov
ja
es
out
sub
jbe
add
inc
ret
jne
aas
inc
in
xor
aad
popa
loopne
test
bound
push
test
stc
repnz
jns
andb
popf
push
inc
aad
outsl
cmp
and
lcall
inc
lahf
js
jno
push
cld
jle
or
pop
mov
scas
jp
pop
sub
mov
adc
dec
sahf
popw
in
sbb
sub
xchg
stos
jns
nopl
fisubrl
mov
movsl
xorb
loopne
and
mov
fcoml
mov
cs
cmp
shl
lahf
insl
and
imul
aaa
or
sahf
call
arpl
in
das
repnz
cmp
pop
sbb
mov
inc
inc
in
push
cmp
out
dec
jno
xor
cli
mov
popl
out
dec
or
mov
jne
jnp
sbb
cli
ljmp
push
cmc
add
loopne
in
push
out
sti
cmp
test
shll
push
jecxz
cmpsb
outsb
ljmp
inc
inc
mov
lahf
outsl
or
rol
xchg
mov
mov
adc
fistpl
dec
cmp
or
mov
stc
in
mov
mov
fnstcw
dec
mov
insb
mov
fadd
jp
cmp
pop
sub
dec
push
xchg
out
in
fisubrl
ds
mov
mov
add
jns
mov
out
dec
cmp
shlb
inc
stos
and
fmull
mov
cmp
or
cwtl
aaa
adc
stos
insl
xchg
jae
or
in
ss
dec
shrb
mov
sub
adcb
xchg
mov
pop
insl
xchg
push
or
push
lods
addl
sub
adcb
mov
das
shl
out
inc
fimuls
repz
xor
iret
cmpsl
dec
adc
data16
xchg
ret
hlt
or
mov
loope
push
lods
dec
add
add
daa
outsb
sahf
sbb
scas
jle
int
mov
xchg
loope
fisttps
sub
mov
std
push
jno
stos
fwait
rorl
test
sbb
inc
arpl
inc
mov
cli
pop
mov
sbb
adc
push
sub
and
mov
movl
push
dec
in
and
pop
outsl
inc
dec
in
jo
fs
repnz
gs
stc
sahf
mov
lds
xor
xor
out
inc
fmul
and
dec
mov
ret
cmp
cltd
or
inc
pop
cmp
mov
sub
adcb
aaa
adc
sub
sti
and
or
cli
xorl
add
sbb
pop
mov
insl
pop
mov
mov
or
or
sbb
xor
sub
mov
inc
adc
mov
pushf
mov
in
dec
notb
sub
mov
jg
push
gs
out
mov
and
aaa
mov
mov
adc
fstp
jns
adc
es
add
adc
push
int3
clc
push
idivl
loope
mov
jb
cwtl
mov
daa
or
ljmp
sti
push
pop
bound
mov
mov
inc
loop
jnp
ss
sbb
icebp
mov
jbe
xor
and
pop
push
pop
lods
adc
add
xchg
into
cmp
into
and
xor
out
jbe
mov
pop
cmp
jns
jnp
stos
and
movsl
psllw
push
repnz
mov
nop
push
pusha
mov
mov
stos
sarl
push
hlt
push
popa
ret
adc
popf
pop
push
sbb
pop
mov
cmpsl
ljmp
mov
cmpsl
cmp
pop
jmp
arpl
mov
xchg
cltd
push
cmp
pop
jns
push
xor
or
repz
and
mov
loope
cs
cwtl
fistpll
ret
and
sub
rclb
shlb
lods
lcall
pop
int3
and
push
mov
fadds
push
push
inc
fld
fimuls
mov
sub
sbb
inc
stos
push
hlt
lret
rcll
pop
push
xor
popf
xor
out
mov
fsubrl
aad
shll
bound
jmp
out
incl
push
pusha
or
test
iret
add
push
pusha
mov
pop
pop
pop
mov
fisubrl
int
cmp
ss
shll
arpl
sbb
pop
sub
add
pusha
sbb
jmp
in
xor
push
jg
sub
imul
push
sti
repnz
jo
into
adc
mov
movsb
or
rcr
mov
and
add
mov
mov
push
nop
mov
cmp
jo
das
and
push
lcall
xchg
cmp
push
cmp
je
or
fsubrl
lods
cmpsb
cmp
imulb
test
notl
mov
xchg
mov
sbb
test
cmp
mov
repz
ljmp
idivl
nop
in
mov
popa
adc
dec
mov
call
or
and
mov
or
xlat
push
sbb
cmc
mov
pop
sbb
jl
dec
xor
xor
sbb
mov
divb
ss
lret
pop
pop
lcall
arpl
or
jecxz
pop
and
and
adc
outsl
jp
or
jge
push
add
pop
jp
je
loopne
icebp
cs
jbe
dec
or
adc
data16
adc
cmp
clc
xchg
ds
push
mov
loopne
stc
scas
idivb
cmpsb
pop
push
push
jle
scas
out
jno
jnp
outsb
cli
lods
stos
mov
xchg
push
fbstp
cmp
mov
push
hlt
das
lcall
stos
test
xchg
xor
jge,pt
imul
arpl
xchg
divl
fiaddl
adcl
sub
es
mov
dec
jbe
xor
mov
cmp
fwait
mov
mov
jmp
add
out
lret
sub
jae
cld
repz
icebp
mov
xor
lds
scas
cmp
pop
fisttpll
outsl
cltd
imul
inc
and
fadd
loopne
and
jge
ficompl
jle
movsb
mov
jge
or
daa
jecxz
xchg
mov
jg
xor
xor
jmp
xlat
adc
inc
in
lock
scas
and
cmp
iret
pop
popa
add
add
mov
mov
mov
inc
fildll
cmpsl
jbe
sub
push
adc
in
int
add
jno
add
xchg
lods
shl
outsb
or
dec
jns
xor
and
cmc
push
inc
mov
dec
fistl
dec
cmpl
push
les
clc
xor
and
mov
ror
push
out
push
cmp
decb
subl
insb
hlt
lds
scas
in
mov
mov
push
push
clc
iret
mov
push
in
mov
inc
mov
lock
dec
jle
push
dec
repnz
cld
into
out
jle
cmc
mov
cwtl
pop
or
popf
mov
jnp
call
inc
mov
pusha
sbb
ret
jns
push
jb
lods
xchg
fwait
sbb
sub
ja
mov
iret
mov
jbe
into
and
jle
dec
mull
jge
stos
jmp
ja
mov
fidivl
rorb
dec
sub
test
jns
clc
in
pop
mov
pop
xlat
push
mov
mov
ja
jg
lock
enter
xchg
mov
pushf
push
mov
mov
cmp
ljmp
cmp
adcl
cli
ror
lock
jge
fdivs
out
insb
or
fiadds
mov
add
in
or
aad
add
mov
loop
adc
test
lock
and
push
push
jge
jno
adc
mov
xchg
lods
push
testl
lahf
stc
add
mov
mov
xchg
test
lods
push
test
sub
lea
outsl
jmp
fdivs
jle
movsb
mov
pop
push
pop
push
jbe
mov
jbe
pusha
jge
int3
das
fucomi
sub
les
mov
ficomps
outsb
dec
cmpsl
bound
iret
test
mov
push
push
aaa
iret
dec
lret
adc
test
jbe
int
aaa
mov
in
insl
xchg
pop
clc
push
inc
xor
enter
sti
shll
sbb
jge
sub
and
mov
xor
sbb
aaa
mov
push
jp
push
sbb
adc
lods
sbb
pusha
jns
outsb
cmp
mov
shrb
dec
pop
fistps
xor
mov
out
mov
call
subl
mov
lods
or
xchg
notl
inc
andb
subl
and
subb
arpl
fsubrs
clc
shrl
cmp
sahf
sbb
movsb
jne
jg
cmp
push
jns
je
push
popf
test
push
aas
iret
xor
xlat
sbb
out
jmp
push
aam
aam
inc
mov
jb
push
daa
jl
push
pop
lret
lret
adc
js
adc
add
test
inc
inc
dec
push
dec
jo
call
in
inc
int
cmp
and
notb
out
cmp
sbb
std
test
adc
or
or
jnp
aas
into
jmp
shlb
mov
roll
or
iret
rcll
inc
iret
add
stc
mov
mov
push
jno
xorl
xchg
xor
mov
cli
and
sbb
scas
mov
repz
jo
push
scas
xchg
lods
xchg
pushf
cmp
outsl
icebp
stos
add
es
and
pop
ficoml
jne
mov
mov
cmp
test
cmpb
dec
movsb
cmp
cli
dec
fdivr
jo
and
push
divb
data16
insl
out
rorl
xchg
scas
mov
shrl
jp
lcall
test
push
sbb
lret
aas
pop
lods
mov
les
fdivr
xchg
imul
scas
int3
movsb
lret
mov
dec
add
mov
push
cltd
shl
and
les
and
sub
out
rorb
loopne
xor
aad
sub
sub
jle
mov
push
ret
xor
lods
push
jae
sub
mov
xchg
push
add
and
inc
jb
ljmp
test
pop
mov
sub
mov
dec
push
mov
add
xor
push
das
testl
pop
rcr
repz
scas
pop
pop
cmp
stos
add
mov
icebp
adc
in
push
incl
pop
and
mov
mov
int3
loopne
push
pusha
test
mov
xchg
dec
testl
scas
ss
pop
test
in
jno
cmp
mov
mov
gs
ss
shll
inc
adcl
pop
mov
aas
xchg
adc
jbe
cmc
ret
pop
test
or
iret
inc
fucomi
popa
int
cmp
ret
push
push
cld
push
mov
add
mov
inc
pop
mov
cltd
frstor
inc
les
popf
out
push
cmp
sub
outsl
mov
pop
dec
fisubrs
and
adc
xor
loop
jecxz
iret
push
bound
ficoml
mov
loop
pop
daa
pop
push
sbbl
jmp
or
xlat
stos
cwtl
add
cs
push
loopne
data16
idivb
inc
out
fnstenv
sbb
lods
outsl
lea
dec
aad
inc
scas
mov
fdivs
xlat
or
outsl
cs
push
sub
sbb
jle
and
cmpsb
sahf
sbb
in
jge
movsl
cmpsl
inc
jb
lods
xchg
mov
mov
rcll
jl
inc
inc
add
xor
xor
cmp
jb
adc
cld
and
bound
dec
enter
mov
mov
pop
leave
jnp
std
call
sub
repnz
push
out
push
je
xchg
xor
cmp
loope
sub
or
mov
pop
sub
lahf
push
push
insb
xchg
adc
and
dec
popf
dec
jp
push
or
mov
movsb
adc
add
bound
mov
pop
mov
jmp
and
jbe
sub
jbe
cs
xchg
negb
out
jb
xor
bound
loop
ljmp
je
and
mov
jbe
sub
mov
xor
mov
push
cmp
das
in
mov
je
sub
int3
cmp
sbbb
lcall
ljmp
xor
cmp
outsb
cmpsl
add
xor
mov
cmc
sbb
scas
lods
adc
mov
roll
cmp
andb
pop
iret
out
repnz
lahf
les
lods
xchg
mov
lret
ficoms
stc
scas
sub
gs
or
ret
jbe
xor
mov
je
lods
push
jns
mov
popl
push
sar
in
mov
mov
out
jg
rcll
scas
lret
sarb
inc
mov
shrb
mov
adc
push
gs
mov
popa
jg,pt
sbb
sbb
xor
lahf
jmp
pop
pop
cmp
jecxz
push
mov
orb
xor
adc
loop
xor
pushl
dec
and
and
or
jae
shl
and
and
nop
ret
sbb
inc
xchg
and
in
mov
push
rorb
cwtl
lods
lahf
outsb
or
fisubrs
lds
inc
cli
sbb
out
push
or
xchg
mov
and
dec
adc
dec
xchg
repnz
or
in
xlat
xor
push
and
cmpl
aas
jle
insl
jae
jns
xchg
mov
dec
sbb
jle
in
or
fistpl
inc
mov
xchg
adc
cmp
xor
jnp
or
push
mov
dec
cli
sub
add
sbb
ror
mov
sbb
sti
lods
push
xorb
xorl
mov
push
push
xorb
insb
outsl
shr
xchg
pop
mov
inc
gs
pop
cltd
fldcw
xchg
pop
idiv
arpl
jbe
adc
push
mov
and
std
xchg
ds
dec
cmp
out
mov
jecxz
pop
clc
in
jo
xor
inc
sbb
and
dec
cmp
cmpsb
call
xchg
movsb
push
into
sub
nop
adcb
jmp
cwtl
movsb
shrb
out
aas
sbb
mov
or
loopne
stos
or
lcall
les
cmpsb
in
test
fwait
dec
stc
xlat
xor
scas
mov
outsb
inc
pop
jb
ret
cmp
lods
sbb
xlat
int
add
add
xchg
ficoml
in
pop
stc
adcl
sbb
xor
dec
inc
lods
daa
inc
call
xlat
xlat
aaa
push
cmp
and
rclb
fs
cli
xor
inc
lcall
mov
xor
and
sti
je
push
jnp
mov
fsub
sub
popa
jp
jae
cmovne
lock
pop
xor
jne
cmpsb
icebp
test
sbb
dec
xchg
shrb
push
push
mov
mov
out
test
aam
out
push
pop
mov
inc
divb
push
fsubrs
mov
out
push
subl
frstor
popf
cmp
test
stos
subb
mov
hlt
add
inc
insl
inc
cmp
pop
sub
and
ljmp
pusha
loop
ret
xor
cmp
fistl
negb
xor
mov
idivl
dec
outsl
pop
lahf
jp,pt
scas
pop
sbb
xchg
mov
cld
leave
xor
aad
pop
or
mov
xlat
push
pop
roll
into
out
xor
mov
jns
outsl
out
gs
jbe
int3
add
cmp
push
mov
std
stos
xchg
test
rcrb
cmpsl
cmp
xchg
jmp
add
mov
cmpsl
cwtl
in
sub
mov
insl
movsb
fsincos
jle
add
mov
das
xchg
pushf
mov
rcl
pop
sub
jl
out
fcmovb
sahf
xlat
xchg
sbb
mov
jno
push
xchg
xchg
stos
mov
inc
inc
fwait
outsb
enter
pop
jge
push
je
js
push
fsub
movsb
mov
dec
je
into
dec
daa
mov
stos
les
mov
push
mov
push
sub
cmp
cmp
daa
push
scas
es
mov
cmc
pusha
mov
repz
inc
push
push
mov
jl
cli
adc
je,pt
aam
popf
add
repz
dec
cmpsb
andl
inc
jno
sbb
xchg
and
inc
fisubl
and
rcrb
ja
test
inc
imul
push
cmp
loop
jnp
cli
dec
into
mov
pinsrw
lods
adc
int
mov
arpl
out
std
mov
stc
ljmp
sub
mov
in
enter
pop
push
jl
sbb
mov
sub
outsb
push
daa
in
aas
xchg
loopne
xchg
push
test
push
lods
jns
lret
xor
cli
xchg
cmc
sbb
rorl
lods
mov
inc
mov
pop
fdivrs
dec
leave
daa
neg
int3
fdivp
movsb
xchg
mov
loop
rorb
fisttpl
inc
lret
sbb
xor
jns
movsb
jns
les
dec
pop
loop
cmp
icebp
xchg
mov
in
jle
inc
sub
aaa
add
and
out
mov
outsb
adc
dec
adc
lret
inc
xchg
lahf
int3
enter
mov
sbb
shll
jmp
jmp
xorl
mov
mov
sti
jns
jo
pop
push
dec
push
rorb
push
daa
lods
les
sub
lret
adc
arpl
dec
push
loop
mov
es
or
cli
out
dec
cmpb
outsl
das
pushf
in
dec
test
nop
hlt
repnz
enter
cld
rcrb
ds
hlt
add
jne
or
pushf
xor
xor
test
in
sbb
cmpsl
mov
xchg
xchg
xchg
sbb
repnz
jp
pop
call
loop
xchg
pop
xchg
push
nop
mov
inc
dec
xchg
test
push
fisubrs
divl
adcb
out
dec
cmpsl
mov
sbb
pop
jl
into
and
shll
push
decb
jp
push
pop
addr16
arpl
ss
dec
fwait
cwtl
lcall
arpl
cwtl
repz
xor
or
pop
outsb
jle
fs
mov
notl
mov
mov
out
imul
mov
cmp
jns
add
js
push
xlat
push
arpl
mov
cmp
in
add
xchg
roll
in
ja
std
xor
xchg
mov
push
test
std
jge
dec
gs
and
jnp
inc
loope
pop
jge
fdivrs
xchg
gs
push
in
shr
icebp
cmpsl
stc
and
push
xchg
in
loope
sub
pop
mov
ss
das
jb
jno
inc
mov
ss
orl
dec
adc
cltd
adc
std
pop
cwtl
pushf
mov
sbb
lods
pusha
nop
adc
aas
xor
shlb
sbb
mov
xchg
fdivrl
shl
push
mov
mov
inc
cs
push
pop
orl
sub
popf
xchg
addr16
mov
dec
xchg
loopne
pop
mov
jo
bound
or
jp
scas
mov
or
xchg
fst
or
inc
insl
jne
pop
cmp
scas
int
and
popf
or
xor
iret
or
sub
inc
lods
and
push
sbb
addr16
fscale
arpl
add
scas
int3
loop
add
test
pop
fstpl
xchg
pop
sahf
in
add
les
mov
mov
mov
mov
cwtl
cmp
outsb
insl
shll
pop
leave
call
pop
imul
mov
ror
xchg
data16
and
out
mov
dec
shr
sub
jg
mov
push
inc
mov
es
xchg
jg
inc
push
or
mov
fsubs
mov
pop
sbb
add
loop
cmp
inc
xchg
push
mov
add
sahf
mov
hlt
lahf
add
out
jle
or
ret
xorb
mov
jb
lods
inc
xchg
xchg
mov
out
jns
test
ret
cwtl
divb
jbe
icebp
cmp
mov
sub
and
shrl
sub
inc
push
xchg
lea
jmp
xor
push
mov
icebp
cmp
cmp
and
pushf
mov
jno
fstps
cmpsb
and
sub
add
mov
scas
add
scas
adc
cmp
sbb
and
mov
repnz
lret
cmp
sbb
xchg
dec
push
mov
pop
pop
daa
insl
xor
into
sub
pop
xchg
jg
xor
loopne
push
jecxz
mov
lods
xchg
push
xchg
mov
add
cmpsb
jbe
sbb
icebp
sub
fs
mov
outsb
movsl
shlb
shrl
mov
test
pop
jo
or
stos
push
xor
pop
jbe
stc
testl
xchg
mov
fcom
sbb
xor
add
add
in
inc
aaa
xchg
fsubs
cmpsl
rorb
sub
add
and
fldl
lret
mov
jecxz
les
sub
push
inc
scas
faddp
pushf
cmp
and
push
aam
xchg
jmp
fdecstp
and
push
push
scas
xchg
jg
in
push
stos
fdivl
mov
subl
dec
sti
add
inc
mov
and
ja
jmp
data16
push
push
mov
leave
push
lret
data16
popa
insb
or
jp
inc
xchg
aaa
cmp
mov
pop
or
fisubl
lret
pushf
dec
push
insl
mov
mov
fwait
je
jo
flds
add
mov
pop
out
cmpsb
jecxz
mov
and
and
movsl
cmp
and
dec
xchg
movl
lahf
mov
data16
push
xchg
les
mov
inc
jge
sbb
add
cmpsl
arpl
lahf
rcrl
jb
mov
dec
cwtl
cmp
pop
lds
adc
and
ljmp
ret
or
stos
loopne
cmp
aaa
hlt
mov
cmc
ret
lock
gs
or
loop
push
and
out
sub
mov
push
jp
je
jns
cld
push
adc
push
lock
mov
into
stos
sub
clc
xlat
inc
fildll
stos
add
mov
add
insb
adc
enter
mov
movntq
inc
scas
xchg
test
adc
mov
mov
into
add
arpl
adc
test
pop
pop
outsl
or
add
ja
arpl
pop
loope
loopne
test
push
adcb
add
gs
add
test
test
rcll
cmpsb
dec
pop
in
call
inc
stos
enter
xor
enter
test
xchg
test
inc
mov
cmc
stos
or
push
lock
jnp
popa
inc
and
cmp
sbb
inc
outsl
jl
in
sub
jnp
pop
dec
pusha
or
lcall
pusha
mov
jb
mov
add
nop
mov
mov
stos
and
dec
ret
pop
call
mov
arpl
or
adcb
xlat
test
dec
fptan
shrb
xchg
rcrb
out
pop
in
andb
mov
mov
mov
add
or
mov
mov
aam
jg
sub
inc
lods
imul
jmp
push
sbbl
fwait
or
loopne
cmp
mov
notb
enter
mov
movsb
sub
mov
push
push
lret
insb
inc
fwait
xor
cmpsb
or
xor
dec
mov
int3
xor
int3
and
arpl
mov
push
bndldx
jmp
mov
mov
jno
push
in
std
jb
sti
mov
lock
dec
fisttps
mov
repnz
cmp
in
test
outsl
push
hlt
pushf
movsl
fdivrs
es
cmp
pushf
inc
jo
gs
into
jmp
mov
jo
ret
pop
mov
mov
fbstp
clc
add
divb
xchg
popa
jp
jb
lods
and
test
dec
xor
add
ret
in
loop
and
ljmp
movsb
jno
sub
mov
fimuls
cltd
lods
adc
push
add
sahf
pop
xchg
insb
ret
sub
jne
shlb
decb
inc
mov
add
nop
cs
pushf
popa
bound
adc
push
adc
dec
stos
adc
loop
fs
add
leave
in
mov
pop
aas
fisubrs
std
das
jno
enter
push
pop
outsb
xchg
scas
xor
mov
sbb
jmp
shl
or
lret
mov
adc
fidivs
mov
push
mov
jle
lret
mov
push
out
or
dec
or
mov
inc
data16
pop
in
es
or
dec
dec
sub
inc
shrb
lcall
xchg
jp,pt
in
movsb
sbbb
pop
cltd
inc
mov
cli
pop
jecxz
imul
jns
mov
add
adc
mov
mov
mov
cli
dec
cmc
call
add
stc
in
and
fidivl
jbe
sub
sub
stos
js
push
incl
cmp
mov
loop
adc
shrl
pop
cmp
mov
pop
mov
push
fisubrs
sbb
in
ljmp
fistl
flds
out
dec
out
sbb
loop
push
or
ja
das
fldl
jae
or
cmp
dec
jmp
mov
test
add
in
dec
iret
test
cmc
cs
or
inc
imul
scas
push
jnp
mov
ficoms
sahf
add
fistl
xchg
mov
mov
sbb
leave
lods
mov
jne
pop
sbb
add
bnd
sub
mov
jns
nop
repnz
mov
and
push
xlat
mov
xor
xlat
test
in
mov
adc
lret
sub
cli
inc
call
daa
add
jno
clc
xlat
fcmove
xor
in
xchg
rolb
sbb
add
xchg
ja
cmpsl
pop
sti
jne
in
dec
orb
jp
adc
pop
insb
pop
push
sti
jns
jp
int3
dec
cmp
pop
mov
pop
arpl
or
insb
mov
sbb
sub
call
jnp
lock
lods
sbb
sub
outsl
xchg
cmpsl
push
adc
cmpsl
xor
xor
sahf
xchg
mov
test
add
mov
mov
xor
push
dec
iret
andl
nop
fprem1
mov
inc
popa
scas
sbb
push
data16
push
subb
test
js
out
addr16
xchg
ds
pop
test
addb
dec
ret
mov
xchg
cmpsl
leave
sahf
jb
push
xorb
int
mov
aas
outsb
jl
xor
sbb
mov
or
mov
jno
pop
adc
out
mov
or
inc
jmp
cmp
repz
mov
inc
hlt
ret
sti
pop
pop
jg
inc
sub
ret
daa
sarb
stc
mov
push
lcall
int
or
jge
mov
test
fmull
lods
and
dec
mov
add
jno
fs
shll
stc
push
cld
mov
sbb
ret
lea
push
popa
mov
jg
pushf
dec
imul
ds
sbb
add
push
xchg
mov
rol
addr16
inc
js
icebp
roll
xchg
mov
mov
outsw
je
push
js
js
push
sub
or
mov
jmp
lahf
xchg
mov
sbb
mov
push
je
sub
cmova
inc
fwait
out
out
mov
dec
jmp
insl
shrb
mov
stos
mov
ret
add
addr16
xor
out
cmp
inc
push
fistps
repnz
add
dec
cwtl
pop
cwtl
orl
dec
mov
out
adcl
outsb
push
push
xorl
pop
sarb
fsubs
sbb
pop
xor
xor
or
sahf
mov
imul
insb
mov
mov
push
xchg
mov
xorl
sub
jge
lret
dec
lret
loop
lea
mov
cs
out
les
push
or
adc
mov
cwtl
push
jle
cmp
add
jbe
adc
add
jbe
xchg
shl
push
lods
int
pop
pop
nop
push
xor
xchg
out
addl
dec
xchg
mov
jo
call
daa
stc
inc
add
je
mov
sub
mov
fstpl
pop
scas
ret
shlb
mov
js
out
and
dec
and
les
mov
pop
cmp
jne
xchg
adc
bound
clc
dec
push
and
jno
dec
in
and
rclb
dec
adc
out
in
testb
mov
push
pop
push
mov
jl
fidivl
cltd
add
mov
adc
push
movsb
popa
gs
push
xor
std
outsl
and
xor
not
fcomip
cli
stos
xchg
and
call
cs
popfw
out
push
sbb
inc
lds
adc
cmp
rorl
test
adc
popa
movsl
dec
lahf
sahf
sub
xchg
jecxz
fs
sbb
lock
movsb
sti
out
push
aad
fs
adc
into
icebp
cmpsb
jne
mov
imul
int3
sbb
dec
repnz
orl
mov
in
in
pop
ds
mov
mov
sti
ret
addr16
sbb
ret
add
lds
push
sti
popf
addb
lods
cmp
test
cld
mov
xchg
stos
call
iret
sbb
dec
inc
pop
inc
adc
js
scas
pop
cli
or
and
ss
xchg
mov
or
or
push
out
dec
mov
int
add
leave
push
out
push
and
int3
xchg
dec
add
xor
hlt
mov
lahf
movsb
in
push
add
jns
sub
lahf
sbb
pop
jmp
pop
mov
jnp
out
loope
or
pop
mov
cmp
test
xor
xchg
pusha
xor
mov
jmp
stos
cmp
xchg
jp
pop
inc
add
xchg
and
sbb
inc
fadds
sub
imul
cwtl
lret
jp
or
xchg
xchg
decl
or
xchg
mov
mov
mov
push
ja
iret
arpl
mov
xchg
fwait
ljmp
out
or
mov
test
xor
out
ds
das
fiadds
jb
jg
aam
dec
sbb
mov
lea
fwait
out
ds
shll
jbe
jb
outsb
inc
and
pop
push
lods
int3
pop
mov
lods
rcrb
jb
ficoms
push
fimull
xor
dec
daa
xchg
imul
popf
lahf
xchg
arpl
aam
mov
mov
xor
sub
inc
cwtl
rcll
adcl
mov
mov
jg
mov
aam
xor
adc
lahf
jb
or
jle
call
mov
xchg
clc
loopne
push
cmpl
dec
adc
std
adc
mov
sbb
jne
jnp
sbb
jns
arpl
pop
sub
sbb
sub
scas
jne
lea
push
jns
pop
sbb
in
cmp
and
rol
or
sbb
jge
jmp
add
bound
jbe
dec
loop
lods
xchg
cmp
les
es
out
push
shrb
jb
push
sub
test
fsubr
jecxz
mov
mov
bound
mov
sbb
sbb
jecxz
mov
xchg
pop
rolb
bswap
dec
push
cmpsb
enter
ret
aas
jne
loop
jbe
inc
movsb
lock
cmpb
pop
scas
xor
icebp
xchg
adc
jne
jl
rcll
dec
push
roll
je
adc
cmp
mov
lcall
out
stos
mov
es
pop
stc
into
out
sarl
rorl
pop
xor
mov
je
and
int3
push
push
pop
gs
jge
mov
sub
pop
fcompl
in
gs
cwtl
pushf
es
add
mov
mov
mov
inc
and
jmp
rcrb
cwtl
add
dec
jnp
fidivrl
mov
push
mov
mov
pop
cwtl
and
ja
sti
inc
push
mov
icebp
add
icebp
cltd
insl
in
popf
cmp
xchg
pop
mov
dec
lea
movsb
daa
fucompp
test
adcb
pop
pop
sub
cmpsl
pop
mov
push
mov
insb
scas
sbb
aam
bnd
lcall
insl
js
jae
add
push
inc
stos
pop
mov
and
xlat
jno
cmc
inc
jb
cmp
dec
xchg
imul
cmp
push
pop
inc
mov
sub
push
sub
dec
call
insl
jecxz
out
imul
pop
rorl
mov
pcmpeqw
es
in
mov
jge
mov
pop
mov
lret
push
call
xor
inc
je
xchg
leave
stos
inc
stos
sbb
jle
stc
mov
test
or
js
hlt
sub
fs
and
pushf
xlat
jecxz
mov
ror
std
xor
fsubrl
fstpl
imull
pop
lods
je
cmpb
dec
lcall
ret
push
push
xor
aad
mov
inc
mov
mov
push
je
xor
pop
jp
dec
shr
xchg
stos
xchg
push
mov
jbe
xor
jp
pop
testl
call
mov
imul
imul
and
adc
addb
sti
pop
icebp
mov
int
dec
aas
ja
dec
xchg
jbe
scas
adc
nop
cmc
rcrb
dec
push
dec
or
mov
xor
sti
cmp
call
jo
push
call
loop
push
ficoms
lret
jo
mov
inc
fisubrl
fmuls
cmpsl
shl
mov
das
push
imul
pushf
lea
or
cmp
dec
or
dec
xlat
fdivrs
push
jle
movsb
sub
jns
cwtl
movsl
and
orl
mov
jae
loopne
test
cmp
pop
lcall
loop
push
shlb
pop
sub
and
mov
or
push
aam
mov
clc
ret
mov
or
daa
mov
jnp
sbb
adc
cld
sbb
and
enter
dec
fwait
repnz
jno
cmp
int3
xchg
mov
xchg
out
icebp
lahf
arpl
pop
sub
inc
hlt
lds
inc
or
into
dec
cwtl
loopne
sbb
rcrl
mov
push
jmp
orb
or
mov
pop
in
add
leave
lock
cmpsl
sub
das
add
cltd
pop
and
test
insl
dec
xlat
inc
nop
xchg
lahf
fistpl
or
sbb
lcall
mov
mov
push
mov
add
xchg
lods
mov
aad
rcrb
xor
add
cmc
xchg
pop
jle
gs
movsl
ja,pt
ljmp
mov
popf
mov
xor
cmpsl
mov
mov
jp
nop
push
xchg
int
mov
rolb
push
push
fisubrs
les
scas
mov
push
inc
aaa
xchg
test
lods
sbb
pop
cmp
xchg
cmpsb
jns
or
dec
stos
adc
push
dec
in
cwtl
cmp
insl
fldenv
mov
mov
popa
pop
movsb
add
push
movsl
mov
insb
les
inc
mov
jb
pushf
jo
mov
push
push
fistpl
vpavgw
dec
jns
lahf
rolb
arpl
test
sbbl
add
dec
pop
sbb
into
push
inc
test
mov
pop
xor
xor
cmp
mov
jg
movsb
insb
inc
ja
mov
loope
push
mov
movsb
out
dec
sbb
adc
push
add
sbb
adc
popf
int
push
aad
push
js
push
inc
decl
cmp
jbe
dec
push
mov
mov
and
push
scas
aaa
or
fisttpll
mov
in
or
fcoms
inc
stos
cmp
mov
pop
cmp
sbb
mov
sub
inc
out
out
or
jecxz
mov
lea
pop
add
fsubs
out
pop
lea
scas
imul
rcr
adcb
hlt
lods
int
dec
xchg
shlb
fstpt
mov
xor
xlat
mov
stc
sbb
push
adc
fisubs
mov
ret
ret
bound
and
insl
push
pop
dec
lods
xor
and
xchg
mov
push
mov
push
sub
aam
aad
dec
cmp
dec
sub
scas
repnz
push
mov
pop
mov
fmul
xor
mov
inc
mov
adc
shlb
ds
adc
in
js
mov
dec
jmp
ds
sub
sub
adc
lahf
ljmp
dec
jo
fwait
xor
lret
notl
daa
mov
das
lea
or
test
fdivrp
xchg
mov
pusha
lods
add
repnz
jno
mov
xchg
cmp
push
loop
push
xor
leave
and
adc
sbb
sbb
fsubrs
dec
std
adc
sahf
inc
push
push
sub
mov
ljmp
inc
ret
inc
mov
pop
int
sub
jns
gs
sub
mov
xchg
mov
sti
sbb
repnz
add
mov
stos
pop
pop
aas
or
dec
and
pop
in
push
scas
test
or
push
into
scas
push
dec
push
out
enter
inc
dec
movsl
inc
rclb
enter
inc
cld
inc
stos
adc
jg
cmp
stos
lods
lcall
in
push
mov
xlat
sar
out
das
jne
loopne
frstor
jne
mov
push
int
cmpb
jo
fistps
or
cmpsb
outsb
mov
std
fidivs
jmp
fcoms
movsb
xchg
jne
xchg
sbb
fdivs
clc
arpl
sbb
into
pop
or
pop
push
loope
sti
lock
xchg
shl
jae
test
inc
frstor
pop
cmp
xchg
fs
scas
mov
mov
and
sub
js
mov
mov
xor
outsl
loopne
jmp
push
xchg
aam
in
je
mov
lcall
push
mov
loopne
icebp
loope
cmc
cmp
in
dec
popa
rcrb
fcmovnu
pop
jne
rclb
test
pop
repnz
mov
dec
cmp
das
add
cmp
mov
and
mov
mov
add
xchg
pushl
cmp
mov
jb
ja
ja
or
push
arpl
sub
inc
negl
ljmp
inc
inc
push
out
mov
and
pushf
out
cltd
adc
inc
outsb
sbb
shll
pop
sbb
xor
cmp
fnstcw
xor
fsubr
and
fimull
jo
sub
mov
add
dec
fmuls
xchg
pop
xor
scas
or
test
hlt
repnz
pop
jnp
mov
js
pop
xchg
ret
adc
loopne
sar
clc
call
loopne
in
push
je
gs
cmp
pop
das
in
dec
mov
ljmp
fs
shlb
sbb
lret
jnp
in
clc
loope
das
adc
adc
dec
push
mov
dec
xchg
repz
mov
ljmp
insl
push
pusha
lahf
movlps
test
int
or
pop
cltd
or
addl
xlat
push
push
cli
test
xor
js
sub
mov
lret
pop
push
mov
adc
sub
popa
mov
sub
not
inc
bound
and
mov
lret
bound
pop
pop
popf
inc
sub
push
mov
incb
mov
loope
test
fadds
es
push
test
cmpsl
int3
pop
jecxz
loop
jo
dec
push
push
mov
jae
repz
or
pop
fnstenv
movsl
inc
bnd
inc
inc
cmp
ljmp
inc
mov
scas
aad
inc
je
and
xchg
add
sub
fcmovb
inc
dec
cmc
in
xchg
push
out
push
pusha
add
popa
mov
mov
fiadds
into
sbb
cmp
add
sahf
es
inc
not
jmp
mov
xor
mov
jle
sub
dec
cmp
jecxz
ret
ss
int
cmp
xchg
adc
iret
jbe
xchg
jmp
push
fs
je
dec
fdivr
cmp
insl
mov
imul
popa
out
lock
xchg
iret
shlb
and
adc
mov
push
icebp
add
or
icebp
mov
xor
ja
lcall
addr16
push
or
mov
in
push
or
pop
pop
pop
test
mov
in
divb
jno
sub
pop
inc
inc
mov
push
movsl
mov
outsl
cmp
xchg
imul
push
xlat
movsb
xchg
jnp
icebp
inc
and
push
push
loope
add
notl
mov
cld
repnz
repnz
and
clc
mov
cs
xchg
dec
push
xchg
mov
push
xor
inc
mov
sbb
dec
cmp
and
and
xchg
or
adc
add
jge
xchg
pop
mov
lds
jb
sub
stc
je
andnps
out
cs
fcmovu
test
fucomi
xchg
out
dec
xchg
call
jno
inc
insl
jecxz
add
cwtl
cli
gs
mov
dec
add
lcall
std
pop
subb
in
mov
adc
mov
dec
xor
in
inc
sti
outsb
jecxz
mov
outsl
movsb
ret
ds
jbe
ljmp
adc
and
mov
incl
push
xchg
iret
mov
jae
cmp
ss
cmp
mov
mov
add
shrb
imull
xchg
rorl
test
int
inc
jb
les
xor
mulb
ss
inc
imul
js
add
mov
lahf
icebp
xor
js
cli
push
and
int
and
or
and
sub
xchg
scas
sbb
add
cltd
push
cmc
push
sarb
mov
outsl
lret
pop
dec
pop
adc
pop
jne
jp
jmp
push
iret
call
sti
js
adc
addl
daa
or
add
fwait
jl
test
dec
xor
pusha
out
and
data16
fistpll
jmp
cld
shrb
cmc
inc
mov
xor
outsb
fcomps
xlat
nop
or
pop
xor
rcll
jo
xor
in
inc
xchg
lcall
inc
rorl
dec
jae
inc
jb
sbb
lret
sbb
xchg
sbb
imul
rol
in
mov
insb
inc
add
push
es
or
pop
stos
out
out
cmc
cmpsb
test
cmp
inc
dec
sbb
mul
jno
fwait
push
cmp
out
andl
xlat
lcall
fwait
mov
test
mov
add
sub
xchg
stc
pop
adc
in
out
outsl
mov
and
in
jecxz
rol
push
popf
xlat
je
aaa
cmp
aad
inc
pop
enter
movsl
xor
pop
popa
sbb
inc
sbb
inc
inc
adc
mov
scas
shlb
ror
cltd
mov
sbb
fsubs
pop
enter
repz
mov
mov
mov
scas
add
dec
stc
mov
popa
cli
stos
jno
sub
pop
inc
mov
ds
rcrb
jb
loope
xchg
jne
mov
lods
jnp
jb
js
popa
mov
leave
cmp
jge
scas
sub
mov
jecxz
xlat
or
ret
jge
inc
pop
popf
adc
out
jge
pop
divb
dec
imul
jp
loopne
aad
mov
fdiv
cmp
xchg
dec
ja
fsubl
mov
push
fisubl
popa
add
test
stc
or
mov
push
mov
sbb
inc
scas
sub
xchg
jo
jge
lods
mov
cld
jne
and
pushfw
gs
cmc
or
enter
add
jne
imul
iret
xlat
shll
sub
insb
shrl
std
dec
add
dec
mov
mov
push
pushf
add
js
sub
std
fwait
xor
or
inc
mov
jne
test
insb
pop
shrl
rclb
fs
fs
push
ficoml
push
mov
jnp
mov
jne
into
mov
mov
sub
es
or
cmp
cmp
dec
icebp
dec
push
push
jl
jle
cmpsb
cmpsl
pusha
push
mov
rorl
std
imul
add
mov
jo
je
aad
addr16
lods
fisttpll
shlb
pop
xchg
cmp
xor
sbb
mov
outsl
arpl
sbb
or
js
out
gs
imul
dec
lea
ss
or
or
push
pop
enter
mov
pop
adc
jnp
inc
inc
mov
aam
cmp
js
push
sbb
sub
cmp
ret
push
insb
jl
mov
and
xchg
push
pusha
and
je
ss
fwait
ret
jg
bound
jbe
test
adc
mov
pop
add
inc
mov
fdivl
aad
xor
adc
sbbb
jmp
stc
mov
or
sbb
and
cmc
bound
sti
pop
inc
and
shrb
or
aad
test
sub
daa
cmp
mov
test
xchg
or
fsubrl
dec
xchg
xchg
mov
push
push
cld
scas
mov
pushf
jne
jg
xchg
fdivl
dec
lcall
xchg
leave
test
imul
mov
mov
mov
shll
cmp
xchg
sti
sbb
je
out
push
and
xor
jns,pn
stos
popa
add
xor
push
mov
add
stos
fldcw
pop
push
sbb
scas
lock
xor
and
inc
xchg
out
test
jno
pop
sbb
pop
sbb
sbb
stos
push
push
mov
mov
pusha
mov
pushf
xchg
lret
adc
lods
xor
cs
push
dec
jmp
mov
pop
dec
jge
mov
jo
xchg
jb
cmp
mov
pushf
fisubl
aad
jmp
cld
inc
inc
xor
les
adc
cmp
cltd
pop
aaa
pop
aad
add
test
and
in
rcll
lret
aaa
or
loop
jl
push
push
mov
mov
jns
dec
or
loop
dec
sbb
jae
sarl
xchg
mov
jp
out
and
scas
jmp
cmp
shlb
adc
mov
ficompl
push
mov
push
mov
sbb
push
or
lcall
mov
sar
mov
lock
or
in
jbe
pop
inc
add
cmpl
cld
loope
mov
mov
inc
sarl
push
adc
outsb
mov
clc
add
lea
aaa
loope
jg
je
inc
es
mov
jg
enter
adc
or
sub
dec
push
pop
and
pop
loopne
out
fwait
int3
clc
stos
add
sub
and
icebp
pop
rorb
lcall
outsb
fs
dec
or
jno
in
xor
add
es
sub
push
divl
xchg
lea
mov
in
cmp
pop
jmp
push
movsb
repz
rcll
out
stos
inc
xor
int
in
jns
int3
fimuls
xchg
cld
ret
pop
xchg
push
testl
or
mulb
ss
lcall
dec
cmp
mov
pop
inc
scas
cmp
fs
inc
or
sbb
in
cs
in
in
mov
lock
sahf
add
pop
fwait
jo
mov
sar
pop
mov
aas
or
xchg
mov
add
je
mov
fsubrs
sub
jle
sbb
fsubs
pushf
jmp
jb
ret
and
push
xlat
mov
movsl
fwait
jo
jb
or
mov
movsl
nop
or
cmp
add
fimuls
aam
mov
push
flds
pop
add
mov
imul
and
lods
or
or
in
pusha
pop
shrb
in
fmull
xchg
or
pop
push
fnstcw
adc
in
xor
outsl
stc
mov
leave
dec
lds
adc
clc
int
cmp
xor
xor
popl
sbb
fadds
and
fcompl
or
push
cli
pop
jb
shrl
sbb
aad
mov
adc
add
pop
jo
pop
xor
mov
xor
rcrl
mov
les
mov
lds
loope
push
cmpsl
aas
das
out
and
mov
mov
out
dec
repnz
subb
push
stc
mov
fdivs
aad
ja
xchg
lret
cmpb
mov
adc
call
stos
int3
jmp
iret
mov
mov
lret
aaa
inc
stos
add
data16
fdivrs
lahf
dec
lods
xchg
jae
int
adc
pushw
push
sub
mov
xor
out
sbb
imul
mov
add
fs
xor
jl
in
scas
mov
push
nop
or
mov
sbb
dec
pop
mov
mov
sub
clc
add
sbbb
adc
out
ret
sti
jo
xlat
into
sahf
loop
dec
xor
add
test
loop
add
in
jmp
sbb
jle
adc
es
pop
jbe
stc
jae
in
sub
jl
aas
xor
mov
xchg
loope
leave
pop
clc
test
frstor
jl
aas
jg
inc
sub
xor
mov
repnz
dec
movsl
call
mov
push
lods
out
adc
mov
sub
cmp
movsb
push
mov
dec
or
loopne
lea
mov
out
cvttps2pi
and
imul
pop
sbb
je
rolb
mov
adc
scas
jle
adc
xchg
cmc
xor
add
cmc
popf
pushf
cmpl
stos
out
or
jno
mov
dec
in
stc
adcl
or
add
pop
dec
dec
ret
jecxz
dec
loopne
pop
jecxz
ljmp
fildl
dec
fdivrl
es
dec
scas
mov
lahf
push
cmovae
sub
enter
jp
jbe
and
sbb
mov
sbb
mov
test
jno
data16
push
mov
cltd
mov
mov
jmp
int3
xchg
xchg
cwtl
mov
fiaddl
pushf
ljmp
ss
add
inc
cmpsl
sub
outsl
pop
paddw
enter
mov
int3
mov
add
or
xor
mov
add
pop
dec
or
loop
mulb
cmp
hlt
mov
xchg
insl
sbb
cmp
xchg
add
sbb
xchg
les
mov
adc
mov
inc
cltd
sbb
mov
subl
mov
cmpsb
scas
inc
gs
lods
mov
mov
dec
inc
ret
mov
xchg
dec
pop
jns
shrb
xor
les
cmpl
mov
scas
pop
jo
xor
mov
push
cmp
sub
std
adc
ja
cld
fldl
dec
pop
out
xchg
or
adc
jmp
sbb
jb
or
jl
inc
daa
dec
fnstcw
add
aam
xchg
mov
xchg
das
pop
inc
sbb
push
xchg
pop
push
pop
cmpsl
jg
xorl
decb
push
test
sbb
imul
adc
aas
popf
mov
les
inc
cwtl
in
hlt
mov
movsl
jae
mov
and
sarl
fwait
xchg
xor
xchg
pop
in
cmpsb
xchg
scas
out
inc
ret
orb
test
xchg
nop
cltd
sbb
cmp
shlb
xchg
inc
pusha
mov
fimull
sub
and
sbb
cld
stc
daa
add
rorl
and
push
add
inc
lock
pop
xchg
mov
iret
out
dec
adc
data16
jo
jle
adcb
ljmp
test
xor
or
cmp
inc
cmp
movsl
pop
cltd
out
lahf
xor
jmp
or
mov
sub
jne
outsl
mov
and
rolb
mov
pop
and
jnp
ja
jmp
cmp
fiadds
loope
jmp
addb
ja
lock
push
xchg
mov
cs
out
mov
lock
adc
imul
cmp
insb
fstps
xchg
sub
sbb
or
or
sub
and
out
push
add
std
xchg
dec
mov
clc
xchg
pop
mov
mov
mov
test
and
fiadds
shll
sbb
pop
mov
fdivs
sub
sbb
int
cli
hlt
xor
add
out
int3
push
jmp
pop
arpl
aam
iret
xchg
dec
jmp
lret
cmp
aas
mov
inc
mov
sbbl
punpckldq
push
sbb
and
dec
mov
jbe
mov
out
fwait
sub
or
icebp
push
mov
lods
repnz
imul
mov
mov
jno
shlb
cwtl
subb
lret
xor
out
adc
mov
sbb
loopne
jo
test
fdivr
nop
inc
lea
lret
and
ss
movsb
adc
cmpsb
cmp
fwait
or
push
fwait
sbb
mov
cmc
icebp
mov
mov
xchg
loopne
sub
lahf
inc
add
mov
mov
fwait
test
push
and
cmp
and
add
xchg
loope
cmpsl
daa
xor
inc
mov
xor
scas
mov
or
xor
in
xor
aas
stos
stos
jno
int3
outsb
movsl
mov
pop
lds
add
pop
pop
fcmove
pop
push
das
jmp
cmp
cmpsl
push
pop
push
mov
icebp
frstor
psubusw
mov
add
hlt
psubw
or
aaa
inc
or
push
aad
sbb
mov
gs
jae
outsb
pop
int3
out
int3
pop
repnz
mov
sub
push
xchg
dec
xor
aas
in
cmp
mov
repnz
sub
popf
cmp
mov
pop
in
sub
js
out
fidivrs
xchg
pop
movsl
das
or
sbb
pop
mov
xchg
cmpsl
sbb
or
ja
sbb
stos
jmp
fiadds
lds
jo
mov
into
pushf
jnp
movsl
scas
xchg
fxch
inc
rcrl
imul
in
out
insl
xchg
out
pop
adc
in
dec
pop
pop
inc
fadds
cmc
enter
gs
cld
mov
adc
mov
xchg
sub
sub
xchg
scas
add
leave
xor
inc
mov
lods
aaa
aad
mov
push
dec
mov
shlb
cmp
xor
loopne
jno
xchg
dec
mov
enter
xor
pop
int
jo
jg
or
pop
pop
int
inc
insl
push
mov
jl
scas
rcll
lret
pop
pusha
mov
mov
inc
enter
dec
loope
pop
xchg
lods
xor
hlt
dec
mov
adc
cmp
scas
inc
fwait
cmp
sub
bound
jno
in
mov
push
popa
mov
cs
sbb
add
out
jl
pop
push
imul
sbb
aam
int
mov
lcall
cmc
imul
xchg
mov
push
mov
xchg
enter
nop
sbb
jecxz
imul
jl
sbb
movsl
pushf
push
jp
mov
cwtl
xchg
shlb
mov
jbe
test
inc
jne
jl
mov
pop
pop
sub
clc
cmp
insb
mov
jne
lcall
dec
shl
and
das
in
fsubrl
sbb
jg
stc
mov
jle
pop
and
pop
mov
mov
xchg
sbb
inc
out
xchg
js
rolb
adc
xchg
or
mov
stc
lret
push
pop
or
pop
pop
jge
mov
cmpsb
out
pop
cmpsl
sbb
or
xchg
cld
jns
shl
mov
pushl
mov
xor
adc
xor
mov
mov
scas
lahf
mov
aam
jle
or
jmp
sbb
inc
lods
popf
jp
adc
imul
mov
inc
push
inc
fisttpl
dec
dec
fisttps
int3
push
add
fldenv
fstpl
inc
sub
or
je
ffreep
loopne
inc
jae
fnstsw
xchg
pop
leave
mov
mov
sub
outsl
mov
mov
fmull
dec
sub
mov
pop
and
out
xor
jl
fsubrs
jp
lret
test
js
nop
sub
aas
sar
mov
lret
cmp
mov
xchg
imul
test
adc
data16
push
test
mov
das
mov
xchg
fcoms
pop
paddusw
addb
jl
ja
jno
xor
xlat
xchg
push
cmp
scas
stc
int
adc
outsl
jmp
mov
pop
xor
pop
nop
push
xlat
loop
xchg
push
xchg
jo
fbld
jb
inc
xor
ret
addr16
leave
cmc
pop
subl
out
into
push
sti
or
jbe
int3
arpl
jmp
xor
sub
fnstcw
sub
aad
sbb
and
movsb
jmp
xchg
mul
sub
adc
push
jg
mov
inc
andb
xor
or
jns
sbb
and
in
jne
inc
test
push
dec
mov
mov
and
xchg
cmc
pop
sub
jmp
repz
out
mov
cltd
xchg
loopne
dec
mov
pop
insl
pop
jge
shll
pop
lds
arpl
rcrb
andb
stos
or
sub
cmp
sahf
cmp
popf
xor
iret
cs
stos
sub
lret
out
sbbb
aas
or
lret
mov
lods
cmp
pop
imul
iret
scas
loope
cmp
lahf
movb
lahf
pushl
call
call
pop
data16
jg
lahf
fcmovnu
jno
mov
lcall
adc
pop
fisttps
fisubs
into
mov
and
adc
jno
add
pop
pushf
loope
pop
pop
test
mov
loopne
cmpsb
mov
jns
jo
lea
push
and
adc
js
xchg
dec
enter
or
mov
pop
xchg
fdivl
jmp
dec
fsubrl
and
lahf
adcl
pushf
push
lods
mov
sbb
fisubrs
mov
pop
faddp
repnz
sbb
ja
nop
add
xchg
mov
pop
das
or
jmp
add
imul
dec
mov
sub
test
pusha
cmp
outsl
cmp
js
xor
mov
jp
sahf
jmp
mov
add
and
mov
aam
lods
loopne
sub
cmpsl
test
and
mov
das
mov
push
outsb
sbb
pop
push
stos
add
notl
sub
imul
dec
lods
jnp
stos
std
or
fnstenv
mov
mov
adc
hlt
push
lcall
push
pop
and
insl
addl
pop
lret
jnp
xchg
lock
pop
pop
cli
fs
and
cmc
in
push
jg
cwtl
mov
lods
vfnmsub132sd
shl
mov
push
cmp
add
pop
hlt
sbb
sub
int3
xchg
fldl
jecxz
pop
sbb
jmp
pushf
addr16
sbb
mov
push
movsl
push
push
repnz
cmp
sbb
sbb
cmp
bound
fsubp
scas
mov
cmp
push
out
lods
jg
adc
mov
and
sbb
jb
aad
jns
sbb
test
arpl
push
arpl
dec
daa
fistps
scas
inc
xchg
pop
jp
push
and
mov
push
xchg
rorb
and
mov
adc
add
pop
pop
xchg
push
loopne
lcall
and
adc
fsub
mov
push
test
jb
push
mov
xchg
push
mov
ja
xor
xchg
mov
shr
leave
lahf
mov
jge
aaa
sub
dec
mov
dec
loop
inc
into
scas
mov
push
xchg
mov
imul
jp
add
arpl
aam
cmpsl
xchg
adc
addr16
lods
xchg
cmp
mov
mov
or
jne
cltd
lahf
xchg
scas
divb
sbb
leave
mov
cmp
outsl
outsl
sahf
inc
ds
insb
cmp
lahf
sbb
add
aad
adc
add
add
jbe
and
sbb
inc
in
jmp
ljmp
pminsw
dec
dec
push
cmp
xchg
pop
lret
and
fwait
add
ss
insl
or
jge,pt
push
ljmp
pusha
sbb
mov
lcall
push
adc
xchg
mov
aas
and
outsb
lret
rol
push
pusha
and
mov
push
ljmp
and
jbe
adc
add
iret
stos
jmp
mov
xor
lahf
imul
inc
in
mov
in
addb
jle
in
daa
dec
xchg
lods
jg
jo
sbb
jbe
pop
fisubl
add
push
jle
xchg
lcall
push
xchg
testl
mov
out
jnp
fistps
jnp
xchg
jne
xor
mov
push
iret
mov
icebp
das
addr16
pop
popa
xor
push
sahf
in
dec
repnz
in
push
ja
add
cmp
loope
lcall
outsb
mov
ret
iret
negb
js
pop
jg
out
pop
iret
sub
mov
das
adc
pop
cltd
arpl
sub
sub
jns
cmpsl
dec
rol
lret
add
sub
adc
dec
adc
and
into
lret
mov
dec
jbe
push
sub
add
es
js
xor
je
add
sub
mov
icebp
jb
sub
cs
test
cmp
pop
dec
lods
inc
mov
idivb
fldenv
shll
sti
dec
leave
sub
clc
or
out
mov
add
xchg
stc
pop
mov
push
mov
cld
xchg
sbb
pop
add
filds
adcl
shll
in
lret
lods
jnp
ljmp
js
xchg
cltd
dec
dec
add
cmpsl
jb
pop
mov
aas
cli
and
lahf
mov
mov
xchg
jbe
mov
outsw
inc
pop
mov
inc
lret
dec
jl
sub
test
sub
adc
loopne
mov
xor
mov
add
dec
aad
loopne
jp
pop
lock
fstps
fnstenv
fimuls
push
dec
test
and
repz
add
scas
and
mov
pop
xor
loope
push
scas
mov
or
push
daa
aas
fwait
and
inc
lds
jb
sbb
je
stos
and
xor
pusha
lods
and
scas
test
mov
jns
mov
mov
xchg
push
jecxz
xchg
pop
inc
es
xchg
sbb
jnp
or
ja
loope
fnstenv
and
jecxz
pop
loopne
xchg
cs
xor
sub
pop
lahf
stos
mov
movl
mov
pop
dec
jle
mov
mov
adc
mov
cwtl
dec
add
outsl
dec
movsb
movsl
dec
mov
decl
cmp
shr
rcrl
filds
aas
inc
divl
fadd
push
ret
xchg
sub
or
mov
mov
ret
add
outsb
int3
lret
outsb
ret
int3
scas
dec
mov
mov
xchg
cmp
cmp
les
leave
and
movb
fdivr
icebp
sbb
ds
jp
cmp
cmp
jae
loopne
mov
add
je
cmp
inc
outsb
mov
and
push
inc
mov
sbb
mov
xor
inc
rclb
push
in
stc
add
xchg
mov
inc
int3
in
pop
pop
icebp
push
cmp
cmp
adc
pop
sbbb
fsts
jl
and
lods
mov
inc
cltd
sbbb
iret
out
or
xor
sbb
xor
xchg
in
std
sub
and
mov
fs
ljmp
loopne
repz
pop
popa
mov
jnp
sub
in
movsl
xchg
aad
cmpsb
mov
sbb
iret
mov
int3
fdivl
sub
sbb
into
ja
sub
dec
scas
leave
data16
pop
fsub
dec
or
xor
jg
cmp
sbb
pop
adc
lods
jl
imul
jo
inc
and
nop
hlt
mov
cltd
or
daa
sub
adc
lea
test
js
sar
adc
repz
sbb
jp
fdivl
or
popl
subb
push
imul
and
and
fsubs
hlt
mov
das
pop
xchg
ds
dec
daa
cltd
and
jle
into
dec
lods
jne
inc
xchg
mov
sub
cmp
ret
sbb
xchg
xchg
ss
fst
call
test
decl
xchg
les
rol
sub
rol
inc
sub
sbb
aas
insb
int
dec
adcl
cs
aaa
cwtl
sbb
push
jns
mov
jbe
add
cmpsl
jbe
in
mov
sbb
les
adc
test
cld
jae
cmp
subb
aad
push
repz
in
push
out
add
dec
es
fs
push
das
mov
xor
icebp
push
dec
xlat
and
xchg
jp
pushf
cmpsb
adc
lods
mov
pusha
fwait
cmp
push
cltd
push
outsb
and
inc
je
mov
mov
imul
and
aam
jg
dec
mov
inc
push
inc
mov
je
aam
lret
cs
push
data16
mov
cltd
xchg
inc
es
or
mov
sbb
in
inc
xchg
or
test
lods
pop
scas
lods
jb
lds
pop
leave
mov
nop
mov
mov
decl
pop
xchg
sub
sbb
imul
arpl
cltd
and
jbe
dec
jg
pop
cmpb
pop
test
insl
sub
in
movsl
dec
dec
je
jmp
mov
insb
mov
pop
mov
inc
xor
movsb
adc
shlb
push
fsubrl
loop
or
call
xlat
mov
nop
aas
jnp
movsb
lret
mov
cmp
pop
dec
jle
daa
mull
adc
test
mov
popf
or
orl
in
xor
filds
fistpll
push
sti
rcrl
push
sbb
xlat
adc
adc
and
mov
test
xor
sahf
push
mov
xor
inc
xor
inc
bnd
xchg
inc
cltd
lahf
mov
sub
cmc
movsl
movsb
shll
testl
jnp
ret
mov
jo,pn
dec
adc
fildl
cmp
inc
lock
push
out
cs
outsb
movsb
mov
lea
in
jno
ret
cmp
push
and
int
stos
test
aas
icebp
das
mov
jae
or
xor
jmp
xlat
out
sbb
js
fisubl
fnstsw
in
popa
cld
cmpsl
test
mov
loope
fadd
inc
dec
mov
jo
inc
dec
jmp
jne
es
fldl
dec
inc
dec
nop
out
mov
push
lds
adc
adcl
arpl
xchg
adc
aas
fists
sub
mov
and
int
cmp
pop
ljmp
outsl
cmpsl
dec
ret
add
out
lds
test
jnp
push
iret
bnd
rcr
jne
and
jae
cmp
dec
fwait
jno
xchg
cli
in
es
sub
jns
cld
neg
repnz
hlt
dec
and
dec
popa
stos
sti
popa
xor
in
loop
imul
push
xor
repnz
aad
push
mov
test
sahf
lret
pop
loope
push
inc
les
inc
inc
lock
in
in
push
push
int
or
gs
mov
mov
testl
jmp
gs
iret
sahf
xlat
pop
out
mov
ret
sbb
add
xchg
jnp
xchg
pop
cmp
je
test
ss
jle
out
icebp
shll
je
inc
pop
pop
inc
fbld
mov
jb
loopne
inc
jae
scas
popl
loope
popa
pop
js
add
gs
addr16
aam
sbb
cmpsb
and
jne
std
lret
ds
or
loopne
and
adc
imul
lods
and
enter
mov
fcmovnu
xchg
daa
mov
sub
ljmp
and
xchg
pop
sahf
packuswb
jbe
inc
mov
dec
pop
push
xor
cli
out
mov
or
outsb
jle
and
jns
inc
pusha
pop
push
pop
mov
clc
stc
addr16
xchg
rolb
das
test
shld
in
xchg
lock
addr16
add
mov
cwtd
movsb
stos
jne
inc
sbb
dec
sub
and
fstpl
adc
int
xor
testb
ret
in
in
sub
rorb
aam
repz
stc
pop
negl
dec
outsl
ljmp
xor
pop
pop
xchg
ja
into
pop
sub
pusha
in
roll
sub
pop
stc
in
mov
xor
subl
xchg
jb
imul
push
jp
xchg
add
mov
fwait
aas
out
jb
in
mov
mov
mov
jmp
cmp
fadds
rclb
push
sbb
mov
lret
scas
sahf
and
test
popf
cld
lock
push
mov
lock
sub
cmp
cmp
incb
mov
dec
xchg
xor
addl
roll
inc
mov
stos
test
inc
mov
lret
xor
mov
daa
lret
je
mov
mov
pushf
cmp
icebp
push
inc
enter
xor
cmp
ds
sub
stc
stc
add
rol
pop
sub
or
pop
in
es
jne
iret
lods
scas
ret
push
fbstp
xor
jmp
nop
repz
add
fdivrp
sub
loop
bound
outsl
mov
or
xchg
mov
push
push
or
test
dec
cmpl
out
push
jle
lods
popf
push
pop
loope
scas
or
popa
xchg
loopne
mov
shll
mov
pop
cmp
jmp
mov
aaa
add
inc
mov
int
or
fcomps
sub
jmp
jp
dec
outsl
stos
popa
mov
enter
cmp
insl
bound
sahf
jp
out
adc
cmc
pop
outsb
add
inc
dec
jmp
push
mov
and
push
aas
sub
adc
bound
xor
std
ss
cmpb
mov
sbb
mov
enter
jl
mov
call
in
sbb
sub
out
push
stmxcsr
sbb
movsl
lcall
cmp
mov
cmpsl
out
push
mov
mov
and
lods
jp
mov
shrl
std
enter
lcall
xor
inc
test
std
icebp
adc
jns
enter
lock
xor
push
adc
movsb
out
dec
inc
pop
lret
int
mov
sub
dec
cmpsb
fidivrl
and
sbb
enter
sbb
inc
xchg
repz
and
pushf
icebp
or
sbb
mov
pop
mov
js
js
cli
xlat
in
daa
or
push
icebp
loope
iret
lods
sbbb
jmp
jbe
das
bound
mov
scas
push
repz
subl
ret
sbb
addr16
movsl
mov
jnp
mov
pop
aaa
out
jge
fwait
xchg
lock
and
aad
mov
or
cli
pop
fcoml
xor
andb
jle
cmpsl
pop
lret
mov
push
outsl
mov
mov
in
and
mov
xor
das
addr16
nop
imul
cmp
mov
pop
fwait
xchg
inc
or
mov
dec
lds
cmp
mov
mov
rcll
pop
push
fisubl
sub
stos
loop
sub
scas
bound
or
scas
das
lret
sbb
iret
xor
dec
or
xlat
in
lret
add
popa
sbb
int3
jb
jg
lods
or
cmp
lods
xchg
jns
rorb
imul
in
cmpsl
mov
test
fucomip
insl
out
into
pop
ja
popw
mov
fs
inc
mull
cmp
shll
push
mov
push
mov
or
lods
std
push
inc
shrl
in
inc
xor
cmpb
and
jp
mov
stos
xchg
aas
dec
push
adc
pop
test
cmp
jns
and
and
and
and
mov
push
mov
and
dec
mov
fists
cli
xlat
pop
inc
dec
adc
xchg
xor
sahf
ret
mov
adc
lret
adc
add
mov
shll
xchg
jp
xchg
rcr
xor
push
scas
jae
shrb
rorb
cmpsb
inc
and
pop
or
andb
int
push
and
pop
out
mov
pop
dec
jnp
or
push
cwtl
lds
cmp
shll
hlt
insl
iret
or
imul
sti
mov
bound
and
es
fs
lea
arpl
test
jl
outsl
add
dec
stos
mov
sbb
push
dec
loopne
les
add
inc
repz
stc
mov
adc
pop
mov
inc
inc
mov
lods
add
in
push
push
sbb
mov
int3
test
loope
rcr
or
mov
xchg
push
js
stos
xor
inc
jp
jge
std
dec
repnz
out
jb
xchg
push
repz
stos
inc
mov
dec
pop
sub
push
mov
cltd
popf
inc
lret
jp
ss
rcll
sub
fcmovne
lock
fucomip
mov
mov
push
add
adc
test
push
xor
xchg
aam
push
xchg
cmpsl
fwait
jnp
std
add
mov
fcmovu
aam
icebp
or
jae
negb
mov
in
cltd
repz
sbb
cmp
insl
xchg
popf
dec
into
cmpsb
rcrb
add
or
xor
dec
xchg
xchg
test
jmp
cmp
cli
mov
cmc
in
add
push
xchg
dec
es
jge
mov
cli
lods
iret
fwait
sub
or
sti
xor
nop
inc
lods
ficomps
jns
cltd
fisubrl
out
in
fdivp
test
pusha
sub
stos
sub
or
lret
adc
mov
rclb
sub
xchg
iret
out
ret
push
test
rcrl
mov
out
repnz
push
filds
and
jne
inc
xor
std
dec
mov
cmp
push
pushf
push
outsb
ss
or
mov
sub
inc
mov
jns
aaa
sbb
jmp
enter
negb
sub
dec
and
out
jo
mov
xchg
in
lret
and
fidivrl
mov
mov
adc
fimuls
lds
inc
lea
dec
pop
sub
cli
add
je
add
movsl
or
fs
repnz
pop
mov
repz
daa
int
roll
jb
mov
out
in
xor
stc
push
xchg
push
pop
icebp
cli
test
imul
lcall
mov
push
shl
adc
mov
test
pushf
or
outsl
lea
xor
ficoms
xlat
push
mov
mov
test
jne
repnz
adc
in
dec
xor
lahf
pusha
jge
mov
das
xchg
repnz
loopne
dec
cs
xor
rclb
and
pop
fs
scas
mov
mov
ja
sub
and
add
rorb
add
xchg
and
aam
in
add
out
mov
inc
fldt
fistl
jge
iret
vmread
push
xlat
sti
in
mov
push
movsb
jae
arpl
pop
div
cs
adc
dec
iret
dec
movsb
rorl
xor
mov
xchg
fidivrs
mov
enter
orl
cli
sti
addb
fwait
add
test
inc
inc
rclb
mov
sbb
std
fs
xor
or
out
ret
fiaddl
repz
push
ret
call
adc
mov
pop
insl
mov
clc
mov
shlb
movsl
xor
out
loopne
cmc
imul
hlt
lcall
icebp
imul
pusha
cld
and
mov
jp
dec
xlat
int
sub
out
xchg
in
xchg
cmp
add
xor
test
stos
das
cmp
sbb
or
into
lret
dec
repz
xchg
pop
loopne
int3
adc
outsb
call
fmul
mov
clc
adc
xor
stos
mov
shl
out
mov
jo
xor
scas
insb
fwait
ljmp
js
mov
xchg
sbb
test
test
adc
add
loopne
dec
dec
mov
arpl
not
imul
sub
jnp
jg
pop
xor
lods
sub
inc
cmpsb
jae
inc
movsl
mov
in
shlb
jbe
rclb
fmull
mov
dec
xchg
xor
negl
dec
mov
ja
add
xlat
or
stos
jo
add
shlb
dec
pop
dec
pop
or
outsl
loope
das
inc
arpl
pop
jp
pop
pop
gs
pop
xor
add
lret
jle
inc
xchg
fidivrs
xchg
cmp
sbb
mov
lcall
add
dec
pop
fsub
enter
pop
cmp
fnstcw
ds
xchg
dec
loopne
ss
or
or
mov
aaa
xorl
adc
mov
jle
sub
and
and
jecxz
cli
call
gs
adc
mov
mov
mov
cmp
sar
cmp
aad
jl
mov
mov
jge
stos
cld
jo
or
inc
cld
sub
cmpsl
and
or
or
loope
and
into
scas
mov
es
outsb
cmpsl
or
adc
jb
divb
jb
mov
test
adc
popa
arpl
or
rcl
mov
cmpsb
repz
mov
mov
js
mov
mov
popf
sub
xchg
sub
xor
push
mov
sarb
sub
push
rclb
cmp
jle
jb
cmpsb
pop
add
lret
notb
xor
call
jne
mov
fwait
std
cltd
mov
inc
inc
jne
outsb
add
mov
inc
out
int3
lods
mov
pop
add
sub
and
pop
cmp
mov
rorb
mov
dec
inc
dec
scas
and
in
loop
mov
das
dec
mov
mov
in
les
mov
mov
sbb
dec
mov
mov
xchg
test
or
or
pop
sub
sbb
xchg
pop
jae
adc
xchg
jp
notl
aaa
icebp
mov
add
iret
mov
sbb
pop
movsl
jne
cmp
xchg
das
cli
imul
je
cmc
jg
aas
fbstp
xchg
push
cmp
scas
push
int3
mov
loope
call
pop
ret
test
or
mov
mov
or
cmpsl
xor
or
fisttps
loope
or
jne
inc
add
add
stos
jns
sbb
out
pusha
shrd
push
and
imul
push
jmp
add
in
sbb
clc
aad
lret
mov
aam
jo
out
xchg
or
xchg
inc
add
ficoms
jo
test
xchg
enter
cmp
jl
loope
pop
push
pop
jge
sub
popf
jb
or
shrb
inc
clc
adc
mov
push
cmpsl
sub
jg
enter
mov
sbb
out
lds
lds
lods
push
cmpsl
jmp
in
les
pop
pop
loop
pop
xor
icebp
xor
pop
dec
les
nop
push
outsl
or
enter
insb
inc
adc
aaa
cmp
add
sub
enter
xor
in
test
mov
add
fnsave
lds
cli
dec
jbe
rclb
enter
orw
pop
jnp
bound
les
inc
add
fiadds
sub
das
daa
push
call
add
stos
or
pushf
les
frstor
loope
mov
push
sub
sub
movsb
out
js
loop
xor
cmp
mov
ret
leave
sub
mov
lock
sbb
cwtl
sub
and
pop
sbb
in
push
call
adc
into
ljmp
inc
into
stc
mov
xchg
sbb
sbbl
cmp
pushl
sub
or
flds
mov
add
mov
jo
into
add
sub
mov
add
xchg
arpl
mov
mov
mov
add
lcall
cmp
lods
aas
lcall
nop
sbb
inc
hlt
and
insl
push
negb
daa
pop
jl
lcall
loopne
pop
outsl
ds
sub
and
scas
mov
mov
jnp
pusha
push
rclb
xchg
movl
stos
push
lock
faddl
push
cld
mov
hlt
mov
lret
push
jge
xchg
cld
pop
inc
adc
mov
loope
cmp
add
push
xor
jne
es
movb
cmp
mov
mov
ds
mov
cmpsb
ds
add
mov
inc
or
mov
jp
mov
xchg
movsl
sbb
ror
add
pmuludq
jns
sti
lahf
in
fsubrs
dec
pop
shll
in
lahf
insb
cmc
jmp
pushl
jp
or
pop
pop
gs
data16
dec
adc
dec
add
je
pop
xor
aaa
jb
out
fs
js
mov
repz
fs
daa
pop
mov
inc
xchg
ja
incb
fldcw
shll
int
js
add
cmpsb
xchg
sbb
mov
xchg
sub
inc
ret
dec
divb
dec
addr16
addr16
add
ret
add
stos
outsb
fwait
rorb
push
call
add
jbe
pop
les
lahf
in
adc
scas
push
pushf
push
add
sbb
inc
pop
push
jge
add
mov
shll
sbb
jb
ss
dec
ja
insl
insb
movsl
push
mov
ret
pop
pushf
icebp
jmp
jmp
fsubrs
xor
mov
addr16
test
je
sti
dec
orb
xchg
sbb
ficomps
jne
test
mov
sti
sub
test
mov
out
mov
pop
jns
push
ret
and
xchg
xlat
push
adc
js
imul
lock
lods
cmp
inc
lods
jl
mov
icebp
lea
inc
inc
xor
xchg
xchg
lods
jle
mov
imul
andl
or
jns
rcr
inc
cmp
insb
cmpb
sti
loope
lahf
xlat
fwait
ret
xor
mov
mov
les
lahf
insb
add
test
daa
out
xchg
pop
test
inc
add
rcrb
in
add
jae
xor
bound
mov
std
mov
les
sbbb
pop
pop
push
ret
fsts
mov
push
daa
add
adc
cltd
pop
jl,pt
pushf
mov
stc
adc
pop
insl
push
cwtl
fwait
add
cmpsl
out
std
xor
test
lds
outsl
lret
jle
sbb
push
mov
jmp
push
inc
in
cmp
dec
xor
mov
mov
inc
jo
ret
lock
sarb
pop
les
or
and
pop
pusha
adc
scas
std
ret
fs
sahf
mov
es
sub
int3
or
notb
jno
mov
std
sbb
les
adc
out
dec
pop
shll
mov
and
pop
mov
test
fnsave
dec
repz
jg
insb
fwait
adc
imul
sbb
shll
mov
xchg
mov
xchg
mov
test
pop
xor
cmp
cmp
icebp
pop
loopne
xor
in
pusha
mov
stc
jnp
cmp
cmpsl
out
and
cli
xorl
add
xchg
xchg
movsb
iret
repnz
jbe
movsb
and
sbb
add
add
jle
pop
ficompl
push
xor
sbb
dec
leave
jne
sbb
jnp
out
push
sbb
xor
sarb
insb
lret
test
mov
jmp
bound
insl
lret
xor
pushf
mov
and
jbe
add
in
adc
daa
cmp
or
sub
mov
dec
outsl
fistpll
stos
xchg
mov
clc
pusha
ljmp
cs
movsb
inc
addr16
push
daa
insl
jge
pop
pop
cmp
test
xor
nop
mov
sbb
mov
or
int3
int
movsl
xor
mov
push
scas
rorb
add
mov
pop
arpl
and
and
call
movsl
sahf
or
stc
mov
jge
int3
rolb
sbb
lret
rorl
inc
sub
mov
inc
xchg
pop
addr16
arpl
cli
add
ljmp
sbb
repnz
pushf
add
or
jb
dec
lea
dec
movsb
stc
push
in
lock
fiaddl
cmpsl
cmp
aaa
pusha
jmp
aas
jo
fcmovb
mov
popf
lock
repnz
popf
sti
add
push
jp
inc
ljmp
cltd
xchg
cmpsb
jecxz
push
aaa
loope
cmp
aas
mov
jg
pop
pop
pop
mov
arpl
mov
jmp
pop
data16
ja
mov
xor
aam
stc
es
inc
dec
mov
cmp
push
jl
pop
push
test
inc
dec
in
xor
mov
std
sar
push
pop
lahf
ja
dec
jg
dec
adc
insl
mov
push
cld
and
mull
popa
add
gs
jne
pop
ret
sti
cwtl
sub
icebp
std
in
shl
leave
sahf
pushf
jmp
and
pop
shlb
pop
inc
dec
add
test
ret
sti
adc
jb
call
jb
test
or
xlat
push
mov
movsl
fs
js
pusha
mov
lret
mov
cmc
and
addr16
mov
pop
in
xlat
mov
inc
in
andl
in
rclb
popf
subb
jae
jbe
xchg
fistl
push
inc
notrack
cmpsb
call
xor
jp
sbb
add
mov
jl
rorl
orb
int
inc
pop
lcall
push
rcrl
adc
das
insb
fs
adc
and
scas
fninit
mov
adc
out
sbb
xchg
cmp
ret
iret
sbb
add
rorb
ret
cs
out
cmp
enter
aas
sti
arpl
and
xor
mov
pushf
mov
mov
lahf
fcompl
cmpsb
fstps
test
pop
mov
sbbl
or
clc
int3
sbb
lret
xlat
adc
xchg
push
and
bound
mov
movsl
cld
sub
sahf
dec
dec
fstpt
mov
inc
mov
aam
mov
gs
dec
ret
test
icebp
fcmovne
xrelease
xchg
and
stos
loop
mov
sub
mov
pop
call
andnps
repz
sarb
scas
outsb
xchg
test
pop
add
push
push
stc
lods
jmp
mov
in
adc
jo
rcrl
fstps
sbb
daa
xlat
jne
popl
lock
jns
fs
and
or
or
jp
xor
icebp
mov
gs
cmp
scas
adc
mov
inc
mov
cli
mov
push
aas
mov
xor
cltd
shll
push
ret
mov
and
push
jg
pushf
mov
mov
cld
cltd
push
mov
pop
xchg
popa
cmp
adc
jecxz
mov
push
test
adc
sub
or
push
jge
mov
scas
aaa
ret
push
or
adc
pop
sub
cmpsl
inc
aaa
sub
sub
jae
lret
push
in
add
pop
mov
jo
rorb
loopne
pop
cmpsl
sti
and
rcll
mov
xor
xor
dec
sbbl
insl
cmc
add
jmp
dec
shl
pop
movl
cmpsl
das
jl
ret
movsl
xchg
ffree
add
je
cmpsl
mov
mov
cmp
cld
out
jmp
cmp
and
in
aam
pop
pop
push
or
ss
add
insb
mov
nop
jp
aaa
pop
sti
fucomi
mov
fxam
jnp
gs
repnz
es
xchg
fcompl
sub
dec
je
sbb
or
fisttpll
call
cmovp
orl
movsl
jbe
push
mov
jmp
jb
stos
or
xlat
xor
mov
add
cmp
iret
es
flds
fs
sti
dec
jae
je
test
call
ffree
inc
jo
ror
cs
xchg
sbb
pop
jbe
push
fcmovne
inc
orl
and
into
inc
fbld
div
negl
jp
pop
adc
xchg
imul
add
mov
cmpsl
ret
js
dec
cs
fmul
jne
add
inc
or
ja
repz
or
jb,pt
mov
mov
test
nop
and
or
add
and
out
xchg
insl
ret
mov
xlat
popf
call
addr16
push
cmpsl
filds
je
dec
adcl
repnz
mov
push
cmc
test
inc
mov
or
mov
aad
popf
and
fnstenv
or
push
stos
mov
lret
lods
mov
push
movsb
jp
xor
jge
scas
fidivrs
stos
mov
lret
addl
and
adc
cmp
jno
xor
mov
inc
mov
mov
outsb
and
cmp
imul
sbb
mov
cli
push
shl
stos
push
push
adc
inc
popa
mov
stos
push
cmp
subl
pushf
and
jnp
mov
mov
mov
mov
lret
fstpt
out
bnd
pop
cld
push
or
cld
sub
ret
scas
mov
or
add
jns
or
cmpsl
filds
mov
loopne
std
call
cltd
sbb
pop
mov
mull
les
mov
inc
xchg
andl
mov
std
mov
outsl
mov
stc
lcall
push
mov
xor
cmc
mov
jp
js
lret
les
dec
mov
call
mov
adc
rolb
outsb
gs
mov
mov
pop
mov
jle
into
push
arpl
xor
mov
sbb
aad
sahf
xor
or
adc
out
insl
add
mov
xchg
out
loope
les
xchg
or
xlat
pusha
int3
and
jne
push
adc
mov
cli
or
sub
imul
xchg
pop
sarl
cmp
and
sub
ja
leave
push
sbb
rorb
aam
outsl
dec
sti
sub
fidivl
insb
out
stos
dec
fildll
ret
or
les
mov
push
mov
fisttpll
aad
push
mov
xor
add
cmp
outsl
arpl
mov
ret
or
mov
gs
pop
clc
shrl
push
gs
dec
jns
add
xchg
jb
cli
jo
jp
shll
push
mov
adc
push
test
shr
push
adc
xor
arpl
fsubr
pushf
loop
cltd
add
pop
mov
outsl
pop
push
xor
cmp
adc
std
daa
loope
fsubs
adc
or
mov
pop
out
mov
enter
test
jns
push
adc
movsl
inc
clc
sub
xchg
cli
mov
mov
notb
push
aaa
rol
mov
into
cmp
divl
xor
loop
adc
iret
sbb
pop
shr
fmul
dec
dec
inc
pop
sbbl
lods
push
imul
lock
bound
add
pop
arpl
cmp
fwait
cmc
add
std
cmp
insl
xchg
lods
lods
outsb
sub
movsb
mov
fdivrl
mov
xchg
js
enter
test
cmpsb
mov
loop
int
or
or
mov
loop
xor
mov
lods
insb
inc
das
pop
hlt
and
adc
ljmp
std
dec
mov
adc
or
push
xor
adc
lahf
js
mov
adc
sub
mov
ljmp
rol
jne
aaa
sbb
das
xor
push
pop
fadds
jbe
cli
test
int
pop
nop
jle
mov
xchg
xor
push
adc
cs
xchg
pusha
lret
add
icebp
lods
in
pop
inc
sti
push
leave
mov
jae
push
dec
repz
scas
into
push
lea
pop
adc
xchg
sub
test
insb
xor
add
add
push
sub
popf
fxam
sub
push
sub
pop
push
fidivrl
sbb
mov
sbb
out
ds
xlat
repnz
ret
mov
jo
mov
xor
adc
sub
js
ja
lock
push
outsb
and
mov
aas
jae
sub
and
icebp
pop
adc
test
and
fisttps
scas
or
add
or
out
mov
lahf
stos
pop
test
imul
mov
lret
adc
in
mov
xor
mov
pop
shlb
mov
je
insb
icebp
sbb
jecxz
adc
mov
addb
fbld
loope
imul
push
fimuls
pop
mov
sub
xchg
inc
mov
insl
mov
idivb
clc
pop
in
mov
fidivrs
daa
out
pop
push
dec
ds
mov
lods
push
dec
cmp
negl
mov
orb
fidivrs
jae
lock
xchg
out
je
mov
fdivrs
add
mov
repz
xor
sbb
mov
xchg
cli
or
lods
dec
lahf
push
js
xchg
add
xchg
ljmp
imul
shl
popa
cmpsb
mov
mov
fs
sbb
jl
xor
push
iret
repz
inc
cld
jbe
cmp
in
lcall
xor
cmp
inc
imul
je
loope
out
orb
or
sbb
in
sarb
jp
stos
push
addb
jg
cli
das
adc
stc
add
cmp
lock
xor
ljmp
mov
in
cmc
iret
insb
jmp
jb
lock
push
dec
mov
sbb
add
xchg
and
pop
decb
or
fldt
std
pop
js
ss
mov
mov
inc
outsl
movsb
adc
movsl
stos
fidivl
mov
imul
bound
repnz
aas
sbb
lds
lret
stos
fildll
hlt
cs
cmc
loope
repz
jnp
xor
std
ljmp
mov
or
movsb
xor
sbb
clc
or
xor
add
les
cli
fstp
adc
dec
push
repz
mov
sbb
out
test
mov
in
mov
xchg
and
out
dec
jmp
mov
mov
sbb
pop
adc
jge
xor
outsl
rep
xor
xchg
jbe
out
fistl
popa
or
mov
mov
pop
enter
test
int3
dec
popa
divps
imul
xlat
and
aas
cmc
push
lcall
cmp
and
test
cmpsl
pmaxsw
pop
xorb
mov
pop
and
cmp
xor
bnd
ja
pop
or
mov
sti
or
sti
add
mov
pop
and
sub
jno
js
pop
xor
fisubrs
adc
jnp
mov
dec
pop
mov
orb
cmp
dec
out
mov
out
ljmp
xlat
mov
jecxz
imul
pop
fmulp
lock
pop
jl
add
pop
dec
dec
movsb
mov
or
stos
in
cmp
mov
aad
sub
popa
inc
ja
push
test
jb
fwait
lret
in
aaa
dec
shrb
mov
test
repz
subl
xlat
push
sub
outsb
inc
jp
sbb
je
mov
test
lods
and
mov
aad
jp
push
mov
into
dec
jl
sbb
pop
or
or
push
mov
add
jbe
push
nop
add
fistpl
xor
lods
movq
mov
cmp
push
push
dec
xchg
cmc
xchg
repz
sbb
push
lock
data16
nop
inc
cwtl
jmp
test
mov
lock
outsb
mov
ret
jl
xor
mov
shrl
lds
cwtl
sbb
enter
stos
sbb
iret
dec
mov
jp
inc
cmp
adc
out
in
jg
int
adc
repz
pop
jae
sub
xor
rep
dec
fwait
sbb
cltd
pop
jbe
and
pop
mov
in
divb
inc
outsb
ss
in
push
sub
out
and
mov
in
int
test
xchg
xchg
imul
adc
push
daa
sub
xorb
sbb
jg
in
mov
jmp
jmp
rorl
cwtl
cmc
cmp
adc
mov
stos
cs
lret
adc
fwait
mov
cld
call
outsl
mov
fs
cmp
lret
sti
mov
mov
outsb
and
adc
repz
mov
pop
dec
or
dec
xor
jl
mov
push
fistps
inc
pusha
push
pop
push
in
mov
insb
xchg
xor
repz
rorl
icebp
call
inc
shlb
lds
mov
push
out
push
lock
mov
jbe
popa
das
xchg
dec
out
add
dec
out
adc
dec
mov
and
js
pop
pop
jne
aam
mov
sbb
cwtl
mov
insl
pop
hlt
lods
stos
test
es
fidivl
jns
pop
fsubr
mov
pop
out
int
leave
and
fadds
test
jl
movsb
das
and
sub
adc
arpl
add
jb
mov
into
mov
insl
pop
add
and
xor
inc
test
leave
xchg
lods
mov
aaa
dec
in
cwtl
insl
push
je
sbb
pop
mov
push
mov
hlt
add
test
push
fwait
test
or
pop
mov
stos
cmp
hlt
jb
sub
jge
in
fucomp
xor
pushf
cmpl
fcomps
in
jae
out
inc
adc
out
pusha
mov
sbb
mov
andb
pushf
lcall
leave
sbb
jb
adc
sub
je
xor
mov
in
push
insl
lahf
push
aad
jg
inc
inc
out
sub
cwtl
push
mov
sbb
in
xor
dec
fistpll
mov
fists
xorb
shr
es
inc
inc
dec
jge
dec
jns
xor
mov
sub
cmc
or
shll
rolb
cmpb
dec
xchg
cmpsb
mov
push
out
sbb
shrb
dec
stos
fnstsw
dec
in
inc
push
xchg
dec
mov
js
out
int
rcrl
fdecstp
je
lock
lret
in
dec
xchg
aad
mov
leave
outsl
scas
push
in
lret
call
cmp
xchg
jp
into
push
pushf
cwtl
cmp
out
icebp
mov
cli
xchg
leave
cmp
sbb
jb
adc
xor
sbb
push
xor
jne
or
inc
pop
adc
fnstcw
out
fmuls
mov
icebp
jno
and
addb
xchg
xchg
and
adc
adc
xchg
nop
xor
and
sbb
cltd
push
dec
and
push
cs
adc
jae
adc
xor
jo
jg
movsb
es
data16
dec
mov
out
push
cmp
inc
dec
ds
mov
pop
enter
xchg
ret
add
arpl
dec
push
mov
arpl
xchg
or
cmp
xlat
ss
test
popa
mov
sbbb
dec
out
stc
es
ljmp
sbb
out
add
mov
and
scas
or
imull
clc
cmc
and
dec
ja
lret
add
test
cmp
andl
mov
insl
and
pushf
push
out
stos
mov
testb
mov
popl
fistl
dec
out
xor
xchg
or
xchg
dec
decl
out
mov
xor
ja
inc
shll
pop
fcomps
fidivs
or
scas
jae
rcrl
aam
std
jle
lret
clc
xor
out
mov
adc
int
insl
jmp
jb
mov
adc
insb
in
cmp
jne
bound
test
sub
arpl
dec
mov
pop
dec
lock
inc
sbb
lea
rcr
daa
pop
inc
mov
lods
push
mov
stos
sub
mov
cmp
shll
fwait
lods
ret
rolb
test
iret
dec
subb
aam
sbb
adc
cmp
out
and
xchg
xchg
ret
flds
je
sbb
fs
push
insb
leave
and
mov
pop
and
cli
pusha
out
inc
popa
jno
inc
test
sub
xchg
aad
fisubrs
xor
inc
scas
repnz
or
mov
mov
rclb
xchg
xchg
lahf
lahf
lcall
push
adc
mov
add
stc
dec
cmpsl
in
imul
iret
jae
xchg
stos
ja
mov
mov
test
lea
neg
mov
mov
add
dec
pusha
fnsave
inc
cmp
sbb
mov
xor
mov
lcall
xchg
push
adc
lds
pop
popa
sbb
cmp
jecxz
and
cmp
aad
faddl
dec
aas
jns
outsl
push
and
enter
outsl
les
out
pusha
cmp
jg
mov
cmp
lidtl
nop
xor
and
push
insb
add
shlb
lock
push
inc
xchg
data16
mov
and
arpl
dec
imul
cmpsb
inc
sti
and
cmpl
loop
jne
xchg
sbb
xchg
adc
add
xchg
pshufw
inc
out
mov
movsl
sbb
mov
ljmp
mov
notl
mov
jge
push
sbb
fnstcw
sbb
mov
jns
pop
fisttpl
iret
mov
xor
lock
ss
dec
enter
jb
pop
cmpsl
daa
push
jle
dec
scas
dec
or
sub
rcll
not
aas
call
xorb
pop
xchg
pop
push
xchg
add
dec
movsl
dec
adc
div
adc
jne
fwait
jno
ret
enter
push
cmp
aas
push
andb
ret
or
int3
pop
inc
xlat
dec
xor
pop
sbb
scas
mov
xchg
scas
sti
lods
mov
std
aad
xor
sbb
inc
add
push
dec
mov
sub
aas
inc
sbb
popa
sub
mov
in
xor
ds
repnz
mov
add
fsts
and
dec
xor
xor
xchg
or
scas
into
jecxz
test
movsb
jo
add
jo
and
into
fs
jo
xchg
pop
lods
movsb
rcll
mov
jae
aad
inc
cld
adc
cs
mov
pop
pop
pop
ss
int3
push
stc
mov
push
sub
popf
aas
xchg
or
fistpl
jbe
sbb
cmpsb
cmc
lcall
lcall
xchg
jnp
mov
lahf
add
inc
sbb
jecxz
cmp
idivb
and
mov
in
jb
sub
fwait
push
or
cmpsb
pop
adc
adc
mov
lret
sub
add
lcall
mov
fbld
pop
fisttps
les
je
mov
aad
sbb
xchg
mov
fcmovnu
push
lea
cmpsb
and
dec
cltd
xchg
stos
jge
and
xorl
jno
pop
ret
sbb
jne,pn
pop
mov
and
lahf
sub
mov
inc
mov
push
pushf
xor
shlb
sub
dec
jno
gs
add
or
cltd
andl
ljmp
add
stos
xchg
add
mov
andb
sbb
add
int3
lret
outsl
repnz
cmc
mov
sub
arpl
je
lret
iret
adc
pop
mov
sbb
movsb
adcl
and
rclb
ficoml
in
out
and
xor
popa
fimull
fsubrp
out
clc
and
mov
add
push
insl
pusha
popa
hlt
ret
xor
cli
jb
leave
sbb
push
aam
ljmp
xchg
xor
mov
dec
repnz
xchg
adc
ljmp
ss
call
div
rcll
inc
pop
out
xor
clc
mov
ss
pop
in
movsb
repz
and
inc
sarb
stos
jns
mov
test
cmpsb
sbb
cmp
inc
leave
mov
xor
mov
mov
inc
add
mov
adc
jecxz
pop
out
jp
jnp
test
cmp
pop
insb
jns
mov
scas
lock
dec
sbb
jne
out
repnz
xchg
or
mov
faddp
shll
fs
xor
push
or
je
stos
cmc
jb
ret
clc
imul
mov
jp
xor
or
insb
leave
addl
and
xchg
in
sub
cmp
mov
pop
mov
outsl
cltd
fsubs
mov
cmp
mov
shl
jbe
jns
or
pop
dec
and
or
and
xlat
and
adc
lahf
cmpb
add
sbb
scas
iret
test
sbb
ret
dec
push
outsb
add
xor
adc
pushf
jb
pop
adc
jne
sbb
mov
outsb
jne
outsl
rcll
add
test
lcall
or
xchg
leave
or
adc
add
cwtl
jecxz
and
mov
imul
aas
pop
imul
dec
int
adc
insl
dec
and
pop
push
sub
lods
cltd
jne
xor
adcl
xchg
push
test
pop
push
insb
not
jbe
xchg
or
dec
shll
push
mov
out
push
rclb
jp
jmp
or
adc
xchg
mov
and
fldt
mov
pushl
outsl
adc
fwait
ljmp
or
cmpl
bound
mov
dec
std
loopne
sarl
mov
sbb
sbb
in
sbb
sub
xlat
or
sub
out
jnp
mov
mov
xor
repnz
jns
nop
out
popa
adc
cs
sbb
mov
loope
test
sbb
dec
mov
adc
std
xorb
out
mov
pop
xchg
dec
insl
aad
jg
xor
filds
xchg
andb
push
jl
sub
pusha
aad
pop
fiadds
inc
adc
pop
dec
fs
pop
and
dec
push
out
dec
xchg
clc
pop
dec
or
cmpsl
mov
xchg
inc
sub
sub
xchg
mov
sarb
and
lcall
sarl
imul
sbb
sub
pop
inc
cmp
jle
adc
faddp
pop
mov
pop
jae
out
push
cmp
rcll
outsl
js
or
leave
mov
mov
cs
pushf
cld
mov
popa
dec
cmp
ror
decb
jmp
dec
inc
fbstp
lock
enter
imul
xchg
rcrb
fwait
clc
adc
test
jl
jne
aam
sub
adc
mov
fsub
aad
and
jl
or
mov
cli
aaa
mov
les
out
xchg
outsb
mov
insl
or
fimull
and
lcall
mov
mov
pop
push
mov
push
and
lcall
stos
xorl
js
or
inc
add
pop
xchg
lds
dec
or
push
mov
fidivrs
lock
or
std
fs
cmp
inc
sbb
test
leave
or
inc
mov
loope
xor
sarl
stos
and
test
or
out
mov
pop
lahf
inc
inc
daa
add
jg
sbbb
imul
cmp
loopne
xchg
adc
xchg
lds
lock
xor
or
fnsave
data16
xchg
mov
push
js
xor
mul
sub
jmp
sub
cmp
pop
mov
ss
pop
sub
shll
fs
inc
fisubrl
lcall
pop
iret
je
insw
dec
xchg
cmpsl
sbb
sub
aad
loope
lea
and
pop
adc
stos
lock
jns
mov
shrb
xchg
jmp
jmp
jo
shl
jp
xchg
push
hlt
addr16
lretw
inc
ja
in
fidivrl
clc
jb
lods
add
xchg
pop
cmp
mov
mov
insl
and
or
push
push
pop
xchg
aam
and
ljmp
cli
mov
inc
ds
mov
aam
cli
mov
aas
lds
mov
pusha
int
into
mov
add
rcr
int3
mov
ret
sahf
jb
xchg
test
nop
pop
addl
icebp
jp
mov
xorl
repz
add
loope
mov
mov
mov
mov
lds
or
ss
add
call
les
insb
push
fs
or
mov
das
pop
sti
or
dec
cmc
loope
rcr
mov
in
push
ds
jg
cmpsl
pop
addr16
mov
sbb
shrl
mov
hlt
add
sub
scas
enter
lcall
adc
int
ret
ljmp
outsl
insl
imul
adc
inc
mov
inc
cmp
xor
imul
mov
mov
cmp
mov
not
in
loope
or
xor
loope
fs
push
xor
cmp
mov
pop
mov
push
dec
int3
cmc
adc
or
adc
or
or
shl
daa
dec
xchg
loop
mov
jns
inc
setne
pushf
pop
fisttpl
in
outsl
cmp
or
das
outsl
adc
jmp
loope
icebp
mov
cs
cs
pop
mov
dec
lods
inc
pusha
xor
insb
repnz
mov
push
mov
ss
mov
or
outsb
cmp
dec
xchg
lds
inc
sbbl
sarl
push
test
cli
cmp
or
fiadds
scas
sbb
cmpsl
xor
and
les
jg
cli
out
enter
fildll
mov
imul
inc
or
jp
js
and
testl
mov
pop
adc
data16
cmc
mov
ljmp
mov
loope
sbb
adcl
cmp
sahf
negb
mov
pop
repnz
ret
and
pop
inc
mov
lret
clc
imul
sbb
mov
cmp
add
push
in
add
fists
or
xchg
add
rol
pop
stc
and
dec
mov
or
cmpsb
mov
jp
mov
dec
mov
subb
or
int3
jle
xchg
add
jmp
mov
jno
ret
xor
and
je
cwtl
bound
cmp
stc
shlb
sub
sahf
popf
rclb
cmp
xor
in
pop
pop
addb
stos
pop
stos
scas
fisttpl
pop
mov
imul
push
xchg
inc
adc
inc
daa
pop
xorb
out
mov
orb
gs
mov
in
xchg
sbb
mov
rcrb
in
mov
lds
and
inc
repz
iret
ja
inc
xchg
cmp
negb
int3
mov
mov
lret
pop
sub
mov
scas
mov
addl
pusha
sbb
inc
into
xor
orb
pop
cmp
mov
jp
movsl
daa
aad
ret
mov
in
ja
cmp
add
gs
js
adc
xchg
mov
popa
xchg
sahf
rcl
xchg
iret
mov
xorl
jmp
hlt
push
sbb
or
xlat
add
sub
repz
bound
int
mov
and
icebp
aad
lock
or
mov
push
ds
fldcw
dec
sti
pop
mov
xlat
adc
mov
xchg
addr16
mov
ficoms
les
and
test
fisubrs
push
lretw
scas
jge
stos
lea
das
shrl
sbb
in
or
inc
outsl
pop
jp
push
aad
shll
test
mov
daa
cmpsl
inc
add
aam
sub
jb
sbb
dec
xor
lret
cmp
adc
movsl
mov
jl
jge
adc
fwait
movsl
jle
pop
add
cli
sub
iret
shlb
xchg
sub
inc
pusha
mov
loop
cmp
leave
stc
fst
fistps
loop
sbb
icebp
fwait
mov
cmp
data16
dec
xchg
repnz
mov
adc
push
out
xchg
je
sbb
adc
jg
ret
icebp
jle
jl
and
cli
push
int3
jge
in
pushf
push
adc
test
xchg
xor
adc
adc
mov
iret
push
ret
and
inc
jge
nop
and
lret
repnz
sub
stos
sbb
leave
test
jo
sub
test
and
mov
push
in
inc
jb
sahf
xor
lods
roll
pop
out
push
addr16
lods
out
imul
jg
mov
mov
push
mov
lea
dec
adc
sbb
mov
mov
shlb
add
push
shr
testl
aas
add
outsl
fistps
test
push
cmp
imul
add
jmp
and
popf
sbb
mov
dec
pop
mov
sub
inc
mov
pop
inc
loop
dec
iret
dec
and
dec
sub
cmp
cs
or
lcall
fcomps
dec
mov
cli
sahf
xor
adc
or
xchg
and
stc
bound
out
daa
jge
cmp
lret
orl
out
or
ds
fdivrs
xchg
mov
sbb
stos
and
test
inc
sbb
and
sub
cmp
daa
inc
and
shll
mov
push
push
in
mov
jmp
push
shlb
dec
les
ljmp
or
dec
xor
shrb
int3
fs
xor
es
dec
jge
xchg
push
adc
fadd
and
int
and
xor
cs
cmp
in
mov
fnstcw
xchg
ljmp
push
inc
sbb
outsl
lret
test
push
mov
mov
jmp
hlt
xchg
out
repnz
dec
sbb
outsl
mov
std
sub
push
or
shlb
push
pop
movsl
lods
mov
cmc
adc
and
xor
jnp
pop
aam
ljmp
sbb
pop
sbb
xor
jno
ds
je
cwtl
mov
cmp
or
jns
xor
lock
pop
cwtl
popa
stc
inc
jns
adc
adc
sub
pop
into
sub
inc
lret
cmp
jbe
push
jg
xlat
and
dec
pop
sub
adc
out
fistpll
inc
and
gs
pop
sub
cmc
pop
test
xor
mov
mov
xlat
cmp
xor
inc
sub
mov
cmp
inc
mov
ficompl
cmp
ss
xchg
daa
les
jb
int
dec
mov
xor
js
ja
movsb
adc
test
rorl
xor
adc
cwtl
mov
mov
mov
add
mov
sbb
idivb
mov
push
fxch
adc
jge
cltd
add
mov
jae
dec
cmp
es
jns
daa
ret
les
adc
fistl
in
cld
add
inc
mov
cmpsb
addb
mov
bound
aas
ficoms
mov
cltd
bound
and
lods
mov
adc
add
dec
sar
insb
mov
repz
loop
out
jecxz
in
cmc
jp
mov
pop
leave
mov
aad
mov
or
dec
xchg
adc
jp
pushf
lea
outsb
or
inc
icebp
and
jne
adc
mov
xor
mov
fwait
mov
mov
cmpb
inc
in
aaa
sbb
sub
pop
and
pop
xlat
jnp,pn
aam
insl
mov
sub
xorl
test
mov
std
inc
push
lret
call
pop
dec
ficomps
jmp
xchg
sub
dec
jbe
data16
push
and
push
ja
movsb
fsubrl
add
cltd
mov
mov
imul
int
and
sahf
sbb
mov
subb
arpl
pop
jl
mov
ret
mov
push
sti
xor
rcrb
xchg
xor
lahf
into
fisubs
mov
mov
test
not
xchg
jecxz
outsl
mov
std
push
pop
lret
push
mov
frstor
pop
xor
xchg
mov
sbb
lcall
rcll
xchg
shlb
cltd
fisttpl
pop
push
incl
adc
cmp
mov
add
cmp
inc
test
test
ljmp
add
aam
dec
or
fiadds
xchg
ds
mov
subl
out
ret
shrb
shll
out
lock
jae
xchg
out
cmp
aam
pop
sarl
pop
aad
add
jp
faddl
mov
adc
xchg
in
push
cmp
adc
loop
xchg
sub
lahf
xchg
and
mov
push
cwtl
nop
inc
jl
sub
ret
jge
dec
mov
adc
cmp
lcall
call
push
insb
stos
hlt
ds
inc
cld
aad
scas
sbb
jno
out
movsb
mov
or
pop
push
jmp
mov
fsubs
pop
xchg
fldcw
lods
popl
pusha
jb
aam
fistpl
fiadds
icebp
pop
xchg
andl
mov
push
nop
and
add
std
mov
mov
mov
ljmp
in
xor
and
xchg
jl
repnz
adc
push
sbb
sub
int3
lock
mov
adc
in
and
xorl
xor
mov
jg
cmp
cld
lods
subl
hlt
incl
xchg
cltd
pop
mov
cmp
sub
dec
pop
das
in
fnstenv
add
aaa
or
pusha
imul
cmc
inc
jae
aas
rcrl
xchg
insl
adc
ja
imul
jnp
inc
add
mov
movl
addl
loop
jo
dec
hlt
pushf
out
xor
jae
div
or
dec
testb
movsl
fimuls
sarl
imul
sub
out
jns
rorl
xchg
popa
mov
push
inc
xchg
shll
push
mov
sbb
push
push
out
movsl
mov
movsl
das
fisubrs
xchg
xchg
ret
lock
or
mov
add
cmc
stos
pop
mov
push
lahf
push
rcll
das
shrb
movsl
mov
ss
or
orl
ja
fnstsw
aam
sub
aad
js
fcoms
jno
les
aam
out
aaa
arpl
into
scas
mov
test
cmp
pusha
repnz
cs
pop
fcmovnb
push
cltd
in
shlb
lret
data16
out
mov
hlt
fwait
lret
cmpsb
gs
pop
test
shl
jmp
repnz
cmpsl
ret
cltd
cmp
insb
inc
xor
jno
sub
cltd
mov
shr
fnstcw
jecxz
xchg
inc
loope
mov
call
xlat
jmp
sti
cs
push
mov
fwait
orb
mov
mov
mov
aam
out
jb
lods
arpl
int
ds
cmpsl
xor
call
mov
ficoml
mov
pushl
cwtl
test
pusha
and
cmp
rcrl
out
pop
inc
mov
mov
fwait
outsb
sbb
pop
fxch
into
outsb
push
cmp
lods
mov
addb
aas
pop
pop
jae
sbb
cld
jmp
pushf
jo
add
cmp
std
xchg
sbb
xor
mov
or
sub
add
push
in
sub
mov
rclb
in
adc
mov
jl
pop
inc
out
push
dec
lock
inc
jo
add
sbb
sub
xchg
inc
sbb
sub
std
mov
pop
in
jns
xor
cmp
fnstsw
fmul
test
inc
pop
scas
hlt
mov
lahf
out
enter
xchg
fsubs
add
xlat
sbb
iret
push
clc
arpl
and
mov
push
je
dec
pop
adc
cmp
addl
mov
test
int3
leave
insl
xor
dec
push
fst
dec
push
xchg
jecxz
jecxz
ret
mov
pop
cmpsb
push
or
adc
jns
es
mov
decl
cmpsl
push
mov
jecxz
stos
sbb
inc
sbb
and
pop
mov
mov
jo
dec
jge
rclb
pop
loopne
mov
bound
jp
test
mov
outsb
jo
push
out
in
loopne
pop
fxch
data16
push
dec
fwait
mulb
inc
mov
iret
lret
lods
mov
outsb
cmp
dec
ja
mov
adc
mov
mov
popa
call
fwait
ret
or
cmpsl
ss
xchg
sti
pop
or
cmp
cmp
out
mov
iret
out
xchg
loopew
xlat
jb
lds
out
or
aas
es
xchg
xor
ss
dec
cmp
dec
ja
sub
dec
inc
add
ffreep
outsb
loope
jg
or
and
arpl
sbb
cwtl
mov
cmp
pop
fisttps
jae
test
dec
jnp
fimuls
ret
or
adcb
adc
addr16
pop
in
adc
testb
int
fbld
out
lds
pop
mov
call
cwtl
jle
push
addr16
sar
mov
out
xchg
mov
inc
gs
repz
jbe
mov
dec
pop
jae
jbe
xor
faddl
cli
mov
in
adc
adc
fldcw
les
roll
add
int
jmp
cmp
insb
pop
xchg
mov
and
dec
xchg
adc
ret
push
test
mov
add
and
ljmp
mov
mov
mov
mov
ret
jbe
sub
jnp
and
mov
sbb
leave
shlb
scas
in
loope
cmpb
dec
insl
mov
enter
loopne
repz
push
jnp
adc
add
sbb
xchg
mov
xor
xchg
jbe
shl
push
sub
gs
jne
rorb
fsubl
adc
mov
and
mov
add
inc
sbb
in
in
jmp
int
jo
sub
aad
subl
dec
sub
inc
es
xchg
lods
jno
jle
lods
jns
test
in
mov
jo
add
sidtl
xchg
jg
ffreep
xor
test
jns
pop
pop
nop
mov
jp
sbbb
aam
int3
cmp
adc
adc
mul
inc
push
fildll
jo
pop
pop
je
hlt
out
sub
xchg
xor
add
jo
mov
add
sbb
outsb
lods
or
inc
inc
mov
xor
bound
and
lcall
adcb
outsl
fsubl
cmp
mov
sarb
insl
jns
mov
mov
outsb
cmp
cmp
jnp
aas
xor
adc
mov
pop
rorb
das
xchg
pop
mov
jmp
dec
mov
sub
test
imul
add
or
xor
xchg
in
cmp
dec
fsubl
cmp
sub
sti
inc
pushf
or
fisubs
cmp
jns
insl
dec
xchg
jns
loope
push
push
xchg
xor
sbb
dec
cmp
jp
insl
jae
add
or
ficomps
outsb
or
aad
cmp
js
gs
pusha
cmp
jbe
sarl
aas
xor
cmpsb
xor
add
cmp
stos
mov
xchg
ljmp
lods
mov
cmp
mov
out
shl
lret
xchg
cmp
push
adc
mov
pop
push
jno
mov
mov
push
repz
add
xchg
jmp
inc
cmc
sub
cld
jmp
nop
xchg
pop
and
fwait
test
std
mov
inc
mov
inc
lret
xchg
xchg
popa
out
mov
mov
sbb
mov
gs
loopne
and
dec
dec
jmp
int
rcll
jns
int
lahf
dec
subb
fsubrs
or
dec
aas
push
mov
out
push
jae
lret
shlb
lds
test
sub
sbbl
negl
push
imull
insb
push
jmp
cs
pop
inc
adc
stc
fists
pop
cmp
push
aad
lret
jmp
inc
dec
repnz
push
aam
xchg
mov
or
xchg
dec
mov
inc
lahf
xchg
dec
notl
and
inc
and
push
jl
in
pop
inc
dec
popf
fwait
sbb
sbb
push
lea
fsubl
dec
mov
dec
dec
jmp
jbe
outsb
inc
shlb
lds
jmp
xchg
stc
inc
jns
fdiv
das
mov
xor
movsw
popa
es
push
cmpsl
loopne
ljmp
push
fs
fbstp
fadds
push
call
fsubl
repz
iret
mov
xchg
push
mov
cmc
mov
dec
fbld
dec
insl
or
ja
jns
xorl
inc
faddl
dec
and
sub
cmp
aam
shll
dec
or
and
test
mov
or
xor
or
inc
mov
mov
or
sbb
das
xchg
clc
test
leave
pusha
mov
or
subb
xchg
mov
sahf
xchg
push
das
test
lret
xchg
adc
mov
cmc
repz
sub
push
push
bound
and
mov
aam
mov
out
out
lret
cmovno
fnsave
ljmp
fistpl
rcrl
ret
jo
push
outsb
mov
push
daa
std
mov
cwtl
inc
adc
xlat
pop
ja
xchg
ds
pop
cwtl
addr16
fbld
sahf
push
ret
sbb
outsb
adc
pop
sub
test
pop
cmp
jb
sub
pushf
outsl
aad
xor
adc
add
push
in
test
adc
ss
cmpl
inc
enter
scas
or
icebp
or
push
or
adc
sbb
dec
add
xlat
cmpsl
popa
inc
mov
in
lret
int3
jae
inc
and
or
mov
inc
jno
xchg
loop
mov
xor
pop
adc
cld
mov
mov
int
mov
out
lds
pop
push
push
xor
in
fistpl
sub
icebp
xor
mov
ja
stc
out
js
lock
mov
mov
push
sti
fmull
xchg
fcompl
leave
jp
jle
lret
inc
cmpsl
lock
into
clc
out
sub
jns
ret
jb
inc
xchg
mov
xor
repz
and
lret
sub
and
lret
jbe
ja
inc
mov
das
adc
push
dec
cmp
jmp
adc
cmp
out
pop
push
mov
inc
add
ss
cmp
test
jns
std
loop
xchg
pop
cmp
xchg
andb
leave
mov
mov
mov
out
hlt
xchg
and
and
pop
outsl
jne
aas
or
sub
jge
cltd
out
repz
mov
sarl
mov
xchg
stos
jo
jae
cwtl
mov
adc
push
fstp
cltd
mov
bound
pop
and
cmp
push
jle
sbb
cmp
in
lods
loopne
insl
lods
xchg
out
xor
inc
or
jl
mov
int
mov
arpl
mov
repnz
push
mov
pushf
test
sub
add
cltd
lds
shll
stos
imul
adc
pop
mov
data16
adc
fs
xor
jg
xchg
shl
outsb
mov
push
mov
push
push
imul
in
fiadds
cmp
jle
add
sbbb
fldl
jbe
int3
xchg
xchg
or
cs
aaa
mov
test
stos
jno
ds
pop
jae
mov
jp
add
inc
mov
pop
xor
and
inc
xor
sub
and
ja
cltd
rclb
imul
lods
xchg
arpl
xchg
push
jne
or
aad
push
jmp
sbb
push
cmpb
dec
pop
push
mov
repz
sarl
add
outsl
scas
pop
inc
gs
jmp
test
insb
mov
jno
fcmovnu
add
sbb
or
mov
jmp
xchg
in
stc
cld
leave
aad
mov
adc
sub
add
ficomps
xlat
stos
xor
rcrb
mov
or
push
in
loop
adc
xchg
ljmp
lock
jle
lea
jle
lahf
hlt
sbb
or
pop
lcall
lcall
sqrtps
push
shrl
cmp
test
sbb
cmp
sbb
cmp
test
jmp
das
or
lods
dec
xor
cmp
cli
inc
xor
xor
out
das
scas
dec
sub
xchg
fisubl
lcall
sub
xchg
fcmove
add
or
jns
mov
aas
cmp
fmul
mov
popf
adc
push
push
sahf
dec
mov
mov
adc
andl
aad
sub
pop
inc
xchg
in
xorb
mov
sub
pop
or
into
aas
inc
add
and
adcl
or
frstor
xlat
and
mov
inc
or
push
into
popa
lcall
mov
push
cmp
adc
dec
scas
xlat
jbe
hlt
test
jne
jle
outsl
sti
cmpsl
xor
cmp
pop
jg
gs
aas
xchg
ja
jge
cmp
fisttpll
jne
xchg
jp
jle
in
aaa
scas
inc
push
pushl
gs
xchg
add
inc
aaa
jle
xchg
insl
dec
pop
data16
int
add
push
xor
sbb
mov
push
add
jo
lahf
pop
leave
or
sub
jnp
aas
jnp
imulb
sahf
push
push
inc
movsb
int3
mov
xor
ja
pop
pusha
xor
scas
incl
stos
movsl
jbe
sbb
mov
dec
push
add
mov
mov
jp
adc
push
ljmp
repnz
xor
gs
sbb
xchg
repz
testl
cmp
or
xor
jno
sbb
shl
mov
rcl
cmp
ret
stos
xchg
lret
negb
mov
xor
adc
xor
lods
mov
cmp
sub
xor
aam
mov
dec
add
mov
sti
pop
pop
cmc
mov
cmp
lahf
es
out
cmp
xor
dec
aaa
sub
pushf
ljmp
and
test
add
gs
jg
enter
xchg
xor
xor
or
xorb
push
inc
daa
cmp
xor
addr16
cmpsb
sub
sbb
imul
mov
test
jb
sub
or
rclb
push
xchg
push
in
push
ljmp
clc
jecxz
out
jg
fwait
shl
pusha
add
mov
test
or
in
inc
lea
xchg
jecxz
mov
notl
out
sub
dec
loopne
jne
jae
or
push
aaa
mov
mov
out
cmp
xor
jne
mov
insl
stos
call
out
cmp
addr16
xchg
aas
push
xchg
addl
adc
pop
xchg
hlt
mov
sbb
inc
cmp
xor
xchg
fnstsw
and
jns
dec
imul
loopne
imul
pushf
aas
lea
cmpsl
mov
inc
stos
daa
xor
ja
loop
mov
mov
mov
cltd
xchg
jbe
jb
mov
int3
push
xor
mov
push
dec
dec
pop
dec
ss
and
ret
loop
inc
xchg
movsl
pop
sarb
mov
mov
push
push
push
sub
in
stos
rolb
into
call
jp
xchg
std
stc
pop
cld
aad
sub
js
dec
fcoms
or
xchg
xor
cmc
loope
sub
ret
lock
out
jae
outsl
loope
adc
scas
sbb
cmp
and
jecxz
dec
dec
mov
fisubl
lods
push
fsubs
jle
jno
sbb
cwtl
pop
addb
mov
xor
repz
cli
lret
nop
sub
stos
es
push
aam
icebp
ja
je
sbb
inc
push
loopne
push
push
xchg
and
dec
repnz
movsb
aas
dec
sarl
cmp
repnz
xchg
sti
inc
mov
push
sub
lahf
jne
aam
jg
sub
test
dec
inc
cmc
ljmp
lods
xchg
cmp
into
stos
cmp
stos
add
xchg
ds
pop
rcl
push
loope
aaa
add
mov
enter
xor
int
adc
add
jo
add
or
test
cmpsb
and
pop
aas
jno
dec
pop
out
mov
imul
push
mov
shll
fadds
pop
and
pop
cmpb
xchg
test
mov
jb
test
sbb
lock
sbb
adc
adc
pop
sub
mov
add
and
xor
in
push
pushf
out
cld
aam
jbe
pop
ja
pop
push
sbb
pop
inc
cmpsl
xor
loop
cmp
pop
cmpsb
push
pop
dec
cmp
adc
dec
push
data16
xor
addl
cmpsl
in
cmp
es
das
and
lods
imull
sub
xor
std
dec
out
push
mov
mov
fmull
push
les
int3
mov
mov
dec
in
dec
and
fstpl
and
pop
out
outsl
in
xchg
or
push
or
jg
push
add
mov
lret
in
push
test
mov
sub
push
mov
sub
lock
push
fdivs
in
sub
fninit
xchg
sub
jne
adc
pop
cmp
ficoml
roll
stos
scas
jle
outsb
lcall
mov
add
dec
out
nop
fs
cmp
rcll
hlt
data16
jbe
mov
dec
data16
inc
and
mov
pop
mov
push
flds
mov
icebp
orl
push
into
lcall
insl
inc
mov
jg
leave
ret
dec
mov
mov
cmpsl
xchg
mov
sbb
cld
dec
dec
cmp
cmp
cmp
sub
fbstp
xor
outsb
dec
lea
jns
testb
outsb
aas
stos
sbb
mov
push
out
push
mov
fmul
icebp
push
mov
and
sub
cmpsl
sub
inc
imul
ljmp
cwtl
notb
push
and
ja
inc
clc
push
aad
in
in
call
imul
int
mov
push
jne
jge
fisubl
cmc
loope
mov
and
xor
int
cmp
lods
inc
adc
test
cmp
dec
hlt
clc
loopne
mov
or
sar
jge
mov
adc
jbe
mov
icebp
fsubl
fs
xor
cmp
icebp
mov
movsl
xchg
jp
cmp
loop
pop
inc
xchg
jmp
arpl
pop
pop
mov
cmp
xor
rclb
add
push
shlb
pop
xchg
jo
cmc
mov
adc
pop
loop
sbb
aad
sub
push
sbb
mov
xor
xorb
sbb
in
into
or
push
push
and
pop
jns
imul
push
stos
and
andb
inc
mov
pop
insb
test
pop
movb
dec
ljmp
pop
xor
sub
jb
xchg
fs
into
dec
pushl
xchg
stos
push
lock
sub
lret
test
lret
cmpsb
adc
in
sub
or
push
mov
aas
fnstcw
popa
idivl
and
hlt
orb
jnp
test
scas
add
data16
inc
xchg
lds
sarl
xor
lcall
inc
repnz
out
loopne
sbb
data16
loope
sub
fistl
ja
inc
and
mov
pop
inc
lods
push
jp
movsl
xchg
iret
out
jne
mov
addl
push
dec
sbb
lea
mov
aad
das
pop
jge
jnp
mov
xor
add
popa
pop
ds
sahf
js
arpl
cmp
xor
jne
loopne
sub
and
fnstenv
fmulp
adc
in
pusha
jns
fstl
aam
cmp
pop
adc
dec
mov
xchg
mov
adc
push
or
and
int3
lods
push
lods
leave
pop
jge
xlat
imul
fstpl
hlt
in
dec
or
inc
and
or
shlb
xchg
push
push
imull
hlt
or
cmc
mov
mov
sub
popa
or
mov
xchg
fs
mov
cmc
cltd
popa
jl
jbe
mov
add
sub
mov
jmp
in
fidivs
shll
sbbl
aam
test
shrl
mov
xchg
shlb
arpl
std
shlb
inc
sub
cld
pop
popa
inc
jo
cmp
sbb
mov
xor
jnp
fs
pop
fadds
inc
jecxz
hlt
arpl
push
push
add
dec
mov
mov
or
pusha
push
and
and
divl
es
pusha
fsts
xchg
idiv
cs
ljmp
sbb
lds
xchg
iret
sub
fisubl
pop
imul
aam
sbb
fprem1
faddp
mov
divl
daa
pop
fcmovnbe
sub
pop
add
out
adc
outsl
jnp
jge
aas
push
mov
dec
push
mov
test
push
sbbb
in
mov
sub
sub
push
adc
xchg
and
add
jae
lods
or
or
daa
jg
stos
mov
mov
int
clc
cmp
mov
mov
dec
dec
jl
sbb
cmpsb
insl
xor
pop
push
pop
and
invd
xchg
mov
enter
dec
pusha
xchg
adc
inc
shlb
scas
or
jecxz
divb
jns
nop
jge
outsl
fcoms
and
mov
int
mov
adc
push
roll
les
in
adc
out
sbb
movsl
or
scas
popa
cmp
sahf
jbe
mov
add
scas
data16
push
into
loopne
data16
add
aas
shlb
add
pminsw
fsubs
in
out
ds
mov
shlb
add
cmp
mov
mov
pop
and
movsb
sahf
es
int3
lock
push
sub
fcompl
test
vmptrld
jg
push
add
imul
dec
cmp
mov
xchg
inc
inc
fiadds
pop
cmp
push
sub
je
push
adc
subb
lock
and
pop
enter
fsts
push
add
lret
sbbb
jecxz
mov
adc
stos
and
out
pop
sbb
sbb
decl
fcomps
insl
push
insl
mov
dec
xor
jo
pushf
in
inc
xchg
dec
jle
out
addr16
out
ret
sarb
out
sti
cmpsl
std
hlt
jle
xchg
sti
dec
mov
pop
adc
aaa
ljmp
icebp
pop
adc
mov
and
pushf
repz
repz
push
cmpsl
sub
mov
orl
xchg
push
jbe
xchg
mov
lds
xlat
cmpsl
or
push
movups
in
ja
adc
cwtl
call
aam
add
out
pop
cmpsl
mov
out
out
test
test
scas
ror
adc
jo
cltd
icebp
xor
pushf
sbb
std
xor
fdivrp
mov
mov
xchg
dec
add
in
jg
sbbb
fwait
push
dec
mov
loopne
jg
in
fwait
jmp
hlt
out
in
repnz
xorb
decl
cmpl
lcall
mov
int3
sarb
mov
mov
into
xor
cmp
push
xor
pop
ljmp
mov
fistpll
pop
call
iret
iret
hlt
or
enter
imul
xchg
add
shll
iret
dec
fmulp
mov
jae
xchg
mov
cmpsl
fisttpll
mov
dec
push
imul
movsl
sub
addr16
lock
fsubp
push
cltd
pop
xlat
stos
xchg
add
fnstsw
pop
data16
imul
lds
push
add
lret
mov
sbb
test
int
xchg
adc
mov
aas
push
push
jbe
or
dec
cmpsb
cltd
in
fwait
pop
lret
inc
pop
mov
lea
sbb
xlat
out
clc
mov
inc
loope
cs
add
mov
jns
push
mov
inc
jb
lea
mov
dec
nop
add
imulb
xchg
lods
xchg
mov
push
jbe
imul
orl
stc
sub
push
bound
stos
mov
xor
mov
mov
push
xchg
gs
mov
rcl
jno
pop
dec
sahf
in
mov
inc
xchg
scas
into
mov
out
add
dec
mov
dec
fnstsw
xchg
aas
mov
add
lods
imul
cmp
push
insl
loopne
pop
dec
mov
js
and
xlat
aad
pop
lock
lds
lcall
pop
test
test
cmp
push
pop
and
std
jecxz
pop
repnz
jmp
mov
cmp
sub
sub
sbb
push
mov
dec
push
pop
pusha
lahf
push
mov
inc
push
sub
fnsave
mov
mov
pop
dec
pop
sti
stc
popa
aam
sub
ljmp
jb
xchg
sti
movsb
fcmovnu
dec
nop
jmp
loopne
mov
outsl
arpl
repnz
add
cli
xchg
add
pop
mov
mov
pop
cmpsb
mov
dec
lahf
mov
data16
push
shl
adc
cmpsl
inc
andb
adc
mov
rcrl
xor
adc
push
das
mov
or
in
jbe
add
mov
adc
leave
dec
cld
iret
mov
sbb
and
jmp
insb
dec
jno
or
repnz
push
push
xchg
aas
stos
inc
pop
cmp
bound
fs
fsin
dec
xor
cmc
mov
rorl
sbbb
xor
mov
jae
icebp
in
into
subl
cmp
outsb
outsb
mov
push
out
gs
adc
xlat
push
adcl
push
iret
and
into
enter
adc
pop
pop
cmp
pop
xlat
and
out
insl
popf
dec
push
cmp
sub
out
sbb
push
inc
shld
inc
xchg
sub
in
add
idivb
negl
jmp
in
lock
ljmp
outsb
scas
inc
adc
das
add
aas
mov
dec
xchg
sbb
mov
xchg
sub
push
andb
lds
pop
add
sub
lock
dec
or
push
mov
popf
subl
in
mov
pop
andb
push
push
pop
out
pop
sub
pop
cmp
cmp
les
mov
mov
movsl
mov
sub
dec
cmc
sub
push
cld
fistpll
fiadds
imul
dec
loop
dec
stos
or
mov
icebp
stos
cld
push
lahf
test
push
inc
jmp
xchg
sub
or
fisttpll
in
sub
das
mov
hlt
arpl
in
out
pop
iret
xchg
int3
rorl
lds
sub
adc
xchg
cmp
outsl
punpcklwd
ljmp
inc
pop
mov
sti
inc
aam
xor
outsb
pop
and
mov
ss
pop
xchg
sub
out
pop
aad
add
std
cmp
sub
mov
es
dec
mov
fistpl
or
int
imul
fucomip
mov
or
enter
repz
fsubp
outsb
scas
xchg
mov
sbb
bnd
loope
pop
cmp
xchg
je
inc
scas
adc
push
pop
mov
into
and
ds
pop
jmp
aas
xor
mov
mov
cmc
jmp
xchg
sahf
inc
lahf
or
dec
outsl
xor
sarb
jbe
int3
adc
mov
scas
loop
inc
or
add
push
clc
sub
orl
mov
in
pusha
push
pop
jb
in
xlat
stos
jl
dec
adc
movsb
and
xor
sub
loope
das
leave
push
test
loope
adc
add
loopne
aad
push
dec
daa
jmp
aad
je
fisubrl
lret
xor
push
sbb
call
and
cwtl
sub
pop
dec
sub
xchg
push
or
sub
aad
xor
pop
push
dec
push
loop
and
sarl
cltd
xchg
popl
out
repnz
inc
std
mov
adc
lret
push
ret
call
arpl
mov
nop
jge
out
xor
jmp
mov
into
pushf
mov
ficoms
fcoml
popa
jae
outsl
in
xchg
call
std
imul
das
imul
dec
leave
mov
sub
dec
add
shll
insb
aaa
gs
mov
cmp
nop
xchg
mov
repnz
cmp
cmpl
out
cmp
movsl
mov
stos
jecxz
lock
xchg
pop
fincstp
rclb
xchg
loop
pushf
mov
dec
xchg
test
fnsave
mov
scas
lea
enter
daa
test
repz
and
mov
adc
mov
loop
push
sub
push
pop
or
bound
dec
dec
repz
call
mov
sarl
js
xor
fisubl
jnp
fsts
sbb
lea
test
sahf
add
mov
push
xor
cmpsb
mov
ss
hlt
cmp
jp
mov
aad
or
into
ret
or
mov
xchg
pop
mov
push
sub
push
jge
inc
lahf
sarb
cmp
andb
adc
add
repz
aam
mov
mov
stos
movsl
pop
cltd
jo
add
pop
sub
leave
jns
jae
and
lods
jp
xchg
ss
pop
les
iret
and
pop
and
pop
das
or
lock
mov
shlb
leave
xlat
xchg
mov
bound
cmpsl
lds
nop
insl
mov
aas
or
push
mov
pop
or
fldt
mov
lret
jp
mov
mov
pop
rol
xlat
outsb
aaa
dec
outsl
pop
mov
das
test
std
das
aaa
pop
jle
sbb
insl
das
adc
inc
iret
sbb
test
mov
aas
cmp
mov
cltd
addr16
sub
lret
cwtl
dec
jecxz
movsl
mov
xorl
in
push
dec
jg
push
les
cmpsb
fdiv
addr16
aad
push
pop
add
jnp
in
jno
xchg
mov
or
daa
mov
push
push
add
xchg
scas
mov
nop
mov
ret
out
mov
pop
dec
or
aaa
inc
in
mov
inc
cmpsb
sub
xchg
data16
sbb
ljmp
cltd
lods
sbb
jmp
sub
mov
pop
inc
dec
pusha
push
pop
xor
fnstenv
neg
mov
mov
aad
mov
mov
out
push
es
cmp
and
ds
push
pop
mov
adc
cmpl
std
rcrb
ljmp
mov
push
arpl
xchg
out
insl
or
sbb
cmp
call
fcoml
dec
push
sti
pop
dec
jns
mov
or
stos
inc
testb
push
xchg
out
or
adc
insl
rorb
in
decl
jo
sti
lahf
je
loope
push
jp
jp
loopne
sbb
test
push
and
pop
out
mov
adc
idiv
aam
inc
add
loop
addr16
shr
popa
pop
lret
pop
popa
pop
in
and
jbe
in
pop
mov
jecxz
adc
cmp
popf
cmp
mov
cltd
fs
rol
lock
jns
fcmovne
popf
adc
fstps
sbb
xchg
lds
ret
notb
jl
and
iret
incl
aas
in
and
fmuls
or
push
out
leave
push
stc
xor
push
in
popf
mov
out
mov
ja
out
mov
test
mov
push
into
sub
adc
cmp
xchg
mov
lret
mov
mov
xor
xor
cmc
inc
dec
repnz
pushf
popa
push
push
outsl
nop
adc
adc
xchg
xchg
pop
ss
jo
sub
add
inc
sti
xor
jb
in
leave
dec
loop
adc
lds
es
dec
and
ret
int3
sbb
mov
jne
es
cmp
gs
fistpll
lock
or
mov
mov
pushf
fisubs
into
push
cmp
fdivp
push
lods
imul
xchg
jne
addr16
add
pop
jb
push
pushf
repnz
dec
enter
fiaddl
ljmp
xlat
push
cwtl
inc
rcrl
pop
dec
jae
les
inc
movsl
inc
loopne
arpl
cmp
mov
outsl
inc
pop
pop
cmp
push
xlat
stc
ficompl
xor
movsb
fcmovnb
movsb
push
jge
lret
es
loop
push
cltd
dec
mov
ss
rorb
pop
fcom
jo
mov
mov
cltd
ja
mov
mov
cs
add
loope
add
icebp
add
or
repz
mov
jge
rorb
mov
ja
sub
and
lock
test
sbb
mov
ja
ds
idivl
jg
stos
cmp
mov
pushf
mov
scas
daa
repnz
xchg
xor
push
clc
fcoms
jns
idivl
imul
jecxz
les
in
sarl
and
pushf
xlat
sub
movsb
xchg
xor
mov
inc
fldl
or
jle
sub
adc
jg
add
ja
das
dec
inc
pop
mov
sarl
adc
xor
adc
mov
sub
pop
gs
lcall
cltd
test
xlat
push
popf
imul
inc
xor
cmp
lret
mov
mov
pusha
or
sbb
out
cmp
fs
push
negl
jbe
hlt
popf
mov
mov
and
mov
lret
lock
ss
fs
cmp
xchg
add
insb
andb
sub
and
mov
and
call
adc
xor
mov
cs
adc
xchg
inc
lahf
dec
jl
roll
jbe
adc
pop
mov
sbb
lcall
xchg
call
aad
les
test
nop
or
test
outsb
mov
outsb
xchg
scas
xchg
aaa
ss
mov
out
jmp
cmp
jg
push
or
fwait
mov
dec
loopne
inc
loope
insl
insb
inc
sbb
jmp
pop
dec
xchg
jne
jno
cmp
or
inc
or
mov
imul
out
loopne
sub
add
sub
rcrb
movsl
movsb
pop
ret
mov
cmp
hlt
imul
mov
cmp
dec
and
mov
iret
sub
movsb
sbbb
push
xchg
jmp
cmp
inc
jne
mov
cmc
scas
js
dec
insl
shrl
mov
push
nop
cmp
lods
push
scas
and
fnsetpm(287
call
insl
lods
je
cmp
adc
test
lock
into
hlt
jmp
faddl
fcomps
adc
loopne
test
inc
mov
jne
xor
mov
test
mov
jp
test
add
jecxz
lahf
lcall
sbb
bound
xor
fldl2t
cmp
mov
arpl
addr16
or
mov
jmp
jl
repz
movsl
or
inc
or
xchg
rolb
rcrl
loop
jo
mov
push
adc
lock
pop
xor
pop
call
jae
or
mov
pop
jmp
inc
fidivs
movsl
pushf
cmp
lods
loope
shl
push
jmp
mov
dec
sbb
dec
sbb
lods
inc
mov
call
and
mov
pop
negb
ljmp
std
push
mov
jne
in
sbbl
sbb
jo
fwait
scas
pop
sti
sbb
xchg
xor
cs
lcall
adc
mov
mov
pop
mov
lcall
les
xchg
dec
cmp
inc
mov
daa
es
fstpl
push
aaa
inc
and
aas
fadds
les
jl
mov
cwtl
mov
dec
xlat
add
addr16
imul
pop
mov
std
add
cmp
lods
lods
pushf
sbb
aam
ret
push
pushf
dec
mov
jnp
mov
ss
adc
cmp
sbb
pop
or
push
int
sar
cmpb
scas
mov
adc
es
test
sbb
adc
cmp
push
jecxz
lea
outsb
lahf
jne
in
sbb
cwtl
or
jmp
icebp
xchg
in
pop
cmpsb
sar
lret
aad
mov
shrl
or
or
xchg
sub
or
mov
scas
xor
adc
cli
mov
sahf
ffree
mov
fwait
add
mov
sbb
adc
cltd
adc
test
sbb
scas
push
mov
xorb
shlb
cs
cmpb
mov
popa
stos
sbb
or
mov
xchg
frstor
inc
stos
subb
iret
mov
pop
jns
fwait
xchg
inc
jmp
xchg
loop
mov
add
pop
inc
jl
sbb
fisubrl
std
dec
jb
sub
cli
sar
xchg
lahf
push
outsl
push
popf
mov
mov
adc
jp
lret
mov
inc
test
cmp
out
xor
cmp
mov
lahf
adc
subl
xor
mov
pop
outsb
pop
js
inc
mov
xor
jb
push
scas
and
dec
adc
xchg
and
sub
mov
inc
sub
popa
sbb
sbb
sub
mov
fnsave
mov
rcll
cmp
mov
jle
lods
cltd
leave
es
jo
shll
ret
add
arpl
add
xorb
xchg
pop
mov
lahf
sbb
mov
imul
insb
lods
stos
sbb
sahf
mov
jle
mov
ss
xor
xlat
insb
sub
imul
pop
xchg
loop
test
inc
rorl
leave
cwtl
in
sahf
icebp
cmp
dec
add
and
lds
test
in
and
sub
add
xchg
and
xchg
and
adc
insb
clc
pop
xchg
mov
add
cmpsl
dec
das
add
cmp
dec
or
dec
push
aam
push
neg
cmpsb
sbb
cmpsb
insb
xchg
sub
cmpsl
setb
push
cmp
mov
in
jecxz
xchg
es
into
cld
xlat
and
ds
shl
cmp
lock
adc
mov
aas
ljmp
mov
jnp
sbb
test
xor
cwtl
cli
mov
cld
push
xor
lret
jno
pop
lret
push
adc
pop
ja
push
xchg
mov
arpl
sub
push
mov
stos
push
jle
arpl
mov
sub
cmpsb
clc
sarl
push
ds
cmp
rcll
push
adc
out
stos
insl
pop
jbe
sub
push
shrb
stos
mov
rcr
push
sub
pop
inc
scas
adc
pop
pop
push
aad
sbb
scas
sbb
cmpsb
dec
push
hlt
popf
orl
inc
dec
xor
lea
lahf
out
and
push
decb
and
dec
or
cld
inc
mov
mov
mov
test
loopne
mov
xor
mov
dec
cmp
call
adc
push
jmp
xchg
mov
stos
out
xchg
adc
lret
push
out
lcall
mov
or
lds
jg
mov
xor
and
call
ss
mov
mov
ds
fwait
mov
xor
mov
inc
and
movsl
push
jge
jb
inc
dec
nop
dec
jg
lods
iret
loopne
mov
fimull
jge
and
bound
leave
xchg
cmc
bound
das
and
inc
fnstsw
js
lret
in
arpl
sub
les
fs
mov
dec
stos
jmp
or
mov
sbb
jo
xchg
adcl
nop
push
adc
mov
sub
stos
fcomip
pop
add
mull
pop
gs
xchg
fadds
cltd
test
jge
sarb
popa
or
push
jns
std
mov
cmp
out
mov
or
insl
popf
mov
mov
nop
pop
lds
pop
cmpsl
jnp
scas
xor
jmp
cmp
ljmp
addr16
dec
insb
add
pop
mov
pop
or
or
mov
mov
sahf
stc
mov
dec
sub
out
in
imul
sub
sahf
ret
fstl
adc
adc
shr
pop
sub
fcmove
int3
pop
push
sbb
test
and
mov
insb
inc
and
mov
jno
mov
mov
shlb
xlat
fimuls
ljmp
subb
test
dec
repz
jnp
xchg
xor
ljmp
push
sub
inc
mov
xor
sti
pop
inc
in
dec
push
loope
mov
cmp
es
mov
mov
pop
andl
pop
lods
lahf
push
sub
imul
fadd
xlat
mov
inc
pop
cmp
mov
scas
lods
shrl
ss
or
fisubrs
and
jnp
insl
sub
adc
pop
xor
inc
xor
and
cmp
lret
xlat
or
mov
movsl
popf
and
movsb
data16
loop
pop
mov
jg
in
xchg
ljmp
jnp
xchg
hlt
clc
mov
push
push
out
insb
xorb
add
xchg
push
movsl
jbe
ror
push
mov
mov
pushf
cld
mov
sbb
mov
in
inc
or
push
xchg
daa
hlt
or
jo
outsl
call
sub
cld
add
movsb
jge
jl
inc
dec
mov
rolb
stos
jbe
stc
mov
jns
inc
sbb
int3
adc
ret
xor
pop
add
inc
add
inc
pop
repz
cld
xchg
test
sbb
adc
push
push
dec
cltd
cmpsb
insl
outsl
jno
sbb
push
push
mov
cli
das
dec
jo
xchg
push
cmp
pop
push
adc
xchg
pop
jmp
or
jp
lret
adc
mov
xlat
loopne
jo
inc
fidivrl
nop
or
mov
push
add
mov
sbb
cmp
xchg
loop
push
cmp
sbb
rclb
mov
cmp
das
gs
xor
outsb
icebp
and
pop
rcl
jecxz
mov
mov
jns
dec
mov
scas
je
aad
adc
aad
aas
jecxz
loope
out
and
jmp
insb
shlb
jmp
mov
loop
sub
push
lret
pusha
scas
or
add
mov
add
pop
idivb
mov
sub
incl
cwtl
mov
adc
imul
ds
and
pop
outsl
push
lods
mov
pop
xor
in
iret
jg
into
and
icebp
testl
xchg
pop
xor
into
cltd
cmc
fildll
mov
jmp
in
cmp
pop
fld
fisttpll
adc
pop
jmp
roll
pop
mov
adc
or
mov
stos
cmpsb
scas
mov
test
test
or
fimuls
notl
mov
fmuls
push
outsb
rolb
add
movsl
cmp
stc
cmp
cltd
push
cmp
and
lret
ss
repz
xchg
pop
xor
xchg
sti
enter
xchg
dec
sbb
dec
mov
in
xorl
nop
dec
rclb
xor
push
aas
rorl
pop
xchg
sbb
nop
stos
shlb
jnp
cmc
mov
js
lcall
add
or
add
cmpsl
or
lods
xchg
call
jmp
cmp
pop
jmp
stos
in
sub
aad
jne
adc
jg
les
sub
stos
cmc
add
or
and
jg
int
jno
pushf
mov
pop
mov
sub
insb
add
test
xchg
aaa
cmp
jnp
inc
push
imulb
dec
cmp
int3
ja
push
enter
cwtl
movsb
xchg
enter
xor
in
js
add
xor
stos
cmp
idiv
jmp
and
mov
push
enter
sbb
jl
add
and
push
xchg
and
aad
imul
call
adc
pop
clc
xchg
das
and
jbe
and
jne
pop
in
mov
sub
cmp
dec
sub
pop
lret
rcl
jne
lods
adc
mov
pop
xor
mov
pop
sarb
call
jne
sbb
xlat
loop
pop
or
xlat
sub
xor
mov
movsl
shll
cwtl
jl
ds
sub
dec
mov
xorl
aad
push
mov
jo
stos
sub
push
jnp
pop
popa
pop
cmp
hlt
mov
cmp
inc
jno
aam
scas
adc
into
sub
mov
mov
lret
sbb
es
dec
adc
scas
push
pop
stos
out
nop
adc
fdivrl
sub
sbb
jb
push
adc
loope
and
lret
mov
sub
stos
loop
adcb
les
pop
sub
lea
jmp
sbb
rcrl
jo
or
push
jnp
mov
fs
sbb
repnz
cmp
and
js
outsb
pop
mov
push
into
jbe
icebp
inc
jns
adc
cmp
cltd
movsl
fwait
stos
call
adc
mov
lahf
pushf
and
je
lahf
xorb
pusha
pop
scas
sbb
add
xor
sub
sarb
jbe
nop
cmp
es
and
sbb
push
in
loop
dec
cmp
lret
repnz
sub
push
adc
inc
leave
jge
jmp
mov
push
rcl
inc
add
ja
mov
cmc
rol
les
test
aad
add
push
outsb
cmpsb
inc
ds
mov
inc
jnp
xchg
pop
ret
cmp
stos
cmpsb
pop
mov
push
mov
rcll
adc
negb
dec
add
ret
mov
rcll
mov
out
aaa
das
xlat
iret
cmp
jecxz
jmp
fcmove
ret
es
sub
or
insl
mov
ss
fs
inc
sub
mov
pop
cmp
cli
mov
sbb
test
mov
out
pop
ret
xor
lock
insb
xor
in
mov
sbbb
dec
cltd
fadd
jge
push
gs
xor
das
mov
sar
dec
xchg
jne
adc
push
popl
aas
andb
mov
add
pop
fistpll
add
xlat
and
push
test
add
lds
in
push
pop
sub
bound
dec
aaa
jno
mov
sahf
test
ljmp
ja
inc
adcl
mov
and
push
sbb
xchg
ret
aad
xor
shll
xorb
push
popa
daa
int
pop
xchg
push
in
dec
movsl
orl
push
dec
insb
int
ret
mov
aam
addb
leave
pusha
std
pusha
pushf
pop
adc
fs
popa
cmp
xchg
inc
out
sbb
cmp
push
cli
repz
mov
pop
xor
js
mov
insb
xchg
in
fnstenv
pop
push
xor
mov
cmp
test
fwait
in
mov
imul
stos
pop
sbb
stos
dec
mov
dec
in
pop
mov
andb
clc
mov
rcrb
add
mov
xchg
fidivrs
xor
bound
mov
inc
repz
fistpl
testl
ret
pushf
imul
pop
hlt
cmp
insb
dec
cmpsl
rcrb
mov
cmpl
jecxz
mov
jl
push
pop
aaa
or
push
cmp
and
call
fs
push
mov
fcmovb
enter
push
sub
mov
call
insl
cmp
cmp
push
mov
leave
push
lahf
jbe
gs
in
mov
mov
or
int3
dec
push
pop
pop
ljmp
cmp
sbb
add
inc
jnp
mov
in
fadds
push
iret
ja
movsl
and
or
insl
xchg
dec
repnz
jae
mov
pop
jecxz
ret
cmp
cmp
int3
adc
cmp
and
cli
cmp
and
push
mov
adc
cmp
rcrl
push
in
xor
leave
outsl
daa
int3
xor
es
adc
add
das
pop
pop
lcall
mov
pop
loop
fistpll
sub
ret
rorl
mov
aas
push
jbe
xchg
out
mov
mov
ja
sub
rorl
pop
mov
mov
xchg
push
movsb
imul
in
movsl
push
pop
pushf
repz
jle
ffree
inc
fsubrs
cwtl
add
mov
outsb
je
or
dec
push
mov
or
dec
push
outsb
add
cmp
cmc
mov
in
popf
out
cmp
cmp
pop
stos
pop
ds
pop
or
adc
push
jl
cmp
adc
xor
mov
mov
movsb
sub
sub
lds
mov
inc
or
popf
mov
sbb
or
rcr
sub
sahf
sub
adc
sub
movsl
gs
adc
inc
dec
dec
lock
gs
jle
sbb
xlat
xor
xor
jne
mov
out
xor
cli
push
inc
xor
test
repz
pop
dec
int
cmpsl
jp
lret
jo
loopne
data16
push
jecxz
push
loopne
andl
mov
addl
xor
jb
std
jbe
push
fisubrs
pusha
push
cmp
test
xchg
inc
sahf
daa
push
add
ljmp
add
jns
ret
call
icebp
out
mov
nop
aaa
pushfw
mov
ja
cmpsl
sub
mov
sbb
or
pusha
pop
repnz
lea
jo
and
sbb
test
in
in
mov
jmp
add
orb
scas
cmp
icebp
mov
mov
jmp
sbb
call
push
ss
xchg
stc
pop
or
mov
int
dec
inc
stc
mov
mov
cs
fidivrs
and
fldt
push
mov
fisubrl
add
or
xlat
imul
insl
xchg
pop
cmpsb
ficoms
fldl
ja
jge
xchg
int
loope
jmp
les
sbb
fbstp
sub
les
negb
push
or
adc
call
aad
outsb
addr16
cmc
cli
std
mov
aad
mov
adc
cmp
dec
lds
inc
dec
mov
push
les
jl
xchg
pusha
stc
adc
mov
xchg
rcrl
in
cmpsb
push
cwtl
xor
adc
push
scas
push
lret
imul
adc
push
add
mov
int
jbe
xchg
sbb
mov
mov
stos
loope
fwait
popf
push
push
pusha
pop
mov
cmpsb
leave
push
or
inc
cltd
fidivl
pop
sbb
xchg
enter
xor
rcrb
ja
dec
mov
fistpl
ss
in
pop
jmp
negb
and
mov
lds
add
pop
cs
sbb
sbb
xor
int3
mov
jge
out
aam
mov
hlt
adc
loop
adc
leave
notl
je
cmp
cmpsl
sub
mov
call
cltd
test
cmp
stc
sbb
pop
shlb
cld
pop
cmpsl
pop
mov
pop
movsl
dec
mov
inc
lahf
rorl
nop
testl
mov
push
xchg
pushf
int3
xchg
pop
insb
jbe
enter
shlb
mov
in
test
lret
insl
fisttpl
repnz
loopne
icebp
or
xchg
push
repnz
aad
adc
adc
cwtl
in
jmp
cmpsl
insl
xor
push
jmp
cmp
dec
aas
jcxz
rorl
xchg
dec
nop
ret
mov
mov
mov
jb
mov
out
pusha
jle
cwtl
decl
cwtl
or
xor
xchg
loop
shll
fs
repnz
mov
lods
test
dec
xlat
xor
mov
and
cltd
scas
out
repz
sub
pushf
jo
sarl
pop
into
out
mov
pop
mov
daa
es
fstps
adc
rolb
push
shlb
push
mov
lods
leave
sub
aam
mov
push
inc
es
pop
ljmp
or
outsl
pushf
test
fiaddl
cmc
inc
cwtl
orl
mov
jb
pop
leave
inc
in
push
rcr
mov
mov
cmp
xchg
adc
cwtl
xchg
push
mov
push
shlb
xor
adc
lret
cmp
pop
int3
push
adc
lock
mov
adcb
iret
lods
sbb
popf
mov
into
ret
scas
cwtl
cmpsb
rcll
std
inc
fistpl
test
int
jo
or
jbe
icebp
xor
in
and
sub
fcoms
xor
shll
or
arpl
shr
pop
iret
sub
dec
arpl
cmp
sbb
rorb
ss
repz
mov
jge
nop
adc
jae
dec
or
dec
xor
cmp
pop
mov
push
inc
ds
es
imul
adc
xlat
mov
cli
and
loop
test
jne
cs
hlt
aas
leave
add
fsubl
dec
mov
jl
pop
mov
sub
pop
scas
jno
das
adc
jle
sbb
and
dec
ja
and
sbb
pop
test
or
push
cwtl
pop
xchg
mov
push
jae
cmp
jg
cmpsl
xchg
roll
out
pushf
outsl
sbb
push
xchg
hlt
add
sahf
add
push
xchg
mov
dec
mov
leave
scas
or
sbb
mov
cmp
movsl
adc
inc
cld
sbb
cmp
les
push
push
ss
outsl
add
pusha
add
lret
lods
sub
scas
leave
dec
mov
popa
inc
ret
pusha
sub
xor
and
pushf
mov
push
dec
ret
push
mov
test
pop
fcomps
push
lret
xchg
lret
cld
inc
jbe
lds
pusha
jl
adc
jnp
push
daa
ds
shlb
pop
ret
fstpl
adc
sbb
xchg
dec
or
pop
ret
sbb
mov
sub
pop
outsl
cmpsl
fsincos
xchg
cmp
ret
fsubrl
aaa
mov
push
cmp
mov
cmp
sbb
jmp
pushf
imul
push
cwtl
insl
add
push
mov
dec
fistpl
gs
in
test
outsl
enter
add
ret
test
lock
push
mov
jmp
xchg
xchg
int
mov
xor
push
and
sub
inc
inc
jne
mov
stc
and
cmp
ja
outsl
push
movsb
mov
xor
pop
jo
mov
and
rclb
rolb
data16
xchg
fldt
je
xor
pop
adc
nop
jnp
add
push
or
std
add
adc
mov
jmp
inc
inc
js
lret
adc
xor
orl
inc
xchg
stc
sub
push
xchg
pop
xchg
gs
mov
push
fs
push
cmp
dec
aas
mov
push
cld
push
xorb
pop
popa
clc
lea
ja
insb
sub
pop
aad
or
fwait
lret
out
push
pop
add
push
cmpsl
ret
push
pop
hlt
push
adc
lcall
dec
ljmp
inc
adc
scas
addr16
jge
jbe
inc
xor
jns
idivl
push
lock
adc
mov
sar
pop
fidivrs
xor
inc
add
mov
ret
notl
lahf
pop
and
int3
adc
outsb
ror
rorb
leave
jo
inc
cmc
std
out
dec
scas
cmpl
ljmp
xor
in
fimull
shll
shlb
or
and
mov
mov
hlt
inc
lahf
outsl
aaa
addr16
sahf
jae
or
clc
cmc
or
aaa
push
loope
xor
pop
fstpl
sbb
or
bound
xor
pop
xchg
insl
popf
sub
add
push
jo
jl
ljmp
push
xlat
in
xor
insb
scas
loopne
cmp
fdivs
int3
or
inc
outsl
icebp
out
shr
test
outsl
inc
ds
cwtl
shll
mov
clc
scas
cmp
jne
movsl
jge
lea
mov
or
mov
cwtl
outsb
test
xor
les
jb
mov
add
test
aad
stos
jp
in
adc
add
roll
mov
sub
out
xor
ljmp
push
std
push
fnstenv
mov
jecxz
stc
xor
lcall
mov
sub
insl
jb
add
inc
clc
nop
xchg
mov
addb
out
fstl
pusha
mov
mov
cmp
cmpsb
jmp
cli
xor
cmpsb
dec
movsl
and
movsb
call
xor
ret
inc
insl
lret
into
jge
jle
sub
fstps
mov
das
cmp
insb
cmpsb
loope
and
jo
repnz
cmp
mov
lea
lahf
test
stos
into
jecxz
inc
bnd
push
mov
pop
dec
nop
inc
jbe
add
push
dec
xor
sti
inc
stc
pop
orb
mov
mov
fnstsw
sahf
stos
les
neg
pop
fiadds
mov
pop
aad
add
push
lods
sti
cltd
or
ret
pop
das
and
cmpsl
nop
sub
adc
cmp
test
fimuls
inc
aas
es
rcll
in
lods
pop
in
inc
fsubrl
jns
pop
ret
sbb
in
imul
jge
ret
punpckhdq
push
cmpsb
out
xor
sbb
push
mov
aas
cmc
jecxz
xchg
and
push
dec
dec
dec
mov
sbb
les
adc
call
inc
sbb
xor
inc
test
fldt
in
add
js
push
in
lret
insb
imul
or
pop
push
dec
adc
and
mov
loop
or
ja
in
rolb
pushf
js
or
pop
in
jne
mov
inc
pop
push
bound
popf
inc
pop
xor
xchg
ss
mov
cwtl
cmpsl
dec
fdivrp
inc
hlt
ljmp
lret
and
mov
or
in
pop
sbb
sbb
cwtl
xchg
test
inc
sub
fisubrs
into
std
dec
adc
je
push
lahf
cld
and
clc
pop
and
negb
stos
outsb
cmpsl
push
push
dec
mov
cli
hlt
int
cmc
subb
lahf
mov
cmp
cld
call
jle
movsl
xor
jg
fcmovnbe
call
mov
loope
push
adc
push
stc
add
int3
jbe
lret
vpcmpgtb
out
ret
aas
adc
mov
cwtl
adc
and
iret
fisubs
int3
lea
xchg
pop
mov
push
pusha
stos
push
out
in
leave
out
es
xor
mov
int
clc
cmp
adc
sub
mov
lahf
out
jp
xchg
nop
cmp
movsl
shlb
jnp
loopne
test
inc
int3
xchg
jns
cmp
scas
mov
clc
pop
inc
out
cmp
das
jne
jbe
mov
mov
and
cmp
insb
in
rolb
cmp
mov
sbb
sub
aad
test
outsb
daa
or
mov
cmp
scas
mov
mov
sbbb
sub
ror
nop
push
xor
pop
adc
push
aam
mov
push
lahf
inc
mov
and
mov
mov
mov
adc
xchg
fistps
sbbl
and
pop
pop
pop
movsb
mov
movsb
lods
rcr
testb
outsb
cs
popa
test
mov
jns
das
sub
jge
cmc
repnz
ss
xor
arpl
subb
cmpsb
xlat
stos
movsb
lds
pop
idiv
cpuid
insl
pusha
sub
cmp
test
xor
std
jbe
jle
cmp
clc
push
dec
add
test
dec
cwtl
fistpl
push
icebp
negl
js
in
mov
jl
push
jge
xor
mov
push
cmp
popa
cmpsb
inc
in
jmp
adc
pusha
jle
in
or
jmp
push
outsl
push
xor
pop
insl
sub
rol
pusha
sar
or
or
test
push
mov
jecxz
jbe
std
loopne
xchg
inc
fdivrs
xchg
out
mov
jne
sbb
push
mov
lods
jb
dec
mov
ljmp
add
pop
dec
or
scas
mulb
jnp
nopl
add
xchg
adc
popa
adc
enter
dec
adc
lods
cmp
jge
mov
jo
hlt
pop
xor
cmp
outsb
shlb
cmc
or
es
or
cmp
sub
iret
fisubl
push
push
repnz
mov
mov
jo
stos
inc
mov
in
shl
fsubrl
mov
adc
in
cli
and
and
test
pop
mov
dec
xchg
pushf
add
call
scas
stos
jbe
push
iret
add
xor
mov
mov
xchg
jp
push
adc
testb
rorl
nop
push
mov
loop
cmp
clc
mov
cltd
pushf
jp
int
cli
aam
push
pop
call
es
sti
fstpt
xchg
push
movsl
repz
and
and
sbb
int
xchg
inc
decl
mov
out
jbe
cmpsb
shlb
cmp
loop
dec
cmp
jo
daa
movsl
faddl
pop
push
sub
and
das
sub
arpl
or
mov
push
mov
fcmovnb
incl
lea
mov
mov
or
mov
pop
insb
push
xchg
gs
sbb
sbb
push
test
sub
loope
and
fisttpll
sub
jg
in
movsl
test
pop
jmp
jg
rcrl
jns
ljmp
popf
cmpsl
icebp
pop
push
jbe
cwtl
or
imul
jns
dec
out
xchg
call
icebp
fcompl
xchg
dec
lret
cld
repz
addr16
pop
sbb
inc
dec
aaa
mov
or
out
rorb
jb
and
sahf
sbb
or
test
stos
mov
cmp
add
mov
adcb
out
sbb
neg
fldt
cltd
shl
mov
jne
pop
lock
daa
in
data16
jg
mov
movsl
xchg
mov
call
pop
push
push
or
mov
sbb
dec
into
popf
es
out
cmc
stos
ret
and
subb
xchg
pop
cld
repnz
pusha
mov
outsl
xor
mov
fisubl
xchg
add
vmread
cmc
cmp
jecxz
popa
out
mov
rcrl
or
mov
ja
lret
xor
test
inc
push
in
jp
cmpsb
sub
mov
int3
or
outsl
outsl
daa
adc
xor
popa
xchg
das
push
adc
roll
sub
sbb
add
scas
mov
test
mov
sub
cmp
jb
in
sbb
pop
add
add
daa
fldcw
xchg
push
ja
mov
nop
mov
mov
push
lret
xchg
es
mov
cmpsl
push
movsl
or
jl
mov
xlat
pushf
jbe
into
mov
in
js
lods
push
clc
outsb
sbb
das
adc
lcall
lods
dec
inc
and
xor
dec
adcl
repnz
out
mov
mov
adc
imull
xchg
fisttps
addr16
ss
adc
in
fs
mov
pop
clc
add
mov
add
push
aam
mov
iret
fidivrs
and
add
in
jae
xchg
lods
fnstcw
pop
je
mov
add
xchg
sbb
jl
pop
sub
insb
xchg
clc
in
add
mov
stc
pop
dec
inc
and
ja
pusha
and
data16
pop
jp
out
adc
and
xor
xchg
jo
repz
xor
call
sbbb
mov
mov
je
out
in
cmpsb
movsl
in
jo
mov
cmpl
adc
xchg
jle
jae
cld
inc
enter
pushf
pop
xchg
jno
mov
jno
dec
xor
jl
jae
negl
out
enter
lods
jne
xor
mov
adc
cld
sub
outsl
in
cwtl
and
push
lds
add
daa
mov
adc
call
dec
xchg
or
jg
adc
arpl
imul
std
dec
pop
mov
cmpb
scas
mov
lea
mov
mov
sub
ror
or
add
adc
cwtl
xlat
and
inc
test
push
pop
cmp
fdivrp
jo
js
push
inc
jne
cld
inc
movsl
mov
mov
mov
pop
inc
jg
or
xor
pushf
gs
dec
shrb
mov
xchg
mov
ret
dec
or
imulb
adc
cmp
test
or
or
cmp
jl
fiadds
ret
push
outsl
divps
mov
out
adc
cli
or
out
add
lods
sub
nop
scas
adc
push
cmp
sbb
inc
xchg
sub
add
xor
nop
cld
cmc
insl
pop
adcl
jle
test
cli
lret
fcoms
ss
add
out
hlt
jmp
je
adc
adc
mov
push
cmp
aas
ja
inc
aad
test
loopne
and
and
roll
fdivs
enter
jo
es
lcall
mov
stc
ret
lods
std
inc
fwait
shrb
jbe
and
jg
pop
cmp
insl
rcrl
mov
inc
shr
add
cmpsl
pop
xchg
cmpsl
pop
popa
fimull
jle
mov
xor
xor
push
pop
imul
cli
xor
andl
jno,pt
cmp
mov
loopne
lods
push
xlat
clc
loopne
mov
xorb
mov
inc
into
fimull
out
mov
add
jb
daa
leave
inc
mov
adc
push
mov
and
dec
mov
or
cld
mov
push
mov
in
int3
mov
cmp
cmp
mov
xchg
jae
jle
mov
jecxz
out
xor
pop
push
pushf
dec
push
aas
hlt
aam
dec
xchg
shlb
pop
fs
dec
xchg
ljmp
jmp
fisubrl
fs
std
sarb
sti
jne,pn
fldenv
insl
jnp
add
sbb
aam
inc
and
cli
jo
sub
sub
mov
pop
mov
fs
fs
je
aad
push
ret
xchg
inc
aas
pusha
lahf
pop
loopne
fs
xor
push
xrelease
and
popf
leave
xchg
in
fwait
adc
fsubr
push
pop
push
sub
add
mov
add
xlat
pop
lods
mov
xchg
add
mov
vpsrld
xor
imul
dec
mov
mov
mov
xor
scas
in
scas
xor
sahf
and
xchg
or
fistps
push
inc
fisubs
mov
push
lret
adc
fdivrl
dec
ret
popa
inc
ffree
rcl
inc
push
mov
dec
cmp
and
adc
push
mov
dec
mov
ja
ljmp
add
mov
negl
stos
pop
gs
lock
insl
in
std
jns
scas
jns
scas
lcall
inc
dec
int
adc
xlat
cltd
and
push
int3
cmp
repz
pop
pop
roll
xchg
in
rcr
lahf
mov
mov
or
mov
out
and
fldt
add
push
mov
nop
popf
mov
iret
or
aad
iret
iret
stc
push
shl
in
add
adc
mov
ss
mov
test
mov
or
mov
and
mov
xor
add
pusha
xchg
loop
sbb
subl
jnp
shl
test
mov
int3
jp
add
js
lock
sahf
jns
inc
push
dec
lcall
xor
dec
pop
shlb
lahf
aad
jbe
sub
test
out
lcall
push
xchg
popa
xchg
jb
mov
mov
cwtl
cmp
gs
jp
mov
adc
pop
fmulp
adc
cltd
dec
test
dec
fwait
jne
call
dec
out
dec
mov
outsl
mov
jnp
inc
fdiv
sub
ljmp
fs
jle
jae
and
sbb
pushf
insl
ss
test
xlat
out
sbb
xchg
insb
xchg
insl
push
cmp
adc
ss
ja
sub
adc
rcrl
push
leave
push
and
es
inc
mov
pop
je
negb
sbb
jae
mov
clc
in
jle
inc
sti
ret
pop
xorl
xor
cmpsb
addl
dec
fistpll
xlat
inc
sbb
fcmovu
out
iret
jne
loop
xlat
pop
mov
mov
sub
push
jbe
out
and
dec
xchg
flds
mov
in
dec
adc
and
xor
lock
cmp
lahf
mov
loop
mov
mov
scas
stos
dec
fsts
xorl
jecxz
xchg
insl
jbe
shr
push
lcall
fnstsw
test
sarb
xor
push
push
fwait
sub
nop
arpl
out
cmpsl
daa
cmp
idiv
loopne
aaa
inc
das
inc
xchg
mov
and
push
add
icebp
push
xor
cmpsb
xchg
mov
push
pop
ss
cltd
sbb
sbb
divl
rol
mov
mov
pop
xchg
push
mov
icebp
or
pop
cmpsl
test
jecxz
xchg
jge
je
sbb
jbe
int
or
leave
xchg
jae
xchg
test
adcb
pop
scas
xor
roll
sub
mov
scas
dec
ss
jb
jp
fdivrl
pop
jge
test
sbb
or
jb
push
fstps
loopne
push
lods
push
call
clc
push
fsubs
push
push
pop
lods
jne
in
fcmovne
loop
add
iret
sbb
sbb
mov
inc
mov
push
jb
popl
sub
sbb
outsl
pop
ljmp
xchg
xor
and
mov
lahf
jae
dec
add
ja
lock
jecxz
jb
out
cld
adc
test
les
and
fistpl
ss
mov
hlt
das
pop
lcall
leave
adc
add
aad
jge
test
fadds
and
rcrb
test
cmp
mov
push
mov
mov
imul
nop
andl
mov
fmull
xchg
fninit
notb
and
inc
inc
sub
inc
into
dec
fsubs
jg
test
pop
push
mov
inc
inc
pop
or
out
loope
cld
mov
nop
das
loop
dec
jg
and
xor
push
outsb
or
js
xchg
push
out
popa
roll
xlat
jae
adc
mov
xchg
pop
shll
push
lock
push
ljmp
or
enter
in
punpckhdq
xchg
jnp
sbb
lcall
sbb
inc
ror
mov
ja
xchg
mov
leave
test
pusha
jmp
movsl
sti
dec
jp
stos
shrl
ds
dec
sub
xchg
mov
xchg
and
je
fildl
jae
sbb
push
add
or
inc
arpl
shrb
jmp
addr16
jp
sarl
fwait
sbb
das
orl
adc
or
sbb
std
pop
lcall
sbb
shr
pop
enter
negl
or
sbb
loope
pop
enter
mov
fadd
fidivl
addr16
popa
push
cld
pop
sbb
les
and
mov
and
xchg
add
ja
imul
mov
imul
test
out
clc
enter
pusha
in
mov
subb
outsl
sub
bndstx
les
sbb
cmpb
fmul
xor
inc
hlt
push
inc
icebp
into
call
sarb
roll
push
xchg
stos
add
xor
das
or
lret
cli
xchg
aas
test
push
xlat
add
inc
cltd
arpl
insl
push
inc
jmp
pop
ret
out
jmp
and
sub
and
cwtl
xor
add
repnz
and
mov
mov
push
jl
xor
cmp
test
sbb
xor
call
in
int3
jo
insb
notb
rcrl
cs
dec
mov
jmp
mov
repnz
mov
push
sarl
push
out
idiv
jle
sub
cmpsb
add
jne
cmpsl
or
mov
xor
sub
xchg
call
jle
outsl
in
push
in
jns
cwtl
mov
lods
push
push
mov
hlt
mov
adc
stos
sbb
outsl
data16
shll
es
jecxz
and
fistl
aad
inc
lods
imul
xor
jnp
pop
pop
pop
and
loope
or
mov
push
dec
addb
popf
cmovnp
adc
push
clc
cmp
mov
pop
and
mov
daa
sarl
adc
ss
inc
imul
mov
ret
cld
in
aas
fcmovbe
mov
mov
fsts
sbb
pop
jnp
jecxz
jbe
xor
dec
mov
pop
cmc
pop
or
fdiv
jecxz
inc
ja
add
xor
fwait
pop
jle
loopne
mov
testb
xchg
xchg
sbb
push
call
ret
adc
sub
call
aad
xor
xlat
fdivs
in
mov
nop
jne
movsl
inc
pop
pop
sbb
cld
in
mov
movsl
or
stc
push
out
aas
repnz
cmpsb
adc
lds
cmp
sub
push
sub
idivb
pop
push
stos
push
add
mov
lds
jb
mov
dec
adc
loope
sub
jecxz
pushf
cmp
push
adc
xorb
dec
sub
icebp
jmp
mov
push
je
jb
xor
xchg
lahf
inc
jl
int3
lahf
jnp
aaa
leave
jle
iret
mov
test
add
jne
adc
addr16
lock
and
or
repz
jno
pop
insb
enter
dec
or
inc
jmp
cmp
mov
xor
daa
jecxz
dec
popf
popf
mov
mov
sub
xor
and
sub
push
and
jecxz
je
mov
cltd
jno
mov
dec
fidivrl
ss
xor
and
daa
push
leave
xchg
cmp
xchg
imul
lods
mov
enter
push
mov
pusha
jg
sub
rclb
bound
adc
mov
fistps
pusha
xchg
in
gs
jo
jle
push
mov
xchg
sub
cld
notl
cmp
shl
mov
js
and
jmp
cmpsl
adc
maskmovq
idivl
scas
lods
mov
clc
mov
stc
popa
add
mov
mov
pinsrw
mov
pop
mov
pop
sahf
movsl
jmp
dec
aad
jo
add
jle
xchg
iretw
lock
loopne
imull
xchg
cmc
pushf
cld
pop
pop
xchg
sub
testl
add
bound
loop
mov
cmp
dec
stos
icebp
jp
push
and
pushf
js
xchg
cmp
icebp
jns
add
cmp
push
leave
xor
push
mov
xor
sub
dec
js
addr16
cmp
mov
xchg
jne
lahf
hlt
push
test
sti
pop
in
jmp
push
sub
leave
in
mov
aas
mov
aam
movsb
clc
shrb
push
add
fwait
xchg
inc
jl
mov
iret
fldenv
xchg
into
mov
rorb
or
out
scas
in
xor
jne
push
movsb
inc
jmp
xor
mov
out
mov
pop
enter
bound
addl
inc
xchg
pushf
fwait
testb
sub
in
enter
out
in
xlat
aad
inc
xchg
mov
jo
push
adc
pop
addr16
sarl
or
clc
daa
jmp
icebp
clc
dec
dec
cwtl
inc
push
popa
push
inc
lods
push
adc
dec
cmp
inc
jg
xor
jecxz
sbb
mov
xor
pop
pop
sub
in
rorb
sub
fstl
push
ltr
mov
mov
les
adc
loope
fistpll
es
xchg
fimull
pop
pop
stos
add
int3
outsl
lods
push
mov
or
repnz
xchg
jp
xlat
sub
rcl
sub
in
sub
mov
xlat
and
loopne
int
jae
pusha
daa
fdivs
dec
int3
pop
push
xor
ja,pt
pusha
addr16
dec
gs
push
cmp
fwait
mov
sahf
cmpsl
arpl
jbe
pop
ss
sahf
push
repz
mov
sub
xchg
fildll
repz
cli
inc
add
xor
sti
cwtl
fstpt
testl
enter
push
iret
test
and
push
push
in
adc
pop
xchg
nop
push
or
xchg
mov
std
mov
pop
mov
aaa
insl
in
xlat
push
mov
lret
xor
adc
mov
in
mov
ret
mov
add
das
pusha
jb
inc
add
pop
loop
xor
jnp
jne
jne
lahf
bnd
cltd
stc
es
lds
jl
shr
cli
and
mov
imul
loopne
test
orb
xlat
jmp
pop
push
xor
fidivrs
imull
outsb
cmp
aaa
adc
push
test
pop
pop
call
mov
and
iret
sub
mov
adc
cmp
push
push
hlt
scas
sar
sub
inc
xchg
add
adcb
add
or
movsl
mov
push
repz
or
xchg
fidivs
inc
in
ret
lcall
lock
and
int3
push
icebp
pop
aas
or
inc
mov
mov
pop
add
aam
jnp
dec
lret
orl
and
pusha
pop
fildll
adcl
subl
add
mov
lds
cmp
pop
dec
nop
xchg
dec
shll
lret
fld
push
xor
xchg
pop
repz
loope
jecxz
jg
add
lahf
cmp
fucomi
mov
push
popa
das
je
ja
aas
and
popa
mov
mov
push
sub
adc
xlat
fsubl
repnz
dec
dec
mov
mov
decl
lock
add
add
pusha
cmpsb
cmpsb
add
inc
xor
push
mov
mov
or
fisubs
push
adc
pop
fdivrs
aam
cmp
das
xchg
pop
mov
test
cli
and
pop
push
xchg
out
cmp
jb
lds
int3
rorb
sbbb
xchg
rcrb
sbb
aam
or
or
inc
sub
test
jl
test
and
leave
das
shlb
js
fcomps
rolb
xchg
rolb
out
dec
out
mov
sub
js
jmp
mov
jbe
icebp
gs
and
cmp
ds
lahf
push
mov
or
sbb
lds
lock
jmp
hlt
cmp
or
push
or
pop
cmpl
test
loope
aad
jns
push
in
cmp
mov
jmp
jne
aas
pop
cmp
cmpsl
lret
jae
push
or
std
fldl
mov
jne
adc
jl
ds
ret
outsb
ret
push
test
push
jnp
or
lcall
sbb
xchg
ficompl
cmpsb
push
stc
rcr
mov
and
movsb
and
push
jno
push
adc
and
xor
scas
mov
push
and
mov
and
xchg
push
mov
mov
sbb
pop
xor
fsubs
mov
into
insl
orb
lods
insl
lahf
fimull
fistl
adc
lods
in
nop
in
mov
mov
xchg
cmc
pop
into
push
pushf
inc
add
jae
in
adc
mov
lods
adc
out
mov
test
fsub
jmp
enter
or
fsts
in
scas
xlat
fisubl
cltd
xlat
int
xchg
imul
inc
dec
lock
add
push
pushf
stos
jno
sar
or
je
and
jne
test
mov
push
xor
inc
pop
jle
int3
push
push
mov
sti
sub
pop
sahf
sbb
jmp
incl
xor
sti
nop
pop
sbb
cmpl
or
dec
dec
pop
or
xor
loop
sahf
inc
mov
cltd
jp
dec
daa
inc
icebp
mov
pusha
and
icebp
in
sub
xchg
repnz
add
scas
cwtl
mov
insl
pop
sbb
out
sub
fdivrl
push
mov
aas
push
add
addr16
imul
cmp
or
stc
sbb
dec
mov
push
gs
add
xchg
xchg
mov
fldl
or
sub
mov
mov
fmul
rclb
sarb
pushf
jp
push
jb
mov
test
cmp
jbe
push
lods
pop
pop
mov
mov
jg
push
sub
shll
or
jp
jmp
push
inc
jp
add
bound
sbbl
popf
popa
loope
mov
je
cmp
stc
repz
cmpsl
test
sbb
dec
lock
lret
or
das
pop
xor
mov
mov
adc
mov
xchg
add
inc
mov
xor
cld
cmp
dec
bound
popf
out
or
jnp
mov
arpl
aaa
fbld
rolb
je
add
shll
xor
clc
mov
pop
or
roll
ret
mov
fsts
cli
jb
xchg
sbb
push
iret
mov
test
push
mov
push
inc
and
scas
xor
mov
pop
and
jmp
lcall
out
pop
cltd
mov
mov
cmpsl
and
stc
sarl
data16
scas
and
jle
les
cmp
ret
xchg
sub
fs
fs
aad
cs
shl
shrl
push
dec
sub
fistps
xlat
lret
jne
and
sbb
dec
fidivrs
lret
cmp
pushf
pop
les
jmp
add
enter
jge
aam
push
mov
mov
call
mov
bound
orb
add
les
and
ss
cld
into
push
ret
lods
jns
and
or
xchg
xchg
sub
fs
cmc
insb
fdivs
int
mov
fs
push
fldcw
dec
mov
push
pop
jp
insl
lods
pusha
fbstp
out
pop
fildll
pop
out
call
mov
movsb
and
outsl
or
sbb
rcrb
jl
int3
push
aaa
mov
mov
mov
pop
insb
mov
mov
mov
dec
mov
mulb
std
imul
mov
push
jno
scas
sbb
lret
and
aad
pop
iret
and
push
cmp
inc
lds
je
std
push
fcmove
adc
add
test
xchg
nop
or
xor
add
hlt
inc
inc
stos
xor
push
out
cld
cs
pusha
jg
pop
jl
test
xlat
repnz
sti
xchg
fwait
movsl
jns
jo
scas
xor
shll
aas
inc
mov
or
popl
sub
lds
les
push
mov
jl
inc
jnp
filds
mov
xchg
std
mov
lods
test
shll
rol
cwtl
stos
jae
inc
push
cmp
xchg
or
inc
mov
rclb
gs
push
fwait
xchg
out
push
in
pop
ret
pop
movsb
arpl
xchg
das
das
push
nop
jle
cwtl
cmpl
loopne
mov
mov
and
aad
nop
loope
es
lods
filds
stos
insl
incb
mov
mov
in
sbb
cwtl
std
loop
xchg
or
in
mov
and
dec
stos
cmp
iret
pop
mov
mov
lods
mov
xchg
jno
push
jge
cltd
scas
andl
sub
xchg
out
mov
int
loopne
push
lret
jge
ja
fsubrs
push
rorl
mov
xchg
mov
pop
insb
lock
lea
fwait
xlat
lods
sub
fsubr
and
jmp
dec
jl
mov
xchg
or
adcb
mov
mov
out
loopne
mov
sbb
fistpll
ret
cmp
push
pop
movsb
insb
jne
lods
roll
mov
bound
lods
add
pop
jmp
sub
adc
pop
iret
adc
mov
push
data16
inc
pusha
movsl
push
inc
pushf
ljmp
dec
mov
adc
ja
push
mov
pop
or
sub
dec
pop
push
ds
shl
loop
push
dec
repnz
and
jge
jb
insb
dec
cmp
mov
lahf
adc
fnstcw
pop
and
fisubs
imul
lret
aad
push
sub
test
repz
mov
les
jl
adc
or
cmp
popf
loop
repz
xchg
enter
out
push
mov
in
aaa
lea
and
aas
int
inc
adc
jno
movsl
inc
add
int
popa
aam
pop
cld
loop
mov
add
outsl
mov
outsl
repnz
mul
mov
xchg
fs
sub
lcall
out
call
sti
fnstsw
jbe
xchg
and
push
jne
pop
xchg
and
mov
jl
popf
xchg
jmp
int
inc
xor
push
or
fstps
sbb
shlb
dec
inc
into
aaa
adc
stc
push
shll
mov
imul
mov
xlat
mov
sub
cld
lcall
dec
sti
stos
add
adc
imul
sbb
insb
push
or
cwtl
jmp
mov
clc
push
fdivs
xchg
inc
cmpsb
cmp
ljmp
adc
or
out
adc
imul
lods
dec
imul
cwtl
cli
dec
xchg
fistps
xchg
leave
mov
xchg
push
cmpsl
hlt
rcrl
xchg
push
movsb
jo
push
sbb
xor
mov
xchg
imul
mov
lods
in
leave
sbb
pop
cs
lret
mov
adc
aam
push
cmp
xchg
or
enter
inc
add
out
scas
sub
lcall
xchg
aaa
mov
cmp
andb
jb
cmp
xchg
push
or
stos
inc
jns
jmp
xchg
xor
mov
xor
jg
mov
aad
or
rorb
loop
iret
mov
mov
cmp
push
jae
int
mov
or
dec
pop
dec
arpl
jo
xchg
loopne
cs
roll
jle
mov
pusha
adc
out
fildll
addr16
add
flds
out
lds
cmpsl
add
and
jbe
mov
xlat
and
add
push
mov
popa
and
inc
lock
jmp
pop
stos
mov
lret
adc
loopne
leave
es
insb
aam
lods
aaa
lcall
xor
xor
xchg
daa
fldl
jns
scas
mov
mov
call
sbb
daa
stc
inc
adc
jae
fimuls
cmp
iret
je
cmpsl
xor
sbb
dec
mov
push
fmulp
jno
or
inc
fstl
sub
out
adc
dec
enter
add
in
pop
jb
push
mov
mov
push
push
aaa
jns
aaa
add
inc
jne
gs
lock
xor
nop
dec
mov
xor
or
inc
repnz
enter
adc
and
xchg
shll
pop
push
insw
mov
push
jae
inc
xchg
call
ss
adc
adc
xchg
inc
movsl
xchg
mov
sub
movb
leave
aam
mov
sub
dec
add
mov
cmp
roll
dec
aad
push
mov
inc
and
add
fcoms
mov
xchg
xor
into
or
ss
xchg
mov
fisubrs
push
fdivs
fistpl
pushf
js
and
outsl
aaa
dec
in
or
iret
jmp
mov
fldl
inc
push
inc
je
xor
xchg
pop
xor
sub
pop
sbb
jmp
out
jo
xchg
cmpsl
nop
in
mov
insb
into
and
nop
addr16
and
aas
dec
mov
pop
adc
cld
out
scas
call
shll
ret
inc
pusha
add
push
xchg
aaa
cmpsl
fldl
cli
xor
lods
and
stos
jp
call
cmpsb
std
or
test
adc
lods
fisttpl
lods
in
ja
or
shl
push
cld
lea
inc
les
lret
iret
sbbl
int
imul
test
dec
shrb
push
in
mov
mov
insl
hlt
inc
jbe
loopne
and
test
enter
into
or
sbb
inc
push
enter
or
dec
xchg
pop
sbb
and
or
negl
ds
outsl
mov
mov
fists
ret
filds
push
xorb
adc
sub
mulb
sbb
lcall
mov
or
add
aaa
push
push
imul
adcb
cmpsb
ret
push
add
and
fadd
push
test
jno
cmp
push
xchg
adc
add
jbe
xor
cltd
ret
pop
ret
mov
mov
std
add
sbb
scas
cmpsb
outsb
es
push
je
das
nop
sub
in
xor
decl
fisttpll
loop
pop
cld
jae
shlb
mov
jecxz
pop
in
xorl
sbb
mov
xor
mov
pop
mov
out
test
or
in
imul
shr
mov
dec
js
loop
cmc
clc
pop
mov
lods
add
aas
dec
call
rcrb
iret
or
mov
aad
imul
sbbb
iret
repz
push
popf
mov
fdivrl
add
hlt
lahf
stos
adc
and
lea
aaa
jp
pop
add
rorb
sbb
into
jmp
sahf
mov
scas
rorb
xchg
push
inc
or
filds
cltd
mov
xor
sub
lahf
lcall
cwtl
aad
xchg
cmpsl
std
in
push
faddp
and
aas
mov
jg
das
jb
or
pop
call
fxch
xchg
cmp
push
outsl
sub
test
fadd
rorb
fstpl
xchg
fnclex
push
push
inc
test
daa
insb
in
lahf
xchg
outsb
inc
popa
stos
adc
inc
xor
fwait
and
imul
fwait
adc
repnz
dec
call
cmpsb
pop
sub
loop
clc
sahf
mov
mov
testl
pop
test
mov
cmp
mov
and
or
sub
aas
add
outsl
push
sbb
pusha
mov
fcoms
out
imul
int3
xor
in
cmp
adc
mov
lods
iret
js
test
lea
mov
pushf
fsts
imul
add
sub
dec
push
loopne
mov
leave
fisttpl
lods
fisttps
stos
mov
push
mov
jg
mulb
push
loopne
mov
mov
dec
jle
pop
std
mov
cmpsl
pop
pop
cld
mov
push
loopne
fcomip
pushf
lahf
sbb
mov
xchg
sub
pop
push
aad
pop
sahf
cld
jmp
test
test
xchg
int
in
in
addl
lcall
cmp
push
adc
out
mov
xchg
inc
mov
fsub
popa
sbb
jle
ja
popl
or
mov
hlt
in
lret
inc
add
add
imul
sub
fs
leave
jp
and
notb
xor
insb
fwait
into
je
cmpl
mov
fcoml
dec
cltd
in
mov
xchg
arpl
inc
push
and
cs
pop
push
pop
fcoms
rol
out
movsb
insl
ret
and
loopne
out
cmp
pop
xor
lret
sbb
movsl
mov
cmp
xor
sub
inc
leave
xchg
test
push
jo
rorl
xchg
rolb
sbb
call
negl
push
mov
push
mov
push
xchg
mov
jmp
and
push
insb
aas
sbb
sbb
sub
psubsb
mov
incl
or
pop
xchg
pusha
ljmp
test
dec
dec
stos
mov
addr16
inc
cs
push
ja
psllw
jp
push
push
push
imul
push
inc
mov
cmpsl
shlb
add
xorl
aaa
jmp
push
scas
pop
xchg
in
les
std
sbb
jne
dec
shll
or
ficomps
or
jecxz
pop
mov
outsl
pop
call
sbb
and
rol
in
je
mov
jecxz
ror
cmp
pop
rcll
mov
dec
sub
lret
cmpb
aam
push
in
add
stos
es
sbb
sub
mov
pusha
or
std
push
dec
xor
ror
dec
insb
cli
cmp
dec
push
das
cli
jno
jp
or
xor
pushf
jp
cmp
cld
mov
sub
pushf
mov
mov
nop
pop
dec
xchg
adc
in
mov
inc
je
mov
dec
mov
ret
lock
and
mov
jbe
adc
out
pop
cmp
push
cmp
jecxz
fnstenv
in
outsb
jne
shlb
adc
cmc
dec
hlt
or
imul
xor
loope
int
mov
jp
sub
sbb
outsb
jno
add
sbb
lods
lret
scas
mov
ret
adc
rcrl
loope
out
jae
mov
jmp
add
insl
aas
imul
cmp
out
test
sub
es
cli
and
fnstenv
rorl
bound
nop
into
sub
js
clc
dec
call
cmp
xor
iret
xlat
loop
int3
mov
or
jo
xchg
test
lret
int3
fisubl
in
in
ja
jo
jb
sub
mov
mov
cmpsb
sbb
subb
cmpl
int
aam
rcll
in
inc
jg
cs
sbb
jne
xor
jg
sbb
hlt
mov
dec
dec
cmc
repz
jo
jg
ja
gs
fcmovne
int
pop
scas
mov
cmp
sbb
pop
gs
andb
into
dec
or
dec
push
mov
test
mov
inc
lods
xchg
fstps
mov
inc
test
mov
xchg
lahf
jne
add
or
sbb
add
push
into
sbb
dec
stc
mov
mov
fcmovb
scas
arpl
inc
xlat
stos
imul
dec
call
jge
xor
cmpsl
cmp
jo
cmp
gs
xor
or
cmp
lret
inc
inc
xchg
data16
or
pushf
cmpsb
iret
mov
inc
mov
mov
lods
or
idivb
pop
cmp
bound
int3
mov
daa
sbb
test
mov
daa
cmp
sti
loop
ficoml
dec
aas
les
cmp
insl
mov
adc
sub
jge
jp
and
loopne
jne
shrl
stos
pop
lahf
int3
pusha
gs
lock
sbb
ret
xor
pop
cwtl
cltd
xor
jle
aad
nop
add
test
mov
loopne
push
push
lds
xchg
aad
mov
rcll
fwait
test
or
push
cmp
add
push
les
xor
cltd
push
scas
pop
xor
les
sub
adc
incl
popf
test
add
mov
je
lret
cmp
lahf
cmp
insl
mov
dec
jle
cltd
out
fnsave
popa
pop
mov
push
mov
pop
pusha
jnp
jp
in
std
jle
repz
stc
dec
and
xor
cwtl
je
in
aaa
xlat
testb
fildll
lea
addr16
decl
add
lret
jo
mov
adc
sbb
daa
fwait
aad
jo
sub
push
xchg
insb
testb
adc
popa
push
xchg
cmpsl
mov
pop
mov
lock
xchg
les
call
add
out
fbstp
loopne
lahf
fisubrs
and
dec
insl
add
pop
pop
push
or
out
mov
adc
pop
pop
add
sbb
pop
ds
inc
test
enter
dec
and
jns
add
adc
cmc
test
movsl
pop
ljmp
mov
lods
adc
dec
inc
adc
in
inc
mov
adc
sub
jg
jmp
and
pushf
and
adcl
inc
pop
adc
cli
sub
mov
jno
dec
lock
adc
adc
cltd
xchg
outsb
mov
push
inc
mov
sub
push
std
imul
jo
les
mov
aam
es
stos
mov
out
pop
es
popa
mov
add
sub
into
pop
test
add
push
jp
sub
push
cmovp
lcall
push
push
jne
dec
ds
mov
test
shll
inc
add
mov
fistps
fwait
sbb
sub
lahf
ss
and
out
cwtl
idivl
int3
ror
loop
lea
ficoml
shrb
or
mov
repnz
push
loop
movsb
movsl
mov
push
lret
mov
push
xchg
loop
loop
ret
stc
sbb
out
enter
enter
or
or
push
test
imul
stc
or
xchg
dec
enter
data16
fdivrs
cmp
mov
inc
aad
movsl
dec
jmp
sbb
movsl
out
les
ficoms
or
dec
scas
jge
out
imul
insb
or
pop
call
sbb
jge
inc
stos
mov
mov
pop
insb
inc
adc
cmp
inc
lods
stos
xor
cld
imul
mov
fsub
xor
cmp
xor
cld
or
in
inc
sbb
adc
clc
pop
lods
push
jl
adc
sbb
dec
rcrl
lea
les
in
insl
xchg
or
xchg
jae
fucomip
mov
shl
ss
and
ja
cmc
inc
hlt
js
mov
int
cli
insb
pop
aaa
int3
cmp
icebp
setp
mov
jbe
fxch
mov
cmc
in
test
sbb
hlt
push
inc
test
jns
mov
mov
mov
dec
and
sbb
test
outsl
test
sub
pop
and
les
mov
incl
jns
mov
sbb
int3
pop
adcb
out
jns
in
lods
gs
out
jne
cli
inc
xchg
ret
push
lds
out
sar
jmp
or
xchg
adc
and
movsb
inc
inc
lcall
lea
shrl
push
test
outsb
jp
mov
sbb
jbe
fsubrs
and
xchg
nop
and
xor
add
imul
xchg
mov
pop
lea
in
repz
cmp
push
insl
mov
pop
jle
int
xchg
adc
push
cltd
xchg
out
add
fisttpll
int
or
ljmp
scas
shll
mov
jb
jns
dec
ficomps
es
repz
ljmp
or
xor
xor
lcall
scas
dec
xchg
lods
aam
lods
xor
lret
mov
std
fwait
jo
lea
dec
sbb
ds
ret
pop
sub
and
mov
jb
test
xchg
xorb
fcoml
imul
rol
aas
lock
pusha
sbb
jns
popf
inc
sub
xchg
movsl
mov
and
or
adc
loope
inc
fsubrs
jp
mov
mov
test
bnd
shlb
pop
or
dec
mov
mov
xchg
and
inc
cmpsb
mov
mov
outsl
lods
aaa
sbb
test
cmp
fwait
aas
fnstsw
dec
add
inc
scas
mov
outsl
pop
mov
and
push
sub
daa
shr
fs
xor
dec
lret
sbb
and
arpl
sahf
jo
out
roll
fs
mov
icebp
push
or
push
xchg
xchg
inc
push
int
or
lock
xchg
mov
rorl
xor
pop
cmp
aam
jae
fistpl
adc
clc
popa
xchg
cltd
pop
mov
imul
sub
pop
xchg
and
inc
popa
push
rorb
and
outsl
add
lock
jnp
testb
mov
mov
push
push
cmp
stos
pop
inc
and
or
pop
loopne
push
pop
lds
pushf
pop
out
mov
xorb
adc
jle
dec
mov
jns
mov
or
es
xor
fs
stos
fwait
outsl
and
outsb
cmpsl
mov
mov
cmp
hlt
push
pop
lods
and
out
pop
cld
push
cvtdq2ps
rol
loopne
call
push
mov
pop
hlt
repnz
insl
xorb
imul
push
jae
inc
add
pop
add
mov
test
mov
pop
xchg
ret
dec
jb
lret
imul
push
mov
sti
cmp
cmp
sbb
sub
cwtl
outsb
cmpsl
gs
push
sbb
pop
xchg
icebp
push
xchg
or
pop
rorl
adc
iret
jno
xchg
lock
xchg
leave
push
lods
mov
and
pop
dec
sbb
jbe
mov
add
dec
jns
rcr
mov
xchg
outsl
pop
mov
mov
push
mov
lea
sub
dec
std
mov
cmp
mov
sub
mov
push
push
push
imul
xchg
std
out
stos
adc
add
imul
push
sbb
sub
cltd
push
test
out
jns
adc
push
fld
hlt
xchg
mov
cwtl
mov
repz
testb
or
mov
mov
jb
inc
mov
jmp
xchg
push
pushf
adc
cmpsl
out
pop
ret
mov
sahf
js
sbb
mov
fists
pop
aam
inc
decb
mov
test
mov
mov
pop
jl
pop
ficomps
test
push
scas
mov
mov
adc
test
pop
mov
mov
outsl
mov
mov
mov
cmp
and
add
imul
fidivl
pushf
fucom
push
pop
pop
ja
fdivl
orl
hlt
pop
test
push
and
enter
sbb
fisubl
adc
leave
mov
or
sbb
jae
mov
scas
sarb
inc
movsb
jmp
sbb
xor
das
inc
push
pop
aam
jns
pop
ret
repz
stc
fadds
mov
pop
shrl
and
fsubl
pop
mov
nop
mov
rcll
cli
lock
add
mov
jl
mov
rcl
andb
out
and
dec
mov
cs
sub
sbb
pop
cmpsb
dec
in
xchg
cmp
jno
mov
lods
sbb
push
mov
inc
imul
cmp
sarl
int
dec
nop
dec
pop
pop
ljmp
popa
pop
fwait
add
sub
fadds
std
add
pop
mov
sub
sub
fsubrs
ficoml
sub
or
aaa
js
popa
inc
jns,pn
jnp
jno
mov
minps
inc
jmp
or
cmpb
jo
icebp
data16
xchg
dec
adc
aad
bound
xor
jbe
pop
xor
and
sbb
sbb
mov
andb
mov
add
in
jl
int
ret
aaa
and
das
cmp
jp
in
xchg
je
loop
lock
fucomip
pop
ljmp
jno
cs
adc
cmp
fdivrl
das
sub
rclb
xor
iret
sub
lret
push
jnp
fwait
jl
jne,pt
push
dec
mov
fisttps
movb
xlat
insl
push
xor
mov
jecxz
cld
in
and
lods
imul
in
mov
repnz
sbb
adc
in
out
dec
cmp
test
pop
aas
cmc
adc
div
dec
and
or
dec
xor
mov
push
mov
sub
scas
add
mov
scas
lahf
repnz
cltd
jmp
scas
jbe
push
mov
arpl
popf
mov
out
enter
in
cmp
pop
pop
daa
jl
pop
out
xor
call
and
cmp
or
fdivrp
xor
mov
or
inc
jne
xor
movsl
arpl
sbbb
test
mov
cmc
les
push
mov
insl
lds
ret
mov
shll
fbld
mov
cmp
pop
push
add
pop
xchg
and
andl
and
repz
mov
dec
in
pop
mov
xchg
xor
xchg
pop
adc
int
imul
fisttps
jg
pushf
popa
dec
cmp
jmp
adcb
dec
cmpsl
int3
mov
sub
test
sbb
push
push
call
jo
in
sbb
lock
fdiv
shll
clc
pop
cmp
je
ss
jnp
roll
pop
adc
shl
stc
aam
sub
lcall
sarb
add
out
test
fsubs
lahf
mov
lret
movsl
jge
pop
imul
shr
stos
loope
dec
sbb
add
or
lock
add
shlb
shll
popa
imul
push
mov
sbb
mov
loope
push
ja
mov
cmp
pop
dec
ret
or
inc
das
pop
pusha
jg
fidivs
pusha
jae
sahf
cmc
add
push
call
lods
addr16
adc
mov
jo
mov
and
sbb
scas
in
sbb
adc
cs
inc
popa
cmp
xchg
sarl
mov
jecxz
vcvttps2dq
add
jecxz
into
in
and
scas
mov
xchg
test
sub
sub
adc
scas
sbb
push
adc
or
dec
push
pop
and
fbld
ffree
cmp
jmp
les
pop
xchg
hlt
or
pop
lock
cli
negl
sub
jp
mov
pop
loop
fadds
fstl
mov
mov
mov
jno
lcall
push
jl
iret
inc
into
pushf
mov
aad
in
roll
sahf
sub
xchg
jns
mov
and
fcomp
mov
mov
cmc
mov
add
push
xchg
test
into
sbb
test
ljmp
xlat
enter
insb
xchg
pop
sub
adc
insl
mov
scas
adc
xchg
inc
pop
pop
sub
lea
xchg
aaa
add
mov
out
mov
out
push
mov
js
push
xchg
pop
and
mov
lahf
push
dec
dec
pop
jo
sub
cmpsl
jg
xchg
mov
lods
adcb
sub
in
xchg
cmp
aam
cmovns
cmp
xor
sub
dec
data16
ljmp
js
cli
andb
jle
lret
add
adc
loopne
sbb
int3
jnp
popa
lret
jge
xchg
mov
sub
dec
sahf
pushf
scas
sbb
movl
insl
imul
repnz
adc
jns
adc
lds
mov
sub
fs
push
pushf
inc
mov
adc
das
mov
gs
inc
inc
jo
inc
lods
loop
pop
dec
or
mov
adc
add
pop
and
clc
xchg
push
mov
cltd
or
fwait
mov
inc
scas
lret
xlat
xchg
hlt
sub
mov
mov
sbb
and
stos
movsl
xchg
and
rorl
lret
sub
pushf
cwtl
xor
js
xor
pop
jmp
out
adc
pop
aad
push
xchg
test
mov
xor
es
sbb
lret
and
loop
pop
imul
fisttps
gs
pop
outsl
pop
nop
dec
pop
sti
and
neg
mov
push
insb
cmpsb
repnz
packsswb
pop
cwtl
lock
cmp
dec
in
loope
cmc
ds
shl
fnsave
xor
out
inc
xchg
xchg
pop
mov
sub
xchg
adc
aam
setae
in
popa
push
jle
sbb
stos
divb
ret
mov
adc
pop
out
push
test
mov
out
xchg
xchg
rolb
mov
jmp
or
jb
xor
pop
fldcw
push
push
add
xchg
mov
jge
mov
mov
push
adc
ss
pop
outsb
nop
imulb
or
stos
pop
mov
shlb
xlat
push
inc
and
add
mov
jnp
stos
rolb
pop
in
fnstenv
das
sub
cwtl
ss
xor
xlat
push
push
lock
movsb
sbb
jne
movsb
mov
testb
cmpsb
and
cmc
mov
adc
sti
outsl
xor
addl
add
loopne
leave
cmp
jg
loope
cmpsl
mov
jo
daa
xor
jo
or
inc
mov
fnsave
and
jp
imul
cmpsb
ret
fs
lods
fwait
lods
movsb
dec
hlt
fimuls
cld
scas
call
movl
and
add
cmp
test
and
cmp
and
dec
add
lds
mov
xor
sarl
xchg
jle
sub
loope
in
sbb
add
scas
mov
adc
cli
xchg
sub
cli
or
mov
ja
jg
pusha
push
sub
and
call
cmp
mov
pop
sbb
fs
mov
cmp
cld
push
cmpsb
adc
leave
lds
pop
inc
add
pop
pop
mov
imul
iret
pushf
sbbl
mov
clc
push
aad
pop
dec
cmpb
arpl
and
dec
or
lea
push
push
add
iret
nop
and
inc
mov
pushf
aaa
iret
in
in
xchg
xor
dec
fcoms
out
jnp
div
ret
mov
sbb
pop
jmp
xor
mov
sbb
dec
imul
pop
sbb
mov
int3
sahf
jmp
sub
sbb
stos
cmpsb
nop
cmp
mov
ds
notb
notl
jmp
into
ja,pn
loop
mov
out
sbb
test
add
mov
aad
and
jg
pop
or
pop
cmp
ljmp
faddl
out
cmp
or
cmc
scas
dec
inc
mov
add
ljmp
inc
mov
sbbb
data16
lret
xor
pop
xchg
dec
pop
jecxz
aam
orb
push
aad
lret
push
push
sub
imull
in
fiadds
shlb
loop
mov
jle
fldenv
push
ljmp
mov
xor
sub
adc
cmp
imul
pop
sub
mov
lods
or
add
push
pop
shlb
imul
sbb
cmp
shlb
scas
jge
xchg
adc
pop
pop
jmp
into
xlat
mov
cmp
mov
mov
sub
jo
sti
jg
push
xchg
xor
sbb
adc
or
sub
loope
fsubs
add
pop
outsb
mov
fwait
divl
pop
adc
sbb
cli
cmp
mov
mov
xchg
shr
loopne
lods
andb
or
dec
or
adcl
mov
out
pop
cmp
in
push
bound
sbb
dec
dec
fstl
test
or
jle
fiadds
mov
sti
mov
movsb
imul
out
nop
sub
rcl
in
into
ljmp
ds
mov
outsl
adc
pop
mov
loope
andb
push
roll
jl
pop
ret
xchg
ficompl
inc
xor
or
pop
push
sbb
cmp
pop
mov
les
stos
test
in
jne
push
add
adc
mov
or
lock
cmp
cld
lods
ja
ret
jg
push
cltd
and
sub
inc
js
loope
loope
sub
rcrb
cmpsl
cmpsl
daa
sbb
in
enter
ret
add
std
mov
jne
lock
dec
addr16
leave
mov
repnz
outsb
int
cwtl
mov
xchg
arpl
rcrl
inc
push
test
sbb
cld
sub
sahf
popa
loopne
ds
jns
or
sub
dec
cmp
notb
xchg
aaa
sub
addr16
movsb
inc
mov
cmc
aas
inc
out
int
shll
lea
out
add
inc
and
push
ds
dec
and
call
push
cmp
stc
add
stos
inc
sbb
cmp
lods
or
dec
std
ret
xor
inc
and
mov
mov
xchg
push
incb
repz
jmp
lahf
xor
popf
push
xor
sub
mov
popa
xor
mov
sub
orl
out
into
div
loope
mov
out
dec
mov
stos
dec
xor
mul
outsl
scas
cmp
xorb
cltd
les
aaa
push
scas
jge
les
xchg
inc
jp
nop
bound
repz
loope
addr16
outsb
mov
movsb
mov
cmpsb
mov
jmp
dec
xchg
ss
fsubs
movsb
cmp
push
and
push
ja
xor
sub
xchg
push
in
sub
xchg
or
mov
lock
jae
sti
in
dec
in
outsb
add
leave
stc
fistpll
jg
test
pushf
jno
fwait
aas
lret
jns
pop
jnp
int
jns
sbb
lods
cmpsb
je
stc
in
push
aaa
mov
repnz
or
and
add
sahf
movb
je
pop
mov
es
rcll
xchg
js
dec
xor
in
sbb
mov
ljmp
mov
mov
imul
clc
cmp
and
ljmp
pushf
in
in
push
or
add
push
sub
jle
in
and
stc
insb
loopne
pop
xor
pushf
outsl
addr16
std
jge
in
mov
or
mov
jae
sub
hlt
and
and
xor
push
pop
nop
pop
jns
adc
sti
test
mov
pop
pop
jno
fadd
mov
push
out
sbb
push
out
out
int
rorb
xor
and
mov
xor
scas
jb
insb
lret
add
jo
loopne
jae
push
jne
les
xchg
xorl
fstl
sub
in
cmp
daa
imul
cmp
loopne
cmp
in
add
pop
mov
fiadds
sbb
popf
mov
aas
outsb
arpl
adc
fstpt
pop
int3
ret
hlt
xchg
lret
sbb
pop
inc
add
mov
sbb
sub
bound
cltd
mov
movb
fcoms
xchg
and
cli
or
mov
test
sub
mov
or
mov
into
stos
test
fcomip
sub
inc
fdivrp
add
ficoml
iret
pop
add
ljmp
push
xor
or
inc
pop
test
mov
xchg
xchg
cmpsl
add
mov
stc
jge
fwait
out
daa
es
scas
fsubrs
cmp
mov
into
cmp
jmp
rorb
mov
cmp
inc
and
fldcw
call
cmp
jl
je
faddp
xchg
adc
or
add
iret
dec
data16
ret
test
lcall
insl
jl
lods
adcl
mov
dec
gs
in
and
jecxz
mov
push
pop
xorl
jno
xchg
pop
pop
faddl
jo
sbb
fimuls
sti
sub
sbb
mov
and
cmc
scas
rorl
xchg
int3
or
cmp
jg
sbb
add
adc
adc
jns
jge
sub
add
xor
push
cmp
es
xchg
sbb
nopl
inc
fstpl
dec
movsb
push
gs
subb
adc
mov
out
or
in
inc
mov
psadbw
mov
cmpsb
sbb
push
cli
in
rclb
stos
adc
mov
aad
xor
data16
mov
bnd
pop
es
xor
sub
adc
dec
cmp
mov
adc
hlt
ret
push
cwtl
xchg
repz
push
dec
arpl
add
push
push
imul
lods
mov
test
xchg
fisubrs
sub
mov
loop
jno
adc
lret
sbb
xchg
sub
fcmovu
js
in
into
ljmp
fcmove
int3
fldt
ja
add
sti
jb
into
les
clc
js
or
add
inc
into
shlb
mov
stos
push
or
das
rol
adc
cwtl
jno
scas
lret
aam
int3
adc
dec
mov
lcall
test
dec
xchg
scas
push
mov
cwtl
xor
dec
sbb
jne
cmp
mov
cmp
mov
pop
jp
jecxz
sbb
mov
mov
cmpsb
insl
adc
sub
sub
scas
sub
push
adc
and
outsl
xor
cmp
jl
sub
pop
movsl
sub
pushf
repnz
dec
sub
push
fidivs
cli
int
fisubs
adc
xchg
sbb
jne
mov
jge
xchg
cmp
inc
xor
repnz
out
push
jo
addr16
cmp
cmp
jnp
xchg
inc
mov
imul
jno
cmp
leave
addr16
xchg
cmp
sbb
inc
inc
and
sub
clc
aam
icebp
lahf
inc
shlb
xor
mov
or
push
push
lahf
or
push
adc
xor
lods
pop
pop
andl
andl
call
lds
mov
lret
out
stos
outsl
push
sbbl
cmp
icebp
mov
sub
inc
dec
ds
inc
sub
pop
pusha
imul
negb
sahf
andl
sti
and
fnstcw
mov
adc
pop
divb
nop
mov
jbe
outsl
sub
dec
mov
idivb
xchg
idivl
push
xor
test
push
add
adc
lds
aam
push
test
push
mov
pop
jae
adc
hlt
jo
clc
pop
jle
push
les
adc
xchg
xor
int
mov
shl
sub
test
xchg
decb
lret
cltd
xor
stc
pop
inc
aam
push
xor
scas
xor
lods
mov
dec
aad
mov
mov
rclb
rcrl
or
push
popa
cmp
jg
das
cmpsb
mov
adc
add
cli
fst
mov
push
xchg
push
mov
ljmp
rcrl
push
and
push
hlt
hlt
push
or
outsb
not
nop
data16
in
jle
push
and
inc
cmpsb
push
sbb
fptan
das
jae
leave
cmp
pop
ljmp
or
addr16
movsb
inc
mov
sbb
or
and
cli
dec
aaa
pop
mov
jge
stos
cmp
lcall
cld
daa
rcr
xchg
bound
dec
sti
lock
les
push
and
cmp
cmp
xchg
sahf
ljmp
dec
cmp
cmpsb
pop
mov
daa
adc
xor
pop
fcmovbe
xchg
popa
outsb
fisttpll
dec
ljmp
jo
xorb
dec
loop
cltd
add
mov
ret
push
loopne
adcl
xchg
fistpll
sahf
stos
stos
push
mov
shrl
in
mov
jl
pop
xchg
outsb
inc
mov
or
lods
mov
dec
test
or
dec
imul
cmp
push
mov
jmp
data16
push
or
adc
pop
arpl
sbb
pop
lock
fidivs
insl
inc
sub
add
leave
push
test
pop
inc
or
push
push
xchg
std
inc
xor
cmpsb
xlat
jne
xor
lret
push
rorl
mov
test
cmp
jnp
xchg
dec
loope
shrb
fcomi
xchg
hlt
lret
adc
inc
jb
xchg
mov
xor
psllq
sub
imul
cmp
rcl
repnz
pop
adc
cmpsl
and
sbb
lcall
out
loopne
mov
cmpsb
inc
mov
fwait
outsb
push
add
inc
adc
aam
dec
lds
repz
xchg
fcoms
dec
xor
pop
or
testl
lea
or
ja
nop
scas
jbe
es
adc
mov
sti
sub
js
repnz
call
cltd
nop
inc
mov
pop
outsl
push
jecxz
mov
sbb
mov
cmp
adc
push
jbe
fisubs
lock
sub
cmp
jne
sbb
pop
jge
out
test
mov
ret
push
cmpl
pandn
dec
push
movsb
lcall
jp
sub
and
push
sbb
cltd
xor
sbb
mov
daa
dec
inc
jns
fldcw
lret
loope
stos
call
repnz
repz
pop
pop
mov
lock
jmp
fisubl
xchg
lahf
add
int3
push
les
jae
pop
arpl
push
fcmovnbe
cmpsl
cwtl
adc
repnz
sahf
outsb
and
pop
xchg
inc
mov
imul
popf
jp
sbb
xchg
rorb
sti
aas
lcall
jns
jmp
add
cmp
xor
pop
sub
gs
in
or
ss
call
popf
movsl
mov
aam
roll
pop
insl
jge
sbb
pushf
jae
mov
xor
or
call
aas
xchg
inc
add
sub
cs
out
lret
add
orl
scas
adcl
stos
shrb
ret
les
push
call
add
fidivrl
push
dec
pop
lock
popa
xor
cmp
scas
xor
mov
adc
jne
sbb
xor
mov
mov
push
mov
lods
dec
jecxz
insb
mov
pop
jg
push
sbb
mov
pop
pop
mov
push
sub
sbb
lea
push
jl
xchg
and
cmp
ss
out
sbb
cs
mov
push
shll
sub
xor
jb
mov
outsl
xchg
insl
movsb
faddl
and
xor
jb
pop
add
inc
push
cmc
mov
andb
lret
dec
cmp
scas
jl
in
cmp
insl
and
sbbl
test
sti
xchg
cmpl
stc
cmp
sbb
out
add
aad
lods
or
and
lret
movsl
outsb
into
ja
cmpsb
enter
je
imull
xchg
push
dec
jnp
sub
push
jnp
mov
fwait
xor
test
aas
out
and
sahf
sub
mov
mov
or
out
mov
cli
sbb
xor
jle
mov
loop
and
xchg
mov
lods
aas
outsb
rclb
sub
cmpsb
cmp
mov
mov
jno
push
mov
or
daa
xor
mov
lret
or
pop
stos
mov
add
cwtl
pusha
push
pop
mov
rcl
and
leave
je
push
shr
repz
lcall
outsb
scas
inc
andb
or
push
pop
scas
push
insl
cmpsl
mov
aam
clc
xchg
inc
push
mov
push
push
xlat
xor
lret
xor
adc
mov
in
jge
mov
pop
sbb
popl
movl
or
jns
push
mov
call
sahf
sub
xchg
add
test
dec
and
mov
inc
xchg
insl
ss
dec
inc
cmc
jae
jo
and
sub
pop
pop
jb
jbe
lea
and
cmpsl
inc
inc
xor
or
cs
cmp
scas
gs
inc
xor
popf
repnz
mov
fsubs
adc
lea
movsl
push
cs
xor
out
scas
adc
cmp
fmuls
mov
cmp
sbb
sbb
and
out
sbb
std
mov
mov
xor
mov
adc
cmpsb
jmp
rep
jbe
into
add
mov
jl
and
mov
mov
rolb
insl
mov
pop
es
aam
outsb
cld
jns
or
mov
hlt
shlb
lock
add
inc
dec
mov
in
lret
scas
leave
mov
cmp
icebp
into
data16
sub
outsb
jb
jecxz
pop
xchg
outsb
xorb
or
loop
mov
insl
inc
fidivl
sbb
cmp
cwtl
movsl
subb
mov
mov
mov
sbb
fdivrs
mov
cmp
stc
add
sub
inc
push
add
lds
repnz
jmp
mov
mov
adc
pop
cmpsl
call
fimuls
adc
loope
mov
dec
cmp
add
jns
pushl
clc
sub
xchg
ss
call
popa
cmp
in
mov
add
nop
push
adc
mov
xor
add
scas
pop
or
daa
in
pusha
hlt
dec
sbb
jnp
ljmp
gs
sub
jns
add
or
into
aad
jns
pop
xor
adc
jb
outsb
and
inc
stos
daa
sbb
stos
and
repnz
nop
orl
in
jecxz
rolb
xchg
or
aam
dec
rep
xchg
inc
mov
mov
pop
sahf
pushf
cltd
pusha
mov
jb
adc
jmp
popf
cwtl
push
std
xor
dec
inc
xchg
popa
test
or
adc
mov
test
or
in
mov
push
dec
inc
out
push
add
fsubrp
ja
in
es
mov
aam
and
inc
push
scas
pusha
js
imul
sbb
push
mov
sub
aam
add
mov
mov
or
movsb
lahf
mov
test
in
and
leave
jbe
aas
cmpsl
push
mov
xor
loope
loop
adc
push
rcr
jno
insl
out
scas
loope
bnd
cli
sarb
outsl
cmpsl
pop
cltd
or
repz
jo
push
pop
sahf
cld
sub
dec
loope
xor
inc
sub
bound
sub
inc
jno
test
cld
js
mov
pop
mov
psadbw
cs
mov
mov
nop
mov
dec
cmp
dec
xchg
push
and
mov
cmc
mov
pushf
mov
cmp
inc
jne
daa
std
dec
lret
pop
daa
mov
pop
testb
in
enter
or
jp
pop
cli
lock
add
insl
add
in
cmp
dec
jno
scas
imul
mov
pushf
mov
push
pop
push
ret
pop
mov
test
repnz
sub
fstpl
scas
mov
ret
imul
into
jp
or
aaa
xor
mov
xor
adc
ss
icebp
jb
rorb
adc
out
pop
movb
mov
sbb
ret
push
out
shrl
jle
sub
in
arpl
jp
stos
out
lcall
sbb
sub
js
ljmp
or
add
pop
sub
test
dec
pop
jle
sub
sbb
jp
je
mov
adc
mov
mov
mov
lret
and
lock
les
shll
or
dec
hlt
mov
aam
mov
mov
mov
sbb
pushl
jge
push
mov
push
lret
xchg
jb
cmp
pop
pop
push
lret
add
lock
call
or
push
inc
mov
sbb
ja
popa
add
fwait
adc
adc
scas
jbe
push
mov
rcrb
or
fsubl
test
imul
popf
jp
ret
lcall
cmp
shlb
popf
insl
xchg
clc
icebp
inc
dec
mov
popf
movsl
movb
push
jno
shlb
sbb
dec
push
sub
adc
xchg
outsl
test
dec
inc
je
jle
ret
push
in
rorb
mov
stc
pushf
xor
aas
dec
jecxz
xchg
pop
fiaddl
push
test
roll
add
imulb
sub
sbb
xchg
xor
and
mov
mov
outsl
xor
fidivrs
jbe
ficoms
mov
fidivl
mov
xchg
inc
aam
mov
adc
add
ret
cmpsl
shlb
xchg
mov
mov
cli
mov
cmpsb
out
outsl
mov
mov
pop
xchg
movsl
mov
shrb
pop
inc
dec
div
xor
mov
aad
in
or
xor
and
jns
adc
sbb
mov
pushf
adc
cmc
bound
adc
mov
ljmp
pop
pop
xor
pushf
rorb
iret
es
jae
mov
sbb
mov
push
and
movsb
mov
mov
movsb
es
stc
and
push
add
movsb
jmp
bound
mov
ljmp
cli
hlt
jg
mov
movsl
xor
sbb
dec
lcall
push
pop
dec
or
sub
sbb
insb
ljmp
and
in
fsubl
xchg
cmp
inc
movsb
fidivrl
mov
js
or
sub
jle
jb
fistpl
fdivrs
cwtl
push
dec
push
loopne
pushl
test
push
xor
or
cmp
lahf
mov
sti
add
adc
jo
insb
and
push
cmp
cmp
rol
cmp
ds
jb
int3
test
movsb
cmc
mov
fldl
sahf
out
int
loope
dec
or
cltd
aam
jge
sub
jno
cmp
sub
repz
lock
shl
lret
subb
out
push
testl
loop
inc
sahf
pop
jno
lret
ljmp
push
scas
and
shlb
jp
or
mov
push
and
cmpsb
and
jbe
mov
jge
mov
mov
pushf
inc
xchg
xchg
mov
sbb
and
push
outsl
sub
filds
in
mov
sub
pop
addr16
jae
fisubrs
icebp
pop
bound
sbb
fstpl
out
in
add
jp
or
jns
jns
sahf
pushf
shrl
pand
inc
popf
loop
add
lret
adc
dec
sahf
into
adc
lods
and
cltd
insl
arpl
cmp
int
test
test
in
sbb
hlt
sbb
push
cmpsb
mov
mov
sbb
loopne
xor
sub
rclb
adcl
lock
test
jns
int3
pop
push
push
or
pushf
js
mov
push
pop
outsb
adc
add
xchg
jo
data16
or
loope
in
cmp
and
mov
out
mov
outsl
push
xor
jne
add
outsb
cmp
roll
pushf
pop
mov
dec
xlat
sub
inc
inc
iret
push
incb
data16
mov
sub
js
lahf
or
scas
dec
ret
add
mov
cmp
xor
xchg
test
lods
mov
adc
sbb
inc
test
mov
pop
std
into
jnp
pop
aaa
push
ficoms
ja
add
xlat
inc
jne
mov
push
push
adc
jg
ja
scas
add
inc
outsl
psubd
popf
out
aaa
sbb
movsb
outsb
ja
cs
fcmovb
ret
adc
icebp
aam
sbb
testb
or
jmp
xchg
aad
mov
sub
and
xor
push
xlat
test
sub
cmp
testl
fimull
jmp
loope
jnp
js
cmpsl
mov
idiv
dec
imul
arpl
popa
loopne,pn
or
nop
and
inc
sbb
sbb
sub
push
data16
in
jbe
icebp
cld
fists
xor
cmp
push
push
push
cmp
daa
jno
mov
mov
inc
imul
inc
stos
enter
adc
sub
repnz
into
xchg
sbb
popf
mov
sub
jmp
xchg
sbb
std
lcall
cmpsb
push
push
xor
out
adcb
stos
add
scas
sub
scas
dec
jnp
insl
add
lret
cmp
out
aas
push
pop
repz
icebp
sar
jle
jbe
pop
sbb
insl
mov
rcll
data16
cs
mov
or
xor
jo
jb
push
adc
xor
rolb
fisubrl
dec
sub
and
lcall
lret
leave
sbb
nop
iret
repz
and
push
cmp
test
mov
std
pushf
push
and
mov
push
shrl
das
addr16
sub
sbb
pusha
push
lret
out
repz
enter
mov
xchg
ljmp
push
aad
ljmp
pop
icebp
adc
adc
add
jo
cmp
or
popl
mov
xchg
jge
icebp
jne
sub
inc
in
stc
lahf
xor
into
jne
cld
lcall
xchg
dec
movl
in
inc
and
insl
inc
cmpsb
inc
add
fcoml
out
xchg
jmp
dec
mov
test
jle
pop
dec
pop
mov
xlat
repnz
mov
inc
sub
mov
lods
packssdw
inc
inc
insl
inc
fdiv
inc
jmp
das
mov
aas
inc
out
sbb
cli
fsubrs
jbe
loop
outsl
call
dec
and
pop
or
mov
sub
pop
lods
jo
xor
pop
roll
jmp
adc
pop
xor
push
adc
aas
mov
fldcw
mov
add
orl
insb
adc
repnz
repnz
push
mov
test
dec
push
and
lret
sbb
lret
addr16
andl
pop
push
stos
sub
mov
mov
dec
imul
or
fwait
inc
cmp
repz
dec
inc
gs
fwait
movsl
push
mov
out
push
pop
cmp
jae
jmp
outsl
and
mov
pusha
out
popf
lods
pop
mov
jl
fldcw
jg
lcall
or
lds
notb
xorb
sahf
arpl
push
mov
push
sub
dec
sub
xlat
pop
leave
jae
mov
mov
dec
push
push
stc
pusha
popf
and
sub
jg
xor
enter
scas
jne
test
and
popf
imul
jg
js
mov
xchg
fisubrs
inc
outsb
sti
cmpsl
and
mov
orl
adc
xlat
mov
aad
lock
cmp
jnp
daa
xor
cmp
cmp
inc
into
mov
cmp
lret
fadd
xchg
sbb
dec
mov
cmp
fldcw
daa
sub
adc
mov
dec
ret
int3
push
outsb
sub
out
sub
jge
jle
out
and
mov
mov
sbb
mov
call
jle
in
imul
sbb
sbb
or
dec
inc
push
pushw
xchg
lret
or
sub
das
adc
sbb
and
mov
sub
pushf
fstps
mov
inc
adc
popa
and
mov
push
sub
push
ja
je
icebp
dec
lahf
mov
pop
or
out
cli
fstl
and
or
xor
pop
dec
flds
jne
es
jb
jmp
pop
lea
adc
sbb
jnp
adc
ja
cltd
nop
push
stos
or
shlb
dec
dec
inc
out
and
push
sbb
shlb
xchg
loopne
lcall
test
mov
mov
rclb
pusha
adc
cmp
push
aas
cld
lock
in
lea
out
sub
inc
pop
inc
shrl
mov
mov
outsl
adc
sub
mov
arpl
je
inc
jno
pop
add
les
ret
adc
imul
decl
sub
pusha
into
xchg
addr16
push
mov
ret
aaa
mulb
push
in
sarb
sub
fmul
sub
adc
test
xchg
arpl
sub
mov
adc
movsb
mov
jge
adc
push
push
cs
xchg
test
stos
pop
icebp
fidivrl
add
dec
sbb
stc
mov
in
inc
push
dec
jecxz
mov
daa
jecxz
xor
mov
ljmp
out
lret
jae
push
sti
jecxz
out
push
add
int3
lcall
sub
jmp
sub
push
push
fwait
scas
pop
iret
xchg
mov
pop
push
mulb
fisubl
push
dec
add
sbb
dec
cmpsb
mov
mov
xor
ja
cmp
mov
leave
shlb
push
ja
xchg
cli
jecxz
pop
icebp
lahf
bound
mov
jmp
outsb
in
cwtl
push
ja
and
addr16
jp
mov
hlt
push
push
ss
out
pop
jae
test
mov
dec
popf
jmp
push
pushf
movb
int
les
aam
jp
fxam
data16
lret
lds
and
inc
xchg
negl
dec
fidivrs
lock
xchg
mov
jg
sub
xchg
in
stos
int3
inc
out
mov
subl
pop
mov
cmp
push
xchg
loopne
cltd
ret
xchg
dec
xlat
call
pop
je
push
addb
aaa
or
stos
and
mov
in
mov
add
sub
cmpb
out
sbb
test
addr16
jb
fldl
lret
fld
shlb
sbbl
jmp
imul
lret
fimuls
or
test
movsl
and
inc
jne
or
pop
or
into
xchg
and
mov
add
mov
outsl
sbb
push
std
das
mov
faddl
imul
icebp
int3
popa
dec
pop
ret
mul
add
jne
xchg
add
sti
dec
push
mov
rcrb
lea
cli
fwait
sub
cwtl
movsl
das
or
fcompl
insb
inc
xchg
shl
push
aam
cmpsl
sbb
jne
das
js
cltd
and
mov
xor
jo
cli
nop
lret
roll
cmpsl
pop
mov
cmp
and
push
add
jns
leave
cltd
insl
cmp
fucomi
mov
pop
push
in
pop
fwait
in
loopne
lds
popa
jns
mov
cli
inc
inc
ret
inc
scas
sbb
jne
sti
sbb
jle
stos
fsubl
lds
std
pop
sbb
addb
out
into
jl
and
sub
mov
repnz
push
xlat
dec
mov
sbb
das
inc
les
cmc
cmc
popa
mov
add
js
inc
mov
mov
adc
int3
loop
add
sbb
test
xor
ret
mov
push
lahf
add
cmc
pop
inc
pop
and
jbe
in
inc
test
dec
shr
in
xlat
cltd
cmp
xchg
les
push
imul
or
rcl
pop
mov
sbb
jle
fnstenv
in
jb
nop
cld
mov
mov
out
inc
movsl
xchg
in
out
call
out
daa
add
dec
rcl
add
jns
ss
push
in
sahf
adc
push
xchg
lea
add
ret
cmova
mov
stos
fwait
or
fsubs
push
push
add
ss
mov
push
out
adc
cwtl
std
jnp
ret
mov
pop
push
mov
das
mov
push
add
lock
and
xchg
insl
xor
cmp
loopne
push
mov
test
mov
sbb
push
xor
jp
mov
testb
popa
xlat
pop
inc
jp
sub
or
int
shr
inc
cmp
enter
mov
inc
sti
jnp
repz
cmp
pusha
insb
mov
sti
pop
repnz
jmp
pop
push
push
sbb
stos
pop
nop
sub
lahf
push
pop
nop
push
mov
xchg
mov
xor
push
inc
jge
or
pop
or
mov
and
es
pushl
addr16
aas
dec
lods
xor
push
bnd
jae
mov
push
loop
iret
mov
pop
icebp
and
pop
pop
in
sbb
ficoms
stos
mov
gs
mov
adc
and
lret
lods
add
lods
loope
adc
push
adc
sahf
adc
mov
mov
mov
out
insl
je
nop
test
out
dec
push
lods
repnz
xor
out
push
jne
and
mov
scas
cmp
insl
call
test
inc
add
loope
mov
inc
mov
add
pop
fldl
fldcw
jo
jae
or
sub
inc
in
inc
fcomps
and
sbb
mov
xor
add
jno
ljmp
mov
mov
ret
aaa
sub
add
test
cmpsb
mov
pop
xlat
push
incb
add
bound
fnsave
lahf
push
ficoms
jae
lock
mov
push
das
out
xchg
xor
xchg
in
push
jmp
mov
mov
das
and
in
bound
inc
mov
sub
cmc
xchg
and
jae
and
sarb
shlb
inc
cmpb
adc
iret
in
cmpsl
out
adc
dec
mov
pop
adc
inc
jle
mov
icebp
scas
test
adcl
packsswb
mov
bound
enter
adc
pop
add
in
lods
addr16
cmp
daa
loop
je
add
xor
pop
lret
outsb
inc
loope
andl
jmp
sub
adc
dec
pushf
mov
push
jb
jle
mov
aaa
lds
dec
call
xor
xor
lcall
push
sbb
jge
push
add
push
lock
cmp
ss
and
out
iret
fwait
js
aaa
int3
pop
cmpsl
adc
lret
mov
cltd
add
pop
mov
lret
lock
mov
in
or
jl
jae
pop
mov
sbb
push
clc
dec
jl
or
mov
in
leave
cmp
ss
repz
push
inc
enter
mov
pop
out
cli
ljmp
movsl
pop
push
jle
mov
orl
dec
or
mov
xor
arpl
in
bound
jne
cmp
xchg
divb
aad
insl
dec
dec
cmpsb
das
inc
sti
and
mov
iret
hlt
jne
sbb
popf
mov
sbb
fldcw
adc
in
fs
fildll
jb
and
mov
scas
dec
push
jge
push
nop
cmpsl
push
rorb
jl
mov
daa
fldcw
fdivl
movsb
mov
xchg
sbb
mov
fisttpll
daa
in
sbb
arpl
dec
push
push
add
and
push
sti
pusha
negl
xor
fmuls
test
or
xor
and
or
push
dec
jne
inc
mov
mov
mov
sbb
cmp
scas
mov
jb
fistl
and
sbb
sub
aad
std
push
push
and
dec
in
cmp
and
repnz
cmp
out
orl
shl
scas
xchg
jne
int
sub
mov
or
mov
in
cltd
rorb
push
pop
pop
cld
mov
js
shll
lods
aam
icebp
xchg
movsb
addb
push
jmp
cmc
lods
jl
stos
pop
imul
push
decb
aaa
cmpsl
mov
mov
xchg
insb
xchg
xchg
mov
and
jo
in
dec
sbb
cs
sub
fwait
inc
xorb
adc
and
mov
sbb
add
shlb
out
jg
mov
sub
or
mov
sti
dec
cmp
mov
cmp
cwtl
xor
mov
mov
jl
loopne
dec
sti
repnz
bound
mov
enter
mov
mov
std
pusha
mov
dec
sub
mov
mov
and
shll
push
adc
pop
sarb
mov
add
std
jb
scas
cltd
fdivl
mov
out
loop
dec
xor
mov
insl
xor
popa
in
dec
movsb
jne
test
mov
gs
test
test
subl
add
jmp
adc
into
adc
cmp
mov
push
mov
iret
jo
mov
adc
int3
add
pop
shll
add
in
mov
dec
jge
out
adc
iret
lret
inc
xchg
stos
aaa
cmpsl
xchg
inc
xor
std
repnz
aas
add
sub
test
jge
and
ret
aam
aas
cmpsl
addr16
sbb
pop
jg
cltd
icebp
arpl
loope
pop
inc
and
mov
stos
test
lahf
in
repnz
cs
and
roll
icebp
xchg
fwait
in
mov
xor
jg
jl
sbb
dec
mov
lods
sub
xchg
mov
addr16
add
jb
out
mov
push
lcall
xchg
stos
notb
lds
arpl
lahf
rcll
mov
popf
mov
test
xchg
aas
mov
jmp
nop
stos
mov
pop
sarb
add
pop
incb
test
inc
xchg
inc
adc
and
mov
icebp
mov
pop
dec
popf
pop
mov
jle
dec
sub
addr16
xor
mov
sbb
dec
mov
jnp
lret
mov
vmovaps
lea
dec
scas
nop
sub
or
data16
data16
hlt
adc
cli
nop
aam
enter
mov
in
or
hlt
enter
or
xchg
fsubl
and
insb
stos
pop
les
push
in
pop
fidivs
or
push
jmp
shll
pop
test
lret
mov
cmpsl
adc
adc
addb
stos
xor
sbb
out
xchg
jecxz
pop
incl
mov
jecxz
mov
jmp
jo
cld
pop
fstps
or
orl
xor
test
adc
jbe
inc
out
push
setge
sbb
notl
cmp
ja
ljmp
lret
shlb
std
aas
xor
adc
and
sbb
mov
fmull
sub
sub
push
dec
sbb
cli
les
jle
mov
xor
ja
sub
mov
xchg
out
pop
fdivrs
insl
test
out
aam
loopne
mov
hlt
mov
out
divps
orb
testl
imul
popa
mov
arpl
jo
shll
lret
jg
jmp
mov
in
push
adc
les
add
imul
cmp
adc
test
sub
inc
cmc
xchg
jecxz
call
cs
es
ret
testl
push
jecxz
jle
jmp
nop
outsl
dec
sbb
add
into
cmp
mov
cmp
jne
das
xor
jmp
sbb
mov
cmpsb
inc
dec
in
daa
loop
je
cmp
mov
xor
scas
pushf
test
sbb
in
scas
sub
jmp
inc
mov
mov
xor
add
sbb
loopne
divb
mov
imul
mov
loope
out
mov
mov
inc
mov
sbb
shrl
jmp
scas
sub
xchg
hlt
iret
or
pop
cmp
std
adc
fwait
adc
sbb
xor
imul
pop
outsl
xor
daa
jns
lcall
sarl
lds
xor
push
outsb
lret
divb
sbb
insb
inc
imul
mov
mov
pop
cmp
test
jg
or
cmp
xchg
or
pop
dec
dec
clc
dec
cmp
sub
scas
jl
pop
out
outsb
notl
push
mov
mov
xor
ja
and
rorl
push
inc
pop
shll
stos
icebp
ret
rcl
inc
daa
sbb
adc
sub
and
test
sbb
test
mov
imul
mov
push
shlb
mov
iret
leave
shl
loopne
cld
lret
sbb
imul
inc
out
bound
adc
push
jno
mov
xor
mov
push
push
iret
lahf
pop
inc
push
cli
movsb
sahf
mov
movsl
and
add
ret
std
mov
mov
out
add
popf
sub
es
jge
cmp
popl
pop
pop
inc
js
pop
movsl
gs
loopne
les
mov
dec
lock
cmp
push
insb
sub
cmp
jns
fisubrl
imul
add
inc
mov
test
stos
imul
imul
leave
loopne
hlt
cmp
mov
ret
jno
movsb
add
notb
test
fucomip
sbb
cmpsb
cmovb
in
movsb
ljmp
subl
mov
fcompl
sbb
fisubrs
stos
ljmp
fnstcw
icebp
mov
movsl
test
add
in
mov
sub
daa
ss
cmpsl
arpl
test
push
fstpt
xor
andb
xor
daa
adc
lret
ja
daa
outsl
call
cmp
dec
xchg
int
push
mov
aad
dec
sub
pop
lret
or
cmpsl
mov
xchg
mov
dec
cmpl
es
pop
pop
cmp
idiv
jecxz
and
dec
out
mov
lret
ljmp
pop
jbe
cmp
js
mov
sbb
test
ret
clc
push
jl
pop
jb
ljmp
arpl
mov
cli
popf
jg
fdivl
je
jno
in
or
and
mov
fisttpll
mov
test
cmc
outsb
xorb
sahf
imul
push
jge
fadds
mov
xchg
leave
nop
loopne
or
mov
add
pop
adc
inc
push
movsl
sbb
sbb
cwtl
adc
aam
aad
in
hlt
arpl
dec
ror
inc
cmpsl
aam
enter
xor
jno
or
lret
inc
std
mov
mov
push
notb
add
insb
test
mov
inc
xchg
clc
add
adc
xlat
mov
rcrb
fistps
jno
movsl
fistps
fbstp
dec
mov
pop
xor
dec
mov
fdivs
jno
xchg
cmp
mov
daa
out
mov
xor
and
mov
sbb
cld
addr16
jp
js
cmp
xor
lret
pop
adc
jmp
mov
jp
bound
pop
inc
aam
and
inc
rolb
stos
add
mov
pop
test
sbb
push
enter
mov
loop
sbb
xchg
pop
int
pop
insb
cli
sbb
fcom
fistpll
push
nop
jns
inc
pop
cmpsb
fcompl
xor
xor
sbb
aaa
jmp
filds
jae
pop
and
mov
into
add
push
fwait
das
cmp
in
scas
inc
jmp
scas
mov
mov
pop
inc
jae
sti
adc
cmp
jmp
sub
loopne
mov
cltd
xchg
mov
push
dec
adc
sbb
xor
das
xchg
dec
enter
aas
loop
and
sti
cmpsl
pusha
add
mov
jo
popa
pop
lea
sbb
jns
sbb
and
fwait
mov
mov
dec
xchg
mov
push
into
daa
out
enter
mov
pushf
pop
lret
xor
push
cli
stos
mov
mov
mov
fs
idiv
mov
mov
mov
orl
imul
xchg
adc
xchg
cmp
mov
idivl
orb
push
and
add
jmp
cmp
iret
lret
sbb
data16
stos
or
push
adc
shll
sub
adc
xchg
push
jecxz
idivl
or
sti
xchg
cli
shlb
jecxz
xlat
push
movsb
sub
clc
jns
adc
mov
les
cmp
das
dec
sti
dec
or
xor
cmp
push
jg
fistpll
cs
adc
push
stc
sub
and
mov
cmp
jne
gs
out
add
test
mov
call
in
or
mov
insl
mov
adc
bound
rclb
fsubs
or
sbb
scas
ret
lods
xchg
je
imul
mov
jne
cli
mov
jmpw
and
xlat
adc
mov
fnsave
sbb
mov
mov
jns
xchg
dec
xor
clc
jg
outsb
xor
xchg
inc
and
fiadds
push
push
int3
and
cmpsl
mov
mov
sub
pop
add
xor
or
jb
inc
stos
popa
out
jb
stos
jg
insb
inc
and
subb
jg
rclb
or
js
out
pop
hlt
jns
icebp
fwait
sti
dec
dec
aam
sbb
push
and
push
mov
in
jnp
sub
mov
daa
adc
jns
cmp
js
pop
mov
add
mov
and
jg
mov
add
push
lcall
mov
cmp
out
sbb
dec
sub
addr16
mov
push
sub
das
addr16
call
outsl
test
jl
sbb
cs
add
xchg
adc
scas
jo
mov
call
dec
inc
push
push
and
xchg
sbb
ret
mov
adc
xchg
lcall
jne
cmp
in
nop
mov
fimuls
ss
loop
insb
sbb
or
adc
inc
test
ja
sbb
aaa
sbb
xor
ja
jmp
add
lods
out
pop
jae
es
mov
cmc
cmp
inc
push
mov
cs
cmp
push
adc
movsb
sub
call
jle
test
cmp
cmp
popf
ficoml
sarl
jl
push
cmpsb
das
mov
inc
or
xchg
fs
mov
sbb
fsts
adc
cmp
outsl
lret
loope
aad
cwtl
sbb
xchg
out
scas
repnz
xchg
cmc
mov
add
or
fldenv
push
inc
rcr
xbegin
inc
mov
fadds
adc
aad
in
std
dec
int
xchg
mov
cltd
xor
jae
lds
mov
xor
mov
sbb
xchg
hlt
jmp
jg
out
test
cmc
dec
dec
lods
jo
loopne
dec
dec
xor
fimuls
rorb
add
push
mov
push
mov
pop
pop
cmpsb
jno
jmp
stc
add
mov
les
call
add
mov
mov
inc
test
lea
int
pop
add
pop
dec
jp
mov
jae
sub
loop
push
insb
test
ds
adc
jecxz
or
call
xor
stos
mov
pop
inc
push
xor
lcall
arpl
cwtl
es
jae
testl
loopne
iret
fwait
pop
test
aad
or
testl
sahf
pushw
jge
fstl
test
in
loop
in
inc
idivl
notl
movsl
fcoml
or
shr
into
jl
mov
sahf
lods
sub
loope
enter
xor
iret
adc
mov
jp
xor
cmp
lea
dec
in
fstps
outsb
test
imul
cmp
mov
ja
adcb
js
insb
or
pop
shr
sbbb
rolb
sub
inc
dec
mov
adcl
lret
sbb
std
ds
movsb
outsb
lcall
pop
shr
iret
mov
or
mov
inc
mov
rol
jecxz
icebp
out
push
jae
inc
sbb
in
bound
sub
sbb
cwtl
and
cltd
cmp
repnz
or
dec
inc
popf
inc
mov
lahf
in
pop
push
xchg
into
cmp
dec
lods
mov
pop
loop
push
movsl
scas
out
and
dec
cmp
pop
pop
push
mov
dec
daa
mov
test
addr16
imul
jle
repz
orl
jl
xchg
or
out
iret
cltd
mov
in
push
popf
inc
fadds
jb
ja
repnz
adc
fwait
inc
or
leave
dec
fdivrs
xor
lock
std
sbb
sub
sti
lea
mov
cld
mov
das
pushf
in
push
neg
insl
cmp
jecxz
ficompl
shrb
fisubrs
cli
mov
mov
testb
sub
sbb
cmpsb
fwait
jns
xchg
dec
mov
out
push
xchg
jmp
mov
and
jecxz
xor
hlt
cltd
outsl
mov
lock
mul
jecxz
je
fdivrs
dec
mov
ss
xbegin
testl
and
adc
pop
js
mov
cmp
roll
xchg
push
int
xchg
or
xlat
pop
arpl
dec
jmp
xchg
inc
out
stos
ljmp
sub
aaa
xor
mov
sub
mov
inc
aaa
into
movsb
dec
xor
xor
jnp
dec
sbb
test
std
pop
sub
push
pop
imul
cmpsb
mov
jecxz
clc
push
cmp
xlat
outsb
ret
mov
sub
pop
outsb
faddl
sub
imul
mov
imul
test
jo
jnp
dec
loope
mov
jg
imul
addr16
pop
aas
arpl
sub
ljmp
mov
fldl
sbb
inc
jnp
data16
popf
scas
loope
jmp
jns
mov
xchg
dec
mov
dec
loopne
cltd
loop
subb
push
jnp
aaa
inc
push
mov
notb
xchg
dec
adc
xor
pop
lahf
dec
mov
dec
insb
xchg
sbb
dec
lock
dec
clc
fwait
jbe
lock
arpl
shlb
movl
mov
fcomps
out
notb
push
mov
mov
pop
lcall
ljmp
cmp
mov
adc
shlb
sub
int
pop
orb
sarl
xchg
and
mov
je
outsl
dec
push
push
movsb
aaa
mov
mov
xchg
adc
xchg
mov
or
mov
das
in
adc
aas
jo
mov
popa
dec
push
inc
divps
outsb
push
mov
clc
adc
vpaddsw
dec
addb
adc
push
int3
and
push
nop
cld
scas
lods
mov
hlt
jg
addl
xchg
imulb
cltd
or
ljmp
rorl
stos
addr16
xchg
fwait
sub
xorl
sbb
push
neg
xchg
dec
fdivr
mov
inc
call
je
rcl
loop
cmpsb
adc
scas
or
sub
mov
cmp
jg
push
sbb
loopne
popa
adc
sbb
mov
mov
enter
pop
lcall
jecxz
in
push
loopne
mov
sti
ljmp
enter
jo
pushf
aad
movsl
lods
or
push
pop
pop
imul
loop
mov
mov
mov
fstpl
mov
pop
outsb
mov
cwtl
stos
test
xchg
test
sub
lret
dec
sub
outsb
add
lds
jbe
mov
in
push
pop
jns
sbb
mov
mov
jg
mov
sub
mov
xor
sub
mov
pushf
adc
scas
divl
xor
jle
mov
inc
jg
mov
push
xor
add
rolb
mov
aam
fildll
shl
ret
outsb
sub
repz
je
mov
add
jae
das
mov
mov
adc
arpl
xchg
adc
and
cmpsb
adc
outsb
scas
xchg
jne
push
sub
jne
cmpl
ror
adc
out
outsb
outsb
nop
test
xor
pop
xor
mov
mov
push
push
cmc
mov
inc
lds
mov
sbb
mov
sub
and
xchg
push
stos
subb
rolb
arpl
dec
lods
lock
out
loop
jl
in
ret
xchg
or
pop
push
mov
mov
xchg
mov
sub
stc
iret
mov
ljmp
cmp
cmpsb
sbb
lcall
mov
jo
dec
push
sbb
jne
mov
aad
rcrl
orl
sti
push
movsb
dec
xor
out
cmpl
and
int3
mov
loope
push
cmp
pop
adc
fdivr
cmp
xchg
push
pop
jae
rcll
cmp
adc
inc
add
jecxz
test
loop
xor
mov
fidivs
push
pushf
xor
mov
test
jbe
mov
mov
sahf
cmp
push
inc
xor
jp
add
lret
rol
push
xchg
mov
push
push
repz
and
sbb
adc
push
jb
lret
into
xlat
push
popa
movsb
dec
icebp
out
addl
mov
aad
lods
aas
fistpll
mov
add
lahf
push
and
fisttpll
aas
in
call
popa
push
sbb
test
clc
shll
call
jae
stos
icebp
mov
jp
enter
fdivp
cmpsl
cmp
arpl
fdivl
and
sub
cmp
mov
pop
jnp
repnz
addr16
mov
lret
shlb
sub
and
jge
push
mov
mov
mov
mov
fistpll
xchg
in
xor
pusha
or
jae
xor
andb
fstl
mov
xchg
mov
mov
add
sub
pop
jle
bound
xchg
mov
aaa
sbb
mov
stc
fldt
cmp
jmp
mov
orb
cmc
out
aaa
fldl
mov
push
popa
push
mov
loope
clc
jnp
jne
push
int
mov
stc
mov
ljmp
mov
sbb
push
ficomps
cwtl
sahf
xor
xor
jo
mov
push
js
sti
cmpsl
mov
push
test
and
mov
int
and
xlat
push
jmp
orb
cwtl
out
hlt
dec
loope
pushf
mov
sarl
std
push
enter
push
loopne
in
rcll
mov
int
in
or
mov
dec
loop
jmp
xchg
add
and
es
dec
test
xchg
std
inc
mov
cmc
mov
xchg
mov
xchg
scas
push
push
pop
inc
cmp
icebp
xlat
xor
roll
cmp
cmp
mov
cld
cmc
or
cmp
sub
add
add
xchg
sbb
testl
sbb
rorb
movsl
movsb
imull
mov
mov
inc
pop
andb
mov
mov
jmp
inc
dec
outsb
or
mov
push
adc
bound
mul
outsl
sbb
push
stc
mov
dec
mov
xchg
shl
dec
pop
jp
in
fldl
sbb
out
pushf
iret
push
lret
ds
int
adc
mov
in
push
clc
sbbl
call
mov
xor
fwait
repz
shll
sti
sub
mov
push
sbb
push
test
or
std
mov
cs
mov
ds
jns
jns
rcrl
fwait
mov
mov
cmp
test
lods
lods
sbb
lds
pop
movsb
jno
lds
sbb
insl
bound
pop
push
das
pop
mov
rolb
mov
or
mov
lock
fimuls
lds
jecxz
int
imul
mov
dec
cmpl
jge
into
pop
lods
lret
mov
pop
jb
mov
bound
repnz
mov
inc
cvtps2pd
cwtl
inc
cs
std
cmp
push
rorl
test
lcall
jl
cltd
sar
loopne
mov
loopne
icebp
movsb
sti
bound
test
imul
push
hlt
sub
sbb
clc
pushf
int3
or
sub
xchg
sahf
and
push
mov
sub
addb
iret
imul
mov
out
outsb
ret
icebp
aas
int
jg
mov
cmpsb
inc
add
mov
inc
push
hlt
mov
add
pop
rorb
sahf
dec
test
ret
sub
sbb
enter
push
cmp
out
inc
sbb
inc
call
std
and
test
adc
test
mov
jg
inc
pop
orl
push
ljmp
mov
in
leave
gs
adc
xor
jge
mov
pop
out
push
loop
xchg
push
and
adc
les
add
sub
cmp
test
xor
out
push
cwtl
push
cmpsl
xor
pushf
movsl
inc
pop
daa
add
ficompl
iret
xorl
movsb
add
cmp
adc
mov
xchg
xor
test
inc
mov
insl
add
adc
jnp
push
cmpsl
sbb
stos
mov
jecxz
out
jl
mov
mov
adc
loope
bnd
leave
or
pop
in
test
cmp
subl
xlat
pop
pop
xchg
in
outsb
push
inc
inc
sub
or
subb
data16
sub
sub
arpl
or
loope
sub
or
mov
sbb
or
rclb
jae
push
out
add
inc
in
add
mov
sub
popa
je
mov
cmp
dec
fwait
clc
sbb
lret
jns
fcomps
enter
sbbl
clc
cmp
insl
push
sub
sub
jae
jecxz
loop
xor
fldenv
push
inc
sbb
cld
sbb
sbb
addr16
hlt
cmpsl
lret
fstpt
mov
ja
mov
and
mov
jns
mov
xlat
hlt
stc
data16
lret
fsubrs
aam
add
lods
fidivl
push
jmp
and
cli
in
lahf
inc
add
inc
or
jae
shll
push
lcall
ficomps
sbb
xchg
aam
stos
cmpsb
jmp
jg
outsl
dec
in
sarl
aas
xor
repz
cmc
in
test
addl
cwtl
scas
sub
mov
out
fdivl
test
insb
sahf
int3
hlt
pop
out
adc
lds
in
je
xor
gs
stc
mov
into
test
mov
test
mov
cld
arpl
sbb
or
iret
pop
mov
or
out
fst
adc
jmp
mov
movsb
rorb
fildl
cmp
and
mov
and
scas
icebp
pop
mov
mov
loopne
test
xchg
sub
pop
out
js
das
std
mov
add
sub
std
daa
and
add
inc
jbe
loopne
xor
sub
or
dec
pop
enter
sbb
rcr
adc
inc
mov
adc
dec
pushf
pop
repz
ret
jae
mov
jmp
mov
sub
sub
cmpl
repnz
enter
sbb
stos
jno
loope
inc
pop
cmp
test
push
and
xchg
roll
or
xchg
lods
dec
insl
call
sub
jae
ds
jmp
mov
out
xchg
sub
addr16
cmp
mov
jge
and
fistl
xchg
pop
imul
into
lcall
pop
es
sbb
pop
packsswb
mov
movb
adc
sub
adc
std
std
pop
inc
cwtl
and
pop
imul
or
or
int
fisubrs
out
jecxz
imul
jbe
fcmovbe
push
dec
lds
mov
push
stc
fwait
into
into
stos
pop
cmpsb
popf
test
mov
scas
imul
push
jmp
lds
pushf
mov
sbb
in
jp
sbb
outsl
lea
inc
xchg
sub
rcrb
sub
add
jae
xchg
in
mov
pop
push
cmpsl
or
movsl
mov
xor
adc
fwait
push
mov
and
int
push
inc
inc
inc
cmc
jns
push
call
adc
push
negl
inc
hlt
jne
filds
lds
dec
xor
stos
pushf
mov
dec
mov
ret
and
test
fsubp
adc
xor
cmp
imul
push
sub
aam
popf
outsb
cld
js
lret
push
dec
cmp
leave
mov
lea
jbe
scas
rorl
movsl
cwtl
inc
fwait
cmp
push
test
pop
adc
push
dec
pop
lret
jecxz
mov
mov
loope
je
xchg
sbb
data16
popa
sbb
push
push
ds
aad
cmpsl
test
sbb
aam
add
sub
xchg
cli
bound
cmp
loope
shll
push
int3
pop
cmp
sbb
test
and
mov
scas
mov
jecxz
push
outsl
jo
mov
xchg
pop
add
push
arpl
pusha
out
jno
repnz
aad
jae
out
cmp
js
scas
mov
jmp
xchg
inc
xchg
int
inc
lahf
add
lock
and
jmp
and
iret
mov
push
or
mov
push
mov
insl
mov
testb
subl
add
imul
push
out
pop
inc
lea
out
jae
bound
adc
jb
imul
call
push
ret
sub
aad
jno
les
push
jg
xchg
popf
imul
aad
imul
jle
mov
hlt
icebp
mov
test
jge
lock
xor
jge
sbb
pop
std
and
or
hlt
mov
sti
inc
push
add
xor
mov
sub
xor
sub
xlat
xchg
inc
push
push
jp
popf
mov
jnp
addr16
pop
iret
push
test
jp
mov
pop
inc
lock
cmp
loopne
cltd
push
pop
xor
pop
jmp
cmp
mov
lods
jmp
std
and
cwtl
enter
adc
cmp
fwait
and
lahf
xchg
ret
clc
sub
push
shlb
xchg
inc
cmp
repz
cmp
lds
insb
inc
cmpsl
adc
add
adc
mov
ret
and
sbb
mov
mov
dec
inc
loopne
aas
inc
loope
mov
incb
movsl
pop
cltd
xor
pop
xchg
push
xchg
fbld
pop
or
test
sar
stc
loope
test
cmc
mov
lods
pop
cs
push
stc
fisttps
lods
enter
cli
or
push
sbb
aas
cmp
cmp
arpl
cmpsl
mov
lock
cmpsb
stc
sub
inc
mov
mov
mov
mov
cmpsl
mov
sbb
in
and
fdivrs
inc
enter
cmpsl
jae
mov
mov
adc
loop
lds
fcomip
repnz
or
dec
cs
das
fs
dec
adc
out
pop
ret
push
push
lods
mov
pop
or
mov
mov
pop
xchg
xchg
sbb
mov
adc
sub
lret
mov
aaa
imulb
or
mov
and
dec
popa
scas
loope
imul
insl
stc
adc
mov
push
daa
sti
and
xorb
pop
stos
fbstp
aad
dec
nop
sbb
hlt
cltd
cs
mov
cmp
in
lahf
sbb
pop
cmp
sbb
push
cmp
xchg
sbb
sub
in
cmp
or
push
lea
push
cmp
jb
push
mov
pop
hlt
loopne
add
jae
xchg
mov
xor
sbb
sbb
adc
lcall
xchg
mov
enter
pop
xchg
jecxz
jg
and
fldl
enter
loopne
aad
cmp
dec
adc
fstps
ss
sbbb
inc
mov
push
xor
mov
jp
add
pop
jp
scas
mov
insl
or
nop
mov
mov
sub
sub
xchg
sbb
add
xor
fwait
dec
xlat
sub
pop
pushf
xchg
push
aad
int
testl
imul
xor
cld
repnz
sbb
jnp
or
jae
repnz
divl
add
mov
imul
xchg
lods
fnsave
pop
pop
sub
xchg
lods
sahf
lods
sub
pop
xchg
ja
xchg
sub
cs
in
pusha
mov
js
mov
movsb
sbb
outsl
sbbb
clc
mov
out
int3
dec
inc
sub
lods
les
scas
sbbl
mov
lret
aaa
dec
dec
int
pop
add
mov
xor
hlt
cmp
adc
cmp
xchg
push
scas
mov
jle
pop
cwtl
adc
push
mov
fistpl
enter
daa
jmp
or
inc
ja
push
jnp
push
js
outsb
jne
or
jl
dec
rcrb
mov
lret
shl
das
pop
ficomps
fcoms
mov
adc
dec
push
clc
lock
sahf
movsl
pop
mov
adc
cld
std
cld
test
adc
adc
push
cmpsl
data16
aaa
jge
push
jnp
sub
je
lock
dec
jg
and
dec
or
out
popa
jnp
and
imulb
ja
mov
cmp
dec
xor
push
in
rcrl
les
outsl
test
mov
iret
xchg
jae
insl
push
ret
push
aam
pmulhuw
cmpsb
out
cmpsb
add
sub
pop
loope
mov
cld
xchg
inc
fdivs
and
adc
dec
mov
cwtl
pop
push
mov
js
out
dec
dec
pop
insb
je
lea
testb
mov
les
xchg
mov
aam
fcompl
or
imull
shll
out
test
popa
or
push
jb
daa
fisttps
mov
add
bound
and
lcall
mov
mov
lahf
fbstp
jmp
add
xchg
jo
pop
jecxz
mov
mov
movsl
and
pusha
test
lds
outsb
shrb
int3
dec
ljmp
fmul
jae
add
cli
mov
clc
xor
in
xchg
pop
div
xor
stos
stc
mov
pop
add
hlt
in
jl
testb
mov
sbb
arpl
sub
lret
jb
scas
sub
repz
sub
cli
aas
addr16
mov
loop
rcll
jo
addb
scas
xlat
and
push
cs
mov
mov
dec
xor
les
into
std
push
mov
or
int3
dec
xchg
push
sarl
ss
arpl
push
mov
or
rol
pop
lcall
bound
mov
mov
pop
inc
push
in
aaa
xor
repnz
cld
push
or
rolb
sub
sbb
ret
adc
push
push
repz
jns
adc
enter
nop
jbe
lcall
mov
dec
loope
subl
test
fnstenv
cmpsb
adc
loopne
stos
es
mov
jg
mov
mov
test
leave
pushf
mov
pusha
cmc
fisubl
jge
push
dec
imul
fcoms
jp
into
out
add
inc
test
mov
fld
fmull
daa
in
iret
cmpsl
mov
subl
inc
or
shlb
mov
mov
adc
shl
enter
lahf
jne
sbb
enter
in
and
xchg
lock
stos
pop
dec
jae
cmc
mov
outsb
inc
mov
inc
or
mov
add
iret
jo
jo
jge
jmp
pop
xchg
movsl
clc
rorl
and
inc
inc
add
or
cmc
mov
out
adc
rolb
jp
in
jne
lret
bound
jge
je
js
aad
and
aas
mov
stc
xlat
add
xchg
ret
lods
jle
sbb
inc
pop
popf
lahf
or
or
cmp
leave
mov
mov
cmp
ret
dec
push
pop
dec
imul
cmp
or
fcmove
mov
mov
mov
out
or
xlat
imul
sbb
mov
pop
and
pop
mov
mov
ja
stos
mov
add
mov
push
xchg
adc
lret
push
sbb
mov
aam
fld
js
js
sub
rorl
lds
bound
scas
mov
dec
add
add
xor
cmp
xor
jns
and
dec
fdiv
nop
pop
and
enter
mov
jecxz
shlb
jne
sarb
adc
xchg
jae
adc
push
pop
sbb
or
or
cmp
push
fiaddl
shl
sti
aad
dec
popl
call
pop
jmp
cmp
mov
dec
adc
jg
mov
repnz
cmp
test
lcall
and
sub
push
push
jbe
pop
adc
xchg
push
and
pop
je
orl
push
aaa
mov
sbb
cmpsb
xor
or
das
cmp
es
cltd
mov
pop
in
ds
je
sarl
jl
movsb
dec
or
pushf
imul
xchg
idivb
xchg
lret
jne
inc
outsl
fs
add
aaa
test
int3
in
rol
push
fiadds
aas
cmpsl
jmp
aam
push
loope
nop
imul
icebp
nop
stos
lea
mov
sti
jb
pop
add
ja
popa
iret
sti
stos
insl
int3
add
ret
icebp
push
or
lea
loopne
xchg
repz
dec
cmp
cmp
lret
push
sub
and
or
in
cli
fadds
jl
cli
fadd
adc
xor
jo
cmp
adc
movsb
xchg
jns
faddl
pop
or
inc
and
jg
rol
or
vandnps
aas
ljmp
lret
movsl
sub
shr
decb
pop
cmpb
pusha
mov
iret
sbb
fsubr
mov
fisubl
adc
sbb
fmull
mov
cwtl
movsl
sbb
push
insb
and
and
cs
repnz
sub
pop
jl
call
mov
loope
popl
sub
xchg
mov
notl
dec
loopne
pop
xor
dec
jnp
loop
rcrb
cmp
and
xchg
jg
fwait
add
dec
fwait
push
or
repnz
stc
int
mov
xor
in
cmp
neg
aaa
fildl
push
mov
shll
cmp
xchg
mov
shrb
dec
aam
scas
lret
rclb
int
mov
lods
lock
sbb
std
es
sub
movsb
push
sahf
jmp
xchg
or
lods
xchg
in
sbb
mov
lahf
mov
lret
inc
mov
cs
addb
sub
ret
sbb
out
and
cs
xchg
sub
aaa
addr16
test
cli
inc
dec
cmp
inc
push
jnp
cmp
push
mov
cmp
data16
adc
not
js
add
add
push
sbb
mov
mov
xchg
add
dec
jae
out
mov
sub
xchg
pop
js
mov
mov
cmc
xchg
dec
sti
mov
scas
xchg
xchg
or
enter
inc
jbe
pushf
sub
mov
jne
inc
ss
fucomi
xor
scas
lcall
jns
xchg
outsl
push
inc
jg
jge
pop
mov
xchg
or
dec
push
lds
lods
cld
cmpsb
scas
shll
sub
add
or
movsl
jo
mov
and
pop
mov
das
push
adc
or
movsl
push
ficoms
mov
es
mov
jno
arpl
cwtl
jno
sbb
mov
xchg
jb
xchg
xor
mov
cltd
out
mov
cli
mov
inc
mov
push
adc
xchg
repz
fsubrs
xor
adc
jl
repnz
sub
in
fdivrp
inc
js
mov
cwtl
in
fmull
inc
leave
test
jnp
es
rorl
or
outsb
cld
sub
outsb
and
leave
push
pushf
pop
xor
sti
adc
cs
inc
outsl
mov
cmp
jne
sub
or
dec
arpl
xchg
add
cmp
out
cmp
gs
adc
scas
push
into
enter
ret
fcomps
popa
aaa
shl
mov
cmp
je
sahf
inc
inc
mov
aad
fs
sar
pop
inc
jns
inc
popa
push
stc
ss
jmp
ret
mov
xchg
andb
test
sub
inc
ja
xchg
lods
and
ficoml
jecxz
xor
mov
pop
mov
mov
xchg
add
out
les
stc
mov
xlat
xor
popf
dec
sahf
add
add
sub
testl
popf
js
stos
cmp
test
inc
outsl
out
push
sbb
cli
inc
in
ret
add
adc
loope
int
ljmp
mov
mov
icebp
pop
dec
mov
popa
movsb
leave
mov
pusha
xchg
xlat
mov
call
adc
sarl
pop
hlt
adc
pop
popf
mov
daa
adc
mov
jb
sbb
or
xchg
mov
xchg
sub
jmp
scas
ds
stos
or
nop
dec
ss
popf
xor
stos
imul
mov
dec
leave
fsubr
mov
repz
or
adc
stc
sub
sbb
scas
addr16
pop
std
aad
sub
test
rcll
fstpt
in
cmp
sbb
aad
mov
movsl
sub
jo
movsl
or
dec
pop
pop
scas
outsl
xchg
aas
dec
scas
push
sbb
lret
hlt
cltd
push
mov
inc
in
repnz
push
lock
ror
loopne
pop
mov
xchg
sub
pop
mov
mov
lret
jle
sbb
gs
cld
aaa
cmc
xor
dec
jp
mov
or
stos
cld
jne
cmp
push
jecxz
ss
call
sub
pop
cmp
call
push
repnz
jbe
test
stc
add
push
adc
xchg
sub
pop
in
cmp
xchg
lea
sub
mov
incb
scas
adc
add
mov
jecxz
mov
lods
dec
push
and
cwtl
out
ficoml
adc
hlt
jb
roll
repnz
sahf
arpl
in
rcl
inc
or
into
mov
in
sti
ds
inc
icebp
pop
add
inc
stc
aas
dec
clc
orb
mov
lret
pusha
jno
leave
sahf
leave
dec
insl
xchg
cld
sbb
push
fisubrs
and
ljmp
adc
aad
mov
stos
clc
jb
cmp
into
and
add
insb
bswap
mov
jbe
and
das
dec
les
jne
mov
fwait
xchg
sbb
in
sbb
andl
je
ret
ja
jne
xchg
mov
movsb
ljmp
adc
and
loope
xor
and
shl
mov
repnz
and
pop
lea
cmp
addr16
adc
push
js
nop
or
jg
mov
push
inc
mov
leave
test
jae
ror
xlat
ds
ret
inc
sub
sbb
addr16
xchg
js
imul
fcmovnb
addr16
xchg
out
pop
inc
arpl
jle
aas
data16
iret
or
cmpl
xchg
mov
inc
xchg
sarl
or
mov
jecxz
pop
iret
mov
xchg
leave
test
dec
js
sub
inc
jmp
in
cltd
push
cwtl
into
jne
jo
pop
xor
inc
or
outsl
sub
jb
test
inc
imul
jp
xlat
popw
mov
mov
xor
xchg
push
dec
scas
in
cmc
mov
push
jno
mov
fwait
rcrl
ftst
js
in
jns
cmp
aaa
fstpl
cmp
andb
fnstenv
imul
dec
mov
push
cli
pop
mov
or
push
pusha
push
xor
in
jecxz
jle
dec
push
ljmp
xor
sbb
sbb
in
divl
stos
or
fs
fbstp
jb
and
push
icebp
cmp
add
outsl
xor
push
pop
cmp
leave
cmc
loop
inc
scas
mov
pop
stos
sub
jge
cmpsb
pop
shll
mov
stos
mov
test
adc
fisubl
sahf
stc
in
inc
in
adc
outsl
mov
jnp
cld
data16
dec
jnp
daa
lock
push
addr16
mov
and
mov
cs
and
mov
rolb
push
std
cmp
ja
inc
mov
aaa
xorl
lods
adc
aas
push
sub
adc
dec
es
dec
sbb
pop
sbb
pop
xchg
mov
scas
js
loop
sahf
sbbb
cmpsb
push
or
mov
dec
das
or
push
je
aad
iret
out
outsl
nop
scas
push
mov
aad
ror
pop
divb
aaa
xchg
add
and
add
orl
lahf
imul
fwait
mov
iret
pop
subl
imul
into
fcomps
mov
in
push
mov
push
xor
inc
xchg
scas
xchg
mov
cmp
inc
subb
fbstp
add
fcomps
loopne
aas
push
ljmp
jbe
xchg
or
mov
scas
int3
cli
aas
pop
cmp
sbb
add
lock
sub
mull
aas
dec
push
and
mov
jb,pt
into
jge
fdivl
sbb
aaa
int
imul
aaa
or
sub
sub
cmp
daa
adc
adc
mov
add
popa
dec
add
js
adc
inc
xlat
mov
dec
repz
mov
and
daa
iret
ret
sub
xor
int
push
mov
fsubrs
cli
ja
and
popf
rcl
pop
inc
lock
sbb
cmp
cmp
clc
mov
hlt
sub
mov
cmpsl
aad
or
cltd
sbb
ds
xchg
lds
lsl
pop
adc
int
push
repz
scas
es
jge
pusha
aad
xchg
mov
nop
enter
test
pushf
aam
dec
sub
push
cs
and
fs
jnp
and
aad
out
adc
xor
fsubrl
lods
fldt
lods
call
inc
mulps
xchg
xchg
in
mov
xchg
pop
pop
and
xchg
fsubrs
pushf
xor
insb
add
sbb
dec
xorl
xchg
and
arpl
cmpsl
stc
mov
lea
insl
in
adc
lret
jecxz
in
ss
inc
xchg
jbe
cltd
sti
dec
jl
pusha
dec
das
nop
adc
push
mov
pushf
in
adc
dec
fbstp
lret
add
fisubrs
push
mov
mov
test
mov
mov
mov
cmp
test
repz
mov
mov
aas
in
rcrl
popf
jge
push
adc
lods
sbbl
xchg
or
or
insb
call
jmp
sub
and
xchg
inc
aaa
dec
jp
js
adc
mov
dec
into
inc
stos
and
sub
push
mov
loop
dec
and
adc
movsb
xor
add
add
scas
aam
cltd
mov
and
loop
rorl
xor
jno
sbb
pop
mov
xchg
xchg
in
popa
mov
or
mov
setge
roll
mov
inc
shll
cmpsb
xchg
nop
rolb
mov
mov
xchg
sbb
jb
stos
cmpsl
cli
add
mov
stc
lret
sbb
cmp
into
fisubs
cmpsl
fdivrs
repz
test
mov
sahf
mov
mov
cmc
leave
into
cmc
jmp
repz
mov
jnp
mov
mov
fists
pop
xor
xor
and
jns
aam
xor
or
pop
mov
mov
add
clc
cltd
mov
neg
enter
in
cli
fmuls
insb
fs
int3
cmp
ss
push
jmp
adcl
mov
mov
pop
out
jp
pop
push
add
sahf
dec
lods
aam
sbb
mov
xchg
loop
adc
pop
fcompl
fs
pop
pop
sub
pop
jns
add
out
dec
mov
loop
jl
popf
lock
sub
jle
dec
mov
sub
jae
lahf
sbb
and
icebp
add
jbe
shr
addb
xchg
sub
jecxz
or
dec
mov
pop
push
inc
cli
mul
dec
std
xor
int3
clc
mov
sbb
roll
shl
adc
popf
cmc
fimuls
shr
cmp
les
pop
insb
daa
lret
repnz
imulb
scas
push
fimuls
or
hlt
sbb
or
jo
push
aaa
ffree
jecxz
and
pop
repz
pop
dec
iret
mov
test
dec
dec
outsb
lret
popa
in
daa
jmp
dec
gs
xor
xchg
negl
xor
clc
adc
and
dec
jp
adc
sahf
push
pop
xchg
or
mov
xchg
movsl
mov
push
lahf
cmp
inc
jo
mov
mov
xor
add
lea
aas
mov
jmp
jge
popf
fldt
push
cmp
lret
jg
jp
popa
into
addb
pop
stc
mov
notl
jb
mov
bound
ljmp
xlat
mov
xor
or
hlt
adc
mov
mov
lcall
mov
fisubrl
xlat
stc
outsl
or
mov
and
aaa
inc
cmp
or
push
imul
mov
idivb
es
out
jmp
jnp
out
loopne
int
and
jmp
fcmovu
and
inc
pop
cs
jbe
lret
shl
mov
dec
xor
dec
in
loope
sbbl
dec
sbb
out
jg
decb
cs
sbb
push
outsb
pop
ja
mov
jle
cmp
cwtl
test
push
mov
add
popa
mov
push
or
or
push
lods
out
leave
dec
ljmp
add
iret
add
mov
add
sti
xor
add
fnstenv
mov
test
cltd
scas
sub
mov
pusha
cli
xor
cmc
rorb
inc
test
sbb
pop
xchg
stos
jo
xor
cmpsl
fmull
rorl
or
ja
mov
fmuls
rcl
fnsave
push
outsb
sub
rcr
xchg
es
int3
sti
mov
cmp
and
push
xor
or
dec
fiaddl
inc
sbbl
xor
imul
push
cmp
lret
mov
jle
jecxz
push
lods
inc
loopne
pusha
mov
and
mov
jo
clc
pop
sbb
inc
iret
xchg
js
aam
into
mov
ja
adc
sbb
test
cmpsb
push
mov
mov
push
fisubrl
cmp
test
fstpl
ljmp
add
out
pop
or
mov
push
xchg
pop
cmp
lods
ficompl
movsb
mov
pop
jmp
pop
mov
insl
xchg
jecxz
cwtl
mov
pop
cld
xchg
std
jp
rorl
push
lods
ret
ss
xchg
mov
lret
test
clc
movsl
nop
push
mov
lcall
push
jne
add
test
xchg
sahf
cmp
push
inc
int
loop
pop
fdivrs
in
popa
arpl
jae
or
lret
sub
stos
mov
xchg
lds
popf
jbe
or
shlb
dec
jg
sti
and
aam
jne
push
push
cmp
outsl
data16
xchg
mov
push
jmp
push
xor
jg
sub
jo
les
add
out
cmp
stos
call
inc
jb
xchg
cs
pop
xchg
sbb
push
jb
mov
imul
inc
adc
pusha
jnp
or
xlat
mov
fistpll
sub
stc
pop
mov
push
push
and
mov
inc
inc
shlb
jbe
jnp
or
and
hlt
mov
xor
adc
or
xchg
aad
xor
aas
aas
jmp
push
xchg
lret
and
dec
lock
xchg
dec
fiaddl
ljmp
push
sub
mov
mov
xchg
xchg
dec
or
and
jp
inc
test
sbb
sarl
mov
jnp
ljmp
inc
xchg
shl
inc
movsl
dec
out
movsb
lods
mov
and
mov
in
xchg
add
sbb
jo
jno
inc
xchg
cwtl
inc
add
imul
iret
mov
mov
xchg
pop
xorl
pop
div
loop
test
js
bound
loopne
mov
hlt
xchg
push
aas
jb
push
mov
shrb
ret
dec
rcl
mov
lret
dec
cld
pop
jo
add
push
daa
mov
loope
ret
adc
ret
cmp
sbb
gs
push
movsl
loope
cs
int
pushf
pop
adc
dec
mov
inc
in
popa
lcall
mov
sti
cli
jecxz
cmp
and
stc
dec
ss
fiadds
jno
ss
mov
jle
cmp
icebp
cmp
notb
movsb
mov
jge
lcall
shlb
or
jle
lods
add
sub
push
aas
repz
gs
in
leave
lahf
push
enter
sub
ss
mov
cwtl
mov
pop
sub
xor
clc
jae
ret
dec
fsts
mov
jl
fs
lods
push
insl
lock
mov
add
mov
jo
sbbl
lock
push
and
aad
outsl
jecxz
jbe
adc
mov
mov
arpl
cmp
punpckhwd
cmp
xor
add
mov
sbb
imul
adc
jbe
mov
decl
jl
or
inc
adc
xchg
add
adc
out
fs
mov
in
movsl
adc
int3
lcall
mov
xchg
cs
fsub
jecxz
sub
jb
add
ja
test
popa
inc
mov
daa
cmp
push
mov
mov
arpl
or
push
jbe
push
cmp
cmc
std
cmpsl
in
mov
inc
lret
lcall
pop
mov
orb
test
and
or
sub
sub
cld
mov
loopne
fsubr
cmp
lds
xor
xchg
cmp
gs
ds
andl
dec
shlb
push
cmpsl
or
and
inc
jb
pushf
xor
mov
aam
add
inc
out
add
out
mov
andl
add
repnz
notb
addr16
out
mov
push
xor
jge
faddp
loopne
inc
cmp
shll
sbb
fcom
push
std
mov
bnd
sbb
pop
cs
fbstp
out
push
insb
subl
lret
or
push
sub
mov
in
xchg
movsb
repz
nop
dec
cs
je
nop
jo
sbb
int
cmc
leave
frstor
jge
int
xchg
sbbb
popf
dec
add
or
popa
jle
and
inc
xchg
or
xchg
into
xchg
loop
fldenv
loopne
xor
add
jns
daa
sub
ja
jl
dec
xor
cwtl
push
loop
push
push
pop
inc
aam
lock
rorb
cmp
rolb
mov
aaa
mov
or
mov
inc
jo
inc
int3
xor
inc
jo
cltd
jmp
cmp
arpl
sub
das
loope
arpl
sub
cmpsl
jnp
js
lods
push
cmpsb
add
aas
add
mov
inc
cmp
cltd
call
pop
pop
xor
jmp
jne
mov
std
and
pop
gs
xorb
mov
push
and
icebp
pop
icebp
and
ja
dec
aam
add
movsb
or
mov
outsl
mov
mov
sub
imulb
loop
xorb
mov
sbb
push
mov
mov
lret
xorb
and
aaa
xor
shlb
es
cmpsb
cmpsl
lods
aas
das
jbe
jge
sub
sub
adcb
sub
jo
mov
xorl
push
inc
xchg
jo
flds
sbb
inc
cmp
sbb
add
mov
fsincos
repnz
loopne
in
xchg
stos
xchg
xchg
gs
sahf
les
dec
jp
xor
xchg
xor
dec
push
jp
lea
lret
xchg
fwait
jecxz
add
mov
in
adc
scas
dec
fs
or
fwait
addr16
out
xlat
mov
shrb
xor
int
push
push
mov
adc
repnz
jp
mov
xor
jle
xchg
pop
xchg
mov
dec
lock
fidivrs
sub
push
aaa
sub
mov
aad
add
adc
mov
stc
mov
iret
or
int
pop
push
xchg
inc
outsb
lock
pop
dec
sti
addr16
pusha
sbb
inc
into
push
ja
inc
push
mov
test
int3
cmpb
mov
sbb
js
adc
arpl
pop
sbb
rclb
lea
enter
xchg
push
sbb
dec
fldl
inc
stos
push
popa
inc
jecxz
mov
repz
push
jmp
int
cwtl
scas
insb
lcall
pop
mov
insl
cmp
pop
clc
xor
das
bound
inc
addr16
out
lahf
movsl
cli
aas
movsl
sbb
push
xor
xchg
push
mov
xor
push
adc
push
daa
ret
jbe
mov
inc
imul
pop
cmp
and
fs
push
es
mov
push
sub
xor
mov
cs
pop
or
xchg
mov
add
jno
and
stc
fprem1
xchg
adc
dec
test
nop
mov
xchg
jne
inc
insl
add
hlt
dec
outsl
imul
fiaddl
pop
scas
xchg
je
push
outsl
dec
xor
inc
xchg
clc
pushf
add
mov
aaa
mov
push
icebp
std
enter
movsl
mov
mov
test
into
aam
push
dec
dec
pop
xchg
into
jb
push
jnp
jne
icebp
xor
movsl
mov
push
pop
fisttpl
in
enter
xchg
mov
rolb
xchg
inc
push
add
fists
fstps
stos
mov
rol
and
adc
cltd
ret
in
fldt
sub
and
or
pusha
sbb
aad
adc
inc
shll
xor
dec
dec
cld
scas
mov
ja
jle
repz
push
loopne
cmp
outsl
mov
push
lahf
sbb
int3
cmp
mov
fcoml
out
out
inc
xor
and
push
fwait
inc
or
les
adc
adc
jb
xor
sahf
bound
cmp
pop
adc
in
cmc
pop
jno
mov
inc
push
mov
insl
popf
mov
lock
sub
negl
jecxz
std
xlat
je
and
xorb
daa
or
sub
fdivs
outsl
lea
call
mov
adc
or
ds
push
insl
push
push
pop
movsb
xor
push
add
repz
cmpsb
in
mov
mov
js
pop
scas
stos
int
bound
or
and
add
jl
insb
and
lock
fistl
xlat
xchg
rcr
cmpl
push
mov
add
cli
sbb
dec
push
and
jbe
testb
sub
mov
sub
inc
mov
or
push
jle
sbb
mov
in
push
mov
inc
push
fucom
push
jo
outsb
aaa
cmpsb
mov
dec
mov
cmp
cmp
sarl
xor
icebp
jae
imul
flds
inc
ret
aad
jmp
cltd
les
push
inc
fwait
xor
aam
xchg
and
daa
outsb
movsb
fstps
push
das
sub
data16
movsb
adc
arpl
incl
dec
mov
pop
mov
xchg
dec
lahf
lret
or
cmp
lea
bound
cld
fstl
dec
pop
lret
test
ret
stc
adc
outsl
scas
cli
adc
cli
dec
adc
or
dec
mov
loopne
cmp
mov
cmp
cltd
jmp
je
inc
aam
fbstp
sbb
ljmp
mov
xor
fidivrs
pop
js
push
sub
dec
cwtl
jns
pop
jb
daa
lret
xchg
cli
lcall
sub
scas
xchg
mov
pop
outsl
jle
dec
jecxz
mov
rorl
scas
pop
imul
pop
cli
push
xor
mov
xchg
mov
inc
mov
mov
jecxz
ljmp
inc
xchg
push
outsl
add
xchg
loope
or
cltd
xchg
in
mov
jecxz
cli
int3
lods
pop
jne
test
cltd
mov
gs
xchg
out
pop
push
mov
lock
mov
int3
cmp
rcr
adc
jmp
inc
lods
mov
mov
pop
pop
int
or
loop
ja,pn
std
xchg
in
addr16
xchg
mov
mov
outsb
push
das
mov
lret
or
adc
aam
loop
dec
in
addr16
pop
ljmp
mov
mov
es
mov
xor
cwtl
push
mov
cmp
dec
add
aad
and
jg
pop
lea
cwtl
push
mov
cmp
lds
inc
movsb
aad
jmp
pusha
cmp
inc
cmp
sbb
inc
adc
iret
cmp
bound
mov
push
daa
xchg
dec
into
add
inc
push
inc
adc
lea
sub
and
test
ljmp
add
mov
adc
mov
repz
jge
ss
je
inc
or
pop
xchg
jmp
shr
mov
push
shlb
and
jl
xor
xor
daa
test
mov
add
frstor
test
push
out
pushf
lds
imul
in
jno
mov
in
cli
add
ret
lods
xor
and
adc
push
testl
cmpsl
cld
jle
outsl
pop
cltd
sub
xor
pushf
sbb
shlb
fwait
cmp
mov
lahf
xchg
jl
push
imul
cld
xchg
xchg
cmp
push
mov
add
loope
jmp
icebp
cwtl
xor
mov
enter
push
pop
add
jae
insb
push
lock
outsl
add
xchg
push
and
in
add
in
inc
and
test
cmp
nop
cwtl
dec
sub
adc
insl
mov
ret
fimuls
adc
sbb
pop
data16
inc
cmp
lret
in
mov
jbe
inc
inc
and
xchg
mov
imul
icebp
fisubs
rorb
movsl
push
in
fdivl
bnd
hlt
mov
xor
sbb
inc
frstor
mov
dec
push
xor
push
jmp
leave
les
add
sbb
andl
add
decl
bswap
aam
lret
in
mov
mov
aad
mov
inc
pop
inc
packsswb
popf
jge
scas
cmp
xorb
xor
mov
pop
pop
mov
add
lret
fs
mov
ja
pop
fmuls
pusha
negl
test
test
stos
movhps
mov
divb
push
out
outsb
mov
hlt
fcmovb
iret
mov
stc
jg
cld
cltd
ja
jne
xchg
imul
jo
or
cmp
sbb
adc
mov
sbb
in
imul
ror
sub
in
popf
aaa
inc
xorl
mov
cmc
or
repnz
sub
rcr
imulb
int
sub
scas
pusha
jo
les
dec
xorl
movsl
add
xlat
repz
out
stos
mov
inc
and
and
fucomi
adc
push
mov
cs
int3
popa
clc
pop
mov
lods
test
push
mov
or
out
cld
jmp
cmp
addl
movsl
and
cmp
dec
daa
test
std
push
xor
fidivl
sub
mov
push
stos
lock
and
dec
aas
outsb
sbb
lea
addr16
cmc
push
fstpl
ljmp
leave
xchg
imul
sub
push
mov
lods
into
push
je
stos
adcb
inc
loop
outsl
hlt
mov
jo
notb
mov
push
sbb
jmp
mov
mov
and
js
xchg
mov
leave
faddl
test
dec
push
sahf
xchg
jmp
xor
loopne
jno
fimull
mov
pop
aad
test
aas
sahf
rorb
pop
out
add
repz
mov
dec
into
in
lods
push
lea
cmp
dec
xchg
mov
push
push
adc
push
movsb
into
push
push
test
test
jns
mov
enter
xor
mov
xchg
lods
sbb
push
gs
mov
xchg
popa
js
jno
xor
imul
les
roll
pop
stc
xchg
fsubs
cmovs
syscall
inc
loopne
inc
cltd
cmpsb
inc
out
loope
xchg
mov
leave
or
sub
sbb
jne
imul
aas
push
pop
daa
pop
movsb
dec
mov
inc
ret
pop
mov
push
imul
arpl
xor
cmp
or
xor
cmp
jmp
mov
add
in
aam
test
mov
rcrl
jnp
sbb
in
cld
lock
roll
or
aas
xor
rolb
jmp
jecxz
dec
js
int
jmp
in
lcall
or
ret
out
psrld
arpl
dec
test
xor
mov
insb
inc
add
cmp
dec
lcall
pop
iret
movsl
test
mov
sbb
fnstsw
into
jp
int
push
pop
or
daa
pop
call
jo
dec
test
fdivrs
mov
xchg
push
inc
xorb
lret
push
pusha
and
mov
loop
or
in
jne
mov
nop
outsb
mov
mov
inc
js
jbe
clc
push
add
lock
sub
jecxz
sahf
mov
dec
rorl
mull
ja
aad
jmp
and
pop
inc
lods
mov
shll
movsl
push
std
aaa
aam
adc
ljmp
jg
inc
data16
cmp
addr16
into
bound
mov
sti
addl
loopne
pop
test
or
mov
mov
sub
pop
arpl
lock
jle
test
int3
and
outsb
cmpl
sbb
jns
imul
xor
stos
insl
insb
jp
sub
dec
jb
stc
mov
jb
rcrl
push
jbe
out
cs
push
xor
cmpsb
imul
add
push
addr16
mov
mov
nop
jecxz
mov
jg
mov
xor
repz
out
jne
add
mov
outsb
and
in
jno
push
call
lea
fbld
push
adc
inc
popf
out
das
xchg
pop
xor
repnz
cmp
cwtl
adc
shlb
or
pop
adcl
int3
mov
aaa
out
adc
mov
aas
or
lods
bnd
fiaddl
lret
movzwl
int
test
pop
inc
mov
pop
xchg
movsb
cmp
dec
pushf
sub
sahf
cltd
push
xchg
je
jo
mov
pop
cwtl
lret
xor
fisubs
xchg
ljmp
jo
sub
xor
dec
cli
xchg
cmc
imul
push
rolb
mov
sbb
ljmp
les
xor
sbb
adc
jo
xchg
daa
xor
out
cmp
int3
outsb
sarb
sub
aam
jo
jae
jne
and
jo
sbb
test
xchg
xor
or
ret
call
sub
pushf
jns
pop
cmp
call
and
push
enter
inc
stos
stos
dec
imul
lcall
cmp
mov
jecxz
add
mov
aaa
arpl
aad
loopne
mov
cs
es
sub
loope
or
mov
mov
data16
sub
dec
ret
mov
sbb
xchg
shll
std
shr
test
sbb
jg
pop
mov
aas
add
loopne
mov
loop
mov
aam
in
stc
mov
faddl
mov
lea
mov
pop
mov
pop
dec
mov
or
sub
subb
sub
loope
stos
rolb
add
dec
inc
idivb
push
pop
inc
jecxz
jle
or
dec
and
jle
xchg
clc
adc
ficomps
pop
xor
jnp
add
pop
mov
xchg
lea
or
je
dec
stos
addr16
js
xor
xor
cli
addw
pop
pop
mov
pop
or
movsb
add
mov
inc
stos
aam
imulb
push
sbb
jns
js
insb
sub
mov
das
mov
mov
movsl
push
lods
pop
js
inc
std
por
fmuls
shrb
add
mov
ja
fs
mov
testb
and
xchg
mov
insl
icebp
jle
xchg
popa
movsl
in
xor
push
or
inc
sbb
pop
mov
fstl
pop
pushl
fsub
lcall
lea
pop
roll
fstpl
jns
pushf
ja
into
aam
int
fcompl
fcmovbe
xor
lcall
pop
dec
add
jbe
sti
and
or
sub
and
push
lret
sub
movsb
add
adc
add
dec
rcrl
jbe
xchg
inc
pop
scas
sbbl
jmp
mov
jl
cmpsl
xchg
sbb
xchg
sti
sub
jecxz
insb
push
pop
push
insb
out
xchg
fs
icebp
cs
adc
ficoml
inc
testb
test
mull
adcb
pop
sbb
cmp
jne
mov
divb
insb
pushf
adc
ffree
popa
fdivs
outsl
pop
add
and
pop
pop
popa
cmp
dec
rcrb
cmc
jmp
ret
xchg
inc
cmp
pop
fwait
jo
aad
aaa
ret
push
pop
out
or
pop
shlb
sub
js
push
mov
mov
in
mov
stos
inc
push
xchg
pusha
push
push
or
cmpsl
insb
pusha
roll
scas
jle
jp
aad
add
aad
xchg
pop
mov
mov
icebp
loope
lock
inc
jnp
jae
cmp
aad
ret
cmpl
pop
pop
insb
cld
dec
sbb
adc
add
mov
sbb
sbb
mov
jg
mov
cwtl
cwtl
sub
pop
addr16
jmp
lea
cmp
xchg
in
mov
sub
pop
jne
in
outsb
mov
sub
hlt
lods
xchg
fstps
sub
lods
pushf
bswap
ds
push
test
mov
and
jnp
push
jbe
lcall
stos
popf
pop
mov
add
into
in
mov
xor
test
xchg
mov
mov
movsl
cmc
sbb
cmp
cmc
fs
in
fidivl
aaa
lcall
stos
mov
lahf
lret
int3
outsl
jno
jb
xchg
push
decb
popf
xor
mov
insl
lret
rolb
pop
lods
xchg
sahf
mov
push
sbb
mov
dec
jg
or
int3
adc
jecxz
push
sbb
push
test
enter
jle
xchg
ljmp
jae
pop
inc
pop
in
add
mov
je
jmp
pop
in
stc
pop
inc
add
push
inc
inc
add
cwtl
xorl
pop
inc
mov
or
je
test
or
mov
mov
add
jae
cmpsb
xor
roll
insb
add
into
mov
adc
adc
jg
push
mov
pop
inc
imull
push
ja
lods
cmp
mov
outsb
stc
addl
imul
cwtl
mov
mov
sbb
rcl
in
dec
shll
jno
je
es
jae
push
movsb
xor
xchg
cwtl
fldenv
fadds
cmp
in
dec
adc
cmc
fisttps
mov
ret
pop
addl
and
sbb
cmpsl
mov
cmp
sbb
sahf
pop
mov
in
inc
mov
mov
mov
push
pushf
fistl
mov
adc
and
push
dec
or
daa
xchg
out
les
push
insl
out
adc
lods
jmp
jp
inc
cli
inc
outsb
repnz
leave
outsl
sahf
fs
imul
je
xlat
out
add
cmp
push
push
jae
mov
insb
pop
fidivs
icebp
cmpsl
in
mov
lret
sub
in
add
fcompl
adc
mov
and
cmpsl
sti
jmp
insb
mov
js
cmp
xchg
push
mov
jnp
push
repz
sub
mov
add
dec
fstp
dec
add
enter
add
test
jnp
shrl
dec
stos
adc
mov
jnp
jae
mov
out
cmp
mov
in
lcall
inc
fsts
adc
xchg
push
std
loope
hlt
jnp
outsl
mov
icebp
aaa
cmp
and
add
lahf
arpl
xchg
dec
xor
int3
das
push
adc
sbb
into
adc
call
sbb
fists
in
dec
push
push
push
test
mov
imul
arpl
jnp
hlt
sub
test
movsb
mov
cmpsl
xor
fmull
ljmp
xor
fwait
into
sarl
movsb
scas
inc
sbb
mov
test
cltd
and
pop
xchg
fildll
das
mov
pop
cmp
inc
cmpsl
xchg
out
lock
lds
cmp
lds
inc
aad
aaa
inc
pop
pop
mov
insb
mov
fs
scas
xor
push
loop
stos
shll
cmp
push
mov
repz
loop
rcr
fnstcw
jo,pn
push
sahf
aas
mov
gs
ss
adc
mov
pushf
dec
scas
jp
ss
lret
and
push
out
sub
adc
movups
jmp
cmc
and
ss
aam
fisubs
in
cli
loope
fs
jns
add
mov
push
das
daa
into
mov
push
push
jnp
cmp
sub
push
push
xchg
xor
jmp
inc
rclb
or
mov
mov
daa
insb
out
xchg
jns
inc
xchg
cmp
js
xor
dec
das
cmp
repz
in
jge
or
mov
sbb
fsubl
push
scas
sub
loopne
mov
inc
cmp
out
lcall
xor
push
sub
mov
add
shrl
push
pop
mov
out
xor
pop
adc
out
jmp
push
test
mov
ficomps
mov
mov
repnz
rolb
pop
dec
mov
push
faddl
jns
adc
push
mov
jecxz
insl
pop
and
push
cmp
hlt
inc
or
xlat
in
dec
push
mov
mov
addr16
dec
pop
loop
aaa
repz
push
rclb
jge
es
pop
shlb
xchg
outsb
pop
push
adc
push
adc
pop
test
mov
fisubs
jnp
iret
sub
in
movsb
mov
cmp
xchg
sub
outsb
sub
adc
sub
rcll
mov
ds
push
jbe
sbb
dec
inc
sub
xchg
inc
cmp
loope
jge
pop
movsl
test
int3
aaa
adc
push
aam
xchg
jecxz
lods
or
ret
enter
mov
movsb
ljmp
mov
dec
cmpsl
sbb
or
stos
pop
push
clc
dec
in
lock
pop
lock
mov
sub
mov
in
lock
push
pop
popa
cmp
addb
push
pop
sub
adc
das
sarb
mov
sbb
inc
jae,pt
in
push
rcll
inc
shl
mov
jp
pop
mov
mov
nop
stc
lret
sbb
mov
pop
jae
fistl
in
or
push
mov
test
subl
addr16
js
and
jp
lea
stos
sub
test
daa
cmp
ffree
add
cli
cmp
pop
fldenv
dec
mov
and
shrb
mov
pop
hlt
js
mov
and
fmuls
mov
and
ljmp
daa
out
lret
nop
dec
jno
scas
lret
popf
cmp
mov
adc
nop
loope
jge
or
fs
imul
cwtl
xchg
aas
pop
inc
xchg
inc
or
shl
in
fucomp
cmp
mov
ljmp
xor
leave
mov
mov
dec
xchg
push
cmc
fwait
mov
push
mov
or
xchg
leave
cs
adcl
push
mov
cmp
push
insl
push
test
cld
pusha
shll
xchg
xchg
cwtl
and
jge
jmp
iret
aam
mov
jo
dec
loope
scas
cmp
add
cmp
ficomps
sub
mov
repnz
push
jns
lret
mov
repnz
jnp
jmp
pushf
mov
aas
inc
incl
pusha
in
sar
ret
mov
mov
mov
adc
jb
mov
xor
xchg
and
sub
cmp
sbb
shr
sub
pop
lret
hlt
sbb
pop
dec
sti
js
dec
nop
lea
jl
iret
ss
aas
in
es
push
inc
cli
or
lea
dec
add
stc
jbe
xchg
mov
mov
negl
loop
gs
ret
and
and
push
stos
pushf
mov
cltd
andb
leave
dec
xorb
mov
inc
leave
mov
and
in
int
inc
mov
adc
test
cmc
pop
pop
in
cmp
lret
insl
mov
pop
jge
cmp
jmp
mov
das
loope
lahf
sub
pop
and
outsl
bound
cmp
sbb
adc
lcall
call
xchg
mov
or
aam
popa
mov
push
jnp
pop
mov
je
pop
ja
cmp
mov
aad
cld
sbb
add
dec
in
adc
and
add
cwtl
mov
inc
cmova
mov
fsubl
and
loope
xchg
cltd
imul
ja
fnsave
repz
fnstsw
repz
dec
cmp
mov
cltd
out
in
inc
test
or
ret
mov
repz
lea
popf
es
jmp
adc
shlb
inc
xlat
sbb
xor
loopne
test
xchg
jno
adc
in
mov
mov
mov
lds
cmc
pushf
fsubrs
testb
xchg
pop
push
cmc
outsb
fdiv
mov
fsubp
cmp
sub
outsb
mov
incl
mov
sbb
mov
hlt
cs
arpl
cmp
jnp
int
push
in
jge
paddsw
push
dec
cmp
inc
ja
pop
cmc
mov
test
cli
dec
orb
push
inc
cmpl
test
dec
out
fcmove
dec
rorl
rcl
jp
pop
mov
je
mov
dec
inc
fstpt
icebp
shr
jbe
cmpl
cli
mov
mov
pusha
mov
loope
and
loope
dec
je
ficomps
dec
rorl
xchg
stos
pop
dec
out
imulb
sub
lcall
or
in
or
mov
push
cmp
scas
movsb
xchg
lds
pop
pop
inc
mov
scas
cmpb
cmp
lock
cmp
push
loop
mov
es
stos
jecxz
test
jne
jle
jae
callw
dec
jmp
push
sub
rcll
pop
gs
ds
dec
cmp
inc
pop
mov
mov
dec
cmp
dec
inc
sub
inc
daa
add
fsub
xchg
xchg
lods
fsubs
mov
inc
test
add
std
push
xor
ja
lret
push
adc
pop
loop
stos
in
stos
or
push
sbb
mov
insb
test
pop
aam
push
lret
lret
loop
stos
adc
scas
mov
and
mov
push
pop
xor
aad
clc
jecxz
in
cltd
sbb
inc
xchg
cld
shufps
in
or
adc
lcall
sbb
push
aaa
dec
aas
xchg
negl
aas
cmp
pusha
push
fildll
or
and
xor
arpl
or
lcall
mov
dec
fisubrs
lea
aad
jle
xchg
inc
std
mov
sbb
les
out
xor
fstps
xchg
jmp
mov
addl
jns
adc
and
cmp
inc
xor
loop
cltd
and
sbb
sbb
jg
push
jo
add
aas
pop
addr16
ret
lock
inc
cmp
adc
xchg
cs
pusha
xor
mov
jbe
and
lds
and
fisubrl
arpl
test
jo
xor
fiadds
mov
push
and
loop
lcallw
into
leave
mov
and
adc
testb
jae
dec
das
sub
shll
dec
ljmp
inc
fs
mov
out
jne
movsl
repnz
jp
dec
arpl
mov
mov
into
mov
sub
sbb
pop
leave
bound
mov
sbb
or
xadd
push
mov
arpl
lods
mov
pop
adc
xor
mov
outsb
jecxz
jle
xchg
fwait
push
mov
int3
insb
pop
cli
imul
ja
xor
jnp
rolb
fstpt
aam
lds
jp
fs
jo
shlb
movsb
pop
pop
or
pop
call
fnsave
sahf
jp
pop
jbe
lret
jle
arpl
or
sbb
jns
stos
jb
mov
das
in
mov
pop
data16
sbb
fs
jmp
jns
in
and
add
xor
cmp
fs
push
adc
fildl
dec
or
push
cltd
dec
mov
adc
inc
lahf
fucomp
adc
data16
shll
nop
int3
push
and
subl
adc
push
sbb
fldt
arpl
into
sub
mov
testb
xlat
jg
in
jg
push
and
mov
or
pop
mov
dec
imul
test
hlt
pop
jg
or
jnp
lret
js
jo
fcmovnb
popa
scas
mov
xchg
int
flds
jbe
jno
push
pop
cmp
stc
pop
ret
loope
mov
push
js
loope
dec
int3
sub
cmpsb
lret
call
adc
into
sub
ret
rcrb
mov
cmp
sbb
stos
inc
popa
jne
ret
mov
jne
xchg
mov
xchg
mov
stos
arpl
pop
mov
stos
mov
sti
cwtl
mov
push
cmp
lods
sbb
aad
cmc
sar
inc
cwtl
fsubrl
sub
test
jns
xlat
add
and
inc
mov
xor
adc
mov
add
or
cltd
cmpsl
movl
sbb
lret
cmpsb
add
out
popa
sbb
gs
push
dec
fsubl
insb
mov
inc
add
mov
jl
icebp
lcall
push
movsl
into
add
xchg
jp
sub
push
mov
test
pop
addr16
inc
int3
arpl
cmpsl
aad
pop
cmpsb
js
cvtps2pd
out
add
loop
je
xor
lret
mov
pop
addr16
sbb
arpl
xorb
fistps
std
cmp
add
sbb
fsubs
rcl
cmp
int3
scas
dec
push
je
push
jge
or
jne
lret
push
popf
andl
ja
inc
arpl
jge
movsb
out
sub
adc
dec
stos
xchg
push
adc
or
jg
test
push
lds
sbb
fists
jg
push
add
add
add
in
mov
jle
pop
fistpll
stc
xchg
out
inc
xor
adc
cmp
or
pop
ss
adc
sbb
jbe
daa
mov
adc
nop
test
fstl
cmp
lea
xor
out
pop
movsb
mov
mov
insl
xchg
pop
add
dec
mov
data16
testb
fldenv
sub
jnp
popa
jns
sub
ss
xlat
and
cmp
ds
jae
push
mov
bnd
adc
cmp
lock
stos
in
scas
daa
mov
int3
lea
lea
insb
mov
int
adc
je
push
inc
shrl
push
mov
mov
bound
sbb
xor
jno
out
mov
push
jb
ja
xor
add
les
je
in
lock
cs
mov
mov
filds
mov
in
loopne
cmp
push
shr
jne
inc
cmp
cmpsl
stos
mov
add
xchg
or
insl
pop
jge
dec
fistpl
mov
cmp
mov
adc
or
scas
inc
jbe
inc
insb
mov
lds
push
push
push
fs
popa
inc
fcompl
mov
je
dec
jno
imul
jge
lret
inc
mov
lods
stos
jbe
vmread
andb
mov
and
out
test
and
add
stos
int3
aam
pop
sub
cmpsl
sub
dec
clc
jnp
mov
mov
inc
adc
outsl
shl
outsl
imul
out
popa
sarb
fisubs
jno
sarl
pop
add
mov
lods
cmpsl
dec
dec
dec
cld
cmp
mov
xchg
jg
sub
cmp
in
push
jbe
nop
add
jne
xlat
sub
cld
cs
inc
bound
leave
fnstenv
sbb
xorl
ret
push
call
or
fmull
out
jle
inc
mov
loop
fists
push
cmc
les
jns,pt
sbb
add
add
cmpsb
pop
jmp
dec
push
pop
cmp
shrb
mov
xor
enter
les
ret
xor
push
outsb
xor
mov
dec
icebp
xor
jmp
sbb
inc
dec
lock
mov
lods
icebp
fnsave
and
jp
dec
dec
xor
add
shlb
fsubrs
mov
jnp
test
fcmovbe
imul
imul
arpl
jns
aas
inc
mov
inc
loop
push
das
cmp
mov
fidivl
jge
insl
stc
fcoms
cli
cmp
sti
jo
pop
bound
xor
movl
andb
dec
inc
add
add
adc
notb
cld
jnp
cwtl
sti
scas
jle
mov
jge
mov
orb
mov
idivb
jae
cmp
jb
mulb
testb
jns
dec
dec
cmpsb
out
js
imul
xchg
jl
jno
pop
dec
add
fimull
data16
rcr
sti
pop
jb
outsb
cmp
xchg
test
push
cmp
push
ds
and
ret
xchg
testl
cltd
les
mov
push
mov
xchg
xchg
dec
cmpsb
sbb
xchg
or
jmp
dec
lea
movups
sbb
pop
int3
sti
gs
or
jns
lcall
dec
movsl
pop
pop
inc
ret
mov
fnsave
stc
out
sbb
dec
xchg
adc
mov
dec
aad
rcl
lahf
pop
jge
jb
test
pop
aam
xchg
out
std
leave
dec
sbb
pop
loop
ja
mov
lea
push
into
leave
push
dec
shrb
push
testl
cmp
xchg
adc
jno
xorl
incl
sbb
push
lods
jecxz
xchg
dec
jp
cmc
add
je
sbb
jge
hlt
cmc
inc
ja
aaa
sub
adc
xchg
jg
sbb
pop
jne
pop
mov
rclb
sbb
lock
dec
loopne
addr16
add
into
jle
jb
lock
jmp
insb
std
popf
push
clc
enter
or
mov
loop
lea
das
adc
shll
inc
aad
jnp
fwait
mov
aam
push
cmp
mov
in
mov
xor
scas
lcall
cmp
aaa
fimull
lea
in
add
mov
pop
iret
push
cmp
in
jbe
xlat
sbb
and
pop
mov
insl
jg
inc
or
mov
sub
jmp
enter
xchg
pop
jne
popf
inc
jns
mov
jae
mov
push
fdivr
in
mul
dec
imul
dec
iret
loop
insb
mov
mov
cld
pop
pop
scas
mov
repnz
adc
dec
les
jmp
jb
outsb
inc
adc
rorl
movsl
jmp
inc
mov
enter
fnstcw
push
xchg
xchg
mov
pop
mov
sub
in
popa
imul
nop
cmp
jae
test
pop
mull
lret
arpl
push
push
xchg
cmpsl
dec
bound
cmc
adc
ss
cmp
rcll
hlt
int
jecxz
outsb
cltd
xor
mov
ja
lock
std
ficoml
lds
jnp,pt
in
sbb
mov
add
mov
mov
sbb
testl
pop
lcall
jp
pop
xchg
xor
or
jecxz
es
jle
add
aas
cli
pop
aad
rcrl
daa
call
mov
je
lods
xor
jle
xor
shlb
subl
fildll
lock
in
dec
ds
shr
fmuls
sbb
mov
add
test
test
shlb
ljmp
or
call
or
and
and
cmp
push
push
jle
cmp
dec
add
cmp
add
jbe
xor
shlb
or
daa
push
push
movsb
xorb
cmc
jmp
addr16
popa
out
xlat
jb
jbe
loop
inc
js
js
pop
and
or
and
push
pop
jno
dec
add
inc
pop
in
es
call
pop
jo
add
pop
inc
je
or
lcall
and
add
jmp
pop
out
mov
sahf
loopne
insl
test
fidivl
test
adc
mov
in
push
loopne
sbb
mov
sbb
xchg
pop
fsubrp
fidivrs
aad
imul
hlt
rolb
cld
orb
paddsb
test
push
xor
jge
frstor
sbb
sbb
imul
es
stc
jecxz
cmp
ss
enter
in
push
xor
leave
jb
sub
pushf
js
mov
dec
lods
fimuls
xor
aam
cld
cwtl
inc
lcall
andb
mov
in
mov
sbb
out
test
lods
pop
push
or
iret
je
repnz
jge
sbb
aaa
jae
push
xchg
jo
cmpsb
bound
pusha
add
or
lret
aas
rcrl
jle
in
or
inc
xor
mov
mov
rclb
adc
or
test
push
cmpsl
pop
push
movsb
and
fistpll
notb
xor
in
js
pop
ret
or
add
push
ret
add
pop
xchg
int3
negb
mov
inc
jns
mov
dec
cmp
mov
jb
cmp
mov
cs
sub
lods
shlb
das
adc
dec
xchg
shll
out
dec
arpl
bound
lret
adc
xchg
lods
cmpsl
and
adc
and
popa
add
sbb
insb
add
sub
aad
dec
les
pop
mov
movsl
aam
cli
dec
pop
scas
inc
cmpsl
sbb
in
ret
bound
push
push
mov
jo
int
sbbb
pop
repnz
rclb
xor
test
stos
in
push
mov
fwait
mov
xchg
inc
dec
fistpl
mov
pop
aaa
jmp
mov
mov
mov
addl
sbb
rcrb
push
jmp
jecxz
push
stos
sarb
adc
addr16
in
aas
stos
mov
cmp
push
cmp
test
movsl
es
xor
shl
sub
mov
cltd
nop
fwait
sub
incb
stos
je
lock
pop
scas
jno
hlt
mov
push
xchg
or
cs
push
add
aas
sub
xchg
sarb
int
sbb
gs
jnp
lock
ret
pop
dec
push
mov
mov
dec
lret
sub
push
ret
push
jbe
lahf
push
adc
push
xor
aad
in
fcompl
pop
xchg
sub
stc
jne
jns
subb
sbb
sub
mov
lds
xchg
jmp
lret
push
inc
xchg
andb
adc
daa
sub
mov
das
mov
inc
cltd
jbe
addr16
sbb
mov
mov
iret
fs
movsl
dec
xchg
inc
xor
test
xchg
ljmp
push
test
mov
sub
enter
xchg
ret
xchg
arpl
jg
dec
xlat
sub
pusha
cmc
insb
pushf
cmp
pop
xor
jp
in
or
push
pusha
sti
dec
xor
imul
pop
xor
sbb
push
mov
push
and
jl
cmp
sbb
cmpsb
lahf
or
cmp
aad
mov
push
ret
adc
iret
adcl
mov
inc
mov
je
inc
sahf
xchg
cld
aas
sti
push
push
sti
pop
push
or
xchg
test
jno
xchg
jb
push
aam
insb
dec
sbb
stc
fidivs
pop
add
and
movsl
test
fwait
mov
inc
test
in
out
call
pop
test
es
cmp
push
imul
push
inc
push
dec
jb
cltd
or
inc
outsb
cmp
cltd
ffree
cmp
in
arpl
mov
pop
fdivl
ljmp
push
shrb
shlb
je
in
js
or
stos
xlat
or
rorl
loope
pop
mov
ja
insb
mov
popf
cmp
adc
das
dec
mov
push
je
sbb
mov
jle
andb
jl
xchg
push
add
cmp
pop
and
inc
insb
xor
pop
pop
test
daa
inc
in
and
repz
cmp
add
mov
popf
imulb
inc
push
test
mov
les
xchg
pop
movsb
xor
stos
mov
mov
push
in
mov
sub
mov
sub
stos
out
loop
out
test
mov
jbe
xor
sub
test
add
js
stos
mov
sahf
loop
dec
push
pop
cs
add
shll
jmp
fisubrs
jno
sbb
std
xchg
cmc
mov
cmp
xor
loope
push
mov
and
stos
rorb
leave
cs
cmp
xchg
ss
test
adc
adc
je
mov
pop
adc
mov
add
push
adc
repz
xchg
ja
aam
xchg
mov
fstp
pop
ror
pop
xor
add
xchg
inc
shrb
sub
mov
cmp
pop
xor
or
add
and
jb
inc
jg
in
leave
insb
push
adc
inc
pop
xchg
int3
mov
adc
sbb
pop
mov
sub
fdivp
cmp
sti
mov
adc
inc
xchg
in
pop
test
push
mov
es
cmp
movsb
pop
pop
add
out
xchg
in
add
jg
jnp
xor
lret
add
outsb
pop
movsb
sub
sub
outsl
xor
fstpt
out
negl
pop
shll
sahf
movsl
pop
int
inc
mov
and
add
or
fs
sub
addr16
ffree
adc
xchg
shrb
divl
and
cmpsl
lds
push
push
add
add
cmp
xor
das
fisubs
out
sub
xchg
sbb
or
outsb
dec
mov
inc
inc
inc
pop
sub
jecxz
dec
dec
sub
jne
aas
nop
inc
es
hlt
adc
movzbl
xchg
int3
fidivrl
arpl
pop
inc
clc
movsb
mov
jno
fidivl
xor
lock
dec
mov
aaa
xchg
or
ret
ss
das
push
into
fwait
mov
sti
loop
xchg
xchg
sub
add
add
cmp
dec
fwait
leave
fmuls
cmp
xchg
imul
insl
jae
push
xchg
addr16
clc
and
sub
push
mov
pop
xrelease
jp
add
in
jmp
leave
jmp
mov
and
iret
addr16
adc
les
fsubrs
add
aaa
pop
sbb
loope
imul
mov
inc
test
insb
pop
dec
movsb
mov
sub
mov
mov
aas
mov
insb
iret
ja
push
mov
cld
mov
sar
or
add
cmp
fimull
dec
ret
lahf
adc
xor
js
or
or
mov
int3
out
push
fucom
bound
stc
mov
std
cmp
mov
int
inc
push
decb
push
cmpsb
dec
xlat
inc
dec
xor
jbe
dec
push
int3
xchg
push
test
adc
dec
sub
out
or
stos
jne
mov
neg
xor
loope
dec
mov
mov
push
popl
xchg
es
insl
cs
mov
icebp
cmp
add
sbb
shll
adc
jb
sbb
lock
mov
add
dec
jno
aaa
aas
ficoml
popf
loope
mov
shrl
mov
jecxz
jge
jg
xor
jle
pusha
imul
fwait
dec
sahf
xchg
pushf
movsl
lcall
and
sbb
sub
pop
push
or
insl
mov
imul
sbb
inc
or
scas
scas
insl
inc
xor
icebp
xchg
out
ret
cmpsl
fildll
rorl
xor
call
das
notb
out
cmp
mov
dec
in
scas
ret
mov
sbb
rcll
add
xchg
lods
mov
inc
xlat
push
push
add
xchg
subb
in
add
test
mov
adc
push
push
inc
jl
ret
cltd
mov
add
std
stos
int
test
sub
pop
dec
inc
scas
and
sbb
fisubs
and
fwait
sti
xchg
int3
dec
aam
push
xlat
pop
out
cs
movsb
fwait
sti
mov
mov
lds
lods
and
mov
imul
dec
dec
cmp
xchg
xchg
and
xchg
data16
cmc
pop
mov
pop
gs
xor
or
mov
xor
sub
rclb
rcrl
div
frstor
icebp
shll
aas
jecxz
add
or
cli
daa
sub
mov
inc
or
in
mov
cwtl
push
cmp
adc
das
pop
mov
sub
popa
mov
mov
xlat
dec
pcmpgtb
jb
lret
jmp
and
call
dec
adc
sub
popa
cli
mov
mov
and
lock
cli
push
sub
repnz
push
mov
sbb
lods
loope
clc
push
jge
xchg
lods
mov
in
aas
adc
sub
sub
stos
and
bnd
daa
lahf
xchg
bnd
mov
in
or
clc
dec
lea
daa
push
or
daa
push
cmp
mov
cmc
xor
sub
cmp
jnp
popf
shl
fmuls
popf
pusha
dec
xchg
mov
push
scas
sbb
stos
icebp
add
ss
mov
mov
and
arpl
sahf
addr16
lods
sub
pop
outsb
call
mov
mov
dec
xchg
pop
dec
frstpm(287
sub
scas
adc
mov
adcb
arpl
js
sub
xchg
push
xchg
icebp
dec
mov
pop
jbe
jge
xchg
mov
dec
and
es
push
adc
popa
or
jg
xchg
or
xor
addr16
in
pushf
jnp
xor
sti
lret
sbb
outsb
xchg
sub
es
mov
mov
movsl
icebp
sbb
jp
pop
test
in
or
xchg
aam
pop
mov
mov
popf
aad
xlat
in
aaa
out
or
inc
dec
adc
jp
jne
jb
or
daa
cmpsl
mov
mov
mov
xchg
cltd
movsb
and
mov
sub
loopne
dec
mov
and
int
mov
mov
repnz
fcmovu
out
loopne
imul
dec
pop
mov
cmp
aas
and
sub
lods
pop
sub
xor
je
std
in
jne
jp
mov
cld
inc
adc
xchg
or
fisubrs
sbb
mov
fidivs
sub
lea
js
or
loopne
sbb
jnp
mov
rorl
gs
xlat
mov
in
addr16
jns
icebp
arpl
or
and
adc
test
inc
dec
pop
mov
icebp
cmpsb
pop
mov
adc
or
push
sub
mov
jge
mov
mov
mov
mov
test
call
out
int3
movsl
sbb
xchg
rolb
aaa
shlb
mov
out
imul
sbb
mov
subl
or
adc
sbb
scas
adc
aas
enter
xchg
dec
mov
mov
idiv
adc
mov
push
mov
in
fwait
xchg
test
xor
jne
dec
sbb
cmc
test
xor
mov
push
and
xor
pusha
dec
xchg
xor
sbb
pop
sub
mov
or
sbb
mov
push
in
push
sahf
sub
icebp
xchg
lods
stos
xchg
pop
stc
add
mov
pop
pop
hlt
loopne
std
lea
xchg
pop
int3
lods
ret
scas
pop
data16
pop
sub
adc
pusha
mov
das
or
dec
xchg
push
mov
xor
mov
and
jge
lock
mov
xor
fisttps
cmpl
rclb
les
lds
xchg
mov
aad
dec
xchg
sti
and
jnp
jl
sbb
mov
dec
push
lret
dec
add
pushf
cmp
clc
and
loop
nop
ss
and
add
ret
scas
shlb
pusha
leave
adc
cli
push
movb
pop
leave
stos
xor
cld
dec
inc
divb
sti
xor
cmp
test
lret
pop
mov
inc
push
cmp
cmp
bound
fildll
mov
sub
jb
in
in
les
imul
mov
das
fstpt
imul
jnp
dec
push
in
mov
test
test
inc
or
rcrl
lret
jl
pushl
mov
repz
lret
movsb
push
jne
repnz
push
out
jo
mov
or
cli
fcmovbe
or
xchg
punpckhbw
add
or
mov
inc
lret
cmp
xchg
fldenv
xor
cld
sbb
jns
das
mov
xchg
cmp
stos
fldl
and
scas
sbb
nop
mov
xor
inc
xchg
cmpsb
lret
cmc
jbe
movsl
mov
adc
inc
xor
das
jp
add
cmp
scas
or
push
xchg
aas
sbb
icebp
pop
inc
pop
test
add
cmp
and
lods
aam
aas
mov
jp
cmp
dec
and
mov
aas
cs
push
in
mov
ds
fs
leave
jno
in
nop
adc
hlt
repz
mov
ficomps
popa
daa
add
mov
jns
push
pop
loopne
and
jmp
xor
mov
call
inc
repnz
rclb
sub
inc
cmp
push
dec
fdiv
jp
iret
xor
sahf
add
jbe
shlb
jb
jge
mov
rorl
leave
rcl
jp
lds
push
into
cmp
mov
rorl
insl
repz
mov
test
push
fldl2e
sbb
ret
mov
cmp
sbb
dec
and
mov
adc
jnp
add
sub
ficomps
cmp
inc
test
cmc
js
add
pop
out
imulb
adcl
fs
sub
adc
orb
sub
addr16
push
sahf
or
xchg
dec
das
adc
cwtl
inc
stc
mov
mov
sub
mov
cmp
mov
aaa
cmc
xlat
out
movb
jle
fbld
cmp
and
sub
sti
shll
jns
and
push
shll
loope
imul
lods
inc
test
rcrl
aam
loopne
addr16
mov
mov
pmuludq
push
add
daa
sbbb
leave
popa
test
fwait
insb
jmp
mov
cmp
popa
scas
pusha
xor
pushf
mov
xor
mov
je
cmp
or
jnp
imul
das
insb
cmp
xor
xchg
lcall
inc
jns,pt
push
xchg
mov
sbb
insl
ja
ja
sub
loopne
or
cmp
jae
dec
cli
mov
cli
jle
lcall
cmp
xor
sub
rcll
fildl
dec
dec
stc
icebp
adc
cmpsl
cmpsl
pop
cmp
or
rcrl
pop
into
cmpsb
jecxz
testl
les
loopne
loope
cwtl
test
jge
out
ljmp
sub
pop
lret
pop
sbb
or
add
aam
ljmp
mov
sub
leave
jbe
cltd
push
in
subl
mov
int
pop
sbb
and
add
out
sahf
and
inc
jecxz
xor
loop
and
mov
add
out
and
xchg
inc
mov
mov
xchg
inc
and
inc
adc
push
mov
jno
nop
in
sub
sahf
dec
xor
repz
mov
repz
fimuls
jbe
js
mov
push
pop
xor
adcl
cld
jae
imul
fisttpll
push
int3
rolb
ret
iret
sbb
push
dec
push
inc
fstl
dec
xorb
dec
sub
int3
jns
mov
lahf
insb
aam
call
adc
pusha
lods
mov
xchg
int
roll
xor
xchg
xor
das
push
out
add
in
cmp
adc
int3
js
push
mov
pop
popa
jo
sub
push
xchg
adc
test
insb
stos
push
stc
xchg
psrlw
mov
add
push
imul
in
pop
in
push
dec
mov
xor
out
add
adc
in
xchg
lret
sbb
push
pop
mov
pop
iret
iret
lock
push
int
cli
push
dec
test
xlat
pop
pop
xor
jb
add
cli
dec
dec
lods
out
into
into
das
cltd
fsubrs
adc
loopne
jge
cmp
push
adc
jge
push
or
xlat
sbb
movl
sbb
jno
int
push
inc
imul
mov
in
les
cmpsl
sbb
mov
ja,pn
ds
mov
cld
push
push
and
mov
int
pop
orps
adc
cwtl
fwait
sbb
leave
push
mov
cmp
fistl
dec
repz
nop
and
das
push
sub
xchg
dec
adc
sti
test
lods
out
je,pt
jge
sub
shrl
adc
adc
push
push
das
jno
sahf
mov
jno
pop
fnstsw
aad
sarb
mov
mov
sbb
sub
sub
out
fistl
xchg
dec
mov
outsb
sub
stos
xchg
xor
das
cmpsl
lea
push
jl
xchg
fldt
popf
popf
pop
adcl
fidivl
fmull
cmpsl
stos
or
dec
sbb
ss
in
mov
push
dec
test
pop
jo
dec
xlat
xchg
xor
imul
jl
jge
jnp
mov
shll
jl
add
dec
ret
fidivs
ficomps
adc
ljmp
loope
jno
std
and
sbb
xor
cmpsb
mov
cs
jle
sbb
cmpb
icebp
mov
dec
int
notb
sub
pusha
aaa
iret
std
pop
dec
cmpsl
iret
sub
ljmp
loopne
xchg
test
pop
js
sbb
rcrb
fcmovu
fnsave
adc
lock
mov
insl
jmp
push
push
push
sub
pusha
jno
aam
mov
lahf
lds
decb
bound
scas
inc
jb
pop
dec
stc
inc
jl
or
pop
dec
push
xor
adcb
je
jge
mov
jl
imul
add
jb
jae
mov
pop
or
xchg
pop
cmp
jbe
pop
int3
mov
addr16
dec
fisttpll
scas
std
dec
sbb
leave
mov
sbb
test
mov
mov
addl
jbe
adc
push
addr16
xchg
out
mov
jge
mov
out
xor
ja
repnz
push
enter
push
dec
xor
popa
pop
inc
jge
gs
ror
pop
les
gs
jg
or
inc
pop
subps
jne
sbb
mov
cwtl
mov
pop
mov
fdivs
popf
stc
adc
jnp
and
sti
sbb
in
mov
int3
enter
je
imul
jns
jns
pop
out
cmpsl
pop
push
jae
push
dec
jecxz
mov
xchg
dec
push
ror
sbb
jmp
imul
in
add
push
rolb
xchg
es
lea
outsl
xor
leave
loop
gs
or
js
js
xadd
es
loope
das
mov
mov
or
lods
mov
pop
clc
mov
adc
pop
push
rcrl
mov
push
lds
push
jns
rolb
add
push
mov
xor
arpl
dec
or
leave
push
ds
clc
sbb
aas
xchg
mov
inc
add
dec
mov
rorl
int
imul
lahf
and
push
data16
cmpsl
jns
ljmp
pop
es
and
pop
std
arpl
fcompl
push
mov
fadds
dec
dec
and
mov
add
inc
stos
arpl
iret
cmp
add
test
push
cli
or
ds
fistl
mov
sub
fdivr
sbb
ljmp
inc
jnp
stc
add
add
popa
bound
scas
push
pop
inc
cli
imul
mov
xor
sbb
jl
push
ja
test
insl
add
nop
xchg
pop
sbb
fnsave
loopne
fwait
mov
adcl
xlat
push
mov
jae
lock
arpl
mov
test
xchg
lcall
jne
and
fs
aad
repnz
jmp
cmp
shll
sarl
xchg
and
push
je
mov
ficomps
push
sbb
dec
mov
leave
xchg
pushl
inc
lret
inc
test
cmpsl
ljmp
into
sub
inc
fisubs
sbb
mov
dec
pusha
push
pop
fisttpll
orb
xor
jnp
pop
cmp
mov
in
lret
sbb
xor
mov
and
jle
jecxz
sbb
adc
sub
ret
mov
sbb
lods
insb
imul
in
pop
xchg
jns
popf
insb
mov
lcall
frstor
fiaddl
in
xor
and
setp
add
cmpsb
sbb
jle,pt
jae
sahf
pop
mov
pop
js
cmovl
sbb
hlt
cmp
loop
pop
ds
add
push
inc
push
ja
inc
mov
pop
push
xor
lret
movsl
adc
xor
repnz
add
dec
scas
out
inc
test
mull
arpl
mov
xlat
lea
xor
in
repz
pop
push
jae
add
inc
jmp
inc
jp
pop
xchg
mov
mov
add
test
and
in
out
inc
insl
mov
repz
neg
les
jns
ror
test
pop
or
iret
mov
pop
xor
sbb
cli
mov
add
xchg
jns
xchg
and
and
leave
mov
adc
pop
das
and
andb
mov
out
mov
adc
jp
fs
mov
js
aam
je
cmc
push
leave
inc
pop
inc
adc
sbb
cmpsb
pop
push
pop
scas
xor
jo
xor
movsb
fisubs
out
out
mov
es
or
test
mov
or
inc
or
sub
fldenv
inc
mov
outsl
push
je
mov
sbb
out
add
push
jmp
xor
mov
sub
push
shll
xchg
out
jns
in
pop
out
shr
xchg
pop
sbb
push
in
mov
pop
lock
jne
test
jmp
mov
sbb
test
les
pop
sbb
xchg
vxorps
or
push
push
lods
pop
adc
inc
stos
out
outsl
rcrb
push
dec
mov
mov
test
mov
test
aad
sbb
test
and
sub
mov
add
cmp
or
call
lcall
orb
cs
pop
popf
in
push
loope
insb
push
ljmp
or
flds
aam
enter
add
into
shlb
and
js
in
sub
add
dec
idiv
fcompl
add
mov
push
ja
arpl
inc
rorb
call
pop
pop
test
jge
push
psllw
cmovns
jmp
and
fcomps
les
pop
mov
jae
fists
add
push
popf
lret
in
pop
es
pushf
push
mov
cmp
ss
fst
cltd
mov
or
adc
or
repnz
dec
negl
pop
je
sti
dec
out
mov
cmc
add
cli
mov
scas
in
icebp
jge
push
xchg
dec
stos
xchg
xchg
and
and
lcall
scas
cmp
pop
xchg
test
sub
mov
pop
aaa
insb
add
jmp
je
mov
xchg
enter
and
jb
setb
and
and
rorl
mov
iret
aam
adc
sub
in
mov
pop
aas
jg
mov
loope
sbb
mov
and
scas
ljmp
pusha
mov
ret
push
shr
sub
xchg
cld
pop
pusha
cs
int
mov
cmp
mov
add
mov
imul
out
pop
cmp
fdivrl
lods
mov
test
das
dec
mov
or
adc
aad
test
test
mov
mulps
jne
and
aas
js
movsb
push
jmp
pusha
rorl
xor
mov
lods
fs
call
jns
shlb
std
lcall
repnz
adc
imul
and
cmp
and
fimull
add
xor
xchg
xor
cmp
or
mov
push
in
mov
sarl
shlb
adc
xor
aad
mov
sbb
xor
xchg
adc
add
fwait
ljmp
fisttpll
movsb
loop
mov
sbb
push
add
adc
testl
push
cmp
shl
mov
roll
mov
dec
dec
sbb
daa
push
repnz
data16
imul
icebp
subl
mov
ss
rolb
lret
mov
and
cld
jmp
push
push
adc
out
cld
shlb
clc
int
ljmp
test
cmc
addb
loopne
and
mov
push
test
mov
and
imul
pop
enter
adc
imull
stos
mov
xor
mov
lods
mov
inc
movsl
fs
out
pop
jmp
jo
mov
in
out
fistps
mov
xchg
jno
in
clc
pop
push
jg
test
push
arpl
pop
fsubrs
lret
popa
out
dec
mov
enter
inc
fwait
js
push
jecxz
jle
stc
sar
cmp
adc
call
inc
lret
mull
mov
lcall
ret
pusha
lock
mov
mov
cli
into
sub
push
fisttpll
test
scas
decl
dec
mov
ret
and
incb
pop
mov
mov
mov
xorb
dec
jmp
sub
pop
and
adc
rolb
mov
jmp
mov
sahf
lods
dec
lea
lcall
and
iret
pop
or
push
sbb
add
jnp
adc
mov
jno
into
scas
xchg
ljmp
test
pop
push
subl
std
lods
push
sub
out
mov
shrl
scas
test
test
bound
adc
es
xlat
mov
sub
mov
shlb
sub
sbb
jge
sar
jae
xchg
adc
repnz
loope
mov
and
notl
push
push
bound
mov
mov
repz
andl
daa
aaa
push
pop
sbb
test
loope
jae
or
iret
adc
xchg
sbb
xchg
clc
je
lret
xor
imul
sbb
ljmp
xor
dec
mov
cmovo
jnp
cmpb
sahf
xor
mov
and
xchg
data16
mov
mov
cmp
into
xchg
int
and
je
pop
sbb
jmp
dec
bound
cli
dec
gs
dec
jle
jmp
push
das
mov
push
mov
out
rcll
ljmp
add
add
into
jge
jbe
mov
enter
mov
mov
or
out
lds
push
xchg
ret
push
insb
jno
scas
inc
lea
test
pushf
pop
dec
pop
mov
fdivrl
bnd
andl
jp
inc
pop
and
adc
cmp
aad
mov
sbb
mov
rep
adc
or
cld
sbb
pop
loopne
dec
jp
test
testl
lcall
gs
mov
lock
push
xorl
popa
iret
cs
fdiv
lds
jge
ficomps
je
and
cmpsb
data16
adc
adc
aam
dec
test
mov
loopne
dec
jecxz
mov
test
add
push
and
and
addl
xor
aas
imulb
popa
sbb
in
mov
ja
out
pop
dec
ja
out
mov
xor
and
icebp
push
inc
stos
insl
or
jno
jb
fcomp
mov
sti
int3
scas
shll
data16
nop
testl
mov
jl
stos
mov
std
dec
and
ja
fbstp
xor
fcmovnu
ret
xchg
sbbl
xor
iret
arpl
pop
cmp
xchg
push
or
xor
sub
and
aam
mov
inc
mov
les
lcall
and
sbbl
jns
fstpl
cmp
mov
xchg
in
mov
hlt
cmc
inc
cmp
dec
aaa
pop
popa
or
lock
inc
adc
iret
shrl
cltd
pop
push
mov
sub
mov
inc
in
inc
icebp
push
pop
outsl
add
and
int
out
xchg
jecxz
fnstcw
int3
dec
shrb
aas
xor
mov
pop
int
jno
xchg
div
bound
mov
and
out
mov
mov
mov
int
enter
sbb
mov
inc
mov
sub
aad
mov
jne
xchg
pop
rcr
in
ret
mov
push
mov
mov
cld
lock
clc
xchg
adc
repz
xchg
push
js
inc
data16
mov
jbe
mov
lahf
scas
fsub
aas
pop
dec
jle
push
push
iret
push
lea
dec
xor
rorb
adc
ret
fdivr
out
adc
rol
xchg
test
cmpsl
mov
icebp
test
cmp
xchg
insb
insl
xlat
mov
cmp
add
push
cmp
mov
sub
lret
pop
in
lahf
and
mov
fwait
mov
adc
xchg
clc
or
sbb
sub
inc
daa
imul
pop
pop
mov
loop
or
inc
mov
gs
js
sarb
pop
xor
inc
mov
or
shll
inc
lods
mov
jge
ret
adc
and
mov
leave
inc
scas
adc
mov
inc
mov
mov
cli
in
sbb
add
into
jns
loopne
push
aam
push
ss
fwait
xchg
ljmp
xchg
es
orb
jmp
loope
pusha
lods
out
sub
ljmp
rcrl
adcb
push
dec
inc
pop
scas
mov
iret
mov
dec
stos
gs
orl
in
ss
ret
nop
adc
xor
js
test
xchg
push
jle
movsl
add
sbb
rcll
mov
sub
mov
nop
adc
in
jge
or
mov
or
or
push
dec
pop
pop
mov
clc
push
scas
call
inc
hlt
dec
jle
sbb
push
stos
adc
mov
mov
inc
ljmp
push
sti
fisubrs
and
mov
mov
outsl
int3
fdivl
test
insl
mov
add
dec
inc
sbb
dec
push
sbb
cltd
adc
push
push
inc
or
mov
imul
xacquire
insl
lahf
sbb
stc
pop
jb
mov
push
and
xor
shrl
fcmovnbe
push
inc
cmp
and
dec
leave
adc
mov
or
test
jmp
je
scas
aad
sbb
fst
in
fucomp
lret
rclb
mov
pop
enter
cs
mov
in
xchg
ljmp
and
fisubl
popf
and
mov
lods
in
cli
dec
out
push
sbb
mov
sub
jecxz
filds
icebp
addr16
mov
out
out
mov
mov
enter
movsl
add
xorl
insl
jmp
xor
jo
sar
aaa
ds
xchg
orb
mov
xchg
dec
dec
push
xchg
sub
xor
lret
cmc
lret
mov
inc
out
pop
icebp
mov
in
fstpl
pushf
test
sbb
sahf
or
inc
mov
add
stc
mov
fstps
add
jge
mov
out
sbb
call
jmp
lds
jp
rcrb
xadd
cmc
add
outsb
nop
dec
mov
xchg
shll
lret
xlat
cmc
cmp
dec
lahf
cltd
add
mov
ret
fdivs
xchg
or
add
mov
pop
popa
push
and
lahf
pop
sub
adc
sbb
dec
insb
divb
loopne
jae
cmp
stc
fistpl
xchg
mov
lods
inc
loop
push
inc
movsl
cmpsl
xor
inc
inc
stos
cwtl
push
mov
cmp
fdivs
loop
mov
or
mov
push
sub
xor
je
mov
roll
jmp
imul
inc
and
jb
pop
leave
xor
mov
nop
les
gs
repnz
lock
xorb
and
leave
es
jp
int
testb
stos
leave
xor
adc
in
push
outsb
test
enter
loopne
gs
ficomps
mov
out
or
mov
push
mov
dec
cld
pop
lret
ljmp
xchg
mov
mov
and
aad
and
loop
add
lds
or
push
imul
push
subb
jno
mov
outsb
xchg
outsb
mov
lret
mov
push
std
scas
outsl
and
daa
or
into
push
dec
xchg
aam
sbb
and
or
xor
jg
sbb
adc
inc
fildl
push
subb
aad
mov
mov
sub
or
aad
andl
rcrb
push
fidivl
hlt
dec
xchg
lret
jnp
xchg
mov
xor
out
xor
scas
cmpsb
fdivr
sub
fisubrl
pop
in
xor
inc
push
sbb
add
adcl
in
movsb
push
mov
pop
out
stc
jnp
mull
repz
xchg
test
push
or
mov
mov
sub
mov
mov
movsl
dec
sbb
leave
ret
call
push
ja
lea
daa
jno
sbb
lea
dec
adc
cmp
in
and
push
cmp
xor
cmp
les
and
xor
xor
inc
xor
inc
fnstenv
leave
js
scas
test
push
push
pop
xor
push
mov
cmpsl
imul
into
test
enter
push
xchg
insb
shrb
xor
loopne
rcr
or
jecxz
jl
inc
push
mov
popa
jl
daa
jecxz
subb
mov
idivl
out
mov
mov
ret
loopne
push
jmp
stos
or
aad
push
rcrb
cli
pop
and
inc
or
adc
jmp
mov
push
cmp
and
js
cld
fwait
mov
mov
mov
test
mov
mov
mov
pushf
cli
test
mov
scas
adc
jbe
repnz
and
sti
cmp
pop
subb
testb
imul
test
mov
adc
pop
inc
mov
cmp
adc
insb
cld
add
int
and
ljmp
ret
ss
repnz
sbb
int3
push
outsb
mov
xchg
xchg
fcomps
aad
repnz
fs
or
push
ss
or
nop
hlt
in
xchg
or
sbb
pop
in
jl
xor
ret
jne
aaa
pop
enter
dec
es
sbb
push
push
adc
sbb
push
or
adc
add
mov
xlat
sti
jb
gs
mov
mov
sar
loop
sahf
mov
lock
jp
mov
xor
dec
push
rcrb
mov
sahf
dec
adc
push
xor
in
push
lds
in
add
nop
dec
data16
adc
add
stos
sub
cmp
cwtl
jl
sub
test
ss
outsl
lcall
rorb
in
inc
mov
aas
jmp
xchg
test
insb
test
push
xchg
sahf
scas
out
adc
dec
sub
jno
xlat
outsb
pop
rcr
fdiv
loope
xchg
into
sbb
popa
jno
shl
cmp
xor
mov
inc
and
out
daa
jp
sub
pop
pop
sub
and
dec
mov
fiadds
adc
mov
add
leave
fsubr
xchg
mov
xlat
and
arpl
cs
cmp
aas
cmpsl
jge
subb
out
mov
cs
pop
stos
mov
clc
jnp
mov
mov
in
lret
dec
add
cli
pop
imul
jg
rol
loopne
test
adc
fstpt
push
jp
sbb
xchg
pop
cli
cli
scas
test
xor
pop
push
xchg
shl
dec
fdivl
rcrl
std
leave
push
fsubrp
jbe
push
jne
pushf
js
add
adc
out
mov
cli
inc
inc
adc
sarl
fucomip
pop
mov
out
xlat
add
sub
and
dec
jg
pop
mov
inc
sbb
push
lds
add
cltd
lahf
andb
adc
push
sbb
adc
jb
jmp
xchg
adc
fwait
decb
cmpb
cmpsl
inc
jg
push
hlt
negb
and
lahf
add
fcoms
adc
cwtl
hlt
push
rclb
inc
icebp
mov
call
in
das
jmp
sub
or
insl
cli
add
and
test
repnz
rol
aaa
sbb
mov
mov
or
add
push
popa
outsb
mov
mov
xchg
sub
xchg
jmp
lds
mov
push
inc
cmpsb
inc
and
mov
gs
psrld
cltd
jae
mov
push
dec
std
pusha
xchg
jbe
rcr
push
scas
or
loope
ficoml
pusha
mov
mov
sahf
inc
pop
and
mov
outsl
rclb
js
imul
sbb
mov
mov
inc
shlb
mov
cmp
repz
add
adc
pushf
cmp
dec
sub
lock
and
nop
dec
xchg
cmpsl
or
sub
and
mov
dec
ss
lock
lea
fwait
out
sub
out
aad
pop
pop
test
dec
arpl
test
cmpsb
inc
orl
sbb
jge
push
gs
testl
shl
cmpl
inc
test
xchg
push
mov
ret
adc
inc
mov
js
sbb
adc
dec
ljmp
hlt
xor
push
add
shll
lcall
aam
fcomip
fs
push
sub
mov
in
data16
aas
sbb
fists
dec
push
pop
add
and
adc
jecxz
jns
pop
int3
aam
outsl
or
int3
push
dec
and
lock
xor
movsb
lock
cmp
pushf
mov
xchg
test
lahf
lds
add
push
repnz
or
dec
loope
and
mov
shl
ret
test
std
in
es
inc
xchg
gs
loope
sub
dec
push
orl
stos
aam
rol
mov
into
push
jo
jg
cmpsb
inc
insl
pop
ficoml
mov
loopne
ret
cltd
int3
cmp
pop
outsl
pop
add
pushf
cli
enter
fisubs
dec
into
cld
popf
sbb
xchg
mov
jp
xchg
lahf
cwtl
inc
sub
cld
sbb
adc
je
add
or
aas
mov
inc
iret
aas
sbb
pop
sbb
in
push
arpl
push
cmpsl
jmp
add
mov
push
xchg
bound
mov
adc
shll
push
loopne
ret
inc
imul
xor
das
insb
cmp
out
shrl
lods
jne
jno
dec
mov
pop
dec
pop
imul
and
aaa
add
hlt
popf
mov
scas
inc
cmp
retw
jecxz
cmp
sbb
pop
lret
mov
ss
clc
ss
in
jle
jb
test
add
loopnew
ljmp
or
out
push
nop
mov
push
jne
xchg
inc
pusha
and
neg
std
cli
sbb
out
enter
add
or
push
pop
lret
in
dec
sub
test
jno
adc
mov
push
push
in
repz
std
and
lahf
sbb
jnp
insb
sbbb
daa
sti
fisttpl
insl
push
push
je
jp
orb
mov
ss
pop
das
mov
popf
test
push
mov
les
iret
and
xchg
fsubp
adcb
pop
push
ljmp
shlb
adc
fcomp
cmp
mov
jecxz
jle,pt
mov
sub
jmp
lea
arpl
jns
dec
dec
inc
cwtl
stc
sar
sub
inc
push
xchg
ljmp
xor
insb
mov
std
inc
es
std
lds
pop
pop
out
jnp
dec
and
movsb
pop
lret
in
mov
fisttps
inc
sbb
sbb
mov
rolb
jne
addr16
repz
outsl
lea
jbe
outsb
xor
imul
arpl
sbb
clc
mov
push
pusha
test
mov
xlat
pop
das
push
jl
lea
sub
push
popf
mov
cmpsl
pop
add
cmp
arpl
push
cmp
test
cmpsb
pop
das
sti
push
mov
push
fisubs
sub
push
fsubrs
jecxz
dec
push
fwait
cmp
mull
loope
shrb
xchg
je
add
push
dec
sbb
cmp
in
popa
insl
bound
aad
xor
fnsave
mov
stc
push
push
mov
fs
pop
xlat
cmp
cmc
leave
stc
xchg
arpl
lds
lcall
mov
xor
out
sub
mov
adc
ss
inc
int3
and
cwtl
dec
or
repnz
inc
push
adc
xor
inc
xchg
fidivs
test
cmpsl
pop
adc
mov
negl
sbb
mov
or
imul
mov
pop
dec
xor
push
mov
in
cmp
fildll
mov
pop
aam
mov
fstps
or
sbb
sbb
push
dec
adc
test
repz
jnp
loope
jno
mov
std
pusha
xchg
stc
stc
pushf
jp
pop
stos
pusha
jg
jno
fcmovb
sub
mov
xor
or
cmp
or
jnp
icebp
sbb
xchg
mov
dec
adc
xchg
cmp
hlt
aad
jle
fwait
jecxz
cmc
fcmovnbe
push
mov
popa
cmpsl
test
push
arpl
dec
loop
inc
push
adc
push
je
sarb
sub
cli
shll
mov
stc
xor
mov
mov
not
daa
insl
sub
adc
push
arpl
outsb
test
push
iret
xchg
insl
sub
mov
in
fcoms
fcoml
lds
push
mov
push
cli
fsubl
mov
lcall
aaa
movsb
lds
inc
pop
aaa
jns
jmp
in
inc
int
dec
push
jne
lret
cmp
inc
mov
sub
loopne
dec
cmp
icebp
mov
orb
push
pop
aam
jmp
adc
addr16
cmp
imul
movsb
insl
cmp
push
repz
decb
lds
je
add
shll
fwait
iret
ret
inc
mov
mov
je
rclb
out
popa
ljmp
adc
inc
or
cmp
sbb
sbb
dec
adc
adc
xor
shr
idiv
cld
or
shl
insl
and
mov
enter
imul
xchg
push
add
add
jge
rclb
push
stos
inc
pop
add
ret
sti
ss
aad
clc
inc
ret
pop
mov
pop
arpl
inc
incb
sub
fwait
in
push
dec
cmpsl
stc
xor
jmp
imul
lea
cmp
pushf
inc
inc
scas
cmp
dec
test
cmp
mov
push
inc
xchg
fistps
jmp
and
negl
orl
push
xor
pusha
int3
ds
mov
fs
mov
incl
pusha
and
inc
push
cmp
mov
add
imul
icebp
mov
sub
and
pop
punpcklbw
out
and
mov
mov
mov
lahf
dec
pushf
xorb
sub
sub
popf
lods
add
pop
push
in
popf
test
or
std
mov
loop
dec
adcl
je
jo
inc
ds
push
mov
inc
inc
cld
xor
push
jecxz
aam
test
pop
fnstenv
scas
cmp
out
or
pop
lret
ljmp
cld
push
sahf
pop
jno
imul
add
sbb
popf
stos
adc
and
pop
lret
inc
add
mov
je
int3
and
movsb
mov
hlt
shll
push
push
aad
cmp
push
cli
std
into
sbb
sub
pop
adc
pop
ficoms
push
inc
fists
xor
mov
add
test
lods
pusha
or
jg
in
pusha
dec
imul
shl
scas
xchg
lods
fwait
mov
test
xchg
outsb
add
addr16
stos
dec
stc
xorl
dec
arpl
sub
cmp
jne
mov
xor
cmp
bound
lahf
jnp
add
mov
mov
inc
hlt
jae
jmp
dec
ljmp
pop
and
sub
scas
jecxz
popa
sub
aas
ljmp
sbb
repz
pop
lods
fneni(8087
adc
xchg
into
rclb
dec
out
mov
sbb
jecxz
add
mov
mov
or
pushf
data16
xchg
call
cmpb
push
ret
pop
call
xlat
push
dec
cmp
xchg
xchg
in
in
adc
sub
or
cmpb
rclb
cmovl
jecxz
stos
mov
fucom
out
pop
lahf
and
adc
lret
xchg
xor
aam
sub
lock
add
mov
cmp
adc
jle
pusha
and
leave
pop
and
lahf
mov
mov
sbb
inc
adc
fs
xchg
mov
fistps
aad
nop
dec
hlt
mov
sahf
sub
fdivs
ljmp
pop
scas
cltd
adc
fcmovnbe
pop
loopne
inc
dec
pop
xchg
mov
scas
hlt
test
xchg
lahf
out
stos
pusha
or
jl
sbb
xor
repnz
ret
enter
and
push
xor
repz
cmp
mov
fdivp
test
jmp
mov
test
cwtl
and
xcrypt-cbc
cmpsl
xchg
cltd
mov
lock
xor
push
add
cmp
ret
mov
jo
scas
ficoml
jb
push
xchg
addr16
xchg
int3
xchg
iret
jl
lret
dec
push
in
pushf
dec
js
mov
or
cmp
or
mov
adc
dec
cmpl
fdivrp
lea
mov
movsb
xchg
imul
and
jp
into
arpl
out
push
or
rolb
mov
xor
cld
fstpl
sbb
mov
xor
test
out
adc
aas
mov
and
outsl
lods
in
fwait
addl
add
cwtl
or
stos
fucomi
sbb
fsubrs
dec
inc
testl
shlb
mov
push
push
xor
add
loop
lret
adc
mov
daa
push
lds
mov
pop
imul
add
xor
push
pop
loop
daa
pop
call
sbb
jnp
int3
int
and
lret
out
mov
outsb
push
das
mov
push
jmp
inc
loope
jne
push
mov
rcll
sbb
mov
cmp
insb
iret
pop
jae
in
jp
mov
rclb
dec
mov
insl
adc
das
jno
fldl
xchg
sbb
adc
xor
xchg
mov
ljmp
addl
mov
pusha
sbb
xor
push
mov
mov
push
pop
pop
ds
cmp
fs
mov
xor
hlt
adc
cwtl
xchg
aam
int
mov
pop
mov
pop
mov
mov
loope
loopne
push
add
and
adc
push
fmuls
mov
lds
pop
mov
int3
push
dec
cmp
movsb
push
cmpl
ljmp
xchg
ljmp
gs
cmpsb
cmp
dec
cmp
cmp
test
pop
fmull
adc
inc
push
xchg
xchg
mov
rol
mov
xchg
mov
push
imul
mov
aam
daa
add
push
stos
ret
in
stc
mov
subl
push
inc
fisttps
insl
fdiv
sub
shl
adc
pop
dec
lret
es
dec
les
and
scas
dec
jns
sar
lret
cmovo
test
lahf
pop
add
or
inc
xor
out
scas
adc
add
or
sub
pop
xchg
xchg
add
subb
cld
sbb
add
xchg
pop
mov
cwtl
cmp
iret
js
stc
pusha
push
call
xorb
xchg
xchg
pop
xor
sub
in
push
push
inc
inc
or
xchg
add
mov
xchg
add
mov
mov
pop
rolb
and
lods
pop
xchg
add
rcrl
mov
mov
xor
mov
lahf
in
sbb
mov
xchg
push
push
sub
or
ljmp
lcall
pop
xchg
ret
es
in
inc
pop
in
jmp
adc
aas
or
lock
insb
ret
insb
inc
push
mov
aam
dec
fs
pop
push
pop
jae
mov
jns
lods
mov
mov
push
add
mov
pusha
adc
push
mov
test
dec
fs
inc
lea
sub
adcb
call
fstpt
xchg
in
jmp
lret
daa
out
xchg
int3
adc
xchg
ror
sbbb
jno
pop
test
and
das
ja
dec
mov
dec
call
xlat
in
les
in
out
mov
sub
je
inc
sbb
mov
xchg
pusha
rcl
push
push
pop
sbb
xchg
movsb
jns
jns
inc
scas
test
xchg
lret
adc
mov
mov
imul
lahf
shll
leave
negb
inc
pop
stos
pop
pop
ja
and
add
sbb
pop
popa
push
popf
mov
mov
clc
ds
fs
mov
xchg
enter
jecxz
shrb
fs
push
push
icebp
sbb
adc
cmp
in
aad
push
mov
mov
jb
test
inc
sbb
lret
js
add
repz
jmp
leave
popa
popa
scas
xchg
pop
add
popf
aam
mov
jno
filds
push
in
imul
adc
popf
jle
clc
cmp
pop
xor
xor
dec
pop
out
fmul
inc
test
ljmp
clc
inc
out
sbb
popa
ljmp
stos
rcrb
inc
adc
or
popf
sub
sbb
mov
dec
cmpsl
adc
ficomps
iret
adc
outsl
popf
in
loopne
lock
jge
dec
mov
into
add
sarl
inc
retw
xor
or
mov
rcr
leave
jo
inc
mov
pop
add
add
testb
sub
push
pop
setl
das
ss
ljmp
pop
int3
mov
sbb
mov
cltd
popf
iret
test
pop
add
cwtl
push
xor
cmp
aam
cwtl
icebp
cli
mov
mov
filds
test
arpl
lea
imull
scas
or
inc
xlat
sahf
das
test
cmp
clc
fs
push
stos
or
lahf
mov
mov
in
test
outsl
stos
xchg
sub
xchg
xchg
icebp
roll
inc
inc
stc
js
lods
xchg
adc
dec
adc
dec
adc
sbb
cmp
inc
arpl
pop
lahf
cmp
adc
fcoml
mov
inc
or
lods
adc
lods
je
adc
push
sub
push
aad
mov
mov
loopne
test
scas
inc
inc
inc
int
or
lahf
mov
push
xor
mov
jne
pop
fcmovnb
add
inc
pop
enter
int3
pop
js
adc
in
xchg
sahf
lock
xchg
and
push
insb
rcll
jb
in
leave
jo
adc
cmpsb
sub
scas
xchg
js
enter
jnp
stc
movl
mov
or
push
scas
in
in
inc
fwait
outsb
mov
loop
cmpsb
xchg
negl
in
data16
roll
add
dec
addr16
or
popl
fisubl
fmuls
mov
push
inc
jns
sbb
and
sti
iret
popf
push
push
dec
push
xor
in
int3
pop
ret
mov
lahf
sub
clc
or
mov
inc
loop
pop
aam
sti
popl
pop
mov
jb
dec
xor
loope
xor
cmp
mov
xchg
dec
xchg
lret
pop
cmp
push
mov
jne
mov
fnstsw
mov
pop
daa
adc
pop
lods
adc
push
fcmovnbe
rcl
mov
clc
psrld
arpl
addr16
xchg
dec
hlt
repz
shrb
mov
mov
xor
icebp
movsl
lret
jne
mov
ret
or
inc
scas
dec
in
aaa
test
scas
adc
shlb
cs
mov
outsb
xor
int
mov
inc
jge
shlb
push
lret
cmp
and
sarl
pop
jle
data16
mov
sbb
jne
adc
xor
ret
push
dec
mov
and
pop
dec
pop
imul
inc
cltd
dec
shll
jg
scas
mov
push
push
aam
lret
sub
xor
dec
mov
jp
fsubl
hlt
push
mov
out
xchg
or
or
or
mov
cmp
jns
dec
lea
cwtl
popa
jmp
loopne
push
pop
mov
aad
mov
out
push
bound
cmp
addr16
test
cmp
pop
clc
pop
lods
sbb
adc
sbb
xchg
ds
pxor
dec
lods
cltd
insb
div
sbb
insb
cmpsb
jb
out
ret
test
out
sub
subl
cltd
sti
sub
inc
mov
loopne
insl
das
fstpt
stc
sub
push
std
or
xor
sbb
and
and
pop
mov
mov
sub
mov
and
ficomps
cmpsl
mov
or
lea
pushf
sub
ret
pop
lret
lock
outsl
and
xchg
movsb
push
sbb
xlat
inc
imul
add
loope
aam
push
xor
mov
or
sub
outsl
test
xchg
pop
cltd
divl
cltd
ret
mov
movsl
ret
cmp
jmp
stos
hlt
sbb
jae
addb
imul
adc
pop
and
outsb
mov
imul
cltd
pop
in
jnp
jns
cmp
push
decb
push
rcrb
or
push
hlt
push
push
pop
inc
pop
mov
jp
cmpsb
mov
rcr
push
out
inc
fcmovne
and
mov
mov
lret
mov
lods
movsl
jne
or
mov
lods
and
fnstsw
loopne
mov
adc
mov
add
adc
jl
jl
ret
or
add
mov
daa
add
lds
adc
andb
in
gs
jo
mov
out
push
rol
stos
cmpsb
push
popl
aaa
push
repnz
popa
addr16
mov
pop
hlt
rcrb
pop
arpl
push
into
jge
mov
sub
and
lret
mov
and
or
fcomp
pop
and
ret
inc
in
mov
or
mov
mov
jl
fwait
shr
push
call
fdivr
notl
movsb
repnz
mov
mov
mov
pop
push
mov
sahf
jb
pop
dec
fsub
in
ret
mov
lea
mov
js
inc
mov
pop
jnp
filds
jb
inc
push
and
fwait
shr
mov
xor
mov
jmp
pop
enter
mov
pop
test
mov
jmp
fmull
aad
enter
pop
nop
dec
or
in
test
imul
mov
dec
andb
add
fstp
sbb
and
icebp
push
dec
stc
cld
cmp
push
lret
lea
push
aam
dec
mov
scas
mov
int3
in
ret
cmp
pop
cltd
bound
pop
and
mov
mov
sub
inc
inc
cmpsb
mov
mov
je
xchg
mov
lock
lods
push
mov
ljmp
aas
push
dec
adc
aad
sbb
xchg
fmull
mov
call
xor
and
aaa
add
add
xor
sahf
in
das
les
insl
ds
adc
and
test
jbe
movsb
popf
insl
aas
stos
xor
mov
idivl
mov
inc
or
add
iret
or
addr16
leave
dec
and
and
inc
outsb
pushf
pop
std
dec
addr16
push
mov
fmul
cmp
xchg
cmp
sahf
push
shrl
inc
stc
das
dec
mulb
pusha
int
pushf
sub
jmp
jns
sub
mov
rep
mov
add
insl
fisubl
jge
push
dec
cmp
pop
mov
aaa
mov
xlat
jae
mov
scas
cwtl
lret
or
ret
sbb
xor
or
and
push
lahf
popa
mov
test
psubq
xor
enter
cli
jne
jnp
pop
pushf
data16
hlt
insl
cmp
loop
jb
sub
mov
cs
pop
pushf
push
xorl
inc
ficomps
pop
movq
insb
hlt
hlt
sbb
stos
out
xchg
fidivs
pusha
xchg
cmp
and
nop
outsb
frstor
loope
pop
mov
out
enter
ja
xor
dec
iret
pop
jle
jle
mov
xchg
subb
jno
fildl
mov
sub
mov
ficomps
jno
adc
dec
cltd
cmp
rcll
ret
cmp
inc
outsl
enter
push
stc
xor
adc
mov
sarl
mov
test
ds
arpl
popf
mov
dec
adc
hlt
cmp
bound
test
add
icebp
ret
pushf
rorb
out
fwait
xchg
xchg
mov
dec
sbb
inc
adc
lret
shll
or
xor
dec
mov
push
mov
rorl
imul
mov
data16
mov
insb
mov
push
cltd
icebp
ja
out
push
xor
fiadds
pop
push
pop
adc
push
out
add
call
clc
rorl
dec
lods
dec
ret
sub
int
cmpsb
addr16
mov
sbb
mov
scas
lods
clc
and
sub
jnp
je
lret
movsb
movsl
push
lock
cmp
jmp
pop
subb
sbb
mov
into
dec
data16
mov
sub
adc
or
andb
faddp
adc
aam
jns
or
xchg
dec
cmpsb
mov
rclb
pop
call
and
jno
lcall
pop
push
pushf
or
sarl
cmp
inc
jmp
lods
in
sbb
or
jp
shrb
jb,pn
jle
fdivl
inc
addr16
jge
lods
popa
push
fldt
test
mov
lock
adc
push
push
jno
cli
rorl
add
ficoms
fs
movsb
lods
gs
fists
arpl
cmp
push
loop
enter
add
sti
add
adc
pop
or
adc
lea
jno
lcall
lds
add
or
sbb
inc
adc
cmp
std
aam
shlb
adc
mov
aad
or
mov
sbb
stc
cli
mov
mov
inc
ret
out
pop
stos
xor
mov
repz
xchg
mov
enter
jbe
leave
sbb
mov
mov
js
rorl
xchg
push
js
xchg
mov
add
lret
sbb
pop
mov
dec
int3
dec
mov
je
shrb
mov
jb
adc
into
sub
repnz
frstor
test
mov
push
cmp
add
arpl
popf
fsubp
das
test
cmpb
in
daa
dec
mov
jmp
mov
out
push
sub
xor
stos
push
xchg
loope
or
jl
scas
dec
jbe
lcall
imul
xchg
mov
ret
int
ja
mov
insb
loopne
outsl
xor
inc
lock
mov
scas
xor
or
sub
out
lahf
popf
rep
loopne
xlat
dec
inc
mov
into
adc
mov
push
cmp
jae
shrb
push
fcmovnb
sbb
lahf
insb
xor
inc
and
lea
cmpsl
adc
scas
xchg
rolb
push
aad
loopne
push
fisubl
icebp
ds
xlat
cmpsl
pop
mov
shl
push
xchg
mov
inc
fcompl
nop
xor
scas
loop
jl
push
aam
mov
mov
aam
jb
loopne
icebp
arpl
mov
sub
sub
sbb
out
jl
repnz
or
mov
out
cmp
ds
dec
ljmp
sbbl
dec
pop
fisubs
cmp
jecxz
outsl
sahf
scas
jo
xor
inc
or
scas
test
mov
bound
mov
push
mov
lret
daa
cmc
ljmp
cmpsl
and
sub
push
adc
or
inc
jbe
fildll
or
mov
mov
lcall
ds
push
xchg
and
jns
jmp
lock
cmpsb
mov
test
dec
iret
and
push
loopne
aas
in
pop
cmp
xor
mov
and
imul
xor
jnp
pcmpeqb
ljmp
xchg
fwait
mov
xchg
cld
fs
js
pop
rolb
test
dec
xor
push
push
sahf
xor
pop
loopne
sbbb
ja
or
imul
mov
mov
sar
sbb
add
fwait
jmp
mov
imul
add
decl
cmp
aaa
sub
adc
in
push
cld
fcomip
js
nop
sbb
insb
or
sbb
ja
and
pusha
sub
scas
cmp
or
dec
jecxz
sarl
mov
dec
cmp
aam
push
mov
notb
mov
and
or
subb
nop
sbb
addr16
mov
out
popf
ss
sub
add
jae
pushf
mov
pop
ja
pop
jae
pop
in
push
inc
idivl
and
add
aas
dec
cmpsl
dec
push
test
rcr
int
das
mov
inc
lcall
xchg
jecxz
add
xchg
push
mov
std
or
push
inc
adc
cwtl
mov
sbb
mov
push
fwait
jns
pop
mov
sbb
sti
fstps
cmp
lods
fildll
test
shrl
repz
mov
call
cmp
mov
cmpsb
adc
lret
xor
in
in
fcmovne
xor
sbb
aas
std
jbe
fldcw
imul
sbb
add
loop
lret
mov
sbb
dec
inc
jo
or
rorb
sbb
inc
jb
loopne
jge
stos
xchg
idivb
enter
lret
decl
or
int
pop
cmp
push
ds
push
mov
push
xor
jnp
mov
mov
pusha
xchg
mov
pop
jge
fsubl
jp
and
popf
out
mov
fwait
or
mov
test
ljmp
xor
pop
xor
movsb
sahf
pusha
je
in
repnz
dec
pop
sahf
push
push
cwtl
into
jmp
sbb
inc
mov
into
sbb
cld
pop
stos
or
das
push
xchg
xchg
xorb
imul
test
xor
orl
mov
gs
loop
jnp
push
pop
add
lods
xor
int3
out
stc
adc
mov
into
pop
inc
ljmp
mov
sub
fsubs
dec
jns
pusha
mov
shr
aas
jae
xlat
mov
scas
mov
mov
add
xchg
fistpll
sbb
dec
sub
aam
lods
mov
add
jl
sbb
mov
rorb
incl
cs
mov
cmp
or
pop
xor
js
arpl
add
inc
scas
cmp
and
mov
mov
test
jge
and
pop
jo
rclb
mov
and
adcl
fidivrl
and
lea
ss
mov
xchg
cmpsl
test
shrb
sub
rcrb
mov
pop
fwait
mov
add
push
xchg
enter
or
mov
jmp
ss
out
or
stos
scas
push
and
jl
adc
inc
cmp
jle
pop
sti
pop
and
aas
int
outsl
jp
cltd
scas
stos
stos
pusha
adc
jae
jae
adcb
sbb
and
push
jg
cli
mov
rcrb
mov
das
je
and
cmc
rclb
sub
rcrb
xor
cs
sbb
pop
push
sub
mov
lret
test
sub
cmp
add
pop
enter
in
scas
jmp
mov
rcrl
sub
and
pop
sbb
jge,pn
arpl
sub
sub
inc
dec
lds
test
rclb
mov
in
aam
dec
lcall
sarb
in
xchg
popa
ds
adc
sti
jnp
mov
push
add
shrb
addl
mov
and
cmc
push
pop
fcompl
inc
loopne
mov
adc
das
inc
pop
imul
jns
dec
or
imul
dec
in
add
scas
sbb
jns
ljmp
add
mov
adc
pop
popf
decb
pop
repz
ret
xchg
pop
dec
mov
shll
sbb
push
mov
subl
mov
fs
xchg
fisttpl
mov
mov
scas
xchg
test
enter
shl
xchg
test
add
jle
popf
dec
jo
arpl
mov
cmp
mov
adcb
jbe
orl
test
stos
mov
xor
pop
dec
movsl
pop
or
jnp
push
mov
pop
and
lahf
outsl
push
out
call
test
inc
in
and
adc
push
hlt
pusha
out
mov
outsb
out
dec
adc
mov
lods
ljmp
inc
rcrb
add
bound
cmp
adc
cli
fisttpl
fxam
cmc
lret
cmc
mov
lods
in
adc
repnz
jg
push
push
fsubl
push
repnz
push
fbstp
out
jle
inc
pop
mov
sbbl
jns
cs
pop
in
sbb
cmpsb
push
dec
pop
mov
out
jmp
cmp
mov
fstpl
xchg
dec
mov
stos
ds
sti
stos
stc
xchg
jae
mov
cwtl
sbb
mov
test
fcomps
push
mov
dec
adc
cltd
int3
mov
push
mov
ja
mov
jmp
hlt
mov
dec
jmp
shl
shll
fucom
lret
andl
cmp
dec
dec
fisttps
dec
into
call
cmp
add
xor
fxch
in
xchg
orb
dec
xor
and
xchg
xor
jmp
jne
sbb
sahf
inc
aas
int3
lds
inc
sbb
lahf
add
movsb
mov
cmp
push
add
lret
mov
add
mov
stc
or
jmp
jns
xchg
lret
pop
mov
mov
pop
push
sbb
cmp
loop
dec
add
sub
jge
aad
mov
jmp
and
pop
inc
pop
add
bound
pop
pop
sbb
mov
shll
out
sbb
ja
fwait
enter
scas
xchg
lea
inc
mov
fstps
pop
shr
push
adc
ret
fcompl
es
repz
pop
aaa
loopne
fildl
push
inc
mov
jg
mov
out
mov
int
mov
popa
js
jmp
cwtl
lea
or
stos
daa
mov
idivb
pop
inc
gs
inc
pop
lahf
aam
cmpsb
push
push
test
rcrb
fcmovnbe
jne
test
mov
add
dec
lret
xchg
sub
out
scas
leave
sahf
rcll
outsb
adc
int
or
gs
mov
xchg
mov
add
dec
inc
mov
lret
and
mov
inc
push
inc
rcr
mov
cmp
out
push
pushf
mov
sbb
pop
xlat
xchg
in
vpcmpgtd
sbb
sbb
pusha
dec
leave
sbb
scas
popf
push
push
jle
inc
andb
adc
pop
add
jno
fiaddl
lret
mov
jae
sarl
sar
out
cwtl
ja
push
dec
loop
sbb
lret
mov
mov
mov
xchg
pop
add
mov
mov
xchg
ucomiss
mov
ret
mov
pop
jp
aam
popa
loope
sub
mov
ds
pop
cmp
orl
push
cmp
in
push
push
inc
shrb
xchg
mov
push
addr16
mov
inc
mov
jns
cld
out
mov
mov
or
mov
mov
clc
jbe
cmpsl
adcb
popf
sarl
jecxz
movsl
sahf
lock
fadd
mov
dec
jg
imul
jns
daa
inc
data16
dec
icebp
add
pop
data16
repnz
push
jle
addb
sbb
jl
cmp
cmp
jg
loopne
fnstcw
mov
pop
in
outsl
adcl
xor
leave
pop
pavgw
mov
adc
std
fs
dec
lret
add
ja
pusha
push
push
ja
push
notl
pcmpeqb
mov
and
lret
xor
add
andb
push
xchg
fsubl
cwtl
scas
or
fucomp
ss
clc
sbb
fmulp
and
fdivs
sarb
push
cmp
inc
aam
mov
test
ja
in
add
scas
cmp
clc
pop
std
lea
clc
out
call
fadd
mov
rol
mov
out
movsl
ja
sarb
out
pushl
and
cmp
jle
mov
insb
mov
imul
out
data16
mov
rcr
jecxz
jle
add
sub
pop
fildll
pop
or
fldt
xchg
std
mov
mov
shl
xor
mov
mov
aas
outsb
jg
mov
add
cltd
or
pusha
test
lock
push
in
adc
mov
push
punpckhbw
mov
xchg
dec
or
dec
js
push
or
xchg
lcall
inc
je
mov
cmpsl
xchg
xchg
or
test
push
out
adc
and
scas
repnz
sub
adc
in
xor
lret
push
mov
mov
dec
shlb
out
xchg
test
push
fadds
pop
popa
dec
sub
xor
inc
in
xchg
adc
adc
cmp
mov
mov
xlat
shlb
sarl
jle
lea
lret
leave
stos
movl
aaa
movsl
adc
int3
lret
mov
jne
clc
ljmp
add
and
xchg
incb
or
push
addb
aaa
sbb
sbb
cmpsb
xor
icebp
pop
andb
fbstp
imul
lock
or
push
xchg
sbb
stos
arpl
mov
es
loopne
mov
lea
sub
mov
shld
pop
fwait
adc
mov
xchg
or
lahf
xchg
mov
and
cmp
jmp
push
mov
call
rcrl
adc
push
addb
subl
test
repnz
dec
xor
aam
add
pop
pop
scas
mov
fistps
shlb
mov
mov
jl
sbb
pop
pop
dec
sbb
sub
loop
xchg
in
sbb
adc
jo
lods
sbb
push
dec
outsl
and
lods
neg
sbbl
pop
adcl
fs
and
xchg
lcall
xor
ja
stos
jp
dec
out
aas
mov
cwtl
add
ret
imul
xchg
and
mov
lods
sahf
addb
in
push
sahf
xchg
xchg
imul
mov
inc
lahf
loope
mov
xchg
in
mul
mov
xchg
int3
out
imul
aam
sbb
sub
sbb
push
add
lahf
inc
dec
sarl
or
imul
sbb
xor
xor
es
add
cmp
iret
cmp
xor
pusha
jno
mov
add
fmulp
out
and
insl
dec
sbb
xor
jno
movsb
je
sbb
sub
lods
mov
cmc
sbb
loope
leave
jp
jae
pop
push
dec
jmp
lcall
mov
add
insl
aam
rorb
pop
cs
cld
cmpsb
dec
mov
jl
outsb
sub
jecxz
mov
sub
icebp
enter
frstor
cmp
cmpsl
xor
push
cmp
inc
mov
lret
test
push
lock
push
xor
cmc
in
adc
mov
or
stos
les
outsl
mov
mov
and
sti
test
repnz
dec
add
sub
mov
pop
je
sub
add
loop
jne
iret
cmp
pushf
inc
inc
mov
aaa
inc
loopne
fildll
xlat
daa
mov
lahf
or
mov
stos
inc
ror
out
jnp,pn
call
int3
and
push
lgs
dec
ds
jbe
or
adc
in
arpl
jp
or
jne
jbe
push
imul
or
jnp
cmp
cmc
push
cmpsl
jmp
out
cmp
movsl
in
cld
gs
fisubs
inc
ds
outsl
jp
mov
in
int3
in
sub
xchg
lret
leave
sbb
rolb
xorl
and
push
push
inc
rcrb
nop
add
inc
adc
push
cli
adc
and
pop
push
nop
sarl
mov
fmuls
push
out
mov
rorb
leave
icebp
inc
loop
jl
mov
sbbl
cmpsl
add
les
xor
mov
fsts
xor
xchg
or
mov
and
nop
dec
imul
add
add
cmp
aaa
xor
cld
jge
push
cld
and
lods
test
pop
call
jmp
addr16
cmpsb
pop
sbb
push
jmp
rorb
lds
push
lds
cmp
call
jecxz
lcall
dec
jbe
push
push
loop
cmp
mov
mov
scas
push
adc
or
xor
mov
adc
test
mov
add
fdiv
and
mov
jg
mov
mov
jle
int3
sbb
loopne
xchg
dec
add
ja
cli
mov
lods
leave
cwtl
int
aad
std
pop
je
jb
bound
int3
mov
pop
push
int
insl
jns
aas
fsubl
xchg
ljmp
fidivrl
pop
push
mov
int
add
mov
iret
or
mov
mov
stos
out
add
dec
mov
ds
and
add
mov
and
daa
sbb
cmpsb
pusha
mov
ljmp
jp
lods
xor
jecxz
cmp
jp
hlt
ret
fdivp
inc
xchg
int
pop
xor
das
push
gs
dec
je
pop
dec
aaa
mov
loope
inc
clc
mov
and
or
bound
roll
dec
sub
xor
repnz
pop
mov
jle
adc
xchg
dec
and
add
out
lcall
sub
lret
jo
mov
daa
clc
pop
and
ret
xor
lahf
cmp
sahf
vmread
leave
ret
adc
pop
push
in
gs
sbb
dec
cmp
incl
mov
pop
jno
sbb
xchg
mov
mov
stos
outsb
popa
mov
mov
imul
xchg
cmp
hlt
sub
repnz
push
iret
jbe
in
jb
mov
inc
mov
out
or
mov
aaa
xchg
pop
mov
sub
or
mov
test
push
sbb
insb
sysenter
rcll
xlat
outsl
test
fwait
push
mov
or
mov
pushl
test
in
xor
sbb
mov
loop
cs
mov
lods
aaa
or
fnsave
push
push
mov
xor
insl
jmp
mov
and
mov
cmpsl
and
pushf
mov
jmp
mov
sbb
daa
pop
push
ja
inc
sbb
xchg
mov
aam
lock
sbb
insb
mov
push
aas
dec
xchg
mov
xchg
or
sahf
xchg
inc
rcrl
cmpsl
mov
popa
push
jg
inc
inc
fwait
or
adc
xchg
shrb
popf
jge
jno
repz
sub
mov
scas
jae
mov
jle
sbb
push
iret
mov
push
dec
std
inc
pop
insl
es
sbb
dec
xchg
popa
xchg
mov
or
push
stc
pop
outsb
lahf
mov
mov
fwait
jne
out
bound
sub
cmp
popf
inc
or
xchg
gs
pop
sarl
pop
andl
add
adc
test
cld
sub
inc
test
or
adc
and
xchg
adc
mov
outsb
orl
scas
jmp
add
xchg
stc
jge
push
mov
cmpsl
pop
mov
fisubl
xor
mov
cmp
jmp
shll
adc
cmpsl
mull
sarb
dec
jo
pop
xor
sub
cwtl
mov
test
xchg
nop
add
jge
mov
je
xor
pop
mov
int3
imulb
lahf
pop
stos
dec
push
push
imul
in
sbb
aam
addr16
xchg
mov
adcl
xchg
repnz
pusha
jne
push
xor
andb
sbb
push
or
into
pop
push
mov
movsb
push
sbbl
or
ds
ret
cmpsl
pop
pop
insl
loope
cmp
adc
lcall
cmp
loop,pn
vpandn
pop
mov
mov
outsl
jle
lds
jecxz
mov
push
xchg
xchg
cmp
mov
aas
inc
pop
ret
iret
aaa
and
jg
push
and
cwtl
xchg
add
push
stos
stos
dec
push
lock
jbe
inc
stos
add
imul
mov
mov
adc
push
insl
in
add
stos
out
stc
and
dec
ja
xchg
or
xor
shll
xor
xchg
fstpt
push
popf
mov
push
jne
stos
or
add
and
leave
dec
dec
or
call
xchg
adc
or
adc
cli
xor
sti
lds
adc
cmpsb
or
call
sbb
sarl
ror
pushf
outsl
add
cmp
push
and
pop
sub
xchg
and
cs
sarb
je
jne
or
jmp
mov
testl
imul
dec
mov
mov
push
data16
clc
push
sbb
xor
aad
xchg
int
ds
fnstsw
pop
push
lods
fnstsw
sbb
int
adcb
cmp
aaa
xor
jmp
or
cmp
sbb
imul
and
lret
icebp
lods
loope
add
add
lret
jb
inc
inc
fldcw
pop
rorb
imul
or
and
filds
push
pmaxsw
loop
fidivrs
push
scas
out
jp
jne
adc
arpl
adc
int
lods
mov
pop
cmpsb
pop
ds
outsb
xchg
mov
jbe
stc
js
mov
out
mov
outsb
xor
lret
xor
fmuls
adc
inc
mov
test
mov
adc
jae
lahf
cmp
cmp
aas
addr16
jp
lret
repz
pop
fsubrl
stos
pop
leave
xor
in
in
sub
push
js
js
jge
pop
and
jno
pusha
push
pop
imul
loope
ret
inc
inc
iret
adcb
in
jle
inc
mov
stos
mov
fistps
push
das
sbb
sbb
ficomps
addr16
cmp
lret
outsl
pushf
xchg
popa
rol
pushf
repnz
mov
jmp
ret
adc
dec
and
ret
daa
fimuls
push
jmp
bound
cmp
inc
xchg
sbb
push
jl
push
mov
mov
popa
int
xor
mov
jno
cmc
pushl
cmp
and
iret
das
test
lock
mov
mov
add
mov
pop
sub
loop
stc
or
outsb
and
inc
fstps
js
ficompl
push
inc
jb
pop
ret
arpl
push
std
push
mov
out
les
daa
shl
inc
ljmp
js
sub
ficoms
jl
pop
insb
dec
pop
jo
loopne
mov
cli
movsl
push
push
cmp
in
xchg
mov
pop
aaa
cmp
pop
mov
shll
aam
inc
push
cmp
aaa
mov
rorl
jnp
shlb
call
icebp
test
insb
out
mov
daa
sti
mov
sub
jae
cwtl
shrb
jae
add
rcrl
scas
out
pop
ja
arpl
mov
mov
aas
mov
xchg
sti
sbb
hlt
cmpsb
iret
xchg
or
ljmp
dec
xchg
outsl
mov
std
dec
cmp
mov
hlt
push
sbb
int
pusha
cmp
movsl
dec
mov
andb
jo
cmp
jmp
and
mov
pusha
adc
push
stos
inc
sbb
daa
dec
jg
mov
push
lods
sub
cmpsb
les
sbb
cmpsb
cmp
ljmp
push
sbb
in
jae
fwait
sub
std
in
inc
fdivs
mov
cmpsb
xor
or
inc
bound
cs
ljmp
imul
jle
mov
addr16
lea
lods
xchg
mov
scas
rcrb
or
sbb
ror
flds
fldt
jge
sub
imul
pop
imul
test
dec
mov
stos
jle
cmp
bound
push
xor
add
out
xchg
rcll
std
xchg
mov
xchg
lcall
aam
jecxz
pop
outsl
dec
or
jb
in
out
dec
pop
fwait
dec
push
or
repz
loopne
jb
and
sub
lock
mov
lahf
sets
ret
imul
push
and
cmp
out
dec
pop
pop
jl
out
pusha
js
mov
xchg
cld
cmp
icebp
sub
jbe
aam
adc
lock
sub
jns
cwtl
test
js
dec
mov
adc
out
movsl
jmp
cmp
cmp
add
mov
dec
imul
cmpsb
in
fucomp
cli
and
mov
mov
into
adc
popa
leave
lret
lods
pop
mov
pop
mov
mov
popa
mov
imul
js
ja
dec
inc
jo
mov
cltd
gs
push
add
test
sbb
mov
mov
imul
fwait
lods
xchg
fidivrs
punpckhwd
inc
fldcw
repnz
xor
shrl
sub
pop
mov
lea
std
data16
cmp
push
clc
call
dec
das
cmp
lcall
mov
xor
lcall
clc
push
outsl
mov
add
mov
adc
jl
dec
and
xor
sti
jle
adc
sbb
sub
lds
lock
aas
test
lods
shl
movsb
mov
iret
enter
sti
movsb
mov
in
xchg
pop
push
std
fistps
adc
imulb
add
cmp
push
inc
push
mov
aaa
icebp
add
mov
leave
or
pusha
inc
fsts
adc
mov
in
stos
fwait
xchg
push
inc
mov
lahf
sahf
imull
fwait
jb
push
add
mov
or
push
jecxz
dec
test
pop
and
mov
inc
ret
sub
sub
adc
ret
cmp
pop
imulb
xchg
pop
mov
not
jb
or
fcomi
dec
xchg
inc
or
in
sti
xor
out
shrl
sbb
fidivrs
push
daa
rol
inc
cmp
sahf
ret
and
add
mov
in
fbld
adc
int3
push
jp
adc
cmpsl
popf
sbb
xchg
insb
xor
div
inc
movsb
cmp
xor
push
daa
xor
jbe
imul
in
jle
jne
push
inc
push
cltd
scas
addr16
imul
repnz
cltd
int
stos
mov
jo
outsb
fcoml
mov
imul
gs
arpl
shr
jnp
popf
sub
std
in
mov
cmp
fsubrs
mov
stos
add
insl
xchg
pusha
pop
sbb
adc
cmpsl
loop
sbb
mov
ret
pop
roll
pop
pop
xor
xchg
int3
dec
xchg
pop
and
mov
popa
push
das
stos
lret
mov
sbb
pavgb
mov
int
mov
cmp
mov
fdivr
pop
push
mov
push
insl
roll
dec
leave
inc
sbb
int3
clc
push
stos
mov
test
pop
jl
cmpsb
movsl
mov
mov
out
add
push
adc
sbb
iret
in
out
test
out
mov
scas
sub
jp
mov
mov
or
mov
pop
dec
push
shll
aam
and
mov
bound
fbstp
testl
lods
ss
xor
xlat
push
mov
add
push
stos
test
es
and
dec
loopne
adc
inc
loopne
shlb
ret
repz
sbb
lcall
xchg
jno
push
cld
mov
test
mov
test
je
jle
sbb
aad
lcall
adc
mov
dec
repz
push
cmpb
sarl
jo
inc
ret
push
fisubl
shll
sbb
test
in
sub
test
adc
cwtl
adc
lods
push
fadds
int
loopne
cwtl
rcr
xor
dec
xchg
cmp
add
mov
ret
lcall
mov
cmpsl
cwtl
shll
iret
or
mov
or
ret
add
cwtl
and
cmp
jo
rcl
movsl
xor
sahf
loope
mov
or
and
mov
clc
fcomps
inc
push
loop
mov
mov
in
push
cmpsb
xchg
or
push
mov
sub
lods
int
xor
xor
mov
mov
sbb
pop
inc
sub
out
int3
sub
dec
ss
inc
loop
xor
call
cwtl
xchg
mov
hlt
test
in
xchg
sub
fwait
adc
les
pusha
mov
mov
fcmovbe
push
and
inc
inc
cltd
lock
test
mov
inc
jp
mov
cmc
repz
gs
push
sub
mov
negl
dec
cmp
bound
mov
mov
mov
mov
test
lret
xor
test
dec
leave
xchg
clc
frstor
test
push
mov
int3
outsb
lret
pushl
mov
ficoms
ficoml
push
adc
repnz
sbb
fisubrl
dec
cli
adc
mov
arpl
mov
inc
lock
mov
mov
adc
mov
popf
inc
outsl
inc
mov
add
push
pop
and
sbb
push
sub
imul
jbe
pop
into
stc
adc
outsb
ds
fistl
add
fwait
outsb
mov
mov
fwait
sbb
ret
mov
sti
inc
fucomip
dec
ja
in
mov
inc
mov
push
jl
ret
repz
xchg
pop
add
mov
les
push
lea
rorl
leave
out
enter
lret
pushf
jb
or
mov
in
es
test
mov
mov
dec
mov
cmp
lcall
ret
cmp
je
push
loope
sahf
cli
and
dec
sahf
adc
out
or
popa
stos
mov
cmp
push
pop
or
les
into
mov
mov
inc
cmp
and
dec
sbb
jmp
xchg
xor
test
test
fwait
jo
dec
insb
xchg
push
pop
sahf
fmuls
lret
fnstcw
stos
ja
mov
lods
mov
add
push
out
lcall
pushf
out
outsb
cmpsl
ret
out
aas
stos
xor
shr
inc
sbb
jecxz
out
add
movsl
cmp
out
pop
cmp
ljmp
lsl
pop
aaa
xchg
rcr
mov
pop
jp
inc
leave
xchg
push
adc
fidivrs
push
lret
stos
or
rolb
cmp
mov
sarl
mov
or
rorl
xor
fistps
les
jne
inc
mov
mov
in
gs
popa
sahf
shll
fwait
and
jne
mov
enter
ds
lcall
inc
and
hlt
push
into
repz
insl
jle
mov
movsl
add
push
jne
push
aaa
gs
mov
dec
cmp
pop
loope
jae
arpl
pop
pop
int
mov
or
xor
stos
fbstp
adc
repz
xor
mov
shrb
movsb
pop
jno
sarl
js
xchg
and
mov
fidivl
test
pop
mov
or
adc
add
jb
mov
sbbl
scas
fidivrs
aad
outsb
or
call
sbb
bound
cs
es
dec
xor
or
leave
and
fs
inc
inc
cltd
aas
fcomps
push
jns
cmp
xchg
leave
cmp
gs
fdivrp
loope
lea
sahf
mov
std
clc
jb
push
incl
out
jno
fs
aas
pop
inc
iret
testl
sbb
xor
mov
cmp
or
repnz
xor
mov
lock
and
push
add
push
push
scas
push
in
lea
cwtl
xchg
es
push
insb
daa
fwait
jp,pn
push
fdivl
inc
sub
add
inc
loope
push
cmp
mov
push
pop
mov
mov
int
cmovnp
or
cmpl
mov
cmp
dec
push
mov
cs
mov
xchg
in
sub
in
enter
mov
fisubs
ficomps
add
dec
lahf
xchg
loope
and
dec
and
inc
push
xor
test
hlt
pop
inc
xchg
call
pop
xlat
aad
rcll
iret
iret
loop
mov
mov
jno
scas
mov
xchg
fcmovbe
xchg
es
fadd
inc
int
dec
loope
xor
xchg
fistpll
scas
dec
pop
movsb
xchg
mov
adc
inc
rcll
mov
loop
dec
cwtl
and
outsl
push
repz
scas
or
js
les
adc
fwait
dec
sub
mov
jnp
lcall
mov
inc
xor
movsl
sbb
inc
sub
cmp
mov
fabs
lret
xor
loope
loope
pop
and
call
sbb
into
lea
mov
cmpl
mov
xchg
out
jl
push
insl
xor
lret
or
shl
xlat
xchg
or
xor
ret
xchg
pop
test
lcall
and
sahf
ljmp
cmp
xchg
mov
sbbb
sub
lahf
call
or
xor
pop
or
mov
mov
js
dec
or
mov
std
mov
stos
dec
shlb
cmp
add
cmp
outsl
mov
jae
stc
jmp
sar
loope
sub
push
push
sub
popf
push
xor
iret
cmp
aaa
sbb
les
outsb
fucomip
in
adc
xchg
xchg
popf
and
imul
jae
jnp
sbb
pop
sub
ret
or
cmp
push
sbb
and
insb
adc
popa
cmp
push
arpl
mov
aaa
xchg
adc
dec
mov
add
and
dec
xchg
xor
inc
jge
xor
mov
in
pop
sbb
test
sub
mov
push
fists
insb
fdivp
or
test
xor
cmp
xor
outsl
mov
or
pop
sbb
outsl
sub
inc
and
lret
xchg
mov
inc
inc
push
push
mov
mov
add
out
pop
or
add
pop
imul
sbb
pop
add
dec
xor
dec
lods
popf
js
mov
push
xchg
mov
es
xor
lret
pusha
dec
lcall
xor
pushf
cli
jb
mov
xor
pop
repnz
adc
aaa
stos
xorl
orl
lods
pop
cli
cmp
push
rclb
and
stos
test
das
push
sbb
icebp
xor
add
fwait
ret
adc
popf
push
lcall
push
in
inc
cmp
movsl
sub
jge
xchg
popf
adc
sub
mov
jae
push
lcall
xor
jge
orb
cmc
mov
cmp
sbb
mov
insb
sub
insl
push
mov
scas
loopne
ror
or
xchg
rcrl
adc
sbb
sbb
rorl
int3
sbb
fisubl
push
mov
xchg
jns
fldcw
fucom
push
imul
push
nop
out
cmp
dec
sub
pop
sbb
std
push
inc
lock
fstpl
shr
movsb
mov
or
clc
jge
mov
cltd
cs
sbb
repnz
lret
imul
add
fs
jnp
xchg
xor
aad
and
sarb
mov
aad
push
mov
push
pop
mov
add
lea
imul
mov
dec
icebp
and
add
pop
cli
xchg
push
dec
pop
call
stos
insb
pop
and
xchg
and
mov
stos
lea
sub
dec
loop
pop
ficoml
out
pop
int3
lods
jp
enter
push
pop
or
and
jecxz
cmp
cmp
pop
add
and
inc
sahf
icebp
pusha
std
out
cltd
xchg
or
cwtl
data16
jecxz
mov
mov
cs
xor
mov
mov
aaa
mov
sbb
mov
mov
hlt
lea
and
addr16
inc
shll
add
add
dec
test
and
gs
cli
mov
add
shrb
lret
sub
or
dec
dec
mov
push
rorb
jb
scas
imul
inc
adc
mov
mov
daa
lret
pop
orw
push
and
rolb
dec
or
mov
and
push
push
cmc
xchg
movsb
xor
and
movsl
push
or
xlat
xchg
adc
mov
or
add
cmp
lods
jl
cs
mov
mov
pop
iret
add
cmpsb
in
popa
popa
dec
or
dec
dec
rcl
mov
das
fcmovne
xor
xor
adcl
ficoml
loope
fsubrs
and
dec
add
cmp
or
xchg
data16
loope
cltd
in
out
mov
pop
je
fsub
push
in
xchg
in
fisttpll
jg
pop
movsl
es
movsl
pop
rcrl
pusha
adc
lahf
push
mov
vpcmov
je
dec
lods
into
test
pop
and
mov
xchg
dec
adc
adc
sbb
mov
xorb
adc
push
push
jno
xchg
mov
sbb
pop
xorb
cli
lock
and
ljmp
sbbb
xchg
cmp
push
pushf
mov
lcall
sbb
dec
movsl
aad
nop
adc
arpl
push
fadds
lds
lock
mov
or
inc
leave
enter
sub
enter
inc
or
jb
mov
push
dec
iret
fcomi
xor
daa
pop
adcb
dec
das
fchs
add
hlt
pop
bound
push
testl
mov
mov
aad
jl
dec
mov
push
jle
adcb
mov
jb
sub
fsubs
imul
scas
xlat
int
rolb
loopne
call
sti
xor
adc
inc
call
mov
ret
xlat
popa
movsl
add
sbb
mov
sbbb
fsubl
ljmp
jmp
cwtl
jo
and
pop
push
scas
mov
cmp
xchg
cmp
xchg
int
sub
sub
lods
cmp
cmpsb
cmp
lods
jecxz
xchg
push
dec
adc
xchg
shlb
add
rclb
test
inc
test
movsb
popa
test
cmp
mov
call
repnz
xchg
shl
pop
ja
mov
mov
mov
xchg
adc
jae
dec
inc
addr16
data16
lahf
and
test
xchg
xor
xchg
movb
loopne
xchg
mov
pop
push
fstpt
cmpsl
imul
jmp
mov
rcrb
pop
jns
rorl
push
repz
popa
xor
fidivrs
adc
pop
mov
je,pn
fld1
add
jp
mov
push
mov
int3
xchg
jp
stc
cwtl
cmp
dec
cmp
xor
adc
cwtl
loop
subl
movsb
or
movsb
loop
xchg
mov
mov
jno
shrl
aam
cmc
adc
ljmp
or
test
push
xlat
pop
sub
mov
clc
jo
ret
push
shll
inc
adc
incb
pop
outsl
mov
out
cli
add
fwait
jmp
lea
jge
clc
pop
pop
xlat
int
mov
pop
cs
lock
les
xor
lock
enter
aam
iret
dec
inc
flds
adc
and
inc
fbld
adc
xchg
out
leave
cld
pop
mov
insb
test
push
icebp
insb
jnp
xchg
ret
and
sbb
or
call
popf
arpl
jb
mov
aad
xor
pusha
adc
push
or
lret
pop
pop
pop
inc
adc
rcll
sbb
adcl
mov
push
adc
dec
movzwl
icebp
dec
add
mov
lret
loope
push
loope
psubb
mov
data16
and
rolb
shl
insb
push
stos
pop
mov
mov
add
dec
adc
cli
gs
xor
jmp
add
or
xchg
inc
aad
hlt
mov
in
mov
dec
mov
xchg
fsubp
xchg
popa
or
adc
hlt
test
mov
sub
cwtl
adc
shl
and
jno
cmpsb
insb
scas
xor
or
imul
lahf
push
imul
dec
sbb
shl
out
cmpl
xchg
ja
adc
xor
mov
mov
sbb
jg
mov
mov
mov
cwtl
out
fdivl
and
inc
push
fnsave
sbb
push
mov
aad
das
rorb
shl
enter
inc
insb
mov
mov
jnp
xor
xor
mov
jae
aaa
mov
js
daa
xchg
push
andl
cmc
push
fidivl
xor
xor
cltd
lock
or
sub
mov
aaa
add
cmp
push
pushf
push
testb
popf
xchg
sbb
movsl
and
test
testb
in
cmp
sub
lods
arpl
dec
mov
or
repnz
lret
jbe
adc
cmp
sub
mov
in
imul
aam
aad
xchg
fcmovne
xchg
mov
je
adc
fnstcw
mov
pop
push
movntq
out
mov
andb
jl
jo
push
aas
cli
cmp
pushf
addr16
mov
inc
xchg
push
sbb
adc
lret
fs
inc
arpl
cmp
jmp
sahf
insl
shlb
mov
pop
mov
test
jnp
js
mov
imull
imul
bound
xchg
out
sub
test
xlat
imul
xor
and
and
fstpt
cwtl
lods
aam
fs
dec
sub
inc
push
lcall
sbb
xor
rol
nop
mov
fistpl
gs
pop
adc
das
inc
shlb
sarb
add
loopne
adcb
nop
movsb
push
nop
mov
inc
cmpsb
xor
imul
scas
shll
mov
jg
adc
test
mov
sti
cmp
out
mov
dec
repz
xor
mov
xchg
out
mov
es
mov
loop
push
movsl
ret
push
dec
sbb
lret
fldenv
mov
adc
loop
xchg
jno
out
addl
adc
movsl
mov
mull
adc
clc
cmc
and
fs
push
fwait
mov
push
xor
xor
nop
add
push
cli
movsb
loop
ret
mov
mov
dec
insl
add
mov
cmp
jmp
inc
add
fwait
mov
lock
sbb
clc
or
ss
hlt
ret
in
mov
or
sbb
scas
or
push
movsl
mov
cmp
push
cmp
outsb
lods
inc
jmp
hlt
out
xchg
dec
stos
fdivl
pop
inc
jnp
push
sarl
or
xchg
pop
scas
cli
lcall
call
pop
mov
jle
aam
lds
lods
inc
test
mov
push
or
jae
out
sarb
xor
test
sub
sub
movsb
enter
xlat
push
ss
sti
mov
fistl
or
xor
and
or
push
stos
repnz
mov
mov
cmpsl
ss
jl
push
int
jne
outsl
fildl
aaa
inc
jg
xor
push
or
fidivrl
ja
adcl
mov
add
push
xchg
popa
dec
rorl
pop
push
inc
stc
dec
sub
fstl
jmp
fildl
pop
inc
adcb
in
mov
addl
push
or
insb
mov
addl
stos
mov
test
xor
aas
popf
push
jle
lea
jnp
shrl
cli
cld
jb
cmc
jp
enter
lahf
xchg
xor
je
arpl
lds
pushf
mov
inc
dec
movsb
xor
sub
jae
sub
and
pop
gs
sahf
jne
adc
cs
fs
dec
sub
mov
jp
subl
mov
xor
ret
mov
and
mov
sub
push
adcb
mov
xor
push
test
xor
hlt
inc
orl
cmpsl
fstsw
loope
mov
add
repnz
xchg
inc
jo
adc
in
shl
xchg
rorl
stos
inc
sub
dec
in
mov
test
add
int3
das
push
call
movsl
add
inc
sub
insl
mov
sbb
jne
mov
add
or
repz
adc
jne
xchg
loopne
dec
cmpsb
pop
or
adc
sahf
cmpb
js
xor
jno
push
cmpsl
loopne
or
sahf
lods
int
jmp
ss
sti
xchg
mov
dec
and
push
add
sbb
mov
and
ljmp
fidivrs
push
test
push
add
or
inc
cmp
enter
cld
imul
cmp
jns
lock
adc
cmp
mov
pop
sub
jnp
lods
push
inc
mov
and
and
out
stc
jge
and
lret
aas
jo
stc
xchg
sbb
fs
rclb
aaa
sub
xor
xor
inc
or
testl
repz
incb
sub
xlat
insb
iret
test
rcll
xchg
pop
add
call
insb
movsl
popl
mov
jae
mov
mov
jae
xchg
fucomip
neg
int
and
rorl
sub
pop
mov
jmp
vmwrite
sahf
ja
rolb
sbb
xchg
orb
inc
pop
out
scas
lahf
mov
bound
dec
gs
mov
addr16
loop
inc
mov
inc
sarb
ljmp
add
inc
outsl
imul
loop
insb
mov
xor
or
cmpsb
in
int
out
and
mov
loopne
imulb
jmp
push
lds
mov
cmp
ja
and
test
cmp
sub
cmpsl
mov
xor
add
mov
ds
xchg
dec
pop
int3
in
mov
enter
push
xchg
ret
xchg
dec
inc
stos
jmp
aaa
push
mov
xchg
push
push
pop
xchg
push
ret
xor
inc
inc
orl
and
mov
fmuls
jg
lret
cmpb
sub
test
sub
nop
outsl
jg
ud0
inc
hlt
clc
into
pop
jne
adc
xor
ss
or
popa
out
mov
mov
lret
push
inc
int3
adc
dec
lods
ss
or
jp
inc
test
inc
cmpsl
xor
cmp
ja
nop
test
xor
xor
cmp
sbb
dec
xchg
push
rcl
cmp
mov
mov
sub
sub
out
dec
mov
xor
jno
cmp
push
jmp
ret
xchg
xchg
mov
pop
adc
jl
fistpll
out
rorb
movsb
xor
fwait
scas
mov
lret
ret
ret
add
fildll
cld
in
inc
or
rclb
inc
jg
sbb
sbb
loopne
and
in
xlat
cmp
and
cmp
sbb
cmpsb
insl
stos
out
adc
jle
push
cmp
incl
test
ds
pushf
xchg
jp
push
ficomps
mov
pop
out
outsb
jp
and
xchg
xor
int3
mov
pop
mov
mov
mov
lahf
xorb
mov
and
sub
mov
push
jg
xchg
push
cmp
pop
addr16
pop
mov
or
loopne
repnz
inc
cmp
sbb
mul
and
xor
inc
ret
jp
call
ss
mov
lcall
in
add
sbb
sti
out
lret
mov
jo
inc
dec
aam
mov
pop
or
cmp
cmp
jle
fmull
addl
aad
xlat
subl
mov
mov
cs
mov
test
xchg
inc
fucomp
jns
lock
or
ljmp
sbb
xchg
lcall
mov
popa
inc
int
and
cmc
mov
mov
push
mov
and
push
dec
cld
jns
in
cmp
mov
mov
jo
jae
adc
xor
cmp
cltd
jb
les
sbb
lock
out
jo
cmpsb
push
in
pop
enter
cmpxchg
popf
les
dec
ja
cwtl
aas
push
not
fsubrs
int
shlb
inc
inc
push
adc
dec
movsb
in
leave
sbb
dec
push
scas
xor
adc
into
add
scas
addl
or
xchg
mov
mov
inc
dec
lods
pop
ss
test
in
sub
adc
lcall
cmp
fnstcw
mov
mov
out
fdivrs
ret
push
lret
stos
and
inc
pop
daa
dec
jb
repz
js
dec
stos
stos
dec
sahf
movsb
lods
arpl
lea
cmp
daa
jnp
repnz
aas
pop
rcr
mov
std
enter
push
sbb
std
ds
cmp
aad
inc
in
dec
aad
pop
fisttpl
rolb
and
dec
jecxz
inc
dec
mov
das
push
ret
push
mov
xlat
sti
cmpl
into
mov
sbb
idivb
mov
adc
xchg
stos
lea
mov
int
mov
repz
jl
inc
sub
or
dec
repz
sub
outsb
dec
cmp
or
ret
mov
test
pushf
jmp
xchg
cli
out
imul
xor
cld
xchg
add
inc
cmp
shl
cltd
test
js
and
inc
testl
jle
xchg
sahf
jmp
adc
jg
mov
mov
inc
loop
outsl
ss
aaa
frstor
xchg
int
iret
and
xchg
jae
cmp
sbb
add
xor
mov
cmp
fdivrs
lret
xlat
and
pop
das
loop
jg
rep
sbb
sub
dec
or
cmp
inc
sbb
fcmovnbe
mov
mov
lcall
mov
lock
in
in
push
pusha
mov
and
ja
jle
fmull
jp
xor
jo
xchg
push
enter
lds
xchg
jp
lea
out
shrl
fs
mov
pop
sbb
popf
pop
sar
sbb
dec
xchg
fdivr
pop
and
loope
or
fsubrl
mov
inc
xor
pop
adc
lods
xor
cmp
sti
push
adc
js
xchg
test
mov
les
bound
nop
sub
sub
insl
cmp
dec
push
mov
fwait
popa
movsb
push
cmpl
ljmp
fwait
dec
mov
movsb
mov
push
sub
sbb
pushf
fnstenv
fs
loope
or
inc
and
jmp
mov
int3
push
xchg
dec
fldenv
cs
or
arpl
into
mov
inc
and
pop
cmp
loopne
xor
arpl
sti
in
add
fisttpl
pop
adc
dec
or
push
xchg
aaa
hlt
jge
pop
cmc
jle
inc
pop
ljmp
nop
pop
scas
inc
orl
mov
mov
add
or
imul
mov
jae
pop
xor
jp
call
mov
sub
out
add
sub
stos
lret
mov
mov
out
cmp
daa
ret
inc
jns
iret
pop
std
or
mov
pop
mov
dec
pop
inc
cmc
mov
js
fdivl
lret
mov
sub
xor
dec
inc
sub
push
mov
mov
arpl
lods
xchg
mov
or
outsl
dec
insl
or
jne
lods
fistps
xchg
push
xor
or
xlat
sub
call
testb
jo
pop
pop
jno
ret
push
imul
lcall
inc
or
jmp
pusha
sub
sub
std
sti
shl
in
scas
dec
jns
dec
dec
jg
fistl
sbb
or
mov
or
mov
pop
sbb
mov
dec
push
dec
sti
dec
mov
push
jno
ficoms
cli
jl
cmpsl
test
fimull
jmp
in
lcall
ss
js
jne
fisttpll
xchg
ret
test
mov
cld
inc
sub
mov
aas
shrl
movsl
mov
xchg
call
stc
jp
dec
inc
jb
or
inc
das
jbe
mov
je
cmpsb
pop
clc
cmp
xor
mov
filds
jge
jne
cmpsb
fistpl
divl
jmp
and
mov
jns
cmc
and
insb
mov
mov
inc
ficoml
mov
adc
int
lea
jmp
sub
pop
xlat
fsub
mov
test
iret
in
jmp
lods
sub
addb
inc
xor
add
popa
ja
aad
adc
leave
pop
cmp
in
mov
insb
imul
movq
pop
rclb
cmp
lock
push
add
adc
addr16
int
xchg
or
xor
push
hlt
int
adc
add
xchg
sub
loop
pop
fnsave
sub
cmp
pop
xor
loope
mov
test
sbb
fwait
jp
mov
fsubp
leave
aad
bound
loopne
jae
add
sbb
mov
test
pushf
pop
call
in
mov
popa
ja
xlat
loope
jnp
mov
sub
inc
stos
loop
dec
cwtl
incb
mov
loop
xor
or
or
ror
mov
stos
into
adc
or
cmp
lret
sbb
dec
mov
addr16
xchg
jns
aad
int
sti
sti
cmp
mov
xchg
icebp
pop
iret
movsl
mov
test
int
jae
inc
addr16
or
inc
cmc
js
dec
mov
in
cmpsb
push
lods
lods
paddsb
or
sbb
push
xchg
jnp
scas
push
ror
gs
xchg
sbbl
xchg
add
add
fisubs
cwtl
push
loopne
inc
stc
cmp
rcl
add
xchg
mov
mov
lods
jnp
adc
add
pop
mov
dec
push
imul
jno
subb
out
cmp
xor
push
dec
test
add
pusha
ljmp
cli
jbe
add
test
xchg
fldz
sbb
adc
repnz
cmpb
hlt
inc
addr16
push
icebp
popa
mov
or
je
scas
pop
pop
mov
pop
and
jo
lcall
fistpl
mov
imul
addb
fidivs
lahf
in
xchg
mov
push
dec
das
test
jns
pusha
sbb
mov
inc
sbb
call
mov
and
adc
and
or
push
sti
jae
out
jbe
test
aam
hlt
shrl
lds
gs
iret
pop
sbb
aaa
cltd
aas
fbld
cmp
into
sbb
cmp
outsb
xchg
mov
add
push
mov
fldl
jno
ja
dec
in
int3
jmp
insl
mov
ret
cmp
and
aaa
pop
sub
xorb
lahf
push
adc
inc
jecxz
test
mov
mov
fcmovnbe
sub
arpl
xchg
cwtl
push
and
jmp
popf
dec
ja
movsl
iret
mov
adc
mov
cmp
cmc
dec
insl
pop
fiaddl
jg
and
int3
or
rol
xor
clc
or
xor
lock
in
ret
sbb
test
jg
adc
fimuls
sbb
xchg
inc
push
or
outsl
fs
test
lcall
jp
test
cbtw
mov
mov
loop
mov
cltd
fbstp
cmp
pop
jg
lret
or
sub
xchg
out
sti
and
fisttps
movsb
or
outsb
lahf
inc
push
iret
popa
shll
out
xchg
mov
and
pop
gs
fmuls
gs
mov
lods
add
pop
mov
imul
add
pop
sub
jae
out
or
fs
inc
jle
inc
xor
or
jno
xor
iret
bound
negb
jmp
mov
sub
test
adc
fs
and
sbb
jno
ljmp
xchg
sahf
mov
jbe
imul
xor
popa
push
ja
mov
pop
xorl
jb
data16
adc
pop
fsubrl
or
jl
dec
jnp
addl
jl
mov
loop
aad
push
lcall
sub
xchg
or
push
mov
pop
into
aas
mov
dec
or
aas
je
shr
ljmp
les
divb
pop
lahf
inc
fxch
mov
push
test
push
cmp
or
out
xor
xor
fcoms
pop
jne
addr16
inc
push
lods
inc
mov
in
repnz
pusha
jbe
jle
add
jp
sti
jbe
mov
lret
subl
mov
daa
xchg
jp
or
mov
lret
mov
and
xor
and
push
jl
andl
cli
mov
xor
in
inc
add
jbe
adc
fisttps
test
mov
inc
sub
jecxz
ds
das
add
int
xchg
xor
insl
cmp
sbb
mov
lods
mov
mov
jg
push
dec
xor
add
aam
rcl
test
pop
push
sbb
daa
cmp
mov
test
xlat
push
add
stos
xchg
add
sahf
push
lods
dec
pop
push
jns
ja
idivl
mov
mov
es
dec
mov
mov
sub
imul
jbe
sbb
leave
das
sti
pop
sub
sub
aaa
loop
pop
or
repz
decl
sti
outsb
sbb
cmpsl
std
xor
sub
ja
inc
mov
push
mov
pop
lcall
jecxz
iret
int
cmp
pop
pop
test
out
adc
ficoml
hlt
and
fnstenv
inc
mov
rol
push
repnz
std
jne
rcll
popf
adc
pop
test
push
in
test
or
mov
icebp
sub
idivl
aad
lods
dec
shll
jl
mov
push
inc
inc
cmp
mov
mov
lret
or
and
imul
stos
sbb
mov
in
out
and
pop
das
out
add
mov
jmp
outsl
cmp
mov
cmp
in
xor
stos
out
into
jle
jno
sti
xor
push
in
cmp
lods
fstps
out
cli
inc
arpl
sub
dec
pop
lock
insl
mov
cli
fidivs
loop
enter
scas
int3
mov
mov
mov
or
xor
and
sub
stos
sbb
mov
sub
pop
pop
cwtl
pop
push
fdivl
push
mov
push
mov
daa
jo
and
mov
dec
jae
add
loop
loop
stos
and
movsb
clc
in
rorb
inc
push
je
xor
lods
add
xor
sbb
bound
sub
sub
fwait
outsb
sub
in
fldenv
mov
inc
and
cmp
aaa
cmp
and
lea
in
pop
ret
xor
lcall
or
pop
mov
test
adc
jmp
shr
dec
and
pop
xlat
cmp
jb
ljmp
stc
out
add
mov
pop
into
f2xm1
inc
sbb
inc
lods
adc
fnstsw
repz
scas
cmpsl
shll
pop
mov
lods
cmp
imul
int3
or
xchg
inc
rolb
cmp
mov
pusha
outsl
int3
movsl
cmp
xchg
aas
sbb
mov
sbb
int
pushf
lock
mov
stos
sar
mov
sbbb
push
sbb
and
mov
imul
int
sub
mov
push
out
daa
push
in
mull
jl
ss
mov
push
pop
dec
push
in
ss
mov
insl
mov
scas
iret
data16
gs
movsb
jae
xor
or
pop
mov
lcall
push
add
loope
test
inc
lret
mov
adc
in
pop
and
mov
sbb
sub
sbb
and
jne
scas
in
outsl
mov
out
pop
mov
aad
les
int3
cmp
sti
aad
mov
ret
pop
xchg
xchg
test
inc
fcomps
les
in
pop
mov
jo
mov
bound
fwait
hlt
push
dec
xorb
mov
scas
inc
mov
lods
out
xlat
fcompl
stos
outsb
int3
gs
cmp
jnp
pop
cwtl
pop
outsb
shr
int3
movsl
lods
js
popa
xor
xchg
cmc
in
pushf
inc
aad
add
adc
andl
test
pop
repnz
daa
xchg
js
fsqrt
push
lock
data16
ds
enter
lods
mov
icebp
or
jecxz
fildll
lock
push
cmp
pop
xchg
lret
adc
adc
push
inc
push
mov
je
pop
fistpl
mov
js
sub
jno
hlt
push
adc
jl
sub
dec
cwtl
ljmp
popf
cmp
jle
mov
loopne
cmpsl
push
mov
addr16
insb
jle
int3
lcall
dec
sub
into
test
sub
mov
and
mov
pusha
mov
cmpsb
movsb
call
sar
cmc
outsb
inc
ret
xor
mov
add
jg
and
or
loopne
arpl
dec
push
jbe
or
pop
and
lahf
push
jmp
xchg
jmp
negb
daa
dec
popf
ja
xor
sub
jbe
mov
outsl
sbb
adc
into
daa
mov
popa
mov
and
fsubrl
gs
leave
push
or
inc
adc
sbb
cmp
jbe
lahf
cwtl
sti
out
adc
xor
xchg
movb
addl
movsb
xchg
in
imul
mov
xor
lods
mov
insb
xor
loop
out
cmp
pop
call
push
loop
inc
pop
iret
or
pop
mov
adc
fmull
pop
xor
dec
push
jbe
lea
sbb
sti
imul
les
mov
fcoml
cmpsl
test
mov
outsb
scas
loop
addr16
jle
leave
icebp
orb
mov
sub
pushf
dec
fdivrp
ljmp
clc
mov
neg
mov
mov
xchg
mov
or
sub
fnstcw
sbb
loope
lods
imul
outsb
jb
lret
push
or
cmpsb
xorb
cli
shlb
or
mov
mov
push
xor
sub
and
mov
out
xchg
scas
pop
loope
movsl
repz
push
dec
into
push
mov
nop
add
jb
mov
sbb
rorl
jne
shl
add
and
push
jne
xchg
inc
cwtl
mov
out
loopne
pop
lods
adc
sub
push
iret
mov
in
call
fildl
pusha
pop
sarb
push
nop
jno
fstpl
jns
cwtl
xchg
es
mov
push
fdiv
loopne
mov
xchg
jb
ds
pushf
pop
std
mov
test
insl
sbb
sub
xchg
aam
pop
loope
lea
mov
inc
nopl
sub
inc
mov
jne
mov
outsl
sahf
aas
in
inc
imul
xor
lcall
inc
mov
sbb
or
iret
adc
push
xlat
cmp
or
dec
mov
sbb
pop
popa
ds
push
lcall
shll
cmovne
mov
add
lret
stos
cmp
pop
fs
push
mov
sbb
jbe
push
and
add
ljmp
dec
xor
orb
mov
movsb
or
cwtl
sbb
cltd
mov
mov
sti
jl
mov
aam
pushf
sbb
and
mov
out
loopne
rcr
xchg
mov
and
mov
jb
lds
ret
out
popf
xor
loop
mov
mov
sub
mov
xchg
xchg
fidivl
loopne
stc
pushf
int
push
pop
nop
cmp
loope
ss
jg
in
imulb
popa
adc
call
mov
ret
aaa
rcr
or
jnp
mov
movsl
add
mov
xor
mov
mov
jns
je
pop
cld
jb
adc
fiadds
push
wrmsr
ljmp
ror
sahf
jbe
test
cli
clc
in
mov
mov
mov
sti
test
mov
pushf
repnz
pop
test
inc
shlb
mov
mov
xchg
xchg
xor
outsl
push
dec
mov
loopne
pusha
add
mov
mov
dec
mov
fsub
in
sub
out
and
mov
add
scas
addl
adc
and
fcmovnbe
loopw
inc
insl
test
jo
xor
hlt
aaa
cld
mov
xchg
sbb
xchg
sub
arpl
adc
shlb
aas
data16
cmp
sti
out
dec
loopne
mov
mov
shl
in
hlt
add
lahf
ror
push
adc
stos
aaa
ss
loope
rorl
mov
into
cli
lret
xor
mov
addb
loopne
or
jle
rep
sub
jbe
out
dec
repz
xor
stos
mov
jbe
add
sahf
hlt
loopne
hlt
aas
pop
push
enter
dec
cmp
dec
lahf
mov
into
int3
mov
rorl
push
pop
clc
data16
into
pop
clc
testl
mov
xor
sub
sbb
imul
adc
les
loope
mov
xor
pusha
das
leave
out
push
mov
cmpsb
dec
insl
movsl
cmp
test
fisubrl
xlat
mov
in
ja
ficomps
pop
leave
lods
xor
push
xlat
adc
imul
jecxz
mov
clc
and
pop
and
int
sbb
cmp
jg
mov
out
adc
cmc
jle
sub
rol
aaa
in
pop
mov
test
jb
cwtl
cmpsb
push
imul
stos
sbb
adc
push
aaa
adc
pop
pop
add
cmpsl
loopne
divl
ficoml
repz
fnstenv
dec
push
mov
arpl
cmp
adc
sub
imul
mov
push
mov
jg
xor
inc
mov
jb
mov
dec
pop
inc
int
outsb
cmpsb
jecxz
test
cmpsl
dec
xor
lcall
pop
add
imul
pop
push
or
movl
imul
int3
repnz
or
repz
mov
scas
mov
add
mov
sbb
test
nop
and
cld
mov
nop
inc
sub
xchg
hlt
adc
push
xor
aam
push
inc
xor
xchg
mov
adc
aaa
lret
dec
jecxz
pop
dec
jle
add
inc
pop
cmp
cmpsl
inc
xchg
mov
mov
push
test
push
sahf
aad
imul
xchg
fwait
pop
cwtl
xchg
cmc
jecxz
ljmp
dec
scas
adc
jns
ret
and
je
pop
inc
adc
push
addr16
push
and
imul
mov
mov
cmp
pop
xchg
cli
imul
and
jmp
add
out
xchg
or
and
adc
dec
xor
mov
test
sbb
jb
loopne
sti
cli
fisubrs
xchg
jbe
adc
pop
into
les
mov
gs
shrb
int3
add
xor
aad
mov
or
scas
inc
add
jbe
divl
leave
rsqrtps
rcll
dec
push
jae
inc
jmp
mov
pop
xchg
pop
fs
push
add
rcll
sbb
lret
cwtl
add
lock
and
loop
sub
cmpsb
lret
pop
icebp
jnp
dec
addr16
test
add
scas
jnp
arpl
mov
insb
push
in
icebp
mov
cmpsb
jg
xadd
shll
pop
dec
outsl
jge
sub
adc
pop
xor
shrb
lahf
or
incb
sbb
imul
inc
inc
mov
sub
inc
test
out
pop
add
jb
rcrb
xchg
std
xchg
test
sbb
and
fnstenv
or
cmp
pusha
jns
lock
fisttps
mov
jns
hlt
rolb
cmp
mov
mov
jno
clc
mov
inc
cltd
dec
cmpsb
pop
jae
add
adc
sub
push
mov
dec
inc
push
adc
cmp
cmp
push
pop
cwtl
inc
add
cmp
add
ds
inc
and
sti
add
lahf
sar
int
cwtl
xchg
adc
inc
xchg
shrl
ljmp
dec
into
nop
sub
adc
pop
call
ret
out
push
xchg
daa
call
push
dec
mov
rolb
repnz
inc
mov
out
xchg
adcb
add
nop
xor
in
fsubrs
out
mov
add
pop
or
fidivs
in
adc
lret
dec
lret
popa
scas
cwtl
notl
jnp
inc
insb
arpl
mov
out
inc
jne
hlt
mov
into
enter
sbb
sbb
lret
mov
stc
sub
adc
mov
clc
addl
jmp
sbb
fnstcw
inc
test
mov
push
imul
or
ja
and
mov
out
mov
pop
repz
mov
adc
ja
es
dec
pop
std
dec
xor
lahf
call
inc
imul
test
pop
mov
cmp
rcl
cmc
in
movsb
push
std
cmp
mov
inc
mov
in
mov
cld
cmpsb
cld
mov
shll
pop
or
lahf
arpl
loop
lret
and
pop
jbe
mov
les
push
movsl
lahf
dec
movsl
or
hlt
out
mov
sub
lods
icebp
jns
clc
inc
sub
ret
xchg
mov
js
enter
push
xlat
enter
mov
out
fwait
xchg
mov
test
mov
sub
cwtl
mov
sahf
in
push
and
add
fimuls
int3
icebp
iret
clc
popa
jg
cmp
push
mov
xchg
scas
orl
lods
inc
loope
cltd
lods
adc
pop
xchg
int3
dec
cmc
mov
push
push
inc
pop
pop
ret
aam
sub
daa
push
aam
jg
pop
xor
call
xor
test
adc
xorb
rclb
lds
push
fcomps
vmovntps
ret
idivb
fdivrp
rolb
mov
fs
bound
ljmp
push
mov
push
jbe
mov
jg
into
dec
adc
shlb
jnp
sbb
outsb
jbe
mov
adc
jae
pusha
push
and
leave
xchg
imul
aam
xor
test
jmp
out
clc
push
stc
sbb
jg
lcall
push
lock
test
dec
add
pop
ret
sbb
dec
cmc
mov
loopne
fbld
cltd
cmp
movsl
cmpsb
cmpb
add
xchg
cmp
cmp
mov
data16
fadds
not
xchg
xlat
stc
mov
cmpsl
dec
cmc
push
push
adc
dec
xor
scas
adc
js
mov
jnp
mov
push
mov
sti
mov
jbe
xor
sbb
adc
cmp
clc
adc
xchg
lods
repz
pusha
sti
fwait
pop
jmp
call
out
add
sbb
dec
inc
jp
jo
sti
data16
and
push
xchg
fdivs
movsb
jg
jp
insb
insb
mov
cmp
fisubrs
lods
push
imul
int3
movb
push
inc
or
movsl
jno
iret
imul
jmp
adc
push
mov
xchg
je
or
ss
popa
out
push
cmpsl
repnz
jg
and
jecxz
jnp
aas
jb
aas
cmp
and
mov
stos
add
lret
subb
xor
and
es
lcall
dec
in
icebp
mov
ret
pop
jle
sbb
mov
rcrb
popf
mov
add
pop
jo
je
dec
dec
js
sub
xchg
fisubs
mov
sbb
aad
ret
out
jmp
es
jp
jns
das
push
jle
test
or
cmpb
imulb
mov
cmpb
in
pusha
mov
add
insl
cmp
xor
adc
pop
stos
addr16
push
push
dec
lds
mov
mov
dec
mov
push
and
ljmp
cli
lahf
out
xchg
bound
mov
out
cwtl
dec
jnp
in
dec
lret
add
jge
sub
pop
arpl
fisttpl
jbe
fs
adc
test
mov
icebp
outsb
pop
pop
pop
cmp
adc
js
fdivs
loopne
insl
xlat
popa
mov
and
mov
sub
push
dec
push
sub
dec
fidivl
mov
and
jno
das
es
and
cld
pop
test
test
xchg
mov
filds
mov
sbb
cmp
inc
mov
mov
xchg
pop
or
add
mov
xor
ret
mov
roll
pop
sti
popa
sti
jecxz
aad
push
dec
push
sub
outsb
stc
and
shll
pop
mov
inc
rorl
clc
sbbl
mov
pop
outsb
scas
lea
insb
sub
sarl
das
icebp
jl
imul
inc
mov
repz
shlb
xor
filds
lret
clc
add
clc
jae
pusha
out
movsbl
fidivl
xchg
fstps
and
out
movb
mov
pop
out
pop
mov
ret
cmp
xor
loop
mov
pop
scas
xor
leave
fisubrs
add
add
xchg
mov
jno
notb
add
jmp
and
inc
jae
add
mov
mov
pop
arpl
outsl
arpl
mov
cltd
jae
adc
lcall
sub
mov
ficoms
mov
add
adc
lds
xlat
inc
or
lahf
jb
aam
fnstcw
imul
push
mov
out
mov
sbb
fdivrl
lock
jae
xor
int
xor
sub
jecxz
pusha
int3
je
mov
test
jnp
pop
pop
pop
xlat
pop
sbb
dec
jle
inc
lock
push
pop
push
fnstenv
movsl
lods
xchg
jno
insb
sub
and
and
rcr
pop
and
xlat
in
cs
fmull
das
je
mov
aam
enter
neg
inc
test
pop
xor
filds
shlb
sbb
mov
jae
scas
repz
mov
mov
jg
adc
mov
mov
lcall
ja
shrb
push
mov
pop
mov
sub
dec
jne
data16
mov
adc
fistpll
jne
insl
imul
pop
fldl
xor
lret
jmp
mov
push
outsb
adc
std
cmp
out
cmp
cmp
cwtl
orb
dec
dec
sbb
vpunpckhqdq
aas
je
out
mov
pop
stc
add
mov
xchg
add
movsb
lcall
mov
xor
mov
push
sub
mov
rcrl
lret
push
insl
jecxz
shrb
mov
in
popa
pushf
add
mov
int3
mov
loop
jo
lcall
push
aas
mov
add
lds
adc
call
xchg
dec
xorb
mov
test
mov
or
mov
sti
xor
int3
dec
sahf
lea
dec
sarb
inc
mov
imul
jge
cld
fld
push
dec
mov
sub
push
bound
sti
mov
out
cmc
xchg
push
gs
je
sbb
sub
roll
mov
mov
cmp
in
jl
xchg
js
lahf
repz
or
mov
or
pop
dec
mov
add
push
loopne
repz
insb
into
push
cmpsl
in
pop
pop
or
adc
sbb
jl
les
iret
rol
clc
sahf
xchg
lock
sbb
fstpt
push
mov
sub
bnd
jae
jmp
shl
pop
fcmovnb
fisubl
lea
mov
push
test
dec
lret
push
mov
jb
lods
das
leave
push
fdivrs
inc
inc
jle
imul
mov
ja
mov
mov
xchg
pop
in
mov
int
mov
push
add
mov
mov
cmp
and
mov
pop
xchg
pop
inc
test
shl
in
mov
popa
scas
push
scas
push
mov
pop
push
sub
inc
dec
fistpl
cmp
push
sub
pop
out
pop
mov
stos
push
xlat
pusha
xchg
jae
add
xchg
sahf
mov
cmc
divb
aad
lea
ja
lods
inc
fwait
add
push
jnp
dec
test
rorb
xor
mov
lcall
lods
in
fs
cld
fnstsw
loop
mov
xchg
mov
fmuls
sub
pop
mov
imul
ret
je
jae
cltd
adc
jnp
dec
jb
jmp
daa
jno
push
pop
jns
xor
mov
cmp
in
rclb
ljmp
add
outsl
pop
inc
mov
pop
mulb
fimuls
pop
mov
les
xor
nop
fiadds
mov
push
xchg
outsb
movsl
outsl
mov
std
js
ss
jp
push
popf
insl
loopne
pop
add
je
rclb
test
fs
les
add
jne
sbbb
xor
or
test
fwait
jmp
sarb
jmp
sti
or
cwtl
aam
gs
push
xlat
aaa
xor
call
xchg
sbb
xor
leave
and
arpl
sbb
insl
mov
inc
shl
dec
push
mov
sub
and
mov
push
pop
test
xchg
push
lods
adc
cmp
mov
fstl
adc
xchg
sub
xor
mov
push
popa
pop
aam
out
out
dec
fstps
sbb
sbb
mov
fwait
cmp
push
addr16
mov
add
jmp
xor
dec
sbb
out
in
or
sbb
mov
pop
inc
shll
out
ja
dec
xchg
sub
mov
pop
dec
push
mov
insl
lock
mov
imul
rclb
adcb
ljmp
mov
add
sbb
hlt
fsubl
mov
gs
sti
inc
enter
jg
fwait
push
into
xchg
dec
dec
jp
jg
das
cltd
mov
lahf
jecxz
imul
dec
lock
dec
int
xor
adc
cld
outsl
mov
addr16
sub
cli
xlat
imul
adc
movsl
fsubl
aam
lods
mov
or
jns
mov
ror
xor
xchg
rcr
out
xorl
dec
adc
popf
mov
xchg
test
pop
push
iret
mov
mov
xchg
jns
cmp
sub
pop
and
xchg
cmp
mov
iret
ret
mulb
cmp
call
xchg
in
out
mov
call
push
bound
xchg
in
sbb
inc
dec
lods
mov
popa
jnp
mov
mov
pop
repnz
xchg
div
push
pop
mov
mov
aam
sti
push
neg
shrl
ficompl
daa
sbb
mov
mov
scas
nop
adc
or
out
lret
xorb
ja
ljmp
orl
push
in
jge
add
ficomps
mov
scas
call
sbb
lods
and
push
ret
xor
test
leave
jg
popf
add
mov
dec
push
rcr
outsb
ret
ss
cltd
sbb
popf
inc
lret
sahf
fs
pop
mov
jns
icebp
aas
pushf
adc
cmpsl
mov
xlat
pop
hlt
adc
cmpsb
inc
aad
pop
jns
idivl
sahf
enter
dec
repz
or
sbb
adc
aas
arpl
jmp
sbb
daa
int
or
aad
filds
sbb
jbe
or
sub
xor
sub
mov
jmp
jo
lods
cwtl
sbb
in
mov
aas
cmp
push
xor
jp
push
xor
adc
jg
fildll
lcall
pop
aas
sbb
jo
daa
std
mov
in
mov
insb
sbb
jne
ret
push
sahf
sahf
dec
jns
push
insl
fwait
es
push
pushf
or
fsubr
cwtl
hlt
cwtl
lahf
dec
cmpsb
push
mov
in
xor
push
je
decl
sub
arpl
push
rcrl
ret
ret
dec
iret
jp
jo
push
or
ret
loope
outsl
xchg
mov
sahf
and
sbb
inc
dec
push
adc
mov
inc
das
mov
popa
mov
lock
in
inc
stos
sbb
sbb
inc
mov
fiaddl
jbe
xchg
mov
js
lahf
dec
or
mov
fucomp
mov
movsl
flds
jmp
cli
jae
mov
test
sbb
arpl
mov
dec
or
in
adc
mov
arpl
test
addr16
ss
lods
mov
jg
lock
movb
push
dec
inc
sahf
loopne
mov
fildll
push
idivl
aad
jns
xor
loopne,pt
add
sub
test
lret
sub
scas
push
pop
repz
lods
mov
lret
push
xchg
shlb
fisubs
loop
stc
dec
xchg
jno
mov
add
outsb
aam
jl
jae
jmp
sub
xchg
and
xor
xchg
ret
fisubrl
and
sub
push
mov
and
enter
cmp
mov
add
shll
in
ret
fsubs
push
mov
call
outsl
jecxz
mov
sbb
daa
mov
pop
mov
jne
pushf
and
stos
cs
mov
out
sahf
xor
mov
pop
cmpsb
pop
jb
lret
push
movsb
or
push
lret
push
int
ficompl
or
test
cld
imul
inc
dec
inc
push
out
and
inc
xorl
aad
fstp
mov
jge
and
adc
in
xlat
sub
cmp
mov
gs
in
bound
xchg
mov
xchg
jbe
pop
cld
mov
pop
inc
out
into
lods
fdivs
rol
ret
push
cli
mov
cmp
out
and
mov
cmp
in
outsb
dec
js
mov
aaa
ljmp
push
mov
sar
jo
cmp
and
addr16
jle
mov
add
mov
mov
out
sbb
push
mov
and
lods
push
lahf
inc
push
cmpl
cmpsb
jle
es
lret
jmp
cmpsl
pushf
inc
sub
and
lret
fwait
xor
add
xlat
dec
or
clc
inc
xlat
push
sub
popa
hlt
ss
jmp
cmp
andl
add
adc
leave
test
js
add
popa
xchg
xor
lret
stos
pop
sbb
mov
xor
dec
clc
push
out
inc
xor
mov
jo
inc
jno
outsb
mov
into
push
mov
fstl
subl
je
mov
cmp
inc
testb
ret
ds
dec
out
push
sub
mov
or
shrl
out
inc
adc
cmp
call
stos
or
mov
mov
lahf
xchg
outsb
ror
and
xchg
fs
xchg
fsubrl
int3
fildll
sub
add
add
pop
je
aas
inc
adc
pushf
sbb
lods
aaa
jmp
outsb
push
adc
xchg
push
les
popa
mov
in
lcall
dec
xchg
inc
jle
add
xchg
int
les
sahf
xchg
inc
add
adc
inc
mov
jl
pop
or
xchg
push
shlb
mov
xchg
shl
fildll
stos
subb
pop
mov
xchg
mov
jb
pop
les
adc
pop
test
mov
sbb
mov
mov
and
daa
xchg
in
mov
jge
je
pop
jns
adc
or
inc
add
xor
repnz
cmpsl
sub
add
ds
cwtl
push
and
cvtpi2ps
repnz
sbbb
mov
das
mov
push
adc
add
ds
cmc
cmp
and
sub
cli
lahf
jmp
movsb
and
cs
push
mov
sub
lds
fwait
jmp
in
mov
stos
lret
xchg
cltd
push
add
shrb
pop
xchg
fldt
andb
lret
and
push
fidivs
enter
xchg
mov
add
inc
sbb
pop
push
stos
push
xchg
adc
mov
mov
in
jmp
hlt
jo
testb
xchg
mov
jmp
test
xchg
fiaddl
cwtl
push
dec
sub
ds
in
out
fistl
xor
insb
xchg
cmc
mov
rclb
mov
in
pop
fsts
mov
jle
pop
mov
mov
cld
pop
je
out
dec
or
ret
aas
mov
and
xchg
scas
inc
insl
cmpl
cltd
xor
jmp
cmp
jp
fisubs
xchg
xor
fldcw
mov
movsb
push
and
mov
jb
or
adc
pop
fld
fwait
lea
add
sbbl
xor
jnp
xchg
adc
imul
int3
cltd
ret
dec
mov
and
sbb
dec
pop
int
inc
sarl
push
sbb
add
ljmp
imul
int3
loope
loopne
popa
lock
sbb
stos
xor
or
pop
cmp
aam
cltd
out
xchg
dec
mov
sbb
sbb
mov
and
movsb
push
insb
insl
shl
and
adc
jae
insl
fs
or
jno
jbe
inc
fsubs
pop
pushf
subl
cmc
xlat
jo
shr
dec
cmpsl
gs
push
popf
cmp
leave
les
movsl
adc
and
xlat
stos
xor
mov
pop
cmp
shrl
test
or
jp
fcmovu
out
scas
movsl
ljmp
inc
and
fidivl
loope
jns
and
out
pusha
cmp
xor
cmp
xor
orl
aad
jg
out
xor
xor
repz
xchg
aad
int3
test
ljmp
scas
out
add
pop
add
pop
cmp
imul
xorl
xchg
dec
aam
pusha
mov
and
inc
cmp
jp
adc
scas
xchg
push
movsl
fs
mov
jg
call
pop
cmpsl
stos
xchg
scas
cmpsb
inc
movsb
sub
inc
gs
mov
test
or
cmp
jnp
cltd
and
iret
pop
jg
fsub
xchg
mov
dec
mov
cmp
cli
xor
dec
dec
and
std
pextrw
insb
inc
or
es
push
movsb
push
outsl
cld
xor
push
mov
jg
push
pavgb
xchg
mov
inc
test
repnz
lea
cmpsb
add
lds
sbb
adc
faddp
cltd
cwtl
xchg
or
loop
adc
stos
jle
push
mov
aas
test
mov
or
sti
sub
ret
addb
mov
add
out
cltd
push
mov
mov
adc
lock
ret
cmp
imul
rep
cmp
jge
mov
sti
mov
jp
mov
dec
fwait
adc
out
cltd
or
mov
cmp
cmp
lret
xchg
xor
xchg
mov
and
mov
andl
lods
cmp
mov
mov
cwtl
js
xchg
std
push
xchg
mov
aas
pop
mov
inc
arpl
cs
adc
pop
inc
cltd
push
enter
cmp
imul
cmp
jle
movsl
orl
mov
push
lret
cmpsl
cmp
or
xorb
roll
mov
adc
mov
sbb
notl
js
in
and
lock
into
jl
in
jp
inc
imul
lret
sub
mov
nop
push
sub
jbe
pop
fcoml
test
inc
mov
mov
pop
cmp
shrl
dec
iret
aas
inc
addr16
lods
and
pop
iret
out
call
lret
cmpsl
test
ret
test
cmp
and
xchg
xor
sbb
inc
into
jb
push
xor
or
std
sub
sar
arpl
and
ja
pusha
loop
mov
jns
sbb
jecxz
movsb
mov
fisttpl
mov
adc
sbbl
cmp
cmp
sub
mov
or
sar
push
adc
sub
leave
push
sub
xchg
xchg
inc
out
das
sub
mov
popa
push
add
add
pop
pusha
pop
negl
pop
mov
pop
aam
xor
insl
mov
movsb
shll
lahf
push
aaa
xor
and
shlb
lea
or
imul
sub
or
scas
jmp
mov
cmpsb
cmp
stc
pushf
in
dec
dec
test
adc
negb
add
mov
xchg
in
or
push
xchg
pop
jae
js
cmp
push
mov
sbb
sbb
bound
jg
dec
sub
fldenv
cmp
pusha
dec
xor
mov
mov
adc
sbb
add
stos
outsl
pop
arpl
insb
jmp
fstps
xor
das
jae
mov
cmp
daa
mov
xor
cmp
mov
out
inc
cltd
cli
lahf
mov
add
and
adc
aaa
and
mov
mov
jp
dec
push
lret
push
xor
stos
imul
push
xlat
imul
and
adc
add
push
xor
pop
mov
mov
ficoml
jnp
pop
scas
test
dec
push
dec
jg
scas
cmpl
loopne
xchg
and
dec
cmp
in
mov
sub
xlat
mov
push
push
push
sbbl
jbe
mov
test
fadds
inc
and
or
ret
push
clc
add
mov
xor
lea
movl
in
push
and
dec
fiaddl
cs
jbe
mov
xchg
orb
into
in
ret
scas
or
stos
mov
scas
test
faddl
push
mov
in
inc
sub
fistps
in
cmp
cltd
adc
and
push
ljmp
jmp
sarb
mov
leave
cmp
inc
add
aas
nop
lcall
dec
add
xchg
cld
pop
fstpt
imul
ret
enter
cmpsb
loopne
sti
xor
inc
addl
es
push
les
lahf
or
test
add
int3
push
aad
mov
ljmp
es
cwtl
push
pusha
cmp
mov
cld
xchg
xlat
call
fldpi
arpl
iret
mov
rclb
ds
call
shlb
sbb
in
dec
arpl
rcll
pop
cltd
subl
inc
mov
mov
fisubrs
jo
mov
ret
pop
clc
les
mov
call
pop
repz
out
mov
xchg
in
dec
pop
jle
xor
data16
lea
adc
movsb
mov
clc
out
fcmovbe
and
clc
mov
js
fistpll
mov
add
dec
mov
outsb
inc
mov
cmp
inc
xchg
jns
xchg
pop
xchg
jg
and
cmp
pop
pop
imul
loopne
pop
mov
aam
mov
sub
add
push
cmp
mov
icebp
sbb
aaa
xchg
in
adcb
ljmp
mov
xchg
mov
ret
mov
sbb
jecxz
lahf
mov
stos
sbb
mov
xchg
cwtl
mov
pop
and
insb
ja
jge
ja
stc
fs
pushf
mov
les
xorb
and
fwait
daa
mov
rcl
dec
pop
pop
dec
adcb
jecxz
sbb
pop
cwtl
xchg
jne
pop
fdivs
mov
inc
test
mov
pop
popa
jno
gs
cld
ss
imul
and
push
mov
add
js
fldl
pop
mov
insl
xor
test
inc
push
es
cmp
push
out
dec
jg
out
pop
mov
popa
out
nop
lea
inc
lea
push
push
repnz
test
lea
sbb
mov
in
jno
in
shrd
fs
and
lea
ret
jg
adc
xor
test
jmp
aaa
call
add
adc
xchg
add
or
roll
addr16
je
or
dec
ret
ret
mov
mov
jmp
out
sub
inc
ljmp
lock
loopne
jge
rclb
js
inc
push
jmp
gs
stos
and
outsl
jbe
and
fidivl
dec
pop
pop
fldl
outsb
call
push
stc
or
inc
cmp
dec
add
mov
jle
enter
inc
mov
mov
out
jns
mov
int
adc
fcompl
fdivl
cwtl
and
xchg
dec
outsb
aam
push
jbe
or
fpatan
sub
sub
mov
mov
xlat
sarb
dec
pop
lahf
stos
addr16
push
xchg
clc
pop
jbe
xor
das
xchg
xor
fnstsw
cmc
call
fucomp
in
mov
jecxz
shll
cmp
dec
inc
ret
pop
adc
sbb
cld
inc
jnp
dec
arpl
ret
jle
adcl
jns
xor
inc
out
cli
iret
xchg
dec
or
ds
xor
jne
aas
push
mov
notb
js
fwait
xchg
fcoml
movsb
pop
sub
pop
adc
push
stos
xor
popf
mov
and
ror
xchg
pop
mov
inc
mov
test
xchg
add
sbbl
jmp
pop
and
push
sbb
lahf
xorb
push
lcall
ja
mov
gs
mov
mov
pop
rcrl
xor
subb
jae
cmp
fistl
pusha
rcl
adc
in
cli
push
sbb
jg
outsl
dec
inc
cmp
jno
in
popf
xchg
ds
stos
lea
je
jp
imul
pop
ucomiss
sbb
lea
addl
pushf
testb
jns
loop
add
sbb
xor
xor
cmpsb
popa
clc
fwait
mov
bound
mov
xchg
pushf
xor
xor
mov
sbb
in
fidivl
std
aaa
jg
push
lret
sti
mov
subb
pop
push
mov
and
push
lret
xchg
arpl
inc
nop
inc
stos
shlb
jge
int
add
jbe
lret
out
imul
loopne
lods
faddl
sbb
jae
pop
mov
mov
jne
xor
lret
mov
jne
and
push
dec
bound
cmc
sbb
arpl
mov
repnz
movsb
repz
int3
sub
movsb
orb
dec
insb
in
outsl
aaa
aas
popa
sub
push
cli
xor
ja
ljmp
xchg
xchg
fisubl
xor
loop
and
adc
sbb
sbb
dec
adc
int3
rorl
mov
sbb
push
add
pushl
xchg
sub
push
loop
and
popa
push
rcll
js
lret
sbb
fcomi
popf
je
push
jno
cli
lods
mov
xor
mov
addr16
jbe
in
pop
lahf
sub
mov
mov
push
push
sbb
xorb
xchg
pusha
shlb
aaa
inc
xchg
xchg
mov
mov
movsb
fisubs
leave
xchg
sbb
jle
sub
jno
adc
bound
rcrb
adc
mov
daa
cltd
xor
add
mov
call
inc
jle
fnstsw
cmc
dec
arpl
mov
jge
pop
rcr
pop
xchg
out
into
gs
inc
pop
adcl
push
inc
push
ficompl
push
stos
mov
jecxz
js
out
jo
jg
push
popa
fsubl
lods
mov
mov
int3
inc
cmp
ret
cmpsb
loope
sbbl
xor
xchg
jae
xor
mov
inc
mov
pop
xchg
out
pusha
shlb
aad
jmp
clc
sub
lahf
ret
mov
push
test
mov
mov
test
les
out
sub
mov
das
inc
rclb
ja
mov
and
shlb
jg
sub
xor
sbb
jge
xor
andl
sahf
push
xor
pop
out
jne
ja
cs
mov
mov
lahf
jle
aas
xchg
cmp
mov
aaa
mov
das
out
jae
mov
adc
lea
or
adc
push
dec
pcmpgtw
jo
jae
sti
icebp
cmpsl
xor
adc
mov
inc
sub
shlb
sbb
lods
es
imul
adc
adc
sbb
je
sub
les
inc
call
cwtl
dec
xchg
push
scas
pop
fmuls
push
cli
dec
clc
imul
inc
lods
in
adcl
aad
mov
mov
jns
add
outsb
adc
xchg
in
mov
sbb
pop
addb
mov
shl
test
dec
mov
add
xchg
dec
pop
add
pop
jo
aaa
inc
pop
hlt
mov
sbb
mov
out
arpl
mov
pop
inc
repnz
jmp
test
test
add
arpl
push
pop
movb
jb
sbb
pop
push
aad
mov
aaa
nop
out
jo
pop
popf
fidivl
add
pop
daa
leave
sub
cmpb
push
int3
and
push
mov
stos
xlat
sarb
push
sti
mov
mov
out
inc
iret
adc
fldcw
cwtl
repnz
xor
mov
sub
imul
mov
xlat
aad
inc
inc
outsb
dec
jo
pop
jnp
pop
insb
mov
mov
adc
imul
cmp
call
lods
repnz
ja
sti
cmp
dec
xchg
fcmovnb
mov
sub
mov
cmp
das
out
aad
mov
mov
mov
dec
dec
adc
sbb
test
push
sahf
xor
mov
jecxz
stos
int3
fsubs
popf
push
pop
cmpsb
pushf
enter
xor
ret
xchg
xchg
arpl
mov
sti
cmp
cs
aam
push
push
fiaddl
cmpsl
dec
xor
lods
push
xchg
dec
or
sbb
pop
addl
out
in
cld
xchg
push
sbb
mov
shlb
mov
call
es
mov
punpcklbw
mov
shlb
xor
ss
fwait
mov
add
ds
fldenv
cmp
dec
int3
in
mov
mov
pushf
and
pusha
sahf
aas
in
push
jmp
stc
mov
movsb
fmull
and
adc
std
mov
pop
xchg
sbb
pop
push
in
adc
pop
cld
repz
push
addr16
sbb
lcall
and
iret
ja
daa
cltd
xchg
out
iret
add
pop
mov
cltd
loop
lds
jl
jb
dec
jmp
out
push
mov
mov
and
aam
ja
in
negl
pop
xchg
inc
mov
jle
jnp
mov
sub
mov
push
les
test
sti
add
leave
call
mov
xchg
movsl
push
mov
jae
or
pushf
xchg
inc
aam
scas
imul
adc
outsb
lcall
ljmp
sarl
push
js
repnz
fcoms
loopne
fbld
stos
scas
jns
adc
inc
xor
out
pop
push
ds
fdivp
mov
sub
push
dec
mov
mov
mov
aas
or
mov
mov
aam
jbe
mov
leave
mov
das
mov
adc
jp
add
insb
addr16
mov
cmpl
inc
xchg
mov
push
insb
sub
fwait
scas
push
push
push
fsts
cmc
mov
sbb
lcall
cltd
cmp
in
in
jbe
mov
insb
jmp
add
inc
mov
dec
adc
xchg
xchg
imul
outsl
daa
add
pop
rcrb
sub
push
test
in
cmp
int
sbbl
in
leave
mov
js
lock
hlt
fnstenv
cli
cmp
or
add
mov
push
jmp
jbe
xor
push
outsl
lret
lds
inc
mov
stos
or
sbb
add
push
xchg
fdivrs
cli
pushf
pop
out
das
jns
dec
pop
jns
xor
push
mov
cmp
call
pop
push
mov
stos
lcall
jo
fsubrs
lret
aam
notl
cld
in
popa
test
arpl
and
mov
jb
daa
xlat
hlt
xchg
scas
adcb
cmp
xor
enter
aam
lds
cmp
and
jo
push
icebp
and
repz
jae
movsl
and
push
dec
sbb
out
adc
sarl
dec
in
shrb
ret
cs
dec
push
jns
cltd
mov
into
icebp
aam
mov
sahf
lea
cli
xor
or
lcall
fstpt
popf
xor
sub
shrb
jmp
jb
daa
mov
mov
roll
mov
scas
sahf
xor
dec
mov
xlat
lock
cmp
mov
dec
or
inc
sti
inc
bound
fmuls
push
adc
scas
je
andl
dec
or
cld
sub
aas
outsl
push
dec
sbb
inc
repnz
arpl
mov
jp
mov
test
add
jge
pop
push
insl
mov
add
ja
lcall
stc
cmp
or
ljmp
sub
call
mov
ficompl
mov
and
or
sbb
aaa
xor
jmp
ret
jnp
mov
dec
popf
loopne
jl
out
mov
sub
fidivs
sub
dec
loop
fisubrs
das
or
inc
test
push
jp
mov
jmp
ss
fisttps
test
or
cwtl
jo
push
adc
pushf
cmc
adc
adc
lret
mov
inc
push
movsl
rolb
lahf
pop
mov
aam
lock
call
mov
mov
xchg
dec
adc
popa
mov
fs
xor
dec
jecxz
dec
pop
push
sbb
adc
adc
fisubrl
xchg
rcr
loope
fstp
push
sub
jns
lods
push
outsb
pop
leave
and
jno
gs
cmpb
into
add
lcall
ret
loope
ds
adc
or
mov
fnsave
adc
push
push
dec
je
pop
jno
dec
divl
dec
ret
sbb
sbb
repnz
mov
mov
lret
jp
inc
mov
or
sahf
jmp
aas
mov
sub
mov
jge
xor
adcl
mov
sub
jnp
icebp
fadd
rol
push
daa
xchg
cmp
or
sub
or
out
pop
in
pop
sbb
icebp
pop
in
pop
data16
mov
dec
or
ljmp
movsl
mov
mov
push
fbld
mov
gs
and
mov
sti
in
and
in
sbb
int3
sbb
les
mov
test
inc
and
movsl
mov
xchg
andl
rol
je
xchg
inc
lret
outsb
add
scas
and
push
inc
and
roll
sub
imul
js
push
mov
jno
mov
sub
in
pop
sbb
dec
std
jo
jmp
lea
ret
xchg
sub
dec
sbb
cmp
das
pop
pushw
pop
cwtl
inc
xchg
out
jno
testl
mov
xlat
aas
cmc
popa
dec
js
enter
bound
dec
inc
xchg
jmp
aad
fwait
jae
add
push
xchg
lds
clc
mov
movsl
mov
jo
mov
movsl
inc
mov
popf
xchg
inc
adc
sub
in
inc
jmp
push
cltd
mov
mov
test
inc
aam
or
lcall
loopne
dec
out
js
xor
rolb
mov
push
repnz
ljmp
mov
int3
jo
and
inc
xor
fimuls
adc
and
adc
stos
mov
leave
scas
ret
and
insb
fwait
insb
testl
sub
mov
ss
mov
jns
lock
outsl
sarl
dec
adc
push
xlat
pop
addr16
js
stos
testl
dec
out
inc
jmp
jl
xchg
adc
imul
xor
push
add
in
push
lahf
je
mov
bound
das
andb
in
mov
cmp
xchg
sahf
adc
sbb
jecxz
popf
lds
popa
std
cmpsb
dec
movsl
and
pop
jns
push
cmp
xor
mov
divb
in
popa
mov
sub
push
das
jecxz
pusha
dec
lcall
in
add
cwtl
jge
fs
mov
adc
cmp
lods
add
je
nop
jp
loope
mov
sub
test
fimuls
into
sub
ficomps
arpl
inc
sub
cmc
xchg
pusha
cmp
xchg
or
pop
xor
xchg
movsb
dec
xor
jp
scas
jp
mov
jp
lcall
rcll
mov
stos
in
jl
push
mov
and
inc
out
pop
stos
aam
lea
aad
pusha
lret
sbb
cmp
xchg
jmp
in
or
rolb
out
inc
cld
adcb
pop
aas
addb
xchg
xchg
rcll
gs
add
fildl
sti
scas
mov
mov
push
and
pop
adc
dec
jle
test
and
cltd
mov
adc
les
hlt
push
loop
cltd
std
fcomip
sbb
sub
and
cltd
sarb
jmp
and
xchg
shll
xchg
cld
or
jno
push
into
jb
mov
mov
rolb
mov
aad
in
xor
mull
lcall
lds
lea
ret
movsb
xchg
xchg
xor
stc
cltd
mov
mov
in
sbb
iret
loop
in
push
jle
cmp
push
xlat
xlat
repnz
push
push
aas
mov
jge
lods
mov
fsub
sbb
adc
push
decb
out
push
gs
leave
mov
and
push
fiadds
fwait
add
pop
hlt
scas
mov
iret
pop
iret
aas
cmp
xchg
xor
test
or
stc
cmp
or
dec
fcmovb
and
fwait
pop
subb
fstpt
add
mov
imul
leave
inc
mov
sti
pop
ret
push
addr16
dec
shlb
dec
sub
fmuls
xlat
and
jmp
cmpsb
push
je
pop
adc
insl
cs
int
add
rclb
ret
sbb
lods
loop
pop
mov
and
stc
orl
pop
mov
icebp
jmp
pop
inc
push
ret
fsqrt
push
pop
adc
mov
jle
mov
cli
js
xchg
dec
aam
xchg
dec
pop
rcrb
out
or
scas
addr16
fisttpl
int
pop
cmp
jbe
inc
fildl
jl
lcall
or
dec
mov
lcall
dec
mov
test
imul
daa
rcrb
and
mov
xchg
and
push
daa
imul
dec
mov
sbb
mov
mov
fs
cltd
inc
shll
jmp
sbb
repnz
and
aas
pusha
jno
cmpsl
xchg
sub
xchg
outsb
movsl
mov
and
lmsw
out
daa
mov
pusha
jl
add
cmpsb
push
pop
adcl
jmp
and
je
mov
test
ljmp
scas
jmp
sti
mov
add
push
repnz
fucomip
adc
xchg
mov
faddl
out
incb
ja
rorl
sti
jbe
cmp
std
pop
cs
or
lods
insl
lods
loop
leave
mov
pop
pop
mov
stos
pop
xchg
leave
inc
loopne
stc
cmp
ljmp
inc
inc
data16
cmpsl
scas
ja
or
mov
adc
fcmovbe
sub
mov
dec
pop
aaa
mov
push
lock
lret
or
xor
or
mov
iret
mov
xor
lock
jle
mov
inc
lret
mov
jle
xchg
jae
dec
sub
xor
popa
pop
mov
sahf
add
mov
jge
xchg
sbb
cltd
fistpl
ss
lahf
in
stos
jecxz
pop
js
adc
mov
out
xor
add
mov
fcmove
int3
fnstcw
mov
popl
scas
pop
shr
push
les
dec
sub
aaa
xchg
cltd
mov
sbb
movsb
xchg
mov
and
inc
pop
fisubrl
sub
leave
shll
mov
xchg
cmp
adc
rcll
dec
in
jle
jne
cltd
popf
daa
jno
ds
adc
iret
aas
add
pop
call
imul
inc
mov
dec
or
mov
notl
enter
sbb
cmp
jbe
mov
jge
add
add
sbb
lret
mov
mov
sub
cmp
imul
rcl
inc
jne
jp
sub
push
and
adc
xor
out
dec
std
fdivrl
cs
ret
inc
daa
xchg
fmull
lods
fwait
jecxz
or
push
scas
sub
scas
rcll
pop
repnz
add
ret
ret
push
mov
fs
dec
cltd
outsl
sahf
loop
ret
mov
mov
dec
frstor
leave
bound
vpmovw2m
jecxz
xchg
mov
push
jnp
mov
mov
or
shll
test
mov
cs
in
addr16
cmp
push
movsb
jle
push
or
enter
scas
iret
aam
aam
cmp
adc
fidivrl
decl
xor
jns
xchg
inc
movsb
and
aaa
pusha
lret
outsl
xor
lods
xchg
xchg
fisttpl
xor
add
imul
aas
xorl
loop
lds
dec
push
jg
test
or
lret
inc
or
mov
mov
test
test
xchg
out
or
xchg
sub
js
js
inc
pop
cltd
mov
js
call
or
xor
inc
push
or
into
in
ret
scas
jae
sub
pop
iret
lcall
cmp
test
xchg
es
enter
repnz
icebp
push
mov
cmp
sbb
xor
stos
imulb
pop
or
mov
inc
inc
cmp
scas
sub
xchg
lcall
mov
ret
out
in
mov
mov
in
inc
adc
in
pusha
loop
mov
inc
adc
and
sub
mov
cmp
push
imul
adc
lret
cmp
pop
mov
xchg
fildl
xor
sbb
xor
and
testb
fbstp
push
sub
dec
cwtl
pusha
xchg
aam
inc
int
push
loope
and
xchg
roll
outsl
arpl
sub
jl
xchg
and
lea
out
sub
inc
mov
xor
mov
jbe
les
jp
jno
inc
and
in
cmpsl
repz
repnz
xor
push
icebp
sbb
fsubrl
fldcw
lret
es
iret
ss
aam
jp
ja
cmp
xchg
mov
pop
sub
jb
dec
pop
cmp
xor
repz
xchg
loope
mov
das
cmc
cli
into
adc
out
jno
pop
out
push
inc
call
fs
hlt
sti
loop
ret
sahf
test
stos
shrl
into
es
in
lods
inc
stc
pop
adc
jp
pusha
push
test
dec
outsl
out
xchg
test
push
cmp
call
loope
js
ret
ds
popf
scas
idivl
repz
mov
lods
push
adc
fcompl
jbe
stc
mov
sub
dec
jo
push
jne
or
mov
inc
fisubl
stc
rorb
cltd
add
fnstenv
aad
imul
jle
cwtl
jne
mov
pop
cltd
pop
inc
ljmp
shl
dec
xchg
dec
sub
adcl
int
cmp
mov
pop
dec
mov
lret
test
fs
mov
outsb
outsb
lret
insb
fsubrs
test
inc
add
and
fdivrs
add
cmpsl
push
adc
addr16
js
cmc
xchg
test
dec
fsubr
sar
popa
cwtl
es
adcb
imul
nop
pushf
jge
mov
jecxz
in
adc
lock
mov
cmp
or
cmp
mov
mov
xor
dec
xorb
mov
ss
test
xlat
cli
add
jb,pn
inc
aas
xchg
imul
mov
out
fidivrs
pop
add
cmc
xor
or
or
les
dec
jbe
xchg
lods
mov
mov
push
sub
sub
bound
pop
outsb
shll
xchg
lret
jnp
mov
xchg
sub
sub
int3
adc
push
enter
mov
popa
sbb
pop
sbb
cmp
movzwl
sub
adc
fdivrl
push
ljmp
mov
mov
lods
jo
test
cmp
jns
pushf
mov
push
mov
inc
loop
in
fwait
or
add
cmp
mov
movsb
enter
sar
adc
jg
lods
ss
inc
jns
or
lret
add
jae
dec
aam
mov
movsl
and
xchg
aaa
dec
mov
addb
push
ss
mov
lahf
repnz
out
xor
xchg
mov
adc
repnz
mov
push
push
ret
inc
lock
push
mov
push
rolb
in
sbb
inc
in
xor
test
fxch
inc
push
cmp
outsl
mov
leave
shll
pushf
stos
push
aaa
lea
pop
lds
outsb
cmp
xor
sbb
xlat
mov
cmp
sbb
movsb
cli
or
jo
pop
mov
mov
add
pop
xchg
out
jmp
inc
inc
sbb
cs
and
adc
imul
push
das
inc
xchg
xchg
mov
and
or
aaa
andl
gs
repnz
data16
subb
rcll
mov
stos
adc
sub
call
fstpt
adc
inc
scas
mov
mov
adc
jmp
cmpsb
xorl
out
mov
cmp
mov
inc
popf
divl
inc
dec
sar
xchg
pop
out
sub
mov
sbb
icebp
push
inc
push
sbb
xor
add
dec
cld
or
scas
inc
sub
jg
push
inc
cmp
dec
int
enter
xchg
shlb
mov
mov
sub
lahf
mov
and
out
push
inc
or
mov
or
or
movb
cmp
adc
add
cmp
aam
lret
pop
pushf
es
mov
ds
fwait
or
push
jecxz
cmc
jle
lcall
rorb
and
push
bound
adc
fwait
cmpl
cli
mov
in
dec
xor
nop
inc
icebp
dec
xchg
xchg
inc
pop
push
into
fcomps
std
loop
inc
sahf
ljmp
and
push
iret
adcb
add
ss
imul
ss
add
cld
les
adc
mov
lea
push
dec
fnstenv
arpl
inc
jl
dec
clc
mov
insb
dec
in
inc
divl
add
aas
rorb
mov
iret
xchg
push
sub
push
pop
test
add
push
adc
movsl
cmp
jmp
mov
daa
dec
pop
shlb
clc
roll
std
mov
add
shll
int3
xchg
dec
lret
lds
mov
jp
mov
imul
wrmsr
mov
dec
pop
cli
and
mov
and
mov
imul
sub
adc
shll
mov
inc
jecxz
jne
sbb
addb
pop
adc
bound
in
add
sbb
or
mov
and
cmp
mov
cmp
lret
push
dec
or
mov
pushf
in
pop
sarl
sbb
lcall
sbb
mov
sub
les
and
cmp
jbe
addr16
mov
aam
mov
mov
imul
call
outsl
gs
inc
or
icebp
lahf
cltd
mov
fimull
pop
test
daa
aad
out
mov
mov
fs
jecxz
or
push
mov
lods
xor
mov
jmp
cmp
sahf
test
stos
mov
repz
pop
cltd
lods
mov
fs
dec
adc
jo
mov
xchg
pop
imul
and
imul
outsl
int3
push
pop
add
and
add
jp
arpl
push
cmpsl
inc
adc
je
sub
shrb
loop
enter
add
cmpb
repnz
scas
cli
cmp
push
pop
jns
daa
jecxz
dec
jmp
jne
and
in
fldenv
xchg
cmp
push
push
pop
popa
negb
sahf
jns
and
mov
in
mov
aaa
xchg
sbb
push
scas
dec
ds
adc
rorl
nop
lahf
inc
inc
shlb
jno
jmp
xchg
bound
push
adc
sub
lret
pop
xchg
sti
mov
sbb
xchg
gs
sbb
push
xchg
push
test
xor
jl
subb
jg
and
orb
hlt
xor
lods
push
cld
aas
jnp
lea
in
out
and
push
aad
pop
mov
xor
lret
in
faddl
imul
test
xchg
mov
out
push
jbe
add
repnz
incb
dec
lods
je
cwtl
mov
cmp
test
xchg
mov
out
popf
out
lahf
leave
dec
mov
xor
xchg
lods
xchg
aas
inc
jl
xor
or
dec
and
add
cmp
mov
outsb
into
aas
nop
inc
and
fidivs
adc
add
mov
ds
test
jbe
dec
lds
fucomp
aad
or
jmp
jmp
pop
movsb
aad
imul
cltd
fimuls
mov
enter
dec
repnz
xchg
inc
cmp
les
and
pop
ljmp
xchg
gs
lahf
idivl
mov
cmc
and
pop
insb
xchg
xchg
pop
pop
or
fcomps
outsb
clc
adc
xchg
xor
iret
or
scas
movsb
lahf
mov
cmc
addr16
pushf
mov
cmp
adc
cltd
push
in
outsl
push
test
sbb
inc
cmp
cmp
dec
mov
in
push
inc
mov
daa
mov
mov
push
dec
sarl
push
icebp
sbb
pusha
jp
or
loop
push
cld
fstpl
mov
cwtl
jp
fsubp
cmp
addr16
jns
jne
cmp
sbbb
addb
dec
sbb
mov
mov
jmp
mov
dec
xor
iret
or
aad
pop
jnp
scas
lds
sub
and
lret
dec
cmp
add
test
inc
push
aam
inc
lahf
jns
mov
bound
sahf
cltd
or
sub
enter
aaa
rolb
push
adc
add
out
add
scas
aad
loopne
fsts
mov
cmpsl
pop
push
pop
pop
push
sbb
jle
test
xor
dec
hlt
enter
imul
sahf
cwtl
and
inc
ds
je
dec
jle
sahf
popf
xchg
cmp
data16
jnp
std
imul
mov
fmull
push
inc
int3
and
or
es
sub
jl
xor
or
inc
xor
cmp
stos
adc
pusha
daa
xchg
leave
mov
loop
add
sarb
and
mov
jg
mov
fistps
cmp
scas
aad
jg
imull
addr16
repz
test
sub
push
xchg
mov
repnz
enter
dec
shrl
jne
insl
daa
mov
add
push
fsubrs
jno
or
dec
fdivl
fldpi
or
aam
clc
inc
fbld
pop
push
pop
movsb
jge
xor
test
aas
pushf
or
negl
dec
mov
fistpll
or
lahf
iret
lea
rorl
xchg
fmul
shr
jl
fs
or
clc
push
cmp
push
iret
cltd
pop
pop
lods
sbb
int3
fistpl
mov
sub
inc
or
xor
pop
push
loope
mov
mov
icebp
and
push
push
mov
or
mov
movsb
xor
xchg
or
inc
jg
and
std
pop
adc
nop
xor
add
pop
jecxz
jg
scas
or
pop
push
fimuls
add
loop
mov
jle
jecxz
movups
sbb
adc
or
test
lahf
cmp
jae
mov
mov
add
or
add
sub
jg
out
inc
ja
in
test
aam
mov
popa
jne
jecxz
lret
sti
mov
jns
cli
movsl
mov
mov
cs
in
test
mov
mov
mov
fcompl
loop
popf
jle
popf
ret
pop
mov
into
ret
cmp
adc
jecxz
test
orb
into
leave
imul
adc
sub
adc
and
fsub
adc
bound
xor
jmp
ret
out
test
inc
dec
mov
call
pop
or
fwait
insb
rclb
mov
sbb
mov
inc
inc
out
rorl
cmpb
push
xchg
imul
ret
xor
addr16
dec
jbe
sub
push
insb
js
rcr
mov
push
xchg
sbb
push
pop
cmc
idivl
add
dec
lods
fsubrl
and
mov
cmp
insl
jo
inc
loope
hlt
inc
push
mov
xorb
dec
in
sub
and
push
enter
push
loopne
jo
inc
push
clc
xchg
lods
in
dec
lret
xor
adc
lahf
or
add
aas
inc
aas
sub
jl
or
mov
add
inc
push
je
add
pop
jecxz
test
xlat
jle
xor
lahf
xorl
push
cmp
in
sbb
mov
pop
cltd
out
std
test
jge
scas
test
and
out
ret
mov
sbb
mov
pop
lahf
mov
pop
cmp
mov
pop
xor
dec
ret
fisttpll
mov
mov
icebp
pop
andb
sub
push
rcl
jp
or
mov
push
js
jg
sub
ja
cmp
add
push
enter
or
jae
in
cmpsl
outsb
out
iret
popa
stc
jp
jb
push
and
sbb
xchg
and
pop
push
movsb
daa
jl
sub
xorl
or
shlb
call
mov
das
aas
lock
lcall
inc
aad
scas
mov
add
loope
xchg
out
aad
cmp
jb
mov
imul
cld
inc
push
stos
rcll
mov
loope
imul
cmp
sbb
push
gs
outsl
incl
das
xor
les
inc
add
testb
or
movsb
mov
pop
mov
or
xor
out
and
and
push
xor
or
nop
ljmp
pop
or
sub
mov
je
test
flds
and
sbb
stc
and
faddl
xchg
sub
enter
jae
xor
or
jg
sub
test
push
outsb
movsb
cmp
mov
cmpl
push
les
xchg
dec
push
cltd
mov
testb
mov
arpl
mov
and
lock
int
lods
xor
xchg
test
mov
jp
lcall
mov
push
cmc
mov
xchg
lret
jl
sbb
out
cmp
lcall
movsl
test
mov
mov
add
rorb
mov
pop
icebp
dec
dec
cld
hlt
adc
sub
dec
xor
mov
pop
jbe
dec
sbb
and
test
cmp
ss
push
mov
pop
aaa
or
jecxz
mov
test
adc
adc
xlat
imul
insb
jg
popf
sti
push
xchg
daa
mov
mov
out
xlat
pop
sbb
jp
push
je
add
mov
subb
cmp
mov
fucompp
in
adc
inc
lods
adc
shl
imul
cmp
je
pop
insl
enter
setno
adc
das
cs
in
xchg
fsubl
jnp
jns
xor
jg
bound
mov
movsb
popa
adc
push
xor
mov
jns
mov
lods
mov
lcall
ret
push
push
or
rcrl
xor
sub
mov
les
ds
jb
pop
aad
mov
pop
cmpsl
pusha
inc
in
or
test
pop
jns
sbb
add
test
adc
or
out
mov
movsl
mov
adc
dec
ret
popa
lods
stos
cmc
pop
mov
gs
lret
ret
sub
repz
addr16
mov
jge
xchg
inc
test
scas
and
in
fs
repnz
dec
inc
mov
cmp
push
aam
clc
ror
test
loop
add
inc
xor
ljmp
pusha
addl
fisubl
out
pop
push
aad
adc
dec
daa
sub
es
test
adc
popl
dec
call
out
sahf
xor
pop
mov
test
and
adc
ljmp
pop
imul
test
xchg
mulb
adc
jmp
xchg
js
mov
or
fs
loope
mov
in
add
cmp
mov
xchg
addr16
fwait
mov
movl
test
push
enter
mov
popa
xlat
sbb
cwtl
mov
dec
stos
pop
pop
lock
adc
mov
mov
andps
repz
mov
mov
icebp
dec
xlat
rclb
repz
pop
adc
les
cli
pop
jp
aas
enter
pop
dec
out
jmp
cmc
sbb
lods
lods
inc
gs
jbe
mov
bound
jle
push
inc
movsl
mov
std
mov
insb
and
or
sub
stos
gs
test
lods
and
mov
aad
cmpsb
repnz
sub
mov
cmpsb
cmp
ldmxcsr
test
mov
insl
push
sti
jge
adc
addb
mov
pcmpeqb
jae
push
repz
mov
ljmp
xchg
mov
ss
inc
and
rorl
stos
pusha
mov
xchg
xchg
stos
fists
jns
pop
xor
adc
stos
inc
popf
pop
js
daa
vpsubsw
mov
jae
stc
pushl
ret
mov
pop
push
pop
scas
inc
fs
int3
insb
insl
push
js
sahf
xchg
mov
add
test
xor
pop
inc
pop
add
loopne
bound
outsb
sbb
out
aaa
or
inc
pop
xchg
fwait
dec
repnz
jl
es
addr16
push
sti
mov
lret
mov
push
leave
mov
pushf
xchg
shll
ret
adc
adc
dec
pop
xlat
pop
out
lcall
iret
ret
loopne
xchg
push
inc
lods
cli
push
jns
push
std
push
sti
std
hlt
loope
insl
adc
dec
ljmp
push
pop
pop
int
addr16
sbb
subl
xor
or
leave
push
jmp
xor
xchg
dec
jl
das
or
and
movsl
scas
jbe
out
pop
sbb
in
mov
sbbb
push
fdivrp
ror
add
mov
pop
cs
add
ja
std
cmp
mov
int3
inc
push
fmuls
adc
cs
or
sub
out
add
xchg
lret
jo
test
and
mov
mov
push
add
lcall
test
xor
sbbl
icebp
sbb
dec
shll
add
jmp
mov
inc
pop
xchg
pushf
sbbl
out
jb
aaa
cld
sti
xor
cmp
adc
push
add
and
repz
jne
xchg
dec
inc
mov
sub
or
mov
jecxz
es
les
sub
mov
lret
movsl
adc
mov
sbb
sbb
insb
jne
add
inc
mov
addb
xor
sbb
mov
cli
call
mov
sub
outsb
or
sbb
aam
xor
roll
incb
jb
stos
orb
out
cltd
insb
mov
mov
gs
fs
in
mov
jnp
imul
sti
sti
and
sbb
mov
fmull
aaa
sahf
push
movsl
and
pushl
icebp
inc
incb
scas
ja
pop
lret
and
sub
jno
ret
xor
pop
aaa
or
fmuls
fidivs
lret
sub
lods
cmc
mov
addr16
call
in
loopne
dec
cld
movsl
lret
shr
outsl
or
ljmp
enter
mov
gs
imul
sbb
xchg
mov
push
insl
fmull
dec
mov
adc
lahf
nop
xlat
xchg
into
and
enter
into
mov
hlt
mov
mov
jb
add
mov
pushf
xor
adc
mov
cmpsl
insl
rclb
test
mov
ret
addr16
shll
push
mov
imul
push
mov
sub
pop
outsb
div
and
insl
arpl
lods
sub
sahf
and
push
stos
push
clc
orb
imul
jecxz
ljmp
das
cld
push
rcr
jno
call
inc
cmp
test
pop
mov
jae
sbb
pop
mov
jl
xchg
adc
mov
cli
testl
xchg
test
sub
popl
fbld
pop
in
jne
push
mov
and
cwtl
test
les
xor
inc
sti
out
insl
add
push
fldt
sub
mov
mov
jmp
and
mov
jl
mulb
fwait
and
mov
lods
loope
sbb
pop
sub
pop
fstpl
out
mov
je
mov
rolb
xor
addl
xor
xor
inc
dec
cmc
cmp
scas
xchg
mov
xchg
push
pop
or
movsl
imul
lret
stos
fmulp
sub
jb
fbstp
and
mov
pop
fisubs
cltd
push
and
push
push
mov
pop
ss
ret
imul
fdiv
je
cmpsb
fsubp
push
dec
enter
cmp
jbe
aaa
mov
mov
loopne
and
clc
insb
test
ja
sbb
loopne
fcmove
xorb
cmp
aad
movsl
js
jo
inc
test
dec
xor
push
ret
out
push
clc
in
cmp
mov
xchg
sbb
xor
pop
xchg
push
iret
mov
lcall
mov
mov
inc
add
fsubl
adc
fistps
add
sbb
int3
sub
pop
data16
xchg
mov
lods
outsl
cmpb
push
mov
or
or
mov
loope
into
xchg
xchg
cmp
mov
mov
pop
fcoml
push
movsl
pusha
add
mov
scas
fidivs
cmp
jne
sahf
loope
and
adc
pop
fisubl
add
pop
and
xchg
mov
xchg
or
push
popa
pop
lret
in
dec
std
xorl
dec
std
stc
mov
int3
or
int
ss
mov
xor
das
sbb
or
push
jns
dec
dec
shlb
popa
pop
mov
sahf
sub
push
xor
in
pusha
mov
pop
sub
inc
mov
loopne
fistl
sbb
mov
mov
iret
pop
scas
jns
mov
gs
mov
mov
stc
ja
and
testl
shlb
cltd
cmova
xchg
repnz
subl
xorl
in
fisubs
aam
ds
sbb
jg
sahf
scas
push
jbe
mov
adc
cmpsb
popa
push
cmpb
enter
sbb
push
pushf
mov
dec
cmp
sub
rsm
inc
or
jne
idivb
pop
xor
add
xchg
add
sbb
out
testl
rorb
aam
ja
cmp
iret
orb
loop
jb
and
fistl
rcrb
or
lahf
mov
push
mov
mov
dec
ror
cmpb
sarl
popf
adc
icebp
jmp
shl
sti
add
insb
adc
mov
fmul
rcrb
fnstcw
rorl
ss
roll
inc
je
imul
jnp
mov
xorb
je
xchg
dec
clc
cli
fimuls
ret
pushf
cmpl
adc
lret
pushf
pop
xchg
test
sbb
inc
or
cmpsb
xor
inc
aas
adc
cmp
in
mov
mov
mov
xor
inc
gs
repz
popf
imul
clc
repz
ja
pushfw
sub
das
inc
test
cld
dec
loope
out
push
pusha
mov
scas
mov
shrb
rclb
arpl
jo
out
ss
jnp
xchg
sbb
movsl
lock
adc
ficompl
sti
jge
ljmp
xchg
mov
out
dec
sub
fwait
push
cmp
mov
subb
sbb
pop
das
inc
add
stc
fs
or
xchg
shufps
test
je
dec
sub
into
mov
or
pop
stc
testb
xchg
mov
data16
pop
das
dec
ja
mov
mov
jp
je
pop
sti
jp
and
dec
test
sbb
cs
pushf
movsl
sub
test
es
jbe
aas
ds
adc
cs
pusha
in
add
out
jp
sub
cmp
mov
orl
inc
mov
rorl
imul
enter
and
adc
mov
in
js
add
cmpsl
mov
aam
dec
repz
adc
insb
jl
and
jmp
test
mov
ds
stos
arpl
popf
in
jg
push
push
and
push
jb
add
daa
sub
ljmp
pop
cmp
add
movsl
sahf
ja
inc
mov
mov
clc
cmp
sbb
arpl
inc
dec
mov
or
es
fs
or
mov
cltd
mov
leave
mov
ljmp
inc
cmc
and
push
xchg
jns
mov
andl
xchg
dec
cmp
mov
pop
mov
dec
ret
xor
imul
adc
pop
lahf
sti
test
enter
add
push
in
ror
js
jecxz
pop
clc
lods
mov
insb
enter
pushf
jmp
shlb
stos
cmp
adc
imul
subb
dec
dec
inc
das
mov
push
lods
subl
inc
ficoml
fwait
or
push
push
adc
jl
lahf
pop
mov
mov
std
adc
mov
std
jecxz
sti
mulps
ret
cs
jle
jo
inc
adc
adc
push
ret
dec
mov
imul
ja
adc
ret
movsl
sbb
lret
outsb
imul
ret
or
sub
imul
jp
dec
pushf
popa
leave
iret
push
push
js
jo
andb
es
push
xchg
lret
ret
jecxz
sbb
pop
and
and
cmpb
or
std
popa
xor
mov
shlb
jno
in
xor
scas
pop
adc
pop
add
js
jne
cmc
xchg
clc
int
dec
sbb
push
add
bound
bound
inc
lea
ja
mov
push
and
sbb
push
cmpsl
lret
push
inc
jmp
or
hlt
xchg
add
sub
imull
mov
arpl
sbbb
mov
adc
cmpl
adc
push
xor
js
push
lods
sub
adc
out
imul
movsb
mov
leave
inc
xor
pop
repz
push
xchg
leave
mov
jp
mov
xchg
psubusw
adc
jle
outsb
loop
pushf
pmaxsw
ret
fst
sbbl
dec
jno
sub
push
push
insb
stos
jl
sbb
clc
into
cld
loope
mov
dec
movsl
subb
xchg
inc
lds
imul
mov
lret
repz
push
in
dec
add
repnz
jb
mov
fcmovnbe
incb
lret
mov
push
cmc
add
fstps
push
leave
xor
xlat
cwtl
inc
mov
stos
in
pop
pushf
sti
dec
jmp
int
sbb
fldt
aad
insl
jp
pusha
cmpsb
jnp
jns
cmpsl
fs
dec
test
and
xorl
popa
cmp
lods
jle
or
lods
mov
adc
jo
mov
cmp
bound
mov
cli
aaa
xor
popf
adc
leave
pop
jns
xlat
sub
mov
add
inc
scas
push
xor
mov
sbb
dec
mov
mov
push
sub
add
mov
sbb
fistps
push
sahf
lcall
stos
pop
push
je
dec
cmp
call
lahf
pop
fcompl
in
pushf
mov
add
insb
imul
add
dec
fsubr
xor
pop
ljmp
and
ffree
sti
sbb
sub
xlat
pmovmskb
mov
out
les
jmp
xchg
int
aas
push
fs
adc
and
mov
push
fists
mov
push
fs
push
pop
mov
push
add
and
popf
dec
aam
jns
sahf
cwtl
ljmp
ficoms
fcompl
push
seto
pushf
pushf
mov
test
add
out
shl
je
jns
shr
aas
in
cmc
outsl
pop
xchg
jmp
sbb
dec
pop
cmp
sbb
repnz
pop
fmuls
fwait
daa
div
outsb
pop
repnz
fs
add
lock
fisubs
xchg
jno
xor
mov
repnz
flds
imul
dec
push
inc
insl
pop
addr16
mov
add
push
lahf
sti
scas
in
aas
sub
jae
lods
xchg
mov
xor
stc
clc
ja
scas
pop
pop
test
jmp
or
dec
repz
cmp
lret
xchg
cmp
js
outsb
lcall
jmp
dec
dec
out
xchg
mov
pop
and
pop
push
imul
dec
cmp
dec
call
push
jbe
cmp
aas
insb
lods
push
adc
push
xor
jne
xchg
dec
inc
out
lods
insl
repz
xchg
rclb
jge
std
adc
xor
insb
out
neg
js
aad
roll
push
jno
cld
add
pop
adc
jno
and
test
push
mov
sub
scas
inc
mov
clc
jno
inc
push
ja
testb
aad
test
push
xor
insb
adc
test
mov
cmp
jecxz
inc
cltd
divl
add
add
adc
int3
push
pusha
cltd
orb
pusha
into
add
dec
pusha
outsb
xlat
cmp
aaa
mov
jnp
jbe
dec
shlb
sub
jg
aas
bound
stos
sub
sbb
jno,pn
fadd
pop
mov
inc
dec
mov
push
cmc
push
sub
ja
inc
mov
add
fwait
mov
fidivrs
out
adc
fstpt
sub
out
cmp
in
cmp
insl
test
sbb
or
sti
adc
das
pop
add
ljmp
dec
faddl
mov
mov
incl
mov
fdivrs
cmp
cmpsb
sbb
push
test
mov
mov
sar
xchg
mull
jae
pop
scas
mov
scas
lock
out
adc
cmpsb
insl
push
inc
orl
mov
ret
pushf
shrb
cs
rol
shl
add
pushf
ret
nop
push
jl
dec
lock
das
jns
fistps
sbb
and
jnp
out
jb
mov
jmp
addb
movsl
cld
mov
mov
in
imul
or
divl
pop
decb
add
cli
shlb
in
and
cmp
sti
ror
and
mov
add
loope
mov
mov
fildll
ds
pushf
icebp
subb
mov
rorb
mov
notl
xor
out
pop
jle
movsl
pusha
adcl
xchg
adc
repz
xor
and
mov
js
lcall
xor
mov
lods
cmp
mov
movsb
cltd
cmp
or
xor
and
and
dec
iret
imul
inc
hlt
enter
leave
pop
ljmp
popl
ret
push
sub
jmp
jne
xlat
cmp
mov
das
adc
les
mov
jae
rcll
ljmp
xchg
in
adc
cmp
xor
gs
xchg
jle
adc
sub
int
mov
xor
ret
jo
xchg
scas
lds
and
not
jle
pop
mov
push
mov
and
pop
lahf
pop
int3
jnp
lret
mov
ret
xor
lcall
mov
sti
fimuls
cli
lea
pop
cmpsb
popa
adc
addr16
dec
ret
xchg
enter
jl
fidivl
inc
pop
bound
aaa
lcall
xorl
dec
in
lea
adc
mov
stos
mov
aad
orl
sub
sbb
pop
mov
mov
lds
popa
insl
xor
fcoml
arpl
lea
sub
push
test
aas
mov
cld
sbb
sbb
leave
jge
test
mov
mov
cmp
mov
sarl
popf
inc
dec
add
rcrb
imul
subb
sbbb
lds
xchg
gs
addr16
or
sti
lret
pop
sub
fnstsw
jbe
adc
xor
pextrw
cmp
pop
out
dec
int3
or
faddp
movsl
push
xor
push
iret
lods
ret
js
mov
aam
add
xchg
inc
xor
cltd
mov
aam
push
ljmp
imul
jg
int3
pop
pop
jecxz
pop
dec
filds
cmpsb
bnd
xchg
jo
inc
xor
fdivp
ficomps
sub
jo
adc
stos
dec
imul
movsb
sub
out
add
cmpsl
stos
mov
ret
xchg
inc
xchg
sbb
push
and
and
inc
dec
jge
sbb
pop
cli
mov
shll
out
testb
sub
mov
loopne
add
in
cmp
icebp
ljmp
dec
and
fwait
and
shrl
insb
mov
pop
inc
jnp
sub
pushf
xorl
sub
mov
neg
fbstp
xchg
clc
call
mov
adc
add
out
sub
mov
ret
pop
shl
pop
daa
add
fs
mov
lret
cld
nop
fwait
inc
clc
xchg
mov
into
cmp
add
xchg
lods
push
jp
cmc
sub
int
subl
gs
add
cmp
mov
or
cmp
addl
ds
ljmp
imul
mov
bound
ja
xchg
aam
mov
rolb
xchg
mov
sbb
fbld
insb
sub
mov
rcl
shll
xchg
movsb
and
int3
and
xchg
loope
lods
inc
inc
and
dec
push
xor
repz
lret
sbb
push
cwtl
mov
pop
xchg
pushf
push
mov
add
daa
mov
sbbl
out
and
test
adc
adc
mov
and
jb
testl
ficompl
inc
loope
mov
arpl
and
dec
and
nop
sub
jle
dec
bound
out
sub
push
and
add
adc
out
pop
cmp
das
sub
pop
faddp
sub
into
adc
pop
mov
je
insb
rolb
subl
mov
adc
dec
inc
std
test
into
dec
mov
out
repz
dec
xor
dec
insl
push
jge
pop
pop
mov
push
jbe
xchg
out
xchg
xor
movsl
add
loope
push
xchg
sahf
dec
inc
sub
gs
pop
mov
mov
mov
in
leave
sbb
pop
cmp
rcr
adc
aas
test
es
adc
loope
inc
mov
and
inc
xchg
dec
mov
shl
stc
push
das
add
test
pop
inc
jecxz
sbbl
mov
sub
shlb
ftst
scas
aad
pop
push
mov
call
xor
popa
jl
lea
mov
mov
jne
and
cmp
pop
mov
xchg
xchg
sbb
push
push
scas
sub
xlat
dec
aad
gs
add
add
in
push
sti
mov
xchg
cmp
push
clc
cmpl
pop
fwait
push
sbb
mov
push
out
jb
jno
loop
xor
ret
push
fwait
bound
mov
push
leave
inc
stos
or
sti
jbe
sub
pusha
xchg
andb
fsubl
lods
dec
sub
aam
rcr
mov
jnp
scas
push
mov
add
dec
jl
xor
fcomps
sahf
or
or
sbb
xlat
imul
adc
lahf
mov
jbe
mov
mov
mov
bound
shll
jmp
adc
outsl
in
jo
add
int3
clc
loopne
test
mov
daa
adc
ja
mov
mov
mov
out
outsl
outsl
nop
and
lods
call
stos
sti
cmp
add
dec
dec
sbb
push
call
lods
inc
adc
sub
xchg
sbb
fs
xor
jecxz
sub
pop
movsl
pop
jae
test
adc
sahf
lret
xchg
mov
dec
aad
call
popa
mov
jnp
jmp
popw
xor
pop
jae
or
imul
or
mov
push
cmp
add
dec
into
pop
fcoml
fisttpl
test
pop
mull
aaa
or
push
movsl
pop
pop
adc
push
sub
notb
cmpsl
add
jo
enter
push
xor
mov
das
nop
jmp
mov
mov
mov
js
push
test
in
popf
xchg
ds
jo
divl
sub
cli
jmp
aam
inc
add
fidivl
xorb
sbb
mov
jmp
lret
lea
call
pop
roll
sbb
sbb
mov
or
add
sbb
clc
cmp
xbegin
int3
pusha
add
pop
adc
jns
aad
jbe
push
cltd
push
push
sub
das
jne
shlb
cmovp
jne
jb
mov
clc
mov
inc
dec
mov
test
dec
and
adc
andb
pop
adc
mov
sub
adc
sar
pop
out
add
push
jno
out
dec
jmp
out
sbb
stos
mov
std
repz
dec
mov
or
inc
mov
xchg
pop
xor
or
fcmovu
sbb
jmp
call
loopne
mov
lds
enter
mov
out
xchg
fsubl
das
dec
mov
adc
xchg
fldl
loopne
pop
js
dec
pop
jmp
dec
push
loop
mov
lods
popa
mov
adc
into
outsb
mov
mov
jb
xorb
inc
scas
xor
inc
dec
inc
or
in
into
cmp
test
test
xchg
push
in
aaa
mov
mov
xor
jg
pop
xchg
pop
int
inc
popf
incl
cmp
sub
aad
shlb
pop
pop
mov
adc
pop
push
mov
pop
insb
mov
or
mov
shrb
xchg
sti
shl
mov
lods
stos
xchg
mov
lods
sbb
fisttpll
out
clc
mov
arpl
add
adc
sub
mov
bt
or
add
mov
mov
stos
in
xor
and
or
xchg
into
push
ja
enter
ljmp
xor
subb
sbb
sbb
les
xadd
lret
xor
xchg
daa
lahf
sbb
and
jle
test
jae
shlb
stc
xor
jge
orb
adc
and
lahf
or
push
cmp
mov
sub
popa
addr16
addr16
in
ret
push
cld
push
jns
push
imul
lds
cwtl
add
or
push
jle
jne
or
xor
xchg
dec
and
cmpsl
adc
sbb
ret
cmp
jno
dec
daa
out
gs
scas
lods
fwait
mov
in
shrb
lret
and
insb
push
pop
movsb
jns
fists
call
mov
fwait
jmp
inc
or
jp
lea
or
pop
fdivrl
imul
sbb
sub
mov
std
ficoms
iret
xchg
fs
mov
mov
mov
mov
mov
pop
mov
inc
fbstp
mov
pusha
cld
into
inc
test
mov
mov
cmpsl
mov
push
in
lret
add
rcr
and
cmp
or
dec
outsb
mov
stc
push
out
mov
movsb
sub
dec
jmp
repnz
clc
dec
fdivr
out
push
push
imull
cmp
shlb
sbb
mov
into
loopne
push
push
jge
outsl
dec
sbb
insl
sbb
sti
xor
fdiv
call
repz
inc
scas
leave
jne
lods
mov
in
imul
jns
mov
xorb
add
or
jl
fstps
int3
es
adc
rcrl
and
or
sbb
ds
add
jle
test
repnz
or
xchg
mov
push
fdivrl
loopne
fucomi
cs
andb
repz
push
xchg
stos
ficoms
sahf
add
fmull
dec
push
lahf
dec
cmp
jb
jg
lock
fisubl
mov
xchg
adc
mov
cld
add
nop
push
scas
bound
pop
sbb
push
jae
lret
jno
xchg
lds
cmp
xchg
cmp
adc
xchg
pop
xor
pop
push
jae
dec
mov
imul
or
push
xor
jb
testl
ret
je
inc
push
sub
int
lcall
sbb
push
decl
jmp
jle
cmp
fs
dec
mov
scas
pop
sbb
adc
sbb
or
fwait
pop
dec
xor
stos
and
or
cmp
dec
icebp
call
and
repz
mov
aad
inc
pop
cs
pushf
or
lods
gs
int3
mov
xchg
or
jecxz
xor
outsb
sahf
jbe
lock
movsl
push
or
jb
mov
std
or
leave
cmp
add
mov
and
cwtl
and
arpl
push
cli
pusha
jl
addr16
outsl
add
imul
les
sub
into
decb
mov
fbstp
es
cmp
jle
sbb
leave
jae
sub
movl
xchg
fs
xchg
imul
mov
dec
adc
jb
aaa
jae
or
int3
sub
cltd
mov
lods
cmp
jno
arpl
scas
and
xlat
sub
dec
pop
mov
in
cwtl
mov
pop
ret
jnp
stc
dec
ljmp
scas
in
sbb
pusha
std
maxps
push
pop
dec
adc
hlt
ljmp
mov
pop
ret
sub
je
ljmp
dec
pop
jmp
mov
xor
lds
pop
scas
mov
out
dec
rcrb
sub
and
test
ret
lds
push
mov
ds
into
sbb
or
repnz
bound
lods
mov
adcb
sub
xchg
or
clc
add
mov
jg
pop
pop
fldt
push
jle
push
roll
and
pop
data16
in
sbb
rcr
ss
pop
dec
daa
bound
popf
jo
aaa
test
dec
sbb
inc
adc
add
xlat
mov
call
inc
mov
sub
and
mov
inc
sub
es
jb
jno
icebp
mov
loop
idiv
xor
incl
dec
lea
sub
fbstp
fcoml
imul
xor
andb
cli
push
adc
iret
cmp
add
and
je
and
rorl
dec
dec
clc
add
jbe
les
test
repnz
and
lods
jge
push
cmp
nop
jecxz
jno
cmp
loopne
jbe
push
loopne
adc
popa
lods
lcall
or
push
and
and
push
enter
push
pop
xlat
xchg
cmp
shl
xchg
imul
jae
jne
popl
stos
in
nop
lcall
daa
cmp
jg
pop
sub
lea
ret
subb
add
mov
movsl
arpl
aas
mov
out
add
cmp
fstps
in
pushf
iret
data16
stc
cmp
cmp
push
out
repnz
jg
or
jg
jge
pop
testl
aam
xchg
sbb
jmp
movsb
jecxz
scas
nop
loop
aaa
adc
gs
jmp
mov
lods
pop
cmp
ja
insb
and
mov
andl
movsl
nop
xchg
sub
xchg
mov
sbb
or
aad
jno
dec
jae
add
inc
pop
sbb
push
dec
ljmp
sub
xor
ret
es
movsl
push
addr16
mov
cmp
arpl
sub
push
loop
dec
lret
test
pushf
les
sti
ss
mov
mov
es
mov
and
xor
lods
mov
fbstp
jae
cmp
fadds
mov
push
sub
outsb
rcl
xor
in
jl
cmp
push
mov
ljmp
leave
sti
lods
xor
jo
jne
cmc
test
les
scas
push
dec
in
cmp
dec
arpl
mov
cwtl
pop
xor
mov
adc
push
mov
dec
sti
mov
inc
fistps
cmc
scas
mov
or
in
mov
incl
pop
movsb
pop
repnz
mov
or
sub
dec
mov
popa
mul
push
frstor
popa
sub
adc
mov
ret
scas
sbb
xor
and
mov
fldt
out
mov
stc
iret
frstor
push
lcall
and
dec
jo
push
in
arpl
popa
or
insb
ficoms
jle
mov
jmp
push
cld
fildl
mov
in
cmp
push
jge
sub
or
lcall
movsl
movsb
sbb
mov
in
cmpl
and
xor
enter
add
inc
or
es
and
adc
adc
test
xor
shll
mov
call
sub
into
movsl
jp
test
mov
xor
popa
inc
lret
push
cs
or
sbb
push
test
into
push
inc
push
jo
loope
jge
orl
addb
cmc
jl
adc
lock
popa
xor
in
inc
pop
imul
shr
push
cmp
cltd
push
testl
pop
cltd
pop
push
add
adc
orl
mov
pop
jne
xor
lods
mov
xchg
lods
push
addb
aad
add
jbe
clc
sub
inc
dec
out
lods
movsl
dec
push
mov
xor
fsubs
mov
adc
idivb
fcmovbe
shlb
gs
xchg
dec
into
or
clc
mov
or
and
pop
fstps
hlt
push
pushf
out
pop
and
lret
stos
pop
outsb
xchg
xor
dec
cmp
imul
push
lock
jg
test
daa
sub
aam
lahf
or
or
mov
ret
mov
cmp
mov
stos
out
jp
or
push
pushf
sbb
std
mov
mov
arpl
cli
dec
mov
in
cmp
cmpsb
mov
outsb
mov
jg
leave
mov
roll
mov
insb
bound
movsl
arpl
mov
icebp
notl
cli
add
mov
jnp
rcll
lahf
jl
pop
cmp
xor
ds
xlat
or
mov
inc
sub
or
dec
cmpsb
xor
jnp
or
ss
in
add
out
pop
lea
adc
lea
dec
or
adc
ja
in
lahf
sub
dec
stc
ficoms
stc
add
out
sbb
adc
pop
incl
pop
jne
pop
cmpsl
mov
xchg
adc
repz
push
fisubl
cs
dec
std
aam
aam
sub
add
rcl
popf
jbe
xchg
ret
jmp
sbb
mov
mov
ret
jb
inc
mov
scas
mov
xor
pop
adc
aas
mov
loop
mov
data16
das
in
stc
cmp
cmpl
pop
loopne
aad
add
js
inc
sahf
pop
cmpsb
loope
pop
popa
cmp
mov
add
pop
sahf
or
fnstsw
sbb
addl
inc
popf
ret
pushf
pop
dec
stos
repz
and
mov
mov
xchg
cltd
rcrl
cld
les
movsb
cmpsl
dec
stc
ret
out
pushf
imulb
push
mov
and
cmp
dec
pushf
shrl
pop
js
push
mov
mov
dec
test
inc
repz
adcb
stos
xor
fs
jne
jb
das
push
jne
and
lods
popf
aaa
push
pop
xchg
push
daa
xchg
or
xchg
push
fwait
cmp
ds
inc
xchg
jae
mov
mov
mov
xchg
in
in
bound
push
xor
lcall
mov
aaa
jp
leave
sub
test
pop
add
and
xchg
rol
mov
cmovns
pop
cltd
mov
cmpsb
and
icebp
xchg
sub
cwtl
jns
xor
shll
in
rol
pop
pop
out
push
jnp
out
sub
cld
fidivl
test
adc
add
mov
and
sbb
inc
sbb
jo
mov
xor
add
int
mov
mov
orl
loop
and
pop
ljmp
lahf
jnp
xchg
mov
xchg
test
sbb
out
mov
test
mov
lods
and
mov
or
repnz
cld
es
shrb
iret
dec
scas
jmp
sub
cmp
lea
int3
lods
test
jp
and
or
xor
in
jl
test
or
pop
cld
ja
xor
sbb
xor
out
dec
sub
mov
sarl
xor
pop
push
pushf
pop
repnz
pop
dec
scas
mov
iret
lea
fisubl
data16
jb
adc
jle
lods
jnp
and
or
insb
fcompl
lea
dec
enter
or
lds
jmp
mov
xchg
lock
dec
xchg
stos
bound
aaa
xchg
aas
cli
push
xchg
push
pop
pop
inc
in
nop
out
shrl
jbe
int
clc
aad
dec
les
inc
fcomi
xor
push
iret
test
mov
pop
addr16
cmc
sub
jne
scas
fcoms
sub
jbe
call
adcb
xor
xor
insl
test
lods
pop
fimull
push
dec
cld
jle
push
xor
std
bound
adc
xchg
addr16
popf
mov
repnz
je
add
cmc
cmp
push
call
into
cmp
xor
dec
ds
dec
mov
insb
mov
mov
push
je
jbe
iret
dec
insl
sbbl
xchg
add
jae
lahf
rcl
ds
stos
std
out
cmpsl
mulb
inc
aaa
les
inc
in
push
mov
mov
lds
mov
jnp
or
scas
mov
xor
inc
cs
mov
xor
jl
mov
push
inc
pop
scas
dec
loop
pop
decb
ss
sub
cwtl
stos
pop
and
out
ss
and
adc
ja
push
jnp
dec
scas
icebp
rcl
cmp
sbbb
push
xchg
sbb
stos
cmovns
add
xchg
jp
xor
lcall
xor
cmp
jbe
and
popf
xor
dec
pop
push
adc
pop
mul
mov
out
mov
out
repnz
mov
mov
dec
mov
das
outsb
insb
test
add
mov
push
mov
adc
jle
sbb
push
leave
lods
adc
sbb
shrl
mov
insl
mov
js
inc
sbb
and
cmp
mov
loope
push
ror
fndisi(8087
mov
lahf
inc
jns
xchg
dec
sti
add
push
or
mov
xchg
adc
fwait
xor
dec
add
shrl
push
cmp
lahf
pop
sbb
mov
jne
addr16
push
test
mov
mov
div
cmp
fisttpl
jl
cli
cmpl
lods
mov
dec
or
sbb
out
rcll
loopne
fists
xchg
lea
or
sbb
push
or
xor
in
adc
push
incl
mov
loope
push
out
bound
push
jno
and
sti
mov
repz
cmpsb
orb
sub
punpckhbw
cmp
mov
cmc
into
adc
mov
lcall
xchg
sub
mov
xor
cmp
lret
or
dec
mov
in
ss
push
adc
les
inc
stos
jb
test
lcall
shl
mov
scas
nop
mov
adc
dec
pusha
data16
fnstsw
cld
stos
mov
ror
getsec
fs
int
lret
or
and
jge
or
in
pop
mov
or
mov
and
sti
mov
lods
xchg
xor
sub
push
cmovo
dec
out
pop
imul
or
aas
out
test
aas
jne
stc
repnz
mov
lcall
cli
mov
push
and
pop
test
xchg
fildl
mov
pop
popf
jmp
pop
shlb
add
repnz
popa
sub
arpl
outsb
cmp
jae
rclb
popf
ret
adc
fistpl
cmp
adc
sbb
addr16
push
nop
icebp
repnz
push
inc
stc
mov
inc
es
jle
into
xor
sbb
cmp
mov
pop
mov
rolb
rcr
and
dec
xchg
ja
stos
inc
xor
push
lahf
jl
pop
inc
dec
cmp
repnz
jge
inc
jl
mov
sbb
inc
testl
xchg
clc
movsb
movb
sbb
std
ljmp
bound
jne
dec
pusha
jbe
push
push
imul
lods
pop
xor
call
pusha
cli
imul
sub
flds
sbb
nop
hlt
cmp
inc
call
pop
rorl
stos
jecxz
sub
stos
out
hlt
mov
stos
add
sbb
cs
inc
and
pushf
or
out
jne
and
or
mov
jnp
nop
xchg
xchg
ret
xchg
inc
push
mov
test
outsl
or
rol
cltd
jle
js
cld
push
dec
jo
ffree
cmp
fildl
fists
mov
lods
jl
adc
repz
jg
jge
cmp
loope
lret
and
adc
sub
mov
mov
jnp
xchg
cmc
push
mov
push
out
jns
iret
mov
jg
ss
push
sahf
inc
xchg
scas
mov
out
test
insl
loop
lock
daa
lahf
xor
das
ret
mov
popf
jg
mov
loope
inc
pop
adc
data16
or
push
test
jmp
popf
clc
aas
int
pop
sar
jnp
mov
es
sbb
fidivrl
shll
clc
dec
dec
mov
mov
in
mov
fsubs
test
push
or
dec
adc
push
mov
outsl
mov
and
jmp
pop
mov
jp
add
xchg
and
mov
jo
shll
and
cli
jno
sub
cld
xchg
test
mov
shl
scas
cltd
lret
arpl
shlb
or
mov
adc
int
adc
loopne
xchg
sub
push
mov
negb
mov
test
jb
in
cmp
orl
in
arpl
mov
jl
cmp
sub
inc
orl
jl
mov
cwtl
jl
and
cmp
in
ltr
lret
xor
nop
dec
fisubl
mov
icebp
xchg
mov
sti
loopne
sbb
mov
pop
loopne
scas
mov
aad
xor
clc
jmp
or
pop
jae
mov
aas
repnz
repz
jmp
cmp
fildll
fnstcw
jns
scas
in
add
imul
push
rclb
inc
jns
stos
jne
xlat
fsts
pop
sub
mov
in
push
in
cli
or
ror
push
lret
jno
inc
notb
or
or
adc
jns
jl
jne
xchg
sbb
lea
or
dec
jmp
adc
lock
mov
and
ret
lods
loopne
test
popf
sar
jb
inc
out
sbb
aad
repz
cmpsl
mov
sbb
iret
mov
lret
pushf
pop
sub
dec
dec
and
mov
jle
lds
pshufw
cwtl
and
xchg
cmpsl
xchg
fs
test
imul
mov
inc
es
in
cmp
bound
ljmp
xchg
or
clc
sub
inc
xlat
pop
jnp
jmp
pop
or
xchg
inc
cmp
sbb
and
and
push
arpl
or
fisubrs
mov
jmp
idivl
daa
fstpl
add
push
mov
and
jb
inc
jge
inc
es
xchg
push
aas
inc
fistpl
add
pop
xchg
mov
inc
cltd
mov
dec
sbb
imul
push
fistpll
addr16
cltd
loop
dec
pop
mov
dec
cmc
clc
push
cmp
sub
ret
mov
stc
push
popf
out
addr16
dec
sub
mov
enter
push
or
add
jl
add
sub
das
lahf
out
cmpb
mov
xor
jne
repz
push
fistps
lcall
repz
lods
sub
xchg
push
addr16
jmp
cmp
cmpsl
int3
sub
adc
and
sub
or
arpl
adc
mov
or
aas
jns
cmc
mov
sbb
cmp
cld
aaa
lock
jmp
push
fs
cmp
dec
fdivl
lds
bound
dec
lret
add
mov
push
sub
sub
pop
testb
xor
and
jge
pop
adc
in
lds
lahf
int
cwtl
adc
and
fadd
test
sub
cmc
je
xchg
jle
enter
scas
rorl
repnz
iret
je
and
cld
hlt
dec
scas
adc
in
add
sbb
nop
jno
add
push
adc
lcall
xor
outsl
pop
jno
lahf
and
dec
test
pusha
pop
push
pop
sti
jecxz
in
sbb
add
fimuls
lods
iret
cwtl
sub
adc
sahf
test
nop
bound
lock
lahf
dec
and
call
test
mov
bnd
test
scas
pop
push
aad
cs
scas
leave
xchg
mov
call
lcall
test
dec
inc
sbb
push
mov
lods
xchg
sbb
sbb
xlat
jp
clc
sbb
xchg
push
pop
sub
push
das
mov
ffree
inc
and
insl
and
xchg
scas
adc
sbb
stos
incb
testb
mov
test
mov
arpl
bound
xchg
cmp
les
arpl
lods
shrl
addb
test
sbb
xorl
shll
lock
pop
pop
mov
xchg
outsb
rclb
sub
in
fidivl
jno
jmp
sbb
jbe
ficomps
add
pop
popa
lahf
mov
jbe
jae
mov
sub
test
push
mov
mov
cmp
das
and
movsl
jo
outsb
push
mov
xchg
dec
call
sbb
mov
jae
mov
mov
mov
inc
loop
stos
inc
cmpsl
bound
out
fiadds
fnstenv
test
pop
inc
dec
rolb
mulb
stos
ljmp
nop
lret
jmp
dec
repz
in
xchg
xor
and
mov
xor
fsubrs
add
xchg
xor
sbb
jle
push
mov
cld
ja
repnz
sbb
mov
adc
adc
dec
mov
push
je
cwtl
pop
mov
add
cli
insl
inc
mov
inc
mov
and
hlt
aad
in
rorl
lret
jmp
cmp
xchg
jg
push
lods
popf
hlt
pop
fildll
rorb
in
mov
pusha
fsubrp
test
jge
mov
add
into
xor
movsb
inc
orb
fisttpl
mov
leave
or
fs
jle
inc
dec
ss
out
add
ret
inc
adc
pop
loopne
xor
push
cmpb
insl
lret
sub
ret
in
sub
pop
stc
addr16
test
lret
mov
aaa
mov
mov
xchg
inc
jae
sub
push
outsl
dec
mov
subl
sbb
inc
das
or
jns
mov
arpl
inc
inc
std
dec
mov
dec
xchg
cmc
roll
cmp
adc
test
jle
pop
inc
inc
jne
arpl
cmpsl
xchg
test
jmp
push
fwait
inc
inc
call
cmp
es
mov
test
mov
fs
pop
rep
adc
push
cltd
popf
inc
mov
dec
int3
jo
mov
lods
aaa
jo
outsb
mov
ljmp
rorl
pop
jmp
mov
mov
ret
mov
enter
lahf
rclb
add
mov
ljmp
inc
dec
push
cmpsl
mov
mov
or
leave
dec
hlt
icebp
and
adc
push
cmp
popa
and
cmp
add
sbb
push
cmpb
fstpt
jmp
ljmp
sbb
jnp
cmp
std
enter
sub
fdivl
xor
inc
movsl
js
xor
stc
jo
cmc
mov
mov
xchg
popa
mov
loope
jl
gs
popf
stos
loop
sar
cmp
lods
gs
mov
pop
pusha
movsl
mov
arpl
inc
stos
xor
jmp
int
jge
jnp
outsb
daa
mov
pop
sub
sbb
stc
add
add
mov
das
push
sbb
out
stos
xor
movsl
mov
cltd
divl
aas
mov
test
pop
and
xorl
out
decl
imul
roll
adcl
cmp
dec
rolb
push
cld
aas
je
jmp
aam
mov
push
in
je
cli
bound
sti
dec
mov
jb
rcrb
sti
jne
sbb
xor
xor
int
out
mov
notl
cmp
jl
mov
lret
mov
sbb
faddl
or
xchg
mov
outsl
adc
pop
mov
sahf
cmp
fs
aam
jp
sbb
jle
mov
xchg
mov
test
mov
scas
sahf
and
push
or
sub
flds
bound
or
adcl
mov
cmp
xchg
aaa
idivl
xchg
insb
lret
stc
stc
int3
fdivs
xchg
inc
jb
push
out
lea
add
cmp
cmp
imul
inc
test
mov
divl
sub
arpl
sbbl
push
notb
xchg
iret
jns
pop
or
scas
insl
clc
rclb
test
out
roll
mov
dec
push
jo
jb
cmpl
loop
lea
mov
outsb
inc
dec
xor
and
jae
jmp
lea
inc
lret
add
sub
adc
mov
xchg
cmc
jo
cmc
cmp
pop
sbb
cmp
pop
inc
mov
scas
call
lret
inc
outsl
enter
cmc
enter
cmp
dec
lea
leave
sbb
jmp
inc
inc
bound
push
jmp
bound
xchg
sbb
push
xor
repnz
mov
repz
clc
jp
or
pop
pop
add
xchg
cmpl
pop
aaa
lret
cmp
out
push
outsl
lret
repnz
inc
and
add
icebp
cmp
and
es
in
push
and
sbb
icebp
xchg
flds
hlt
xor
inc
outsl
or
cmp
loopne
and
dec
xchg
add
lret
cmp
push
add
lock
inc
cmp
pop
mov
lods
mov
gs
stos
fwait
sub
mov
jns
mov
je
mov
cld
mov
or
cli
or
hlt
int
sub
scas
ret
xor
sub
pop
testb
fmull
cmpsb
gs
out
test
dec
sti
ret
cs
loop
aas
xchg
lcall
cs
jne
xchg
in
fiadds
dec
sbb
pop
jne
jb
in
call
gs
shl
mov
movsb
test
out
fimuls
dec
mov
inc
lcall
divb
cmp
dec
and
icebp
inc
pop
aaa
push
stos
cld
mov
inc
xor
cli
xor
pop
push
xor
aad
push
test
arpl
adc
pop
cmc
dec
test
ss
add
adc
push
xor
insb
mov
jg
ljmp
in
dec
ja
or
imul
out
aam
stos
andl
add
or
lahf
adc
cmc
or
outsl
maskmovq
testl
push
imul
adcb
clc
xor
andl
adc
call
jp
inc
ss
pop
add
call
clc
in
cmp
cmp
push
cwtl
or
mov
cmp
adc
add
dec
xchg
inc
mov
mov
jecxz
popf
enter
movsl
inc
cs
jo
push
pop
test
add
in
cmp
xchg
lcall
nop
sub
sbb
xchg
cld
inc
push
mov
inc
xor
inc
mov
lods
test
inc
sbb
adc
inc
test
movl
fwait
test
inc
cmpb
inc
dec
adc
imul
daa
jnp
movsl
js
clc
out
xor
mov
pop
decb
dec
push
or
mov
cmp
call
mov
sbb
cltd
push
push
adc
in
and
or
fists
ret
cmp
sbb
in
adc
hlt
scas
aas
sub
fucomp
mov
pop
negl
dec
dec
jbe
add
xlat
push
adc
push
xor
stc
fsubs
enter
jo
test
shlb
mov
or
add
int3
cmp
je
pop
push
ljmp
roll
and
jo
js
fsts
add
mov
mov
mov
xchg
cs
dec
push
imul
addl
cld
inc
in
out
dec
xchg
sub
push
push
or
dec
push
notb
xlat
stos
cwtl
loop
shr
xor
jnp
push
loopne
adc
push
adc
mov
and
push
sbb
in
fs
xor
cltd
push
xchg
pop
sbb
cs
ss
mov
lret
inc
cltd
testb
mov
daa
imul
int3
iret
or
jp
jmp
insb
out
mov
and
dec
dec
std
cmp
ja
sti
mov
pop
and
fadds
imul
jmp
leave
fwait
sbb
push
sub
xchg
insb
rol
ljmp
jg
push
cltd
jmp
insl
cwtl
mov
loope
loop
ljmp
dec
cmp
cmp
mov
movntps
xchg
in
dec
setae
xchg
push
ja
xor
in
imul
insb
mov
dec
xchg
push
pop
add
pop
stc
xchg
in
sbb
fidivl
mov
jno
out
mov
imul
mov
sub
and
cmpsb
or
inc
and
test
gs
rclb
cmp
push
shll
fldenv
sub
cmp
mov
mov
imul
pop
sbb
inc
adc
cltd
fldt
xchg
in
pop
sti
cld
popa
lods
imul
addr16
mov
xchg
lds
int
loope
push
cmp
loop
in
je
sbb
mov
rclb
xor
fs
bound
sbb
mov
mov
xchg
mull
cmp
xlat
shll
in
pop
movsb
jns
rorl
imul
inc
mov
aas
clc
and
and
int
or
dec
mov
test
into
in
test
add
mov
mov
push
xor
test
in
repnz
cmp
js
mov
or
sbb
jle
addr16
mov
cmpsl
fldt
pop
xor
lods
sub
adc
sub
outsl
sarb
mov
iret
or
dec
cmp
outsl
push
jo
jno
mov
push
cmc
xlat
in
push
sub
mov
mov
adc
stc
fucom
sahf
pop
fs
dec
repz
inc
push
xchg
jno
out
jo
sbb
pop
cli
cmpsl
pop
dec
xor
sti
notl
jne
and
fimuls
lret
sbb
xor
fmull
jmp
mov
fs
adc
aam
stc
mov
shll
mov
mov
add
cmc
dec
dec
cli
sbb
subb
lcall
pop
and
jle
mov
cli
adcl
push
fincstp
add
xchg
out
pusha
rcll
mov
xor
inc
js
test
mov
push
icebp
in
movsl
imul
dec
fwait
adc
outsb
imul
ss
outsb
mov
mov
dec
adc
shll
ret
and
cmp
notb
das
mov
imul
cmp
lcall
jge
mov
mov
jns
mov
aam
shl
cmp
xchg
icebp
jle
pop
decb
scas
xchg
les
hlt
mov
insl
insb
ljmp
adc
in
lods
in
jnp
jne
cmp
inc
cltd
mov
cli
sub
adc
xchg
inc
decb
push
fldln2
mov
pop
add
push
push
lea
sub
jo
sbb
mov
add
pop
movsb
mov
cmpsb
nop
fcmovnu
daa
add
mov
add
sub
dec
jne
movsl
aas
adc
dec
stos
shr
loopne
jae
xchg
shl
xchg
pop
or
roll
adc
adc
in
inc
adc
dec
out
cmp
sbb
pop
in
cmpsb
cld
int3
ss
sub
outsb
sub
pop
cwtl
sbb
rclb
nopl
je
jbe
xchg
push
jg
cmp
cmpsl
adc
dec
pop
sbb
push
cwtl
jo
jnp
nop
mov
mov
scas
xchg
mov
xchg
pop
or
es
addr16
mov
dec
jnp
out
inc
lcall
mov
xor
fucomi
adc
cs
popf
cwtl
mov
dec
jns
and
mov
leave
into
out
sub
cmp
or
hlt
js
or
jne
fiaddl
add
fsubp
mov
mov
cmp
stos
mov
cmpsl
jl
insl
pushf
scas
xchg
stc
cmp
jl
or
adc
add
mov
or
inc
adc
sub
jmp
sub
cld
sahf
dec
add
leave
std
jg
movsl
das
mov
stc
adc
insb
in
mov
push
idivl
lods
adc
push
fwait
push
jp
lods
cmp
mov
inc
jl
inc
roll
pushf
mov
pop
sbb
repnz
cmp
push
jns
loopne
and
test
and
fbld
mov
push
out
addb
push
cltd
xor
or
sahf
xchg
cmp
xorl
xchg
mov
sarl
xchg
das
loopne
ds
xchg
insb
rclb
in
test
adc
aam
mov
sub
fdivrs
xchg
add
mov
mov
pusha
adc
sub
inc
enter
mov
test
mov
decb
lea
sub
enter
lret
mov
jmp
cmp
sub
mov
adcl
add
mov
mov
ja
ljmp
jl
popf
imul
mov
push
aam
jmp
add
mov
inc
rol
push
or
inc
pop
xchg
lcall
cmp
fistpl
cmpsb
and
mov
fs
push
out
adc
sar
xchg
adc
test
outsb
dec
dec
ss
adc
dec
repnz
ss
pushl
shrl
or
jge
lret
sbb
dec
xchg
mov
jge
scas
icebp
nop
pop
nop
adc
xchg
and
cld
cmpsb
lock
dec
lds
lret
ss
sub
and
mov
gs
adc
mov
sub
ljmp
lods
enter
clc
sbb
js,pn
or
aam
lock
cmp
inc
subb
cmp
pop
jg
popa
dec
std
popa
pop
je
stos
shll
mov
or
data16
or
lds
xchg
dec
cmp
xchg
leave
lea
pusha
mov
pop
adc
add
and
push
xchg
outsb
adc
sbb
xor
mov
stos
test
adc
jl
jecxz
cli
sbb
imull
pop
dec
daa
mov
or
mov
rorl
push
nop
inc
jle
pop
mov
fadds
nop
fiaddl
sbb
push
movl
sub
loope
int
xchg
rolb
push
push
cli
andb
push
jne,pt
orl
cwtl
cltd
sub
and
aad
fadd
mov
pushf
cltd
adc
inc
popf
and
shlb
out
test
jnp
imul
jne
xchg
push
fs
jl
or
mov
fistpll
addr16
cmp
movsb
jnp
sub
adc
dec
inc
clc
test
sarb
dec
sub
xchg
jo
test
xor
push
sub
cmc
lret
sbb
enter
in
xor
push
push
add
icebp
jmp
xchg
insl
sub
dec
and
mov
test
or
mov
adc
xor
push
and
divl
xor
cli
ret
sbb
lea
push
jns
mov
sti
add
addr16
sarl
inc
xor
jnp
pushf
out
and
lret
and
std
leave
test
jl
lods
mov
sbb
cmpsl
pop
jbe
dec
or
fiaddl
cmp
int
aam
jmp
push
pop
fstpl
inc
push
sub
mov
mov
cmp
insl
ret
ficomps
imul
addr16
push
sbb
cmp
mov
adc
stc
push
jge
and
inc
mov
mov
dec
lret
jnp
mov
pop
scas
mov
jno
adc
jns
mov
add
rcrb
lods
jne
js
add
iret
in
loope
popa
dec
mov
push
push
push
sarb
das
cmp
inc
ret
outsl
decl
inc
sub
aas
pop
and
mov
jns
ss
inc
sbb
dec
push
jnp
fistpll
mov
sbb
adc
lahf
sbb
adc
mov
rclb
mov
out
xchg
jae
or
cmp
push
jbe
and
sub
mov
or
inc
jae
jnp
sbb
xchg
aas
pop
out
aad
push
movsb
sub
cmpsb
test
shlb
out
mov
ljmp
cmpsb
lahf
call
incl
sbb
or
dec
add
pop
lds
stc
aaa
addr16
lds
clc
rolb
ljmp
jg
arpl
sub
dec
es
pop
xor
jle
mov
lret
adc
push
jle
int
shrl
mov
insb
out
outsl
jns
and
add
int3
fwait
hlt
mov
nop
lods
push
cli
jns
mov
push
or
and
add
pop
vpshld
testb
add
outsb
xor
or
loop
push
cmp
inc
int3
dec
or
mov
add
and
sbb
ret
and
jle
inc
lea
xor
lret
cltd
fidivrl
mov
add
xchg
fmuls
aam
in
xchg
add
xchg
in
jp
push
sbb
cmc
out
xlat
cmp
shl
xchg
jb
sti
xchg
mov
mov
cmc
fisubrl
je
pop
add
mov
test
sub
add
xchg
insl
xorb
popf
repz
movl
dec
add
sbb
iret
mov
sbb
fwait
in
mov
out
cli
fmuls
test
sub
add
divb
in
in
push
or
xchg
ja
push
jg
xchg
jb
dec
imul
adc
xchg
sbb
xchg
dec
nop
filds
mov
arpl
inc
cli
fwait
repz
add
arpl
jns
push
sub
std
sub
adc
lcall
loope
fimuls
mov
add
inc
and
leave
inc
hlt
in
inc
lret
sub
jge
jl
push
sub
mov
mov
int
xchg
mov
into
mov
repz
jmp
out
sti
pop
test
adc
loope
inc
pop
jnp
xchg
dec
sbb
gs
insb
jmp
xchg
call
dec
mov
push
nop
lods
leave
cld
jb
scas
xlat
aas
mov
es
imul
sub
xor
ds
scas
ret
clc
mov
inc
mov
add
mov
cmpsl
fistpll
inc
stos
mov
xchg
or
insb
push
push
out
xchg
inc
xorl
mov
mov
jns
shrl
repz
leave
ljmp
mov
ja
or
pop
jg
stos
xor
cli
and
iret
jg
ret
inc
mov
test
push
sub
popf
push
inc
cmc
pop
shr
fmul
xchg
pop
adc
imul
sub
dec
mov
and
jb
es
popl
dec
aas
xchg
add
stos
jno
sbb
jl
xor
pop
inc
fldcw
dec
fidivrl
dec
movsl
or
mov
mov
pop
push
and
and
inc
ret
mov
aas
hlt
push
mov
cmp
jne
fnstcw
jl
js
pop
cltd
inc
jnp
and
cmp
xchg
sub
jecxz
push
inc
mov
es
enter
pop
push
jge
call
jl
mov
xor
cmpsl
std
test
test
jmp
pop
test
dec
lret
loop
fcmovb
ret
adc
call
jo
xchg
mov
ss
cs
fcmovnu
push
xchg
sub
fmul
imul
mov
inc
sub
jns
xchg
sub
cltd
ror
xchg
shlb
in
lods
lea
mov
jns
dec
les
push
or
loopne
add
cmc
inc
or
jl
pop
ret
imul
cmpsl
inc
push
or
popf
psubq
sub
xchg
add
sbb
cmc
test
add
cmc
gs
jp
in
lret
call
cmp
jg
add
mov
pop
mov
jge
mov
ljmp
mov
les
mov
je
icebp
stos
push
ss
data16
loope
dec
rcrb
or
sbbl
subl
cmp
mov
or
jbe
cmp
clc
pop
enter
lret
jae
and
out
shrl
add
pop
or
insl
movsb
divb
push
sub
popf
scas
or
outsl
adc
movsl
cld
mov
loopne
and
sbb
mov
push
push
ljmp
inc
inc
fs
dec
adc
jecxz
stc
pop
int
or
lahf
and
mov
test
imul
mov
add
sarb
fsub
jge
sub
jle
mov
xchg
jns
xorl
cli
loop
sub
lret
jae
jo
push
jb
cmpsb
ja
imul
insl
or
jmp
lods
repz
and
jle
cmpsl
lret
ret
inc
and
cmp
jb
outsl
fs
mov
repnz
mov
cmp
or
aad
fbstp
mov
pop
inc
mov
rorl
icebp
mov
lret
pop
loop
sbb
add
inc
fwait
or
pop
ret
adc
mov
mov
shll
push
xchg
jmp
push
sub
icebp
arpl
les
sub
ret
jmp
sahf
and
ret
jg
loopne
fxch
pop
lret
sahf
in
mov
test
icebp
call
sbb
testb
mov
ja
fwait
cld
jg
jae
out
xchg
dec
mov
jae
pop
cli
nop
inc
cmp
ja
in
mov
pop
and
leave
sbb
pusha
adc
cmp
sbb
aas
add
cmp
lret
mov
pusha
adc
rolb
ss
mov
pop
mov
jp
pop
mov
and
and
push
xor
xchg
fiaddl
das
sbb
js
call
push
les
xchg
dec
inc
mov
movsl
popl
sub
addr16
cmpsb
add
loop
mov
js
scas
popa
rol
idiv
inc
arpl
xchg
in
aas
mov
sarl
inc
out
add
jg
ret
xor
paddsb
sbb
in
loopne
fld
pop
mov
push
push
fimull
insb
in
add
out
xchg
loopne
rorb
aam
or
dec
xchg
xor
lods
mov
cmc
mov
pop
xlat
jns
dec
fcoml
adc
and
std
fdivl
jae
adc
dec
movsb
sbb
mov
jg
insb
shl
push
pop
cmc
dec
das
mov
dec
mov
pop
popa
fcoml
ret
xchg
nop
xor
xchg
pop
add
out
repnz
lret
push
ss
pop
jne
sbb
movsl
mov
bound
cmpsb
xor
jae
test
sahf
cmovge
xchg
call
pop
dec
aam
imul
lds
xor
add
test
movsl
outsl
mov
fs
and
gs
movsl
inc
cmc
fwait
nop
add
stc
sbb
cmp
mov
xor
nop
jl
daa
or
jo
in
insb
sbb
jbe
popl
subl
in
pop
xlat
iret
or
push
inc
push
das
xchg
loopne
icebp
lds
ror
xchg
jp
inc
aaa
cli
dec
mov
outsl
sbb
data16
add
lods
call
sub
sar
adcl
mov
lret
jbe
testb
pop
sub
into
xlat
mov
push
cwtl
arpl
jp
xchg
xchg
inc
dec
out
ljmp
in
clc
ljmp
sbb
int
jns
int
call
sbb
les
or
jmp
or
xor
xchg
cmpsb
inc
dec
xchg
shll
sbb
xchg
cld
mov
add
jne
mov
aas
cmpsl
push
push
xchg
sti
sbb
jbe
dec
js
jbe
dec
and
lods
pop
ljmp
divb
xchg
nop
xor
xor
mull
aad
add
subb
pusha
mov
jae
sahf
aad
cmpsb
push
xchg
div
psrld
add
das
dec
and
fadd
in
mov
test
es
mov
testb
push
ja
pop
ljmp
mov
subb
sub
inc
and
dec
add
fnsave
clc
cmp
cmpsb
and
lock
inc
jmp
pop
scas
mov
outsl
jnp
jge
lahf
push
imul
inc
push
jo
enter
or
fcomps
les
pop
cmp
andl
std
clc
ss
push
pop
lret
mov
adc
add
pushf
sahf
and
dec
adc
sub
mov
inc
or
sti
fnstcw
add
xor
lret
push
into
add
mov
cmpsb
in
sub
out
fidivrl
mov
push
sub
and
jae
clc
and
inc
aas
jb
les
rcrl
xchg
imul
mov
repz
fnsave
xlat
mov
dec
push
cmp
shlb
or
xchg
pusha
pop
mov
aad
push
rcll
aam
mov
sbb
out
inc
shll
mov
pushf
ret
mov
icebp
and
push
jg
adc
mov
pop
cmp
test
repz
jno
pushl
out
lret
das
push
ficompl
popa
arpl
xor
jae
hlt
dec
mov
hlt
ficoml
test
jecxz
mov
jmp
or
jmp
xlat
nop
jp
push
ficoml
mov
add
pushf
out
loop
and
mov
cmp
push
fincstp
popa
xor
sub
sbb
xor
push
rcr
jnp
pop
adc
jl
insl
jbe
jnp
cs
push
jmp
or
cmc
out
paddw
es
outsl
stos
inc
lods
add
mov
jo
or
jo
aam
sub
xchg
jmp
mov
cmpb
mov
sbb
stos
xor
jno
adc
bound
pop
in
enter
add
sub
insl
pop
jne
sbb
testl
es
mov
jbe
in
inc
xchg
test
pop
popf
out
ss
xchg
xor
push
int3
jno
scas
ret
mov
inc
pop
jno
mov
dec
push
es
or
jecxz
push
dec
push
bound
jecxz
mov
or
fmuls
inc
dec
loop
dec
push
mov
mov
fistpll
mov
adc
imul
sub
xchg
xchg
xchg
fxch
data16
mov
jmp
mov
in
mov
push
xchg
out
inc
adc
adc
shr
push
push
cs
dec
data16
push
leave
add
popf
lret
and
pushf
aam
sub
ss
jnp
cmpsl
jl
pop
out
stc
xchg
fsubrs
cld
push
aad
dec
int3
add
or
inc
cmc
mov
lahf
sbb
movsb
mov
idivl
dec
mov
mov
int3
and
ficompl
test
iret
loopne
jp
inc
or
jmp
stos
push
sbb
setbe
jnp
mov
loope
mov
push
fdivrs
pop
into
add
jmp
sub
test
pop
test
pop
add
xor
sub
adc
sub
out
in
push
sub
jno
mov
push
xchg
mov
pusha
pop
dec
lock
inc
jle
lret
icebp
das
test
and
into
fwait
ljmp
xchg
test
fwait
xor
push
movsl
icebp
test
sub
movsl
daa
push
test
mov
les
int3
jnp,pt
pmovmskb
lret
jbe
fwait
and
ljmp
inc
or
push
sbb
sbb
add
mov
test
mov
hlt
inc
hlt
test
xchg
xchg
xor
movsb
imul
jecxz
imul
xchg
dec
mov
push
push
sbb
add
and
fnstenv
aam
cmp
cltd
push
sub
dec
insb
or
outsl
inc
mov
adcb
mov
jle
int3
or
lret
xorb
and
rorl
add
sub
arpl
loop
movsl
xchg
adc
jecxz
lock
xchg
xchg
mov
fnstcw
out
sbbl
cld
mov
ret
imul
lods
decl
ret
xor
das
dec
jmp
jl
aad
lea
adc
cli
and
mov
add
cmp
add
xchg
daa
cwtl
inc
addr16
sub
adc
out
jbe
cmpsb
pop
ffreep
or
mov
jbe
pop
lcall
inc
fisttpll
jl
repnz
int
out
inc
sbb
pushf
jae
cmp
xor
mov
pop
loopne
sahf
ja
addl
sub
or
jb
and
repz
out
sub
mov
jbe
sub
dec
hlt
jge
loopne
adc
xor
cs
cmp
call
cmp
rcr
mov
pop
int3
sahf
add
fistl
cwtl
outsb
ja
pop
ret
mov
add
repz
enter
adc
jp
lahf
int
dec
scas
pop
cmp
jne
imul
scas
rcrl
mov
push
mov
sahf
adc
enter
adc
es
sub
outsl
in
or
inc
sarl
je
sbb
outsl
cmpsl
into
pop
stos
loopne
test
cmp
mov
mov
ret
mov
mov
jge
insl
mov
mov
divl
sub
add
aad
mov
sub
dec
dec
sbb
aad
sbb
cmp
and
xchg
xor
xchg
popa
outsl
daa
inc
insl
and
pop
inc
outsl
das
mov
jp
dec
fucomip
repz
mov
mov
fcoml
push
add
xor
in
sbb
cmp
and
lahf
fidivrl
dec
jecxz,pt
xor
xor
lods
mov
addr16
mov
adc
cmp
mov
pop
mov
sbb
outsb
xchg
mov
inc
test
pusha
cmp
xchg
jns
jae
out
add
cld
stos
in
adc
sub
dec
and
cmp
adc
dec
inc
add
in
pop
xor
jbe
fcmovu
xor
sub
cld
push
pop
lret
sub
and
push
cmovae
cmp
negl
lcall
dec
cwtl
inc
adc
ret
cmp
inc
aam
rolb
lahf
out
and
cmp
outsb
add
and
ja
pop
loopne
outsl
outsb
orb
aaa
iret
es
push
dec
fstp
cmp
cli
dec
or
adc
divl
shl
loope
sub
lret
bound
stos
scas
std
rol
xor
es
data16
dec
adcl
decl
xchg
fimuls
aad
add
and
cmc
daa
push
xchg
das
fisubrl
xchg
insb
push
push
aas
jecxz
add
aaa
cmpsl
sbb
mov
cltd
dec
xor
ret
sub
bound
cmp
call
jecxz
cmc
sbb
pop
test
adc
pop
mov
pop
xor
mov
dec
inc
jmp
sbb
out
popf
aas
push
int
fwait
or
jle
stc
mov
jae
mov
sbb
mov
orb
pop
int
js
das
jne
aas
stos
xor
bound
push
in
jnp
cmp
ljmp
rcl
arpl
push
sbb
mov
insl
rorl
jl
adc
jne
lahf
cmp
out
fwait
roll
jbe
or
sub
lret
dec
inc
lcall
mov
bound
push
and
push
inc
jl
pop
add
loopne
iret
pop
sbb
rcll
push
and
stc
jb
cltd
push
std
sbb
jecxz
pop
stos
adc
int3
cmp
sahf
cmc
cmp
aad
dec
dec
pop
dec
out
shlb
mov
scas
adc
or
mov
push
mov
je
xchg
insb
cs
dec
jbe
mov
xorl
repnz
pushf
sbb
int3
cltd
xchg
in
sbb
and
mov
push
xor
iret
stos
lcall
mov
ja
ja
mov
fsts
gs
push
cli
sbb
mov
add
fiaddl
dec
or
sbb
icebp
pop
in
jnp
mov
repz
cmp
xlat
mov
mov
xor
sub
sbb
pop
imul
sbb
jecxz
lods
jb
out
sbb
push
fsubrp
aaa
jecxz
shll
jmp
xchg
movsl
aad
pop
and
lcall
mov
lods
pop
imul
insl
movsb
scas
jp
shll
fcmove
xorb
daa
out
movsl
test
jmp
fists
sub
xchg
add
xchg
and
jbe
shrb
sub
xor
jl
popf
pop
pop
adc
mov
imul
fcompl
push
sarb
jne
stos
insl
pushf
imull
mov
sbb
dec
fldcw
std
fsubr
cmc
adc
mov
js
inc
mov
pusha
mov
sahf
inc
or
push
enter
mov
jp
sahf
jmp
inc
mov
or
sbb
fadd
jb
test
pop
jge
mov
das
subb
push
std
dec
pop
or
out
in
or
test
rcrl
adc
mull
cltd
cmp
sub
mov
pop
xchg
xchg
test
jl
lcall
sub
pop
cmpsb
jno
adc
insb
adc
pop
xchg
pop
andl
xchg
xor
xchg
les
stos
insl
in
xor
sti
xchg
push
or
pop
lahf
popa
cmp
sub
loopne
push
loope
or
cmp
cwtl
in
inc
adc
cld
out
or
jae
inc
loope
test
into
jg
mov
fdivrs
fcompl
push
les
mov
in
fldt
jl
cmp
push
adc
adc
push
orl
pop
cmpsb
sbb
in
cmp
and
cld
fsts
mov
push
push
pop
dec
into
push
push
fwait
cltd
test
mov
sbb
mov
mov
dec
fsubrl
mov
xchg
mov
test
ffreep
inc
jle
jmp
and
xor
sbb
jb
mov
iret
push
sbb
jmp
push
push
aam
sbb
dec
xor
adc
in
jle
gs
xor
fucom
cmp
hlt
outsb
push
push
push
sub
out
std
stos
jo
fdivrs
mov
mov
fs
lcall
fmul
sub
lret
sub
into
jmp
adc
sbb
pop
jmp
test
and
xor
push
in
cmp
jo
sarb
test
fnsave
lds
movsb
pop
jp
ss
adc
pop
mov
jg
and
gs
sbb
mov
lods
fwait
arpl
cmp
mov
sbb
xchg
and
lock
dec
es
and
pop
and
test
scas
add
and
xchg
mov
movsb
push
icebp
xchg
ret
pop
and
in
adc
cmp
cltd
movsb
gs
push
sub
lea
push
sub
mov
or
stos
pop
push
or
pop
movsb
adc
shlb
or
insl
leave
push
in
cmp
or
arpl
lds
fstp
bound
pop
shrl
inc
adc
test
sti
enter
push
mul
adc
mov
jge
mov
inc
movsl
push
inc
es
shll
ret
inc
inc
in
push
jecxz
mov
push
inc
in
mov
mov
or
leave
mov
xchg
sbbl
mov
mov
insb
out
leave
cs
mov
lret
insb
xor
iret
into
movsb
mov
call
shlb
lods
gs
push
aad
adc
loop
mov
aaa
leave
sub
rolb
dec
in
mov
je
std
adc
push
and
mov
jbe
ds
insb
push
js
dec
nop
jmp
cmp
and
fs
call
int3
pop
fisubrl
jle
xchg
nop
test
cmpsl
jae
std
inc
outsb
int
push
jns
sbb
mov
sbb
aas
enter
and
cltd
into
imull
fistpll
mov
js
xchg
js,pn
pop
mov
push
or
xor
ljmp
or
je
lcall
jo
sbb
cmpl
xchg
pop
int3
mov
out
jno
orl
adc
lret
inc
and
jecxz
adc
iret
int
jns
pop
xchg
mov
or
popf
add
mov
cmpsb
mov
shrb
mov
cwtl
mov
cli
add
inc
neg
cmpsl
mov
testb
jbe
hlt
push
pop
roll
push
add
or
rcrl
sbb
xor
jmp
cmp
incb
fldcw
lea
adc
and
pop
sarb
inc
icebp
cltd
sti
sahf
fxch
xchg
pusha
nop
stc
pop
push
jp
push
mov
ds
mov
inc
aas
jno
shrb
mov
lahf
cmp
cwtl
pop
jo
lods
sbb
inc
adc
inc
lea
and
xchg
dec
cwtl
dec
and
jle
lret
push
call
xor
pop
mov
imul
adc
and
shlb
bound
cmp
bound
sub
out
push
fsubrl
test
ja
mov
cmp
clc
jge
js,pn
mov
cmpsl
push
dec
iret
inc
sub
shlb
xor
sbb
sbb
inc
dec
fs
push
add
sahf
xchg
mov
sahf
das
push
ret
adc
dec
and
xchg
mov
mov
sub
xchg
out
adc
sub
adc
adc
jns
aas
pop
and
rorb
sbb
sub
push
ja
mov
loopne
cli
bound
fldt
fs
pop
inc
shl
std
mov
shlb
dec
mov
ja
rcl
pop
sbb
pop
pop
sub
data16
xchg
mov
fldl
sbb
pusha
mov
xchg
dec
and
int3
xchg
daa
inc
fidivrl
cld
adc
incb
xor
jne
loope
divb
std
lods
js
mov
jmp
ja
sbb
ja
cli
and
xchg
mov
sahf
sbb
push
sbbl
sbb
sarb
jo
jnp
adc
js
cld
xor
dec
loop
mov
stos
movsb
mov
mov
mov
lods
jecxz
push
mov
imul
mov
dec
jb
out
subl
sub
insl
mov
inc
push
frstor
add
fnstcw
xchg
pop
je
mov
int
pop
jo
mov
sub
mov
fcom
fldl
cmp
pop
jmp
add
aas
jno
mov
ss
arpl
push
mov
mov
arpl
scas
push
inc
std
rcll
cli
iret
sbb
es
sbb
inc
or
pop
orb
adc
rcr
and
push
mov
in
jb
pop
sub
add
popf
dec
and
cwtl
add
in
inc
cmp
xchg
roll
inc
notl
ljmp
out
jge
cld
and
hlt
and
ja
inc
pop
xchg
adc
push
dec
cmp
lahf
lret
imul
jbe
sbb
inc
ss
sti
daa
incl
or
and
movsb
repnz
mov
pop
scas
xchg
outsl
pusha
mov
neg
pop
xchg
cmp
xchg
fiaddl
bound
shr
sbb
stos
ljmp
jmp
mov
lods
mov
repz
sbb
cld
mov
mov
clc
jp
sbb
movb
add
or
mov
cmp
fistl
sbb
ret
scas
xchg
sar
in
out
cltd
aaa
mov
imul
loopne
popf
ss
mov
test
xlat
subb
push
mov
popa
jae
jl
xor
xchg
iret
aam
movsb
xchg
lods
xchg
enter
push
fimull
sub
movsl
mov
lock
adc
lea
mov
out
mov
push
mov
jo
mov
sbbb
lret
decb
or
pop
sbb
cmpsl
mov
lock
aaa
adc
xchg
subb
mov
fmulp
mov
in
xchg
aam
lock
outsl
mov
pop
xchg
inc
dec
lds
lds
mov
fistpll
adc
mov
jl
xchg
fwait
dec
xchg
movsb
xchg
les
addb
add
repz
ljmp
dec
sti
ljmp
cmp
repnz
jae
xchg
and
sub
rcrb
das
call
add
cmp
lea
or
fisubs
cmp
mov
sbb
xchg
jne
notb
lods
in
shll
push
loop
sti
jo
xor
es
inc
cwtl
cltd
xchg
sub
adc
fstp
notl
lods
call
imul
mov
adc
mov
mov
ss
inc
xor
test
sbb
ds
js
lret
stc
add
enter
ret
stos
push
mov
jnp
ret
push
ret
sbb
and
xor
testb
sti
xor
adc
lods
scas
mov
popa
xor
mov
icebp
sbb
jecxz
add
cmp
ficompl
pop
fsub
xchg
jecxz
shll
dec
lods
lahf
clc
mov
cmpsl
push
inc
gs
pop
out
sub
sbb
ljmp
push
jl
les
repz
add
pop
gs
jo
xor
repnz
adc
hlt
sbb
lods
test
outsb
pop
test
dec
lds
rsm
sub
mov
movsb
lds
xchg
cmp
xchg
mov
or
repz
cmp
shll
sub
psadbw
push
sar
shlb
and
imul
jne
jnp
lcall
sub
jge
ret
aaa
xor
scas
insb
lods
lcall
fbstp
dec
xor
and
xor
and
out
out
lods
mov
dec
ret
jnp
sub
mov
and
ljmp
ret
es
sbb
and
inc
enter
dec
push
cld
insb
out
data16
hlt
pop
mov
xchg
sbb
aad
aam
out
je
loope
mov
hlt
in
out
les
movq
iret
jno
sahf
jo
into
jae
imul
adc
jne
int3
dec
push
and
fnsave
mov
pusha
ret
mov
or
dec
jno
or
mov
sahf
out
jp
mov
out
jge
jle
add
mov
sbb
push
ds
xchg
jle
mov
jne
adc
in
outsl
movsb
pusha
or
movsb
push
clc
jae
popa
cmc
and
inc
aaa
xchg
add
inc
xor
xor
es
pop
lock
jmp
adc
mov
jmp
fbstp
stos
push
mov
xor
sub
out
sahf
pop
adc
pop
leave
sbb
sub
out
xor
pop
inc
ror
mov
add
call
ret
fistpll
fdiv
loop
mov
pop
xor
push
sbb
jo
jge
clc
xlat
pop
mov
inc
push
jnp
inc
dec
and
pop
push
out
adc
xor
test
dec
mov
fldenv
push
mov
or
fsubrl
cmpsl
mov
rorl
mov
movaps
repnz
sub
icebp
testl
push
ljmp
xlat
mov
in
fcoml
sarl
xor
jns
ret
sahf
xchg
ljmp
ret
arpl
std
cltd
mov
and
jnp,pt
scas
pop
cmp
pushl
sbb
clc
xlat
pop
dec
cmc
jb
sbbl
push
jle
sti
sti
in
aam
jp
pushf
add
imul
stos
xchg
mov
sbbb
scas
insl
lahf
cltd
fistl
xor
pop
fadds
inc
sti
add
lret
stos
adc
jl
dec
adc
adc
mov
arpl
inc
rorb
rcrb
push
mov
jl
jne
mov
inc
lret
push
nop
clc
stos
cmp
out
outsb
dec
add
call
mov
mov
fcomps
data16
scas
jmp
dec
inc
scas
in
idivb
push
jg
rolb
xchg
enter
jmp
push
ret
inc
nop
aad
push
inc
mov
inc
lds
call
jg
pop
push
xchg
dec
sub
jp
push
les
mov
add
lock
lea
nop
dec
hlt
sbb
mov
xchg
ja
icebp
push
lcall
push
xchg
sbb
cmpl
jns
inc
or
shll
push
test
js
cmp
fsubl
push
in
mov
adc
pop
in
outsb
jmp
jmp
adc
jbe
push
fmull
xor
or
ss
cmp
and
out
mov
inc
cltd
arpl
rclb
fucomp
data16
imul
dec
in
loope
mov
movsl
stos
or
popf
dec
and
dec
out
subl
ret
lahf
test
xchg
lock
movsb
sarl
sbb
std
inc
roll
mov
in
lods
lret
lea
test
addr16
fnsave
pushf
fstpt
mov
mov
cwtl
test
fmulp
cmp
cmc
jge
test
or
mov
pop
lret
or
xchg
sub
dec
mov
in
mov
xchg
cmpsl
cmpb
gs
xchg
cs
outsb
cmp
leave
imul
pop
mov
lcall
fwait
and
push
out
loopne
mov
out
push
das
jmp
push
and
jp
dec
insl
icebp
out
insb
push
pop
cmp
push
pop
dec
add
je
out
in
mov
mov
add
mov
iret
out
adcl
addb
cmp
jle
cmp
je
out
dec
xor
ja
outsb
push
jbe
and
rcr
push
jnp
xchg
repnz
add
xor
mov
lods
arpl
and
mov
inc
mov
xlat
mov
dec
push
add
imul
jnp
mov
mov
xchg
cmp
pop
jmp
push
repz
inc
mov
xchg
sub
push
cmpsb
jg
fwait
xchg
je
or
jge
sbb
adc
lret
mov
cmp
leave
sbb
into
outsb
enter
xchg
jae
sbb
movsb
dec
inc
aas
cs
inc
pushl
in
cmp
push
sbb
pop
push
sbb
adc
inc
imul
je
fs
xchg
subl
arpl
push
pop
push
mov
mov
jb
repnz
jb
dec
add
and
fwait
in
mov
cwtl
fidivl
cltd
xor
xlat
outsb
shl
pop
outsb
add
mov
dec
fwait
cmp
push
adc
xor
mov
xor
std
repz
jg
cs
scas
into
sbb
je
adc
das
pushf
aam
sahf
mov
inc
sub
insb
mov
in
sbb
sbb
sbb
jle
xchg
mov
cmc
pop
push
mov
loope
mov
mov
xchg
out
push
dec
repz
outsl
in
adc
pop
insl
aaa
jne
mov
aas
subb
mov
jno
mov
sub
lods
repnz
shlb
xchg
push
inc
jo
repz
pusha
in
inc
xchg
lea
xor
js
repz
cmc
test
jbe
cmp
popa
jb
cmp
jmp
ds
pop
mov
add
popf
mov
cmp
mov
int3
stos
aas
dec
fbstp
mul
add
pusha
and
sbb
pop
cmp
mov
test
fbld
jne
mov
xchg
mov
adc
xlat
pop
pop
test
out
test
test
mov
xor
push
mov
push
pop
lahf
push
push
ficomps
lret
mov
test
dec
cmp
into
hlt
iret
mov
xor
aas
mov
mov
mov
cmp
xchg
out
in
imul
adc
push
es
fstl
ror
push
and
dec
in
lret
lods
aam
mov
add
aad
push
pop
out
push
sub
add
fdivl
je
dec
roll
mov
fwait
mov
dec
and
jmp
or
fld
cmp
lock
inc
xchg
add
repnz
pop
scas
jecxz
mov
ljmpw
fstpl
jle
cmc
cltd
ffree
jle
mov
xchg
xchg
pop
adc
push
std
pop
shrl
jl
imulb
sub
add
add
mov
add
xchg
mov
shlb
jmp
and
and
shll
xor
hlt
adc
insb
fstpl
hlt
fimull
in
fcmovnu
js
adc
fdivrl
gs
cmp
std
add
stos
inc
test
cmpb
lea
mov
xor
in
nopl
neg
lret
pop
leave
outsb
sbb
xchg
les
lret
imul
push
push
test
adc
ret
add
pop
mov
ret
call
and
sbbb
sbb
inc
xchg
cmp
mov
in
xor
int3
xchg
outsl
mov
jecxz
mov
decb
jno
nop
loope
add
dec
imul
jg
jl
orl
mov
push
outsb
arpl
aas
mov
sbb
xor
imul
int3
dec
mov
ret
test
push
arpl
dec
mov
sbb
cmp
push
or
mov
or
and
push
or
mov
xlat
in
push
in
inc
lods
subl
xchg
or
inc
cmpsb
mov
shr
leave
mov
xchg
dec
push
xchg
loopne
test
adc
pop
fmul
out
icebp
sbb
aam
pushf
jecxz
cmp
clc
out
cmp
mov
dec
std
mov
mov
xchg
inc
in
pop
in
mov
imul
sub
jl
sbb
bound
popf
mov
rcll
iret
pop
ljmp
inc
mov
imul
test
cld
movsb
fnsave
test
mov
idivl
std
popa
sahf
lods
scas
cmc
rdtsc
xchg
stos
ja
scas
lahf
and
sub
rcl
and
xor
jbe
or
jecxz
xchg
nop
cs
xor
gs
dec
mov
adc
inc
arpl
sub
addl
pop
test
insb
jnp
jae
jnp
pop
fsubrl
es
pop
inc
xor
das
add
or
push
stos
sahf
and
gs
fisttpl
sti
subb
push
xchg
ud1
mov
push
xlat
test
adc
xchg
in
test
sub
rcll
push
dec
arpl
shrl
mov
ljmp
in
inc
insl
jae
jno
sub
lea
xchg
cmpsl
cmp
jecxz
jne
rol
andb
aaa
jge
adc
fdivrs
add
js
adc
xor
jmp
jl
cwtl
sbb
jbe
jmp
js
push
add
popf
lods
inc
pop
cmpsl
push
inc
test
daa
pop
into
daa
fidivs
push
fnstcw
inc
cltd
cmpsl
and
sub
push
and
jo
xlat
dec
push
lea
pop
push
pop
xlat
dec
mov
das
jb
xor
mov
aam
outsb
popa
sbb
in
leave
leave
and
mov
push
mov
cmpsb
mov
fisttpl
test
or
and
hlt
mov
adc
inc
daa
test
std
dec
es
test
mov
push
sbb
xchg
inc
jns
outsl
insl
sub
add
xchg
or
cmp
ss
xchg
pop
sbb
mov
aaa
xchg
out
sub
mov
jle
fs
cmpsb
jb
in
in
icebp
pop
ret
add
scas
inc
outsb
outsl
ljmp
mov
hlt
loopne
and
jle
sbb
cltd
test
roll
sub
sub
and
mov
enter
fsubs
gs
and
xchg
insb
in
cmpsl
rcrb
push
iret
cld
pop
xor
loop
lret
loopne
mov
test
inc
mov
sub
rorb
add
ss
inc
mov
jl
jmp
cmp
xchg
mov
test
out
fimuls
mov
nop
psrad
or
inc
cmc
rcr
test
ja
sub
pop
cmpl
sti
outsb
xchg
cltd
jae
aam
ja
jmp
leave
jecxz
roll
addr16
mov
fs
pop
inc
pop
or
stc
pop
insb
add
xchg
es
inc
mov
push
add
dec
icebp
sarl
cwtl
cwtl
ds
aad
icebp
pushf
cmp
hlt
ror
pusha
imul
dec
push
sub
cmp
arpl
jl
and
xor
rorl
mov
sub
jne
out
rorb
xor
data16
sbb
mov
pop
and
mov
inc
ja
das
hlt
xor
stos
pop
stc
fs
sbb
int
sbb
jo
fsub
ja
sar
xor
dec
pop
addr16
out
das
mov
push
mov
cmp
pop
dec
sbb
add
je
cmpsb
mov
hlt
mov
pcmpgtd
sbbb
xchg
mov
lock
sbb
imul
push
cmc
jmp
fildl
adcl
es
push
xchg
jns
in
push
dec
jne
push
jbe
push
push
pop
adc
xchg
inc
adc
ja
or
jl
dec
push
loopne
mov
and
jo
ret
jne
out
lcall
dec
inc
mov
fwait
mov
pushf
js
pop
jns
cmp
cmpsb
bound
filds
dec
sub
pushl
or
in
aam
add
xor
icebp
je
scas
inc
out
and
cmpl
adc
imull
inc
xchg
push
fbstp
jle
cmp
and
mov
shlb
fwait
leave
mov
addr16
lcall
xchg
dec
jg
pushf
das
adc
imul
push
iret
xor
icebp
xorl
lcall
xchg
fwait
mov
inc
nop
jne
xor
mov
leave
cmpsb
mov
movsb
mov
xor
pop
orb
dec
stc
inc
ficoms
cmp
cmp
xor
fimuls
jae
jb
sarb
stc
xchg
or
inc
addr16
or
pop
scas
pop
mov
jae
sarl
mov
jmp
inc
ja
xor
lock
mov
je
cltd
sub
test
das
hlt
aas
gs
fwait
lock
test
cs
mov
jae
mov
add
sbb
setp
sbb
cmpsb
add
es
jge
and
aam
sbb
pop
pushf
jecxz
sbb
add
sub
lcall
add
pop
lock
out
xchg
or
call
mov
rolb
jmp
fsts
sbb
mov
cli
and
push
orl
jmp
xor
cmp
push
psllq
mov
pushf
sub
stos
mov
inc
push
sub
add
mov
push
cmp
mov
cmp
sbb
pop
pop
xchg
aaa
mov
outsl
push
scas
iret
out
adc
loop
xorb
fmul
pusha
cli
push
jne
aam
insl
insl
jne
or
std
sub
xor
push
repz
daa
sbb
das
inc
xorl
in
hlt
cld
adcl
mov
pop
sub
xchg
test
popa
addr16
popf
in
jb
int3
test
ss
mov
movsb
paddw
xorl
pop
imul
pop
gs
jnp
push
cmp
imul
inc
and
sahf
test
mov
and
in
jl
push
mov
dec
adc
mov
sbb
bswap
add
lods
sbb
lods
lds
push
data16
mov
orb
cmp
adc
jg
mov
adc
push
adc
push
push
mov
sub
cmp
sbb
mov
inc
adc
mov
xchg
loopne,pt
inc
fs
repz
jnp
gs
arpl
pop
push
loop
jae
sahf
pop
mov
inc
sub
cmpsl
jb
out
int3
out
rolb
test
mov
push
jge
sub
test
or
pop
leave
fistpl
push
xchg
mov
icebp
shll
test
scas
ss
ret
pop
cmp
sub
xchg
sbb
fnstcw
and
cmp
inc
jbe
xor
jecxz
rorb
lods
pop
shlb
jl
mov
jbe,pt
fimull
lods
xor
dec
pusha
mov
es
ret
lcall
or
call
sbb
cli
pop
dec
and
loopne
es
and
adc
addr16
in
loopne
pushf
dec
fcompl
cmc
xchg
dec
rcl
outsl
js
sub
add
inc
pop
xchg
or
inc
std
int3
mov
inc
stc
inc
jno
sub
int3
lock
push
pop
je
xchg
bnd
and
lds
mov
in
cmpb
out
fwait
xchg
add
push
mov
push
dec
fwait
push
in
push
and
lcall
notb
jmp
inc
lea
xchg
sbb
xchg
add
je
outsl
dec
or
mov
daa
sbb
mov
adc
and
jbe
ret
insl
and
icebp
or
mov
mov
imul
cmp
loope
push
mov
fabs
sahf
shlb
cmp
and
xchg
sbb
js
fcoml
jle,pt
pop
ret
and
xlat
mov
enter
sbb
and
xor
fwait
push
cmp
data16
xor
adc
adc
clc
and
and
push
lahf
xor
add
sti
movsb
mov
fldl
nop
cld
mov
mov
jbe
mov
daa
lea
sbb
mov
sbb
or
loope
pusha
call
cmp
ret
push
loopne
mov
xchg
inc
mov
xchg
add
arpl
inc
add
push
cmp
decl
test
int3
xchg
ret
mov
mov
in
dec
imul
adc
int
or
sahf
xor
loop
sahf
loop
cli
ja
pop
pop
pop
adc
xchg
mov
mov
cli
mov
or
push
dec
jne
pushf
je
pushf
sbb
xorl
arpl
cmp
mov
jne
or
push
xchg
rcl
addr16
or
icebp
mov
jno
jle
in
mov
lock
test
sbb
mov
aas
or
mov
pop
lods
jecxz
orl
pop
jg
stos
mov
in
cmpsl
mov
inc
pop
push
test
mov
dec
das
nop
movsb
push
mov
or
mov
adc
sub
ret
jb
shlb
cmp
pop
mov
and
je
add
addr16
pop
adcb
dec
out
loopne
sbb
adc
ja
lock
ret
popa
out
xrelease
in
dec
lea
std
xchg
pushf
adc
pop
negl
imul
cmpsb
sbb
push
and
xor
rol
popa
cli
scas
pop
sbb
pop
leave
fsubl
cltd
test
cmp
xchg
sub
mov
mov
sbb
mov
jno
das
cmp
adc
jns
push
dec
adc
jne
cmc
push
lret
jns
lret
mov
hlt
sti
mov
inc
jmp
cld
pop
sahf
movsb
orb
test
dec
in
loopne
psrlq
mov
xor
pusha
dec
and
and
add
jg
into
sub
jle
nop
inc
cmpsb
mov
jmp
ljmp
inc
mov
push
xor
sbb
push
notl
add
lret
sbb
sbb
sbb
jmp
or
mov
inc
push
jg
inc
mul
cmpsl
bound
dec
cltd
xchg
xor
mov
or
orl
lret
cli
mov
cmp
mov
loop
dec
frstor
repz
hlt
push
mov
ss
stc
dec
mov
dec
mov
mov
mov
adc
cmp
push
xor
cmp
and
sahf
push
pop
ljmp
and
sbb
popa
jmp
xchg
adc
cltd
inc
cmp
fmuls
push
lcall
or
inc
mov
imul
sbb
jae
cmp
dec
mov
and
sbb
cs
outsb
sub
scas
sub
lds
arpl
jo
icebp
or
cmp
dec
push
arpl
out
rcll
xor
test
sbb
inc
xor
cmpsb
ror
dec
add
stos
inc
arpl
cmp
stos
loopne
mov
dec
shlb
cmp
xor
fstpt
and
pusha
jl
jbe
popa
shlb
lret
shll
call
lret
add
xchg
insl
ljmp
gs
jle
or
mov
test
jmp
pop
pop
repz
aam
mov
adc
shr
lods
mov
pop
sbb
or
pop
add
and
loopne
test
dec
jnp
cwtl
je
adc
mov
rclb
cmp
pusha
mov
xor
push
scas
test
add
cs
sub
in
repnz
sti
aad
lods
cmovno
push
dec
fsubr
inc
xor
xchg
in
rcrl
lret
or
add
mov
or
xchg
inc
lret
xchg
cmp
pop
jae
pop
mov
inc
repz
sbbl
int3
inc
fsubrl
mov
and
inc
sbb
stos
gs
push
ret
scas
or
arpl
lret
sbb
in
movsb
clc
std
lcall
sti
mov
outsl
sbb
in
inc
push
popa
int
or
mov
dec
or
into
in
scas
jnp
adcb
sbb
imul
jmp
nop
leave
imul
or
push
arpl
gs
cmp
inc
out
fcoml
xchg
ret
in
shrb
cwtl
xor
push
add
or
xchg
int
sub
xchg
push
push
out
movsl
mov
pop
jbe
sub
mov
sub
xor
scas
mov
leave
aad
test
jne
leave
xor
push
xchg
imul
shrl
jge
inc
mov
dec
ret
mov
cmp
and
inc
in
int
lods
xor
pop
sub
lock
cmp
imul
cmp
divl
fld
and
aad
cld
aam
mov
jecxz
add
add
push
cltd
cmpsl
pop
pop
add
pop
and
dec
addr16
es
push
sti
inc
mov
mov
ficompl
in
repz
pop
dec
nop
mov
jo
out
std
int
sbb
jecxz
mov
fdiv
fs
xchg
add
sbb
test
mov
mov
call
lret
mov
fnstcw
or
xchg
cs
cmpsl
leave
or
push
sbbl
fiadds
loop
sti
or
xchg
ficompl
inc
arpl
fwait
adc
mov
aaa
adc
xchg
inc
lea
insl
dec
jns
mov
mov
outsl
or
inc
or
mov
daa
jmp
cmpsb
sbb
cmp
adc
mov
jecxz
cmpb
jmp
popa
cmp
push
shl
pushf
pop
adc
inc
jnp
pop
mov
es
ds
dec
add
dec
adc
push
sbb
add
or
fbstp
js
jmp
loop
int3
out
adc
jge
or
clc
aas
sub
ds
or
xlat
sbb
mov
out
mov
loope
scas
pop
ds
mov
sub
ja
jl
mov
adc
bound
ljmp
push
add
in
lods
int
adc
ficoml
insl
dec
pop
cld
loop
lods
shrb
pop
repz
mov
inc
xlat
and
mov
ffreep
jbe
mov
cmpsl
enter
inc
fsubs
int3
ss
sub
sbb
lret
loopne
loope
cmpsb
pop
dec
daa
outsl
mov
pop
and
test
add
fildl
cld
gs
shrb
lret
sti
mov
mov
xchg
insl
push
ljmp
xor
in
loopne
xchg
or
or
sbb
pop
lock
fwait
and
add
imul
xor
movsl
cmp
sbb
int3
outsl
jp
sbb
or
mov
mov
add
mov
push
push
push
sub
push
shll
inc
sub
rorl
repnz
and
xor
add
in
or
push
add
push
or
inc
clc
dec
outsb
sbb
sub
sub
or
mov
sub
inc
les
xchg
push
pop
cmp
mov
loop
sahf
mov
push
sbb
gs
aas
icebp
xchg
fisubrl
in
dec
sbb
jge
or
add
movsb
aad
rolb
les
into
sbb
sahf
outsl
push
lcall
daa
outsl
push
add
mov
cmpsb
sbb
jne
push
mov
sbb
ret
sti
mov
out
out
das
cmovno
aaa
scas
push
mov
iret
outsb
loopne
adc
sbb
jbe
xchg
orb
dec
imul
sbb
and
jns
jns
popf
incl
xchg
out
jecxz
fcoml
ds
jle
addr16
jp
lods
insb
jnp
and
pop
rcrl
jbe
add
sbb
dec
dec
sub
mov
jo
mov
pop
xor
iret
mov
aaa
and
dec
xchg
scas
xchg
aas
push
push
fmuls
jne
pop
mov
jne
test
inc
pop
and
xchg
je
repz
int
mov
sub
hlt
test
cld
mov
or
dec
xor
mov
out
add
out
inc
mov
repnz
faddl
lock
test
jbe
jo
cmpsl
xor
test
in
movsl
inc
aas
test
sub
std
jo
dec
jb
fcomip
push
pop
pop
pop
enter
mov
adc
sub
fdivrl
arpl
pop
fsubr
push
sahf
movsl
lcall
jb
in
push
mov
cmp
nop
cmpsl
imul
pop
sbb
shll
jns
aaa
push
scas
stc
rcl
mov
arpl
std
sbb
shl
aad
cli
push
dec
fdivrs
shll
sahf
jne
bound
adc
adc
add
lds
lock
mov
mov
in
outsb
pop
adc
into
lock
outsb
or
sbb
xchg
mov
cmp
jl
push
dec
and
mov
sar
adc
aam
jle
addr16
pusha
jmp
test
mov
sub
cmp
imul
jmp
mov
or
mov
xchg
into
pop
into
mov
loopne
lcall
lock
clc
jnp
push
mov
cwtl
pop
pushf
mov
in
push
push
sbb
push
ds
mov
jecxz
idivb
xchg
mov
in
jmp
and
fidivrs
test
jns
int
xchg
stos
dec
inc
jns
xchg
dec
pop
cmp
xlat
std
lods
push
push
sbbb
mov
or
dec
mov
pop
jecxz
sbb
test
pop
xor
xchg
outsb
jp
imul
pushf
in
loope
sbb
cmp
sbb
flds
adc
cmp
add
and
push
jb
xchg
rcrb
test
out
or
stc
loope,pn
fnstcw
xchg
lock
movsl
xchg
push
mov
in
shlb
nop
addl
jbe
arpl
dec
int3
mov
adc
xor
jmp
out
pop
push
scas
aam
ret
mov
xor
dec
stc
dec
xor
sub
stc
out
pop
inc
pop
frstor
movsl
and
pop
dec
js
cld
cltd
scas
lods
call
xchg
les
cmp
mov
push
fwait
push
loop
mov
repz
insb
cmp
cwtl
fwait
adc
inc
or
leave
rcl
inc
jns
out
outsb
push
test
mov
das
xchg
add
or
xor
bound
sar
jo
cmpsb
cmp
negl
rclb
cltd
xor
pushfw
loopne
lcall
pop
and
xchg
mov
fcmovne
mov
scas
sub
orb
sub
mov
aam
cmpsb
loopne
adc
adc
sti
mov
idivb
pop
cmpb
int
jg
inc
xchg
insl
or
push
jge
flds
and
or
cmp
jmp
popa
mov
mov
jnp
xor
and
lods
shrb
lock
cmp
test
lods
subb
ss
push
aaa
test
sbb
stos
jae
mov
ret
dec
add
jno
mov
nop
or
cmp
test
cld
inc
mov
xchg
test
and
mov
push
ss
mov
bound
or
or
cmpsb
mov
lods
icebp
stos
mov
imul
lahf
popf
ficoml
push
push
frstor
repnz
pop
mov
daa
xlat
jne
das
jl
sub
popa
je
adc
mov
push
loop
sbb
popf
lock
dec
fldt
mov
mov
hlt
loopne
out
mul
popf
stos
add
jecxz
mov
in
clc
mov
test
leave
lea
ja
cltd
add
addl
test
mov
mov
adc
pop
xor
imul
cmc
popf
mov
sbb
sti
sbb
dec
mov
push
fs
jle
movb
stos
sbb
cmp
push
jno
cmp
orb
clc
or
and
sub
mov
sarb
shl
adc
into
pusha
mov
add
popa
lods
mov
mov
in
jns
jnp
jl
repz
arpl
fiaddl
push
loope
adc
inc
xlat
add
sub
ljmp
mov
or
push
push
jns
jae
cli
loop
std
dec
mov
mov
cmpsl
ret
xchg
or
dec
mov
jmp
mov
inc
sbb
sbb
cwtl
lds
lret
popa
adc
pop
pop
mov
cmp
lods
dec
sti
iret
cmp
inc
cmp
imul
jmp
pop
or
cld
sbb
push
jecxz
and
je
pop
fs
xlat
cli
iret
cwtl
imul
lds
shrl
arpl
inc
jae
insl
sarl
cmp
pop
aam
in
call
shll
dec
das
cmp
arpl
fcmovnbe
out
loopne
inc
pop
into
add
xchg
aas
xchg
rcl
fs
lock
sbb
mov
jnp
jae
mov
cmc
outsl
dec
shll
or
aam
repz
repnz
cmpsb
and
cmp
cmp
cs
push
cmp
xor
jl
imul
std
jl
xchg
push
push
jnp
testl
dec
addr16
fsubrs
mov
mov
jge
sub
mov
lea
mov
hlt
gs
leave
or
dec
stc
dec
jne
lret
fcoms
and
hlt
jae
shlb
and
outsl
lods
movsb
cld
enter
or
adc
xlat
in
and
push
outsb
out
mov
enter
lods
cli
out
xchg
sub
mov
lcall
ret
inc
sbb
movb
sub
xchg
mov
sti
cld
adc
in
pop
imul
out
daa
enter
mov
sbb
in
outsl
lods
jnp
jle
push
cwtl
sub
inc
ret
sbb
stc
push
push
push
jb
clc
fimuls
icebp
cltd
fstpt
push
cmp
push
push
or
dec
test
fistpll
inc
mov
xchg
xor
jo
cmp
or
jle
outsl
insb
mov
ja
out
aas
ljmp
xchg
dec
add
dec
mov
cmp
mov
adc
jmp
lahf
inc
mov
enter
lods
test
pushl
push
cld
mov
cs
je
loop
call
xchg
mov
int3
push
xchg
mov
adc
mov
inc
xor
or
std
or
adc
mov
xchg
push
cmp
outsl
jle
pop
insb
sbb
cmc
shlb
mov
ljmp
out
mov
int3
movnti
test
in
ror
sti
mov
cmp
adc
pop
push
xchg
ret
imul
xor
popf
inc
test
cld
inc
test
xchg
mov
jle
mov
pop
jae
sbb
es
or
cmp
icebp
fcomps
jo
dec
mov
jnp
jmp
mov
push
pushf
mov
xchg
popf
cmpsb
jl
mov
into
jmp
pusha
lock
ret
lods
shll
inc
aaa
pop
and
add
mov
add
sar
jnp
arpl
rcll
mov
and
clc
fwait
jle
cld
sbb
cmp
xchg
and
loope
jbe
insb
and
lds
leave
xor
push
sub
add
pop
icebp
in
inc
ds
jp
xchg
daa
incb
les
adc
test
in
roll
daa
insl
mov
adc
sarl
jns
xchg
sbb
in
mov
xor
xchg
push
pushf
popf
mov
les
adc
push
ds
sub
push
mov
fldt
das
push
inc
push
bound
xchg
out
xchg
push
shlb
inc
sti
aaa
cmp
loop
in
mov
lock
int3
mov
add
xchg
loop
and
int
cmp
or
mov
aam
cmp
and
std
stos
cmp
or
mov
push
sbb
mov
xchg
or
fmull
cmp
inc
xor
je
mov
xor
mov
add
clc
jl
push
std
or
mov
bound
ret
sub
cmp
jge
das
arpl
lea
idivb
enter
jge
outsb
stos
adc
outsl
adc
loopne
enter
lret
daa
cmpl
mov
addr16
cmpb
loop
cmp
fstps
addr16
mov
nop
inc
push
fnstcw
dec
cld
xchg
sahf
test
imul
mov
push
fwait
out
dec
and
pop
dec
outsb
cltd
xchg
pop
and
dec
es
sub
popf
lahf
add
mov
in
jno
mov
loope
fisubrl
dec
sub
rcl
jnp
shl
aaa
jbe
mov
push
push
cmp
shlb
in
lea
in
cmp
sub
push
jecxz
sti
dec
pop
adc
rcl
xchg
ds
stos
pop
adc
gs
test
hlt
testb
mov
jg
mov
lcall
mov
test
stos
add
inc
jecxz
sub
rcr
xchg
sub
dec
movsb
xchg
mov
call
aas
mov
sub
shll
jmp
fstpt
xchg
sbb
scas
inc
sbb
pop
sub
call
das
leave
inc
mov
or
in
and
mov
adc
xchg
cmp
aaa
sub
or
push
adc
cmpsb
loope
stc
sub
and
sub
pop
jmp
aas
jbe
jb
inc
rclb
bnd
xchg
loope
push
push
and
loop
sbb
push
jecxz
and
push
cmp
add
adcb
movsb
jae
je
or
fldenv
push
add
push
clc
push
inc
pop
pop
rcrb
mov
enter
fs
dec
pop
sbbl
outsl
imul
jmp
add
mov
hlt
insb
add
gs
jae
mov
pushf
cmpsl
push
ja
scas
dec
sub
jnp
pop
cld
dec
xlat
lret
xchg
mov
sub
adc
call
insb
in
das
aad
lcall
jp
subl
int3
and
adc
das
insb
cld
pop
pop
mov
or
outsl
xchg
dec
in
and
add
xchg
ss
lret
cmp
scas
repz
call
push
add
scas
xor
adc
fnsave
popa
jmp
inc
jg
jl
sti
stos
dec
sbb
mov
push
shll
hlt
xchg
aad
mov
jmp
outsl
lds
inc
bound
dec
or
pop
mov
test
and
inc
subb
dec
jge
dec
arpl
cmpsb
addr16
push
jmp
sbb
cmp
cmp
mov
popa
pop
loopne
mov
pop
aam
shlb
call
mov
movsb
or
mov
int
push
shll
pop
or
xchg
mov
pop
cmp
shrl
mov
mov
loop
dec
or
adc
push
mov
das
cmp
test
sti
dec
sbb
mov
add
xchg
mov
aas
movsl
sti
push
les
xchg
cmp
fisubrs
in
mov
and
pop
adc
roll
jmp
outsb
xchg
xlat
in
sahf
out
std
outsl
mov
mov
icebp
xchg
call
repnz
pop
dec
xchg
xor
lret
lcall
les
loopne
lods
pop
arpl
mov
xor
push
push
mov
pop
adc
push
std
inc
rcr
addr16
ret
mov
mov
test
mov
add
add
das
cli
cmp
inc
lahf
cli
mov
xchg
dec
fwait
mov
mov
and
dec
inc
xor
cmp
sbb
outsb
push
outsl
rorl
scas
pop
pop
inc
jecxz
test
push
and
nop
pop
out
jnp
int
add
push
mul
and
fiaddl
xor
shrb
mov
repz
push
stc
mov
mov
sbb
add
neg
and
insl
add
push
mov
in
daa
and
ret
sub
mov
adc
iret
addb
pop
loopne
mov
sub
jbe
data16
jmp
mov
or
push
rorb
xchg
push
aaa
xor
cli
adc
lds
cld
lock
xor
sbbl
sbb
scas
es
dec
les
pop
sbb
icebp
xchg
popf
test
cmp
dec
cmp
dec
mov
in
call
jbe
pusha
call
andb
std
mov
jne
outsl
push
add
xor
loopne
dec
scas
cmp
lret
adc
jp
dec
imul
mov
aas
mov
std
pop
call
imul
mov
add
insb
in
jmp
dec
movb
sbb
into
insb
std
loopne
mov
mov
insb
sahf
out
out
sbb
and
es
inc
je
mov
push
sarb
or
xor
scas
std
add
inc
test
movsl
test
mov
out
and
arpl
negb
stos
add
fcomps
lret
xchg
ss
sub
and
dec
enter
jo
push
insb
lcall
out
addl
icebp
lods
mov
sub
inc
pop
outsb
cli
inc
adc
in
lock
jg
xor
and
cltd
and
pop
jbe
cmpsb
inc
mov
dec
mov
xor
rcll
movsl
dec
mov
xor
or
movsb
inc
dec
pop
fiaddl
mov
js
xor
pop
xchg
out
ret
mov
lret
daa
rcrb
mov
cmp
xchg
xor
xchg
scas
xor
decb
or
repz
adc
sbb
loope
xchg
in
mov
or
mov
repz
iret
subl
mov
test
xor
sub
add
and
les
jecxz
jge
add
std
outsl
inc
or
in
jl
push
ljmp
in
pop
dec
xor
orl
cmp
inc
popa
shr
inc
in
shll
pop
sahf
mov
pop
out
sbb
push
push
pop
xchg
jmp
movl
mov
shl
lea
cmc
push
sbb
test
mul
xchg
ds
sbb
add
mov
wbinvd
fwait
dec
scas
mov
cld
cmpsl
or
aam
adc
imul
cmp
sub
cmc
pop
pop
mov
jl
mov
dec
fnstenv
and
push
lds
push
push
pop
lds
or
mov
push
roll
xchg
mov
jge
xor
mov
loop
icebp
call
in
cmc
lahf
and
es
nop
aad
dec
fisttpl
mov
stos
cmp
cmc
repnz
add
sub
cld
pop
sbb
xchg
push
das
inc
bound
push
dec
mov
sahf
imull
mov
ret
lahf
loopne
sbb
mov
shll
lods
or
mov
cmpsb
xor
je
pop
cld
mov
or
lods
mov
int
mov
mov
mov
neg
je
jecxz
lcall
dec
push
and
lcall
xlat
mov
test
test
cmp
loop
push
or
mov
adc
xchg
sbb
ss
xor
es
stc
cwtl
gs
jp
aas
push
jbe
fidivrl
negl
jl
mov
aaa
enter
xor
adc
or
arpl
xlat
xor
flds
inc
pop
jge
jae
mov
cmp
inc
insb
sub
xchg
cld
cltd
mov
fsubl
pop
jne
ret
adc
add
xchg
jo
and
lods
or
or
leave
xchg
stos
sub
in
sub
jmp
dec
dec
jp
ss
ljmp
adc
mov
ficoml
cmp
dec
imul
int
repz
xor
pop
xor
repz
jo
ja
in
push
rorb
cmpsl
fs
out
nop
mov
jbe
mov
add
pop
mov
in
pop
push
lea
std
shr
scas
out
les
call
stc
mov
cltd
ficomps
fsubl
push
sbb
jge
in
adc
or
call
sub
aad
dec
in
or
adc
sbb
mov
mov
popf
push
mov
mov
xor
pop
pop
test
mov
xor
jecxz
sahf
mov
out
cltd
popa
sbb
lcall
dec
jge
mov
dec
dec
and
ja
iret
outsb
loopne
xchg
xchg
lock
dec
sahf
dec
pop
xor
push
jno
mov
xor
inc
jmp
or
mov
es
sbb
lret
sbb
int3
les
ljmp
push
fisttps
notl
pop
and
jmp
or
mov
and
cs
outsb
and
pop
aad
shrl
out
in
add
sbb
lods
and
mov
inc
xchg
sbb
pusha
pop
inc
in
daa
testb
imul
in
and
push
pop
inc
dec
mov
mov
cmp
leave
arpl
fisubrs
and
std
cwtl
ficomps
lcall
add
popa
pop
pop
aaa
mov
stos
fwait
push
push
ror
add
jecxz
cmp
or
mov
lahf
mov
inc
cmp
icebp
add
mov
shrl
xchg
inc
mov
daa
fistpl
or
shlb
mov
or
adc
add
dec
mov
push
fists
xchg
scas
add
rolb
add
jmp
push
cltd
inc
cltd
cmpsb
lahf
pop
push
stos
dec
fdivrs
jnp
scas
lcall
hlt
ja
addr16
aad
inc
fidivrl
rclb
shrl
or
or
ss
add
repnz
aad
push
and
clc
out
mov
or
lret
add
adc
les
and
mov
ret
mov
sbb
jns
inc
push
xchg
scas
mov
sbb
jg
iret
cmpsl
mov
xor
lea
pop
dec
sarl
mov
xchg
jge
imul
stos
cmp
sbb
add
pushf
add
fs
xchg
sbb
in
leave
xor
mov
mov
mov
inc
push
sets
lods
lcall
stos
mov
std
loop
lret
lock
out
mov
jge
out
add
imull
cwtl
inc
pusha
dec
shlb
in
orb
cli
and
fildl
mov
incl
sbb
dec
gs
nop
out
add
fcmovnu
xor
fildll
mull
lds
fwait
aaa
jns
jns
lret
and
out
ljmp
leave
ss
or
out
roll
lret
jge
mov
out
jnp
fwait
ret
cmpsb
mov
leave
mov
insl
popa
outsl
xchg
shll
in
sub
push
leave
dec
fistl
hlt
add
cmp
nop
arpl
pop
loop
insl
ds
sbbb
daa
je
or
shlb
pushl
shrl
movsb
add
adc
aam
cli
subl
add
mov
mov
jecxz
mov
rorb
pop
es
fnstsw
inc
adcl
mov
fwait
jmp
shll
cli
or
icebp
add
mov
adc
popf
or
adc
mov
int3
push
mov
jns
shll
dec
loopne
cmc
outsl
cmpsb
xchg
adc
icebp
and
jecxz
adcl
sbb
push
or
xchg
fucomip
inc
cmp
test
adc
or
stos
push
les
imul
dec
pop
mov
cmp
shr
cmp
dec
pop
lea
mov
adc
add
divl
mov
frstor
fcomi
sub
mov
arpl
pop
mov
mov
mov
shrb
lods
sbb
shll
inc
imul
cwtl
push
movsb
push
arpl
clc
and
clc
inc
into
aam
adc
mov
pop
imul
insl
loopne
cmc
lock
insb
push
mov
and
sti
inc
es
jmp
mov
xchg
sub
insl
int3
jno
mov
inc
imul
inc
lahf
test
cltd
lahf
adcb
jo
mov
cmp
xor
mov
dec
pop
movsb
arpl
test
iret
adc
cltd
repnz
inc
int3
add
or
inc
cmpsl
adc
mov
and
adc
mov
jge
jno
inc
lahf
add
and
add
sbb
jmp
sbb
outsb
test
and
daa
sub
inc
lret
xor
clc
repnz
icebp
sbb
outsb
popf
shlb
inc
inc
mov
popa
xchg
popf
add
pop
or
test
in
cmp
data16
popf
shl
jge
xchg
inc
stc
mov
cwtl
inc
fcomp
fimuls
mov
inc
fimull
jmp
subl
xchg
push
cmpsb
dec
into
xchg
adc
push
push
popa
cltd
std
push
addr16
int
sub
inc
sub
nop
jb
pop
loop
mov
and
cmp
mov
mov
lods
ja
mov
push
or
and
jmp
out
repnz
add
popa
movsl
jp
mov
cmc
loope
cltd
jbe
out
test
inc
push
mov
add
inc
rorb
aas
adc
lret
push
std
adc
cwtl
jp
test
out
lea
xchg
ret
push
sub
mov
rcll
push
movsb
cld
mov
and
out
push
jmp
aas
mov
negl
jg
mov
push
xchg
fisubrs
inc
mov
int
jmp
push
cmpsl
stos
cltd
adc
lcall
imul
xchg
ds
stos
movl
push
ret
xor
fs
repz
dec
jb
leave
imul
test
les
das
out
popf
cmc
aad
rcrl
lods
test
stos
cmp
add
inc
int3
out
xlat
int3
and
pop
dec
loop
push
inc
and
loope
mov
enter
sub
or
sub
sarb
xchg
sbb
bnd
and
mov
cltd
jge
add
push
ja
das
fs
inc
arpl
push
pop
loopne
xchg
scas
mov
inc
flds
jg
movsl
sbb
adc
call
inc
cwtl
push
push
int3
inc
xor
mov
loope
and
loopne
lret
xor
pop
or
mov
sub
add
test
sahf
test
repz
fs
hlt
add
int
test
imul
push
xchg
data16
lods
leave
lods
stos
movsb
sub
mov
jecxz
lcall
jbe
pop
mov
cwtl
or
popf
fbstp
daa
mov
cltd
adc
repnz
cwtl
in
mov
push
sub
push
adc
fisttpl
shll
cld
mov
into
jne
add
mov
test
loop
mov
es
xchg
mov
push
xchg
jbe
scas
testb
sub
jne
inc
clc
jge
ljmp
jg
shrb
pop
mov
jl
stos
cmp
push
jecxz
dec
popf
push
out
iret
mov
or
call
sbb
mov
out
cmpl
in
leave
aas
jg
jp
xchg
pop
hlt
cmp
fmuls
nop
pop
hlt
out
mov
cmp
repz
xchg
mov
pop
cmp
cli
lcall
fwait
ja
roll
sti
insl
cmp
xor
pop
add
dec
mov
add
pop
in
lahf
test
test
mov
xlat
xor
mov
xchg
addl
cmc
test
mov
push
rcrl
xor
in
inc
push
inc
xlat
sub
outsl
adc
jne
mov
pop
call
jnp
sbb
mov
lcall
xchg
xor
mov
push
dec
leave
sub
dec
sarl
push
mov
lods
sti
pop
push
mov
inc
push
test
addr16
mov
xchg
test
ret
mov
je
repnz
sub
fstpt
jns
mov
push
dec
subl
into
lods
loopne
sub
fsubs
cmp
mov
push
mov
cltd
push
inc
mov
xor
sbb
xchg
mov
loope
js
lcall
jp
mov
pop
jl
jp
shl
mov
xchg
pop
lahf
pop
xor
dec
mov
sbb
sub
arpl
push
sbbb
pop
or
loop
mov
cmp
lcall
ljmp
mov
test
inc
in
movsl
inc
pop
icebp
push
and
dec
hlt
sbb
movsl
mov
sub
or
adc
rcrl
add
add
pop
pop
in
loop
push
cld
xchg
out
dec
decb
mov
cmp
xorb
sbb
outsb
sub
dec
les
pushf
mov
inc
lock
pop
test
mov
jle
pushf
pop
adcl
xchg
jno
test
pushl
shrb
jmp
mov
into
scas
cmpsb
or
push
jecxz
and
cld
outsb
cli
negb
lds
sahf
cli
imul
or
shrb
repnz
lcall
imul
bound
mov
push
mov
adc
and
xchg
repnz
or
sbbl
insb
push
lahf
iret
out
add
pop
arpl
loopne,pn
scas
cmp
dec
and
lods
popa
push
cmc
in
adc
lahf
std
mov
mov
test
pop
inc
cmp
inc
jle
sbb
icebp
lods
mov
arpl
daa
or
add
mov
dec
push
loopne
adc
add
xchg
inc
nop
fdivs
mul
xchg
inc
das
inc
jp
pop
popl
inc
fwait
sbb
and
xchg
mov
mov
ds
stos
pushl
add
mov
scas
push
pop
or
adc
lcall
lock
aam
fcomps
xor
pop
lret
int
jno
test
outsb
iret
adc
add
in
test
scas
and
jmp
sbb
xor
and
outsb
int
enter
mov
lcall
jl
pop
aas
jno
ret
lock
sbb
jge
imul
xchg
das
scas
loope
pop
clc
mov
sub
cmp
mov
arpl
out
mov
push
inc
popa
sub
sbb
punpckhbw
gs
sarl
shr
int
stos
xchg
movsl
mov
rcrl
lea
aam
jns
lret
push
push
dec
pop
xor
jecxz
or
mov
push
mov
movsl
out
jnp
aaa
xor
pop
add
sub
mov
push
mov
jle
lret
ret
jo
add
data16
jo
inc
pop
add
scas
mov
pushf
stos
sub
int3
fbld
pop
and
int
adc
cmp
out
xor
test
in
cwtl
xor
cmp
outsb
or
orl
sbb
push
mov
cli
adc
mov
xlat
jmp
insb
inc
or
lret
out
xor
add
mov
mov
jo
and
adc
rcll
fs
cltd
cmp
xchg
cmp
push
adc
inc
rcrl
pop
es
dec
pop
cmpb
adc
jge
mov
stos
cmp
and
mov
cmp
or
out
cwtl
jecxz
jg
cmpsl
cmp
push
inc
sbbb
rcr
icebp
fistpll
lcall
test
cld
movsb
adc
insl
pushf
sub
mov
inc
scas
movsb
inc
pop
jnp
inc
js
push
cmc
pop
pop
push
push
test
in
mov
testl
sub
test
call
sbb
mov
mov
mov
je
js
lcall
inc
xchg
mov
dec
scas
pop
inc
sbb
pop
or
add
leave
xor
jb
lds
std
mov
int
jns
jnp
mov
scas
xor
bound
xor
jecxz
icebp
push
dec
orb
out
je
mov
dec
out
ja
pop
lds
pop
into
movsb
scas
jmp
mov
scas
lods
icebp
scas
jbe
das
or
sub
testb
dec
mov
mov
ljmp
or
das
adc
lahf
loope
or
fisubrl
shll
mov
stos
inc
shlb
and
sahf
out
shl
pop
jns
xchg
jle
inc
mov
fildll
pop
and
rcrl
shlb
in
xchg
movsl
lods
into
jl
cmpsl
cli
inc
scas
add
repz
imull
jp
or
xor
in
lret
adc
call
rorb
aas
dec
outsb
cmp
add
sub
add
mov
arpl
clc
adc
fsub
add
xchg
jp
mov
mov
cmp
add
shl
imulb
jle
and
mov
lahf
addl
mov
dec
insb
push
aad
loop
repz
ffreep
push
push
mov
loop
scas
mov
push
and
les
cmc
push
pop
xchg
or
dec
pop
test
xor
pop
xchg
mov
int
test
cltd
sub
or
stos
outsl
xchg
jae
int3
test
cmc
jnp
adc
cmpsl
push
sub
mov
fwait
pop
fwait
movsb
cld
es
push
insb
pop
lods
into
lcall
cmovle
mov
scas
shlb
sbb
ja
jns
daa
dec
cmp
lcall
fwait
cmpsb
add
imul
dec
aas
mov
dec
adc
mov
lret
cmp
insl
outsl
push
in
andb
test
cs
hlt
aas
mov
mov
jge
je
out
adc
fbld
jne
lret
sbb
aas
rcrb
fst
dec
sub
aas
fidivs
cmp
fmulp
push
pop
mov
sub
cmp
xlat
sti
sti
xlat
int3
and
outsl
mov
add
xor
jl
pop
lretw
xchg
pop
mov
loopne
and
xchg
in
push
aaa
dec
movsb
fisubrl
stos
xor
cwtl
cmc
xchg
fwait
mov
and
scas
fcompl
loop
xor
test
cmp
into
mov
and
jl
pop
adc
lock
les
mov
sti
pop
lcall
mov
xor
inc
fistl
mov
jo
sub
jb
mov
insb
mov
shlb
dec
adc
pushf
push
mov
lock
inc
adc
sub
fdivl
cltd
jo
bound
dec
in
sbb
nop
sub
xchg
mov
push
cmc
inc
jns
fwait
je
mov
mov
movsb
dec
bound
mov
cmpsb
dec
repnz
je
sahf
inc
lods
subl
jmp
shlb
iret
mov
inc
mov
and
shll
nop
lcall
jecxz
push
jge
jns
inc
loopne
mov
aas
out
stos
adc
repz
mov
and
xor
test
jns
cs
cwtl
outsb
ret
sbb
loope
cmp
dec
push
adc
mov
jbe
imul
jg
and
cld
lcall
fs
cmpsl
xchg
jmp
xchg
fdivr
out
cli
mov
add
and
imul
pop
shll
popf
jmp
cmp
adc
jb
jae
pop
mov
sbb
push
shrl
ret
fistpll
dec
shrl
imul
ret
fsubrl
movsb
push
and
nop
aad
ret
shll
cmpsl
pushf
pusha
jp
or
xlat
mov
rorb
rcll
cmp
data16
inc
jno
fwait
xlat
mov
lds
xor
mov
sub
or
jp
stc
push
add
cmp
mov
push
sahf
xchg
das
ficompl
jmp
scas
sbb
call
mov
arpl
cmp
xchg
mov
add
xchg
repz
cmpsl
or
cmp
sbb
aaa
daa
xchg
fdivs
xor
pop
dec
mov
outsl
mov
and
mov
jg
ret
aaa
movsb
faddl
xor
cmp
mov
pop
or
bound
ss
adc
xchg
pop
sub
dec
cmp
sbb
dec
ljmp
inc
mov
loopne
aam
lret
nop
xor
je
inc
sbb
adc
and
into
insb
jle
ret
push
push
pop
fldcw
jne
sub
dec
ds
pusha
cmp
in
jmp
cmp
stos
cwtl
mov
cmp
rdpmc
pcmpeqb
xchg
add
ja
lcall
in
mov
jp
dec
xchg
push
dec
jbe
mov
mov
dec
dec
jg
enter
push
into
sub
shrb
xchg
insb
mov
out
pop
les
imul
pop
jp
sbb
sti
add
notl
mov
mov
scas
int
lock
arpl
xor
mov
adc
mov
das
fmuls
push
mov
cltd
jb
cs
sar
inc
inc
pusha
mov
repz
inc
mov
cmp
test
cmpsl
pusha
dec
sub
pusha
xor
jl
arpl
shlb
mov
pop
addl
cmp
out
mov
rclb
jo
insb
outsl
push
cld
fsts
ret
or
fwait
xor
jno
shll
xchg
ss
inc
cmp
jb
jae
sbb
sub
inc
stos
repnz
stos
fs
pop
daa
ds
jl
js
mov
mov
adc
fcoms
adc
cli
pop
cmpb
stos
out
in
out
sbb
test
lret
cmc
and
addb
unpcklps
mov
pop
sbb
pop
xor
jmp
fisttpl
repz
ficompl
sarb
lahf
xchg
test
sahf
push
cmp
jg
jmp
iretw
loop
std
fs
fs
jnp
mov
fidivs
setae
repnz
push
ret
push
lret
in
cmp
mov
ljmp
addl
push
mov
pop
iret
xchg
jg
pop
iretw
in
cltd
rorb
jge
repnz
test
popa
test
and
push
mov
dec
dec
dec
cmp
pushf
jp
xor
mov
out
mov
xchg
jno
sub
mulb
jb
xchg
and
scas
icebp
mov
clc
sbb
ret
adcl
test
jecxz
mov
jb
ljmp
dec
aad
inc
pop
jge
fidivrl
jo
and
int3
imul
loopne
test
xchg
mov
int3
lea
cli
fsubr
aas
repz
mov
imul
ss
mov
addl
push
cmp
clc
push
or
imul
pop
mov
sbb
pop
daa
addr16
popa
sarb
or
mov
push
dec
out
sbb
cmp
xchg
aad
mov
std
jo
add
mov
mov
iret
mov
arpl
loope
or
lock
and
jne
je
enter
test
pop
adc
mov
xchg
sbb
lcall
imul
cmp
bound
pushf
mov
shrl
sub
jae
movsl
mov
push
jo
in
pusha
pop
fdivrs
jns
int3
mov
mov
add
dec
and
data16
sbb
and
jle
shll
cmp
sbb
imul
pop
test
scas
push
aad
sbb
mov
inc
mov
popf
add
fsts
sbb
in
mov
pop
push
sbb
leave
dec
loopne
mov
jle
sahf
fiadds
inc
push
push
push
pop
mov
pop
aad
add
sub
mov
lcall
pop
push
xor
sbb
mov
sbb
test
mov
jmp
fmull
jnp
shlb
mov
inc
or
xchg
sub
pop
mov
xor
xor
push
jnp
aas
mov
mov
dec
jae
sub
daa
test
xchg
mov
les
clc
dec
adc
mov
xor
or
pop
xor
jge
sub
popa
sub
jp
inc
insb
or
or
test
test
je
xorb
mov
daa
pop
xchg
das
cmpb
and
xor
adc
push
push
ja
test
scas
data16
sbb
lahf
dec
pop
pop
orl
mov
imul
or
cmp
pop
mov
cmpsl
add
out
sub
mov
lcall
lret
in
out
fsubrs
inc
sti
mov
es
sub
xor
sub
fildll
xchg
test
push
xorl
imul
push
push
add
xchg
and
push
mov
mov
outsb
jo
arpl
pop
xlat
xor
in
push
mov
xor
jne
inc
xchg
stos
fwait
adc
inc
mov
xchg
pop
mov
clc
sti
mov
adc
lret
cs
fdivs
test
fsubp
push
cltd
fldenv
xchg
fs
jne
xchg
mov
mov
sahf
mov
or
pop
pop
pusha
cmc
mov
xchg
mov
jmp
xchg
stos
orl
arpl
lret
pop
adc
adc
sahf
es
push
jnp
in
shrl
clc
ds
in
test
clc
les
fucomi
and
add
stc
xchg
aad
and
jmp
mov
jge
push
in
shrl
aam
sbb
sbb
cmpsl
ja
pusha
inc
pop
ret
sub
frstor
xor
loopne
outsb
aad
jecxz
mov
fmuls
sub
xor
test
ds
push
add
rcll
jae
sbb
pop
mov
repz
daa
das
imul
dec
insl
sbb
addr16
in
dec
outsb
or
aad
mov
mov
ret
outsb
jl
add
out
and
das
and
mov
shrl
outsb
mov
ret
aaa
push
xchg
pop
pop
add
decl
cmp
jns
subl
stos
mov
mov
xor
sub
insl
stc
cs
cmpsl
push
out
aaa
bound
xor
movsl
jecxz
inc
test
inc
mov
or
xor
scas
adc
adc
inc
pusha
in
pushf
lods
pop
mov
rolb
sbb
jecxz
xchg
movsb
dec
cmp
xchg
hlt
mov
aam
pop
popa
out
sub
out
mov
repz
fs
xchg
inc
push
mov
aad
test
push
shlb
repnz
shlb
or
movsl
push
rolb
inc
daa
adc
and
addb
or
leave
inc
add
cwtl
mov
movsl
fucomi
mov
add
or
fistpl
cmp
sbb
xchg
mov
mov
stc
and
stc
jo
testl
leave
xor
outsb
loopne
fldenv
loop
out
push
lret
sbb
dec
scas
inc
scas
cmp
xor
sarb
add
outsb
pusha
mov
popa
inc
dec
ss
sarb
pop
adc
or
aad
jp
les
out
or
or
cmp
ljmp
jne
and
data16
ret
shl
in
or
dec
inc
inc
rolb
inc
or
outsl
push
sbb
or
inc
sub
scas
mov
ljmp
cs
aas
divb
xchg
xchg
insl
icebp
dec
ja
arpl
mov
mov
loop
jae
loop
mov
push
xchg
insb
xchg
pushf
inc
add
popa
aad
pusha
mov
sbb
popf
push
inc
or
stos
mov
call
dec
xchg
ret
xchg
int
cli
cmpsl
cmp
inc
ljmp
mov
dec
and
lahf
outsl
push
dec
fldenv
stos
int
lret
push
push
xchg
iret
test
outsb
mov
and
inc
adc
cmp
mov
std
call
xlat
imul
lods
adcb
cmp
push
push
dec
cmpsb
and
xor
jo
lods
nop
out
cwtl
xlat
xchg
cwtl
cmp
xchg
sub
clc
cmp
inc
push
out
jbe
mov
imul
add
and
aam
inc
inc
push
inc
data16
adc
outsl
je
push
add
xor
decb
pop
lods
in
je
pushf
xor
push
sti
mov
jb
inc
aam
aaa
out
adcl
xchg
ret
aas
sahf
stos
mov
sar
das
mov
push
cmpsl
imull
jbe
js
scas
imul
test
ja
stc
loope
cmp
mov
jbe
imul
jle
pop
push
js
xchg
cmpsb
pop
jae
ds
aas
test
out
push
pop
in
xchg
jae
push
jo
outsl
int3
pop
push
dec
or
inc
sbb
push
movsl
test
cli
shll
sbb
out
xor
inc
sbb
add
fwait
and
and
leave
jnp
out
pop
sahf
xchg
add
jb
scas
mov
lods
in
and
bound
fwait
leave
scas
aaa
mov
int
cld
pop
sub
mov
jb
xor
adc
call
and
mov
inc
test
xlat
push
outsb
or
mov
mov
popa
stc
sub
mov
outsb
mov
daa
push
pop
fdivs
pop
lret
outsb
mov
out
jb
xor
subl
jae
aad
pop
and
lcall
and
jecxz
mov
add
push
cmp
or
les
das
push
imull
pushf
jmp
nop
or
nop
xchg
loopne
gs
outsl
or
les
mov
lods
jge
jnp
std
arpl
daa
lcall
adc
sbb
stos
mov
scas
addr16
out
lcall
not
add
pop
out
xchg
lds
frstor
mov
adc
and
mov
cmp
fistpl
add
push
sbb
popf
sub
aam
cmpsl
add
pop
adc
dec
addb
xchg
dec
adc
insl
adc
out
adc
inc
mov
mov
push
mov
aad
sti
push
cmp
jns
pop
xchg
add
xor
and
adc
out
in
push
lea
jb
dec
js
loopne
cmp
stos
dec
stos
in
cld
mov
dec
push
jnp
cmc
jae
mov
push
cmp
mov
outsl
pop
scas
and
mov
in
jl
das
cmpsl
inc
jnp
mov
in
inc
jb
jmp
dec
mov
mov
mov
xchg
xor
ret
jb
mov
gs
gs
dec
arpl
cmp
mov
insb
mov
mov
out
mov
cmp
sti
add
sub
jge
imul
mov
mov
fs
mov
add
popf
lahf
sahf
and
jp
imul
leave
or
fldenv
fwait
les
or
sbb
mov
into
pop
fcompl
gs
sbb
imul
xlat
jecxz
mov
int
pushf
cld
aaa
pop
or
mov
fcompp
add
mov
jns
addr16
push
push
inc
cwtl
mov
dec
push
cmp
hlt
xor
jmp
xchg
dec
scas
js
in
lahf
imul
mov
dec
cmp
or
test
cmp
lods
ja
cwtl
out
movsb
or
jb
pop
mov
insl
stc
mov
xlat
mov
and
push
cli
sbb
test
dec
adc
jbe
sub
aas
popf
lcall
push
or
call
push
pop
and
cmpb
push
cmp
data16
ds
fldl
dec
dec
cs
mov
cmp
xchg
inc
sbb
into
hlt
adc
test
sub
adc
mov
aad
cmp
mov
xchg
cld
fsqrt
dec
jbe
negl
dec
scas
ret
es
mov
fcmove
aad
aad
push
cli
sbb
dec
gs
sbb
mov
push
cltd
push
pop
cld
push
mov
mov
into
dec
mov
aam
sti
mov
push
mov
popf
xchg
xor
sbb
mov
xlat
scas
mov
pop
cmp
pop
mov
dec
test
xchg
loop
cmpsl
push
rorb
and
inc
cmp
mov
inc
mov
enter
mov
int3
daa
in
fcomp
imul
push
aaa
ljmp
gs
in
loop
lahf
push
loopne
in
pop
out
cld
lds
mov
xchg
sbb
test
and
pop
adc
jbe
adc
clc
mov
xchg
mov
jle
in
adc
movsb
enter
cmpb
xchg
into
mov
lret
sarb
shr
and
aad
inc
sti
sub
add
sub
push
popa
inc
and
popa
addl
mov
addl
fwait
and
iret
adcl
mov
loop
negl
xchg
or
data16
lods
scas
std
test
fildl
sub
mov
pop
in
xchg
pop
push
mov
add
mov
into
xor
dec
mov
andl
adc
sbb
dec
cwtl
in
rcrl
adc
in
mov
cmp
andb
aad
push
popa
out
or
xlat
mov
popf
cs
xchg
mov
sbb
adc
cli
jp
aas
loop
loopne
push
push
push
outsl
popf
add
jae
mov
or
adc
call
inc
leave
push
sarb
mov
push
inc
into
cmp
or
addb
clc
rol
cmp
into
bound
push
loop
cmp
sbb
lods
scas
jg
enter
popf
push
inc
aam
aaa
inc
push
shrb
pop
add
sub
das
loopne
dec
imul
mov
rorb
add
xchg
mov
ret
fists
rorl
jmp
xor
pop
in
push
cmp
loopne
mov
outsl
sbb
pop
jl
in
mov
fdivrs
ficomps
shlb
pop
in
sub
and
inc
pop
push
fwait
jns
rcrl
pop
add
ffreep
imul
hlt
ret
sahf
fisubl
cmp
es
sub
arpl
repnz
cltd
loope
sub
lcall
mov
mulps
int
jmp
jge
ret
and
adc
jle
xchg
in
push
mov
stc
adc
inc
imul
stos
adc
test
shl
inc
xchg
add
pop
adcb
adc
jno
pop
sarb
aad
fwait
and
rolb
loop
jl
push
jge
lcall
insb
clc
mov
idivb
enter
orl
sbb
mov
rcl
nop
sbb
pop
adc
loope
das
scas
jns
mov
sbb
pop
pushf
data16
stos
xor
pop
in
outsb
pop
xor
test
push
cmc
inc
aaa
call
cwtl
mov
inc
mov
mov
jl
jle
fstpt
loope
cwtl
mov
add
cmp
scas
mov
pop
fs
into
sahf
mov
mov
mov
pop
xor
icebp
pop
cltd
or
xchg
xchg
xchg
jo
xchg
jle
cmpsl
mov
mov
jbe
es
mov
push
frstor
add
lods
adc
or
push
mov
mov
pop
mov
and
ficomps
ss
arpl
js
mov
add
lods
es
push
call
out
aam
lods
lret
cmp
push
js
mov
jl
ret
shrb
enter
movsb
add
adc
hlt
cmp
mov
fldt
and
in
cwtl
mov
mov
mov
clc
outsl
push
xchg
clc
push
ds
push
stos
jbe
pushf
mov
scas
test
lock
pop
inc
and
push
leave
adc
mov
aas
cmp
sub
inc
mov
mov
mov
mov
sub
scas
ret
in
adc
or
and
cld
sbb
repnz
xchg
scas
fmull
adc
fisubl
hlt
adc
ret
sbb
inc
test
sbb
int3
repz
or
xor
movsb
mov
js
or
jmp
mov
add
dec
dec
sub
xchg
rorb
mov
repz
push
dec
ljmp
mov
scas
loop
xchg
popf
and
add
adc
adc
pop
add
rorb
pop
lcall
rclb
mov
insl
mov
dec
xorl
mov
inc
stos
mov
lock
test
rcll
and
and
daa
jl
cmp
test
clc
out
lds
add
sbb
lea
jg
lea
xchg
push
xchg
das
adc
gs
xor
scas
stc
in
mov
mov
jbe
filds
imul
shrl
loope
rorl
test
ud2
xchg
add
push
mov
mov
jecxz
cmp
push
xorl
nop
aas
in
pop
out
and
mov
das
ljmp
jne
rcll
enter
test
mov
mov
shll
loope
push
push
and
inc
adc
adcb
cltd
stos
clc
sub
loope
pop
cmp
mov
jbe
mov
add
pop
enter
pop
pop
mov
mov
je
movb
cmp
sbb
jbe
push
xor
out
push
leave
aam
insl
rorl
or
and
mov
xchg
test
sbb
inc
push
adc
mov
fsubl
xchg
add
aad
popa
sub
fidivrs
xchg
lods
jns
stc
push
jb
inc
rolb
lret
test
sbb
push
add
mov
pop
xchg
sbb
pop
inc
mov
sbb
and
pop
ret
pop
cltd
cmp
jae
mov
push
je
clc
push
xchg
sub
sbb
sahf
jge
sub
cwtl
dec
aad
cmc
cmp
lret
jmp
enter
repnz
jl
aam
lods
mov
inc
stos
jle
lods
jns
je
decl
and
ss
in
pop
and
dec
loopne
call
pop
nop
xor
fidivl
call
cmp
std
jnp
inc
xchg
imul
int3
inc
lahf
jb
or
movsb
test
lret
cltd
xlat
ds
adc
jbe
dec
pusha
repnz
out
jmp
mov
gs
imul
push
mov
inc
jbe
pop
adc
pop
stos
xchg
mov
pop
fsts
bound
insb
xchg
cltd
xor
push
add
aam
lret
dec
and
cmc
jg
outsl
mov
outsl
pusha
push
fwait
dec
xor
jne
scas
in
aas
xor
fs
cmp
lods
daa
into
xchg
lea
cmp
and
pop
cmp
fcomp
aaa
mov
add
stos
add
lock
bswap
jns
adc
xchg
xlat
scas
sub
jo
js
xchg
mov
inc
stc
mov
rorb
in
mov
or
aam
mov
mov
mov
stos
pop
lock
add
sahf
lods
push
jb
sub
jmp
addb
stc
xchg
inc
and
add
testb
mov
push
flds
and
mov
inc
cmp
mov
and
mov
out
mov
jns
fsub
inc
dec
dec
aad
fildll
clc
jnp
mov
jno
movsl
test
outsl
loop
mov
stos
cmp
adc
sub
push
xchg
cmp
leave
pusha
mov
push
leave
out
test
lods
test
aad
mov
int
xchg
dec
mov
orl
cltd
les
int3
dec
add
out
faddl
cli
jno
js
or
adc
pop
shll
cltd
ret
fadds
mov
mov
icebp
mov
test
lcall
hlt
mov
aas
adc
cmpsl
stos
and
inc
cmp
fsubp
cmc
out
pop
fldenv
shrl
jno
pop
xchg
loopne
jp
dec
nop
sub
jge
je
inc
cmpsl
test
push
pushf
push
push
je
cltd
mov
leave
xor
xor
xrelease
pop
aad
push
test
test
add
sahf
jns
popf
mov
shlb
sbb
lret
les
inc
adc
cs
into
cmp
orb
lret
cmp
adc
or
aad
jge
xorl
js
outsl
sbb
fs
push
cmc
jge
into
jecxz
pop
rorl
mov
sbb
mov
icebp
sbbl
test
mov
loop
jp
mov
jge
stc
jge
out
ds
out
loopne
mov
dec
lods
stc
push
pop
add
popf
es
rclb
inc
incb
pop
cmp
sub
pushf
and
mov
sti
xor
xchg
or
jmp
xchg
and
jmp
adc
add
cmc
or
int
jp
scas
ret
jb
shl
xchg
and
lea
dec
adc
xor
push
jge
mov
pop
cmp
in
int
cwtl
out
in
icebp
and
pop
xchg
fdiv
imul
fisubrs
stos
fld
adc
xchg
mov
mov
arpl
or
xor
fdivl
sar
mov
stos
jp
loop
pop
or
cmp
aad
sar
or
push
xchg
test
sbb
xor
stc
cmp
push
xchg
dec
jle
inc
sub
adc
xchg
pop
mov
jnp
and
add
dec
cmc
xor
add
mov
pop
push
nop
leave
imul
es
xor
xchg
outsl
outsl
pushf
sub
jmp
push
add
enter
xchg
mov
out
out
inc
or
or
or
das
sbb
jl
or
repz
push
aam
mov
mov
xchg
inc
pop
or
jp
sysexit
adc
mov
fidivrl
cmp
arpl
dec
jge
scas
arpl
pop
and
es
pop
iret
sub
lret
ljmp
lret
sub
fldenv
fisubs
aad
add
enter
sub
dec
mov
negl
push
lods
test
and
mov
xor
cwtl
fstpt
adc
dec
add
add
cltd
sahf
sbb
stc
mov
pushf
mov
sbb
or
dec
movl
shll
outsl
jmp
mov
call
pop
lea
mov
push
xchg
fwait
loop
gs
in
aam
stc
adc
ja
test
lods
loope
jg
adc
je
aam
fwait
rol
pop
jge
pop
jle
and
dec
mov
aam
cltd
sub
cmc
xchg
add
lock
sbb
je
cmp
rcrb
out
and
rcl
jnp
movsl
pop
jno
shrb
or
mov
mov
dec
inc
lret
adc
mov
shl
rcrb
add
push
and
je
or
idivb
or
into
notl
mov
mov
loope
dec
lock
cmc
pop
in
inc
call
test
or
jbe
xor
jbe
bswap
in
ljmp
jb
jnp
push
add
leave
cmc
mov
and
ja
adc
cmc
mov
mov
int
cmp
addb
dec
lods
lods
dec
data16
or
fwait
lret
std
scas
pop
fisubrs
out
lods
mov
xchg
in
mov
out
inc
push
jnp
lret
cmpsl
mov
adc
in
fdiv
rcl
mov
lret
test
imul
dec
cltd
ds
and
mov
adc
dec
jno
dec
jns
hlt
xchg
xorl
rorb
mov
or
push
sub
or
outsb
or
pop
movsl
xlat
mov
xchg
adc
repz
lock
sbb
pop
in
xor
pop
aaa
ja
aas
testb
sbbb
and
in
les
ljmp
or
push
insl
inc
fsub
add
push
cwtl
dec
lcall
push
dec
or
mov
hlt
xchg
subl
sbb
fwait
cmp
cmpsl
adc
sbb
aaa
notb
out
lret
fistps
ds
out
cmp
out
jmp
nop
or
out
mov
lods
movsb
fdivs
loop
scas
ret
xchg
ss
mov
pop
lret
lds
cwtl
xlat
int3
xchg
out
xchg
test
aad
cmp
and
test
and
or
cmp
in
and
jb
ljmp
sahf
mov
jg
xchg
jb
int3
mov
cmp
ljmp
pop
push
jp
cmp
dec
leave
mov
stos
pop
pop
and
add
lock
jle
leave
inc
cmpsl
lret
dec
daa
xchg
pop
iret
and
les
jno
int
orb
or
gs
icebp
xchg
outsl
pop
mov
ret
add
mov
pushf
daa
and
lretw
push
mov
mov
loopne
fsubl
lahf
pusha
inc
ret
das
push
push
cli
mov
and
mov
jae
sub
cltd
inc
sbb
loop
push
push
mov
cmp
xchg
inc
loopne
roll
cmp
add
decl
loop
sub
rcrb
mov
mov
lret
jnp
adc
jnp
pop
inc
sub
arpl
popf
pop
push
inc
jecxz
sbb
insb
imull
cmp
sti
cmp
xchg
ret
push
xor
and
scas
movsl
int
mov
out
xchg
fnsave
jo
mov
adc
test
pop
in
dec
pop
fsubs
sbb
shrb
mov
inc
stos
or
cmc
inc
push
dec
jge
dec
popa
int
adc
xor
cs
std
test
pop
jge
in
pop
xchg
dec
fs
mov
push
dec
aas
jmp
lods
push
pop
popl
jnp
pushf
xchg
addr16
pop
pop
idivl
or
mov
xor
in
aaa
lods
shlb
adc
mov
sbb
ret
push
xor
loopne
cld
lock
push
ss
outsb
setbe
aaa
mov
sub
les
pop
jo
arpl
loope
inc
xchg
jo
push
cwtl
mov
test
loop
xlat
imul
dec
sbb
js
scas
mov
outsl
mov
fisubs
jge
xchg
dec
notl
mov
data16
or
ret
cmp
add
cltd
mov
mov
push
test
inc
add
push
lds
pop
inc
imul
push
cmp
repz
imul
loope
ss
add
fprem1
push
cli
vcmplesd
adc
jl
mov
call
or
movsl
inc
sub
mov
lret
les
lret
pop
jg
mov
aaa
out
push
stos
inc
pop
adc
cwtl
add
mov
stc
sbb
aam
jmp
lcall
mov
push
or
popf
or
lcall
std
adc
addr16
pushf
push
or
shll
mov
and
negl
lcall
push
cmp
test
lret
xchg
jns
rcll
testb
arpl
mov
xchg
cmpsb
adc
int3
sub
cmp
cmp
leave
cmc
mov
xor
mov
and
rolb
sti
xchg
jbe
icebp
cld
outsl
add
dec
pop
xorl
adc
or
orl
pop
adc
lock
push
or
imul
push
cmp
int
lret
mov
int
push
int3
mov
jb
icebp
lret
in
je
inc
cvtps2pi
or
cmp
das
sti
sub
inc
dec
cmp
xlat
ja
daa
sbb
inc
cli
icebp
sub
lock
cmpsl
clc
pop
xchg
cmp
pop
test
call
subb
jge
mov
cmp
fimuls
out
xor
and
ret
daa
insl
or
sar
or
test
icebp
sub
and
jbe
add
jnp
jp
mov
packsswb
outsb
push
sahf
add
and
xlat
daa
sub
pop
loope
loopne
push
jl
call
mov
test
jecxz
cld
inc
xchg
mov
clc
stc
xchg
stc
fcmovne
xchg
mov
cmpsb
mov
loope
mov
cmc
adcl
push
movsb
mov
bound
mov
test
sbb
adc
sub
lret
cmpl
loopne
ror
mov
scas
addr16
iret
sbb
enter
add
inc
xor
int3
clc
xchg
ret
xchg
sub
lods
adc
mov
loopne
mov
pop
idivb
stc
scas
push
push
lret
adc
cmpsb
cmpsl
and
sbb
fs
roll
xchg
int3
lret
cltd
mov
mov
and
test
dec
pop
fadds
mov
ds
push
aad
test
out
lods
call
pusha
xchg
popf
stc
mov
mov
subl
pop
and
int
push
out
lret
cwtl
ds
or
rep
xor
dec
stos
jae
mov
push
lret
add
inc
mov
adc
sbb
std
addb
jb
mov
sub
jns
inc
mov
cmp
mov
dec
bound
push
inc
adc
test
and
adc
cmp
les
jnp
and
mov
por
sub
jo
mov
cmp
call
sahf
daa
sub
aas
aaa
inc
insb
mov
fsubrs
rcrb
inc
and
movsl
jle
fwait
rcr
pop
cmc
arpl
cmp
inc
imul
mov
cltd
cmp
pop
sti
push
push
cmp
lods
cmpsb
in
jl
je
stos
mov
sbb
push
push
rcrb
lock
popf
cwtl
mov
shll
push
es
adc
jl
add
into
test
mov
dec
insb
ljmp
mov
xor
and
pop
jo
int
ja
mov
test
or
loopne
add
repnz
mov
cmc
stos
xor
das
xchg
xchg
sbb
loopne
andl
inc
ficoms
inc
mov
inc
xor
xor
in
mov
aas
fmull
cmpsb
mov
xor
mov
mov
ficompl
sbb
popa
mov
mov
xchg
mov
lcall
push
xlat
cltd
jle
fs
stc
push
lahf
sbb
popf
out
mov
sbb
sbb
mov
cmpsb
data16
clc
mov
xchg
xchg
stos
sub
cmp
push
inc
mov
ss
stos
push
mov
in
and
andl
inc
adc
mov
mov
inc
loopne
movsl
jb
pop
enter
repnz
in
int3
inc
pop
lods
xchg
adc
cmp
hlt
xor
adc
jp
xchg
daa
push
mov
pop
out
into
lds
loope
mov
inc
cmp
mov
dec
add
sub
cmp
or
movsb
daa
ret
es
ret
rclb
into
aad
sti
js
stos
imul
adc
pop
or
movsl
mov
and
mov
jno
jg
fisubrs
fbstp
dec
movb
pop
mov
add
dec
or
cmp
cmp
in
cld
leave
bound
or
xchg
iret
mov
lret
stc
and
mov
repz
dec
mov
or
outsb
test
ss
dec
lods
pop
outsl
sub
add
and
sub
add
ljmp
mov
jae
xor
test
add
or
dec
in
add
or
scas
xor
test
dec
fs
cltd
mov
pop
mov
imul
add
lcall
adc
imul
xlat
das
cwtl
adc
push
mov
cmp
or
test
push
popf
sbb
test
popa
mov
jg
sub
mov
ss
dec
sahf
stos
jns
sbb
mov
adc
push
add
or
push
in
push
mov
pop
mov
out
push
jbe
jae
add
inc
gs
sbb
pop
popf
xor
mov
or
inc
or
push
lock
jne
out
pslld
into
jecxz
dec
or
jp
jg
mov
idivb
cmp
in
aas
adc
adc
and
add
dec
xchg
out
mov
iret
mov
adc
mov
push
push
ret
xchg
out
ja
inc
sub
push
mov
out
repnz
add
lretw
xlat
lds
inc
popf
jecxz
jl
je
adc
inc
mov
fwait
out
pop
add
clc
ret
rolb
dec
test
out
iret
adc
int
inc
sbb
mov
imul
ds
dec
cmc
push
mov
int
in
in
ret
mov
sub
andb
pop
fsubl
imul
enter
orl
xchg
pop
jo
outsb
and
sti
popf
push
js
xorl
ss
jb
pop
insb
add
cmpsl
xchg
cmpsl
cmpsl
push
je
mov
mov
int
sub
je
mulb
lods
adc
pop
push
in
sbb
lret
jae
add
xlat
cli
rolb
xchg
pop
cmp
ret
in
lea
inc
jns
xchg
ret
or
xchg
clc
and
dec
xchg
cmp
insb
clc
lret
push
mov
xor
jmp
dec
sbb
sbb
jo
push
and
mov
ret
into
inc
jne
cmp
pop
xchg
push
sbb
sahf
aaa
adc
inc
les
icebp
cwtl
dec
jp
add
lret
sub
and
pop
mov
fldenv
lods
sub
mov
fucompp
pushf
push
adc
aas
imul
or
std
add
roll
xchg
into
inc
rol
repnz
add
mov
push
xchg
pop
and
push
jg
sbb
pop
lret
stos
or
jge
and
int3
in
test
dec
dec
xchg
int3
add
pop
xor
leave
in
or
push
lret
jne
sbb
cmpsl
jmp
in
dec
lds
inc
movsl
lahf
mov
scas
insb
cltd
gs
adc
loope
lahf
xchg
inc
ja
add
mov
xchg
ret
pop
in
push
dec
inc
loopne
out
fsubs
sub
fdivp
mov
paddsw
or
in
mov
jo
add
fimuls
pop
loope
mov
mov
fdivs
dec
pop
in
cwtl
xlat
incb
dec
movsl
dec
jg
cs
push
inc
push
out
push
mov
repnz
sub
cs
push
int3
mov
mov
mov
mov
xlat
lods
enter
mov
sbb
gs
mov
xor
xor
jns
mov
add
das
stos
mov
mov
in
sub
push
dec
pop
fsubs
aam
lret
sbb
imul
add
call
test
mov
jecxz
mov
push
push
and
jne
gs
xchg
xchg
and
dec
add
das
xor
mov
sti
sahf
cmp
addl
stos
mov
fs
popa
or
mov
gs
lds
dec
lock
addr16
cmc
mov
test
dec
pop
xchg
and
in
inc
pop
repz
xchg
fisubrs
jp
add
int
fimull
jecxz
adc
mov
imul
dec
push
aam
outsb
and
insb
stc
cltd
mov
ret
xchg
aaa
decb
mov
xlat
aas
lret
cld
mov
rorl
dec
cmpsb
fildl
and
jno
cwtl
push
xchg
jne
adc
pop
nop
xor
fwait
insl
or
pop
repz
daa
push
sbb
loope
adc
inc
mov
xchg
loop
or
jge
and
movsb
loope
inc
lcall
xchg
mov
inc
pusha
testl
push
insl
push
dec
addr16
xchg
pop
nop
int
fbld
insb
imul
mov
cli
pop
adc
pop
fnstenv
inc
lea
or
xor
xchg
jle
cwtl
out
jl
int
test
mov
mov
ds
xor
mov
jbe
sub
cmpl
popa
push
push
repz
jns
pop
push
lods
sbb
jnp
cmpsb
cmc
inc
out
jp
pop
and
sbb
push
push
xchg
sbb
jns
sahf
lret
adc
sub
xchg
adc
jno
sbb
cmpsb
cmp
push
inc
cwtl
or
fcmove
dec
xor
pop
sbb
push
std
fnstsw
ljmp
push
mov
push
xchg
stos
sbb
cmp
mov
test
cmp
jp
in
fwait
jmp
stos
lods
add
dec
cs
xchg
and
imul
sbb
or
inc
shlb
push
sahf
iret
ja
js
fbld
pusha
sahf
imul
sarb
jge
sub
mov
das
mov
fcompl
dec
sbb
adc
iret
adc
mov
movsb
out
and
lret
popa
pop
pop
out
out
fwait
push
and
sbb
push
int
push
mov
jmp
or
hlt
mov
xchg
imul
and
cs
adc
ds
shlb
insb
adc
xchg
mov
jmp
sbb
sbb
ja
jae
loopne
cmp
adc
scas
loop
add
insb
arpl
jmp
sbb
inc
adc
pop
call
jge
push
cmp
fidivrl
push
pop
push
hlt
xor
push
dec
push
sbb
xor
int3
mov
jne
xorb
pop
xor
insl
js
dec
xor
pushf
push
sahf
lods
dec
push
jno
icebp
jnp
gs
in
sub
push
xor
add
push
and
scas
lcall
xchg
push
sti
roll
into
in
loope
jecxz
jo
sub
mov
outsb
adc
in
es
jmp
addr16
inc
popa
adc
xchg
push
imul
xchg
cmp
pop
or
repz
add
ficompl
cli
inc
subb
pop
popa
filds
xchg
in
jo
lea
jle
adc
rclb
xchg
lcall
pop
or
pop
cmp
inc
sahf
jb
sti
imul
sub
mov
cmp
loopne
rcl
es
lea
cmp
pop
outsb
push
fcomp
jno
decb
push
mov
test
loope
loopnew
lock
xchg
jne
xor
push
push
fdivs
add
rep
push
cs
insb
stos
add
ja
sbb
stc
mov
test
add
mov
dec
fdivs
bound
js
mov
mov
out
jmp
int3
mov
pushf
mov
xor
mov
xchg
or
mov
cmp
jnp
pop
jbe
fcmovnu
jl
lret
ffreep
mov
inc
shlb
imul
arpl
das
cmp
adc
mov
lea
fwait
mov
xchg
sti
cli
push
cltd
push
sub
push
sub
sti
fs
outsl
bound
push
mov
jmp
lods
cmpsl
sbb
xor
rclb
and
dec
xchg
mov
loop
inc
sbb
jo
inc
or
pop
out
push
in
stc
sbb
jae
jg
std
adc
int
leave
ja
mov
hlt
rcl
lea
xor
xor
cmpsl
daa
into
test
xchg
and
cmp
pop
loopne
jmp
shll
fldl
jae
dec
pop
std
frstor
sbb
sahf
movb
or
xchg
movups
add
lock
je
push
dec
mov
dec
sti
cmc
adc
lcall
lret
sbb
std
popa
add
fiaddl
mov
mov
movl
adc
js
bound
jp
inc
mov
mov
mov
sbb
xlat
mov
pop
sbb
popaw
std
pop
movsb
push
mov
or
cmp
jo
subb
adc
loopne
fcomps
xor
xor
clc
test
cltd
xchg
ficoml
pushf
or
outsl
adc
cmp
mov
sahf
inc
rorl
sbb
aas
movsb
xchg
outsb
mov
add
adcb
mov
ds
out
cmp
add
jp
cmp
mov
xchg
stos
dec
sti
cmpsb
push
push
xchg
mov
mov
add
pusha
scas
jbe
jae
cld
fstps
lods
mov
mov
push
in
imul
jnp
mov
aam
icebp
imul
cli
pshufw
ficompl
mov
add
mov
out
loopne
sub
loopne
test
mov
push
into
fcomps
pop
and
in
dec
xor
outsb
mov
ja
and
lret
dec
mov
pop
fwait
xor
fidivrl
jmp
fcmovu
push
mov
cmp
sub
mov
push
test
jmp
mov
clc
imul
movsl
js
repz
lret
push
add
ret
jmp
or
jge
cwtl
push
sbb
rorb
inc
addb
xchg
fldenv
and
out
xor
push
and
lds
push
ret
xchg
cld
inc
aad
lock
sbb
outsl
lcall
push
filds
loope
les
stc
addr16
les
xchg
sbb
fists
mov
push
cmpb
mov
adc
insb
push
mov
mov
in
inc
outsl
daa
or
push
fdivrl
aas
adc
xchg
sbb
divb
fidivrl
xor
pushf
stos
jle
daa
vmovntps
mov
xchg
mov
cmc
xor
fnstsw
xor
dec
rolb
xor
mov
cmp
mov
pop
push
dec
sbb
call
push
adc
jp
mov
inc
iret
stc
mov
lahf
cwtl
mov
mov
push
leave
orb
fs
mov
inc
call
cmc
je
sbb
insl
outsl
push
mov
push
mov
dec
daa
scas
pop
nop
dec
or
loop
lahf
xchg
xlat
rcl
adc
ds
in
aaa
xchg
jo
aaa
test
stc
insb
xor
fisubrl
push
or
aam
jmp
mov
or
ds
lock
out
push
int
repz
loopne
in
jle
jle
cmp
clc
cli
or
fisttpll
jg
adc
pop
lret
call
pop
cltd
lods
call
and
push
cmp
pop
push
pop
lahf
insl
pop
sbb
jmp
dec
and
jns
sub
jnp
ljmp
pop
xchg
lds
or
pop
mov
mov
subb
push
inc
imul
js
insb
shll
pushf
inc
jg
in
and
addr16
sub
push
dec
pop
aaa
dec
mov
jge
mov
stos
arpl
fucomi
sbb
cmpsb
mov
pop
rcrb
or
sete
add
imul
push
fidivrs
ljmp
repnz
sub
cwtl
insb
cmpsb
dec
lret
addb
adc
shlb
mov
adc
adc
and
mov
inc
or
pop
sbb
pop
push
dec
je
mov
jns
lahf
sarl
in
jb
jno
gs
testl
push
fnstenv
adc
inc
mov
fucomp
sti
loop
sub
xor
fs
rcl
ljmp
cmp
and
mov
clc
testl
int
mov
push
sub
ror
add
clc
cltd
je
in
push
mov
fstpt
mov
mov
in
std
inc
xchg
jnp
imul
inc
and
inc
out
and
fwait
cmp
sbb
rcrb
call
aam
dec
mov
cmp
push
jge
icebp
adc
imul
dec
cmp
js
leave
inc
in
adc
popf
lods
jmp
cltd
insb
mov
mov
fucomip
aaa
jbe
rcrl
ljmp
push
aaa
pop
push
dec
iret
sbb
mov
insl
pop
fcomip
stc
cwtd
inc
mov
scas
inc
outsl
out
push
je
pop
cltd
ljmp
fwait
out
mov
mov
adc
repz
loop
dec
sbb
cltd
pop
arpl
cli
xchg
ret
pop
lcall
xchg
or
mov
incl
testl
repnz
xchg
out
push
ljmp
mov
pushf
push
push
pusha
xchg
dec
sbb
dec
add
lcall
and
jp
and
leave
shrb
shl
gs
jge
js
ljmp
outsl
je
arpl
adc
lock
int3
lods
stc
mov
mov
mov
mov
sub
dec
dec
lret
cltd
iret
xchg
shll
cmp
or
sahf
sub
out
lds
inc
pop
rolb
rol
hlt
sti
xchg
push
cmpsb
fsubr
xor
fwait
lcall
mov
xor
adc
push
cmpsb
lods
cmp
idivb
pop
jnp
sub
dec
test
pop
and
adc
cli
and
xor
shll
das
and
push
xchg
dec
rolb
popf
pop
mov
out
add
pop
xlat
aas
das
push
mov
aas
sub
movsb
stos
cmpsl
dec
push
cmp
fwait
fwait
sbb
repnz
data16
js
outsl
inc
das
jg
ljmp
stos
cmp
and
mov
repz
mov
xlat
xchg
in
or
cld
js
or
xlat
stc
mov
mov
ds
mov
lret
fcmovb
cmp
jb
iret
daa
sti
in
xchg
and
fsts
xchg
push
xor
shll
cmpb
push
bound
out
mov
lods
addl
out
dec
ret
test
dec
xlat
inc
cmpsb
dec
mov
mov
fdivrl
into
filds
jno
rep
movntq
out
add
pop
icebp
les
jno
lock
mov
pop
sub
lret
xchg
scas
add
adc
push
cld
test
xchg
popf
in
xchg
lcall
cmp
jae
shrl
aaa
dec
sbb
lea
mov
repnz
negb
fdiv
fidivrs
hlt
pop
cltd
dec
leave
data16
imul
jg
loopne
sub
and
jle
std
xor
lret
clc
sbb
bnd
cmpsl
shr
mov
push
test
sub
pop
sarb
pop
jg
test
aam
cmp
cmp
dec
stos
jne
scas
mov
shll
jp
push
sbb
and
xlat
lods
idivl
and
mov
mov
ss
push
cmp
rcrl
jbe
or
daa
in
add
jns
sbb
cmp
movb
pop
call
xor
dec
orl
dec
jg
xorb
inc
and
lret
sub
icebp
ja
xor
and
dec
mov
jnp
fsubs
add
pop
js
cmp
sub
inc
pop
das
jp
ret
xlat
pop
sbb
jb
cmp
and
out
sub
popf
jbe
loope
pop
fstpl
dec
ds
or
xchg
or
or
cmp
push
push
outsl
rorl
xchg
and
loop
sbb
out
push
jne
icebp
xor
pop
or
outsb
lret
test
aad
in
loopne
gs
std
in
xchg
jge
jns
sbb
mov
xchg
cmp
lcall
xor
mov
or
cmp
push
lahf
mov
mov
mov
ret
je
or
xor
mov
rorb
icebp
adc
inc
mov
stos
in
push
clc
insb
jmp
sbb
push
es
scas
aas
inc
mov
clc
sub
lods
xchg
mov
or
movups
je
cmp
and
or
int3
cmp
pop
je
jle
aas
test
sahf
daa
or
adc
stos
jg
jae
xchg
cmp
sahf
mov
and
lock
and
in
xchg
nop
ret
sub
mov
test
push
mov
cli
aas
jnp
arpl
adc
out
sarl
sbb
stos
adc
jl
pop
mov
sbb
lds
cmp
cmp
std
sbb
js
imul
sbb
sbb
lods
test
aas
out
jae
pop
out
jmp
xchg
xchg
xchg
jge
fimull
lock
fnstsw
jbe
xor
fs
arpl
mov
mov
icebp
mov
xor
dec
jo
pop
adc
ja
inc
push
popa
cmpsl
jnp
or
jecxz
int
inc
ss
sbb
mov
jp
mov
notl
hlt
push
cs
and
rcl
aad
and
mov
cmp
mov
cmp
sbb
ss
xor
mov
mov
adc
xchg
push
dec
pop
or
lret
mov
push
stc
inc
mov
add
ret
lret
and
jp
popa
aam
cmp
flds
fbld
nop
bound
test
ror
pusha
pop
jbe
rolb
outsb
idiv
in
jo
mov
mov
rorb
test
xchg
gs
xor
inc
xlat
inc
adc
rol
pusha
sti
icebp
dec
pop
pop
arpl
aaa
js
fucomi
bound
inc
out
or
pusha
cli
daa
mov
mov
pop
fmulp
ret
jbe
shlb
pop
icebp
push
sub
jmp
pop
dec
sti
lahf
inc
fidivl
ds
xor
andl
je
in
out
and
push
push
aad
pop
jb
jge
push
pusha
inc
lods
shl
imul
call
decl
mov
xor
fistpl
or
punpcklbw
addr16
loop
pop
inc
push
je
push
stc
jmp
lea
imulb
dec
push
mov
aam
shlb
sub
jno
push
sub
push
cmpb
mov
pop
push
mov
adc
jp
push
xchg
push
add
fnsave
sbb
leave
int3
cmpsb
addr16
mov
lcall
pop
push
in
mov
cs
adc
in
cmp
dec
xchg
mov
cmpl
stos
sub
fdivl
filds
mov
loopne
loopne
data16
xor
pop
add
jecxz
dec
jp
pop
fucomip
movsl
pop
push
addr16
mov
inc
aad
xchg
iret
out
addr16
pop
add
sub
dec
setne
adc
xchg
adc
mov
or
shl
gs
mov
jg
cmpsb
leave
imul
inc
push
sarb
xchg
sarl
call
dec
adc
pop
jns
movsb
dec
mov
mov
iret
jle
rorb
out
clc
ljmp
and
imulb
test
push
bound
adc
adc
repz
xchg
outsb
std
sbb
cmp
mov
adc
cmp
jl
cmp
stc
mov
mov
xor
add
sbb
popa
sahf
xor
imul
jbe
popf
jg
mov
pop
sbb
mov
jb
mov
clc
xchg
mov
jg
inc
inc
push
scas
lea
loop
lret
xor
loop
pop
decb
mov
push
lret
cmpsl
call
mov
sarl
outsl
rorl
je
xchg
xlat
std
stos
and
aam
xchg
in
push
mov
das
adc
add
or
cmp
jnp
hlt
inc
test
imul
or
fstpt
jmp
rorl
in
cmp
mov
testl
lds
ds
ja
and
push
adc
loope
lea
jp
leave
pop
mov
push
or
scas
repnz
imul
imul
jns
incb
push
jo
fisubrl
push
sahf
shll
repnz
pop
ja
lret
xchg
es
ret
pop
xchg
incl
in
sub
xor
xor
repnz
xchg
cltd
push
aas
and
inc
frstor
daa
push
scas
test
cmc
jmp
in
pop
mov
pop
fimull
test
push
imul
jecxz
mov
push
dec
push
aaa
inc
arpl
lods
jl
dec
adc
dec
xlat
out
lahf
js
in
leave
dec
icebp
inc
and
lea
aad
or
mov
adc
jge
enter
push
icebp
push
mov
xchg
lcall
jne
rolb
in
adc
mov
ret
fsub
in
cmp
dec
cld
roll
iret
and
dec
sbb
sbb
popf
pop
push
and
sub
clc
push
mov
lods
cmp
adc
push
pop
xchg
jo
fcmovbe
stc
xor
mov
scas
inc
mov
jecxz
cmp
out
nop
rcll
iret
shll
mov
sbbw
ret
roll
push
sbb
rolb
into
outsb
or
movsl
dec
sbb
mov
das
xchg
jne
lret
sbb
nop
orb
dec
pop
lea
push
sub
xlat
jl
movsl
sbb
mov
shll
mov
loope
mov
pop
pop
mov
mov
inc
std
popa
lods
ja
add
xor
dec
std
adc
stos
aam
add
cwtl
ja
inc
andl
adc
xchg
stos
xorl
pop
clc
das
push
adc
int3
dec
and
dec
rcrb
adc
fwait
test
xchg
cmp
sahf
negb
xchg
pop
gs
or
mov
or
outsl
ret
mov
cli
les
sub
ret
adc
pop
cmp
outsb
xchg
and
push
cmp
xchg
push
or
sub
push
mov
mov
dec
fildll
test
dec
icebp
and
sbb
mov
nop
popf
jg
push
mov
xchg
jnp
xchg
xlat
sbbb
push
mov
mov
sub
jbe
jle
jp
or
loope
inc
std
jl
scas
addl
leave
test
sahf
or
cmp
cmpsb
add
pop
push
push
popa
aas
cmp
lds
out
sub
sbb
pop
pop
xor
xchg
icebp
sbb
xchg
inc
jae
in
or
mov
cs
inc
adc
sbb
aam
divb
testl
push
in
push
cmp
dec
iret
sub
and
dec
pop
inc
pushf
scas
push
add
cltd
mov
popa
inc
mov
aad
aam
dec
xchg
sbb
jb
in
sub
stos
in
mov
out
rcl
mov
xchg
jecxz
mov
scas
adc
xlat
pusha
call
pop
add
je
adc
mov
clc
mov
jg
push
pop
cmpsb
inc
test
pusha
sbb
xchg
xchg
bound
adc
cmp
push
dec
jecxz
xchg
sahf
rorl
mov
push
cmp
lret
inc
in
sbb
xlat
push
and
dec
add
loope
xor
fstpl
sbb
testb
hlt
lahf
or
iret
cmpsb
pop
push
and
sahf
adc
mov
sbb
jae
gs
ret
adc
je
push
test
dec
sub
ljmp
pop
in
inc
addr16
mov
sbb
mov
sbb
arpl
popf
pusha
mov
jl
adc
lock
mov
in
fiadds
pop
inc
jne
stos
roll
sahf
pop
lcall
xchg
cmc
loope
sub
lea
unpcklps
imul
daa
sbb
mov
shlb
sbb
jl
and
test
fbstp
daa
ja
jns
xor
ret
aam
mov
jecxz
int3
xchg
xchg
out
mov
cmp
scas
rolb
insl
leave
mov
mov
cmp
enter
mov
push
jle
loope
cmp
lret
inc
xchg
dec
rol
gs
clc
xlat
adc
mov
aas
xchg
inc
std
mov
je
nop
inc
sbb
pop
test
je
decb
mov
pop
pop
fildll
iret
lahf
movsl
lcall
call
pop
adc
xchg
pop
in
loopne
lods
pop
fildll
call
xchg
jmp
jbe
pop
nop
je
add
adc
push
stc
fdivr
lret
test
sub
out
ljmp
stos
movsb
jp
cmp
lock
add
and
adc
rol
push
adc
inc
dec
in
data16
dec
and
cmc
clc
push
jne
mov
adc
mov
dec
nop
out
push
idivl
push
nop
mov
pop
mov
aam
push
bound
aas
fadds
jl
fsubrp
in
scas
mov
jge
mov
pop
jge
test
jle
jl
add
enter
or
cltd
in
bound
cmpsl
mov
ss
inc
mov
mulb
jl
inc
mov
incl
mov
inc
and
xor
dec
xchg
stos
fildll
push
lock
xor
leave
sub
out
xchg
out
fidivrl
enter
pop
pop
stos
sub
push
aad
pop
je
orb
ja
pop
jecxz
pop
add
inc
daa
xchg
cmp
pushw
inc
inc
and
lds
jecxz
jg
jmp
pop
in
push
mov
in
inc
lcall
mov
fisubrl
lods
mov
bnd
dec
sub
test
cmp
jp
fsts
cmp
cmp
mov
or
adcl
sub
out
or
sub
out
icebp
orl
sbb
mov
xor
jno
mov
imul
hlt
add
pop
ret
adc
xor
pop
sahf
add
fs
jb
cmp
lret
fistl
enter
ds
mov
fnstcw
adc
iret
mov
stos
mov
adc
pop
xlat
push
je
imul
es
mov
out
cmp
in
dec
inc
in
int3
or
hlt
jno
ss
adc
inc
mov
or
loopne
scas
mov
pop
in
and
or
pop
pop
pop
xor
leave
rorl
xor
inc
cmc
fisttps
push
testb
mov
mov
ficoml
pop
scas
jmp
jno
mov
incl
sub
lret
or
mov
aam
inc
imul
inc
push
fstpt
loop
and
lock
mov
enter
out
testb
or
or
ret
add
or
sarb
das
sbb
hlt
pushf
mov
jecxz
xchg
jnp
push
stos
sbbb
std
cmp
daa
mov
jge
lahf
push
lods
enter
push
sbb
shrb
testb
dec
out
sub
mov
nop
cmp
push
cltd
je
xchg
insl
jnp
lock
adc
aaa
pop
sti
mov
popl
lret
or
sarl
repz
mov
fisttpl
jne
sub
decl
xchg
adc
stc
adc
mov
les
and
sub
cld
jge
ljmp
push
pop
rol
inc
test
fs
inc
sub
idivb
cld
adc
pop
ds
movsb
xor
dec
jmp
jge
aam
or
pop
xchg
mov
pop
pop
push
mov
xchg
inc
push
sbbl
mov
stos
dec
loope
jmp
popa
stc
pop
dec
cmp
jns
rorl
mov
sub
mov
and
in
mov
andb
ja
push
pop
dec
or
enter
fwait
jnp
ds
or
add
leave
sbb
inc
lcall
and
inc
frstors
xchg
cmp
jmp
lea
stc
xchg
nop
xchg
jo
stos
fistpll
mov
xor
in
push
inc
incl
mov
fstpl
call
dec
pop
ja
leave
daa
mov
add
js
movsl
xchg
outsb
mov
insl
sub
into
inc
fisubrs
popa
push
imul
cmp
faddl
stos
out
insl
sub
hlt
mov
mov
lods
or
jnp
in
add
movsb
inc
ljmp
pushf
aad
or
mov
xor
adc
xlat
sub
andb
adc
mov
shll
pop
adc
decl
adc
xchg
cmc
out
repz
adc
sbb
mov
inc
xorl
outsb
leave
xchg
ss
out
cltd
notb
dec
dec
inc
shll
jmp
lret
sbb
std
movb
sbb
push
imul
adc
dec
das
aas
mov
xchg
aaa
fidivs
xor
and
or
pop
fmul
cmpsb
repnz
enter
in
stc
iret
xchg
repnz
lret
ret
pop
jns
subl
iret
jbe
sbb
fiaddl
push
jb
call
lock
adc
sbb
sub
jecxz
incb
and
jno
mov
mov
shr
sub
lcall
adc
pop
ret
or
dec
jae
cmp
shrb
icebp
sub
or
push
adc
push
pushf
stc
ljmp
pop
and
or
repnz
daa
mov
dec
add
iret
xchg
sbb
sub
pop
cld
ret
adc
movsb
push
mov
or
enter
xor
in
out
jne
mov
inc
movsb
fsubs
fwait
insl
inc
adc
insl
dec
mov
push
xchg
lret
dec
insb
pop
pop
cmpsl
inc
dec
popa
in
and
jns
lock
aas
fcomps
ret
jae
add
mov
dec
push
sbb
divb
mov
xchg
jo
out
lock
addr16
dec
decb
pop
mov
mov
fbld
hlt
std
push
clc
div
or
bound
stos
dec
scas
stos
imul
dec
jl
pop
arpl
out
xchg
and
ret
ja
in
mov
cmpsl
ret
lcall
push
imul
xlat
imul
sub
or
or
sbb
mov
mul
add
cmp
dec
jae
dec
enter
nop
out
fs
xchg
mov
repz
mov
ss
jno
inc
daa
gs
aad
sub
cmpsb
mov
lret
pop
sahf
iret
lock
daa
xchg
hlt
pop
pop
test
mov
mov
mov
inc
push
loopne
inc
movsb
xchg
sbb
js
sub
adc
mov
dec
mov
mov
int3
mov
dec
add
jle
push
call
sbbl
xchg
ficoml
outsl
enter
lods
ds
popa
inc
nop
push
cmpsb
out
mov
mov
pop
cmpsl
popf
test
lods
cli
xor
mov
stos
test
jno
xchg
pop
fldz
mov
mov
stos
pop
lret
inc
pop
je
repnz
aas
cmpsb
lcall
sbb
std
mov
mov
add
dec
dec
int
pop
rcrl
data16
fdivrs
lods
cld
jb
or
jg
dec
inc
mov
push
lcall
inc
xor
jno
iret
popa
adc
fldcw
and
xchg
add
or
loop
hlt
mov
add
ficoms
mov
int
test
shlb
jb
pop
dec
mov
addl
ror
push
jp
lea
addr16
add
loopne
fcmove
insl
mov
xor
fwait
mov
xor
fwait
mov
mov
insl
pop
cmp
hlt
or
dec
addr16
sti
push
or
or
repz
rorb
xchg
and
xor
imul
repz
cwtl
cwtl
dec
jp
pop
and
ja
sub
fisubrl
lcall
lret
push
pop
aam
push
pop
and
adcl
jge
es
fstpt
cmpsl
enter
and
xor
xchg
mov
ljmp
mov
cmp
idivl
mov
xor
sbb
addr16
fstps
sahf
add
insl
pop
jns
xchg
movsl
sahf
or
aas
test
xor
je
jno
orb
out
mov
bound
or
cmp
add
jmp
insl
push
xabort
cmpsb
andb
out
lret
outsb
ret
push
aad
push
inc
cmp
xor
cmc
daa
aas
and
xchg
insl
add
roll
fistps
loope
dec
pop
xor
pop
jo
loop
into
sub
mov
xchg
inc
clc
addr16
mov
inc
mov
enter
out
std
xlat
mov
xchg
cli
cmp
into
stc
inc
xchg
xchg
xchg
shlb
movsl
pop
in
mov
dec
fimuls
inc
fisttps
aaa
lcall
cmp
mov
cli
push
add
jns
push
adc
ret
jno
repnz
loop
dec
dec
inc
pop
cmc
scas
int3
ds
int3
stc
sbb
push
int3
sub
jns
scas
or
fld
stc
or
adc
das
rcll
or
mov
mov
lds
repz
cmpsl
xchg
dec
and
mov
mov
add
fnstcw
jnp
out
das
xchg
sub
in
in
dec
loopne
ret
cmp
sub
xchg
pusha
sbb
aas
inc
lock
inc
xor
test
ret
push
enter
repnz
push
movl
pop
add
cmc
test
inc
cmp
lret
cmpsb
xchg
dec
pop
pop
cmc
inc
jb
mov
ret
jl
adc
les
xor
dec
bound
lods
ret
stc
ss
push
insl
xor
shll
sub
push
out
movsb
out
mov
aaa
xor
pop
mov
jno
popf
adcl
xlat
xchg
lods
insl
pop
and
push
lcall
push
add
ss
jae
aaa
loope
push
ja
fistl
xor
mov
cmc
je
or
jno
insl
cmp
and
add
jnp
js
add
add
or
lret
mov
jb
mov
pop
dec
repnz
pop
test
lock
jecxz
lret
fs
mov
and
adc
call
leave
push
mov
pop
xchg
cmc
flds
cmp
add
lock
push
int
ja
repnz
xor
pop
ss
xor
fstp
lret
lds
mov
cmp
xor
push
xchg
inc
push
lea
push
and
xor
or
fnstcw
in
xor
mov
adc
xlat
mov
jge
push
xchg
ds
or
push
sub
sub
loopne
cld
in
cli
cmpsl
lahf
out
jbe
sbb
hlt
add
addb
cmpsb
add
in
mov
subl
jge
or
inc
adc
stos
inc
enter
or
dec
popf
inc
mov
aas
inc
add
addr16
mov
sbb
cmp
xchg
jno
ja
loop
hlt
mov
pop
adc
push
lret
mov
pop
mov
inc
outsb
or
movsb
loope
xchg
adc
mov
imul
xchg
pop
add
jp
in
out
mov
lret
sub
rorb
adc
mov
loop
mov
pop
cmpsb
pop
sahf
scas
lahf
fcmovnu
mov
es
add
dec
pop
das
xor
inc
jmp
dec
xchg
push
sti
stos
in
xor
pop
aaa
mov
negb
icebp
pop
sbb
add
aaa
filds
pushl
std
adc
ds
inc
scas
outsl
jmp
inc
pop
xchg
jl
mov
adc
jne
cmp
lods
jb
mov
inc
and
xchg
aam
popa
mov
data16
ljmp
ja
lods
ds
xor
loop
mov
test
icebp
sub
lods
sar
testl
stc
push
test
sbb
arpl
or
pop
pop
lods
inc
mov
xor
mov
mov
mov
mov
fadds
out
out
cmp
aas
int
jo
js
rorl
and
pusha
mov
xchg
add
test
cmpl
push
daa
sub
hlt
mov
xchg
lahf
cwtl
xchg
popf
gs
push
xchg
ds
pop
or
sbb
inc
mov
sti
sbb
sub
sbb
push
aam
xor
fucomp
dec
bound
sahf
push
repnz
je
add
fs
push
mov
or
adc
repnz
es
fsts
adc
inc
das
mov
cmp
js
mov
inc
mov
enter
lahf
cmp
sbb
cmp
outsb
loop
popa
cmp
test
push
into
push
fs
fildll
test
jns
aam
outsb
pop
or
gs
das
and
cmpb
or
jle
dec
leave
sbb
lahf
rolb
rol
in
mov
mov
adc
into
sub
mov
jle
xlat
mov
pop
enter
push
mov
cmp
sbb
xor
and
addb
pop
lcall
sarb
push
lcall
sub
xchg
ret
cmp
popa
loope
jecxz
loopne
and
das
jns
adc
mov
icebp
mov
mov
inc
jae
dec
ret
shrb
push
mov
sub
inc
seta
push
sbb
imulb
push
jge
aad
sub
dec
mov
sub
call
insl
popa
or
xorl
xor
and
es
jmp
bound
sbb
movsb
movsl
mov
add
rolb
mov
stc
ret
jp
ja
bound
push
jl
inc
add
xchg
je
push
out
adc
mov
xchg
lret
test
push
js
cltd
dec
pop
xor
cld
fs
mov
ficompl
loopne
cmpb
out
xchg
lods
int3
inc
or
lret
cmp
pop
cmp
dec
out
repz
inc
ficoms
movsb
inc
or
inc
lods
jne
popf
or
mov
and
arpl
sarl
inc
push
mov
mov
pop
push
incl
test
imul
cmp
mov
mov
dec
pop
mov
test
out
fadds
repz
pushf
iret
aaa
lods
push
inc
dec
jo
cli
jecxz
scas
cli
xchg
les
aas
pop
xlat
loope
hlt
xchg
sarl
add
push
add
sahf
clc
xchg
xor
push
int
xor
iret
jbe
jo
mov
pop
rcrl
sbb
lret
call
inc
and
mov
jp
sarb
lcall
mov
int
stos
outsl
mov
shlb
inc
insl
stc
arpl
add
pop
push
xor
cmp
iret
inc
mov
popa
lcall
dec
sbb
loop
mov
push
stos
call
scas
ljmp
das
cmpsb
pop
lea
mov
sub
inc
sbb
dec
jbe
push
jle
push
jmp
adc
mov
arpl
mov
ss
and
test
subl
dec
push
add
rcrb
add
mov
dec
adc
mov
insb
sti
push
push
mov
push
fidivrl
sub
and
dec
jle
or
inc
or
push
enter
push
scas
jmp
shrl
push
mov
notl
mov
pop
mov
ja
adc
push
xor
inc
or
out
mov
push
mov
push
sub
dec
xchg
mov
mov
sub
stos
in
shll
push
sbb
inc
test
push
into
mov
cld
js
xchg
movsb
dec
cmp
fsubrs
sahf
imul
and
and
loop
mov
adc
fdivrl
dec
repz
mov
xchg
and
mov
adc
scas
lret
call
movsb
in
xchg
push
lods
test
adc
fmull
icebp
xor
insb
dec
sbb
sahf
lea
mov
dec
lcall
addr16
int3
outsb
shll
pop
jae
loop
pop
or
mov
leave
leave
bnd
orb
cs
mov
mov
data16
and
push
sbb
imul
mov
in
jo
push
rcl
mov
test
add
aad
pushf
jmp
xlat
or
mov
pop
fisttpll
inc
movsb
jge
or
stc
cli
xor
out
pushf
jnp
push
outsl
add
sub
cs
scas
dec
bound
rcr
and
cmp
xchg
subl
xchg
push
pusha
lcall
mov
jns
dec
insb
lcall
cmp
jbe
dec
xor
or
loop
and
pop
dec
popa
push
cli
sub
aam
jmp
push
push
push
inc
aam
dec
mov
mov
sarl
dec
cmc
jg
dec
imul
push
notl
mov
jne
in
test
add
mov
test
sbb
out
sub
int
test
push
out
hlt
or
popf
cmp
sarb
pushf
inc
add
out
loopne
or
cmc
and
shlb
dec
sub
mov
pop
push
jae
ljmp
dec
mov
rcll
sbb
jne
mov
cwtl
pop
sbb
dec
call
movsb
xchg
test
cs
leave
pop
push
mov
xor
movsb
fwait
dec
imul
jno
out
cld
add
in
rcr
add
roll
jl
and
sbb
mov
movsl
pop
dec
mov
pcmpeqb
jg
xchg
xcrypt-ecb
cmpsl
mov
dec
dec
mov
mov
repnz
jmp
call
mull
and
dec
aas
push
or
loopne
cmp
dec
pop
pop
xchg
mov
jne
mov
inc
leave
sub
out
mov
scas
repnz
mov
stc
mov
aad
inc
and
ret
cs
test
into
push
mov
xor
mov
insb
add
mov
jecxz
out
out
incb
xchg
or
xor
les
mov
push
xchg
pop
pop
push
dec
mov
xchg
out
gs
enter
ror
lock
or
jmp
jbe
push
mov
fstpt
test
stos
mov
test
js
test
mov
cwtl
mov
sti
inc
outsl
mov
sub
fildll
jmp
mov
daa
xor
mov
pop
jle
movhps
fisubrs
mov
lret
sub
data16
sbb
jg
nop
inc
test
ds
into
cmc
mov
inc
call
push
pop
or
and
mov
rorl
adc
movsl
push
or
dec
xchg
push
popl
leave
cli
adc
lds
lods
gs
aaa
orl
push
ret
xchg
pop
aam
or
mov
sbb
mov
sub
call
jle
or
or
aam
inc
lret
imulb
aam
rorb
add
adc
loopne
sub
xchg
cmp
cmp
jae
jns
decb
sub
gs
xor
aaa
sarl
sbb
or
xor
int
addr16
adc
or
push
fisubrs
mov
ficompl
into
mov
inc
push
enter
adc
adc
xchg
xchg
aam
or
push
ljmp
push
pusha
jg
mov
adc
into
mov
hlt
ds
sbb
jg
mov
and
or
jle
fiadds
mov
dec
cmpsl
bound
dec
rcrl
pushl
or
in
pop
pusha
repnz
add
xchg
rcrl
xchg
mov
push
dec
outsb
test
sti
ficoml
mov
bound
pop
mov
fstpl
jecxz
call
push
clc
sub
sbb
divb
dec
int3
cmpsb
and
xor
cmpsl
jp
and
les
xchg
mov
sub
ss
or
in
xor
imul
mov
jl
jae
aas
mov
test
mov
test
mov
push
pop
mov
dec
or
inc
pop
lock
fcom
movsb
hlt
mov
testl
pop
push
je
xchg
mov
test
xchg
stc
sahf
dec
dec
clc
imul
xchg
rcrl
out
mov
add
icebp
std
mov
insb
mov
fsubrp
mov
decb
pop
sbb
dec
insl
fnsave
bound
ljmp
sahf
sub
jg
xchg
push
jle
xchg
xor
outsl
or
test
cmpsl
xchg
inc
push
aaa
adc
imul
pop
fildl
rclb
xchg
scas
jns
sti
dec
mov
stos
outsb
and
push
mov
adc
repnz
mov
mov
test
jo
mov
adc
dec
xor
icebp
pop
cmpsl
cmp
pmaxub
outsb
in
ja
mov
in
das
dec
cmc
xchg
xchg
push
sub
mov
aam
adc
mov
popf
adc
xor
fcmovnu
sbb
ljmp
outsb
add
or
adc
mov
push
cld
xchg
and
cmp
and
insb
insl
arpl
xor
push
sahf
in
adc
repnz
ja
in
enter
ja
movsl
js
ja
mov
sub
enter
adc
ret
in
movsb
push
ljmp
mov
subps
mov
aas
inc
icebp
jp
ret
mov
stc
mov
int
adc
aas
cmp
sti
jbe
xchg
icebp
ljmp
add
cmp
aas
push
out
in
out
mov
mov
cmp
sahf
sarb
jo
jl
or
mov
push
stos
mov
cld
fcmovb
lahf
mov
adc
es
test
xchg
addr16
lds
mov
popf
imul
lods
mov
dec
dec
push
mov
lret
insb
icebp
mov
xor
mov
insl
fldl
xor
push
mov
push
mov
xchg
or
push
mov
xchg
test
out
insb
inc
addr16
je
dec
fwait
and
xor
dec
and
jns
adcb
mov
cmp
lock
xchg
repz
fwait
xor
clc
xchg
das
pop
cmp
jecxz,pt
fbstp
or
aam
sub
sub
bound
popf
mov
cmpl
jge
in
mov
cmp
push
lcall
xlat
out
push
stc
push
xchg
jae
jp
out
pop
pushf
sub
clc
inc
or
inc
cmp
and
mov
stc
loope
fildll
inc
sti
dec
push
and
icebp
sbb
sbb
pop
push
xor
enter
or
les
mov
divl
rcll
push
loopne
fsin
push
orl
or
jge
mov
incb
mov
push
sbb
push
xor
xchg
pushf
test
nop
psllw
sar
test
sbb
pop
jb
ret
pop
xorl
xchg
pop
pusha
and
das
iret
jbe
sub
lret
cmpsl
rolb
daa
cmp
xchg
jae
int3
jbe
xchg
adc
scas
push
mov
cwtl
aaa
xor
xorb
mov
mov
in
cmove
dec
lods
dec
loope
sti
add
or
sti
mov
add
mov
dec
adc
push
xchg
jmp
cmp
lods
mov
xchg
and
jbe
fisttps
xchg
lahf
lods
and
ljmp
and
aad
ret
pop
jb
push
icebp
pop
sub
dec
xor
in
cmpsl
insl
inc
lods
movsl
negl
push
orb
popa
les
sbb
hlt
test
int3
clc
xchg
shrb
xchg
jnp
dec
in
add
dec
pop
pop
push
icebp
mov
jmp
sub
mov
inc
mov
sti
in
into
mov
mov
stos
mov
push
xorb
xlat
ret
fucomip
push
inc
iret
loope
and
adc
gs
repz
pop
fwait
repz
in
adcl
fwait
push
arpl
push
inc
shlb
mov
adc
xor
sub
stc
push
and
ds
loopne
movsb
mov
je
cmp
add
sbb
fiadds
dec
xchg
push
aam
dec
xlat
repnz
sarl
and
sbb
ret
mov
movsb
cmp
shl
lretw
mov
dec
bound
je
mov
sbb
jecxz
lods
adc
imulb
aam
xchg
mov
mov
lahf
out
sub
aad
sahf
add
xchg
sbb
fidivs
inc
or
repnz
push
popf
es
sub
jo
outsl
pusha
xchg
sub
add
gs
mov
mov
mov
cmpl
sbb
mov
pop
xor
insb
cmpsl
aad
flds
jle
out
mov
lods
es
pusha
ffree
dec
bnd
jb
bound
ret
in
and
iret
ror
mov
xchg
sub
push
mov
adc
les
outsl
cld
loop
adc
andb
mov
mov
push
in
push
aad
nop
lret
test
and
aam
xchg
in
test
adc
lahf
stos
paddq
push
fwait
mov
xchg
adc
negb
rorb
cs
das
dec
jns
out
jns
adc
xlat
popf
mull
cld
int3
in
inc
inc
cmpsl
mov
jne
fdivp
jae
inc
jnp
aad
roll
std
test
iret
std
adc
mov
jmp
sub
mov
sti
es
xchg
inc
fcmovu
pop
pop
cmp
rorb
lods
rcll
in
and
pop
dec
adc
stos
scas
movsb
repnz
xchg
dec
loope
push
arpl
pop
push
mov
pop
mov
test
sbb
shr
std
jge
xorl
adc
push
mov
mov
in
cmp
loope
xchg
push
mov
push
inc
lods
and
aaa
mov
leave
jae
jbe
mov
addb
cmpsb
insl
push
addb
pop
mov
loope
jnp
fmull
push
fincstp
cli
and
xor
in
xor
inc
pop
or
mov
mov
sbb
dec
xchg
out
cmp
cmp
mov
sbb
push
jno
push
out
scas
xchg
shlb
dec
test
mov
push
xor
popf
push
cmp
pusha
cmc
mov
pushf
popf
xchg
cmp
hlt
test
ja
cmc
mov
mov
push
hlt
mov
push
jg
les
sub
xchg
fstpl
decb
fistpll
and
pop
je
mov
imul
mov
inc
and
mov
inc
mov
aaa
and
mov
data16
arpl
mov
fsts
gs
cmc
jecxz
xor
push
xchg
js
xor
pop
dec
jnp
jecxz
xchg
sub
pop
pop
fwait
aas
adcl
and
sub
int3
push
push
jl
add
push
nop
sbb
cmpsl
outsl
dec
sbb
cs
adc
stos
repnz
or
dec
dec
shrb
stos
pop
in
stc
lock
loopne
mov
inc
outsb
insb
js
insl
and
inc
fcompl
jbe
sarl
mov
aaa
setle
mov
loope
pop
sbb
cmc
sbb
mov
mov
js
sbb
add
mov
les
mov
iret
pop
out
sub
or
xchg
jnp
inc
data16
mov
mov
icebp
mov
mov
lock
adc
jo
lds
push
pop
mov
inc
mov
fnstcw
pop
inc
fisubl
aas
cmpsb
cld
rcr
rolb
icebp
pushf
push
mov
xchg
loope
adc
shlb
sbb
into
sbb
add
xor
mov
iret
cmp
iret
cltd
mov
xchg
cmpsl
pop
lret
mov
mov
in
push
jmp
mov
lret
and
inc
out
mov
mov
or
ja
inc
xor
mov
mov
sbbl
leave
loop
enter
dec
jno
data16
out
push
je
pusha
ss
popl
mov
scas
test
add
idivl
mov
adc
xor
jecxz
jns
mov
enter
jle
mov
mov
test
inc
test
mov
lods
xchg
imul
pop
mov
fldenvs
stos
mov
popa
pop
xchg
movsl
sti
xor
adc
dec
mov
stc
xor
loop
icebp
lea
mov
je,pt
mov
mov
iret
leave
addr16
pop
inc
mov
or
scas
mov
outsl
dec
mov
sbb
push
mov
ljmp
pop
jg
das
jp
hlt
into
pop
jno
or
mov
insb
ret
jo
fsubs
jge
movsl
sub
repnz
mov
sub
mov
insl
movsl
push
xor
or
and
fisubrs
arpl
test
mov
adc
std
repnz
sub
add
enter
arpl
loope
test
cmc
test
aaa
in
icebp
mov
xchg
leave
push
repz
loope
mov
adc
add
mov
out
loop
loope
repz
sti
xor
mov
mov
inc
adc
xchg
cs
cmp
in
adc
rol
and
jns
outsl
xchg
arpl
int3
into
cs
aaa
imul
pop
mov
aas
inc
aam
mov
xor
and
sbb
rorb
rclb
cmpsb
pop
hlt
call
test
imul
pop
out
lods
mov
adc
mov
call
cwtl
jae
pop
cmpsl
fsubrl
int3
mov
clc
imul
in
push
repz
dec
adc
sub
dec
jg
push
test
testb
sbb
pop
xchg
scas
xor
ljmp
je
mov
mov
sub
push
jmp
push
pop
adc
repz
xchg
jnp
cld
imul
jmp
rolb
in
xor
lahf
outsl
rcrb
test
or
insl
das
mov
sub
mov
outsb
pop
and
xchg
in
daa
mov
incb
negl
std
loop
sbb
xlat
push
dec
out
sub
sbb
adc
and
jle
test
gs
je
dec
mov
xor
not
jge
daa
daa
test
dec
adc
je
pop
dec
imul
scas
xchg
jno
cmp
ds
push
jmp
push
xor
push
adc
scas
je
aam
mov
lods
jl
pushf
loope
dec
push
rcll
imul
push
fsubl
outsl
fwait
hlt
gs
aam
repz
mov
das
inc
push
xchg
repz
int
mov
xchg
mov
xor
push
inc
and
and
xor
mov
dec
addr16
jl
pop
sbb
cmpsl
xchg
push
add
idivl
sbb
ds
inc
jae
cli
es
or
mov
xchg
test
add
push
loopne
sbb
sarl
cmpsb
mov
in
push
jno
xor
sbb
in
dec
daa
or
mov
je
cmp
ret
inc
sub
js
loopne
pop
or
stc
je
call
ds
pop
lret
out
jmp
insl
and
arpl
push
xchg
push
push
push
xor
or
cli
in
mov
mov
and
sbb
jl
inc
cld
mov
pop
shrb
lahf
sahf
dec
bound
mov
mov
or
daa
aam
mov
pop
andb
or
mov
and
mov
inc
jns
inc
add
lds
jbe
call
das
dec
es
or
lcall
inc
fidivrl
lahf
ljmp
sub
xchg
dec
xor
jns
insl
dec
icebp
push
pop
push
jg
aaa
cmp
das
dec
jmp
push
stos
jmp
jno
mov
ret
out
ds
js
add
mov
xchg
ds
orb
gs
lret
xchg
imul
and
mov
jbe
ds
mov
mov
aad
mov
or
sbb
and
in
aad
out
inc
test
mov
xchg
in
push
push
aam
inc
call
mov
loopne
sarb
sub
or
mov
pop
stos
loop
and
je
lret
mov
sub
add
jge
das
pop
mov
xchg
ja
scas
popa
push
ds
loopne
call
jbe
or
vaddpd
inc
add
push
cmpsb
cwtl
xchg
add
or
int3
jp
lcall
pop
call
pop
dec
jbe
push
sub
hlt
xor
jle
push
sbb
cltd
mov
mov
ret
fisttps
adc
push
out
mov
test
pop
std
mov
and
push
cmpsb
in
faddp
scas
xchg
mov
rcr
xchg
faddl
je
pushw
int
mov
xchg
decl
test
clc
xor
mov
pop
add
fildll
cmpsb
mov
cmpsb
fimull
sbb
xchg
push
repz
call
pop
add
jae
xor
sub
leave
sbb
jmp
dec
or
jl
jmp
inc
test
push
lock
cmpsb
ljmp
aad
loope
loop
jl
inc
adc
mov
cmp
xor
sub
hlt
mov
dec
nop
add
rorl
imul
inc
divb
xchg
xor
and
xchg
push
into
cmp
fwait
mov
packssdw
xchg
push
out
push
adc
mov
xchg
push
lahf
inc
push
mov
mov
inc
imull
push
insl
xor
popf
test
daa
aas
pop
push
enter
in
xchg
std
pushf
and
aas
and
int
and
cs
out
and
mov
mov
fsubr
add
outsl
sub
or
jnp
jne
enter
pop
mov
pop
imul
push
xchg
pop
mov
jns
pop
aam
fildl
leave
pusha
pusha
pop
xchg
xor
mov
andb
rcr
les
fnstsw
pop
inc
mov
mov
andl
pop
in
outsb
dec
jns
fldl
xor
mov
adc
test
cmp
and
fadds
shr
push
inc
dec
mov
lahf
fistl
xlat
data16
sbb
cmpsl
add
add
mull
jo
ja
hlt
mov
xchg
and
rcl
jp
push
imul
pop
pop
mov
fsts
aad
adc
push
sarb
out
mov
ret
or
sub
cmp
test
addr16
fwait
aam
loopne
int
leave
pop
lea
dec
cwtl
pop
dec
cmp
add
push
notb
or
jl
pusha
scas
xor
aad
cmp
leave
aam
mov
out
fucomi
jmp
rorl
inc
aam
inc
sbb
add
ds
aam
mov
sbb
push
push
sub
add
subb
inc
xchg
pop
mov
cmp
mov
lea
dec
or
or
ret
cs
fcompl
rorl
push
add
mov
dec
sub
pop
adc
jg
inc
jns
mov
in
and
mov
addb
jp
mov
imul
push
sub
jo
fisttps
push
and
sbb
jp
push
scas
sti
aaa
repnz
add
jne
mov
addr16
in
mov
and
and
or
std
dec
jnp
aas
scas
adc
mov
inc
xchg
push
or
cmpsl
mov
mov
or
push
rorl
loopne
cmp
data16
inc
inc
mov
sub
add
daa
pusha
es
cmpsl
adc
push
cmc
push
hlt
cmp
and
xchg
jo
repnz
cmp
cmpsb
sahf
out
sbb
jb
adc
push
gs
inc
pop
pusha
sub
fstpt
or
mov
je
jo
and
ljmp
in
pop
insl
jns
cmp
jns
lods
push
mov
jno
push
or
or
das
sub
add
push
cmp
stos
xchg
fidivrl
xchg
fcomps
vmptrld
pop
jne
rol
mov
push
out
xchg
repnz
dec
push
clc
cld
mov
mov
in
sahf
fdivl
mov
xchg
in
iret
xchg
inc
sbb
sti
mov
adc
push
pop
fmul
adc
testb
and
pop
mov
add
das
lret
mov
mov
cmp
sbb
jo
xor
mov
cli
aas
lock
loope
loop
pminub
fnstcw
inc
push
dec
stc
sbb
mov
subb
data16
mov
nop
testb
cs
in
das
jle
mov
shrb
leave
lahf
fdivrs
push
xorb
xchg
jo
incl
xchg
cwtl
push
adc
xchg
cmpsl
out
sbb
popf
inc
sahf
enter
cmpsb
mov
stos
lods
mov
mov
je
inc
or
pop
int3
shll
andb
idivl
shlb
icebp
push
sbb
adc
jno
sbb
inc
das
jb
dec
xor
jmp
pop
into
comiss
dec
ljmp
cmp
rcrl
andl
add
xor
pushf
cmp
sarl
dec
mov
ss
sbb
push
stos
mov
xchg
mov
push
cmp
bsr
leave
into
cmp
imul
mov
testb
jne
test
push
mov
push
lock
jno
pop
sti
adc
and
sub
inc
dec
jge
rorl
pop
call
out
mov
mov
sbb
cld
jno
xchg
cmc
ficoms
shlb
sub
ret
sub
cmp
dec
dec
add
dec
mov
inc
in
in
and
in
out
pop
adc
xchg
push
mov
lahf
xor
or
fldt
mov
and
sbb
push
inc
in
sub
fmuls
test
jae
rcrl
mov
ljmp
iret
xchg
mov
pop
fisubs
addl
mov
ud0
imul
pop
xor
fimull
mov
or
push
dec
mov
add
lods
mov
dec
push
outsl
pop
push
aas
das
add
in
jl
mov
jecxz
sbb
inc
rcrl
adc
in
cmc
inc
shl
push
fcoms
adc
enter
dec
cmp
js
loopne
aad
xor
sub
jns
pop
xchg
cmp
push
arpl
push
or
lea
xor
sub
mov
sub
and
dec
or
push
pop
xor
xchg
xor
in
dec
xchg
pop
xchg
inc
repnz
and
mov
lods
mov
lret
dec
lods
jp
loope
xor
jbe
dec
xchg
add
mov
lret
dec
push
mov
mov
test
jl
out
cmp
add
scas
sbb
sub
pushf
jo
push
lods
cmc
xchg
outsb
lods
sbb
pop
sub
push
aas
ja
jge
scas
je
dec
adc
das
xlat
scas
popf
or
mov
mov
sbb
popf
in
mov
fmuls
lea
cmp
in
mov
or
jle
outsl
adc
mov
dec
mov
sbb
mov
rorl
mov
adc
in
pop
jecxz
jae
lahf
divb
aad
cmpsl
pop
int
iret
mov
mov
jnp
clc
ror
mov
outsl
adc
jo
sti
or
cld
add
in
aaa
jne
push
f2xm1
cli
bound
outsl
jl
dec
ja
movb
mov
inc
push
or
and
sbb
push
and
rorb
sar
mov
adc
pop
popa
int3
sahf
fidivs
fstl
std
cmpb
scas
pop
cld
test
cmp
lea
lret
test
mov
adc
mov
mov
pop
jmp
lcall
jle
push
es
add
lock
scas
xor
fs
ja
loop
stos
fmuls
clc
aas
lcall
xchg
mov
mov
scas
mov
ljmp
ljmp
iret
aad
jle
sbb
xor
cld
leave
lock
fcoms
stos
jbe
movsl
sub
cmp
fnstenv
imul
mov
in
imul
xor
pop
jbe
xor
das
push
mov
into
in
int3
xor
loope
pop
jmp
jg
push
xchg
cli
inc
or
cmp
add
xor
jne
inc
lahf
push
xchg
sti
xor
mull
aas
movsl
pop
jne
sbb
loop
jae
push
push
mov
cmp
mov
mov
adc
xchg
push
jmp
ds
mov
mov
or
shr
and
into
jge
cmpsl
leave
out
and
sbb
mov
arpl
cld
mov
stos
pop
pop
inc
cmpsl
xor
sub
xor
jo
inc
scas
push
mov
xchg
or
sub
mov
push
dec
mov
cmp
pop
call
sub
push
mov
scas
or
fstpl
mov
repz
mov
leave
cmp
outsw
scas
hlt
xor
and
push
sub
inc
mul
xchg
test
out
mov
cs
mov
pop
das
cwtl
push
mov
mov
fwait
shl
pop
push
cmp
cmp
push
dec
push
lcall
push
cmpsl
gs
daa
cwtl
scas
mov
subl
leave
or
mov
lock
cmpsb
popl
or
sbb
sbbl
xchg
xchg
xor
or
push
nop
aaa
stc
mov
mov
pop
xchg
inc
popa
mov
xor
or
lea
adc
or
mov
push
jno
test
cmpsb
cli
xchg
xchg
insl
dec
inc
pop
rep
push
push
or
lods
rclb
ds
xchg
mov
aas
and
jg
pop
lods
mov
sahf
insl
jl
into
adc
stos
fisubl
xchg
mov
pop
push
push
lahf
sbb
xchg
insb
shrl
daa
sarl
imul
mov
pop
mov
xor
inc
repz
imul
popf
bound
jno
dec
xchg
mov
les
mov
sbbl
mov
outsb
jns
and
cmpsb
orl
adc
sbb
sub
or
and
stc
add
pop
inc
push
adc
fidivrl
mov
xor
and
mov
mov
popa
hlt
fisttpl
aam
and
dec
mov
fwait
aam
jae
inc
jnp
imul
out
dec
adc
adcl
cmpsb
test
jo
shrb
fcmovu
sub
ja
cltd
leave
push
lods
scas
lods
pop
cmp
pop
std
out
test
and
pop
call
mov
sar
loope
cmpsl
push
mov
sbb
fnstsw
jno
cld
lock
fsubrl
data16
imulb
dec
repnz
or
mulps
mov
add
push
ret
loop
pop
mov
loop
inc
aam
mov
lret
mov
inc
orl
push
jnp
mov
or
or
loopne
fs
cmp
xchg
fwait
mov
xchg
sbb
ret
hlt
ja
pop
xor
or
dec
fwait
movsl
jecxz
add
and
sarb
data16
in
aas
shl
add
sub
inc
iret
jo
sub
xchg
mov
stc
sbb
adc
scas
push
jne
mov
ds
icebp
inc
fcmovnb
ja
mov
enter
jb
enterw
pop
sti
les
mov
je
xor
test
xor
cld
or
pop
inc
fldenv
push
inc
cmp
int3
dec
dec
add
rcrl
or
mov
lods
nop
sti
loop
cmpsb
cmp
lret
xor
adc
lea
and
repnz
sbb
push
cs
inc
cmc
push
and
pop
xor
cmp
pop
ret
popf
or
push
in
push
rcll
hlt
adc
pop
xor
pusha
pop
mov
insb
inc
int
loope
push
cmpsl
sbb
sahf
cmp
xchg
clc
cmp
mov
push
in
subb
out
cmpl
movsl
push
push
rolb
adc
jo
sub
sarl
adc
sbb
arpl
cmp
out
mov
cli
hlt
sbb
movsb
es
fmull
push
or
fidivrs
bound
mov
dec
or
test
in
loop
mov
jo
hlt
xchg
cmc
jae
insb
xchg
xor
inc
xor
add
loopne
lea
add
pop
aad
loopne
popf
push
add
out
mov
mov
dec
inc
imul
in
mov
mov
dec
cwtl
add
int3
jle
dec
xor
cltd
daa
adc
jmp
and
mov
fisubs
in
ret
push
gs
jmp
fiadds
fnstcw
jne
aam
jne
pop
ljmp
mov
aam
addr16
and
mov
subb
out
xor
sahf
dec
and
jle
data16
stos
andl
adc
xor
and
out
cmp
or
movsl
outsl
stos
xor
fldcw
cmpsl
les
dec
cmp
imul
jmp
and
cmp
negb
test
xchg
call
repnz
xchg
in
pop
inc
jb
add
cli
mov
add
in
adc
sbbl
stos
daa
pop
sbb
inc
jnp
inc
call
jne
ja
inc
or
mov
loop
inc
cmpsl
add
sbb
sbb
xchg
or
out
aas
sbb
push
xchg
call
mov
cmpsb
imul
popf
sub
call
sbb
lods
mov
sub
out
dec
mov
fs
loope
jnp
xchg
bnd
xchg
inc
jns
jmp
loop
imul
mov
ljmp
jmp
xlat
inc
or
mov
add
imul
aaa
inc
andb
mov
aad
lret
testb
iret
push
mov
aas
and
imul
mov
push
dec
mov
adc
sar
dec
cmp
mov
push
pusha
das
rclb
jmp
fwait
testb
adc
sarb
or
or
mov
jbe
jmp
sub
loop
jnp
or
push
cmp
arpl
mov
popa
and
sbb
xchg
mov
and
inc
cld
in
jns
and
sbb
rclb
push
lds
xor
or
cmp
shrl
and
lahf
pop
int
and
pop
test
popf
adc
arpl
jno
and
and
cmc
leave
xchg
xor
fistps
out
ret
fwait
and
sbb
cmp
cmpsb
xor
popa
test
nop/reserved
insl
nop
lods
fdivs
test
in
inc
lcall
sub
stos
das
je
mov
mov
sub
fistpl
lods
scas
pushf
or
popa
pop
lock
bound
lds
rcrl
into
pop
xchg
sbb
jnp
mov
inc
push
mov
mov
or
mov
ficomps
mov
mov
fistps
xor
cmp
sbb
dec
fnstenv
xlat
incb
xor
pushf
xchg
cmc
nop
jo
sbb
mov
stos
outsl
xorl
daa
enter
lret
lods
xchg
adc
aas
dec
not
push
cwtl
imul
call
mov
xchg
das
in
fiaddl
hlt
call
push
push
push
xlat
fdivs
xlat
scas
nop
or
push
dec
push
add
and
dec
push
bound
enter
gs
cmpsl
cld
mov
xor
imulb
test
sbb
cmp
adc
mov
repnz
mov
dec
dec
cmpsb
adc
xchg
xchg
mov
cmp
ja
push
dec
xchg
mov
out
xchg
cmp
repz
div
lcall
out
inc
push
rcrb
cmc
jge
data16
lret
xchg
jne
jbe
mov
push
cmp
pusha
add
cmp
fcomi
xlat
nop
aaa
dec
sub
stc
or
shl
fildll
or
jle
lret
lahf
out
dec
xlat
in
jne
mov
loope
jge
add
jno
repz
fcoms
aaa
dec
repz
mov
pop
fnstenv
jno
fcoms
lcall
daa
dec
dec
std
adc
repnz
and
cmp
mov
cltd
cltd
adc
into
jmp
and
out
in
or
push
fildl
push
xchg
push
add
addr16
test
dec
adc
rol
rorl
in
pop
jnp
test
jge
scas
and
sub
mov
out
mov
dec
push
iret
aaa
dec
rcl
inc
mov
mov
inc
insb
mov
add
call
push
out
je
lahf
xor
cmp
mov
es
adc
push
fldt
aaa
jns
push
ja
fwait
nop
fwait
mov
clc
mov
fdiv
push
inc
insl
sbb
sbb
mov
in
inc
outsl
outsb
or
or
mov
and
push
loope
jmp
mov
and
fucomi
out
lock
xor
ljmp
icebp
jl
push
cltd
hlt
lods
rolb
mov
loop
push
insl
jp
push
push
movsl
fistpl
jl
dec
jp
adc
lret
not
ljmp
mov
push
scas
pushf
inc
daa
pop
or
repnz
jae
inc
in
pusha
sub
lods
or
pop
imulb
cmp
test
stos
or
mov
popf
loop
hlt
fwait
dec
sbb
lahf
cld
sbb
cmp
imul
andb
mov
dec
xchg
mov
add
icebp
push
pop
sbb
outsb
daa
clc
jmp
data16
xchg
inc
mov
add
or
popa
rcr
mov
daa
mov
sub
je
adc
inc
xor
push
pop
int
notb
iret
outsl
add
js
xor
addr16
imull
jbe
inc
cwtl
lcall
out
int3
fldcw
push
jnp
aam
sbb
xchg
push
or
jmp
and
xchg
lahf
xchg
bnd
lock
jmp
fdivr
in
xchg
jae
mov
pop
xor
sub
push
pop
cwtl
mov
jae
loopne
push
push
pop
lods
int
enter
adc
or
jae
and
inc
lods
movsl
adc
mov
sub
ss
xor
jmp
gs
push
addr16
test
lahf
add
ja
inc
stos
jle
dec
les
fnstsw
inc
jmp
std
fldpi
pop
jl
inc
ljmp
movsl
push
jecxz
mov
int3
adc
clc
adc
jbe
xor
mov
js
adc
shrl
jbe
pop
into
mov
dec
rclb
btr
mov
loop
adc
lea
test
pop
dec
sbb
push
jnp
jl
cmp
daa
push
in
cmc
ljmp
sub
cs
cmp
xor
in
jmp
jnp
lods
mov
push
jmp
add
push
movsb
mov
clc
jae
ss
repnz
shrl
mov
add
push
dec
arpl
jl
ret
cmp
sbb
cmc
fdivl
mov
add
add
sbb
fldt
pusha
mov
or
add
in
daa
or
jnp
and
mov
xor
add
punpcklbw
jo
xor
in
cs
inc
mov
xor
test
add
std
jge
dec
in
pushl
arpl
push
lock
sub
scas
addr16
add
push
sbb
adc
adc
dec
adc
sbb
aam
es
mov
and
in
insl
das
test
mov
sub
hlt
jnp
idiv
mov
and
xchg
roll
sbb
sub
dec
push
lds
sbb
inc
jmp
adc
stc
push
fstps
bound
jno
mov
cmpsb
jl
mov
dec
fcomp
jecxz
xor
pop
pop
pop
shrb
icebp
sub
outsl
cmpsb
add
lods
out
adc
imul
ficoms
cmpl
lcall
cwtl
stc
lods
movsb
out
scas
int
leave
pop
test
out
adc
ret
js
dec
cmp
mov
mov
or
xchg
inc
incl
das
cmpsl
fwait
js
pop
test
push
lods
pushw
mov
mov
loop
icebp
pop
rcrl
push
add
lock
inc
arpl
jge
cwtl
pop
dec
inc
adc
add
rclb
jl
out
mov
or
cs
aaa
lods
xchg
cld
mov
out
jl
lods
mov
iret
cmp
and
jle
out
mov
int3
test
inc
jnp
mov
pusha
fsubrs
movsb
add
and
push
and
daa
sub
cmp
xchg
jno
xchg
inc
insb
addr16
inc
jge
sbb
sbb
cld
xchg
andl
xor
sub
out
jmp
aas
fst
test
xor
test
and
bound
add
hlt
shlb
rcrl
push
push
inc
inc
or
out
dec
jno
xchg
sbb
adc
int3
in
repnz
push
pop
test
pop
cmp
push
mov
push
mov
sbb
adc
fptan
test
test
lods
mov
or
xchg
mov
ror
mov
outsb
cmp
sahf
jecxz
push
in
scas
push
push
stos
mov
das
mov
je
sub
sti
and
mov
or
adc
push
nop
stos
and
add
jmp
jno
lock
std
jno
js
pop
mov
inc
sahf
movsl
sbb
gs
inc
cltd
ficomps
sub
cltd
jp
and
mov
dec
outsb
sbb
jne
je
xchg
or
stos
dec
jmp
mov
or
sarl
adc
jo
shrl
gs
lock
jnp
test
pop
ret
jecxz
xor
jno
and
pop
fsubl
fistpl
hlt
mov
add
pusha
mov
add
sub
jbe
cmp
jmp
pusha
std
or
jbe
inc
movsl
xlat
push
je
fimuls
push
leave
mov
stos
out
fnstenv
nop
adc
out
push
jnp
sub
push
aam
pop
div
lock
ficoms
or
pop
xchg
mov
jg
jge
addr16
scas
ret
and
into
repnz
ret
outsb
mov
sbb
fildl
dec
lock
daa
push
pusha
aas
mov
inc
dec
adc
lock
add
pop
daa
seta
call
mov
hlt
pop
scas
shrb
addb
cmp
dec
xchg
xor
xchg
jns
add
mov
in
enter
lgdtl
sahf
dec
push
pop
adc
cmp
inc
scas
hlt
dec
or
mov
push
inc
jo
jb
mov
mov
and
cmp
outsl
add
fwait
sbbb
xchg
out
cmpsb
jbe
jae
push
in
mov
xchg
or
and
ret
push
cs
or
adc
dec
jecxz
sub
movsb
loope
or
mov
iret
stc
adc
test
loopne
add
pop
mov
xchg
cmpsb
push
enter
dec
mov
call
test
mov
sub
cmp
jae
pop
out
ss
loope
icebp
mov
lea
pop
pop
mov
mov
sub
add
inc
fwait
pop
mov
and
testb
lods
je
mov
cwtl
pop
lret
add
arpl
push
add
insb
out
insb
ret
cld
pop
daa
jecxz
cmp
test
sbb
or
fnstcw
cmc
loop
bound
add
cmp
mov
dec
test
fnsave
mov
repz
push
jno
mov
lds
inc
xchg
inc
sbb
pop
dec
stos
imul
adc
outsl
inc
push
mov
jnp
out
stos
mov
stos
dec
jo
in
mov
fildl
and
pusha
xorl
ja
mov
mov
push
mov
add
or
add
mov
stc
xchg
and
jae
mov
icebp
inc
pusha
sbb
adc
pop
mulb
imul
dec
pop
adc
mov
fcoml
and
fldl
or
ljmp
mov
test
sub
call
and
jns
or
mov
dec
jmp
mov
scas
and
cmpsb
or
mov
and
push
dec
rorl
mov
push
push
cltd
inc
push
les
or
sub
and
push
pushf
popf
and
mov
mov
mov
mov
push
jne
js
out
cmpsl
jmp
pop
push
mov
stc
dec
das
pushf
es
js
push
cmp
stos
mov
jg
movsb
insl
stos
push
fs
dec
dec
mov
in
fdivl
jle
fwait
sub
push
out
xor
ret
lock
sub
mov
mov
rorb
add
es
mov
shll
xchg
xlat
push
test
push
inc
sti
fwait
jecxz
adc
movsl
movsl
pcmpgtw
into
push
xchg
pop
insb
cmp
cmpb
xchg
imul
adc
stc
nop
sbb
lcall
outsl
jb
or
fildll
dec
hlt
addr16
test
push
jecxz
lret
or
bound
xchg
adc
addl
mov
sti
imull
cld
rorl
loop
jmp
push
mov
int
xchg
mov
fs
lods
pop
outsl
out
adc
mov
pop
jmp
insb
sbb
and
movsl
outsb
dec
pushf
xchg
mov
aaa
sbb
mov
mov
movsb
dec
cmpb
adc
aam
scas
and
insb
jle
cwtl
movl
out
les
push
and
push
adc
xchg
dec
rcll
lods
fisttpll
add
sbb
lret
jb
push
aas
shl
fcomps
clc
push
fs
roll
test
jl
loopne
mov
into
dec
xlat
in
dec
mov
sbb
outsb
fbld
mov
add
mov
jbe
jecxz
cmp
rcrl
pushf
imulb
fdivrl
sti
sub
mov
xchg
popf
shrb
cltd
ds
inc
or
mov
mov
scas
xchg
dec
arpl
and
jno
std
shll
shlb
xlat
lret
bound
and
rol
mov
push
std
sbb
sbb
sbb
pop
cld
add
mov
sub
jg
fdiv
cwtl
and
push
push
mov
xchg
addl
das
pop
int
xor
call
fiaddl
push
jnp
dec
mov
insl
pop
rcl
lea
repnz
cmp
mov
mov
pushf
mov
imulb
das
and
sub
aam
repnz
outsb
xchg
sub
mov
sarb
mov
stos
popf
xor
lret
loop
mov
nop
inc
sbb
sti
or
push
dec
dec
in
mov
dec
jb
jle
xchg
in
ja
rorb
adc
mov
or
push
lret
popa
les
pop
push
jbe
out
xor
lcall
cwtl
jp
lret
test
jmp
xchg
stos
incb
sbbb
sbb
sub
dec
or
into
add
or
xchg
les
nop
rcr
pop
xor
or
ret
movsb
movsb
fyl2xp1
mov
movaps
inc
xor
call
in
or
mov
inc
jecxz
mov
std
mov
mov
mov
fbld
repnz
inc
lds
addr16
testb
test
adc
mov
sub
aad
idiv
call
shl
in
ds
int3
out
aaa
mov
xchg
fdivrs
push
int
decl
cmp
mov
mov
mov
fstpt
inc
aaa
adc
mov
shr
lods
addr16
dec
das
shll
rclb
dec
jle
lret
out
mov
das
sbb
je
jno
pushf
xor
jb
cmp
insb
les
mov
xlat
icebp
stc
adc
sbb
out
bound
xchg
ss
popf
pop
aas
outsl
imul
sti
or
sub
sub
fadds
dec
add
repz
scas
scas
add
cmp
pop
fistpl
adc
cmp
fdivrs
sub
aas
bound
mov
pusha
jp
pop
pop
fcoms
ja
xor
fcmovnb
stos
cmovno
pop
mov
fcompl
imul
xlat
adc
aad
cmp
daa
jno
adc
outsl
add
mov
or
nop
pop
dec
dec
add
adc
mov
jg
dec
add
jb
xchg
xchg
push
in
sub
imull
orb
ja
cmp
jmp
lret
outsl
repnz
mov
fidivrs
into
leave
ljmp
cmp
cmp
or
cmp
xchg
push
push
out
popl
fsubl
push
repnz
addb
mov
ret
inc
dec
js
pop
cmp
xchg
ret
cmp
sti
fs
push
scas
push
incb
je
or
xlat
xchg
leave
xor
pmaxsw
dec
ja
jno
jg
push
mov
iret
addr16
dec
shll
sbb
out
es
dec
insl
mov
mov
ret
sub
pop
fdivrs
loopne
or
out
mov
xchg
jmp
push
xor
pop
fisubrs
and
pop
out
sarb
lods
pop
enter
jne
pop
lea
pop
dec
or
ja
pusha
loop
hlt
stos
cmp
cmp
inc
inc
insl
nop
dec
sbb
bound
mov
pop
xchg
out
icebp
out
cmp
jge
inc
jecxz
andb
xor
jbe
loope
dec
push
out
in
jecxz,pt
aaa
mov
outsb
inc
mov
cmpsl
sti
jae
js
pop
mov
add
insl
mov
push
icebp
sub
sub
cld
nop
mov
xchg
jne
sub
mov
xchg
repz
dec
fbstp
aaa
add
push
and
rcr
jb
push
rorb
adc
mov
or
mov
aam
cmpsb
dec
pop
mov
aad
push
into
inc
aad
scas
jl
fistpl
rcl
adc
fsts
xchg
mov
dec
addr16
cs
push
fcom
sbb
mov
xchg
push
push
dec
sbb
ret
addl
aas
adc
mov
or
jmp
cld
xchg
adc
inc
mov
stos
xchg
mov
push
pop
push
mov
leave
jle
and
lahf
add
ja
ficoml
loope
rolb
sub
in
aad
add
xlat
dec
xor
xchg
lret
pop
inc
push
sub
sar
into
shlb
xchg
sub
pop
cmpsb
mov
rorl
in
inc
call
mov
stos
cltd
adc
cmp
jecxz
or
inc
push
push
mov
jae
rcr
jns
mov
fwait
mov
std
hlt
gs
aam
mov
dec
mov
enter
aad
xchg
xchg
sub
test
add
xchg
sbb
xchg
aas
jo
jns,pt
xorl
fmul
inc
mov
sbb
iret
mov
and
mov
cwtl
int3
leave
mov
fisttpl
jns
mov
insb
xor
cmp
mov
push
jns
icebp
xor
or
mov
fistpl
inc
add
fwait
jmp
jno
jle
cltd
ret
je
xchg
out
mov
xchg
scas
xchg
inc
push
mov
and
leave
test
out
fwait
pop
clc
mov
dec
lock
jb
dec
xchg
dec
mov
jno
sub
cwtl
xchg
out
adc
int
outsl
dec
push
adc
xchg
imul
fistps
loop
jo
xchg
add
adc
add
or
fdivrp
mov
dec
fcoms
mov
imul
mov
outsb
sbb
negb
mov
dec
pusha
lods
ret
ja
mov
dec
les
nop
dec
icebp
roll
cmp
dec
xchg
inc
adc
pop
insb
inc
adc
in
push
mov
dec
outsb
clc
jno
insl
das
inc
stc
mov
shl
cmp
xor
loop
cmp
xchg
push
push
std
adc
pop
in
arpl
sub
add
subl
xor
dec
inc
dec
cmp
pop
neg
jne
inc
xor
insb
daa
int
xchg
mov
cmpb
mov
rolb
mov
mov
jne
ja
mov
out
mov
imul
and
lret
mov
pop
jg
ss
sbb
loopne
pop
cs
repz
pop
xchg
xchg
xor
lahf
je
imul
iret
std
push
push
insl
sar
push
cmpsl
pop
popa
call
jae
cmpsl
pop
pusha
cmp
negl
fldcw
and
or
js
mov
addl
pop
sub
syscall
push
inc
popf
mov
mov
adc
inc
mov
push
lds
mov
xor
bnd
adc
sub
adc
movsl
add
cmpl
mov
or
pop
pop
or
in
jle
test
push
mov
push
nop
xchg
fwait
adcl
rcl
mov
jle
mov
dec
ffree
rcrl
inc
sarb
mov
push
xor
lea
ret
cli
hlt
cli
arpl
cmp
inc
cltd
inc
push
movsl
int3
xor
sub
inc
and
adc
mov
nop
js
dec
push
in
pop
scas
cmc
daa
jmp
or
cmpsl
mov
dec
jne
and
mov
push
shlb
jp
andl
loop
jns
pop
pop
xchg
mov
cmc
xchg
cs
int
gs
ss
lahf
push
push
pop
leave
mov
sbb
add
xchg
or
push
mov
cmp
and
dec
sahf
mov
mov
icebp
push
pop
adc
cmp
scas
testl
dec
lds
insl
into
aaa
je
push
push
addl
dec
add
aas
jno
cmp
stos
inc
jge
enter
pushf
inc
sbb
pop
call
sarb
imull
sarb
dec
push
xor
lcall
adc
pop
dec
adc
xchg
mov
and
cmc
leave
div
pop
jb
xchg
sbb
and
inc
mov
pop
adc
ss
xchg
add
rorb
insb
adc
daa
cmpsl
adc
mov
pop
fnsave
icebp
jae
and
lods
je
add
scas
jl
pop
test
or
dec
test
cmpsb
pop
stos
xchg
loope
cmp
rol
pop
pop
pop
call
popf
sub
jno
cmp
pop
add
lret
int3
xchg
ds
xchg
dec
addl
xchg
pusha
ss
ljmp
push
adc
mov
stc
cltd
fsubrl
mov
lods
sbb
xchg
lods
or
push
insb
pop
cmpl
adc
mov
xchg
add
sub
in
mov
mov
cmp
xchg
adc
push
loopne
in
jb
mov
ret
push
sbb
mov
adc
xor
and
push
sub
jg
in
inc
add
gs
push
inc
or
mov
test
orl
xor
dec
pop
xor
sbb
pop
xor
rcll
xor
inc
push
pop
cmp
mov
test
mov
mov
in
adc
cli
jmp
or
push
enter
xchg
inc
int3
out
out
push
cli
xchg
add
rorb
int3
iret
jge
imul
cltd
out
add
test
std
push
mov
mov
nop
nop
outsb
lods
movsl
push
jg
lock
lds
add
pop
imul
push
aad
mov
out
cmp
mov
xchg
ss
push
xchg
xor
inc
aas
outsl
in
out
lret
insb
arpl
int
iret
nop
xor
adc
mov
jmp
movl
xlat
lock
sub
addr16
push
aad
or
aaa
xor
dec
xor
cmp
lock
mov
cmp
or
jb
test
rolb
jb
pop
push
add
mov
in
arpl
out
push
adc
addr16
pusha
pop
sbb
dec
xchg
cltd
pop
mov
push
in
adc
sub
pop
daa
push
push
push
gs
mov
xor
cli
mov
adc
add
fcmovnb
addr16
mov
cmpsl
addr16
xchg
mov
ret
sub
ss
sub
and
bsf
insl
es
aas
outsl
sub
push
sub
fnstcw
xor
adcb
adc
inc
call
inc
in
dec
adcb
push
unpcklps
leave
sub
inc
jb
jb
arpl
push
dec
lods
out
repnz
pushf
adc
sahf
sub
sub
mov
mov
std
xorl
test
cmp
mov
xorl
inc
xlat
imul
cltd
mov
sub
mov
cmp
jno
mov
jge
daa
dec
jno
insl
sbb
pushl
mov
lret
ja
push
fs
inc
adc
lea
loopne
mov
mov
dec
les
xchg
pop
icebp
cmpb
inc
push
insl
mov
xchg
notb
sbb
scas
xchg
or
cltd
adcl
xchg
dec
ja
arpl
dec
mov
xchg
cli
mov
data16
ss
scas
jge,pn
test
dec
andb
mov
fidivl
jp
test
inc
jl
push
add
mov
cmpsl
mov
cmp
mov
sub
cmc
or
daa
sub
dec
sarl
das
imul
or
jmp
fisubl
sbb
mov
decl
jb
test
mov
idiv
loop
dec
nop
or
inc
xchg
sbb
je
loop
lods
mov
push
je
push
adc
mov
mov
jo
mov
hlt
imul
shrb
xor
and
pop
out
aas
rcrb
mov
or
test
mov
ljmp
popf
mov
out
or
push
dec
cmpsl
dec
xchg
je
sbb
cmpsb
addr16
addr16
ficoms
loope
pop
test
clc
rorb
mov
aad
cmp
daa
and
enter
out
loopew
xor
mov
into
or
mov
inc
incl
jne
gs
test
aad
push
xor
loopne
lret
clc
add
lea
push
iret
lods
sbb
sarb
jb
cmc
dec
jmp
ss
icebp
mov
dec
adc
fldenv
mov
pop
mov
fnstenv
or
jno
dec
ljmp
add
sbb
sbb
add
mov
mov
in
add
in
pop
mov
jo
nop
bound
stos
cmp
daa
fstpt
push
sub
mov
mov
jp,pn
repnz
hlt
pop
inc
push
mov
sarl
insl
inc
fs
sub
sbb
mov
out
sbb
aas
push
int
pop
loopne
out
pop
jge
sub
xchg
nop
outsb
xchg
repz
jne
iret
xor
sbb
enter
lea
mov
fiaddl
lds
sub
push
test
loopne
nopl
xor
push
hlt
sub
or
push
cmp
jmp
sbb
adc
cmpsb
pop
or
dec
mov
jmp
bound
xor
nop
sbb
fistl
sub
add
xor
in
xchg
int3
jo
ret
stos
ret
mov
cmp
dec
shrb
test
sbb
sub
popl
roll
lock
aam
scas
scas
push
mov
lahf
inc
and
movsb
lea
xchg
sbb
mov
jecxz
es
mov
ret
bound
pop
fdivs
sahf
sbb
cmp
cmp
fldenv
xor
repz
lret
sub
dec
mov
outsb
push
mov
jne
rcrb
repz
jecxz
cltd
loope
and
mov
mov
fdivrl
cmpsl
xchg
adc
mov
mov
add
add
clc
push
lahf
xchg
or
insb
push
test
lcall
mov
test
fs
scas
test
adc
jne
call
jo
rclb
push
mov
icebp
mov
aam
int3
repz
fildll
adc
outsb
push
mov
fiaddl
xor
loope
enter
into
movsl
pop
push
lea
sbb
push
fwait
xchg
cmc
mov
xlat
xchg
call
adc
insl
mov
add
cltd
push
notl
cmp
movsl
mov
test
add
pop
aam
mov
push
ss
incb
adc
dec
lcall
dec
jns
jns
shlb
xor
loopne
xchg
mov
push
lret
scas
jp
push
ret
sub
addr16
lahf
lret
or
arpl
loopne
hlt
das
push
add
hlt
or
mov
add
push
testb
lock
fsubp
and
popf
xchg
push
and
pop
cmpsb
dec
out
inc
cli
out
cmc
pop
or
arpl
mov
pushf
cmp
dec
xchg
xchg
push
ljmp
int
mov
inc
aam
sar
js
mov
push
and
pop
push
jns
in
pop
sub
lea
les
xchg
and
out
leave
insb
adc
out
fcmovnbe
and
jb
inc
add
xor
or
mov
inc
icebp
mov
jge
xor
adc
jns
or
mov
mov
pushf
cltd
ficompl
clc
aam
and
insl
push
cwtl
xchg
ja
jo,pt
xchg
dec
shr
sarl
push
mov
pop
std
dec
in
ds
pop
mov
mov
push
insb
inc
ret
sub
test
mov
clc
insb
mov
mov
sub
pop
jno
ret
fiadds
aaa
ja
aam
pushf
sub
fiadds
hlt
inc
loope
arpl
leave
mov
js
lret
int
jb
rorb
in
jl
mov
cmpl
jbe
jl
lret
inc
xchg
lods
dec
mov
add
loopne
xchg
mov
gs
test
jl
jo
cwtl
mov
jle
sbbb
les
xchg
and
pop
arpl
lahf
bound
roll
call
or
repz
lods
mov
jae
test
dec
mov
jecxz
shrb
mov
int3
fs
ljmp
sbb
into
sbb
or
aad
arpl
test
jge
pop
das
fnstenv
nop
xor
ss
pop
fmul
push
daa
xchg
add
cmp
mov
loope
fwait
mov
cmp
enter
loop
push
fstl
out
sub
aas
jg
fcmovnbe
mov
scas
mov
scas
or
mov
push
ljmp
test
outsb
inc
sbb
dec
jle
rcrl
lcall
sbb
pop
popf
mov
cmp
out
fwait
push
lret
sti
jns
or
mov
dec
xchg
lds
sar
mov
aam
fsubrl
incb
es
lcall
jb
lods
xchg
mov
jecxz
mov
and
sbb
bound
xchg
and
bnd
mov
fs
mov
call
fimuls
dec
movsl
jp
xlat
sahf
lds
and
pop
popf
stos
lret
data16
add
xor
imul
jp
xchg
mov
sub
inc
scas
pop
mov
xor
cmc
cmp
mov
jle
cli
inc
sub
popf
cmpsl
fidivl
mov
adc
ss
leave
bound
push
sub
scas
pop
mov
xor
jl
fcompl
sub
lcall
sahf
jno
mov
xor
mov
cmp
xor
mov
cld
icebp
cmc
stos
inc
push
sub
insl
cwtl
jle
popf
mov
aad
mov
rorl
mov
cmc
jg
jmp
inc
mov
stos
pop
push
cmp
cltd
mov
ret
and
xchg
pop
inc
mov
sbb
and
test
repz
cmp
ret
mov
loopne
out
das
out
and
pusha
das
mov
xor
inc
or
mov
sub
ja
lahf
push
jmp
lret
roll
rorb
dec
add
inc
add
lods
xlat
mov
stos
pop
loope
pop
cmp
jns,pn
cmp
lea
mov
add
jns
sbb
test
out
xor
push
dec
andl
cmp
mov
sbb
movsl
xchg
mov
adcl
inc
je
jne
mov
js
xor
adc
and
idivl
mov
les
inc
push
mov
aaa
nop
pop
scas
dec
in
ds
adc
lds
xor
mov
push
nop
mov
pop
test
add
cmp
push
stc
loopne
int
or
loope
push
xchg
repnz
dec
lahf
lret
arpl
add
push
add
push
test
add
and
push
xchg
or
and
xorl
pop
fdivrs
sbb
dec
aad
movsl
test
das
outsb
ss
or
cmp
and
in
push
jp
and
dec
lock
les
xor
movsb
xlat
cwtl
loop
dec
shll
xlat
inc
mov
cmp
jae
lret
gs
xlat
push
pop
xor
fsubrs
adc
mov
sahf
mov
outsl
xor
sbb
sub
movsl
addl
enter
mov
sub
pop
adc
cs
pop
sub
ljmp
popf
lret
sbb
inc
push
pop
fimuls
stc
aam
jae
jae
inc
test
gs
pop
mov
rcrl
push
aas
test
leave
sbb
xchg
call
dec
push
filds
xor
dec
fcoms
mov
dec
inc
cmpsb
adc
pushf
cmp
add
xchg
jl
and
out
jmp
addr16
jmp
adc
and
inc
pop
hlt
jbe
and
jo
cmpb
setbe
flds
sahf
adc
push
fnstcw
rorl
and
jb
dec
mov
jae
mov
jo
stos
es
mov
mov
cmpsb
arpl
iret
inc
call
push
clc
in
popa
ljmp
and
aad
push
xchg
push
dec
mov
lea
loopne
xchg
jnp
cld
add
leave
add
in
repnz
les
bound
test
push
icebp
jo
ret
sbb
mov
ret
and
pop
cmp
les
mov
sahf
insb
test
push
out
fldl
bound
loope
mov
add
pop
or
inc
test
lock
ja
cmpsb
scas
sub
mov
fisubl
sbb
mov
jo
cmp
in
mov
call
inc
jg
pop
add
testl
sub
aas
sub
mov
aaa
and
dec
pop
jmp
adc
xor
pop
pop
ja
lods
movsl
pop
popa
cmpsb
or
mov
movups
loope
ret
add
iret
clc
sbb
je
mov
cmp
lret
or
repz
adc
out
test
fcmove
dec
pop
iret
sbb
jecxz
add
inc
push
std
mov
xor
sub
mov
and
add
ja
stos
xchg
int3
adc
inc
push
ds
cmpl
out
ds
and
lea
pop
cld
sub
dec
push
out
add
mov
scas
mov
stc
sbb
dec
cmpsb
mov
dec
pop
arpl
movl
mov
mov
leave
xor
lea
adc
out
mov
and
xlat
and
outsl
jbe
xor
aas
sbb
int
shr
out
or
adc
scas
rcll
popf
cwtl
pop
nop
into
xchg
pop
adc
ret
nop
and
stc
cli
dec
and
imul
fs
sbb
lea
nop
xor
jl
sub
aad
scas
out
mov
loopew
sahf
cmp
xlat
mov
sub
cltd
out
or
mov
leave
int3
jmp
inc
ljmp
pop
xchg
test
pop
lea
sbb
fs
out
xchg
mov
js
mov
push
push
addr16
shrb
cmpsl
mov
add
mov
scas
out
into
iret
cmp
mov
xchg
add
lods
mov
or
xchg
sbb
std
xchg
xor
out
cmpsl
imul
daa
inc
xchg
dec
imul
mov
push
pop
aaa
repnz
shlb
test
ja
mov
mov
mov
addr16
mov
push
mov
ds
mov
sub
dec
cmp
jecxz
xchg
clc
out
mov
and
popf
imul
pop
por
mov
rorb
cmp
pop
ret
mov
sub
mov
andl
pop
sbb
push
fsts
cld
mov
stc
inc
fmull
dec
push
mull
mov
mov
adc
fcoms
or
adc
adc
and
lds
outsb
dec
or
inc
test
lea
jg
repnz
or
into
pop
fdivs
mov
mov
cmpsl
jnp
shll
mov
mov
add
dec
cmpsl
outsb
push
bsf
pusha
pushf
sbb
popf
xor
xchg
inc
int
xchg
out
mov
push
aaa
lods
mov
sbb
lods
inc
jmp
push
std
push
insl
je
jle
imul
subb
ljmp
ret
push
test
test
mov
out
adc
stc
dec
xchg
sbb
cmpsl
fsubrl
add
js
add
inc
fs
xchg
jns
push
cld
insb
push
fcmovu
ja
in
out
xchg
adc
pusha
enter
js
cmp
mov
addr16
or
sub
cmpsb
cltd
xchg
jmp
mov
xchg
mov
loopne
cwtl
cmpsb
arpl
pushf
and
mov
xchg
fcom
int
test
ja
mov
aad
and
imul
les
mov
jne
sbb
mov
sbb
popf
mov
mov
or
sbb
ds
mov
jge
add
ljmp
inc
ja
test
test
cmc
fisttpll
xor
sbb
leave
jns
and
insb
mov
inc
sti
sbb
es
adcb
loop
jno
cld
fistpl
test
xor
add
cmpsl
filds
out
leave
lock
dec
rcrl
inc
movsb
mov
sarb
xor
dec
mov
sbb
mov
mov
shll
sbb
mov
shl
dec
cmpl
cmp
cmp
das
mov
mov
mov
mov
nop
mov
js
jecxz
inc
jmp
xor
sbb
es
inc
mov
inc
fimuls
jbe
push
jle
lds
push
mov
out
sub
adc
fwait
fdivrs
mov
insl
xchg
ds
data16
out
icebp
stos
hlt
xor
std
lods
and
test
add
sahf
dec
add
stos
jnp
inc
popf
push
bound
or
cltd
push
cmpsl
and
ret
push
lahf
ja
push
mov
out
ss
orb
jl
scas
push
mov
iret
loope
xchg
adc
sub
add
pop
flds
inc
out
test
fdivl
xor
xor
in
push
and
sbbl
pop
mov
cltd
mov
popf
test
and
scas
or
pushf
rorl
orl
add
and
or
push
lock
dec
sub
adc
sub
push
pop
popa
int3
fs
cmpl
sti
aad
iret
movsl
clc
stos
push
int3
mov
lret
inc
ret
fists
cwtl
jp
sub
mov
rcr
dec
mov
add
add
xchg
movsl
outsb
and
dec
movsl
xchg
ret
jae
jae
out
loop
iret
lahf
xchg
and
inc
fstpl
mov
and
jnp
mov
das
call
sbb
cmp
xchg
cmc
push
outsl
jo
outsl
pop
or
ror
test
mov
xor
idivb
dec
test
test
pop
insb
add
pushf
mov
fcoms
mov
jp
inc
dec
xor
lahf
out
in
mov
pop
shrb
mov
pushf
xor
xorb
jle
mov
mov
mov
in
test
iret
jnp
psllw
mov
push
mov
in
jno
fstps
inc
sbb
pop
push
lahf
inc
imul
sub
add
sbb
add
push
cmpsb
call
jge
lods
test
mov
cmp
mov
adc
aas
and
dec
in
int3
sbb
cmp
sbbb
cltd
and
xor
aam
mov
aaa
or
mov
push
imul
loopne
fs
xorb
or
data16
adc
in
add
sub
and
push
stc
pop
sbb
mov
mov
shrb
in
stos
je
dec
fsub
lcall
shl
push
sub
packssdw
in
push
addr16
mov
dec
jno
mov
pop
xor
mov
clc
movsb
fdivs
add
jmp
jmp
push
pop
mov
pop
test
xor
mov
ss
jle
or
fimuls
shll
xor
mov
sub
mov
test
jo
mov
jns
push
and
pushf
testb
cli
adc
inc
sbbl
cmp
mov
fisttpll
fcomip
das
inc
leave
in
into
stos
or
idiv
cmp
sbb
jae
jb
pop
mov
mov
mov
adc
xchg
xor
test
push
cmp
das
cmp
push
lret
push
fdivrl
insb
xchg
neg
cmp
ljmp
jno
add
and
testb
lods
cmp
scas
scas
xor
lret
or
je
lret
mov
fadd
test
inc
jbe
in
lods
add
jecxz
rolb
shl
dec
mov
adcb
aad
popa
jb
pusha
add
lahf
fs
cmp
jmp
pop
xor
sbb
sbb
inc
xor
inc
fildl
xor
mov
pop
scas
aam
fstps
or
xchg
int
mov
orl
ficompl
addb
mov
mov
aam
add
leave
fwait
inc
push
add
fstpl
sbb
sbb
icebp
sbb
test
jo
add
sarb
cld
aam
or
jne
aaa
ja
outsb
dec
jge
xor
bound
ret
ret
and
loop
je
mov
rcrl
add
and
mov
mov
mov
bound
int
lcall
lret
mov
test
push
mov
scas
lret
test
mov
cmp
sbb
mov
jne
mov
fistl
pop
jmp
mov
or
test
xchg
andb
dec
and
add
jmp
jecxz
push
call
push
sbb
xor
pop
or
push
cmp
es
sub
sbb
adc
mov
dec
push
test
rcl
push
xchg
mov
mov
cs
sub
lret
notl
mov
inc
inc
cmc
mov
inc
jae
movsb
jl
cmp
enter
cmovb
and
inc
imul
pop
out
test
sbb
lea
fwait
call
test
xchg
nop
push
push
mov
pop
enter
push
loope
addl
movsl
test
push
int3
push
scas
outsl
outsl
pop
xor
push
adc
les
adc
je
push
insl
mov
jp
pop
mov
pop
pop
movsl
imul
ds
int
cltd
pop
jno
and
cltd
and
inc
out
or
test
push
daa
sbb
sub
ror
andl
xchg
or
inc
cmpsb
lea
mov
xchg
cmc
jns
jg
pop
xchg
call
sbb
inc
dec
push
popf
shll
sub
jne
dec
int3
fnstenv
insb
or
test
in
lahf
js
sub
movsl
mov
jo
in
and
mov
popf
into
adcb
rorl
in
jg
icebp
mov
push
inc
lret
and
int
xor
pop
adc
mov
or
jmp
pop
ror
mov
push
je
sub
jmp
adc
push
ret
je
sbb
fcomps
fldcw
jne
push
loope
or
jg
jmp
xchg
cld
jecxz
fidivs
xchg
xchg
push
mov
cmpl
fsubp
shll
dec
cmpb
mov
add
out
push
inc
aaa
adc
dec
push
or
rolb
fistl
sbb
inc
xchg
sbb
add
cmpsb
out
fwait
mov
cmp
add
jge
push
xchg
fnsave
pop
sub
pop
rclb
popf
mov
or
or
add
mov
cmpsb
loop
or
daa
aas
cmp
jp
jl
hlt
and
stos
xchg
insl
cltd
lods
adc
ljmp
ljmp
cwtl
sti
sbb
mov
jl
push
jo
sti
mov
testl
stos
lret
mov
adc
fmulp
or
push
xchg
ss
sbb
add
adc
imul
adc
sub
jno
ret
xor
xchg
jl
sbb
addr16
bound
cmc
mov
mov
into
mov
mov
push
addr16
or
and
cmp
sub
popf
xchg
pop
or
ja
dec
stos
ljmp
test
mov
and
insl
push
icebp
xor
mov
push
les
sbb
inc
pop
movsl
test
std
xchg
pusha
and
ret
push
jp
rol
adc
ss
jno
dec
cwtl
push
imul
clc
mov
shl
mov
adc
xchg
mov
adc
cli
jbe
popf
pop
pop
daa
stos
test
js
mov
sub
icebp
push
push
push
push
mov
and
stos
mov
inc
cli
ret
loopne
je
push
xchg
sub
mov
bound
cmpb
pop
mov
mov
jge
inc
sbb
lock
popa
es
xchg
fsubrl
sub
jmp
mov
movsl
test
adc
and
iret
out
jp
rorb
mov
and
xchg
push
scas
lods
popl
aaa
push
sahf
jg
cmp
xchg
gs
out
les
scas
push
or
daa
hlt
mov
std
or
mov
dec
cli
lahf
leave
lret
popa
loop
sbb
mov
mov
not
mov
test
jge
data16
std
adc
mov
fisubrs
xor
pop
pop
xchg
mov
scas
sbb
test
ljmp
hlt
jno
test
push
dec
cld
mov
xchg
mov
cli
sahf
mov
cmpsl
int
repz
xchg
out
adc
sub
mov
or
add
outsb
inc
out
jne
mov
sbb
jns
add
jmp
pop
and
sti
test
mov
data16
out
imul
ret
lcall
nop
lea
sub
jno
fchs
cmp
das
xchg
cld
pop
rcll
in
or
das
stc
dec
add
stos
adc
scas
outsb
pop
mov
push
pop
cld
dec
jns
out
loopne
movsl
ss
sbb
aas
rcrl
ret
movsb
add
xchg
fsubrs
inc
ljmp
lods
mov
fcmovne
mov
push
sbb
cld
cwtl
negl
clc
mov
shrl
in
fldt
xor
pop
xor
xchg
jnp
std
pop
add
push
sti
jb
jl
std
push
mov
adc
insl
stc
mov
sbb
mov
xor
into
ret
sbb
and
mov
repz
jne
les
stos
lods
cltd
inc
test
ja
mov
xor
pop
lds
insb
cltd
fiadds
jb
nop
popf
dec
xor
lods
mov
stos
fldt
int3
xchg
push
cmp
sub
cmc
scas
xchg
dec
fcomps
pusha
pushf
sbbl
sbb
outsl
push
add
dec
cmp
inc
mov
add
jmp
mov
mov
jbe
cmpl
in
push
sbb
icebp
stos
xor
pop
or
dec
sub
shrb
mov
adc
icebp
lret
insb
stos
lcall
dec
fldenv
pop
jg
push
xchg
mov
mov
aam
add
inc
inc
mov
iret
inc
sbb
popf
fs
xchg
push
push
int
and
cltd
cmp
cltd
cmp
sti
mov
mov
mov
mov
aad
xchg
cltd
xchg
lret
or
inc
lret
push
pop
sbb
leave
adc
int
dec
pop
out
fsts
mov
in
or
cmp
jnp
out
lret
cmp
es
mov
lcall
jle
jbe
push
fisttpl
fisubrl
xor
cmc
jno
imul
je
push
jl
movsl
enter
mov
pop
js
hlt
movsb
ret
scas
pop
jmp
lret
sbb
sbb
sbb
orl
rclb
dec
xchg
mov
xor
idivb
inc
cli
jnp
pop
aaa
pop
int3
sub
mov
ret
jno
bound
or
lcall
push
add
sub
mov
fucomi
jg
mov
inc
popa
scas
inc
popf
jbe
daa
fs
cwtl
sahf
fs
les
popf
aad
xchg
je
hlt
sub
out
sbb
adc
mov
adc
sbbb
or
mov
or
arpl
mov
or
test
push
int3
outsb
push
pop
icebp
push
fcoms
testb
inc
ficompl
out
inc
mov
dec
popa
jb
sarb
iret
pop
mov
mov
je
test
and
negb
add
sahf
sti
and
cli
xorb
cwtl
subl
mov
lods
pop
fdivr
fistl
dec
arpl
shrb
das
or
push
mov
stc
and
sbb
pop
dec
mov
pop
push
mov
mov
stc
es
jmp
daa
dec
push
and
xor
cmp
fidivl
push
add
mov
aaa
xchg
push
dec
loopne
imulb
pusha
mov
jge
outsb
dec
pusha
sbb
roll
arpl
or
adc
rcrl
out
mov
test
test
jmp
arpl
in
and
jmp
jno,pn
scas
or
inc
xor
lea
cmc
call
mov
pop
ret
or
les
dec
jle
inc
icebp
sbbb
mov
repz
and
or
and
sbb
pop
xor
loop
inc
in
sub
or
call
cmpsb
add
sub
cmp
icebp
mov
push
ja
xor
mov
push
mov
mov
addr16
sub
mov
pusha
insb
sub
not
jnp
jl
vmovhpd
out
arpl
jne
xchg
dec
mov
push
cli
inc
cs
stos
jle
pop
adcb
shrl
push
dec
fisubs
inc
or
test
jae
and
in
mov
ret
enter
lret
jo
xchg
cmc
les
in
pop
ljmp
std
mov
push
mov
inc
popf
dec
cmp
fldcw
loope
sub
nop
mov
imul
and
push
mov
jmp
add
jbe
lds
mov
add
cs
lahf
dec
sbb
ret
sbb
es
out
push
js
enter
cwtl
gs
xorl
cmc
lods
push
pop
cwtl
incb
pop
in
xor
adcl
adc
mov
inc
mov
jecxz
cltd
ds
dec
fdiv
sbb
call
or
dec
pop
sub
pop
jl
push
cmovbe
popf
push
jl
jl
sbb
cmpsl
xchg
mov
jbe
sub
cld
add
call
scas
out
mov
dec
xlat
pusha
repz
cwtl
shl
lret
mov
sub
jl
repz
jb
xor
fcmovnb
inc
call
sbb
int3
push
movsb
push
aas
test
into
and
ds
shrb
shll
xchg
rol
mov
rcll
lcall
stc
outsl
daa
push
and
xor
push
push
sahf
flds
adc
aam
cmp
scas
jno
jbe
cld
icebp
fisubs
pop
mov
cld
out
jge
lds
xor
test
mov
incb
in
out
lret
cltd
cmpsl
outsl
shll
leave
insb
sbb
sub
dec
in
or
pinsrw
lcall
jo
out
mov
or
sub
loope
mov
mov
push
pop
filds
push
sbb
add
xor
lret
imul
cltd
sbb
cmp
push
test
adcb
sti
movsb
and
in
sbb
leave
sub
stos
outsb
vmwrite
loope
lret
aad
loopne
loope
fwait
xor
jle
clc
push
mov
imul
add
jg
test
sbb
ja
aas
ss
xchg
mov
mov
inc
mov
push
add
xchg
shrd
ja
pop
sub
movsl
lcall
cmpsl
add
fs
repnz
sub
jp
loopne
jns
lcall
inc
aam
lret
xor
call
add
cmpsl
xor
push
dec
xchg
bound
mov
into
repz
inc
cmp
cmp
fmull
sbb
xchg
imul
xor
push
adc
sbb
sbb
call
mov
inc
ss
mov
push
mov
aam
xchg
sub
idiv
decb
mov
push
inc
xor
xor
add
icebp
dec
aas
xor
lcall
mov
test
or
xchg
paddq
aas
es
or
scas
shlb
cmpsl
dec
js
xor
pop
aad
cmp
mov
or
pop
jo
mov
imul
cmp
jnp
jno
sarb
imul
xchg
loopne
mov
jmp
nop
cltd
sub
add
outsb
add
pushf
insl
sub
add
fcom
rclb
dec
pop
shlb
cmp
lock
loope
xor
les
pusha
ror
loop
add
pop
dec
lock
stos
ljmp
dec
xchg
js
lea
pop
clc
mov
decl
fisubrs
cmp
fwait
xor
outsl
jmp
decb
insb
fbstp
jb
rorl
push
daa
xchg
daa
push
cmovbe
lcall
insb
push
or
push
push
mov
clc
jl
stos
push
push
mov
in
in
fs
lock
pop
xlat
data16
or
jbe
jbe
les
and
sub
mov
nop
dec
jno
pop
xlat
insl
add
and
pop
hlt
dec
add
and
adc
push
popa
mov
int3
xchg
xchg
and
jl
data16
jnp
subb
pop
jne
nop
sbb
out
gs
mov
out
jl
popa
cmp
fstl
jge
sub
dec
scas
cmp
test
xor
shrl
cld
in
inc
loopne
test
mov
nop
jbe
dec
push
push
mov
jmp
sub
or
xchg
pop
jbe
into
popf
fsubrs
bound
ljmp
out
adc
push
jge
mov
stos
icebp
adc
ret
mov
outsb
xor
sbbl
cmp
test
rcr
mov
jno
scas
add
inc
mov
push
push
cs
fisttpl
shl
movsl
push
clc
loope
in
imul
mov
fldl
leave
xchg
sub
fbstp
push
cltd
push
and
mov
testb
adc
ja
mov
inc
sbb
aas
int
or
mov
fdivs
loope
cli
sbb
fisttpll
sbb
jo
or
cwtl
and
nopl
and
shrb
cmp
lods
mov
loop
push
in
nop
add
dec
fdivrl
and
pop
mov
in
push
imul
bound
pop
adc
xor
add
or
test
xchg
iret
iret
lock
mov
das
adc
das
mov
fisttpll
repnz
cmpsl
mov
adc
pusha
and
popa
and
addl
sub
push
xchg
dec
sbbl
testl
push
pop
xor
scas
frstor
xor
out
adc
shlb
adc
sbb
fisttpll
cs
test
xchg
jns
xor
pop
inc
pushf
and
mov
nop
and
loope
pavgw
imul
xchg
dec
and
xor
mov
push
sbb
xor
xlat
scas
sbb
les
inc
ret
sub
and
movsl
or
or
lcallw
fildl
xchg
mov
pop
and
inc
dec
out
loopne
sbb
pop
mov
adc
mov
jecxz
mov
xlat
stos
mov
cmp
fidivrl
jne
mov
push
mov
out
fs
in
femms
loope
nop
lcall
pop
sub
mov
mov
test
add
xchg
int
cmp
adcb
jns
into
mov
jg
clc
mov
mov
fbstp
divb
pop
cwtl
shrl
jne
cmp
aam
repz
cmp
add
fsave
test
ja
adc
inc
jle
jmp
test
popa
repz
outsl
pop
dec
pop
rorb
les
and
and
les
sub
inc
push
xchg
mov
mov
pop
jne
stc
sbb
mov
loope
lcall
js
shll
or
daa
enter
push
sub
push
iretw
es
mov
fsts
inc
mov
rorb
push
lods
cmp
gs
xor
cmc
sbb
mov
push
mov
int3
dec
test
stos
dec
in
or
cmc
lcall
or
xor
adc
xchg
mov
loopne
hlt
inc
sub
xchg
sbb
lock
sub
inc
xchg
cmp
jb
dec
jno
inc
into
cld
jbe
mov
hlt
mov
sbb
popf
incb
aam
sti
lcall
and
and
mov
not
or
push
sbb
subb
push
sub
jl
nop
clc
imul
xchg
mov
push
in
ja
daa
dec
in
xor
sub
fsubrl
into
sub
add
mov
mov
lret
lods
cmp
sub
test
negl
dec
mov
inc
push
clc
jae
pop
ret
stos
or
pop
pushf
and
aas
xor
dec
dec
adc
cmc
enter
out
sbb
pop
fdivrl
stc
mov
dec
mov
mov
jp
sub
scas
repnz
and
leave
stos
mov
ret
xor
and
jns
aas
adc
mov
test
jno
scas
in
jmp
fwait
std
mov
popf
xchg
push
scas
cs
stos
jmp
or
roll
dec
mov
fwait
das
ss
inc
cmp
jp
mov
mov
test
lods
xor
mov
dec
jb
mov
xchg
fstpt
jbe
leave
mov
jecxz
push
faddl
aas
push
add
add
push
test
bnd
stos
fs
xor
inc
das
push
xor
cmp
loopne
je
lods
or
ror
dec
pop
int3
xchg
imul
divps
repz
adc
loope
sub
and
popf
lahf
xchg
adc
push
adc
and
mov
mov
out
notl
pop
sbb
lods
mov
push
out
cmp
mov
iret
push
jge
repnz
pop
jbe
inc
or
ds
inc
lods
test
mov
out
mov
pop
dec
sbb
cmpsl
mov
jnp
outsb
and
jne
push
ret
mov
popf
call
in
cwtl
out
iret
adc
iret
lahf
dec
fstpt
cmp
cmp
test
cmp
mov
decl
fistps
setne
mov
jmp
stos
add
and
aad
xchg
dec
inc
and
push
adc
test
cmp
fxam
into
fisttpl
mov
dec
dec
mov
mov
ss
stos
or
mov
xchg
std
jg
inc
lods
push
in
sbb
negb
cli
mov
sub
xchg
fnstcw
add
int3
or
gs
mov
lcall
push
out
scas
inc
std
cltd
jle
or
imul
shl
sahf
sbb
inc
pop
sbb
pop
mov
cmpsl
jge
scas
inc
lea
stos
dec
sub
xchg
fwait
cld
push
xor
sarl
dec
insb
dec
xchg
das
xchg
jo
push
mov
push
or
fbld
inc
xor
jecxz
sub
sub
aam
ret
pushf
out
jmp
cmp
push
dec
or
int3
pop
sahf
jns
mov
mov
test
xchg
movsb
addl
repnz
stos
and
cmp
in
andb
fwait
ret
mov
aaa
cmp
loope
cmp
nop
mov
mov
or
push
int
lret
jg
or
sarl
in
sbb
adc
inc
xchg
fistpll
rol
test
je
inc
adcl
popa
lock
adc
push
mov
sarb
cmp
and
xor
sbb
lret
imul
imul
addr16
pop
divl
adc
push
in
inc
rcll
add
mov
cs
out
push
test
jg
sbb
mov
jmp
std
and
cmp
pop
test
dec
push
mov
xchg
int
mov
add
stos
mov
pop
mov
inc
gs
rcrl
dec
lcall
in
xchg
mov
mov
cltd
arpl
addb
add
sarb
fs
mov
imull
in
aaa
mov
xchg
fisttpll
shll
jnp
push
adc
mov
push
pop
inc
ljmp
dec
cs
mov
sbb
in
adc
or
enter
into
out
test
jne
xor
push
add
mov
shll
pop
inc
int3
nop
lds
xchg
roll
andb
icebp
jp
lock
lret
pop
jmp
adc
test
call
clc
in
inc
sbb
mov
ret
or
and
je
loop
nop
lds
leave
int
into
stos
add
inc
xor
add
push
xchg
test
fucomi
mov
mov
xor
ss
lahf
dec
sbb
lock
and
insb
mov
jmp
cmp
fiaddl
mov
inc
push
pop
mov
sub
cmpsb
fnstenv
out
jp
and
test
mov
pop
je
movsl
mov
inc
test
sbb
sahf
sahf
pop
jo
std
push
pop
andb
out
and
pop
repnz
loopne
fistps
inc
in
sar
adc
in
jge
hlt
fisttps
insb
arpl
push
lret
scas
mov
outsb
push
jno
jmp
cltd
fistps
scas
mov
dec
xchg
add
fs
ljmp
sti
jp
scas
jno
rcrl
pop
sbb
dec
outsl
jbe
movsb
pmaxsw
gs
sbb
xchg
dec
js
bound
xchg
or
fbld
in
push
aam
mov
iret
ret
in
sbb
in
cmp
je
dec
jp
mov
test
fdivrp
push
movsl
and
scas
xchg
aam
outsb
cltd
mov
insb
push
je
lret
addr16
push
enter
dec
push
cs
insb
add
js
mov
mov
cld
lcall
rolb
xchg
sbb
mov
fldl
pushf
in
dec
js
push
push
stos
add
cli
inc
mov
inc
sub
push
movsl
xchg
les
inc
test
add
inc
mov
out
mov
lock
dec
repnz
mov
ja
pop
xor
mov
and
hlt
add
std
dec
clc
add
and
mov
pop
test
push
lahf
cmp
fsubr
stc
push
push
std
push
test
scas
mov
call
inc
or
nop
negl
mov
xchg
rol
adc
scas
jge
mov
imul
nop
cmc
or
out
daa
xor
rorl
xor
insb
addb
sbb
cmp
rol
dec
fidivs
test
add
sbb
inc
dec
lcall
int3
sbb
add
jne
das
mov
xor
add
inc
pop
pop
sub
add
push
decl
jb
out
out
pop
xchg
mov
popa
repz
out
add
push
mov
adc
xchg
out
jae
cli
je
dec
push
cwtl
insl
out
sbb
loope
pop
mov
aam
push
rol
dec
pop
cmp
je
jge
push
mov
cmp
std
movsb
dec
pop
outsl
in
std
xchg
dec
idivl
fwait
lret
sbb
or
push
pop
xchg
fwait
add
add
push
out
fmull
adc
xor
mov
pusha
imul
xor
loopne
mov
sub
mov
les
jo
jbe
push
je
cltd
mov
mov
cltd
movl
ret
and
imul
aas
in
push
push
ss
pop
sbb
xchg
repz
imul
lock
bound
gs
stos
test
dec
jmp
loope
jge
fwait
jo
push
xor
subl
fwait
pushf
xchg
fstl
sub
loop
aas
or
jo
stos
dec
inc
adc
repnz
mov
clc
push
push
dec
ret
dec
std
imull
xchg
enter
pop
and
add
inc
imul
pop
add
pop
loope,pn
xchg
sbb
aas
mov
clc
add
dec
jb
out
xchg
mov
addl
cltd
cli
pop
loope
mov
push
mov
jle
dec
inc
xlat
xchg
or
gs
mov
cmp
sbb
push
test
dec
mov
jmp
pop
loopne
shlb
stc
pop
fimull
test
and
cmp
xchg
bound
rcr
xchg
jmp
mov
jae
and
shl
cmc
cmpsb
dec
xor
lahf
mov
or
sub
dec
sub
xor
cmp
sarb
arpl
in
sbb
lods
xchg
add
insb
insb
sti
hlt
lds
mov
cmp
jo
sti
lea
adc
mov
jb
sub
fstps
ret
push
fldt
hlt
and
ss
jnp
fistps
cmp
and
ds
fnclex
add
dec
in
mov
test
ss
out
fsubrp
adc
aas
mov
aam
and
es
rcrl
sbb
xlat
mov
push
scas
js
lods
inc
mov
fildl
les
inc
pop
sbb
iret
repnz
test
lret
or
fs
mov
lea
inc
or
mov
dec
and
insl
cmp
xchg
fstpl
and
push
addl
lret
lods
mov
loopne
jo
cmpsb
xchg
sbb
dec
xchg
jecxz
sbb
add
lcall
ret
dec
aam
fs
mov
pop
test
jb
test
cli
sbb
xchg
loop
roll
fdivrl
push
dec
or
cmp
cld
mov
adc
loope
lcall
fmulp
fidivrl
mov
xchg
das
pop
xchg
movsb
test
inc
mov
jbe
shrl
cld
adc
mov
xchg
adc
daa
mov
fwait
dec
or
mov
and
fiadds
pop
bound
ret
addr16
mov
ds
loope
popf
fldcw
push
and
inc
movsl
inc
stc
or
xchg
and
fxch
and
jno
mov
or
add
jbe
cmp
aad
jp
fsubp
inc
fldcw
mov
cwtl
pop
pusha
add
and
lret
cmp
imul
in
pop
or
jbe
push
mov
mov
sub
sbb
or
adcl
xlat
push
jb
orl
ljmp
arpl
dec
cli
inc
cmp
sbb
mov
shlb
sub
mov
pop
or
mov
orl
pop
call
sub
std
mov
sbb
sbb
bswap
stos
inc
or
daa
fidivrl
sti
sti
inc
push
mov
aad
lahf
call
test
sub
movsl
andb
or
mov
call
in
bound
jae
pushf
push
loope
aam
leave
pop
mov
adcl
add
outsl
outsb
outsl
idivb
and
loopne
jne
fldenv
fneni(8087
dec
pop
jo
mov
adc
ret
sysret
mov
das
and
mov
cmp
outsb
cltd
int3
jl
jge
jns
pop
sbb
das
es
fwait
pop
mov
jnp
mov
aaa
add
mov
out
cmpl
ficompl
repz
ds
stc
inc
inc
lock
dec
cwtl
jb
ss
pop
in
pop
rcrb
or
lret
mov
and
inc
lods
add
and
mov
out
leave
adc
inc
jecxz
or
lea
sub
lret
pushf
jp
adc
ss
adc
subb
nop
sbb
incb
jbe
dec
dec
add
cmp
sub
mov
pop
xchg
and
sub
sub
push
add
or
test
pop
icebp
jle
stos
xchg
imul
sub
out
fmulp
sub
pop
cmpsl
add
mov
mov
aam
fsubrl
xor
rcrb
jl
addb
loope
lret
sub
sub
mov
mov
repnz
mov
xor
sbb
mov
sub
xchg
add
cmp
sub
jnp
and
mov
inc
xor
jmp
inc
sbb
lods
mov
pop
fmuls
outsb
gs
lds
ds
adc
rolb
mov
push
mov
or
and
fwait
pop
or
pop
add
in
test
lret
sahf
add
testl
mov
enter
les
int3
inc
mov
sbb
mov
fwait
jp
or
loop
and
leave
mov
out
arpl
xor
and
or
sahf
popa
int3
je
and
mov
cmp
xlat
in
or
arpl
jp
push
push
loopne
ret
movsb
int
mov
mov
dec
sbb
data16
push
mov
imul
sbb
inc
out
aad
push
sbb
shll
pop
jle
xor
out
inc
in
or
dec
nop
lret
iret
call
jns
push
das
popf
mov
xor
dec
rolb
xor
bound
leave
repz
int
aad
pop
sbb
inc
inc
xchg
add
test
clc
mov
ja
ja
scas
hlt
adc
mov
mov
add
bound
stos
enter
aam
and
out
mov
push
xor
xchg
xchg
cwtl
out
mov
xor
das
jmp
inc
and
sub
mov
adc
insb
cmp
xchg
mov
sub
jmp
test
mov
test
adc
push
push
cs
imul
mov
and
fstps
dec
sahf
movsb
add
loopne
mov
jp
xchg
lods
mov
cmp
mov
ljmp
mov
in
jb
lods
std
lea
dec
ret
clc
shr
jl
out
adc
shll
fwait
jge
sub
pop
push
and
xor
movsb
lods
cmpsb
pop
add
scas
add
xchg
dec
out
jl
roll
fs
stc
sbb
mov
push
push
sub
sbb
jmp
add
mov
outsb
mov
push
adc
shld
mov
in
lret
push
mov
sbb
pop
pop
je
movsl
dec
and
xor
jg
inc
leave
je
xor
int
mov
call
cld
xchg
xlat
mov
push
inc
xchg
or
sbb
xchg
or
push
and
sar
push
js
in
and
stc
xchg
lods
out
in
mov
shlb
iret
pop
iret
xlat
sbb
test
aad
sahf
sbb
clc
push
xchg
and
imul
movsl
mov
add
pop
mov
or
rcll
push
cltd
jb
cwtl
or
xchg
jl
add
mov
mov
jl
mov
stos
push
fs
inc
cwtl
movzbl
out
push
cwtl
cmp
jnp
pop
sbbb
pop
les
and
test
mov
mov
lock
mov
cwtl
pop
icebp
addr16
and
xor
xchg
and
cltd
pushf
inc
or
cmp
mov
pop
decl
das
mov
cmpsl
inc
std
push
cld
cltd
xor
pop
jnp
push
mov
leave
arpl
leave
subl
xchg
add
xor
sub
aam
sub
stc
pop
rep
mul
jle
dec
lea
pop
aaa
sbb
daa
xor
add
cmp
call
push
sub
jp
mov
jle
lahf
lods
addr16
daa
int3
jg
xchg
xchg
adc
call
xchg
add
jg
or
pop
xor
push
mov
ljmp
and
vmwrite
aad
sub
pop
ja
enter
mov
sub
push
data16
mov
lret
mov
jle
mov
movsb
push
cmp
xchg
xor
out
add
lea
cmpl
adc
rorl
xchg
add
and
pop
and
pop
icebp
jp
test
lahf
cmp
lret
mov
or
es
sbb
rcrl
jmp
jbe
add
adc
push
inc
mov
cmc
popf
adc
mov
inc
les
cmp
pop
jns
js
cmp
mov
adc
out
mov
adc
push
sahf
sbb
pushf
mov
or
test
mov
fisubrl
in
mov
mov
mov
aam
add
cld
pop
mov
scas
orl
out
mov
cld
gs
inc
test
mov
jg
pop
push
stos
jle
push
xchg
lret
sub
cld
cmp
xchg
xor
outsb
jnp
aaa
cmpsb
inc
nop
pop
rcrl
sub
imul
movsl
dec
pop
rorb
fprem1
cwtl
iret
int3
sub
sub
cmpsl
ret
out
arpl
aam
clc
outsb
das
mov
push
imul
cmp
pop
lret
sub
and
iret
lods
mov
and
aaa
pop
in
ljmp
jbe
ss
daa
add
call
add
xor
js
lret
cmp
mov
mov
push
pop
and
sbbl
jecxz
jae
xchg
cmpb
imul
call
stos
or
insl
xorb
outsb
cmpb
stos
sbb
aaa
stc
out
xor
push
inc
sub
and
shll
ss
sbb
jbe
jo
in
lods
add
stos
rcl
stos
mov
sub
xor
dec
push
cmpsb
arpl
adc
xchg
lret
push
repz
cwtl
fimuls
orb
jp
mov
jecxz
jecxz
je
lods
pop
xchg
and
loope
addr16
mov
fnop
mov
push
push
test
lds
inc
ds
lahf
call
add
rolb
fiadds
int3
stc
add
lret
mov
pushf
cmpsb
ja
adc
sbb
mov
test
lret
addr16
mov
jp
cmp
jg
cwtl
aad
cmp
add
outsb
cmpsl
mov
sub
imul
cltd
lock
fsubrp
movsb
ss
dec
neg
rcrl
int
leave
cmp
fwait
loopne
sti
adc
cli
adc
mov
mov
add
movsl
dec
or
cmp
test
jg
popa
mov
and
in
in
jno
das
cmpsl
jg
cltd
add
pop
and
jne
jbe
in
mov
pop
xchg
pop
mulb
ret
dec
cmp
pushf
stos
xorl
push
push
and
xor
shll
cmpsl
ljmp
xor
adc
pminub
and
sub
ficoms
test
add
icebp
scas
jle
xor
ljmp
outsl
fs
outsl
hlt
add
xchg
xchg
sbb
push
pop
xorl
mov
dec
hlt
fucomi
js
out
es
xchg
rcll
addr16
adc
push
sbb
or
mov
mov
xor
fsubl
outsl
ds
bound
aaa
ss
mov
pushf
xchg
jg
sub
outsl
pushf
aas
jle
jo
xchg
mov
inc
mov
cli
adc
add
xor
xchg
mov
ds
jo
sbb
rcrb
mov
cmp
pop
mov
lcall
pop
out
imul
bound
mov
push
dec
mov
cmp
int
pop
xor
xor
movsl
ds
call
ret
xor
and
pop
add
addb
test
pop
ss
aaa
add
push
lret
cli
repz
lea
push
or
adc
mov
rcr
and
in
call
outsb
push
loope
xor
shrl
shrl
bound
repz
jmp
sbb
fscale
jmp
test
cmc
inc
inc
sub
lock
rcrb
ret
repz
enter
call
dec
lea
data16
pop
shll
aam
push
out
and
inc
loope
sti
or
jmp
sub
ret
mov
rep
mov
xor
jno
dec
xchg
mov
pop
popf
cmp
enter
mov
gs
les
xchg
les
fiaddl
ja
sbb
xchg
and
sbbb
adc
outsb
mov
push
jge
idivl
sbb
push
jnp
mov
testb
sub
push
das
pop
jno
pop
aaa
dec
push
mov
nop
or
dec
pop
xchg
cwtl
cmp
pop
ljmp
movsb
xor
pop
jg
pop
jp
aaa
jbe
xchg
sbb
in
sub
or
adc
std
ljmp
lods
mov
mov
mov
inc
add
push
adc
les
xor
xlat
lahf
and
shl
addr16
sub
dec
xchg
decl
orl
fbstp
movaps
and
pusha
xchg
psrlw
inc
add
out
sti
inc
cmp
xchg
fdivs
adc
mov
lret
sarl
mov
fs
rorb
cli
jnp
out
ret
adc
cmp
cmp
pop
xchg
add
rolb
scas
jge
in
inc
ret
sub
jecxz
loopne
jp
ljmp
pop
xchg
mov
mov
scas
or
sbb
arpl
fcomps
aas
mov
xchg
arpl
ja
shl
jnp
and
inc
inc
push
adc
addb
push
pop
add
push
mov
add
lods
aas
jl
jb
iret
shrl
cltd
mov
in
push
inc
push
loopne
pop
fs
ss
into
jo
inc
mov
test
insb
xor
mov
inc
and
ret
enter
cmp
mov
in
mov
xchg
jecxz
notl
cmp
int3
loope
aaa
or
mov
mov
sbb
jno
repnz
fwait
xchg
mov
jb
dec
add
iret
imul
mov
loope
cmpsb
cmp
in
aas
fnstenv
leave
repz
icebp
push
ja
jp
push
ss
dec
lock
dec
test
jg
add
fnstenv
and
xchg
faddl
jle
push
xor
mov
push
inc
jge
add
mov
mov
or
sub
lds
or
repz
inc
mov
out
iret
imul
push
ja
and
mov
imul
dec
int3
sub
and
jp
scas
nop
pop
mov
add
inc
fucom
pop
adc
shrl
sbb
cmp
xchg
shrl
cmp
lods
inc
fucomip
fisubs
mov
mov
mov
or
testl
sub
fs
push
xor
daa
out
fcoml
jmp
lds
sahf
in
and
stc
in
push
testb
or
ljmp
fnstsw
or
enter
inc
bound
pop
sub
popa
andl
xorb
push
sub
popf
and
aad
sub
leave
imul
test
inc
insb
ret
xchg
jae
fwait
mov
add
cmp
dec
pushf
pop
jg
sarb
pop
mov
xchg
int
les
sti
xlat
adc
shlb
xchg
iret
imul
jmp
inc
mov
sbb
int
push
sub
mov
addl
repz
jb
dec
stos
test
pop
stos
push
cmp
dec
idiv
scas
ja
pusha
daa
mov
push
jno
arpl
xchg
fwait
xor
add
out
fsts
xchg
insb
sub
repnz
adc
xchg
fs
aaa
push
pop
jnp
mov
sahf
cmp
xchg
sbb
push
repz
add
stos
push
ret
pop
push
scas
lret
push
inc
call
test
call
in
jle
jmp
sub
ljmp
or
sub
push
xor
das
inc
mov
sub
test
push
xchg
cmpsb
pop
js
pop
pop
into
pop
push
dec
dec
dec
add
in
mov
xchg
lret
pop
sbb
xor
and
xlat
push
or
scas
pop
xchg
inc
xlat
cmp
aad
push
cli
in
xor
arpl
add
sbbl
push
mov
sbb
lds
adc
dec
enter
push
mov
sub
roll
sbb
cwtl
or
inc
and
ret
add
pop
mov
jno
xchg
add
inc
std
dec
sbb
lret
sub
fldl
popf
std
test
mov
jb
cmc
fwait
inc
aam
add
lods
xchg
fisttps
xor
nop
fs
add
lret
cmpb
cmpsl
scas
mov
outsl
or
cmp
dec
arpl
hlt
arpl
add
ja
rorl
push
mov
sbb
mov
or
int
push
dec
jae
xchg
mulb
jne
add
cltd
mov
fcoml
bound
std
and
out
add
stc
add
push
fisubl
es
pop
adc
pushf
fdiv
adc
shrl
mov
addr16
or
mov
js
jo
pop
scas
aam
mov
adc
mov
xlat
cmp
add
js
lea
pop
sahf
addr16
js
mov
mov
out
mov
pusha
lahf
pop
in
in
sbb
imul
es
adc
shll
movsl
mov
mov
inc
lahf
cmc
inc
pop
icebp
adc
push
cmp
mov
dec
push
rorl
loope
jno
jg
jp
push
push
sbb
sub
push
gs
or
mull
nop
andb
add
add
hlt
inc
aam
movlpd
nop
lea
or
fmull
test
jmp
sbb
cs
or
dec
mov
inc
sbb
out
cmp
jnp
cld
sub
movsb
sub
test
cmc
jo
dec
sub
or
pushf
jl
dec
out
mov
and
loope
js
mov
testb
sub
inc
divl
cmp
aas
lahf
and
mov
movnti
out
push
pusha
fildl
pop
popf
out
xor
into
inc
gs
cmc
mov
mov
mov
mov
les
dec
push
push
push
js
mov
xchg
add
in
mov
add
mov
pushf
push
add
dec
arpl
aaa
outsb
and
data16
mov
pop
sub
sbb
cltd
mov
aam
je
jl
testl
andb
ss
test
mov
ja
outsl
aaa
std
fldl
bound
sub
out
push
pop
add
xchg
inc
les
push
or
push
and
xor
hlt
push
ljmp
pop
xchg
xor
fwait
jno
push
jmp
add
sub
jbe
fnstcw
enter
js
jbe
int3
popf
lods
addr16
cltd
ljmp
test
push
incl
pop
mov
std
fcmovb
push
clc
test
insl
sub
inc
dec
mov
clc
cs
fldt
mov
jns
mov
xchg
sbb
adcl
repnz
lret
pop
xor
jae
add
js
xor
ja
enter
int3
icebp
push
xchg
mov
hlt
cltd
jmp
int
int3
push
in
lods
lods
xchg
imul
iret
sub
sub
jns
mov
pop
ljmp
lret
mov
fdivs
jbe
in
push
pushf
mov
sub
pop
sub
in
fldenv
test
enter
ret
pop
inc
insl
dec
leave
scas
dec
arpl
fidivl
cmc
push
in
jae
xchg
mov
or
sbb
in
out
out
pop
cwtl
hlt
imul
es
sub
lock
inc
ja
mov
popf
adc
jp
adc
mov
xchg
fists
mov
lock
rorb
insb
gs
aaa
movsl
or
popf
sub
cmp
xchg
push
scas
cmp
lea
stos
jle
dec
add
ficompl
ja
push
xchg
mull
sahf
int3
cltd
popa
jne
xchg
ficomps
loopne
add
and
mov
outsl
aad
cltd
test
aad
xor
sbb
lods
loopne
or
adc
push
in
je
incl
pop
jnp
clc
push
mov
lods
mov
ja
sub
popf
pop
mov
pop
subl
mov
stos
sbb
mov
xchg
sbb
mov
scas
ja
in
lods
jno
ret
mov
shll
or
adc
test
cmc
push
jb
ret
addr16
loope
jne
sub
scas
repz
dec
push
gs
pop
or
lods
pop
repnz
popa
jge
cmp
mov
sbb
lret
xchg
outsb
jnp
pop
pop
or
outsl
or
pop
pop
loop
inc
dec
movsb
inc
pop
mov
daa
pop
ret
inc
int
mov
es
movsl
dec
cmp
sahf
fwait
jp
test
in
hlt
push
and
out
aam
bound
cli
pop
cmc
jne
gs
test
fbstp
and
subl
stos
hlt
mov
rorb
stos
int
divl
pusha
sarb
imul
add
adc
in
push
mov
jl
sti
mov
test
mov
scas
or
mov
movsl
cmp
xchg
test
push
sbb
sbb
xor
or
inc
test
aas
xorb
jb
mov
shl
or
mov
mov
xchg
lcall
lds
sub
push
out
lock
adc
xorl
pop
and
xchg
test
fwait
iret
inc
mov
ljmp
data16
mov
rcll
stc
mov
sbb
add
fisubs
out
out
mov
fdiv
dec
xchg
mov
add
lods
mov
enter
loopne
adc
test
in
aas
adc
enter
mov
mov
into
aas
xor
sbb
mov
pop
jmp
cmp
or
sbb
out
lea
mov
jg
inc
fcmovbe
or
loope
sbb
and
cmpsl
sbb
pusha
je
mov
and
test
pop
into
push
aad
mov
sbb
mov
fxch
adc
cmp
dec
aam
call
inc
popa
push
push
xor
adc
push
push
adc
mov
cmp
ljmp
push
dec
test
push
orl
addb
sub
and
xor
jmp
sub
mov
ljmp
pop
rorb
inc
pop
and
cmp
insl
das
and
add
ds
adc
cli
jbe
jae
mov
out
js
mov
iret
pop
into
mov
pop
es
push
insb
ss
xchg
hlt
cmp
stc
flds
in
int3
sbb
dec
pop
das
pop
imul
fildll
xchg
js,pt
or
pop
insb
lock
push
inc
push
sub
mov
imul
mov
xchg
sarb
stos
cwtl
mov
mov
push
jns
iret
into
mov
or
insb
cmp
add
mov
push
inc
pop
loopne
push
data16
adc
xchg
icebp
push
int
lds
sahf
cmc
dec
outsb
outsb
xchg
popa
dec
into
jb
push
lcall
jo
mov
or
pop
add
sub
repz
mov
scas
loopne
inc
psllq
jecxz
push
mov
aaa
push
and
cltd
xlat
dec
lret
cmovnp
icebp
mov
std
cld
fstl
lret
add
popf
stos
cmp
sub
mov
aaa
pop
lods
push
add
push
stos
pop
push
adc
mov
pop
sbb
push
xor
mov
insb
cmpsl
add
scas
arpl
xor
rcrb
cmovno
or
xor
ss
repz
sbb
inc
jg
adc
std
out
aad
cmp
xchg
dec
mov
ds
fwait
scas
aad
cwtl
daa
pop
xchg
ljmp
cmp
jp
icebp
push
loop
xor
je
adc
push
pusha
ud0
jne
mov
jmp
mov
cld
push
cmp
mull
pop
mov
fwait
mov
out
aaa
in
outsb
jbe,pn
sbb
adc
sar
adc
xlat
xchg
xor
fmulp
and
imul
out
call
jp
pop
sub
out
dec
ror
gs
cmp
lahf
xchg
add
les
or
or
add
ret
hlt
cmc
mov
add
push
sbbl
inc
fmuls
jne
push
je
and
imul
sti
xchg
adc
pop
sub
jb
aaa
xor
cmpsb
rclb
xchg
or
jmp
or
out
decb
jb
jecxz
ss
orl
xor
ret
sub
in
dec
stos
icebp
xor
shl
jno
xchg
stos
setns
add
mov
shl
test
jo
psubusw
loope
jno
loope
pop
addr16
inc
adc
scas
mov
and
shl
adc
lret
push
cld
ret
iret
shlb
std
xor
dec
in
jne
cld
fwait
adcb
loop
ja
pop
pop
lods
test
shll
mov
xlat
je
out
fwait
mov
test
je
icebp
add
out
bound
pushf
add
in
and
dec
out
in
nop
scas
xorl
ljmp
jns
pop
or
sbb
repnz
jg
pop
daa
jmp
xchg
leave
adc
inc
sub
sbb
mov
dec
je
lar
pop
in
dec
xor
add
or
adc
sub
cmp
mov
in
test
sbb
xchg
adc
jae
push
and
repnz
dec
push
repnz
push
push
xor
push
aaa
push
push
mov
mov
inc
fmulp
pop
adc
inc
push
jle
inc
sahf
pop
sub
pop
xor
mov
lods
sbb
scas
inc
pop
mov
cmp
test
mov
mov
outsb
fiadds
mov
pop
xor
or
xlat
test
cmpsl
or
jp
jle
xor
movl
aaa
push
test
cs
push
mov
dec
ficompl
pusha
mov
adc
iret
je
jns
mov
mov
loopne
scas
testb
mov
sub
or
jmp
and
test
xor
addr16
xor
push
pop
inc
outsl
cmp
push
sbb
ret
jo
and
in
lcall
dec
xlat
push
out
mov
mov
ja
and
outsb
pop
and
jg
test
jbe
pop
js
stos
rorl
xchg
cwtl
mov
mov
lret
jg,pt
fsubr
insl
adc
sub
push
in
jno
jge
xchg
test
push
sbb
sub
shl
sbb
mov
in
lea
mov
mov
push
jne
stc
inc
cmp
pushf
fsubl
add
sbb
xor
jp
mov
aaa
inc
sbb
sti
mov
push
cmp
cmp
movsl
insb
cltd
test
mov
push
jne
in
insl
lds
or
add
cli
dec
mov
iret
xlat
xchg
xchg
pop
xchg
xchg
in
test
into
dec
adc
jp
push
out
enter
adc
or
xor
xchg
pop
pushf
cmp
test
test
jge
and
cs
int3
lock
scas
mov
xlat
mov
add
in
dec
fsubp
ds
cltd
inc
cmp
mov
add
push
aam
or
cmc
loope
pop
cmp
int
int
push
in
jmp
adc
add
insb
stos
add
iret
mov
lret
mov
sbb
sbb
out
cwtl
out
jmp
aam
mov
jle
adc
out
or
aas
xor
mov
and
std
xchg
mov
fimuls
bound
fwait
pop
bound
mov
mov
xchg
sysexit
push
out
outsl
sub
and
insl
mov
push
aas
pop
dec
mov
dec
jle
mov
inc
mov
fstp
inc
adc
add
dec
mov
pop
shll
loope
pop
jnp
stc
sahf
loop
and
pop
mov
iret
xchg
jge
dec
and
test
stc
mov
jne
hlt
rcrb
call
sub
cmp
ja
addr16
push
mov
xchg
mov
xor
push
pop
jnp
dec
icebp
xchg
dec
xchg
dec
sti
scas
pop
pop
loop
mov
sub
mov
push
das
and
lea
or
cmp
dec
mov
nop
dec
xlat
cli
aas
shlb
push
lret
or
insl
and
loope
stos
pop
scas
pop
fnstcw
sub
test
adc
jmp
mov
sub
out
loope
test
test
push
imul
mov
fimull
shrl
mov
movsl
pushf
cmpb
scas
addl
mov
stc
iret
scas
adcb
sub
nop
cmc
bnd
jle
and
cwtl
out
in
inc
adc
std
push
fcoms
adc
cld
mov
mov
insl
lods
lea
xchg
cmp
pusha
push
cli
cs
push
cli
je
mov
push
enter
incl
jb
std
pop
pop
jl
testb
add
push
push
jnp
inc
das
lods
cltd
lds
or
fistpll
lods
cmpsb
stc
cmpsb
sub
add
mov
stos
js
xchg
jg
adc
mulb
xchg
inc
nop
hlt
jno
sbb
jle
pop
mov
adc
clc
stos
and
push
inc
mov
in
xchg
mov
sbb
push
xor
mov
jecxz
or
cmp
cmp
pushf
xchg
aas
lods
ficoms
movsb
mov
in
or
fprem1
movsb
pop
jp
arpl
enter
adc
dec
dec
push
rcl
xchg
fidivl
rdtsc
xchg
mov
stos
push
mov
test
movsl
xor
push
jmp
xor
leave
and
es
popf
and
pop
lret
fsubl
xchg
jmp
jb
sub
ret
mov
loope
mov
mov
shr
pusha
popf
daa
mov
iret
xchg
pop
out
cmp
push
mov
sbb
and
mov
repz
push
cmp
xchg
xlat
sti
flds
stc
jp
jp
sbb
scas
pmaddwd
sbb
add
hlt
sub
mov
adc
lds
lods
arpl
cmp
outsl
fwait
aam
mov
jl
sub
sub
push
leave
mov
jp
cli
hlt
jecxz
dec
pushf
je
push
pop
xor
inc
pop
stos
out
loopne
pop
out
iret
daa
pop
jle
jae
push
pop
pushf
jg
push
js
xor
pop
lds
test
int3
or
or
mov
fimuls
cwtl
and
cli
adc
arpl
jg
push
cmc
nop
sbb
xor
test
pushf
mov
ds
or
nop
mov
pop
or
test
fstps
or
sub
sub
lea
jl
in
pop
sbb
aad
adc
fcoml
cmp
inc
loop
cld
dec
pop
subl
mov
repnz
cmp
shrl
cmp
hlt
paddd
leave
filds
push
test
fisttpll
add
push
std
ret
in
int
fcomp
xchg
or
lea
cmpsl
mov
pop
test
and
outsl
sub
add
mov
and
in
add
mov
jecxz
or
outsb
jbe
ja
int3
aam
cmc
lock
xchg
in
mov
lahf
adc
pusha
push
xor
jbe
add
mov
inc
data16
testb
and
cmc
cmp
int3
push
cmp
iret
sbb
lods
xor
sbb
lea
adc
push
mov
outsl
lea
jle
fldcw
adc
push
js
inc
mov
cmp
jmp
iret
lds
ud0
daa
pop
or
jae
jbe
adc
loopne
push
movsb
dec
repz
cmpsb
leave
cltd
add
movzwl
insl
xor
shll
leave
mov
sub
insb
call
sbb
shr
aam
imul
or
adc
int
jge
lret
insb
push
dec
lahf
movsb
xorl
andb
mov
enter
add
mov
hlt
addr16
out
dec
push
lcall
lock
repnz
and
and
inc
xchg
cld
or
xchg
fildl
ds
push
fs
test
or
xchg
les
adc
inc
and
stos
mov
cmp
sub
jae
mov
outsl
jge
dec
cmp
and
addr16
loop
or
inc
stc
sbb
adcl
int3
cmp
pop
mov
xchg
mov
cmp
popa
add
sbb
jne
jb
jge
pop
mov
outsb
sub
xchg
addr16
sub
dec
mov
aaa
ds
jecxz
mov
mov
dec
adc
adc
aam
pop
mov
push
insl
lahf
xchg
jne
dec
outsl
orl
lock
shl
repz
loop
and
outsl
sbb
add
out
mov
gs
sbb
sbb
cmp
mov
fisttpll
pop
int3
mov
adc
cmp
repz
in
adc
or
pop
ret
nop
adc
dec
mov
js
and
mov
mov
mov
mov
cmp
add
sbb
pop
call
push
jl
jmp
mov
pop
mov
and
inc
data16
pop
mov
push
test
mov
adc
in
inc
mov
stc
cli
pop
pop
inc
and
cs
sbb
mov
cmp
popf
vandpd
push
mov
mov
mov
adc
stos
mov
inc
jle
arpl
repz
into
adc
addr16
jne
adc
or
das
cmp
mov
nopl
int3
pusha
test
jmp
into
jne
jg
jmp
push
dec
mov
movsl
and
dec
dec
cmp
xchg
movsb
stos
inc
add
call
movsb
sti
mov
pop
loope
sahf
cld
loope
testl
movsl
mov
adc
lret
and
out
jecxz
add
test
cmpsl
mov
xor
imul
inc
mov
ds
shlb
inc
cmpsl
aas
push
add
mov
jno
sbb
scas
push
mov
enter
push
leave
les
sbb
jmp
jecxz
ret
insl
mov
or
fwait
fwait
cmp
jle
cs
lods
jg
jg
inc
adc
fs
flds
cwtl
or
fwait
hlt
jnp
test
or
imul
popa
sbb
scas
lea
clc
nop
insl
xchg
add
int
or
ss
ds
loop
rorl
ljmp
sbb
negl
adc
add
lea
and
iret
gs
lea
mov
ret
dec
lds
lea
imul
push
lahf
out
inc
sub
aam
and
ss
add
xchg
adc
xor
sub
stos
cltd
stos
loope
adc
add
loop
sbb
xchg
inc
or
ljmp
mov
int
mov
cmp
mov
mov
shl
insl
icebp
add
popf
out
cwtl
cli
jge
test
in
jbe
xchg
adc
int
inc
xlat
mov
aam
pop
shll
cmpl
int
lahf
mov
in
push
repz
cmp
fnsave
push
dec
or
cli
dec
jne
repnz
loope
iret
dec
xchg
dec
xchg
mov
pop
lods
jae
pop
iret
loopne
cwtl
out
stc
dec
in
mov
fwait
rclb
mov
sbb
scas
or
lds
pop
lods
ds
or
dec
addr16
ret
push
inc
leave
xor
out
into
loope
pop
testl
sbb
sbb
xchg
mov
adc
push
fidivs
xchg
jo,pn
aas
pop
mov
xchg
loopne
mov
out
push
and
enter
outsb
movsl
fimuls
mov
mov
testb
rolb
popa
mov
mov
xor
push
or
cmpsb
inc
xchg
test
test
xor
xlat
enter
ss
mov
bound
inc
int
test
mov
ret
dec
mov
fsub
xlat
out
jmp
mov
test
insb
lcall
pusha
cmp
dec
out
enter
push
xchg
fstps
push
loop
or
mov
sarb
xchg
mov
cld
mov
push
inc
loope
sbb
cltd
ret
xlat
jl
scas
arpl
sub
lods
call
dec
jne
jecxz
into
movsl
hlt
mov
popa
into
add
cwtl
mov
sbb
cmc
in
push
jg
sbb
movd
shrb
cltd
lds
ljmp
xorl
repnz
int
int
jl
and
mov
std
dec
dec
mov
add
pop
inc
aam
call
and
test
sbb
sbb
mov
jns
aaa
fidivrs
sub
fidivl
int3
mov
call
out
lret
outsb
fstpt
test
adc
adc
das
and
push
dec
xorl
test
cwtl
test
pop
test
enter
aad
adc
or
push
rol
out
or
and
das
out
out
out
gs
jns
jle
push
ss
sbb
cs
int
rcrb
dec
lods
mov
std
jb
pop
cltd
lret
or
jecxz
dec
sub
aam
lret
inc
int
int3
insl
mov
mov
lcall
push
jle
adc
inc
mov
out
pop
jb
adc
in
xor
sub
adc
rcl
cmp
movsl
push
jnp
icebp
cmp
and
adc
loop
cmp
and
js
mov
repz
gs
call
inc
mov
int
in
cmpsb
dec
jmp
cmc
into
bound
mov
imul
lret
data16
jmp
lds
cmp
nop
jecxz
fs
sub
mov
xor
iret
test
or
adc
fcmove
std
ss
cli
adc
sbb
jb
sub
rorb
lahf
aas
push
or
gs
enter
into
jp
fdiv
mov
pop
clc
cmpsl
pop
loop
fadd
hlt
outsl
push
jbe
push
lds
cmpsb
add
dec
adc
lahf
dec
pop
or
mov
insb
out
pop
popf
cmc
and
out
ljmp
shr
mov
jmp
fldcw
xchg
mov
push
pop
pop
sarb
shl
sbb
out
jno
xchg
hlt
inc
sub
mov
divl
addr16
int3
pop
cmp
addl
cmc
pop
out
xor
xor
icebp
repnz
adc
inc
lahf
push
dec
xor
or
bound
dec
pop
push
lea
add
cmp
lea
dec
lea
jbe
ds
cmpsl
jg
les
push
xor
mov
inc
cmc
stos
pop
dec
fcmove
mov
sahf
fidivs
in
icebp
xlat
daa
neg
jmp
cmp
cs
sub
loopne
xor
mov
xchg
dec
enter
inc
and
or
shll
or
mov
fisubrl
inc
sbb
mov
insb
stos
push
sahf
roll
adc
jne
lret
jecxz
loop
shlb
aas
lret
repz
dec
push
mov
inc
lds
push
mov
pop
and
aam
inc
mov
and
scas
xchg
and
je
imul
cmp
movsb
jo
sub
ljmp
mov
mov
xchg
popf
aam
shrl
xchg
ret
mov
mov
mov
popa
loopne
cmpsb
jl
int3
push
mov
jbe
jmp
cmpsl
rcll
fsubs
inc
xchg
jge
iret
mov
pop
dec
jne
popf
and
in
lcall
into
outsb
lods
add
repnz
int3
outsl
es
in
push
sbb
stos
in
sub
aam
pop
or
fimuls
sbb
cmc
dec
test
sahf
push
mov
cmp
in
dec
je
pop
ja
add
pop
cwtl
leave
adc
int3
xchg
inc
xchg
adc
test
adc
clc
and
in
popf
iret
jge
lods
cli
xchg
ficomps
lret
lods
sbb
aas
inc
ljmp
clc
adc
lock
imul
dec
fbstp
shl
xor
xchg
lds
aad
shll
mov
mov
fdivrl
shl
into
push
mov
outsl
test
dec
cmp
ret
or
add
xchg
rcl
push
fs
inc
les
mov
adc
fsubl
push
jno
les
add
push
cmp
xchg
add
sub
dec
jecxz
mov
mov
lds
xor
movsl
mov
xor
add
pop
jns
je
cmp
pop
mov
mov
js
testb
xchg
or
pop
mov
mov
gs
call
test
mov
icebp
cli
fstpl
mov
sahf
xchg
fcomps
and
fisubl
xchg
and
pop
push
es
xor
stos
movsb
inc
pop
insb
add
xchg
bndstx
idivb
aas
out
jb
sub
mov
sbb
ret
mov
xor
lea
and
test
cmpsb
push
je
or
pusha
mov
pop
call
imul
mov
orb
pop
mov
pop
xor
xor
cmp
sbb
adc
mov
or
jb
int3
pop
mov
jne
push
scas
outsl
lcall
call
loop
xor
test
mov
js
into
or
stos
cwtl
ret
shlb
mov
mov
mov
lds
insb
lods
mov
push
shr
jl
rcrb
inc
hlt
lock
adc
mov
lret
pushf
iret
repz
cmp
das
out
stos
jns
mov
fs
leave
push
mov
ret
in
cmp
les
adc
push
and
cmp
adc
pusha
jno
pusha
pop
das
fadds
lret
and
sbb
out
sbb
adc
aaa
or
add
mov
out
testb
imul
mov
incb
dec
adc
insb
js
jmp
pop
arpl
pop
lock
filds
fs
push
rolb
adc
mov
xor
outsb
mov
test
jmp
lds
jg
pop
xchg
iret
add
lock
movsb
cmp
into
das
jns
add
pop
cmpsl
ret
xchg
stos
push
fistpl
inc
push
mov
orl
jns
das
dec
mov
cltd
popa
mov
aaa
pop
mov
jp
int
pushf
jno
daa
mov
mul
mov
repnz
cmp
push
mov
fdivrp
das
jb
stos
stos
outsb
shlb
insb
xchg
fmull
enter
jo
xlat
repz
test
sub
out
outsb
mov
inc
or
scas
fisttpl
jg
out
push
xchg
fisttpll
pop
test
enter
loop
andb
gs
test
test
imul
xor
pop
std
cmc
cwtl
pop
dec
and
or
in
sub
sti
in
shlb
dec
sbb
jecxz
leave
ret
ret
sub
mov
push
cmp
mov
and
sub
out
es
test
out
mov
rcl
insl
fistl
shlb
daa
loopne
fcoml
bound
fucomip
sbb
xchg
sahf
daa
mov
cmp
ret
addr16
push
das
push
push
lahf
icebp
int3
mov
cmp
push
mov
inc
sub
fdivl
in
or
rcr
cs
sbb
adc
ja
divl
inc
loope
pop
sbb
mov
gs
bound
xchg
mov
mov
in
sub
in
pushf
lds
jmp
mov
mov
movsl
push
out
outsb
cmc
cmc
loop
repz
adc
xlat
test
sbb
push
pusha
mov
pop
xor
addr16
flds
sub
loope
enter
shrb
and
jns,pt
cmp
dec
pop
popl
sbb
add
leave
ficompl
inc
mov
jnp
jo
cli
shll
xor
or
add
pushf
ret
std
cmp
ret
mov
jl
jne
sbb
sbb
pop
lret
aaa
cld
inc
push
popl
stos
push
xchg
xor
and
add
sbb
jmp
enter
cld
movsb
mov
shr
and
nop
movsl
scas
add
lock
sbb
xor
cmp
sbb
jle
pop
adc
insl
sub
lret
add
mov
fldt
out
lret
xor
mov
push
out
push
stc
std
push
pop
or
roll
fsts
icebp
and
js
sahf
movntq
out
sub
sub
cmp
addb
ret
push
add
pop
fldenv
clc
sub
das
shl
jg
je
movsb
js
dec
dec
push
mov
sbb
fwait
stos
dec
stos
icebp
testb
aad
imul
lods
scas
push
ja
shlb
adc
fdivs
mov
rolb
and
or
rorb
sub
dec
dec
mov
push
xchg
psubsb
mov
ret
push
rcr
push
jle
push
mov
hlt
iret
fcomp
mov
movsb
addb
ret
jae
test
ret
insb
lock
ret
xchg
mov
int
das
das
and
scas
push
sbb
in
xor
aaa
add
mov
lahf
xor
lcall
cmp
push
mov
lret
lret
aaa
add
add
lahf
cmpb
xchg
mov
fwait
mov
ficomps
out
push
pop
loopne
jp
jbe
mov
lea
stos
inc
mul
pusha
jae
aam
pop
xor
shl
cld
sub
call
jns
clc
dec
mov
and
xchg
adc
inc
test
shlb
int3
mov
mov
mov
adc
push
xor
icebp
or
add
cli
mov
push
cld
inc
xchg
fs
lcall
wbinvd
sbb
xchg
and
push
jbe
sub
jb
mov
xor
xor
mov
jmp
mov
clc
hlt
mov
std
sbb
sub
cmpsb
cltd
sti
mov
jbe
xchg
xor
mov
dec
mov
ja
cwtl
dec
sbb
lods
or
dec
fdiv
data16
ljmp
movsb
sub
outsl
or
call
fistps
jmp
pop
lret
pop
xor
fstl
fidivrl
mov
out
mov
out
mov
push
mov
js
mov
mov
mov
das
outsb
es
fldcw
push
or
aam
adc
jge
mov
adc
xchg
fistpl
cmp
push
popa
jecxz
fsubrl
sub
movsl
pop
mov
mov
jg
add
add
dec
sbb
into
sbb
movsb
or
sub
stc
jne
cmp
ljmp
mov
jp
and
adc
xchg
jne
mov
out
sti
adc
mov
test
pop
addr16
test
iret
test
fimuls
pop
iret
jmp
add
sbb
call
jecxz
pop
repz
mov
and
lret
cld
es
int3
popa
sar
mov
mov
lock
aam
pop
mov
push
aaa
ds
ud1
mov
push
mov
push
repz
sbb
ret
js
cmp
mov
sbb
mov
xor
icebp
adc
imul
mov
mov
mov
dec
popa
dec
imul
out
push
adc
mov
xor
sti
push
xor
mov
cmpsb
cmp
lahf
jmp
stc
shl
mov
mov
push
mov
sbb
les
mov
das
push
ss
test
mov
push
ret
int
repz
mov
mov
and
mov
cmpsl
cs
test
in
je
fwait
div
fisubs
nop
lea
and
mov
cmp
mov
cmc
push
imul
jmp
sbb
addr16
and
jae
dec
sbb
xchg
imul
enter
adc
sbb
or
push
pop
in
inc
mov
cmp
enter
mov
int3
cs
sarb
es
sbb
inc
mov
sub
xor
add
and
stc
pop
cmp
xorb
add
cld
or
andb
negb
xor
hlt
and
jne
pop
ja
je
sbb
cli
ret
daa
adc
popa
and
push
xor
adc
adc
sbb
push
mov
mov
or
xlat
lahf
fucomip
fdivrs
pop
test
and
push
lds
dec
mov
jb
cwtl
enter
insl
xor
add
jne
add
inc
push
ret
and
das
loop
das
push
dec
and
jns
mov
cwtd
push
movsl
daa
and
pop
out
mov
cmp
push
aad
mov
pop
int
and
mov
sub
add
les
mov
mov
cmpsb
and
pop
xor
out
inc
pushf
rclb
mov
popa
daa
lea
cmp
add
xchg
inc
cld
shll
xor
pop
mov
aas
inc
xchg
subl
cmp
out
rcll
xor
sub
scas
into
je
jecxz
fnstsw
mov
in
mov
daa
jecxz
sahf
pop
push
mov
xchg
lods
pop
and
and
test
fstps
orb
add
int
or
push
imul
jb
int3
aad
xchg
mov
pop
insl
repnz
rolb
stc
xchg
mov
mov
dec
daa
outsl
sti
cwtl
xchg
xor
cs
or
mov
mov
sub
rolb
aas
ja
dec
js
es
lods
out
xor
ret
dec
insl
or
jecxz
mov
ds
push
inc
ss
jg
fistpl
gs
lock
pushf
adc
clc
orb
fcoms
pop
cmp
xorl
imul
fistl
push
pop
fxch
jbe
inc
mov
out
test
push
and
cmc
add
aaa
mov
jmp
les
jno
dec
cltd
xchg
lcall
das
lods
cmpsl
add
cmp
fstl
das
clc
adc
aam
fwait
and
jno
lock
jo
cmp
test
sar
and
pushf
ret
lret
inc
xchg
jmp
sbb
dec
pop
shlb
filds
test
ds
out
out
lods
sub
loop
movl
mov
in
mov
int
jae
jbe
hlt
xchg
cmp
sbb
mov
pop
je
out
add
inc
rorb
dec
stos
jbe
jg
incl
mov
hlt
rorb
mov
arpl
xchg
and
stos
call
adc
push
lcall
xchg
xchg
pop
sbbb
rolb
mov
repnz
imul
and
call
dec
and
lock
in
pop
and
lods
in
sbb
sar
mov
cwtl
xchg
or
ss
gs
insb
ss
test
pop
int
or
sub
add
ret
rcr
mov
inc
mov
and
orl
fiadds
rcll
imul
adc
outsl
sbb
into
sbb
sbb
leave
jo
adc
ljmp
sub
xchg
mov
clc
and
inc
leave
add
or
pop
mov
stc
mov
and
scas
mov
rorb
hlt
mov
pop
mov
xor
cmc
les
jbe
dec
sar
jle
sbb
loope
sub
adc
repz
cmp
lsl
stos
daa
xor
push
inc
adc
push
sbbl
add
dec
addr16
popf
mov
inc
in
or
notl
fnstsw
mov
or
push
mov
mov
cmc
or
sahf
in
or
dec
add
ljmp
adc
and
out
xchg
push
mov
fbld
loope
bound
out
push
scas
jmp
jl
das
int
stos
xor
and
daa
add
lret
sti
pop
xchg
jmp
sbb
call
push
mov
cmpsl
ret
lods
jno
test
and
or
jbe
lret
mov
xchg
xchg
in
mull
adc
scas
hlt
call
jno
dec
push
push
dec
fsubs
hlt
cwtl
pop
std
aam
or
lahf
fsubrp
mov
and
dec
hlt
inc
jae
lahf
xchg
shlb
es
ljmp
inc
lcall
mov
stc
test
mov
lods
push
or
in
test
lret
adc
sub
cmpl
gs
movsl
pop
or
fdivrl
sub
push
jge
sub
clc
dec
das
test
xlat
adc
push
dec
xchg
cmp
movsb
loope
cmc
xor
adc
xchg
push
aas
sbb
xor
mov
xchg
fisubrs
mov
jge
push
daa
sub
pop
sbb
sub
adc
imulb
dec
cltd
pusha
pop
mov
xlat
inc
arpl
dec
negl
in
rorl
lret
xlat
jno
clc
and
push
lcall
popa
jl
ljmp
and
inc
das
xchg
fildl
jge
out
jns
mov
icebp
dec
sbbb
test
xchg
test
mov
mov
ss
mov
das
mov
adc
movsl
pusha
inc
div
jl
data16
dec
cmpsb
jo
or
fstps
adc
mov
ret
arpl
inc
cmp
jae
or
cmpsb
mov
xchg
lods
inc
int
sbbl
or
mov
mov
inc
hlt
mov
mov
mov
shrb
sub
testl
rcr
cs
pop
cs
movb
mov
popa
mov
shl
jle
dec
insb
push
cmpl
test
jmp
fsubl
arpl
mov
lock
int3
push
jmp
test
jle
arpl
repnz
jne,pn
inc
mov
ss
mov
shll
xor
lods
subb
repz
cmc
dec
mov
pop
sbb
lods
mov
jo
add
mov
bswap
mov
sub
clc
xchg
leave
jo
adc
leave
arpl
cld
jns
sbb
incb
push
xor
movsl
mov
and
inc
cmp
sbb
sarl
mulb
fcompl
movsl
insl
fwait
or
lods
add
lock
sbb
cld
add
jo
xor
leave
adc
ret
lret
insl
in
aaa
out
shr
and
jmp
movsb
xchg
repnz
scas
push
and
jmp
push
imul
xchg
hlt
xor
jb
sub
mov
and
xlat
mov
out
imul
sub
adc
sbb
mov
mov
into
ret
or
ret
aam
leave
aas
shll
xchg
fwait
mov
mov
pushf
mov
or
data16
cmp
je
out
shlb
sbb
xchg
fnstcw
call
mov
lcall
add
dec
push
sub
insb
cmp
add
je
jge
mov
test
add
xchg
inc
int
testl
add
xchg
inc
xchg
push
imul
repnz
sub
pop
inc
popa
sub
sub
fmull
and
das
xchg
jns
movsl
pushf
je
hlt
je
xorl
std
xor
xchg
and
sub
jne
jecxz
mov
mov
sbb
cmp
push
sbb
popa
dec
sbb
or
xlat
xchg
inc
or
lods
xor
jnp
lock
jo
sti
fnstenv
popa
push
mov
pusha
add
ss
out
inc
lock
imul
rol
push
mov
push
jmp
and
push
lahf
data16
cmp
push
pop
mov
inc
ss
mov
in
in
shrl
xchg
push
or
les
mov
cmpsb
xchg
sbb
sbb
add
negb
cli
inc
xchg
mov
inc
int
push
dec
mov
imul
jo
movsl
test
mov
pop
xchg
xchg
cmp
mov
shl
stos
imul
xchg
into
xor
mov
sub
jae
adc
add
cmpsb
fs
push
add
mov
sbb
push
addr16
je
dec
and
arpl
dec
test
xchg
je
mov
dec
lods
dec
cmp
rcll
mov
push
loop
xor
dec
mov
outsb
aaa
sub
daa
out
psubsw
push
xor
sbb
leave
jg
and
cwtl
arpl
mov
sbb
jge
pop
xchg
testl
mov
cs
ja
imul
cli
sbb
insl
movsb
mov
xor
and
cmc
dec
push
hlt
lcall
push
push
cmp
lods
lods
mov
loop
jecxz
hlt
test
popf
stos
ret
push
jp
push
aas
push
dec
inc
int
push
mov
mov
sbb
out
test
ret
mov
mov
sbb
ret
cmp
push
jne
sbb
mov
rcr
mov
pop
ss
push
movsl
adc
jo
les
outsb
cmpsb
roll
lock
xchg
sbb
cltd
arpl
ja
in
adc
nop
push
cmpl
xor
mov
ret
aaa
in
lods
add
or
xchg
cmp
cmp
pusha
movsb
icebp
lcall
dec
into
xchg
loopne
inc
jno
add
push
test
mov
test
into
orl
inc
dec
add
sub
push
push
decb
loop
mov
xchg
push
inc
mov
cld
cmp
icebp
ds
out
inc
pop
sbb
cmc
scas
sbb
hlt
dec
sub
test
cmp
cltd
loopne
xchg
test
je
les
aas
ljmp
ljmp
push
call
mov
shll
pusha
jns
in
push
js
and
movsl
jmp
jg
rol
inc
or
lcall
test
cmpsb
sbb
in
cmp
iret
xchg
push
adc
insl
fwait
in
imul
mov
mov
das
inc
xchg
dec
shrb
das
or
mov
scas
adc
jle
mov
mov
dec
cmc
mov
jo
inc
add
sbb
stc
cltd
and
dec
call
xchg
arpl
cld
loopne
scas
add
ljmp
lds
inc
out
sub
jp
loop
push
bound
sarb
repz
pop
inc
out
dec
mov
cmc
enter
enter
lea
test
in
nop
push
enter
sbb
lret
jbe
jne
test
fs
lret
mov
mov
xor
in
pop
clc
leave
push
mov
push
mulps
inc
fwait
jno
out
dec
inc
loopne
int3
jnp
sub
cmpsb
fnstenv
imul
inc
lock
mov
imull
push
call
push
ljmp
movaps
dec
stos
sbb
icebp
lahf
int
fistpll
pop
and
inc
mov
xchg
sarl
jl
out
das
adc
xor
lods
cld
sahf
jecxz
mov
leave
xchg
xor
inc
mov
jl
add
rcl
mov
cmp
mov
fiaddl
mov
xchg
js
pop
pop
repnz
dec
fists
insb
bound
mov
and
pop
lods
dec
cmpb
test
pop
imul
notl
dec
cmp
test
test
mov
mov
xchg
xchg
mov
mov
dec
outsb
or
mov
inc
xchg
mov
or
adc
lahf
ret
hlt
addr16
fidivl
ljmp
test
xchg
sub
push
push
and
rcr
fldcw
js
xchg
mov
je
test
fdivrs
fisttpl
mov
mov
repz
in
xchg
fidivl
dec
sub
ds
hlt
scas
fdivl
outsb
adc
fdivl
fnstcw
loope
lcall
dec
push
push
rcrl
or
test
stos
pop
jae
sbb
leave
mov
sbb
dec
int
or
xchg
sbb
movsl
pusha
imul
mov
loop
jmp
inc
cmp
gs
jle
mov
repnz
or
cmp
jae
jnp
sbb
push
inc
mov
iret
and
sbb
pop
dec
add
lahf
adc
or
xchg
xor
test
roll
and
lods
xlat
push
decb
mov
adc
cmp
or
sub
xchg
lock
repz
aaa
fdivp
int3
fwait
push
cld
adc
test
dec
outsb
mov
sbb
mov
repz
mov
mov
or
push
mov
mov
mov
fiadds
jle
clc
inc
add
lods
pop
mov
push
fildll
mov
mov
pop
les
sbb
mov
adc
orb
mov
fnstenv
push
push
inc
mov
mov
pop
test
pop
mov
scas
cmp
mov
into
pop
sub
mov
scas
leave
fisttps
mov
bound
dec
xchg
xchg
sub
mov
outsb
ficoml
out
repz
pop
inc
ss
ss
adc
int3
sarb
hlt
pop
std
pop
and
das
lahf
pop
adc
gs
pop
cs
dec
test
add
or
dec
xchg
scas
sub
cli
xor
pop
fimuls
mov
xchg
lret
mov
and
shr
sbb
lods
sbb
mov
fnop
pushf
mov
lods
mov
sub
fsts
or
out
xor
or
cld
sahf
ljmp
pop
jbe
loope
push
push
cmp
aad
xor
sub
pop
scas
xchg
or
push
xchg
inc
mov
sub
sub
cli
das
fadds
in
mov
jnp
dec
cwtl
xchg
cwtl
pop
and
dec
imul
insb
pushf
mov
jne
call
pop
pop
popf
xor
outsb
jmp
leave
int
mov
xchg
sub
xchg
pop
mov
push
inc
push
iret
das
div
icebp
lods
imul
into
roll
mov
fucomip
fidivs
test
xor
cmp
and
mov
and
ret
or
les
jnp
in
add
inc
in
xchg
mov
neg
lea
inc
push
and
out
movsb
adc
mov
rorb
lods
jae
push
mov
jb
inc
push
inc
into
push
cld
mov
mov
shrb
int3
pop
movsl
test
and
push
stos
jae
sbb
and
movsb
sbb
in
pmullw
sti
add
adc
push
fwait
test
test
or
je
mov
xchg
lds
mov
add
jmp
xchg
or
insb
scas
mov
lea
add
jmp
aas
mov
clc
addr16
dec
or
lock
lret
rolb
xor
inc
jb
in
adc
hlt
xor
cmp
mov
lock
cs
movsl
test
jae
sahf
jmp
fnstcw
xchg
aam
aad
rcrl
popa
stos
out
jno
sub
test
inc
push
jno
pop
outsb
push
xor
fcoms
adc
inc
in
cltd
jmp
adc
mov
lods
pop
enter
rep
push
sub
xor
test
mov
jno
sub
mov
mov
fwait
popa
pop
push
leave
ja
pop
out
push
push
pop
aaa
cmpsb
out
xor
jecxz
jmp
stos
daa
pop
lods
add
fisubs
sbb
out
dec
cmp
mov
push
leave
mov
lea
and
pop
cmp
inc
les
sti
gs
movsb
loope
aas
ret
imul
les
xor
adc
fistps
mov
lods
xor
sub
mov
loope
sub
popf
mulb
dec
jo
adc
inc
lcall
ret
lock
rorl
in
subb
xchg
clc
cmpsb
xchg
or
add
mov
and
xchg
jecxz
sbb
xchg
orl
dec
or
mov
push
clc
rcrl
mov
imul
out
scas
je
inc
nop
cmp
and
imul
inc
popf
adc
pop
push
dec
inc
test
ss
rcl
mov
jle
dec
scas
pop
scas
push
cmove
xchg
xor
jmp
test
test
mov
pop
ds
lods
adc
jns
ja
lea
dec
aam
push
push
into
bound
mov
out
add
push
out
faddl
cmpsb
xlat
mov
push
loopne
pop
xchg
dec
repz
xchg
aas
and
js
jg
ja
aaa
cmp
ficoms
cmp
fdivl
pop
mov
lods
mov
sbb
mov
ja
fistpl
imulb
xor
stos
iret
add
aam
ss
cmpsl
cmp
push
mov
dec
dec
xor
xchg
inc
out
sub
cld
sbb
cmp
cltd
push
orl
sbb
ficoml
orb
adc
sub
test
dec
pop
mov
adc
jg
inc
dec
sbb
xor
or
movsb
mov
sahf
sahf
sub
pop
mov
nop
idiv
push
fs
xlat
inc
fcmovnb
in
nop
pop
mov
sub
shlb
ljmp
xor
out
mov
or
addb
fdivrl
push
xchg
pop
cltd
xor
mov
lret
arpl
xchg
pop
scas
daa
adc
dec
fsub
cmpsb
adc
pop
mov
push
jno
push
ss
cwtl
dec
jg
cmc
xchg
cmpsb
shll
es
pop
dec
int3
loop
push
cmpsl
push
shll
notb
xchg
mov
add
fidivrs
test
jg
dec
roll
aad
lret
xchg
sbb
pop
xchg
sub
sarb
mov
jp
movsl
jo
mov
jg
xchg
sbbb
jle
lcall
xchg
out
adc
cmp
xchg
sti
xor
into
ss
pop
jmp
cltd
mov
pushf
add
leave
lods
cmpsl
jno
xor
movsb
xchg
aas
fnstsw
inc
daa
sbb
sarl
lcall
imul
int
push
inc
add
gs
push
jecxz
je
das
leave
cwtl
adc
xchg
insl
fneni(8087
mov
add
cmp
pop
ret
xchg
add
lock
in
test
mov
xchg
jne
loop
lods
aam
popf
mov
mov
lahf
mov
hlt
pop
push
adc
adc
mov
lods
sub
lods
xchg
out
cmp
sbb
mov
mov
inc
sbb
sbb
nop
int
ds
test
data16
pushf
dec
xor
add
sbb
sub
fwait
mov
out
loope
push
xor
and
pop
xor
pusha
popf
cmp
lods
ljmp
in
jecxz
mov
cmpsl
es
ja
popa
fisubl
cmp
mov
push
adc
mov
dec
ficomps
jle
jne
lahf
push
cmpsb
xor
sub
stc
cli
aas
pop
dec
insl
xor
gs
mov
inc
sub
and
aad
mov
inc
out
pop
cmp
xchg
test
out
and
cwtl
pop
mov
sti
mov
jmp
imul
sbb
sbb
push
cwtl
mov
arpl
icebp
xchg
repnz
cmpb
stos
jle
repnz
lret
pop
push
lret
jp
cmp
shlb
xchg
out
cwtl
mov
cmp
dec
jecxz
sbb
fs
adc
out
mov
push
lcall
in
xor
int3
add
cwtl
add
mov
sub
push
aad
loope
push
inc
and
jmp
xchg
push
inc
loop
out
mov
mov
inc
add
lahf
sbbl
adc
and
pop
mov
ljmp
int
cmc
fwait
xor
ret
pop
jne
and
rcrb
push
xchg
mov
and
int3
or
les
push
imulb
les
mov
dec
gs
aaa
daa
sahf
dec
cltd
inc
inc
mov
push
push
out
sti
adc
inc
fwait
fwait
hlt
cwtl
sbbb
cmp
dec
mov
in
pop
adc
and
lds
std
divl
and
outsl
js
mov
jnp
lret
and
inc
inc
loop
sbb
jl
mov
xchg
pusha
sbb
mov
insl
push
xor
sbb
lea
ret
ret
xchg
in
dec
lahf
movsb
lea
test
pop
vpaddusb
or
push
test
lahf
mov
mov
mov
pop
adc
ret
lods
cmp
mov
xor
mov
out
out
xor
aas
cli
push
mov
aaa
mov
pop
and
in
icebp
sti
jnp
or
inc
xchg
mov
cwtl
mov
jmp
scas
sub
jne
mov
cmc
data16
dec
lea
call
push
push
cmp
les
jo
jne
out
aad
jbe
and
push
ja
clc
push
mov
adcl
les
lret
pop
pop
xchg
lods
sti
lret
pop
data16
push
adc
loope
sbb
push
faddl
frstor
xor
fcoms
mov
clc
in
dec
add
cmpsl
push
mov
or
cld
inc
pop
aam
and
ds
xchg
cmp
pop
or
decl
mov
mov
dec
insl
repnz
negl
or
mov
jne
icebp
lods
das
es
sbb
out
and
cltd
mov
loop
xor
cltd
dec
cmp
shll
sbb
mov
mov
test
les
add
mov
inc
scas
jmp
adc
cs
ret
pushf
pop
push
psubq
hlt
xchg
je
jg
jae
lea
add
add
clc
mov
jbe
lock
jo
xorl
movsb
adc
insl
xor
xchg
and
push
js
or
fcoml
in
xchg
test
std
mov
adc
ret
adc
mov
mov
loopne
fidivl
inc
mov
adc
push
rep
pop
aam
test
xchg
ss
or
sub
ret
and
mov
push
push
stos
sbb
adc
test
jae
cltd
xlat
repnz
jmp
dec
or
jmp
faddl
push
push
push
adc
dec
sbbl
test
mov
xlat
andb
push
xorb
and
mov
sbb
xor
in
dec
cmp
inc
xchg
mov
scas
inc
loopne
ficompl
leave
out
lret
pop
xchg
int3
or
adc
cmc
jnp
or
pop
aam
mov
mull
inc
es
or
das
je
repnz
in
push
cmp
push
notb
out
ljmp
jmp
and
repnz
outsb
dec
push
xor
dec
fcompl
pop
rclb
or
enter
fwait
push
xor
xor
es
cld
pop
mov
sti
ficompl
sbb
leave
lea
xorb
test
mov
pop
lret
jmp
testb
cmpsb
dec
insb
push
push
push
aad
lret
in
ja
sbb
add
fucomi
jno
stos
xor
push
jp
insl
imul
adc
adc
cmpsb
scas
and
jae
sub
repnz
insb
aam
pusha
in
cmpb
mov
cmpsb
or
cmpsb
rcll
scas
cmc
push
mov
cmp
pop
mov
xchg
dec
inc
jp
sahf
stos
pop
fists
movswl
shrl
or
sub
mov
or
loope
lock
jmp
aam
mov
sbb
fsubr
sub
lods
pop
push
addr16
push
pushf
mov
es
mov
mov
das
mov
fisubrl
jnp
cmp
add
rcrl
fadds
push
cmp
pop
push
mov
inc
and
dec
cmp
push
mov
mov
mov
pop
fmulp
bound
mov
cwtl
dec
aam
add
mov
push
je
adc
cs
into
xlat
inc
in
mov
loop
pop
cmpsl
bound
in
xchg
and
nop
sub
pop
ret
ficomps
mov
jg
data16
aas
sbb
insl
out
and
pop
mov
push
pop
or
fstl
dec
ss
repnz
nop
mov
js
out
mov
cmp
out
mov
jmp
jno
push
je
in
cmpl
fs
rcr
icebp
mull
xor
cmp
hlt
or
pop
cmc
xchg
sbb
in
adc
add
and
mov
inc
shrb
adcb
cmc
test
inc
in
jle
mov
rorb
sbb
mov
jnp
sbb
stc
sub
mov
fcoml
std
add
mov
fidivrl
push
sahf
mov
das
sbb
setb
fldcw
stc
mov
ror
dec
aad
das
inc
loopne
mov
mov
mov
jl
pop
jnp
imull
pop
movsb
lea
lcall
repz
mov
adc
push
pushf
enter
pop
lret
cmpsb
loope
and
sti
mov
out
arpl
push
xlat
or
das
push
mov
adc
sahf
ret
adcb
pop
shll
cmp
adc
int
mov
in
xchg
popa
mov
mov
movsl
cmp
popa
xor
aad
xor
pop
adc
push
scas
into
pop
inc
shrb
push
xchg
in
and
insb
fwait
mov
jp
sub
mov
mov
add
jb
pushf
add
mov
leave
mov
sbbl
jne
stc
mov
dec
jmp
stos
call
int
ljmp
dec
pusha
push
sahf
dec
push
and
push
sub
ss
nop
andl
jp
data16
mov
adc
movl
iret
into
or
mov
xchg
cld
push
mov
btr
mov
cmpsb
jae
loop
xor
pop
dec
or
dec
int3
pushw
xchg
add
shlb
fcomi
xor
mov
cmc
inc
push
cltd
in
xchg
sahf
bound
xlat
add
outsl
cltd
loope
xchg
push
mov
movsl
out
loope
pop
fsubs
lock
add
add
ds
and
jg
pop
jno
and
loopne
fistps
jb
jnp
add
sbb
mov
pop
push
sbb
fs
mov
push
int3
adc
inc
adc
dec
xchg
add
sbb
pop
xchg
sub
fs
insb
mov
jnp
loop
push
sub
push
and
lock
adc
fldt
push
sar
dec
jl
test
push
fstpt
mov
push
aam
subb
mov
mov
jo
mov
punpckhwd
adc
inc
xor
ljmp
sbb
mov
push
dec
out
push
test
xchg
clc
add
enter
adc
lea
loop
or
mov
lret
mov
pop
ja
int3
sarl
insl
loopne
scas
mov
insl
sbb
jo
mov
test
lret
scas
and
inc
std
mov
mov
lcall
aas
data16
dec
or
xor
pop
dec
repz
pop
lcall
loope
cmpsl
jns
iret
inc
or
mov
lods
sub
insl
outsb
js
mov
adc
dec
xchg
std
cld
push
ret
cmc
or
xchg
push
scas
dec
out
push
push
jno
or
mov
nop
xchg
in
pop
adc
popa
rorb
push
enter
jne
fiaddl
lods
jb
scas
popf
out
adc
addr16
jb
scas
lods
call
loop
cli
pop
mov
sbb
pushf
xor
mov
mov
int3
or
dec
pop
adc
push
jb
dec
in
pop
mov
daa
xchg
movsl
pop
pop
inc
mov
imul
pushf
add
stos
dec
nop
mov
cs
lods
adc
out
dec
mov
imul
dec
jne
jmp
dec
loop
je
mov
shrl
mov
lods
mov
ds
clc
lock
mov
outsb
mov
je
sub
push
imul
es
jbe
mov
mov
xchg
xor
shlb
and
mov
lret
mov
int
adc
lahf
sahf
imul
adc
dec
sbb
icebp
xlat
sbb
cmp
cmpsl
mov
cld
lock
cli
popf
clc
cmc
shrb
popa
or
ss
sbb
movl
test
mov
das
lahf
dec
pop
mov
daa
or
sbb
sbb
mov
jg
int3
fisttps
out
cld
cmpsl
hlt
mov
popa
je
into
jge
dec
dec
dec
movsl
call
stos
add
sub
sub
push
mov
push
push
jmp
sub
dec
jae
jno
push
or
out
cmc
xchg
cs
loope
xor
pushl
pop
fwait
adc
mov
loope
lods
jp
push
lock
jno
add
adc
dec
xchg
es
insb
jle
cmpsb
mov
aad
sbb
lock
pop
add
fwait
sbb
and
dec
sbb
inc
dec
or
and
int
ja
mov
mov
ds
cld
xchg
aad
push
test
cmp
test
mov
mov
inc
lea
cmp
aaa
stos
pop
icebp
pop
pop
iret
jg
dec
dec
pushf
fs
addb
pop
jmp
shlb
xlat
mov
fisttpll
fmul
dec
repz
iret
sti
xchg
jmp
stc
stos
out
xchg
pushf
cmc
pop
mov
out
clc
andl
enter
pop
jb
push
aas
js
pop
adc
sbb
xor
jbe
inc
outsl
mov
scas
mov
adc
add
and
jp
cmp
loopne
jecxz
inc
cmc
and
fstps
xor
push
push
shrl
test
mov
leave
mov
xchg
jge
cmc
out
mov
pop
movsl
dec
jo
push
inc
inc
mov
pop
mov
xor
pusha
pop
fstpl
mov
out
test
and
mov
ds
push
ss
loope
insb
mov
add
je
xchg
mov
xchg
push
enter
adc
addr16
sub
jb
inc
stos
xchg
xchg
aas
or
es
pmaxub
xor
sbb
and
ja
jl
push
mov
jge
cmpsl
sub
and
mov
mov
adc
fisubrs
adc
das
cwtl
insl
inc
cmp
dec
popf
popa
call
loopne
in
sbb
jbe
adc
fnstenv
insl
or
movsl
loope
jae
testb
dec
sbb
mov
imul
clc
psubb
pop
or
movsb
push
mov
sub
repnz
int
dec
lret
push
mov
cld
xchg
jmp
mov
jbe
jge
leave
sub
inc
jle
push
adc
addr16
js
inc
pop
das
mov
xchg
pop
ret
aaa
repz
jb
pop
sbb
adc
pop
jbe
jne
lock
xor
fcomps
lds
and
out
push
sub
adc
dec
dec
ret
xlat
je
rcr
xchg
sbb
push
scas
add
sbb
pop
inc
adc
mov
mov
mov
jmp
push
xchg
loop
mov
fnstenv
sub
mov
dec
out
loope
mov
cmp
cmc
imul
push
mov
add
pop
mov
mov
xor
aaa
sub
jle
add
test
jo
xor
or
lahf
sbb
js
xchg
mov
cmp
out
loop
ss
call
hlt
ja
iret
out
popa
pop
inc
mov
cmp
inc
sub
loope
inc
push
jae
pop
cmp
mov
sub
test
cmp
sbb
cmp
adc
int
inc
jmp
sub
fcomip
das
xchg
movsl
cs
xor
fwait
cmp
lret
xchg
shl
loope
fucomp
sbb
inc
testb
cs
out
cmp
hlt
subb
mull
rol
pop
inc
mov
push
idivb
outsb
mov
push
inc
sbb
dec
sbb
add
aaa
arpl
faddl
push
mov
in
add
es
mov
mov
add
test
add
push
cmp
test
xchg
adc
mov
data16
inc
push
in
stos
mov
pop
ds
push
rcrl
adc
cltd
aam
in
add
jae
sub
adc
or
aas
push
pop
in
dec
rcrb
inc
xchg
sub
cmc
iret
and
push
or
push
filds
addb
ja
addr16
test
test
inc
sbb
push
fcoml
enter
inc
arpl
sub
jmp
mov
incl
loop
sti
pusha
cmp
xchg
aaa
rcr
stos
jle
jb
mov
lods
ss
push
lods
out
sahf
jno
fiaddl
out
cwtl
xchg
or
sti
mov
rorl
stos
jbe
cmp
pop
sub
sub
lods
inc
sub
dec
dec
outsl
fs
inc
xchg
outsb
js
idivl
jp
mov
xlat
add
pop
aad
sub
outsb
dec
daa
test
pop
test
test
mov
orl
repnz
mov
sub
mov
mov
aaa
mov
lods
loopne
push
pop
or
sbb
in
cmp
lods
push
xor
imul
test
push
push
adc
out
nop
jno
mov
gs
and
cwtl
sub
inc
shl
es
pop
dec
daa
jmp
fidivrl
cmp
data16
in
fcomps
enter
lods
je
sub
adc
out
fstpl
daa
clc
mov
push
jno
pop
mov
pop
stc
dec
xchg
jge
pop
xor
push
jb
adc
int3
push
jecxz
imul
daa
lcall
rcrb
push
sahf
pop
std
rolb
push
mov
mov
out
jae
nop
inc
hlt
inc
and
add
mov
mov
lret
out
sub
xchg
sub
xchg
inc
test
and
clc
lock
mov
mov
mov
and
mov
push
insb
xchg
add
mov
mov
xor
mov
add
pop
scas
clc
mov
mov
mov
mov
das
xor
loope
fs
dec
pusha
or
xor
mov
arpl
cmp
add
cwtl
ret
xor
add
or
testb
aas
or
jle
lock
movsl
jge
imul
movsb
out
lds
inc
aad
stos
and
mov
enter
aad
gs
mov
lods
inc
fcompl
push
mov
in
jecxz
int
xchg
stos
xor
mov
add
mov
mov
pop
out
sahf
in
sub
std
mov
adc
mov
out
sbb
addr16
mov
adc
decl
test
imul
push
or
lods
mov
push
je
lea
aad
sub
jp
insl
repnz
push
fs
push
adc
xchg
imul
cmpsl
lret
add
xor
mov
pop
push
jnp
xor
in
enter
dec
mov
cmpsb
imul
daa
xchg
adc
scas
bound
dec
into
xchg
insl
mov
xchg
lret
fxch
fdivrs
scas
or
xchg
xchg
in
cmp
mov
cld
push
pushf
sub
inc
into
sub
fistpl
sahf
gs
dec
inc
cld
jecxz
outsl
cmc
in
sbb
mov
pushf
jge
sbb
mov
std
pop
mov
in
mov
lahf
xlat
sub
xor
gs
adc
mov
inc
or
ljmp
jecxz
xchg
push
sbbl
cmp
jnp
cmp
test
and
sub
lahf
mov
cmp
insl
icebp
daa
mov
std
dec
add
pushf
into
loopne
inc
add
outsb
stos
outsb
das
pop
push
rclb
sbb
ja
dec
jae
in
pop
push
pop
rcr
fcoml
popf
mov
leave
in
mov
call
fs
xor
in
adc
adc
scas
popa
js
fbld
mov
mov
dec
js
loop
push
adc
incb
jne
cld
lods
adc
inc
lods
cwtl
mov
push
push
jo
imull
rcr
incb
lret
out
adc
mov
xor
inc
loope
in
repnz
xchg
pop
mov
enter
or
sub
xchg
mov
scas
mov
fcoms
int3
imul
xor
add
fidivrl
mov
stos
push
mov
mov
aas
or
fidivrs
dec
test
lret
stos
out
das
mov
and
call
mov
mov
testl
inc
bound
pop
cmp
cmp
call
cmpsb
lret
add
icebp
jl
add
sbb
mov
jl
dec
out
stos
or
mov
test
int3
jnp
sbb
int
int3
js
push
dec
js
loopne
xchg
outsl
dec
jo
mov
cmp
sbb
fdivr
jbe
test
adc
lret
dec
enter
or
add
cltd
xchg
dec
sub
pop
sbb
push
add
sub
xor
add
dec
cmp
pushf
outsb
mov
mov
sbb
fldpi
pop
shl
sarl
sahf
repnz
cvttps2pi
mov
or
jmp
mov
ja
inc
or
mov
imul
cmp
inc
sahf
xchg
mov
push
cmp
push
jge
int
lock
and
movsl
aas
icebp
fs
stc
push
nop
std
roll
lea
scas
mov
call
inc
sub
mov
imul
movsl
cli
push
sub
fistl
imul
shlb
out
mov
sub
subb
sbb
sahf
ret
test
movl
decl
mulb
and
and
lds
or
jno
les
das
aas
mov
pop
hlt
pop
testl
out
inc
inc
and
adc
in
push
xchg
rolb
mov
adc
int3
cld
lea
sti
jo,pn
mov
sub
cli
inc
sub
mov
jp
test
outsl
cli
jo
mov
sub
inc
fsubrl
add
int
ds
jmp
adc
cmp
mov
push
sbb
or
lock
stos
jo
fildl
xchg
push
xchg
inc
sbb
addr16
cmp
cmp
test
jne
int3
loopne
sub
xchg
mov
mov
cmp
mov
and
mov
inc
fldcw
jp
jns
sbb
pop
in
ljmp
repnz
cmpsl
jno
cmp
xchg
mov
shrl
mov
mov
cmp
aas
mov
in
pop
mov
sahf
add
add
leave
cmp
mov
ljmp
mov
jecxz
ret
sub
and
cmpsb
daa
add
insl
adc
cmp
je
push
sub
fs
jmp
fiaddl
repz
or
js
inc
mov
std
fldl
sub
popf
mov
bound
aas
sbb
pushl
or
leave
fwait
sahf
jae
cld
loopne
adc
lock
insb
pusha
mov
fcomps
fsubl
in
in
or
add
mov
or
fisttpl
add
cmp
cmpsl
test
sbb
in
jle
sub
add
lcall
cli
pop
shr
xchg
mov
dec
inc
aas
hlt
rorl
inc
jne
aad
sbb
repz
cwtl
mov
in
ja
icebp
mov
lds
iret
js
pop
xor
aaa
mov
out
enter
movsb
mov
outsl
pop
out
mov
xchg
mov
or
test
xchg
sbb
sbbl
xor
inc
hlt
mov
bound
sbb
push
cld
and
arpl
xchg
aas
test
jp
jge
idivl
push
mov
pop
and
mov
out
sub
or
inc
or
jb
ds
popf
aaa
inc
imul
or
jg
pop
sub
arpl
add
xchg
cli
xchg
aad
lock
inc
sti
cmp
leave
xchg
daa
cmp
cmp
std
mov
ja
inc
sbb
out
fistl
xchg
and
loope
pop
ffreep
std
push
push
jnp
mov
or
or
notl
notb
inc
nop
push
inc
out
cmp
mov
mov
in
mov
jne
push
sub
jno
sub
sbb
mov
cmp
iret
and
inc
mov
cld
add
xor
cmp
sbb
mov
data16
rcrb
or
jecxz
gs
xor
ja
pop
ret
jmp
sbb
pop
test
cmp
dec
xor
lock
adc
insb
mov
sub
pop
mov
xor
leave
daa
mov
lods
pop
test
xor
loop
mov
loope
sbb
or
mov
jae
mov
ds
fninit
roll
lods
insl
mov
bound
scas
and
fsubl
inc
fdivp
xchg
mov
fwait
jmp
filds
ljmp
mov
cmp
jbe
add
in
inc
add
je
mov
popf
pushf
mov
fwait
pop
out
int3
mov
inc
sbb
cmpsb
adc
pop
fstps
push
scas
jle
int
lret
aad
mul
fs
cmp
cltd
mov
in
inc
dec
adc
push
pop
cmpsb
loope
jnp
sbb
and
fmull
sbb
jne
xchg
subl
push
out
xlat
popa
jp
cmpsb
imul
jle
cmp
and
dec
mov
dec
pop
push
fnstcw
jl
mov
orl
int3
int
adc
pop
xchg
les
inc
popa
adc
or
std
test
lods
rorb
popa
inc
xchg
out
xor
sahf
mov
fs
cmp
outsb
add
stc
pop
jo
ret
popa
add
cmpsb
and
cmp
push
xchg
stos
ret
pop
cwtl
rcll
add
fistl
lds
fwait
fwait
loope
pop
jns
add
jnp
ds
pop
xor
mov
mov
push
add
daa
jle
dec
dec
cltd
dec
jecxz
pop
jp
stos
mov
mov
dec
sub
aas
lea
inc
aad
push
mov
sbb
ja
dec
and
inc
das
test
movzwl
pmaxub
cmp
cmp
adcl
stos
lret
adc
fwait
jg
sub
lret
lods
pop
xchg
aad
ds
fadds
push
dec
xorl
lret
xor
lea
jae
scas
std
cwtl
mov
mov
inc
inc
jb
dec
imul
mov
or
adc
pusha
das
es
repz
divl
dec
fcoml
push
push
inc
and
sbb
xchg
les
lock
sti
and
jo
mov
ljmp
dec
in
pop
jo
jp
inc
fnstsw
push
adc
in
and
push
lock
adc
leave
adc
cmp
inc
clc
or
mov
xchg
in
mov
or
xchg
mov
inc
mov
jmp
pop
and
int3
xchg
lret
fsubl
ja
in
sbb
sarb
cmpsb
icebp
jecxz
xchg
xchg
imul
push
insb
stos
into
cs
adc
fst
insl
in
pop
inc
sbb
xchg
fadds
movsb
mov
cmp
enter
stc
cmp
cmp
jecxz
and
jns
sti
cltd
pop
mov
pusha
dec
jmp
loop
push
mov
push
negl
leave
add
out
out
jp
call
and
lods
adc
sti
shll
sub
xchg
cltd
fldenv
lret
imulb
jb
cmp
clc
imul
fadds
std
cmpsl
cmp
les
popf
aas
adc
jae
sahf
mov
js
cwtl
mov
sbb
cmp
fcoml
xchg
ja
xor
add
mov
movsl
cmp
cmc
lcall
pop
les
mov
lods
inc
frstor
inc
aaa
and
pop
sbb
dec
add
rorb
jae
xor
sub
adc
or
test
frstor
fisubs
xchg
in
out
nop
enter
clc
push
and
xchg
sub
inc
dec
mov
clc
cmp
cld
iret
ja
addr16
ucomiss
or
xor
mov
sub
push
lods
sahf
mov
xchg
inc
mov
jae
filds
ja
cmp
mov
ficoms
and
lods
rolb
rcrb
shrl
sbb
push
mov
hlt
lods
fldcw
pop
fs
xor
repnz
jg
movb
cltd
test
inc
push
out
sub
aaa
jo
cltd
jne
icebp
scas
mov
jp
fs
xchg
push
jp
scas
ljmp
mov
mov
xchg
xor
cmp
push
mov
sub
in
cmpsl
cmp
mov
lods
lods
inc
dec
inc
rorl
adc
mov
fisubrl
xchg
jge
jp
inc
lds
fwait
jb
repz
add
sub
jo
push
dec
mov
mov
fnstcw
push
icebp
mov
int3
xchg
push
je
in
mov
pop
xlat
pop
not
ficomps
test
lea
mov
xchg
lcall
mov
jl
mov
jecxz
dec
shl
inc
out
sarl
pop
or
xor
push
jmp
cmc
and
in
dec
inc
adc
mov
inc
cltd
jecxz
es
hlt
sahf
int
adc
and
xor
pop
push
xchg
sub
sbb
scas
jnp
cltd
pop
test
into
ret
arpl
mov
xor
mov
cmp
dec
or
inc
clc
aad
jae
imul
movsb
push
ret
popf
or
loop
cld
out
data16
xor
call
out
cmp
mov
pop
addr16
jle
xchg
and
or
ficoms
cmp
inc
xor
or
xor
ret
int3
xor
pop
lahf
stc
lea
xchg
jmp
add
jp
mov
int
movsb
adc
or
sbb
push
cmpsb
xlat
cmp
aaa
ljmp
mov
cli
xchg
dec
lea
jns
inc
xchg
outsb
xor
dec
inc
loopne
adcb
lods
ret
lcall
mov
dec
or
ljmp
cli
in
rol
xlat
push
and
repz
in
and
pop
iret
jnp
aas
dec
add
xor
iret
sub
filds
jecxz
mov
ja
ljmp
mov
and
lock
enter
jl
pusha
cwtl
negb
add
jecxz
fistpl
xor
lret
ret
jge
scas
adc
nop
and
or
jae
outsb
in
mov
pop
nop
xchg
and
mov
and
ret
xor
push
push
inc
std
sub
data16
shlb
test
mov
inc
call
mov
pop
fbstp
cmp
mov
test
jb
insb
insl
aam
xchg
cmp
neg
popf
in
adc
adc
sbb
and
adc
lock
inc
push
jae
loope
push
pop
jecxz
mov
ja
cmp
add
loope
repz
jno
mov
adc
mov
mov
aad
test
jg
arpl
cwtl
xchg
ljmp
pusha
cmp
pop
pop
push
lret
cmp
mov
inc
xor
sbb
int3
pop
cmpb
and
cmp
aad
sbb
js
adc
dec
repz
rorb
cmp
xchg
scas
aaa
fdivrl
or
dec
loop
push
aaa
sub
neg
lcall
ljmp
mov
call
jnp
mov
jnp
jo
or
sbb
jg
mov
mov
pop
dec
sub
adc
js
inc
and
sbb
ja
js
gs
scas
and
xchg
ret
shl
lods
scas
or
cli
mov
clc
shlb
pop
cmp
push
lods
out
pop
mov
mov
testl
mov
arpl
push
fcoml
mov
je
jecxz,pt
dec
push
xor
test
cmp
orl
sarb
cmpsl
mov
into
out
or
popa
arpl
rol
decl
pushl
dec
jns
mov
mov
mov
mov
dec
insb
mov
sbbb
pop
jno
shrb
pop
clc
cmp
jp
cli
push
mov
lods
mov
push
lock
and
pop
sub
adc
cmc
je
cld
outsb
jmp
pop
ret
sbb
enter
in
and
mov
inc
out
popf
mov
or
mov
fsub
aam
pop
cli
subl
call
cmp
and
xor
mov
dec
jge
mov
mov
inc
add
xorb
xchg
jg
add
mov
call
xor
fld
jle
push
pop
xor
daa
lcall
cmp
fistl
decl
ficompl
imul
repz
sbb
push
scas
addr16
loopne
xchg
arpl
in
sti
mov
jns
dec
pop
pop
mov
andl
lahf
push
popa
pop
mov
fnstsw
sbb
sub
push
xchg
lret
xor
pop
js
test
cmpb
outsb
inc
or
inc
sbb
push
jl
sbb
adc
fnstsw
insb
add
imul
scas
jg
mov
mov
nop
notl
mov
jle
mov
sahf
inc
mov
js
lock
dec
dec
add
fldl
in
bound
sub
push
xchg
loop
in
ret
in
mov
and
ljmp
aas
clc
push
jle
xor
pushf
dec
popa
fiaddl
jp
cmp
arpl
mov
push
dec
and
ds
enter
and
inc
js
push
xor
jne
fcmovne
mov
repz
dec
aas
bound
xor
mov
rcrl
jg
ficomps
aam
fcomi
jg
or
je
mov
test
pusha
mov
movsl
and
in
jge
add
outsb
aad
mov
xor
test
fstpt
inc
bound
dec
adc
mov
add
ficompl
pusha
les
lods
xchg
hlt
xlat
test
sub
in
sti
push
sbb
in
test
xor
insb
mov
xor
inc
pop
aas
std
mov
mov
cwtl
push
mov
pop
jl
fcomip
test
pusha
cli
mov
xor
add
sbb
mov
cmpsb
out
cli
lods
rorb
ret
mov
adc
mov
jo
lds
inc
sti
jg
das
push
mov
test
pushf
jns
aaa
mov
jne
clc
icebp
jno
aas
int
sub
out
sbb
sbb
stos
test
das
stc
xor
sub
outsb
pushf
xchg
ss
xor
push
and
and
xchg
sub
adc
fisttpll
ds
repz
nop
into
or
jmp
jo
or
aas
and
fwait
xlat
gs
iret
fstpl
and
popf
or
fimull
ret
test
sub
ficoms
inc
lea
pop
movsl
sbb
daa
mov
sbb
insl
push
push
push
jl
and
sub
jge
xchg
push
cmovp
ret
pushf
test
pushf
or
cmpsl
vshufps
cmp
adc
or
and
xor
sub
push
push
clc
ds
rcll
adc
jmp
in
mov
pop
mov
cmpsb
cmp
lahf
enter
aas
icebp
mov
test
aaa
and
lahf
jne
sbb
test
outsl
inc
ficoms
jp
mov
push
cmp
aad
addr16
nop
imul
std
push
pop
pop
sub
mov
sub
int
imul
fnstsw
insb
call
xor
fwait
mov
leave
mov
cmp
mov
jbe
mov
in
and
fnstsw
fsts
inc
fstpt
dec
aam
xchg
cld
push
and
pop
push
imul
pusha
push
hlt
shrl
mov
cmp
imul
sbb
out
push
ss
loopne
adc
add
std
cwtl
aas
xor
add
mov
popf
or
jno
hlt
dec
cmp
push
not
lahf
mov
or
rolb
ret
movsb
out
cmp
dec
gs
scas
in
mov
lods
out
or
jle
test
ds
fwait
push
nop
xchg
dec
xchg
and
pop
jno
idiv
jecxz
fs
dec
or
leave
push
push
cmc
jge
popf
outsb
xchg
xor
xchg
fidivs
pop
lds
xchg
mov
and
sub
mov
fcoml
adc
insb
and
xchg
dec
movsl
test
test
jge
add
cmp
loope
adcl
leave
push
out
jge
jge
loope
ficomps
push
sbb
das
and
dec
xchg
js
cmpsl
mov
sbb
or
repz
adc
pop
cld
jnp
cmp
xor
in
inc
sbb
insl
xor
repnz
push
movsl
mov
mov
dec
sub
jg
adc
jnp
push
in
ljmp
jbe
and
jno
iret
jbe
xor
shr
jns
sbb
pushf
aam
sahf
mov
push
int
insl
enter
xlat
sub
jle
pop
jnp
or
ret
mov
sbb
icebp
mov
fistpl
fadd
lahf
cltd
sub
dec
cli
add
pop
xor
cmpsl
adc
xchg
retw
xor
adc
lea
das
xchg
jo
xchg
lock
test
andb
pop
sub
ror
fdivrl
stc
mov
jge
notl
add
or
dec
gs
dec
stc
ret
addb
adc
push
scas
out
inc
leave
xchg
jle
pushf
dec
insl
mov
xor
repnz
push
imul
xchg
sbb
pop
test
sub
pop
clc
mov
push
addr16
jae
xchg
lret
or
cli
mov
xor
ret
lahf
mov
jmp
movsl
sub
adc
or
iret
into
pop
repz
or
fbld
lea
mov
jle
in
xchg
lahf
sub
add
repz
push
push
mov
inc
pop
mov
and
jmp
xchg
adc
jmp
push
pop
mov
cmp
or
push
add
roll
das
fldcw
add
pop
jnp
xchg
sbb
and
insb
dec
push
cmpsl
adc
gs
sub
into
loope
mov
call
scas
ljmp
inc
inc
jno
or
sub
push
fcomp
jnp
jns
mov
loop
add
push
pop
loopne
ss
int3
mov
loopne
push
pop
fdivs
and
cmpl
out
xor
call
test
imul
ja
push
in
mov
loope
enter
jle
adc
pushf
lods
cmp
movsl
adc
xchg
push
and
push
dec
movsb
jecxz
and
and
xchg
sti
xchg
mov
leave
jp
and
cwtl
arpl
aaa
mov
repz
mov
pop
push
sbb
adc
push
pop
daa
cmp
inc
sbb
gs
pusha
rorb
shr
xor
push
imul
sbb
mov
xchg
mov
aaa
filds
hlt
ret
mov
jecxz
roll
das
lods
xor
insb
movsl
push
cmpb
loop
mov
and
jp
les
in
lods
lock
les
adc
jae
push
cmpsl
xchg
dec
test
xchg
popf
sbb
mov
add
repz
push
pushf
xor
mov
jo
aaa
push
cmp
out
dec
enter
push
push
push
mov
es
dec
lret
mov
add
les
insl
inc
leave
shll
mov
jg
rcl
shrl
dec
pop
cs
mov
in
loopne
bound
lret
outsl
fsubs
rcll
fwait
leave
jno
das
rolb
pop
data16
les
addr16
das
xor
mov
jnp
and
mov
dec
adc
imul
cmp
or
js
mov
out
notb
daa
loop
insl
dec
bound
adc
shlb
outsl
dec
sbb
fisttps
fisubl
sahf
dec
inc
fldt
mov
sbb
incl
mov
xchg
mov
jle
fisttpl
addl
jb
data16
fadds
mov
jecxz
push
sub
and
lods
dec
ds
rcr
mov
clc
cmp
mov
cld
xchg
pop
push
mov
sbbb
fisttps
mov
push
add
jo
shll
nop
xlat
fadd
js
sbb
push
inc
rcrl
lret
add
imul
pushf
pop
in
push
xchg
hlt
pop
cltd
dec
int3
sti
jl
dec
into
rorl
int3
mov
outsl
adc
hlt
sbb
push
lds
push
cmpsb
push
xor
int
push
push
outsb
add
test
adc
dec
push
mov
adc
adc
call
clc
sub
inc
nop
push
sbb
mov
mov
outsb
xor
jg
mov
clc
cmp
and
inc
lock
sub
xchg
xor
insl
xchg
or
aam
jae
pop
scas
pop
inc
mov
ja
hlt
addb
fwait
shll
sub
push
push
cmp
pushf
out
sbb
mov
push
cmp
enter
lods
jp
shrb
inc
jns
sbbb
imul
scas
mov
fnstcw
mov
ret
and
sub
movsb
inc
jb
call
add
dec
insl
bound
scas
mov
dec
add
ljmp
outsb
pop
or
js
test
mov
lods
test
sub
cmp
es
xchg
fldenv
mov
mov
mov
mov
push
out
sub
mov
sub
test
xor
mov
mov
repnz
sti
imulb
hlt
std
iret
loopne
lock
xchg
mov
leave
and
popw
or
out
jbe
mov
push
dec
mov
lret
sbb
lahf
inc
dec
mov
add
loop
xor
out
in
ljmp
enter
and
leave
mov
scas
test
and
dec
aas
sub
daa
or
jle
and
ret
mov
cwtl
sbb
pusha
jno
jge
add
mov
rorb
sbb
or
fwait
aam
cld
mov
decl
cmp
adc
cwtl
rorl
sbb
lcall
arpl
dec
lcall
into
xchg
jmp
js
sub
mov
fbstp
imull
outsl
pop
jno
insb
xchg
stc
mov
add
fsubp
jmp
mov
mov
cld
dec
sub
icebp
insl
int3
xlat
icebp
xchg
dec
stc
jmp
xchg
jbe
aaa
ds
jg
mov
cmp
loope
sub
xchg
les
bound
dec
lds
sti
mov
sub
mov
test
sbb
mov
rolb
jns
xchg
mov
mov
jmp
and
pop
push
add
loope
es
addb
orl
int3
jg
cmp
add
enter
xor
stos
push
repnz
aam
call
arpl
mov
add
add
mov
outsb
icebp
sub
cmp
or
std
mov
adc
jno
roll
xor
mov
xor
sbb
data16
cmpsb
lret
push
dec
mov
scas
cmpsl
add
jb
push
popf
and
out
pusha
mov
pop
in
push
int3
addl
pop
repz
mov
inc
cwtl
inc
aas
popf
cmc
fstps
sub
ja
test
push
je
add
xchg
mov
nop
pop
cmpb
xlat
sub
sub
mov
ljmp
push
lods
pop
jmp
sub
pop
jl
lahf
and
clc
and
jg
inc
insb
xor
js
pop
pop
aas
sub
cmp
lods
movsl
imul
sbb
mov
jns
cmp
push
and
fs
test
fs
xor
lret
xor
inc
insl
bound
jno
inc
and
in
nop
leave
or
mov
or
inc
addb
mov
notl
pop
test
jne
pop
inc
mov
ss
cmp
jbe
cmp
xchg
icebp
fiaddl
ja
insb
and
or
jmp
frstor
sbb
and
icebp
ret
pop
jg
mov
leave
lcall
ljmp
mov
or
xor
enter
xchg
fmuls
cltd
or
cmp
insl
pop
fisubl
xchg
out
sub
jg
mov
mov
inc
es
jmp
adc
push
and
push
hlt
inc
shrb
xor
test
std
xlat
pop
mov
xchg
rorb
add
pop
ljmp
push
adc
inc
adc
in
push
push
sti
cwtl
and
repnz
aad
and
test
shll
xchg
popa
sbb
mov
movsb
inc
lret
xchg
adcl
div
and
addr16
aaa
scas
pop
mov
pavgw
adc
push
rol
dec
mov
jne
adc
aaa
movsb
sub
movsl
jl
inc
xor
lahf
orb
ja
pop
sub
outsl
cwtl
push
dec
cs
jo
lock
and
push
mov
jae
inc
repnz
dec
lret
mov
loope
les
or
adc
mov
push
push
push
cmp
test
lcall
mov
sub
cwtl
movsb
popa
std
cltd
shlb
inc
iret
test
out
add
jmp
mov
cmp
push
mov
cmp
arpl
push
test
lret
mov
mov
ja
or
inc
test
and
dec
sbb
int3
fs
or
hlt
adc
lcall
pop
xlat
insb
mov
cld
loopne
push
add
mov
pop
inc
inc
stc
jle
lret
mov
fsubr
dec
jne
daa
enter
std
fdivr
mov
xor
fildl
inc
out
and
loope
xchg
mov
xchg
inc
popa
xor
repnz
fnstenv
int
fldcw
or
xchg
adc
cmp
jecxz
loop
lahf
test
pusha
rol
daa
lea
lret
lret
out
dec
fildl
lds
nop
dec
pop
in
jmp
insl
push
and
mov
in
scas
orl
cmp
pusha
mov
sbb
outsb
cld
ret
test
test
dec
xchg
jmp
sbb
jno
std
inc
or
sbb
mov
mov
jo
mov
push
mov
in
mov
aam
jl
gs
pushf
mov
xlat
xchg
jg
add
push
lods
js
push
scas
sbb
sub
ds
out
imul
dec
push
loopne
or
movlps
lods
cmp
stos
sbb
adc
xchg
lcall
or
pslld
sahf
add
rcrl
xor
outsl
pusha
inc
mov
mov
or
inc
lods
cmc
sub
push
sbb
imul
out
orb
fistps
and
or
test
mov
stos
lods
int3
mov
and
mov
addr16
out
clc
imul
ret
rolw
int3
fdivrp
mov
xor
sub
stos
popa
iret
testb
scas
sahf
movsb
sahf
mov
out
data16
cld
mov
jae
shl
ljmp
jge
imul
pop
mov
daa
mov
xchg
pop
idivl
sub
pusha
bound
rolb
nop
js
pushf
lds
pop
add
push
jl
push
addr16
rolb
popf
cltd
inc
or
jb
xor
and
jg
mov
and
mov
pop
pop
es
out
popf
xor
xchg
out
dec
repz
dec
cltd
mov
push
cli
ret
dec
xor
loopne
and
mov
dec
fidivrl
fildll
sahf
lods
add
scas
mov
sbb
bound
int
pusha
addr16
cmp
add
fistps
mov
bnd
cmpsb
dec
mov
lret
js
and
mul
push
aad
lods
mov
sub
mov
add
dec
xor
and
jmp
clc
sub
stos
and
xor
or
mov
and
jecxz
lcall
adc
filds
or
mov
stos
bnd
imulb
pop
xchg
jne
repnz
notb
inc
or
xchg
sbb
cli
push
mov
loope
mov
stos
mov
and
mov
jecxz
vpshuflw
push
stos
cli
add
sarl
xchg
add
jge
xor
lds
inc
lret
sbb
sub
dec
cld
aaa
inc
shrl
clc
in
aaa
addr16
mov
add
adc
popf
mov
push
or
add
mov
lds
repz
jns
fwait
adc
pop
pop
xchg
div
dec
enter
push
fwait
push
sub
mov
or
add
mov
ss
shl
sbb
push
sub
xorb
repnz
ja
neg
in
movsl
mov
dec
adc
mov
pop
inc
mov
dec
les
sub
fildl
outsb
push
cmpsw
mov
mov
push
cltd
lds
adc
and
sahf
dec
jecxz
fstpt
sarl
out
push
or
push
sbb
das
ret
icebp
cwtl
loope
sub
cmp
add
jns
mov
test
and
iret
sub
fisubl
adc
imul
xchg
xchg
jmp
inc
hlt
lcall
mov
movb
les
cmpsl
enter
mov
cmpsl
fcoml
xor
addl
jne
lret
inc
imul
xchg
or
jno
sub
xor
mov
pop
mov
add
outsl
in
stos
sbb
and
pop
imul
pusha
cmp
dec
cmp
add
shrl
push
mov
out
std
lcall
shlb
test
pop
xchg
cld
adc
and
push
mov
jbe
adc
stos
dec
mov
cltd
imul
aam
dec
dec
sbb
fs
ret
cmp
imul
or
mulb
out
icebp
nop
arpl
cli
xchg
fucomi
pop
in
add
out
dec
xchg
or
and
pop
sub
loop
insl
mov
dec
sahf
je
add
inc
mov
adc
insb
jle
lahf
in
sub
lcall
roll
ljmp
mov
fidivs
inc
jnp
xor
outsl
xchg
sbb
mov
xor
mov
hlt
mov
mov
xor
dec
sbb
scas
pop
in
lahf
mov
cld
fadds
stos
mov
or
add
test
iret
xor
mov
jae
stos
repz
jmp
clc
cli
jmp
xchg
jp
ret
test
iret
je
lret
jp
jno
dec
and
mov
lret
std
xlat
push
incb
jno
sbb
dec
js
xchg
add
ds
shl
cmp
xchg
into
data16
xchg
dec
icebp
or
push
xor
in
movsl
fbld
insb
mov
dec
mov
rorl
adc
mov
popf
add
cld
sahf
or
adc
js
pop
dec
lahf
inc
xchg
dec
and
pop
or
sti
cmp
pop
insb
sahf
mov
ret
ficomps
dec
dec
or
and
sub
in
leave
sbb
push
ds
mov
dec
xchg
adc
clc
mov
mov
sbb
pop
sbb
xchg
adc
cltd
shll
int3
cmp
mov
sbb
xchg
into
adc
fs
push
adc
test
pusha
outsb
cld
outsb
cmpsb
je
out
mov
mov
cmp
add
jbe
xchg
mov
jbe
pop
add
imul
gs
mov
test
jo
insl
sub
popf
shl
or
sbb
dec
jle
or
ds
xor
test
push
sub
mov
das
mov
int3
ret
ss
mov
cwtl
xlat
adc
and
xchg
in
test
addl
cs
push
push
mov
sub
dec
xor
loope
mov
dec
sbb
inc
rcll
fldl
mov
dec
dec
rorl
fistps
jb
mov
inc
rorb
loop
in
xchg
lods
fcmovb
insl
mov
stos
fmull
push
cltd
xor
or
fnstenv
lods
aas
and
push
aaa
aam
sti
fisubs
jp
sub
mov
or
mov
sar
sbb
lock
fcmovb
adc
inc
shrl
fnstsw
xchg
sub
push
cmpsl
push
pop
rolb
out
in
je
sub
pop
shrb
mov
mov
or
jae
sub
jecxz
js
fisubrl
rolb
outsl
add
pop
out
insb
jl
in
adc
xchg
cmp
xor
xor
xchg
out
sahf
jns
pop
xor
mov
jg
pop
loop
sarb
mov
andb
addr16
xor
mov
xor
jae
push
lret
movsb
jmp
int
dec
jo
mov
addr16
xlat
bound
jmp
ret
cwtl
xor
leave
fs
lahf
jecxz
movsl
int3
sarb
sbb
lret
sbb
pop
mov
pop
add
addr16
call
stc
lds
add
testl
jo
inc
sbb
loopne
fstl
sbb
ja
subl
pusha
out
shrb
shlb
pop
xor
xchg
fdivr
mov
mov
out
lret
mov
shrb
dec
jno
aad
int
jne
cmp
lahf
push
mov
orb
jnp
hlt
mov
mov
add
nop
bound
mov
dec
or
aad
arpl
sub
lcall
imul
hlt
inc
inc
mov
jge
add
push
test
push
insl
lods
stos
push
rcll
push
and
sbb
jo
movsl
lahf
mov
dec
push
sub
mov
lock
in
cltd
out
js
dec
leave
bound
gs
lret
lds
push
mov
arpl
cmp
add
nop
dec
aad
lock
inc
cmpsb
sbb
lret
inc
pop
adcl
adc
ss
pop
push
and
loope
ret
ror
rorb
mov
sub
popfw
pushf
xor
mov
sub
in
add
outsl
es
idivb
xor
add
pop
adc
imul
xchg
mov
sbb
sbb
movsl
test
or
lds
pushf
lods
mov
push
imulb
add
test
or
and
movsb
fcomp
inc
ja
inc
iret
sbb
jl
xchg
test
pop
dec
test
cmp
xchg
mov
addr16
xchg
ss
push
aas
imul
jno
adcl
jle
lcall
push
movsl
scas
popf
jo
ja
pushf
xchg
fiaddl
sti
js
arpl
cmpl
ja
sub
add
std
jle
jp
mov
sahf
cmp
ret
out
xlat
fisttpll
nop
mov
jne
sbb
ds
pop
hlt
addb
pop
loop
jle
lret
cmp
dec
popa
roll
test
int3
aas
hlt
loopne
push
loop
es
stos
jo
fwait
fs
cs
cli
push
mov
mov
imul
push
sub
mov
lock
rolb
insb
gs
push
mov
inc
cmp
inc
sbb
ret
pop
mov
cwtl
std
bound
lcall
adc
popf
popa
push
jnp
xor
mov
lret
mov
test
mov
dec
es
xor
jmp
shlb
das
push
loop
shll
lret
jp
sbb
mov
sahf
and
xchg
xchg
adc
loope
fistpll
xchg
popf
inc
xor
jg
and
mov
scas
loope
mov
and
mov
jge
sbb
ljmp
shll
cmp
jns
mov
or
xchg
cmp
jmp
push
jp
dec
test
aad
push
fmuls
jb
cmp
dec
inc
or
mov
jno
loope
test
test
sub
cmpsl
sub
aaa
loope
fstpt
test
mov
sti
mov
push
push
fwait
push
clc
in
out
push
inc
inc
jge
ret
inc
adc
mov
sub
stos
fwait
add
cli
xchg
movsl
adc
lods
movb
gs
ja
repz
xchg
cltd
shlb
cmp
ret
inc
cli
test
stc
mov
inc
mov
aad
dec
add
test
out
mov
repz
sahf
cli
je
and
cmp
mov
dec
mov
mov
icebp
and
push
sti
dec
pop
xchg
test
mov
in
test
insb
imul
pop
jbe
leave
xchg
xchg
iret
aaa
lock
scas
outsb
cmc
dec
loop
push
jge
out
mov
aam
inc
gs
arpl
push
ret
sub
addr16
mov
mov
cmpsl
xor
mov
cltd
mov
imul
loopne
mov
lds
xchg
std
or
jg
xchg
enter
push
sub
add
adcb
test
xor
stos
dec
xor
aad
out
adc
inc
arpl
push
lds
andl
pop
loop
lea
push
mov
aaa
push
mov
xchg
jno
add
fs
push
dec
sub
inc
testb
pusha
fcmovnb
adc
ret
fadd
jne
mov
out
enter
xchg
psubw
pop
cmp
jp
inc
xor
push
and
or
mov
sub
fcmovne
xor
mov
or
repnz
test
mov
mov
lahf
pop
int
aad
cwtl
push
js
daa
inc
pop
pop
xchg
xchg
push
push
icebp
mov
cmp
jl
jmp
push
inc
jno
xchg
hlt
cmp
loope
dec
stc
pushf
sbb
fisttps
fsubrs
lcall
data16
xchg
dec
sbb
push
fsubrl
pop
int3
pop
int3
aas
dec
push
mulb
gs
adc
cmp
mov
xchg
fsubrs
and
sub
test
xchg
pop
fbld
hlt
push
cmc
or
dec
fdivr
mov
in
js
popf
sar
aad
dec
aam
scas
add
clc
jnp
mov
cmp
push
sbb
stos
scas
pop
sti
cmpsl
sub
popa
aaa
roll
insl
cmp
jb
aam
loopne
test
adc
das
fdivl
sbb
push
sti
push
inc
or
sbb
cmpsl
test
mov
daa
das
addr16
in
xor
cmc
and
pop
cmp
inc
xchg
loop
gs
mov
mov
icebp
ret
mov
rorb
and
xor
mov
and
insl
loopne
mov
sub
aas
test
into
cmc
dec
add
inc
push
adc
or
inc
push
cmc
in
fbstp
dec
dec
cld
subl
xorb
fists
jmp
cmp
mov
xchg
cs
aaa
and
in
lcall
jae
mov
mov
ds
push
mov
mov
inc
popf
pop
out
stos
loopne
enter
and
gs
iret
jl
xchg
dec
inc
fs
xlat
or
ja
push
mov
cmp
cmpsb
sub
jge
clc
inc
push
jae
cli
mov
iret
fs
inc
mov
xchg
pop
scas
out
jnp
mov
mov
outsl
adc
ds
pop
mov
scas
and
cmc
out
sbb
cmp
cmc
dec
mov
jae
mov
or
rcll
sub
imul
xchg
add
leave
push
inc
xor
aas
das
pop
xorb
and
cmp
and
cmpsl
xor
pop
stos
adc
mov
sahf
mov
sarb
mov
xor
pop
adc
call
mov
out
and
dec
inc
in
ficoml
das
inc
push
or
mov
mov
mov
fwait
xor
movsb
and
xchg
mov
in
lds
lock
or
pushf
pop
pushf
out
aaa
fwait
adcl
dec
cmpsb
dec
mov
int3
scas
and
jg
sbb
negl
push
cmp
aam
int
adc
fimull
lret
push
adc
popa
push
sbb
xchg
xor
dec
jns
cltd
sub
dec
sub
sub
pusha
or
cmp
jmp
mov
inc
stos
mov
or
pop
cmp
rcrb
and
cmp
int3
adc
sub
cmpsb
pop
push
in
dec
into
rclb
jle
rorb
pop
pushf
mov
fildll
xchg
out
cmp
rolb
mov
pusha
sub
insl
fs
adc
sarb
testb
mov
enter
hlt
sbb
jmp
cmp
xchg
popa
cmpsb
jmp
int
mov
sub
ljmp
add
test
stos
dec
mov
out
pop
pop
movsw
cmp
cmp
mov
pop
or
and
insl
dec
pop
xchg
or
scas
or
cwtl
into
jecxz
dec
and
xor
cmp
sti
test
pop
or
sbbl
mov
les
mov
outsb
jne
loop
stos
fwait
stos
push
or
or
mov
cld
outsb
pop
jecxz
push
stos
shl
add
jmp
mov
jg
push
insl
into
fiadds
leave
sar
xchg
int
lahf
arpl
push
mov
mov
jg
add
inc
data16
ror
jmp
or
jl
ds
jle
iret
pop
jo
test
pusha
xlat
repz
mov
xor
and
aad
inc
mov
repnz
imul
inc
inc
adc
dec
int3
jae
stc
xchg
xchg
dec
add
stc
rorb
pop
xchg
cmp
jl
out
xchg
dec
fsub
out
popf
fildll
add
add
jno
or
lods
movsl
push
mov
jg
jo
sbb
in
and
sbb
in
adc
jecxz
xchg
mov
pop
lret
inc
pop
rorb
add
dec
cmp
xlat
xchg
repnz
out
push
sbb
iret
cmp
test
jg
aam
mov
push
inc
cmp
push
jb
dec
mulb
push
mov
mov
lock
xchg
in
xor
test
or
mov
imul
clc
test
ss
andb
ljmp
push
mov
lock
int3
add
cmp
sbb
fdivs
adc
or
push
clc
imul
jno
fucom
js
inc
pushf
add
jns
and
mov
scas
mov
fcomps
popf
cmpsb
les
add
push
call
sahf
popa
imul
pop
mov
subb
aas
sub
jge
pop
sbb
test
aam
mov
mov
cld
hlt
xchg
xlat
repz
hlt
scas
pop
inc
pop
or
scas
outsl
mov
push
xor
clc
movsl
call
in
and
xor
cmp
xchg
lret
cmp
test
in
dec
repz
nop
daa
out
test
mov
lahf
inc
xor
push
dec
mov
jge
xlat
sbb
in
insl
imul
sti
cs
add
pusha
fsts
dec
xor
dec
jae
jo
scas
fdivrl
pop
stc
insb
es
push
mov
inc
mov
and
push
push
arpl
push
fistps
fists
sbb
push
mov
xchg
loopne
addr16
sahf
adc
out
movsl
cli
dec
push
sbb
jle
xor
pop
and
dec
mov
pop
stos
or
hlt
xor
arpl
mov
rcrb
inc
fst
andb
std
jle
or
out
cmp
xchg
daa
mov
jmp
push
push
sub
push
inc
add
dec
loope
leave
gs
and
cmpsb
or
and
icebp
mov
push
adc
jmp
sbb
jge
and
and
inc
adc
jne
ja
adc
into
ret
sub
cltd
xor
xchg
and
mov
sahf
test
ja
mov
sbb
gs
std
pop
ds
sbb
fcom
std
adc
sub
dec
cwtl
and
outsb
fcomps
fs
mov
dec
xor
ljmp
xchg
sub
xlat
mov
addr16
jle
aam
jmp
dec
sub
and
lods
mov
stos
adc
xchg
ss
or
inc
cmp
out
adc
out
mov
jo
xorb
outsb
int3
mov
aas
dec
mov
ss
xchg
jmp
pop
sbbb
lret
daa
cltd
mov
sti
lcall
push
int
push
push
addr16
scas
jle
or
nop
dec
out
bound
add
inc
push
dec
push
and
sbb
xor
jge
mov
push
icebp
sbb
shrl
cmpsl
out
dec
cmp
cwtl
rorl
mov
inc
sub
sbb
lret
ja
les
adc
test
or
sbb
and
iret
aas
mov
push
inc
stos
pop
mov
jge
mov
lcall
mov
xor
sbb
xchg
dec
cmp
pop
dec
inc
stc
adc
inc
popl
mov
fnstenv
cmpsb
std
stos
aaa
mov
push
mov
popa
mov
call
push
mov
add
push
insl
xchg
ret
dec
loope
inc
imul
jnp
xchg
cmp
ret
ss
out
jo
ds
dec
adc
xor
push
pop
cli
add
jae
in
dec
out
and
test
fbstp
cmovbe
adcb
pop
outsl
cld
aam
mov
push
or
cmp
call
xor
sub
mov
cmp
dec
pop
rcrb
push
sbb
inc
push
mov
mov
cld
xor
sub
inc
add
leave
pusha
stos
and
mov
dec
ja
aad
mov
jge
imulb
xchg
pop
xchg
push
int3
nop
push
xor
add
push
xchg
lds
xor
test
popf
outsl
cmpsl
cli
add
jp
lret
lret
pop
mov
loopne
es
in
cli
sub
das
adc
jp
xchg
mov
orl
ss
sub
or
iret
or
xor
mov
into
jnp
jecxz
sub
lahf
ja
xchg
loopne
jno
mov
fadd
mov
call
pop
fildll
mov
insb
mov
ljmp
jb
inc
cmp
sub
test
icebp
add
adc
adcb
fwait
dec
mov
mov
and
sbb
aad
std
mov
jp
loop
add
add
or
jecxz
out
and
pop
aaa
js
aam
rcr
mov
test
jge
inc
inc
out
outsb
mov
mov
mov
sub
movsb
enter
fmull
arpl
fisubrl
notl
sahf
test
out
and
inc
out
movsb
call
lret
into
or
cltd
dec
xor
out
mov
into
ret
jl
lahf
cmp
cmpsb
popf
in
push
mov
xlat
ljmp
in
xor
push
or
mov
mov
dec
xlat
mov
sub
ljmp
sub
aas
in
jb
cmpsl
dec
adc
mov
lea
mov
push
cmp
bound
gs
push
pop
imul
ret
dec
fs
xor
jbe
stos
loop
and
pop
jo
and
xchg
sbb
jne
and
xor
jp
push
insl
inc
arpl
xor
aaa
ret
mov
lahf
rolb
cmpsl
iret
js
and
sbb
hlt
mov
mov
repnz
loope
or
pop
add
dec
rorl
into
adc
push
pop
xor
stos
jno
and
cli
adc
inc
in
aas
lock
test
rcll
add
inc
fnstsw
jmp
call
cltd
push
mov
enter
loope
fwait
sub
add
fadds
lret
jbe
inc
and
testb
dec
dec
xchg
adc
mov
ficoml
xor
mov
xchg
aas
xor
stos
push
sub
cmp
dec
pusha
xor
mov
lret
jecxz
test
pop
xchg
lret
push
inc
cmp
arpl
mov
jge
inc
loop
ja
rclb
inc
ss
add
dec
fisubrs
mov
jge
cmc
cmp
arpl
mov
xchg
pop
fsub
inc
je
ret
xor
pushf
cmp
xchg
out
push
or
add
jae
cmpsl
es
jmp
cwtl
sub
push
pop
xor
xor
fmul
jl
or
cmp
fisubrs
fdiv
inc
dec
daa
ret
mov
cltd
jmp
adc
push
popf
scas
sarl
outsb
mov
sub
jge
pop
outsl
jle
andb
inc
inc
test
insl
add
sub
sub
push
out
sbb
aad
arpl
mov
xchg
and
jae
mov
decl
push
je
push
inc
or
in
in
cmp
mov
sub
aad
pop
pop
inc
sbb
pop
mov
xchg
js
clc
dec
mov
enter
lret
push
stos
xor
scas
dec
movsl
xor
dec
xchg
jge
fdivl
in
cmp
pop
pop
stos
je
in
and
sub
sbb
mov
stos
cltd
jp
popa
imul
add
mov
pop
inc
add
rcr
ret
popa
push
push
jmp
pusha
add
or
xor
sbb
insb
les
xchg
pushf
aas
clc
inc
je
sub
or
out
out
dec
mov
add
xchg
aad
lods
shll
pop
adc
lea
adc
xor
jle
jmp
imul
lret
dec
loopne
or
addl
dec
jae
inc
mov
repnz
add
jne,pt
mov
jns
int
push
add
fmuls
push
pop
inc
fiadds
lret
popl
xor
mov
repz
xchg
push
daa
cmp
mov
leave
dec
xchg
add
dec
sub
ficoms
or
aad
xchg
and
jl
pop
cmp
xchg
push
test
loop
enter
rorb
inc
mov
sub
jno
popa
adc
movsl
jle
add
testl
cld
clc
xchg
or
adc
inc
andb
rcrl
jne
test
mov
cs
sbb
push
int
test
jbe
mov
sub
mov
pop
xlat
inc
es
mov
ds
pop
loope
xor
lock
js
int3
sbb
pop
mov
loop
xchg
aam
xor
xor
mov
cwtl
push
push
and
dec
and
lods
xorl
or
and
ret
xchg
sar
xchg
sbb
pusha
lret
cld
jmp
jp
inc
inc
enter
fstl
or
sub
sub
es
fnstenv
je
clc
divl
add
inc
mov
xor
mov
adc
pushf
sbb
pop
movsb
out
cmpsb
fs
sub
aaa
pop
add
or
inc
ffreep
stos
cmpsb
cmp
cmp
inc
sbb
lds
and
dec
movsb
mov
add
sbbl
cltd
mov
gs
jns
mov
adcl
aaa
lods
iret
loope
and
add
mov
xchg
shl
popf
popf
into
cwtl
popa
lock
adc
repnz
mov
loopne
lods
pop
xchg
aas
xor
fdivrl
sbb
out
or
mov
xchg
movsl
mov
in
clc
adc
mov
fsts
icebp
add
loop
test
and
mov
inc
mov
or
and
mov
xor
dec
ss
mov
mov
xor
add
and
inc
imul
lock
psllq
add
lret
fisubrs
loop
push
or
sahf
xor
rep
in
cli
aam
ficomps
jo
test
hlt
cwtl
aad
movsb
xchg
inc
test
inc
or
dec
dec
pushf
outsl
dec
sarl
stos
xchg
clc
mov
mov
rolb
push
shrl
jp
in
and
pop
pusha
add
add
cmp
stos
xlat
cld
and
sub
push
fimuls
movb
lret
xor
out
pushf
and
xchg
lcall
dec
mov
outsl
xchg
or
lea
sub
out
mov
jg
xchg
xchg
push
lahf
sbbl
cmp
movsb
out
cmp
sbb
xorb
jne
movzbl
test
ja
push
mov
mov
jbe
mov
jnp
xor
shld
dec
sbb
push
pushf
mov
cld
jns
push
and
sbb
dec
comiss
cmpsl
icebp
cltd
add
fwait
test
inc
shlb
lret
jmp
dec
test
cwtl
or
jne
cmp
or
push
cmp
xchg
push
in
dec
mov
pop
int3
mov
jl
and
les
mov
test
aad
int
push
sahf
iret
pushf
mov
cmp
jge
mov
add
fldenv
lahf
ja
cmp
aas
enter
cmp
mov
sbb
mov
dec
ds
out
clc
jb
add
and
sub
loop
pop
xor
ficoms
je
sbb
jle
fnstsw
fs
arpl
add
and
ret
or
dec
mov
inc
mov
rcll
outsb
xor
add
pop
inc
cmp
into
sub
shrd
aas
fnstsw
enter
movl
pusha
cmpxchg
mov
mov
sbb
data16
or
loopne
push
jns
jecxz
stc
loop
xchg
jp
xchg
sbb
fdiv
sbb
daa
test
add
add
test
in
lcall
cmp
bound
inc
adc
cmpsb
mov
not
or
fiadds
js
hlt
mov
adc
pushf
lcall
repnz
add
lock
dec
and
add
sub
or
repnz
dec
xor
sbbl
loop
sbb
xchg
sbb
roll
repz
js
test
das
adc
mov
adc
pop
pop
repz
sarl
pop
ja
push
add
mov
leave
pop
inc
lcall
sar
mov
aas
cs
mov
inc
inc
outsl
lahf
or
fiaddl
out
inc
rol
push
inc
icebp
pusha
ss
outsb
cmpsb
jge
xor
jg
std
xor
popf
mov
neg
pop
dec
outsl
xchg
xor
sub
cmp
sub
repz
iret
in
inc
bound
push
mov
xchg
mov
cli
push
or
xor
or
xchg
lret
sbb
xor
addb
adc
mov
sub
cmpsl
testb
mov
fsubs
rcrl
pop
out
sbb
bnd
fcoml
gs
pusha
sub
loope
test
push
jmp
out
dec
pushl
or
pop
push
sbb
test
push
jno
in
std
bnd
mov
jnp
les
je
dec
mov
out
sti
xor
pop
std
sar
xchg
movsb
mov
cmp
insb
jg
pop
sbb
jecxz
pop
ret
int3
jnp
xchg
jmp
addr16
fcompl
pop
sbbb
cmp
jae
aad
adc
jno
jge
popf
pushf
lret
cmp
cmp
sub
inc
push
mov
scas
mov
popf
ja
push
mov
lret
arpl
and
mov
mov
sbb
dec
lods
jae
lret
or
push
arpl
fs
mov
lods
out
push
clc
mov
mov
cwtl
int3
push
test
xchg
add
aam
imul
daa
push
jnp
mov
iret
scas
in
push
fcoms
sub
popf
in
aam
aaa
mov
cmp
cmpsb
xchg
mov
sbb
dec
and
mov
sbb
mov
pop
and
and
adc
popf
shlb
popf
fwait
mov
out
pop
mov
and
jno
jne
lock
orl
xchg
dec
lds
ud0
push
sbb
out
inc
pop
scas
and
icebp
dec
ret
jns
cmp
in
rorb
push
mov
jge
pushf
mov
pop
test
sbb
jns
push
mov
lea
jl
jnp
add
sbbb
arpl
sarb
lea
lcall
dec
and
cli
xchg
sti
imul
pop
mov
in
idivl
js
subb
push
xor
jae
adc
jmp
in
sbb
fldt
sbb
xlat
mov
es
push
test
cld
jmp
mov
mov
and
inc
mov
cmp
mov
mov
rol
gs
std
lea
add
mov
lret
aam
mov
sti
jmp
loopne
pop
bound
imul
arpl
xchg
sub
sbb
jle
cmp
cmpsb
iret
or
pop
xchg
jno
dec
cltd
or
lea
jl
jbe
ja
ds
add
mov
sub
and
fwait
pop
enter
or
jae
test
push
lret
jge
jg
daa
xchg
push
jae
inc
xor
test
xor
mov
push
rcl
pop
shrl
xor
aas
fdivrl
loop
popf
sbb
ret
xchg
test
inc
imul
hlt
or
sbb
xchg
sbb
mov
dec
outsl
mov
jecxz
xchg
push
outsb
pop
fimuls
add
int
and
les
adc
sbb
dec
and
ljmp
jmp
adc
aas
xor
push
popf
jo
scas
js
sbb
pop
pushf
xchg
jl
addb
test
push
aam
mov
mov
push
mov
sbb
fs
or
stos
shll
scas
dec
lds
xor
out
inc
scas
pushf
repnz
div
push
cli
es
cmpsl
push
pop
jae
mov
scas
shlb
adc
imul
repz
loope
fs
mov
push
and
inc
mov
lds
mov
sahf
sti
not
or
inc
push
xor
insl
fnstenv
stos
adcb
xchg
inc
cmp
pop
push
add
mov
movb
sub
adc
call
cltd
mov
push
jnp
imul
shlb
inc
stos
mov
subb
inc
popa
lahf
enter
jns
mov
adc
or
movlps
ret
jo
outsl
sub
or
and
sbb
cmp
pop
pusha
mov
aaa
fstpt
mov
sbb
sub
lds
fmull
jns
dec
hlt
pop
enter
stos
mov
and
dec
repnz
adc
lcall
sub
mov
fisubrs
leave
sbb
repnz
outsb
dec
inc
jmp
es
in
pop
outsb
jnp
or
nop
insb
mov
cmp
lods
ret
add
add
push
fcmovnb
loopne
sbb
mov
mov
sub
sub
fists
or
sahf
inc
repnz
or
cmp
and
adc
push
or
and
pop
imul
push
pop
sbb
pop
cmpsl
add
mov
fnstsw
sbb
popa
and
iret
loop
or
mov
cs
shrl
mov
loope
cmpb
popl
mov
mov
jns
adc
add
fistpl
fcoml
pop
aam
scas
stos
add
outsb
shl
mov
mov
clc
hlt
mov
push
push
into
adc
cmp
lahf
xchg
test
pop
test
mov
add
ret
or
pushf
lds
pop
mov
adc
cmp
dec
cmp
rol
aam
xor
and
xor
push
pushf
push
test
sar
mov
sbb
adc
int
fmul
pusha
decb
pop
imulb
jle
ss
movsl
dec
in
xor
clc
lret
out
push
lahf
pop
shlb
ljmp
cld
aas
lret
cmpsb
in
iret
sbb
int3
cli
repnz
adc
push
je
sbb
dec
jle
lcall
repnz
pop
inc
jle
into
add
in
in
lds
sar
mov
test
mov
add
in
inc
sbb
sti
mov
lea
je
lret
outsl
scas
andl
ds
inc
outsl
insl
inc
sbb
in
fisttpl
shlb
icebp
mov
movsb
imull
jne
icebp
outsl
into
and
bnd
and
sbb
xor
mov
add
das
inc
loop
jmp
in
ret
movsl
push
icebp
stos
daa
sub
push
add
stc
inc
popa
pop
inc
out
or
test
scas
cmc
imul
dec
mov
jno
cmp
dec
jnp
outsb
mov
push
les
push
mov
push
pop
mov
or
mov
jo
and
jb
imul
orb
jns
mov
mov
cltd
aas
iret
dec
push
and
inc
add
cltd
sub
sub
dec
xchg
cli
sbb
std
fisubs
lahf
sahf
and
push
jno
stos
ljmp
dec
repz
mov
lret
shll
xor
lret
jp
cmp
pop
dec
inc
pop
push
inc
xor
xor
xor
icebp
dec
cmpsl
psrlw
sbb
and
inc
cmc
inc
push
sahf
sub
mov
cltd
xlat
inc
lret
pop
movl
xchg
lods
incb
roll
mov
out
jb
jg
xchg
mov
jnp
inc
xor
adcb
mov
loope
xchg
enter
mov
stc
call
push
test
xabort
in
dec
lret
adc
xchg
cmp
insl
pushf
dec
in
out
mov
jle
ja
in
dec
loope
push
or
xchg
lea
in
loop
ret
sahf
or
jg
je
insb
pushf
jp
dec
inc
mov
out
pushf
sbb
jne
stos
push
mov
pop
outsb
mov
pop
rorb
into
mov
sub
cs
jge
inc
aad
push
lcall
out
or
in
push
mov
iret
add
mov
and
push
mov
mov
xchg
mov
add
sbb
push
cmp
lock
lods
xchg
ja
add
mov
add
shrl
pop
rclb
adc
imul
and
outsb
sti
xchg
jbe
jnp
scas
mov
jns
pop
arpl
sti
addb
in
test
xor
ljmp
pusha
imul
inc
mov
int3
hlt
int3
pop
movl
pop
das
stos
sti
mov
cmp
outsl
cmc
mov
xchg
jno
js
call
jnp
add
icebp
push
ror
push
xchg
jns,pn
jo
dec
pop
adc
pop
xlat
fcoms
xchg
lret
add
xchg
inc
xor
mov
imul
adc
push
xchg
repz
push
mov
fs
mov
mov
out
inc
lods
not
loopne
imul
xchg
in
dec
mov
cli
cld
adc
jmp
dec
sub
adc
mov
jns
mov
push
sub
dec
clc
push
mov
fdivrl
mov
dec
xor
jl
sbb
push
add
or
cmpsl
outsb
scas
mov
popa
add
iret
repz
ljmp
shlb
cmp
imul
ficompl
shl
stos
cmpsb
shlb
mov
sbb
sub
pusha
data16
pop
nop
lods
xor
pop
add
push
mov
lcall
mov
movsl
movsb
into
push
clc
xor
arpl
lcall
ss
cwtl
inc
inc
mov
fcoml
dec
mov
push
gs
xlat
xchg
out
mov
fstpl
mov
mov
lret
ret
xor
cmpsl
inc
notb
divps
pop
jmp
jmp
adc
je
lahf
test
inc
or
mov
push
and
sbb
mov
jae
pop
cmc
ret
dec
mov
scas
mov
pushf
dec
add
pop
mov
inc
and
mov
bound
jns
cmpsl
out
pop
stos
into
shlb
ss
movsl
add
dec
dec
lods
or
push
sbbl
and
movsb
push
fadds
jmp
mov
cltd
mov
inc
int
roll
adc
push
and
mov
mov
pop
stos
ret
lods
pop
cli
sub
mov
mov
mov
fisubs
icebp
cltd
xchg
bound
rcll
cltd
decb
jne
sub
push
or
mov
out
scas
xor
cmpl
push
cmp
sbb
mov
add
inc
insb
testb
test
or
lods
jb
scas
adc
dec
in
lock
push
mov
and
mov
push
cmp
jecxz
pop
xchg
pop
xchg
out
mov
fwait
ja
adc
and
repz
int3
test
or
or
psubsb
call
icebp
dec
pop
repz
inc
jge
push
push
dec
decl
rcrb
subb
or
ret
or
xchg
dec
mov
jp
fmull
loop
or
lods
popf
cmpsb
pop
ret
jle
xor
aas
jp
push
pop
sub
sub
and
xor
sbb
jle
pop
mov
in
fisttps
lahf
and
cmpsb
fcmovnu
xchg
lcall
xchg
mov
daa
jecxz
adc
xor
add
jl
es
mov
insb
mov
sbb
test
pop
cmp
xor
push
mov
xor
jl
cmp
push
stos
lcall
stc
inc
or
in
jne,pn
pusha
push
in
cmp
push
adc
add
mov
out
aad
xchg
inc
mov
jb
bound
ret
int
xor
leave
rclb
push
jb
pushf
mov
mov
repz
xchg
mov
and
pop
in
jg
ja
lods
or
push
jns
sbb
dec
into
mulb
inc
dec
scas
stos
jl
aaa
sbb
cli
cmp
add
push
pop
test
adc
mov
scas
sbb
or
loop
dec
jmp
inc
ljmp
xor
out
jb
pop
adc
jp
lret
dec
cs
mov
icebp
mov
addr16
jp
call
jns
pop
pop
rolb
das
cmp
lcall
mov
push
sbb
stos
ret
pop
test
sub
adc
test
and
js
or
xchg
push
adc
dec
xchg
pop
je
or
loop
push
pop
popf
mov
cmc
mov
pop
push
and
ja
lret
dec
cmpsb
iret
push
dec
dec
cld
sti
dec
mov
nop
lock
pop
jns
jo
pop
xchg
scas
and
subb
pop
movsl
outsb
xor
jns
push
in
pop
cmp
lods
and
cmp
std
ret
lods
mov
jmp
dec
lods
cmc
pop
sbb
sub
test
mov
iret
jne
in
ja
fsts
jl
mov
mov
xchg
cs
mov
and
lret
xchg
push
test
jg
mov
repnz
xchg
add
out
fimull
hlt
inc
sahf
insl
or
aad
in
ja
sub
mov
cmp
in
daa
int
movsb
jno
ja
loopne
push
xor
dec
jl
arpl
xchg
mov
fs
popf
mov
xor
aaa
inc
xchg
loopne
jne
mov
stc
andl
mov
jecxz
ljmp
mov
repz
jle
dec
dec
fsub
or
or
mov
xchg
xchg
adc
aaa
sub
popa
imul
and
pop
adc
push
ret
je
adc
call
call
mov
inc
lods
aaa
imul
xchg
or
fnstcw
mov
pop
xor
cld
mov
and
lods
mov
jb
xchg
jb
sbb
cwtl
rcl
or
cmp
xorb
nop
inc
fdivl
cmp
daa
iret
pop
mov
pop
scas
scas
sub
stc
add
clc
dec
pop
xchg
lds
xchg
mov
mov
inc
add
jnp,pn
jmp
cmpsb
cmpsb
mov
fwait
imul
mov
sbb
lods
sarb
dec
jae
or
adc
mov
repz
iret
adc
fs
and
pop
and
xchg
and
pop
mov
into
mov
pop
stos
mov
push
scas
test
lret
inc
jnp
lret
or
adc
jbe
sub
xor
sub
je
stos
jnp
push
adc
int3
add
push
inc
xchg
xchg
push
sub
ja
int3
push
jg
insl
out
add
pop
popa
mov
ljmp
rorl
push
mov
push
lret
test
dec
imul
pop
into
push
xchg
fnop
mov
sti
xchg
and
jae
push
sti
leave
pop
loopne
and
dec
int3
cmp
mov
repnz
pop
out
pop
cmp
js
and
adc
jecxz
and
in
loope
pop
daa
mov
cmpsl
popf
pushf
cwtl
leave
mov
fs
and
test
add
icebp
xor
das
das
out
ss
sub
fcompl
mov
je
push
pop
call
push
adc
dec
dec
das
mov
push
dec
call
mov
in
pop
arpl
shl
push
in
mov
iret
xchg
pushf
pop
shll
pushf
add
out
icebp
push
adc
or
or
dec
and
push
rol
aas
mov
mov
fbstp
in
jl
cmp
mov
loopne
fwait
mov
ss
test
daa
data16
test
xor
push
sub
sbb
jo
or
data16
inc
push
hlt
scas
cmp
inc
aas
adc
and
imul
loope
add
lods
movl
xchg
cvtpi2ps
pop
lret
mov
cltd
rdmsr
popl
stc
sbb
xchg
cmp
test
and
rorl
cli
or
fcompl
pop
jb,pn
orb
fdivrs
sbb
mov
jbe
les
dec
push
clc
pop
mov
repnz
movsb
xor
rcrb
imull
sbb
jb
cmp
ds
push
das
push
js
jbe
mov
adc
dec
mov
push
jg
pop
mov
mov
push
out
cmp
add
loop
push
mov
push
cmp
fwait
push
adc
or
sbb
xor
mov
imul
or
idivl
in
in
arpl
or
jmp
pop
or
lahf
or
arpl
stos
fldln2
lods
stos
add
push
cmc
imul
dec
jl,pn
jp
inc
jcxz
xchg
cmc
push
fwait
push
stos
jb
inc
adc
scas
lahf
cmp
mov
xor
xchg
adc
or
xor
push
scas
pop
test
sub
loopne
cmp
mulb
cwtl
hlt
scas
clc
or
xor
jl,pt
sti
mov
cmc
fldenv
add
or
inc
mov
jae
cmp
es
pop
push
pop
data16
pop
xchg
push
out
rcrl
es
sub
scas
out
adc
lret
adc
and
add
cwtl
enter
jg
repz
les
in
or
popa
aad
cmp
and
repnz
pop
int
jge
pop
push
xchg
stos
xor
call
clc
jbe
inc
add
cmp
inc
ljmp
mov
addr16
fs
jmp
xchg
dec
pop
cmp
insl
pop
clc
test
jmp
and
les
int3
frndint
aad
cli
jmp
and
push
sub
lods
pushfw
xchg
in
or
jle
push
outsb
sub
mov
lret
sub
xchg
push
dec
iret
and
sub
jecxz
pop
shrb
out
sub
aam
push
mov
xor
fwait
xchg
cs
jl
mov
not
das
mov
movsl
sbb
sahf
cmp
add
imul
push
int3
mov
mov
fisubrs
cmp
xor
in
adc
xchg
push
mov
loopne
lock
bound
adc
add
movsl
xchg
dec
popa
fisubl
in
inc
lea
mov
jmp
push
xchg
je
mov
cs
ljmp
inc
fbstp
cs
dec
ret
roll
add
aaa
push
add
dec
shrl
decb
lcall
push
enter
cmp
sbb
xlat
std
and
ss
jge
movb
aaa
out
int
inc
mov
repnz
sbb
pop
push
pop
std
cli
rclb
bound
scas
sahf
push
jae
stos
cwtl
stos
in
insb
push
push
sti
mov
sub
flds
fcoml
jne
sbb
lahf
popa
sbb
sub
in
mov
lods
push
or
cmp
popa
mov
dec
pop
or
mov
cld
jb
mov
out
stos
insl
sub
shr
gs
or
pop
pop
pop
mov
push
std
sub
int
push
mov
fwait
arpl
cmpsb
mov
pop
push
imul
jmp
repz
mov
pusha
mov
fmul
push
imul
call
dec
jmp
sub
out
mov
add
fxch
mov
in
ja
cld
iret
jno
jecxz
pop
cmp
or
ja
dec
mov
add
mov
dec
pop
mov
aam
cmc
pop
push
movsl
stc
push
cmp
fisttps
iret
xor
xchg
loop
push
jg
call
pop
in
inc
fistps
mull
mov
or
rolb
sti
lret
mov
mov
xchg
mov
pop
cli
inc
add
rorl
cld
popa
cmp
hlt
cmpsb
decb
mov
cmpsl
jl
imul
adc
aam
rolb
cli
push
les
jns
mov
push
push
enter
sti
push
in
inc
xor
enter
lods
std
xchg
mov
add
and
out
xchg
pop
push
out
xchg
cmpsl
push
in
inc
shl
xor
hlt
std
cli
js
cmc
enter
aam
add
and
pop
xor
sub
in
aas
xor
fcmovb
aam
adc
ret
fstpl
test
mov
mov
sti
jb
dec
mov
fcmovne
mov
hlt
push
pop
jecxz
std
add
lods
jns,pt
push
test
xor
lds
jecxz
in
lcall
fwait
sar
iret
test
cmp
stos
push
rorb
pop
mov
call
es
fidivrs
mov
pop
dec
aaa
or
add
idivb
pop
xor
xorb
je
inc
icebp
jge
das
callw
dec
rcrb
test
push
nop
rolb
mov
sbb
ret
imulb
cwtl
loop
mov
daa
std
sub
mov
cli
xchg
pop
mov
jmp
insl
xor
xor
es
pop
std
jmp
leave
les
lea
sbb
icebp
push
jecxz
push
mov
decb
cmp
xor
push
and
loop
mov
call
push
cwtl
or
mulb
jns
xlat
pop
lahf
mov
daa
dec
lret
pop
pop
fisttps
mov
xchg
push
arpl
mov
or
lods
fadd
and
or
adc
pop
push
popa
pmuludq
xchg
jge
adcl
ret
lret
jo
jg
aaa
cwtl
repz
xchg
sbb
stos
mov
call
rorl
xor
jo
addr16
or
test
insl
js
cmp
jecxz
xor
jnp
ss
inc
push
fwait
mov
les
mov
call
jne
pop
imul
push
jle
in
mov
cmp
pop
in
xchg
out
popa
push
das
jmp
rcrl
insl
sub
sbb
or
adc
dec
inc
cmp
xor
call
adc
aas
adc
outsb
mul
add
push
pop
scas
jbe
stc
mov
sub
adc
mov
lret
out
push
cmpsb
push
gs
dec
imul
sub
sahf
mov
inc
mov
inc
out
lods
std
or
push
mov
dec
xlat
mov
mov
call
and
les
aaa
mov
cmc
sub
popf
fwait
test
pop
cmp
jno
out
xor
fwait
jno
or
xor
mov
out
add
sub
and
mov
fdivrl
shll
adc
and
ret
xchg
xchg
fwait
les
daa
inc
loope
add
ja
scas
and
loop
jecxz
add
fs
or
sahf
shr
cli
pop
mov
daa
je
add
iret
adc
icebp
aad
ja
cmp
jb
push
enter
jmp
fadds
sub
daa
pop
mov
out
dec
pop
sti
and
stos
mov
add
mov
sub
push
dec
jle
aad
leave
int3
nop
push
pop
je
stos
lods
or
fsubrp
xchg
push
push
xchg
cmc
ret
push
inc
lret
call
mov
shll
inc
fidivl
pop
out
out
outsb
jb
out
fmuls
xchg
sub
loopne
xlat
test
mov
scas
adc
rcll
scas
and
imul
loop
mov
inc
xor
call
push
test
and
cmp
ss
sub
mov
gs
push
mov
out
rcl
sub
dec
scas
push
sub
dec
push
inc
leave
shll
mov
adc
ja
addr16
cmc
outsb
shlb
int
mov
in
jp
and
out
fcmovnbe
aam
out
push
adc
repnz
mov
mov
mov
out
dec
mov
movsl
xorb
sub
sbb
das
daa
mov
int3
push
pop
pushl
bound
mov
addr16
sbb
in
push
aad
dec
popf
fildll
popa
gs
ror
int
repnz
or
popa
push
xor
cwtl
andl
xchg
mov
inc
and
nop
ret
int
jecxz
jo
lea
mov
mov
dec
adcl
hlt
fcomps
dec
loop
imul
xchg
dec
jbe
outsb
lods
stos
mov
loope
and
inc
jmp
xchg
add
shlb
ss
mov
mov
pop
mov
shlb
mov
movsb
pop
jecxz
or
sub
dec
ret
lods
sbb
std
jnp
sti
mov
xchg
int3
mov
test
loope
jnp
shll
int3
testl
sub
jl
outsb
mov
and
dec
test
dec
aaa
in
int3
movsb
and
dec
dec
cli
push
xor
cmc
xchg
and
mov
mov
and
mov
imul
into
sti
dec
pop
imul
xchg
test
sbb
inc
loop
xlat
leave
mov
loope
and
ds
sti
lahf
xor
andl
lock
push
add
bound
testb
xchg
xor
cmp
test
gs
sbb
mov
cmpl
into
daa
inc
push
push
inc
aad
ds
jg
xchg
push
lret
lahf
notl
mov
repz
mov
fwait
sbbb
test
dec
stos
imul
iret
jno
nop
hlt
mov
das
cmp
mov
stos
in
and
mov
mov
in
jae
into
jp
or
add
jne
popf
out
mov
add
lods
sbb
in
rorb
insb
xchg
inc
std
std
mov
mov
push
inc
adc
nop
push
test
dec
dec
pop
repnz
xor
mov
stos
jnp
lcall
adc
cmpsb
dec
aaa
in
jle
loopne
push
push
inc
add
mov
xor
cmpsl
xor
lods
pop
insl
xchg
jp
add
pop
pusha
loop
mov
aad
xchg
addr16
outsb
and
mov
es
cmp
shl
dec
mov
shll
les
ftst
xchg
je
in
push
xchg
leave
adc
mov
subl
or
xor
setae
sahf
mov
sub
push
sti
addr16
fsubrp
js
mov
out
xlat
sub
mov
pop
enter
repz
sahf
sbb
xchg
cmp
fnstenv
scas
ds
xchg
clc
mov
mov
jg
lock
sub
aam
fs
lcall
and
out
dec
stos
adc
adc
mov
inc
sub
and
hlt
cmp
mov
push
mov
stc
outsl
test
or
or
and
xchg
hlt
and
push
imul
shl
dec
arpl
sar
imul
xor
mov
orl
jl
neg
sbb
sub
dec
lods
sub
mov
xchg
pop
jae
lods
ja
pop
into
repnz
scas
fistpl
testl
sbb
xor
aad
fistpl
push
lods
mov
inc
xor
pop
ret
decb
xchg
fisubs
dec
mov
call
out
jp
or
mov
add
and
mov
mov
lock
dec
xchg
test
inc
fwait
leave
jo
mov
fucomip
lahf
sahf
cmpl
popf
bound
mov
call
into
sub
adc
inc
xor
jne
roll
cltd
mov
add
bound
mov
out
jns
mov
movsb
mov
movq
jno
fsubrl
leave
push
mov
in
mov
loopne
outsl
iret
dec
xchg
clc
into
adc
movsl
and
sti
stos
bound
mov
sub
xchg
lods
mov
cltd
add
mov
jg
int3
test
mov
pop
adc
int3
fsubr
cld
xchg
mov
mov
or
movl
cmp
mov
mov
rol
dec
int3
popa
and
dec
mov
mov
sub
inc
pop
xor
push
in
mov
arpl
inc
ss
loope
jg
dec
dec
idivb
aas
xor
in
mov
lock
sbb
stos
jbe
test
stos
lods
out
add
fisubrl
fistpll
and
hlt
fiadds
out
pop
add
scas
outsl
fwait
jecxz
fimull
lret
jne
push
in
das
cmp
shll
fidivs
mov
ja
push
xlat
xchg
xorb
mov
test
inc
xchg
mov
cmpsb
jmp
dec
mul
stos
dec
jmp
adc
pop
inc
pop
fidivrl
pop
aas
dec
xchg
lcall
call
mov
jmp
inc
data16
gs
arpl
jne
ret
or
mov
arpl
mov
stc
and
add
scas
cli
pop
xlat
sahf
test
xchg
dec
mov
test
out
movsl
lahf
xor
or
repnz
xor
aas
cmp
adc
sub
jbe
pop
push
inc
pop
insb
js
andb
xorl
popa
pop
lea
xor
aam
pop
push
lods
xchg
movsl
jmp
nop
dec
jbe
enter
loop
mov
xchg
xchg
pop
ds
dec
fucomip
push
loope
pop
mov
sti
fstpl
in
loopne
mov
adc
xor
fcoms
mov
cmp
rcrl
and
in
mov
incb
ret
in
push
flds
neg
fstpt
inc
mov
adc
int
or
fwait
cmc
mov
and
inc
jae
sbb
jge
sbb
out
dec
imul
fiaddl
add
or
push
inc
fsts
stos
push
xchg
jbe
push
or
fucom
arpl
enter
push
lea
xlat
dec
mov
adc
or
mov
ja
popf
push
iret
push
push
xor
dec
cmp
ja
mov
xor
push
aaa
hlt
icebp
sarl
cs
xor
mov
out
push
out
out
cmp
outsl
inc
nop
iret
js
push
add
push
mov
dec
lock
mov
fadd
dec
stos
and
insb
dec
adc
jno
mov
lcall
adc
js
cmpsb
xor
vpaddd
pop
jno
pop
je
loope
mov
arpl
aaa
test
dec
out
fcmove
movsb
iret
sbbb
loope
outsb
dec
push
xor
insl
dec
mov
aaa
fisttps
aam
mov
int
adc
out
ds
sbb
std
mov
outsl
fiadds
sub
lret
pop
sbb
xchg
test
push
int
arpl
xorl
dec
out
mov
xchg
into
mov
sbb
mov
adcb
call
sbb
add
sahf
sarb
ret
ret
ficomps
or
sbb
sar
pop
fadds
or
cmpsb
data16
popa
fcompl
inc
jnp
lret
push
sbb
xchg
sar
sub
mov
mov
loopne
test
int
sub
jmp
xchg
movsb
jp
stc
mov
and
xchg
jmp
sar
xchg
xchg
sar
insb
fidivs
push
ret
jbe
movsb
inc
xchg
gs
loopne
cmpsb
jbe
jae
inc
mov
vcvttsd2si
add
dec
adc
pop
popa
or
flds
ss
insl
mov
data16
jle
test
mov
sub
call
lods
pop
push
jne
cltd
je
and
inc
xor
mov
jmp
push
mov
pop
inc
or
jo
xchg
inc
mov
mov
dec
loope
test
icebp
push
lea
sbb
push
cs
sbb
lahf
jmp
and
es
mov
imul
sub
push
fmuls
in
mov
or
add
mov
insl
scas
mov
pusha
or
dec
xchg
stos
ficoml
mov
xchg
rcrl
fxch
stos
jmp
inc
sbb
fidivrs
fs
pusha
aas
jge
adc
fsubs
iret
fisttps
xor
imul
lods
jbe
adc
cmp
or
hlt
aas
fisttpl
xor
mov
call
lahf
test
or
pop
mov
je
ja
jle
outsb
xchg
sub
call
in
por
icebp
ret
mov
adc
jo
jecxz
push
xchg
in
out
push
in
mov
add
imul
cld
sub
test
add
jo
dec
into
xchg
nop
iret
scas
jl
xchg
loopne
mov
and
int
push
or
fildll
xor
pop
dec
and
mov
mov
pop
sbb
cmp
xchg
rcrl
repnz
xor
mov
xchg
jo
mov
add
cmp
add
call
test
or
lea
aam
aad
pop
test
jecxz
out
sahf
fldenv
and
push
dec
fstpl
mov
in
rclb
adc
jmpw
daa
mov
out
cmpsb
arpl
adc
pop
lret
adc
int3
pop
movsb
mov
repz
pop
or
adc
pop
ja
jbe
arpl
cmp
sub
xlat
xchg
addr16
xchg
fdivrl
cwtl
add
pop
xchg
outsl
filds
push
jbe
es
lcall
inc
mov
test
out
inc
sbb
adc
or
mov
popa
sti
cmpsl
daa
and
xchg
std
std
out
int3
ss
mov
mov
xchg
cld
jns
jge
dec
clc
ds
nop
cmp
jb
push
loopne
mov
enter
push
dec
add
jne
pop
mov
cwtl
add
int3
dec
adc
out
and
sahf
mov
or
jg
rcrb
mov
sbb
out
mov
xchg
sub
lea
inc
mov
push
pop
xor
rorl
test
push
and
int3
aam
scas
add
add
scas
je
push
inc
jae
push
clc
mov
sub
xorl
rcll
ja
mov
mov
or
xor
xchg
sub
or
shll
ret
ss
push
xlat
arpl
mov
cmpsl
jl
pop
mov
add
mov
cld
jecxz
lods
jg
popa
mov
dec
xorb
adc
pop
ret
inc
jo
cmp
mov
lret
mov
push
cmpsb
dec
das
mov
out
mov
jmp
leave
call
stos
mov
mov
jl
fstps
insb
cmp
gs
cwtl
shrb
scas
xor
ret
sbb
cmpsl
mov
leavew
or
pop
gs
sbb
outsl
pushf
lock
int
sbb
xor
pop
sarb
add
adc
cmp
test
cmp
das
pop
dec
mov
pop
sbb
pop
scas
sub
xchg
es
add
sub
insl
cmpsl
push
add
int3
int3
jno
stos
pop
mov
fisubrl
rolb
sti
pop
pop
push
sub
ds
jle
mov
insl
addr16
int3
std
add
and
fildl
inc
lods
cmp
cmp
pop
imul
pushf
insl
xlat
jecxz
cwtl
lds
popf
call
pusha
aam
sub
fwait
rclb
mov
jp
jae
ret
fwait
ret
sub
dec
xchg
jle
stos
loope
imul
push
adc
imul
add
loop
aam
aam
icebp
or
imul
dec
jecxz
je
add
out
mov
cld
push
mov
adc
int
sub
arpl
pushf
fisttpll
cli
jg
movsb
cmp
popf
lcall
out
lds
xchg
pop
repz
nop
ret
sbb
out
push
pop
pushf
cmp
out
pop
data16
add
cs
dec
fisttps
jae
mov
mov
dec
cmp
ret
fwait
repz
sub
or
jne
cwtl
rcrl
ja
aaa
mov
lods
fwait
sub
xchg
fimuls
mov
jl
cmpsb
pop
das
cld
aam
push
lcall
iret
iret
cmp
inc
push
push
ret
shr
add
and
push
insb
lods
jmp
enter
stos
out
sahf
movsb
test
fwait
test
es
pop
add
push
push
in
imul
cwtl
ret
or
repnz
outsl
add
jns
rorb
ret
ror
repnz
inc
clc
test
pop
ss
lds
mov
rolb
push
adc
add
fisubl
es
jo
insl
mov
or
in
punpcklbw
call
loopne
int3
loop
cwtl
sbb
aas
test
popf
sbb
daa
mov
xlat
sub
pop
cmp
xor
and
sub
xchg
jmp
ds
lcall
inc
fldt
shl
fstp
movsb
gs
or
xor
sti
sub
lahf
aas
sbb
xlat
cmp
addr16
push
and
or
enter
mov
sarl
shl
or
xlat
out
jg
daa
mov
cmp
push
js
pop
push
cltd
sbb
lods
outsb
das
or
lcall
or
clc
shl
inc
mov
xlat
mov
in
sbb
das
fs
negb
sbbl
push
popf
sub
pushf
inc
inc
cmc
and
mov
addb
cmc
mov
ja
add
pusha
add
sar
repz
push
xor
stos
insl
add
insb
mov
inc
repz
in
push
dec
cmpsl
adc
xchg
loope
ljmp
mov
ja
jp
scas
jle
test
dec
or
pop
and
add
or
or
lods
xchg
shrl
sbb
sub
dec
xchg
cli
mov
shrl
add
scas
fmull
xchg
mov
fs
mov
cmp
sbb
test
and
pop
sub
movsl
dec
push
sub
mov
repz
push
ja
scas
mov
mov
rcll
imul
dec
xor
pop
js
aas
mov
loope
mov
xor
fs
inc
hlt
cld
cmp
add
xchg
icebp
int3
shll
repz
pop
clc
sahf
sub
inc
popa
or
sub
fidivrs
jb
pop
out
xor
dec
aam
pop
negb
mov
mov
mov
dec
scas
xchg
popa
xorl
test
fnstenv
sti
cmp
fistpll
cmp
arpl
or
push
fldt
mov
pusha
aad
adc
or
pop
push
imul
cmpb
inc
ret
ja
repnz
int
imul
fistps
jae
out
dec
mov
mov
xchg
sbb
push
or
push
cmpsl
les
or
jge
xor
add
rclb
xchg
and
aaa
pop
cs
mov
mov
loop
pushf
add
pushl
inc
adc
mov
cwtl
outsl
divb
xchg
repz
jmp
jns
inc
in
popa
cld
jl
jbe
xorl
jbe
sub
xchg
arpl
and
aas
dec
cmpsb
aas
add
pop
pop
jl
dec
adc
adc
fistl
popf
mov
sbb
sub
jecxz
sbb
fisubrs
xchg
aaa
ja
ret
scas
das
add
add
pop
loopne
enter
stc
inc
mov
stos
aas
or
cmp
add
pop
adc
add
jecxz
lea
or
dec
add
dec
and
mov
pop
xchg
and
pop
adc
jbe
sar
loopne
call
mov
jg
push
and
jge
repz
imul
bound
pop
xchg
sbb
push
popa
rcrw
xor
cmp
add
and
std
hlt
or
movsb
push
jb
adc
cltd
jmp
sarl
negb
iret
aaa
outsb
fimull
notl
rcrb
dec
cmpsl
adc
add
mov
fs
or
sarb
dec
jmp
fs
neg
inc
dec
pop
pop
push
mov
int
add
jb
daa
in
addb
sbb
and
cmpsb
cmp
adc
outsl
mov
cmp
and
js
lea
mov
leave
mov
and
lret
adc
and
pop
jno
stc
leave
add
sbb
rolb
xchg
adc
leave
or
orb
dec
mov
mov
loopne
mov
cmp
sub
and
dec
and
in
fnstenv
std
outsl
add
cmp
jmp
or
leave
andb
out
jbe
sbb
dec
test
push
jae
aaa
decl
jne
movsb
cmpsl
sbb
shrb
into
jno
push
cmp
or
adc
mov
adc
rclb
ds
es
mov
jno
or
test
mov
arpl
push
adc
dec
or
fwait
jae
add
movsb
jg
mov
jbe
add
clc
outsb
push
sbb
mov
fcmovne
lea
mov
in
adc
les
shll
mov
dec
hlt
in
pusha
and
jae
pop
pop
cmpsl
insb
testl
cmp
lods
arpl
loop
push
add
repnz
mov
jbe
iretw
in
aas
push
mov
push
pusha
iret
jae
push
negl
popa
mov
fildl
xchg
lret
les
push
cmp
sub
or
xor
mov
mov
nop
mov
aad
or
mov
outsb
gs
mov
xchg
and
mov
bound
or
in
pop
shl
xchg
add
add
addb
shl
sbb
loop
mov
pop
inc
ljmp
pop
mov
xchg
adcb
shlb
out
imul
lahf
les
mov
pop
fisttpll
fstpl
dec
mov
jbe
push
mov
in
gs
inc
js
divl
insb
ret
push
mov
es
cltd
sbb
add
pushf
sarb
cmpsl
imul
shll
inc
js
cld
into
pop
push
mov
push
push
es
sbb
inc
js
adc
adc
scas
mov
inc
add
jge
cld
cmp
insb
negl
sbb
mov
movsb
lea
rorl
nop
mov
adc
outsl
shll
lcall
sahf
dec
lcall
sbb
jns
scas
psllq
sahf
dec
push
movsb
cmp
out
sbb
aad
rolb
mov
jmp
mov
std
cs
cmpsb
xlat
adc
test
jl
mov
in
jp
and
and
push
outsl
pop
inc
lds
in
xor
insb
push
ss
shr
adc
jmp
jns
mov
fidivs
test
mov
push
cld
cmpl
mov
xchg
dec
dec
xor
inc
jne
faddl
inc
xor
pop
dec
int
xor
test
fsts
or
pusha
xchg
popf
addr16
stc
jbe
pop
dec
jo
icebp
cmp
mov
repz
icebp
into
mov
mov
nop
dec
movsb
in
lods
dec
sbb
out
stos
mov
sub
mov
test
scas
inc
pushl
dec
mov
pminsw
push
loopne
sub
pop
xchg
sub
lcall
call
call
das
call
mov
les
enter
gs
dec
mov
xor
inc
push
inc
fstpt
stos
lock
jb
cld
pop
sbb
insl
fcoms
push
push
cs
scas
xchg
outsl
add
lret
pop
out
pushf
je
stos
sti
ss
mov
inc
sub
sbbl
pushw
pushf
xor
movsl
lds
ds
decb
mov
insl
das
stos
jl
mov
repnz
ret
scas
out
mov
xor
sbb
outsl
sub
lahf
mov
sbb
sarb
mov
les
arpl
notb
not
mov
fdiv
rcll
and
dec
ds
pop
xchg
xchg
push
and
subb
int3
xchg
mov
jmp
in
in
cmp
int3
ds
cmp
push
and
push
sbbb
pop
inc
jns
lock
push
fwait
mov
mov
test
adc
cmp
leave
push
sub
fbld
jno
rol
out
fstl
test
xor
adc
cmp
jns
pop
inc
gs
cmp
int
std
jb
mov
pop
shll
mov
dec
in
add
ds
mov
data16
lock
cs
dec
pop
pop
mov
fiaddl
add
enter
push
call
push
mov
xor
ja
cld
insl
jbe
andps
xor
and
stos
or
sub
loop
icebp
push
xor
roll
mov
jge
cmc
mov
mov
and
push
push
mov
shrb
push
push
mov
mov
pushf
push
mov
xorl
popf
stos
pushf
repnz
add
inc
sbb
int3
mov
les
add
or
push
mov
jb
jo
lcall
xchg
xor
fwait
cmp
adc
sbb
fimull
addl
pop
jae
aas
aas
xorl
add
xchg
or
in
loop
fcomps
jne
push
test
adcb
in
dec
sub
cwtl
and
movsb
mov
add
std
jns
sbb
fdiv
imul
mov
lds
fiaddl
loop
mov
insl
add
jl
mov
loop
or
clc
sbb
outsl
mov
fcmove
inc
in
jne
pop
pop
or
insl
icebp
out
mov
call
inc
add
adc
adc
lret
shll
test
daa
leave
pop
incb
dec
into
adc
lea
fs
es
sbb
nop
and
loop
lds
imul
pop
cmp
rcr
and
sub
out
orb
cmp
flds
sbb
test
lock
mov
lds
push
add
push
scas
out
movsl
sbb
out
and
adc
mov
jno,pt
mov
dec
pop
scas
test
je
add
and
or
or
icebp
and
loop
jae
cwtl
push
rorb
mov
dec
arpl
lock
xor
push
and
push
daa
xchg
rcl
mov
and
adc
push
xor
sbb
xchg
adc
and
pop
negl
sub
cmp
std
push
sbb
xchg
lret
jb
push
mov
and
jecxz
cli
inc
clc
inc
mov
jp
mov
and
inc
push
xor
and
ss
cmpsb
fmull
lock
imul
into
jecxz
add
ja
mov
sbb
pop
mov
inc
pop
test
xchg
mov
std
ss
cmp
fcoml
push
jae
mov
mov
and
cmpl
inc
jns
sub
mov
lahf
cmpsl
popa
and
xchg
aad
das
xchg
xchg
ret
aaa
mov
inc
pop
mov
cwtl
push
fcomps
jmp
mov
xor
mov
mov
not
or
mov
inc
icebp
loope
push
lods
int3
mov
sahf
lcall
adc
cld
xchg
test
cmp
sbb
and
jno
pop
cltd
pop
addb
mov
xchg
shlb
jecxz
fiaddl
cs
xchg
pushf
cmp
arpl
ret
lds
or
insl
sub
or
loop
or
and
fcoml
lahf
scas
out
sbb
es
fsubl
call
and
insl
data16
nop
jns
pop
aas
add
shl
fwait
and
fstpt
inc
int
mov
iret
xor
fidivrs
push
shll
mov
inc
rorb
lret
mov
xor
mov
inc
mov
popa
mov
jle
repnz
dec
mov
mov
cmp
in
popa
xchg
jmp
ljmp
mov
insl
inc
mov
cmp
or
cld
test
je
stc
mov
in
ljmp
or
test
nop
jl
aad
ficomps
psubb
fisttpl
jbe
or
in
ret
jbe
jno
pop
fldenv
and
sub
inc
imul
ja
cwtl
dec
xor
xchg
imul
xor
ret
jge
jne
push
cmp
mov
xor
movsb
sbb
pop
jne
stos
mov
jl
outsl
adcl
sub
arpl
inc
pushf
xor
mov
xchg
cltd
insl
cld
icebp
cmpsb
adc
lcall
pop
lcall
subl
aad
cltd
xchg
daa
leave
and
aaa
shrl
xorl
hlt
jne
sub
xor
test
and
orl
dec
xchg
cmp
insb
shr
stos
xlat
in
jno
dec
stc
dec
jmp
add
adc
mov
and
and
add
sahf
loop
insb
adc
pushf
hlt
arpl
mov
push
add
mov
mov
loopne
js
pop
or
pop
mov
lahf
stc
or
leave
or
sub
imul
add
mov
pop
push
jbe
mov
xor
xchg
cmp
jmp
mul
mov
aas
sub
jbe
inc
adc
fdivrs
int
es
enter
dec
mov
in
cmp
jns
adc
push
push
rolb
movl
push
jge
loopne
repnz
test
push
pop
sub
out
jns
popf
ret
int3
add
fdivp
aad
sti
cltd
cli
jmp
movsl
xchg
mov
push
daa
or
call
cmp
stc
dec
insb
icebp
hlt
and
mov
mov
mov
pop
iret
and
or
inc
das
sub
or
nop
hlt
xchg
add
cmp
and
xchg
adc
decb
jne
lcall
mov
sbb
das
cli
dec
jae
mov
cmp
bound
add
enter
pushf
das
push
inc
enter
stc
js
and
ficoms
rorb
xorl
mov
in
iret
pop
xchg
add
mov
and
jge
pusha
push
ljmp
inc
addb
cmpsb
mov
sbb
pop
and
or
popf
insl
shr
jp
xchg
sub
lret
push
neg
pop
ret
sti
mov
stos
mov
sub
sbb
pop
mov
cmpsl
pop
adc
xor
sub
ror
dec
inc
mov
push
xor
in
pop
fstpl
jp
cld
inc
ret
mov
mov
hlt
mov
int3
sbb
mov
or
adc
sahf
or
jge
shl
loopne
roll
adcl
jecxz
or
movsl
mov
jnp
cmpsl
xlat
aas
or
pop
cld
lahf
sub
cmp
dec
shll
mov
push
push
xor
adc
jb
inc
jns
fbstp
test
aas
loopne
sbb
cmc
inc
fs
fmul
mov
push
test
push
imul
xchg
pop
movsl
mov
sbb
xchg
jmp
cmp
ds
mov
pop
cmc
sub
add
das
cmpsb
sbb
dec
iret
call
jecxz
gs
std
movsl
mov
pop
test
push
jbe
fldenv
out
sbb
sti
sub
dec
pop
les
dec
bound
imul
in
sbb
aam
jo
push
pop
insb
je
and
sbb
and
mov
add
or
subb
sbb
mov
bound
mov
and
or
jnp
aam
pop
push
pop
sub
pusha
mov
movsl
mov
pusha
jp
xchg
or
pop
sub
xor
int
lods
ror
pop
repnz
inc
add
fildll
xor
outsb
mov
mov
jne
sbb
fdiv
adc
jp
in
aad
push
jle
lret
xchg
or
push
or
fnstcw
gs
pop
stc
and
scas
jae
cltd
push
clc
and
outsl
je
into
pop
add
imul
add
mov
sbb
addb
in
pop
mov
in
or
sbbb
jnp
pop
out
sub
fdivs
jecxz
aas
lock
xchg
pop
dec
aaa
call
xchg
adc
xlat
adc
mov
data16
ja
repz
hlt
data16
pushf
shll
in
test
loop
xchg
cmc
add
in
add
jmp
push
dec
jp
aaa
mov
mov
ds
div
scas
out
cmpsl
cltd
popf
xlat
movsl
loop
jno
push
and
lock
cmp
adc
and
jbe
std
out
jl
push
leave
outsl
cltd
mov
inc
in
or
pop
sub
or
jle
pop
xchg
jp
shlb
xlat
jmp
ja
les
into
sbb
push
lret
popf
mov
sub
lea
cmp
les
jb
loope
ret
ds
stc
xchg
orl
sbb
add
mov
adc
mov
adc
dec
xor
gs
sbbl
push
repz
into
hlt
or
xor
test
inc
idivl
push
pop
lods
mov
or
inc
or
lods
lea
cmp
mov
or
xchg
in
das
inc
les
xchg
bound
xchg
pusha
popl
dec
xchg
cmp
out
fcoml
nop
pop
test
inc
jge
in
sub
movsb
push
sub
dec
push
adc
xor
mov
jo
push
mov
adc
pop
cmc
roll
mov
mov
inc
push
movsb
jg
jnp
pop
dec
lds
xor
std
shlb
dec
dec
adc
xor
adc
jg
mov
jmp
inc
push
cmp
push
int
dec
call
add
xor
and
inc
fisubs
lea
mov
cmpsl
jns
insb
mov
negl
lahf
mov
repnz
xchg
repnz
shrb
movsl
push
pop
sbb
add
push
aas
mov
movsb
or
mov
leave
sbb
mov
mov
lock
mov
clc
jge
mov
mov
sub
pop
aam
test
mov
cmp
sti
pop
in
push
fstps
xchg
cli
loopne
ljmp
push
push
add
dec
int3
das
lcall
push
mov
inc
jnp
adc
mov
in
jmp
cmp
and
xor
js,pn
sbb
sbb
testb
cmpb
adc
mov
fists
test
xchg
sub
inc
xchg
icebp
mov
add
fbstp
dec
jno
or
xchg
push
mov
aad
rcrl
jno
fnsave
inc
dec
inc
sub
ja
sbb
lahf
mov
jb
xchg
xor
rcrl
in
xchg
sbb
fsub
pushf
cltd
dec
insl
lcall
int3
pop
mov
jnp
in
fimull
call
out
call
push
scas
fdivrs
cltd
add
jne
cmp
mov
adc
dec
xchg
jmp
adc
imul
xchg
sbb
add
jbe
dec
popa
gs
lock
into
loop
add
fsubs
sbbb
ljmp
jecxz
mov
sbb
push
or
add
popa
add
push
int3
push
cwtl
punpcklbw
jnp
in
pop
popf
fsubrs
pop
add
mov
mov
mov
adc
mov
jp
mov
xchg
xchg
stos
cltd
and
movsb
xchg
call
aad
xor
lahf
repz
inc
add
roll
xchg
sub
inc
pop
jg
mov
inc
push
xchg
mov
mov
loop
mov
mov
arpl
fwait
cmp
adc
cmpsl
jg
popa
xchg
cltd
les
jecxz
xor
repz
stos
jno
fidivrl
test
sarl
add
xchg
daa
cmp
bound
cmpsb
in
sbb
cmp
xchg
mov
pop
test
ljmp
loope
loopne
push
stc
cs
mov
outsl
inc
or
mov
daa
cld
adc
je
cli
add
js
jmp
mov
dec
dec
cmp
push
cld
mov
cld
ljmp
insb
std
sbb
mov
ljmp
jae
push
addr16
aam
and
out
sbb
lea
test
mov
fldl
in
sub
pop
cmpsl
xor
popf
pop
dec
rcrb
push
fildll
add
sbb
inc
jecxz
adc
pusha
sub
out
incb
pop
or
sbb
pop
mov
cmp
bound
add
repz
faddl
divl
daa
addl
sub
inc
sti
js
jp
jl
or
lret
inc
popa
xchg
fcos
pop
dec
and
cs
sbb
or
stc
xchg
nop
or
mov
xchg
pop
imul
cmp
and
pop
xor
inc
aaa
xor
mov
cmp
in
cmpsl
repz
adc
sbbl
or
andl
aaa
or
arpl
gs
and
popf
push
test
fwait
fwait
cltd
xchg
adc
daa
lods
icebp
ss
add
hlt
ja
jnp
jns
shl
lods
mov
jp
xor
gs
mov
pop
sbb
and
mov
in
mov
push
rclb
addb
add
lock
dec
add
das
insl
adc
scas
push
pop
push
testl
adc
dec
out
int
pop
or
push
inc
stc
repnz
dec
mov
in
or
movsb
sbb
pop
mov
push
cmp
or
into
movsl
imul
inc
mov
xchg
dec
data16
add
push
fs
jae
lahf
test
inc
repnz
add
pusha
movsl
xchg
mov
cmpsl
int
mov
mov
push
dec
xlat
into
mov
aaa
adc
fsubs
mov
outsb
xor
incb
xor
movups
jmp
mov
jecxz
mov
dec
sbb
les
mov
push
add
push
mov
aas
out
shr
in
mov
es
js
cmpsb
into
mov
xorl
mov
jle
push
mov
mov
clc
inc
lods
mov
sarb
in
cwtl
mov
jo
sar
cmp
call
imulb
popa
aas
sbb
outsl
outsl
mov
dec
cli
in
shl
mov
cltd
inc
xor
lahf
dec
mov
adc
cmp
mov
adc
insl
enter
dec
fdivp
xchg
andb
rcrl
sarl
mov
hlt
sbbb
add
stos
out
mov
pushf
and
cmp
scas
xchg
and
push
push
movsb
clc
xchg
and
popf
ss
stos
xchg
cmp
outsb
mov
mov
adc
xchg
cmpsl
imul
repz
push
jns
sub
popa
iret
pop
nop
adc
aas
pop
into
mov
inc
mov
xchg
iret
inc
or
push
into
dec
cld
jmp
jp
aam
xor
jp
popa
push
and
mov
jmp
push
push
insb
sbb
popa
xchg
or
mov
cli
xor
xor
pop
xchg
je
mov
sbb
es
test
rolb
nop
and
lods
dec
jp
sbb
popf
lea
mov
and
sub
xor
pop
pop
shll
hlt
and
rcrb
mov
mov
pop
xchg
mov
lea
cmp
sbb
mov
es
inc
cmp
sub
inc
int
out
cmp
cmpsb
pop
or
and
inc
push
test
cmp
pop
pusha
add
pop
aad
adc
sahf
or
rclb
add
push
roll
jae
icebp
push
fists
push
or
pop
adc
inc
sti
or
inc
inc
or
add
popf
mov
dec
test
std
dec
cli
jbe
stos
mov
push
mov
mov
shll
mov
cmp
dec
pop
divb
or
mov
cmp
push
sub
xchg
push
pop
push
mov
mov
sahf
inc
aad
stc
in
add
cmc
fidivrl
push
rolb
cli
add
mov
pop
push
sbb
xchg
and
movsb
les
pusha
mov
push
pop
daa
aaa
inc
mov
adc
inc
ret
negl
push
daa
shl
push
mov
ja
addl
ret
cmp
adc
sub
push
lods
cltd
inc
inc
xor
add
xchg
inc
mov
xchg
insl
das
mov
xor
test
mov
jmp
imul
pusha
popf
popf
pop
shrl
aaa
lcall
jmp
arpl
jmp
inc
mov
inc
lds
sar
mov
aam
jne
aam
dec
mov
mov
jmp
test
cmc
inc
iret
mov
jecxz
sub
inc
outsb
and
test
mov
leave
xlat
jnp
mov
dec
mov
mov
jbe
or
inc
sub
inc
or
inc
and
mov
in
xor
sti
inc
and
iret
lret
jecxz
outsb
daa
out
out
adc
mov
out
or
xchg
dec
inc
movsb
sbb
loop
mov
cmc
push
add
mov
and
scas
mov
test
test
mull
loop
adc
aaa
mov
and
pop
adc
mov
mov
pop
or
je
push
mov
lret
js
dec
mov
cmp
push
jge
cld
das
push
std
mov
cmp
out
loopne
aaa
flds
jns
xchg
push
inc
or
sbb
sti
xchg
adc
dec
shll
loop
fmull
or
iret
dec
pop
sbb
mov
mov
inc
mov
aaa
sub
dec
outsl
pop
and
adc
jb
pop
jp
lret
ja
push
xchg
dec
mov
std
repnz
dec
mov
or
mov
mov
out
sub
adc
fnstcw
popf
pop
cld
nop
xchg
popf
add
jbe
int
push
dec
push
cwtl
jae
dec
mov
push
loopne
jge
dec
push
fnsave
ror
das
pop
sahf
lcall
test
dec
xchg
mov
pop
mov
add
rcll
pop
dec
dec
push
in
out
cld
add
in
add
pop
cmp
or
movsl
clc
sub
out
adc
inc
scas
call
out
loopne
jmp
inc
mov
xor
arpl
sbb
jns
mov
sbb
inc
insl
or
jbe
inc
sbb
push
enter
push
and
cld
stos
stc
cmp
cmp
dec
icebp
cmpsl
xchg
fdivr
pop
ja
je
push
sub
jno
cmp
lcall
sbb
insl
das
push
xchg
rorb
cmc
jbe
test
mov
cmc
rcll
xlat
inc
sbb
sbb
mov
sbb
mov
int
popa
cmp
mov
insl
ds
jecxz
pusha
inc
adc
jecxz
inc
xor
mov
sbb
sbb
mov
dec
cmp
repnz
sbb
sarl
pushf
jl
add
lock
push
lcall
test
aam
stc
pop
outsb
xchg
xchg
mov
push
pusha
imul
es
sbb
ret
jle
fisttps
adc
sahf
rcl
mov
jne
pop
pop
aam
mov
js
pop
push
cmc
js
mov
xchg
lret
insl
sbb
push
xlat
jae
les
and
rcll
mov
dec
lahf
jb
rcrl
push
jp
mov
lret
xor
push
and
sub
xchg
fcoml
outsb
cmc
aas
dec
cmc
push
push
inc
mov
lahf
lret
push
lods
lds
inc
lock
mov
pop
mov
jb
mov
sbb
adc
or
sbb
in
inc
movsb
bound
sahf
dec
jecxz
mov
add
iret
xchg
test
call
add
leave
jae
jno
in
or
testl
aaa
jne
test
sbbb
rclb
test
mov
addr16
insl
imul
inc
mov
leave
out
jo
pusha
or
dec
dec
add
jge
mov
movsb
pop
dec
push
ss
or
iret
cmpsb
cmp
daa
inc
sarb
cmc
lea
jbe
sbb
stos
insb
pusha
movsb
mov
outsb
fwait
xchg
cli
inc
pop
jno
sbb
xchg
dec
mov
adc
rol
lahf
ret
mov
in
or
push
inc
outsb
xchg
in
sbb
cltd
push
imul
add
inc
and
cmp
jb
js
jl
adc
aas
pusha
bound
sti
cwtl
scas
mov
xchg
aas
adc
loop
add
mov
push
repz
je
xchg
xor
mov
add
sbb
sbb
pop
mov
jns
mov
mov
cwtl
push
pop
pop
into
ret
sbb
rorl
rorb
inc
call
xchg
add
mov
add
fiadds
rolb
out
cmp
pushf
daa
pop
ss
subl
loop
sti
mov
dec
std
cmp
out
in
rcll
mov
mov
dec
hlt
sub
sub
sbb
and
push
sbb
mov
cs
in
loope
mov
imul
mov
lret
cmp
and
adc
xchg
sbb
xchg
mov
pop
shr
fwait
imul
inc
fsubrp
dec
imul
movsb
sbb
arpl
cli
inc
outsb
pop
lcall
lock
push
mov
dec
jo
fwait
sbbb
or
test
push
ss
enter
add
pop
dec
imulb
inc
imul
xchg
inc
jle
mov
mov
pop
xor
leave
add
bound
xchg
pushf
cmpsb
xchg
ret
jl
pop
adc
cmc
mov
dec
xor
pop
pushf
nop
rclb
aaa
test
xchg
outsl
mov
cmp
jge
popa
scas
rolb
mov
sahf
and
fildll
xchg
movsl
mov
push
sbb
push
rcrb
int
sahf
mov
xor
mov
aad
sahf
in
mov
fistl
xchg
push
mov
mov
sub
fst
and
dec
insb
mov
mov
add
pushf
loopne
jae
cli
rclb
mov
and
loopne,pt
loop
fcomps
pop
xchg
add
xchg
mov
stos
cmpsb
cmpsb
lods
fmul
add
mov
dec
sbb
dec
and
in
add
jne
sahf
iret
es
xor
jecxz
inc
inc
or
or
xchg
arpl
sarb
mov
mov
mov
sbb
lret
div
icebp
fdivrp
jo
fcoms
cmpsb
leave
out
mov
or
popa
movsl
push
lret
pop
jl
mov
ret
into
xor
mov
xor
lods
icebp
sbb
or
inc
adc
arpl
and
xor
xchg
test
lods
andb
rorl
xchg
push
dec
test
fxch
dec
leave
in
in
pop
jg
push
sbb
enter
jg
and
arpl
fdivrs
test
shrl
es
rolb
movsb
test
sbb
push
out
xchg
mov
sti
movsb
xor
inc
cmpb
adc
mov
pop
loopne
test
xchg
out
or
lcall
mov
inc
add
in
loop
sahf
xchg
imul
mov
iret
cmp
insl
and
jns
xor
enter
jae
jno
pop
aad
mov
cwtl
mov
adc
test
fcom
pop
pop
dec
fdivrl
imul
repnz
push
mov
outsb
xor
popa
daa
out
add
add
call
mov
pop
and
ret
adc
sub
lret
pushf
std
loope
sbbb
mov
cli
xor
push
and
popf
inc
and
push
leave
mov
mov
xchg
mov
xor
add
dec
test
mov
stos
cltd
cmpsb
mov
jg
lret
xchg
or
cmp
jecxz
mov
loope
call
xchg
pop
lods
or
dec
mov
leave
jmp
adc
je
jnp
add
call
mov
in
sub
mov
xchg
gs
adc
inc
outsb
ljmp
fisttpll
test
jp
int
rclb
call
shll
mov
pop
loope
fwait
movsl
jecxz
mov
iret
cmc
negl
pop
nop
add
fistl
daa
sub
mov
mov
movsl
pop
and
repnz
lret
xor
cmp
add
add
idiv
mov
cmp
and
pop
push
mov
mov
movsb
test
enter
add
cmp
and
pop
add
faddl
test
adc
cmp
cmp
push
insl
out
lods
and
inc
jge
inc
pop
cmp
into
and
scas
lds
lret
rorl
cmpsl
call
sbb
pop
jl
jae
mov
push
xlat
scas
jecxz
lea
addr16
inc
sub
and
fsubs
jl
pop
cmp
aam
xchg
lcall
or
dec
pusha
addr16
lret
mov
mov
sti
xor
mov
jmp
pop
scas
mov
mov
mov
xchg
cmp
cmpsl
push
lds
test
adc
jecxz
mov
and
fnstsw
mov
adc
movsl
lahf
add
cmp
sbb
push
cmp
daa
loope
rcrl
imul
jbe
mov
mov
pop
lret
dec
mov
icebp
xor
adc
mov
scas
lea
stos
aaa
les
sub
push
mov
mov
repnz
das
mov
pusha
dec
xchg
add
jg
adc
bound
or
das
xchg
jns
sarb
cli
jmp
mov
push
addb
pusha
push
pushf
xchg
sub
adc
push
enter
lret
addr16
pop
sbb
mov
test
jle
and
push
or
jg
and
push
xor
insb
mov
imul
mov
repz
loopne
sbb
mov
test
xor
pushf
and
pop
mov
xchg
test
add
xchg
addr16
xchg
xchg
testl
in
pusha
xchg
dec
aad
dec
or
js
jae
push
aad
push
test
ljmp
mov
out
daa
jg
daa
cmpsb
int
mov
out
dec
push
out
int3
jns
pop
and
je
sbb
adcb
std
fwait
punpckldq
push
push
loopne
push
scas
adc
inc
dec
push
fldt
fidivs
les
or
sub
test
push
movsb
cli
mov
push
arpl
imul
pop
mov
push
movb
inc
jp
pushf
mov
stos
mov
pop
sub
sbb
cld
jne
popf
cmp
mov
mov
hlt
mov
aam
sub
ja
fimuls
sub
scas
mov
jle
push
jecxz
and
scas
xor
sbb
pop
insl
xor
adc
je
dec
in
repz
enter
mov
jo
mov
jo
cwtl
adc
inc
dec
out
fwait
push
ljmp
add
imul
mov
pop
in
dec
es
cmovp
mov
push
sub
add
inc
mov
dec
bound
lahf
fmull
out
lods
loope
lret
mov
cmp
out
add
sti
or
mov
aam
push
or
fildl
inc
negl
jnp
cltd
pushf
push
clc
test
mov
jg
outsb
mov
dec
repz
cltd
xchg
xchg
sub
pop
imul
adc
or
pushl
outsl
adc
mov
insb
mov
xor
cmpsb
inc
jle
mov
and
test
and
xchg
ret
xor
adc
lods
pop
jno
sti
int
xchg
or
cmp
mov
in
pop
sahf
mov
sub
int
mov
shlb
aaa
data16
in
mov
mov
cld
test
jne
sbb
jbe
adc
xchg
loop
xchg
jecxz
add
jae
mov
fldcw
getsec
fistps
mov
add
jl
mov
dec
je
cs
loope
aam
push
notl
push
stc
dec
pop
hlt
inc
add
sbb
add
inc
movsl
xchg
cmpsb
lahf
xor
into
orl
sub
out
mov
gs
in
gs
fsubrl
xor
iret
fcoms
sbb
cmp
imul
in
stos
push
jns
pop
nop
hlt
insb
add
pop
cmpsb
jae
push
les
insl
mov
arpl
and
push
pop
iret
icebp
fmull
or
clc
jmp
jle
cmpsb
jns
mov
in
xchg
mov
add
roll
pop
pop
jns
cmp
xor
adc
dec
add
jmp
insb
jne
add
dec
pop
out
nop
ljmp
xor
push
mov
push
mov
jnp
lock
fildll
outsl
push
push
outsb
mov
sub
out
ss
pop
jnp
orl
into
fnsave
scas
xor
or
int
lods
jne
inc
push
pop
lea
cmp
ret
jne
or
push
xchg
je
xchg
push
ret
mov
loope
sub
mov
lret
es
mov
add
cmp
arpl
inc
loop
test
fucomip
add
jmp
push
jae
sub
inc
orb
sub
test
jmp
icebp
iret
leave
cmp
es
xchg
mov
call
ds
repz
jnp
push
ret
js
mov
subl
dec
divb
test
movsl
cmp
mov
cmc
and
sar
movsl
mov
push
and
add
mov
jb
shll
cmp
or
dec
insl
adc
mov
nop
mov
push
movsl
cmovne
lcall
adc
loope
lret
push
shr
and
ret
rcrl
jbe
dec
dec
in
jl
mov
xchg
or
cmp
push
repz
jg
repz
icebp
rorb
ja
or
jge
dec
in
pop
xchg
getsec
or
push
xchg
jmp
cmp
pushf
scas
mov
and
xor
mov
mov
cld
lods
shrb
ja
rcrl
sub
cmpsb
in
fadd
loopne
fiadds
cltd
mov
stc
dec
inc
rcl
loopne
ljmp
test
xor
lcall
roll
stos
or
push
aam
xchg
dec
test
inc
es
sbb
inc
pushf
pushf
mov
mov
xchg
push
mov
dec
cmp
sbb
push
xor
rorl
sbb
pop
data16
std
arpl
rorb
notl
cmp
mov
loop
mov
test
sbb
movsl
scas
cmc
loope
jge
idivb
mov
lea
fcompl
mov
rcrb
lds
xor
mov
inc
cmc
mov
sbb
xor
sub
jl
rcl
mov
jae
adc
mov
inc
jo
out
cmp
pop
sub
loope
arpl
aas
scas
push
or
inc
or
popf
xchg
push
aaa
add
lcall
jle
gs
push
jne
outsb
test
and
mov
mov
sarb
add
mov
push
test
inc
sub
bound
push
testl
pop
das
cs
pop
mov
je
and
sub
into
aad
pop
push
push
fwait
jl
repnz
cmp
and
xchg
lds
cmp
lea
adc
sub
push
jne
sub
mov
and
insl
ds
out
jecxz
sub
sbb
add
pop
push
mov
pop
xorl
jo
push
cmp
mov
jmp
mov
sarb
mov
add
jnp
out
mov
imul
std
pop
xchg
sub
adc
pop
pop
shll
loopne
dec
pop
push
or
scas
inc
sub
stc
adc
sub
ja
xor
inc
ja
xchg
push
and
mov
cmp
or
cmp
sahf
rol
int
cmp
push
lret
pop
dec
popf
shrl
movl
or
mov
stc
clc
movsb
cwtl
out
aaa
xchg
fimuls
or
rorl
jno
jns
mov
or
pop
ficomps
xlat
jmp
shrb
jnp
iret
std
adc
lds
xchg
int3
cmc
push
push
add
dec
cmp
loope
cmp
and
bound
jecxz
pop
pop
mov
adc
add
xchg
test
jbe
push
push
pop
and
push
mov
pushl
fadd
xlat
mov
push
fucomi
push
in
mov
les
mov
inc
iret
out
mov
add
xchg
cli
cmc
insl
pop
ret
pop
push
and
pop
xor
and
or
cmp
push
daa
mov
pop
or
pop
loopne
ja
cli
inc
lea
scas
inc
mov
das
sbb
fldenv
enter
in
sub
pop
sbb
lods
dec
pop
mov
mov
fbstp
xchg
out
leave
xor
push
pop
cs
cmp
jge
cltd
sti
inc
shrb
shll
lock
pmullw
cmc
jge
pop
data16
in
push
adc
les
int
leave
lods
mov
dec
push
lret
int
mov
adc
jmp
and
in
sbb
inc
mov
xrelease
shrb
movsb
sub
mov
loop
rcrl
cltd
enter
adc
out
sbb
addr16
mov
fsubs
sbbb
sbb
pusha
jb
sub
idiv
mov
mov
cmp
and
dec
les
shlb
loope
out
lret
daa
std
leave
cmp
lock
punpcklbw
xchg
cmpb
stos
dec
aad
adc
cmpsl
mov
aam
mov
pop
inc
sbb
adc
push
push
lcall
inc
scas
or
xor
out
inc
gs
into
mov
pop
cltd
xor
sub
jge
iret
andb
adc
add
pushf
and
lds
lea
in
adc
shll
cmp
mov
stos
cmpl
push
cmp
arpl
fwait
fwait
pop
adc
push
shrl
xor
mov
mov
pop
test
stos
mov
ror
stos
mov
aas
add
lret
stos
dec
loop
call
dec
cmp
cwtl
cmp
pop
xor
jae
adcb
mov
movsb
push
xor
shr
cmp
mov
and
imul
push
sbb
leave
in
mov
repz
sub
scas
scas
mov
fistps
push
fbld
mov
cmp
push
mov
in
outsb
or
loopne
xchg
cld
fldenv
out
xor
mov
inc
cmpsl
pop
aas
into
cmp
hlt
or
xchg
shl
jmp
and
mov
stos
lret
insb
pop
or
adc
dec
js
dec
dec
cmpsb
or
push
pop
dec
jns
icebp
xchg
cs
pop
cwtl
adc
jbe
pop
scas
cmp
jbe
jl
sarl
pop
pop
fisttpl
adc
imull
lea
jge
mov
cld
xor
add
loope
and
fnstcw
mov
lea
cmpsl
outsb
movsl
push
jnp
pcmpgtd
jmp
or
xchg
push
dec
jno
inc
mov
push
arpl
fstpt
ljmp
hlt
repz
mov
cmpsl
cmp
int
jecxz
xlat
add
mov
mov
xchg
lret
lods
aam
mov
jae
imul
insb
push
mov
xchg
shrb
negb
dec
push
xchg
scas
test
mov
inc
pop
sub
fsubrl
call
mov
pop
es
inc
jecxz
ret
cmpl
jge
shl
adc
cmp
aas
lds
stos
mov
add
lods
mov
lahf
mov
pop
sbb
in
imul
pop
or
cmpb
das
xor
in
scas
loop
inc
pushf
cmpsb
notl
fstpl
es
lcall
pop
ja
lahf
test
mov
push
xchg
stos
sub
push
jbe
xchg
popf
test
imul
sub
movsb
jge
inc
nopl
push
jle
inc
inc
adc
in
and
dec
push
xor
fwait
pop
cs
jne
jb
mov
jp
bound
mov
test
or
ficoml
pop
mov
lea
icebp
mulb
or
mov
or
mov
fisubrs
sub
xchg
bound
ss
cwtl
repnz
leave
pop
sub
pop
jno
repz
xchg
imul
subl
adc
xchg
inc
cld
xchg
aaa
aas
mov
jle
repz
cmp
jg
stos
and
mov
push
testl
xchg
cmp
cli
imul
push
cwtl
sar
cmp
adc
aad
or
or
je
push
in
lods
shr
pop
sbb
rclb
loop
jmp
xlat
xchg
and
jle
outsb
push
mov
push
sbbb
nop
mov
sub
movsl
push
inc
sub
pop
mov
add
out
inc
enter
out
xor
test
cmp
pop
jo
fwait
adc
mov
mov
push
cli
mov
into
popf
jge
lock
stos
push
adc
mov
xchg
mov
push
dec
aam
arpl
inc
cli
lock
ja
push
push
push
mov
mov
and
push
mov
rol
aam
in
inc
icebp
jg
inc
imul
lods
loope
push
addr16
jl
scas
shlb
scas
sbb
jnp
jecxz
xchg
jnp
loopne
ljmp
push
aas
aaa
movsl
daa
inc
dec
movsl
push
ja
mov
clc
aaa
or
mov
and
push
gs
jne
aas
mov
outsb
cs
sbb
cmp
sar
roll
ja
push
and
add
inc
es
push
inc
inc
xlat
jge
lcall
inc
imul
pop
or
sub
cmp
or
inc
xor
mov
out
and
pop
mov
fistpll
mov
mov
fsts
add
pop
jmp
stc
push
das
ret
data16
testb
xchg
xor
sbb
cmc
add
push
mov
jge
mov
cmp
pop
lcall
loopne
loope
and
cwtl
cmp
rclb
add
jle
mov
xchg
adc
outsl
push
daa
div
pop
popf
mov
lds
adc
rcrl
fsub
push
inc
jmp
xor
movsl
xor
xchg
out
and
jmp
or
push
mov
push
fildll
xlat
mov
das
loopne
les
popa
xchg
iret
cli
lcall
sti
pop
cltd
fs
cmp
fnstsw
pop
scas
mov
out
shlb
inc
jmp
xchg
shlb
popa
in
pop
cmpsl
out
mov
testl
rcl
popf
test
ss
fistl
inc
xchg
jp
mov
add
inc
gs
add
fwait
inc
into
dec
pushf
pushf
dec
cmc
stos
push
cmp
shlb
sti
lahf
sub
push
mov
cltd
das
sbb
ret
adc
outsb
imul
sub
inc
jecxz
xor
sbb
pop
nop
out
cwtl
inc
std
lods
xchg
fistpll
jae
mov
sahf
jnp
in
cmp
push
adc
mov
jbe
addl
jecxz
or
or
mov
jp
je
add
xor
and
movsb
and
int3
in
imul
lahf
shrb
out
push
jne
mov
push
jnp
imul
idiv
xor
rcrb
cmc
daa
push
add
xor
cltd
stos
xorl
sahf
enter
fwait
inc
stc
or
ficomps
insl
mov
call
mov
lret
push
out
clc
inc
roll
imul
jl
mov
repnz
inc
data16
enter
mov
and
and
ret
out
xor
clc
and
xchg
enter
push
test
cmp
sti
das
bound
inc
jecxz
push
jmp
ja
ret
mulb
inc
dec
add
dec
inc
iret
pop
in
xor
das
push
sbb
icebp
xchg
mov
lcall
rsqrtps
rorb
aam
sub
ja
dec
xchg
repz
and
mov
xor
or
push
rolb
shll
sbb
pop
xchg
fadds
lea
sbb
sub
hlt
xchg
test
push
lret
mov
cmp
fcmovu
test
aas
gs
cmc
je
jbe
shl
jbe
inc
cmp
test
test
xor
pop
xor
or
test
xchg
push
pop
aam
out
push
movsb
inc
roll
add
xor
sub
shl
into
cmp
pop
add
aas
push
faddl
cmp
push
imul
repnz
push
shlb
ja
xor
imul
jne
lahf
fistpl
push
bound
shll
fldl
fdivr
xchg
mov
dec
test
ret
jecxz
cld
popa
dec
je
mov
addb
fiaddl
fidivl
std
out
rcrb
aad
push
subb
out
cmp
fsubrl
inc
xlat
mov
mov
clc
in
inc
movsb
mov
daa
push
cld
push
jns
mov
pop
pop
mov
cmpsb
dec
lock
pop
sarl
sbb
mov
enter
push
dec
imul
xchg
dec
mov
mov
pushf
push
pop
scas
notb
call
loopne
push
dec
ret
xlat
sbb
and
cmp
pop
xchg
mov
in
call
loop
xor
xor
outsb
pop
pop
and
pop
adc
mov
aas
loope
pusha
loop
inc
enter
adc
roll
jo
test
sbb
mov
adc
je
xor
ficompl
popf
cmp
in
loope
mov
inc
push
call
js
push
movsl
jo
movsl
andl
jb
loope
mov
divb
push
mov
mov
out
les
mov
cmp
ja
or
jecxz
lock
fsubs
out
xor
dec
arpl
sarb
outsl
xchg
cld
mov
repnz
xchg
jnp
and
pushl
fwait
lods
loopne
cltd
sbb
ja
into
pop
cmp
xor
je
lods
jmp
lret
mov
sbb
mov
push
mov
pop
leave
xchg
lret
add
pop
test
ja
call
pop
and
fcomp
dec
xchg
jb
ficomps
nop
ja
or
xchg
xor
adc
sub
mov
fwait
lods
cmc
cmp
enter
std
xor
shlb
xchg
test
jl
jmp
cmp
roll
pop
mov
sbb
lea
sub
aaa
cmp
cmpsb
lahf
mov
lock
pop
mov
pop
insb
testb
repz
xchg
mov
adc
scas
jae
cmpsb
or
orl
js
dec
inc
and
cmp
pusha
fsub
fwait
ja
aad
mov
push
dec
insl
cwtl
xor
pushl
aad
push
pop
ljmp
inc
inc
dec
fisubrl
add
push
dec
std
push
daa
adc
dec
mov
push
mov
or
jne
jg
outsb
xchg
adc
jl
lock
jl
sub
loop
test
mov
dec
sub
movsl
inc
xchg
daa
bound
into
push
pop
popf
call
in
fdivrl
mov
in
lcall
jecxz
imull
fs
fwait
mov
lock
clc
mov
cli
sub
pop
mov
test
mov
mov
cmpsl
jmp
xchg
cmp
cmp
push
pop
jo
ja
popf
lahf
jg
mov
dec
inc
push
push
scas
and
push
sbb
repnz
mov
es
out
push
mov
test
ljmp
into
mul
jbe
jb
inc
inc
mov
pop
cmpsl
dec
cwtl
cmpsb
lock
mov
adc
mov
pop
cmc
gs
test
add
lcall
movsl
fldcw
rcr
xchg
cmp
adc
cld
fwait
inc
lods
pop
cmp
jb
das
pusha
mov
sbb
push
pop
cmc
in
aam
xor
xchg
shl
scas
les
fmulp
add
push
std
mov
jmp
icebp
repz
xchg
push
aas
arpl
gs
xor
les
aam
in
jge
push
fisubrl
sbb
mov
adc
sbb
cwtl
cmpsb
sub
mov
adc
lea
lret
sahf
inc
fsts
shrb
lret
jecxz
jg
push
push
inc
cmp
fmull
das
inc
sub
out
mov
cmpsb
into
add
dec
push
nop
leave
push
xor
ss
jne
test
nop
xor
xchg
mov
loope
inc
movsb
iret
xchg
nop
jp
xor
inc
mov
movsl
addr16
dec
sti
stc
sarl
leave
sub
es
mov
scas
sbbb
pop
dec
mov
push
adc
test
cmp
push
rcrl
lahf
repz
jno
mov
sub
jp
sbb
loope
sbb
pop
js
std
fildl
sbb
hlt
mov
movsl
mov
inc
jbe
mov
fstpl
mov
cmp
fstps
add
je
fldcw
and
ret
ret
xor
repz
push
pop
loope
or
xlat
ljmp
movl
repnz
les
add
lcall
cld
cli
mov
inc
loopne
mov
jg
dec
add
push
mov
inc
popa
mov
dec
mov
and
add
mov
mov
cld
shlb
xchg
addr16
dec
fwait
and
lea
incb
aaa
lods
xchg
and
pcmpgtw
jo
cmp
sbb
push
daa
jg
pusha
sbb
cmpsl
pop
sub
jecxz
sbb
cmp
jbe
addr16
pop
outsl
mov
nop
adc
orps
mov
in
cmp
mov
lahf
or
and
cmp
inc
outsl
sub
add
inc
in
or
inc
lcall
xor
roll
mov
xchg
mov
xchg
xchg
push
cmp
add
sbb
add
jns
out
loopne
ficomps
or
sub
movsb
xor
mov
push
rolb
push
cmp
data16
jge
jb
bswap
enter
add
mov
cltd
inc
lahf
cltd
push
out
nop
test
roll
mov
add
sub
jb
add
iret
cmp
out
inc
ret
sbb
mov
jne
or
lods
mov
fmulp
movsl
aam
subb
jnp
inc
or
jns
stc
imul
out
jmp
pop
lock
mov
bound
add
out
mov
aas
nop
arpl
fisttpl
dec
mov
xor
lea
scas
movsb
daa
mov
dec
or
push
mov
jmp
repz
sub
cli
ret
xchg
jl
lcall
jno
push
sar
and
bsf
sub
add
in
negl
push
cmp
and
cmpsl
mov
clc
js
test
lock
inc
add
jmp
nop
out
add
fldl
pop
jl
push
inc
mov
lods
push
ds
lods
pop
mov
dec
pop
mov
hlt
ret
xor
push
cmp
shlb
repz
dec
out
inc
add
lea
cli
xor
cmp
cld
and
sub
or
mov
dec
xchg
dec
mov
daa
xchg
adc
sbb
inc
dec
adc
jb
sahf
shll
movsl
popf
lea
sti
std
test
sbb
jge
mov
pop
and
dec
cwtl
jle
addl
mov
sub
sub
fwait
int
jg
addr16
mov
jl
add
sub
outsb
gs
add
adc
cltd
out
shrl
aas
test
sbb
mov
or
data16
scas
adc
dec
mov
sti
jnp
jbe
loop
aas
rsm
inc
pop
popf
mov
cmc
sahf
xchg
xor
nop
cmpsb
sbb
in
mov
push
out
fwait
inc
jl
or
xchg
in
and
popf
mov
cmpsb
jp
cltd
nop
lea
adc
xor
pop
dec
les
pop
jbe
popf
stos
jp
push
adc
call
jns
mov
iret
pop
loope
aad
les
jmp
loopne
mov
xor
loopw
dec
popf
rcr
gs
add
add
push
xor
rcrl
pop
ljmp
jecxz
es
dec
pushl
cmc
push
test
clc
sub
xchg
stos
lret
mov
in
das
mov
pop
in
fsubs
addb
notl
stos
adc
aam
jmp
or
xor
dec
cld
ljmp
inc
out
les
dec
mov
popa
dec
add
mov
cli
mov
lcall
pop
push
aam
ds
daa
shr
or
das
in
mov
xor
repnz
ds
sti
imul
inc
fsubs
into
pop
mov
sbb
xchg
add
add
pushf
push
cmp
fldl
frstor
sbb
pop
int
mov
mov
sarl
fsubrs
call
enter
cmp
adc
or
dec
mov
cmpb
nop
std
add
add
movsl
popf
loop
xchg
aam
ljmp
cmc
xchg
and
or
scas
xor
aam
and
pop
insl
in
enterw
sbb
pop
mov
sbb
push
xchg
inc
jae
xchg
xchg
out
hlt
aad
cs
leave
dec
lds
cld
jo
pop
jbe
inc
adc
fstl
in
xchg
subl
fsubl
bnd
hlt
sbb
xor
ror
xor
cmp
out
std
cltd
popa
and
push
mov
insl
outsb
lcall
insl
pushfw
popa
inc
stos
fs
rcll
stos
cmp
xor
fimuls
mov
sbb
or
pop
adc
and
dec
loope
repnz
dec
fidivrs
loopne
jecxz
iret
gs
lods
movsb
mov
add
push
cmp
aam
jbe
mov
cwtl
loope
idivl
inc
mov
sbb
mov
jnp
lock
int
and
or
popa
jb
into
idiv
cmp
loopne
push
or
outsl
adc
in
mov
in
push
out
hlt
sbb
pop
bound
mov
movb
aaa
mov
push
adc
pushf
icebp
test
insb
mov
scas
adc
sub
cmp
adc
gs
pop
ret
in
aad
or
je
push
sub
xchg
int
test
jl
ljmp
popf
pop
pop
addl
test
stos
les
mov
inc
push
mov
testl
inc
mov
or
lret
repnz
scas
add
push
out
and
mov
aaa
mov
or
fwait
pop
aad
mov
mov
imulb
pop
insl
das
cmpsb
andl
lea
jecxz
fistpl
std
scas
ss
mov
sbb
lret
jge
lret
push
outsl
ljmp
iret
pop
and
xor
fcmovnu
jns
push
push
in
fistps
mov
and
mov
cs
cli
ljmp
and
sti
sub
xchg
clc
rclb
cmp
stos
adc
insb
outsl
pop
nop
mov
or
je
sbb
dec
mov
or
mov
lods
adc
push
cltd
or
fildl
push
rorb
or
dec
xlat
enter
fs
mov
out
ljmp
ret
cs
sub
testl
xchg
push
out
adc
arpl
in
xchg
scas
jmp
mov
pop
adc
pop
jp
jmp
cli
jnp
pop
out
enter
aad
fstpl
data16
mov
scas
mov
in
mov
fstl
sub
je
mov
cld
inc
je
mov
pop
or
sub
iret
mov
push
out
out
stos
ss
add
sti
dec
mov
out
in
jns
decb
mov
jno
mov
leave
adc
push
pop
in
mov
sub
xchg
and
mov
pop
adc
int
testl
imul
roll
movsb
push
sbb
pop
jb
push
pop
iret
sub
dec
pushf
loopne
cmp
fildl
jne
popf
arpl
pop
jnp
sbb
imul
lods
push
repnz
adc
sbb
push
xacquire
popf
or
or
add
xor
shrl
je
nop
enter
loope
xlat
andb
sbb
push
and
jns
aaa
sbb
push
jecxz
pop
mov
pop
mov
sbb
cmp
add
push
adc
enter
or
lcall
dec
out
adc
mov
icebp
lret
clc
xchg
mov
inc
cmp
mov
lds
out
pop
push
gs
flds
push
popf
and
or
les
and
outsb
ret
mov
iret
aad
daa
jl
pushf
sub
enter
jmp
jo
sub
aam
jae
mov
fcomp
rclb
fisubl
fldl
and
roll
hlt
lret
imul
pop
pop
nop
movsl
out
mov
or
pop
fiaddl
and
or
test
adc
inc
mov
cmp
xor
jns
sub
xchg
mov
pop
imul
sti
mov
sarb
fmull
jb
nop
xchg
mov
pop
xor
aas
into
mov
sub
js
aam
push
sbb
les
in
jnp
xchg
jae
dec
xchg
cmpsb
jne
sbb
xor
xchg
bound
aas
adcb
pop
repz
mov
xchg
out
lret
and
out
xor
stos
std
rcl
shl
sub
out
negb
or
stos
flds
mov
pop
rcll
clc
fiaddl
cmp
sbb
sbb
inc
insl
xchg
mov
ret
sub
or
inc
out
xor
cld
add
jo
push
fsubrl
push
aam
bound
nop
push
popf
fstps
sbb
push
add
addb
fisttps
xlat
fadd
je
push
push
inc
xchg
repnz
xor
repnz
pop
add
fiadds
outsl
lods
pop
sbb
push
std
xor
pop
xor
into
adc
nop
shll
ljmp
add
xor
jge
hlt
mov
jmp
dec
xor
xor
xchg
push
mov
add
mov
pop
ljmp
dec
fdivs
add
bound
xchg
lea
int
inc
mov
jle
jnp
or
jnp
adc
add
mov
or
add
xchg
mov
call
fbstp
sub
adc
loope
cmp
outsl
jo
xchg
xor
push
jge
jle
sub
jge
stos
mov
sub
stos
lds
dec
jp
test
lret
mov
loopne
sbb
mov
inc
dec
cmp
jne
addr16
dec
movsb
and
sbb
cmc
push
pop
addb
or
push
test
add
pop
bound
out
lcall
aad
jmp
clc
cmc
pusha
push
xor
and
rorl
mov
divb
js
repnz
enter
lea
dec
cmp
pop
push
mov
flds
repz
lret
mov
cmp
mov
cwtl
xor
clc
pop
stos
xor
or
movsl
ja
push
das
mov
sub
mov
push
jge
out
pcmpgtd
add
dec
and
inc
xchg
sbb
jle
xchg
xchg
pop
movsl
mov
push
fstl
mov
data16
ret
pop
or
cmp
aas
push
std
jmp
outsb
ja
dec
mov
push
repnz
ss
sub
or
jl
dec
or
aas
das
xchg
xor
and
add
and
jmp
cmp
mov
orl
fwait
or
insl
addr16
and
jl
dec
or
sbb
mov
je
nop
xchg
jge
dec
popf
fwait
xchg
ja
scas
add
xchg
leave
rcrl
pop
in
dec
mov
inc
xchg
sub
enter
dec
in
or
jl
into
std
sbb
mov
jnp
mov
icebp
repz
pop
cmpb
iret
movsb
pushf
jns
dec
pop
push
movsb
jno
inc
add
out
enter
addb
repz
repnz
sbb
lock
mov
push
or
dec
cmpsb
xor
sbb
and
cmpl
repz
mov
add
js
fcoms
inc
stc
xchg
fidivrs
insb
loop
je
cmc
push
shrb
es
adc
fwait
cmp
out
and
inc
pop
push
mov
stos
or
mov
or
iret
inc
arpl
lahf
lods
dec
pop
ss
fs
lock
in
cmpsb
and
scas
or
push
not
adc
gs
into
sbb
aad
sub
gs
mov
sbb
je
pop
xchg
cwtl
outsb
out
jo
xchg
jl
push
cmp
js
mov
andl
fnstenv
call
mov
xlat
lret
xchg
sub
jne
and
mov
test
andb
lret
lea
cmp
clc
xor
pop
push
gs
negl
cmp
out
push
push
adc
lahf
push
es
testb
pop
adc
push
and
fcmovu
or
mov
pushf
jb
frstor
pop
test
xchg
mov
inc
mov
mov
adc
sub
clc
out
out
adc
sub
loope,pn
call
sbbl
adc
lea
pop
cld
loopne
pop
leave
mov
xor
in
gs
pop
test
add
dec
repnz
std
pop
negl
out
lret
sub
or
iret
xorl
cmpsb
daa
mov
jno
cmp
add
cmc
cmp
fnsave
sub
xor
pop
je
addr16
fs
add
lea
sti
js
jle
push
dec
andb
mulb
in
sub
imul
sub
add
inc
cmpsl
icebp
adc
add
sbb
mov
or
xchg
in
iret
lods
cmp
jbe
lret
push
mov
addr16
fdivl
shlb
push
dec
jmp
pop
filds
dec
xchg
lods
inc
sub
int3
outsb
in
les
ret
adc
rorb
and
sub
roll
cmpsb
das
push
add
in
les
xchg
nop
dec
push
mov
xchg
sahf
mov
mov
sti
out
rcll
aam
lods
rclb
cmp
mov
std
ja
cmpsb
popf
push
adc
xchg
mov
sub
pop
cmovge
dec
incb
cmp
and
ret
push
je
orl
sub
in
pop
sti
pop
sub
jb
inc
lods
in
cmc
lea
mov
test
push
inc
test
insl
fcmovu
fsubrl
stos
lock
mov
mov
imul
sbb
jno
hlt
inc
insl
inc
dec
ret
adc
jbe
push
and
aam
inc
and
xor
lea
and
inc
icebp
xchg
mov
xor
mov
adc
push
in
xchg
fldl
push
sbb
insl
push
hlt
fwait
enter
jns
push
sub
dec
push
push
dec
mov
dec
jg
and
jne
mov
jb
imul
push
aam
je
dec
mov
cmc
cmp
lds
cmc
fs
add
mov
mov
movb
sub
dec
sub
lds
dec
inc
lods
mov
in
add
and
sub
sub
cmp
push
daa
test
jg
mov
aad
mov
out
xchg
mov
jae
imul
add
push
add
push
data16
cld
pop
jbe,pt
sti
xor
xchg
jae
mov
shrl
push
or
jae
pop
dec
mov
clc
hlt
movsl
in
jo
xchg
movsl
sahf
mov
adc
push
add
sbb
ret
pop
jg
adc
fs
mov
push
push
test
cwtl
pop
or
mov
adc
mov
arpl
out
jmp
dec
mov
icebp
pop
iret
push
pop
stos
jns
imul
sbbl
mov
lds
fdivrl
mov
xchg
adc
addr16
out
jp
push
ja
inc
mov
jp
jae
loop
and
mov
xchg
sbb
mov
dec
faddl
dec
jns
dec
cmpsb
cmp
bound
dec
sbb
pop
pop
mov
fdivs
mov
scas
jnp
sti
xorb
je
xchg
push
std
and
test
dec
sbb
sbb
dec
push
cmp
inc
cmpl
jle
insl
mov
dec
xchg
movsb
es
lahf
mov
adc
lret
lock
xor
pop
push
int
outsl
mov
in
cld
ret
cmpsl
pusha
test
mov
int
mov
cmp
mov
ss
into
push
mov
cmc
adc
orb
jge
pop
faddp
or
lods
push
mov
sbb
call
mov
inc
pop
xor
mov
ret
lahf
pop
sti
popa
cmp
pop
cmc
adc
jne
mov
add
insl
and
out
mov
sbb
jmp
fmul
add
cs
push
cli
mov
sbb
les
mov
adc
lcall
hlt
and
mov
movsl
les
sti
fwait
test
mov
adc
xchg
popa
int
and
fsubl
pop
into
out
add
sub
aaa
sub
sub
dec
mov
daa
cmc
or
jbe
stc
add
mov
dec
dec
inc
jmp
mov
xor
mov
pop
test
jl
sbb
pop
or
mov
and
and
clc
daa
dec
cmp
in
jg
push
loope
loopne
xchg
mov
pop
and
pusha
in
lods
out
xor
std
pop
and
pushf
repnz
or
outsb
fbld
fldpi
imul
jnp
addr16
int
push
jp
sub
jmp
outsb
jne
push
leave
repnz
xchg
inc
movsb
or
dec
idivl
lds
mov
add
icebp
nop
adc
sarb
mov
shrb
movsb
xchg
sti
xchg
movsb
fistl
fs
pusha
hlt
mov
xchg
fimuls
mov
sbb
mov
icebp
aam
pop
xor
push
icebp
mov
shl
movsl
lea
pusha
and
inc
xlat
cmp
xchg
addr16
pop
xchg
aam
jp
mov
xchg
aad
not
xchg
pop
push
in
popl
sub
add
xor
dec
lcall
inc
ds
idivb
and
xor
pop
xchg
mov
scas
pushw
jo
dec
cwtl
or
insl
mov
sahf
cmp
leave
iret
jg
js
pop
test
daa
inc
sbb
rclb
mov
rcrl
ds
cwtl
fstl
sarb
push
das
inc
imul
rol
idiv
fldcw
inc
in
loop
mov
cs
cwtl
je
ret
add
fiaddl
and
icebp
jp
fcompl
stc
loope
dec
dec
mov
stos
cli
ja
dec
lcall
mov
xchg
inc
jg
jno
sub
mov
inc
and
lret
testb
and
movsl
add
add
and
ds
sqrtps
and
ljmp
lret
xchg
mov
xchg
or
inc
push
insl
int3
test
mov
lock
mov
push
inc
sbb
push
iret
adc
push
scas
adc
stos
sbb
shlb
icebp
xor
sti
es
dec
inc
and
ja
divb
sbb
and
dec
outsb
dec
xchg
push
add
jo
mov
lret
addb
and
adc
sub
stos
int3
mov
cpuid
testl
push
out
mov
aad
sbb
dec
aam
push
enter
lcall
inc
in
xor
mov
add
inc
lds
inc
dec
or
dec
scas
fistpl
jo
roll
xchg
push
jl
leave
arpl
jg
add
in
dec
mov
clc
sbb
xor
pushf
xchg
pop
dec
out
fwait
packsswb
pop
push
xor
cli
adc
pop
push
fistpl
pop
dec
fsts
add
js
testb
in
mov
mov
popf
cmpsl
std
aas
test
ja
jo
sbb
fwait
stc
fs
push
pop
test
iret
or
adc
inc
xchg
mov
adc
or
add
mov
xchg
aad
mov
jne
out
popl
je
cmp
out
xchg
aad
jne
adc
fimuls
mov
lcall
add
mov
mov
js
dec
add
pop
sub
out
xor
arpl
xchg
and
sub
popl
xchg
ret
push
mov
mov
cmp
jp
lahf
test
jno
icebp
addr16
sbb
enter
jb
mov
mov
xchg
xor
mov
mov
adc
movsl
dec
dec
lret
jae
enter
pop
inc
sub
mov
fmull
fldenv
lea
dec
outsl
mov
dec
sbb
dec
push
es
test
sub
push
sbb
lods
ljmp
cwtl
inc
fcoml
lret
jp
xchg
jmp
add
lods
out
xor
movsl
pop
das
push
fldcw
dec
jne
and
xchg
cmpsb
jo
movsl
or
cmp
mov
dec
das
lcall
test
in
push
pusha
iret
int3
jg
cwtl
xchg
test
scas
push
push
or
std
pop
adc
fimull
jno
and
into
hlt
dec
lods
int
pop
pop
test
or
sbb
fs
pop
mov
sub
mov
movsb
adc
mov
adc
inc
push
ljmp
cmpsb
pop
in
fnstenv
mov
xchg
in
fcoms
pushf
mov
sti
shrl
fucom
fmuls
js
mov
in
ss
shll
hlt
add
cwtl
xor
inc
jne
cs
mov
push
inc
gs
jae
sub
insl
loopne
mov
xchg
addr16
addr16
movsb
adc
push
addb
fwait
leave
cmp
sbb
adcl
cwtl
sub
or
rorb
adc
addr16
adc
roll
bound
dec
enter
mov
negb
int
lea
inc
enter
mov
sub
shll
sub
popf
sub
sub
shrl
iret
daa
sub
xlat
jle
jnp
aaa
sub
inc
dec
dec
js
loope
clc
insl
fcmovu
in
pop
dec
push
inc
adc
inc
jmp
lock
push
clc
js
xchg
not
lods
loope
xor
scas
hlt
ficoms
shl
popf
push
mov
sbb
out
jecxz
xchg
ss
dec
jns
jle
lahf
xlat
pop
minps
inc
sbb
nop
fcmovne
pop
andl
in
hlt
jae
add
sahf
lds
lcall
jbe
and
int
shrb
loope
int3
out
or
insl
mov
dec
jle
push
mov
arpl
sub
hlt
sub
shlb
or
jae
adc
jns
pop
add
mov
sar
iret
ficomps
out
xlat
cmp
sbb
mov
mov
stos
test
jge
and
mov
cmp
push
aam
btc
xchg
dec
cmpb
dec
aaa
push
or
xor
outsl
mov
shl
cltd
ret
jge
in
inc
dec
push
in
andl
out
xchg
pop
stos
stos
dec
adc
push
xchg
stc
gs
cmp
lahf
in
lret
pop
hlt
or
and
aaa
enter
add
lret
cmp
push
mov
nop
jg
out
inc
mov
test
mov
pop
aad
inc
pop
add
pop
sarb
sbb
test
dec
cmp
add
jle
cmp
icebp
in
faddl
mov
daa
push
mov
push
xor
push
enter
xchg
fimull
sub
movsb
and
imul
aad
dec
push
daa
adc
icebp
testl
loop
pop
mov
xchg
dec
cmp
loop
loop
adc
pop
inc
adcl
cmp
jl
mov
and
iret
mov
dec
mov
lret
jns
mov
in
and
hlt
je
push
shlb
push
mov
add
std
xchg
push
mov
or
repnz
inc
ficoms
pop
imul
scas
sbb
sti
fwait
adc
js
xchg
xchg
dec
push
loopne
xor
bound
int3
cmpsl
idivl
jnp
and
shl
push
int
jae
lea
jmp
mov
out
pop
rcrl
sbb
mov
pop
int3
cltd
mov
mov
xor
aad
dec
or
inc
lods
fiaddl
insb
lahf
scas
xor
xor
int3
inc
jns
outsb
cmp
in
and
xor
adc
mov
frstor
lods
xor
inc
sti
int
popa
pop
and
data16
cld
jne,pt
in
hlt
aaa
out
daa
xor
decb
sub
mov
mov
loopne
inc
and
and
pop
lcall
adc
jne
cmpb
cmp
xorl
push
sti
pop
cmp
andb
xchg
jnp
push
jge
xor
mov
fsubl
cli
ret
outsb
push
adc
cmpsb
ss
xor
cmp
and
aad
repz
xchg
push
xor
sub
or
fcomi
insl
mov
mov
mov
gs
sbb
mov
cs
pushf
inc
pop
inc
push
mov
loopne
sti
cmp
divb
add
pusha
jmp
fidivrl
push
mov
das
in
int
inc
xchg
orl
faddl
sbbl
mov
mov
testb
xchg
bound
dec
loopne
jmp
iret
or
fstpl
and
ret
inc
int3
fcmovnu
adc
cmp
int
cmpsl
xor
imul
pop
arpl
lret
push
push
xchg
xchg
jmp
out
sub
stos
sbb
sahf
test
cmp
sbb
jle
imul
arpl
pop
scas
bound
push
cmpsl
adc
movsl
dec
mov
push
hlt
xchg
data16
dec
insl
mov
pop
fiaddl
shlb
jno
add
push
gs
es
push
cmp
sbb
pop
jp
ret
pop
xorb
loopne
dec
or
sub
mov
add
je
arpl
mov
dec
inc
or
ds
das
push
dec
mov
mov
jp
or
ja
add
ljmp
leave
iret
jl
lds
sub
mov
arpl
stc
shlb
push
dec
outsl
lock
ret
cmc
mov
imul
hlt
rclb
jg
push
cmp
aad
ret
fstpt
jle
cmp
in
sbb
ret
mov
pushf
push
mov
movsl
mov
mov
or
jge
jae
hlt
daa
adcl
inc
movsl
cli
imul
aad
mov
popf
test
mov
lahf
cmp
mov
cmp
loop
movsb
xor
pop
es
clc
fwait
cs
jg
std
shl
sahf
pop
push
mov
sti
xchg
xor
mov
cmp
mov
fimull
inc
sahf
mov
lea
loop
test
clc
dec
outsl
mov
out
fcomps
gs
xor
mov
add
jnp
adc
push
add
mov
daa
in
test
cmpsb
sub
fisubs
cmpsl
out
shl
inc
mov
fcmovnbe
jecxz
out
add
adc
dec
call
mov
add
adc
mov
mov
out
fs
ljmp
stos
mov
lret
jo
repz
outsl
cmp
pop
dec
int
mov
js
sbb
out
push
test
and
lock
pop
adc
mov
mov
stos
ror
jno
pusha
les
fistl
dec
outsl
lahf
xchg
fisubs
mov
jne
adc
shl
sub
pop
sbb
and
iret
daa
pop
test
loope
push
sub
outsl
cs
aaa
xor
dec
sbb
or
sbb
pop
xchg
out
arpl
inc
testl
stos
popf
sub
cmp
jmp
test
pushf
inc
inc
shll
adc
dec
mov
stos
aas
push
jle
loope
mov
shll
or
das
xor
loope
mov
cmpb
in
popa
lods
push
lock
stos
lret
insl
cmpsb
mov
sahf
push
jle
les
push
mov
pop
lds
pop
out
cmp
xchg
scas
push
in
divb
popf
lds
in
shlb
and
jp
add
jnp
adc
jecxz
negl
adcb
mov
sti
xchg
cmpsl
mov
dec
scas
fcoms
imul
or
pop
or
insb
mov
cmpsl
xchg
sbb
mov
lea
cli
pop
hlt
lahf
pop
add
cli
outsb
fwait
insl
jne
cwtl
jg
js
add
mov
shlb
and
cltd
inc
xchg
test
stc
add
mov
ds
dec
jb
repnz
jecxz
xor
sbb
rclb
or
inc
pop
imul
adc
add
sub
jnp
data16
mov
stos
pop
into
aaa
fisttpll
and
push
xchg
std
adc
js
push
xchg
lea
and
int3
filds
dec
daa
sahf
pop
push
sub
popa
enter
add
cmp
or
lods
jns
mov
mov
icebp
daa
ja
out
sbb
stc
jmp
xor
xor
jns
daa
xor
push
push
pop
iret
xor
loop
fnstenv
faddl
pop
test
enter
push
cs
sti
adc
push
loope
xor
sbb
divl
xchg
lods
test
repz
adc
iret
dec
fcoml
lea
icebp
pop
aad
mov
test
je
mov
mov
mov
in
arpl
loopne
xchg
imul
jnp
addr16
stos
dec
movsl
cs
ds
shrb
ljmp
pop
xchg
mov
aas
ds
das
es
dec
xchg
fwait
cmp
movsb
jl
vsqrtpd
test
sub
pop
xor
jge
test
call
out
inc
loop
ss
jbe
repz
je
xchg
icebp
pop
push
sbb
andl
mov
push
push
xor
cs
jg
add
loop
pop
dec
pop
je
and
in
loopne
jbe
into
xchg
mov
loop
lret
or
push
sar
call
jne
cs
popf
sub
mov
fsts
arpl
insl
out
into
jnp
pop
rcrb
sbb
mov
fcomi
loope
lret
imull
sbb
adcb
xchg
fdivs
insb
sub
xchg
ja
outsl
fdivr
push
movsb
pop
mov
mov
shll
or
mov
cmp
fcompl
lea
stc
outsb
jno
into
in
fisttpl
orl
scas
dec
cmc
cwtl
xchg
popa
es
fidivs
mov
or
pop
lods
aam
xchg
pushf
push
les
push
mov
insb
xchg
outsb
mov
cmp
shll
xor
xchg
cmp
in
dec
adc
jp
inc
loopne
push
inc
or
adc
out
std
xchg
insl
test
mov
adc
mov
jne
leave
mov
sbb
mov
push
pop
not
push
and
or
fisttps
loopne
cmc
inc
dec
fistl
fstpt
cmc
mov
sbb
add
lock
pop
dec
dec
fdivrl
mov
xor
rolb
adc
mov
adc
inc
xchg
mov
mov
pop
dec
xor
pop
xchg
jb
mov
mov
fsts
out
int3
mov
lahf
mov
xor
and
mov
sbb
push
lea
popa
test
inc
pop
outsb
cmp
repz
stos
cmp
addr16
sbb
dec
push
cmc
icebp
movsl
xchg
sbbb
jecxz
frstor
mov
xlat
addb
test
cmp
aam
inc
inc
fwait
cmp
pop
inc
cwtl
sub
fisttpl
insb
or
ds
dec
js
mov
pop
cmpsl
rol
pop
pushf
cmp
icebp
push
mov
xor
mov
push
add
dec
or
popa
pop
test
aaa
mov
jp
movsb
bnd
mov
imul
lea
inc
cmp
pop
pop
loope
cmp
push
xchg
fstl
sub
or
arpl
xor
sti
fldz
das
subl
ficomps
xor
lods
repnz
xchg
jne
mov
movsb
adc
outsl
mov
xchg
loope
fs
jmp
call
mov
aas
jp
push
outsl
xor
cmp
jmp
fcoms
push
outsb
jmp
mov
lahf
aas
inc
add
sbb
imul
mov
jge
lret
xchg
pop
popa
jae
shl
hlt
or
inc
adc
in
test
hlt
loopne
test
push
cli
xchg
mov
inc
das
jae
pop
les
inc
std
inc
dec
inc
push
enter
in
sub
lods
xchg
xor
and
push
shl
mov
test
repnz
fs
jnp
add
jge
jecxz
pop
mov
dec
ret
adc
int3
sti
mov
test
xor
aad
inc
mov
cmc
cmpsb
orb
fadds
insl
mov
jle
or
xchg
jmp
mov
pop
aam
or
jo
jg
dec
dec
int3
into
mov
mov
sub
xchg
xchg
imul
or
test
push
mov
xlat
fldcw
mov
pop
insl
ss
lock
dec
sbb
sub
dec
sbb
shrb
xchg
xor
mov
mov
jae
xor
dec
xchg
xchg
push
test
fiaddl
mov
jmp
xor
rol
add
shlb
jle
out
or
inc
fs
jb
xchg
popf
imul
and
je
xchg
push
push
ja
stc
aad
mov
sarb
inc
clc
and
or
xchg
inc
test
mov
fistpl
stos
fdivrl
enter
mov
movd
xor
mov
mov
cmp
xor
inc
dec
jle
push
and
lea
jbe
insb
xor
cmp
ss
fs
sbbl
jno
jmp
or
fdivrs
lds
or
gs
cmp
push
dec
xchg
stc
xchg
int
mov
in
sub
sbb
push
lea
sahf
daa
xor
enter
or
dec
nop
cmp
mov
add
mov
mov
and
ds
inc
repnz
sti
jmp
mov
push
movsl
outsb
dec
or
cmp
cld
sub
lds
pushf
icebp
mov
aaa
cmp
insb
add
or
cmpsl
sub
lock
cli
sub
mov
lea
aad
cli
pop
loop
push
imul
inc
cs
in
hlt
daa
insb
mov
scas
cmpsl
mov
jnp
push
cmp
xlat
mov
push
mov
dec
ret
or
repnz
icebp
xor
adc
je
jl
xor
mov
sub
dec
jns
mov
add
cmpb
mov
iret
cmp
arpl
push
mov
incl
push
cmc
in
scas
add
push
pop
or
and
jmp
les
shrl
loopne
fdivs
jmp
fimull
jmp
cli
pop
lea
mov
inc
test
outsb
addr16
or
pop
lret
pop
rorb
nop
or
call
sbb
iret
pop
pop
icebp
mov
mov
cmp
mov
frstor
std
rcl
int3
in
pop
jecxz
scas
int
aas
loope
mov
mov
leave
lods
cli
cli
add
mov
sbb
dec
ja
out
push
dec
inc
sub
std
cs
gs
shl
and
sub
sti
jecxz
xor
imul
das
shll
pop
int
out
xor
dec
cmp
into
inc
jns
xchg
inc
push
outsb
andb
gs
outsl
xor
scas
adc
scas
movsl
in
ss
cwtl
mov
and
imul
jo
add
sti
xor
xor
out
xchg
shrb
mov
loop
daa
jns
jge
mov
movsl
aam
clc
aas
shll
ficoml
in
inc
jo
sbb
repnz
popf
lods
inc
sbb
cwtl
xchg
imull
data16
or
pop
mov
aad
mov
mov
sub
mov
mov
aam
sub
pop
ja
ret
imul
push
adc
ror
cmpb
ucomiss
pop
loopne
mov
push
loope
test
andb
rol
lock
mov
pop
mov
jp
xchg
in
mov
bound
es
xchg
aaa
in
cli
push
pop
sbb
inc
cmpsb
cmp
fsubrl
push
popa
mov
cld
push
in
jge
mov
push
push
mov
mov
call
loopne
sahf
jmp
mov
add
rolb
xchg
mov
push
sbb
shrl
push
add
push
sbb
mov
in
jbe
adc
jg
push
loop
mov
mov
sbb
mov
push
inc
aaa
icebp
imul
xchg
das
cmpsl
mov
andl
inc
dec
push
inc
lock
repnz
fs
pop
dec
sti
push
jo
inc
daa
push
jae
xchg
push
int
mov
push
add
cmp
jnp
adc
in
daa
mov
inc
sbb
cmpsb
mov
add
mov
orl
dec
cmpb
insl
pop
push
rorb
add
mov
add
mov
not
ffreep
or
out
ret
add
xchg
daa
xchg
out
daa
jb
in
and
or
stc
jmp
test
movsb
mov
fdivp
sahf
add
in
outsl
iret
shl
add
cwtl
fwait
insb
mov
divl
xchg
pop
pop
inc
jg
xchg
lds
sub
xchg
sub
adc
xchg
fistpll
sarb
ss
jg
xchg
jns
mov
dec
inc
jp
or
loop
fdiv
shrb
stc
mov
xchg
call
and
adc
mov
shrb
call
inc
mov
call
jbe
add
jne
sub
in
clc
mov
outsb
test
js
ret
xor
jge
shlb
dec
jp
mov
sub
add
imul
out
xadd
push
popl
test
mov
outsb
sub
xchg
icebp
inc
lcall
lret
xchg
jno
sbb
push
or
sub
add
adc
and
cmp
inc
call
push
or
pop
pop
dec
xchg
jno
sbb
mov
adc
aad
ret
push
stc
push
test
aam
repz
mov
rsqrtps
mov
inc
inc
mov
jne
jmp
mov
mov
adc
clc
fstpl
test
lahf
push
es
lods
and
clc
dec
in
ljmp
lcall
xchg
mov
dec
inc
orl
ret
mov
lock
adc
xor
enter
xchg
adc
inc
loopne
sub
outsl
fdivs
pop
mov
xchg
cmp
push
cmp
idiv
or
outsb
jnp
stos
dec
pop
xorb
jnp
xor
add
adc
loopne
repz
sbb
add
pop
mov
xor
xchg
push
les
sbb
mov
faddl
xchg
js
sbb
popf
into
fwait
or
in
sahf
inc
and
jnp
jp
mov
mov
jecxz
aas
push
mov
xchg
adc
cmp
shlb
sbb
leave
insl
mov
lcall
clc
mov
aas
sti
fiadds
sti
jnp
notb
out
pop
lret
jmp
testl
dec
xor
xlat
jp
das
dec
iret
jae
jle
repnz
int3
daa
mov
or
stos
popf
pop
nop
pop
push
cmp
into
aaa
stos
pop
push
js
pop
icebp
pushf
push
pop
xchg
aas
nop
stos
in
orb
aad
test
test
ret
pop
cmpsl
mov
cmpsb
adc
jae
in
cltd
mov
xchg
scas
repz
movsb
jnp
mov
push
sub
adc
jns
adc
adc
out
gs
mov
push
lcall
fildll
aam
xor
push
sub
sarb
push
or
sub
lock
xchg
push
ss
clc
int3
mov
and
ss
push
adc
stc
inc
push
gs
pop
sbbl
lds
imul
or
and
fcoml
mov
inc
cld
mov
cltd
mov
ss
jb
sbbb
test
and
iret
pop
test
stc
push
fwait
mov
jae
pop
mov
fsub
mov
xchg
in
loop
pusha
call
xchg
and
add
pop
in
and
imul
jecxz
stc
clc
xor
out
jl
xlat
jbe
in
mov
fs
sar
xchg
cmp
pop
int
mov
sub
jno
sub
and
add
mov
imul
clc
das
push
nop
mov
adc
adc
inc
cmpsb
icebp
xchg
xor
pop
xor
loop
adc
inc
mov
xchg
mov
repz
fwait
sub
jo
cmp
jle
adc
clc
roll
xorl
sbb
cmp
mov
repnz
out
icebp
in
add
sbb
shl
rorl
outsl
aaa
inc
xchg
mov
ss
pop
pop
dec
xchg
mov
mov
push
outsb
icebp
test
sbb
sahf
and
ficoms
xchg
mov
dec
rolb
daa
jns
enter
cmpsb
loope
inc
jge
pusha
mov
xchg
and
add
inc
cmp
fnstsw
fidivrl
adc
scas
ja
mov
mov
fmull
scas
lsl
mov
adc
cmp
cmp
in
jl
xchg
adc
mov
jecxz
movsl
xor
sbb
inc
inc
lret
shll
xor
in
jno
xchg
cmp
outsl
inc
inc
pop
or
mov
xor
in
cmp
sbb
sbb
xor
xlat
jmp
repz
idiv
jmp
adc
push
loope
subb
xor
cld
sbb
mov
cmc
push
jo
push
push
dec
cmp
xchg
mov
mov
xor
inc
in
cmp
sub
inc
das
movsb
ja
hlt
xor
insl
outsb
sub
pop
sahf
dec
dec
mov
add
repz
dec
push
cmpb
mov
mov
mov
ljmp
cmp
dec
jecxz
enter
jae
cmp
adc
call
push
test
xchg
test
lret
int3
mov
xchg
imul
or
lret
aas
aam
mov
mov
push
xchg
ljmp
add
mov
xlat
iret
test
xchg
sahf
repnz
popa
pop
mov
lea
sarl
arpl
dec
push
push
add
mov
xlat
xchg
in
lea
mov
out
dec
pop
bound
es
rcrb
in
fnstenv
xor
mov
out
fnsave
inc
in
or
fldt
fstpl
je
mov
pop
xchg
pushl
cltd
lret
or
add
in
lcall
mov
push
adc
mov
mov
aas
enter
jmp
in
xchg
stos
inc
mov
jns
subl
arpl
dec
pop
icebp
fs
jp
or
and
fisubrl
xor
aad
lahf
outsl
and
push
or
loop
adc
add
xor
test
inc
mov
inc
into
mov
ret
adc
sahf
cmp
popf
aad
cmp
xchg
push
insb
fdivrs
loopne
dec
mov
pushf
xorb
cli
inc
adc
xor
mov
sarl
mov
insb
xchg
inc
cltd
aaa
icebp
add
loopne
xor
nop
mov
mov
push
sub
lahf
cwtl
rolb
test
inc
xchg
mov
cli
or
arpl
add
cmc
adc
negb
xor
jae
mov
int
inc
sbb
mov
sub
in
cmp
pop
fucomp
sub
loopne
sbb
dec
sar
jmp
mov
lss
leave
js
mull
mov
int
mov
adc
pop
cwtl
pop
test
test
lods
cmpsl
outsb
or
hlt
int
or
out
or
cmp
sbb
outsb
cmpsl
data16
iret
aad
in
mov
push
pusha
mov
sub
fstpl
cmp
pop
aam
mov
cmc
js
mov
cmp
inc
xchg
push
or
fucomi
lret
int
das
cmp
sbb
cwtl
icebp
dec
leave
jb
push
pop
leave
sbb
jns
aas
je
cmpsb
lock
popa
push
sub
mov
pop
adc
push
data16
pop
test
jnp
imul
scas
pop
sub
in
and
repnz
mov
pop
mov
gs
mov
inc
sub
xchg
adc
mov
lds
mov
pop
mov
add
add
and
inc
cmpsl
sbb
sub
int3
mov
mov
cs
aas
sub
push
sar
test
inc
cmc
and
nop
ficomps
jno
cltd
rcr
fstpt
rorl
inc
pusha
xor
push
jle
xor
ret
sbb
xlat
fs
cmpsb
movsb
pop
outsb
mov
mov
hlt
xchg
sub
push
mov
inc
scas
cmc
add
jle
fisubrl
jae
int
sub
adc
push
lea
mov
mov
push
sbb
sub
stc
mov
and
jnp
push
out
lds
xchg
shlb
sub
pop
mov
cmp
inc
xchg
push
mov
jp
jmp
leave
add
cmp
faddp
dec
fucomip
and
fisttpll
out
sub
cmp
xor
or
aad
out
sub
jg
gs
xchg
inc
push
outsb
lret
les
adc
sbb
mov
xor
and
mov
pop
sbb
and
jae
dec
insl
out
cld
pop
or
xchg
dec
aas
xor
add
mov
addr16
push
insb
xchg
mov
push
mov
xor
mov
arpl
pop
icebp
repnz
stos
sub
jns
cmpsb
stc
imul
push
sti
and
ljmp
mov
or
pop
dec
push
fs
inc
lea
jmp
scas
jno
and
inc
push
aad
in
fisubrs
mov
cli
lods
cltd
iret
testb
inc
and
xchg
mov
test
push
or
xor
dec
pop
push
inc
inc
xor
rcll
cli
mov
cltd
rcrb
fs
add
push
lock
nop
adc
pop
sbb
lods
xor
jle
mov
rcrb
jle
dec
or
sub
mov
das
jbe
adc
xchg
mov
bound
and
push
mov
jecxz
pop
sbb
mov
cmpsb
andb
jecxz
out
cmp
cmp
adc
jbe
rol
lcall
and
sbb
icebp
xchg
push
and
xchg
dec
mov
jnp,pn
pop
mov
xor
pop
fnsetpm(287
in
sahf
lret
outsl
jg
ljmp
rcl
arpl
inc
ret
pop
sbb
mov
fdiv
lret
outsb
outsb
xchg
cmp
cmp
test
or
xchg
bound
rcll
cltd
lds
inc
mov
fs
subb
xor
test
pop
cmp
or
sbb
add
out
xchg
outsb
sbb
mov
jne
popa
sub
jle
mov
int
mov
mov
in
aad
xor
lods
dec
mulb
lret
daa
sub
mov
js
inc
rorb
lock
pop
arpl
fcoml
push
sub
cmp
and
mov
rorb
mov
inc
mov
xchg
in
sub
bswap
jb
mov
out
imul
shl
mov
out
push
and
mov
cmpsl
imul
lahf
push
mov
leave
and
fsts
aaa
sbb
pusha
sub
cwtl
inc
lock
sub
out
cmc
pop
sub
xor
mov
test
fsubr
fsubs
mov
movsb
stc
inc
sarl
or
or
add
int
xchg
mov
mov
fisttpll
ss
aaa
pop
movsb
sub
inc
cwtl
fdivl
js
lea
js
subb
pop
pop
movsb
test
int
lds
xor
or
sbb
adc
xor
scas
and
bound
cmpps
mov
sbb
adc
push
shll
movsb
pop
mov
adc
in
push
nop
mov
fisttpll
sbb
push
mov
loope
hlt
fwait
lcall
jl
adc
cmp
push
nop
push
pop
aas
daa
arpl
cld
push
inc
cmp
xchg
aad
dec
xor
sbb
fldl
insb
insl
lret
mov
into
cmp
jge
imul
repnz
mov
cmp
sub
xor
and
xlat
sub
stos
clc
aaa
or
sti
xchg
push
push
stc
ficompl
out
push
int3
das
and
addr16
sbb
iret
loop
dec
rcll
out
stc
stc
jne
scas
test
and
xor
nop
mov
mov
ja
cwtl
inc
or
fisubs
movb
push
sub
aas
push
shlb
orb
cmp
insl
sbb
jno
stos
icebp
xor
outsl
scas
inc
mov
jmp
fisttpll
add
mov
adc
mov
ror
push
mov
jl
push
and
lds
jg
adc
rcrb
adc
jne
jl
in
mov
lods
mov
dec
call
addr16
inc
adc
or
sbb
add
push
xchg
pop
into
sbb
dec
push
lahf
jge
pop
mov
les
dec
push
leave
dec
into
gs
dec
in
sbb
out
out
jns
lods
inc
loope
mov
aas
sub
add
bound
xchg
fsubrs
leave
je
push
dec
and
das
lret
es
fidivrl
imul
ror
mov
clc
les
ljmp
mov
gs
sbb
test
sahf
jg
movsb
add
sbb
dec
pop
pop
sbb
pop
int
push
jbe
arpl
mov
shl
mov
movb
and
jecxz
lock
mov
inc
cs
shrb
nop
in
cmp
addr16
daa
mov
ffreep
out
push
lods
inc
lahf
jmp
jecxz
adcb
jns
dec
push
in
pop
xchg
hlt
test
mov
xchg
pop
loop
int
outsb
jecxz
addr16
hlt
hlt
or
adc
lret
sbb
bound
or
add
sub
je
mov
jb
add
repnz
sbb
mov
in
inc
mov
sub
and
inc
movsb
cmp
imul
sbb
inc
mov
nop
pop
xchg
clc
xchg
dec
leave
mov
stos
mov
pop
and
add
into
push
sbb
scas
das
jecxz
xor
inc
or
or
mov
mov
xor
or
jnp
test
jg
shrl
pusha
mov
pop
xchg
adc
sbb
enter
decl
pop
out
sub
push
xchg
ficoml
adc
stos
daa
push
in
repnz
mov
or
adc
sub
jae
xor
mov
adc
cwtl
jg
pop
push
fisubrl
and
ret
out
push
mov
mov
and
sub
sbb
mov
lock
jae
push
jecxz
dec
mov
add
mov
pop
sarb
aam
and
sar
popa
cmp
ret
xor
pop
rcrl
into
cli
push
mov
or
sbb
xchg
sahf
mov
sti
ss
xor
xor
xchg
mov
test
addr16
push
xchg
lds
mov
push
mov
cmp
xor
xchg
negl
adc
pop
mov
inc
int
jp
lods
mov
loopne
jp
lock
adc
push
test
fs
and
in
loopne
fsubrp
mov
xor
sbb
mov
stc
cmpsb
inc
cmp
mov
scas
mov
iret
push
ret
sbb
inc
iret
adc
jge
insl
xor
int
inc
test
ja
bound
in
xlat
jp
cmp
leave
movsb
adc
jecxz
ds
cmp
test
std
jo
mov
test
loop
cmp
and
insl
mov
in
mov
daa
mov
cmpsl
xor
mov
or
rcl
imull
test
sti
cmp
sahf
jae
mov
sbb
mov
std
repnz
jmp
xchg
ljmpw
out
adc
sub
fsubrl
jnp
push
clc
xor
sbb
stos
add
scas
stc
cmpsl
call
test
inc
push
xchg
cmpsl
adc
cmp
ss
test
mov
adc
cmp
in
es
orb
outsl
int
sahf
dec
xor
mov
jnp
mov
push
fdivr
jbe
sub
mov
in
sahf
lods
sahf
add
or
pop
inc
mov
aam
fistl
in
fs
daa
imul
ret
mov
mov
rclb
xchg
xchg
mov
aaa
sub
or
xor
mov
aaa
sbbl
pop
dec
and
push
cwtl
dec
adc
pop
xchg
popa
and
mov
sbb
lret
negb
adc
es
dec
gs
pop
cmp
inc
nop
and
pop
movsb
fiaddl
dec
ja
jo
ss
adc
std
mov
pop
stos
in
shl
push
ret
inc
jle
repz
fcmovnb
add
test
pop
cmp
call
mov
pop
imul
orb
cli
popf
test
adc
push
xchg
insl
insb
adc
and
inc
add
mov
stos
int
sbb
into
sahf
cmpsl
dec
aam
mov
rclb
sti
and
rdtsc
mov
pop
scas
jno
sbb
inc
fstl
sahf
push
sub
fs
test
ja
cld
leave
cli
rclb
xchg
adc
daa
add
pop
sbbb
jae
addr16
fsubrl
inc
mov
ss
iret
mov
cmp
jnp
popl
movl
aas
movsl
jae
jo
test
loope
aaa
mov
pop
imul
in
cmp
mov
sub
shrl
push
in
pop
pop
mov
call
push
cwtl
push
pop
cld
js
loope
or
add
mov
lcall
adc
pop
jecxz
xchg
sub
sar
mov
gs
or
out
xor
cmp
push
sub
push
fnsave
in
add
push
jno
sub
mov
mov
and
xchg
xchg
xchg
push
xchg
rcrb
sbb
add
or
scas
push
mov
inc
aad
xchg
push
nop
imul
push
jae
inc
sti
and
push
jmp
fnstsw
int
push
mov
push
xlat
sahf
jmp
testb
test
sti
arpl
sub
cltd
sbb
out
in
std
adc
mov
mov
clc
mov
shll
pop
call
int
out
rorl
imul
movsb
jle
or
pextrw
mov
sahf
movsl
adc
xchg
int
mov
orl
inc
push
sub
sub
fwait
std
mov
pushf
push
jle
inc
aad
imulb
pop
test
clc
push
add
mov
cmp
pop
or
mov
mov
imul
xchg
loope
adc
aam
lds
mov
lcall
pop
cmp
out
lret
mov
inc
mov
cmp
dec
adc
mov
repz
mov
aaa
jecxz
lahf
outsl
out
mov
mov
out
je
adc
and
lahf
cmp
ljmp
sub
loopne
aaa
test
cwtl
fildl
jno
mov
adc
into
mov
pop
jns
pop
xchg
aad
adc
push
fidivrl
mov
scas
mov
adc
adcl
and
mov
je
xor
icebp
or
fnsave
push
sbb
inc
imul
mov
leave
sbb
dec
cli
jp
lods
push
sub
hlt
push
mov
sti
std
outsb
rcrl
jns
xor
cmpsb
adcl
faddl
xchg
or
jp
enter
int
or
push
mov
mov
call
mov
sbb
imul
int
cmp
into
push
jae
dec
cmp
inc
and
jecxz
push
loopne
inc
cmp
sbb
push
leave
adc
leave
fdivl
ret
mov
jb
loope
mov
int
xor
or
dec
clc
jne
arpl
cmp
inc
push
fldl
cli
bnd
pop
xlat
loop
bound
cmp
xchg
in
inc
fiaddl
xchg
xchg
pusha
mov
or
jae
sub
les
cmp
or
imul
ret
data16
fiaddl
daa
das
push
das
and
pop
int3
xor
nop
push
shlb
add
mov
mov
out
cmp
gs
lcall
xor
adc
popf
xor
pushf
inc
lods
jno
xchg
pushf
dec
xor
dec
repnz
lods
pop
mov
mov
lea
cmp
inc
cmc
adc
mov
sub
in
andl
sbb
mov
inc
addr16
aas
mov
jae
movsb
test
mov
dec
fldcw
loopne
test
and
in
aam
pop
and
fwait
cmpsb
push
jb
xor
cmpsl
stos
push
fildll
in
push
ljmp
imul
outsb
leave
push
cmp
insb
fwait
sbb
lret
movaps
push
lret
jne
pop
call
xchg
pop
ret
out
stc
fmul
and
mov
sti
movsl
subl
cmc
mov
xchg
js
mov
xchg
mov
pop
js
out
xor
xor
sbb
xchg
fadds
hlt
and
cmpsl
popa
inc
iret
and
into
in
out
jecxz
mov
pushl
ja
pop
push
sti
sub
fistpll
inc
mov
fdivl
dec
dec
aam
mov
inc
dec
aam
fsubrp
xchg
pop
xchg
das
jecxz
pop
fistl
xor
push
xchg
push
and
xor
xor
mov
aad
jns
adc
pop
cmp
fnstcw
sub
jg
xchg
push
pop
inc
in
hlt
add
into
mov
and
out
in
cmp
cli
cwtl
and
push
dec
loop
jmp
pop
cvttps2pi
and
xor
in
mov
ret
jbe
cmp
sub
pop
sarb
lea
dec
mov
inc
and
lcall
dec
mov
jno
fadd
adc
push
in
fnstcw
mov
gs
int
test
mov
in
xchg
xor
lahf
inc
daa
inc
sbb
out
or
mov
ss
and
and
jae
or
test
sahf
xor
inc
fdivr
or
popa
std
mov
xchg
pop
movsb
sbb
and
pop
jg
pop
sbbl
popa
mov
aaa
mov
addr16
out
arpl
je
in
cmc
ss
ljmp
push
pushf
cltd
push
lahf
mov
cmp
add
push
push
adc
cld
or
in
jecxz
out
sarb
push
inc
push
out
pop
xchg
adc
sub
xchg
push
aaa
pop
or
aad
xchg
xchg
insl
out
and
inc
mov
test
jns
and
sahf
inc
add
ficomps
orb
movsb
push
std
data16
xchg
cmp
out
loope
push
ret
jno
xchg
subl
scas
jbe
xor
mov
out
mov
movsb
sub
call
fs
mov
pop
test
insl
dec
add
pop
mov
jnp
icebp
cmp
push
call
pop
out
pop
arpl
push
iret
push
popa
pop
fdivs
fcoms
test
arpl
arpl
cmp
andl
insl
dec
sbb
mov
aaa
mov
jle
lock
aad
in
cmpsl
or
mov
aam
push
stos
fistl
jnp
jmp
je
add
mov
repnz
int
push
mov
push
sbb
shlb
mov
xor
out
fsts
cmp
sub
jmp
xor
in
ficoms
nop
and
fnstsw
pop
sub
cmp
inc
jb
adc
in
xlat
in
ret
cmp
into
dec
fldt
add
xchg
daa
xchg
imul
inc
rorl
je
jmp
and
mov
jo
gs
ljmp
fwait
sbb
out
bnd
subb
cs
inc
imul
xchg
sub
or
stos
pop
cmp
push
mov
xchg
out
and
xor
lret
js
std
push
adc
inc
shlb
js
data16
mov
adc
cwtl
or
add
into
test
sub
mov
addr16
pushf
icebp
inc
fidivrs
ljmp
jp
or
test
ljmp
mov
lods
shll
cwtl
inc
lcall
mov
mov
push
loop
jge
and
xchg
and
sub
ss
push
jl
mov
lcall
and
movsb
dec
sbb
lds
xchg
or
popa
jg
jo
mov
subb
iret
cmc
inc
jb
mov
dec
inc
sub
dec
in
dec
stc
cmpsl
rcr
push
add
push
ds
push
mov
stos
lods
imul
add
test
movsl
cltd
fs
cld
pop
push
inc
and
pop
dec
int3
aas
mov
pusha
lahf
insl
popa
icebp
push
popf
mov
sub
outsl
jne
push
and
int3
repnz
shrl
into
push
sbb
xchg
or
iret
rolb
xchg
fwait
sbb
lock
mov
dec
lcall
ljmp
sub
ja
lret
jg
sbb
ret
int
lcall
adc
push
xor
push
jne
xor
pop
mov
ret
push
mov
cli
mov
sbbl
iret
adc
inc
ja
call
mov
std
mov
jbe
insl
lods
xchg
and
nop
test
adc
or
shrl
adc
pop
bound
xor
addr16
iret
cltd
and
pop
mov
outsl
push
xor
mov
cld
pop
les
arpl
xchg
mov
aad
cmp
int
sub
jne
gs
and
jno
xor
sub
js
in
add
jbe
cmp
fsubs
js
sub
ljmp
sbb
js
fstl
inc
jnp
fs
xor
xor
sub
push
add
lods
push
dec
push
movsb
mov
pop
sub
sbb
out
leave
xlat
out
fcmovnbe
push
push
xor
cltd
jp
out
mov
mov
test
mov
je
pop
jbe
loop
xchg
popa
cltd
popf
push
shrl
mov
add
in
pop
daa
ret
add
lahf
mov
pop
out
stos
sbb
cli
and
ds
pop
imull
sbb
push
mov
push
push
sbb
sbb
or
cmp
mov
mov
arpl
pop
sub
fsub
pop
das
scas
in
xlat
cmp
cmpsl
inc
daa
fisubs
adc
shr
loope
gs
pop
ja
or
xlat
push
out
jecxz
shrl
or
lretw
sbb
stc
ja
add
imul
xchg
rorb
in
sbb
push
stos
xchg
pop
jg
xor
sub
dec
pop
adc
pusha
mov
push
lahf
lcall
aas
adcl
lret
imul
test
jp
outsl
dec
or
aad
dec
xor
mov
pop
xchg
movsb
jmp
add
mov
pop
jo
repz
mov
cmp
pushf
mov
outsb
xchg
xlat
mov
xor
sub
es
add
mov
cltd
les
movsl
xor
jmp
lcall
xchg
or
adc
push
jae
orl
push
pop
cltd
inc
fsts
std
ror
shll
mov
or
repnz
mov
push
lea
xor
lods
inc
add
sbb
and
lock
imulb
dec
mov
adc
adc
jg
mov
hlt
aad
inc
in
jne
pop
fbstp
orb
adc
mov
mov
lock
pop
addb
sub
test
imul
int3
enter
mov
out
or
stc
inc
pop
fcoms
jnp
fisttps
lcall
dec
cltd
leave
in
hlt
cltd
mov
mov
call
jne
loopne
gs
pusha
sbb
test
cld
in
push
adc
stos
shlb
in
sbb
fstpt
xor
loop
enter
rcrl
pop
and
cmpsb
mov
jmp
push
and
jmp
pop
mov
rol
jnp
bound
sub
or
sti
jae
les
cmc
xor
jb
mov
in
test
push
std
enter
inc
fistpll
in
xchg
push
cmp
sub
in
sub
inc
lods
mov
xchg
add
sub
inc
in
jne
outsl
mov
int
mov
push
jbe
mov
mov
cmp
fisttpll
in
sbb
add
or
mov
mov
outsb
xor
inc
mov
fistpll
fbstp
mov
iret
movsl
inc
aas
fmuls
push
push
push
call
aam
movsb
pop
jae
jle
pop
inc
xchg
rclb
jno
mov
jcxz
jmp
lret
out
mov
cmp
pop
pop
arpl
adc
int
in
jl
hlt
mov
pop
adc
mov
sub
cli
lods
xor
jo
cmp
add
or
fcoms
sbb
sahf
pop
cld
into
mov
scas
pushf
out
test
into
clc
incb
mov
push
lahf
and
add
jo
jbe
rcrb
aas
or
inc
inc
rcpps
pop
fmul
pushf
js
cmovne
inc
mov
sbb
dec
xchg
scas
push
sahf
xchg
lcall
sti
ja
pop
xlat
repz
mov
sbb
andl
in
cmpsb
mov
mov
mov
or
aaa
ja
mov
int3
cltd
push
adc
jno
mov
mov
pop
adc
xchg
andl
mov
mov
std
or
repnz
out
cwtl
test
xchg
mov
out
jo
cmp
or
stos
xorl
push
aaa
mov
shl
sub
scas
outsb
jae
dec
mov
mov
stos
addr16
mov
push
push
inc
and
insb
icebp
orl
jle
mov
pop
dec
cmp
push
pop
cmp
andb
aaa
xchg
jl
push
jge
popf
ja
lods
leave
std
xchg
cld
sbb
pop
push
enter
dec
cmpsl
or
push
pop
push
pop
ret
or
or
add
push
popf
stos
stos
mov
in
shrb
sub
repnz
movb
imul
adc
insb
xchg
mov
jg
push
loopne
test
jecxz
cmpsb
push
cmp
mov
gs
lds
test
outsb
xchg
in
mov
cmp
or
daa
test
cmp
inc
dec
shlb
xchg
mov
pop
ja
push
sub
imul
jne
mov
shrl
ret
jle
int
xor
push
iret
and
add
push
cmp
mov
into
sbb
cmp
jg
in
mov
mov
clc
push
inc
jmp
hlt
xor
dec
ljmp
jo
hlt
jp
add
mov
push
fildll
mov
cmpsl
add
subl
cltd
int
stc
pop
adc
jge
mov
ret
das
push
lret
pop
mov
jmp
and
aam
cmp
adc
and
aas
pop
shrl
ljmp
lea
testl
out
sti
out
adc
xlat
xchg
mov
pushf
dec
arpl
test
mov
sahf
add
sbb
or
ret
cwtl
jp
loop
xor
jl
pop
mov
aas
cltd
es
push
push
adc
fsubr
mov
loope
jne
into
js
lea
sub
push
daa
dec
xchg
stos
sbb
imul
fcompl
cmp
inc
repz
cwtl
mov
cmpsl
std
fwait
pop
mov
pop
or
stc
jns
test
mov
pop
bound
adc
push
push
sub
repz
clc
lret
mov
mov
js
loope
fimuls
mov
in
sbbb
movsl
lcall
push
sub
negb
arpl
adc
sarb
push
pop
loope
jecxz
and
stos
out
cmpsl
cmc
addr16
cmpsb
rcrb
or
ja
sahf
mov
sti
add
aaa
mov
lret
mov
sbb
ljmp
lcall
jb
mov
ljmp
mov
jecxz
nop
imul
cltd
xor
lahf
pop
sbb
je
ret
out
loopne
rolb
into
jle
sub
test
outsb
ja
ds
sbbb
and
mov
push
add
adc
fnstsw
dec
ret
sahf
test
jbe
addr16
pop
cwtl
cmp
aas
push
push
push
xchg
xor
dec
movsb
movsl
mov
jmp
call
add
cli
pop
mov
icebp
nop
loope
sub
sbb
sub
jge
xchg
movsl
iret
add
mov
inc
aaa
inc
xchg
push
insb
rorl
add
icebp
enter
leave
add
xor
pusha
jb
push
jns
scas
pop
sti
mov
rclb
repz
aam
scas
jp
jecxz
jns
jns
dec
sbb
das
xor
adc
mov
lds
and
ja
jmp
pop
imul
adc
out
clc
pushf
jo
sbb
idivb
mov
in
and
or
pop
ret
popf
rcll
cs
and
mov
cli
cltd
sub
jge
ret
popa
clc
das
jb
inc
movhlps
test
add
sub
push
neg
dec
inc
cmc
push
cwtl
sbb
push
mov
dec
gs
adc
sub
jns
sbb
cmp
dec
push
int3
jno
inc
outsb
repnz
mov
inc
mov
xor
push
out
add
aas
scas
lods
push
test
mov
imul
add
push
dec
and
dec
fmull
sbb
mov
sub
pop
out
pop
stos
aam
cs
out
lods
les
subb
cmp
ficoml
jno
fisttps
xor
pop
loope
outsl
fdivr
sub
jns
inc
pop
fisubrl
inc
xchg
push
xchg
mov
popf
adc
mov
push
cmpb
loop
pop
dec
add
pop
sbbb
inc
or
call
pop
dec
cs
sub
js
add
xor
shll
in
pop
push
xchg
jge
inc
ror
pusha
xchg
rclb
cmpsb
and
mov
sbb
std
inc
mov
or
sub
daa
mov
cld
pop
adc
ss
rep
sbb
test
fistpll
dec
sti
cmp
movsl
leave
ja
lock
mov
loopne
jmp
lods
cld
dec
xchg
fcomi
imul
data16
jno
out
push
push
mov
and
lcall
cmp
mov
add
jns
lea
mov
adc
jmp
sahf
js
mov
je
sub
mov
pop
incl
push
xchg
mov
shll
mov
xchg
mov
mov
sbb
mov
mov
xchg
cwtl
lret
mov
pop
je
out
inc
and
mov
or
aaa
lcall
incb
imul
xchg
pop
jge
mov
or
inc
mov
push
or
jmp
dec
mov
clc
call
mov
loopne
outsb
sbb
cmp
jmp
mov
mov
je
call
adc
sti
cmp
test
push
aas
cmpsl
mov
adc
cmp
mov
push
add
pushf
hlt
outsb
inc
lcall
jns
mov
int3
inc
ljmp
mov
mov
inc
out
inc
arpl
ret
adc
xor
hlt
mov
push
in
pop
aas
insb
xchg
sub
xor
cmp
cmc
lret
loope
ljmp
inc
push
inc
pushf
or
sbb
scas
rclb
shll
fiadds
mov
fiadds
aas
das
push
es
daa
or
or
jae
cmc
mov
pop
adc
outsl
adc
aam
inc
test
icebp
or
ljmp
xchg
test
lcall
fdivrp
shrl
fcoml
xlat
jae
xor
mov
pop
ja
loop
inc
hlt
data16
shlb
mov
add
adc
pop
sbb
ja
mov
sahf
ds
daa
imul
test
mov
aad
xchg
mov
xchg
sub
fstpt
adc
dec
mov
pushf
jne
mov
bound
xlat
pushf
std
and
repnz
mov
dec
push
int
cmc
jge
loopne
movsl
repnz
xor
out
ja
insb
cwtl
add
push
mov
push
xor
popa
imul
mov
clc
dec
sarl
daa
push
addr16
aaa
add
lock
arpl
out
xor
es
lret
shll
clc
sub
xchg
dec
sbbb
add
out
repnz
pop
xchg
or
or
jo
call
test
enter
in
mov
adc
test
int3
inc
nop
sub
ja
stc
cli
nop
in
dec
push
arpl
les
add
fadds
mov
bound
jp
cmp
sub
subb
jnp
stos
pop
aas
mov
or
jne
icebp
std
dec
lcall
movzwl
fnsave
mov
call
sub
xor
das
xchg
ret
movsl
loop
mov
mov
lea
xor
push
sbb
xchg
dec
sbb
iret
cs
sahf
push
sarb
xchg
out
loopne
xchg
sahf
mov
jb
sahf
pushf
jae
dec
shl
lods
in
cld
mov
in
nop
stos
jp
cmpsl
mov
ds
sbb
inc
ret
mov
and
push
push
sub
push
pop
mov
add
int
mov
stc
add
xchg
mov
movb
mov
sbb
ds
shl
cmpsb
mov
mov
jo
jbe
mov
stos
lods
dec
lock
sub
and
in
fimuls
mov
push
xchg
stos
pop
loope
push
sub
adc
aas
mov
icebp
pop
out
fidivs
xor
jo
push
sub
sub
dec
imul
lret
cltd
push
pop
lahf
mov
scas
xchg
dec
out
dec
insl
jns
arpl
mov
test
test
dec
inc
test
icebp
xor
out
cmpsl
das
lods
and
lahf
mov
pavgw
cmp
jecxz
xchg
mov
sbb
push
dec
xchg
jp
sbb
mov
imul
mov
nop
cmc
jge
jge
fdivs
sub
mov
ss
movsb
mov
dec
mov
push
cmp
push
rolb
xchg
push
xchg
or
sub
test
add
leave
cld
lods
clc
and
jb
fs
xchg
repz
mov
mov
js
dec
pop
mov
test
adc
sbb
cmp
lahf
js
or
mov
out
dec
jmp
pop
cmpb
pop
shlb
or
ret
sub
and
mov
mov
mov
stos
test
sti
iret
mov
rol
mov
incw
sub
inc
ficompl
ret
mov
xor
jp
dec
sbb
mov
dec
insl
mov
fists
scas
jns
pop
ja
mov
push
cmp
jg
cs
jbe
cmc
stos
mov
pop
sub
dec
jno
lcall
dec
or
les
popa
scas
adc
mov
mov
ljmp
xor
sub
xchg
add
test
mov
movsl
out
inc
and
xor
imul
scas
loop
iret
mov
in
loope
inc
sub
adcb
ja
arpl
push
lret
and
ss
fwait
in
popa
js
inc
mov
inc
sub
aaa
add
incl
aaa
sub
insb
fstpt
inc
packsswb
mov
xchg
outsl
sub
jl
jle
test
adc
clc
sbb
ret
fidivl
fistps
xor
pop
popa
cs
and
dec
int
pop
mov
inc
imul
or
mov
jae
enter
out
cwtl
test
add
jo
jne
and
rolb
inc
int3
pop
jmp
mov
and
xor
and
aaa
and
push
dec
jp
adc
jns
mov
adc
stc
sub
xor
cmp
jo
add
scas
push
push
push
stos
cmp
mov
rcll
imull
pop
mov
adc
add
pop
jp
repnz
or
test
movsl
adc
es
sbb
repnz
ret
sbb
push
mov
push
jae
sbb
pop
movsb
inc
xchg
push
aad
inc
inc
cmp
push
dec
fistps
test
adc
fstl
cli
jae
jmp
fsubs
popf
ja
cwtl
push
and
fildl
pop
push
xchg
addr16
pop
xchg
sti
xchg
test
add
mov
add
leave
xor
mov
std
pop
pop
lds
in
sub
data16
inc
sbb
movsl
sahf
jbe
test
pop
paddusb
mull
les
pop
imul
dec
fcompl
ja
xor
mov
insl
push
ds
sbb
pusha
cmp
dec
xchg
xor
sbbb
jnp
lods
mov
jne
jb
and
jg
push
test
aad
outsl
neg
pop
rorb
cmp
pop
stos
outsb
test
mov
cli
mov
in
in
stos
stos
loop
mov
dec
push
popf
sbb
addr16
mov
inc
ficomps
sbb
and
lea
adc
mov
or
in
mov
outsb
cmpsl
mov
push
dec
dec
aaa
jae
mov
inc
mov
insl
int
dec
in
rcr
test
mov
rcll
cld
lods
lcall
daa
rorb
dec
cmc
adc
in
gs
movsb
cmp
xchg
pop
push
fs
fldenv
lods
xor
filds
jno
push
sub
pop
sbb
scas
mov
mov
popf
ljmp
inc
out
mov
jne
mov
mov
push
leave
or
in
mov
jp
pop
repz
push
xchg
pop
lods
notb
fiaddl
pop
sub
and
notl
std
mov
call
sbb
lods
pop
in
in
cwtl
mov
imul
xor
sub
stc
jp
xchg
imul
hlt
inc
into
shr
dec
inc
ret
movsl
pop
test
test
lea
xchg
pop
cli
xor
bound
mov
movsb
sbb
xor
ficomps
xlat
sub
or
je
pop
xor
push
fwait
outsl
in
es
cwtl
adc
aaa
mov
mov
mov
pop
mov
rol
and
push
mov
jbe
loop
xchg
mov
int
les
jmp
add
js
jmp
dec
jno
push
push
lds
dec
jmp
mov
filds
test
enter
imul
cmp
jo
sarb
js
mov
fwait
test
roll
test
loopne
lea
push
add
sbb
mov
inc
inc
and
dec
fsubl
jle
add
ljmp
cmpsl
add
xchg
mov
sub
mov
je
fs
add
sub
cmp
iret
pop
mov
cltd
and
aas
jmp
pop
movsb
cmpsl
mov
fdivrl
xchg
xor
sbbl
popl
adc
ss
jge
sbb
das
outsb
faddl
out
gs
subl
mov
cli
ss
push
lods
jp
mov
sahf
test
nop
and
hlt
call
cmp
test
test
add
cmp
je
push
adc
out
mov
xor
sbb
movsl
sub
repnz
mov
daa
mov
in
and
loopew
fisttpl
fwait
push
adc
adc
sahf
addb
inc
ja
bound
scas
dec
mov
arpl
ljmp
dec
xchg
inc
or
pop
push
sti
mov
push
fsubr
fistpll
sub
pop
insb
fistps
pushf
jmp
or
pop
inc
clc
scas
jne
push
add
sbb
cmpsb
pop
lods
jno
jnp
loopne
sbb
mov
adc
aam
std
xchg
movsl
es
movsb
nop
outsb
and
imul
and
sbb
xor
cld
jge
cli
cmc
add
aad
lea
fimull
addb
jge
test
mov
stc
popf
or
fisubrl
dec
rcrl
nop
dec
cli
ja
cmp
cmpb
aas
ljmp
inc
adc
int
xchg
sahf
mov
aaa
cli
stos
jns
or
dec
jne
mov
dec
pop
mov
pop
jmp
mov
mov
dec
xchg
lret
icebp
data16
fs
xor
mov
xchg
sub
mov
or
in
aad
aad
cmp
icebp
mov
aas
fmull
jp
xor
stc
push
xor
or
aas
lods
dec
add
aad
imul
cmp
xchg
rclb
mov
jp
xchg
sbb
mov
into
cmp
jp
push
neg
pop
adc
cmp
out
dec
mov
sbbb
mov
xor
mov
in
stos
in
push
sub
rclb
adc
pop
cmpl
stos
fisubl
dec
dec
jbe
les
mov
fisubrs
mov
and
aam
sub
outsb
lods
pop
rclb
jb
ds
mov
sub
fcoml
in
leave
mov
add
lahf
js
and
shlb
mov
xchg
sbb
push
imul
out
adc
mov
xor
sarl
sub
and
aaa
std
xchg
jns
xchg
pop
sbb
test
pushf
jg
test
arpl
jmp
sbb
lods
add
add
inc
lea
and
sbb
jne
scas
scas
movsb
lcall
aad
mov
out
out
imul
cmp
shl
data16
cwtl
mov
dec
mov
popf
cs
pop
inc
cmc
push
xchg
push
test
sbbl
push
movsb
ljmp
rclb
jecxz
pop
shlb
scas
pop
add
nop
sbb
mov
push
sti
jmp
ljmp
pop
or
test
mov
test
es
mov
push
mov
xchg
xor
cmp
ljmp
std
in
and
clc
add
xor
add
cli
lods
inc
lea
adc
push
xor
movsl
call
xlat
and
data16
repz
adc
cmp
icebp
fnsave
jae
cmp
jecxz
mov
sarl
push
push
xor
inc
sbb
jno
inc
mov
aam
mov
dec
shll
xor
sub
sbb
ljmp
and
out
stos
mov
ss
and
push
mov
into
loop
sub
jg
mov
mov
lock
cmpsl
mov
cmp
push
js
xchg
ffreep
cmpsb
adc
in
ja
aaa
outsl
mov
sbb
or
data16
push
mov
sub
mov
add
icebp
insl
fsubl
rcll
int
xchg
scas
mov
add
iret
sub
pop
frstor
and
mov
pushl
dec
lock
push
fsubrp
pop
mov
inc
sub
scas
sub
dec
test
sahf
cli
ja
inc
inc
inc
insl
add
ret
test
add
inc
push
fdivrp
cmc
sbb
int
ret
pop
mov
std
cmp
dec
cwtl
sbb
mov
fcomip
push
mov
les
aad
cmp
adc
jns
lods
xorb
jb
sub
pop
dec
pop
stc
pop
icebp
add
sbb
das
pop
dec
dec
jnp
xor
cmp
iret
lock
xor
cmp
xchg
shl
push
jge
xor
mov
stc
dec
lret
shll
inc
pop
subl
push
loopne
sbb
out
inc
out
push
or
hlt
jae
out
aad
hlt
stos
shl
pop
pop
sbb
lds
jne
dec
cmp
mov
xlat
add
sbb
mov
and
sahf
xchg
inc
mov
in
call
mov
jle
leave
idivl
ret
push
mov
cmp
imul
inc
pop
hlt
inc
out
shll
jno
sub
jmp
jns
mov
cmpsb
and
in
movsl
push
inc
adc
popf
fcom
cvtpi2ps
push
xor
push
xchg
pop
push
push
je
sub
loop
and
xor
push
fwait
scas
stos
ds
add
sub
xchg
push
scas
daa
dec
lcall
cmpsl
push
mov
movsbl
shll
sub
int
aas
or
in
repnz
dec
js
scas
push
mov
fwait
xor
movsb
mov
out
jg
loope
adc
and
cltd
mov
aad
cmp
mov
dec
adc
clc
mov
cwtl
loope
out
or
fmul
push
push
jbe
xchg
popa
and
dec
sti
rcll
std
stc
fxch
out
xor
es
adc
out
aas
ja
mov
dec
pushf
xchg
pop
lock
idivl
sub
fwait
xchg
adc
aam
mov
sub
mov
or
pop
push
push
in
push
or
cmp
in
dec
push
rcrl
call
pop
test
sub
sbb
mov
cli
jae
lea
cmc
adc
pop
lret
notl
xlat
popf
ds
pop
mov
imul
je
inc
cmp
adc
cmp
mov
mov
pop
movsl
push
and
pop
negb
out
jecxz
sbb
arpl
fistl
lret
or
push
je
mov
cmp
in
jle
or
les
int3
aam
loope
push
pop
ds
jno
push
fisttps
pop
aaa
add
add
mov
pop
nop
adc
repnz
shl
addl
ret
cmp
jo
lahf
xchg
pop
clc
pop
jo
or
pop
mov
ljmp
and
cmpsb
lods
enter
gs
cmpsb
stos
out
pop
rcrl
lret
pop
imul
repnz
outsb
mov
sbb
call
pop
sub
shlb
fldenv
xor
inc
cmpsl
adc
or
mov
int3
in
and
mov
stos
loopne
or
inc
aas
add
sub
mov
xchg
xchg
adc
mov
mov
test
cmpsl
shlb
mov
fcom
cmp
and
sbbl
push
push
adc
adc
clc
sub
mov
leave
sbb
dec
pop
jae
and
adc
and
jmp
jae
data16
sbb
pop
jecxz
pushf
pop
shrl
xor
jl
test
shr
push
mov
dec
xor
int3
push
sub
xchg
cld
xchg
mov
sahf
jne
sti
mov
mov
mov
fcomps
sarl
cmp
mov
inc
idivb
fcomps
lret
aam
popf
rorb
imul
test
les
pushf
mov
lea
or
push
mov
int3
testl
rolb
es
in
cmp
add
xchg
pop
mov
xchg
or
andb
sti
mov
lods
js
fsts
mov
and
scas
ret
aad
sub
scas
add
aam
addb
and
aas
mov
and
femms
and
enter
movl
jl
sub
adcb
or
or
pop
mov
aaa
outsl
xchg
sbb
dec
fsubrs
fs
cmp
ret
pushf
ror
pop
or
mov
sbb
mov
lret
inc
mov
sub
je
nop
and
pop
pop
mov
ljmp
pop
bound
outsb
mov
or
lahf
sub
mov
nop
lcall
mov
push
sti
mov
cltd
xor
pop
decb
jge
les
mov
xor
mov
mov
dec
bnd
cmp
jmp
arpl
lahf
imul
cmp
lods
xchg
cltd
sti
loopne
ds
and
mov
lcall
in
or
push
mov
jnp
scas
dec
push
mov
aam
push
fstl
hlt
pop
daa
sbb
mov
dec
pushf
xor
push
xor
sbb
pop
sbb
aaa
je
add
xor
push
aaa
je
mov
mov
jle
jbe
mov
mov
cmp
jg
pop
insl
cmpb
pop
pop
in
push
inc
popa
imul
insl
xchg
imul
adc
mov
adc
push
mov
movsl
loopne
add
fdivs
mov
adc
mov
leave
sti
iret
repz
ror
pop
push
lock
jg
addr16
jmp
lret
add
test
dec
mov
aam
inc
mov
ffreep
inc
ret
mov
lahf
pop
cmp
mov
xor
cmc
sbb
dec
push
jecxz
xor
fsts
shr
sub
xchg
dec
push
sarl
add
xor
lret
mov
xchg
adc
in
out
loop
xor
leave
pop
enter
outsb
rcrb
cmp
lret
data16
and
sti
clc
inc
pop
cld
stos
lods
or
int
out
xchg
mov
lods
test
sbb
inc
rorl
outsb
and
in
test
pushf
shrb
jo
lods
push
fs
iret
stos
pusha
gs
test
fistpl
pop
cld
mov
mov
das
pop
jne
fidivs
icebp
test
leave
fisubl
and
mov
mov
fdivp
pop
or
out
cli
and
js
jb
pop
inc
push
pop
loope
pop
add
xor
mov
push
adc
and
jle
add
cmpsl
cltd
fdivs
cltd
dec
push
or
rcl
shrb
add
vmovapd
sub
xchg
sub
leave
aad
mov
inc
or
imul
push
xlat
repz
out
add
mov
or
jg
sbb
adc
push
int
mov
iret
cmpsl
jecxz
cmp
jmp
push
std
jp
inc
sti
mov
ficoml
int3
mov
xor
push
add
mov
sub
adc
mov
and
push
sub
and
sbb
adc
cmp
loope
fldt
cmc
hlt
scas
cwtl
inc
lds
rorl
and
jbe
imull
fs
cmp
pop
imulb
mov
inc
mov
rclb
mov
xchg
mov
mov
fcmovu
lret
sub
das
testl
push
sbb
jl
sbb
push
andb
add
mov
movsl
pop
fdivs
mov
sbb
push
add
push
gs
mov
add
aad
pop
mov
push
pop
imul
xchg
icebp
fnstenv
cmpsb
pop
sub
cmc
xchg
mov
jns
mov
mov
cmpsl
fstl
sbb
and
pushf
test
insl
lods
jnp
std
mov
in
sbb
pop
ret
mov
shlb
pop
stos
cmp
out
add
xchg
or
dec
fs
xchg
stos
ljmp
cmc
stos
fcomps
mov
adc
xchg
test
xchg
push
and
movsl
loope
leave
sub
lock
mov
rorb
pushl
rorl
dec
mov
pushf
push
jg
cmpsl
dec
add
fbld
stos
dec
movsb
mov
cmp
push
cmc
adc
fwait
xchg
cmpsb
pusha
cmp
sbb
ret
daa
test
cs
std
mov
jle
movsb
loop
sahf
adc
in
lea
cmpsl
jb
rolb
jecxz
imul
es
and
out
sbb
push
jno
scas
rcrl
mov
lahf
sub
mov
sub
xor
scas
sbb
rcrb
fs
mov
jbe
out
mov
push
movsb
mov
ss
pop
pop
xchg
cmpsb
ret
inc
loope
mov
add
dec
jae
cmpsl
and
sub
jnp
and
ss
sbb
jo
das
insl
insb
mov
popf
jmp
jns
jnp
xor
mov
daa
insl
cmpsb
push
repnz
insb
jbe
lcall
sbb
push
ljmp
fs
out
loop
movsl
cmpsl
xor
adc
pop
lahf
mov
sub
sub
push
jg
test
and
inc
push
mov
test
xchg
popa
cmp
repnz
mov
cld
cmp
sub
dec
push
mov
push
mov
sub
jge
push
cmp
fcmovne
push
addr16
pop
dec
call
push
outsb
cmpsb
sar
insl
lea
in
add
loope
sbb
pop
jns
and
jno
aas
xchg
mov
push
in
pushf
and
loope
or
jnp
jmp
negb
rorl
pop
cmp
xor
dec
jg
in
pushl
mov
ja
add
fldt
push
mov
leave
add
inc
cli
mov
imul
popa
lret
and
sbb
fsubrl
sub
jp
in
aam
add
fiaddl
push
sarl
loopne
insb
cld
jbe
sti
cmp
orl
dec
xlat
vmovhlps
arpl
test
ja
shll
lds
pop
adc
or
cmp
jnp
sarl
push
xor
int3
mov
imul
leave
daa
mov
inc
pop
ss
mov
roll
push
push
aad
out
mov
pop
mov
fcmove
or
xchg
mov
add
push
les
push
adc
pop
pop
fs
shrd
lcall
into
jmp
hlt
xchg
ja
mov
mov
or
mov
sbb
jbe
je
nop
inc
in
enter
sub
fiaddl
rorb
lock
dec
lock
cmp
fadds
ja
movsb
add
repnz
cmp
jp
lahf
decl
pop
mov
lahf
aaa
sarl
pop
pushf
out
stos
jnp
pushf
or
data16
lret
rcl
out
pop
sub
pop
jl
outsb
sbb
test
movsl
xchg
repz
xchg
loop
push
pop
xchg
cmpsb
sub
mov
mov
and
shrl
adc
xchg
dec
add
adc
mov
out
mov
rep
ds
mov
xchg
loop
stos
mov
lret
dec
outsb
dec
mov
bound
jnp
in
sub
je
insb
cld
jbe
xchg
xchg
jmp
movzbl
enter
cmpsb
pop
cwtl
and
popf
sub
cmpsl
insl
mov
jmp
mov
pop
sahf
xlat
lret
adc
jae
pop
rolb
outsl
xor
test
cbtw
ret
pushf
shlb
add
add
ds
mov
repz
fsubl
xchg
dec
shl
mov
mov
int
lret
iret
mov
ret
xor
add
lret
dec
loop
aam
shrb
jg
xor
gs
xor
mov
push
sti
lcall
inc
pop
xor
jae
addr16
stc
jb
aam
xchg
cmp
sbb
jae
mov
xchg
xchg
orb
xchg
int
adc
sub
mov
fildl
popf
ret
xor
lods
fsubrs
mov
mov
rolb
dec
icebp
or
adc
mov
jno
out
mov
xchg
arpl
push
or
push
sahf
cltd
fldenv
mov
roll
pushf
stc
push
bnd
pop
int
pop
jle
cmpsl
lds
adc
cmpsb
sti
addr16
inc
push
out
jmp
push
jmp
fs
inc
mov
dec
or
xor
or
cmc
sbb
sti
or
subl
fdivrs
jbe
test
popf
push
jp
xchg
imul
and
out
mov
insl
test
mov
sahf
mov
out
aaa
fmulp
cmp
dec
jns
push
and
mov
insb
mov
ret
push
and
popa
in
in
push
pop
pop
fcompl
mov
test
cld
outsb
test
nop
sahf
jle
mov
lods
sbb
es
inc
pop
enter
arpl
rorb
dec
movsl
mov
ret
mov
sub
pop
add
and
pop
push
or
jp
xor
cmp
popa
inc
ror
lods
xor
fst
pop
xchg
adc
add
mov
push
cmp
push
xchg
add
arpl
mov
mov
or
push
loopne
lahf
movb
push
mov
jne
mov
or
adc
xchg
or
scas
xor
inc
or
ja
mov
sub
imul
dec
xchg
aam
lret
pop
int
outsb
js
jmp
fs
jno
es
jno
in
dec
ljmp
push
aam
sahf
cwtl
push
movsb
push
push
xchg
or
dec
sahf
lods
and
test
jbe
and
pop
lret
repnz
out
cmp
stc
push
or
popf
ja
cmpsl
les
pop
cmp
loop
push
and
inc
in
dec
xor
in
xor
loope
in
cmpsb
push
test
lea
mov
and
les
sbb
inc
mov
dec
pop
cltd
jp
adc
decb
pop
in
add
push
mov
jle
jnp
repnz
and
jo
insl
lods
sub
aas
aad
enter
mov
cwtl
popf
inc
cmc
cmp
inc
pop
lret
insb
insb
mov
sub
scas
cmp
lods
and
sub
mov
dec
jg
nop
xlat
push
sarl
mov
add
dec
push
mul
pop
inc
mov
jle
xchg
inc
dec
sub
inc
fiaddl
mov
pop
cmp
scas
repz
push
into
sbb
sub
xchg
push
orl
in
arpl
adc
add
cmpb
jg
cld
mov
into
pushl
jecxz
imul
mov
negb
inc
sub
xchg
push
push
mov
or
cmp
jp
fwait
orl
or
lahf
sbb
add
mov
nop
mov
jno
jo
scas
mov
push
in
mov
dec
fnstenvs
out
xchg
cmp
inc
or
mov
imul
xchg
sbb
cmp
push
ljmp
xor
ficoms
xor
and
ljmp
mov
cmc
xchg
inc
mov
icebp
es
add
or
jo
cmp
jle
popa
out
jle
outsb
pop
fpatan
outsl
push
sbb
mov
push
andb
mov
ret
aas
cvttps2pi
add
and
sti
hlt
sub
xchg
js
jae
inc
je
pop
in
sbb
pop
cmp
arpl
dec
lea
jl
test
inc
xchg
cmp
inc
adc
lods
sub
fnstcw
ret
aad
or
sbb
or
mov
sbb
cs
loop
int3
and
add
cltd
rcll
ja
dec
and
xchg
maskmovq
testl
data16
push
shrb
sbb
lret
pop
xor
mov
call
add
pop
out
push
mov
adc
jbe
pop
add
test
sub
addr16
test
mov
xchg
in
add
cltd
sbb
inc
pop
mov
negb
mov
stc
imull
jbe
dec
push
fs
test
or
jge
and
out
out
dec
mov
mov
fistps
push
shrl
insb
rcrl
ret
subb
adc
movsb
in
sbb
jns
negl
loopne
aad
mov
lods
lcall
icebp
out
mov
or
outsl
jne
mov
or
or
dec
aaa
xchg
push
inc
or
xor
pop
ret
hlt
out
aad
lcall
ljmp
mov
aas
inc
ds
sahf
into
sub
adc
and
xchg
push
mov
sarb
xchg
fisttps
push
stos
insl
aad
mov
jmp
leave
mov
cs
test
daa
insl
bound
nop
mov
daa
ret
insb
pop
mov
cmp
call
test
fisubrl
sub
jbe
shl
jne
test
add
add
dec
push
dec
pop
aas
in
lock
cmp
add
das
add
cmp
xor
lods
cmp
ljmp
mov
add
add
push
fdivrl
jecxz
test
test
stc
fildl
fs
add
sbbb
mov
arpl
inc
mov
mov
lret
daa
shll
cmpl
out
push
push
ret
loop
mov
addl
sbb
stos
sar
test
inc
pop
xchg
out
xchg
push
js
loopne
or
ja
and
dec
enter
push
pop
adc
dec
add
or
push
jmp
mov
dec
push
add
mov
dec
ljmp
lock
jns
es
loope
add
popa
out
cmp
fisubrs
sahf
xor
mov
add
notb
cwtl
push
pop
and
test
mov
cld
add
jo
pop
ja
ss
jle
sbb
dec
int
jp
std
clc
lds
leave
sbb
lock
inc
fsub
jmp
lcall
daa
xor
xor
lahf
mov
jmp
pop
mov
add
lds
cli
test
cmp
pushf
inc
rcrb
cmp
adc
mov
mov
fisubrl
or
sub
pop
aad
xor
andl
sbb
fucomi
add
fdivrl
shll
test
sbb
or
punpcklbw
mov
fmuls
or
lods
les
scas
dec
dec
sub
cmpsb
fnstsw
sbb
or
mov
and
cltd
dec
xor
cmp
std
lret
jge
imul
out
xor
movsb
sbb
mov
inc
push
gs
daa
cltd
lahf
dec
jecxz
loopne
adc
push
out
sbb
adc
add
dec
jg
js
pop
jl
test
cld
fsubl
cmp
xchg
subb
loope
js
pop
fsubp
es
insl
xor
gs
adc
lds
inc
mov
test
push
shlb
andl
notb
dec
je
pushf
mov
js
mov
push
sub
mov
aam
repnz
jecxz
sbb
inc
xlat
je
sti
test
ja
sub
push
dec
add
jle
add
push
das
and
int3
fmuls
js
scas
add
cmp
dec
sbb
popa
mov
xor
mov
pop
cmpsb
rcl
dec
das
dec
daa
mov
push
push
jmp
lahf
mov
xchg
mov
or
lock
push
push
cwtl
mov
jno
mov
push
lahf
add
icebp
in
ficomps
testl
mov
je
pop
and
cwtl
push
pop
xor
andl
xchg
xchg
in
mov
push
mov
fsubl
popaw
mov
cli
xor
call
outsb
inc
add
sarb
pop
or
inc
lods
pop
add
dec
popf
jb
incl
xlat
fwait
jmp
push
cmp
rolb
loopne
sahf
push
xorb
mov
daa
arpl
fbstp
out
mov
roll
rcll
call
pop
popf
jo
mov
pop
xchg
stos
add
xlat
out
call
insb
mov
in
fistps
outsb
or
jb
fistpl
es
ds
push
jb
mov
push
iret
das
add
inc
lock
scas
dec
in
mov
and
cmp
imul
add
mov
push
roll
dec
iret
arpl
jle
fistpl
pop
cmp
lret
pop
cmpsl
xchg
mov
enter
sbb
dec
sub
sbb
sub
cmp
adc
xchg
push
push
mov
dec
scas
xchg
shrb
or
add
arpl
enter
bound
loop
sub
popf
popa
dec
inc
cld
lret
push
dec
gs
cmp
pop
mov
xchg
cwtl
std
outsb
and
xor
test
jo
push
inc
icebp
lret
bound
xchg
test
fstpt
jo
sub
pop
add
hlt
adc
push
or
leave
sti
mov
inc
rol
inc
mov
dec
push
repnz
cmp
dec
pusha
push
mov
in
inc
outsl
ja
push
test
cmpsl
pop
mov
mov
and
movsb
and
fbld
push
cmp
call
iret
lea
xor
in
out
lock
cmp
in
call
lea
jo
mov
out
popf
push
out
leave
scas
mov
sub
scas
pop
push
add
mov
loopne
jg
movsl
and
insb
into
push
inc
sub
ljmp
fsubl
jmp
cmp
mov
jnp
loop
lock
leave
mov
sub
dec
roll
out
add
jge
inc
or
and
popf
xchg
jns,pt
dec
mov
xchg
jmp
loope
pop
or
sbb
test
scas
btr
scas
add
adc
lds
movsl
ljmp
inc
out
xor
mov
jp
movsb
mov
inc
jg
mov
jns
sub
call
dec
adc
lea
iret
mov
loop
test
or
and
pusha
push
cli
push
add
cld
rcl
jo
pop
adc
dec
jl
and
inc
imul
jp
sti
fadds
xor
mov
mov
out
popa
mov
sbb
fstpt
fstpl
daa
adc
pop
clc
movsl
das
pop
aad
xchg
movsb
mov
sub
pushf
enter
fwait
mov
pop
ljmp
push
outsl
ret
out
push
adc
xchg
out
xchg
test
adc
daa
adc
das
mov
cmp
gs
push
or
enter
mov
ret
and
jo
int
push
stos
fsubp
mov
sbb
stc
pop
push
shll
test
out
inc
decl
data16
pop
inc
and
add
adc
mov
int3
mov
comiss
mov
fs
or
aad
ljmp
sbb
mov
mov
and
mov
mov
sbb
push
lock
or
and
add
gs
push
int3
icebp
out
jle
ss
cmp
mov
clc
or
pop
push
out
ss
adc
xchg
sahf
jle
mov
subl
adc
std
mulb
dec
dec
in
out
xor
xchg
xchg
push
mov
lcall
rcrl
mov
xchg
push
popf
jno
and
xchg
xchg
or
cmpsb
int
jl
push
xor
xchg
sar
cmpl
ret
dec
dec
push
add
in
shlb
xchg
ret
shrb
jg
mov
jns
dec
cmpsl
test
std
mov
idivl
js
sbb
cmp
into
lock
jmp
dec
inc
xchg
fnsave
lds
stos
es
sbb
xchg
inc
xor
push
sbb
inc
mov
faddl
sbb
in
jle
sbb
xchg
ja
repz
dec
xlat
xor
loope
mov
add
fldenv
lahf
pop
pop
or
mov
inc
aas
mov
pop
bound
cmpsl
xor
aam
jns
bound
xchg
imul
xchg
outsb
mov
out
jns
cs
add
fidivrl
pop
push
push
jns
dec
aam
xchg
pop
and
into
inc
loope
aas
or
adc
fwait
test
jae
out
in
mov
jmp
pop
jnp
or
outsl
push
lcall
mov
or
popf
pop
jmp
add
xor
clc
gs
mov
inc
mov
sub
sarl
clc
pop
jns
adc
jmp
inc
add
ss
ljmp
cmp
int3
inc
or
and
jmp
mov
or
dec
adc
and
push
sbb
mov
mov
imul
stos
push
in
xchg
shll
fcoms
ss
sbb
mov
loop
loop
add
and
arpl
mov
loope
pop
sbb
jbe,pt
lcall
lds
mov
or
repz
sub
sbb
push
js
adc
jbe
pop
push
xor
ds
dec
sbb
lret
and
mov
pop
and
test
fsubrl
out
mov
daa
cmp
clc
iret
dec
aam
popf
repnz
cli
js
jb
add
jecxz
mov
mov
shl
stos
pop
fcompl
mov
adc
mov
loopne
loope
mov
and
mov
mov
fldenv
imul
adc
mov
fabs
orb
xor
sahf
mov
in
stos
fimuls
div
into
movsl
xchg
jl
popf
xor
punpcklwd
movsl
and
and
add
in
iret
cmp
imul
out
loope
inc
sbb
ret
push
mov
les
mov
sub
outsb
test
adcb
mov
xchg
xchg
outsl
xchg
mov
test
pop
decl
inc
repz
out
out
cmp
lahf
fnsetpm(287
orb
or
mov
inc
mov
fs
push
loope
add
ja
je
call
fisubl
test
mov
mov
xchg
cld
ud0
addr16
mov
imul
push
stos
sub
pop
cli
cmc
scas
lcall
xchg
mov
jl
xor
push
xor
dec
sbb
adc
adc
loopne
sbb
jg
int
sti
aam
adc
imul
insb
inc
faddl
dec
xorl
add
in
cmp
inc
jnp
pop
push
stos
xchg
push
add
adc
sub
cs
into
add
sub
sbb
jecxz
inc
loopne
fidivrs
stc
mov
lret
int3
mov
cmpsl
adc
hlt
push
popa
int
fs
xchg
scas
mov
rcr
not
mov
cmc
in
adc
mov
jbe
push
stos
jmp
push
test
pop
js
jecxz
mov
data16
test
push
pop
inc
pop
imulb
xchg
mov
mov
mov
sahf
xor
push
shl
or
std
and
in
pop
rolb
stos
inc
test
mov
ljmp
adc
shrb
sbb
fildl
inc
jle
cltd
pushf
outsl
out
pop
fsts
dec
in
xchg
int
sbb
mov
mov
je
pop
clc
inc
ljmp
add
js
jnp
and
sahf
xchg
dec
cld
hlt
jecxz
xor
addr16
ret
loope
lcall
xor
fisubl
fcmovne
imul
sbb
notl
cltd
xchg
movswl
cmp
mov
pop
test
cld
inc
pop
push
and
xorl
push
cmp
andl
jmp
sub
leave
leave
stos
lret
pop
cmpsl
jp
out
sbb
pop
std
inc
add
xchg
dec
shll
je
iret
lahf
inc
out
cwtl
nop
movsl
cmc
inc
arpl
pop
mov
xchg
inc
jno
push
in
sbb
cmp
scas
pop
jns
adc
dec
pop
push
and
mov
mov
xchg
push
cwtl
add
stos
aad
imul
popf
fldenv
and
cwtl
add
add
xchg
jge
aad
add
mov
mov
mov
icebp
popa
add
xor
cli
imul
push
add
inc
add
sbb
test
cs
outsb
mov
pop
dec
cmc
mov
addl
roll
xchg
dec
jecxz
adc
je
arpl
xchg
and
lock
shlb
push
sbb
mov
mov
dec
jne
mov
or
mov
sbb
movsb
inc
aaa
mov
mov
push
ret
mov
dec
jbe
fwait
cli
or
jb
jl
in
or
mov
test
push
aad
dec
popa
repnz
je
dec
enter
xor
hlt
pop
push
or
dec
test
sbb
dec
jl
mov
push
shrb
in
mov
iret
es
jecxz
push
sub
and
out
pop
mov
sbb
dec
test
test
inc
jecxz
push
andb
fisubs
pop
cmp
ja
insb
push
mov
mov
loop
jge
pop
mov
hlt
cmp
icebp
xlat
mov
enter
ja
call
int
cmp
scas
mov
jbe
mov
mov
outsl
loope
icebp
and
mov
imul
push
sbb
jae
xor
leavew
ja
fmuls
mov
mov
push
adc
pop
rcr
xor
rcll
jb
push
push
mov
out
jnp
aaa
push
pop
stos
sbb
sub
je
push
pop
jg
or
subps
cmp
imul
arpl
shl
nop
pop
mov
pop
in
jno
out
xchg
fdivs
scas
push
jl
lock
adc
lock
dec
aad
mov
dec
add
movl
les
popa
daa
and
lods
cmp
shrl
push
add
aad
dec
cmp
and
loope
pop
lret
jp
adcb
jmp
jns
flds
aaa
hlt
out
sub
adc
mov
push
mov
js
pop
arpl
mov
leave
pushf
fwait
hlt
jl
fcoml
sbb
sbb
outsl
or
sbb
cmp
fdivp
orb
cmpsl
aam
scas
inc
inc
rcrb
in
iret
xchg
imul
or
dec
xchg
test
into
in
dec
aaa
arpl
mov
add
dec
shl
outsb
cli
add
push
rcl
outsb
fdivrl
sbb
aaa
push
mov
xor
inc
mov
lds
lret
sahf
fwait
ss
mov
inc
cmp
push
pop
nop
dec
sarl
mov
push
sub
jl
mov
xlat
jp
push
push
xor
repz
add
fnsave
roll
adc
call
push
mov
jp
inc
mov
jecxz
mov
or
or
std
imul
scas
and
jecxz
xchg
sahf
std
imull
xlat
ja
pop
iret
push
mov
pop
test
fdivrs
mov
cmp
fsubs
out
add
cwtl
dec
jbe
mov
sbb
push
aas
out
aam
pop
bound
nop
jns
xchg
and
mov
sbb
dec
fldcw
fildl
repnz
push
jns
sbb
clts
xor
andb
les
pushf
jp
add
movsb
or
or
movsl
test
in
inc
lcall
sub
test
stc
xor
lock
pop
mov
fs
in
bound
jb
adc
sahf
lahf
sub
nop
jmp
adc
mov
test
jp
jmp
inc
roll
xor
lods
jo
loopne
and
lods
sub
loopne
and
aaa
aas
pop
and
test
mov
xlat
ret
xor
mov
mov
pop
or
nop
jno
loopne
cmp
repnz
imul
xchg
sahf
pop
cmp
fnsave
mov
push
addr16
icebp
pop
sbb
xchg
jns
xor
ret
jbe
cmp
cld
push
fmuls
inc
scas
in
mov
lods
inc
test
xchg
mov
add
stc
cmp
dec
fistps
fwait
xchg
test
cmp
lods
push
mov
cli
sbb
dec
push
data16
or
or
mov
lahf
mov
cmp
mov
mov
add
add
mov
jnp
lods
sub
outsl
sub
scas
pop
pusha
pop
clc
iret
add
jle
push
or
jbe
mov
aaa
mov
push
loopne
ret
push
sub
push
pop
sub
inc
leave
push
sbb
sbb
js
mov
lahf
mov
dec
mov
scas
push
fcomps
and
lds
out
jb
repnz
mov
cmp
xchg
imul
scas
jmp
push
inc
add
cmp
sbb
and
add
bound
repz
xchg
sub
jo
inc
je
dec
fstpt
pop
mov
iret
adcb
shll
push
mov
jmp
jne
sub
data16
mov
fcoms
xlat
aam
lcall
jbe
cmp
addr16
ret
mov
fistpl
add
into
push
repnz
or
mov
dec
or
pop
xchg
add
push
inc
mov
xchg
sub
lods
out
ret
rcr
call
orl
xchg
push
mov
pop
mov
xchg
rolb
mov
inc
shlb
xor
pop
aas
movsl
pop
adc
mov
and
pusha
in
mov
or
push
dec
nop
inc
xor
inc
loop
hlt
and
push
cmpsl
mov
test
sbb
imul
iret
push
in
pop
pop
jns
aad
sub
outsb
mov
mov
adc
jne
xchg
out
in
mov
and
cmp
xor
adc
xlat
std
mov
xchg
das
hlt
inc
int3
dec
bound
or
pop
mov
dec
mov
push
xlat
imul
xchg
pop
push
bound
inc
jmp
mov
inc
nop/reserved
push
lods
add
cmp
repz
sarb
sbb
xchg
xor
jae
cmp
pop
cld
lods
scas
shrl
sbb
cmp
pop
mov
jbe
mov
loopne
pop
repz
xor
inc
ss
pop
cmp
shll
ja
xchg
xchg
xor
ror
or
jge
xchg
aad
sbb
rcr
into
lods
xor
xor
xor
cmp
sub
andl
fwait
mov
cmc
push
sbb
pop
sbb
mov
lock
pop
mov
push
inc
mov
jns
mov
xchg
dec
mov
shl
jne
ret
xchg
jns
das
dec
xchg
aam
jmp
push
pop
and
call
insl
dec
fisttpl
mov
xorb
lea
gs
jb
or
mov
jg
jns
mov
outsb
ss
sub
daa
jae
mov
aaa
popa
out
push
jle
xor
imul
ficomps
jp
xchg
mov
cmpsb
inc
xchg
dec
shrl
in
insl
push
stc
and
insb
jns
mulb
adc
mov
jl
movsl
out
lea
int3
test
adc
in
cs
mov
bound
aam
and
push
das
ja
dec
jg
hlt
decb
mov
mov
xchg
xor
iret
xor
mov
mov
pop
popa
jo
ror
cmp
push
fistpll
and
mov
pop
sbb
outsl
mov
inc
adc
pop
sti
cli
jb
or
aas
in
cmp
movsb
cmp
jo
xchg
loope
test
inc
cmp
jbe
push
hlt
lahf
out
cmp
repnz
jbe
inc
loopne
dec
xchg
lahf
or
jl
je
out
clc
maxps
aaa
pushf
icebp
loop
push
fdivs
push
lret
cmp
mov
sub
mov
test
inc
bound
cmpsb
pop
push
and
jb
jbe
fisttpl
sub
dec
jae
stos
push
jns
into
mov
or
iret
andl
enter
sbb
cltd
pop
cmc
mov
cmovae
mov
cs
cmp
pop
push
xor
dec
push
or
xor
cmp
add
dec
divl
inc
xor
mov
push
cltd
out
ds
inc
outsl
ret
push
adc
add
jge
rcrl
mov
xchg
or
jge
dec
aaa
dec
mov
stos
xchg
add
int3
addr16
dec
mov
clc
nop
cmpsb
jbe
js
pusha
push
pop
hlt
push
or
lcall
fdivrp
lock
mov
loope
and
or
mov
sahf
push
shlb
and
push
scas
repnz
iret
sbb
mov
jg
lea
push
push
nop
stos
pusha
inc
adc
test
lds
aas
push
adc
movsb
cmp
mov
sbb
add
sbb
fcomps
jecxz
cmp
adc
and
push
cmp
stos
or
lcall
outsl
cmpsb
xor
push
and
ja
mov
or
fchs
leave
sub
mov
jecxz
fdivl
jbe
adc
outsl
sub
push
pusha
insb
loope
sub
and
push
fwait
int
jns
out
jle
cmp
dec
scas
mov
add
mov
fisubs
leave
ja
aam
mov
jecxz
in
jg
movsb
sbb
xchg
pusha
je
sbb
inc
roll
xchg
fnstcw
jmp
mov
mov
cld
cmpsl
mov
test
add
loope
adc
nop
mov
fsts
dec
lret
sbb
lcall
adc
xchg
push
ret
hlt
cmp
ret
push
jmp
out
cmp
cmp
mov
pop
mov
sahf
int3
je
rol
ja
out
mov
dec
xor
or
or
mov
lea
insb
xchg
mov
xchg
ds
lcall
pop
add
fstpl
dec
push
ja
mov
test
es
or
mov
hlt
repz
subl
push
or
dec
in
andl
xchg
jg
cmp
sbb
aad
xchg
rclb
jbe
imul
pop
lea
jmp
fnstsw
lcall
subl
dec
shlb
stos
popa
push
arpl
scas
mov
js
mov
les
push
shr
sub
inc
mov
inc
push
jg
sbb
outsl
push
xchg
and
add
ljmp
movsb
andl
movsl
jae
popa
add
test
jmp
loopne
push
popf
push
jp
add
ss
insl
and
outsl
xchg
gs
xchg
adc
pop
lods
adc
stos
lret
push
fcompl
inc
add
negb
lods
fimull
imull
hlt
xchg
jp
push
mov
cmpl
es
not
mov
dec
mov
inc
loopne
and
jmp
rclb
pusha
pop
mov
pop
mov
stos
lcall
and
jns
test
jb
cltd
sti
cwtl
mov
push
pop
imul
cs
inc
das
jl
xchg
fxch
adc
ds
add
movsb
lret
sti
jae
pop
mov
out
add
lret
push
dec
push
subb
fildll
sbb
iret
mov
xchg
dec
sti
cmpsl
movsl
pop
push
pop
out
lea
or
call
insl
gs
lret
lcall
push
int3
jmp
shlb
bt
into
lcall
mov
push
dec
push
enter
jne
aam
sbb
cli
cmp
mov
mov
loop
fwait
repnz
arpl
dec
mov
in
or
repnz
daa
sarb
mov
jge
ret
cmp
push
cli
movsl
sti
xchg
cwtl
mov
ja
inc
or
jno
and
repz
jno
push
pop
dec
sub
mov
xchg
xor
push
daa
adc
inc
jl
xor
add
or
sbb
dec
mov
icebp
cmpl
icebp
add
cmpsb
xor
jmp
sbb
push
in
call
cs
stos
mov
jle
pop
int3
sahf
or
jg
and
dec
add
mov
push
cld
push
xor
or
dec
mov
xchg
fldt
or
stc
fadds
hlt
push
sub
lret
inc
mov
test
add
les
xchg
push
out
cld
sub
scas
xchg
pusha
xor
in
mov
fnsave
ficoms
in
out
scas
subb
pop
adc
ret
out
inc
or
sbb
sub
leave
jb
outsl
push
sbb
out
fnstenv
pop
sub
xchg
sti
test
lods
shlb
jnp
add
mov
xchg
mov
sbb
stos
jmp
add
push
popf
aam
jecxz
mov
inc
out
dec
jl
test
in
xor
imulb
inc
cmp
mov
or
ds
inc
jb
int
mov
test
out
dec
ja
repz
cmp
and
mov
mov
pop
dec
cmpsb
xchg
add
ds
sub
sbb
out
loopne
and
adc
adc
sbb
inc
test
lret
clc
int3
sub
and
pop
dec
or
adc
pop
jl
jle
pop
push
in
cmp
mov
aas
ss
mov
in
lcall
dec
icebp
xor
xchg
fisubl
stc
inc
cmp
jp
test
or
xchg
push
dec
andb
xchg
fstps
ds
cmpsb
adc
sub
and
test
fdivrl
push
leave
aaa
mov
adc
cld
cld
ja
in
cmp
fisubrl
cmpsb
sbb
dec
pop
ss
lock
mov
fidivl
push
lret
mov
mov
lods
sub
cld
fwait
lods
arpl
xor
sahf
lret
aaa
jne
sub
mov
inc
cs
ret
mov
and
mov
and
jg
inc
das
mov
pop
push
or
mov
pop
sbbl
insl
or
pop
push
jns
mov
mov
in
movsb
push
stc
pop
pop
movsl
push
in
fdivl
pusha
cmp
jb
stos
dec
aas
cmp
sahf
inc
js
stos
jnp
leave
nop
outsb
pop
pop
movsl
arpl
hlt
xor
push
push
mov
push
sub
lds
icebp
ja
jmp
dec
or
loope
xchg
andb
pop
jae
mov
adc
cmp
int3
pop
sbb
cli
movsl
test
xlat
xchg
lcall
sub
mov
xor
test
push
std
pop
add
or
cltd
xchg
cmp
mov
out
jmp
mov
mov
arpl
jnp
dec
mov
jno
sbb
fwait
jne
daa
or
push
fcomps
dec
cmpsb
movsb
sub
loopne
xor
shll
push
mov
in
outsb
sbb
leave
mov
sub
jns
repz
and
adc
dec
lods
xor
mov
jle
iret
sarb
sbb
push
add
inc
jno
inc
xor
cmpsb
mov
icebp
add
das
arpl
pop
pop
popa
sub
mov
je
insb
mov
iret
mov
movsb
lcall
testb
lds
fadds
push
lods
lods
xor
bound
xor
add
in
sbb
pop
and
push
fucomi
or
adc
imul
in
in
mov
lret
les
mov
aad
enter
cmp
cli
mov
pop
adc
jb
lret
cltd
hlt
push
mov
outsl
in
test
leave
fcom
xchg
scas
data16
aad
adc
movsb
cmp
xor
scas
lret
jbe
add
fld
inc
ss
xor
xor
dec
cmpsl
xor
hlt
dec
jmp
sbb
scas
rorl
adc
inc
push
mov
push
or
in
stos
xchg
je
cmp
mov
nop
sub
imulb
cmp
xor
in
out
sbb
test
insl
lods
dec
rclb
or
addr16
rcrb
inc
pusha
ret
push
loope
idivl
cmpsl
sti
xor
xor
fsubl
dec
rolb
lahf
inc
rcrb
sbb
adc
or
jg
imul
pop
cwtl
movsb
and
mov
push
lcall
cmp
ljmp
pop
daa
sub
push
subps
aaa
mov
movsb
cmp
and
idiv
lea
out
jb
add
call
sbb
adc
popf
loope
negl
inc
rorb
xchg
xor
inc
jae
stos
fcomi
popf
and
cmpsb
jbe
daa
or
pop
mov
arpl
lret
mov
rorl
mov
or
jle
pusha
pushl
stos
push
push
mov
scas
adc
mov
cmp
jmp
imul
scas
inc
fwait
sbb
and
std
mov
scas
xchg
pop
push
scas
push
gs
scas
and
mov
inc
ja
pop
in
xchg
xchg
fsincos
in
repz
push
mov
testb
push
dec
sarb
sub
cwtl
or
push
mov
jl
push
mov
or
je
jns
imul
outsl
jnp
cmp
mov
adc
cmp
xor
movsb
daa
sahf
xor
sub
lods
dec
test
lods
mov
sub
xor
inc
xor
insb
xor
adcl
repz
lods
call
shll
adc
inc
mov
fwait
test
push
sbb
jbe
addb
aas
pop
pop
pushf
pusha
fsave
aam
mov
cwtl
fcmovne
clc
or
nop
sti
cmp
mov
fwait
xor
xchg
inc
out
sub
fidivrl
cmp
mov
mov
or
hlt
jne
aam
sbb
mov
testb
fcomp
aas
xchg
daa
les
dec
fwait
pop
outsl
pushf
mov
mov
and
jbe
mov
inc
mov
test
xchg
bound
rcll
loopne
je
out
add
lret
jbe
jo
stos
les
push
stos
mov
adc
call
or
mov
cmpsb
je
mov
ds
dec
adc
ja
cli
pusha
decl
cmpsb
inc
movsb
mov
int
stc
push
lock
jmp
bound
dec
cld
xchg
js
or
dec
fld1
push
cmp
jge
shlb
aaa
adc
in
rcr
loopne
or
fnstsw
add
pop
mov
add
xchg
imul
add
clc
lret
lret
mov
andb
into
in
push
push
addl
dec
fldcw
popa
push
js
arpl
xchg
mov
ds
push
test
jmp
mov
nop
jbe
cmpsb
into
stc
mov
dec
jb
xchg
and
mov
inc
jp
inc
out
cmc
out
cmpsb
push
pusha
mov
add
leave
inc
cmp
sbb
fwait
inc
testl
adc
adc
clc
data16
mov
call
jae
xchg
fwait
inc
popf
adc
mov
push
dec
fwait
jnp
pop
call
imul
jb
add
sub
jl
lods
sbb
xchg
imulb
push
mov
test
shl
test
adc
and
sub
sbb
mov
imul
call
rclb
dec
mov
and
cmp
jle
inc
mov
in
fs
rorb
add
push
push
scas
mov
sub
lcall
sbb
mov
sbb
adc
lock
xlat
ja
rcr
inc
rol
inc
jmp
cmpsb
pop
or
xchg
fld
loopne
mov
das
orl
dec
scas
push
lods
aaa
mov
add
cmp
shr
mov
loop
mov
mov
pop
cmp
cmp
stc
stc
movsl
xor
clc
cmp
daa
xchg
xchg
adc
and
rcr
mov
mov
add
movsl
mov
mov
lock
popa
rolb
dec
sbb
mov
push
fs
mov
stos
or
mov
nop
aaa
cmp
pop
pushf
push
or
test
jns
punpckhbw
mov
jge
or
fsubs
dec
sub
sub
sbb
pop
xlat
rcl
xchg
sbb
or
jno
adc
pop
dec
data16
test
idivl
xlat
in
mov
inc
sbb
cmpsb
fldz
dec
lret
mov
sbb
sub
add
out
inc
test
aas
repz
add
pop
mov
jecxz
repz
dec
jg
jecxz
jmp
mov
pop
clc
nop
pop
out
mov
inc
leave
fwait
pop
cmpsb
into
lods
ds
das
xchg
and
imul
xor
sub
icebp
out
aas
roll
lea
pop
mov
jp
xchg
sbb
mov
in
orl
lcall
leave
scas
cld
ss
mov
mov
add
dec
data16
inc
fdiv
xor
rclb
lret
adc
js
mov
mov
xlat
enter
jmp
pushf
int3
push
pop
jl
and
jne
jae
mov
xchg
xlat
adc
jmp
pop
sub
cwtl
jge
cmp
mov
add
outsl
mov
stos
cld
addr16
popa
and
cmc
push
insb
dec
out
xor
jg
mov
sub
xchg
cmc
cmp
pop
into
mov
xchg
inc
add
int
imul
repnz
sbb
fwait
pop
pusha
dec
test
push
mov
je
lods
fsubrl
lret
testl
hlt
ret
mov
imul
add
push
or
jne
mov
sbb
sub
shll
nop
cs
mov
or
pop
sbb
xchg
out
std
dec
push
add
pop
stos
lock
jb
out
stos
cmp
scas
loop
cmp
pop
dec
sub
jl
mov
test
sbb
dec
repz
fwait
jmp
pop
lods
sub
xorl
adc
neg
adc
arpl
cmpsl
pop
pop
pop
mov
mov
and
adc
inc
xchg
icebp
jbe
fsts
sbb
dec
push
nop
out
mov
pusha
or
pop
in
stc
xchg
pop
xor
xchg
cwtl
adc
inc
inc
fwait
in
outsl
aaa
lods
push
dec
je
inc
or
or
frstor
lret
into
clc
xor
aaa
push
push
mov
adc
test
cmp
and
fbld
fsubrl
ss
xor
inc
push
daa
mov
and
cmpsl
add
dec
cmc
dec
aam
xchg
int3
and
test
mov
in
xor
xchg
sub
lock
sub
jns
or
mov
cwtl
mov
add
data16
std
insl
sub
fs
hlt
dec
mov
es
sahf
addb
inc
cmpsb
clc
rcll
sbb
inc
bound
movsb
cmp
les
push
sub
mov
fucomip
stos
cmp
push
mov
cltd
xor
and
flds
or
sti
pushf
fstl
test
sbb
xor
loopne
jp
dec
imul
jne
mov
push
sub
sbb
adc
outsb
sub
cli
insl
or
pop
xor
mov
sub
sbb
fistl
fisubrl
push
jle
mov
cmp
add
push
push
jmp
rcrl
xchg
imul
aam
push
jae
jmp
adc
test
add
xchg
out
jl
ret
cld
test
fisubrs
sti
lcall
sub
sbb
scas
into
cmp
outsb
stos
inc
incl
out
inc
and
mov
stos
cmp
std
add
or
mov
out
int
jne
cmp
mov
sub
mov
enter
ret
je
sahf
shrl
xchg
hlt
insl
sub
jae
int3
mov
push
cmp
in
inc
addr16
into
cmp
adc
test
and
push
pusha
jp
cmp
sub
mov
xchg
nop
js
jmp
adc
idivl
push
cmp
mov
inc
xor
inc
cmp
cld
adcl
stc
dec
pusha
mov
or
in
les
xor
push
lahf
fimuls
jb
cmp
mov
pop
adc
xor
mov
iret
add
ss
push
sbb
mov
std
mov
add
inc
xor
and
and
sub
sbb
push
adc
and
outsb
mov
adc
jp
sub
pop
call
lods
mov
xor
sub
mov
inc
add
popf
int
popf
div
sbb
cld
and
aad
gs
mov
outsl
int
out
lahf
in
andb
cli
pop
insb
fs
dec
jp
scas
mov
pop
jg
xlat
popa
ret
into
mov
call
mulb
mov
movaps
add
cmp
cmc
pop
pop
cmc
icebp
jge
popa
jne
mov
xor
dec
jmp
pushf
cmp
mov
faddl
dec
sahf
sub
adc
add
fidivl
cmp
pushf
repz
adc
add
adc
test
mov
add
xlat
pop
and
sub
loop
stos
sub
push
jmp
fistpll
out
ret
popa
push
rcl
daa
mov
add
call
test
lea
fs
in
jae
mov
push
push
cmc
mov
sbb
daa
fwait
mov
cli
hlt
test
outsl
lods
movsb
or
iret
adc
mov
jae
mov
iret
ds
xorb
inc
adc
rorb
insb
in
pop
jmp
dec
call
pop
ss
push
popf
imul
adc
bound
js
test
mov
adc
mov
shll
mov
or
cmp
adc
pop
jmp
popa
cld
add
push
adc
js
inc
or
dec
cltd
std
push
xor
xchg
sbb
pop
in
mov
int
fstpl
xchg
jo
mov
aas
jle
or
xchg
inc
mov
and
ja
mov
inc
mov
adc
pop
jbe
adc
jnp
ja
jmp
xchg
insl
or
lea
push
adc
fisttpl
mov
inc
dec
stc
adc
addr16
add
cmpsb
pop
pop
mov
negb
xchg
ficomps
hlt
jl
mov
daa
ret
ror
stc
adcb
into
in
mov
mov
dec
shlb
jg
dec
cmpsl
out
or
lds
xchg
stos
fldenv
pushf
pop
mov
add
mov
push
and
mov
iret
mov
jae
mov
pop
cs
mov
sub
inc
sbb
imul
lret
pop
xchg
jne
loope
enter
sub
fnsave
andl
test
fstpl
cmp
lret
fs
xchg
lods
jp
mov
stos
mov
xor
ret
jp
mov
xchg
mov
jp
lahf
jb
xor
add
nop
push
pop
dec
fildl
iret
vpshaw
add
mov
cmp
jge
inc
adc
lcall
mov
push
xor
sbb
jg
jns
add
push
xchg
add
call
lods
and
xchg
jnp
pop
mov
ss
mov
jmp
mov
mov
mov
mov
jecxz
jl
add
lret
add
inc
test
rclb
xchg
out
gs
gs
push
jp
xor
arpl
scas
shrb
ret
shl
inc
sub
mov
or
rolb
inc
pop
add
outsl
xchg
ss
mov
test
loopne
or
clc
mov
or
push
cmp
pop
push
pop
mov
popa
jl
fdivr
mov
sti
iret
cltd
xchg
cmp
ret
sbb
xchg
rclb
adc
xchg
dec
lret
mov
in
xchg
inc
fildl
scas
push
adc
or
mov
mov
mov
enter
fiadds
xor
scas
outsb
jecxz
inc
sahf
cmc
add
repnz
imulb
fbstp
fwait
and
cli
mov
pop
jnp
pop
sahf
lods
or
pop
bound
push
int
xchg
mov
sub
push
stos
or
pop
sub
ret
xor
ret
cmc
add
js
dec
add
imul
mov
movsl
outsb
pop
pop
fcomp
lahf
test
fadds
or
les
push
cmp
xchg
sbb
pop
outsl
icebp
rorb
xor
mov
repnz
push
notl
mov
mulb
arpl
pop
call
inc
mov
fmulp
ret
sbb
mov
xchg
imul
mov
xor
lcall
dec
pop
loop
push
mov
icebp
mov
fstpl
or
cmp
nop
jns
xorb
mov
cmc
jns
mov
and
add
cmpsl
imul
xlat
and
call
push
push
ljmp
fcmovnu
and
and
mov
divl
fistpll
lret
inc
mov
dec
jns
sub
ret
cli
or
cmpsl
cmp
mov
or
in
insb
xlat
inc
imul
mov
xchg
sbb
mov
incl
in
and
sbb
fld
cmpsl
sub
fimuls
or
xor
js
outsb
jmp
mov
or
mov
sarb
movsb
pop
inc
test
les
jnp
shrl
jo
inc
push
sbb
popa
pop
mov
jne
int3
pop
xor
xchg
jno
pusha
mov
sbb
es
or
push
mov
aam
mov
xlat
movb
jnp
ljmp
ret
stos
push
push
cli
les
outsb
sub
mov
add
into
pop
insl
inc
mov
imul
xchg
in
lods
mov
and
gs
xor
pop
in
hlt
pusha
cld
pop
fisubrl
push
fistps
incl
or
push
insl
inc
and
or
sub
in
and
lret
pop
xchg
addr16
into
xor
pop
movsl
shrb
lock
adc
cli
cmc
inc
pusha
addr16
lods
xchg
lahf
das
sub
scas
lea
lods
sub
sbb
mov
sub
jo
cmp
xlat
ja
dec
sbb
cmc
mov
decl
pop
insl
or
stos
orb
movsb
mov
jb
xor
loopne
xchg
pop
or
mov
sub
out
mov
cmp
std
icebp
add
sub
jecxz
shlb
sub
jp
xchg
pop
push
dec
sti
fiaddl
push
xor
or
fcomip
in
jp
into
xchg
pop
lock
mov
ret
mov
repz
sar
pop
fucom
dec
scas
outsl
addr16
lds
insb
outsl
sub
add
cmp
ds
enter
sbb
sbb
xchg
in
insl
pop
cmp
sbb
jae
test
dec
sbb
out
aas
mov
clc
fisubl
jbe
xchg
lret
xorl
in
cmovge
mov
or
inc
out
repz
inc
lock
sahf
aad
les
pop
leave
in
popa
push
icebp
push
mov
adcl
adc
mov
hlt
push
shlb
xchg
cmpsb
sub
push
pop
jb
fs
or
adc
push
addr16
lahf
pushl
aad
sahf
mov
dec
mov
xchg
test
test
pop
imul
xchg
mov
cmpsb
inc
scas
enter
sub
scas
fidivrs
mov
cmpsb
jns
mov
insl
inc
cmc
mov
loopne
iret
push
inc
mov
das
sbb
jno
pop
sub
add
xchg
aas
mov
and
push
xor
sub
ja
pushf
mov
inc
iret
pop
icebp
mov
bound
inc
sbb
xor
gs
mov
xor
jbe
in
stos
pop
test
cmpsb
adc
mov
sbb
lods
lds
inc
jge
movsb
icebp
test
push
int
pop
adc
sbbl
negb
and
cs
jge
mov
push
push
dec
data16
sbb
mov
adc
mov
adc
jne
fcomps
jle
imul
mov
mov
data16
xchg
test
pop
fs
xchg
je
insb
sub
or
hlt
pop
dec
mov
sbb
daa
and
loopne
sub
xor
iret
mov
adc
mov
in
fadd
cmp
cmp
mov
add
les
je
jno
mov
inc
jge
jnp
sbb
lods
dec
add
lret
mov
sbb
sub
jne
shll
into
xor
inc
ss
rcr
imull
xchg
sarl
into
cmp
ja
sbb
pop
sub
shll
and
sbb
and
add
int3
sbb
cs
adc
imul
imul
in
and
mov
cmp
mov
inc
adc
mov
scas
push
mov
mov
or
dec
pop
mov
mov
arpl
mov
dec
pop
inc
mov
mov
test
add
xor
into
enter
add
inc
cltd
fldt
inc
enter
xchg
cld
cld
jns
cmp
mov
loop
int3
push
movsl
mov
outsb
mov
jg
push
aam
into
aad
xchg
popa
int
jb
inc
movsb
je
idivb
out
inc
lds
mov
mov
divl
into
add
pop
adcl
call
mov
jmp
jl
xchg
inc
mov
jno
dec
pop
jae
popa
inc
cmp
dec
mov
push
jo
add
enter
fmulp
jg
fsubs
push
cwtl
adc
xchg
sub
jb
push
int
push
mov
and
cmpsl
fcoms
fstl
push
daa
cmp
ja
jae
mov
ss
imul
push
and
push
push
int
mov
clc
pop
arpl
les
enter
jae
mov
mulb
or
lret
orl
xor
mov
outsb
rclb
ljmp
push
mov
and
test
test
add
cmpsb
adc
imul
icebp
ror
cmp
cmpsb
pop
cmp
imul
pop
inc
loopne
pop
leave
sbb
pop
or
cmp
pop
push
pop
mov
je
mov
and
sbb
mov
mov
jno
icebp
mov
jne
ficompl
mov
loope
iret
cmc
jmp
jmp
cmp
xor
dec
test
xrelease
adc
xchg
pop
fstpl
jns
mov
fstl
call
push
xor
loope
push
or
xor
jnp
cmp
into
dec
roll
mov
jne
and
out
sbb
xor
imul
push
adc
pop
aas
dec
sbb
outsb
outsb
add
adc
xchg
addr16
mov
ret
out
lcall
popf
stc
stos
aam
push
or
or
cmp
pop
xor
xchg
or
stos
gs
push
cwtl
lock
cltd
fsubs
fldcw
repnz
sti
xlat
loope
push
inc
enter
fnsave
pop
repnz
cmpsb
sbb
ja
adc
addr16
sub
inc
jmp
jns
mov
or
inc
cmpsb
std
outsl
ljmp
stos
xor
out
jns
push
mov
stos
std
insl
jo
outsb
inc
scas
sub
pusha
loop
out
mov
movsb
xchg
mov
and
cmp
adc
adc
inc
std
or
adc
out
test
jge
push
and
dec
out
aas
push
jnp
test
push
xor
subb
popf
mov
adc
and
xchg
bound
in
mov
xor
fdivrl
fsub
dec
std
jns
adc
arpl
xor
fnstcw
mov
xchg
outsl
mov
pop
jns
in
popa
mov
push
mov
add
repz
adc
cmp
or
fwait
xor
jle
cld
cltd
jne
mov
or
add
hlt
jg
add
adc
add
nop
mov
add
push
push
aas
movsl
sbb
cs
cmp
fnstsw
pop
or
rol
mov
popf
jmp
lahf
xchg
fs
ret
in
jmp
adc
xchg
addr16
cltd
jb
cld
mov
pusha
fstpl
jge
jae
xchg
dec
sub
mov
xor
bound
outsl
lahf
cmpsl
lods
in
in
shrl
dec
cwtl
mov
nop
jo
push
adc
adc
push
pop
sahf
cmpsl
mov
stc
xchg
loopne
aad
xchg
sbb
adc
fimuls
pop
xchg
sub
cwtl
xlat
jno
loope
jp
push
xchg
or
jl
cltd
in
dec
jae
sti
test
jno
xor
outsb
or
lret
dec
imul
in
sub
ja
mov
add
lock
fadds
mov
lcall
cmpsl
jp
je
jle
in
cmp
mov
je
inc
in
data16
push
push
dec
lcall
add
imul
mov
shr
mov
test
sbb
jg
push
aad
mov
jle
push
les
mov
mov
sub
mov
or
bound
push
jbe
test
pop
imulb
loopne
aas
cltd
outsl
rcr
sahf
cwtl
inc
leave
ja
test
add
lds
fs
stos
inc
iret
add
pop
add
fimull
sbb
sti
clc
push
int
ljmp
and
into
cld
add
xlat
fs
imul
lcall
pop
pop
and
xor
mov
ljmp
add
dec
movsb
jmp
pop
insb
sub
mov
pop
ja
mov
xor
cmpsl
and
or
and
push
inc
imul
lcall
xchg
and
loop
sti
lods
xor
loope
faddl
seta
adc
clc
dec
or
cmp
into
sub
loopne
or
shll
dec
pop
sub
sub
inc
add
ret
add
sub
mov
fisubrl
push
test
fimull
cltd
mov
push
push
push
fcmovnu
filds
mov
push
pop
jge
mov
adc
popf
rolb
mov
add
lds
sbb
add
xor
andl
movsl
or
and
add
fildll
repz
ds
mov
sbb
sbb
fbstp
or
aaa
mov
mov
xor
repnz
adc
sbb
packuswb
repz
xor
xlat
adcb
xor
sti
test
ss
push
sar
lds
inc
push
jge
inc
jnp
xor
rcr
sub
fs
sbb
mov
mov
or
loope
movsb
mov
cmp
mov
sbb
and
adc
sbb
shll
adc
mov
ds
xchg
fcoms
fcomps
stos
cmpsb
ror
rcrb
sub
and
mov
jecxz
test
push
iret
jmp
and
mov
lret
and
call
or
movsb
mov
mov
mov
in
mov
subl
push
push
cmc
sbb
fcmovnbe
and
cmp
push
jmp
pop
out
and
lods
mov
cmpsb
mov
xor
in
cmpb
pop
out
outsl
sub
int3
add
insl
jne
popf
sti
nop
sbb
pop
xor
push
sbb
mov
lods
scas
mov
push
jl
adc
sub
fstpt
mov
push
repz
push
sub
lret
pop
sbb
jo
mov
xor
mov
test
sub
gs
pop
js
cmp
lea
ret
mov
or
out
cltd
dec
notl
vpmuludq
sub
jmp
cmpsb
test
adc
inc
mov
repz
mov
fs
stc
fst
push
lock
pop
jecxz
mov
sbb
ffreep
ds
inc
dec
ja
icebp
into
push
divb
rclb
in
lahf
add
ret
dec
push
cmpsl
in
push
insl
fucomp
iret
push
sbb
dec
or
fs
jns
xor
cli
mov
into
xchg
movsb
mov
sbb
mov
mov
gs
jo
jge
pop
xor
sahf
xchg
rclb
mov
dec
inc
in
out
int3
xor
sub
xchg
dec
hlt
out
shl
outsl
pop
je
aaa
xchg
repz
sbb
cs
call
lret
test
inc
xchg
jg
rclb
icebp
lahf
xor
mov
cmpsl
gs
je
icebp
mov
pop
sbb
mov
inc
es
loope
ret
pop
test
pop
into
clc
fisttpll
ficoms
fdivp
fwait
mov
icebp
and
add
lahf
mov
mov
repnz
sahf
or
adcb
cld
inc
fldenv
dec
rorl
mov
stos
out
gs
mov
popf
pop
sbb
in
push
rclb
push
ret
insb
in
push
aad
jns
or
sbb
out
cmp
add
jno
mov
mov
lds
icebp
jo
dec
test
xchg
jge
push
push
pop
push
dec
xchg
pop
push
icebp
rcll
test
cmp
sbb
ficoml
call
dec
pop
pop
clc
mov
sahf
xor
nop
cmpsb
scas
insb
push
cwtl
inc
cmpsb
mov
shl
pop
ficoml
int3
dec
xchg
inc
adc
ret
sub
das
scas
arpl
jge
mov
adc
sti
ss
incb
cmpsl
imul
leave
add
lea
xchg
stc
mov
mov
pop
test
jp
leave
loope
pop
les
scas
mov
lahf
xchg
popf
pop
pop
pop
shll
cmc
in
sbb
arpl
lds
xor
mov
dec
repz
add
bound
ja
gs
jb
out
jnp
sub
int
out
mov
stc
pop
dec
movl
cld
jae
pop
jg
xchg
shl
and
ret
mov
dec
popf
cs
mov
push
mov
cltd
fwait
jecxz
push
cmp
addb
lds
addr16
ja
inc
adc
inc
lock
mov
push
push
inc
pop
out
mov
jmp
pop
push
mov
insl
dec
test
test
xlat
dec
into
jns
sarb
and
into
push
and
ss
fdivl
outsl
fisttps
xchg
mov
out
push
fs
in
mov
out
sub
cmc
pop
dec
cmp
aam
push
cmp
jle
in
into
and
add
int
mov
pop
scas
push
xchg
in
and
adcb
sub
mov
fldl
lahf
es
dec
das
xchg
pop
xchg
stos
lret
cltd
mov
data16
sarb
adc
mov
mov
cli
xlat
adc
cmp
push
pop
lock
out
mov
mov
imul
cs
mov
xchg
aaa
andb
inc
mov
pop
movsb
push
icebp
stc
jg
and
xchg
xlat
xlat
xchg
or
push
push
xor
mov
add
ds
dec
mov
mov
repz
lahf
adc
cltd
clc
lock
jmp
cmp
mov
lcall
bound
jno
sub
rcrb
or
xchg
jge
xchg
adc
mov
cli
out
and
dec
in
cmp
sbb
imul
xchg
push
aas
out
and
ja
sub
int
xchg
dec
mov
dec
ljmp
jp
mov
xchg
push
lds
loop
adc
adc
jne
fistps
and
push
cmp
outsl
push
xchg
mov
push
push
sbb
cmp
push
dec
pcmpgtb
out
dec
mov
and
push
jns
xor
call
fldl
inc
jbe
jle
xor
adc
adc
mov
mov
test
sbb
jns
dec
push
addr16
mov
repz
xor
pop
fnstcw
xor
mov
sti
movsl
mov
mov
inc
pop
dec
roll
loopne
push
adc
xchg
xor
cmp
sbb
in
clc
pop
push
test
push
mov
rol
sub
pop
test
inc
bound
xor
lret
pop
movsb
aad
sbb
mov
mov
push
mov
aad
movsl
push
cmpsb
orl
stc
cltd
jbe
lret
stos
or
push
ja
cltd
dec
mov
and
xchg
adc
ja
pushf
gs
nop
jo
or
xor
push
nop
add
std
mov
pusha
lock
jmp
sbb
test
dec
add
stos
sub
pop
pop
mov
dec
cmp
and
or
lods
push
repnz
xlat
out
or
out
sub
std
pusha
xorl
pusha
in
sti
fnstenv
mov
test
scas
mov
es
pop
ret
jl
cmc
push
adc
pop
hlt
push
addr16
xchg
push
popa
mov
mov
fsubl
jge
mov
fidivl
push
sub
xor
pop
in
pop
lds
loopne
testb
setle
mov
dec
nop
dec
jl
dec
add
out
adc
inc
pop
lods
push
imulb
pushf
insl
push
or
mov
ret
adc
lods
aaa
add
sbb
push
xlat
imul
mov
mov
fwait
sbb
shrl
adc
popa
mov
xor
cmpsb
or
rcr
mov
xor
jns
dec
dec
jnp
and
mov
pop
das
pop
xor
outsb
push
mov
sbb
test
push
pop
fistpl
aaa
jns
jb
ret
mov
in
xchg
add
sti
xchg
jmp
pop
scas
shrl
test
mov
cmp
mov
icebp
imul
inc
dec
int3
cmpsb
inc
push
pop
add
xor
jmp
scas
stos
inc
andl
cmp
in
dec
mov
xchg
xchg
icebp
adc
in
loopne
xchg
ja
mov
shr
fcomps
xlat
into
in
pop
xor
pop
clc
mov
xor
orl
adc
sub
pop
int
int
mov
mov
mov
movsb
arpl
xor
mov
inc
int3
fst
cmpsl
sahf
popa
lods
mov
mov
hlt
repnz
xlat
ss
pop
in
or
and
mov
rcrl
or
gs
pop
mov
lret
push
mov
bound
mov
decl
test
ljmp
rorl
fs
mov
stos
das
push
mov
ljmp
stos
mov
pop
pop
lahf
push
jno
xchg
outsb
lahf
push
inc
cwtl
enter
lock
mov
push
insb
pusha
insb
mov
and
xchg
xchg
xlat
mov
lods
idiv
icebp
orl
pop
pop
test
sti
fs
int
rorb
cmp
stos
adc
mov
inc
test
cmp
insl
je
enter
push
dec
sub
xorb
cmc
repz
sub
insl
es
icebp
sti
xchg
push
push
mov
lea
pop
aas
test
add
adc
lock
jne
aas
nop
inc
stos
or
fwait
cmpsb
fmul
das
or
dec
push
mov
and
add
push
addr16
push
popf
popa
jae
scas
dec
out
mov
loope
iret
mov
das
or
imul
pminsw
lcall
mov
outsl
flds
jb,pn
inc
mov
ja
mov
stc
aam
outsl
js
jns
sub
mov
test
mov
mov
mov
pop
pop
repz
cli
jp
dec
xchg
pop
add
ror
sbb
xchg
jmp
jo
or
movsb
inc
subl
aad
lock
lahf
jne
cmp
jne
cmp
push
push
adc
int
sub
jae
pop
inc
mov
or
and
push
lds
jbe
push
insl
inc
mov
popf
cmp
xchg
jns
cli
adc
xchg
add
scas
sub
adc
xor
sti
movb
mov
incl
push
cmp
pop
addr16
cmp
gs
mov
mov
xlat
mov
fdivrp
mov
mov
cli
push
mov
cwtl
add
test
cli
dec
xchg
dec
xor
jnp
call
pop
ret
pop
mov
test
outsb
cmpsl
pop
in
add
mov
push
into
push
rcr
leave
ffreep
ret
lock
mov
pop
scas
aaa
gs
imul
push
mov
jae
sahf
fcmove
pushf
fmul
adc
test
inc
in
jns
leave
jo
adc
pop
add
negb
add
fwait
cli
and
pop
repz
jmp
dec
movsb
push
fcompl
pop
xchg
cmp
xlat
pushf
subl
sbb
cwtl
jmp
fcmovu
sbb
test
mov
xchg
and
inc
daa
mov
mov
or
xchg
lcall
mov
sbb
mov
or
mov
jle
ret
inc
mov
mov
fidivs
pop
outsl
mov
xlat
mov
test
sti
add
setbe
lahf
push
icebp
dec
mov
test
stc
iret
cmpsb
aaa
outsb
jb
lahf
in
mov
orl
push
xor
pop
out
hlt
data16
dec
mov
mov
xorl
sub
mov
xor
imul
gs
adc
insb
mov
or
mov
mov
in
lcall
ret
cmp
idivl
test
xor
mov
js
xchg
mov
mov
mov
push
push
mov
stc
lock
or
xchg
lea
out
cmpsb
and
push
pusha
leave
dec
sbb
ret
mov
das
or
inc
mov
stc
fincstp
dec
add
xor
cmpsb
cld
jne
scas
mov
pop
in
push
lcall
mov
lret
adcb
enter
cli
lret
dec
lcall
sub
fs
mov
test
je
stos
mov
sarb
lcall
sahf
in
jmp
lahf
addl
or
push
bound
fidivl
xor
lds
or
mov
sarb
mov
test
iret
sub
int
out
movsl
stos
xchg
stos
add
cld
movsl
fisubrl
mov
scas
and
cmp
test
and
mov
sub
sub
cltd
or
nop
aaa
sub
adc
mov
aas
dec
push
js
mov
cmpsb
stos
pushf
inc
stc
outsb
mov
inc
loope
in
ret
mov
clc
ds
dec
jb
sbbb
pop
sbb
xchg
push
lods
mov
aam
xchg
sbb
in
rclb
lods
sti
push
cld
lods
fs
loope
nop
sbb
outsl
lret
aaa
xchg
cld
add
inc
in
popf
decl
mov
or
std
popa
lock
xor
add
xchg
insl
das
aam
es
inc
aas
cmp
and
adc
imul
clc
inc
and
fcoms
std
out
test
push
and
or
inc
xor
mov
and
enter
jmp
and
xor
push
les
jmp
or
daa
fsts
mov
fldl
ds
mov
pop
pop
scas
mov
fimull
cmp
mov
sbb
push
in
jmp
sarl
push
sub
push
clc
dec
and
lods
test
xchg
stc
push
jne
in
jge
and
inc
pop
push
shrb
and
adc
mov
mov
ljmp
pop
mov
mov
mov
jbe
add
pop
lock
or
push
cwtl
addr16
or
jmp
xchg
jne
outsl
inc
rclb
shlb
daa
fs
add
xchg
fstpt
movsl
lods
je
bound
shlb
push
or
repnz
jne
mov
sbb
jo
push
jl
je
loope
mov
mov
rcrl
mov
stos
stos
inc
xor
int
mov
push
adc
sti
or
lcall
mov
aas
adc
add
mov
sub
sbb
and
mov
push
add
xor
fcompl
xchg
add
jns
sbb
aas
xor
mov
aad
or
jp
nop
dec
popa
xor
and
cwtl
xchg
push
shlb
popa
andl
pushf
mov
dec
sahf
xchg
rol
jo
sti
mov
sarb
pop
mov
aas
mov
xchg
cmc
cmp
adc
add
ja
pop
jno
lret
pop
in
in
out
je
std
dec
in
push
push
xchg
ss
or
ss
scas
sub
fbstp
and
in
arpl
cld
iret
testl
pop
test
cmp
sahf
inc
dec
mov
mov
imul
push
and
xor
dec
xchg
aam
out
dec
jp
mov
pop
sbb
xchg
sub
data16
sub
lds
mov
dec
or
jbe
sub
pop
fbstp
add
repnz
lcall
pop
jl
mov
popf
add
add
inc
sub
xchg
mov
mov
lahf
movb
cwtl
jne,pt
gs
clc
ret
cmp
pop
aas
shr
xlat
sahf
xor
dec
jne
jns
or
in
fs
roll
popf
insl
inc
jnp
out
icebp
dec
pop
xor
rol
and
dec
ja
xor
xchg
repnz
push
ja
dec
sub
idivl
sub
jmp
mov
js
mov
jne
xor
in
adc
mov
dec
mov
add
movsl
pop
testl
hlt
sub
dec
jecxz
push
insb
in
mov
mov
add
enter
cmpsb
jecxz
add
jb
fistps
cmpsl
push
mov
mov
sahf
sub
sub
hlt
adc
cmp
cli
add
mov
test
jecxz
ret
mov
fxch
xchg
inc
cmp
loope
jae
fmull
mov
je
jo
aaa
pop
and
fwait
insb
mov
xor
imulb
inc
lds
dec
mov
fdivrs
mov
imul
pop
push
jp
pushf
inc
in
pop
jns
adc
jmp
dec
jae
inc
inc
mov
mov
leave
lock
leave
test
loop
pop
mov
rcrl
lods
insb
push
dec
shlb
idiv
lahf
xchg
bound
sub
mov
testl
ret
movb
jae
push
push
daa
adc
stos
cli
sbb
sub
in
and
mov
push
jno
sub
xor
mov
mov
orl
sub
xchg
cmp
out
pushf
adc
adc
popf
mov
daa
xchg
outsl
shrl
wrmsr
or
jbe
mov
test
in
sub
pop
pop
adc
inc
sbb
mov
jl,pn
sbb
int3
cmc
cld
addr16
pop
or
adc
test
adc
je
scas
push
and
or
add
bound
fisttps
pop
mov
pop
dec
mov
scas
imul
movl
jl
inc
or
jns
mov
push
lods
jmp
jge
jns
push
pop
sub
loopne
je
sbb
add
add
enter
lds
mov
jmp
fisttps
std
adc
fiaddl
aaa
mov
icebp
pop
adc
and
test
pop
out
jg
and
shll
pop
test
aas
das
mov
ret
dec
insl
cltd
push
outsb
push
cld
xor
popf
testl
ljmp
daa
int3
sbb
jno
js
or
les
sub
cs
sub
push
cmp
rolb
or
cltd
nop
jbe
scas
cli
in
out
and
xchg
out
in
adc
in
add
in
xchg
pop
or
or
sbb
mov
push
jp
or
pop
mov
jne
ds
out
es
pop
std
add
dec
idivb
fstpl
fisubl
jg
leave
jmp
mov
repz
jecxz
xor
jnp
cmc
cmpsb
mov
pop
mov
cmp
mov
inc
push
cwtl
jbe
adcb
rcl
test
mov
inc
imull
incl
mov
jl
push
push
sbb
mov
mov
ret
mov
jecxz
push
adc
and
leave
fs
call
loopne
popa
push
nop
xor
or
jl
xchg
sub
out
iret
popf
lahf
ja
mov
lret
cwtl
sbb
fidivs
push
nop
inc
sti
push
rcl
loopne
lcall
fwait
mov
jnp
aaa
addl
stc
mov
adc
jb
pop
lret
js
mov
xchg
out
cmpsb
cmpsl
fdiv
inc
in
sub
mov
lahf
in
dec
mov
pusha
loop
xchg
lock
rcl
inc
popf
adc
lods
into
sub
pop
cmpsb
mov
sub
mov
shll
arpl
daa
gs
mov
mov
sbb
push
or
into
movsl
sub
inc
mov
out
loopne
test
out
inc
call
pusha
sbb
test
arpl
mov
pop
sub
fldcw
push
add
cmp
xchg
xor
loopne
repz
mov
mov
inc
jne
mov
dec
ficoms
aam
push
pop
push
enter
push
sbb
cmp
mov
popl
sahf
mov
outsl
insl
pop
adc
nop
mov
fisubs
lret
fwait
shrl
xchg
mov
sub
or
mov
jb
sbb
cmp
jle
ds
push
rorb
sbb
mov
popa
xchg
cmp
das
push
or
cwtl
push
inc
xor
hlt
ret
test
mov
fsubr
fdivrp
sub
push
movsb
sub
mov
test
dec
in
mov
aas
into
iret
lock
xchg
out
imul
nop
add
dec
inc
sub
sti
sbb
fwait
jmp
fnstcw
out
jecxz
mov
ja
xchg
mov
dec
fistpl
or
fstps
mov
ds
popf
ss
cltd
test
mov
fistpll
je
std
lock
or
mov
mov
stc
mov
popf
scas
into
gs
jae
out
mov
pop
ret
movsl
push
imul
out
lds
std
sbb
ja
test
jl
dec
add
pusha
lret
aaa
xor
shrl
fstpl
movsb
outsb
ds
dec
arpl
jmp
sbb
push
push
imul
pop
jnp
inc
ss
js
mov
fnstsw
fwait
or
fcmove
jnp
mov
xchg
movsb
cmp
ret
loope
push
add
lea
xor
lock
push
cmp
pop
aad
sahf
push
cmp
cmp
faddl
xchg
dec
pop
fnsave
sub
adc
lods
dec
pop
in
repz
imul
or
inc
mov
lods
nop
inc
jge
lock
into
lret
pop
lret
pop
lcall
out
inc
and
test
cli
lret
data16
insl
xchg
jno
pop
pop
orb
cld
js
mov
pop
sbbl
out
add
shl
adcb
mov
xor
xchg
aad
jmp
xchg
sub
fwait
push
lcall
and
xchg
lret
mov
out
fisttps
cmpsl
pop
push
cs
out
push
stos
sbb
fcompl
pop
lret
imul
cmpl
dec
inc
aad
test
pop
jo
jmp
xchg
push
fs
lods
mov
fadd
fucom
outsl
xlat
int3
push
mov
ret
pop
dec
fwait
lock
loop
ljmp
dec
pop
or
pop
sbb
popa
stos
or
js
cmp
mov
xor
cld
or
jle
cmp
push
leave
daa
or
mov
mov
cmpsb
mov
jmp
aad
mov
cwtl
jb
mov
cs
addr16
das
inc
sub
in
dec
cltd
and
sub
mov
dec
sub
xor
jle
cmp
stos
es
ljmp
push
cmp
adc
lock
cmpsb
or
and
aaa
loope
or
imul
mov
xchg
movsl
imul
out
int3
mov
xor
imul
jp
jne
adcb
in
mov
les
stos
shll
xchg
jmp
pop
mov
mov
cmpl
cld
push
pop
movsb
cmpsl
pmullw
lea
aad
adc
ja
jg
jnp
cmpsb
imul
jae
inc
mov
cltd
sbb
out
mov
mov
orb
mov
xchg
daa
pop
mov
rcr
dec
outsl
mov
ljmp
and
push
dec
lea
aaa
cmc
scas
adc
shr
cmp
pop
int
fcomip
scas
cmc
fwait
sub
shll
mov
jae
std
inc
xor
sub
mov
xor
inc
fsubrs
mov
inc
repnz
cmp
jp
ret
in
call
push
and
adc
mov
push
arpl
xchg
adc
test
sub
iret
sbb
lea
and
add
xchg
xchg
aas
andl
test
adc
jbe
insb
lds
ficompl
push
adc
or
ja
imulb
arpl
jne
test
enter
pop
and
insl
lret
mov
or
sbb
adc
sbb
pop
or
gs
sbb
lsl
jne
daa
addr16
push
ja
cld
mov
mov
cs
sti
cmpsl
scas
dec
mov
mov
stc
movsb
adc
lret
mov
mov
pop
in
adcl
jecxz
or
mov
add
jg
sbb
mov
gs
adc
sub
outsb
lret
and
insl
or
mov
jg
imul
lcall
mov
in
jecxz
and
fwait
nop
and
cmp
mov
xchg
cmp
push
stos
mov
mov
and
xchg
or
pushf
or
mov
or
xchg
fdivrp
xchg
push
push
imul
gs
mov
dec
sarl
or
cs
lret
or
cld
bound
dec
icebp
xchg
dec
cmp
pop
iret
data16
mov
nop
sbb
xchg
xor
or
mov
es
out
push
xchg
data16
ret
xchg
aas
add
push
or
sbb
loop
in
cltd
and
inc
cld
mov
sti
cmp
inc
popa
lret
fnstcw
fists
outsl
xlat
test
popa
xor
int3
mov
mov
out
leave
add
aam
mov
mov
or
mov
jg
push
movsl
inc
stos
jp
mov
outsb
mov
les
cmp
lahf
clc
push
fdivr
ret
int3
push
mov
mov
lahf
int3
inc
jge
xchg
das
dec
push
addr16
das
gs
mov
mov
xor
adc
xchg
cmp
mov
movsl
mov
cmp
fcom
jmp
dec
add
xchg
repnz
pop
or
mov
cli
cli
sbb
repnz
fisubrs
push
lcall
cmp
movsl
mov
test
test
lock
fldcw
jne
std
inc
push
adc
cmpsl
and
nop
sub
mov
sub
mov
xor
jne
movsb
popf
cmpsb
xor
movsb
cmp
pop
xor
jns
jno
shrl
sub
fcoms
pop
push
out
jno
xorl
test
sub
fcompl
mov
sub
insb
mov
ret
test
jg
adc
push
pop
pusha
add
or
mov
aad
movsb
sbb
aad
ret
sub
int3
add
inc
sbb
push
in
fdivl
dec
test
pop
xor
push
andb
lock
int3
or
ja
xor
popa
dec
ror
leave
and
or
arpl
loopne
fisubs
xor
fiadds
jnp
test
add
shrb
sbb
xchg
mov
rolb
mov
xlat
or
pop
subl
fisubrl
movsb
xchg
test
fcompl
int
sub
dec
and
mov
cmp
sahf
test
in
xor
and
jmp
jno
test
stc
mov
inc
mov
idiv
sub
in
pop
fwait
dec
lods
push
leave
mov
xchg
cmpsb
js
fsubp
repz
fs
mov
xor
fucomi
xor
sbb
xchg
xchg
rclb
push
pop
loope
insb
dec
adc
ljmp
test
add
mov
xchg
sub
into
insl
mov
fisttps
testl
mov
sbb
add
mov
icebp
bound
jmp
test
inc
addr16
mov
fdiv
push
pop
in
mov
mov
or
inc
add
sub
rorl
mov
cmp
mov
sbb
stc
aas
and
mov
test
mov
xlat
jo
inc
andb
fsubp
test
dec
push
lods
adc
int
lea
mov
sbb
jne
dec
jae
xchg
cld
add
sub
add
adc
bound
shlb
push
stos
push
mov
ja
stos
sarb
adc
inc
roll
add
adc
ljmp
xchg
out
jnp
xor
inc
or
cmp
mov
adc
lea
adc
mov
and
out
inc
lock
seto
test
in
testb
fisttpl
movsb
mov
fistpl
sub
pop
jg
mov
mov
lcall
repz
sbb
adc
cmp
lock
mov
xor
or
into
xchg
jb
les
mov
dec
cli
lock
ds
mov
mov
lods
out
mov
xor
addr16
rorb
jbe
leave
cmp
cmc
lea
gs
inc
pop
mov
mov
fsubrs
rclb
daa
mov
and
flds
add
xchg
std
outsl
idivl
add
cmp
bound
push
xor
fimull
cmc
adc
mov
int
test
outsb
fistpl
jp
mov
test
push
mov
xor
out
lock
fidivl
inc
cmpsb
iret
call
sub
mov
mov
push
jp
imul
sahf
push
adc
mov
scas
out
ficoms
test
shll
aad
lret
loopne
jmp
mov
repz
inc
out
fisubl
dec
jp
cli
loopne
sbb
adc
or
in
ret
call
pop
fstl
cmpsl
fists
cltd
push
xchg
es
in
aas
pop
inc
leave
insb
cmpsl
cltd
movsb
xchg
xchg
mov
fstpt
lcall
sar
xchg
jno
in
mov
outsl
push
sub
or
sub
loop
repz
fs
inc
dec
bound
rcrl
adc
mov
cs
stc
push
pop
and
jnp
cmpl
call
jb
dec
sub
pop
mov
mov
imul
fsubr
stc
pop
mov
ljmp
inc
repnz
out
xchg
roll
data16
mov
mov
cmp
mov
rorb
stos
and
push
je
fstps
sub
sub
jl
imull
adc
mov
jge
and
and
jmp
bound
fcoms
fbstp
call
or
shlb
dec
scas
xor
iret
sti
rolb
aas
repnz
jo
mov
ja
nop
ljmp
cmpsl
orl
ror
pop
ret
xor
xchg
adc
mov
fsubrl
das
jecxz
stc
push
ret
and
push
xor
or
int3
cmpsl
xchg
arpl
jns
shl
cmp
popa
sbb
lea
out
jp
bound
push
xor
sub
out
arpl
cmp
aas
iret
fistps
pushf
test
arpl
jbe
sbb
sub
sbb
rcrl
mov
fs
jne
adcb
mov
xchg
sub
jl
jns
add
xor
mov
sbb
pop
daa
js
xor
mov
sub
adc
lcall
dec
insl
or
jb
cmc
add
icebp
fldl
cmp
and
icebp
xor
jnp
jmp
ds
pop
xchg
imulb
pop
jle
sbb
sbb
sbb
jo
out
aas
shlb
jge
cmc
test
dec
dec
xchg
fsubp
cmp
clc
out
xor
es
and
fdivrl
jnp
cmp
adc
inc
pop
rcr
mov
cwtl
cmp
pop
xor
sbb
rorl
jge
movsb
loop
sub
shrl
or
cld
inc
lret
jp
xadd
movsb
sbb
mov
into
das
fldt
jb
mov
es
dec
jge
xor
dec
shrb
clc
mov
and
inc
sbb
mov
sub
int3
push
pushf
xorb
pop
pop
lret
xchg
xchg
dec
xor
rcrl
lea
sub
xor
push
nop
mov
sbb
out
ljmp
test
imul
les
imul
dec
jmp
jge
ss
mov
push
negb
mov
sbb
aas
push
cli
andb
movsl
jmp
adc
cmp
mov
push
mov
push
inc
ja
cltd
inc
dec
dec
inc
push
sbb
sbbb
push
cli
bound
pop
push
add
cmp
mov
bnd
xchg
sub
aam
pop
sub
inc
xchg
xchg
les
push
sbb
cmpsb
dec
push
dec
xchg
fdivrp
xchg
les
in
sahf
add
cli
clc
dec
lods
pop
sbbb
mov
xchg
or
addr16
test
movsl
mov
gs
cmc
test
push
out
or
cmp
pop
xor
pusha
push
push
in
and
bound
jle
xchg
xchg
cmpsl
ret
fwait
sub
dec
cld
aas
push
lods
popa
data16
or
je
xchg
js
dec
cwtl
rclb
mov
push
push
mov
mov
sbb
dec
stc
adc
rcrl
add
xchg
fstl
mov
or
fisttpl
jns
inc
repnz
push
cmp
pop
in
in
mov
popf
xchg
sub
loope
sar
les
pop
cmc
mov
aas
test
adc
mov
jmp
outsl
add
add
fldl
adc
into
fwait
scas
cmp
sbb
or
ss
test
iret
xchg
insb
xchg
push
addr16
decl
or
movsl
cmp
push
jecxz
add
mov
jg
fstpt
xchg
mov
push
or
test
dec
call
dec
or
leave
popa
shrl
cwtl
push
and
popa
scas
cli
loope
icebp
fcmovb
aaa
cmp
sti
imul
cmp
jge
out
push
lock
sbb
aam
mov
insl
fwait
mov
mov
insl
push
and
sahf
loopne
push
in
mov
scas
xchg
cmpsb
iret
jae
add
pmaddwd
movl
dec
jg
mov
and
icebp
sbbb
cmpsb
int
loopne
xor
adc
jmp
mov
out
mov
xor
cmp
lret
cli
pop
mov
imul
aas
dec
andb
scas
test
add
ds
clc
andb
out
cmp
xchg
test
xchg
clc
or
xchg
mov
push
jmp
popa
fistpll
shlb
add
shl
sub
mov
mov
mov
pop
lret
push
shll
jae
ja
mov
or
lock
das
xorb
sub
adc
scas
sbb
cmp
xor
lods
push
pop
mov
es
cwtl
fmul
hlt
in
mov
xor
xchg
mov
jg
inc
in
xlat
fs
sub
pop
inc
inc
sub
push
ss
inc
out
scas
xchg
sbb
shll
mov
pop
sarb
sub
xor
rcrb
je
cmpsl
inc
push
lcall
jbe
sbb
add
outsb
adc
jne
jnp
push
and
lock
push
sbb
add
adc
push
arpl
mov
das
jae
sub
dec
jg
adc
mov
inc
bound
es
inc
push
jae
in
fists
inc
addr16
mov
rolb
stos
xchg
mov
inc
push
pop
je
pop
aad
jmp
ljmp
adc
or
and
xchg
or
add
mov
dec
ret
sbb
popf
push
fmull
int3
cmp
add
jp
cmp
or
pop
add
fidivrl
clc
xchg
sub
aaa
arpl
addl
and
repnz
loopne
subl
sub
movsl
inc
and
pop
ret
mov
pushf
lret
pop
cmp
sub
fcompl
jle
pop
ret
nop
test
xchg
cli
js
mov
test
dec
cli
or
mov
push
dec
mov
adc
push
xor
mov
push
flds
pop
adc
int
xor
sub
and
sbb
jle
xchg
jp
sbb
test
stos
jg
sub
jns
sub
test
xor
inc
stos
sarb
or
mov
xor
lahf
xor
cs
mov
mov
jle
in
dec
daa
pop
outsb
out
lcall
fiadds
jmp
loop
fidivl
popf
sub
sbb
push
push
mov
add
or
inc
lock
and
push
xchg
rcll
inc
cld
xor
sbb
je
pop
pusha
add
inc
int3
jb
sti
sbb
jns
stc
cmp
clc
fiaddl
sub
jbe
push
push
adc
sbb
adc
mov
pop
push
push
sub
or
arpl
sub
ds
add
cmp
out
lcall
dec
cmovg
clc
xor
mov
jbe
ret
outsl
lock
pop
mov
pop
lock
or
repz
hlt
fbstp
inc
into
mov
insb
adc
gs
ds
mov
test
dec
add
repnz
sti
mov
or
mov
ret
jp
cmp
dec
mov
hlt
mov
sar
cld
loopne
je
and
push
psrlw
pandn
mov
inc
mov
jp
push
lcall
cmp
lret
pop
and
cmpsl
xchg
out
add
xor
out
mov
dec
call
add
cwtl
fsubrp
inc
insl
mov
popf
sar
push
std
dec
inc
pop
nop
cld
mov
filds
sub
sub
pop
sub
push
test
mov
je
and
shr
stos
fldcw
aaa
clc
add
jns
insb
imul
js
sbb
push
sub
push
movsb
outsb
lock
loopne
loopne
ljmp
dec
pop
mov
in
dec
imul
outsb
mov
mov
movsb
cmpsb
icebp
fidivl
jnp
out
sbb
sub
cmpsl
jne
rcll
sbb
dec
xchg
or
xlat
mov
jnp
add
pop
jmp
adc
sbb
addr16
adc
sbb
mov
cmp
test
movsl
test
cmpsl
xchg
inc
inc
loopne
sbb
jmp
orb
cmp
mov
popl
dec
lret
and
ret
mov
xor
loop
lahf
fisttpl
hlt
out
rol
push
shr
lea
sbb
fs
add
xchg
ja
gs
and
push
cmp
push
and
jno
fsubs
dec
and
cld
xchg
push
lret
jne
ret
mov
inc
fcmovne
js
aaa
mov
lock
shlb
outsb
movsl
or
fisubl
push
push
sbb
mov
and
ret
push
fisttpl
pusha
jg
xor
mov
sub
jne
xor
add
cs
ss
leave
outsb
sub
out
inc
mov
pop
cld
jb
add
mov
stos
pop
or
daa
cmp
push
sahf
mov
sahf
adcl
mov
repz
outsl
or
xor
jp
pop
adc
jno
mov
cltd
inc
pop
dec
cmpsb
icebp
repnz
das
mov
fmull
pop
inc
rcl
or
or
push
mov
pop
mov
gs
pushw
stc
dec
lock
sarb
inc
imul
aad
out
adc
xor
bound
push
mull
cmp
enter
sub
sub
push
add
lds
xor
in
cld
xor
icebp
xchg
scas
xchg
mov
fldenv
sub
lret
popa
mov
dec
test
sarb
test
dec
gs
sbb
mov
in
pop
clc
jg
mov
outsb
fwait
mov
lret
add
xor
sub
and
xor
ret
xchg
or
out
popl
or
pop
aaa
or
xchg
stos
loopne
and
cmpsl
scas
push
xchg
addb
das
jno
lea
fdiv
pop
dec
and
test
jl
jmp
pop
lahf
inc
call
fcmovnu
mov
out
cltd
jp
xor
jecxz
insb
jno
lods
in
mov
cli
jmp
aas
test
jl
mov
xchg
xchg
cmc
mov
pusha
jne
loopne
xchg
push
int3
lods
or
ja
inc
sbb
insb
push
sahf
leave
xorb
dec
cmp
jmp
adc
lahf
pushf
in
jge
sub
daa
xor
aaa
js
and
lret
inc
cld
popf
pop
push
test
outsb
ret
xchg
rorb
add
jno
dec
sbb
xchg
pushf
mov
jp
insl
leave
sbb
std
inc
flds
mov
fnstcw
dec
rcl
sahf
push
or
shl
mov
jge
inc
sbb
ds
stos
push
cmc
cmp
cs
ror
shll
fsubr
cmp
cmp
xchg
mov
mov
or
mov
jg
mov
ret
lret
shl
mov
ror
ljmp
push
loope
sahf
adc
call
xor
push
add
popf
xorb
rcl
loopne
nop
clc
cmpsl
jmp
fisubrl
mov
jmp
sbb
imul
cmp
out
mov
or
loopne
adc
dec
imul
xor
push
pop
sbb
pusha
movsb
sbb
leave
sub
test
in
jne
sub
rcrl
push
mov
push
jmp
insl
sub
mov
dec
sbb
mov
pop
jae
stc
mov
dec
sbb
lods
jecxz
mov
movsl
and
xchg
pop
pop
repz
xchg
pop
shlb
dec
inc
lcall
xchg
adc
mov
sbb
or
inc
fcmove
fnstsw
lea
sub
jae
xor
jg
or
fwait
push
or
mov
adc
mov
jmp
dec
test
xchg
xlat
jo
in
cmp
xor
inc
aam
ja
cmpsb
xorl
push
pusha
mov
jecxz
jmp
xchg
and
out
mov
bound
stos
cmp
push
xor
xor
xchg
cmp
pop
sahf
mov
xchg
es
adc
sbb
gs
lret
push
fstps
ja
fs
jl
out
iret
testb
sbb
outsb
pop
inc
cmp
push
daa
dec
sbb
cmpsb
aaa
leave
push
test
xchg
and
mov
xchg
int
and
clc
pop
jb
out
inc
movsb
add
lret
jb
mov
outsb
das
fwait
popf
clc
mov
and
nop
and
cmpl
xchg
lock
sbb
mov
dec
jb,pn
mov
xchg
xchg
mov
loope
cmpsb
cmp
mov
xchg
mov
add
mov
sbb
fistps
xor
add
push
clc
ret
inc
fists
inc
inc
mov
sub
in
sbb
jae
lock
pop
lcall
inc
lcall
add
dec
je
test
cld
std
mov
lcall
rolb
mov
cmc
xchg
fimull
or
clc
push
mov
push
xchg
stos
xor
lods
jp
mov
loope
ret
sbb
iret
fidivs
call
mov
push
mov
arpl
ds
insl
jo
cmpsb
daa
movsl
ret
pop
lret
mov
pop
sbb
sbb
push
and
scas
jb
adc
pop
adcb
mov
mov
lahf
mov
je
xchg
mov
repz
inc
jecxz
lret
dec
push
into
popf
or
and
add
sub
dec
jmp
pushf
mov
cmp
mov
adc
loop
adc
jmp
nop
push
lock
int3
and
gs
dec
fnsave
std
xchg
mov
lods
idiv
stc
mov
jmp
push
xor
lea
sti
sub
or
cmpsl
fsubrp
mov
push
loopne
rolb
mov
xor
into
push
sbb
cmp
xchg
and
jg
or
adc
jle
lods
sub
scas
mov
rep
rorl
mov
in
adc
pop
adc
mov
out
or
arpl
inc
lret
in
sbb
vpsllw
cmp
cmpb
in
insl
mov
inc
sub
pop
xchg
pop
add
push
rcll
ret
shl
loop
mov
hlt
scas
rcrb
xor
and
stc
and
mov
ja
outsl
xor
jae
call
inc
mov
cmc
inc
jp
inc
dec
adc
addb
sub
xchg
data16
xor
int
push
adc
rcrl
or
subl
xorb
or
rolb
cld
pushf
pusha
xchg
mov
cwtl
pushf
and
aaa
xchg
negb
fs
shlb
and
adc
or
xchg
clc
jl
aam
cmp
iret
mov
mov
cmp
in
or
mov
or
sahf
or
add
inc
and
lea
dec
cmp
dec
add
lcall
sub
clc
sarb
imul
sbb
add
cmp
scas
push
stos
sub
sbb
mov
jle
aaa
je
in
sbb
mov
cwtl
arpl
fwait
inc
enter
aam
sub
ficompl
js
sbb
popf
shrl
aaa
and
in
and
fcoml
sub
adc
push
pop
or
mov
inc
xchg
outsl
test
mov
lret
mov
jge
jl
pop
sbb
out
bound
int3
dec
icebp
loope
in
and
add
mov
jl
jns
mov
xor
mov
jb
push
fsts
dec
inc
lds
pop
push
or
add
jg
push
jmp
add
mov
mov
mov
xlat
sub
push
xchg
lahf
push
int3
or
lea
mov
cwtl
jns
dec
out
pop
pushf
pop
int
out
xor
and
aas
loope
int3
cmc
setb
sbb
ds
jl
insb
fisubs
insb
jae
mov
test
rclb
jge
or
iret
nop
and
mov
mov
cmp
jle
jmp
jge
idivb
arpl
sti
out
pop
int
or
mov
or
or
fistpll
mov
fpatan
cmpsb
cmc
and
adc
movsl
jp
repz
push
or
inc
dec
shlb
aam
push
sbb
out
scas
pushf
int
fwait
adc
pop
push
xchg
jne
mov
sub
cmpsb
not
in
inc
pop
cmp
out
ja
popa
xor
out
idiv
push
lock
cmc
xchg
fwait
sbb
fistl
andl
scas
rcrb
push
call
and
add
sub
jge
dec
adc
pop
mov
mov
jg
aaa
sbb
mov
jecxz
mov
xchg
or
aam
and
jb
scas
mov
aam
int
dec
mov
cli
lea
mov
faddl
cmp
fucomip
jnp
add
enter
adc
mov
mov
ret
mov
dec
stc
in
int3
clc
scas
sahf
adc
shrb
loope
repnz
or
inc
pop
mov
loope
jmp
pop
sub
mov
aad
xor
cmp
cld
sbb
lods
lds
fisttpl
push
dec
xor
xchg
sub
aas
aaa
jae
js
sub
insl
cwtl
sti
loope
es
dec
lea
pop
cld
test
clc
addb
sahf
xchg
movsl
je
popa
add
dec
cld
or
or
aam
add
pushf
xchg
xor
mov
lds
dec
fs
popl
pop
mov
cltd
outsb
scas
and
mov
stc
push
icebp
sbb
fistpll
add
lcall
sbb
test
pop
cmpl
hlt
xor
dec
lods
arpl
mov
popf
cld
sbb
scas
mov
jg
or
sub
jp
cmp
fsub
arpl
xchg
daa
mov
or
lea
jmp
mov
into
adc
push
push
lahf
out
or
mov
ljmp
in
sbb
mov
jno
loop
int
repz
leave
popa
sahf
and
cmpb
push
imul
sbb
sahf
xorl
ret
in
sub
out
xchg
or
adc
adc
pop
lret
mov
clc
mov
insl
adc
push
ret
mov
push
fst
je
in
jmp
pop
and
mov
and
test
xor
lods
inc
dec
push
bound
jl
push
sbb
in
mov
xor
xor
mov
rorb
sub
mov
dec
lock
je
inc
es
ja
add
or
sysret
aas
sbb
xchg
lods
inc
and
cwtl
xor
xor
jno
jnp
addr16
int3
mov
xchg
into
popa
adc
imulb
js
aas
sub
xlat
mov
es
mov
test
push
sub
sbb
jnp
push
sub
sarl
sbb
sub
imul
out
mov
into
sbb
push
mov
sbb
xor
scas
xlat
sub
pop
das
pop
or
scas
pushf
addl
cmp
dec
inc
mov
std
mov
fsubs
loopne
gs
pop
fcmovu
cmp
es
das
xor
ret
pop
xor
ja
in
and
mov
dec
sbb
pop
les
xchg
xor
sub
mov
movsb
mov
ljmp
jno
mov
mov
rorl
scas
mov
cmp
sbb
bound
in
adc
mov
stc
jp
push
cmp
xchg
mov
leave
xor
scas
gs
data16
negl
adc
mov
jecxz
adc
rcll
cli
scas
pop
fmul
fwait
out
stos
ljmp
scas
lods
mov
and
inc
pop
loop
dec
dec
or
pop
mov
or
incb
dec
inc
jmp
xorb
out
stc
jbe
sbb
cmp
mov
movsl
jo
and
pop
pop
sahf
mov
xchg
jecxz
out
mov
push
push
xchg
jmp
pop
pop
push
cli
aaa
push
push
imul
addr16
sbb
sarl
cmpsl
push
rclb
jecxz
mov
imulb
outsb
and
cltd
pop
ficoml
mov
ss
mov
jbe
dec
mov
mov
or
mov
inc
das
lret
pushf
xor
pop
ljmp
sbb
fcomp
and
adc
int3
sub
es
scas
enter
lods
xor
rorl
loopne
mov
pop
jmp
adcb
pusha
addl
or
and
sbb
jo
dec
push
xlat
cld
cmp
pop
pushf
scas
out
mov
loope
scas
fwait
out
dec
push
std
and
sub
pop
and
sub
jb
add
lods
das
push
sbb
push
push
mov
jns
test
std
rorl
cwtl
cltd
arpl
dec
and
imul
mov
pop
or
push
sahf
pop
mov
add
inc
jmp
pop
inc
inc
outsl
sbb
jmp
lcall
shlb
adc
pop
test
out
nop
ret
rcr
loopne
mov
cmp
imul
push
add
sbb
dec
scas
and
and
cmpb
or
shll
sbb
ds
or
jnp
lods
adc
mov
bound
xchg
add
xchg
adc
pop
ret
add
sub
into
mov
mov
pop
loopne
push
leave
push
push
push
pop
ret
out
das
js
add
inc
dec
add
or
test
pop
xor
xlat
jne
adc
ja
xor
jle
lcall
cmpsb
lahf
popf
pop
movsl
push
cmp
int
push
xor
mov
mov
mov
jge
cmpsb
adc
xchg
cmp
in
pop
or
test
add
cld
push
test
or
fwait
insl
loope
fildl
lock
ds
mov
aad
pop
fnstsw
jl
mov
adc
jne
hlt
xor
out
divl
fldenvs
pop
inc
sti
sbb
rclb
das
mov
push
mov
mov
cld
es
dec
aaa
pop
jmp
testb
dec
lods
pop
cwtl
adc
or
jmp
les
add
push
push
add
add
dec
sbb
push
gs
pop
sti
sti
pop
mov
push
xchg
idivl
add
mov
arpl
pop
clc
outsl
rcll
cwtl
xchg
scas
test
lahf
rorb
loop
dec
xchg
pop
fcomi
sub
mov
cli
shl
pusha
cltd
push
add
sub
into
filds
cmp
icebp
jecxz
jmp
jb
xchg
and
mov
test
loop
lcall
mov
adcl
mov
shl
scas
or
icebp
std
push
jae
dec
das
push
push
push
mov
mov
rcll
cmpsl
inc
daa
sbb
mov
out
xor
mov
outsl
std
aad
inc
mov
lcall
fldl2e
loope
xorl
cwtl
cwtl
cmp
pop
imulb
sub
jb
rdtsc
jne
jecxz
sub
stos
inc
and
addr16
lock
bound
push
out
or
int
fistps
ds
cmpsl
aas
sbb
shrl
adc
pushf
mov
rcll
icebp
out
sub
in
rorl
xor
jp
and
in
mov
sub
xor
movsb
mov
inc
xchg
fdivrs
cltd
jecxz
mov
fisubs
add
cmpsl
int
cmc
lods
insb
or
xor
and
lea
jp
repz
cld
xor
push
jl
clc
dec
test
sbb
inc
xchg
ljmp
dec
stos
stos
cli
push
icebp
jp
popf
jo
mov
push
call
inc
xor
jle
adc
mov
cmp
popf
adc
leave
inc
daa
out
inc
leave
insb
ljmp
lahf
mov
jo
cmp
and
nop
dec
pop
push
and
divb
push
inc
and
clc
movsb
into
and
hlt
sbb
andb
int
in
mov
dec
cs
jo
mov
into
dec
sti
movsb
insl
mov
push
sbb
call
imul
jp
scas
out
imul
ret
test
mov
xlat
fimuls
lea
loopne
cmp
popf
and
inc
pop
imul
push
addb
ret
leave
dec
int
push
jmp
inc
add
fwait
sub
mov
push
inc
jmp
mov
jb
jp
loope
xchg
sbb
dec
and
cmp
stos
pop
dec
dec
lret
test
or
mov
pop
stos
movsl
pop
lahf
push
fwait
aam
loope
sub
or
jmp
xor
mov
enter
repnz
mov
cmp
jmp
fisttpl
jbe
xor
xorb
inc
ret
out
jno
pop
pop
mov
sbb
jle
or
loop
sbbw
in
sbb
inc
push
ljmp
and
rolb
flds
data16
mov
mov
fsubs
popa
pop
lcall
pop
push
adc
jns
xchg
push
inc
fwait
sbb
xchg
or
mov
adc
push
enter
dec
jmp
arpl
mov
ss
out
jae
cmp
aaa
xchg
lcall
pop
xchg
lret
call
push
xchg
mov
or
and
ds
lret
in
and
pop
adc
fcmovu
adc
ret
push
aam
fbstp
xorb
sub
mov
sbb
shrl
aad
mov
jmp
adc
rorl
out
fsub
inc
xchg
sbb
ja
iret
jg
inc
push
fs
shll
outsb
idivl
inc
fiadds
fidivrl
sub
jecxz
loope
push
and
call
imul
ljmp
loope
xchg
movsl
inc
pop
jl
mov
jne
mov
das
mov
adc
cmp
push
sub
mov
cltd
sar
outsb
mov
fwait
lcall
outsl
xchg
out
out
mov
or
push
shll
dec
push
cmp
push
xchg
bnd
sub
popf
dec
add
mov
das
dec
iret
jecxz
nop
mov
addr16
inc
imul
hlt
int3
cmp
fsubrp
repz
jnp
push
rorb
in
jg
fistpl
inc
ds
add
lcall
pusha
adc
add
push
cmp
xor
and
push
rclb
imul
repnz
popf
or
sub
mov
sub
loopne
loop
jnp
int
jno
xor
in
cwtl
scas
sbb
pushf
and
loopne
push
xor
fldt
inc
jnp
jnp
std
popf
cmp
sub
mov
inc
sub
add
jno
jp
push
sbb
fisubrl
fbstp
mov
pop
xor
jmp
repnz
into
in
jg
xchg
lret
lcall
or
and
fmull
insl
int3
shr
adc
add
mov
pop
lret
add
xor
aas
sbb
bound
leave
and
scas
negl
dec
xorl
and
xchg
mov
out
aas
fmuls
lods
in
xchg
inc
xor
cmpsb
or
lret
bound
fisttpl
adc
outsl
les
aam
idivb
pushf
jne
jmp
push
mov
push
rorl
movsl
and
test
data16
pop
out
and
jmp
mov
mov
data16
outsl
sbb
or
xor
mov
data16
decl
repnz
ret
xor
or
push
insb
out
lods
stos
test
adc
xchg
push
or
clc
pop
mov
jns
cmpsl
mov
xchg
dec
push
and
fisttps
inc
sbb
shll
and
sub
jmp
push
cmc
ss
popf
aas
xchg
ds
push
and
sub
mov
test
stos
adc
push
dec
adc
sub
data16
ja
xorb
inc
mov
mov
popf
sub
sub
clc
in
mov
or
imul
jmp
cwtl
mov
insl
dec
cmp
jl
inc
push
aam
icebp
xchg
fsubr
inc
cmp
rclb
mov
call
aaa
cmpsb
lret
cltd
test
outsb
xchg
cwtl
hlt
mov
dec
cmp
mov
xchg
mov
push
mov
xchg
jge
jp
mov
cs
iret
leave
cmp
mov
insb
mov
sub
jae
xor
mov
repz
jg
and
pushf
pop
fadds
push
cwtl
mov
xor
push
mov
xor
xchg
mov
cmpb
je
fiadds
xchg
xchg
fadds
xchg
push
rorb
push
inc
jno
in
sbb
jmp
rcrb
add
nop
fimuls
fisubs
mov
pop
inc
aam
xchg
mov
daa
mov
cld
sub
mov
js
push
nop
cs
ret
lahf
mov
dec
push
mov
shll
mov
mov
dec
pushf
mov
cmpsb
mov
shr
sbb
xchg
mov
mov
and
stos
lret
xchg
lods
pop
popa
inc
and
int
inc
jae
movsl
adc
adc
out
ljmp
rcrl
cld
mov
ficomps
or
jns
push
sbb
pushw
ds
or
mov
into
jmp
insb
cltd
mov
add
dec
cltd
pop
sub
jg
pushf
leave
or
push
jl
adc
and
in
xchg
mov
mov
aaa
imul
jmp
xchg
push
jecxz
inc
xchg
int3
addr16
mov
xchg
inc
inc
dec
xlat
leave
sub
mov
clc
jl
add
add
repz
pusha
xchg
fadd
inc
dec
push
scas
sub
xor
pop
aam
loope
imul
daa
cmpsb
call
push
leave
or
push
cld
add
cmp
cwtl
cmp
jns
mov
outsb
mov
pop
imul
int
icebp
and
or
adcb
das
dec
mov
xchg
and
add
sbb
add
xor
lret
mov
inc
lods
ret
push
dec
dec
push
imul
xor
ret
cld
fsubr
das
push
push
or
ja
mov
es
flds
pop
mov
clc
lret
cmpsb
or
jnp
mov
add
mov
stos
and
pop
sbb
std
sbb
xor
xchg
and
mov
sarb
sbb
es
pop
cmp
cmp
aas
sbb
dec
inc
repnz
fmuls
jo
cwtl
push
and
cmc
xchg
mov
imul
lret
sarl
sti
mov
adc
jo
mov
mov
sbb
test
jp
xchg
icebp
fsubrl
mov
ss
clc
jno
out
test
xchg
mov
ss
mov
je
pop
cli
fistpl
mov
sahf
mov
lahf
xor
inc
fsubrl
fmuls
xorb
mov
imul
test
inc
imul
add
int
or
cli
sarl
or
push
mov
testl
jno
das
repz
mov
dec
mov
nop
sbb
push
dec
inc
sbb
adc
push
daa
andb
dec
jne
aad
adc
bound
icebp
movsb
pop
mov
jg
cmpsl
stos
mov
jnp
aad
inc
in
mov
je
push
int3
pop
loopne
imull
cwtl
push
jmp
or
nop
sbb
aam
pop
mov
or
pop
jge
aas
test
and
cmpsl
cmp
dec
add
das
andl
es
cli
cmp
pop
divl
shr
xchg
pushf
pop
inc
es
les
movsb
sub
inc
jecxz
xor
rolb
add
xor
mov
cmp
subl
adc
push
pushf
and
hlt
into
dec
add
outsl
mov
sub
mov
in
fcoms
sahf
rcrl
mov
push
sbb
and
insb
insb
lret
mov
mov
das
pushf
in
sbb
cmpsb
shlb
scas
mov
sub
adc
mov
jne
inc
push
cltd
jo
movsl
es
jg
jns
sub
ljmp
mov
int
add
add
fidivrl
pop
sub
pop
test
or
pop
add
rcr
push
jg
leave
xchg
and
xchg
push
sub
jle
inc
pushf
dec
repz
daa
adc
cmpsl
iret
in
xchg
das
clc
dec
popa
mov
inc
lret
outsb
aas
dec
pop
jnp
mov
sti
iret
jecxz
es
add
jp
mov
sbb
loop
sub
loopne
lcall
xchg
outsl
mov
cmpsl
test
enter
cmpsl
push
shl
leave
sub
pop
andl
cmp
sbb
std
icebp
dec
pop
ret
ljmp
mov
int
lcall
push
jne
xchg
rorl
pop
repz
test
je
into
xor
mov
sub
ret
repnz
jmp
sbb
and
mov
pop
in
imul
cld
inc
movsl
adc
pop
nop
jp
enter
jae
mov
ljmp
pushf
aam
icebp
loopne
das
je
std
mov
dec
push
dec
in
out
clc
mov
jle
loopne
mov
mov
xchg
dec
dec
mov
inc
pop
sbb
xor
cli
lods
or
xor
or
adc
data16
es
repnz
sub
in
push
cmp
or
imul
mov
clc
movsl
mov
pushl
outsb
icebp
lahf
pop
pushf
xchg
mov
in
push
das
mov
inc
xor
push
mov
fdivr
jne
movsb
outsl
or
push
xchg
inc
add
xor
xor
pop
inc
lock
fs
stos
xchg
mov
jg
repz
aaa
cltd
cmp
jbe
shll
xchg
adc
push
mov
jge
pusha
fdiv
enter
add
add
sub
rcrb
push
xor
popa
ret
das
or
sub
mov
lret
mov
fsubp
cwtl
mov
lea
jo
dec
cmp
aas
pop
loop
push
cwtl
movsl
dec
in
xor
inc
xchg
and
push
bound
ljmp
pop
pop
adc
mov
and
aam
mov
loopne
dec
xchg
and
xor
sbb
mull
sahf
push
fstl
inc
sahf
addl
dec
or
xor
sub
xchg
hlt
mov
cmp
movsb
popf
add
imul
xor
lahf
ret
sbb
icebp
cmp
insb
adc
mulb
lcall
jnp
adc
jle
lea
add
mov
fpatan
sbb
cwtl
inc
push
lods
mov
pop
cs
inc
xchg
adc
or
jge
and
inc
push
leave
mov
adc
pop
xor
mov
or
aas
or
add
push
std
push
insl
sbb
sub
lahf
push
xor
in
sbb
adc
push
loope
adc
dec
push
xor
jo
sbbb
arpl
gs
scas
fwait
rcrl
mov
push
aad
or
jnp
cmpsl
cmp
outsb
insb
xchg
jae
test
lahf
pop
mov
inc
jge
dec
rcrb
jecxz
in
jne
jg
xchg
jl
insb
inc
mov
xchg
pop
jecxz
je
data16
jnp
sbb
add
vmovups
mov
addr16
mov
pop
dec
lods
sbb
sub
and
sub
mov
mov
decb
jle
int
adc
adc
loopne
lea
popf
mov
cltd
movl
clc
aas
js
push
xchg
mov
xchg
and
enter
clc
push
fcomp
mov
imul
adc
cs
arpl
pop
fsubrs
into
xchg
mov
leave
inc
adc
mov
rcr
xor
dec
arpl
or
rcll
lods
inc
jp
pop
push
arpl
lcall
jg
push
enter
mov
iret
xor
bound
ds
xchg
xchg
lock
xchg
sahf
repz
aad
sub
lds
lea
jbe
push
sbb
jnp
sbb
xor
cld
mov
jno
iret
inc
les
idiv
and
mov
mov
push
fdiv
sub
sub
push
out
ljmp
cmp
push
ret
mov
mov
shll
mov
or
pushf
clc
add
std
and
push
clc
sbb
mov
add
or
sbb
mov
jmp
into
inc
mov
icebp
mov
in
aaa
push
mov
ds
clc
shlb
fisubs
add
test
or
in
jmp
imul
sbbl
loopne
ret
cmc
jbe
or
xchg
in
int3
jmp
leave
xchg
mov
subl
inc
outsl
mov
sbb
xor
pop
adc
mov
sbb
xchg
cmp
push
mov
fnstcw
add
inc
out
pop
std
push
int3
jae
testl
and
and
fbstp
adc
mov
inc
loopne
push
loope
out
push
cmp
mov
mov
add
mov
push
and
aaa
lods
xchg
test
or
ss
mov
sub
lods
sub
sti
cmp
mov
xchg
lahf
jno
jmp
push
test
pusha
and
aaa
fistpll
mov
mov
sbb
sub
sbb
fucom
mov
in
push
xchg
lahf
in
test
cmc
fsubr
mov
lret
jle
jecxz
push
jmp
fisubrs
mov
mov
add
insb
lcall
inc
jmp
sub
adc
cmp
lret
mov
or
xchg
sub
mov
lods
push
fldt
data16
xor
pop
insl
idivl
jae
out
jae
pop
cmpsb
popf
jg
lds
arpl
xchg
xchg
stos
ds
insl
aam
xchg
mov
movsl
fcomp
dec
scas
jl
jo
dec
fs
adc
std
seto
repnz
ror
and
xchg
sbb
stos
mov
and
jmp
jle
fadds
setle
sub
or
inc
rcll
daa
xchg
jecxz
xchg
or
outsl
iret
or
and
shrl
adc
mov
mov
mov
or
pop
popa
fisttps
adc
inc
les
sub
jl
add
xchg
xchg
outsb
mov
sti
dec
or
repnz
cmp
sub
or
add
or
push
pushf
lcall
jb
cmp
xor
lods
add
cs
and
add
mov
mov
jecxz
pop
cmp
add
sti
xchg
push
hlt
int
sub
dec
xchg
jl
push
mov
jecxz
scas
sbb
push
decl
mov
adc
sub
jmp
or
testb
lods
cmp
cmp
fucom
mov
add
divps
xchg
jecxz
sbb
test
ret
jne
sbb
cli
pop
adc
mov
setnp
push
xchg
mov
in
popf
popf
sub
push
adc
call
dec
orl
in
mov
mov
insb
mov
or
add
push
iret
mov
jecxz
adc
dec
aad
jp
xchg
cmpsb
aam
in
psrad
clc
and
or
inc
sbb
pop
rcll
push
push
or
repz
sub
dec
sub
sbb
dec
fcoms
and
repnz
cld
je
jecxz
loop
cmp
mov
loopne
out
cmpsb
jbe
push
cs
ud2
cmp
pop
xor
in
and
fisubrs
scas
add
mov
push
mov
mov
nop
push
sub
push
mov
cmp
sbb
repnz
xor
shrl
mov
mov
out
sub
mov
shll
dec
jb
mov
and
cmp
sub
jbe
jl
dec
lds
push
out
jecxz
rcr
roll
jno
bound
mov
fmuls
int3
push
aam
stc
dec
adc
and
fistps
or
lahf
subl
into
leave
lods
pop
xlat
rorb
mov
test
nop
adc
mov
pop
ljmp
push
sbb
lock
enter
in
mov
lock
push
or
mov
ds
mov
mov
out
test
faddl
loop
in
mov
mov
xor
js
divb
jb
pop
fsubl
pslld
xchg
out
dec
jmp
mov
jb
js
sahf
ss
repnz
cmp
fsubp
movsb
loope
nop
sbb
pop
bound
add
mov
push
lds
sub
sti
stc
test
inc
mov
cmc
fidivl
rcrb
cmpsl
in
arpl
lahf
dec
int
aaa
mov
or
loopne
pushf
ljmp
das
sbb
ret
dec
pop
fildll
jo
xchg
jle
mov
pop
loope
nop
inc
pop
sbb
ror
xchg
repnz
jno
or
sub
lods
bound
xchg
nop
cs
pop
pop
push
push
testl
gs
mov
adc
push
stos
neg
or
loope
repnz
test
in
leave
xchg
aam
gs
pop
and
hlt
sbb
sbb
ljmp
ss
sub
ja
ss
sub
adcl
inc
xchg
push
aaa
pop
xchg
imul
cmc
sti
adc
jae
movsl
mov
or
ret
push
test
fisttps
pop
adc
jnp
sub
push
push
mov
cmp
jno
mov
aaa
xchg
leave
popa
insb
mov
es
fldt
ds
cmpsl
jb
pop
add
pop
arpl
jns
aam
sub
out
mov
ljmp
pop
mov
adc
movl
or
dec
test
add
and
or
loope
push
pop
mov
adc
outsl
je
inc
sbb
xchg
hlt
cltd
jae
lods
push
adc
jl
sub
and
push
pop
dec
lods
repz
push
nop
mov
js
cmp
mov
sub
gs
dec
jmp
adc
sbb
cmp
jbe
lahf
std
hlt
out
mov
enter
cltd
mov
ljmp
or
ljmp
aam
adc
sbb
or
dec
dec
mov
mov
mov
mov
addr16
lahf
inc
push
sbb
pusha
mov
sbb
push
mov
push
shrl
pop
into
lds
sbb
mov
gs
push
in
push
test
loop
mov
lahf
subl
dec
stc
jo
inc
hlt
and
insb
dec
add
out
aas
pop
cltd
fstps
push
adc
fildll
insl
and
xor
rcll
in
scas
inc
pusha
in
pop
push
push
mov
or
sbb
sub
sbb
pop
insl
mov
ret
in
jns
int
pop
fisubs
mulb
adc
cmp
push
iret
out
sti
scas
sahf
jbe
pop
aam
inc
xchg
dec
out
nop
pushf
imul
push
dec
or
fwait
jp
push
sbb
nop
in
out
loop
xor
cmp
xchg
frstor
js
movsb
dec
lock
jg
outsb
sarb
cmp
pop
pop
mov
popa
mov
push
dec
movsl
push
mov
hlt
sarb
dec
repnz
add
or
cmp
out
ret
imull
int3
adc
mov
mov
aam
lcall
xor
loop
enter
jp
sbb
inc
xchg
jge
pop
outsb
pop
sti
sti
lret
jae
jnp
cmp
and
bound
scas
fnstsw
lret
fwait
loope
mov
push
fs
cltd
negb
rclb
mov
push
sbb
mov
inc
lret
add
enter
xchg
jno
ljmp
mov
cmpsb
mov
imul
add
cli
int
pop
mov
mov
inc
push
dec
enter
cs
clc
jbe
sbb
sub
mov
les
ret
mov
stc
dec
div
call
xchg
loop
sbb
cmp
push
testb
or
mov
cmpsl
out
std
addr16
iret
popf
mov
leave
repz
mov
lret
ljmp
adc
dec
jle
loop
cmp
lret
subb
inc
nop
jge
lods
enter
xor
mov
dec
pop
sub
pop
push
jp
fsts
test
add
xchg
push
test
in
cltd
mov
lock
ss
das
leave
mov
xchg
sbb
dec
push
stos
cmp
popa
int3
jo
sub
fisubrl
mov
push
leave
js
loop
mov
imul
dec
dec
je
jnp
icebp
out
ljmp
push
into
scas
mov
andl
cmp
cwtl
jnp
cmp
in
shrl
xchg
rcll
xor
adc
leave
pop
mov
mov
lcall
jb
data16
cmp
dec
rorl
adc
test
aad
popa
mov
enter
dec
jmp
insb
shr
movsb
fsubrs
cmp
fbld
and
ljmp
loop
mov
inc
and
cmp
sahf
or
jb
or
sub
ljmp
cli
sbb
mov
nop
mov
cmp
inc
aad
lock
or
test
or
outsb
shrb
std
mov
xchg
sub
ret
int3
decb
shrb
dec
jo
mov
xchg
push
icebp
xchg
orl
dec
cmp
out
mov
dec
std
mov
pusha
popf
imul
ljmp
mov
push
fnstcw
sbb
cltd
dec
mov
stos
pusha
jge
icebp
xlat
mov
cmpsb
aad
jns
dec
test
mov
jo
jns
xor
adc
aam
fadd
loopne
or
push
sbb
dec
pop
dec
push
clc
lock
push
inc
lods
jae
in
scas
fcmovb
push
lea
or
sbb
into
xorl
mov
cltd
inc
jl
cmp
xchg
and
xor
es
push
test
decb
xor
rcrb
sub
dec
and
lock
jns
shrb
aam
cld
mov
mov
mov
cmp
ja
jg
mov
or
dec
xchg
vrndscaless
mov
imul
jecxz
fldcw
xchg
mov
jp
xlat
shr
inc
adc
ret
hlt
fldenv
dec
mov
jg
mov
jae
subb
sahf
cmp
ds
fsts
aaa
mov
or
bound
movsb
push
pop
xchg
xor
mov
xor
popa
push
in
and
sti
lds
jne
push
push
dec
popa
mov
pop
inc
lods
std
pop
not
xor
dec
jbe
jno
or
sub
jb
mov
mov
sub
add
inc
jnp
mov
add
clc
push
adc
shlb
mov
lret
add
stos
fadd
bound
xchg
shlb
xor
iret
push
inc
adc
sub
fdiv
and
out
aas
jmp
shl
repz
push
nop
fdivrs
dec
xchg
loop
insl
lds
lods
loope,pt
pop
divb
sub
xchg
into
push
notb
aad
mov
adc
pop
inc
push
stos
and
scas
mov
push
dec
adc
insl
push
add
pushf
fcmovbe
dec
push
repnz
std
je
add
cmp
cmp
test
adc
add
bound
mov
fdivl
lods
scas
mov
leave
scas
iret
and
pop
mov
out
mov
cmp
mov
cwtl
push
and
call
call
jb
jns
xor
cld
cltd
jge
and
repnz
and
cmp
push
and
loop
clc
mov
sub
xchg
mov
sbbb
jae
mov
xchg
data16
dec
jg
test
sub
pop
push
adc
ja
mov
sbb
sti
mov
push
je
adc
push
dec
dec
shll
pop
daa
hlt
xlat
lret
jle
dec
cmpsl
cmpsb
dec
xor
adc
leave
mov
daa
mov
xor
sbb
shl
testb
jb
add
add
mov
mov
test
testb
xchg
or
sub
fnstcw
mov
cli
insb
or
mov
mov
jmp
cmp
ds
cmp
out
dec
mov
movsl
fdivl
xchg
push
adc
jbe
pop
xchg
lods
int
inc
test
sbb
push
and
push
nop
imul
mov
sub
loope
js
scas
lret
imul
test
icebp
mov
mov
xor
cmp
lret
testb
xchg
mov
jmp
movsb
aad
cli
pop
xchg
dec
mov
and
xchg
xchg
lcall
push
sub
into
call
mov
jecxz
enter
repz
and
stos
fnstsw
xchg
dec
cmp
int
mov
mov
addr16
sbb
ret
nop
pop
inc
cli
jb
jbe
jne
dec
pop
call
adc
inc
scas
cmp
fstps
mov
insb
leave
in
sahf
jbe
sbbl
movsl
mov
fistl
inc
ljmp
fwait
mov
jnp
inc
push
cmp
in
xlat
jle
lods
mov
je
and
incl
jle
jecxz
adc
jb
xor
sti
bound
scas
jle
mov
xchg
loopne
pop
mov
cmp
mov
daa
inc
push
inc
jecxz
inc
int
rcrl
or
aas
dec
lret
out
or
int3
mov
pop
test
sbb
shll
stc
aaa
xchg
insl
aaa
cmp
cli
jno
inc
jbe
shrb
sahf
shl
sub
mov
mov
cmp
push
pop
sub
sbb
push
dec
add
out
das
rcll
xor
fwait
packssdw
call
lock
mov
mov
add
mov
pop
div
mov
aad
clc
bound
rorl
inc
fidivl
lahf
in
pop
inc
mov
repz
or
dec
push
or
out
dec
dec
movsl
pop
xchg
cmc
fisubrs
cmpsl
jle
vandps
ret
insl
xor
adc
jecxz
add
rcrl
xor
add
outsb
rcl
out
dec
and
cmp
push
fsubrl
jmp
lret
adc
inc
push
ss
pusha
mov
aas
cmc
repz
outsb
stc
fs
jg
mov
add
dec
sbb
pop
pop
xor
cmp
fnsave
and
pop
mov
mov
int3
pop
jmp
int3
xor
sbb
adcl
ljmp
mov
fdivrl
or
fstl
and
mov
adc
pop
dec
xchg
push
push
loopne
add
pop
mov
movsl
mov
adc
popl
pop
inc
cmpb
jmp
pusha
or
bound
and
sti
xchg
or
jg
sub
shrl
in
js
popa
mov
sub
rcll
bound
cmpsb
sub
lods
test
repnz
add
addr16
mov
xor
pop
add
and
push
adc
ds
push
sub
pop
into
mov
adc
sti
js
mov
cmp
cmpsb
inc
test
mov
mov
adc
push
and
xchg
adc
sbb
filds
in
addr16
mov
aas
mov
sarb
loop
xchg
adc
xorb
and
test
cwtl
aas
cmp
xchg
sbb
cwtl
lock
pop
pop
ja
mov
mov
jecxz
push
push
orl
lahf
inc
pop
push
cmp
pop
xor
push
jmp
mov
int3
fcmovnb
arpl
cmp
insb
ficompl
fmull
rcl
mov
push
test
cmpsb
mov
or
xchg
mov
repz
pop
fcomps
pushf
xchg
pushf
aam
aam
sub
jbe
dec
jl
mov
and
idivl
mov
xchg
push
jo
mov
push
sub
lods
repz
inc
mov
sub
lods
inc
inc
or
inc
cs
ja
jbe
inc
inc
push
sub
and
into
cmp
sbb
iret
scas
je
popa
add
jo
xor
shll
xchg
sbb
or
imul
sbb
push
add
xchg
push
mov
sbb
mov
popf
fnclex
push
inc
push
arpl
xor
cmp
idivl
in
and
out
leave
lahf
add
sub
or
pop
pusha
aas
cmpsb
in
mov
test
mov
mov
inc
lret
add
or
sub
fistpl
jnp
insb
xor
dec
push
jmp
aas
lds
cs
pop
test
and
sbb
jg
cli
outsl
fbstp
idivl
cmpsl
jae
out
shrl
sbb
mulb
inc
or
and
test
not
in
inc
jle
ret
mov
mov
lcall
out
mov
enter
mov
mov
sub
inc
cmp
negb
inc
das
mov
imul
imul
xchg
mov
dec
loope
sub
push
add
and
sub
pop
in
mov
mov
pop
add
mov
in
gs
lahf
mov
or
icebp
sbb
cmp
push
xlat
sbb
cwtl
cmpsb
mov
dec
and
or
jp
rcl
je
rclb
lods
adc
mov
push
cmp
pop
adc
mov
or
jb
mov
adc
adc
sbb
sahf
xor
fdivs
and
mov
dec
loopne
pop
fcomip
and
xchg
leave
push
nop
daa
divb
xor
cli
lea
sub
adc
gs
sub
mov
fsubr
cmp
ljmp
push
je
xor
push
xchg
outsb
in
mov
gs
inc
lock
dec
add
mov
ficoml
jno
shrb
inc
lods
xor
jge
clc
leave
pop
jns
mov
jl
ret
cmp
loopne
decl
imul
in
popf
mov
enter
dec
cs
add
fdivrs
pop
out
rcrb
push
imul
jecxz
adc
popf
str
mov
mov
dec
lods
mov
xor
fwait
add
ds
movsb
dec
fsubr
adc
idivb
pop
ljmp
loope
int
mov
xchg
icebp
js
jle
inc
in
cmpsb
jl
call
sub
add
jmp
repnz
cs
xor
in
cmp
mov
add
cltd
cmpsl
jl
lret
sbb
push
cmp
pop
mov
mov
cmp
inc
push
jns
add
sbb
and
mov
popf
mov
call
jp
imul
mov
bound
mov
pop
mov
mov
cwtl
adcl
insl
mull
lret
mov
cmpsl
iret
rcrb
test
es
add
jle
fsubrs
add
insl
jle
fdiv
and
dec
xor
in
push
scas
cmp
jnp
lods
mov
jl
push
xor
loopne
push
cmp
ret
lret
das
mov
ss
pop
addr16
lret
cmpsb
pop
jle
in
ret
imul
sbb
dec
jb
xchg
dec
mov
out
mov
adcl
lcall
mov
and
add
inc
je
dec
dec
enter
xchg
xor
xchg
in
dec
fmuls
fildl
ret
push
jecxz
sub
and
flds
mov
xlat
xlat
push
es
sbb
mov
mov
mov
js
ss
cmp
adc
mov
movsb
add
ja
fwait
sbb
mov
sahf
dec
or
mov
xor
xor
insl
dec
loopne
ljmp
inc
push
sbb
mov
pushf
sahf
sub
test
push
fs
mov
imul
inc
push
ret
dec
sahf
insl
cld
push
sub
mov
call
lss
xor
stos
mov
push
lods
xchg
movsl
mov
outsl
sub
popa
icebp
data16
ret
leave
xchg
lcall
mov
mov
test
clc
mov
imul
ds
movaps
nop
sub
or
push
jg
push
sbb
jns
and
outsb
ja
fwait
sbb
sahf
adc
push
sub
fildl
sub
inc
mov
sbb
sub
add
fildl
add
fwait
hlt
iret
pop
hlt
fwait
mov
inc
dec
jle
mov
fsts
dec
or
and
xlat
cmpsl
adc
jl
pop
adc
and
push
scas
sbb
out
fs
hlt
test
jns
jae
sbb
push
push
popl
adc
lock
jb
dec
xor
or
iret
or
cmpsb
or
adc
or
sbb
repnz
sbb
cli
adc
shrl
jp
inc
hlt
mov
add
mov
xchg
divl
and
sub
lds
mov
pop
stc
loop
xchg
jl
out
push
jo
notb
cwtl
sahf
mov
addr16
fcmove
add
xchg
or
cmp
sbb
rcll
arpl
mov
cmp
std
into
push
and
sub
call
pop
scas
jecxz
xor
fwait
lea
cmp
mov
or
add
cmp
dec
fistl
mov
orb
mov
sub
out
jecxz
sbb
mov
cmp
xchg
pop
les
fdivrl
pop
pop
mov
mov
jmp
or
ror
xchg
popf
xor
push
scas
xchg
mov
jmp
push
and
xchg
jmp
rcl
push
arpl
out
add
xchg
hlt
sub
adc
mov
jecxz
maxps
in
stos
push
sbb
addl
xchg
mov
pushf
mov
imul
fisubs
bound
jnp
or
in
sahf
sbb
fldt
jecxz
fisubrl
aad
xor
mov
loopne
mov
xor
push
cld
push
pop
lock
shlb
pop
inc
mov
xor
and
shl
pop
mov
ljmp
cmp
and
int3
push
fs
xchg
add
mov
cmp
jb
movsl
cmpsl
jnp
push
cmpsl
daa
mov
aad
push
dec
xchg
jo
out
mov
out
cmpsl
aas
imul
sbb
pop
adc
imul
inc
or
rcll
insb
xor
dec
test
cwtl
int
xlat
test
xchg
ss
mov
push
stos
pop
xchg
js
sarl
scas
adc
jo
inc
popf
ffreep
and
insl
outsl
insl
lods
sub
mov
loop
mov
cld
add
fisubrl
fs
fs
jae
mov
inc
cld
sub
or
xchg
mov
scas
mov
out
dec
cmp
iret
int
ret
stos
jno
pop
ss
push
cmpsb
vpshuflw
push
mov
add
das
xchg
fstpl
dec
mov
movsl
push
in
int
out
ret
sbb
stc
jge
dec
fisubrl
lock
sbb
pop
xchg
mov
int3
aad
mov
es
inc
arpl
bnd
loopne
enter
icebp
sub
popa
das
and
add
ds
ss
mov
insl
lcall
aas
xlat
push
push
pop
adc
inc
xor
sub
js
xchg
cld
xor
push
out
inc
cmp
xchg
push
adc
or
sbb
xor
inc
lret
mov
das
insl
icebp
xchg
sbb
mov
and
dec
fmull
pop
ljmp
fisubs
push
outsb
sub
out
cmp
sub
jg
jl
ljmp
or
or
adc
sbb
mov
out
jo
and
inc
sti
shrb
sbb
pop
cld
subl
inc
sbb
cmpsb
insb
xlat
sbb
push
mov
mov
xor
dec
call
jle
push
repnz
mov
fistpll
mov
lahf
sti
sahf
adc
mov
or
xor
push
dec
fwait
lret
loop
test
stc
inc
aas
ret
jb
adc
jecxz
push
cld
mov
fsub
xor
jle
xchg
jbe
pop
fcompl
test
jecxz
scas
scas
test
lahf
xchg
fs
loope
adc
addl
aad
imul
push
inc
movsl
test
out
js
mov
inc
cmpsl
jo
int3
dec
in
rorb
fildl
ds
test
push
sub
xchg
gs
data16
sbb
xlat
sti
dec
out
cmp
mov
mov
stos
xlat
call
rolb
xor
out
std
pop
jae
sbb
movsl
je
nop
shl
jmp
xchg
sbb
xor
cmp
mov
mov
les
jb
in
mov
and
enter
mov
out
rcrl
jne
test
data16
into
mov
add
dec
scas
je
xchg
das
pop
pushf
cli
push
std
lods
into
sbb
orb
ja
xchg
test
sahf
mul
push
lahf
enter
sti
dec
xor
mov
sbb
jns
and
fisubs
lea
cmp
loop
xor
loop
or
xchg
mov
jo
lret
outsb
mov
incb
movsb
ljmp
mov
or
sub
in
jmp
test
in
pop
or
aad
vmwrite
jb
xlat
add
dec
in
rcrl
popf
xchg
pop
mov
jle
test
cs
add
insb
cmp
int
mov
das
loope
push
and
add
lods
lock
mov
rcrb
cwtl
sbb
and
popf
movsb
sub
out
pop
sbb
pusha
fwait
loope
sub
mov
je
call
add
add
hlt
ja
jns
add
mov
pop
lcall
xchg
and
cwtl
in
je
mov
outsb
movsb
int3
rclb
mov
jnp
leave
es
mov
mov
popf
cmp
test
inc
and
sarl
ret
movsl
enter
dec
adc
test
setl
or
out
js
cmp
inc
orb
push
pop
rorl
fwait
sub
mov
add
xor
repz
insb
sbb
mov
in
out
loopne
les
inc
test
inc
std
sbb
jbe
sub
dec
insb
add
mov
loopne
dec
sbb
ds
add
daa
into
loop
mov
in
xor
add
pop
xor
sbb
push
push
sbbb
dec
fwait
hlt
movsl
xor
mov
sbb
jno
and
fcomi
xchg
mov
imul
sti
cmpsb
outsb
call
sub
mov
test
xor
adc
pop
or
push
bound
subb
xor
ljmp
test
mov
adc
pop
arpl
mov
pop
pop
dec
stos
rclb
call
and
scas
int3
and
aas
push
xchg
add
scas
cmpsl
out
fistpl
hlt
push
jmp
mov
shrl
insl
shlb
mov
stos
pop
repz
push
enter
mov
or
mov
pop
mov
and
and
cmpsl
ja
mov
mov
sub
xor
into
xchg
adc
and
xor
push
xchg
mov
test
lcall
pop
es
mov
mov
psllw
iret
inc
lods
mov
lahf
je
mov
cmc
jo
cmp
mov
add
je
cld
ds
fcoms
sbb
push
cmpsb
mov
std
inc
mov
push
push
jno
sti
cmpsl
jge
adc
rclb
sahf
aas
jb
xchg
or
mov
xor
and
and
jne
mov
mov
push
push
inc
lea
dec
js
inc
adc
fildl
pop
hlt
adc
scas
jae
int3
adc
adc
jno
gs
xchg
pop
cmp
aad
fnstcw
pop
into
or
sahf
mov
dec
dec
jb
leave
pop
xlat
mov
add
outsl
sti
das
cmpsl
fistpll
mov
mov
push
push
cld
dec
add
inc
mov
sbb
fdivrl
fisubs
lea
inc
cmp
cmp
and
shr
das
jne
popf
sbb
sub
ds
into
cmc
js
lock
mov
cmp
sub
xor
lret
adc
insb
pushl
daa
mov
xchg
int
outsb
movsl
test
inc
fstps
mov
sbb
rcrb
scas
dec
jne
xor
pslld
xor
pop
push
insb
loopne
sahf
pop
dec
mov
inc
js
hlt
push
insb
inc
test
xchg
mov
jmp
ja,pt
mov
into
adc
mov
xchg
inc
mov
inc
cmpsb
dec
test
out
arpl
lcall
pop
inc
mulb
lcall
dec
shr
mov
mov
ja
repnz
lcall
pop
popf
pop
outsb
movsb
mov
sbb
popf
sub
add
dec
cwtl
pushf
hlt
subb
hlt
lret
mov
xchg
pop
add
xor
pop
lods
and
mov
test
sub
cltd
jl
mov
das
push
xchg
mov
fimull
std
pop
enter
int
lods
pusha
or
out
cmc
rolb
adc
jecxz
push
mov
in
pop
xchg
fidivrs
mov
imulb
dec
xor
andb
sub
sbb
aad
adc
mov
jo
arpl
test
aad
pop
push
out
cmp
mov
or
fidivl
mov
jnp
mov
jle
call
sub
js
and
lcall
mov
lahf
inc
dec
jae
push
inc
daa
or
mov
jns
mov
pop
mov
inc
icebp
ja
shll
ljmp
xor
or
pop
cmp
mov
sub
xor
clc
jo
mov
adc
xchg
push
into
mov
hlt
call
xor
nop
xchg
jmp
sbb
inc
xchg
push
stos
sti
pop
push
int
add
cmp
dec
sbb
scas
or
sub
jecxz
leave
push
xchg
pop
jbe
inc
stos
pushf
mov
hlt
push
jnp
pop
jp
sbb
sub
fldt
and
lds
cmp
lret
cmp
ja
dec
adc
pop
inc
jnp
xchg
inc
call
cltd
divl
dec
mov
cli
xchg
in
rcl
repnz
fisubs
mul
cltd
jns
cmp
cmp
int
mov
or
fbld
ret
sbb
inc
fbld
hlt
je
mov
stos
push
sbb
fdivrl
enter
fst
rorb
cli
fwait
js
insl
xor
xchg
sarl
sub
les
lret
cmp
clc
test
push
jecxz
push
push
xor
pushf
add
int3
outsb
stc
ret
icebp
xchg
lods
pop
pop
inc
mov
xchg
xchg
fistpll
scas
leave
xor
jns
xchg
xchg
mov
xchg
xor
pop
mov
push
adc
push
fldt
loope
and
inc
or
stos
int
test
sbb
les
add
cmp
out
xchg
mov
mov
add
ret
popa
adcb
int
pop
rolb
mov
ficoms
push
ljmp
pop
imul
sub
cmp
outsl
mov
mov
inc
add
ret
sbb
dec
xor
divl
addb
xlat
imul
or
ljmp
ret
ficoml
cmpsb
cmovbe
sti
jle
mov
mov
data16
add
add
movsl
jae
out
push
cmp
data16
dec
push
ljmp
xor
mov
pop
dec
mov
es
fwait
sbb
cltd
mov
sub
mov
dec
leave
push
push
js
aas
jle
mov
or
in
or
jp
orb
add
pop
or
pop
out
iret
iret
sub
repz
jo
jp
lret
sub
mov
mov
xchg
jne
out
iret
inc
mov
xor
mov
jge
and
lret
ret
repz
subb
pop
mov
jns
pop
sbb
cmc
fnstcw
and
inc
pop
pop
fwait
into
enter
mov
repnz
mov
sub
push
or
sbb
jnp
mov
and
pushw
stos
xchg
push
add
push
xchg
negl
cmpb
jmp
rclb
movsl
inc
jo
out
sub
lea
push
out
jns
mov
mov
leave
dec
mov
and
out
loopne
inc
pop
es
fists
incb
inc
push
pushf
repnz
lret
nop
imull
fisubs
loopne
jb
call
sub
cmp
mov
shll
inc
imul
je
push
dec
jp
lahf
stc
cwtl
into
and
test
jnp
out
or
adc
inc
loopne
jge
mov
cli
dec
aad
jecxz
cli
lds
inc
insb
jp
int
test
xchg
and
push
mov
pop
inc
push
iret
pop
lret
loop
xlat
adc
cld
icebp
fwait
push
sti
jmp
stos
xlat
ds
addr16
jmp
mov
push
push
popa
dec
cmpsl
lods
aad
dec
roll
mov
or
lock
clc
add
xor
cmp
adc
test
dec
ss
sub
fcompl
imull
add
inc
cltd
adc
jecxz
push
lds
jecxz
mov
pop
push
mov
fsts
cmp
into
dec
dec
jmp
out
aad
push
jnp
mov
add
test
mov
xchg
or
add
lret
dec
inc
repz
sbb
jecxz
dec
mov
cmp
and
pop
xor
stos
xlat
fstpl
adcl
bound
and
fists
dec
fisubrs
arpl
cld
xlat
sbb
or
dec
mov
jb
cmp
xchg
push
sub
movb
xor
mov
pop
push
inc
insb
inc
jnp
xor
sbb
add
bound
xor
insb
out
adc
mov
mov
cmpsb
cmc
or
mov
mov
fistps
and
sbb
sti
cmp
je
shll
mov
pop
cmp
mov
pop
mov
xlat
sbb
xchg
sbb
lea
mov
add
jl
push
arpl
std
loop
fmull
xchg
outsb
sbb
pop
push
xor
cmpsl
cld
push
test
fadds
xor
xchg
in
dec
or
pop
mov
loop
mov
xchg
adc
mov
push
push
icebp
mov
sbb
mov
lahf
stos
fidivs
add
imul
imul
add
rcll
jae
push
fadds
add
mov
inc
mov
jmp
popa
fldl
addr16
cmp
sbb
xor
rcll
xor
cmp
pusha
mov
ss
or
mov
loope
dec
pop
add
push
enter
pop
sub
stc
loopne
aam
subb
into
fmull
dec
jb,pn
adc
stc
add
jmp
lcall
adc
lret
push
pmaxsw
mov
addr16
sti
mov
add
jo
sbb
jnp
shr
fimuls
xor
sarb
add
mov
pop
popa
jp
adcl
pop
outsb
push
mov
stc
pop
inc
mov
dec
sub
and
cmpsl
incl
addr16
rcrl
push
xor
push
mov
jmp
pop
stos
add
sub
xchg
push
jp
jne
xor
call
int3
xor
dec
das
inc
mov
loopne
call
mov
dec
mov
jne
aad
call
sbb
sub
adc
mov
push
ret
xchg
outsl
add
sbb
addr16
lcall
pop
mov
cmp
fwait
mov
aam
lods
repz
sbb
loope
jecxz
jne
cld
adc
mov
pop
xor
loop
outsb
jle
mov
ja
loop
out
inc
call
mov
mov
or
push
push
inc
push
sar
inc
out
mov
push
les
push
push
sti
mov
mov
sbb
cmc
fisttpll
ret
pop
cmp
mov
insl
sbb
ds
sub
mov
lock
lret
mov
hlt
movsb
les
and
pushf
lahf
mov
adc
mov
sahf
inc
loope
in
call
jne
mov
les
aaa
rclb
or
mov
dec
sbb
inc
jmp
int3
xchg
xor
cltd
push
inc
mov
int
outsb
das
jnp
pop
insb
pushf
sarb
repz
sbb
push
test
pusha
cli
push
xchg
insl
xchg
jg
add
mov
adc
mov
scas
adc
roll
inc
dec
decb
and
push
jle
mov
xchg
jle
rcll
sub
adc
push
push
xor
lcall
jl
rcll
popa
cwtl
loopne
mov
sahf
cmp
dec
and
inc
sbb
in
xor
arpl
cltd
pop
pusha
fwait
inc
lea
outsl
out
hlt
shlb
push
xchg
jne
jo
adc
add
and
sti
inc
ret
ret
fistl
in
and
or
adc
add
subl
daa
jnp
mov
sub
cmp
jmp
dec
push
pop
xchg
mov
testb
push
pushf
mov
xor
sahf
popf
fsubs
stos
mov
js
sti
xor
xchg
inc
in
ss
in
jle
pop
fucomi
xor
movsb
cmp
cmpsl
adc
das
pop
js
pusha
dec
mov
pop
adcb
dec
mov
sub
fldenv
hlt
rorl
mov
dec
and
out
mov
and
dec
ret
out
outsb
xchg
arpl
pop
dec
gs
inc
loopne
xchg
dec
std
cmp
jmp
loopne
scas
mov
mov
rolb
jno
loope
ss
and
xor
shl
jp
push
dec
push
sub
add
orb
jns
out
stos
int3
decl
pop
xor
xchg
and
shrb
test
push
clc
std
mov
mov
jmp
sub
jne
inc
pop
xor
dec
imul
jecxz
sbb
scas
sbb
jmp
cmpsb
cwtl
mov
mov
mov
pop
cmp
mov
add
mov
fidivrs
test
mov
xchg
es
cmp
adc
cwtl
pop
cmc
loopne
mov
lcall
scas
mov
cmp
sbb
cmpsb
mov
and
movsb
or
fs
xchg
mov
rcll
leave
add
pop
jmp
fisubrs
sub
mov
inc
nop
inc
test
xchg
lcall
ds
outsb
xor
je
faddl
mov
aas
xor
fdivs
enter
jbe
xor
clc
adc
insb
xor
pop
jbe
shll
xor
dec
fldt
in
xchg
cld
cmc
or
pop
push
test
mov
cmp
insb
xor
add
and
mov
cmpsb
rorb
jnp
jbe
push
sbb
pop
inc
or
ss
lock
jmp
fs
nop
cwtl
cmp
cmp
bnd
push
roll
mov
add
sbb
nop
ffreep
jo
push
inc
mov
enter
cmp
sahf
rorb
push
repz
lret
pop
add
push
cmp
mov
ds
pop
cmp
xchg
cmp
push
and
mov
fs
mov
testb
in
mov
jmp
or
and
cmpsl
call
ljmp
mov
pop
and
lahf
adc
lret
jge
inc
leave
insl
jb
xorl
pop
cld
ds
jo
aas
inc
mov
cmc
jge
ljmp
sbb
mov
rcrl
ret
xor
sbb
xlat
fs
cwtl
jnp
mov
sbb
test
sub
cmp
subl
dec
test
scas
mov
xor
add
mov
jge
out
jno
lea
lods
loope
fxch
stos
sarl
cld
lret
xchg
sahf
movl
dec
iret
jnp
inc
xor
sbb
push
notl
and
out
dec
fwait
popa
insb
jb
cmp
mov
cmpsb
dec
std
inc
jl
mov
inc
jmp
inc
loopne
data16
insl
xor
enter
add
fwait
pop
fwait
jl
sub
jecxz
dec
js
jns
xchg
or
cld
jmp
and
std
mov
pop
mov
mov
ds
daa
mov
jns
sub
xchg
scas
pushf
lods
mov
lock
lods
push
mov
fld
prefetchnta
scas
mov
or
jae
les
into
test
sbbb
mov
cmp
or
or
pop
in
sbb
stc
inc
popf
pop
movl
pop
xchg
shll
add
xchg
xchg
mov
mov
jl
mov
lahf
int3
push
dec
das
add
data16
cltd
mov
aam
rol
pop
lahf
mov
sbb
lods
movsb
sub
mulb
or
push
sub
push
mov
sti
cmpsl
daa
sbb
ror
pop
decl
sarb
xchg
cmc
inc
dec
ds
pop
hlt
imul
inc
and
int
cmp
mov
mov
aam
mov
lret
inc
push
stos
test
cmp
dec
dec
lods
xchg
or
mov
and
lods
xor
nop
pop
xor
iret
leave
and
push
fs
or
dec
pop
in
out
mov
inc
push
repz
xor
adc
fsubr
push
xor
xchg
std
leave
aad
adc
movsb
in
fs
sub
hlt
cltd
sbb
in
out
addr16
in
push
inc
cmpsb
mov
pop
jb
xchg
mov
or
in
test
dec
mov
dec
fistpl
aad
scas
push
dec
pop
scas
daa
ljmp
movsb
xchg
fadd
pop
call
ljmp
mov
mov
lahf
stos
jb
ljmp
mov
aas
add
sbb
mov
xchg
rcr
outsb
add
test
inc
adc
xlat
test
std
pop
mov
push
adc
dec
or
dec
inc
xorl
lds
in
mov
jne
push
enter
jbe
ficompl
aam
sbb
adc
iret
in
xor
and
jecxz
add
adc
add
into
xchg
dec
pop
aaa
test
and
repz
repnz
clc
test
clc
repz
add
in
ret
and
xchg
into
aaa
add
xchg
loope
les
jg
cmp
or
ljmp
js
sbb
fcos
call
jno
mov
pop
cmp
sbbw
pushf
iret
sbb
leave
inc
daa
nop
sbb
scas
xchg
in
stos
push
out
mov
sub
imul
mov
ljmp
adc
xchg
sub
and
mov
lea
inc
sbb
jecxz
or
repnz
jb
push
jle
and
je
lret
push
repnz
pop
mov
lahf
stc
in
jns
into
xchg
sub
mov
ret
cmpsb
mov
enter
jg
or
cmpsb
mov
mov
aad
cmp
in
into
bound
inc
imul
ret
dec
jecxz
adc
movsb
test
fcmovnbe
dec
xor
call
lds
loopne
and
test
icebp
jnp
push
bound
mov
xchg
mov
push
sbb
cmp
fcmovbe
repnz
sub
pop
or
xchg
add
jb
or
add
addr16
cmc
enter
nop
xchg
lahf
pusha
push
mulb
mov
lock
jg
xchg
sub
pop
pop
mov
jne
mov
mov
pop
bound
or
mov
xchg
in
jge
lods
testl
push
call
add
std
popa
adc
sub
jbe
sti
dec
cs
dec
mov
les
pusha
jo
in
loop
sub
outsl
adc
cmp
jmp
mov
jmp
sub
or
or
daa
push
dec
insb
lods
fsubl
pop
imulb
inc
xchg
mov
cmp
adc
out
mov
mov
fwait
test
push
cmpsb
mov
mull
popf
jg
adc
and
mov
pop
std
pop
mov
sbb
mov
enter
jg
lret
xchg
mov
jmp
int
dec
insb
clc
cli
cmpsb
sbb
jp
movsb
fbstp
cmp
pop
testl
bound
int3
xor
orl
insb
js
cmc
dec
sbb
sbb
call
xor
addl
and
imul
in
addr16
or
pop
pusha
mov
loop
fldpi
aam
pop
aad
movsb
jnp
jae
std
push
push
inc
xchg
fcomps
pop
adc
mov
cld
bound
sbb
dec
mov
pop
fistps
or
js
xor
push
mov
adc
lds
imul
test
push
sub
test
lret
push
outsb
je
add
xchg
and
fdivrs
fidivrs
into
mov
mov
and
add
inc
pusha
sbb
cmp
js
push
mov
xlat
sbb
xchg
pop
and
into
sahf
push
filds
rcrl
inc
xor
pop
ljmp
mov
out
cmp
pop
sarb
jecxz
jae
out
dec
sub
add
push
mov
jo
ret
rcl
cmpsb
pop
xchg
sub
repz
lods
shrl
imul
inc
push
repz
xchg
jp
jns
pop
clc
mov
cmp
sub
enter
fistpll
js
or
loope
push
int3
cltd
and
hlt
shl
cmp
xor
push
jno
aad
mov
pop
xchg
jo
sub
or
inc
sub
mov
sbb
daa
sahf
dec
push
xor
push
cmp
outsb
aad
int3
hlt
mov
or
aad
and
add
test
pop
clc
fs
jb
xchg
pop
mov
pop
jae
xchg
mov
dec
js
les
dec
push
ja
mov
cmc
int
mov
fistpll
sub
sbb
das
popa
pop
or
bound
inc
stos
add
les
and
push
mov
fildl
and
adc
std
popf
jg
dec
and
push
xchg
push
or
mov
mov
inc
mov
cmp
out
and
aad
inc
ret
in
push
pop
fcompl
inc
sbb
dec
xchg
xchg
jb
dec
jno
or
sbb
push
cwtl
push
mov
ljmp
lds
ret
xor
jmp
dec
cmpsb
jmp
xor
test
ret
int
cltd
aad
in
jmp
enter
push
sub
xor
mov
mov
icebp
sbb
or
call
or
clc
adc
xor
movsb
pop
cwtl
iret
dec
jecxz
iret
cmc
and
movsb
imul
jl
scas
adc
adc
inc
loop
je
loopne
push
lock
jae
and
mov
ss
int
sub
mov
dec
les
mov
jle
and
out
imul
lret
pop
mov
sub
add
out
xchg
stc
test
std
dec
orb
xor
adc
lods
pop
pop
pop
mov
aas
shlb
jns
ja
into
mov
push
je
outsb
divb
xchg
adc
lret
out
dec
jnp
jle
arpl
repz
sub
adc
rcrl
mov
dec
mov
ret
out
call
in
shll
jnp
push
jae
movsb
pop
or
mov
xchg
fcomps
xchg
xchg
clc
adc
lock
or
xchg
pop
and
mov
push
lcall
and
xchg
inc
outsl
sub
mov
and
jae
push
cld
or
mov
into
out
cmp
insb
xchg
int3
push
das
lret
xor
inc
rolb
xor
mov
xor
jae
mov
xor
insl
jns
imul
fdivrs
test
mov
das
cmp
outsl
rolb
push
push
ret
mov
mov
out
rcrb
fldt
adc
push
dec
mov
test
mov
and
lock
xchg
adc
leave
icebp
cmpsl
mov
adc
xchg
jp
jbe
mov
sub
mov
inc
push
sub
lret
cli
inc
mov
imulb
stc
xchg
insb
mov
jge
sub
icebp
loope
sbb
loopne
out
xchg
jno
push
mov
jo
hlt
es
add
add
inc
jl
es
mov
es
test
adc
and
mov
dec
or
hlt
pop
loop
inc
mov
xlat
mov
cmp
mov
mov
pop
mov
test
xchg
dec
imul
shl
das
push
nop
sbb
xchg
or
les
out
mov
fdivl
cli
pushf
xor
fcmovne
pop
or
push
mov
orb
adc
fsubrl
jge
out
mov
jb
je
mov
mov
mov
inc
dec
cwtl
faddl
cli
jo
cmp
rcr
add
adc
in
push
dec
pushw
sub
dec
cmpsb
repz
jl
xor
out
in
xchg
or
push
cmp
sbb
cld
mov
mov
out
test
pop
mov
mov
mov
and
sub
aas
or
gs
lock
push
dec
filds
mov
mov
pop
lea
std
in
repnz
mov
in
sub
xor
pop
aam
call
mov
mov
jge
fcoms
repnz
imul
pop
xchg
sbb
xor
mov
dec
loopne
adc
in
int
push
dec
pushf
pop
jmp
and
movb
push
test
dec
js
cmp
test
stc
inc
mov
mov
push
add
xlat
jne
cs
cmpsb
dec
test
dec
rol
sbb
adc
cli
popl
aad
pop
ror
cmp
cli
setp
dec
add
inc
lret
inc
cmp
xor
aad
and
js
sbbb
mov
popa
mov
mov
out
je
mov
repnz
sub
test
inc
repz
dec
bound
mov
lea
les
fwait
mov
mov
popf
loopne
mov
sub
fisttpl
es
ret
test
sub
repnz
sbb
and
cmp
inc
fwait
mov
repnz
mov
jmp
pop
mov
stc
dec
fmuls
or
outsb
xchg
lcall
movsb
shl
std
jbe
mov
in
push
or
or
cmpsb
sbb
sahf
mov
cmp
cpuid
in
subl
push
pop
xchg
outsb
jae
aad
mov
push
nop
ret
icebp
int
insb
repz
add
popa
sahf
mov
jge
push
movsl
inc
ja
les
add
fildll
lcall
fisubrs
rcll
pusha
out
sub
scas
lcall
pop
les
and
pop
decl
jae
jno
mov
inc
dec
leave
cs
mov
or
iret
loopne
inc
cmp
and
adc
imul
add
push
sbb
subl
enter
dec
push
jne
pop
dec
sub
jbe
mov
mov
add
jo
fidivl
xchg
lods
cltd
aas
int3
dec
jle
fisubrs
mov
ret
cltd
repnz
pushw
popf
js
push
pusha
inc
mov
stc
stos
insl
icebp
insl
dec
push
mov
out
inc
fwait
pop
sbb
mov
test
addb
cmp
test
loop
dec
int
imul
aas
mov
and
xchg
pop
jecxz
lock
test
iret
cs
mov
les
xchg
mov
inc
mov
arpl
mov
and
bound
rcrb
roll
ret
sub
popa
push
adc
cmpsb
xchg
out
call
mov
pop
pushf
fisubl
data16
mov
aaa
mov
int3
jbe
mov
rcrb
cwtl
push
loop
clc
inc
jg
test
in
test
flds
mov
lods
lcall
lock
xchg
in
mov
push
into
cs
mov
cmp
and
es
sub
shrl
lcall
lret
dec
and
xchg
mov
ds
xchg
out
pop
pop
cs
test
pop
stos
lret
notb
aad
mov
in
sbb
sub
lock
pop
ficompl
lcall
ds
xor
mov
cmp
mov
jne
xor
push
jecxz
cmpsl
cld
sub
adc
mov
add
fildll
ljmp
cmp
sub
in
repz
push
mov
sbb
out
mov
test
cmp
jle
mov
mov
cwtl
or
fisubl
dec
ja
mov
out
je
daa
subl
jnp
movsl
loopne
pop
pop
add
or
sbb
pusha
repz
pop
std
and
fbld
adc
enter
mov
inc
test
aad
fmulp
lods
and
lahf
cmp
rcrb
out
sub
ja
fcomi
fwait
repnz
mov
push
push
daa
add
inc
stos
push
cld
test
add
adc
xor
or
fwait
and
mov
test
leave
stos
xor
ljmp
into
sbb
sbbb
dec
push
dec
sbb
push
fstpl
mov
clc
orb
sbb
ja
sub
je
pop
sub
sbb
inc
loop
fwait
insb
pushf
mov
scas
lods
mov
popf
ret
loopne
std
sbb
mov
fistpll
jo
popa
mov
push
ret
xchg
in
jne
push
lods
aaa
sbb
in
out
out
inc
sub
icebp
lret
in
mov
inc
xor
mov
mov
sahf
dec
cmp
sub
mov
test
nop
rorb
loope
iret
das
aaa
hlt
test
or
pusha
add
sub
push
dec
sub
lea
inc
jg
add
xchg
ja
sahf
mov
adc
or
cltd
jmp
leave
adc
lcall
dec
and
rolb
call
clc
insl
repz
es
mov
cmp
std
cmp
fstl
jge
ds
mov
push
pop
fcomps
or
add
sbb
push
cmp
xchg
mov
or
stc
dec
pusha
insl
es
int3
fmulp
mov
rorb
sbb
or
repz
mov
in
repnz
dec
ss
push
ja
xchg
push
ret
aas
icebp
xorl
adc
mov
jnp
fstpt
cmp
daa
xor
xchg
cmp
mov
pop
iret
mov
cld
outsb
mov
arpl
sub
fs
in
push
in
dec
sub
call
rolb
out
mov
dec
int3
pop
sub
inc
rcrb
and
push
in
xor
stos
adc
xchg
cmc
cltd
inc
xchg
and
adc
mov
cltd
or
sbb
mov
cmp
adc
mov
sub
cmpsl
cmp
xor
call
test
repz
inc
push
fsubl
out
xchg
xorb
fdiv
lods
pop
sub
or
xor
loopne
push
lret
sub
popa
nop
test
mov
xchg
and
cmpsb
and
frstor
out
repnz
sbb
adc
inc
adc
sbb
cmp
ret
push
sahf
lahf
adc
repz
loop
imul
icebp
lcall
repz
cmp
imul
push
fidivl
fldl2t
xor
out
jl
cmp
cs
aad
jns
arpl
mov
loopne
out
fisubl
jg
leave
pop
ret
div
xor
mov
jbe
jge
and
das
jns
fildl
mov
pop
xchg
sbb
loope
mov
push
lock
xor
sbb
ret
add
mov
movsb
repz
aam
shlb
fimuls
cld
fwait
gs
jns
xor
in
dec
fildl
das
jl
jo
or
nop
or
aas
int3
jp
adc
inc
testl
out
xchg
jmp
sahf
jl
lock
cmp
enter
andl
xchg
dec
clc
mov
cs
js
sbbb
shlb
mov
outsb
adc
adc
dec
mov
push
ja
dec
rcrl
dec
cmp
inc
inc
jge
fld
mov
lds
and
sbb
aas
jae
popf
mov
sahf
ret
mov
cli
inc
lahf
jp
pop
ret
stc
cmpb
test
pop
add
cmp
jg
mov
clc
mov
mov
inc
in
mov
cmc
sbbl
ret
sbb
cmpsl
jnp
adc
setb
jp
push
adc
mov
roll
mov
add
lret
stos
out
adc
push
sbb
lock
push
mov
sbb
sahf
in
mov
shl
out
int3
xchg
jmp
aas
data16
nop
int
loop
xlat
cwtl
xchg
rorb
cld
adc
xor
push
sub
call
mov
out
sbb
xor
cmc
fcmovb
xchg
out
aaa
ret
xchg
cli
adc
jno
add
dec
xor
fists
xor
aad
cld
ret
push
mov
int3
les
gs
out
xor
add
cmp
lahf
xchg
xor
sarl
dec
scas
push
loopne
sahf
es
lock
es
adc
daa
cmpsb
icebp
sbb
xlat
jg
imul
in
dec
jle
insb
pushf
insb
adc
cmp
imul
lods
xchg
inc
add
in
mov
shll
or
push
and
sbb
mov
or
nop
pusha
popf
xlat
in
or
jbe,pn
cmpl
je
sub
mov
add
jae
test
dec
inc
sub
push
add
add
cmp
lds
sbb
dec
call
test
aas
and
fwait
aaa
neg
int3
lahf
in
or
ret
lret
add
std
xlat
ja
mov
aas
pushf
sbb
xor
xor
test
xlat
jae
mov
das
inc
dec
test
xchg
in
adc
fdivp
xchg
dec
push
stos
sbb
mov
out
cs
push
fimull
add
pop
loop
cmp
push
insb
inc
ljmp
xchg
out
test
xchg
js
mov
addb
sub
jl
rclb
iret
push
adc
imul
jns
mov
sub
lret
outsl
les
adc
jbe
xchg
es
push
push
push
gs
cltd
or
dec
adc
lock
loopne
dec
mov
mov
stc
int
sbb
inc
loope
fldt
jb
shl
jg
mov
ss
xchg
jb
xchg
mov
xchg
adc
mov
or
and
icebp
xchg
mov
inc
lret
xlat
test
sbb
jns
pop
push
insb
and
into
in
aam
mov
divb
and
nop
adc
mov
lods
fnsaves
int3
mov
xchg
xor
sbb
adc
inc
movsl
test
sbb
fld1
lret
adcb
mov
loop
sub
cmp
mov
cmc
adc
fcomps
imul
std
add
loop
or
test
add
push
pop
lret
lret
scas
or
dec
sbb
dec
mov
pushf
xchg
sub
mov
lods
scas
dec
clc
mov
pop
and
mov
lds
push
mov
call
fptan
int
test
lret
xchg
notl
jl
push
fwait
or
inc
pushf
pop
xor
jae
pop
fistpl
mov
add
xchg
stc
pop
les
andl
mov
push
jg
addr16
int
push
cmp
std
jnp
pop
pop
push
shrb
cmp
in
lcall
inc
aam
pop
stos
insl
pop
push
mov
adc
add
int
adc
shll
mov
jle
test
enter
or
insb
pop
adc
and
fwait
lods
int3
jge
jbe
jp
mov
sub
pop
cmp
lock
aas
jecxz
inc
rolb
mov
mov
nop
sub
dec
mulb
push
inc
dec
mov
dec
data16
sar
mov
push
cmp
xor
aaa
xlat
fwait
shrb
pop
cmp
and
fs
leave
insb
je
ja
jbe
cwtl
push
xchg
test
pop
loope
leave
mov
fisttps
aas
shll
push
mov
shlb
sti
inc
xor
sbb
je
cmp
cmpb
mov
push
lahf
push
imul
mov
sti
jae
xor
xchg
mov
lock
or
mov
mov
mov
sar
test
inc
fistpll
inc
stc
mov
jle
aad
pusha
add
push
icebp
dec
insl
pop
cld
jae
cmp
push
stos
inc
call
scas
add
inc
dec
push
mov
fisubs
fwait
sub
adc
jecxz
inc
cmc
cmp
jb
jns
sub
loope
pop
pop
and
pop
mov
sar
lods
push
xchg
ljmp
xchg
fs
loop
ret
xor
je
aam
add
push
rclb
jno
push
xchg
sahf
jmp
arpl
mov
mov
cltd
inc
push
push
les
test
ret
push
xchg
nop
cltd
cmp
xor
cmp
xchg
add
jp
sbb
pop
lea
dec
lods
cltd
push
inc
movsl
iret
lcall
push
imul
sub
sbb
mov
fmuls
lock
sbb
mov
clc
inc
sub
or
cmp
pop
pusha
jle
das
fidivrs
dec
arpl
enter
push
bound
shlb
pop
and
repnz
cmp
inc
sub
ja
push
dec
and
inc
loope
dec
sahf
ret
into
pop
stos
les
mov
mov
repnz
mov
mov
and
ret
fs
xchg
pop
push
pop
in
fildll
cmpsl
sub
fnstenv
jo
clc
in
mov
xor
loope
leave
mov
sbb
ja
adc
gs
mov
sbb
pop
jmp
mov
push
xchg
push
sbb
outsb
mov
rcrb
or
arpl
push
mov
lods
dec
scas
int3
mov
jg
fnstsw
test
or
test
push
mov
fcompl
pop
jle
les
loopne
mov
pop
sti
and
test
and
jb
addr16
stos
xchg
ljmp
xlat
std
mov
jge
hlt
movsb
jp
test
stos
loopne
mov
mov
xchg
xchg
andl
movsb
enter
test
dec
sbb
movl
pushf
mov
test
jmp
ja
and
inc
shll
negl
enter
lea
mov
subl
mov
mov
sarl
lods
fcompl
dec
sbbl
mov
jbe
jno
ret
mov
sti
xchg
mov
fadds
xor
fildll
dec
and
fcmovnbe
data16
xorl
shlb
iret
in
xor
lds
mov
lea
rcr
fsubrl
xor
test
lret
xchg
mov
fdivl
repz
cmp
push
and
daa
testb
pop
arpl
aam
shlb
jo
jb
adc
sarb
les
jnp
out
out
adc
sub
pop
mov
roll
add
push
ret
push
and
ret
adc
scas
cmpsb
mov
cmp
iret
jl
leave
stos
loope,pt
cmpl
pop
jnp
sahf
bound
and
pop
jmp
push
or
popf
cs
jo
pusha
or
xor
rcll
pop
mov
adc
sbbl
jl
in
or
lcall
xchg
hlt
jp
lret
cld
and
test
frstor
cmpl
clc
inc
ret
cmp
pop
jp
push
inc
cmp
mov
sar
mov
sbb
enter
adc
arpl
into
pop
sbb
cld
mov
and
xchg
lret
sub
mov
orl
jmp
lods
mov
sub
xor
sbb
outsb
adc
lock
dec
jle
fdivr
xchg
inc
insl
add
stc
cwtl
hlt
out
cmp
insb
ja
ret
or
add
mov
jno
insb
mov
mov
mov
jns
push
gs
or
adc
mov
into
stos
xchg
ret
dec
cmp
roll
test
jb
cs
adcl
cmp
xchg
imul
pop
xor
jae
cmc
mov
notl
and
push
adc
stc
ret
shrl
data16
mov
inc
and
sbb
mov
test
fs
mov
ds
jle
cmpsl
or
and
imul
add
pop
mov
xor
aam
lods
stos
mov
jb
adc
insb
adc
cwtl
popa
es
lea
outsl
mov
cmc
mov
cmp
jne
jbe
mov
xorl
sarl
imulb
sbb
mov
xor
pop
dec
aam
scas
imul
xchg
or
lahf
std
and
ja
aaa
inc
pop
dec
lahf
mov
cs
lret
push
test
xlat
adc
jge
push
jg
arpl
cmp
push
out
out
and
repnz
es
add
lahf
js
xor
jnp
mov
inc
testb
icebp
mov
fsub
xchg
or
push
adc
xor
bnd
mov
les
jp
jns
cli
xor
shrl
push
mov
js
or
mov
sahf
xchg
dec
popf
add
flds
sub
add
sbb
in
loop
push
cmc
adc
mov
pop
xchg
mov
mov
mov
dec
leave
shl
mov
lcall
aam
dec
popf
stos
adc
sbb
mov
fs
jns
loopne
int3
mov
xor
cmp
jae
test
inc
push
mov
adc
popa
xchg
sbb
popa
pop
dec
mov
jns
pushf
xor
jmp
dec
mov
sub
js
popf
daa
adc
out
mov
stc
inc
jns
add
mulb
test
pop
lea
or
test
popa
sbb
mov
out
push
push
mov
sahf
cmp
push
repz
push
aad
clc
mov
push
ja
mov
mov
add
adc
insb
inc
and
mov
cmp
loopne
adc
and
and
jl
sub
pminsw
scas
jne
or
pop
sahf
rcrl
orl
push
call
repnz
xchg
sbb
push
mov
test
adc
xor
sbb
xchg
jb
pop
or
pop
sbb
or
or
orl
mov
jbe
clc
mov
lods
or
cltd
jns
add
gs
push
xchg
outsl
aam
lret
or
add
mov
xchg
and
adc
test
sub
mov
sbb
lods
insb
mov
loop
mov
andl
jp
dec
imull
push
int3
int
outsl
xor
mov
sbb
push
push
cmc
xchg
je
push
popf
test
movsb
mov
push
mov
out
fidivl
lea
inc
mov
ret
outsb
rol
ds
dec
dec
repz
mov
push
push
sti
rolb
dec
adc
decb
pop
es
out
sub
cmp
std
cwtl
lcall
xor
xchg
pop
das
jo
fmul
jg
mov
mov
inc
aad
inc
xor
xor
mov
ljmp
fcomip
dec
sub
loope
sub
out
mov
arpl
lret
or
iret
call
pop
jmp
into
dec
ror
adcl
mov
dec
mov
mov
daa
ss
cmpl
push
fsubrp
cmp
bound
mov
lods
jmp
sub
push
loope
push
inc
sbb
push
xchg
pop
adc
xchg
dec
push
adc
data16
sub
sahf
xorb
addr16
cs
aaa
sbb
cld
popa
cld
lea
xor
dec
pop
es
fwait
shrb
cmp
stos
notb
jnp
mov
lret
sub
cld
out
and
in
lds
cmpsb
mov
test
sub
lods
cmp
inc
jmp
mov
and
das
int
clc
stos
sbb
jb
bound
push
cmp
dec
push
icebp
gs
xchg
into
adc
jmp
mov
push
ljmp
arpl
sub
jns
mov
roll
fdivl
ds
mov
sbb
dec
aaa
movsl
adc
xchg
movsb
jmp
lret
sbb
cmp
mov
pop
shlb
pop
add
sbb
fs
imul
and
orl
repz
dec
push
in
add
loope
daa
adc
add
iret
add
add
adc
fdivp
mov
scas
movsl
lods
jle
jp
dec
mov
add
mov
or
fcoml
jecxz
sbb
xchg
sqrtps
xchg
or
xor
sub
xor
bound
imul
sub
cmp
xchg
aaa
xchg
lock
pop
xchg
and
mov
inc
sahf
mov
ss
pop
mov
inc
lods
fisubs
jns
lods
fnstsw
add
xchg
and
mov
add
insl
adc
adc
xor
leave
push
insb
mov
testl
and
ss
inc
lcall
add
jp
aas
std
jl
mov
les
scas
and
adc
jmp
xchg
std
call
iret
outsb
or
pop
jno
xor
leave
jmp
and
clc
mov
pop
or
or
and
or
daa
sub
test
add
sbb
std
or
lret
pop
and
and
mov
sub
lcall
jnp
pop
cmp
push
xchg
dec
push
test
dec
and
pushf
test
jle
test
data16
cmp
ret
fstl
jo
sub
jae
ret
sbb
out
leave
push
pop
add
adc
mov
sub
cmp
jmp
imul
or
in
fisubrl
sub
add
fs
lds
add
xchg
and
xor
repz
pop
lret
xchg
dec
lds
ds
shlb
rorb
sub
loopne
mov
test
loopne
int
adc
dec
adc
out
lods
addr16
or
mov
sar
ljmp
xchg
pusha
in
sub
push
shlb
loope
dec
orb
cltd
cmp
dec
xor
cli
rclb
stc
loope
sub
adc
dec
inc
rorl
hlt
xor
jl
out
inc
outsb
dec
gs
ds
divl
sbb
push
scas
push
xchg
lret
mov
jl
outsb
jecxz
fwait
cmp
sub
adc
sub
je
push
das
mov
sbb
cmp
push
mov
jp
jns
in
pop
arpl
jl
or
mov
popa
add
pushf
pop
xchg
cmpsl
sti
clc
lahf
mov
clc
or
mov
out
sbb
imul
repz
mov
fimull
sub
xchg
fsubrl
or
add
cwtl
shll
bound
add
add
jbe
stos
ret
mov
insb
cli
pop
xlat
lahf
push
add
bound
and
or
cmp
mov
idivb
jns
repnz
rcll
std
fwait
xor
dec
add
outsb
dec
aaa
inc
bound
movsb
icebp
out
int3
shl
sbb
mov
xchg
mov
outsb
xor
or
inc
pushf
loopne
sbb
jae
nop
dec
mov
or
xchg
mov
out
jg
inc
sbb
jnp
jns
and
es
imul
out
xchg
sbb
jb
and
push
cmp
fldenv
stos
push
cmc
rolb
adc
stos
movsl
mov
rol
lods
in
mov
xchg
jb
dec
sbbl
jmp
jo
div
jb
mov
mov
js
or
mov
ror
repnz
cmc
stos
es
test
fdiv
jae
pop
xorb
mov
repz
out
imul
mov
push
out
dec
and
addr16
notl
test
mov
pop
movsl
aad
scas
lods
mov
js
mov
aaa
mov
jmp
mov
ficomps
xorb
movsl
push
cmp
repz
add
call
scas
xor
mov
enter
arpl
addl
rcll
jns,pt
pop
in
div
xor
daa
divl
xchg
sti
push
fidivrl
in
daa
into
cmp
pushf
add
imul
or
imul
pop
push
into
loope
fwait
bswap
movsl
les
cmc
sbb
cmpsl
dec
mov
in
sub
sub
test
push
xchg
xor
adc
mov
addl
roll
pusha
pop
cltd
adc
inc
xchg
push
psubsb
push
adc
jnp
idivb
mov
jne
mov
ficoms
lcall
sbb
jae
sahf
out
jl
imul
cmpsb
popa
jecxz
xor
sbbl
xchg
push
test
cmpsb
ja
or
bound
das
sub
xor
adc
mov
rol
std
cs
sub
or
or
sub
mov
inc
push
bound
outsl
popa
and
es
mov
aaa
into
xchg
xchg
fisttpll
cmp
pop
dec
fisubl
jecxz
scas
inc
in
push
aad
ljmp
push
dec
sub
fists
ja
cs
push
add
enterw
mov
mov
shlb
out
addr16
arpl
adc
xchg
mov
jl
in
arpl
fisttpl
lret
and
pop
lods
aas
adcl
mov
jmp
in
movsl
push
pop
or
aas
mov
movsb
mov
cmpsb
jb
or
sub
xchg
stos
jg
xchg
int
sub
cmp
xchg
popf
pop
push
cmp
xchg
sbb
push
lret
lea
sub
inc
mov
push
sbbl
cld
out
cmp
mov
pushf
and
pop
and
xor
mov
cmp
and
out
movsb
shl
xchg
ficoml
lcall
aas
pusha
sub
int3
inc
imul
cmpl
insl
bound
popf
mov
mov
or
rclb
sbb
xchg
jns
inc
test
js
push
out
testl
adc
mov
xchg
int3
mov
jl
fcmovne
push
mov
je
loopne
sub
mov
push
cmpsb
cld
mov
int
xchg
xor
movsl
sub
add
push
and
lahf
adcl
push
xchg
fiadds
mov
in
pop
addr16
aas
test
pusha
data16
out
adc
popa
xchg
and
lret
sbb
decl
insl
test
jp
mov
or
daa
shll
fiaddl
pop
add
push
lea
pushf
popf
xchg
xor
mov
and
and
aam
movsl
xor
aam
mov
xchg
mov
cmpsl
sbb
cmp
shll
jmp
xchg
jmp
rcrl
mov
outsb
mov
dec
fisttps
nop
imul
leave
push
xor
es
sbb
mov
out
dec
pop
pop
push
rorl
pop
inc
cli
adc
add
add
fiadds
ljmp
cmp
outsl
insl
call
arpl
pop
sub
inc
clc
fsts
lea
mov
xchg
adcl
sar
js
cmp
pushf
jle
int
aad
stos
stc
fstpl
cmove
push
mov
out
and
mov
push
sbb
cmp
cs
xchg
adc
inc
loope
cmpsb
mov
movb
scas
rclb
sti
daa
cmpsl
push
fs
sbb
sahf
int3
orl
mov
dec
sbb
mov
out
pmulhuw
enter
shlb
jge
lock
sti
sub
repnz
and
push
add
int3
or
dec
pop
test
mov
push
ljmp
bound
mov
xchg
add
add
int3
fsubp
mov
or
mov
jne
dec
inc
iret
or
ds
cmpb
pushf
lahf
enter
aam
inc
push
push
aaa
mov
repz
jnp
clc
dec
xchg
call
mov
in
ja
xor
sahf
push
std
emms
sub
or
mov
test
bound
mov
dec
mov
mov
movq
shlb
filds
sub
call
push
stc
fwait
inc
ret
repnz
pop
imul
mov
cmc
data16
fnstenv
dec
cmpsb
xor
push
pusha
test
movsb
mov
push
xor
cmpsb
movsl
scas
repnz
xlat
dec
xchg
pop
int3
lret
jmp
pop
enter
jb
xchg
inc
sbb
and
inc
cmp
mov
mov
dec
lret
out
mov
push
lods
stos
sti
ss
mov
lds
rcll
add
jb
clc
pop
in
inc
dec
cli
mov
out
push
inc
sbb
push
mov
rol
shl
movsb
dec
xor
lds
testb
call
rorl
sub
sbb
sub
dec
sqrtps
xor
sbb
dec
je
outsl
mov
in
lcall
jle
shlb
jp
inc
mov
out
inc
sbb
scas
std
fsub
mov
fcoml
mov
cmpsl
adc
das
out
outsl
jae
mov
xor
inc
adc
pushf
push
inc
inc
xor
push
int3
mov
ret
jle
mov
outsb
push
in
mov
dec
aas
int3
mov
andb
not
pusha
sub
in
xchg
lods
and
cld
lock
pop
pop
mov
inc
xchg
pop
ljmp
ret
push
loope
xchg
pop
jne
insb
add
loope
push
loope
or
and
daa
arpl
ja
aad
xor
stos
inc
jb
jno
test
in
test
sbb
xchg
dec
jle
aad
mov
ja
arpl
sub
jg
filds
adc
mov
mov
stos
je
jae
jb
rclb
aad
push
cwtl
cmp
scas
sub
push
lret
sub
iret
or
popf
mov
cmp
imul
or
jl
and
ficomps
push
mull
cli
xor
and
dec
ss
or
ficoms
pop
ds
ret
ds
popf
stos
das
cltd
int
pop
ds
mov
and
fidivrs
mov
add
dec
outsl
push
add
cmp
adc
sti
out
imul
in
or
ficomps
aad
mov
xor
scas
mov
adc
push
sbb
int3
sbb
xor
mov
lret
ficoml
ljmp
jle
adc
test
and
xchg
aaa
repnz
push
cltd
pop
in
or
aas
pop
js
clc
test
mov
stos
aaa
inc
mov
js
and
adc
mov
sub
jmp
push
pop
fsubs
inc
push
mov
test
inc
add
outsl
enter
int
add
int3
ja
jmp
test
in
xchg
iret
xchg
test
push
xchg
mov
xor
dec
pop
pop
mov
jnp
in
inc
inc
xchg
xchg
cld
pop
push
and
or
sti
xchg
dec
fwait
arpl
mov
mov
and
ucomiss
lds
pop
push
mov
scas
xor
xor
ljmp
out
mov
and
jne
aad
pop
cmpsl
sbb
mov
lahf
addr16
or
fisubrl
xchg
shlb
or
in
sbb
fldcw
or
cmp
and
outsb
dec
push
jl
mov
out
fimull
jg
mov
dec
insb
ret
insl
or
jb
and
int3
push
cltd
add
jle
and
inc
hlt
add
push
add
push
adc
dec
data16
out
inc
pop
jnp
repz
lahf
or
cld
xor
fs
loope
mov
xchg
cmp
in
imul
add
movsb
dec
push
into
shll
mov
data16
inc
or
fisubl
and
fmuls
aaa
sbb
test
insl
mov
lcall
pop
dec
jbe
lea
xchg
insb
push
dec
pop
mov
mov
mov
out
mov
les
dec
jmp
jl
jno
jo
fldenv
xchg
xor
rorl
loop
push
lds
rorb
or
cmp
insl
fsubs
lods
icebp
dec
cwtl
je
and
lret
out
bound
cld
sbb
xorb
and
pop
ja
xor
dec
add
and
xchg
ljmp
aaa
enter
in
pop
in
cmpb
adc
adc
cmp
sub
mov
push
xor
add
int
mov
imul
mov
gs
mov
fimull
xchg
insb
movsb
jl,pt
pop
sahf
repnz
addr16
xchg
out
mov
mov
mov
dec
cmp
mov
push
aam
mov
cld
ret
outsb
push
dec
push
cmc
cmp
fnstsw
aas
insl
xchg
ja
push
pop
mov
mov
nop
or
inc
and
push
cmpsb
outsl
or
pop
stc
jl
sbb
ljmp
sub
fwait
and
ret
push
mov
pop
pmaddwd
out
mov
or
es
out
mov
jo
cmp
in
add
adc
subb
out
lods
push
pop
cs
popf
jb
mov
lock
lahf
inc
addb
scas
jmp
les
hlt
adc
sahf
and
divl
inc
or
pop
lea
jecxz
pop
mov
into
mov
sub
es
js
dec
pop
inc
cld
out
iret
push
jg
ret
adc
outsl
dec
clc
pop
and
and
push
repz
daa
push
dec
repz
mov
or
cmp
cmp
aas
xor
cmp
mov
aad
mov
sub
push
repz
test
dec
xchg
jp
repz
jb
outsb
jecxz
test
cltd
sub
pop
push
lods
or
test
mov
das
in
lods
mov
inc
loope
or
mov
sub
jp
xor
imul
dec
mov
adc
inc
add
lds
pop
and
and
add
jns
jmp
enter
add
pusha
scas
jle
or
inc
and
aad
push
and
inc
mov
jbe
inc
rorb
call
in
lcall
adc
in
sbbl
in
fcomp
fsubl
pop
dec
or
fst
jno
pop
mov
or
nop
addr16
dec
mov
addr16
or
orps
cmpsl
jo
pop
ja
repz
lahf
aas
add
popa
mov
insb
add
call
popa
sbb
frstor
aad
fnstsw
jae
adc
daa
push
loopne
imul
inc
mov
mov
mov
test
sub
cmp
dec
adc
xor
jns
int
fstp
xor
in
cmpsl
and
xor
lds
xchg
mulb
clc
int3
loopne
test
frndint
aaa
fisttpl
mov
inc
jne
test
xor
stc
cltd
nop
sub
push
mov
lds
pushf
clc
xor
mov
mov
fidivs
outsl
inc
jmp
rorb
popa
repnz
stos
inc
jno
ds
xor
xor
mov
orb
mov
cwtl
lods
pop
and
inc
loop
data16
fmull
pop
ret
add
rcrl
sbb
clc
adc
outsb
jb
icebp
mov
popf
arpl
xor
test
push
mov
lods
push
jl
leave
jp
aas
rep
stos
xor
jb
mov
gs
jbe
xor
call
xor
adc
mov
adc
ds
sbb
cmpsb
inc
andl
sbb
dec
and
sub
pop
xor
xchg
into
push
jne
ret
mov
cs
push
mov
inc
mov
and
sbb
adc
xor
in
imul
or
jb
das
cmp
insl
push
mov
jg
out
push
ret
xor
insl
push
shr
in
pusha
lahf
xchg
roll
mov
inc
jl
lahf
push
sbb
loopne
push
subb
cmp
xor
sbb
in
fsts
mov
pusha
pushf
movsl
xor
sar
or
dec
imul
cmp
fidivs
sub
push
or
daa
jne
inc
add
jmp
cmp
inc
sti
out
or
sub
jg
cmp
test
mov
cmp
sbb
jnp
mov
jecxz
aaa
movsb
ret
ret
rcrb
daa
sub
cmp
mov
mov
nop
ret
jl
adcl
mov
outsb
sbb
cmp
mov
lods
mov
xchg
pop
adc
add
outsl
jb
sbbl
repz
shl
dec
pop
testl
fcomps
inc
loop
test
cs
pop
movsb
adc
rolb
xor
movsl
adc
sahf
into
jecxz
imul
xor
add
ss
jno
inc
mov
mov
movsb
and
outsl
dec
push
outsb
ds
mov
xchg
ds
xchg
pop
mov
ret
mov
je
xor
sbb
filds
jmp
push
hlt
decl
jmp
sbb
das
and
and
mov
xor
inc
sbb
and
push
mov
repz
ds
pop
sti
mov
int
mov
xor
add
dec
mov
push
and
out
dec
jge
push
or
sub
addl
lret
or
mov
dec
aam
inc
add
sti
cmc
movsb
dec
xchg
push
jb
shll
aaa
ja
mov
mov
lods
aaa
or
sub
dec
push
sub
outsl
sub
dec
out
out
sahf
inc
icebp
adc
sbb
outsb
mov
mov
shlb
or
rcrl
mov
andl
imul
sbb
mov
int
mov
jne
inc
je
sbb
cmpsb
in
pop
lods
clc
push
mov
das
mov
xor
repz
inc
add
push
aaa
sti
xlat
inc
xchg
mov
adc
repz
int
sarb
fisttps
lea
mov
adc
clc
push
lods
gs
iret
mov
sti
jl
sarb
push
out
stos
adcb
sub
jbe
dec
xor
sub
mov
pop
xlat
push
xor
mov
je
mov
sub
cmpsb
cmc
imul
in
into
mov
je
mov
cltd
ss
xor
cmc
iret
xchg
push
je
cmpsb
icebp
ljmp
jmp
dec
outsb
mov
xor
adc
xchg
inc
xlat
outsl
adcb
sbb
push
ds
lock
sub
jg
and
lock
ja
adc
rcrl
fdiv
fs
cmc
out
pop
push
ljmp
jne
stos
push
mov
xchg
inc
push
inc
stc
ret
pop
aas
mov
pop
mov
push
push
pop
inc
sti
cltd
jmp
js
push
decl
jp
dec
idivb
pop
add
loop
fbstp
mov
lock
or
jb
out
jg
out
and
adc
xchg
cmp
loopne
mov
xor
daa
aam
es
sbb
in
scas
or
inc
ss
sbb
or
mov
fidivrs
imul
xor
shrb
xchg
cli
repz
leave
cmp
test
rcr
pop
cmp
outsl
mov
ja
out
mov
inc
mov
enter
in
push
cmpsb
pop
xchg
idivb
mov
imul
mov
lea
or
xor
inc
xchg
in
jecxz
adc
or
clc
sbb
push
in
push
xor
xchg
push
roll
add
mov
inc
pop
xchg
jne
testl
cmp
jge
mov
rcrl
daa
test
sbb
into
sub
test
sub
test
dec
pop
out
inc
sbb
sahf
jbe
ret
loope
arpl
jmp
or
aam
sbb
leave
dec
inc
and
out
test
sahf
sbb
jbe
push
in
push
dec
or
mov
mov
sub
arpl
sub
and
inc
xchg
scas
jmp
or
push
dec
ss
xchg
int3
mov
mov
fwait
lcall
pop
jmp
push
jnp
push
imul
cmp
call
add
jmp
popa
fs
loope
add
push
mov
sub
mov
imul
js
movsl
or
enter
sub
add
fsubr
repz
daa
repz
inc
lahf
lods
insl
sbb
shlb
push
add
dec
push
pop
pmaxub
inc
xchg
sub
test
addr16
cmp
repnz
and
jle
loope
jle
stc
mov
loope
cmp
jae
add
push
aas
fiaddl
fdiv
iret
pop
test
cmp
rcll
ja
add
inc
and
test
das
jg
and
mov
or
lea
xor
xchg
into
mov
pop
push
aaa
jecxz
inc
mov
loope
xor
mov
lcall
leave
std
add
pop
inc
sbb
ret
mov
mov
pop
mov
push
mov
daa
nop
rcl
cmp
subl
fildl
push
test
add
jg
test
daa
in
shll
xor
jnp
out
repnz
mov
cli
cli
inc
cwtl
aad
sub
lret
mov
add
jb
pop
mov
mov
cld
aad
fxam
mov
xchg
cmp
lahf
testb
dec
mov
mov
sbb
dec
inc
jno
jno
xor
jp
mov
mov
ljmp
rcrb
push
inc
jns
outsl
sar
adc
mov
add
cmpsl
ja
jle,pn
movsb
cs
pop
dec
loope
mov
movntq
out
mul
or
mov
and
dec
imul
shlb
jne
adc
inc
fdivs
into
and
gs
push
test
jbe
lock
add
imul
push
inc
dec
add
push
arpl
xor
or
js
xor
sub
add
and
popf
mov
pushf
mov
mov
cmpsl
jb
loopne
inc
add
add
push
sub
fwait
das
insw
jmp
aas
pop
or
enter
mov
bound
mov
out
fstl
lods
popa
out
int
fdivrl
out
cld
pusha
movsl
fimuls
cmp
and
pop
sti
xor
sub
shl
push
add
sub
xchg
xor
je
out
in
mov
addl
jae
out
pop
xchg
dec
lahf
fcmovnu
sbb
repnz
psrld
insb
imul
aad
jae
gs
sbb
cmp
adc
sahf
es
popf
mov
das
jge
push
dec
mov
inc
fsts
int
and
jp
rclb
data16
and
js
push
dec
and
es
loopne
sti
xchg
pop
mov
jle
stc
dec
jl
iret
jbe
cmpsl
shl
xchg
bswap
ret
xor
incl
aas
sub
mov
sub
arpl
push
call
outsb
jmp
inc
push
jae
test
add
fsubr
xlat
test
dec
cmpsb
lock
ja
mov
mov
movsb
jmp
push
or
notb
out
stos
xor
cmc
out
sbb
xchg
imul
out
cmp
mov
pop
cmpsb
xor
into
cmc
lock
sahf
sub
in
call
aam
stc
pop
ss
lret
das
frstor
les
mov
and
or
in
js
cmp
inc
cld
cmp
lcall
leave
sub
out
leave
pop
xchg
fs
jae
and
inc
mov
and
outsb
sbb
sbbb
das
fcoml
jne
daa
test
fmuls
out
es
sarb
mov
mov
sub
or
jae
dec
add
jp
fwait
mov
sub
es
out
mov
and
jb
call
scas
push
pusha
notb
insb
fcomps
jno
xor
aas
adc
out
addr16
aas
cltd
out
int
ret
leave
xchg
and
adc
out
sbb
aad
call
adc
cwtl
jo
insl
pushf
xchg
push
popa
pop
jg
fwait
push
leave
mov
push
lods
adc
es
sub
adc
and
sub
cmpsl
leave
arpl
aas
pmaddwd
out
ret
cli
or
sbb
mov
mov
xchg
mov
das
adc
fsubr
loop
sub
add
test
and
movsb
and
inc
insb
pop
fxch
or
mov
fimuls
icebp
scas
sub
xlat
imul
push
bound
sub
sahf
mov
repnz
jmp
pop
loope
mov
or
lret
test
and
mov
repnz
push
push
sbb
xchg
ja
ror
jle
je
adc
jno
xchg
lock
sahf
xor
fs
adc
dec
sub
leave
dec
add
gs
test
mov
out
and
push
or
jbe
in
fbstp
jecxz
cmp
mov
movsl
ret
jl
push
test
or
pop
add
loope
fsubr
push
andl
sub
or
jb
and
ja
inc
bound
xor
mov
aas
frstor
cmpl
push
cmp
pop
mov
dec
sahf
add
jnp
push
jge
jge
insb
add
pop
xchg
pop
test
rorl
int
fucomip
imulb
lods
iret
pop
shrb
inc
xchg
and
imul
enter
rorb
out
data16
imul
fs
and
dec
aaa
cmc
pop
je
sub
and
xor
xchg
adc
idivb
insl
inc
outsb
sbb
pop
loope
push
movq
pop
pusha
cli
add
push
mov
push
or
sbb
jmp
jecxz
jmp
mov
pop
adc
mov
outsb
add
out
jecxz
lahf
cmpsb
mov
fbld
xor
dec
mov
xor
addl
repz
ficoml
inc
insl
push
xor
ljmp
enter
lret
adc
push
addl
scas
dec
sbb
lcall
mov
mov
popl
mov
ret
imul
cs
subb
enter
test
mov
icebp
inc
shlb
jnp
out
jbe
ds
out
sbb
jo
or
insb
adc
pop
orb
adc
mov
movsl
rolb
popa
outsb
jae
jle
dec
xor
adc
xchg
ljmp
test
inc
in
pop
or
sbb
pop
add
pop
insb
lock
and
pop
dec
mov
ret
inc
bound
add
push
mov
pop
pusha
jno
pcmpgtd
fidivl
push
lea
mov
mov
xor
xchg
cmpsb
inc
subl
inc
hlt
movsb
sahf
std
pop
pop
leave
sbb
out
dec
mov
or
mov
movsl
push
jecxz
les
add
fcoml
xor
out
sahf
repz
gs
inc
xlat
adc
and
cwtl
push
sbb
orl
xor
xlat
loope
test
out
dec
addr16
fsts
mov
dec
dec
daa
sbb
outsb
imul
mov
fucomi
inc
xchg
mov
scas
dec
adc
pop
frstor
insb
pushf
stc
lret
mov
pop
xchg
bound
pushf
jle
aas
sbb
adc
filds
or
pusha
sbb
jns
lods
sbb
loope
jnp
addr16
adc
or
mov
inc
jbe
sub
in
flds
dec
cld
shr
pop
cmpsb
aaa
adc
jp
into
sub
dec
mov
out
pop
pop
mov
std
cmp
cmpsb
test
dec
dec
and
xchg
xor
lcall
xchg
xor
jl
rcrb
rcl
xlat
rcll
or
popa
cmp
and
pop
dec
stos
aas
mov
psubsw
sbb
jmp
in
stos
mulb
cmp
into
rorb
jmp
or
andl
mov
repnz
bnd
stc
mov
test
xor
inc
sahf
cmp
pop
lret
sbb
and
shll
xor
inc
fistpl
aam
xchg
scas
stc
or
mov
inc
sarl
fdivr
gs
and
jno
mov
subl
mov
jae
cmp
imul
mov
nop
negl
rcl
stc
adc
mov
inc
and
gs
xor
mov
xchg
mov
xchg
push
push
iret
jl
add
or
push
outsb
jp,pn
lock
mov
cmpl
or
pop
mov
adc
popa
add
mov
cli
mov
lret
lock
scas
push
push
push
subl
shr
ljmp
xlat
lds
xchg
rclb
inc
in
lret
ljmp
js
or
iret
xor
icebp
or
test
insb
push
jno
xor
and
sbb
test
mov
pop
inc
cli
pop
dec
dec
and
aad
movsl
push
push
pop
shll
filds
mov
ss
imulb
sub
clc
mov
jb
repnz
and
lcall
jmp
arpl
int3
popa
adc
mov
pop
adc
xchg
xchg
inc
pop
jmp
push
sbb
ret
call
fstps
sbb
ret
sbb
jb
xchg
and
imul
inc
xor
popf
jle
fwait
jo
xchg
js
adc
pop
inc
push
movsl
ja
jo
test
mov
mov
pop
scas
ret
test
inc
dec
loopne
jnp
mov
jb
inc
inc
cmp
adc
mov
jo
out
inc
mov
push
hlt
push
mov
shl
fmuls
lret
mov
jb
push
roll
xchg
daa
iret
adc
sahf
mov
xchg
fs
cmpsb
adc
cli
iret
loope
mov
xchg
inc
push
imul
movsb
mov
mov
push
mov
dec
daa
dec
out
lret
insl
out
xor
pop
xchg
sbb
ret
or
bnd
push
xchg
or
movsb
les
dec
xchg
adc
arpl
ret
jge
fwait
sbb
adc
out
mov
dec
js
sub
shrb
mov
or
addr16
jmp
push
lcall
and
sub
xor
sub
ljmp
cs
xor
pop
mov
outsb
test
bound
subb
pop
pop
aad
js
and
xchg
xchg
int3
in
mov
sub
adc
add
xor
inc
cmp
sub
inc
push
and
test
or
jae
xchg
lcall
call
cs
pop
jno
jle
inc
and
jle
ss
fldenv
sbb
dec
pop
jnp
shrb
or
movsl
in
movsb
lret
test
pop
and
jno
cltd
or
inc
loopne
jmp
dec
jle
out
lock
push
enter
dec
sbb
repnz
inc
rol
imul
jbe
jecxz
jmp
xchg
iret
test
jbe
pop
sbb
cld
les
xor
cmc
jle
add
fwait
les
jmp
stos
ja
andl
test
or
sbb
pop
std
ret
sbb
adc
mov
sub
outsl
pop
outsl
cmp
inc
cmpsb
push
icebp
addr16
inc
jp
mov
ljmp
xorb
xor
jecxz
sub
aaa
pop
xchg
sub
jae
fildll
xchg
dec
dec
dec
adc
inc
int3
inc
and
sub
or
jo
test
insb
jne
mov
jns
pop
test
xlat
mov
inc
fdivrl
inc
cs
loope
nop
mov
xchg
and
ljmp
jne
lcall
xchg
jle
std
movsb
testb
aas
xchg
cmp
sbb
dec
mov
dec
and
xor
push
lock
cmp
add
clc
jb
sub
insb
popf
jmp
getsec
rcrb
push
push
mov
jo
cmp
add
in
pop
xlat
dec
xchg
jno
mov
sbb
dec
cld
xor
ljmp
and
jo
sbb
xchg
popf
in
push
jae
or
es
dec
xchg
jb
jg
faddl
mov
scas
jp
adc
std
xor
mov
fdivr
pop
pop
pop
gs
and
fwait
xchg
pop
inc
mov
mov
andnps
xorb
test
inc
xlat
cmp
or
inc
and
and
push
out
mov
sub
or
roll
xlat
sub
idiv
dec
nop
xor
adc
ficoml
mov
daa
mov
cmc
pop
or
outsb
mov
pushf
jg
les
cmp
fs
ret
dec
lahf
stc
xchg
pop
scas
adc
mov
jl
mov
pop
xlat
push
fistps
or
xchg
cmp
nop
rorl
mov
xor
pop
testb
leave
int3
adc
pop
jnp
mov
sub
pop
rcr
xchg
mov
imul
enter
mov
sbb
xor
push
mov
popa
sahf
pop
xchg
adc
pop
hlt
pushf
push
fdivrs
ja
nop
jae
inc
lods
fsubl
jl
out
lahf
shrl
shlb
inc
es
xor
or
imul
int
adc
cltd
xor
lock
dec
rolb
pcmpeqd
xchg
xor
lods
xchg
add
dec
cmp
jae
jnp
or
sar
fucom
ror
fwait
pop
xor
cmp
push
jne
inc
sbb
push
jl
mov
pop
sbb
dec
pop
in
lods
adc
scas
leave
push
push
out
dec
dec
jle
dec
loopne
sbb
mov
call
sbb
fcmove
inc
pop
mov
loopne
push
repz
mov
inc
xchg
call
mov
dec
add
aas
enter
stos
das
sbb
push
mov
fstps
ja
dec
dec
mov
xor
js
mov
and
fs
lea
aam
xor
dec
cmp
push
adc
xor
es
cmp
test
push
repz
cmp
inc
movb
push
pusha
cvtps2pd
mov
xor
fwait
cld
in
sub
test
aam
shrb
jmp
or
inc
xchg
dec
mov
sub
testb
hlt
repz
loopne
pop
or
cmc
push
out
shrb
xlat
xlat
adc
add
sbb
rorl
lods
repnz
or
push
xchg
mov
inc
orl
call
pop
lods
aas
jns
stos
dec
push
jne,pt
fcmove
sbb
std
icebp
and
insb
pop
sbb
mov
out
pop
popa
mov
and
rcrl
lods
fdivr
xor
es
cs
fwait
ja
mov
shlb
xchg
imul
sbb
dec
or
std
sub
mov
les
lea
in
push
push
push
mov
test
pushf
fs
jns
mov
out
lds
pop
xchg
add
fcmovnb
pop
xor
pop
enter
push
sub
pop
std
cmpsl
mov
fnstenv
mov
inc
inc
sub
imul
mov
or
add
dec
mov
fstpt
rcll
inc
add
mov
data16
mov
ja
xorb
popa
aam
cmp
imul
lea
cmp
outsl
mov
data16
cmpsb
and
lock
xorl
loopne
and
out
sub
adc
cmpl
dec
sti
lahf
call
cmpsb
cld
ret
inc
pop
stos
xchg
aaa
in
icebp
andb
filds
jno
out
je
in
cs
addl
and
cltd
adc
scas
sti
mov
adc
xlat
cmc
insb
inc
icebp
das
fmul
adc
sti
push
push
cmp
les
aas
in
xchg
push
out
pop
imull
test
mov
adc
sbb
cltd
jmp
or
lret
insl
lahf
push
cltd
mov
lret
xchg
bound
or
push
ret
out
push
loopne
in
sbb
test
sbb
cmp
or
pusha
mov
sbb
les
jae
adc
xchg
outsl
ja
bound
aas
ss
sbb
ret
cmp
flds
dec
daa
mov
jg
fs
inc
cld
nop
jb
mov
outsb
adc
lahf
aam
xchg
aaa
inc
out
mov
jecxz
push
inc
inc
pop
mov
int
and
movsl
cmp
aas
cmp
adc
and
gs
jge
jg
in
aad
inc
sbb
add
push
stc
sub
jmp
pop
gs
pusha
stos
xor
int
mov
adc
movsb
sub
add
sbb
and
jmp
mov
push
or
xchg
out
enter
mov
popf
push
xlat
loopne
cs
sbb
jnp
inc
pushf
cmp
jbe
cmpsb
sub
xchg
xchg
lcall
xor
mov
jbe
inc
mov
jl
sbb
lods
adc
mov
xor
sbb
mov
in
sub
call
les
in
idiv
push
jmp
mov
add
popf
push
enter
jbe
mov
pushf
call
lock
pop
jmp
enter
sbb
pushf
lods
outsl
out
jl
lcall
sub
rclb
or
daa
push
xor
inc
cmp
sub
mov
clc
repz
adc
mov
dec
sti
jp
mov
adcb
rcll
in
mov
stc
int3
loopne
pop
test
inc
into
push
movsl
mov
scas
ficompl
inc
mov
push
fnstsw
andb
dec
mov
out
sub
mov
data16
cwtl
cs
and
stc
mov
mov
xchg
test
pop
adc
xchg
fistpl
outsb
add
mov
inc
ret
out
aam
xchg
jecxz
mov
test
call
push
shr
hlt
jl
decl
jb
mov
sub
sub
imul
xor
fildl
cmc
add
leave
add
jbe
in
bound
aad
pop
mov
pushf
int3
repnz
or
and
mov
cltd
hlt
mov
sub
pop
movl
adc
notb
insl
stc
pusha
push
adc
inc
jnp
sub
mov
xchg
in
sbb
jns
ss
sub
pusha
jb
movsl
push
in
fdivrl
imul
out
lretw
adc
inc
xchg
jl
cmpsl
rclb
cmpsl
ficoml
push
fnstcw
jb
dec
inc
fildl
je
or
adc
mov
jno
jnp
loope
adc
xchg
xchg
xchg
call
lds
and
xor
cmpsl
xor
fsubl
sbb
jo
push
int3
and
imul
jns
sub
mov
bound
in
and
arpl
pop
or
fwait
out
inc
jae
negb
out
and
pop
jp
and
addr16
sbbb
loope
les
sbb
xchg
in
sub
arpl
sar
data16
mov
mov
xor
rcl
scas
repz
je
push
cmpsb
js
push
fidivl
dec
or
mov
loop
push
cmpsl
je
mov
ret
add
out
lods
ret
fadds
cmp
cld
mov
pop
jnp
sub
jne
imul
pop
jbe
movsb
roll
test
pop
imul
add
ffreep
rcrl
push
scas
imul
insb
enter
dec
mov
sbb
xchg
xchg
movsl
sti
call
out
inc
mov
xor
mov
xchg
adc
or
cmp
pop
or
movsb
shr
cmp
int
movsb
mov
dec
sahf
pop
xor
dec
pushf
scas
fmul
dec
out
dec
dec
and
cmp
cli
push
or
cld
repnz
dec
gs
sub
inc
push
xchg
push
icebp
add
adc
add
testl
xchg
pop
in
sbb
dec
adc
and
cs
pop
mov
sbb
popf
pop
dec
adc
jnp
psadbw
adc
jbe
gs
out
cmpsl
jecxz
xchg
lds
or
outsb
sub
scas
ljmp
aad
lods
pusha
out
test
mov
xchg
fdivl
mov
or
outsl
fildl
pop
rol
fwait
sbb
push
and
inc
sbb
fcomip
outsl
lods
pop
push
jmp
jae
pop
and
mov
mov
pusha
mov
add
loope
movsl
sub
fwait
out
mov
mov
es
repz
xchg
aad
dec
pop
sub
jae
ret
cmpl
cmp
fimull
jmp
jo
mov
cmp
clc
rorl
test
add
ret
cmp
lcall
out
mov
pop
and
pop
rcl
add
push
pusha
inc
sbb
mov
int3
sbb
lret
repnz
daa
es
sub
shrl
inc
add
dec
inc
ja
out
repz
inc
sbb
adc
inc
adc
or
int
mov
enter
popf
xchg
dec
fwait
sti
xchg
out
adcb
ss
iret
dec
popf
cmp
push
movsl
sbbb
ja
inc
sbb
imul
lods
adc
scas
fistpl
push
stos
hlt
adc
mov
les
or
dec
mov
xchg
mov
add
fcompl
mov
add
icebp
push
and
mov
pop
mov
mov
fildll
sub
sub
sub
dec
cltd
movsl
adc
and
ljmp
inc
jns
les
jmp
insb
loope
inc
leave
lea
test
mov
xor
negl
sub
stos
cltd
mov
cmc
add
aam
jecxz
and
pushf
cmp
add
add
imul
pop
sbb
fldln2
jns
jo
addr16
subb
adc
sti
enter
push
ljmp
lret
sbb
or
loop
data16
jns
insb
outsl
add
pop
mov
loope
fildll
jno
out
dec
pop
sub
mov
mov
insb
mov
imulb
sbb
add
lcall
push
push
pushf
pop
clc
push
loop
xchg
pop
loopne
dec
es
sub
and
push
mov
pop
push
arpl
rorb
adc
or
aad
call
sbb
inc
notb
jmp
dec
xor
jmp
push
scas
inc
xchg
lods
ja
movsb
dec
mov
dec
jno
pop
test
pusha
sub
outsb
push
mov
sti
nop
std
lods
jns
divl
xchg
pusha
loope
jmp
xchg
push
pop
loopne
sbb
sub
sub
pop
cld
add
jb
jmp
xchg
dec
cmp
test
outsb
jle
pushl
lea
arpl
daa
hlt
repz
daa
mov
add
xchg
scas
dec
out
sub
xor
mov
test
pop
push
sub
jo
xchg
mov
xchg
and
pop
sbb
add
fdiv
jae
mov
pop
sbb
jmp
cmc
dec
sti
cmpsl
push
arpl
xchg
jge
dec
pop
xchg
push
adc
xchg
leave
pop
xchg
jecxz
daa
cmp
adc
adc
movsl
push
and
nop
inc
mov
jbe
repnz
arpl
test
add
add
jecxz
and
push
inc
pop
sub
cmpsl
cltd
cvtdq2ps
stos
sbb
mov
call
mov
ja
add
cmp
fstl
xor
or
enter
lea
jg
scas
cmp
inc
loop
loope
pop
loope
pusha
mov
or
adc
hlt
mov
test
inc
mov
cmpsl
mov
sar
dec
inc
mov
ret
lods
pop
into
aad
addr16
fnstsw
js
pop
ret
repnz
inc
mov
inc
les
add
xlat
mov
add
inc
jo
xor
jge
lcall
mov
mov
inc
dec
mov
sbb
adc
and
push
adc
int3
lock
sub
inc
dec
add
push
lds
shl
inc
jo
sub
out
scas
jp,pt
movsb
inc
xor
and
aas
mov
fwait
movsl
lcall
pop
lret
popa
orb
xchg
fcmovne
sub
lret
jmp
push
or
loop
inc
xchg
inc
insb
push
les
lock
sbb
aad
mov
fdivrp
loope
test
rep
es
cltd
jne
sahf
push
in
leave
jae
shrl
cmc
add
inc
add
mov
mov
outsl
int
cmpsb
hlt
mov
push
add
mov
pushf
pop
leave
mov
fisubl
push
les
addl
pop
push
loop
jl
adc
ds
imul
inc
add
mov
add
ret
inc
dec
sarl
clc
arpl
add
into
pusha
ja
cmc
fnstcw
popl
sub
ljmp
mov
mov
les
sub
cmp
cmc
test
test
dec
in
sbb
cmp
add
inc
xor
addb
sub
test
scas
or
loopne
mov
or
movsl
mov
mov
sti
out
lret
int3
int3
loopne
imulb
loope
cs
mov
mov
inc
ja
fs
addr16
repnz
or
jmp
ffree
pushf
sbb
mov
loop
out
push
cmpsb
mov
fldl2t
fidivl
jbe
mov
outsl
xor
mov
dec
mov
or
push
test
push
add
test
mov
lock
aaa
loope
sub
pop
cmpsb
adc
cmc
icebp
sub
pop
fwait
jno
pop
pop
lods
jge
push
pushf
push
daa
push
push
sub
mov
test
js
or
shrb
or
sysexit
mov
xchg
test
sbb
and
jmp
stc
sarb
mov
dec
adc
add
mov
mov
rcrb
jp
mov
loop
or
inc
jecxz
cltd
push
dec
fcomi
pop
cmp
or
lods
push
fnstsw
js
cmp
mov
pop
xchg
mov
test
dec
inc
cld
push
jae
push
dec
jmp
xchg
addl
add
xor
inc
fisubl
xor
sti
inc
outsl
test
jge
popa
lock
inc
add
test
nop
pop
sbb
lahf
lcall
bound
sti
rcrl
pop
sbb
ljmp
gs
cwtl
mov
ds
xchg
add
dec
mov
in
aam
xchg
fmull
add
mov
cmp
ret
icebp
jnp
arpl
lods
pop
dec
mov
test
sbb
stos
movsl
xchg
out
xor
inc
rorb
sub
add
in
popf
hlt
int
mov
xor
jp
adc
xchg
jo
scas
icebp
pop
cmp
repz
pop
jl
and
popl
cli
cltd
sub
popf
enter
xor
lea
imul
cmp
cli
push
mov
imul
sbb
xor
je
fidivs
imul
and
jge
jmp
sub
or
and
xchg
mov
mov
inc
mov
sub
ret
dec
or
pop
mov
push
push
mov
imul
pop
dec
mov
inc
shlb
or
lahf
in
adc
gs
fisttpll
dec
pop
loop
and
adc
shl
fldt
sub
mov
nop
repz
shrl
stos
aas
call
cmp
mov
inc
dec
insb
loope
pop
nop
dec
sub
cld
and
pop
push
inc
pushl
aam
fistpll
jnp
arpl
mov
cmp
mov
mov
sub
in
push
push
dec
xor
inc
popf
push
andb
adc
aam
cmp
ljmp
inc
lret
fwait
and
outsb
lret
adc
test
push
and
dec
cltd
xchg
insl
inc
xor
sbbl
into
int3
mov
shl
dec
enter
sub
stc
inc
cld
add
incl
mov
cli
fcompl
movq
adc
js
xor
cmp
je
imul
lds
aad
xor
jno
popf
mov
dec
inc
leave
inc
sbb
jmp
sti
fs
loope
add
add
cmpsl
mov
pop
aaa
outsl
ret
shll
lret
fmull
xchg
sahf
jle
outsl
xor
sbb
cmpsl
mov
mov
sbb
fucomp
jns
dec
in
mov
js
and
mul
outsb
sub
xchg
xor
out
or
adc
popf
jno
lret
test
mov
movsl
inc
sti
cli
or
imul
pop
es
add
push
cmp
push
inc
mov
dec
mov
cli
out
pop
mov
xchg
daa
or
in
jb
mov
insl
loope
mov
aas
mov
iret
jb
out
aas
out
cmp
ds
into
dec
xchg
pop
jg
mov
xchg
push
sbb
testb
xchg
stos
xor
sbb
pop
or
punpcklwd
pop
pop
mov
pop
jecxz
push
lock
inc
int
adc
int
adc
and
adc
int3
xor
push
push
test
cmc
adc
xchg
jge
stc
lret
sahf
push
sbb
adc
in
xchg
mov
jns
and
cmp
aas
push
dec
pop
xor
push
pop
cmp
mov
xchg
out
clc
jbe
enter
fldenv
test
enter
jbe
xor
es
ljmp
dec
cwtl
out
in
lret
add
mov
sub
into
ds
sar
stos
cli
roll
xlat
int
xlat
aam
dec
loop
add
dec
jb
mov
xchg
jecxz
jb
int
xchg
fdiv
movsb
mov
xor
jmp
mov
lea
mov
mov
mov
aaa
and
and
enter
pusha
xchg
inc
push
cmp
ffree
jge
xchg
mov
adc
xor
xchg
jns
push
test
jecxz
xchg
push
mov
shll
inc
clc
ss
fs
jle
xchg
stos
cltd
or
sub
lahf
out
pop
sub
xchg
pop
push
test
or
dec
or
pusha
in
xlat
fxch
test
icebp
push
cltd
dec
push
jb
dec
repz
lods
push
pop
loope
clc
out
pushf
mov
dec
rol
imul
mov
pop
lret
pop
fists
add
les
xchg
pop
jbe
aas
push
nop
inc
fsubrl
lock
fsub
mov
pop
scas
push
adc
sbb
jns
jns
mov
subl
movsl
or
mov
dec
sbb
fwait
xor
mov
lret
insb
xchg
es
test
adc
jns
mov
mov
and
mulb
jne
mov
and
add
inc
add
popa
mov
dec
imul
xchg
pushf
push
add
test
add
ds
dec
pop
scas
cmpsb
inc
mov
xor
imulb
cmp
mov
scas
ss
mov
mov
add
mov
fsubl
xchg
in
mov
sti
leavew
push
xor
fcoml
xchg
and
fdivs
dec
cmc
ror
jae
lret
adc
jno
push
push
jnp
repz
mov
xchg
mov
cmovo
ret
cmp
je
pop
add
jge
mov
iret
push
and
mov
add
pop
notl
ret
mov
icebp
mov
shl
test
test
jne
pop
out
int
sbbb
dec
stos
jo
sub
xor
mov
mov
inc
int
dec
adc
shll
mov
add
hlt
and
inc
push
outsb
stc
xchg
sbb
jg
mov
rcl
sbb
cwtl
or
xorb
sbb
aas
pop
fists
jae
xchg
xchg
pop
nop
std
mov
cmpsl
dec
xchg
cmpsb
dec
enter
xor
clc
dec
rcrb
cmp
je
ret
mov
xchg
pop
cmp
pop
das
popa
inc
mov
xchg
ja
cmc
cmc
mov
call
ds
addb
dec
xchg
test
lods
add
fistl
fsubr
test
xchg
sbb
xchg
pop
fdivrs
mov
fsub
aam
jbe
cltd
xchg
pop
mov
push
sub
inc
sub
mov
in
nop
push
mov
inc
xor
mul
sbb
out
push
mov
inc
lahf
aas
jg
bswap
inc
cld
jp
lret
sub
xchg
out
in
in
mov
addr16
pushf
pop
inc
sbb
pminsw
shlb
add
add
mov
loope
js
lock
test
xor
pop
inc
iret
xchg
mov
jae
loopne
inc
add
lock
in
movb
pop
xor
subl
sbb
shl
xor
aas
fcoms
jne
or
adc
add
mov
inc
inc
frstor
add
pusha
stos
js
jl
hlt
jno
mov
xchg
popf
xchg
push
pop
push
sbb
mov
aam
sub
int3
popf
in
repnz
push
leave
lock
and
jmp
shll
pushf
cmp
sbb
roll
jb
in
mov
inc
scas
imull
sub
and
insb
add
insb
aaa
outsb
adc
add
add
jle
out
mov
pop
int3
inc
xchg
test
ficoms
jg
mov
pop
sub
mov
xchg
aaa
xor
or
and
insb
f2xm1
call
lcall
je
dec
out
and
or
xchg
stc
push
add
test
pop
or
adc
stos
rclb
aaa
lahf
mov
std
push
fs
inc
push
lea
sarl
push
ljmp
insl
xor
xor
jns
sti
pop
stos
adc
xchg
jl
dec
push
lret
dec
or
mov
and
sub
jns
and
adcb
and
ss
lds
lret
int
bound
aas
and
nop
iret
and
lods
mov
push
das
cs
mov
dec
enter
jle
cmpsb
aas
pop
mov
xor
das
jl
mov
adc
dec
xchg
cmp
stos
mov
push
outsl
jbe
cmp
mov
and
xchg
adc
jle
sub
pop
movsl
jle
out
insl
es
pop
mov
scas
mov
aaa
ret
dec
cmp
adc
push
into
lods
enter
in
dec
test
leave
xorl
adc
in
mov
jmp
mov
test
in
mov
stos
cmovnp
mov
push
sbb
push
jle
adc
mov
rorl
jl
js
addr16
ret
stos
sbb
mov
vphadddq
in
push
loopne
mov
fnop
std
lds
addr16
cs
jns
inc
in
clc
pop
out
mov
loop
insl
push
cli
sbbb
mov
xor
xchg
sbb
xchg
adc
cli
sahf
mov
pusha
push
movsb
xchg
mov
cmp
addr16
or
aaa
out
fisubs
mov
xchg
sub
inc
fidivl
mov
and
pop
divb
or
sub
sub
jo
inc
push
push
les
std
mov
cmpsl
cmp
mov
ds
mov
xor
add
hlt
call
lret
add
jo
add
mov
mov
testb
mov
sub
call
xchg
cld
out
cli
shrb
insb
xlat
dec
mov
add
repnz
jb
test
push
gs
adc
add
insb
inc
mov
movsl
sub
sahf
xor
and
mov
int
push
or
rcrl
imul
mov
lea
cld
in
jge
imul
add
sbb
inc
push
mov
mov
sbb
pop
aas
shl
push
movsl
inc
adc
adc
inc
divl
ret
jns
pop
add
push
je
in
xchg
inc
mov
push
fs
sbb
dec
cmp
mov
lods
bound
add
in
xchg
mov
popa
rolb
adc
sub
adc
pop
test
sub
movsb
mov
mov
fsubr
dec
das
mov
ret
loop
add
iret
and
lahf
or
daa
aad
push
cmpsl
jmp
mov
xor
sbbl
adc
in
push
push
mov
push
std
inc
mov
insb
inc
test
push
insb
cld
lcall
and
lock
les
pop
xlat
shll
mov
aad
stc
cs
cltd
nop
hlt
jmp
jbe
into
jne
mov
mov
movsl
fcomps
call
subb
xchg
mov
int3
scas
or
xchg
and
mov
gs
lods
dec
xchg
jl
or
popf
stos
nop
into
push
test
sete
cmp
pop
cs
mov
dec
push
dec
pushf
xchg
xor
dec
lcall
inc
adc
inc
mov
jge
pop
xchg
cmpsl
mov
or
mov
daa
dec
jb
loopne
in
or
mov
jne
mov
jge
fmuls
push
insb
and
icebp
or
jb
sub
lcall
std
addl
inc
mov
dec
fs
xchg
push
mov
push
add
ds
xor
imul
or
cmp
add
dec
cs
jno
dec
push
lret
pop
mov
sbb
dec
dec
inc
imul
dec
cmpsl
adc
outsl
pop
rcll
inc
sub
dec
lahf
sbb
inc
lods
frstor
or
decb
lods
inc
inc
sub
jb
incb
inc
mov
test
mov
adc
loope
pop
jnp
pop
mov
negl
xchg
mov
sbb
and
push
imulb
icebp
push
mov
dec
fs
enter
push
or
fiaddl
outsb
repnz
jne
mov
scas
hlt
scas
xor
jle
std
fiadds
push
inc
or
int
add
pop
pop
adc
in
pop
mov
and
and
jb
out
fscale
cld
push
xadd
xchg
lcall
push
pop
xlat
fwait
add
imul
fsubrl
pushf
jp
inc
enter
jnp
std
jmp
sbb
repz
je
into
imul
out
dec
and
push
jg
xchg
loop
adc
rep
arpl
addb
outsl
xor
push
orl
lods
push
xor
push
push
aam
xchg
mov
jne
dec
movsb
adc
cmp
cmpsl
mov
int
mov
xchg
jge
cmp
xchg
test
dec
adc
lds
inc
adc
icebp
cmp
jge
xorb
sar
hlt
sbb
fwait
sub
shll
mov
rcrb
scas
sarb
ds
imul
mov
jle
mov
jae
sub
repz
mov
pop
stos
out
pop
fidivrl
sub
dec
xor
lcall
in
outsb
cmp
mov
out
pop
cli
scas
mov
jge
mov
ss
out
jecxz
hlt
xchg
cmpb
mov
repnz
jnp
imul
mov
iret
outsb
adc
jmp
push
pop
push
pop
aam
sub
imul
mov
add
fwait
popa
jmp
sub
es
inc
mov
jmp
mov
cs
js
in
cld
ficompl
mov
mov
call
popf
ds
inc
jbe
out
push
pop
popa
mov
out
jbe
cltd
mov
ret
cmp
xchg
aam
pop
inc
pop
push
pop
adc
insl
ds
inc
ret
push
mov
add
mov
inc
mov
lods
push
scas
add
pop
jae
xlat
cmc
xor
adc
jb
orl
xchg
fnstenv
imull
xor
mov
int3
xchg
out
in
cmp
push
jo
push
lock
into
jmp
jo
mov
mov
lods
dec
cs
pushf
inc
nopl
inc
dec
pusha
xor
inc
add
adc
int
mov
lahf
enter
mov
inc
add
ss
xor
shrl
stos
std
sbbl
xor
pop
sar
dec
dec
or
xchg
mov
clc
cwtl
adc
call
sbb
loop
adc
mov
arpl
jno
fsubs
mov
and
xchg
popf
jmpw
jo
cmp
movsb
loope
adc
popl
or
xor
adc
lds
cmpl
mov
xchg
icebp
into
fidivl
mov
push
push
mov
sar
les
dec
xchg
inc
scas
and
sti
adc
jmp
fisubs
lock
adc
aaa
xchg
xchg
rcll
cmp
xor
push
inc
out
test
or
and
and
cli
imul
es
out
jbe
rorl
std
inc
inc
mov
cld
cs
fstl
addr16
clc
push
lret
xor
into
push
sub
adc
sub
xchg
scas
ljmp
push
test
mov
cmpsb
test
dec
xchg
pop
dec
imul
dec
loope
mov
push
dec
or
mov
jns
dec
outsl
popa
jge
mov
xacquire
ja
mov
xchg
jno
jge
xorb
and
cltd
je
in
mov
or
push
out
lea
lret
adcb
xchg
sub
jmp
test
and
xlat
jno
sub
push
cmp
decl
jo
rol
mov
stos
inc
jne
fs
sub
out
mov
aaa
jne
xor
dec
mov
pop
adc
dec
jno
mov
and
fsubrl
push
popa
xor
adc
cmp
pop
inc
cmp
sbb
test
add
stos
ljmp
fs
imul
rcrl
pop
pop
outsb
xor
bound
int
jae
pop
xchg
mov
pop
sub
mov
in
or
lcall
xchg
and
cli
jge
imul
pop
das
mov
mov
dec
ret
movsl
iret
in
popa
dec
mov
icebp
pushf
test
rol
pushf
xor
adc
xor
mov
sahf
rsqrtps
and
mov
adc
hlt
sub
dec
pop
mov
mov
fnstcw
lock
repz
test
scas
and
push
imul
js
nop
jmp
mov
stc
cmp
sbb
mov
jns
xchg
cmp
pop
push
push
lea
jbe
push
add
push
adc
push
jb
cmp
mov
lods
inc
mov
shl
dec
outsl
movlps
stos
out
out
aas
std
out
imul
sbb
leave
repz
nop
test
add
mov
mov
mov
mov
test
nop
and
bound
mov
sarl
fisubl
or
jle
xor
shl
push
dec
and
sbb
sbb
push
aam
es
shll
mov
pop
test
or
fistl
into
in
cmc
sbb
scas
test
arpl
sahf
cmp
and
jmp
mov
aam
in
les
cmp
sbb
cmp
idivb
sub
dec
popa
cli
repnz
and
cwtl
notl
jg
mov
out
faddl
adc
mov
push
pop
fildll
int3
xchg
mov
xlat
sub
lcall
rcrl
xor
sbb
bound
mov
test
pop
aam
aaa
dec
lods
cmp
adc
rcll
arpl
xchg
xchg
pop
fisubs
scas
lea
hlt
push
gs
mov
jp
outsb
mov
mov
mov
xor
inc
in
sub
cmp
call
push
adc
lret
cmpsl
xchg
pop
mov
xchg
idiv
mov
insl
in
jnp
je
mov
adc
sub
in
push
loopne
sbb
or
jmp
lock
xor
pop
push
bound
or
std
arpl
mov
ja
xor
pop
pushw
pusha
aas
and
cli
xor
mov
pop
and
enter
in
inc
dec
sub
xchg
and
lock
dec
scas
stc
and
add
xor
js
bound
mov
stos
outsl
xchg
cltd
or
lods
mov
inc
jmp
add
repnz
cli
pop
sub
mov
sbb
dec
add
inc
mov
xchg
or
mov
mov
xchg
mov
popl
lcall
pop
sbb
scas
stos
cltd
out
out
cli
jb
inc
inc
cmpsb
jle
push
lds
dec
outsl
mov
xlat
ret
and
in
adcl
push
test
xchg
jae
mov
lret
xchg
lea
aam
loope
imul
mov
xlat
pop
repnz
bound
subb
inc
or
push
andl
mov
pop
test
xor
dec
inc
lcall
out
sub
xor
and
enter
jp
adc
sub
add
loop
mov
pop
jne
lds
xorps
mov
xor
or
pusha
loope
mov
js
mov
cmpsl
jb
jns
or
pop
xchg
mov
push
mov
push
or
sub
loop
in
pusha
ja
adc
push
mov
fists
mov
mov
rcrl
ljmp
pop
or
adc
inc
pushf
jle
jg
dec
pop
test
aaa
xchg
cmc
insb
sti
adc
dec
outsb
iret
fcoml
in
cmp
out
sbb
dec
mov
sub
xor
mov
clc
push
loop
insb
std
push
mov
mov
dec
mov
mov
jnp
scas
jo
repz
icebp
add
leave
pop
cmp
movsb
outsb
mov
cmp
jne
inc
sub
outsb
hlt
ds
push
scas
hlt
je
sbb
cmpl
cmpsb
inc
out
cwtl
xor
aaa
js
adc
loopne
lret
sti
movsb
xor
andb
sbb
inc
rcrl
adc
xor
inc
add
mov
cli
mov
es
rorb
stos
stos
push
mov
cmpsb
addr16
xchg
stc
or
movsb
fidivs
jmp
sbb
push
jae
pop
push
pop
mov
cs
mov
int3
sarw
aam
clc
movl
daa
adc
push
popa
test
pusha
dec
dec
fs
or
fcmovnu
adc
push
in
push
fcmovnb
and
or
mov
clc
sbb
decl
mov
fimuls
inc
cmp
adc
jns
lret
jno
scas
adc
pop
mov
stos
stos
cmpsl
and
sar
icebp
adc
add
pop
pop
es
lcall
mov
sub
push
clc
js
popf
mov
xchg
bound
mov
mov
lea
or
popf
enter
pushf
ss
outsb
icebp
xor
mov
gs
aam
adc
scas
adc
pusha
mov
bound
jge
or
je
les
pop
popf
lea
or
sbb
mov
mov
test
mov
sub
adc
adc
lret
mov
or
adc
sarl
out
ret
jle
pop
mov
xchg
fidivs
xor
rcll
jl
sbb
xchg
test
jp
jns
mov
pop
das
sub
outsb
or
and
jns
jg
mov
add
rcrl
xor
rcll
pop
faddl
aam
mov
ret
push
push
popf
xchg
leave
lea
rcrl
in
loopne
jmp
or
jbe
mov
xchg
in
pop
mov
lret
pop
pop
xor
jl
loope
and
stos
sub
jbe
xchg
repnz
push
adc
in
xchg
fiadds
jecxz
mov
push
inc
roll
sti
fcompl
pop
xchg
jo
cmpsl
insb
les
repz
jl
test
in
mul
cli
test
nop
mov
rorb
mov
jp
loop
mov
sub
lods
jbe
jne
cmp
out
xchg
les
xlat
fdivl
stos
scas
or
std
pop
cmp
mov
std
jo
pop
add
nop
ja
sub
bound
jmp
pop
aaa
inc
std
jl
icebp
aam
mov
jae
icebp
orl
loopne,pn
or
imul
scas
adc
cli
jmp
jecxz
mov
pop
mov
pop
fwait
xor
lods
mov
aam
add
jl
mov
sub
mov
fisttpll
int3
out
cmp
or
int
inc
rcr
fdivl
int3
mov
lahf
jmp
das
rorb
jg
pop
icebp
je
bound
pop
out
mov
data16
fldt
cs
mov
enter
test
or
push
into
stos
push
add
adc
adc
jge
xchg
popf
popa
and
mov
add
out
hlt
cmp
adc
cmp
inc
ja
js
out
repz
xchg
sub
fists
sbb
fildl
xchg
adc
xchg
add
jne
jno
sbb
cmp
pop
sub
hlt
mov
sar
lods
inc
push
pusha
sbb
test
push
int
rcl
ds
ret
mov
push
and
popf
movsl
shll
subl
mov
insb
xchg
mov
mov
xor
sbb
mov
ljmp
jmp
inc
adc
push
xor
scas
mov
in
and
push
mov
push
imul
ljmp
jb
lods
testl
negl
out
xor
pusha
sub
outsb
jle
popa
popf
sub
push
mov
cmp
fs
xor
and
add
ret
arpl
push
cltd
or
pop
sub
inc
daa
inc
into
mov
or
adc
mov
fs
xlat
mov
out
inc
repz
push
dec
xchg
repnz
sti
lods
xchg
popf
popa
aas
push
arpl
jo
cs
xchg
addr16
out
mov
popf
cmc
ss
movsl
cmp
insl
pop
ffree
add
rdtsc
and
add
push
icebp
aad
mov
scas
in
dec
js
xor
pushf
push
fs
cltd
push
xor
add
adc
mov
push
xchg
cmpl
sub
daa
xchg
cli
pop
adc
xchg
xchg
mov
mov
fisubl
dec
push
push
xchg
leave
repz
jae
dec
mov
hlt
rcl
xor
pushf
xlat
pop
sub
xor
lcall
mov
loop
lret
and
fs
fcomip
push
es
pop
enter
inc
sti
insl
add
in
mov
dec
cs
ret
scas
pop
out
aaa
out
xchg
inc
sub
bound
stc
mov
mov
xchg
in
adc
push
push
xlat
adc
push
scas
inc
test
ret
hlt
aad
mov
push
ret
add
pop
add
mov
pusha
mov
mov
or
push
and
push
add
aaa
mov
nop
xchg
jmp
mov
push
daa
idiv
fdivrl
jmp
cmp
xchg
int3
pushl
lock
ds
inc
and
lahf
push
jnp
scas
cmpsb
push
mov
jecxz
or
xor
sbb
add
in
add
inc
and
or
fs
xchg
dec
mov
jge
and
loop
lds
fsts
push
cmp
ljmp
insb
and
push
cmpsb
pop
cmpsl
pushf
repnz
mov
lea
lret
lret
std
push
fwait
lock
mov
dec
xor
clc
ss
cmpsb
mov
insl
cwtl
cmpsl
xchg
sbb
pop
and
orl
add
xchg
or
pop
iret
loope
add
mov
pop
insb
add
dec
mov
xchg
push
push
push
sahf
xchg
mulb
aaa
pop
scas
inc
jp
dec
cmpsb
xor
pop
pop
jne
mov
sub
test
clc
jae
mov
leave
cmp
dec
add
cmp
lods
shll
mov
and
nop
jge
in
lods
or
mov
imul
jae
hlt
lea
xor
loope
sub
ljmp
lret
cli
adc
adc
sub
inc
lock
adc
sub
stos
xchg
loop
hlt
push
cmp
dec
test
and
test
and
jno
testb
cs
adc
les
test
es
das
sbb
cmpsb
insb
outsl
adc
stos
mov
xor
movsw
push
fimull
loop
int
sub
out
mov
or
repnz
pop
iret
jmp
pop
imul
push
push
imul
xlat
cmp
icebp
sub
gs
jb
push
cltd
outsb
sub
test
repz
les
jge
lahf
pusha
mov
push
mov
xchg
and
mov
mov
and
add
in
xchg
daa
inc
mov
push
push
flds
scas
fcomps
outsl
lea
jge
movsb
adc
ds
ret
orb
jae
int3
or
pop
push
sbb
dec
pop
adc
rclb
stos
loop
xchg
sbb
leave
mov
and
testb
inc
pusha
sbb
fstpl
cwtl
add
dec
dec
lahf
in
add
popa
sub
sbb
adc
dec
inc
jb
leave
xchg
sub
pop
stos
js
push
xor
jg
push
outsb
jecxz
pop
push
movsl
sbb
jmp
fmull
test
pushl
cmp
es
mov
inc
jecxz
pop
aas
cmp
jne
adc
lods
pop
cmp
dec
xchg
push
adcl
pop
jae
lret
jnp
adc
sub
iret
pop
ret
lock
lret
jp
sbb
xor
lock
imul
jnp
in
mov
and
negl
jecxz
ja
jmp
jbe
push
bound
mul
dec
jne
fs
mov
inc
aas
lds
cmc
pusha
scas
lret
push
lret
mov
fadd
push
popa
ret
stos
ja
aam
sbb
add
xorb
adc
andl
movsb
fs
jmp
inc
inc
stos
xlat
shll
mov
sub
xchg
push
mov
cmpsl
xchg
out
call
dec
daa
adcl
test
std
inc
popf
icebp
mov
xor
pusha
vmread
inc
negl
and
pop
mov
or
mov
popf
jg
and
les
xor
mov
mov
stos
aad
das
scas
mov
mov
nop
pop
mov
iret
and
in
dec
push
leave
daa
dec
mov
xchg
in
ret
or
sarl
popf
lahf
jp
xorb
and
jmp
pusha
hlt
scas
or
adc
fldl
rcll
popl
test
mov
test
movsb
cltd
mov
mov
fisttpl
hlt
dec
xor
in
popf
fidivrl
rorl
stc
rclb
xchg
sbb
jnp
mov
adc
sub
out
dec
bnd
add
mov
or
lods
mov
dec
inc
cmpsb
mov
jo
pop
popa
pusha
mov
cmc
add
je
std
addb
or
cmp
push
cmp
call
cmp
testb
fsub
daa
mov
push
dec
push
rcrl
or
inc
leave
cld
imul
mov
sbb
loope,pn
dec
sub
int
movsl
mov
sbb
jne
ljmp
sub
mov
sahf
insb
push
jne
shlb
pop
xor
les
ret
int
cmpsl
fldenv
mov
mulb
mov
dec
arpl
adc
jge
push
pop
push
cmovl
inc
lret
call
mov
pop
fsubr
sar
rol
cmp
aas
data16
lahf
cmp
movsb
dec
pop
xchg
ds
cmc
inc
fcomp
lea
lods
outsb
jg
popa
push
and
jb
ss
rorb
cld
sar
stc
jbe
push
xorl
cmpsb
iret
jl
and
outsl
scas
mov
outsl
fisttpll
stos
sbb
mov
fwait
cld
out
xor
in
lret
and
jl
movsb
vphaddubw
jge
nop
jb
jmp
dec
test
repnz
fxam
mov
in
xor
push
cmpsb
sub
ja
cmp
pop
sbb
mov
xor
sub
in
adc
and
mov
cmp
sbb
mov
leave
data16
filds
pop
pop
cwtl
mov
test
je
mov
sbb
cmc
sbb
ljmp
push
sub
fucom
inc
jbe
xchg
out
or
xchg
push
lea
push
pop
hlt
inc
jo
sub
test
nop
sbb
mov
adc
cmp
jmp
xor
ret
cltd
loopne
cltd
and
mov
sbb
sub
xchg
fistpll
adc
das
cmp
ficomps
lods
arpl
idiv
dec
xchg
into
loopne
pusha
sbb
sub
or
pushf
lcall
or
in
or
lods
inc
or
mov
or
pusha
pop
cmpl
fldcw
xor
lods
xchg
lea
dec
jns
ja
mov
add
pushf
adc
push
popf
xchg
pop
push
pop
cmc
sti
mov
subb
lods
sbb
ljmp
add
into
scas
mov
fs
and
pop
mov
mov
lret
inc
pusha
cmp
hlt
cld
sub
rcrb
arpl
popa
push
divl
sub
jmp
test
dec
in
sbb
mov
scas
iret
mov
adc
in
xlat
sub
push
subl
std
into
pop
pusha
sti
or
shll
mov
jecxz
inc
lcall
aam
cwtl
mov
xlat
hlt
inc
call
adc
lds
stc
ja
xchg
int3
xchg
dec
or
shll
mov
pop
mov
or
cmp
ljmp
es
mov
pop
ds
decl
in
data16
pop
sbb
data16
fmuls
sbb
mov
les
jo
push
test
arpl
lds
mov
mov
push
icebp
sbb
test
jnp
jae
pop
out
inc
push
nop
mov
lret
xchg
pop
test
imul
xchg
sbbb
scas
lahf
fsubp
jp
jb
ja
je
sub
xor
cmpsb
stc
push
mov
jnp
outsb
mov
mov
adc
subl
or
fidivrs
pop
xor
push
cmp
sti
cltd
xor
mov
pop
adc
pop
data16
inc
and
jb
adc
imul
push
iret
ret
fwait
mov
sti
xchg
add
xchg
lahf
mov
or
pop
arpl
mov
mov
mov
cmp
cs
and
loop
sub
mov
and
xor
ds
jno
sub
fwait
or
adc
cltd
inc
mov
call
int
cs
into
insb
sbb
fsubs
sub
add
push
push
cli
stc
pop
test
jp
mov
outsb
imul
outsb
enter
pop
xor
movsl
outsb
xchg
ds
jge
dec
rcr
stos
cwtl
and
mov
in
popf
xorb
xchg
xor
cmp
in
push
outsb
loop
stos
loop
mov
imul
cmp
xchg
push
pop
pop
inc
mov
sub
mov
shrb
xor
in
imul
xor
push
mov
arpl
neg
out
lods
rol
je
cs
push
mov
sbb
loop
movsb
mov
push
add
mov
sub
push
fcoms
pop
es
sbb
lock
shlb
rcrl
cmpsl
mov
cmc
push
push
enter
lret
lret
ss
pop
jae
pop
roll
mulb
sub
stc
and
cmpsb
cmc
test
test
and
pop
andb
jecxz
sbb
testb
add
xor
sub
xchg
out
jecxz
add
cmpsl
shll
aaa
mov
andb
mov
or
inc
dec
xchg
xchg
xor
mov
jns
addb
xchg
rcrl
xor
arpl
push
mov
xchg
js
sub
mov
js
push
lds
pop
into
outsl
dec
xlat
inc
and
and
push
push
push
jnp
gs
and
sarb
cmp
outsb
stc
push
xor
xchg
filds
jb
in
std
pushf
push
pop
xchg
lcall
cmp
pop
mov
mov
std
sub
stos
xlat
mov
mov
inc
jmp
xchg
es
icebp
lcall
xor
jecxz
fcomps
movsl
inc
cmp
push
xor
test
mov
adc
xor
push
jo
or
xorb
mul
sub
bound
fdiv
cld
and
mov
daa
cmp
decl
cwtl
mov
xor
or
aad
arpl
mov
and
popf
xlat
les
aaa
and
xor
addl
xchg
xor
popa
je
sub
test
inc
popa
sti
test
shll
xchg
mov
push
rolb
push
fsubr
in
mov
pop
and
fnsave
dec
adc
mov
mov
push
jbe
repz
subb
inc
pop
mov
pop
in
and
mov
std
xchg
idivb
adc
inc
adc
ljmp
jecxz
xchg
movsl
aad
mov
and
scas
dec
stc
push
adc
scas
xor
push
mov
pop
mov
stc
adc
lods
shll
dec
push
xlat
fwait
and
lods
jmp
ljmp
out
pop
sub
shrb
mov
jbe
cmp
sub
or
lret
adcl
mov
stos
orl
adc
jle
mov
insb
mov
mov
call
mov
push
sbb
adc
or
arpl
inc
dec
cmp
xchg
xor
cmp
xchg
xchg
cli
lds
test
cs
in
sbb
cmc
jb
add
inc
cmp
push
cli
xchg
mov
leave
xor
and
dec
mov
cltd
push
mov
push
imul
aaa
pop
loope
add
sbbb
dec
add
sahf
pop
jno
cli
loop
cmp
inc
je
or
dec
dec
dec
mov
bound
push
aam
cmp
ss
repz
cmpsl
aam
insl
out
push
mov
push
inc
pop
insl
fdivs
xchg
push
and
xor
lock
mov
imul
mov
mov
push
mov
jb
fstpt
out
movl
rcrb
push
cmpsl
or
pop
in
ret
popl
bound
loopne
dec
enter
lods
out
leave
or
inc
xchg
push
jp
clc
cmp
push
daa
test
in
jecxz
arpl
xorb
mov
dec
fdivl
mov
sti
fildl
in
lret
cmpsl
insb
push
lret
ror
cltd
fisubl
leave
test
jle
xchg
popa
pop
mov
les
stos
sbb
push
add
sahf
mov
lea
mov
sbb
clc
jbe
test
ret
jbe
cli
rcll
mov
jmp
inc
insb
int
scas
insl
sub
rcr
insl
push
lea
and
out
and
jae
fs
ret
pop
fsubl
dec
shll
xorl
cwtl
sub
div
add
repz
pop
js
repnz
fldenv
lret
mov
xchg
ss
es
inc
mov
test
rorb
nop
push
inc
ljmp
mov
push
sub
pop
inc
pusha
adc
in
iret
in
dec
push
pop
jae
cli
ljmp
pop
insb
sbb
aas
orb
dec
mov
mov
in
xchg
and
loope
pop
cli
jp
add
ret
pop
xchg
xchg
scas
aam
mov
mov
add
xor
out
repz
pushf
lahf
jmp
or
cmc
sbb
sahf
cmp
sbb
je
cmp
js
enter
test
cmc
sahf
movsl
push
add
push
mov
insl
mov
iret
arpl
jnp
sub
rorb
out
sub
aam
pop
fdiv
fstl
ss
scas
lret
sbb
stos
ds
cli
cmc
inc
out
sub
or
xor
pop
mov
mov
dec
ret
sub
cmp
mov
or
scas
fwait
cs
mov
jmp
dec
cwtl
pop
sub
pop
xor
movsb
stc
mov
outsb
and
ret
xor
jae
cmp
imul
ret
divb
cwtl
cmc
shl
fdivs
jb
aam
arpl
jmp
push
aam
and
ljmp
addr16
push
or
xchg
ljmp
insb
cmp
flds
test
dec
xor
xchg
imul
and
cmpsl
stc
out
cmp
out
out
cmp
notl
stc
decl
shlb
and
mov
cli
cmp
int
pop
mov
das
pop
pop
dec
stos
in
js
stos
jno
or
xchg
test
es
mov
sbb
dec
or
inc
shl
rcll
jae
pop
cmp
ljmp
sub
or
test
mov
addr16
mov
rcrl
xor
xor
xlat
jmp
in
ret
fnsave
out
mov
push
inc
sbb
and
bound
jecxz
sarb
mov
mov
inc
cltd
xchg
sbb
loopne
arpl
imul
adc
adc
jle
mov
js
shlb
xlat
cmp
lcall
sbb
lea
jle
xor
mov
jmp
mov
movsb
jge
cs
inc
in
and
loope
insl
lods
hlt
in
inc
stc
push
cmc
out
xchg
xchg
mov
in
adc
sub
xor
xchg
inc
je
or
js
and
sub
and
imul
out
test
faddp
mov
push
pushf
std
ret
pop
mov
pop
mov
push
sbb
jno
movsb
sbb
sbb
jno
push
cmpsb
pop
adc
fisubrs
lds
das
loopne
movsb
dec
or
ret
in
fisubrs
push
outsl
mov
rolb
push
xor
push
arpl
arpl
hlt
test
dec
and
pop
cmp
adc
into
jae
xchg
jno
xchg
jmp
cmp
add
mov
push
jecxz
into
sub
inc
shll
popa
ja
mov
pushl
and
pop
mov
adc
cmp
sbb
or
in
iret
stos
das
adc
subl
xor
mov
addr16
xchg
outsl
and
adc
fldcw
jg
dec
add
loop
das
push
adc
sbb
daa
jo
sahf
sbb
cmpsw
setne
add
and
mov
sub
cmp
ret
shrb
mov
test
je
in
mov
dec
ja
add
cmpsl
sbb
jno
push
repnz
in
jb
mov
or
push
pusha
mov
sbb
cmp
or
addr16
xor
sbb
loop
lahf
push
mov
orb
and
and
jno
xchg
pop
lcall
lds
sub
fistpll
inc
mov
shrl
push
testb
cltd
xor
mov
test
sbb
or
ja
xor
and
cmpsl
or
push
add
lods
out
or
sub
sub
sub
inc
fildl
mov
xor
xor
into
fiaddl
sbb
mov
lahf
mov
mov
pop
daa
pop
cmpsl
xchg
pop
pushf
stos
xchg
mov
xchg
add
xchg
sbb
ss
icebp
inc
sbb
ret
mov
in
stc
mov
cmpsb
cltd
jnp
scas
dec
ss
pusha
push
jecxz
aas
pop
lcall
div
in
ret
xchg
and
cli
aad
xchg
xchg
adc
sbb
mov
mov
inc
jbe
add
add
es
push
mov
xor
sub
jb
repnz
sub
mov
adc
sbb
or
cld
out
or
scas
int
push
or
xlat
jb
sbb
fstpl
ss
imull
sarl
xchg
enter
jbe
sar
loop
mov
jmp
test
rorb
jle
out
jne
pop
std
push
imul
test
mov
cmpsl
inc
lods
aas
add
mov
fistpl
sub
pop
lret
loope
pop
shlb
mov
and
out
pop
ja
mov
daa
and
push
shl
sbb
icebp
cmc
push
fisubl
test
fidivrs
adc
jo
and
mov
lea
popa
std
push
call
dec
jp
or
xchg
arpl
fidivrl
fmuls
jmp
xlat
cld
jo
mov
cmp
sarl
inc
dec
adc
mov
or
orb
jne
mov
outsl
loope
xchg
lcall
dec
jmp
jnp
dec
mov
xchg
cld
xchg
fsubl
mov
ss
test
insb
jmp
xchg
xchg
mov
jo
fistpl
push
push
pop
popa
adc
in
cld
cmpsl
mov
into
mov
cmc
and
imul
cmpsb
mov
inc
mov
xchg
lret
or
fnsave
cmovp
and
cmpsl
cltd
loop
add
push
in
push
aad
or
add
sub
pusha
decb
push
and
jae
orl
stc
aam
dec
cmc
push
cli
xor
inc
push
out
push
imul
add
sbb
adc
pop
pop
addl
xor
jne
sbb
out
sbb
mov
arpl
jmp
leave
jecxz
push
pop
xor
popf
xor
ret
loopne
mov
and
sub
xchg
pop
pop
xchg
out
pop
cmp
push
call
xor
aam
xor
adc
cmp
pop
inc
cmc
and
scas
jmp
loopne
lods
negb
fdivr
cmp
ljmp
add
xor
pop
mov
push
dec
arpl
push
imul
jno
out
push
movsl
or
stos
enter
gs
push
sarl
xor
scas
ret
xor
jbe
xchg
mov
int
aaa
xor
adc
mov
nop
cmp
mov
cmpsb
aas
xor
jmp
mov
stc
std
lock
and
movsb
addb
sub
xchg
ds
xlat
cmp
in
mov
insl
and
jb
hlt
push
stos
mov
aas
add
mov
in
imul
insl
and
mov
adc
jg
add
xor
mulb
bound
hlt
dec
sub
in
je
sub
stc
add
js
cmpl
adc
ficomps
mov
int
push
fwait
push
mov
jnp
cmp
movsb
jle
mov
subb
push
in
ficoms
inc
out
insb
xor
rorl
sub
out
out
dec
clc
xchg
mov
imul
xor
sti
lret
jnp
ja
cmpl
adc
xchg
sub
cmp
fcoml
aas
mov
pop
repnz
pop
in
out
xchg
jnp
sarl
xchg
pop
or
imulb
cmp
xor
movb
lock
popa
scas
add
pop
cli
sub
fnsave
and
popa
push
ror
testl
and
jnp
insl
mov
adc
add
jmp
mov
cs
adc
aaa
mov
pop
sti
sub
mov
mov
fnsave
test
test
fsts
das
hlt
pusha
in
adc
inc
in
sbb
jge
popf
mov
and
jo
cmpsl
movsb
xor
addr16
add
out
add
sbb
and
dec
mov
push
jne
mov
stc
lcall
sarb
mov
xor
mov
repz
or
fmulp
out
sarb
iret
mov
mov
test
pop
cmp
inc
add
push
rep
pop
test
jecxz
pushf
mov
shll
out
into
insb
or
in
into
andl
push
dec
push
lea
adcb
jle
ret
hlt
lahf
fwait
iret
or
xor
sahf
shrb
cmp
mov
dec
mov
scas
sbb
mov
xor
xor
loope
out
movb
cmpsb
sbb
ljmp
xor
mov
mov
pop
daa
jmp
hlt
jnp
jge
sub
bnd
js
push
test
aad
sub
fsubrl
in
xlat
jno
rclb
mov
mov
in
sub
outsl
idivl
xchg
and
xchg
adc
fwait
aam
push
sarb
pop
cmpsb
adc
xor
insb
daa
xchg
insb
mov
dec
mov
push
mov
mov
ja
inc
cli
ja
shl
jg
cmp
inc
fs
stos
jecxz
mov
sti
dec
jno
in
mov
and
push
das
ss
lock
aas
enter
popa
fisttpl
out
adc
iret
push
ret
lods
sbb
dec
or
cmpsl
and
int
fucomp
or
ja
add
mov
fucompp
cmpsl
jp
xor
gs
aas
pop
inc
xchg
jl
mov
in
push
pop
lret
xor
popf
cmp
push
pop
das
cmpsb
jns
cmpsl
jo
loope,pt
loopne
loope
daa
and
frstor
add
pusha
addr16
jg
and
repz
xchg
dec
add
xchg
lahf
cmp
test
in
fsubl
adc
xor
loope
mov
imul
pushf
xchg
xor
clc
lock
cmc
cltd
pushf
pop
fwait
cmpsl
scas
data16
push
fchs
xlat
in
mov
pop
dec
sbb
jbe
pushf
mov
jb
lcall
sub
mov
add
into
insl
pop
outsb
jae
aam
rol
dec
shll
mov
cmp
iret
ss
mov
shll
xor
jle
xchg
sbb
pop
sbb
into
xor
cwtl
fwait
jle
in
sbb
aam
bound
sbb
xchg
mov
scas
sub
adc
mov
into
cmp
xchg
xchg
imul
test
and
mov
and
push
xchg
test
ret
in
inc
sbb
xor
aam
xchg
lahf
in
movsb
in
pop
mov
dec
cwtl
scas
pop
std
sbb
loope
and
xor
repz
ficomps
add
add
rorb
and
fsubrs
mov
jl
ja
shlb
sbb
test
and
ja
inc
test
add
repnz
xor
mov
jns
aam
lds
stos
std
xchg
sub
in
push
sub
imul
pop
adc
ds
add
adc
pop
sahf
pop
cmp
iret
rcl
test
xlat
or
jmp
lods
leave
outsl
xchg
and
mov
xchg
mov
dec
xchg
arpl
and
xor
aam
mov
imul
aas
dec
jne
pop
push
xor
ljmp
pop
fucom
dec
and
stos
mov
cmc
dec
and
sbb
add
mov
out
popa
leave
and
jl
and
popa
arpl
jg
jle
lcall
cmpsl
mov
push
jle
sbb
adc
rol
sahf
pop
mov
dec
adc
in
jge
mov
sub
jp
movsl
outsl
imul
imul
adc
jbe
inc
xchg
mov
scas
repnz
xor
mov
or
pop
add
jbe
push
out
xchg
enter
in
mov
xor
test
in
js
lds
cld
mov
xor
and
cmp
add
repnz
jo
lock
cmova
or
repnz
aas
sub
push
jb
cmpsl
mov
pop
adc
jl
cmpsb
loope
or
shlb
or
lods
test
mov
fisubs
mov
icebp
mov
fdivs
aam
jo
testl
or
mov
hlt
cmc
cmp
push
sbb
in
mov
mov
jb
std
cs
sbb
test
je
xchg
ret
fsts
ljmp
sub
xor
xchg
cmp
call
addr16
sbb
gs
cmc
xor
cld
sub
stos
xchg
lock
lret
out
push
js
and
dec
cmp
xor
sbb
xchg
sbb
and
jecxz
test
mov
sti
jp
inc
sbb
and
fs
call
enter
push
dec
jnp
movl
pop
mov
pop
sbb
adc
lret
addr16
jmp
adc
xchg
sbb
push
rorl
dec
bound
scas
xchg
pop
inc
arpl
xchg
cld
lods
lret
or
in
repnz
mov
pop
imul
arpl
seta
adc
ret
lods
adc
or
mov
or
dec
dec
cmpsb
out
inc
jb
mov
mov
jmp
and
jge
sub
decb
push
cmp
idivl
jmp
sbb
mov
ret
hlt
into
and
mov
sbb
call
jns
fwait
sbb
sub
js
mov
pop
mov
test
xor
hlt
dec
stos
sub
dec
push
jp
popf
loopne
xchg
insb
add
mov
movb
jbe
stc
xchg
mov
idivb
push
in
xchg
xchg
xchg
and
insb
lods
sbb
cltd
and
inc
movsb
xchg
ljmp
xchg
push
stos
rcrl
mov
add
push
mov
push
add
fsubs
mov
xor
ret
fdivrs
mov
xor
lea
mov
jbe
adc
lea
sbb
cmp
inc
out
daa
cmp
adc
xor
lahf
pop
lock
test
push
or
imul
push
sub
mov
push
sbb
test
add
cld
lret
lods
xchg
dec
ret
or
pop
sbbb
insb
addl
pop
sbb
push
sub
stos
test
call
mov
mov
fcmove
adc
adc
push
and
inc
jge
mov
dec
lock
xor
push
xchg
or
sub
dec
jne
subb
test
insb
cld
sub
or
sahf
subb
loopne
clc
xor
fisttpl
cmp
push
xchg
jnp
ror
cld
jns
inc
addr16
sbb
insl
dec
ja
push
movsb
cltd
xor
mov
pop
dec
andb
dec
inc
inc
stos
fistl
cmpsb
inc
push
mov
mov
pop
mov
fneni(8087
outsl
mov
mov
lret
add
sti
xchg
icebp
push
mov
addr16
fcomps
or
imul
or
sbbl
mov
mov
xchg
mov
subl
adc
inc
sbb
rcll
mov
int3
push
mov
out
lods
out
repnz
dec
add
lods
cwtl
inc
adc
jg
dec
xchg
aam
dec
ja
sub
sarb
arpl
ljmp
xchg
ds
leave
fisttpl
adc
aas
js
jno
rcr
mov
push
ljmp
iret
add
push
adc
hlt
jle
adc
dec
jbe
outsb
fbstp
dec
adc
mov
adc
and
flds
xchg
aam
in
sbbb
adc
jbe
push
cmpsb
mov
test
lock
test
sbb
mov
xchg
add
sub
mov
inc
orb
mov
mov
jo
sbb
dec
inc
mov
stos
push
incb
cmpsl
dec
test
pop
and
jmp
xor
sbb
enter
add
js
lds
insb
fldenv
pusha
jp
mov
ds
insb
test
xor
std
cmp
aaa
mov
adc
mov
rcrb
loop
mov
pusha
lcall
pop
in
out
jg
ror
and
sub
xor
imul
jg
shrb
mov
stos
ja
push
cmp
lea
xchg
stc
dec
in
mov
xchg
sub
jns
or
cmc
mov
push
jns
nop
scas
loop
sub
xchg
cmp
cwtl
inc
in
and
xchg
into
push
sbb
hlt
mov
ret
push
stos
mov
leave
dec
pop
das
lea
push
test
inc
cld
mov
daa
jno
add
jp
mov
jnp
xor
iret
xchg
shl
push
scas
shl
icebp
daa
cmc
filds
adc
jae
mov
repz
in
or
mov
aad
jl
out
adc
or
fmulp
mov
out
mov
jmp
je
mov
pop
xchg
add
add
push
pushf
shrb
cmp
or
fldt
mov
mov
lret
pop
xor
mov
hlt
pusha
dec
cmp
pop
test
daa
fs
or
sbb
sub
and
lret
shl
fbld
stc
shrb
test
inc
mov
pop
cmpsb
jne
in
sahf
pop
enter
inc
inc
stc
fidivl
add
jecxz
xor
dec
pop
adc
push
push
and
aam
mov
mov
daa
imull
xor
das
sahf
adc
and
mov
data16
call
fs
inc
or
sub
loope
pop
jns
fmull
or
rol
stos
sub
sbbb
mov
clc
es
and
add
out
lahf
je
pop
mov
aas
gs
movsl
dec
mov
adc
fwait
std
rclb
cmp
push
dec
pusha
xor
in
decb
loopne
mov
adc
mov
imul
idivl
in
insl
jge
push
xchg
adc
jmp
out
push
test
nop
or
mov
sub
movsb
jecxz
xor
xchg
xchg
jo
aas
lret
sub
push
xor
pop
dec
roll
mov
fimuls
scas
jg
icebp
cli
inc
jmp
cmp
mov
push
sbb
xchg
and
in
int3
lods
mov
pop
and
dec
outsb
pop
add
subb
push
test
mov
mov
rcll
or
ja
pushf
fdivrl
ljmp
insb
adcb
out
or
or
add
test
mov
insb
call
lds
pop
insb
loopne
mov
subb
jmp
pusha
and
in
jns
sub
jns
adc
push
jg
addl
mov
stos
je
mov
pop
fistpl
dec
xchg
sbb
stos
jne
hlt
loopne
idivb
jge
mov
or
mov
jg
xchg
and
in
jge
inc
inc
ret
mov
imul
sub
outsl
dec
je
mov
pusha
sub
pop
call
cltd
inc
xor
sbb
lea
mov
xchg
push
int
mov
xchg
stos
out
pop
push
mov
ret
pop
jmp
adcl
shll
add
gs
shlb
jne,pt
dec
nop
lret
inc
push
dec
movsb
xchg
xor
cmp
mov
sbb
imul
cmp
pop
je
and
cld
mov
pop
stc
repz
jl
push
inc
stos
or
or
dec
movb
stos
fnstsw
or
dec
jp
scas
stos
inc
jb
cli
nop
shrb
repnz
mov
dec
es
mov
and
push
int
and
lcall
lds
inc
push
stos
cmpsl
push
cmp
js
lret
fidivs
out
cmpsl
shl
or
sbb
pop
in
or
dec
cmpb
lahf
jl
xor
jmp
out
mov
popf
adc
scas
roll
ss
das
sbb
jecxz
imul
sbb
cld
or
jg
mov
roll
inc
mov
and
lods
or
cli
mov
ror
xlat
imul
cmpb
dec
mov
fldenv
pop
sbb
dec
dec
insl
jp
add
pusha
popf
or
sahf
cmp
jae
scas
sti
ret
push
inc
and
loope
mov
xor
imul
stos
mov
mov
mov
mov
enter
or
lret
aam
pop
push
fisttps
fcoml
movsb
fwait
stos
sbbb
lahf
sub
cmp
jecxz
push
inc
jnp
add
pop
ret
dec
mov
fbld
sub
pop
call
fildll
out
xchg
add
sti
add
inc
mov
sub
inc
das
stos
push
push
inc
mov
sbb
stos
dec
mov
lods
fldenv
add
das
enter
decl
fs
mov
fisttps
out
pop
adc
sub
cmp
stos
mov
mov
mov
or
cltd
adc
cli
sahf
jne
out
xor
mov
push
dec
insb
inc
loope
jnp
mov
mov
imul
adc
sub
fsubrl
mov
dec
mov
repnz
and
fucomi
faddl
mov
icebp
enter
rcrl
dec
dec
mov
outsb
testl
inc
sub
movsb
call
xor
sbb
divb
jne
fcompl
pop
cmpb
sahf
gs
sbb
sub
out
in
mov
or
int3
out
sar
outsl
push
daa
popf
int3
imul
xchg
test
cmpsb
jp
cmc
cmp
cmp
xchg
out
xchg
fwait
dec
sbb
pop
mov
stc
fistps
and
das
pop
scas
xchg
lret
pop
test
cmp
daa
repnz
test
movsl
in
je
ss
lret
jo
aam
lret
aaa
adc
bound
daa
in
std
pusha
add
outsl
xor
fdivrs
cmpsl
xchg
sbbb
sahf
cmp
mov
or
add
add
pop
ret
mov
cmpsb
fdivrl
stc
cmp
iret
scas
cmc
movsb
push
aaa
pop
je
shlb
mov
arpl
dec
out
ret
push
or
or
repnz
pop
scas
mov
test
pop
mov
faddp
aaa
aad
mov
and
in
or
inc
lea
data16
movsl
dec
test
test
mov
push
sub
shr
aas
cmpsl
jne
jle
pop
sub
jbe
sub
out
xchg
jp
sub
std
mov
movsl
pop
add
icebp
pusha
xchg
pop
mov
dec
xor
hlt
sub
xchg
mov
lds
lock
sbb
sub
inc
and
pop
leave
test
cmp
out
mov
lahf
repnz
inc
ss
pusha
fsubr
mov
inc
aaa
inc
xchg
insl
dec
mov
lds
push
rcrl
xor
dec
xor
sbb
inc
mov
lods
das
jle
mov
or
jae
sub
sub
push
mov
mov
cs
lahf
stc
fldl
push
lds
arpl
adc
clc
adc
aas
scas
jmp
dec
push
dec
test
push
das
fisubl
push
lret
cmpsb
pop
sub
jae
inc
movsl
dec
adc
popf
mov
xor
inc
mov
and
insb
aaa
popa
iret
stc
cld
test
test
push
sbb
sahf
inc
mov
inc
movsb
sub
pop
cmp
testl
push
pop
sti
fnsave
or
mov
mov
cmp
adc
iret
pop
ljmp
lods
mov
adc
xor
inc
imul
dec
jl
cmp
je
add
xchg
in
xchg
cs
cld
dec
pop
popf
adc
gs
ja
jle
jne
pushf
cld
mov
cs
pop
shll
ret
sbb
lea
sub
or
sbb
daa
les
mov
scas
jne
ror
ja
fnsave
cmp
jp
je
pop
or
dec
pop
in
fiaddl
dec
cmp
sub
bnd
mov
int
pop
fs
shl
lret
or
pop
sahf
adc
add
and
inc
pop
int3
fwait
stos
push
daa
movsb
dec
in
xor
mov
es
pop
insb
mov
adc
add
ret
sbb
fists
lcall
xor
mov
pushf
push
xchg
xorb
xchg
pop
add
mov
cli
sti
lods
ljmp
push
push
dec
ja
aaa
and
cmpb
xchg
aam
adc
adc
sbb
test
loopne
xchg
add
pause
or
inc
int
xchg
loopne
cld
mov
popf
adc
pop
enter
and
test
ret
mov
iret
sbb
clc
mov
jbe
int
xchg
test
shr
push
clc
add
pop
sbb
cli
faddl
pop
iret
test
push
lret
inc
ficompl
pop
or
hlt
xchg
sarl
hlt
inc
jae
adc
dec
cmp
js
call
std
mov
mov
out
les
or
test
jge
ja
enter
aaa
scas
xchg
mov
fcoms
not
mov
fs
sub
fsts
dec
jne
es
arpl
push
sbb
lret
ja
pop
lret
xchg
fimull
addl
fimull
push
outsb
inc
pushl
mov
in
lods
inc
and
sbb
cmp
iret
rcrl
lock
test
inc
push
pop
lock
inc
fs
jae
mov
mov
in
in
sub
sbb
push
imulb
fwait
xor
dec
ds
sbb
inc
dec
dec
xor
or
and
pop
pop
fucomp
es
xchg
bound
sub
cmpsl
pushf
dec
popf
test
cmp
orb
cmp
mov
addr16
fisubrl
std
adc
adc
mov
xor
adc
cmc
rol
dec
ret
fdivrl
mov
sahf
pop
cwtl
test
cmpsb
lahf
imul
cmp
shll
dec
movsb
jp
cmpsl
int3
xchg
mov
mov
mov
jo
stos
cmpsb
and
pop
push
inc
mov
xchg
push
push
jbe
inc
push
jle
ljmp
clc
in
popa
mov
fucomp
lock
lcall
subb
add
mov
ret
aad
repz
mov
xor
fistps
std
dec
fistpll
dec
mov
sub
sub
cld
das
mov
mov
data16
xor
cwtl
lock
lcall
push
test
mov
scas
and
sub
popa
add
xchg
mov
xor
jne
in
dec
push
gs
add
sbb
cld
in
fwait
push
lock
cmp
daa
mov
dec
dec
jae
pusha
adc
addr16
shr
stc
xchg
inc
leave
mov
sub
je
ret
popa
repz
inc
sbb
sbb
cmp
or
push
xor
fs
mov
push
ret
mov
lea
cmc
test
xchg
ja
out
decb
test
jno
cs
dec
inc
adcl
out
add
insb
jp
popa
shl
pop
sarl
aaa
stos
shrb
mov
das
movlps
adc
repnz
cmc
mov
push
adc
jecxz
divl
andb
jmp
fdivrs
add
and
sbb
fidivs
xchg
stos
lcall
mov
dec
loopne
data16
sub
fists
shll
mov
push
add
and
es
cld
ret
xchg
dec
inc
sub
pop
fnstsw
push
leave
dec
add
std
jbe
xchg
cltd
lret
inc
mov
clc
push
fnsave
sub
in
in
ljmp
clc
mov
mov
insl
nop
iret
dec
in
faddl
pop
testl
cmpsb
clc
pop
cmpsb
jge
stos
insl
bound
dec
adc
dec
sbb
xchg
dec
sub
std
add
cmpsb
in
pop
xchg
jae
fisttps
sbb
push
pusha
lcall
and
mov
cmp
out
push
mov
adc
bound
xor
test
sti
xor
adc
mov
adc
and
inc
pop
fwait
xchg
xor
jae
pop
adc
lock
xorl
dec
xchg
addr16
pop
das
lcall
mov
not
aaa
jo
out
jnp
test
dec
add
dec
jb
or
std
sub
ds
inc
xchg
inc
test
das
xor
jge
arpl
in
adc
xchg
insb
inc
or
fstl
pop
add
test
inc
test
push
fiadds
leave
mov
pop
lock
mov
test
adc
lds
lret
test
cmc
repz
add
lcall
pop
inc
iret
mov
jae
mov
and
scas
push
add
pusha
xor
pop
daa
sarb
or
xchg
sub
inc
bound
dec
mov
cld
pop
adc
fcoms
or
lret
and
mov
push
iret
mov
mov
loope
push
loope
sbb
test
in
pop
inc
fistl
push
rcr
xchg
loop
push
adc
lret
push
xchg
cld
pusha
push
mov
imul
lods
push
or
cmpsl
test
push
xor
xor
or
fstpl
jmp
dec
jle
jl
insl
cmp
cmp
fistpl
jmp
repz
and
mov
jp
xchg
jnp
jp
jo
push
icebp
mov
or
push
cmpsb
fs
sbb
mov
xor
push
mov
pop
mov
cvtpi2ps
pop
nop
pusha
mulps
mov
pop
daa
jnp
add
pop
push
xchg
fs
lods
stc
in
fdivrs
das
popa
test
fwait
fwait
push
push
fcmove
push
stos
stc
cmp
mov
xchg
movsl
xchg
movsb
cmc
out
dec
dec
xor
and
pop
popf
inc
imul
sub
pop
fisubl
pop
inc
out
mov
imul
jb
push
pushf
dec
pop
xchg
outsb
xchg
adc
mulb
mov
mov
and
call
mov
xlat
or
dec
push
and
xor
sbb
adc
and
test
nop
jmp
jg
push
stc
gs
repnz
push
xor
test
and
mov
xlat
dec
inc
pushf
cmpb
aam
adc
jmp
push
mov
cmp
pop
arpl
inc
nop
jne
mov
stos
push
in
stc
in
int
dec
mov
sub
repnz
mov
xor
pop
pop
repz
cltd
dec
pop
fnsave
inc
xorl
pop
sbb
xchg
jbe
cli
sbb
ficoms
test
int
adc
in
push
shll
dec
add
pop
xchg
jle
add
xor
int3
mov
sti
push
jle
adc
stos
lret
sbb
xchg
inc
mov
xor
sbbl
cmpsl
loope
stos
loop
mov
add
fstpl
pop
das
adc
mov
pusha
dec
popa
cmpsb
data16
mov
xlat
cld
imul
sarl
test
push
or
sbb
xor
jbe
icebp
out
call
or
push
lcall
call
out
pop
daa
sub
lods
add
stos
lcall
mov
adc
mov
inc
pop
sbb
adc
dec
xchg
maxps
test
adc
or
cmp
out
xorb
sahf
inc
cmpsb
rcrb
aas
out
addb
jge
and
ljmp
mov
adc
pop
stos
mov
es
js
dec
test
push
inc
jne
inc
popf
or
loop
fstpl
push
pop
ds
jp
insl
ficompl
dec
std
jecxz
cmp
cmpsl
xor
pop
insb
int3
xor
repz
cwtl
xor
inc
push
and
sub
and
inc
jmp
dec
pop
dec
inc
adc
sbb
xor
scas
pop
mov
mov
les
fstl
xor
fimull
xchg
xchg
orb
cmp
nop
push
shrl
dec
fmul
or
test
nop
adc
inc
test
jecxz
jbe
add
jle
lods
ffreep
hlt
fiadds
das
test
xchg
sub
mov
mov
aas
orl
dec
sub
pop
mov
aaa
push
mov
inc
test
sbbb
push
mov
imul
fdivr
push
add
sub
cwtl
in
pop
push
jne
fs
jl
inc
and
lods
movsl
inc
jge
xchg
sahf
mov
aas
gs
sub
pop
orb
das
sub
mov
loop
and
jns
adc
push
pop
mov
xchg
sub
mov
jl
mov
jmp
mov
or
int3
outsb
jmp
and
lods
mov
jmp
mov
xchg
repnz
add
and
sahf
push
ret
int3
out
push
std
cmpsl
es
cmp
mov
push
mov
inc
hlt
cmp
fstpl
pop
lock
xor
mulb
aaa
or
lcall
cmp
ret
mov
not
pop
jl
repnz
add
xchg
pop
sbb
mov
out
icebp
push
subb
xchg
test
imul
insl
jns
sub
call
std
movsl
loop
push
int3
jg
mov
inc
imul
popa
jno
cmp
mov
out
mov
bswap
xchg
mov
inc
in
icebp
push
rcll
movsb
nop
pop
cmpsl
xorb
popf
xor
mov
xor
daa
pusha
movl
dec
push
inc
and
sbb
aad
out
cmp
push
insl
dec
xlat
and
loope
dec
rcrb
aaa
les
mov
test
push
mov
ficomps
xor
mov
mov
inc
repnz
sbb
aas
sbb
fnstcw
mov
sahf
inc
mov
xchg
ja
dec
lods
aaa
xor
sub
sub
cmp
mov
jae
out
add
adc
sub
mov
jo
data16
popf
inc
mov
push
and
es
in
cmpsb
bnd
mov
sub
jb
out
pusha
sahf
scas
mov
add
and
popa
push
push
rol
shrl
and
dec
stos
cmpb
fs
enter
inc
inc
mov
fxch
addl
jecxz
lds
adc
mov
inc
sub
xchg
das
bound
stos
dec
push
int3
push
insl
les
or
jb
xor
jmp
sub
inc
mov
lods
int
iret
popf
add
mov
mov
xor
aam
pushf
push
mov
fimuls
in
out
xlat
push
xchg
jle
jmp
xor
movsb
hlt
push
emms
push
fstpt
dec
aaa
and
xor
mov
mov
rolb
inc
adc
mov
xor
xlat
cmp
aas
adc
cmp
inc
or
push
outsl
pop
pop
arpl
xor
and
mov
lea
negb
stc
xor
or
xchg
and
rolb
xlat
jle
fisubrl
mov
mov
pusha
xor
xor
scas
push
dec
fsubrs
cs
push
nop
mov
xchg
cmp
in
push
call
mov
test
cmpl
bound
xchg
popa
pop
cmp
out
jl
cmp
shrl
aam
push
call
xchg
mov
lret
stc
push
loopne
in
loop
push
lock
aad
jp
enter
clc
jecxz
scas
shll
jle
lods
mov
stos
xchg
mov
mov
mov
andl
push
aam
cmp
shll
ja
cmp
test
cmp
insl
jae
jns
les
cmpb
shrl
dec
and
fsts
or
adc
add
sbb
inc
xchg
enter
dec
adc
push
andl
data16
jecxz
pushf
add
mov
enter
mov
and
cmp
dec
adc
fdivr
mov
hlt
sbb
lret
mov
sbb
or
lret
int
mov
mov
in
ret
rcr
xchg
cwtl
jae
mov
std
js
in
call
clc
push
mov
sub
daa
mov
hlt
in
cmp
xchg
xor
mov
add
sub
inc
out
and
sahf
or
stos
add
fldenv
out
int
gs
out
movsb
lret
xorb
cmp
mov
popf
aaa
js
xlat
scas
mov
mov
in
loopne
aad
popf
dec
cmc
or
cmpsb
js
dec
in
cmp
inc
sub
cmp
add
aad
xchg
jp
out
call
cltd
cmp
pop
ja
stc
cmp
mov
popf
adc
pushf
push
roll
push
or
es
repz
xor
dec
inc
iret
mov
or
or
popf
sbb
xor
test
pusha
cmp
lahf
mov
fisubrl
pop
ds
add
jge
sti
mov
mov
mov
adc
sbb
jp
sub
movsl
push
stos
sbb
ljmp
sub
stos
insb
js
pop
shr
pop
sub
jp
xor
into
inc
loope
jge
mov
sbb
adc
pop
movsb
sahf
cltd
xchg
xchg
cmp
leave
mov
pop
fcomps
imul
adc
je
sahf
jbe
bound
subb
xor
cmc
int3
xor
sahf
push
push
jl
mov
jno
push
push
and
push
xlat
mov
cltd
lods
movsb
and
or
imul
sub
lret
rclb
inc
fwait
ss
sub
sahf
push
scas
pop
nop
mov
pushf
fdivl
cld
jnp
stos
mulb
or
sahf
into
or
xchg
fmuls
sub
fistps
loope
and
ret
jnp
ficoml
inc
and
leave
sahf
sbb
out
movsb
and
mov
or
lds
push
jp
xor
push
cmp
mov
pusha
mov
jo
shlb
xchg
arpl
mov
jno
jnp
push
or
push
xchg
imul
push
gs
lds
test
fldcw
jbe
pop
js
push
or
jbe
jmp
xor
push
or
out
cmp
test
push
fisttpll
and
dec
es
push
sub
mov
dec
adc
ljmp
cld
push
in
imul
lds
jl
sbb
incl
adc
test
push
add
lcall
dec
cs
out
sub
push
pop
cs
dec
or
xor
pop
mov
pop
lcall
popf
in
cmpsl
clc
push
aaa
or
popa
rorb
jmp
xor
or
cli
test
adc
enter
pusha
xchg
mov
xchg
inc
hlt
xor
fsubrs
mov
mov
shrb
push
xor
mov
ja
je
mov
std
nop
divl
xor
and
je
add
pop
mov
mov
inc
jns
mov
jno
pop
and
repz
pop
xchg
cltd
outsb
or
cmpsl
test
test
movsb
popl
push
xchg
movsb
sub
test
sub
or
in
xchg
jmp
jge
jp
int
enter
scas
pushl
xchg
inc
stos
sbb
lahf
fs
shlb
dec
and
js
push
call
je
push
inc
sub
xlat
xchg
jo
dec
fdivrl
mov
sbb
scas
jecxz
mov
and
push
std
fldl2e
es
jae
inc
mov
jl
in
sub
xchg
mov
jo
icebp
mov
push
das
stos
push
stos
lods
push
pop
fidivl
add
test
lods
sbb
cltd
das
adc
icebp
pop
sbb
mov
pop
arpl
or
push
stos
and
mov
and
adc
lods
cmp
push
insb
and
es
outsb
mov
jmp
push
lcall
and
mov
fsubr
dec
push
in
mov
inc
xchg
icebp
xor
xchg
dec
data16
adc
cmpsl
sub
repnz
scas
sahf
js
rcl
test
pop
push
loop
or
cld
or
inc
adc
xchg
sbb
inc
inc
add
sub
push
add
cmp
test
rorl
loop
xor
dec
addr16
leave
xchg
mov
aad
scas
xor
add
lret
xchg
jae
adc
mov
push
lret
and
je
ucomiss
mov
aam
sbb
movsl
nop
ljmp
and
leave
sbb
cmp
xchg
das
sbb
add
sub
addr16
pop
sub
sub
mov
cmp
out
jl
scas
stos
push
mov
call
shrl
mov
or
mov
js
and
pop
rolb
adc
cmp
pop
dec
iret
dec
mov
in
push
aas
add
clc
je
addb
enter
adc
cmp
dec
es
sahf
in
imul
cwtl
adc
xlat
ss
xchg
add
mov
bnd
jle
push
push
cmp
test
inc
xchg
loop
movl
nop
jnp
stc
testb
jmp
jg
sbb
push
bswap
ret
jmp
mulb
adc
pop
cwtl
jnp
sarb
cmp
fwait
jmp
inc
dec
pop
pop
cld
pushf
jmp
repnz
inc
xchg
stc
out
cmp
daa
popa
dec
push
cmpsl
mov
inc
cmpsl
push
inc
pop
push
es
push
mov
mov
xchg
jp
lcall
in
ret
xchg
enter
push
add
pop
jl
sarl
mov
pop
mov
mov
lods
enter
mov
jne
jmp
in
mov
jns
push
icebp
push
ds
cld
mov
sar
inc
repnz
repnz
xorb
xor
test
pop
insl
jge
ljmp
jne
mov
xchg
add
fwait
xchg
mov
lea
jae
das
scas
jge
arpl
pop
pop
jg
xor
in
inc
sub
cs
pop
push
xor
repnz
xor
cli
test
and
sub
mov
out
and
cmp
sub
cwtl
jl
jp
push
negl
fbld
lret
xor
xchg
jno
inc
stos
pop
add
test
addb
mov
insb
or
inc
cmpsb
dec
and
dec
push
mov
push
jmp
movsb
pop
pop
dec
or
add
jl
ror
push
ss
or
and
and
aad
adc
icebp
push
sysexit
mov
xchg
fadd
mov
mov
inc
in
mov
sbb
adc
pop
ljmp
sub
and
stc
rcr
xchg
and
ret
and
or
jnp
paddusb
loopne
iret
pmaxsw
sbb
mov
adc
leave
out
pusha
loope
jne
xor
shlb
jbe
mov
scas
jne
or
mov
or
mov
shr
push
stos
test
enter
push
dec
sti
movsl
xor
leave
data16
stc
clc
test
cmp
cmp
in
sub
das
lods
aaa
xchg
lock
xor
mov
cmpsb
hlt
xchg
in
repz
xchg
add
push
mov
pop
push
mov
stos
sub
inc
jg
mov
insb
arpl
in
aad
mov
rolb
mov
lret
jbe
outsb
xchg
scas
xlat
in
clc
aam
push
pusha
fnstsw
jbe
sbb
das
jne
out
xchg
loopne
inc
cwtl
lds
std
insl
mov
aam
movsb
xor
jg
loope
and
aas
lcall
cmpsb
and
int3
xorb
cmpsb
push
mov
test
sbb
push
or
sbb
jne
inc
les
pop
popa
sbb
add
inc
xchg
jmp
pop
push
addr16
shr
repnz
mov
lret
jb
inc
mov
cld
adc
test
push
add
je
imul
xor
jnp
dec
cmpsb
inc
lret
dec
in
adc
out
arpl
push
sub
mov
mov
jecxz
imul
sbb
aas
stos
adc
movsb
outsl
mov
sub
sub
popf
nop
rcr
push
sub
sbb
xor
mov
aad
mov
iret
loopne
rcrb
add
movsb
inc
leave
data16
sbb
adc
jg
dec
loopne
jne
les
iret
jae
lret
or
idivl
inc
dec
pop
mov
stc
inc
jne
add
insb
mov
sub
dec
lret
cmp
mov
popl
sbb
jbe
dec
popa
std
scas
ret
sub
pop
sti
dec
pop
dec
ud0
dec
imul
hlt
fldt
mov
push
imul
test
out
divl
add
lds
mov
incb
mov
sbb
nop
sbb
xchg
dec
iret
out
mov
lds
push
jmp
inc
insb
pushf
fwait
cwtl
jmp
out
sub
mov
mov
leave
mov
sbb
enter
faddp
xchg
divb
and
or
cli
cmc
mov
sub
mov
or
cmp
mov
lret
jo
mov
add
movsl
and
adc
mov
shlb
dec
aas
repnz
popf
mov
ficoms
mov
fidivl
dec
pop
add
push
cmp
jne
sbb
std
sub
aaa
push
out
sti
pop
pop
sub
incl
or
and
shrb
push
push
adc
inc
insl
cvtps2pi
xor
add
jns
push
xlat
jg
lcall
xchg
xchg
stos
mov
loope
imul
mov
loop
cltd
adc
sub
inc
cmp
fnstsw
xchg
adc
pop
or
push
out
test
pop
xchg
xchg
xchg
push
stc
mov
jb
sti
pop
adc
add
fisttpll
cmp
dec
sub
int3
lea
movsb
sbb
cmpsb
and
test
lret
sbb
pop
jg
daa
adc
fnstcw
xchg
psadbw
and
das
mov
add
sub
repnz
sahf
pop
ret
ror
inc
fcoms
daa
test
fs
lds
hlt
jp
sti
nop
repz
out
inc
dec
cmp
cmpsl
icebp
adc
mov
sub
sub
add
sub
jecxz
xchg
pop
xchg
popf
inc
call
cmp
dec
loope
pop
xor
jo
icebp
aaa
pop
fimuls
es
jbe
lea
dec
pop
cwtl
sbb
sub
repnz
jg
add
movsl
pop
icebp
call
popf
push
inc
lea
sbb
ds
sbb
pop
pop
inc
inc
or
ret
ficomps
sti
mov
loopne
jbe
fcomp
add
add
fisubrl
dec
mov
xchg
xchg
out
adcb
loop
and
mov
pusha
mov
jnp
arpl
lret
fs
neg
mov
mov
mov
push
shrb
adc
fstpt
fcoml
mov
add
clc
inc
sub
push
mov
xor
je
aam
pop
mov
pop
arpl
add
dec
adcb
popf
or
pop
jmp
into
mov
int3
je
cmpb
test
mov
into
dec
sbb
push
aas
nop
mov
jb
adc
adc
xchg
arpl
pop
xchg
out
sbb
das
lahf
scas
adcb
sub
rorb
xor
mov
in
adc
fstpl
rorl
lods
mov
testb
jo
adc
jne
adc
lea
ljmp
xchg
pop
dec
in
insl
mov
cmp
push
or
add
ss
std
pop
mov
cmpsl
gs
ds
push
out
mov
loop
adc
cmpl
sub
inc
pop
push
popa
adc
movsl
xor
stos
cmp
ret
cmp
imul
adc
pop
fmuls
or
cmp
mov
cmpl
and
hlt
cs
call
popf
test
inc
add
pop
lret
push
movsb
popf
shlb
xor
xor
pop
test
aaa
jp
imul
movsl
push
ja
adc
push
repz
mov
jmp
pushf
jae
xor
jmp
jb
aas
xchg
loope
mov
scas
cmpsb
popl
fwait
ret
xchg
pop
sbb
insb
pop
mov
fsubp
jno
bound
cmpb
dec
xchg
into
ja
mov
sbb
iret
mov
vmwrite
xlat
sub
leave
xchg
sahf
repnz
addr16
pop
lea
lods
dec
xchg
imul
sbb
cmpsl
mov
lds
in
push
test
ja
popf
push
lret
sub
jno
dec
daa
call
mov
xchg
jle
sub
inc
enter
xor
sarl
jnp
add
shrb
loopne
and
pop
jb
movsl
cmp
or
dec
into
sbbb
xchg
sub
dec
adc
mov
dec
lock
dec
out
push
daa
orb
popa
mov
nop
loopne
fimuls
xor
jne
sub
lds
inc
and
aaa
insl
sti
xchg
ja
int3
mov
lret
dec
xchg
test
out
mov
cmpsb
pop
xlat
out
ds
or
setl
shrl
fwait
adc
int
mov
mov
test
ds
push
test
cmpsb
pop
test
inc
mov
push
shrb
clc
cmp
pop
push
clc
mov
sub
pop
cmp
sti
test
ss
mov
mov
lcall
insl
cwtl
icebp
leave
jne
pop
lock
std
cmp
stc
mov
xor
push
outsl
les
cmp
xchg
cmp
xchg
bound
in
inc
jne
mov
data16
xchg
test
pop
sar
xor
jns
jge
and
or
xor
inc
pop
andl
addr16
and
lock
cmp
hlt
cmc
js
lock
mov
js
pop
pop
sub
and
and
ss
mov
hlt
pop
jl
jo
push
daa
and
idivl
jb
inc
movsl
cmc
divb
mov
adc
add
xchg
ljmp
mov
push
lds
push
mov
xchg
sub
push
daa
int3
jne
lret
mov
fs
aad
sub
push
hlt
and
add
ds
data16
insl
aaa
mov
call
jns
mov
jmp
fxch
xchg
pop
fs
adc
loop
loop
lahf
rorb
inc
cmpsb
mov
add
mov
push
repnz
into
mov
sahf
pop
sbb
add
push
popa
fwait
cld
ljmp
dec
jno
icebp
push
or
add
add
sub
fdivrs
aad
clc
rclb
push
add
js
and
fst
cli
sub
ds
add
shlb
adc
call
in
popa
insb
aad
mov
inc
stc
mov
push
jb
rorl
pop
mov
fwait
push
and
mov
pop
push
and
mov
pushf
test
lcall
mov
ljmp
call
add
jo
mov
adc
lds
aad
add
mov
or
jo
mov
roll
lock
imul
aas
adc
push
pop
sahf
je
je
xchg
push
insl
sbb
sub
addr16
sub
pop
call
lcall
cwtl
dec
je
je
mov
pop
push
rcrl
lods
outsl
fimull
scas
mov
jnp
pop
xchg
adc
jl
movsb
test
xchg
in
mov
daa
jb
dec
into
jmp
mov
popf
sbbb
pop
mov
into
xor
inc
loopne
jb
or
in
mov
std
mov
rclb
mov
xchg
das
mov
sub
lcall
iret
adc
push
adc
in
mov
xchg
pop
pop
test
or
xor
fisubrs
out
sbb
mov
jecxz
aam
fildll
jmp
sar
mov
sarb
ljmp
dec
mov
stos
es
cmp
xchg
push
pop
jmp
dec
push
imul
or
push
es
fdivl
lods
jp
push
inc
les
cmp
iret
in
xor
loop
push
add
sub
and
sub
stos
sbb
xchg
mull
shlb
jne
jns
sbb
add
cmp
movsb
test
or
loope
and
arpl
mov
push
pop
jmp
xor
orl
pusha
dec
xor
nop
cmp
push
jmp
mov
mov
jno
js
cmp
mov
ljmp
pop
jo
test
lea
std
jae
hlt
add
jnp
clc
ja
mov
add
ss
insb
in
cmpsb
lods
aad
out
xchg
addr16
xor
jne
pop
dec
xchg
outsl
cmc
mov
mov
sbb
and
and
div
mov
rcrl
out
dec
in
cmp
mov
inc
sub
jle
sub
dec
xchg
daa
inc
push
stos
mov
out
xor
lahf
mov
cmc
cmpsb
repz
add
movsl
mov
and
mov
push
cmp
dec
mov
pop
aaa
or
mov
stc
icebp
pop
cmpsl
fildll
stos
mov
cmpsl
pop
xchg
inc
pop
nop
jno
ret
aaa
dec
testl
in
mov
sbb
mov
inc
adc
add
dec
pop
jmp
jne
shl
dec
loop
sbb
adc
push
jae
inc
jno
push
idiv
push
jecxz
adc
mov
inc
cmpsb
subl
jp
pop
lahf
sub
fs
mov
jno
fucom
dec
cmpsl
xor
adc
aaa
aas
xchg
sub
jmp
in
xor
aad
jns
add
imul
cmpsl
popa
add
andl
cmp
mov
mov
adc
rcrb
int3
sub
adc
jb
mov
dec
pop
lds
mov
inc
scas
gs
icebp
pusha
sahf
shl
insb
mov
movsl
jo
xchg
fnclex
inc
lret
pop
faddl
jg
ja
int3
ljmp
mov
lods
int
and
sub
dec
pop
mov
in
lea
pop
out
lahf
mov
aas
xor
test
xchg
mov
insl
or
or
inc
add
mov
cmp
cwtl
mov
sbb
dec
pop
fnstcw
scas
xchg
out
clc
sub
ja
hlt
push
dec
mov
and
jb
inc
fisubs
jae
addr16
mov
scas
xchg
stc
push
enter
sbb
cmp
stos
dec
cmpsb
lea
mov
xchg
sub
xor
arpl
and
mov
cmp
inc
std
or
or
sahf
sti
fidivrs
gs
and
loopne
xchg
or
jecxz
pop
popf
adc
inc
ret
or
or
loopne
jle
fs
inc
repz
das
mov
lea
xor
fwait
sti
jbe
ljmp
sub
ss
std
iret
xor
ds
xchg
sbb
sbb
divl
les
push
aam
call
adc
pop
and
xor
mov
xchg
pop
outsl
mov
lock
insl
scas
xchg
mov
mov
cwtl
push
sub
aas
imul
test
cmp
sbb
sbb
outsb
push
es
lahf
or
dec
sar
inc
jne
mov
stos
mov
push
push
test
sub
jno
add
shll
push
in
mov
mov
popa
mov
lcall
xor
dec
andl
jne
fbld
pop
pop
cltd
adc
mov
lcall
sar
shl
pop
popf
dec
cmc
cmp
test
or
iret
push
mov
adc
fwait
jae
fstps
jno
push
push
or
lret
cmp
mov
imul
fidivs
loope
fs
push
xchg
xchg
mov
jg
push
adc
js
movsb
sbb
enter
call
insl
pop
xor
sub
fisttps
sti
addr16
push
stc
in
xor
dec
mov
leave
mov
xchg
das
fistpl
leave
push
lock
pop
test
outsb
lock
cmp
cmpsl
mov
pop
mov
sti
repz
or
mov
stos
push
sti
mov
sub
in
inc
sbb
shlb
jmp
mov
in
gs
add
lods
lods
mov
loope
jb
lcall
sbb
xor
pusha
loopne
call
or
nop
push
mov
push
stos
xor
je
testl
shrb
xor
xor
inc
adc
pop
pop
mov
fwait
dec
mov
adc
add
push
addb
jle
or
cmp
xchg
imul
push
mov
sub
and
ds
mov
inc
pop
into
icebp
pop
in
xor
or
jnp
dec
mov
push
jl
xor
out
fwait
mov
push
aas
and
data16
pop
inc
popa
shrb
sub
pop
adc
out
adc
dec
cmp
cmp
mov
jnp
mov
shr
push
js
jno
cmp
sub
ljmp
in
pop
addl
jl
scas
shll
ret
or
dec
cmpsl
stc
and
mov
mov
mov
ret
dec
xor
xchg
idiv
notb
push
stos
in
aas
fstl
test
fildll
push
cmpsl
push
sub
cmpsb
jge
mov
mov
dec
jle
fdivrl
iret
ret
popf
hlt
aaa
cwtl
add
jge
xchg
push
pop
sub
stos
pop
out
test
sbb
sbb
mov
enter
xor
arpl
adc
dec
pushf
stos
loop
dec
jb
test
ret
adc
xchg
xchg
xor
cmpsl
mov
mov
cwtl
mov
lcall
imul
fildl
xor
cmp
into
nop
pop
pop
fsubrs
fisttps
lods
nop
inc
jb
fdivrs
adc
jnp
add
das
sub
pop
lahf
mov
mov
and
pop
and
aad
pop
push
inc
mov
cmp
mov
jl
xorb
mov
add
popa
push
ret
xor
out
push
inc
nop
xor
scas
mov
lods
es
and
cmp
enter
adc
dec
jl
call
ret
jl
leave
jge
mov
jb
xlat
iret
mov
pop
xchg
outsl
lahf
fisttpll
add
mov
sub
sbb
xor
repz
rcll
pop
sbb
bnd
pop
xor
lret
lds
cmp
insb
int
roll
xchg
mov
arpl
popf
mov
adcb
leave
in
roll
pop
cld
xor
fs
shlb
aam
es
or
push
sub
test
mov
int
push
or
push
pop
je
mov
sbb
mov
push
jecxz
mov
dec
fdiv
adc
test
xor
and
lods
cmpsb
xchg
loope
mov
test
cmpsb
fdivl
fisubrl
rolb
fcoml
push
mov
loopne
pop
decl
divl
fs
mov
in
mov
jb
repz
subl
adc
pusha
das
adc
adc
iret
push
js
ljmp
lock
xchg
je
out
push
les
in
lea
inc
or
mov
add
mov
mov
das
jno
mov
test
sub
adc
sub
popl
cs
test
cmp
and
icebp
pusha
mov
jge
dec
inc
pop
lods
lahf
pop
jge
rcl
push
push
jge
cmp
and
repz
pop
mov
mov
inc
dec
aas
inc
gs
xor
mov
enter
scas
mov
pop
cmp
sbb
add
sbb
adc
sub
aad
add
inc
ret
orl
pop
push
lahf
sbb
pusha
pop
pusha
mov
clc
push
dec
push
lcall
mov
pusha
fnstenv
mov
inc
imul
jecxz
mov
sbb
pop
and
cmpsl
mov
cmp
popf
xchg
pop
and
mov
push
mov
sahf
mov
push
in
mov
lcall
jle
les
inc
jb
xchg
and
cmp
or
pop
and
mov
movsl
add
jge
pop
iret
lds
sub
dec
xor
fisttpll
xor
outsb
sub
sbb
mov
jno
fbstp
arpl
dec
xor
dec
mov
shlb
sbb
jns
cli
mov
jnp
dec
push
pop
inc
sbb
jg
mov
enter
cld
and
gs
dec
arpl
out
pop
inc
fidivs
lods
dec
mov
sub
xor
add
gs
fsub
mov
dec
cmc
xor
pushf
sub
mov
hlt
lock
sub
xchg
js
add
leave
loop
and
add
sbb
xchg
repz
lods
adc
jnp
push
push
xchg
pop
stos
mov
insb
clc
leave
adc
push
jb
push
pushf
gs
xlat
or
or
push
mov
aas
inc
pop
fcmovnb
out
fwait
pop
dec
rolb
push
jg
jb
sub
adc
xlat
push
cmp
push
xchg
dec
in
or
leave
roll
xorl
call
and
das
mov
sbb
mov
pop
mov
push
or
add
inc
pushf
xchg
cmp
cs
jne
stos
enter
push
into
dec
stc
and
shll
popa
inc
jns
into
repz
cli
je
xor
cli
test
or
in
mov
mov
xchg
insl
cli
lock
lahf
int
int
bound
adc
and
sub
rorb
lahf
test
dec
mov
push
push
cmp
push
adc
in
pop
jno
cltd
pop
mov
push
sahf
aad
sbb
mov
repnz
iret
mov
adc
or
pop
lods
dec
pushf
nop
xchg
movsl
push
or
aam
aaa
daa
fiadds
or
jg
scas
mov
into
shrl
addr16
push
lret
or
sti
push
shrb
aad
ja
cld
ret
setbe
nop
fildll
jmp
lret
loopne
mov
xchg
mov
bound
out
sbb
push
mov
dec
xchg
mov
and
mov
jne
jp
cwtl
mov
jbe
mov
or
ds
ret
out
shl
push
mov
dec
rorb
jbe
fcomps
fimuls
test
dec
gs
test
lds
cmp
mov
xchg
mov
shlb
lods
push
mov
jp
or
jns
mov
inc
cmp
and
loop
ficompl
sub
lahf
outsb
arpl
mov
mov
scas
push
jge
stos
inc
in
adc
ret
mov
inc
pop
jae
mov
add
mov
xchg
orb
lcall
cltd
aas
sub
adc
cmp
fwait
clc
cmp
pop
rcrl
outsl
xchg
inc
lahf
dec
or
pop
push
add
ja
aam
xchg
arpl
xlat
je
imull
inc
pop
pop
jp
scas
mov
lock
mov
pop
xchg
sub
mov
fs
dec
lcall
pop
idiv
or
adc
dec
notb
xor
mov
das
push
fdivrl
mov
aam
mov
pop
mov
pop
jns
ret
inc
mov
in
xchg
jb
xor
inc
ss
nop
lahf
test
imul
mov
ret
xchg
lods
sarb
into
jbe
or
popl
testl
lods
icebp
int
mov
mov
testb
inc
push
ror
add
icebp
push
cmp
push
ficomps
sti
xchg
xor
mov
pop
lahf
repnz
inc
repz
divb
sub
xchg
jmp
filds
mov
je
inc
cld
xor
xor
pusha
addr16
insl
inc
xor
cmpsb
jmp
mov
jg
aam
pop
dec
movsb
mov
dec
stos
rclb
je
pop
rcl
movsb
lods
push
xchg
dec
les
mov
mov
sbb
mov
push
sbb
xchg
aad
inc
inc
cli
dec
stos
sbb
mov
lods
sub
les
sub
fdivl
popa
out
xchg
dec
pop
mov
test
sub
cmc
mov
add
sbb
lret
mov
adc
out
mov
stc
scas
xchg
in
stc
mov
cs
jae
dec
push
xorl
adc
mov
int
adc
scas
push
mov
test
mov
repnz
movsb
dec
jb
les
xor
iret
icebp
repz
mov
xchg
sar
mov
jmp
std
pop
pop
int
jle
and
xor
ffree
sub
inc
sbb
push
inc
smsw
xor
push
xor
jnp
enter
jne
push
xchg
mov
scas
add
mov
fsubl
out
dec
lret
adc
ficoms
xor
xchg
dec
data16
les
cmp
fcoml
loopne
jne
test
enter
mov
and
mov
mov
mov
mov
rcrb
lods
aad
jmp
jo
xchg
rcrb
jmp
jne
test
icebp
sub
xor
jne
fimull
sahf
sub
daa
nop
mov
cmpsl
outsb
test
cmp
mov
pop
rcrl
xchg
jp
push
and
fsts
sti
mov
rolb
imul
inc
xchg
dec
dec
sti
test
lret
loopne
mov
rcl
stos
mov
pop
outsb
rcrl
cmpsb
jne
push
lahf
cmpsl
pop
inc
dec
ret
movsb
cmpsl
add
inc
out
mov
xchg
cmp
push
repnz
ja
adc
mov
rcll
pop
xlat
loope
ljmp
mov
xchg
mov
movsb
add
dec
dec
mov
mov
inc
out
icebp
mov
repz
jo
sbb
loopne
push
or
mov
cmp
fisubl
mov
xchg
lahf
idiv
or
out
sbb
movsl
mov
test
pop
ret
sar
push
pusha
jp
inc
sbb
add
jb
and
mov
nop
into
mov
jne
pop
imul
dec
jg
lock
xchg
add
fmuls
out
addr16
mov
adc
pushf
or
popl
cmp
loopne
bound
adc
sub
sbb
repnz
xchg
repnz
xor
push
fmuls
mov
sar
xor
pop
hlt
mov
cmp
pushf
out
sbb
sahf
mov
push
inc
mov
nop
and
sub
sbb
adc
int3
scas
fistps
fs
sbb
fcompl
out
push
xor
cmpl
in
adc
adc
dec
mov
mov
std
fs
jne
dec
pop
jg
icebp
nop
das
in
jb
sub
cld
add
mov
lds
adc
or
mov
pushl
adc
or
mov
es
jmp
out
cmp
cmp
iret
out
lcall
or
dec
pop
and
in
mov
rorb
jo
sub
and
ds
sub
jg
int
and
sub
arpl
jl
lods
dec
lods
in
loope
mov
mov
push
xorl
mov
mov
add
jae
cmp
aad
adc
jbe
jge
jg
jle
jb
movsl
push
push
loop
push
xor
xchg
aad
cmpsl
ljmp
pop
cmpsb
testl
sbb
sub
xor
xchg
out
and
xor
inc
mov
dec
xor
mov
lcall
sbb
aaa
cmp
movsb
cmp
sbb
pop
and
or
es
in
inc
xchg
jne
dec
bnd
dec
dec
sbb
cli
shll
je
add
jmp
pop
push
cmp
inc
cmp
lret
fwait
in
stos
lea
mov
push
fbstp
lock
mov
push
test
or
test
sub
hlt
pop
and
dec
lret
cmp
or
mov
rol
adc
inc
add
cmp
in
loop
cmc
adc
popa
adcb
pextrw
imul
cmpsb
xchg
jo
mov
and
pop
idivb
xor
xor
addr16
dec
inc
pop
pop
mov
mov
add
pushf
sub
insb
and
jb
popf
sub
cmp
pop
loopne
cmp
jle
icebp
je,pt
out
inc
cmp
idivb
lea
xor
lea
loopne
dec
aas
rorl
js
call
or
pop
xchg
push
pop
mov
add
cmp
and
mov
dec
sbb
adc
shlb
pusha
push
add
shl
add
dec
psraw
pop
xchg
into
adc
inc
mov
int3
gs
pushf
lcall
aas
fstpt
es
rcll
and
mov
push
jp
in
outsb
cmc
push
mov
or
loopne
out
xchg
hlt
add
insl
inc
rclb
sarl
sbb
cmpsl
dec
and
adc
cmpsb
sarb
dec
add
xchg
mov
mov
sarb
fsubs
shrl
pop
cmc
mov
mov
fidivrs
xchg
setno
xchg
push
ss
dec
mov
dec
test
arpl
push
lret
mov
xor
int3
pop
lcall
lret
mov
cmp
pop
add
repz
mov
pop
fadds
cld
and
data16
xchg
inc
das
mov
mov
pushf
lcall
or
add
push
mov
popf
aaa
xchg
adc
dec
sub
mul
xchg
adc
mov
mov
xchg
push
fwait
stos
cwtl
stos
mov
mov
push
jmp
cmp
les
xchg
mov
fs
xchg
sub
jle
pop
clc
out
sbb
add
nop
arpl
es
xchg
jno
and
inc
pop
outsb
inc
mov
shll
fnsave
scas
call
cmc
and
push
mov
xchg
incb
jbe
es
jge
stc
and
mov
pop
and
shrb
sub
add
mov
jbe
imul
and
jg
adc
jno
mov
aaa
sub
mov
pop
testb
dec
mov
cmc
add
adcb
sarb
mov
mov
mov
jp
iret
mov
or
sub
and
mov
call
jp
sbb
adc
aam
sbb
das
lahf
and
orl
scas
lods
sub
std
adc
fstpl
jno
cli
adc
stos
fsubr
leave
fbld
add
sub
lds
scas
cmp
dec
push
inc
nop
add
rclb
add
inc
mov
or
cmc
dec
sbb
gs
mov
popf
push
ds
cmp
push
push
mov
push
mov
or
iret
cmpsb
ss
and
scas
sbbb
enter
lock
push
hlt
int
xchg
inc
call
movsb
or
fadd
jno
jae
bound
out
xchg
pop
xchg
movb
js
fs
je
int3
in
test
mov
test
in
push
loopne
loopne
xchg
dec
push
adc
mov
pop
rorb
shrl
or
jg
sub
push
sub
imul
ficompl
into
mov
inc
repz
hlt
aaa
shrb
push
in
push
add
data16
adc
testb
inc
push
dec
xchg
push
stos
xor
cmpsb
in
lret
jne
adc
aad
cmp
fidivs
jo
push
hlt
cmp
cmp
pusha
push
jl
sub
cld
test
mov
stc
das
mov
jge
jo
mov
shrb
stc
std
dec
popa
pop
ret
mov
inc
movsl
into
xchg
loope
push
inc
nop
push
mov
frstor
fisttps
sti
and
out
cltd
hlt
jp
scas
es
gs
cli
mov
adc
in
ret
xchg
add
pop
mov
fwait
mov
xor
add
mov
xchg
shlb
repz
call
xchg
dec
jg
ret
xchg
mov
movups
sub
mov
push
push
lock
sub
les
sub
cwtl
xchg
je
inc
cmp
repnz
lds
dec
idivl
cmp
loopne
test
sbb
icebp
dec
icebp
xor
test
jmp
mov
mov
push
lret
cmpsb
add
pop
sbb
inc
sbb
rolb
insb
and
loope
pop
push
cmp
div
mov
repnz
cmpsl
dec
fisttpl
pushf
ja
add
fdivr
xchg
mov
jge
dec
cmp
mov
int
xchg
scas
leave
shl
stos
cmc
pop
cmp
add
and
mov
scas
mov
jne
pop
sub
push
mov
mov
loop
xor
fsts
push
out
xor
mov
int3
sbb
in
loope
pop
sbb
nop
ja
jnp
ret
imul
and
cmpsb
adc
mov
out
xchg
aad
mov
stos
insb
mov
mov
sbb
nop
xor
adc
orl
jns
fs
std
sbb
ret
mov
gs
pop
addr16
sti
jecxz
sbb
add
jne
or
dec
popa
push
sub
cmp
dec
ret
sbb
repnz
movl
lret
dec
and
pop
icebp
add
outsl
jbe
aaa
mov
pop
or
xchg
pop
push
fistpll
cmp
inc
rclb
mov
dec
rol
lods
sbb
pop
add
imul
and
pop
push
inc
in
fistpll
add
in
jmp
mov
fwait
mov
int
mov
cmc
sub
insl
or
popa
mov
sbbb
mov
icebp
xchg
and
pop
mov
daa
fwait
repz
jae
xchg
popf
movsb
fwait
mov
cmp
dec
aaa
lcallw
testl
mov
into
cmp
imul
dec
mov
jecxz
adc
mov
ficomps
das
mov
or
call
ret
repnz
cmp
loope
pop
scas
pop
lock
fwait
push
or
cmp
addb
mov
mov
arpl
mov
leave
pop
mov
cmc
and
pusha
inc
mov
sbb
ret
bound
mov
int3
dec
shll
hlt
push
out
dec
push
cmpsl
sbb
pop
mov
pop
mov
cs
dec
or
sbb
mov
iret
pop
pop
cmc
aaa
mov
pop
rcr
movsl
dec
sti
in
fistpl
lds
cwtl
lods
sub
call
push
cmpsb
xor
in
xchg
pop
sbb
pop
arpl
add
and
adc
xchg
cmpsl
jmp
and
xor
sub
dec
aad
fs
sbb
lahf
xlat
cmp
cmpsl
push
rcr
or
pop
add
or
ficoms
jp
xchg
sub
daa
mov
movb
cmp
jb
rcl
or
sub
sbbb
stc
add
out
sarb
mov
out
pop
mov
lods
dec
shlb
or
aas
dec
adc
adc
ljmp
dec
test
mov
pop
push
sbb
and
cmp
or
inc
xor
xchg
jb
outsl
out
daa
lods
push
mov
lret
add
dec
stc
les
xchg
pushf
clc
mov
inc
dec
mov
or
jb
push
les
xor
jnp
jns
popf
or
mov
adc
mov
jg
push
mov
xchg
leave
xlat
lds
into
fstl
cmp
or
stc
lods
cld
cmc
cmp
dec
inc
xchg
and
mov
push
xor
cmpb
pop
outsb
scas
lds
shl
jp
xor
into
js
mov
xor
std
jge
push
fiadds
sahf
mov
xchg
clc
push
mov
out
pushf
cmc
add
sti
cwtl
dec
pop
and
xchg
ret
push
jmp
sbbl
mov
mov
and
fisttps
xchg
dec
add
jnp
dec
pushf
inc
lcall
test
pop
jns
sub
push
aas
lods
sub
or
jae
or
pop
popl
inc
bound
xchg
js
xchg
inc
dec
sbb
into
imul
sub
out
cmp
mov
das
outsl
cmp
xchg
sub
fisttpl
mov
stos
push
mov
dec
mov
cwtl
js
jae
incl
ljmp
push
sub
cmpl
shll
cmp
rolb
mov
cltd
xacquire
dec
dec
push
repnz
mov
gs
call
ss
dec
push
inc
push
shl
sarl
daa
jae
add
movsb
pop
jbe
push
bsf
sbb
popf
in
push
jae
jge
aad
jne
jae
ficoml
mov
inc
incb
mov
push
lock
negl
movsb
add
nop
xor
js
in
adc
xchg
mov
sub
int3
hlt
notb
pop
shrl
cmc
mov
ljmp
daa
scas
fcoms
pop
lods
repz
mov
arpl
sahf
pusha
xor
mov
iret
mov
jne
cmp
test
cmpsb
shrb
ss
inc
pop
sbb
insl
xchg
mov
divl
and
sbb
adc
sbb
add
push
sarl
popa
jno
xchg
jae
loop
das
fs
xor
rcrl
or
push
push
push
sahf
mov
icebp
cmp
inc
ljmp
add
xchg
cltd
addr16
dec
sbb
cld
das
aaa
jnp
add
jecxz
cs
cltd
mov
and
pop
jne
sbb
or
aam
dec
dec
lods
mov
pushf
scas
shll
or
iret
lods
into
mov
sub
mov
scas
sub
sub
adc
push
rcl
push
ja
icebp
push
push
lret
mov
movsb
out
mov
les
in
orb
sbb
movb
pop
inc
xor
inc
mov
outsl
mov
in
mov
sti
fnstcw
pop
sub
hlt
out
xor
cmp
jnp
lret
lods
mov
or
mov
loopne
jo
pop
shlb
inc
pop
fisttps
push
test
or
lock
test
sub
lds
jne
sarb
in
aam
mov
jo
jp
or
aam
jmp
cs
stos
push
imul
mov
pop
push
jbe
push
fstpt
cli
das
sbb
int3
and
test
cmp
mov
aas
adc
mov
test
addr16
sahf
cld
in
push
mov
mov
pop
xchg
loop
leave
push
jl
shll
out
in
or
or
addl
sbb
ret
stc
mov
or
cmpsb
add
fs
xchg
add
jg
addr16
sub
imul
jl
ror
je
lret
jae
jnp
push
in
outsb
dec
jno
mov
jmp
inc
inc
push
test
pop
lods
call
mov
imul
es
mov
inc
inc
ret
pop
insl
cmp
xchg
out
enter
adc
xchg
scas
cld
or
scas
jl
icebp
sub
mov
dec
ja
jmp
push
pop
xor
mov
aaa
in
stos
jg
sbb
int
call
mov
sbb
ss
sub
xchg
rorb
sub
aaa
ss
sub
mov
icebp
sbb
out
daa
call
push
mov
push
inc
cmp
xor
testl
add
mov
mov
sub
xor
add
mov
pop
fwait
xchg
sbb
and
mov
sbb
imul
cli
out
fsubrl
mov
inc
fnsetpm(287
dec
sub
lret
movsl
lock
lret
lds
icebp
outsl
imul
cwtl
and
push
add
movsb
repnz
push
sbb
cmp
push
mov
fbstp
xchg
adc
les
movsl
ret
lret
mov
sti
mov
cmp
fdivrs
pop
pop
ret
sbb
lahf
fidivs
dec
insb
mov
sub
sub
add
enter
mov
fcomps
sub
aad
popf
inc
sbb
pop
push
adc
lock
push
or
ja
hlt
insl
add
dec
dec
cli
mov
pop
lret
xchg
into
fistpll
xor
gs
pop
outsb
xor
fildl
cmpl
aam
xor
adc
ret
call
push
mov
outsl
cs
rsqrtps
mov
stos
imul
inc
jmp
xchg
adc
sbb
outsb
adc
out
mov
dec
adc
push
xlat
incl
test
in
sbb
loop
mov
test
outsl
enter
movsb
jge
and
lret
sub
inc
mov
xchg
xchg
jns
jb
out
int3
xchg
mov
sbb
fmulp
roll
cltd
fidivrs
inc
lods
mov
adc
or
cmp
in
dec
pushf
cmp
xchg
sbb
adc
inc
xor
mov
pop
fwait
arpl
add
add
dec
xor
mov
rcrb
loop
dec
int3
push
in
cmpsl
jl
sub
push
pusha
cmpsl
adcl
imul
pop
iret
mov
sbb
jb
mov
loopne
fisttpl
sbbl
cltd
pop
inc
push
push
jns
cmpsl
lds
js
push
inc
xor
cltd
nop
mov
dec
push
pop
mov
cwtl
vpshlw
movsb
mov
movsl
sbbl
clc
push
pop
shlb
cmp
mov
mov
call
mov
pop
pop
xorb
dec
in
aam
or
in
ds
int
xchg
fwait
or
cmp
mov
push
jno
adc
sub
psubusb
push
in
cs
mov
mov
scas
mov
add
shrb
int
add
mov
xor
cmp
mov
jns
js
adc
sbb
aaa
jge
sub
js
inc
in
jle
cltd
icebp
scas
sbb
adc
add
andl
mov
imul
in
inc
lcall
jl
adc
out
fs
push
xor
xchg
das
push
lds
mov
lea
mov
ret
push
jl
or
sub
insb
push
cmc
repnz
lods
cmp
cld
mov
jp
jae
pop
dec
push
or
push
inc
sub
mov
imul
cltd
cmc
mov
test
pop
pop
mov
sahf
xchg
stos
pop
xor
les
enter
pop
mov
mov
dec
mov
popf
or
ja
jns
ret
xchg
in
js
sarl
cmp
rorb
shlb
out
push
mov
push
imul
scas
int3
int
inc
aam
mov
jo
jne
mov
adc
xchg
adc
push
gs
pop
add
sub
pop
xor
in
xchg
inc
mov
xor
mov
push
mov
ds
jecxz
sahf
ja
fsubrl
add
mov
or
xlat
dec
sbb
mov
adc
adc
inc
xchg
cmp
mov
adc
or
lahf
cmc
repnz
push
mov
xchg
push
mov
jecxz
push
ss
pop
movsb
push
jl
repz
call
jo
sub
sbb
jb
mov
rcrb
xchg
fld
jmp
cmp
shlb
push
out
add
or
gs
lods
or
mov
or
add
xor
push
sub
arpl
sub
lods
or
fdivrs
cmp
leave
push
jl
xor
and
sub
ljmp
push
lds
xorb
dec
fucom
leave
pusha
iret
push
bound
fists
aas
xchg
mov
add
push
daa
mov
leave
fwait
adc
cmp
jl
mov
jle
test
inc
mov
fstl
push
xlat
xor
dec
shll
sbb
sub
aaa
out
xchg
mov
in
sbb
xchg
xchg
lahf
loop
xchg
inc
orb
mov
pop
jg
aad
mov
cs
test
or
mov
jbe
aas
fnsave
repz
mov
mov
push
push
xchg
es
outsb
std
out
clc
in
dec
mov
inc
or
movsb
mov
cmc
enter
lahf
inc
sub
mov
xor
mov
adc
notb
fs
in
jne
add
sbb
out
aam
mov
insl
arpl
inc
lods
loope
cwtl
in
shlb
cmp
cld
cmp
clc
stos
ds
push
movsl
lret
in
and
and
dec
outsb
cmc
outsl
xchg
out
outsb
adc
xor
or
daa
pop
mov
ljmp
inc
mov
mov
mov
push
lods
lea
enter
cmp
frstor
subb
pop
jb
lea
pop
add
or
mov
jge
sub
and
enter
ret
cmp
rorl
inc
loop
push
aam
xchg
ljmp
mov
xchg
mov
shlb
mov
mov
out
aas
push
subb
mov
in
mov
jg
mov
aad
pop
lods
adc
mov
out
das
pop
xchg
loopne
cmp
and
outsl
fmuls
add
stos
jns
mov
adc
and
push
popa
movsb
mov
mov
xor
push
cltd
cmp
lret
or
cs
sarb
inc
test
xor
and
xchg
aam
pop
cmp
icebp
jns
xor
dec
nop
mov
les
sbb
pop
inc
lret
aad
and
mov
pop
pop
or
test
pusha
test
pop
mov
xchg
push
test
gs
push
rcrb
popf
pop
insb
test
pop
and
xchg
cwtl
imul
mov
push
int
push
sbb
scas
sti
out
and
jae
pop
cmp
xor
enter
shrb
es
mov
sub
orl
jns
movsl
jmp
xchg
daa
push
jmp
sbb
sub
jp
mov
imul
fmull
ss
xor
cwtl
test
std
xor
shl
andb
mov
scas
and
std
into
fldenv
jecxz
cld
pop
andb
mov
jns
mov
inc
mov
xchg
xor
adc
dec
cli
xor
sub
insl
test
and
ret
imul
out
inc
out
push
lcall
dec
mov
sbb
jg
decl
dec
pop
gs
adc
scas
xchg
leave
cmpl
mov
mov
repnz
subb
add
lods
jge
pop
pop
iret
xor
js
push
cmp
lret
pop
notb
ret
jno
add
push
adc
or
repz
xorb
out
dec
dec
addr16
icebp
insb
aam
in
dec
lahf
ret
in
xchg
jne
jns
push
cmc
mov
fwait
lods
ds
sub
adc
jbe
or
cmp
add
mov
fidivrs
arpl
fiaddl
inc
sbb
and
mov
pop
push
and
jp
jnp
pop
cmp
jne
jge
shlb
scas
mov
mov
cld
bound
push
cmp
jl
shll
pushf
sbb
push
sub
scas
sbb
subb
adc
mov
mov
adc
pop
fsub
and
addr16
inc
ja
sub
enter
xchg
and
leave
mov
and
add
mov
popf
fwait
inc
push
ds
sub
out
sbb
push
cs
and
and
fwait
pushf
cs
add
pusha
test
push
inc
fadds
ja
ret
test
pop
mov
into
sbbl
sbb
stc
add
nop
dec
push
jbe
test
scas
jbe
lods
or
xchg
fs
jecxz
sbbl
push
pop
imulb
cmp
call
into
mov
repz
mov
in
lret
jno
roll
stos
mov
sbb
repnz
pop
fwait
pop
xor
call
mov
sub
xchg
xor
leave
cmp
xor
popf
mov
and
dec
inc
mov
lods
shll
lods
mov
in
mov
pushf
lods
push
mov
gs
pop
roll
ja
jge
dec
aas
or
mov
sti
sub
mov
mov
cld
cld
or
mov
mov
andb
mov
xlat
aad
or
xlat
push
cli
xlat
dec
adc
xchg
fcomp
adc
js
jno
sbb
dec
stos
xor
icebp
lea
rcrb
add
sub
aad
popa
test
push
orl
push
jmp
adc
out
dec
ja
repz
adc
inc
out
jmp
pop
sub
in
pop
fsubl
addr16
push
aas
adc
add
jge
pop
xor
pushf
and
mov
mov
shll
ret
dec
jl
jmp
cs
add
cli
sahf
pushf
or
jecxz
mov
js
or
sub
inc
mov
pop
pop
enter
xchg
adc
mov
imul
fcompl
dec
push
out
dec
sub
pop
xor
outsl
and
mov
outsb
stos
mov
inc
sti
mov
xor
ja
pop
xor
inc
and
mov
and
lea
cwtl
inc
lret
adc
mov
loopne
push
cmp
add
or
sbb
mov
stos
pushf
or
hlt
and
scas
pop
mov
inc
xchg
cwtl
test
test
push
les
inc
mov
loope
pop
mov
dec
ljmp
mov
pop
mov
iret
aad
push
in
inc
jl
fdiv
sub
mov
insl
mov
cmp
dec
xor
adc
mov
aas
fnsave
pushf
insb
ret
push
divb
mov
push
sub
sbb
cmpsl
or
into
enter
or
iret
push
jge
daa
dec
jb
cwtl
jae
ljmp
xchg
sar
repnz
dec
mov
sub
cs
mov
hlt
mov
jl
popf
hlt
fs
jnp
nop
and
mov
repz
bound
movsb
sbb
push
pop
pop
mov
or
fstp
sbb
pop
pop
push
push
mov
jne
push
dec
scas
call
cmp
mov
push
and
or
jbe
cltd
lods
adc
mov
and
or
aad
jns
aad
outsl
outsb
negb
out
insb
jle
repz
xchg
and
jge,pt
jecxz
push
je
int3
pop
pushf
aam
mov
lds
dec
mov
mov
addr16
pop
orl
xor
idivl
into
inc
ja
jnp
push
daa
push
or
repz
jmp
roll
jb
inc
fs
call
and
enter
imul
sub
xor
fwait
lahf
loope
add
mov
sub
pop
lret
mov
leave
sub
mov
mov
mov
xor
gs
stc
cmp
jecxz
and
pop
cmpsl
out
std
ljmp
nop
sbb
pop
les
sub
loopne
imul
xchg
add
lret
std
and
out
jnp
sbb
aad
aaa
xchg
arpl
mov
fdivrl
xchg
dec
sarl
jnp
outsl
mov
gs
stc
mov
sti
pop
sub
jecxz
and
add
adc
sbb
cmpsb
pop
mov
mov
jne
sti
shrl
jne
jno
push
cmp
jp
nop
pop
mov
scas
lock
cmp
rcrb
shr
jae
xchg
cmp
incb
ja
insb
call
add
outsl
inc
xchg
sti
daa
ljmp
mov
adc
dec
dec
cli
jle
fistl
inc
je
add
popf
or
scas
cmp
movswl
cmpsl
pusha
addr16
test
sbb
jmp
test
aam
adc
dec
mov
mov
cltd
inc
outsb
pop
repnz
test
jbe
sbb
pop
or
imul
mov
mov
test
cwtl
aam
inc
sub
mov
cmp
int
sti
andl
rorb
pmulhw
addl
lcall
sub
add
inc
push
push
shll
rorb
cmp
mov
jno
push
les
xchg
dec
imulb
xchg
cmp
jne
mov
mov
nop
insb
adc
nop
dec
mov
mov
inc
nop
and
cld
ljmp
inc
cmp
shl
pop
ds
inc
dec
xor
xchg
sarb
fisttpl
rcll
cmpsl
sahf
call
cmp
dec
fnstenv
popf
aad
xor
xor
add
imul
add
loope
negl
cltd
nop
inc
fistpll
pop
mov
in
sub
cmp
mov
mov
and
fwait
push
movsb
cli
push
jae,pt
shrl
inc
repnz
and
ja
sbb
mov
jg
push
cmp
cmpsb
idivb
enter
mov
or
fbstp
in
sub
inc
lea
adc
cmp
mov
outsb
adc
push
pop
mov
aas
xor
and
jae
stos
arpl
push
cmpb
lret
add
enter
lds
repz
xor
xchg
push
xorl
es
mov
mov
xchg
pop
mov
aad
pop
jg
push
mov
ret
inc
cmp
leave
xchg
cmp
xchg
and
push
test
mov
mov
test
mov
pop
sub
adc
mov
iret
cmpsb
push
imul
cmp
jno
stos
js
mov
je
push
or
push
or
mov
cli
cmpb
gs
rolb
jmp
leave
mov
pop
jl
add
test
pop
xor
fistpl
cmp
lea
test
ret
hlt
pop
sbb
and
aaa
xchg
pop
sti
inc
loope
pop
stos
imul
dec
sub
add
xor
fcoml
xor
fadd
mov
lea
enter
mov
fbld
or
stc
and
arpl
sub
je
gs
sub
dec
int
insl
daa
imul
frstor
sar
dec
ljmp
sub
add
xor
popf
mov
aam
mov
xor
inc
add
outsb
mov
cmpsl
int3
mov
in
jl
dec
insb
loop
leave
sbb
shll
push
cld
jo
or
and
fnstsw
push
ret
and
inc
mov
fisttpl
xor
pop
sbb
iret
not
addr16
iret
ds
stos
cmp
sbb
adcl
daa
cmp
pushf
movsl
stos
nop
insb
ds
xchg
adc
pop
imul
mov
arpl
xchg
mov
jmp
mov
mov
rclb
inc
pop
sub
jge
inc
les
shrb
scas
outsl
inc
lods
and
clc
dec
jns
pushf
sbb
rorl
jg
xor
jmpw
gs
jmp
and
dec
xor
lret
and
xor
sbb
mov
xor
push
push
add
push
xchg
repz
fidivs
mov
es
shlb
loopne
inc
lods
sub
or
fcompp
popf
ljmp
fisubrl
mov
cmpsl
lds
pshufw
out
mov
cmc
jns
fisubs
rolb
sti
sbb
out
stc
sub
mov
std
dec
bound
or
flds
lret
out
cmp
loopne
popa
inc
sub
xor
imul
test
pop
movsb
leave
imul
loope
mov
and
call
sub
inc
outsb
xchg
outsl
cmp
fldt
icebp
dec
add
aam
cmp
mov
in
xchg
pop
mov
xchg
cs
fsubl
js
lds
sbb
or
std
in
jne
outsl
into
cmpsb
popa
add
in
scas
sbb
jb
inc
inc
xor
ret
lret
add
pop
xor
das
mov
jl
mov
es
sub
pusha
push
sbb
lock
arpl
adc
out
fiaddl
fsub
scas
pusha
or
push
mov
xchg
imul
dec
test
add
das
sbb
fdiv
cmp
ds
fsubrs
sti
mov
es
aam
cmp
cmp
and
dec
or
lret
mov
icebp
inc
cmpsb
xor
pusha
out
sahf
cmp
push
cmovle
inc
inc
imul
test
repnz
lret
cmpsl
sub
movsl
jb
xor
div
jg
sarb
std
inc
cmp
mov
mov
insl
pop
sbb
inc
xor
je
stos
mov
sub
dec
dec
xchg
cmp
push
pop
stos
add
sbb
xchg
je
add
roll
cmp
or
js
ret
fists
fwait
inc
bts
scas
jns
inc
jb,pn
rol
out
mov
decl
sarb
mov
inc
popf
xchg
or
dec
push
mov
ja
adc
mov
push
sub
sub
fxch
test
and
mov
insb
mov
cmp
pop
mov
jle
inc
mov
xchg
mov
iret
mov
std
in
lds
pop
mov
cmp
jb
neg
subb
xor
xlat
xor
test
popa
insb
rol
or
loope
jge
cmp
pop
ror
stos
lcall
into
into
iret
pusha
hlt
repz
test
lret
cltd
jge
sarl
mov
orl
or
mov
sub
lds
shlb
scas
rclb
jle
add
in
jae
xchg
jnp
mov
subl
add
int
push
pop
jae
dec
clc
in
cs
loopne
mov
lcall
int
cmpsl
or
lret
data16
mov
pop
mov
cld
cmp
sub
lea
imul
sbb
sub
sub
into
popa
xor
adc
mov
dec
and
or
imul
xchg
das
mov
mov
cmp
fnsave
xchg
pusha
sub
sbb
fwait
xchg
repnz
imul
sub
push
jb
sar
mov
es
dec
jle
xor
xchg
adc
clc
jecxz
addr16
jns
fucomp
cmp
push
add
lret
pushf
pushf
fwait
mov
add
add
aas
mov
lea
cmp
mov
popa
pop
mov
mov
pop
out
subb
sti
outsb
aam
fidivs
mov
dec
adc
mov
fcoml
lahf
lds
frstor
aad
fdivr
notl
arpl
sbb
cltd
xor
push
insl
xchg
lret
push
into
dec
sub
and
lret
jnp
mov
fidivrl
scas
or
add
insl
mov
or
imull
add
pop
xor
xor
pushl
mov
adc
xlat
ret
xchg
fwait
jmp
xchg
or
ljmp
push
jg
loop
inc
aaa
incb
push
out
adc
jmp
ror
jbe
xchg
jnp
je
push
hlt
scas
cltd
adc
push
jbe
fsubrl
les
iret
cmp
nop
repnz
add
push
mov
lahf
gs
sub
inc
jecxz
jecxz
pop
sub
fstpt
jge
push
and
icebp
pop
dec
sbb
mov
ret
stos
inc
lret
fwait
lds
xchg
xchg
push
or
rclb
dec
or
iret
inc
mov
and
in
out
ja
cmp
pop
je
mov
scas
pop
imul
ret
push
insb
hlt
loope
std
push
xchg
cmp
lcall
out
mov
cmp
pop
lea
je
jg
dec
repz
in
stos
sub
mov
mov
call
imul
fistl
dec
add
cli
ja
loop
nop
xlat
call
ds
push
cmp
cmp
jp
pop
push
and
dec
sub
inc
les
mov
out
push
stos
sub
fiaddl
sbb
pop
adc
adc
jns
mov
jmp
dec
cld
cmpb
dec
mov
jne
addr16
adc
addr16
pop
jmp
scas
or
xchg
sbb
test
in
imul
lock
fldenv
dec
in
lcall
lds
int
jge
movsl
clc
rclb
bound
test
call
sub
mov
fistpl
jg
push
jge,pt
push
test
outsb
data16
pop
adc
nop
inc
sub
call
int3
jl
ss
ljmp
mov
test
xor
sbb
lods
jecxz
jb
mov
imul
int3
xorb
fistl
arpl
cld
xor
test
sbb
test
cmpl
dec
divl
mov
aas
jl
pop
imul
push
cld
mov
xor
or
mov
inc
xor
mov
inc
sti
fists
cmc
mov
cmc
push
xchg
dec
lret
jnp
idivl
adc
cmpsl
and
sbb
mov
jbe
jg
or
or
dec
dec
ja
push
popf
xor
xchg
popa
xchg
push
add
aad
mov
xchg
enter
jnp
outsb
dec
gs
arpl
lock
cmc
add
enter
in
jmp
xor
test
lcall
arpl
add
add
lods
lret
jb
or
xchg
push
sbb
rcr
push
mov
daa
js
or
repnz
jno
orb
jno
fnstsw
clc
ljmp
push
inc
push
fimuls
sti
jl
adc
bound
add
push
xchg
lock
je
jne
mov
nop
movsl
inc
dec
stos
jns
js
mov
lds
mov
mov
xchg
leave
cmc
adc
movsl
inc
cmpsl
push
or
jae
fadds
xor
outsb
loope
mov
xchg
inc
push
cmp
pop
int
testl
push
mov
dec
popf
push
stos
fidivs
stc
xor
adc
and
xlat
cmpb
in
out
mov
fwait
push
jge
and
cwtl
pop
stc
push
add
arpl
mov
inc
shl
mov
cmp
stos
cmp
xor
fs
sub
xor
lea
push
ret
add
dec
scas
hlt
sti
in
outsl
and
hlt
ljmp
iret
ja
stos
jp
pop
andl
and
clc
sbb
adc
movsb
push
mov
mov
mov
in
repz
in
add
test
mov
xchg
add
idivb
fdivrs
psrad
ljmp
add
or
add
and
in
incb
jecxz
xchg
push
out
sbb
sbb
jae
fstl
cmpsw
add
gs
mov
popf
fists
add
les
insb
enter
pop
stc
xor
cli
iret
cmp
mul
loopne
add
mov
adc
add
lods
lret
ds
inc
adcb
xchg
push
mov
mov
adc
iret
sahf
push
sarb
lods
fxch
mov
daa
jl
negb
aam
shrb
outsb
pop
loop
loope
leave
push
cmp
loop
js
pop
sbb
sarb
mov
sub
xchg
jne
jb
pop
mov
lods
std
fldt
ret
lock
jns
adc
rorb
mov
dec
std
xor
int
jne
and
aas
mov
jle
mov
fs
sti
mov
cmc
sub
test
xchg
xchg
and
sarl
fidivl
sub
dec
mov
icebp
mov
mov
rorb
dec
add
aam
or
pop
xchg
data16
sub
adc
dec
idivb
and
mov
fistl
mov
lock
inc
lret
push
ss
push
cli
add
push
ds
aas
mov
lahf
adc
loope
fdiv
js
adc
lock
cld
jg
or
addr16
inc
jns
sub
imul
mov
push
sbb
scas
dec
leave
push
fs
inc
inc
sahf
imulb
int
xorl
mov
xchg
jnp
roll
lds
inc
xor
pop
sbb
popa
sub
aas
std
mov
sbb
or
xchg
inc
daa
xor
scas
sti
test
and
loop
jp
test
in
cmp
fistpl
iret
les
arpl
mov
mov
dec
out
mov
jl
jo
mov
fidivl
in
outsl
frstor
cmp
adc
call
jbe
lods
fldl
inc
and
xchg
nop
out
js
imul
mov
sub
jl
pop
outsb
pop
mov
arpl
mov
aas
mov
cmp
sub
sub
xchg
gs
adc
dec
lods
inc
cmp
sbb
aad
sub
sbb
jnp
icebp
fcmovnu
enter
dec
fcomps
mov
add
cltd
sbb
aam
xor
js
or
push
add
movsb
stos
mov
jo
xor
jg
testl
cs
xchg
gs
cli
jns
mov
popf
add
loope
test
xor
repz
lds
out
cmpb
jle
push
jl
push
xchg
or
icebp
cmp
lods
xor
in
jg
inc
mov
cmpsb
push
loop
test
fcompl
mov
fsubrs
enter
xor
cld
imul
mov
push
adc
jb
test
nop
mov
push
pop
ret
mov
push
or
fidivl
shl
jno
or
dec
dec
in
lret
inc
mov
or
clc
jns
bound
xchg
push
pop
inc
push
cmp
lock
dec
or
sbb
pop
mov
mov
incl
xchg
divl
jnp
push
cwtl
fstps
push
jp
jmp
out
jle
push
or
jb
or
stc
adc
loopne
orb
pop
push
dec
test
mov
xlat
cmpsb
jbe
cltd
lea
inc
inc
mov
sub
fwait
stos
scas
mov
sub
jae
idivb
loopne
lret
push
jmp
inc
in
adc
aas
movsb
xchg
or
sbb
shl
test
dec
std
cwtl
repz
add
daa
fstpt
push
cltd
inc
sub
cmp
add
stos
xchg
add
mov
jp
data16
ret
xor
jo
into
cli
cs
jle
scas
mul
test
rcrl
in
lock
jmp
fsubrp
repz
and
in
loopne
call
fdivl
test
mov
out
cwtl
into
or
dec
loop,pt
data16
dec
cmp
movsb
mov
out
jmp
add
lods
outsl
or
lcall
shlb
mov
adc
push
arpl
xchg
bound
xchg
movsl
repz
sbb
xchg
packuswb
inc
adcl
outsb
lret
cmpsb
movsl
clc
pop
mov
fstps
inc
push
ret
inc
movl
push
jg
imul
pop
fcomip
pop
pmulhuw
lret
adc
sti
je
xchg
inc
test
aaa
or
cli
cli
ljmp
sbb
lods
ljmp
mov
inc
cld
jmp
ljmp
lret
or
pushf
jae
add
insb
push
or
push
int
push
pop
mov
icebp
shlb
aaa
dec
iret
sub
push
mov
and
xchg
idivl
adc
or
or
sub
jp
jle
inc
cmpsl
inc
add
cmp
rcr
push
fldcw
rclb
jg
mov
mov
ficompl
sbb
push
push
cmp
ffree
push
push
push
in
call
xor
movsb
lcall
imul
dec
int3
shlb
lock
jmp
pop
or
js
adc
lcall
test
inc
movsb
or
mov
in
cld
push
and
dec
inc
mov
or
dec
and
fnsave
cmp
fidivs
dec
pop
push
pop
lods
add
dec
loop
pop
iret
orb
rcrl
pop
out
sbb
test
mov
adc
sub
test
pop
sub
aam
mov
test
cmp
or
popf
sub
enter
mov
pop
out
mov
jns
lds
aad
iret
std
cmp
dec
pop
or
mov
imul
loop
mov
adc
fwait
push
push
shlb
neg
jge
loope
sub
lea
add
jns
out
mov
xor
shll
movsl
ret
mov
inc
jl
add
ss
xor
jbe
or
add
mov
push
push
xchg
test
call
push
sbb
jmp
outsb
cltd
xor
bound
add
mov
lret
xchg
jae
loop
pop
inc
xchg
cbtw
xchg
nop
xchg
jae
sahf
lahf
push
and
sbb
sahf
mov
mov
int3
push
push
mov
mov
or
pop
outsb
mov
dec
pop
push
mov
inc
inc
jp
push
pop
cmp
dec
rol
call
sbb
sub
and
cld
sub
mov
fnstcw
mov
out
sbb
fsts
std
out
xchg
lds
push
test
test
and
stos
sub
dec
mov
in
iret
or
scas
cmp
popa
imulb
sbb
imul
cmp
sbb
cltd
sbb
stos
out
das
lcall
ss
ds
scas
and
in
lock
lcall
mov
rcrb
push
movsl
mov
mov
push
cltd
lock
xlat
xchg
xor
hlt
leave
ljmp
add
inc
pusha
loopne
mov
mov
jecxz
out
sub
es
jae
mov
test
sbb
hlt
mov
mov
outsb
lcall
inc
into
insb
sub
fstpt
pusha
outsl
ret
insl
adc
push
movsb
mov
xlat
sub
cmp
loopne
xchg
loope
push
push
shl
mov
das
std
clc
into
mov
or
stc
and
xchg
fcomp
push
pop
mov
and
add
jbe
mov
mov
mov
xchg
and
push
int
jp
sbb
xchg
push
fimuls
push
sbb
push
imul
sbb
loope
hlt
es
es
lahf
push
dec
movsl
xchg
ds
in
sbb
dec
cmp
fs
and
repz
aad
adc
add
jl
mov
add
cmc
add
push
inc
lahf
ja
insl
lods
fsubl
cmp
xchg
sub
jl
inc
repz
mov
sub
pop
icebp
popf
stos
dec
pop
stos
mov
jp
shlb
arpl
xchg
push
dec
mov
shll
dec
or
mov
jns
fildl
push
cmp
sub
outsl
pop
or
mov
repnz
popa
outsl
test
jnp
lea
and
pop
imul
pop
leave
rorb
sbb
les
xchg
cmp
mov
xchg
cmpl
cmpsb
xor
enter
inc
insb
dec
ds
ds
pusha
popf
mov
mov
xchg
repnz
or
mov
les
and
in
pop
mov
mov
ss
push
out
test
mov
mov
fiadds
dec
pop
dec
mov
cwtl
popf
leave
icebp
xchg
sub
imul
into
or
xchg
flds
mov
dec
fildll
pop
cmp
jae
push
lea
and
cmp
xchg
pop
fldt
mov
inc
sahf
pop
notb
lahf
movsl
arpl
fbld
fidivl
mov
inc
jmp
mov
xchg
pop
cmc
pop
mov
cmp
push
mov
mov
pop
lret
outsb
sbb
sub
inc
inc
mov
sbb
lea
int3
jne
test
aam
xor
popf
es
add
jno
push
sub
jmp
aaa
xor
jmp
pop
test
mov
jbe
movsb
cmp
pop
push
sub
std
imul
popl
dec
fcomp
pushf
xchg
dec
add
dec
std
cltd
pushf
mov
pop
icebp
mov
fisubs
push
icebp
ds
insl
pop
clc
and
add
sub
add
jecxz
int3
jb
mov
mov
xchg
push
push
dec
rolb
push
xor
loope
xor
mov
in
cmp
jb
and
rclb
adc
inc
les
push
stos
xchg
in
lods
mov
gs
scas
ret
cld
pop
pushf
lret
mov
loope
inc
adc
mov
inc
lcall
xor
stos
lea
lcall
test
fsubs
add
xor
in
test
scas
imul
jp
and
int
or
int3
leave
test
imul
mov
decb
xchg
jns
fsubl
ss
mov
push
dec
pop
push
and
mov
add
mov
sub
mov
clc
xchg
scas
imul
sbb
sbb
jecxz
inc
add
cmp
mov
push
add
or
xchg
mov
cmp
cmpsl
idivb
enter
sti
orb
in
mov
ss
loopne
pop
lret
adc
hlt
or
adc
sub
lea
jo
mov
test
jl
lahf
sbb
cmp
push
fsubrs
and
mov
loop
push
adcb
xor
scas
ss
adc
loope
mov
test
nop
test
jecxz
inc
or
mov
stc
cmp
lods
jmp
mov
sbb
pop
add
cmp
test
sbbl
mov
jl
xchg
aaa
dec
mov
test
or
sub
adc
cmpsl
and
pop
inc
call
mov
mov
mov
rcll
xchg
and
je
cwtl
add
repnz
and
jns
imul
data16
popa
rcrl
lods
dec
mov
lods
push
test
out
cmp
dec
std
mov
pop
into
jg
stc
add
into
push
lods
pop
and
aam
pop
call
mov
lods
sbb
mov
and
or
ss
enter
dec
into
pop
call
mov
inc
jb
cmp
xor
mov
sub
ss
jl
push
arpl
jecxz
cmpsb
and
movsb
jg
mov
repz
dec
mov
cmpsl
add
pusha
and
shlb
jb
sbb
pop
dec
push
sbb
mov
sahf
sahf
inc
cwtl
out
sub
adc
sbb
lock
movsb
fcmovnu
mov
ret
push
stc
rcr
outsb
sti
hlt
fmulp
cmpsb
pop
outsb
pop
cmp
fwait
xchg
flds
lock
inc
fldl
inc
dec
ficompl
mov
shr
fdivrs
fucomip
popa
pop
adc
pushf
loopne
fstpt
dec
call
iret
outsl
lock
dec
lcall
sarl
ret
or
aas
int3
cld
lds
xchg
popf
ja
mov
pop
lret
scas
lods
cmp
loope
fmuls
outsb
rcll
mov
push
ret
mov
nop
arpl
xchg
pop
xor
jo
inc
shlb
push
add
add
es
push
insb
or
jae
add
stos
sbb
in
lret
insb
in
lods
out
mov
or
xchg
ret
mov
xor
ret
outsl
adc
xchg
xlat
loopne
test
xor
adc
mov
push
and
scas
dec
popf
mov
fists
fimull
mov
jae
lock
nop
cmp
ljmp
push
cmp
aad
lcall
mov
mov
stc
mov
int
mov
lods
outsl
lds
push
xor
push
ss
pop
cmp
and
inc
test
mov
rcl
jae
pop
pop
ds
in
xchg
icebp
xor
mov
movsb
sbb
mov
add
rcrb
and
jbe
jns
aaa
addr16
add
sub
in
fs
xor
pop
mov
cli
push
dec
sbb
sub
sub
adc
mov
mov
and
mov
repnz
test
call
out
xchg
jge
and
push
popf
icebp
inc
xor
xchg
addr16
mov
sub
jne
adc
in
xor
sub
dec
lods
js
ret
push
dec
sub
test
js
inc
cld
dec
jo
dec
sub
jge
jle
mov
loopne
andb
pop
dec
jo
daa
mov
mov
rcr
test
push
daa
xchg
stos
xor
pop
add
mov
sub
and
sub
jl
aaa
ret
jecxz
sbb
in
push
jecxz
inc
xchg
jns
js
mov
jnp
loope
jne
xlat
leave
ljmp
shlb
fidivrl
jecxz
je
jne
jmp
mov
inc
call
inc
and
push
push
mov
iret
cld
outsl
add
sub
xchg
pop
or
and
ja
outsb
and
shll
pop
lods
adc
and
sbbb
fcmovnu
scas
xor
movsl
push
hlt
mov
pop
out
in
das
and
je
inc
and
inc
sub
dec
sbb
in
add
mov
jns
lret
push
cmp
pop
xor
aaa
lea
jp
mov
xchg
es
aam
lea
inc
inc
add
lret
and
fldz
inc
test
and
cwtl
mov
sarb
mov
push
std
cmpsl
insl
fisubl
mov
shl
sbb
ljmp
or
pop
fsubrl
add
sahf
or
xor
in
mov
lret
add
cs
xchg
mov
shlb
clc
mov
mov
pushf
fisttpll
pop
or
mov
add
push
mov
jp
mov
insb
imul
ds
hlt
loope
idiv
stos
adc
cwtd
dec
dec
jne
xor
mov
or
inc
pop
mov
pop
xlat
in
push
jne
cmpsb
adc
and
inc
roll
clc
int3
push
pop
aaa
mov
ljmp
xchg
scas
add
push
mov
mov
push
imul
pop
push
sbb
xlat
sbb
sarl
mov
add
sbb
xor
mov
sub
and
or
call
out
out
dec
adc
popa
out
fs
push
xor
sarb
mov
cmp
sbb
add
cmp
inc
xchg
aaa
adc
sbb
in
pop
loope
cmp
and
fildll
dec
mov
or
inc
enter
loope
daa
mov
mov
lds
and
out
hlt
rcrb
in
xor
lea
xchg
test
push
bound
adc
push
sbb
adc
jnp
daa
sub
test
rcr
mov
jbe
push
jo
xchg
mov
insb
push
xchg
push
push
test
jp
and
sbb
inc
cs
clc
sub
fsubl
pop
jae
imul
lret
jl
sbb
mov
or
and
loop
adc
adc
int
pusha
xchg
push
sub
mov
cld
mov
mov
mov
dec
push
mov
lret
mov
push
dec
jg
jp
push
stc
adc
xor
aas
cld
cltd
div
xor
sarb
xor
xor
sbb
cmpsb
and
adc
cs
cltd
xlat
jns
out
lcall
insb
mov
sbb
loop
test
add
sbb
pop
arpl
xchg
pushf
cli
out
sbb
adc
pop
mov
cmc
shr
mov
aas
dec
or
hlt
dec
and
push
scas
cmp
push
inc
push
fsubs
data16
sub
cld
lcall
jg
daa
jg
lea
scas
ret
and
push
loopne
xor
stos
stc
rcll
inc
scas
pop
mov
popa
ss
leave
mov
ret
jmp
sbb
cmp
xchg
sub
mov
movsl
sahf
in
jo
ds
sbb
pop
xor
dec
lds
xchg
jp
in
sub
adc
enter
add
dec
jb
sub
xchg
xor
fnsave
adc
add
dec
popf
pop
sub
pop
out
into
mov
fnsave
aas
jb
mov
mov
adc
icebp
adc
xchg
sbb
movsb
cmp
aaa
movsl
mov
js
lret
scas
jg
mov
jecxz
jns
mov
and
js
inc
sub
jae
mov
cmp
insb
mov
adc
cmp
xchg
push
stos
test
or
lcall
call
std
mov
call
sbb
in
in
lds
or
out
sahf
aad
popf
inc
subl
xlat
out
out
push
jo
fcmovu
test
sub
xlat
mov
dec
xchg
aaa
js
popa
in
pusha
xchg
pop
mov
xlat
stos
ja
cmpsb
inc
sbb
pop
mov
rorb
pop
add
test
fs
popa
pop
inc
cld
mov
dec
jne
fdivs
mov
sub
arpl
mov
cwtl
push
leave
out
mov
pop
ret
mov
xor
inc
in
cmp
add
lcall
push
push
pop
or
je
aam
adc
frstor
sbb
shl
pop
push
xor
xor
xor
xor
xchg
cltd
mov
cli
addr16
aam
add
popf
mov
mov
ja
jne
aaa
dec
mov
sbb
arpl
push
pop
enter
jne
add
jle
add
add
icebp
sbb
sbb
mov
ficomps
orb
ror
pop
call
jo,pt
arpl
pop
inc
nop
xlat
lret
xchg
push
std
and
sub
out
xor
adc
fimull
push
ljmp
ret
int3
jmp
negb
sub
stc
cld
dec
js
cmp
push
out
leave
jno
mov
lret
xchg
popf
cmp
and
je
mov
scas
push
daa
sti
lds
mov
mov
ds
cwtl
lret
shr
popa
test
pop
jecxz
cmc
jge
hlt
mov
les
popf
negb
xchg
les
push
sub
faddl
test
xchg
jbe
add
mov
sub
and
cmp
mov
jmp
in
push
jge
test
sahf
push
repnz
cmp
cmp
sub
fnstenv
push
insl
jo
mov
jno
inc
jne
call
sub
in
cmp
push
inc
sbb
dec
adc
jmp
aad
mov
lret
addr16
data16
adc
and
xor
cmpb
scas
pop
jmp
sub
pop
dec
pop
sbb
ret
shlb
stc
add
sub
iret
daa
dec
leave
and
ljmp
mov
xchg
psubd
ret
insb
add
xchg
fildl
stos
xchg
in
cmpsl
mov
push
sub
dec
or
jns
pop
lahf
mov
mov
cs
aas
mov
mov
xchg
outsb
xchg
add
xor
xchg
aam
mov
cmp
pop
cli
push
adc
dec
fbstp
mov
mov
fcomi
out
inc
inc
sub
pop
xor
divl
test
adc
data16
mov
lahf
lea
jae
jo
dec
fbstp
stos
mov
adc
jge
mov
pop
pop
sbb
push
dec
bound
scas
rclb
movsl
inc
push
cmpsb
mov
lret
jle
cmc
jo
es
lret
dec
xchg
jl
gs
fimuls
mov
mov
in
jbe
adc
scas
dec
pushf
push
and
in
std
movsb
jg
mov
mov
jbe
jb
stos
popa
dec
jmp
lahf
inc
jns
stos
mov
js
dec
call
cmc
fldl
or
push
jbe
mov
lret
push
push
out
push
lcall
aaa
aaa
xchg
sub
decl
sbb
arpl
sub
bnd
fists
nop
cmp
inc
pushf
scas
cmpsl
jae
sub
jne
adc
icebp
push
xor
dec
lret
add
inc
dec
in
jb
fstl
mov
jo
repz
adc
dec
sub
adcb
mov
fwait
dec
popa
cmc
jne
and
repnz
jo
push
mov
add
fnstenv
inc
fidivrl
mov
mov
push
sbb
sbb
fstpt
cs
adc
cld
fwait
xchg
mov
int
mov
push
gs
xor
inc
in
jns
and
loop
or
xchg
sbb
ret
lods
adc
in
popf
xchg
stos
aad
sahf
lods
dec
adc
aad
add
jge
lahf
js
push
stc
clc
std
sbb
or
hlt
int3
lcall
adc
and
push
scas
jno
mov
mov
mov
mov
das
ficomps
pop
xor
in
xor
gs
test
scas
inc
pop
in
add
pop
push
mov
mov
dec
les
fsubrl
or
stos
sbb
repz
and
rcr
xor
sub
dec
inc
cmp
imul
cmp
call
xchg
lock
jecxz
aaa
push
add
pop
pushf
testl
mov
xchg
dec
jnp
in
mov
mov
js
dec
js
mov
push
decl
push
adc
sub
inc
push
add
cmp
and
xor
and
lea
insb
orl
stos
push
xchg
js
fistpll
jmp
mov
jg
or
loop
jns
roll
inc
inc
sub
cmp
pop
mov
shl
and
mov
dec
jecxz
out
cmpb
adcl
and
push
adc
or
movsb
or
addl
movsb
lret
jns
lret
lahf
sbb
mov
outsb
jecxz
dec
sbb
or
fwait
cmpsl
bsr
push
or
cli
xor
cmp
adc
dec
je
xchg
in
mov
pop
bound
xlat
push
cmp
jle
cmpsb
or
push
and
sarb
mov
mov
mov
lods
xchg
enter
stos
icebp
jae
adc
sbb
into
scas
jmp
fmuls
ja
jmp
adc
imul
lock
pop
push
sub
and
cmpsb
rcll
dec
ja
push
repnz
jmp
sbb
pop
std
pop
jo
cmp
in
arpl
and
ja
cmp
sbb
inc
movsb
push
shrb
and
and
cmp
pusha
push
icebp
lahf
movsl
push
cmp
in
xor
cmpl
pop
pop
cmpsb
or
jbe
mov
and
cltd
pop
mov
popl
add
stos
das
das
or
std
xor
or
mov
clc
leave
jle
and
pop
test
xor
loopne
lcall
stos
in
popf
xor
fldenv
xlat
sub
lret
ljmp
stos
adcl
scas
aaa
pushf
movl
mov
pop
clc
cmpsb
ss
jns
popa
lahf
sbb
mov
es
jge
adc
jp
pop
xor
les
xchg
push
cmp
enter
lcall
jge
sbb
xor
fsub
sbb
jmp
lret
adc
scas
clc
nop
cs
jae
dec
fimull
rclb
inc
sbb
pop
mov
mov
imul
dec
xor
mov
add
push
sub
addl
stos
loopne
mov
cmp
add
jns
jae
stos
add
xor
mov
movl
lock
hlt
add
lahf
mov
mov
lcall
add
fdivrs
jns
dec
addr16
sbb
insb
xor
or
push
adc
and
test
imul
fwait
lret
adc
dec
fiaddl
mov
lahf
cmpsb
sahf
inc
mov
dec
xchg
pushf
mov
push
push
cmp
lcall
cld
popf
push
push
lret
mull
imul
nop
mov
pop
xlat
cmp
inc
fwait
dec
cmp
loopne
insb
sbb
cli
jp
dec
inc
mov
mov
and
pop
xchg
push
fldl
aaa
fdivrs
jno
hlt
push
mov
stos
popf
stos
sbb
out
or
in
subb
out
ss
cmp
adc
cmpsl
mov
sti
iret
loop
fld
movsb
or
sarl
sbb
xor
test
add
outsl
mov
clc
jae
fwait
fs
sbb
jp
in
adc
mov
aam
insb
sbb
int
pop
imul
mov
shrl
jl
jae
mulb
add
mov
into
mov
ljmp
lds
out
jae
push
sbb
imul
aam
sahf
inc
pop
aad
ljmp
mov
cld
addr16
mov
in
pushf
mov
cmp
shlb
loop
push
imulb
fcoml
imul
sbb
scas
mov
push
sarl
push
or
cmpsb
scas
dec
enter
jae
scas
mov
ret
js
mov
cwtl
sbb
inc
sub
mov
les
pop
shll
rcr
sub
cmc
inc
adc
push
aam
push
int
cmp
mov
push
divl
adc
sbb
pop
dec
jne
mov
imul
pop
sub
adc
imul
fiadds
cmc
add
sahf
ss
adc
imul
call
roll
loopne
jb
xchg
pop
flds
dec
popf
outsl
sub
add
scas
xorb
push
std
out
inc
sbbb
push
cmc
ja
add
dec
mov
inc
mov
xlat
or
inc
outsl
mov
push
push
or
mov
mov
shrb
push
insl
lea
jbe
jge
xor
ss
out
ljmp
into
outsl
xchg
or
je
xor
jmp
loopne
int
repnz
cmpl
shlb
cmpsl
shlb
mov
sbb
xchg
jl
mov
jp
out
cmp
xchg
sarl
xchg
out
push
push
popa
shrb
es
in
out
push
sbb
pop
mov
daa
xor
sub
pop
shrl
or
dec
push
add
jl
jno
inc
sbb
sub
lods
jne
shl
mov
sub
add
ret
xor
dec
dec
lcall
sar
xchg
xchg
jmp
push
or
fsubrl
sar
jns
test
mov
imul
fstl
push
xor
fdivr
xorb
xor
pop
mov
lret
mov
dec
jne
mov
mov
das
jbe
lods
mov
cmpsb
repnz
in
mov
stc
adc
jbe
shll
imul
jl
cli
sbb
ljmp
sub
pusha
push
mov
pop
nop
push
inc
pfsubr
int3
sti
popf
jg
inc
mov
popa
and
adc
xor
mov
jnp
imul
jg
cmp
push
and
dec
mov
movsl
push
iret
daa
sub
pop
stc
cmp
mov
mov
dec
xchg
mov
stc
addb
push
xchg
das
int
add
sbb
cmp
and
pushf
cltd
adc
outsb
sub
xsavec
push
divl
dec
popa
inc
pop
jne
lcall
inc
mov
mov
inc
and
pop
icebp
clc
mov
sub
jns
iret
pop
sbb
popf
adc
ret
sbb
popa
out
sahf
jmp
ljmp
js
arpl
data16
rorb
dec
ljmp
fs
sub
gs
or
mov
subl
test
stc
sbb
lahf
outsb
es
mov
jns
and
dec
in
sti
icebp
mov
loopne
mov
xchg
ss
repnz
dec
jnp
or
xor
adc
jb
stos
out
push
mov
sub
inc
movb
mov
fsubrs
add
push
in
out
addr16
popf
jb
addr16
push
movsb
repnz
call
pop
out
dec
xchg
cmp
xchg
test
jecxz
insb
cltd
arpl
xor
pop
jmp
inc
jmp
cs
mov
xor
lret
inc
and
mov
sbb
imul
repnz
lret
jne
add
scas
mov
imul
and
cs
jp
out
pop
add
movsl
ds
cmpb
adc
pop
push
scas
add
jmp
jnp
ljmp
push
jmp
je
or
das
lret
add
jbe
loope
nop
ss
in
imul
rorl
sarl
movsl
push
scas
sub
pop
fnstsw
mov
xchg
inc
add
scas
sub
popa
jmp
pop
call
mov
xchg
add
adc
xor
pop
and
test
mov
test
bound
cmp
mov
jp
mov
lods
inc
pop
and
adc
mov
pop
sub
xchg
push
and
and
mov
popf
add
pusha
jg
pop
push
cmp
or
fwait
lcall
add
jge
mov
push
xorb
ret
mov
aaa
inc
lock
sub
cmp
nop
add
mov
cmp
pop
pop
xchg
ror
push
repnz
adc
loope
xlat
lds
sub
xchg
ret
xchg
aaa
divb
mov
insl
add
test
fdiv
aaa
ja
xor
sti
dec
mov
lret
addr16
cs
stos
fiaddl
adc
int
addr16
xor
xchg
fidivrs
ret
rolb
pop
jmp
shl
xchg
loop
jae
mov
inc
repnz
and
int3
dec
mov
dec
loop
xchg
jae
fdivrl
out
sub
or
mov
scas
jg
aas
pop
jb
cwtl
std
mov
nop
dec
and
cmp
sbb
pop
jbe
or
jge
mov
xor
imul
mov
mov
cmp
pop
dec
inc
arpl
fcoml
sar
pop
inc
lods
or
rcr
lods
and
mov
cmp
loope
insl
and
and
fwait
in
sub
mov
aam
inc
mov
push
jns
les
jns
sub
lcall
cld
ss
push
dec
adcb
aas
pop
jle
mov
outsl
imul
push
add
jno
sub
fidivs
jmp
sti
xor
xchg
lret
pop
pusha
mov
int
jns
call
mov
mov
mov
inc
lret
std
adc
scas
jae
dec
das
cmc
js
cld
lods
cmp
and
mov
loopne
jecxz
lea
xchg
dec
sbb
mov
cmp
sub
adc
insl
sbb
pushf
enter
pop
jge
inc
pop
adc
and
jl
mull
shrb
and
push
pop
lret
mov
jmp
mov
dec
test
mov
sub
sub
pop
and
stos
xor
mov
hlt
gs
sbb
stc
dec
pop
data16
pop
sbb
inc
mov
push
test
in
inc
or
rcrl
popa
fs
cmc
push
les
lret
mov
jl
popf
xor
pop
sbb
lret
cmpsb
fsubrs
mov
cmp
sarb
loopne
cli
addb
sub
andb
fldt
xor
sarb
and
mov
stos
dec
mov
or
jp
mov
shl
sub
popf
or
xor
ss
xor
xchg
xor
push
sbb
mov
sub
adc
xchg
es
dec
insb
mov
sub
gs
fisubs
fdivrl
jne
in
je
mov
roll
dec
sbb
scas
sub
fidivrl
xor
inc
mov
push
jnp
and
sub
xchg
adc
ret
push
push
in
mov
jle
sbbb
push
cmp
outsb
je
sbb
lods
int3
or
mov
xchg
scas
sub
fcoml
cmp
pop
xor
std
cltd
fyl2xp1
repnz
aam
xor
mov
fimuls
ror
add
adc
jle
mov
mov
lea
or
add
imul
xor
or
cmp
xchg
pop
xor
pop
fnsave
push
xchg
mov
xchg
xchg
cmp
lea
mov
jae
enter
iret
and
add
push
les
pop
sbb
je
sub
sahf
and
sub
lods
xchg
add
aam
push
dec
daa
mov
or
sub
inc
nop
sahf
lcall
pop
pcmpgtb
inc
nop
cmc
pusha
cmpsl
aaa
fwait
lret
stos
je
call
in
lret
mov
xchg
repnz
inc
xchg
dec
jecxz
out
out
pop
push
mov
jnp
lea
pop
jno
lcall
xor
ret
loopne
ret
cs
hlt
cmp
mov
into
pop
push
aas
inc
das
stos
lods
ljmp
xor
outsl
lahf
imul
adc
mov
jmp
aas
dec
pop
cmpsl
test
addl
sub
xchg
xor
out
push
push
in
mov
repz
enter
inc
inc
pop
dec
ds
lcall
mov
mov
dec
mov
imul
fwait
std
cs
push
fwait
inc
pop
inc
inc
push
or
mov
mov
fs
outsb
sbb
fisttpl
stos
or
ret
ljmp
fldenv
lret
cmc
xor
loopne
lcall
mov
sub
jp
adc
jge
sbb
pavgw
ljmp
fsubs
mov
dec
xlat
push
push
jb
sbb
test
fcomi
test
adc
dec
lods
jg
pop
lds
mov
fildl
pop
je
adc
adc
cld
ss
test
xchg
test
test
inc
and
lock
adc
shl
test
sbb
in
push
push
sbb
dec
loopne
shr
stc
insl
jns
inc
mov
lods
filds
xchg
call
or
xchg
inc
sub
or
mov
mov
xor
sbbl
mov
sub
lock
clc
adc
mov
addb
mov
iret
fwait
iret
add
fs
subl
jmp
std
pop
sbb
je
enter
fimuls
outsb
pushf
movsb
adcb
pop
les
outsb
adc
adc
dec
mov
loope
pop
popf
add
sbb
stc
dec
mov
jp
jae
call
sahf
dec
shll
sbb
jge
jge
imul
pop
lret
cmp
movsl
push
mov
loop
and
adc
sarl
add
push
insb
dec
pop
pop
test
fsubs
mov
push
ret
cmpsb
cld
adc
push
lcall
cmp
lock
and
stos
repnz
cmpsb
mov
lcall
cmpl
in
add
outsb
aaa
fdivrl
movsb
cmp
pop
and
cmp
push
ja
mov
pop
and
sbb
loop
add
mov
pop
sub
pop
fcomp
fmull
pop
inc
jnp
je
jbe
sub
cmp
mov
mov
jecxz
inc
push
shll
xor
adcl
mov
insb
in
jg
xchg
push
and
jp
mov
in
pop
lahf
jb
add
fnsave
inc
mov
lret
xchg
inc
in
js
cmp
rcr
dec
int
adc
inc
les
pop
or
or
hlt
pop
push
insl
inc
pop
jb
mov
stos
hlt
jecxz
testb
xchg
sahf
push
fcomi
in
loop
mov
or
and
lea
sub
xor
in
out
pop
xchg
pop
test
pop
xchg
cs
repz
js
cli
fs
imul
jg
cmp
jecxz
fs
loope
adc
mov
test
pop
sbb
fidivl
js
stc
test
mov
inc
mov
hlt
dec
bound
clc
jmp
mov
mov
aam
push
aad
dec
loopnew
call
sub
jno
and
sub
loop
mov
pop
lahf
mov
out
mov
sbb
cs
popf
test
test
mov
fbstp
cwtl
pop
gs
dec
sub
xor
sahf
test
or
inc
pop
sbb
jg
test
push
pop
sub
loope
and
popf
popa
jg
fisubl
add
inc
adc
jno
fs
in
jmp
cmp
insl
inc
adc
cmp
cmpsl
cmp
inc
jae
aad
loope
add
cmp
cmp
mov
and
fwait
jb
xor
js
addb
dec
mov
lcall
es
cmp
dec
test
adc
scas
xchg
xor
pmaxsw
adc
push
sti
fwait
jmp
sbbl
or
fnstsw
mov
les
sbb
jmp
xlat
cmp
cmp
push
pop
inc
xlat
dec
arpl
mov
inc
mov
mov
cld
mov
jmp
dec
push
xchg
adc
sub
stos
sbb
push
mov
cmpsb
insl
push
cwtl
scas
outsb
add
jle
mov
nop
ret
pop
bound
aam
sub
or
sbb
dec
mov
xor
ret
test
mov
and
insl
ret
pushf
ljmp
fwait
or
dec
mov
or
or
xchg
scas
adc
sub
jne
or
iret
cmp
into
les
in
movsl
push
dec
dec
jnp
dec
xchg
fs
pop
jb
jmp
orb
shlb
xchg
lock
stc
pop
adc
imul
cmp
sahf
sahf
and
outsb
div
sub
rclb
pop
dec
scas
push
sub
xchg
jmp
push
cmp
add
repz
adc
jmp
mov
push
sbb
rcll
test
out
inc
pop
jno
xchg
flds
add
movsb
addr16
and
in
fs
mov
scas
fwait
adc
and
sbb
mov
mov
mov
rcrl
add
jne
lea
or
aam
inc
ljmp
cld
out
cltd
cs
arpl
pop
paddsw
cli
jge
mov
int3
aam
ret
or
jecxz
rorl
jle
fstp
cmp
or
mov
ja
mov
mov
push
sti
add
sub
mov
test
jecxz
xlat
iret
lods
and
or
mov
push
sbb
ret
shl
pop
test
sarl
sahf
mov
int3
add
sbb
push
xor
inc
sbb
jno
add
or
ror
pop
or
jmp
sub
aad
add
inc
xor
insl
xorl
jecxz
and
xchg
mov
mov
je
cli
stos
or
sub
add
ret
push
push
arpl
sbb
push
lods
enter
dec
add
pop
rcr
jmp
icebp
out
lds
jmp
mov
sub
and
jae
mov
inc
jae
adc
rol
push
and
sub
cld
push
inc
cmp
jecxz
test
xchg
add
hlt
mov
outsb
or
mov
mov
addr16
mov
shll
test
sub
dec
inc
leave
mov
jo
aam
stos
cmp
stos
xor
addb
and
dec
inc
mov
ljmp
movsb
sahf
xchg
adc
sub
sub
push
aam
out
adc
add
jmp
cmp
ss
out
in
push
lret
int3
push
xor
mov
scas
daa
push
or
sub
btr
pop
push
insb
inc
jnp
dec
pop
cld
lods
in
mov
push
mov
mov
repz
mov
outsl
daa
push
in
sub
cli
sarl
cli
loopne
add
bound
test
add
pop
dec
mov
cmpsb
push
mov
andb
fidivrl
hlt
lcall
frstor
pop
dec
mov
rorl
pop
andb
sbb
cmc
test
sar
pop
cli
add
fistpl
adc
cwtl
stc
pop
sbb
mov
xor
cmpsb
mov
lds
stos
insb
bound
or
adc
sbb
jl
test
mov
inc
or
outsb
or
xchg
xchg
sbb
adc
sbb
jnp
cmpsl
test
push
fistl
cmc
sarl
or
fbld
jbe
aam
lods
add
enter
mov
int
in
cmpsl
test
mov
adc
aad
test
add
or
iret
dec
dec
mov
or
data16
sub
jecxz
push
loopne
popa
shll
xchg
xchg
clc
lds
xchg
movsb
pop
lock
add
push
int3
or
cld
in
popf
js
aad
cltd
jae
outsl
ret
cmp
lods
stc
and
and
cld
or
out
in
sbbb
mov
adc
pushf
mov
cld
xchg
dec
jno
addb
fisttps
and
mov
push
enter
jl
cmc
sbb
cmp
sbb
lea
add
rcr
inc
lods
clc
xchg
mov
imul
xchg
mov
adc
ror
cmp
and
dec
jmp
ret
inc
outsb
push
fisttpll
and
mov
je
cmp
push
mov
jbe
and
es
or
mov
les
xchg
bound
dec
push
pop
clc
sbb
loope
aad
xor
jle
cmp
dec
jo
mov
dec
cmp
lret
jns
and
scas
in
out
imull
movsb
nop
xchg
movsb
sub
push
xchg
xor
out
clc
test
mov
in
and
arpl
adc
jg
cmp
sub
add
sub
int3
pop
pop
mov
arpl
push
test
add
enter
ss
jbe
jbe
outsl
push
cmp
mov
out
sub
cmpsb
mov
and
outsl
add
mov
repz
jmp
imul
fisttps
mov
ds
sbb
mov
jno
scas
aas
ss
mov
push
popf
cmp
add
icebp
lods
xchg
add
icebp
adc
aam
mov
xlat
pop
mov
add
adc
jmp
dec
mov
sbb
cmp
or
add
cmp
mov
jnp
aad
add
cwtl
jbe
xor
aad
stos
push
std
mov
je
cmpsl
xor
cmp
or
mov
pushf
jle
dec
mov
and
jmp
lods
mov
adc
push
xchg
or
inc
pop
imul
subb
add
js
in
push
sbb
jbe
stos
stc
lcall
push
and
jge
scas
push
pop
mov
sub
adc
cld
or
roll
imul
fbld
orb
cmp
adcb
xor
jle
jb
lahf
es
pop
pushf
adc
stos
or
stc
js
xor
inc
sub
or
dec
aam
mov
xchg
mov
lret
push
popf
sub
pop
mulb
and
fidivs
cld
cmp
pop
mov
loop
push
es
pop
dec
test
xchg
inc
dec
sub
ja
insb
adc
sbb
mov
outsl
mov
sub
push
cmp
dec
idivl
mov
mov
cltd
sub
jge
sbb
adc
adc
or
adc
fwait
outsl
iret
sbb
jne
stos
fisubrs
and
push
popf
add
sarl
fidivrs
dec
mov
mov
xchg
shrl
inc
mov
ss
mov
xchg
out
mov
lret
pop
fistpll
mov
cltd
or
roll
or
fisubs
daa
dec
pop
xchg
outsb
stos
or
std
fisubrl
sbb
stos
xchg
inc
test
lahf
cmp
jg
mov
inc
inc
cmpsb
je
and
push
pusha
pop
lea
cmp
dec
enter
xchg
sub
rcll
loope
cmp
xchg
testl
or
fnsave
lcall
adc
pop
and
test
fnstenv
daa
cmpsl
arpl
sbb
xor
cmp
fstps
jae
mov
rcrl
dec
fwait
sbb
sbb
jecxz
ret
aad
aam
sub
jle
arpl
jae
into
xor
das
dec
mov
out
in
lods
ficomps
lds
mov
xchg
popa
mov
js
aam
mov
dec
mov
mov
push
popa
nop
and
aaa
call
mov
push
and
pop
pop
mov
cmp
push
mov
data16
loop
mov
lret
into
cld
mov
clc
iret
and
xor
stc
fidivl
repnz
xor
dec
imul
std
cmpsb
cwtl
es
push
sysret
lret
scas
push
push
sbb
fnstcw
mov
lock
lock
cli
jne
dec
xchg
jle
imul
loope
lock
insb
push
push
push
mov
xchg
incl
imul
ss
mov
psadbw
cltd
lahf
jmp
fldcw
popf
adc
pop
or
mov
ss
jb
test
arpl
fbstp
aam
sbb
push
ljmp
icebp
and
shlb
pop
mov
add
mov
int
pop
or
dec
scas
clc
push
rorl
sbb
and
imul
mov
add
jae
and
into
mov
sbb
mov
xor
addr16
movsl
data16
push
xchg
xor
dec
insl
and
lods
cltd
sub
popa
out
pop
xchg
fwait
out
outsl
in
mov
cltd
cmp
xchg
push
push
jns
sbb
mov
aad
ret
xchg
mov
mov
xor
pop
jno
in
fnstsw
test
xor
mov
ss
add
mov
rcrb
jno
jns
inc
adc
cmpsb
movl
add
lret
xchg
pop
inc
jb
movlps
and
js
sub
cld
out
repnz
ss
push
mov
sub
mov
jne
pop
das
insb
scas
adc
cmp
jl
mov
les
bound
pop
cmp
mov
xchg
cmp
gs
out
cli
int
mov
pop
add
mov
mov
sahf
jecxz
xchg
test
leave
out
lret
inc
add
data16
xor
gs
frstor
aas
mov
inc
loope
sbb
mov
lret
inc
std
ljmp
stc
and
pop
flds
or
pusha
ret
mov
ds
sbb
jno
faddp
push
sub
in
movsb
popf
push
push
iret
test
loope
add
adc
outsl
ljmp
inc
jns
in
mov
ret
pusha
hlt
cmp
div
and
test
cmpl
cmp
jnp
and
das
mov
sti
mov
jae
inc
cli
xchg
or
in
sbb
jns
hlt
outsl
pop
pop
xlat
lahf
insb
xor
clc
dec
popa
imul
les
and
setle
sti
stc
dec
jo
xchg
mov
mov
stc
cmpsl
neg
lods
cld
andb
aad
cs
cmc
xchg
sub
fdivp
ret
mov
xchg
jmp
jo
lret
pop
addr16
pop
push
mov
iret
cmc
push
cmp
movsb
adc
and
push
xchg
sahf
ja
scas
xchg
jle
into
cmp
nop
out
mov
jp
movsl
loop
pop
push
push
rorl
mov
cmc
test
scas
aas
add
mov
sbb
jle
xchg
inc
inc
jmp
mov
xchg
cmp
inc
xchg
jmp
mov
mov
es
jae
addr16
ss
test
ficoms
pop
jl
mov
dec
xchg
call
sahf
mov
inc
and
or
mov
mov
xchg
sti
sub
sti
pop
add
pushf
jl
dec
jl
adc
mov
inc
ja
push
inc
xchg
cmc
lret
mov
lcall
mov
xchg
xchg
xor
inc
cmpsb
popa
cmp
cs
pop
stos
pop
pusha
push
test
mov
pusha
je
cmp
push
ret
test
shlb
dec
jbe
mov
insl
stos
mov
enter
mov
pop
jbe
jg
mov
movsl
fldl
imul
push
mov
add
mov
ror
pop
popf
sub
sub
lahf
jno
xor
push
imul
in
mov
movsl
cmp
cmp
push
sbb
test
sbb
push
mov
repnz
sbb
push
inc
jne
mov
dec
outsl
ljmp
ljmp
mov
sub
xorl
pop
push
mov
mov
mov
data16
push
sbb
outsb
mov
test
add
jns
mov
rcrb
adc
enter
mov
ret
std
sub
cmpl
mov
leave
dec
mov
jae
mov
jbe
mov
fs
dec
sub
mov
xchg
pop
sbb
movsl
mov
dec
pop
clc
xchg
add
xlat
out
mull
xor
fdivr
jle
clc
dec
jns
std
pop
push
mov
pop
cmp
jecxz
clc
jmp
pop
mov
mov
decb
test
and
sahf
popa
mov
popa
leave
iret
subb
mov
dec
xchg
mov
popa
notl
dec
push
in
into
push
inc
ss
stos
sbb
xorb
hlt
xor
pop
outsl
les
ljmp
add
leave
add
cmp
lahf
clc
shl
add
lret
cmp
ljmp
mul
imul
lret
aas
pop
pop
dec
es
mov
dec
jb
cltd
jg
int3
dec
bound
add
in
dec
repnz
jmp
push
mov
adc
xorl
or
popa
xor
mov
cli
xchg
xchg
xlat
jp
and
mov
adc
stc
lds
ljmp
jmp
fisttps
or
mov
int
out
in
mov
dec
sub
inc
dec
pop
cs
jecxz
pop
scas
shll
call
xchg
add
cmp
sbb
jp
pop
movsl
das
rcl
jae
dec
aaa
sbb
sbb
in
pop
mov
jb
sub
out
in
aaa
subl
fcmovne
cltd
jne
loopne
decb
out
jns
mov
test
mov
adc
mov
xchg
lock
inc
xchg
xchg
insb
pusha
ljmp
mov
mov
popa
jle
aaa
inc
lock
mov
sbb
sbb
dec
mov
inc
add
fistpl
aad
jp
aaa
sub
ret
push
adc
popa
lahf
mov
mov
mov
gs
mov
aaa
xchg
sub
arpl
fildll
xchg
add
outsl
add
lret
lret
sub
test
mov
xchg
jp
loope
adc
mov
repnz
ret
jnp
mov
repnz
jg
mov
call
loop
sub
push
adc
fildll
insb
lcall
push
sbb
and
xorb
lahf
dec
xorb
mov
stos
jbe
movsb
out
adc
adc
int3
or
stos
sub
lea
jecxz
push
dec
mov
mov
popf
out
fs
and
mov
sahf
movsl
push
mov
mov
xor
adc
xchg
jle,pt
sub
inc
xor
out
shlb
xchg
add
ficompl
cmp
mov
xchg
orl
in
push
xor
or
in
cmc
scas
inc
jmp
pusha
cmp
inc
inc
into
mov
adc
mov
movsb
xor
jmp
sbb
ror
inc
and
jae
jecxz
std
lahf
adc
pop
pop
adcb
ret
test
out
inc
sub
and
jo
js
cmp
fidivl
mov
xchg
inc
das
mov
mulb
mov
xchg
lahf
xchg
daa
movsl
jle
daa
add
jns
inc
clc
rol
sbb
pushf
sub
test
add
pop
jno
sbbb
xor
mov
fidivl
jae,pt
jb
and
mov
pop
or
sub
sahf
dec
dec
roll
sub
mov
mov
push
add
dec
or
mov
and
sbb
popa
mov
test
iret
mov
ljmp
dec
jb
jp
mov
cmp
notb
mov
dec
inc
and
mov
inc
pop
dec
subl
add
xor
pushf
inc
cmp
stos
in
popa
xor
sbb
inc
xchg
dec
insb
stos
push
dec
jo
popa
fsts
mov
sub
mov
mov
into
lea
call
jge
es
mov
mov
pop
in
jb
outsb
gs
jp
lcall
push
lods
fcompl
enter
adc
inc
and
fldenv
cmp
jnp
jge
shrl
adc
lods
pushf
lret
xlat
sti
dec
addr16
stos
mov
out
leave
jl
pop
lret
jmp
dec
mov
dec
xchg
imul
add
sub
mov
sub
push
fidivrl
cmp
sub
jne
sbb
je
cli
lcall
push
jp
pop
jecxz
movsb
arpl
inc
sub
sub
mov
dec
inc
dec
in
push
mov
push
inc
mov
pop
shlb
lods
xchg
inc
lret
jp
adc
loope
add
ljmp
shr
lods
in
push
pop
ljmp
aad
xlat
mov
pushf
cmc
sub
push
das
hlt
add
test
rcrb
jmp
popa
xchg
cmp
cs
inc
js
ds
loope
scas
loope
in
lock
lock
fdivr
xor
movsl
daa
sub
inc
pushf
add
and
and
in
lods
add
mov
sbb
add
cmp
sub
enter
lds
sub
inc
mov
add
repnz
dec
dec
xor
clc
xchg
mov
addl
shlb
dec
aam
fcoml
nop
gs
shrb
inc
loope
push
pushf
fsubrs
and
push
fnsave
pop
mov
cmp
push
lahf
out
xlat
cs
mov
into
and
push
ds
popf
repz
les
fwait
lcall
aas
sub
inc
lods
outsl
clc
or
in
inc
test
jae
div
mov
xchg
pop
std
and
sbb
in
popf
ffreep
xorb
sbb
sti
push
jp
scas
xchg
dec
std
mov
xlat
adc
inc
loopne
nop
incl
test
outsb
pop
fnstsw
mov
sarb
daa
mov
js
mov
dec
sbb
dec
movsb
mov
sub
in
mov
outsl
xchg
sub
inc
mov
cmpsb
pop
cmp
dec
rorb
into
add
sub
pushf
or
loope
cmp
xor
xor
xorb
sbb
sub
lods
pop
and
add
dec
cltd
jle
or
out
lds
shrl
ret
lret
pop
insl
adc
push
mov
das
test
fs
aad
dec
addl
je
pop
in
push
fstpt
push
cltd
xchg
mov
mov
les
cwtl
pop
test
pop
cltd
push
ljmp
sbb
inc
push
pop
cmp
lds
in
call
ljmp
xlat
lods
push
push
insl
push
mov
cmp
shlb
inc
addr16
imul
push
jp
xchg
clc
loope
stos
stos
je
call
icebp
dec
pop
inc
pop
cs
test
and
mov
push
insl
inc
orl
mov
push
sub
mov
xlat
pop
adc
cmp
pop
lret
cmpsb
cmc
push
out
shrl
jbe
pop
mov
jns
pop
lods
mov
nop
add
mov
add
in
push
les
mov
fsubrs
mov
ljmp
test
outsb
inc
scas
sub
out
dec
xor
insb
sub
shrb
mov
daa
or
insb
inc
sub
mov
shll
mov
int3
jecxz
cltd
out
dec
popa
imul
popa
add
mov
inc
into
add
dec
add
repnz
jae
lret
out
daa
xor
sub
cmp
andb
stc
inc
mov
cmp
dec
clc
jmp
sbb
fs
sub
mov
popf
adc
out
jo
mov
sub
roll
sub
stos
jl
in
jb
mov
les
cmp
rcrb
mov
jne
negb
and
imul
sbbb
aas
sub
mov
xor
jmp
mov
mov
lea
ret
sub
jb
sbb
aas
add
push
dec
mov
mov
jge
jle
lcall
inc
cld
jl
and
fs
arpl
jbe
movsb
push
mov
repnz
leave
pop
movsb
add
das
mov
stc
cmpsl
jnp
rorb
in
inc
cmpxchg
inc
dec
mov
push
mov
dec
out
jno
jge
fcompl
lods
dec
xor
loop
cmpsl
or
cmp
or
movsl
hlt
pop
lds
nop
xchg
divb
gs
push
jecxz
jb
inc
aam
mov
xchg
jmp
mov
or
ret
lds
xor
adc
pop
daa
pop
xor
push
fstps
pop
sub
mov
inc
pop
loop
cmp
jge
aad
mov
mov
addr16
mov
xchg
mov
ss
push
dec
or
push
cltd
xchg
push
sbb
pop
cmp
das
inc
cli
loope
jle
mov
iret
sbb
out
and
mov
and
in
mov
fsubrs
xor
dec
ss
pop
stos
imul
test
push
mov
mov
out
lret
dec
testb
imul
add
movsb
cltd
sbb
inc
pop
jmp
mov
into
sbb
pop
sarb
adc
jae
out
cwtl
jno
rcr
outsb
outsb
loop
jns
aam
je
call
jle
loope
sub
push
lret
add
bound
sbb
fnsave
pop
jnp
out
dec
mov
pop
andl
in
dec
bound
jns
lods
xlat
repz
lods
insl
push
pop
insb
arpl
jb
loopne
jp
loope
sbb
xor
xor
test
sahf
inc
xchg
dec
fwait
cmp
adcl
and
aad
push
mov
scas
and
push
mov
pop
call
lds
push
jno
aam
out
mov
dec
sub
imul
out
mov
fcompl
sbb
cli
test
in
mov
cmp
add
push
iret
rolb
push
mov
sub
cwtl
adc
pop
adc
mov
lods
jns
pop
jge
xchg
sbb
add
or
xor
fcompl
ss
aas
inc
cmp
and
not
and
jae
sbb
cmpsl
mov
adc
xlat
cmp
pop
test
push
insb
push
aas
jle
insb
jle
adc
push
inc
cltd
mov
mov
dec
add
imul
xchg
add
lret
rolb
roll
add
ja
cmp
inc
mov
dec
mov
dec
xor
sbb
or
sub
popa
mov
div
adc
rclb
ret
mulb
stos
mov
leave
dec
inc
push
push
pop
xchg
testb
adc
xchg
or
sbbl
lret
mov
fincstp
aaa
xchg
iret
out
mov
mov
pushf
mov
push
add
xor
in
mov
xor
je
dec
cmpsl
pop
cmpsl
aaa
sub
iret
jne
dec
mov
mov
mov
pop
xchg
mov
aas
in
sub
or
cli
and
push
mov
lcall
repnz
inc
mov
popa
xchg
sub
jb
xchg
sub
scas
fbld
mov
jge
xchg
push
repnz
ret
in
nop
cltd
dec
repnz
cmp
dec
mov
adc
push
fwait
and
push
lcall
cltd
dec
imul
int3
or
jo
xchg
xchg
push
adc
push
jae
cltd
push
mov
sar
sub
repnz
mov
icebp
test
adc
test
adc
lods
push
call
ror
addb
mov
and
or
ret
fildll
out
jbe
pop
imul
xchg
mov
sub
inc
pushf
mov
mov
lods
add
sub
jmp
xchg
adc
push
mov
pop
dec
ja
sahf
das
adc
and
dec
repnz
ss
ja
int
adc
repz
pusha
pop
cmp
pop
xor
mov
and
out
dec
dec
mov
cmpsl
fwait
scas
jbe
das
mov
cmp
jbe
mov
das
cs
inc
pop
xor
push
xor
adc
mov
fldcw
lcall
negl
cmpl
sub
sub
mov
adc
nop
fildl
mov
mov
mov
lods
xor
jg
rorb
mov
push
xchg
xchg
lods
fpatan
ret
ss
mov
push
adc
aaa
jl
rcl
jl
int
clc
cltd
ja
lods
repnz
cmpsb
pop
jne
loop
mov
ljmp
je
aaa
pop
sbbl
mov
cli
cmp
mov
mov
movsb
fisttpl
loop
cmp
mov
popf
aam
fs
and
jmp
stos
and
adc
mov
lret
add
clc
adc
mov
push
jl
dec
test
inc
test
loopne
pop
jl
dec
pop
lea
mov
loopne
popf
push
int
fldcw
jmp
xor
aas
mov
push
push
pop
dec
mov
inc
xchg
in
stos
cmp
test
mov
les
pop
add
pop
mov
mov
mov
cmp
xchg
inc
lods
ret
or
dec
mov
fcoms
inc
loopne
cmp
or
adc
jne
pusha
mov
lock
xor
es
popa
jmp
xchg
fmull
xchg
jns
mov
leave
mov
mov
xchg
jge
fwait
cmp
in
cltd
add
lock
mov
in
mov
push
aas
and
mov
test
icebp
push
jecxz
push
and
sbb
iret
push
fidivrl
or
shrb
dec
sbb
and
inc
xchg
lock
lds
push
in
push
iret
je
ljmp
push
xchg
aam
sbb
mov
pop
loope
outsb
fstp
loopne
push
movsb
outsl
adc
jbe
inc
push
jae
add
dec
mov
les
cmp
movsb
xor
push
xchg
je
bound
ret
decb
aaa
xchg
in
aas
mov
dec
loopne
sar
and
inc
jmp
push
je
cmpsb
cmp
arpl
lods
and
pop
lret
mov
lds
insb
xchg
sbbl
int
adc
leave
in
and
cmp
mov
loop
push
cmc
pop
sbb
cld
lea
out
movsl
mov
pxor
add
shll
pop
mov
mov
ret
sbb
push
pop
lea
dec
xor
sbb
fidivl
cmpb
dec
push
push
mov
lret
loopne
jnp
ret
xchg
and
mov
jge
mov
repz
ret
mov
mov
cmp
jl
fldenv
dec
xchg
mov
xor
loop
stc
sbb
std
jno
mull
outsb
lret
int
clc
fndisi(8087
mov
popa
pop
mov
add
stc
adc
outsl
push
shr
rorl
fisttpll
cli
movsl
or
dec
mov
lcall
andb
inc
clc
lock
sbb
jecxz
mov
popa
adc
cmp
push
xchg
inc
loope
mov
mov
pop
xchg
rorb
in
or
stos
int
pushf
dec
outsb
add
and
in
adc
sbb
push
scas
loopne
or
xchg
pop
call
cmp
xlat
and
adc
dec
lea
out
dec
mov
push
inc
jae
push
jno
test
icebp
mov
xchg
and
mov
stos
or
jmp
and
xchg
and
pop
mov
iret
push
sub
xor
pop
outsb
movl
lock
mov
rcrb
imul
fstpt
lret
inc
lret
push
cmp
jg
fstps
test
cmpps
push
imul
loopne
loopne
mov
sub
pop
ljmp
cltd
or
push
das
movsb
inc
sbb
fdivrl
pop
mov
push
mov
ret
fs
mov
pop
das
push
adc
dec
fbld
test
cmc
sahf
cmp
aas
sbb
adcb
push
test
fidivl
adc
mov
mov
cmc
cmp
push
or
call
cmp
movsb
and
adc
iret
ret
pop
mov
pop
cmpsl
xchg
jne
cmpsb
cmpsl
jmp
cli
and
jmp
pop
ficomps
push
mov
loopne
and
andb
xchg
daa
xchg
sti
fsubs
out
xchg
shlb
js
arpl
jbe
xchg
ret
clc
arpl
aam
push
in
jmp
cwtl
ljmp
push
xchg
andb
pop
pusha
lret
imul
or
cmp
fcom
dec
inc
inc
and
pop
and
scas
jnp
xchg
in
les
jle
int
inc
sbb
pop
outsl
xorb
or
xor
lds
jl
fbstp
add
xor
mov
ds
cltd
ret
lea
mov
loopne
dec
movsb
xor
pop
test
add
imul
mov
ret
outsb
stos
inc
aas
mov
clc
mov
xlat
test
inc
lods
pop
insb
lret
cmpsl
loopne
clc
fadd
in
mov
mov
push
xchg
std
inc
stos
mov
out
ret
inc
mov
sbb
rcrl
sbb
lds
adc
mov
test
add
xor
jge
movsl
paddusw
cmp
dec
leave
pop
mov
pop
in
out
rorb
mov
or
add
mov
mov
pop
mov
sub
push
mov
xchg
jno
push
fidivl
and
xor
xor
add
out
mov
cmp
mov
bound
rcrb
cltd
loope
cmpsb
lods
fdivr
add
mov
int
add
mov
iret
pop
or
jnp
add
stos
and
stc
jg
pop
mov
rol
cmc
movsb
outsl
das
and
jbe
fidivl
sub
jo
push
call
mov
cmpb
jbe
loope
cmpb
jnp
xor
inc
fadds
add
or
dec
int3
sbb
mov
jbe
mov
bsf
stos
adc
mov
iret
scas
lock
std
ja
push
out
mov
mov
leave
into
int3
mov
int3
sub
cmc
push
mov
jno
or
scas
stc
aam
lods
roll
push
jge
jl
fists
sbb
mov
mov
dec
inc
fs
out
sbb
cwtl
lea
pop
pushf
jle
push
mov
sbb
aam
or
cmpsl
push
sbb
lcall
and
jle
lea
jnp
pop
sub
dec
mov
fisubrs
cmp
gs
push
dec
jno
mov
mov
in
pop
xor
push
rcrl
sub
cmpsl
push
pop
pop
jl
dec
xchg
cmpsl
pushf
pop
push
daa
test
loope
int3
sbb
test
cmp
stc
aam
sarb
lret
out
pop
scas
add
sti
test
cld
or
jle
mov
in
insl
pop
dec
sub
aaa
outsb
loopne
movsb
xchg
ret
rorb
dec
lock
les
push
inc
xlat
ret
iret
ret
mov
and
in
std
pop
fiadds
mov
cmp
and
test
and
dec
dec
pusha
mov
pop
adc
push
jne
lods
mov
mov
subl
pusha
ljmp
out
lret
ja
lcall
cmc
rcll
clc
jp
stos
xor
sarb
mov
lods
mov
add
data16
pushf
inc
aad
xchg
push
je
call
nop
scas
add
std
ljmp
imul
add
fldenv
in
push
cmp
data16
daa
insl
pusha
imul
fidivrs
ljmp
outsb
mov
adc
out
xor
andl
int3
mulb
cmp
movsl
pop
popf
xchg
cmpsl
adc
pop
addb
lea
and
add
insl
cmp
movsb
or
lret
loopne
sahf
ret
sub
pop
lret
push
ror
sahf
or
in
add
xchg
xchg
stos
repnz
mov
mov
push
mov
push
inc
xchg
pop
inc
scas
inc
or
movsl
mov
andb
xchg
sub
push
pop
sbbb
jbe
aaa
lret
xchg
int3
mov
sub
gs
adc
mov
lret
lahf
lahf
scas
lahf
sbb
das
jno
sbb
cmp
popa
leave
mov
sbbl
push
aas
aam
inc
mov
or
sahf
xor
pop
clc
or
addr16
bound
es
cli
jo
add
dec
mov
or
inc
cmc
ds
and
inc
das
loop
and
ja
cmpsl
xchg
movsb
mov
xchg
mov
icebp
ds
hlt
mov
nop
adc
out
and
cmp
aaa
adc
clc
jle
jnp
loop
mov
cltd
pop
add
push
cmp
lods
and
les
pop
dec
mov
sbb
popf
pop
sub
xchg
out
in
lds
mov
fcomps
das
mov
leave
test
jle
mov
ja
jb
popf
jne
das
mov
push
push
pop
aas
cmp
xchg
cmpsb
outsl
mov
js
mov
imul
outsb
push
lcall
or
sub
xchg
push
sbb
mov
mov
xor
out
test
lret
dec
push
inc
mov
xor
sar
ja
ds
ret
mov
mov
sti
cmp
mov
pushw
cmc
xor
lods
cmp
ret
xlat
mov
in
test
sub
push
jbe
push
push
mov
mov
stc
lods
fidivl
jl
jb
out
add
mov
and
push
ret
jo
sub
lret
cmpsb
cmpsl
cld
mov
cld
sub
out
rorl
int3
lret
ret
and
orl
add
hlt
dec
sub
jmp
fdivr
jp
aam
and
sub
jne
arpl
add
and
fnstsw
fnstenv
pop
jnp
aas
jno
mov
mov
mov
hlt
inc
loop
int
test
dec
imulb
cmpsb
add
sbb
jge
rol
aaa
leave
cmpsl
push
inc
insl
and
sbb
inc
test
sub
xchg
jns
inc
and
inc
rcll
jb
mov
je
lods
cmp
iret
lea
jb
inc
add
dec
mov
or
js
mov
fwait
sti
in
sub
xor
jno
adc
pop
dec
dec
stc
sub
aad
mov
punpcklbw
test
pop
xchg
out
mov
ja
pop
push
push
imul
jmp
mov
outsl
inc
mov
cmpsl
outsb
and
imul
clc
fstps
cli
daa
fiadds
mov
call
inc
xchg
stos
mov
ljmp
rcr
or
dec
outsl
fsubp
adc
std
outsb
aaa
dec
rorl
inc
mov
cmp
gs
pushf
cld
shll
sbb
lods
cmc
ja
cmp
pop
sahf
jo
arpl
repnz
mov
cltd
inc
inc
loopne
imul
stc
dec
leave
divb
sbbl
jmp
jle
cmp
pop
mov
mov
ret
push
loop
sahf
out
stos
jge
and
inc
loopne
mov
xchg
fidivrl
lods
add
jmp
mov
sbb
xchg
jb
movsl
sbb
dec
outsl
repnz
push
clc
mov
dec
lcall
scas
add
inc
add
test
out
add
call
or
xor
mov
jecxz
ret
push
xor
cmp
dec
add
stos
cmpsb
in
into
push
pop
mov
sbb
je
and
das
iret
jl
xchg
dec
rcrl
and
mov
jns
push
push
lret
mov
scas
mov
sbb
sub
loope
or
xor
jp
arpl
rcrl
xchg
or
pop
cmpsl
mov
loopne
aas
into
sahf
movsb
xchg
xchg
xchg
inc
xchg
lret
dec
out
jne
loop
mov
mov
call
adc
xor
dec
push
in
repnz
int
ret
cmp
je
std
dec
popa
adc
in
jmp
xor
stos
lahf
icebp
mov
sub
adcb
add
mov
jecxz
scas
mov
fs
mov
push
dec
cmpl
lods
loop
sbb
jne
mov
and
sahf
rorb
shll
and
imul
mov
insb
movsl
roll
das
stos
mov
add
fisubs
mov
cmp
xchg
mov
inc
jno
push
arpl
push
cld
jge
xchg
sub
cld
sti
jns
mov
mov
push
xchg
mov
les
mov
cld
in
dec
add
mov
test
sub
stos
cmp
xor
mov
pop
pop
insl
out
jb
sbb
sub
pop
dec
and
aaa
jb
xchg
push
in
fidivrs
shll
or
jmp
add
cli
xchg
lods
sahf
sahf
jge
sbb
pusha
inc
xlat
rorl
daa
dec
xchg
les
jp
test
insl
aam
fs
insl
sub
std
and
cmp
je
bound
or
adc
xchg
or
pop
imul
pop
jecxz
test
mov
leave
lds
mov
dec
pop
cmp
mov
fcmovu
fcomi
mov
int3
je
or
pop
pop
ds
inc
gs
lcall
ret
test
push
jnp
xor
int
cmp
in
xchg
ss
test
in
fcomps
or
icebp
mov
cmp
or
fidivrs
ja
jno
jns
and
push
ds
dec
mov
cmc
dec
pop
stos
scas
loopne
das
movsb
dec
lret
lret
push
in
xor
sbb
ljmp
pop
and
shlb
push
popa
mov
fistl
lret
mov
jne
pusha
movsb
cmpsb
sub
jo
cmp
mov
icebp
fnsave
sahf
cmp
addr16
popf
cmpsb
pop
pusha
jp
and
sarb
pop
aas
mov
or
mov
adc
mov
bound
decl
in
mov
push
stc
test
push
div
jmp
pop
mov
rclb
xlat
fadds
pop
lods
test
in
std
sub
xchg
idivl
in
stos
xor
xchg
pop
sub
inc
and
scas
jae
xlat
pop
and
fsts
addr16
test
add
pop
sahf
adc
sbb
xchg
popa
inc
push
repnz
adc
or
test
xor
out
scas
fs
sbb
and
mov
fmuls
sub
fistps
xor
push
rcr
sbb
sbb
dec
mulb
dec
and
or
fwait
pushf
inc
pusha
cmc
shlb
in
jg
lahf
sqrtps
push
lret
unpcklps
xchg
xchg
push
pusha
dec
dec
mov
ds
adc
popa
xchg
cmp
sub
sub
js
jbe
loopne
stc
mov
das
popf
clc
mov
lea
lcall
inc
jmp
and
daa
call
mov
aam
sub
fimull
out
popf
mov
hlt
mov
out
sub
dec
adc
scas
xchg
clc
or
sub
mov
sbb
clc
mov
loopne
mov
add
scas
out
inc
and
out
pop
mov
fcompl
and
mov
and
jl
loop
mov
push
les
lea
cmp
clc
sub
pop
push
dec
imul
rclb
dec
sti
loop
pop
lods
inc
pop
lcall
sub
jae
daa
cmpsb
or
test
jae
mov
cmpsb
shrb
loopne
cmpsb
nop
inc
insl
stos
lea
loop
sub
testb
mov
cmpsb
cmp
dec
jbe
mov
sbb
outsb
mov
rolb
cmpsl
dec
cmp
and
ret
ljmp
xchg
and
rorb
or
mov
repnz
jp
pushf
aad
push
or
int3
push
jp
std
in
ret
sti
push
out
out
rcrl
out
or
mov
dec
jmp
movsb
js
outsl
pop
repz
addr16
and
mov
add
inc
int
and
jnp
fcmovnb
push
jno
int
xchg
pop
add
clc
iret
push
mov
inc
js
jle
or
addl
lcall
mov
jmp
adcl
call
lcall
sarb
movsl
data16
scas
aaa
jg
or
pop
rcrl
rcl
jbe
rorl
in
mov
lods
jmp
aam
inc
addr16
lods
mov
jle
adc
mov
cmc
jne
xor
imul
ret
sub
daa
mov
mov
je
pop
cmp
cmpsl
mov
rolb
lods
mov
dec
lcall
in
loop
test
or
mov
test
leave
out
jp
or
and
shl
pop
add
rorb
lahf
movb
mov
out
push
pop
mov
jp
stos
cmpsl
or
lret
scas
outsl
ljmp
sbb
add
sarb
mov
jne
inc
js
ds
outsb
pushf
outsb
roll
into
jnp
mov
jl
cmp
push
mov
push
fmul
dec
adc
add
mov
pusha
pop
cmp
int
jnp
jle
testl
mov
push
subb
or
pop
jb
add
or
jbe
mov
pop
stos
xchg
aam
jns
rep
pushf
lea
call
or
cmp
adc
pop
jns
add
or
mov
mov
jo
iret
and
pusha
stos
sbb
inc
pushf
jbe
insl
inc
cli
sbb
adc
sahf
pop
pop
xor
loope
bnd
and
scas
jle
std
pop
xor
and
in
mov
aas
std
flds
sub
adc
and
outsl
push
xchg
sbb
and
jl
adc
cmp
imul
xchg
xchg
lret
aad
outsb
sub
inc
movsb
repnz
push
out
pop
ret
xchg
or
xor
push
dec
negb
jg
fwait
inc
movsb
mov
loopne
sbb
sbb
gs
sbb
fstpt
xchg
xor
pop
add
mov
inc
mov
outsb
mov
pop
mov
arpl
arpl
mov
fwait
jnp
into
push
inc
sub
fstps
fildl
mov
mov
mov
ret
push
test
vpmaxsb
pushf
push
fnsave
dec
sub
sub
stos
insb
mov
insb
mov
push
repz
mov
stc
nop
int
mov
mov
cli
pop
orl
mov
cli
out
add
cmp
inc
sbb
cwtl
sub
jecxz
cmp
mov
xor
push
pop
or
inc
clc
push
ficompl
jne
mov
vmovsd
imul
imul
mov
mov
push
aaa
pop
add
pushf
scas
lret
dec
shll
jge
pop
add
mov
jecxz
call
dec
add
sarl
jp
add
stos
fadds
add
cmp
test
popa
mov
in
repz
sbb
xor
test
or
xor
mov
nop
popf
add
loope
rorl
gs
shlb
push
insl
pop
cmpsl
popa
or
arpl
aas
push
jle
aas
sahf
mov
cmp
pop
into
jns
cmp
mov
aad
inc
jno
mov
add
sub
dec
imul
outsl
movsb
push
xlat
lahf
gs
dec
push
addl
clc
sbbl
mov
or
inc
jmp
leave
mov
adc
mov
in
test
out
and
lods
cmpsl
adc
insl
cmpsl
jp
lock
push
movsl
xor
movsb
popa
push
fidivrl
inc
and
mov
jp
xchg
ret
leave
popf
jle
add
fnsave
jae
test
add
pop
popa
mov
dec
in
data16
mov
test
push
sahf
cmc
mov
jo
repz
xchg
cmpsl
js
test
sub
adc
lea
mov
add
fcomps
mov
pushf
lret
dec
outsl
sub
or
rorl
fwait
lea
mov
pushf
stc
cmp
out
push
ficomps
pop
mov
push
xchg
ret
dec
jl
xor
cmp
aad
movl
fsubl
mov
mov
cltd
mov
xchg
into
adc
lea
push
adc
popa
pop
xchg
mov
sub
decb
daa
inc
insl
loope
xorl
insl
inc
push
xor
cmc
mov
into
les
and
sbb
into
mov
incb
ss
stos
insl
outsb
xor
or
inc
hlt
inc
daa
push
fdivr
adc
dec
daa
adc
add
stos
aas
mov
hlt
ficoms
fsave
xor
movsb
popa
sti
div
inc
xchg
dec
add
mov
add
push
pop
imul
pop
in
aaa
mov
enter
push
lret
aaa
push
jg
and
into
mov
or
dec
stos
mov
into
pop
jno
dec
and
test
jle
inc
sub
push
xor
mov
or
int
xor
jns
sub
nop
mov
into
out
lret
int3
pop
shrl
mov
and
xor
mov
dec
push
ret
shr
inc
lods
cld
xchg
cltd
add
dec
outsl
xchg
cmpsl
dec
in
aas
test
add
jmp
repnz
mov
xchg
rclb
pop
hlt
mov
mov
dec
mov
push
mov
imul
dec
or
jne
lock
inc
rclb
cmp
pop
push
jle
loope
addr16
out
fstl
std
inc
xor
rol
cli
pusha
mov
lds
cmp
dec
enter
pop
cltd
test
int
call
pop
add
bound
je
iret
adc
ljmp
aas
aad
xlat
cli
loop
inc
repz
push
sbb
in
cli
sub
fidivs
mov
push
gs
xchg
pushl
je
xchg
xchg
sysret
sbb
mov
dec
xchg
sub
jno
dec
pushf
push
or
into
inc
xchg
icebp
or
mov
mov
shr
sahf
test
mov
xor
scas
lret
dec
pop
jl
lock
insl
mov
mov
or
pop
and
mov
imul
inc
and
add
mov
jle
jno
rorl
push
cld
aam
stos
jmp
je
in
das
test
lret
cmpsl
adc
movsl
dec
enter
pusha
cwtl
ljmp
ja
inc
shr
stc
push
test
jg
dec
jmp
mov
jmp
push
add
mov
iret
clc
jne
mov
cmp
or
aam
add
xor
jnp
int3
push
adc
shl
mov
xchg
xchg
cmp
push
cmp
addr16
and
in
std
inc
push
jnp
sub
mov
mov
inc
jmp
inc
aad
imul
lds
xchg
aaa
lea
jo
jle
cmp
mov
push
mov
clc
push
pop
je
movsb
mov
add
dec
pop
xchg
xor
pop
ja
repz
inc
adc
ret
push
pop
gs
xor
mov
inc
mov
out
bound
sahf
insl
lahf
sbb
jg
mov
add
mov
cmp
sbbl
sub
faddl
fucomip
dec
lods
jge
fnstenv
cld
call
std
lds
jne
or
push
xor
lods
cmp
mov
enter
xor
pop
push
jge
jb
inc
jae
loop
scas
popf
cmp
in
jp
mov
jecxz
pop
xchg
scas
jecxz
gs
aas
mov
or
stos
mov
mov
les
jo
loope
nop
lea
test
pop
mov
and
xchg
jbe
jge
cmp
scas
jae
sub
mov
cmpsl
lods
repnz
sub
xchg
mov
jb
movsl
popa
push
sarb
cmp
push
mov
cmp
sub
in
and
lea
dec
int
push
xchg
testl
imul
cmp
fstps
xor
hlt
push
cld
sub
in
lret
bnd
mov
jb
ja
or
andb
gs
sbb
movsl
cmp
mov
jp
test
mov
jo
inc
arpl
std
mov
push
sub
cs
jo
in
testb
sarl
comiss
mov
mov
cmp
sub
xorl
and
inc
popl
enter
or
xor
jmp
insl
mov
aas
sbb
pop
out
add
nop
stos
cmp
jp
xor
jns
mov
pop
nop
icebp
xor
mov
dec
mov
std
pop
mov
mov
shll
push
shrb
out
sahf
leave
jecxz
rcrl
push
cmp
mov
push
or
enter
xor
pop
cmp
adc
sbb
insl
mov
mov
mov
call
mulb
fdivrl
mov
adc
sub
or
fmul
cmpsl
pop
pop
add
mov
mov
je
sahf
or
or
mov
mulb
push
mov
adc
inc
mov
mov
jg
dec
insb
addb
cmp
shrb
pop
adc
inc
lock
outsb
cmp
inc
mov
arpl
dec
rcll
test
fcoml
sbb
inc
jbe
xor
imul
xor
xchg
test
bound
popf
movsb
xchg
psubsb
lock
inc
or
scas
mov
out
inc
or
insl
and
jl
stos
gs
mov
icebp
mov
cs
and
cmp
pop
inc
std
dec
mov
and
or
rcll
daa
inc
mov
adc
jbe
mov
add
loopne
mov
and
xchg
popa
and
fwait
aas
dec
stos
mov
test
cmp
and
pop
cltd
mov
clc
cld
insl
enter
fnstenv
int3
xor
lods
sub
ss
in
fcoml
or
aad
push
push
sub
inc
fildl
add
testl
cmpsb
sub
fisubrs
pop
fdivrp
inc
lret
pop
mov
iret
shll
lcall
outsb
xor
rolb
cwtl
ficoml
std
xor
outsb
sbb
pop
aas
lock
fcmovbe
movsl
cmpsl
fs
mov
or
pop
insb
popa
dec
mov
mov
mov
pushf
fwait
mov
pop
stos
ficoml
ret
or
mov
gs
insl
jmp
add
fidivrs
das
scas
imul
mov
push
btr
jno
icebp
xor
inc
test
sbb
ljmp
cmc
pop
sub
movsb
pop
inc
addr16
pop
xor
into
xchg
test
dec
lret
or
cmc
and
push
or
daa
cmpsl
insl
or
mov
addr16
mov
xorb
or
aam
mov
jo
in
repz
stc
ret
popf
inc
cmpsb
pop
cmp
xor
imull
arpl
fisttps
outsb
test
xchg
jge
int
stos
sbb
and
push
jp
or
mov
jmp
sub
out
push
dec
repnz
push
enter
or
je
mov
into
cltd
cld
sub
adc
repz
cli
cmp
cmpsl
movl
std
subl
ret
fucomi
cmp
sub
out
push
sub
sbb
repnz
outsl
shll
jbe
inc
int
mov
cmc
sbb
jae
cmc
mov
sbbl
inc
fmull
jmp
in
cmp
mov
add
fwait
jmp
clc
cmpb
iret
test
pop
xchg
mov
push
inc
flds
inc
and
xchg
mov
fsubl
imul
jne
pushf
fsubs
cmpsb
adc
movsl
arpl
add
movsb
stos
or
xchg
mov
popa
std
mov
push
mov
shrl
push
or
int
mov
dec
ret
cs
inc
adc
lock
test
dec
imul
xchg
icebp
sti
fdivs
mov
mov
push
jmp
lahf
testl
shlb
mov
jle
sbb
push
jl
mov
mov
ret
leave
fxam
inc
out
sar
adc
mov
lret
jp
fidivrs
cld
xlat
pusha
ror
push
repnz
pop
jl
mov
xchg
movsb
mov
stos
pusha
out
and
movsl
idivl
std
into
pop
in
imul
sti
loopne
pop
push
les
jbe
pop
mov
cmp
test
fsts
popa
add
lds
lret
xchg
js
aad
xchg
push
lcall
push
sbb
xorl
jns
fs
xchg
push
xchg
and
sbb
sbb
push
rcr
iret
repz
inc
push
cmpsl
pop
mov
push
ret
sub
jp
xchg
mov
dec
xchg
cmp
xor
mov
push
loop
popf
mov
add
int
push
add
rcr
lea
jp
test
fadd
xchg
sub
aad
rcll
mov
int3
push
nop
or
inc
mov
insb
cli
mov
das
fstps
aam
pop
out
or
outsb
lcall
sar
pop
scas
pop
mov
in
sub
imul
loop
xor
xor
cs
cmc
in
stos
xchg
adc
or
pop
ja
aad
push
pop
adc
dec
ljmp
loope
xchg
dec
sbb
xchg
mov
imul
insl
adc
dec
jg
pop
jle
in
mov
adc
js,pt
sti
movsl
ret
pop
arpl
sub
pop
mov
stos
or
and
ds
sahf
pop
sbb
ljmp
in
je
jb
push
adc
pop
mov
shl
add
fcomip
fwait
leave
lds
mov
pushl
loope
mov
cld
xchg
bound
xchg
into
mov
std
ret
pop
scas
mov
jns
rcr
fcoms
lods
jno
or
cli
arpl
dec
sub
repz
and
adc
ds
aas
adc
lret
ret
add
stos
and
pop
out
leave
test
movsb
add
mov
sub
sbb
xchg
sbb
adc
bound
aaa
into
or
pop
jo
pop
cmc
cmp
pop
or
sbb
jle
pop
dec
test
cmp
fisttpll
mov
jno
pop
test
inc
dec
cmpsl
popa
incb
rorb
insb
addr16
icebp
int3
inc
cmovnp
movsb
shrl
pop
aas
cs
icebp
aam
push
shrb
mov
int
flds
imul
arpl
js
enter
movsb
stc
mov
mov
and
subb
mov
mov
stos
nop
lahf
loop
push
or
push
sub
cmpl
scas
push
jo
aad
stc
out
cmp
pusha
pop
mov
in
sub
sahf
push
mov
jge
xchg
hlt
mov
inc
xor
imul
mov
sti
dec
cmpsl
dec
fcomps
adc
push
and
and
fdivr
cmpsb
push
mov
inc
pop
xlat
push
and
sub
and
stc
test
push
mov
loopne
ret
pop
mov
stc
mov
xor
shr
icebp
and
xchg
out
xor
push
sub
mov
inc
jo
loop
fldl
jg
fisubrl
loopne
je
jle
push
fcoms
fxch
pop
push
or
mov
je
push
stc
xor
fadd
xor
mov
lahf
loopne
pop
cld
andl
jle
mov
cs
cld
gs
andb
dec
inc
dec
lods
cmc
lock
fadds
addr16
adc
sti
xor
cmp
pop
adc
mov
inc
adc
clc
xchg
nop
jns
adc
in
fnsave
fcmovnb
mov
daa
int3
call
in
push
int
mov
out
xchg
hlt
add
loope
rcl
cmc
popa
mov
rorb
shlb
fwait
sbb
jae
pushf
sbb
int
sbb
fnstsw
and
clc
fildll
pop
mov
out
mov
ret
shrb
iret
xchg
mov
dec
push
or
adc
mov
dec
cmp
jb
shl
mov
lock
les
sub
jle
in
add
cmpsl
je
xor
push
cmpsl
test
ret
aam
pop
ds
mov
rcrb
ds
push
mov
mov
gs
jl
xlat
adc
xchg
xor
pop
test
xor
mov
sbb
push
jg
adc
xchg
dec
shlb
sbb
or
xchg
push
divl
test
dec
mov
int
clc
xrelease
arpl
add
pusha
js
inc
and
push
repz
rclb
push
ds
repnz
ret
sub
and
enter
dec
and
push
jg
mov
xor
popf
frstor
jno
jecxz
fiaddl
adc
sbb
int
arpl
mov
push
xor
sbb
and
dec
clc
and
jmp
xchg
mov
inc
push
sub
out
inc
cmp
pop
cmpsl
mov
rep
icebp
push
inc
push
push
inc
sbb
sti
sub
sahf
repnz
dec
outsb
fwait
insl
xchg
negl
add
adc
or
mov
test
lcall
xlat
xchg
push
add
dec
mov
xor
aad
mov
adc
stos
and
aaa
lods
lret
or
shrb
cmp
flds
jle
or
ds
xorb
std
xor
push
cmp
dec
pop
inc
adc
jae
stos
shrl
mov
in
mov
pop
addb
js
add
jp
adc
jbe
mov
jns
out
inc
in
lods
inc
cmp
pop
in
and
mov
outsb
add
pusha
in
lea
push
jl
jno
jp
add
xor
and
shl
rcrl
add
lock
in
jmp
push
jl
pusha
mov
dec
cs
sbbb
sbb
pop
rol
mov
push
out
loope
lcall
adc
scas
pop
xchg
sub
pop
push
and
dec
mov
adc
sub
jp
push
push
mov
push
lock
outsb
push
push
test
outsb
ficomps
adc
cwtl
cs
push
mov
pop
add
xchg
ja
or
and
and
stos
and
jecxz
movsl
jle
xor
cmp
ret
add
mov
test
int3
popa
mov
leave
enter
shrl
xchg
cwtl
mov
sti
mov
and
test
jl
sbb
les
out
jne
xchg
aam
mov
xorl
stc
cmp
mov
push
data16
pop
adc
or
fadd
add
xchg
shrl
mov
movsb
addr16
loop
stc
ljmp
sbbb
cmp
mov
popa
xor
das
enter
sbb
sbb
pop
dec
pop
cld
inc
jmp
or
nop
sbb
clc
mov
mov
xchg
jae
fistps
pop
iret
fcompl
pop
push
aaa
or
adc
imul
aad
stos
cmpsl
jp
xchg
push
and
mov
adc
ljmp
xchg
ja
fldenv
jp
jnp
mov
mov
jno
fucomp
out
inc
idivb
ja
dec
push
mov
mov
cmpsl
jns
pop
lcall
push
daa
ljmp
insb
cmp
lcall
lret
and
lea
in
sub
jge
adc
out
push
xchg
and
mov
lea
jae
int3
adc
test
popf
dec
or
dec
jp
aad
mov
clc
cmpsl
cmp
sbb
insb
pop
sti
in
ljmp
pop
jnp
adc
pop
xchg
imul
in
or
loopne
xor
arpl
movsl
and
imul
sub
pop
mov
adc
insb
cmp
movsl
mov
push
push
mov
sub
jbe
or
or
sub
mov
out
addr16
mov
or
dec
jge
fwait
jg
subb
push
repz
test
ret
les
inc
aaa
popl
ret
jne
or
sub
repz
out
pop
and
lods
aaa
mov
pop
push
jmp
push
cld
pop
daa
mov
xchg
js
cmp
pop
inc
jnp
xchg
out
scas
add
xor
data16
clc
out
pop
sahf
adc
or
enter
push
in
adc
jle
mov
jne
decl
jnp
cvtdq2ps
shl
cli
rorl
xchg
or
mov
push
test
popf
pop
loope
inc
lods
rcr
aaa
add
popf
mov
ljmp
fcmove
imul
fnstsw
xorl
test
fisubs
scas
jge
cmp
pop
and
std
ss
pop
xchg
ljmp
shll
pusha
rorl
lods
push
push
pop
mov
nop
or
lahf
mov
repnz
mov
call
add
inc
inc
cli
das
inc
lret
hlt
pushf
and
xchg
add
adc
push
into
sub
icebp
xor
jne
fldl
mov
lret
enter
call
jne
repnz
adc
loope
aaa
lahf
xor
lret
dec
inc
clc
xchg
mov
rcr
sbb
lcall
and
leave
and
mov
cld
sub
jbe
std
loope
ret
cmp
sbb
nop
cmpsb
out
inc
rcl
cwtl
jb
push
imul
or
and
mov
adc
jb
pushf
dec
dec
scas
notl
lcall
mov
push
cwtl
jae
fwait
in
gs
ja
ljmp
cltd
push
push
enter
dec
push
xor
push
arpl
daa
sub
scas
loopne
leave
stos
and
clc
pop
jne
jnp
repz
mov
in
pop
sarl
stos
inc
insl
in
popa
fistl
arpl
mov
mov
lods
lea
sbb
mov
or
outsl
mov
cltd
xchg
xchg
push
lea
pop
pop
cmc
jle
lret
or
xor
jecxz
and
xor
push
call
cmc
int
or
dec
orl
inc
mov
or
mov
jmp
imul
lods
ja
adc
sub
dec
mov
lret
sub
mov
add
js
or
bound
sbbl
jne
cltd
inc
dec
mov
pusha
or
mov
in
mov
push
mov
xor
imul
mov
aad
dec
xchg
aas
mull
shlb
dec
push
xorl
in
orl
lcall
aam
je
sbb
lea
dec
cmc
dec
add
jecxz
cmc
mov
imul
xor
test
sub
mov
jno
adc
clc
ret
xor
out
addr16
fdiv
or
sbb
sbbb
mov
push
xchg
es
fnsave
and
dec
sbb
je
fiadds
arpl
cmp
mov
ja
imul
jle
and
fmul
dec
add
dec
scas
mov
push
pop
jmp
mov
iret
jecxz
push
cmc
sub
addr16
and
xor
bound
into
dec
jl
int3
sahf
das
cmpsb
sub
gs
adc
and
clc
pop
int3
push
adc
aam
mov
pushf
lods
sub
jp
and
adc
cmpsl
jp
je
mov
rcrb
sbb
imulb
pusha
in
sbb
popa
scas
inc
sbb
pushf
call
cpuid
loop
inc
xchg
cld
mov
mov
jge
neg
out
mov
push
mov
sbb
add
mov
push
daa
sar
fsub
int3
xchg
xor
xor
adc
incb
and
scas
cmc
frstor
sahf
mov
sbb
dec
fwait
adc
mov
add
into
pop
mov
cli
xchg
lea
cltd
lods
jg
and
mov
call
int
les
stos
movsl
or
lret
lret
inc
cltd
lods
data16
test
mov
in
lock
lea
jle
ja
dec
out
in
cmp
pop
pusha
js
cmp
out
jae
pop
popa
cmpsl
dec
lea
xor
dec
mov
iret
jmp
fisubrs
inc
sub
push
or
adc
fstpl
sbb
jno
or
mov
xchg
adc
lea
orb
rcl
and
aas
jns
cmp
movb
gs
mov
imul
adc
xchg
xlat
aad
push
mov
mov
fistpl
mov
jo
sbb
sbb
scas
loop
into
paddd
mov
ja
push
push
cmp
fs
mov
or
jle
pop
adc
fldl
inc
mov
xor
inc
out
mov
push
out
pop
les
push
out
mov
cmp
mov
mov
stc
pop
daa
push
mov
jo
test
sub
mov
inc
jae
xchg
je
pop
jl
ret
test
jecxz
lcall
cmc
fwait
mov
iret
push
fmuls
add
sub
xchg
jl,pn
and
push
push
ljmp
call
inc
int3
jo
lods
and
cmpsl
es
pop
pop
fcmove
int
mov
pop
out
inc
mov
cltd
and
mov
xor
enter
ljmp
sarb
addr16
adc
shlb
insl
jmp
jmp
and
push
jecxz
aad
sub
mov
dec
xchg
push
icebp
dec
in
mov
cli
sbb
sarl
ljmp
cld
filds
push
pop
es
pop
ret
int
mov
jae
xchg
sbb
lock
jp
mov
xchg
adcl
fstps
and
out
lods
repz
andl
aam
dec
cmpsl
repz
popf
fwait
mov
lahf
and
iret
lods
in
sarb
icebp
sub
insl
mov
mov
cmpsl
jmp
mov
or
mov
adc
inc
movsl
inc
rcrl
pop
mov
or
and
hlt
jo
cli
add
fisubrs
outsl
xchg
lret
push
imul
aas
loopne
out
shlb
lret
pop
je
daa
jp
jbe
subb
daa
scas
stos
je
lret
push
pop
and
mov
fisttps
pushf
sbb
aaa
pop
jmp
aaa
jg
lods
jo
addr16
mov
repnz
test
cmp
sub
sbb
imul
inc
push
pop
addr16
dec
push
repnz
inc
dec
or
addr16
lds
pop
mov
or
dec
rcrl
nop
dec
inc
dec
lahf
pop
mov
add
orps
add
lcall
mov
lea
and
mov
mov
jb
jp
jge
cs
clc
adc
in
nop
mov
cmp
adc
sbb
fildl
and
inc
xor
add
sbb
xor
or
movl
test
mov
push
rcrb
pop
out
adc
sbbb
pop
test
mov
cmpsl
push
icebp
sbb
int3
jno
fwait
xchg
cld
data16
push
ds
xor
cmp
aam
mov
stc
ficoms
add
test
xchg
popf
add
push
test
xchg
xchg
dec
es
dec
movsl
jp
pushf
adc
sub
or
aaa
icebp
jge
movsb
xor
sub
out
xor
loop
fstps
outsl
bound
mov
dec
jle
push
push
ss
and
push
lock
in
sub
adc
inc
add
xlat
adc
ds
add
mov
adc
imul
mov
jge
lods
leave
pop
addb
repz
sahf
psubusb
xchg
int3
loope
cmp
mov
je
ret
mov
xchg
mov
xchg
aad
cmp
sub
adc
adc
adc
fdivrp
pop
ds
sbb
jmp
xchg
add
dec
pop
mov
cwtl
push
xchg
cmp
jmp
adc
loope
pop
cmp
xor
mov
movsb
dec
imul
clc
push
imul
sbb
hlt
stos
or
sub
add
cmp
leave
rcrl
mov
sti
lods
push
test
cmp
adc
jp
pop
sahf
inc
sbb
add
mov
int3
scas
out
adc
fisttps
pop
sbbb
cwtl
rol
loopne
mov
and
jb
cmp
mov
dec
in
mov
adc
in
add
fnsave
mov
add
or
out
fsubrs
outsb
push
sbb
outsl
jns
mov
bound
fcmovbe
out
xor
addr16
insb
mov
cli
xchg
cmp
icebp
mov
dec
aas
xchg
sub
fcoml
insb
fidivs
jge
lock
rclb
jle
cmp
dec
push
bound
insl
or
jns
xchg
clc
inc
inc
repz
mov
inc
aaa
xchg
mov
cmp
push
clc
adc
or
fnstenv
add
inc
cld
scas
ficoms
rcr
push
fucomip
sbb
aam
or
add
xchg
loopne
bound
mov
adc
xor
leave
add
xchg
out
mov
jmp
mov
dec
repz
sub
in
adc
fsubrs
outsb
fnstcw
inc
test
add
shlb
mov
addr16
cmp
arpl
jmp
sub
ret
xchg
mov
mov
mov
add
out
jo
aam
fcompl
cltd
leave
rcl
dec
pop
mov
inc
pop
sahf
ret
jp
xor
add
popf
pushf
imul
mov
out
repz
rclb
and
mov
popa
xor
test
add
or
and
jae
jecxz
and
add
and
test
ds
lods
scas
insb
push
sub
inc
xor
cwtl
adc
gs
jg
in
mov
ret
cmp
cmc
out
hlt
scas
mov
sbb
in
pop
test
cmp
pop
sub
insl
lcall
popf
adc
cmpsb
xor
rcll
arpl
mov
adc
cmp
add
mov
lods
sbb
sbb
jmp
pop
dec
mov
push
inc
into
push
xchg
xchg
cmpsl
lea
in
scas
jg
sti
add
xchg
adc
mov
mov
outsl
stos
fcoml
iret
call
loopne
daa
or
scas
jbe
repnz
mov
pop
aas
imul
insb
gs
aaa
out
sub
xchg
or
shll
and
cmp
jge
jns
mov
xchg
cmpsb
add
add
inc
mov
xchg
arpl
fnstcw
xor
fwait
sbb
jno
jmp
inc
inc
jns
stos
out
cmp
in
outsb
rolb
cmpsb
test
movsb
cld
adc
mov
cltd
adc
mov
pop
mov
sti
ds
cmp
cltd
stos
sarb
mov
inc
shlb
repnz
addr16
jge
jne
and
lcall
and
cmpsl
lret
add
fimuls
pop
cmp
lret
int3
pop
idivl
std
inc
mov
fs
ficompl
pop
jno
movl
addb
addl
xchg
xor
les
xchg
sahf
fstpt
imul
cmp
dec
xor
mov
rcrb
aas
add
mov
stos
mov
nop
mov
pop
lcall
pop
sar
and
inc
inc
xchg
ret
sarl
mov
pop
stos
ret
addb
xor
fdivrs
jae
mov
jle
ud2
mov
lret
mov
mov
inc
pop
pop
fstpl
jmp
adc
rcrl
jns
jle
stos
inc
int
push
push
andl
mov
sti
mov
mov
xchg
cltd
movsl
data16
pop
xchg
xor
inc
jmp
mov
sub
jnp
int
lcall
pop
faddp
push
inc
add
mov
and
xchg
sub
xchg
pop
cli
xor
repz
stc
xor
add
mov
inc
lret
dec
push
fdivr
inc
inc
sti
ds
inc
xlat
push
bound
fstps
cltd
cld
mov
jns
mov
fadd
imul
adc
out
sbb
or
inc
ret
sbb
dec
add
aad
dec
add
xor
lahf
push
adc
cmpsb
sub
sbb
xchg
out
std
pop
std
mov
or
fstp
int
sub
cs
aas
je
mov
outsb
out
std
pop
dec
movsb
mov
stos
pop
fisttps
sbb
sti
xchg
int
stos
sbbl
xor
mov
mov
sub
stos
scas
shlb
fnstcw
or
js
and
decl
add
xor
sbb
adc
mov
sub
cmc
xchg
nop
test
mov
stc
pop
loopne
pop
pop
ljmp
lods
jne
out
loope
push
or
push
dec
sub
mov
repz
sbb
cmpsb
xchg
xchg
gs
cwtl
xchg
clc
xor
sbb
pop
test
sbb
mov
mov
jne
and
sub
test
sub
jle
push
pop
inc
or
sbb
push
jb
into
daa
jl
lcall
cmp
aad
fadds
jne
or
or
cld
or
fcoms
pop
lret
sub
fsubp
jl
mov
xchg
jmp
rclb
data16
incb
xchg
xchg
popf
cmp
pushw
inc
push
xlat
lods
jg
or
jo
aaa
cs
jle
push
loopew
sbb
push
sbbl
add
and
fnstsw
mov
xchg
xor
andl
enter
in
loopne
ficompl
icebp
or
sbb
sbb
dec
aad
test
adc
call
add
mov
mov
or
add
movsb
inc
repz
adc
idiv
sbb
jae
out
xor
outsb
enter
and
sbb
mov
andl
loope
movsb
xchg
cmp
arpl
jmp
or
pop
cmp
xchg
ja
scas
or
pop
and
cmpsl
sub
mov
ss
xor
les
add
mov
insb
out
fcmove
out
xchg
or
push
insb
dec
iret
cmpsl
add
test
leave
sub
jo
cmpsl
das
jle
xlat
pop
xor
lods
mov
mov
in
add
in
in
push
and
jge
or
cmp
dec
loopne
sbb
add
xor
jno
mov
xorl
xor
dec
into
dec
cli
mov
stc
pop
shrb
adc
mov
xchg
out
sub
test
nop
add
stc
mov
push
insb
lret
cmpsl
mov
leave
ficompl
jo
push
mov
push
dec
outsb
push
lods
dec
daa
lret
data16
xchg
sbb
mov
xchg
adc
sub
call
push
or
cmp
cmp
fsubs
iret
sub
rcr
or
push
sub
mov
sbb
xor
jno
pop
pop
inc
daa
std
jnp
mov
cmpsb
dec
push
std
mov
cmp
sub
or
adc
pusha
xchg
inc
push
xor
shl
leave
dec
inc
popa
or
adc
xchg
insb
jo
cmpsl
leave
arpl
add
sbb
mov
sbb
jmp
push
xor
aam
hlt
fisubl
jns
adc
mov
imul
jae
jb
mov
mov
mov
out
push
cmp
dec
jmp
adc
dec
or
sbb
jns
sub
add
adc
adc
pop
fbstp
subb
pop
shrb
ficompl
xor
add
callw
fcompl
shl
or
and
fcoml
insl
mov
adc
cld
mov
add
sub
xchg
inc
call
pop
jge
sti
inc
orps
test
ja
push
fildl
xchg
scas
xchg
lea
jns
cmpl
push
jne
loopne
push
push
push
out
pop
sbb
jmp
or
add
stos
xchg
test
mov
adc
mov
es
scas
dec
repz
nop
dec
push
mov
and
scas
add
clc
adc
or
shl
dec
nop
es
jl
lods
and
ds
cmp
stos
fs
jb
loopne
fucomip
sbb
dec
push
fisubrs
int3
xor
sub
push
xchg
inc
or
dec
xchg
add
int
lea
pop
push
fcoml
inc
jae
lods
std
dec
push
iret
mov
stos
fnstenv
jns
insl
gs
test
mov
sbb
inc
mov
out
xlat
int
lock
cwtl
gs
mov
cmp
cwtl
loope
sbb
je
cli
out
mov
pop
loopne
jae
sub
xchg
or
pop
stc
cmp
xchg
fsubr
lea
add
test
xchg
scas
cltd
and
or
sbb
lock
mov
loope
xchg
and
std
mov
subl
insl
popa
insb
sbb
mov
subl
adc
xchg
lcall
mov
gs
pop
jno
and
cmp
stos
pusha
daa
mov
inc
lret
or
jbe
les
sub
jae
mov
cltd
add
push
dec
dec
out
inc
aaa
outsl
jno
sbb
mov
cmp
ficoms
testl
imul
pop
lods
pushf
nop
data16
xor
imul
scas
loope
shlb
push
rclb
push
cmp
pop
push
gs
mov
out
fs
pop
jno
ret
imul
xorb
mov
movsb
sbb
xchg
lcall
iret
pop
filds
pop
std
jge
clc
mov
dec
pushf
pop
pop
and
incl
and
adc
mov
das
pop
xchg
cmp
sbb
icebp
mov
mov
push
inc
jge
and
imul
imul
fsts
shll
pushl
out
push
popa
pop
loope
mov
sub
fldl
cmp
add
aad
add
inc
repz
jp
pop
sbb
pop
cmp
mov
ss
adc
addr16
or
cmpsb
add
or
adc
add
lret
sbb
mov
cltd
mov
inc
jecxz
xor
inc
into
push
fimuls
adc
pop
stc
fsubrs
sub
cmp
pusha
xchg
inc
jle
jo
jns
mov
dec
cmp
inc
sub
xor
xchg
xor
xor
hlt
js
out
cmp
es
lret
aaa
push
mov
xchg
mov
and
clc
add
std
rorl
rclb
rorl
out
insb
pusha
das
popf
roll
sub
in
add
and
pop
mov
sbb
jae
sub
dec
pop
rolb
pop
clc
xchg
pop
sbb
push
mov
out
rol
call
outsl
dec
mov
inc
mov
and
ss
add
xchg
dec
jl
ja
pop
add
out
stc
lods
jns
dec
fstpt
jge
or
loop
dec
jb
js
jge
dec
fucom
jle
pop
aad
push
pop
test
fcmovu
stc
push
icebp
hlt
jbe,pn
lods
sub
cmp
cmp
scas
sahf
fld
xlat
in
or
cmpsl
pop
push
mov
xlat
xor
sub
lods
rcrb
int
in
adc
in
xor
sub
mov
mov
and
faddl
andb
mov
gs
mov
stc
stos
shrl
pop
je
call
adc
sti
mov
aam
rolb
inc
sbb
jb
mov
js
ficomps
jne
pushl
push
pop
xchg
popa
fidivrs
std
out
push
sbb
dec
inc
jae
test
sub
push
out
adc
mov
pop
aaa
addr16
shll
out
fcom
std
jnp
orl
sbb
movsl
inc
ror
enter
cmpsb
out
xchg
add
dec
fwait
cmpsl
loop
loop
aas
stos
daa
data16
mov
ja
and
push
mov
pop
fidivl
aad
mov
cmp
mov
inc
subb
je
pop
das
aad
sub
std
lods
inc
jle
inc
mov
in
pop
stos
sahf
mov
movsb
and
testb
xchg
lock
sbb
jp
mov
lods
sub
mov
push
ja
jp
test
mov
out
push
or
xor
cmpsb
sub
xchg
and
push
iret
mov
and
cld
insb
pop
sub
sahf
or
dec
or
jae
iret
mov
out
sub
mov
mov
incl
insl
popf
daa
xchg
ficomps
fs
ficompl
jo
movsl
mov
adc
in
cmpsb
fwait
jge
cld
popf
cmp
clc
jne
xlat
cmp
and
shlb
shr
arpl
mov
push
mov
jecxz
out
sbbb
jae
jae
shll
out
into
inc
or
sub
adc
sbb
jl
ret
test
sti
and
mov
jg
mov
cmpsl
repnz
pop
and
push
xchg
jp
daa
mov
stc
sbb
pop
insl
xor
inc
in
divb
add
xorb
dec
adc
or
cs
mov
daa
es
sbb
lcall
inc
arpl
push
or
in
lods
adc
ja
push
adc
inc
daa
inc
rclb
imul
mov
leave
push
std
faddl
or
div
push
push
lock
mov
adc
lcall
rorl
js
lcall
sbb
jg
cmp
dec
mov
ffree
out
stc
ja
mov
pop
clc
ds
jmp
or
fstpl
jp
and
pop
or
xor
sub
addr16
scas
jp
imul
mov
popa
mov
xchg
mov
jne
out
mov
repnz
imul
and
xor
lret
mov
mov
pop
xlat
cmpsb
add
sarl
movsb
jb
dec
in
jns
xchg
or
pop
push
pop
mov
int3
and
push
jae
and
mov
and
mov
enter
popf
fmull
into
shl
insb
lret
in
mov
mov
jnp
adc
pop
mov
mov
push
inc
mov
push
inc
ret
inc
cltd
rcrl
clc
cmp
not
or
push
test
mov
daa
or
mov
jge
notl
inc
lcall
fsubs
inc
les
jb
mov
js
add
popa
cmp
xchg
scas
sti
mov
cwtl
mov
xchg
fidivrs
rcrb
dec
mov
repz
shlb
stos
loopne
fidivl
loopne
dec
subb
incl
mov
daa
xchg
movsl
es
jecxz
ficompl
imul
insl
xchg
or
push
icebp
xchg
dec
push
mov
scas
xchg
and
shrb
xchg
pusha
mov
ss
shll
push
fiadds
pop
cwtl
shl
mov
adc
jle
cs
cmpsl
xor
push
mov
xor
aaa
dec
inc
adc
mov
push
js
rclb
test
imul
movsl
les
andb
or
push
popf
jecxz
xchg
fdivrp
or
cwtl
mov
jnp
jle
or
fsubs
in
mov
pushf
push
xchg
cmp
mov
xor
sti
fistl
insb
lds
pop
leave
jecxz
jmp
dec
in
push
push
or
aas
repnz
and
or
push
sti
lahf
out
pop
adc
and
mov
mov
or
cmpsl
or
mov
call
pop
pop
mov
mov
mov
jmp
fdivrp
cwtl
int
mov
fs
imul
ds
scas
outsl
rclb
ret
fsubrs
inc
inc
jecxz
mov
repz
orl
popl
pop
ljmp
aam
cltd
and
es
test
scas
nop
clc
jp
sbb
iret
sbb
shlb
add
frstor
mov
insb
push
mov
sbb
pop
add
dec
sbb
inc
jmp
repz
lahf
fucomi
rcrl
or
ja
gs
jmp
jg
jnp
push
cli
xchg
xchg
test
inc
scas
add
mov
lahf
lahf
dec
jmp
add
add
scas
push
jbe
or
lock
lret
sbb
gs
int3
xchg
enter
mov
add
jae
mov
inc
sbb
rcrl
mov
test
loopne
jae
xor
mov
scas
mov
enter
push
dec
test
xor
push
in
shl
adc
push
mov
mov
repnz
cld
shlb
in
and
or
loopne
inc
adc
mov
pop
cmpsl
dec
dec
cmpsl
pop
cmpsb
mov
push
das
add
push
xchg
xor
jecxz
hlt
out
jl
xor
pop
ret
xchg
je
out
dec
mov
push
movsl
enter
xchg
jmp
mov
push
roll
dec
mov
aas
sbb
pop
rcl
mov
ret
les
pop
nop
daa
scas
push
push
sbb
cmp
sub
mov
in
in
xor
dec
pop
sbb
mov
xchg
push
pop
in
test
pop
loopne
nop
add
jns
jnp
mov
cmp
loope
loop
stos
pushf
dec
cmc
int3
call
mov
inc
imul
fldenv
jbe
jae
mov
ds
fnstcw
jb
cmp
outsb
cmp
mov
pop
fcmovb
in
ss
outsb
pop
pop
lock
movsl
sbb
fisttpll
je
jg
fmul
push
insb
repnz
mov
sbb
jnp
xor
ljmp
idivl
cld
repnz
push
mov
ljmp
in
loopne
fstpl
scas
js
sahf
lods
and
scas
xchg
ja
or
inc
mov
outsl
leave
xor
xchg
rcrb
decl
dec
sbb
pop
add
push
sub
xchg
gs
add
lods
xchg
and
mov
scas
lock
pop
test
push
push
and
add
add
ja
sbb
ret
dec
mov
into
xchg
mov
or
loop
push
xor
and
popa
xor
sarl
sub
std
pop
push
add
jae
fsts
jbe
pop
ss
fidivs
fsub
mov
add
push
outsb
orl
pop
outsl
pusha
add
mov
and
xchg
jb
lods
jne
outsb
mov
inc
ljmp
sti
jge
stos
pop
lock
scas
mov
xchg
sub
pop
cs
jmp
add
pop
inc
push
int3
mov
sysret
adc
test
jmp
sub
and
mov
mov
push
sbb
dec
add
ss
mov
negl
fldcw
push
movb
push
lea
dec
sbb
jp
mov
insl
and
aad
ficoml
inc
inc
mov
int
andb
cld
outsl
and
mov
je
mov
mov
push
push
outsl
mov
adc
or
jae
repz
fs
gs
cwtl
jmp
shrb
das
scas
xchg
dec
mov
rcr
and
cmpl
dec
incb
dec
jge
pop
mov
rcrl
adc
outsb
lret
in
xlat
or
lret
xchg
xor
inc
ljmp
rcrb
aad
bound
cmp
xchg
jae
jle
mov
bnd
add
movl
sbbl
fidivrs
int
fdivrp
push
push
movsb
aad
mov
out
mov
clc
imul
incb
jg
lret
pop
out
test
mov
mov
push
pusha
je
int3
cwtl
adc
imul
test
mov
pushf
add
pop
mov
mov
jne
cs
lret
fnsave
jae
cmp
cmpb
test
sti
dec
jbe
xchg
pushf
xchg
fiaddl
sub
jns
les
daa
cmp
sti
inc
test
cmp
sbb
stos
lahf
pop
sub
xchg
xchg
vmwrite
adc
out
jb
sti
cmpsl
insl
adc
jecxz
sub
sti
rcl
mov
cmp
pop
xchg
addr16
pop
mov
dec
cmp
inc
rorl
and
scas
div
xlat
faddl
or
lea
ret
mov
push
jno
push
ficoml
jge
jbe
into
stos
add
repz
and
lods
les
inc
jne
leave
lea
mov
adc
push
pop
push
mov
push
aad
pop
frstor
shr
lods
adc
sub
stos
repz
enter
rcrl
add
add
les
add
push
cmp
int3
cmp
ds
jg
js
ljmp
inc
push
xor
shl
pop
loopne
mov
data16
mov
push
dec
add
xor
std
adc
ficoms
outsb
push
mov
or
push
xchg
loopne
xchg
pop
mov
xchg
push
fs
fs
sub
add
jmp
pop
inc
test
xchg
sbb
mov
mov
jb
sbb
scas
lcall
mov
sub
inc
loop
mov
xor
mov
inc
or
dec
sbb
gs
movb
fdivr
adcb
xchg
pusha
ljmp
adc
cli
test
jne
loop
jno
and
cs
jle
jb
lea
jbe
or
push
cmp
movsb
push
or
and
push
mov
add
popf
arpl
data16
mov
fisttps
jl
aad
dec
in
test
mov
cmp
dec
mov
push
lods
lret
shr
sub
mov
aas
mov
push
adc
sub
dec
andb
iret
enter
insb
inc
pop
mov
imul
mov
std
xor
in
mull
mov
and
aas
dec
mov
xchg
cmp
dec
sbb
jno
inc
std
push
rcl
add
in
call
int3
shl
cmp
add
shrb
loope
add
pop
jle
aas
xchg
mov
and
fstp
iret
push
int3
in
xchg
mov
sbb
sbb
jbe
loop
jg
adc
jl
adcl
aam
fwait
jno
dec
test
adc
cltd
xor
popa
mov
mulb
dec
pop
sub
and
mov
adc
arpl
pop
jp
mov
lcall
cli
or
icebp
sbb
lds
lods
add
test
xor
xor
sbb
icebp
addr16
filds
rorb
cmpsb
outsl
cltd
jns
popf
lea
pushf
add
sbb
pop
dec
xor
sub
loopne
mov
vmovsd
jbe
and
adc
jle
push
mov
scas
xor
cmp
cmp
or
xor
out
or
mov
andl
push
inc
aam
dec
xchg
jle
in
sub
gs
inc
aas
orl
mov
push
pop
inc
test
aas
popf
mov
mov
stos
test
in
popa
subb
mov
rorb
xchg
cmp
loop
call
lds
ljmp
sub
icebp
mov
mov
fisttpll
bound
subb
repnz
cmpsb
cmc
in
ds
std
divl
int
psubw
ss
mov
insb
pop
mov
cld
and
pusha
nop
inc
xchg
push
jo
inc
pushf
cwtl
call
add
sub
sarl
insb
int3
xchg
xchg
ja
shrb
sub
sub
scas
adc
insb
das
insb
sahf
xchg
cmp
mov
pop
and
or
jecxz
or
mov
sub
shr
inc
cmp
mov
jnp
jmp
mov
push
adc
or
mov
in
call
add
or
out
mov
fdivp
clc
pop
pop
fisttpl
xchg
push
int3
pop
or
push
test
mov
and
aaa
pop
sbbl
cld
cmp
orb
inc
les
ret
mov
xchg
mov
sub
adc
sub
rcrb
rclb
dec
pusha
shr
addr16
mov
cmp
mov
ret
lret
cwtl
test
fisubs
imul
in
or
jnp
frstor
adcl
xor
inc
out
inc
test
xor
out
lds
lea
pop
sbb
ss
or
jge
int3
outsl
daa
xchg
insl
mov
out
sub
cmc
aaa
or
adc
popf
cmpsb
iret
pop
aaa
and
call
lock
lcall
inc
cmp
sbb
jge
daa
pop
orb
divl
jge
aam
adc
mov
out
aam
inc
sub
push
xchg
inc
push
shlb
aas
lea
aam
mov
insb
adc
mov
fcmovbe
mov
push
mov
lret
sti
sbb
mov
in
lret
nop
add
or
ds
aad
push
repz
xchg
cmp
sbb
xor
jnp
xchg
xor
add
jl
mov
loope
fidivl
lret
xor
sub
frstor
sbb
cmp
jne
or
xor
jge
scas
lock
mov
lock
push
mov
int
scas
xor
lret
rep
or
cmpsb
mov
push
imul
sub
jnp
mov
jb
addr16
lea
sbbl
inc
push
jns
inc
shll
fs
test
push
inc
xchg
sbb
jmp
adc
sbbb
pop
inc
cmp
or
xlat
insb
and
cli
popa
pop
insb
insb
cs
and
movsl
sbb
pop
add
popw
fdivp
sbb
in
jp
sub
sub
adc
hlt
data16
mov
fsubr
movsl
push
inc
fstl
sahf
and
or
stos
xchg
ret
mov
sbb
into
test
xchg
sarb
add
sbb
out
int3
outsb
mov
lds
or
pop
lret
mov
xor
repnz
mov
cmp
push
lret
scas
andb
cmpsl
out
popf
sub
int
or
nop
pushf
cmpsl
and
pop
xchg
js
pop
testb
clc
pop
cmpsb
add
xor
mov
or
fsubl
out
sub
jmp
sub
xchg
and
cmp
clc
mov
sbb
jbe
mov
push
lahf
xchg
jmp
push
mov
fmuls
loop
inc
filds
daa
pop
mov
or
dec
mov
aaa
aam
jp
pusha
mov
mov
push
clc
push
mov
fdivrs
lds
add
pusha
aaa
pop
mov
push
fcomps
inc
sbb
daa
pop
les
daa
pop
pop
shlb
xchg
int
push
mov
data16
jb
xor
adc
mov
gs
and
sbb
dec
xor
dec
pop
xor
jl
or
mov
fadds
push
xor
bound
adc
lahf
push
push
xchg
and
or
leave
ficoml
test
xchg
add
mov
dec
test
mov
sub
xchg
adc
xchg
fxtract
jne
sub
fdivrl
neg
xchg
mov
lock
xlat
xor
cmpsl
aaa
aaa
cmp
mov
stos
stos
pop
dec
in
nop
decl
cmp
and
jbe
xor
fdiv
jmp
lahf
sub
lret
mov
push
stos
aas
pop
push
cmpsl
cmp
ss
push
in
mov
jbe
test
lock
ja
cmp
loope
movsb
scas
std
inc
arpl
push
dec
add
inc
mov
or
pop
cld
mov
push
pop
pop
orb
adc
jbe
add
push
add
xor
jno
jo
and
adc
lds
rorl
andl
mov
sbb
in
xchg
cs
cmp
sbb
mov
les
xchg
pop
add
pop
pop
fsubs
dec
int3
ss
insb
cld
dec
out
and
add
push
sbb
movsb
jle
pusha
lret
in
and
dec
sahf
jp
push
and
les
cmp
decl
sbb
shll
in
mov
pop
iret
sbb
xchg
push
ret
outsb
inc
dec
fcmovnbe
add
rol
lds
xchg
fsts
inc
in
cmc
push
inc
jle
fwait
dec
mov
addr16
bound
pop
sbb
cmp
cwtl
idivl
push
shll
or
adc
ljmp
or
inc
popf
mov
test
mov
bound
mov
fistl
xchg
sub
cmp
sub
negl
and
adc
push
adc
and
mov
aam
and
fs
shrl
stc
xor
movsb
xor
cmp
pop
push
jae
insb
xor
fsubs
fildll
inc
in
cmp
addr16
in
cmpsb
aaa
fcoml
cmp
ljmp
ds
mov
cmp
xor
xchg
nop
or
inc
push
push
int
mov
add
imul
dec
push
popf
sub
and
xchg
push
pop
mov
insb
mov
jl
jbe
cmc
adc
ficompl
mov
stos
adc
lahf
stc
push
sub
out
jg
popa
imulb
std
lock
jle
lock
xchg
stos
call
cli
inc
imul
rcr
sbb
mov
rcll
rcll
pushf
cmpsl
out
das
pop
out
test
dec
pop
jg
sub
aaa
sub
clc
mov
rcll
adc
or
fdivrp
push
and
pop
shrl
in
jbe
jle
mov
mov
push
xor
jbe
inc
and
add
push
and
orl
fld
sub
imull
push
mov
les
pushf
int
out
or
sub
pop
mov
dec
scas
cmp
inc
push
ja
ret
popa
cmpb
iret
pop
inc
xchg
das
lds
pop
in
and
ja
push
jo
jmp
fs
inc
call
rorl
lcallw
ret
aad
sbb
mov
decb
test
js
sbb
idiv
filds
adc
test
mov
fistpll
lret
push
inc
f2xm1
daa
pop
dec
jns
mov
fcoms
in
gs
mov
lods
sahf
inc
lock
rcll
push
push
inc
jne
jo
repnz
pushf
pop
cmp
aas
lcall
rcll
and
mov
icebp
xorb
add
sti
mov
xor
push
lock
fisubs
std
mov
xchg
mov
adc
or
sbb
movsb
mov
lret
popf
mov
jl
call
insl
lcall
cld
xor
test
sub
pop
and
out
cli
mov
mov
leave
lcall
push
mov
sahf
mov
pop
push
subb
cld
sbb
fcmovne
sarl
lea
inc
jb
into
xchg
popf
ret
pop
into
pushfw
cmp
js
mov
and
lods
pushf
pop
imul
mov
jle
pop
lea
shll
out
insl
std
subb
push
xchg
lret
fcomi
adc
xchg
pop
adc
push
mov
ret
xor
cmpb
sahf
pop
and
jns
xchg
mov
js
push
fimull
sub
add
push
or
xorl
mov
aaa
int
mov
lret
icebp
add
mov
shl
pop
les
cmpsb
xor
dec
cld
jae
or
dec
pop
loope
ss
or
mov
jecxz
shlb
jp
push
inc
addl
aaa
cmp
and
lea
jae
call
jecxz
mov
pop
and
cmp
rorl
call
fidivrs
movsl
in
cmp
das
push
insl
aad
cltd
lods
add
js
xchg
and
int
lret
stos
out
pop
pop
imul
loopne
dec
outsl
iret
pushf
mov
xchg
mov
insb
push
rorl
dec
push
fimuls
cwtl
adc
sbb
xchg
xor
or
xor
sub
jg
sarb
cmp
repz
pop
aad
outsb
xchg
lods
adc
cmp
cmp
repnz
xor
sub
sub
add
or
cmc
cmp
call
cmp
push
xlat
xor
add
insb
aaa
xchg
pop
dec
inc
push
jnp
mov
dec
idivl
push
fistl
inc
sub
pop
pop
mov
jmp
pop
fcomip
jne
mov
xchg
lcall
insb
xchg
mov
pop
pop
in
js
dec
inc
xor
imul
jo
lds
sbb
push
pop
jp
jb
push
adc
dec
incb
cmpsl
fiaddl
xchg
adc
sub
loop
or
addb
scas
inc
push
jg
adc
icebp
xchg
sub
pop
daa
addr16
mov
int3
call
xor
fsubs
dec
xchg
or
das
sub
xchg
pop
push
rcr
mov
dec
nop
xchg
xchg
mov
test
sbb
imul
jmp
stc
inc
push
dec
imul
sub
clc
scas
dec
cmp
xchg
in
push
inc
stos
add
popf
mov
insb
fisubrl
imul
cld
xchg
push
mov
push
ret
mov
test
sub
jmp
dec
ss
mov
adc
xor
test
xorb
test
xchg
inc
movsb
mov
inc
sarl
iret
cmp
movsl
and
in
mov
data16
xor
mov
cmp
std
push
inc
xlat
lds
push
leave
fucomi
push
pop
dec
imul
inc
mov
insb
cmp
aas
jecxz
add
mov
ffree
mov
test
loope
mov
add
movsb
dec
jns
push
mov
inc
cmpsl
psllw
sahf
loop
divl
pusha
push
mov
fistpl
lret
add
push
das
std
xlat
push
adc
dec
in
mov
mov
mov
or
arpl
mov
adc
push
xadd
xchg
lock
int3
jbe
adc
negb
sbb
cli
pop
loope
ret
jecxz
cltd
leave
les
pop
andb
stos
add
xor
je
ret
xchg
mov
xlat
lock
pop
pmovmskb
inc
je
xor
enter
and
cmc
fistpl
and
inc
jg
push
add
ljmp
cli
std
scas
adc
jo
aam
xor
insl
je
sub
enter
adc
loope
jecxz
mov
mov
pop
js
jne
std
and
js
pop
mov
das
dec
pop
mov
addr16
xchg
dec
pusha
jns
shrb
jo,pn
jl
shrb
pop
jnp
mov
xor
adcb
jp
in
mov
movsl
push
mov
call
mov
pop
cmp
cwtl
dec
mov
and
adc
add
rolb
push
push
cwtl
jno
mov
stc
addr16
insb
or
inc
mov
dec
leave
repz
stc
xchg
repz
adc
loop
push
adc
and
fs
repz
and
mov
mov
push
int3
or
mov
mov
addr16
xor
icebp
mov
test
stos
into
mov
and
subb
pop
imul
sbb
or
pop
popf
mov
testb
sub
jne
and
jno
fs
das
mov
sbb
xor
xchg
jmp
mov
push
popa
sub
or
xchg
xor
outsb
mov
cmpsb
mov
add
cmc
popf
sub
js
pop
adc
ret
lds
stos
push
pop
pushf
pop
into
aad
push
pop
enter
adc
xor
xchg
fidivs
xor
sub
cs
das
loopne
aaa
jmp
test
loopne
adc
in
lock
out
in
js
dec
scas
gs
fistpl
stos
es
movsl
testb
mov
loop
jge
pop
cmp
sbb
adc
addl
xchg
adc
ffreep
test
test
jl
cld
and
dec
les
sbb
repnz
inc
jns
iret
or
adc
mov
stos
mov
mov
imul
ret
fldl
test
sti
int
das
jmp
bnd
xlat
int
or
dec
sahf
add
lret
dec
shlb
fdivp
dec
or
lahf
adc
sub
ret
movsl
faddl
ret
push
mov
mov
xor
or
mov
int3
loopne
mov
std
bound
inc
xchg
pop
test
push
sti
jnp
push
push
mov
clc
sbb
jae
loop
and
add
add
lock
jle
aas
into
mov
add
subb
mov
outsb
and
or
fwait
inc
sub
int
sbb
fldenv
lea
icebp
inc
test
or
iret
or
inc
das
push
dec
loopne
fidivrs
adc
negb
push
hlt
adc
push
or
sub
lahf
stc
xchg
shrb
or
push
sub
fsubp
adc
mov
lock
dec
lods
imul
pop
pop
sub
je
ret
fdivrs
mov
fwait
int
je
xor
je
xor
in
pop
jecxz
dec
in
nop
call
cmp
inc
stos
rorl
icebp
jecxz
xor
outsl
pop
add
imul
lret
call
mov
pop
sub
stc
mov
fmuls
clc
aad
xchg
in
xor
adc
pop
movsb
stos
cmp
daa
shl
mov
cmpsb
mov
push
stos
cmp
scas
mov
loopne
dec
in
xor
adc
ss
icebp
in
dec
pop
lods
daa
gs
cmp
inc
cs
dec
inc
test
sbb
mov
add
mov
mov
cwtl
adc
test
movsb
out
and
dec
xchg
add
add
seta
jmp
push
or
shl
push
sub
imul
aad
sub
mov
mov
lea
addw
xchg
add
push
int
sub
rorl
ja
ja
push
xchg
add
mov
jle
mov
call
pop
adc
dec
loopne
jno
jl
mov
pop
or
adc
dec
insl
imul
mov
pop
insl
mov
mov
fistl
push
inc
push
int
cmp
jb
enter
push
addb
popa
popf
xchg
loopne
pop
adc
adc
push
mov
mov
cmp
fldt
mov
ds
push
out
pop
adc
or
int3
sub
nop
inc
and
mov
sub
push
and
dec
push
xor
aas
ljmp
and
fdiv
or
jl
icebp
fsub
hlt
dec
inc
aaa
jno
jno
pop
iret
sub
or
push
mov
stos
rolb
cmp
mov
and
push
cmp
xchg
addr16
mov
repz
insb
popa
mov
jo
xchg
mov
ja
sti
mov
jnp
and
and
jo
jb
bound
mov
xchg
xor
nop
rclb
call
mov
fbstp
lock
ret
push
out
in
xchg
cld
pop
cmpsl
ffreep
loop
add
push
adc
mov
je
add
roll
inc
insl
hlt
and
push
dec
adc
cs
xchg
push
xchg
mov
cmp
pop
dec
xor
push
jmp
insl
js
pop
push
dec
pop
vpcmpgtw
mov
clc
pop
setb
cmpl
pop
inc
jb
jbe
xchg
nop
mov
cmp
adc
jne
cmp
sahf
push
adc
and
loopne
adc
inc
xchg
xor
mov
test
aaa
add
inc
cli
fxch
push
adc
lea
inc
lock
xor
sub
into
pop
adc
push
adc
mov
cmp
and
push
int3
sub
adc
shl
mov
xor
sahf
lcall
loop
por
call
add
imul
add
das
xchg
stc
push
orl
sbb
sub
xchg
jns
jp
mov
shlb
jmp
cli
hlt
stc
and
lcall
orps
and
pop
mov
mov
into
popa
mov
pop
cmp
rolb
icebp
dec
mov
add
flds
js
out
cld
sub
sar
rol
mov
push
popa
push
rep
or
imul
popa
cmc
ljmp
jae
sub
ret
bound
xchg
jbe
bound
sbb
icebp
sahf
bound
popf
pop
iret
lret
cmp
or
sti
push
rcl
arpl
lods
dec
xlat
in
imul
fnstcw
outsb
xchg
jp
adc
adc
data16
shrb
jg
dec
pop
xchg
aad
aaa
iret
push
xor
xor
shll
mov
cmpsl
adc
dec
stc
fisubs
mov
or
lods
xor
popa
cmpsb
pop
pop
dec
xchg
orb
mov
dec
cmpl
call
outsl
dec
sbb
out
cwtl
mov
mov
rolb
adc
insl
outsb
add
pop
pop
sub
loopne
lcall
stc
push
add
outsb
sbb
xchg
fsubrs
xchg
push
fldenv
mov
add
rorl
stos
call
nop
mov
flds
shlb
outsl
jg
imul
shl
cmc
aaa
insl
out
xchg
mov
dec
cmc
lock
adc
mov
sub
dec
sub
ror
dec
inc
pop
sbb
addr16
pcmpgtd
loop
cld
xor
jl
jle
jmp
into
popa
sti
pop
xor
mov
cmp
mov
jp
clc
or
push
jle
push
out
pop
sbb
dec
lahf
mov
bswap
mov
test
adcl
repz
xchg
je
jno
mov
pop
jecxz
ja
int
jbe
dec
inc
cmp
and
js
stos
iret
sub
outsb
daa
add
mov
cmpsb
mov
mov
aas
jle
sub
or
cmpb
push
inc
insb
sub
xchg
xor
sub
lcall
icebp
mov
jb
lahf
cmpsb
lretw
jb
cmp
shlb
push
push
adc
jmp
xchg
jbe
mulb
add
in
xor
sbb
cmp
out
shlb
bswap
test
lods
int
test
sahf
or
pop
sbb
popf
sahf
mov
mov
popf
or
ss
rorb
ja
out
das
sub
loope
adc
test
mov
pop
dec
fwait
shl
js
mov
nop
mov
dec
cltd
testb
outsl
sbb
xchg
fstl
or
sbb
cs
mov
sarl
fsub
inc
subb
in
cs
mov
pusha
push
sub
cwtl
scas
and
and
or
int3
movsb
add
inc
pop
mov
imul
nop
movb
and
lcall
cmp
and
jo
push
mov
js
add
lods
sbb
push
and
movsl
jnp
dec
jg
pop
mov
pop
pop
cld
adc
out
mov
ret
mov
loop
int
bnd
mov
xor
fisubs
xor
sbb
ds
xchg
cmpl
sahf
mov
cmp
jge
xchg
in
dec
dec
loopne
scas
pop
cltd
jnp
rolb
xor
clc
stos
sarl
cwtl
mov
jb
cmp
outsl
jp
inc
lret
sbb
sbb
subl
shll
mov
cltd
sub
push
inc
xor
fistps
je
sub
shr
int
mov
pop
push
mov
or
cs
xchg
pop
fldenv
lods
int3
icebp
fisttpl
in
xchg
incl
or
bound
cmp
jge
insl
push
pop
or
xor
movsl
pop
adc
fiaddl
fsubr
jb
out
rcrl
sub
enter
push
mov
aaa
push
nop
add
jge
test
pop
aad
mov
or
fmull
and
dec
mov
dec
pop
mov
aam
mov
jb
or
and
cmp
fwait
cmp
pop
bound
sti
push
mov
rcr
lret
sarb
push
mov
inc
cs
bound
out
mov
add
xor
mov
jae
imul
fcmovb
lea
aad
shlb
arpl
push
insb
dec
mov
xchg
leave
or
cwtl
fistps
mov
jb
insl
push
sub
add
cmp
aam
jl
jo
xorb
sub
mov
jbe
repnz
hlt
and
js
mov
mov
out
fucomip
scas
sub
lods
cmp
mov
cmp
incb
jmp
xor
test
pop
and
jle
mov
out
jo
and
jno
cmp
pop
jae
ljmp
mov
es
lds
xor
aam
inc
subps
xchg
push
sub
jp
xchg
movsb
mov
inc
inc
iret
test
insl
jge
dec
mov
bnd
mov
aam
mov
jl
test
shlb
insl
or
push
jb
test
dec
cmp
inc
call
addb
mov
xchg
loopne
js
jl
push
inc
sbb
pop
push
mov
pop
pop
jp
xchg
or
mov
mov
pop
mov
leave
xchg
push
sub
out
cmpsl
gs
test
mov
cmp
scas
fadds
addr16
repz
fwait
dec
mov
fisubs
mov
lods
adc
xlat
sub
inc
mov
call
dec
leave
test
insb
imul
mov
inc
xchg
inc
cmp
sbb
popf
mov
push
xlat
movsl
sub
push
lock
and
mov
test
jo
clc
clc
inc
inc
andl
dec
inc
mov
push
lret
or
adc
pushf
hlt
push
test
sbb
jmp
rcl
nop
test
pop
jns
lahf
inc
mov
test
mov
pop
mov
iret
inc
leave
dec
cs
sbb
mov
xchg
fdivl
jp
sbb
mov
aam
test
enter
add
lds
mov
pop
mov
xchg
sub
sub
pop
dec
sbbl
divl
mov
sbb
jnp
adc
cltd
es
jnp
jns
arpl
add
jg
sbb
dec
xchg
test
into
int3
je
and
push
xchg
cmp
cs
fs
cmp
ret
out
xor
lahf
shrl
cmpsl
in
loop
add
pop
out
mov
addr16
pop
jecxz
rorb
movsl
jl
sub
test
pusha
jle
inc
bound
xor
ret
inc
shlb
cmpsl
test
out
adc
push
pop
jns
mov
pushf
pop
lcall
mov
sub
ds
mov
or
and
pop
fsubl
or
jo
out
adc
mov
cmpsb
dec
or
mov
outsl
outsb
xor
in
mov
imul
mov
sbb
out
mov
add
adc
xor
inc
adc
inc
pop
adc
dec
fidivrs
pop
fdivrl
orl
jecxz
mov
popf
hlt
mov
ret
inc
cs
jb
mov
pusha
shll
inc
daa
pop
fwait
xor
js
mov
movsb
outsl
lock
lock
mov
adc
xchg
or
cmpsl
mov
out
adc
jns
bound
outsb
mov
adc
cmp
mov
iret
inc
pop
sbb
nop
sub
jmp
adc
cmpsl
add
xor
cld
outsl
push
gs
add
xor
ljmp
ret
push
repnz
inc
adc
mov
aam
add
sub
pop
mov
out
imul
add
xor
jg
xchg
sbb
mov
pusha
sub
jns
add
sub
adc
fmull
pop
ret
imul
dec
cltd
sub
fwait
pop
dec
push
xchg
addr16
xor
cmp
aas
rolb
mov
arpl
xchg
jmp
mov
decb
push
pop
clc
das
ret
jecxz
sahf
push
imul
pop
lea
pop
add
fwait
mov
mov
mov
inc
sub
lret
pop
fiadds
pushf
in
push
dec
cwtl
adc
and
pop
push
pop
mov
out
and
int
and
push
test
mov
and
out
cwtl
cmp
dec
dec
cmp
int
jbe
xchg
ljmp
pop
jno
sbb
lahf
lahf
inc
icebp
jno
jg
loopne
jnp
xchg
jns
xchg
movsl
mov
cmp
sub
into
sub
in
ljmp
fcom
jb
push
out
sub
mov
stos
test
out
lea
scas
push
or
scas
lret
or
push
fisttpl
cmpsl
sbb
mov
das
hlt
xor
inc
movsb
in
ss
or
cmc
sbb
addb
pop
adc
insl
sub
fadds
add
cmpsb
cmp
loopne
fstl
mov
pop
mov
mov
inc
push
dec
mov
cmpsb
push
xchg
and
xchg
call
and
mov
dec
mov
mov
sbb
test
sbb
mov
mov
push
pop
int
inc
push
pop
mov
shr
adc
cltd
adc
js
jge
inc
je
mov
das
mov
pop
and
sub
xor
xchg
scas
jle
mov
fldl
pop
subl
mov
fiadds
dec
sbb
push
add
cmpb
ljmp
cmpsl
je
mov
pop
push
or
pop
stc
push
mov
mov
push
xchg
xchg
aas
sbb
inc
ret
imul
frstor
enter
add
xchg
loop
adc
push
mov
mov
movaps
pushf
sbb
pusha
jp
mov
add
jle
pop
aas
push
ja
lea
mov
lods
pop
enter
jae
in
push
outsb
lods
jg
aad
or
loope
decb
daa
pop
sub
stc
xchg
jge
imul
jg
dec
sub
or
fdivrs
test
or
adc
xor
dec
das
adc
pop
mov
icebp
aam
fs
fdivs
fcmovne
xlat
push
xor
dec
push
mov
xor
xor
adc
mov
test
push
or
pop
pop
pop
add
lea
lock
push
gs
xchg
clc
shr
adc
adc
rclb
out
mov
sub
cmpl
daa
imul
sbb
push
and
movsl
sub
and
pushf
sub
leave
imul
adc
add
add
in
pop
fcoml
mov
mov
and
clc
dec
mov
dec
add
cmpsl
mov
popa
mov
stos
mov
xorps
mov
test
test
add
sbb
sbb
cmp
in
push
adc
and
mov
jle
jg
xlat
jne
xchg
push
adc
pop
lret
push
shlb
ljmp
mov
jp
mov
movsl
cs
mov
sub
lea
xor
push
xor
flds
out
inc
test
push
ret
mov
xchg
aaa
arpl
lret
js
leave
hlt
cld
pop
ja
xchg
pop
push
xor
jg
dec
add
mov
xor
dec
mov
dec
sahf
clc
xchg
shrl
scas
daa
fldcw
jno
daa
jno
out
dec
jle
out
add
xchg
bnd
cmp
xor
idivl
sbb
int
mov
xchg
mov
stos
jbe
outsb
pop
je
jge,pn
sbb
sahf
and
cmp
ret
fisttpll
dec
mov
jno
popf
daa
mov
test
push
das
stc
imul
popa
cmpsb
movsl
aas
dec
clc
fisttpll
mov
cmp
adc
lahf
std
in
push
mov
jb
pushf
icebp
xlat
lret
test
fwait
stc
lcall
or
fnstsw
mov
leave
fisubrl
fwait
das
jg
add
xchg
inc
sub
jbe
xor
cmc
xchg
jle
dec
pop
in
popa
insb
xchg
fsub
in
mov
fstps
fstps
aam
cwtl
insl
mov
neg
cli
mov
push
out
fwait
mov
out
divb
xor
push
outsb
out
mov
test
mov
cli
jno
sbb
inc
fnstsw
in
jo
mov
popf
jge
pop
sti
jmp
ficoml
into
lods
jge
ja
mov
enter
icebp
mov
push
sbb
es
jno
sub
cli
or
mov
js
cwtl
test
sarl
jne
rcr
cmp
lock
pop
cmpsl
xchg
sbb
sbb
push
inc
iret
mov
notl
mul
enter
repz
es
dec
rcll
mov
cs
js
loope
xchg
cmp
dec
push
inc
dec
ljmp
aad
decl
sub
into
xchg
ja
mov
mov
sub
mov
xor
adc
lock
jno
and
push
int
mov
mov
mov
sbb
in
sbb
fiadds
pop
mov
jle
add
inc
mov
inc
cmp
pushf
popf
sahf
push
mov
ret
inc
repz
js
mov
imul
ror
xor
std
int
lret
hlt
clc
dec
iret
jg
in
sbb
cmpsb
movsl
xor
bnd
jle
mov
mov
adc
push
jae
cmpsb
push
mov
dec
mov
nop
icebp
mov
cld
adc
outsb
ret
inc
mov
dec
sub
add
mov
xchg
push
ss
and
mov
rcr
push
adc
add
popa
in
jno
push
or
jmp
jae
xchg
xlat
pop
jno
sbb
jp
pop
sub
and
push
xor
push
sub
mov
imul
add
ja
test
or
mov
sbb
shl
loopne
xchg
or
fldlg2
stc
imul
add
ret
inc
aas
and
push
insl
testl
lods
int
dec
jae
dec
adc
out
pop
lods
dec
fcmovnu
dec
test
test
lock
push
in
pop
and
aad
in
stos
cmp
les
lods
adcl
stos
push
arpl
sub
jl
adc
push
or
fs
je
shll
stc
dec
movsl
jae
cltd
mov
push
mov
call
add
push
mulb
out
mov
arpl
test
ret
out
roll
jno
adc
jle
and
shrb
enter
adc
push
mov
enter
xchg
imul
mov
xchg
sbbb
mov
cmp
jg
dec
lret
push
lods
and
stos
jo
and
add
xchg
dec
inc
sub
sbb
ret
xchg
or
fs
jnp
andl
movsl
mov
pop
gs
pop
mov
or
mov
push
test
dec
out
jl
jmp
xor
out
fidivrs
adc
add
push
out
xchg
jae
or
ret
jp
mov
cmovns
add
adc
pushl
xchg
dec
mov
mov
dec
lods
stos
push
xchg
dec
aas
ret
dec
stc
aam
mov
iret
hlt
adc
fwait
movsl
out
adc
cmp
inc
js
fdivrl
aad
push
inc
in
int3
mov
push
data16
iret
mov
ret
push
rcr
mov
jns
xchg
iret
cld
mov
aad
pushf
xchg
mov
aas
icebp
jecxz
cmp
and
pop
cmp
iret
jnp
mov
mov
cmp
mov
aam
out
adc
daa
addl
xchg
das
cmp
nop
dec
xchg
loope
xor
jo
int3
mov
dec
push
sub
ffreep
mov
into
ret
xor
lods
gs
mov
mov
mov
adc
nop
cltd
test
repnz
sbb
cmpb
arpl
sahf
or
scas
mov
test
jle
adc
dec
outsl
jle
pop
into
daa
int3
cmp
imul
movsb
popa
cmp
push
cld
mov
ficoms
inc
push
xor
sbb
ret
lcall
fdiv
dec
or
mov
ret
xor
sti
mov
sub
add
cmpsb
xchg
jg
sub
xchg
xbegin
fisttps
inc
addr16
movsl
je
mov
scas
cli
sub
mov
rcrl
repnz
pop
push
popa
js
out
jmp
aas
test
push
das
sti
loop
fucom
pop
test
pop
and
cmp
jb
lret
outsb
adc
dec
je
push
sub
sti
lods
mov
inc
fnstsw
out
movsb
jo
add
and
loopne
pushf
popf
xchg
imul
mov
lds
adc
lcall
sbb
les
cltd
mov
pusha
call
inc
adc
ret
push
rcl
push
inc
and
insb
cld
mov
mov
fs
push
insl
adc
daa
int3
jmp
sub
sbb
cmc
cli
ljmp
jnp
ret
sub
enter
ror
addl
mov
icebp
push
mov
adc
in
orb
nop
xchg
out
sti
call
xchg
out
add
and
inc
mov
mov
sti
cs
fiaddl
arpl
jno
jo
cwtl
or
push
movsb
inc
push
dec
inc
or
cmp
xchg
cltd
popa
pop
jnp
insl
add
push
inc
roll
pop
mov
jbe
jbe
push
fwait
mov
mov
xchg
out
push
jbe
xor
aam
sub
ror
and
and
pusha
add
gs
outsl
jecxz
mov
ret
cmpsb
addl
shlb
and
test
xchg
bound
dec
dec
lods
sbb
mov
xchg
cmpb
xchg
mov
ret
pop
out
lahf
jns
or
iret
lret
add
sub
movsl
mov
mov
xor
push
lods
push
or
das
pop
mov
jecxz
sub
jmp
xchg
mov
sub
adc
mov
add
cli
mov
xchg
aaa
test
add
arpl
addr16
aad
inc
js
cli
sub
jae
lds
loopne
int
ljmp
jge
loopne
out
lods
repnz
andb
out
cmp
jns
int
inc
stos
bnd
aaa
xchg
cmpsw
fbld
cmpsl
mov
lret
sub
pop
fcmovnb
mov
inc
xchg
inc
aaa
fdivrs
mov
push
jb
fs
add
popf
lret
addr16
sbb
jl
xchg
mov
je
sub
inc
test
movsl
cmc
pusha
jle
dec
xchg
mov
mov
jmp
js
fst
roll
xchg
mov
int3
nop
nop
dec
lods
nop
sti
xlat
jmp
xor
pop
inc
test
jnp
shll
test
data16
mov
push
push
xchg
jo
repnz
xchg
and
aam
xchg
into
test
sti
jns
mov
and
xchg
mov
pop
loop
jo
rorl
loope
mov
cmpsb
imul
insb
cltd
jmp
out
pop
push
cmpsl
test
bound
iret
add
adc
lret
mov
rcrb
ficoml
rclb
dec
and
jmp
ret
arpl
adc
pop
adc
leave
xor
orb
mov
data16
push
les
mov
or
add
int
xchg
test
rolb
fwait
aas
call
add
or
dec
shlb
popf
js
fstps
jb
mov
dec
out
fadds
inc
out
xor
push
ret
cmp
push
pop
adc
mov
or
xor
and
ja
jmp
jbe
sbb
jmp
inc
cmp
ret
sub
rol
mov
push
leave
xchg
loopne
cwtl
test
jl
fldl
neg
rcrl
sti
adc
imul
fbld
rcrl
add
cmpsl
pop
out
jp
mov
fstpt
gs
in
sub
xor
add
int3
into
sbb
jb
xor
xor
cmc
and
xorl
aaa
idivl
in
fwait
add
add
sahf
sti
nop
ljmp
xchg
pop
dec
cmc
xor
jmp
hlt
rcrb
into
divb
xchg
push
inc
into
out
or
adc
add
sti
xchg
cld
and
jg
xchg
outsl
test
insl
aam
push
cmp
dec
add
mov
cmp
repz
aam
cwtl
mov
dec
mov
adc
movsb
repz
mov
stos
xchg
test
fistpll
fidivs
dec
lds
xlat
rcll
sub
sub
fildll
cs
fsts
and
pop
xor
fnstcw
mov
ljmp
xchg
add
sub
iret
ss
sub
jp
and
lds
fsubrl
setl
stc
cmp
push
ljmp
mov
bound
out
jecxz
hlt
push
int
mov
lods
push
sub
jge
cmc
cmp
mov
andb
arpl
sahf
stos
adc
add
out
in
dec
bound
xchg
incl
roll
aam
mov
mov
pop
ret
inc
aaa
add
in
stos
xor
sti
xor
cli
xchg
test
aaa
and
and
int3
pop
pusha
mov
divl
iret
int
cmp
sub
lods
cmc
push
scas
cmp
sbb
sub
fisubrs
les
dec
mov
loop
cmp
inc
enter
inc
outsb
fs
xchg
mov
mov
xchg
lods
enter
iret
shrl
adc
dec
jle
lds
shlb
fadd
daa
dec
mov
cwtl
xchg
adc
pop
nopl
scas
xor
mov
insb
push
daa
bound
mov
mov
xchg
jge
jg
data16
inc
das
xor
js
test
mov
lahf
lahf
aam
cmpsl
test
jno
xchg
out
mov
fstl
pop
mov
out
scas
icebp
jp
sbb
xchg
xchg
jmp
pop
jmp
scas
cmp
cwtl
addl
inc
enter
push
mov
xchg
insl
cli
add
outsb
icebp
jge
dec
test
setge
faddl
xchg
roll
or
inc
jns
test
rol
jl
out
gs
fdivrl
or
cwtl
les
xchg
int
xlat
inc
in
nop
ds
inc
pop
lock
gs
std
mov
hlt
mov
cmc
mov
sbbb
pop
lock
lods
pop
xchg
shl
sbb
rolb
and
bound
enter
popa
loop
xchg
jge
jmp
lret
push
xchg
cmp
mov
hlt
gs
add
les
pop
add
mov
std
push
adc
stos
test
mull
fldenv
int3
addr16
aaa
aam
movsb
rcl
or
jb
clc
adc
jno
and
adc
leave
jl
movsl
cs
jno
shl
scas
inc
test
fiaddl
loope
pusha
cmp
mov
insb
subl
cmp
lret
mov
inc
push
test
sbb
sub
aas
dec
rorb
pop
dec
lahf
jmp
fisubs
inc
mov
pop
rcll
push
adc
push
or
mov
shl
pop
lea
xchg
clc
stc
or
fnstcw
xchg
inc
xlat
scas
xor
inc
sbb
inc
dec
inc
cltd
and
mov
scas
xchg
data16
sub
mov
xchg
ret
nopl
daa
pop
int
sbb
idivb
mov
pushf
pop
or
inc
fldln2
push
cltd
stos
xchg
aaa
sbb
mov
lods
insb
dec
bound
xor
mov
inc
xchg
decb
lock
int3
das
sti
mov
xor
loope
sub
out
add
pop
or
ret
pop
xchg
orb
js
sub
lds
sbb
xchg
mov
or
testl
mov
sbb
jo
mov
adc
and
je
ljmp
in
jmp
hlt
cs
ja
dec
movsb
popf
pop
xchg
xor
pop
cmp
sbb
mov
test
cli
pop
xchg
push
scas
mov
dec
in
iret
xchg
cli
fs
lcall
mov
xor
movsb
or
arpl
insb
push
popa
xchg
mov
shrl
inc
inc
dec
mov
nop
mov
leave
add
aas
xchg
aad
lret
js
mov
adc
jmp
sbb
xor
push
xor
data16
jecxz
sahf
fwait
cwtl
sti
les
daa
imul
mov
out
push
das
or
push
fs
pop
iret
rcrl
xor
pop
mov
mov
pusha
fcompl
sub
push
lods
loopne
jecxz
jbe
xor
mov
das
sub
xchg
pop
out
ds
mov
cltd
dec
jne
cltd
fwait
lret
pop
scas
loope
repz
lcall
imul
inc
xchg
pop
lret
add
cmpsb
and
pop
sbb
pop
fs
mov
inc
mov
dec
sahf
bound
mov
in
sbb
test
rorl
idiv
mov
xor
stos
xchg
and
int3
aas
mov
repnz
push
jb
imul
call
cwtl
cltd
leave
mov
fwait
and
mov
sbb
xchg
nop
jnp
negb
xchg
mov
pop
cmp
pusha
punpckhwd
jmp
lcall
enter
loope
xor
arpl
mov
ret
and
popf
sub
ljmp
call
xchg
je
push
and
imul
mov
outsb
iret
sti
xor
test
and
sahf
cltd
cmp
dec
jne
mov
leave
mov
aad
outsb
mov
clc
adc
cmpsb
out
inc
mov
xchg
je
jb
decb
or
sbb
les
mov
mov
das
mov
jnp
out
leave
pop
into
sbb
hlt
jbe
lock
iret
loope
jne
xor
repnz
fs
call
bound
dec
in
mov
or
aad
adc
inc
decl
rolb
jp
les
push
jne
pop
rcrb
int3
or
mov
ficomps
rorb
arpl
pop
push
fdivrl
shl
push
bound
mov
mov
popfw
mov
pop
dec
out
pop
add
cmp
sahf
jnp
cmpsl
pop
jmp
cmpsb
lock
push
mov
gs
mov
loope
or
xchg
inc
mov
pop
mov
push
iret
mov
lods
jge
je
stos
or
into
cwtl
ljmp
das
fldl
push
ret
pop
into
arpl
ljmp
adc
shlb
cs
ljmp
cwtl
test
inc
gs
scas
mov
out
dec
pop
pop
jp
push
push
test
in
adc
jecxz
mov
jl
into
xor
inc
fcmove
das
rclb
mov
ljmp
jg
pop
mov
std
insl
negl
imul
sub
out
sub
pop
lret
push
inc
daa
movzwl
xor
fiadds
sbb
rolb
leave
leave
push
and
adc
movsl
push
repnz
das
jmp
lock
lret
repnz
jno
push
inc
je
lock
iret
or
lock
lea
je
sub
mov
mov
in
divb
lea
and
cmp
and
jg
lahf
dec
aad
xlat
gs
pop
negl
loope
shrl
adc
cwtl
inc
pop
mov
fstpl
bound
mov
sbb
mov
jo
gs
rcl
cli
cwtl
add
push
mov
mov
loopne
sbb
lret
or
cmp
or
test
ret
pop
sub
scas
sbb
das
test
add
adc
pop
cmp
push
aad
mov
push
repnz
js
adc
out
adc
loope
iret
out
mov
in
nop
jnp
hlt
push
enter
pop
and
cs
mov
adc
insl
and
xchg
jge
and
sahf
or
test
es
push
into
sbb
mov
sbb
or
push
add
mov
test
sub
push
cmp
clc
jmp
sbb
iret
mov
cmpsl
popf
fisubl
stos
push
sub
pop
shll
mov
hlt
dec
mov
cmc
sub
clc
xchg
cmpsb
xchg
cmp
sub
add
push
cld
cld
das
sbb
test
pushf
fadds
push
js
data16
lea
mull
outsl
mov
cld
pop
fimuls
or
inc
add
adc
mov
sub
pop
add
jnp
xor
test
lcall
dec
int
nop
addr16
sbb
jno
or
push
pop
mov
push
inc
iret
sbb
je
scas
loope
dec
sub
sub
mov
sub
leave
push
scas
pop
insb
pop
and
jge
cltd
jg
addb
xchg
mov
cmp
adc
inc
mov
subb
out
insb
adc
sub
jl
inc
add
cmpb
adc
in
adc
sub
push
mov
stc
xchg
popa
prefetchw
or
bound
sbb
sub
mov
mov
movsl
jl
and
and
fistps
call
rorb
or
push
pop
fdivrl
cmpsl
mov
dec
es
je
hlt
push
add
mov
xor
adc
pusha
or
aad
ljmp
push
jmp
lret
imulb
mov
push
repnz
mov
sub
aam
dec
cltd
xchg
ljmp
fisubrl
xor
mov
pop
cmpsl
pop
mov
sbb
inc
jo
dec
jns
arpl
mov
inc
rorb
inc
shl
add
negl
mov
jb
rcll
stos
adc
jecxz
cwtl
push
and
jle
sub
loop
xor
cwtl
mov
mov
pop
pop
sbb
arpl
out
int
add
movl
xchg
fsubrs
aam
jb
and
shl
mov
push
out
in
sub
filds
aas
pop
dec
js
cmp
jge
and
and
bnd
sti
out
jbe
cmp
inc
bound
les
mov
outsl
jecxz
mov
adc
stos
lret
aam
push
pop
pushf
hlt
in
mov
xchg
jle
xor
adc
xchg
mov
sbb
clc
scas
or
lds
add
call
loopne
cmp
pusha
lret
scas
out
mov
mov
fnstsw
dec
mov
adcb
scas
int
negl
adc
mov
and
testl
out
xchg
imul
and
mov
push
fisubrs
jns
xlat
insb
iret
lock
movsl
aaa
arpl
push
jl
pop
popa
jg
push
dec
mov
pushf
cmp
mov
and
pop
lock
mov
mov
lds
lods
out
xor
mov
jge
adc
icebp
inc
dec
arpl
pop
push
xchg
jne
push
dec
mov
imul
pop
js
sub
out
je
mov
sarl
ss
es
mov
xor
mov
stos
ret
dec
lret
test
or
and
popa
adc
fmull
idivb
repz
adc
or
psllq
jg
mov
mov
mov
sti
cs
sbb
or
out
jmp
addb
jecxz
push
jo
pop
push
lea
jmp
out
jns
mov
iret
mov
push
xor
mov
push
cmp
out
adc
scas
jecxz
bound
dec
inc
lret
jbe
lods
inc
cs
mov
popf
test
mov
mov
jmp
aad
xchg
push
push
jle
adc
pop
push
mov
or
mov
stc
ret
test
mov
shlb
mov
push
shlb
and
mov
cmp
lock
or
movsb
mov
or
pop
jmp
popf
dec
push
dec
aas
das
cmpsb
pusha
insb
push
mov
sbb
push
out
inc
clc
jo
notb
jbe
fsubs
xor
push
dec
std
test
xchg
pop
out
stos
dec
scas
arpl
xchg
and
dec
and
push
idivl
mov
mov
aam
mov
adc
iret
xchg
jns
xlat
push
mov
dec
pop
loopne
call
daa
jb
adc
push
ficoml
adc
jae
xlat
pop
cmp
sub
push
fistpll
sub
scas
repnz
fcmovb
out
adc
sub
or
movsl
dec
and
movsb
jle
push
lods
loop
mov
jns
mov
adc
mov
hlt
hlt
mov
rorb
fisubl
bound
xor
sub
dec
test
cwtl
das
mov
or
movsb
jg
and
add
mov
and
mov
sbb
out
cmp
adc
cli
pop
insb
or
mov
xor
rcrl
jbe
mov
sbb
int3
popa
xor
ror
and
or
or
sti
jbe
jmp
inc
mov
jae
scas
dec
dec
out
lea
cmp
std
add
dec
xchg
mov
imul
mov
sbb
and
sub
inc
cld
and
stos
js
add
in
xchg
mov
iret
and
push
test
dec
xchg
and
inc
push
add
movsl
add
je
push
push
jae
inc
xchg
add
pusha
pop
out
mov
cmp
dec
mov
cmpsb
gs
xor
das
jbe
cmc
xor
nop
dec
add
dec
ljmp
jno
add
xchg
cwtl
and
push
add
sub
push
cwtl
cld
shl
cmp
lcall
sub
fcoms
dec
or
mov
mov
idivl
addr16
mov
push
jecxz
fcmovb
sahf
mov
mov
bound
enter
sti
xor
sahf
xchg
shlb
cwtl
xor
ljmp
mov
dec
cli
orb
and
js
sbb
xchg
inc
push
test
jmp
mov
add
sbbl
ficoms
test
dec
inc
insb
sti
dec
das
dec
mov
mov
lods
iret
xor
scas
mov
mov
push
push
adc
test
mov
out
add
cld
cmp
xchg
stos
mov
xchg
jmp
mov
push
mov
and
or
popf
mov
popa
pop
cmp
loopne
xchg
fdivs
cmpsb
andb
test
out
fstl
imul
scas
sub
rorl
sbb
or
jbe
ror
or
test
dec
pop
fistps
lods
sbb
add
xor
clc
dec
mov
adc
testl
and
subb
aam
mov
adc
jmp
push
mov
xor
stos
sub
stos
je
in
movsl
mov
test
push
mov
adcb
xchg
call
push
sbb
shl
stc
mov
cmp
mov
ds
jno
jns
sbbb
cld
jg
mov
and
sahf
jnp
popa
or
sbb
sub
mov
push
clc
loop
loopne
lea
sub
lret
jne
xchg
inc
hlt
fidivs
pusha
and
fs
pop
aaa
in
dec
je
pop
fs
sbb
xchg
jo
lret
daa
cmpsl
adc
push
sub
out
push
js
adc
jbe
icebp
call
mov
and
xor
enter
add
clc
lret
dec
adc
and
into
push
fwait
dec
fwait
xchg
mov
push
insb
rcl
lcall
cmc
outsl
push
pop
dec
rcrb
popa
and
add
xor
sub
jae
sbb
pusha
int3
outsb
adc
mov
xchg
ljmp
add
stos
popa
adc
insl
inc
aas
inc
adc
in
mov
scas
repnz
xor
cmp
push
and
adc
jb
or
ret
or
dec
xchg
sahf
add
dec
adc
inc
mov
push
sub
lcall
repnz
gs
mov
push
outsb
pop
lahf
push
mov
push
inc
outsb
mov
in
mov
aas
fildll
or
xchg
sub
lods
sub
das
pop
sbb
cmc
jns
jl
icebp
mov
push
aad
es
sub
add
movsb
xor
xlat
pusha
cvtpi2ps
rcll
hlt
ljmp
fstpl
push
cmp
add
sub
mov
aam
lock
mov
add
dec
jns
jns
jns
mov
jg
fisttpl
mov
sbb
in
jle
scas
push
mov
xor
cmpb
adc
aad
dec
mov
out
arpl
lods
leave
data16
ret
js
jno
dec
mov
jbe
mov
or
add
xchg
jecxz
inc
in
in
xor
fwait
cmp
adc
and
push
push
sbb
cli
cwtl
out
sub
sarl
pop
in
mov
push
push
mov
mov
push
cwtl
negb
xlat
adc
jecxz
pushf
pop
gs
hlt
push
add
cmp
pmullw
cwtl
out
popa
cli
mov
sub
push
das
rolb
pop
insl
movsl
adc
cli
sbb
jb
jmp
mov
or
adc
jns
stos
js
cmpsb
push
jecxz
in
stos
sub
shlb
xorb
fs
subb
inc
push
sub
iret
jp
mov
addr16
jp
aad
dec
fwait
push
mov
inc
into
icebp
push
mov
scas
lret
iret
pop
adc
mov
push
xchg
jle
ja
dec
sti
mov
sub
shlb
faddl
inc
cwtl
jbe
je
push
pop
xor
clc
push
lret
xchg
rcr
push
pushf
fldt
popa
dec
dec
int3
add
xchg
xor
imul
mov
imul
insl
lret
or
popa
ret
sbb
shl
fimull
or
imul
and
sub
imul
xchg
fdiv
stos
loope
mov
inc
cmp
xchg
sub
stos
fucom
jnp
pop
lea
jge
test
repz
arpl
test
inc
faddl
notb
popf
push
mov
push
mov
addr16
call
inc
push
and
xor
and
jmp
mov
in
rcrl
or
mov
adc
sbb
xchg
fnstcw
push
jb
daa
xlat
adc
jle
or
or
xor
inc
es
xor
push
mov
int
or
lods
fstps
sub
mov
ret
jnp
rolb
cltd
xchg
xor
in
mov
icebp
push
rcll
out
jb
fld
sahf
xchg
aam
and
sub
fwait
and
mov
mov
lods
mov
shl
or
aam
test
xor
es
lcall
scas
nop
imul
mov
mov
pop
lcall
mov
and
cmpsb
dec
adc
jo
jge
or
mov
out
jl
xchg
mov
ja
sbb
mov
sub
dec
pop
push
das
and
fistpl
jle
mov
sub
mov
rcrl
fwait
cmp
mov
mov
lods
fs
iret
mov
cmp
push
dec
ss
pop
inc
fmuls
insl
mov
cwtl
jge
xor
je
lret
fs
out
dec
sbb
loop
enter
sti
mov
mov
hlt
push
rorl
repnz
in
test
dec
jg
lods
and
jle
xchg
pushf
pushf
cmc
cmp
insb
xor
aad
shrb
imul
in
in
xor
pop
pop
lcall
ljmp
aad
mov
add
push
jns
out
cmp
sub
push
sbb
out
das
mov
xchg
cmp
addr16
aaa
addb
call
mov
cs
arpl
inc
pop
in
mov
shlb
test
pop
xchg
inc
mul
arpl
aas
pusha
mov
or
add
adc
loop
repnz
and
push
pop
mov
test
dec
mov
bound
aas
inc
rep
movsl
bnd
push
fnstsw
mov
inc
imul
stc
pop
enter
daa
sbb
sahf
or
iret
fiadds
test
cmc
pop
leave
and
fbstp
add
adc
jbe
test
inc
sbb
mov
inc
mov
add
pop
repnz
mov
jmp
stos
inc
dec
cmp
in
lock
adc
mov
sbbb
or
inc
add
jns
int3
mov
sbb
jae
data16
jbe
push
and
decl
dec
mov
inc
scas
or
es
fcoml
ret
cwtl
sub
mov
cmp
jecxz
scas
push
or
xchg
xchg
or
sub
je
adc
into
sbb
nop
fcoml
pop
lcall
xlat
cmc
mov
iret
int3
xorl
or
movsl
dec
mov
ds
std
cmp
jbe
repnz
xor
fdiv
icebp
jg
pop
mov
lds
iret
fidivs
inc
lock
in
dec
out
loop
sbb
mov
sub
jmp
nop
sub
adc
outsb
rcrl
mov
mov
cmp
sbb
xchg
stos
cltd
jo
roll
lahf
imul
sbb
mov
and
mov
movsl
xchg
in
lcall
js
adc
and
jne
sbb
or
out
shrl
mov
sub
dec
lret
in
lahf
inc
push
inc
xor
popf
cli
inc
lea
dec
rorb
ds
sub
pop
js
add
or
aas
add
rcrl
ficomps
mov
iret
insl
adc
and
out
ret
dec
adc
sti
adc
xchg
pop
pop
test
or
sbb
or
out
adc
and
cmpsl
cmp
mov
push
pop
cmp
add
in
jno
jo
ljmp
mov
inc
sarb
clc
cwtl
and
mov
sbb
dec
mov
cmpsb
shl
movsl
mov
cmpsl
push
lods
sbb
fadds
pop
fwait
adc
fldenv
test
mov
mov
xchg
das
inc
mov
mov
push
push
or
mov
and
pop
inc
stos
push
int3
rcll
ss
imul
or
insl
fadds
jp
push
jae
jae
test
cmp
sbb
pop
in
mov
xchg
aas
add
mov
pop
cmp
pop
mov
push
mov
sahf
lea
ret
inc
gs
inc
daa
imul
jbe
dec
xor
xchg
jg
out
sub
loope
jbe
outsb
mov
mov
add
cwtl
jp
inc
cmp
int3
movsb
adc
mov
mov
sbb
mov
add
cmp
stos
in
insb
mov
ds
inc
and
scas
ja
inc
xchg
mov
imul
dec
lret
pop
insb
cld
sub
js
mov
aaa
jmp
movsl
push
push
rolb
arpl
jecxz
xchg
and
jle
dec
cmpsl
imul
data16
push
pushf
xchg
add
and
or
fidivrs
ficomps
adc
aas
add
push
xchg
cmp
dec
and
push
popf
push
sbb
and
cmp
addr16
xlat
dec
in
mov
les
add
bound
add
jmp
adc
lock
loop
xchg
pop
lods
push
loope
mov
sbbl
bound
das
or
or
sbb
out
ljmp
insl
adc
add
mov
dec
in
jmp
sbbb
divl
push
mov
in
lcall
mov
ljmp
lret
stos
lock
inc
out
fisubl
outsl
mov
and
xchg
pop
sbb
les
pop
lods
mov
cmp
or
pop
adcl
mov
xor
fstp
lods
bound
adc
movsl
cmp
lods
imul
cmp
lret
lock
mov
jne
or
lods
mov
xor
dec
bound
cmp
out
in
nop
mov
mov
es
pop
and
out
jo
mov
bound
rorl
push
out
dec
adc
jle
loop
jne
jnp
int3
fwait
rolb
bound
rorb
add
js
push
mov
sub
push
cmp
cmp
adc
mov
cmp
lcall
ja
rcrl
cmp
xlat
xor
jl
and
pop
pushf
xchg
sub
cmc
jb
scas
mov
imul
lret
addr16
imul
sub
cmpsl
hlt
xchg
lret
loopne
cld
sub
negl
test
xor
pusha
clc
xchg
mov
adcl
cmpb
fbld
push
nop
cmp
pop
cld
aas
jmp
lahf
xchg
mov
push
sarl
and
push
pop
jl
sti
pop
xchg
popf
insb
pop
sahf
or
loope
test
popf
pop
aad
out
mov
sbbl
cmpsb
lcall
cltd
xchg
jg
movsl
in
in
xchg
pop
out
out
pop
mov
inc
jno
lret
push
xchg
sbb
mov
push
sbb
mov
sbb
pop
vaddsubpd
daa
sbb
fidivrs
mov
jmp
loope
xchg
mov
push
stos
clc
aaa
aas
ja
in
xchg
movsl
cmpsl
iret
pop
aaa
aas
mov
push
je
in
adc
add
xor
mov
scas
add
ret
bnd
xchg
test
dec
loop
aaa
stc
out
mov
fs
inc
pop
adc
inc
das
pop
sbb
mov
sar
pop
jae
movl
repnz
mov
fs
xorl
xor
pop
jecxz
fstpt
mov
xor
pop
fldcw
and
xor
mov
cs
test
jb
lret
or
movsl
in
xchg
aad
xlat
movl
test
bndldx
push
inc
jno
xor
std
iret
adcb
insb
bound
cmpsb
std
push
dec
popf
jbe
mov
add
int
jecxz
pop
sub
push
stc
out
lahf
cmp
push
jns
mov
negl
jecxz
xor
add
inc
inc
hlt
loop
sub
pusha
lods
out
mov
imul
mov
and
mov
pop
xor
js
test
or
xchg
add
fisubs
in
rcll
mov
mov
mov
iret
sti
sub
sbb
and
mov
roll
inc
icebp
sub
movsl
lret
mov
shrb
xchg
enter
mov
xchg
loop
scas
or
ja
ja
js
fcmovnbe
leave
je
pop
popf
mov
dec
addl
pop
push
pop
inc
adc
mov
inc
stos
sbb
jo
sbb
addr16
test
xor
and
jb
mov
test
sbb
xor
dec
xor
xor
ucomiss
push
mov
ja
lock
push
es
stos
lds
test
clc
leave
dec
mov
mov
sti
aas
mov
mov
dec
in
ds
pop
and
in
imul
mov
cmp
jbe
in
add
in
cs
cmpsl
xchg
test
sub
sahf
cs
lahf
inc
lcall
xchg
je
cld
xor
jb
lcall
loope
push
cld
in
mov
add
cvtdq2ps
xor
cmp
dec
cmpb
rcll
push
rcl
mov
and
adc
add
mov
stc
lea
add
dec
dec
xchg
ljmp
inc
push
jb
repnz
cmpsb
and
shll
jl
push
push
push
cmp
cmp
jle
cli
cld
inc
pop
jns
pop
pop
lock
cmc
ss
push
ret
adc
hlt
pop
sbb
gs
jmp
mov
dec
xor
cmpsl
xchg
inc
enter
cmc
mov
outsl
cmpsb
or
xchg
lret
push
outsl
sub
ljmp
dec
add
cmp
jne
xor
incb
repz
xchg
into
push
pop
movsl
addr16
and
mov
movsb
divb
rolb
jle
jp
loop
xchg
arpl
xorl
pusha
in
test
fldenv
add
dec
ljmp
adc
out
shrb
add
pushf
fcmove
bound
add
push
pop
sub
push
addr16
inc
ljmp
fidivs
push
adc
ficoml
mov
flds
jbe
push
aaa
or
das
push
xchg
cmpsl
push
push
aad
shrb
scas
pusha
cmp
xchg
cmpsb
in
imul
mov
leave
lret
es
sbbb
arpl
jbe
scas
inc
stos
jo
mov
ljmp
daa
dec
and
lods
out
fcmovnbe
push
dec
sbb
xlat
or
insl
jg
cs
icebp
cltd
ja
mov
jge
ljmp
mov
repnz
push
popf
movsb
hlt
dec
jne
pop
dec
mov
divl
push
imul
cltd
int3
movsb
adcl
out
sbb
fbstp
sub
mov
push
insb
bound
shlb
xchg
icebp
push
xlat
adc
add
cwtl
ljmp
gs
fwait
xorl
dec
sbb
cli
mov
mov
push
xchg
sub
addr16
push
or
push
mov
aaa
inc
mov
mov
and
mov
add
mov
add
test
out
xor
rcr
add
sub
sbb
push
arpl
xchg
ret
xchg
sti
aas
add
fidivs
lods
pop
mov
jae
mov
leave
das
aad
mov
mov
scas
sub
fcmovu
jno
mov
push
cmp
pop
les
cmp
cmp
aam
cmp
fidivs
fucomi
insb
adc
or
pop
or
mov
sub
jle
clc
pop
dec
fbstp
dec
push
sbb
in
nop
into
pop
out
cs
mov
daa
mov
int
aad
mov
frstor
pushf
scas
sub
sub
dec
cmpsb
and
sbb
test
addr16
inc
lea
mov
int
bound
dec
xchg
sbb
push
and
sbbl
cmp
sub
pushf
fnstsw
inc
xchg
mov
mov
pop
into
roll
test
icebp
cmp
or
mov
lahf
int3
icebp
jns
jl
add
mov
popa
push
cltd
in
lcall
loope
dec
inc
dec
add
arpl
mov
iret
call
mov
outsl
mov
and
inc
cmp
cmp
stc
fnstcw
pop
mov
jnp
jne
std
and
cltd
loopne
mov
int3
into
popa
or
inc
jno
adc
out
push
int
scas
jae
and
cmp
test
repz
xorb
data16
and
insb
inc
test
and
xchg
xlat
mov
sub
enter
and
fisubl
repnz
inc
aaa
pop
xor
icebp
cmpsl
lds
int3
xchg
daa
push
and
int
jno
int3
imul
stos
mov
inc
orb
xor
dec
ljmp
inc
jecxz
inc
mov
inc
pop
jo
inc
mov
pop
mov
push
icebp
push
es
test
pop
loop
popa
xchg
mov
adc
pop
aas
mov
sub
clc
testl
cs
xor
adc
outsl
inc
insb
add
aas
aad
xchg
cmp
mov
pop
test
cli
cmp
xor
icebp
pop
mov
ljmp
inc
and
push
dec
mov
dec
inc
addr16
out
fisttpll
sub
je
xor
pop
sbb
js
pusha
fwait
push
mov
imul
in
je
pusha
ret
out
nop
and
or
mov
push
in
mov
xchg
sbb
in
out
push
popa
inc
out
and
into
dec
test
cmp
pop
mov
test
mov
adc
pop
cld
jne
dec
mov
push
stos
and
jg
xor
jo
xlat
pop
or
ss
test
dec
dec
mov
pop
dec
mov
xchg
popf
stos
mov
std
dec
loopne
adc
xchg
jno
icebp
jns
call
sub
jne
mov
inc
ja
mov
lahf
dec
jne
jno
mov
mov
mov
repz
jge
int3
shl
test
sbb
scas
mov
scas
sub
jp
fimull
or
gs
roll
stc
sbb
fucomp
mov
pop
or
idiv
mov
ss
or
lods
lds
mov
mov
cld
cli
sahf
lea
jnp
sbb
and
jb
ret
adc
insl
sub
fisttpll
add
mov
pop
mov
push
aas
xchg
cld
inc
fisubrs
add
lds
call
insb
fisttps
shlb
adc
xchg
shrb
inc
sahf
stos
mov
pop
cmp
xor
push
push
les
dec
ja
das
push
cmp
xchg
dec
imul
jno
test
push
push
cmp
sub
cmpsl
mov
push
repz
mov
push
sub
jg
mov
pop
jae
data16
jbe
push
mov
roll
sub
jne
jg
xchg
lock
nop
scas
in
add
adc
inc
push
mov
cld
adcl
in
scas
cmp
shrb
cmpsl
sbb
out
sahf
push
cmp
fs
insl
sbb
repz
cmp
pop
xchg
in
bound
les
enter
movsl
test
or
or
test
stc
sub
mov
syscall
push
lcall
mov
inc
icebp
adc
imul
push
and
dec
fisubl
adc
jbe
icebp
fst
repz
mov
enter
pop
repz
ja
pusha
hlt
cltd
jbe
clc
xor
sbb
inc
cld
mov
push
adc
jecxz
clc
or
das
call
sbb
leave
adc
sub
or
or
in
leave
rorb
or
repnz
repz
dec
push
sub
gs
lret
lods
lds
shll
xor
bound
mov
int
xchg
push
xchg
test
mov
shl
jno
shlb
insb
xchg
dec
aam
cmp
repnz
or
sbb
cmp
inc
inc
mov
clc
out
dec
mov
sub
cmp
push
mov
and
jle
dec
add
imul
arpl
fwait
movsl
add
or
add
shll
dec
fsubl
jmp
mov
leave
flds
inc
fdivp
out
jnp
stos
inc
cltd
xor
shll
or
pop
xchg
pop
shrb
enter
fdivs
sbb
sahf
pushf
inc
shlb
loope
push
pushf
adc
pop
cmp
daa
xchg
mov
jae
jnp
mov
leave
in
arpl
cltd
out
sbb
js
push
enter
jp
xor
push
mov
dec
fbld
cmpsb
dec
test
mov
loop
and
aaa
out
lret
ds
sbb
andl
inc
ficomps
gs
and
fisttpll
call
or
dec
mov
test
popf
bound
add
loopne
insb
push
imul
xor
pop
dec
sbb
add
jb
jecxz
xchg
mov
mov
rolb
lea
cmpsb
push
mov
mov
inc
stos
add
outsl
inc
lret
cmp
xchg
dec
in
xlat
mov
inc
dec
mov
pop
lret
jp
dec
dec
adc
sbb
jle
sub
jbe
mov
push
ljmp
std
stos
nop
sbb
add
hlt
push
lahf
mov
test
xlat
pop
hlt
jmp
pop
dec
or
dec
ja
xor
stos
cmp
loopne
andl
jle
push
outsb
bound
cmpsl
shrb
adc
xchg
sbb
clc
xchg
popf
push
xchg
mov
pop
mov
mov
inc
inc
pop
adc
adc
inc
cli
ret
jle
lods
cltd
dec
pop
testl
push
out
cltd
mov
inc
dec
neg
jle
fldenv
fimuls
inc
rcl
mov
in
push
fnsave
enter
out
xor
fadds
rolb
sub
sbb
adc
stc
inc
mov
push
int3
mov
cwtl
lea
inc
loopne
mov
nop
mov
stos
out
sbb
adc
xchg
push
stc
into
jo
xchg
sub
sar
add
lret
inc
imul
in
pop
andb
xor
addr16
lea
push
jg
ficomps
scas
js
push
mov
adc
repnz
mov
cs
xor
or
jmp
clc
sub
pushf
lods
xchg
sub
inc
and
bound
push
movsl
in
movsl
mov
test
shrl
call
sub
popa
or
push
arpl
mov
test
xchg
aad
clc
out
mov
cmpl
mov
out
pop
mov
divb
sbb
movsl
ret
jb
sbb
jbe
fiadds
jge
jl
lock
outsl
les
jae
leave
pop
rol
xor
pop
sub
sahf
inc
mov
mov
lahf
out
out
sub
sub
or
dec
shll
pop
sarl
sahf
out
and
inc
mov
subl
gs
sub
cmp
andb
dec
cld
fsubrl
dec
inc
repz
xchg
sub
stc
stos
das
mov
lret
outsl
lods
adc
and
movsb
jae
sub
cmpsb
cwtl
jne
rcll
add
out
cli
ljmp
sbb
mov
jge
xor
inc
dec
mov
mov
inc
jne
stc
pop
pop
aad
inc
adc
and
or
outsb
loop
jecxz
mov
test
pop
cwtl
mov
call
xlat
call
aad
adc
stc
inc
mov
lcall
leave
mov
jg
out
scas
cmp
add
andl
xor
dec
push
sbb
cmp
sbb
or
xor
xchg
test
xor
pop
push
cmc
mov
insl
inc
push
jp
shll
pop
sub
sahf
cmp
mov
push
lods
cmpsb
push
icebp
daa
rol
cltd
jo
loopne
cli
adc
mov
dec
inc
and
dec
movsb
adc
imul
jp
addl
lret
cli
sar
out
inc
fidivl
push
or
jge
push
cltd
inc
jbe
je
lock
and
push
js
repz
or
and
sub
pop
or
sub
es
ljmp
lds
cwtl
and
dec
cmova
inc
hlt
lret
cmp
mov
jmp
out
jmp
xchg
inc
or
inc
cmpsl
popf
dec
incl
adc
push
lret
or
in
add
inc
lods
cs
ror
xor
lods
jno
mov
add
inc
jge
enter
inc
repz
sbb
inc
andl
adcb
iret
push
mov
push
jle
mov
xchg
outsl
push
movsb
jnp
stc
mov
loope
add
in
sbb
stos
xor
aam
mov
mov
pop
inc
sahf
sub
inc
jno
and
addr16
clc
jle
jecxz
mov
push
jbe
add
sub
mov
lock
sti
inc
shlb
icebp
mov
pop
xor
push
adc
cld
fiadds
dec
and
sub
xor
pop
sub
and
arpl
shlb
xchg
mov
xor
flds
ds
lock
pop
sub
xor
mov
data16
pop
in
sbbl
movsb
std
in
nop
jne
inc
push
xchg
mov
xchg
int
pop
imul
ds
sbb
sbb
jg
xor
push
push
pop
andl
outsl
jmp
insl
add
cmpsl
dec
xor
sub
pop
in
cmp
push
jb
insb
stos
xchg
into
sbb
les
sarb
xchg
out
or
fwait
bound
xchg
je
in
mov
and
sti
push
sbb
das
dec
aad
mov
jge
cmp
incb
movsl
lcall
push
jo
xor
test
or
outsb
cs
mov
icebp
std
mov
fwait
xor
and
hlt
inc
mov
or
xchg
and
or
sbb
lcall
push
sub
jno
ss
xor
dec
mov
aas
fcomps
mov
jg
js
test
clc
mov
add
out
lret
out
adc
mov
cmp
ret
lods
and
add
xchg
int
sub
fsts
add
scas
or
rcrb
out
in
test
repnz
xor
push
adc
push
inc
adc
addb
loopne
iret
lcall
lret
insl
or
or
int
fistpl
jmp
sub
adc
int3
mov
and
in
jbe
add
mov
add
movsb
fcomps
inc
adcb
push
fsubs
stos
call
ret
inc
popf
push
int3
ljmp
dec
test
fnsave
clc
or
push
cmp
cmc
dec
lret
in
cmpsb
pop
shll
sbb
add
dec
rol
gs
pop
lahf
cmp
pusha
gs
test
fcomp
dec
dec
cmp
mov
xchg
add
push
aaa
sbbb
push
rcrb
and
and
loopne
cld
test
pop
xor
movsl
popf
movsl
lock
push
sbb
jmp
mov
push
js
mov
cmp
call
enter
movsb
lahf
jbe
daa
jmp
shll
out
mov
ja
ljmp
rorb
cli
cmp
loop
bsr
sub
mov
sbb
loopne
insb
repz
jbe
jecxz
stos
mov
mov
or
iret
jnp
mov
or
adc
or
or
mov
inc
icebp
daa
sub
jnp
jp
adc
shlb
popa
cmc
sti
xchg
inc
test
es
pusha
mov
in
divl
sahf
push
mov
lds
pop
adc
das
mov
hlt
jns
imul
insb
inc
ret
ficoms
xchg
call
xchg
pop
mov
sbb
xor
push
clc
lods
mov
push
sarb
xor
or
push
ret
jae
push
mov
or
add
push
loope
mov
imull
inc
inc
mov
mov
scas
xchg
lcall
lea
repnz
data16
xchg
pop
cmp
cmpsb
into
jge
cmp
cld
cmp
es
sub
lods
shlb
ret
in
addr16
jbe
idivl
mov
mov
sub
push
mov
not
xchg
lds
jmp
call
or
das
lret
mov
xlat
js
cltd
popa
jecxz
xchg
xor
inc
pop
ret
in
loopne
call
pop
dec
mov
xor
test
pop
es
stos
jo
jl
loope
jl
iret
aam
inc
push
xchg
icebp
cwtl
out
outsb
out
inc
adc
out
mov
test
pop
enter
mov
pop
outsb
stc
aad
loope
cwtl
dec
or
cmpb
ficomps
adc
sub
jge
dec
pop
xor
movsl
lock
cwtl
int3
xchg
in
cmpsl
sub
aas
aaa
mov
push
aaa
sub
into
sete
dec
addr16
cmp
movsl
mov
push
xchg
pushf
mov
jmp
jge
aam
pop
jge
outsl
mov
fmul
sbb
cmp
repnz
push
rclb
add
xchg
and
icebp
in
gs
fs
rcll
outsb
or
lret
cmp
nop
ret
xor
int
jge
cmc
jmp
ja
subb
ja
xor
mov
pop
jbe
cmpsl
jno
rorl
fimuls
loope
lcall
std
fisttpll
adc
cmp
fisubrs
jae
fists
loop
inc
cmp
dec
mov
lods
repnz
pop
and
mov
cmp
fadd
adc
setp
pop
test
fnstcw
cmp
xchg
jmp
ss
out
out
jecxz
mov
mov
jne
sub
in
mov
pusha
sub
mov
call
jecxz
sbb
fbstp
or
ja
inc
movsl
dec
shl
jp
pop
fisttps
xchg
sti
in
out
lock
pop
add
je
cld
and
fldcw
mov
add
mov
pop
jo
daa
fsubs
int3
in
mov
addr16
aam
int3
mov
sbb
mov
jle
cmp
bound
pop
mov
fstpt
mov
dec
das
xchg
pushf
insb
cmp
sbbl
cmpsl
mov
lahf
loopne
mov
and
mov
mov
ss
out
arpl
xor
inc
push
dec
mov
jecxz
cltd
fists
sbb
addr16
or
pop
nop
mov
or
aaa
ja
mov
shlb
mov
bound
sbb
xchg
xchg
jle
testb
jnp
dec
pop
stc
inc
dec
dec
shl
xor
adc
jp
inc
pop
cwtl
in
inc
testb
fcmovnu
jecxz
iret
jge
fsubr
mov
xorb
mov
out
sbbl
xchg
cmp
and
lods
out
pop
ds
push
jp
dec
push
icebp
mov
cmp
imul
dec
lret
adc
inc
jle
add
mov
cld
pop
mov
add
daa
bound
jnp
fstpt
dec
xor
int
mov
push
cmc
mov
mov
xor
push
mov
sub
fcmovb
dec
fsubl
inc
stc
dec
jecxz
in
push
lods
test
stos
fstpl
adc
lret
test
xor
lahf
iret
insl
notl
in
adc
shrb
xchg
aas
mov
repz
push
scas
inc
push
and
shrb
dec
jns
mov
push
test
sub
test
mov
adc
daa
xchg
test
lret
repnz
in
scas
sbb
call
pop
push
or
mov
xchg
dec
cli
mov
fbstp
aas
rcl
jb
xor
lds
js
fnstenv
xchg
xor
es
out
sub
rol
adc
dec
adc
push
sub
cld
mov
arpl
mov
rorl
adc
sub
mov
les
lahf
dec
orl
out
jo
sbb
jecxz
push
sbb
scas
test
sub
push
mov
shll
lret
mov
lret
xor
push
mov
or
ljmp
jno
and
mov
or
into
jle
ret
nop
adc
or
cmp
in
lea
pop
fsubp
jae
outsb
add
stos
mov
fdivr
xlat
jle
cmp
mov
mov
shll
pop
adcb
in
inc
adc
iret
aad
repnz
pop
cmpsb
cmp
sbb
lea
dec
xchg
call
rolb
jge
out
inc
xor
sbb
cli
test
jg
add
dec
push
repnz
push
and
mov
dec
lret
std
scas
adcb
fucom
pop
push
outsl
jb
fcoml
or
int3
aas
pop
sbbl
idivb
es
lret
and
sub
adc
jp
dec
ret
aad
lahf
adc
fcmovu
imul
roll
or
lock
out
jno
or
lret
inc
push
cwtl
mov
lret
in
test
or
jae
or
cmpsb
sbb
faddp
inc
or
sbb
stos
aas
jo
stc
js
jns
fistpl
out
inc
dec
fbld
add
or
sbb
or
cmp
mov
test
test
xor
mov
sahf
inc
sbbb
inc
aaa
dec
testl
sub
add
push
idivb
cmp
xchg
add
dec
mov
cs
mov
loop
test
sbb
xchg
jmp
lret
xchg
xchg
das
imul
daa
enter
adc
and
ret
in
sbb
cmc
loopne
and
mov
repnz
jno
jmp
mov
inc
sub
sub
cmc
push
xchg
xor
jne
dec
pop
cli
push
roll
stos
pop
rclb
inc
cmpsl
lcall
sbb
aaa
sub
in
inc
mov
int
mov
pop
add
push
jo
mov
ret
jmp
pop
cmc
loope
int3
clc
fistpl
pusha
scas
xchg
xchg
xchg
je
or
ja
int
data16
jge
sbbb
jbe
orb
cld
push
mov
xchg
cmp
test
jl
pop
xor
movsl
push
xor
outsb
es
add
stos
jg
pushf
jnp
sbb
fcmovnbe
mov
or
push
movsb
pushf
jb
fdivrp
mov
xor
cltd
faddp
lahf
adc
push
popa
mov
pop
fistps
iret
and
fcoms
pop
out
push
pusha
push
xchg
sub
and
loope
cmc
fildl
jp
mov
aad
xor
out
test
or
addr16
aad
arpl
fs
dec
movsb
testb
push
hlt
cmp
sub
xor
or
sbb
or
imul
sub
and
sbb
xor
jmp
inc
cmp
or
in
or
repz
sbb
add
mov
or
jno
data16
ja
fistpll
dec
leave
test
mov
jne
xchg
bound
hlt
les
mov
mov
scas
imul
shr
loope
jne
push
jns
jae
mov
loopne
xchg
sahf
pushf
pop
add
sbb
jnp
shl
das
pop
les
mov
adc
mov
loop
push
sbb
add
inc
call
adc
push
dec
mov
xorb
sbb
and
cmpsb
sbb
cld
data16
add
sub
add
das
jg
mov
popf
aas
add
fwait
iret
cs
sub
mov
mov
mov
rorl
adc
sbb
scas
stos
cwtl
loope
jg
mov
jnp
rorb
mov
cltd
dec
cmp
bound
outsb
nop
push
adc
test
push
mov
mov
cmp
xchg
xchg
xchg
pushl
leave
lcall
cmp
push
and
sbb
sbb
inc
bound
hlt
aaa
adc
push
xchg
mov
pop
lret
pop
sar
mov
xor
mov
les
mov
fs
divl
sub
dec
add
cs
mov
pop
inc
lret
pop
dec
add
insb
int
ljmp
decl
mov
sti
mov
lods
push
addl
jae
fcompl
pusha
mov
fiaddl
jo
jp
mov
pop
mov
sub
mov
fnclex
xchg
mov
int3
mov
jo
shrl
mov
jl
or
movaps
sub
aad
movsb
pop
std
adc
stc
std
cs
pusha
stos
pop
xchg
or
mov
sub
xor
and
push
pop
fldt
outsl
into
dec
clc
fs
je
mov
outsl
mov
xchg
mov
ja
sbb
adc
cmp
mov
ds
mov
pushf
xor
dec
sub
jp
push
mov
fdivl
or
fxch
jp
cmpsb
push
mov
sub
add
je
sub
dec
add
xchg
push
push
dec
pop
mov
outsb
push
xchg
jbe
xchg
cld
push
lret
imul
pop
mov
ds
out
data16
out
aaa
sub
jmp
movsl
aaa
in
sub
mov
ljmp
int3
push
mov
and
push
hlt
push
or
sub
mov
mov
inc
add
les
out
ret
and
cmc
and
ja
xchg
scas
jmp
addb
mov
mov
div
or
scas
or
test
lahf
adc
out
sbb
jecxz
mov
stc
outsb
cmpsb
push
jmp
aad
jg
popf
loop
sbb
in
sub
dec
dec
jne
cmp
mov
jns
pop
test
or
mov
dec
fwait
mov
aas
sti
xor
add
lods
imul
xlat
pop
sub
out
mov
shr
ljmp
fwait
mov
int3
out
outsl
or
jae
push
ja
push
call
mov
or
xor
jb
jnp
pop
mov
insb
add
bound
adc
mov
mov
or
push
test
rorl
in
out
sub
and
fsubs
pop
cmp
fisttpl
pop
rcr
inc
add
mov
mov
pop
jns
adc
mov
sub
daa
jbe
repz
xchg
cmp
repnz
mov
mov
dec
dec
inc
dec
icebp
fcoms
add
rcrl
add
and
or
bound
and
inc
xchg
ljmp
stos
add
or
js
mov
out
pop
jl
fsts
sub
das
ljmp
aam
push
dec
stos
clc
ss
inc
and
cwtl
mov
outsb
jbe
adc
inc
mov
fmuls
xor
mov
dec
clc
cwtl
push
cld
in
mov
insl
ficompl
es
int
lgs
sub
scas
arpl
addr16
out
mov
movsl
jbe
daa
dec
mov
or
xchg
dec
into
inc
sub
int3
cmpsl
jmp
jns
pop
pop
scas
mov
sub
adc
cmpl
mov
xor
int3
into
add
xor
sub
cmp
lret
and
rol
cmp
sahf
pop
repnz
and
cli
ds
mov
push
jae
roll
mov
push
adc
lea
push
popa
pop
push
pop
movsb
xor
push
cltd
add
mov
mov
aaa
adc
sub
dec
pop
dec
lcall
jno
shlb
clc
loope
jns
dec
adc
adc
ret
nop
and
in
sub
lods
in
sti
insb
cmp
adc
cmp
xlat
out
add
mov
cmpsb
xchg
imul
cmc
fisttpl
or
loope
hlt
rcrl
push
sbb
push
add
ficoms
sub
imul
call
xlat
fcompl
outsb
mov
pop
sbb
ror
lcall
pop
std
jle
in
adc
fwait
xchg
inc
mov
sub
cs
mov
push
fadds
in
jne
cs
ljmp
pop
add
mov
fwait
addr16
jb
in
sbb
in
insl
in
mov
pop
inc
mulb
ret
dec
cld
lret
add
mov
popa
jns
outsl
fcomi
orl
xchg
inc
jne
jmp
gs
add
lods
lds
and
frstor
pop
jo
xchg
data16
testl
inc
push
andb
xor
xchg
xchg
imul
cltd
pop
lods
adc
adc
push
mov
pop
je
xor
repz
stc
or
mov
jle
pop
mov
loopne
dec
inc
icebp
xchg
or
adc
jbe
cld
clc
push
or
ret
lcall
movsb
sbb
mov
push
imul
pop
jecxz
ficoms
aaa
daa
lret
cmp
mov
adc
das
push
loopne
inc
jl
mov
cmpsb
mov
rorb
pop
inc
aam
es
sbb
jns
or
les
lock
scas
js
pop
fildll
cmc
aas
out
adc
or
cs
popf
out
lahf
fsubr
pop
pop
jecxz
fistps
mov
mov
mov
adc
repz
ljmp
adc
xchg
shr
xchg
lret
sbb
clc
xchg
movsl
mov
mov
fbstp
jmp
add
out
sub
dec
dec
pop
jmp
fldcw
dec
dec
rcrb
mov
std
mov
repnz
das
mov
mov
sbb
fadds
fwait
ds
adc
fstpl
dec
push
add
jbe
jo
add
and
and
lds
xor
in
jp
pop
cmp
or
sub
cmpl
scas
xchg
mov
lock
dec
add
lcall
inc
dec
fcomip
push
dec
mov
mov
inc
cmpb
popa
inc
pop
mov
pop
fs
sbb
adc
mov
je
stos
mov
nop
sub
pop
mov
cli
stc
dec
test
pop
mov
in
std
inc
sub
xchg
mov
jb
cmpsl
pushf
adc
mov
and
or
xor
sub
jmp
cmp
stos
add
xlat
xlat
repnz
xlat
test
aam
and
test
pop
aas
dec
xor
jecxz
out
mov
xor
jmp
in
cmp
scas
sub
add
mov
xchg
call
fisubrl
ja
xchg
mov
xchg
cld
aas
cmp
gs
push
jae
adc
mov
test
shr
mov
xchg
sub
idivb
xchg
rcrl
arpl
int
je
scas
xchg
jle
sti
jp
popa
mov
and
push
pop
sti
jg
jmp
stos
stos
nop
ds
xchg
fisubrs
test
icebp
flds
cmp
xor
jnp
cmp
out
data16
ljmp
and
aas
movsb
jo
loop
daa
mov
in
mov
out
push
mov
push
in
test
inc
mov
inc
test
xchg
push
xchg
bound
incl
leave
fdivp
adc
xchg
fmuls
inc
les
es
xchg
sub
repz
xor
push
in
and
mov
pusha
lahf
mov
push
push
ffreep
cwtl
adc
pop
or
and
movsb
mov
jb
shr
subb
jbe
in
mov
imul
push
mov
mov
lret
mov
push
pop
sti
popa
jl
out
std
jnp
mov
outsl
arpl
fmul
dec
cltd
pop
cwtl
ljmp
pop
dec
loopne
and
pop
sbbb
xchg
push
lret
mov
mov
jmp
test
pop
mov
sbb
mov
enter
jo
xlat
outsl
mov
dec
sbb
ret
lret
out
push
xchg
xchg
int
jbe
fucomi
pop
dec
add
pop
xchg
divb
sarb
inc
cltd
pop
stos
movb
jb
cmp
jg
pop
xchg
and
movsb
push
loop
and
pop
adc
and
add
mov
pop
ffree
leave
cmp
mov
aam
mov
outsb
dec
dec
pop
stc
sahf
shlb
inc
mov
in
andl
or
push
sbb
out
test
mov
mov
jle
fnstsw
mov
mov
push
rolb
pop
fcomip
mov
jnp
jno
test
and
sub
jae
out
or
inc
pop
daa
xor
testb
sub
adc
dec
push
push
dec
xchg
jp
pop
loop
push
iret
lahf
sbbl
cmp
mov
call
sahf
ret
pop
inc
mov
sbb
sub
pop
rcl
mov
aam
pusha
pop
sahf
ret
sarl
mov
insl
add
mov
hlt
add
cmpsl
xchg
insl
mov
cmp
pop
adc
cwtl
lock
jmp
sbb
cld
sub
and
add
and
xchg
jg
mov
test
out
aas
fs
pushf
and
adc
orl
xchg
xchg
ret
mov
xacquire
lret
in
mov
cwtl
loope
and
or
jae
push
call
ret
pop
xchg
mov
sbb
push
fwait
test
pop
and
rolb
sub
push
jge
inc
incb
imul
mov
xlat
notb
xchg
xor
and
or
in
mov
into
daa
lret
pop
push
rol
cmpsb
sbb
leave
decb
cmp
adc
pop
ret
repnz
ja
daa
dec
cli
xor
stos
mov
lods
insb
xchg
pop
sub
daa
pusha
dec
sbb
cmc
dec
cmp
pusha
mov
lret
lds
jl
imul
cltd
add
cld
and
inc
stc
inc
fadd
faddl
in
mov
push
into
sub
dec
inc
gs
push
mov
int3
shrl
inc
mov
mov
adc
mov
push
inc
jp
mov
inc
cmp
cmp
je
pop
sub
jne
aas
push
pop
lret
inc
pop
pop
pop
lret
mov
movsb
xlat
cmp
ss
insb
stos
mov
pop
sahf
inc
repnz
jg
push
push
push
lret
outsb
jge
iret
cwtl
lret
lret
and
mov
jbe
pop
add
and
stc
pop
dec
push
xchg
adc
iret
scas
bound
mov
adcb
push
fisttps
inc
jl
sub
dec
movl
mov
into
xor
jbe
fcoml
mov
cli
mov
add
cs
mov
incl
js
lahf
jb
pusha
xor
jg
pop
xor
cmp
sub
mov
cli
int3
rcll
pushf
pop
ja
pop
dec
out
shlb
or
lds
xchg
cwtl
imul
push
mov
adc
lods
aam
push
jge
push
aam
mov
rcrl
lret
dec
inc
push
lcall
add
addr16
lea
push
ds
push
ret
loop
rcl
push
or
push
push
or
mov
push
pop
mov
lahf
mov
pop
cmp
sub
mov
sbb
inc
pop
jae
or
dec
xlat
mov
pxor
test
in
jecxz
jmp
loopne
dec
std
stos
test
jle
icebp
out
mov
outsl
add
test
iret
insl
shr
add
xorl
pop
pop
xor
icebp
in
jo
shll
out
in
in
mov
ret
xchg
mov
pop
in
into
sub
xchg
dec
sahf
mov
xlat
jnp
sti
sbb
jno
push
les
jno
loopne
sahf
or
fidivrl
imul
stos
jns
sub
push
lods
aad
jp
pop
sub
push
sbb
shll
test
lahf
cmp
rcrl
inc
mov
cmpsb
pop
and
inc
lods
roll
xchg
popa
cmp
and
test
fs
adc
stos
add
xor
sub
data16
iret
ss
out
cmc
add
mov
test
sbb
js
xchg
adc
int3
and
xchg
test
lds
jno
jp
push
dec
shl
mov
mov
pop
mov
and
sub
push
je
pop
loope
subl
cmp
shlb
out
and
stos
pop
inc
cmp
dec
shr
dec
xchg
clc
xor
bound
xchg
lock
push
lock
pop
stc
cmpb
test
add
mov
leave
mov
mulb
xchg
lods
pop
shrb
movsb
sub
fists
dec
sub
mov
pop
add
add
push
and
dec
jp
stc
sub
idivb
xchg
mov
push
sahf
pop
or
jo
repz
cmc
mov
fisttps
pushf
lock
ds
imul
sbbl
test
xor
leavew
dec
es
mov
mov
shlb
enter
fstpt
test
inc
fnstsw
xor
jg
xchg
mov
rcll
dec
roll
jmp
fidivl
pop
jecxz
lret
in
pop
loope
lcall
in
inc
int3
in
push
sbb
das
jl
mov
dec
cs
cli
mov
sub
sbb
xor
mov
inc
cmp
imul
mov
cmp
test
add
sahf
cwtl
jae
es
je
pop
or
jb
jge
jmp
sbb
cltd
mov
fisubrs
xchg
jno
test
test
inc
syscall
jl
xor
lahf
stos
jp
xchg
jnp
rolb
mov
jbe
push
xchg
dec
and
xchg
fnstcw
aaa
sbb
adc
stos
out
das
xchg
cmpsw
mov
xchg
xchg
xor
outsl
cld
and
add
push
mov
or
xchg
sbb
mov
ficoms
clc
mov
fisubl
dec
jle
dec
in
adc
push
sub
scas
movsb
mov
int
rcrb
cltd
mov
pop
push
test
xchg
sub
es
cmp
push
stc
push
mov
lahf
lods
mov
aam
mov
or
call
cmovbe
xchg
loopne
and
shrl
push
ljmp
mov
sbb
mov
or
ja
lea
popf
lahf
clc
test
push
adc
movsb
and
sub
cmp
xchg
imul
inc
or
or
test
jbe
out
aas
dec
sahf
mov
scas
xor
inc
stos
mov
repz
inc
and
xchg
pop
mov
imul
outsb
sbb
mov
inc
hlt
lahf
push
lods
xor
add
push
pop
jbe
jae
or
and
out
fs
pop
or
cmpsl
sbb
or
inc
push
xor
pop
cwtl
inc
xchg
adc
sahf
stos
jg
js
mov
pop
adc
jl
out
les
adc
pop
lcall
add
push
js
sahf
xchg
adc
and
call
jns
push
sub
xor
sahf
aam
fisttpll
adc
pop
repz
leave
mov
shrl
out
lcall
cmpsl
or
mov
lcall
in
push
mov
sub
popa
xor
fsubp
dec
outsb
dec
mov
inc
mov
add
xchg
mov
inc
jecxz
dec
divb
dec
sbb
add
sub
das
lds
and
sbb
jb
into
push
jle
mov
outsb
sub
xchg
rcl
lret
inc
dec
imul
mov
mov
in
subl
push
add
mov
imul
enter
jmp
enter
arpl
addr16
les
sbb
mov
add
jmp
movsl
movsb
scas
in
roll
negl
gs
add
mov
js
mov
cli
stc
dec
dec
push
vhaddpd
aas
pop
sub
push
push
out
aad
inc
jp
out
pop
mov
mov
adc
mov
dec
dec
sbb
fidivs
imul
sub
push
and
cld
iret
enter
push
pop
ret
mov
cmp
aaa
lret
lret
stos
jmp
sub
clc
and
sbbb
pushf
das
in
scas
mov
jge
jb
fdivr
adc
cltd
shl
inc
mov
add
in
shrb
fwait
scas
dec
xor
adc
cmp
sbb
fsts
xlat
adc
or
jl
dec
inc
or
sti
jnp
scas
jl
je
mov
and
mov
xlat
push
push
stc
jecxz
sub
sbb
lock
xor
push
stos
out
arpl
push
into
push
xchg
loop
push
addl
out
mov
mov
mov
adc
mov
xor
inc
xor
lods
or
testb
adc
mov
or
inc
dec
adc
mov
and
out
pop
mov
sbb
addb
leave
vunpckhps
push
dec
sbb
js
daa
inc
push
sub
pop
scas
gs
fstps
leave
cwtl
leave
add
repnz
cmp
push
lcall
cmp
mov
sub
sti
sub
and
rcrl
xor
js
add
adcl
jns
mov
and
call
in
jl
das
mov
xchg
imul
leave
enter
into
add
push
fwait
xchg
push
inc
stos
shrd
inc
sbb
inc
add
popa
add
xor
js
sbb
xchg
lods
jl
fisubrs
mov
mov
paddusb
sbb
aas
addl
jg
lds
cli
cs
mov
mov
jmp
push
repz
xor
and
in
lret
std
gs
xlat
mov
mov
pop
add
pop
push
lds
mov
sbb
push
fimull
rclb
fiadds
int3
inc
xor
inc
movsl
lea
pop
sbb
insl
pop
test
cld
add
fstpl
adc
push
call
cmp
push
and
das
mov
cmp
xor
stos
fcoml
pop
out
nop
mov
adc
loop
sahf
lahf
push
pop
inc
add
dec
cmpsl
testb
call
sub
hlt
push
mov
arpl
fdivl
adc
imull
and
sub
adc
mov
shll
and
pop
pop
mov
aas
lds
mov
repnz
gs
sbbb
sbb
adc
adc
pop
lods
xor
pop
xchg
adcb
in
push
xor
stos
popf
mov
outsb
xchg
push
enter
mov
push
jmp
push
in
mov
push
insl
popa
xchg
adc
mov
or
and
sahf
mov
xlat
xor
das
mov
adc
idivb
ficomps
pop
xchg
inc
cltd
repnz
pop
ss
cs
pop
ljmp
repnz
cld
cmp
aaa
mov
adc
repnz
cli
in
incb
xor
jp
sub
and
in
push
into
fsubp
into
mov
inc
jbe
add
mov
mov
or
add
jno
repnz
aad
pop
fbld
pop
mov
xor
xchg
nop
mov
sahf
ds
inc
xchg
and
push
jns
inc
pop
test
loope
or
xchg
addl
pushf
sub
mov
or
rclb
jl
or
rcl
mov
sub
leave
js
lahf
daa
xor
adc
xor
lcall
push
jnp
dec
sbb
sub
sahf
cs
aad
adcl
test
cmp
fistps
mov
dec
cmp
and
test
inc
dec
ret
lods
pop
pop
popf
lret
and
scas
insl
cmp
cmp
psadbw
cmpsb
pop
popf
scas
mov
imul
and
jg
adc
mov
sbb
stos
sub
pop
aaa
mov
sub
repz
aaa
rcll
push
xchg
jno
vshufps
ljmp
cld
jbe
in
or
push
cmc
xlat
lret
scas
lods
out
or
aam
pop
mov
cmp
and
xor
mov
popa
push
in
inc
inc
cmp
das
pop
mov
pop
mov
dec
into
call
pop
out
arpl
loopne
cmp
sbb
dec
dec
nopl
mov
sub
dec
fsubrl
dec
jle
push
add
inc
aaa
and
mov
std
orb
mov
inc
loopne
sbb
or
jne
and
std
inc
bound
adcl
test
sbb
dec
outsb
into
inc
clc
out
loopne
popf
cmp
sub
pop
sub
mov
int3
xor
addl
xchg
inc
dec
ret
enter
movsl
pop
fildl
fldl
and
dec
loop
aas
or
int
mov
bound
stos
dec
int3
xor
xor
in
jae
cld
adc
stos
sub
lahf
or
jmp
inc
xchg
cmp
pop
xor
and
xchg
les
shl
sbb
sub
mov
and
movaps
cmp
repz
mov
subl
hlt
cli
aam
pop
popa
cs
lods
sub
scas
add
and
in
adc
int3
aad
daa
fst
fstpt
dec
mov
adc
cmp
dec
jbe
cmp
xchg
outsl
dec
into
inc
jmp
fisubs
sub
push
shrl
inc
xchg
sbb
mov
xorb
lods
rol
mov
insl
cwtl
mov
stc
cmp
jo
and
sub
sti
fldl
jne
adc
gs
jmp
out
fwait
sarb
pop
fnstcw
dec
xor
mov
sahf
sub
xlat
mov
fs
or
in
lahf
inc
das
leave
lea
fimull
jns
out
bound
popa
add
cmp
xorl
out
add
mov
push
and
and
ljmp
mov
xlat
ret
movsl
push
inc
add
gs
adc
jne
pop
sbb
pop
cmpsb
sub
les
xlat
in
fwait
mov
adc
data16
push
jnp
incb
add
push
jb
cwtl
or
icebp
mov
out
jl
mov
repnz
rsqrtps
dec
jns
out
jbe
mov
hlt
adc
jge
mov
loope
lock
and
daa
and
arpl
in
push
ret
mov
xor
enter
and
add
mov
and
aam
les
sti
sti
push
ss
into
pop
nop
in
popa
push
lahf
adc
jno
pop
pop
and
jno
sbb
or
mov
or
sarb
add
inc
sahf
scas
and
or
out
sub
jnp
popf
shll
and
push
mov
cwtl
cli
in
dec
bound
mov
cmpsb
rsqrtps
js
movsl
bound
mov
movsb
enter
insb
fdiv
adc
dec
or
jg
nop
lret
jno
mov
cld
xchg
dec
dec
cli
dec
and
add
ss
jp
cmpsb
sti
cmpsl
jecxz
je
pushf
js
test
mov
dec
js
push
faddp
les
fnclex
rcll
dec
out
mov
mov
repz
jb
cmp
dec
dec
add
movb
push
jl
lods
inc
stc
popf
lods
sbbl
mov
xchg
cli
sbb
rolb
inc
outsl
rcrb
lcall
test
cmp
mov
sbb
jle
mov
dec
in
sub
xchg
push
inc
dec
mov
imul
aas
iret
mov
xor
xor
mov
jne
push
and
sbb
testb
jb
jae
imul
out
in
xor
cmp
push
ret
jecxz
daa
sub
repz
cld
mov
inc
jl
push
filds
aad
pusha
mov
sahf
aam
roll
aaa
dec
push
imul
inc
jo
dec
stos
xor
popf
lahf
mov
xchg
or
cmp
or
ds
test
ja
je
scas
pop
adc
inc
fists
mov
sub
sub
cmp
mov
pop
mov
test
xchg
pop
add
jle
jecxz
and
in
fcomps
fidivl
pop
jg
ficoms
gs
mov
add
imul
shll
dec
lock
fiadds
cmp
mov
testl
mov
add
adc
fmull
addr16
fists
adc
pop
outsl
push
scas
push
add
jmp
cmp
loop
and
rsqrtps
add
loopne
pop
bound
inc
sub
xchg
pop
pop
sbb
cmpsb
mov
lcall
xchg
push
or
mov
in
push
ljmp
mov
es
stos
clc
bswap
xor
fldenv
scas
push
cmc
dec
loopne
mov
jle
in
ss
lcall
pop
jbe
pushf
rdmsr
or
push
xchg
adc
mov
outsb
shr
repnz
sub
sub
mov
inc
sbb
dec
mov
fstpl
lock
sbb
popf
cmc
jbe
pusha
xchg
int
scas
andl
and
xchg
sub
mov
les
xchg
pop
inc
nop
das
jns
pushf
adcl
ljmp
adc
inc
sub
pushf
daa
xchg
je
mov
xor
ja
mov
pop
fnstcw
fdiv
jge
fnsave
cwtl
or
jle
dec
into
loopne
clc
les
mov
fnsave
sbb
pop
loop
sbb
faddp
sbb
pop
popf
ret
pushf
cs
xor
gs
or
jle
xchg
inc
add
scas
out
rcr
xchg
mov
add
xor
pop
xor
adc
mov
jge
jns
xlat
cwtl
pop
arpl
lods
jb
jle
inc
std
push
mov
outsl
push
dec
daa
je
pop
movsl
jmp
pop
scas
mov
cmp
push
call
xlat
push
inc
jge
adc
fnstenv
std
pop
das
lret
sbb
cltd
sub
movsb
xor
cmpsb
sbb
shl
xor
ja
int
adc
and
mov
cmp
rorl
push
rcr
call
push
jge
and
stc
push
dec
test
inc
jnp
rorl
push
stos
lret
sti
pop
fimull
jns
je
push
ds
enter
stos
xchg
mov
aam
pop
fistl
adc
daa
cmp
mov
scas
mov
cli
loopne
test
icebp
mov
mov
jecxz
js
in
lret
sbbl
clc
cmp
ds
roll
xlat
inc
lret
orb
or
push
jg
shrl
xchg
sahf
je
fwait
add
test
jno
mov
fcomps
sbb
popa
push
xchg
test
push
aad
adcb
and
and
pop
jae
pop
xchg
jp
push
aad
add
sbb
rolb
std
nop
gs
mov
fcmovnb
ss
mov
pushf
xchg
mov
mov
pusha
push
cmpsb
mov
mov
lahf
and
scas
in
movsb
pop
mov
pop
aad
mov
cmp
pop
inc
dec
push
mov
mov
sar
push
ljmp
out
dec
loopne
out
outsl
pop
jne
insl
sbb
push
test
add
push
cltd
fwait
pop
imul
add
mov
pushl
std
cmc
shlb
stos
xor
sbb
dec
nop
enter
pushf
or
xor
xor
xchg
popa
lds
mov
jle
js
lock
dec
push
negb
mov
pushl
fidivs
jp
jno
push
mov
and
lea
movsl
pop
aas
test
out
adc
imul
mov
or
ret
popf
xor
xchg
lahf
mov
cmp
and
fimull
add
jbe
xchg
jno
mov
popf
int
lahf
xlat
lock
inc
clc
aam
mov
push
lock
call
rclb
cmp
or
dec
insb
mov
jb
sarb
mov
inc
pop
fimuls
mov
push
sub
push
xchg
lock
xor
mov
scas
mov
jne
aam
ljmp
fcompl
and
test
sub
xchg
int3
cmpl
sahf
sbb
das
aaa
sbb
lcall
out
cmp
push
push
jne
xchg
imul
inc
lret
pop
xor
scas
movsb
hlt
mov
jb
cltd
pop
test
pop
cmp
jp
call
pop
flds
leave
sbbl
in
jb
fs
push
aad
repz
xorb
push
pop
xchg
xor
fidivl
stos
mov
aaa
lock
scas
adc
jg
ja
lods
xchg
ret
or
fsubrp
sub
jb
pop
aas
aaa
repnz
pop
lock
insb
cmp
out
mov
jge
push
jge
movsl
fbstp
lock
push
inc
test
inc
sub
mov
push
and
gs
sbb
mov
aad
or
loope
stos
add
cmp
mov
repz
mov
mov
cli
addr16
push
push
pop
mov
enter
cli
mov
xor
mov
rcr
inc
jae
lea
ljmp
stos
mov
out
push
fstpl
xchg
rcr
in
pop
and
pop
push
ret
inc
mov
sarb
icebp
sub
pop
xor
outsl
mov
pusha
ja
pop
sbbb
test
je
daa
pusha
ss
push
fsubrs
hlt
decl
xchg
movsl
enter
jnp
or
lcall
xchg
xor
inc
add
sub
jl
add
pusha
cmpsl
test
dec
and
jo
addr16
jnp
jmp
pushf
cmp
je
mov
xor
jmp
xchg
enter
cmpps
lcall
clc
mov
in
repnz
shll
fisubrl
shl
aam
cmp
and
cmp
mov
test
xchg
push
out
jne
insl
push
mov
mov
ja
leave
sbb
les
fcompl
in
sar
in
cwtl
inc
sub
aam
jae
jae
and
test
jne
inc
pop
xor
inc
cs
adc
int3
push
sti
outsb
mov
push
lods
push
je
call
mov
fcmove
jb
xchg
pop
das
inc
ja
and
add
int3
push
clc
enter
or
and
jno
and
sti
xor
sbb
add
int
movsl
mov
jecxz
push
inc
push
xchg
cmp
sahf
sbb
lret
pop
jo
in
pop
cmp
nop
adc
aaa
mov
inc
shrb
shlb
mov
in
mov
sub
xchg
jb
mov
adc
imul
stos
shl
addb
imul
popa
mov
lds
jnp
in
inc
divb
pop
xchg
xchg
cwtl
into
rcrb
or
int3
cmpb
mov
insb
ret
sti
test
jecxz
fsubp
or
scas
and
and
call
adc
inc
sbb
es
cmpl
jo
aad
push
xchg
out
std
addl
mov
adc
hlt
in
xor
out
sub
xlat
mov
mov
mov
cmp
test
repnz
jle
scas
je
cmpsl
in
push
ret
loop
and
mov
xchg
pop
push
mov
das
call
sti
or
lea
pushl
imul
rcrl
jnp
aas
lahf
pop
jne
dec
cld
mov
fisubl
jecxz
lds
lahf
icebp
push
mov
cltd
aam
jno
adc
cli
nop
rolb
ret
pop
aam
cmpsb
push
fadd
aaa
daa
mull
inc
stos
push
pusha
imul
adc
xor
outsb
cmp
xor
subl
test
negl
lahf
stos
push
mov
jae
sti
or
sub
adc
out
push
xchg
out
jmp
mov
and
mov
loop
push
in
mov
sub
std
jno
and
and
xorl
cmpsl
inc
in
repnz
test
mov
rorb
mov
addb
outsl
dec
stos
mov
mov
adc
roll
incb
xlat
pop
pop
das
push
rclb
or
shl
gs
pop
sti
out
outsb
insl
mov
test
pop
pop
sti
mov
test
scas
mov
insb
cld
imul
jp
loope
xchg
pop
mov
xchg
inc
pop
cmp
sarb
adc
push
sbb
mov
mov
cs
mov
dec
cmp
rolb
rcrl
enter
pop
es
dec
test
insl
xor
mov
outsl
loopne
cmp
lea
inc
pop
pop
or
push
pop
enter
dec
mov
out
sbb
or
xor
and
or
mov
pop
pushf
dec
sbb
jmp
out
cmp
jo
pop
jbe
shll
jo
leave
mov
aaa
call
sub
pop
dec
je
mov
pop
loopne
add
jecxz
sarb
jle
cmp
push
cmp
push
sbb
shr
mov
lea
lahf
pop
sbb
fs
insl
mov
inc
mov
xchg
push
xchg
adc
push
test
jge
or
inc
daa
dec
xchg
and
cli
movq
daa
aad
test
xor
sub
out
dec
push
and
out
fwait
inc
test
xchg
test
xchg
cmpsb
dec
mov
push
dec
sbb
add
out
inc
jle
mov
pop
push
inc
js
sti
clc
call
mov
ficompl
int3
rcll
cmp
dec
mov
mov
or
test
aam
insl
push
iret
ss
xchg
ja
int
sbb
pop
push
pop
out
mov
inc
out
inc
mov
sbb
sbb
mov
bound
lret
stc
shl
dec
ds
xchg
ja
dec
jbe
test
mov
test
popa
andl
roll
sub
mov
rolb
sub
mov
pop
mov
fistl
jmp
pop
xor
jmp
jae
push
std
test
jecxz
ds
xchg
xorl
aam
or
jno
pop
jae
js
or
cwtl
push
iret
das
xchg
andb
stc
xor
roll
loope
sub
repz
imul
shrl
xor
lret
repnz
outsb
pop
inc
jmp
jp
lahf
cmpsl
sbb
pop
xchg
movsl
out
mov
js
lods
nop
adc
jns
std
sub
and
jle
shlb
or
adc
jb
jns
pop
lret
and
mov
sbb
arpl
add
or
hlt
mov
push
inc
dec
sti
pop
cmp
jle
subb
jne
arpl
test
add
ret
loope
or
cld
or
fisttpll
jge
cmpsl
icebp
popf
cmp
jno
in
push
jne
cli
mov
push
pop
mov
test
call
test
xchg
push
adc
inc
dec
aam
and
sbb
lea
aam
jge
into
divl
cmp
push
jbe
loop
mov
fcoms
sbb
std
stc
out
adc
jo
inc
or
movsl
push
mov
xchg
call
icebp
lahf
cmp
mov
xor
out
mov
mov
popf
mov
shrb
clc
jl
mov
pop
xor
push
lret
fnstsw
mov
push
pop
mov
cwtl
jae
mov
iret
push
or
in
cmc
jae
aaa
ficoml
xor
aaa
adc
aaa
add
xchg
call
aad
fisubl
sub
jp
pusha
cltd
in
mov
ficomps
imul
cmp
xchg
jecxz
push
lcall
dec
lea
xor
bound
imul
mov
mov
orl
aaa
dec
stc
xchg
push
aam
inc
push
repnz
sahf
jg
xor
pop
adc
sub
dec
jmp
push
lret
mov
aam
icebp
jno
push
dec
pop
sub
cmp
sub
je
popa
movsl
xchg
push
or
lds
test
dec
scas
sub
pop
std
aas
push
pop
fsubr
push
jnp
out
mov
subl
inc
or
xchg
mov
je
xchg
ja
popa
bound
cmp
pop
test
decb
mov
xchg
mov
jb
dec
sub
into
pushf
pop
les
popf
jnp
inc
adc
lods
sub
pop
cld
push
mov
cmp
or
bnd
xor
aad
sti
dec
jbe
lods
fistps
sub
push
inc
xchg
ret
lds
pop
lahf
rorl
xor
sbb
fcom
adc
pop
xor
xchg
rcrb
push
jb
fldcw
cmpsl
fidivrs
lds
xchg
cmp
ja
arpl
dec
mov
ret
mov
out
push
shrb
dec
and
adc
cmp
nop
push
test
and
xchg
sbb
lahf
shr
fs
lods
jae
sahf
mov
push
jmp
inc
jae
jo
fs
sbb
push
adc
jp
adc
pop
xor
add
insb
pop
movsl
mov
in
cwtl
icebp
fadds
push
lock
inc
daa
push
dec
cmp
movsl
dec
mov
es
out
sbb
les
adc
push
and
inc
rcrl
es
lock
cs
in
add
movsl
push
aad
ss
mov
sub
aam
xorb
ljmp
sub
stos
fisubl
or
insl
or
fidivrl
add
jns
dec
aam
inc
add
inc
sub
jns
test
pop
sub
pop
xlat
sarb
int
jns
popa
mov
inc
jle
fmull
add
es
stc
mov
xor
ret
push
sbb
faddp
out
js
xor
push
push
cld
sbb
out
and
inc
inc
sub
pop
mov
jle
aas
fistpl
cs
mov
sarb
jecxz
pop
or
mov
mov
loope
pop
xor
cmp
int3
or
sbb
and
mov
fs
test
popf
dec
andb
mov
into
mov
jb
jg
jb
or
pop
inc
inc
loopne
pushf
pop
aas
inc
aad
out
mov
int
sub
sbb
xchg
jecxz
sets
mov
test
xchg
pop
mov
daa
inc
add
fildl
pushf
dec
jle
pop
push
es
test
pop
jo
adc
std
or
mov
sub
xchg
mov
sti
je
jbe
adc
ds
fcomps
movsb
dec
mov
lret
push
sahf
div
mov
lret
add
test
in
push
rcll
cmpsb
lret
into
sbb
mov
pop
pushf
scas
sbb
fcoml
rorb
ss
out
out
ja
xor
cmpl
shrb
inc
cld
pusha
jns
popa
incl
loopne
pop
outsb
pusha
xchg
adc
fnsave
sbb
cmp
lret
xor
xchg
mul
or
pop
xchg
inc
mov
hlt
or
popf
xor
push
loop
jb
into
je
add
adc
enter
or
sub
ret
outsl
daa
pop
iret
int
icebp
insb
xor
push
in
pop
inc
or
xchg
mov
imul
inc
pop
lods
lods
mov
inc
cmpsl
pop
stos
inc
jb
push
jne
jp
rcrb
call
or
mov
scas
cmpsb
pop
cwtl
repz
jl
push
out
push
pop
jecxz
sub
add
add
sahf
push
sub
std
xlat
movsl
jnp
adc
in
movsl
cli
stos
jnp
dec
or
cwtl
ret
fbstp
shrl
ret
xlat
ja
or
cld
add
jo
pop
das
dec
enter
popf
lock
xchg
xor
xchg
adc
ret
sub
sub
in
js
push
mov
movsl
insl
lret
or
cltd
ja
bound
sbb
mov
dec
or
fisubl
mov
fucomp
mov
xorl
daa
sbb
out
push
aad
sub
adc
mov
call
mov
sbb
pushf
je,pn
pushf
jo
mov
pop
gs
aad
push
adc
pop
sub
mov
jbe
dec
fstpl
out
inc
xchg
outsl
ret
mov
repz
sub
mov
mov
mov
jae
push
sar
outsl
fisubrs
jp
and
ret
sub
and
mov
das
xchg
mov
push
sub
lods
nop
sti
add
out
mov
mov
sbb
inc
cs
adc
mov
mov
shll
hlt
xor
pop
mov
dec
das
push
dec
fldt
cld
add
inc
fidivrl
cmp
sub
mov
push
jno
pop
decb
inc
push
jp
loopne
xchg
repnz
mov
push
mov
pop
jecxz
fnstenv
mov
stc
mov
mov
js
xchg
movsl
arpl
test
shl
insb
stc
ficoms
idivb
inc
mov
cmp
lret
jbe
decb
daa
jbe
test
nop
mov
sbb
jno
and
xchg
xchg
sti
enter
push
cmp
mov
iret
shrb
idivb
add
jl
shlb
xor
in
outsl
test
int3
sub
sar
xchg
insl
cmpsl
dec
jg
int
sub
fistpl
test
in
add
dec
push
dec
mov
mov
mov
call
sbb
les
imul
lock
inc
lock
in
aaa
mov
jbe
xor
dec
sub
jne
dec
xchg
inc
data16
xchg
push
and
in
aad
roll
call
add
push
sub
sbb
mov
xlat
movsb
fisubs
fwait
enter
enter
je
and
sbb
cld
outsb
dec
sbb
adc
int3
aam
ljmp
fnstcw
sub
sbb
lret
adc
sub
mov
lods
add
dec
call
jg
rcrb
add
dec
push
xor
mov
add
cmp
lock
lods
mov
pop
loop
mov
cli
out
add
inc
mov
cwtl
jno
xor
mov
mov
loop
pop
xchg
imul
dec
ss
pop
icebp
jmp
loop
sub
fcoml
dec
repz
inc
pop
arpl
movsl
test
test
mov
loop
addps
test
xchg
or
ljmp
and
gs
sub
xchg
mov
push
push
cmp
add
mov
xlat
cmp
mov
lcall
jnp
pop
jecxz
and
mov
adc
jae
in
mov
push
lahf
fcmovnu
push
dec
or
in
mov
jne
xlat
iret
or
scas
out
cltd
test
out
test
cmc
sahf
pusha
or
sub
or
pop
jne
pop
mov
cmp
or
negb
xchg
push
cmp
jl
mov
add
cs
mov
xchg
ja
sub
mov
jne
push
add
andl
mov
sub
sti
popf
xchg
sti
cmp
imul
dec
xchg
xor
jb
xchg
icebp
jnp
lret
repnz
sti
mov
mov
popf
test
movsl
jno
xlat
push
stos
mov
test
sub
and
sbb
add
sub
mov
cld
loope
mov
cmpsb
js
mov
loop
imul
add
orb
mov
pop
in
xchg
sar
jl
pop
negb
push
scas
rol
and
arpl
fmuls
sete
add
adc
pushf
pushf
data16
xor
outsb
push
movsb
sub
outsl
movsl
jecxz
and
xorb
and
mov
sbbl
pop
rolb
ret
cmp
cwtl
rcl
cwtl
ret
or
decb
mov
sbb
cld
ficoml
jae
push
sbb
test
ja
jp
in
add
cmpsl
ljmp
inc
sbb
xor
loop
mov
mov
inc
jmp
jle
mov
xchg
out
das
clc
push
orb
stc
lock
mov
fdivrs
nop
push
test
fldt
imul
push
mov
fucomip
jne
cltd
push
mov
sti
mov
fstps
jge
lock
cmpsb
into
add
dec
lcall
test
cwtl
jmp
nop
insb
ret
data16
push
dec
mov
clc
or
adc
adc
cmp
insl
inc
in
mov
notl
sub
pop
add
mov
dec
rclb
xchg
imull
les
sub
ja
xchg
pop
or
stos
loope
or
pop
and
loop
imul
fnsave
and
and
mov
mov
ljmp
rcrl
push
cmp
mov
ret
ds
adc
imul
lcall
aad
xor
xchg
sti
inc
or
push
xor
push
dec
idiv
je
sbb
adc
fcmovnbe
adc
sbb
imul
cmp
js
xchg
aad
add
bound
nop
jmp
push
lret
pop
fs
enter
std
ljmp
jmp
cs
sub
inc
lret
mov
dec
bound
jg
cmp
xchg
xor
lock
bound
cmpsl
les
mov
inc
pop
outsb
in
mov
push
hlt
dec
insl
cmp
les
inc
mov
and
xchg
mov
outsb
js
call
je
xchg
lock
outsb
mov
mov
call
lea
push
add
inc
adc
xchg
mov
cmp
xlat
jne
xchg
pop
xchg
daa
adc
je
sub
in
adc
in
push
test
insb
sub
xlat
push
stc
jbe
jo
jo
daa
mov
test
enter
dec
xchg
xor
xchg
loope
mov
dec
clc
xchg
cmp
jbe
out
in
lods
imul
call
cmp
mov
test
and
fsubr
test
cmp
xchg
and
sub
outsb
lahf
sub
sub
ljmp
loopne
jb
pop
test
sbb
xchg
fmul
push
push
arpl
lods
mov
xchg
inc
mov
mov
repz
outsb
mov
add
mov
sbb
test
mull
dec
les
mov
sub
sti
push
test
enter
js
pop
mov
int
xchg
shlb
inc
orl
int3
test
rorb
lahf
dec
aad
call
pop
jo
mov
sbb
mov
rcrb
xor
jo
pushf
aaa
xchg
mov
ficomps
push
dec
inc
cld
and
or
or
das
lahf
icebp
cmp
push
outsb
int3
jo
push
push
out
xchg
and
imul
orb
in
inc
es
inc
add
pop
adc
insl
mov
pop
push
adc
adc
ret
dec
lcall
in
repz
iret
decb
gs
mulb
scas
ds
xchg
loopne
xchg
mov
sub
imul
adc
aaa
in
mov
andb
stos
mov
adc
cld
icebp
mov
call
sub
push
xor
popa
inc
sbb
out
pop
inc
mov
sub
fldl
in
fst
imul
cltd
jo
enter
xlat
cwtl
mov
int3
mov
insb
stc
jl
jp
inc
mov
imul
sbb
lcall
imul
fxch
iret
cmp
add
add
add
leave
test
xor
adc
mov
xchg
lret
out
movsb
scas
and
fistps
sbb
sbb
dec
subb
adc
cwtl
insl
add
rcr
cwtl
inc
mov
ja
inc
nop
sub
add
faddp
push
fcmovne
int
je
mov
push
leave
sub
cmp
test
pop
mov
xchg
jb
mov
test
leave
rclb
lds
or
insl
cmpb
fnsave
mov
cli
xchg
shll
sub
ljmp
or
or
add
cwtl
jno
cli
imul
inc
pop
outsl
cli
popf
xchg
push
test
and
cwtl
jecxz
stos
or
fdivr
aaa
enter
enterw
adc
in
and
xrelease
inc
inc
das
lds
mov
mov
xor
fptan
sbb
in
mov
into
push
in
adc
ljmp
push
mov
push
sub
orb
fstpl
ds
jno
loop
aam
cmpsb
xor
xchg
xchg
mov
pop
idivl
int
rol
and
xor
lret
in
or
and
inc
ret
arpl
xchg
aaa
pop
mov
aad
std
push
fldl
dec
add
dec
enter
das
clc
push
not
outsl
cmp
rcrl
lods
icebp
lods
sysenter
and
je
hlt
imul
push
or
or
mov
mull
clc
int3
mov
push
stos
push
push
lds
pop
add
in
add
outsl
sub
mov
int3
sbb
lahf
idivl
push
in
and
ja
test
push
shlb
aam
xchg
mov
mov
test
inc
jmp
daa
ss
push
cli
addr16
jbe
sub
xchg
stc
cltd
ja
pop
fimuls
push
in
test
and
inc
call
notb
mov
add
sbb
mov
pushf
lahf
adc
adc
and
mov
adc
cmp
xchg
sbb
aad
pop
push
push
mov
inc
ljmp
xor
jle
xchg
addr16
or
xor
add
aam
xor
inc
adc
lcall
div
mov
adc
stc
pop
icebp
cld
ljmp
int3
or
nop
in
call
jo
and
dec
outsb
pop
push
hlt
adc
jb
sbb
push
push
mov
xor
cmp
imul
cmp
test
cvtps2pi
addr16
push
mov
rcl
arpl
imul
in
aad
inc
inc
mov
icebp
dec
out
pop
lock
add
pusha
xlat
es
test
or
rcll
push
fwait
jno
imulb
out
sbb
dec
or
mov
cmc
stos
mov
aam
shlb
jbe
mov
jge
xor
icebp
cwtl
pop
lahf
or
and
push
fldl
sbb
or
sbb
mov
mov
fbstp
sarl
lds
sub
mov
nop
mov
outsl
out
ret
xor
jbe
pop
js
fs
ret
push
xchg
dec
dec
nop
cmpsb
mov
and
mov
sbb
xchg
leave
jno
push
aad
sbb
inc
xchg
nop
cmp
movsb
ficompl
jb
mov
jecxz
push
int3
or
cmp
xor
lahf
and
icebp
in
mov
and
push
fisubrs
add
bound
adc
mov
mov
fs
shll
cmpb
das
vmread
xor
xchg
jmp
xor
jno
fwait
decl
in
jecxz
xchg
and
cmp
int3
imul
roll
jge
jmp
mov
or
out
sub
add
jae
ret
pop
popa
mov
mov
cwtl
in
hlt
cmp
jne
sbb
xchg
push
and
add
lods
adc
push
imul
jb
cli
or
cmp
das
or
pop
cmp
jp
ds
pop
pop
and
fmull
pushf
fisubl
test
pop
lods
out
mov
pushf
fiaddl
jns
adcl
fnsave
xor
repz
jns,pt
adc
mov
jle
sub
insl
sbb
xor
out
inc
aam
leave
mov
dec
pop
jbe
push
lcall
or
mov
and
insb
jno
dec
leave
adc
or
sbbl
adc
push
jge
jbe
cmp
sbb
add
mov
xchg
pop
mov
add
adc
sbb
lds
movsl
rcrl
aas
mov
adc
sar
jo
fucom
test
int3
mulb
gs
adcb
bound
xchg
add
mov
subb
mov
lcall
dec
repz
jp
jns
rcll
cmp
stos
repnz
pop
in
adc
and
mov
sahf
xchg
pop
inc
fdiv
mov
xchg
jle
sub
sbb
loope
and
lret
les
inc
inc
pop
cmp
mov
enter
xor
ljmp
and
and
adcb
sbb
out
fstpl
pop
es
in
or
into
push
adc
mov
sbb
pop
mov
inc
jl
out
mov
jl
mov
xor
hlt
lahf
and
mov
sarl
jb
mov
sbb
xor
or
inc
add
push
gs
xlat
mov
mov
rorb
fsubrs
sti
inc
inc
mov
out
aam
scas
or
sub
sbb
fcompl
push
pop
jbe
ret
mov
mov
gs
iret
sbb
insb
jb
fldcw
test
clc
add
sub
jae
mov
std
cli
sub
or
jge
shlb
adc
nop
mov
lock
pop
out
xor
cltd
add
sbb
dec
pop
adc
mov
mov
cmpsl
lcall
sahf
repz
in
mov
or
arpl
and
stos
jb
movl
cmp
cwtl
adc
aad
pop
ret
push
test
loop
push
push
ret
ror
sub
mov
popf
cmp
daa
jo
mov
insl
push
xlat
scas
xchg
push
mov
pushf
stos
aaa
les
mov
cld
cli
test
or
cltd
dec
in
lret
mov
jecxz
cltd
push
cli
adc
fs
pushf
inc
ja
test
pop
enter
pop
mov
xchg
loopne
mov
imul
aas
pushf
in
out
shlb
loop
popa
dec
arpl
and
orb
and
stos
jo
shl
jo
insl
iret
adc
xor
adcb
in
out
scas
ja
into
xchg
add
mov
add
in
push
mov
outsb
pop
sarb
adc
repnz
jg
inc
addr16
dec
mov
fcomps
std
push
shrl
push
loop
lret
fwait
out
ds
jbe
mov
stc
mov
insl
mov
sbb
cmp
movl
dec
cli
mov
mov
cmp
mov
pop
fsubr
popa
and
pop
jno
cmp
sbb
jbe
or
mov
and
xor
lret
scas
fcoms
mov
loope
adc
xor
mov
xchg
sub
ja
dec
sub
lcall
sbb
xchg
add
shr
mov
inc
mov
xchg
les
mov
in
mov
jmp
mov
gs
push
sbb
cmpsb
cmp
pop
inc
aam
or
pop
pop
movb
loop
mov
adc
inc
xor
addr16
lret
pop
out
mov
scas
and
stc
or
in
jecxz
mov
je
ss
ja
ds
jecxz
inc
mov
dec
testb
addr16
mov
inc
and
xlat
cli
mov
xchg
jecxz
movsl
mov
mov
sbb
insl
xor
loop
mov
or
lds
bound
pop
xor
push
and
nop
loope
or
sti
shll
jbe
sub
mov
push
es
xchg
std
imul
cmpsb
xchg
cmc
pop
dec
leave
rorl
adc
and
pop
cmpsl
ds
gs
mov
movsb
mov
pop
repnz
push
mov
xchg
xchg
pop
imul
leave
mov
dec
lretw
cwtl
and
mov
fcmovbe
xor
dec
lea
pop
push
sub
ja
repz
ret
loop
ds
icebp
xor
pop
adc
cmp
jo
ror
cltd
or
into
cs
adc
sti
push
arpl
lods
jmp
mov
push
xor
movb
rclb
dec
fs
cmp
scas
jb
xchg
mov
test
daa
mov
fists
jmp
mov
movsb
adc
xchg
and
xor
and
lcall
cmp
adc
call
imulb
mov
ss
stos
push
push
icebp
std
and
push
lds
fldl
nop
cmpsb
pop
insl
dec
adcl
jns
inc
ss
cmc
mov
out
xchg
fcom
cmpsb
loopne
imul
cltd
sbb
jnp
clc
aad
jo
sbb
data16
sbb
loopne
mov
add
pop
in
icebp
and
pop
cmc
enter
mov
aad
or
mov
sub
push
push
shl
test
jg
es
push
in
test
jecxz
es
and
mov
imul
fadd
pop
pop
pop
movsb
add
iret
mov
daa
cmp
push
lds
loope
ret
in
dec
js
cmp
mov
imul
mov
mov
sbb
cmp
xchg
sub
push
jge
subb
cmp
aad
xchg
mov
fnstsw
cmp
push
jle
fistps
pop
jle
jecxz
loop
in
aas
fwait
and
fucomp
jno
push
sahf
pop
cltd
mov
fidivrs
push
xchg
imul
popf
ds
mov
and
cmp
mov
mov
lret
jl
push
inc
jb
xchg
lods
and
add
iret
fcoms
mov
mov
enter
je
xchg
jge
fisttps
mov
repnz
pop
mov
lock
jno
rcll
mov
data16
cmp
mov
out
lcall
cmp
push
js
ja
dec
or
sbb
sbb
xchg
xchg
jb
mov
add
mov
ds
aad
mov
sbb
xchg
jae
stos
test
pop
pop
scas
sbb
dec
jbe
push
nop
jnp
data16
mov
mov
xchg
std
sar
test
pop
divb
xor
jge
mov
shll
mov
sbbb
std
pop
fidivl
div
imul
fiadds
sti
sub
xlat
pop
out
xchg
dec
imul
jl,pt
testb
push
push
mov
movsb
xor
popf
lret
lea
arpl
repnz
ret
ljmp
mov
push
mov
pcmpeqb
pop
fs
mov
pop
ucomiss
sub
cwtl
je
mov
jns
sbb
adc
push
pop
outsl
xor
sbb
jmp
fbstp
pop
in
sarl
rcll
popa
lcall
into
lret
dec
fwait
pushf
mov
jb
mov
movsb
push
or
flds
movsl
mov
sbb
shlb
inc
sbbl
push
dec
add
mov
adc
mov
daa
fists
inc
pop
cmp
pop
xorb
pop
mov
lret
adc
repnz
dec
mov
sub
dec
movsl
push
fs
dec
movsl
xor
and
lret
push
dec
dec
push
lcall
push
jmp
dec
sbb
leave
lret
das
pop
jmp
add
in
jns
cmp
push
mov
mov
mov
nop
ret
or
je
call
imul
mov
test
or
add
mov
icebp
push
jno
in
dec
out
andl
mov
mov
sub
push
cwtl
pop
sbb
sbb
lret
addl
lahf
dec
je
scas
lods
addl
sbb
test
lods
and
in
notl
sbb
jbe
mov
pop
sbb
xchg
xchg
stos
imul
mov
mov
add
scas
das
outsb
lret
scas
movsb
shrl
and
and
movsb
movsb
push
xor
cmp
dec
scas
rcll
sub
loopne
fisubrl
hlt
enter
lret
fnsave
out
xchg
sbb
sub
ja
std
pop
call
addr16
add
jge
and
add
arpl
loopne
stc
lret
js
in
dec
gs
jbe
cs
inc
xor
gs
mov
xchg
push
pop
dec
jne
shl
adc
sbb
push
push
in
jle
sub
pop
cs
push
and
xchg
jmp
insb
cmp
insb
popf
jb
jmp
vmovdqu
dec
inc
jge
adc
sbb
lods
mov
sub
jecxz
daa
es
sub
dec
xlat
repz
stos
and
push
sbb
shll
test
push
xchg
imul
add
mov
pop
lods
out
jae
cmp
in
daa
into
loop
ficoml
jae
mov
mov
sub
cli
sbb
or
arpl
lahf
jbe
or
cmc
jno
jecxz
cltd
sbbl
pop
sti
shll
cwtl
cmp
or
sbb
sarl
mov
aaa
daa
push
inc
divb
std
out
or
jmp
xchg
cmc
pop
es
fxrstor
lods
sub
sub
push
mov
pop
xchg
inc
jp
add
out
fdivl
jnp
xchg
and
sar
sub
stc
ret
test
inc
adc
jl
and
cmp
cmovo
lods
xchg
and
repz
mov
iret
xchg
rcrb
mov
and
int3
test
fwait
repz
add
push
std
add
sub
pushf
inc
aas
xchg
rcll
sbb
mul
enter
popa
inc
shll
pop
jno
je
sbb
clc
cmp
das
add
mov
cmp
xchg
outsl
popa
lods
mov
addl
in
xor
ljmp
daa
in
aad
mov
in
push
mov
pop
negl
sub
les
mov
jae
fistps
outsl
xchg
mov
xchg
je
inc
inc
cmpl
stos
adc
movsl
push
ds
pop
mov
push
push
mov
mov
cli
push
or
mov
xor
pusha
mov
out
mov
mov
jl
ja
imul
push
in
push
sbb
push
mov
leave
and
xchg
outsl
pushf
jo
sbb
outsl
dec
fmuls
adc
dec
pop
stc
adc
ficompl
push
jmp
mov
jno
std
fst
inc
cmp
pop
or
aam
push
pop
mov
loope
xor
hlt
or
dec
adc
addb
inc
mov
test
sbb
popf
in
lcall
or
adc
testl
in
adc
inc
pop
pop
mov
xchg
arpl
cmp
xor
popf
pop
sti
sbb
pop
cltd
jp
mov
fwait
jbe
addr16
repz
aam
cmp
adc
ss
push
inc
mov
mov
pop
shr
xor
xchg
insl
fdiv
fistpll
iret
imul
in
push
push
outsb
sub
jb
sub
push
fptan
push
dec
adc
pop
hlt
in
movsl
into
popf
add
mov
loop
out
sub
mov
arpl
test
and
lds
test
mov
xchg
dec
xor
add
fwait
push
or
jl
mov
pop
cwtl
sub
or
adc
leave
cld
sub
dec
pop
xchg
cmp
adc
loopne
adc
jbe
mov
subl
js
inc
sub
inc
popa
inc
leave
push
push
inc
leave
pop
inc
inc
test
cmp
stos
xor
or
add
xor
pushf
subl
sahf
test
push
dec
stc
lds
and
fistpl
shrb
inc
dec
lret
sar
aas
or
testb
movsl
movsl
xchg
push
jp
daa
iret
icebp
xor
clc
cmp
jb
and
imul
pop
lds
int3
jl
lret
mov
fs
mov
add
inc
enter
mov
xor
add
sub
add
mov
adc
scas
sahf
test
sbb
pusha
add
nop
mov
ja
fidivl
cmp
hlt
pop
xchg
lods
inc
xlat
xchg
mov
xor
jo
add
vpsrlw
cmp
vmread
xor
popf
mov
jmp
pusha
repnz
mov
negl
jno
jp
sbb
cmc
addr16
adc
adc
xorl
mov
xchg
fs
adc
dec
dec
adc
dec
mov
das
jno
sub
fcomps
inc
loope
xchg
cs
push
and
jnp
xor
clc
or
dec
pop
dec
sub
cmp
ljmp
push
cli
lea
pop
fwait
push
jl
jecxz
dec
loope
shl
xchg
push
into
aas
sahf
or
ja
push
mov
dec
je
xor
push
pop
pusha
lea
cmpl
imul
stos
add
lods
cs
in
dec
push
dec
inc
decb
sub
xchg
lahf
mov
lods
mov
xchg
scas
loopne
loopne
rcrl
xchg
push
pop
dec
sbb
je
insl
sub
bound
dec
mov
idiv
faddl
imul
mov
std
ds
sub
and
pop
dec
jecxz
push
fbld
mov
out
jmp
pop
int3
ret
cmc
add
lock
dec
insb
arpl
test
push
enter
mov
and
pusha
mov
fs
lods
insb
fistps
and
dec
push
or
mov
sub
dec
mov
add
aad
inc
in
jp
cmpsl
addr16
mov
in
enter
adc
bound
nop
and
adc
mov
push
jno
or
clc
jae
cld
sub
xor
outsl
outsb
pop
add
push
jno
sti
sbb
or
and
pusha
mov
mov
push
stc
insl
int
lret
or
popf
sub
cwtl
addb
mov
mov
jle
jle
mov
xchg
jl
pop
mov
stc
out
mov
dec
or
sbb
test
mov
ret
xor
arpl
and
out
cld
fwait
xor
ja
sub
adc
dec
dec
push
or
push
repz
xchg
sbbb
das
das
pop
imul
jns
lock
negb
mov
pop
out
jg
sub
dec
cld
add
stc
lret
mov
js
push
xchg
push
mov
mov
outsl
pop
popf
and
ret
pop
xchg
shrw
sbb
mov
lea
cmc
movsl
into
and
xor
aad
pop
sbb
cmp
inc
mov
mov
add
or
fcompl
xor
les
jbe
or
sbb
jle
mov
cmp
repnz
dec
add
and
scas
add
scas
mov
hlt
shll
sti
rcll
bound
or
pop
xor
push
xchg
and
imul
xchg
sbb
xor
sbb
ja
jg
or
add
dec
jb
cltd
inc
push
lea
xchg
out
mov
adc
jge
mov
ja
mov
shrb
jg
sarl
fsubrs
mov
push
pushf
out
es
in
xor
lea
mov
fcoml
jmp
mov
or
divl
fidivl
insl
xorl
movsb
movsb
jne
test
mov
aaa
xchg
jge
cld
and
inc
xchg
mov
repnz
aam
and
lds
add
addl
insb
loop
pop
push
push
sbb
push
push
dec
inc
pop
push
sub
movsb
sub
aad
lahf
xchg
out
mov
movsb
fwait
cltd
in
fistpl
not
int
mov
jle
bndldx
inc
xchg
shrl
inc
inc
in
ret
inc
pop
add
sub
add
sub
pop
jnp
adc
cmpb
inc
and
mov
and
outsb
dec
divb
jns
bound
aaa
shlb
fcoms
cmp
inc
adc
mov
mov
mov
repz
in
test
data16
ljmp
and
push
sub
in
test
or
lret
jae
insb
sbb
aas
inc
into
jbe
popa
mov
imul
into
lcall
ljmp
mov
fidivs
push
scas
out
fidivl
xchg
mov
lock
dec
push
sbb
fisubl
lods
pop
sub
lcall
or
mov
in
pop
addr16
push
adc
inc
cmc
cltd
cmpl
and
sub
push
fucom
mov
push
shll
or
xchg
aaa
stc
ret
fadds
xchg
incl
mov
or
mov
std
xor
sbb
mov
lahf
in
cmp
mov
jle
out
ja,pn
sub
xlat
jns
ja
mov
push
pop
mov
ficompl
push
xchg
mov
xchg
incb
cwtl
sbb
jae
xchg
cs
xchg
ljmp
jne
loopne
xchg
sub
lods
adc
leave
aaa
pusha
push
call
frstor
test
fisubrs
inc
sbb
dec
add
je
sahf
data16
stc
je
inc
push
or
mov
inc
in
add
sub
imul
js
cmp
adc
sti
gs
sub
ljmp
cli
or
cmc
imul
lahf
dec
jae
mov
jne
loop
int
jne
xor
sbbb
dec
dec
xchg
test
inc
mov
push
xor
fstl
inc
cmp
dec
pop
in
sbb
decb
add
dec
loopne
pop
jbe
fnsave
mov
push
lods
xor
push
mov
in
nop
clc
jne
push
dec
lock
pop
repnz
scas
stos
lea
push
pop
aam
inc
arpl
cmp
add
sub
push
fistpl
push
mov
neg
cmp
mov
insb
xchg
dec
lds
sub
mov
call
xchg
push
or
stc
jb
movsl
xchg
lret
cmpsl
inc
in
outsl
insb
mov
clc
push
fists
stc
add
jp
mov
sti
test
lcall
in
sti
cmpsl
in
sub
sbb
xor
inc
mov
insb
idiv
insb
lods
mov
out
sbb
lods
adc
int3
push
jbe
ja
sub
adc
sbb
jae
out
sbb
push
sbb
sub
cmp
mov
xor
dec
mov
jmp
loop
xor
cmp
xchg
out
fcoms
push
cmp
testl
gs
aas
lds
push
pusha
mov
push
jge
rorb
inc
adc
add
loope
call
outsl
dec
fidivrs
clc
cmp
push
mov
in
lods
and
jmp
mov
stc
cltd
ss
lahf
add
sti
add
aaa
out
in
push
mov
mov
add
aad
jmp
aam
int3
movsb
cltd
xchg
stos
cmp
inc
or
andb
pop
je
mov
sbb
je
lock
inc
orb
pop
inc
aam
testl
xor
sbb
mov
insl
test
mov
inc
or
pushf
leave
ja
in
xchg
mov
mov
pop
std
jge
cmp
insb
jae
mov
mov
lock
js
int3
or
inc
mov
insb
lods
sbb
fnstsw
pop
daa
test
int3
sbb
leave
enter
pop
inc
and
xchg
outsl
push
cmp
dec
fwait
stos
fxch
insb
adc
mov
pop
mov
jae
xor
mov
jb
pop
into
adc
sub
lea
leave
push
add
test
inc
sub
sub
test
mov
hlt
sbb
jmp
push
cmp
pop
cld
loope
movsl
xor
sbb
push
xlat
bound
jmp
popa
inc
sub
add
mov
sub
mov
inc
mov
xor
test
push
mov
icebp
std
push
mov
cli
push
stos
cmp
lds
jl
ja
ds
popa
pop
clc
pop
push
inc
cmp
inc
mov
enter
push
dec
mov
cmpsb
jne
mov
jb
rcrb
pop
mov
call
mov
lds
pop
xchg
sbb
mov
stos
out
lock
xchg
add
jo
sub
xor
cld
cmp
mov
psubsw
out
push
adc
xchg
popa
rclb
pusha
cld
pop
hlt
mov
jp
ret
jno
imul
dec
std
pop
dec
lods
xor
add
out
cmp
stos
fs
movsb
scas
in
and
sti
jnp
xchg
call
xchg
outsb
mov
shrl
mov
call
test
pcmpgtd
insb
pusha
or
push
cld
int
cmp
in
out
jne
movsl
dec
sti
jnp,pn
loope
push
aas
cmp
andl
jl
add
movsb
inc
lcall
pop
inc
pop
inc
jbe,pn
js
xlat
into
jnp
test
aas
je
jg
movsb
daa
test
mov
cmpsb
fiaddl
es
fdivrp
arpl
pop
pop
ja
jb
repz
popf
adc
loop
or
mov
and
gs
fstp
loop
loop
push
jne
mov
les
loop
push
and
sbb
popa
adc
jg
jb
sbb
push
in
add
fsub
lea
and
xor
ret
dec
sbb
mov
cwtl
fyl2x
jno
jle
neg
int
pop
mov
ret
sti
dec
mov
dec
test
outsl
clc
scas
sub
adc
push
out
cltd
stos
stos
mov
xchg
push
cmp
jo
sahf
jl
test
mov
nop
test
pop
lock
and
inc
xor
mov
hlt
cmp
cmp
jmp
icebp
jg
hlt
mov
sub
xor
sbb
rcrb
fdivl
daa
jmp
xor
xchg
pop
out
xchg
test
mov
add
test
inc
add
or
sarl
push
mov
adc
outsl
psubb
sahf
mov
push
xchg
sbb
outsb
testb
cmc
out
imul
adc
sbbb
adc
cld
dec
sarb
fiaddl
fistps
jbe
ret
adc
or
cmp
xchg
aaa
adc
out
sub
mov
rcrb
cmpsb
jb
push
out
xor
or
xchg
rclb
inc
incl
mov
test
pusha
dec
mov
xchg
stos
push
push
cwtl
inc
mov
daa
jg
fldt
adc
in
scas
ret
xchg
add
mov
pop
inc
mov
xchg
mov
sbb
adcl
cltd
jl
pop
imul
push
addr16
rorb
mov
dec
leave
cmp
movsb
leave
or
cmp
cmpsb
lret
jle
push
jge
mov
inc
test
cmpsl
jne
fstps
mov
jae
int
fildl
stc
xchg
or
jae
jg
std
stos
cmpsb
inc
add
xor
call
popf
mov
in
popa
push
imul
inc
inc
fxch
pushf
imulb
insb
js
iret
iret
std
fdivrl
outsl
ss
pop
sbb
imul
dec
cld
push
xchg
fldcw
xor
fucomip
pop
lods
cs
stc
scas
popf
xchg
jp
mov
test
inc
push
mov
ljmp
jo
ret
fucomp
iret
pop
sbb
mov
inc
adc
cmc
xchg
xchg
mov
cmp
or
sub
jp
xlat
mov
clc
sbb
xor
dec
push
xchg
dec
pop
mov
mov
sub
loope
lea
ret
mov
repnz
popa
ds
in
stos
mov
and
cmp
xor
jge
xor
sub
mov
enter
mov
xor
movsb
lret
mov
jmp
inc
aad
imul
push
sbb
ficoms
adc
cmpsl
inc
in
jp
mov
or
or
ret
je
fisttps
movsl
jb
inc
sbb
dec
mov
pop
test
sbb
mov
lcall
add
popa
dec
lods
push
and
pop
fnstenv
sarb
mov
dec
inc
insb
ja
faddl
mov
dec
ja
fnsave
xor
mov
imul
mov
fsubr
das
pop
push
push
fistpll
rorb
imul
xchg
add
sub
pop
dec
pop
jmp
repz
fldl
in
ffree
punpckhbw
cmpl
sub
pop
nop
ror
jg
cmp
xor
cmp
mov
pop
dec
mov
mov
subl
cmp
mov
arpl
xor
pop
adc
test
dec
sbb
pop
xchg
mov
test
ds
repnz
daa
aam
mov
lods
adc
xor
imul
jmp
mov
add
pop
inc
mov
shll
xchg
sbb
push
dec
jb
and
xchg
xor
das
cmc
sbb
jae
lods
insb
into
call
mov
mov
outsb
sbb
pushf
scas
push
lahf
mov
mov
fadds
rcll
pop
mov
movsb
decl
fsubrl
jle
cmp
outsl
dec
lret
movsb
mov
and
xchg
mov
jecxz
xchg
push
test
jae
lret
sub
cli
mov
loopne
aaa
aad
sub
ret
inc
sar
sbbl
sbb
jo
pushf
mov
test
inc
sub
adc
insl
addl
pop
xor
fildl
mov
jbe
mov
sbb
adc
adcl
jns
mov
push
test
push
jno
hlt
scas
mov
pop
inc
inc
push
std
sarl
stos
out
mov
and
xchg
lods
mov
and
ds
mov
and
fidivrl
dec
fcoms
sub
or
test
jp
or
cmp
data16
jg
mov
std
sub
xchg
mov
sbb
mov
rorl
popf
mov
or
lahf
push
jns
cmc
sbb
insb
jnp
mov
mov
push
sbb
cmp
stos
xor
xchg
jp
lea
push
jecxz
push
andl
mov
leave
or
fisubl
cmpsb
or
sbb
and
push
insb
mov
mov
jge
jge
sub
jecxz
adc
out
enter
pushaw
sbb
jo
movaps
cmpsb
icebp
and
inc
xlat
je
into
cmp
add
push
aas
jp
xchg
sub
mov
out
fwait
into
hlt
popa
xchg
popf
stc
leave
add
xchg
xchg
popa
inc
jg
cmp
enter
xchg
pop
fstps
dec
xchg
mov
push
lods
in
push
mov
cli
xchg
lcall
repz
stc
sub
out
mov
js
aas
sti
cli
leave
cltd
bound
rcrb
inc
jp
popa
sbb
loope
outsl
sub
inc
push
stos
dec
xor
addr16
into
loop
xchg
or
mov
ficoml
insl
sbb
add
push
xchg
cmpsb
cmp
aam
or
scas
push
mov
xchg
scas
xor
xchg
pop
jb
adc
xchg
mov
pop
xchg
idivl
shr
jns
cs
push
testb
out
mov
mulb
lock
adc
fs
cmpsl
scas
and
xchg
movsl
xor
mov
cmc
or
pop
or
jnp
push
sbb
gs
gs
dec
mov
adc
pop
dec
adc
xlat
xor
mov
ja
lods
cmp
negl
xor
pusha
xor
insb
iret
out
push
outsl
les
pushf
pop
jb
stc
repnz
imul
adc
mov
add
jecxz
xchg
repz
mov
jmp
jno
mov
scas
xor
in
xchg
mov
xchg
mov
lods
fldenv
inc
adc
dec
dec
les
xchg
mov
adc
insl
popa
jno
push
in
dec
sbb
lds
adc
fidivs
jns
push
jecxz
dec
jp
out
pop
notl
mov
cmp
inc
aas
cli
shrl
pop
jp
add
mov
adc
sub
jo
inc
jg
out
repnz
lcall
jp
sbb
jg
sub
cmp
xchg
jmp
ficomps
stos
jnp
mov
mov
iret
xchg
pop
mov
jmp
inc
sub
sub
aas
mov
imul
adc
test
das
xor
xchg
bound
xchg
add
jecxz
lods
mov
or
jbe
daa
add
dec
stos
call
mov
add
je
fwait
repz
dec
shlb
insl
mov
test
outsb
cli
ja
mov
imul
test
jmp
adc
das
xchg
or
push
push
dec
pop
dec
adc
xor
mov
movzbl
out
test
frstor
xchg
sbb
push
andb
loope
in
dec
je
in
mov
jle
out
mov
sar
pop
mov
lahf
inc
jns
insl
ret
add
imul
call
mov
sub
or
jne
xchg
jo
addr16
cmc
es
mov
shll
jg
stos
mov
rep
sub
subl
jo
insb
xchg
push
or
inc
push
inc
fcomps
fwait
stc
mov
data16
sub
cld
add
sub
inc
sub
mov
test
bound
lahf
ljmp
stos
jle
adc
mov
push
xor
jecxz
in
call
mov
test
out
aad
les
ret
test
add
sub
std
add
or
lahf
pop
and
fisttpll
inc
jle
scas
cli
cmpsl
push
loopne
sub
movb
stc
mov
dec
lret
andb
inc
mov
mov
inc
ret
or
jno
lds
sbbb
mov
in
inc
in
stc
sbb
ss
jle
xor
ret
xlat
or
mul
stos
push
rcl
adc
arpl
out
xor
testb
xor
shll
daa
cmp
mov
sbb
cltd
jbe
xchg
mov
stc
add
jno
aas
popa
gs
inc
insb
add
push
mov
mov
dec
ret
lds
xor
out
repz
sbb
nop
and
inc
push
lods
push
not
and
sub
in
nop
cli
cld
push
ret
sub
int
pop
sbb
test
call
mov
aaa
testb
jge
mov
sbb
lret
xor
lock
loope
dec
dec
mov
and
push
and
cltd
js
daa
repz
and
sti
jae,pn
outsl
inc
sbb
es
divl
cmp
dec
into
xor
sub
adc
js
in
or
push
mov
fsubp
outsl
sub
sbb
sti
sbbl
mov
mov
ds
lret
pop
xchg
mov
dec
stos
cmc
mov
add
cmp
aaa
call
mov
jo
repnz
mov
stc
dec
mov
push
outsb
inc
addr16
scas
inc
andl
inc
into
dec
rolb
adc
mov
out
mov
es
stc
repnz
inc
xchg
xchg
jns
outsl
push
hlt
sarl
adc
cmpsb
jb
shl
add
repz
outsb
push
leave
xor
aas
rcrl
add
imul
stos
lods
lcall
ret
xchg
sub
push
sbb
lods
stos
mov
jns
ljmp
push
popl
mov
aam
jbe
mov
dec
adc
dec
inc
incl
imul
stos
sbb
adc
adc
and
fucomip
adc
call
mov
clc
adc
sub
inc
mov
popf
std
hlt
add
into
sub
or
add
jmp
cmpsb
lret
lea
les
inc
icebp
cltd
inc
jne
out
jp
data16
flds
jo
adc
push
push
mov
shlb
sti
cmp
cmp
cli
or
xchg
outsb
push
xchg
lret
sbb
jns
test
je
cmpsb
xor
mov
repnz
sbb
or
jg
adc
dec
cmc
mov
jmp
roll
sub
inc
push
mov
outsl
shlb
call
adc
pusha
xchg
or
lea
xor
shrl
dec
mov
and
dec
and
int3
xchg
and
ret
popf
adc
clc
popf
stc
dec
pusha
xor
mov
into
dec
clc
and
add
rorl
push
mov
pusha
push
int
mov
loope
sbb
mov
push
rorl
bound
pop
imul
xchg
cltd
cmp
inc
fidivl
test
jne
popf
mov
mov
or
dec
and
pop
inc
mov
adc
repz
mov
popw
loop
or
dec
icebp
inc
mov
pusha
sub
sub
sbbl
inc
xchg
mov
fcompl
or
or
jnp
movsl
pop
movsb
xor
xchg
imul
mov
mov
lcall
stc
int
adc
outsl
lret
loope
mov
push
sub
movsb
pmulhuw
mov
pop
cmc
xor
fisubrl
adc
push
test
mov
pop
mov
aam
pop
out
jae
mov
les
xchg
js
pop
push
aaa
jbe
sarb
dec
popa
push
cmpsb
and
aam
push
iret
es
aaa
in
lods
out
fildll
popf
pushf
ret
xchg
or
push
xor
test
jmp
or
ja
sar
mov
out
inc
fsubrs
mov
shll
outsb
fists
pop
pop
jl
mov
mov
jne
xor
adc
push
shrb
cmc
scas
je
xor
xchg
lret
ffreep
stos
repz
pop
pop
jl
xchg
dec
insl
out
ret
jno
mov
sbb
lret
sbb
dec
dec
xchg
pusha
inc
popl
sbb
add
jne
push
pop
insb
and
mov
popa
jnp
add
jae
push
into
in
out
out
jb
lods
jae
pop
fstp
sbb
stos
es
popf
mov
add
lods
imul
shlb
out
mov
or
mov
pop
or
std
sbb
xor
std
sahf
test
sub
fldenv
imul
cli
call
pop
mov
ret
leave
std
cmc
push
int3
push
add
lret
mov
roll
mov
arpl
xchg
mov
xchg
pop
xor
jo
int3
je
push
xchg
push
inc
xchg
ret
adc
mov
jecxz
jl
dec
dec
push
mov
sbb
sti
pop
aad
xchg
mov
jmp
mov
and
dec
lret
sbb
push
mov
sbb
and
xchg
add
inc
jle
mov
bound
xor
cmp
fistpl
push
arpl
pop
xchg
cmc
and
xchg
lods
dec
mov
mov
push
jg
arpl
push
mov
pop
lods
cmpsb
pusha
push
pop
jecxz
popa
popa
dec
sahf
loope
loopne
fcmove
adc
jnp
imul
dec
scas
mov
sub
out
mov
cmp
inc
daa
inc
add
shrl
xchg
ret
lock
cltd
lods
dec
inc
out
cmp
mov
dec
ljmp
jae
fdivrp
jge
lret
fcomi
adc
or
xor
int3
test
sbb
lahf
mov
mov
xchg
je
pop
xor
mov
xchg
inc
mov
sbb
push
push
daa
mov
test
mov
ljmp
stos
dec
inc
movsl
mov
xor
cld
mov
inc
inc
in
inc
mov
mov
dec
mov
fs
test
lea
push
test
stos
xor
rorl
inc
jb
subb
into
addl
sub
xchg
adc
cmp
pop
or
xchg
jp
mov
hlt
pop
nop
out
dec
ror
ficompl
pop
cmp
lock
cmc
gs
ss
aad
or
dec
sub
fists
xchg
or
and
mov
into
stc
add
roll
pop
xor
scas
test
add
inc
pop
and
std
inc
imul
and
add
mov
jecxz
xchg
fcomps
out
lret
dec
testb
stos
pop
out
adc
insl
es
xor
into
jbe
push
dec
mov
cld
cwtl
test
into
cs
jno
push
sub
jnp
adc
xor
xor
push
dec
pop
ud2
pusha
nop
mov
push
sbbb
and
sbb
lock
sub
xchg
pop
jmp
movsb
imul
or
dec
imul
and
ss
jno
into
sbb
jmp
call
out
dec
adc
lods
adc
je
pop
mov
or
fstl
mov
sti
popf
imul
mov
push
in
repz
negl
sub
mov
xor
xlat
push
loop
mov
arpl
fdivrs
enter
adcb
fisttps
arpl
mov
mov
icebp
leave
adc
xchg
or
scas
xchg
dec
ret
inc
pop
add
dec
test
jle
or
in
add
xchg
sub
inc
or
je
add
enter
loope
testl
in
int3
js
jmp
jp
pop
mov
xor
movsl
xchg
xchg
xor
sub
stc
popa
and
pop
mov
jge
xor
cltd
pop
or
out
jl
lds
cmpsb
or
inc
mov
pop
jl
fsubrs
pop
mov
lret
and
sub
pop
pop
sbb
mov
aas
cld
sub
js
inc
xchg
cmc
test
push
mov
sbb
cld
mov
xchg
pop
sbb
add
movsb
inc
test
push
xchg
jp
andb
scas
leave
push
inc
push
inc
adc
dec
imul
mov
mov
cli
pop
cmp
pop
shl
sub
call
dec
cmc
mov
mov
outsb
cmp
push
daa
adc
cmp
and
fdivr
mov
outsl
out
ret
in
sub
push
sbb
mov
cli
add
jg
cli
sbb
dec
jmp
mov
outsl
int
jnp
popa
and
inc
pusha
or
xchg
mov
mov
rep
repnz
sbb
dec
cmp
mov
into
loop
enter
jl
and
test
inc
sub
push
sub
incb
ljmp
fnstenv
icebp
push
adc
ljmp
or
gs
pop
test
jg
mov
movsl
fsubs
adc
fildl
inc
jo
sub
imulb
jg
mov
mov
js
sub
inc
add
dec
ja
pop
stc
adc
push
bound
mov
sub
xchg
ds
pop
jge
outsb
into
cmpsl
fisubl
or
out
out
mov
mov
pop
jle
daa
xlat
jl
push
les
repnz
jo
cmpsb
movsl
stos
jg
in
fidivs
add
jne
mov
fsubs
stos
fistl
test
fwait
loop
sti
jg
cmpl
cs
nop
push
out
add
adc
add
pop
pop
ss
push
pop
jo
adc
lahf
clc
cmpsb
mov
repnz
add
jo
lahf
aaa
inc
inc
ljmp
in
pop
cld
mov
add
shrb
cld
or
mov
dec
fisttps
xor
and
gs
jnp
inc
mov
dec
test
hlt
mov
call
stc
test
pop
dec
test
adc
xor
jo
loopne
pop
mov
seto
scas
jmp
push
ret
dec
xchg
jno
mov
mov
loope
scas
cmp
push
adc
push
out
aaa
dec
repnz
sub
rorb
xchg
and
in
pop
pop
sbb
insl
and
int
lock
sbb
scas
into
push
aam
insb
pop
pop
xor
je
cmpsb
lcall
xchg
insb
jns
add
dec
jo
lods
adc
jo
aas
insb
cs
or
adc
fsubs
gs
mov
out
push
or
std
addr16
pop
out
pop
jle
or
push
jmp
push
mov
aad
out
pop
shll
xchg
mov
mov
pop
cld
outsl
xchg
adc
mov
lea
sbb
push
mov
pop
es
jae
or
inc
xchg
and
push
pop
push
pushf
std
mov
ret
mov
int3
inc
fs
mov
cmpsb
cld
mov
mov
xor
add
fld
out
and
mov
xor
neg
mov
cli
negb
pop
and
pop
aaa
adc
push
jae
in
mov
or
gs
loope
mov
in
inc
xor
shlb
fmul
sarb
pop
dec
in
nop
jno
pop
loop
mov
and
insl
outsl
lcall
mov
push
sti
popf
mov
adc
insl
out
push
fldpi
adc
hlt
scas
ljmp
shll
cmpsb
xor
je
addr16
std
scas
ss
arpl
pop
inc
iret
mov
dec
mov
insl
push
sahf
jp
stos
pop
xchg
pop
xchg
cs
ja
push
shr
insl
lret
js
mov
stos
xor
cmpsl
and
xchg
inc
or
int
das
stos
fstp
adc
loop
pop
and
push
mov
dec
mov
divl
xchg
lahf
movsl
mov
call
lcall
dec
cmp
dec
sbb
fidivs
rorl
icebp
sub
bswap
loop
jecxz
scas
ficomps
outsb
shrl
pushf
sbb
jle
mov
or
cmp
fnstcw
add
push
scas
jo
ror
sbb
bound
ja
pop
addb
mov
fidivrs
sub
rolb
push
sub
pop
rorb
add
sub
xor
lock
mov
xchg
sub
add
pop
xor
fcoms
imul
xor
ss
stc
imul
cmp
mov
insl
stos
js
xchg
mov
mov
sbbb
sbb
movsb
lcall
pop
push
inc
add
gs
test
inc
int3
mov
dec
jb
lds
mov
iret
lods
mov
cmp
sbb
popa
es
cmp
xor
mov
imul
cmp
es
mov
or
cltd
mov
sub
scas
divb
or
test
pop
mov
pushf
movsl
dec
sub
pop
cmpsl
push
push
pop
inc
outsb
movsl
nop
sbb
cmp
aaa
jne
sahf
mov
jg
cmp
ja
jge
ljmp
cld
jbe
sbb
sbb
out
xchg
dec
or
pop
jg
and
into
xor
sub
shlb
js
out
mov
inc
jg
mov
dec
dec
shl
push
es
xor
xor
and
loop
repz
jl
stos
jo
cmpsb
prefetch
or
mov
outsb
stos
mov
jns
adc
and
sbb
stc
jbe
add
outsb
pop
push
pop
dec
xchg
jmp
ds
arpl
sahf
jge
xchg
xchg
cld
push
mov
push
adc
movsb
push
push
in
fldl
ss
icebp
int3
das
testb
inc
inc
xchg
jne
fwait
out
or
mov
fdivrl
stos
adc
mov
push
faddl
xchg
jecxz
xchg
ror
or
mov
fdivl
adc
fildll
rcl
mov
mov
cltd
insb
vpaddd
lret
cmpsl
into
lea
jl
and
pusha
cmc
std
fsubp
inc
jl
in
fiadds
outsl
lret
pushf
scas
loop
fmul
lcall
mov
mov
fisttps
mov
ficompl
or
insb
push
dec
inc
mov
mov
fdiv
repnz
sub
xchg
adc
jge
sarb
xor
or
inc
iret
pop
subb
ss
xor
xor
jmp
sbb
xchg
in
and
dec
sbb
daa
jp
lods
and
imulb
pusha
test
pop
cmp
stos
xchg
push
cmpsl
xchg
jnp
push
inc
sub
fwait
push
jge
push
push
aas
adc
sbb
orl
clc
pcmpeqb
or
fwait
shll
fs
add
cmp
or
adc
bound
or
int3
addr16
sbb
inc
lcall
fwait
xchg
cld
orl
out
add
inc
insb
sbb
mov
mov
out
clc
jno
mov
into
outsl
fsubr
adc
push
dec
inc
stos
addr16
jl
rcrl
xchg
popa
outsl
cmc
xor
test
stc
mov
cmpl
or
into
cmp
cmp
sbb
loopne
sbb
cwtl
sub
enter
cltd
add
and
push
aas
inc
data16
dec
cmp
mov
enter
leave
call
sub
leave
xor
or
ficoms
dec
or
pop
pop
scas
pushf
sbb
jb
xchg
mov
or
loope
rol
inc
jmp
jecxz
mov
pop
cwtl
xchg
les
jo
outsb
adc
push
mov
sbb
sbb
push
jecxz
lret
mov
adc
xor
adc
rcll
imul
mov
lcall
pop
jge
call
ja
shlb
pop
lidtl
out
xchg
push
shll
adc
out
xor
repz
xchg
pop
xor
in
data16
cmp
mov
push
inc
lret
idiv
jne
jb
mov
stc
sub
or
ja
es
and
cmpsl
mov
mov
int3
inc
inc
and
pop
sbb
pop
pop
cltd
xchg
cld
fmull
mov
fs
pop
pop
addl
in
and
int3
sub
xor
int3
stos
mov
sub
and
std
xor
hlt
pop
pinsrw
into
sub
pop
xchg
cmpl
sbb
cmp
dec
dec
fmull
lock
cmp
jl
nop
mov
mov
and
ss
sub
mov
jne
xor
repz
loop
outsl
mov
dec
stc
inc
sbb
icebp
mov
pop
fistpll
xchg
sbbl
mov
jl
aam
add
lea
fidivs
pop
push
xchg
xchg
cwtl
call
ret
cs
or
push
shll
xchg
push
add
cmp
inc
das
bnd
lahf
ss
es
mov
adc
and
ss
sbb
ja
cmp
push
rcr
outsl
mov
xchg
pushf
int3
jg
das
and
sbb
mov
inc
adc
mov
test
gs
pushf
sbb
jns
lahf
add
pop
outsl
xchg
xchg
inc
pop
mov
sub
pushl
into
leave
inc
lock
js
mov
push
pop
push
repz
call
push
xchg
data16
in
adc
pop
inc
loope
out
outsb
pop
je
and
pop
or
pushf
scas
pop
pop
cmp
pop
outsl
xchg
mov
ret
inc
daa
es
scas
repz
scas
pop
or
aas
inc
ljmp
jb
mov
mov
jecxz
mov
in
test
jmp
cmp
xor
add
xor
in
aam
sbb
dec
pop
cli
sub
divb
rol
outsb
sahf
jno
jl
addb
xor
adc
loopne
ljmp
in
in
mov
cmp
cltd
push
ljmp
and
mov
mov
insb
jg
jmp
jno
push
pop
xor
stc
push
cld
in
mov
pop
push
sub
push
mov
pushf
andb
scas
jne
inc
cmp
scas
jge
push
test
rorb
shl
in
fdivl
leave
movsb
lods
cwtl
cli
test
les
xchg
mov
cmpsb
lahf
sbb
dec
mov
push
mov
mov
sub
cmc
repnz
jmp
inc
mov
lods
int3
fisubs
sahf
jl
adc
loope,pt
test
aad
div
and
fcmovb
cltd
xchg
sub
and
inc
pop
ljmp
lods
cmp
mov
out
pop
mov
rorb
xchg
aas
sbb
adc
nop
fsubrs
scas
add
fldenv
jns
jns
jo
inc
pop
fcoml
shll
stos
xchg
fcomps
mov
shl
mov
fnsave
mov
jbe
lds
fistps
out
xchg
xor
outsb
aad
inc
inc
xchg
mov
sbb
xchg
pop
mov
jmp
mov
mov
test
inc
or
xchg
aad
movsl
pop
test
sbb
lahf
cmc
sahf
repz
or
int3
mov
jecxz
mov
mov
mov
fldcw
enter
pop
cmp
aad
jle
jg
imul
sbb
cs
outsl
adc
rorl
dec
ret
dec
out
movsl
or
test
mov
adc
bswap
inc
dec
repz
inc
icebp
mov
sbb
pop
fmulp
dec
jmp
ret
cmpsb
inc
icebp
testb
aad
lcall
sub
test
fxch
xlat
das
fadd
lret
bound
mov
orb
jmp
ret
mov
scas
xchg
lret
xchg
push
bound
xor
push
int3
enter
mov
push
mov
xor
jne
jle
jp
rcrl
aam
mov
dec
shr
negl
push
mov
enter
add
outsb
lahf
out
jb
sbb
out
mov
idiv
mov
cmp
fidivl
lods
push
jb
and
push
sbb
adc
rorb
mov
jo
sahf
xchg
test
sti
inc
inc
or
in
sub
inc
lods
sub
add
enter
xor
jnp
push
mov
pop
sbb
ljmp
inc
or
or
lock
sub
pop
int
test
adc
pop
dec
test
push
js
mov
pop
pop
jae
xchg
rcr
in
flds
sbb
cmpsb
mov
jg
lods
mov
jmp
lea
insb
ret
mov
adc
cmpsl
mov
pop
or
iret
and
sbb
xor
push
xor
xor
xchg
mov
mov
cmp
leave
pop
mov
jmp
inc
cmp
push
mov
fldenv
push
test
dec
lahf
add
stos
les
iret
mov
xor
inc
negl
push
ss
lods
in
leave
rcll
dec
adcb
call
mov
inc
outsb
jp
lcall
imul
xchg
xchg
sbb
fadd
in
aad
repnz
in
xchg
adc
and
rcrb
jmp
mov
lods
cmp
sub
sbb
xchg
arpl
mov
dec
sub
aad
jp
jl
int3
pushf
push
addr16
daa
push
outsb
xor
xlat
mov
jge
sti
fldt
aad
int3
dec
mov
fs
jns
cwtl
or
imul
subl
add
in
sub
sbb
xor
xor
sbb
fwait
or
jge
xor
push
add
pop
mov
xor
mov
aad
shrb
jbe
addr16
loopne
movsb
enter
and
sbb
and
pop
cmpl
jmp
aam
jg
ja
jle
shll
arpl
adc
scas
add
ss
pop
mov
loopne
mov
push
inc
xor
pop
inc
mov
xchg
jp
mov
std
or
push
sbb
jno
push
repz
enter
sub
push
push
clc
add
fldl
pop
stc
mov
lret
dec
push
cmp
vmwrite
movsl
nop
cwtl
dec
cmp
sbb
dec
push
jo
inc
push
jo
cmpsb
imul
push
imul
mov
inc
in
adc
rcl
sti
mov
adcl
push
daa
push
decb
push
add
jnp
cld
cmc
loop
adc
cmp
stos
loope
sbb
stos
leave
inc
cmc
push
popa
orl
xchg
mov
xchg
gs
popa
pushf
and
cmp
arpl
aam
into
stos
pusha
cwtl
and
cmc
mov
in
sarl
sbb
aam
sbb
push
mov
xchg
jp
arpl
push
mov
jbe
pop
add
xchg
inc
pop
xchg
jmp
mov
pop
outsl
dec
and
cmpsl
jae
push
jno
adc
inc
es
cwtl
jae
gs
sbb
stos
aas
inc
inc
cmp
into
rcrb
xor
pop
mov
or
das
jecxz
fiadds
inc
pushl
inc
shlb
scas
out
mov
pushf
sbb
adc
dec
jg
push
and
inc
loopne
sub
dec
adc
xchg
push
add
sub
int
out
push
fisubrl
pop
cmp
hlt
popf
lea
lea
aaa
js
leave
jp
adc
scas
jecxz
xchg
sbb
addr16
mov
xchg
push
xor
pop
outsl
push
data16
mov
jne
jecxz
fldcw
mov
adcl
pop
fists
lods
test
xor
aad
pop
cmp
fsubrs
aas
mov
and
mov
lds
jge,pt
sub
loope
inc
aaa
imul
ljmp
pusha
push
cs
push
and
sub
std
dec
mov
loop
into
int
repz
cmp
cmp
push
jecxz
in
iret
mov
jmp
ss
mov
mov
loopne
xorb
dec
add
push
inc
xor
shlb
lret
popa
call
std
mov
lock
xor
fwait
jl
ror
scas
lods
into
add
add
or
jl
mov
mov
inc
cmp
out
dec
lds
dec
mov
pop
mov
cld
add
mov
arpl
jg
in
mov
inc
jle
pop
jns
mov
and
add
addr16
mov
push
pop
mov
sub
rorb
xchg
inc
xor
cmp
cltd
mov
addr16
jns
xor
and
sub
xorb
lock
push
jmp
fldcw
in
aas
and
add
add
ljmp
mov
inc
sub
sbb
test
xor
add
scas
mov
push
dec
inc
imul
fnstsw
push
jae
int3
mov
test
jge
mov
lcall
cmp
xor
pop
jnp
xor
dec
enter
adc
leave
test
stos
rolb
popl
push
clc
hlt
push
loope
sahf
aam
mov
jl
adc
mov
or
sarl
cli
pop
mov
add
das
fstpl
inc
jnp
pop
rolb
inc
mov
push
fidivl
fwait
cmp
xchg
xchg
jecxz
roll
sbb
inc
xor
pop
shrl
pop
rcll
sti
fs
push
fsubrl
repz
cltd
ja
fcomps
cli
stc
dec
push
and
je
lock
mov
cmc
popa
push
sbb
inc
jns
leave
push
lret
nop
xchg
lcall
hlt
xor
mov
inc
dec
push
aas
stos
mov
jge
or
pop
les
adc
push
jae
data16
mull
pop
jbe
lds
mov
cmpl
sbb
mov
scas
push
pop
and
add
cmpsl
lods
adc
popa
imul
sbb
mov
pop
dec
xchg
jne,pn
xorb
scas
mov
rclb
gs
add
pop
mov
and
adc
in
mov
xchg
or
je
push
push
jbe
jg
adc
push
mov
stos
jbe
shr
dec
aaa
pop
xchg
mov
or
outsb
mov
mov
jnp
sub
add
jge
sub
popa
push
jns
xor
orl
jp
pop
aam
dec
jge
mov
mov
icebp
lock
aam
shr
or
je
loope
fs
addr16
dec
xor
mov
mov
int
test
inc
pop
sub
repz
inc
jecxz
ljmp
repz
in
ss
fcoml
cli
test
das
popa
sbb
and
test
scas
jg
xchg
xor
jecxz
nop
test
imul
push
lcall
hlt
mov
xchg
mov
data16
inc
orb
pushf
bound
movsl
add
adc
outsl
or
jb
mov
push
and
movsl
movsb
and
lock
jne
mov
jo
clc
or
inc
call
pop
mov
cmp
sub
lret
jne
add
lods
mov
xor
inc
test
push
inc
dec
sbb
jmp
pop
lds
in
mov
int3
lcall
stc
lret
sub
mov
jno
jnp
fnstcw
mov
sbb
fdivrl
mov
aam
mov
test
sub
sbb
stos
push
pop
mov
jne
movsl
adc
cld
insl
cmp
mov
hlt
clc
subb
hlt
mov
pop
gs
pop
jecxz
mov
dec
and
sbb
push
out
inc
push
std
je
movb
movsb
or
xor
jno
icebp
adc
or
das
sbb
mov
repnz
and
dec
mov
lea
dec
outsb
jno
rcr
cmp
sarb
push
add
add
sbb
mov
lahf
js
pop
sahf
xchg
sarl
add
jbe
adc
out
pushl
sub
sbb
push
cmp
fmull
push
scas
pop
enter
fs
mov
scas
in
mov
in
sub
lods
push
fisubl
sti
add
push
cmp
xor
in
sbb
fisttpl
push
push
cmpsl
cmpsl
subb
cmc
sbb
jb
lahf
dec
dec
out
sbb
lcall
push
xchg
outsl
das
jnp
pop
xchg
stos
adc
mov
sub
xor
out
or
lahf
ds
dec
cmc
ljmp
imul
pop
xor
and
add
cmp
xor
or
mov
and
mov
sbb
push
divl
add
ficoml
add
add
std
jle
push
adc
call
pop
arpl
out
rcll
cmp
ficoml
in
push
decb
jns
test
sbb
cli
push
inc
sub
inc
push
cmp
ds
mov
outsb
push
cmp
mov
lahf
mov
push
into
pop
xchg
scas
push
lret
stc
and
clc
push
movb
mov
pop
sbb
cmpsb
mov
dec
bound
jne
int
jecxz
jmp
addr16
adc
mov
push
sub
add
add
iret
test
mov
cmp
cli
lret
and
cmpsb
fdivrl
xor
in
subl
imulb
cmp
insl
jge
dec
dec
xchg
aaa
ds
mov
cli
lods
imul
push
enter
cltd
cmp
das
cld
xor
push
lcall
mov
pop
mov
mov
flds
jmp
sbb
test
jl
cld
xlat
scas
mov
cmp
xor
pusha
jmp
lret
repnz
dec
mov
mov
popa
addr16
cld
test
leave
fisubrs
mov
inc
jge
mov
mov
xor
cld
dec
mull
and
popf
add
xchg
push
push
dec
cs
sbb
jge
addr16
xchg
mov
divl
icebp
pop
xchg
jl
fldl
inc
popa
in
pop
inc
xor
out
decl
cltd
imul
xchg
fs
cmp
dec
cli
jmp
dec
shlb
dec
lods
mov
xor
imul
mov
cmpl
mull
sahf
es
xor
push
sub
jg
bound
std
ss
ret
lret
inc
inc
inc
in
std
scas
mull
push
rclb
push
xor
xchg
add
adc
cmp
nop
icebp
mov
imul
and
ficoms
cmp
push
sub
fcmovnb
imul
fs
or
int
add
xchg
fiadds
into
pusha
jno
pop
jbe
call
add
test
jae
dec
inc
push
dec
lods
xlat
or
dec
sub
aam
push
mov
out
insl
sar
pop
jle
jg
adc
fcoms
inc
loopne
popl
cwtl
testl
dec
sbb
fidivl
popf
fincstp
jns
ret
cli
xor
xchg
movsl
ja
xor
jl
mov
aad
adc
aas
lds
imulb
data16
push
jno
push
sbb
je
or
add
mov
add
mov
or
mov
mov
sbb
das
fdivrs
add
fidivs
push
test
cmc
icebp
pop
xor
and
and
jbe
mov
mov
dec
inc
ljmp
mov
scas
fnstcw
add
jne
icebp
out
pop
pop
push
dec
lea
or
sahf
add
jmp
xchg
inc
cwtl
cltd
mov
enter
lea
and
push
xlat
enter
add
pusha
pop
pop
dec
lret
dec
call
cli
mov
stc
mov
add
mov
sbb
inc
xchg
add
mov
cs
cmp
fnstcw
push
jge
pop
sbb
lods
sub
repnz
test
bound
xchg
dec
adc
pop
and
nop
pop
daa
mov
in
out
pop
dec
mov
pop
in
call
lods
pushf
inc
mov
jmp
mov
test
je
test
dec
or
lods
das
clc
sahf
hlt
adc
int
xchg
push
pop
es
aam
jbe
push
xlat
mov
xchg
jp
int
add
dec
jno
jo
dec
js
push
mov
loop
pushf
add
fdivl
fnsave
xchg
inc
inc
mov
sbb
scas
loopne
out
ret
pop
xchg
push
test
aad
jb
or
js
mov
xchg
jecxz
cmpb
push
cmpsl
xchg
outsb
aad
mov
lcall
sbb
rcr
xchg
lcall
or
push
push
mov
fdivrs
mov
arpl
inc
jbe
add
xor
js
and
push
repnz
dec
pop
dec
push
cmp
popf
inc
in
mov
and
push
or
inc
jl
sub
mov
fisubs
jno
js
xchg
mov
xor
popf
xchg
jae
push
cmpsl
dec
das
add
loopne
aad
xor
adc
cmc
imul
pop
fwait
test
push
rol
test
mov
aad
aaa
data16
mov
jo
daa
xor
test
push
cli
xor
jnp
push
dec
sub
jp
mov
pop
dec
dec
cmp
jle
sbb
in
out
and
push
pop
mov
mov
add
cmpsl
mov
mov
or
lock
mov
lret
rcr
inc
mov
xor
push
les
loope
in
xchg
push
loop
or
popa
popa
xchg
clc
outsl
jp
divl
and
add
mov
push
sbb
push
scas
mov
xchg
inc
dec
faddl
insl
cmc
cld
lds
leave
popf
mov
scas
outsl
in
movsl
test
mov
add
jmp
mov
cmp
daa
jp
fiaddl
rcl
mov
push
mov
insb
loop
in
pusha
sahf
xchg
sbb
call
sub
and
cmp
ret
outsb
adc
xchg
inc
jg
mov
out
adc
cli
push
sbb
jmp
mov
mov
imul
mov
fistpll
nopl
inc
sub
mov
fwait
jnp
loopne
jg
sub
aam
jge
pop
or
or
sbb
jmp
jg
lret
cmp
xlat
cmp
push
sbb
icebp
add
lcall
mov
jcxz
add
push
jmp
cmp
dec
xchg
adc
sbb
mov
inc
cmpsb
repz
inc
lock
iret
fwait
stos
aas
and
test
loop
pop
cs
aas
outsb
in
mov
mov
jnp
arpl
fmull
xchg
adc
pop
in
ja
pusha
jle
dec
jnp
xor
or
inc
fwait
xchg
xchg
dec
jmp
cmp
cmp
aam
jmp
adc
iret
dec
mov
outsb
lcall
pop
popa
cwtl
xchg
repz
xchg
jno
push
pop
sub
sarl
lcall
sub
mov
push
mov
or
mov
jle
cmp
mov
movsb
jns
insb
mov
test
and
popa
or
push
cmp
push
cmpsb
mov
cmp
mov
inc
cmp
mov
lcall
jg
xchg
jns
mov
sub
iret
inc
shrb
push
push
sub
push
sub
cmp
or
jo
push
leave
push
and
push
pop
jne,pt
or
jo,pn
adc
fildl
aaa
and
xor
rcr
loop
hlt
jne
shrb
inc
outsb
cmp
cmp
mov
test
bnd
clc
sbb
inc
aaa
test
and
add
xchg
xor
fisubrl
cmp
jae
sbb
mov
add
sbb
xchg
cmp
sbb
xor
test
mov
xor
mov
outsb
fs
jmp
dec
lahf
mov
data16
mov
inc
rclb
insl
pop
mov
jmp
fmulp
sub
sbb
aad
dec
leave
xlat
jns
mov
pop
push
dec
push
xor
sub
leave
ret
movsb
pop
push
out
mov
idivl
ss
pusha
enter
add
cmpsl
pop
imull
cmpl
lahf
outsb
arpl
call
and
jmp
cmp
dec
fisubs
leave
pop
pop
jp
push
pop
xchg
or
test
es
stos
das
data16
add
adc
jge
or
les
into
enter
addl
loope
push
adc
es
inc
sahf
iret
ret
roll
sbb
inc
pop
fistpll
inc
sbb
in
mov
xor
fwait
lds
into
sahf
pop
das
dec
loope
pop
stos
filds
stos
sub
ret
sbb
sbb
lock
loopne
iret
es
mov
pop
push
test
cmp
xchg
lods
shlb
aas
icebp
cs
call
out
jno
aaa
lcall
mov
pop
lods
aam
in
ja
jo
sbb
pop
ja
pop
imul
faddp
fisttps
dec
xchg
mov
mov
out
pop
mov
lods
push
test
xchg
push
test
inc
subb
dec
bnd
dec
push
push
push
xor
inc
movl
mov
and
push
insb
push
int
and
pop
mov
mov
or
lock
xchg
mov
and
addb
inc
roll
lcall
scas
or
aaa
test
jns
mov
push
arpl
movsl
mov
icebp
xchg
pop
push
addr16
push
and
mov
shl
sub
gs
in
insl
xchg
addr16
imul
jns
inc
jnp
pop
cmp
in
sbb
into
mov
sbb
pusha
push
jle
shll
fs
or
or
daa
jp
sbb
iret
mov
sub
icebp
js
cmpsl
sti
movsb
fnstcw
pop
push
jp
icebp
inc
frstor
xchg
mov
shrl
pusha
in
rol
add
daa
mov
stos
popa
dec
subl
popa
js
mov
fidivrs
test
test
sub
dec
sub
push
dec
roll
or
sahf
out
pop
inc
inc
aam
pushf
and
mov
mov
test
rorb
lcall
xchg
loop
icebp
fildl
js
pop
out
aaa
fcmovbe
inc
int
push
test
mov
in
enter
mov
add
notb
pop
int3
int
lret
lret
aam
xchg
push
mov
aam
int3
insl
je
leave
hlt
cmp
xchg
pushl
fildl
into
jb
sub
xor
call
lds
lods
insb
sbb
fistpl
jne
sbb
aaa
dec
xor
adc
or
sub
xchg
adc
xor
stc
decb
xchg
and
and
mov
mov
enter
int3
mov
rcl
rorl
and
cmp
mov
pop
xchg
aam
xchg
dec
js
push
mov
mov
popf
lret
xor
dec
iret
or
dec
movsb
or
xchg
ret
add
xor
int3
dec
xchg
js
xchg
lcall
adc
loope
sbb
cmpsl
adc
mov
jecxz
add
pop
out
pop
loope
xchg
jl
push
adc
andl
or
shl
push
pop
xchg
test
cmp
movsl
or
movsl
sti
outsl
addr16
mov
or
fnstenv
inc
hlt
addr16
in
js
inc
or
pop
add
imul
jg
push
mov
dec
mov
nop
push
test
test
add
or
and
cltd
pop
or
mov
push
sub
mov
in
add
jmp
xchg
callw
enter
sub
popf
fucomp
out
sbbb
cs
inc
ror
fildl
mov
fists
mov
ror
sub
cltd
mov
jp
loopne
aam
fmul
sub
popa
lods
mov
gs
orl
inc
adc
or
sbb
cmpsb
ret
jo
fcmovbe
inc
xorb
push
sub
popf
test
das
inc
mov
cmc
andl
test
out
and
loopne
inc
dec
mov
popf
mov
mov
inc
inc
test
lret
loope
pop
loope
add
pop
testb
cmp
insb
sti
dec
fcmovbe
xchg
loopne
call
rep
lea
aad
cld
xchg
xchg
test
shrl
adc
cmc
push
inc
mov
aas
jbe
test
adc
cli
stos
pop
xchg
pop
jg
call
fidivrl
adc
cmp
lds
jg
imul
sbb
ljmp
mov
mov
dec
mov
rolb
stos
push
lock
and
popa
dec
insl
pop
fdivs
aas
jae
jmp
add
jmp
or
inc
outsl
add
jg
push
mov
jl
push
fldt
imul
sub
ds
loop
dec
movsb
jo
lret
jnp
adc
cmpsb
out
add
fmull
icebp
repz
loopne
or
fcmovne
das
and
jae
aas
arpl
scas
insl
repnz
pushl
xchg
repnz
pop
xchg
out
add
cs
mov
repz
jo
pushf
clc
xlat
scas
nop
push
ficoml
shl
nop
scas
adc
cltd
aad
test
int3
aad
push
xor
push
mov
pop
repnz
ds
add
jge
fwait
xlat
sbb
je
pop
imul
ficompl
jmp
in
icebp
mov
push
pop
and
cmp
imul
int3
sti
sub
xchg
aas
rcr
fdivrs
sub
xchg
in
xor
bound
aas
rcll
pop
les
jecxz
ret
xchg
push
xor
xlat
fdivrs
mov
loop
scas
and
xchg
call
inc
mov
testl
adc
fucomp
push
mov
jne
jbe
push
pop
mov
sbb
das
fs
lret
adc
popf
lds
push
pop
xor
xchg
mov
pushf
mov
out
lret
out
inc
dec
mov
movsl
mov
cltd
fistpll
scas
add
fiadds
pop
aaa
pop
dec
sbb
arpl
in
dec
ror
xchg
sub
and
pop
dec
xchg
mov
cmc
mov
xor
or
pushf
or
std
pushf
gs
mov
addb
popf
fidivs
popf
inc
test
adc
sub
inc
cmpl
cld
xor
arpl
sbb
and
stos
sbb
adc
push
push
jge
lahf
inc
outsl
scas
ret
inc
sbb
inc
or
sub
fnstsw
mov
fidivs
mov
or
and
ljmp
stc
dec
ljmp
cmpsl
xor
cli
and
pop
adc
sub
adc
dec
fs
mov
pushf
addr16
insl
cli
imull
cwtl
xlat
mov
cmpl
int
inc
repnz
mov
inc
out
lods
nop
outsb
jbe
fs
jae
aaa
out
jnp
hlt
jl
aas
cmpsl
sub
or
and
inc
in
mov
xchg
xor
push
jmp
lods
psubusw
mov
sub
pop
stos
daa
in
cmpsl
out
cs
xor
call
stos
ret
lret
cmpsl
daa
xchg
dec
mov
in
xchg
fcoml
enter
sub
imul
sub
popf
pop
out
dec
jmp
mov
mov
jb
push
pop
push
cmpsl
shl
mov
in
jp
aam
inc
lret
orb
dec
push
sub
cmpsl
lods
dec
sbb
cmc
out
xchg
out
inc
movsb
in
inc
mov
push
push
push
adc
sar
popf
nop
xchg
lock
test
cld
dec
cmp
lea
xor
jno
sbb
jg
and
cwtl
mov
dec
out
push
add
xor
nop
or
lea
mull
xorl
mov
xchg
mov
push
xor
sub
pusha
add
iret
add
aas
icebp
std
push
jl
push
lock
cmp
push
xor
int3
std
imul
jmp
sub
jge
test
add
adc
sub
fistl
lret
ss
shr
ret
arpl
outsb
and
mov
jmp
fisubrs
jo
dec
or
push
mov
mov
sub
push
out
outsl
sbb
jns
shl
xlat
popf
imul
loopne
addb
aas
push
add
sbb
mov
cmpsl
mov
lret
jo
imul
jnp
lret
movsl
xchg
sub
sbb
into
insl
aam
fs
daa
jge
jp
ja
xor
or
rolb
pop
cmp
in
jne
push
mov
addb
adc
aam
shrb
add
push
dec
sbb
add
adc
xchg
repz
jbe
pop
pusha
loopne
jo
mov
into
jmp
test
sub
lret
fsubr
je
jns
lods
shlb
inc
mov
mov
out
int3
hlt
arpl
aaa
pop
into
lea
mov
lods
dec
add
add
lcall
mov
outsl
gs
arpl
sahf
xor
xor
xchg
shrb
lock
sbb
adc
dec
sti
sub
test
std
mov
filds
push
sahf
lea
ja
inc
adc
dec
loope
cmp
push
dec
mov
mov
mov
jmp
push
jbe
lcall
pop
into
inc
dec
and
push
pop
and
jge
arpl
jg
aad
pushf
test
scas
mov
in
jo
and
dec
int
add
ja
neg
push
inc
mov
xchg
add
adc
imul
enter
inc
mov
cmp
dec
push
add
insb
in
das
in
daa
incl
xor
or
js
xchg
sar
scas
mov
sbb
imul
sub
add
inc
out
stos
pop
dec
cltd
add
rcll
aas
aad
shll
imul
rorl
imul
test
inc
hlt
rolb
in
push
ljmp
dec
shl
or
xchg
pop
sti
hlt
xor
push
test
popf
mov
out
mov
push
add
scas
out
rcrl
pop
mov
push
or
stc
shll
mov
adc
jae
mov
fmull
sub
inc
xor
mov
test
subb
std
jo
or
xchg
push
push
setp
or
mov
dec
xchg
or
or
xor
mov
pusha
cmp
cltd
addr16
mov
and
inc
ret
pop
or
mov
fcmovne
or
test
inc
and
das
lcall
xlat
outsb
in
scas
pop
call
sbb
int3
std
pop
mov
mov
rcrl
insl
js
adc
int
std
or
ds
push
imul
aaa
jb
cltd
mov
es
cs
lods
inc
adc
pop
pusha
xchg
sub
hlt
test
cmp
sbb
imul
push
ffreep
imul
cld
cs
add
xor
dec
dec
lret
lods
pushf
and
push
ret
into
pushf
cmpl
fwait
push
push
mov
mov
fs
ret
inc
inc
mov
adc
sub
add
add
mulb
in
jp
rcrl
fsubrl
pop
pop
push
test
cwtl
ja
mov
mov
mov
dec
push
xor
dec
cmpsb
xchg
out
pop
aad
add
mov
push
pushf
mov
enter
test
shlb
inc
adc
jmp
and
jmp
push
jb
sub
mov
jns
movsb
pop
dec
pop
rol
hlt
pop
out
adc
testl
je
and
jg
sub
outsb
bound
add
scas
mov
push
fmuls
les
jle
xor
sbb
les
jge
out
aas
ss
mov
pop
pushf
pop
negb
dec
test
add
cmp
repz
mov
adc
ja
aad
push
mov
push
xchg
fbstp
cmp
and
imul
fldenv
xor
fisubrl
cmpsb
cmp
inc
roll
lret
add
jg
fildl
outsl
jecxz
mov
push
push
icebp
stc
decb
mov
shl
cmp
int
dec
sbb
jmp
inc
push
mov
sub
cmp
sub
jmp
or
sub
jge
dec
push
cmp
std
scas
lcall
push
test
lds
or
popa
sub
aam
add
mov
push
daa
shlb
lahf
sbb
jns
dec
les
loop
iret
lret
dec
mov
xchg
lock
push
cltd
or
nop
push
adc
xchg
jb
rolb
int
lea
cmp
mov
inc
inc
dec
lret
push
in
loope
mov
insb
gs
mov
adc
jl
aaa
sbb
add
mov
jp
cmp
adc
lahf
fdivrl
popf
cmp
cmpsb
lods
or
and
int
mov
xor
or
cltd
iret
xchg
and
ret
insb
divb
push
or
xchg
inc
roll
pop
cs
out
scas
adc
outsl
inc
lea
jns
ss
in
fnsave
add
or
cmp
jle
shll
cmp
shlb
cwtl
repz
xchg
mov
cmp
xlat
mull
aas
push
sub
cltd
xchg
ror
scas
fwait
and
pop
out
inc
push
test
adc
cmp
sbb
inc
push
aas
sub
imul
mov
xchg
cmp
lret
aad
sbb
rorl
es
ljmp
xchg
in
ficompl
std
mov
inc
pop
idivb
test
and
nop
lcall
xchg
dec
or
xchg
push
dec
add
and
dec
adc
ja
mov
test
add
xchg
cmpsb
cmc
jae
pop
and
push
or
xchg
push
jbe
jecxz
push
add
cmpsl
stos
scas
push
or
cmp
out
jmp
sbb
ljmp
jge
out
xor
aam
iret
lcall
mov
int
jnp
jo
xor
push
mov
int
imul
jne
push
popf
ja
add
std
mov
sub
aam
sahf
mov
or
adc
cmpsl
bound
sarl
pop
cmp
test
jo
aad
mov
sub
aas
mov
fsubr
push
les
add
pop
push
mov
out
shrl
enter
push
fmull
mov
in
mov
outsl
push
jbe
ljmp
out
arpl
lcall
dec
mov
xor
jns
inc
adc
popa
and
insb
mov
xor
int
lret
stos
rclb
pop
adc
ss
repz
icebp
inc
jle
push
leave
add
adc
dec
testl
fs
fs
mov
dec
shrl
scas
jp
jmp
pop
xor
sbb
mov
dec
js
xchg
jns
adc
js
jle
lods
ret
pop
jo
xor
xchg
dec
sar
imul
cmpsb
out
outsl
push
jbe
sbb
mov
dec
xor
loop
xchg
jg
sarb
sub
cmp
and
dec
daa
scas
enter
xchg
xchg
jno
inc
enter
rcrb
lahf
ss
xchg
pop
inc
sbb
adc
mov
mov
movsb
or
sub
dec
adc
sbb
hlt
inc
pop
aaa
aam
mov
mov
sarb
jl
xchg
js
xchg
xchg
fsubl
jo
scas
push
fwait
jg
bound
leave
sbb
and
insb
mov
inc
and
mov
cld
xchg
call
aad
inc
sbb
jge
fdivrs
aas
mov
data16
mov
push
push
insb
notl
lods
test
pop
fadds
or
dec
sbb
mov
fwait
or
sub
dec
adc
pop
lods
mov
xchg
insl
js
mov
stc
hlt
dec
cmp
call
inc
outsl
stos
or
mov
jl
aam
push
popf
jne
and
xchg
test
aad
cltd
clc
cmpl
jle
scas
fstps
fs
hlt
ljmp
sbb
push
lea
test
jns
sti
dec
xor
mov
xchg
jb
das
movsb
js
adc
loopne
jmp
adc
or
pop
mov
add
std
shl
dec
dec
jne
or
push
daa
mov
enter
insb
jge
mov
and
cmp
or
fisubs
dec
push
loopne
jno
sbb
push
cwtl
xlat
mov
jmp
inc
pop
popa
stc
es
rcrl
cmp
das
shlb
mov
jp
les
int3
test
das
faddl
xor
add
aam
adc
test
cmp
into
loop
jp
lahf
mov
sub
stc
mov
cs
loopne
mov
cwtl
loop
das
adc
iret
arpl
xor
inc
sbb
imul
and
xchg
inc
idivl
mov
jecxz
out
scas
dec
into
les
std
push
test
xchg
sbb
mov
jmp
int
xor
adc
mov
jmp
push
ss
xchg
in
or
mov
pop
test
jnp
pop
cld
cmp
pop
test
xlat
movsl
aad
inc
test
scas
adc
sbb
xor
jo
or
mov
fucomp
cmp
cli
pop
test
adc
add
push
inc
adc
gs
addr16
rorb
adc
mov
lock
call
int3
or
mov
mov
or
and
or
dec
mov
in
xchg
popf
xor
scas
mov
jp
pop
dec
and
dec
mov
pop
jnp
or
testl
cmp
cmc
insb
jne
imul
cmp
fsubs
ret
imul
cmpsb
fmul
sub
sti
adc
xor
int
xor
and
lret
xchg
jns
sti
sbb
and
out
dec
add
aad
into
cltd
fnsave
sarl
sti
add
popf
sbb
mov
in
pop
mov
jb
divb
adc
adc
mov
ja
xchg
int3
pop
push
leave
push
adc
movsb
inc
dec
ret
lock
pop
cli
roll
lret
je
adc
xchg
movsb
fadds
and
and
mov
xchg
add
push
mov
mov
mov
adc
mov
xor
ljmp
lock
push
stos
xor
or
sti
and
stos
lods
imul
xchg
sub
pop
imul
mov
cs
aad
cld
or
enter
lock
mov
mov
push
cmp
push
rcrl
mov
cmp
repz
pop
mov
sbb
mov
out
and
adc
mov
sar
enter
loop
sbb
mov
lods
push
sub
mov
js
pusha
push
dec
jnp
dec
push
inc
lock
sub
cmp
in
lods
rcrl
outsl
cltd
dec
push
arpl
fsts
xor
movsb
fisubrl
int3
mov
ds
movsl
es
imul
and
and
cmp
or
sbb
sbb
push
or
pop
cmp
jns
mov
dec
fs
xchg
dec
jmp
ret
xchg
aaa
test
out
loopne
mov
popf
sub
mov
adc
jnp
daa
jp
push
xor
repz
jb
inc
enter
repnz
inc
insl
cmc
cmp
outsb
inc
adc
sub
pop
jle
xor
sbbl
loopne
in
push
arpl
jae
pop
std
out
add
add
mov
nop
mov
xchg
xchg
in
pop
sbb
cmpsb
cld
cmpl
jo
xchg
cmc
mov
sbb
xchg
ds
jno
mov
sbb
sbb
js
adc
and
inc
push
stos
cmpsl
leave
pop
and
pop
push
mov
cmc
in
push
or
in
lea
outsl
ljmp
lret
jecxz
and
icebp
and
jns
or
scas
jnp
jmp
xor
mov
daa
icebp
jmp
in
mov
push
out
jg
and
and
rorl
test
xlat
mov
mov
dec
adc
jnp
cli
enter
test
loopne
pop
imul
fs
movsb
dec
jg
mov
sub
mov
push
movsb
out
mov
mov
adc
movsb
shlb
aaa
mov
push
push
inc
xor
lock
hlt
scas
add
les
out
or
jne
std
mov
lods
pop
clc
push
add
push
jne
sti
inc
fdivr
pop
mov
mov
enter
out
xor
rolb
iret
adc
xchg
call
or
fidivl
fwait
jge
mov
cmpl
fwait
repz
push
mov
and
sbb
imul
mov
inc
mov
jmp
scas
inc
mov
mov
fists
mov
xor
push
pop
adc
ret
mov
dec
aam
jnp
adc
sub
xor
je
out
jp
pushf
aaa
dec
push
lods
cltd
xor
and
out
or
sbb
clc
imul
sub
mov
in
xor
add
out
data16
sub
movsl
movsb
test
pusha
in
xchg
sbb
outsl
addr16
bndstx
fistpll
push
push
push
in
pushf
push
call
stos
cmpsl
cmp
mov
add
mov
push
pop
jns
xor
gs
cmc
out
sbb
xchg
fdivrl
roll
inc
rclb
aad
sbb
push
mov
sbb
push
cmp
jge
and
adc
mov
sbb
sbb
dec
add
or
ret
cmpsb
mov
mov
push
pop
sbb
mov
in
sub
mov
daa
sbb
nop
inc
iret
je
dec
dec
std
int
test
mov
xchg
add
jnp
cli
imul
pop
inc
pop
sub
ss
xchg
fildll
pusha
popa
sbb
sub
cmp
sub
pop
inc
dec
int3
sub
mov
pop
inc
mov
arpl
inc
mov
aad
push
ss
pop
stos
dec
cmp
push
mov
into
mov
test
cltd
push
es
and
outsl
call
dec
subb
sub
insb
scas
xor
add
dec
arpl
test
xor
sub
ret
xor
pop
xor
data16
cmc
shll
sub
jge
dec
adc
add
mov
jae
insb
repnz
push
cmpsb
les
xor
xchg
rclb
mov
cmpsl
shll
push
test
out
shlb
and
push
clc
inc
shrl
xor
mov
popf
mov
addb
leave
adc
mov
test
xchg
in
shlb
bound
in
push
mov
jae
popa
insb
out
push
jle
fs
jo
leave
jge
mov
xchg
les
sbb
addb
in
addr16
jl
dec
push
mov
orl
sub
fnstsw
cmp
or
adc
inc
adc
add
pop
cmp
pop
je
push
xor
xor
mov
cmp
push
jge
jle
cmp
sub
aas
cmp
xchg
lods
add
jle
pop
mov
loop
xchg
xor
inc
sub
xchg
and
rol
xlat
out
mov
faddp
xlat
jo
push
push
push
mov
sahf
fldcw
sbb
pop
sub
lds
or
add
sub
sbb
sahf
jl
xchg
aam
les
mov
mov
sub
mov
outsl
iret
je
in
int
push
sbb
jmp
mov
int3
xor
ds
stos
push
push
bswap
xor
rcr
cs
mov
jb
or
inc
fcomp
mov
mov
fwait
xor
fistps
je
pop
xor
dec
out
inc
pushf
xchg
icebp
dec
loop
out
lgs
sarl
icebp
jne
ljmp
lret
xor
lds
std
mov
jbe
lcall
xorl
or
push
pop
sbb
mov
scas
or
sti
pop
xchg
ret
jb
push
mov
pop
sbb
push
jl
repz
lock
inc
mov
jle
fsubrs
dec
fsubs
cmp
push
data16
adc
push
pop
daa
je
push
insb
cltd
push
adc
out
call
add
add
hlt
popa
dec
inc
stos
imul
xchg
xchg
movsl
inc
mov
push
leave
out
push
push
lcall
les
in
mov
cmc
push
es
test
fs
push
fisubs
push
loop
cmp
sub
js
orb
mov
lea
and
push
mov
out
pop
fimull
mov
and
fadds
dec
sbb
out
add
ja
cmpsb
push
sub
dec
test
jl
mov
shrl
adc
enter
into
js
std
fadds
or
and
or
or
mov
mov
outsb
and
xor
cli
ret
cs
sarl
test
xchg
xchg
sarb
mov
insl
xchg
aam
fisubl
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
pop
aaa
jns
sbb
adc
in
testl
nop
sbb
jl
inc
sbb
xchg
xlat
cld
outsl
loop
xchg
cmpsl
xor
fbstp
notl
popa
and
gs
mov
mov
into
lgdtl
ret
psrlw
and
mov
xor
mov
shlb
mov
mov
scas
sbb
add
scas
cmp
cmp
dec
lock
iret
int
ljmp
sbb
js
and
pusha
xor
popa
in
mov
fcomp
jae
pop
je
nop
fcoms
imul
roll
inc
or
push
fidivrl
xor
lahf
aas
dec
dec
push
fbld
scas
jg
orl
arpl
cmp
xor
jecxz
daa
cmp
jnp
xchg
inc
fistpll
inc
mov
jp
adc
jo
xlat
pop
xor
arpl
lret
or
xchg
hlt
xchg
add
fnstenv
jns
jmp
jno
jbe
xchg
dec
lcall
push
shrb
ss
inc
adc
push
cli
loop
mov
int
cli
push
imul
mov
jns
adc
iret
scas
or
cmp
out
dec
add
mov
outsl
and
ss
fsub
mov
sbb
mov
push
mov
xchg
mov
xor
stc
in
mov
addr16
loop
cmp
sub
mov
sbb
sub
in
push
out
jp
popa
mov
fwait
push
push
test
dec
shrl
mov
push
ret
mov
push
cli
stos
jle
faddl
icebp
mov
ja
jno
jle
arpl
imul
int3
and
inc
mov
push
ss
rcl
push
jo
push
xchg
sbb
leave
inc
andps
or
jnp
nop
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
outsb
add
outsb
add
