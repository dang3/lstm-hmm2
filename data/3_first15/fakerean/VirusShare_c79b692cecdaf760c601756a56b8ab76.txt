inc
and
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
push
mov
push
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
mov
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
pop
mov
mov
xor
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
mov
mov
call
mov
lea
call
pop
pop
pop
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
jmp
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
lea
xor
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
jmp
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
movl
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jbe
lea
movzwl
addw
lea
add
cmp
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
jmp
movb
movw
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
shr
and
cmp
mov
je
test
je
cmp
jb
cmp
jae
test
je
cmp
jb
mov
shr
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
movzbl
add
sub
add
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
pop
pop
mov
pop
ret
test
je
nop
movzbl
add
sub
add
add
test
jne
cmp
jae
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmpl
je
mov
mov
push
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
movl
jmp
test
jne
test
jne
and
mov
movl
mov
test
jne
mov
mov
movl
mov
mov
shl
sub
and
mov
mov
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
test
je
mov
shr
movzbl
add
shr
sub
test
mov
jne
mov
shr
and
mov
mov
movl
mov
test
je
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
mov
movl
cmpl
je
mov
sub
mov
cmp
ja
mov
sub
mov
mov
mov
cmp
ja
sub
mov
mov
sub
mov
mov
mov
add
add
sub
jne
cmp
jne
movl
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
cmp
jae
lea
cmp
jb
mov
movzwl
movzbl
and
mov
mov
add
mov
shr
sub
cmp
mov
jb
mov
cmp
jae
mov
movzwl
movw
add
cmp
jb
lea
lea
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
movl
mov
add
cmp
jae
mov
mov
shl
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
shr
sub
mov
mov
addl
mov
mov
add
cmp
jb
cmpl
je
cmpw
je
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
add
mov
add
mov
cmp
ja
cmpl
je
mov
mov
subl
mov
addl
cmpl
jne
jmp
movzbl
lea
cmp
jb
mov
shr
sub
test
je
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
outsl
inc
add
inc
add
add
not
cld
add
add
std
incb
mov
add
fcoms
test
jno
ret
add
roll
add
jb
je
add
jl
add
add
pop
add
add
std
jno
sub
push
mov
add
push
push
push
lea
push
call
fsubrs
test
loop
add
add
add
in
out
int3
add
add
fldl
add
xchg
mov
pushf
test
add
jnp
sub
pop
popl
push
lea
push
lea
push
push
call
mov
add
add
in
loopne
add
mov
xchg
in
incb
jae
add
pop
lahf
add
sti
loope
add
fs
out
push
jno
add
lret
add
add
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
sarb
fldl
add
add
add
xchg
movsl
je
jle
add
add
add
insb
lock
insb
jl
popa
xchg
loopne
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
call
lea
int3
pusha
add
add
add
add
cli
add
cltd
add
add
cmpsb
lcall
gs
sub
pop
push
call
push
lea
push
lea
push
push
lea
push
call
shlb
mov
into
fsubp
enter
lock
add
in
lods
stos
add
filds
test
jmp
add
jae
fadds
add
add
movsb
bound
in
in
lcall
add
cmp
push
push
lea
push
call
pop
rclb
mov
add
add
insb
ret
jb
std
xchg
out
lcall
mov
push
repnz
faddl
pop
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
add
stc
add
in
pop
fldl
add
test
cwtl
arpl
adcl
push
add
jmp
xlat
pop
add
add
scas
fcomps
sahf
add
cmc
add
push
mov
bound
in
loopne
lcall
insl
add
add
push
push
call
add
add
push
jo
add
lock
lods
cld
add
stos
add
push
jp
pop
pusha
add
in
stos
popa
lock
int
in
fiaddl
lea
add
add
add
pop
lods
repnz
add
xchg
jnp
cli
add
mov
in
test
add
add
jge
cwtl
nop
sub
pop
mov
push
lea
push
push
push
push
push
push
call
push
movl
push
add
insb
popf
jne
fimull
andb
add
add
popa
add
add
add
push
in
add
add
mull
data16
add
stos
ficomps
std
mov
add
mov
add
sub
pop
mov
add
push
lea
push
push
push
call
xchg
add
add
sarb
jne
push
icebp
mov
add
add
jae
xchg
pop
add
bound
lea
mov
mov
lock
add
push
push
push
lea
push
call
push
jp
xchg
incb
add
add
add
mov
add
fwait
test
add
add
xchg
fnsave
in
lock
lcall
ret
je
add
push
push
lea
push
call
mov
icebp
int
movsb
loope
pop
jecxz
add
add
add
sti
imul
mov
fwait
div
movsb
out
add
mov
mov
add
jmp
add
push
mov
lods
pusha
rcrl
sarl
popa
cmpsb
icebp
add
add
in
hlt
pop
mov
push
push
push
push
call
je
add
in
add
pop
imul
test
testb
movsb
jmp
mov
jp
add
xchg
loop
add
add
jne
mov
add
sahf
enter
add
bnd
add
sbb
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jne
add
jbe
add
bound
in
fildl
mov
fcmovne
add
roll
jne
lret
test
add
test
add
je
fwait
sub
pop
add
push
push
dec
not
not
push
and
add
shr
rol
shl
sub
rol
shl
add
shr
pop
add
sub
lea
not
pop
push
push
lea
push
push
push
push
call
cmpsb
add
add
rolb
add
add
out
xchg
cmc
mov
fucom
add
ljmp
jecxz
hlt
add
cli
test
test
add
pop
pushl
push
push
lea
push
push
push
push
push
call
add
jbe
add
add
nop
arpl
in
mov
xchg
add
add
test
aam
mov
mov
xlat
flds
in
push
fsubr
xchg
add
pop
pop
add
out
jmp
lcall
cld
push
add
push
push
lea
push
push
push
call
enter
iret
push
out
incb
cwtl
cwtl
xchg
lds
xchg
pop
add
lea
mov
out
add
add
add
roll
inc
lock
push
push
push
call
mov
imul
add
add
push
fdiv
mov
add
add
fsubrl
add
push
add
data16
addl
push
loop
add
mov
add
mov
mov
mov
testb
in
hlt
pop
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
push
add
shrl
add
pop
movb
push
xchg
lahf
add
mov
loopne
add
pop
add
add
insb
fs
movsl
add
add
xchg
mov
add
push
call
lcall
pushl
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
mov
xchg
add
add
add
add
aam
sti
clc
cld
in
xchg
cltd
outsl
fisttpll
add
faddl
cli
in
add
add
in
push
test
hlt
scas
rorb
add
in
fcompl
jne
call
push
push
push
lea
push
call
pusha
add
add
movb
add
add
fiaddl
jge
add
je
add
popa
ljmp
out
push
jae
add
adc
add
add
push
pop
fildl
add
add
add
add
cwtl
add
add
add
mov
pushf
movb
mov
lcall
jne
push
push
lea
push
push
push
call
add
loopne
jbe
xchg
jnp
mov
add
add
mov
addl
mov
pop
test
mov
mov
scas
add
xchg
into
add
xchg
cmpsb
cltd
aad
add
or
mov
push
add
add
add
lcall
jne
push
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
jns
movsl
add
xchg
add
add
mov
add
test
arpl
add
sbbl
pop
ror
jo
je
sahf
into
add
add
cmc
mov
add
add
lcall
repz
push
push
xor
add
push
and
add
inc
sub
add
dec
pop
dec
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
push
add
out
mov
repnz
mov
mov
pushf
add
mov
xchg
add
cli
iret
xlat
xchg
stc
jnp
mov
add
mov
add
cmpsb
add
mov
add
in
fcompl
jne
push
push
push
push
push
call
test
xchg
hlt
add
add
data16
add
add
jnp
pop
add
mov
add
add
stos
add
pop
enter
in
rolb
add
js
add
mov
push
add
add
mov
add
mov
lcall
iret
pop
add
push
push
push
push
or
not
add
sub
add
sub
not
not
pop
sub
not
rol
pop
push
push
push
call
add
cli
mov
insb
mov
pop
jns
test
jno
test
xchg
into
xchg
add
add
in
cmpsl
add
add
out
in
add
add
xchg
lods
add
xchg
movb
jecxz
mov
lret
add
mov
mov
add
add
hlt
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
pop
add
jle
pop
mov
mov
add
lahf
cmpsb
jnp
pop
out
into
addl
add
scas
mov
add
add
add
add
popf
in
rcrl
add
movsl
xlat
add
add
lahf
add
fdivr
lcall
add
rclb
jo
push
call
cmc
add
add
jo
add
add
out
out
xchg
shll
add
add
jbe
fldt
add
add
add
xchg
jmp
add
add
jbe
xchg
push
add
lcall
mov
leave
mov
insb
stos
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
fildl
neg
jae
in
testl
cmc
add
jb
mov
add
imul
add
mov
mov
xchg
xchg
sub
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
in
cmpsb
xchg
pop
add
mov
addl
out
imul
add
rcrl
sahf
add
add
lcall
sti
loop
add
cmpsb
add
sub
pop
push
push
lea
push
push
lea
push
call
test
mov
stc
lds
test
add
test
cli
out
scas
test
mov
shr
add
pop
fwait
add
add
add
cmpsb
add
fmuls
mov
mov
xchg
add
in
lret
fldl
push
into
mov
add
push
out
sub
pop
mov
push
push
push
push
push
push
push
call
mov
hlt
imul
lods
add
pop
add
add
add
std
mov
add
ja
add
cwtl
xlat
lret
pop
add
add
add
hlt
jb
add
add
test
pop
shrl
add
mov
rcl
fdivr
add
lahf
mov
cwtl
add
add
xchg
add
addl
in
in
lcall
pop
in
add
push
push
push
call
add
add
push
iret
icebp
add
xchg
mov
add
add
add
add
add
jae
jns
data16
add
add
jb
outsl
in
data16
pop
add
add
add
roll
add
push
jle
test
add
andl
push
lcall
ret
je
add
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
add
jae
loope
jne
addl
add
add
in
add
iret
add
loopne
pop
add
add
xchg
clc
add
add
jmp
ror
add
jbe
lods
lods
lcall
ret
lods
add
add
aad
rolb
jne
push
push
push
push
push
call
add
int
add
add
jnp
add
aam
movl
in
add
xchg
lret
xchg
nop
add
add
pop
push
add
scas
mov
in
out
lods
add
ljmp
mov
lcall
out
add
mov
sub
pop
push
push
lea
push
push
push
call
jecxz
icebp
insb
add
aad
add
jmp
add
add
icebp
jp
add
xchg
in
pop
add
mov
mov
addl
add
int3
add
add
jb
add
mov
pop
mov
xor
push
push
push
push
call
into
xchg
popa
add
imul
out
arpl
fisubs
mov
add
add
int3
add
mov
add
stc
test
pushf
xchg
int
push
push
test
mov
mov
jl
push
jl
sub
pop
add
pop
push
push
push
push
lea
push
call
mov
loopne
mov
add
sahf
mov
add
lods
push
mov
add
add
loopne
rol
mov
popa
add
add
mov
mov
insb
pop
addl
add
add
add
add
xchg
jne
add
push
add
leave
jnp
push
js
in
in
lcall
dec
add
cmp
xchg
call
mov
add
pop
mov
test
add
jnp
xchg
add
xchg
add
jbe
cmpsb
mov
loope
push
pop
push
pop
mov
movsl
clc
push
in
sarb
leave
mov
add
add
mov
pop
add
shlb
clc
lcall
or
push
push
push
push
push
push
push
push
push
lea
push
call
add
les
add
movl
pop
add
add
jo
jecxz
fadds
add
xorb
add
mov
int3
rolb
test
imul
shrl
out
add
out
add
std
add
lahf
lcall
pop
mov
stc
leave
stos
scas
xlat
mov
les
push
push
push
push
push
lea
push
call
push
push
add
push
xchg
add
add
add
jp
add
aad
lods
sahf
push
jae
add
mov
test
sahf
scas
mov
sar
mov
add
add
add
add
jnp
xchg
out
add
lret
mov
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
call
add
xchg
add
add
testb
pop
add
jnp
add
add
add
add
add
add
sub
pop
mov
push
push
push
call
subb
testl
imul
add
add
push
add
add
push
lcall
mov
push
add
mov
add
fisubrl
mov
push
add
add
add
add
push
push
lea
push
push
lea
push
push
call
in
mov
add
add
repnz
add
xchg
hlt
add
add
add
push
mov
add
add
loope
push
movb
xchg
add
xchg
sub
pop
add
push
lea
push
call
ja
add
movsl
fnsave
add
arpl
add
loop
shrl
movb
cmpsl
add
add
cli
mov
arpl
ja
test
fdivp
fnstenv
jnp
add
lcall
loopne
lods
xchg
sub
pop
sub
pop
push
push
push
lea
push
push
push
push
call
cltd
add
add
mov
add
add
mov
mov
xchg
add
add
out
ret
out
push
mov
mov
add
jge
outsl
add
into
add
lcall
movsb
push
push
push
lea
push
push
push
push
call
add
stos
add
add
jl
mov
add
add
loop
ja
add
movsb
fsubrs
add
movb
add
addb
fildl
add
add
add
add
xchg
outsl
sub
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
out
jbe
lds
scas
add
add
lods
jb
pop
addb
push
add
fisubrs
shl
push
add
mov
out
mov
in
fdivr
lcall
pop
hlt
push
push
call
data16
xchg
push
add
add
jl
popl
add
add
in
add
add
add
ret
mov
mov
add
movl
mov
fwait
add
mov
push
add
test
mov
cmpsl
add
out
mov
sub
pop
add
push
lea
push
push
push
push
push
push
call
add
repnz
lahf
jno
mov
mov
imul
add
clc
cld
ljmp
pop
add
sub
pop
add
add
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
pop
popl
mov
test
stos
mov
std
mov
push
mov
pop
cwtl
push
out
add
mov
sti
add
push
out
add
add
add
scas
test
pop
cmpsl
add
mov
scas
add
pop
add
pop
enter
data16
jno
addr16
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
fadds
add
in
cmpsb
push
mov
add
aad
lods
je
add
stos
pop
add
add
mov
fildl
add
test
fiadds
add
fadds
mov
subl
pop
pop
mov
ret
add
lcall
add
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
nop
xchg
lea
enter
js
leave
mov
bound
push
out
jbe
add
add
pop
jo
jne
out
leave
add
les
add
push
push
push
push
lea
push
push
push
call
fstps
mov
add
pop
add
add
popf
pop
pop
add
lock
add
call
pop
add
cwtl
add
add
add
test
push
add
lret
pop
add
mov
add
addb
popa
add
movsl
movsb
idivb
call
lcall
push
and
repnz
movsb
and
enter
push
push
push
call
add
scas
mov
add
out
iret
xor
mov
add
jmp
mov
lret
outsl
nop
mov
lock
lret
sti
add
scas
add
add
lcall
dec
sub
mov
push
push
push
push
lea
push
call
addb
push
jno
pushf
lret
fisttpll
mov
add
push
out
add
add
mov
mov
mov
mov
pop
add
ret
push
push
call
push
movsb
add
test
call
les
jl
jae
cld
add
insb
add
repnz
add
push
add
jl
add
add
stos
add
shr
jecxz
jge
cmc
jmp
arpl
xlat
add
add
out
cld
add
add
cmc
mov
push
cli
jnp
add
lcall
rcll
cmp
add
add
push
add
pusha
pop
add
add
add
mov
add
add
add
add
add
int
mov
jle
out
pushf
add
filds
mov
sub
pop
mov
push
push
sub
sub
shr
push
sub
add
lea
add
add
shl
sub
add
pop
not
pop
push
push
push
push
lea
push
push
push
push
call
mov
push
popa
add
test
add
add
jmp
add
pop
gs
clc
push
add
add
jnp
add
out
scas
cmpl
push
add
add
add
add
mov
add
sub
pop
pushl
push
push
push
push
push
call
add
mov
add
add
pusha
add
aad
out
popl
add
xchg
sbbb
test
add
lds
movl
lret
xlat
std
sub
pop
call
push
push
lea
push
push
call
add
popa
jp
fs
add
add
pop
outsl
andl
mov
jnp
scas
add
add
notb
aam
add
add
push
sub
pop
push
push
push
shl
lea
shr
push
xor
add
add
sub
inc
pop
sub
pop
push
push
call
add
add
add
mov
xchg
push
pop
fwait
scas
roll
add
fsubs
lahf
addr16
add
add
add
test
add
xchg
cld
mov
stc
mov
add
out
add
add
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
movl
fs
add
stos
add
add
cwtl
xchg
xchg
add
in
stos
add
add
fsts
test
xchg
add
cmpsl
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
pop
mov
stos
add
add
ja
lret
add
aad
rcrl
add
filds
add
add
mov
pop
call
push
sub
ror
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
add
scas
addb
movb
rclb
pop
xchg
sti
or
clc
data16
pop
in
add
xchg
add
in
add
lea
loopne
pop
add
jge
add
cmpsb
push
add
fildl
sub
pop
push
push
push
ror
rol
sub
pop
mov
add
push
push
call
jo
add
adcb
add
scas
pusha
sahf
jo
add
xchg
mov
add
imul
out
fldl
add
pop
jns
add
add
ja
add
mov
add
test
in
clc
lcall
ret
add
add
push
push
push
push
push
call
jl
hlt
aam
push
ret
cmc
fildl
out
add
mov
nop
fsubrs
push
fbld
popf
mov
leave
rolb
addr16
std
mov
pop
jmp
pop
jne
add
cli
loope
fildl
ret
je
add
mov
xor
push
push
push
push
push
call
add
in
leave
xchg
add
ret
add
xchg
add
cltd
cwtl
bound
insb
add
ret
jmpw
mov
in
in
pop
add
push
not
inc
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
int
std
lcall
sahf
add
ja
xchg
mov
add
ja
outsl
add
push
xchg
mov
add
scas
jbe
jecxz
jl
lds
add
testl
add
add
add
add
testb
push
cmpsb
mov
addr16
add
iret
idiv
add
add
inc
adc
lock
jl
popa
not
inc
pop
add
pop
push
shl
not
not
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
out
pop
add
cwtl
mov
add
add
add
push
add
call
ret
push
test
add
scas
mov
add
push
add
fildll
add
mov
add
add
outsl
pop
stc
add
jo
addl
mov
jno
mov
add
je
add
sub
pop
xor
push
push
push
push
push
lea
push
call
fstl
jl
add
addb
add
add
xchg
jl
xchg
mul
iret
add
faddl
sarb
add
add
lret
xchg
add
pop
in
addl
cwtl
ja
sub
pop
add
push
add
pop
rep
mov
push
push
push
push
call
add
mov
mov
add
insb
jecxz
add
lcall
add
enter
je
pop
sub
pop
xor
push
lea
push
push
push
push
push
push
call
add
mov
add
jle
mov
jns
add
aad
lock
ja
mov
shrb
add
test
ficoms
mulb
sub
pop
add
push
push
push
push
push
push
push
call
add
add
push
loopne
add
std
mov
fnstcw
add
add
mov
add
fildl
lcall
jo
out
testb
add
mov
xchg
mov
in
lcall
leave
je
mov
xor
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
mov
add
mov
add
fwait
add
pop
mov
ja
add
add
add
mov
pusha
add
add
movsb
push
pop
mov
roll
lcall
push
sbb
mov
push
push
push
push
push
call
lock
testl
add
in
jno
add
fdivr
add
scas
add
add
roll
jge
pushf
add
stos
out
add
add
fdiv
mov
add
add
test
add
addb
add
mov
lcall
repnz
push
push
lea
push
push
call
add
faddl
mov
add
add
cmpsb
ret
in
pop
add
lcall
add
scas
mov
add
push
jae
add
fildl
xchg
cltd
mov
sub
pop
add
push
lea
pop
push
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
mov
pop
add
push
add
lcall
cli
mov
add
push
sti
add
movsl
add
add
jne
add
mov
add
add
xchg
lods
add
fcompl
fsubl
add
xchg
push
add
in
loopne
xor
push
push
push
push
push
push
push
push
lea
push
call
push
add
fwait
mov
push
add
cld
jge
xlat
pop
push
in
imull
mov
fildl
pop
in
add
andb
xchg
int
add
add
mov
in
mov
in
fdivr
lcall
les
push
lea
push
push
push
push
push
call
insb
bound
add
add
add
add
add
xlat
add
jge
jle
test
pusha
add
mov
mov
add
add
loopne
mov
fcmovnu
lods
xchg
add
add
add
lcall
lock
push
not
pop
rep
mov
xor
push
lea
push
lea
push
push
call
mov
add
les
push
cli
out
cltd
xchg
add
add
jne
add
jecxz
add
popf
std
xchg
loopne
add
add
scas
in
int3
int
push
sub
pop
or
je
mov
push
pop
add
add
push
push
lea
push
lea
push
push
call
jl
data16
jge
leave
mov
stc
add
add
add
add
add
test
mov
fiaddl
lret
mov
sti
add
add
mov
jmp
add
add
sub
pop
rep
push
shr
pop
pop
push
push
add
push
xor
add
inc
sub
ror
shl
pop
add
dec
pop
push
xor
pop
pop
push
lea
rol
rol
pop
mov
mov
push
lea
push
lea
push
push
push
push
call
pop
add
jno
pop
filds
add
ret
add
push
imul
add
add
mov
add
addl
mov
mov
add
cwtl
cwtl
xchg
add
out
icebp
push
add
mov
scas
add
sub
pop
mov
jmp
push
sub
add
pop
push
mov
push
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
pop
add
fldl
add
push
mov
mov
add
addr16
fidivrl
insb
pop
xchg
popa
mov
add
lods
fcom
add
add
push
add
scas
jl
arpl
out
lods
add
out
loope
outsl
add
cmpsl
add
sub
pop
push
push
push
push
push
lea
push
push
call
addr16
add
add
add
imul
mov
sarl
jo
mov
add
mov
lcall
add
pop
hlt
fidivl
add
lods
in
jmp
add
xchg
sarb
in
call
ror
shl
rol
pop
push
push
shr
dec
not
pop
mov
push
lea
sub
xor
pop
pop
pop
push
sub
add
dec
pop
pop
pop
push
add
pop
leave
ret
push
push
push
push
push
push
push
call
add
mov
add
add
jmp
add
add
lcall
add
add
mov
add
add
in
scas
mov
sub
pop
push
push
shl
pop
mov
add
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
scas
add
add
lret
aad
rcl
mov
add
out
jmp
add
mov
les
add
jae
iret
add
jbe
mov
pusha
lcall
insb
add
les
add
jecxz
out
test
mov
jb
jge
movsb
les
test
pop
loop
filds
add
fcompl
push
lea
push
push
call
add
scas
jle
cli
xchg
add
add
add
popf
test
add
add
ljmp
jbe
call
add
icebp
add
cwtl
movsl
add
lods
add
ret
imul
sti
mov
scas
add
in
hlt
lcall
push
inc
dec
pop
push
push
push
lea
push
call
add
add
add
cli
rorl
add
pusha
add
add
mov
jge
push
add
mov
add
imul
jmp
add
fadds
call
hlt
lcall
push
sub
not
sub
inc
pop
movl
push
push
push
call
push
add
mov
add
add
stc
add
roll
push
xchg
add
add
fcomp
push
add
mov
aad
add
xlat
icebp
pusha
add
pop
add
scas
cltd
pusha
test
mov
shlb
add
mov
imul
ljmp
pop
addl
push
push
push
push
push
lea
push
lea
push
call
pop
add
jbe
mov
add
int3
mov
add
add
leave
xchg
lock
add
popl
loope
add
add
scas
add
jmp
jb
add
xchg
cwtl
mov
xchg
stc
mov
sub
pop
test
je
push
push
push
push
lea
push
lea
push
call
push
loope
add
fnstcw
add
addb
add
pop
add
add
stos
add
data16
add
add
sub
pop
mov
push
sub
pop
pop
pop
push
ror
pop
pop
push
not
not
ror
shl
pop
pop
leave
push
push
lea
push
lea
push
call
lret
add
push
jmp
hlt
add
stos
mov
add
add
mov
rolb
imul
push
mov
add
je
lods
lcall
add
rolb
mov
mov
rcrb
lcall
add
push
push
rol
ror
ror
dec
pop
mov
push
shl
pop
add
push
push
sub
pop
push
push
push
sub
pop
push
push
push
push
push
push
push
push
push
call
add
lock
sub
add
pop
rcl
mov
addl
add
fildl
fwait
mov
add
add
add
pop
add
add
negb
cli
add
je
pop
mov
repnz
add
loopne
ja
ljmp
add
pop
test
sahf
xchg
sti
arpl
inc
cld
add
add
push
push
push
push
lea
push
push
push
lea
push
push
call
in
lcall
or
add
fnsave
add
roll
je
nop
cmpsl
sti
add
nop
add
pop
add
divb
fcompl
inc
or
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
xchg
cld
movsl
add
add
push
add
jae
add
add
flds
in
test
mov
fdivr
lcall
add
xor
xor
sub
jge
push
push
push
push
push
lea
push
call
add
jle
add
lds
mov
mov
add
mov
add
je
mov
enter
testb
add
cld
test
add
mov
pop
add
add
xchg
mov
fwait
add
fnstenv
mov
iret
add
outsl
sub
pop
call
push
push
push
push
call
add
add
mov
sub
cmc
mov
add
mov
leave
add
add
mov
leave
add
iret
stc
out
add
lcall
sub
pop
mov
push
push
push
push
lea
push
push
push
call
fildl
add
testl
pop
int3
test
add
cmpl
int3
add
mov
ret
add
add
add
in
in
lcall
jne
push
push
lea
push
call
filds
in
repnz
add
add
add
add
mov
xchg
mov
add
into
mov
add
add
mov
ret
add
mov
jns
mov
add
cwtl
add
pop
hlt
jnp
cli
out
js
iret
fiadds
add
sti
xchg
add
clc
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
call
xorb
push
hlt
add
lock
int3
lock
std
jae
add
lcall
jae
int3
cmpsb
add
pop
lock
gs
mov
add
push
filds
data16
lcall
mov
in
loopne
cmpl
jne
pop
push
xor
add
ror
pop
pop
push
sub
rol
xor
pop
pop
push
ror
pop
pop
push
inc
add
not
pop
leave
push
push
lea
push
call
add
add
add
stc
add
rolb
insb
xlat
cwtl
add
jl
jle
jecxz
xchg
enter
add
push
arpl
add
push
push
push
push
push
lea
push
call
mov
add
jmp
mov
add
leave
in
add
jne
add
add
out
fldl
shrl
icebp
push
add
je
add
jle
add
lcall
mov
add
nop
add
add
test
call
rol
jmp
add
xor
pop
mov
add
push
pop
push
push
push
ror
inc
add
xor
pop
push
push
push
push
push
push
lea
push
push
push
push
call
jno
mov
ficoml
add
mov
mov
popl
add
add
mov
mov
test
loopne
lcall
inc
cld
or
add
push
push
push
push
push
call
xchg
stos
add
add
add
add
gs
in
int3
push
xchg
jne
push
loopne
jecxz
test
mov
fwait
rolb
push
add
add
fwait
xchg
add
add
stos
test
sti
push
add
or
ljmp
push
push
push
push
push
push
lea
push
push
call
add
jmp
add
add
add
add
in
sti
add
lock
add
roll
cmpsb
add
mov
shl
shl
pop
subl
cmpl
jne
push
push
push
lea
push
call
clc
nop
add
mov
in
add
xchg
rolb
insb
mov
xchg
push
add
add
ljmp
pusha
add
add
add
jno
call
pop
pop
pop
push
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
hlt
add
add
aad
mov
mov
add
add
add
icebp
add
add
vpunpcklbw
add
stos
jge
add
add
test
mov
add
cmpl
add
add
aad
add
lcall
push
rol
lea
not
pop
leave
push
push
push
push
push
call
add
aad
push
mov
out
jecxz
add
in
cld
add
test
filds
xchg
xchg
pop
add
arpl
std
aad
stos
test
mov
jp
add
mov
add
add
push
test
mov
lahf
subl
add
mov
in
pop
ret
push
push
push
call
imul
push
xchg
jl
add
fadds
repnz
pop
add
add
xchg
stos
add
add
popa
hlt
add
fsubs
bound
scas
sub
pop
push
push
push
call
xchg
gs
add
mov
add
add
mov
add
into
add
pop
je
int
add
fistl
loop
mov
sub
pop
mov
add
push
xor
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
fwait
imul
xchg
ljmp
xchg
add
mov
mov
add
add
into
add
cmc
add
jno
lret
lock
pop
push
push
push
push
call
push
add
clc
xchg
mov
add
jge
sti
add
out
lea
jecxz
enter
xchg
ret
add
add
out
add
cltd
mov
in
pop
mov
fcmovnb
mov
lret
int
fyl2xp1
mov
add
jge
call
lcall
push
push
call
add
out
push
test
mov
je
xchg
sbb
out
data16
add
add
add
xchg
sahf
test
pop
push
push
lea
push
push
lea
push
call
jmp
std
add
add
add
mov
mov
faddl
scas
fs
fmull
add
mov
test
into
xchg
shlb
stos
cmc
cmpsb
mov
add
add
mov
call
add
xchg
mov
add
add
sub
pop
mov
push
push
push
push
push
lea
push
call
fsubl
add
mov
add
xchg
roll
add
add
icebp
cmpsb
add
add
std
xchg
idivl
add
cwtl
add
lds
mov
push
add
lcall
add
add
fisubrl
lcall
in
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
push
scas
pushf
jge
outsl
test
add
xchg
lock
scas
pushf
mov
rolb
push
test
add
cltd
add
add
cwtl
out
out
pop
roll
jno
add
add
add
stc
addr16
push
add
int
add
add
lcall
call
out
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
add
add
mov
add
std
mov
std
jbe
testl
jbe
add
add
jne
push
lods
add
stos
xchg
add
mov
add
lcall
call
push
not
lea
pop
mov
push
lea
push
push
call
xchg
cltd
add
add
mov
data16
fnstsw
pop
add
mov
iret
sahf
pop
in
cltd
mov
add
xchg
mov
jbe
mov
lret
imul
xchg
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
xchg
xchg
xchg
fadds
aad
imul
add
add
mov
int
add
pop
lock
cli
add
sub
pop
add
push
sub
ror
ror
pop
add
push
dec
rol
pop
mov
mov
push
push
lea
push
push
push
push
push
push
call
add
mov
add
xchg
add
add
jns
add
add
ja
xlat
ret
mov
add
in
add
stos
add
sarl
mov
shlb
add
push
jb
sub
pop
cmp
jne
push
inc
not
pop
cmp
jne
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
add
add
jmp
add
jns
mov
add
pop
jp
add
int
jmp
xlat
sub
pop
mov
movl
push
push
push
push
push
push
call
testb
fdivr
scas
pop
fcomip
jae
add
out
cmpsb
mov
add
add
testl
mov
jl
fstps
jns
add
xlat
add
mov
jmp
add
pop
jmp
mov
push
push
push
push
push
push
push
push
lea
push
call
pushf
rcl
rcll
xchg
js
je
add
mov
add
add
movsb
mov
xchg
cwtl
lock
imul
jae
popa
add
add
add
mov
cltd
lahf
add
fidivs
push
add
mov
jmp
pushf
mov
mov
add
push
or
adc
test
add
add
or
push
push
lea
push
call
add
pop
rolb
add
add
in
add
add
icebp
jmp
add
bound
add
flds
out
mov
cli
xchg
push
gs
add
mov
aam
add
stos
add
filds
add
sub
pop
mov
push
inc
pop
movl
jmp
push
push
push
lea
push
push
lea
push
call
icebp
cltd
jb
out
add
test
jae
add
loopne
add
ja
enter
xchg
add
push
mov
testl
pusha
idivb
loope
add
inc
cld
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
pop
test
add
add
add
popa
add
fmull
add
add
mov
add
int
movsl
cmpsl
push
lock
mov
add
sub
pop
cmp
jne
push
push
call
jne
nop
cmpsb
les
fiadds
add
mov
add
push
add
add
add
jbe
add
mov
lcall
inc
adc
add
add
add
dec
lea
add
pop
jmp
push
xor
dec
sub
pop
mov
push
push
call
stos
int3
add
stos
mov
add
add
fldl
mov
xchg
cmpb
pop
add
in
add
add
jnp
add
xchg
call
add
pusha
flds
add
add
add
add
pop
cmpw
jne
push
push
push
push
lea
push
push
push
push
call
xchg
arpl
add
xchg
ljmp
add
mov
add
roll
jmp
mov
test
icebp
roll
in
jecxz
add
add
add
add
arpl
scas
std
add
roll
xchg
add
add
negb
out
xchg
and
mov
movl
adc
add
inc
add
pop
jmp
push
dec
shr
pop
pushl
pop
push
pop
mov
mov
push
xor
pop
mov
push
push
ror
push
xor
add
add
xor
xor
shr
sub
lea
pop
add
rol
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
popl
in
bound
add
push
xchg
add
outsl
lds
je
fnstcw
or
add
add
add
add
add
add
lock
add
push
push
push
call
add
mov
testl
popa
fdivrs
mov
add
add
fldl
pushf
fcoms
add
xchg
xchg
out
push
xchg
cmpsb
arpl
pop
leave
pushf
xchg
xchg
pop
mov
add
push
test
jp
out
jnp
mov
cmpl
fdivp
add
pop
pop
incb
add
in
hlt
lcall
ss
push
add
pop
cmpl
je
push
push
ror
dec
add
push
sub
add
add
xor
lea
sub
lea
pop
shl
add
pop
push
push
push
push
push
push
call
stos
xchg
add
add
add
arpl
fdiv
lea
add
ret
add
add
jmp
jp
add
jo
jp
cmc
lret
cltd
add
xchg
jmp
add
jno
xchg
in
flds
lcall
push
not
not
pop
call
push
add
dec
dec
pop
cmpl
je
push
push
sub
push
xor
add
shr
sub
sub
xor
sub
pop
lea
dec
lea
pop
push
shl
add
pop
push
push
push
push
push
push
push
call
add
add
mov
add
add
mov
pop
add
mov
add
movl
add
mov
add
xlat
repnz
lods
sub
pop
call
push
lea
push
push
push
push
push
push
push
call
jb
jo
pop
add
jmp
movl
mov
jae
mov
in
add
add
add
incb
movsb
int
add
loopne
lcall
cmp
add
int3
je
push
push
lea
push
sub
add
sub
xor
pop
sub
ror
dec
xor
pop
push
shr
pop
push
push
rol
pop
call
push
push
call
cld
stos
xchg
ficompl
xchg
add
add
add
shll
test
add
lahf
flds
fwait
imul
add
add
popa
push
add
xchg
add
pop
add
add
add
jmp
std
je
sub
pop
cmpl
je
push
push
dec
push
or
not
add
lea
add
sub
not
pop
shr
pop
push
ror
ror
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
add
loopne
add
pop
add
push
add
jb
add
mov
add
add
mov
add
jae
add
add
push
out
add
js
xchg
add
mov
cld
je
push
pushf
push
add
rolb
push
mov
fiadds
lcall
sub
add
cmpl
je
push
push
inc
push
or
inc
add
add
sub
inc
sub
inc
ror
pop
lea
not
add
pop
push
inc
dec
rol
shl
pop
push
push
ror
pop
call
push
lea
shl
not
pop
cmpl
je
push
push
xor
rol
lea
push
xor
add
not
sub
sub
sub
xor
sub
pop
add
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
incb
add
std
arpl
add
mov
std
mov
add
xchg
ljmp
xchg
add
add
lea
cwtl
mov
add
add
add
add
add
mov
add
mov
in
fcomps
push
add
shl
ror
sub
pop
call
cmpl
je
push
push
rol
not
push
and
add
rol
dec
not
sub
xor
pop
inc
rol
inc
pop
push
push
push
push
lea
push
push
call
mov
add
add
testb
pusha
mov
mov
add
add
testl
add
rcl
jp
lock
mov
mov
add
mov
add
add
je
add
shrl
scas
mov
push
push
ror
add
inc
pop
call
push
pop
cmpl
je
push
push
add
push
sub
add
sub
sub
rol
pop
lea
lea
pop
push
add
lea
pop
push
push
ror
shr
rol
not
pop
call
push
push
push
push
push
push
call
push
jecxz
mov
lock
lods
adcl
stc
mov
cld
add
add
pop
add
popa
add
xchg
add
fsubr
add
push
mov
add
jae
cli
add
in
call
rol
je
push
push
sub
rol
push
xor
add
rol
sub
add
lea
pop
sub
pop
push
push
lea
push
push
lea
push
push
call
movsb
mov
pop
cld
mov
fnop
add
push
js
mov
add
gs
add
popf
add
add
roll
add
insb
sub
pop
push
call
push
dec
shl
pop
cmpl
je
push
push
lea
add
sub
push
or
not
add
shr
lea
sub
add
pop
xor
dec
shr
pop
push
pop
push
push
ror
ror
pop
call
cmpl
je
push
push
inc
lea
xor
push
push
pop
add
not
sub
add
pop
add
sub
shr
pop
push
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
rol
lea
push
push
pop
add
add
xor
sub
add
dec
pop
xor
shl
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
test
add
mov
xchg
jp
stc
pusha
mov
fsub
mov
sarb
lcall
xchg
pop
mov
icebp
stc
movsb
xchg
add
lcall
push
lea
shr
pop
call
push
add
pop
cmpl
jne
push
not
add
pop
mov
movl
push
lea
inc
pop
jmp
push
rol
pop
xor
push
push
push
push
call
add
fadds
pop
pop
leave
xchg
stos
mov
ja
cmpsl
jno
add
add
addl
mov
xorb
test
addb
popf
jp
sub
pop
pop
push
push
call
mov
mov
add
add
fildl
clc
mov
popl
mov
int
hlt
lret
pusha
jl
push
popa
jl
add
ljmp
jns
ja
jl
sub
pop
pop
pop
push
rol
shl
inc
add
pop
pop
push
inc
inc
ror
pop
leave
ret
push
inc
inc
not
not
pop
push
push
push
push
push
push
push
lea
push
push
push
call
in
cltd
std
cmpsl
xlat
add
scas
add
les
mov
add
out
mov
mov
add
add
pop
add
je
add
jmp
add
popa
sub
pop
mov
push
dec
ror
pop
add
cmpl
jne
push
push
ror
shr
xor
rol
push
or
not
add
sub
rol
pop
add
ror
pop
push
inc
lea
inc
pop
pushl
push
push
push
push
push
lea
push
call
movsb
xlat
add
add
mov
cmpsl
add
mov
fcmove
roll
add
shl
add
cmc
add
mov
add
add
push
mov
xchg
add
add
add
add
out
in
test
cmpsl
cmc
xchg
add
sub
pop
call
push
ror
rol
inc
dec
pop
push
call
push
lea
push
lea
push
call
add
scas
add
add
add
shll
lock
insb
mov
in
add
add
cmpsb
sahf
rcr
in
addb
int
in
hlt
pop
jmp
push
not
rol
pop
cmpl
je
cmpl
jne
push
inc
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
call
push
jp
push
shlb
add
push
add
out
add
sahf
add
add
add
add
pop
add
scas
insb
add
add
jnp
mov
enter
add
in
in
lcall
dec
adc
add
rol
pop
ret
push
ror
sub
pop
jmp
cmpl
jne
push
push
shl
push
sub
add
sub
sub
rol
inc
pop
sub
ror
pop
push
push
lea
push
push
push
push
call
pop
add
mov
add
into
add
add
popf
add
add
add
add
cwtl
in
add
add
add
out
ja
loopne
add
mov
lea
add
pop
mov
push
aam
fsts
ret
imul
sub
pop
pushl
call
push
sub
pop
push
push
ror
pop
call
jmp
push
push
call
movsl
push
mov
cli
add
js
loopne
add
imul
add
mov
imul
xchg
add
jne
add
enter
mov
in
clc
pop
cmpl
jne
push
shl
add
lea
pop
mov
push
lea
ror
pop
mov
push
not
sub
shr
pop
push
push
push
dec
push
xor
add
add
sub
shl
pop
ror
xor
pop
push
sub
pop
pushl
push
push
call
lcall
add
pushf
out
mov
add
add
xor
ja
add
mov
out
clc
imul
add
lret
in
clc
pop
call
call
push
push
push
sub
add
not
shr
sub
add
not
pop
sub
add
xor
pop
push
shr
add
lea
pop
pushl
push
pop
call
push
lea
pop
call
push
push
sub
push
or
inc
add
sub
dec
pop
xor
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
mov
ja
int
mov
bound
data16
pop
xchg
add
scas
lock
in
mov
add
shlb
add
mov
add
ljmp
ret
jae
add
fsts
mov
pusha
add
sub
pop
pushl
call
push
rol
not
ror
pop
call
push
push
shr
push
and
add
lea
shl
xor
sub
sub
pop
lea
rol
pop
push
shr
pop
pushl
call
push
lea
push
call
add
pop
hlt
add
pop
add
add
mov
testb
add
add
fs
pusha
xchg
add
mov
mov
test
jae
in
pusha
js
jp
pop
cmc
fildl
add
mov
sahf
pop
cwtl
add
mov
add
sub
pop
call
push
push
add
ror
sub
push
or
not
add
ror
ror
sub
sub
sub
sub
sub
pop
dec
sub
inc
pop
push
add
rol
pop
pushl
call
push
sub
pop
call
push
push
inc
rol
add
push
sub
add
inc
not
lea
sub
shr
pop
shl
inc
pop
push
push
push
lea
push
push
call
add
shll
add
lret
scas
mov
add
xlat
xchg
add
add
inc
scas
add
addb
add
lods
add
pop
mov
add
xchg
movsb
iret
add
add
add
mov
enter
add
lcall
jne
push
lea
push
push
call
ror
mov
jge
test
mov
add
cmpsb
cld
add
add
lret
add
scas
push
jno
add
lahf
add
mov
mov
in
hlt
xchg
movb
leave
jp
xchg
add
ljmp
roll
add
add
mov
add
add
lcall
or
add
push
shr
rol
dec
pop
call
push
push
sub
dec
push
or
not
add
shl
rol
shr
rol
sub
add
add
rol
xor
pop
add
inc
add
pop
push
shr
pop
pushl
push
push
push
call
arpl
shrl
into
ret
mov
out
fiaddl
pop
add
stos
arpl
xchg
add
pop
mov
cld
mov
test
add
std
add
test
mov
ja
push
xchg
ljmp
pop
call
push
not
pop
call
push
push
sub
not
add
push
sub
add
add
sub
sub
inc
xor
pop
inc
sub
pop
push
push
push
lea
push
push
call
ja
add
pop
jmp
pop
cld
xchg
addb
add
je
mov
add
lods
add
cmpsb
add
add
add
add
mov
xchg
fiadds
xchg
add
add
add
in
jae
add
movsb
jbe
push
add
movl
sahf
test
jo
out
cmc
add
add
test
lcall
jne
push
lea
push
push
lea
push
push
push
call
add
add
call
pushf
add
gs
lret
sbb
popl
mov
xorl
jp
stc
popa
fadds
mov
js
add
sub
pop
call
push
shl
not
sub
pop
call
push
push
xor
sub
ror
ror
push
xor
add
ror
sub
xor
rol
pop
add
rol
pop
push
pop
pushl
call
push
add
sub
add
pop
call
push
push
add
push
or
not
add
shl
dec
add
ror
sub
sub
pop
sub
pop
push
shl
sub
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
add
add
add
add
mov
in
pop
sti
add
out
xchg
negb
add
test
in
mov
leave
out
jo
pop
pop
mov
data16
nop
lds
add
add
add
add
xchg
push
stos
add
add
add
mov
add
les
add
lcall
pushf
and
call
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
jecxz
insb
jmp
jno
xchg
add
jecxz
test
add
loopne
add
add
add
mov
out
into
lods
add
fs
mov
add
add
add
mov
lret
fcomps
shrb
dec
jl
push
push
or
inc
add
lea
rol
sub
ror
sub
rol
pop
add
sub
sub
pop
push
xor
not
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
push
push
call
jo
add
add
add
add
test
iret
xchg
loopne
fwait
jno
fwait
stos
lahf
add
jmp
mov
xchg
mov
shrb
push
ret
in
push
push
pop
add
lea
sub
not
pop
shr
shr
sub
pop
push
lea
push
push
push
call
jnp
add
add
fwait
testl
add
add
loope
add
rcl
clc
push
mov
add
xchg
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
lea
push
call
clc
aam
out
add
popa
add
imul
xchg
add
rolb
add
mov
lcall
fistpl
add
pop
lret
add
aad
pop
jl
lahf
mov
movsb
scas
add
add
push
add
loopne
add
add
add
cmp
bound
mov
std
testb
ret
fcompl
sub
add
push
pop
call
push
push
inc
push
xor
add
dec
sub
sub
add
dec
pop
rol
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
add
add
add
fildl
add
call
sub
pop
pushl
push
not
pop
call
push
push
push
push
push
call
mov
not
nop
addl
cmpsb
aam
fcoml
jle
mov
add
add
add
in
add
add
add
addr16
ljmp
shrb
imul
adc
push
or
inc
add
not
sub
not
pop
ror
pop
push
push
push
push
call
in
mov
add
sbbl
hlt
add
add
jmp
xacquire
add
add
jl
push
add
lea
lea
add
fwait
xchg
outsl
imul
add
out
fwait
test
add
jae
or
pusha
add
popf
mov
xchg
in
test
xchg
test
add
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
push
add
add
add
add
movsl
add
cld
gs
add
imul
pop
push
test
add
sub
pop
call
push
push
add
rol
push
push
pop
add
shl
shl
add
add
sub
add
pop
lea
pop
push
push
lea
lea
push
or
not
add
inc
sub
rol
pop
pop
push
xor
ror
inc
shr
pop
call
pop
push
sub
shr
rol
inc
pop
dec
jne
call
push
shl
shl
pop
mov
int
push
push
lea
push
lea
push
call
add
cmpsb
add
add
add
flds
mov
stc
gs
jle
jp
add
mov
xlat
cmpsb
cmpsb
movsl
je
add
add
add
add
cmc
jns
arpl
add
clc
mov
sub
pop
lea
push
push
shr
dec
add
shr
push
and
add
shl
lea
inc
xor
sub
xor
pop
add
pop
push
dec
pop
pushl
call
push
push
call
add
popa
out
addb
cltd
jnp
add
jmp
lahf
pop
in
add
add
push
add
add
lods
jno
test
add
push
add
fnstcw
loop
add
popa
add
jns
push
add
aam
in
clc
lcall
push
sub
inc
pop
call
push
push
shl
push
or
not
add
sub
add
xor
sub
sub
add
add
pop
pop
push
dec
shr
ror
pop
pushl
push
push
push
push
call
aam
add
add
add
push
enter
rol
xchg
add
add
add
add
add
add
add
cmpsl
popl
add
mov
add
sub
pop
call
push
push
push
push
lea
push
call
jbe
bnd
sub
mov
scas
js
shlb
push
mov
add
imul
stos
icebp
cltd
add
add
add
cmc
jl
ja
loop
mov
in
repnz
scas
add
lods
add
mov
jnp
imul
insb
add
lcall
rclb
add
je
test
inc
les
push
push
call
add
add
add
cmpsb
add
add
pop
incb
cmc
mov
jge
add
flds
add
push
add
leave
fstl
add
lcall
inc
cld
lea
push
push
sub
shl
push
and
add
shr
sub
rol
add
inc
pop
add
sub
xor
pop
push
dec
sub
not
pop
pushl
push
push
push
call
stos
scas
sahf
push
sti
add
js
mov
jo
push
jle
pop
add
pop
mov
add
test
loopne
add
xchg
pop
call
push
shr
add
pop
lea
push
push
call
flds
js
addb
add
xchg
fiadds
add
add
mov
xchg
iret
add
pop
div
pop
add
add
hlt
push
add
mov
je
out
fbld
xor
orb
je
pushf
loope
add
icebp
scas
xchg
add
lcall
add
push
movsl
rolb
add
shl
pop
push
push
pop
push
push
ror
pop
pushl
push
push
rol
inc
add
push
or
inc
add
shl
inc
sub
ror
pop
shl
sub
add
lea
pop
push
push
push
push
push
call
add
nop
mov
add
les
jecxz
in
push
add
mov
add
mov
add
push
lods
add
add
add
cmpsl
loop
add
insb
rclb
add
add
add
add
test
push
add
rolb
add
rolb
jnp
in
in
pop
push
call
push
push
dec
sub
push
push
pop
add
dec
add
sub
sub
sub
rol
sub
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
call
cmpsl
loopne
push
add
mov
add
insb
add
add
push
testl
add
movl
cmpsl
lods
add
lret
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
call
pop
mov
mov
mov
pop
push
add
lods
add
push
push
movsl
sahf
int3
fstp
add
roll
cmpsb
iret
add
add
push
jle
xlat
jns
add
add
add
mov
add
fiaddl
sub
pop
call
push
ror
pop
push
push
sub
lea
pop
call
push
push
dec
not
ror
push
push
pop
add
lea
sub
xor
xor
dec
dec
pop
add
shl
pop
push
add
pop
pushl
call
push
push
push
call
jecxz
in
add
jb
mov
add
jle
add
add
add
add
add
mov
fwait
add
rclb
rcrl
pushl
push
inc
inc
shr
pop
mov
jmp
push
push
xor
sub
push
and
add
add
sub
add
sub
lea
xor
add
sub
pop
ror
xor
pop
push
sub
pop
pushl
call
push
lea
push
call
filds
popf
add
in
add
add
testl
mov
add
std
loope
test
push
add
jbe
add
add
out
jo
add
add
add
add
add
pop
add
push
push
push
push
push
push
push
push
push
push
push
call
pop
test
lods
add
add
add
lcall
add
push
cli
cmpsl
push
add
out
testb
hlt
mov
mov
xchg
in
mov
add
mov
outsl
js
in
mov
add
mov
test
add
add
add
add
xchg
sub
pop
call
push
push
dec
push
xor
add
rol
add
dec
sub
xor
lea
pop
sub
shr
pop
push
lea
push
lea
push
push
push
lea
push
push
call
add
jl
loop
jge
add
jne
add
jb
mov
jno
jle
call
mov
add
rolb
mov
jb
pop
mov
pop
add
lcall
jne
push
push
push
push
push
push
push
lea
push
call
add
mov
add
pop
add
jecxz
loope
cmpsb
js
add
arpl
out
push
jecxz
cwtl
iret
mov
pushf
iret
scas
add
pop
mov
add
add
mov
push
jb
add
add
add
icebp
pop
out
fwait
mov
mov
call
push
lea
push
push
call
test
mov
outsl
mov
faddl
pop
scas
add
lahf
shr
add
rolb
int3
add
hlt
sti
mov
add
add
int3
mov
add
push
push
push
push
push
push
lea
push
push
push
call
out
add
int3
icebp
rolb
lds
aam
rcrb
add
jge
add
add
push
fs
add
idivl
icebp
cld
mov
popf
xchg
jns
add
add
add
out
data16
add
add
cld
add
add
test
sub
pop
call
leave
push
push
call
je
cwtl
mov
mov
roll
add
fcmove
je
movb
jo
cltd
add
out
fsubl
scas
int3
cmc
add
jno
add
add
sub
pop
add
pop
push
lea
push
push
lea
push
push
call
ror
xchg
add
add
imul
loope
push
sti
add
lds
ljmp
add
add
call
fildl
ja
lock
add
add
add
in
lcall
pop
push
sub
rol
pop
xor
push
shr
dec
pop
inc
push
dec
add
pop
ret
push
push
push
lea
push
push
call
mov
add
jecxz
add
fnstenv
shr
add
mov
call
popf
add
add
add
sarl
push
fimuls
cmpsl
add
xchg
jno
add
add
add
add
mov
fildl
add
mov
pop
leave
push
push
push
lea
push
lea
push
push
call
add
jle
pop
jnp
add
add
add
jnp
addl
push
imul
scas
add
in
jmp
jbe
add
cmpsl
jl
add
add
mov
add
add
add
push
ljmp
out
popf
jge
ret
call
push
push
push
call
pushf
cltd
leave
loop
leave
test
lahf
stos
mov
xchg
mov
fldcw
outsl
insb
imul
in
movsb
push
add
add
add
push
add
add
adc
mov
add
sub
pop
mov
cmpl
jne
push
push
push
push
push
call
add
add
push
test
add
scas
add
int3
add
ljmp
pop
enter
in
in
lcall
inc
and
push
push
call
in
fadds
add
add
ret
mov
xchg
popa
xchg
test
repnz
add
arpl
add
clc
pop
jmp
push
ror
rol
shr
pop
mov
and
push
xor
sub
pop
xor
push
shl
pop
xor
push
lea
push
call
mov
mov
add
add
nop
add
add
push
mov
mov
add
add
lcall
add
xchg
add
xchg
xlat
xchg
add
bound
cltd
fstpt
shll
mov
out
sub
pop
add
push
push
push
push
lea
push
lea
push
lea
push
call
insb
push
add
scas
add
jmp
add
mov
nop
mov
lcall
push
jns
add
add
add
add
push
test
jne
nop
mov
imul
mov
arpl
add
add
gs
add
sub
pop
xor
dec
push
rol
pop
sub
jmp
push
pop
sub
push
push
call
mov
popf
pushf
pop
mov
movsb
sti
jmp
mov
jl
icebp
add
out
jb
cmc
add
int
in
clc
pop
pushl
push
push
lea
push
call
mov
lret
test
iret
jae
mov
xchg
fstpt
cli
push
test
add
add
add
sahf
hlt
add
fmulp
in
loopne
add
push
fstl
add
push
mov
add
fadds
cmpsl
push
add
add
in
fwait
stos
add
add
imul
cld
mov
add
mov
pop
add
sub
pop
pop
push
xor
sub
dec
ror
pop
sub
push
shr
pop
cmp
jne
push
push
push
call
mov
out
mov
roll
add
cmpsb
add
cmpsl
mov
add
add
leave
pop
add
pop
push
in
jge
add
ljmp
fld
add
out
lea
add
mov
add
notb
sub
pop
mov
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
lds
mov
add
jge
in
mov
jbe
scas
jle
mov
add
mov
scas
sub
pop
sub
mov
push
add
add
pop
shr
push
lea
push
push
lea
push
push
lea
push
call
add
add
xchg
stc
add
jmp
mov
fiadds
mov
lret
add
flds
xchg
add
in
call
push
push
push
push
push
call
hlt
movsb
jl
repnz
jp
shl
add
xlat
int
loopne
add
jmp
jmp
gs
add
test
mov
call
add
add
add
mov
mov
mov
insb
loop
lret
mov
fldl
lcall
jmp
cmp
cmp
dec
xlat
push
push
call
add
add
pop
mov
add
hlt
lea
lea
mov
push
in
xchg
mov
sub
pop
pushl
pop
push
push
call
movsl
add
roll
shll
xlat
iret
add
add
cltd
mov
ret
scas
add
add
stos
xchg
scas
imul
mov
add
aad
add
sub
pop
shr
push
rol
pop
and
push
add
sub
ror
lea
pop
sub
push
push
push
push
push
lea
push
push
call
lods
les
add
jne
add
add
out
testb
add
fiadds
add
fstpt
add
cltd
mov
add
add
iret
mov
je
inc
popa
add
aad
data16
jns
jns
add
push
mov
xchg
imul
adc
add
test
call
jmp
shl
notb
leave
push
push
call
les
roll
testl
push
push
cli
add
jns
test
popf
bound
add
add
add
xchg
cmpsb
in
add
scas
add
addr16
fiadds
add
jl
fsubs
jo
out
stc
add
in
clc
lcall
add
push
add
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
aad
add
add
data16
rorb
mov
aam
add
add
stos
add
mov
loop
fistl
movl
add
sub
pop
mov
push
add
pop
add
push
push
push
call
add
popf
add
enter
jb
add
sbb
jno
shr
add
add
mov
xchg
sahf
loop
jp
mov
pop
jo
fdiv
add
add
add
addr16
pop
pop
gs
sub
pop
push
push
ror
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
pop
data16
push
mov
add
mov
mov
add
mov
add
scas
jle
iret
add
push
flds
pop
add
shlb
mov
rolb
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
lret
xchg
add
cmpl
out
lea
pop
add
enter
in
pop
add
mov
addb
mov
faddl
lahf
int
add
mov
push
loopne
mov
lea
push
lea
sub
pop
sub
mov
push
rol
lea
sub
pop
shr
add
push
shr
not
add
pop
mov
push
push
push
push
call
ret
flds
jecxz
add
add
add
add
lds
mov
jns
mov
jbe
testb
add
add
out
mov
lock
lcall
pop
or
jae
push
push
push
push
lea
push
lea
push
push
call
add
mov
jl
fwait
je
jb
add
leave
mov
add
ljmp
push
mov
cld
xchg
add
sti
push
add
cmpsl
into
add
mov
flds
xlat
add
pushf
jne
in
loopne
add
push
shr
pop
xor
push
push
push
call
pusha
test
out
add
push
add
out
jge
cli
popa
add
add
add
add
add
pop
add
fldl
in
stc
jns
add
add
insb
add
mov
addr16
add
lcall
xlat
and
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
testl
xchg
lret
push
scas
add
push
cltd
int
add
leave
add
mov
mov
xchg
stos
push
mov
fdivr
lcall
rolb
pop
rol
push
lea
rol
ror
lea
pop
xor
push
lea
push
push
lea
push
push
push
call
outsl
js
out
sti
add
add
add
push
out
add
add
lods
add
jecxz
imul
call
add
mov
add
xchg
add
add
xchg
jl
in
call
inc
push
push
push
push
lea
push
push
push
push
call
fucomi
mov
push
movsl
jnp
add
gs
movsb
into
fldenv
add
jbe
bound
add
jb
rcr
rcrb
out
jecxz
add
cmp
jne
push
push
push
push
call
mov
xchg
and
loope
hlt
add
loopne
add
add
test
mov
rcrl
addr16
out
fdivs
mov
add
cwtl
add
add
add
loop
lcall
mov
add
push
add
jp
mov
add
pop
add
push
rol
pop
cmp
je
push
pop
add
cmpl
jne
push
lea
not
add
pop
xor
pop
push
push
push
call
ljmp
std
int3
xchg
push
pop
push
scas
incb
add
add
add
hlt
xchg
add
add
add
scas
add
add
icebp
les
add
jbe
mov
mov
add
add
push
add
xchg
out
xchg
lea
scas
pusha
pop
into
add
icebp
add
in
hlt
lcall
push
push
push
push
push
push
call
iret
add
add
icebp
push
add
xchg
add
add
push
pushf
ljmp
sbbb
jmp
xchg
push
add
popl
pop
add
gs
loop
push
cmpsb
insb
jnp
add
fistpl
add
pop
push
push
push
lea
push
push
push
lea
push
call
jge
imul
add
xchg
xchg
add
stos
push
leave
add
lods
ja
add
ficompl
rcrl
in
in
pop
leave
push
shl
pop
ret
push
dec
pop
mov
push
add
sub
pop
add
mov
push
lea
not
add
shl
pop
push
push
inc
pop
mull
pop
push
lea
rol
lea
not
pop
call
push
push
push
push
push
push
push
lea
push
call
bound
xchg
add
scas
testl
rolb
scas
lcall
add
add
hlt
fiaddl
rolb
push
loopne
lcall
push
push
push
push
call
add
test
pop
jmp
movb
xchg
add
add
scas
jbe
ror
std
mov
add
bound
jne
pop
pop
add
sub
pop
call
push
add
pop
xor
push
push
push
push
push
call
push
mov
out
repnz
add
xchg
add
jp
movl
popl
fnsave
add
and
bound
add
xlat
fwait
mov
pop
lods
cli
add
jno
add
in
push
add
add
lret
mov
cld
in
mov
stos
push
add
sar
rcrl
scas
add
lcall
push
push
push
push
call
fdiv
add
mov
scas
add
fistps
add
mov
mov
mov
pop
push
lea
shr
xor
pop
pop
push
shl
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
mov
jecxz
testl
sahf
popl
pop
fcomp
add
in
xchg
xchg
movsl
lods
add
jno
add
push
addb
mov
sub
pop
leave
push
not
pop
ret
push
push
push
lea
push
push
lea
push
push
call
add
add
add
out
lds
jp
mov
add
int
lods
mov
arpl
repnz
in
push
xor
add
not
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
jl
mov
pop
flds
stc
out
mov
add
mov
add
add
add
add
fwait
jo
mov
add
add
jo
mov
addl
add
addl
mov
push
movsl
repnz
stc
pop
mov
add
loop
jmp
out
fiadds
add
xchg
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
int
add
mov
mov
add
add
test
pop
add
arpl
add
stos
sbb
mov
cld
ja
mov
jb
pop
mov
add
push
fdivr
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
cmpsl
add
add
add
jno
add
js
fildl
clc
mov
xchg
add
mov
add
ja
mov
je
int
flds
add
popa
add
mov
add
out
push
pushf
add
add
add
push
add
into
clc
mov
xchg
sub
pop
push
push
add
shl
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
aam
push
in
xchg
flds
loop
add
rolb
xchg
mov
repnz
lods
fdivl
xchg
add
push
pop
std
mov
add
movsl
movsl
add
pop
ja
push
add
add
add
in
loopne
push
push
add
sub
pop
pop
lea
push
push
push
push
push
push
push
lea
push
push
push
call
ja
add
into
mov
pop
xchg
xchg
add
add
stos
add
push
xchg
test
jae
add
mov
add
xchg
mov
ficoml
pushf
lds
cld
test
jge
cmpsb
lock
add
add
popa
add
fwait
add
add
sti
add
xchg
lcall
ljmp
shl
pop
shr
push
ror
pop
add
mov
push
push
push
push
call
js
push
push
jae
test
jo
mov
add
movsb
flds
add
jbe
js
add
add
xchg
add
out
add
pop
mov
call
sub
pop
add
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
cltd
add
aam
ja
xorl
scas
scas
hlt
add
add
mov
add
in
add
test
incb
add
lcall
inc
clc
push
not
inc
pop
mov
push
push
push
lea
push
push
lea
push
push
call
jle
add
mov
pop
mov
add
add
xlat
add
add
mov
insb
add
push
out
xlat
xchg
add
sbb
shlb
lods
jne
ret
add
jnp
add
add
imul
popa
add
lcall
stc
push
sub
pop
xor
push
rol
pop
lea
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
pop
add
cmc
add
loope
int
sti
add
repnz
xchg
push
shl
add
popa
push
add
add
shrb
pop
lcall
add
lock
xlat
jmp
add
jns
add
add
pop
add
gs
pop
jle
hlt
jge
sub
pop
mov
add
push
push
push
push
push
push
push
push
call
add
push
push
loope
mov
jl
cli
add
imul
cwtl
add
add
add
mov
faddl
add
add
rolb
sub
pop
xor
push
push
push
call
negl
add
jne
clc
mov
add
fs
push
add
pop
add
add
je
fs
clc
add
into
mov
mov
outsl
add
stos
add
add
add
jecxz
add
mov
stos
add
jbe
push
add
add
addb
add
sub
pop
rol
nop
push
sub
sub
pop
nop
push
sub
xor
lea
pop
xor
push
push
push
lea
push
push
push
push
push
call
sbb
add
add
cmc
add
jae
sti
outsl
add
add
add
add
add
mov
jmp
xlat
mov
ret
mov
sahf
add
add
lods
insb
icebp
add
jno
cltd
add
jae
jecxz
outsl
lret
cltd
mov
ja
fistpll
popa
add
in
loopne
lcall
push
rol
dec
rol
pop
nop
push
push
push
lea
push
push
push
push
call
jb
add
add
lods
add
jmp
xlat
mov
add
mov
add
cmpsl
add
loop
sub
pop
inc
push
push
lea
push
lea
push
push
push
push
push
push
call
add
movb
add
ja
xchg
lcall
idivl
mov
pushf
shll
les
add
pop
add
lea
add
stc
add
xchg
pop
mov
lds
test
add
ja
add
add
add
add
mov
cmc
cld
icebp
ja
jge
testl
lea
push
push
push
call
in
push
add
jge
scas
add
lret
addl
xchg
add
popa
int3
incb
int
add
add
fs
add
xchg
sahf
add
in
int
ja
roll
lock
add
test
pop
je
testl
jne
add
add
mov
loop
add
movsl
sub
pop
nop
cmpb
jne
push
add
ror
sub
pop
add
push
push
call
test
cmpsb
add
shlb
frstor
jecxz
mov
pushf
bound
out
mov
ficomps
add
add
xchg
add
add
scas
imul
in
clc
pop
nop
nop
push
push
push
push
call
add
add
pop
xchg
xchg
loopne
add
sahf
mov
jmp
int
out
aam
addr16
jge
add
add
pushf
lret
jbe
jle
add
test
rolb
jle
fs
push
add
add
scas
pop
fwait
add
pop
filds
in
fiadds
add
xchg
add
outsl
fildl
addb
rcrb
mov
lcall
inc
or
test
push
shr
dec
pop
nop
inc
push
push
push
push
call
add
addb
add
movsl
in
add
add
add
add
fwait
jmp
bound
pop
add
mov
mov
enter
jne
mov
cltd
jmp
in
cmp
jmp
add
test
loopne
popl
push
sub
sub
pop
nop
cmp
jb
push
sub
shr
shr
pop
xor
push
not
lea
sub
pop
jmp
push
xor
rol
ror
pop
mov
push
shr
sub
rol
pop
add
movzwl
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
loopne
ja
call
data16
xchg
mov
mov
add
mov
hlt
movb
add
add
add
imul
lret
add
ljmp
fwait
xlat
enter
cld
xchg
add
inc
sbb
push
push
push
lea
push
push
push
lea
push
push
call
fcomip
div
rolb
jmp
test
jp
nop
add
bound
mov
add
mov
fiaddl
add
add
add
imull
add
aam
in
fdivr
lcall
rcll
jbe
rcrl
dec
hlt
push
push
push
push
push
push
lea
push
push
call
pushf
popf
push
les
aad
push
add
add
imul
notl
movsl
add
add
leave
enter
sahf
js
add
push
add
add
stos
jecxz
mov
pop
xor
push
push
push
lea
push
push
lea
push
push
call
les
add
add
mov
pop
add
pop
rcl
test
pop
lds
add
mov
add
pop
movl
xlat
jl
fbld
imul
in
in
lcall
dec
nop
add
loope
push
rol
pop
xor
push
sub
add
pop
shl
push
push
lea
push
lea
push
push
push
push
push
push
call
jo
lcall
enter
mov
test
add
add
add
lea
jmp
add
xchg
xorb
icebp
popf
add
mov
add
jp
add
addr16
jp
jne
jae
mov
fcompl
dec
nop
add
dec
or
push
lea
push
call
add
add
add
rolb
pushf
sahf
pushf
xlat
divb
out
add
add
pop
add
add
subl
add
lret
repnz
shll
push
add
stos
pop
add
add
rclb
add
mov
mov
add
add
int
xchg
sub
pop
xor
mov
push
sub
pop
add
push
push
push
push
lea
push
push
push
push
call
icebp
iret
add
rolb
jmp
add
add
in
add
add
roll
int
add
popf
add
add
adcb
out
add
test
sub
pop
pop
push
inc
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
clc
mov
fadds
out
fwait
enter
cwtl
add
add
mov
lret
fwait
mov
pusha
sub
pop
pop
push
push
call
add
add
add
fnstsw
add
mull
add
add
add
pop
cmpsb
add
add
lods
std
fldl
add
jl
cltd
cmpsb
data16
outsl
icebp
add
pop
insb
lret
add
add
add
fldcw
clc
pop
pop
leave
push
push
push
call
mov
add
clc
rcr
add
hlt
lods
jb
xlat
scas
test
imul
enter
aam
mov
rcrb
clc
add
out
in
add
in
hlt
lcall
or
push
push
lea
push
lea
push
push
lea
push
push
call
popf
add
cwtl
add
jmp
add
flds
add
add
add
outsl
add
lcall
add
hlt
sub
pop
mov
push
push
lea
rol
add
pop
push
push
shl
pop
push
push
not
rol
pop
push
push
push
push
push
lea
push
lea
push
push
call
gs
cmpsl
add
add
add
add
cmpb
je
add
add
add
xchg
add
add
popl
sahf
jmp
jmp
add
in
in
mov
mov
push
push
lea
push
lea
push
push
lea
push
push
push
call
int
nop
jae
add
scas
push
aad
out
imul
fwait
jge
push
xchg
add
add
in
jns
add
mov
xchg
les
scas
mov
insb
add
add
rcr
mov
add
xchg
sub
pop
mov
push
dec
lea
sub
sub
pop
test
je
mov
push
not
ror
pop
test
je
push
inc
pop
mov
push
add
shl
pop
mov
push
inc
pop
mov
inc
push
sub
ror
sub
pop
cmp
je
push
push
push
lea
push
push
call
add
push
movsl
enter
je
add
push
loop
mov
add
mov
push
add
call
add
lret
add
add
add
add
in
lcall
rorb
adc
add
dec
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
call
movsl
pop
lea
xchg
lods
add
loope
pushf
add
leave
add
addl
push
faddl
add
lcall
add
add
add
in
loopne
xchg
add
ficomps
outsl
add
out
add
addb
add
pusha
subl
sub
pop
inc
push
ror
pop
cmp
je
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
add
lock
add
add
add
push
mov
movsb
add
add
add
jmp
in
push
xlat
loop
je
xchg
mov
test
jp
mov
add
add
mov
ret
std
add
mov
pop
add
ljmp
add
lea
push
add
rorb
hlt
call
xor
push
push
push
push
push
push
push
push
push
push
call
mov
notw
out
mov
addb
add
add
add
cmpsl
icebp
add
add
add
jp
add
mov
add
int
mov
add
lods
xchg
xchg
add
add
push
fwait
add
add
add
pop
ror
mov
in
add
lcall
pop
push
pop
pop
push
lea
push
push
push
call
int3
mov
add
lea
inc
jnp
jnp
add
add
fwait
jmp
idivl
add
popa
add
mov
add
cld
lods
add
test
fiaddl
test
lods
cmpsb
cmpsl
add
js
mov
add
lcall
push
push
call
add
add
mov
imul
push
cltd
add
jno
add
test
mov
jae
add
hlt
add
into
fadds
add
add
add
xchg
add
xlat
rolb
jecxz
add
xchg
add
add
add
pop
sub
pop
leave
push
lea
push
call
int
jl
clc
mov
bound
les
fildl
add
into
cmc
in
add
add
in
lds
mov
mov
add
movsb
aad
mov
add
gs
add
lret
add
stos
add
add
add
add
sub
pop
ret
mov
push
ror
rol
dec
pop
inc
push
add
dec
pop
cmp
jne
push
lea
push
push
push
push
lea
push
push
call
jle
int3
lcall
pop
push
insb
std
add
push
imul
in
push
lock
pop
sub
pop
lea
push
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
pop
add
mov
jmp
les
lds
mov
add
add
test
pop
arpl
fdivr
int
mov
add
bound
add
cli
add
add
lahf
add
sub
pop
test
je
mov
push
xor
pop
add
push
pop
cmp
jne
push
ror
sub
pop
mov
test
je
push
lea
push
push
lea
push
push
call
add
mov
jns
filds
movsb
out
jle
add
fs
xor
mov
add
xchg
add
lret
leave
add
jp
stc
add
add
call
add
sti
stos
fnstcw
add
ja
into
add
add
flds
push
add
add
out
pop
sub
pop
mov
push
push
push
lea
push
call
fcom
stc
lahf
std
fldl
loopne
mov
clc
add
xchg
add
add
add
shr
mov
fidivl
fldt
add
insb
sub
lea
add
fwait
scas
andb
in
out
out
mov
jnp
iret
mov
add
stos
in
notb
stc
out
sub
pop
add
push
shr
sub
dec
add
pop
cmp
je
jmp
push
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
jbe
pop
add
fcoms
pop
add
mov
call
mov
lahf
add
mov
pop
add
in
add
scas
add
mul
push
jnp
add
out
pop
movsl
stos
enter
mov
iret
jbe
push
add
in
in
lcall
rclb
cmc
inc
jecxz
pop
pop
pop
push
ror
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
in
int
mov
fwait
mov
add
ror
adcb
aam
std
fwait
rolb
add
jl
roll
pop
xchg
add
into
cwtl
scas
add
in
add
add
scas
mov
push
add
add
add
mov
add
jecxz
stos
add
add
add
add
imul
sub
pop
leave
ret
push
dec
dec
pop
lea
push
push
push
push
lea
push
push
push
lea
push
call
push
add
sar
clc
stos
push
mov
push
add
test
enter
xchg
pop
add
push
add
add
add
sbb
add
add
fdivs
std
into
push
lods
fdivrs
add
add
out
add
ret
loopne
pop
push
inc
not
inc
pop
pop
pop
push
push
call
add
shl
push
add
add
cld
loop
add
mov
add
add
add
add
mov
add
add
test
add
add
fdivr
mov
shrl
fsubr
lock
lcall
lcall
push
sub
shl
add
pop
leave
ret
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
shl
add
mov
mov
pop
add
push
jo
add
jae
scas
ret
mov
lret
test
add
pop
push
add
out
les
lods
ret
mov
add
add
fstpl
xchg
push
sahf
add
push
add
add
add
sub
pop
mov
pop
push
push
call
jbe
add
repnz
add
add
cld
int3
cmpsb
call
add
add
roll
cmc
add
mov
add
mov
lods
add
push
mov
mov
xchg
mov
add
add
clc
pop
pop
push
ror
pop
pop
push
push
lea
push
push
push
call
ja
add
add
addb
mov
mov
mov
in
add
add
xchg
add
mov
movsb
fdiv
add
add
lcall
leave
push
push
push
push
push
call
add
imul
jecxz
add
mov
mov
fcmovu
fcoml
in
mov
pop
add
cwtl
add
addb
ret
flds
fwait
popf
cld
push
add
add
add
adc
loopne
xchg
push
movsl
add
add
in
in
pop
ret
cmp
leave
mov
inc
lret
ret
lret
icebp
into
mov
loope
mov
ret
movsl
test
mov
xchg
lret
or
stc
dec
enter
add
pop
test
pop
roll
mov
mov
pop
mov
sub
in
nop
jecxz
rcrl
xchg
xchg
sarl
cmp
xchg
idiv
dec
in
pop
jns
xor
ja
sub
cmp
outsl
idiv
push
adc
push
xor
aas
pop
and
xchg
and
adc
and
mov
shlb
ret
test
insl
sbb
scas
or
jae
sbb
jmp
cmc
pop
pop
insl
stos
add
loop
inc
lea
jmp
ljmp
pop
inc
sbb
xorl
test
out
adc
shlb
push
or
inc
sub
in
stc
adc
adcb
add
ss
ret
inc
jnp
sbb
cwtl
jg
jo
jae
mov
ja
xor
add
je
pop
jne
sub
rcrl
sbb
cs
xchg
push
xchg
pusha
mov
or
es
fdivr
dec
jae
sbb
mov
mov
lods
or
mov
mov
add
add
xor
pushf
lods
mov
std
add
sbb
push
ljmp
or
jbe
ljmp
cmpsb
dec
rclb
repz
or
pop
jge
into
xor
addr16
filds
jbe
xchg
mov
jecxz
or
andb
push
loop
pushf
dec
call
dec
push
push
popa
sahf
ja
jae
mov
aaa
shr
popa
jb
jno
adc
shlb
arpl
cs
jno
test
fisttps
rol
xchg
cmp
ret
mov
mov
push
xchg
cmp
cmp
xchg
ret
and
test
xor
dec
add
out
js
mulb
lret
push
lods
add
push
inc
rcll
pushf
xchg
push
stos
xchg
cwtl
and
idivb
aad
pop
or
je
sbb
in
out
loope
ficomps
add
popf
pop
lock
fcmovnb
shlb
ljmp
mov
cld
cmp
adc
inc
fmull
dec
lea
inc
out
mov
iret
xchg
jle
hlt
fwait
xchg
dec
mov
loope
std
icebp
mov
ret
dec
je
fstps
aam
inc
cld
mov
lret
std
xor
sti
rcrl
jbe
xor
and
addr16
aas
dec
pop
mov
mov
adc
or
jp
out
jo
repz
in
push
into
sbb
lret
mov
ficomps
es
lds
xchg
push
cwtl
dec
cmpl
mov
xchg
dec
jge
shl
sub
data16
push
jl
or
push
or
loopne
cmp
cmp
lcall
sbb
or
sub
in
inc
jge
sbb
inc
jmp
mov
xor
xorl
pop
jge
push
xor
push
mov
cmc
subl
cmpb
cmp
cmpsb
or
fistl
pop
jl
ret
leave
in
xchg
pop
lea
fst
arpl
lea
es
cmc
sub
test
rcr
scas
xchg
popa
mov
xchg
shr
sbb
xchg
jmp
mov
sbb
inc
xchg
or
push
pop
jns
push
movb
ret
inc
xor
push
adc
lahf
stos
mov
xor
ret
js
xchg
jmp
fiadds
lret
into
add
dec
lahf
inc
jnp
mov
push
jnp
fwait
jae
inc
sub
jl
pop
insb
aaa
mov
aam
dec
movsb
daa
pop
arpl
fimuls
xchg
xchg
jb
push
mov
nop
cwtl
loope
stos
inc
push
mov
jp
idivb
and
aam
adc
inc
adc
ror
cmp
or
ja
icebp
lcall
inc
inc
push
pop
push
and
jo
hlt
jo
inc
pop
ljmp
xor
add
or
mov
pop
mov
mov
ficompl
notb
fisubs
insl
dec
mov
xor
arpl
lea
sub
daa
inc
mov
pop
xchg
cmovb
cli
dec
fiaddl
xor
xlat
sti
pop
mov
inc
mov
lcall
arpl
test
push
lds
adc
stos
imul
mov
mov
xor
push
fs
jno
dec
dec
adc
add
and
testl
add
push
pop
gs
sti
clc
adc
fidivs
jl
or
ds
aam
imul
mov
jb
sub
scas
inc
loope
loopne
dec
gs
repz
sbb
sub
fs
hlt
std
cmp
sti
push
push
push
cmp
clc
popa
out
mov
dec
pushw
insb
jg
xchg
cmp
stos
push
adc
pusha
jbe
add
pop
pop
mov
daa
jns
inc
scas
fbstp
cmpsb
and
leave
aaa
pop
movsl
dec
pop
sbb
sub
cwtl
mov
fwait
push
push
loope
pop
mov
fldcw
popa
pcmpgtd
jo
mov
sti
pop
notl
cwtl
pop
push
movsb
adc
std
loopne
pop
push
testl
jl
push
push
fs
push
iret
pop
lods
push
pop
push
lcall
icebp
fisubrs
jl
scas
mov
and
negl
inc
push
inc
pop
imull
xor
loopne
mov
inc
mov
add
adc
iret
popa
jae
jmp
shrl
out
shl
enter
mov
xor
adc
ret
push
stos
aad
scas
leave
lret
or
js
fmul
mov
and
pop
cmp
loopne
ljmp
lods
sub
push
call
mov
pushf
test
lods
xchg
es
inc
popf
pusha
jmp
dec
test
push
mov
xor
sbb
push
dec
push
dec
fstpl
je
cmp
mov
push
in
jl
lods
or
add
addr16
popf
jnp
repnz
cmpsb
mov
rcrl
and
sbb
aas
sbb
dec
movsl
roll
xor
push
sub
cmp
sbbb
les
mov
jp
xchg
clc
jg
jl
test
jnp
pop
xchg
lret
cmpsl
pusha
dec
arpl
rcrb
dec
pop
test
mov
pop
xchg
cld
ja
jecxz
idivl
sar
mov
and
cmpb
sbb
xor
dec
cmp
inc
dec
xor
mov
lahf
dec
and
pop
adc
pop
popf
sbb
mov
push
bound
loope
out
push
push
xorb
shrl
xchg
lds
pop
in
arpl
rorb
jb
les
or
adc
sub
data16
sbb
fidivs
add
mov
pop
call
insb
jb
dec
repz
jnp
mov
cmp
insb
jns
gs
hlt
shr
push
mov
sbb
adc
ja
int
mov
pushf
pop
ds
enter
cmpsb
or
add
loope
stos
xchg
mov
push
stos
and
adcb
mov
gs
data16
cwtl
xchg
pop
dec
add
mov
jl
add
jb
or
and
mov
jno
int
loop
mov
xor
mov
dec
pop
mov
test
push
imul
in
dec
xor
inc
enter
idivl
cmp
ficoms
fwait
adc
mov
std
clc
in
cmc
jbe
sti
jmp
push
dec
bound
xor
popf
cltd
add
mov
or
xorl
sbb
mov
sbb
sub
mov
cmp
insb
insb
aad
pushf
cmp
popf
testb
loop
hlt
pop
and
sbbb
imul
mov
mov
xchg
in
std
xor
lahf
lods
test
pslld
out
and
or
and
mov
ljmp
jecxz
dec
or
and
leave
stos
test
push
lods
or
push
test
enter
sbb
pop
lods
fnsave
xor
pushf
sub
shrb
stc
add
and
mov
inc
mov
inc
cs
into
dec
add
mov
mov
outsb
bound
pop
jg
sbb
es
or
jno
cmc
sub
mov
dec
repz
mov
int
aam
dec
jae
and
popf
jbe
cmp
dec
pop
loopne
sarl
leave
push
stos
rcrb
popa
dec
leave
pop
sbb
fisttps
cli
push
je
cmp
mov
pop
lds
mov
xor
mov
sub
add
pop
cmp
mov
fadds
cmp
xor
add
andb
push
jbe
popa
jge
pusha
cwtl
popf
mov
cmp
divb
loope
cmp
sub
push
insb
inc
cmpsl
or
inc
adc
pop
dec
aam
loopne
mov
cmp
ljmp
insl
xor
mov
in
sub
daa
insl
lcall
dec
cmpsb
stos
sbb
jle
xchg
push
xchg
xchg
enter
adc
scas
push
leave
mov
adc
xchg
cmp
notb
je
add
das
xor
js
shll
pop
out
or
mov
test
ret
or
fstpl
rclb
pop
push
and
lods
and
sbb
inc
or
push
pop
lea
shl
xchg
lahf
scas
mov
sub
sbb
mov
jno
insb
mov
hlt
inc
fdiv
adc
mov
out
int
ss
hlt
or
push
pop
push
dec
in
addr16
cmpb
cwtl
xor
in
xchg
and
pop
dec
or
and
pop
cs
mov
clc
mov
lods
mov
xchg
test
outsb
inc
inc
xlat
pop
pusha
push
movsl
loopne
invd
sub
cmpsb
mov
jecxz
ret
scas
jge
push
mov
inc
add
movsl
sbb
or
das
idiv
cmpsb
mov
add
das
dec
xchg
mov
sub
pop
enter
inc
in
pop
mov
xchg
lds
sbb
popf
sbb
or
out
push
out
jbe
cmp
roll
cmp
movsb
mov
scas
testb
pop
loope
xor
lcall
lods
push
dec
adc
push
int3
jo
dec
roll
pcmpgtd
lods
insl
int
pop
mov
dec
xorl
in
fstps
add
into
test
and
add
fistps
sub
dec
jne
and
jmp
inc
cmpsb
cmp
cwtl
push
xchg
subl
enter
jbe
and
pop
jae
sub
dec
sub
xchg
add
sbb
push
jmp
mov
jae
push
mov
sbb
push
call
dec
jl
inc
dec
sub
imul
arpl
add
xchg
jo
inc
mov
jecxz
test
mov
ffreep
decl
pop
ss
mov
call
sahf
and
mov
cmc
imulb
test
testl
insl
or
in
jae
je
ja
add
aad
mov
hlt
dec
xchg
cmp
repz
lcall
je
adc
mov
pop
push
xchg
arpl
mov
aaa
mov
std
push
jns
test
cmp
push
leave
xchg
clc
mov
loope
sub
or
shl
cmpsb
push
sub
bound
lahf
into
sbb
sub
cmp
ret
fsts
shl
xchg
ret
dec
insb
or
test
pushf
add
in
loopne
jge
ret
in
sub
fucomi
notl
sbb
adc
filds
call
pop
or
xchg
lahf
test
sub
mov
rcll
dec
pop
ss
dec
cmp
xor
sub
imul
std
fdivrs
add
cltd
push
push
cld
leave
aad
xchg
push
pop
cmp
xor
je
sbb
leave
mov
jecxz
dec
adc
ds
jle
cmp
pop
mov
inc
mov
mov
outsl
fnstcw
mov
icebp
movsl
imul
in
lods
movsb
and
dec
loope
andb
xor
or
push
mov
mov
clc
call
sub
test
movsb
rcl
scas
pop
mov
sti
fnstenv
push
push
push
push
xor
adc
push
jns
fcompl
arpl
xchg
dec
mov
mov
mov
lods
pop
or
push
xchg
xchg
mov
mov
pop
add
loopne
out
add
leavew
xchg
lret
scas
data16
mov
jecxz
test
sbb
fidivrs
fistpl
das
daa
adc
jle
push
out
xlat
xchg
inc
adc
xor
cmpsb
adc
xchg
mov
push
js
sbb
div
mov
inc
adc
pop
push
jns
iret
movsl
aad
mov
jecxz
sub
jae
shll
rclb
cwtl
xorb
mov
push
inc
ss
nop
mov
cmp
adc
scas
lds
push
mov
in
adc
push
and
roll
fisttpl
ror
pop
out
mov
fdivl
test
leave
pop
jnp
inc
lcall
jmp
sub
and
cmp
sbb
leave
ja
xor
or
andl
int
sub
hlt
mov
pop
inc
cltd
xchg
clc
lcall
ret
loop
pop
insl
sbb
pop
test
int
push
xchg
js
push
popw
adc
movsl
mov
imul
mov
xor
cmc
inc
mov
sub
push
in
daa
aam
or
into
js
lods
cltd
test
dec
xor
pop
mov
test
pusha
and
jns
out
js
pusha
shlb
jle
mov
inc
xchg
mov
add
xchg
xor
pop
pop
jmp
mov
int3
mov
arpl
inc
nop
call
mov
sahf
push
ja
sbb
adc
pop
or
cmpsb
insl
mov
jo
pushl
xchg
add
enter
inc
notl
int3
xchg
adc
sub
arpl
lret
push
fisubl
out
fwait
mov
dec
push
xlat
xor
dec
aad
lcall
xor
mov
sbb
jg
fiaddl
leave
lods
es
dec
sbb
jns
or
fidivrs
loope
fbstp
daa
sahf
cmp
xor
ja
sbb
jl
xor
rorl
gs
jns
mov
pop
push
inc
push
in
xchg
or
pop
pop
rolb
mov
div
cli
filds
jge
lock
aaa
test
adc
xchg
mov
xlat
add
fmull
test
stos
push
dec
shll
and
sbb
push
cmc
scas
sbb
push
add
jmp
ja
mov
jmp
mov
push
in
incb
lds
and
jmp
daa
adc
sub
lea
sbb
inc
ljmp
sbb
fisttpll
leave
inc
inc
jg
and
jle
stos
xlat
mov
jl
clc
pop
cmp
jp
sub
mov
pop
sbb
inc
into
jae
int
es
out
sub
pusha
in
or
das
sbb
xchg
mov
sbb
loope
gs
mov
out
and
jle
cld
in
pop
mov
cmp
hlt
repz
je,pt
out
int3
pushf
bound
fisttpll
ret
dec
jb
mov
loopne
lahf
pop
inc
sbb
jg
xor
add
cmp
andb
mov
stos
in
mov
and
ret
out
xchg
les
hlt
adc
add
cld
push
fld1
aad
fwait
xor
lods
cmpl
jl
sub
sbb
fwait
mov
int
lock
inc
sbb
jne
fisttpl
dec
sahf
enter
pop
movsl
push
mov
adc
nop
mov
xchg
cwtl
inc
mov
inc
lcall
inc
pop
jl
jmp
mov
sbb
pop
scas
fs
or
popa
dec
sbb
jl
xchg
jl
lcall
pop
add
push
xchg
scas
mov
xchg
mov
pop
lahf
movsl
mov
rcll
dec
in
push
sub
push
adc
jnp
iret
neg
xchg
fdivr
push
jb
movsb
inc
dec
sub
aaa
xchg
in
das
and
add
addb
add
add
loope
mov
dec
aad
xchg
pushl
pop
cmp
jb
pop
aad
add
fstps
hlt
mov
pop
pop
mov
ret
dec
lds
and
fdivr
sti
cmp
mov
dec
cmpl
xor
pop
sub
sbb
cli
decl
inc
cltd
xchg
rcl
xchg
fcmovbe
clc
cmp
inc
dec
addr16
enter
sub
stos
xlat
jp
lahf
push
call
push
inc
repz
in
xchg
dec
xor
loop
sbb
mov
push
int3
adc
mov
sti
dec
xor
loopne
or
or
popf
jg
xor
mov
mov
loop
fsubrl
dec
shrl
pusha
cld
or
insl
dec
mov
fisubrl
inc
sub
pop
xlat
inc
decl
test
mov
jo
xor
add
shr
mov
cld
cmp
pop
inc
in
add
lcall
stc
jb
push
push
mov
test
jo
mov
fisubs
mov
xor
and
sbb
sub
jle
jl
test
inc
push
jmp
pop
cmp
jbe
clc
sbb
in
mov
xchg
orb
bound
sbb
sbb
test
inc
outsl
fimull
cli
push
sbbb
xchg
cmp
and
inc
les
mov
loope
rcll
push
mov
sub
push
out
pop
notl
leave
fidivl
push
jne
push
cmpsb
aas
sbbl
xor
test
mov
mov
inc
sbb
inc
icebp
ret
jmp
mov
out
rcl
mov
call
push
les
bound
pop
loope
jo
pop
pop
pop
jg
insb
cmp
pop
aam
ljmp
mov
xor
daa
inc
or
xchg
xchg
push
jge
lea
inc
cmp
pop
mov
mov
sub
in
dec
pop
lds
add
cmpsb
inc
aad
aam
rol
inc
sbb
stos
out
mov
stc
in
fisubrs
dec
cmp
mov
out
jb
xor
mov
decb
sti
xchg
xor
jle
xchg
aas
shrl
jp
mov
arpl
xchg
jne
scas
sahf
cmp
aas
ret
pop
inc
test
loop
adc
sbb
mov
into
std
mov
mov
out
or
mov
sbb
inc
arpl
data16
inc
sub
nop
jbe
push
nop
inc
sub
rcrl
daa
in
sub
xchg
mov
flds
in
shrl
aad
adc
aaa
nop
test
adc
add
cld
dec
into
pushf
inc
adcl
and
aas
aaa
adc
fs
test
scas
adc
fwait
sbb
mov
inc
cmp
inc
push
sbb
imulb
fs
push
cwtl
mov
cli
inc
cmc
add
jae
jbe
dec
call
in
sbb
repnz
and
cmp
addr16
loopne
stos
push
loope
ljmp
pop
jb
lcall
mov
pop
adc
push
or
sbb
mov
out
pandn
xlat
leave
adc
in
es
adc
add
or
push
pushf
adc
xchg
clc
sub
dec
test
fisubrs
xchg
cmp
pusha
dec
add
loopne
outsb
rolb
or
inc
adc
jmp
mov
dec
pusha
add
mov
mov
jle
out
das
dec
iret
ss
out
or
pusha
mov
fildl
add
mov
gs
fisttpl
popf
leave
test
or
aas
icebp
flds
je
fs
dec
jnp
shlb
inc
jl
pop
add
add
cmp
mov
xor
push
js
xor
outsb
pop
ret
inc
mov
jae
sbb
int3
sub
pop
in
mov
add
mov
fnsave
movups
das
sbbl
mov
movsl
jnp
das
into
inc
jbe
sbb
sub
jle
mov
aas
add
cwtl
sbb
fidivrs
and
mov
je
cmp
sarl
xorl
aam
jg
js
jg
sbb
pop
aaa
mov
add
adc
repnz
jl
mov
scas
popa
cs
push
or
inc
dec
addb
dec
ljmp
push
syscall
es
mov
jle
jae
cmp
sub
or
jns
sbb
mov
aam
in
fs
fnstsw
das
ja
adc
icebp
fisubl
negb
push
outsb
inc
testl
and
jb
ljmp
rolb
pop
adc
mov
testl
sbb
mov
mov
adc
dec
lahf
stc
push
lds
inc
dec
xchg
sub
aam
test
je
jl
jo
sub
jo
insb
push
dec
int3
imul
cld
xor
stos
adc
mov
cmp
aas
push
xchg
mov
push
pop
sub
xchg
sub
mov
gs
dec
outsb
xor
mov
or
lds
jg
insb
dec
popf
arpl
ljmp
div
lret
ds
cwtl
mov
or
imul
cmp
mov
add
pop
imul
int3
and
lret
in
mov
adc
xor
clc
repz
outsl
js
sub
sbb
mov
push
push
jp
mov
dec
mov
roll
addr16
in
dec
cwtl
add
je
and
jg
test
repz
movq
in
negb
scas
push
xchg
xor
cmpsb
adcb
sbb
out
fmul
push
mov
icebp
hlt
dec
insb
and
and
push
xor
into
sbbl
pop
pop
cmp
or
xlat
inc
jmp
push
cwtl
xchg
mov
cmp
mov
or
dec
lret
or
lcall
push
cmc
sub
scas
xchg
xor
xchg
sbb
add
in
and
mov
jge
push
loop
mov
inc
insb
adcl
mov
scas
sub
lret
enter
mov
mov
xchg
aam
mov
cmp
jb
outsb
mov
sub
dec
jle
repz
daa
out
leave
jmp
movl
jo
ret
lret
stos
enter
ficomps
call
movl
inc
jg
cwtl
sbb
add
loop
ret
sub
sbb
push
xchg
fstl
jle
inc
add
mov
xchg
dec
xor
and
cli
imul
fwait
sub
adc
idiv
pop
sar
pop
mov
cmp
xchg
es
jg
pusha
aas
mov
xor
cmp
mov
jne
into
mov
les
cmp
repz
and
enter
xchg
movsb
xor
dec
arpl
mov
nop
push
push
inc
test
or
jno
nop
cmpsb
negl
sub
movsl
push
jnp
add
sarb
daa
cwtl
mov
popa
sub
iret
sbb
bound
sub
or
cmpsb
or
mov
aam
sbb
add
jecxz
mul
bound
sub
pop
mov
or
sub
sar
shr
jge
fildll
mov
je
leave
mov
mov
lods
inc
sahf
popa
sbbl
jmp
inc
lock
xchg
call
jmp
cmp
sbb
mov
sbbb
aas
sarl
add
pop
or
jno
gs
inc
les
mov
loop
mov
xchg
xchg
arpl
out
add
push
sti
mov
pop
cli
dec
icebp
lods
rorb
lahf
adc
mov
out
inc
inc
pusha
pop
lahf
fucompp
repz
in
jns
xor
mov
cltd
and
fildll
xchg
push
adc
and
cs
sti
je
dec
shl
dec
jge
addr16
mov
lcall
movhps
subb
loop
arpl
jl
or
push
sbb
mov
mov
sbb
popa
test
cmc
ss
outsl
hlt
push
mov
popa
jo
add
lret
sbb
inc
data16
dec
or
mov
pop
sarl
jnp
dec
mov
ficoml
rol
inc
movsl
cmpl
repnz
pop
fs
fdivrs
call
jmp
sbb
xor
sarb
sbb
inc
pop
dec
lods
or
iret
sub
mov
test
movsb
cmpsl
imul
stos
daa
or
jl
jge
ret
stc
sbbb
mov
mov
ja
fucomp
mov
mov
les
pop
jbe
in
bound
mov
jmp
push
lds
repnz
push
pop
insb
cwtl
fistpl
mov
xor
mov
sbb
add
jb
ja
mov
lret
out
js
and
insb
xchg
push
pop
adc
jno
outsb
xchg
push
mov
inc
mov
stos
or
pop
mov
sbb
dec
mov
mov
xor
in
sbb
sub
in
stos
hlt
arpl
push
in
sti
mov
cmp
jo
dec
ret
pop
call
repnz
loope
push
xchg
loope
mov
mov
add
push
loop
loop
push
mov
jns
sub
pop
jno
mov
sub
mov
or
pop
cmp
mov
lods
test
dec
clc
mov
mov
push
and
stos
adc
fst
cmp
hlt
movsb
inc
mov
mov
cwtl
cltd
add
shrl
outsb
pop
and
fists
rcrl
pop
cmpsl
fdivp
mov
inc
ret
add
fs
push
test
ret
cmpsl
push
xchg
in
dec
adc
jg
mov
sbb
imul
mov
push
pop
mov
cmp
enter
inc
mov
in
and
pop
adc
and
pop
sarb
mov
inc
mov
push
dec
cmc
add
add
sub
xor
loope
xchg
xchg
test
add
lods
mov
sbb
mov
xchg
call
movsb
inc
cmp
into
stos
gs
aam
fdivrl
stos
mov
adc
pushf
fs
cmp
repz
lahf
bound
dec
mov
rcrb
stos
cwtl
mov
ss
or
loope
pshufw
insl
das
ret
in
imul
filds
lea
mov
cltd
adc
imul
stos
jl
sub
lret
mov
stc
add
jo
push
sbb
test
adc
push
adc
iret
lcall
popa
leave
loopne
out
scas
icebp
fcmovnu
push
xor
cmc
movsl
int
sarl
mov
mov
and
imulb
pop
pop
js
or
xchg
bound
or
jnp
and
cmp
stc
cs
fs
jp
mov
fs
push
in
and
in
jnp
ss
jae
cmp
popa
mov
aaa
adc
jae
out
je
inc
mov
out
sub
imul
mov
ja
sbb
mov
loopne
mov
or
add
or
sbb
mov
sbb
fdiv
outsl
out
or
adc
xor
adc
mov
cmp
into
arpl
stos
pop
mov
and
or
and
insb
jg
out
push
negb
pop
mov
pop
imull
jmp
or
jnp
inc
dec
inc
pop
icebp
inc
cld
movsl
sub
clc
addr16
enter
xchg
insl
pusha
pop
xlat
mov
mov
sbb
xchg
inc
div
das
add
xchg
enter
dec
jae
sbb
enter
sbb
lcall
pusha
and
addr16
mov
incb
pop
xchg
fstp
xor
add
push
orb
stc
mov
dec
shlb
clc
test
in
sub
fwait
jp
xchg
fnstsw
sub
cmpsb
sbb
divl
push
lea
jb
pop
in
mov
cld
pop
add
mov
sub
idivb
jne
inc
mov
mov
pop
imul
or
xor
xchg
test
mov
js
cmpsl
imul
pop
push
fbld
jae
xchg
ljmp
scas
hlt
push
mov
fisubs
lock
ret
mov
fisubl
fsubp
pop
xchg
pop
popf
mov
cmpl
inc
pop
icebp
out
jmp
fidivrs
push
cmpsl
dec
movsb
inc
cmpsl
jae
jb
dec
sbb
mov
dec
sub
sahf
sub
cmp
aaa
lea
xorl
and
clc
push
repz
pop
pop
jnp
cmp
cld
mov
rclb
fwait
push
mov
lock
out
sub
and
repnz
std
sbb
sbb
dec
movb
sbb
cmpsl
dec
testl
pop
sbb
ffreep
push
outsb
in
push
add
aas
dec
jmp
fwait
pop
and
mov
test
out
pop
sub
std
push
call
jp
cmpsl
mov
pop
push
popa
int3
mov
repz
mov
mov
pop
into
or
popa
aam
jne
roll
mov
fcoml
cmpsl
outsl
es
cwtl
into
push
in
jns
lcall
dec
dec
mov
idivl
les
lea
mov
and
xlat
push
inc
push
inc
inc
aas
cmpsb
jnp
in
inc
and
mov
into
icebp
mov
sahf
mov
fs
mov
into
dec
adc
fsubs
std
sub
mov
mov
hlt
push
outsl
imul
pushf
inc
fisubrs
pop
popa
cmc
cmpsb
push
push
les
cmpsl
ficoms
mov
daa
rorb
inc
aas
movsl
sub
movnti
and
adc
push
jne
lds
sti
mov
push
outsl
shrl
or
jns
xchg
adc
imul
sti
or
sarl
push
jae
enter
nop
imul
jle
sahf
push
test
push
pop
outsb
shrl
mov
pop
add
sbb
mov
aaa
je
sbb
pop
fcompl
movsl
mov
inc
lahf
cltd
inc
outsl
ret
pop
test
gs
popf
leave
sbb
inc
cmpsb
xlat
add
mov
rcrb
mov
jnp
int3
call
xor
mov
hlt
lcall
aad
pop
fdivl
push
cld
cmp
data16
fwait
outsb
sbb
push
xor
clc
in
ds
inc
std
mov
cmp
xorl
in
pop
jbe
loopne
and
cltd
mov
scas
jb
inc
cmpsb
dec
bound
adc
dec
xchg
fsubrl
lds
ja
mov
mov
hlt
adcl
sub
adc
loopne
or
xor
jae
subb
xchg
aaa
jg
jb
lods
testl
and
xchg
mov
jo
mov
jecxz
xchg
mov
or
aad
inc
fwait
sbb
push
ds
and
fcompl
mov
push
push
cltd
or
out
out
std
movsb
rep
dec
mov
jl
pop
fstps
in
and
hlt
mov
lea
fnstenv
lcall
push
jae
rorb
and
mov
pop
ss
xchg
fisubl
les
bound
ja
xchg
cs
sarb
dec
inc
je
rcrb
cmp
cltd
movsl
cmp
iret
inc
xlat
mov
ret
inc
mov
sbb
mov
ret
and
jecxz
mov
push
scas
fdiv
cmp
jp
je
ljmp
add
cld
push
xor
xchg
inc
das
add
jo
pop
fisttpll
sarb
or
push
adc
bound
out
mov
xchg
mov
dec
aas
dec
or
cmp
push
sub
mov
jo
jp
inc
and
movsb
pop
leave
jp
xchg
jg
xchg
sub
xor
xor
es
xchg
incl
jno
shlb
and
aam
push
jnp
mov
fisubrs
sub
out
inc
lcall
cmpsl
xorl
shll
scas
movsb
push
sbb
mov
and
dec
leave
or
dec
repnz
fsubrs
sbb
inc
sbb
sbbb
jae
push
cmp
add
pop
xchg
imull
ret
in
aas
mov
adc
gs
sub
adc
divl
aaa
fidivrl
pop
jae
fmuls
loopne
inc
dec
aas
jle
stos
ja
out
lds
outsl
or
jo
xchg
pushf
jle
xlat
lds
pop
jl
ds
xchg
ljmp
ret
jnp
movsb
mov
dec
mov
leave
or
and
int3
xchg
mov
leave
dec
loop
inc
mov
nop
lahf
cmp
xlat
loop
sbb
mov
loop
ret
cmpsb
pop
into
or
push
xor
cmpsb
sbb
inc
inc
mov
dec
imul
rol
push
and
movb
jbe
lods
loop
scas
adc
push
xor
add
xchg
jae
and
sbb
jnp
cmp
shrb
xchg
test
mov
push
mov
jnp
cwtl
nop
adc
call
subl
clc
fdivl
sub
cltd
scas
mov
addl
inc
jl
pmuludq
dec
xlat
xchg
int3
inc
push
dec
rcl
lahf
in
cltd
push
xchg
and
inc
inc
mov
jb
inc
sbb
lcall
mov
dec
xor
dec
push
push
enter
shll
dec
cmp
fbstp
sub
mov
mov
cwtl
icebp
sub
ret
mov
add
mov
push
push
icebp
daa
pop
adcl
fidivrl
push
sbb
mov
push
cmp
andb
gs
xchg
loopne
int3
mov
rcrl
cmp
mov
add
add
popf
sbb
int3
xor
aam
add
cmpsb
ret
add
add
xchg
cli
xchg
int
das
dec
loopne
sub
push
cmp
add
mov
xchg
out
fldl
addr16
jno
nop
rolb
test
iret
cltd
inc
adc
add
xchg
mov
ss
add
jns
mov
imul
push
or
jno
sub
rcr
cmp
dec
cmpsl
insb
lods
or
imul
and
mov
push
icebp
je
sbb
fsubp
add
js
jg
lret
lods
xor
daa
fwait
jle
push
inc
clc
outsl
or
out
sub
or
xor
rclb
xor
adc
cwtl
add
pop
testl
scas
fwait
cmp
sbb
shlb
pop
in
mov
mov
jmp
sarb
inc
in
push
cmpsb
add
movsl
and
jecxz
shl
loop
scas
sarb
jg
call
push
jl
lret
mov
jp
jl
push
push
mov
or
dec
push
sti
fisubl
insb
sti
dec
int
fimuls
out
cmc
inc
add
sbb
lcall
sbb
jmp
out
mov
ljmp
xor
scas
mov
dec
add
repz
jno
jle
pop
sub
push
mov
or
jp
jl
fadds
pop
inc
push
dec
dec
gs
icebp
fbld
lcall
push
dec
xor
mov
sti
jno
stc
sbb
fldcw
ds
jmp
jmp
cwtl
add
ja
sbb
xor
or
pop
sub
test
scas
lods
dec
xorl
call
insb
inc
leave
lods
popf
dec
ljmp
xchg
push
xor
lods
scas
xor
addr16
in
pop
mov
cs
mov
loop
lret
inc
dec
sbb
cmp
leave
mov
lcall
aaa
inc
dec
push
imulb
mov
adc
add
mov
movsl
sarb
stos
daa
imul
mov
sbb
lods
es
int
jno
test
sbb
imul
mov
cmp
inc
je
lea
lahf
dec
or
test
das
pop
scas
mov
xor
mov
divl
adc
fs
mov
mov
je
ja
test
orb
pushf
jnp
or
ret
pop
cmp
cmc
adc
test
pop
test
cmpsl
jae
insb
fnstenv
stos
aad
jnp
fsubrl
add
loop
cmp
lret
movsl
and
adc
ss
sub
pmullw
cmp
adc
cmpsb
aad
xchg
dec
pop
test
das
pop
pop
je
int
adc
dec
pop
lock
mov
or
push
mov
lret
dec
std
nop
and
jo
adc
aaa
lea
xchg
js
jo
idivl
sbb
js
mov
and
flds
les
stos
lock
outsb
dec
or
loope
jmp
dec
lret
insl
sbb
jno
cmpl
and
dec
lods
jle
and
mov
sbbl
or
lcall
scas
std
mov
xor
rcrb
insb
mov
sarb
mov
pop
dec
jbe
cmp
push
adc
dec
sbb
out
loop
add
mov
stc
inc
xchg
pop
xchg
cli
roll
add
mov
push
negl
push
outsl
jae
cli
pop
push
cmp
and
into
test
add
js
xor
mov
test
jl
inc
shlb
cmpsl
cmpsb
scas
jnp
int3
jnp
maskmovq
mull
sbb
data16
loopne
pop
jbe
cmpsb
idiv
lcall
cmp
push
sbb
out
testl
lds
scas
loopne
aaa
pop
ret
out
rolb
jmp
fsubrp
jecxz
sub
decb
loopne
cmpsl
lret
sub
gs
test
cmp
mov
sub
cmpl
xlat
out
insl
mov
sahf
imul
lcall
add
cmpb
ror
mov
sbb
dec
xor
pop
xor
push
pop
adc
mov
mov
test
fcompl
xor
out
mov
iret
sbb
jp
rcrl
and
sub
jae
add
jne
push
ret
iret
fcmovnb
add
aam
pusha
aam
sbb
mov
lcall
in
les
inc
test
mov
test
stc
test
dec
mov
in
fnstsw
and
cmp
divl
jge
rsm
sub
sahf
jae
push
adc
aam
inc
push
mov
mov
aaa
fdivrp
sbb
loopne
inc
fidivrs
das
xor
jns
outsl
fcomps
mov
mov
arpl
stc
inc
push
iret
inc
movsl
inc
fs
inc
mov
jbe
pushf
scas
cli
jmp
out
dec
push
lock
fnstenv
cmpsl
cmp
fwait
sub
neg
cs
pop
test
int
add
mov
outsb
stos
dec
leave
cmp
and
cmp
stos
add
mov
add
jp
clc
cmpsb
sub
repnz
mov
or
lds
and
pop
mov
aaa
fwait
int3
fisttpl
popf
dec
dec
mull
dec
loopne
shrb
daa
mov
pop
dec
cwtl
xchg
mov
push
int
pusha
loop
ret
or
inc
sahf
stos
push
es
icebp
jae
mov
loopne
xor
in
mov
je
jae
cwtl
es
imul
dec
gs
in
jae
jecxz
out
aaa
push
sarl
mov
rcrb
addb
adcl
int
cmc
in
pop
sbb
sub
iret
jnp
and
pop
xor
call
push
ret
andb
jae
clc
rclb
mov
mov
in
xchg
mov
dec
shl
pop
cltd
push
enter
and
lret
lods
lret
add
lcall
mov
out
outsl
cli
push
mov
andl
xor
cmpl
push
mov
movsl
mov
jecxz
pop
jl
loopne
jno
push
adc
fucomi
push
shll
test
and
push
andb
xchg
sbb
scas
andl
cs
add
sbb
push
mov
add
jne
xlat
mov
push
icebp
test
jno
insb
cmp
div
pushl
push
repz
popa
cmpb
add
adc
les
xchg
clc
xlat
popf
rcl
xchg
adc
adcl
push
lods
sub
push
out
lcall
cwtl
call
inc
pop
roll
je
or
pop
test
sbb
cmp
or
cmpl
mov
call
inc
xchg
stos
push
sbb
jle
adc
fidivrl
inc
and
cmp
mov
sub
add
xchg
sub
repnz
ss
mov
hlt
add
dec
add
cmp
sar
mov
jb
dec
push
sbb
ret
adc
inc
adc
aaa
sbb
nop
sahf
jle
xor
stc
clc
adc
inc
or
mov
je
adc
mov
aad
push
mov
jmp
out
sbb
pop
aaa
sbb
sub
jno
in
dec
mov
cmc
jb
ljmp
repz
call
jge
call
jno
mov
ljmp
add
inc
cwtl
popa
dec
loopne,pn
sub
lods
and
dec
pop
sub
lods
lds
sub
pop
pop
repz
inc
js
cmpl
jbe
gs
push
inc
fstl
in
sbb
fwait
pop
pop
jo
js
jae
das
aas
mov
iret
adc
sti
shll
or
or
sub
add
and
cmp
inc
add
mov
add
sub
ss
insb
pushf
xrelease
or
and
addr16
push
dec
inc
or
movsb
add
and
and
insl
jecxz
jnp
stos
push
push
stos
push
push
add
or
test
jno
out
mov
cmpsb
mov
pop
xor
lret
jne
jns
sbb
mov
lret
sahf
dec
mov
lahf
sub
inc
jae
xor
out
addb
sbb
push
inc
xorl
xchg
lds
dec
ds
les
push
mov
xor
jl
jle
int
in
loopne
push
lcall
mov
loop
mov
or
in
mov
xchg
add
adc
cwtl
cld
out
adc
in
fidivrl
out
icebp
xor
lret
cmp
xchg
adc
xchg
std
stos
mov
push
mov
fs
ret
push
mov
adc
mov
sub
inc
out
jns
imul
push
into
mov
jno
push
in
setle
mov
sahf
jo
mov
push
fimuls
test
jmp
adcb
fsubrs
mov
sbb
jmp
fldenv
cmc
fmull
dec
dec
and
jp
mov
cmp
xchg
fldl
cmp
mov
mov
push
or
stc
mov
mov
adc
rorl
or
pop
test
dec
sarl
jns
mov
push
fsubrl
push
sbb
dec
or
xor
jge
andl
mov
push
xor
or
les
xorl
dec
mov
inc
out
or
mov
ljmp
push
aaa
stos
outsb
clc
sub
call
cltd
test
mov
add
sub
mov
cmpb
inc
push
je
in
inc
cmp
mov
and
sub
or
adc
sbb
jnp
push
adc
fwait
sub
leave
lea
mov
pop
aam
aaa
dec
mov
arpl
and
adc
xcrypt-cbc
cmpsl
xchg
sub
sbb
stos
mov
daa
aaa
ds
ss
jnp
outsl
xor
adc
ret
mov
imull
adcb
out
lahf
or
cmc
mov
arpl
pop
lret
stos
adc
cmp
cmpsb
call
in
or
das
es
lret
inc
stc
xchg
scas
std
push
dec
adc
and
rcr
adc
into
int
cmp
push
icebp
xchg
dec
mov
jns
lahf
aam
int3
in
es
pop
sbb
mov
pusha
jmp
pop
nop
jl
mov
out
mov
mov
mov
push
cwtl
xchg
sbb
push
cmpsb
push
sub
jle
mov
aas
jno
lcall
pop
fistpl
int
outsl
mov
or
hlt
sar
sbb
xchg
lahf
out
cmp
mov
dec
pop
into
xor
enter
cmpb
mov
push
imul
or
mov
iret
aas
test
sbbb
pop
vmwrite
js
or
shrb
pop
in
loop
lcall
cld
cmp
fnstcw
jo
iret
mov
and
add
mov
sbb
pop
sub
inc
jge
shlb
stos
and
insb
jbe
shll
daa
test
fdivr
scas
sti
fistpll
rcrb
adc
adcb
fdivs
scas
mov
leave
push
in
and
lds
push
arpl
jmp
aad
pop
shrl
and
rorl
mov
mov
mov
popa
pushf
push
test
int3
dec
and
xchg
sub
dec
ret
or
sub
movb
gs
out
ret
cwtl
jae
add
icebp
subl
leave
mov
mov
pusha
cmpsl
jecxz
or
push
aas
add
mov
sbbl
dec
inc
in
scas
dec
or
bound
sti
ja
jmp
push
cmpsb
cmp
cmp
ret
lods
in
dec
add
mov
inc
clc
es
xlat
test
jmp
or
xor
rcrl
mov
adc
rclb
mov
adc
xor
rcrl
pop
add
cwtl
dec
push
push
jmp
lods
ficompl
xor
xor
out
inc
mov
scas
jecxz
leave
add
out
sbb
adc
test
jge
lods
cld
mov
call
adc
out
push
je
mov
int3
orl
dec
hlt
xlat
mov
data16
loope
ret
cmpsl
out
cmpsl
nop
push
imul
xchg
xchg
dec
adc
imul
jns
ljmp
inc
pop
cltd
pop
pop
mov
inc
inc
mov
pop
rol
mov
inc
test
jae
or
jmp
sbb
icebp
aas
repz
enter
stc
stos
inc
or
add
jmp
ficoml
push
lock
sbb
rolb
mov
roll
sub
int
std
or
daa
dec
aam
iret
jl
mov
mov
dec
pop
adc
inc
pop
int
andl
negl
cmp
in
mov
jg
xlat
cmp
dec
aad
sti
sub
push
xor
stos
cmp
outsl
add
dec
and
loopne
and
jle
test
mov
push
mov
leave
push
cli
adc
xor
cmp
in
roll
das
mov
cwtl
fisttpll
cwtl
ret
sbb
mov
pusha
icebp
inc
jo
in
sbb
ret
xlat
xlat
movsb
push
aad
push
push
test
mov
cmp
lds
cmp
push
and
xchg
mov
fisttpl
pop
add
mov
ficoms
push
jo
roll
shrb
es
sub
pop
outsb
or
xchg
bound
mov
sub
mov
cmc
in
xchg
sub
xchg
shrb
inc
fucomip
mov
inc
popa
or
push
loop
inc
sbbb
push
push
ds
push
out
stos
push
insl
aad
push
jns
inc
dec
std
mov
mov
mov
dec
fistps
insl
pop
dec
xor
or
dec
les
sub
inc
push
pop
and
adc
mov
aaa
divl
xor
mov
or
orb
sahf
pop
mov
out
frstor
mov
mov
dec
mov
cli
es
loope
pusha
inc
mov
dec
mov
jl
shl
jp
xor
out
aas
sub
push
std
idivb
pop
mov
mov
sub
ret
sbb
xchg
pop
ja
inc
adc
inc
dec
movsb
in
sbb
cmp
popf
mov
sbb
test
jns
or
adc
insb
mov
or
aaa
aad
add
sar
lock
mov
inc
pop
sub
loopne
sbb
in
sub
hlt
stc
insb
and
lcall
sub
add
xchg
ljmp
add
inc
mov
mov
mov
push
movsl
jp
mov
in
dec
dec
sbb
push
inc
jp
and
into
mov
inc
addr16
cmpsl
mov
stos
insl
test
push
and
cmp
ds
gs
call
mov
mov
or
nop
clc
dec
pop
adc
jnp
lea
ss
arpl
push
xchg
ja
fs
lretw
filds
orl
mov
ret
pop
repnz
add
mov
xchg
fbstp
jnp
mov
inc
sub
cmp
cmp
or
sbbl
stos
adc
clc
insb
loopne
insl
xchg
int3
dec
mov
xor
sub
xchg
push
jmp
idivb
cli
clc
sbb
cmpsl
in
xor
loope
loop
mov
addr16
out
insl
cmp
mov
mov
pop
add
cmp
out
test
jb
stos
clc
xor
push
fimuls
cs
adcl
cmpsb
or
xor
js
data16
insb
xchg
dec
dec
cmp
jbe
cmpsb
xchg
jae
fldcw
cmp
xor
xlat
stc
jnp
das
outsb
or
fmull
pushf
shll
ret
imul
xchg
lret
movsb
xor
nop
jne
add
jle
sbb
mov
push
adc
andb
inc
lds
test
sti
mov
fstpt
pop
lcall
pushf
jnp
push
or
pop
push
or
lods
in
lcall
fsubs
cmp
or
outsb
cmp
pop
aaa
fadd
xchg
aad
pop
outsb
mov
pop
push
dec
fst
movsl
push
push
arpl
xchg
bound
cmp
ret
jo
and
mov
insl
js
test
adc
mov
dec
nop
rcrl
pop
shrl
xchg
add
and
adc
scas
fnsave
jno
mov
or
fldt
es
es
mov
inc
out
notl
leave
jae
mov
cmp
xchg
fabs
jns
xchg
inc
dec
fwait
mov
mov
xor
aas
out
inc
jmp
mov
mov
and
mov
mov
call
push
loopne
jbe
pop
or
push
insl
int3
or
mov
fwait
ljmp
cwtl
in
in
sbbb
lea
leave
and
fimull
sub
push
imul
outsb
pop
cmp
aaa
ja
aas
adc
dec
pushf
es
inc
pop
push
lcall
pop
lea
mul
adc
inc
cmpsb
adc
cmpsl
cmp
addr16
cmp
push
repz
add
xor
test
mov
add
dec
and
adc
jge
pop
daa
dec
mov
insl
lods
mov
js
shrb
add
add
and
fnstsw
test
dec
cld
pusha
jbe
push
bound
inc
add
cs
xor
lret
and
divb
scas
dec
int
sahf
fs
push
lods
dec
les
xchg
jns
or
cmp
das
out
and
adc
nop
mov
jle
mov
push
inc
lahf
das
subb
loop
xchg
adc
xor
lret
add
js
loope
inc
push
leave
cltd
scas
cli
in
push
dec
jbe
repnz
or
push
dec
mov
fsubrl
test
inc
leave
sbb
push
pop
push
adc
mov
pop
cmp
data16
add
sti
sbb
pop
icebp
xor
rcrl
pop
mov
cmpsl
xchg
sbb
inc
adc
insl
adc
lahf
mov
push
xor
xor
pushf
test
or
daa
jmp
stc
scas
popf
sbb
fld1
loopne
pop
xor
pushf
jae
pushf
and
xchg
jb
push
jmp
pushf
or
push
ss
sbb
push
rcr
jecxz
push
xor
add
lea
mov
ljmp
and
bswap
and
sub
or
mov
pushf
movsl
scas
cs
fcoms
mov
xchg
scas
int
addb
int
rcr
out
and
inc
xor
in
sbb
add
fisubrl
sub
dec
jno
fistps
dec
xchg
outsb
gs
inc
scas
pop
sbb
daa
push
out
stos
mov
nop
into
arpl
pop
imul
dec
cs
inc
xchg
fsts
xchg
scas
add
sbb
or
clts
in
fwait
pop
push
jmp
jecxz
mov
xchg
adc
adc
out
add
jge,pt
jmp
in
fldenv
pop
je
cli
mov
fidivrl
jns
into
lods
push
daa
xor
xchg
mov
mov
test
out
mov
je
aad
xchg
mov
movsb
add
insl
jae
cmpsl
cmp
jbe
sub
pop
test
push
cltd
xchg
in
mov
push
jmp
and
clc
stos
sbb
movsl
mov
faddl
mov
mov
test
mov
hlt
mov
inc
push
jecxz
and
das
xor
jle
push
pusha
les
xchg
int
lds
sub
add
cmpsb
dec
adc
scas
popa
mov
cmp
inc
loopne
and
dec
ret
xchg
mov
inc
mov
sbbb
push
stos
int
insl
leave
aam
cmp
cli
ficomps
push
pop
imul
jmp
cltd
shll
insl
lods
ficoml
mov
xchg
pop
in
popa
or
mov
cwtl
add
ja
dec
movb
in
test
mov
fsubrs
inc
std
pop
sahf
bound
sub
ja
xlat
mov
movb
pop
clc
jae
mov
test
jbe
jae
out
xlat
orb
mov
mov
cmp
jno
sub
je
rclb
imul
push
aam
ja
or
jecxz
out
pusha
nop
lret
inc
dec
sub
dec
mov
inc
movsl
scas
pop
ret
cmp
and
cmp
push
adc
inc
lcall
loop
and
or
iret
data16
fwait
movsb
jno
fprem1
lds
data16
inc
mov
xorb
out
lcall
dec
scas
pop
dec
mov
lock
cmp
lock
inc
outsb
rcrl
loope
push
mov
push
inc
xor
and
outsl
daa
mov
sbbl
mov
dec
shrl
cmpsl
and
and
gs
jge
cmp
ja
andb
push
das
push
xchg
dec
mov
repz
cmp
mov
addr16
inc
scas
jg
jge
push
test
inc
popa
and
xchg
pop
cmpl
push
mov
inc
aad
fstps
mull
pop
add
outsb
mov
cli
xchg
loope
dec
mov
add
sub
and
aam
mov
lret
pop
pop
jbe
notl
mov
jp
cmp
hlt
aam
cmp
test
cmp
push
cltd
or
inc
adcl
adc
xchg
fldl
and
lret
cmpb
pop
xor
fisubl
cmpsb
jl
orl
scas
out
iret
mov
pop
gs
icebp
xor
ljmp
add
outsl
push
out
imul
cld
or
addr16
pop
sti
stos
rcr
or
push
loop
xchg
and
fstl
sbb
dec
push
aas
jno
mov
add
neg
shr
xchg
rcl
add
add
adc
aam
sahf
movsb
fsubrp
bound
fadds
and
cwtl
mov
xlat
test
dec
and
adc
sbbb
or
mov
mov
dec
data16
push
leave
mov
cld
xchg
movl
push
popf
and
rcl
cwtl
pop
cmc
add
jecxz
stc
repnz
add
fdivs
aas
xor
aas
bound
push
jmp
xchg
es
pmuludq
fcomps
jno
into
or
sbb
std
fldt
dec
cmp
in
arpl
in
push
sub
scas
out
and
xchg
fldl
nop
jmp
dec
inc
cmp
test
jne
test
mov
pop
shll
out
fldl
divb
out
mov
jns
mov
aam
outsb
cs
subb
dec
test
mov
hlt
into
dec
jne
cli
in
inc
in
frstor
mov
movsb
mov
mov
frstor
int
sub
cwtl
nop
push
ds
pop
xor
inc
adc
push
jne
jo
mov
sub
mov
clc
push
pusha
ret
pusha
sbb
jle
add
stc
jle
inc
rcrl
mov
dec
sbb
xor
xor
imul
adc
pop
mov
mov
aaa
popf
inc
cmpsl
out
xorl
push
and
and
mov
jno
dec
mov
sub
cmp
push
add
fistps
testb
fnstenv
push
sub
out
gs
or
dec
arpl
pop
mov
incb
pop
xor
jns
mov
jnp,pt
mov
cwtl
xchg
jecxz
mov
movsb
hlt
sbb
jp
xchg
cli
outsb
js
adc
push
scas
scas
add
lret
cmp
hlt
pop
inc
inc
test
and
push
in
loop
add
aam
ret
push
and
nop
aam
out
sub
fimuls
int3
jmp
mov
stc
mull
jb
or
inc
mov
in
pop
dec
daa
xor
ljmp
ljmp
and
rclb
cs
test
xor
inc
inc
cmp
pop
pusha
xlat
jae
xlat
mov
and
dec
lods
movsb
xchg
jo
push
mov
and
ds
lahf
jb
pop
enter
clc
popl
fiaddl
push
inc
jg
pop
adc
mov
imul
mov
imul
xchg
jb
add
cmpsb
mov
pop
in
adc
add
and
hlt
clc
imul
inc
test
sbb
iret
in
mov
and
and
mov
loop
xchg
jge
xchg
dec
inc
pop
stos
xor
ja
push
jg
push
lcall
aaa
pop
loopne
enter
dec
stos
add
dec
push
dec
stos
push
std
mov
roll
lods
sub
stos
lret
or
push
jge
cltd
add
pop
insb
push
orl
xlat
std
hlt
pop
notl
bnd
mov
dec
cmp
shll
push
sub
pushf
xchg
pusha
enter
and
mov
lret
fiadds
dec
pusha
pop
add
mov
mov
dec
sti
xchg
push
leave
sbb
aaa
cmp
shr
stos
push
cwtl
push
or
xor
gs
data16
sbb
adcb
ds
rcrl
movsb
les
loopne
xor
jae
jns
insl
jge
aam
add
cmpsl
push
enter
mov
cmp
pop
std
imul
sahf
dec
call
xchg
push
ss
jecxz
dec
fists
pop
mov
sbb
and
push
xchg
mov
loopne
mov
and
xor
mov
fbstp
pop
lds
adc
jns
sub
and
dec
sbb
insb
ds
arpl
pushf
test
add
leave
pop
adc
icebp
lock
adc
inc
in
mov
out
dec
lock
rorl
push
movsb
lret
push
fs
mov
add
fsubrl
cmp
hlt
inc
fiaddl
ret
test
fcomip
or
or
mov
test
add
icebp
pop
pop
sub
fiadds
js
test
xor
and
lret
sub
ja
mov
rolb
xadd
push
in
sub
aam
out
lret
int
mov
ret
insl
pop
mov
pop
testl
sub
in
add
or
xchg
ftst
dec
aam
dec
fdiv
jnp
mov
cmp
cmp
outsl
adc
jo
inc
and
xor
or
dec
rcrl
fisubs
or
pop
cs
les
lods
jo
add
lcall
dec
fisubs
les
imull
pusha
pop
repz
clc
roll
sub
xor
outsl
lret
dec
shr
cmp
icebp
pop
inc
cmp
repnz
adc
lods
mov
pusha
hlt
fucom
fwait
sub
pop
fisubs
das
dec
xchg
cs
into
fdivrs
fs
lret
loope
lds
test
sub
mov
cmp
lea
mov
insl
ret
sbb
stos
cmp
jne
jmp
xor
mov
cmpsl
incl
xchg
into
fwait
cld
xchg
lahf
int
pusha
int3
jecxz
xor
nop
scas
repz
adc
movsl
fmul
lret
js
or
inc
popa
pop
push
insb
popa
sbb
sbb
dec
push
mov
fdivr
push
data16
clc
out
dec
cmp
daa
pop
aas
out
fcmovu
mov
add
cmpb
out
popf
jbe
adcl
cmp
cwtl
clc
enter
sub
test
jp
les
mov
cmpsb
data16
addr16
in
lods
push
decb
mov
dec
int
fldcw
lret
popf
popf
xchg
add
jno
adc
cmp
mov
sahf
pop
out
add
mov
mov
lea
jno
ret
and
pop
mov
mov
push
dec
adc
add
jge
or
pop
dec
lea
scas
adc
sbb
mov
sub
pop
push
sarb
inc
insl
sub
imul
popf
pushf
jnp
pop
jnp
push
jns
mov
pushf
sbb
inc
lods
jge
mov
sub
fnstsw
ret
lret
mov
adc
lret
arpl
xor
nop
push
jle
lahf
adcb
sbbl
popa
stos
inc
dec
push
ja
cmc
je
out
pop
and
or
mov
lods
aaa
jbe
movsl
mov
repnz
int
and
or
or
jno
hlt
mov
jae
outsl
mov
dec
fwait
je
dec
fsubrp
dec
jecxz
sub
shll
mov
je
subl
sub
test
aad
testl
fdivr
add
jmp
mov
es
xchg
push
nop
jno
lds
mov
aas
sarb
daa
sub
jecxz
jbe
adc
jno
into
dec
pop
es
aas
or
and
jecxz
out
inc
add
lods
movsb
popf
add
cld
sti
mov
stos
mov
xchg
jae
lods
mov
rol
aam
jb
pop
and
test
xchg
sbbl
jle,pt
shrl
add
cmp
pop
and
or
xlat
in
mov
push
lret
jns
nop
add
push
sub
jge
xchg
ficoms
xor
add
test
jp
sbb
leave
mov
pop
jecxz
dec
popa
enter
loope
pop
in
pop
leave
fs
cmp
mov
pop
pushf
jne
push
inc
xchg
push
enter
out
enter
repnz
mov
sbb
lods
mov
clc
lods
xchg
jg
jae
dec
push
fdivrs
out
cs
and
xchg
mov
mov
push
lret
and
fisttpll
mov
sbb
cmpsb
pop
lods
sub
je
mov
sbb
sub
in
out
and
movsl
mov
xor
dec
test
imul
inc
or
jecxz
cmp
ret
mov
out
in
std
sbb
add
pop
jne
add
dec
mov
add
in
shll
repnz
cld
sub
or
adc
xor
mov
adc
lods
imul
cmpsb
or
pop
and
hlt
mov
sub
xchg
xor
inc
push
outsl
sub
xor
popf
jecxz
jno
jp
push
and
jle
push
add
sbb
in
and
imul
xor
test
sti
xchg
pop
incb
movsl
sub
mov
push
iret
dec
add
xor
fsubs
push
sub
xchg
pop
push
fsubrs
daa
and
push
js
loop
cmp
les
fadds
sar
jno
aam
push
in
testb
bound
daa
and
inc
ficoms
cs
xor
pop
test
sahf
sbb
ja
cli
rcrb
outsb
add
push
inc
push
pop
iret
or
inc
out
imul
mov
or
mov
jl
ljmp
cs
mov
aas
jecxz
gs
and
std
sbb
gs
jmp
scas
pop
arpl
and
movsb
cmp
outsb
leave
stos
sub
sarl
lret
mov
cwtl
sbb
adc
in
pop
stos
xchg
leave
sbb
outsl
pop
nop
and
cwtl
dec
sbb
adc
inc
lret
push
ret
lahf
and
xor
dec
push
lcall
xchg
cmp
mov
lcall
or
das
addr16
imul
aas
sbb
mov
sbbb
cs
in
pop
sbb
mov
pop
mov
pop
fildll
hlt
jo
insl
vmovd
sub
stc
mov
stos
adc
cmp
mov
pushf
dec
lds
sub
fsub
cmp
in
lock
cmp
mull
fadds
inc
or
adc
lds
in
adc
cmpsb
jl
mov
les
sub
sarb
push
add
xchg
jmp
sbbb
adc
ror
adc
xor
add
mov
outsb
sub
push
mov
dec
push
inc
scas
ljmp
out
mov
xor
adc
scas
adc
dec
cmc
cltd
inc
pushf
popa
mov
shl
hlt
cld
push
sbb
jb
push
stos
out
aam
stc
cmc
cmp
mov
aam
test
cmpsl
fnsave
push
add
cwtl
mov
pusha
xchg
repnz
sub
push
insl
sbb
fs
inc
lahf
movsl
adc
sub
mov
dec
mov
in
xchg
lods
pop
cmp
mov
cmpsb
stc
fcmovne
out
pop
add
inc
icebp
iret
push
push
mov
stos
out
jnp
push
popa
aad
mov
mov
xor
lock
jl
xor
into
fists
stc
mov
in
sbb
mov
ret
pop
adc
call
sub
and
jl
push
cmp
mov
shll
dec
mov
lret
cmc
sub
ja
mov
mov
sub
daa
ljmp
sub
in
sub
test
shrb
dec
dec
dec
pop
aas
fsubl
andl
jl
testl
sbb
std
rolb
rcr
icebp
lret
mov
mov
test
inc
pop
xchg
mov
test
jo
mov
add
adc
arpl
or
and
fiadds
adc
push
mov
pop
or
cmp
add
fsubl
cmp
test
scas
cmp
jnp
or
aad
cmp
pop
or
push
jne
inc
mov
add
adc
xchg
pop
test
add
cli
push
mov
std
fnstsw
xchg
inc
in
cmpsl
xchg
aaa
adc
add
call
fwait
pop
popf
lods
hlt
iret
in
inc
and
sbb
and
sti
add
adc
leave
outsb
enter
inc
xlat
lret
xchg
dec
ja
inc
xor
fstpl
add
lret
mov
sub
mov
adc
loop
icebp
pop
inc
xlat
or
and
sub
std
loop
insl
jge
and
sbb
jmp
jp
movsb
mov
dec
pop
loope
and
out
bound
sbb
into
push
adc
push
jae
lahf
repnz
sub
or
xlat
shll
in
and
in
xchg
and
add
je
stos
into
add
adc
adc
jne
cmp
pop
and
ja
pop
loopne
add
fwait
jl
inc
mov
and
cmc
cmp
lds
or
xchg
mov
xchg
repnz
xchg
cmp
xor
out
mov
adc
lret
lds
mov
aad
lcall
or
movsb
cltd
mov
fs
dec
lret
sub
pop
ret
cld
jg
jp
mov
ja
xor
pushf
icebp
inc
ljmp
lds
or
popa
add
je
divl
icebp
pop
xor
sbb
mov
loopne
jle
out
jmp
fs
out
int3
fwait
inc
pop
cmp
sub
iret
add
out
in
add
jbe
shrl
test
movsb
add
push
pop
jge
mov
xor
testl
adc
imul
shll
lret
or
jmp
ficompl
out
mov
cs
shrb
xchg
ljmp
dec
stos
mov
aaa
mov
mov
arpl
inc
jg
mov
jle
mov
mov
shl
cmp
cmp
jnp
es
mov
ret
dec
lock
out
add
loope
sarl
xlat
test
dec
inc
in
and
mov
cmpsl
call
addr16
jecxz
movsl
popa
out
inc
inc
mov
fsubrs
icebp
jns
jno
jg
adc
push
fidivrl
mov
push
jnp
cmp
cltd
mov
mov
inc
outsl
add
xchg
jb
cmpsb
sub
and
xchg
sbb
fs
fs
pop
and
dec
dec
dec
cmp
scas
out
fldlg2
es
mov
cmp
sbb
aad
nop
jl
add
mov
cwtl
push
xchg
xchg
sbb
inc
jge
add
pop
imul
rcrb
inc
jmp
stc
addr16
ja
pop
push
push
push
lahf
sub
pop
jecxz
inc
push
mov
jb
mov
xor
xchg
loop
out
mov
stos
jl
outsl
add
in
or
inc
jo
in
sub
inc
cld
xchg
mov
inc
mov
xchg
js
lds
pop
pop
cwtl
sub
pop
sub
shlb
xchg
jno
lods
sti
and
mov
icebp
jge
sub
pop
ret
lea
packsswb
mov
sub
cmp
int3
sub
sbbl
push
xchg
lahf
inc
xor
mov
and
movnti
cmp
outsb
jge
dec
xchg
aaa
je
inc
rorb
lret
add
push
adc
into
scas
sub
cmc
arpl
adc
ret
jle
cs
icebp
clc
xchg
jg
sub
les
std
lods
fnstsw
cmp
add
cli
pop
insl
into
pop
out
movsb
test
loop
shl
into
sub
dec
add
ss
test
sar
leave
in
outsl
jae
aaa
or
pop
nop
insl
xchg
or
mov
mov
push
incl
pop
mov
sub
push
sbb
pusha
lea
daa
lds
jbe
xor
mov
movsb
cmp
push
inc
add
enter
popf
pop
dec
cmp
orb
mov
dec
cltd
mov
and
and
aad
ljmp
pop
or
shll
push
adc
cmp
and
lods
stos
mov
cmp
dec
mov
aam
inc
pop
push
cmp
push
dec
inc
ja
pop
xchg
push
imul
add
movsb
lods
sub
ret
int3
inc
fnstsw
ljmp
pop
cwtl
rol
pop
gs
icebp
xor
insb
imul
shlb
jb
nop
or
mov
sbb
icebp
sahf
push
mov
cli
jno
mov
inc
jle
insb
mov
inc
add
in
shrb
in
sub
push
aaa
fistpll
shll
sahf
mov
mov
xchg
mov
sbb
ds
mov
inc
in
xor
shll
mov
jb
mov
pop
xchg
popa
cld
mov
imul
std
cmp
mov
mov
pop
adc
popf
ret
call
jecxz
adc
pop
es
subb
mov
inc
sub
cmp
lds
ljmp
fstps
dec
inc
mov
dec
insb
push
mov
xchg
and
cmpsb
or
xchg
les
mov
mov
dec
pushf
inc
mov
xor
lock
xchg
xor
pop
icebp
jmp
nop
mov
out
mov
sub
push
dec
and
out
in
push
adc
pop
negl
lock
mov
and
fisubrl
addr16
cmp
pop
ret
cmp
add
or
mov
dec
inc
mov
adc
dec
lahf
dec
imul
int3
addr16
ret
sbb
and
lahf
stos
jp
or
ja
inc
mov
xchg
lds
and
repnz
std
add
cs
jl
setns
sbb
scas
jnp
jle
fldenv
out
test
xchg
sbb
ljmp
test
cmp
cmpsl
sbb
mov
arpl
je
pop
adc
in
cmp
lods
and
scas
mov
mov
arpl
ss
cld
push
sub
into
jge
push
xchg
mov
ljmp
pop
add
dec
jge
or
inc
push
loopne
sub
mov
push
fnstenv
int
push
xchg
fsubrs
je
adc
rorl
mov
xor
lahf
imull
jnp
adc
rclb
ljmp
test
cltd
inc
adc
inc
lret
shrl
dec
inc
adc
aad
add
cmp
cld
ljmp
nop
fisttpll
bound
iret
movb
cltd
movb
pop
mov
iret
ss
call
lcall
jmp
mov
dec
sub
mov
pop
cli
cmp
adc
bound
jne
jl
jl
pop
insl
xor
outsl
fistpll
lea
rorl
jno
in
lds
pop
jno
out
sub
and
mov
inc
out
aad
int
add
out
lcall
pusha
and
mov
xor
leave
lret
pop
xor
je
push
adc
arpl
popa
jle
andb
mov
stc
data16
dec
mov
push
or
add
cmp
xchg
addr16
sahf
push
xor
push
inc
repz
xor
sar
fs
fildl
or
or
fistl
mov
leave
in
fimull
jns
cmp
dec
jl
in
arpl
mov
stos
xor
xchg
fs
xor
jne
sahf
sub
outsl
shrb
cmp
mov
orb
add
lods
popa
pushf
lcall
ret
sub
bound
cmp
mov
mov
dec
aaa
sub
arpl
loope
mov
fisttpl
jbe
test
xor
into
dec
sub
inc
cwtl
les
and
inc
mov
std
dec
mov
ror
jb
mov
js
sbb
adc
dec
mov
inc
repnz
push
aad
dec
leave
addr16
or
and
in
dec
xlat
sbb
jmp
mov
sbb
lret
dec
push
std
lret
lods
or
mov
adcb
xor
mov
in
jb
lahf
inc
and
cmpsl
js
stos
stc
jg
sbb
jle
or
mov
adcl
je
lds
test
jle
or
ret
aad
lahf
xchg
daa
fadds
xor
std
jnp
int3
jnp
in
in
adc
pushw
or
dec
inc
pop
pop
cmpsl
xor
fcompl
pop
gs
ret
sti
mov
shrb
or
imul
and
xchg
enter
sbb
jle
cmp
fs
sahf
shll
shrl
and
das
and
mov
subl
adc
xchg
or
jmp
dec
mov
mov
cwtl
mov
mov
lea
je
and
pushf
stos
test
and
sub
mov
pushl
cli
aam
push
jno
inc
mov
mov
jl
fs
ja
fistpll
ret
popf
repz
mov
xor
jno
add
dec
mov
lret
jle
jge
xchg
lds
and
icebp
sti
fsub
xor
leave
sub
mov
push
addr16
mov
lea
imul
lods
ss
enter
jo
fs
pop
out
in
cmp
mov
int3
sub
negw
sub
rcrl
mov
fistps
jns
sub
aad
icebp
adc
das
and
dec
ljmp
pop
sub
xchg
jge
outsb
jmp
push
hlt
popa
sbb
fisttpl
sub
fsts
mov
std
dec
xor
or
hlt
push
addr16
dec
leave
movsb
mov
and
xor
sbb
pushf
or
xchg
sub
pushf
lods
mov
fisubrs
fcmovu
mov
cltd
add
ja
adc
mov
push
outsl
gs
out
dec
inc
lods
add
pop
sti
pop
inc
mov
imul
inc
pop
in
xchg
xor
sub
push
push
lcall
fdiv
inc
pop
mov
data16
mov
or
or
mov
dec
aaa
vhaddps
inc
inc
incl
dec
push
test
stos
xlat
sub
mov
fucomi
mov
ret
sbb
mov
test
cmpsl
mov
mov
mov
in
repnz
jbe
outsl
test
xchg
mov
pop
mov
imul
cmpsl
xchg
lret
mov
xchg
outsl
cltd
insl
adc
lods
cmp
xchg
adc
rcrl
add
sub
jns
push
sub
mov
lock
jbe
xor
lea
aad
adc
pcmpeqw
sub
mov
cmp
inc
inc
adc
lret
sub
pop
lock
stc
add
imul
filds
xchg
pop
jbe
mov
lcall
xlat
cmc
loope
jne
mov
sbb
xlat
or
pop
lret
bound
cli
in
aaa
out
and
fcoml
cltd
and
xor
xor
fwait
xchg
sti
xchg
imul
clc
add
xor
mov
aad
mov
fistps
adc
mov
add
in
xchg
push
and
daa
mov
xchg
mov
outsl
add
push
or
adc
jo
inc
adc
mov
pushf
imul
sti
inc
imul
mov
cmp
add
enter
pop
addr16
jnp
fs
xchg
sarl
sti
cmp
push
dec
bound
jb,pn
mov
hlt
adc
sbb
pushf
push
rorl
jl
fs
cmp
push
in
ss
xor
ret
xchg
fsubrs
in
dec
xchg
mov
mov
mov
push
mov
xor
mull
mov
loope
sbb
outsb
push
push
loop
push
jg
jp
rcrl
pop
in
rolb
and
dec
xchg
jae
aas
mov
fcomps
movsb
sbbl
movsl
inc
movsb
ficoml
movsb
iret
iret
dec
inc
push
or
sub
jmp
int
das
dec
mov
jnp
pop
or
jae
out
arpl
call
mov
cmp
mov
flds
jmp
pop
pop
xchg
sbb
push
adcl
cmp
jo
adc
sub
pop
in
mov
mov
push
push
lahf
mov
adc
pop
clc
out
xchg
xlat
dec
adc
cmp
fstl
shl
fmuls
mov
jle
cwtl
lahf
sti
mov
cmp
popa
adc
cli
mov
bound
or
push
push
or
push
call
push
sti
xchg
fists
pop
idivl
push
lret
adc
sbb
xchg
rorb
fcmovu
cs
addr16
pop
xor
pop
dec
adc
fmull
ror
ss
sbb
out
mov
ds
cltd
or
pop
dec
lods
jl
std
jle
sub
sti
fs
jo
pop
mov
inc
or
jbe
push
dec
out
xchg
mov
je
ficoml
daa
xchg
icebp
insb
xchg
push
loope
inc
int3
push
outsl
dec
vmwrite
cmp
sub
int3
sbb
xorl
movsl
and
loopne
js
lret
adc
in
push
cld
and
ret
lahf
test
les
outsb
dec
aas
xchg
push
jbe
cli
and
mov
in
cmp
mov
jle
arpl
cs
pop
in
sbb
ss
into
gs
or
cmp
xchg
push
mov
leave
dec
decl
sub
pop
add
mov
or
stos
lcall
add
movb
test
shlb
in
orb
daa
pop
lods
mov
mov
ljmp
stc
cmp
sti
into
mov
adc
insl
mov
shll
repz
ja
mov
sub
mov
repz
xchg
fsubrl
lods
and
cmp
fisttpl
push
mov
jl
dec
cmp
enter
call
xchg
repz
pop
fisubl
sub
lods
loopne
mov
mov
jp,pt
icebp
popf
cmpsl
ret
sub
xor
outsb
pop
fisubl
aam
inc
mov
xchg
mov
hlt
cmp
mov
and
or
xchg
push
dec
mov
push
sub
aaa
jo
mov
jg
pushf
into
and
in
dec
or
aad
aas
xchg
idivb
fmuls
arpl
daa
or
mov
fnsave
add
aaa
xchg
xchg
mov
xor
daa
xor
jne
xchg
inc
outsb
aaa
xor
mov
aas
or
jmp
lea
mov
xor
mov
dec
jae
or
lret
repz
xchg
mov
ss
dec
xor
arpl
and
sbbl
mov
jmp
sub
xlat
pop
push
dec
pop
and
outsb
int
adc
arpl
orb
or
iret
fsubl
jns
push
xor
stos
or
mov
sub
sub
out
lret
mov
cmc
dec
jp
or
jb
fwait
mov
shrl
out
jbe
stos
ret
jecxz
inc
imul
fildl
mov
or
pop
test
mov
and
push
and
and
daa
dec
aam
mov
fmuls
scas
and
aad
fdivrl
jmp
mov
je
lret
aaa
ret
lock
jmp
sbb
cmp
add
jge
sub
xchg
test
orb
shrb
cmp
fdivrs
loop
sti
out
fdivs
xor
and
hlt
ret
pop
cs
out
inc
xchg
lea
mov
data16
mov
fadd
aad
clc
gs
pop
cmp
adc
cltd
xchg
push
add
aas
sahf
mov
sub
das
popf
repnz
mov
and
push
lcall
aam
clc
lock
pushf
cmp
push
stc
push
sub
push
push
dec
shl
in
inc
iret
pop
test
lcall
lds
ljmp
cmp
loop
dec
xchg
aaa
mov
loope
mov
jo
cmp
ljmp
cmpb
or
push
adc
cmp
cmp
pop
insb
inc
and
jecxz
out
push
es
aam
arpl
push
xchg
cmp
aaa
insb
mov
orb
js
std
das
out
int3
test
pop
and
cwtl
enter
and
sahf
out
mov
rorb
pop
outsb
mov
adc
push
mov
mov
ret
push
adc
ss
nop
jnp
stos
fsts
adc
add
jo
in
out
sub
clc
add
adc
xchg
ja
out
xchg
sub
aad
push
loopne
inc
jae
fisubrl
xor
pop
dec
inc
sub
sbbl
or
ljmp
ljmp
insl
push
adc
mov
jge
nop
and
xchg
cmp
pop
test
aaa
cmp
fisubrl
popf
xchg
ds
orl
cmpsb
push
inc
lahf
xchg
icebp
enter
pop
insb
shll
dec
das
jp
mov
icebp
lret
rcrl
in
cmp
nop
pop
push
and
jmp
adc
rcrl
insb
mov
sub
jno
mov
movsl
mov
inc
and
push
dec
loop
hlt
inc
mov
xor
cmpsb
inc
inc
es
aaa
lahf
jae
xlat
xchg
push
jnp
xchg
ret
cmp
sbb
inc
ficoms
out
int3
push
and
nop
dec
xorb
fs
pop
xchg
pop
ret
loopne
sbb
cs
movsl
adc
and
adcb
dec
mov
and
out
inc
sbb
loope
add
sti
inc
dec
cmp
es
mov
in
inc
popa
ljmp
fidivs
mov
inc
leave
add
adc
sub
bound
daa
mov
je
ret
cltd
ds
sbb
dec
movsl
iret
les
add
mov
xor
sti
loop
in
push
sbb
movsb
rep
fsubp
and
xchg
jmp
aas
push
gs
fmuls
inc
jo
lcall
je
in
lods
xchg
in
mov
imul
stc
fisubrl
jp
pop
push
adc
test
ja
repz
mov
jno
ret
xchg
mov
shll
mov
stos
jnp
and
shlb
mov
shlb
fwait
mov
std
loop
ret
inc
aaa
jb
mov
sbb
in
in
and
dec
mov
xor
icebp
int3
lahf
cmp
adc
andb
into
dec
cmp
sar
data16
mov
sahf
mov
movsb
xchg
sbb
mov
dec
add
clc
mov
in
repnz
mov
add
jmp
stos
add
ret
xor
cmp
or
or
cltd
pop
pop
dec
roll
stos
xchg
scas
lods
cltd
mov
xor
jnp
cltd
xchg
inc
filds
xchg
cmp
loopne
mov
aam
shlb
ds
pop
or
or
fnstcw
movsl
js,pn
jg
es
jle
lds
mov
cmp
pop
jl
icebp
cmp
movsl
xor
mov
adc
sarb
and
or
js
cmp
fcoms
fs
inc
out
inc
insb
push
clc
cli
dec
stc
call
data16
imul
xor
mov
ret
aad
and
inc
pop
mov
add
inc
pop
sub
mov
sub
dec
aam
push
mov
push
push
jno
test
pop
pop
push
fimuls
cmc
aad
mov
pop
test
push
mov
shl
inc
fwait
cs
test
push
xchg
pop
mov
add
xor
test
push
test
xchg
lds
adc
out
inc
loop
and
leave
imul
inc
fs
cltd
lods
call
push
mov
cld
mov
lock
mov
lret
mov
test
xchg
out
cmp
sti
adc
jnp
ja
outsl
test
rclb
mov
scas
mov
mov
iret
fmull
xor
fiaddl
sbb
adc
ret
xor
in
outsl
mov
pop
jp
ja
ljmp
jns
sbb
sub
cltd
pop
cmp
cmp
adc
testb
inc
mov
adc
inc
xor
push
ljmp
and
ret
mov
out
in
loopne
cmp
sti
mov
ja
xchg
or
push
add
scas
popf
in
notb
scas
call
test
scas
leave
push
cmp
push
mov
leave
sbb
push
sbbb
push
inc
sbb
scas
loopne
data16
xchg
cmp
jl
add
dec
ret
stc
iret
cmp
pop
mov
cs
jle
jl
loope
xchg
fnstcw
neg
sub
ffree
pop
pop
das
xlat
negl
test
sahf
sub
jge
push
icebp
ss
cmpsb
push
shlb
pop
popf
loope
inc
add
pushf
sarb
int3
ficoms
cmp
sub
std
ret
jmp
mov
mov
outsl
test
aaa
xor
fwait
bound
adc
ja
repz
test
inc
xor
dec
ljmp
lea
fscale
and
mov
mov
aad
mov
push
adcb
sub
cltd
push
ss
call
fcompl
pop
mov
mov
ja
push
push
scas
sti
add
loopne
iret
ljmp
popfw
mov
in
cmpl
jno
pushf
filds
cmp
out
mov
shll
push
push
push
addr16
cmp
mov
dec
or
ljmp
stc
cltd
jns
cld
rcll
adc
sbb
scas
arpl
sbb
icebp
ret
jo
ret
popa
out
scas
push
test
xchg
data16
fdivp
test
sub
lahf
das
pop
ja
add
stos
jo
ficoms
mov
loopne
jmp
scas
movsb
sub
stos
pop
inc
leave
outsb
fldenv
push
pop
xchg
mov
loope
jnp
mov
out
repz
xchg
lret
daa
push
popa
push
add
push
aaa
pop
mov
cmp
fcoms
jmp
jge
dec
add
aas
sbb
cmp
adc
pop
xchg
dec
in
inc
add
in
mov
inc
inc
mov
adc
fwait
push
or
fidivrs
inc
dec
out
xchg
inc
cld
sbb
movb
sub
sub
mov
inc
push
cltd
pop
or
pop
ja
aad
adc
pop
xor
insb
cwtl
subb
in
mov
test
xchg
rcrb
sbb
jl
hlt
push
and
pop
inc
test
rorb
jb
sbb
xor
dec
dec
lgs
rcll
int
sub
pop
int
xchg
xchg
leave
insb
pushf
test
mov
andb
rcll
jb
push
inc
mov
mov
xchg
pop
dec
mov
imull
fsubrl
mov
and
fldl
and
and
dec
daa
fs
fwait
jb
fs
mov
stos
xchg
push
xchg
leave
xorb
jo
sbb
push
and
dec
in
pop
out
push
xchg
or
roll
call
inc
nop
add
and
pushf
out
lret
shrb
adc
lret
mov
stos
dec
xor
push
add
and
cs
push
mov
mov
stos
adc
xchg
mov
push
mov
ret
movsl
add
adc
cmpsl
sub
int
mov
int3
sbb
bswap
mov
inc
add
mov
xchg
imul
pusha
test
fsubl
ficompl
fs
arpl
mov
icebp
fistpll
mov
cmp
iret
lret
fcmovnbe
jb
xchg
ja
in
push
enter
push
mov
fldenv
or
movsb
sub
pop
les
mov
in
roll
mov
into
mov
sbbl
es
orl
shr
or
cmp
push
mov
aam
jl
xorl
rcll
ljmp
add
jno
sti
add
cmp
xor
xor
push
inc
jg
cmc
and
jns
adc
lcall
fwait
dec
mov
int
mov
inc
xor
fistps
or
mov
push
cmp
sbb
lods
and
jecxz
repz
mov
add
cmp
jnp
lods
jne
jns
and
jbe
add
sahf
test
lahf
fcmovnbe
mov
fwait
lds
testl
adc
mov
ss
sub
imull
sahf
jns
cmpsl
mov
or
xchg
pop
stc
sbb
popf
mov
pop
cmp
xadd
shlb
shlb
in
sub
and
cmp
test
repz
jp
das
pop
push
mov
add
dec
mov
jg
hlt
iret
cmpsb
cli
xor
out
jno
xchg
jne
push
push
es
out
mov
xor
sub
sbb
jp
adc
sbb
into
lods
sbb
js
outsb
inc
xor
cmpsb
mov
and
xchg
repnz
aad
mov
fcoms
in
lds
sub
lret
out
mov
sub
call
jbe
mov
inc
insl
insb
fisttpll
push
and
mov
cwtl
cld
push
sub
mov
mov
or
push
outsl
addr16
fmul
test
mov
jg
loope
loop
mov
aad
mov
cmp
mov
xor
mov
lods
xchg
inc
lahf
leave
lret
jae
pop
sub
ret
pop
addl
call
mov
push
inc
push
cmpl
mov
add
jg
jb
test
jg
cmp
test
in
jae
sub
pop
iret
and
sahf
pop
cmp
jmp
cs
xchg
and
pop
mov
xchg
into
movsl
pushf
xchg
aam
mov
lods
or
outsb
dec
add
enter
popf
cmp
mov
push
ret
xor
pop
cli
xchg
stos
frstor
sti
and
dec
sub
inc
xchg
movsb
mov
push
lds
rorb
add
mov
and
mov
fcoms
xor
jmp
mov
mov
mov
adc
xor
in
cmp
sbb
cmpsl
in
mov
push
pushf
add
imul
ja
add
sbb
nop
pop
jnp
daa
je
add
popf
mov
mov
int
scas
test
nop
rolb
adc
mov
push
scas
sbbb
inc
mov
int3
out
mov
xchg
xor
xorl
mov
pusha
inc
testl
in
mov
iret
cmp
adc
xor
or
mov
dec
mov
ds
mov
scas
int
jae
sub
push
push
cmpsl
push
xchg
cs
fwait
xchg
sbb
xchg
jge
dec
out
rorl
insb
shll
sbb
pop
pop
xchg
pop
push
mov
dec
inc
jo
cmpsb
jne
and
mov
add
adc
adc
stos
xor
dec
addr16
jp
lods
lea
stos
rorb
fs
dec
jge
ret
int
shrl
mov
shr
add
test
inc
pop
stos
rolb
outsl
mov
insl
sbb
cmpl
mov
out
lret
adc
pushf
cmpsl
aad
out
xchg
in
int3
xor
insl
das
xchg
mov
cwtl
and
xchg
loope
sbb
lods
mov
jnp
sbb
hlt
lods
imulb
icebp
mov
add
aas
push
mov
mov
cmpl
test
or
jecxz
push
test
call
int
xor
aas
inc
cmp
in
push
iret
mov
rclb
mov
push
push
or
filds
sbb
daa
stos
jo
pushf
leave
cmc
fdivrl
push
sub
andl
lea
jg
xor
stc
push
add
hlt
and
pop
push
xor
adc
xor
je
inc
mov
test
cmp
ljmp
stos
lret
sub
jecxz
lret
test
mov
sub
test
cmp
leave
jle
pusha
cwtl
repz
sbb
dec
xchg
and
aam
std
push
jl
cmp
and
sub
das
je
imul
mov
xchg
lret
mov
mov
pop
push
cs
insl
push
orl
jnp
test
std
loope
inc
inc
sahf
or
pop
mov
sti
fcoms
daa
or
mov
push
fbstp
mov
dec
dec
imul
push
pop
jp
mov
mov
loope
lret
sub
cltd
dec
adc
ljmp
or
pop
bound
add
sub
sti
inc
add
fisubrl
mov
mov
xchg
mov
xorb
les
loop
xorb
xor
inc
ja
aad
ss
inc
push
pop
dec
xlat
xchg
outsl
dec
push
sub
xchg
push
in
adc
adc
mov
mov
add
loop
pop
mov
cwtl
jle
lea
lret
mov
aas
outsb
mov
mov
daa
roll
dec
mov
mov
pushf
cli
in
outsl
push
sbb
mov
push
in
xchg
out
cmp
inc
adc
mov
bound
push
scas
ljmp
in
fsub
mov
stc
scas
repnz
insl
aad
pop
lods
imul
or
cld
mov
jnp
mov
push
mov
mov
jecxz
adc
ds
push
pop
pop
cs
leave
mov
sub
orb
ss
and
sbb
push
mov
cs
xor
pushf
loop
xchg
jno
sub
xor
out
xchg
sbb
xorb
dec
loop
xor
jecxz
je
movsl
not
cmp
in
mov
mov
scas
cmpsl
inc
add
pop
in
lock
jae
leave
xor
jge
pop
xor
pusha
ja
mov
or
cmpb
mov
jecxz
sub
mov
icebp
mov
out
mov
arpl
lds
jge
mov
ficoml
jp
pop
push
sub
shlb
leave
jmp
fsubrs
sub
lcall
movsb
jl
mov
int3
test
out
cmp
popf
mov
push
inc
test
fnsave
mov
or
rorb
jg
aas
mov
addl
jg
leave
repnz
xchg
or
pop
pop
or
lahf
rorb
mov
jle
mov
bound
dec
adc
stc
cmc
or
or
cmovae
jbe
imul
shll
push
stos
cmp
je
mov
pop
jne
inc
popf
cli
mov
icebp
je
hlt
dec
fiaddl
xlat
mov
dec
popf
aaa
test
and
jo
fsubs
out
lahf
pushf
sbb
and
imul
add
inc
push
xchg
add
scas
xchg
adc
ja
add
add
ret
mov
lods
inc
les
incl
loope
aad
or
data16
xlat
cvtps2pi
jno
data16
cltd
lods
pop
insb
cmp
add
xlat
stc
lods
pushf
subb
shl
inc
adc
jmp
dec
aaa
mov
xor
mov
loop
mov
ret
mov
push
outsb
sbbl
mov
and
int
lret
and
pop
sbb
std
icebp
lods
adc
sarl
jb
pop
icebp
adc
pop
out
bound
bswap
adc
dec
in
push
inc
pop
xor
mov
dec
adc
mov
and
or
fcmovne
addb
cmpsb
jbe
fwait
pop
mov
pop
adc
fs
popf
xchg
pop
lods
insb
js
ret
pop
pop
mov
jb
add
scas
fbstp
jne
push
mov
lcall
mov
sbb
aaa
cmpsl
sub
jecxz
push
stc
stos
add
jmp
addr16
les
int3
iret
push
pop
dec
insl
dec
mov
pop
xchg
jno
aas
dec
pusha
or
xchg
xchg
sub
inc
rorl
mov
in
mov
adc
das
je
inc
inc
push
xor
fwait
pop
movsl
xor
ljmp
cli
dec
xchg
int
inc
xor
cli
xor
orb
pop
jno
aam
dec
pop
cmp
je
hlt
mov
and
inc
jle
xor
push
jmp
or
push
test
popf
sub
lods
lods
adc
out
fdivr
lods
jns
scas
add
in
aad
jne
cli
stos
test
xor
adc
adc
icebp
pop
xor
jns
pop
test
je
xchg
int3
mov
sub
jmp
push
mov
push
pushl
jno
repnz
mov
rcl
cmp
mov
je
adc
jmp
repz
inc
xchg
testl
fmul
adc
in
cwtl
add
mov
lods
sub
test
mov
shrl
push
mov
inc
fidivrl
adc
dec
push
push
outsl
in
mov
xlat
jnp
mov
leave
cs
es
adc
rep
aam
push
insl
xor
rolb
mov
jmp
mov
sub
xor
dec
mov
xchg
mov
push
or
jo
int3
andl
sub
dec
or
xor
insb
test
push
push
cltd
fstpl
idivl
mov
test
test
mov
dec
pop
loop
xchg
mov
sub
jle
in
cwtl
out
inc
inc
dec
mov
mov
pop
adc
test
or
mov
mov
shlb
mov
fcompl
lods
int3
ja
mov
packuswb
mov
add
sub
adc
and
inc
das
loope
push
sub
add
mulb
inc
int
stos
sbb
lahf
mov
or
add
roll
daa
imul
test
xchg
pop
xchg
or
mov
mov
ljmp
xor
sarb
mov
jo
fxam
sub
dec
add
push
push
inc
add
sar
xchg
jns
push
adc
lahf
test
out
cli
je
sub
add
push
loope
test
ja
dec
cltd
add
xor
inc
xchg
and
imul
push
mov
push
pop
or
sbb
test
out
out
loop
divl
outsb
dec
out
cmp
repnz
call
mov
pusha
xchg
les
lcall
out
xchg
fs
add
lret
pop
loopne
lret
inc
xor
sbb
lret
in
push
mov
mov
inc
lahf
inc
pavgb
fists
jg
and
or
dec
sti
jae
test
mov
call
clc
pop
es
cmpsb
jecxz
mov
cmc
std
stos
popf
pusha
int
rcr
je
stc
xchg
mov
outsl
jp
push
aad
orb
dec
jnp
adc
jmp
ds
mov
mov
sub
sbb
aaa
scas
push
xchg
sti
inc
jo
xchg
out
arpl
pop
or
pop
push
js
lods
and
scas
sbb
push
movsl
ret
iret
adc
adc
repz
mov
fs
xchg
add
std
sbb
mov
mov
sahf
inc
inc
inc
pop
mov
pop
pop
hlt
cmp
jno
jge
cld
or
pop
adc
cmpsl
adcl
sub
sub
sbb
insb
lds
or
scas
cmp
rcr
sahf
mov
das
push
mov
lock
xchg
mov
pushf
fwait
or
lods
sbb
cmp
mov
xor
aaa
test
dec
sbb
nop
inc
dec
xchg
out
idivl
mov
xor
jo
mov
pop
adc
shrl
pop
dec
and
mov
imul
lret
into
cmp
pop
lods
daa
xlat
cli
fistps
std
jmp
pop
mov
sti
mov
fcmove
xchg
fsubrl
cs
jle
push
decl
jbe
jecxz
mov
pop
push
dec
jne
jl
jne
sbbb
xchg
loope
ss
out
inc
jle
cltd
add
mov
inc
mov
iret
inc
es
push
jg
xchg
lods
lods
dec
cld
xor
add
dec
mov
push
add
mov
fsubrs
and
jbe
into
inc
add
xchg
sti
jnp
stc
push
mov
sbb
fs
addl
daa
ficomps
or
popa
fldl
into
loop
in
lea
adc
or
xchg
lcall
xor
jge
fadd
or
imul
or
lds
adc
and
jle
dec
inc
or
adc
mov
out
sbb
xchg
outsb
dec
push
pusha
adc
adc
gs
cltd
in
jnp
jnp
shlb
arpl
jecxz
pushf
andb
mov
sbb
popf
xor
inc
add
mov
gs
inc
popf
dec
cmc
push
ret
push
cmp
fsubrl
inc
jmp
daa
inc
int
repz
adc
xchg
test
sti
add
mov
test
es
fldenv
sahf
repnz
inc
adc
and
inc
mov
cmp
sbb
bswap
push
inc
int
lcall
push
adc
mov
and
mov
out
ret
jne
xchg
dec
and
and
rolb
cmp
popa
jp
xlat
shrb
lods
dec
push
add
jecxz
pop
jge
insl
mov
jbe
mov
or
xchg
sub
push
xchg
test
jp
cmp
mov
xchg
sub
jge
lods
in
js
xchg
pop
fs
aad
or
mov
or
or
push
out
jb
inc
xchg
in
daa
test
lret
inc
pop
int3
sub
or
xchg
in
mov
inc
insb
and
je
je
push
jo
rcll
pop
loope
push
pop
fwait
addr16
aam
repnz
movsb
xchg
mov
imul
repz
fsub
cmp
repnz
into
loopne
push
pop
push
pushf
daa
sub
or
push
popa
mov
lret
inc
icebp
adc
push
sub
inc
jo
outsb
and
enter
xchg
mov
subb
jg
int
or
adc
loopne
mov
mov
aam
int3
into
xor
lret
cmpsb
push
push
and
cmpsl
in
arpl
daa
scas
dec
add
arpl
stc
cmpsb
pusha
stc
lock
les
dec
into
movsl
and
sub
lret
pop
jbe
dec
inc
scas
popf
mov
lods
nop
test
cwtl
popf
push
inc
dec
insl
jmp
mov
les
mov
aas
ret
mov
scas
push
test
cs
jle
jo
das
or
sbb
into
cwtl
shll
sbb
das
jb
xor
std
int
jbe
imul
mov
or
cmp
enter
add
jle
push
in
enter
pop
std
jmp
inc
movsb
xchg
loopne
inc
ljmp
mov
mov
jecxz
mov
outsb
mov
jo
push
add
mov
xchg
jge
cltd
aaa
fwait
push
pop
xchg
lods
pop
jp
fstp
lock
push
ret
xchg
loope
cmp
inc
leave
popa
cmpsb
stos
lret
loop
cmp
dec
sbb
mov
jns
cli
adc
repz
lret
jg
inc
cmpsb
adc
push
jge
mov
xor
mov
std
into
sarl
fbld
pop
rcl
jl
enter
dec
pop
cmpsb
scas
fwait
add
xor
roll
push
inc
mov
je
adc
pop
lock
mov
inc
mov
mov
adc
pop
jp
mov
roll
je
rcl
xlat
fsubr
push
lcall
mov
dec
stos
lahf
pop
mov
cli
cltd
inc
adc
lahf
fistl
jl
jno
push
inc
sbb
sbb
and
sti
iret
cmpsb
fbstp
sbb
xchg
cmp
push
pop
xchg
cs
jl
push
mov
or
or
pusha
fwait
pusha
sub
jne
mov
push
push
ret
mov
lcall
shll
aaa
pop
mov
jo
xchg
dec
fmull
pop
sub
lock
popf
xor
cli
lcall
andl
pop
inc
mov
xchg
roll
add
sbb
xchg
cmp
rorl
fcom
cmpsb
jne
mov
pop
jno
sub
sbb
or
xor
call
mov
mov
mov
push
add
adc
mov
xchg
js
or
lds
movsl
cld
push
roll
add
pop
pop
pop
jbe
loope
push
enter
filds
inc
pop
xor
xchg
int3
add
jmp
xchg
mov
insl
inc
sbb
imul
sbb
inc
add
pop
cmp
ds
nop
test
mov
dec
aaa
out
mov
pusha
push
lret
dec
scas
pop
sub
inc
jae
shl
popa
out
lds
mov
adc
xchg
daa
jbe
movsl
xor
push
mov
ficoml
add
data16
ret
pop
sub
inc
mov
mov
xor
ljmp
fidivs
fcompl
mov
jne
shrl
ss
xchg
dec
data16
jecxz
sbb
in
pusha
jl
jecxz
cmp
adc
sahf
std
flds
icebp
mov
cmp
add
dec
outsb
ret
or
sbb
add
push
icebp
mov
mov
mov
addr16
cmp
pop
lret
loope
fwait
mov
fdivp
or
mov
cs
cmpsb
dec
aad
sbb
movsb
stos
mov
repz
fs
jmp
mov
xchg
xchg
mov
pop
xchg
inc
jg
xchg
mov
jg
shrb
shrb
pop
adcb
imul
dec
xlat
lret
adc
lret
fs
jmp
lret
call
and
push
dec
push
cmpsb
shr
cli
ficomps
add
loop
lcall
inc
mov
mov
loop
mov
pop
cmp
shrl
mov
adc
fxch
mov
gs
mov
call
aas
dec
scas
and
nop
cmpl
sbb
adc
aas
loop
or
inc
nop
fdivrl
lcall
inc
push
jb
pop
ret
inc
adc
sbb
test
cmp
add
push
cmpsb
mov
pop
push
fidivrl
test
daa
add
cmpsl
cmpsb
and
jns
xor
push
pusha
push
setg
lahf
xor
add
mov
data16
loopne
mov
mov
adc
add
iret
jg
push
cmp
sbb
lea
inc
cwtl
dec
imulb
lea
scas
or
sbb
pop
jns
cmp
sub
xlat
leave
and
aas
xchg
push
daa
mov
shrl
cmp
nop
jb
jmp
shrb
xorb
cmp
pop
mov
fdivs
xchg
ret
inc
sbb
cmc
adc
test
add
push
lahf
pushf
fdivl
dec
jmp
cmc
inc
dec
inc
aaa
fs
cmp
mov
mov
ja
aad
add
rorl
fwait
stos
enter
adc
dec
dec
rorl
jbe
and
jmp
cmpsb
push
xchg
push
insl
mov
int
imul
pop
jl
mov
cwtl
stos
xlat
inc
xorl
jb
or
sbb
fwait
insl
scas
jne
jbe
xchg
sub
popa
sti
xor
mov
je
std
cli
outsl
leave
pop
sub
fwait
sbb
or
loope
mov
js
rorb
and
cmp
add
mov
lahf
loop
je
pusha
adc
push
sahf
fists
and
jmp
push
adc
push
mov
adc
cltd
and
sbb
sub
divb
addr16
cmpsl
ret
cwtl
push
cmp
mov
jmp
rcrl
and
xor
enter
mulb
fnstenv
scas
les
jmp
push
sarb
jecxz
inc
or
sbb
idiv
cld
sbb
cmp
fmul
push
xchg
mov
fcoml
sti
loope
lds
sub
cmpsl
pop
cmp
mov
push
add
dec
xor
xchg
lods
clc
xchg
iret
fimuls
xor
jb
inc
daa
sbb
sub
cmpsb
sbb
fmuls
leave
rcrb
cld
lret
rcrb
dec
adc
mov
push
ret
sub
rclb
pusha
out
ret
cld
shrb
das
push
and
mov
dec
es
hlt
mov
jecxz
jno
cmp
push
adc
jle
imul
jae
jbe
jecxz
divl
negl
mov
mov
lods
mov
cmc
pop
pop
lods
ficomps
mov
or
mov
adc
std
mulb
mov
scas
sub
cs
cli
ret
and
test
popf
cli
test
pop
lock
xchg
test
clc
jge
mov
shl
or
out
push
jno
shl
push
push
sbb
stc
jmp
jb
ljmp
ljmp
inc
imulb
pop
loop
mov
xchg
push
jno
push
sub
stc
in
xchg
loope
addr16
xor
in
in
xchg
xor
lret
sub
stos
mov
push
push
outsb
dec
push
cmp
xor
push
xchg
sub
das
xor
stc
add
daa
daa
movsb
add
fiadds
shll
mov
adc
fisttpll
into
xorb
push
mov
insl
std
mov
xchg
add
outsl
inc
inc
fildl
mov
shlb
ljmp
ds
mov
fisubrs
xor
pop
xor
mov
inc
fsubl
push
mov
mov
pop
es
cmc
xlat
int3
xchg
lea
repnz
js
push
enter
xor
dec
clc
mov
add
mov
icebp
sarb
arpl
aas
and
adc
mov
jecxz
xchg
mov
call
cmp
dec
mov
scas
dec
iret
and
push
xchg
xor
jne
xor
dec
insb
mov
cwtl
int3
mov
cmp
and
int
je
je
stos
std
jge
pop
mov
jnp
pop
stos
sub
add
mov
xchg
sbb
nop
jl
out
nop
int
mov
ficomps
push
and
xchg
mov
call
es
pushf
es
dec
fsub
adc
pop
dec
je
sbb
insb
cmp
mov
xchg
and
push
inc
xchg
inc
xchg
outsl
fld1
aam
xor
mov
pop
sub
roll
adc
cmp
roll
jmp
scas
jb
imul
inc
hlt
repnz
and
mov
inc
std
mov
out
mov
test
es
xchg
outsl
xchg
cwtl
jl
cmp
dec
mov
pop
sbb
adc
int
cmpsb
and
lret
adc
mov
xchg
push
enter
cmp
dec
daa
jne
mov
outsb
cmp
xlat
mov
dec
mov
jmp
mov
shll
jmp
pop
jb
sub
fisttps
cmpl
dec
mov
jnp
pop
dec
mov
fmull
sahf
mov
sub
in
adc
dec
jl
je
outsl
adc
loope
pop
jge
pusha
add
out
inc
xchg
jecxz
ret
pusha
xchg
add
lock
jo
shlb
icebp
lock
in
inc
push
jle
cmp
xchg
push
sti
mov
cmp
push
dec
test
les
jle
arpl
cs
lods
xor
or
sti
adc
mov
mov
mov
dec
xchg
cmc
mov
pop
and
lods
das
pop
cmpb
jns
mov
cmpsl
sbb
xchg
mov
lret
jne
pop
in
pop
push
in
ss
mov
imul
pushf
and
aad
loope
mov
pusha
dec
pop
repnz
push
jl
stos
sub
loop
daa
xor
jmp
arpl
shl
scas
jl
stc
loope
leave
call
mov
jge
xchg
xadd
add
ret
into
mov
dec
popf
pavgw
xchg
mov
sbb
ret
pop
leave
daa
call
push
lds
aam
in
nop
xlat
loop
rclb
or
inc
push
out
push
adc
shrl
pop
popa
push
lea
test
mov
mov
mov
pop
mov
pop
jbe
push
ja
jp
mov
mov
mov
mov
scas
gs
pushf
jg
aas
std
or
call
or
jl
inc
pop
repz
iret
pop
rcrb
sti
stos
fisttpl
cmp
cmpsl
std
sbb
xchg
push
mov
mov
cmp
shlb
imul
cmpsl
flds
inc
add
xchg
adc
sub
fcomps
ret
cmp
mov
jo
pop
aaa
mov
mov
dec
mov
sub
or
mov
adc
inc
aam
xchg
adc
lret
shll
xchg
xor
xor
sub
add
xchg
xor
dec
push
out
test
aad
xor
jo
dec
fdivs
jnp
cmp
pusha
cltd
test
sbbl
pop
addl
pop
cltd
ljmp
adc
movsb
lods
mov
stc
sub
cmpb
aas
and
test
das
mov
adcb
add
sub
xchg
outsb
add
loope
push
in
in
in
in
cbtw
push
dec
jl
sbb
lods
adc
into
add
pop
idivb
loop
xlat
inc
scas
repz
data16
and
mov
sub
repnz
movsl
inc
ja
and
call
sub
ds
in
daa
leave
out
push
jmp
rcrb
imul
xor
adc
mov
sub
sbb
mov
adc
jecxz
int3
lret
mov
addr16
loope
fsub
rcll
push
xchg
sbb
sbb
sahf
push
aad
or
hlt
xor
inc
xlat
add
jae
out
adc
mov
mov
ds
popf
xchg
aad
dec
in
movl
dec
clc
out
rolb
mov
inc
sbb
cwtl
insl
je
cmpsb
add
pop
push
jne
ret
add
aaa
lcall
mov
ja
mov
lahf
dec
push
push
out
push
pause
xchg
inc
inc
nop
sbb
or
xchg
and
es
idivb
sub
add
lret
test
imul
into
mov
aas
xor
loop
jecxz
jnp
sbb
or
fidivs
pop
cli
out
add
sbb
mov
lds
cmc
jbe
jmp
outsl
js
mov
inc
lock
lcall
inc
mov
dec
rcl
out
sbb
popf
out
mov
jge
pop
push
xchg
add
loop
movsb
into
pop
inc
add
pop
xor
xor
dec
push
adcb
loop
mov
and
push
mov
and
lea
mov
fnstenv
ss
orb
pop
leave
scas
repnz
pop
jae
cmpsl
add
in
lds
loop
stos
mov
fiadds
rcrb
pop
push
jmp
cmc
lcall
jnp
adc
test
repz
scas
pop
jo
jle
pop
pop
aam
xchg
fsubrs
fnsave
stos
popf
mov
popa
pop
fcoml
sti
mov
or
ja
cmpsl
adc
call
xor
les
out
add
and
adc
mov
je
push
dec
mov
pusha
jo
sbb
add
cmp
mov
xor
and
cltd
in
pop
mov
pop
lahf
arpl
add
mov
sub
sti
nop
jno
xchg
adc
hlt
outsl
pusha
aas
sbb
lods
js
mov
push
data16
aad
jl
setl
xchg
mov
dec
out
movb
adc
shll
pop
imul
pusha
daa
inc
or
or
js
and
jl
mov
ja
and
xchg
inc
inc
adc
fimull
cli
sub
add
xor
ss
jp
xchg
sbb
cmp
sarl
mov
mov
lcall
add
adc
into
sbb
inc
jnp
imul
repz
and
or
rorl
shlb
or
lret
mov
in
push
popf
push
orl
and
popf
stos
outsl
lcall
xchg
mov
cmpsl
mov
lahf
jecxz
lods
mov
xor
jle
inc
xor
mov
mov
push
xchg
ret
jp
add
dec
or
jge
inc
push
cmp
pop
subl
dec
adc
ficoml
stos
gs
les
pop
std
std
aas
aad
dec
inc
dec
push
repz
sbb
pop
lret
inc
add
adc
je
out
mov
mov
or
add
into
push
imul
cmp
mov
push
nop
out
xchg
pop
jne
vpmacssdql
std
xchg
or
fsubrs
and
cmpsl
add
xchg
aas
pusha
pushf
jp
sbb
sub
inc
and
cmp
push
aaa
add
adc
cmpsb
mov
mov
movsl
pop
or
cmc
insb
jge
test
jecxz
adcl
aas
jne
dec
sub
fimuls
cmp
adc
cmp
pop
aad
mov
mov
cmpsb
pop
ffreep
stos
push
ds
loop
fwait
cltd
mov
lds
adc
fidivrl
out
mov
mov
imul
shll
negb
mov
jl
hlt
aaa
int3
add
xor
jo
fiadds
imul
loop
or
or
adc
push
push
or
rorb
andb
sub
outsb
jp
arpl
xor
inc
xor
inc
mov
and
fdivr
outsl
lock
loop
xor
mov
out
iret
cmp
inc
mov
mov
out
cmp
jnp
andl
les
mov
movsl
dec
out
nop
fidivs
push
xor
add
in
mov
mov
shlb
inc
cmpsl
out
enter
pop
int
sbb
pop
in
mov
mov
aaa
es
push
frstor
push
ljmp
or
xchg
adc
or
sub
dec
in
sub
xor
and
cmp
gs
push
jno
pop
ds
mov
cmc
fisubs
fnsave
insl
cmc
daa
sbb
call
and
pop
stos
pop
xlat
xlat
jl
push
push
fdivl
mov
flds
pop
and
es
cmc
iret
scas
push
sub
mov
cltd
pop
fdiv
ljmp
pop
dec
ret
push
daa
cli
loope
fstpt
out
or
xor
fmuls
mov
stc
pop
adc
inc
push
jns
loop
stc
ds
cmp
sub
sbb
jecxz
pop
rolb
nop
out
aam
mov
and
add
push
mov
add
and
ss
add
pop
sub
pop
inc
push
jecxz
sbb
mov
mov
fidivl
mov
jne
ja
dec
fnsave
xchg
dec
pop
repnz
fstp
cmp
loop
or
or
fwait
mov
mov
sahf
daa
sbb
loopne
mov
lahf
rorb
idivb
divps
inc
mov
imul
pushf
lea
in
jl
int3
xchg
inc
pusha
sub
insb
pop
or
popl
cli
inc
mov
jbe
repnz
lea
hlt
fldenv
and
mov
jo
outsl
lods
push
bound
insl
pop
or
aam
jbe
mov
sbb
push
xchg
mov
les
sbb
sbb
sbb
cmpsl
mov
push
sbb
out
mov
sub
and
push
inc
shrl
xchg
or
shlb
push
add
lret
jae
std
mov
test
xchg
or
push
in
jo
lock
clc
out
xchg
scas
xchg
dec
push
inc
andb
ds
ret
shrb
dec
or
sarb
push
inc
mov
dec
imul
inc
mov
xor
adc
push
sub
xor
loop
or
xchg
sub
aas
dec
mov
mov
out
xorl
dec
jne
sub
ret
scas
xchg
dec
push
out
dec
int
mulb
aaa
loope
cli
mov
cmp
push
lea
mov
stc
fcoms
ja
jge
and
movb
sbb
cmp
mov
repz
pop
xchg
push
mov
icebp
lods
jno
mov
jl
ja
jbe
shl
or
mov
xor
jnp
jg
cmpsw
mov
scas
movsb
lods
push
cwtl
mov
sub
sub
lcall
mov
add
andl
push
push
jle
or
sub
shl
arpl
daa
adc
mov
inc
dec
std
or
adc
push
inc
repnz
hlt
outsl
mov
mov
xor
dec
dec
pop
mov
test
add
popa
adc
xchg
sahf
into
cmp
adc
rolb
mov
call
mov
roll
xor
sub
mov
aas
in
mov
dec
adc
jae
dec
push
rcll
repz
int
je
add
and
btc
jb
pop
movsb
les
das
add
sub
lods
mov
sbb
dec
jb
xor
push
out
aas
pop
mov
setnp
into
xlat
mov
hlt
push
xchg
shlb
pop
sahf
sbb
mov
jae
jmp
mov
aam
out
iret
push
pop
in
shrl
dec
nop
pop
push
orl
jl
add
repz
mov
dec
setne
and
inc
int
imul
jl
cwtl
cld
mov
shl
pop
and
pop
lds
mov
xor
mov
cmp
push
or
xchg
push
int3
jge
ljmp
sub
ret
dec
bound
jl
aam
and
push
cwtl
aaa
mov
shlb
sub
es
xchg
cmpsb
mov
inc
mov
pop
mov
jmp
sub
insl
in
push
push
cmp
xchg
sahf
cmp
arpl
pop
fbld
sahf
or
dec
mov
add
jnp
mov
int
mov
jae
add
enter
inc
out
pop
sbb
arpl
mov
adc
mov
cmc
jl
add
mov
pusha
sbb
inc
in
fcmovnb
arpl
shl
sti
testb
test
pop
pop
stos
mov
int3
xchg
push
scas
and
and
rcll
adcb
lods
sbbb
inc
in
repnz
scas
sub
ret
cmpsl
pop
adc
dec
mov
std
cmp
sbb
and
cmp
int3
inc
inc
cmp
mov
sbb
cwtl
icebp
in
lahf
cmp
mov
sbb
xchg
xor
mov
out
sub
mov
sub
push
mov
lcall
fcmovnb
push
xchg
mov
mov
rcr
dec
inc
pop
int
sti
xchg
push
inc
call
sub
and
cwtl
scas
mov
lret
loopne
js
xchg
repnz
lods
sub
add
and
adc
pushf
rcr
xor
sbb
add
lahf
ret
jl
inc
and
gs
jbe
inc
aam
cmp
sbb
pusha
mov
lahf
or
cmp
test
add
push
push
icebp
jb
xchg
push
adcb
xor
and
test
daa
push
sahf
test
xorl
xchg
lods
sahf
iret
es
int
sahf
cmp
jae
xchg
loopne
std
cmovbe
movsl
pop
cmpb
xor
mov
bound
or
pop
mov
sahf
mov
push
dec
adc
les
mov
xchg
cmp
inc
pop
test
xchg
fisttps
hlt
mov
repz
push
sub
aaa
adc
cmp
mov
loop
mov
fldenv
pop
xchg
rorl
mov
push
les
and
lods
lods
fsts
xor
mov
jnp
and
sub
sbb
push
pop
out
fwait
jno
pop
xchg
adc
fs
xor
inc
sub
mov
jge
cmpsl
pop
push
jae
and
rcr
adc
xchg
xchg
xor
outsl
roll
rcll
enter
xchg
push
sbb
inc
pop
dec
insb
js
mov
cmc
ss
jae
shrl
sub
push
mov
sub
lret
adc
nop
divb
bound
push
test
dec
cmp
lcall
mov
loop
and
aaa
andb
xor
jnp
lds
xchg
push
dec
or
into
sbb
enter
jecxz
jne
inc
data16
fildll
nop
adc
dec
call
push
inc
outsl
icebp
lock
push
jne
mov
cld
add
xchg
stos
ret
imul
or
int3
sbb
jno
repnz
jmp
add
push
roll
bound
sbbl
leave
test
sub
pop
ss
push
jne
mov
popf
movsl
mov
shlb
sbb
rolb
mov
sti
fiaddl
lock
dec
cmp
pushf
mov
lcall
cmp
aad
out
repnz
test
pop
in
adc
push
test
push
mov
bound
cmp
xchg
stos
lahf
mov
dec
sti
lock
into
sbb
pop
test
push
jnp
aas
pop
test
in
push
dec
mov
or
inc
and
notl
or
mov
lock
and
xchg
jbe
push
mov
insl
insl
test
push
sbb
xchg
adc
adc
lods
push
cmp
xor
out
cs
xchg
mov
insl
movl
leave
stos
mov
inc
jmp
ja
cmp
push
and
xchg
and
imul
sub
cmp
sub
sub
testb
push
orl
addr16
leave
pop
push
jp
pushf
sbb
dec
rorb
mov
mov
mov
mov
inc
add
xor
jns
cwtl
add
fisttps
pop
je
xor
push
cmp
inc
in
push
mov
scas
orl
aaa
sbb
hlt
stos
punpckldq
shl
xlat
jmp
sbb
jnp
aas
enter
scas
icebp
xor
rcrl
push
notl
inc
in
pop
in
mov
decb
scas
mov
mov
roll
pop
lret
add
pop
loope
imul
xchg
xor
sbbb
pop
int3
push
pop
dec
fdiv
mov
add
jnp
pop
cmp
pop
dec
or
pop
add
out
stc
lods
mov
and
dec
sub
fmull
ficomps
inc
rcrl
inc
shrb
xor
jne
pop
inc
xor
dec
pop
xor
mov
jp
sub
sbbb
cmp
mov
out
pushf
cmpsb
nop
inc
xchg
cmp
ffreep
and
cli
insb
mov
rcr
movsb
sub
mov
out
push
gs
popf
cld
xchg
push
inc
js
mov
cmpsb
lods
decb
adc
pop
push
fstps
push
lret
cmp
inc
push
mov
fdivl
imul
jne
mov
addr16
mov
xchg
sti
enter
mov
subb
das
repz
push
cmp
sbb
icebp
test
jg
data16
mov
xlat
iret
sahf
pop
movsb
add
inc
pusha
dec
add
xor
sub
inc
leave
lahf
sub
push
aam
cwtl
and
xlat
adcb
sbb
cmpsb
not
popa
sub
adc
fnstenv
mov
inc
jb
push
fisubl
rorl
fistps
sbbl
inc
xchg
lds
add
or
jp
or
cmpsb
xor
mov
daa
das
push
lahf
fsubrs
sar
mov
testb
sub
es
iret
or
mov
or
jbe
movsb
stos
xchg
mov
lret
popf
sub
cwtl
push
sub
push
cld
fs
adc
xlat
mov
test
xlat
cld
clts
dec
ficomps
pop
test
sbb
or
push
or
jbe
test
pop
ret
xchg
aas
push
push
sbb
outsb
aad
push
push
leave
aad
arpl
test
das
jbe
xor
js
repz
cmp
popa
ds
xchg
pop
pushl
xor
cld
xchg
inc
mov
add
aad
fwait
call
pop
mov
iret
inc
sahf
movsb
xchg
pop
xor
lahf
pop
cmc
inc
xor
aas
sub
je
adcb
daa
pop
hlt
shrb
sub
jo
pushf
or
dec
mov
ret
cmp
loope
pop
xchg
loop
ja
cmp
xor
int3
cmp
mov
add
push
adc
ret
mov
movsl
popf
mov
cmp
dec
sub
ljmp
iret
xchg
jecxz
dec
sarl
stos
imul
stos
or
xchg
cmp
mov
adc
insl
popa
jae
mov
xchg
mov
outsl
outsl
jle
and
mov
das
cmp
add
fidivl
andl
xor
in
jp
sub
xchg
ljmp
mov
movsb
xor
xlat
push
fmuls
or
pop
adc
aaa
fwait
sub
lahf
mov
loope
arpl
sbb
jmp
int3
dec
in
call
sahf
dec
dec
arpl
mov
nop
cmp
adc
pop
pop
incl
pop
pushf
scas
movsl
mov
fists
ret
sub
imulb
adc
testb
and
xchg
mov
mov
mov
aaa
and
adc
mov
subb
add
and
push
clc
push
insb
bound
idiv
test
mov
jae
and
inc
mov
push
jnp
sahf
cmp
fsubrs
ficompl
das
xor
cmp
out
arpl
dec
or
stc
pop
dec
aaa
push
inc
incl
xsha256
cmpsb
xchg
jecxz
jae
cs
fimull
arpl
insb
fsts
push
push
or
or
sub
push
and
xchg
aad
jb
cmp
or
lods
or
clc
fisttpl
andb
or
pop
negb
pop
outsb
ljmp
fcoml
sub
xor
cmp
pop
pop
movsb
sbb
test
jg
jg
jmp
push
sub
loopne
jbe
inc
push
loopne
into
ja
mov
mov
mov
pop
jb
leave
inc
test
pop
push
jnp
push
idivb
fisubl
aaa
xchg
addb
mov
mov
mov
mov
movb
clc
xor
xchg
add
imul
or
dec
aas
popa
dec
das
ret
sub
lea
mov
push
xor
out
mov
scas
xchg
push
rcrb
fcoms
daa
inc
mov
xchg
fcoml
push
das
gs
filds
in
mov
lea
pop
fwait
xlat
in
into
jnp
mov
xlat
mov
out
outsl
test
cld
lock
je
repnz
xchg
cmc
xchg
pop
sbb
fsubl
or
nop
xor
mov
and
aad
push
jecxz
in
sub
loope
imul
int3
dec
ret
out
inc
xchg
lahf
popf
aas
jecxz
sbb
push
mov
int3
pop
xor
into
mov
dec
rolb
lcall
insl
out
icebp
lock
lods
arpl
pop
fwait
test
mov
xchg
mov
call
xchg
icebp
in
jae
ja
adc
adc
aaa
jns
int
add
sbb
std
pop
sbb
je
dec
iret
test
pop
cli
sbb
insb
ret
lods
add
mov
inc
fdivs
scas
mov
test
xchg
vmread
cmp
lea
push
sbb
or
lds
into
fcoms
aam
into
pop
loopne
push
rclb
cli
pop
inc
mov
mov
imul
cmc
fdivs
mov
out
roll
gs
in
pushf
and
fbld
sbb
adc
jns
pushf
mov
or
imul
scas
jp
mov
popa
adc
ljmp
sbb
push
xchg
daa
loop
enter
mov
pop
aas
xchg
sbb
dec
and
mov
dec
dec
xor
xchg
mov
mov
inc
and
xor
cmc
lds
repnz
fistpl
int
jle
std
xor
fsubl
loope
sbb
xor
fnstsw
inc
add
fs
shrl
insl
outsl
mov
rcrl
push
push
jno
cwtl
add
pop
clc
idivl
jno
lahf
fs
insb
insl
pusha
inc
arpl
cmp
insl
jno
popa
pop
mov
fisubl
lods
push
mov
cwtl
ljmp
dec
ss
cmp
aam
dec
mov
adc
mov
pop
aam
or
jle
cmp
sub
xor
fmull
mov
mov
xor
test
push
cmpsb
adc
roll
jnp
cmp
xor
inc
addr16
adc
cli
xor
int3
push
ds
subb
fcmovnu
and
mov
pop
sbb
jo
add
jo
jmp
mov
stc
xchg
cltd
adcl
cli
and
test
jnp
cmpsl
pusha
out
adc
pop
imul
mov
ror
pop
fisttpl
add
jp
test
or
push
cmc
sbb
pop
add
pop
js
dec
loop
cmp
ret
or
lahf
icebp
xchg
daa
lcall
scas
js
and
or
ret
mov
dec
loopne
jl
xor
mov
mov
dec
jle
pop
out
xor
leave
pop
mov
mov
mov
adc
aad
dec
or
mov
mov
cmpl
fisttpl
sub
gs
sbb
insl
or
sbb
movsb
loop
and
cmp
mov
js
stc
xor
xchg
sbb
fwait
mov
in
ds
test
outsb
mov
mov
fld
test
lds
pop
cmp
pop
add
dec
cltd
cli
and
stos
testl
les
mov
mov
sbb
cmp
or
mov
and
sbb
fmull
cs
int
into
out
pushf
lahf
mov
cwtl
push
mov
mov
adc
cmpb
xchg
mov
out
sub
xchg
mov
mov
sub
lea
and
int
xchg
enter
sub
push
pop
mov
aaa
movsl
cmp
push
mov
sarl
push
and
out
mov
fptan
fcoml
or
mov
adc
movsl
inc
xlat
mov
cmp
mov
inc
popa
pop
or
fisubrs
xor
cmc
es
ljmp
pushf
insb
fnstsw
pusha
mov
inc
ret
fistl
lcall
jne
cmc
fwait
dec
and
out
scas
lret
and
ja
adc
hlt
stc
pop
popf
cmp
outsb
pop
sub
fstp
je
mov
popf
push
mov
into
mov
adc
sbb
or
sub
subb
in
lods
inc
mov
sbb
or
inc
inc
mov
out
xor
andb
push
cmpsb
int
fstpl
mov
mov
dec
into
cltd
ja
nop
jno
cmp
lcall
into
cwtl
and
shll
adc
jne
rclb
pop
rclb
fldenv
xor
nop
and
fiaddl
enter
jl
pop
and
jae
sbb
pop
add
test
ss
add
je
xchg
nop
jle
add
mov
or
adc
mov
shrl
out
loope
mov
pop
aam
inc
mov
pop
dec
mov
mov
test
xchg
enter
inc
ror
sbb
jns
jno
enter
jge
lea
pop
jbe
xor
jecxz
mov
xor
jb
mov
push
push
inc
jns
mov
pop
inc
test
sti
inc
rol
sub
lret
test
xchg
cld
or
or
sbb
mov
add
sahf
out
fildll
inc
insb
and
jo
mov
mov
inc
js
popa
das
out
mov
cmp
cmp
xor
outsb
pop
leave
sub
popa
xor
or
or
mov
divl
xchg
mov
scas
xor
mov
sbb
bound
shl
push
push
xor
out
mov
push
movsl
mov
or
jl
pusha
pop
arpl
into
stos
das
xor
pop
shrl
pop
in
inc
rcll
inc
add
jbe
mov
sub
pop
dec
xchg
mov
pop
sbb
xchg
fcoml
popa
testb
dec
pop
mov
xor
xchg
and
in
fstpl
pusha
sub
out
jg
vmovd
and
inc
xor
mov
lea
ds
lret
xchg
int3
jae
nop
inc
inc
out
pop
cmpsb
push
pop
lds
out
mov
inc
xchg
shr
jb
inc
jecxz
ss
ljmp
std
dec
jae
mov
xchg
bound
imul
mov
sub
daa
lods
mov
daa
and
out
ss
int
loop
pop
sub
pop
ss
inc
movb
sbb
ja
imul
dec
cmp
lods
jnp
sahf
or
xor
push
shrb
sbbb
outsb
mov
lods
xlat
jae
dec
dec
test
and
ds
dec
pminsw
pop
outsl
les
jp
xor
push
sti
lret
addb
pop
xor
xchg
popf
les
sti
push
mov
push
mov
bound
cmp
jg
movsl
out
dec
lret
fsubp
les
fwait
jmp
mov
cmp
mov
xchg
inc
lret
cld
xchg
aas
sarl
mov
jbe
jnp
cmp
sub
dec
add
jle
or
cmp
or
pushf
stos
adc
cli
mov
jg
das
aam
mov
jg
lret
pop
imul
inc
pushf
ljmp
andl
movsl
inc
insl
jge
data16
insb
iret
popa
or
mov
xor
repz
xchg
or
cmp
xchg
mov
mov
xor
sbb
mov
cmp
or
test
lret
mov
shr
iret
dec
or
jno
into
sahf
xor
bound
add
sub
mov
or
stc
pop
inc
or
jae
jecxz
loope
ret
cmpsb
test
stos
es
js
jo
shrl
sub
mov
sub
dec
xchg
xchg
test
iret
xor
xchg
sbb
adc
add
jne
and
pop
ss
idiv
sbb
pop
xorb
jne
adc
lds
add
adc
int3
int
insb
cmc
xchg
add
cmp
aaa
xchg
out
cld
aas
sbb
xchg
ja
dec
xor
adc
fnstenv
test
mov
sbb
and
lods
and
negb
and
cmp
sub
push
mov
jnp
jl,pt
or
push
aam
dec
lea
test
gs
push
jne
pop
loop
mov
mov
push
mov
ja
in
mov
push
jno
into
rcrl
cmp
pop
test
pusha
iret
mov
int
imul
inc
loopne
xchg
mov
int
aas
jno
fisttpl
mov
sub
cltd
mov
enter
movsb
cmp
gs
bnd
movsl
mov
je
addr16
mov
aad
push
sub
gs
mov
imul
cmp
dec
push
dec
or
rcrb
aas
mov
popa
xchg
imul
in
or
cltd
subb
in
xchg
push
fldpi
mov
call
lods
pop
dec
adc
test
aam
dec
cmp
dec
fnstenv
sbb
dec
jns
add
inc
imul
das
in
xor
xchg
jecxz
imul
jg
jge
enter
mov
rcll
ret
mov
repz
test
pop
repnz
repnz
clc
mov
das
cmp
hlt
repnz
push
lea
mul
testl
les
cmp
mov
and
loopne
xor
adc
push
mov
ret
jno
push
and
inc
fdiv
mov
xor
jle
ds
mov
cmp
inc
or
aad
sub
or
jnp
pusha
lea
daa
fcomps
mov
xchg
mov
pop
lock
sbb
stc
sti
jno
or
xlat
test
iret
into
xlat
call
incb
dec
mov
cmp
mov
outsb
fimuls
scas
add
mov
adc
mov
xchg
cmc
sub
add
xor
fsubrs
loope
cwtl
popa
faddl
pop
inc
jbe
sahf
int
add
adc
ljmp
sbb
adc
movsb
push
dec
add
ffree
adc
lahf
dec
and
push
out
test
lods
inc
or
fwait
pop
imul
int
mov
sub
dec
mov
rcrl
mov
jge
inc
adc
aaa
xor
or
cld
push
add
inc
mov
xlat
dec
out
mov
mov
mov
nop
sbb
push
push
out
in
stc
aas
mov
aas
pop
dec
and
popl
loope
movsl
inc
outsb
ss
sbb
xchg
pop
jbe
mov
mov
loopne
in
dec
icebp
push
push
add
aas
mov
pop
shll
sbb
dec
repnz
push
outsl
sub
lret
jmp
mov
or
and
imulb
orps
es
sbb
shl
sbb
sbb
loopne
dec
cmpsb
push
stos
movsb
dec
add
fidivs
add
js,pn
sti
pusha
test
lcall
pop
inc
rcll
test
sbb
cmp
outsb
fmuls
and
mov
inc
inc
sub
xor
xchg
icebp
mov
fnstsw
jno
xchg
add
ret
test
jo
negb
mov
pusha
dec
xchg
mov
mov
mov
imul
adc
push
in
mov
leave
aam
dec
sahf
repnz
aam
inc
add
mov
leave
out
idiv
and
fnstsw
push
out
loop
test
inc
jle
push
sahf
push
int
icebp
cli
stos
jecxz
or
into
andb
jmp
mov
or
dec
mov
aas
ja
or
sarb
movsl
ds
lea
mov
sbb
lds
cmp
xchg
out
out
sbb
sbb
mulb
jnp
dec
daa
test
lret
or
aad
into
aam
cmpsl
cmp
lds
sbbb
mov
inc
add
mov
fidivrl
jecxz
xchg
mov
subb
xor
sbb
push
aaa
jg
adc
insb
nop
inc
fisubrs
pop
in
xchg
xor
loope
dec
jne
movsl
jecxz
sbb
dec
dec
fs
inc
add
xchg
outsl
sub
add
lods
lcall
loopne
sahf
and
sbbl
dec
bt
mov
mov
ret
cmpsb
dec
cmc
shrl
fldl
dec
test
insb
lret
fnsave
cmp
add
jne
shrl
out
movsl
inc
fmul
adc
fidivl
fadd
loope
cmp
xor
inc
mov
push
ret
cmp
insb
es
insb
adc
popa
out
nop
rcr
arpl
jo
push
adc
and
pop
add
xchg
mov
subl
sub
xor
lret
hlt
mov
daa
scas
adc
dec
scas
insl
outsl
adc
loope
imul
push
mov
xor
int3
out
and
push
lret
pushf
lds
into
add
cmpsl
out
loop
adc
cmp
pop
sbb
sub
mov
mov
lea
push
fisttps
and
fcmovnbe
cmpsb
jmp
std
mov
mov
out
push
and
xorl
stos
cmpsb
stc
test
clc
fadd
pop
adc
dec
pop
jne
jne
cmpsb
outsl
or
pop
push
and
sbb
dec
lock
push
mov
sub
call
inc
adc
adc
pop
add
mov
push
adc
mov
rcll
ds
sahf
pusha
jmp
cmpsl
cli
icebp
inc
cmp
mov
cs
mov
std
jecxz
push
lea
add
xlat
std
pop
adc
pop
fadds
jl
pop
out
insb
push
aaa
xor
insb
daa
xchg
sbb
and
mov
shll
mov
cmc
or
xchg
aaa
lret
adc
sarl
aas
cltd
mov
jle
int3
xor
mov
adc
scas
cmpsl
sbb
pushl
sahf
repnz
aaa
pop
out
add
lds
addr16
into
pop
arpl
and
mov
push
outsb
scas
imul
mov
stos
in
adc
orl
add
es
inc
jecxz
icebp
incb
jl
test
gs
inc
data16
shl
lods
sbb
stc
mov
cmp
notb
movsl
inc
pop
lret
cwtl
push
pusha
out
sbb
iret
sub
xchg
push
shl
test
xor
popf
outsl
pop
xlat
clc
test
sub
inc
dec
aam
hlt
mov
and
add
out
jno
mov
xor
ljmp
mov
cmp
sub
fmull
mov
dec
add
das
int
cmp
xchg
add
jp
inc
sbb
xchg
mov
popa
ljmp
aad
mov
movsb
pop
leave
aaa
cwtl
loopne
in
movsb
inc
adc
lds
and
pushf
push
mov
lret
xchg
adc
and
lock
test
in
mov
push
push
push
mov
lock
aaa
loop
ja
add
loope
es
jne
inc
jp
mov
into
in
or
das
push
push
arpl
ds
out
adc
inc
into
fcoms
and
mulb
xor
nop
add
scas
push
and
mov
test
mov
loop
mov
int
lods
mov
fs
dec
add
mov
xchg
iret
adc
mov
sbb
push
clc
mov
popa
lods
or
dec
and
sbb
movw
lahf
sub
loope
std
fwait
test
cmp
insl
addr16
les
stc
into
add
push
push
int3
lds
xchg
mov
enter
push
add
jnp
mov
dec
sub
mov
loop
icebp
rorb
xchg
dec
or
les
insb
das
cld
push
and
aad
push
or
roll
mov
out
ljmp
ljmp
adc
pop
sbb
inc
sbb
movsl
dec
es
add
je
push
cmpsl
and
into
jmp
and
sub
gs
call
mov
push
dec
cmc
lahf
cmpsb
lock
xchg
test
mov
jp
add
movhps
jg
inc
sub
adc
jecxz
xlat
adc
xlat
mov
push
lcall
cs
in
cmpb
jb
icebp
outsl
dec
mov
aam
sbb
loope
aaa
scas
les
xorl
xchg
mov
xor
mov
mov
int3
bound
test
xchg
mov
movsl
cld
push
sahf
mov
orb
ss
dec
push
dec
shrb
xor
data16
push
dec
mov
in
dec
imul
addl
jae
push
cmc
add
xchg
mov
popa
pusha
or
or
dec
add
adc
cmp
ja
mov
inc
mov
push
jns
inc
mov
sbbb
loope
lcall
sbb
and
mov
jae
lea
jp
mov
add
scas
test
out
inc
xchg
push
shlb
xor
sti
dec
test
stc
fwait
or
enter
loop
in
sbb
push
insl
xchg
dec
icebp
mov
dec
mov
or
clc
and
mov
cmp
mov
cmpsb
fcoml
popa
leave
or
enter
mov
or
in
mov
mov
add
outsl
aaa
push
xorps
xchg
adc
fcomip
and
mov
test
shll
add
dec
outsb
inc
std
popf
popa
lods
and
jle
cmp
clc
pop
inc
push
outsb
outsl
out
push
cwtl
cmp
pop
aad
pop
addr16
stos
push
pop
push
and
out
push
sub
mov
lods
js
test
mov
lcall
xchg
pop
xor
inc
roll
sbb
xchg
sub
jno
in
imul
in
imul
sub
sti
xchg
icebp
lods
jne
es
test
and
adc
add
in
pop
push
cmp
sub
mov
cs
cli
inc
mov
inc
mov
mov
fnstenv
ror
inc
mov
inc
aam
subl
sub
xor
clc
dec
pop
add
cmp
insb
hlt
adc
adc
mov
rorl
in
jb
inc
nop
inc
pushf
jno
out
out
mov
xabort
ret
cmp
mov
sbb
xchg
mov
mov
jg
out
into
std
in
scas
push
sarb
mov
jp
in
stos
int
and
and
jb
or
repz
push
cmp
subl
push
pop
imul
shlb
push
dec
dec
cli
cmc
cmpl
enter
push
les
xchg
rol
in
xor
ljmp
inc
test
add
jbe
pop
mov
cltd
leave
fisttps
rolb
stos
push
push
pop
shll
mov
sbb
adc
cli
push
inc
add
sub
sub
push
push
jg
xchg
lods
mov
dec
ss
sub
jmp
jns
xor
mov
pop
mov
icebp
add
mov
cmp
aam
cmp
ss
lea
inc
sbb
add
loope
call
mov
xchg
jb
daa
js
cltd
and
fcoml
jne
ret
aaa
cli
dec
inc
cld
cmp
xor
push
shrl
inc
lods
sbb
jecxz
hlt
or
popa
sbbb
jmp
add
add
cs
mov
cmp
insl
push
inc
or
insl
or
jne
rcl
je
jnp
xchg
in
add
insb
adc
push
xlat
inc
arpl
mov
push
mov
push
mov
cmp
xchg
les
test
push
pop
and
icebp
push
adc
xchg
cwtl
aas
ljmp
mov
loop
mov
out
pop
aaa
repnz
shlb
int3
or
sbb
sbb
xchg
pop
ret
push
sbb
icebp
mov
cmp
adc
addr16
cmpsl
pop
jmp
mov
fnsave
push
mov
mov
cmp
incl
ficoms
adc
pop
sub
pop
jo
insl
inc
rcl
dec
es
xchg
out
ljmp
fcoml
mov
pop
inc
rcl
cli
int3
fidivrl
xchg
add
fs
divb
or
std
imul
sbb
out
test
push
fdivrp
adc
adc
lahf
pop
adc
into
mov
pusha
ja
push
sub
idivb
push
adc
ret
mov
xlat
xchg
pop
and
cmc
adc
xchg
test
jae
hlt
push
pop
lods
jo
cmpsl
push
pushf
daa
aas
jbe
jge
gs
sub
or
adc
and
xchg
xchg
xlat
or
sarb
mov
sbb
cmp
jno
jmp
sbb
push
faddl
adcl
popf
sub
out
pop
out
jmp
ljmp
bound
fsts
pop
loop
mov
pop
mov
or
sbb
mov
adc
lea
inc
jmp
cwtl
decb
test
cwtl
or
lea
mov
mov
daa
push
xor
mov
arpl
stos
sub
jns
outsb
add
sub
popa
xchg
fildl
cmpsl
xchg
loop
test
vmovd
ficompl
enter
mov
je
push
lock
xchg
pop
scas
cld
mov
push
pop
mov
lahf
inc
push
mov
stos
cli
ret
divb
fwait
test
jmp
or
fwait
pop
mov
push
cmc
pop
lods
lret
pop
fistpll
pushf
xchg
sub
mov
mov
xor
enter
int
js
fisubrl
mov
jp
outsb
ret
or
adc
adc
mov
xchg
add
cli
cli
sub
sub
adc
jae
scas
mov
xchg
mov
insb
pop
js
shlb
jae
mov
daa
fiaddl
xor
mov
sub
add
sub
insl
shll
popa
rclb
out
cmp
pop
pop
dec
fcmovnbe
push
push
cmp
ljmp
inc
jno
iret
mov
mov
xlat
lret
test
push
or
cmc
mov
movsl
fidivs
test
or
ret
mov
xor
push
mov
inc
inc
jge
sarl
push
jo
enter
loope
out
adc
aas
adc
stos
cwtl
sbb
popf
jmp
dec
lock
push
hlt
inc
xor
cmp
mov
xor
hlt
dec
and
mov
lahf
movsl
mov
cmp
lods
lcall
mov
movhps
pop
mov
das
js
test
std
cltd
popf
imul
xchg
jb
pop
aad
lods
sub
push
call
scas
cmpsl
mov
bound
imul
adc
push
sarb
push
push
mov
inc
movsl
add
adc
mulb
mov
jp
xchg
fisttpll
add
mov
dec
and
lcall
pop
es
pop
int
fsubrs
call
aam
mov
fcoml
fcoml
dec
ret
add
push
addr16
popf
xlat
inc
push
jnp
repnz
jbe
mov
xor
mov
cld
mov
add
cmp
inc
dec
xchg
out
nop
add
jb
push
fistl
pop
lret
add
repnz
cmp
inc
dec
fdivp
rolb
cwtl
adc
jp
jle
mov
into
jp
test
jg
js
dec
jbe
bound
xlat
inc
cmp
lret
sbb
inc
xchg
push
jae
iret
and
inc
jge
push
or
push
add
sarb
fnsave
pop
fsubrl
out
repnz
jge
out
stos
ja
addl
mov
adc
jb
inc
cmp
shlb
add
les
push
pop
inc
xor
scas
sbb
sbb
je
adc
mulps
xor
mov
mov
xor
pop
dec
lret
icebp
mov
sbb
cmp
and
xor
mov
out
pop
pop
mov
jno
jbe
clc
add
inc
inc
jle
or
ret
stos
icebp
pop
neg
push
inc
mov
loop
sub
ds
jbe
cmpl
jmp
sbb
xchg
aam
adc
dec
xchg
pop
xchg
aaa
lods
adc
dec
xchg
loop
repz
jbe
pop
and
fimull
insb
jnp
adcb
and
js
add
pop
mov
fisubl
add
push
stos
int
xchg
sahf
pop
mov
enter
movb
pop
lds
leave
sbb
pop
rcll
mov
sbb
fcoms
sub
xor
inc
rclb
orb
and
pushf
cltd
mov
out
mov
notb
cld
ret
cltd
mov
adc
lods
cmp
shl
movups
test
out
lods
adc
cli
mov
push
mov
add
mov
into
add
push
xorl
sti
daa
stos
imul
push
mov
mov
dec
pop
arpl
and
xor
jp
test
les
aas
xchg
fwait
sbb
adc
dec
in
jl
mov
xor
adc
bnd
icebp
imul
add
addr16
push
cmp
mov
jns
xchg
xor
and
mov
sbb
inc
aad
jns
imul
sub
push
pushf
lahf
jnp
gs
mov
sbb
fcoms
loope
out
lock
rcrb
xorb
scas
movsb
fidivl
stos
out
data16
es
js
mov
ffreep
out
add
sarl
jne
fstl
hlt
inc
push
rcrb
mov
nop
sbb
mov
shl
in
jle
outsb
mov
mov
mov
aad
insl
jns
push
sub
aaa
rcrl
pop
data16
push
mov
adc
movsl
pop
lcall
nop
dec
sti
fmull
mov
clc
pusha
sbb
sbb
repz
sbb
adc
stos
jmp
gs
pushf
xchg
cmp
inc
mov
push
popf
pusha
rcr
shrl
dec
and
push
test
lahf
or
in
pop
cmp
mov
test
inc
xchg
shlb
mov
sub
fdivs
push
ja
dec
test
inc
aad
inc
lock
lock
cmc
stc
sbb
test
psrld
sbbb
rcrb
inc
int
adc
push
fidivl
inc
jmp
push
ja
and
mov
stos
shll
push
cld
mov
out
xor
mov
inc
pop
fscale
cmp
pop
xlat
jns
mov
pop
jp
push
push
repnz
adc
packssdw
or
inc
scas
and
cmp
lods
sahf
cltd
xchg
stos
push
and
sbb
jnp
les
push
faddl
mov
push
inc
jb
dec
xor
push
test
cmpl
scas
testl
das
push
sub
lahf
subl
jns
push
dec
add
inc
ljmp
add
into
clc
imul
mov
scas
xchg
lcall
das
mov
inc
cmp
cwtl
imul
lcall
lcall
mov
lea
sbb
enter
bound
sub
aam
dec
dec
scas
mov
pop
jno
inc
aaa
xorl
cwtl
aam
fdivrs
jge
mov
std
mov
popw
push
popf
cmpl
dec
dec
cmpsb
jg
and
jge
cmp
fstps
out
popf
sub
insb
jns
push
cmp
xchg
pop
clc
inc
int
jo
addl
xor
fs
mov
mov
mov
xor
into
fisubrl
mov
outsb
lock
ds
and
push
inc
rcrl
arpl
aas
sbbb
xchg
mov
add
cmpsb
repnz
jecxz
popa
mov
adc
int3
loop
push
std
loopne
xor
ja
xor
imul
jo
in
add
mov
inc
jp
rorb
mov
mov
mov
ret
mov
mov
push
shll
int
cmp
sbb
sbb
dec
loope
xchg
sbb
in
cmp
imul
dec
filds
inc
repz
mov
pop
pop
pop
call
lcall
sub
fnstcw
pop
adc
leave
jmp
orb
nop
jmp
dec
sub
incl
cbtw
cmpsb
mov
xor
insb
bound
mull
push
shll
popa
ss
scas
loop
test
push
bound
sahf
push
fwait
push
into
xor
jmp
jl
loopne
mov
inc
test
mov
lea
lahf
pushfw
out
roll
lds
dec
sub
sbb
add
mov
lods
xchg
ljmp
icebp
push
add
jle
xor
jbe
pop
std
add
push
testb
add
in
mov
aaa
mov
or
movsl
adc
pop
data16
mov
inc
cmp
sub
or
xchg
and
sahf
fcompl
scas
cmp
jmp
das
in
cltd
lret
adc
push
push
pop
data16
in
adc
jns
jecxz
orl
adc
jl
adc
ds
cmp
icebp
or
pop
pop
bound
lock
loopne
out
xchg
sub
pop
inc
jmp
addr16
push
jg
fimull
rcrl
rep
outsl
inc
push
adc
hlt
imul
js
test
or
cmp
sahf
mov
jle
insb
xor
jo
iret
stos
call
mov
sbb
nop
and
xchg
xor
inc
and
adc
imul
inc
add
fwait
mov
mov
cmpsb
ret
xor
stos
sbb
ss
into
cmp
push
mov
mov
repz
loope
jns
test
cmc
pop
std
push
jns
std
cmp
pop
xchg
imul
cmp
sti
in
mov
dec
or
inc
jp
xchg
sbb
outsl
sub
cmpsl
fstps
daa
mov
shrl
sti
out
mov
andb
mov
jbe
dec
sub
jbe
hlt
repnz
mov
mov
int3
insb
pop
xchg
sarl
mov
test
inc
shl
mov
loop
into
mov
jbe
xchg
cltd
pop
adc
sub
xchg
arpl
cmp
sti
pop
call
dec
cmp
jbe
addr16
mov
xorl
adc
pop
loop
fs
jbe
loop
in
testl
pop
push
loop
je
jg
aaa
in
dec
lds
fmuls
mov
insl
cmp
mov
test
imul
push
fimuls
push
add
ljmp
jle
mov
sbb
jbe
dec
xchg
jecxz
test
fwait
int
lahf
rcl
pop
popf
loop
xchg
imul
jo
or
lods
add
mov
mov
adc
ret
xlat
inc
jp
pusha
sub
mov
mov
pop
lods
vpackssdw
and
gs
xor
sub
data16
mov
pushf
popf
push
rep
sbb
and
xor
xchg
out
enter
into
xchg
cmp
xchg
ret
xorb
mov
cwtl
jb
adcl
in
pop
jo
inc
leave
push
mov
push
in
cmc
out
cmp
cld
ffree
bound
sbbb
sbb
jg
lods
cltd
add
fucom
pop
jmp
mov
xrelease
sbb
fnsave
cs
dec
inc
test
mov
rcrl
ds
xor
mov
xor
fldl
int3
sarl
sub
imul
mov
pop
insl
mov
pop
adc
pop
inc
dec
mov
negl
adc
fdivl
jne
pop
pop
inc
lock
or
push
cmpb
sub
vzeroupper
subb
pop
inc
insl
mov
inc
in
add
add
xlat
pop
mov
lret
inc
mov
and
ss
lock
xlat
aam
fcoms
cwtl
xchg
inc
or
mov
dec
sbb
jle
mov
daa
jle
xchg
push
inc
hlt
sahf
pushf
pop
aad
popa
dec
roll
jnp
xor
sub
mov
xlat
inc
jge
xor
jg
mov
andb
add
xor
mov
test
ja
lret
dec
dec
cmp
sub
cli
push
ds
insb
dec
or
pop
outsb
add
dec
mov
call
enter
adc
xlat
xchg
jno
xchg
or
es
roll
mov
inc
fstpl
sub
movsb
outsb
mov
aas
int3
or
adcl
hlt
mov
scas
cwtl
xor
inc
sti
fmull
shrl
lret
jl
arpl
sahf
adc
sbb
jecxz
leave
icebp
pushf
sub
test
lret
and
loop
clc
sti
xor
dec
add
faddp
push
jno
outsl
push
pop
lcall
repnz
add
pusha
pop
push
mov
mov
cmp
xchg
lds
sbb
mov
enter
imul
jnp
icebp
inc
sti
lods
dec
cmc
ljmp
in
dec
inc
in
jbe
inc
jmp
in
dec
loopne
orl
nop
xor
or
adc
cli
sub
js
cltd
push
fnsave
loop
inc
arpl
and
cmp
clc
mov
fcmovbe
lds
popl
inc
out
push
jle
push
call
push
sarb
int3
xlat
and
ds
jnp
wrmsr
insb
mov
lcall
out
sbb
cmp
jmp
dec
test
jmp
xchg
into
mov
push
popa
mov
lret
imul
pop
dec
cltd
das
cmp
xchg
inc
xchg
negb
push
not
adc
or
test
je
pushf
leave
and
pop
mov
lea
clc
lret
add
sarl
inc
mov
pop
push
mov
stos
add
sahf
mov
sbbb
jle
les
xchg
jle
sub
pop
test
clc
cmc
pop
shrl
and
movl
lret
mov
aam
shrl
mov
mov
into
scas
je
lods
cmp
xchg
rcrb
mov
sub
push
mov
or
push
xor
icebp
xchg
das
sahf
mov
jb
cmp
movsb
lea
lret
pop
push
scas
inc
add
mov
in
inc
frstor
in
cmp
fnstenv
sub
adc
fisubl
nop
addr16
pxor
icebp
or
cmc
push
dec
inc
incl
in
negl
mov
cwtl
shll
pop
inc
out
or
insb
fadds
inc
sarb
or
enter
repz
xor
int
dec
mov
lods
cs
pusha
add
divb
test
xor
fsubrs
rol
sahf
mov
or
out
and
or
ret
cmp
lahf
les
rcrl
mov
out
lock
xorb
cmp
pop
leave
cli
in
mov
in
int
mov
ss
pop
pop
add
dec
aad
das
lahf
les
jne
std
call
lret
insl
jno
xor
mov
jp
cmp
daa
orb
sub
popa
loopne
test
es
insb
add
xor
sbb
shll
imul
shll
faddp
test
fimull
pop
into
push
lcall
icebp
sub
add
and
lds
dec
dec
rcrl
cld
xchg
push
add
mov
je
movsb
rcll
into
pop
decl
push
pop
add
movsl
push
imull
imul
sahf
cmp
and
jmp
jl
inc
cltd
cmp
mov
std
add
mov
lret
sarb
pushf
pop
sahf
xchg
sub
mov
mov
and
pop
incb
adc
xchg
mov
sqrtps
not
js
xchg
push
ljmp
adc
mov
dec
mov
and
stc
cwtl
pop
jle,pn
cmp
mov
cltd
in
rorb
sbbl
adc
jb
dec
dec
out
jmp
lcall
cmp
cmp
fdivp
data16
and
xchg
fwait
cmc
std
xchg
pusha
cmp
xchg
xchg
mov
sti
pop
ljmp
es
push
dec
xchg
pop
cmp
int
loop
xor
and
xor
lock
and
cmp
jp
mov
cmp
adc
cwtl
jl
inc
jne
iret
jge
dec
cmpsl
nop
xchg
dec
lods
mov
clc
movsb
out
icebp
xchg
ja
mov
ret
push
push
pop
jnp
xor
fwait
mov
or
outsb
icebp
xor
lock
out
push
fists
ja
lahf
outsb
or
rolb
or
or
pop
pop
or
push
out
add
loop
sub
push
jp
lret
test
lahf
pop
js
nop
scas
add
iret
push
andb
clc
push
into
iret
es
sbb
bound
mov
pop
stos
lret
mov
in
cwtl
sub
inc
inc
xchg
mov
jmp
in
in
push
sbb
bound
cwtl
xchg
in
daa
fs
sub
and
ljmp
sahf
out
arpl
fcoml
ja
sub
cli
std
enter
pop
jl
data16
cmpb
movl
push
fcomps
push
insl
push
sbb
xchg
lds
ret
lahf
loopne
out
mov
insl
inc
les
out
push
fwait
push
mov
dec
lods
mov
imul
movsb
mov
adc
jo
xchg
xchg
subb
jnp
jmp
test
outsl
inc
cmp
cmpsb
fiadds
mov
cmp
inc
rcr
mov
jnp
xor
push
and
es
pop
cmpsb
add
pop
mov
es
ret
fldt
inc
aam
jno
push
xchg
aas
xor
sahf
xchg
mov
fldcw
and
jmp
push
pop
outsb
popf
xchg
cld
je
pop
push
loopne
jmp
shrl
and
mov
xor
loope
icebp
movsl
stos
jno
into
mov
jge
dec
push
lea
or
lret
push
call
aas
outsb
push
xor
xor
jnp
rolb
movsb
mov
mov
sub
stc
fisttpl
cmpsl
pop
pop
lds
mov
outsb
sbb
aas
sub
hlt
stc
lret
insb
adc
lods
add
push
add
jns
pop
fists
and
js
fcompl
in
scas
pop
xchg
xor
je
pop
cmp
lods
aad
rclb
cmpsl
cs
push
lods
cmp
popa
xchg
cmc
sbb
push
mov
cld
xchg
jl
pop
lds
pop
and
lcall
arpl
rdmsr
mov
loop
mov
pop
shr
jae
sub
aam
insb
sub
arpl
sub
sbb
inc
inc
mov
pushf
arpl
mov
icebp
jo
sub
lods
sbb
push
into
mov
data16
lcall
sbb
ljmp
aam
enter
popf
inc
jnp
add
stos
xlat
lea
sarb
repz
xchg
mov
imul
adc
test
loope
stos
mov
popf
out
lods
sti
pop
mulb
or
ret
incl
xorb
mov
sub
dec
xor
sti
sub
jo
xchg
ficomps
xchg
lahf
sbb
aaa
pop
int3
mov
push
dec
mov
ja
mov
out
and
mov
xor
add
fwait
push
push
cmpsl
adc
call
push
ret
push
adc
xchg
and
push
xchg
ds
jno
xchg
adc
lock
and
xor
imul
enter
int
je
push
aam
fcmove
pushf
push
divb
pop
cmp
cmp
jns
xor
sarl
hlt
jg
push
mov
mov
adcl
lcall
sbbb
int
pop
mov
sahf
outsl
lds
in
icebp
into
jo
jo
adc
outsb
mov
mov
sbb
pop
jecxz
jns
lods
pop
outsl
lea
jo
pusha
or
fstps
cmp
call
fimuls
push
jbe
int3
divl
mov
push
stos
jecxz
pop
cld
mov
add
ljmp
out
not
mov
lock
lahf
hlt
jmp
inc
pop
aad
mov
jnp
mov
jns
xor
xlat
pushfw
cmp
movsb
and
jo
jl
cmp
out
push
push
xchg
in
in
jl
movb
loop
sub
xchg
sub
xchg
insl
addr16
pmulhw
xlat
mov
mov
or
pop
adc
sbbb
rorl
dec
into
and
sub
mov
ljmp
mov
loope
mov
addl
add
cmovns
sbb
cld
cmp
shlb
or
add
pop
jmp
mov
inc
jge
js
mov
iret
sahf
xchg
pop
or
cmp
mov
or
xor
into
inc
dec
pop
std
inc
js
mov
adc
lock
sbb
fimuls
int
sti
imul
popf
daa
push
cmpsb
jp
adc
in
mov
mov
mov
adc
pop
xchg
mov
push
sbb
roll
sub
inc
inc
ret
push
add
jecxz
xor
xor
cmpsb
pop
divb
cmp
insl
sbb
into
push
rcll
cmp
jge
pop
xchg
add
arpl
sbb
mov
sarl
ret
add
outsb
xor
int
inc
xor
xchg
scas
dec
add
fs
mov
sub
int
in
jne
sti
icebp
rcll
ljmp
jo
ret
lods
cwtl
test
jnp
inc
jnp
daa
pop
or
mov
cld
adc
push
jmp
and
mov
popf
cmp
mov
jno
mov
iret
mov
adc
push
daa
aas
cmpsl
in
adcb
mov
xor
inc
test
testl
ret
orb
scas
or
pusha
mov
in
jo
dec
inc
out
cmpsl
cmpsl
dec
xchg
in
iret
sub
insb
xor
cmpsb
lods
and
mov
xor
pop
xchg
cmpsb
arpl
xchg
xor
adc
dec
mov
es
cltd
fwait
scas
aaa
push
outsb
push
das
clc
js
jl
ret
push
nop
loop
out
sbb
ror
orl
test
push
aad
sbb
movsl
out
push
adc
sbb
jle
adc
fists
fistl
adc
dec
mov
je
mov
les
loop
idivb
faddl
repz
xchg
fcmovbe
adc
js
xchg
sbb
xorb
inc
movsb
arpl
push
xchg
mov
std
and
sbb
repnz
sbb
loop
and
push
fstps
fadds
cwtl
pushf
mov
xor
jp
mov
bound
lea
sti
js
shl
jb
out
jne
lds
adc
jb
decb
sti
aam
pop
inc
fwait
push
test
lods
sbb
sahf
std
aad
xlat
and
pop
stc
ss
test
lcall
test
push
jmp
fdivl
jmp
stos
les
inc
andb
mov
adc
test
test
iret
jge
and
xor
pusha
mov
inc
sbb
ljmp
lods
sub
ljmp
sti
jne
sarb
sbb
jns
xchg
mov
in
rcll
test
enter
sti
or
jbe
and
int3
inc
cltd
test
mov
and
in
stos
popa
cmpsb
lods
ret
inc
in
shlb
lcall
pop
and
mov
cmp
ret
sub
pop
mov
cmc
push
mov
and
sbb
es
lret
jmp
add
sub
hlt
jae
dec
mov
dec
cld
arpl
pop
sbb
adc
movsl
fmull
jb
pop
jmp
ss
or
cmp
jg
jbe
in
adc
dec
icebp
inc
test
int3
aam
arpl
sub
mov
stos
add
loope
pop
adc
xchg
leave
mov
dec
cmp
sbb
push
push
inc
push
xchg
lods
inc
inc
dec
mov
dec
scas
jge
or
mov
pop
nop
ja
sti
fnstsw
pop
mov
aas
or
clc
push
in
inc
jnp
imul
mov
xor
fbld
int3
out
jns
jle
ljmp
push
scas
outsl
mov
add
jo
and
leave
push
inc
ret
pop
cltd
mov
cmc
dec
orl
scas
pop
std
insl
mov
lahf
arpl
pop
xchg
cmp
jo
inc
sub
xchg
rcr
push
ds
jp
push
test
or
pop
sbb
pop
jg
aas
mov
mov
jo
sub
imul
mov
hlt
pop
in
cmp
mov
dec
je
jne
lds
fptan
mov
mov
xchg
outsl
insl
xchg
rcl
ds
add
cmp
test
std
je
pop
push
stos
das
bound
fwait
mov
ficomps
adc
pop
cs
sub
sbb
pushf
iret
or
add
pop
cmc
xor
leave
lods
repz
test
or
sub
jg
stos
out
lahf
adc
int3
das
fst
ror
dec
das
jg
fimuls
mov
jge
lods
enter
stos
fistps
mov
fildll
cmc
outsl
test
jge
movsb
or
loop
repnz
push
loop
fwait
push
jbe
push
cwtl
fldenv
sub
mov
and
scas
inc
sbb
cwtl
clc
push
sbb
enter
or
pop
mov
inc
iret
arpl
add
lret
mov
in
adc
jle
lock
bound
xchg
packsswb
jnp
lods
filds
cli
bnd
lcall
fs
push
xchg
cmp
lock
ret
mov
mov
xchg
out
pop
mov
scas
push
cli
add
fildl
jbe
outsl
jo
adc
xor
cmp
insb
jns
js
outsb
leave
dec
sbb
imul
lahf
sub
sbb
mov
cld
sub
xchg
mov
rclb
pop
sub
ret
insb
cmc
into
inc
mov
stc
popf
cmc
pop
xor
cmp
jns
insl
fistl
pop
rolb
shll
sub
xor
mov
scas
adc
test
cmp
jno
lock
fstpt
sahf
cmp
call
jns
enter
lahf
push
loopne
cmp
out
nop
dec
std
mov
push
adc
add
push
sub
fbstp
pop
cmc
cld
pop
jle
add
ret
and
push
xchg
mov
shrl
lods
test
xor
pop
mov
rolb
or
jp
xchg
sbb
std
push
fbstp
sbb
xchg
loope
and
and
dec
xor
cld
stc
xor
imul
shrb
push
jl
mov
and
jno
and
movsl
push
int
jmp
adc
inc
adc
inc
scas
cmp
cmp
fwait
cmp
push
inc
xchg
dec
ja
xor
cmpsb
push
cld
call
fstps
lcall
cld
aad
inc
xchg
pop
sub
jg
mov
orb
test
ds
dec
inc
inc
sbb
push
pop
inc
mov
or
cmp
in
rclb
je
filds
loop
jmp
jl
sub
call
in
fsubl
xchg
cmp
mov
lock
xchg
movsl
sub
fimull
mov
fcomps
nop
xchg
fldl
cld
andl
push
adc
ret
push
mov
lods
sahf
push
lock
cmp
cmp
xchg
cmc
shrb
cmp
loop
jne
fwait
dec
testl
aad
adc
add
pushf
and
lahf
outsb
pushf
les
push
cmp
cmpsb
je
arpl
inc
out
out
lahf
inc
ror
add
sbb
sbb
xor
mov
mov
in
jp
movsl
call
andb
scas
out
cwtl
aas
or
xchg
mov
or
popa
and
push
xchg
loop
and
ficoms
fisubs
lret
mov
xchg
fwait
mov
push
mov
dec
lea
shrb
adc
scas
mov
cmpsl
repz
je
mov
cwtl
adc
jmp
fisttps
xchg
cltd
cmp
inc
push
jb
out
sub
flds
repnz
jb
stos
test
test
jo
mov
mov
ljmp
cmpsb
and
insb
xchg
mov
mov
fs
xlat
dec
data16
lea
and
mov
in
and
jg
sub
add
clc
jmp
test
mov
mov
scas
jb
dec
cmp
aas
sbb
mov
lcall
xor
adc
enter
scas
into
dec
ret
add
jle
jge
out
cmpsl
loop
jle
scas
lods
mov
insb
leave
nop
sbb
sub
ljmp
hlt
mov
jnp
and
cmp
xchg
cmp
insl
xchg
fldl
sub
test
jge
das
push
repz
dec
pop
and
icebp
mov
es
loopne
pop
addr16
imull
test
xor
jmp
mov
dec
fisubl
push
push
into
xor
arpl
xor
stos
ficompl
ds
iret
in
sbb
mov
bound
jl
xchg
dec
mov
jne
jmp
test
or
cmp
adc
xlat
push
pop
sub
ljmp
ds
dec
jmp
push
imul
dec
cmpsb
fisubrl
push
xchg
xchg
int3
pop
lret
push
cmp
enter
dec
mov
jle
sub
add
inc
mov
nop
and
stos
lret
out
sub
scas
dec
sahf
lds
xchg
cltd
leave
movsl
std
sbb
dec
movsl
mov
loopne
lock
test
mov
sub
dec
inc
scas
repz
movl
push
out
pop
dec
iret
test
xchg
popf
sahf
cmp
sahf
daa
fistpll
arpl
lea
aad
jbe
pop
or
pop
imul
mov
es
jge
dec
lahf
gs
ds
dec
mov
in
inc
cmpl
shll
out
and
and
addb
dec
arpl
loope
dec
xor
inc
pop
je
es
and
enter
call
mov
mov
repnz
add
or
push
add
push
bound
jb
sbb
xor
or
std
pop
jnp
bound
sub
push
into
cli
xlat
sbb
cmp
ds
cmp
shlw
pop
inc
push
add
sbb
and
inc
fistl
call
dec
sti
pop
pop
rcl
fisttps
mov
lods
xchg
shll
inc
or
xor
cmp
adc
pop
fs
and
cmp
jno
push
mov
loope
inc
pop
mov
sbb
or
fchs
pop
mov
adc
std
pop
mov
push
mov
push
ljmp
notl
mov
jmp
xor
mov
adc
cmp
into
inc
dec
mov
ret
cmp
pop
les
mov
mov
push
mov
pop
sbb
cmp
mov
scas
or
popa
sbb
or
test
xchg
je
jp
shll
mov
dec
stos
fnop
mov
sbb
pop
enter
jg
popa
insb
rcr
inc
or
mov
and
or
lcall
xchg
jns
fistpll
ret
out
dec
mov
cmp
enter
mov
adc
sub
xor
xchg
mov
mov
sub
dec
daa
frstor
dec
sbb
sbb
inc
in
mov
mov
inc
test
jno
jbe
call
cmp
fldl2e
push
jb
jns
out
test
or
shrb
out
jle
add
and
inc
lods
jno
out
in
sub
fstps
repz
mov
jecxz
aad
cmc
pop
pushf
js
les
hlt
mov
jl
and
sti
push
loop
stos
pop
adc
xchg
lahf
pop
jecxz
ljmp
push
sub
sbb
outsl
call
jle
add
pusha
inc
fnsave
rcr
sbb
movl
mov
sub
lods
mov
cli
jnp
mov
pop
movnti
mov
fucomip
push
cmp
js
jg,pn
jg
cld
aad
adc
mov
mov
mov
lahf
cmp
icebp
scas
scas
push
stos
pop
add
popw
sbb
test
pop
or
push
xor
aaa
mov
enter
inc
ss
mov
dec
mov
sub
xchg
cmp
dec
mov
aas
add
and
add
mov
add
ja
adc
jle
or
iret
inc
cmpsl
call
dec
dec
add
adc
inc
xchg
leave
jp
adc
jno
or
dec
and
gs
mov
int3
cmp
test
daa
or
mov
mov
mov
imulb
push
pop
jmp
cmp
push
jle
push
inc
and
xchg
pop
mov
das
cmp
xor
cmp
sbb
hlt
or
mov
test
loop
pop
jo
or
gs
fsubl
daa
inc
pop
ficomps
divb
mov
repz
mov
cmp
adc
sbb
dec
imul
cmp
lahf
ds
jmp
insb
shlb
add
mov
sub
xor
cli
ljmp
xchg
add
mov
push
adc
cmpsl
cltd
icebp
or
inc
jns
cs
sub
cmp
sbb
rclb
inc
mov
cmp
sbbl
in
xor
aaa
sbb
dec
int
ds
int
xchg
mov
gs
jmp
mov
push
cmpsl
push
and
add
and
jns
fmuls
ss
jnp
gs
in
or
nop
cli
pop
or
push
pop
mov
cmp
ja
add
lret
loopne
pop
test
or
hlt
out
push
cmp
enter
mov
cmpsl
sub
or
shlb
jns
ret
fdivl
fisubs
insl
cmp
adc
xor
jg
and
mov
cmc
pop
sbb
and
and
fiaddl
dec
andl
add
or
jo
cmpsb
mov
fwait
sbb
xchg
popa
xchg
orl
stos
pop
test
sti
mov
iret
xor
mov
in
xor
sub
stos
cmpsb
jno
jl
add
mov
test
stos
push
sub
insb
pop
fcmovnbe
das
jl
xor
push
push
ljmp
and
repz
xchg
or
mov
rolb
movsb
sbbb
movsb
mov
aaa
out
ret
inc
adc
xlat
adc
pop
repnz
push
scas
push
sbb
test
xchg
out
push
out
jo
andl
hlt
mov
jmp
xchg
cmp
repz
xchg
and
push
icebp
cmp
jmp
ja
push
sbb
jge
or
loopne
jecxz
das
fildll
xor
iret
fiadds
imul
dec
enter
outsl
mov
xchg
gs
stc
mov
inc
rcrb
enter
cmpb
inc
ds
nop
push
xchg
cmp
movsb
xor
mov
pop
dec
mov
ficoml
add
mov
xorb
mov
in
idivl
in
push
enter
fstpt
adc
add
push
mov
push
jge
and
xor
fsub
push
sbbb
mov
lds
fnstenv
pop
scas
iret
dec
sub
sbb
cmp
divl
aad
test
push
ret
xchg
dec
cmpsl
filds
jns
adc
data16
lret
jmp
insb
adc
push
aad
jb
sbb
dec
mov
mov
or
lods
push
pop
xor
cmp
mov
mov
aaa
xchg
aad
mov
ror
and
cmp
mov
and
mov
aam
bnd
sarb
inc
sub
es
ljmp
sahf
sbb
loope
mov
xorl
xchg
add
mov
inc
add
cmp
mov
push
mov
xchg
push
dec
cmp
pop
lret
sub
lcall
sti
cwtl
in
pop
addr16
negl
sub
dec
in
mov
inc
jp
enter
rolb
js
jg
ret
adc
fcmovb
and
mov
lcall
sub
fmull
adc
imul
test
movsl
lods
aas
stc
stc
add
pop
mov
rcll
out
pop
xor
push
xchg
xlat
jb
adc
std
xchg
fimull
and
pop
xor
mov
repz
iret
addr16
fmuls
inc
adc
adc
andb
out
test
adc
pusha
fstpt
lea
adc
neg
out
cmp
clc
pop
ja
jg
or
add
adc
lds
mov
pmulhw
add
cmp
jo
test
into
scas
les
xor
pop
jb
xchg
xchg
dec
dec
test
xchg
sbb
mov
stos
mov
adc
inc
xlat
mov
cmpl
push
push
fs
repnz
dec
gs
push
sbb
xor
in
pop
jne
aaa
or
sub
pushf
mov
popf
enter
out
out
inc
insl
incb
rclb
sarb
jo
or
mov
cwtl
add
fildll
cmp
mov
cmpsb
mov
sbb
and
mov
mov
and
in
xchg
cmp
test
rep
popf
rorb
add
sub
nop
out
xor
sbb
xor
adcb
or
insl
mov
lds
lods
mov
mov
mov
out
imul
push
xlat
lret
mov
mov
jnp
or
xor
jl
cld
ficoml
add
mov
xchg
adc
leave
pusha
mov
pop
dec
or
ja
daa
push
addb
jne
daa
pop
add
aas
sbb
hlt
lret
sub
outsl
jae
movsl
pop
out
push
das
mov
fwait
cmp
cmp
les
inc
add
xor
dec
jl
mov
jp
cs
stos
stos
cmp
add
and
pop
and
arpl
pop
into
ret
std
jg
movsb
setno
add
popa
dec
adc
scas
jo
xlat
mov
pop
es
fcmovnbe
repz
imul
or
mov
data16
iret
add
and
dec
adc
push
push
bound
add
mov
sbb
bnd
in
sub
std
xor
cmp
pop
jle
dec
insl
sahf
sub
push
xchg
pop
mov
mov
fsubr
mov
or
mov
sbb
iret
inc
push
mov
and
jp
movsb
das
add
outsl
mov
xor
xchg
and
mov
scas
ljmp
push
iret
and
push
mov
and
jae
test
sbb
enter
lods
lret
stos
mov
test
add
mov
cwtl
in
push
popa
hlt
insl
xchg
or
das
push
lea
cmp
lcall
add
pushf
xor
into
cmpsb
fmull
es
ret
out
sbb
mov
inc
testl
call
test
push
dec
mov
enter
fidivs
mov
xchg
pusha
les
fcomps
shrl
add
cmpsl
mov
mov
jge
dec
aaa
or
sarl
or
mov
mov
outsl
loope
mov
xor
xchg
insb
sti
inc
and
je
lds
push
jnp
rol
int3
ss
push
pop
mov
pop
fiaddl
lods
jle
jno
fistps
mov
movsb
xor
or
jl
lret
ret
mov
jp
cltd
pusha
out
bound
pushf
xor
js
jbe
mov
adc
xchg
fcmovu
or
jle
jb
aam
push
nop
dec
push
lods
ret
jmp
cmpsb
into
rcll
xchg
in
add
xchg
iret
dec
fstps
pop
lea
add
dec
sub
xchg
mov
pop
xchg
push
or
fnsave
cmpsb
sbb
cmpsl
gs
shrb
sahf
mov
bound
mov
push
in
popa
test
and
in
add
adc
out
popa
fs
dec
and
cmp
push
sbb
sub
inc
sub
inc
enter
rcrb
pusha
lret
mov
jecxz
enter
mov
jno
adc
cld
mov
sub
fisubrl
inc
adc
je
popa
add
cpuid
flds
cli
sti
ds
in
sub
lret
test
xchg
mov
inc
push
and
jmp
stos
mov
data16
push
add
popf
lret
je
and
dec
pop
daa
xor
or
inc
mov
call
and
scas
lods
insb
dec
sbb
push
lcall
xor
sub
or
std
mov
jecxz
mov
loopne
test
xor
xor
leave
cmp
xchg
ret
xchg
push
and
cmp
jne
rorl
xor
mov
add
ja
addr16
adc
jae
adc
aam
les
jp
ret
xchg
add
mov
jl
mov
inc
mov
stos
pop
fcoms
xchg
psllw
lds
andl
mov
cmp
cmp
add
cmp
popa
sbb
cwtl
cli
or
adc
xchg
cli
xchg
sub
and
pop
dec
add
aaa
add
arpl
outsl
push
inc
ret
sub
les
mov
xchg
xchg
push
mov
jno
push
rcr
pop
mov
js
push
jb
dec
dec
es
push
mov
lock
xchg
fcoml
adc
js
xor
rorl
sub
mov
test
rcll
cmpsl
mov
clc
push
imul
mov
arpl
xchg
mov
out
add
filds
in
mov
lcall
mov
add
inc
xor
lcall
mov
imull
fcomp
lea
rcr
add
test
mov
xchg
out
cmp
aaa
sbb
mov
xor
iret
xchg
stos
or
ja
push
mov
cmc
mulb
sbb
pop
xchg
pop
scas
cmp
mov
in
cwtl
jl
inc
jl
sbb
add
into
xchg
and
sbb
push
xor
pop
bound
repz
xchg
mov
mov
jg
adc
or
and
out
cmc
xor
adc
push
pop
fs
lcall
pop
jl
out
dec
and
xor
test
bound
adcb
jo
mov
test
or
cmp
mov
outsl
add
mov
xor
mov
or
cmpsl
jbe
push
pop
cmp
daa
sbb
xchg
clc
repz
daa
out
cmp
inc
repz
andb
dec
lret
dec
shl
ljmp
es
pushf
idivl
popa
or
roll
mov
fwait
rcr
int3
imul
mov
shll
nop
imul
cmpsl
fldt
inc
xchg
and
daa
orl
nop
aaa
and
sub
mulb
xchg
push
push
or
into
xchg
ja
push
sub
jo
sub
pop
test
stc
mov
sbb
push
test
xchg
adc
xor
xchg
or
xadd
bound
sbb
testb
pushf
sub
je
icebp
inc
divps
test
jg
push
setp
ret
cmovne
and
scas
jae
push
push
xchg
lds
int3
push
cmp
mov
xchg
push
and
outsl
push
lds
es
icebp
xchg
push
sahf
sub
dec
fcmovne
je
rorb
add
mov
ror
dec
add
movsl
gs
inc
stos
mov
adc
xor
sub
inc
stc
sti
jo
rcr
repz
mov
jge
bound
mov
outsl
xchg
inc
inc
popf
pop
rcr
or
and
mov
bound
cmp
sub
fsubp
inc
decl
sbb
jl
push
or
es
push
xor
xchg
out
add
or
les
and
mov
pop
xor
inc
pop
outsl
scas
push
push
arpl
sub
xchg
push
jp
je
mov
lds
mov
sbb
clc
rcll
and
jmp
ds
dec
pop
in
dec
popa
or
ljmp
pop
cmc
ljmp
enter
fsqrt
sub
inc
movsl
mov
imul
mov
xor
or
hlt
mov
lods
fidivl
xchg
dec
pop
test
nop
and
pop
push
push
ja
in
sti
adcb
mov
sti
imul
xchg
inc
fstpl
jle
and
push
sub
xor
mov
or
sub
cs
dec
shr
loope
rorl
inc
push
xor
ret
lea
stos
xor
and
or
pop
xchg
out
xchg
jnp
mov
es
punpckldq
clc
mov
clc
mov
bound
ficoml
or
sbb
and
pop
xor
lods
sbbb
es
adc
daa
xchg
out
fwait
sti
cmp
add
adc
dec
add
mov
movsl
mov
cmp
ds
adc
aam
inc
lods
sbb
push
xor
jne
cs
sub
clc
xchg
lea
mov
push
ljmp
popa
cmpsb
loope
sub
mov
aam
mov
push
in
xchg
sbb
movsb
sub
ljmp
xlat
imul
sti
push
or
and
or
pushf
aas
inc
cmp
pushl
mov
fistpll
jmp
leave
xchg
popa
lcall
dec
mov
and
movsb
pop
jmp
sbb
push
frstor
push
dec
clc
stc
mov
sti
pusha
pop
cltd
xchg
jns
fcomp
es
cmp
fbld
test
sbb
sbb
push
xor
repz
lret
dec
xlat
mov
rcll
lret
mov
ljmp
repnz
call
roll
xor
scas
push
sbb
inc
ficompl
mov
mov
call
ret
fwait
ret
daa
icebp
fwait
sub
mov
xor
cmp
push
push
pop
jb
add
sahf
pop
dec
pop
dec
xchg
mov
and
leave
cmpsl
cmp
shl
mov
out
cld
mov
mov
xlat
inc
arpl
add
int
or
xor
or
sub
mov
out
jp
or
out
jl
add
aam
or
jle
inc
outsb
mov
subl
push
mov
mov
mov
sub
jge
fwait
cwtl
or
out
nop
pushf
mov
inc
in
loope
adc
fidivrl
in
push
push
jle
add
xchg
cltd
fsts
jo
mov
rorb
sbb
outsl
inc
xorb
in
ja
sbb
inc
dec
sub
leave
cld
jnp
movsl
or
mov
xor
int3
mov
fcomps
mov
pop
inc
sub
loopne
fldcw
push
jmp
lock
pop
sub
ljmp
addr16
sub
xchg
push
and
mov
xchg
cld
mov
popa
std
jmp
xor
add
call
adc
jns
dec
testl
sub
lahf
or
mov
or
jne
insl
fidivrl
mov
add
adc
add
jecxz
stos
call
lret
sti
std
sub
xor
test
pop
sti
imul
add
cmp
sarb
rclb
mov
shlb
xchg
sbb
add
pop
push
dec
dec
inc
in
divb
arpl
mov
lods
loop
and
jbe
call
push
jnp
or
dec
xor
outsb
daa
mov
mov
xchg
fmuls
jne
mov
dec
sbb
das
push
addr16
out
adc
cld
inc
pop
add
mov
shlb
mov
gs
fadds
inc
xor
jp
and
xor
je
shll
fnsetpm(287
addl
js
fsubl
pop
lock
or
mov
stos
ret
xchg
testl
fwait
xchg
xchg
adc
lods
sbb
scas
ss
mov
xor
popa
bound
push
icebp
ds
and
cmp
inc
cmp
lcall
cmpl
mov
sbb
jg
push
push
dec
psubsb
xor
imul
cli
movsb
sub
outsb
fildll
push
dec
mov
enter
pop
aas
cmpsb
adc
ss
ret
push
and
jl
push
out
pop
popf
cmc
pop
inc
mov
cmp
pop
orl
xchg
cli
push
push
scas
popl
scas
test
cmp
js
out
mov
sbb
jg
test
mov
adc
fsubrl
call
gs
daa
movsl
cld
inc
mov
cmp
push
je
fdivr
mov
lahf
mov
or
mov
adc
mov
mov
mov
int3
loope
addr16
xor
pop
sub
ret
push
or
into
xchg
adc
mov
mov
ss
mov
pop
testl
addr16
adc
dec
std
jp
cmpsb
lds
loope
mov
add
mov
ret
pushf
mov
adc
sbb
and
mov
jno
popa
jno
xchg
sahf
frstor
or
push
lods
xlat
inc
loop
sub
sub
rorl
inc
jge
cmp
stos
mov
ficomps
sub
inc
sub
sti
jns
adc
ret
jno
push
or
jno
inc
xor
ja
cmp
and
xchg
rcl
imul
insl
subl
or
inc
inc
rcl
or
lods
inc
scas
or
xchg
mov
mov
lret
cmp
inc
inc
je
xchg
or
outsl
jno
mov
jns
sbb
inc
les
xchg
mov
sbb
dec
xor
sub
push
rcrl
stos
mov
pop
jmp
andb
xchg
rorl
loope
jb
xor
lock
ljmp
addl
jo
mov
sbb
pop
add
or
leave
int
cli
testl
inc
dec
shll
sbb
pop
or
or
xchg
inc
test
popa
pushf
int
push
add
push
sub
out
mov
shlb
or
aam
cmp
int3
adc
movsl
and
rcl
cld
dec
mov
cld
add
insb
push
push
pop
xor
leave
push
xchg
jns
push
sbb
fs
pop
mov
aaa
mov
sarb
lret
lods
imul
repz
lock
cmp
cmp
testb
mov
cwtl
bswap
inc
fnstenv
mov
lods
mov
into
or
xor
adc
mov
sbb
arpl
repnz
jp
cld
mov
pusha
or
movsl
mov
cmp
popa
xchg
pushf
ljmp
mov
lcall
add
int
scas
movb
test
insb
mov
pop
subb
push
mov
sbb
fs
loopne
inc
stos
and
mov
cmpsb
stos
inc
roll
push
adc
xor
or
bswap
ds
sub
aam
and
lcall
mov
push
and
ret
jns
add
jmp
sahf
jmp
into
add
adc
mov
fs
adc
lock
cmp
mov
into
mov
sub
fcmovne
lods
cmp
cld
fisttpll
pop
test
or
nop
jmp
dec
sahf
pop
popa
cmp
cmp
ret
jg
sub
push
repz
jns
jg
nop
cmpb
xor
xorl
fstpt
mov
sub
mov
sbb
pop
xchg
std
xchg
insl
mov
cmp
icebp
cwtl
ret
and
xchg
inc
push
out
pop
mov
in
push
pusha
clc
out
push
fwait
int
xor
ljmp
cmp
cmp
sbb
lods
fmull
fistps
stos
daa
sub
sbb
ja
mov
or
push
subl
push
leave
mov
dec
jl
sbbl
add
call
xlat
sbb
xchg
sbb
dec
add
mov
pop
cwtl
adc
mov
test
lret
and
xor
xchg
mov
and
push
fidivl
les
and
cmovae
mov
fists
leave
enter
out
pop
fwait
sbb
pop
popa
jae
aad
sti
cmp
xchg
ja
cmp
fs
les
mov
mov
movsb
cmc
add
jecxz
adc
pop
mov
imul
ja
xchg
shrl
aaa
in
sbb
push
mov
scas
enter
aad
lods
pop
push
repz
cmp
pop
lret
jb
sti
jmp
pop
ret
mov
fstps
xor
nop
sti
test
aad
mov
pop
inc
call
cwtl
mov
aad
sbb
dec
or
rorb
jbe
adc
cmp
jnp
fs
std
rorl
xchg
push
pop
push
cmpsl
insl
pop
aad
lcall
jp
jle
pop
xor
or
nop
add
sub
cmp
push
xor
add
and
mov
sub
add
mov
pop
mov
daa
out
mov
in
push
push
fldenv
push
mov
push
fsub
fdivrp
push
in
add
adc
divb
dec
ficoms
cmp
pop
daa
test
stos
outsl
push
stc
cmp
shl
fwait
jmp
push
std
jo
insl
adc
out
std
xor
daa
bound
loopne
jle
inc
adcb
lea
xor
jnp
loop
aas
xorl
pop
jl
test
in
mov
push
push
mov
xchg
adcl
mov
xchg
xchg
lock
enter
push
sbb
outsb
int3
repnz
subl
in
inc
jne
sti
dec
mov
in
pop
pop
adc
out
and
imul
cmpsb
adc
sub
into
jecxz
sbb
stos
push
lods
imul
mov
adc
or
ja
pushf
sub
fs
dec
mov
xchg
mov
mov
xlat
rorl
jecxz
scas
mov
push
stos
sbb
push
enter
xor
dec
mov
xchg
or
sahf
aam
or
and
jb
mov
stos
insl
mov
es
mov
push
cmpsl
cmc
jecxz
mov
cmp
pop
pusha
push
nop
rcrb
addb
iret
fadd
cs
jp
mov
jge
cld
adcb
adc
scas
inc
mov
sbb
sub
mov
mov
repz
and
mov
inc
mov
inc
bound
pop
lcall
jbe
jae
mov
movsl
xchg
push
mov
aaa
push
mov
sbb
cmp
sub
cmp
dec
pop
inc
es
adc
add
jne
dec
pop
jbe
notb
xchg
inc
jo
jg
stc
hlt
pusha
inc
mov
sbb
push
push
pushf
orl
addr16
stos
mov
test
fcomps
gs
lock
loop
dec
lods
das
and
hlt
cli
inc
mov
push
or
jns
sub
testl
add
enter
mov
pusha
xchg
cmp
imul
fwait
add
pop
jp
incb
jb
mov
push
jl
cltd
cwtl
cmp
aaa
sub
movsb
out
pop
in
cli
in
add
inc
es
jmp
mov
fiadds
in
sbb
push
pop
out
pop
loop
imul
pop
cmp
ljmp
hlt
fildll
pushf
fistl
mov
outsl
roll
dec
xor
xchg
xor
sti
clc
cmpsl
out
push
push
jle
and
mov
jo
fidivl
lret
jl
jnp
cmpsb
ds
or
addr16
rorl
inc
outsl
movsb
fmull
lds
mov
jge
cmp
mov
push
xchg
push
popw
sub
les
call
xchg
mov
jb
adc
pop
xor
sbb
add
mov
rcrb
mov
or
outsb
push
mov
jecxz
pop
jno,pn
pop
jne
out
jae
pop
sub
mov
leave
dec
int3
jno
inc
in
mov
addb
adc
stc
xchg
stos
inc
inc
lods
jbe
int3
push
lret
loopne
cmp
cwtl
fcompl
cmp
out
push
inc
fisubs
pushf
inc
enter
jmp
push
push
jb
pop
fsubrl
dec
jbe
pop
shll
pop
mov
loop
std
pop
jae
push
push
push
ja
das
mov
pushf
and
fdivrs
cld
sub
mov
rcl
aad
lds
pusha
lret
leave
or
or
fimuls
outsb
jg
sub
mov
ficompl
cmp
mov
outsb
leave
push
int
lods
adc
fidivrl
les
xchg
mov
int
and
mov
xor
stos
add
sub
mov
mov
xchg
inc
mov
shrb
daa
call
mov
rcrl
or
push
pop
stos
xchg
out
es
shl
cmpl
xor
repnz
aaa
inc
jmp
sub
or
jb
mov
ss
sbb
rclb
call
out
pop
lock
jmp
pop
loop
inc
push
fisubl
out
pop
mov
cmp
les
or
push
add
jle
inc
hlt
mulb
outsl
xor
mov
mov
es
cwtl
add
pusha
push
nop
push
ljmp
stos
cltd
orl
cs
mov
int3
icebp
push
push
dec
mov
or
inc
jno
or
fsubrp
jle
cmp
aad
test
arpl
mov
andl
jb
inc
xchg
pop
out
nop
xor
mov
into
push
movsl
inc
cmpsl
mov
shl
xor
sub
mov
sub
mov
cld
push
and
jmp
pop
xchg
insl
cmp
mov
jp
ficoml
xlat
inc
inc
fimuls
dec
jo
sti
fsubr
sbbl
test
mov
fstpl
adc
test
push
sub
test
fsubs
jl
push
push
push
fnstenv
lcall
pop
ficoms
adc
enter
ss
mov
addb
xor
fistl
add
push
mov
adc
mov
js
stos
xor
call
lcall
pop
inc
stos
xchg
cmp
jo
cli
push
dec
mov
lods
cmp
int3
movsl
out
mov
lods
jbe,pt
fcomi
add
rcl
jmp
sbb
arpl
pop
movsl
cmp
in
push
mov
iret
stos
sub
fidivrs
mov
lods
mov
pushf
cmp
int3
xor
bnd
xchg
cld
jno
lcall
decl
stc
jns
jp
movsl
xlat
push
aad
cwtl
mulb
mov
push
pop
xor
fcoml
fstp
popa
lds
xchg
mov
sbb
pop
fs
and
lods
add
ret
push
ss
cs
ficomps
repnz
aaa
mov
inc
mov
adc
js
enter
xchg
aaa
and
sub
add
adc
cmpsl
mov
sbb
mov
imul
in
fnstsw
shlb
fwait
int3
xor
lds
nop
loope
das
into
pop
cltd
add
pop
xchg
xor
add
out
push
pop
xchg
sbb
stos
test
test
in
pop
or
insb
pop
jp
pop
mov
clc
inc
xor
sahf
fistpl
add
int3
sub
mov
inc
mov
mov
pop
pop
daa
out
testl
push
push
iret
sub
subb
cmpsl
pop
dec
xor
clc
xchg
jmp
imul
mov
mov
leave
out
fmul
adc
in
data16
mov
mov
enter
jp
add
add
jge
pop
sbb
int3
xor
std
push
push
push
inc
hlt
loope
adc
popa
dec
sub
in
and
lds
cmp
mov
je
xchg
and
pop
push
mov
push
inc
adc
xchg
data16
push
pop
mov
arpl
or
jb
xor
nop
jnp
arpl
and
add
mov
cmc
push
leave
push
mov
sub
adc
les
lods
stos
mov
xor
inc
aad
or
cmp
aas
mov
sub
pop
cmpl
pop
lret
iret
inc
mov
or
sub
fbstp
mov
scas
adc
js
mov
and
push
mov
test
aam
mov
orl
out
add
mov
mov
sbb
scas
jmp
push
call
xchg
cmc
jne
dec
adc
push
fldl
mov
mov
fdivrp
mov
fistpll
mov
out
push
nop
and
sbb
mov
ret
lcall
mov
shrb
inc
in
loop
add
lret
fisubs
aas
cwtl
nop
fldenv
cmp
shl
xchg
fldt
out
subb
adc
lahf
jns
jno
push
ret
push
les
dec
loopne
addr16
xchg
jbe
sub
std
sbb
and
inc
mov
add
mov
dec
lahf
cmp
out
bswap
rcll
or
lcall
mov
inc
inc
xchg
dec
mov
mov
movsl
in
icebp
vmulsd
jg
out
inc
mov
fs
and
ljmp
jle
push
cmp
inc
lea
xor
xchg
xchg
mov
imul
daa
leave
pop
es
xlat
xchg
xor
test
cmc
data16
sub
mov
es
add
mov
sti
fisttpll
lock
push
cmpsb
aas
sub
cmpsb
and
lea
rorb
cmp
cmpsb
push
inc
jmp
test
jae
add
xchg
lods
pop
ja
jmp
xor
sub
call
fisubrl
sub
aad
stc
stc
inc
cmp
ficoml
icebp
inc
icebp
in
xor
sysret
dec
cmp
or
enter
fistpll
mov
sbbb
pop
mov
adc
cwtl
movsl
dec
decb
cmpsb
stc
fistps
xchg
sbb
mov
fldcw
cmpsl
out
movaps
pop
negl
adc
xchg
fsubs
xor
dec
or
imulb
or
dec
add
jns
cltd
clc
dec
or
imul
shlb
popf
enter
enter
call
fwait
xchg
jp
sbb
push
xor
push
xchg
adc
xlat
stos
fcmovnb
mov
sub
push
mov
add
repz
mov
stos
mov
cltd
aam
lret
add
ss
cmp
lock
cltd
les
push
jnp
dec
stos
adc
test
sti
mov
add
loopne
test
cmp
sbb
mov
and
test
sbb
mov
dec
xchg
or
dec
xchg
pop
insl
fsub
mov
pop
mov
rol
add
lods
add
sarl
aaa
dec
jmp
je
stc
ja
sbb
xchg
in
push
iret
xor
test
push
jge
mov
inc
xorl
repnz
iret
mov
dec
inc
scas
loop
pop
aam
into
push
xor
cmp
shll
mov
lahf
ja
or
lahf
sub
movsb
lods
lock
hlt
xchg
mov
movsb
shr
fldcw
pushf
inc
mov
in
mov
ss
sub
sbb
inc
push
mov
pop
or
or
jns
cmp
in
jb
and
clc
lret
xchg
jge
dec
les
or
jge
pop
rcll
mov
mov
cli
pushf
mov
repz
xchg
out
dec
jg
mov
aam
cmp
enter
test
xor
sar
clc
fs
movsb
and
cmp
adc
aaa
push
in
cltd
jo
dec
cmp
iret
dec
es
daa
leave
xchg
aaa
clc
ds
mov
add
mov
subl
outsl
fdivrl
iret
xorl
or
ljmp
sub
dec
sub
fiadds
in
sub
aam
outsl
push
cmc
movsl
xchg
adc
insl
arpl
and
sub
mov
push
test
fistpl
jmp
imul
add
mov
jmp
fcoms
inc
gs
call
daa
mov
out
push
cli
push
ret
dec
inc
mov
or
imul
cltd
adcb
xor
and
call
out
add
pop
roll
cmpsl
test
dec
nop
fiaddl
lea
fcmovb
inc
or
shll
dec
sub
int3
popa
ficoml
popf
mov
add
daa
or
aad
fstps
jp
add
or
xor
mov
fsubrl
or
and
movsl
cs
and
mov
pop
gs
sub
in
int
cmp
pop
das
test
mov
cmp
loope
jne
inc
insl
in
and
idivb
lods
pusha
test
jp
mov
add
mov
ss
insl
mov
jge
sti
dec
sbb
cmp
adc
pmovmskb
add
fsubs
js
addl
xor
and
out
test
adc
mov
in
dec
jle
in
or
cs
aad
mov
test
xlat
cmp
xchg
pop
out
push
into
fldl
push
in
loope
pop
xor
ror
stos
ret
int
push
clc
fsub
push
jbe
pop
dec
xor
data16
fabs
daa
and
in
jp
out
or
dec
out
mov
xchg
ds
addr16
test
inc
icebp
pusha
andb
cltd
hlt
mov
sub
loopne
jmp
cltd
sahf
add
inc
leave
iret
dec
pop
loopne
leave
pushf
mov
adc
mov
decb
fdivrs
mov
iret
icebp
ret
shrb
cmp
test
adc
sub
fbstp
xor
fcmove
sbb
pusha
int
movsl
push
inc
pop
xorl
int3
cs
sbbl
jbe
mov
fsts
stc
pop
call
lds
pop
shrb
dec
fsts
je
sub
add
test
loop
int3
ror
mov
mov
fwait
ljmp
stc
cli
outsb
ja
mov
adc
outsb
mov
xor
rcl
add
fwait
adc
ficoml
int3
in
push
test
data16
lahf
stos
ficoml
sub
sub
jb
popf
dec
mov
insl
inc
push
lods
push
xchg
in
lahf
pop
push
in
cltd
sub
test
lret
orl
imul
andb
hlt
cltd
loop
mov
ret
nop
pop
xchg
pop
xchg
and
mov
push
pop
dec
pop
mov
xchg
lret
add
mov
aam
adc
cmp
fstpl
cmovne
mov
fucomi
adc
dec
sub
adc
inc
xchg
inc
xchg
xor
imul
add
pop
lahf
ss
pop
add
xor
shll
andl
jno
and
dec
push
outsb
xchg
es
xlat
into
test
pop
mov
pop
outsb
dec
jne
sarb
je
out
mov
in
add
negb
sbb
push
xor
mov
sbb
xchg
inc
ret
mov
pop
fs
lock
aaa
xor
jae
inc
out
addb
loop
mov
ss
xchg
arpl
sbb
das
movsb
lea
push
inc
aad
imul
xor
rorl
cmp
scas
mov
xchg
or
and
xor
or
xchg
out
rol
mov
sbb
stc
or
mov
cld
cmp
pop
out
cmp
add
mov
xchg
ljmp
rclb
inc
es
xor
int
loopne
mov
and
rcrl
les
mov
mov
dec
sti
insb
jbe
sahf
lock
popf
push
gs
leave
fs
stos
push
stos
pop
jmp
std
sbb
fmull
mov
inc
hlt
xchg
inc
fwait
and
dec
lock
xchg
imul
xchg
dec
jmp
mov
jle
leave
sahf
pop
ja
jo
and
test
call
xorb
jbe
std
mov
incb
inc
cmp
or
add
ret
cmp
mov
mov
cmp
push
pop
bound
adc
mov
mov
jg
sahf
adc
cli
push
out
sahf
insb
jle
add
xor
imul
popf
cltd
popa
decl
test
pop
dec
lahf
shl
mov
xchg
mov
push
mov
cmp
addr16
and
pusha
cmp
clc
arpl
and
cmp
or
mov
incl
mov
and
or
inc
and
mov
insl
sbb
jmp
test
es
lods
fwait
mov
movsl
xor
jo
pop
pop
pop
int3
enter
dec
xchg
mov
and
xchg
les
je
push
shr
jmp
add
lods
dec
xchg
adc
mov
hlt
pop
add
add
fists
ja
repnz
mov
ret
mov
jl
adc
and
mov
insl
mov
and
push
add
fxch
nop
mov
js
lret
add
stc
xchg
sub
stos
mov
int
mov
test
sbb
icebp
mov
mov
and
mov
cmp
mov
sahf
fwait
xchg
dec
ljmp
das
imull
jno
sbb
inc
mov
or
pop
cmc
pop
pop
pop
xor
mov
fs
lds
ret
lret
inc
sahf
stc
in
adc
daa
xchg
adc
lods
insb
inc
mov
clc
mov
aam
movsb
add
xchg
mov
xchg
fs
iret
push
pusha
popf
cmpsb
fstps
mov
aad
push
mov
add
insb
and
xor
iret
inc
lods
mov
movsb
inc
or
int
sub
xor
mov
mov
test
mov
adc
inc
jb
push
pop
mov
sbb
jb
jp
and
inc
lods
cwtl
push
inc
and
inc
inc
pop
fcompl
cmpsl
xchg
cli
mov
pop
add
xchg
aas
mov
es
dec
xchg
adc
push
mov
mov
lret
xchg
imul
xor
in
imul
arpl
push
jno
dec
inc
fadd
mov
xchg
cmpsl
loopne
add
in
popf
in
rorl
xchg
push
pusha
push
dec
or
imul
mov
pop
in
push
jg
sbb
jecxz
xchg
std
sahf
test
sub
stos
cmpsl
cltd
mov
mov
adc
add
mov
xor
clc
or
pop
push
jb
fidivrl
pop
insl
push
sub
pop
in
idiv
push
inc
mov
iret
ret
cwtl
stc
xor
in
cmp
repnz
sub
outsl
clc
sub
inc
inc
xchg
stc
lcall
inc
cmp
or
adc
pop
cmp
fs
jge
lret
sbb
std
outsl
mov
ret
in
mov
pop
inc
loope
pop
out
pushf
lds
cmp
add
test
gs
es
fstpt
stos
mov
pop
inc
mov
xor
rclb
stos
loop
or
add
bound
insl
mov
xchg
loop
mov
shl
cs
popf
aad
mov
je
incb
aam
lock
test
aad
dec
stc
sub
adc
std
sub
jae
jg
bound
push
jns
movsb
adc
push
pop
xchg
push
std
xor
xchg
pop
repz
dec
pop
test
xchg
shrl
pop
fiadds
or
push
faddp
cmp
sbb
das
jle
das
push
xlat
jle
jb
dec
sbb
sarl
xor
mov
in
jmp
dec
lcall
adc
or
rorl
inc
xor
lret
cmp
test
xchg
stos
dec
sub
das
insb
adc
pushf
ret
aas
cwtl
pushf
mov
cmp
push
les
mov
hlt
jns
dec
cmp
in
dec
adc
bnd
invd
ret
mov
popa
into
pop
push
stos
daa
push
aas
pop
mov
addr16
pushf
push
lret
sbb
pop
mov
or
popf
mov
andb
dec
addr16
sub
gs
pop
jae
xchg
cmpsb
lock
sbb
lods
mov
jp
mov
cld
sti
push
xchg
mov
pop
add
cs
pop
movsb
add
or
xchg
shll
mov
leave
and
dec
inc
dec
or
xor
adc
popa
popa
subb
test
mov
je
data16
scas
out
ja
mov
mov
and
mov
sub
cmp
xor
lods
add
xlat
jge
rcrl
flds
test
dec
pop
push
dec
jae
sub
popa
push
xor
or
jns
or
repz
adc
add
and
leave
xchg
inc
lods
sbb
rcrl
mov
adc
pop
bound
push
les
imul
aad
in
repz
std
mov
adc
inc
cmp
call
push
ret
jo
outsb
add
sub
imul
mov
jne
cmp
rcr
call
and
lret
jp
in
std
lret
sub
mov
in
arpl
ret
jmp
test
mov
and
sub
mov
pop
imul
jmp
inc
out
movsl
out
mov
fldl
scas
xor
pop
adc
rorl
lcall
jecxz
pushf
into
inc
repnz
lcall
mov
push
pop
jbe
cwtl
push
fxch
add
call
cmp
imul
sahf
sbb
xchg
test
popa
jecxz
lods
mov
adc
lcall
test
push
gs
ds
faddl
scas
mov
cmp
cmp
rcrb
push
pop
inc
popa
outsl
and
push
or
fldenv
iret
pop
loopne,pt
fmuls
fsts
add
jb
lret
adc
mov
dec
mov
fcompl
sbb
mov
outsl
mov
add
mov
icebp
mov
xor
xchg
aad
arpl
mov
not
jl
arpl
push
movsl
ja
mov
xchg
gs
sub
test
shl
pop
in
push
lods
loope
dec
insb
js
mov
lahf
sbb
mov
ret
xor
mov
pop
rolb
mov
mov
mov
in
sbb
or
sub
test
and
mov
sarl
int3
add
jns
xchg
ret
gs
mov
xchg
pop
cltd
pop
scas
sahf
dec
mov
ds
mov
vphaddbd
out
push
test
out
scas
and
mov
mov
cltd
push
push
mov
call
mov
add
inc
pop
int3
pusha
lods
cmp
cmpsl
xor
pop
jae
bound
lahf
xchg
or
pop
fdivrl
cmp
and
mov
in
push
loop
lss
movb
inc
and
pop
fildl
sub
outsl
pop
cmp
loopne
sub
xchg
adc
stc
sbb
insl
aaa
add
push
hlt
pop
loope
or
hlt
nop
jae
pushl
jns
xchg
iret
stc
lea
cld
jno
mov
cmpsb
inc
mov
mov
in
pop
testb
lea
mov
je
dec
dec
mov
cwtl
xchg
xor
inc
testb
outsb
mov
mov
and
inc
movsl
fistl
push
sub
xor
push
pop
lcall
shr
mov
xor
lods
ret
mov
adc
xor
lret
insb
sub
pop
loopne
pop
bound
outsl
ret
loope
push
or
inc
popf
lret
lcall
imul
mov
add
pop
cmp
xchg
jnp
mov
mov
mov
std
cwtl
sbb
xchg
enter
or
sub
jno
or
popl
sub
jg
mov
out
or
les
fcmovne
test
push
data16
mov
notb
pop
add
lahf
sub
test
mov
xchg
clc
sub
mov
ljmp
and
repnz
in
xor
pushf
nop
xor
and
inc
mov
mov
jns
pushf
rorb
mov
adc
mov
dec
ss
imul
stc
or
sub
sbb
cmp
mov
fs
enter
xchg
sub
rcrl
rorb
leave
cli
cli
sub
xor
adc
les
push
mov
or
cmp
mov
push
pushf
mov
mov
mov
jne
insb
inc
or
int
jb
js
pop
lea
cld
add
xor
and
lods
test
or
rclb
xor
or
icebp
xor
xor
jnp
imul
xor
cmpsl
lcall
mov
aaa
gs
repnz
adc
lock
xchg
lods
stos
xor
inc
add
pop
cmpsl
jne
inc
fistpl
jnp
xorb
adc
addb
sub
dec
shr
xor
gs
fwait
xchg
xor
cmp
cmpsl
mov
pushf
inc
push
inc
pop
xlat
inc
stc
daa
add
jbe
out
mov
arpl
xchg
gs
jno
test
xchg
push
mov
arpl
pop
scas
in
stos
call
sub
hlt
inc
cli
push
xchg
shll
jmp
pop
ss
cmpsl
push
lods
xchg
cltd
cmp
arpl
dec
and
pusha
lock
xchg
mov
push
in
sub
mov
sarl
pop
daa
fwait
push
roll
pushf
sub
mov
or
test
dec
rorl
rcrl
loopne
ljmp
jns
mov
test
imul
rol
cmpsb
jecxz
aad
xchg
scas
gs
and
in
fisttpl
dec
das
and
pop
out
pop
sub
mov
aam
call
insl
push
or
into
or
stos
out
or
xchg
add
addl
insl
outsb
aaa
gs
jns
stc
enter
cmp
cltd
push
outsl
clc
inc
jge
cld
xchg
data16
test
dec
imul
leave
lods
sti
mov
in
push
jae
leave
xor
int3
mov
inc
icebp
sub
xor
loopne
icebp
push
push
inc
jnp
add
add
idiv
lods
pop
popa
xchg
ret
pop
in
lock
sti
incl
inc
mov
adc
mov
mov
or
scas
loopne
fsubrp
or
mov
jb
ret
insb
push
mov
dec
stos
test
rcr
pop
out
ds
cwtl
testb
or
negl
cmpsb
xchg
fildll
pop
outsl
inc
or
mov
cmp
imul
push
dec
leave
jno
enter
sub
mov
std
mov
xor
sbb
inc
dec
push
sub
mov
mov
sub
adc
xor
or
xchg
aad
and
sub
sbb
in
iret
sbb
xchg
int
fimuls
je
xchg
cmp
inc
movsl
pop
mov
mov
pusha
inc
xor
in
pushf
int3
or
popa
cmp
rcrl
popf
sbb
loop
push
add
das
shrl
adc
out
cwtl
push
sti
lret
dec
fcomp
test
mov
ret
mov
and
pop
rclb
fwait
div
xchg
mov
shlb
shlb
mov
sub
cli
inc
xor
jb
mov
dec
mov
mov
pop
into
push
xchg
xchg
mov
pop
sbb
cmpl
lods
inc
jle
aaa
xchg
jmp
sbb
shll
mov
notl
push
pop
pop
fldl2e
popf
jns
ficompl
nop
pop
push
fs
pop
sub
js
fcomps
fsub
push
pop
ss
pop
in
jns
das
sub
andb
in
shr
pushf
push
pusha
clc
sub
pop
daa
sub
mov
jp
ret
stos
mov
add
inc
cld
pop
add
pop
mov
fcomi
je
popf
xor
inc
scas
push
xchg
or
out
js
jecxz
sbb
pop
xor
or
adc
inc
fmull
sub
mov
dec
sub
xchg
xor
cmc
into
jp
icebp
rcrb
lcall
mov
ds
cmpsb
mov
js
or
out
inc
rol
ds
cmp
insl
add
push
sbb
dec
mov
dec
lods
pop
int
imulb
mov
ljmp
dec
mov
inc
addr16
pop
sub
mov
out
scas
out
aam
mov
sbb
imul
int3
inc
cltd
xchg
aaa
andb
pop
aas
lret
jg
cmp
xchg
lcall
rol
xlat
jge
dec
xchg
cmp
xor
xor
cmp
int
sub
lds
test
lds
xchg
imul
cmp
cwtl
pop
mov
xchg
mov
cmpb
aam
or
jmp
push
fbstp
popf
fildl
test
push
xchg
mov
or
jg
pop
sbb
sbb
stc
adc
in
dec
ficoms
cmpsl
and
pop
imul
int3
cmp
ficompl
mov
pop
sahf
sbb
xor
adc
cmp
sub
pop
jne
and
fimuls
add
std
imul
xchg
arpl
add
adc
fstps
mov
shl
adc
jle
jge
pop
mov
and
mov
mov
enter
xchg
les
pop
repz
sub
aad
fsubrl
pusha
iret
pop
addr16
adc
sbb
mov
add
cmp
cltd
cmpsb
dec
in
cmp
pop
lea
add
cmpsb
mov
dec
test
pop
out
jle
lret
test
mov
pop
fsin
mov
xor
cmpsb
filds
fs
push
fsubrs
loope
add
aas
popa
push
andb
mov
lods
jno
scas
nop
aas
xchg
hlt
adc
out
xor
ret
aad
aad
jne
stos
in
insl
add
mov
dec
aad
and
lods
or
sub
out
popf
inc
arpl
add
sbb
stos
sbb
inc
pop
ret
in
test
scas
sar
xchg
shll
leave
sbb
js
lahf
cld
andb
test
xchg
cs
cs
dec
xchg
mov
lods
cmp
push
xor
or
rcrb
lcall
add
les
xlat
aaa
add
lods
add
adc
aaa
cmpsl
mov
mov
add
xchg
shl
xor
mov
dec
cs
gs
pop
and
out
ljmp
lds
adc
jns
dec
push
push
js
jne
add
sub
and
xchg
int
fidivl
add
sahf
iret
stos
dec
int
mov
sbb
jnp
es
add
js
or
push
out
xchg
jno
test
cwtl
mov
ret
cmpsb
xor
jno
xlat
call
out
dec
mov
movsl
aas
ret
add
mov
negb
pusha
and
mov
fwait
loop
jns
sbbl
or
push
xor
inc
fldcw
inc
cwtl
data16
cmpsl
mov
push
and
xchg
jp
mov
pop
movsbl
in
or
pop
inc
negl
or
rclb
dec
xor
bound
fsts
mov
fcompl
ja
mov
mov
and
xor
stc
xor
or
addr16
call
fs
andb
out
and
add
jle
sbb
fwait
inc
cmp
inc
mov
xchg
movl
shl
mov
popf
fbstp
addr16
das
jo
jb
out
dec
dec
mov
outsl
pop
sub
fsubl
push
inc
cmp
and
nop
arpl
hlt
xchg
mov
insl
enter
iret
mov
fdivrs
push
mov
pop
and
sbbb
shll
push
int3
adc
cmc
cmpsl
imul
out
cli
repz
sbb
jge
loopne
sbb
jp
sub
pop
arpl
adc
notl
inc
jne
mov
mov
mov
loope
adc
push
dec
mov
xchg
sbb
cmp
push
pop
jno
adc
nop
push
adc
and
fisubrl
xor
aas
or
and
add
mov
sub
push
jnp
inc
sbb
stos
pop
xorb
xor
icebp
xchg
mull
repz
mov
jl
ret
fsubrs
shll
lret
dec
pop
mov
mov
clc
icebp
cmp
mov
xchg
jmp
fdivrs
and
mov
mov
or
dec
mov
xor
mov
arpl
scas
adc
jmp
xor
jae
jns,pt
adc
jge
lcall
lock
fstl
ret
mov
jecxz
scas
cmc
leave
fcomi
mov
lods
inc
test
xor
leave
add
stos
xchg
dec
jg
mov
add
imull
cmovbe
imul
in
push
fisubrl
mov
lea
lcall
dec
push
push
jg
ret
aas
mov
test
loop
cli
pop
call
mov
inc
test
incb
sbb
outsl
mov
sbb
pusha
iret
pop
sbb
lret
xor
mulb
ficomps
inc
mov
enter
jg
dec
add
jbe
fstpt
cmp
pop
xchg
daa
mov
fmulp
adc
idivb
stos
jb
popa
addr16
xor
cltd
mov
fcmovnb
call
mov
lahf
mov
xchg
or
or
pop
test
stc
jp
cmp
and
sahf
scas
in
push
int
adc
push
shll
jns
cs
jo
push
movsl
lcall
ljmp
mov
hlt
sarb
push
inc
bound
out
lret
aam
push
movsb
into
aam
or
pop
aaa
xor
jnp
mov
xchg
les
xor
insl
mov
or
and
stos
arpl
outsb
mov
out
cmc
lcall
subl
sti
sahf
adc
inc
in
push
pop
and
jne
cmpsl
cmpsb
mov
adc
mov
xchg
in
or
je
xorl
push
or
into
rcrb
mov
jle
add
sbb
repnz
incl
out
test
xor
fs
nop
push
arpl
fnstsw
jbe
sahf
lret
push
lahf
cmp
test
leave
xor
cmp
stos
xlat
inc
sbb
pop
and
movsb
ljmp
and
scas
vandpd
call
add
push
clc
scas
arpl
lods
sahf
pop
test
mov
cwtl
mov
loop
cwtl
or
flds
call
cmp
fiaddl
je
shll
pop
jge
jmp
add
jmp
out
add
jg
mov
out
loopne
stos
es
and
pop
xchg
jmp
test
in
inc
scas
gs
sub
mov
fcoms
push
cmc
enter
jnp
sbbb
inc
inc
popf
xchg
dec
cmp
shll
cmp
push
insl
sbb
jmp
sbb
jg
clc
mov
loop
movsl
and
and
jmp
jno
jmp
xchg
jae
loopne
ljmp
push
or
mov
pop
outsl
xor
mov
adc
pop
jge
popf
es
idiv
mov
mov
pop
or
iret
fs
xchg
sub
dec
lods
outsl
pop
es
outsl
push
xchg
xchg
xor
or
fisubs
sub
pop
xor
fdivl
les
arpl
insl
mov
loope
inc
andl
pop
aad
push
stc
jge
jbe
shl
pop
mov
hlt
add
mov
outsb
push
stc
sbb
lea
jle
roll
fsubr
ss
loopne
cmp
outsb
and
dec
aad
adc
push
add
pop
sti
mov
clc
dec
sbb
mov
mov
add
jmp
lds
or
xlat
push
out
xchg
push
pushf
push
lcall
adc
xchg
cmpsl
jnp
fwait
icebp
xor
lods
lcall
je
pushf
mov
cwtl
mov
sub
xor
dec
sarb
cmc
test
xor
sbb
insb
sub
pusha
popf
outsl
jge
mov
push
loope
shl
in
xchg
int3
push
lret
xor
jp
in
dec
and
jle
and
xchg
mov
out
imul
in
stos
sbb
mov
push
jmp
pop
add
in
iret
lds
sub
imul
sbb
mov
jb
mov
pop
pop
cld
std
in
imulb
cltd
lcall
jle
iret
xor
or
es
mov
leave
xchg
negb
jge
push
adc
xchg
add
jno
jne
mov
js
mov
and
lock
aas
pop
push
mov
or
fstpt
mov
int
jecxz
fnstsw
mov
inc
in
daa
adc
loop
dec
sbb
lea
sub
adcl
jl
mov
xchg
rorb
push
sbb
sub
loope
mov
dec
mov
mov
stos
push
mov
mov
dec
inc
sbb
inc
insl
add
fidivl
mov
xor
fwait
insl
xor
call
adc
xchg
xchg
jnp
leave
lods
imul
je
push
jb
rorl
int
rorl
mov
ds
lret
xor
pushf
js
mov
lret
mov
popa
jns
addr16
iret
and
jbe
xrelease
cmp
mov
imul
loop
iret
scas
lcall
push
dec
sub
sub
lea
test
sub
in
push
pop
imul
rcrb
insl
int3
inc
mov
sub
lods
xlat
cmp
jg
andl
out
pop
pushf
jne
and
int
xor
cmp
pop
inc
aas
pusha
loope,pt
xlat
sub
sub
or
ret
push
stos
idivb
inc
inc
jne
rcr
push
sub
xor
adc
mov
mov
jp
pushf
cmpsb
cmpsl
into
mov
hlt
jno
mov
or
inc
xchg
stc
int
sti
and
mov
cwtl
jnp
jo
arpl
addl
call
lock
pop
jae
nop
push
adc
or
push
xchg
iret
mov
jle
movsb
xor
and
ret
xor
in
jge
insl
scas
lea
inc
jecxz
xor
mov
out
or
dec
sar
pop
cltd
testl
xchg
push
fcompl
mov
adc
and
or
scas
das
xor
mov
jle
inc
fs
xchg
test
push
aad
sbb
mov
xor
xor
xchg
daa
push
mov
cld
sbb
xor
push
jmp
dec
mov
idiv
mov
push
cmp
cwtl
pop
icebp
ud2
mov
mov
mov
test
sub
xor
aas
sub
test
outsl
jle
and
add
fsubl
test
fnstsw
adc
add
stos
pop
loopne
xor
sbb
mov
lahf
pop
cli
in
xor
cwtl
aad
jmp
cmp
jl
mov
sbb
cmpsb
lcall
shl
dec
and
adc
cmpsb
les
mov
je
daa
scas
stos
adc
jge
arpl
or
repz
xchg
cmpsb
xchg
mov
rcrb
dec
nop
je
imull
jne
push
pop
dec
rorl
jnp
inc
ss
insb
dec
std
in
mov
mov
cmpl
ds
sbb
or
insb
xorl
adc
xchg
xor
add
xchg
hlt
popa
mov
jle
sub
fsubrp
xchg
jae
cli
xchg
cmc
fidivrs
in
cmc
pushf
clc
or
xlat
arpl
movsb
inc
popa
pop
jp
dec
jge
scas
sub
sub
sarl
fmulp
loopne
sub
jno
mov
jbe
add
popf
dec
push
add
mov
int
push
or
ret
test
cmpsl
sbb
lret
jae
add
rcrb
or
pop
cmp
fwait
jle
leave
test
or
sbbb
daa
fstpt
mov
jg
ljmp
sbb
xor
ljmp
xor
jle
fiadds
es
pop
mov
cmp
mov
jb
mov
repnz
add
shlb
idivb
rorb
push
mov
adcb
mov
or
in
inc
xchg
push
sbb
and
push
jae
add
push
mov
mov
and
cmpsl
pop
xor
sbb
fs
cmpsl
popf
and
inc
or
sub
in
adc
dec
mov
cmp
std
insl
adc
inc
push
scas
cmpsb
pop
jo
push
and
les
adc
jmp
mov
mov
aad
pop
jae
sub
mov
mov
mov
lea
jecxz
sbb
test
testb
or
inc
lods
sub
pop
cmc
xchg
int
sbb
xor
mov
sbb
pop
sub
aaa
rorl
bound
repnz
pop
jp
and
sub
mov
mov
movsb
imul
xchg
jp
dec
pop
pop
aam
adc
movl
push
imul
imull
pop
cltd
adc
test
sbb
add
jb
push
pop
or
add
pop
stos
sti
sti
inc
mov
push
popa
inc
sbb
lret
xor
mov
fsubl
imul
mov
fstp
mov
sbb
and
and
jo
jns
adc
mov
aam
and
std
iret
adc
fstps
mov
xor
mov
imul
aam
add
fcomps
test
popf
sub
mov
sahf
pop
pop
imul
pop
xorb
subb
sbb
lods
stos
and
push
mov
out
push
jp
push
adc
fdiv
lidtl
dec
out
cld
lea
push
fmul
shlb
sub
adc
mov
add
out
jo
mov
outsb
inc
ds
push
sub
cmp
fs
jecxz
add
lea
sbbl
jb
je
bound
arpl
xlat
mov
dec
adc
hlt
pop
pop
out
pop
out
out
inc
xchg
adc
int
mov
sbb
pop
enter
ljmp
xor
mov
dec
stos
mov
fidivrl
aam
inc
mov
mov
adc
cmp
pop
adcb
inc
in
sbb
xchg
xor
sahf
xchg
ja
add
movl
movsl
cli
mov
enter
push
insl
jbe
lcallw
sub
dec
cwtl
faddl
jns
xchg
and
pop
imul
pop
sub
pop
xor
daa
jecxz
adc
cmp
aas
sbb
push
pop
aam
xchg
push
dec
jecxz
cmp
lret
lods
adc
addr16
push
movsb
nop
push
int
or
mov
inc
push
dec
lods
inc
fdivr
pop
aas
push
sub
lea
std
or
sbb
adc
inc
adc
jns
and
xor
pushf
xorl
cmp
movsl
xor
rcr
pop
stos
xlat
push
push
jae
ret
mov
sbb
fcoms
rcr
stc
add
fidivl
mov
push
pop
mov
pusha
jle
bnd
push
or
pop
fs
add
mov
lahf
inc
pop
popw
repz
sarb
sbb
pop
mov
or
test
movsb
test
lret
shlb
jmp
or
test
adc
push
ss
push
inc
inc
shrb
dec
push
test
push
sbb
lods
mov
or
rorl
clc
dec
or
mov
mov
ret
or
xor
mov
cld
sbb
pop
cmpsb
push
inc
xor
mov
inc
sbb
xor
cmpsl
sub
dec
add
or
mov
aad
cs
fistpl
addr16
mov
mov
insl
fs
mov
mov
test
fldl
add
mov
jb
adc
cmp
enter
clc
jmp
adc
sbb
mov
mov
adc
cli
lahf
add
nop
loopne
imul
fcmovbe
jo
xchg
cmp
pop
mov
or
mov
jg
and
dec
jge
lods
jmp
rclb
cmp
cmp
out
push
dec
rcrl
or
mov
jmp
addr16
push
xchg
test
jne
repz
sub
and
xchg
out
sub
dec
mov
push
xchg
test
push
enter
or
popf
ret
shrb
adc
arpl
flds
pop
push
inc
lods
push
mov
pop
pop
cmp
jle
and
sbb
pop
jl
and
data16
or
push
hlt
into
ljmp
add
fistl
pop
scas
mov
cmpsb
mov
or
movsb
cwtl
jg
or
subb
ja
mov
pop
cmp
insb
push
call
pusha
paddq
mov
jae
sar
xchg
xchg
testb
lock
daa
sbb
mov
mov
pop
je
inc
lds
jb
jns
adcb
lret
lahf
pop
push
xchg
into
and
std
dec
aas
xor
insl
aaa
sub
or
xchg
xor
fnstcw
xchg
pop
and
jmp
data16
je
pop
out
and
in
je
insl
fwait
sbb
sbb
stos
inc
inc
inc
subb
fdivl
and
mov
fcompl
sub
divb
mov
sbb
mov
sbb
mov
xchg
add
shll
mov
inc
daa
imul
loop
mov
xchg
sti
int3
pop
icebp
jnp
inc
xchg
jge
push
adc
mov
pop
dec
push
pop
mov
add
add
test
fnstsw
or
std
gs
mov
mov
call
mov
adc
inc
sub
sub
mov
xor
cli
xor
shll
in
push
fldenv
mov
mov
insb
sbb
jecxz
leave
lods
cmp
pushf
add
inc
xor
leave
push
imul
adc
jmp
xchg
or
sub
std
mov
sbbl
dec
push
and
fildll
stos
mov
xor
lret
orb
loop
sub
out
es
mov
adcl
xlat
in
add
xchg
mov
in
repz
jmp
in
dec
mov
test
push
dec
mov
pop
bound
push
int
aas
pop
loope
dec
sub
clc
cmp
jne
shll
fsub
or
pop
in
mov
xor
mov
testl
in
lcall
push
fcmovu
mov
gs
int3
es
adc
xor
lds
lods
xchg
dec
xor
in
jmp
lds
mov
xchg
mov
mov
pop
xchg
aam
pop
ficoml
mov
daa
shrb
icebp
pop
je
dec
fld1
sarb
in
sbb
insb
daa
push
pop
daa
mov
lea
add
test
in
xchg
cmc
sahf
mov
and
or
and
sar
in
push
xchg
or
inc
fimuls
jns
add
sahf
js
lock
push
sbb
dec
fwait
push
lea
rdtsc
push
mov
jno
cmp
adc
mov
je
push
xchg
dec
mov
mov
inc
mov
jmp
roll
or
hlt
mov
cltd
or
or
jae
mov
lods
mov
inc
jge
inc
and
push
adc
pusha
jo
pushf
and
xor
inc
faddl
imul
divl
pop
push
addr16
cli
iret
cmp
dec
adc
and
xchg
das
cmp
stc
scas
pop
cmpsl
cltd
or
pusha
insb
push
add
int
cld
dec
add
jp
das
push
movsl
cmp
mov
jp
pop
mov
mov
xor
mov
adc
inc
call
mov
push
cmp
add
jp
ficoms
xchg
rcll
adc
lcall
mov
sbb
xchg
shrb
sub
das
cmc
lods
shr
iret
stc
push
test
rolb
and
lahf
out
mov
mov
clc
dec
sbb
and
fisubrl
jns
arpl
xor
dec
xor
imul
dec
push
sub
and
jl
mov
inc
shrl
out
pop
dec
cmpsl
cmp
push
add
fsts
hlt
jbe
fs
ds
jne
xchg
out
nop
scas
sub
jno
mulb
lret
jno
ds
test
xchg
adcl
and
loop
aam
sub
andb
iret
jmp
push
mov
and
outsl
mov
mov
jge
mov
in
push
repnz
out
lock
pop
or
xchg
repnz
sub
ret
shll
mov
xchg
cli
add
or
fcomp
xor
and
pop
out
push
cs
push
aad
mov
pop
in
frstor
sub
mov
push
jb
cmp
cs
dec
das
sub
call
lods
popa
sub
xor
mov
mov
xor
pop
rcrb
bound
pop
sub
cmpsb
mov
ret
push
dec
mov
lcall
xchg
mul
push
divb
in
jne
mov
fistl
jp
cltd
add
pop
xor
or
or
pop
dec
xchg
and
jge
inc
mov
clc
mov
int3
sub
lock
or
pop
ret
mov
insb
ljmp
out
jns
cmpsl
inc
mov
fcoml
lds
pushf
je
pushf
dec
out
mov
or
cvttps2pi
out
dec
iret
lret
pop
repz
dec
popf
ja
mov
test
adc
and
loope
lods
cmp
mov
push
adc
aaa
sti
pop
aam
lea
nop
shr
clc
jno
mov
push
in
mov
adc
data16
xchg
sarl
cmp
faddl
sbb
cmp
cmp
iret
orb
aad
sub
mov
add
dec
push
loop
pop
mov
js
sbb
add
aas
xorb
outsl
iret
rcrb
cmpxchg
pop
dec
outsl
mov
lock
jno
enter
mov
nop
sub
mov
outsb
and
iret
sub
pop
pop
push
sbb
aaa
pop
es
xlat
mov
icebp
sbb
ficomps
cs
mov
xor
or
ficompl
sub
xor
shlb
cld
push
pop
dec
jp
fmull
nop
popa
shll
js
test
add
xchg
mov
xchg
inc
or
stos
mov
in
push
jle
lods
cld
jmp
jo
xchg
cmp
cmpsb
cmp
loop
and
cld
cmp
and
or
arpl
push
mov
es
jae
sbb
adc
xchg
dec
cmpsl
and
imul
aad
fnstenv
cs
decl
mov
adc
push
sbb
adc
sbb
inc
xchg
or
inc
xor
pusha
mov
out
movsl
repz
mov
push
fsubrs
mov
pop
sbb
cmp
dec
inc
add
mov
dec
out
push
fisubrs
hlt
lds
into
mov
or
push
std
std
das
lea
and
iret
int
mov
mov
mov
push
mov
shll
sti
fwait
xchg
daa
cmp
out
test
and
jae
stos
adc
push
addr16
mov
inc
and
xlat
mov
fisubrs
mov
sbb
inc
xchg
mov
jmp
mov
mov
push
mov
in
xchg
inc
adc
dec
adc
imul
inc
imul
xor
adc
lods
pop
popf
xor
or
pop
lock
test
inc
or
mov
cltd
daa
sbb
scas
mov
or
and
inc
xor
add
pushf
cmp
push
mov
je
push
jns
jb
jge
iret
shrb
sub
aas
jbe
push
or
push
imul
pop
xchg
mov
insl
pop
inc
lcall
sahf
push
loop
jo
loop
pop
xchg
das
stos
je
int
xchg
mov
pop
jecxz
sbb
movsb
adc
test
mov
adc
push
inc
xchg
out
push
mov
adc
and
pop
mov
icebp
pop
xchg
push
aam
lret
shrb
rorb
pop
and
jge
mov
fcmovne
push
call
dec
into
xlat
scas
cli
movsl
cmp
scas
xor
outsb
and
cmp
pop
into
mov
inc
fs
pop
xchg
mov
adc
mov
mov
mov
dec
mov
int
rcrb
and
jle
pop
jbe
leave
sbbl
jb
adc
pop
dec
pop
pop
inc
dec
jb
mov
pop
out
jae
test
sarl
lds
enter
and
scas
out
jl
call
sbb
aaa
mov
xlat
not
dec
xor
pop
mov
enter
aam
xchg
mov
add
inc
or
pop
sub
and
stos
pushf
xor
repnz
mov
inc
jno
pop
mov
out
fmul
cmp
push
pop
stos
stc
ljmp
into
lods
push
and
sub
jno
mov
movsl
icebp
push
xchg
les
es
rorl
mov
mov
pop
fwait
pop
sbb
mov
jmp
test
rorl
test
mov
inc
dec
scas
or
nop
lahf
xorb
scas
out
rcll
dec
jns
into
mov
jns
out
in
fisttpl
mul
pop
imul
fbstp
mov
add
test
sarb
jae
repz
sub
pop
leave
dec
inc
shrl
xor
lock
xchg
mov
and
cli
rcrb
push
cmp
push
movsl
mov
pop
pop
out
jae
pop
dec
or
mov
lret
jae
mov
sahf
mov
pop
xchg
dec
mov
inc
mov
and
cmp
mov
fxch
dec
lods
cmpsl
fisubl
imul
pop
ss
movsl
les
test
mov
jnp
or
vucomiss
loopne
rolb
stos
sahf
add
mov
xchg
add
and
sub
pusha
and
aam
pop
sub
outsb
inc
xorb
dec
sti
maxps
lahf
and
add
insl
aam
leave
cmp
cli
push
mov
or
ret
lret
dec
pop
or
pushf
inc
pop
mov
mov
dec
push
cs
jae
fwait
sbb
jmp
test
out
jl
jge
lods
lods
add
pusha
mov
jbe
mov
jmp
cmpsb
je
imul
in
lods
pop
dec
fisttps
cmp
cltd
fucomi
adc
add
test
mov
add
insl
jns
pop
cmpsb
jno
push
andl
ja
push
xor
int3
dec
pusha
ja
add
dec
xor
jo
cmpl
mov
cltd
bswap
insl
and
cmc
ds
dec
outsb
pusha
dec
cmp
push
mov
mov
aad
xchg
addb
sbb
scas
loope
mov
jge
pushf
lret
jb
mov
xor
mov
push
loop
pop
cmp
cmc
leave
cltd
mov
xchg
xchg
lds
cs
jl
mov
insl
xor
xor
or
leave
jmp
in
movsl
and
fcompl
and
jge
scas
adc
add
pop
stos
add
in
jbe
xlat
pop
ret
aad
dec
jns
jnp
push
xchg
lret
cli
pop
jae
lods
cmp
inc
jb
dec
jbe
roll
sbb
and
lock
or
and
leave
movsl
out
push
jecxz
adc
in
xorb
add
outsb
jecxz
sub
outsl
adc
outsl
hlt
out
imul
aaa
rolb
pop
daa
jbe
mov
insl
mov
xchg
xor
mov
std
inc
pop
sti
popf
mov
mov
test
mov
cmp
mov
int
jb
pop
mov
xchg
xchg
loopne
mov
push
das
lret
pop
icebp
outsl
lret
and
aam
out
out
adc
pop
mov
mov
inc
mov
sbb
shll
push
nop
mov
xor
mov
negl
pop
jno
ljmp
ficompl
push
pop
sbb
and
sub
xor
cmp
insl
mov
jo
fdivrp
pop
adc
push
jmp
pextrw
mov
test
xor
cld
mov
jns
popf
arpl
cmp
push
push
fimull
and
mov
mov
cmc
cld
icebp
out
pop
sarl
cltd
test
jmp
inc
cmpsl
div
xchg
or
xchg
or
test
sbb
jmp
les
add
mov
sub
loop
addr16
xor
jo
cs
cs
ss
js
cli
cmp
out
mov
bound
xchg
mov
shll
mov
arpl
jo
sahf
adc
in
in
stos
movsb
and
divps
dec
inc
imul
mov
jno
pop
dec
and
pop
or
pop
or
inc
xchg
sub
dec
pop
xor
push
sub
sub
add
add
pop
cmpsb
sahf
inc
dec
add
vpavgb
or
daa
adc
push
add
cmp
jbe
test
mov
mov
mov
xchg
fsubrs
ljmp
adc
mov
mov
out
xor
add
call
lret
cltd
js
push
scas
out
xchg
xor
iret
shlb
jmp
mov
mov
popa
sub
ds
inc
test
push
xchg
into
dec
mov
sbb
bnd
iret
push
sbb
lock
stos
lods
mov
aam
add
movsl
sub
jp
add
out
pop
int
in
xchg
ljmp
dec
sub
mov
adc
jno
dec
push
push
adc
loopne
mov
pusha
pop
outsl
and
fmull
jno
inc
sbb
push
into
dec
adc
mov
and
andl
out
mov
lds
xor
mov
fwait
xchg
xor
push
lods
cmp
imul
cli
dec
aad
mov
jl
imul
dec
stc
dec
fnstsw
dec
mov
mov
cwtl
outsl
jmp
push
shll
jp
sar
incb
sbb
iret
inc
adc
xchg
inc
adc
push
inc
pusha
mov
push
nop
rcr
and
pop
jnp
ss
lock
sub
pop
out
lcall
cmp
add
loop
mov
fs
test
pop
mov
inc
dec
ljmpw
xor
sub
sub
outsb
imull
test
dec
jg
mov
jae
cltd
lret
lahf
shll
sbb
imul
pop
test
repz
das
mov
xlat
out
inc
pusha
sbb
sub
mov
in
clc
test
mov
mov
int
hlt
pop
inc
add
mov
lds
mov
mov
inc
clc
add
xchg
and
fldcw
mov
imull
out
repnz
in
mov
in
shrl
add
aam
inc
push
cmp
in
mov
and
jnp
mov
pop
movsb
xor
xchg
add
mov
gs
inc
and
vmwrite
bound
pop
fs
inc
cltd
bound
mov
les
jbe
das
pop
js
pop
pop
ss
jae
sar
popa
call
xor
or
stos
cltd
cmp
incl
lock
mov
mov
faddp
insb
push
push
or
add
test
popf
inc
xchg
mov
lods
cmp
sub
js
cmp
or
lods
sub
fimull
ljmp
xlat
push
push
push
in
les
mov
aad
stos
loopne
clc
mov
ret
add
cmp
mov
cmp
inc
mov
sti
shr
ret
les
fs
pop
sahf
and
xchg
int3
subps
add
lret
sbb
pop
cmp
cmovge
pop
push
push
call
add
and
jg
mov
dec
fistpll
cmp
lds
mov
mov
aaa
xlat
push
imul
pop
setns
mov
push
xchg
rolb
int3
adc
xorl
sub
jmp
mov
shrl
and
sub
stos
push
pop
mov
jo
ds
jmp
ret
hlt
mov
sbb
xchg
push
sub
and
in
scas
and
cmp
dec
cwtl
jae
mov
pop
lcall
cwtl
mov
mov
loopne
xor
adc
mov
push
hlt
mov
adc
sbb
dec
or
cmpb
pop
js
pop
enter
sub
jbe
outsl
pop
cmovb
lcall
pop
pop
jne
stos
icebp
mov
icebp
addb
sbb
add
or
cmc
xlat
fisubl
rsqrtps
iret
int
daa
insl
out
lea
jb
dec
xchg
push
insl
insl
push
push
dec
aas
cs
cmp
xorl
jne
mov
das
xor
xor
std
dec
inc
or
fisttpl
rcrb
xor
mov
sub
inc
in
or
push
icebp
jmp
xor
cmc
in
icebp
xchg
shll
stos
and
ror
fbstp
and
adc
lret
je
lods
adc
sub
xchg
push
mov
icebp
sbbb
xor
jbe
pop
push
sbb
popf
jns
xor
mov
xchg
daa
xchg
push
lret
vmaxsd
pop
test
repnz
jmp
fistpll
jo
in
shrb
inc
pop
xor
sbb
cmp
fstpt
fbstp
loopne
jb
hlt
test
popf
jae
movsb
add
cmp
outsb
sub
cmp
std
enter
lods
xor
rorl
pop
in
divb
daa
and
std
xchg
loope
imul
push
lods
push
jecxz
loopne
xor
jae
fcoms
shll
inc
sub
jbe
or
mov
pushf
hlt
es
orb
sub
jnp
fwait
inc
aad
push
lods
stos
leave
add
cltd
mov
in
push
lahf
pop
pusha
mov
mov
mov
mov
lds
ret
xor
jne
inc
imul
xchg
mov
lcall
xor
push
call
imul
mov
add
jb
and
fs
cli
sbb
push
daa
cmp
addr16
jmp
jp
add
in
mov
sub
mov
inc
add
inc
int3
sub
cmpsb
fs
xchg
dec
lea
mov
dec
insl
gs
adc
daa
mov
pop
dec
push
or
jecxz
loope
cs
jae
pop
inc
mov
lds
stos
push
and
andl
mov
cltd
cli
add
jb
add
das
movl
outsb
jne
sub
aad
loop
cmp
add
push
dec
and
cmpb
test
push
or
shlb
fistpl
or
rolb
fidivrs
in
call
dec
sbb
jno
xchg
xor
or
xor
fcmove
push
adc
pushf
pusha
mov
mov
lcall
or
clc
add
aaa
fildll
lds
adc
mov
imul
and
jns
jbe
sar
push
mov
into
fldcw
mov
push
sti
fisubrl
dec
aad
or
add
jne
fsubl
add
data16
pop
ret
mov
sbb
pop
jecxz
sbb
xchg
push
cmpsb
ja
or
aaa
jae
je
dec
sti
test
cmp
pop
movb
pushf
jns
xchg
dec
mov
das
sbbb
and
mov
or
cmpsl
cli
pop
pop
mov
mov
add
add
ret
ret
test
movsl
mov
insl
jnp
nop
xchg
je
loop
mov
cmp
xchg
jle
jle
xchg
sub
lods
outsb
or
cs
xchg
jae
hlt
mov
out
sub
sbb
test
sbb
cmp
fdivrs
and
mov
sub
xor
icebp
aas
mov
in
popf
scas
je
sbb
call
ror
dec
shll
bound
or
push
js
pushf
mov
mov
mov
dec
fnstsw
pop
and
and
out
push
inc
add
adc
imul
ja
mov
push
add
rcr
jne
stos
les
adc
out
dec
sbb
cmc
sti
jb
push
shl
mov
xchg
arpl
sbb
fwait
scas
fwait
push
cmpsl
or
jb
stc
dec
popf
dec
movsl
inc
push
sub
mov
out
lahf
hlt
int
les
aaa
sarb
push
cmp
sub
jle
mov
cmp
into
cmp
mov
sub
mov
xor
push
mov
pop
inc
mov
push
sarl
sahf
cmpsl
jmp
ret
inc
sbb
in
sarb
rorb
mov
jae
test
jecxz
pop
ja
mov
dec
movsb
inc
pop
add
ret
sti
pushf
es
adc
xor
popf
inc
sub
add
cmp
cmp
dec
adc
jle
out
or
sar
into
test
lcall
sbb
sbb
xchg
jp
pop
aaa
push
movsl
scas
out
sub
or
aas
add
addl
loop
mov
adc
pop
cmp
insl
ret
jmp
jns
repz
ret
hlt
xor
dec
xor
mov
xchg
outsl
mov
dec
test
daa
adcl
mov
adc
or
and
pop
ret
loopne
lods
cmpsb
jp
cmp
arpl
xor
or
repz
movsb
push
jecxz
cmp
lock
scas
inc
or
lahf
inc
push
cmpsl
shrl
insl
xor
es
lret
fs
xchg
hlt
or
call
lcall
int
gs
jge
jmp
add
add
push
push
pop
mov
stos
push
sub
push
jge
ficoms
into
dec
mov
iret
js,pn
mov
adc
xchg
pop
inc
mov
jbe
jecxz
data16
pop
fmull
sub
es
jns
push
fcmove
pushf
mov
mov
sub
lea
pop
addl
add
mulb
mov
outsl
ja
sbb
mov
sbb
push
je
xchg
dec
push
push
sub
cmp
dec
mov
or
xor
outsb
mov
push
and
nop
and
lock
scas
or
std
enter
mov
popa
inc
pop
mov
int
xchg
test
cmp
sub
loope
andb
sub
xor
push
adc
push
adc
mov
lahf
into
paddb
push
in
test
addl
lea
das
xor
sbb
enter
jge
ja
daa
call
popa
lods
sbb
dec
mov
jmp
cmpsl
mov
and
xlat
mov
xor
xlat
andb
lock
jns
push
inc
adc
std
aas
mov
dec
mov
sub
vsubps
cmp
and
lret
push
cmp
inc
cltd
imull
dec
fwait
mov
sub
cmp
pop
mov
xchg
fwait
negb
movsl
dec
jmp
mull
sbb
imul
inc
mov
lods
ret
mov
data16
and
xchg
mov
lcall
mov
repz
loop
inc
mov
jl
jmp
mov
xchg
clc
add
jle
cli
bound
idivb
push
clc
daa
mov
mov
pop
dec
mov
cmp
cmpsl
daa
xor
das
sbb
aad
pop
mov
loope
jb
sbb
jg
push
jo
mov
jmp
fstl
in
jecxz
loope
and
mov
mov
sub
ds
addb
sarl
addr16
fidivs
cs
int
and
loop
cltd
std
movsb
sbb
in
and
pop
mov
jbe
and
hlt
xchg
jecxz
and
mov
subl
push
cli
gs
or
hlt
push
xor
fsts
ss
jl
in
add
stos
jbe
sbb
xchg
lds
pop
mov
lea
jmp
and
add
sub
mov
pop
push
std
lahf
cmpsl
add
dec
gs
imul
push
enter
outsl
aad
push
xchg
and
das
cmpb
arpl
adc
fsts
iret
xchg
lods
lcall
mov
ffreep
and
in
or
mov
mov
mov
inc
or
stos
or
fdivr
jns
test
mov
sub
shll
shrb
sbb
lahf
imul
leave
xor
pop
inc
in
and
xor
loop
dec
and
jnp
jno
inc
mov
sub
aam
mov
lods
call
sbb
add
push
cwtl
xchg
out
scas
imul
xor
testb
mov
nop
mov
inc
ret
xchg
push
inc
scas
adc
or
pop
int3
push
mov
rorl
push
jecxz
inc
dec
push
repnz
ds
es
mov
decb
scas
jmp
mov
push
adc
ja
dec
push
pop
adc
xchg
pop
mov
ret
and
push
inc
adc
js
adc
call
fsubl
fwait
in
mov
pushf
xchg
push
pop
test
loop
std
add
adc
popf
sbbb
fistps
sub
lahf
popa
jp
xlat
sbb
lret
mov
push
pop
fisubl
and
cmp
inc
nop
jmp
sub
inc
std
push
push
mov
adc
inc
jecxz
ljmp
jb
dec
adc
in
push
leave
add
pop
cmpsl
adc
je
into
rolb
xchg
mov
popf
xorb
fstpl
hlt
or
dec
pop
dec
push
cmp
jnp
sahf
jmp
cwtl
pop
stc
data16
adc
add
jnp
sub
xchg
mov
jo
mov
adc
lods
ret
int3
imul
sti
sbb
jne
add
aam
test
jg
fdivl
push
adc
in
jl
rclb
loopne
sti
mov
mov
stos
cmp
fnstcw
mov
mov
cmp
pusha
fsub
aam
mov
cmp
jne
dec
jo
mov
mov
cld
popf
push
shrb
inc
push
sub
lock
enter
cmp
xor
shrd
cmp
push
stos
and
movsl
ja
and
sarb
inc
mov
addr16
jae
insl
sahf
testb
aam
fs
in
pop
ficompl
adc
push
xor
xchg
fidivrl
mov
jl
incl
fcos
pop
push
mov
xchg
jmp
mov
fs
lods
or
cld
leave
mov
sti
ret
dec
adc
add
pop
xchg
cmpsl
sbb
pop
xor
mov
call
call
or
psrad
arpl
mov
ret
rorb
mov
pop
out
ja
addr16
imul
jecxz
loopne
cld
loopne
pop
mov
cltd
and
fimull
push
inc
ja
jae
pop
imul
xor
dec
int
cmpsb
mov
sbb
push
sti
dec
mov
pop
mov
shll
sarb
pop
mov
jbe
lods
cmp
bound
nop
push
add
pop
mul
mov
mov
mov
and
fxam
inc
mov
pop
jge
xchg
and
int3
das
xor
adc
stos
inc
jb
xor
xchg
dec
jl
mov
or
sub
fidivs
dec
dec
cmpsl
and
jnp
pushl
dec
icebp
push
cmp
loope
jle
jg
out
and
and
dec
les
fimull
test
push
cmp
jle
jle
inc
xor
mov
xchg
xor
insb
cmc
sahf
adc
iret
movsb
xor
sbb
testl
test
and
and
lock
sti
jnp
shrl
mov
and
imul
xchg
movsb
inc
inc
imul
fcmovnbe
mov
cwtl
je
cltd
sti
lock
or
sub
jmp
or
lea
hlt
shlb
jb
popa
mov
ret
iret
xchg
add
and
pushf
lods
scas
jp
ljmp
sti
daa
lret
les
cmc
xor
add
sbb
cmp
sbb
dec
xor
inc
xor
orl
movsl
xlat
adcl
insl
inc
rorb
jle
ds
inc
mov
insl
push
and
out
rcll
xor
popf
or
das
cs
sbb
popf
sub
and
adc
lret
aas
mov
xchg
pop
fistl
or
cmpsb
sbb
adcl
test
inc
sbb
add
test
cltd
or
aaa
pop
mov
dec
cmp
call
pop
pop
xchg
test
lea
sbbb
lcall
dec
ret
xor
cwtl
inc
or
dec
or
adc
sub
xchg
and
dec
in
inc
mov
xor
add
test
cwtl
dec
lods
inc
mov
iret
push
jns
cmp
test
cmp
sbb
mov
or
sub
outsb
cld
pop
aam
pop
sbb
fstl
mov
and
or
jle
xor
sbb
lahf
je
pop
test
repnz
inc
mov
aaa
iret
test
mov
sbb
adc
call
mov
or
jmp
in
aaa
iret
sahf
outsl
je
jne
fwait
addb
sbb
lret
in
xlat
jmp
inc
orb
mov
int
test
jns
add
push
jns
ret
fidivrl
notb
pop
test
inc
sbb
pop
fsubrl
or
xchg
ljmp
repz
leave
hlt
jae
pop
dec
pop
test
jecxz
sbb
mov
in
dec
flds
roll
cmp
ljmp
pop
mov
lcall
xlat
jne
inc
jbe
out
adc
dec
int3
fstpl
push
les
cld
push
inc
cmp
xor
ds
xchg
fdivrs
cmpsb
call
or
xor
push
jb
push
cmpsb
adc
test
aam
mov
push
call
push
xchg
mov
inc
mov
push
movzwl
aaa
jg
stc
addb
js
xchg
stos
pop
jae
push
loopne
pop
dec
rcl
mov
faddl
shll
or
sbb
fs
movsb
aas
cmpsl
lock
ljmp
sbb
leave
fisttps
in
pop
punpckhbw
ljmp
push
xlat
or
scas
sbb
insl
sub
mov
cmp
and
inc
fistl
or
cmp
jle
stos
push
dec
adc
mov
pop
in
fnsave
pop
je
push
and
mov
cmp
fidivrl
fisttpll
adc
loop
outsb
mov
jl
out
sub
inc
add
in
jmp
mov
jno
cmc
pop
outsb
jo
insb
scas
jl
xchg
mov
loop
or
xor
sub
and
int
pop
negb
pop
mov
jnp
inc
add
mov
out
scas
xchg
and
movsl
in
pop
xchg
ret
adc
test
rcl
addr16
inc
test
inc
sbb
fdivrp
mov
icebp
inc
in
lds
sahf
imul
and
cmp
xchg
int
pop
mov
jno
imul
movsb
jae
mov
pop
test
jg
test
pop
push
jle
jg
cmpsl
push
xor
or
cmp
mov
out
lock
fwait
mov
icebp
fistpll
adc
jmp
js
nop
rcl
pop
or
pop
jp
jne
cmp
jno
iret
xchg
in
dec
xor
pop
out
adc
leave
cmp
inc
pusha
xlat
cmc
ja
enter
mov
or
das
sbb
add
xchg
scas
sub
lods
fistl
mov
xchg
dec
nop
jne
and
inc
and
in
divl
mov
dec
fs
and
lahf
outsl
mov
mov
scas
out
ljmp
sbb
jb
or
dec
pop
xchg
sti
inc
fs
and
mov
lods
push
mov
xchg
xchg
xchg
adc
pop
and
cmpsl
dec
xchg
mov
jle
sbb
addr16
mov
in
push
adc
dec
lret
xchg
std
daa
insl
pushf
cwtl
rorl
dec
jecxz
xchg
pop
jl
dec
or
cmpsb
lods
fiadds
psraw
add
std
mov
sub
mov
subb
sub
cmp
jns
fsubs
icebp
repz
loope
sub
dec
xchg
js
shl
push
mov
filds
cvttps2pi
enter
xchg
icebp
add
lea
add
dec
or
xchg
jecxz
xchg
pop
mov
mov
fsubr
shl
mul
or
xchg
movsb
mov
push
inc
push
add
or
fistl
mov
les
cmpsl
mov
in
aam
and
and
or
xchg
lods
icebp
adc
xchg
xchg
iret
pop
daa
push
push
pop
push
testl
xchg
rcrl
add
rorl
inc
aas
inc
clc
mov
es
push
mov
xor
testb
xor
sbb
add
dec
push
cs
jnp
js
xor
xchg
xchg
push
mov
mov
pushf
jae
add
or
mov
insb
push
xchg
sub
inc
rcrl
inc
cltd
rcll
nop
imul
inc
fdivs
adc
xchg
fwait
scas
je
popa
out
fs
insl
pop
js
jmp
pop
std
adc
mov
lea
xlat
sbb
leave
jo
jle
mov
jle
add
pop
dec
out
lcall
fidivs
int3
or
push
push
push
add
andb
pop
push
jmp
cmp
loop
add
pusha
add
xorl
or
push
insb
je
cli
add
dec
mov
sbb
cmpsl
call
fidivrl
insl
fiadds
xor
pop
test
aas
xchg
add
bound
push
fdiv
fidivrl
out
or
gs
mov
pop
push
mov
sub
iret
sub
jg
ds
aas
shll
test
add
lret
into
cmp
test
insl
pusha
test
mov
wbinvd
je
push
xor
shll
adc
inc
xlat
test
notl
test
adc
ud1
inc
out
lock
aas
call
cmpl
add
mov
std
cmp
test
out
inc
pop
jb
fwait
aas
mov
lock
rorb
xor
es
loop
pop
cmp
lret
out
lahf
scas
cmp
rcrb
out
into
xor
rcl
mov
mov
scas
mov
test
xchg
test
xor
outsb
push
das
sbb
sbbl
xchg
jge
xor
push
adc
out
rclb
mov
lds
ficomps
jnp
cwtl
lds
sbb
fdivrs
rorb
xchg
lea
inc
jbe
idivl
push
inc
xchg
add
out
call
mov
add
jo
inc
test
pushf
int3
call
outsb
xor
data16
fstp
fldt
insl
and
addb
inc
pusha
aaa
insl
fcompl
inc
jmp
mov
call
popf
ja
lahf
loop
sahf
and
cs
xor
xchg
fwait
shrb
xchg
sub
push
ljmp
mov
mov
fists
mov
pop
cmp
mov
jb
test
jne
xchg
js
stos
inc
mov
stc
sub
inc
jl
adc
roll
dec
fcompl
repz
popf
cmc
aaa
movsb
jae
cltd
pusha
test
adc
dec
mov
inc
cld
fistpl
and
aad
test
out
int
fnstsw
fwait
ss
je
into
sub
icebp
stos
xchg
daa
stc
or
test
mov
and
pop
xor
test
lock
mov
mov
xor
jns
lahf
jns
mov
incl
into
rclb
adc
dec
out
outsl
push
movsl
orb
repnz
outsb
cmpsb
sahf
xlat
mov
add
stos
or
addr16
or
mov
loope
dec
and
mov
and
jnp
cltd
inc
sub
jae
add
lcall
pusha
popf
push
adc
pusha
sub
daa
movsl
rcl
pop
mov
dec
xlat
mov
jb
mov
pop
in
sbb
jbe
mov
fidivs
fadds
daa
lea
adc
loop
jne
lods
lods
inc
inc
pop
jne
xor
mov
cld
ss
js
jmp
adc
sbb
mov
mov
jg
push
icebp
mov
xchg
stos
xchg
insl
lods
mov
decl
sbb
ds
mov
sbb
push
imul
pop
incb
dec
ret
into
int3
roll
cmp
fbld
loop
enter
push
cmpb
daa
dec
bts
in
sub
dec
test
dec
mov
ds
test
ror
cmpb
enter
inc
add
cli
testb
sbb
inc
fistpll
sub
sub
add
push
xor
push
mov
or
jno
mov
add
test
out
mov
psrad
lods
mov
sti
mov
xchg
push
std
sbb
sub
pop
in
out
sarb
mov
clc
fdivrp
and
add
sti
nop
js
int
sti
hlt
xchg
mov
xor
or
or
test
add
add
dec
adc
rolb
cmp
hlt
xchg
fs
dec
dec
pop
push
sti
xchg
jns
dec
sub
mul
aas
adc
dec
and
jge
mov
cmp
mov
adc
push
jmp
jecxz
inc
jnp
shr
aas
adc
or
push
jmp
out
xor
test
dec
or
inc
aam
inc
ret
subb
dec
and
cwtl
fnsave
out
xchg
jno
bswap
xor
insl
es
mov
das
mov
mov
adc
mov
scas
cld
sbb
cwtl
pop
pop
jbe
leave
cmpb
sub
cmc
jmp
out
mov
jnp
jb
and
movsb
sahf
lret
movsb
mov
mov
rcrl
add
iret
xlat
sub
mov
mov
addr16
into
inc
leave
jl
xchg
xchg
outsb
push
sbb
push
xor
shll
jmp
inc
notb
lret
and
mov
mov
rorb
xchg
mov
mov
xor
push
sbb
mov
into
fldt
jo
cmc
call
mov
adc
cmpsl
test
int3
test
scas
jl
adc
xchg
xor
xchg
mov
xlat
clc
dec
sub
sub
insb
dec
rclb
cmpl
inc
jmp
dec
out
int
into
hlt
pop
popf
rcll
inc
cli
push
in
pop
or
inc
addb
mov
aaa
out
aad
jmp
popf
in
jecxz
pop
or
adc
add
xchg
add
stos
xor
cwtl
xlat
jp
jae
lock
es
jle
je
xchg
push
imul
dec
call
xchg
adc
mov
sub
pop
mov
push
inc
leave
inc
mov
notb
jno
shr
sub
clc
rcrl
out
test
sub
stos
or
stos
jge
lods
mov
test
stc
lret
dec
pushf
scas
ljmp
inc
cmc
mov
in
rolb
pop
call
sbb
xchg
xlat
arpl
jnp
cmp
cmp
cld
or
jmp
fcoml
add
sub
ror
dec
dec
push
insl
mov
jl
das
jp
push
stc
jecxz
mov
insb
iret
mov
iret
jbe
out
xor
mov
aam
push
stos
cmpb
out
pop
jl
pop
nop
lods
push
inc
mov
imul
mov
jns
imul
mov
fstpt
inc
mov
mov
mov
pop
xchg
shr
jge
dec
or
fstpl
jmp
jae
je
je
bound
and
int
dec
push
imul
push
dec
int3
xor
insl
xchg
add
sahf
iret
push
ret
or
shll
cmp
or
mov
movb
jp
pop
stc
roll
sbb
xchg
push
movsb
mov
pop
fdivl
lea
mov
cmp
bound
scas
dec
add
ljmp
rolb
cmp
inc
loope
mov
lods
adc
xlat
sbb
jge
mov
sti
sub
pusha
repnz
push
sbb
xor
fsubrs
cli
stc
mov
ja
mov
iret
dec
and
out
insl
add
fldcw
jecxz
xorps
mov
in
jbe
loopne
adc
mov
inc
rcl
outsb
lock
or
js
arpl
add
push
mov
and
into
imul
test
mov
jl
jbe
mov
push
repnz
add
mov
mov
gs
idivl
and
nop
adc
imul
inc
out
gs
sub
imul
inc
add
lahf
je
inc
inc
jecxz
sbb
push
push
loope
cmp
xor
pop
test
shrb
repnz
pop
jge
and
xchg
mov
xchg
sub
jno
aaa
sbb
xor
leave
jl
sahf
jne
repz
adc
mov
sub
icebp
lods
sbb
fcomps
lahf
and
mov
enter
sbb
mov
fcomps
xchg
sbbl
outsb
mov
pushf
imul
jg
xorb
loopne
dec
dec
lds
div
js
sbb
mov
push
out
mov
dec
imull
aas
mov
rclb
pusha
cmpsl
shrl
and
xor
iret
mov
lahf
xor
lahf
leave
add
inc
adc
lcall
sbb
cmpsb
mov
or
out
popf
jns
sub
xor
push
adc
mov
aas
scas
in
je
mov
jmp
jns
in
scas
dec
inc
jns
lret
popl
hlt
orl
and
sarl
ret
aaa
xor
jle
inc
inc
push
mov
je
push
xor
push
cmpsb
in
scas
scas
addr16
imull
popa
cmp
or
enter
and
and
popa
add
jb
scas
mov
pop
mov
sbb
xchg
aad
outsb
out
fisttps
in
insb
popa
test
int3
je
loop
inc
insl
or
push
les
push
adc
xchg
pop
xchg
les
aaa
jg
fildll
dec
fists
and
jg
aad
cmpsb
orb
push
js
and
mov
inc
mov
inc
cmp
dec
push
pop
insb
lods
jl
push
clc
or
mov
cld
push
gs
stos
add
insb
jnp
negl
pop
push
inc
cmp
js
xchg
jo
es
xor
cli
rol
ds
aaa
cmp
jb
inc
aad
inc
pop
cmp
sub
test
adc
push
xlat
xchg
mov
repnz
mov
pop
lahf
sub
movsl
pushf
dec
loopne
add
pop
adc
xor
nop
repz
dec
js
cmpsl
xorl
and
cmp
adcl
mov
cld
dec
and
adc
cmp
dec
and
test
aam
std
or
xor
rolb
jno
xchg
fcmovbe
rorb
std
inc
test
jbe
dec
andnps
inc
mov
adc
push
mulb
xchg
mov
loope
pop
fs
fstl
pop
mov
cmp
inc
and
xchg
and
mov
les
push
mov
outsb
pop
and
mov
xchg
xchg
cli
jb
mov
cmp
mov
dec
nop
arpl
xchg
into
adc
test
shll
cmp
fcomps
adc
add
or
lret
and
xchg
sbb
add
mov
xlat
dec
or
cld
push
cmpsb
ljmp
mul
std
adc
cmpsl
pop
std
inc
cmpsb
fs
lcall
adc
stc
fadds
sub
cmp
out
cwtl
xchg
fdivs
dec
movsb
int
jae
cmc
lock
pop
dec
stos
loope
dec
pop
add
scas
or
outsb
mov
push
dec
dec
xchg
in
or
jb
pop
ss
movsl
out
jl
xchg
leave
sahf
div
mov
mov
jl
mov
hlt
cmp
sbb
inc
push
adc
pop
push
test
dec
jne
lea
test
and
loope
push
idivb
lock
addl
jecxz
cmpsl
repz
or
cli
cmp
pusha
mov
jnp
pushf
xlat
sti
cli
sahf
mov
mov
adc
add
mov
adc
mov
sti
xor
mov
scas
enter
inc
mov
or
inc
or
out
and
mov
push
dec
mov
mov
sbb
sahf
lds
test
xorl
loope
insb
jo
das
inc
mov
cmp
cmp
sbb
jno
xor
mov
ss
mov
cmpsb
and
and
push
into
gs
inc
pop
iret
cmpsb
jno
dec
insb
xor
mov
shl
hlt
or
and
xor
push
call
xor
xchg
ljmp
mov
cli
outsl
push
fwait
mov
sahf
xchg
xor
sub
push
stos
inc
adc
fildll
clc
adc
push
xchg
cli
stc
out
addb
add
pop
sti
push
ds
xlat
push
js
sbb
and
fdivr
mov
adc
movsb
adc
dec
xor
int
push
pop
imul
sub
lahf
add
mov
loop
rcl
push
cli
or
jp
dec
pushl
repnz
insl
add
movsb
lret
popf
or
frstor
divl
leave
inc
push
outsb
pop
mov
push
cmp
mov
sbb
or
enter
test
fidivrl
mov
jmp
add
test
dec
pop
ret
push
shr
mov
neg
add
insb
loope
ja
je
or
cmpsl
xchg
mov
cld
jg
mov
cmp
mov
movsb
mov
adc
xchg
mov
int
dec
push
add
and
mov
shlb
or
std
xchg
in
mov
inc
in
fstpt
push
mov
xor
sub
xchg
or
sti
sub
xor
cwtd
adc
or
add
adc
adc
das
or
cmpb
cmp
pop
jg
loopne
and
in
xchg
jnp
add
repz
sub
fiadds
inc
adc
pop
insl
ret
mov
add
fs
data16
cmp
push
pop
pop
scas
roll
inc
push
mov
and
out
mov
xchg
xor
xchg
fs
or
mov
lcall
cmp
xchg
pop
imul
out
loop
dec
inc
pop
jl
xlat
push
sub
fsub
es
sahf
fimuls
dec
aas
or
add
cmp
fistl
or
negb
xchg
jno
add
sub
jo
jne
popa
xchg
cmp
inc
push
sub
loope
popa
dec
loopne
pop
jl
fsubrl
adc
cmpsl
sbb
stc
lock
daa
adc
add
push
add
nop
leave
add
in
sbb
aam
mov
fidivs
xor
mov
jbe
jecxz
adc
roll
mov
sbb
pop
and
repnz
lahf
jnp
aam
push
out
inc
data16
add
pop
ds
mov
insl
jne
inc
aam
pop
mov
lahf
and
fcomps
pop
mov
dec
push
sbb
sti
jo
sub
xchg
or
jnp
adcb
pop
jecxz
and
push
in
jo
cmp
je
pop
daa
mov
pop
int
scas
aaa
imull
mov
repz
mov
pop
xchg
subl
xor
jbe
stos
and
imul
mov
daa
hlt
mov
and
shld
jnp
dec
push
pop
leave
xchg
out
stc
cmp
jge
sub
adc
data16
add
adcb
sub
adc
fdivrs
popf
jle
xchg
ficompl
mov
loopne
push
sti
push
dec
push
xor
enter
jb
and
inc
or
pop
jl
loope
arpl
and
or
pop
in
fwait
mov
jbe
nop
lahf
sub
mov
jno
shrl
push
test
mov
int
sbb
mov
sti
cmp
enter
push
mov
pop
loopne
or
cmp
inc
dec
sub
es
cltd
mov
jns
jmp
and
or
pop
and
mov
jmp
cmc
imul
popf
movsb
xchg
aad
rolb
repz
inc
mov
mov
dec
xchg
cltd
pusha
ret
add
shrb
jne
pusha
or
mov
in
mov
enter
mov
or
mov
es
pushf
lea
mov
sub
aas
and
shll
loope
pop
jo
stos
cltd
xchg
pop
xchg
mov
sub
rclb
and
mov
ds
test
inc
into
push
or
pop
fsubrs
stc
xor
lret
fimull
adc
loope
pop
add
jnp
dec
adc
dec
addr16
mov
loope
mov
fiaddl
inc
outsb
inc
add
push
jo
mov
movsl
fnstsw
call
test
je
and
pop
stos
fistl
cltd
jg
lds
inc
addl
add
push
testl
cmp
cs
push
ret
stos
adc
das
scas
mov
fldenv
retw
loop
xor
xchg
insb
cld
mov
shrl
mov
adc
mov
scas
xchg
and
fisubs
rclb
jge
out
sub
ss
mov
dec
xor
sti
add
push
insb
mov
xchg
or
sbb
int3
inc
dec
mov
mov
cmpsl
daa
jge
xchg
inc
je
inc
inc
lahf
push
ja
xchg
jo
xchg
loop
enter
in
es
xor
iret
cli
iret
orl
incl
sbb
fildl
pushf
dec
or
or
mov
mov
jle
cmp
mov
or
pop
lods
lock
fmuls
in
jmp
scas
jo
arpl
shr
sbb
add
jp
stc
adc
movsl
pop
sub
in
loope
add
push
push
icebp
xchg
in
add
cld
mov
mov
xor
push
scas
xor
pushf
fildl
cmpsb
pop
fdivs
sarb
das
mov
xor
mov
mov
mov
loope
repnz
sti
pop
mov
mov
mov
xor
test
cmpsb
jl
dec
pop
and
dec
repz
pushf
push
testl
scas
insl
inc
movsb
xchg
loop
inc
popa
push
and
push
icebp
xchg
push
mov
scas
xchg
stos
int
je
and
mov
in
mov
and
enter
out
lods
adc
dec
push
xchg
push
pop
fldenv
mov
outsb
enter
jnp
cmpb
push
mov
pop
cli
sbbl
or
mov
andl
push
pop
mov
sbb
fnsave
dec
dec
dec
test
mov
sub
add
lcall
jge
in
jl
pop
testl
aas
sbb
stos
cmp
dec
imul
subl
iret
sub
mov
sub
and
adc
mov
xor
aam
in
cmp
mov
jmp
or
fsubrs
mov
add
movsl
and
inc
clc
jg
cwtl
shlb
cmpsl
cld
push
mov
test
imul
lock
cmp
push
jmp
jb
and
or
mov
gs
std
mov
nop
dec
inc
rcl
test
pop
mov
mov
xchg
cmpsb
sub
lret
mov
xchg
iret
jmp
dec
mov
mov
or
pop
jnp
arpl
xchg
inc
sbb
mov
jnp
in
jno
icebp
push
xor
pop
sahf
iret
ja
test
dec
sub
pusha
shlb
lret
jbe
cmpb
jg
test
and
pop
out
lock
cltd
fisubl
in
ret
jge
inc
xchg
inc
pop
mov
jno
leave
and
sbb
mov
pop
mov
inc
jae
fsubrs
xor
out
arpl
pop
std
in
testl
lret
movsb
outsb
fs
xor
shlb
test
adc
push
arpl
or
mov
cli
outsb
sbb
daa
cmp
sbb
gs
call
repz
sub
mov
jp
hlt
test
xchg
mov
out
inc
or
adc
pop
push
or
stos
pop
add
inc
push
push
mov
pop
movsb
mov
pop
push
loopne
sarb
dec
xchg
test
mov
mov
xchg
es
inc
inc
fcom
adc
hlt
cmp
or
mov
inc
shrb
jle,pt
push
add
sbb
add
xor
mov
call
push
sbb
iret
stc
cltd
mov
push
mov
and
js
into
jne
mov
mov
lahf
inc
push
sahf
pop
mov
and
sahf
outsl
fs
jecxz
imul
enter
out
cmp
or
hlt
cltd
mov
xor
leave
popa
xor
adc
inc
add
inc
xchg
push
jno
inc
inc
push
repnz
inc
int3
push
lret
lods
fisubs
add
add
or
lret
popa
xor
mov
imull
mov
sub
mov
jg
cwtl
imul
add
jp
js
int
rclb
lahf
cli
mov
push
push
arpl
test
dec
cmp
stos
dec
pusha
lret
int
sarl
imul
loope
mull
lahf
cmp
in
cmp
lret
xor
aad
int
push
xor
cli
dec
jo
push
mov
inc
inc
lods
loope
cmp
xchg
and
jecxz
leave
or
fmuls
fdivl
dec
jnp
sbb
sub
xchg
mov
xchg
mov
outsb
movsb
hlt
jo
fnstsw
int3
cmp
cs
bound
mov
dec
inc
hlt
jnp
outsb
xor
sar
addr16
loope
sbb
ss
jecxz
sbb
push
ss
mov
loopne
arpl
sub
and
mov
je
insl
pop
mov
shll
iret
mov
jge
ficoms
hlt
jl
and
testb
icebp
jecxz
test
adc
xor
popf
adc
test
ds
insl
dec
movsl
adc
pop
sub
inc
sub
or
push
fs
outsl
mov
push
push
repz
je
xchg
shll
popf
shl
or
mov
and
jns
sbb
stos
shr
mov
mov
dec
push
test
add
sub
xchg
in
fisttpll
xor
movsl
pop
ljmp
iret
xchg
dec
sub
xor
dec
cld
daa
out
in
pop
fidivrs
leave
mov
insl
movsb
cmovns
cmpsl
jl
divl
ror
or
test
xor
rorb
repz
add
xchg
xchg
pop
cmp
orb
jns
push
fdiv
lcall
adc
jne
cwtd
dec
push
sbb
bound
stc
fistl
stc
xchg
push
sbb
jle
icebp
adc
idiv
pop
xlat
dec
mov
stc
add
push
inc
bound
roll
mov
insl
sbb
sub
shll
jae
or
xor
xchg
cmc
jmp
jge
call
adc
mov
jg
sub
repz
ss
lret
shll
and
fstpl
xrelease
xchg
pop
cli
add
mov
pop
leave
sub
stos
ret
rcr
mov
pop
pop
mov
daa
outsl
inc
dec
mov
repz
mov
testl
cmpsl
lods
loopne
mov
jle
add
stos
and
pushf
lods
test
flds
mov
test
jge
in
pop
push
mov
pop
sub
xor
cmp
mov
in
sbb
ja
mov
lahf
and
sarb
xchg
xchg
xor
push
ficomps
sbb
pop
jo
add
std
cltd
dec
cmp
in
lock
ljmp
jb
cmp
mov
dec
icebp
fcoml
fisttps
sbb
mov
and
add
inc
sbb
rcll
or
cmp
scas
push
es
inc
mov
shrb
mov
mov
adc
imul
adc
mov
push
and
imul
roll
sub
leave
call
mov
xchg
sbbl
repz
outsb
push
int
stos
aam
add
jo
xchg
xchg
xor
cmpsl
das
xchg
cli
lods
and
loopne,pn
mov
repnz
mov
lahf
sub
dec
mov
adc
jp
mov
mov
pop
adcl
cmp
mov
sbb
pop
xor
dec
mov
xor
push
mov
jbe
sbb
pop
cmp
mov
ret
lea
jl
clc
into
movsl
inc
xor
pop
push
int
jmp
sub
and
push
stos
outsb
mov
jbe
or
inc
imul
or
add
cltd
push
outsb
gs
pop
push
js
lret
xor
cs
jno
dec
jne
pusha
adc
lret
data16
icebp
add
pop
adc
add
inc
arpl
fstl
loope
lea
push
fidivrs
inc
pushf
imul
push
cs
xlat
mov
inc
cmpsl
nop
pop
push
pop
jae
push
enter
jg
hlt
jno
or
subb
mov
push
rcrb
popf
add
push
mov
sbb
test
popf
dec
inc
cmp
cltd
xor
mov
or
dec
sahf
jp
sub
lret
inc
je
popf
push
mov
sbbl
outsl
fdivs
fwait
aam
pop
adc
mov
popf
lock
mov
add
pop
jo
lret
xor
adc
mov
mov
mov
xor
sub
dec
fnstcw
xchg
inc
push
ja
cli
cwtl
pop
adcb
addr16
cmp
leave
test
add
add
cmp
ss
mov
pop
pop
cmp
pusha
imul
loope
outsb
and
ja
int
inc
out
sbb
or
dec
lret
push
aad
mov
jnp
gs
out
mov
mov
addl
popa
xlat
shlb
inc
cmp
lods
and
das
sub
mov
aam
out
repnz
mov
jge
or
daa
repnz
sub
subb
movsl
sbbb
push
mov
movsl
arpl
orl
mov
and
inc
out
push
loopne
adc
pusha
test
and
add
lret
mov
loope
mov
xchg
jp
int
inc
ljmp
add
mov
mov
xlat
inc
les
mov
jecxz
jae
popf
lret
ds
push
ds
rcrb
jmp
push
mov
sub
ficoml
stos
cmpb
test
in
sahf
push
inc
jno
jge
sbbl
int
repz
dec
ret
xlat
lock
data16
inc
popf
ss
call
es
loope
xchg
sbb
push
push
cmp
push
ss
jmp
push
xchg
decl
sbbl
jg
pavgw
mov
jb
push
mov
int3
inc
cwtl
dec
and
and
push
and
outsb
pop
movsb
jbe
mov
mov
add
push
call
push
adc
fisubrs
fiaddl
pushf
out
dec
and
push
jb
mov
mov
xor
pop
popa
rcrb
cmpsl
jge
sbb
shlb
and
jmp
jle
loopne
jnp
or
jne
mov
cltd
cmp
push
lret
dec
sub
push
xor
rclb
xor
jae
or
pusha
dec
pop
push
fyl2xp1
ret
cmc
xor
cmpsb
ja
pusha
pushfw
pop
jecxz
push
jle
xor
sbb
clc
push
scas
push
hlt
shll
fldcw
cmp
daa
adc
sub
add
in
pop
ret
mulb
popa
imul
sub
aas
mov
mov
xchg
das
adc
faddl
cltd
or
scas
sub
ja
arpl
xchg
or
dec
push
pop
imul
pop
push
cmpsl
int
pushl
mov
lret
xor
sub
mov
xlat
jbe
mov
cmpsl
or
aaa
sarb
mov
push
jne
shll
and
sub
mov
dec
push
xchg
and
cwtl
bound
pop
loop
dec
cmp
repz
or
cwtl
cli
testb
and
cmp
mov
xlat
xor
jle
or
jecxz
fisubl
nop
cmp
das
dec
jg
cltd
sub
js
lock
inc
shrb
stc
adc
xchg
inc
imul
mov
xchg
or
shr
cld
dec
and
rorl
push
subl
dec
mov
loope
pslld
push
mov
add
xchg
das
ret
pop
imul
jns
daa
mov
ficoml
popf
xchg
sub
dec
loope
and
adc
xor
dec
add
jae
stc
test
mov
test
mov
neg
rorl
sbb
push
out
add
sub
or
xchg
hlt
mov
setbe
stos
outsb
inc
fnstsw
sub
mov
cmc
lea
mov
mov
cli
push
pop
pop
mov
pop
nop
inc
test
sti
sub
adc
add
pop
mov
add
pop
pop
out
aas
or
mov
sahf
cmp
xchg
jp
dec
jl
out
jmp
pop
fcomps
sti
or
movsb
adc
or
xchg
jbe
roll
xchg
mov
jnp
aad
sub
js
or
in
ss
sbb
pop
mov
inc
jb
into
or
adc
aad
pop
xor
or
sbb
lret
cs
push
movsb
add
popf
push
xchg
xchg
or
lret
xorl
mov
dec
push
fs
xor
gs
lea
xchg
push
inc
bound
dec
mov
inc
jge
lcall
rclb
cmp
xor
std
rclb
adcl
pop
cmp
dec
decb
push
sbb
adc
mov
mov
or
test
enter
dec
xlat
incb
xchg
sbb
and
test
sub
lods
push
ss
mov
repz
lahf
cmc
jno
xor
movb
out
movsb
pop
push
sub
clc
cli
mov
stos
pop
callw
push
stos
nop
dec
jo
aad
gs
rol
fwait
rolb
sub
or
mov
or
add
mov
in
inc
sub
imul
dec
cmp
lcall
inc
xchg
inc
cld
in
xlat
dec
pop
add
scas
sar
cmp
gs
xor
add
ja
cmp
test
loope
adc
aas
mov
xor
sub
sub
mov
cmp
dec
insb
lods
test
insl
into
push
or
repz
ret
mov
insl
imul
mov
into
mov
jb
mov
mov
arpl
add
jo,pn
xor
xchg
sbb
inc
popf
data16
leave
lods
mov
fwait
jp
adc
xor
mov
or
cmp
fimuls
aam
fcoms
data16
sub
pop
enter
out
adc
mov
inc
inc
add
fbld
pop
addb
sbb
mov
icebp
sbb
jmp
adc
jno
cld
pop
loope
mov
in
jb
lea
inc
adc
push
repz
adc
inc
cltd
in
jno
mov
or
push
cmc
inc
jbe
mov
xchg
jmp
inc
push
adc
test
outsb
xorl
addl
int
int
stc
and
ljmp
adc
adc
push
xor
lahf
loop
inc
scas
stc
call
pop
lret
into
push
cwtl
ja
hlt
mov
sub
push
btc
xchg
or
or
cld
dec
minps
test
mov
sub
dec
mov
cmpl
hlt
or
rcrl
lock
xor
insl
dec
insb
rol
jecxz
xor
les
in
jecxz
add
loop
loope
data16
xchg
mov
enter
jo
and
xchg
inc
je
andb
fsubrs
aaa
mov
dec
adc
lcall
jmp
cwtl
mov
cmpl
mov
stc
cli
cmp
je
pop
or
and
shll
add
sub
data16
sbbb
or
and
dec
pop
sbb
pop
xchg
ljmp
mov
jp
clc
clc
lahf
mov
outsb
pop
push
xchg
addr16
punpckldq
movsb
mov
push
imul
test
mov
inc
cmp
inc
or
sbb
cmc
or
das
icebp
jae
repnz
inc
cltd
sbb
aad
dec
jne
dec
sub
imul
push
add
cmp
mov
inc
cmp
dec
dec
int3
pop
out
nop
fbld
loope
adc
mov
popf
cs
push
jmp
mov
gs
jl
sub
sub
push
push
jge
pop
and
ficompl
sahf
inc
pop
sub
sti
cwtl
add
jb
push
rcrl
mov
sbb
cltd
test
and
jae
pusha
mov
popf
inc
and
adc
add
xor
gs
lret
add
dec
jne
push
mov
and
fdiv
ss
jb
lret
out
ret
sbb
and
outsl
jmp
stc
in
push
jl
js
and
subb
xor
and
into
stc
out
cmp
movsb
outsl
mov
dec
iret
pusha
pop
mov
mov
mov
data16
xchg
ljmp
mov
ret
pop
enter
notl
sub
ja
ljmp
xchg
sub
stos
fcmovnb
sub
xlat
xchg
sbb
filds
mov
and
lahf
mov
dec
mov
fcomps
jne,pn
adc
push
xchg
int
std
and
jge
sbb
int3
cld
sbb
ljmp
outsl
sub
push
and
inc
les
jne
fisubl
xor
cmpb
pop
cwtl
inc
lahf
mov
adc
rcll
pop
movsb
or
leave
dec
jno,pt
in
shlb
inc
popa
test
mov
roll
stos
rcrl
mov
insl
nop
jge
adc
mov
es
xchg
ret
in
push
cmp
icebp
push
sub
in
out
repnz
ja
sbb
pop
mov
arpl
cmpsb
push
in
mov
fidivrs
lea
mov
ja
mov
xchg
push
mov
jecxz
fidivrs
cltd
jno
idivb
xor
and
jae
fldcw
stos
divl
fnstsw
orb
lock
shrl
leave
int3
daa
ret
movsb
enter
lods
mov
int
das
cwtl
jge
gs
cs
fldenv
or
mov
pushf
mov
inc
icebp
push
loope
sti
xor
scas
inc
mov
loope
outsl
push
shl
mov
or
mov
xor
test
fcmovbe
add
add
mov
lods
xchg
jmp
je
mov
cltd
das
outsl
jl
leave
sbb
cmpsl
mov
icebp
bound
inc
stos
mov
or
insl
push
sti
inc
loop
mov
xchg
fisttpll
aaa
push
sbbb
test
sub
inc
push
pop
inc
aad
int3
xchg
in
inc
loop
sarb
gs
jo
dec
pop
mov
pmaddwd
mov
sbb
mov
mov
cmp
jb
mov
jle
push
xchg
mov
cmpsl
dec
cmp
pop
das
bound
adcb
xchg
mov
cmp
rcrl
xchg
jbe
test
adc
cli
mov
imul
pop
and
sub
jge
int3
movsl
mov
jge
outsl
add
push
dec
mov
dec
or
imul
iret
movsb
fisubs
inc
test
mov
dec
push
mov
and
push
inc
dec
push
rorl
mov
and
inc
add
sub
repnz
sbb
sub
loope
out
jg
daa
jne
push
rolb
sar
inc
lods
or
pop
mov
mov
jnp
in
cmp
dec
and
shlb
shl
pushf
rclb
out
sub
mov
pop
hlt
jg
and
add
push
push
lret
mov
pop
leave
lods
xor
push
imul
cmp
fwait
and
jb
push
daa
adc
dec
inc
mov
dec
fimuls
and
jnp
test
bound
mov
ljmp
stos
mov
mov
xor
pop
jo
in
shrl
cltd
inc
mov
imul
mov
adc
cli
dec
mov
test
push
outsl
jmp
xchg
rorb
popa
jo
insl
dec
rcrl
or
in
xlat
adc
outsl
mov
imul
xchg
push
lds
sub
bound
jle
mov
pop
adc
cltd
icebp
adc
pop
add
pop
add
mov
or
hlt
inc
call
lret
mov
popa
mov
cmp
pop
mov
nop
shlb
cld
je
popf
dec
int
cli
pop
nop
fwait
mov
pop
lock
push
sub
test
in
fwait
mov
outsb
jge
int3
jg
sbb
adc
jle
inc
popl
jecxz
pusha
xchg
loope
push
push
dec
xor
xor
xchg
sub
lret
cmp
sbb
aam
adc
int
repz
mov
aam
cmp
cmp
maskmovq
testl
xchg
shlb
ja
xchg
mov
cmp
or
add
scas
ds
cltd
mov
xchg
inc
mov
xchg
adc
je
adc
lret
cli
sub
lret
dec
int
jae
fs
mov
sub
inc
outsl
ret
adc
fadd
xor
xchg
icebp
lret
icebp
jp
push
into
or
jle
xlat
push
aas
lcall
andl
pop
fildl
mov
fwait
inc
lock
pop
shrb
aas
lea
pop
sbb
mov
xchg
dec
jno
dec
outsb
negl
stc
imul
add
mov
cld
stos
cmp
adc
pop
sub
aam
leave
xchg
dec
push
pop
mov
mov
jle
aaa
popf
and
pop
or
dec
nop
xchg
jmp
movl
idivb
pop
lods
cmp
lret
shll
hlt
je
dec
insb
mov
xor
xor
sahf
or
mov
mov
push
mov
enter
mov
jecxz
mov
shll
fnstsw
jg
popa
insb
push
mov
aaa
xchg
push
jl
mov
mov
ret
fsubs
popf
xlat
mov
cs
shl
mov
fbstp
scas
adc
push
scas
mov
test
dec
push
jmp
test
das
mov
mov
fidivrl
mov
nop
cmpsl
cli
fmuls
add
push
movsl
xorl
repz
int3
mov
pop
pop
inc
movlps
sbb
mov
nop
push
subl
jnp
mov
in
sarl
aam
aaa
mov
and
inc
jbe
push
cld
in
mov
add
cmc
xlat
in
mov
arpl
jae
and
fmuls
pop
mov
or
or
push
out
mov
jmp
negl
mov
cmp
dec
shlb
icebp
loope
ror
adc
inc
mov
push
mov
push
mov
mov
inc
test
sbb
mov
pop
adc
jbe
fnstsw
xchg
orl
push
cs
lahf
or
sub
insl
dec
les
jl
fincstp
popf
inc
insb
pop
cmp
jnp
ret
push
in
and
add
push
je
int3
cvttps2pi
or
inc
fisttps
dec
xchg
shll
mov
ljmp
xchg
fnstenv
inc
aaa
insb
test
lods
cmpsl
in
fdivrs
xor
sbb
pop
push
nop
or
cmpsl
xor
pop
pop
std
enter
stos
int3
ret
push
add
clc
jg
mov
ljmp
sub
mov
dec
push
pop
adc
sub
and
ret
or
imul
xchg
push
lods
cli
lcall
mov
popf
mov
iret
shrl
or
sub
or
mov
jae
pop
lea
lods
mov
jp
sti
add
pop
push
ss
je
inc
in
mov
arpl
jo
sub
mov
stc
jne
sbb
popa
cmc
push
dec
cmp
sarb
cmc
dec
rcll
pop
mov
enter
add
mov
xchg
negb
cmp
inc
and
imul
sub
add
cmp
dec
sub
cmc
test
cmpsl
dec
gs
push
xchg
pop
jnp
push
sbb
cmp
sbb
fwait
movsb
adc
iret
mov
cld
fimuls
fmul
adc
out
adc
push
sbb
div
lahf
adc
repnz
sub
and
xor
sbb
out
popf
xor
aas
adc
stc
add
xor
push
mov
fdivrl
in
pop
pop
lods
jge
push
jmp
arpl
mov
and
daa
mov
test
xor
or
xchg
fmuls
sbb
pop
popw
sbb
ss
sti
fdivs
pop
fwait
jbe
addr16
lods
in
inc
out
fbld
jle
loopne
xchg
jne
adc
jne
mov
in
mov
idivb
sbb
loop
fwait
pop
adc
push
cld
push
insb
push
ljmp
test
inc
jecxz
popaw
cmp
aas
lcall
inc
xlat
mov
mov
mov
xor
xchg
int3
lahf
pop
hlt
lret
sub
jecxz
xchg
repz
push
lret
mov
mov
jno
ds
jl
inc
mov
in
repnz
xor
je
cmp
pushf
add
cld
mov
sbb
pop
xor
out
movsb
insl
or
sub
dec
fldl
inc
mov
in
push
sbb
jmp
lds
adc
inc
outsb
pop
dec
out
mov
mov
inc
mov
cmc
loop
repz
jp
push
aad
pop
push
test
icebp
bound
or
xor
ret
mov
repz
jnp
rolb
jp
enter
ja
push
in
sbb
imull
add
in
loope
out
pushf
repnz
xor
js
jge
in
xchg
dec
jnp
shll
lahf
xlat
mov
jl
push
int3
mov
pushl
sbb
and
mov
mov
sub
je
mov
loopne
sbb
bound
rcl
stos
aad
and
outsb
aaa
icebp
dec
iret
cs
or
add
ja
xchg
lods
insb
dec
movsl
dec
shrb
xor
pop
and
mov
adc
and
or
insl
jne
fdivrp
imul
xchg
xchg
xchg
lea
out
dec
jmp
test
or
loope
inc
sbb
lcall
xchg
adc
dec
pop
daa
idivb
ss
xor
xchg
repnz
inc
aam
mov
ret
out
jo
and
mov
inc
clc
mov
sub
xlat
and
mov
int
ljmp
mov
or
adc
push
or
adc
adc
xchg
enter
cmp
inc
sub
pop
push
pop
in
mov
jle
incb
rcll
test
lods
lods
sahf
mov
ret
pop
ret
push
lcall
xchg
push
ljmp
popa
sub
sbb
fs
gs
je
ret
push
mov
pop
adc
loopne
lahf
iret
rorb
imul
addl
nop
loope
out
out
lods
fidivrl
mov
loop
shl
pop
xchg
add
jb
add
pushf
aam
in
lcall
xchg
inc
push
adc
inc
sub
stos
ds
jmp
inc
sbb
cmpsl
pop
mov
pop
and
mov
add
aaa
xchg
je
subb
cmpsb
mov
int3
iret
fistl
lea
jae
jo
adc
adc
nop
int3
in
xchg
test
pushf
ret
leave
fdivrs
in
xchg
jb
jmp
enter
xchg
in
inc
jge
sbb
fldcw
shrl
cmp
jb
sti
sub
sbb
jns
jl
pop
and
ret
sbb
xchg
dec
hlt
adc
sti
inc
mov
cmp
cs
jne
xchg
out
cld
mov
iret
mov
inc
jne
push
and
inc
or
add
mov
xor
test
mov
mov
mov
xchg
pop
jmp
jmp
out
mov
dec
nop
mov
xchg
xchg
jle
xlat
pushf
add
ret
xchg
cmp
testb
and
mov
test
dec
mov
fisttpll
lahf
jp
mov
negb
das
hlt
cld
loopne
push
iret
out
lods
cmpsl
cmp
int
pop
lahf
mov
lea
adcb
xchg
loope
daa
xor
mov
aad
popa
adc
jne
xor
push
in
and
pop
dec
pop
int3
jp
or
ja
or
dec
mov
into
js
stos
loop
test
push
xor
xor
insl
push
ja
xor
push
inc
popf
sub
dec
stos
mov
aam
je
add
fldcw
add
pop
mov
add
sahf
push
cli
aad
mov
cs
push
jp
popf
pop
nop
ss
cld
xchg
pusha
das
xor
std
jae
cmp
jno
cmp
lds
inc
push
jge
loopne,pn
subl
sahf
in
ds
add
shrb
fsubs
sbb
mov
jae
cwtl
adc
hlt
xor
fldcw
rcrl
add
dec
xor
and
sbb
iret
pavgw
ficoms
rcl
pop
push
push
mov
lahf
loope
adc
sbb
mov
lock
push
add
push
jge
inc
sub
xor
lret
cmc
pop
mov
sub
dec
test
into
add
mov
data16
mov
or
imull
addr16
into
dec
int
lret
adc
aas
iret
ljmp
jns
fidivs
sbb
push
jp
scas
sub
jne
xchg
ret
sbbl
add
mov
push
mov
adc
and
aas
xchg
mov
mov
or
stos
sub
jmp
jae
sbb
sub
cmp
repz
ret
xchg
push
data16
test
and
jecxz
xchg
mov
pop
push
and
ds
cmp
pop
out
mov
jmp
dec
into
xor
es
movsb
mov
mov
mov
data16
scas
adc
lret
mov
dec
out
jecxz
mov
stos
fildl
sub
inc
cwtl
shrl
aaa
jbe
pop
mov
cltd
scas
adc
call
mov
and
adc
lcall
stc
mov
mov
rolb
mov
pop
shlb
stos
ret
iret
daa
pop
sbb
jb
repnz
mov
out
cmp
gs
enter
add
xchg
cmp
lret
sub
ja
enter
cmp
sbb
xchg
add
and
jae
lds
mov
cmp
inc
aam
cmpsb
call
icebp
sub
rcll
stc
sahf
xor
and
arpl
scas
loopne
popf
insl
stos
lods
inc
shlb
out
int
in
inc
push
sbb
js
int3
inc
inc
out
lea
inc
add
and
cmpsl
jge
test
cmp
jns
mov
loope
sarl
push
mov
pop
push
add
pop
shlb
adc
pop
fsubs
xor
cmp
cmovge
and
xchg
pusha
mov
push
stos
push
std
int
cs
icebp
pop
sbb
xchg
cmpb
jl
leave
dec
call
push
icebp
fnstcw
popf
xor
jg
fdecstp
jmp
shlb
inc
shrb
cmp
push
into
jnp
inc
cmc
mov
arpl
sahf
test
movd
sbb
cmp
push
xchg
out
mov
fcoml
data16
scas
rcr
lcall
pop
jbe,pn
ds
aaa
in
and
aad
rorb
xchg
cld
lret
sti
int
dec
jmp
push
pop
dec
push
dec
xchg
pop
imul
push
out
mov
dec
xchg
sbbl
nop
cli
int
outsl
hlt
fldl
test
mov
mov
xor
ss
or
lods
cmp
das
loope
push
jl
xchg
jo
popf
sahf
mov
push
rol
inc
fldcw
add
mov
dec
scas
lds
loope
push
mov
pusha
mov
imul
fadd
mov
nop
mov
and
xor
xor
repz
cmp
sub
int
lock
mov
mov
mov
in
push
loop
loopne
leave
shl
or
sbb
pushf
ljmp
test
ret
in
mov
push
or
das
cs
xor
leave
incb
mov
fsubs
mov
push
in
cmp
add
mov
cmpb
movsl
mov
adc
pop
inc
sbb
xchg
fdivl
or
jne
testl
cli
adc
enter
cltd
clc
pushf
jmp
mov
loop
push
and
dec
cltd
mov
sbb
cld
addr16
jecxz
aaa
or
push
or
mov
es
mov
pop
scas
inc
mov
ds
dec
mov
or
inc
mov
sub
jb
sbb
mov
or
push
add
aaa
adc
shlb
test
and
subl
jg
loopne
push
xchg
in
mov
xlat
aam
rcr
pop
ffree
pop
clc
push
movsb
adc
cmpsl
int
test
sahf
jno
adc
stos
pop
push
addr16
dec
adc
mov
xchg
out
addr16
mov
add
cmpsb
cmp
or
inc
in
pop
jne
inc
mov
outsb
pusha
cs
adc
adcl
cmp
mov
outsb
fs
jnp
ja
iret
sti
cs
sbb
arpl
jg
jmp
cltd
sub
inc
les
mov
mov
xchg
fcmove
xor
lret
lock
sbb
popf
xor
cltd
fs
jns
outsb
mov
pop
sbb
ja
fistpl
dec
gs
mov
fwait
push
cs
adc
dec
adc
add
jl
jno
xor
xchg
mov
jae
mov
jg
jns
psllw
add
mov
inc
pop
in
and
xchg
pusha
add
in
call
and
out
jne
mov
int3
add
repz
mov
pop
mov
pushf
cwtl
inc
jne
sar
adc
enter
inc
es
jp
push
push
pop
add
arpl
outsl
pop
outsb
lret
jns
jno
sbb
arpl
dec
sub
cmpsb
aas
xchg
ret
sahf
test
ret
xchg
xchg
mov
fwait
add
add
xchg
rcll
pop
inc
cmpsb
outsl
mov
xchg
sbb
hlt
mov
push
sbb
sbb
push
mov
or
lods
insl
rorb
cld
dec
dec
decl
cmp
imul
sbb
addr16
out
test
icebp
mov
inc
or
sub
lea
inc
fwait
mov
add
lret
fisubrs
rcll
dec
call
imul
shll
movsb
lcall
inc
scas
pop
push
mov
push
or
mov
cli
inc
and
push
scas
lock
pop
cmp
jle
xor
ss
push
and
push
xor
cmp
cmc
xchg
hlt
jnp
and
lock
mov
mov
sub
mov
les
out
loope
ja
testl
andl
mov
into
cmp
cmp
fisttpll
xchg
xor
iret
mov
mov
push
xchg
inc
lds
fcmovnbe
lret
std
jae
cmpsl
hlt
cld
mov
rcrl
data16
fadds
xchg
push
out
xchg
or
shlb
push
in
lcall
insb
mov
fcomi
ljmp
pop
test
jb
inc
fidivl
mov
cmpsb
std
cmp
xchg
push
push
in
test
lock
bound
cmp
lahf
js
in
test
adc
mov
sub
xchg
xchg
outsb
inc
jno
mov
pop
sub
sar
ret
mov
push
leave
mov
int
int
mov
lcall
pop
push
call
adcl
xor
fildll
pop
sahf
aad
je
jg
mov
out
push
int3
pop
pop
fs
xchg
lds
leave
pop
divl
inc
inc
mov
fwait
jnp
mov
mov
lods
ss
push
inc
or
pop
rcrl
fistps
mov
lcall
mov
lret
cmpl
clc
xchg
mov
clc
adc
pop
add
leave
xlat
push
push
aad
xchg
icebp
sub
and
test
xor
mov
loop
sbb
and
decl
push
lea
add
out
mov
lds
or
mov
add
pop
or
ret
mov
dec
cli
mov
jl
pop
xchg
xchg
push
sbb
push
mov
or
adc
bndldx
pop
loop
cmp
push
out
cmc
mov
sbb
mov
xchg
pop
jge
push
int3
mov
cld
adc
cmpb
pop
push
inc
jp
jns
fisubl
pop
add
or
int
pop
and
movsb
call
xchg
clc
inc
ljmp
cmp
xor
imul
aam
adc
and
subb
call
popa
add
pop
jmp
mov
inc
cs
xchg
mov
data16
cmpsb
enter
popa
jge
testl
jp
and
adc
cmpsb
loop
arpl
mov
mov
xchg
adc
icebp
pop
sbb
sub
pop
xchg
shr
in
inc
adc
in
cwtl
sbb
arpl
loopne
mov
adc
xchg
or
les
cli
out
jle
xor
mov
sub
cmp
mov
push
aaa
rclb
mov
sarl
loope
in
pop
adc
push
jbe
add
and
mov
mov
xchg
sub
sbb
pusha
sbb
hlt
xor
sahf
daa
lods
lods
loopne
in
sub
popf
push
pop
inc
mov
pop
and
cmp
push
mov
addr16
pop
out
sbb
lcall
jns
pop
xchg
mov
jbe
push
loope
adc
sbb
cmp
jae
adc
out
push
int3
aas
add
pop
jns
sub
stos
daa
inc
adc
lods
xor
test
lods
mov
mov
in
lods
lods
loop
jns
cwtl
adc
ret
loope
mov
out
or
sbb
repz
pop
xor
mov
mov
push
or
mov
or
sbb
xchg
test
in
jl
stos
rol
orb
repnz
cmp
push
xor
inc
sbb
fldenv
mov
repz
jnp
xor
mov
fistpl
mov
ss
push
jmp
jg
inc
xchg
and
push
mov
mov
mov
test
xor
fdivp
ljmp
stos
jge
iret
mov
or
pop
dec
je
xchg
imul
pop
movsl
jns
cmp
stos
cmp
call
inc
mov
idivb
inc
dec
cs
cmpsb
sbb
stos
mov
dec
push
cli
dec
jl
in
push
cmp
incb
out
mov
lret
cmp
out
mov
aaa
jbe
xchg
rorl
je
mov
scas
push
hlt
push
in
jmp
dec
gs
stos
bound
mov
pop
push
jmp
or
hlt
out
mov
mov
xor
and
in
aaa
mov
push
dec
call
push
xor
ja
loop
sarb
sbb
movsl
xchg
cs
je
mov
xor
pop
test
pop
mov
mov
addr16
cs
lock
out
bound
loop
pushf
cltd
xor
outsb
cmp
mov
testb
jne
lods
ret
mov
clc
sbb
add
cmp
cli
inc
pusha
inc
ja
in
or
jecxz
pop
fs
iret
inc
adc
and
xchg
push
add
sub
movsl
dec
stos
or
push
ret
test
stos
sbb
mov
mov
pop
fiaddl
test
iret
push
pop
aam
pushf
ud1
cli
and
pop
mov
movsb
pop
dec
int
xchg
into
push
pop
ss
lods
mov
aam
push
xchg
mov
jns
mov
fisubrs
mov
popf
les
mov
push
cmp
or
xchg
inc
push
bound
push
leave
fistpl
push
sub
mov
ja
mov
push
lea
aas
mov
push
jmp
push
mov
mov
xor
rcr
push
adc
mov
cmp
movsb
and
out
addr16
test
mov
sbb
mov
pop
pop
adc
test
mov
aas
das
fcompl
test
in
sbb
lods
in
fistl
jnp
and
aad
divl
sub
sbb
mov
fwait
adc
and
bound
cmp
mov
daa
lods
inc
and
mov
in
aad
cmp
push
mov
adc
adc
mov
mov
lcall
pop
jne
mov
mov
les
inc
scas
sub
xor
mov
call
clc
gs
cli
int
jge
clc
sbb
sbb
and
pop
ret
inc
je
js
outsb
and
jnp
mov
xlat
jg
xor
subl
es
fistpll
mov
mov
and
repnz
jo
lret
dec
dec
ret
adc
pop
insl
adc
or
xchg
sub
push
jne
sbb
push
push
arpl
nop
cmp
dec
mov
test
xchg
lods
cwtl
mov
mov
pop
mov
enter
push
and
pop
adc
in
jns
pop
push
sub
pop
and
or
lcall
into
hlt
mov
and
or
jno
ljmp
test
enter
loop
cwtl
pusha
mov
adc
add
nop
add
cld
jne
jl
adc
out
adc
test
cs
push
add
ret
shlb
sahf
arpl
inc
inc
cltd
pop
clc
ljmp
xchg
adc
hlt
jnp
or
test
int3
pop
popa
outsb
gs
pop
popa
mov
or
cli
xchg
cwtl
test
fstps
loopne
sbb
dec
loopne
lret
sub
or
sub
sub
push
ja
adc
pop
lock
mov
fimuls
adc
fistpl
and
sbb
popf
add
xchg
jno
cmp
jno
hlt
divl
sbb
xchg
insl
int
test
pop
sub
mov
mov
aam
stos
pop
int3
je
ss
outsb
mov
in
jb
push
xchg
fdivrl
fstps
test
adcl
cmp
xor
push
sub
mov
int
jle
cli
pusha
out
mov
push
mov
lods
mov
jp
aaa
adc
decb
mov
orl
into
cld
dec
mov
cmp
add
jns
subl
ljmp
sub
inc
or
clc
mov
jge
cwtl
ret
jbe
mov
jno
mov
dec
jnp
push
xor
push
or
iret
fucomi
cmpsl
mov
push
popa
xor
adcb
add
in
jo
lcall
shl
xchg
push
fwait
lock
fdivs
adc
pop
imul
jecxz
lahf
icebp
add
pop
cmpl
scas
xor
fisttpll
cmp
pop
sub
sarb
test
cmp
aaa
mov
outsb
push
and
push
sti
xchg
stos
and
jecxz
imul
movsl
sbb
xor
sbbb
aad
icebp
ss
and
pop
dec
or
cmp
aaa
mov
xchg
movsl
cmp
outsb
scas
push
les
fsubr
sub
inc
out
dec
std
and
loop
test
out
cmp
aam
nop
push
dec
popf
scas
mov
or
add
rcll
std
movsl
sahf
popf
scas
push
jp
xor
and
movsb
iret
and
mov
jp
stc
pop
clc
fwait
jge
sub
sub
xor
data16
jae
in
popf
xchg
xor
or
jecxz
xchg
outsb
sub
stos
or
push
xor
xor
gs
out
clc
popf
pop
mov
pop
ja
dec
xchg
mov
addl
clc
inc
pop
je
jg
aas
insb
andl
aam
fs
and
push
fsubrl
jb
insb
stc
sbb
aaa
xchg
mov
es
pop
inc
notb
ja
pop
aas
ljmp
push
push
mov
pop
jecxz
pop
aad
xchg
xchg
inc
cmp
and
xchg
pop
mov
sub
test
shlb
adc
insb
and
adc
add
lahf
stos
dec
push
dec
imul
sbb
in
outsb
dec
enter
cmc
aas
mov
lahf
sbb
inc
mov
dec
mov
push
lods
ja
loopne
push
mov
dec
mov
fwait
lcall
adc
mov
call
insb
inc
jp
rorb
es
mov
pop
jns
mov
adc
shlb
jbe
scas
jecxz
xor
aam
outsb
shrl
scas
popl
stos
sbb
in
and
fidivs
push
or
insl
cmp
mov
lods
pop
mov
pop
inc
sub
fisubrl
cmp
mov
sub
cmpsl
pop
scas
outsl
pop
add
xor
add
inc
adc
orl
fisttps
lock
cltd
mov
std
lahf
mov
xchg
sarl
push
sub
pop
xor
mov
add
dec
orb
jne
ret
push
sti
int3
insb
repnz
dec
popl
xor
jno
ret
pop
cmp
cmp
enter
xor
jge
add
cltd
fists
cmp
cmp
mov
sbb
pop
test
add
cs
icebp
fcmovnb
mov
xchg
into
sbb
push
and
adc
loope
xchg
push
mov
stos
adc
out
movsl
push
fistps
add
pushf
dec
push
cmp
repz
mov
aas
sub
shr
sbb
and
sbb
jmp
loop
pushf
rcrb
aam
icebp
jp
test
ficoms
xchg
insb
xor
bts
dec
jmp
sbb
pop
rcl
dec
jecxz
mov
lret
out
lock
lods
pop
stc
dec
mov
or
je
fdivl
xor
sbb
mov
fnstsw
cmp
dec
xor
or
push
cli
jecxz
test
out
mov
sub
add
hlt
outsb
and
inc
sbb
loopne
fiaddl
mov
dec
or
mov
shlb
sbb
je
or
sarl
mov
inc
cmc
jns
xor
mov
dec
lock
mov
loop
test
cmp
or
adc
lods
sti
mov
push
add
push
inc
les
stc
shlb
cld
sbb
aad
inc
jmp
and
mov
xchg
cwtl
or
lock
xchg
mov
je
xchg
inc
filds
inc
fwait
bnd
adc
bound
and
and
xlat
in
pop
cmp
lea
stos
cmpsl
ficoms
or
pop
aam
pop
fldlg2
cmp
push
fcoms
mov
inc
adc
push
test
cmp
lock
and
icebp
mov
rcll
add
cmp
and
rcr
jne
jae
adc
ret
mov
and
ficoms
xorb
rcl
icebp
sub
cmp
mov
or
cmp
lods
xchg
aas
movsb
cmc
pop
or
mov
jo
into
stos
fisttpl
jge
mov
pop
stos
mov
loop
fmull
xlat
cltd
repz
fcomi
sbb
movsb
pop
scas
decb
cmc
stc
push
dec
in
ss
shr
mov
lret
das
push
scas
movsb
scas
stos
ss
cltd
xchg
ret
mov
xchg
pop
jmp
hlt
jbe
rcll
adc
cmp
ret
cwtl
setns
out
dec
adc
adcb
or
mov
mov
ds
ficoms
mov
dec
std
gs
call
mov
xchg
loopne
hlt
jno
leave
push
enter
adc
repz
xor
int
mov
sbbl
sub
rol
es
ds
sbbb
add
nop
push
sbb
ljmp
push
adc
arpl
movsl
jecxz
cmp
ljmp
stos
les
adc
xchg
bnd
scas
outsl
in
iret
pop
aad
cltd
shll
in
sti
in
push
jl
xor
or
scas
sub
js
sbb
dec
push
sub
mov
insb
aas
mov
adc
cld
cmp
gs
int
ljmp
mov
mov
cwtl
mov
mov
daa
mov
aaa
pop
cwtl
fnstcw
div
cld
mov
sbb
mov
jp
dec
lods
daa
xor
add
or
lods
movsl
stc
test
cs
cmpsb
les
out
nop
adc
lock
and
and
push
xchg
mov
mov
sbb
outsb
xor
shrl
mov
cmc
cmp
jnp
and
imul
add
stc
sbb
dec
sub
jl
xchg
and
imul
lret
mov
mov
dec
test
xchg
dec
mov
pop
jg
adc
mov
es
jo
pop
das
mov
scas
adc
test
dec
xchg
mov
dec
xchg
fsubr
adc
jmp
cli
push
mov
push
lock
or
negb
adc
mov
mov
mov
cld
arpl
or
lds
inc
mov
pop
inc
sbb
insl
daa
pop
pop
fldcw
gs
and
mov
fwait
push
shl
imul
mov
mov
test
push
or
test
scas
push
ja
jg
filds
out
imul
or
fstp
pop
insb
sub
push
test
add
lods
mov
pop
cmp
mov
testl
push
or
cli
xor
and
loopne
outsb
mov
test
popa
cmp
add
push
xor
stc
sub
test
pop
mov
les
or
out
shlb
adc
shlb
mov
ja
cli
popf
aaa
orb
in
movsl
push
daa
mov
and
jo
out
ss
cmp
cmp
dec
fcmovnbe
rolb
mov
je
jmp
mov
jno
hlt
push
lahf
pop
dec
push
push
int3
shrb
xchg
push
fs
dec
xchg
lcall
daa
cmp
int3
repz
pop
adc
fildll
in
push
lock
rcrl
sbb
rolb
mov
add
addb
push
jl
mov
lahf
push
sub
push
bound
push
test
std
and
out
pop
inc
jmp
and
pop
mov
fstpl
push
movsl
jmp
sbb
sub
mov
dec
popf
sub
aad
push
rcrl
pop
push
mov
jbe
xor
pop
repz
mov
xchg
xchg
mov
nop
aam
icebp
sub
push
sbb
mov
or
mov
jmp
dec
add
movsl
stos
and
cmp
sub
shrb
sub
sub
push
add
dec
adc
inc
pop
hlt
jl
xor
lock
jns
mov
into
jb
sbb
imul
ljmp
loope
pop
xchg
fldcw
in
add
jno
pop
jne
arpl
cmp
outsl
stc
nop
pop
test
xchg
mov
hlt
xor
inc
std
cmp
sti
sbb
imul
iret
fcoms
pop
mov
aas
andl
test
xor
pop
adc
lcall
das
dec
or
sbb
imul
jnp
sub
inc
xchg
rcr
jbe
mov
inc
scas
movsb
sbb
and
popa
mov
daa
mov
xorb
int3
iret
iret
test
xchg
mov
cwtl
push
test
jp
jge
lahf
cs
mull
mov
sub
push
jle
ss
add
jne
mov
pop
les
cmp
sub
jnp
inc
imul
fs
push
insb
mov
sti
icebp
les
mov
pop
int
add
fwait
jmp
shlb
or
or
lea
push
adc
scas
push
filds
inc
sahf
ror
inc
sub
int
insl
test
jmp
in
sbb
movsb
lcall
lds
dec
xchg
int
repnz
test
xchg
push
adcl
aad
xor
stc
enter
rol
shll
push
or
cmpsl
jbe
jne
jnp
jb
rorl
sub
hlt
mov
stos
or
jl
cmp
add
xchg
push
test
scas
xor
leave
fsubr
push
pop
pop
sbb
cmp
mov
push
loope
sub
xchg
inc
inc
gs
dec
add
sub
mov
jle
adc
lods
mov
add
bound
out
jbe
inc
stos
xchg
fstps
outsb
rcll
or
push
in
or
cmp
mov
cmp
or
jns
iret
jl
xor
jmp
and
pop
sub
pop
jnp
aas
les
push
mov
ss
and
xlat
jbe
imul
push
dec
mov
dec
in
lahf
fs
push
insb
out
insl
mov
in
xor
cmp
sub
lea
add
mov
jno
pop
add
cmpsl
test
inc
out
aam
xchg
inc
mov
hlt
lock
test
in
pop
adc
push
arpl
mov
jbe
inc
sub
cmp
jae
cmpsb
fisttps
aas
dec
mov
or
clc
lret
pop
mov
outsl
ss
mov
je
scas
pushf
sarl
insb
jne
test
pop
inc
mov
and
and
out
sti
out
sbb
cs
outsl
popa
sti
int
test
sub
add
cmp
jmp
sahf
sbbl
lods
in
sbbb
cmpsb
pop
xchg
rcrl
cmpsl
aam
push
jecxz
insl
or
bound
imul
lahf
xor
mov
das
imul
test
adc
lret
fwait
adc
das
mov
daa
shl
popf
repnz
xorl
movsb
ss
adc
sbb
into
mov
fwait
loop
cmp
jp
jne
jns
jmp
push
aas
dec
shl
jmp
dec
orb
sub
test
or
in
adc
cwtl
push
xchg
movsb
sbb
mov
das
out
push
push
dec
bswap
dec
xchg
mov
popa
call
sahf
insb
sub
cmp
in
mov
mov
or
imul
sub
jle
mov
test
icebp
jl
pushf
cwtl
sti
pop
jmp
or
sti
sub
ljmp
fisubrs
data16
mov
or
les
sub
out
mov
lret
aam
xchg
xchg
out
icebp
xor
mov
xorl
clc
enter
test
fisubrs
pop
or
inc
lcall
addr16
sarb
bound
cwtl
mov
jo
loopne
sub
mov
jle
push
add
jb
mov
jae
mov
rorb
ds
sub
xor
sarb
mov
push
pop
pop
divl
lret
ret
dec
mov
push
fwait
test
test
add
adc
mov
cwtl
or
sbb
ret
loopne
and
push
push
mov
fsubrl
into
push
inc
pop
pop
push
inc
adc
jno
mov
imul
addr16
out
fldcw
inc
xchg
mov
aas
and
cmp
fidivrs
imul
mov
in
xchg
mov
movsb
mov
ffree
scas
xchg
fimuls
mov
cltd
adc
lahf
xor
sub
hlt
fcoms
addl
mov
jle
jae
enter
sbb
out
mov
jae
fisttps
jle
mov
cmp
dec
imul
or
jp
lret
pop
and
mov
push
inc
popa
and
sbb
scas
xchg
jbe
into
fisttps
mov
sub
or
mov
add
jne
enter
pop
test
rorb
push
jb
imul
or
loope
cld
mov
icebp
and
adc
shl
decb
or
push
sbb
xchg
jo
lcall
push
mov
incl
pop
mov
aam
push
cmc
inc
dec
sub
cmp
fdivrp
xor
xor
push
out
insb
mov
imul
inc
xchg
fdivrs
pop
jl
cld
pop
testb
cmpsb
aas
pop
sbb
popf
mov
lret
and
in
ss
pop
ret
pop
sub
pushf
inc
ja
push
psrlw
or
lock
xchg
dec
mov
sbb
subb
cmp
xchg
leave
adc
aaa
loop
sub
test
push
push
fidivrl
cmp
test
lea
jb
xchg
sub
insl
icebp
insb
iret
imul
mov
frstor
popf
imul
fs
push
dec
out
sub
or
xchg
add
popf
mov
rcll
add
sub
jle
sahf
repnz
movsb
movsb
popa
adc
sub
js
cwtl
out
mov
test
mov
mov
fstps
fidivs
sbbb
mov
addr16
icebp
add
mov
testl
sahf
test
mov
ret
clc
fdivrs
iret
jo
ss
lods
adcb
dec
loop
shll
xchg
mov
aam
inc
xor
fldenv
scas
testb
jb
jae
mov
xor
ljmp
xlat
push
nop
dec
in
lea
lods
movb
dec
push
insb
addr16
jge
adc
addl
popf
xchg
push
cmp
aas
gs
and
mov
imul
add
mov
movsb
jp
sbb
scas
into
mov
rolb
xor
daa
xor
mulb
clc
push
das
mov
lock
cmpsb
adc
loop
jmp
and
dec
and
lds
sub
mov
ret
mov
sbb
lds
loope
pop
mov
jmp
fidivs
ret
outsl
fs
in
pop
in
insl
test
int3
mov
jp
add
pusha
incb
out
test
jg
and
jae
subl
inc
enter
stos
jno
lods
jle
lret
hlt
lcall
clc
cmp
sub
push
pop
mov
inc
jno
mov
mov
adc
mov
jmp
mov
fstl
sbb
adc
xor
sub
inc
sahf
xchg
xor
mov
cmc
int
pop
pop
adc
icebp
sbb
into
cmp
in
xor
xchg
lock
int
dec
into
jle
inc
rorl
outsl
jg
fnsave
cld
jge
js
fs
loop
jae
addr16
jb
popf
daa
mov
xchg
mov
add
mov
popa
lea
insl
inc
popf
push
or
inc
xlat
ljmp
lods
adcl
out
jge
jb
mov
pop
xchg
aad
cmp
adc
out
movsb
mov
and
add
jnp
movsb
or
jg
loop
or
cmp
push
inc
pop
add
sub
imul
push
lock
sti
add
or
ficoms
or
orb
js
push
adc
push
mov
rorb
rep
pop
sbbb
mov
je
test
lcall
push
inc
cmp
pop
mov
lret
insb
gs
and
xlat
js
pop
push
mov
jg
cmc
ret
mov
cmpl
add
dec
movsl
out
add
or
fcoml
push
je
int
in
mov
xchg
lock
sti
cmp
jmp
dec
add
repnz
pop
jmp
dec
cmp
fwait
inc
mov
lret
xor
pop
icebp
push
in
cmpsl
sub
mov
push
push
sar
adc
cwtl
xchg
adc
movsb
imul
out
je
sbb
xchg
and
xor
add
mov
in
pusha
aad
rcrb
shrl
jge
js
inc
mov
jg
dec
call
ja
icebp
mov
shrl
xchg
sti
pop
inc
mov
jo
int
mov
mov
mov
out
clc
mov
xor
jg
jo
data16
jne
mov
mov
mov
in
out
lds
aas
jnp
mov
addr16
ja
sbb
fdivrs
shrb
in
pop
les
rcl
jb
out
cmp
jg
pop
add
and
mov
mov
mov
push
mov
dec
add
leave
repz
lds
test
pop
push
mov
mov
mov
mov
out
das
mov
cmp
jae
and
jecxz
out
test
adc
adc
xchg
sub
test
xor
fwait
and
lahf
enter
in
pop
or
out
scas
in
lock
push
bswap
xchg
or
xchg
cmpsl
hlt
xchg
rclb
jno
mov
shl
ss
and
out
inc
repz
add
or
mov
test
mov
scas
loope
loopne
jge
cli
mov
push
inc
fadds
out
mov
jne
scas
lahf
cmp
sub
jl
ja
mov
addr16
xchg
xchg
add
cmp
dec
mov
jae
mov
mov
into
and
imul
inc
mov
arpl
scas
out
test
pop
cmp
xchg
je
outsb
pop
stos
inc
dec
dec
push
and
mov
cmp
ret
insb
gs
rcll
gs
inc
aas
jo
mov
xor
sti
dec
data16
cmp
jecxz
nop
or
adc
xor
jne
scas
je
aaa
ss
clc
shrl
mov
fnclex
push
push
inc
pop
je
movsb
xor
mov
mov
repnz
test
push
or
fcmovne
clc
enter
add
popf
xor
icebp
testb
divb
cmp
jnp
lea
shll
aam
dec
jo
pop
push
push
in
nop
push
test
bound
pop
sub
push
mov
popf
push
orb
cmp
mov
out
adcl
test
pop
mov
jmp
xchg
fsubs
cmp
outsb
dec
add
pushf
or
in
push
pop
fcmovbe
notl
aad
sub
push
add
test
cs
dec
push
popf
add
rorb
ret
jns
arpl
mov
orl
data16
push
pusha
jge
rol
xchg
mov
ja
pushf
sarl
jge
xchg
pop
mov
mov
cmp
jne
lea
sub
push
pop
jns
cltd
cltd
scas
sub
adc
cmp
sub
jb
pop
nop
cmp
jmp
sub
mov
je
xorl
loope
push
mov
push
movsb
movsl
je
lahf
out
mov
outsl
xchg
jo
ja,pn
sub
fwait
lea
ret
shlb
popa
mov
clc
mov
and
jmp
lods
mov
push
sub
mov
stc
pop
decb
jecxz
sbb
cmpsb
fnstsw
inc
add
push
mov
pmuludq
arpl
jnp
xchg
lret
and
jg
repnz
and
mov
inc
sahf
push
push
push
clc
leave
movl
ret
mov
mov
sub
test
nop
adc
add
push
mov
sti
push
pop
jecxz
pop
adc
enter
cmp
mov
inc
sti
popf
sub
or
xor
inc
pusha
and
loope
push
xor
cmp
popa
lods
adc
int3
xor
gs
lcall
xchg
aad
jnp
jp
sub
mov
scas
push
add
or
cmc
stos
or
xorl
and
push
xorb
popf
loope
or
fsubr
or
jbe
inc
popa
fistpll
pop
jae
scas
add
jg
mov
jne
or
jnp
into
sub
inc
xchg
pop
mov
sar
mov
lea
inc
sbb
adc
cs
mov
add
mov
push
lahf
ss
enter
push
popf
mov
sub
pop
insl
clc
orl
popa
outsl
add
jmp
das
jnp
cmp
push
test
xchg
jge
or
test
andb
jg
dec
inc
jb
push
push
xchg
je
pop
ss
aaa
daa
paddsw
repnz
push
aaa
addr16
add
add
or
insl
movsb
jmp
movsb
test
das
inc
add
dec
ja
add
pop
jo
add
push
fidivrl
lds
dec
push
bound
out
cli
std
cmp
push
inc
jl
imul
add
sti
pop
xlat
mov
jo
adc
test
lock
inc
roll
xlat
inc
adc
mov
pop
sub
and
incb
int
sti
sti
cmp
fwait
pop
xchg
push
orb
jnp
push
loope
std
inc
sub
add
pop
repz
mov
outsl
and
cmp
shlb
clc
cli
dec
mov
inc
mov
mov
mov
jo
scas
cmp
sub
jo
scas
movsl
pop
test
cmp
filds
mov
push
repz
pop
js
aad
bound
pop
sbb
divl
mov
jecxz
idivl
out
lahf
fistpl
movsl
or
sbb
push
movsl
out
dec
add
jnp
test
sub
sbb
frstor
pop
and
int
adc
pop
popa
push
sbb
sbb
mov
sub
sub
lods
andl
push
out
insb
nop
mov
mov
fnstenv
inc
sub
or
in
mov
and
icebp
inc
ss
imul
nop
dec
mov
testl
mov
pop
cmc
call
inc
jns
in
aad
fstpl
std
pop
or
das
rorl
or
dec
cmpsl
in
stos
pop
fstpl
pop
stos
divb
lahf
scas
lahf
mov
pop
test
mov
in
jge,pn
aaa
add
or
leave
add
cs
shrb
sub
shlb
out
popa
pushf
sbbl
sub
inc
or
cmp
push
and
pop
inc
in
xchg
lret
psubw
lahf
fdivrs
dec
mov
push
sub
xchg
xchg
into
adc
or
push
pop
xchg
xorl
jmp
adc
cmc
sbb
aaa
sub
push
daa
jbe
push
addl
xchg
pop
and
dec
adc
mov
and
insb
pusha
sub
mov
mov
inc
loopne
ret
push
or
loopne
add
rcrb
and
mov
lods
ficoms
pop
movsb
icebp
jne
ss
jbe
rcrb
fidivs
clc
ror
mov
cmp
xlat
popf
push
push
add
or
pop
or
arpl
mov
lret
test
pushf
int3
aas
xlat
push
mov
cs
lcall
xchg
and
or
rcll
dec
aas
mov
jg
cmp
xchg
pusha
lret
movsb
lods
movsb
mov
mov
outsl
ror
xchg
xor
ficoml
scas
ljmp
xor
outsb
or
adc
sbb
into
fisubrl
mov
xchg
into
cmc
pop
push
push
int
stc
rorb
xchg
xchg
aas
fisubrs
imul
repz
les
mov
xchg
lahf
psubsw
pop
add
xor
sub
fdivl
pop
scas
andl
sub
pop
xor
imul
orb
dec
test
mov
aas
lock
mul
emms
adc
stc
cmp
fistpl
xchg
mull
inc
sti
sub
es
push
out
mov
imul
ljmp
sub
inc
out
pop
rcr
dec
push
or
push
push
lahf
stos
shr
mov
lods
rcll
std
add
rorl
pop
adc
push
imul
jb
inc
lahf
dec
sub
sub
std
sbb
mov
push
pop
movsl
add
loop
outsl
je
sbb
and
jne
gs
lret
xor
dec
das
or
addb
jae
js
sub
cmp
test
push
fcmovne
dec
cmp
in
fmull
pop
pusha
das
xchg
adc
fmull
adc
sar
jmp
in
cwtl
idiv
sub
lock
xor
pusha
sahf
sub
sbb
cs
popf
cmp
test
lahf
mov
and
jge
out
stos
mov
aam
mov
xchg
push
jae
imul
xchg
in
adcl
mov
shl
insb
aas
cmpb
fwait
stos
mov
or
outsl
popf
movsl
ds
adc
and
jb
imul
scas
outsl
push
and
and
scas
or
pop
out
sub
jle
pop
pusha
lret
mov
cmpsb
scas
sbb
sbb
les
cmpsl
and
sub
mov
lea
xchg
outsl
sub
test
iret
jp
sub
dec
pop
sbb
jge
mov
int
adcb
pop
fldt
ljmp
fldenv
lret
mov
cmp
and
aam
and
xchg
inc
leave
and
inc
fbstp
decl
pop
sarl
push
sbb
cmp
sbb
jle
stos
xor
ljmp
roll
movsl
pop
and
roll
or
mov
outsb
push
out
jge
mov
jnp
mov
or
outsl
aaa
dec
test
cmp
mov
jg
enter
insl
push
xchg
test
sbb
lea
cmp
addb
inc
ret
loop
rcl
stos
and
xor
shl
add
imulb
sub
ja
or
mov
hlt
aaa
lds
test
lret
pop
jae
lcall
xchg
shlb
fwait
mov
icebp
pop
mov
cmp
sub
jae
pop
add
div
es
mov
shlb
jne
xorb
fstps
and
xchg
std
jmp
les
push
cmp
pushf
lahf
fcompl
xchg
hlt
out
push
rorl
jns
lret
lock
test
jne
aas
sbb
bound
into
es
jl
hlt
pop
inc
ljmp
movsl
fs
cltd
jmp
fnstcw
addr16
push
sarl
ret
pop
insb
xor
adc
add
push
cmpl
inc
pop
xchg
out
cltd
jae
imul
jl
loop
in
cmpsb
or
cmc
out
ljmp
fcmovnu
es
aaa
xchg
frstor
add
in
cltd
mov
or
sbbb
roll
jb
mov
punpcklwd
xor
cmpsl
ret
xor
test
daa
aad
sbb
or
mov
iret
aam
sahf
into
mov
and
ljmp
adc
hlt
mov
pop
and
sub
xchg
push
enter
xor
jl
stos
roll
adc
shrd
mov
and
add
adc
roll
sbb
cmc
in
push
cmp
mov
sub
rcr
std
test
mov
inc
add
clc
cmpsl
int
adc
loope
test
andl
xchg
test
or
xor
jg
andb
stos
mov
adcb
test
iret
pop
lahf
jl
repz
loop
cmp
xorb
xor
xchg
es
add
mov
sbb
sub
push
stos
ret
pusha
outsl
icebp
pushf
push
cmp
and
lock
or
dec
or
or
test
add
sub
mov
fisubl
cmpsl
mov
icebp
call
ret
jns
aam
jae
sahf
jp
stos
ret
cli
out
dec
dec
dec
push
les
inc
cmp
das
stos
inc
and
xchg
fistpll
or
and
ss
insl
adc
mov
fnstcw
jne
and
lock
ret
jl
cmpsl
idiv
mov
push
xor
sti
aad
sbb
das
mov
sarl
notb
repnz
ret
and
mov
enter
aas
loope
cwtl
mov
fdivr
loopne
sbbb
stc
xchg
aam
sub
sub
push
test
es
jne
xchg
pop
fs
out
stos
fsubrl
test
cmp
and
repnz
or
shlb
sub
scas
bound
dec
sub
sbb
sbb
push
jb
sub
mov
imul
test
addr16
imul
lea
stc
xchg
and
sahf
mov
jmp
pop
sbb
xchg
and
ss
push
pop
ss
pusha
icebp
jno
mov
mov
hlt
sbb
xchg
pop
in
dec
scas
and
cmp
leave
xor
fcoms
fisubrl
or
adc
stc
scas
aad
fadds
pop
iret
addl
loopne
or
fstl
popa
fidivs
mov
adc
orl
inc
cmpsb
sbb
shll
std
std
je
dec
ds
mov
fisttps
push
xchg
cmc
add
scas
adc
jp
mulb
dec
outsl
repz
cwtl
scas
in
or
mov
cs
test
lods
adc
pop
jae
sub
adc
adc
shrb
int3
stos
loop
push
ds
xchg
into
jecxz
sub
adc
jb
xchg
adc
rcrb
dec
mov
arpl
popa
pop
sahf
sub
jns
xlat
sub
push
mov
jecxz
sahf
dec
dec
mov
xchg
and
test
sub
xlat
test
xchg
adc
repz
lret
fsts
iret
xor
fdivs
mov
fidivl
dec
xor
hlt
insb
dec
jg
cmp
xchg
cmp
aaa
jle
das
shlb
xchg
das
xor
cmp
dec
cs
inc
dec
cmpsb
dec
data16
lret
ljmp
mov
test
mov
mov
cmpsb
ja
fnsave
mov
or
and
cs
movl
mov
xchg
jl
or
lods
int
pop
nop
shrb
stos
dec
shll
into
cmp
or
lret
hlt
push
or
ret
dec
sbb
je
rcrb
push
sub
test
and
stos
xor
adc
sbbl
int
sbb
push
test
push
jle
cmp
out
fdivrs
loop
sti
pop
push
je
mov
jle
subb
lds
dec
xchg
adc
add
call
out
popf
mov
repz
pop
mov
inc
pop
adc
and
mov
or
and
jge
lret
cmp
dec
pop
outsl
xor
ret
arpl
cmp
inc
sbb
nop
mov
push
enter
test
jmp
movsl
mov
insb
mov
int
push
cs
cmp
jmp
popl
frndint
out
in
repnz
dec
xchg
jmp
test
or
scas
addr16
push
jl
mov
sbb
insl
jno
mov
jle
mov
xor
enter
adc
add
stos
js
fdivr
pop
lds
fs
and
mov
rcrb
pop
xchg
cmc
scas
pop
leave
add
test
movb
sbb
out
xchg
adc
es
dec
inc
fstpt
addr16
jb
cs
dec
push
sub
test
adc
ds
dec
imull
cmp
mov
add
pusha
adc
pusha
mov
fcomi
xchg
sub
add
xchg
out
repnz
add
das
mov
test
cmc
jne
sbb
or
fstps
add
out
push
pushf
cmp
lods
in
fwait
sbbl
sbb
dec
mov
inc
push
aam
jno
ret
fcomps
fwait
cli
cmova
popa
mov
ss
adc
dec
dec
add
adc
add
je
addr16
lcall
mov
sbb
addb
pop
lcall
pop
pushl
push
pop
cmp
into
fdivl
jle
mov
add
insl
lret
dec
test
popl
push
stos
jbe
pop
arpl
loopne
jae
mov
in
cmpsl
hlt
nop
mov
loop
jg
fcmove
xor
push
xchg
dec
adc
aas
adc
mov
adc
cmp
and
pushf
sbb
scas
aam
rol
insl
xchg
test
mov
push
out
out
xchg
ds
mov
cmp
jle
adc
mov
rcrb
iret
sub
xchg
fisubl
push
xor
lahf
in
push
and
sub
push
lock
cmp
inc
and
push
cmp
stc
mov
popf
popa
adc
pop
mov
pop
lea
dec
cmp
pop
iret
fwait
jge
cmpsl
shl
es
sub
sub
lcall
adc
out
or
jb
sub
cld
add
aam
loopne
xor
out
mov
jg
pop
fnsave
push
pop
es
push
in
test
fdivl
out
cmp
rol
sti
imulb
or
sbb
mov
mov
push
sub
lea
xor
dec
push
xor
push
cmpsl
shl
dec
pop
or
mov
sahf
sub
ret
dec
push
sbb
rolb
push
mov
mov
xlat
xchg
ds
mov
cwtl
inc
xor
lds
fs
loop
enter
push
cld
lock
imul
add
dec
fs
ds
push
mov
jae
and
mov
and
inc
pop
clc
xchg
or
rcrl
fldl
fpatan
data16
jnp
lods
and
sub
mov
jl
lret
rcl
adc
repnz
test
xchg
icebp
add
mov
leave
push
insl
pusha
std
enter
jmp
cld
mov
xor
rcr
add
mov
pushf
sbb
mov
rcrb
xchg
or
cmpsl
iret
jecxz
dec
dec
fbld
inc
inc
jae
cwtl
xor
mov
push
ret
in
dec
push
and
push
xor
dec
sub
sub
loopne
cmp
shrl
cld
ja
xlat
cmp
sub
cmpsl
shrb
arpl
mov
and
insb
mov
mov
push
loopne
push
adc
in
testb
aaa
lods
andl
test
notb
pop
test
adc
stos
pop
mov
pushf
loope
lock
or
ss
pop
jns
jnp
aad
ja
lret
aad
mov
mov
fcoms
lcall
call
jnp
mov
dec
sbb
lds
or
cmp
rolb
adc
xchg
dec
and
cld
je
pop
and
fisubrs
sahf
jmp
xchg
cltd
push
sahf
out
lret
das
mov
or
pop
lret
loop
mov
adc
mov
jae
pop
push
lods
test
pop
push
jl
es
or
fnstsw
inc
fadds
in
dec
pminub
adc
fists
lds
stos
jb
xor
imul
jb
std
popl
sbbl
aas
jnp
pop
adc
out
iret
adc
push
inc
inc
xchg
mov
aad
hlt
push
int
xor
lock
cmp
in
fimull
cmp
out
popa
mov
call
aad
in
cmc
repz
adc
outsb
mov
hlt
sub
ficoms
mov
in
scas
xlat
mov
sarb
daa
filds
popl
pop
pop
add
aaa
cld
int3
imul
popa
jno
mov
ja
test
enter
dec
mov
and
lret
add
xchg
or
jp
pusha
sub
test
jmp
push
pop
ljmp
test
pop
fisttpl
daa
sbb
stc
das
dec
fdivs
push
adc
scas
cwtl
pop
sarl
test
dec
xchg
add
iret
cwtl
sbb
pop
in
push
mov
sub
in
mov
xor
dec
js
sub
les
mov
gs
imul
jae
test
rorl
inc
fcmovnbe
inc
outsb
mov
imul
pop
lcall
xchg
stc
lock
add
pop
rclb
aaa
lcall
sub
lahf
in
and
int
sub
stos
aaa
movsb
cmpsl
ret
clc
mov
xor
fadd
imul
inc
insl
dec
adc
enter
push
enter
jecxz
inc
pop
int3
rol
mov
lcall
sub
fdiv
adc
push
ror
and
lock
sbb
mov
jp
insl
shll
aam
dec
mov
leave
add
xchg
or
insb
daa
shl
lret
pop
dec
lret
pop
push
push
mov
xchg
xor
xchg
jmp
test
push
jnp
sub
addl
popa
ljmp
mov
movsb
mov
jp
imul
xchg
pop
lock
sub
dec
or
movsb
dec
test
andb
jmp
pop
test
add
pop
cmpsb
lods
ja
enter
xchg
push
loop
test
inc
push
ficomps
push
sbb
sti
jp
ficomps
and
pop
xchg
or
mov
push
mov
push
sahf
jp
mov
jmp
jg
cli
idiv
sub
xchg
cltd
or
movsb
inc
cld
popa
xlat
test
xchg
xor
and
insl
mov
fnstcw
lahf
push
pop
push
andl
pushl
lret
push
pop
aas
into
into
jb
jo
fwait
roll
daa
mov
jecxz
sub
push
jp
fnstenv
or
cmp
out
outsl
lods
les
jns
xor
inc
sbb
clc
inc
sbb
dec
pop
into
sbb
and
xor
cmovs
mov
test
pop
cmc
mov
bound
jle
adc
or
pop
mov
add
hlt
insb
and
xor
mov
leave
sbb
mov
in
jno
popa
mov
inc
add
xchg
outsl
pop
mov
cmp
lahf
pop
sti
mov
dec
in
adc
or
ss
mov
lret
inc
push
pop
adc
inc
pop
mov
test
lahf
sub
jb
int3
lds
xchg
ret
fs
out
and
mov
mov
xor
xor
cmp
js
push
jo
sub
cmp
sbb
and
pop
fsubrs
shr
fisubrl
inc
into
filds
dec
adc
or
fchs
mov
ret
loop
and
lds
sti
gs
in
and
outsl
dec
xor
add
sbb
cmpsb
lods
and
jl
stc
adc
addr16
push
push
pop
add
daa
mov
mov
pop
or
insb
adc
jecxz
jns
lds
sub
xor
cmp
cwtl
inc
mov
jl
movsb
stos
push
mov
mov
les
pop
pop
imul
cwtl
sbb
mov
outsl
cwtl
cwtl
pushl
push
shr
xor
xchg
roll
in
push
jl
sub
jae
adcb
push
pop
sub
push
aas
mov
ret
mov
ret
or
push
loopne
cld
mov
xorb
sahf
aam
dec
sub
pop
sub
inc
mov
or
ds
push
xorb
jg
enter
andb
lods
sahf
push
aaa
xor
pop
inc
loop
pop
add
scas
add
or
fistl
jle
xor
adc
sub
mov
mov
sbb
ja
pop
and
xor
xchg
mov
mov
mov
and
jecxz
cwtl
jb
adc
ja
push
mov
fldenv
push
mov
lcall
fidivl
or
add
hlt
mov
fcomps
jb
das
sbb
xor
mov
lods
enter
sbb
cmpsl
jne
mov
sarl
mov
mov
test
js
pushf
mov
movsl
outsl
pop
cwtl
pmuludq
adc
cmpsb
push
movl
lods
sbb
addb
mov
cwtl
mov
ss
and
or
jp
adc
test
test
je
out
fimuls
aad
sub
fidivl
pop
sbb
movsl
sbb
shrb
andl
jbe
imul
sbb
mov
or
xchg
lods
mov
or
inc
add
lods
call
inc
sbb
cmc
popa
gs
fdivrl
push
cmp
xchg
cmp
fcomip
sbb
add
push
ss
mov
jno
cltd
fistpl
mov
fs
js
cmp
mov
testl
pop
jbe
add
or
adc
repz
lock
sbb
adc
imul
shl
shlb
push
imul
loopne
and
lea
in
mov
imul
andb
out
and
aaa
ret
jl
iret
pop
mov
jmp
leave
rclb
xchg
dec
sbb
scas
lret
outsb
ljmp
pop
sbb
fadds
sbb
fcomps
lock
ja
into
push
jmp
jge
mov
mov
cltd
mov
adcb
int3
mov
stc
sbb
sub
sbb
xor
mov
cmovp
jl
mov
pop
xlat
gs
add
negb
jbe
lret
movb
scas
mov
xchg
xchg
nop
test
jl
cmp
sub
and
dec
pop
push
sti
cmc
sbb
inc
pop
add
or
push
xor
stc
in
leave
push
pusha
lock
insl
push
sahf
mov
imul
or
and
hlt
adc
test
ret
cmp
mov
bound
jmp
js
movsl
jle
pop
fiadds
mov
fs
inc
mov
in
sbb
jge
jb
jne
xchg
xor
andl
or
xchg
test
inc
cmp
pop
rolb
pop
inc
xchg
pop
outsl
add
std
xor
ficomps
sub
sub
std
arpl
fbld
pop
je
loop
jmp
fldenv
push
lret
repnz
dec
fsubrp
dec
mov
or
das
lret
mov
jne
in
sbb
sub
test
aaa
cmp
mov
sub
cmp
xor
push
adc
sub
add
lcall
adc
jmp
js
pop
push
lret
push
orb
in
push
inc
adc
pop
fwait
je
adc
les
mov
adc
mov
xchg
add
cmp
or
sub
mov
xlat
out
fsubrp
and
sahf
xchg
add
add
fldenv
pop
jp
xor
sti
xor
jl
push
and
or
pushf
mov
icebp
imul
in
and
bound
movsb
inc
push
stos
xchg
xor
cmp
xor
xor
sub
lods
pusha
iret
add
pop
je
mov
or
mov
repz
push
lea
jb
cs
shlb
xor
lahf
xchg
mov
xchg
int3
into
aam
inc
movsl
push
push
mov
xchg
sbb
stos
iret
dec
jmp
or
sahf
mov
adc
cmovl
popa
nop
mov
xchg
rorb
push
push
sub
cmc
xlat
leave
cmp
add
std
lret
mov
jo
dec
cmp
adc
adc
jle
push
mov
sub
pop
mov
in
test
repnz
decb
dec
and
fsts
dec
sti
aas
xor
inc
xor
sub
jecxz
push
inc
stc
in
mov
mov
pushf
popl
and
pop
in
cli
in
out
loope
cmp
sarb
sbb
pusha
jae
pop
fstpl
into
insl
repz
add
ss
out
or
jmp
inc
jo
push
cwtl
rcr
testb
mov
sar
add
fwait
xlat
sub
sbb
dec
pop
adc
jne
mov
lcall
notl
mov
aam
inc
or
xchg
inc
add
roll
push
shrb
rorb
insl
dec
scas
sub
pushf
fcoms
insl
jns
or
ret
das
popa
xor
imulb
xchg
xchg
cmpsb
int
jecxz
cmc
and
jge
push
iret
inc
jo
mov
cwtl
fs
fmull
loopne
sti
int
out
xchg
cli
mov
sub
adc
inc
mov
inc
jl
int
ja
dec
cmc
cmpsl
and
jg
and
outsl
xchg
or
mov
sbb
inc
mov
cmp
mov
addr16
jle
mov
and
incb
int3
add
sbb
pop
cmp
aam
inc
inc
jno
lock
or
adc
jge
jb
sbb
jg
mov
popl
sub
jb
out
ja
mov
push
cli
adc
out
jae
loope
and
add
inc
movsl
sbb
jne
in
mov
in
lea
stos
xchg
and
dec
xorl
lods
cmp
jg
sub
js
aad
rcll
out
or
movsl
or
xchg
cmp
sbb
int3
cmp
add
and
and
push
bound
xchg
lcall
mov
sub
aas
adc
addl
daa
ds
mov
and
bound
in
and
mov
fisubrs
je
movb
pop
pop
sbb
jno
or
jecxz
lret
mov
rcr
orb
or
sbb
inc
dec
popf
jnp
xor
cmp
sub
or
aaa
push
lea
cmc
sbb
xor
pop
inc
xchg
arpl
ja
cli
xchg
clc
shl
loope
cmc
mov
jg
and
sbb
fidivrs
fistpl
adc
sbb
jo
cmp
dec
cltd
inc
inc
xchg
testl
push
int
dec
sbbl
in
adc
scas
push
daa
pop
add
in
jae
insb
cld
lret
int
popa
into
xor
or
in
xchg
outsl
push
es
pop
dec
dec
aad
ret
xchg
bound
fstl
jne
ret
mov
ds
xchg
mov
mov
mov
das
mov
inc
xor
cmp
xor
insl
je
sbb
data16
fwait
iret
dec
xchg
mov
addr16
scas
cli
sti
xor
mov
fnstsw
push
mov
or
jne
jo
add
dec
sbb
cwtl
pushl
fs
aam
xor
movb
mov
adc
cmpsb
cmpsl
dec
dec
cmc
fcompl
and
aam
fs
xchg
cltd
jmp
out
shrl
push
rcl
xchg
and
adc
mov
adc
pop
mov
or
mov
stos
mov
or
sbb
mov
int3
sub
adc
lret
flds
mov
mov
aad
sti
jecxz
mov
aaa
push
cmp
shlb
or
movb
test
cmpsb
and
push
xchg
adc
inc
andl
mov
mov
or
cmp
mov
sbb
dec
mov
dec
xchg
adc
cmp
cmpsl
pop
jmp
cmp
push
fs
jp
push
mov
fisubs
mov
push
and
shlb
cmpsl
adc
fxch
inc
mov
test
or
sahf
or
mov
imulb
sbb
cli
cmpsl
scas
jecxz
das
cltd
jg
sbb
jns
imulb
pop
test
lret
fmuls
xchg
mov
imul
cmp
jg
jns
out
enter
xchg
data16
mov
sbb
loope
xchg
mov
dec
mov
clc
dec
idivb
push
xchg
xor
push
sbb
ret
xchg
pop
loopne
cmpsb
sbb
roll
mov
sarb
pop
dec
mov
pop
jbe
mov
aam
jp
fidivs
cs
push
ficoml
and
inc
adc
imul
xchg
add
cmpsb
or
push
adc
push
cmp
int3
outsl
shrl
shll
mov
cmp
cmp
sbb
xor
mov
sub
addb
sbb
pop
aam
cmp
or
xchg
pmulhuw
xchg
call
lods
movsl
test
addr16
sbb
mov
pop
pop
mov
cmp
fldenv
and
jmp
rolb
push
outsl
dec
jmp
mov
lcall
xchg
sbb
mov
testl
ret
lret
lcall
mov
pop
lret
sub
mov
jno
cmp
test
xchg
pop
out
ds
popf
repz
adc
ret
lret
mov
adc
dec
inc
dec
orb
and
mov
or
dec
xchg
lahf
add
or
out
jno
jb
scas
fdivrl
jg
or
add
cmp
mov
fisubrl
jbe
push
cwtl
sub
jmp
inc
push
scas
nop
aad
ret
dec
pop
mov
out
jbe
sub
lods
mov
adc
iret
xchg
fdivrs
jmp
pop
xor
push
pop
mov
xor
sub
negl
lahf
in
adc
add
in
sub
inc
jp
pusha
scas
daa
pop
shl
int3
rcrb
ficoms
pop
inc
jbe
lret
xlat
mov
mov
jns
jae
cmp
fwait
imul
test
adc
dec
divb
inc
xor
imul
nop
push
gs
adc
push
xchg
lahf
icebp
pop
outsb
adc
push
push
fildll
nop
out
shlb
lcall
xor
mov
je
inc
scas
jmp
and
xchg
xchg
mov
movsb
pop
xchg
cmpsb
sbb
add
jp
pop
or
mov
cld
cmp
xor
rcrl
mov
cmpsl
xchg
je
dec
mov
mov
pop
sub
xchg
mov
mov
mov
mov
cmp
outsl
iret
mov
fcmovnu
pop
dec
cmc
dec
es
in
mov
jle
sub
add
and
sti
lret
insb
cli
pusha
dec
fwait
lock
adc
mov
mov
gs
sahf
jmp
push
sahf
mov
pop
add
enter
mov
sarl
cmc
incl
inc
lods
loope
inc
add
jg
rorb
adc
sub
pushl
adc
insl
gs
popf
and
insb
jg
xor
sub
addb
push
add
pop
sbb
loopne
shlb
or
out
adc
into
mov
mov
addr16
cltd
adc
es
loopne
ja
test
pop
push
jne
inc
xchg
imul
repz
mov
cmpsb
or
in
jmp
inc
cmp
out
cmpsl
or
add
shll
xchg
xlat
mov
inc
mov
in
std
xorb
aad
mov
jns
or
mov
cltd
adc
push
scas
in
sbb
sub
out
mull
and
or
int3
or
jno
push
and
loope
jbe
push
xchg
bnd
pop
sub
out
ret
xchg
test
fiaddl
mov
inc
ficompl
cmp
icebp
pop
push
mov
gs
cltd
mov
imul
sbb
aad
call
shlb
pushf
xor
mov
mov
push
enter
pop
sbb
cltd
aad
sub
addr16
jecxz
in
std
jmp
pop
mov
mov
xor
fs
ss
rcrb
cld
pop
pusha
fs
addl
cmp
sbb
dec
mov
enter
and
push
and
push
cs
push
rorb
xor
xor
ret
pop
mov
test
sbb
mov
xor
es
mov
push
ds
fadds
xchg
or
xor
shlb
fidivs
pop
jg
adc
sahf
test
xchg
mov
repnz
in
mov
into
jbe
mov
insl
stos
pop
push
out
add
psadbw
mov
jns
aam
fs
out
pop
jne
out
sub
loopne
imulb
test
sub
lcall
cld
std
mov
call
sti
lret
stos
lahf
les
cmpsb
nop
out
lock
xor
gs
dec
adc
jbe
or
out
add
xchg
or
ficompl
jae
out
test
mov
loop
lods
movsb
mov
push
xchg
pop
cmp
mov
dec
fbstp
mov
dec
fsub
or
ljmp
incb
xor
sbbl
scas
xchg
mov
cmpsb
pop
mov
pushf
cmp
jae
popa
adc
sahf
jl
and
pop
mov
ds
or
xchg
das
lock
mov
test
test
pop
jno
movsb
xchg
adc
dec
fwait
mov
ret
cmp
repnz
test
lea
dec
push
loopne
or
inc
andb
movsb
jp
cmpxchg
je
lahf
xchg
mov
jnp
jg
adc
cmp
push
subb
cmpsl
add
xchg
jecxz
out
loop
and
and
lahf
movsb
add
or
sbb
xchg
stos
dec
lods
aas
jo
imul
sarl
fmuls
imul
mov
in
mov
sub
sbb
inc
cmpsl
fwait
dec
scas
xchg
negl
imul
test
sbb
mov
lods
pop
shll
bound
xorb
cmp
stos
int3
mov
js
std
insl
xor
fildll
loope
xchg
mov
xor
xor
jno
add
xor
xchg
pop
mov
and
adc
jg
cmp
ds
pop
or
dec
xor
or
lds
pusha
cs
inc
inc
jg
cmpsl
aaa
jne
out
insl
add
ss
cmpl
add
fisttpl
xorl
cmp
fdiv
or
push
jns
sub
or
fsubl
push
jno
aad
mov
cmp
insb
scas
xchg
scas
leave
pop
into
cld
stc
gs
cli
mov
test
xchg
push
mov
or
rol
bound
fidivl
inc
inc
jg
jns
cltd
aad
adc
shl
mov
gs
notb
gs
jne
test
into
into
jecxz
xor
fsubp
cmp
fsubrl
mov
or
xchg
fimuls
mov
xor
aaa
frstor
in
enter
addr16
sub
nop
cmpsb
xchg
or
cmpl
adcb
out
pop
xor
lock
dec
arpl
mov
popf
imul
aad
fdivrs
inc
clc
pop
mov
xchg
int
and
es
xchg
insb
repnz
xor
dec
imul
rcr
lret
in
aaa
aas
sbb
repz
and
xchg
push
mov
and
sbb
lret
pop
inc
adc
xor
inc
sub
sbb
fsubrp
int3
jne
cmp
dec
xor
inc
sbb
shl
push
sub
jmp
sbb
jp
icebp
adc
pshufw
xor
mov
mov
pop
cmp
adc
or
xor
and
movsb
mov
in
js
and
imul
pop
sub
aaa
stc
pop
loopne
push
imul
mov
mov
inc
mov
sti
cld
jb
pop
cs
fcmovnu
pop
push
cmp
rolb
daa
movsl
rcr
jne
mov
clc
inc
dec
cmp
outsl
cmpsl
fwait
and
lods
stos
dec
popf
pop
lods
hlt
xchg
pop
xchg
mull
jp
mov
loope
or
idiv
stos
mov
fmull
pushf
or
test
dec
and
test
inc
mov
sti
in
aad
inc
sahf
iret
shl
sub
xchg
pop
jo
xchg
cmp
dec
jns
mov
mov
xchg
xor
inc
jmp
mov
stos
cltd
dec
mov
mov
mov
pushl
mov
mov
data16
fld1
cwtl
xor
mov
lock
dec
jns
and
mov
ljmp
iret
jb
icebp
cli
insl
adc
push
push
pop
mov
cwtl
jmp
mov
cmp
xor
idivb
add
pop
push
fstpt
sbb
jecxz
loopne
imul
inc
out
inc
or
out
cmp
sbb
iret
nop
sbbl
aam
xor
outsb
add
fmuls
or
sub
or
cmpsb
mov
test
and
mov
lahf
xor
xchg
ret
xor
test
ja
fsubrl
adc
mov
xchg
mov
add
popf
lea
out
daa
lods
in
outsb
mov
mov
fcomps
fistpll
add
scas
call
dec
mov
pop
pushf
pop
inc
adc
xchg
adc
and
mov
inc
cmc
fildll
shrb
and
test
test
aas
aam
jg
mov
test
mov
std
mov
sbb
cs
cmp
mov
fdivrs
call
pop
out
cmp
mov
lods
sahf
add
push
jns
clc
mov
inc
std
fwait
out
cmp
sbb
push
sti
xor
cs
ret
push
pop
inc
or
pop
add
arpl
or
mov
ficoms
js
and
repnz
sarl
mov
dec
mov
xor
imul
and
xchg
or
push
add
orb
insl
inc
loope
mov
xor
mov
fcoms
sbb
pop
cmp
dec
ret
sub
dec
xadd
lea
leave
cmp
fdivrp
shrb
cmp
mov
lahf
fsubrp
insb
call
add
ficompl
repz
lods
std
push
inc
ja
out
pusha
insb
cli
xchg
adc
dec
mov
shrd
ds
js
int3
shlb
inc
cmp
mov
and
jle
repz
xor
out
jmp
dec
out
out
lret
mov
mov
adc
jmp
in
sub
inc
cld
sub
jb
mov
add
push
ljmp
aas
dec
mov
nop
dec
dec
jae
ljmp
mov
scas
repz
pop
jno
imul
xor
neg
sbb
repz
jmp
ss
ljmp
mov
mov
add
sahf
fists
dec
lock
movsl
out
pop
cmpb
xchg
popa
pushf
shrl
push
out
dec
sahf
mov
loopne
test
and
mov
popf
adc
iret
lea
roll
icebp
movsb
pop
lahf
jb
aam
jg
push
sub
mov
or
nop
inc
in
pop
and
inc
fwait
andb
mov
gs
push
mov
rcrb
adc
arpl
nop
scas
roll
push
inc
out
mov
rcrl
sbbb
scas
fstpl
movsl
js
enter
xchg
push
out
pop
std
loop
lds
lcall
inc
mov
mov
and
dec
in
pop
mov
jp
cli
jne
cmpsb
mov
es
mov
pop
call
es
fidivrs
ds
out
clc
not
imul
inc
cmpsb
enter
je
inc
stos
stc
push
aaa
jbe
push
xor
ljmp
jnp
sarl
mov
mov
testb
mov
rcrb
fcomp
cltd
ljmp
push
xor
pop
xchg
dec
mov
or
pop
pusha
or
ljmp
int3
inc
dec
ret
sbb
mov
cwtl
and
push
je
xor
pop
lods
rol
mov
inc
mov
lahf
adc
inc
out
int
lahf
js
mov
sub
out
sbb
or
cmp
nop
outsl
mov
jecxz
inc
cmp
cli
popa
jmp
call
in
imul
iret
and
lods
rorl
inc
aaa
mov
jo
fimuls
imul
bound
andb
int3
jo
icebp
pop
rcrl
cmp
jmp
mov
leave
xor
imul
aad
in
scas
cmp
cs
xor
fisubl
stos
lret
repnz
jae
xchg
pop
xchg
pop
lret
add
insl
aas
mov
fcmovnb
xor
xchg
mov
mov
add
insl
or
push
imul
ret
popf
andb
push
int3
sub
iret
xchg
bound
fwait
dec
push
ljmp
adc
xlat
cmc
movl
or
sbb
mov
pushf
cs
negl
adc
pop
xorb
xchg
jle
jge
rorl
xor
lcall
sub
xchg
call
mov
inc
pop
mov
pop
rclb
testb
adc
fs
int3
addr16
stc
mov
andnps
jge
adc
andb
repz
xchg
push
int
das
icebp
stos
insb
xchg
aam
lods
push
xchg
sbb
cmp
aaa
stos
lods
cmp
sbb
mov
sub
mov
lock
in
aas
cwtl
dec
mov
out
xlat
addl
pop
xor
cs
stos
inc
addr16
shrl
mov
cmpsb
mov
xchg
outsb
cltd
sbb
mov
jbe
xor
lahf
nop
jg
push
movsl
adcl
xchg
dec
or
mov
xor
inc
cmp
call
and
sub
pop
repnz
and
xor
movsl
xor
adcb
pop
xor
in
shl
fwait
sub
daa
jg
mov
adc
nop
xchg
push
dec
add
cltd
inc
fdivl
mov
pop
add
test
push
jne
std
clc
xchg
cwtl
aam
into
cwtl
into
mov
dec
xchg
adc
lods
push
mov
jmp
and
cmp
aas
mov
xchg
and
cs
int
jb
mov
push
xchg
insl
int3
ret
mov
and
das
scas
jns
pop
out
roll
ss
out
jno
add
cli
insb
lret
pop
aam
mov
mov
mov
jge
xor
insl
ljmp
push
xor
in
cmpsl
pop
pop
lcall
jp
inc
jp
adc
sub
push
mov
sti
popl
test
ds
and
out
and
int
pop
adc
es
orb
push
int
cmp
les
xchg
das
dec
inc
insl
sbb
std
mov
push
icebp
popf
out
nop
out
mov
jb
add
test
adc
loope
jnp
adc
aas
pop
sbb
in
out
enter
xchg
rcrb
push
cli
dec
in
mov
mov
inc
mov
jnp
add
sti
pop
sti
sbb
fimuls
dec
jp
div
outsb
cmp
sbb
xchg
xor
mov
mov
mov
sti
xchg
xorb
dec
in
xor
sbb
push
cmp
push
or
nop
andl
sub
ljmp
imul
and
divl
aad
aaa
mov
xchg
cwtl
push
xor
push
repnz
insb
cmp
pop
lock
insb
lret
loope
into
mov
jns
mov
outsb
pushf
negl
daa
pop
adc
xor
xchg
mov
stc
pop
mov
mov
mov
or
sub
cli
mov
clc
sbb
jg
pop
pushf
jne
loopne
xchg
cmp
addr16
mov
ret
dec
mov
push
cmp
cltd
stos
mov
push
mov
jno
into
jnp
pop
sbb
repz
repnz
pushl
pop
mov
aam
pusha
aad
mov
imul
sub
push
add
test
fwait
pop
clc
aas
jnp
gs
pop
push
push
and
inc
dec
nop
sahf
mov
push
test
sub
out
xchg
mov
testb
mov
outsb
popa
jno
test
pop
mov
aam
pop
das
lret
lods
mov
jge
push
jecxz
xchg
jbe
ret
jecxz
adc
cmp
add
mov
insl
xchg
outsb
xchg
mov
xchg
ret
dec
mull
sub
cmp
sbb
sub
testb
or
int
adc
stos
mov
aam
adc
jp
pop
test
aad
xor
and
jns
push
cmp
adc
pop
push
call
xchg
repnz
loop
mov
stc
fistpll
pushf
jl
or
sti
lock
mov
fidivrl
call
fwait
lahf
and
fs
add
lds
xchg
popa
enter
test
into
scas
adc
mov
daa
scas
inc
clc
mov
test
push
push
mov
shlb
js
std
fwait
ret
xor
cmp
pop
cs
inc
push
test
ds
inc
pop
lcall
fstpl
sbb
or
or
cltd
and
cwtl
jecxz
loop
push
jbe
outsb
out
jge
into
mov
mov
or
subb
sub
pop
aaa
mov
imul
lock
cmp
push
lret
int3
mov
orb
stos
psllq
cmpsl
xchg
out
aas
mov
das
cli
push
lret
pusha
and
pop
push
dec
sub
iret
cli
cltd
mov
aaa
xor
cmc
sub
sbb
into
push
cltd
pusha
mov
shrb
mov
inc
in
nop
or
aam
pop
mov
cmp
inc
outsl
enter
out
lahf
push
add
xlat
cmp
dec
test
int
dec
test
adc
ds
pop
bound
sarl
pop
mov
inc
sbb
test
outsl
lret
push
outsl
xor
add
lret
test
fisubrl
cmp
or
adc
pop
mov
lahf
add
lret
lret
pop
popf
hlt
scas
rclb
rclb
adc
pop
inc
mov
or
shlb
sub
shll
ljmp
mov
shlb
stc
xchg
jecxz
inc
out
cmc
std
mov
insl
daa
sub
push
sti
sub
push
inc
xchg
jg
lock
data16
dec
sbb
xor
mov
fwait
insl
jae
jno
pusha
sbb
fidivs
push
clc
aam
js
pop
pop
fimuls
add
and
aas
or
pop
dec
cmp
pop
mov
orb
pop
js
add
mov
pop
dec
int3
inc
loopne
jecxz
add
fildll
cmp
fstpt
xchg
or
std
sub
add
jecxz
in
rcll
dec
push
push
daa
bound
mov
out
inc
jb
xchg
push
out
fucom
jp
pop
in
fs
sbb
pop
push
test
jg
mov
xor
adc
jle
inc
repz
test
rorb
in
pop
jns
ror
sub
enter
outsl
sti
imul
out
push
inc
sub
mov
adcl
jp
inc
sub
pop
add
ljmp
stc
xchg
imul
in
sbb
les
das
sub
sub
outsb
xor
cmp
popf
sbbb
jmp
iret
rclb
cli
mov
xor
sub
push
fwait
idivl
push
xlat
push
cmp
sbbb
scas
pop
iret
mov
popa
loope
xor
xchg
jno
mov
and
jge
add
call
mov
cmp
dec
arpl
jbe
mov
dec
push
popf
inc
repz
aaa
fdivp
push
add
inc
mov
orb
fisubrl
lods
aam
daa
jl
xchg
cs
test
pop
mov
pop
dec
mov
jmp
pop
dec
sub
dec
shrb
xlat
js
int3
loop
jae
test
jecxz
lcall
add
cwtl
mov
enter
jmp
jnp
arpl
mov
jp
sbbb
movsb
xlat
rep
mov
jae
mov
jo
xchg
and
loope
or
pop
sbb
mov
test
and
outsb
mov
cmp
cs
inc
arpl
aas
jl
add
push
xchg
xchg
jmp
ret
mulb
inc
pop
jle
adc
pop
sbb
test
bound
test
jne
xchg
test
lds
jno
or
in
cmp
pop
jne
mov
mov
add
mov
xor
sbb
je
lahf
hlt
enter
mov
mov
pusha
gs
cmp
lds
cmp
rclb
add
popa
inc
mov
adc
stc
test
and
or
movl
out
add
and
xor
popa
aaa
ljmp
mov
stc
aad
psadbw
jne
pop
sbb
pop
ficoms
das
inc
adc
and
dec
xlat
clc
sbb
and
cmpsl
leave
dec
lret
notl
mov
add
xor
sub
xchg
lret
fstl
push
aas
jae
add
adc
adc
xorl
lods
jge
test
fistps
adc
xor
inc
xchg
and
and
test
jge
out
mov
mov
inc
mov
inc
push
add
rorb
pop
test
lds
lods
add
das
sub
add
push
int3
adc
cmp
jl
mov
pop
enter
mov
and
fcmovb
out
jnp
cmc
jnp
or
mov
xor
jl
call
andl
call
fcomps
scas
scas
add
push
pop
call
xor
cli
pushf
scas
push
mov
jae
testb
xor
lods
jb
dec
jne
jns
sbb
fsubrp
add
or
loop
int
jmp
ret
fists
mov
inc
jle
pusha
adc
xchg
adcl
test
pop
cmp
scas
nop
mov
lahf
out
loope
imul
add
stos
mov
push
out
jp
add
fwait
cmpsb
adc
pop
imul
push
dec
idiv
int3
push
stc
cmp
imul
and
xchg
rorl
fdivs
imul
in
iret
rcrl
pop
js
loopne
cmpsl
xchg
sbb
and
sbb
adc
cmp
add
mov
dec
xchg
mov
std
push
pop
cmp
in
nop
je
rcrb
xchg
xor
push
push
xlat
sbb
jg
push
adc
push
cmpsl
xchg
xor
xchg
sarb
xchg
popa
nop
rorb
or
repz
xor
pop
ss
and
ret
bound
cmpsl
or
mov
je
push
int
inc
aaa
aas
sub
push
std
dec
ds
jle
push
adc
jnp
inc
push
inc
mov
test
mov
or
rcl
adc
sbb
inc
mov
pushf
jne
repz
push
fwait
or
sub
mov
push
aad
jbe
push
dec
dec
out
adc
add
xor
incb
mov
push
pop
fcompl
shrb
add
rcrb
jb
sahf
pushf
jo
aaa
inc
in
scas
sub
lcall
dec
mov
gs
dec
pop
int3
adc
xlat
push
cmpsl
dec
arpl
outsl
aas
das
jae
cmpsl
stc
xor
jbe
or
jnp
and
add
adc
clc
cwtl
mov
test
fwait
mov
cli
shlb
xor
pop
fnsave
xchg
push
sbb
cmp
sub
stos
insb
stos
arpl
ret
insl
test
fld
imul
lcall
sbb
jl
arpl
xor
ja
add
aaa
aas
lahf
orb
mov
mov
loope
mov
xchg
xor
dec
pop
xlat
jb
ds
out
jl
cs
mov
ret
push
dec
mov
cmc
in
into
xchg
jo
adc
fwait
in
sbb
lds
mov
xchg
inc
mov
adc
jp
sub
push
jbe
dec
add
pop
jl
mov
gs
lahf
jnp
rcr
mull
jns
xor
mov
inc
call
jmp
js
dec
push
push
pop
ja
cmp
mov
jle
lea
sbb
data16
adc
aaa
sub
push
stos
enter
test
xor
adc
jbe
dec
jge
fistps
dec
call
xchg
push
push
mov
arpl
jl
jnp
out
fistpll
fdivs
jle
cwtl
out
pop
pushf
pop
je
mov
jmp
leave
neg
movsb
add
mov
jecxz
outsb
push
push
jbe
sub
xchg
shl
mov
loopne
xor
add
and
mov
sub
outsb
xor
shl
sbb
add
enter
andb
mov
pop
jg
fcomps
imul
adc
xor
push
imul
sbb
sbbl
cmp
test
testl
fisubl
mov
jb
pop
cmp
mov
adc
jo
sub
mov
push
and
rol
inc
ret
push
jnp
jmp
fadds
xor
pop
inc
stos
mov
gs
pop
push
daa
filds
sbb
ljmp
and
jns
scas
xchg
pop
sub
leave
enter
xor
movsl
xchg
repnz
and
insb
mov
push
lret
fsub
jecxz
sbb
pusha
gs
xorl
repz
pushf
jp
sub
fcoml
ljmp
imul
inc
push
xchg
std
cwtl
push
or
sub
cmp
cmpsl
addr16
jnp
mov
test
lcall
arpl
xor
xchg
sbb
movsb
push
xchg
cmp
mov
fadds
cmc
iret
xchg
dec
mov
push
call
jl
mov
std
push
mov
mov
stos
lcall
out
xchg
ret
ds
or
imul
in
lds
and
xor
call
insl
sbb
or
out
mov
sbb
or
orb
and
adc
int3
mov
xchg
int
cmp
aaa
cltd
icebp
xchg
add
repz
sbbb
lahf
mov
repnz
mov
sti
mov
nop
add
cltd
sub
in
jne
xchg
mov
sub
cmp
push
add
or
dec
sbb
js
popa
outsl
or
lret
and
mov
xor
push
enter
out
das
pop
fistl
ja
cmp
hlt
or
inc
dec
or
adc
push
ja
dec
inc
out
into
in
outsl
rol
ja
scas
jge
mov
scas
aam
dec
jae
adc
ss
lret
jl
push
insb
imul
cmpsb
xor
mov
loop
xor
mov
dec
mov
lea
outsb
or
inc
adc
insl
xchg
rclb
lods
iret
pop
xchg
fcomip
fldenv
les
repz
jmp
push
jnp
ret
in
jo
mov
std
cmp
jo
sbb
enter
cld
xchg
pop
insl
inc
sti
and
stos
inc
pop
not
lahf
daa
lahf
pop
dec
shrb
sbb
jp
pop
jle
ja
jge
jnp
shll
push
dec
mov
lea
cmpb
out
push
cld
insb
movsb
fnstsw
and
add
cmp
xor
pop
aaa
es
subl
lret
jne
cli
pop
je
push
cmp
icebp
adc
push
scas
mov
cmp
cmp
repz
lds
icebp
aad
xchg
insb
xchg
inc
mov
dec
js
clc
fwait
outsb
aam
mov
inc
sbb
mov
ss
and
sti
xchg
les
aaa
ds
dec
and
dec
dec
outsl
or
xor
jle
lcall
gs
stc
insb
jne
sub
ret
or
jo
fdivp
lea
out
adc
hlt
add
pusha
and
sub
fs
dec
aaa
call
xor
loope
push
mov
or
xor
outsl
std
cmp
dec
push
dec
xor
es
jo
pusha
pushf
out
jno
pop
es
popa
push
fs
fsts
mov
lock
mov
aas
pop
inc
xorl
loop
in
pushf
inc
std
hlt
pop
lcall
pop
cmp
mov
mov
cmp
mov
cmp
sub
mov
adc
push
xchg
dec
push
xchg
mov
cmp
into
mov
mov
sbb
dec
pop
inc
inc
ja
inc
cli
scas
and
inc
sbb
aad
xchg
jae
das
call
pushf
ljmp
fmul
mov
mov
cld
mov
mov
sub
movsb
push
icebp
add
sbb
lahf
mov
movsl
sbb
stos
addr16
mov
pop
daa
dec
sbb
sbb
shl
cmp
jno
add
fimull
xchg
aas
and
enter
std
out
mov
or
xor
inc
fnstcw
in
xchg
aaa
cli
ror
jbe
pop
enter
cmp
jno
sub
mov
clc
sbb
ret
xor
fsubrs
xchg
adc
add
mov
out
jno
pop
jnp
xchg
cmp
sub
sub
ret
fbstp
lock
push
les
fst
loop
and
scas
cmp
push
rcl
movsb
fsubs
and
jae
jmp
iret
out
sbb
xlat
outsl
mov
sub
in
dec
repnz
jbe
dec
sub
inc
pop
cmp
fcmovnbe
out
jnp
jge
test
sub
lret
pop
xchg
dec
mov
stc
jb
jge
loop
dec
pop
mov
insb
fists
inc
lahf
out
sbb
fwait
jg
xchg
out
pop
gs
cmp
sub
aad
sbb
mov
out
aaa
jecxz
out
nop
push
xor
push
les
xor
sbb
cld
sbb
mov
add
mov
or
mov
jo
cmpsl
dec
mov
adc
sub
imul
fs
imul
cmp
ret
push
jns
or
ds
push
xor
ds
idivb
gs
and
push
xchg
adc
mov
in
jl
or
and
lock
ljmp
sub
dec
inc
cltd
cld
xor
dec
xchg
popa
pop
push
xchg
mov
xchg
add
push
add
xchg
push
out
clc
testl
pushf
fldl
dec
gs
jp
jge
dec
das
pushf
sub
mov
outsb
sub
inc
mov
cli
or
out
popa
pop
sub
sahf
xchg
testl
fildl
pop
sub
xlat
mov
add
sti
insl
mov
or
popf
leave
lcall
addr16
cmp
test
leave
loop
int3
cli
inc
hlt
stos
xor
add
dec
sub
and
pop
testl
ret
xchg
fwait
or
inc
push
sar
adc
xchg
adc
fwait
xchg
mov
lods
orb
mov
xor
inc
jmp
rcr
mov
xor
jne
sbb
mov
ja
or
lcall
mov
and
xchg
jmp
sbb
cmp
mov
cmpsl
xchg
sahf
in
lahf
mov
daa
sbb
inc
addr16
lret
dec
popa
or
jmp
jbe
add
sub
outsl
aaa
xor
push
xor
dec
mov
cmp
and
aad
test
sbbb
mov
add
inc
inc
idivb
mov
dec
jb
jbe
rorb
cmp
cmp
inc
mov
nop
sar
sbb
clc
je
sub
cltd
and
es
in
xchg
ret
arpl
xchg
pop
adc
ficomps
or
mov
test
sub
push
mov
or
mov
mov
pop
imulb
and
inc
jns
dec
dec
mov
sub
and
xor
add
push
in
stc
es
xor
mov
pop
jae
mov
sub
mov
dec
std
dec
push
and
jo
les
outsb
pop
rcll
loopne
sub
pop
dec
inc
inc
cmp
or
pop
pop
clc
and
jo
pop
mov
adc
cltd
mov
mov
xor
mov
gs
testb
out
jg
push
test
lock
std
in
mov
mov
insl
cmpb
shl
mov
fmulp
xchg
leave
push
outsl
jge
hlt
push
mov
push
xchg
push
or
out
loope
sbb
mov
out
ja
push
sbbb
mov
lret
insl
add
mov
push
in
and
dec
and
enter
adcl
je
rcrl
ja
mov
jmp
iret
lret
jb
xchg
aas
sbb
ret
dec
iret
cltd
sub
sub
dec
lds
push
mov
and
push
xchg
push
popf
xor
sbb
mov
cmp
push
pop
imul
dec
movsb
mov
sbb
jbe
push
xchg
xlat
adc
je
cmp
and
aad
ljmp
movb
push
push
inc
sbb
sahf
shrl
ss
bound
push
aam
mov
mov
lock
cwtl
jg
mov
add
push
inc
mov
cli
cmpb
inc
add
test
dec
cltd
cmpsl
mov
idivl
and
sub
dec
xchg
mov
cmc
cmc
repnz
insl
aaa
add
out
jbe
out
xor
cwtl
sub
add
arpl
mov
je
int3
jne
xchg
fmull
lock
jns
mov
inc
ret
outsb
or
ja
mov
xor
fdivs
mov
outsl
hlt
inc
inc
mov
clc
jp
in
int
sahf
xchg
dec
iret
or
popa
test
stos
xor
bnd
sbb
aaa
push
int
and
aas
mov
mov
xchg
mov
mov
xchg
fldt
daa
fsts
mov
out
and
test
pusha
cmc
xchg
imul
dec
mov
cmp
pop
out
sbb
orb
outsl
orl
jno
js
movsb
in
cwtl
push
sbb
imul
push
int
xor
aaa
add
fstl
push
cmc
sbb
call
cmp
lahf
loop
cmp
imul
test
add
jl
and
stos
cmp
push
cmpsl
js
or
stos
hlt
shlb
fbld
xchg
sbb
sub
xor
loop
add
xchg
stc
xchg
xor
sbb
cmovg
cmp
in
and
pop
subb
fisubrl
push
adc
std
xor
push
xchg
js
add
iret
mov
pushf
lock
dec
inc
add
xor
lahf
add
das
cmp
sub
in
popf
mov
jp
iret
push
mov
mov
fistpl
addr16
bound
mov
xor
xchg
mov
mov
stc
inc
adc
std
pop
cmp
add
dec
repnz
cmpsb
dec
or
shll
jp
push
jo
nop
adc
stc
jns
dec
rcl
xchg
sbb
mov
pop
xchg
mov
inc
out
mov
in
mov
arpl
xchg
fbld
test
jo
add
lds
xchg
movsl
dec
fcoml
push
leave
mov
lahf
out
fisubl
sbb
stc
and
insl
sbb
ret
adc
xchg
int3
mov
or
inc
mov
es
xor
std
xchg
add
add
xor
add
mov
xlat
xor
dec
ja
jo
addb
sarl
in
sarl
or
xchg
scas
xchg
bound
cmp
mov
pop
mov
test
mov
mov
fstl
jmp
aas
aas
xor
aaa
jns
sub
xchg
dec
dec
out
loope
outsl
in
jae
ds
adc
pop
add
mov
fstpt
out
andb
xor
lea
pushf
xchg
jecxz
roll
cwtl
xchg
cmc
js
and
icebp
int3
lock
xchg
rolb
bnd
shrb
dec
pusha
into
xor
jbe
mov
lcall
scas
outsl
or
xchg
or
xor
mov
mov
pusha
sahf
shrl
jecxz
mul
and
mov
shrb
sarb
stos
mov
out
mov
mov
js
cltd
xchg
inc
cmpsl
clc
cmp
push
mov
adc
fisubrs
neg
into
iret
lods
cltd
adc
rclb
aam
pop
shlb
idiv
dec
sahf
mov
movsb
xchg
add
inc
sbb
cmpsb
sti
inc
jle
rorb
sahf
out
mov
and
fimull
mov
subb
nop
sbb
mov
mov
jecxz
xchg
jl
xor
mov
and
outsl
bound
inc
ss
mov
adc
push
shrb
mov
shlb
imul
jl
jae
push
inc
adc
int
cs
sub
fwait
push
jp
ja
movl
mov
int3
scas
sub
mov
fildl
dec
mov
pop
sbb
fs
fistps
lret
mov
mov
nop
pop
jns
and
lds
loope
cltd
fadd
pop
fiadds
mov
mov
add
pop
call
and
adc
cmc
sbb
jb
mov
push
ret
pop
jnp
je
xor
imul
aam
sub
out
xchg
popa
in
imul
arpl
cmp
lds
mov
add
fldl
cmc
inc
stos
mov
and
cltd
push
movsb
lods
jl
jnp
sti
and
rcll
sbb
cmp
pushf
inc
testb
mov
pop
repz
ret
and
pop
jl
xor
push
jno
xor
shlb
pop
jae
pop
sahf
jmp
cmpsb
lock
xlat
sbb
in
repz
mov
ja
sub
out
fldl
mov
mov
out
insb
xchg
out
or
push
sahf
shrl
jecxz
pusha
jg
pusha
sbbb
fs
out
je
mov
std
push
add
lea
mov
jl
pop
inc
mov
push
xchg
sbb
xchg
sub
adc
mov
xor
stos
mov
cmpsl
inc
scas
idiv
add
adc
mov
mov
pop
mov
jl
inc
fsub
inc
je
fildl
rorl
jp
repnz
or
pusha
or
jne
cltd
popf
insl
ret
fcomi
cmp
jne
hlt
scas
add
je
fiaddl
pop
inc
xchg
or
xchg
and
and
in
push
adc
sub
push
je
lods
popa
adc
icebp
mov
aas
das
mov
adc
mov
jl
add
xor
das
andl
mov
pop
loop
pop
xchg
sti
out
ds
insb
fistpll
decb
mov
sbb
pop
dec
xor
pop
sub
mov
test
and
push
pushl
je
mov
xchg
addr16
dec
cmp
test
in
shrl
lea
xchg
test
js
mov
popa
cmc
ja
mov
push
js
fdivs
pusha
pop
jnp
jno
push
cmpsb
mov
sub
lahf
inc
cmpb
adc
ror
mull
cld
nop
ret
sti
int3
and
aam
xchg
xor
cli
aad
xor
pusha
xchg
mov
dec
stos
sub
fs
aam
pop
sub
or
sub
insl
mov
ss
ret
pop
pop
jns
movsb
std
fwait
lea
mov
mov
dec
lds
xlat
xchg
cmp
cmp
xchg
cmp
out
mov
jo
ficompl
fwait
mov
pusha
jno
imul
adc
stos
shlb
iret
sahf
dec
cmp
jle
mov
push
inc
pushf
xchg
loop
dec
pop
mov
ds
inc
arpl
xor
pop
out
sbb
push
stos
jae
scas
mov
cmpb
mov
out
jecxz
mov
bound
rorl
sub
fldl
popf
mov
pusha
mov
jmp
sbb
loopne
es
sbb
rclb
adc
inc
jns
ret
xor
in
mov
jb
orl
bound
stos
xor
add
lahf
hlt
ret
sub
loopne
ficomps
ret
xchg
jmp
repz
aad
pop
mov
or
idiv
sub
mov
add
and
xchg
jnp
xchg
pop
inc
mov
ja
mov
loope
and
and
ss
in
in
into
ja
and
xchg
movsb
data16
push
cmp
pop
shrl
jno
lahf
enter
cld
addr16
mov
rcrb
inc
movsl
mov
inc
fcmovb
nop
and
dec
and
out
lea
cli
fisttps
mov
lods
or
loope
push
mov
add
int3
push
outsb
push
adc
scas
int3
xor
dec
repnz
mov
test
lds
or
dec
and
pop
inc
jne
pop
cld
sbb
stos
xor
mov
cmp
jecxz
add
xchg
mov
jbe
jg
stos
shll
dec
sub
out
mov
insl
into
fsubl
out
mov
insl
in
mov
test
popf
mov
jge
cli
pusha
sahf
and
sbb
das
sub
jne
jns
xchg
xor
cmp
or
cmp
mov
mov
mov
jg
mov
inc
push
imul
lds
mov
orl
pop
pusha
dec
sub
mov
cmc
sbb
dec
pop
ja
mov
push
dec
in
lods
repnz
pop
pushf
insl
mov
mov
sbb
xor
mov
jmp
mov
push
js
cwtl
or
and
and
push
popf
xchg
jge
push
push
cwtl
pop
inc
or
sbb
fnsave
dec
in
scas
add
scas
push
pop
push
mov
shl
mul
leave
inc
push
sub
popf
and
cltd
add
push
out
push
aam
dec
mov
loopne
push
orb
fistps
sub
xchg
push
inc
mov
popa
cmp
sbb
mov
pop
out
mov
mov
pop
aad
hlt
sbb
ret
or
pusha
lret
inc
cmp
cmpb
jo
stc
push
sahf
dec
inc
insl
das
icebp
fsubr
aad
jge
mov
std
mov
cmp
xchg
lret
sti
mov
cmp
movl
push
movsl
xor
leave
pop
cwtl
mov
push
stos
ja
lret
mov
xor
xor
jp
cmc
mov
pop
or
test
and
jp
scas
mov
push
rcrl
or
or
xchg
or
icebp
add
cld
push
pop
cmp
enter
int
pop
add
lods
push
mov
add
xor
push
bound
sbb
ss
xlat
mov
sbb
sub
pop
pusha
pop
rorl
add
jno
mov
cmp
sbb
pop
scas
sbb
sbb
xor
arpl
insb
push
cmp
clc
out
lea
imul
mov
sti
dec
cld
mov
mov
xorb
or
and
mov
cmpsl
lea
cmp
rcrb
in
xchg
adc
fcoms
repz
fistpl
add
jne
or
cs
inc
add
mov
bound
xchg
sbb
lcall
add
jnp
inc
bound
sub
pushf
xchg
dec
aam
pop
fstpl
and
ja
aad
adc
pop
jge
jnp
lock
jne
pop
push
leave
rcrb
into
das
inc
xchg
dec
shlb
std
and
stos
int3
in
and
cmp
ja
adc
jb
lea
and
mov
jmp
arpl
movb
dec
imul
out
mov
pop
jp
jge
jne
push
enter
dec
rorl
cmp
mov
push
leave
repnz
test
push
repnz
int3
inc
xor
cld
stos
lock
and
inc
add
pop
dec
in
jge
mov
xchg
xchg
fisttpl
xor
ror
mov
jmp
xchg
inc
jg
jecxz
push
jp,pn
test
frstor
int
adc
lret
aas
out
mov
pushf
cmc
dec
out
sbb
es
jg
adc
test
lock
movsb
fidivs
fidivs
stos
mov
dec
pop
dec
data16
mov
fistpll
pop
push
je
das
call
aas
rcll
dec
lods
xchg
mov
dec
jo
test
aaa
add
clc
popf
mov
adcb
dec
lahf
xor
xlat
mov
jp
xor
mov
push
cmp
inc
and
gs
sbb
inc
fs
add
mov
and
shlb
inc
xor
cwtl
and
xchg
in
mov
xchg
sub
lods
pop
addr16
mov
jb,pn
insl
push
pop
loop
and
adc
stos
jge
cmc
sub
or
jecxz
rorb
pop
test
cmp
push
xor
aam
mov
movsb
hlt
push
pop
lods
sti
cmp
jle
sub
mov
inc
fucom
imul
and
mov
sub
jl
xchg
jno
mov
sbb
ss
xchg
sarb
xchg
arpl
ret
inc
pop
mov
add
ror
cmp
btc
addr16
mov
or
mov
arpl
or
add
jle
js
je
inc
mov
dec
scas
sub
dec
sub
xchg
stos
sub
lods
sti
jecxz
movsl
loopne
or
mov
mov
lods
sbb
mov
repz
sub
inc
sub
loop
pusha
les
aas
and
adc
push
and
dec
pop
enter
pushl
test
pcmpeqd
lret
imul
push
cmc
pop
mov
fdivrl
dec
inc
mov
rol
movl
call
aad
andl
mov
je
cmp
scas
sbb
ds
push
lock
popa
inc
xor
lret
push
cld
js
cmp
je
test
stos
sbb
out
aas
pusha
fsubr
pop
movswl
push
aam
loop
push
add
mov
loopne
dec
dec
fsts
adc
loop
add
sti
dec
lods
fildl
xlat
mov
scas
mov
out
jge
mov
push
inc
mov
rclb
orb
pop
lcall
aad
or
imul
loope
into
jno
fstpt
xchg
vpmacsdql
lock
xlat
or
scas
pop
inc
pop
sbb
hlt
in
mov
adc
inc
push
sbb
dec
movsl
xchg
pop
les
push
cld
movsl
jns
adc
pop
or
bound
mov
xlat
sub
xor
push
outsb
jb
mov
mov
cmp
in
sbb
out
mov
push
or
enter
push
sbb
fadds
mov
sub
pop
rcrb
adc
cmp
sbb
sub
dec
ja
mov
ljmp
adc
inc
inc
outsl
adc
jecxz
add
mov
mov
int
stos
jl
adc
or
push
cmp
mov
or
sub
jnp
mov
mov
ds
ja
lods
fldlg2
and
pop
mov
xor
sbb
mov
sub
nop
xchg
sub
inc
in
jg
mov
sbb
dec
shll
aam
push
jno
and
mov
insb
mov
rolb
or
call
arpl
nop
sub
xchg
lcall
pop
shrl
sahf
xlat
sahf
mov
repz
jae
les
mov
xchg
adc
nop
jmp
movsl
enter
sbb
repnz
jae
sub
movsl
jg
mov
dec
lea
jo
and
mov
sbb
loop
data16
pop
dec
enter
and
cmpsl
jge
mov
test
cmp
roll
std
add
mov
pop
pop
mov
test
fcmovbe
les
sbb
cmp
ret
sub
xchg
or
sti
ret
lcall
insb
in
bound
sbb
sbb
je
push
and
ret
into
nop
roll
unpcklps
lods
pop
subb
call
mov
or
sahf
xchg
pop
repnz
xchg
xchg
pop
ret
or
dec
es
rcr
adc
push
clc
dec
xorl
push
sti
sub
push
imul
es
aad
mulb
add
adc
enter
and
cmp
imul
push
dec
pop
push
test
fxch
cmpsl
in
aaa
mov
lret
adc
iret
ret
sti
mov
add
pop
sbb
lock
nop
mov
dec
push
pop
sub
add
or
fists
int
cmc
cmp
dec
xor
adc
pop
cs
xrelease
cmp
inc
js
push
fiaddl
jmp
jae
ret
cmp
inc
leave
clc
out
lds
shl
dec
and
inc
mov
mov
loope
ret
mov
outsb
adc
mov
and
dec
shl
icebp
dec
pop
sub
and
clc
cmp
sti
cmpsl
out
ja
popa
or
pop
push
stc
pop
push
or
pminub
push
lea
mov
or
add
push
loope
into
cld
cmp
mov
mov
lret
rolb
aad
push
mov
xchg
call
pop
fs
jnp
sbb
dec
sbb
icebp
enter
pop
mov
inc
ret
popf
or
lret
daa
out
adc
pop
and
dec
pop
pusha
fcmovb
inc
add
mov
dec
sbb
loope
negl
mov
stos
loop
sub
jl
pop
and
notl
mov
aaa
and
jg
aas
and
or
out
iret
sub
test
es
pop
inc
xchg
in
sub
ja
scas
pop
xchg
imul
dec
mov
mov
repz
xchg
inc
mov
and
inc
js
test
sbb
aad
and
xchg
shrb
imul
or
dec
adc
or
push
lret
dec
ljmp
and
mov
sbb
sub
popa
dec
enter
or
rclb
inc
insl
cmp
xchg
push
xchg
in
mov
roll
or
mov
call
int
imul
mov
fnstcw
fisubrl
pop
in
into
in
push
scas
popf
mov
mov
and
xchg
call
and
loopne
xor
or
fiadds
lahf
cwtl
cmpsl
cmp
or
dec
add
sbb
test
popf
pop
lods
mov
mov
fdivrs
add
sbb
lock
or
mov
pop
in
push
mov
sbb
lcall
adc
loope
iret
jne
mov
jo
or
inc
xorl
into
mov
push
jmp
adc
dec
pop
stc
pop
cmp
ss
test
fucom
insb
repnz
xchg
dec
out
ljmp
arpl
cmp
mov
or
sbb
xor
mov
sub
mov
pop
ds
push
orb
dec
mov
xchg
xchg
das
fsts
outsb
test
mov
lods
mov
test
or
pop
movsl
mov
push
mov
jae
outsl
cmp
add
imul
lods
in
add
sti
xchg
cmp
dec
jbe
sbbl
fldt
lcall
or
fists
adc
sub
mov
lret
push
sti
push
mov
mov
xchg
cmpsb
imul
pop
dec
movsb
sbb
jmp
cmp
inc
jg
push
mov
add
mov
mov
ss
push
repz
or
gs
push
xor
jno
scas
fidivrl
out
dec
push
mov
xchg
shl
stc
gs
daa
clc
jg
mov
mov
ret
jns
pop
psubusb
mov
adcl
mov
and
jmp
and
ja
in
in
cmc
sahf
bnd
push
xchg
adc
sbb
jg
push
movsl
sub
dec
cmp
andl
fcmovne
sahf
icebp
pop
stos
jmp
or
pushf
jg
push
sbb
or
cmp
test
shr
leave
insb
pop
inc
fdivrs
insl
push
test
lcall
bound
cltd
push
xchg
mov
pop
push
rorl
repz
sahf
adc
inc
pop
mov
in
je
insb
icebp
push
cmc
jg
adc
cmc
lcall
and
jp
push
jbe
in
cmp
mov
out
pop
lret
or
cmp
adc
insb
jbe
and
pop
jnp
pop
arpl
lret
shlb
inc
loopne
shl
cli
push
les
in
fs
adc
jecxz
sub
xchg
mov
outsb
mov
movsb
pop
add
jo
or
sbb
inc
out
lcall
lods
inc
mov
xor
in
push
lahf
addb
lret
fwait
sbb
mov
mull
pushf
push
dec
lea
xor
outsb
adc
push
jnp
sbb
push
dec
call
ret
dec
cwtl
std
inc
jno
dec
push
imul
or
xlat
xor
in
fidivrs
and
dec
lea
mov
mov
mov
int3
test
mov
mov
imul
mov
mov
push
sub
loope
push
fmull
fucomp
push
lds
pop
arpl
xchg
pop
scas
push
cmp
jle
out
xor
or
xor
test
cmp
sbb
xchg
dec
mov
add
mov
movsb
addr16
aas
xor
ss
roll
test
out
pop
push
fstl
cmp
mov
sbb
sub
stos
sbb
push
std
or
aad
mov
cld
mov
xor
fs
pop
xchg
je
jl
sub
mov
cmp
lahf
inc
push
or
pop
imul
sbb
fdivl
or
lods
sti
xchg
aad
imul
repz
flds
outsb
cmp
popf
movsl
jmp
xchg
mov
cmp
insl
fimuls
jb
cwtl
popa
xor
mov
mov
fdivs
daa
cmp
mov
mov
sbb
rclb
ss
es
cmp
cmp
out
fbstp
fs
inc
sub
add
dec
push
ljmp
lret
fildl
out
mov
jbe
cmp
or
xchg
mov
repz
adcl
rorl
xor
ret
frstor
push
inc
aad
rcrl
adc
aas
dec
or
jo
aaa
aaa
dec
push
push
gs
aas
decb
leave
loopne
or
dec
inc
lahf
aad
jno
lods
subl
inc
jbe
scas
jle
cmp
lods
aas
lcall
mov
imul
jmp
mov
inc
std
sbb
out
shll
stc
call
or
es
mull
test
mov
xor
pop
and
push
test
and
pop
mov
in
sbb
addr16
popf
inc
pop
pop
mov
jp
addb
xor
inc
xchg
ljmp
int3
xchg
add
cld
pop
leave
lahf
xchg
xchg
cmp
shlb
inc
mov
movsb
fnsave
fs
scas
enter
push
pop
dec
inc
lcall
mov
inc
into
and
cwtl
stos
scas
pop
dec
cwtl
xchg
xor
pop
jo
add
xchg
clc
popf
out
mov
dec
and
loop
aas
test
insb
cmp
imul
cwtl
mov
lret
adc
and
mov
inc
clc
loopne
inc
inc
jae
mov
ret
insl
je
movsl
negl
mov
fsubs
mov
call
xchg
sub
push
ss
into
test
pop
aaa
jp
and
push
mov
lcall
mov
lret
fsubrl
sub
pusha
xchg
hlt
fcomps
cld
cmp
cli
cmp
jle
lcall
in
pop
push
and
xor
stos
iret
shlb
jle
imul
adcl
testl
mov
jle
pop
mov
enter
jnp
push
cltd
in
and
jg
jb
pop
adc
sub
push
jl
and
repz
inc
pop
pusha
fcompl
mov
xchg
pusha
les
andb
test
imul
nop
pop
inc
dec
jne
push
out
nopl
cmp
into
jo
pushf
mov
add
sub
xor
addr16
jecxz
es
sbb
sub
stos
jne
aad
xor
dec
inc
pop
and
enter
stos
adc
in
pushf
addr16
adc
sbb
xor
ss
lock
and
sbbb
addb
xorb
subl
jmp
or
and
sub
mov
roll
dec
jb
mov
pop
add
pop
lahf
sub
mov
movsb
in
fmuls
or
nop
xor
jnp
push
popl
push
cwtl
call
jle
popa
shrl
dec
mov
mov
in
sub
fstpl
sbb
fs
jne
loop
mov
aaa
sahf
shlb
mov
push
push
inc
inc
add
dec
in
cmp
push
cltd
inc
and
push
pop
xchg
cmp
adc
mov
rclb
dec
sbb
xrelease
jnp
jo
mov
adc
lret
mov
mov
cli
fdivp
pop
into
pushf
and
sbb
fstl
imull
jle
xchg
push
sbb
out
pop
and
orb
adc
insl
sbb
mov
cmp
mov
pop
mov
cli
lahf
mov
xlat
pop
in
push
xor
loop
add
test
cmp
jae
outsb
pop
cmpsl
mov
out
push
jp
jmp
insb
cwtl
push
repz
ret
jnp
imul
outsb
out
in
xchg
repz
into
mov
push
pop
cmp
cmpsb
xchg
inc
outsb
mov
stos
fsts
mov
popf
ret
mov
cltd
shlb
inc
sub
push
sbb
or
mov
dec
mov
test
jbe
call
andl
jbe
add
ror
dec
loopne
sub
dec
xchg
xor
xchg
dec
jb
mov
out
push
fadd
aaa
lock
cmp
cmpsb
sbb
jbe
push
es
outsb
jl
sti
xchg
sub
ret
ficoml
xor
push
addl
mov
inc
leave
insl
aaa
sbb
or
int
pop
cmp
out
shrl
mov
push
dec
imul
enter
or
push
into
repnz
imulb
cmp
pushf
pushf
push
xchg
jo
insb
lcall
subl
popf
inc
sub
pop
lcall
xor
leave
sbb
sahf
and
lods
xlat
mov
or
push
nop
iret
sub
dec
mov
lock
inc
sti
and
adc
or
jmp
or
pop
push
enter
sahf
sub
sbb
fidivrl
push
mov
xor
in
cmp
shlb
push
out
xchg
cmp
lock
sub
or
adc
xor
pop
rorl
cmp
cmpsl
inc
imul
outsl
xlat
stos
push
jb
jnp
sbb
jb
sbb
daa
xlat
fstps
adc
mov
mov
cmc
add
fldenv
jnp
cmpsl
cmp
and
lds
mov
popa
inc
leave
int3
dec
movsl
push
or
fwait
adc
aaa
hlt
idivb
fadd
mov
loopne
insl
inc
fstpt
xchg
add
fs
pop
mov
movsl
movsb
pop
in
js
dec
push
insl
fnstenv
add
jmp
test
adc
add
das
add
mov
jp
inc
adc
mov
clc
push
ljmp
aad
or
mov
dec
inc
cltd
iret
pushw
mov
in
lea
push
or
popf
frstor
inc
outsl
xlat
mov
les
sti
push
dec
xchg
push
ficomps
ds
clc
sbb
xchg
sub
xchg
loope
sbb
rep
inc
hlt
leave
std
sbb
or
lahf
daa
and
mov
je
clc
lret
xchg
ss
push
les
or
adc
sub
lds
xchg
mov
out
jbe
loopne
in
sub
xchg
xchg
loope
sbb
inc
icebp
inc
inc
addb
lret
lcall
xchg
xchg
sub
subb
jo
add
jno
movsl
pop
into
dec
xchg
and
cmp
xchg
mov
sub
push
js
lret
xchg
pop
and
lcall
jp
push
xchg
and
shr
mov
fadd
sarl
bound
ret
aam
push
push
cli
or
fcomps
out
pop
dec
ds
es
xchg
add
xchg
cmc
dec
jo
and
sbb
pop
mov
xor
dec
cmc
push
mov
iret
mov
aad
loop
not
aam
in
or
mov
bound
mov
mov
pop
clc
lret
test
adc
ret
andb
xor
xchg
fs
jmp
shll
push
xchg
cmp
test
repnz
fwait
add
lret
push
inc
fwait
mov
in
mov
push
pop
movsb
fwait
push
adc
inc
pop
inc
aaa
fists
test
repz
dec
es
jl
cmp
push
frstor
xchg
cli
movsl
push
pop
lret
sarl
mov
adc
dec
mov
fs
aas
decl
lcall
enter
in
hlt
push
pop
mov
jmp
push
xchg
lds
mov
jo
cmp
sahf
pop
lret
pop
sub
lods
xchg
int
popa
lcall
and
insl
xchg
pop
aas
jl
mov
pusha
jp
push
xchg
scas
hlt
sub
jae
mov
test
shrb
fldcw
sti
out
jnp
dec
jb
ds
cmp
loopne
jo
out
mov
and
sbb
pop
add
pop
dec
sti
dec
mov
push
mov
mov
xchg
xor
add
lret
sarb
xorl
sub
sub
incl
stos
test
mov
xor
xchg
pop
lods
push
and
negb
nop
add
and
out
pop
scas
fcomps
lcall
jecxz
add
mov
mov
mov
fdivp
xchg
lods
mov
jmp
or
sub
fcoms
push
adc
fdivrs
cmp
jmp
cmp
subb
add
cmp
or
and
mov
adc
out
lea
rcll
popf
nop
xchg
mov
orl
and
cld
mov
xchg
cs
test
push
xchg
or
rol
cwtl
adc
push
or
test
mov
pop
lods
lods
mov
inc
add
shrb
mov
popf
adc
cmp
pop
lods
xor
in
or
sub
xor
cmc
mov
jge
cwtl
mov
adc
xchg
adc
jbe
lret
lds
mov
aaa
movsb
mov
outsl
mov
cs
repz
testb
jbe,pn
and
lcall
jno
and
in
adc
sbb
jp
fidivs
xor
add
sbb
ret
psrld
sbb
jl
lret
cli
dec
test
icebp
scas
mov
xchg
jge
sti
inc
cmp
int3
inc
mov
jg
jl
cli
xchg
gs
inc
andl
push
mov
jno
pop
jnp
aas
xchg
xor
outsb
out
lods
xor
pop
aad
cmc
shr
jb
outsl
out
insb
imul
repz
sbb
cmpb
mov
jge
cmp
inc
stos
and
xlat
stos
ret
jns
xchg
sahf
out
sbb
icebp
insl
push
daa
jnp
sbb
addr16
inc
rcll
movsl
add
inc
pop
mov
and
pop
mov
bound
mov
popf
push
icebp
std
pop
popa
add
mov
inc
or
cs
sub
mov
mov
sub
or
idivb
sub
mov
stos
dec
subb
xor
xor
pop
xchg
xchg
jb
mov
cmc
sbb
lock
push
mov
les
push
movsl
mov
sbb
lods
adc
cmc
pop
int3
in
dec
mov
gs
xor
sbb
mov
inc
adc
dec
enter
mov
xor
repnz
mov
push
sub
iret
adc
sub
xchg
inc
jnp
das
mov
mov
or
cwtl
dec
outsb
push
insb
pusha
repz
addr16
sahf
mov
push
dec
lods
popa
call
adc
sahf
enter
ja
aas
loop
sbb
data16
popf
push
and
lcall
pop
lock
ss
scas
fcomip
leave
or
loope
js
inc
sti
fdiv
pop
push
lret
ja
popf
cmp
mov
adc
cmpsb
push
in
push
neg
in
cmp
adc
mov
jge
cmp
popa
sub
push
dec
adc
sbb
dec
lcall
push
and
sbb
mov
jl
cmc
cmpsb
xchg
inc
inc
pop
add
add
icebp
mov
cmovg
xchg
repz
jmp
iret
dec
or
push
mov
lret
xor
cld
sbb
jns
add
lahf
jmp
mov
loopne
jmp
or
jp
outsb
cs
ret
mov
cltd
dec
push
mov
dec
cltd
jnp
inc
xchg
dec
push
xchg
pop
mov
das
xor
rorl
xor
out
jns
pop
stos
xor
push
sbb
mov
into
in
imul
and
pop
das
or
loop
xchg
jae
adc
dec
repnz
sub
xorb
push
sub
fcoms
test
pop
add
inc
cmp
dec
pop
out
xchg
or
mov
cs
ficoms
loop
cltd
cmp
pop
sbb
sbb
cmp
das
test
dec
ljmp
add
inc
pop
add
fcoml
int
and
clc
pushf
adc
sbb
mov
test
inc
es
cmp
push
jns
rorl
mov
xchg
sub
xchg
loop
inc
adc
stos
xlat
test
push
out
inc
ss
mov
push
pushf
loop
xchg
push
jno
sub
push
pushf
dec
out
mov
xorb
iret
mov
sub
pusha
dec
xchg
pop
pop
jbe
inc
ss
and
fcoml
scas
dec
jp
xchg
push
icebp
mov
mov
fadds
xchg
mov
jns
jbe
sub
fnsave
jecxz
cmc
sub
inc
fidivrl
pmullw
add
mov
call
test
dec
nop
inc
cmp
fistl
cld
adc
and
or
push
test
lock
in
push
push
push
push
xchg
les
push
sbb
sbb
xor
cmp
xor
sub
lds
lds
lret
add
out
or
cmc
push
push
dec
subl
loope
pop
push
es
or
sbb
ljmp
out
mov
xchg
add
push
pop
inc
push
push
jns
push
dec
inc
jb
xchg
add
mov
fcomp
leave
popa
mov
cmp
and
inc
xchg
sbb
xchg
jnp
loope
imul
ud2
mov
cmp
pushw
negl
cmp
inc
lret
repz
pop
rolb
call
cs
jmp
push
mov
int
inc
icebp
shlb
aas
cli
lret
clc
jbe
push
mov
mov
or
adc
sti
mov
pop
jp
ret
or
es
or
jbe
loope
leave
ja
adc
cmpsl
popa
xor
orb
fdivs
sub
cmp
and
cltd
fs
mov
fadds
vmovapd
shll
mov
cmp
loopne
ret
in
test
adc
xlat
xor
push
popf
ss
ret
cmpsb
mov
mov
fwait
inc
cwtl
icebp
dec
xor
cmpsl
pop
das
push
hlt
xchg
adc
mov
bound
in
mov
mov
mov
mov
or
add
mov
xor
das
imul
cmc
in
es
fistps
mov
decl
fsubr
stos
push
adc
imull
push
mov
add
sub
mov
dec
leave
sub
xchg
je
sarl
ret
cmpsl
fadd
jbe
adc
push
clc
sub
mov
mov
out
andl
push
or
sbb
cld
lcall
lahf
mov
dec
fdecstp
mov
fs
cs
out
push
sub
pop
inc
imulb
jne
xor
loop
notb
les
test
xor
inc
and
dec
adc
mov
pminsw
movsl
jnp
mov
mov
addr16
lcall
sahf
lock
ja
sbb
mov
and
push
daa
adc
cmpsl
push
dec
rcrb
xorl
push
mov
mov
fcompl
shlb
shll
jns
imul
xor
popa
fnstenv
add
mov
js
jle
and
mov
test
xchg
nop
sbb
imul
jp
sub
jl
fistps
movsl
jp
inc
sbb
popf
or
xchg
pop
andl
pop
add
mov
xor
adc
jno
lret
xchg
fcoms
in
hlt
adc
inc
mov
lods
int3
or
and
mov
fsubs
mov
test
mov
lret
mov
call
mov
lret
and
xchg
cwtl
lret
lock
lods
and
xchg
mov
dec
fwait
jo
push
movsb
test
or
and
stc
push
popa
ja
adc
mov
and
leave
sbb
je
arpl
imul
data16
and
mov
in
mov
arpl
sub
fwait
pop
dec
orb
xchg
mov
movsl
push
mov
and
and
aaa
xchg
adc
das
xor
jns
jb
xchg
jnp
pop
in
push
add
jl
xor
lods
lods
sub
adc
fst
xchg
xchg
and
mov
and
cmp
sti
push
jmp
xor
and
dec
test
ljmp
aad
add
ror
in
into
fbld
insl
rorb
shrl
fldl
int
ds
pop
xor
dec
mov
cltd
aad
xchg
pop
mov
pop
loopne
dec
mov
pop
cld
icebp
hlt
and
rclb
add
popf
push
aam
out
mov
mov
insb
pop
in
mov
cmpb
xrelease
and
mov
test
fiadds
mov
sti
ret
icebp
sub
sub
jns
jb
clc
lods
fs
int3
sub
dec
loopne
mov
dec
jmp
mov
in
push
push
cmp
sub
mov
fildll
shll
rcrb
lods
fists
mov
pop
jl
and
aaa
cmp
push
push
cmp
mov
ret
or
dec
cwtl
pushf
xor
popf
and
jne
lahf
dec
fdivrs
and
xchg
stos
cwtl
clc
and
outsb
add
and
fneni(8087
add
cmp
xchg
or
movsb
mov
xor
cli
inc
shlb
or
cmpsl
cmp
push
clc
cmpsl
mov
inc
in
popf
add
cs
fcomps
lcall
xor
test
outsl
push
push
dec
adc
lods
sbb
inc
jae
pop
arpl
pop
ss
inc
and
sbb
aaa
mov
cmpsb
fadds
lock
aam
dec
stc
xchg
xor
cmp
mov
pop
outsb
xchg
push
inc
mov
sti
pop
std
jno
lahf
jo
clc
imul
sub
test
cmp
sub
fwait
pop
popf
add
jle
adc
cmp
in
cltd
loop
xchg
mov
add
jge
inc
ficompl
js
push
mov
ja
pop
fisubl
hlt
adc
or
mov
test
adc
sahf
shll
inc
iret
adc
jnp
sbb
pop
mov
mov
sub
push
mov
xchg
js
sub
inc
in
mov
fcomps
nop
and
cmc
pop
out
adc
xchg
adc
repnz
mov
mov
pop
test
dec
inc
and
out
mov
push
ret
andl
loop
jae
test
add
in
fidivrl
insb
aaa
jbe
cmpsb
es
sbb
iret
push
test
cwtl
movsb
sbb
repz
fdivrl
adc
std
js
insl
pop
dec
inc
dec
fistpll
pop
scas
pop
xchg
nop
push
pop
pushl
sub
xor
fs
xlat
dec
lock
in
inc
pop
mov
jl
add
sbb
in
cmp
sub
jmp
imul
jle
fisubrs
shrl
inc
lret
lock
movsb
push
popf
sbb
mov
xor
xchg
xor
pop
jbe
or
int
popf
insl
xchg
and
xchg
xchg
pop
test
movsb
xchg
lret
add
cmp
stos
cld
push
fildll
xor
jbe
out
xor
out
jle
mov
pop
sbb
jp
mov
or
leave
aaa
mov
sub
xchg
icebp
jnp
loop
jne
dec
mov
pop
jnp
xor
cli
mov
cmp
in
mov
mov
fsubl
mov
arpl
dec
lret
sti
mov
sarl
sbb
dec
push
jle
xchg
xchg
cltd
jge
add
stos
lcall
pop
jp
inc
inc
es
jge
mov
bound
adc
insl
gs
adc
es
pop
cmp
test
cmpsl
mov
xor
call
add
sbbl
lods
mov
add
into
add
jmp
arpl
push
push
dec
dec
xor
movd
mov
add
mov
mov
xor
jb
inc
jg
lds
sar
out
orl
pop
push
adc
jno
xchg
ror
shr
adc
popa
sbb
fisttps
adc
mov
movsl
cmp
jns
popa
cmp
mov
inc
jle
test
data16
push
mov
fs
adc
movsb
inc
xlat
cmp
pop
ret
ljmp
ljmpw
les
in
xor
lahf
mov
loope
test
cltd
pop
mov
hlt
test
jmp
push
test
out
push
ljmp
test
pop
mov
sbbl
dec
jg
ret
mov
sbb
test
xchg
lahf
dec
sub
cld
adc
adc
cmp
adc
test
mov
js
arpl
out
mov
pop
scas
std
sub
iret
int
push
xchg
dec
pop
int3
sub
int
icebp
inc
movsb
mov
sub
and
dec
xor
pop
out
imul
cmp
xchg
insl
popa
mov
xor
push
pop
push
inc
pop
loope
add
sbbb
arpl
and
jl
test
pusha
xchg
imul
stos
out
xchg
inc
sbb
or
andl
lahf
and
int3
sub
push
cmc
adc
cmp
sub
movsl
mov
push
mov
cmp
or
sbb
repz
rcl
xchg
fnsave
out
sub
movsl
shll
imul
jns
lahf
loop
loop
jns,pn
lock
shll
icebp
aaa
add
push
adc
push
add
dec
xor
cwtl
add
sub
lds
cmp
adc
sbb
mov
cmpsb
push
adc
push
ret
xor
jp
mov
in
in
hlt
in
shll
push
sbb
pop
and
es
pop
sahf
xchg
cmpsl
xor
mov
jbe
adc
pop
mov
iret
out
sub
or
lret
mov
inc
adc
out
jmp
out
xor
rolb
and
push
adc
cmpsl
stos
imul
jp
inc
sbb
inc
adcb
aaa
sub
cwtl
fcomps
popf
mov
inc
push
or
dec
pop
cmp
subl
mov
and
sahf
cltd
lds
ja
jge
out
daa
fwait
inc
push
cwtl
in
insb
lods
pop
lcall
scas
test
xor
push
fidivl
or
jle
and
fsubs
dec
test
lcall
lock
cmp
mov
clc
add
or
xor
test
add
jnp
fistpl
jmp
icebp
and
push
fildll
mov
xchg
xchg
lret
fs
mov
mov
jge
sbb
mov
push
push
decl
sub
jbe
jge
cwtl
das
jne
repz
cwtl
jle
and
js
movsl
mov
sbb
lea
stc
hlt
dec
sub
ret
popa
bound
xorl
or
add
cmc
inc
lock
loop
mov
mov
add
ret
mov
pop
xor
jb
pop
adc
dec
and
sub
xchg
xchg
ret
cmp
out
jbe
jecxz
push
lcall
lret
ret
add
adc
adc
daa
or
xor
inc
loope
lcall
mov
inc
out
mov
test
push
int3
test
les
lret
and
push
inc
jne
mov
rorl
dec
dec
sbb
jge
sbb
lret
add
inc
das
stos
mov
push
mov
sarb
dec
les
jg
or
ds
push
xor
pop
cmp
mov
test
shl
mov
fs
rcr
repnz
or
aad
outsb
into
push
add
or
mov
sbb
xor
fstps
dec
mov
mov
std
dec
mov
shlb
push
mov
xlat
jl
lock
icebp
jb
call
inc
or
xorb
dec
or
inc
adc
or
lods
cmpsl
lods
mov
xor
jmp
mov
jo
enter
pop
xor
es
inc
leave
xor
xchg
shlb
das
ds
sbb
pushf
mov
xchg
pop
dec
pop
aad
gs
js
aaa
rcrl
inc
out
cmp
inc
scas
in
stos
xchg
mov
repnz
sbb
cmovb
rcrl
xor
xchg
gs
jmp
pop
xchg
inc
imul
repz
sub
rcrl
jno
int
loop
cld
sub
sarl
aad
inc
and
add
lea
mov
mov
xchg
scas
es
out
es
xchg
xor
lahf
pop
dec
jo
cmp
aam
mov
adc
mov
inc
pop
sarb
in
leave
pushf
repz
add
pushf
sub
mov
mov
pushl
add
adc
lock
jg
aam
subb
mov
imul
jmp
fnstsw
enter
xchg
cmc
rcrb
adc
ss
mov
ja
test
aaa
or
xor
pop
call
sub
lret
loope
and
leave
pop
repz
subb
sbb
imul
cmpsb
sbb
and
push
sbb
sbb
ja
xor
mov
push
pop
in
data16
mov
iret
inc
fdivrs
cmpsl
xchg
adc
enter
xor
adc
adc
jnp
push
sbb
add
mov
stos
xor
fldt
and
sub
loopne
adc
test
pop
popf
mov
je
pop
jl
in
out
add
pop
dec
repz
lret
jb
rolb
jno
cmc
xchg
call
int
fists
in
cmpsb
sub
xchg
xchg
movb
add
iret
cwtl
clc
movsl
insl
adc
sbb
mov
jae
pop
test
xor
clc
push
mov
inc
shr
jnp
xchg
inc
lcall
je
lods
data16
mov
or
repz
adc
push
mov
mov
pop
jp
pop
and
or
jecxz
mov
pusha
aad
lret
pop
ds
shlb
xlat
cwtl
mov
outsb
adc
mov
in
inc
outsb
out
cmp
push
jge
or
aaa
daa
jl
add
and
mov
jnp
and
test
push
test
cmp
mov
sub
rcll
pop
insb
je
and
push
and
in
shrl
mov
jp
out
and
push
mov
jp
std
ret
enter
enter
mov
imul
sbb
mov
and
add
sti
dec
sbb
in
jnp
xchg
icebp
push
inc
sbb
icebp
std
fcompl
cmp
ficomps
dec
cmc
jle
push
in
mov
pop
pop
mov
add
fadds
call
xchg
aaa
dec
fwait
jae
adc
cmp
push
mov
loopne
push
push
xchg
pop
int3
cwtl
fsin
push
cmp
or
mov
lock
mov
int3
push
shrl
jb
push
les
mov
popa
push
mov
ret
data16
nop
jae
jecxz
xor
dec
insb
push
cmpsb
sub
sbb
xor
adc
xor
mov
adc
fidivrl
and
and
rorb
out
add
inc
cmp
push
setg
call
mov
call
sbb
leave
mov
mov
sarl
scas
mov
shr
test
aaa
subl
inc
or
add
movsl
pop
push
scas
mov
nop
loope
jecxz
out
pop
mov
lahf
mov
dec
into
push
dec
mov
add
adc
ret
cmpsb
sti
aad
shrl
mov
mov
cmpsl
inc
stos
sti
aas
jb
in
xchg
insl
xor
shll
ret
mov
popf
out
jmp
stos
dec
jmp
push
out
add
mov
repz
jnp
mov
push
dec
push
outsb
jno
loope
and
fwait
stos
and
dec
mov
cltd
popf
lock
mov
into
enter
cmp
or
jbe
xchg
xchg
aam
push
sbb
push
cs
cli
jnp
lcall
sub
jg
jmp
cmp
pop
pop
mov
and
sbb
mov
mov
ret
xchg
fiadds
or
mov
mov
xor
sbb
out
adc
xchg
out
test
jns
sbb
decb
inc
mov
sub
xor
rclb
or
repz
pusha
aas
xor
cwtl
gs
stos
jb
xchg
incl
mov
mov
rolb
mov
repz
inc
je
inc
rorl
xor
mov
inc
and
imul
ret
xchg
sub
cmp
hlt
mov
rol
or
lods
je
dec
cmp
jle
cs
push
mov
lods
outsl
jp
push
cmp
jne
sub
insb
xor
shll
outsl
rorb
inc
xorl
es
jne
imul
xchg
mov
and
mov
push
jae
inc
jno
and
mov
fildl
fwait
rclb
jb
arpl
and
fldt
adc
lret
inc
push
mov
cwtl
mov
sbb
xchg
mull
or
pop
xlat
mov
ds
lea
sbb
jns
adc
imul
in
outsb
call
or
imul
inc
stc
pop
add
scas
jge
loopne
push
adc
or
add
mov
test
mov
jle
add
cli
ret
das
inc
dec
ret
nop
mov
cmpb
mov
cmpsl
fisubl
rorb
pop
ret
push
shlb
mov
imul
enter
mov
pushw
or
xor
or
and
lods
test
or
mov
push
mov
xor
add
shl
call
xchg
popa
mov
or
adc
fs
jmp
or
fidivrl
aas
js
jns
mov
push
loop
mov
ret
fs
cli
push
push
ljmp
fdivrs
inc
adc
enter
mov
cmp
cmp
fsubl
mov
movsb
adc
mov
in
cs
aam
jecxz
mov
dec
stc
mov
and
adc
call
mov
sbb
or
dec
xor
lds
mov
lods
insb
sbb
push
fisubs
sbb
ficoml
push
push
test
dec
pop
es
fwait
mov
or
rorb
out
add
jns
push
mov
mov
cli
mov
jb
pop
in
scas
in
add
iret
pop
pop
push
pop
call
les
ret
testb
push
mov
jl
mov
sub
cmp
test
mov
mov
neg
aad
addl
out
sti
sahf
loope
xchg
xorb
and
test
push
or
dec
jne
xchg
int
gs
mov
inc
test
xchg
inc
sub
test
mov
mov
pop
sbb
pop
adc
stos
js
push
xchg
or
out
scas
enter
cmp
daa
insl
inc
gs
icebp
inc
adc
and
mov
adc
sarb
pushf
popa
adc
mov
or
push
in
dec
cmpsl
cmc
cltd
iret
and
outsb
push
push
dec
aas
xor
inc
jle
push
inc
cmpsl
and
out
add
in
push
fucom
insl
pop
and
dec
popa
mov
je
add
pop
enter
xchg
add
imul
cmc
lcall
inc
in
sti
fwait
icebp
inc
rcr
leave
sahf
movl
lods
adc
mov
fdiv
in
subl
sub
inc
pop
xchg
or
push
das
inc
iret
mov
out
sbb
inc
adc
ss
dec
pop
cmp
scas
and
in
cmp
cmpb
jo
pushf
pop
xchg
es
fucomi
ja
ja
cmc
inc
xchg
xor
pop
out
cmc
xchg
dec
ffree
fcompl
iret
ljmp
je
and
xchg
mov
mov
dec
xor
int3
xor
and
sbb
mov
decl
inc
out
enter
sbb
pop
int
testb
adc
int3
xor
jno
jp
aam
cmpsb
out
or
inc
sub
jp
push
mov
xchg
jle
scas
fst
test
pop
cmp
xchg
push
cld
fsubr
pop
push
cmpsl
cmpsb
leave
dec
gs
adc
mov
push
xchg
or
and
lret
icebp
pop
mov
sbb
push
add
pop
insb
mov
adc
das
or
imul
divl
int
test
push
mov
xchg
mov
lahf
adc
insl
outsb
and
ficompl
push
xor
sbb
xor
inc
xchg
sbb
ljmp
jno
icebp
lcall
jl
js
push
jo
and
mov
fsubrl
sarb
std
inc
cmp
cli
pop
or
mov
int3
push
pop
nop
loope
stos
inc
orb
sub
cmp
xlat
add
cmp
inc
sbb
cmpb
mov
pushw
push
out
dec
dec
das
add
push
call
das
dec
mov
push
addr16
divb
data16
or
out
mov
mov
imul
cmpsb
inc
jle
pop
pop
xor
int
add
add
jo,pn
fmul
call
gs
aad
inc
out
aam
inc
or
jo
pop
jnp
sub
and
cmp
movups
lea
mov
push
or
push
int
popl
or
dec
sub
jne
pusha
fstp
mov
inc
jmp
cmp
pop
or
rolb
add
out
xchg
fwait
daa
jecxz
mov
sbb
mov
mov
int3
push
pop
rol
xchg
test
sub
sbb
mov
push
inc
hlt
pop
dec
cli
push
adc
outsb
or
shlb
lods
fistpll
les
lods
sub
stc
not
xor
cmp
push
sub
xchg
pop
mov
xchg
cli
mov
cli
cltd
or
ficoms
mov
loope
iret
jb
fldcw
pop
pop
adc
fistpll
sub
push
mov
mov
cltd
insl
in
dec
sub
and
jns
movsl
les
adc
add
stos
sub
lods
fadds
or
arpl
pop
fldl
jg
mov
push
xchg
sbb
or
lods
and
enter
or
test
loopne
into
cld
cs
and
pop
ds
clc
mov
ret
mov
stc
pop
loope
mov
xchg
adc
fadds
push
out
push
xlat
lcall
sbb
sbb
xchg
add
push
shlb
sub
mov
inc
pop
xlat
jg
sub
add
pop
rcrb
shll
ret
cld
sbb
push
xchg
ret
hlt
adc
cmpsl
mov
subl
mov
aam
push
data16
das
xor
stos
mov
sub
and
dec
iret
add
pop
mov
int
in
insb
sbb
shlb
pop
xor
mov
add
add
lds
sarl
cmpb
push
stc
jbe
cmc
movsb
jnp
aas
aaa
dec
and
inc
jo
iret
in
sub
data16
cmp
shrb
cmp
insl
jae
xor
popa
shl
sahf
es
ss
cmp
jbe
ds
pushf
rol
add
xchg
pop
out
adc
loopne
lds
pop
and
push
add
mov
mov
xchg
jl
pop
cmpsb
rolb
add
shrb
cmpsl
popa
cltd
cltd
adc
stos
xchg
inc
and
pop
loope
je
into
jmp
sub
xor
ss
aad
js
cli
rorl
sbb
enter
scas
and
jno
mov
das
xchg
sub
mov
sbb
jp
ljmp
sbb
pusha
pusha
dec
mov
dec
insb
daa
aas
mov
ljmp
sti
out
mov
sti
xchg
stos
mov
gs
lcall
rorb
push
mov
push
pop
ret
push
mov
push
das
xor
nop
sub
lea
jmp
lret
adc
jmp
xchg
lahf
xor
jns
shl
inc
test
incl
add
aas
mov
add
xor
movsl
and
in
shll
xchg
mov
jmp
sbb
or
mov
push
inc
mov
loope
mov
jl
jmp
sbb
mov
inc
push
jb
push
sbb
test
jle
mov
push
pushf
in
xlat
data16
imul
or
mul
jbe
ljmp
test
cli
mov
cmp
xlat
xor
xchg
and
inc
jge
sbb
test
push
jbe
jo
sbb
cwtl
dec
dec
and
jne
xlat
testl
daa
dec
fcoml
ret
lods
and
movb
int
or
pop
pop
or
push
xchg
pop
mov
or
leave
or
and
sub
add
dec
int3
repz
iret
adc
mov
xlat
pop
cwtl
xchg
dec
mov
sbb
sub
sub
stc
mov
inc
inc
push
outsb
mov
jns
add
push
jle
adc
scas
movsl
push
and
cltd
insb
cld
out
mov
lcall
sub
cmp
data16
stos
push
jecxz
js
dec
outsl
jb
iret
decl
sub
cld
lea
ret
iret
dec
push
adc
adc
ss
jp
lods
push
movsl
adc
das
jbe
pop
lock
xchg
ja
mov
nop
inc
and
jl
inc
pop
add
enter
pop
xorps
push
sub
mov
rorb
loopne
bound
mov
imul
mov
scas
mov
adc
aas
jg
arpl
stos
push
sbb
fldcw
pop
mov
ret
add
cmp
mov
insl
pop
and
mov
mov
mov
mov
jmp
xor
jle
push
dec
or
pop
mov
scas
or
popa
scas
testb
shl
ret
inc
in
mov
testl
sub
lock
lock
fs
ja
fisubs
and
cmp
xchg
sub
stos
xor
sbb
idivl
add
sub
btr
or
lods
mov
pushf
cmp
mov
jmp
pop
jbe
add
and
out
or
xchg
data16
mov
adc
push
movsl
mov
mov
in
dec
cmp
call
pop
loope
jo
loopne
pop
xor
cmp
xchg
inc
das
dec
daa
cmc
inc
lahf
gs
pop
inc
mov
test
cmpsl
pop
mov
nop
mov
cwtl
shlb
imul
out
add
sti
xchg
aaa
in
scas
mov
jge
jb
push
fists
imul
ss
nop
scas
jb
not
push
jl
je
and
jb
pop
insl
loope
xchg
xchg
dec
mov
jecxz
decb
in
fsubs
imul
adcl
jl
mov
dec
xchg
mov
add
outsb
xchg
mov
icebp
push
mov
scas
lcall
insb
xchg
cld
jnp
adc
sub
addr16
xchg
xor
dec
mov
test
xchg
fs
xchg
test
push
xchg
and
xchg
jno
xor
xor
mov
stos
mov
dec
pushf
xor
sub
fcoms
inc
push
fs
cmpb
outsl
pop
mov
xchg
sub
stos
adc
mov
mov
out
and
xchg
fidivl
fdivrl
sbb
js
mov
xor
psubq
pop
in
sub
mov
cmc
rorb
ret
repz
sbb
enter
mov
push
push
push
hlt
data16
push
inc
xor
imul
xor
jmp
scas
mov
xor
inc
fidivrl
dec
das
ficompl
or
imul
jbe
jl
pop
je
mov
ret
jbe
lods
mov
mov
lcall
iret
add
cmc
pop
mov
inc
dec
outsl
imulb
jb
setno
bound
cmp
inc
cs
lret
js
add
insb
fmull
fmull
fcmovnbe
repnz
cmp
test
pop
sub
imull
add
dec
xor
jle
xlat
mov
clc
testb
sub
mov
jb
add
repz
test
enter
fs
mov
fiaddl
xchg
imul
ss
jb
inc
gs
pop
inc
push
ds
lea
jno
mov
sbb
mov
es
mov
sbb
mov
pop
jno
lods
jne
pop
jge
or
adc
xchg
sbb
push
rep
xchg
adc
mov
mov
sbb
mov
mov
or
mov
cmpsb
dec
std
cltd
inc
cmpsb
loopne
push
call
cmpsl
movsl
and
fildl
pop
popa
test
cmp
cwtl
int3
or
lahf
mov
mov
stos
ljmp
push
mov
repz
lock
jge
out
jne
pop
lahf
cmp
adcb
adc
jne
cmp
fwait
ret
shr
test
dec
stos
loop
xor
add
sub
inc
dec
lahf
jge
lret
lret
je
ljmp
jbe
mov
imul
dec
inc
inc
in
test
icebp
xor
in
xor
jb
mov
in
jo
cltd
lods
xor
ljmp
dec
ret
mov
and
fidivl
jbe
and
add
push
xor
sub
fidivrl
js
int
lret
aad
gs
pushf
sahf
add
mov
lds
or
or
bnd
inc
and
icebp
jle
xchg
mov
inc
jle
pop
jle
inc
sub
xor
jb
dec
sbb
cmpsl
inc
das
jmp
bound
fwait
test
out
sub
fstps
dec
mov
aam
xchg
dec
jecxz
aam
aas
and
test
insb
mov
push
fadds
inc
in
push
mov
and
pop
xchg
out
mov
decb
cmp
mov
popf
movsb
push
inc
pushf
lods
fildll
insl
imul
inc
adc
lcall
mull
and
inc
pop
scas
dec
insl
xor
or
pop
cmp
inc
test
mov
jmp
mov
je
insb
mov
sub
or
rorl
sbb
out
mov
adc
push
test
lret
mov
stos
adc
into
arpl
cmp
cli
inc
push
lods
aam
pop
mov
les
popf
into
mov
sbb
mov
push
int3
sarb
cmp
sub
in
hlt
xchg
xor
lods
hlt
inc
fiadds
lahf
movsl
repnz
aad
push
jb
cmc
sbb
out
pop
lea
push
jg
test
stos
or
and
rorl
jmp
xchg
add
xchg
sbb
cli
inc
movsb
xchg
repz
and
cmp
sub
push
xor
fwait
xchg
pop
cmp
push
add
push
sbb
push
jge
mov
add
mov
jb
imul
push
push
ds
in
and
mov
mov
mov
push
ljmp
push
xchg
xor
jno
rolb
mov
pop
push
imul
sbb
pop
les
push
push
sahf
jb
or
outsl
fwait
out
out
scas
xor
lahf
fcomps
call
in
mov
push
sbb
inc
push
das
cltd
mov
and
or
in
cmovnp
push
lods
push
nop
fstpt
mov
mov
jle
inc
imull
pop
idivb
mov
pop
push
pushf
xor
adcb
std
mov
push
cmpsb
movsl
adc
dec
sbb
imul
pop
cmc
mov
rolb
xchg
cmp
inc
push
sbb
push
cmp
cltd
test
scas
sub
out
in
sbb
loopne
jne
adc
es
sbb
fs
hlt
adc
out
or
in
cmc
insl
sbb
pop
aaa
fsub
sub
gs
insb
dec
mov
cmp
push
xor
imul
push
mov
bound
push
cli
xor
nop
push
cmpb
out
adc
mov
pushf
mov
jg
fdivl
test
inc
imul
mov
push
shrb
jl
ret
mov
jb
push
push
cmp
cli
out
jns
push
lea
and
jbe
sub
cld
out
pop
lahf
adc
shlb
outsl
std
in
aam
lods
jbe
xchg
jno
mov
xor
minps
jp
imul
xchg
or
add
pop
mov
lods
mov
pcmpgtw
clc
insb
mov
mov
pop
int3
notl
fnstenv
dec
ljmp
adcb
icebp
pop
push
xchg
and
test
add
lahf
adc
inc
repnz
or
pextrw
xchg
push
fbstp
lods
aas
lcall
inc
fsubs
stos
subb
insl
stos
insb
and
push
mov
lret
arpl
jnp
push
leave
jl
inc
loop
mov
sahf
add
and
cld
fst
es
scas
loope
ss
mov
rcrb
fldt
in
sbb
sti
fnsave
inc
cmp
jp
mov
movsb
dec
cmpb
inc
cmpsb
sub
mov
stos
xlat
into
jns
jbe
cld
shrb
fcomps
sub
sar
ret
push
xorl
ffree
popf
add
outsl
ret
or
jns
add
adc
dec
push
icebp
sub
insb
ds
enter
adc
ss
int
adc
inc
xchg
pop
mov
xchg
xor
push
ss
adc
fstl
mov
movsb
enter
mov
xchg
cmpsb
mov
xchg
mov
hlt
or
js
push
lods
adc
mov
sub
outsl
xor
dec
arpl
cmp
sbb
mov
lret
mov
ret
out
fimuls
cld
push
pop
jnp
dec
mov
push
dec
xor
ljmp
cmc
jle
ljmp
mov
mov
call
inc
add
jo
jbe
push
inc
lret
dec
in
gs
loop
loope
xlat
clc
push
lods
cmpsl
push
push
shl
dec
bound
or
add
xor
push
pop
cwtl
iret
xor
dec
fucomi
xor
sahf
or
pushf
xor
ret
cli
lret
out
mov
test
out
aam
fdivs
mov
sub
push
dec
ja
roll
fnstsw
out
mov
ds
pop
xor
fdivl
es
or
mov
clc
test
pop
icebp
and
and
mov
mov
jle
xchg
movsl
and
xor
add
out
stos
inc
jno
andl
mov
xchg
jns
dec
stos
negb
dec
out
inc
mov
cli
mov
sahf
jo
jl
lods
cmc
lods
dec
xorl
das
neg
sbb
cld
add
push
ja
movsb
movsb
inc
jl
mov
mov
pop
or
test
adc
xchg
aas
mov
iret
dec
js
mov
inc
inc
ja
push
lock
inc
xor
mov
cltd
nop
mov
loopne
negl
gs
roll
push
sbb
stos
mov
mov
adc
add
push
ljmp
lret
insb
std
mov
xor
cwtl
repnz
xchg
xchg
add
or
das
mov
add
push
sarl
lcall
enter
scas
cmpsb
cmp
scas
test
mov
into
push
inc
xchg
nop
stc
pop
out
mov
icebp
cmc
sub
loope
pushf
push
adc
sti
mov
cld
sub
fistl
adc
popf
and
andb
sub
imul
lret
setns
mov
emms
jp
bound
and
clc
enter
lahf
sbb
push
insl
xchg
mov
sub
dec
add
loope
add
movsl
or
stos
sbbb
cmc
test
cmp
sahf
in
jae
dec
decl
mov
out
sub
or
in
aam
jmp
aam
stos
lock
ficompl
push
loopne
test
and
imul
fidivs
inc
jb
push
ffree
xlat
js
jb
insb
mov
or
dec
idivl
sahf
mov
aas
mov
incb
ret
mov
add
hlt
and
xchg
mov
add
loope
ss
mov
ja
mov
inc
sbbb
stc
test
sub
mov
lcall
mov
icebp
imul
adc
in
push
in
pop
adc
rorb
sub
addl
pop
dec
push
sbb
xchg
pop
out
jae
mov
nop
xor
or
clc
pop
in
pop
adc
xchg
pop
jae
aad
cmpsl
and
jnp
jo
and
mov
mov
sbb
in
mov
pop
lods
iret
jno
sbb
in
mov
or
push
test
adc
adc
mov
test
mov
js
sbb
jno
mov
inc
or
push
mov
incl
mov
push
adc
in
mov
inc
int3
je
mov
ja
xor
pop
das
addr16
push
or
mov
fimull
mov
jnp
js
lahf
cs
add
cmp
fstpl
loopne
sbb
cmp
insl
mov
push
sbb
cltd
xor
das
push
cld
push
xlat
ret
jae
inc
lock
call
and
sbb
dec
pop
xchg
loope
addl
mov
cld
mov
pop
cmp
or
std
leave
pop
or
flds
sahf
or
int
jae
je
xor
cmp
ror
and
test
mov
mov
iret
jbe
dec
addr16
and
pop
mov
push
dec
or
inc
jne
or
cmp
jb
mov
fcompl
dec
push
cmp
fildl
mov
mov
mov
out
pop
stos
inc
mov
lcall
data16
inc
sub
aad
stos
cli
add
xor
adc
inc
inc
testl
je
inc
fs
push
mov
sbb
sar
pop
jne
mov
jle
fwait
test
daa
or
adc
jmp
inc
fistpl
lcall
shrl
or
dec
fwait
loopne,pt
shll
pop
mov
cmc
rcrl
cltd
push
shl
push
hlt
mov
jecxz
mov
inc
leave
dec
dec
xor
adc
mov
out
push
inc
decb
lret
dec
mov
add
inc
bound
xchg
cmp
dec
in
sarl
ds
jae
arpl
sti
jp
mov
aad
sbb
sbb
lds
mov
inc
cwtl
test
mov
ret
sub
aas
popa
repnz
sbb
adc
ret
pop
xchg
xor
push
adc
mov
ret
pop
popa
mov
fisttpll
or
jae
aas
inc
mov
mov
cmp
inc
fwait
jb
stos
call
sub
jb
xlat
popf
sbb
ret
das
test
jg
mov
inc
shll
adc
or
xchg
mov
and
scas
xchg
repnz
roll
sbb
mov
cmp
hlt
mov
xchg
dec
int3
sub
fsubs
sti
test
jl
xchg
push
jne
cmp
lock
push
fs
xlat
mov
mov
or
movsb
fsubrl
adc
add
mov
or
mov
ja
inc
mov
call
push
sbb
push
mov
rcl
sub
pop
mov
xchg
mov
test
xchg
and
push
push
xor
lds
push
cmp
lods
inc
ja
pop
jne
adc
jmp
or
dec
lea
stc
jecxz
mov
sub
mov
movsl
insb
pop
mov
scas
jle
in
pushf
and
jb
jl
mov
xchg
or
mov
add
jg
fsubs
fs
sti
insb
ret
mov
sbb
push
cmp
add
jmp
call
mov
inc
repnz
addb
mov
fdivl
jge
imul
gs
data16
mov
inc
xor
xor
lahf
mov
call
rol
or
mov
mov
sbb
lahf
push
movsl
dec
adc
stos
inc
rcpps
dec
lea
cmp
loope
loopne
in
in
mov
mov
stc
ret
jb
mov
ja
repz
adc
adc
cmp
push
adc
xchg
adc
cmp
aad
dec
mov
rorb
sarb
stos
movsl
mov
and
and
arpl
jmp
test
jne
lods
mov
inc
inc
mov
inc
fbld
test
lea
sbb
add
dec
in
cld
js
xor
lcall
jns
pusha
dec
jge
icebp
stos
shll
jno
dec
out
or
stos
test
in
loope
inc
out
shrl
lds
testb
mov
pop
incb
daa
insb
loope
js
shlb
mov
insl
dec
xchg
mov
and
mov
scas
adc
push
insl
pop
add
push
je
jae
xchg
and
dec
push
adc
out
xchg
push
pop
mov
stos
es
aas
cmpsl
push
and
mov
adc
push
mov
lds
xchg
mov
dec
push
sbb
movsb
ss
lock
mov
xchg
orb
out
shl
adc
punpckhbw
leave
movsb
cmc
mov
xor
incb
imul
cmc
mov
ret
push
xor
adc
fisubs
sub
pop
and
xchg
mov
pop
fstps
and
out
xchg
xchg
and
fsts
outsl
fwait
push
in
divl
loop
xchg
cmpsl
mov
xor
jecxz
jl
mov
fimuls
push
outsb
loopne
fistps
dec
inc
fmull
add
and
hlt
xchg
jno
pop
bnd
jge
add
jge
imul
and
jp
sarb
add
and
add
cmpsl
inc
jno
orb
cltd
xor
test
cmp
inc
mov
jmp
fadds
cmp
in
sbb
mov
sub
adc
and
popa
out
hlt
mov
ret
stos
ret
scas
mov
sbb
mov
in
add
es
incl
sbb
loope
fisubs
mov
jmp
xchg
movw
xchg
imul
or
mov
mov
and
cmp
test
add
jl
fcoml
mov
jne
fildl
and
xor
and
addr16
xor
adc
mov
xchg
xor
sti
xchg
adc
imul
dec
push
shrb
out
outsl
mov
push
push
sub
call
sarb
or
bound
and
sub
into
call
scas
xchg
rorl
ret
sub
sbb
push
mov
pop
test
xor
inc
sbb
test
or
fcmovnbe
movsb
leave
mov
mov
es
lods
lock
xor
cmp
fistl
outsl
lret
repnz
pop
xchg
in
gs
and
inc
adc
or
dec
and
jae
inc
aam
jg
mov
push
cmc
xchg
sahf
mov
aam
jp
xadd
inc
jns
and
mov
inc
xchg
dec
fmull
mov
xorl
jo
jg
jmp
and
mov
and
cmpsl
and
testl
add
mov
test
xorb
std
mov
mov
mov
sub
cli
dec
in
mov
pushf
dec
mov
leave
cli
lock
or
test
or
adc
clc
movsl
imul
jle
popw
push
clc
aam
xchg
das
or
cltd
sub
cld
dec
and
repnz
xchg
xchg
stc
cmpsl
xlat
mov
les
in
stos
cltd
orl
dec
or
incb
jp
cmp
add
cmp
xor
mov
xor
jne
ja
xor
mov
adc
adc
pop
inc
in
iret
or
xor
outsb
mov
outsb
fldenv
and
ret
mov
jns
adc
aaa
nop
sub
mov
sbb
push
mov
jnp
jle
das
mov
push
sbb
pusha
jge
jo
enter
jo
xchg
mov
popf
dec
or
add
pop
and
jnp
inc
cmp
sbb
and
mov
and
lahf
inc
adc
push
or
call
int
cli
insb
add
sti
fs
pop
aaa
or
push
lods
aad
jbe
adc
es
cmpsl
cmpsb
scas
fsubrs
sbb
mov
mov
arpl
sbb
out
add
imul
pop
cs
data16
dec
add
ret
addr16
adc
mov
lds
leave
leave
dec
and
popf
stos
addr16
cmpsl
sub
mov
roll
and
popa
fs
clc
aam
ljmp
add
outsl
inc
hlt
jns
cltd
dec
and
jg
push
imul
clc
push
or
inc
dec
fnsave
cmp
push
sbb
inc
add
sti
mov
dec
lea
pop
sbb
push
adc
pop
jno
jp
pop
nop
jbe
or
sbb
ljmp
ds
aad
pop
pop
loope
aas
xor
pop
dec
dec
xchg
adc
shl
add
cli
dec
add
jb
xor
test
loopne
andl
shlb
and
jmp
rorl
hlt
cmpsb
je
jns
mov
pop
adc
push
outsb
xor
sub
mov
icebp
jp
xchg
nopl
push
mov
cmp
cmp
inc
adc
sti
mov
pushf
mov
add
dec
ljmp
hlt
int3
mov
aad
pop
lods
lret
mov
setno
outsl
add
mov
and
pusha
movb
pop
push
jl
adc
cld
cli
jbe
sbb
clc
leave
popa
dec
leave
mov
cmp
mov
repnz
inc
pop
aam
mov
xor
rol
cmp
jns
fwait
stos
fimull
into
cmp
fs
mov
dec
and
push
pop
fdivs
inc
pop
cs
cmp
lret
push
cmpsl
mov
adc
cmpsl
test
out
adc
mov
pusha
dec
out
or
sbb
jnp
in
mov
insb
vmulsd
sub
pop
out
xor
xchg
mov
pop
and
jns
lret
test
or
dec
je
in
imul
adc
push
or
adc
mov
mov
adc
lea
push
push
imul
stos
and
sahf
push
movsl
nop
adc
push
mov
sub
gs
push
or
aaa
int3
aas
mov
adc
and
add
stos
inc
sub
cmp
aad
fs
xchg
scas
push
ret
mov
xchg
mov
mov
sbb
pop
push
mov
std
xchg
rcrl
push
inc
cmp
push
pop
adc
fsubrs
xchg
aam
adc
dec
add
iret
pop
xor
sti
les
test
fcomps
imul
xchg
cmp
dec
mov
inc
adc
cmp
imulb
int
pop
or
mov
push
fsts
sub
repnz
mov
dec
in
push
add
push
cmp
outsl
pop
mov
popa
push
les
push
add
push
dec
mov
mov
aam
shl
mov
jle
push
jecxz
xor
push
mov
outsb
jle
out
popa
dec
add
sti
loop
push
push
shl
js
std
inc
outsl
mov
cmpsb
xor
mov
jl
mov
adc
and
fistpl
mov
add
mov
jae
js
fldcw
mov
fs
pop
les
lods
inc
popw
and
push
imull
adc
bound
pop
mov
decb
das
add
adc
adc
push
sbb
mov
ljmp
and
push
es
cmpsl
out
and
pop
loop
dec
cmp
push
fists
mov
lret
mov
add
out
mov
ja
loopne
push
mov
ljmp
jno
ds
pop
out
cmp
int
and
push
lahf
std
mov
test
jp
jg
or
cmp
lret
movsb
test
repz
jp,pt
out
sbb
mov
cmp
out
add
cltd
enter
inc
je
insb
jbe
mov
push
negl
push
rorb
es
xor
repnz
mov
in
pop
imul
xor
lahf
push
add
mov
xchg
cmp
incl
rcrl
inc
data16
psubw
mov
sti
push
fs
add
dec
add
pop
ljmp
push
mov
and
cmovg
mov
dec
daa
popf
xor
push
insl
outsl
daa
xor
jb
lcall
cmp
sbb
cld
sbb
inc
pop
dec
int
jnp
fidivrs
repz
jmp
roll
inc
push
test
add
jno
test
fcmovnbe
jl
mov
inc
outsl
mov
pop
mov
aad
add
imul
xor
scas
aaa
popa
push
insl
sub
fdivrp
add
int
lret
fsubl
int3
rorb
add
icebp
and
out
loopne,pt
sti
jge
cmpsl
sahf
sarl
mov
icebp
jmp
popf
dec
mov
sti
xor
loopne
push
cmp
fwait
mov
sub
pop
dec
or
xor
test
pop
scas
jl
rolb
sbb
lret
mov
jbe
cmp
cmp
push
aam
and
jne
ds
adc
push
adc
sbb
andl
and
pushf
jle
pop
call
pop
cmp
dec
push
jae
inc
out
push
out
push
loopne
sub
aam
cmp
ljmp
jecxz
lcall
jecxz
test
add
lock
xor
sub
jecxz
fsubs
dec
test
pop
mov
inc
mov
pop
stos
shr
movsb
stos
pop
jmp
jecxz
cld
arpl
call
fstp
loop
testb
mov
leave
mov
pusha
addr16
loop
int3
xchg
jl
ljmp
scas
mov
dec
stos
sbb
in
sti
leave
mov
arpl
jmp
sbb
cld
sarb
fbstp
push
fsub
adc
das
mov
sarl
insb
in
pop
and
mov
mov
rol
dec
mov
sub
lock
push
add
int
imul
movsl
ficoms
pop
lret
jns
sbb
or
fisubrl
push
mov
adc
cmpsl
out
imul
in
pop
inc
push
lods
stc
fmull
and
addl
dec
xor
push
sbb
mov
pop
test
lds
or
and
pop
out
clc
cltd
pushf
mov
subl
sbb
in
xchg
rcrb
pop
pop
xchg
outsb
shrl
mov
negl
test
and
out
or
popa
ss
sub
les
push
push
or
adc
out
sbb
push
adc
mov
scas
je
pop
cmpb
ficoml
iret
sbb
push
pushf
cmp
cwtl
dec
insl
mov
popa
inc
adcb
dec
and
aaa
in
dec
lcall
push
ljmp
test
push
adc
adc
in
cld
insl
inc
rorb
push
das
dec
lret
xor
stos
cli
and
jle
mov
mov
dec
mov
inc
jg
mov
pop
jae
xchg
mov
push
je
push
lds
aas
subb
inc
in
fsubp
add
lret
or
mov
int
pushf
xor
inc
fdivrs
pop
sub
icebp
je
push
aad
push
cmpsl
sbb
lcall
insb
daa
pop
ds
jge
jle
cmp
frstor
out
scas
aaa
testl
test
or
clc
xchg
xor
xchg
mov
cwtl
loop
icebp
cmp
outsb
jecxz
in
push
or
inc
in
add
addl
sub
daa
fbld
dec
and
inc
testl
lods
into
les
rolb
jae
push
mov
xor
outsb
stos
adc
add
mov
cmp
pushf
adc
and
jae
inc
jp
in
xchg
arpl
out
sar
add
in
sbb
sub
mov
push
pop
mov
dec
fists
xchg
repnz
inc
fwait
aas
add
movsbl
les
inc
popf
sub
mov
pop
outsl
rcll
push
outsl
push
sbb
arpl
jle
push
cmp
push
mov
inc
lea
mov
adc
fisubs
ljmp
pop
add
lahf
stos
imul
in
hlt
add
jo
lock
xchg
push
sbb
pop
pop
fwait
mov
out
pushf
inc
sub
mov
xchg
movsb
push
xlat
mov
pop
sub
pop
mov
aad
dec
in
mov
sub
lock
fwait
movsl
xchg
or
aas
inc
sub
popa
dec
fcoml
mov
adc
cli
pop
mov
xchg
stos
or
in
cltd
xchg
sahf
xlat
outsb
fmul
pop
mov
imul
lahf
jge
pop
xchg
push
int
ud1
pop
in
orl
cmp
sub
das
popa
ljmp
arpl
or
loop
jmp
or
mov
dec
cmpl
not
rcll
data16
xchg
fidivs
xlat
mov
sub
pop
xor
inc
lcall
xchg
mov
fisttpll
sub
sub
call
mov
ljmp
stos
cmp
fisubl
sbb
out
cltd
icebp
fimuls
pop
sahf
loope
imul
jbe
and
and
add
int3
inc
popa
popa
outsl
mov
rcrb
in
mov
xchg
dec
imul
imul
or
xchg
jmp
jo
mov
mov
push
and
scas
in
jbe
inc
popf
jge
gs
push
pushf
xor
cmp
cmpl
cmp
sub
push
not
test
adc
addr16
adc
fists
add
push
sbb
mov
call
or
cmp
cmp
sti
and
pop
loopne
das
incl
outsb
xchg
jns
cmp
mov
dec
inc
ja
idivl
repz
stc
dec
adc
scas
pop
adc
popf
arpl
decb
sbb
inc
mov
dec
add
ja
push
dec
dec
add
ret
mov
inc
mov
sbb
clc
imul
sbb
push
sahf
mov
and
fidivrs
add
jecxz
lahf
push
push
mov
pop
cmp
outsl
mov
cmpl
jge
or
push
daa
pop
nop
xchg
jb
pop
xlat
cmp
hlt
fnsave
jmp
std
subb
iret
dec
ja
dec
outsl
popa
push
gs
pop
aaa
jge
iret
out
out
jecxz
popa
movsb
cmpsb
outsb
push
fnstenv
xlat
add
push
sub
ficomps
jl
or
pop
daa
lds
scas
mov
rolb
pop
mov
lods
js
add
aam
repnz
pop
xor
js
outsb
leave
add
into
js
dec
adc
les
jg
shlb
loope
sub
dec
fcoml
jp
or
orb
pop
dec
stos
xchg
xchg
and
pop
cmp
ja
xor
sbb
out
xchg
push
stos
cmpsb
pop
leave
mov
call
movsl
jge
add
jae
xor
adc
sahf
mov
mov
test
js
hlt
stos
mov
js
fs
adcl
sbb
in
inc
mov
sarb
fiadds
neg
aad
adc
scas
imul
cli
cmp
pop
dec
pop
jae
xor
pushf
roll
sbb
nop
sub
lea
xlat
and
push
in
cmp
int3
dec
mov
adc
roll
inc
lret
jle
or
and
push
iret
cmp
mov
jb
cmp
cmp
mov
jo
xchg
jl
stc
pop
jae
inc
cltd
fimuls
inc
sub
shll
jb
into
cmp
sbb
aad
pop
pop
push
repz
test
pop
es
lahf
or
lret
out
arpl
sbb
jge
icebp
pop
jae
jns
data16
and
fisttps
mov
sbb
sar
int3
push
sahf
mov
lock
push
rcrb
or
mov
mov
leave
mov
xchg
pop
xchg
pop
mov
xor
mov
jge
mov
out
cwtl
jmp
push
add
mov
mov
shlb
mov
jne
fmuls
repnz
or
sbb
xor
sahf
scas
dec
cmp
pop
jp
fs
mov
push
or
ja
jbe
ret
xor
clc
pop
cmc
out
xorb
xor
shll
add
jl
pusha
or
or
cmp
jmp
insl
jne
push
movsl
aas
cmp
shrl
fcomps
out
jae
dec
nop
mov
push
mov
mov
mov
push
sub
push
mov
cmp
notl
notb
add
adc
lock
repz
icebp
sahf
inc
arpl
mov
push
mov
out
cli
push
dec
mov
out
or
xchg
mov
push
jl
adc
out
fucomi
inc
std
jbe
cld
pop
pop
imul
push
ss
insb
jle
sahf
push
popf
xchg
xor
jge
pop
daa
or
mov
test
add
cld
pop
push
in
mov
lods
add
imul
test
lods
sub
ret
in
sub
out
fwait
jge
sub
ret
cmpsl
or
or
dec
cmp
lret
int
rorb
mov
fdivs
rcrb
ljmp
push
jecxz
add
mov
imul
in
pusha
mov
stos
mov
add
cmc
movsl
jae
cmpsb
lahf
xor
hlt
enter
cld
adc
popf
mov
jge
push
mov
jb
scas
cld
in
pop
int3
pop
je
lcall
popf
fsubl
push
aaa
lret
dec
fwait
xor
bound
nop
xchg
int
imul
jle
shll
inc
cmp
inc
mov
inc
cli
addr16
fmull
add
dec
cmp
mov
pusha
sbb
pushf
addb
sub
add
xchg
out
divl
fsubp
push
fs
xor
imul
mov
xor
insl
sbb
push
test
mov
das
cld
inc
int3
mov
nop
mov
lcall
push
enter
or
inc
push
outsb
aam
pop
int3
lds
inc
enter
pcmpeqd
hlt
repnz
pusha
inc
movsl
orb
dec
imul
jle
cmpsl
lods
inc
mov
inc
hlt
fstpt
fcmovu
arpl
ljmp
out
shll
mov
into
mov
mov
dec
xlat
leave
inc
cmpsl
negb
mov
pusha
aaa
sbb
pop
cmp
mov
icebp
adc
and
mov
pop
mov
dec
cmp
xlat
cmp
jae
mov
mov
jmp
pop
aaa
mov
popf
xchg
mov
push
sbb
hlt
mov
xchg
add
xor
add
cs
mov
ret
scas
mov
mov
adc
shll
ljmp
sub
sbb
pop
pop
xchg
into
je
jbe
xchg
or
push
out
lret
inc
inc
sub
repz
sti
mov
or
xchg
cmpl
out
inc
fstps
inc
jge
cmp
outsl
test
sub
ss
jle
add
xchg
mov
xchg
mov
or
xchg
mov
ds
mov
mov
jmp
inc
pop
push
nop
pop
inc
xchg
cmp
lods
std
shll
xchg
cli
in
cmpl
pop
mov
out
loop
int
out
mul
ss
scas
pop
adc
xor
mov
stos
cmp
cmovnp
gs
adc
lock
dec
fwait
rclb
mov
lret
ror
sub
mov
icebp
rclb
cmp
pop
sbb
xchg
aam
mov
fmuls
das
jmp
sub
arpl
int3
repnz
xor
lret
or
arpl
sbb
push
add
xlat
arpl
dec
in
insb
fwait
outsb
js
sub
xor
arpl
jnp
in
cwtl
xlat
adc
int3
mov
dec
pusha
push
sub
pop
les
rcrl
push
mov
movsb
sub
daa
jmp
inc
push
sbb
repnz
lock
adc
movsb
dec
or
cmp
xchg
rcll
gs
cmpsl
out
inc
xor
jno
and
out
dec
pop
repz
sti
stc
popf
push
ficomps
ret
inc
jo
push
mov
das
jl
jmp
stc
fwait
sti
cmc
es
fisttps
fwait
xchg
jmp
cmpsl
movsl
add
or
jge
les
cmp
hlt
mov
addl
std
dec
sti
pop
call
aas
es
cli
popf
cmp
sbb
in
lret
mov
push
jp
xlat
jmp
cwtl
add
sub
in
pop
es
lea
insl
stos
add
jge
mov
pop
test
mov
pushf
mov
dec
cmp
sub
fmuls
dec
jo
or
and
or
popf
xchg
out
push
inc
idivb
ds
ret
mulb
imul
mov
xchg
jo
repz
xchg
leave
lret
je
mov
fwait
push
outsl
mov
push
in
and
lds
or
dec
xchg
aaa
aad
adc
or
push
pop
testl
inc
sub
cmp
cmc
shr
daa
mov
outsb
mov
dec
cwtl
xchg
test
sti
pushf
jp
icebp
outsb
and
rcr
or
sbb
jmp
push
pop
stos
repnz
lods
mov
in
inc
xchg
sub
xor
daa
aas
push
inc
es
add
lahf
popf
inc
insl
pop
imul
xor
mov
sub
iret
pop
aam
leave
in
xor
out
and
stc
aas
shrb
loopne
xor
fistpll
insb
pop
xor
or
loopne
or
or
mov
dec
aaa
iret
std
push
push
or
jge
arpl
xchg
mov
xchg
cld
pop
lods
aaa
arpl
jo
rcrl
lock
push
jg
fcmovne
clc
int
xlat
and
lock
inc
xchg
jg
lock
sbb
and
mov
sbb
xlat
xchg
shll
sahf
lret
lds
inc
jp
jnp
pop
xor
adc
adc
mov
push
jmp
mov
out
je
roll
push
mov
incl
test
ret
jbe
push
mov
and
sbb
xchg
pop
push
fistps
outsl
out
int
mov
push
ja
sbb
out
gs
out
xchg
push
cmpsl
lret
adc
shlb
ret
xchg
push
aam
fisttps
divl
push
sbb
std
and
push
mov
stc
pop
popa
push
lods
cmpl
mov
jae
out
in
xor
or
jns
subl
fwait
mov
cmp
push
mov
push
cs
dec
sbb
add
or
xor
xor
shlb
xchg
cs
bound
sub
xchg
jge
outsb
and
add
sbb
scas
pusha
cli
stos
insl
fsubl
mov
cmpsl
imul
adc
insb
cmp
mov
mov
bound
push
mov
fcomi
movsl
xor
fsub
mov
cmp
cmp
mov
xor
mov
mov
adc
mov
mov
cmp
pushf
es
test
inc
xor
jb
lock
jge
cmpsb
gs
push
mov
adc
sub
and
ss
pop
ds
popf
or
adcl
and
mov
out
lods
sbb
mov
jl
jl
gs
adc
jecxz
pusha
scas
pop
dec
push
push
adc
insb
out
je
mov
nop
aaa
ljmp
cmpl
adc
addl
dec
cmc
inc
enter
xlat
xchg
sti
mov
xchg
outsb
jae
test
les
push
ds
ss
add
xor
mov
daa
icebp
inc
jle
mov
lea
cmpsb
fwait
ret
in
repnz
lahf
das
add
lds
hlt
cltd
inc
adcl
outsb
icebp
mov
inc
faddp
add
push
lods
add
or
dec
dec
push
dec
data16
fiadds
int
mov
lret
pop
ja
fwait
lea
nop
mov
movsl
aam
sbb
imul
in
inc
mov
push
loopne
mov
jb
add
pop
adc
mov
pop
adc
dec
jb
and
add
pop
xchg
dec
push
lahf
push
pop
cwtl
adc
enter
or
sbb
movsl
xlat
addr16
popf
fdiv
test
inc
sub
jg
push
jl
sti
and
imul
mov
out
mov
xchg
pop
imul
pusha
or
test
roll
iret
xchg
test
xor
je
push
xchg
sbb
sbb
sub
sbb
clc
enter
mov
test
sbb
outsl
sahf
int
jnp
push
mov
dec
xor
mov
dec
xlat
mov
ret
sti
xchg
pop
cli
push
adcb
retw
sbb
xchg
imul
mov
pushf
stos
jmp
std
les
cli
sar
ret
fcmovnb
or
jbe
movsl
jb
shl
cmc
scas
lds
adc
mov
out
pop
pop
add
add
faddl
cmc
cmc
cmp
loop
scas
and
in
negl
jae
cmp
shll
adc
ja
lock
cmp
xor
stos
sub
cmp
add
mov
mov
pop
pop
sahf
movb
jmp
sti
test
and
xchg
xchg
jno
stc
sbb
push
std
adc
into
jecxz,pn
scas
rcl
fisttps
movl
push
mov
aaa
jmp
shlb
inc
add
add
adc
inc
pusha
out
sbb
mov
in
test
xchg
loope
int3
lret
ficoml
sub
ret
loopne
pop
int
popa
jne
dec
sub
push
arpl
lret
push
mov
das
test
mov
push
int3
shll
xchg
loopne
sub
push
sbb
mov
lret
mov
sbb
or
push
in
es
inc
push
lahf
fwait
popa
rol
adc
jne
into
paddusb
notl
push
pop
jne
mov
fistpll
into
jo
repnz
pop
dec
movsl
jmp
inc
pusha
mov
add
adc
mov
mov
cmp
dec
rcll
ljmp
aas
inc
or
add
add
or
jecxz
mov
cwtl
lods
add
ret
in
les
jae
mov
xchg
insl
cld
pop
ljmp
xor
adc
out
dec
aad
int
pop
movsl
dec
imul
ret
or
lea
lods
sbb
pop
int3
aaa
mov
push
sub
cmp
movsb
stos
in
jg
test
fwait
int
push
lret
and
pop
int3
push
dec
dec
or
and
js
push
dec
jnp
mov
orb
adc
jnp
dec
inc
inc
cmp
mov
inc
jbe
add
aam
sub
mov
xor
mov
stc
js
push
cs
push
insl
jle
imul
mov
mov
xor
ljmp
push
or
stos
lret
push
sub
mov
lret
daa
push
and
and
pop
test
or
in
int
pusha
dec
jnp
insb
sbb
into
cmp
dec
sub
mov
push
ja
cli
xchg
das
xor
sub
fwait
subl
cld
pop
fadd
adc
pushf
into
fwait
jno
out
cwtl
dec
push
jge
js
mov
aaa
add
aaa
cwtl
fisubrs
adc
ljmp
xchg
jp
das
std
lds
test
push
xorl
in
xor
inc
adc
rcrl
xor
mov
stc
mov
hlt
mov
pop
stc
mov
add
loopne
aas
jp
mov
lea
push
shll
pop
into
add
inc
lds
mov
or
lock
xchg
fcmovnb
xlat
jp
notl
inc
jle
jp
inc
mov
lock
xchg
mov
mov
adc
outsl
and
test
movsb
fmul
popa
adc
pushf
lret
push
pop
mov
sub
xchg
std
xchg
mov
popf
fdivr
mov
int
es
inc
fucom
push
and
add
mov
dec
mov
ret
mov
or
fistl
inc
out
divl
scas
xchg
stos
pop
xor
stc
pop
inc
sub
mov
xlat
xor
int
and
xor
repnz
dec
push
les
ja
imul
insl
push
pop
mov
xchg
mov
cs
in
ljmp
xor
and
hlt
loope
jnp
icebp
jno
rcr
lret
aad
icebp
cmp
jb
inc
pushf
int
add
and
mov
push
test
push
js
mov
cwtl
mov
test
pusha
cli
loopne
adc
jns
mov
gs
cmpsl
adc
mov
push
inc
lods
mov
fcmovb
mov
popf
mov
xor
imull
sbb
lcall
fnstsw
cmp
add
xor
cltd
fcomps
pusha
icebp
movsl
movsb
cli
lahf
dec
xchg
in
mov
pop
jns
pop
add
fwait
inc
adc
lock
lods
test
std
dec
adc
repnz
das
jge
inc
in
fdivrs
lock
mov
pop
dec
mov
mov
dec
dec
pusha
adc
sbb
jbe
sub
js
xchg
js
outsl
add
fbstp
dec
push
inc
lock
cmp
inc
xor
cs
sub
push
lock
mov
mov
adc
jnp
xchg
mov
movsl
scas
mov
sahf
int3
adc
pop
push
rorl
mov
cld
mov
sti
mov
push
xlat
sbb
hlt
outsl
aad
pop
push
cmp
mov
xchg
push
shrb
xchg
sbb
pop
mov
movsl
xchg
add
fdivp
push
xchg
outsl
cmp
pop
cmpl
cmc
cmpl
xor
and
pusha
pop
lahf
dec
xchg
jb
mov
mov
negb
popa
outsl
lahf
mov
jnp
fcoml
out
inc
clc
jnp
xchg
push
shrl
lock
scas
jp
pop
xlat
in
les
xchg
adc
push
mov
in
lcall
aam
mov
cmp
sbb
repz
lahf
stos
mov
inc
adc
test
movsb
push
aad
in
dec
stos
gs
lahf
ret
xchg
inc
cmp
cmpsl
xor
je
test
cmp
divl
pop
addr16
lea
fisttpll
inc
jne
mov
cmpsl
or
xchg
cld
out
jge
mov
mov
dec
xchg
or
mov
xor
mov
pop
mov
fcomps
mov
and
call
cwtl
cmpsl
loop
js
inc
inc
jg
lret
clc
pop
repz
sbb
cld
ds
mov
push
leave
test
icebp
push
mov
in
test
bnd
xor
mov
imull
mov
jnp
iret
ret
clc
test
jmp
ret
dec
pop
aam
stos
insl
fdivrs
int
dec
jg
popa
or
cmp
pop
in
mov
je
or
out
int3
outsl
fmulp
adc
scas
adc
pop
fwait
ja
lcall
pop
push
pushl
mov
sub
lods
sub
inc
xor
leave
pop
movsl
mov
and
adc
stos
mov
add
add
pop
daa
jecxz
add
xor
les
js
jle
outsb
ss
xchg
push
ja
call
and
pop
movsb
outsl
icebp
mov
sbb
lds
mov
jge
test
loopne
daa
cmp
imul
jbe
in
cmpsl
int3
punpckhwd
test
push
test
add
pop
jae
out
js
mov
mov
jmp
adc
cmp
das
gs
jg
mov
das
je
fldl
dec
ja
adc
in
loop
mull
push
mov
lret
rcll
sub
inc
outsb
mov
das
outsl
test
ret
xchg
mov
adc
mov
adc
je
lcall
lcall
sub
lahf
pushf
push
dec
outsl
sub
pop
ret
add
scas
aas
fs
adc
mov
cld
nop
shrb
andl
and
jmp
ljmp
frstor
add
lcall
or
pop
iret
and
dec
jns
inc
dec
pop
adc
mov
mov
insb
ljmp
and
jl
jmp
jnp
cmpsb
jns
mov
pop
sbb
aam
mov
cmpsb
pop
mov
cltd
jmp
push
xchg
aad
cwtl
pop
mov
or
pop
jge
adc
jp
pop
and
je
popa
push
cmp
adc
cld
clc
jo
mov
into
ljmp
ret
ljmp
dec
imul
int
sbb
mov
cmp
sub
andl
mov
ret
out
sub
stos
jo
sbb
pop
lds
mov
loopne
push
dec
dec
stos
xchg
popf
clc
stc
jmp
xchg
movsb
xor
in
shlb
lods
or
aas
jo
je
stos
jge
movsl
push
jmp
sub
jecxz
cmp
aas
out
leave
dec
xor
popa
add
bswap
movaps
xorl
mov
dec
mov
push
push
rclb
aas
mov
dec
push
add
xor
mov
insb
sub
lret
arpl
pop
jae
stos
dec
cltd
pushf
jle
js
jb
movnti
sbb
repnz
out
mov
ss
cmpl
xchg
push
pop
push
ljmp
sub
pop
xchg
add
lret
sub
rolb
sbb
in
mov
dec
cmc
add
dec
outsb
cmp
xor
fs
mov
xchg
ss
shrl
lcall
jne
cmpl
dec
pop
inc
fdivl
into
cltd
outsl
sahf
lret
test
fdivp
dec
mov
popa
das
orl
cwtl
dec
nop
ds
cltd
popf
int3
pusha
mov
pop
xchg
mov
insb
in
loopne
lds
mov
pop
test
movsb
je
out
stos
jge
mov
push
sbb
add
adc
repz
lods
xlat
push
jl
into
or
insb
or
or
mov
add
in
inc
dec
push
js
stc
cmc
sti
stos
out
push
clc
shll
scas
int3
lcall
push
dec
fnstcw
adc
push
inc
pop
out
lods
dec
mov
pop
push
push
repnz
fcmovnb
dec
jge
xchg
js
enter
sub
addr16
xor
xchg
fidivrs
in
sbb
movsl
enter
jns
adc
ss
and
cmpsb
cwtl
sysenter
sbb
dec
filds
lret
mov
xor
adc
and
cltd
movsl
jb
sbbl
mov
mov
mov
pop
or
mov
xlat
mov
inc
dec
popf
inc
and
scas
mov
outsl
scas
push
cli
cmp
fnstsw
xchg
lahf
cmpsb
sub
mov
inc
dec
incb
pop
arpl
sbb
mov
bound
popa
insl
xchg
jecxz
mov
xor
sub
push
mov
push
aaa
mov
inc
out
ljmp
out
adc
jle
mov
jne
inc
scas
add
inc
mov
push
jp
push
sti
jne
dec
push
daa
scas
lods
fmull
mov
clc
mov
rorl
test
ss
add
sbb
cs
jp
lahf
notl
andl
cli
add
xchg
sbb
scas
ja
add
sub
or
call
and
dec
adc
pop
leave
cmp
outsl
and
or
add
pop
roll
cmp
orb
sub
aas
mov
mov
stc
or
cmp
mov
mov
xor
pop
pop
int
es
in
or
jle
arpl
movsl
hlt
xor
or
add
cmpsb
sub
mov
mov
negb
stc
mov
adc
fwait
mov
jle
jp
sub
int
lret
inc
jb
inc
xchg
cmpsl
push
imul
notl
lea
shll
jno
ljmp
inc
faddl
pop
mov
mov
mov
dec
imul
int
mov
inc
fiadds
pop
test
rcrl
push
pop
loop
ret
mov
or
into
xor
adc
dec
fistpll
fldl
pop
sbb
adc
mov
cmp
jnp
out
jns
xor
mov
mov
mov
testl
inc
jmp
jmp
cmp
xchg
ss
push
push
shrl
and
idivb
lret
jg
movsb
jecxz
xor
in
mov
mov
lds
push
fwait
pop
mov
loopne
scas
sbb
fsubs
add
imul
movsb
add
movsl
test
cmp
fsubp
xchg
xchg
mov
sub
xor
sbb
and
lret
aam
xchg
xor
mov
stc
jbe,pn
sub
repnz
push
adc
mov
dec
mov
lret
inc
scas
mov
dec
loopne
xlat
or
insl
sarb
jg
ret
cld
sbbl
inc
adc
lret
or
ja
clc
add
pop
dec
jecxz
dec
pop
test
sti
sbb
mov
push
pop
xor
inc
ja
push
lahf
sti
outsb
jge
lret
insb
je
int
jae
xchg
insb
in
xchg
cmpsl
cmp
mov
ret
dec
mov
fmuls
decl
mov
into
push
ja
cmp
pop
push
cwtl
fldenv
push
xor
cmp
aam
dec
clc
add
adc
jo
push
clc
mov
nop
cmc
pop
std
cmp
dec
pop
les
fimull
dec
fsubl
cmp
mov
sbb
and
sub
or
add
sahf
bound
lea
outsl
repz
dec
xchg
or
mov
in
enter
pop
daa
test
out
dec
add
pop
xor
push
mov
cmp
insb
fdivrs
insl
ss
aaa
add
jp
xor
out
pop
xlat
or
scas
enter
pop
pop
mov
pop
xor
sbb
cmpsl
fwait
aad
cmc
inc
in
cmp
dec
push
ret
or
push
fwait
das
int
mov
sbb
sub
lea
stos
nop
call
dec
out
pop
divb
les
in
or
rolb
ja
loope
push
sub
xchg
or
lcall
cmp
xchg
mov
sub
es
sarl
lock
jmp
add
loope
pop
jne
fwait
mov
xchg
xor
mov
jle
enter
test
push
xchg
push
mov
dec
sahf
pop
outsb
mov
out
cmp
xchg
das
cwtl
les
stos
cmp
leave
jnp
call
pop
mov
adc
cmpsl
addl
push
push
imul
sbb
jl
out
mov
aam
js
sbb
adc
xchg
jae
rcrb
fcomp
cmp
sbb
loopne,pt
jle
jo
add
and
xor
jno
xchg
push
or
loope
scas
jge
ljmp
jecxz
fistl
ja
sbb
adc
lcall
adc
enter
outsb
ljmp
add
or
xor
and
push
adc
mov
sbb
jbe
lret
and
popa
cmp
xchg
xor
or
sub
dec
addb
inc
repnz
cs
inc
push
add
add
ss
pop
add
shll
dec
xchg
imul
sbb
aas
mov
lds
daa
ss
inc
in
lret
xor
push
nop
cltd
pop
mov
lea
cs
cmp
mov
cltd
incl
ss
int
and
push
outsl
outsl
and
sub
or
dec
mov
xchg
in
fimull
fdivrs
and
jp
mov
pop
addb
sar
aam
addr16
and
xor
or
leave
xchg
mov
jg
mov
cwtl
jl
sbb
sbbb
mov
jnp
rcrl
cmp
ja
jo
loope
or
es
and
mov
add
or
sahf
mov
iret
xlat
push
xchg
clc
in
cmp
or
rcr
fcmove
cmc
leave
push
mov
mov
rcrl
loope
lds
into
enter
repz
cld
jmp
shlb
mov
jns
cli
imul
pop
ret
mov
in
xchg
scas
loope
je
std
testb
push
cmpsl
jle
std
mov
imul
cmpsb
jmp
cld
orl
jo
mov
pop
inc
les
xchg
mov
xchg
lods
outsl
xchg
sbb
lret
mov
inc
test
cmpsb
push
mov
push
xorl
sbbb
addr16
ja
dec
or
mov
in
loope
and
and
mov
push
push
bound
adc
gs
xor
hlt
pusha
ret
dec
dec
jmp
mov
leave
cmpsb
xor
imul
mov
pop
dec
dec
fiaddl
mov
cltd
pop
in
mov
test
int
and
pop
xor
inc
bound
pop
cltd
add
pop
aam
into
pop
int
adc
adc
add
mov
xchg
adc
lds
jmp
sahf
cmp
cmp
cltd
add
pop
jg
jb
in
dec
sbb
mov
call
or
shrb
leave
cwtl
xchg
divl
stos
adc
stos
dec
mov
sbb
loop
xor
rcrb
mov
popa
pop
xchg
and
ds
mov
sub
sbb
out
jecxz
les
add
cltd
push
xor
jno
cmp
inc
sub
mov
jle
cli
fldl
rclb
daa
shrb
pop
xor
frstor
adc
nop
outsl
imul
dec
add
lea
cltd
lods
mov
mov
scas
fmuls
mov
mov
movsl
fwait
movsb
mov
mov
notl
jge
mov
shrl
xrstors
fcomps
test
lahf
inc
and
xchg
inc
outsb
cmp
mov
sbbb
sub
or
push
mov
sub
push
std
lods
out
lock
dec
shlb
orb
pop
loopne
mov
jbe
neg
es
add
xlat
insb
mov
mov
imul
mov
add
fs
ror
mov
cmp
jno
push
adc
push
jg
ja
mov
and
xor
test
pop
arpl
je
idivl
mov
inc
inc
fstp
int3
jle
out
sub
cld
movsb
leave
imul
sbb
jl
adc
clc
jge
lods
js
fistps
and
push
adc
mov
data16
or
ret
adc
or
imul
iret
ja
mov
clc
lret
push
add
cmpsb
mov
fistpl
test
aas
and
notl
std
cmp
loop
xchg
sub
mov
jecxz
or
ja
jb
push
sub
insl
das
xchg
aaa
insb
jle
inc
shll
mov
adc
pusha
lea
ja
jge
into
mov
fwait
dec
xchg
add
out
clc
sahf
mov
xchg
mov
std
mov
lods
aad
and
es
hlt
popl
or
mov
xchg
or
inc
sbb
loop
call
mov
ja
xchg
jg
pop
push
add
pop
jbe
pushf
xchg
loope
sbb
push
dec
cmp
dec
adc
jo
lods
data16
pop
leave
push
test
iret
shlb
je
loope
jns
sbb
ret
js
push
xchg
in
cmc
out
mov
call
mov
pop
notl
mov
pop
fiadds
jne
int
loop
notb
mov
enter
js
rorl
xor
mov
mov
lock
rcr
loopne
or
lods
sbb
leave
cmp
pop
xchg
and
lock
cli
fsubl
jecxz
int
dec
pop
sahf
pushf
ds
int
imul
mov
pusha
insl
sbb
cmc
fs
or
add
mov
cwtl
arpl
lds
jbe
aam
dec
add
lods
xlat
in
loope
and
icebp
xor
push
and
jb
xor
loop
hlt
stc
inc
mov
and
mov
and
test
enter
adc
sbb
dec
push
aad
in
sub
xor
fmull
addr16
xchg
shrb
jae
imul
sbb
sub
and
mov
mov
sub
insb
lea
push
jp
shlb
jnp
mov
mov
insl
in
mov
xchg
enter
push
in
lret
mov
rorl
mov
inc
fstps
orl
push
out
loope
call
sahf
movsb
out
into
inc
fs
mov
cmp
out
and
fsubrs
xchg
cmp
leave
lret
popf
in
movsl
add
push
fimuls
mov
xchg
push
test
in
fwait
outsl
stos
int3
add
xor
add
sarl
mov
fwait
stos
pop
pop
shll
jbe
push
and
hlt
mov
repz
jns
in
stos
adc
in
pop
inc
mov
mov
add
pop
and
adc
outsl
dec
adc
push
in
xor
popf
add
jbe
xor
fwait
inc
movsl
adc
and
add
jl
mov
mov
mov
dec
in
push
xchg
add
mov
fcmovnbe
aad
cmpsl
div
lods
test
mov
leave
out
loop
add
clc
mov
movsl
mov
sbb
cmpl
loop
es
test
xlat
jb
mov
lods
sub
xchg
xchg
fwait
and
push
cmovle
in
jno
roll
popa
cli
xor
insb
mov
fists
imul
movsb
outsb
sub
mov
cmp
hlt
mov
or
cmp
push
test
xchg
das
or
int3
or
insl
int
cmp
mov
popf
lahf
mov
cmovp
and
pop
addr16
or
insl
jmp
pop
mov
mov
push
mov
std
sub
pop
push
stos
cmp
iret
lret
pusha
mov
rcr
inc
inc
hlt
or
cmp
lds
fsub
push
cltd
repnz
lods
ss
cmpsl
dec
aad
push
push
xlat
fwait
rcrl
mov
fisubrl
add
and
push
pop
pop
jecxz
popf
add
stc
ja
popf
fs
std
push
sahf
jno
sbb
sbb
lock
loopne
sarb
loop
inc
ja
sbb
rclb
call
and
adc
roll
clc
andb
dec
push
sbb
xchg
nop
pop
subl
mov
insb
or
or
xchg
fiaddl
push
cmp
push
lcall
jecxz
pop
cs
fnsave
dec
push
adc
daa
inc
mov
inc
inc
or
or
or
and
outsb
mov
jmp
xchg
cmpsb
mov
sahf
rcll
cmp
xor
cmpb
jle
xor
add
sbb
retw
pop
sub
cmpsb
popa
add
sbb
dec
ficomps
fstps
mov
outsb
cld
push
jmp
xor
imul
mov
mov
pop
clc
jecxz
mov
and
jbe
sbb
out
pop
int
test
loope
jnp
cmpsb
enter
scas
mov
and
popa
pop
cmp
jae
jno
inc
ljmp
in
jl
cs
repz
pop
jo
fimull
and
int
and
ja
repnz
mov
mov
aaa
mov
pop
inc
lods
insb
xchg
xchg
mov
out
mov
jmp
mov
sbb
mov
pop
pop
cli
outsb
fnstsw
cmpsb
xlat
or
movsl
roll
mov
add
scas
xchg
mov
std
test
fcomps
cmp
addb
repnz
stos
sbb
adc
push
cltd
imul
mov
pop
xor
mov
insb
shlb
dec
das
ljmp
mov
cmpsl
sbb
xor
sub
pop
dec
push
in
xor
dec
and
scas
stc
lret
shll
out
cmp
sbb
jmp
lea
gs
mov
and
jns
test
pop
add
cli
cs
popf
or
sarb
cmp
call
mov
and
stos
adc
push
in
ss
or
jge
xchg
stos
mov
push
xchg
out
notb
mov
lret
dec
jae
fcoms
fnstenv
popf
cmpsl
orl
add
cmp
daa
sbb
pop
lret
pop
lret
xchg
pop
sahf
push
movsl
push
call
je
mov
fwait
pmaddwd
push
push
or
or
ficomps
push
adc
sub
nop
ret
in
ss
das
fstpl
stos
sahf
add
inc
pop
lods
insl
lock
pop
mov
sbb
into
arpl
lock
jp
pop
fistps
sub
push
mov
mov
shll
rorl
adc
xlat
push
push
mov
fadds
cld
and
fwait
js
xor
sub
test
lods
cltd
sbb
sbb
aad
ljmp
repz
inc
adc
test
inc
xor
es
and
pand
dec
and
sub
or
dec
and
xor
pop
in
cltd
cli
push
repnz
mov
jnp
xor
mov
vphsubdq
test
xchg
push
nop
push
int
aam
outsb
daa
ret
leave
cmp
enter
dec
pop
dec
mov
cmpb
das
mov
jmpw
xor
mov
inc
sub
jb
jne
aam
addl
stc
test
stc
cs
sets
bnd
je
subb
dec
mov
push
repnz
add
sub
leave
fidivl
stc
outsb
inc
mov
mov
out
jl
mov
daa
mov
je
fistpll
xchg
orb
dec
je
imull
insb
fwait
cmp
jmp
aad
adc
sti
fidivl
xchg
sbbb
sub
nop
ja
sbb
sbb
sti
aad
xor
cmpl
mov
popa
faddp
jae
aaa
outsl
jae
loop
or
xchg
mov
or
imul
das
cmc
and
sbb
xchg
xchg
mov
in
mov
mov
data16
mov
sti
gs
lods
add
cli
adc
cld
loopne
xorb
and
repnz
mov
fwait
pop
das
xor
mov
inc
ret
jmp
test
imulb
or
jle
sbb
mov
in
stc
scas
loop
mov
or
scas
xor
dec
sub
mov
mov
and
mov
push
adc
xchg
aaa
sbb
dec
inc
sub
scas
pop
orl
sbb
pop
mov
int
or
ss
xchg
cmp
pop
les
int3
jecxz
jge
movsl
div
adc
pop
and
xchg
test
pushf
pop
dec
mov
das
int3
ret
mov
pop
or
mov
test
cmp
add
push
fldt
aaa
add
leave
out
les
jecxz
mov
les
outsl
shlb
shll
or
xor
pop
in
decl
mov
jbe
pop
push
imul
lods
and
xchg
and
lea
mov
jb
add
pop
stc
es
cwtl
xchg
mov
or
cli
mov
mov
cmp
outsb
push
movsl
push
in
push
add
mov
stos
jns
cmp
pop
mov
hlt
aam
mov
push
mov
and
sti
test
scas
sub
mov
es
lret
mov
ficomps
dec
sbb
icebp
out
push
sub
pop
and
lods
dec
pop
xchg
es
bound
pop
push
sub
mov
nop
lahf
jl
ror
fwait
push
inc
mov
das
movsl
inc
in
push
and
in
pop
or
sbbl
fidivl
push
cmpsb
and
aas
repnz
sti
iret
fiaddl
dec
mov
inc
loopne
mov
sbb
and
mov
cld
xor
ljmp
sub
pop
arpl
jl
xchg
push
into
bound
clc
outsb
enter
push
aas
cmpsb
cli
dec
push
nop
cmp
inc
xor
push
xlat
out
adc
shll
cwtl
loop
je,pn
sub
aas
adc
lods
mov
pop
pop
outsl
ss
jns
ljmp
or
adc
lret
cmp
test
and
rorl
lcall
or
xor
adc
pop
push
insl
sub
loopne
or
stos
ds
mov
adc
lods
mov
sbb
scas
int
xor
sbb
pop
push
pop
das
cmp
ret
push
or
mov
push
rcrl
sub
incl
cmp
mov
aaa
mov
lahf
dec
jp
pushf
jl
xor
dec
mov
test
jmp
mov
adc
xchg
jo
xor
mov
fsubs
pop
jmp
xchg
shl
add
mov
sub
aaa
lret
mov
xchg
out
push
mov
mov
and
stc
pop
push
fidivs
fistpll
imul
into
mov
jecxz
dec
xchg
xchg
fld1
sub
dec
fs
shr
pusha
repz
out
subl
sub
push
cmp
adc
repz
mul
aas
push
rcrl
and
pop
cmp
xchg
inc
push
xchg
inc
fisubs
test
lret
sub
sti
ljmp
sahf
outsb
cs
and
pop
pop
add
arpl
sub
dec
test
adc
mov
lods
lock
test
in
lcall
xchg
test
into
into
out
push
dec
add
push
pop
inc
jno
jp
negl
mov
scas
cmp
cmp
sub
pmaxsw
scas
push
nop
das
std
pusha
push
push
movsl
sbb
stos
xchg
add
inc
dec
and
push
and
test
lods
inc
and
loopne
xchg
es
stos
push
xchg
inc
fs
jno
dec
jb
and
pop
xor
or
addr16
ljmp
lahf
add
std
and
adc
js
clc
or
mov
faddp
mov
roll
or
mov
nop
push
icebp
mov
das
scas
ja
mov
cmp
adc
xchg
cmp
icebp
xor
fiadds
out
cmc
mov
outsb
lret
fnstsw
movsb
inc
sub
jl
cmp
ljmp
mov
adc
inc
pop
adc
lock
paddd
adc
data16
xchg
mov
push
cmpsb
mov
lea
sbb
rcrb
rcrb
push
and
pushf
cs
iret
fcoml
cmp
push
in
bound
xchg
rcl
push
sti
xchg
inc
pop
cmp
popa
insb
dec
stc
movsb
iret
adc
movsb
data16
sub
add
ss
xchg
pushf
out
push
mov
movsl
ja
imul
js
sbb
adc
push
in
popa
ds
popa
cmpsb
out
loop
div
jne
xchg
call
rorb
xor
sti
pop
scas
pop
fcoms
cmp
mov
jle
and
push
addl
or
mov
adc
add
mov
outsb
push
jb
mov
dec
in
frstor
push
ja
fadds
ds
mov
mov
fidivs
sbb
mov
cmp
inc
mov
pop
inc
jne
repz
cmpsb
dec
pop
mov
idivb
xor
pop
xor
add
fists
nop
sbb
addr16
ficoml
xchg
cmc
push
fidivs
cs
and
mov
cmp
xlat
test
xor
sub
push
mov
lret
pop
sub
dec
shrl
test
push
mov
add
addr16
loopne
pushf
xchg
ja
cmpsl
inc
mov
cmc
xchg
sbb
dec
dec
fdivr
push
fs
pop
lret
mov
out
icebp
fwait
inc
inc
and
xor
stos
in
std
xchg
fdivs
insb
mov
leave
sub
add
lcall
xchg
xor
push
into
sbb
mull
loopne
in
inc
imul
mov
daa
push
das
push
call
mov
bnd
push
adcb
mov
mov
jle
ds
pop
push
jmp
popf
sarb
lcall
ret
mov
xchg
stc
lods
loope
push
loope
std
sub
test
loope
xchg
xchg
sbb
xor
lods
mov
cmovne
test
cmpsl
xor
jmp
andb
dec
jmp
jb
mull
in
cmpsl
sub
fcmove
sbb
push
xor
push
mov
leave
mov
popf
pop
je
inc
ja
jb
mov
adc
out
dec
mov
jmp
mov
cmp
xor
aad
pusha
inc
mov
jb
pop
push
nop
cli
xchg
and
push
mov
arpl
aas
cmpsb
incb
lock
inc
imul
js
in
mov
xchg
adc
adc
adc
cwtl
inc
lods
mov
dec
adc
sbb
cmp
xor
mov
shll
mov
leave
test
xchg
jns
dec
adc
pop
not
mov
mov
lods
loope
rol
ja
mov
stos
in
mov
or
std
adc
add
dec
or
or
pop
inc
loop
mov
jge
add
daa
cmp
das
push
testb
push
ficompl
cltd
cltd
test
pop
fmul
jns
xchg
stos
sub
sbb
dec
icebp
movsb
inc
data16
add
inc
pop
and
inc
push
pop
push
adc
sbb
mov
in
mov
cmp
scas
push
test
jg
fistpl
add
dec
rolb
jb
inc
shl
adc
sub
xor
mov
dec
mov
xchg
ja
jecxz
sub
mov
dec
sarb
jae
fistpl
push
in
out
cmp
push
mov
jl
inc
stos
stos
in
mov
mov
add
sahf
adc
dec
or
dec
sub
ret
jecxz
nop
pop
ret
mov
pop
mov
jecxz
mov
mov
das
in
xor
in
out
dec
add
dec
mov
jg
mov
adc
cmp
inc
lds
fwait
pushf
imul
lahf
mov
popf
sti
cmp
or
ficoml
out
xchg
pop
xchg
mov
mov
push
sbb
cmpsb
cmp
pop
xor
mov
xor
mov
cmp
pop
stc
outsb
mov
andb
mov
fstps
cli
out
xchg
xchg
mov
loop
cmp
shlb
insb
lea
or
test
fsubrl
dec
addr16
pop
xchg
addr16
je
and
xchg
sub
in
adc
and
mov
xlat
test
mov
sbb
pop
pop
lea
add
test
or
xor
gs
fisubs
cwtl
iret
lcall
inc
add
or
xchg
xor
notl
adc
fdivr
pop
sub
adc
das
dec
repnz
fcomp
mov
hlt
xchg
sbb
dec
jge
pop
insl
jge
mov
stc
divb
stos
push
sbbb
test
rcll
dec
or
push
cmpsb
mov
popa
dec
jbe
mov
dec
pop
or
mov
mov
xchg
aam
mov
adc
pop
cld
outsl
dec
adc
out
movsb
inc
and
into
movntq
mov
mov
insb
aaa
leave
mov
push
fisubs
sbbl
xchg
xor
push
mov
sbb
mov
ja
dec
movl
mov
test
fcompl
mov
push
push
dec
cli
or
pop
mov
in
push
push
or
xchg
sbb
js
movsb
xchg
sub
lahf
bnd
lcall
adc
sahf
add
jecxz
in
jp
xchg
adc
push
push
js
fwait
sbbb
and
in
xchg
stos
negl
or
add
imul
and
icebp
inc
lds
data16
mov
mov
cmp
shrb
dec
addr16
movsl
push
aaa
xchg
jno
jno
jns
insb
fwait
lds
mov
insl
leave
sub
xchg
pop
ret
and
int
and
mov
and
or
mov
int
or
cmp
lock
adc
sub
stos
mov
sbb
inc
xchg
push
scas
rorl
add
fs
test
in
jp
mov
aad
fidivrs
ljmp
and
addr16
or
in
xchg
cmp
leave
jnp
cltd
insb
mov
gs
ja
aas
andl
rol
jg
and
push
mov
push
rorb
cmp
xor
enter
push
adc
inc
js
mov
push
dec
mov
adc
call
pop
xor
jg
cmc
pop
mov
lahf
stc
mov
add
fwait
pusha
aam
or
pop
cmp
push
mov
fs
xchg
sbb
imul
adc
adc
pushw
push
fidivs
xor
in
dec
popf
mov
pop
lods
loopne
gs
xchg
aam
jns
push
fnstsw
out
add
cmpb
sub
jo
enter
jae
jno
push
call
lret
je
sbb
inc
enter
push
scas
das
and
into
insl
les
bound
dec
cli
xor
in
sub
mov
push
mov
aaa
movsl
inc
test
dec
adc
jbe
out
dec
or
jge
leave
js
out
mov
dec
pop
push
enter
mov
xchg
add
pop
repnz
cmp
in
pop
xor
lea
xor
loopne
and
lret
das
std
xor
les
and
mov
cmpsb
gs
sti
mov
mov
add
sarl
test
mov
imul
xor
mov
push
enter
mov
in
jl
hlt
arpl
add
inc
inc
and
leave
xor
jae
iret
jnp
lahf
push
inc
push
jo
mov
nop
fstpl
pop
lret
fcmovnu
mov
inc
dec
subl
stc
or
ret
rol
shl
mov
mov
das
in
int3
xchg
push
loopne
loope
push
lret
inc
test
mov
ret
fsubs
popa
les
sbb
ror
mov
ret
lea
stc
fldenv
or
add
orl
iret
stos
pop
daa
cltd
add
xor
mov
loope
add
mov
mov
hlt
cwtl
movl
shl
dec
mov
pop
sbb
std
push
sub
push
dec
inc
rolb
cmpsb
push
mov
lcall
jne
rorl
inc
xchg
pop
adc
push
add
fnstenv
std
sbb
mov
mov
repnz
pop
dec
and
xchg
icebp
aad
inc
push
inc
insl
add
fdivs
mov
sahf
mov
cmpsl
ret
rcrl
loope
jb
mov
fucom
dec
iret
insb
movsb
xor
jb
jnp
cld
dec
push
mov
push
adc
mov
aam
std
sub
int3
xchg
insl
decl
lret
out
cmpsb
repnz
loopne
mov
fdivrs
jmp
dec
jmp
pop
jg
das
and
loopne
loop
sbb
cmp
insb
jno
push
mov
push
mov
cmc
leave
jne
xor
addr16
arpl
lret
sub
mov
cmp
stc
pop
pop
popf
out
int3
addr16
sbb
sbb
mov
imul
in
fisttpll
cmp
loopne
rcrl
sbb
mov
mov
mov
pop
sub
cmp
adc
jle
mov
shl
push
ja
movsl
mov
pop
mov
enter
dec
ja
dec
addr16
pop
pop
push
sbb
pop
movsl
sub
lret
xor
push
femms
fwait
jb
sub
cmpsl
mov
mov
test
cwtl
shlb
shrl
inc
adc
sbb
dec
std
test
sub
in
jp
ds
jg
popf
and
fsubl
jp
stc
add
inc
insl
push
mov
add
arpl
mov
outsl
ds
add
popf
fs
in
jns
add
leave
scas
cmpb
rorb
jnp
xor
lret
push
fnsave
jmp
inc
jg
aad
icebp
pop
xchg
insl
repz
into
sbb
mov
xor
or
iret
push
xchg
lea
sub
jp
stos
mov
dec
in
sahf
sbb
push
mov
outsl
sub
ja
sub
js
jne
push
push
jecxz
rcl
inc
ficompl
test
das
repz
scas
or
push
hlt
inc
loopnew
out
xor
add
ret
xor
rorb
and
pop
nop
inc
sub
fs
cmp
dec
cld
leave
pop
dec
loope
sahf
adc
sub
es
xor
call
iret
cld
popf
push
adc
ss
adc
test
xchg
lret
pushf
fs
popa
and
arpl
ljmp
daa
pop
dec
push
jo
xchg
daa
arpl
jge
icebp
mov
xchg
cmp
mov
or
sbb
mov
jle
test
sarb
or
pop
add
ret
je
aad
int
sbb
js
cltd
mov
loope
call
sub
fwait
adc
adc
mov
dec
cmp
mov
pop
ljmp
addl
inc
fstl
dec
cmp
imul
je
or
xor
cmpsl
mov
test
pushl
inc
or
push
mov
loop
pop
test
sbb
idivb
xchg
pop
loop
and
xchg
lahf
mov
fstpl
mov
fisubrl
and
mov
mov
gs
test
xchg
add
int
push
rcll
mov
and
repz
jl
inc
int3
js
hlt
xchg
push
mov
sbb
int
lcall
dec
jle
sub
mov
inc
sbb
aam
jns
adc
pop
fldcw
loopne
push
dec
inc
cs
pop
out
mov
negl
pop
clc
sbb
mov
out
icebp
inc
lods
mov
out
mov
mov
sbb
cmp
inc
scas
jge
sbb
inc
add
std
fstps
pop
popa
xor
mov
pop
or
jg
out
imul
adc
inc
cmpsl
mov
cld
mov
push
cwtl
mov
ret
cmp
lds
ss
mov
xor
int3
xlat
je
ss
test
in
cwtl
or
int3
push
mov
push
xor
and
pop
std
mov
xchg
mov
xchg
push
jge
pop
repz
cmp
cs
mov
scas
pop
adc
rorb
jmp
or
ret
dec
xor
sar
push
cmp
mov
cld
aaa
ss
and
fstl
push
cmp
loopne
dec
add
xor
loopne
jb
push
or
mov
push
lret
push
jbe
addr16
dec
mov
arpl
sbb
pop
jl
repz
or
jbe
mov
and
nop
repnz
adc
cmp
adcb
mov
mov
push
jb
xchg
popf
stos
idivl
mov
repnz
vmovdqa
add
call
inc
dec
xor
push
fisubs
adc
divl
out
xor
imulb
daa
fcom
inc
lds
cmp
lds
pop
loopne
mov
cmc
adcb
loope
inc
outsl
pop
mov
in
xor
call
adc
cmp
fldt
mov
push
pop
or
jle
repz
push
mov
enter
or
jnp
inc
nop
outsl
pop
or
in
add
cld
lds
ja
gs
lret
xchg
into
movsl
das
cmc
add
jp
lock
mov
gs
jae
and
cmpsb
movsl
lods
pop
loop
pop
xlat
leave
inc
push
xchg
jnp
push
add
sbb
xor
lcall
xor
mov
adc
rcll
data16
test
loop
or
dec
jg
popf
idivb
inc
loop
scas
inc
or
mov
mov
jl
arpl
push
stc
pop
das
and
mov
cmp
xchg
jns
cltd
xor
mov
mov
fnstcw
mov
mov
aaa
push
movl
mov
pop
xchg
xorb
mov
aam
int3
sbb
mov
in
cmp
outsl
pop
fidivl
lods
fs
mov
jnp
push
jbe
shlb
fisubrs
sub
sub
sbb
jnp
mov
sbb
cmp
jbe
lods
out
jp
mov
xchg
mov
es
add
lods
and
cmpsl
and
pop
fists
cmpl
lods
aam
jae
scas
loopne
xchg
dec
icebp
fnstcw
push
pusha
mov
in
adc
adc
xchg
push
lds
lock
test
mov
fwait
jp
mov
subb
and
scas
and
xor
hlt
shlb
sti
fcmovbe
out
xor
fs
mov
pusha
mov
arpl
add
push
lret
or
dec
clc
adc
jl
cmp
inc
xor
mov
mov
jnp
xor
sub
rolb
xor
test
sbb
rcr
mov
imul
and
or
cli
xor
lods
and
data16
and
xor
icebp
mov
mov
fcomi
mov
rcrl
stos
push
in
pop
inc
jge
xchg
push
sub
stos
push
aad
push
sbb
push
jle
mov
add
in
incl
sbb
adc
jnp
or
jge
frstor
fisttps
rcr
fisttps
cltd
push
xchg
xlat
fcomps
push
lahf
filds
jle
addr16
pop
nop
sbb
add
jl
sarb
enter
push
or
js
inc
dec
inc
and
sahf
mov
mov
adc
movsb
mov
lret
mov
mov
jmp
fwait
arpl
sbb
inc
xor
pop
mov
inc
stos
repnz
push
hlt
push
jp
adc
xchg
sahf
repz
jns
pop
jns
jge
mov
cmp
push
mov
mov
xchg
cmpsl
mov
sbb
pop
xchg
and
test
jno
jl
adcb
or
jb
mov
fstps
mov
lret
mov
popf
push
mov
inc
ds
repnz
cs
mov
add
xchg
inc
inc
adcb
pusha
jp
or
or
into
fdivr
es
test
in
push
fstl
xchg
dec
mov
inc
pop
cli
push
popa
sarb
xor
sahf
mov
clc
stos
mov
xorb
jbe
lahf
jo
xor
mov
inc
inc
sub
jae
decl
cli
push
cltd
cwtl
fnstenv
inc
xchg
test
or
dec
push
mov
jo
inc
sub
test
xorb
push
cmpsl
ljmp
jmp
inc
mov
fcompl
icebp
sbb
push
push
pop
mov
inc
bound
pop
lods
bound
push
sbb
mov
xchg
add
loop
scas
popf
shlb
fildl
lods
lret
xlat
clc
and
in
clc
inc
xchg
js
cmc
jnp
xor
dec
mov
repz
in
stos
dec
sbb
js
push
inc
mov
dec
stc
lsl
scas
xor
das
mov
sub
push
jp
pop
inc
fmul
into
jg
xor
cmc
dec
push
out
push
add
add
testl
sbb
cltd
inc
pop
dec
adc
and
push
push
mov
rol
aam
xor
mov
lret
xchg
push
cmpb
mov
jns
repnz
dec
les
fistpll
xchg
pop
mov
adc
lods
sbb
insl
jecxz
ja
dec
mov
popf
jmp
dec
mov
push
mov
shrb
imul
sbb
ret
fnstsw
icebp
jmp
arpl
lea
push
jbe
sub
xchg
pop
movl
cmpsl
push
sbb
cld
cmpsb
pop
and
dec
xchg
jae
sahf
xlat
mov
jmp
ficoml
daa
xchg
adc
jb
in
sub
and
repnz
cli
lods
out
inc
out
mov
xchg
repz
cmp
lret
addr16
fiaddl
cmpsl
lcall
iret
scas
sbb
in
xor
push
xchg
sbb
jecxz
cmpl
cmpsb
pop
outsl
jmpw
add
nop
adc
addl
xor
sbb
dec
lds
fisttps
add
lahf
fstpl
xchg
mov
je
mov
je
addr16
mov
ljmp
mov
adc
shr
push
cmp
daa
fstps
cltd
les
and
enter
dec
or
and
cld
loope
and
faddl
mov
mov
fwait
das
jno
mov
cld
bound
sub
fs
cli
popa
jo
data16
pop
frstor
mov
imull
mov
push
sub
xor
or
aaa
sub
pop
xchg
jae
dec
jne
inc
pop
cmpsb
call
icebp
cmp
and
push
icebp
jg
dec
add
fsubs
daa
das
mov
out
adc
fnsave
loope
mov
test
cmp
scas
ljmp
inc
mov
cltd
pop
mov
sbb
into
or
mov
push
xchg
pushl
cld
pop
jle
andl
lret
hlt
shlb
jle
mov
inc
mov
adc
xor
mov
cmpsb
sub
jle
pop
xchg
mov
cmp
mov
subl
cmp
xlat
adc
sub
or
sub
imul
and
adc
pop
stos
jbe
add
add
pushf
xor
mov
xchg
outsb
pushf
push
mov
sub
and
inc
sbb
pop
lret
sub
inc
add
repz
adc
dec
dec
fadds
push
movsb
ret
les
in
test
push
sbb
adc
inc
pop
push
lret
cmp
lcall
and
dec
add
mov
jo
mov
cmc
lea
lahf
adc
mov
loopne
jl
inc
add
bound
xchg
in
test
push
cmpsb
inc
in
lret
push
rol
js
mov
inc
fabs
jge
and
mov
call
rcrl
in
loopne
add
lds
push
aaa
mov
into
sub
and
adc
sbb
mov
aaa
inc
fucomi
mov
js
push
data16
add
lea
jge
mov
xor
push
push
out
dec
arpl
inc
pop
idivl
fs
cmp
sbb
hlt
lea
nop
pop
lea
xor
jle
js
aas
test
je
inc
lds
daa
bound
loope
stos
sbb
xor
cmpsl
jp
jo
outsb
out
loopne
sbb
sub
mov
fs
out
test
gs
clc
iret
or
addr16
ret
push
cmc
pop
mov
xchg
sub
mov
mov
sub
pop
hlt
int
enter
mov
xor
fs
inc
sbb
lcall
add
loopne
xchg
out
sbb
mov
mov
shlb
fldcw
inc
lcall
pop
insb
sbb
and
xchg
pop
mov
orl
movsl
ror
popa
xlat
test
out
add
push
and
ds
lret
jg
std
outsb
imul
mov
or
test
add
insb
in
pop
xor
movsb
add
xchg
push
push
adc
fwait
or
test
inc
ss
lcall
xchg
jecxz
out
add
sahf
movl
scas
dec
dec
cmc
std
fwait
cltd
int3
lcall
xchg
xchg
jns
xor
xchg
xorl
ljmp
fldl
dec
sarb
mov
sub
jo
jbe
repnz
cmp
jno
xor
je
insl
aad
insb
cwtl
fadd
jle
cmp
sbbb
jae
xchg
and
add
data16
shrb
pop
in
and
mov
sub
dec
sti
xchg
cmpsl
lret
leave
mov
or
aaa
fs
xor
inc
push
roll
dec
or
in
mov
stos
mov
in
fimuls
lock
ret
adcl
adc
in
cltd
dec
mov
ret
cmc
push
les
sbbb
data16
test
jmp
lret
mov
sbb
in
ss
rolb
lcall
daa
push
scas
fcomp
je
js
pop
dec
push
mov
push
push
inc
xchg
sbb
fs
in
sbb
subb
out
fistpll
add
das
xor
sbb
rcl
orl
loop
out
adc
sahf
fnstenv
xor
divb
jb
insb
or
nop
fsubr
jg
or
mov
fildll
mov
shl
gs
jno
mov
adc
stos
fwait
mov
mov
cmp
cmp
jbe
push
mov
lds
mov
jne
dec
or
cld
mov
int
ret
jae
jl
pusha
mov
fnstenv
sub
push
ss
or
push
sbb
push
int3
clc
inc
jnp
sub
jl
das
test
testb
cli
add
pop
fildll
nop
into
cmpsl
add
daa
mov
and
popl
dec
pop
or
xor
hlt
loop
sarl
mov
into
mov
adc
ficomps
aad
std
dec
mov
in
scas
mov
jb
jbe
mov
mov
int3
in
and
ret
adc
icebp
je
notl
jecxz
jl
lock
in
sub
mov
or
js
xorl
pop
fcos
outsb
aaa
push
xor
int3
push
cmpsl
fnstsw
outsl
pop
and
sub
js
cmpsb
sub
push
jmp
es
fsubrs
and
rcrb
or
sbb
pop
fistpl
lods
sar
mov
mov
ja
iret
push
stos
outsl
pop
push
xlat
jbe
push
notb
sbb
add
hlt
push
cmp
imul
xchg
adc
shl
jmp
adc
inc
mov
dec
pop
shl
imul
jmp
and
xchg
jo
add
fsubrl
fnsave
sub
pop
mov
jae
jns
ret
jp
xchg
xor
cmpsb
pop
mov
lret
sub
pusha
movups
stos
sub
mov
pop
shlb
push
cmpsl
pop
xor
imul
sbb
outsb
adc
inc
enter
inc
enter
sbb
and
daa
test
enter
inc
xor
xchg
and
and
lret
mov
sbb
ds
into
test
mov
pop
icebp
mov
cmp
in
loop
sbb
shlb
notl
add
or
sahf
push
pop
xor
jge
leave
mov
add
roll
jge
mov
push
inc
bnd
sub
push
frstor
cltd
shrl
jle
shlb
xor
je
jno
mov
pop
idivl
arpl
pusha
sbb
xchg
xchg
mov
test
sub
adc
cmc
ret
push
fdivrs
mov
scas
dec
fdiv
mov
fisttpl
fistl
pop
push
and
leave
sbb
nop
pop
stc
and
jg
adc
rcrl
pop
push
call
mov
jo
mov
sahf
test
xor
jae
and
enter
jne
fbld
das
push
fcomps
and
dec
sarb
push
mov
cli
pop
pop
call
es
push
lret
adc
stos
xor
enter
nop
js
mov
and
or
sbb
sbb
shll
in
flds
lds
sub
dec
fbstp
pop
movsb
xchg
dec
xchg
mov
das
pop
push
sub
and
xchg
inc
xor
jns
push
std
cli
push
push
fisttps
cld
pushf
popa
cwtl
jno
xor
lret
fs
fnsave
test
lcall
lods
cld
pop
xlat
adc
push
xchg
mov
mov
pop
shl
cmp
add
xor
shlb
push
fwait
mov
outsl
inc
pop
xor
in
mov
iret
dec
imul
inc
pop
mulb
adc
dec
les
cmp
mov
sarb
lret
and
stc
scas
adc
or
jns
dec
aaa
inc
sub
cmp
ret
insl
std
pop
xchg
xor
add
aaa
jb
and
fdivr
jns,pn
scas
fwait
stos
les
jp
aad
sbb
fistpl
jg
loop
sbb
ja
lock
mov
add
stc
pop
imul
inc
lret
jl
in
sarl
adc
fs
adcl
mov
mov
fidivrl
outsb
popf
adc
js
test
out
lcall
xor
popa
insb
cmp
in
andb
bound
aaa
dec
aam
mov
js
nop
add
enter
dec
or
outsb
pushf
outsl
mov
jmp
out
rcrl
in
ss
add
lcall
sti
mov
xor
imul
sbb
adc
adc
add
cli
lds
mov
inc
dec
sub
adc
mov
repz
es
jl
push
sarl
lcall
out
dec
cmpsl
and
das
xchg
push
jo
mov
mov
das
les
sbb
adc
inc
xchg
cmp
lock
dec
push
and
repz
mov
addr16
imul
bound
mov
es
out
pop
ljmp
pop
sub
in
test
mov
mov
sub
or
fisubl
pop
rcrl
mov
xchg
leave
jg
sub
mov
dec
lahf
cmp
fwait
clc
xor
repz
mov
push
dec
push
mov
lock
jmp
aas
leave
bound
pop
pusha
lods
inc
pop
pop
lds
roll
mov
and
imul
insb
fisubl
icebp
mov
inc
out
sub
mov
cmp
roll
hlt
out
pop
pop
lret
push
mov
lahf
fcoms
pop
or
xchg
jg
call
sbb
lea
dec
add
lods
xor
inc
jne
rcll
push
mov
je
insl
xor
dec
ret
cs
or
call
or
lods
jge
or
ffree
out
xor
out
fsubrs
loopne
repz
out
sub
leave
jno
sbb
cmpsl
sub
addr16
cmp
call
arpl
stos
repnz
imul
mov
mov
adc
mov
popa
xchg
jb
or
mov
int
pop
inc
push
pop
inc
cmpsl
add
negb
inc
add
adc
xor
push
in
push
inc
loopne
jae
or
pop
rcl
or
sti
outsb
add
xchg
adc
sub
repz
fwait
scas
xor
jno
out
jp
call
adc
hlt
jnp
sbb
dec
shlb
scas
test
rcrb
mov
data16
aam
int3
xchg
mov
jae
shrl
jb
inc
inc
add
lock
cmp
pop
adc
fsubl
dec
fisttps
cli
loope
mov
add
test
dec
aaa
inc
push
cli
jns
adc
mov
add
or
repnz
pop
fwait
gs
cmp
sbb
outsl
mov
popa
mov
or
push
mov
test
repz
pop
pop
cmp
out
ret
cmp
fldt
es
cmp
jbe
lret
fwait
mov
jge
mov
hlt
xchg
add
push
icebp
ja
sub
in
push
rorl
adc
mov
sub
pop
fsubr
add
sarb
loopne
sub
jns
into
ljmp
cld
test
ljmp
or
cli
fs
cld
mov
xor
aad
sub
jo
adc
subb
mov
mov
out
push
lods
mov
push
sbb
cmp
hlt
mov
sbb
lcall
mov
and
test
idivb
pop
mov
stc
pusha
rolb
stos
xor
sbb
cmp
add
lods
mov
daa
not
rclb
adc
push
hlt
neg
into
stos
arpl
pop
push
fisubrl
jbe
push
in
adc
fisttpll
cwtl
xor
adc
xchg
mov
xor
sbb
xor
cmpsl
pop
push
xchg
lahf
sub
fdivr
pop
sub
daa
jge
jae
push
aaa
int3
jo
mov
enter
movsl
jle
jle
mov
imul
mov
xor
loop
pop
daa
aam
adc
in
mov
insb
ss
das
push
jle
iret
pop
rorl
jle
frstor
push
mov
out
inc
push
mov
jnp
lods
adc
lock
sub
sbb
mov
push
icebp
mov
test
add
xchg
xlat
add
clc
mov
mov
add
jnp
xor
xchg
sub
sub
lret
adc
xchg
int3
or
lcall
int
pop
daa
cmc
or
js
popa
insl
mov
scas
stc
pop
xor
pop
push
scas
fwait
xor
lcall
movsb
in
insl
lods
xchg
push
mov
inc
inc
and
and
xlat
adc
jb
scas
cli
mov
dec
jmp
adc
and
out
push
jne
or
pop
lcall
ja
test
jne
sub
pop
add
jge
fistpl
sti
and
xchg
fildl
push
mov
imul
test
dec
jno
lret
mov
sub
iret
and
outsl
inc
std
lahf
push
popf
xchg
inc
jmp
imul
sbb
jge
jnp
adc
dec
mov
jl
pop
mov
sub
jp
sti
loop
stos
outsl
inc
or
fwait
jg,pn
push
jns
sbbl
test
std
out
mov
pusha
mov
mov
lcall
pop
jp
or
dec
mov
ret
repnz
in
int
or
scas
adc
sbb
lret
sub
aas
fstpl
mov
rol
add
in
enter
pop
dec
aas
xchg
push
sbb
mov
incl
aad
popf
add
xchg
xchg
je
xchg
int
sub
dec
pop
cmp
gs
xor
insb
and
mulb
xor
insb
push
jmp
sbb
movsl
sub
xchg
inc
movsl
call
xor
or
inc
gs
stos
scas
out
mov
pop
test
sub
push
lea
adc
pop
bound
adc
mov
cmp
add
faddl
movsl
inc
add
xor
fcoml
mov
icebp
sbb
mov
frstor
sub
push
insb
pop
push
fstpt
ljmp
aad
add
addb
in
xlat
inc
fbld
dec
sub
int3
std
out
aam
mov
cmp
insl
adc
mov
pop
add
and
and
cmp
ljmp
int3
aad
sub
or
pop
xchg
xorl
jne
insb
repnz
int
sbb
push
adc
sbb
add
sbb
mov
ret
mov
jl
pop
lods
fcoml
mov
sub
in
adc
mov
das
rolb
pop
dec
scas
aas
push
loope
imul
xor
push
mov
in
push
cmpsl
std
int3
inc
dec
cwtl
out
jle
mov
sbb
dec
pusha
inc
mov
push
sub
pop
sbb
and
int3
in
mov
stos
dec
sub
fdiv
lock
pop
sbb
push
lods
fisubl
loope
int3
nop
push
xchg
fdivr
sbb
push
xchg
jae
push
leave
inc
lods
dec
cs
mov
inc
cli
adc
push
jns
outsb
in
imul
mov
mov
ljmp
dec
mov
outsb
add
adc
in
sbb
test
mov
xor
add
xchg
jne
hlt
fcmovne
sub
push
dec
dec
mov
xchg
bnd
test
mov
sbb
test
pop
out
icebp
dec
mov
mov
enter
and
inc
xchg
lret
cmp
mov
mov
push
jecxz
pop
icebp
out
popa
fcomip
pop
ds
and
test
in
inc
jg
repnz
cwtl
nop
daa
sub
inc
inc
loope
push
ret
je
aas
jb
mov
aad
scas
int
mov
sub
sti
jbe
fs
and
insb
push
outsl
loopne
xor
and
hlt
and
movsb
cwtl
inc
xor
push
xchg
cwtl
mov
dec
call
lock
je
cmp
or
inc
cltd
hlt
cmovno
fcomip
push
jno
or
xchg
xchg
dec
scas
inc
cmpsl
inc
xchg
sub
xchg
popa
vpslld
out
push
xchg
jmp
lods
mov
push
jge
lcall
sbb
sub
nop
pop
aas
ljmp
mov
adc
mov
xchg
xchg
xchg
lret
test
inc
shlb
mov
or
push
rclb
test
dec
cmpsl
cmp
sbb
jae
jmp
xlat
inc
and
rcr
bound
or
mov
std
lret
jne
mov
cmpsb
dec
fildll
outsl
shl
data16
test
cwtl
fld
add
into
outsl
dec
in
push
mov
mov
clc
pop
lock
dec
ret
aam
adc
cmc
cwtl
push
inc
pop
sub
out
imul
push
pop
jno
aam
scas
jns
enter
sub
test
imul
xor
negb
jle
test
pop
add
std
adcb
jmp
cmpsl
in
rolb
jmp
add
mov
adc
loope
das
std
std
das
enter
and
out
inc
jbe
js
inc
jae
fbld
cmp
iret
test
stos
fsub
cld
in
adc
in
fidivl
mov
fs
and
call
push
xchg
push
adc
lret
ret
imul
sbb
and
stos
filds
cs
sbb
mov
into
or
pop
aam
iret
sub
xchg
fdivrs
hlt
xchg
mov
pop
movsb
or
pushf
mov
rclb
das
xchg
xor
aaa
push
mov
mov
cmp
in
in
pop
and
xor
pushf
inc
push
mov
insb
fisttpll
lahf
insb
dec
or
test
pop
jmp
ret
xor
aaa
push
bound
xchg
mov
repz
nop
lods
sbb
mov
stc
push
pop
jp
mov
xor
jmp
outsl
into
sar
adc
push
push
jl
or
es
push
int
pop
pop
cmp
es
mov
out
out
das
jle
add
inc
ja
jbe
mov
jne
cmpsb
aas
rolb
mov
aad
xor
hlt
push
mov
mov
xchg
insb
jns
cmc
cmp
sbb
push
xchg
sbb
pop
sbb
sub
push
add
push
pop
cmp
cmpsl
push
addl
cmp
cmp
test
xchg
pop
leave
fistpl
iret
cmp
sbb
negl
leave
push
dec
movsb
jg
add
push
out
cmp
inc
clc
cmc
xchg
mov
add
dec
js
xor
movb
pop
and
hlt
add
test
xor
jge
aaa
cmc
nop
sbb
es
mov
sti
cmpsb
and
shrl
sbb
rorb
pop
repnz
mov
sub
cmp
shll
fdivs
mov
fisubl
cmc
stos
das
push
xor
inc
mov
fistps
xchg
xor
leave
and
adc
out
xchg
add
dec
pop
data16
or
mov
test
sbbb
inc
rcr
repnz
push
fxch
push
sarb
pop
lahf
dec
fsub
sarb
cmp
out
lods
xchg
les
adc
mov
push
inc
scas
mov
push
jge
mov
fdivl
sarb
sarb
mov
cmp
fwait
xchg
sub
fidivrs
sub
xchg
pop
cltd
lret
push
mov
mov
das
lea
iret
adc
mov
jns
cld
pop
fimull
mov
rcrl
mov
xchg
stos
sti
div
fistpl
aad
pop
dec
dec
outsl
and
mov
jnp
scas
inc
daa
mov
jne
sub
cmp
fidivl
std
sub
xor
insl
arpl
negb
xchg
mov
push
cmc
push
shlb
add
xchg
in
jp
lcall
mov
in
cld
cmp
add
fdecstp
sbb
mov
dec
ror
push
cmp
sbb
adc
enter
sbb
loope
repz
aaa
out
idivb
mov
ficompl
setne
fs
mov
mov
xor
xor
xchg
xchg
lods
jo
incb
cmovge
loop
dec
sub
mov
lcall
cld
push
dec
mov
xchg
imulb
movsl
lods
mov
xchg
outsb
sbb
das
pop
loope
leave
fistpl
adc
jmp
loopne
pop
inc
cld
fisubs
cs
flds
or
lcall
jmp
sub
or
jbe
mov
dec
push
mov
jo
mov
sti
popf
aam
pop
sub
dec
in
inc
jns
shr
cwtl
push
std
cs
and
mov
sub
dec
ficomps
push
mov
sub
mov
test
in
jp
scas
lret
sub
mov
pop
add
xchg
cmp
test
inc
sub
sub
sarb
mov
cmp
sahf
js
dec
fsubr
outsb
ret
and
ret
mov
int
repnz
push
sub
inc
je
cmpsb
mov
cmpsb
mov
leave
xchg
xlat
add
in
icebp
sbb
loope
cwtl
cmp
outsl
clc
push
sub
xchg
lret
add
nop
hlt
xchg
push
outsb
in
out
imul
xchg
nop
or
cltd
in
cmpsl
cmp
fists
sub
sahf
push
lods
cmpb
jmp
sbb
pop
loop
rorb
lods
sbb
sti
adc
jne
scas
popf
xchg
jle
and
and
ja
sbb
cmp
mov
jb
cmpsl
clc
popa
das
out
sbb
int
loop
xchg
or
mov
test
cltd
mov
sbb
pop
or
outsl
push
test
cld
clc
cmpsl
arpl
jge
lods
nop
inc
mov
inc
jl
gs
sbb
sbb
sbb
and
add
pop
push
push
sahf
lcall
sbbl
xchg
xor
insb
cmp
shll
mov
fcoml
hlt
shll
fldenv
sub
xor
test
cld
and
loop
or
iret
pop
push
shll
inc
inc
cmpl
ja
fsubs
mov
in
mov
subb
pop
or
dec
push
repnz
xchg
xor
mov
mov
push
int3
cmp
lea
lahf
out
mov
sti
inc
pop
lea
dec
int
cmc
jae
xor
add
cmpsl
jo
jl
aaa
scas
jbe
lret
stos
inc
loop
jnp
jnp
jne
and
push
sub
nop
jns
cmp
bnd
xchg
inc
es
fsubs
push
add
rorb
xor
xor
xchg
push
pop
sbb
cmp
cmp
xor
ret
and
or
sbb
lock
packuswb
ret
rorb
in
sahf
dec
add
out
scas
fwait
std
hlt
das
js
enter
adc
mov
leave
dec
or
pop
js
mov
loopne
adcb
cmpsb
lods
aam
pushf
popa
push
sbb
mov
out
mov
inc
dec
xchg
imul
jnp
cmp
xchg
push
movsl
leave
jnp
cmpsl
adc
mov
inc
fldt
out
sbb
push
mov
bound
bsr
pop
xor
and
push
fdivl
insb
orb
cmpsb
sub
popf
xchg
aad
bound
mov
jle
shrb
cltd
pop
jnp
and
mov
xor
aas
fistps
leave
dec
and
add
call
push
mov
add
aas
lret
or
ror
and
push
inc
pop
adc
or
mov
cmp
add
scas
sub
xchg
jae
mov
es
sbb
jecxz
subl
adc
in
and
push
inc
push
addb
test
push
sub
mov
push
sub
or
pop
add
ljmp
push
ret
movsb
lret
ret
cmp
add
decb
xchg
xchg
jbe
out
jns
xchg
scas
jg
cwtl
les
es
dec
inc
xchg
popl
lock
xlat
mov
and
stc
lods
mov
push
sub
sub
push
out
mov
and
andb
mov
cmp
cmpsl
mov
jp
jae
mov
insl
sbb
pop
sbb
mov
aaa
call
mov
jno
jno
jg
popf
xchg
fwait
sbb
outsl
dec
stc
fisttpll
fiadds
test
add
push
pusha
and
fbld
insl
inc
out
mov
xor
aas
mov
enter
mov
mov
dec
fstl
gs
leave
fs
js
adc
dec
in
faddp
rorb
fdivr
dec
mov
add
repnz
inc
call
gs
iret
popa
mov
adc
or
pop
cmp
and
cmp
lock
stc
ja
ds
lods
push
xor
cmp
inc
xor
jmp
notl
push
jne
sbb
aas
addr16
fsts
jns
xchg
or
fidivs
pop
mov
out
mov
and
sub
lock
sub
add
sub
sub
dec
sub
dec
add
stos
inc
xchg
outsl
sub
xchg
jno
out
lods
pop
sbb
sbb
mov
iret
cmp
cmp
inc
mov
adc
adc
pop
fisubrs
pusha
nop
lcallw
xchg
cmc
xor
sbb
or
dec
adc
mov
mov
mov
mov
data16
popf
xchg
lea
mov
mov
scas
cltd
lds
xchg
dec
mov
cmp
sub
or
mov
in
lods
sbb
out
pop
mov
cmp
jmp
xchg
or
loop
xor
pop
jl
aaa
push
ja
jno
and
mov
cwtl
jb
fstps
pop
incb
or
iret
mov
pop
mov
push
jecxz
ljmp
cmp
mov
cmpsb
lret
or
cmpsl
mov
mov
mov
and
test
aas
ss
pop
cmp
hlt
test
push
repnz
ffreep
xchg
adc
inc
pop
and
das
mov
xchg
cmp
shll
stos
and
mov
out
adcl
in
jmp
and
adc
stos
jmp
jae
cmp
mov
mov
in
mov
dec
std
inc
fmuls
adc
jmp
add
lea
add
cs
pop
xor
jbe
into
call
loop
cmp
jmp
mov
stos
cmc
sbb
repnz
es
movsl
ja
gs
mov
test
arpl
shlb
mov
jl
push
xchg
js
in
cmc
icebp
fsubrl
and
nop
scas
in
lahf
sahf
mov
repnz
rorb
dec
imul
dec
jbe
into
add
xchg
jg
subb
andb
mov
mov
lea
popf
iret
dec
mov
xor
push
fists
jae
cwtl
lock
gs
cmp
hlt
fs
subb
imul
jnp
mov
in
rcll
arpl
add
iret
loop
mov
cld
jge
dec
ret
add
data16
sbb
cmp
in
lret
and
bound
movsl
out
mov
ja
ret
cmp
jno
dec
cmp
mov
insb
test
aam
sbb
fwait
jb
add
pop
cmpsb
dec
movsl
repz
xlat
mov
shlb
pop
adc
out
pop
jmp
sahf
inc
mov
cmpsb
adc
dec
fiaddl
or
xor
adcl
jmp
loopne
mov
sbbb
pop
rcr
pop
jnp
imul
mov
xor
mov
and
jno
shlb
inc
xchg
enter
mov
xchg
test
xchg
add
pop
cmp
add
jo
sbb
clc
sub
xchg
lret
cmp
jg
cmp
jb
xchg
and
lret
sub
fidivs
aam
add
adc
iret
cld
mov
sti
mov
cld
xchg
jo
dec
fcoms
fwait
dec
jne
clc
push
mov
xchg
pusha
jl
andb
pop
ds
lds
outsl
adc
outsb
out
xchg
inc
mov
xchg
jle
orl
jne
in
lods
jmp
or
and
sbb
mov
mov
mov
in
cmpsl
int
icebp
mov
add
cmpsb
dec
lcall
sarb
sbb
imul
insb
dec
movsb
popf
jmp
add
sbb
xchg
cmpsb
enter
and
fs
cmc
ss
mov
xor
cmc
mov
xchg
insb
and
xor
jg
je
call
ljmp
hlt
pop
icebp
cltd
jle
ror
scas
pop
mov
fwait
xor
mov
jge
add
jns
inc
cmpl
scas
in
fisttps
loop
dec
test
les
push
lods
fimull
add
xchg
and
mov
and
in
or
dec
mov
xor
dec
inc
stc
sbb
push
addr16
mov
stos
lcall
cmpsb
cmp
push
insl
ficoml
hlt
dec
dec
cmp
pop
fimuls
and
pop
push
dec
bound
xor
and
jnp
dec
mov
test
pop
aaa
dec
rorb
fs
pop
jb
inc
add
add
movsb
hlt
or
add
sub
sub
jl
adc
push
add
push
xor
push
mov
enter
lret
cld
outsb
out
mov
cmpsl
cmp
pop
ret
cs
and
cmp
jge
cmp
dec
add
cmp
pop
xlat
mov
adc
jne
mov
mov
lock
es
push
imul
xchg
mov
sub
jle
lds
lahf
aas
adc
adc
cmpsl
sbb
jg
jle
repz
aas
insl
jg
push
jnp
lret
push
mov
das
dec
lahf
gs
jno
xor
adc
aam
push
sbb
popf
sahf
push
popa
data16
fnstsw
pop
iret
xor
mov
es
add
arpl
mov
test
inc
pop
mov
rorb
rol
popf
inc
lahf
jbe
pop
sub
bound
pop
xor
inc
imul
test
js
jmp
aam
cmp
sub
dec
imul
push
test
jno
sahf
jmp
dec
clc
orb
jbe
jg
inc
imul
push
push
add
std
dec
adc
mov
mov
cwtl
push
pop
pop
xchg
and
gs
outsl
popa
cmp
xchg
and
sbb
das
jbe
jo
fidivrl
inc
fs
daa
or
sbbl
jbe
fcomip
pop
out
int
ret
add
adc
cld
and
xor
push
xchg
int3
outsl
push
push
std
lods
aaa
data16
mov
dec
inc
mull
jo
loope
mull
cltd
push
scas
mov
lcall
jno
sahf
aas
js
mov
std
js
cmpl
stos
sbb
cmpsl
mov
fsubr
lock
dec
mov
mov
cld
aas
addb
pop
xor
data16
imul
or
jge
mov
dec
ret
inc
mov
mov
andl
and
and
inc
xor
out
sub
inc
sbb
xchg
test
loope
cmp
not
lret
addl
jp
jecxz
movsl
add
lahf
xor
into
lcall
cs
sub
sbb
cltd
movsl
push
nop
imul
jge
js
push
mov
jg
or
jnp
push
sub
aas
push
or
add
fidivl
adc
loop
mov
xor
jae
add
inc
icebp
clc
int
xchg
fwait
jp
faddp
out
or
std
xor
inc
addr16
or
vcvtdq2pd
adc
add
xchg
or
je
nop
jg
adc
shlb
nop
test
cmp
sub
sub
cli
mov
pushf
sub
jp
stos
fnsave
pop
mov
rcr
shl
lret
lods
movsl
ljmp
jb
push
jo
or
or
out
push
xchg
adc
cmp
sahf
fidivs
popa
add
or
jno
adc
cmp
movsb
cs
scas
repz
inc
mov
in
pop
je
pop
test
fwait
test
mov
int
inc
push
xor
inc
das
mov
push
lea
mov
inc
add
jge
ljmp
mov
shlb
repz
sub
ljmp
mov
lcall
pop
aas
push
fmuls
adc
mov
lds
inc
loopne
mov
xchg
jle
jns
or
cmpsl
and
lahf
repz
mov
push
pop
mov
dec
or
jnp
push
pop
and
loopne
mov
xchg
fcmovnb
cli
scas
lock
cmc
aam
fiaddl
sbb
mov
scas
xor
lds
mov
cmp
jge
idivl
push
ss
sbb
cmp
or
in
dec
mov
test
sub
rcrl
cmp
scas
jno
jge
sbb
mov
movsb
out
sar
mov
loopne
sub
pop
mov
jno
pop
js
enter
push
mov
out
stc
int3
pusha
lret
imul
into
movsl
dec
jmp
movsl
pop
test
mov
dec
jno
imul
inc
sub
dec
cli
and
daa
push
insl
jne
mov
push
es
cmpsb
sti
mov
mov
add
dec
test
rcr
leave
jae
out
adc
fisubl
aam
iret
cmp
sbb
lods
mov
jl
inc
test
pop
push
jae
mov
orl
rorl
ret
inc
test
cmp
inc
push
jmp
incl
xchg
and
bound
popa
fnstcw
jnp
dec
add
jmp
or
xchg
mov
fs
flds
mov
lods
cmp
repnz
cmp
xchg
ss
in
cmc
movsb
cmpsb
roll
ljmp
mov
lods
mov
xchg
mov
sbb
mov
add
in
in
out
pop
sub
sbb
fwait
inc
mov
and
push
popa
dec
sub
dec
sbb
push
adc
aaa
dec
outsb
push
jae
xlat
jp
xor
gs
pop
and
inc
or
pop
push
and
mov
add
inc
es
cmc
add
and
jae
cmp
movl
pop
insb
jae
sub
lods
popa
ljmp
ret
enter
cmpsl
mov
and
mov
imul
cs
iret
jnp
pop
xchg
adc
pop
jle
aam
xchg
mov
pop
es
inc
movsb
sub
shlb
jo
sub
push
stos
mov
push
sti
lods
outsl
and
test
faddl
testl
aaa
and
mov
xor
mov
mov
or
int3
bound
mov
inc
lret
lea
cmp
jae
in
cld
sub
ljmp
data16
pop
push
popf
roll
pop
rcrb
imul
ror
stos
jb
test
mov
ss
push
mov
es
mov
shrb
mov
mov
xor
push
fs
data16
adc
or
cmp
popf
jo
pop
test
in
or
mov
js
mov
inc
jl
ja
lods
mov
les
inc
sub
in
push
sub
lea
push
mov
jle
sahf
adc
lds
iret
lret
dec
jecxz
push
xor
out
xchg
hlt
mov
int3
scas
loop
pop
jmp
adc
pop
mov
lcall
leave
and
jle
and
mov
mov
pop
sub
jb
movsl
inc
or
add
inc
mov
or
cltd
shlb
pop
mov
cld
out
mov
fwait
xchg
scas
mov
jl
push
cmc
inc
xlat
pusha
jmp
sub
gs
fcoms
cwtl
and
push
xchg
inc
jb
jnp
icebp
bound
loopne
das
rcr
adc
fstpt
mov
add
mov
sahf
leave
in
dec
dec
aam
mov
shll
ds
outsb
push
cltd
out
in
dec
mov
icebp
inc
fidivrs
fstpt
popa
cmp
fisttpl
pop
shrl
dec
or
jnp
ss
mov
adc
mov
shll
sti
std
xchg
hlt
cld
cmp
faddl
stc
dec
pop
xchg
in
mov
and
in
movd
popf
imul
inc
std
pop
push
in
imul
clc
popa
fwait
adc
mov
aaa
movsb
mov
jmp
mov
push
mov
xchg
push
mov
mov
enter
das
jnp
dec
mov
mov
aaa
jo
out
pop
in
fists
shll
sbb
shrl
dec
int
mov
int
imul
rcll
mov
stos
scas
daa
fstl
pop
popa
and
sti
ss
ljmp
cld
hlt
rdpmc
push
cmp
popf
push
sub
fmull
push
cltd
jecxz
xchg
test
clc
cmp
popa
jl
pushf
pop
dec
bnd
xchg
sbb
dec
dec
push
jmp
dec
sub
inc
idivb
in
inc
mov
cmp
nop
xor
mov
mov
cltd
fwait
aad
inc
int3
mov
ds
and
lea
aad
or
pushf
outsb
mov
scas
pop
test
ljmp
push
ret
fstl
js
aaa
jg
and
sub
iret
jmp
cs
push
or
push
fdivrs
outsl
mov
adc
jmp
push
xchg
mov
fadds
sti
shlb
lds
fcomp
aas
mov
pop
fidivrs
sbb
mov
test
sbb
mov
aaa
jg
fimuls
jmp
dec
fs
adc
add
rcr
loope
mov
xchg
mov
xchg
popf
ficoml
repnz
fstp
mov
dec
pop
inc
cmp
rcl
sbb
cli
inc
add
movsl
inc
add
out
and
jmp
inc
andb
in
inc
loope
inc
lahf
loopne
sbb
fmul
pop
jno
inc
test
cs
fsubr
les
adc
cmp
sub
lds
outsl
push
cmp
fwait
sbb
mov
mov
or
flds
insb
jecxz
call
pushf
xchg
jae
pop
push
movsl
add
fstpl
imul
push
ljmp
ss
addr16
pop
insl
lcall
mov
bound
xor
aam
mov
aaa
testb
xchg
xor
xor
sub
jp
adc
scas
jle
xlat
cltd
xor
fiaddl
jbe
add
sub
mov
ljmp
sub
cld
mov
adc
fwait
sbb
rorl
pop
xchg
or
cmp
mov
xor
push
push
mov
push
cs
cmpsl
push
ljmp
aaa
mov
fisubs
push
jno
ret
adc
in
jmp
jge
lods
lret
mov
cli
rol
and
jmp
pop
lcall
add
enter
inc
rolb
and
fs
cmpb
arpl
push
xchg
dec
fbstp
cmp
jbe
std
cmp
js
jns
nop
popa
mov
gs
cmpsb
or
pop
fmuls
out
push
fsubr
mov
aaa
aaa
mov
jno
sbb
imul
shll
scas
movsl
pop
sbb
xor
mov
adc
cld
mov
lret
xchg
jmp
inc
xchg
jbe
scas
pop
adc
xchg
aad
push
mov
imul
mov
push
push
xor
out
mov
into
mov
or
and
inc
cmp
add
or
push
fildl
cld
out
pop
lret
add
sti
shl
leave
jl
or
jp
and
or
lock
mov
push
test
jb
cmp
xchg
adc
mov
loope
aaa
and
xor
pop
pop
or
pop
rorl
dec
pop
das
cmp
push
pop
add
mov
dec
mov
mov
add
push
popa
ret
push
mov
insb
rolb
lods
sub
adc
add
notb
pop
adc
testl
lods
and
xor
aaa
sub
jle
jge
lods
dec
inc
and
mov
in
nop
sub
out
mov
mov
repz
stos
push
sbbb
js
subb
or
fdivrs
and
fiadds
or
mov
jo
add
rorb
arpl
pop
cmp
sahf
push
mov
jne
adc
push
mov
arpl
or
out
int
cmp
jnp
test
shlb
adc
aas
daa
adc
mov
mov
sbb
or
jbe
xchg
adc
lods
pushf
test
sbb
fsubrs
xchg
enter
adc
add
push
cmp
mov
mov
rcrb
ljmp
call
push
jecxz
push
jle
rcl
repnz
xchg
aam
and
xor
inc
filds
or
cmp
stc
jno
bound
stc
jo
dec
out
mov
sbb
xor
push
aaa
ret
sub
jle
ljmp
shlb
loope
jle
push
out
in
rcrb
adc
mov
mov
scas
test
movsl
test
and
lds
or
lods
jmp
pusha
aas
and
sti
push
sarb
dec
cli
into
xchg
loop
cmpsb
xor
mov
fiaddl
add
push
int3
dec
imul
shl
xchg
add
lea
sbb
mov
fcomps
add
and
pop
shrd
jb
jno
jns
out
adc
aaa
xchg
out
jae
in
imul
int3
mov
outsl
outsl
pop
xchg
fs
repz
fisubs
ficomps
cmp
std
mov
dec
imul
cmc
dec
adc
push
stos
test
scas
iret
and
cli
mov
jne
sbb
mov
das
loope
or
das
scas
jl
fsubrl
mov
dec
imul
stc
xlat
dec
out
dec
cmpl
das
ja
mov
sub
push
fcomip
enter
mov
cld
push
sub
stos
jmp
push
sbbb
cltd
pop
mov
push
adc
cmc
push
cmpsl
jle
fsubrs
cmc
enter
pop
loop
nop
and
sub
std
imul
sbb
fldcw
jmp
cwtl
inc
loop
jmp
push
add
xchg
or
cmpsb
fistpl
xchg
or
mov
into
inc
int3
fisubs
mov
jns
adcl
fwait
add
add
mov
das
push
mov
xchg
adc
sahf
xor
sub
xchg
int3
xor
icebp
data16
add
test
scas
push
dec
mov
inc
mov
data16
mov
repnz
test
outsl
add
mov
insb
mov
or
cmc
mov
subb
cmc
sbb
push
push
sub
adc
setb
sub
inc
stos
xchg
ret
divb
xor
bound
repz
mov
mov
inc
mov
jl
mov
orl
pusha
pop
hlt
and
inc
push
addr16
daa
in
and
and
out
pop
arpl
jp
or
push
push
sub
or
xor
scas
lods
rorl
cld
or
inc
adc
aam
movsb
fcoms
pop
push
push
pop
jae
jl
xor
add
mov
and
sub
jo
cmpsb
outsb
adc
jb
pop
adc
jmp
lods
sahf
xor
inc
aad
std
movsb
cmp
pop
mov
xor
popf
pop
xor
cmp
jecxz
aad
stos
repz
sti
out
inc
stos
jno
call
push
mov
or
cmp
daa
and
popa
hlt
sbb
mov
nop
in
nop
insl
clc
xchg
pop
stos
dec
push
popf
jp
add
cmp
jl
lret
pop
cmp
test
rclb
clc
push
in
mov
in
mov
andl
add
add
in
mov
jmp
scas
nop
sub
lock
int
enter
outsl
mov
jg
adc
xor
pop
sbb
gs
pushf
dec
shll
scas
fildll
inc
jno
insl
add
ljmp
xchg
jmp
out
jbe
jns
pop
xlat
lds
xchg
pop
mov
repnz
pop
add
push
jmp
mov
and
inc
pop
repnz
sbb
and
lret
mov
sbb
in
xchg
xchg
mov
data16
in
jne
fwait
lret
mov
das
sub
lea
pop
je
and
iret
in
xchg
dec
nop
ja
pop
xchg
fisubl
cmpsl
outsl
jbe
mov
xchg
sub
jno
aaa
xchg
in
push
cmp
ret
jl
cld
or
bound
fmulp
repnz
daa
insb
mov
fimuls
shll
icebp
dec
test
and
out
jmp
dec
cmpsb
jl
mov
push
mov
movsl
movsl
or
into
loope
push
add
dec
jp
jnp
push
aas
popw
sub
dec
lcall
repz
push
mov
and
insl
cltd
and
mov
mov
ja
cmc
dec
inc
and
inc
and
ss
outsb
dec
test
dec
pop
in
jmp
pushf
or
xor
ficoml
nop
xchg
bound
cld
xor
inc
jno
pop
dec
inc
inc
push
outsl
adc
lret
lahf
dec
cmp
jbe
and
call
mov
mov
adc
je
or
dec
stos
xchg
inc
ret
xchg
xor
lea
and
out
inc
out
outsl
push
push
mov
push
push
test
shlb
mov
enter
cmp
sub
scas
xor
adc
out
push
fwait
es
add
fidivrs
rol
sub
jae
mov
jl
fidivrs
adc
mov
movsl
mov
inc
mov
push
push
pushf
aad
adc
pop
ret
push
jbe
xor
add
push
int
mov
mov
cs
lcall
mov
andb
pushf
jnp
mov
add
dec
add
ret
popf
addl
xchg
sbb
or
into
js
ret
icebp
cltd
or
and
xchg
stos
movl
xchg
inc
adcl
xor
iret
int
jmp
inc
and
push
mov
sbb
out
fldt
inc
pop
fdivr
in
jbe
sti
daa
push
mov
sub
push
inc
mov
popa
aam
popf
mov
cmpsl
cmpsb
lea
ds
cmc
jg
test
call
and
pop
pushf
cmp
repz
xchg
mov
pop
jb
mov
popf
jae
xchg
ds
mov
mov
call
lock
mov
iret
ds
mov
mov
pop
sub
xchg
mov
or
shlb
stos
insl
in
int3
ret
add
mov
cltd
mov
aam
sub
iret
rclb
lret
enter
lock
push
scas
or
and
push
ss
sub
push
pop
sub
add
sbb
clc
pop
out
mov
in
in
mov
lock
cmpsb
mov
xchg
xchg
mov
mov
lods
hlt
in
dec
and
test
es
js
pop
inc
iret
xchg
mov
sub
xor
dec
dec
inc
xchg
inc
enter
js
xchg
pop
je
loopne
xor
pop
inc
and
dec
mov
pop
popf
mov
jle
pushf
gs
mov
add
in
fildl
dec
int3
call
ss
cmp
enter
jg
stc
popa
popa
test
nop
jmp
test
mov
sar
mov
enter
popl
mov
sbb
cld
add
cmp
pop
lcall
mov
test
xor
xchg
cmpsb
je
and
int
jge
push
adc
test
mov
out
lret
mov
scas
out
scas
fwait
popf
out
dec
jns
das
mov
inc
nop
jne
int3
sub
lea
ja
jno
mov
mov
lock
in
rclb
add
loopne
cltd
sub
scas
dec
mov
fwait
xor
negb
dec
inc
lcall
mov
arpl
inc
insb
inc
ret
xor
sbb
xorl
fs
repz
pushl
cmp
icebp
dec
repz
mov
sahf
mov
and
adc
call
xor
cmp
in
popa
mov
out
add
xchg
inc
lret
inc
les
iret
jge
add
xor
mov
dec
or
scas
fidivs
push
in
jge
dec
aas
les
fdivl
je
or
dec
inc
adc
movsb
mov
mov
std
fcoms
loope
in
mov
pushf
int3
adc
loope
add
and
setl
daa
ffreep
push
addr16
fmuls
loop
cs
std
cltd
addr16
mov
pop
aam
sub
jecxz
outsl
push
stc
pop
clc
scas
lret
rorb
clc
test
sub
xchg
out
or
or
sub
mov
jecxz
nop
jp
pop
xlat
orb
aas
pop
js
sub
xchg
sbb
test
fs
cmp
cld
xchg
mov
jp
lcall
fwait
mov
leave
add
fwait
mov
std
xor
sbb
hlt
out
fimuls
pop
cld
push
and
repz
lahf
sahf
jmp
cmpsb
mov
ja
ret
hlt
push
adc
in
leave
pop
mov
scas
jo
mov
mov
enter
aam
push
lods
jg
divl
pop
popf
mov
inc
mov
sub
in
fisubl
sbb
cmp
ficompl
push
pop
xchg
mov
xchg
addr16
push
sub
push
sahf
sbb
mov
pushf
loope
jge
xchg
dec
mov
ret
mov
int3
cmc
lods
sbb
aad
push
and
push
test
jae
mov
lock
xchg
pop
xchg
add
loop
es
nop
movsl
dec
xchg
ss
sbb
mov
xchg
and
iret
xchg
rcl
jp
jp
js
out
fs
ss
scas
stc
lret
fwait
mov
mov
jnp
dec
or
xchg
not
into
jae
inc
xchg
mov
pop
ret
nop
sub
loopne
clc
popf
ss
jmp
dec
outsb
sub
rclb
popf
lret
mov
pop
loope
mov
pop
push
les
cmpsl
test
out
iret
aaa
fisubl
xchg
leave
shrl
lods
sbb
push
lret
sbbl
and
push
lods
jno
xor
and
cs
pop
out
insb
xor
sub
inc
mov
