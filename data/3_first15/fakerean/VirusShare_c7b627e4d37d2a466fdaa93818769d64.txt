sbb
add
mov
mov
xor
pop
xchg
or
shlb
das
imul
cmp
dec
popa
mov
pop
add
xlat
sbb
inc
mov
mov
clc
xchg
sbb
inc
cmp
lcall
push
mov
lahf
adc
sbb
pusha
out
push
sub
xor
and
cmp
lret
popf
pop
icebp
mov
scas
sbb
xchg
adcl
cmp
lods
jmp
ljmp
jge
pop
frstor
outsb
ljmp
xchg
jl
mov
dec
dec
mov
fwait
cmp
movsl
mov
popa
aas
jp
cld
notl
cwtl
push
and
mov
or
lahf
cmpsl
test
push
jb
lret
movsl
xlat
cs
clc
test
movsl
and
sti
les
or
sbb
push
gs
push
scas
add
inc
sub
inc
es
and
cmpsl
in
out
mov
ret
cmpsl
pushf
jecxz
ss
loop
aaa
sti
mov
mov
enter
cmp
sarl
mov
or
outsl
imul
fimull
iret
loope
mov
mov
mov
mov
inc
fcomps
shl
pop
jo
adc
lret
mov
stos
ror
sub
pop
in
insb
scas
push
jecxz
fs
testl
stos
nop
iret
arpl
xor
andb
adc
leave
dec
or
in
dec
mov
jmp
or
cld
mov
mov
movb
test
mov
jp
mov
inc
sbb
lcall
lods
stc
cld
lods
out
or
push
insb
int
inc
xlat
mov
xor
test
jecxz
shl
stos
or
mov
ljmp
xchg
sbb
out
imul
sarl
mov
iret
xor
mov
jmp
add
jnp
fdivrl
sbb
mov
pop
and
lahf
sbb
or
push
xchg
mov
int3
lret
inc
in
adc
inc
inc
sbb
add
cwtl
fisubs
jp
sbb
xchg
mov
or
fwait
cmp
add
lahf
pop
adc
fnstenv
ja
into
cwtl
xchg
mov
mov
nop
inc
sti
outsl
add
pop
mov
lods
sbb
lods
nop
lahf
push
jbe
and
std
cmp
push
aas
mov
movsb
iret
ret
sub
test
mov
pushf
cwtl
dec
lret
mov
pusha
enter
sbb
lock
lods
sbb
mov
push
shrb
and
sbb
rolb
push
outsb
out
sub
pop
rcrb
mov
add
mov
out
jns
jg
out
lds
push
punpcklwd
push
outsl
xchg
pop
mov
pop
sbb
push
pusha
and
sti
sub
scas
inc
or
subl
push
mov
pop
xchg
leave
adc
out
pop
inc
cmp
jecxz
cmpl
sbb
outsl
lret
mov
lcall
add
push
in
iret
mov
dec
xchg
pop
das
mov
in
xlat
dec
sub
sub
and
mov
nop
mov
outsb
mov
dec
jmp
push
ja
insb
push
dec
shl
pusha
mov
jb
mov
call
inc
inc
sti
imul
push
mov
fadd
xor
sub
push
mov
mov
push
sbb
rcrl
pop
sbb
mov
adc
pop
lods
adc
aad
mov
cs
mov
xchg
jne
stc
cmp
cltd
pop
sub
sub
popf
pop
sahf
or
test
jo
aad
mov
repz
mov
test
cmpl
fbstp
pusha
sub
rorb
mov
and
inc
hlt
dec
dec
mov
sarb
aad
sti
movsl
test
mov
mov
lret
stos
shrb
xor
gs
or
inc
in
pop
arpl
in
js
add
fisubrs
sbb
std
mov
sti
iret
mov
lahf
jbe
das
mov
inc
addr16
hlt
loope
or
inc
xor
mov
std
pop
sti
repz
pop
adc
cmpsl
pusha
lods
les
cld
and
movsb
mov
lcall
test
jmp
fwait
ret
jo
ljmp
icebp
jecxz
sarb
inc
fnstcw
out
inc
jge
loope
cwtl
mov
js
rorl
cmp
cmp
mov
int3
and
lret
xlat
adc
jns
cwtl
mov
js
les
sahf
cs
iret
dec
cmp
fwait
push
or
adc
fs
add
cld
imul
and
ljmp
rcrl
cmp
insb
mov
cmpsl
dec
jle
xchg
push
and
add
jns
and
mov
or
insl
dec
sbb
es
rcr
xor
and
sbb
xor
jmp
jbe
adc
mov
push
jl
clc
mov
lock
add
mov
cmc
sbb
repnz
adc
notb
fs
add
lds
bnd
pop
add
mov
in
clc
push
fcoml
cmp
out
mov
dec
mov
xchg
jl,pt
ret
ret
cmp
mov
in
shlb
inc
add
in
mov
jp
inc
or
movsb
push
arpl
jmp
cld
test
cli
loop
xor
ror
push
sti
pop
imul
out
xchg
fsubs
mov
sub
imul
jmp
inc
mov
push
inc
dec
repz
mov
js
pop
dec
xor
out
sub
in
into
cmp
dec
adcb
stc
jl
and
fwait
inc
out
mov
inc
test
icebp
xor
push
ss
movsl
cmp
shll
leave
scas
scas
sbb
adc
cmpsb
notl
lret
pop
sbb
push
adc
dec
lds
sbb
xchg
std
adc
pop
jmp
inc
cmc
stc
dec
or
outsb
xor
inc
std
inc
sub
mov
mov
shlb
and
pop
imul
stc
test
mov
mov
push
test
jmp
enter
hlt
xchg
sbb
iret
incl
movl
repnz
mov
and
out
mov
fsubrp
popf
mov
and
stc
das
out
mov
jnp
pop
into
out
jecxz
sbb
hlt
aad
ja
lock
lods
push
aas
adc
sub
or
lods
jecxz
das
fidivrs
mov
push
push
jge
mov
sahf
outsl
or
fildl
push
stos
shl
mov
adc
pushf
push
push
daa
arpl
adc
push
cld
mov
mov
jl
push
jle
xchg
lret
cmp
scas
or
pop
jl
mov
cld
inc
scas
and
jbe
xchg
repnz
mov
in
pop
test
inc
cmpsl
pop
outsb
test
test
inc
push
aas
pop
xor
repnz
xchg
xchg
bound
inc
pop
mov
sub
testb
lahf
push
movsb
jge
xchg
rol
loop
xor
cmc
xchg
imul
push
push
fdivl
cs
pop
xor
push
mov
inc
popa
mov
ds
sbb
pop
out
sbb
ds
sub
lret
push
cmp
pop
inc
fimull
rorl
or
in
xor
popa
popa
push
movsl
test
sbbl
mov
fs
cmp
or
or
cld
ss
fucom
add
push
pop
movsb
jp
mov
jmp
or
add
testb
fists
mov
out
xchg
lock
dec
inc
mov
sbb
out
dec
lret
out
push
xchg
out
test
xchg
and
inc
pop
sub
mov
xlat
add
mov
push
pop
sub
imul
inc
into
shll
xchg
lahf
fidivs
sub
out
es
jp
fcmovnb
call
xor
fs
push
push
data16
sbb
pop
sub
adc
mov
in
jnp
mov
jecxz
ljmp
clc
cmp
mov
sub
cld
cmp
mov
pop
cmpsl
cld
arpl
daa
mov
dec
call
sub
mov
out
ja
or
jnp
adc
xor
inc
cmp
add
sbb
cmp
or
and
push
imul
fistl
stos
and
adc
clc
adc
xchg
sub
in
mov
sbb
je
aad
loop
ror
fld
notl
xbegin
mul
xchg
pusha
clc
mov
int
sbb
loop
mov
std
add
out
push
shlb
rcll
xchg
mov
dec
sbb
ret
inc
adc
cld
adc
test
mov
cs
test
jae
data16
inc
xlat
mov
rcrl
sbb
push
mov
and
and
sub
mov
pop
jnp
add
lods
mov
xchg
cli
xor
pushf
scas
out
push
das
or
sbb
cwtl
cmpsl
cmp
ret
dec
bound
xchg
add
movsl
jb
ficoml
adc
inc
pop
sahf
sbb
loopne
in
es
inc
int
or
psubsb
scas
loop
sub
or
and
fstpt
or
sti
pushf
jg
or
and
inc
mov
sarb
mov
and
push
ret
cltd
test
sahf
stos
mov
fisttpll
cmp
mov
aad
push
andl
mov
fst
sub
stos
test
cmp
mov
insl
repnz
add
jle
out
fcomip
std
arpl
or
std
push
mov
cmpsb
iret
jp
sub
xchg
cld
scas
int
xchg
jmp
inc
pushf
rcll
cli
ret
shll
call
enter
sbb
cltd
repnz
mov
sub
pop
dec
lcall
xchg
shlb
cwtl
add
bnd
faddl
push
mov
inc
inc
jne
sahf
sbb
add
daa
pop
inc
fwait
sub
push
pusha
sarb
mov
jmp
ss
pop
jb
repz
pop
mov
xchg
xorl
pop
std
cld
cmp
in
mov
jp
jb
dec
xchg
aas
stos
out
push
sti
sub
loopne
pop
lods
scas
mov
cltd
mov
mov
scas
jne
leave
loopne
add
push
inc
iret
push
mov
xor
pop
cs
mov
ja
sbb
jb
inc
push
push
cs
cmpsl
mov
cmc
lret
jmp
cmp
fidivrl
mov
xor
sub
mov
push
pop
mulb
mov
mov
mov
shll
xor
xchg
push
testl
sbb
in
xchg
pop
jno
lahf
stos
jb
dec
in
mov
inc
std
mov
jle
dec
in
rol
push
das
push
push
xchg
inc
and
lea
iret
push
inc
ret
sub
jno
add
fmulp
jp
imul
fbld
push
xchg
stc
or
sbb
jge
jns
in
out
int3
mov
lahf
inc
add
mov
or
lret
faddl
pop
push
xchg
xor
jl
mov
iret
xchg
sub
jle
pusha
movsb
mov
cmp
jns
push
mov
in
out
dec
je
add
mov
outsl
pop
jge
dec
jnp
sub
xchg
fcmovb
stos
ja
imul
ja
push
sahf
fdiv
fwait
adc
loop
sbb
scas
jnp
xchg
addl
xchg
adc
sub
aaa
in
call
inc
in
push
push
clc
mov
xchg
shrl
dec
repnz
rcl
push
mov
sti
ds
call
jmp
push
add
lahf
mov
testb
sbbb
aad
outsl
cmc
add
inc
std
jl
jns
xchg
ret
mov
inc
pop
and
sub
ret
and
mov
or
mov
mov
dec
fbstp
push
pop
mov
neg
inc
cmp
hlt
idivl
addb
mov
mov
xor
xor
jg
dec
aas
dec
push
rcr
cmpl
mov
sbb
testb
outsl
dec
and
or
decl
in
pop
and
jbe
fs
mov
repz
int3
ljmp
sub
xchg
aad
push
push
push
dec
xor
loopne
popa
inc
call
in
cmc
out
push
cld
pop
mov
fsubl
rolb
insb
psadbw
aad
ja
jno
adcl
push
push
inc
jne
daa
add
or
movsl
pop
dec
scas
jg
dec
mov
jne
mov
sub
mov
jb
inc
lods
push
dec
mov
inc
mov
dec
lods
xor
popa
fcoml
out
nop
inc
jno
and
adc
xchg
add
or
push
mov
mov
insb
xchg
mov
stos
ja
push
xor
add
test
in
lcall
test
pop
push
nop
cwtl
lock
xchg
popa
cmp
and
jno
or
aaa
sarb
and
adc
jb
inc
jns
adc
mov
aam
push
aad
ja
cmp
push
lcall
xor
cmp
mov
test
push
pop
push
mov
jmp
ja
int3
aas
xchg
cmpsb
jne
xlat
stos
dec
and
lcall
mov
sarb
mov
in
pusha
sub
inc
sbbb
mov
push
lock
daa
push
add
mov
cmpsl
cld
ret
pop
jmp
lods
push
push
loopne
xchg
pushf
mov
push
pop
xchg
mov
ret
or
jo
cmp
cmpsl
sti
outsb
rcrl
imul
data16
iret
pop
lods
cs
lods
ja
xchg
or
rcrb
push
addr16
fstpt
mov
iret
sahf
xchg
lds
mov
mov
or
cmp
in
mov
lcall
pop
out
iret
pusha
mov
add
sub
iret
jge
lods
int3
cmpsl
fdivl
mov
stos
push
xchg
iret
je
add
mov
test
jle
cmc
mov
mov
jb
mov
add
mov
stos
roll
pop
adc
xor
incl
sub
fucomi
subb
pop
or
lock
loop
sbb
std
dec
fbstp
in
sub
ja
fs
mov
dec
rcll
mov
sbbl
addr16
inc
test
cmpsl
scas
dec
shrb
cmp
or
dec
pop
in
mov
and
or
mov
sarb
cltd
inc
mov
outsl
notb
xchg
or
jmp
neg
jle
int
adc
inc
inc
outsl
cmp
icebp
xchg
and
push
dec
std
add
push
cmp
aas
std
mov
mov
call
ja
pop
and
jae
sarb
fsubs
mov
loope
push
inc
dec
sub
cmpxchg
mov
insb
push
insl
scas
daa
xchg
fistps
pop
cmc
lea
into
sub
inc
pop
push
loopne
mov
fsubrl
repz
imul
ss
xchg
jnp
mov
mov
in
push
cmp
pmaxsw
ljmp
jbe
push
jno
jg
jns
push
test
pushf
iret
fwait
jmp
js
mov
adc
loop
fcmovu
mov
fsub
adc
loopne
into
mov
jl
push
bound
mov
cmc
or
adc
lods
mov
stos
pop
mov
push
in
test
lret
jne
outsb
inc
lret
testl
push
loopne
repz
jbe
xor
cmpsb
lods
add
ret
fidivrs
loope
and
adc
dec
push
lods
nop
or
adc
sahf
dec
test
sub
stos
inc
stos
sbb
fisttps
inc
xor
add
int3
loop
stos
out
add
push
jmp
or
ja
cmp
bound
add
adc
ret
fwait
in
mov
les
test
das
cltd
jl
jp
outsb
inc
sbbl
insb
fmuls
jne
and
cmp
xchg
insl
push
dec
mov
dec
dec
push
dec
mov
pusha
xchg
mov
mov
mov
mov
out
inc
std
and
xor
cmp
inc
add
insb
stos
push
daa
mov
sti
xchg
ljmp
out
imul
or
mov
jge
xlat
jmp
xchg
pop
dec
loope
jno
xor
repnz
mov
add
shlb
shll
inc
add
pop
xchg
stc
cwtl
or
mul
mov
arpl
stos
insl
cs
or
dec
push
outsb
fcmove
pop
and
pop
lret
mov
outsb
push
test
pop
movsb
ret
adc
fidivl
adc
data16
shrl
jecxz
xchg
subl
xchg
sub
mov
adc
dec
add
andl
fsubl
jp
and
xchg
call
or
pop
adc
xchg
push
icebp
arpl
inc
dec
or
and
das
push
fsubr
mov
push
add
ret
ficoms
sarb
loopne
jle
pop
das
into
jmp
xchg
andl
xchg
dec
pop
outsl
lds
xchg
test
in
mov
jno
fstp
cmpl
lods
leave
fidivl
mov
mov
jle
jmp
lcall
fwait
pop
inc
sbb
mov
in
into
mov
add
shrb
xchg
mov
bound
hlt
fsub
cmpsl
dec
push
popa
cmpsb
pop
mov
mov
shll
or
lock
mov
inc
and
cmpl
inc
mov
mov
fucomip
push
pushf
data16
fmull
xchg
testb
icebp
icebp
bound
cmc
nop
fcom
dec
iret
push
mov
outsl
cltd
adc
loopne
cld
inc
jl
pop
sub
out
inc
inc
mov
in
jecxz
push
cmp
sub
les
sti
scas
and
sub
pop
fmulp
gs
xor
xchg
pushf
test
aas
fcmovu
cmp
push
roll
xchg
adc
test
and
add
cld
in
cmp
in
inc
jnp
inc
mov
in
cmc
adc
pushf
jno
insb
mov
out
xor
jecxz
xchg
shl
add
push
mov
js
imul
dec
jns
mov
rclb
sub
and
xchg
pop
stos
sbb
fwait
mov
jb
mov
mov
test
test
sub
scas
xor
out
push
out
repz
mov
out
out
dec
aaa
test
jns
cmpsb
pop
jecxz
mov
adc
in
dec
shrl
mov
je
inc
jne
je
shlb
sub
aad
fidivs
pop
pop
fnstcw
push
pop
push
adc
ja
dec
stos
cli
outsb
test
ret
mull
jbe
or
mov
pusha
sbb
adc
jge
in
inc
add
pop
mov
dec
push
mov
add
clc
andl
fldenv
dec
cs
mov
clc
add
mov
pop
rclb
push
hlt
mov
lods
push
xchg
inc
sub
dec
nop
shl
add
outsl
cwtl
adc
movsl
inc
pop
mov
add
popa
cmp
inc
addr16
sbb
shrl
adc
fwait
sub
sub
mov
add
push
jg
adc
xor
lcall
nop
sbb
jecxz
sub
cmp
jg
pop
shlb
inc
jno
xchg
stos
insb
gs
std
and
shrb
lods
jno
mov
inc
jl
std
dec
aaa
push
xchg
lcall
arpl
dec
inc
gs
xchg
test
mov
xchg
test
int3
imulb
xchg
push
movl
adc
jo
testb
in
add
and
rcll
sub
jl
mov
push
mov
sarb
mov
cs
scas
outsb
cmpsb
jo
loopne
cmp
mov
sub
pusha
stc
imul
ds
jbe
in
mov
sub
lods
jle
pusha
rcrl
into
leave
add
lods
mov
divl
popa
movsb
xor
cmpsb
loopne
sbb
jl
or
jbe
sbb
sbb
dec
xchg
or
and
cld
pop
rolb
cmpl
subl
inc
pop
jne
xchg
out
jle
push
jmp
leave
or
jmp
mov
adc
rclb
fisubs
adc
movsl
ljmp
and
mov
mov
popa
jo
test
ds
lods
jne
cmpsb
cmp
push
mov
and
lret
std
sbb
mov
push
loop
jg
and
out
jmp
jbe
cmovb
fcmovbe
xchg
xor
jns
lods
jnp
pop
mov
sbb
mov
in
in
stc
popa
push
aad
and
push
fstl
sub
add
cld
hlt
repnz
in
dec
xor
push
aam
cmp
sbb
dec
jge
dec
lret
lock
js
fisubl
and
in
mov
jmp
repnz
dec
ficoms
jne
cwtl
dec
fadds
pop
pop
int
iret
or
xor
fsubrp
xchg
inc
div
jne
cpuid
mov
rol
sub
xor
shlb
shrb
jmp
mov
jl
ss
pop
loop
icebp
add
mov
mov
dec
jecxz
out
jmp
mov
daa
outsl
test
xchg
and
adc
xchg
into
sub
xor
out
dec
pop
mov
incb
pop
xchg
sub
adcl
mov
jecxz
inc
lods
outsl
imull
mov
insl
sbb
pop
sarb
mov
lods
xchg
xorb
and
mov
insl
jns
fcomip
xor
imul
mov
pop
dec
cmp
push
xchg
jno
cmpsl
bound
jnp
push
scas
push
repz
mov
out
fs
cmp
xchg
loope
mov
jo
lcall
cmp
jo
aam
addl
int
cmc
or
push
aas
movsl
push
jp
xchg
addl
ja
and
mov
adc
scas
mov
mov
mov
add
out
xor
inc
sbb
jmp
push
mov
rclb
xchg
push
jno
dec
fildl
xor
cmp
repnz
lret
push
push
mov
aas
in
lahf
ds
pop
pusha
scas
outsb
ret
andb
cmp
adc
mov
lret
cmpsl
bound
fcompl
lods
add
jbe
rclb
mov
xchg
mov
jle
shl
jb
movsl
fnsave
dec
imul
xchg
pop
push
bound
xor
icebp
cmp
imul
push
xor
xor
pop
dec
aas
xchg
adc
pop
jmp
aaa
lahf
fwait
add
mov
shlb
push
ja
out
and
sub
cld
cmpsl
in
cmc
in
add
sub
sbb
sbb
add
ret
insl
xor
dec
lahf
idivl
and
add
dec
mov
pop
jp
add
dec
sbb
jae
ret
xor
sahf
je
sti
daa
pop
pop
cmp
sahf
ja
pop
pop
cmp
sub
xchg
scas
mov
fwait
cmp
icebp
in
movsb
or
shlb
fldt
in
dec
cwtl
pop
scas
xor
ja
fldcw
dec
xchg
adc
cmpsb
fucomi
dec
jae
out
pop
incb
push
jle
aas
in
imull
or
es
in
faddl
movsl
arpl
cli
and
xchg
fucomip
das
add
jb
pop
inc
mov
pop
mov
push
push
outsb
xchg
sbb
int
sbb
xor
lds
dec
cmpl
pop
outsb
sbb
jecxz
scas
test
je
push
cmpb
jle
mov
test
out
mov
mov
xor
jnp
stos
xor
xchg
andl
sub
push
mov
xor
test
adc
lret
adc
inc
pushf
movsb
es
add
push
sub
sbb
dec
daa
jno
movsl
pop
sub
in
mov
xchg
leave
popf
ja
jne
gs
insl
int3
movsb
std
sub
loope
bnd
cmp
cmpsl
js
call
jno
sub
adc
and
repz
fs
pop
xlat
and
jno
mov
negl
mov
sahf
mov
lock
repnz
jns
and
dec
in
pop
cmp
and
xor
jbe
insb
inc
mov
sbb
xor
clc
cmpsl
dec
les
mov
ret
add
mov
cmp
jecxz
cmpsl
rclb
mov
cmp
shlb
pusha
cmp
cmpsb
mov
pop
pushf
cmp
mov
orb
pushf
mov
sbb
in
sti
jns
je
pop
mov
repz
daa
jg
or
add
cmp
xor
das
fldt
movsb
incb
movsl
in
mov
es
outsl
push
mov
loop
shll
pop
clc
mov
jge
out
cltd
xor
xchg
stos
xchg
hlt
lods
adc
adcb
test
outsl
xchg
stos
mov
inc
pushf
mov
fs
jg
adcb
mov
lods
pop
sub
nop
xor
sbb
imul
dec
push
fwait
xlat
sbb
xchg
std
push
enter
bound
leave
mov
je
pushw
enter
leave
mov
add
aad
popf
mov
push
cmp
dec
loop
movsb
sub
xor
iret
lea
repz
add
adc
jnp
aaa
pushf
dec
insb
mov
cmp
enter
pop
inc
lret
mov
sahf
push
stos
stc
xchg
orb
es
cwtl
fstpl
mov
pop
lahf
sbb
mov
or
xor
je
push
xor
mov
mov
mov
dec
sub
loop
xchg
jp
mov
stc
lock
mov
sti
or
repz
adc
pop
sbb
add
aam
mov
test
mov
pop
mov
outsl
pop
nop
push
add
push
insb
add
xchg
lock
dec
scas
mov
jbe
scas
push
dec
lods
push
fsubrl
in
push
mov
mov
and
aad
push
shrb
push
cs
cmp
mov
or
das
dec
jae
cmp
sbb
pop
loop
jle
xchg
push
inc
jmp
and
push
test
repz
mov
push
jnp
inc
repz
lods
scas
jp
imul
movsb
mov
in
lods
outsb
push
sbb
and
shll
xlat
mov
movhlps
gs
add
ja
xchg
pop
jl
aam
je
cmpsl
outsl
push
shlb
pop
out
sbb
ja
mov
xlat
xor
ss
adc
test
adc
mov
xor
cmpsb
iret
sti
mov
push
outsb
mov
mov
jle
das
data16
cs
jno
adc
lods
fsubs
mov
inc
push
add
cmp
sub
sar
or
mov
jmp
repnz
sub
arpl
lret
add
popl
repz
mov
push
rcll
lods
pop
test
and
popf
mov
in
adc
popw
pop
insl
stos
enterw
cmp
push
cmp
and
outsb
sbb
jb
shll
je
adc
sub
pop
xor
iret
mov
lods
jg
cli
leave
in
jb
cmp
cli
mov
mov
ficomps
int3
xchg
inc
int
sahf
or
cmp
adc
lock
shld
add
xchg
sbb
rol
aas
mov
call
mov
sbbl
mov
scas
or
adcb
push
test
push
dec
jl
jo
cli
fldt
das
pop
repz
and
push
dec
test
dec
xor
clc
sub
and
jmp
std
arpl
xchg
insb
sbb
sub
sub
testl
or
out
test
andl
cmp
test
mov
leave
stc
repnz
enter
mov
and
sbb
bound
movsb
incb
clc
jle
mov
stos
push
push
jae
movsb
mov
sub
jo
mov
fdivs
jns
test
push
hlt
fiaddl
call
lahf
nop
dec
ja
pop
cs
jg
pop
fdivrp
cld
pop
lock
jae
adc
adc
xchg
mov
iret
inc
gs
lret
pusha
sbbb
dec
xchg
xchg
lds
movsl
jg
in
sub
cmp
sub
dec
out
sub
icebp
xorl
punpckhdq
lcall
mov
ret
gs
aaa
cli
xor
int
popa
add
scas
subl
lods
int
das
dec
test
test
das
pop
mov
ret
sub
inc
inc
ja
adc
aad
and
adc
fiadds
nop
cld
das
fisttpl
mov
repz
lea
push
pop
popa
jnp
cli
adc
aad
cmpxchg
and
insb
nop
cwtl
cli
mov
sarl
lahf
sub
mov
push
cmp
movsb
lret
inc
jbe
pop
int3
cmp
ret
jo
loopne
cmp
and
je
daa
int
fs
clc
js
cmp
inc
jl
leave
stc
mov
push
test
add
sbb
movsb
fwait
imul
sub
jo
lock
sbb
daa
pop
push
mov
pop
push
leave
jns
gs
out
cmp
lods
adc
xor
and
or
cmp
int
fmull
enter
test
out
data16
xchg
cld
idivb
shll
push
fscale
icebp
pop
repnz
jns
pop
lret
jns
jle
cli
xor
mov
xchg
dec
scas
ss
mov
sar
push
xor
pop
inc
pop
rcrl
mov
push
mov
lcall
xadd
aad
insl
cmp
out
test
mov
outsb
out
xor
mov
es
inc
dec
cmp
adc
xchg
aad
cmp
adc
mov
mul
mov
push
push
sub
xchg
and
push
pusha
mov
pop
outsb
stos
imul
cmp
arpl
into
dec
movsl
aad
xchg
in
jle
inc
dec
jl
mov
xlat
loope
bound
and
xchg
adc
add
sbb
jno
or
test
xlat
jnp
nop
lods
jge
iret
sub
cmpsl
xchg
add
aas
mov
or
pop
sub
sub
stos
xor
mov
push
icebp
xor
inc
loop
push
out
loopne
outsb
call
or
push
jo
ret
mov
in
mov
mov
lret
or
popl
lods
aaa
js
test
xor
xor
jb
xchg
mov
call
cmp
rcll
jae
push
fcompl
push
dec
xchg
insl
jge
adc
and
jle
pop
lret
or
pop
lds
cmp
push
jne
and
mov
xchg
bound
out
jns
or
or
dec
in
sti
repz
jecxz
popa
fs
movsl
jne
push
cmp
mov
jne
jge
test
js
mov
jnp
dec
mov
cld
sti
dec
mov
dec
xlat
mov
lock
movsl
lea
or
rcrb
enter
xchg
mov
mov
xchg
dec
xchg
ljmp
sahf
test
lock
int
jp
mov
jmp
fldt
lods
iret
mov
iret
cltd
call
and
jmp
sarl
push
fwait
out
imul
fists
movsl
fwait
push
cmp
pop
xchg
mov
aam
insb
fidivrl
rorb
push
dec
xor
jo
pop
loope
testb
dec
decl
adc
dec
xchg
fsubrl
sbb
insb
insb
jg
inc
cmpsb
cmc
jmp
add
inc
scas
int3
xor
notb
jno
lret
inc
xor
fidivrs
jge
insb
lcall
mov
mov
decl
sub
pushf
add
xor
scas
lcall
xchg
shll
mov
fistl
test
test
outsl
xchg
xchg
je
cmc
inc
loope
nop
cmp
ss
mov
in
insl
ja
nop
cmp
mov
repz
adc
scas
std
adc
mov
cmp
and
data16
cld
pop
inc
pop
and
cmc
jbe
mov
mov
dec
cmpsl
ljmp
mov
pop
sub
pop
push
jnp
lret
push
sub
mov
int
movsb
fidivrl
leave
jecxz
add
ficompl
loopne
pop
or
in
je
outsl
lods
rclb
jb
popa
xchg
loopne
xchg
sub
sbb
or
pop
sub
mov
aad
das
imul
fwait
mov
sbb
fcomp
sbb
fdivs
and
add
and
fcoml
cli
mov
mov
jae
pop
movsb
mov
xor
dec
push
lock
sbb
mov
in
inc
mov
sbb
inc
mov
adc
fidivrs
xchg
divl
subl
mov
mov
pop
fiadds
dec
bound
mov
jg
mov
and
gs
lock
xchg
xor
adc
adc
fistps
sub
leave
mov
sbb
loop
jb
movsl
pop
pop
dec
dec
dec
push
dec
mov
sbb
add
imul
enter
inc
daa
dec
arpl
dec
aas
mov
mov
and
mov
gs
test
or
mov
cmpl
xor
in
cmpsb
mov
and
icebp
mov
loopne
inc
daa
pop
pop
jne
shlb
js
xor
jnp
sbb
mov
xlat
xor
cmp
lds
sbb
xor
mov
push
dec
jl
loop
negb
and
add
nop
or
sbb
lds
enter
aaa
fdivs
pop
in
add
or
xlat
jecxz
ja
sahf
adc
add
mov
inc
gs
les
pop
adc
push
and
push
push
mov
les
mov
popa
call
sbb
add
ss
mov
ljmp
adc
push
sti
adc
shrl
fidivl
pop
clc
pop
stos
mov
push
daa
xchg
pop
out
in
mov
out
std
mov
mov
mov
inc
arpl
push
std
xchg
shrl
jl,pn
pop
mov
jecxz
fadd
cmpsb
and
inc
mov
mov
js
rcll
shll
repz
aaa
pop
fisubrs
push
mov
es
fwait
pusha
xchg
dec
mov
filds
mov
or
outsb
movl
cwtl
pop
inc
test
cltd
jb
sub
add
pop
xchg
push
xor
mov
sbb
movl
notl
jle
scas
jl
inc
and
mov
add
enter
jle
sahf
or
mov
cli
push
shl
push
outsl
gs
add
jnp
das
adc
push
movsb
mov
jp
xchg
lods
cmpsl
jp
mov
fnop
cltd
lret
mov
lcall
fcoms
lea
je
sub
stos
jnp
pushw
mov
sarl
std
les
lods
aaa
or
test
jmp
push
and
ds
sbb
sbb
jo
imul
inc
cmc
int
adc
add
imull
sub
popa
xor
cwtl
enter
mov
popw
add
push
add
mov
stc
subl
andl
adc
cltd
out
or
out
sub
push
mov
push
outsl
jno
loop
inc
mov
mov
jns
out
movsl
sbb
inc
loop
dec
insb
pop
add
mov
nop
add
xchg
bound
mov
cld
adc
lods
scas
pop
dec
or
dec
push
popf
sub
mov
pop
fistps
jecxz
push
clc
pop
push
sub
xchg
sub
mov
mov
jmp
iret
jnp
pop
popa
add
js
out
ds
push
popa
in
sbb
aad
int
pop
add
jo
xor
xchg
outsb
into
sbb
movsl
push
popf
fstl
dec
xchg
add
sub
mov
sbb
cmpsl
jb
scas
or
lea
aad
pop
mov
movsb
jmp
push
xchg
pop
mov
sbb
mov
popa
sbb
repnz
test
inc
dec
ss
jbe
and
in
jno
xchg
xchg
test
mov
push
cmp
cmpsb
pop
add
mov
sti
pop
test
cmp
xchg
xchg
sbb
mov
mov
fdivrl
inc
add
in
pusha
loope
pop
mov
dec
insl
xchg
sbb
test
or
push
dec
xchg
into
sbb
pop
and
push
or
xchg
pop
daa
add
mov
je
fistpll
dec
into
mov
orl
cmp
sub
push
adc
je
les
dec
sti
pop
jl
aam
push
movsl
fdivrl
mov
test
lahf
jmp
mov
leave
scas
test
and
adc
movb
dec
shll
push
cmp
stos
out
mov
cmovno
and
aaa
cmp
dec
ret
sbb
push
push
decb
sbb
mov
lret
mov
lcall
dec
enter
dec
bswap
jp
xchg
lea
loopne
adcb
ror
repz
mov
pop
jb
insl
ljmp
dec
adc
push
push
bnd
adc
negl
cmpb
loop
adc
adc
scas
and
and
fidivrs
add
mov
push
mov
sbb
mov
ja
or
shl
cmpsb
xchg
or
je
inc
shrl
das
outsl
and
mov
add
sar
insb
inc
mov
xor
xchg
mov
in
inc
mov
push
call
shrl
cmp
push
test
xor
push
mov
mov
jge
repz
xor
adc
bound
ffreep
scas
sbb
loop
xor
mov
movsb
or
adc
mov
pop
xchg
les
outsb
fwait
pop
mov
and
mov
gs
rorb
orb
js
dec
dec
test
cmp
mov
in
push
push
clc
je
out
and
ja
lcall
js
mov
and
jmp
pop
adc
movsb
push
icebp
andb
fs
iret
pop
filds
fildll
lock
mov
in
in
sub
pop
mov
ss
inc
mov
lahf
call
mov
push
push
and
xor
cli
cmp
mov
mov
cs
xor
data16
rorl
mov
add
inc
insl
lret
popf
outsl
testb
dec
xchg
outsb
or
call
test
lret
mov
addr16
sbb
add
xor
mov
and
sub
push
ret
popa
pushf
xchg
jle
sti
lcall
adc
sbb
loope
inc
movsl
pop
or
mov
push
in
out
adc
fisttpl
repnz
xor
jg
xorl
fcom
sub
faddp
pop
ja
xorb
and
test
mov
std
dec
xor
xchg
nop
pop
leave
xchg
mov
mov
adc
cli
fldcw
pop
outsb
pop
mov
mov
mov
scas
mov
pushf
shrl
push
mov
cmp
lds
cmpsb
sub
scas
stc
shlb
xchg
mov
loope
or
inc
ljmp
int3
sahf
into
fdivrp
pop
xchg
lret
out
shl
fs
pop
add
xlat
rolb
lcall
push
fmull
jbe
cmp
pop
add
cwtl
xchg
and
cli
arpl
and
loope
mov
xchg
ficomps
xlat
mov
inc
fs
sbb
sub
fdivs
ret
xor
push
js
add
xchg
faddl
push
leave
scas
mov
in
jne
loop
stos
mov
mov
or
loope
inc
push
push
daa
lcall
das
and
cmpb
add
sub
movsb
out
jno
fimull
fimull
pop
pop
dec
pop
in
mov
stos
loopne
push
or
test
dec
push
aaa
in
lea
mov
cmp
fxtract
sub
pop
cmpsl
and
mov
jle
sahf
mov
ret
xchg
fistl
fcomps
repnz
push
and
xlat
negl
sub
mov
sbb
push
cmp
cmp
pop
enter
push
mov
ficoml
test
orb
mov
cmpsl
inc
scas
and
shrl
lret
lods
mov
pop
push
icebp
daa
jne
pop
std
dec
or
ja
xlat
aas
mov
pop
adc
mov
fcomip
les
mov
aaa
in
push
addr16
add
in
filds
fistpll
lds
in
jge
jb
mov
push
inc
mov
sti
insb
pop
repnz
addr16
aas
insb
inc
icebp
nop
test
enter
inc
cmc
lock
mov
repz
lea
lods
aad
xchg
loopne
idivb
icebp
cmp
sbbl
loope
inc
stos
ds
adc
pop
imull
cld
mov
imul
icebp
inc
int3
mov
jg
mov
add
imul
mov
sub
je
mov
dec
scas
mov
xor
test
mov
cli
xor
mov
mov
sbb
push
movsl
jmp
mov
leave
cmp
and
jecxz
gs
jl
cmp
pop
movsl
and
mov
fnstcw
jns
mov
shlb
xchg
jl
mov
dec
mov
xor
data16
xor
mov
imull
repz
fnstcw
and
hlt
cmp
cmpsl
lea
mov
mov
pop
sahf
data16
jle
push
ljmp
out
ljmp
imulb
inc
hlt
lods
aad
lds
imul
mov
or
mov
mov
addr16
inc
idivl
jne
push
and
mov
dec
adcb
mov
inc
test
cmpsb
xchg
and
inc
aam
enter
loope
push
movsb
cmp
sub
and
push
jno
mov
jnp
bound
clc
out
stos
js
jo
aaa
mov
jnp
leave
adc
test
or
sbb
dec
add
jns
stos
and
int3
popa
subb
jecxz
jb
stos
mov
and
cmp
dec
jmp
or
push
cmpsl
in
push
xor
sti
pop
out
adc
pop
mov
ja
lods
insl
jns
enter
sahf
test
mov
mov
mov
scas
imul
or
out
stos
mov
push
sub
rol
lret
and
or
mov
xchg
fistpll
or
ficomps
icebp
push
mov
add
cld
xchg
pop
aas
jp
push
lods
popa
push
dec
jp
adc
mov
pop
sub
add
or
dec
or
adc
cli
sbb
lods
inc
sub
fistpl
cmp
mov
jmp
fs
adc
adc
xlat
mov
out
leave
dec
bound
and
mov
xchg
xor
inc
sar
and
pop
outsb
pusha
test
lds
test
push
out
xchg
and
dec
add
shlb
mov
jmp
or
addr16
mov
push
movsb
iret
mov
push
fldln2
clc
pushf
mov
jns
and
loope
adc
cwtl
outsl
dec
dec
loop
pop
and
hlt
jecxz
pop
lods
and
out
push
pop
data16
xchg
cwtl
out
mov
andl
clc
jg
adc
test
sbb
cmp
loope
mov
call
push
cld
dec
pop
sub
in
in
push
push
push
loope
sbb
andb
loop
daa
jl
aam
mov
popf
test
add
fmulp
mov
test
cltd
pop
out
pop
fwait
pop
movsl
leave
xor
movsl
adc
scas
lea
repnz
and
cld
or
pop
inc
filds
push
sbb
and
dec
arpl
xchg
push
cmpl
loopne
test
jl
inc
mov
ret
and
cs
lock
jno
fdivs
dec
clc
enter
add
sahf
adc
dec
push
add
arpl
in
xchg
das
xor
es
outsb
xor
mov
xor
aas
shlb
in
xor
dec
pop
aad
pop
fs
shl
insl
mov
js
or
arpl
or
pop
popa
stos
add
repz
or
fsubp
pop
stos
sbb
fcmovbe
jp
mov
adc
frstor
in
repz
push
in
loope
sub
sub
cltd
mov
movsl
sahf
push
call
inc
dec
and
jbe
xchg
lret
aad
cli
mov
or
leave
jmp
pushw
push
sbb
add
scas
stos
imul
clc
mov
pop
pop
icebp
adc
push
cmp
xchg
test
icebp
ret
mov
and
cmp
and
iret
les
xor
fidivrl
loope
jecxz
ret
push
js
pop
leave
sub
add
test
jge
push
ds
dec
pop
cltd
je
inc
mov
xor
sub
dec
fldt
push
xor
ror
push
jno
sub
fsubrl
mov
call
push
sbb
push
xor
fcompl
xchg
shrl
rclb
in
fs
cmpsl
and
loopne
push
imul
popf
pop
imul
mov
push
mov
out
mov
pop
xchg
aas
mov
mov
fmuls
cmp
stos
lea
popf
inc
arpl
sarb
push
jo
jl
and
adc
mov
push
inc
ret
out
or
hlt
sbb
jge
mov
lret
hlt
repnz
mov
xlat
jne
aad
ja
xorb
adc
test
sub
sub
clc
xchg
pop
outsl
pop
xor
cmpsb
pop
aaa
adc
int3
lds
movsb
sahf
jle
cld
xor
pop
sub
dec
or
int3
inc
xor
arpl
adc
jbe
ficomps
inc
cmpsb
lds
mov
js
loopne
xor
gs
lret
add
mov
mov
shll
jb
icebp
popf
lahf
inc
ficoml
and
mov
adc
je
mov
sub
push
lret
inc
bndldx
mov
or
repnz
aam
dec
push
xchg
daa
out
jle
mov
imul
push
fcmovbe
jge
pop
int
or
sub
and
mov
stc
ss
add
lock
inc
mov
or
ljmp
nop
jns
dec
sbb
lcall
aas
ret
sub
test
sub
dec
mov
scas
or
xor
sub
jo
lock
int3
xchg
jbe
lea
inc
jb
push
jbe
shrl
lahf
push
mov
inc
pop
jp
int
push
fsubr
outsb
push
imul
dec
push
lea
inc
lock
push
xchg
adc
loop
jo
lahf
ds
cmp
iret
ljmp
cltd
arpl
adc
sbb
sti
dec
pop
out
les
int3
andb
aaa
fidivrs
sub
or
inc
sub
inc
xchg
outsb
cli
jl
mov
sbb
push
repz
shlb
int
pushf
mov
add
mov
adc
int3
mov
repz
or
gs
cmpsl
mov
push
imul
imul
popl
gs
mov
fwait
into
inc
dec
inc
movsb
nop
ljmp
mov
js
sbb
push
jbe
or
push
add
outsl
mov
adc
lea
pop
mov
push
ds
es
or
jmp
inc
stc
nop
int
xchg
stos
mov
and
stos
jl
xchg
adc
ljmp
xlat
push
pop
push
cmp
mov
aad
sub
mov
cld
mov
sti
imul
xchg
mov
mov
inc
ds
mov
je
mov
inc
lcall
sub
dec
es
mov
roll
mov
sub
jbe
cli
adc
adc
inc
add
ljmp
inc
sub
out
add
cwtl
mov
sub
fldl2t
inc
cwtl
mov
mov
jle
jnp
sub
push
pop
fdivrp
mov
push
adc
bound
jmp
cmp
pop
xchg
push
negb
fisttpll
loop
xchg
mov
or
inc
xlat
sub
jno
jmp
cmpsb
lods
out
mov
dec
scas
adc
push
lock
mov
cmp
dec
mov
sbb
stos
arpl
data16
pop
pop
loope
insb
mov
jns
push
outsl
push
mov
jp
pop
sub
dec
push
push
xchg
ss
jg
ss
bound
xchg
xor
jle
ds
enter
loop
je
lea
or
and
or
sub
inc
jo
ret
inc
scas
mov
push
pusha
xchg
js
hlt
mov
sub
test
add
mov
mov
xchg
iret
mov
mov
stos
sarw
js
and
sub
imul
ret
aad
xchg
inc
out
cltd
in
movb
hlt
mov
inc
ror
xchg
pop
xor
or
cmp
push
sbb
ffreep
lock
pop
cmp
bound
lods
enter
xchg
sub
jnp
js
daa
mov
bound
xchg
mov
in
lods
pop
and
aam
xor
mov
mov
cmpsb
lock
les
mov
pop
push
jmp
dec
xchg
dec
call
inc
adc
stc
es
and
pop
lods
mov
jp
stc
jo
ljmp
popf
out
mov
addr16
mov
jle
xchg
cmp
xchg
pop
stc
incb
idivl
daa
movsl
pop
push
dec
in
jno
adc
lcall
arpl
xor
push
out
pop
arpl
adc
sbbb
push
adc
dec
out
mov
nop
and
ljmp
scas
gs
jno
xchg
std
push
lahf
or
cmpsb
push
popf
pop
mov
jns
or
jbe
and
and
jns
jns
int3
push
and
aas
int
ss
bound
pusha
pop
dec
in
loope
cmpsb
xchg
and
mov
jnp
push
ljmp
sub
pushf
push
pop
mov
sub
jns
cmpsl
js
push
loope
pop
flds
in
cmc
mov
arpl
movzwl
shlb
inc
or
das
jmp
or
sub
pusha
cmpl
outsb
sbb
bound
mov
push
mov
lret
lds
out
sbb
jae
lds
jnp
add
in
xchg
add
xchg
cmpsb
shl
mov
gs
xor
add
lock
in
mov
sbb
xchg
jl
jg
or
jmp
ret
scas
mov
mov
movsl
enter
xchg
stos
nop
mov
cmp
daa
imul
jb
mov
xor
mulb
mov
lret
xcrypt-cbc
cmpsl
push
cmp
ret
xchg
inc
xchg
aaa
adc
inc
addr16
sahf
jnp
leave
mov
mov
hlt
cltd
nop
cmp
testb
in
cmp
dec
stos
ss
xchg
jb
jbe
iret
cld
testb
mov
inc
pusha
jns
push
jnp
mov
andl
adc
repnz
inc
push
aam
dec
out
and
push
or
pop
mov
push
or
ret
jnp
stos
inc
popa
cmpsb
nop
mov
dec
and
mov
sahf
adcb
inc
add
jle
inc
add
fldenv
inc
out
xchg
ret
lea
test
rcrb
inc
mov
ret
je
out
cmp
shlb
daa
push
fwait
inc
push
adc
jp
and
xchg
ficomps
stos
push
xchg
outsl
mov
add
ja
mov
mov
sub
jg
push
outsl
mov
xchg
xchg
ret
nop
push
or
push
popa
jne
mov
outsl
and
mov
fistpll
fs
enter
sti
in
push
jae
insl
popa
lds
es
and
scas
jnp
add
or
mov
mov
notl
jae
inc
les
stos
jp
js
sbb
test
add
jmp
jmp
in
add
jge
inc
subl
mov
adc
xchg
test
daa
mov
enter
push
jno
sub
sbb
sub
adc
or
sub
lretw
outsl
in
xor
fs
sbb
jecxz
xor
pop
mov
mov
pop
popa
leave
fstpt
and
outsl
mov
repnz
add
mov
xor
aaa
mov
sbb
jo
neg
xchg
mov
pop
lret
pop
movsl
fs
add
hlt
dec
ficomps
fsubrl
mov
xor
jb
mov
adc
push
adc
inc
stc
mov
testl
cmp
loop
adc
or
fidivrl
or
push
cltd
pop
push
clc
mov
adc
mov
cli
lds
out
mov
fbstp
and
cmp
ss
inc
or
sbb
mov
pop
ja
dec
mov
js
mov
sub
test
jg
sbb
push
popf
loope
inc
loopne
mov
idivb
jbe
mov
xchg
pop
test
xorb
xor
xchg
mov
adc
outsl
out
mov
xor
mov
adc
pop
pop
lods
mov
lds
cmpsl
push
add
pop
lea
test
dec
incb
ja
sub
scas
shll
cltd
inc
pop
subl
pop
or
test
cmp
pop
es
pop
xor
enter
das
iret
mov
xor
cmc
sub
shll
outsb
cmp
es
mov
ret
shll
mov
imul
mov
aas
mov
push
or
sbb
loopne
adc
test
jne
sub
jp
xor
outsb
mov
test
mov
cmp
popa
push
test
insl
or
clc
jno
pop
repz
sub
inc
rcrl
jns
iret
in
pushl
add
lock
jmp
mov
sub
sbb
faddl
test
ss
sub
adc
mov
out
push
ds
mov
popf
xor
cld
push
jns
imul
add
jns
insb
cld
cmpsb
jmp
popf
nop
push
sub
aaa
jae
mov
scas
out
dec
inc
int
aaa
jle
pop
scas
jb
shll
callw
jbe
dec
fcoms
outsl
push
ret
iret
subl
jmp
std
inc
mov
mov
out
or
shr
add
lds
push
jle
lods
sub
push
les
pop
mov
outsb
or
cmp
mov
inc
jns
push
in
dec
cmp
jns
xchg
aad
movsl
jl
pushf
movsl
pcmpgtw
jo
cltd
daa
sbb
std
mov
dec
sbb
test
fiaddl
xorb
negb
xchg
and
or
ret
fldt
imul
mov
sub
shl
daa
fsub
dec
addb
push
sahf
mov
in
loope
ret
adc
rclb
fwait
scas
call
push
pop
out
addl
or
jmp
fstps
je
out
and
rolb
sbbl
or
pop
mov
push
pop
adc
js
iret
jecxz
aas
xor
or
mov
addb
mov
loope
or
cmp
adcb
int
icebp
out
sbbl
and
out
xchg
pop
sbb
aaa
or
mov
stos
inc
and
aas
loopne
and
xor
out
aas
sarl
mov
mov
or
cmpsb
dec
sub
fimull
add
jb
lods
pop
adc
xor
xor
push
push
ljmp
int
pushf
lret
ret
loopne
gs
mov
lods
lret
std
mov
mov
aam
pop
rorl
inc
pop
and
jg
sub
inc
adc
jnp
dec
mov
push
arpl
dec
fisttpl
or
mov
or
ljmp
rcll
jne
out
xchg
dec
enter
jmp
mov
sbb
and
shlb
imull
cmpl
sahf
lcall
out
jne
inc
jno
lahf
inc
xchg
pop
mov
out
mov
mov
sub
lds
inc
jmp
jns
add
mov
add
dec
mov
lahf
fisubrl
and
outsl
loop
cmp
adc
hlt
mov
shll
imul
and
dec
arpl
xor
ljmp
mov
cmc
stos
sub
mov
push
sbb
push
add
cmp
int3
sub
mov
leave
aaa
cmpsb
and
js
dec
lds
mov
xlat
repz
jo
add
adc
xchg
or
adc
xchg
jp
arpl
sbb
push
insl
in
roll
dec
xchg
mov
iret
lods
mov
sub
mov
mov
test
movsb
sub
sbb
mov
push
dec
xchg
dec
cld
sub
xchg
and
pop
hlt
fistpl
sti
dec
mov
cmp
or
mov
inc
add
adc
hlt
sarb
sub
ljmp
jae
push
call
lcall
cltd
ret
jecxz
xchg
mov
mov
pop
xchg
dec
add
jl
pop
add
cmp
rolb
fs
mov
inc
mov
divl
outsl
mov
aas
in
rolb
push
outsb
pop
adcl
add
test
ss
cmp
ret
fwait
je
mov
add
xlat
pop
les
push
test
call
inc
es
xor
jno
jbe
sub
in
mov
or
jecxz
mov
subl
int
hlt
jl
mov
arpl
mov
cmp
cmp
notl
js
mov
mov
addr16
mov
and
add
negb
mov
lea
mov
push
or
mov
mov
mov
inc
pop
pop
mov
jp
sbb
xlat
xor
outsb
inc
in
and
dec
cmp
inc
mov
call
addl
repz
daa
and
iret
pop
mov
shrl
repnz
out
lea
cmc
lcall
outsw
xorl
sti
sahf
in
push
sbb
push
inc
sbb
or
sub
xchg
add
jecxz
stos
xchg
outsb
aad
xor
sbb
sub
repnz
mov
in
sar
or
enter
xor
xchg
out
push
inc
cmp
cli
adc
imul
or
test
xor
xchg
inc
or
daa
insb
pop
into
in
xchg
fwait
leave
test
sub
gs
es
scas
mov
mov
mov
aam
dec
add
sub
jns
add
fsubl
xchg
cmp
nop
and
sub
imul
adc
in
xchg
mov
xlat
add
mov
and
mov
int3
inc
dec
rcrl
sbb
jo
ljmp
xor
xchg
fildl
mov
rorb
mov
fdivrs
mov
sar
cs
jg
setnp
xchg
jb
add
sub
lds
in
sti
test
mov
sub
clc
pop
xor
mov
jge
test
cmp
xchg
dec
lcall
inc
cmpsb
test
jecxz
nop
insl
out
cmp
pop
data16
sub
test
fadds
push
cmp
and
jae
inc
cwtl
cmpl
test
psllw
push
push
pushf
cmp
push
pop
mov
mov
inc
leave
xor
and
jp
adcb
push
ja
pop
mov
scas
push
adc
mov
bound
nop
es
fbld
or
dec
jnp
loope
add
mov
mov
dec
inc
xchg
shll
jnp
shlb
sbb
mov
adc
and
fdivs
and
push
jno
stc
jle
pop
pop
pop
test
mov
push
inc
xchg
inc
dec
jb
lods
js
hlt
xchg
ss
jp
les
mov
fistl
pushf
test
shll
push
ja
lods
sbb
out
test
cmpsb
loop
cmp
aad
fdivrs
jbe
shrb
pop
orl
push
ss
pop
and
les
cld
adc
xor
loope
sbb
popf
mov
mov
hlt
addr16
dec
ss
fcmovne
orb
es
adc
cmp
stc
addb
xor
cltd
ss
in
pop
into
fmuls
nop
inc
loope
cld
ds
shl
push
add
ds
jl
mov
mov
jp
xchg
pop
push
or
inc
cltd
stos
and
xlat
rcrb
in
sub
movsl
jae
xor
mov
out
pop
ret
daa
mov
ret
repnz
imul
vcvtps2dq
and
inc
aaa
addr16
int3
iret
push
sub
scas
mov
jno
cs
stc
jne
mov
idivl
daa
in
adc
aaa
mov
mov
xchg
std
sbb
add
ja,pt
clc
das
inc
fs
pusha
cmp
mov
shlb
ljmp
sub
mov
ss
test
seta
sbb
stos
xchg
sahf
pop
insl
inc
or
nop
cmp
inc
test
test
push
fcoms
cltd
movsb
addl
pop
adc
jle
jmp
mov
sbb
arpl
arpl
dec
sahf
hlt
mov
dec
popa
sub
inc
sbb
fidivrl
or
jns
loope
lahf
and
cmp
jecxz
inc
repz
mov
or
lret
out
add
push
ffree
xlat
mov
push
adcb
xchg
es
movsb
cltd
fs
ret
jmp
rorb
and
and
cld
out
hlt
insl
out
and
imul
push
ds
daa
or
es
cmp
in
pusha
sahf
adc
adc
pop
adc
dec
xor
sbb
orl
add
xor
cmpsl
mov
mov
pop
lods
scas
pop
mov
push
cmp
sub
push
lret
sbb
sub
pop
cmp
push
mov
stc
push
mov
xor
cmp
fisttpll
out
inc
dec
lret
in
pop
pop
leave
movsl
stos
lret
push
cld
dec
js
sub
notl
fidivrl
xchg
test
sub
loope
pop
push
dec
out
repz
mov
mov
or
lret
pop
lock
mov
dec
lret
dec
xor
js
mov
xchg
push
js
jecxz
sub
pop
sub
cwtl
int3
xchg
pusha
jp
andl
outsl
inc
aaa
jno
or
adc
pop
in
clc
ja
cli
clc
fucomi
leave
mov
or
jmp
mul
into
lret
add
scas
mov
test
sub
lea
dec
stos
repnz
sbb
jns
add
dec
sbb
dec
cmp
cltd
xchg
xchg
lock
or
or
dec
jae
push
sbb
mov
mov
sbbl
inc
mov
and
aaa
js
sbb
or
ret
fidivrs
sti
mov
call
add
mov
dec
xor
stc
jge
jle
jl
xchg
jp
fcmovne
negl
clc
add
push
jo
int
mov
fldcw
roll
mov
jne
xchg
in
loope
add
xor
sbb
aas
or
in
fmull
sub
or
scas
and
call
lahf
mov
inc
sbb
adcb
adc
int3
movsb
fs
lret
push
jno
and
movsb
movsb
pop
jmp
xchg
xor
xchg
pop
sahf
clc
sub
es
adc
push
jne
dec
inc
les
jecxz
xchg
mov
xchg
out
mov
sub
xchg
push
mov
jp
pop
repnz
nop
adc
in
fisubl
add
dec
loopne
les
shrl
jle
jae
cmp
push
in
gs
es
sahf
push
mov
in
and
scas
pop
cwtl
clc
push
in
pop
and
jle
lret
out
out
aam
xchg
push
andb
clc
fnstcw
dec
cmp
sub
les
dec
out
leave
or
pop
and
jecxz
jns
iret
cmpsb
push
mov
inc
arpl
mov
leave
inc
pop
out
jmp
push
jp
mov
xor
jg
lds
push
insl
mov
cmpsl
jns
mov
rcll
jo
cmpsb
ds
or
stos
scas
test
ret
sub
and
test
push
and
push
or
adc
gs
inc
mov
xor
stc
push
push
inc
popa
jp
dec
sbb
sbb
mov
sub
rol
cld
xor
je
pop
or
lret
cmp
add
sar
loopne
cmp
out
shlb
faddl
sarb
in
sub
push
int3
scas
or
mov
inc
jecxz
imul
lahf
out
dec
aas
sahf
xlat
and
int3
subb
push
sub
loopne
push
out
test
ret
mov
push
jl,pn
push
aaa
mov
sbb
notl
out
scas
sub
fnstcw
mov
xchg
lds
dec
sbb
add
add
in
cmpsl
iret
push
daa
mov
push
adcb
adc
in
rclb
mov
rolb
dec
lret
sub
sbb
push
add
popa
add
jnp
sahf
daa
or
sbb
test
daa
scas
outsl
jmp
shl
stos
mov
out
cmp
add
jbe
ss
scas
jns
orl
mov
cli
out
xlat
xchg
push
aam
jbe
add
xchg
ss
push
andb
popf
pusha
cmp
jmp
test
out
push
inc
push
mov
fstpl
lahf
and
sbb
mov
fwait
pop
adcl
fisubrl
xchg
imul
popa
mov
cmp
repz
cmp
mov
and
cmp
push
out
dec
inc
xchg
es
cli
mov
dec
fildl
adcl
mov
ret
aam
add
insl
sub
mov
or
repz
inc
pop
pop
jp
lea
and
sbb
xchg
sub
insl
add
rorl
inc
fisubs
dec
jge
lret
inc
mov
stc
scas
lret
cmpsb
pop
jg
xchg
rcrb
repnz
jne
inc
dec
xchg
aad
jp
mov
jmp
outsb
fmuls
stos
mov
dec
add
mov
ret
jnp
mov
ja
inc
xchg
fcoms
insl
xor
cmp
fisubs
vphaddubq
in
clc
lods
mov
fcomps
add
mov
or
sub
lcall
mov
in
out
xor
mov
mov
push
dec
jle
mov
inc
xchg
adcl
mov
mov
je
sbb
cmp
pop
insb
enter
lret
pusha
push
dec
mov
out
cmp
sbb
mov
psllw
ljmp
je
data16
dec
mov
jg
int
xchg
mov
pop
in
mov
es
insl
sbb
idivl
jnp
test
arpl
sbb
lcall
out
xor
push
aam
in
mov
rol
xchg
xchg
addr16
cmp
mov
xor
dec
jnp
dec
arpl
push
pop
arpl
add
rcll
arpl
mov
push
fisttpll
psrad
xor
fdivs
push
rclb
add
std
sti
or
inc
stc
fwait
out
add
leave
leave
xchg
jmp
xor
mov
inc
imul
int
inc
in
cmp
dec
outsl
jne
repnz
or
mov
mov
xlat
outsl
das
xchg
cwtl
inc
rcrl
hlt
fidivrs
fs
jae
bound
incb
push
add
pop
jle
pop
ljmp
jb
inc
jmp
sub
or
adc
aaa
sbbb
dec
or
sbb
lea
or
jne
xchg
mov
cld
xchg
and
imul
pusha
bound
lret
fwait
jl
and
sti
xchg
push
mov
and
fcmovu
incb
dec
jae
in
add
test
outsl
cmpl
adc
pop
sti
cmpsl
out
lods
aad
mov
call
dec
vdivsd
sub
cltd
fidivrs
ds
insb
mov
lcall
or
xlat
inc
repnz
inc
push
push
push
imul
cltd
loopne
push
sub
test
ret
add
cmp
jl
outsl
sbb
fsub
mov
mov
int
idivb
pop
jno
outsb
pop
or
bound
ljmp
into
out
mov
or
sbb
ss
mov
aam
mov
stos
test
add
cmpsl
xor
add
lret
xchg
lds
mov
arpl
adc
mov
inc
fisubrs
loope
js
dec
ds
push
push
adc
ds
arpl
test
ss
ret
out
sbb
addr16
or
popf
lret
aam
in
jbe
push
cmpsb
popf
push
outsl
mov
pop
jno
setns
jle
shlb
icebp
jmp
cmp
movsl
jle
out
inc
in
mov
int
stos
sub
jle
ficompl
jp
orl
stc
or
or
les
shlb
es
or
int
pop
es
xchg
adc
push
jecxz
mov
or
push
cltd
xchg
and
xor
mov
mov
jns
mov
adc
jae
and
add
aam
pop
mov
hlt
repz
or
jne
aas
xor
and
nop
aas
cmovl
mov
push
fwait
out
js
cmc
adc
lods
pop
js
mov
jns
cmp
nop
outsb
sub
sbb
fists
sub
dec
inc
shlb
mov
cmp
add
arpl
lods
and
dec
aam
mov
sbb
mov
lock
xor
and
and
mov
jno
sti
stos
in
and
cmpsb
inc
pop
push
aam
mov
nop
xor
fwait
ds
sub
mov
aad
jp
enter
orb
popa
mov
cmp
jmp
adc
pop
xchg
and
add
fisubrs
movsl
lods
fdivrl
mov
fsts
inc
in
jno
and
inc
push
hlt
add
test
ja
push
or
push
push
push
add
push
lock
cmp
mov
in
sbb
fsts
inc
and
sbb
push
loopne
mov
clc
jecxz
inc
outsb
imul
fnstenv
adc
sti
add
movb
cmp
lcall
dec
cmp
stos
inc
gs
loope
jle
push
and
nop
jo
adc
loop
jbe
sub
in
stos
mov
xor
test
xchg
adc
or
pop
xlat
aam
push
int
loopne
outsb
lods
xor
test
in
sub
cmp
mov
mov
adc
pop
push
mov
imull
sub
lahf
in
push
mov
out
dec
adc
push
push
test
les
xor
jbe
in
cs
xor
shlb
movsl
dec
fsts
sbb
add
lret
out
and
or
mov
arpl
and
or
pusha
or
mov
inc
scas
loop
test
cmpsb
out
imul
inc
jno
pop
mov
xchg
call
sbb
imul
popf
jo
cwtl
push
cs
movsl
sbb
ss
fld
out
fsubrs
ljmp
adc
arpl
out
mov
sub
ds
jo
xor
in
and
mov
jno
imul
pop
and
imul
sbb
add
sarb
jbe
push
js
jbe
xchg
push
mov
xchg
jae
fdivrs
mov
sbb
iret
pop
addr16
test
xor
push
insb
pushf
lahf
jnp
push
cmpsb
inc
pop
test
pop
repnz
mov
mov
cmpsb
mov
addr16
sub
je
xchg
mull
ljmp
aam
adc
mov
cltd
lods
arpl
xorl
and
xor
mov
psubsw
out
add
pushf
test
dec
sahf
sub
push
ficomps
std
push
or
mov
push
rcrl
stc
dec
pop
out
out
in
xchg
hlt
pushf
outsb
lods
stc
sti
int3
pop
add
pop
aas
xor
pop
sub
jo
inc
roll
or
aam
popf
adc
xor
xchg
stc
sbb
xor
movsb
fwait
jp
mov
mov
mov
mov
dec
jle
sbb
xor
in
subl
mov
outsb
xchg
in
lock
adc
xchg
mov
ja
clc
stos
xchg
xchg
add
cmpsb
ljmp
xor
ret
sbb
cmp
mov
xor
ss
jnp
in
rolb
and
dec
nop
es
inc
arpl
pop
mulb
jl
sbb
jle
rclb
jge
stos
add
sarb
xchg
jne
mov
sbb
in
mov
pop
and
and
pop
nop
mov
mov
call
iret
sbb
lea
outsl
out
and
sub
mov
ss
push
ds
xor
movsl
or
lock
mov
jb
rcll
xchg
jge
rorb
pop
subb
imul
cmp
pusha
sbb
jae
fiaddl
int3
jbe
popa
cli
je
ud0
push
jno
insb
jmp
call
je
hlt
mov
cmpsl
and
push
mov
push
push
cmp
or
addr16
negl
mov
mov
div
sub
mov
push
test
lock
leave
xchg
aas
outsl
inc
and
test
std
sbb
cmpsb
sbb
pusha
push
or
push
xchg
fs
jl
negl
jnp
lcall
jmp
decb
add
pop
inc
and
insl
scas
addl
nop
dec
stc
test
push
xlat
sub
inc
dec
mov
fwait
adc
mov
mov
jnp
pop
and
or
xor
xchg
xchg
cmp
pop
roll
repz
pop
mov
in
dec
lea
stc
insb
pop
aad
adcl
mov
cltd
leave
dec
inc
and
lds
mov
arpl
sbb
daa
mov
js
cltd
push
or
mov
imul
je
nop
sbb
push
mov
cmc
jle
sbb
in
sub
or
insb
in
cs
hlt
mov
shl
pushf
cli
test
adc
sbb
out
stc
xor
pusha
cmp
push
pop
cmp
test
adcb
pop
xchg
jmp
mov
mov
dec
xor
mov
pop
pop
push
fcomip
mov
ja
xchg
fisubrs
mov
insl
adc
dec
mov
inc
xor
xchg
stc
add
pop
pop
mov
scas
lcall
gs
aaa
dec
push
mov
inc
cmp
movsb
int
sbb
movl
and
call
fcmovne
andl
add
les
inc
cli
add
sub
pop
cmp
xor
xchg
mov
adcb
push
mov
inc
das
xchg
xor
int3
or
jo
pop
sbb
xor
adc
jle
mov
cmp
or
mov
mov
sub
aas
mov
movb
sbb
inc
jge
push
scas
loopne
pop
popf
fst
stos
fnstsw
inc
xor
and
push
xchg
nop
sub
push
movsb
jp
add
mov
add
cmp
cmpsl
xor
mov
xor
cld
setae
clc
call
shrb
xchg
jb
mov
test
rclb
mov
push
ja
shlb
negb
or
add
stos
or
aas
and
inc
mov
loope
shr
cmpsl
clc
push
mov
xchg
dec
mov
dec
es
mov
push
sub
adc
inc
mov
out
cmpsb
cmpb
inc
adc
push
leave
std
xor
arpl
lds
sar
add
js
int
into
aas
sbb
jge
xchg
add
mov
mov
cli
sub
push
xor
orb
clc
cmc
cwtl
divl
pop
fmul
mov
and
mov
repz
pop
mov
cmc
into
lods
stc
and
xlat
jns
xchg
mov
dec
mov
outsb
ficompl
fcmovnb
push
jle
clc
inc
lret
jecxz
mov
imul
pmaxsw
sti
dec
out
pop
ret
pop
or
mov
sbb
or
dec
fistl
inc
pop
aam
scas
lds
roll
aam
mov
jb
mov
jns
mov
clc
test
lret
call
push
test
movsl
idivl
insb
xchg
add
inc
jne
inc
arpl
lret
lret
sub
pusha
imul
lahf
adc
fmulp
enter
lods
dec
adc
out
popf
add
jo
popa
pop
fisubrl
inc
add
arpl
push
ret
pop
jne
jl
mov
les
mov
pop
fcmovnbe
jo
je
imul
rcll
jge
mov
subl
fcoms
sbbb
sub
in
ret
orb
lahf
icebp
aam
xor
or
dec
in
nop
mull
add
jo
loope
cs
inc
enter
mov
mov
out
push
cmp
and
stc
icebp
adc
mov
cltd
lahf
fidivrl
outsl
sahf
shlb
leave
cmp
imul
push
jg
cltd
jnp
or
ret
dec
jecxz
lock
mov
sbb
jns
push
push
cwtl
les
movsl
xchg
lret
add
mov
inc
and
scas
bound
or
pop
push
data16
ljmp
xor
and
mov
jmp
mov
adc
imul
popa
loope
push
xchg
and
sub
mov
cmpsb
push
ss
fstpl
ds
mov
adc
daa
and
fists
push
mov
cmpsl
sbb
fmull
addr16
nop
daa
xor
dec
push
hlt
popa
aaa
popf
sbb
xchg
mov
incb
aam
push
sub
pop
testl
xchg
mov
js
or
mov
or
jle
fdivs
test
lcall
imul
cmc
int3
popf
fwait
ret
das
imul
pop
mov
mov
push
mov
lds
test
add
push
mov
add
into
test
pop
cltd
cmpsl
cmp
scas
push
fistpll
xchg
ljmp
gs
cmpsl
int3
push
fdivs
flds
loope
ja
jae
cmpl
ret
lods
addb
inc
jno
push
push
push
sbb
gs
inc
xchg
jne
out
jb
adc
inc
adc
mov
mov
cmpsb
add
and
jg
push
pop
sbb
xchg
movsb
mov
and
and
test
inc
add
movsl
fdivs
mov
push
cmp
imul
repnz
aas
shl
push
add
xlat
jnp
loopne
testl
and
aas
aaa
jnp
popa
std
aad
or
in
ljmp
jb
inc
jecxz
inc
fs
xchg
inc
inc
inc
xor
nop
clc
jmp
cmp
inc
or
cwtl
int3
cmp
xor
das
ror
mov
pusha
cmpsl
push
stos
dec
movsb
push
aas
mov
jecxz
dec
jbe
mov
es
pushf
mov
orl
nop
mov
push
or
sbb
sub
outsl
and
lret
not
jno
sbb
mov
movsb
add
push
adc
inc
jmp
sub
add
inc
aas
fsubrs
loop
cmc
jo
adc
push
or
adc
sub
pop
sub
shll
popa
aad
adc
mov
push
pop
loopne
in
mov
adc
outsl
xor
pop
mov
push
push
xchg
in
sub
mov
push
faddl
test
pop
adc
jl
xchg
lods
xor
fiaddl
mov
lret
or
adc
pop
mov
mov
nop
lret
testb
cmp
fwait
cmp
adc
pshufw
xchg
jecxz
add
sbb
cmp
fidivrl
mov
jecxz
cmc
jecxz
mov
xor
int3
jl
sbb
dec
mov
test
jl
out
xchg
fmul
jl
jmp
fxch
sbb
jno,pt
push
mov
in
dec
enter
leave
shrb
icebp
addb
dec
fildl
lcall
pop
sub
xor
push
dec
test
repz
inc
push
lods
jp
dec
popf
test
add
xchg
subl
sbb
mov
mov
std
push
mov
dec
xchg
jle
cmp
fildl
mov
popa
inc
nop
inc
push
and
or
adc
xchg
shll
xchg
enter
push
ljmp
jl
insb
dec
out
aaa
and
ds
jl
std
and
loope
mov
pop
cmp
and
jo
out
cwtl
sbb
xchg
mov
ja
mov
jmp
enter
xor
loope
or
pushf
out
sbb
mov
pop
push
int
add
jle
mov
cmp
adc
xlat
fisttpl
fbld
js
rcrl
and
insl
sbb
repz
pushf
imul
lods
imul
mov
jnp
inc
xchg
inc
jno
jg
testb
fcoml
es
or
popf
loopne
lahf
loope
ret
mov
lock
jmp
cmp
outsb
popa
add
rcrb
jbe
arpl
ljmp
mov
sbb
adc
mov
mov
shl
adc
fchs
iret
aas
jns
push
arpl
lret
pop
xchg
mov
dec
in
pop
out
in
dec
and
in
mov
out
mov
jo
cwtl
shr
sub
test
loopne
jno
enter
sub
loop
sub
ljmp
bound
mov
cmp
imul
and
bnd
ja
or
adc
mov
rcrb
lds
sbb
dec
sti
mov
xor
jecxz
add
scas
daa
outsb
es
push
lahf
mov
fscale
inc
and
out
movsl
ficoml
sub
loope
push
fisttpll
sub
inc
jmp
pop
gs
es
dec
or
or
mov
jno
cwtl
sub
lods
test
mov
outsb
xchg
rep
mov
lea
popa
mov
js
mov
jb
daa
subl
jl
mov
rorl
sub
jp
xchg
lahf
inc
cld
dec
mov
loope
and
mov
fwait
cli
lcall
xchg
icebp
clc
adc
es
cmp
or
fstpt
nop
orb
dec
push
push
push
and
jmp
xchg
addb
ja
push
mov
cmpsb
lods
xchg
mov
pop
out
mov
fxch
aad
push
inc
aad
bnd
popf
adc
cmp
leave
cmp
push
dec
adc
mov
pop
das
call
ja
sahf
rcll
fld1
mov
jnp
shlb
out
addr16
mov
jb
mov
adc
aam
notl
jae
xorb
xchg
outsb
pop
mov
sti
sbb
cmpsl
mov
pop
dec
cmpb
mov
xlat
scas
popa
xor
sub
add
gs
sbb
test
adc
mov
jb
stc
sub
imull
push
sbb
aas
std
dec
fldt
popf
mov
mul
push
push
adc
adc
cmc
aaa
add
cmp
loope
rolb
test
popfw
dec
je
xchg
lret
aas
test
push
inc
iret
imul
fsubr
popa
iret
pop
cmpsl
mov
ds
bound
hlt
mulb
out
pop
cmp
xor
or
adc
cmpb
sar
leave
leave
add
sub
pop
js
lret
sti
xchg
dec
jecxz
lret
fwait
sub
inc
mov
movsb
imul
mov
repz
test
inc
out
push
popf
mov
bound
pop
shll
jle
ds
xlat
mov
mov
iret
es
outsl
bound
and
loope
xchg
or
testl
lret
cmpsb
jne
and
pusha
or
xchg
iret
incb
dec
pushf
jp
dec
cmp
add
loopne
and
fisubs
mov
mov
xchg
push
or
push
mov
stos
xor
ret
pop
in
pop
pop
mov
sbb
bound
mov
mov
test
repz
mov
nop
fldl
dec
cmc
push
and
fs
addr16
leave
pop
push
pop
or
push
add
mov
mov
mov
and
outsl
in
xor
push
sub
pushf
sti
fstpl
das
sbbb
mov
fcom
sub
mov
gs
test
repnz
mov
xor
and
fwait
xorb
addl
push
mov
mov
cmc
jo
and
outsl
cmpsl
sub
pop
mov
inc
aam
jecxz
mov
xor
sbb
addr16
or
jno
jp
mov
and
fstpt
shll
movsb
lahf
repz
mov
cmc
scas
pop
mov
mov
inc
lret
and
xchg
in
stos
dec
test
adc
inc
adc
js
fcoml
shrl
sub
mov
shll
add
mov
stc
and
lock
adc
push
mov
movsb
pop
ret
pop
fimuls
movsb
mov
sub
mov
pop
rcpps
scas
jmp
cmp
iret
std
mov
push
pop
mov
jp
adc
dec
jecxz
adc
std
sub
sbb
xor
scas
fstl
stos
pushf
cltd
xchg
lret
sbb
cmpsl
incb
push
mov
mov
cmp
loop
sub
add
or
repz
in
or
jle
loope
std
lds
fisttpll
out
add
punpcklwd
clc
fdivrs
popl
into
mov
out
iret
iret
pop
mov
and
xor
ret
lods
int
ja
adc
jp
or
jge
iret
jmp
and
adc
aam
dec
popf
arpl
push
mov
mov
pop
shl
pusha
repz
adc
ret
imul
loopne
mov
xchg
and
imul
ret
andb
pop
ds
sub
into
and
xor
cmc
pop
mov
ds
imul
or
fdivl
xorl
je
imul
fimull
dec
mov
sbb
xchg
dec
inc
mov
xchg
push
push
cmpsb
adc
pop
test
addr16
mov
mov
out
add
mov
push
and
lcall
jne
sub
pop
push
inc
fs
fisubrl
mov
and
test
outsb
mov
incl
inc
in
cmpsb
test
xlat
rcl
std
test
inc
repz
mov
es
call
pop
sub
ret
cmp
add
sarb
psubusw
aaa
add
xchg
mov
incl
push
push
stc
sbb
sarb
rclb
mov
fs
sub
jae
insl
sub
pop
cs
aam
mov
nop
movsb
outsl
and
aam
cmp
lea
sub
popf
jnp
inc
daa
cmp
mov
in
je
iret
push
aam
dec
cli
loope
ss
adc
jae
push
pop
mov
cmp
mov
ret
call
jno
push
test
dec
sub
adc
mov
les
ja
pop
and
loope
out
sbb
sti
mov
cld
enter
int3
mov
test
mov
inc
xor
sub
js
cld
pop
xor
fdivl
or
push
aas
data16
out
mov
iret
mov
mov
fldcw
mov
sub
imul
out
ds
dec
xor
and
sti
adc
pop
adc
pusha
cmp
cli
add
dec
popa
daa
pop
adc
sbb
inc
int3
mov
das
adc
out
arpl
sti
inc
out
mov
dec
pop
scas
jge
shrb
and
pop
and
ret
mov
cmp
inc
ret
cmp
dec
or
push
loope
mov
shll
dec
inc
cmp
cwtl
inc
imul
mov
mov
mov
cltd
rcl
int3
push
test
shrb
mov
shll
sti
std
cmp
sub
jno
or
clc
rcrb
adc
clc
xor
out
xchg
mov
xchg
push
cs
dec
scas
das
stc
cmp
int
xlat
cmp
mov
aam
adc
adc
sbb
ret
arpl
jp
pop
add
dec
xchg
fstpt
mov
jo
sbb
or
sbb
mov
adc
negl
mov
and
in
pop
pop
jae
cmc
aaa
sti
add
ret
xlat
jbe
xchg
mov
and
jge
subl
cmp
out
scas
jnp
imul
adc
push
insb
imul
lock
xor
imul
xor
add
adc
push
mov
rorb
movsb
push
lret
cld
jb
and
cmp
repz
aam
xchg
adc
or
enter
pushf
xorb
inc
je
sub
out
mov
cmpsl
jge
mov
imul
das
rcrl
mov
imul
jbe
js
xchg
push
sahf
or
aas
inc
repnz
cmp
adc
imul
cmc
mov
fisubrs
dec
es
lock
add
mov
push
inc
jo
mov
and
and
xor
dec
dec
mov
mov
out
and
adc
xchg
inc
cld
sbb
xor
cld
mov
sub
push
sbb
insb
mov
sbb
js
leave
jl
mov
mov
inc
sub
or
iret
sub
enter
std
popf
fadd
mov
and
add
into
inc
inc
repnz
pop
xchg
xchg
cltd
push
push
pop
pusha
lcall
sarb
push
lea
shlb
mov
pop
adc
call
jp
xchg
jbe
cwtl
xchg
dec
add
rcll
std
lahf
lret
sbb
and
mov
sbb
sbb
xchg
adc
mov
jnp
or
mov
jp
mov
or
pop
xor
cld
cltd
pop
in
push
cmc
push
xchg
aad
xchg
in
and
lock
lret
imul
jbe
pop
mov
or
xchg
fisttps
mov
out
mov
out
xor
arpl
or
pop
push
add
push
mov
in
inc
into
mov
cld
andl
xchg
or
mov
call
inc
mov
repnz
in
fstpt
mov
sti
xor
xchg
fistpll
jne
mov
lcall
push
sub
mov
push
or
xor
aad
push
cli
imul
in
xchg
xchg
fistl
push
fsubr
lods
inc
movsb
lds
pop
cwtl
pop
out
add
insl
aam
push
xchg
std
insb
push
pop
adc
iret
adc
cmpsl
mov
inc
sbb
cmc
xor
cmp
inc
adc
push
jg
ljmp
ret
inc
aas
ja
out
push
jae
xor
js
adc
mov
scas
and
xor
and
ret
in
push
cmp
lret
sbb
jg
cmp
add
sub
xchg
loope
rclb
add
add
xchg
xlat
mov
ja
mov
mov
adc
push
imul
jl
ret
cmpsl
clc
loopne
repnz
or
aad
in
sbb
arpl
push
lcall
push
je
jmp
int3
in
inc
pop
repz
add
mov
mov
or
pop
push
xchg
aad
test
xor
push
sbb
xchg
and
les
jb
pcmpeqb
jmp
dec
ja
mov
fstps
fistpll
sub
xchg
dec
imul
xchg
xor
ficompl
push
pop
pop
test
inc
flds
xchg
xchg
out
pop
lods
or
pop
sti
mov
xchg
push
cltd
frstor
jp
xor
subb
mov
push
jle
cld
jmp
imul
sub
js
ja
push
add
sarl
add
pushf
jp
xlat
sbb
mov
sub
ror
bound
call
xor
int3
xor
sbb
inc
inc
add
ret
pop
hlt
and
je
loopne
test
pop
jno
cmp
push
adc
popf
mov
push
mov
push
enter
cmpsl
jle
stc
or
mov
fisttpl
in
std
popa
sti
mov
xor
jbe
push
addr16
sbb
fildll
aaa
add
shll
or
sbb
cmp
scas
xor
lea
xchg
dec
out
sub
dec
shl
jecxz
mov
sbb
shll
push
or
push
adc
push
je,pt
test
add
shll
or
add
and
hlt
dec
lods
lds
adc
das
and
push
and
cmp
mov
mov
push
cli
daa
hlt
add
rol
sti
leave
shl
mov
xlat
mov
jno
fnsave
lret
mov
ds
in
ja
lahf
adc
push
add
adcl
into
sbb
clc
ret
in
imul
nop
xor
jo
cs
lret
cmp
pop
xor
cmp
fs
imulb
cltd
adcl
stos
mov
adc
adcl
fisubrs
mov
daa
sti
or
inc
out
push
dec
sbb
mov
test
pop
sti
ror
push
shrl
mov
rorl
lds
push
icebp
das
sub
lods
jo
fdivr
adc
fsubr
pop
push
inc
pop
out
fistl
lret
mov
sbb
aas
jb
sub
sarb
stos
and
push
mov
clc
loop
mov
inc
jg
inc
leave
and
ret
mov
sbb
out
jmp
enter
mov
sbb
fisubs
nop
push
or
xor
scas
lods
lds
adc
fisubrl
lock
xor
and
loope
dec
push
test
cmp
xor
movsw
fildl
shrb
out
pop
or
lahf
incl
and
cs
inc
sbb
mov
mov
pxor
aaa
mov
push
jle
out
fdivrl
cmp
add
pusha
frstor
pop
jecxz
daa
arpl
or
xor
push
popa
insl
mov
hlt
adc
push
je
fmuls
popa
iret
ss
mov
sbb
pop
adc
jmp
cwtl
rcll
jmp
ret
mov
jne
add
jns
fimuls
mov
or
out
xchg
and
xchg
lret
out
and
jmp
dec
mov
andb
rcrb
fstp
sti
test
jo
fistl
mov
lea
in
nop
int3
xchg
inc
mov
mov
outsl
inc
loope
and
mov
je
jg
in
cwtl
xchg
repz
aaa
movsl
xor
cmp
loope
xor
ss
mov
xchg
sub
pop
jno
call
cs
xchg
into
imul
mov
mov
sarb
cmp
dec
loopne
cmp
addr16
loope
aad
hlt
es
xchg
pushf
xor
mov
push
jle
and
cmpl
adc
mov
xorb
imul
mov
mov
add
or
lea
fnstcw
cltd
push
popa
repz
or
pop
fsubr
and
divb
stos
xchg
inc
stos
add
push
aam
hlt
dec
add
mov
adc
stos
push
sub
xor
cmp
cmp
mov
icebp
sbb
xchg
stos
xlat
pushf
andl
mov
jae
or
xchg
mov
mov
mov
dec
xor
and
test
pop
jb
int3
dec
ljmp
fwait
arpl
xchg
aam
xchg
rcl
mov
jl
lcall
and
mov
neg
and
pop
mov
bound
lods
fildll
xchg
push
cmpl
xor
add
cmp
inc
sub
xor
pop
daa
push
nop
sbb
mov
out
mov
and
mov
hlt
dec
leave
sbb
test
shll
sub
negb
lods
jmp
cld
cwtl
xchg
add
adc
loope
xor
dec
insb
jbe
ds
pop
les
sbb
sub
mov
lea
test
imul
mov
in
nop
repnz
leave
in
ret
ficomps
or
repnz
mov
orl
jg
loop
int3
inc
pop
dec
outsl
lods
dec
push
jge
test
pop
packuswb
addr16
xchg
fstpl
dec
sbb
or
aas
push
adc
jne
leave
sub
inc
sub
sub
inc
fidivs
insl
add
aam
mov
aad
dec
sbb
xchg
cld
inc
jns
inc
testb
popa
mov
lods
or
jns
mov
test
lods
sub
roll
adc
orb
das
shll
push
sbb
sbb
mov
lds
pop
jb
inc
dec
stos
pop
and
push
jo
int
mov
ja
mov
mov
sub
adc
push
shlb
xor
add
pop
mov
addr16
jbe
cmp
lret
sbb
into
loopne
bound
in
sarl
cmp
in
lock
jnp
cmp
sub
cmpsb
cmpsb
sti
and
xor
out
jl
xor
xchg
xchg
dec
iret
enter
popa
movsb
cmp
pop
sub
out
icebp
jnp
add
xchg
jmp
lret
xchg
push
mov
inc
icebp
push
push
xchg
and
xorl
add
ja
or
xor
hlt
push
movsl
xchg
dec
sub
push
js
adc
pop
sahf
push
test
popa
out
in
call
push
movsb
pop
jno
adcb
std
mov
fistl
xchg
inc
jno
scas
pop
xor
inc
shrb
and
adc
sbb
fdivr
data16
mov
lods
mov
mov
mov
fcmovnbe
jno
mov
outsb
out
add
lcall
xchg
mov
sbb
scas
xchg
cmc
cltd
aam
xor
leave
mov
inc
xor
jbe
jmp
xchg
cld
or
adc
shl
ja
out
pushf
das
repnz
mov
popf
leave
std
js
arpl
sete
or
imul
call
je
add
sti
insl
sub
pop
enter
subb
inc
pusha
pop
sub
in
pop
in
mov
jns
inc
add
ja
rcrl
dec
push
popf
mov
pop
inc
cmp
pop
xchg
push
dec
xchg
cmp
pop
dec
jae
add
cltd
pushf
popa
dec
rorl
dec
ja
cmpsl
inc
pop
or
int3
xchg
out
dec
or
inc
cld
popf
js
xor
xlat
fstps
inc
movsb
in
xor
pop
cmp
sub
sti
and
add
mov
mov
mov
or
test
mov
pushf
pop
xchg
and
in
int
call
shl
cltd
and
xchg
fnsave
clc
mov
pop
jb
xor
adc
push
or
in
cmpsl
mov
out
or
not
les
sbb
xor
jecxz
aaa
adc
ret
cmp
or
ds
mov
jmp
leave
sbb
dec
mov
inc
xchg
lret
movsl
and
push
mov
add
inc
mov
int3
push
pop
dec
popa
mov
mov
popf
mov
sub
aam
test
pop
dec
cld
jns
fcmovu
test
adc
jo
dec
int
cmc
in
xchg
xchg
pusha
insb
mov
std
dec
test
push
popa
xor
iret
jno
in
fwait
pop
hlt
scas
push
pop
popa
movsb
jp
nop
add
mov
or
aam
sbb
and
shll
inc
nop
mov
mov
dec
xorb
out
jg
mov
mov
daa
incb
xchg
shrl
xchg
popa
inc
add
divb
std
inc
jne
or
inc
stos
mov
jne
cmp
ja
dec
sbb
xor
lock
out
pop
push
sbb
xlat
dec
lcall
mov
inc
sbb
and
stos
iret
outsb
or
mov
out
shl
jecxz
mov
sbb
dec
pusha
inc
std
xor
icebp
jns
jnp
xchg
xchg
shrb
pop
ja
stc
into
dec
fldcw
ja
jecxz
jnp
lods
stos
jp,pn
into
imul
jb
sbb
orl
dec
mov
push
pushf
outsb
push
ret
add
sbb
test
fwait
sub
fstps
cli
in
pushf
ret
lahf
fadds
rcrb
jo
add
int3
sub
push
fcoms
xor
lea
arpl
xlat
mov
push
data16
mov
in
rcr
rcll
inc
inc
mov
popf
movsl
std
add
aad
xor
mov
mov
stos
cmp
xchg
pop
lcall
dec
pop
cmpsb
test
cmp
stos
loop
in
and
jg
mov
cli
repz
fwait
adc
dec
mov
lds
outsl
mov
cmpsl
add
jne
addr16
xchg
xchg
and
icebp
repnz
push
add
sbb
dec
lock
lcall
mov
les
jp
insl
fisubl
ret
or
orb
popa
into
cmp
push
ds
mov
fwait
xchg
movsb
adc
dec
outsl
icebp
movsl
popa
mov
jo
neg
lret
in
or
dec
mov
cmp
mov
mov
fs
mov
and
in
cld
test
inc
adc
shrl
xchg
mov
mov
stos
and
mov
sub
ss
inc
test
sbb
mov
xor
adc
jle
mov
xor
pop
fisttpll
repnz
inc
daa
movsl
pop
cmp
stos
cld
insb
mov
or
in
cmp
stc
cmp
jg
in
jnp
shlb
add
out
sbb
sub
xor
or
je
or
adc
mov
call
jnp
or
sub
sbb
int
test
dec
int
addr16
in
push
ljmp
mov
scas
shrb
fists
pop
inc
dec
lcall
or
or
arpl
mov
jbe
xor
xchg
jg
nop
sbb
pop
sbb
xchg
mov
cmpb
scas
push
lea
mov
leave
mov
inc
jg
xor
std
dec
lods
int
push
add
jp
sbb
flds
push
cmp
into
add
jl
and
imul
hlt
inc
fstps
out
lret
repz
push
cmp
icebp
mov
movsb
nop
cmp
inc
popf
fsubrl
mov
mov
icebp
and
ds
mov
jae
mov
xor
mov
push
jg
mov
xchg
jne
sahf
bound
fldlg2
out
imul
push
mov
insl
fisubrl
pop
lcall
mov
sbb
pushf
pop
or
pop
or
adc
cmp
pop
xor
test
cmp
je
jmp
shlb
arpl
dec
call
mov
mov
mov
mov
adc
mov
leave
mov
movl
dec
test
fisubrs
adc
xchg
and
xchg
adcl
pushf
or
cmpsb
push
inc
or
sub
scas
int
pop
add
xchg
popa
ret
ja
sub
dec
clc
stos
xor
push
add
and
insl
imul
jge
dec
cmp
adc
sub
jmp
gs
daa
cmp
push
dec
cmc
movl
test
push
ret
cmp
orb
mov
mov
fistl
xchg
push
or
fistpll
xchg
mov
and
push
jmp
xchg
and
or
lret
repnz
les
mov
popf
push
in
scas
jne
insl
aam
mov
inc
add
push
out
in
cmp
and
xchg
mov
sarl
push
sub
inc
nop
add
or
push
mov
shll
sbb
mov
inc
cmp
mov
mov
fnsave
push
dec
cmp
lods
push
cltd
inc
and
sub
gs
lret
not
lret
cmc
jmp
or
dec
dec
mov
jge
xor
and
out
inc
jno
cmp
pop
xchg
mov
sahf
call
pop
jne
xchg
aas
notb
add
push
adc
or
dec
es
push
jno
ret
in
out
pop
push
jo
popa
mov
aas
jge
jecxz
std
mov
repz
cmpsl
xchg
arpl
les
jne
stos
icebp
js
mov
fcomps
mov
ret
rcrb
fisttpll
jp
sahf
ret
jmp
xchg
sbb
outsb
dec
mov
add
cli
es
stc
mov
jl
mov
pop
test
stos
aad
or
not
dec
ret
push
and
stc
pop
pop
lods
js
pop
jo
dec
mov
std
rorl
dec
mov
std
or
inc
pop
xchg
rorl
xchg
adc
adc
inc
shrl
rorl
mov
sbb
divb
dec
jo
sahf
push
outsb
pop
repnz
ljmp
pop
dec
je
stos
repz
les
or
fsubr
nop
in
xor
cmpl
shll
inc
cwtl
lds
test
ljmp
inc
push
jae
sub
mov
sbb
add
sub
mov
xchg
push
dec
adc
add
mov
mov
ss
mov
jb
xor
inc
xchg
mov
pop
out
rclb
cmp
call
jmp
mov
mov
lahf
outsb
add
iret
dec
aad
int3
loopne
lea
scas
jne
jns
test
shrb
in
das
push
jne
std
jge
flds
cs
and
push
bound
jbe
lahf
mov
push
sbb
popf
jle
dec
shlb
enter
pop
fistpl
stos
sbb
push
inc
xchg
mov
stc
scas
leave
dec
sbb
ds
push
imul
lahf
aam
nop
and
mov
out
or
or
fcmovnu
out
ret
lods
push
shlb
inc
cmpl
or
lret
fiaddl
mov
movsl
jne
mov
testl
in
add
movsl
arpl
pop
aad
test
outsl
dec
jns
jp
daa
dec
dec
in
mov
imul
add
xchg
push
inc
arpl
lock
test
adc
in
lods
mov
imul
imul
movsl
pop
push
leave
imul
xchg
or
xchg
aad
jp
xchg
cmp
ja
xchg
loope
xor
push
mov
mov
pushl
stos
add
jbe
cs
ret
in
cmp
leave
icebp
push
call
xor
out
pop
dec
lods
xchg
mov
in
ja
jnp
cmp
or
inc
push
xchg
jge
rcrl
leave
push
xor
jle
das
nop
push
pop
mulb
insl
scas
xchg
xchg
mov
repnz
ja
jg
in
cmp
loopne
fwait
pop
mov
or
scas
ficoml
cs
jns
iret
ret
and
pop
arpl
adc
cmp
nop
adc
dec
mov
inc
mov
cmpsl
pop
cmp
jmp
in
cmpl
scas
stc
add
push
lcall
movsb
ss
in
adc
sbb
decl
les
xchg
fbld
sbb
mov
js
pop
adc
aas
cmp
or
push
mov
cmc
loopne
push
mov
cld
xchg
and
mov
cmp
xchg
pop
notl
fimuls
pop
dec
in
sbbb
sti
cmp
mov
out
mov
pop
push
push
xchg
dec
add
out
cmp
xor
adc
in
xor
lcall
cmp
daa
push
negb
mov
ja
imul
mov
lods
pushf
cmpsb
bound
mov
push
push
shll
pop
ret
pop
mov
call
and
lahf
add
add
pop
push
pop
pop
lods
mov
loope
popf
pushfw
shlb
aaa
icebp
inc
out
xchg
popf
stos
inc
orb
loop
pop
andb
decl
mov
mov
sub
add
jp
mov
fwait
sub
xor
mov
movsl
outsb
add
outsb
mov
iret
mov
in
in
mov
pop
push
imul
in
push
out
lea
xorl
test
mov
mov
inc
mov
dec
in
enter
movsl
mov
cmpsl
lahf
call
cs
xor
int
and
xchg
add
sbb
mov
xchg
mov
sarl
pop
or
xchg
mov
scas
pop
mov
lock
in
out
jp
pushf
cmp
sti
test
call
jecxz
imul
notl
shll
push
repz
cmp
xchg
sub
lock
divl
cmpsl
out
adc
enter
fildll
int
lret
addr16
pop
sub
movsl
addr16
repz
pop
jecxz
stc
out
fisttpl
jmp
dec
jmp
cmp
inc
push
mov
imul
push
ja
fdivs
rol
jge
jne
mov
fnstenv
in
jge
sub
jb
xchg
jl
or
xchg
pop
cwtl
mov
fs
lds
pop
xor
icebp
push
xchg
push
pop
add
jo
test
xchg
fcom
push
scas
loop
stos
icebp
dec
mov
js
cmp
mov
stos
xchg
test
push
loop
and
hlt
sbbb
aas
dec
jp
xor
loopne
dec
jl
cmp
dec
sbb
and
push
jg
mov
imul
mov
add
sbb
mov
jp
mov
cli
cwtl
mov
add
dec
test
sub
and
push
dec
pop
hlt
testb
mov
pop
js
test
jo
sub
popa
rcl
push
data16
fiaddl
inc
scas
dec
dec
push
lcall
xchg
scas
push
mov
sahf
or
les
outsb
push
xlat
xor
jge
xlat
orl
iret
int
add
or
xchg
dec
add
popf
test
cmpsl
jecxz
lret
mov
pop
les
adc
cmp
push
mov
inc
stos
cmc
in
lret
shll
mov
ja
pop
mov
enter
sbb
repnz
jne
mov
xchg
clc
sub
push
pushf
popa
cmc
jge
mov
ficompl
xchg
loope
das
dec
fchs
pop
or
jg
mov
pop
aad
into
adc
mov
cli
aas
stc
in
xchg
leave
movsb
dec
xchg
and
lds
mov
dec
les
repz
push
cmp
push
jns
jnp
xor
fidivrl
pusha
xlat
das
mov
fs
push
inc
popa
xchg
ljmp
pop
arpl
mov
out
pop
mov
jg
mov
xchg
mov
popa
mov
data16
inc
orb
jne
jg
rorb
jbe
ja
and
dec
push
hlt
sub
xlat
pop
lret
es
mov
pop
js
xchg
fisubl
insb
es
mov
cmp
gs
rol
out
xor
imul
and
and
sub
cld
jns
sbb
mov
push
push
mov
mov
inc
jg
das
push
aad
in
and
push
fcmovnu
cmpsb
loopne
icebp
ljmp
lods
sub
mov
out
push
jno
cmpsl
push
popa
arpl
mov
inc
ret
mov
jno
sub
mov
mov
or
movsl
mov
push
sahf
out
call
push
outsl
in
xchg
dec
jmp
movsb
xchg
fs
adc
dec
test
mov
ds
xor
xchg
xlat
push
cmp
popw
xor
or
sub
into
cmpsl
xorl
aaa
sar
sahf
xchg
push
push
or
xlat
pusha
push
mov
lea
lods
repz
call
sarb
push
push
js
mov
call
xchg
jle
insl
pop
sarl
mov
xchg
push
mov
decb
sub
inc
xor
or
xchg
xor
sub
xchg
adc
push
jne
push
or
testb
ss
ljmp
adc
adc
dec
enter
stos
sub
popa
push
fs
adc
adcb
xchg
les
out
repz
pop
fisttpll
pop
add
xor
iret
testb
outsb
insb
pop
jns
pop
sub
mov
xor
hlt
cmp
cwtl
add
mov
sbb
lock
push
cli
outsb
pushf
enter
mov
in
shlb
sti
xor
hlt
push
jae
orl
and
call
xchg
lea
sub
push
insl
sarb
sub
fcomps
and
les
push
pusha
push
stc
les
in
lds
jns
outsb
push
mov
aas
jno
lret
aam
cli
push
xlat
mov
ret
int
pop
popf
icebp
push
mov
pop
pop
data16
and
pop
adc
adcb
mov
sti
fistpll
mov
addr16
mov
and
jno
and
andb
xchg
push
push
movsb
hlt
loope
xchg
mov
jecxz
sbb
mov
orb
ret
push
xor
cmpsl
stos
jne
pop
sbb
ja
sahf
sub
pusha
mov
mov
jo
cmp
popf
and
sub
and
popa
cmc
enter
jp
stc
sbb
je
xchg
sub
aad
rorl
mov
push
cmp
pop
pop
sbb
popa
pushf
inc
imul
sbb
ljmp
dec
sbb
add
xor
out
test
dec
and
mov
or
cmp
inc
mov
fcompl
inc
mov
repz
adc
sub
cmpsb
das
xor
adcl
dec
jno
aaa
gs
push
dec
test
dec
push
sbb
jl
push
daa
pop
rcl
les
sub
push
xchg
sub
xchg
jo
push
add
ret
inc
or
sbb
xchg
cmp
pop
loope
out
add
pop
out
scas
movsl
aaa
out
xor
inc
mov
dec
xchg
pushf
cs
sbb
sbb
mov
nop
add
push
pop
lret
aam
fidivs
xchg
push
jnp
ret
xor
insl
xlat
dec
mov
jbe
inc
cmc
cmp
pop
hlt
pusha
pop
xchg
cmp
fidivl
popa
sbb
xor
fildl
jle
loop
mov
insl
test
sub
imul
pushf
fbstp
addr16
in
stc
inc
pop
fs
jmp
aam
ljmp
mov
add
mov
or
jns
test
loope
nop
mov
test
dec
rol
mov
fdivl
jg
push
gs
push
lds
fists
inc
mov
push
stc
jle
sbb
pop
jecxz
call
dec
loop
inc
loop
mov
stc
mov
mov
leave
pop
rol
sbb
cltd
adc
outsl
addl
pop
adcl
stos
arpl
cmp
fistps
push
loop
bnd
add
dec
and
mov
dec
insl
and
sbb
dec
and
push
ret
jmp
addb
push
sbb
repz
icebp
jns,pt
popa
test
cmp
rol
cld
cld
ret
out
mov
dec
mov
mov
mov
dec
or
adc
lods
call
int
inc
rcrb
cmp
shl
repz
lcall
pop
xchg
jae
push
outsb
pop
jbe
in
sti
andb
pop
jecxz
jno
mov
out
arpl
shrb
lods
fucomp
jmp
into
lcall
xchg
sub
xchg
and
movsb
imulb
mov
mov
mov
jns
int
je
sub
inc
pop
in
ds
cltd
jle
jbe
sbbl
jae
ss
daa
dec
clc
icebp
movsl
fstl
insb
push
adc
rcrb
push
je
out
xchg
repz
loope
add
aaa
call
pop
ret
mov
das
or
imulb
cmp
jp
sbb
leave
cwtl
mov
mov
lock
int
gs
and
adc
pop
or
insl
adc
addr16
test
xchg
pfpnacc
adc
shrb
mov
mov
call
jne
and
imul
lods
test
arpl
cmp
leave
popa
jg
add
add
cltd
sbb
and
imul
js
mov
inc
cmp
jo
sbb
push
repnz
or
push
mov
adc
sbb
lcall
mov
jne
jne
mov
arpl
sbb
into
js
repnz
jae
rcr
jno
push
loope
pop
scas
repz
and
xor
fistpl
adc
mov
xor
das
movsl
add
lea
bswap
arpl
daa
pop
or
or
aad
pop
pusha
inc
imul
les
outsl
dec
jecxz
and
xchg
lret
xor
mov
push
and
iret
lcall
xor
pop
inc
idivl
fbstp
test
cltd
cmp
xchg
or
aaa
mov
ficomps
jl
push
or
adc
push
nop
scas
adc
push
sarb
loopne
fidivl
shll
test
das
into
mov
out
or
fisttpll
addl
aad
push
and
jp
cmpsb
lock
jg
push
inc
push
jb
in
mov
je
mov
nop
xchg
in
pop
mov
dec
lods
inc
jbe
pop
mov
std
or
sbb
mov
inc
pop
cmp
pusha
out
mov
xchg
xchg
xchg
leave
int
add
repz
inc
mov
enter
testl
test
push
aaa
pop
pusha
addr16
incl
dec
adcb
fnstsw
jle
insl
in
shll
push
pop
out
test
dec
jne
imul
inc
ret
test
gs
testb
test
js
adc
or
xchg
clc
xor
gs
xchg
shll
movsb
lock
rorl
dec
mov
adc
add
sub
add
jge
add
ror
mov
pop
mov
fstps
pop
jb
jmp
mov
add
dec
add
mov
lock
pusha
icebp
ss
mull
cmc
addb
push
rclb
outsl
imul
je
xor
mov
lea
push
addr16
xor
lods
cli
int
xor
outsb
mov
popa
adc
nop
sub
aam
jmp
cli
lods
ret
cli
pop
aam
hlt
adc
mov
ja
xlat
scas
inc
push
cs
mov
pop
rclb
inc
icebp
mov
add
mov
in
inc
jae
pop
inc
sbb
in
ret
ljmp
mov
mov
outsl
movsl
popf
sub
aam
dec
fstps
cmp
jo
pop
repz
cwtl
addr16
cmpsl
mov
insl
and
out
cmp
int
sbb
xchg
mov
mov
enter
loop
std
sahf
lds
jmp
iret
fistl
cwtl
jae
or
int
dec
clc
es
push
jg
fucomi
pop
test
or
loopne
bound
sub
bound
mov
and
lret
dec
ljmp
or
stos
divl
sbb
push
jmp
out
sub
pop
movsl
mov
andl
pop
mov
xor
stos
rolb
enter
daa
jae
out
pop
andb
shlb
cmc
shlb
aas
pop
sub
lods
je
enter
sbbb
aad
imul
or
roll
out
ja
cmp
inc
mov
push
outsb
dec
clc
orb
or
ljmp
adc
ljmp
cmpsb
movsb
adc
push
mov
arpl
int3
sti
jmp
in
fcompl
int
gs
push
xlat
pop
pop
push
imul
xchg
mov
lock
and
pop
dec
popf
and
or
sbbl
shll
rclb
mov
dec
pop
xchg
cmpsl
insl
xchg
xchg
xchg
aam
sahf
xor
push
add
in
cmpsl
leave
movsl
scas
int3
cmc
xor
and
sbb
inc
mov
cmc
xchg
add
xor
shr
xchg
shll
popf
es
xor
aad
ficompl
or
and
or
imul
xchg
lods
in
pop
add
push
fs
mov
fadds
call
or
fwait
xor
movsl
fidivs
loopne
int
ret
cmp
fidivl
adc
jl
lds
pop
fisttpl
ja
dec
int
mov
mov
dec
sub
movb
mov
xchg
sbb
insb
pop
insb
and
mov
test
mov
mov
mov
lret
jbe
std
add
into
inc
and
xchg
or
push
ss
cmp
pushf
mov
shrl
cmpsl
insl
xor
add
mov
cmpsl
mov
mov
pop
sub
push
push
pop
mov
sti
jbe
push
xchg
pop
fists
pop
pop
and
or
sbb
pop
cmp
mov
lods
push
addr16
mov
mov
out
lret
mov
ds
pop
inc
add
sbb
call
inc
loope,pn
pushf
bound
jle
mov
push
and
xor
in
dec
pop
dec
or
inc
inc
xor
jp
sub
mov
add
or
jns
push
in
dec
inc
jnp
inc
fs
dec
mov
xor
xchg
mov
and
shll
lock
dec
and
sub
in
mov
mov
call
aas
mov
adc
jecxz
inc
in
push
dec
mov
imul
idivl
gs
mov
and
push
cmp
mov
jecxz
inc
in
shll
popf
lods
popf
dec
loope
mov
cli
ds
jb
es
inc
movsb
int3
sub
dec
adc
sub
xchg
std
fsubrs
push
jne
sub
inc
loop
cmp
je
and
xor
and
inc
and
xchg
lea
mov
arpl
in
xlat
sti
sub
push
pop
lahf
cltd
pop
fsts
or
push
sub
push
insb
pop
mov
adc
arpl
cmp
sti
rep
mov
dec
push
mov
ljmp
lea
sub
rcrl
jbe
or
xchg
and
cmp
cmp
push
and
mov
stos
jo
adc
or
jb
lods
inc
sbb
insb
sbb
test
mov
daa
loopne
je
xchg
push
loop
mov
sahf
out
aam
sahf
pop
push
dec
push
inc
in
scas
fdivs
jecxz
into
jae
int
addr16
jb
adc
lahf
das
iret
ret
nop
loop
and
rclb
inc
xchg
xchg
out
andb
in
inc
dec
jo
insl
mov
pop
ret
rcll
xchg
mov
stos
jno
pop
push
out
lahf
loope
popf
mov
pop
mov
roll
mov
pusha
sbb
rcrb
push
mov
sahf
jae
or
enter
jae
or
pop
dec
mov
jnp
in
xchg
pop
jecxz
lahf
xlat
mov
cmp
popf
push
pusha
notb
fildll
sub
stos
lds
mov
or
cmp
aas
sahf
je
inc
sbb
sub
and
xor
or
adc
notl
or
sub
nop
sbb
test
jno
jp
popa
sbb
int3
aaa
cltd
lret
aad
and
ljmp
dec
cli
stos
sub
and
xchg
mov
push
add
and
mov
xchg
nop
cli
jae
popf
add
add
adc
js
mov
sub
cmc
pop
mov
lcall
push
mov
cwtl
cmp
scas
sbb
adc
dec
inc
and
add
cmpl
sahf
sbb
fs
cmp
out
xchg
mov
cld
in
divb
insl
daa
cwtl
into
stc
or
inc
pusha
hlt
mov
sub
arpl
filds
inc
test
iret
clc
and
pop
in
stos
ljmp
mov
rorl
xchg
xor
add
ljmp
xor
pop
lahf
int
dec
mov
popf
xchg
add
addr16
inc
imul
sub
pusha
jne
dec
gs
fwait
loope
jge
add
shr
push
fistl
jge
xor
test
hlt
push
in
sti
and
jno
and
xlat
adc
xor
mov
das
icebp
cmp
mov
imul
push
dec
testl
mov
mov
sub
xor
popf
negb
test
xor
icebp
jge
jo
push
daa
movl
adc
test
mov
push
sarl
repnz
pop
fldl
jns
fistpll
jno
mov
cmp
divl
inc
mov
ret
inc
mov
shlb
mov
ficompl
imul
mov
pop
mov
test
or
fwait
arpl
dec
sub
mov
insb
lret
dec
fsts
popa
xchg
in
mov
mov
movsb
cmpb
jbe
push
add
out
lods
pop
jnp
cli
lcall
out
test
inc
pop
lcall
arpl
mov
mov
inc
jmp
cmpsl
jno
popf
lcall
arpl
cmp
test
add
shlb
inc
aam
mov
lods
inc
xor
inc
adc
or
out
jg
inc
push
mov
adc
adc
lds
sub
or
leave
mov
iretw
outsl
jno
movsl
pop
test
xchg
or
jl
xchg
add
sbb
dec
xchg
push
out
clc
pop
incb
loope
push
nop
or
or
xor
pop
add
mov
mov
and
sbb
sbb
bound
movsl
jo
cmp
adc
inc
aam
dec
jno
add
xchg
lret
shrb
outsl
jg
sbb
push
out
mull
sti
or
fcompl
pop
in
push
loope
jno
pop
add
ret
adc
outsl
mov
pop
int3
cmp
lds
add
mov
lods
lods
outsb
imul
jl
stos
mov
andl
pop
rorl
repnz
lea
mov
add
in
jno
hlt
sti
xchg
sti
or
cltd
add
mov
test
fsubr
xor
loope
sub
mov
in
mov
push
mov
ljmp
outsb
js
fildll
rorl
xchg
and
jge
fwait
dec
jno
test
ss
in
pop
lea
sub
iret
test
and
sub
adc
adc
fiaddl
movsl
lret
orl
xor
cmp
add
adc
call
adc
xchg
cmp
adc
push
insl
cmpsb
xchg
mov
cltd
fisttpl
mov
xorb
sub
push
pop
lahf
sub
jl
jl
out
js
repnz
lods
xchg
leave
or
aad
adc
sbb
push
pcmpeqb
imul
repnz
inc
jno
lret
rorb
mov
mov
mov
xlat
aaa
dec
fwait
add
xchg
sub
adc
mov
dec
in
inc
fisubs
ret
xchg
dec
push
xor
cmp
inc
inc
ss
mov
pop
mov
mov
lret
out
scas
pop
xor
jge
xor
or
arpl
and
mov
adc
sub
xchg
notb
cmc
pop
push
inc
pop
shlb
push
add
out
and
add
add
test
pop
insb
loop
fildll
pusha
icebp
flds
mov
or
cmp
jnp
or
xlat
fildll
shlb
jae
icebp
aaa
lret
aam
inc
lods
mov
mov
cmp
out
outsb
roll
imul
cmp
fiaddl
testb
push
push
addr16
dec
add
or
ljmp
lods
ljmp
cmpl
in
pusha
push
loopne
pop
push
decb
add
outsb
mov
xchg
cmp
mov
mov
inc
daa
sahf
push
lods
int
sbb
std
lret
adc
loopne
and
jns
aam
inc
or
dec
sub
out
mov
and
call
int3
push
cli
cmc
push
push
mov
push
push
cmp
fisubs
out
sbb
fs
paddd
cs
stos
andl
jg
inc
sbb
jno
pop
or
lds
sbb
mov
bound
push
out
jl
cmp
outsb
lds
mov
gs
sbb
hlt
mov
movsb
ror
and
sbb
add
rcrl
pop
iret
jecxz
xchg
dec
daa
jg
adc
mov
fucomi
adc
stos
xor
clts
in
mov
jns
movsl
jl
cltd
gs
dec
push
pop
outsl
cmp
xorb
dec
cld
push
shr
mov
cmc
in
xor
ja
jno
imul
sub
mov
ss
in
shl
and
rcll
test
shll
fucomi
mov
xchg
pop
adc
lcall
daa
add
sub
cmp
xchg
subl
insb
test
inc
xor
repnz
push
push
addr16
or
xchg
sub
fstps
mov
scas
pop
xchg
dec
dec
js
xchg
mov
test
fwait
ds
in
js
add
mov
ja
cmpsb
mov
loopne
xchg
push
cmp
movsl
ja
push
dec
lahf
mov
ret
push
out
in
pop
andb
and
call
cli
push
sti
divb
imulb
cmpsb
pop
out
dec
lcall
and
in
mov
andb
jbe
jno
mov
xor
jmp
jns
sar
pop
mov
xchg
push
mov
dec
stos
and
gs
cmp
add
dec
outsl
fiaddl
add
lret
pop
loopne
mov
fcoms
push
ja
sbb
lock
jno
and
das
fwait
pop
jmp
jl
pop
jecxz
sbb
mov
cmp
add
insl
push
and
xchg
jnp
les
dec
int
sahf
push
inc
pop
push
adcl
jnp
addr16
pop
js
inc
sarb
add
outsb
clc
adc
cmp
popa
js
repnz
shll
pop
dec
adcb
pop
lods
mov
sbb
mov
jmp
push
in
lods
loopne
lds
fwait
and
jae
push
pop
fldenv
xchg
push
mov
jg
adc
cmp
fwait
or
xlat
or
or
cmp
cmpsb
pushf
cmp
ret
push
jmp
inc
sub
or
jb
mov
mov
popl
imul
stos
mov
fcomps
pop
jge
mov
loopne
sarl
xlat
jg
push
add
popl
cmp
mov
addr16
aas
push
xchg
in
push
es
or
bound
cltd
enter
push
sub
dec
sbb
dec
cmp
or
and
enter
repnz
mov
mull
je
repz
imul
sbb
push
filds
shlb
sbb
outsb
movsl
pop
pop
mov
push
dec
insb
imul
negb
ds
mov
or
and
sub
xchg
outsl
lret
mov
mov
push
in
call
adc
fmuls
mov
and
adc
mov
cmpsl
pop
jl
ljmp
add
popa
mov
mov
call
jecxz
outsb
mov
or
dec
mov
ja
pop
and
or
fistl
js
pop
jbe
cmp
and
jge
add
inc
inc
push
inc
pop
jbe
sub
adc
adc
mov
cmp
add
xchg
cmp
arpl
adc
in
dec
inc
notb
lret
sbb
mov
pusha
bnd
lret
lret
ss
jp
and
jbe
xchg
push
and
pushf
cmp
push
hlt
add
lret
std
pushf
add
xchg
out
sbb
mov
pop
sbb
xchg
xor
les
aad
stc
xchg
push
xor
lods
js
mov
adc
outsb
repnz
mov
movsl
cmp
jb
scas
in
aas
dec
cld
jge
or
adc
aad
aas
shlb
mov
jl
out
sbbb
les
jbe
dec
loopne
cmp
pop
lods
add
ret
sbb
dec
dec
sub
popa
jl
jle
imul
pop
mov
inc
sti
fists
mov
imul
dec
imul
sahf
ret
cmpsl
in
ljmp
adc
les
add
out
xchg
movsl
aaa
mov
mov
inc
aad
aad
mov
es
sbb
insb
mov
adc
or
insb
pop
inc
adc
aaa
imulw
push
out
and
fldlg2
aam
fsubs
daa
into
cmp
es
lea
cld
mov
jl
inc
mov
sub
pop
clc
test
int3
popf
xchg
pop
sbb
mov
rcrl
fwait
cmpsl
adc
mov
pop
mov
leave
xchg
pop
cltd
repnz
push
jno
jo
mov
cmp
mov
mov
dec
std
fildl
lahf
mov
sub
fmuls
ret
out
clc
sub
and
mov
subl
push
xor
adc
xchg
xor
jns
imul
movsl
add
cmp
fs
jo
rcr
dec
roll
fsubl
out
mov
mov
or
xchg
in
clc
std
mov
repnz
fldt
jmp
shlb
shl
leave
cmp
faddl
xchg
daa
push
frstor
mov
fs
sbb
test
out
cvttps2pi
pop
jnp
js
leave
mov
push
fdivp
cmpsb
adc
and
stos
mov
cmpsl
jb
add
mov
aas
inc
push
sbb
cmp
lods
sbb
aaa
add
mov
lock
ret
insb
jns
leave
lcall
arpl
jecxz
test
rep
int3
sbb
mov
scas
faddl
add
rorb
or
iret
or
pop
xchg
add
test
icebp
fnstcw
movsl
mov
sub
lcall
lahf
xchg
scas
adc
xlat
mov
xchg
jns
mov
std
inc
fidivs
insl
push
in
push
sbb
push
pop
pop
pop
in
cwtl
loopne
popl
push
push
push
jno
dec
jnp
data16
rorb
aaa
add
jg
or
mov
pop
mov
ljmp
mov
pop
sbb
stc
orb
inc
mov
cld
or
data16
mov
pushf
cmp
pop
in
adc
pop
sahf
xrelease
les
push
fstpt
jbe
or
push
sub
add
jne
imul
icebp
sbb
sub
and
mov
pop
mov
insb
and
inc
push
sbb
imul
xchg
sahf
and
jne
out
pushf
aam
cmp
jecxz
jmp
lea
out
jge
je
dec
int3
jecxz
xchg
dec
hlt
mov
xor
dec
insb
shrl
jmp
mulps
mov
in
cmp
test
mov
xchg
pop
adc
into
andl
ficoml
stos
leave
loopne
sub
hlt
inc
call
inc
cltd
rcll
lods
jg
sbb
ret
ljmp
leave
xchg
jge
ss
jle
repnz
xchg
xchg
mov
sub
sbb
lods
sbb
clc
add
out
mov
popf
jne
aaa
mov
out
fidivs
push
das
xor
dec
lret
pop
insl
rcll
mov
add
loope
push
cld
mov
xchg
or
push
rorb
stos
xchg
out
lahf
aam
fidivrl
notb
jo
scas
test
loope
add
jmp
arpl
push
shr
das
ss
push
mov
mov
mov
xor
push
lds
nop
dec
push
bound
sbb
dec
lahf
jecxz
js
aas
push
mov
pushf
in
das
mov
or
in
rorl
int3
and
fs
xor
mov
adc
ret
pop
xchg
sub
dec
call
popf
mov
add
lahf
or
pop
mov
add
repz
xor
mov
jle
shr
or
aaa
sbb
ss
mov
sahf
or
insb
mov
loopne
mov
adc
mov
aam
popa
push
sub
pop
mov
stos
stos
popa
mov
out
push
pop
sahf
and
test
loopne
imul
addl
faddl
in
jns
mov
pop
test
dec
xchg
fcmovb
addr16
sbb
sub
fucom
fwait
jnp
in
ret
iret
std
loopne
les
inc
mov
mov
lahf
dec
and
outsl
push
jmp
int3
popf
dec
sub
mov
add
mov
movsl
adc
mov
adc
sti
imul
and
mov
mov
outsb
pop
cltd
sub
scas
xchg
cmpsb
cmp
cli
and
push
cld
xor
push
jne
hlt
cmpsl
jnp
sub
mov
je
gs
faddl
fldcw
lea
inc
es
lret
inc
mov
pusha
mov
mov
adc
dec
mov
lahf
push
adc
outsl
jbe
inc
sar
pop
add
mov
fnstcw
iret
mov
mov
fidivrl
sub
sbb
orl
jecxz
adc
dec
lret
ds
pop
cmp
cmp
cwtl
mov
jo
mov
and
sti
xchg
cmpsb
and
sarl
imul
imul
push
xlat
pop
push
lock
mov
and
jl
jle
and
arpl
adcb
dec
test
add
idivl
js
adc
jnp
les
mov
xchg
call
pop
adc
out
mov
mov
jmp
clc
jno
cmp
xor
push
pop
push
xchg
insl
ret
int3
xchg
rcr
lods
mov
sar
data16
inc
aad
in
mov
sub
jle
ss
es
loop
cmpsl
xchg
fdivrs
movsb
ret
in
cmpl
xlat
stc
cmpsb
mov
dec
add
add
push
mov
add
mov
lock
mov
icebp
dec
fildll
or
cmp
jle
xchg
aad
or
test
stc
push
cmp
mov
test
mov
bound
xor
pop
out
adc
lods
sbb
imul
inc
xor
xor
test
mov
xchg
jp
nop
inc
icebp
cmp
ja
cltd
pop
lods
jbe
cmp
inc
outsb
and
std
xlat
xchg
mov
xchg
sbb
scas
and
test
pop
xchg
sub
sysenter
and
sbb
cmp
mov
push
jp
aaa
fisubrs
add
pop
loope
aas
stc
sub
in
xchg
sub
and
or
cmpsl
mov
cmp
mov
cmp
outsb
add
cmp
inc
or
sarb
mov
cmp
fs
and
jl
int3
test
in
mov
jae
fildl
rorb
sbb
mov
push
and
aam
movsl
test
test
xchg
stos
push
movsb
loope
in
adc
or
orl
mov
ja
mov
sub
or
jne
and
jl
lods
dec
mov
adc
inc
int
inc
imul
adc
mov
dec
cltd
jmp
scas
incl
icebp
xor
into
fs
out
xchg
js
push
inc
and
shl
testl
jle
push
mov
jle
sub
idiv
fists
mov
mov
dec
rcrb
or
pop
stc
popf
cmp
push
leave
inc
push
frstor
call
mov
fstps
jmp
popf
sub
cmp
pop
je
nop
sbb
shll
ret
add
lahf
pop
daa
aaa
in
int3
push
mov
inc
fisubrl
sub
movd
jbe
dec
pusha
fs
push
or
pop
jb
movsb
xchg
ret
mov
mov
fs
fisttpll
mov
mov
xchg
pop
mov
and
inc
dec
cwtl
push
lret
or
dec
xchg
or
andb
in
mov
mov
pop
sbb
sbb
sbb
int3
mov
xorb
mov
into
pop
pop
xor
or
stos
rol
mov
sub
test
sbb
xchg
jmp
jmp
mov
xchg
and
and
nop
stos
jge
movsb
cmp
xor
mov
scas
xchg
xlat
out
and
mov
mov
sbb
ret
xor
lods
jmp
mov
add
lds
xlat
mov
adc
jae
shlb
insl
mov
fldl2e
mov
push
dec
jo
arpl
add
push
mov
xchg
xor
mov
dec
sub
iret
aas
xchg
inc
adc
add
popf
adc
dec
xchg
add
inc
inc
negl
adc
mov
mov
sahf
push
pushf
push
sti
jmp
repz
jo
fmuls
pop
lds
repnz
fsubrl
idiv
and
inc
xor
xor
test
pop
call
dec
sbb
fstps
mov
rorb
in
movups
stc
xor
adc
pop
push
out
popa
pop
adc
add
or
dec
lods
jo
pop
stos
xchg
jb
add
mov
fxch
enter
xchg
divl
adcl
lret
and
sub
cmp
negl
jl
or
dec
adc
sub
push
cmp
push
cmp
cwtl
add
mov
lea
jns
sbbl
pop
test
add
push
mov
xchg
outsb
jge
xchg
push
xor
outsb
aad
fs
sbb
repnz
lods
popf
cmp
mov
es
dec
jl
mov
push
dec
and
out
xchg
popa
fs
fisttpl
movsb
xchg
inc
int3
mov
ret
repnz
fbld
xor
jae
push
mov
movsl
cmp
inc
mov
movsl
mov
xchg
push
inc
sub
data16
aas
repz
in
daa
out
push
and
sbb
test
stc
add
insl
gs
dec
lods
jecxz
mov
mov
cmp
stos
mov
jl
dec
imul
daa
repz
hlt
and
call
or
adc
or
sbb
iret
mov
ja
lret
pop
push
inc
lea
dec
mov
rcrl
xchg
outsl
pop
jns
call
mov
mov
sbb
sbb
imull
shlb
lcall
scas
test
cmp
add
sbb
dec
pmullw
cmp
cmp
or
insb
stc
popf
cwtl
jno
add
jns
repz
and
cmpsb
cwtl
pop
pop
int
cmpsb
or
fdivs
cmpsb
pop
inc
or
dec
repz
insl
jns
addr16
sbb
lcall
jp
imul
pop
xor
xor
jae
xchg
lods
das
in
mov
mov
mov
rcrb
and
jns
movsl
jne
jl
mov
rorl
xor
mov
daa
stos
ljmp
fisubrl
stos
dec
jmp
push
test
or
in
data16
scas
es
mov
fwait
mov
cwtl
pushf
jae
out
xorl
clc
fs
scas
in
jae
jbe
xchg
jno
jge
mov
cmc
or
test
mov
pop
and
xchg
icebp
mov
scas
cmpsb
xchg
vmovupd
xor
add
shrl
jle
mov
pop
jg
mov
push
subl
jns
or
push
push
testl
mov
fsubr
loopnew
inc
sub
jge
sub
sbb
jecxz
dec
cli
xchg
fs
shrl
icebp
out
loop
imul
inc
mov
fsts
and
dec
mov
inc
lret
addb
test
iret
fstpl
jle
xorl
mov
hlt
inc
jb
xchg
mov
push
stos
pop
and
mov
fldt
lods
and
movsb
shll
out
push
or
cmp
push
inc
cmp
mov
lds
and
mov
and
fsub
in
or
push
xchg
dec
stos
inc
fcoml
mov
and
shlb
xor
or
pop
call
mov
sbb
outsb
aam
les
and
scas
leave
cmp
sarl
push
test
mov
ret
adc
ja
mov
adc
push
pop
inc
push
lcall
aam
jecxz
cmpsb
push
imul
lahf
jge
iret
aaa
neg
stc
stc
jne
lea
or
sub
shl
jmp
icebp
mov
pop
cltd
pushf
stos
lods
xchg
adc
into
xor
mov
ficoml
loope
sti
mov
loop
push
pusha
cmpsb
int
pusha
push
jecxz
scas
loope
pusha
fstp
test
cmp
movsl
jb
mov
jl
mov
js
inc
fistpl
or
cmpl
push
std
mov
cs
jnp
inc
mov
push
cmp
pop
jb
or
insb
jne
jno
jns
push
jne
mov
push
jae
pop
fsubp
leave
mov
push
push
sahf
mov
fidivrs
aad
je
ljmp
mov
fsubrl
mulb
inc
jno
push
shll
in
scas
adcl
inc
dec
ffree
pcmpeqd
and
out
fldenv
pminsw
dec
and
add
jne
xor
or
add
mov
sbbb
stos
sbb
cmp
mov
test
pop
scas
aam
push
std
arpl
jle
mov
loope
movsb
mulb
adc
insl
iret
lods
inc
jns
dec
inc
or
or
lcall
insb
adc
nop
pop
pop
mov
rcll
sbb
ljmp
mov
mov
call
fisttpl
inc
mov
scas
push
mov
sbb
pop
shrl
xchg
jb
shrl
pushf
mov
push
jmp
shlb
mov
push
xor
pusha
aas
mov
outsl
dec
add
inc
and
xchg
orl
test
jle
mov
mov
loop
leave
sti
lds
jno
das
xlat
cmp
mov
sbb
cld
add
mov
stc
cmp
push
test
push
cmpsb
pop
cmpsl
cmc
mov
lea
lahf
cwtl
clc
mov
lahf
test
sbbl
leave
insl
adc
adcb
pop
mov
inc
lods
int
loop
test
scas
aad
or
adc
inc
mov
and
out
loope
adc
sbbb
cmc
popa
popf
dec
lock
aam
inc
sub
stos
xor
pop
and
gs
mov
xchg
push
pushf
cmpsb
lcall
fwait
popa
add
loopne
ds
incl
stos
call
sub
fcmovne
push
inc
pop
enter
inc
in
mov
into
stc
mov
mov
repnz
jp
xchg
jle
xchg
pusha
imull
jecxz
sbb
ret
test
push
ret
or
xchg
sbb
push
mov
mov
mov
mov
push
jecxz
dec
ds
pop
cmp
ret
lds
sub
mov
cwtl
aas
push
outsl
loope
xlat
mov
outsl
jae
cmp
push
jmp
mov
in
in
mov
pop
xchg
jbe
add
cmp
stos
in
mov
lds
in
in
jge
test
into
and
lock
cli
rorl
jp
xchg
xchg
test
lods
inc
lcall
mul
lret
and
enter
inc
loopne
add
adc
clc
cmpsl
sub
imul
cmc
cld
jbe
aam
movsl
dec
sbbb
jno
mov
sbb
xchg
imul
mov
fcmovu
dec
shll
cli
cmpsb
xlat
jne
inc
stc
mov
dec
cmp
pop
mov
xchg
pop
or
pop
pop
push
push
push
pop
push
test
inc
jg
in
ja
fs
pop
or
xchg
scas
mov
or
jge
cmp
xor
fimull
jecxz
js
xchg
and
sbb
sbb
pop
jnp
inc
dec
icebp
imul
push
cltd
push
decl
mov
int
lea
mov
ss
jmp
inc
jno
mov
lret
cmp
pop
insl
cmp
dec
hlt
jle
out
mov
push
dec
pop
inc
idivb
aas
cmp
push
jb
cli
movsb
mov
cmc
fsubrl
cmc
or
and
pop
ret
add
add
popf
mov
inc
std
jmp
inc
and
or
cmpsl
ja
pop
and
ret
cmpsl
dec
add
cmp
rorb
scas
loop
xor
out
insl
pop
lea
out
cli
mov
leave
add
outsb
pop
pop
imul
daa
mov
jl
xor
outsl
pop
jae
stc
inc
popa
mov
test
mov
outsl
or
sbb
dec
rcll
dec
inc
xor
xchg
sub
outsl
sbb
jge
mov
mov
mov
push
rorb
leave
jg
shlb
cmpsl
jge
pusha
js
in
sahf
dec
stc
out
sbb
dec
cmc
jb
dec
pop
sbb
xchg
xchg
or
xlat
ja
rolb
lds
mov
roll
jle
mov
scas
bound
mov
popa
adc
repz
or
push
dec
xchg
dec
adc
push
pop
push
jns
jge
fcomp
movsb
xlat
xchg
jecxz
sbb
enter
lcall
adc
sub
mov
test
adc
dec
lahf
popa
mov
adc
or
movsl
mov
mov
cmc
shll
es
pop
and
nop
and
insb
popa
scas
pop
fs
fisubrl
inc
inc
dec
jp
std
jl
pop
jae
fimull
or
push
push
xchg
popf
mov
mov
mov
rorb
outsl
outsl
rclb
mov
xor
push
rol
addr16
and
xor
mov
mov
push
adc
jg
jmp
mov
xchg
dec
lods
pop
loop
pushf
cmp
ss
jp
ljmp
cmpsb
out
lret
xchg
or
es
leave
pop
mov
xor
add
in
jge
gs
pop
cmp
test
subb
xchg
int
leave
call
mov
xchg
mov
sub
call
xchg
dec
adc
cmp
adc
int3
mov
xchg
xchg
jnp
scas
inc
insl
mov
adc
pusha
and
and
ljmp
out
mov
orl
xor
mov
stos
mov
push
leave
out
fucomp
outsb
shl
xor
or
jbe
pop
mov
test
ret
xlat
das
xcrypt-cfb
cmpsl
loop
lcall
or
and
arpl
mov
jg
lret
jno
cmp
popf
inc
mov
fimull
shlb
inc
xor
mov
mov
sahf
daa
insb
xor
add
aam
rcrl
jno
inc
je
pop
jnp
stos
daa
arpl
sbb
dec
outsb
js
test
and
sbb
bound
int
and
cs
cmp
mov
cmp
sar
jo
push
mov
sub
push
cmpsl
addr16
in
icebp
push
rolb
addl
mov
ret
or
les
jl
scas
pop
in
repz
sbb
js
mov
fidivrs
rcll
sub
dec
popa
lds
shlb
mov
dec
jns
dec
cmc
pushf
ja
inc
or
fcomi
add
cld
ljmp
incl
cmc
mov
cld
popa
push
insb
add
lret
loope
pop
pushf
add
call
jg
mov
insl
in
push
mov
imul
jo
repnz
popf
xchg
mov
mov
or
pop
out
push
inc
xor
addr16
hlt
xchg
stos
inc
lahf
pop
sbb
mov
lret
sub
or
pop
sub
jle
leave
inc
adc
xchg
jp
fs
lods
fidivrs
sarl
mov
imul
sbb
xor
hlt
lret
fsubl
xchg
es
or
lods
sbb
mov
rcrb
sbb
cltd
ja
enter
push
daa
rclb
js
fisttps
scas
es
jp
shlb
mov
xchg
pusha
and
xor
mov
adc
mov
sub
inc
and
ds
sub
inc
push
push
pop
lds
sbb
cmpsl
adc
fisttpll
dec
cmc
xchg
shlb
int3
add
loopne
idiv
insb
popa
adc
dec
or
push
shrb
mov
jo
add
mulb
jmp
push
or
cmpsb
push
fwait
xor
ds
jno
fildl
sbb
clc
popf
xchg
cli
mov
sbb
jnp
lret
insb
push
push
call
push
xor
xchg
jg
pop
dec
enter
sub
jg
ss
push
ljmp
mov
ret
test
pop
out
inc
jmp
in
out
mov
mov
stc
push
push
mov
gs
ds
pop
pop
push
mulb
jle
xor
or
push
stc
xor
xchg
mov
jno
ss
xchg
xchg
push
popf
mov
mov
mov
outsb
ja
jl
js
lds
push
push
and
xor
loopne
cmp
out
scas
jle
cmpsb
cmc
js
shrb
xchg
ds
enter
mov
xor
lods
mov
ret
jbe
mov
fbstp
cmpsl
lds
jle
out
xchg
test
js
leave
std
push
adc
cmp
push
add
sbb
lods
mov
cs
in
add
jo
scas
mov
subb
cmp
inc
or
frstor
in
cwtl
mov
sub
rorl
or
in
sbb
xor
aad
and
pop
mov
imul
inc
loope
orl
inc
out
jo
adc
iret
test
xor
dec
out
mov
lods
out
xchg
jl
cmp
jnp
sbb
outsl
lea
je
arpl
bound
mov
ja
jl
std
inc
push
push
adc
pushf
das
lahf
and
out
mov
adc
stos
icebp
sub
adc
and
addr16
call
fcmovb
ds
leave
inc
adc
cwtl
nop
dec
repnz
sub
add
bound
add
into
arpl
fisttps
add
ret
pop
add
jecxz
js
in
cli
adc
inc
daa
xor
std
push
mov
or
je
push
gs
movsl
and
xchg
fst
in
int
out
adc
pop
stc
mov
ds
mov
pop
mov
xor
out
pop
sbbl
cli
bound
jae
pop
xor
mov
or
xor
mov
xor
decb
sbb
aad
aad
lock
dec
mov
call
push
rolb
repz
push
mov
es
push
outsb
and
xchg
std
xor
lods
cmc
orl
sbb
and
dec
out
repz
pop
cmpsl
pushf
cmp
repz
mov
dec
jo
shl
fcomps
aam
outsb
inc
cltd
pop
xlat
add
mov
call
addr16
fistps
mov
jl
in
enter
lods
push
adc
sub
mov
mov
push
fisttpll
loopne
scas
das
or
stos
sbb
daa
push
mov
ss
mov
sbb
icebp
insl
test
out
gs
mov
pop
and
mov
stc
and
mov
fwait
cld
xchg
dec
into
bound
sbb
insl
and
pop
push
adc
add
in
or
push
outsl
fdivs
sbb
test
xchg
int3
ret
shll
add
das
aam
sub
jnp
arpl
sub
cmp
mov
or
pop
aas
scas
dec
lahf
pop
cli
push
cmp
xchg
test
adc
xchg
mov
pop
sbbb
cld
repnz
lcall
mov
add
ds
loope
pop
in
mov
nop
aas
dec
or
cmc
xor
mov
jle
push
pop
xor
int3
mov
dec
rol
pop
xor
mov
fsub
and
lea
cli
sbb
rorb
lcall
shll
sub
or
cmpsl
pop
or
push
mov
pop
sahf
push
sti
insl
push
add
pop
sahf
mov
cmp
shll
mov
jae
loop
push
xor
fdivrs
fists
ret
mov
push
dec
test
popf
push
pop
push
xchg
in
push
push
fcomps
mov
sbb
rcl
call
das
loopne
daa
sub
nop
jne
mov
mov
dec
daa
loopne
ljmp
push
mov
inc
inc
adc
adc
pusha
fidivl
inc
pop
rcr
movsb
lret
jge
mov
rcll
push
inc
add
mov
ror
test
lock
sbb
xchg
cmpl
cli
sub
orl
dec
dec
insb
outsl
or
push
insl
imul
pop
dec
sbb
pop
rorb
add
repz
xchg
mul
shll
lods
inc
xchg
test
jp
in
xor
xor
dec
cmp
ds
jle
int3
cmpsb
push
pop
mov
push
mov
lret
ret
pop
enter
mov
dec
neg
cmpsl
sub
das
pop
xchg
leave
jnp
adc
inc
or
cmp
test
inc
ljmp
mov
jns
fcoml
xor
jbe
subl
push
cmp
adc
leave
out
movsl
test
mov
fldz
fwait
lcall
out
mov
cmp
jne
and
mov
and
pop
and
ror
mov
lret
fwait
xor
test
push
mov
mov
in
arpl
push
jae
inc
dec
scas
es
lret
add
loope
outsl
outsb
xchg
out
and
mov
push
add
lcall
test
addl
adc
dec
jecxz
and
adc
cltd
idiv
imul
xor
and
fistpl
pop
jge
fisttps
dec
das
icebp
ret
orb
movsl
dec
and
nop
xor
inc
inc
and
scas
adc
test
jb
lods
jbe
addr16
popf
aaa
cwtl
adc
jecxz
dec
in
ljmp
cmp
int
cmp
dec
cmp
outsb
aas
ds
fwait
adc
hlt
xor
sbbb
stos
push
mov
rcll
sub
ss
push
pop
cwtl
xchg
mov
pop
jae
fs
cmpsb
std
jl
sub
test
jno
lds
xchg
jmp
rorb
stc
push
or
in
sbb
pop
and
xor
mov
scas
arpl
xchg
gs
test
bound
leave
dec
cmp
push
sbb
push
or
fcmovu
test
aaa
stos
and
insb
add
dec
fidivl
test
sub
lock
popf
addr16
mov
ret
cmp
pusha
mov
jecxz
out
aaa
ljmp
out
mov
mov
shlb
lods
jns
in
lock
push
jns
roll
pusha
or
jecxz
mov
mov
jge
dec
fldl
xchg
lods
int
std
sub
jo
jo
insb
pop
pop
out
cmp
lock
repz
inc
mov
jmp
jecxz
clc
inc
ljmp
cli
pop
sbb
adc
insb
mov
out
xchg
inc
and
mov
rcrb
test
mov
sub
ret
test
mov
sbb
adc
adc
lds
xor
adc
daa
outsb
mov
jge
xchg
push
out
xor
push
sbb
out
jns
jg
jl
enter
ja
adc
cmc
mov
pop
loop
stos
out
fucomip
dec
pop
imul
scas
or
jge
push
xchg
out
out
adc
or
jmp
xor
cmp
fs
xor
mov
jns
and
mov
jns
mov
cld
repz
call
pop
cmpsb
jno
dec
mov
roll
je
push
leave
clc
push
mov
sbb
inc
daa
mov
shl
stc
cmpsl
xchg
daa
or
inc
push
lea
dec
sbbl
sub
xchg
out
movb
pop
aaa
xor
mov
jge
rclb
data16
adc
pop
insl
mov
fcmove
push
xchg
pushf
mov
out
stos
cld
xchg
jno
dec
add
add
jo
loope
pop
sbb
dec
or
ja
pop
mov
adcl
into
or
push
sub
push
push
xchg
add
dec
shrb
jne
popf
inc
in
and
push
adc
js
xchg
xor
mov
out
outsl
shll
fwait
out
cmpsb
je
xor
lods
les
sbb
mov
inc
lret
loopne
push
loopne
lcall
push
xchg
mov
inc
rcrb
xor
dec
loope
mov
shrb
subl
push
out
movsl
movsl
jle
pop
idiv
sarl
or
enter
iret
xchg
outsl
or
inc
mov
mov
mov
rclb
push
int3
fsubl
dec
and
pop
mov
sbb
sub
js
fldl
data16
rcl
clc
push
adc
les
jnp
insb
push
adc
xor
out
inc
ja
jl
mov
jge
sbb
pushf
sub
outsb
xorl
mov
push
and
jle
dec
shll
out
daa
push
mov
outsl
mov
loope
xor
lret
sbb
cmp
pop
lods
dec
fiaddl
sahf
sti
enter
push
dec
sbb
data16
jb
in
cmp
shll
mov
imul
shl
ja
negb
adc
cmp
cld
call
fwait
movsb
movb
pop
add
js
or
stos
jl
jl
out
scas
cmp
xlat
mov
or
mov
insb
inc
aaa
push
mov
sbb
jle
push
imul
int3
dec
pop
les
out
mov
rcrl
sti
ret
dec
cltd
xlat
lock
xchg
mov
or
pusha
inc
rcll
movsb
leave
mov
push
es
shlw
cs
mov
insb
mov
int3
ret
xchg
jecxz
and
pop
and
xor
repz
jne
in
sbb
or
or
mov
xor
rcrb
ret
dec
cmp
jge
push
fcoml
inc
dec
adc
repz
add
mov
push
mov
stos
in
stc
sbb
ret
jb
insb
int
fsubp
and
js
push
insl
fs
pop
pop
push
or
sub
nop
jno
pop
mov
inc
push
sub
addr16
sbb
dec
jo
popa
add
or
repnz
rclb
stos
cmp
add
hlt
add
js
mov
push
xor
addb
mov
mov
jbe
or
ljmp
xlat
jmp
sbbl
fisubrl
pop
jbe
push
ja
cld
call
test
popa
inc
cmpsl
adc
xchg
aas
pop
imul
into
test
cld
divl
in
push
in
icebp
jbe
out
pop
cmp
xchg
mov
jge
jle
hlt
iret
enter
dec
aam
adc
scas
xor
push
dec
out
adc
pop
xchg
in
push
rol
xchg
fnstenv
or
inc
jns
leave
out
pop
daa
js
dec
mov
xor
lret
out
add
or
cmp
movb
inc
sbb
aaa
fistl
cwtl
leave
in
fisubrs
dec
sti
adc
push
add
std
jo
repz
jle
jmp
aaa
sti
int
loop
je
ficoms
stos
jle
mov
pop
fisttpl
cmp
xchg
ljmp
loope
mov
pushf
push
push
test
std
shll
outsb
or
push
mov
lds
aas
pop
sahf
test
cmp
lock
cmp
lea
in
push
xchg
outsl
or
ss
insb
pop
fsubrs
mov
fwait
sahf
fsubrl
into
pop
fwait
adc
scas
lock
mull
and
lods
sub
stos
mov
mov
scas
xor
jb
jg
pop
pop
jg
fsts
add
aas
pushf
add
cltd
inc
xor
stos
xchg
ss
cs
outsb
iret
inc
mov
movsl
daa
imul
mov
xchg
jne
mov
movsb
mov
jno
lret
idiv
xlat
hlt
xchg
mov
bswap
pop
test
ds
sbb
lret
and
lods
dec
sbb
in
lret
jmp
mov
jo
lods
cmp
stc
dec
mov
adc
adc
ret
and
adc
xor
repnz
inc
mov
or
iret
jnp
fwait
cmpsb
lds
aam
jb
sub
popa
outsl
mov
hlt
sbb
adc
outsl
jns
vmovd
cmp
cmpb
aaa
fldt
xor
inc
ja
sub
popf
mov
loope
aam
adc
jne
xchg
into
or
dec
pop
test
popa
aaa
push
jne
cwtl
stc
mov
aam
cld
arpl
or
mov
lock
or
push
imul
push
jo
and
push
and
arpl
repnz
jno
leave
sahf
test
pop
inc
gs
xor
xchg
pop
push
xor
pop
insl
out
lods
sub
rcl
ljmp
repz
cmpsl
mov
push
shlb
sub
mov
leave
push
ret
xchg
pop
mov
imul
int3
xor
push
dec
or
dec
mov
adcl
sub
cmp
loop
pop
mov
inc
fsubs
rol
or
fdiv
pop
xchg
mov
std
test
dec
test
sub
daa
jle
inc
dec
dec
xchg
cld
scas
inc
int
xchg
inc
sub
and
call
cltd
inc
pusha
neg
jns
mov
pop
fisttpl
push
mov
sti
xor
bound
push
inc
jbe
pop
inc
push
push
mov
cmp
shrb
jne
pop
lock
inc
mov
pop
pop
mov
mov
push
stos
and
and
loopne
push
adc
sub
icebp
sbb
ret
jl
add
dec
inc
jl
push
xor
call
jns
in
cmc
mov
cs
xor
sub
out
xchg
addr16
inc
or
sahf
das
push
inc
xor
dec
push
loopne
pop
pop
sub
popa
mov
cmp
xchg
push
pop
stc
jmp
lods
repz
jb
rcr
mov
sar
mov
mov
cmp
pop
jle
pop
cmc
popa
cmp
leave
mov
js
insb
push
and
lods
int3
inc
mov
jge
xchg
roll
stos
pop
testl
push
or
loope
popa
les
push
mov
push
pop
dec
jbe
andb
and
jnp
xchg
sbb
push
xchg
sbb
loope
fldt
jg
pushf
inc
add
push
sbb
push
xor
dec
xor
icebp
rcrb
int3
iret
xchg
jmp
mov
lret
add
sub
dec
fistl
daa
popf
pushf
pop
leave
cmp
jns
pop
les
add
pushf
sbb
scas
pop
add
push
push
loopne
sbb
enter
sub
dec
and
xchg
mov
mov
push
cld
or
add
mov
push
push
jp
adc
adc
stc
gs
mov
imul
fwait
mov
inc
popa
mov
lret
pusha
out
or
lock
int
in
mov
pushf
fs
jnp
js
fs
lret
mov
jns
add
popf
std
sub
test
ja
xchg
divb
sbb
imul
and
mov
std
aas
in
or
xor
test
movsb
mov
pop
ret
push
mov
xchg
sub
jmp
loopne
xchg
in
rol
sub
mov
add
jno
xchg
mov
jns
mov
cmp
sub
mov
fnstcw
out
lods
ljmp
or
movsl
jl
insb
fwait
movsl
jne
es
fwait
cmp
ja
pop
jbe
imul
ljmp
lret
imul
sbb
inc
mov
xchg
int
rcll
or
imul
mov
loop
popa
cmp
inc
jb
inc
ficompl
mov
fwait
push
loop
pop
xchg
ss
mov
jo
mov
inc
movsb
and
xchg
loope
pop
add
jae
add
sbb
sbb
jbe
sub
rcrb
mov
push
dec
dec
mov
or
pop
rcll
out
adc
sub
jle
stos
lret
mov
dec
test
shl
gs
iret
in
mov
stos
aam
psadbw
xchg
fwait
outsl
jo
dec
jge
inc
fnsave
in
fcoml
fsubrs
xor
jg
lods
je
xchg
sbb
pop
mov
adc
lahf
enter
aaa
mov
xchg
add
add
push
adc
and
jp
mull
mov
add
jmp
sub
and
dec
leave
push
int
sahf
test
cs
fs
mov
xchg
adc
pushf
jbe
leave
ds
mov
mov
xchg
add
mov
into
adc
mov
and
aam
in
push
cmp
lret
aam
inc
js
inc
or
shrb
test
int
repnz
pusha
pop
pop
jnp
mov
mov
xchg
adc
test
push
test
test
jae
sbb
push
mov
xchg
sub
out
into
adc
or
fwait
sub
xor
inc
es
scas
dec
je
dec
test
enter
nop
jecxz
jb
sub
pop
push
andb
lret
mov
ljmp
orl
mov
jo
and
repz
mov
movsb
mov
and
pop
icebp
imul
sub
repnz
fbld
lcall
dec
daa
jns
pop
xlat
sub
cmp
and
fbstp
pusha
ficompl
in
pushf
pushf
cmp
fwait
sub
fwait
je
jne
repnz
xor
shlb
add
mov
jnp
jns
mov
pop
pop
scas
jmp
cmp
jbe
scas
clc
add
sub
and
sbb
and
mov
rcl
cmp
cltd
insl
js
cmp
pop
les
mov
ficomps
imul
hlt
gs
fldt
sub
dec
mov
ds
or
ret
push
mov
pop
pushf
jmp
ljmp
out
mov
cld
and
lret
js
scas
out
push
enter
xlat
jle
out
imull
sbb
pushf
mov
rol
stos
aas
in
inc
sbb
imul
js
js
xchg
push
enter
dec
or
subb
aaa
jno
out
or
out
cltd
cmp
push
cs
dec
or
xchg
call
test
jno
cld
jl
fistpl
insb
iret
xlat
xor
ret
add
pop
sub
andl
out
insl
xchg
mov
xor
jge
das
sbb
sub
test
mov
sub
fistpl
std
stos
pop
div
push
push
cmp
pop
push
clc
push
mov
testl
cmp
add
xlat
stos
xchg
and
popf
xor
inc
adc
jb
in
jge
mov
adc
pop
mov
jmp
xor
cmp
cld
push
sub
and
jmp
push
int
jg
outsb
test
inc
cmpsl
mov
adc
cmp
inc
dec
add
repnz
pushf
or
das
jns
push
or
jp,pn
mov
mov
mov
xchg
cli
add
mov
mov
icebp
and
clc
add
and
jecxz
xchg
repz
jae
pop
mov
mov
push
std
out
int
in
sub
sub
outsb
cmpsb
mov
out
pop
mov
pop
mov
fst
nop
out
xor
lea
fstps
pushf
scas
mov
pop
frstor
cmpsb
dec
aaa
mov
ret
push
xor
imul
xor
sub
mov
and
int3
jle
mov
in
and
scas
ss
addl
aaa
pop
lods
sbb
pop
mov
test
jno
mov
sub
mov
das
popf
ret
mov
pop
cmp
jmp
int
call
pushf
call
jns
push
out
push
mov
mov
adc
fildll
inc
lcall
xchg
mov
mov
clc
push
aas
dec
lahf
push
shr
cmpsl
jbe
push
pop
fdivl
cmc
adc
stos
jecxz
sti
data16
mov
and
hlt
and
dec
daa
mov
fdivs
int3
push
popf
sbb
lcall
push
imul
mov
push
fnstcw
push
arpl
jge
data16
mov
sub
xchg
mov
add
push
adc
fcompl
push
sti
push
mov
lcall
jb
xor
out
xchg
jmp
sbb
stos
jbe
mov
addb
or
icebp
enterw
hlt
ret
popf
movsl
mov
lahf
in
push
mov
cmpsl
or
scas
incl
mov
jg
or
mov
jb
mov
sub
dec
mov
stc
mov
xchg
cltd
or
lock
stc
jno
push
shr
leave
pop
or
cmpsl
repnz
inc
je
jbe
sbb
pop
xchg
icebp
fmul
jmp
gs
into
cmpsb
enter
cmp
repnz
dec
mov
sub
and
loop
aam
aaa
sbb
mov
cmpsl
sub
shll
adc
mov
ljmp
lret
push
scas
inc
mov
std
int3
out
je
mov
leave
jmp
and
pushf
add
sbb
sbb
adc
jo
roll
xchg
mov
push
jne
out
incb
out
inc
sbb
add
icebp
push
push
cmp
aam
lret
lahf
xchg
xlat
in
fldcw
data16
push
pop
push
shl
je
cmp
cwtl
ds
loop
sbb
or
inc
out
outsl
push
and
and
lcall
ret
mov
add
mov
bnd
xchg
pop
ss
ret
fs
stos
push
out
sbb
mov
call
adc
pop
mov
loope
test
add
or
push
pusha
or
bt
mov
mov
in
arpl
mov
push
repnz
jp
jle
push
push
into
push
notb
jae
xor
dec
fdivrs
arpl
jae
test
test
lahf
xlat
pop
xlat
and
or
loopne
pop
jp
lods
ficomps
jecxz
popf
pop
xchg
adc
sahf
cltd
getsec
call
lods
jmp
push
out
sbb
mov
dec
sti
push
add
inc
mov
js
push
out
jmp
stc
rcrb
movsb
iret
pop
popf
jns
inc
adc
nop
decb
push
jle
sub
xor
lret
xchg
subl
jmp
cld
jg
cmp
mov
cmp
sub
mov
mov
dec
xor
enter
inc
mov
lods
dec
mov
in
fst
sbbl
pop
fcmovnu
popa
adc
xor
hlt
xchg
ret
pop
dec
jg
sti
mov
dec
or
ja
les
dec
push
and
sbb
pop
idivb
sub
fcmovne
jle
and
jo
sub
orl
out
add
mov
pop
push
and
movsb
arpl
jecxz
mov
jbe
add
stc
pop
iret
fldl
xor
pop
call
leave
or
ret
ret
into
insb
insb
pop
fwait
or
repnz
lds
fdivl
push
sub
mul
jge
in
or
pop
faddl
xor
push
jmp
test
scas
adc
mov
jl
fidivrl
ds
lods
sub
or
add
cltd
mov
inc
fwait
fwait
adc
push
mov
push
mov
jmp
into
jo
outsl
lretw
aad
cwtl
jno
hlt
xchg
mov
push
jae
std
ret
add
fcmove
lods
iret
sahf
lods
add
iret
mov
add
inc
cmp
test
xchg
cmp
aam
lret
dec
jne
lods
stc
jbe
jae
or
mov
sub
adc
xchg
mov
int3
ds
jl
dec
adcb
xchg
out
sub
movsb
jne
mov
xchg
mov
inc
imul
imul
fimull
stos
mov
leave
sahf
mov
xchg
es
in
or
in
pop
aad
scas
icebp
cmpsl
xchg
lcall
clc
movsl
in
push
cltd
loop
mov
aad
push
dec
int3
add
decb
lahf
cli
mov
out
int
push
push
cli
mov
mov
add
dec
mov
and
leave
mov
pop
jno
repz
or
and
ja
daa
xchg
ds
testl
sub
or
divl
enter
aas
dec
insl
ds
insb
pop
push
or
sub
aam
in
push
jmp
jle
adc
icebp
inc
push
cmp
in
fiadds
test
test
jge
es
les
enter
mov
or
lret
aam
sbbb
lret
addb
mov
ret
cmp
push
add
mov
shlb
xlat
or
sbb
adc
loope
cmp
fistl
sarl
mov
fwait
mov
sbb
mov
ljmp
pushf
fmull
pop
sahf
dec
sbb
dec
aas
push
and
pop
jno
fwait
pop
lcall
ljmp
dec
and
fdivrl
data16
stos
stc
jb
std
add
outsl
rolb
mov
push
xchg
cmp
mov
cmp
add
cmpsb
bound
or
cld
outsb
jmp
mov
inc
mov
dec
jns
mov
xchg
ret
les
enter
push
shrd
ljmp
test
imul
test
scas
jmp
cmc
and
cmp
xor
movsb
mov
jnp
inc
cmovle
pop
inc
xchg
jno
push
sbb
pop
incb
aas
xchg
int3
cmp
jl
fisubl
repnz
loope
sahf
enter
pop
aaa
pop
jbe
test
jbe
aas
sahf
dec
inc
imul
push
push
jne
adc
sbb
addr16
fidivrs
or
mov
adc
cmp
dec
imul
into
ret
lods
jno
not
sub
roll
sahf
lcall
insl
xchg
jle
pop
inc
or
les
or
mov
fistl
fiadds
ffree
jge
sub
cmp
insl
subb
jl
movsl
jg
nop
test
test
push
ja
ss
sub
xrelease
mov
mov
gs
adc
mov
lahf
add
or
adc
lock
aas
test
pop
or
rcr
iret
inc
dec
aas
call
jne
sub
iret
subb
xorl
jne
sub
xchg
pop
xchg
in
and
mov
lret
addl
jmp
pop
mov
mov
mov
pop
sbbb
jecxz
sbbl
fcmovnbe
pop
mov
sahf
fidivl
push
sub
mov
inc
inc
mov
mov
pop
in
into
dec
popf
jno
jae
aaa
out
repz
rcrb
nop
in
fldenv
in
mov
pop
mov
scas
inc
lock
jg
adcb
iret
xorl
out
add
in
inc
add
mov
xchg
mov
xchg
loop
dec
mov
cmp
push
hlt
je
repnz
loop
sbb
or
cmp
mov
push
adc
mov
stc
cmp
or
repnz
enter
sub
adc
xchg
xor
sti
push
loope
dec
mov
mov
scas
inc
add
stos
jecxz
inc
lret
nop
dec
mov
and
imul
push
pop
sbb
mov
adc
jecxz
cld
pop
push
test
mov
adc
fistl
sahf
mov
test
and
std
jbe
mov
test
add
in
lock
je
sbb
repz
int3
mov
or
xor
in
lret
loop
cmp
subb
ds
jecxz
dec
mov
xor
cmp
movsb
aam
ret
cmpsl
fbstp
inc
enter
sbb
inc
enter
in
jo
loope
pop
cmpsb
fistpll
cmc
mov
and
jl
xor
sub
ret
mov
xlat
dec
add
je
sbb
ficomps
inc
inc
jl
addb
das
pushf
stos
adc
lahf
pop
iret
je
pop
and
fisubrl
addl
xchg
gs
movb
xchg
insb
loope
rolb
add
add
push
pusha
dec
adc
outsl
inc
in
ja
int3
mov
sub
jnp
imul
mov
jmp
adc
cmc
test
pcmpgtb
inc
sbb
mov
dec
cmc
sbb
call
dec
lock
add
rcl
adc
fstl
pop
lret
jecxz
mov
loope
insb
pushf
and
xorb
lahf
call
mov
jo
mov
cld
ja
js
loope
scas
fmul
aam
pop
push
loope
lods
sahf
test
sti
cltd
fwait
xchg
gs
cmpsl
and
mov
shrl
enter
aaa
je
or
test
add
lret
cmpsb
imul
rorl
inc
inc
pop
ljmp
iret
mov
pushf
jno
mov
xor
mov
dec
push
push
push
ret
negl
mov
cmpsl
popf
push
jle
clc
and
dec
xor
xchg
fs
inc
mov
cmp
xor
aas
rcll
push
test
js
ja
testl
inc
cli
shlb
xchg
mov
test
cs
stos
in
rcll
pop
mov
das
scas
sub
test
cli
mov
stos
jle
mov
dec
xchg
int
and
cmpsl
push
jns
les
jno
in
push
dec
ljmp
xchg
sub
das
push
cli
pop
fidivrl
mov
xchg
cmp
insb
cmp
or
rclb
cmp
stc
adc
arpl
pop
inc
imul
in
cmp
rcr
aaa
or
fdivrs
and
xchg
xor
lret
loop
mov
add
in
mov
dec
jae
js
add
fsubl
xchg
push
cmp
push
add
jno
out
bound
mov
cmpb
fmul
cmp
adcl
lea
test
popa
aas
add
mov
std
out
sbb
aaa
ss
mov
push
jg
lods
addr16
out
push
inc
dec
mov
out
mov
inc
xor
clc
dec
xchg
ret
jbe
add
ror
aad
and
sbbb
jp
xor
and
fstpl
scas
insl
out
xor
cs
cmp
push
xchg
movsl
stc
jne
jle
xlat
mov
lret
adc
loop
aas
sub
mov
mov
lret
lcall
aad
sub
int
xchg
sub
or
adc
pop
mov
leave
mov
out
push
outsl
xlat
je
mov
std
int
sub
sbb
cmp
test
cmp
dec
movsb
sbb
jnp
fs
inc
loope
repz
cwtl
nop
pusha
pop
int3
cmp
push
push
hlt
jle
xor
aaa
icebp
or
adc
xchg
mov
dec
pushf
aad
ret
sub
xor
jl
or
inc
fstl
fdiv
sub
es
lahf
flds
dec
shld
adc
sub
xor
es
add
push
xchg
adc
data16
xchg
outsb
mov
or
xor
mov
or
adc
ja
mov
xchg
dec
ret
test
ret
jmp
rol
or
in
cmp
inc
sbb
test
mov
mov
lea
fidivs
sub
mov
mov
cld
jns
ljmp
adc
nop
mov
adc
xchg
sub
mov
fwait
push
je
xchg
pushf
and
pop
int
push
mov
incb
cmpsl
aaa
push
in
jmp
call
flds
xchg
insl
fimull
cmpsl
adc
subl
mov
sbb
jbe
mov
inc
and
push
sub
mov
pop
dec
imul
push
mov
ljmp
xorb
fsts
into
cmp
stc
xorl
xor
in
daa
pop
aaa
aam
mov
xor
sub
push
push
push
lret
adc
sub
dec
out
test
loopne
xorl
xor
xlat
in
mov
mov
data16
xor
test
fstps
mov
mov
mov
xlat
in
cmp
ss
sub
in
pop
xchg
xchg
test
sbb
loop
in
mov
inc
sbb
sbb
sub
and
stc
jecxz
iret
xlat
addb
mov
insl
pop
inc
xchg
and
add
or
push
outsb
enter
jl
fs
xor
and
andl
int3
ds
fiadds
mov
stos
inc
mov
xchg
lods
xchg
and
add
mov
icebp
das
lods
in
cmpsl
in
push
int
xchg
lock
aaa
icebp
addl
xchg
cmp
es
imul
aas
pop
mov
mov
subps
int3
push
mov
mov
xchg
idivl
into
dec
sahf
pushf
out
mov
ret
lods
pop
inc
ljmp
fs
add
sub
push
dec
lcall
in
adc
shlb
sub
popa
es
xor
ss
nop
adc
lcall
cmp
movsb
aas
pop
adc
sbb
mov
lock
ja
jbe
or
jno
sbb
adc
mov
enter
sub
rorb
arpl
aad
push
adc
fisttpl
fucomip
lds
loop
sti
rclb
psrlq
jmp
push
cmp
pop
sub
cmp
pop
daa
sbb
ss
daa
pop
mov
fwait
inc
imul
dec
inc
add
test
ss
in
add
or
shrl
jge
loope
js
clc
rcrb
pop
or
jmp
xchg
ret
clc
cmp
nop
bound
sbb
dec
js
mov
sbb
lahf
adc
add
outsl
outsl
out
pop
out
dec
mov
xor
cltd
push
mov
test
xor
jmp
fisubrs
sub
push
aas
ljmp
fwait
cld
xchg
mov
xor
stos
lds
pop
add
cmp
xor
push
push
cli
jnp
in
xchg
outsl
lods
rcrb
nop
cmp
adc
mov
pop
cltd
sbb
loopne
sbb
sti
xchg
lods
mov
sbb
or
pop
xor
add
outsl
sahf
test
pusha
aam
and
dec
aad
mov
xor
push
dec
cmp
add
daa
shl
mov
cs
cli
or
mov
mov
aam
loope
xor
in
lahf
cmp
and
lea
sarb
push
mov
dec
addr16
inc
popf
js
cmp
hlt
ds
pop
repz
mov
test
sub
sbb
fs
sbb
cmpl
inc
cmp
ds
lahf
mov
xor
addr16
mov
mov
mov
or
add
and
jne
fwait
shlb
xchg
push
pop
inc
sbb
inc
mov
or
nop
sbb
cmc
testb
cmp
dec
test
icebp
movsb
push
sub
mov
push
xchg
cmp
fstpt
mov
loope,pn
mov
or
xor
jo
scas
lods
loop
sub
mov
insb
and
je
pop
call
int3
push
fcmovne
mov
sti
icebp
push
cmpsl
fdivs
aas
stc
lds
pop
sbb
cs
mov
and
ljmp
push
clc
pop
dec
inc
sbb
ja
testl
pushf
loopne
mov
inc
out
stos
movsl
mov
fs
testl
mov
stc
push
sub
cmpsb
aas
mov
popl
dec
cmp
cmpsl
popa
pop
sbb
add
mov
pusha
cmp
xchg
enter
xorb
add
mov
jecxz
dec
add
ret
in
test
mov
ret
leave
dec
movsb
sub
jle
lret
and
bound
adc
sub
test
arpl
lods
in
push
jg
int3
jl
push
lods
jl
fldt
mov
xchg
imul
ss
mov
aas
jbe
mov
stos
add
les
push
adc
insl
sti
xor
push
sarl
je
cmp
addl
xchg
shlb
andb
loop
xchg
or
xchg
rorb
loope
mov
or
mov
cmpsb
or
imul
mov
mov
jle
stos
xchg
shll
inc
mov
jmp
pop
inc
rolb
inc
sahf
fwait
mov
insb
mov
adc
sahf
dec
or
imul
cmp
cmp
mov
dec
mov
dec
stos
mov
cltd
out
ljmp
jl
mov
rolb
xchg
adc
loop
inc
mov
dec
scas
adc
pop
push
fs
cltd
push
test
fwait
jge
fbld
sbb
mov
pushf
lcall
sub
ret
jno
test
leave
jg
or
lock
fistps
mov
pop
ficoms
inc
in
lods
push
mov
sbb
xor
xchg
out
adc
push
les
sub
stos
mov
sub
push
pop
mov
add
or
lods
add
jns
mov
push
or
lods
sub
outsl
xchg
aas
mov
into
xchg
jl
loop
or
cmpsl
pop
pop
inc
loop
or
cld
and
insb
push
jne
lock
push
lea
out
inc
adc
subb
add
jae
adc
lret
pop
hlt
fstpl
xchg
mov
inc
adc
push
sbb
sub
jnp
dec
jne
mov
lods
loopne
scas
js
dec
cmpsb
ja,pn
shlb
test
inc
fdivrp
push
aam
iret
mov
xor
insb
mov
xchg
push
adc
jp
jne
insb
inc
outsl
xchg
cld
clc
adc
mov
outsl
gs
lret
imull
sbb
jae
hlt
in
testb
stc
aam
lock
xchg
cli
clc
xor
dec
cltd
pop
add
mov
int3
lret
icebp
rcrl
adc
pop
add
mov
jmp
sarl
lea
je
in
sub
xor
aam
fprem1
jmp
fnstenv
xchg
xchg
mov
mov
sahf
cwtl
and
mov
fstps
mov
iret
testl
pop
mov
scas
incb
jae
lret
xor
mov
aad
xchg
or
stos
cmp
addb
aad
cmp
xchg
pop
out
mov
or
xchg
pop
dec
xor
xchg
pop
lret
inc
dec
cli
sub
and
mov
vpextrw
pop
add
je
loop
cmp
loopne
int
push
jae
ljmp
and
push
out
mov
bound
push
movsl
ja
ljmp
dec
jo
std
sub
dec
inc
cs
pop
mov
dec
mov
mov
out
ds
es
adc
in
mov
sahf
mov
mov
cmp
dec
inc
sub
jb
lahf
loopne
jnp
dec
mov
iret
or
xchg
fldenv
mov
push
adc
mov
adc
push
xor
jno
mov
dec
pop
bnd
mov
dec
jae
push
mov
lods
or
imul
movsb
stos
dec
dec
pop
pop
inc
or
dec
test
test
daa
cld
jmp
cld
inc
mov
xor
dec
scas
inc
xor
xor
jbe
sbb
mov
faddp
add
lahf
jbe
scas
popa
mov
dec
stc
mov
push
popa
push
pop
repnz
or
or
xlat
aad
xchg
xor
lods
dec
cmp
ds
and
dec
into
push
jae
push
loope
hlt
imul
sub
dec
int
not
shlb
xchg
and
dec
cs
dec
test
xorl
cltd
decl
jle
mov
xchg
pop
xchg
or
das
popl
pop
xor
mov
fwait
jge
mov
sub
sbbl
mov
je
pop
insl
stos
cmp
ds
jmp
push
pop
push
push
lock
sti
or
jle
mov
mov
fwait
dec
pop
notb
xor
adc
cmp
jge
or
sub
ret
movsb
push
xorb
xor
add
adcl
jb
push
adc
clc
xor
cmp
add
xchg
push
out
pop
mov
mov
imul
test
xchg
jle
and
bswap
dec
pushf
fiadds
xorl
pop
fidivrl
and
aaa
push
push
inc
add
roll
loopne
lcall
scas
cmpsl
xor
jb
xchg
in
fsubrl
push
push
les
fsubrp
in
pop
movsb
idivl
fstl
ret
loop
fdivr
aaa
sbbb
and
add
fwait
xor
jg
loopne
push
xor
push
sbb
sub
enter
mov
jmp
leave
loopne
leave
push
in
add
pop
sbb
add
push
sbb
mov
or
xchg
xchg
mov
xor
jno
mov
dec
pop
or
xor
xchg
gs
imul
shl
jae
inc
jo
int3
rolb
add
imull
sar
aas
add
sbb
rcr
inc
sbb
pop
or
adc
pop
fldl
aas
gs
jae
addr16
in
div
nop
mov
push
cmovne
jne
xchg
xchg
lods
insl
mov
shr
push
sub
push
cwtl
sub
push
rolb
jo
hlt
int
nop
adc
in
sub
sbbl
shll
mov
dec
adc
nop
mov
pop
mov
lds
sub
or
adc
sahf
shrb
js
ds
pop
outsb
movsl
repz
sub
sti
enter
ja
pop
repnz
filds
cmp
sub
stos
mov
pushf
fiadds
mov
pop
push
and
inc
out
lret
js
clc
cmpl
inc
push
mov
jo
adcb
fildll
mov
ds
mov
fdivl
imul
hlt
adc
pop
dec
enter
fstpl
cwtl
daa
subb
mov
ljmp
pop
pop
stos
lahf
ja
lret
mov
xchg
out
mov
xchg
cmp
pushf
ljmp
cmpsl
and
cwtl
dec
or
push
add
xor
flds
in
repnz
pop
push
pop
fidivl
stos
fldt
dec
sbb
stc
scas
xor
mov
les
fnstenv
sti
movsl
and
ret
dec
add
jp
xchg
out
ret
loopne
push
add
xor
roll
push
int3
cli
divl
jns
add
rclb
cld
pop
jmp
pop
jmp
lods
adc
xor
mov
icebp
mov
mov
loope
addr16
jl
stos
test
xchg
add
jge
and
js
divb
sub
add
pop
pop
cld
mov
enter
dec
loope
jge
data16
jbe
lret
add
scas
mov
xor
cwtl
jne
loop
cmp
pop
sbb
cmp
popf
fimull
stos
sbb
subl
pop
popf
scas
jb
sbb
scas
clc
in
ljmp
es
test
out
mov
cli
mov
clc
out
sbb
jae
loopne
cmpsb
cmp
loop
mov
clc
loop
test
cmc
cmpl
pop
aas
cltd
fdivs
dec
dec
pop
test
loope
jmp
mov
les
cli
mov
mov
sbb
cltd
sub
add
ret
jb
divb
out
sbb
aad
or
jbe
push
push
scas
dec
cltd
mov
cmp
insl
hlt
jmp
in
sbb
add
cmc
dec
add
je
insl
aaa
popa
mov
xchg
hlt
pusha
mov
rcll
sbb
out
fbstp
push
mov
push
les
aas
sbb
xor
or
ret
adc
iret
xlat
jmp
inc
lods
sub
cmp
cmp
xor
xchg
jo
push
xor
add
sbb
cmp
mov
adc
sbb
mov
int
aad
out
movsb
pmaxub
cmp
mov
enter
fwait
pop
ljmp
lret
pop
mov
bound
mov
out
decb
mov
lcall
movsl
loopne
add
sub
and
xor
addr16
pop
sbb
and
xor
xchg
cs
insb
test
popa
and
jg
decb
cld
iret
mov
aam
cltd
or
push
lock
xchg
loopne
and
addr16
aam
loopne
add
nop
cmp
loopne
push
jle
mov
std
pop
rcl
insl
jmp
inc
or
or
inc
lds
mov
cmp
sbb
push
clc
sbb
mov
dec
pusha
sub
movsb
add
je
sub
mov
pop
pop
xchg
cmp
mov
je
pop
loopne
push
rcr
es
cmpsl
adc
std
stc
movsl
sbb
lock
fidivl
push
push
push
add
stos
sbb
jge
add
xlat
ret
arpl
and
bound
sbb
inc
js
inc
inc
insb
xor
es
sahf
sbb
gs
sub
out
add
mov
cmp
mov
and
mov
dec
loopne
es
lock
roll
ja
es
xchg
push
cmpsl
call
in
test
jecxz
jmp
sbb
mov
popl
addr16
xchg
push
insl
dec
popa
sbb
pushf
sbb
bound
pop
xchg
cmpsb
test
in
in
into
mov
mov
add
decb
jg
jle
js
jae
repz
add
cld
lock
ret
outsl
jg
xor
ret
xchg
fldcw
inc
jno
lret
pop
cld
enter
scas
cmp
int
flds
sbb
hlt
cmp
cwtl
jecxz
cmp
stos
insb
push
push
push
adc
mov
in
or
add
jp
dec
jmp
mov
fsubrs
mov
pop
testb
inc
repz
lret
mov
mov
int
inc
inc
das
test
inc
iret
sub
lea
mov
mov
pop
scas
mov
stc
scas
mov
test
mov
dec
xor
outsl
fldcw
inc
fs
mov
test
int
mov
cli
pop
and
ss
dec
testl
pop
mov
jb
addr16
lcall
insb
rcrb
mov
in
mul
mov
lock
xor
sbb
arpl
jle
adc
aas
pusha
mov
cmp
stos
cld
das
inc
popa
cmp
dec
sti
mov
jno
das
jge
inc
sub
jne
lods
lods
dec
adc
mov
mov
add
dec
inc
sbbl
add
lret
push
pop
xchg
divl
xchg
push
les
cwtl
fcoml
adc
or
mov
xchg
cmp
je
mov
repz
or
movsb
mov
stos
dec
add
lret
lret
push
pusha
mov
pop
mov
pop
insb
xor
incl
and
pushf
dec
inc
fcoml
sbb
xchg
daa
nop
mov
les
xchg
pop
add
push
mov
cmp
jmp
jo
outsb
cmp
inc
popa
xor
dec
lock
adc
lahf
test
pop
push
inc
cmpsl
cmp
sbbl
gs
pusha
mov
dec
cmp
test
and
int
test
lods
push
mov
add
xchg
test
pop
mov
mov
fpatan
sub
mov
pop
jmp
loopne
sbb
push
stos
jnp
ret
int3
pop
js
xor
sti
cli
addr16
test
and
repz
adc
push
scas
popa
cmp
and
push
mov
aad
xchg
rclb
daa
dec
bound
mov
int
ret
pop
push
popa
leave
decb
stos
inc
mov
mov
xor
pop
add
insb
dec
inc
lret
sub
int3
scas
jb
mov
test
dec
jns
jnp
adc
aad
xor
sbb
dec
fcoml
popf
xchg
ror
mov
cmp
or
int
mov
push
add
fsubrl
insb
sbb
xor
dec
sbb
sub
and
cwtl
inc
out
subb
lahf
cli
les
xor
cmc
mov
xchg
push
clc
ret
xchg
mov
mov
sbb
lock
adc
enter
push
stos
sub
mov
shrl
popa
jbe
loop
test
roll
std
ja
bound
pop
insb
divb
mov
xor
xor
jns
mov
add
inc
subb
push
lret
out
and
fisubl
inc
out
adc
outsl
mov
loopne
arpl
call
sahf
cwtl
sub
ficompl
popf
mulb
lret
push
andb
or
and
into
xchg
push
popf
and
and
pusha
pop
enter
in
mov
test
mov
sbb
cmp
xchg
and
or
popa
daa
cmp
inc
jl
push
mov
and
ds
pop
sub
mov
divb
fsubrs
mov
or
jmp
xchg
aam
adc
or
xor
jb
scas
cli
ja
pusha
hlt
and
xchg
incb
and
outsl
xorl
mov
sbb
pop
lret
jmp
xchg
outsl
adc
pushf
scas
pop
retw
dec
cli
xor
and
dec
imul
roll
mov
add
jge
rolb
sub
xor
outsb
ficompl
mov
pop
adc
adc
xchg
and
xchg
xchg
inc
adc
cld
into
popa
pusha
xchg
push
or
push
inc
adc
and
push
fstl
repnz
sub
sahf
add
fistpl
adc
fcmovbe
ljmp
addr16
ja
pop
stos
pop
iret
dec
addl
cltd
mov
bound
inc
in
in
das
mov
sbb
insb
push
sbb
push
xor
stos
lahf
jecxz
scas
clc
inc
push
loop
ljmp
shll
lds
call
push
out
adc
xor
pop
bound
ret
mov
dec
inc
das
and
scas
leave
mov
pop
daa
and
pop
in
and
push
push
cmp
daa
mov
sbb
movsb
mov
jne
mov
in
pop
sti
call
neg
lahf
jmp
cmpsb
mov
xlat
hlt
test
xchg
cltd
hlt
hlt
push
mov
xor
ds
out
out
or
add
fmull
ds
push
lods
orb
popa
mov
movsb
sbb
push
jmp
loope
xchg
repnz
mov
jmp
jg
jo
imul
jge
jae
inc
rcll
pop
add
aam
cli
je
int3
jbe
sbb
mov
mov
mov
mul
adc
and
int
mov
dec
aam
into
cmp
mov
inc
sbbl
push
mov
adc
jb
push
add
xor
rclb
cmp
adc
ja
jecxz
stos
les
rorb
push
icebp
pop
or
push
iret
decb
cmp
mov
mov
dec
repnz
jnp
inc
xor
mov
lods
out
movsb
cmp
stc
adc
bnd
cs
mov
cmpsl
lea
or
add
jge
icebp
sbb
call
bound
fwait
adc
adc
or
cmp
movsb
std
popa
test
xchg
xchg
sub
adc
and
adc
sbb
test
fsubl
lods
mov
js
xchg
ret
mov
sahf
and
mov
xchg
jle
xchg
push
frstor
lahf
daa
test
or
in
and
ret
outsb
data16
jae
mov
pop
pop
dec
or
leave
lock
loopne
mov
pop
pop
mov
xchg
and
sub
mov
imul
icebp
fiaddl
sub
mov
pop
ss
in
icebp
fdivrl
mov
sbb
sbbb
xchg
cmp
mov
dec
xchg
lods
enter
fbld
fsubrs
stc
fistpll
add
xor
out
dec
nop
push
jno
push
jae
test
stos
jg
ret
addr16
push
mov
mov
clc
xor
clc
popa
sahf
cli
mull
cmc
sub
pop
test
nopl
xor
ds
and
in
sub
pop
shrl
adc
push
xor
xchg
cmp
dec
movsl
push
push
aam
pusha
mov
stos
pushf
daa
sub
scas
jno
stos
les
fmulp
jb
or
cli
xor
and
lret
iret
mov
insl
cs
mov
insl
mov
push
negl
cld
push
xchg
das
xor
rol
test
icebp
iret
xorl
sbb
cmp
jmp
push
decl
dec
test
sti
icebp
cwtl
mov
iret
mov
jge
dec
fldl
insb
xlat
adc
stos
lods
fwait
mov
scas
cli
xor
ss
dec
jge
fsubp
lods
sub
mov
insl
add
arpl
xchg
pop
jmp
jge
cmp
xchg
test
imul
nop
aam
xchg
nop
scas
jp
scas
push
repz
test
roll
fcmovnbe
inc
loopne
stos
jns
test
ror
call
xor
pop
sbb
sbb
add
sub
js
push
nop
test
mov
sub
push
negl
mov
dec
inc
stos
lea
push
loop
mov
scas
or
sbb
repz
adc
sarb
test
pop
aas
xor
divb
jmp
dec
adc
in
in
dec
pop
jbe
inc
mov
mov
sub
or
sbbb
inc
aad
cmpsl
mov
andl
inc
jbe
push
dec
add
pop
imul
fidivs
cmp
adc
sbb
ret
std
xor
lret
in
push
push
cmp
push
adc
xor
jno
leave
negl
and
add
xor
es
fnstsw
movsl
test
test
cs
push
push
xchg
pop
mov
adc
xor
push
mov
rcll
xor
jbe
mov
mov
mov
jge
xor
xor
jge
ds
ss
jge
inc
ljmp
imul
push
xchg
and
mulb
int3
cld
sub
mov
jne
add
lods
or
jmp
ret
hlt
adc
arpl
fs
xlat
or
mov
dec
je
fs
enter
jnp,pt
frstor
imul
orl
out
scas
data16
jae
inc
loop
mov
jbe
jmp
adc
ss
xor
or
adc
mov
jmp
inc
sbb
movsl
das
xlat
push
cmp
out
mov
adc
inc
scas
dec
jnp
push
cwtl
dec
push
cmpsb
mov
sub
pop
insb
cmp
xor
add
stos
test
inc
add
and
cmpsb
dec
add
sahf
idivb
jecxz
cltd
lcall
pusha
or
mov
xchg
jnp
gs
shll
lea
mov
sahf
or
push
pop
sub
or
cld
jae
pop
inc
lahf
mov
mov
push
ss
mov
mov
adc
mov
or
pop
mov
pop
js
pop
or
lcall
aas
repz
imul
vpsubsw
or
test
shrd
setb
aad
or
lock
aaa
inc
mov
adc
sbb
jns
and
pop
ficoml
pop
pushf
inc
jnp
or
out
jo
negl
jg
cmp
jb
xchg
sbb
add
leave
push
pop
xchg
sub
and
sti
clc
shlb
pop
cmp
xchg
cltd
repz
xor
jmp
push
ljmp
push
push
adcl
xor
jle
sbb
push
pop
int3
xchg
push
xchg
sbb
inc
mov
mov
ss
jle
out
lea
xchg
jbe
push
fcmovb
dec
int
pop
jl
mov
sbbl
in
and
cmp
adc
mov
xchg
add
sbb
cmp
fisttpl
push
aad
xor
pop
fucomp
pop
imul
pop
or
test
mov
jmp
jbe
dec
push
pop
jnp
addr16
add
add
pop
pop
or
fisubs
and
push
sti
xorl
lret
stc
adcb
ret
sub
push
imul
cltd
sahf
gs
sarl
dec
daa
sbb
cmp
xchg
data16
inc
xor
ss
insb
add
in
loopne
jp
mov
cmp
and
mov
lcall
cmp
incb
fisubrs
in
in
stc
adc
mov
leave
imulb
mov
inc
add
fdivrl
mov
pop
push
jnp
adc
inc
mov
repnz
dec
movsl
sbb
into
fnstcw
sub
push
scas
add
xchg
cli
sbb
dec
xor
and
sub
mov
fstpl
push
xor
hlt
fisubl
sub
icebp
enter
test
test
pop
into
cmc
sti
lahf
dec
mov
jle
or
aam
lahf
xchg
es
leave
fadds
mov
add
mov
sub
pop
push
dec
repnz
push
xor
in
aas
nop
inc
pop
sbb
repz
adc
pushf
push
out
xchg
sub
sub
adc
iret
pop
repnz
aam
mov
shlb
and
jg
mov
jnp
popa
fcompl
push
add
xchg
imul
add
mov
outsb
les
std
sarb
aas
daa
imul
int
nop
jmp
out
test
stc
sub
adc
mov
icebp
lods
mov
and
xor
rolb
or
insl
movsl
mov
fcmovnb
mov
lods
adc
hlt
insl
or
call
ret
imul
repz
popf
cld
jae
fcomip
jae
add
push
mov
sarb
subb
rcrb
sbb
ffree
xchg
xchg
add
add
scas
sbb
cmp
movsl
movsb
jmp
push
jbe
call
cwtl
cmp
movsb
div
and
lea
test
pop
push
mov
rcll
dec
inc
sbb
jns
push
xchg
push
sub
sbb
jns
mov
adc
push
push
in
in
sub
mov
int
pop
push
push
push
dec
or
adc
inc
sbb
mov
add
subl
hlt
fs
sub
adc
out
ficoml
mov
cmp
data16
pop
jg
cmc
inc
or
and
add
mov
jbe
mov
cmp
inc
pop
xlat
sub
sub
add
pop
xchg
fucomp
mov
mov
aas
shll
testb
jecxz
hlt
cwtl
stos
sub
lcall
add
adc
aad
test
and
jnp
testb
pop
sbb
mov
adc
adc
pop
xlat
xchg
ret
lods
dec
shrl
and
outsb
aaa
mov
loop,pn
pushf
jmp
inc
pushf
jne
fisttpl
or
jp
push
fwait
sbbb
pop
stc
js
lock
lods
add
sbb
jne
lret
enter
fisubl
push
inc
jecxz
scas
jae
repz
mov
mov
cmp
imul
shll
jne
das
imul
mov
lods
mov
clc
mov
push
mov
out
popa
fsub
dec
xor
cmpsl
inc
jp
or
call
ljmp
cli
cmc
push
and
jns
inc
stc
iret
mov
fstl
cmp
pop
pop
out
jnp
or
ljmp
add
or
test
sbb
xchg
in
mov
std
sub
dec
insl
repnz
dec
lea
dec
popa
pop
inc
jge
lods
xchg
aas
in
mov
jmp
mov
jbe
popa
mov
jb
push
outsl
and
sub
push
or
sbb
and
out
push
jg
cld
add
ljmp
aaa
push
out
fisttpll
sbb
loopne
fbstp
dec
fimuls
xchg
xlat
jge
jbe
push
test
jmp
dec
stos
les
mov
inc
jg
cmp
faddl
cmpsb
push
rorl
push
xlat
ljmp
and
fistpl
sbb
cmc
sub
mov
imul
xchg
push
cmp
and
in
mov
cli
dec
cmpsl
mov
adcl
aas
lahf
add
xor
fwait
inc
in
inc
repz
add
sbb
mov
push
mov
jl
push
xchg
dec
pop
jmp
iret
mov
mov
cltd
cs
mov
je
sbb
lods
cmpsb
cmp
adc
rclb
ja
pop
pandn
add
je
mov
sbb
jp
cli
xor
fs
lahf
popa
lods
nop
js
imul
and
push
incl
mov
dec
les
dec
movsb
clc
inc
or
mov
adc
out
or
ds
ljmp
sbb
cld
mov
mov
enter
xchg
icebp
inc
ret
test
push
xlat
sub
jbe
jo
cld
mov
stos
pop
xlat
mov
mov
repnz
in
mov
loop
mov
pop
inc
jge
fbld
jb
cmp
push
inc
mov
sub
pop
stc
mov
lds
mov
cs
sbb
mov
lds
in
stos
mov
or
loopne
mov
lahf
in
mov
and
xor
mov
jl
aad
mov
test
ja
cmpsl
inc
cmpsb
sbb
lea
pop
scas
repz
jp
cmp
fistps
call
mov
mov
adc
sub
aam
or
cmp
push
arpl
les
lret
push
imul
in
mov
outsl
ds
test
mov
andl
icebp
pop
shr
and
stos
outsb
xchg
mov
pop
lahf
in
push
jmp
ret
je
inc
dec
xor
lods
scas
jb
fnstcw
jnp
dec
add
add
test
hlt
daa
jg
mov
adc
or
pop
and
jg
pop
pop
adc
call
mov
push
jl
cmpsb
dec
lahf
sti
enter
stos
xlat
movsb
mov
sbb
fcoms
dec
icebp
mov
call
cwtl
daa
pop
push
jmp
xor
push
cmp
mov
xchg
popf
push
into
push
push
ficompl
cmpsb
xor
aad
mov
fcomi
inc
into
fdivrs
lea
int3
and
add
icebp
je
push
pop
dec
jnp
mov
ljmp
outsl
dec
pushf
lods
call
dec
add
jne
fcoml
subb
out
mov
push
mov
daa
and
dec
push
dec
out
dec
iret
inc
add
adc
jmp
out
pushf
xchg
test
movb
das
xor
cmc
js
loop,pn
shll
mov
iret
lea
cmpsl
imul
adc
ficompl
les
pop
outsb
imul
or
jns
insl
inc
mov
std
test
add
dec
xchg
jns
push
repnz
and
iret
shrb
aam
dec
pop
rcrb
js
loope
mov
popf
pop
cmc
inc
cwtl
lahf
and
stos
sub
call
pusha
roll
int3
rorb
aam
add
pop
shll
jle
movsl
out
xlat
xor
arpl
cmp
jae
mov
or
out
loope
fnsave
pop
cmp
cmc
cvtps2pd
fisubl
fs
mov
mov
cwtl
repnz
sarb
xor
loope
sbb
mov
cmc
jno,pt
test
push
add
loopne
ljmp
outsl
xchg
mov
pop
dec
add
pop
add
fs
mov
xor
and
out
lock
sbb
les
xchg
je
in
mov
sub
cmpsl
popf
jns,pt
stos
xchg
popa
test
loopne
movsb
jne
push
jne
sub
inc
decb
and
imul
cmp
in
mulb
add
jecxz
dec
push
cmpb
add
mov
imul
ret
sbb
or
fs
into
lret
call
dec
pusha
mov
cmp
aad
and
icebp
in
scas
sbb
fiaddl
jl
push
rorb
loopne
inc
imul
pop
xor
pushf
xchg
in
fnstsw
scas
pushf
outsl
mov
cmp
ja
mov
iret
inc
pop
pop
fidivs
mov
mov
ret
mov
mov
xchg
std
add
and
out
aas
sahf
stos
test
mov
sbb
rorb
das
mov
inc
enter
aaa
push
push
and
andl
fs
enter
xchg
add
ljmp
pusha
fyl2xp1
lock
mov
jne
jp
sbb
xor
add
dec
mov
dec
pusha
js
fwait
aam
imul
and
adc
dec
or
push
aam
test
cmp
movsb
popf
aaa
or
jge
jecxz
fstpt
inc
push
pop
mov
pop
out
test
rcr
in
sahf
and
xlat
outsl
xor
lret
in
dec
sub
xor
sbb
aad
xor
or
ficoml
pop
push
inc
scas
xchg
ja
stos
or
cmp
or
pop
das
gs
je
outsl
mov
dec
push
in
adc
repz
cmc
adcb
add
sub
dec
popf
adc
jb
scas
out
lcall
adc
outsl
fcomp
rorl
std
movl
sti
push
rolb
mov
outsl
mov
inc
repnz
or
pop
sub
cmp
sbb
xor
sbb
scas
push
mov
jae
fnstsw
scas
arpl
scas
push
loopne
je
rolb
push
popf
scas
and
andb
dec
or
sub
add
stos
xchg
imul
test
daa
inc
sti
cltd
sti
loop
pop
jl
xchg
cmpsb
sub
inc
fiadds
fidivrl
jge
fnstcw
int3
xor
add
add
setno
jg
test
push
cld
in
and
cwtl
sarb
dec
addr16
jb
push
addr16
int
dec
repnz
xchg
add
in
push
scas
leave
jge
movsb
outsl
lods
cmp
cmp
sub
push
fldenv
push
test
adc
call
aas
sub
fisubs
dec
pusha
and
fld
inc
lret
leave
push
data16
sahf
add
out
xor
inc
adc
aam
cwtl
lods
jno
inc
jle
sti
inc
lret
push
gs
js
xchg
cmp
icebp
loop
dec
xchg
sahf
mov
pop
popf
in
addr16
fisubs
cmc
and
cs
inc
daa
jne
int
in
inc
psubusw
cmp
scas
push
ret
pop
scas
fisttpll
movsl
mov
inc
mov
jle
mov
xchg
add
and
pop
add
xchg
mov
and
pop
pusha
cmp
pop
jnp
add
popf
cmp
sahf
add
movsl
into
jmp
pop
jl
loopne
fsubrs
cld
xor
adc
mov
mov
xchg
jnp
cmp
out
xlat
cmp
rcr
imul
fisubrs
fwait
scas
sub
push
cmpsb
or
pop
mov
pop
jno
hlt
or
pusha
adc
inc
inc
popa
mov
sahf
add
daa
push
pop
mov
out
out
popa
dec
sub
mov
cmc
test
jns
mov
dec
inc
je
jmp
push
pop
aad
aam
sub
push
jns
dec
jb
push
sarb
jl
mov
mov
jae
add
xor
aad
lcall
pop
jns
out
add
adc
pop
scas
nop
stc
hlt
xorb
add
sbb
push
pop
fcmove
repnz
adc
jg
rcr
mov
mov
mov
imul
cli
xor
nop
xchg
push
dec
mov
or
xchg
lret
inc
aad
nop
lahf
mov
cli
dec
jmp
add
out
pop
in
cwtl
mov
inc
rorl
lods
fs
gs
xor
movsb
out
scas
mov
and
xchg
outsl
sbb
call
or
xchg
pop
inc
fdivl
call
invd
sub
fchs
jg,pn
jmp
popa
and
enter
mov
mov
mov
decb
lock
mov
mov
xchg
mov
or
mov
ljmp
lods
xor
pushf
outsl
jecxz
pop
cli
push
push
cwtl
rolb
mov
mov
jecxz
xor
xchg
or
scas
push
ror
aas
pop
imul
fsubrs
hlt
ret
add
or
gs
mov
or
test
cmpsb
push
push
jae
xor
test
mov
pusha
mov
out
and
insb
xor
jo
cmp
data16
mov
push
lret
stos
pop
fidivrs
lea
xchg
jp
dec
inc
and
jb
popf
test
mov
arpl
xchg
rcll
cs
add
popl
jle
jae
and
mov
into
sbb
call
das
and
fldt
call
or
push
das
cmp
icebp
inc
mov
pop
leave
xchg
cli
push
or
inc
and
sbbl
push
lret
and
add
sbb
pusha
adc
xchg
sub
push
push
in
jmp
jmp
addr16
pop
imul
das
loopne
cmp
leave
inc
mov
stc
mov
and
mov
or
xchg
loop
push
aas
hlt
cmpsl
dec
dec
insb
shlb
xor
xlat
jae
inc
movsb
mov
xchg
xor
jmp
jns
mov
daa
fcmove
mov
je
popa
dec
cli
ret
sbb
jmp
movsl
icebp
mov
fadds
mov
insl
test
cmp
sbb
dec
addr16
aas
scas
pop
mov
pop
in
jg
in
xor
push
jbe
dec
jle
int
push
enter
movsb
xor
lcall
sub
push
pop
nop
int3
bound
xor
imul
cmp
sub
adc
cwtl
and
push
scas
dec
jno
push
pop
push
loope
outsl
sub
aaa
push
mov
inc
sbb
or
mov
pop
bound
mov
jne
jns
xlat
lcall
fs
push
mov
mov
lret
jg
outsl
fsubr
cmp
mov
add
stos
pop
mov
inc
xor
mov
cltd
ds
sti
es
jl
push
mov
lock
addr16
dec
pop
sti
inc
mov
pop
fisttps
fcomi
fsubr
adcl
in
nop
cwtl
ljmp
inc
xor
test
inc
xchg
dec
in
popf
lret
ret
mov
nop
mov
mov
and
xlat
popa
loopne
iret
xchg
and
jge
mov
ja
mov
lea
jae
fsubl
cmpsb
mov
sub
cmpsb
fisttpl
repz
dec
sub
imul
xchg
call
dec
or
aas
mov
sub
insl
mov
push
aas
test
imul
adc
shlb
jp
int3
mov
cmp
cmp
imul
or
cmpl
scas
rcll
cwtl
imul
sub
adc
bound
stos
lret
repnz
sbb
dec
push
mov
sbb
or
mov
outsl
popl
jo
mov
inc
xor
mov
sbb
add
dec
cli
sbb
js
nop
lds
xor
xor
mov
mov
and
mov
bound
push
ljmp
adc
mov
xchg
xchg
mov
inc
or
xchg
xchg
movsl
repnz
cltd
jl
into
insl
loope
cmpsl
movhps
mull
mov
shll
popa
jmp
inc
mov
stc
aas
and
jne
ret
sub
and
icebp
icebp
mov
mov
push
fists
je
inc
xchg
and
imull
sbb
je
mov
je
jbe
jae
std
xchg
jb
mov
and
mov
inc
cmc
mov
pop
js
pushf
mov
cmc
cmp
mov
jle
jge
adc
pop
bound
mov
in
lods
imul
fsubrl
ja
jne
out
mov
cmpsb
ud1
pop
and
cmpsb
add
or
adc
ret
xchg
aam
int
jo
mov
jns
cmpsl
loop
into
addb
arpl
mov
int3
xchg
or
lods
fwait
adc
fldt
push
mov
cmp
jb
andl
bound
xor
ret
dec
inc
xor
push
shlb
sub
ja
or
aad
add
xor
cmpl
mov
cld
xor
xchg
sub
mov
hlt
sub
aam
or
out
int3
fwait
shrl
arpl
mov
sbb
jge
jmp
mov
jb
call
aaa
dec
stos
sub
push
pusha
iret
cld
in
push
mov
adc
fwait
iret
push
lret
xchg
cmpsb
push
jae
or
push
adc
xorb
cwtl
mov
pop
jmp
sub
mov
je
fnstcw
jb
add
int3
push
mov
jl
jmp
push
clc
mov
scas
les
arpl
pop
add
gs
and
fldcw
lock
mov
push
dec
mov
mov
xor
in
cmp
mov
pop
stos
pop
imul
in
mov
push
and
bound
stos
ja
and
scas
insb
hlt
nop
mov
ret
pop
jb
sbb
lods
ljmp
mov
mov
push
or
sbb
cltd
dec
jns
clc
xchg
xor
ljmp
jae
popl
mov
sub
icebp
or
mov
pop
or
insl
dec
xchg
jecxz
imull
outsl
push
shrl
fnstsw
dec
movsl
stc
cli
cmp
xchg
nop
test
jg
loop
jecxz
sbb
xchg
dec
fistps
and
mov
je
insb
std
insb
out
pop
xchg
xlat
jmp
and
mov
cwtl
and
inc
dec
adc
rcll
adc
cmp
fnsave
jbe
and
xchg
pop
or
subb
pop
mov
insl
mov
adc
fst
ljmp
imul
ja
jno
xor
fdivrs
jl
mov
insb
push
pop
xchg
pop
sub
cmp
pusha
add
or
out
push
mov
dec
sbb
pop
sahf
cwtl
adc
pop
mov
imul
push
cmp
in
mov
or
cmp
test
aam
push
mov
scas
sub
scas
cmp
xor
test
fucomip
or
mov
dec
cmp
enter
push
data16
lods
cmp
xchg
adc
sbb
sub
iret
ror
and
cmp
gs
pop
cmp
mov
idivb
movsl
push
mov
and
push
inc
lcall
jge
mov
daa
sbb
mov
cmp
mov
js
arpl
adc
repnz
imul
cmp
mov
mov
stc
ret
lock
fbstp
xchg
push
sbb
adc
push
cli
int
add
pop
repz
lods
scas
cmpsl
inc
jge
popf
rclb
or
cs
xor
dec
rep
pop
xchg
aad
cs
lahf
mov
jecxz
xor
lahf
mov
add
call
cmp
sti
cmp
cwtl
xchg
ss
or
cli
notb
gs
aam
loopw
js
ljmp
mov
out
xchg
cmp
rcrl
cmc
pop
mov
cmpsb
inc
mov
mov
in
push
and
push
dec
mov
mov
sub
push
xor
sub
fcompl
adc
jbe
imul
push
mov
inc
jns
cmp
dec
cltd
xor
xchg
inc
scas
ret
test
call
jns
bound
xor
fadds
leave
lcall
sbbb
xchg
subl
hlt
in
jnp
pop
or
leave
stos
mov
mov
outsl
leave
pop
xor
fs
cmpsl
push
in
lock
fsubrs
aas
ljmp
adc
addr16
fnstcw
inc
add
adc
fiadds
add
jne
mov
cs
fucomi
sub
ficomps
shl
sbbb
out
adc
daa
jp
clc
cmp
dec
push
and
lahf
cmp
cmp
out
dec
repnz
cmp
pop
sbb
adc
lret
arpl
cs
subb
xor
dec
or
popf
sbb
es
mov
ljmp
mov
pop
insl
cmc
mov
vpsrld
mov
or
jecxz
xor
jl
cmp
jecxz
xchg
push
inc
icebp
inc
in
push
in
push
mov
hlt
cmp
and
aam
mov
icebp
cmp
jo
mov
jecxz
mov
aas
mov
fistpll
and
in
jmp
jo
lcall
pop
les
les
lods
ret
test
aam
and
jo
push
jl
insl
jl
inc
js
mov
jmp
cwtl
testl
xchg
cmp
dec
xchg
mov
jp
test
lcall
jno
jbe
push
mov
lret
cmp
inc
test
shll
push
sbb
fwait
in
adcb
or
inc
sub
sub
int
ss
xchg
dec
out
jne
lahf
in
xor
inc
inc
jmp
imul
and
jle
xchg
or
pop
ss
xchg
jae
mov
loop
outsl
mov
mov
cmp
stc
fldenv
mov
xchg
xchg
push
jne
push
sub
inc
jmp
aas
fdivr
popa
mov
push
mov
pop
inc
mov
mov
and
jo
es
mov
into
cmp
pop
stos
xchg
pop
arpl
repz
sub
subb
xor
jge
mov
enter
fwait
sahf
ds
int3
into
ficomps
lret
mov
adcb
test
shrb
shl
bound
jo
inc
rolb
jle
fsubl
stos
jmp
inc
pop
mov
imul
inc
push
fistl
mov
pop
pop
fists
cli
push
stos
ret
jo
sbbb
movsb
xchg
fildl
arpl
sbbb
sti
xorb
pop
popa
and
adc
mov
imul
insl
sbb
sub
subl
push
ret
repnz
xchg
push
loopne
rorb
in
inc
shrb
mov
jl
rorl
add
jbe
push
xchg
add
push
fwait
sbb
decl
xchg
and
or
ljmp
sub
pop
xchg
sub
jg
cmp
push
cmp
sarb
and
imul
and
sub
push
movsb
mov
jne
aam
mov
das
xchg
gs
dec
test
fwait
sbb
xlat
and
test
push
sbb
int3
lahf
and
imul
xchg
pop
sbb
repnz
pop
popf
outsb
lock
sbb
pop
cwtl
push
xor
loop
mov
shrb
xor
or
sub
loopne
jnp
lods
negl
hlt
lods
pop
aam
fimuls
cmpb
outsl
aas
data16
shl
and
cmp
xchg
int
xchg
adc
and
pop
shll
push
inc
push
dec
or
scas
into
push
push
inc
mov
idivl
mov
cli
mov
add
shlb
jns
adc
lods
aad
subl
dec
call
stos
out
outsl
shl
sahf
sti
outsb
mov
and
cmpsb
into
sub
sbb
call
out
sahf
loope
outsb
inc
cmp
xchg
sub
mov
daa
stc
call
sub
mov
push
push
call
sbb
inc
inc
scas
ja
cmpsl
dec
rclb
mov
pop
movsb
inc
sbbl
outsl
jecxz
cmpsb
test
mov
and
xchg
xor
mov
mov
in
jg
xor
dec
mov
xorb
rolb
cmp
lret
xor
xlat
ljmp
call
xchg
stc
loop
stos
imul
and
jno
adc
cmpl
mov
and
add
arpl
movsl
imul
adc
push
loope
das
mov
inc
pushl
dec
je
mov
sarb
stos
jp
cli
or
pop
mov
bound
mov
cmp
dec
pop
and
cmp
stos
mov
shl
mov
mov
daa
xchg
mov
lock
and
addb
test
add
bound
lret
faddl
call
repz
das
fildl
ss
dec
push
lock
clc
pusha
ja
gs
loope
repnz
mov
lahf
into
jbe
and
loopne
aaa
add
lahf
test
lods
in
fwait
jp
sub
cmc
pushf
std
add
jge
add
and
stc
and
int3
mov
sub
data16
jmp
in
icebp
cmp
pop
or
loopne
xor
mov
addr16
lock
add
mov
cmpsb
dec
pop
stos
push
mov
pop
std
cs
push
shlb
sbb
mov
das
rclb
xchg
mov
les
xor
repnz
dec
jns
fimull
mov
cltd
xbegin
add
pop
aam
ffreep
loope
mov
mov
getsec
sub
out
or
in
mov
or
mov
add
scas
adc
push
fldenv
in
cmp
and
lock
sbb
cmp
fisubrs
ss
dec
js
dec
aas
xchg
jp
inc
ficoml
push
leave
aam
push
mov
mov
test
pop
lock
shlb
shrb
push
aad
imul
out
jmp
je
mov
rclb
jo
adc
cmpl
cmpsb
dec
and
stc
pop
loopne
sub
loop
lret
adc
sbb
leave
mov
add
aam
lahf
stos
xor
fs
jbe
sarb
shrb
inc
adc
sbbb
lahf
bound
cmp
add
aas
ds
or
sub
lcall
or
testb
and
sar
xchg
test
inc
stc
popa
daa
gs
mov
rcrl
rorb
test
and
add
call
jbe
les
xchg
lcall
dec
js
sbb
out
inc
scas
js
mov
movsl
pop
hlt
cwtl
jecxz
xchg
les
and
ja
aaa
faddl
lea
cmp
leave
dec
mov
inc
in
icebp
mov
fdivr
mov
popa
mov
pusha
or
std
shll
push
xlat
sub
sbb
push
mov
jbe
ds
daa
push
stc
rcrl
sbb
sub
xor
jno
stc
fisttps
sbb
push
inc
out
push
sub
imul
mov
lods
lods
xor
addr16
shrb
mov
les
xchg
repz
fwait
ret
or
mov
mov
adc
inc
out
jae
cmp
sbb
nop
int3
xor
in
ficompl
mov
cmp
in
mov
pop
add
std
pop
adc
fsubrs
cmp
adc
mov
adc
push
fcomps
mov
test
jecxz
shrb
mov
inc
ja
and
cmp
pop
and
cld
scas
add
cli
fwait
inc
das
add
aam
fs
lahf
repnz
fidivrl
sbb
sub
lahf
nop
mov
shrl
jnp
push
push
mov
and
movsl
inc
sub
loopne
mov
and
into
cmp
push
test
pop
rcrl
orl
pop
nop
stos
jno
jo
enter
cmpsl
sbbb
fsubrs
push
imul
jp
xchg
fs
dec
jmp
rorb
out
push
push
ja
loope
jbe
xchg
pop
xchg
fcoms
mov
lods
js
add
sub
jle
xor
jl
das
stos
jb
pop
push
sub
mov
out
std
mov
out
cmp
mov
inc
sbbb
inc
in
adc
or
es
out
push
test
sahf
pusha
popa
add
cwtl
cmp
outsb
push
mov
shl
jge
jno
das
dec
pop
sub
iret
and
sahf
mov
xchg
or
xor
push
cmp
jge
out
mov
xchg
jb
fsubrl
sub
push
sbb
sub
popa
das
test
sub
jecxz
rorb
movsl
sbb
push
sahf
or
sahf
pop
mov
ja
stc
addr16
sub
pop
outsb
aad
inc
pushl
hlt
mov
ds
mov
ja
popf
pushf
push
pop
dec
mov
adc
or
lock
jbe
mov
mov
cs
inc
sti
sub
pop
adc
cmp
fisttpll
enter
cltd
pop
mov
mov
fcomps
pusha
addl
jle
add
movb
rcll
imul
pop
pop
cld
or
scas
pop
pop
inc
jae
jge
push
fisttpl
ret
jg
cwtl
mov
mov
icebp
ss
shrl
insb
jo
adc
out
insl
test
add
sbb
flds
mov
mov
push
jae
add
xchg
sub
loop
hlt
addb
sub
fisttpll
lcall
pop
sub
lret
and
subl
pop
dec
mov
push
mov
out
sbb
enter
mov
inc
adc
add
pop
mov
mov
dec
sahf
mov
shl
add
pop
mov
cmp
sti
out
out
shrb
std
adc
mov
push
pop
inc
into
jnp
bnd
pop
lahf
pop
pop
clc
lcall
jecxz
scas
shl
ret
inc
xchg
repnz
xchg
arpl
and
imul
arpl
adc
bswap
andb
push
jmp
jb
and
sar
mov
adc
ss
sub
out
ret
and
mov
test
pop
cmp
jnp
pop
int3
pop
and
inc
and
jno
jmp
stc
cmp
lcall
push
jp
xchg
out
or
adc
jmp
int3
in
scas
ret
xor
mov
sahf
and
push
std
or
out
imul
add
outsb
jecxz
fbstp
fsubrs
pop
push
pushf
mov
ret
leave
dec
mov
imul
pop
inc
addl
inc
mov
push
mov
js
loope
loopne
ret
lahf
cmp
cld
pop
cmp
push
test
jle
jmp
je
adc
leave
push
in
and
xor
mov
inc
inc
or
cmpsl
jge
push
nop
movsl
push
add
cmp
mov
or
mov
xchg
push
fldcw
loop
adc
shlb
decl
std
jno
dec
dec
outsl
sbb
sbb
lea
jle
sub
dec
adc
push
add
out
shll
sub
shrb
xchg
imul
clc
jge
push
int
adc
and
cmc
ret
mov
ds
not
loope
xchg
imul
sarb
lret
ja
repz
inc
and
inc
es
mov
xor
mov
sbb
pop
xchg
stos
adc
daa
js
imul
scas
jnp
dec
fiaddl
sahf
aaa
lahf
aad
daa
jb
nop
loop
push
fst
ret
inc
push
les
add
rcr
add
cmp
sub
int3
jo
jb,pn
mov
pop
mov
ja
cmp
adc
xchg
mov
adc
pop
out
leave
leave
sysret
cmpsl
mov
push
xor
rcr
icebp
mov
scas
add
inc
jecxz
cmp
push
or
push
cmp
push
pop
dec
inc
fcomip
pop
sbb
push
fisubrl
sbb
movb
fimuls
call
jbe
adc
nop
int
inc
ja
jne
fs
pop
pop
adc
mov
sbb
fwait
push
cwtl
pop
imul
mov
test
test
push
inc
cmpsb
cld
fsubrl
ret
add
sbb
out
xchg
cmp
mov
popa
pusha
dec
jmp
jo
mov
repnz
mov
xchg
push
andl
fdivrs
adcb
add
xor
adc
repnz
push
test
rcl
or
dec
push
call
sbb
cmp
mov
movsl
pushf
aam
xchg
jmp
cmp
ja
clc
jg
loopne
out
fwait
arpl
pop
mov
std
iret
ss
outsl
sbb
pop
ljmp
sub
jo
mov
loopne
xlat
and
mov
call
sbb
mov
mov
jno
repnz
cwtl
jb
imul
cmp
inc
dec
pop
bound
push
jae
inc
adc
xor
pop
cmp
outsl
add
in
push
xchg
jmp
out
adc
sbb
or
sub
enter
dec
hlt
add
xor
adc
mov
fs
imul
push
pop
jae
lods
sub
popf
xchg
leave
cmp
sub
add
es
mov
push
adc
ljmp
rcrl
addr16
pop
mov
ret
mov
or
pusha
scas
cmc
lcall
mov
cmpsl
or
xchg
add
add
cltd
and
pop
shrl
cmpsl
mov
push
loop
pop
jmp
pushf
test
xchg
xchg
gs
shrb
cmp
scas
mov
push
popf
jno
push
cmc
cli
fwait
cmpb
cmpsl
sbb
es
into
cld
or
popa
pop
iret
mov
int3
jnp
shll
bnd
fs
pop
loop
lock
jo
jne
outsl
loop
xchg
jb
and
sub
mov
dec
ds
fidivs
inc
push
fwait
sbb
ret
xchg
jmp
test
insl
sbb
xor
add
lcall
cmp
lcall
cmp
ja
rol
daa
loop
imul
mov
jb,pn
std
jg
or
shll
push
mov
outsl
pushf
dec
out
leave
notl
fs
fisttpll
jno
mov
and
inc
loopne
int3
xor
pop
xchg
loope
test
adc
enter
jae
xchg
mov
scas
pop
push
mov
push
mov
cmp
or
test
inc
das
fstpl
or
add
mov
cli
pop
adc
add
jecxz
or
ret
fsubl
mov
scas
rclb
insb
mov
cmp
mov
mov
popf
ljmp
popa
add
xor
sub
push
xor
xor
mov
js
mov
or
jecxz
jle
pop
aaa
mov
mov
jp
aad
incb
push
int
mov
sarb
mov
jmp
fists
test
mov
mov
mov
add
cmp
xchg
ljmp
leave
js
aam
and
inc
outsl
ret
outsb
lret
pop
int
xchg
xor
jb
gs
mov
aas
mov
push
push
or
and
insb
mov
jnp
in
cmp
pop
stos
adc
dec
ret
into
xchg
jne
pop
js
daa
dec
dec
pop
jg
outsb
xchg
add
enter
jne
lahf
cmpsb
mov
pop
cmp
sar
add
out
mov
pop
aas
arpl
sub
sub
cmp
loopne
ret
xchg
mov
xor
imul
sbb
mov
pop
data16
cmp
roll
jmp
mov
movsb
xlat
push
and
dec
add
inc
gs
jbe
lods
pop
data16
inc
int
mov
jb
mov
ja
cmp
je
or
jmp
jb
or
daa
mov
js
jae
add
jmp
aaa
cmp
mov
cmp
mov
mov
stos
in
popa
xchg
cmp
cmpsl
push
outsb
inc
movsl
mov
jg
mov
pop
or
les
aaa
shll
and
inc
and
pop
mov
rorl
cmp
jae
arpl
cmc
int
popw
push
or
mov
mov
popf
lock
mov
mov
sub
nop
mov
fs
das
push
add
mov
sahf
movsb
sbb
aas
ret
ja
pmaxub
std
xor
mov
mov
mov
aad
call
cmp
adc
cmp
mov
dec
adc
lea
mov
cmp
fwait
dec
lcall
mov
stos
inc
sbb
sahf
mov
jne
cltd
loopne
inc
fidivs
push
mov
mov
repnz
mov
imul
outsl
and
je
mov
inc
or
and
sti
pop
call
sbb
adc
jae
jmp
dec
loope
dec
arpl
xor
es
adc
and
lcall
push
dec
add
add
in
sahf
stc
mov
xor
sub
dec
push
mov
mov
add
mov
jbe
aam
push
ds
xchg
test
dec
mov
stos
add
push
cmpsl
in
adc
mov
adc
jp
xchg
test
or
lea
rolb
sub
aam
push
push
shlb
mov
mov
push
lret
cmpsl
mov
movsb
push
int
push
mov
cmp
or
mov
fldl
fwait
xlat
jl
sbb
popf
test
and
dec
fstps
sub
mov
push
test
out
and
hlt
movsl
ds
div
add
xchg
aaa
inc
pop
cli
mov
push
scas
pop
fcmovb
rorl
xchg
mov
stos
push
or
in
outsb
out
mov
cli
inc
rolb
sbb
loope
imul
lods
stos
les
add
adc
xchg
inc
das
and
iret
out
dec
bound
and
mov
js
sub
ret
sbb
push
movsb
arpl
push
xchg
xor
out
add
out
cmpsl
pop
pop
aad
loop
mov
or
mov
nop
mov
xchg
mov
fchs
test
mov
or
jle
xchg
or
mov
jae
dec
mov
cmp
mov
je
cmp
inc
scas
xchg
jo
stos
push
dec
nop
fdiv
roll
sbb
ficomps
add
sbb
mov
mov
dec
jno
jle
and
lods
or
cmpsl
dec
dec
lods
mov
das
subb
loope
aam
push
cmp
mov
jp
loop
in
fsubs
mov
cmc
clc
mov
fs
das
sbb
push
outsb
xchg
popa
xchg
mov
int
clc
inc
ficoms
pcmpgtb
iret
insb
pop
aam
jp
mov
out
pop
mov
iret
jno
mov
notb
ficomps
cmp
cmpsb
adc
out
pop
js
fbstp
cmc
pop
inc
ljmp
dec
je
lret
lret
mov
jge
aad
into
or
bound
mov
xchg
in
icebp
sahf
lret
push
sub
fnstsw
mov
sub
jp
xchg
bound
cltd
iret
lahf
push
dec
insb
popf
or
pop
inc
fcoml
pop
outsb
push
jmp
add
stos
je
push
or
mov
add
xor
loopne
rcrb
inc
push
jns
push
xchg
mov
mov
push
pcmpgtb
test
lods
sub
cmpsl
cmp
aaa
les
les
or
iret
jbe
out
es
mov
cwtl
and
shrl
xor
fisubl
icebp
repz
pop
lods
jmp
inc
jo
std
adc
data16
and
pop
bound
cmpsb
fcmove
imul
cwtl
push
sbb
add
pop
dec
das
mov
daa
push
in
icebp
jle
and
xor
lret
mov
lretw
loope
fimuls
lods
ja
xchg
stos
jp
das
decb
arpl
cmp
mov
xor
cmp
xchg
lcall
sbb
and
push
xchg
jae
fiadds
adc
push
sti
jae
add
dec
ret
mov
inc
mov
outsb
xor
test
test
inc
add
sub
aad
xchg
in
outsl
add
in
popf
idivb
and
push
negb
push
das
add
xchg
mov
and
cmp
mov
or
xlat
jne
jle
imul
pop
push
scas
faddl
stos
cltd
inc
adcb
pop
cmpsb
les
cmc
in
cmp
sub
addr16
mov
enter
or
lods
dec
lds
outsb
jecxz
aas
cmpsl
push
cs
jle
push
push
add
jp
in
out
cmc
insl
or
xchg
test
fdivrp
mov
fldenv
sbb
xchg
xchg
mov
loopne
fisubrl
cmp
cmp
jmp
add
and
mov
repnz
imul
push
or
popa
push
adc
sub
test
gs
aad
pop
lods
xchg
std
lods
rcll
or
imul
and
data16
cli
fcmovnb
mov
orl
cmp
and
lahf
cmc
and
sub
stos
repz
inc
fs
js
dec
sbbl
or
cmp
jnp
cmpsb
jb
shrb
mov
inc
aad
push
jl
enter
imul
lret
mov
push
rcrl
gs
in
mov
xchg
out
or
mov
shrd
add
push
xchg
adc
cmp
mov
adcb
loopne
dec
sub
testb
push
mov
dec
jnp
xchg
loop
cli
mov
adc
sbb
xor
pop
xchg
or
ds
dec
pop
in
in
in
adc
pop
pop
lret
jge
sahf
loop
cmp
adc
or
adc
or
mov
nop
popl
inc
mov
and
pop
and
js
dec
std
push
jo
fcoms
aas
test
xchg
adc
jecxz
test
sahf
dec
pop
mov
enter
xor
mov
ds
cmp
hlt
mov
addl
lea
pop
pop
mov
test
rcr
call
mov
pop
inc
push
xor
fldl
inc
adc
es
xchg
push
inc
push
incl
packssdw
adc
ja
stos
jo
scas
adcl
in
shll
mov
test
mov
int
sub
add
cwtl
cmp
sbb
fmul
dec
insl
ret
out
sti
dec
inc
adc
mov
in
sar
pop
dec
cltd
scas
das
jae
cmp
cmp
xor
aas
adc
inc
mov
mov
mov
jbe
fldcw
xchg
xor
add
mov
movb
sbb
xchg
xchg
and
ss
mov
sub
push
cmpsl
cmp
jne
sub
fbstp
inc
inc
add
and
xchg
rorb
popf
hlt
xor
sub
outsb
lods
scas
dec
push
es
xchg
int3
xorb
fwait
lods
mov
mov
cmc
sbb
mov
add
fdivr
aam
js
push
push
adc
push
shlb
jmp
mov
cmpb
adcl
insb
jno
test
cmp
arpl
scas
sbb
lret
sti
cmp
jnp
cld
movhps
lds
sti
movsb
push
lcall
mov
xchg
inc
fdivl
add
int3
shll
daa
or
adc
mov
and
jb
or
dec
mov
out
test
jns
sub
imul
sub
lret
dec
movsb
mov
lcall
xor
mov
es
int
not
dec
mov
fdivs
push
fiaddl
out
and
xchg
push
lods
int3
lret
aas
mov
jo
out
into
inc
adc
xchg
mov
adc
cld
out
sbb
inc
lds
sahf
int
aam
xchg
inc
push
pop
imul
sub
iret
mov
movsl
jns
pop
lret
test
lret
pop
movsl
cmp
jnp
test
ds
dec
popf
cmp
xor
rorl
iret
addr16
push
in
mov
sbb
push
inc
pop
pop
mov
cs
add
or
cmpsl
out
mov
push
jl
cmpsl
addl
dec
xchg
gs
push
mov
inc
jmp
movntps
push
mov
mov
cmp
lret
popa
leave
shlb
bound
or
xor
out
dec
fwait
lret
mov
push
and
fmuls
mov
inc
testb
push
and
sub
lret
push
pop
inc
and
es
xchg
ss
std
cmpsb
inc
cmp
pop
lods
test
rclb
call
pop
adc
dec
push
mov
pop
stos
inc
or
mov
test
imul
mov
push
aaa
sbbl
fsubl
add
jno
es
fildll
into
addr16
fsubl
and
int3
jmp
repnz
sub
push
cmp
lea
add
xor
ret
mov
jecxz
dec
dec
mov
scas
es
imul
aaa
movsl
xor
jmp
fistpl
es
xchg
mov
sbb
inc
add
test
popf
dec
fimull
lahf
inc
mov
cli
js
sbb
jmp
stos
loope
xor
orl
inc
movsl
loope
addr16
cld
push
sbb
pop
or
cmpsl
lods
pop
push
or
enter
adc
push
clc
dec
sbb
sub
add
dec
scas
sbb
mov
rcr
loopne
dec
std
sub
outsl
mov
xchg
sub
daa
into
rcll
xor
stos
lret
das
xchg
setb
mov
jno
shlb
mov
shr
push
lock
lahf
mov
rol
stos
xor
lock
or
call
movd
jmp
sbb
nop
mov
add
xchg
pop
pop
sti
test
aas
shl
lret
loope
not
push
jne
pusha
fdivrs
jmp
imul
fs
jbe
scas
pop
out
into
jbe
xlat
bsr
mov
fcompl
ss
sbb
adc
lods
sbb
inc
shll
adc
jae
add
push
mov
cmp
xchg
inc
dec
mov
je
pusha
ljmp
pop
push
test
popl
in
lea
cltd
cmp
mov
popa
je
dec
in
lods
jg
lret
xchg
xor
stos
or
push
xchg
or
cmp
cmp
iret
sub
mov
xchg
rorb
mov
or
mov
adc
jnp
dec
sub
movsl
dec
sti
mov
pop
jb
or
repnz
cmp
dec
add
mov
adc
mov
cmc
cmpsb
cmc
dec
cli
loopne
dec
out
aam
roll
jne
test
fwait
orb
mov
sbb
movsb
and
scas
dec
mov
xchg
ds
insb
repnz
and
popa
mov
sbb
pop
mov
xchg
dec
dec
test
lods
cmpsb
lods
notl
shll
testl
dec
push
fmuls
insl
cmc
xchg
in
rcrl
dec
cmp
sbbl
shrb
xchg
fcoml
pop
jo
enter
xchg
cmp
mov
cmc
ficompl
bound
jge
or
test
cwtl
popf
iret
sbbl
lods
ficompl
pop
cmp
push
add
orl
pop
shl
or
mov
push
outsl
lds
mov
or
xchg
jge
insl
fs
scas
inc
fsubrp
test
into
pop
mov
fildl
andb
dec
sub
mov
fisubrs
es
daa
jno
test
daa
test
icebp
mov
mov
ja
and
ret
or
add
dec
mov
pop
bound
ror
jecxz
ja
mov
ret
das
pop
adc
es
or
dec
push
in
sbb
mov
xchg
shrb
mov
mov
sub
lret
pop
adc
push
mov
and
mov
dec
xorb
or
sbb
je
movsl
rol
push
lods
daa
mov
cmc
stos
inc
call
dec
xor
loopne
notl
inc
jns
outsl
notb
inc
xchg
dec
jno
in
xchg
cmp
movsb
sub
xchg
push
ljmp
loope
insb
mov
shll
js
aaa
movsb
cmp
xchg
sbb
dec
push
pushl
pop
shrl
mov
or
add
imul
call
dec
pop
cmp
pop
xor
lds
adc
add
test
and
frstor
inc
shlb
cmp
inc
stc
and
push
sbb
data16
lds
mov
and
int
enter
xor
mov
scas
mov
jmp
fidivs
mov
adc
out
and
cmpsl
or
or
leave
out
out
or
clc
aam
sbb
mov
push
jp
mov
arpl
cmc
pop
loop
jle
sbb
fisttpl
aam
cmp
mov
pop
vmwrite
cmp
dec
add
and
jo
or
adc
jae
andl
and
mov
movsb
or
inc
lret
add
cmpsb
xlat
lret
in
cltd
cld
sbb
push
sahf
lock
mov
push
fs
pop
scas
jno
jg
pop
sub
outsb
and
xchg
push
adc
xor
filds
cli
int
adcb
imul
call
pop
shrb
mov
ss
add
daa
inc
popa
sbb
or
data16
lods
inc
push
add
lcall
dec
add
sub
add
ds
stos
mov
lock
push
cmpsl
mov
adc
xor
jecxz
or
pop
jl
and
movsl
add
cmp
jne
dec
fwait
insl
xor
pop
andb
cmp
dec
lods
movsl
stc
pusha
pop
pop
sbb
add
push
mov
pop
rolb
loope
out
leave
sbb
xchg
ret
xchg
lret
mov
push
xor
in
iret
addr16
mov
insl
pop
jne
jge
sub
push
rclb
inc
jae
adc
out
lret
in
dec
push
scas
jo
dec
mov
sarb
mov
lods
push
pop
fbld
inc
push
dec
mov
insl
dec
icebp
mov
sbb
pop
rcrl
adc
xchg
adc
add
cmp
sbb
jne
das
fwait
mov
xor
inc
push
loopne,pn
mov
xchg
xor
aaa
pop
mov
cltd
sub
jbe
rcrb
jge
scas
bound
test
jbe
mov
dec
sbb
sbb
push
pop
test
ret
aas
push
add
cltd
mov
adc
test
aad
sub
mov
push
cmpsb
mov
or
mov
je
sub
fnsave
jmp
dec
add
jnp,pt
insb
movsl
loope
insl
test
mov
orb
sub
dec
inc
les
in
jne
test
xchg
mov
and
xor
shlb
ljmp
out
sub
ret
mov
test
cmc
jmpw
dec
rcll
int3
jns
lcall
push
jmp
imul
pop
test
test
and
mov
pusha
in
pop
sub
jb
push
outsb
pop
leave
cmpsl
adc
push
lahf
repnz
jmp
push
lods
push
inc
mov
sub
push
test
ret
sahf
icebp
mov
mov
loope
les
or
jle,pn
lret
pushf
lds
es
mov
adc
idivb
add
push
insl
sbb
mov
pop
mov
push
pop
out
mov
popa
aad
outsl
add
in
sbb
cmpsb
cltd
fstpl
jno
subl
mov
xlat
shrl
stos
icebp
push
daa
jno
pop
jno
icebp
test
pop
shr
cmp
testl
and
mov
and
mov
fnstsw
loope
jnp
clc
mov
push
sub
into
dec
ret
cmp
insl
ret
push
add
push
xor
xchg
mov
loope
in
push
xchg
je
adc
xchg
dec
inc
pop
mov
xchg
leave
mov
inc
dec
or
iret
data16
mov
sarb
in
pop
or
mov
mov
fdivs
add
out
inc
adc
inc
sahf
cmp
rcr
das
ss
jg
xchg
scas
dec
sbb
es
xchg
mov
pop
test
test
into
andb
in
repnz
popf
imul
icebp
cmc
arpl
sbb
xlat
subl
mov
dec
push
lret
stc
test
ret
divl
loopne
sbb
fdivrs
jne
mov
jmp
sbb
or
xlat
cmc
leave
cmp
xchg
adcb
out
stc
mov
enter
sbb
insb
dec
mov
pop
pop
mov
ret
jns
adc
orl
mov
push
xchg
insb
dec
cmp
mov
std
push
inc
push
mov
or
jge
call
xchg
lcall
fs
stc
clc
lcall
das
movsb
orl
aam
pop
dec
cmp
xlat
push
push
aad
hlt
inc
rorl
dec
cwtl
push
fcoml
les
mov
mov
pop
mov
xor
sti
iret
pop
pop
ret
xchg
lock
jg
pop
inc
add
je
mov
xchg
xchg
test
mov
dec
std
cmpsb
shr
cvtps2pd
jp
mov
cmp
scas
sbb
daa
outsl
data16
pop
lods
and
or
lret
mov
cmpsb
cmp
int
and
out
add
adc
sbb
pop
mov
inc
cmp
negl
dec
jb
pop
adc
add
pop
jno
icebp
mov
dec
jbe
roll
mov
push
push
or
lret
pop
aam
mov
loopne
stos
push
into
and
test
aam
cmp
ss
xchg
xlat
out
pop
ret
mov
mov
pop
sub
cmp
xchg
sbb
push
cmp
add
mov
adc
pop
lods
in
add
int
sub
cmp
les
fistpll
mov
outsl
cmp
fistps
jne
xchg
js
cld
hlt
xchg
cmc
cli
neg
or
js
and
leave
add
cwtl
popf
loop
xorb
aaa
mov
inc
test
aad
popa
xchg
sbb
cli
xchg
cmpsb
push
xor
push
lret
push
inc
fsubr
dec
sub
repz
xchg
mov
sbb
pop
faddl
gs
into
test
incl
inc
pop
dec
sbb
mov
dec
ds
dec
dec
mov
inc
in
jg
add
je
ds
jecxz
scas
cmp
loop
xor
xor
daa
outsl
in
outsb
add
scas
lock
cld
stos
mov
mov
jmp
cmc
pop
jns
stc
pop
pop
daa
jb
fs
mov
inc
test
sbb
ja
loopne
push
or
sub
lea
cwtl
jbe
mov
dec
sbb
cmc
jae
xor
pop
idivb
lahf
xor
push
lods
and
mov
xor
mov
cmp
insb
jns
lock
repz
inc
mov
cmp
fwait
jbe
push
je
mov
outsl
movsb
mov
in
lret
xor
xor
lock
clc
enter
aaa
cwtl
popa
int
jge
lds
mov
fdivl
add
push
in
lds
aaa
pop
daa
mov
or
imul
add
push
xchg
mov
je
negb
xor
loop
xor
adc
push
xlat
outsl
xchg
push
mov
pop
cwtl
inc
rol
lea
push
daa
cmp
mov
ds
das
xchg
or
jp
xlat
sbb
xchg
testl
roll
xchg
sub
lea
sbb
fistpl
push
adc
nop
lock
mov
xor
cmc
and
mov
stos
rol
push
add
out
xchg
psllq
out
sti
cltd
xor
addr16
xchg
rclb
and
mov
cmp
jg
mov
mov
or
lcall
pushf
jo
inc
loopne
popa
add
sub
mov
mov
stos
mov
mov
clc
push
int3
jae
out
jge
iret
jb
adc
sbb
lret
jne
or
fldcw
mov
or
cs
lcall
je
cmp
pushf
es
xchg
outsb
adc
pop
sti
lods
mov
add
jo
out
sub
pop
inc
rcrb
int
call
mov
push
pop
xor
mov
mov
cltd
bound
pusha
lahf
lds
xor
sub
iret
or
push
push
xlat
adc
nop
cmp
inc
cmp
js
insl
sub
adc
sub
ret
inc
adc
inc
mov
out
cmp
xchg
enter
mov
test
or
jnp
lods
inc
sub
es
js
sti
imul
jl
xor
sub
inc
push
push
int3
inc
jb
push
push
sub
decl
aam
sub
push
jbe
mov
mov
pop
outsl
add
pop
test
in
xor
mov
adcl
scas
ret
xor
sbb
jmp
push
ficoml
dec
xchg
repnz
scas
or
push
pop
sti
inc
mov
out
into
add
outsl
in
mul
fs
in
push
lret
xchg
xor
lock
pop
and
push
dec
xor
sub
fnstenv
aam
fstps
fiaddl
movsb
xlat
rcrb
inc
cmp
pushf
push
rolb
test
dec
stos
jge
inc
iret
dec
cld
mov
mov
jmp
repz
mov
sbbb
loop
jg
jo
inc
test
shl
pop
jb
cmp
dec
aad
mov
push
xor
mov
cmp
xor
dec
pop
mov
out
xchg
movsb
push
sub
movsb
pop
or
pop
xor
fs
aam
mov
jle
test
shlb
fstl
cmp
add
repz
cld
ljmp
movsb
inc
xchg
mov
or
insl
xor
push
aam
dec
leave
loope
jns
test
in
xchg
xor
sti
mov
jns
mov
inc
adc
mov
fidivrs
or
xchg
or
xchg
mov
loop
ret
xchg
ficomps
lock
stos
pop
fistps
push
bound
jae
out
mov
xchg
ds
fdivrs
lahf
rcrb
inc
lcall
lea
sub
push
fsubr
out
push
out
movsb
jmp
inc
test
inc
push
dec
cwtl
xlat
lcall
ret
mov
clc
push
movsl
inc
sub
adc
pop
sub
std
mov
stos
push
xlat
dec
cs
pop
and
cmp
test
adc
jge
xchg
leave
aaa
adcb
push
sub
ds
sti
pop
int
lods
and
cmp
push
mov
dec
xchg
xchg
jg
outsb
int
adc
or
mov
push
outsb
or
pop
loopne
xchg
icebp
cwtl
sbb
inc
fdivrs
jmp
dec
cs
inc
outsb
sbb
fcmovb
imul
adc
mov
cmp
xchg
mov
xlat
in
dec
mov
dec
and
orb
add
loope
mov
dec
les
insl
adc
mov
aas
cmp
aad
xor
leave
pop
ja
push
inc
push
stc
add
dec
adc
cmpsb
xor
sbb
sbb
es
out
mov
xor
xor
rcr
add
shll
pop
mov
aaa
outsl
and
xchg
rclb
xor
cmpsl
jnp
shlb
mov
test
xchg
dec
pushf
xchg
bound
sahf
add
or
pop
mov
inc
cli
lds
xor
loopne
jae
xchg
mov
and
stc
mov
fldenv
je
xchg
aas
movsl
mul
outsb
jb
or
add
rclb
gs
movb
pop
les
int3
test
lea
sub
adc
xlat
adc
sbb
mov
pop
mov
mov
add
xchg
push
mov
arpl
inc
push
mov
add
jge
push
loopne
cli
testb
shll
sub
pushf
outsb
xor
dec
pushf
imul
or
dec
outsb
xchg
or
xchg
loopne
and
sub
pop
cmp
pop
inc
js
imul
flds
icebp
int3
sbb
add
je
push
push
insb
xor
lods
or
adc
inc
lock
and
dec
cmpsb
rorb
sub
stc
mov
int3
test
cwtl
mov
stc
sub
jmp
pop
rcll
sub
sub
daa
push
pop
stc
and
sub
xchg
sub
popa
out
outsb
imul
cli
sub
call
mov
pop
ss
nop
in
mov
pop
decl
les
das
and
jae
aas
jp
mov
ret
and
push
insb
leave
out
call
xchg
in
fdivr
jmp
ds
jecxz
cmc
inc
pop
stos
out
sti
mov
sbb
lcall
mov
or
xor
in
test
loopne
fidivrs
mov
into
inc
aaa
mov
cmp
pop
sub
mov
out
push
daa
xor
testl
jecxz
and
shl
sub
pop
jnp
lahf
enter
mov
mov
lods
gs
and
imul
cmpsl
mov
shlb
pop
pop
xor
mov
cwtl
je
js
mov
jge
cmp
fcmove
xchg
hlt
and
xchg
mov
and
push
inc
sbb
dec
movsb
shll
mov
xor
xor
inc
jl
cmpsl
js
inc
loopne
inc
or
das
push
xchg
ror
idivb
adc
into
cld
and
shll
lcall
sahf
fstps
xchg
shll
pop
inc
push
lcall
cmp
push
cmp
dec
dec
or
xchg
pop
inc
arpl
sub
mov
lret
push
call
mov
lock
inc
mov
or
hlt
ss
jbe
repz
mov
add
inc
sub
test
lock
fwait
pop
mov
pop
mov
fcoms
jo
jb
cmp
adc
imul
lret
sbb
lret
imul
pop
in
jmp
and
divb
cmp
adc
inc
or
and
lcall
gs
data16
test
xchg
lret
mov
jno
out
cltd
xchg
pop
jecxz
leave
xor
sbb
inc
fistpl
es
cli
outsl
ds
ret
lods
dec
inc
scas
cli
mov
arpl
sub
outsb
push
aad
adc
pop
imul
inc
mov
adc
adc
mov
mov
int3
mov
push
inc
adc
movsb
sub
ror
int
dec
mov
or
loopne
and
cmpsb
imul
dec
pop
aas
jmp
das
popf
sub
popa
jne
lods
mov
je
cs
roll
mull
xor
cwtl
pushf
mov
jns
stc
aas
xor
aad
mov
call
lret
sbb
iret
in
or
sti
cmpsl
ljmp
xor
xor
scas
out
mov
shrb
dec
sbbb
outsl
dec
mov
test
push
and
pop
fstp
or
and
loopne
movsl
and
loopne
pushf
xor
jl
fsubp
nop
icebp
lret
mov
inc
clc
clc
stc
cmp
adc
sbb
inc
cmp
lock
js
or
movl
into
insb
ljmp
out
pusha
fdivrs
cli
dec
lods
mov
data16
jae
dec
push
rorl
scas
into
mov
lcall
or
push
shr
inc
int3
out
mov
icebp
shl
cmovnp
mov
inc
adc
push
pop
lods
jmp
stos
xor
jecxz
pop
xchg
loope
leave
pop
adc
test
loop
inc
or
lock
ret
mov
imul
lcall
push
inc
out
cwtl
pop
inc
cli
movsl
pop
xchg
push
mov
insl
call
jmp
addb
in
mov
cmpsb
scas
or
add
sbb
cmp
in
iret
test
pop
mov
subl
clc
in
and
adc
xor
test
jbe
mov
mov
lods
cmpsb
lcall
stos
mov
cmc
mov
rorl
mov
xor
mov
xchg
jge
das
sbb
xchg
add
mov
out
icebp
pop
xor
nop
cmp
in
mov
adc
inc
mov
in
aas
shl
loop
ds
xchg
jmp
fistpl
xlat
sub
cmp
or
daa
popa
xchg
jmp
mov
pop
pop
js
pop
mov
lods
mov
pop
in
and
adc
jae
lret
xchg
mov
divb
add
xlat
fwait
lods
mov
push
int
fldenv
inc
push
shl
mov
dec
js
pop
daa
xchg
jo
or
push
dec
daa
cmp
jno
pop
std
test
inc
test
out
xchg
sbb
pop
ret
int3
ret
mov
ss
adc
inc
mov
mov
jge
cmp
aam
popf
mov
lret
test
xchg
les
sbb
shr
xor
pop
cli
scas
movsb
adc
adc
sti
cmc
cmpb
or
loopne
fistpl
test
cmp
mov
clc
lahf
test
movl
pop
sbb
mov
push
pop
hlt
faddl
loope
sti
and
xor
loopne
dec
shlb
leave
dec
mov
fnstsw
lret
pop
icebp
leave
ljmp
or
and
jmp
adc
xlat
icebp
mov
mov
jl
jae
in
sbb
push
ja
pop
xor
jmp
movsb
dec
aas
jo,pt
and
sbb
mov
push
sbb
clc
adc
mov
adc
or
rcl
push
xchg
out
jle
and
mov
jb
sbb
stos
nop
jno
enter
aas
adc
mov
dec
inc
jnp
inc
mov
xor
stos
out
xchg
or
sahf
ret
xchg
roll
xchg
sbb
or
fwait
xchg
out
sub
aam
neg
out
mov
or
jae
push
jle
cmp
jb
lock
pop
inc
in
add
leave
pop
or
loop
or
mov
push
test
das
xorb
loope
push
or
leave
arpl
xchg
xor
nop
neg
or
mov
mov
push
lods
push
jge
dec
push
loope
push
ret
lea
inc
stos
cmpb
xchg
es
gs
pop
out
mov
ss
add
imul
push
xchg
jnp
rcrb
cmp
stos
aad
and
push
fwait
lock
or
pop
or
jp
jae
je
pop
jg
inc
xor
in
mov
jp
pop
jns
outsl
and
rorb
divl
sub
hlt
adc
cmp
xchg
xorl
adc
jne
inc
jnp
in
loop
addr16
mov
ds
lret
adc
fidivrs
testb
test
cmp
aaa
and
mov
cli
ficompl
xchg
xlat
pop
xchg
dec
mov
cltd
add
add
lahf
stos
xchg
inc
mov
cmp
jo
pop
lds
xchg
cli
hlt
sarb
lds
gs
mov
push
dec
or
cmp
xor
rorl
outsb
mov
xor
addr16
push
jno
test
xchg
in
stos
adc
rcrb
xchg
hlt
push
das
mov
dec
loope
push
andl
fidivrs
call
stos
jb
aas
gs
pop
mov
fsubs
mov
push
mov
ljmp
inc
cmp
test
mov
mov
or
jae
out
into
dec
xchg
nop
mov
mov
and
andl
fadds
jmp
fdivrp
push
sbb
in
mov
jb
lea
enter
lcall
into
mov
cmp
xchg
hlt
or
pushf
dec
cmp
mov
jns
mov
sub
imul
push
push
lock
add
adc
push
cmpsl
inc
mov
sub
add
nop
dec
inc
xchg
cmp
cmp
cmpl
decl
std
negl
mov
jge
sbb
add
push
mov
sbb
leave
mov
repz
loopne
lcall
lahf
js
leave
cmp
stos
es
jnp
sbb
fildll
sub
xor
movsl
mov
lods
sbb
dec
push
dec
inc
mov
xor
outsb
fdivs
sbb
mov
subb
xchg
outsl
dec
arpl
xor
mov
mov
shll
xchg
pop
les
pop
inc
hlt
and
mov
pop
stos
into
sub
repnz
add
repnz
or
or
inc
loop
pop
test
pushf
div
ss
fildl
cmp
push
and
aad
jno
inc
imulb
insl
inc
add
pop
mov
push
sti
jecxz
aam
sahf
fistps
push
shlb
and
push
mov
repz
jbe
xlat
mov
or
adc
mull
push
cmp
lret
arpl
sbb
scas
jno
aad
jbe
cs
and
xor
and
cmp
xor
and
mov
out
imul
daa
dec
ret
dec
jp
std
fbstp
arpl
mov
les
dec
ljmp
out
mov
outsb
mov
sbb
imul
int
repnz
pop
push
sub
out
insl
pop
xor
mov
and
cmpsb
add
arpl
stos
xchg
xlat
fcomi
fcoms
push
shll
lods
jno
fcomip
push
mov
arpl
inc
inc
push
pop
test
push
sub
ja
outsl
inc
cmp
cwtl
add
js
les
mull
and
xor
cli
xor
mov
stc
jge
into
es
inc
lods
repz
sub
addr16
mov
mov
dec
cld
lea
movsb
ficompl
push
sub
idiv
daa
xchg
pop
daa
pop
iret
packssdw
add
push
int3
movsl
orl
add
pop
popf
sub
mov
out
aaa
adc
test
mov
xchg
xchg
imul
mov
test
cld
scas
nop
dec
stos
adc
inc
ljmp
mov
mov
sti
mov
push
movsl
jg
xchg
dec
fcmovnbe
sbb
cmp
sbb
lock
repnz
sub
mov
adc
insl
mov
xchg
add
xchg
stos
fstl
fwait
lret
push
xor
mov
push
ljmp
lds
loope
sub
cmp
in
outsb
pop
sbb
jg
or
add
xor
dec
cmpsl
sahf
pop
cmpsl
repnz
sarl
or
mov
out
mov
push
jp
adc
xlat
arpl
test
jns
insl
cmpsl
cwtl
inc
push
in
lcall
mov
mov
shl
push
pop
or
int
and
arpl
loope
or
cltd
inc
mov
fmuls
mov
lret
dec
sti
jae
push
mov
mov
sub
or
frstor
cmp
in
ret
cmp
mov
push
mov
daa
leave
xor
mov
inc
mov
outsl
adc
jmp
clc
ss
xchg
inc
push
mov
sbb
mov
mov
xchg
cmp
pushf
out
stos
mov
cltd
loopne
shl
dec
test
sub
inc
add
jae
mov
pop
in
dec
or
jecxz
or
sarb
mov
leave
adc
ret
sbb
daa
or
xor
insb
mov
repz
loopne
rcl
push
ret
iret
dec
sbb
mov
sub
movsb
push
dec
xor
fdivs
sbb
pmuludq
inc
in
mov
scas
xchg
inc
leave
lahf
movsl
repz
ret
clc
lret
in
inc
shl
aaa
enter
fwait
mov
mov
insl
dec
pop
int3
xchg
xchg
aad
xchg
jno
mov
jnp
adc
and
out
out
dec
and
dec
leave
test
data16
adc
adc
cli
add
xchg
add
push
cltd
pop
pop
movsb
mov
cmp
inc
xchg
pop
shl
lcall
jb
das
adc
cmp
xchg
fisttpl
out
sub
cmp
mov
imul
inc
movsb
je
sub
adc
stos
loop
mov
out
in
aas
test
sub
xchg
adc
sbb
icebp
jne
loop
vpsrld
mov
pop
lock
ja
xchg
scas
lret
xor
xor
push
rcr
pushfw
push
int3
push
jne
xchg
cltd
int
addr16
loop
packsswb
xchg
mov
jbe
rcrl
imul
sahf
fdivl
mov
jle
movb
and
xchg
inc
pop
pop
add
push
ret
mov
push
aad
push
popl
xrelease
sbb
xor
mov
ja
and
stos
je
frstor
push
inc
movsl
xchg
rolb
in
in
fisubrs
fwait
xlat
in
inc
movsl
dec
dec
sbb
jl
ret
sbb
pusha
clc
movb
xchg
arpl
lock
jnp
push
cmp
loopne
pop
mov
fdivl
adc
xchg
sbbb
fisttps
mov
int3
in
jg
mov
and
aad
adc
ret
dec
pop
outsl
adc
mov
inc
mov
jbe
xchg
mov
jg
adc
loopne
aaa
or
cmp
sbb
int
push
out
fcoml
or
lcall
adc
cli
inc
stos
lret
sub
cmpb
shl
repz
movq
xor
scas
lds
jo
xchg
call
mov
into
sub
xchg
fldl
les
pop
push
enter
mov
mov
dec
mov
roll
pop
push
and
sub
push
div
mov
sub
inc
mov
add
mov
cmc
and
into
cwtl
cmp
adc
add
xor
xchg
sub
xchg
in
mov
sahf
and
jmp
into
in
sub
sub
inc
cli
movsb
push
js
jne
mov
fwait
invd
lods
mov
dec
cmp
outsb
orb
lock
push
inc
pushf
addr16
xchg
popf
test
mov
sbb
push
xchg
cmpsb
add
out
lock
sbb
lea
shrl
dec
dec
rclb
sbb
inc
mov
xor
pop
fdivrs
inc
jg
insl
rorl
loop
movsl
out
xchg
mov
inc
pop
aaa
xor
sahf
popa
cmp
out
sbb
call
sub
xchg
cmpsl
mov
ss
rorb
pushf
scas
vucomisd
adc
arpl
pop
in
jbe
rorb
test
push
ss
or
lock
pop
notl
popa
mov
scas
aas
mov
flds
ds
mov
or
and
fidivs
movsl
aaa
or
push
lret
pop
ds
xor
adc
push
push
mov
lea
mov
stos
lods
add
loope
pop
jbe
push
inc
call
or
fwait
dec
pop
jb
cmp
stos
seta
cmp
dec
popf
shlb
sti
loop
sbb
test
jnp
jno
add
inc
add
push
jns
adc
std
jne
cld
adc
loopne
test
lods
in
fldcw
enter
hlt
xor
or
dec
lret
loope
data16
dec
mov
xchg
jae
and
xchg
xor
sbb
je
orl
push
out
cmp
cld
inc
fwait
adc
mov
dec
and
into
dec
adcb
bound
or
cwtl
daa
cmp
out
iret
aaa
or
xchg
iret
and
out
xchg
andb
jmp
mov
push
repz
mov
dec
sub
bound
xor
sub
dec
jl
mov
add
pop
xor
mov
stos
cmp
jp
xlat
add
ficompl
and
sarl
repz
cld
std
test
adc
movsl
js
pop
xor
and
xchg
sbb
push
shrl
arpl
mov
sbb
xchg
cli
mov
les
xchg
lods
leave
pop
sbb
adc
arpl
in
adc
mov
and
lcall
adc
mov
aad
cmp
mov
lods
adc
push
mov
sub
aad
test
sbb
lods
jns
cli
mov
lea
popf
test
sti
and
mov
inc
and
ja
jno
shll
jb
jae
mov
dec
mov
push
jb
pop
scas
loopne
sbb
mov
lods
popf
xchg
pop
xor
loop
mov
push
jg
bound
mov
pusha
aam
jbe
adc
jl
enter
inc
roll
data16
cmpsb
mov
outsl
push
dec
push
cs
lock
xchg
jae
sub
pop
mov
out
or
leave
adc
xchg
int3
pop
jecxz
and
dec
sti
cli
adc
in
in
inc
jmp
aam
dec
dec
lahf
jo
sahf
data16
into
mov
in
sub
pop
jae
insl
push
sbb
jecxz
mov
ds
push
mov
lds
in
jne
and
mov
mov
aas
push
out
cmp
xchg
inc
es
scas
test
ss
in
sbbb
jecxz
dec
pop
pop
stos
xor
in
pop
adc
add
cs
mov
add
xchg
dec
jno
std
pop
bound
das
std
stos
add
sbb
push
pop
add
ja
pop
mov
notb
rolb
or
popa
jge
js
out
dec
sbb
movsl
test
pop
repz
mov
cmp
mov
xlat
data16
push
xchg
bound
pop
or
fidivrl
pop
push
fistl
out
je
loopne
iret
cld
daa
cmp
sbb
dec
mov
sbb
fsubl
sub
mov
mov
inc
pop
push
cmp
pop
iret
xor
divb
and
jp
jnp
fs
pop
inc
cld
ret
or
xchg
fdivrs
dec
add
inc
xor
cmp
rcr
xlat
hlt
mov
push
xor
aam
cmp
out
xlat
lcall
fdivrs
push
xchg
push
cmp
add
ljmp
in
icebp
stos
test
add
xlat
or
cli
cmc
outsl
inc
sbb
outsb
or
ljmp
cmc
stos
jae
movsl
roll
jnp
lret
dec
cmp
adc
mov
mov
and
pushf
jl
adc
dec
cmp
hlt
cld
cltd
aad
dec
xchg
int
sarb
inc
idiv
mov
in
aad
repnz
iret
cld
dec
adc
js
dec
pmaxsw
mov
aad
cltd
inc
add
stos
mov
mov
cmp
mov
insb
lods
clc
sbb
ja
mov
xchg
popf
sbb
mov
adc
imul
cmpsl
sbb
sbb
mov
xchg
insl
adc
mov
in
sbb
nop
pop
fimuls
ds
mov
out
mov
out
mov
mov
fdivs
push
mov
sub
mov
int
and
jecxz
loope
push
push
out
mov
and
js
sbb
mov
xchg
mov
and
insl
pusha
pop
je
adc
int3
jne
adc
stos
shlb
shrl
mov
test
dec
inc
shl
sbb
sarb
fyl2x
sbb
call
and
jmp
adc
push
lds
ds
add
imul
into
push
out
std
lods
xchg
and
fsts
pop
pushf
jbe
ds
mov
leave
push
out
push
bound
jmp
call
daa
fldenv
clc
push
fidivrl
mov
inc
pop
aad
dec
lcall
pop
mov
and
or
inc
pop
mov
adc
xlat
fnstcw
jle
or
sub
mov
lret
mov
and
std
jmp
cs
cmpsb
movsl
dec
xchg
xor
repnz
mov
test
das
sub
jns
xchg
add
and
sub
xchg
sub
sub
jbe
inc
push
ss
lock
and
mov
mov
sbb
xchg
push
xchg
push
xchg
stos
out
scas
inc
sti
enter
out
pop
xchg
push
sbb
push
out
cld
or
test
mov
jp
add
aas
ss
cmc
mov
insl
sbb
dec
roll
lea
cmp
in
push
mov
repnz
adcl
cltd
add
mov
xchg
sbb
and
inc
into
pop
inc
insb
and
cwtl
mov
dec
lods
arpl
ds
or
xor
loope
add
pop
dec
fisttpl
shr
loope
fiadds
out
loopne
call
and
jl
fidivl
mov
add
pop
lcall
lcall
aad
cmp
in
push
mov
in
leave
or
movsl
pop
cmp
push
aaa
into
jns
jp
jno
pop
mov
xlat
push
cs
ds
mov
push
mov
xchg
ljmp
das
cmc
dec
lock
insb
leave
and
fidivrs
aas
cmpsb
xor
test
jns
imul
xor
ret
push
push
test
mov
pop
popf
jno
stos
loop
es
ret
dec
mov
push
mov
push
cmp
mov
xlat
push
xor
mov
sbb
roll
push
je
rcrl
mov
mov
cmc
or
stos
in
scas
test
loopne
sar
orb
push
mov
ljmp
mov
adc
mov
xchg
test
addr16
movq
and
add
jne
insb
xor
sbb
sbb
sbb
lcall
clc
pop
ja
cltd
in
sub
movsl
ljmp
dec
sbb
xchg
call
aam
lock
aad
push
pop
xchg
mov
pop
insb
sti
or
mov
xchg
adc
inc
outsb
loopne
mov
xor
rorl
pop
cmp
out
sub
sahf
mov
sub
outsl
leave
sahf
aam
xchg
daa
lods
sub
inc
jp
dec
arpl
repnz
jle
dec
dec
out
addr16
cmp
stos
fs
and
lods
les
clc
mov
lahf
push
xor
in
das
jl
xchg
inc
jg
fisubrs
push
push
outsb
add
ljmp
sbb
out
mov
movsb
rcrl
mov
mov
std
mov
insl
mov
cmp
enter
pop
add
lcall
scas
xchg
sub
lcall
les
sub
int
xor
repz
aad
dec
cmp
dec
rcrl
icebp
fdivl
loop
fxch
movsl
into
cmp
cmp
sbbl
lods
jmp
cs
xlat
rcrl
rcll
mov
inc
cvtdq2ps
push
xor
aad
push
dec
mov
and
call
lcall
pop
xchg
jb
mov
xor
add
add
mov
pop
sbb
jbe
repz
aas
and
jp
outsl
sarb
aam
jns
inc
jge
mov
jmp
pushf
and
or
pusha
bound
fisubrl
jae
in
xchg
pop
jecxz
lret
in
cs
outsl
rcrl
mov
outsl
push
xlat
and
push
mov
xchg
jl
push
sub
test
popf
test
add
daa
shlb
jno
pop
mov
mov
inc
lret
and
mov
xchg
aad
fwait
mov
jns
andl
sarl
pop
inc
sub
mov
mov
pusha
insl
push
int
cmp
mov
test
dec
or
les
pop
sarb
push
scas
sub
shrl
flds
lods
xchg
scas
pop
shl
jge
pop
arpl
lret
daa
adc
mov
sbb
push
popa
dec
cmp
sbb
cmp
add
aaa
push
into
in
push
cmpxchg8b
aas
or
stos
inc
outsl
lock
sub
adc
mov
fistpll
das
fnclex
sub
inc
inc
cld
lcall
xchg
enter
fsubl
mov
mov
nop
sar
adc
mov
pop
imul
out
fwait
push
mov
or
jae
orl
sbb
movsl
sub
jae
das
mov
inc
mov
cld
jecxz
out
sub
pop
mov
cmovo
or
and
mov
pop
and
xor
iret
add
stos
push
jl
cwtl
fabs
jp
push
sub
shrl
jbe
test
outsl
insb
push
shll
jne
xor
xchg
das
dec
nop
cmpsl
add
dec
cmp
xchg
int3
loop
icebp
or
mov
bound
pop
jecxz
push
les
sarb
or
cli
push
out
hlt
fwait
xchg
movups
dec
mov
pop
dec
mov
add
pop
and
xchg
xchg
mov
fiadds
or
negb
lret
imul
arpl
les
add
sbb
ljmp
xlat
test
hlt
enter
enter
int
addsubpd
cs
ja
jne
imul
or
and
push
dec
insb
lods
sub
das
push
push
popl
out
lahf
cmc
pusha
pop
fisubs
jl
pop
xor
jbe
mov
mov
in
pop
shlb
mov
add
test
orl
push
xor
movsl
cmp
je
lods
cmp
xchg
xchg
gs
cmp
mov
pop
inc
loopne
sub
incb
out
comiss
andl
pop
cmpsb
jle
fildll
sub
stos
lods
or
jo
push
mov
lahf
or
fildl
mov
in
sbb
cmp
mov
push
int
sahf
shrl
mov
xadd
jbe
and
in
or
sbb
sub
ja
das
dec
inc
cmp
mov
jb
mov
push
scas
adc
test
scas
out
aam
mov
rclb
pop
push
mov
pop
mov
push
repz
or
adc
jns
dec
pop
push
and
push
sahf
jbe
add
mov
mov
pushf
jo
jg
jno
int3
xor
or
ret
push
das
pop
cmp
scas
std
test
neg
sub
and
outsl
add
das
loopne
and
inc
pushf
loop
lods
cmp
push
mov
ss
mov
sbbl
lods
sbb
xchg
mov
ret
xchg
push
fdivrp
not
int
jecxz
push
int3
mov
std
leave
xchg
andl
int3
testb
jbe
sbb
inc
push
add
imul
xchg
int
fiadds
mov
adc
mov
adc
xor
push
and
pop
dec
stc
out
jl
push
xchg
dec
xor
clc
push
dec
add
mov
mov
push
stc
movsl
nop
gs
in
pop
xchg
popf
jbe
insb
xchg
ljmp
mov
push
inc
sbb
mov
cmp
arpl
popa
popa
push
fdiv
pusha
jo
insl
ljmp
popa
jnp
jo
cmpsl
jns
lods
pop
cmpsb
sub
jle
es
lret
jne
adc
scas
repz
xchg
push
sbbb
sub
or
cmc
subb
sub
out
xor
out
add
and
ja
pushf
lock
js
mov
push
das
mov
arpl
shlb
jne
bound
pop
add
push
cmp
pop
jmp
test
cli
mov
aam
mov
sbb
aas
cli
ds
sub
cltd
sbb
jns
inc
cmp
sbb
clc
dec
mov
mov
mov
bound
insb
inc
outsb
inc
inc
in
int
dec
add
adc
push
sub
test
ds
push
push
call
popl
push
mov
sub
popa
imul
mov
inc
xchg
jae
lret
fldt
call
fs
and
int
adc
xchg
rcrl
mov
scas
pusha
pop
les
lret
rolb
cmovnp
dec
mov
dec
cmp
out
mov
cmp
mov
bound
bound
jne
push
pop
cmp
jb
int
push
xchg
and
pop
mov
pop
pop
cmp
ds
push
out
das
hlt
movsb
sub
and
and
adc
add
inc
ret
push
in
push
out
inc
cmpsl
lret
pop
dec
test
xchg
push
call
mov
jns
push
mov
jno
xor
inc
xchg
pushf
std
into
or
repz
and
xchg
push
cmc
sarl
es
pushf
insl
pop
nop
loope
mov
frstor
inc
lock
jl
mov
out
notb
arpl
imul
sub
ficoml
jns
pushf
rcrb
or
mov
pop
pop
sti
js
clc
gs
lds
imul
push
push
call
fmull
xchg
and
cmpsb
sub
or
lcall
jecxz
mov
pop
out
pushf
jmp
and
test
sub
loope
sarl
mov
out
and
push
xchg
pop
xlat
push
std
xchg
add
jo
pop
aad
add
into
xchg
inc
jp
xchg
cmc
add
mov
jnp
or
insb
and
or
mov
cwtl
aad
dec
cmpsl
fistpl
xor
mov
mov
adc
push
bound
adc
mov
int
arpl
lea
adcb
jns
int
test
fucomi
sbb
mov
sbb
pop
repz
xchg
pop
mov
jge
push
mov
in
inc
jnp
roll
test
bound
jno
das
xor
aaa
add
insb
jmp
repz
ljmp
lret
ret
xchg
mov
mov
inc
xchg
mov
sbb
jb
pop
cltd
cli
rcrl
and
dec
mov
iret
ja
push
dec
out
and
cld
jne
mov
scas
jge
les
adc
imull
push
adc
jle
js
in
xchg
test
or
lods
dec
repnz
loop
inc
xchg
push
fistps
rolb
mov
jmp
mov
and
jne
and
xor
push
push
ret
iret
pop
mov
mov
enter
push
loopne
lock
and
pop
or
cmp
lock
in
scas
mov
in
es
stc
stc
mov
ss
repnz
xchg
pushf
loope
xorb
cmp
mov
es
or
dec
sub
lcall
das
pop
mov
xor
pop
mov
fmuls
jnp
add
xchg
pop
add
shll
xor
out
aaa
jb
clc
dec
mov
add
jge
cmpsl
test
mov
icebp
dec
push
cmp
sbb
xchg
in
outsb
dec
push
jge
repz
xchg
movsb
jnp
out
int3
ja
xlat
imul
push
andl
jle
sub
cmp
imul
cwtl
ss
xor
sbb
sub
adc
mov
sub
adc
lds
xor
push
repz
xchg
imul
cmp
cmc
mov
out
dec
push
push
pop
mov
xor
sub
ret
jbe
das
sbb
cmp
mov
stos
insb
jl
pop
pop
jge
pusha
sbb
push
jne
ljmp
rcrb
out
mov
call
add
inc
idivl
inc
inc
or
int
push
pop
pop
hlt
mov
fsubrl
and
je
or
mov
loop
lcall
jl
outsb
movsb
scas
xchg
pop
repz
mov
inc
out
push
mov
sbb
or
je
sti
fwait
dec
add
add
shlb
std
push
jp
scas
scas
and
lods
or
cltd
pop
aad
outsb
dec
jo
mov
push
popf
outsl
add
fistps
hlt
int
jl
mov
out
add
cmp
imull
and
sahf
je
cmpsl
sahf
adc
aaa
jp
fsub
aas
sbb
lods
xchg
ja
scas
dec
or
iret
cmp
cltd
jmp
aaa
inc
mov
lret
pusha
cli
loop
out
jecxz
mov
adc
and
pop
dec
repz
xor
jnp
cmc
inc
out
andl
in
sbb
movsb
jg
inc
jbe
test
mov
push
cli
and
jg
fucomp
and
push
test
mov
fisttpll
enter
xor
imul
mov
pushl
push
jmp
sub
ret
sub
pop
xchg
mov
jmp
lea
mov
hlt
push
pmaddwd
cmp
dec
mov
jle
sub
cmpl
pop
add
mov
xchg
xchg
mov
pop
hlt
cmp
dec
lahf
aam
mov
ja
out
aam
mov
ljmp
sbb
xor
sar
aaa
stc
xchg
xchg
loopne
inc
mov
call
ljmp
push
fcmovbe
testl
mov
inc
jmp
insl
mov
or
push
insl
add
sub
xchg
neg
mov
xlat
jl
orb
jle
daa
int
pop
mov
mov
xor
daa
scas
js
fildl
or
and
in
in
int3
adc
mov
ficompl
pop
push
add
adc
mov
sbb
in
dec
xchg
clc
cwtl
mov
cwtl
insl
clc
sub
jp
sbb
adc
ret
mov
insb
orl
call
stc
pusha
loopne
dec
test
dec
jb
cmp
jbe
jmp
mov
xchg
xchg
arpl
add
dec
and
mov
jns
dec
fucomi
mov
jmp
cwtl
push
jp
out
dec
outsl
lret
sahf
insb
dec
mov
popf
and
fcompl
mov
xchg
mov
lods
push
mov
nop
xlat
xor
insl
mov
in
test
mov
sbb
pushf
subl
jge
ret
lods
pop
pop
inc
fs
add
ja
scas
add
lahf
xchg
jno
ljmp
cmp
imul
jl
pushf
push
fbstp
test
cli
sub
lods
jle
adc
cmp
dec
rorl
mov
mov
dec
mov
sbb
fsts
lret
mov
test
xchg
les
or
sbb
jno
push
push
or
ljmp
mov
hlt
ja
adc
lret
hlt
test
push
dec
movsl
add
jp
fldenv
test
mov
push
call
or
xor
xor
cmpsl
mov
mov
dec
ret
stos
fists
inc
lcall
cmp
dec
adc
push
arpl
or
inc
xor
pusha
or
cmp
mov
fnstcw
lds
insl
scas
lea
dec
js
out
in
pushf
cmp
jmp
mov
push
xchg
push
mov
and
daa
jnp
jae
jo
stc
jo
add
in
xorb
sub
cmpsl
movsb
jmp
fwait
or
mov
clc
sub
scas
sti
jp
inc
mov
cmp
out
cmp
push
mov
inc
jne
mov
jl
sbb
sub
dec
jp
xor
nop
sbb
hlt
test
shrb
xchg
bound
sub
mov
sbbb
enter
subl
push
in
in
aam
sbb
fcmovne
cld
inc
popa
add
sahf
clc
dec
adc
mov
push
xor
nop
inc
loopne
push
idivl
or
xchg
xchg
lret
mov
inc
pop
pop
inc
iret
imul
push
dec
cmp
pop
fstl
notl
or
xchg
xor
stc
or
clc
or
iret
jmp
out
sub
sub
lods
inc
rol
and
add
adc
sub
movsb
mov
out
sti
pushf
jae
adc
xor
loop
xchg
shlb
jo
ljmp
mov
repnz
dec
jns
xor
in
push
ficoms
insb
pop
xchg
add
lret
idivb
movsb
jecxz
pop
mov
cs
lods
enter
cld
pop
nop
xor
pop
ror
pop
icebp
jmp
inc
push
xor
xchg
xor
xchg
mov
mov
mov
or
sbb
loop
scas
mov
fisttpl
jp
mov
inc
adc
mov
imul
movsb
pop
test
xlat
or
push
mov
push
pop
sbb
cltd
xchg
dec
fisttps
xor
cmp
pop
pusha
cmp
sbb
lods
jb
das
out
push
pop
pop
fldenv
iret
repnz
xchg
insb
xlat
xchg
xor
daa
ret
jecxz
mov
iret
pop
xchg
mov
movsl
call
out
es
push
fistps
add
lahf
out
test
shrb
add
jmp
mov
test
sbbb
popa
and
imul
movsb
inc
maskmovq
idivl
mov
adc
add
aas
lds
addr16
jo
loop
aad
cmpsb
mov
jb
jg
aaa
imull
xchg
mov
mov
cmp
sbb
insl
aad
pop
icebp
push
cli
lock
xchg
dec
mov
mov
cmp
cmc
fsubr
data16
test
lea
push
sub
mov
out
les
push
filds
ret
inc
repz
ja
insb
ret
aam
fucomip
adc
push
mov
mov
push
fs
lds
daa
jne
mov
fistl
lret
cmp
pop
dec
mov
adc
clc
loopne
or
pop
adcl
jo
mul
dec
shlb
shlb
rcrb
mov
mov
lods
sarl
dec
or
mov
sbbb
push
jge
push
mov
rclb
pusha
jmp
jo
imul
dec
idivb
sti
imul
hlt
xchg
orb
roll
aaa
mov
add
pop
lcall
push
push
lods
mov
mov
call
gs
pop
bt
in
cs
insl
mov
dec
mov
out
adc
es
into
mov
mov
sub
xor
xchg
ljmp
xchg
or
mov
cmp
nop
pop
pusha
mov
icebp
js
into
mov
sbb
or
mov
xchg
cmp
xor
adc
inc
test
lret
bound
pop
popa
lret
mov
mov
popf
arpl
pop
je
in
out
lea
jnp
pop
addl
mov
stos
fsubrs
xor
cmp
fwait
stos
clc
cli
cld
mov
clc
and
repz
mov
lods
ret
rol
jl
lods
jmp
rclb
sub
lahf
and
dec
xor
enter
arpl
sbb
inc
negb
mov
xor
or
insb
push
xchg
push
std
xchg
in
xor
xchg
add
shl
shll
cmp
andl
or
shlb
push
das
ret
cmp
shl
mov
int
or
out
pop
inc
andb
mov
fadds
iret
inc
pop
and
or
stos
jecxz
fs
jbe
xor
and
mov
mov
popa
cmp
sbb
jns
cli
in
jno
in
jno
inc
adc
xlat
pop
ficomps
cmp
mov
sbb
movups
push
out
jb
jae
loope
ljmp
lds
aas
mov
cmpsb
cmp
repnz
stc
movsl
jnp
mov
fidivl
sub
or
movsl
cs
sub
push
sti
lock
pop
xchg
movsb
add
subb
shlb
dec
adc
sti
fwait
xor
push
insb
and
pop
loop
or
sbb
mov
xor
movsb
add
jmp
push
pop
arpl
clc
push
mov
aad
mov
in
pop
sbb
or
push
or
xchg
cltd
xor
and
mov
mov
arpl
test
fistps
iret
cmp
es
or
lds
cmc
out
push
push
add
addr16
je
inc
pop
sub
add
imul
mov
cmp
pop
and
je
flds
scas
pop
xchg
adc
pushf
lcall
push
add
adc
rcr
jmp
mov
mov
jae
adc
inc
pop
or
mov
pop
mov
aaa
adc
adcb
adc
push
push
pop
cld
adc
adc
pop
dec
out
out
dec
aaa
mov
jmp
mov
fmull
test
ja
lea
or
push
cmp
into
loope
mov
cs
fcoml
push
push
stc
push
xchg
pop
inc
mov
push
sarb
mov
sub
adc
and
test
mov
loope
outsl
mov
mov
loopne
mov
ja
mov
in
pop
xchg
and
loop
sub
insb
dec
or
mov
insl
push
cmc
or
push
inc
mov
dec
enter
in
das
aaa
call
shll
and
fsubrp
adc
movhps
lcall
xor
jo
stos
fwait
xchg
js
sub
in
jl
dec
jbe
test
outsl
mov
lods
adc
xor
lahf
out
push
mov
call
dec
push
push
les
xor
mov
mov
pop
push
mov
ret
mov
inc
cmp
or
popa
cmp
push
mov
jmp
cmove
pop
aam
sub
cmc
mov
popf
mov
lods
push
mov
dec
daa
fmuls
push
movsb
jae
fidivs
aas
xchg
pop
xor
mov
mov
push
lret
enter
push
rcrb
cvtps2pd
push
cli
or
sbb
mov
es
inc
and
xlat
cmovg
pop
inc
jmp
and
push
loope
mov
mov
daa
add
cmp
mov
popf
or
scas
gs
mov
xor
fimuls
aas
and
mov
ja
pop
js
sub
in
xor
inc
xor
cmp
dec
push
xchg
icebp
inc
rorl
gs
int
mov
or
fidivrs
push
mov
sbb
call
mov
lret
stos
jg
test
daa
das
inc
jne
ds
pop
inc
mov
jno
aaa
push
aam
xor
repz
not
push
xchg
sbb
dec
add
inc
ret
add
daa
aam
mov
jno
sti
test
adc
scas
mov
xchg
fists
lds
jbe
repz
fsts
sub
sub
inc
xor
xor
mov
pop
push
fs
mov
divl
in
imul
xchg
mov
xlat
in
testl
mov
cld
inc
jmp
push
lret
fsub
pop
je
ss
dec
into
imul
mov
sub
add
cmp
mov
jle
les
or
xor
shll
push
adc
repnz
repz
lock
in
mov
or
mov
xchg
jae
dec
add
sbb
cmc
add
or
test
push
mov
cmpsl
popf
add
lods
les
gs
push
cmp
int
mov
jmp
fiadds
pop
stos
cs
mov
jnp
ds
out
add
sub
mov
test
xchg
jbe
and
test
out
sbb
pop
cmp
out
sub
addr16
inc
insb
xlat
clc
popf
adc
repz
pop
sbb
punpcklwd
or
xor
imul
loope
sbb
xchg
dec
mov
sub
arpl
test
in
mov
push
xchg
cmpb
inc
xchg
jbe
lods
pop
mov
sar
add
stos
imul
sbb
js
fmuls
ret
das
test
sbb
mov
int
push
sahf
ror
clc
test
pop
leave
es
mov
inc
cmp
mov
ss
jbe
or
sti
xor
xor
sub
xchg
jnp
push
cmp
out
mul
jnp
nop
xchg
enter
dec
xchg
popa
sub
daa
and
add
lods
in
sbb
cmp
loop
adc
lcall
ret
es
xchg
jmp
cmp
dec
xor
xchg
cltd
mov
iret
lahf
ss
lcall
mov
and
mov
inc
xchg
cmc
xorb
flds
and
cmpsl
call
addr16
inc
outsl
adcb
jp
jl
add
push
pop
dec
dec
negl
jae
cmp
nop
jbe
sub
xlat
sarb
add
jl
pop
xlat
fdivrs
aaa
decl
inc
out
mov
stos
xor
icebp
add
push
sbb
in
mov
mov
mov
ss
fs
ficompl
inc
mov
aaa
lock
and
mov
call
in
pushf
out
pop
jbe
fbstp
add
push
xchg
scas
jle
sbb
adc
sub
fmull
sub
mov
and
sahf
jae
mov
pop
dec
mov
xor
cmp
sub
das
xchg
inc
mov
pop
test
je
xchg
inc
pop
mov
xor
push
mov
sub
or
imul
jl
fcoms
flds
sub
mov
ret
ret
mov
loope
fcmovbe
enter
cmp
hlt
inc
push
mov
sub
dec
bound
shlb
in
add
test
pop
xor
lods
or
and
sbb
and
mov
lods
and
sbb
sub
mov
and
cmpsl
mov
aad
push
jmp
subl
arpl
dec
cmpsb
mov
jns
cmp
inc
cmp
jg
pop
fs
mov
add
inc
enter
mov
push
roll
scas
sahf
xlat
dec
jge
fidivrs
sbb
in
push
aam
enter
aaa
es
mov
ret
mov
ret
ja
movsb
mov
mov
popa
jl
xor
unpcklps
mov
insb
in
icebp
inc
pop
pusha
shl
into
jge
jge
into
push
jecxz
dec
imul
loop
add
push
lods
and
or
fsubl
inc
test
nopl
icebp
sbb
int3
bound
jp
push
mov
cmp
insb
rorl
insl
sub
or
mov
sub
xor
cmp
inc
rcr
push
lcall
outsb
out
in
xchg
inc
enter
cmp
pop
popa
add
sbb
xchg
jle
xchg
xchg
jmp
pop
lds
cmp
data16
push
and
sub
mov
mov
push
mov
mov
shrl
outsb
cltd
ds
cs
add
in
or
int3
pushf
cltd
and
inc
sahf
imul
cld
or
jle
fiaddl
mov
sub
push
mov
sbb
push
sahf
add
scas
inc
fsubrl
or
xchg
push
jb
incb
int
addr16
mov
gs
mov
adc
sub
test
nop
xlat
repz
push
dec
dec
dec
jns
aaa
int
mov
push
pop
shrb
out
movsl
gs
or
xchg
jo
std
dec
push
ret
js
mov
outsb
pop
mov
cmp
outsl
fbstp
push
sbb
cmp
fwait
jno
cmc
push
mov
repz
jo
and
mov
push
hlt
movsb
or
fisubs
pop
lods
or
in
fmuls
and
fstpl
mov
jmp
pop
es
xor
stos
std
inc
test
mov
in
fsubp
test
xchg
xor
es
sub
xor
ljmp
lods
in
mov
in
cmp
pop
enter
int
cmp
lea
jge
inc
or
lds
jnp
cli
idivb
lret
or
push
fcmovbe
add
and
repz
pop
inc
cmpsl
loopne
push
fdivp
ljmp
cli
push
dec
cld
mov
mov
dec
clc
mov
cld
or
stc
or
pop
cmpsl
adc
test
lcall
not
adc
push
stos
dec
mov
arpl
loop
in
push
rcll
test
adc
dec
insl
dec
sub
leave
jle
or
rclb
dec
icebp
imul
jo
sub
nop
int3
and
adc
orl
pop
push
ja
cmp
jne
inc
sbb
cmp
stos
pop
cmp
inc
fildll
cmc
push
stc
jmp
mov
dec
xor
mov
fisubrs
add
mov
sbb
icebp
dec
stc
mov
push
mov
ret
sub
cmp
inc
pop
arpl
adc
dec
xchg
dec
ds
push
cmpb
jne
xor
aaa
sbb
lret
adc
jns
repz
sbb
xchg
pop
sahf
xchg
sarb
aaa
addr16
mov
inc
and
lcall
lcall
test
push
in
cmp
dec
repz
push
or
mov
lret
hlt
imul
cmovbe
mov
mov
pop
xchg
sub
movsb
arpl
pop
in
xchg
sbbl
cli
je
std
pop
mov
push
cltd
popa
test
mov
shrl
lcall
inc
xor
xchg
xchg
cmpsb
push
dec
push
sbb
inc
sbbl
jno
in
lods
jp
int3
push
or
pop
add
push
pop
ror
inc
dec
rolb
inc
xchg
xchg
push
mov
mov
mov
push
and
rolb
js
and
outsb
fcomps
add
mov
lret
mov
stos
andb
jne
mov
adc
mov
mov
std
and
xor
decb
imul
add
aaa
popf
xor
out
xor
push
sar
leave
and
cmp
pushf
hlt
ds
jp
popf
jb
sarb
xchg
sub
pop
push
shlb
out
popa
adc
or
push
mov
leave
fcmove
jae
int
fwait
sahf
dec
mov
adc
jo
fcoms
lods
insl
outsl
rolb
mov
por
xorb
sti
sub
outsl
sbb
daa
push
lret
jge
add
loop
imul
fdivrs
out
dec
out
cmp
add
lds
pop
incl
dec
jmp
pushw
mov
xchg
call
rorl
and
outsl
lock
jo
bound
xchg
in
sub
cmp
pushf
xor
pop
or
into
mov
es
sbb
popf
add
in
out
xchg
pop
xor
mov
pop
in
lds
push
les
into
mov
data16
sahf
and
orb
loop
rorb
adc
hlt
jnp
cmc
add
sub
mov
push
jle
lahf
adc
bound
int3
loopne
add
jmp
or
out
cltd
je
les
jge
dec
push
mov
push
enter
push
dec
add
lds
xlat
sub
jmp
cmc
mov
popf
stos
test
sbb
push
loope
or
fistpll
inc
pop
ds
sti
xchg
mov
inc
jle
ljmp
sub
and
mov
movsl
out
test
iret
aas
movsl
in
xor
subl
jl
stos
ja
insb
cmpsb
rolb
out
xor
hlt
aad
aaa
add
jo
cld
test
aaa
lods
sbb
xor
enter
pop
xchg
aaa
call
aaa
es
and
jg
adc
hlt
sub
into
push
iret
xchg
out
jae
repz
loopne
imul
inc
cli
cmp
fdiv
pop
adc
pusha
cmp
cmp
fmul
and
inc
pop
mov
lock
or
fstl
movsb
push
icebp
sarl
lret
into
lea
out
mov
jge
outsl
jae
sahf
arpl
sub
into
ljmp
lret
arpl
adc
cltd
lds
inc
mov
and
rorb
pop
cmp
das
or
push
mov
dec
sarl
mov
cwtl
nop
fwait
and
sti
xchg
stos
mov
mov
mov
das
daa
repz
stos
lea
dec
dec
or
ljmp
dec
add
jecxz,pt
dec
inc
cmpsb
into
movsw
mov
xor
mov
push
or
lcall
pop
shrl
out
jae
adc
pusha
popa
push
fisttps
icebp
cmp
ds
popa
push
jle
lahf
das
mov
dec
cld
jl
mov
movsb
hlt
loopne
pop
or
xchg
jge
xor
sti
jbe
shll
and
mov
pop
dec
sbb
leave
sbb
mov
sahf
push
jnp
bound
dec
in
xchg
pop
and
push
jp
daa
inc
cmpsb
test
inc
xchg
sahf
fs
pop
shl
out
ja
or
aam
mov
inc
push
xor
xor
xor
shlb
cmpsb
dec
sbbl
pop
mov
lods
xor
mov
adc
adc
sarb
je
jp
cwtl
add
insl
cs
mov
test
hlt
ss
mov
xor
into
and
inc
xchg
dec
xchg
inc
aam
sub
xchg
jg
loopne
ljmp
notl
arpl
stc
xchg
imul
roll
loopne
outsb
inc
push
loopne
jmp
sub
pop
enter
cmp
adc
loop
mov
push
in
xor
ds
addr16
jne
push
dec
and
add
pop
sub
mov
les
xor
push
call
add
mov
lds
fsts
ret
das
lret
shlb
movsb
mov
add
lret
pop
dec
cli
xor
cmp
aaa
imul
and
es
ja
outsb
jnp
imul
jae
xchg
push
pop
sub
xchg
mov
ds
fwait
mov
int3
clc
out
cmpsl
aaa
xchg
mov
mov
dec
rorl
loop
adc
cmc
jge
fnstsw
cmp
adc
sbb
gs
mov
cmpsb
rcr
lods
aas
push
jl
mov
loopne
idivl
mov
lret
xor
call
rcll
daa
sarl
pop
pop
jmp
call
inc
xor
mov
fistps
mov
dec
out
loope
sbb
fnstenv
hlt
or
or
ss
sub
loopne
sbb
pop
sahf
push
push
and
fidivrl
cmp
leave
int3
mov
push
stos
mov
addr16
push
loopne
or
or
fmull
pop
sub
push
pop
fistpll
cmc
imul
and
mov
jp
out
pop
push
aas
mov
mov
xor
stc
add
inc
cld
rcll
sahf
std
sub
call
lahf
dec
sub
add
lahf
rcrb
push
mov
xor
out
cltd
daa
adc
test
sub
mov
pop
sbb
cwtl
test
nop
fcompl
shlb
xchg
test
lea
pop
xor
push
fsubrl
mov
imul
xor
xor
cs
xor
in
roll
aas
lcall
das
push
mov
cli
adc
mov
dec
rorl
and
xor
dec
sub
adc
out
inc
std
cmp
xor
and
mov
mov
mov
stos
sub
out
mulb
xor
pop
in
xchg
xchg
cs
mov
or
mov
int
adc
sahf
mov
push
loop
repz
cmp
mov
xchg
mov
outsb
xorl
pop
arpl
mov
xor
push
lods
xchg
jp
mov
loope
and
aad
jne
xchg
push
sbb
and
mov
imul
pop
push
push
lds
test
inc
push
lds
xchg
inc
mov
pop
pop
in
sbb
lcall
call
xchg
lret
sarb
push
les
sub
pusha
jno
xchg
test
push
inc
xchg
add
sbb
rolb
les
shlb
push
lret
sbb
lret
fldt
out
test
sbb
in
outsl
jno
adc
inc
lret
pop
fists
or
enter
sahf
cmpsl
sub
xor
inc
mov
icebp
shl
adc
adc
je
and
inc
mov
adc
ds
movsl
enter
cmp
ds
adc
lahf
addr16
sbb
in
xchg
or
pop
mov
mov
mov
stos
mov
nop
ret
and
fs
mov
add
mov
cmp
aas
mov
dec
jns
notl
mov
push
les
mov
cmpsb
ret
insb
pop
mov
fcomp
mov
iret
gs
enter
mov
or
or
mov
xlat
push
add
test
lret
pop
test
scas
fcmovnbe
mov
jno
or
cmpsb
into
addb
mov
adc
mulb
int3
mov
adc
pop
sub
xlat
push
lahf
push
gs
in
xchg
nop
and
sarl
mov
cli
outsb
jp
cmpsb
fdivrl
inc
push
xlat
lods
jmp
push
xchg
pusha
aas
push
add
aam
cwtl
fsubr
and
dec
pusha
js
or
cmp
stos
jecxz
mov
ljmp
mov
mov
movsb
inc
pop
dec
lcall
call
lcall
sub
pop
lret
popa
idivl
out
inc
pop
outsb
mov
aam
jl
imul
adcb
out
dec
nop
notb
daa
push
inc
ljmp
lds
inc
mov
test
pop
out
popa
cmc
insb
push
or
mov
push
adc
and
pop
dec
rolb
pop
sub
add
dec
insb
call
je
rcrl
dec
lock
and
sbb
int
ja
mov
xorl
xor
mov
mov
test
cmc
sbb
add
jo
test
jge
add
push
not
dec
xor
mov
arpl
lret
sarl
cmpl
dec
and
ffreep
pop
xchg
mov
aas
and
mov
and
pop
shlb
rclb
sub
sbb
mov
pop
aaa
adc
mov
xchg
xor
jmp
loope,pn
fidivl
push
imul
jecxz
mov
mov
ss
sub
aad
xchg
mull
inc
aad
add
add
mov
and
in
out
or
sub
ret
jg
mov
or
jnp
adc
inc
cli
loop
sbb
add
jmp
cmc
test
mov
fistps
aaa
popa
sbb
leave
cmpsb
into
lods
dec
or
js
or
inc
lret
push
lret
repnz
ds
and
or
icebp
testb
cmp
add
hlt
js
and
pop
dec
fs
nop
xor
lret
test
pop
xor
sub
adc
icebp
adc
stos
test
inc
cmpsl
adc
sar
cmpsb
jns
or
add
sahf
inc
ss
test
es
pop
shll
adc
movsb
mov
push
or
out
or
mov
xor
xor
insl
gs
roll
jl
adc
jg
adc
mov
repz
pop
pop
shrb
sub
xchg
adc
pop
sarl
inc
insb
ss
mov
adc
adc
test
adc
fiadds
push
jns
jns
clc
sbb
inc
push
inc
adc
scas
push
push
xchg
xor
xor
stos
stc
jns
adc
out
add
loope
repnz
push
and
jbe
dec
pop
les
push
sbb
cltd
loopne
loopne
insl
ja
inc
out
stos
or
es
mov
ja
test
lods
xor
out
dec
push
bound
enter
and
sbb
bound
in
outsl
push
dec
lea
pop
and
cmp
cmp
and
sub
pop
jle
push
dec
mov
popa
xchg
data16
mov
stc
lods
inc
mov
in
inc
jns
ficoms
push
mov
ds
aas
mov
outsb
pushf
aaa
jnp
cmp
push
scas
cmpb
in
shld
add
cld
jecxz
xlat
xor
inc
fbld
loopne
test
mov
mov
fildll
jne
xor
popa
fstl
cmp
sub
adcl
and
inc
into
outsl
movsb
pusha
mov
add
das
jp
or
sbb
xor
xchg
test
push
out
ret
and
loope
jle
jb
aaa
pop
mov
leave
enter
inc
test
scas
dec
pop
sbb
test
xchg
mov
jns
loopne
xchg
frstor
jmp
nop
pop
and
add
jge
repnz
add
jbe
lret
mov
mov
mov
mov
pop
popf
rorb
sub
mov
add
mov
mov
mov
movsl
or
cmpsl
push
imul
jmp
mov
jo
stos
in
out
push
sub
jae
jo
and
and
add
adc
adc
mov
sarb
add
movsb
pop
repnz
je
sbb
popa
test
pop
xor
mov
int3
mov
cmc
mov
test
ret
and
bound
mov
inc
hlt
aaa
lods
stc
xchg
neg
test
repnz
bound
int3
adc
cmp
lcall
jno
add
pusha
fxch
xchg
and
das
xor
mov
inc
xor
push
adcl
sub
mov
push
adcl
cmp
mov
and
adc
sbb
jae
test
jno
and
cwtd
xlat
shlb
negb
inc
iret
cmp
lock
sbb
sub
sti
mov
fldt
mov
fmul
fisttpl
ss
adc
jbe
imul
lock
sbb
imul
outsl
jae
scas
pop
mov
adc
sub
sub
pop
orl
pop
shl
push
jl
dec
add
popf
inc
icebp
movsl
in
pop
push
aam
inc
ds
fsub
call
jbe
inc
and
xchg
cli
nop
mov
loope
cmpsb
sub
ljmp
gs
pop
mov
mov
cwtl
sub
call
mov
in
jno
icebp
jae
shll
xchg
and
sbb
bound
push
lock
stos
insl
add
jle
xchg
inc
sub
or
sar
mov
cmpsb
movsl
jl
scas
and
fwait
sub
int
and
icebp
stos
and
ljmp
in
add
sbb
cmpsb
mov
repz
jge
ret
jl
mov
cmp
xor
outsb
repz
fdivl
popf
std
and
push
das
sbb
adc
aaa
loop
jge
push
push
std
mov
dec
stos
dec
add
xor
cli
mov
sbb
je
xchg
or
pop
adc
pop
lret
xor
mov
fcmovnu
mov
push
xchg
mov
add
fs
daa
pop
add
mov
std
jno
jnp
pop
cmp
jg
xchg
and
mov
mov
movsw
sbb
or
pop
cs
orb
lea
xor
stc
and
cmp
test
in
jb
repnz
test
jo
insb
das
outsl
test
fiaddl
out
xchg
pop
stos
sbb
shlb
jle
scas
jno
sbb
out
xor
and
int3
dec
ret
mov
sbb
push
addr16
fisttpll
fmull
or
push
jno
shr
mov
je
imul
adc
cmpsl
mov
jecxz
outsl
test
gs
neg
adc
outsl
mov
pushf
or
addl
stos
enter
mov
adc
mov
mov
inc
push
xchg
iret
shlb
jo
aaa
loopne
mov
int3
mov
ds
xchg
mull
ss
loope
enter
mov
jmp
cmp
insb
or
sbb
fistpll
in
test
adc
cwtl
mov
arpl
cmp
mov
nop
fdivrl
ds
adc
insl
cmp
enter
stos
push
pop
xlat
mov
out
fstps
adc
adc
pop
push
out
dec
sbb
dec
cmpsl
push
scas
xlat
sub
sar
inc
or
xor
jl
mov
mov
mov
xchg
shrl
clc
daa
inc
daa
mov
jne
dec
movsl
xchg
pop
push
inc
xchg
lods
scas
xlat
stos
aaa
pop
xchg
xor
je
js
jo
call
ja
jl
lahf
or
mov
lods
mov
inc
ss
fadds
jnp
mov
mov
ror
lea
enter
pop
lds
push
mov
jo
add
mov
push
inc
scas
push
mov
sar
adc
sub
fidivs
jle
mov
adc
mov
or
lret
pop
sbb
mov
out
fdivl
xorb
pop
adc
out
pop
jne
ror
test
movsb
call
pop
xchg
push
call
cmp
iret
loope
pop
mov
popf
cmpsb
or
arpl
popa
pushf
xor
or
insl
xlat
cmp
ds
aaa
stos
xchg
out
mov
sub
push
sarb
mov
sbb
add
push
sbb
adcb
not
and
jmp
mov
lds
inc
pushf
cltd
rcll
push
inc
sbb
push
lock
out
jns
outsl
lea
add
mov
les
enter
xor
fcmovbe
cmc
int
lcall
lea
sub
push
mov
mov
sub
pushf
pushw
scas
mov
mov
outsl
ds
arpl
in
cmp
push
inc
adc
push
mov
mov
xorb
nop
adc
aas
jl
adc
cld
ss
sub
addb
add
decl
aas
fisttps
mov
jno
enter
inc
pop
jo
lahf
mov
cmp
xchg
xor
ret
std
add
pop
es
xchg
add
xchg
faddl
xchg
sbb
push
mov
xor
pop
dec
and
pop
inc
imulb
push
mov
sub
imull
in
and
xorb
test
test
clts
sbb
sub
mov
ret
outsb
pop
add
push
data16
int3
mov
test
push
pop
mov
xchg
dec
fdivl
xchg
add
push
jne
push
dec
in
mov
jbe
loope
jo
adc
adc
call
sbb
adc
test
lret
shrl
aam
xlat
push
mov
mov
cmp
adc
subb
arpl
add
pop
aam
call
pop
sub
cltd
cmp
insl
sub
push
add
push
incl
mov
jo
lahf
dec
pop
in
jae
xor
subl
xor
xchg
mov
in
jmp
out
ljmp
sbb
scas
inc
test
jecxz
pop
loop
jae
das
jmp
rorl
push
int3
sub
sub
shrw
std
add
pop
pop
in
push
adc
sub
fs
push
pop
and
in
movsb
lock
cmp
popa
popa
sahf
sahf
cmp
jno
inc
xchg
aas
mov
mov
stos
jge
imul
push
and
jg
lahf
inc
aam
pop
outsl
rcrb
cli
xor
stc
loope
push
add
jne
mov
jge
in
outsb
mov
pop
adc
push
stc
aad
cwtl
ljmp
push
xchg
jmp
mov
or
popf
sub
dec
ret
mov
es
and
mov
xlat
pop
call
xchg
hlt
inc
cmp
mov
test
sahf
mov
dec
aad
bound
imul
je
inc
adc
mov
xor
lock
fisubl
vfnmsub213ps
mov
xchg
sarb
lods
stos
pop
lds
pop
xchg
push
test
ds
or
ja
dec
pop
pop
shl
cmpsb
add
jmp
and
jbe
in
push
popa
push
push
cli
jno
inc
sbb
mov
and
mov
dec
mov
lahf
stc
cwtl
dec
aas
ret
adc
rorl
adc
jne
dec
push
mov
xor
xchg
repz
scas
fstpt
and
and
xchg
jbe
lock
xchg
mov
shrl
or
push
mov
push
dec
test
and
movsl
shrb
lock
pop
cmp
jbe
add
pop
pusha
lods
fnstcw
jbe
pop
xchg
test
les
adc
lahf
dec
add
cmp
cmc
mov
sub
mov
popa
add
mov
mov
jg
ss
sbb
mov
leave
sarb
das
sbb
nop
jle
sub
cmp
xchg
setbe
xchg
les
xor
js
mov
jne
mov
inc
xchg
add
fdivl
fldt
mov
mov
push
ror
in
mov
push
cmp
rcll
iret
addl
cmp
es
pop
mov
dec
cmp
test
xchg
sub
in
outsb
push
stc
pushf
int
jle
movsl
and
xchg
pop
mov
jecxz
xchg
jnp
mov
sti
out
jecxz
sbb
inc
int
sti
ret
sub
add
lods
push
xchg
pop
adc
rolb
or
and
mov
addl
mov
jbe
rorb
test
sbb
ds
inc
movsl
in
ret
insb
addr16
fsubrl
mov
xchg
sbb
xor
cmp
sbb
pop
mov
xor
push
pop
jnp
out
mov
popa
mov
jns
cld
sbb
jmp
fiaddl
add
sbb
mov
popa
pop
xor
std
mov
sub
sub
add
xlat
mov
push
jl
dec
mov
leave
cmp
inc
push
xchg
test
test
cmpsb
push
ja
fwait
pop
mov
pop
sbb
dec
inc
scas
aad
mov
push
fimuls
jns
xlat
repz
push
packuswb
pop
stos
add
lds
push
jl
xchg
lahf
int3
call
es
fmull
in
pusha
push
pop
jns
ds
insl
ret
jle
push
aam
mov
mov
popw
fldenv
inc
popa
sbb
aam
jae
ret
dec
subl
or
mov
aam
xchg
cmp
out
fstl
insb
mov
add
fadds
call
pop
adc
cmp
mov
clc
sbb
xchg
lret
jo
xor
xlat
inc
into
repz
ja
and
mov
in
mov
jbe
fistl
popf
dec
imul
int
test
hlt
dec
cld
adc
aaa
pop
dec
pop
stos
inc
add
lahf
inc
fdivp
xlat
mov
sbb
lods
push
push
inc
outsb
incb
cmc
mov
enter
int3
shlb
ficomps
sub
repz
xchg
xchg
loopne
and
mov
inc
add
test
shl
or
sub
pop
test
js
jle
ds
xchg
lret
cld
movntq
dec
mov
jmp
xor
ret
mov
rorb
mov
mov
cmpl
lret
lcall
je
xor
cmp
xchg
mov
mov
scas
add
xor
movl
xchg
lahf
cmp
jb
mov
cmp
push
sub
shrb
gs
es
push
sub
in
sti
jp
mov
int
out
cmp
repnz
std
insb
xchg
insl
fwait
dec
jae
les
shrl
inc
pop
pop
test
mov
imul
mov
inc
imul
ret
push
movsb
mov
hlt
jmp
xchg
movsl
cmp
cli
pop
xor
jbe
mov
mov
daa
call
cmp
mov
mov
xlat
shlb
or
fisttpl
fidivrs
xchg
push
movsb
jns
ror
inc
cltd
push
dec
adc
cltd
xor
jle
pop
mov
adc
lds
pop
mov
frstor
data16
ss
jae
push
fcmovbe
das
pop
sub
out
les
scas
mov
add
push
ret
jo
jae
adc
jne
daa
int3
cmpsb
js
scas
xchg
xchg
mov
pop
scas
das
inc
cmp
push
daa
rorb
pusha
mov
decb
pop
jne
inc
xor
push
mov
xchg
clc
lods
sbb
cmp
add
jb
mov
pop
cwtl
das
jo
and
clc
ret
inc
fwait
out
or
pop
sbb
test
lock
jno
packssdw
dec
jge
mov
xchg
xchg
jae
mov
movsl
leave
pop
push
lods
cmpsb
mov
jmp
or
mov
in
mov
cmp
mov
pop
inc
mov
cmp
and
xor
test
pop
adc
or
repnz
xor
jmp
leave
jmp
dec
mov
pop
dec
pop
das
aad
roll
inc
pop
hlt
jne
mov
fisubrs
cmpsl
lret
inc
add
shr
out
gs
fstpt
or
call
imul
mov
push
and
scas
rorb
push
or
push
or
pop
das
mov
push
inc
divb
iret
cmp
mov
fs
or
mov
xor
jp
xor
sub
cmp
sahf
add
enter
inc
rcrb
pop
fbld
stc
sbb
lret
scas
pop
dec
shlb
hlt
mov
jb
jecxz
clc
mov
test
test
mov
or
sub
jl
cmc
inc
scas
das
test
push
add
ffreep
push
out
iret
mov
jbe
pop
je
ja
pop
dec
mov
ret
push
icebp
ja
cmp
xlat
stos
xorl
inc
inc
jmp
xchg
lods
out
insb
jbe
xor
jge
mov
test
cmp
leave
iret
gs
add
xor
dec
inc
fldl
fs
mov
and
add
push
ret
add
imul
test
push
pop
push
mov
clc
dec
aas
mov
popa
lods
push
jle
and
adc
mov
sbb
mov
movsb
in
jae
pushf
xlat
push
out
repnz
pop
sub
movsl
inc
mov
fs
xchg
pop
pop
cli
jbe
enter
or
int3
push
mov
mov
mov
fidivl
std
dec
pop
inc
and
std
or
push
adc
mov
inc
mov
je
sahf
js
jnp
stos
sbb
mov
into
xchg
xchg
in
and
add
push
fcomp
push
push
sub
clc
lret
mov
jns
cli
and
cmpsb
ficoms
mov
jno
sub
sub
addr16
cmp
outsl
add
jb
sbb
sub
or
push
lret
or
lret
jmp
mov
jge
fcompl
cmpsl
shll
icebp
xchg
jp
mov
ret
sub
jnp
out
add
sbb
arpl
and
add
in
call
sub
inc
xor
push
xchg
fldl
push
in
lds
xor
gs
xor
mov
insb
dec
jbe
or
sub
sbb
xchg
and
test
rclb
std
js
push
dec
or
in
jne
fimull
adc
cmpsb
pushf
insl
mov
mov
mov
adc
pop
ffree
popf
jno
mov
cmp
and
push
mov
rol
mov
xor
add
lahf
jne
mov
jmp
frstor
imul
inc
daa
lock
pop
jo
xchg
xchg
int
jno
sahf
fimuls
cmc
xchg
sub
inc
cmp
pushf
jns
add
rcl
jp
sbb
sbb
stos
fs
xchg
testb
dec
mov
push
xchg
fcomip
fsubrs
insl
cmp
dec
in
scas
lss
roll
cmp
inc
and
imul
es
push
imul
push
add
aam
mull
dec
lret
fadds
ret
push
std
adc
sbb
adc
jp
mov
test
lea
repnz
test
rcrb
jae
or
repnz
pop
add
in
mov
fs
jecxz
pop
and
call
out
test
mov
andl
mov
lds
mov
adc
mov
and
pop
jb
jo
inc
ss
lcall
mov
sti
subl
push
jge
push
movsb
inc
add
and
mov
push
fnstsw
pop
sbb
adc
andl
push
xlat
xor
in
sub
jp
cs
dec
mov
mov
loop
in
cmp
rcl
xorl
es
in
push
push
sub
iret
xchg
sub
dec
jnp
pusha
lahf
aam
add
jl
jae
mov
sbb
hlt
mov
xchg
mov
and
fbstp
pusha
sbb
cmp
mov
sub
imul
rcrb
pop
xchg
sub
and
mov
sbb
test
cwtl
xchg
sarl
popf
mov
je
inc
add
inc
addr16
mov
stos
repz
fcmovnbe
inc
scas
pop
addr16
and
sub
loopne
xchg
sub
mov
dec
jle
out
dec
mov
notb
rcr
rcrl
loop
lea
pop
mov
lods
lea
push
stos
pusha
xchg
mov
and
mov
in
fnsave
rcrl
adc
ljmp
add
mov
lds
sahf
xchg
in
sbb
out
mov
inc
or
mov
leave
inc
ret
sbb
pop
pop
mov
pop
push
xor
jae
ret
push
jp,pn
loop
mov
fiadds
cmp
mov
and
cmp
in
mov
jae
mov
adcl
xor
inc
cli
jg
lods
lods
adc
into
insb
jle
adc
cwtl
cmp
add
rclb
and
gs
sub
xor
mov
arpl
shl
je
lret
lret
mov
add
cmp
adc
sti
mov
fldl
rorb
in
xchg
iret
in
adc
cmc
inc
stc
popa
or
icebp
xchg
dec
and
cmc
inc
jb
mov
sub
pop
rorl
add
push
add
xchg
push
repz
add
clc
mov
jmp
mov
push
fs
sbb
test
dec
add
subl
mov
and
pop
arpl
std
adc
sub
pop
ss
je
out
dec
pop
adc
dec
outsb
icebp
mov
xor
fsubrl
add
inc
push
jae
jecxz
sub
gs
mov
cmpsb
std
dec
out
les
popf
sub
pusha
insl
int
hlt
cmp
outsl
dec
jno
push
add
or
dec
inc
mov
cs
test
test
sub
add
sbb
pop
xchg
xor
xchg
out
aas
xlat
sbb
jmp
xchg
pop
mov
and
lret
pop
es
push
lret
push
aam
mov
psubq
or
jo
fistpll
push
in
sub
inc
mull
bound
aam
in
push
aas
outsl
push
lea
test
aaa
ss
mov
cmpsb
jae
cmpsb
dec
cli
fsubrs
pop
das
shr
xchg
sub
dec
mov
dec
ljmp
push
arpl
pop
xor
rcll
dec
push
pusha
sub
in
or
cs
xchg
subl
push
xor
test
out
addr16
mov
inc
sbb
sti
lods
xor
mov
sbb
xlat
aad
int
test
aas
pop
movsb
bound
insb
int3
in
dec
out
int3
mov
ljmp
jb
out
jnp
stos
xchg
jb
jns
sbb
and
out
fmulp
and
inc
leave
imul
jg
sbb
popf
lods
scas
into
mov
lret
cmpsb
sahf
xchg
fs
mov
mov
xorb
mov
push
jb
shlb
xchg
rcrl
fucomp
gs
mov
nop
mov
test
cmpb
inc
insb
syscall
sub
lea
jne
xchg
stc
aam
stc
mov
or
cmp
clc
fdivrl
or
sbb
push
mov
dec
pop
sbb
popa
xchg
jne
arpl
pop
test
sahf
and
sub
cmpsl
stc
add
pop
test
in
adc
loopne
mov
lods
repnz
adc
mov
cltd
rolb
push
lods
jnp
leave
adc
add
mov
xor
imul
push
cmp
cmp
dec
xor
sub
icebp
repnz
inc
or
bound
aas
test
stc
add
inc
and
leave
mov
dec
lcall
jnp
fdivrs
das
jnp
shrb
jg
fwait
int3
hlt
mov
pop
adc
ds
sub
push
xchg
mov
jne
pop
lret
pop
push
mov
imul
push
adc
or
mov
pop
dec
mov
pop
push
mov
test
test
jnp
test
aaa
aad
mov
outsb
jo
inc
xor
fdivrp
mov
jg
xchg
ret
addl
mov
sbb
inc
lea
leave
sbb
addr16
pop
fadd
loop
adc
xor
scas
push
jb
jbe
xchg
mov
call
cmc
push
ss
or
enter
daa
pop
push
rol
gs
ja
loop
out
push
loope
out
xorl
int3
sub
sub
int
sbb
fs
lcall
push
push
xlat
test
cld
jge
or
add
jnp
sub
js
dec
sbb
stc
mov
outsb
movsb
push
sbb
mov
gs
jp
mov
shr
test
push
aam
insb
sub
in
sub
rcl
orb
sbb
push
adc
cmpsl
adc
cli
mov
es
nop
or
push
ficompl
sar
sub
xor
xor
cmp
aaa
fcmovbe
jne
xchg
out
sbb
mov
dec
mul
in
decl
add
pop
icebp
repz
data16
and
sub
rorb
repnz
xor
dec
adc
cmpsl
in
rcrb
cmp
xchg
pop
icebp
enter
dec
or
cmpsb
push
dec
mull
xchg
push
xor
les
mov
imul
sub
and
xchg
adc
mov
dec
data16
xor
mov
add
mov
pop
test
in
es
test
mov
loopne
dec
movsl
lds
andb
ret
test
lea
xorb
fnstsw
push
lock
adc
rcll
sub
popf
nop
pop
xchg
mov
inc
loope
mov
leave
stc
repnz
jg
movsb
pop
dec
movsl
push
mov
cwtl
and
dec
lods
push
movsb
and
ss
imul
or
lcall
push
mov
test
mov
testb
or
sti
jns
ss
push
xor
push
ja
add
aas
in
and
xchg
scas
cmp
scas
jecxz
addr16
test
push
dec
xor
pop
or
xchg
adc
and
icebp
sub
lret
out
sbb
or
mov
out
mov
out
mov
aam
pop
jnp
xchg
in
lods
fisubs
pop
mov
ficoml
xor
mov
inc
in
in
mov
movsl
outsb
jmp
pop
movsb
icebp
ss
mov
pop
pop
lods
cmp
cmp
dec
xor
lods
or
push
push
add
mov
pop
adc
jge
loope
addr16
xor
push
xchg
ret
mov
xchg
fwait
and
movsl
es
arpl
call
pop
push
sarl
jbe
es
adcl
divl
cld
pop
or
mov
jge
movb
push
loopne
negb
push
inc
stc
dec
mov
sbb
in
daa
loopne
mov
cwtl
inc
aas
xor
xor
jge
push
inc
ja
or
in
ret
jl
and
pop
dec
cmp
popf
jp
push
pop
fbstp
das
pushf
or
cmp
test
jnp
jo
movb
ja
jg
push
fwait
ja
bound
mov
push
push
add
inc
scas
stos
pop
xchg
xchg
dec
dec
push
movsb
xchg
ljmp
aam
xchg
add
mov
mov
idivb
test
and
xchg
cmp
fs
jnp
stos
xor
pop
out
bound
sbb
fistps
xchg
sub
sbb
push
xor
aaa
cmp
inc
push
aad
iret
xlat
fisttpll
adc
es
arpl
dec
mov
push
ds
subl
xor
lds
inc
adc
dec
aaa
inc
jns
insb
adc
clc
xor
dec
mov
movsb
in
mov
adc
sbb
cltd
mov
adc
in
outsl
outsb
cmpl
sub
push
jmp
fwait
pop
fnstenv
arpl
arpl
in
test
test
dec
fimull
dec
out
push
mov
and
imul
shrl
sub
gs
jb
fldt
jecxz
repnz
iret
sub
push
pushf
jmp
divb
mov
or
adc
dec
es
xor
dec
icebp
test
push
pop
sbb
jle
push
sub
je
lds
xchg
mov
jmp
or
lahf
inc
jg
cmp
inc
jle
or
push
xor
sub
and
in
mov
sbb
outsl
mov
stos
push
lods
sbb
lret
loop
adc
in
jns
jg
fsubrs
xchg
aam
fidivl
push
inc
int3
insb
cld
jns
push
mov
cmp
dec
pop
jge
aad
inc
push
sub
and
adc
loope
hlt
xchg
je
mov
mov
add
adc
sbb
lahf
or
and
inc
lods
iret
pop
icebp
test
insl
adc
mov
dec
cmp
jb
outsb
sbb
xor
xor
imul
movsb
lds
pop
lods
push
outsb
pop
stos
sub
cli
hlt
scas
add
clc
stos
jg
lods
dec
push
insb
xor
lret
lds
out
push
in
inc
pusha
leave
sti
jns
mov
xchg
lds
push
int
mov
mov
arpl
mov
loop
mov
cld
xchg
dec
aas
daa
add
test
sub
test
repz
sbb
mov
push
orb
scas
mul
test
test
mov
inc
mov
movsb
push
add
test
ficoms
mov
cli
arpl
inc
dec
hlt
std
pop
and
mov
sbb
or
xchg
flds
inc
lcall
sub
inc
pushf
in
dec
ret
ljmp
or
flds
push
cli
nop
mov
hlt
mov
int3
stos
dec
les
aam
ljmp
outsb
ja
ss
icebp
mov
daa
or
test
xchg
fistps
adc
jbe
addr16
fcmovb
lods
shlb
mov
imul
mov
mov
dec
or
in
pushf
popa
loop
push
jo
sub
popf
outsl
inc
jmp
dec
mov
pushl
loope
adc
cmpsl
push
sti
aam
jbe
push
sub
scas
test
mov
cli
test
sub
fdivrp
sub
aas
sarl
stos
les
push
inc
vmovlpd
fisttps
mov
daa
push
mov
test
mov
cmp
out
sbb
sbb
insb
adc
dec
mov
stos
repnz
int3
nop
int
je
test
push
cld
hlt
cltd
xor
sub
in
out
sub
lcall
lods
fsub
dec
mov
cmpl
lea
sbb
sbb
push
dec
add
loope
or
jl
ja
inc
ret
sbbl
in
pop
clc
and
jl
add
xchg
nop
or
mov
jne
pop
jb
es
ss
pop
mov
mov
xchg
int3
sbb
mov
pop
adc
inc
pop
iret
mov
aam
pop
std
cmp
jo
cmpsl
scas
into
jae
inc
pop
shlb
sub
push
mov
ficompl
pop
imul
dec
xor
jne
movsw
pushf
push
pop
test
dec
out
les
jno
test
dec
jp
inc
shlb
fisttpll
sub
dec
adc
and
xchg
lret
pop
cli
jg
mov
rorb
xchg
inc
mov
test
dec
stos
mov
arpl
mov
xchg
dec
and
fcmove
push
je
test
mov
mov
or
mov
iret
and
jecxz
or
xchg
jge
lds
or
loopne
mov
sbb
xchg
jb
cmp
mov
mov
out
pop
insl
fwait
pop
mov
dec
fmuls
and
jae
xchg
lods
jae
mov
inc
fsub
mov
aaa
add
xchg
jmp
dec
jo
cwtl
push
fmuls
dec
pop
jno
std
or
add
test
icebp
shrb
icebp
nop
xorb
pop
in
sub
test
clc
fldenv
xchg
inc
and
lock
imul
out
arpl
and
scas
mov
or
daa
mov
or
push
pop
in
jmp
xchg
and
jae
mov
pop
jns
and
sub
ret
push
push
and
sbb
add
mov
pop
scas
sbb
push
dec
add
push
inc
aas
cltd
xchg
mov
fnstcw
xchg
mov
cmpsl
loope
fwait
pop
das
push
sub
mov
jne
push
dec
xchg
lcall
fdivl
push
mov
mov
mov
cmp
ds
pop
test
loope
add
xor
pop
scas
pop
sub
ja
inc
movsl
test
adc
dec
xchg
pop
stos
outsb
ljmp
adc
ss
iret
jp
and
fisubs
xor
jbe
sbbl
loop
push
jp
fnstsw
xor
fldt
mov
dec
incb
aas
ja,pn
adc
lcall
xlat
mov
repz
inc
cltd
das
scas
test
adc
loope
icebp
insb
fisubrs
dec
or
cmp
dec
cltd
xchg
std
mov
stos
ss
xorl
sub
insb
mov
inc
push
hlt
inc
arpl
xor
sbb
test
pop
dec
cmp
popa
sbb
fsubp
mov
arpl
lods
xor
or
in
cmp
fistps
in
pusha
shll
adc
rcl
mov
shl
sbb
cs
stos
ficomps
adc
aad
xor
push
aam
cli
pop
xor
sub
aad
sbb
rcll
mov
sub
mov
daa
add
add
shlb
inc
and
nop
fldt
pop
ss
ja
or
xor
xlat
lds
mov
sbb
sub
inc
addr16
lcall
sbb
andb
sub
push
bound
xor
dec
ds
xchg
add
mov
push
mov
es
lea
inc
ficompl
xlat
or
data16
divb
in
pop
sbb
scas
neg
xor
sbb
sbb
je
jmp
cmpsl
mov
mov
enter
and
pop
sbb
xchg
inc
fsubrs
inc
mov
aam
ror
bound
mov
lcall
loopne
pusha
pop
into
mulb
xor
enter
cmp
sbb
inc
xchg
adc
and
inc
cld
sub
andb
loopne
test
cmp
fsubrs
mov
sub
lds
out
shll
xchg
cwtl
sahf
push
mov
push
std
sbb
adc
pop
cli
inc
inc
dec
mov
mov
add
push
cltd
into
lcall
hlt
call
inc
sub
sbb
jns
ret
pslld
xchg
bound
inc
jmp
inc
xchg
add
jno
stc
sbb
inc
test
cmp
add
jmp
and
lahf
push
push
iret
mov
mov
push
adc
pusha
mov
dec
xchg
fistps
shrl
pop
cld
cmp
xchg
popf
rcrl
out
in
and
pop
popf
xchg
sbb
jecxz
xor
clc
push
enter
lret
mull
and
repnz
sarl
mov
inc
in
pop
cmpsl
repnz
mov
xor
push
movsl
sbb
mov
outsl
dec
pop
repnz
out
lds
rorb
ret
loope
mov
jns
and
sbb
loopne
loope
xor
cwtl
flds
lea
and
cltd
movsl
scas
mov
xor
mov
mov
mov
mov
xchg
and
rcrl
push
lods
loop
loope
out
jb
jo
adc
mov
dec
mov
mov
int
push
mov
insb
cmp
xchg
mov
roll
xchg
cmp
add
fidivrl
shl
jno
dec
aas
mov
jae
daa
or
sbb
loop
mov
mov
and
fimuls
xor
inc
loope
push
popf
subl
lcall
outsb
movsl
adc
sbb
xor
aas
adcl
mov
shrb
jge
iret
push
push
push
fstl
cmp
cmp
dec
arpl
jle
out
mov
sub
pop
test
sub
cli
stos
out
outsb
jp,pn
stos
mov
cld
mov
in
es
pop
in
insb
mov
adc
idiv
mov
sub
outsb
int3
xor
jmp
lods
pop
popf
mov
xor
mov
pop
xchg
inc
ljmp
aad
adc
push
movsb
mov
fdivl
ss
sub
and
pop
or
mov
lock
sbb
popf
rorl
jno
ja
push
loopne
jb
repz
mov
popf
pushf
mov
mov
decb
pop
adc
insl
add
cmp
int
sbb
arpl
enter
inc
sahf
mov
xor
jl
jnp
mov
imul
jae
push
mov
push
sub
sahf
inc
daa
lcall
dec
fistl
mov
push
or
movsb
xchg
pop
shlb
in
pusha
mov
enter
fsubrs
jae
sti
in
cli
stos
dec
mov
mov
out
sub
sub
lcall
das
cmp
xchg
fwait
mov
adc
shll
daa
in
into
sbb
mov
xchg
ret
push
dec
popf
sbb
rorl
jecxz
sti
mov
loop
sbb
cmp
mov
test
pop
adc
lods
sbb
mov
adc
mov
mov
scas
xchg
push
into
es
xor
xor
repz
pop
shlb
lods
popf
or
sbb
sub
iret
jno
or
lcallw
mov
xchg
arpl
lds
das
xor
or
dec
ja
insl
mov
stos
sbb
sub
into
and
inc
clc
mov
loope
sbb
add
mov
mov
movsb
jno
lods
in
xor
mov
rol
mov
cwtl
jo
roll
fiaddl
popfw
or
dec
mov
scas
clc
push
push
clc
cwtl
add
repnz
out
push
int
sbbb
jl
add
xchg
xchg
mull
rcrb
pop
mov
add
test
mov
push
or
xchg
lock
push
loopne
popf
in
lea
add
sbb
push
and
js
push
xchg
jp
sbb
jno
add
inc
mov
iret
mov
stos
mov
movsb
sbbl
mov
fdivrs
imul
jnp
inc
xchg
nop
sahf
dec
xchg
lahf
xor
fwait
cs
or
fistpll
dec
out
test
ds
xchg
test
xchg
repnz
aad
fidivrl
mov
insb
pop
repz
or
testl
push
and
fstps
sahf
mov
cmp
xchg
imul
pop
push
outsl
sub
add
pop
lods
test
push
jnp
inc
add
mov
sub
iret
or
lret
pop
cmp
cld
push
or
aaa
pusha
fldt
dec
loop
xor
push
push
push
sub
inc
adc
mov
fwait
push
xchg
mov
out
ret
ljmp
push
jno
int3
mov
xor
popl
push
dec
jb
in
fstpt
cmp
sub
outsb
adc
push
mov
movsb
sub
int
test
add
popf
test
repz
push
shrb
popa
or
aas
mov
into
pop
movsl
scas
aaa
insb
popf
sti
add
cmovo
arpl
add
aad
cmp
xlat
mov
in
or
inc
shll
ficompl
test
xor
or
and
leave
aaa
lea
mov
icebp
call
push
mov
imulb
jo
in
cmp
jg
jb
lods
stos
stc
pop
sti
push
xchg
or
jg
inc
test
inc
imul
sbb
mov
fs
nop
xor
ret
jl
jle
pop
cmp
inc
jle
adc
aam
mov
test
imul
mov
push
pop
dec
jo
repz
xchg
clc
push
imul
movsl
outsb
adc
mov
mul
fisubrl
sub
push
push
popa
xchg
cmp
scas
cld
arpl
xchg
xchg
loope
jp,pt
lcall
andb
negb
push
sbb
sub
dec
xor
scas
lahf
sbb
mov
daa
in
sbb
lods
push
mov
movsb
imul
push
mov
je
rol
cmc
bound
pushf
xchg
jl
ja
scas
and
in
adc
push
push
rorl
mov
inc
push
dec
es
xchg
les
jae
lret
das
and
cmp
jns
jle
das
cld
push
mov
mov
aad
lahf
mov
cmc
inc
lods
iret
pop
xchg
mov
pusha
js
jne
movsl
jns
xchg
cmpsb
mov
aam
ret
inc
mov
psraw
out
fdivrp
mov
test
les
xor
lds
xor
push
jmp
adc
jg
mov
popf
fs
gs
loope
jbe,pn
out
dec
jae
sub
lcall
xrelease
aam
es
stos
ret
ljmp
adc
and
xchg
add
ret
mov
divl
into
cmp
pop
push
sbb
cld
adc
cmp
pusha
js
or
out
fcmovne
cmpb
popl
mov
fimuls
mov
pop
mov
stos
daa
pop
xchg
push
push
int
pop
jnp
mov
inc
clc
inc
mov
add
aad
insb
xchg
adc
xchg
fisubl
loop
dec
jnp
test
icebp
sbb
mov
and
mov
jns
lcall
mov
pop
int
insb
add
clc
cmp
test
xor
ljmp
in
sbb
cmp
inc
mov
out
fistpl
xchg
fnstsw
jle
cwtl
call
imul
jb
cmp
or
xchg
sub
outsb
repnz
mov
sub
jae
mov
dec
repz
enter
out
and
into
add
push
loopne
xor
leave
push
insl
shrl
adc
insb
es
or
xchg
pop
push
adc
mov
jp
jp
and
loopne
sub
pushf
adc
pop
push
hlt
xchg
popa
outsl
push
jno
xor
cmp
lds
popf
mov
cmpsl
repnz
lahf
lods
pop
dec
mov
jne
push
xor
aam
push
cmc
inc
mov
sarb
rcrl
lcall
lret
stos
push
push
or
cmp
pop
xor
mov
daa
bound
lahf
gs
jge
adc
rcrb
fildl
ret
dec
jg
sub
xor
push
cmc
lods
xchg
push
xchg
in
push
push
mov
adc
hlt
shrl
jno
lret
pop
xchg
loope
mov
loope
jg
std
jge
lahf
out
hlt
cs
mov
and
cmc
les
mov
les
cmp
lods
cltd
jmp
insl
int3
mov
fwait
divl
lea
inc
int3
xor
loope
add
inc
adc
fdivl
xor
lods
pop
test
roll
push
add
mov
sahf
sbb
adc
mov
lds
pusha
in
outsb
cwtl
sub
push
xchg
sahf
inc
sub
adc
aad
inc
test
addr16
aaa
mov
adc
rcrl
pop
out
insl
mov
mov
ja
pop
mov
shlb
pop
pop
cmp
dec
inc
inc
shrb
ss
pop
mov
mov
jbe
js
cmc
andl
mov
rorl
lcall
jb
pop
inc
scas
xor
pop
pop
jge
arpl
sub
xchg
push
push
fwait
cltd
adc
cmc
pop
inc
xchg
adc
mov
mov
arpl
adc
jns
adc
cwtl
std
ljmp
cmpsb
icebp
and
lahf
ja
push
cltd
mov
xchg
in
insl
imul
cltd
hlt
jae
push
lret
xchg
sbb
push
mov
ret
jnp
fwait
loopne
fistpll
test
sub
push
push
xor
fdivs
test
dec
pop
sub
or
sbb
add
mov
hlt
and
aaa
std
lea
orl
pop
pop
inc
cli
jnp
xchg
test
gs
inc
cld
jns
movsl
in
dec
addr16
jo
inc
inc
jns
dec
mov
push
mov
sbb
aaa
push
or
xor
xlat
stos
jmp
test
popa
cmpsl
and
mov
dec
and
inc
out
pusha
nop
and
dec
xchg
push
sub
or
mov
sub
enter
sub
jae
fistpll
fiaddl
mov
adc
xchg
leave
xchg
popa
xor
sti
fwait
inc
add
pop
push
or
mov
jo
push
insb
repnz
jge
inc
lcall
and
js
clc
adc
fmuls
pop
popf
inc
or
sahf
add
movsb
mov
loope
pop
sbb
cs
rcr
les
fisubrl
and
ret
and
xor
pop
out
dec
les
add
inc
pop
sbb
sbb
outsb
push
and
icebp
clc
mov
push
cltd
cmpsb
cltd
pusha
sub
imul
adcl
pop
sub
xor
pop
stc
mov
push
jno
jp
sub
or
xor
xchg
loope
enter
xchg
cmp
and
mov
lcall
mov
test
pop
std
jb
xor
jae
jns
sub
xor
xchg
mov
pop
mov
pop
fisubrl
sti
or
mov
sti
fadd
sahf
cmp
jno
mov
movsb
lock
lea
addb
lahf
inc
add
in
xchg
bound
les
lods
jl
mov
lds
negb
mov
add
jecxz
cwtl
sarl
mov
xor
fisttpl
xchg
notb
cmp
jecxz
in
xchg
outsl
lcall
lds
add
mov
dec
pop
push
lock
jbe
movsl
pop
nop
xorl
sarl
dec
add
adc
or
sbb
aad
loopw
insl
insb
mov
jecxz
in
xchg
pop
mov
xchg
dec
repz
test
in
incl
and
in
jnp
xchg
inc
fcomps
shl
andb
jmp
add
loop
xor
push
sbb
mov
sarb
mov
mov
loop
mov
push
cmp
pop
dec
insb
mov
sub
pslld
xor
stos
dec
mov
out
enter
jl
sbb
movsl
fcomps
sub
dec
and
jno
outsb
mov
jl
or
in
iret
push
pop
lods
pop
paddusb
mov
incb
mov
pop
andps
ss
stc
pop
mov
or
and
mov
jp
pop
mov
jne
xor
or
push
lcall
test
xchg
sub
add
mov
push
mov
outsl
rclb
push
popa
aas
fsubr
cld
cmc
cmp
stc
ret
sbb
aam
sbb
insb
outsb
cld
hlt
movsb
pop
and
or
in
or
aad
mov
jne
pop
fimull
inc
inc
shll
daa
pop
mov
push
orb
icebp
sbb
sbb
inc
lea
xlat
push
test
mov
dec
cltd
cmp
mov
repz
push
add
jl
cltd
aad
scas
push
clc
adc
fiadds
pop
mov
dec
clc
xchg
jnp
dec
pop
shlb
pop
repnz
dec
ret
rorl
mov
jge
std
imul
fildll
jns
cmp
enter
into
pop
jae
sbb
xchg
adc
nop
pop
cmp
lret
sbb
out
test
sbb
sub
inc
push
jl
cmp
mov
inc
mov
inc
cmp
inc
jnp
pushf
std
repnz
adc
or
jb
dec
testl
or
dec
xchg
sbb
sbb
adc
icebp
push
push
pop
aad
xchg
lahf
cwtl
addb
imul
in
shl
mov
jl
pop
add
insl
cltd
out
and
xchg
sub
pop
jmp
add
and
fstps
sar
fstps
out
add
and
push
mov
pusha
dec
inc
jae
lds
xchg
sub
adc
in
add
xchg
mov
repz
mov
inc
adc
jmp
xchg
loop
mov
mov
mov
xchg
mov
xchg
sub
je
sub
in
sbb
adc
clc
jg
aad
out
int
stos
pop
shl
pop
xor
inc
mov
inc
aaa
ss
cmp
and
dec
jbe
cmp
stos
xor
cmp
sbb
xchg
loope
movsl
sbb
mov
sbb
xor
out
jnp
adc
es
cmp
add
sbb
cltd
or
push
jge
jmp
add
adc
bound
cmp
pop
shll
adc
and
iret
cmpsb
mov
stos
int3
adc
mov
test
out
xor
xorb
sub
gs
jg
xor
add
adc
fldenv
andb
inc
sbb
filds
and
push
lea
sbb
repnz
cmpsb
adc
cmp
add
test
mov
and
fwait
loope
inc
outsl
mov
jecxz
cli
mov
jno
pushw
shrl
in
adc
jmp
mov
or
int
mov
sub
sub
pop
aad
mov
mov
jns
add
push
iret
out
cmpsl
jmp
fsubrl
adc
stos
inc
inc
shll
mov
push
int3
mov
std
add
mov
dec
fsubr
idivl
scas
in
mov
xor
jnp
aad
dec
mov
add
js
mov
loopne
push
cmpsl
in
sub
dec
cmpsb
push
adc
fs
pop
jo
loop
mov
movsb
jae
insb
int3
inc
mov
adc
sub
add
lea
popf
fisubs
sbbb
out
fdivr
or
mov
leave
lods
in
xor
sbb
inc
fdivl
sti
in
adc
pop
dec
imul
popa
fists
push
adc
icebp
jp
dec
daa
mov
sub
rclb
enter
test
sub
inc
loop
inc
cmp
int
dec
movsl
sahf
jo
fcomps
ret
sub
xor
ret
cwtd
rolb
sbb
pop
push
inc
inc
jns
sub
mov
inc
fcoml
cmp
fwait
popa
inc
jo
mov
loop
sbb
loope
aam
cmp
aad
jmp
xor
lock
rolb
xlat
and
lods
mov
mov
pop
fldenv
fisubrl
ret
inc
adc
out
roll
inc
in
pop
test
and
mov
ret
pop
rcrb
into
push
dec
scas
cli
xor
scas
mov
pop
lcall
push
scas
iret
push
push
jmp
cmp
bound
insl
xchg
sub
stc
and
insb
lahf
imul
mov
lret
and
jge
adc
icebp
pop
xor
lret
jno
hlt
aas
in
lcall
jae
xlat
lret
xor
mov
loop
mov
push
roll
sub
outsl
sbb
cmp
cmpsb
fwait
in
rcrb
into
out
dec
mov
dec
cwtl
xor
mov
jmp
jnp
out
pop
dec
xlat
jo
jg
and
sahf
dec
hlt
out
push
cmpsl
mov
or
nop
pop
or
sub
lods
xor
xor
xor
outsb
test
sbb
pop
add
and
test
loop
mov
fsubrp
push
arpl
cmc
rcl
shrl
dec
sbb
adc
jmp
fcoml
mov
sbb
fildll
iret
push
pop
push
das
pushf
mov
mov
push
mov
imul
loopne
loop
or
sbb
jb,pn
mov
adc
or
mov
adc
mov
sbb
add
push
push
push
sti
jns
add
xchg
adc
sub
mov
es
pop
in
in
in
mov
ds
and
push
aaa
xor
push
cltd
or
fsubs
test
lock
cs
lret
in
or
jge
xor
jns
shll
je
fisttps
inc
vhaddpd
pop
ret
mov
bound
mov
xchg
lahf
add
lea
xchg
fcomps
fistl
mov
dec
mulb
mov
and
test
test
pop
cmp
or
imul
cmp
jb
aas
mov
push
fstpt
push
rcrl
inc
int3
neg
adc
push
xor
add
push
loope
shr
sub
popf
jecxz
mov
in
pushf
and
test
add
xor
loop
adc
sbb
cltd
je
int
dec
sbb
nop
lods
pushf
jp
shlb
jnp
dec
push
popf
in
dec
popf
fwait
out
subb
and
add
mov
sbb
add
nopl
fistl
add
lahf
push
stc
mov
push
iret
test
jnp
pop
imul
insl
jmp
out
and
dec
and
fbld
in
lret
pop
nop
test
arpl
insl
cmp
sahf
and
lock
inc
mov
mov
xchg
aas
push
insb
sti
ds
insb
sub
clc
cmp
mov
divb
dec
mov
frstor
clc
das
mov
mov
repz
mov
leave
dec
lods
ljmp
xchg
lret
icebp
pop
push
mov
sbb
div
jecxz
popf
ds
imul
icebp
xchg
pop
outsb
std
and
mov
jns,pt
add
and
pushf
loope
mov
loop
test
mov
mov
ss
dec
movsl
imul
aaa
cmp
sbb
in
imul
fcoml
xor
jb
shrl
xor
jb
cmp
inc
dec
xchg
jecxz
add
sahf
clc
and
mov
in
jbe
hlt
test
addr16
repnz
test
pop
int
jp
pop
jns
pop
in
leave
sbbl
cmp
sbb
scas
pop
inc
pop
pop
mov
pop
sbb
in
xchg
cs
fstl
pop
and
jp
fiadds
mov
jno
sbb
sub
sub
jne
lret
stos
push
dec
movsl
cmp
adc
les
xchg
and
leave
icebp
or
fcoms
cmpsb
test
pop
cltd
call
xorl
sub
pop
xor
mov
fcoml
xchg
mov
cmp
icebp
gs
je
loope
dec
mov
clc
adc
nop
pop
lods
or
jb
aam
inc
jae
fidivs
push
fs
mov
inc
das
sbb
sub
sbb
lea
mov
out
imul
ds
xchg
xchg
out
mov
scas
dec
in
test
cmp
dec
dec
aaa
cs
pop
test
lret
hlt
sahf
sbb
out
push
push
and
adc
iret
frstor
inc
inc
movsb
mov
sahf
xchg
shlb
push
scas
inc
adc
jo
ds
and
pop
sub
mov
sbb
xor
jnp
sbb
mov
daa
clc
mov
sub
out
outsl
roll
adc
pop
daa
shll
pop
adc
icebp
testb
dec
cld
push
ss
mov
movsb
std
fnstcw
arpl
faddl
jmp
or
loop
mov
jle
jecxz
mov
dec
enter
fists
iret
pop
push
mov
push
mov
dec
push
fimuls
idivb
enter
subl
rdpmc
movsb
mov
xchg
cld
dec
arpl
or
aam
iret
into
stos
repnz
add
push
mov
adc
divl
in
or
sti
popf
inc
outsb
fadds
pop
cmpsb
or
loop
push
aad
lcall
ss
cmpsl
push
mov
call
pop
icebp
es
popf
adc
enter
adc
stc
out
rcll
cmpsb
mov
push
cmp
sbb
pushf
shlb
push
cld
and
sti
jp
dec
call
dec
cmp
nop
adcl
sub
sub
pop
aad
cmp
mov
inc
fdivrs
pop
jmp
xchg
lahf
inc
rorl
rorl
push
outsb
stc
add
fmull
lds
add
inc
mov
jge
adc
icebp
sub
sar
xchg
add
sbb
jbe
push
movsb
mov
mov
mov
and
stos
out
imul
std
arpl
add
je
shlb
mov
mov
push
push
mov
jns
cltd
jne
push
cli
xlat
xor
add
adc
idivl
xchg
stos
repnz
xor
xchg
enter
push
repz
test
xlat
mov
cmc
push
shrl
and
sbb
xor
lea
mov
lret
cmpl
xchg
rorl
xchg
inc
je
xor
into
jmp
xor
jg
dec
pop
mov
out
adc
inc
add
mov
add
movsl
or
lods
cld
jno
jl
push
call
mov
enter
add
xor
fsubrl
sbb
jnp
sub
fsubrp
pop
add
lahf
push
divb
or
shl
cmpsl
das
xor
shl
pop
dec
pop
cmc
stos
cmovnp
nop
stc
and
jecxz
sub
inc
mov
pop
out
fs
cwtl
mov
pop
daa
cltd
fcoml
xor
add
ss
jne
insb
lods
sub
clc
fs
stc
cmp
cmpb
sbb
das
jge
push
add
dec
mov
xor
bound
lea
pushl
push
sbb
cld
or
mov
frstor
adc
js
packuswb
scas
repz
pop
cmc
xlat
pop
cmc
xchg
push
jne
pop
sbb
rclb
dec
arpl
lret
inc
jmp
sti
cvtpi2ps
add
xorl
xchg
ja
es
lret
in
sbb
adc
xor
cld
mov
xchg
sbb
adcb
jns
push
das
insb
lods
int
addl
adc
dec
sbb
xor
mov
bound
movsb
test
pop
sbb
mov
ds
or
adc
lret
pop
addr16
les
clc
rclb
xchg
lahf
cmp
orb
mov
xor
add
mov
mov
rorl
or
mov
cmp
adc
xchg
jmp
push
es
push
pop
and
sti
aad
sbb
dec
and
xchg
pusha
adc
fwait
sub
push
scas
loope
mov
out
imul
jns
xchg
cmp
cmp
or
sub
in
jge
and
mov
mov
pop
hlt
test
cli
lods
lret
lret
scas
mov
pushf
pusha
xchg
ror
jmp
loop
and
andb
aaa
add
jns
mov
out
xchg
adc
ds
ss
inc
pop
in
mov
mov
or
mov
int3
sub
jo
cmp
xor
xor
push
and
jno
arpl
and
ljmp
shr
mov
ja
push
push
pop
roll
mov
xchg
adc
ja
aam
xchg
lods
adc
lret
das
call
xchg
sbb
data16
or
inc
in
sbb
push
shl
pusha
loop
mov
xchg
out
adc
and
out
push
in
jp
js
and
ja
inc
or
jg
int3
popa
fdivr
push
cmp
push
mov
je
pop
test
andb
pusha
out
sub
mov
rclb
jns
sub
enter
sbb
dec
or
mov
cmp
fdivl
pop
scas
notb
mov
jns
add
cmpsb
lahf
xchg
jne
or
sbb
scas
jle
test
mov
sub
push
stos
and
or
pop
mov
ja
test
cli
hlt
sti
xchg
push
imul
daa
fistps
imul
sbb
push
mov
mov
lahf
enter
or
xchg
andl
rcll
pop
adc
rcl
aaa
jno
or
aas
loop,pt
fisttps
or
test
push
ljmp
mov
cld
sti
cmpsb
fisttps
sub
shll
ss
icebp
mov
je
mov
in
lret
jns
fwait
xor
hlt
cmp
rcpps
xor
xor
jp
fdivrl
push
mov
fidivrs
std
lret
mov
add
mov
mov
dec
inc
pop
sub
dec
test
ficoms
fbstp
add
bswap
mov
ror
or
mov
adc
pop
lcall
cld
mov
cs
hlt
dec
xchg
leave
pop
cmp
in
jno
push
inc
and
push
and
std
inc
das
data16
scas
repz
inc
cwtl
or
or
shrb
xor
pop
aas
pop
rcr
and
pop
jbe
sub
sbb
sbb
pop
cmc
mov
das
jo
dec
arpl
push
inc
cltd
jecxz
push
popa
mov
mov
cmpsb
mov
movsl
cmp
push
je
dec
cmp
xor
push
dec
out
jae
loop
aas
xlat
and
stos
sub
mov
push
test
add
lret
push
or
lods
lcall
push
sub
subb
das
add
or
mov
xchg
and
repnz
stos
in
sbb
movsl
push
aas
lret
aad
or
out
pop
repz
ja
push
fst
mov
add
fisubrs
cltd
enter
aam
jnp
mov
push
pop
pop
pop
dec
push
notb
aaa
out
or
insl
stos
ror
dec
jno
push
fimuls
sub
pop
rorb
dec
push
out
adc
xor
cmpl
inc
xor
mov
push
hlt
fbstp
shl
fisubs
scas
adc
fimuls
xor
inc
test
mov
pop
push
adc
pushf
xchg
push
jno
repz
in
dec
push
ret
jnp
pusha
cmp
stos
xchg
jmp
fisubrs
in
stc
imul
mov
rorb
in
sub
arpl
jno
mov
jp
xchg
inc
jle
mov
fs
scas
sti
xchg
inc
and
movd
or
inc
js
and
repnz
iret
sub
sarl
imul
mov
jge
jmp
xchg
cmp
cltd
jnp
xchg
jne
xor
loope
bound
js
or
insb
xor
imul
jle
aas
jb
sbb
lock
cwtl
sub
cltd
or
jb
cli
aam
cmp
pop
rcl
es
push
push
pop
call
imul
sub
loope
cld
push
out
test
xlat
setne
mov
scas
xorl
icebp
add
es
nop
stos
gs
sub
xchg
cld
jns
inc
push
inc
dec
cmp
xor
mov
pop
mov
jge
xor
sbb
jecxz
dec
cwtl
inc
lods
nop
insb
mov
pop
adc
jns
xor
sbb
cmc
dec
dec
cmp
jge
cmp
jno
imul
sub
add
sub
stc
pop
es
lcall
stos
les
mov
adc
mov
xchg
ret
adc
jb
sub
sahf
or
fildll
and
pop
imul
rcl
cmp
test
jb
xor
scas
dec
dec
shl
dec
mov
rcl
push
mov
loope
addr16
sbb
lods
arpl
add
imul
mov
mov
stc
out
data16
pushf
lahf
mov
es
or
sbb
pop
and
mov
sbb
movsl
push
aas
or
mov
imul
daa
dec
mov
iret
int
push
mov
xorb
shrb
les
xchg
dec
mov
jae
push
movsb
sbb
pop
lcall
lret
dec
sub
xchg
sub
jp
or
jmp
add
int
adc
xchg
test
repz
push
mov
lods
pop
fdivrp
rolb
push
mov
dec
fcoml
pop
mov
jle
ficoml
cmc
mov
push
sub
add
inc
shrl
mov
sub
call
addb
inc
and
test
adc
and
movsl
and
or
xor
pushf
inc
dec
fisubrl
jne
into
jge
mov
cmp
mov
jge
lods
test
mov
pop
mov
cmp
rorb
cld
sub
call
push
loopne
mov
das
mov
mov
div
cmp
jp
nop
out
adc
adcl
imul
enter
into
xchg
cmpsb
push
scas
push
jg
mov
rcrb
pop
mov
dec
push
lret
int3
scas
or
xor
dec
imul
cmpsl
jb
fdivs
mov
nop
insl
mov
xor
adc
mov
mov
or
into
mov
out
lods
popf
pop
mov
movsb
lods
das
pop
insl
ds
sub
and
outsl
loope
pop
xchg
push
call
outsl
cmpsl
or
push
and
xor
nop
mov
sub
pop
repz
addr16
pop
jp
mov
call
xchg
xor
xchg
sbbb
mov
mov
rorb
cmp
mov
mov
loop
pop
loope
ret
mov
push
dec
pop
in
cmp
or
add
loop
mov
outsb
inc
cmp
fimull
adc
decl
lahf
add
mov
cmp
imul
add
add
hlt
es
pop
mov
shll
cmpsb
cwtl
outsl
cltd
cmp
push
je
ja
loopne
cli
inc
lods
movsb
addr16
xchg
and
enter
in
roll
cld
adc
aam
cltd
dec
sub
out
dec
fldl
inc
inc
sbb
addb
or
adc
sti
sub
ret
push
fisttpl
dec
adc
dec
add
jmp
sub
stos
pop
jg
loopne
push
call
cmpsb
imul
inc
pushf
clc
sub
sahf
cmp
outsl
mov
sub
jge
xor
iret
mov
dec
in
xor
sub
xor
mov
fwait
mov
ja
lods
dec
outsb
imul
ljmp
cld
roll
leave
movl
inc
push
xor
jns
pop
xlat
insl
xchg
cmp
mov
push
sbbb
mov
jp
xor
pop
jne
cs
pusha
sub
jnp
cmp
fnsave
clc
rcrb
sub
dec
lea
pushf
int3
movsb
add
loop
jmp
xor
jle
dec
xchg
pop
add
repz
aaa
cmp
add
pop
sbb
jnp
pop
into
scas
into
repnz
in
minps
fnstsw
in
and
jnp
push
stc
repz
out
jge
add
mov
stos
jae
cmpb
cmc
cmp
jno
sbb
mov
or
in
mov
sbb
and
xor
femms
cld
mov
and
jns
lret
mov
int3
lods
pop
dec
mov
or
or
aad
xchg
push
xchg
push
xchg
jl
int3
shlb
in
insl
xor
in
data16
repnz
test
jne
xor
xchg
pop
dec
pusha
xchg
cmpsl
sub
lods
cmp
gs
sarb
dec
in
mov
shlb
hlt
jp
sti
push
and
ljmp
dec
add
adc
loope
adc
repz
pop
aas
loop
dec
add
inc
cmpb
push
xchg
xchg
popf
add
and
fwait
push
pop
xor
test
pop
mov
xchg
and
mov
xchg
lds
push
adc
jb
jb
pop
adc
bound
shlb
pop
por
shll
test
popa
cld
adc
int
sbb
jp
add
inc
mov
jecxz
fidivrs
xchg
adc
sub
xor
test
sub
popf
pushf
daa
std
add
jmp
es
mov
aas
sbb
lret
cs
jne
js
sbb
fcmovnu
cmpsb
lret
dec
inc
and
mov
cld
mov
mov
mov
lds
jne
xchg
push
sub
and
mov
lret
xlat
jle
dec
push
cmc
cmp
bound
mov
push
jns
pop
mul
int3
das
sbb
push
inc
stc
es
fstl
cmp
mov
in
cmp
cmp
push
add
xlat
fnstcw
or
lret
inc
js
push
les
fldl
sub
inc
xor
cmp
dec
add
inc
out
push
cltd
pushf
fwait
nop
fists
dec
cmp
fwait
push
cmpsb
repz
jnp
iret
aad
mov
mov
addr16
test
jmp
sahf
cmpsb
sbb
call
sarb
push
out
dec
mov
sti
ret
adc
mov
xor
iret
pushf
jg
mov
mov
out
sub
jg
orb
lahf
ljmp
push
insl
scas
sarb
jmp
lods
aas
add
push
stos
mov
sbb
pop
enter
pop
mov
lods
push
mov
sbbl
push
lds
lock
movsl
fcoml
push
fsts
dec
sub
push
add
pop
mov
pop
outsb
dec
xor
data16
outsb
addr16
stc
pop
push
mov
mov
ljmp
jnp
push
int
negb
push
xchg
data16
icebp
dec
es
fs
lahf
xor
mov
add
adc
adc
xor
mov
jmp
mov
in
enter
test
or
and
pop
js
aaa
lds
push
movsb
sahf
cmp
xlat
push
aad
out
lcall
int
pop
ljmp
adc
aad
xchg
mov
mov
or
je
js
popa
faddl
gs
test
add
popf
push
xlat
push
sub
xchg
add
dec
xchg
imul
sub
notb
clc
imul
inc
clc
popa
pushf
push
cwtl
mov
movsb
div
loop
push
jbe
mov
and
clc
outsb
mov
xor
scas
fstl
lret
test
sub
mov
andb
out
mov
xchg
push
jmp
xchg
pop
sub
xchg
movsb
das
inc
fsubl
fwait
push
xchg
fcmovnu
dec
fists
daa
sti
sahf
mov
mov
or
lods
cmp
push
fsts
sub
aas
adc
inc
ret
push
and
loop
adc
sub
fmuls
sbb
mov
push
xchg
push
xchg
ja
mov
mov
jmp
test
call
into
adc
testl
cmp
bound
sbb
bound
xchg
sti
int
leave
enter
sub
inc
jl
int3
mov
lahf
das
xor
cmc
push
xchg
lock
imul
pop
pop
mov
xchg
xor
repz
movsl
in
and
test
add
jmp
test
xchg
cmp
xlat
fwait
mov
lds
fldt
mov
nop
mov
cmc
mov
faddp
pop
jle
jb
inc
lret
js
pop
pop
add
and
xchg
scas
sub
js
cmp
pavgb
mov
imul
stos
gs
cmp
lret
dec
xchg
fmull
leave
sbbl
xchg
adc
xchg
out
dec
add
xchg
sbb
test
jecxz
sub
and
pop
inc
lds
decl
xlat
dec
cltd
mov
call
push
jno
dec
sarb
inc
shl
leave
incl
add
xor
push
bnd
lret
mov
in
ds
pop
or
mov
xor
or
dec
int
dec
pop
out
adc
sub
add
push
mov
fs
jg
loope
lahf
add
mov
dec
rcll
mov
in
and
aas
sarb
dec
adc
addb
mov
jnp
mov
sub
shlb
xchg
fs
add
jbe
xchg
push
dec
sti
ljmp
stos
jne
adc
pop
push
add
xor
insb
in
inc
adc
test
sub
mov
fldcw
add
aaa
xor
ja
and
mov
add
mov
fisubl
mov
jg
or
aaa
sub
fs
jecxz
or
test
gs
dec
sbb
adc
clc
aad
bound
add
lahf
ffreep
pop
fildl
cmp
inc
out
hlt
cmpsl
fmull
adcb
fisttpl
sti
test
stos
sbb
leave
leave
dec
aaa
jmp
or
pop
mov
loop
adc
pop
sbb
fsubp
mov
inc
push
lods
aad
and
jnp
inc
int
jg
bound
outsb
test
push
mov
fcmovnu
fisubl
ss
mov
push
popa
fistps
sbb
and
xchg
out
sub
push
negb
sti
stos
push
and
inc
lods
popf
jne
jmp
mov
lret
sti
into
xor
int
pop
repz
gs
hlt
fwait
lahf
dec
lret
pusha
jg
roll
jo
dec
add
fidivl
xchg
sbb
jge
daa
es
pop
pop
fnstcw
and
outsl
das
popl
imul
mov
mov
jp
mov
aam
mov
mov
and
loopne
jge
cld
enter
jb
mov
addb
add
mov
out
adc
push
je
mov
jno
bound
lock
push
inc
sub
sub
int
and
add
sbbl
lahf
lcall
push
aam
mov
jmp
cmc
mov
scas
add
std
jg
mov
fs
pop
mov
and
cmp
mov
xchg
mov
cli
and
cmp
ss
fbstp
fisubl
sarl
xchg
insb
ljmp
dec
inc
int3
mov
xchg
or
mov
leave
pop
sub
dec
xor
jno
inc
jecxz
cmp
add
test
lahf
movl
pop
mov
mov
add
or
mov
inc
xor
mov
dec
in
dec
pop
fadds
sbb
shll
mov
adc
push
iret
mov
cmp
aam
daa
push
mov
movsl
je
sbb
fs
cld
clc
jns
fisubs
push
push
mov
xor
mov
mov
je
xchg
inc
jg
push
cmp
in
rclb
mov
xchg
insl
push
push
cmp
mov
rcrb
cld
loop
adc
sbb
pop
xchg
iret
sub
mov
ret
nop
ds
hlt
dec
ja
int
cld
fwait
or
jmp
and
pop
or
dec
movsl
sahf
negb
cmpsb
or
movsb
in
lret
mov
push
jecxz
int3
mov
push
lcall
fwait
je
jg
shl
or
lock
mov
push
ret
pop
and
or
adc
clc
stos
imul
dec
push
pusha
stc
xchg
mov
out
idivl
mov
xchg
cltd
sub
dec
ljmp
movsb
mov
icebp
add
rol
mov
push
fdiv
mov
stos
enter
mov
fildl
mov
popa
daa
scas
or
out
outsl
dec
cmpsb
idivb
pop
jp
push
mov
mov
xchg
cmpsl
popa
or
pop
and
cmp
aam
icebp
pop
aad
push
mov
aaa
mov
dec
adc
push
cmpsl
call
add
pop
jmp
xchg
mov
inc
in
pop
imul
jno
mov
push
mov
xor
scas
adc
std
inc
cwtl
movsb
dec
aam
rorb
adc
inc
jb
mov
int
push
dec
and
mov
mov
mov
dec
jbe
leave
inc
pop
shlb
lds
jecxz
gs
test
xchg
xor
int
scas
dec
stos
cmpsb
jne
jl
idivb
sub
ret
lods
lcall
sub
xor
js
jmp
arpl
data16
mov
pop
add
sub
stos
xor
adc
scas
sub
je
sti
es
xchg
mov
insl
inc
insb
push
xor
pop
pop
mov
inc
neg
mov
adc
fstp
sbb
sar
cmpsb
jmp
xlat
dec
cmp
ficompl
cmpsl
inc
shufps
cli
and
shl
sbb
je
xor
push
cmp
cwtl
or
rcll
xor
comiss
push
and
into
add
sahf
push
jns
fisttpl
std
push
and
and
sbb
in
mov
cld
pop
icebp
lcall
push
mov
aas
stos
add
sets
push
cli
into
xchg
xchg
sub
shrb
xor
add
loopne
stos
push
inc
in
pop
insl
push
mov
or
mov
mov
loop
cltd
mov
popf
repnz
cmp
xchg
pop
mov
decb
ss
out
inc
insl
push
fnstcw
inc
or
sbb
cli
cmpsb
iret
jns
pop
lcall
xchg
nop
sub
aad
dec
or
scas
or
xchg
adc
cmpsl
icebp
dec
dec
je
jnp
cmp
or
jmp
outsb
xor
push
inc
jle
fistps
int3
iret
and
inc
mov
pop
testb
pop
in
inc
cmp
daa
out
addr16
cmp
cmp
sbb
sbb
ljmp
test
outsb
ror
fists
into
pop
mov
lods
sub
pop
mov
or
push
xchg
movsl
movd
add
sbb
mov
sbb
push
je
jge
lcall
insb
mov
or
push
add
cmp
cli
sub
arpl
cli
adc
pop
push
mov
jmp
into
or
call
mov
jmp
ja
shr
or
rdtsc
rclb
cmc
inc
js
loop
xor
push
addr16
ss
testl
mov
incl
xor
xor
and
adc
hlt
loope
jns
pop
dec
mov
ja
jno
mov
mov
add
jbe
sub
fucomp
pop
loop
lret
test
imul
pop
mov
mov
jno
push
jb
xchg
add
add
push
into
lods
cli
mov
mov
popa
or
mov
xchg
push
pusha
std
imul
mov
jne
lods
jne
leave
clc
lcall
ja
fisubrl
rcl
sahf
imul
dec
jnp
sbb
popf
jle
stos
int
add
mov
push
inc
mov
xor
push
shrb
shrl
popf
mov
jnp
push
pop
test
mov
popf
ljmp
stos
cld
inc
mov
mov
xor
pop
dec
mov
test
les
cmp
outsl
push
or
sub
pop
cwtl
mov
mov
int
and
aam
mov
mov
dec
jmp
inc
jg
nop
mov
sub
lods
add
pushf
pop
adc
nop
mov
in
and
jbe
add
lea
pop
mov
xchg
cmp
ret
out
xchg
adc
jmp
frstor
cmpsl
cmpsl
or
mov
and
push
xor
inc
cltd
cmc
popa
in
lahf
cmp
dec
out
sar
jns
out
cltd
pushf
stc
xchg
lods
mov
js
and
cmpsl
popf
xchg
sti
in
push
adc
in
icebp
cmp
jo
loopne
divb
sub
je
pushf
pop
in
fnstsw
nop
les
cmp
or
pop
xor
pop
xor
dec
add
jb
aad
cs
test
pop
push
mov
mov
cmp
xlat
adc
dec
pop
sbb
lret
adc
test
sbb
inc
push
cmpsb
adc
rol
stos
fdivrp
mov
repnz
aas
loope
cmp
les
dec
lret
in
jnp
and
inc
jbe
lea
mov
mov
xor
mov
jne
ljmp
ja
data16
lods
xchg
jae
adc
inc
xor
push
add
add
test
xor
mov
cld
mov
ljmp
test
sub
jmp
mov
cmc
push
in
js
movsb
lods
lcall
popf
ja
fisubs
mov
ljmp
lock
mov
xchg
sahf
outsl
pop
fdivrl
xlat
xlat
lods
add
push
mov
sub
xor
bound
push
cmp
adc
xor
dec
add
cmpsb
xchg
test
in
outsb
fs
fistps
cmp
nop
xchg
cmpsb
adc
xor
in
add
sarb
jecxz
sbbb
imul
lret
cltd
cwtl
mov
jb
and
adc
sti
sub
ljmp
inc
sti
dec
fisttpl
fists
in
add
push
in
jge
movaps
cmp
add
lock
sbb
push
fcoms
stc
inc
lahf
jle
sarl
pusha
pop
in
test
push
mov
ret
add
inc
mov
out
push
xlat
cwtl
shrb
xorl
mov
lcall
push
das
mov
jbe
sbb
js
rol
fisttps
xchg
push
lcall
pop
and
stos
mov
cmp
push
sub
mov
and
pop
popa
mov
inc
xor
jg
pop
jg
fldenv
mulb
push
fwait
dec
inc
out
xor
and
mov
ret
cmp
dec
shll
pop
sbb
or
lods
inc
mov
mov
in
jno
outsl
popf
subl
push
adcl
test
adc
pop
fsts
or
push
push
mov
fisubrs
not
jge
movsb
sete
jp
mov
or
scas
pop
pop
add
jnp
mov
jb
cld
imul
cld
aad
or
mov
sbb
stc
outsl
push
pop
inc
out
inc
ror
aas
hlt
loope
jmp
lds
mov
mov
push
xor
pop
out
jle
loop
fsubl
mov
stos
scas
leave
in
js
dec
or
pop
imul
push
lahf
clc
fs
mov
jns
in
or
andb
dec
jle
xchg
mov
pop
adc
or
jns
sbb
dec
lods
lcall
icebp
pop
icebp
add
aaa
fwait
adc
cmc
cmp
xchg
mov
push
test
and
outsl
popa
pop
lret
cwtd
fisttpl
add
sub
neg
push
and
sub
sub
stc
lcall
sbb
jp
stc
and
lcall
sbb
mov
dec
jmp
in
xchg
or
pop
mov
pop
mov
ljmp
jl
lea
add
inc
or
and
loop
lock
mov
mov
aaa
xchg
cli
btc
daa
push
aad
je
fwait
aad
lret
jb
jecxz
stc
mov
add
scas
insl
or
lret
sbb
dec
dec
in
push
nop
repz
insl
xchg
je
test
mov
sbb
adc
ljmp
xorl
pushf
xchg
pop
lahf
inc
divb
repnz
inc
adc
jecxz
mov
mov
or
cmp
xchg
das
cmp
popf
and
adc
mov
js
push
pop
inc
push
and
pop
stos
mov
mov
out
mov
mov
mov
dec
jo
push
push
add
mov
ds
xor
inc
jbe
mov
shlb
mov
jae
jg
lret
push
pop
andb
and
adc
add
mov
and
mov
mov
loop
test
sti
pop
ja
push
push
and
push
loop
jb
fsubrs
push
jge
lds
push
mov
lret
cmp
test
mov
adc
adc
outsl
into
inc
inc
jmp
pushl
ror
arpl
fistl
test
icebp
mov
xor
mov
lea
xchg
outsl
sti
ret
rorb
lds
or
out
mov
xchg
dec
addr16
mov
test
push
int
jne
gs
fsubl
xchg
xchg
fdiv
mov
sub
jle
dec
pop
sub
ss
push
mov
je
sbb
adc
inc
or
inc
in
ret
mov
xchg
pusha
mov
adc
cmpsb
iret
std
pop
inc
stos
sbb
mov
in
push
shl
in
pop
or
and
movsl
xchg
pushf
scas
sbb
int3
dec
add
or
inc
sbb
mov
sahf
adc
stos
gs
test
sahf
push
popf
push
sahf
in
ds
call
xchg
mov
arpl
push
es
in
notl
push
push
aas
and
jae
pop
mov
ja
inc
cmpsl
pop
nop
jb
inc
jg
inc
js
testb
pop
xorl
imul
xchg
out
push
push
jecxz
sub
mov
lods
dec
sbbb
pushf
jno
in
fdivs
xchg
xorl
test
orb
xchg
daa
imul
mov
adc
pop
int
mov
out
push
into
out
data16
cmpsl
dec
push
loope
mov
and
xchg
jl
jle
rcl
pop
or
es
mov
inc
mulb
fnstsw
push
add
fsubrl
lret
mov
mov
inc
cs
rcll
cli
cmc
mov
mov
fwait
and
cmp
mov
inc
or
outsb
pop
cmc
and
mov
jnp
repnz
ja
nop
push
call
or
fildl
sti
xchg
pusha
ja
xchg
sbb
jns
push
jno
std
imul
loope
sbb
jg
into
jl
imul
in
scas
mov
pop
or
push
lahf
cltd
mov
mov
fildll
cmp
inc
mov
and
push
ret
pop
lods
and
pop
mov
sbb
and
pop
cmpsl
mov
sbb
xchg
jle
stos
outsb
pop
xchg
push
test
xchg
pop
nop
push
in
movsb
scas
xchg
xlat
and
repnz
xchg
mov
cmpl
mov
push
adc
mov
loop
sarb
adc
inc
into
mov
jo
add
cmp
push
sbb
jae
int3
pop
xchg
adc
jne
inc
or
jmp
mov
add
psubusb
inc
xchg
jle
pop
dec
mov
jne
in
aaa
rolb
cmpsb
daa
pop
push
lret
insb
cs
mov
and
lcall
add
scas
cmpsl
ror
addb
pop
imul
adc
inc
add
test
xlat
add
push
cmp
lock
adc
xorl
jns
outsl
jnp
rcrb
rol
cltd
pusha
jnp
inc
arpl
pmaxub
imul
and
dec
ror
sub
or
fwait
dec
jl
jl
icebp
push
int3
out
in
das
bound
cmp
add
xchg
out
scas
lret
inc
mov
scas
inc
aad
jp
lods
cmc
cltd
movsl
lahf
insb
leave
xlat
inc
dec
sbb
push
das
mov
setp
fcoml
sub
mov
or
stos
in
add
mov
out
ret
int3
or
sbb
xlat
jg
div
stc
fmull
daa
pop
arpl
hlt
imul
test
nop
dec
inc
pop
into
and
push
mov
xchg
xor
push
push
cmp
mov
xchg
xor
jne
and
mov
iret
jnp
int3
std
aaa
rorb
hlt
imul
inc
dec
icebp
sbb
movsb
or
cld
lret
mov
fimuls
mov
xor
inc
int3
mov
and
fcmovnbe
in
mov
out
and
imul
cmp
adc
scas
pop
cmpsb
sbb
jecxz
cmp
stos
lret
je
sub
ss
sub
or
mov
adc
outsb
and
add
into
adc
aas
xlat
sub
hlt
cwtl
jmp
inc
mov
es
in
pop
jne
fdivs
jae
cmp
xchg
pop
adc
out
dec
jbe
fldenv
add
sahf
lcall
mov
cmovne
fcmovnu
or
sbb
and
cltd
mov
pop
fists
addr16
mov
rcr
call
inc
test
cmp
lods
cmp
jb
out
gs
mov
mov
loopne
outsb
cs
adc
jg
dec
push
stos
xchg
jge
push
jnp
mov
inc
rcrl
xchg
dec
xchg
out
sub
mov
push
sub
inc
es
ljmp
fstps
add
ds
xchg
xchg
fdiv
push
pop
das
push
mov
adc
outsb
test
pushf
fdivs
xor
pop
cld
cmp
adc
gs
stc
xchg
adc
jno
adc
push
add
lea
movsb
push
aad
out
inc
mov
shll
adc
clc
in
and
stos
xchg
iret
adc
nop
or
andl
es
cmpsb
outsb
dec
mov
push
push
insb
jbe
les
push
xor
jge
rcrl
or
clc
pop
jnp
aas
pusha
sbb
xor
adc
add
test
iret
sbb
jb
repnz
dec
mov
pop
inc
rorl
sub
jae
outsl
inc
lahf
adc
imul
and
aam
lret
cli
dec
add
push
cs
in
pop
jns
out
lock
and
push
loopne
cmpsl
decl
mov
scas
outsb
or
mov
mov
jns
test
scas
dec
in
loopne
push
push
inc
and
mov
add
cld
mov
xchg
or
mov
sub
inc
lea
add
iret
sub
xchg
icebp
mov
lret
mov
fidivrs
pop
jo
pop
xchg
sub
rclb
pop
stos
out
or
pop
jnp
sub
mov
xchg
fbld
mov
adc
rcll
adc
dec
addl
cmp
faddl
mov
popa
cmp
bound
xor
mov
les
sub
pop
inc
sbb
or
xchg
xchg
pop
sbbl
dec
push
add
xchg
jno
inc
pop
and
push
pushf
jg
int
xchg
subb
mov
fildll
xchg
imul
fs
into
stc
lcall
push
fwait
lods
into
and
xchg
sbb
arpl
xlat
out
mov
cltd
dec
adc
scas
adc
jl
push
aaa
jmp
inc
mov
mov
dec
scas
push
mov
lahf
adc
pusha
jg
dec
movb
pop
xchg
fdivs
jmp
shrb
fisttpl
fidivl
ss
cwtl
mov
ret
icebp
scas
xchg
inc
mov
fmuls
xchg
sahf
cld
aad
rclb
xchg
mov
mov
jmp
sbb
pop
cs
enter
mov
dec
out
pushf
das
pop
xchg
mov
pushf
inc
sub
cmp
outsb
leave
ret
ss
jnp
adc
push
push
add
and
jnp
out
aas
mov
push
sbb
ret
push
sbb
mov
and
mov
sub
cmp
or
mov
xchg
lea
insl
fists
addl
jecxz
adc
jo
dec
ljmp
aaa
iret
rclb
dec
xor
dec
mov
arpl
sub
or
test
or
xchg
std
aam
pop
rcrl
fcom
dec
jne
movsb
cmp
sbb
and
int3
jmp
ja
insb
inc
movsb
or
or
push
shlb
sti
stos
enter
bnd
xor
dec
push
mov
inc
or
stos
inc
cli
fs
scas
push
sbb
sar
jb
inc
testb
scas
add
jnp
cmp
je
xchg
test
faddl
push
xor
hlt
pop
aaa
sub
mov
add
mov
clc
inc
and
jmp
mov
mov
xchg
subb
push
shlb
add
sarb
fwait
hlt
outsl
pop
sahf
xchg
xor
xchg
fcompl
ret
cld
clc
lret
cmp
adc
stos
cmp
push
push
xor
push
cmpl
in
in
test
mov
sub
push
xchg
fs
pop
out
shlb
test
mov
out
push
das
xchg
pushf
mov
daa
icebp
mov
mov
rolb
in
out
xchg
push
mov
cmp
fsubl
ss
out
sub
adc
cmpsb
and
fcompl
xchg
add
xchg
jo
xchg
mov
inc
or
ja
cmp
outsb
lods
inc
mov
push
adc
out
adc
cmp
or
enter
push
dec
push
add
enter
sub
inc
arpl
pop
push
pusha
inc
addr16
andb
dec
ret
loop
and
jbe
loope
and
inc
dec
aas
imul
cwtl
ds
lret
or
cmpsl
test
cld
test
mov
jbe
addr16
fsub
repz
or
mov
pop
sbb
push
fucomip
cmc
and
jmp
dec
inc
outsb
add
inc
push
outsb
idiv
js
in
imul
in
xchg
outsb
xorl
mov
or
xor
scas
scas
xorb
daa
imul
into
ret
ret
xor
fists
push
test
jl
hlt
aas
cmp
pop
mov
jnp
repnz
mov
sahf
mov
cmp
pop
lds
xchg
mov
arpl
sub
hlt
and
mov
imul
insl
jns
adcb
fidivrs
bnd
int3
mov
aad
sub
dec
adc
test
inc
loopne
jnp
sti
pop
iret
xchg
aaa
xor
mov
pop
lahf
leave
orb
shlb
mov
sbb
xor
xchg
dec
test
jne
rclb
jge
mov
pop
and
pop
push
imul
fisubs
icebp
cltd
test
mov
pop
out
mov
aad
sarl
mov
cmp
aaa
fcmovb
sbb
sbb
idiv
out
shrb
inc
sub
fildll
stos
and
mov
xchg
add
jno
dec
ljmp
mov
ss
push
mov
dec
or
pop
int
push
xchg
or
insl
inc
sbb
dec
stc
lcall
dec
stc
or
jns
sarl
inc
sub
sbb
ret
xchg
pop
pop
and
and
pop
iret
and
loope
cmpl
mov
in
mov
xchg
jae
test
popa
sub
je
prefetch
jno
inc
loop
push
es
lods
inc
sbb
jp
jbe
fstpt
or
mov
loop
dec
stos
jle
rcrl
sbb
mov
mov
xor
xchg
ret
lds
test
je
dec
add
fsubs
call
shrb
test
xchg
call
xor
scas
pop
loop
icebp
in
push
and
lahf
pusha
std
dec
jge
sbb
pop
outsb
xchg
dec
cmp
xchg
cmpsb
mov
test
mov
push
aam
dec
std
fxsave
jecxz
fldt
nopl
outsb
push
mov
jb
in
fidivrl
in
cmp
insb
push
push
fistpl
xlat
stos
repz
pop
gs
jp
inc
rcl
xchg
pop
nop
or
in
in
jo
xorl
hlt
jb
pusha
jle
adc
ss
subl
adcl
mov
out
stos
xchg
popf
jne
test
out
pop
dec
jbe
dec
mov
jg
cmp
pop
dec
pushf
daa
outsb
inc
lret
push
ret
cmp
pushf
hlt
xchg
repnz
in
mov
cmp
fwait
out
mov
sub
daa
movlps
in
dec
mov
stc
sbb
dec
mov
rcll
out
std
je
sbb
imul
inc
movsb
fmuls
pop
insl
add
and
mov
loopne
cmp
mov
mov
scas
inc
fistpl
push
fiaddl
fsub
ja
cmp
rcrb
jns
jb
pop
es
into
jge
jge
xchg
jae
add
popa
fs
cwtl
lea
mov
jmp
outsl
jl
jns
stos
or
mov
cmpl
aam
lods
repz
xor
test
push
push
aaa
or
loopne
xor
icebp
or
imul
hlt
aam
gs
xor
push
add
push
xchg
dec
xchg
adc
ret
loop
ficoms
xor
js
dec
xor
mov
xchg
fists
mov
lock
mov
dec
lahf
jns
rol
sbb
mov
mov
data16
loop
push
leave
pop
jne
fisttps
je
ds
or
and
and
xchg
hlt
ret
movaps
test
out
push
jecxz
mov
fisttpl
out
mov
mov
sub
loope
lds
adc
inc
jle
adc
in
dec
pop
adc
mov
scas
test
and
cmp
mov
popa
pop
js
add
sti
adc
mov
mov
xor
dec
insb
test
and
sbb
mov
or
cmp
cmpsb
test
xchg
jle
cwtl
pop
movb
test
data16
inc
cld
xor
dec
repz
dec
sbb
xor
rcr
fwait
pop
sub
jns
in
cli
adc
and
aaa
pop
aas
jo
cltd
nop
sub
pop
mulb
lds
call
lods
mov
push
xchg
pusha
test
ret
lds
sbb
aas
inc
mov
pop
xchg
sbb
fldenv
aas
jb
jg
data16
nop
lods
sub
fstps
ljmp
cs
ljmp
cltd
jmp
jge
mov
cwtl
shl
lods
jge
or
and
mov
or
mov
test
sbb
call
dec
inc
addr16
and
fabs
xchg
sub
mov
pop
iret
popf
sti
data16
popa
push
fcomps
pop
inc
and
mov
loop
rcr
add
mov
xchg
leave
test
cmovns
jp
cltd
pop
pop
loopne
popa
lret
xchg
sbb
das
and
jl
lahf
insb
insl
aam
push
fldl
pop
pop
das
xor
es
inc
cs
cmp
ljmp
lret
mov
jge
mov
nop
icebp
mov
addr16
sub
fstps
sub
enter
loopne
jo
stos
pop
sub
mov
mov
jecxz
ret
fstpt
aas
int
jecxz
movb
pusha
bound
roll
cs
cmp
ja
loope
out
and
xchg
sti
mov
mov
rclb
xchg
pushf
cmp
cmpsl
sbb
mov
or
or
dec
pop
inc
sarl
and
pop
sub
rorl
and
cmp
adc
xchg
fidivrs
cmp
jo
lret
hlt
adc
pop
and
sub
data16
sti
push
jne
pop
es
ret
mov
inc
xorb
mov
push
hlt
arpl
adc
ror
outsl
sub
mov
pop
movsl
push
fmulp
jbe
in
dec
arpl
xor
shlb
lcall
shlb
pop
inc
sbb
inc
or
xchg
stc
not
sahf
outsl
xchg
shl
pop
leave
inc
inc
push
pop
jnp
inc
bound
mov
mov
jl
jne
pop
xor
adc
fs
pop
mov
or
and
dec
dec
addl
jae
push
mov
fwait
adc
jecxz
jae
add
loop
or
mov
dec
popf
ret
out
mov
ljmp
xor
mov
jmp
daa
mov
sub
outsl
scas
mov
cmpsl
cmpsb
dec
and
mov
push
lea
in
push
pop
jg
incl
cli
shlb
xor
pop
xchg
bound
add
and
fsubs
ss
adc
xchg
mov
sub
lods
pop
test
cmp
mov
lock
xchg
mov
xchg
fnstenv
lret
and
xchg
mov
jb
cltd
inc
push
fmuls
cmp
mov
inc
jge
in
jmp
insb
nop
int3
hlt
pushf
enter
enter
cmpsl
cmpl
cmpsl
lret
cmc
repnz
mov
push
mov
mov
sub
sub
pop
lods
inc
xchg
repz
xchg
dec
jmp
mov
outsb
cmp
pushf
sub
sbb
push
cmc
clc
popf
sbb
mov
mov
repnz
jle
mov
popf
adc
aas
mov
push
xchg
adc
ud2
ljmp
or
and
stos
mov
cmp
pop
dec
cs
mov
mov
adc
test
pop
mov
in
jo
test
xchg
xchg
mov
push
arpl
popa
and
je
std
add
add
mov
test
or
jae
ret
movsl
jle
jp
xchg
ret
lods
repz
push
lret
mov
fstps
clc
add
popf
repnz
adc
dec
mov
rclb
fstl
inc
pushf
vpsubd
decb
mov
xchg
mov
sbb
push
daa
repz
push
jmp
jb
adc
or
repz
cwtl
cmp
jge
test
mov
scas
xchg
push
loopne
fistpll
sbb
pop
mov
sub
ficompl
xorl
rcr
fisubrl
jb
fimuls
dec
add
sub
xchg
pop
mov
test
insl
jbe
insb
cmp
push
insb
into
popf
pop
cmc
adc
sbb
imul
push
push
fyl2x
leave
scas
pop
negl
leave
ret
xchg
xor
jbe
std
push
sarb
mov
loop
push
sarb
test
repnz
lea
adc
xchg
xor
inc
xor
mov
or
cmpsl
loop
xor
ja
sbb
test
aad
rcr
push
hlt
mov
jge
pop
fcmovnb
lods
test
pop
aas
push
in
hlt
jb
pop
jae
fmull
cmp
adc
pop
dec
bound
add
mov
pop
or
mov
scas
in
push
mov
and
jns
fwait
pop
into
xlat
mov
sbb
mov
pop
test
push
int
daa
and
pop
mov
aaa
in
lret
mov
mov
and
add
movsl
movsl
aam
jg
fldl
call
lods
jnp
imul
push
call
jg
inc
repz
rcr
call
sub
test
mov
push
stos
xchg
xchg
adc
mov
or
xor
sub
pop
sub
pop
sbb
lods
cmp
sub
inc
xchg
or
push
or
bound
jl
jmp
xor
cwtl
push
sbb
sbb
aad
push
cltd
pushf
pop
int
movsl
shl
into
adc
nop
dec
loope
popf
pop
imul
push
pop
dec
mov
insb
fistps
adc
mov
push
outsb
pop
stc
pushf
jbe
stos
into
enter
ljmp
mov
sbb
add
xlat
or
mov
push
hlt
enter
dec
icebp
xchg
movsl
push
daa
jl
outsb
cmp
int3
adc
lret
add
dec
test
mov
shlb
daa
mov
add
imul
popf
jl
lcall
add
daa
sub
shrb
dec
dec
and
add
dec
sbb
mov
dec
incl
data16
aam
test
add
jle
xchg
std
push
imul
fbstp
cs
mov
or
push
cld
mov
pop
lahf
push
mov
jecxz
stc
shll
pop
pop
xchg
testl
push
lds
movsl
out
cmp
xor
aam
ljmp
bound
cmp
imul
or
pop
negl
pop
lret
out
iret
add
xchg
lret
shr
mov
stos
lret
ja
xchg
mov
sbb
ficoms
clc
in
mov
ret
cmp
xchg
das
sbb
das
iret
dec
sub
jae,pn
rorb
and
sub
aad
loopne
hlt
clc
movsl
movsb
mov
iret
jp
out
mov
inc
call
mov
mov
push
repnz
sar
rcl
dec
int
inc
int3
fildll
mov
cmp
cmp
test
sbb
mov
cs
aam
test
mov
fwait
movsb
in
push
aas
mov
jae
rorl
test
test
imul
imul
cmpsb
pop
es
push
lea
cmp
scas
mov
lods
scas
add
or
dec
stc
js
and
in
add
out
dec
push
xchg
inc
jle
cmpsb
pusha
lret
outsl
xchg
mov
int3
fistpll
out
and
push
int3
adc
rcl
sahf
lret
loop
nop
sub
loop
mov
loopne
lock
mov
jae
fsubrl
mov
xor
dec
adc
xor
cmp
xchg
enter
add
xor
add
mov
ret
jmp
mov
xor
adc
fisubl
jp
or
push
lret
xchg
mov
dec
xchg
add
cli
rclb
sbb
jnp
fidivrl
push
movsb
fdivp
mov
icebp
js
stc
mov
insb
jge
sub
aad
in
fists
mov
cs
inc
add
sbb
test
jnp
add
adc
ds
xor
mov
ljmp
jb
add
jnp
mov
jbe
adc
cmp
inc
sub
adc
dec
xchg
out
in
fwait
hlt
sub
sub
ficompl
push
test
mov
lea
sub
jmp
cmp
out
pusha
pusha
adc
ja
vcvttss2si
and
inc
inc
sub
ljmp
out
xor
cmc
mov
mov
jae
mov
mov
movsb
sbb
sbb
inc
mov
aad
data16
xchg
or
dec
aas
mov
mov
or
sub
cmp
xchg
mov
push
cmp
cmpsl
out
pop
push
je
xor
dec
xor
in
and
bnd
ret
lea
bswap
and
dec
shll
clc
sti
sbb
ret
stos
cli
or
push
push
out
loop
adc
pop
adc
xchg
xor
mov
mov
xchg
jno
arpl
sub
xchg
sbb
jbe
test
sbb
std
js
add
mov
xor
and
mov
xor
sarb
and
fidivl
outsb
adc
in
mov
adc
fisubs
repz
fadd
in
sbb
push
cwtl
xchg
bound
adc
and
pop
push
stos
push
mov
call
ffree
xchg
inc
in
bound
cwtl
stos
fwait
push
lret
add
test
pop
out
test
cwtl
push
pop
cmpsb
dec
pop
stc
es
inc
mov
or
mov
xchg
outsl
or
add
xchg
test
loopne
sbb
sti
xchg
fwait
imul
mov
push
enter
sbb
mov
and
test
es
xchg
or
and
mov
shr
xor
mov
in
or
push
loopne
xor
rcrl
out
stos
int
push
aas
loope
imul
int3
jne
inc
fs
cld
fwait
inc
testl
xchg
inc
mov
movsl
cmp
bound
xor
dec
cmp
sbb
iret
xchg
cmc
adc
cmpsb
pop
jmp
rorl
sbb
add
sbb
mov
in
call
in
pop
xchg
push
out
mov
fsubrs
mov
mov
dec
xchg
in
adc
fsubs
inc
outsl
and
push
nop
inc
pop
pop
mov
rol
push
inc
pop
add
es
push
je
frstor
jns
repz
sti
add
adc
iret
lret
std
pop
cmp
jae
mov
add
clc
pop
mov
es
pushf
sbb
data16
pusha
inc
inc
sbb
arpl
rclb
sbb
in
divl
jp
jno
xlat
sbb
fs
push
rolb
adc
loope
daa
mov
inc
add
mov
pusha
outsl
pop
in
pop
push
mov
test
clc
aad
xchg
aam
in
jbe
jecxz
push
jl
sub
int
mov
mov
int
cmp
mov
loop
sub
xchg
xchg
or
fdivrl
imul
sub
fisubrl
pop
ja
enter
mov
cld
into
movsl
xorb
aas
aaa
push
mov
sbb
sbb
out
cmp
insb
mov
dec
mov
push
cmp
addr16
aaa
and
push
push
xor
sarb
sahf
filds
add
xchg
dec
popa
je
push
mov
xchg
cmp
js
ret
popf
inc
leave
jp
loopne
pop
sbb
pop
sar
pop
and
sub
adc
jl
fidivrl
out
pop
mov
sbb
cli
jo
ja
xorb
rcrb
adc
mov
add
lds
aam
jmp
xlat
iret
fstpt
xor
test
iret
aas
add
or
clc
fsubs
dec
sub
inc
sub
cmp
jmp
ja
inc
movsb
inc
sarl
dec
call
mov
jae
and
in
xor
sarl
nop
mov
sub
loop
in
cmpsb
adc
inc
push
mov
inc
add
addr16
mov
xchg
pop
or
sub
out
dec
xorb
es
dec
mov
sub
and
insl
cmp
insb
fisubrl
add
cmpsl
in
mov
jp
jge
pop
adc
sub
es
sub
fdivr
fwait
pop
add
fildl
pop
loope
sbb
or
jno
or
fisubl
in
mov
shlb
pop
fistpl
mov
mov
add
push
mov
jbe
mov
or
mov
push
mov
adc
jne
popf
adc
insl
mov
mov
pop
aas
sbb
dec
shl
cmp
xorb
cwtl
pusha
aas
aam
into
in
js
mov
int
lds
neg
xlat
enter
lock
repnz
or
xchg
sub
xor
or
push
int
frstor
inc
in
fcompl
in
jno
popa
ficomps
fisubrl
sub
aad
out
and
aaa
mov
ds
push
leave
mov
int3
xor
inc
iret
scas
pop
cmp
dec
mov
mov
imul
lods
je
shlb
push
pop
jo
sub
jmp
sub
in
lret
add
jbe
cmpsl
bswap
pusha
sti
sbbb
inc
lahf
jnp
jb
fs
sbb
rcrb
movsl
lahf
xor
jle
and
dec
xchg
mov
imul
mov
xor
bound
jae
sub
das
inc
shl
sbb
cmp
repz
mov
call
xchg
nop
or
cmp
jnp
sbb
xchg
pusha
and
xor
jbe
fldt
out
repz
repnz
pop
imul
scas
cmp
xchg
stc
imul
rcll
outsb
dec
les
and
scas
int
ret
cmp
xchg
and
es
dec
sub
xchg
je
xchg
lahf
test
fwait
add
lods
test
in
xor
inc
sbb
xor
arpl
dec
sub
jle
push
loop
int
adc
mov
xchg
jl
mov
jmp
and
insl
outsb
jnp
push
rorb
bound
inc
push
or
test
fldt
push
jne
test
or
pop
test
cmpsb
inc
inc
dec
add
mov
add
adc
lea
repnz
into
jg
jecxz
pop
jo
roll
lcall
fidivs
adc
lock
fwait
repnz
fimuls
pusha
cmpl
jo
mov
push
loopne
sub
and
daa
stc
int
dec
dec
dec
mov
xchg
pop
and
out
fbstp
fcmovb
js
mov
inc
xchg
push
push
cmpsb
push
jae
je
insb
fcoml
dec
jecxz
adc
fnstenv
xchg
fimull
lock
rcrb
popl
ljmp
sti
test
sbb
lahf
sub
and
ret
jmp
push
xchg
sbbl
dec
cwtl
fidivrs
inc
mov
or
lahf
adc
push
and
pop
xor
mov
mov
inc
jp
mov
int3
mov
dec
test
xchg
adc
icebp
push
out
mov
inc
jae
sub
aaa
cmpsl
mov
dec
repz
cmc
cmp
inc
mov
inc
pop
aam
jns
insb
unpcklps
dec
aam
sar
je
add
sbb
int
mov
push
add
mov
out
adc
jae
aad
jnp
test
mov
fildl
adc
mov
push
jb
jge
sbb
jne
mov
or
jno
mov
xor
pusha
orl
je
mov
lcall
xchg
sub
pop
insl
pop
inc
notl
test
and
in
jns
fmull
jecxz
fistpl
clc
in
jle
ret
pushf
test
lods
in
dec
pusha
lds
or
add
jbe
scas
inc
out
loope
mov
jae
ret
out
dec
test
loopne
and
adc
int3
pop
cld
add
addr16
ds
and
cmp
mov
clc
phaddw
lea
mov
fwait
loopne
xlat
in
out
cmp
and
repnz
xor
jl
jmp
cmpsb
test
xor
xlat
mov
inc
push
xor
inc
popf
stos
cmp
ss
into
mov
clc
xchg
inc
lea
test
cmc
sahf
dec
pop
or
cmp
xor
into
push
pop
xchg
filds
xchg
push
or
js
out
into
gs
xchg
aam
fdivr
popf
mov
adc
es
sbb
fwait
mov
scas
xor
pop
xor
sub
int3
sbb
subb
insl
sbb
into
ds
cmpsb
mov
sub
gs
lret
xchg
in
das
es
sbb
mov
push
jns
jge
jae
and
push
sbb
call
aaa
ss
inc
cmp
adc
and
es
and
xlat
pop
push
add
mov
and
stc
idiv
add
scas
repnz
into
out
jmp
and
push
into
adc
inc
cwtl
es
sub
insb
jecxz
dec
dec
jbe
fisubrl
jae
rcll
outsb
dec
in
inc
pop
push
push
xchg
and
inc
mov
addl
mov
imul
sub
outsb
repz
in
add
xor
xchg
pop
jg
inc
ficomps
mov
lret
push
push
push
mov
insb
and
pop
mov
orb
dec
movsb
push
in
push
cmpsb
cmp
or
leave
pop
movl
sahf
scas
pusha
inc
stos
push
lock
push
and
mov
int
adc
imul
in
pop
sbb
xchg
pop
push
lahf
pushf
jmp
mov
in
insb
or
xor
enter
jno
ljmp
xchg
and
jg
or
jo
jmp
aas
cwtl
mov
jp
mov
push
push
cmc
insb
adc
nop
or
and
mov
insb
and
mov
xor
jo
js
arpl
jmp
out
lock
scas
enter
or
mov
movl
loopne
mov
loop
outsb
cli
add
aaa
xchg
xchg
in
and
cmp
pop
push
imul
sub
cmp
sbb
sbb
lea
mov
or
cltd
add
adc
cmp
fstl
aad
test
dec
mov
mov
add
dec
lock
repz
mov
mov
jb
jnp
push
jno
mov
pop
pop
je
lret
push
aad
shrl
mov
jbe
xor
outsl
rcrb
ss
xor
adc
mov
adc
jg
cmp
jb
insb
rcr
cs
and
cltd
and
adc
scas
pusha
lahf
fistpl
or
arpl
cli
sti
std
mov
imul
cmp
add
lods
fsubr
inc
push
and
add
xchg
fnsave
xchg
repz
push
stc
ret
push
imul
push
out
addr16
jg
and
cli
loopne
push
shlb
imul
aas
mov
inc
pushfw
lea
sub
sbb
xchg
mov
inc
icebp
call
inc
in
mov
lock
pop
or
add
mov
push
adc
shrl
fildl
int3
mov
popf
sarb
cmp
mulb
xor
mov
dec
test
dec
pusha
xchg
mov
mov
mov
into
xchg
adc
pop
lea
stos
xor
rcrb
ss
pushf
nop
dec
xor
inc
pop
cmpsl
fstl
sub
stc
and
cmp
dec
ss
js
test
jne
inc
mov
insb
inc
xor
icebp
cmp
pop
lods
jp
adc
popa
and
inc
xchg
mov
dec
xchg
mov
das
mov
sub
lods
pop
loop
pop
pop
das
push
cmp
lods
js
js
mov
fstp
loope
sub
adc
cmp
inc
jge
adc
sub
xor
inc
lret
mov
cltd
jb
lcall
pushf
mov
cmpsb
cmpl
sbb
int3
push
push
dec
xor
mov
jmp
outsb
enter
leave
push
adc
xor
je
jp
jge
jnp
mov
inc
mov
ss
pop
test
ret
push
iret
jae
add
aaa
aad
ret
xor
mov
out
mov
inc
mov
add
dec
jle
cmp
loop
dec
sub
loop
push
sbb
push
test
pop
stc
lret
cltd
lods
nop
notb
xchg
in
adc
cmp
push
push
fs
cmpsb
out
in
cmpsl
cmpb
ds
and
sbb
pop
push
outsb
sub
adc
movsb
and
fsubs
scas
pop
out
call
push
out
pop
js
in
lahf
cmp
sahf
mov
stos
ret
inc
xchg
mov
les
xchg
insb
jne
sub
cmp
hlt
pop
rcll
cmp
and
call
test
adc
mov
push
jne
icebp
cmp
in
and
adc
xor
push
imul
jbe
add
lock
xor
mov
dec
push
test
sbb
je
push
add
push
jnp
mov
mov
and
inc
mov
add
jno
lock
les
mov
shll
addr16
adc
sbb
or
xchg
popf
or
test
add
stc
loope
movsl
shlb
popf
jns
or
mov
sbb
data16
pop
cmc
lds
mov
sub
sub
mov
mov
adc
ja
and
ja
mov
clc
inc
pop
mulb
adc
shll
jmp
xor
jne
shl
out
mov
lcall
push
repnz
loop
sahf
popf
adc
xchg
ja
leave
ljmp
sub
movsb
test
cmp
adc
pop
inc
lods
jp
jp
cmp
aaa
mov
sbb
pop
push
adc
cmp
push
stos
loopne
adc
std
fcmovu
mov
stos
mov
arpl
fisubrl
or
fimuls
pop
lods
mov
jno
out
dec
es
inc
push
adc
mov
cltd
stos
mov
dec
shll
pop
ret
in
fmull
icebp
cmp
fldcw
or
jge
enter
push
dec
in
roll
jecxz
in
push
in
cmp
pop
dec
mov
or
sub
sar
push
inc
aad
xor
das
mov
pop
xchg
xor
inc
loopne
dec
push
loop
aam
mov
out
inc
adc
sbb
push
cmpsl
daa
xchg
negb
stos
std
das
sbb
lret
insl
fidivrs
icebp
adc
cmpsl
lods
outsb
cmpsl
subl
sarb
mov
std
test
pop
shrl
jg
in
jecxz
pusha
shll
add
and
stos
or
jns
lock
es
xchg
les
or
pop
push
push
inc
mov
subl
jnp
or
inc
xchg
push
adc
negb
xor
cmp
push
push
push
mov
or
enter
stos
aam
test
mov
jno
iret
outsb
shrb
std
fisubl
iret
scas
mov
test
mov
imul
mov
mov
es
dec
or
sbb
test
adcl
fucomp
adc
insl
push
sahf
xchg
out
dec
leave
inc
std
pop
cmp
repnz
lock
dec
adc
repnz
outsl
loop
enter
or
jbe
les
pop
xchg
es
jle
rorb
mov
jle
add
ljmp
mov
add
sbb
arpl
lret
sti
add
mov
insl
adc
dec
enter
add
loope
popf
mov
mov
movsl
insl
cmp
mov
add
push
leave
and
mov
pop
cmp
push
inc
aad
lahf
imul
ret
mov
cli
cmpsl
xor
xor
jl
cmp
loopne
enter
mov
add
arpl
pop
xchg
fiadds
push
dec
cmpsb
and
sub
enter
push
dec
lods
loope
ss
mov
cmpsl
fdivs
shll
jbe
mov
gs
xor
or
mull
mov
jp
std
jg
inc
rorl
aam
out
into
adc
dec
xor
cwtl
out
sub
mov
pop
jmp
jp
lods
xor
scas
jne
add
push
aam
adcb
inc
push
loope
and
push
or
sarb
push
adc
mov
lds
call
stos
dec
pop
mov
clc
cmp
lcall
int
cs
cld
and
test
shrb
sub
sbb
cmpsb
cwtl
mov
inc
fwait
adc
sbb
and
cmp
xor
cs
mov
or
cmpl
leave
jp
or
mov
fildll
cmp
out
add
fdivrl
jl
add
test
push
test
cmp
xchg
and
mov
loopne
fimull
or
mov
imul
jle
pusha
fcos
mov
cmpsl
sub
xorb
or
lods
and
repnz
cmc
imul
mov
push
enter
mov
cltd
add
bound
adcb
in
xchg
ficoml
mov
jne
out
jb
lret
pop
std
daa
and
sub
sbb
pop
fisubl
mov
sub
mov
and
lcall
mov
inc
xor
and
or
xchg
shll
movsb
pop
idivb
mov
cmpsl
in
fiadds
or
mov
cmc
xor
jge
shl
icebp
cmp
movsb
dec
cmc
les
xor
lea
imul
push
lahf
imul
sbb
push
fstpt
sbb
cmpsl
fwait
popf
loope
jg
clc
loopne
add
xchg
mov
add
sbb
fst
push
cwtl
jo
mov
adc
add
arpl
ficoms
or
loop
bound
push
or
xor
loopne
jb
sub
push
or
cli
das
xor
lods
or
call
pop
xor
ja
stos
jnp
sub
aaa
xchg
daa
jbe
mov
bound
stos
outsb
lret
mov
and
fsubrl
mov
cmp
jge
sbb
cmp
call
mov
or
or
mov
in
daa
or
sbb
inc
ret
mov
inc
shrl
shl
pop
lret
mov
je
xchg
mov
je
stos
xchg
and
or
scas
pop
xchg
sub
jmp
pop
daa
jle
in
divb
mov
test
lret
inc
leave
dec
mov
mov
jb
jmp
add
dec
je
pop
sbb
push
dec
fdiv
mov
jb
fisttpl
loop
rclb
sbb
in
jns
pop
cmp
movsb
and
inc
jbe
and
daa
lret
imul
mov
xchg
stc
rcll
fldenv
xor
jns
mov
xchg
pop
inc
aam
sub
shrl
repz
pop
into
or
sbbl
cmp
test
fwait
sarl
addb
mov
mov
pop
push
cmp
push
insl
cmp
lds
pop
fstpl
movsb
clc
push
xchg
adc
adc
testb
sub
orb
dec
lret
mov
add
mov
pop
lret
hlt
lea
mov
adc
iret
jo
loopne
aam
repz
sbb
push
cs
nop
les
repz
cmp
repz
test
fstp
add
jo
mov
cmp
loopne
inc
cmpsl
cwtl
outsl
fistl
imul
insl
sbb
cwtl
rcr
xchg
lret
test
je
and
pop
sub
adc
popf
out
jno
inc
and
push
xor
cmpsb
test
xchg
test
jmp
pushf
push
pop
cmp
mov
iret
cmc
push
cltd
in
or
popa
cs
adc
and
xchg
and
lea
mov
push
mov
adc
jno
js
pop
dec
mov
sub
sbb
jl
in
pop
xchg
divl
stc
in
scas
jnp
mov
jl
pop
outsb
and
mov
xchg
pop
mov
rorb
push
leave
sarb
cltd
sbb
and
mov
pop
lret
fsubl
xchg
test
adc
xchg
pop
cvtps2pi
aas
aam
stos
ja
adc
xchg
mov
psubsb
popf
stos
ret
mov
mov
movsl
and
dec
sub
dec
sahf
sbb
xor
mov
sub
lock
mov
mov
push
cmpsl
push
in
sbb
loope
test
push
push
fcomps
mov
sbb
jae
lods
repz
adc
out
cmp
ficompl
das
xchg
lea
push
nop
mov
je
fnstcw
xlat
out
mov
mov
inc
fcmovu
js
and
fcoml
out
fildll
adcb
out
mov
mov
sti
ljmp
int3
pusha
sti
lods
stc
or
add
orb
xchg
adc
push
sarb
sbb
leave
and
repz
push
movsl
shll
sbb
cmpb
lahf
adcb
add
jg
inc
sub
and
or
mov
aas
dec
bound
jo
bound
add
notl
mov
add
mov
std
adc
dec
xor
gs
mov
xor
fldl
aam
mov
cmp
divb
sub
js
mov
sbb
negl
mov
outsb
cmp
fdivr
mov
xchg
mov
or
scas
fcoms
cwtl
xchg
xor
xorl
int
mov
sti
addr16
sbb
outsl
xchg
mov
sub
stc
sti
out
pop
mov
or
popa
mov
in
into
jle
cmpl
xor
xchg
adc
jnp
dec
gs
push
test
cmp
ja
pop
cmp
lret
mov
push
rclb
in
adc
mov
jne
ret
adc
fwait
adc
rorl
nop
scas
mov
mov
stos
push
xchg
and
mov
notb
and
sub
mov
out
cmovge
je
ss
add
call
into
and
push
xchg
in
lea
dec
sub
std
insl
mov
movsb
vmovdqu
xor
iret
cld
adc
divl
into
repz
lock
add
sub
pusha
lock
mov
push
inc
jle
adc
add
mov
inc
jg
mov
nop
pop
jg
jae
in
out
in
movsl
dec
push
or
test
inc
ss
stc
sub
rcrl
sbb
add
jg
sub
and
ret
sub
pop
sub
shl
inc
jae
hlt
and
ss
push
fistpl
pop
or
push
scas
aas
out
jl
fildll
sbb
enter
dec
xchg
shlb
add
xchg
mov
ret
lods
insb
pusha
pop
pushf
jbe
jb
jae
or
cmpsb
xchg
sub
adc
pusha
jmp
and
in
mov
test
iret
xchg
or
mov
cs
mov
dec
je
dec
adc
or
gs
adc
test
insl
sahf
and
cmp
adc
test
ljmp
push
cltd
pop
dec
jnp
dec
sbb
lock
push
fs
xchg
imul
lahf
imul
es
cwtl
in
or
push
popf
jne
push
ret
push
jnp
fwait
adc
les
xchg
xorb
in
fwait
outsl
iret
pop
xchg
or
inc
adc
in
pop
lret
mov
cltd
xor
aad
fwait
or
js
jl,pt
fs
adc
mov
pop
inc
pop
inc
ret
mov
leave
popf
jb
sahf
dec
push
dec
inc
sar
sub
inc
bnd
iret
mov
mov
dec
xor
bound
shlb
push
imul
loopne
call
mov
fnsetpm(287
fisubrs
push
arpl
pop
pop
scas
jmp
jno
pop
bound
pmulhw
ss
int
inc
pop
xor
cld
xchg
cmp
ret
lret
jle
insl
dec
xor
insb
xchg
rcll
test
xchg
inc
pop
cmp
pusha
push
in
fs
repnz
cltd
dec
into
cmp
mov
jne
inc
add
add
sarb
inc
loopne
fistps
movsb
inc
jmp
call
testb
pop
or
mov
adc
movl
iret
push
icebp
repz
iret
bound
dec
stos
jle
jg
push
pop
and
out
rorl
sub
sub
test
clc
or
test
sahf
cs
cmp
lods
fs
enter
mov
movsl
pop
in
jle
mov
shr
xchg
mov
int
xchg
nop
bound
out
pusha
and
jb
dec
lcall
lods
push
mov
mov
xor
outsl
or
inc
rcl
ss
fs
popf
xor
pushf
pop
je
cmpsb
call
std
test
dec
sbb
sbb
push
inc
daa
frstor
icebp
ljmp
mov
jmp
negb
mov
xor
mov
cmp
mov
sub
pop
pop
mov
adc
xchg
mov
mov
adc
scas
xchg
xchg
sti
or
aas
into
movsl
or
xchg
xchg
and
sbb
bound
cs
pushf
std
xchg
and
pxor
clc
stc
sub
xchg
sub
mov
addl
rcl
mov
insb
inc
xlat
cmpsl
sahf
sub
push
xor
adc
js
jge
cld
jne
pop
xchg
das
call
out
push
fistpl
mov
outsb
fistpll
es
jecxz
aam
pop
mov
lock
push
fcoml
fmuls
dec
scas
push
call
xor
adc
sub
adcl
cld
push
jl
and
mov
frstor
and
mov
pop
bound
adc
jnp
xor
jg
pop
mov
or
repnz
inc
cmp
scas
xchg
add
inc
sbb
test
inc
loope
imul
ja
cmpsl
or
xchg
push
hlt
call
adc
imul
mov
sarl
push
ret
sub
cmpsb
arpl
xor
push
xor
pop
mov
push
adc
xor
test
dec
test
mov
adc
cld
mov
imull
popf
push
notl
pop
jge
sbb
fs
and
lods
mov
cmp
orl
movsb
push
jb
xchg
test
mov
popf
ss
int3
dec
les
popf
cmp
push
lods
add
pop
inc
pop
movsb
jno
push
bound
cmpl
pop
xlat
adc
loopne
fcomps
cli
addr16
inc
test
or
loop
cs
mov
pop
push
jo
mov
das
cmp
clc
mov
ja
sahf
stos
lret
arpl
mull
sbb
jne
cltd
mov
xor
fstl
loop
ss
js
and
xchg
cmpsb
test
loopne
jno
es
sbb
rorb
mov
arpl
stc
rorb
adc
dec
mov
fwait
and
ffreep
outsb
mov
adc
out
out
and
imul
xchg
xor
and
movsb
inc
push
mov
aam
or
aaa
pop
cmpl
mov
cmp
xor
nop
das
into
sub
addb
ret
pop
adc
lret
pop
pop
aas
inc
and
or
je
shl
mov
and
pop
test
jg
lods
fisubl
add
ror
int3
xor
sbb
or
and
mov
push
mov
movsb
pop
jle
mov
lods
rcll
mov
or
inc
cld
movsl
push
xchg
sbb
pop
mov
dec
cmp
sbb
pusha
aam
xchg
jle
pop
push
pop
inc
mov
xor
jb
jecxz
or
or
mov
push
or
mov
and
sbb
adcl
stos
imulb
lods
sbb
rcll
mov
dec
and
enter
addr16
enter
sarb
mov
adc
dec
xlat
jne
mov
stos
int3
mov
scas
inc
mov
mov
dec
cmp
mov
mov
and
dec
fcomi
jg,pt
and
pop
adc
mov
sub
adc
fs
jo
jno
ja
test
inc
cmpsl
popf
imul
push
jmp
dec
in
adc
jecxz
push
jnp
out
stos
lret
inc
inc
sub
xor
jmp
add
cmpsb
inc
xlat
and
fs
std
mov
inc
mov
or
xor
mov
jnp
test
pusha
movsl
and
in
mov
shlb
cld
sarl
mov
add
add
test
push
fwait
je
sbb
mov
fwait
and
xor
xor
inc
test
cmp
push
dec
ret
punpckhwd
andb
jmp
movsb
shll
pop
fsts
jb
frstor
int
adc
sub
add
jo
fcomps
cmpb
jp
bound
push
mov
mov
or
sbb
mov
and
repnz
cmp
into
scas
push
xor
xchg
push
test
sahf
pop
inc
ficoms
mov
arpl
fbstp
inc
push
cmp
ss
xor
xchg
fcmove
pusha
mov
mov
mulb
fnstsw
xchg
xchg
xchg
push
sbb
mov
outsb
jnp
sub
ficoml
cmp
out
in
jl
inc
fiaddl
dec
je
pop
xor
subl
dec
aas
mov
cmpsl
xchg
jle
add
popf
cmp
or
outsb
lods
dec
aaa
mov
popf
test
dec
pop
je
lahf
daa
mov
fistpll
mov
shll
cmp
sbb
sbb
stc
mov
fwait
clc
xchg
or
in
lods
push
out
mov
stc
push
clc
mov
ror
and
stos
sub
adc
ss
mov
cmp
pop
movsb
pop
ret
pop
test
cmp
sbb
mov
dec
inc
push
mov
xchg
inc
push
das
mov
enter
xor
arpl
sub
jl
out
jb
pop
scas
xchg
les
push
push
pusha
xor
pop
sbb
jl
xor
pop
aad
xor
iret
js
loopne
xor
mov
push
mov
push
jo
mov
lods
cs
add
jp
ret
cmp
adc
jecxz
mov
sahf
cmp
jmp
repz
ss
adcl
dec
bound
xor
cmp
dec
mov
int
dec
xchg
hlt
pop
mov
rcrl
jge
out
xor
movsl
and
shll
mov
jmp
aaa
popf
add
or
push
loop
shlb
ret
movsl
andb
jp
movd
scas
gs
inc
dec
fs
lcall
imul
lret
out
fisubrs
pushf
jbe
loopne
fwait
data16
movsb
mov
xchg
fisubrl
outsb
fisubrs
insl
push
outsl
out
cltd
pushf
mov
aam
add
pop
fisubrl
mov
fs
nop
aaa
ds
inc
adc
jge
push
mov
jo
iret
sbb
insl
mov
cmp
in
push
add
in
jnp
sub
inc
lret
fnstcw
test
and
inc
cmp
fisttpl
in
jecxz
fcoml
daa
cmp
out
jns
idivb
dec
xchg
mov
xchg
xchg
pop
mov
xchg
fwait
sub
cmp
mov
imul
mov
fsubs
xor
ss
imul
shl
test
out
jns
push
mov
movsl
mov
es
xor
sbb
ficoml
jbe
jnp
aas
add
pop
in
xor
pop
stc
sbb
or
repnz
jne
push
pushl
jge
lldt
sbb
data16
inc
jae
jbe
repnz
dec
ret
add
inc
dec
into
lcall
mov
cmc
adcl
and
mov
je
mov
nop
mov
fsubrs
inc
mov
jne
cwtl
cmpsb
inc
lret
dec
xor
pop
dec
sbbl
lods
icebp
xor
jecxz
stc
push
cmc
scas
shrl
jns
dec
or
in
lods
rorb
push
outsb
out
cld
mov
push
lods
sbb
add
das
cli
arpl
and
lods
mov
xchg
out
iret
and
jmp
mov
fadds
mov
jae
mov
mov
cmpsl
aam
test
adc
cld
push
cmpsb
lahf
fsubl
ja
imul
repnz
lcall
and
mov
jb
adc
xchg
lea
cmc
and
out
into
mov
ret
or
es
std
or
int3
stos
sbb
cmp
lahf
jns
in
sub
loop
push
lcall
pop
mov
pop
push
mov
loope,pn
lcall
mov
inc
test
imul
enter
xchg
xor
cmpsl
mov
out
outsb
pusha
xchg
mov
xor
shll
enter
dec
jnp
mov
push
xchg
jecxz
cmp
xor
insb
and
and
sbb
mov
inc
sub
add
sub
push
push
aas
dec
fdivl
outsb
test
jo
cmc
inc
nop
lods
das
stc
lock
push
clc
lcall
insb
popa
pop
xor
addr16
add
inc
shll
test
xchg
dec
insb
sub
dec
sahf
fstpl
icebp
leave
mov
cmpsb
mov
pop
push
mov
and
adc
mov
dec
popa
int3
inc
jbe
mov
fwait
out
sahf
dec
iret
xchg
lods
mov
jg
int3
jge
or
dec
fisubrs
out
out
push
and
mov
push
dec
add
push
push
fwait
xor
jo
xlat
das
pusha
mov
popf
push
xchg
cmp
jbe
test
xchg
push
int
repnz
test
ror
pop
ficoml
sub
sub
add
leave
sbb
mov
push
ljmp
fsubs
sti
sub
fisttps
test
shlb
fldcw
push
test
cmpl
pop
lcall
aad
push
scas
mov
dec
xchg
mov
test
fists
imul
dec
xchg
aam
dec
test
arpl
mov
pusha
stos
push
add
sbb
mov
jae
aas
repnz
mov
leave
sbb
pop
aaa
cmpsb
arpl
jns
xor
cmp
push
mov
sbb
xchg
jp
add
push
mov
cltd
adc
rcr
mov
and
sub
in
cmc
leave
rdrand
fistpl
xchg
shll
sbb
into
push
adc
ljmp
xor
mul
fcomps
inc
sub
rorb
xchg
dec
mov
repnz
pop
addr16
pop
jbe
adc
mov
loope
sub
dec
xor
fs
inc
push
test
sub
incl
das
jecxz
add
jge
mov
xchg
das
mov
mov
pop
or
sub
push
xor
or
bound
xlat
xchg
mov
inc
mov
std
pusha
xchg
mov
cltd
ud1
mov
xchg
push
iret
add
into
adc
popa
setb
and
sbb
cwtl
lock
dec
movsb
push
leave
in
inc
inc
pop
outsl
shl
je
leave
xchg
aaa
arpl
cmc
dec
inc
sbb
mov
mov
xorb
sub
aam
mov
jns
and
jp
mov
jg
xor
cmpsb
cwtl
scas
adc
jge
in
and
cltd
fiadds
popf
sub
sub
mov
push
insl
sub
ret
mov
fnstsw
add
or
andl
sbb
sub
sub
cmc
jae
aad
cmpsb
pushf
movsb
repz
sbb
mov
sub
lcall
fdivp
pop
and
rolb
xor
nop
cltd
jg
cmp
xchg
sbb
add
mov
jmp
incb
ss
push
push
adc
les
or
daa
push
out
es
out
jb
mov
popa
leave
fmull
xor
inc
lods
pop
repz
fisubrl
add
or
ret
fcmovbe
imulb
sbb
addr16
out
inc
cmp
outsb
pushf
jp
sub
dec
mov
add
xchg
pop
testl
inc
pop
push
test
and
inc
cld
push
inc
mov
fidivl
movsl
int3
nop
mov
sub
rcll
cmp
sbbb
and
insl
rcl
cmp
push
mov
insb
adc
fnsave
mov
jmp
mov
dec
inc
jbe
push
jbe
mov
sub
aad
mov
and
mov
jle
lret
sub
xor
mov
push
stos
mov
scas
dec
or
inc
push
iret
pop
xchg
inc
scas
mov
loop
push
fwait
testl
aas
inc
mov
js
fwait
inc
sub
sub
out
ret
test
lods
and
jbe
bound
dec
pop
and
push
popl
mov
icebp
lea
xlat
mov
xor
aam
cs
mov
gs
adc
cld
int3
adc
cli
test
push
aad
dec
mov
aaa
das
cli
push
jmp
inc
je
pop
call
inc
inc
lret
outsb
out
jno
cltd
sbb
shl
in
push
xor
dec
mov
sbb
bound
jle
hlt
fsub
push
inc
mull
dec
imul
test
mov
mov
andl
std
nop
inc
cltd
pushf
mov
fstps
cli
out
push
pop
push
and
scas
incb
in
xchg
loopne
lret
sahf
mov
adc
push
dec
push
push
adc
mov
and
mov
mov
cmpsl
and
jne
dec
ss
insb
es
pop
mov
jo
adc
stos
xchg
or
addr16
cmpsb
jg
xchg
xchg
push
insl
sub
lock
lret
xor
mov
push
inc
cmpl
in
pop
pop
das
rorl
stc
sbbb
xchg
cmpsb
pop
jle
test
aad
xlat
inc
and
aaa
fiadds
mov
dec
sbb
int
lods
cltd
add
arpl
das
cltd
jl
pop
rcrb
or
stos
cmc
or
add
mov
and
insl
lcall
cmp
and
into
jb
jmp
push
jle
jl
dec
daa
jle
ret
cmp
incl
adc
mov
sbb
inc
sarb
push
add
or
subb
ret
enter
call
in
cmp
pop
dec
divb
xchg
sbb
and
mov
hlt
sub
inc
lcall
inc
hlt
dec
xlat
fucomi
imul
in
adc
sub
jns
rcll
mov
adcb
mov
movsb
imul
sub
xchg
leave
into
arpl
and
ljmp
pushf
mov
dec
dec
xchg
fsubrs
in
xchg
dec
mov
imul
mov
sbb
cmc
add
in
jno
mov
sub
sub
xor
popa
xchg
subb
cli
leave
test
and
loope
pop
cli
mov
and
xchg
mov
dec
xchg
mov
pop
nop
jp
fidivrl
pop
xchg
adcl
xor
daa
fsub
clc
pop
stos
mov
ljmp
ja
sub
inc
adc
push
cmp
mov
aam
mov
fnstenv
cld
imul
or
jmp
insb
push
bound
jbe
fmull
push
nop
fisubrl
mov
stos
xchg
xor
mov
dec
pop
pop
mov
mov
inc
std
sub
cmp
or
pop
test
je
mov
inc
dec
int
mov
dec
cmp
add
mov
xchg
jbe
mov
ljmp
add
stc
ret
xchg
xchg
adc
pop
in
mov
leave
jns
loope
sbb
sbb
mov
dec
cld
pop
clc
imul
rclb
push
testl
call
or
fldl
pushl
inc
dec
adc
daa
ficomps
inc
fstps
add
hlt
pushf
cmpsl
jo,pn
sub
xchg
inc
out
push
mov
scas
insb
dec
adc
int3
int
xchg
lods
test
adc
into
and
daa
push
int
iret
in
das
lahf
out
call
dec
lahf
jge
aad
data16
mov
test
jg
inc
dec
mov
insb
jbe
daa
aam
mov
lock
mov
arpl
les
inc
ret
sar
cwtl
fcmovnbe
popf
lock
mov
ret
cmp
testl
mov
scas
clc
push
enter
xor
bound
mov
bound
inc
push
sbb
mov
and
jge
or
jl
stos
in
pop
gs
data16
dec
mov
imul
pop
adcl
push
push
mov
xchg
lret
push
clc
mov
ret
test
adc
jo
push
push
aad
mov
movl
jge
sbbb
data16
je
push
sub
or
push
es
and
jnp
cltd
int3
pop
rcrl
test
lahf
jle
aaa
pop
and
mov
pop
pop
sbb
into
adcl
jno
push
pop
jl
mov
cmp
adc
inc
mov
push
bound
and
sbb
loope
mov
fidivrs
xchg
mov
sbb
dec
lea
or
add
andl
pop
imul
and
call
xor
lahf
mov
loop
nop
data16
mov
mov
add
dec
popf
mov
div
pop
decl
notb
call
pop
ja
call
mov
jo
push
cwtl
vpmacsww
out
popa
ficoml
cltd
xchg
sub
xor
aas
mov
push
mov
pushf
jns
lcall
adc
xor
movsl
sti
sbb
int3
sbb
push
or
das
mov
cmpsl
or
loopne
pop
mov
sub
negb
or
clc
inc
cmpsb
in
fisubrl
idivb
shll
and
fisubs
jl
push
or
push
or
xchg
pshufw
int
fstl
fcoml
xor
adc
mov
ja
stc
in
dec
imul
montmul
cmpsb
push
out
fldt
dec
inc
pop
stc
or
inc
pushf
mul
jnp
andb
call
mov
mov
inc
jmp
shll
inc
addr16
icebp
and
stos
jmp
mov
xchg
lahf
cmp
pop
pushf
sbbl
cmp
cmp
push
js
stos
xorl
mov
fisubrl
pop
jne
aas
das
and
and
in
movlhps
push
mov
cmpsb
or
int3
cli
mov
adc
push
mov
pop
xchg
stos
inc
pop
fwait
rorb
lahf
pop
adc
imul
sub
cli
push
add
xor
inc
push
push
out
xor
and
add
mov
mov
add
dec
mov
lock
shl
sarb
pop
loop
pop
jne
subl
lahf
les
jnp
sbb
into
sahf
mov
loope
sub
ds
inc
cmp
insl
xchg
inc
int3
mov
mov
mov
push
xchg
fucomp
sub
mov
fcompl
sbb
je
idivb
adcb
pop
sbb
fidivrl
mov
scas
movsl
cmpsl
je
lahf
cmp
xchg
jle
movsl
fstpt
in
movsb
pop
aas
push
or
jl
pop
iret
mov
inc
jnp
jecxz
xchg
hlt
sub
ret
sti
push
pop
cmpsb
testl
mov
pushf
aam
cmp
or
shrl
aas
in
inc
adc
es
les
popf
xor
ja
sti
inc
shrb
ss
xor
push
in
inc
repnz
sarb
push
mov
sub
into
test
cs
dec
push
cli
lcall
ss
dec
pop
cmp
test
adc
push
or
ljmp
adc
mov
pop
add
pop
pop
movsl
jmp
mov
sbb
inc
ljmp
jbe
cmc
push
push
cmc
loope
ja
push
into
repz
push
push
dec
roll
and
mov
cwtl
fdiv
sub
daa
cmpsl
loope
push
ret
rcrl
rolb
xchg
jg
push
add
mov
sarb
fisttpll
sbb
push
mov
mov
lret
insb
repnz
inc
pop
and
rcll
es
int
outsb
dec
out
and
add
jg
pop
mov
adcb
imul
sbb
and
inc
outsb
out
in
cld
jl
pop
pop
int3
inc
movsl
jno
imul
outsl
jb
aam
or
xor
js
stos
push
outsl
xor
pop
sbb
adc
jg
push
repnz
xor
insb
stos
push
daa
les
mov
sbb
push
xchg
inc
shrl
jge
imul
or
pop
inc
fistpl
pop
ja
push
sbb
add
scas
lcall
icebp
test
lds
scas
or
mov
out
jp
push
jg
jno,pt
scas
and
aam
mov
mov
cmpl
xlat
out
scas
lock
sub
call
push
test
mov
sti
adc
push
pusha
fldenv
dec
scas
pusha
mov
fcompl
mov
mov
insb
gs
je
dec
insb
mov
mov
roll
xchg
arpl
xchg
scas
pop
das
inc
pop
push
and
clc
jae
out
jnp
lods
cld
cwtl
mov
sbb
mov
fidivrl
shlb
iret
mov
push
dec
imul
mov
icebp
mov
dec
subl
dec
mov
pop
stc
push
and
imulb
dec
xor
mov
icebp
adc
fistpl
cs
sub
xor
push
loop
mov
in
ret
pop
adc
mov
movsl
testl
xlat
shlb
dec
jp
out
paddw
mov
fxtract
mov
mov
insb
xor
sub
test
lock
stos
xor
negl
jle
jns
sub
les
lods
push
call
cmp
loopne
sub
add
cmpsl
mov
jno
mov
loope
std
bound
enter
xchg
jmp
cmp
clc
push
insb
xchg
mov
dec
mov
daa
stos
negl
inc
push
mov
shrb
sar
sub
push
mov
push
test
outsl
or
lahf
sub
dec
les
loop
mov
cmp
popa
mov
sub
pusha
iret
adc
das
add
inc
pop
lret
jb
fmuls
sbb
rorl
std
in
jns
push
xchg
mov
lods
push
out
lcall
loopne
shll
fsubrl
mov
shll
pop
cmp
or
pop
sub
mov
push
shll
fdivr
jns
cmc
roll
inc
push
imul
js
mov
icebp
dec
xorb
sbb
dec
hlt
loopne
inc
sbb
add
call
ret
push
out
sbb
insb
add
sbb
fstpl
pop
data16
cmc
sub
jo
xchg
sarl
xchg
ss
dec
andl
in
sbb
arpl
in
insb
cmc
repnz
rcrl
or
mov
cmp
out
loop
in
mov
in
adc
loopne
ljmp
or
mov
xchg
jg
imul
cmp
xchg
cmp
xchg
test
daa
popf
and
mov
mov
xor
rcrb
mov
push
sub
mov
bound
and
inc
cmp
sub
dec
inc
decl
jl
bound
ret
sar
pushf
lret
add
sti
mov
les
in
lahf
sbb
enter
shll
pop
lods
imul
sti
test
and
cmp
aad
cmp
or
movsb
jp
pop
cmp
shrb
mov
pop
mov
cs
inc
mov
movl
cmp
and
mov
inc
int3
cmpsl
div
pop
xor
inc
orb
pop
mov
dec
mov
add
and
cmp
dec
rcl
aaa
lret
push
fsubrp
into
aaa
ret
inc
scas
pop
dec
dec
jecxz
xor
insb
cltd
inc
xchg
add
inc
loop
lcall
and
adc
aam
ja
aad
int
pop
mov
pop
lahf
jae
insb
std
mov
in
mov
fucomip
dec
int3
fcoml
mov
dec
dec
push
jge
mov
xchg
mov
xlat
bound
dec
es
jmp
xor
inc
bound
inc
sub
jo
mov
and
cmp
loop
enter
loopne
push
xor
mov
push
xchg
dec
cmpsb
sub
aas
jae
rorl
jle
add
lods
xchg
sar
xor
in
popa
rclb
mov
movsb
outsb
xchg
inc
pop
push
repnz
fists
sbb
cmp
loopne
dec
mov
mov
mov
negb
push
cmp
add
shlb
sar
inc
push
ret
sbb
fdivrl
inc
mov
bound
jnp
add
sbb
sbb
and
sub
cli
orl
sub
xchg
into
fstpt
push
pushl
pop
outsb
stos
out
jae
fiadds
fdiv
sbb
xchg
bound
movsl
int3
daa
scas
xchg
sbb
movsl
xchg
or
add
lret
add
adc
mov
out
push
add
push
pusha
cs
push
imul
mov
xchg
test
push
xchg
add
push
stc
sub
mov
loopne
in
in
shrl
cmp
lea
stos
fsts
add
cmp
mov
fstps
dec
sub
scas
mov
in
scas
jae
out
adc
mov
and
cwtl
or
movsb
fcompl
xchg
push
xchg
mov
sahf
ret
aas
adc
sbb
push
sbbb
adc
mov
in
test
ret
pop
cmpsb
sub
outsl
xor
inc
push
inc
mov
mov
push
cwtl
cmc
jle
fisubl
mov
out
or
add
data16
ljmp
fdivs
pop
lcall
dec
mov
xor
xor
push
repz
push
aaa
mov
xlat
or
dec
sti
jno
idivl
and
inc
and
into
in
mov
hlt
cmpsl
dec
or
in
pop
jb
push
cmp
movl
push
jg
inc
jne
pop
loop
jno
adc
mov
lea
lods
adc
pop
addl
ror
pop
push
dec
scas
icebp
mov
cmp
and
stos
jg
jbe
sbb
sbb
popf
test
mov
mov
lea
insb
pusha
and
inc
fildl
lods
mov
mov
lcall
ljmp
or
jnp
stos
mov
adc
sub
inc
jne
jle
lods
inc
popa
mov
mov
xchg
push
test
cld
push
sub
scas
sbb
pusha
pop
pop
jnp
pop
ljmp
aas
dec
incb
movsb
dec
cltd
mov
test
push
mov
shrl
jge
in
call
dec
inc
stc
mov
scas
pop
mov
sbb
mov
mov
inc
cmp
aad
mov
adc
jo
jns
xor
fwait
jno
sti
lcall
add
int
mov
bnd
fs
xor
pusha
mov
adc
push
cmp
std
scas
int
rorb
pop
mov
stc
dec
in
inc
movsl
lret
mov
imul
sbbb
and
jnp
dec
stos
inc
rsm
or
scas
push
mov
adc
aaa
out
adc
test
xchg
inc
lret
into
sarl
repz
lret
in
in
push
inc
mov
fistps
lret
and
outsb
mov
fstps
mov
dec
and
adc
adc
loop
ss
fwait
in
sub
xchg
sub
xor
or
movsb
pop
div
xchg
mov
rclb
ss
mov
and
in
pusha
aam
sbb
xchg
xor
mov
dec
stos
mov
mov
divl
out
out
push
jmp
inc
sbb
push
mov
jne
lea
cmp
mov
lcall
data16
inc
out
add
push
jmp
out
push
data16
stos
je
pop
push
xor
je
lds
inc
fs
mov
popf
pop
and
rorb
push
insl
inc
jle
aas
mov
in
add
adc
int3
scas
mov
pop
rorb
mov
inc
jecxz
push
imul
lret
or
popf
adc
mov
push
cmp
aad
mov
sbb
mov
popa
sub
fsubl
xchg
push
ja
rorb
stc
inc
mov
loope
call
jb
pushl
jbe
rorl
jnp
or
xchg
mov
int3
add
movl
jg
mov
push
pop
shlb
dec
lea
and
and
test
cmpsl
lret
cs
pop
xchg
push
inc
jle
sbb
popa
enter
sbb
out
sbb
push
rcrl
lret
push
out
xchg
out
xor
mull
fildl
cld
cli
cld
mov
lea
push
sbb
jp
test
sti
outsb
pop
dec
dec
mov
sti
hlt
test
jo
xlat
jp
shll
icebp
inc
arpl
inc
inc
mov
jo
rolb
mov
jle
aas
xchg
pop
xlat
mov
adc
mov
nop
hlt
cs
cmp
xchg
dec
jecxz
aam
outsl
mov
mov
push
inc
dec
or
jecxz
mov
dec
and
push
jnp
repz
push
scas
sahf
jae
scas
dec
lea
sub
add
shlb
cmp
or
nop
pop
fs
push
push
sub
xchg
cmp
sbb
xchg
sbb
and
into
call
outsl
scas
xor
mov
bsr
ljmp
xlat
jl
xor
leave
pop
jae
jle
adc
mov
ret
mov
cld
outsb
and
ret
rclb
jmp
stos
fildll
fcmove
mov
js
lcall
clc
cmpsl
in
inc
push
adc
xchg
fwait
inc
mov
icebp
dec
jbe
xor
and
or
outsb
fwait
rcr
sysret
std
arpl
int3
push
test
or
push
adc
out
jg
fsubl
xor
in
mov
mov
enter
lock
daa
scas
sbb
mov
push
xchg
loop
push
xchg
pop
cmp
mov
lock
fnstsw
fbld
inc
shl
jb
or
sbb
lahf
mov
fldcw
shlb
jge
lret
test
jae
popa
sarl
sarl
mov
insl
fldenv
pop
inc
daa
mov
and
sbb
cmp
lods
js
xchg
insb
mov
mov
push
sub
aaa
cmc
jno
sub
ret
cmpsl
mov
xchg
aam
daa
out
jge
pop
rcll
add
jg
push
scas
popf
mov
push
out
jge
cmp
push
or
repz
xor
fadds
xchg
pop
pop
mov
push
inc
pop
fistpll
sbb
mov
test
in
dec
pop
xor
xchg
cmp
sub
fbld
in
mov
out
rorb
cltd
inc
jmp
mov
leave
cwtl
cmp
pop
cld
bound
jmp
sahf
pop
mov
xchg
jecxz
dec
loop
fldenv
xor
push
mull
fistpll
movsb
sahf
or
lret
loope
loop
jmp
jmp
fcmovu
lahf
cmp
test
cltd
mov
add
push
jnp
lods
push
add
sub
test
imul
daa
mov
mov
test
mov
cmp
pushf
xor
sti
fdivrl
sbb
cli
adc
mov
pop
call
dec
movsb
gs
cs
xlat
and
divb
xchg
sbb
or
and
cmp
jb
scas
dec
mov
mov
bound
inc
or
addr16
dec
lods
or
inc
stos
sub
lods
outsb
in
xchg
loope
mov
xchg
fwait
inc
outsb
icebp
or
push
jb,pn
mov
scas
lret
jmp
mov
enter
sub
adc
or
xchg
call
shll
pop
jo
les
adc
pop
jno
jo
jl
ljmp
push
les
iret
fmull
sbb
jmp
lea
imul
sbbl
pop
mov
sbb
jecxz
sbb
ret
push
push
push
div
sbb
cmpl
pop
sub
add
sbb
jg
pop
add
inc
pop
pop
scas
xorb
cmp
add
mov
and
inc
jne
sbb
popa
fld
movsb
lahf
sbb
cs
pop
pop
jnp
addr16
imul
add
aas
int
sub
jns
sbb
adc
mov
mov
cs
cmp
xlat
xor
aam
mov
sub
inc
mov
pop
gs
add
gs
mov
pop
scas
shl
test
scas
sbb
pop
and
cs
outsb
xlat
cmp
outsl
int3
test
mov
fisttpl
insb
hlt
add
xchg
sub
adc
gs
cmc
push
sbb
stc
lods
jae
cs
sub
mov
pop
out
push
dec
mov
add
add
std
xor
and
xchg
sarl
cmp
outsb
xchg
mov
dec
mov
nop
dec
popa
popf
cmpsl
cmp
movsl
jns
xor
mov
negb
jl
cmpsl
js
fimull
mov
pop
flds
xor
inc
sub
inc
mov
jnp
dec
in
jl
pop
stc
std
in
mov
add
add
inc
loopne
jmp
xchg
aaa
sbb
repz
adc
cmp
es
mov
stos
fcomi
jle
daa
add
aad
imul
js
mov
xchg
pop
xor
mov
jae
into
insb
pusha
mov
sub
mov
xchg
xor
dec
shr
pop
addr16
cwtl
jge
xor
popa
xor
sqrtps
and
mov
and
popa
mov
push
mov
add
cli
jp
xchg
imul
cmp
pop
adc
adcl
movsl
daa
loop
xor
test
paddb
cmpsb
cmp
inc
push
cmp
cmpsb
cltd
xchg
insl
divl
ss
out
insb
icebp
test
outsb
push
xchg
mov
repnz
xor
frstor
or
cmpsl
leave
inc
add
mov
pop
test
dec
addr16
jl
sbb
lea
push
jo
incl
cmpsl
or
pop
mov
or
test
xor
push
pop
inc
out
and
or
adc
clc
pop
test
sub
cmp
and
pop
mov
mov
push
add
mov
cwtl
je
mov
or
jge
inc
in
jo
stos
inc
cmp
lret
add
xchg
jl
arpl
insw
pop
mov
pop
subb
loope
sbb
div
out
int3
sbb
or
iret
rolb
je
imul
adc
mov
pop
lcall
ret
adc
inc
les
int3
inc
add
call
lods
int
or
adc
out
mov
test
cmp
inc
insl
and
test
xor
push
dec
add
mov
mov
jmp
sbb
adc
and
cld
pop
scas
push
repz
mov
or
movsb
or
sahf
mov
xchg
inc
xor
lret
jle
inc
lret
stos
movsl
fildll
ficoml
pop
cmc
push
or
mov
push
add
mov
inc
mov
hlt
cmpsl
ds
test
pop
jg
jae
dec
hlt
sar
ret
aam
push
sbb
into
and
int
adc
aaa
mov
leave
jmp
jmp
out
imul
push
and
test
inc
rol
cmc
jb
insl
dec
xchg
xor
dec
aam
ja
lock
add
xchg
cltd
fcompl
jne
sbb
sahf
sbb
cli
mov
jnp
add
mov
test
scas
test
mov
pop
daa
dec
adc
xor
mov
pop
jno
sbb
ror
xchg
fwait
sahf
mov
mov
mov
push
ja
out
stos
cmc
dec
sbb
gs
popf
imul
or
cld
hlt
sbb
cmp
jge
repnz
cmp
inc
jmp
mull
sbb
dec
imul
in
xchg
stos
xchg
inc
jl
int
insb
xchg
int
in
add
xor
push
add
test
fists
lock
cmc
mov
jecxz
das
or
mov
xchg
jp
ret
scas
fbstp
mov
cmpsl
fcomps
sbb
sub
add
push
push
pop
xor
sahf
jl
push
jno
lock
js
add
xchg
pmulhw
out
in
xchg
sbb
lods
loope
cmp
mov
mov
inc
cltd
jle
sti
and
mov
inc
mov
jle
and
and
repnz
push
out
fstps
fadds
cmp
cmc
lea
popl
jle
push
or
test
dec
gs
fnstsw
mov
and
mov
loop
xor
mov
scas
lcall
xchg
and
test
mov
lods
popf
scas
push
lea
mov
pop
jne
jbe
sarl
cmpsl
int
jle
pusha
push
iret
aad
lock
lret
hlt
sub
sbb
mov
stos
scas
pusha
or
inc
adc
pushf
shl
sub
repz
jp
dec
addr16
ret
adc
or
std
int3
insb
push
rep
fldcw
mov
outsb
movb
add
addr16
fcomps
ret
imulb
outsl
pop
das
mov
xchg
add
mov
cmp
fnstcw
and
enter
add
ficoms
mov
cltd
dec
mov
pop
out
pusha
inc
or
dec
mov
pop
shll
inc
repnz
cmp
mov
sbb
mov
fcompl
xchg
push
mov
ss
mov
pop
cltd
xchg
xlat
dec
iret
movsl
enter
add
inc
push
and
ret
out
add
es
cld
ret
mov
mov
jge
mov
pop
mov
push
imul
mulb
inc
insl
ret
push
repnz
lods
iret
or
adc
aaa
leave
fucomi
dec
rclb
fdivrp
pop
push
out
dec
xor
dec
aaa
rcrb
outsb
add
dec
inc
dec
mov
nop
mov
fistl
xor
mov
stos
loop
mov
sbb
jmp
int
sub
fcompl
stc
pop
je
mov
mov
lods
dec
mov
popf
or
inc
cwtl
mov
cli
mov
dec
std
cmc
xchg
aam
je
or
cmpsb
sbb
pop
cli
cs
pop
jo
push
jge
insb
into
fwait
inc
sbb
dec
add
in
fdivr
pusha
outsl
mov
repz
std
es
and
test
push
inc
pop
or
xlat
jmp
adc
fisubrl
icebp
fdivl
repz
lea
std
mov
or
repnz
add
push
xchg
cmp
mov
and
pop
neg
mov
push
or
cltd
bound
sbb
scas
sbb
push
push
inc
js
outsb
imulb
push
stos
fbld
push
int3
lahf
jbe
test
mov
fists
daa
and
lods
xchg
xor
into
jp
or
out
aas
loope
insb
xor
imul
xor
add
mov
or
cltd
jp
in
sarb
xchg
fnstenv
inc
bound
push
pop
fldcw
lds
adc
cwtl
lcall
pop
mov
ja
push
fidivrl
jo
mov
daa
sti
cli
test
insb
xchg
movsl
xor
or
inc
repnz
mov
sbb
pop
xchg
or
sub
cmp
mov
add
mov
adc
adc
les
ja
mov
test
mov
pop
mov
test
dec
popf
insl
jg
call
in
jl
sbb
bound
xchg
push
inc
in
fisttpll
mov
cmc
test
lods
roll
pop
xchg
shlb
xor
fnstcw
inc
pushf
hlt
ficoml
jno
sub
pop
sarb
les
push
insl
stos
imul
addr16
shrl
clc
loopne
clc
lds
push
push
nop
lret
adc
push
mov
das
clc
out
push
rorb
popl
decb
pop
push
stos
mov
add
mov
leave
push
sti
cmp
shl
push
repz
shl
jle
lret
repz
mov
mov
push
fwait
scas
pop
into
dec
push
fincstp
pushf
hlt
cmp
dec
and
jge
icebp
jg
int
adc
and
jae
or
repz
dec
or
add
xor
out
xchg
les
fsubl
mov
mov
cltd
call
sbb
aad
and
into
dec
enter
dec
mov
cmc
and
test
sbb
pop
or
sbb
pop
imul
mov
movsb
jl
mov
inc
int3
mov
mov
in
ja
out
es
out
mov
mov
fwait
enter
mov
jl
adc
fnsave
je
loop
fdivs
sub
cltd
lret
ljmp
or
fildll
in
jbe
xor
lcall
mov
cmp
pop
insl
pop
mov
sub
int
scas
pushf
inc
fists
push
stos
cmp
mov
fiadds
adc
divb
data16
jecxz
inc
pop
flds
add
jne
rolb
sub
and
in
arpl
xchg
orl
rcrl
jbe
lret
push
push
sub
lcall
sbb
mov
lds
mov
pop
sub
inc
xor
add
fldl
in
push
das
sar
mov
sar
cltd
popf
cmp
push
ret
or
cmpsb
test
int3
adc
cmp
jnp
push
dec
jmp
cs
call
and
cmp
jmp
ret
pop
mov
jge
mov
shll
push
cmpsl
imul
sbbb
add
js
pusha
int3
andl
add
and
sbb
cmc
bound
das
test
lea
lods
sub
sbb
in
daa
xchg
arpl
sub
lea
mov
lahf
fstpl
movb
mov
nop
lret
push
ss
gs
lret
jnp
sbb
pop
fsubl
sub
add
insl
and
lcall
sti
inc
mov
movsl
repnz
test
dec
pop
mov
arpl
push
cmp
jecxz
mov
fnsave
mov
pop
les
sbb
test
daa
jmp
push
xorl
addl
into
mov
xchg
aas
xor
mov
subl
jecxz
std
es
lods
and
std
mov
jecxz
pop
les
cmp
repnz
stos
add
pop
stos
sbb
cmp
push
push
jle
inc
lret
enter
jae
shr
push
in
hlt
pop
stos
xchg
adc
mov
sar
lock
sub
mov
daa
adc
ljmp
pop
out
lock
inc
add
sarb
ret
mov
cld
jns
cli
mul
jmp
test
jle
xor
mov
cltd
adc
or
dec
inc
and
cmp
xor
loope
mov
pop
xchg
sbb
sub
pop
add
in
insb
aas
fwait
enter
repnz
sbb
lret
je
push
cld
inc
aaa
mov
adc
and
xor
sbb
add
lods
add
mov
ljmp
push
add
pop
add
inc
fwait
push
dec
scas
xchg
les
mov
pusha
sub
and
pushf
popa
mov
psrad
add
jno
or
inc
sahf
gs
notl
xor
mov
repnz
das
sbb
mov
mov
push
push
adc
dec
ljmp
xor
mov
fbld
sbb
dec
mov
adc
jp
xor
inc
dec
out
lds
xor
mov
xchg
insb
pushf
mov
or
imul
push
out
shlb
popa
pop
scas
ds
mov
inc
cmp
mov
int3
out
cli
enter
xchg
stc
cs
xchg
popa
add
aas
fisttpl
mov
jnp
repnz
cwtl
imul
dec
clc
push
mov
jne
fsubl
lahf
daa
mov
pop
insb
adc
pop
popa
inc
xor
mov
pop
test
lret
jmp
ja
xchg
mov
gs
xor
jp
mov
sub
nop
xlat
jl
sub
adc
dec
pop
cmp
ret
inc
xor
or
push
sti
pushf
mov
repnz
and
ret
push
mov
sbb
out
mov
sub
faddp
cmp
mov
cmc
es
cmpsb
std
jnp
mov
or
lahf
loopne
jb
adc
xor
insb
adc
enter
mov
cmp
test
cmc
lock
cs
or
xchg
or
into
dec
mov
inc
scas
test
out
mov
sarl
lea
les
fs
out
fnstsw
inc
pop
fdivrp
inc
mov
test
pop
dec
mov
cli
cltd
jg
sub
dec
jne
addr16
adc
insl
cmovns
test
mov
cmp
ss
cs
enter
fiadds
mov
imul
loope
push
rcl
xorb
xchg
mov
cmpsb
insl
sbb
sbb
ljmp
push
xor
fs
sub
inc
add
mov
mov
push
scas
testb
in
push
imul
sbb
or
gs
popf
into
pop
xchg
sub
mov
mov
mov
mov
push
cmp
shlb
out
xlat
push
mov
xor
or
xor
lea
nop
pause
dec
loop
cld
in
lock
inc
xchg
and
les
arpl
loop
mov
jge
in
xchg
loope
stc
xchg
xor
pusha
cmp
arpl
iret
mov
mov
imul
movsb
sub
out
adc
xchg
repnz
sub
or
iret
in
push
mov
loop
in
filds
arpl
inc
int3
rorl
lods
stos
and
xlat
into
add
pop
out
stc
mov
sbb
fsubr
ret
inc
mov
fwait
xchg
scas
rcll
lret
xchg
or
jge
std
fcomi
inc
rolb
jp
cltd
icebp
inc
add
test
mov
ljmp
fstpt
outsl
jb
push
fsubl
pop
and
add
mov
dec
out
dec
jl
insl
push
jb
adc
lods
rol
push
jmp
dec
mov
dec
mov
jae
je
xor
pop
pop
fbstp
mov
sub
cmpsb
cmp
outsl
and
add
sbb
xchg
dec
fadd
mov
clc
pushf
out
dec
jno
scas
outsl
bound
xchg
bound
xor
mov
mov
jg
lcall
cmp
push
dec
pop
xchg
and
icebp
shll
cs
repz
mov
fidivs
cld
inc
test
test
ret
addb
dec
sub
pop
sbbl
jle
ret
xchg
cltd
into
popf
mov
test
and
andb
movsl
inc
aad
dec
mov
das
rcrb
mov
loopne
and
and
test
pop
sti
cmp
xchg
push
or
lods
inc
adc
leave
cltd
ret
out
stos
cmp
jo
cmp
and
test
mov
mov
mov
add
int3
xor
pminub
shrl
int3
addb
dec
in
pop
xor
call
comiss
shl
adc
add
ds
lcall
test
dec
stos
pop
scas
pop
fists
loop
stos
adc
adcb
sti
repz
xchg
sbb
inc
mov
clc
mov
jae
divb
or
int
lret
sub
sub
or
add
mov
inc
lds
addr16
jne
push
movsb
popf
adc
out
leave
mov
xchg
lock
sub
mov
mov
mov
lock
fildll
bound
dec
push
pop
mov
fbld
jle
push
daa
inc
lahf
and
mov
jnp
add
jae
cmp
div
push
out
clc
inc
cmp
adc
mov
xchg
mov
pop
xorb
in
xchg
je
pusha
ret
xor
mov
lock
bound
lahf
int3
pop
xchg
pop
scas
jle
xorb
pop
push
fdivrl
repnz
xor
cmp
push
lods
pop
xchg
mov
adc
sub
inc
nop
dec
std
jno
or
ds
leave
jb
mov
out
arpl
leave
push
lods
sti
xchg
inc
cmpsl
insb
es
movsl
pop
enter
dec
or
xor
int
in
clc
ds
mov
adc
cmp
mov
orl
loope
jmp
mov
mov
enter
adc
jecxz
fisttpl
cmp
cmp
cmp
pop
call
jp
inc
jg
pop
movsb
xor
fsubrs
repz
test
bound
pop
lret
pusha
push
cmp
cmp
stc
adc
mov
je
xlat
or
lret
mov
in
popa
bound
aad
ret
mov
add
outsb
cwtl
or
dec
lods
xorl
stc
int3
sbb
adc
push
jne
mov
in
or
out
clc
sbb
mov
lahf
xchg
mov
mov
sub
inc
push
movsb
jnp
subl
out
mov
jl
jb
xchg
sbb
pop
mov
sbb
roll
rorb
jg
scas
sbb
orb
add
pop
outsb
xor
aas
pusha
xchg
movsl
adc
push
push
mov
daa
and
dec
xchg
push
sub
negl
xchg
les
sub
int
addr16
mov
dec
lods
inc
loopne
shll
cmp
ficompl
jbe
bound
add
add
sub
mov
push
sti
je
sbb
lcall
jle
dec
jmp
fists
adc
movsb
pop
test
sbb
mov
cmp
xchg
push
mov
jo
hlt
icebp
stc
dec
aaa
fs
mov
lahf
notl
popf
es
pop
cmpsb
mov
gs
popf
gs
nop
mov
inc
pusha
lock
cmp
icebp
pushf
jmp
cmp
aas
sar
xor
icebp
lahf
test
xor
push
decl
pop
test
jbe
pop
cwtl
mov
ds
xor
mov
pop
aam
mov
and
adc
adc
mov
jmp
inc
push
js
xchg
dec
mov
dec
adc
xchg
adc
mov
mov
inc
cltd
in
add
push
adc
cs
test
rcrb
mov
and
scas
sbb
or
jecxz
push
mov
pop
les
pop
cs
inc
dec
pop
mov
xchg
lock
inc
inc
jl
daa
xor
loop
loope
les
aad
sbb
hlt
outsl
out
and
repz
cmp
adc
adc
pop
push
jbe
lods
enter
addl
pop
rolb
or
outsb
adc
sbb
mov
jbe
js
sahf
test
and
pop
pop
xor
lods
jae
cmpsb
mov
xor
or
test
xchg
out
push
negl
mov
je
imul
push
pop
fnstsw
push
adc
jmp
and
adc
push
aam
sahf
pop
lret
movups
mov
add
adc
in
and
inc
pusha
lods
pop
inc
cmp
adc
sbb
adc
in
and
scas
mov
jne
jl
leave
jne
andl
pop
dec
mov
inc
dec
cmp
je
js
shrb
cmp
in
pusha
pop
inc
jo
inc
lods
pop
xor
and
sbb
xor
jae
lock
xor
mov
mov
sbb
xchg
pop
jmp
jle
leave
sbbb
shlb
dec
cmp
cmpsw
cs
push
in
lret
lret
mov
sub
not
push
arpl
jno
mov
sbbl
dec
and
mov
dec
test
addr16
jge
sub
es
sarb
cmpl
fnsave
sub
cmp
xchg
outsb
enter
xchg
jnp
add
cmovb
fistl
adc
sbb
in
outsl
pop
sarb
xor
and
push
fadds
loope
mov
sub
daa
rcrl
or
cmp
mulb
cmpsb
push
cld
icebp
dec
sbb
xor
ds
pop
fisttpl
push
das
pushf
adc
outsl
mov
into
xor
inc
push
xlat
xchg
cmpsl
jg
and
in
xchg
jmp
adc
mov
dec
xchg
popa
xor
aas
sub
repnz
aaa
xor
insb
sbb
pusha
je
icebp
orl
cmp
out
xor
js
xor
stos
enter
mov
call
out
cmp
ds
lods
jge
call
inc
or
adc
xchg
out
adc
mov
mov
shl
jo
testl
ss
into
popa
xchg
push
jbe
call
sub
cmp
mov
arpl
inc
xlat
inc
dec
ss
add
incl
or
push
pushf
pop
mov
xchg
xchg
cmp
pop
mov
in
movsl
bound
xor
push
push
in
lds
mov
or
shrb
lcall
js
maskmovq
xor
mov
lret
popl
jmp
cmc
movb
mov
scas
clc
xchg
aad
jbe
loopnew
mov
lea
lahf
inc
mov
and
cmp
je
xor
mov
xchg
pop
pop
lods
in
leave
xor
fistpll
and
call
in
in
subl
adc
iret
jmp
jno
mulb
mov
lods
enter
filds
cwtl
sbb
push
mov
ss
push
filds
mov
aas
pop
gs
mov
popf
ljmp
pop
ficomps
les
roll
in
pop
push
sub
addr16
pop
cmc
jmp
and
repz
fiadds
sbb
mov
in
xchg
pop
lahf
shl
lock
jns
dec
mov
or
nop
or
mov
lret
es
insl
js
adc
cwtl
pop
add
idivb
xor
mov
push
xor
faddl
pop
add
das
repz
lock
sub
in
pop
dec
jmp
lds
lret
mov
push
inc
fldl
inc
jae
xchg
pusha
pop
mov
out
das
push
push
xchg
test
and
xor
cs
cli
stc
push
sar
inc
xor
sbb
test
sahf
dec
shll
pop
clc
imul
stos
pop
lock
jle
rcl
popf
dec
and
sub
mov
dec
pop
inc
jbe
sub
push
jp
addr16
dec
xchg
cltd
outsb
and
push
ja
pushf
shl
push
mov
int3
push
inc
icebp
mov
pop
xchg
lock
fcomps
inc
xchg
pop
andb
aam
popf
cmp
mov
mov
cld
jmp
testb
sbb
insl
jne
jp
add
les
or
jnp
out
cmpsb
lods
xchg
sbb
push
dec
aas
addps
pop
mov
imul
dec
cs
dec
imul
mov
daa
fldl
xlat
scas
adc
leave
fs
test
dec
bound
jg
and
popa
xorb
das
lods
lods
popw
lods
out
icebp
movsl
ret
xchg
int3
mov
push
or
xor
stos
pop
cmpsb
lahf
xchg
ljmp
xchg
add
inc
sub
jp
icebp
sbb
sbb
insl
enter
test
and
sub
dec
test
xlat
test
mov
repz
ss
mov
mov
aaa
adc
mov
fsubr
test
arpl
jecxz
test
or
iret
cmp
pop
mov
arpl
jge
js
std
push
mov
jle
or
fucomp
pushf
pop
sbb
push
adc
push
lods
scas
mov
xlat
mov
xchg
icebp
mov
and
ljmp
cwtl
adc
inc
xchg
fistpl
scas
or
iret
adc
push
idivb
or
dec
xchg
lock
cmp
ljmp
jmp
cmp
out
xor
push
stos
dec
cmp
jle
insl
sub
rorb
cld
sbb
out
push
stc
test
lret
and
xchg
pop
inc
test
mov
cmp
rorb
adc
js
lods
andb
loop
fs
rcr
leave
mov
sbb
add
stos
movb
push
addl
je
fnstsw
sub
dec
flds
out
out
fadds
insl
xor
into
mov
xor
and
ffree
jns
outsb
adc
pop
mov
sti
aad
decl
and
inc
adc
mov
jle
add
in
mov
ljmp
xchg
and
fmul
loop
xadd
lea
or
ss
movsl
xchg
adc
into
inc
pop
jae
mov
shrb
das
mov
sub
mov
aaa
ss
cwtl
rcrl
cli
mov
sub
sub
loope
repz
mov
and
je
xchg
repnz
faddl
insl
out
enter
cmp
inc
shlb
lret
stos
scas
xchg
jb
rclb
fildl
repz
jmp
inc
inc
aas
jno
in
mov
dec
or
inc
dec
pop
out
mov
jnp
xor
xchg
cmc
clc
mov
mov
stc
mov
mov
int
adc
imulb
jle
adc
sbb
xor
test
sbb
lcall
sar
push
add
call
loop
ja
out
sti
pushf
sbb
cmc
or
fisubrl
ss
jbe
enter
sbb
push
test
push
push
ret
add
lret
arpl
int3
jge
push
cmpsb
mov
jae
scas
ja
jmp
clc
mov
inc
cli
sti
sub
sub
mov
or
push
daa
pop
cmp
and
flds
xor
push
lds
pop
cmp
pop
notb
cltd
add
mov
xor
push
add
push
scas
or
xor
sbb
enter
test
mov
mov
imul
pop
out
mov
mov
bound
lods
mov
aad
mov
sti
mov
pop
loope
insb
sub
inc
mov
stos
sahf
lds
mov
imul
repnz
sub
ret
lods
jne
xchg
push
pop
test
or
gs
xchg
loopne
mov
jge
fs
push
push
pop
adc
test
data16
loop
ficomps
and
adc
jg
and
push
sub
out
mov
dec
pop
xchg
pop
je
fisttps
ljmp
mov
cmc
insl
ss
test
pop
fwait
imul
out
andl
movsl
mov
lahf
and
push
and
push
or
pusha
sahf
lods
pop
daa
sbbl
and
sbb
jmp
sbb
imul
jle
aam
lcall
data16
fwait
add
sti
subl
add
out
or
xchg
and
cmp
jo
mov
adcl
popa
push
sub
dec
dec
mov
mov
push
and
addr16
mov
ficompl
cmp
push
sub
outsl
lods
xchg
sti
xor
out
int3
xchg
cmp
dec
mov
cmp
or
cmp
das
or
stc
adcl
aam
mov
jp
stos
lahf
icebp
lcall
jle
jp
xor
mulb
sub
jge
sbb
pop
imulb
sub
xchg
push
hlt
inc
cli
inc
cli
cmp
mov
sbb
pop
jae
push
aaa
xchg
push
roll
jg
dec
scas
dec
mov
adc
out
data16
mov
daa
add
out
mov
sti
cmp
jecxz
dec
add
bound
movsb
mov
push
jne
or
arpl
lods
cmpsb
jne
scas
int
push
lds
pop
loopne
or
dec
or
popa
stos
xlat
jae
or
scas
adc
cld
mov
inc
sarl
pushf
scas
or
pop
sub
and
scas
ja
cmp
pop
fisttpll
jae
adc
fstps
jno
imul
and
push
in
mov
inc
insb
dec
inc
lea
pop
mov
jnp
pop
or
test
jl
aas
test
adc
out
lds
stos
mov
fnstenv
shll
call
or
int3
ss
shlb
aam
mov
jae
repnz
loop
cmp
cltd
push
addr16
sub
dec
mov
jne
mov
test
push
jecxz
xchg
push
out
loop
mov
fstps
xor
jle
mov
test
mov
stc
aad
movb
fiadds
dec
icebp
mov
or
icebp
ljmp
adc
add
outsb
pushf
loopne
daa
in
push
aam
cli
mul
mov
lret
xchg
xor
into
pop
ret
adcl
cmc
inc
push
sbb
sbb
pusha
dec
iret
cmp
push
push
xor
cmp
repnz
fistpl
out
jmp
out
sbb
lds
mov
and
mov
sbbb
xchg
sbb
xchg
sti
push
jbe
or
push
stos
movzbl
fstps
scas
mov
lods
xor
mov
jge
ds
mov
inc
imul
mov
enter
jp
into
xlat
fmul
aad
cmp
push
pop
test
jmp
call
jae
in
test
imul
jae
stos
out
aas
mov
cmp
roll
dec
ret
out
int
inc
and
push
mov
or
outsl
pop
pop
aaa
jmp
xchg
mov
shlb
jmp
pop
sub
sar
jmp
mov
imul
ret
xor
sbb
mov
ret
out
enter
mov
dec
xchg
dec
ljmp
add
notb
jp
cmp
sbb
jle
mov
test
mov
frstor
pop
fstl
daa
jg
push
cmpl
xchg
arpl
or
cmpsb
push
cmp
cmp
pop
jo
in
bound
mov
in
jge
mov
ret
push
add
and
loope
mov
lods
dec
push
cmp
mov
cmpsb
mov
dec
movsl
adc
jp
mov
enter
add
mov
inc
push
jmp
xchg
ja
bound
add
adc
push
mov
lods
lcall
cmpsl
xchg
and
loop
dec
es
mov
mov
xor
or
gs
jb
cmp
xor
aam
cwtl
adc
insb
mov
pop
or
jle
push
add
fucomip
ljmp
mov
aad
xchg
jp
cltd
test
mov
rol
sub
stos
into
or
push
cs
mov
xchg
test
cmp
jno
ljmp
inc
jae
adc
adc
sbb
lret
jae
iret
in
mov
jp
sbb
mov
inc
lahf
arpl
and
mov
add
in
or
add
push
push
sbb
dec
test
lea
in
in
cmpsb
in
and
int3
hlt
pop
movsb
jo
jns
lret
and
pop
cwtl
in
xchg
xchg
inc
xchg
cltd
and
pop
sbb
cmpsl
pop
les
leave
and
mov
mov
xchg
gs
cmpsl
and
inc
mov
fcoml
movsb
daa
aad
jns
hlt
into
cmpsl
out
ror
ret
mov
push
daa
sti
in
xchg
lock
ljmp
push
sub
es
js
mov
out
hlt
jbe
lds
and
stos
adc
imul
push
mov
or
movsl
cmpsl
fistpll
push
jae
push
repz
dec
loope
adc
xor
mulb
inc
mov
xchg
cmp
in
xchg
add
cmp
aaa
iret
xchg
add
dec
jecxz
jecxz
enter
mov
scas
int
lahf
cwtl
xchg
gs
outsl
cmpsl
mov
sbb
sub
sub
aad
xchg
hlt
cmp
push
cmpsb
icebp
mov
mov
lock
inc
xorb
lock
pop
loopne
cli
cmpb
in
imul
mov
cmp
pop
or
call
aas
ret
or
mov
fnsave
lods
dec
lds
flds
xor
test
hlt
movsl
mov
fsts
xor
xchg
jecxz
daa
push
es
push
fidivl
repnz
and
push
into
pop
cmpsl
mov
xchg
sbb
les
lcall
fbld
into
mov
les
test
popa
cmpsb
in
sbb
lret
pop
mov
pop
loop
fsubs
and
movsb
adc
sub
add
jl
fs
pop
stos
nop
dec
pop
jp
or
jne
lret
cmp
stos
push
outsl
fnstenv
and
add
xchg
dec
addr16
pop
fdivrp
sub
mov
xor
in
rcll
pop
insb
ficompl
sahf
push
out
stc
test
sbb
inc
cmp
cli
arpl
lea
mov
lcall
into
cld
mov
lea
scas
pop
leave
out
sub
leave
xchg
pop
dec
movsl
orl
mov
movb
in
ss
xlat
out
les
mov
sbb
int
popf
dec
imul
pop
jp
sbb
pop
hlt
sbb
sub
aam
test
mov
sbb
cmc
arpl
adc
push
fiadds
les
mov
int3
icebp
pop
fmul
stc
cwtl
sbb
jne
pop
aam
lret
mov
lds
jb
mov
lret
xor
pop
scas
jge
pop
insb
inc
pusha
jnp
cltd
shld
sub
call
jmp
mov
outsb
jge
mov
bound
addr16
pop
into
bnd
push
jle
test
xchg
dec
push
into
dec
dec
out
xor
xor
jbe
imul
mulb
test
jno
dec
sbb
rolb
aaa
xchg
dec
icebp
xlat
mov
loopne
aad
js
shlb
daa
xor
xchg
sub
mov
sbb
or
jecxz
gs
cmp
push
dec
lock
je
xor
test
repnz
mov
mull
lods
rorb
inc
sti
inc
in
loopne
xorl
lret
js
and
or
xor
aad
scas
xchg
mov
jno
mov
pop
xlat
lea
call
out
jnp
lods
cmp
fwait
data16
sub
movsb
add
dec
add
ficoml
jmp
test
test
xchg
rcll
ficomps
push
hlt
ds
mov
jb
cli
push
lret
add
repz
cmp
popf
pop
fsubr
test
pushf
inc
sti
mov
inc
mov
xor
mov
jo
testb
and
or
dec
int
xor
aad
int3
sbb
mov
xchg
popf
sahf
cltd
add
dec
stc
lds
jnp
mov
arpl
add
lcall
enter
ret
and
xor
jb
or
pop
add
mov
jne
imul
jno
mov
ds
aaa
mov
sahf
inc
pushf
sbb
lds
out
adc
lret
insl
call
push
adc
cmpsl
mov
jge
xchg
popa
xchg
jge
je
adc
mov
clc
jl
cmpsl
or
lock
sub
inc
cmp
nop
push
sti
sbb
arpl
decb
lods
rclb
pop
test
inc
jmp
lahf
inc
int
clc
add
xchg
adc
or
es
aas
push
rclb
cmp
incb
jbe
test
sti
sbb
scas
rcll
adc
ror
jmp
pop
nop
sbb
out
mov
test
xchg
js
adc
push
pop
cmp
mov
cmpsb
mov
fisubs
rcll
and
cmp
fsubl
ss
faddp
inc
sahf
jmp
pop
clc
xor
pop
sbb
mov
repz
subb
aaa
dec
mov
add
cmp
adc
or
cltd
xchg
mov
pop
sbb
dec
push
lds
push
js
popf
mov
into
call
or
sub
pushf
dec
adc
mov
mov
and
fisubs
fcoml
fisttpl
int3
push
jb
loop
lods
jo
fldt
psubsb
dec
add
push
and
cmp
push
mov
lds
clc
es
inc
lods
test
push
inc
les
pop
xchg
add
cmp
daa
sbb
rorb
lahf
push
stos
fcmovne
in
push
mov
xlat
movsb
hlt
ds
loope
sub
dec
mov
ficompl
inc
mov
lods
lret
adc
insl
push
imul
sbbl
je
add
mov
mov
leave
shll
add
cmp
xor
ds
ds
insl
inc
mov
cmp
cmp
cmpsl
xlat
mov
mov
adc
xor
iret
fcomip
jl
mov
pop
iret
leave
push
add
cwtl
jmp
jle
daa
cltd
or
outsl
fs
sti
dec
push
inc
shlb
cli
dec
cltd
rcr
es
jp
xor
pop
lahf
dec
andb
xchg
cli
std
push
ret
add
mov
cmpsl
ret
pop
dec
lret
pop
mov
ret
fstps
gs
rcrb
dec
mov
cmp
jmp
ret
cmp
dec
mov
stos
std
aaa
call
insb
add
pop
xchg
dec
jne
inc
rcrl
push
sti
jecxz
dec
ret
scas
fnstcw
push
mov
jnp
or
insb
fcmovne
or
lods
push
sub
iret
iret
aad
mov
sub
dec
cmp
and
icebp
jne
add
fldt
cmp
mov
pusha
test
xchg
sti
adc
lret
mov
inc
push
push
dec
iret
or
stc
andb
mov
add
sub
ret
out
mov
sub
in
xchg
pop
pop
movsb
jne
clc
pop
jae
scas
and
add
hlt
xchg
test
adc
ret
out
dec
fiaddl
data16
inc
add
sbb
stos
push
lcall
add
mov
sub
inc
inc
lock
in
lahf
pop
daa
sahf
lods
das
xor
push
inc
push
inc
pop
addb
shl
repz
jp
jmp
sbb
push
mov
out
mov
cmp
das
fiadds
dec
arpl
mov
nop
nop
and
adc
das
out
push
mov
lcall
movsl
mov
inc
ret
jb
inc
shr
adc
and
rcrb
push
es
fwait
stc
mov
loop
adc
mov
jp
dec
mov
lcall
cwtl
inc
jno
cmp
scas
adc
dec
sti
mov
xchg
sub
rcrl
cmp
or
push
jae
pop
movsb
lods
and
clc
xchg
lcall
aas
ror
loope
jno
xchg
sbb
jns
cmp
inc
fisttpl
addr16
jne
mov
popa
adc
cld
stos
loop
xchg
out
mov
cmp
adc
xchg
and
or
adc
imul
pop
lret
xlat
enter
in
cmc
mov
jae
push
lret
repnz
mov
or
out
daa
mov
insl
xor
mov
adc
mov
xchg
lods
ljmp
mov
je
push
sbb
jne
and
lcall
rcrl
jg
outsb
pushf
leave
lret
xor
pop
inc
popa
sub
pusha
iret
pop
xlat
pop
fmull
stos
repnz
cmp
pop
xor
subl
mov
jb
sti
dec
and
paddb
out
xchg
jecxz
jae
pop
push
xchg
fistpl
push
rol
insb
mov
divl
mov
jo
xchg
cmp
cwtl
push
int3
mov
mov
scas
pop
jb
insb
popa
icebp
lcall
and
je
mov
jge
mov
dec
inc
int
pushf
xchg
or
push
les
icebp
pop
pop
imul
jns
sub
fs
popf
pop
in
mov
cmp
bound
mov
push
jmp
sbb
sti
imul
xorl
repnz
add
imul
int
mov
sub
ret
imul
lds
out
xor
mov
test
into
stos
push
push
mov
xor
gs
xchg
movsb
fcmovb
sbb
shll
inc
mov
dec
mov
sbb
push
scas
popa
inc
lret
jnp
and
dec
mov
imul
cmc
sbb
lods
sub
sbbb
rcrb
fcoms
das
outsl
sbb
sahf
out
inc
lods
cwtl
sbb
mov
cltd
inc
addr16
ljmp
fsubrp
js
repz
in
xchg
test
mov
push
dec
dec
pop
xlat
or
test
push
xchg
sahf
xlat
fwait
pop
mov
or
cli
data16
inc
push
mov
xor
xchg
cmp
call
and
jbe
inc
es
outsb
mov
jp
in
roll
add
mov
push
fidivs
push
push
jg
cmp
push
jne
sti
mov
xor
imul
and
cld
and
mov
push
imul
pop
mov
gs
test
add
cltd
mov
subb
mov
or
and
cltd
std
xor
testl
hlt
imul
clc
push
into
lds
xchg
dec
sbb
lods
mov
adc
sbb
cli
subb
xchg
fdivrl
popl
fwait
push
lods
mov
mov
dec
push
mov
dec
adc
jl
fsubl
push
mov
inc
int
addr16
bswap
sbb
mov
push
push
dec
xor
dec
addr16
pop
push
pop
lcall
cmc
outsl
dec
addb
daa
or
xchg
xchg
lea
les
enter
cmp
jecxz
incl
aas
pop
xor
sbb
divb
scas
cmp
cmp
inc
ss
pop
xchg
push
sub
ret
jbe
fcoml
cmp
jbe
addb
inc
fs
mov
fistpl
jns
mov
pop
or
cmp
push
iret
popw
adc
scas
aaa
shlb
jmp
dec
addr16
push
and
dec
mov
out
ret
jecxz
mov
mov
adc
cmpsb
lahf
insb
adc
fsubrl
add
arpl
pop
jle
push
out
sbb
clc
data16
adc
add
pop
sti
stc
loope
ficoms
and
hlt
jnp
mov
loopne
push
adc
dec
fildl
clc
pop
cmp
mov
pop
jne
inc
insb
arpl
jne
add
movsb
or
int3
push
cmpsl
cmp
imul
arpl
adc
cmp
jp
cmp
push
push
imul
push
dec
imull
outsb
dec
iret
int3
mov
and
and
repnz
dec
pop
adc
xchg
int3
mov
inc
in
push
dec
jnp
add
dec
pop
out
mov
add
pusha
pop
push
hlt
push
inc
addb
fwait
sbb
sub
inc
push
pop
loop
lock
xorl
adc
xchg
cmp
rolb
lahf
leave
add
ja
rcrl
xchg
ret
or
fstp
hlt
sub
xchg
das
sahf
sbb
xlat
into
enter
ficoms
jno
mov
mov
adc
push
jle
popa
test
mov
sahf
xlat
jp
dec
cmp
loope
push
mov
mov
das
jg
xchg
hlt
imul
sbb
cmp
movb
sbb
aam
mov
dec
adc
xcrypt-ofb
cmpsl
das
aam
loopne
movsb
add
mov
popf
mov
adc
jo
cmp
inc
mov
jecxz
ds
cwtl
or
adcl
cmc
and
adc
fistpl
dec
mov
testl
mov
lods
clc
cli
repz
pop
imul
fiaddl
adcl
lock
imul
or
mov
in
cmpsl
decl
cmp
fwait
inc
xchg
mov
lods
ss
and
push
mov
and
jb
cmovl
xchg
inc
add
push
and
fbstp
fsubr
movsb
jnp
xor
movsb
fisttps
mov
push
addl
jle
jmp
adc
mov
in
or
pop
or
addl
xchg
dec
mov
xchg
push
pop
cmp
fstl
jl
pushaw
sub
mov
dec
cmpl
icebp
xor
gs
mov
jp
sarb
mov
js
mov
ss
and
int
xchg
in
dec
nop
dec
repz
cld
ret
setno
inc
nop
xchg
addl
std
test
inc
lods
sbb
js
stc
sub
stos
test
xchg
cltd
xor
neg
xchg
sbb
fsubs
imul
insb
or
std
sbb
adc
into
fucomi
pop
dec
push
in
daa
mov
mov
pop
repz
in
movsl
xlat
jmp
jns
int
cld
or
jmp
mov
mov
add
mov
jbe
insl
mov
dec
clc
sbb
orl
data16
add
js
xchg
add
jb
mov
xchg
fldt
pushf
jle
pop
mov
cs
add
push
adc
test
loope
std
inc
mov
in
sub
ffree
adc
int
leave
daa
les
push
mov
mov
adc
vpunpckhbw
popa
loopne
mov
push
xchg
jmp
test
mov
jl
jo
jge
mov
push
shrb
cmp
lret
ret
push
push
repz
inc
mov
notb
les
ljmp
int
imul
mov
imulb
test
gs
test
rcll
mov
mov
pop
pushf
inc
xchg
xchg
mov
int3
imull
jns
xchg
jp
mov
mov
outsl
lret
int
in
push
std
fistl
mov
shll
pop
les
cmp
jge
add
std
fs
xlat
mov
add
xor
pushf
xor
and
pop
jns
lahf
add
push
cld
mov
sahf
jl
dec
jecxz
sti
addr16
sbb
mov
add
lods
frstor
adc
adc
mov
aad
lds
cmpsb
pusha
sub
jmp
or
mov
xchg
adc
push
and
mov
aas
pop
int
in
insl
xchg
in
ja
in
mov
ret
out
mov
mov
mov
inc
pop
cmp
imul
mov
repnz
or
cmpsl
jmp
aam
ljmp
jle
cmp
divl
push
push
mov
mov
and
pop
test
nop
or
imul
shll
sub
in
lea
xlat
das
push
shlb
out
lock
mov
push
jns
pusha
sbb
rolb
dec
cmpb
mov
sub
in
xchg
xor
mov
push
add
push
adc
add
lds
int
arpl
popa
call
adc
cs
and
neg
adc
jge
lods
dec
in
stc
inc
push
push
into
jbe
pop
push
rcr
mov
in
pop
mov
mov
lret
das
sbbb
sarl
cltd
lahf
aad
adc
cmpsb
out
ds
sub
push
jbe
xor
lods
addb
test
bound
adc
in
xor
ja
dec
xchg
jmp
fstpt
pop
cmpsb
jno
inc
ficoml
mov
movsl
rolb
div
push
ret
hlt
xor
test
pop
push
lds
mov
test
cmp
movsl
dec
sub
aam
or
inc
dec
pop
xlat
repnz
mov
ss
lds
cli
and
lahf
pop
pop
scas
sub
int
ljmp
scas
jno
pop
stos
xchg
xchg
lret
pusha
jnp
cmp
daa
clc
or
xchg
test
ds
add
mov
aaa
lcall
mov
or
jb
fs
push
les
insl
int3
push
add
mov
jp
jg
jle
roll
cmp
inc
xor
xchg
outsb
out
pop
mov
push
cld
inc
cmp
mov
sbbl
adc
nop
xchg
andps
mov
cmp
dec
dec
push
aaa
push
dec
inc
push
dec
mov
cwtl
or
popf
cmp
inc
inc
inc
lret
jno
sti
daa
lods
data16
pop
or
cs
dec
xor
aam
std
dec
jnp
fcmovb
fnsave
js
xorb
jb
call
mov
sub
lret
sti
jno
or
aaa
xlat
xchg
test
ja
loopne
lock
mov
mov
cmp
inc
orb
ret
mov
psllw
mov
aad
popf
sub
call
or
cmp
xchg
inc
or
inc
or
sub
dec
jne
mov
xchg
test
sbb
hlt
jmp
es
and
inc
loope
cmp
pop
sub
pop
sahf
adc
xor
adc
sbb
pop
adc
mov
add
xchg
add
sbb
dec
test
adcb
into
adc
fmul
shlb
sub
or
hlt
pop
aas
out
pop
mov
mov
xchg
insb
push
sub
jmp
fwait
lds
fadd
lods
movsb
add
out
push
push
pop
test
aad
fucomp
xchg
sarb
call
xor
stos
pop
cmc
fldl2t
mov
jnp
enter
ja
pop
and
jne
adc
push
xchg
add
dec
push
out
jnp
ljmp
mov
xchg
test
cmpsl
push
mov
dec
popf
aam
xor
cld
arpl
out
dec
out
dec
in
and
out
push
jo
ret
testb
icebp
fcompl
imul
xor
lods
inc
push
fwait
push
mov
and
js
call
dec
xchg
jo
iret
clc
mov
inc
cld
xchg
jge
addr16
lret
aas
lock
int3
inc
aad
inc
lods
jp
sbb
loope
xchg
or
inc
sub
push
jne
pop
xchg
mov
lods
outsb
cmc
mov
out
cli
ja
lock
out
xchg
in
cwtl
mov
test
sbb
addr16
add
adc
mov
nop
ficompl
inc
lret
adc
das
xchg
pusha
loopne
xchg
add
pop
xor
cltd
or
xor
mov
adc
int3
and
lahf
imul
lods
push
sbbl
push
repz
popf
cmpsl
mov
addr16
xchg
mov
ljmp
mov
add
out
xchg
in
jg
mov
inc
popa
xor
push
imul
stos
adc
add
mov
js
fists
inc
pop
adc
movsb
sar
jmp
ljmp
push
xchg
int3
push
icebp
sbb
shlb
ss
aam
add
movsl
mov
in
leave
rorb
lds
pop
outsl
loopne
or
mov
loopne
vmaxss
sub
cmpsl
arpl
or
gs
ret
es
testb
inc
outsb
pop
sub
ljmp
int
or
subl
into
daa
xchg
mov
add
adc
clc
and
or
movsb
andl
faddp
cmpsb
xchg
fwait
insl
push
mov
mov
mov
cmpsl
cwtl
add
loopne
sti
mov
in
test
ljmp
push
aas
sahf
add
test
out
fs
pop
jno
fs
xchg
add
loop
or
mov
sbb
enter
jb
aad
mov
lcall
mov
mov
push
test
mulb
into
lock
enter
fwait
cmovo
xor
jno
push
inc
jo
jns
lds
iret
and
nop
repnz
pop
imul
inc
sbb
pop
push
jbe
sbb
aaa
call
pop
into
pusha
inc
push
test
pop
sahf
xor
das
sbb
mov
clc
jl
lods
repz
and
pop
dec
popf
push
sbb
movsl
vpackuswb
outsl
fwait
movsl
mov
aam
push
popf
iret
dec
ret
shll
movsb
shlb
aas
sarl
sbb
cltd
es
outsb
cld
push
mulb
aaa
fldl
in
dec
push
arpl
idiv
das
into
sti
fcmovbe
xor
ret
adc
mov
je
insb
popf
lea
mov
mov
out
ljmp
out
into
xchg
and
scas
dec
insb
xlat
cmp
cmp
std
mov
mov
inc
pop
adc
push
xor
popf
test
mov
les
mov
add
insb
jecxz
push
inc
jmp
sar
rorl
sbb
push
xchg
xchg
cmp
sarl
iret
and
movsb
outsb
jl
sbb
out
sbb
mov
test
fs
jnp
test
pop
call
cmp
inc
or
shll
cmpsl
sub
dec
sbb
pop
out
fwait
sub
mov
popf
mov
hlt
sbb
mov
mov
dec
fs
lret
nop
xor
out
dec
imul
adc
mov
mov
xor
rclb
mov
xchg
outsl
ret
adc
sbb
gs
xor
lret
repz
mov
xchg
ret
mov
mov
pop
fisttpl
ficomps
scas
arpl
cmpsl
ret
cld
jns
pop
pop
xchg
dec
push
dec
lcall
mov
out
sbb
jl
es
mov
imul
push
push
adc
lahf
jl
scas
sub
in
jbe
push
scas
jbe
mov
mov
rolb
mov
dec
ret
jnp
mov
mov
loope
in
inc
jecxz
imul
mov
xchg
fwait
jns
into
ds
jne
int3
pop
xchg
aam
pop
jecxz
xor
outsb
das
js
or
jg
xchg
jmp
pop
bswap
jge
out
lret
jmp
test
je
cli
pop
orl
iret
lea
mov
lret
adc
aas
cmp
jg
lock
lods
adc
fsubrl
mov
push
cmp
xchg
loope
and
and
cld
addr16
pop
orl
and
das
loope
jnp
jle
aas
hlt
out
fdivp
pop
roll
cmp
mov
mov
pusha
jl
inc
inc
movsl
sub
loopne
ficoms
xchg
xor
mov
loop
pop
mov
cmp
adc
add
out
test
push
cmp
jb
rcrl
lret
fcoml
div
push
shrb
data16
cmpsb
add
sub
jns
fsubr
add
push
dec
mov
pop
jmp
pop
add
movsl
dec
adc
mov
sahf
fiaddl
xchg
in
cmp
inc
mulb
pop
aas
mov
repz
std
push
xor
mov
ljmp
or
pop
mov
dec
and
inc
or
inc
adc
dec
add
inc
pop
adc
lock
add
lret
push
insb
scas
add
add
out
jno
out
sbb
shlb
fcomp
and
xchg
repnz
cmpsb
cli
mov
pop
into
loope
add
adc
in
mov
xchg
inc
sti
icebp
inc
ss
std
in
fidivrl
mov
sar
dec
test
cmp
aas
mov
cld
add
scas
dec
push
cltd
jp
fsub
xchg
jne
nop
iret
cmp
xchg
rcl
cld
sbb
cli
mov
mov
jns
stos
out
popl
pop
xor
movsb
test
gs
rcrl
mov
mov
sti
divb
add
sub
into
call
loopne
xchg
mov
jmp
adc
ja
ss
or
loope
clc
mov
pop
add
cmpb
ja
add
es
dec
imul
add
push
popl
mov
loopne
insb
imul
outsl
adc
lock
into
sbb
cld
lret
je,pt
mov
jmp
inc
mov
mov
inc
dec
adc
addb
mov
xlat
or
pop
aaa
xor
movsb
adc
mov
lahf
mov
or
push
pusha
mov
pop
test
jno
mov
jo
mov
in
sub
mov
or
push
test
ficoml
pushf
mov
stos
ret
add
imul
movsb
pop
pop
mov
and
push
xor
movsb
das
push
ret
in
cmc
movsb
adc
jo
clc
repnz
scas
inc
add
inc
icebp
inc
aad
rclb
and
insb
sti
out
movsb
inc
adc
jbe
mov
fcomi
inc
lock
loopne
lock
mov
aam
iret
loop
xchg
ds
nop
outsl
pop
lahf
xchg
cmp
or
push
sub
inc
je
gs
or
shr
roll
jno
insb
adc
jb
inc
mov
or
cltd
mov
xlat
pop
das
out
mov
adc
mov
push
cmp
dec
xor
vphsubwd
out
repnz
outsl
jp
leave
lds
add
scas
fs
and
push
std
ret
mov
xchg
add
cmp
scas
fucomi
frstor
rcrl
push
es
out
xlat
add
hlt
mov
enter
dec
xchg
add
lds
fcmovb
movsl
or
stos
arpl
test
cmp
inc
rolb
std
mov
pop
mov
cltd
aam
icebp
aaa
leave
jnp
addl
cmp
mov
clc
cmpsl
push
cli
rorl
cmpsb
xchg
mov
enter
mov
ljmp
fstl
scas
test
push
in
leave
mov
sub
ret
sbb
mov
xchg
mov
push
jl
jp
mov
push
sub
or
push
fwait
stc
leave
inc
negb
fiaddl
or
xchg
pusha
std
mov
out
lock
inc
dec
test
xor
imul
stos
loope
mov
xchg
inc
aaa
pop
mov
pop
and
leave
shlb
mov
jl
inc
into
lret
inc
shl
data16
and
and
stc
xor
or
mov
out
dec
gs
mov
popf
mov
lahf
neg
adc
cmp
fsts
mov
lock
or
xchg
or
sbb
add
cltd
push
push
dec
xchg
cmp
add
data16
lock
pop
cmp
inc
mov
add
fsub
pusha
popa
fwait
clc
jne
cmpsl
adc
add
pusha
imul
ret
out
ss
ljmp
push
push
cmp
inc
xchg
aad
and
sbb
dec
out
add
pop
mov
mov
add
xor
push
push
xlat
ret
adcb
out
outsb
andb
sbb
and
ss
sbb
cmp
xor
les
cmp
rdmsr
popa
lcall
dec
push
cld
push
lret
jmp
or
jecxz
and
fisubrl
or
mov
xchg
fiadds
icebp
push
adc
adc
ffree
pop
cltd
lock
sbb
mov
or
lret
inc
and
sbb
add
lock
sarl
mov
add
xchg
insb
hlt
push
shl
je
sbb
adc
or
push
test
js
outsb
stc
repz
mov
add
rcrl
push
shr
push
ror
out
xor
or
fdivl
mov
mov
out
add
stos
push
fcomps
fldcw
or
push
sbb
mov
push
pop
insl
sub
lret
lcall
rcll
scas
or
jo
shll
movsl
mov
adc
out
mov
or
repz
negl
sbb
pop
gs
pop
sbb
cli
jp
fcomip
pop
arpl
popf
fistps
insb
sub
and
xor
inc
pop
mov
xor
mov
dec
shl
dec
dec
jge
jl
jge
mov
lea
loope
xor
add
push
push
pop
pop
pop
out
test
mov
iretw
ret
aas
sub
cmc
loopne
test
aad
popa
push
push
adc
repnz
push
insl
aaa
pop
sbb
xlat
sub
jbe
fnsave
ds
pop
or
aam
cmpsb
add
fiaddl
std
repz
mov
xchg
icebp
sub
sub
adc
and
stos
jnp
mov
pop
pop
sub
jl
push
lock
cmp
dec
popf
and
jnp
sub
dec
cmc
xchg
xchg
inc
xchg
lock
lahf
cmpb
movsb
inc
sub
and
or
sahf
ret
xchg
push
adc
pop
push
in
xchg
fsubrp
xchg
in
push
or
jno
or
add
pop
add
daa
hlt
cli
mov
mov
jno
stos
aam
nopl
fldenv
sub
dec
fisttps
pop
mov
push
xor
inc
sbb
xchg
mov
clc
test
jp
je
inc
fs
popa
imul
fsubrl
lods
cmp
sti
jge
fs
fwait
movsb
jnp
mov
xchg
cs
mov
or
add
push
mov
imul
inc
ret
dec
mov
shr
scas
jno
mov
movsb
sbb
daa
jg
push
out
cmp
aad
gs
cli
jl
xchg
incl
gs
inc
jne
gs
cmp
push
jp
test
jmp
pushf
ficoms
or
imul
adc
cmpsl
xabort
xchg
cmp
cmp
stos
pop
sbb
jmp
or
xor
clc
add
jecxz
push
jb
mov
jno
in
test
in
ja
ret
sub
int3
fisubl
scas
cmc
cmp
xchg
pop
jle
xor
or
stos
mov
jge
idiv
shlb
sub
jp
sbb
adc
rorb
sub
pop
jmp
in
repnz
scas
or
ds
cltd
lret
or
cmpsb
push
inc
in
pop
int3
mov
sub
loop
sarb
xchg
xchg
or
hlt
push
mov
rcll
xchg
pop
movsl
push
fimull
aaa
jns
aaa
dec
call
nop
sub
addr16
ret
mov
cld
mov
mov
mov
in
cltd
push
js
imul
cmp
inc
mov
and
sarl
mov
aaa
inc
pop
mov
adc
pop
pop
cwtl
or
pcmpgtd
dec
mov
adc
xor
sbb
repz
in
adc
fildl
hlt
out
dec
fmul
out
push
push
lahf
cmpsl
int3
out
loope
mov
ds
leave
call
jl
add
and
fwait
shlb
push
fisttpll
jg
sub
adc
fidivrl
cmpsb
icebp
int
and
lods
mov
ds
leave
fidivrl
lahf
fs
inc
ficompl
or
in
stos
fwait
ret
cld
leave
xor
test
stos
lock
push
or
rcrl
adc
insb
in
out
movsl
pop
sub
pop
xchg
andb
lret
mov
hlt
fnstsw
sub
scas
popa
pusha
mov
cmp
fsubl
sahf
lret
mov
outsl
pusha
movsl
or
dec
lds
xchg
dec
inc
imul
test
mov
inc
enter
fsub
aad
rol
xchg
jnp
push
mov
mov
arpl
xchg
aam
fisubrl
xor
icebp
mov
mov
mov
mov
inc
mov
clc
movsb
mov
jge
xor
mov
xor
mov
fs
sarl
mov
mov
jbe
push
orb
jge
stc
fistpl
lahf
xor
xchg
les
aam
cmp
testl
mov
adc
pop
or
aaa
push
push
iret
pinsrw
jmp
xor
xor
inc
cmp
mov
imul
jo
jb
jge
in
mov
add
movsl
lods
sbb
insl
out
outsl
jge
sbb
ret
mov
das
push
xchg
push
sub
cli
inc
sahf
xor
lods
push
xor
cmpb
ds
decl
mulb
jne
add
or
adc
ja
cmc
les
mov
arpl
ffree
mov
mov
insb
imul
cld
xor
insl
and
mov
dec
fs
imul
or
adcl
outsb
cmp
xchg
jp
in
out
dec
insl
insl
jne
pop
fdivrl
inc
push
mov
cmp
nop
cmp
test
jge
dec
movsb
ret
imul
and
xchg
cmp
ret
inc
xlat
dec
test
push
es
ficompl
lock
pop
sbb
xor
pop
call
mov
add
push
lds
and
negb
decb
insb
adcl
test
jne
jmp
pop
and
stc
inc
cmpl
dec
aad
cmp
jl
daa
imul
lret
cmpsb
int
mov
test
decb
movsl
cmp
or
xchg
sbbb
push
cmpsl
popa
dec
mov
adcb
iret
adc
dec
lahf
lds
adc
push
mov
stos
adc
lods
jmp
sub
push
cmp
rolb
clc
sub
xor
and
push
push
lret
pop
or
test
fwait
xchg
push
cmp
test
push
into
stos
add
jb
nop
insl
push
cmp
xor
mov
xchg
pop
jp
shll
xchg
adc
mov
ds
or
jecxz
shrb
mov
cmp
ds
imul
xor
mov
jg
sbb
aas
int3
cli
inc
add
fs
outsb
loop
cld
cmp
pop
cmpl
dec
movsl
testb
jmp
bound
push
lret
ja
scas
xchg
mov
sbb
add
and
imul
imul
lock
mov
mov
popf
fbld
push
sub
cs
push
into
push
fsub
jb
ja
dec
shrl
xor
or
or
fs
je
adc
incl
cld
adc
ds
shr
cmp
inc
lock
sub
jns
jns
xlat
adc
das
adc
outsl
xlat
mov
addb
mov
mov
adc
and
jne
iret
or
pop
mov
xor
push
push
push
mov
jno
data16
and
mov
mov
cmc
xlat
shll
insb
sti
sub
pop
negb
push
sbb
scas
cmpsl
and
aam
dec
xor
insb
jo
icebp
sbb
test
or
jmp
sahf
jns
int
jle
mull
push
push
fprem1
add
push
xchg
int3
pop
dec
pop
sbb
xlat
cmpsb
xor
pusha
popf
fiadds
xor
and
sub
les
mov
add
mov
jg
mov
out
mov
or
fwait
subl
test
movsb
es
sbb
std
bound
push
xor
inc
je
in
sub
mov
push
mov
dec
and
jge
mov
mov
nop
and
xchg
movsl
mov
es
repnz
and
pusha
sbb
jge
dec
and
xor
gs
pop
adc
xchg
sub
dec
pop
inc
in
push
push
test
in
daa
scas
nop
dec
das
pusha
aad
mov
sbb
add
sub
pop
int
sbb
push
outsb
pop
out
adc
frstor
inc
enter
pop
jnp
fcoml
jne
stc
sub
test
or
out
add
into
sbbl
stos
xor
mov
adc
adc
fcmovne
xor
out
into
lods
faddl
stos
test
jg
fisttpl
mov
jp
nop
fucomip
and
sub
orl
je
inc
imul
jmp
jp
loop
mov
mov
jmp
jge
mov
js
xchg
sbb
cld
mov
push
cld
mov
std
ss
sti
and
push
inc
cld
mov
jno
fisubrl
lock
sbb
sbbb
jae
jns
fsubrs
jge
jecxz
out
xor
lods
fidivrl
sub
repz
imul
lret
imul
mov
shl
loope
mov
out
sub
test
lds
mov
fdivs
mov
divl
pushf
push
mov
xor
mov
aaa
arpl
bound
fisubrl
loop
xchg
movsl
or
inc
jnp
xor
icebp
int
leave
test
jb
inc
xor
jl
lock
scas
orl
mov
and
add
inc
mov
add
jmp
and
stc
leave
out
bswap
movsb
push
das
push
push
xor
ljmp
push
mov
mov
push
adc
cmpsl
ljmp
in
add
loope
pushf
cmpsb
arpl
daa
lods
or
fstpl
xor
iret
test
cwtl
dec
rcll
iret
cmpb
mov
arpl
pop
stos
push
inc
xchg
test
movsb
cmpsb
jge
adc
inc
inc
inc
movsb
and
mov
jmp
stos
xchg
jbe
cwtl
int3
std
mov
jo
jmp
adc
outsb
pusha
hlt
inc
pop
in
add
adc
jecxz
jne
iret
sbb
xlat
adc
lret
jmp
mov
sub
bts
mov
dec
mov
mov
or
loope
adc
or
jns
adc
shl
or
mov
sbb
adc
push
shr
or
jg
or
jne
cmpl
mov
pop
sti
pop
inc
sti
int3
call
movsb
cmpsl
dec
inc
cwtl
mov
push
in
dec
xchg
xchg
insb
fnsave
ds
cs
cwtl
fs
and
std
lret
int3
adc
inc
daa
cltd
lret
lret
aas
mov
out
mov
leave
pusha
mov
jmp
ret
lcall
loope
ds
sub
mov
add
xchg
std
sti
pusha
jns
pop
add
sbbl
inc
sbb
nop
rorb
test
xor
dec
es
sub
adc
cmp
add
lcall
cltd
push
xchg
hlt
icebp
add
push
push
arpl
nop
or
pop
mov
push
pop
in
in
xchg
out
stos
fstl
push
mov
jmp
movl
or
inc
add
popa
xchg
sbb
add
pop
push
mov
xchg
inc
dec
aam
jno
icebp
lahf
xlat
inc
dec
xchg
push
push
fwait
mov
xor
ret
mov
fldenv
mov
ficoms
xchg
int3
sbb
mov
mov
insb
int3
int
negl
je
or
addr16
into
scas
push
mov
mov
pop
les
push
push
push
jecxz
cmp
cmp
and
mov
xchg
cmp
dec
mov
movsl
addr16
aas
out
popf
pop
popa
jg
cld
xor
pop
sbb
hlt
fcomps
imul
fwait
sbb
mov
mov
pushf
sti
pop
push
insl
mov
stc
pop
cmp
leave
push
jnp
mov
mov
jecxz
inc
test
dec
sbb
adc
clc
cmp
orl
ds
mov
scas
test
scas
adc
inc
and
inc
add
idivl
inc
or
adc
jb
nop
push
adc
lds
lcall
sahf
inc
cmpb
stc
mov
aas
mov
clc
stos
or
lret
push
ror
mov
dec
pushl
sbb
dec
or
sub
adcb
pushf
mov
rcll
orl
adc
dec
and
jge
sarb
into
fcmovnu
lret
movsl
ss
inc
ds
mov
push
xor
ret
out
out
lcall
es
mov
insb
push
in
int3
imul
push
xchg
aam
pusha
ss
xlat
push
shll
dec
mov
mov
xadd
lcall
rcr
stc
mov
push
movb
bound
test
test
js
xchg
mov
fistpl
push
or
inc
loope
iret
inc
cwtl
vmovupd
add
call
js
je
xorl
dec
jle
sbb
xchg
push
sub
push
pop
test
jg
jnp
xchg
test
inc
lods
jnp
inc
push
movntq
inc
xor
mov
mov
mov
cmp
mov
xlat
daa
or
mov
test
call
dec
dec
push
mov
or
fcomi
cltd
loope
xchg
stos
cmp
xchg
inc
jle
mov
push
in
repz
and
setb
adc
jnp
addr16
pop
and
xor
lods
fdivr
ds
jl
sbb
or
pop
inc
mov
fnstenv
aam
push
movsb
jae
imul
push
sbb
sub
lcall
or
jb
sub
or
fwait
or
cmp
js
out
jg
in
gs
clc
push
loop
into
cs
mov
jnp
outsb
jnp
mov
add
add
add
ss
shll
inc
lods
push
cmc
lret
pop
in
dec
rcrl
lds
lods
sub
xor
out
xorb
push
and
mov
xor
shll
xor
jb
sub
push
icebp
and
or
lahf
arpl
cld
fwait
ss
test
outsb
adc
faddl
sub
fs
cs
push
sbb
fistl
and
fadd
lods
or
les
cmp
loopne
stc
outsb
dec
fnsave
push
out
cli
pop
scas
jge
scas
ljmp
dec
in
or
shrb
ret
fcmovbe
aam
pop
mov
mov
daa
loopne
addr16
add
push
lods
ret
insb
sbb
jb
int3
icebp
xor
lret
mov
push
leave
stos
adc
mov
aam
lea
sub
inc
pop
sbb
xor
dec
hlt
push
gs
mov
sbbb
push
sbb
push
fisubrl
mov
mov
dec
enter
fbstp
or
test
dec
and
inc
jmp
xchg
clc
sbb
inc
mov
push
lods
testb
out
shlb
xchg
ljmp
sbb
xchg
sti
fcompl
imul
es
aas
inc
movsl
ret
cmp
test
sti
aam
jne
push
hlt
pop
mov
adc
mov
aam
dec
adc
std
add
sbb
jp
push
cmp
push
insl
mov
cld
scas
mov
inc
xchg
test
cmp
xchg
mov
aas
out
sub
jae
jae
cmp
imul
and
pop
loop
scas
pop
orb
push
out
lret
inc
aam
pop
jae
mov
jmp
adc
mov
pop
xor
and
movsl
adc
imul
addr16
adc
cld
and
mov
cld
sti
jb
cmp
inc
and
inc
xchg
mov
sbb
pop
aas
incb
ds
jnp
repnz
arpl
add
jnp
cmp
push
fimull
jb
aas
enter
or
pop
mov
lods
pop
jl
jo
stos
dec
aad
jnp
pop
dec
cmp
in
sahf
sbb
push
sahf
adc
in
mov
fdivs
rcrb
repz
mov
fsub
xor
shll
andl
adc
adc
sub
push
cmp
mov
call
cld
imul
out
cmp
or
mov
add
push
mov
lcall
mov
mov
or
fsub
movsl
and
mov
cmpsb
dec
pop
ret
negl
fwait
pop
fldcw
shlb
out
mov
pop
push
insl
adc
cmpsl
jnp
pop
popf
mov
das
or
mov
pop
repz
dec
iret
xchg
repz
pop
mov
fsubl
int
jge
add
sub
jno
lret
js
iret
leave
out
adc
mov
pusha
psadbw
sub
push
ss
frndint
fdiv
out
idivb
mov
inc
out
sub
jge
jae
dec
pop
cwtl
aas
aaa
rolb
cld
mov
outsb
dec
push
add
add
inc
mov
mov
orw
idivb
jecxz
mov
lods
lret
push
xchg
adc
scas
lcall
or
aaa
loope
inc
mov
scas
mov
dec
ja
stos
cmp
push
xor
adc
xor
xorl
pushf
cmp
out
in
xlat
hlt
ficoml
push
pop
inc
xor
or
add
add
adc
popf
cmpsl
mov
push
mov
and
jo
mov
dec
je
adc
out
addr16
jb
inc
cmpsb
ret
std
xchg
xchg
sbb
mov
jb
inc
xor
mul
jmp
ja
jle
and
inc
mov
pop
outsb
andb
addr16
dec
push
insl
fs
out
jo
mov
dec
xlat
fdivrl
or
add
mov
adc
dec
mov
or
mov
rorb
aam
or
dec
popa
cmp
dec
jmp
cmc
outsb
rclb
into
fimuls
cmp
ret
sbb
jno
stc
icebp
inc
and
sti
out
inc
xor
movsl
jae
sbb
cmpsl
jge
xor
adc
push
xchg
mov
divb
les
xchg
xlat
add
mov
sbb
push
shr
rolb
loopne
jb
lock
in
mov
fimuls
cmp
fs
pusha
addr16
and
int3
xchg
and
sub
call
jne
stos
xchg
or
add
stos
cmpsb
cli
int
xor
add
insl
test
rorl
jo
mov
dec
mov
xor
sub
inc
in
and
out
jae
mov
jecxz
mov
or
mov
mov
fidivrl
or
adc
mov
pop
jge
cld
nop/reserved
ds
popa
push
popf
scas
popa
in
movsb
jbe
shl
clc
adc
popa
lahf
imul
hlt
aad
add
xlat
xchg
movswl
cmp
pop
xchg
cltd
xorl
cmp
pop
popf
shll
xor
inc
ss
test
jns
pushf
mov
mov
lods
aaa
mov
add
cmp
jae
ds
sub
lods
cli
notb
test
mov
and
cmp
push
ds
jne
ljmp
cmc
mov
sbb
xchg
and
test
iret
sbb
xchg
dec
aad
jle
xor
shlb
aaa
mov
jmp
push
lods
and
mov
out
loope
or
out
rcll
and
xor
fistl
shrb
lds
pop
add
pop
cmp
jecxz
fdivl
xor
test
imull
arpl
fsub
cltd
andl
aaa
mov
fcomi
push
and
jo
loope
pop
pop
xchg
mov
shr
adc
repnz
mov
jg
sbb
jecxz
in
or
inc
inc
sbb
jp
mov
popa
xchg
aaa
ret
sbb
daa
or
jo
sbb
push
cmpsl
aaa
sbbl
and
add
sub
dec
sub
or
leave
in
dec
jb
adc
add
fwait
xchg
int3
mov
sub
popa
xchg
aas
fwait
mov
pop
push
nop
lods
jmp
cmpsl
xchg
mov
stc
mov
cmpb
imul
rcr
stc
xchg
cmp
icebp
mov
daa
pop
mov
ror
lahf
add
mov
gs
sub
xchg
adc
dec
xchg
mov
imul
int
inc
lds
push
cwtl
pop
test
loope
inc
and
jl
bound
push
cld
or
cmp
out
push
mov
dec
cmp
cmc
clc
cmp
fcoms
fcmovu
jp
rcll
rcr
inc
loope
dec
mov
mov
and
jmp
sub
mov
mov
sub
lcall
pushf
and
sbb
dec
xchg
jg
pusha
insl
cmp
call
push
sbb
into
xchg
mov
mov
mov
add
ljmp
dec
pushw
dec
stc
sarl
cmpsl
mov
push
mov
pop
fmull
add
clc
mov
and
pop
mov
sub
mov
lret
cmp
stc
loope
mov
std
repnz
ficompl
divl
push
daa
xchg
fsub
cltd
sub
scas
sub
mov
cmp
aam
mov
and
jns
pop
dec
pop
sub
or
pop
in
dec
mov
lock
or
std
mov
imul
outsb
jecxz
mov
jb
push
call
test
dec
inc
dec
or
xlat
test
cmpsb
jne
mov
add
sbb
loope
xchg
push
mov
jmp
add
pop
jno
sahf
dec
std
shlb
lds
rcll
mov
jmp
sub
sahf
cmp
sub
cmp
scas
push
cld
and
dec
mov
pop
pusha
fsts
push
push
dec
cs
sub
mov
outsb
insb
sub
sub
add
sbb
xchg
lds
out
iret
xor
cltd
fisttps
int
test
pop
std
mov
or
or
inc
adc
xchg
test
sub
test
mov
inc
adc
arpl
mov
shrl
call
sbb
stos
mov
popf
lret
lock
test
out
cmp
adc
pop
neg
bound
mov
subb
jno
mov
rorl
pop
jbe
sbb
or
jg
repz
sbb
lock
fcoml
mov
std
jno
out
sti
int
cli
cmpsb
hlt
mov
or
xchg
subps
and
mov
jmp
daa
sub
xlat
add
test
push
outsb
test
sbb
jbe
les
loope
jp
fmuls
cli
sahf
ror
aaa
jbe
cmc
push
out
and
push
ret
out
push
sbb
popf
stc
in
inc
xor
cli
sub
mov
popl
les
lods
into
jne
pop
out
inc
pushf
push
push
jle
push
lds
scas
aaa
cmp
call
fldl
cmp
test
lret
test
loopne
std
sub
inc
dec
mov
sahf
aad
test
call
mov
in
push
leave
mov
push
mov
sub
hlt
xor
mov
xchg
clc
dec
movsl
sub
mov
mov
dec
lea
mov
shlb
mov
jb
cli
lcall
ret
ret
aam
outsb
cvttps2pi
pop
inc
loop
or
int
int
or
popf
mov
sbbb
xchg
push
stc
mov
jmp
ret
or
dec
dec
push
xlat
adcl
not
pusha
jno
pop
cmp
jae
stos
inc
jp
jl
dec
push
out
adc
cltd
add
out
clc
flds
pop
jge
or
mov
add
push
and
cs
sub
jg
jbe
mov
jmp
pop
sub
mov
shrl
sbb
mov
sub
stc
or
add
loopne
sub
ret
das
cmp
fcompl
jae
into
add
les
aad
insl
imul
add
mov
and
or
dec
es
push
cmp
cmc
xchg
aas
jle
ficompl
call
xorb
sbb
xchg
jle
pusha
jecxz
sub
add
sub
ret
push
sti
mov
mov
pusha
hlt
fstpl
mov
fistps
mov
arpl
and
mov
inc
sub
fstpl
add
push
jae
add
and
lods
icebp
sub
push
fidivl
xchg
mov
dec
sub
mov
mov
in
lahf
cmpsl
sbb
cmpsl
stc
mov
sbb
das
or
rorl
sub
fucomip
es
out
xchg
mov
jnp
jg
testb
mov
sub
inc
pop
icebp
cmp
ret
lret
stos
clc
add
sbb
cmp
pop
mov
xor
jb
jbe
dec
or
mov
add
outsb
fildl
les
mov
imul
loop
fidivs
sub
repnz
dec
aam
cmc
sahf
xchg
mov
pop
jns
pop
jl
sbb
push
or
xlat
xchg
int3
fidivrl
aaa
outsb
popf
pop
stos
test
lds
cld
js
hlt
sub
jecxz
xor
movsb
mov
sbb
icebp
iret
cld
cli
cmp
fs
xor
push
fnstenv
fldl
push
movsb
xor
cmpsl
fs
outsb
ficoms
cld
xchg
scas
lods
mov
dec
push
and
cmpsb
pop
punpckhwd
orl
mov
xor
inc
shrb
mov
sbb
sti
dec
mov
cmp
and
jmp
aaa
and
push
cmc
jl
dec
mov
xchg
mov
out
cmpsl
pop
xor
and
add
dec
xchg
ja
js
mov
mov
xor
pop
mov
mov
ret
mov
mov
jl
cmp
jae
pop
lds
add
pusha
push
shrl
xchg
int3
fwait
aas
xor
sub
daa
iret
test
add
sarl
or
inc
mov
icebp
xchg
cmp
xor
clc
icebp
dec
jle
jo
rorl
pusha
sbb
int3
popa
or
push
sbb
jmp
lods
fsub
scas
loopne
adc
mov
out
cmp
fistpll
aas
out
test
repz
cld
mov
sub
or
int
mov
daa
dec
add
sub
adc
leave
test
int3
das
call
inc
mov
sub
sahf
push
cs
and
loopne
lds
sub
shlb
es
xchg
xchg
test
test
mov
imul
iret
jg
push
cs
adc
pop
sub
and
lds
push
arpl
aad
sub
loope
aad
movsb
mov
pop
ds
cmpsl
xor
mov
and
hlt
and
fwait
shll
out
lret
imul
dec
sub
shlb
jle
hlt
jo
mov
pop
fldl
mov
adcb
es
lock
jbe,pt
jb
xor
and
inc
repz
fdivrs
jg
movsl
cld
push
inc
mov
pop
fldenv
xlat
rorb
mov
dec
aas
jae
insb
sbb
fcoms
ss
dec
xchg
loopne
cltd
test
dec
xchg
aam
rcrb
aas
mov
or
repz
xchg
idivl
push
addr16
sti
push
and
xor
iret
inc
into
mov
sbb
shrl
cmp
loopne
mov
xor
loope
repz
dec
ja
stos
call
iret
and
xchg
cmp
xor
mov
mov
push
out
divb
clc
pop
push
and
cmp
xchg
jmp
es
mov
jno
outsb
popf
jg
mov
lcall
mov
push
out
add
ud2
xor
cmpl
add
mov
enter
pushf
ret
je
and
mov
jns
sub
repnz
push
mov
icebp
mov
daa
divb
loop
push
inc
add
and
into
jecxz
cmp
sub
or
adc
jne
mov
ret
xchg
push
in
clc
pop
loop
ret
jp
xchg
jg
mov
iret
jge
jecxz
mov
aam
popf
and
cmpsb
iret
pop
jno
lock
cs
add
adc
push
sbb
subb
mov
push
dec
jle
jns
jmp
jno
dec
push
mov
icebp
arpl
scas
out
dec
pop
hlt
push
and
lods
ss
fisttpl
inc
adc
lcall
mov
sub
lahf
pop
out
xor
out
into
loope
jno
cli
nop
adc
sbb
popa
stos
mov
jo
arpl
jne
adc
dec
fisubl
mov
push
mov
dec
stos
pop
leave
mov
or
jl
jno
pop
fstp
add
mov
dec
pushf
imul
pop
mov
andb
andl
movsb
add
sarl
cmpsb
test
xchg
test
std
mov
repz
jg
test
mov
syscall
and
insl
iret
into
xchg
inc
fwait
sahf
jae
push
je
xchg
data16
into
cwtl
into
add
cwtl
inc
xlat
cmpsb
push
imul
es
push
insb
fists
mov
test
sub
cltd
popf
sbb
nop
xor
or
push
imul
scas
xchg
ja
sbb
inc
and
data16
aad
mov
inc
into
mov
mov
add
imul
adc
mov
daa
jg
add
inc
xchg
pop
popf
or
mov
mov
add
lock
push
ficompl
lret
jmp
fstpt
hlt
movsb
and
std
dec
pop
lret
cld
aad
xor
ja
stos
out
ljmp
or
arpl
cli
test
jge
les
dec
push
jl
jns
inc
adc
jb
cltd
js
sbb
mov
cmp
out
xchg
shr
lods
xor
test
mov
fimuls
setne
dec
loop
cmpl
add
lds
rcrl
jg
imul
jge
sbb
icebp
sub
xchg
jbe
ss
fcompl
movsl
out
test
addr16
mov
sarl
outsb
push
pusha
call
cwtl
jg
inc
push
in
fisttpll
int3
jbe
out
pop
cmp
repz
jns
cs
sub
mov
mov
imul
fisttpll
data16
push
adc
fdivs
mov
sahf
cs
dec
aas
jne
push
xlat
push
jnp
aaa
jge
mov
inc
mov
pop
mov
scas
mov
push
mov
jnp
pop
mov
pop
pop
fiadds
dec
mov
jp
mov
sub
adc
sub
sbb
or
cmc
xor
leave
push
fcoms
xchg
cmc
mov
out
jge
or
cmc
scas
call
js
fildll
push
lods
div
stos
popa
bound
sbb
mulb
push
outsb
inc
push
movsb
adc
pop
scas
fdivp
in
adc
mov
enter
sbb
mov
faddl
and
ja
loopne
inc
data16
lret
dec
mov
or
leave
add
push
push
in
clc
loop
pop
jle
pop
or
test
mov
xor
inc
cmpsb
inc
popf
fistpll
out
mov
add
mov
dec
push
cmp
pop
jmp
mov
jns,pt
dec
mov
sahf
push
inc
push
sbb
lods
pop
out
fwait
dec
push
mov
testb
lret
aam
mov
and
xchg
cli
addr16
mov
or
add
jmp
cli
sub
ret
inc
xor
imul
into
mov
jle
push
into
test
adc
lods
pop
xor
stos
mov
stos
daa
aas
cltd
cld
or
push
outsl
imul
orb
arpl
ljmp
std
test
add
mov
repz
pop
sub
xchg
xor
lret
insl
jns
mov
mulb
fcoml
loope
fsubl
popfw
adc
jae
pop
cltd
push
jo
popf
int3
inc
dec
aas
xor
cmpsb
icebp
and
outsl
or
fisubs
ret
adc
cmp
fsubrl
fdivl
pushf
bound
or
push
leave
mov
add
xor
xor
lea
jb
loope
jg
dec
add
popf
mov
mov
enter
push
xchg
pusha
push
sti
mov
jb
bound
call
cmp
sbb
dec
sub
jbe
cmp
movsb
hlt
imul
push
add
inc
aad
cmp
add
divb
ficoms
push
push
fsts
popa
pushf
loop
dec
mov
lcall
mov
mov
jnp
in
dec
repz
test
mov
or
or
and
pop
mov
je
adc
lods
pushf
inc
leave
jg
jg
jne
mov
and
or
mov
es
inc
pop
mov
cli
fidivrs
mov
or
sbb
andl
cmpsb
fwait
mov
into
repnz
ja
mov
dec
dec
cmp
out
push
inc
xor
sub
xor
fwait
adc
inc
in
mov
ret
addr16
movsb
movsb
in
lods
jge
mov
cmp
pushf
cmp
jo
sbb
push
mov
inc
pop
mov
fdiv
push
mov
xor
cmpsb
add
sbb
dec
fs
test
sub
sbb
ss
loope
mov
vorps
insb
js
outsl
push
cmp
fnstenv
inc
dec
roll
aad
fnstsw
xchg
mov
mov
cmp
enter
jae
das
bound
jmp
mov
fiadds
adc
out
ja
fs
cmp
inc
int3
in
aad
cmp
push
les
jmp
pop
add
jne
or
aam
test
adc
sbb
loopne
mov
sub
mov
test
es
lods
sahf
mov
sarl
mov
cmp
leave
js
jmp
inc
jle
in
mov
pop
stos
rclb
movsb
mov
dec
out
and
mov
sbb
and
jl
adc
es
xchg
jmp
cmp
out
stos
xchg
fstpl
popf
or
inc
inc
cli
mov
lea
mov
sbb
adc
outsl
cs
popl
int3
or
testl
scas
or
lahf
jl
add
push
mov
mov
cmc
call
test
mov
out
fsts
pop
dec
mov
pop
cmp
mov
aas
push
or
iret
sub
mov
inc
mov
cmpb
inc
je
mulb
lahf
popa
movsl
or
xlat
les
add
dec
lock
mov
aas
add
inc
mov
push
xchg
and
adc
insb
mov
out
cmp
test
cmp
cmp
movb
cmp
mov
jnp
pop
test
sti
adc
dec
rcr
out
pop
push
pop
aas
lahf
cltd
pop
push
push
xchg
pop
sub
mov
dec
mov
or
mov
in
loop
adc
add
loope
push
push
push
aad
jno
or
stc
jl
fildll
aad
mov
shlb
mov
xchg
icebp
lret
adc
shl
loop
mov
sbb
out
xor
sbb
mov
sub
cmpsb
or
xor
es
jecxz
sahf
jp
cs
mov
xchg
stos
fstpl
push
fsts
test
int3
rcr
lods
repnz
or
mov
mov
in
mov
xchg
mov
jecxz
arpl
call
sbb
xor
subb
mov
pop
adc
out
clc
jns
mov
mov
in
pop
out
pop
and
fcomip
inc
cmp
mov
sub
cmp
insl
push
pusha
sbb
flds
sub
cwtl
mov
jl
xorl
insb
gs
out
arpl
nop
aam
xchg
sub
aam
out
cwtl
push
icebp
shlb
dec
bound
mov
add
test
test
pop
and
mov
mov
cs
adc
jg
mov
daa
inc
jbe
dec
hlt
sub
ss
push
xlat
cs
xchg
sub
jecxz
pop
movsl
ror
in
add
xor
add
xor
rcll
in
movsb
adcb
cmpsb
adc
ret
jmp
out
xchg
dec
test
xor
jmp
loope
sbb
mov
adc
jge
and
jb
bswap
leave
and
mov
outsb
jge
mov
fstps
icebp
jb
gs
insl
sbb
xchg
mov
cmp
sbb
or
sbb
push
xorb
scas
adc
mov
int3
pusha
mov
or
je
or
cli
jle
in
add
shr
in
cmpb
or
or
ja
push
ja
sub
pop
ljmp
and
cs
stos
dec
scas
or
mov
sub
loope
xchg
loope
mov
es
fdivr
ds
testl
in
or
aaa
add
imul
or
sbb
lods
movsl
pushf
fdivr
or
xchg
icebp
call
mov
aas
dec
cmc
add
push
mov
rorb
mov
adc
std
stos
jl
xchg
mov
addr16
jnp
push
fdiv
jno
mov
sbb
cmpsl
cmp
xchg
mov
pop
cli
jle
inc
in
aas
test
mov
jne
cwtl
dec
mov
inc
scas
fnstsw
add
and
mov
cmp
jns
nop
mov
shrl
jp
cmp
incb
mov
dec
mov
aaa
pusha
mov
stos
jo
shl
push
popf
into
push
jl
aam
push
dec
jns
push
inc
sub
pop
sti
jno
cwtl
mov
mov
ficoml
add
int
daa
cmpsl
scas
xlat
outsl
sub
add
lcall
in
int3
xor
sbb
out
insl
shll
mov
and
mov
les
xchg
xor
sbb
ret
xor
int3
icebp
inc
rcl
outsl
enter
jmp
sbb
pushf
jo
adc
fdivs
pop
mov
lods
jae
dec
and
cmp
ljmp
inc
clc
clc
lea
xlat
adc
mov
adc
adc
push
addr16
or
xor
out
dec
jge
xchg
jle
insl
es
push
cmp
imulb
and
ret
das
cmc
clc
idiv
or
mov
icebp
mov
lret
mov
mov
and
jg
cli
xor
inc
ss
adc
cmp
inc
or
aad
pusha
imul
add
arpl
stos
cmp
xchg
mov
pop
push
pusha
push
mov
cmp
hlt
and
lret
sub
sahf
cmp
mov
cmp
insl
arpl
scas
mov
gs
dec
loope
cwtl
loopne
fidivrl
xorb
lret
pop
jns
int3
mov
loopne
pushf
mov
lcall
cs
inc
and
ljmp
or
out
stos
pop
or
fsubrs
mov
push
clc
ds
sbb
nop
xchg
loopne
out
test
sbb
dec
pop
fistpl
and
jnp
lods
pop
jbe
push
adc
sub
adc
adc
lock
out
mov
ljmp
mov
and
add
push
out
cmpsb
hlt
out
outsl
fisubs
ret
xor
mov
sbb
stos
or
aam
nopl
mov
mov
mov
cmp
dec
sub
mov
push
arpl
gs
int
ljmp
les
popf
das
insl
mov
dec
xor
scas
rorl
adc
int
sbb
and
jnp
popf
divb
add
das
sbb
loope
out
cmpl
orl
fldcw
sbb
lcall
adc
xchg
movsl
insl
out
scas
adc
dec
ret
sub
pushf
xchg
jp
roll
loopne
cwtl
std
and
cmp
popa
fldcw
jl
lock
mov
test
jne
arpl
and
pop
jnp
fs
push
pop
xchg
cmp
push
leave
bound
push
cmp
outsl
fwait
scas
sub
pushl
cmc
fsubl
test
xchg
cmp
pop
jne
repnz
movsl
ror
dec
jle
adc
std
inc
jo
mov
dec
inc
mov
mov
xor
divb
outsb
aas
and
dec
fwait
stos
loope
inc
and
addr16
xchg
sub
add
fdivp
fs
jbe
clc
int
adc
push
xchg
adc
mov
mov
stos
ss
push
adc
inc
cmp
or
pushf
jle
je
rcrb
add
mov
xchg
jg
and
or
shlb
xchg
dec
ss
xchg
bound
mov
cmc
lock
in
mov
push
mov
mov
notb
cmp
sub
testb
dec
cmpsb
mov
outsl
or
cmpsl
xchg
sbb
mov
mov
xor
mov
imul
arpl
add
test
push
in
lock
dec
int3
enter
sub
fdivl
dec
das
data16
add
dec
arpl
sbbl
ss
adc
dec
lahf
bound
mov
fdivrs
lods
loope
cmp
dec
dec
inc
push
cld
and
push
xchg
mulb
cs
fisubs
add
mov
pop
adc
inc
pop
and
jo
add
cmpsb
sub
sti
dec
pop
stos
jbe
xchg
imul
jns
or
mov
pop
jo
xor
jns
das
lahf
mov
loope
hlt
mov
jnp
cmp
sti
sbb
adc
gs
add
pop
dec
fcmovne
out
inc
mov
movsl
out
imul
outsl
jae
jecxz
mov
cmp
jge
repnz
pop
movsb
cmp
add
xor
mov
out
ud2
fwait
insl
fstpl
sahf
adc
pop
popa
fldcw
sub
xchg
std
mov
jb
xchg
xlat
cmp
ja
sbb
leave
cmp
pop
xor
lds
dec
xrelease
std
sub
ss
or
dec
aaa
sbb
add
dec
nop
xor
loopne
mov
shl
and
test
inc
mov
ja
push
pop
dec
mov
mov
and
call
fnstsw
lahf
rol
lcall
jmp
push
adc
inc
xor
sbb
cmpsl
mov
add
cmp
pop
enter
mov
loop
div
cmp
jns
mov
stos
xorl
test
mov
inc
test
push
outsb
xor
ljmp
nop
test
xchg
cli
push
jno
lret
pop
mov
shll
or
adc
xor
lds
imul
lahf
hlt
jae
cmpsl
icebp
rolb
arpl
and
pop
inc
mov
push
cmp
icebp
mov
mov
icebp
sbb
push
push
sarb
dec
adc
mov
lret
scas
jle
xchg
ficompl
adc
orl
int
js
xchg
pop
push
out
dec
or
imul
sbb
pop
sahf
int
push
push
rcrb
sub
pop
or
jmp
push
testl
pop
lea
mov
mov
decb
sti
scas
sub
movnti
mov
adc
fs
xchg
mov
mov
out
add
mov
aaa
inc
movsb
cmpsb
cmp
testb
jp
enter
xchg
addr16
pop
cmp
inc
js
insl
sub
jb
test
cmpsl
fisttpl
bnd
xchg
push
test
or
loopne
stc
pop
imul
and
jo
data16
pop
je
addr16
scas
xor
sahf
sub
sarb
scas
jno
jb
pushf
adc
sub
dec
lods
pop
repnz
popa
sbb
shlb
inc
fldt
add
clc
pusha
pop
and
push
jle
add
lret
aas
leave
bound
mov
stc
mov
lods
jns
and
lahf
sbb
mov
shlb
mov
lcall
xor
popf
xchg
andb
inc
pop
int
pop
sub
sarl
bound
fldcw
fsubrl
cltd
shl
push
inc
ljmp
xor
cmpsl
dec
sti
call
xchg
cmp
faddl
add
fdivs
subl
mov
xchg
pop
daa
cld
nop
divb
lret
out
sub
pusha
cmovp
subl
xchg
popf
cwtl
and
imul
repz
inc
outsb
das
jbe
movsb
sahf
test
cltd
sbb
fldcw
mov
movsl
jmp
int
mov
test
rcrb
in
test
filds
inc
push
lock
mov
jno
xor
mov
jmp
sub
push
or
push
sahf
fadd
aas
pusha
outsl
mov
out
and
inc
sub
dec
and
loopne
mov
and
out
inc
adc
cmp
inc
pop
sbb
shll
aam
sub
jae
arpl
and
add
sbb
addr16
js
gs
movb
push
push
mov
shl
sbb
rolb
dec
mov
dec
mov
push
cmp
xor
arpl
pusha
icebp
iret
subl
jae
push
loopne
push
out
das
test
lahf
xor
fbstp
pushf
roll
daa
popf
ljmp
iret
xor
jns
and
mov
mov
mov
cwtl
push
divl
jae
sbb
push
dec
scas
rolb
mov
push
js
or
scas
scas
xor
daa
int3
cmp
popf
xor
adc
or
jne
out
hlt
push
sbb
inc
fcmovne
adc
push
dec
dec
jae
or
mov
mov
stc
ja
dec
mov
dec
xchg
cltd
arpl
mov
jns
icebp
dec
push
dec
cltd
dec
out
inc
adc
pop
std
jns
push
idivl
popa
sbb
adc
sub
adcl
cmp
pop
xor
sub
test
sub
loopne
arpl
hlt
dec
movsl
stos
cmp
pop
or
mov
push
sub
test
jo
push
mov
outsl
icebp
cwtl
cmp
mov
xorl
test
repz
loop
push
mov
mov
or
sub
shll
stos
pop
jne
mov
jle
hlt
mov
js
movsb
pop
or
pop
clc
outsb
jge
lods
adc
cli
bound
mov
cmp
xor
adc
neg
sbb
xchg
or
test
repnz
jb
cmpb
sub
xchg
ja
scas
hlt
insb
jge
jnp
in
sbbl
adc
test
and
or
mov
pop
std
sbb
adc
scas
lock
pop
push
cmp
rcrb
pop
cltd
jg
repnz
out
flds
lret
mov
outsb
lods
xlat
jno
cmp
repz
test
int3
adc
call
nop
inc
sbb
jmp
cmp
rep
icebp
jae
xchg
icebp
in
sbb
js
mov
enter
sbb
jl
mov
mov
outsl
fcmovnb
aaa
jnp
int3
cld
in
icebp
mov
xor
mov
test
pop
adc
popa
adc
or
out
or
xchg
cmp
les
ror
jnp
sub
std
fisttpl
into
lret
into
pop
jne
mov
out
xlat
mov
scas
xchg
into
jb
dec
iret
jl
inc
xor
cs
xor
int3
cmc
xor
dec
push
pop
shlb
fmull
les
or
push
cmp
xlat
lret
xor
mov
fs
hlt
addr16
mov
imul
mov
lcall
iret
jns
ds
aas
bnd
scas
add
dec
test
push
inc
movsl
cmp
jbe
incl
mov
aam
nop
xor
push
arpl
dec
in
rcll
push
lret
xchg
xlat
add
ds
cli
xchg
mov
leave
ss
cmpsl
popa
pop
dec
push
fsubrp
xchg
inc
jbe
xor
dec
cltd
sbb
out
jnp
filds
push
and
test
mov
add
ret
aad
jbe
push
adc
loope
xchg
mov
fdivr
xor
and
mov
mov
cs
fwait
addr16
sahf
mov
imul
sub
xchg
and
pop
xchg
cmp
xor
or
jmp
sbb
icebp
mov
add
jbe
jbe
sub
pop
mov
loope
jge
lea
movsl
or
fidivs
daa
dec
adc
sti
addb
xchg
sub
dec
fdiv
loopne
shl
cmp
ret
inc
cs
es
mov
mov
pop
leave
aaa
enter
gs
jg
or
fcomps
cwtl
test
das
xchg
jp
sub
push
aam
mov
pop
fisttpll
pop
popf
ja
lea
ror
fdivs
call
xchg
xor
mov
sbb
pop
jno
rcr
cs
mov
loope
and
scas
fistps
aam
dec
mov
nop
sti
cmp
jp
movsl
pop
data16
movsl
daa
mov
dec
in
pop
inc
or
fcoms
mov
ja
sbb
arpl
movsl
je
mov
dec
jae
rep
aad
jg
sbb
daa
insb
ja
mov
and
and
xor
add
cwtd
dec
push
clc
std
lea
sbb
inc
mov
add
int3
add
push
add
cmp
outsl
mov
iret
cwtl
sub
lret
fisubs
enter
enter
push
push
dec
stc
push
stos
dec
xor
jns
test
cmpsb
pushf
adc
sbbl
ljmp
shrb
inc
jge
popa
lret
xor
mov
int3
lret
push
cmp
ret
mov
test
les
ret
decb
scas
push
and
add
lahf
ret
or
or
xor
sbb
test
sbb
jmp
fcoms
je
xchg
mov
fmuls
cli
xor
mov
jbe
ret
lahf
jno
jno
fcompl
and
mov
iret
imul
adc
rcrb
ret
int
imul
push
lock
sarl
clc
ss
jp
popa
jns
and
in
pusha
cli
xchg
pop
aas
push
mov
xor
mov
fwait
cmp
jns
aam
or
xchg
xor
dec
aam
and
cmp
dec
fldcw
dec
xrelease
into
add
mov
mov
outsb
insl
mov
in
adc
icebp
pusha
xchg
sbb
int
ficoml
fs
pop
push
mov
and
pop
adcb
xchg
push
sbb
jmp
cmpsb
adc
ljmp
lods
sbb
xlat
sub
mov
pop
fisttpll
mov
mov
xor
lcall
sahf
cli
inc
dec
stos
bnd
cltd
aaa
inc
mov
xchg
jecxz
push
cmp
iret
test
cmpb
inc
mov
jb
adc
pop
addl
fimull
hlt
cli
es
gs
pushf
dec
mov
xchg
mov
bound
xor
mov
mov
mov
nop
mull
pop
clc
inc
cmp
imul
scas
pop
test
ds
xchg
in
mov
and
rol
mov
push
jne
leave
cltd
cmp
lahf
mov
cmpsl
fcomps
cmpsb
sub
lcall
int
int
xchg
push
imul
push
out
jecxz
loope
push
dec
jae
sub
sub
cmp
daa
das
sbb
mov
mov
sbb
adc
pop
aas
and
loop
push
push
jle
sti
insl
adc
bound
data16
scas
ret
sahf
cmp
jge
scas
cmpsl
xor
sahf
xor
loop
rorl
or
popf
int3
dec
inc
pop
xchg
adc
nop
scas
mov
mov
movsb
jbe
scas
and
mov
cmp
jmp
arpl
test
stc
test
mov
sub
add
push
pop
test
dec
fs
fstps
mov
sub
arpl
cwtl
adc
mov
xor
jl
pop
cs
jge
mov
jmp
dec
pusha
les
je
ret
sub
lds
idivb
pop
xor
sahf
mov
imul
adc
je
push
or
mov
loopne
pop
sub
sarl
push
jnp
aam
inc
sahf
lret
andb
mov
jb
pop
xchg
adc
test
mov
pop
mov
xchg
jmp
js
inc
aad
lcall
xor
lock
jae
test
outsb
cmp
out
inc
or
sbb
pop
pusha
notl
sub
orb
loope
aad
jns
mov
push
insl
ljmp
test
mov
cmp
jg
push
jecxz
cwtl
movsl
popa
jno
push
pop
mov
fwait
bnd
je
and
je
in
sub
inc
xor
mov
stos
popf
mov
sti
arpl
rcll
in
fnstenv
pop
lahf
inc
mov
addr16
xchg
adc
push
dec
inc
negl
mov
or
adc
jo
and
sbb
jo
sub
cld
sarl
pop
add
jb
in
nop
xorl
es
adc
pop
push
gs
insb
and
pop
and
jmp
push
dec
daa
inc
in
enter
fstpl
xchg
js
xor
and
sub
movsb
adc
xor
pushf
aam
adc
and
and
imul
jne
dec
loope
mov
mov
out
shll
fwait
rep
or
mov
adc
ja
mull
adc
mov
add
pop
adc
sahf
lret
mov
in
inc
dec
gs
or
add
pop
cmp
outsb
cmp
inc
and
pop
xor
cmp
jmp
imul
jmp
pushf
xor
pop
xor
dec
lock
mov
add
lahf
dec
cs
and
xchg
std
pop
popa
or
aad
pop
sub
fmull
out
sbb
mov
cltd
pusha
cmpsl
pop
in
push
cmp
test
push
mov
mov
mov
push
fwait
push
inc
iret
mov
mov
iret
scas
jecxz
sbb
andl
clc
pusha
das
sbb
mov
xchg
xor
lods
rcr
xchg
jnp
popf
call
arpl
leave
xchg
testl
mov
test
xchg
add
movsl
sbb
adc
jl
repnz
repnz
mov
enter
jns
sub
mov
fdivr
rcrl
aaa
enter
pop
add
sub
pop
dec
sbb
test
mov
mov
hlt
outsl
fwait
dec
imul
sbb
xor
xor
aas
jbe
jmp
jmp
sub
cmp
cmpsl
aas
cld
in
imul
and
aad
mov
adcl
les
xor
cmp
outsl
sub
shl
outsb
imul
mov
xchg
inc
shlb
jbe
cmp
hlt
loop
cmp
out
xor
aas
push
fistpl
lods
lahf
xchg
mov
cmp
and
arpl
gs
push
xor
bound
or
jns
xchg
pop
or
jne
pop
mov
cwtl
mov
mov
push
dec
iret
push
mov
dec
or
add
add
mov
dec
outsl
call
fstps
lods
cmp
xchg
jmp
push
into
fs
idivb
sub
hlt
fisubs
xor
cmp
pop
or
xlat
sbb
insb
repnz
push
add
data16
je
bound
fdiv
mov
mov
fcmovnb
jno
in
ljmp
jne
pop
pop
xchg
imul
push
call
pop
fidivs
cmp
pop
nop
dec
adc
in
cmp
push
jne
jns
or
adc
mov
clc
mov
push
mov
outsl
sbbl
jb
jge
fs
popa
sub
push
jo
add
inc
les
hlt
addr16
popf
pop
jecxz
push
sub
sub
pop
shll
imul
lea
sbb
pop
push
ret
stos
hlt
cmp
adc
pop
mov
sbb
pushf
xchg
js
jmp
jnp
or
aaa
mov
insb
mov
rcrb
in
fidivs
push
lods
fbld
loope
jmp
mov
jle
popa
bound
popa
xchg
xchg
sbb
mov
ret
in
ret
push
push
push
ss
int
pop
in
data16
adcl
icebp
push
arpl
sbb
les
cmpsb
cmpsl
stos
add
inc
daa
inc
inc
or
aad
addb
mov
outsb
icebp
adc
insl
fldl
loopne
cwtl
jle
mov
ret
lods
inc
into
xchg
pusha
scas
mov
out
push
and
lock
divb
inc
xchg
mov
pop
or
ljmp
call
pop
lcall
mov
adc
xchg
pop
jp
cmp
fadd
mov
jl
aam
pop
pusha
xlat
xchg
stos
pop
dec
pop
xchg
mov
mov
in
mov
lret
add
imulb
mov
in
int
mov
adc
popf
flds
mov
sub
push
mov
jbe
mov
or
jne
pusha
nop
rorl
inc
dec
mov
inc
pop
and
jo
stc
andl
push
dec
popf
andb
adc
inc
and
lds
fiaddl
jl
xchg
cmp
sbb
or
lahf
popa
aam
push
inc
jno
inc
fucomip
subb
push
push
xchg
mov
sbb
popa
lods
dec
adc
dec
push
mov
out
dec
mov
sbb
lods
jl
test
xor
cmp
mov
fsts
adc
push
inc
ljmp
mov
and
cmp
cmp
popa
in
in
cmp
test
mov
mov
fsubrs
and
out
mov
mov
sbb
loop
mul
lea
mov
shlb
adc
iret
and
int3
fildll
pop
out
std
clc
data16
push
das
mov
insb
mov
lret
mov
lods
movsl
mulb
pop
pushf
inc
lods
test
jno
data16
js
xchg
imulb
jmp
ja
sub
mov
and
mov
mov
scas
pop
imul
pop
lcall
les
imul
dec
in
jmp
scas
inc
sarl
test
and
mov
imul
lret
inc
push
xchg
pop
hlt
pop
popa
push
cld
out
iret
popa
pop
mov
cmp
call
gs
add
sub
aas
adc
xchg
je
mov
movsb
data16
mov
es
neg
icebp
push
popl
loope
ds
jns
pushf
cmc
xchg
outsb
mov
jb
push
adc
sbb
stc
jb
xor
inc
sub
insl
insb
outsl
mov
xchg
jmp
mov
pop
adc
sub
hlt
mov
sbb
mov
inc
xor
push
cmp
sub
push
mov
mov
or
insl
pop
and
xor
in
inc
cld
aaa
and
shr
leave
hlt
adc
xor
stos
out
es
xor
and
mov
roll
inc
shl
lret
xchg
lea
mov
inc
and
mov
orl
pop
mov
or
jl
cld
mov
movsl
push
jecxz
sub
rcrl
inc
pop
inc
xor
sbb
inc
popf
adc
cltd
mov
stos
sti
xchg
enter
mov
mov
or
mov
int3
add
mov
loop
add
sub
vpunpckhbw
mov
mov
shll
insb
outsl
push
aam
pusha
mov
xchg
addr16
mov
flds
mov
mov
sarb
jne
inc
mov
or
cmp
std
dec
int3
mov
cmpsb
push
jg
dec
inc
mov
inc
enter
or
lods
jns
inc
add
pusha
std
push
sahf
xchg
and
popl
mov
cmp
ja
jecxz
push
test
push
jno
jnp
pushl
mov
jmp
push
adc
cmc
or
lds
mov
das
leave
lods
cmp
push
lock
ss
repz
jne
scas
adc
repz
test
mov
mov
addr16
fistpll
sbb
mov
dec
in
in
or
movaps
int
pop
fdivrs
int
mov
fistps
nop
sti
sub
rcrl
into
push
fs
div
adc
inc
mov
shl
ds
lcall
sbbl
int
pop
cli
cmpsl
popa
pop
xor
push
mov
sbb
lock
sbb
cmp
push
and
sub
xorb
sbb
push
jl
or
iret
shlb
push
cwtl
in
adc
pop
shr
test
pop
xor
jne
ret
jns
xchg
sub
pop
mov
nop
icebp
lock
test
andl
mov
test
addr16
push
add
fnstsw
sbb
mov
jmp
idivb
jp
mov
pop
mov
and
xchg
leave
sub
push
lock
push
and
xchg
daa
add
lret
mov
orb
ret
xor
test
push
dec
xlat
add
sub
sahf
jecxz
pop
enter
nop
adc
roll
lea
iret
adc
stos
aad
push
add
mov
dec
mov
mov
push
pop
pop
dec
outsb
lahf
sub
testl
jns
inc
in
outsb
int
xchg
es
clc
xchg
repz
sub
outsb
cltd
mov
xor
movsb
mov
cs
jp
xlat
aaa
mov
cmp
outsb
jecxz
xchg
mov
xor
mov
test
scas
fmull
jb
fstl
repz
or
mov
call
por
inc
inc
xor
ja
out
push
lea
dec
and
adc
push
cmp
and
inc
addl
cmp
xchg
xchg
or
sbb
rclb
and
pop
xchg
lret
bound
mov
fwait
cmp
jb
lret
xchg
xor
pop
cmpsl
sbb
cld
enter
jno
lock
lret
xchg
lahf
xor
and
xor
rcr
mov
test
js
mov
push
cld
xor
adc
mov
add
in
push
cmpsb
in
hlt
daa
mov
xor
sbb
push
inc
mov
dec
pushl
jecxz
inc
push
push
fs
xchg
inc
push
or
out
jecxz
jmp
shl
jo
cmp
and
mov
loop
lds
mov
aad
sub
add
imull
xchg
and
sbb
dec
mov
push
pop
push
leave
out
push
lret
pop
and
adc
jmp
jl
xor
repnz
pop
addr16
xor
clc
scas
sbb
or
bound
xchg
iret
jno
xchg
cmpl
mov
inc
sub
sarl
in
push
popf
dec
mov
rclb
jl
inc
add
jns
lret
fs
jae
cmpsl
mov
int3
rep
shl
fwait
icebp
lret
push
ret
std
xchg
addb
push
fwait
out
lahf
mov
pop
sbb
jo
mov
mov
dec
ficoml
ret
sub
mov
jmp
arpl
aad
cld
jecxz
filds
stos
push
les
inc
or
shrl
sbb
sbb
hlt
pop
push
jo
mov
hlt
int
enter
cs
push
mov
aam
fmull
push
gs
leave
xchg
push
scas
adc
cld
fiaddl
sub
mov
xchg
enter
je
cmp
lcall
popa
and
hlt
mov
pop
std
ja
mov
mov
out
pop
push
pop
sub
lods
cmp
mov
rcll
xchg
mov
adc
adc
mov
adc
or
imull
loope
lahf
push
jae
sub
aam
inc
lods
jb
mov
stos
cmc
sbbl
or
sti
mov
out
js
rcll
xchg
ja
rorb
pop
es
or
fsubr
shl
pop
js
add
out
sbb
out
loop
push
adc
loope
in
mov
aas
cmp
mov
repnz
inc
fwait
mov
jle
iret
jg
test
push
aas
xor
das
lea
in
pop
xabort
and
mov
ds
sub
xor
mov
mov
xchg
push
dec
pop
mov
push
out
xor
xlat
push
adc
iret
iret
mov
cld
lahf
adc
stos
push
lret
andl
cltd
loopne
push
add
xchg
pop
lahf
cli
xor
mov
mov
pop
lea
adc
cmpsl
imul
inc
in
jnp
mov
lret
stos
dec
adc
cmpsb
inc
push
add
mov
push
dec
cmp
lods
loope
hlt
xchg
jl
insb
jo
xchg
pushf
xchg
insl
sub
stos
fs
in
jne
aam
lds
test
lret
popf
dec
mov
ljmp
lds
xor
stos
adc
xchg
pop
push
mov
lahf
mov
jle
aaa
cmp
mov
test
or
ret
data16
and
xor
adc
aam
pop
ss
dec
out
xor
inc
test
cmpsl
mov
add
daa
sub
jmp
pop
mov
xor
into
loopne
int3
fnstenvs
imul
push
test
out
jne
dec
pop
shrb
jns
push
and
pop
and
sbb
mov
out
fidivl
mov
enter
and
push
dec
pusha
insb
cmp
fiadds
leavew
ss
xchg
lret
das
pop
cmp
adc
inc
out
sbb
inc
xchg
test
int
adc
fxam
lcall
rcrl
push
es
xchg
push
clc
jle
outsl
cmp
sarb
cmp
pop
or
add
inc
xchg
std
jp
fucomi
lret
or
cmp
inc
mov
aad
xor
bound
test
fcoms
push
xor
jo
jg
sub
enter
dec
repnz
movaps
sub
xchg
inc
fwait
jmp
jge
pop
nop
inc
xorb
mov
jl
or
outsl
jns
ja
xchg
out
sub
and
mov
rorb
fadds
in
movsb
gs
iret
loop
xchg
add
addr16
add
adc
clc
fldl
push
push
cmpsl
imul
mov
fisttpl
inc
mov
shlb
or
call
add
stos
and
das
fucom
sahf
pop
mov
push
adc
roll
push
arpl
fldenv
clc
jecxz
add
in
push
loopne
pop
add
cmp
dec
or
or
dec
divb
hlt
das
scas
int3
jne
fcmovnbe
push
test
lock
push
adcb
insl
push
out
leave
or
addl
mov
sub
lea
shl
mov
imul
adc
vmovaps
push
lcall
mov
sub
or
jb
or
lcall
test
xor
into
mov
icebp
push
add
aas
sub
mov
out
pop
and
mov
imul
out
iret
lea
js
jmp
cmp
lahf
jecxz
jo
jno
adc
aad
push
mov
cmp
mov
xchg
std
sahf
fiadds
xchg
leave
cmpsb
lcall
dec
sub
es
lret
pop
out
mov
inc
enter
mov
call
inc
lds
inc
xor
or
dec
adc
out
aas
loop
push
mov
jle
fmull
mov
add
lea
mov
or
in
jge
cltd
mov
or
and
adc
lock
movsl
jmp
xor
stc
daa
jp
mov
adc
add
lcall
dec
call
lret
and
out
movb
inc
add
cli
push
mov
adc
imul
and
cmpsb
iret
cmp
out
insb
nop
sbb
sti
ret
lcall
xchg
sarl
cwtl
xor
aaa
stos
pop
aas
xchg
cld
sub
pushf
jae
aaa
mov
add
ficoml
jge
dec
jnp
mov
out
cli
push
mov
sub
pop
in
dec
addr16
dec
pushf
mov
pushf
dec
stos
jns
xchg
lds
jo
mov
sarl
ret
sub
dec
adc
xlat
stos
cwtl
mov
arpl
add
jecxz
cmp
pop
bound
push
jle
mov
fcomip
cmc
xor
xor
ja
jo
cld
sub
inc
fnstsw
cmp
push
sahf
in
ret
jmp
jecxz
mov
or
orb
mov
xor
dec
dec
ss
jae
push
mov
mov
push
xor
jnp
mov
fimull
sbb
lret
dec
ja
movsb
test
enter
adc
pop
das
and
push
out
mov
sub
xchg
and
daa
pop
outsb
adc
test
dec
adc
enter
push
lds
mov
mov
pop
dec
int
stc
add
fadds
and
in
or
cmp
mov
icebp
pop
dec
and
sub
fcmovu
xor
movb
test
icebp
and
dec
shll
daa
int
sub
jl
test
fildl
xor
mov
mov
jge
sub
inc
roll
lahf
xor
outsb
cmc
dec
push
popa
dec
push
fbstp
pop
cmp
test
add
roll
push
lods
add
or
fcomi
lock
mov
mov
clc
ds
fnstenv
sar
ljmp
jmp
dec
sahf
mov
push
aam
adc
pop
inc
rolb
jmp
ret
rclb
sub
incb
call
xchg
inc
xchg
imul
mov
or
add
mov
ds
fcomi
or
cltd
push
jl
pushf
mov
pop
mov
jae
add
add
jg
ss
out
sbbl
dec
iret
sti
ret
add
sbb
aad
ds
fstpl
add
push
adc
mov
addr16
xchg
fs
mov
jbe,pn
mov
pop
out
mov
mov
and
add
in
mov
pop
xor
in
cmp
ficoml
mov
mov
adc
je
mov
jmp
popa
xlat
mov
xchg
imul
cs
fiaddl
fldenv
imul
mov
inc
mov
out
cmpsb
jle
shll
cmp
mov
xchg
clc
or
inc
pop
jmp
sbb
mov
je
and
cmpsl
in
mov
pusha
aam
fmull
int3
xchg
stos
lret
lds
or
lcall
mov
push
push
rolb
out
jo
inc
or
fxch
mov
push
add
outsl
iret
add
mov
aas
icebp
loopne
push
icebp
cmp
ljmp
pop
scas
es
sbb
inc
outsb
sbb
adc
scas
inc
es
out
clc
shrl
xchg
add
adc
out
addl
insl
add
pop
push
and
shlb
ret
pop
mov
out
xchg
inc
dec
movsl
pop
loopne
call
arpl
mov
sub
fnstenv
addb
les
sub
jno
push
cmpsl
clc
mov
ja
jp
jno
scas
out
scas
sub
push
fwait
mov
into
push
mov
dec
mov
and
adc
call
mov
ss
mov
cld
cmp
std
stc
out
sub
push
repz
in
outsl
sub
ds
sub
inc
std
mov
dec
jb
daa
xor
adc
test
xlat
les
and
in
outsl
dec
push
xchg
dec
or
cwtl
hlt
rcl
mov
dec
sub
lahf
push
and
sbb
mov
xchg
xchg
shll
mov
jp
push
imul
dec
movsb
or
das
push
pop
js
lret
mov
add
adc
mov
in
addb
popa
js
lahf
cmc
in
lcall
lods
sub
divl
push
int
or
dec
adc
loopne
jno
filds
jbe
and
addr16
cmp
xor
enter
loope
sub
sub
clc
in
push
jp
fiaddl
xor
sub
mov
and
xchg
sahf
gs
sub
dec
stc
jns
inc
arpl
sub
xorl
inc
ret
sbb
mov
imul
aad
sbb
pop
mov
add
jb
lods
mov
lods
lcall
jo
pop
in
ja
mov
fwait
sub
fwait
or
enter
in
mov
data16
int3
sub
lea
inc
add
loop
dec
mov
jg
add
dec
scas
sti
inc
shl
lret
cltd
es
popf
fnstsw
loop
lret
jecxz
pop
jmp
mov
xchg
push
adc
push
and
jb
leave
sub
fdivl
jmp
call
les
dec
xchg
add
inc
nop
repnz
inc
jecxz
inc
lcall
inc
cltd
lods
fisttpll
fcom
xchg
negb
stos
sub
adc
sbb
mov
add
inc
mov
pop
sbb
push
fadd
adcl
stos
loop
and
mov
xorl
clc
xchg
jp
stc
aam
xor
inc
faddl
inc
sbb
aad
sarb
mov
aas
inc
or
punpckhdq
jb
je
stos
movsb
stos
mov
fstl
inc
idiv
es
aaa
jbe
mul
cli
inc
or
mov
leave
test
stos
movsb
push
mov
adc
rorl
adc
enter
xchg
xor
lods
in
ja
xor
jmp
imul
sub
nop
out
add
sbb
jl
jmp
insb
pop
dec
hlt
imul
xor
or
adc
sarb
jo
outsl
loopne
cmpsb
fstl
cmc
dec
lods
jg
inc
outsb
push
or
inc
lret
jmp
lods
mov
scas
in
inc
pop
sub
xor
sub
outsl
scas
shll
in
aas
fsubrp
jge
hlt
enter
jae
int
push
mov
mov
cltd
jmp
push
sub
clc
xor
sbb
in
fsubr
lcall
sub
mov
jnp
sub
sub
mov
idivl
adc
mov
sub
repz
adc
arpl
cmpsl
insb
dec
imul
shl
xor
stos
rcl
jl
mov
cmpsl
ret
lea
jno
cltd
push
movsl
inc
dec
jo
addl
popa
xchg
mov
xchg
mov
add
mov
scas
sub
mov
shl
cmp
jecxz
xor
inc
mov
cli
cmpsl
std
sub
cmp
imul
xchg
fwait
push
pop
sahf
cmp
inc
xor
decb
cmp
cmp
cmp
fisttps
jge
xchg
cmp
mov
pop
sub
xor
daa
mov
std
rcll
sbb
add
sub
jmp
mov
ja
mov
mov
inc
jle
mov
xchg
aad
loopne
xchg
sub
sbbl
loop
dec
enter
lcall
add
mov
imul
xchg
in
jecxz
fists
add
sbb
adc
add
push
ret
sbb
xchg
dec
jbe
pop
test
sub
lahf
pusha
inc
lret
subb
sub
cwtl
fcmovnu
arpl
xchg
fildl
mov
pop
adc
cld
cmp
sarb
test
dec
shll
mov
push
cmp
cmp
pop
push
nop
xchg
or
loope
cmp
js
xchg
insb
lret
pop
scas
dec
mov
push
push
ljmp
add
cmc
imul
sbb
outsl
out
cmp
inc
adc
xchg
out
int
push
push
sti
js
add
sbb
sbb
sbb
push
adc
imul
sti
cs
je,pn
pop
mov
fstps
push
pop
ds
test
aaa
rcrl
inc
insb
iret
insb
lea
cmp
mov
push
popa
cmp
mov
loope
scas
mov
or
stos
dec
insb
outsl
mov
jb
push
mov
inc
xor
add
fnclex
fidivrl
add
dec
or
les
adc
decl
xchg
xchg
bound
stos
dec
repz
jmp
jne
bound
pushl
int
mov
adc
push
mov
sbb
cmpsb
out
cmp
and
jns
and
repnz
jmp
stos
aam
mov
clc
pushf
outsb
insb
mov
push
or
and
jb
and
mov
add
add
rclb
jle
test
iret
in
sub
or
push
mov
bound
loopne
push
jno
into
mov
cmp
dec
call
jle
and
jns
in
pop
cwtl
lea
es
in
negb
enter
mov
test
pop
jmp
aaa
testb
push
pop
movsb
adc
sub
sub
xchg
mov
or
sar
sub
pop
shlb
out
lcall
jae
inc
cmc
jae
mov
inc
jns
imul
icebp
mov
inc
pop
jge
cmp
inc
dec
pop
mov
imul
jno
jmp
push
mov
and
or
stos
ficompl
xchg
int
out
aas
test
inc
xchg
cmp
or
lock
rcll
sti
sahf
adc
or
sub
out
nop
push
je
push
sub
mov
and
lret
cwtl
int
jmp
in
faddl
test
rorl
inc
fcmove
and
cmpsl
xlat
scas
sub
mov
mov
ljmp
pop
pop
lcall
add
sahf
lods
enter
fisubrs
inc
and
lret
outsb
mov
insl
xor
mov
lods
nop
les
xor
xchg
sub
push
jmp
lods
sbb
jbe
test
push
out
mov
sbb
fcoms
pop
out
imul
xor
mov
in
xor
dec
out
lahf
fcoml
cmc
mov
inc
sub
stc
outsl
sub
hlt
dec
pushf
je
subl
and
jmp
lods
xchg
shlb
sbb
rcrw
shl
lret
xchg
dec
add
inc
rcrb
sub
sbb
lahf
push
nop
xor
mov
leave
mov
call
stos
xchg
je
inc
inc
outsb
insl
adc
mov
lds
add
cmp
into
int
jp
sub
jecxz
mov
xor
xor
jge
pop
jp
jo
lahf
jmp
sub
nop
imul
jo
mov
fimull
mov
out
insl
dec
leave
xlat
stos
adc
jl
push
sahf
inc
mov
xchg
ficompl
pop
jno
mov
jno
out
mov
mov
push
aam
jle
lcall
popa
jg
out
imul
stc
lds
popa
push
cmpb
lods
pop
push
jg
loope
or
jmp
mov
cld
mov
or
gs
mov
popf
mov
jg
and
push
lods
lds
rcrl
sti
jmp
cmpsl
fisubrl
push
pushf
cltd
push
sbb
pop
test
ret
or
clc
data16
rol
clc
xchg
add
mov
cmpsb
push
lar
pop
xor
lock
je
adc
into
ret
pop
pop
mov
xor
dec
mov
cmpsl
ljmp
scas
pop
out
adc
stos
fwait
and
fdivrp
ret
dec
shl
or
mov
fdivr
mov
in
jbe
cs
cmc
mov
jnp
cmp
xchg
aam
lcall
push
fsubrl
dec
call
and
int
jo
cmp
pop
jecxz
clc
push
enter
xlat
outsl
gs
ja
aaa
leave
ds
sbb
and
movsb
fdivl
loop
adc
lahf
data16
or
ss
testb
cmp
lods
cmp
sub
adc
sub
dec
imul
imul
aaa
xor
jb
xor
adc
mov
push
mov
es
mov
inc
shlb
nop
add
cmp
sub
scas
inc
mov
adc
lret
stos
clc
iret
loope
inc
sub
adc
arpl
je
loope
je
test
jne
push
sbb
lcall
sbb
fwait
ljmp
cmp
sbb
sub
inc
nop
dec
ss
push
xchg
aad
mov
add
mov
imul
mov
daa
jnp
data16
sti
aaa
lds
push
popf
popf
insl
xor
xor
enter
lret
fcomps
js
dec
ljmp
fsts
jbe
dec
aam
pop
pop
inc
sbb
xor
mov
notb
and
lahf
ficompl
ret
iret
jp
pop
adc
xor
dec
xchg
inc
inc
inc
xchg
mov
push
sbb
dec
arpl
sarl
push
sahf
mov
loope
imul
mov
test
pop
push
aam
dec
inc
dec
enter
adc
jbe
fimuls
decl
jns
mov
mov
fwait
mov
mov
and
lods
dec
mov
add
das
rclb
inc
lret
xchg
jg
scas
adc
ret
xor
iret
sub
push
fisubrs
jae
or
dec
loopne
mov
xchg
jmp
dec
pop
scas
mov
sbbb
jmp
arpl
adc
or
mov
lcall
mov
mov
mov
dec
or
xchg
xlat
sbb
add
loopne
sbb
or
and
inc
jnp
out
push
mov
mov
dec
adc
cli
shlb
fxch
and
hlt
jae
add
sbb
push
call
outsb
ljmp
inc
test
sbb
mov
outsb
js
push
jns
push
aas
ret
mov
mov
cltd
rolb
or
sub
dec
mov
loop
dec
outsl
dec
xor
movsb
cmp
sahf
xor
jmp
sbb
adc
cld
jl
mov
cltd
xchg
push
pop
lods
stc
sub
jp
adc
int3
xor
sbb
cmp
jl
dec
test
movsl
ret
mov
cmpsl
dec
mov
test
xor
call
dec
mov
cltd
std
add
jmp
icebp
add
mov
in
das
or
push
push
popf
std
adc
iret
into
mov
lods
mov
cmp
mov
mov
push
pop
push
int3
loopne
and
xor
push
into
scas
lock
inc
stos
sbb
cs
pop
aam
arpl
pushl
movsb
mov
shl
cmc
cmpsl
dec
mov
adc
scas
jg
sbb
cmp
push
adc
push
push
jo
fcompl
shrb
stos
outsb
jg
enter
inc
sub
cmpsl
pusha
dec
sbb
pop
ljmp
or
pop
movsl
outsl
arpl
or
popf
mov
push
sub
mov
fs
add
lret
loop
test
movsl
mov
xchg
nop
adc
mov
or
adcl
mov
jmp
xchg
or
sub
lret
fidivl
or
or
loopne
adc
and
test
popl
xchg
iret
ja
sarl
push
sub
and
iret
movsl
in
test
scas
stc
or
inc
cmp
jne
cmp
cmp
mov
arpl
in
dec
call
int
push
pop
inc
xor
in
scas
rcr
adc
dec
rclb
jge
rolb
adc
call
ret
pop
inc
enter
orb
pusha
out
hlt
jmp
dec
or
and
jo
mov
mov
pusha
jl
add
cmp
mov
jbe
mov
ss
mov
in
pop
hlt
insl
add
pop
mov
sub
mov
fucomp
aaa
jns
adc
push
out
insb
dec
dec
aad
xor
and
outsl
call
xchg
push
xor
stos
es
pusha
add
stc
imul
aas
xchg
and
push
divb
sarb
sbb
mov
divb
stos
add
jmp
arpl
xor
and
push
push
mov
popa
pop
out
inc
pop
mov
lret
jae
push
mov
in
dec
ret
mov
enter
movsl
mov
aad
stos
push
push
mov
imul
pop
or
add
mov
repnz
in
call
sub
sub
aas
pop
cmp
inc
shrl
inc
in
mov
fdivl
sub
enter
push
fdivrl
pop
movsl
bound
mov
ret
lret
out
shl
sub
adc
add
mov
cmc
mov
add
ljmp
scas
dec
xor
push
inc
sub
inc
bound
rcl
bound
fwait
adc
push
lea
dec
test
xchg
sub
pop
inc
mov
jbe
pop
xor
jg
sbb
aas
stos
popf
dec
int
icebp
popf
ljmp
or
pusha
insb
sbb
fiadds
mov
xor
xor
popa
dec
in
lods
rcrb
loope
loop
mov
xchg
and
xor
push
mov
push
cmpb
je
jge
int3
repnz
leave
pop
loop
dec
xor
or
shll
push
adc
call
lods
pop
push
cmpb
rorb
mov
fsubrl
xor
mov
aas
loop
and
dec
es
jno
mov
xorl
inc
jbe
adc
aad
jbe
cltd
shrl
mov
fists
pushf
xchg
adc
adc
aaa
mov
push
add
mov
out
mov
nop
and
dec
stc
xchg
xor
xor
popa
lods
or
sub
andb
add
fnstcw
pop
xchg
mov
sbb
cmpsb
rolb
movsl
das
cli
inc
out
std
imul
mov
fsub
das
push
mov
jmp
lea
mov
xor
sarl
add
dec
lods
pop
iret
add
lret
jb
push
rcr
jge
lahf
sub
xor
stos
add
sti
rcrl
js
xor
add
pop
sub
roll
fbld
das
hlt
and
inc
loopne
repnz
outsb
dec
out
testb
or
lret
fstps
aaa
mov
mov
xchg
mov
mov
add
add
pop
cmp
adc
enter
out
mov
pop
lods
dec
push
xor
mov
or
rcrb
mov
mov
push
gs
cmp
xchg
jg
test
shufps
dec
icebp
shlb
sub
xchg
divl
mov
cwtl
and
xchg
adc
inc
mov
pop
or
clc
dec
mov
and
lds
ffreep
xor
xchg
push
aad
mov
push
data16
call
cs
push
aad
cmpsb
jns
cmp
cmc
cwtl
jmp
push
fs
mov
test
lods
inc
inc
adc
mov
and
cld
adc
mov
enter
movsl
mov
mov
insb
mov
jnp
mov
rol
clc
hlt
xor
jp
push
gs
mov
sbb
push
lods
mov
movsl
lcall
loope
xor
mov
mov
and
add
loope
xchg
cmp
jmp
mov
fdivs
js
sbb
cmp
js
jle
sbb
jbe
add
pop
cld
xor
fbstp
jne
pop
nop
les
rcll
imul
mov
repnz
mov
imul
and
xchg
or
pop
rclb
cmpsb
fildll
mov
stos
pop
jecxz
pop
in
fnstsw
mov
mov
mov
sbb
js
xchg
ljmp
dec
stc
out
and
add
sbb
fcomp
mov
out
and
jmp
jmp
out
jbe
std
push
in
mov
adc
mov
aad
jl
mov
mov
pop
xchg
mov
test
fldl
sbb
imul
and
lea
psubsb
mov
xor
sahf
movsb
jns
jp
shrb
inc
mov
jnp
test
and
add
xchg
jns
mov
mov
mov
jne
mov
aas
lret
xor
fnsave
stos
pop
sbbl
lea
jns
jo
out
fldenv
jp
dec
xchg
mov
add
arpl
divb
outsl
outsb
mov
fisttpll
repnz
jnp
call
sbb
fdivl
shl
js
mov
dec
adc
or
lea
pop
cmp
dec
data16
sub
test
sti
notl
jno
pop
jno
data16
in
mov
inc
sbb
xor
sbb
lea
ret
jge
addr16
test
pop
push
je
rorb
lahf
sub
fistl
jb
or
push
sub
cmp
xchg
cmpsb
dec
jp
pop
or
xbegin
rorb
inc
imull
inc
mov
mov
shr
add
lcall
into
xlat
add
jno
add
fmul
xor
xlat
push
jb
mov
adc
cmc
cs
lret
popa
scas
push
into
imul
js
gs
mov
push
ret
movsb
nop
dec
fnstenv
push
fwait
sub
lcall
add
in
cmpsl
or
rorb
inc
cmp
adc
pop
clc
sub
hlt
inc
cwtl
fdivs
xchg
add
adc
jne
xor
mov
adc
sub
in
popa
cs
mov
enter
popa
clc
int3
mov
popa
mov
into
pusha
fdivr
cmc
jb
out
int
and
jno
xchg
adc
jne
xchg
push
pop
fmull
inc
cmp
std
pop
add
into
ss
fcomps
adc
outsb
call
in
mov
subb
loop
shrl
nop
or
test
jnp
repnz
push
adcb
push
stos
mov
xchg
mov
imul
mov
adc
cmp
mov
push
and
cld
pushf
clc
sub
sub
loope
add
rcrl
jo
out
faddl
ret
into
dec
mov
sbb
scas
ds
push
enter
pop
push
or
scas
xor
lock
sub
enterw
arpl
es
into
leave
movsb
cltd
dec
popa
mov
pcmpgtw
mov
push
enter
sub
scas
fidivrs
mov
movsl
enter
pop
dec
std
ds
loope
pushf
xchg
fs
xchg
out
in
xor
ds
out
or
pop
adc
pop
fwait
jb
std
inc
lret
add
mov
mov
enter
mov
cmpsb
xor
or
test
jne
mov
push
push
je
jnp
lds
test
daa
sbb
sub
mov
dec
jge
loope
cld
cltd
shll
sahf
out
test
leave
or
xor
vpackssdw
in
popa
imul
xchg
or
jns
fnsave
sub
jl
sbb
sub
sub
push
jg
dec
cmp
push
push
push
and
xor
pop
push
jmp
mov
popf
jnp
in
mov
cli
scas
xchg
loop
pop
shl
gs
mov
insl
xor
and
dec
adc
jge
call
inc
xchg
cmpsl
daa
cmc
or
scas
fsubs
inc
dec
jle
ficompl
mov
xchg
dec
popf
adc
cli
std
inc
sbb
outsl
pop
xor
sbb
jb
in
lcall
shlb
rclb
adc
sbb
and
cwtl
push
test
dec
jmp
inc
and
inc
es
mov
ret
scas
gs
stos
lret
test
push
jg
loopne
xor
xor
ffreep
ret
add
fdivl
add
add
mov
mov
jne
fldt
cmpsb
cmc
repnz
xor
sub
cmp
fimuls
adc
lcall
fdivs
xchg
xchg
push
add
pop
into
cwtl
das
sbb
pusha
add
lret
js
and
jbe
ficomps
xorl
push
not
sub
std
pop
adc
outsb
lret
stos
shll
xchg
into
daa
loope
push
push
cmp
push
jne
add
mov
push
cmc
adc
jge
mov
sarl
mov
subl
mov
or
in
out
int3
cli
inc
sbb
ss
mov
subl
je
pop
mov
cmp
sahf
test
or
insb
in
call
popf
xchg
jno
or
pop
jb
adc
or
mov
mov
inc
lods
xor
sbb
mov
inc
xchg
jg
mov
hlt
jmp
xor
push
xor
jp
lods
cmpsl
test
movsl
push
cld
adc
dec
cmc
inc
push
cmp
popf
push
js
mov
cmp
out
cmp
jmp
xor
scas
cmovne
ljmp
inc
lea
int3
cmp
inc
push
jmp
jb
loop
bound
das
aaa
orl
call
jae
jnp
addps
xchg
cmp
or
xchg
insl
push
fs
mov
jmp
mov
test
fldt
add
sbb
sahf
inc
lea
adc
xor
ficoml
pop
add
cmp
loope
push
ret
cmp
mov
mov
loopne
xor
enter
out
adc
cmp
fwait
ja
push
jmp
cmp
pop
cmp
jmp
pop
adc
jne
out
pop
mov
dec
sti
vmovd
psubq
mov
sbb
add
dec
push
push
loope
mov
dec
xor
and
and
fldt
lods
jle
rorl
iret
cltd
mov
cmpb
aam
lea
lret
jnp
loop
rorl
inc
aaa
xchg
lods
mov
pop
scas
fs
mov
pop
sarl
inc
mov
popf
aad
jne
lods
dec
dec
mov
ficomps
push
popf
loop
adc
outsl
adc
int
xor
roll
pop
jb
cmp
jmp
or
ljmp
lret
outsl
shrb
pop
or
aam
rcr
arpl
jle
in
ljmp
mov
mov
add
adc
cltd
les
iret
lret
jno
or
fdivp
adc
enter
and
cld
mov
mov
inc
push
mov
xchg
loop
andl
sub
mov
adc
xor
lods
cmpsl
leave
ljmp
lcall
cs
adc
and
shr
xor
mov
mov
adc
lahf
and
aad
sbb
sti
sarb
sbb
mov
imul
mov
push
loop
std
arpl
jno
mov
cmpsl
sbb
aas
jbe
lods
outsb
jge
or
test
dec
leave
adc
jmp
mov
add
call
and
mov
mov
lcall
test
xchg
test
xlat
aad
mov
pushf
inc
sbb
test
hlt
pop
out
int3
loop
scas
dec
add
les
leave
and
jns
hlt
pop
fdivr
leave
jge
xchg
push
test
js
or
mov
inc
xor
mov
jle
push
adc
outsb
and
sarl
xchg
sbb
icebp
test
push
bound
cmc
imul
jp
jmp
loope
jne
or
sbb
mov
and
push
mov
popf
testl
loop
xchg
sbb
dec
arpl
shlb
inc
pop
test
xchg
inc
add
cli
loope
out
fidivs
ljmp
dec
in
pop
int3
pop
xor
or
xor
lods
or
outsb
inc
stc
xor
movsb
xor
sti
adcl
hlt
out
clc
dec
mov
push
and
xor
ja
test
aas
test
hlt
ds
loope
sbb
divb
and
insl
stos
jns
call
xchg
es
cmpsb
arpl
in
adc
cmp
outsl
sbb
popf
rclb
int
popa
fisubrl
push
test
mov
imulb
cld
fldenv
pushf
inc
xchg
xor
xchg
lahf
adc
inc
test
pop
out
subl
inc
test
jmp
and
xchg
push
or
inc
mov
pusha
pop
outsb
inc
xchg
cmp
in
mov
jle
adc
push
lock
adc
mov
xchg
sub
and
mov
adc
jle
pusha
adc
int3
mov
push
mov
xor
repz
cwtl
dec
insl
fwait
lods
sbb
sub
push
add
stos
std
adc
ja
or
add
pop
mov
scas
adc
scas
dec
inc
dec
ret
push
icebp
lret
sbb
cld
fdivrs
out
jle
mov
sub
std
in
mov
cmp
testl
imul
and
and
fwait
aas
sarb
mov
dec
adc
push
dec
jecxz
pop
pop
mov
jecxz
sbb
aad
jl
mov
xchg
xchg
mov
jno
repz
inc
jmp
push
push
fsubrs
push
insb
inc
xchg
and
inc
xor
dec
or
je
jg
or
mov
aad
lods
mov
xchg
dec
test
adcb
js
fadd
pop
lods
pop
sbb
mov
mov
lahf
pop
movsb
add
adc
cmp
scas
mov
shll
jl
xor
xchg
roll
push
hlt
jmp
mov
js
pop
push
int
lods
mov
das
jno,pt
mov
je
dec
add
ficompl
and
push
mov
mull
mov
out
rcrl
loope
and
cmpsl
cmc
cmp
cmp
shll
adc
jb
jne
fidivs
mov
pop
jp
pushf
imul
fistl
mov
adc
mov
xchg
dec
cmpsb
loopew
into
or
jo
inc
outsb
push
mov
sub
push
cmp
or
pushl
lods
imul
leave
or
ljmp
jge
mov
in
mov
pop
idivl
pop
dec
out
xor
inc
xchg
bound
push
add
sarb
xor
mov
movsb
xor
nop
cmp
aam
call
scas
mov
mov
scas
push
xor
jl
lret
push
mov
out
sbb
fwait
pop
pop
sti
jns
insl
in
and
nop
shlb
aad
int3
mov
divl
lock
sub
test
push
mov
enter
mov
mov
ficomps
or
mov
add
jmp
jg
arpl
cmpsl
dec
mov
xchg
sbb
in
or
pop
sub
cs
in
jno
and
shlb
jns
cmp
lods
xlat
fnstsw
sbb
out
jp
pop
lods
sbb
adc
cld
mov
xchg
mov
ljmp
mov
loop
push
lods
add
sti
mov
mov
pop
jecxz
fldt
and
call
pop
push
fwait
call
cmp
xor
je
add
out
mov
cli
mov
inc
push
xor
push
mov
xchg
sub
mov
mov
sbb
mov
shrl
jmp
repz
add
ret
mov
sahf
fldenv
jp
imul
ret
push
and
and
or
insb
jbe
add
push
push
xor
push
and
sub
inc
repz
push
and
arpl
stos
shll
jo
cmp
rcrb
ficompl
pushl
sub
inc
aaa
sub
pusha
cmp
jnp
scas
or
clc
mov
test
sub
push
aas
dec
cli
das
mov
adc
xchg
and
push
ficompl
mov
test
cmpsl
push
jmp
andb
out
xor
xchg
add
loop
push
in
scas
dec
sbb
push
pop
sub
out
pushf
inc
adc
fists
pushf
sub
mov
into
int3
mov
shl
cmpsb
mov
mov
or
xor
sbb
and
test
add
pushf
lret
data16
call
stc
stos
dec
movsl
int
adc
mov
and
sbbb
adc
shll
lea
rcr
and
xchg
xor
jge
gs
loop
cmp
mov
cmc
lock
negb
mov
mov
cwtl
cld
in
lea
xor
test
clc
and
cmp
imul
clc
dec
inc
lret
and
add
add
xchg
mov
jno
mov
push
outsb
arpl
fistpl
jp
roll
aas
cmp
aam
mov
sub
pop
or
je
adc
sub
lret
push
mov
roll
add
sub
les
and
adc
dec
lret
int
pop
loop
xchg
or
push
aam
lods
unpcklps
fucomi
pop
cld
out
sarl
xchg
insb
cwtl
das
or
jbe
xor
mov
sbb
int3
sub
enter
xchg
mov
cmp
sub
sub
pop
test
sbb
mov
pushf
shl
in
nop
fdivrp
cmp
pop
scas
xor
cwtl
lods
inc
stos
mulb
mov
clc
jnp
test
mov
mov
jno
mov
jp
or
and
jg
xor
loop
jp
jnp
mov
es
sar
push
pop
gs
pop
pushf
add
cmp
xor
cld
fildll
daa
bound
pusha
sbbl
or
xor
cmp
pop
stc
jne
lcall
or
inc
movsl
adc
and
cli
mov
daa
or
xlat
nop
daa
pop
andb
fcomps
rcrb
xchg
sub
in
lret
mov
and
or
ret
inc
push
mov
je
and
and
dec
mov
pop
movsb
lock
or
xor
push
pop
aaa
out
pushf
mov
jecxz
mov
in
test
add
fcoml
push
aam
mov
mov
dec
dec
mov
loope
dec
aam
addr16
adc
mov
imul
cmp
xchg
test
add
push
mov
loop
loope
push
ljmp
lret
mov
add
jecxz
test
cmpb
cmp
sbb
cmp
popf
loop
and
test
push
dec
sbb
popa
iret
fstl
adc
fcomps
pop
cld
dec
clc
adc
test
shrl
fimuls
vcvtpd2psx
int
and
jnp
idivb
int3
int3
xchg
cmpsl
cmp
cmpsb
sarl
cmp
add
rol
lret
mov
rolb
subl
ret
aam
lea
xchg
adc
movsb
cmpsb
jno
pop
sbb
fmuls
inc
xchg
or
aaa
adc
cmp
push
movsl
mov
aaa
xor
test
mov
je
xor
jns
fwait
mov
sbb
mov
push
mov
call
out
popa
pop
pop
ret
mov
jne
nop
fadds
pop
cmp
cmp
inc
sahf
loope
push
sbb
popa
scas
pop
mov
mov
loope
cmp
or
enter
push
push
out
out
dec
mov
jb
sahf
push
cmp
adc
int
movsb
test
push
dec
in
or
push
cs
out
js
test
mov
sbb
mov
bnd
sbb
mov
negb
inc
movb
icebp
shll
movsb
mov
mov
inc
mov
jmp
dec
and
xorb
test
or
lret
je
repnz
cld
cwtl
fbld
aaa
or
in
jb
add
cs
push
mov
cmpsb
mov
adcl
mov
std
test
mov
or
mov
repz
loopne
xchg
jns
and
jmp
dec
int3
arpl
out
pop
idiv
sbb
xor
jo
stos
sbb
inc
cs
inc
insl
mov
xlat
cmp
lea
cmpl
pop
cmp
or
test
je
push
stos
dec
int
sub
repz
xchg
mov
loopne
pusha
jbe
add
pushl
mov
adc
push
pop
fadd
lahf
push
pop
icebp
mov
xlat
jecxz
push
sbb
dec
shl
lcall
stc
push
xlat
rcrb
sbb
sub
sbb
push
in
dec
sbb
shr
push
sbb
cmp
inc
mov
push
push
jle
lds
jecxz
data16
push
dec
sub
add
bound
js
mov
and
ret
lods
ja
imul
outsb
add
jmp
push
jle
mov
or
sbb
ficoms
leave
mov
ror
out
and
xchg
inc
sub
push
lahf
sbb
push
pop
xchg
int3
xor
jmp
sbb
test
dec
jo
clc
dec
push
cs
jne
jbe
xchg
lea
add
push
xor
aaa
dec
sub
jmp
xor
cmpsl
addl
mov
shll
lods
fcmovnu
stos
dec
inc
mov
or
mov
pop
mov
xadd
inc
test
and
shrb
repnz
push
ss
lock
sbb
sub
mov
repnz
or
adc
movsb
cli
push
fistpl
cmp
adc
mov
shrb
testb
pop
popf
je
scas
mov
lods
adc
pop
sbb
cwtl
lret
fadd
sbb
fbld
fucom
and
push
pop
cmp
sub
jno
and
sub
ss
insl
icebp
iret
cwtl
addr16
mov
sub
xchg
push
adc
xchg
imul
insl
aas
push
aad
daa
sbb
jle
inc
sbb
loope
rolb
movsl
sahf
popa
cmp
lahf
jge
jb
orl
xchg
push
imul
movsl
shrl
outsb
orb
mov
jge
push
and
sbb
sub
xor
pushf
cmp
lods
gs
es
arpl
addr16
stc
add
icebp
sti
xchg
data16
loope
cmpsb
cmpsb
jle
jl
mov
xor
dec
int
and
cli
int
adc
rol
push
mov
inc
inc
scas
rcrl
sti
fbld
mov
je
movsl
andb
and
xchg
lods
into
adc
arpl
mov
push
pop
into
ret
sub
mov
xor
sbb
ja
jo
outsb
test
aaa
and
in
push
movsl
xlat
cmp
xchg
and
jno
cld
iret
add
add
xchg
cmp
rcl
cmpsl
out
shrb
jne
int3
enter
ds
mov
mov
sub
andb
mov
mov
lds
push
and
mov
xlat
shlb
in
xor
adc
sub
cmp
mov
mov
jo
xchg
das
dec
jp
decb
lahf
and
xor
inc
xchg
scas
outsl
iret
and
mov
ljmp
outsl
mov
gs
xchg
aam
push
cltd
shlb
in
push
imul
push
mov
addl
mov
aaa
ja
cltd
dec
push
and
xor
jo
test
sub
mov
hlt
inc
pop
push
cmpsl
sbb
cmp
inc
mov
mov
jns
cmp
mov
sub
jle
mov
fdivl
lret
imul
cmp
shlb
pop
call
mov
in
sbb
daa
in
je
mov
lods
test
push
ficoms
js
xchg
cmc
mov
je
jns
pop
cmp
mov
enter
jg
push
and
das
push
mov
adc
outsb
jl
mov
in
int
jge
fdivr
jmp
test
je
sbb
add
cmp
fs
fs
arpl
imul
add
and
cmpsb
xchg
dec
in
or
cwtl
and
enter
pushf
sti
test
push
jge
int3
pop
in
pop
mov
and
setge
cmp
hlt
xchg
xchg
sbb
inc
filds
dec
imul
hlt
rcrb
pop
xor
lret
mov
mov
mov
inc
push
jae
xchg
pop
or
jne
xchg
in
shlb
repnz
inc
out
sbb
nop
sub
test
out
pop
fisttpl
out
jmp
insl
cld
ret
cmp
and
and
xor
cmp
mov
aas
addr16
sbb
pop
push
js
pusha
xlat
scas
pop
pushf
pop
jp
sbb
loop
xchg
in
or
mov
fisubs
insb
and
hlt
jmp
aad
adc
sbb
stos
jbe
rcl
pop
xchg
nop
mov
jnp
iret
andb
shll
and
xor
mov
pop
push
lahf
lock
inc
xchg
xor
pop
aas
aad
add
jg
mov
inc
jo
adc
cmp
mov
int
lret
mov
jg
out
xchg
add
rol
lods
sbb
sub
push
xchg
repz
insl
add
pop
mov
out
push
sub
test
js
sbb
mov
pop
mov
add
mov
sbb
in
add
mov
push
sahf
mov
loopne
jo
jns
inc
mov
xchg
sahf
inc
jae
adc
in
cld
fs
push
inc
mov
or
xor
inc
jne
pop
fs
mov
fldl
insb
cltd
fdivrs
xor
or
mov
fs
rcll
in
cli
pop
inc
or
jecxz
rcrl
add
jo
push
and
mov
and
and
std
cmpsb
and
pop
sahf
or
ss
and
push
repnz
je
mov
in
in
adc
shrb
popf
and
out
xorl
jl
test
and
stc
pop
fsubrl
xchg
add
jno
jp
or
lret
daa
outsl
sub
add
aad
fcomps
stos
nop
insl
xchg
sbb
in
enter
push
rcrb
fimull
leave
sub
pop
mov
jo
movsb
icebp
movsl
add
pop
movsb
mov
mov
stos
mov
and
add
inc
icebp
sub
lds
push
jmp
sub
mov
addr16
pop
sbb
mov
or
in
cmp
and
clc
rolb
dec
insl
mov
lahf
repz
jle
popf
dec
xchg
xchg
pop
fmul
dec
xchg
sti
aam
and
ja
jnp
insb
lods
jns
hlt
notl
in
sahf
movsb
cmp
mov
mov
aam
xor
mov
rcrl
inc
mov
sti
test
das
jle
xorb
ficompl
inc
and
mov
mov
ds
add
push
xchg
sub
sbb
imul
mov
or
subb
add
push
mov
sub
adc
xchg
mov
lods
jbe
fistpl
std
xchg
cmp
fwait
jno
int3
dec
sti
pushl
ds
or
daa
sbb
aam
stos
xchg
sub
jns
or
enter
lcall
lret
add
data16
mov
mov
or
xorb
jg
push
mov
rcr
jbe
movsb
test
movsb
and
int
mov
cmp
dec
repz
xor
mov
inc
inc
dec
ret
cmc
shr
push
in
test
pop
cmp
data16
lret
or
cmc
nop
sbb
leave
inc
mov
dec
lea
rol
or
sub
mov
lods
aam
cmc
dec
lods
nop
cmp
jae
dec
stc
xor
aaa
xor
nop
pop
pop
fiaddl
mov
lahf
xchg
jge,pt
fstps
cmp
cltd
mov
mov
mov
popl
in
mov
cmc
or
mov
sti
call
and
hlt
dec
pusha
testb
aam
cmp
dec
or
ljmp
xor
jo
xor
adc
mov
mov
jecxz
divb
imul
adcl
aas
xchg
js
and
into
test
popa
inc
roll
movsb
cs
cmp
add
and
mov
in
mov
ss
jae
int
dec
add
and
and
add
lret
and
int3
jbe
fdivl
jge
pop
ret
adc
repnz
ret
stos
add
push
divl
ret
add
add
cltd
adc
shrb
das
add
sub
sbb
inc
mov
mov
mov
mov
scas
pop
mov
fwait
in
fldt
das
sub
int
sbb
vunpckhpd
dec
pop
inc
push
inc
popf
mov
sbb
mov
xchg
jno
loop
lcall
out
orb
sbb
incl
mov
cmp
xorb
sbb
in
test
jmp
mov
inc
cmpsb
ret
xorb
sbb
lahf
adc
cmpsb
in
stc
jecxz
stc
jmp
sub
cmp
subl
jp
mov
inc
dec
stos
sub
mov
sbb
add
pop
inc
mov
int
mov
inc
ljmp
out
inc
mov
les
out
push
xchg
int
jno
mov
imul
test
mov
inc
popa
out
call
sub
and
sbb
jl
mov
loop
mov
or
xchg
mov
mov
mov
int3
imul
imul
roll
inc
push
inc
push
aaa
mov
das
sub
cld
mov
in
jbe
dec
lds
hlt
or
out
decb
sbb
xlat
test
inc
dec
add
bound
lcall
sbb
stc
add
jbe
push
lcall
push
mov
fcmove
push
mov
jns
test
fwait
jne
sbb
and
adc
jnp
add
fs
loopne
adc
mov
push
shlb
in
mov
arpl
icebp
adc
gs
repz
cwtl
call
mov
mov
add
dec
sbb
xchg
ljmp
pusha
jb
rorl
xor
aam
fmull
rcrb
test
out
xor
popf
hlt
cmp
adc
jbe
xor
mov
add
sbb
fs
mov
ror
mov
sub
push
sbb
hlt
mov
or
push
push
popa
mov
adc
sbb
in
push
inc
push
ret
sbb
sti
xchg
inc
push
lock
add
and
lea
mov
outsb
and
movsb
and
and
adc
lock
adc
test
xchg
aas
lret
icebp
jecxz
cmpb
std
mov
loope
mov
outsl
fildll
dec
nop
jge
addl
mov
insb
inc
jl
dec
ret
jmp
adc
inc
jbe
mov
mov
pop
xor
sub
mov
jo
xchg
ficoml
cmpsl
int
cltd
icebp
xchg
sub
insb
cvtpi2ps
push
pop
lret
stc
push
test
push
cmp
lret
pop
aaa
sbb
or
xor
test
movsb
add
xchg
dec
les
push
icebp
xchg
rorl
add
pop
out
mov
mov
add
mov
xorb
scas
leave
punpckhbw
pop
mov
or
push
cmp
nop
and
pop
dec
sarb
xorb
sub
sahf
lods
mov
mov
inc
mov
pop
decb
shl
andb
clc
je
sub
sahf
loope
or
scas
and
fisttpll
sbb
mov
scas
push
loope
sahf
int
sub
test
out
out
sbb
int3
sub
jmp
xchg
jae
dec
and
sbb
push
cltd
adc
lret
cmc
mov
mov
add
pop
in
sub
mov
add
pop
mov
pusha
mov
mov
jl
mov
sbb
rolb
sbb
in
jne
cmp
sbb
push
aad
and
add
jb
sub
ljmp
lcall
das
fcompl
aad
movsl
jo
shll
testb
cmp
outsb
xchg
cmc
add
xor
cltd
daa
dec
or
xchg
stc
ds
mov
sbb
jae
mov
popa
jecxz
lock
xchg
push
adc
cmp
addb
sbb
fwait
mov
pushf
fs
ficoms
push
into
lret
mov
std
push
loop
mov
push
fldenv
and
mov
mov
out
add
ds
sbb
repnz
pop
push
mov
mov
jle
mov
imul
push
jecxz
mov
mov
fsubp
pop
outsb
and
pusha
push
int
lret
lock
shrl
ror
cmpsl
aad
add
sub
push
dec
rorb
test
mov
adc
loopne
mov
push
test
mov
cltd
jns
fst
stos
ss
push
outsl
outsb
test
sub
repnz
jno
insl
dec
enter
nop
mov
aam
inc
mov
jns
xchg
pop
xor
nop
imul
xchg
jae
jle
cmp
leave
add
stos
or
dec
push
ret
xor
fcomps
test
fwait
and
push
adc
addb
out
xor
push
or
xor
xor
insb
fidivrs
push
pop
sbb
shlb
insb
shrl
xchg
mov
cli
fisubrl
mov
leave
out
or
inc
mov
mov
iret
rcr
loope
enter
in
pushf
sub
and
adcb
or
mov
jne
sbbb
lcall
iret
adc
pop
inc
inc
jb
sub
and
aaa
sahf
pop
lock
sbb
insb
mov
test
or
xchg
fidivrl
sbb
cwtl
clc
xor
push
pop
shr
test
test
mov
inc
addr16
les
into
sub
push
jbe
cmc
nop
test
xorb
fdivrl
inc
sub
sti
lahf
mov
mov
insl
je
inc
mov
mov
es
sub
pop
xor
shl
mov
adcb
movsb
sub
mov
add
sub
jp
or
xchg
cltd
mov
stc
das
pushf
or
lods
jmp
leave
in
movsb
push
or
add
inc
jo
arpl
inc
dec
jnp
fcmovu
test
mov
movsl
inc
push
sub
sub
sub
mov
and
mov
mov
mov
arpl
cwtl
push
int3
cmp
ja
and
sub
push
jne
cltd
mov
mov
ror
mov
repz
mov
lea
jb
mov
outsb
cmp
imul
repnz
mov
and
andl
pop
outsl
cmp
pop
or
push
addr16
rorb
xor
pop
mov
lods
int
jl
in
lock
sub
ljmp
and
popa
into
outsl
xchg
ljmp
lret
dec
xor
pop
ret
xchg
out
in
repz
jnp
dec
pop
inc
lock
sarb
inc
lret
mov
cmpsl
push
rorb
cmp
mov
xlat
out
or
pop
es
push
imul
xor
and
addr16
ja
add
in
fdivr
jl
mov
jl
mov
push
and
mov
push
test
js
pop
jle
cmp
and
out
fildl
sarb
ret
pop
add
cmpsl
cmp
and
and
rcrl
sti
repz
jmp
inc
repz
pop
cmp
jbe
cs
dec
lret
pop
push
cltd
out
xchg
xchg
xchg
mov
aas
faddl
lret
in
mov
sub
mov
fisubrl
mov
cmpxchg
xorb
test
cmp
push
add
icebp
fs
ss
aam
out
in
mov
jecxz
or
ret
mov
int
xor
shrl
cwtl
or
add
test
add
std
int
ror
jno
icebp
nop
push
sbbl
lahf
push
insb
stc
push
je
or
lods
test
mov
loopne
mov
mov
xchg
and
jle
test
fisubl
xchg
cld
movl
cs
test
add
arpl
mov
outsb
adc
adc
adc
cmpsb
ret
xor
and
cmpsb
jg
mov
add
gs
add
outsl
insl
les
stc
mulb
cmp
pop
push
in
int
mov
pushf
out
xchg
mov
dec
mov
fcomps
and
or
dec
adc
xor
inc
mov
cld
or
bound
sub
pop
lock
mov
xor
aam
sti
mov
int
pop
xor
rclb
fdivs
push
lcall
xor
and
jecxz
mov
das
jo
push
xchg
imul
mov
xchg
jne
inc
or
insb
xor
loopne
icebp
push
lahf
orl
xor
push
jns
jno
xchg
xor
dec
pop
fdivs
mov
mov
loop
aaa
call
cmp
int3
dec
add
int3
sahf
pusha
add
cwtl
lds
lret
mov
daa
mov
lods
into
je
push
movsb
add
jp
dec
pop
pop
inc
pop
cmpsb
scas
sub
xlat
mov
xchg
push
cwtl
outsb
mov
into
xchg
ss
push
jno
mov
call
xchg
dec
jmp
adc
dec
out
loopne
mov
leave
lods
mov
insl
or
pop
leave
bound
movsb
lock
mov
int3
mov
ljmp
push
out
ljmp
in
icebp
jne
fisubrs
add
imul
mov
sub
xor
add
scas
repz
fisttpll
fdivrs
addb
repnz
aad
xchg
repnz
add
xchg
mov
mov
jle
rcr
xorb
push
pop
icebp
out
inc
pop
sbb
mov
cmp
dec
push
add
jb
movsb
in
cmp
movsl
inc
mov
pop
bnd
push
loop
test
jne
cmc
push
outsl
out
ret
shl
cwtl
nop
push
lods
jne
shufps
mov
subb
jmp
mov
aas
stos
imul
jmp
mov
pop
js
mov
add
xchg
inc
les
cwtl
push
popf
mov
push
inc
or
dec
outsl
push
arpl
add
xor
sbb
sbb
or
stos
sub
adc
in
int3
jp
fcoml
mov
and
mov
jl
pusha
xor
lret
mov
cwtl
cli
xchg
or
shrl
rcrb
push
inc
push
mov
mov
fdivrl
xchg
sub
sbb
incb
push
mov
aas
mov
fwait
jo
xchg
sbb
or
xchg
lahf
cltd
add
mov
inc
pop
or
fs
adc
and
inc
jle
nop
dec
jbe
pop
mov
lahf
adc
mov
sti
or
xchg
cmp
js
ret
mov
xor
cmp
hlt
inc
fnstcw
int3
inc
push
movsl
nop
push
insb
incb
xchg
cld
lea
shlb
dec
sub
push
inc
or
repnz
mov
incb
push
sbb
shrl
pop
out
adc
je
xor
inc
call
mov
dec
sbb
ret
sbb
les
or
mov
pusha
pop
movb
pop
dec
fwait
pop
popf
mov
push
sub
adc
subl
xor
mov
dec
enter
xchg
lds
in
jb
ss
jle
leave
or
jecxz
inc
stos
or
and
push
scas
inc
or
or
mov
ljmp
in
sbb
inc
cmpsl
cmpsb
lds
lcall
xor
cmp
ja
sbb
push
mov
nop
gs
pop
pusha
fs
stos
inc
bound
pop
xchg
cmc
push
inc
xchg
icebp
daa
mov
in
push
sub
notb
jmp
add
inc
jns
cmp
push
cmp
cmc
dec
scas
ljmp
sub
pop
pushf
pop
insl
cltd
cli
push
adc
out
and
rcrl
jne
push
push
push
shrb
mov
jne
fsts
sub
test
push
mov
leave
pop
dec
cmc
imul
or
daa
insb
enter
mov
sub
mov
repnz
sub
repz
xchg
ret
mov
stos
ret
iret
xor
mov
sub
aad
or
lds
or
cmp
jae
push
mov
inc
mov
insl
mov
xor
push
in
repz
mov
mov
bnd
test
movsb
shrb
jp
pop
scas
cmc
gs
mov
cmp
sarl
push
aam
mov
cmp
movsb
pop
cmp
mov
push
cld
jp
cmp
ds
lcall
push
mov
and
cmp
pop
movsb
fmuls
push
xchg
out
ja
xchg
jecxz
pop
dec
jb
cmp
aam
jmp
pop
xor
inc
outsb
pop
sbbl
add
in
aad
cmp
sub
jp
ja
ss
fbld
push
sbb
pop
std
loope
ds
fs
jge
movb
mov
leave
pop
pop
adc
mov
std
add
test
mov
adc
jbe
jne
mov
aam
xchg
loopne
pop
push
aaa
adc
mov
or
stos
outsl
mov
mov
scas
sbb
shlb
sub
aaa
into
mov
mov
cmp
jne
ljmp
jp
mov
movsb
dec
ds
data16
mov
lea
xor
mov
lods
push
and
addb
or
push
pop
mov
xchg
or
das
sub
or
rep
pop
enter
sub
push
jle
gs
jb
idivl
shr
xor
add
cmpsb
adc
in
dec
sbb
mov
aam
cmpsb
clc
rcll
or
dec
push
mov
add
or
shlb
adc
push
sbb
sti
add
les
jbe
int3
mov
push
in
pushw
adc
push
fdivs
int
lahf
outsb
push
dec
xlat
lahf
ss
jns
pusha
or
jl
data16
lods
dec
jl
mov
daa
mov
out
icebp
xchg
insb
cmpsl
sbb
in
pop
popf
inc
int3
jle
adc
xor
je
jg
ret
inc
push
push
add
jb
dec
inc
clc
push
outsl
jb
sub
cltd
js
xor
sub
mov
pop
mov
adc
push
xor
sub
hlt
leave
std
pop
orb
loop
push
xchg
popa
idivb
adc
jnp
test
out
pop
pop
xchg
cmp
cwtl
or
cli
mov
nop
cmc
add
stos
mov
cmpb
mov
rol
mov
mov
imull
cmp
repz
inc
jmp
adc
xor
sub
jae
mov
out
icebp
dec
daa
dec
jbe
pop
shl
mov
pop
in
dec
out
mov
sub
push
push
stos
sti
ja
add
jmp
ret
lods
movups
call
idivl
pop
push
mov
jmp
mov
mov
cld
scas
sbb
fucomp
pop
jo
outsl
xchg
out
jne
pop
in
adc
mov
lea
lcall
outsb
test
aad
icebp
xchg
cmp
fnstsw
test
in
aam
adc
cmpsl
sbbb
push
adc
push
and
mov
sub
imul
cmp
test
pop
insb
pop
pop
inc
xchg
xchg
pop
push
adc
hlt
dec
aam
mov
pop
xlat
jmp
mov
loopne
lcall
loope
push
mov
addr16
cli
in
jo
cs
cmp
push
lcall
adc
pushf
xlat
popf
jle
jne
add
xchg
jecxz
rcl
sbb
or
push
xor
lahf
xor
jns
ret
jae
or
mov
adc
scas
je
xlat
stc
imul
jns
ja
scas
mov
mov
enter
cmp
shl
loop
bound
arpl
fiaddl
js
daa
aam
cmpsb
in
adc
lcall
lods
mov
cmpsb
or
adc
lods
jbe
mov
ss
mov
out
push
gs
xchg
test
push
fldenv
sarl
xchg
iret
arpl
inc
sub
jg
xor
push
lret
imul
call
lret
or
test
lret
loop
sti
jmp
mov
xor
aaa
ss
jnp
xchg
lret
jmp
in
inc
mov
jne
cmp
clc
dec
dec
sahf
cli
sbb
mov
dec
xchg
repz
in
shl
mov
dec
push
out
sahf
and
orb
jmp
scas
mulb
addl
scas
pop
loop
push
fsub
sbb
loopne
jne
add
out
mov
and
icebp
jb
xchg
cmp
popa
dec
scas
sahf
mov
xchg
ss
mov
lahf
push
pusha
sti
mov
test
mov
js
sbb
mov
push
add
dec
mov
std
scas
and
cmp
inc
mov
push
jbe
mov
imull
scas
fisttps
data16
ljmp
loop
sbb
adc
push
mov
and
rcrl
mov
test
clc
out
fcompl
or
mov
pop
movsb
xchg
and
inc
lret
push
je
mov
dec
loop
shlb
lahf
in
or
inc
pop
test
cld
fs
xor
cmp
aam
clc
pop
gs
cmp
lahf
push
mov
jle
sahf
stos
test
xchg
pop
insb
xor
mov
les
sub
shrb
xchg
call
inc
xchg
aas
and
adc
rcll
test
scas
sbb
in
and
dec
cmp
mov
subb
sub
out
or
or
jp
aam
mov
mov
sub
popf
sub
fstpt
jnp
mov
lfs
sub
repnz
mov
sub
jno
jae
mov
or
into
add
sti
xchg
push
jbe
das
sub
mov
cs
pop
hlt
ds
cmpsb
scas
and
add
sarb
pop
cmp
xchg
push
sarl
jae
mov
dec
sub
fiadds
adc
inc
iret
jl
mov
or
js
and
mov
xchg
sbb
cmp
mov
add
dec
jle
xor
fsts
mov
and
mov
jge
sahf
lods
movsb
imul
leave
cld
out
adc
insl
into
adc
addl
xorl
sbb
inc
pop
dec
lahf
jmp
adc
or
scas
xchg
push
inc
in
adc
inc
sbb
fwait
push
in
jb
int
enter
xchg
lret
mov
sbb
rclb
add
lcall
fldcw
jp
sbb
into
or
mov
jle
jb
sbb
rclb
adc
imul
push
and
cli
inc
loope
add
inc
push
pop
shll
jnp
xchg
loopne
push
sbb
sbb
in
adc
popa
and
push
ret
push
not
push
and
sti
iret
jns
xor
cli
cmc
into
or
loopne
int
add
jmp
jge
sahf
inc
ret
or
mov
sbb
stc
jge
pop
ss
or
mov
xchg
sti
fwait
ja
mov
xchg
dec
cmc
adc
xor
mov
cld
filds
xor
xor
mov
in
in
sub
xchg
sub
sbbl
leave
cwtl
stos
sarl
in
stc
cmpsb
loop
insl
sbb
dec
stc
js
or
mov
xchg
mov
inc
negb
push
test
clc
shrl
test
fimuls
push
aad
mov
out
mov
aas
cs
addb
mov
jmp
aas
rcrl
lds
pop
mov
cld
jp
pushf
mov
loope
sub
jg
lret
in
sub
clc
sub
rorl
aaa
arpl
push
pushf
je
movsb
in
or
scas
xorl
dec
or
loope
mov
add
adc
xchg
pushf
jnp
subl
data16
sub
mov
mov
mov
xor
outsb
push
mov
sbb
mov
jg
mov
mov
imul
scas
aas
imul
add
mov
int
fs
xor
arpl
shlb
dec
popa
lea
xor
stos
sub
fdivrs
aas
test
divb
pop
loop
insl
mov
mov
adc
in
pusha
stos
or
cwtl
insl
ljmp
imul
push
divl
in
loope
inc
jmp
test
push
fstpt
ja
out
push
loop
mov
clc
andl
jno
jecxz
filds
inc
pop
stos
mov
mov
insl
add
dec
pop
or
mov
xchg
push
in
repz
mov
imul
imul
sbb
adc
gs
sub
adc
imul
and
out
gs
scas
pop
mov
mov
xor
jb
cmp
or
hlt
scas
jb
mov
dec
dec
sbb
mov
xchg
idiv
hlt
scas
lds
or
scas
inc
shrl
sarl
sub
out
cmpl
pop
or
int
push
daa
dec
movsl
leave
sbb
or
sub
mov
dec
cld
mov
or
movsl
cld
ja
jb
dec
nop
mov
das
xchg
lds
cli
adc
negb
scas
dec
cmpb
imul
mov
hlt
push
out
js
adc
mov
std
xchg
arpl
mov
jp
out
loopne
sar
repnz
imul
dec
xor
xchg
mov
ljmp
aam
leave
inc
mov
imul
dec
ret
inc
call
es
clc
mov
out
push
dec
mov
cmp
pop
lcall
nop
loopne
aad
mov
cmp
jns
jns
aas
cmc
push
mov
mov
lret
cmp
hlt
out
or
dec
pop
lcall
lds
jo
jbe
imul
adc
pop
popa
and
fidivrl
ja
sub
scas
dec
inc
loopne
aad
mov
mov
pop
jge
pop
push
xchg
dec
jl
cmp
lss
pusha
cmp
pop
sub
dec
and
je
adc
cmpsb
inc
adc
sub
lret
fldcw
out
adc
adc
fimull
divl
pop
mov
mov
ljmp
jae
xor
nop
sbb
roll
bound
gs
jb
sbbl
cmpsb
pop
cmp
fnstenv
xchg
push
inc
dec
stos
std
mov
mov
movsb
mov
xor
inc
into
mov
pop
lods
out
pop
xchg
imul
xlat
inc
repz
push
sbb
jae
rol
aad
push
xor
test
jl
jbe
mov
orb
xlat
inc
jl
js
jmp
orb
xchg
in
cld
and
mov
inc
pop
out
ror
jle
int3
div
ret
stos
push
stos
mov
sbb
out
adc
sub
mov
nop
lret
and
inc
cmp
jo
mov
push
and
dec
das
inc
jbe
fists
arpl
je
sti
cmp
test
push
add
std
xor
dec
lcall
shl
dec
cmpsb
sub
push
loop
add
mov
into
push
xchg
test
sub
cmp
btsl
adc
mov
ds
sarl
pop
sbb
push
sbb
clc
sub
iret
or
push
push
push
hlt
dec
gs
inc
insl
jmp
mov
pop
sub
fildl
sti
push
xchg
mov
inc
xchg
icebp
mov
and
cltd
mov
sbb
sub
das
push
pop
inc
lret
mov
movsb
popf
out
jae
test
je
scas
lods
ds
jbe
daa
es
in
fmuls
sbb
pop
arpl
cs
jne
push
push
rorl
clc
sahf
push
sti
repnz
fildl
in
pop
push
or
inc
data16
out
adc
pop
xchg
lods
push
dec
mov
xchg
inc
out
cmpsl
adc
pop
imul
mov
adc
stos
rcrl
cmp
cmp
fiadds
or
out
cli
add
lock
push
repnz
in
fisubrl
cmp
xchg
jno
int3
sbb
adc
mov
dec
pusha
enter
cwtl
inc
cmp
inc
nop
outsl
adc
push
sub
loope
push
sbb
insb
imul
aam
iret
push
jb
pop
mov
pop
sahf
cmp
lret
mov
push
int
mov
cmpsl
daa
pop
adcl
lret
lods
movb
sar
push
jnp
adc
jmp
call
in
or
sarl
ret
inc
imul
into
enter
out
outsl
pop
orps
fucom
and
mov
sbb
cmp
outsl
xor
shl
and
cmp
pop
loopne
cmp
stc
add
cli
pop
pop
into
inc
mov
addr16
iret
mov
je
dec
nop
or
lcall
sub
repz
jb
jne
and
lds
test
push
cmpsl
push
inc
dec
stc
inc
push
fs
lcall
push
xor
movsl
mov
push
inc
push
pop
hlt
arpl
dec
es
leave
push
xor
add
adc
fdivs
test
cld
dec
jnp
imull
adc
out
gs
cwtl
repnz
adc
push
mov
jns
insb
cmpsl
xor
out
ljmp
in
xchg
rcrb
xor
nop
mov
int
or
xlat
fists
mov
arpl
cmp
pop
sub
lret
imul
in
adc
pop
inc
mov
in
jne
ja
in
push
ret
mov
xorl
push
cli
popf
sub
enter
pop
filds
dec
dec
mov
add
xchg
mov
mov
sub
inc
and
mov
xchg
mov
sti
pop
subb
movsl
cwtl
push
out
mov
ss
popf
stos
dec
out
les
jle
sbb
push
std
xor
repnz
pop
outsl
lret
fiadds
or
pop
jnp
cli
in
add
mov
shlb
arpl
pop
sbb
jmp
mov
jl
imull
inc
cmp
inc
xlat
cwtl
jbe
ljmp
inc
xor
pop
fs
or
iret
mov
stos
push
int
adc
ret
cld
repz
out
lods
pop
cld
and
repnz
mov
sbb
lock
enter
sbb
push
push
jne
mov
incl
xchg
jl
push
cmp
push
and
xchg
ret
or
lret
stc
cmp
jmp
sbb
or
out
or
dec
subb
sub
lods
jp
loopne
sub
sub
mov
push
pop
ss
mov
bound
pushf
bound
rdmsr
scas
push
lret
mov
mov
mov
nop
mov
cli
inc
xchg
movsl
inc
jnp
cmp
adc
sub
sbb
mov
fbstp
inc
sahf
out
mov
and
adc
jno
fisubl
adc
movsl
push
jge
push
mov
inc
dec
cld
or
andb
loope
pop
aas
decb
jge
mov
insb
ret
ds
std
imul
test
test
or
rorb
rcrl
or
out
xor
cmp
popa
mov
pushf
in
jg
pop
pop
imul
adc
popa
mov
rcrl
cmpsl
test
xchg
or
fldcw
sbb
and
lock
sbb
imul
pop
jg
ss
mov
mov
fsub
xchg
cli
outsl
jne
mov
andl
loop
pop
jnp
add
inc
jne
or
add
cmp
jecxz
adc
out
pop
mov
std
mov
mov
sbb
push
ss
out
xchg
push
test
xchg
push
cwtl
lods
mov
fistl
int
test
adc
and
shlb
push
adc
jg
cld
jne
adc
dec
aas
ja
and
fs
mov
mov
dec
adc
push
lods
jge
add
pop
or
cmpsb
nop
loopne
push
mov
cmc
cwtl
mov
ret
push
out
and
arpl
aaa
xor
dec
stc
push
arpl
adc
shlb
std
loope
shl
mov
mov
push
fmull
rcrb
cmp
push
mov
pushl
pop
lods
mov
decb
in
rol
out
icebp
js
fimull
mov
testb
jb
sbb
fwait
cmpsb
and
pop
fdivl
inc
outsb
insl
fistps
incl
fwait
stc
out
test
add
imulb
xor
jne
mov
aaa
push
sub
mov
and
add
les
sub
testl
fcmovu
addr16
mov
imul
jb
jbe
cmp
enter
sbb
ja
or
and
js
sub
pop
mov
fucom
mov
sbb
cmp
dec
mov
dec
add
jge
mov
mul
jge
arpl
aaa
aam
xor
stos
mov
out
jbe
rclb
data16
jno
test
cmp
add
add
mov
mov
rcll
mov
loopne
mov
sub
xchg
jne
rcrl
aad
inc
jl
jmp
pusha
push
cmpl
repnz
add
popf
loope
jp
mov
push
rorb
xorb
repnz
repnz
dec
in
and
xchg
sahf
mov
fcoml
mov
cmp
enter
cmp
dec
in
xor
loopne
pop
sub
ret
sbb
sub
dec
imul
dec
add
mov
pop
sarb
addb
dec
pop
push
mov
xchg
stos
test
jnp
add
jp
fcoms
pop
xor
fwait
cmp
pop
hlt
movsl
into
add
loopne
les
pop
enter
push
in
and
int
lret
pushf
sub
and
adc
mov
ljmp
inc
jl
inc
arpl
inc
leave
loop
jne
xor
adc
jb
subl
int
stos
inc
loop
fdivrl
pop
mov
loope
sbb
dec
ss
jne
lret
jno
mulb
pop
jno
push
test
mov
jmp
and
and
dec
pop
fmull
pop
aaa
inc
das
adc
imul
xchg
mov
test
loopne
add
dec
andl
test
shlb
scas
int
scas
bound
rcr
inc
test
push
jl
test
fchs
sahf
ds
push
out
lods
or
lds
dec
mov
in
flds
fcoml
add
call
or
sub
loope
std
sub
lahf
dec
push
mov
mov
xchg
mov
call
push
inc
inc
pop
std
aad
xchg
add
call
cwtl
or
mov
in
lahf
push
lock
pop
mov
mov
mov
add
les
imul
jge
aaa
mov
push
jp
shrl
cltd
je
push
testb
je
loope
fwait
sarl
lea
mov
cltd
mov
push
xor
mov
inc
test
add
outsb
sub
xchg
cli
pop
fiadds
adc
rcrb
ror
and
scas
add
and
pop
xchg
outsb
inc
or
insl
pop
movsl
sbb
ds
or
gs
add
push
pop
shlb
add
ret
jne
adc
lock
ficoms
popf
enter
and
inc
pop
sub
popf
fwait
push
arpl
jb
rcll
adc
mov
call
rol
inc
mov
lods
leave
cld
cld
lahf
stos
imul
imul
das
xchg
lock
or
mov
rorb
int
pop
loope
test
stos
incb
add
mul
add
cwtl
mov
pop
inc
jne
and
pop
jl
lods
and
dec
jbe
mov
bound
nopl
inc
sub
xchg
test
shlb
fdivp
or
sarl
jmp
mov
dec
icebp
inc
movsl
mov
lahf
sub
pushf
sbb
mov
fisttpl
in
jns
add
pop
mov
push
xor
cmp
fucomi
test
and
xchg
mov
or
sbb
fsub
mov
shll
add
dec
aas
aad
xor
fld
inc
inc
iret
add
les
out
mov
aad
imul
repnz
dec
xor
dec
adc
fldz
data16
ja
shl
outsb
jns
or
stc
mov
sbb
pop
push
daa
fistps
adc
inc
in
inc
inc
adc
pusha
inc
inc
xchg
loope
arpl
test
jmp
or
xor
lods
cmp
sti
mov
ja
sbb
jbe
into
fwait
push
popf
xor
flds
push
pop
std
int3
push
add
xor
insb
push
cmpsb
mov
inc
in
xchg
cld
or
fcompl
ljmp
movsl
and
fimull
repz
aam
push
mov
aaa
icebp
dec
cmp
inc
jae
jmp
cmp
adc
push
xor
ficompl
rcrl
pusha
jmp
xchg
inc
je
dec
mov
iret
jno
xor
movsl
xor
adc
cmp
adc
or
or
mov
les
scas
dec
ss
mov
sbb
test
dec
dec
ffree
pop
pop
popl
xlat
dec
movsl
pop
and
and
xor
push
repnz
lds
fisubs
in
cmp
jmp
clc
movsl
cs
push
pop
stos
cmpsb
ss
inc
inc
xor
inc
xchg
cmc
stos
dec
nop
lds
out
push
roll
cmpb
fwait
test
or
stos
pushf
and
sub
imulb
decl
xor
in
insl
aad
jmp
cmp
dec
adc
and
clc
add
add
dec
add
sar
in
lret
les
lds
and
ds
sbb
adc
std
lea
xchg
pop
in
dec
in
mov
ret
stc
sub
push
dec
push
insb
xbegin
arpl
outsl
mov
push
jno
xor
in
shl
cli
aaa
adc
out
push
cs
fldt
aam
into
inc
test
xor
jno
jns
stos
lock
dec
cltd
sbb
add
fisubrl
or
and
add
or
cmpsb
and
mov
ds
mov
je
pop
mov
add
dec
cld
pop
dec
pop
pop
fisttpl
sub
repz
add
xchg
adc
xchg
aas
xor
scas
mov
add
dec
test
sub
pusha
inc
xchg
xor
mov
nop
insl
mov
popa
xor
pusha
enter
filds
jecxz
pop
js
jp
cwtl
xor
fwait
add
mov
int3
inc
and
enter
mov
shll
inc
and
jg
cmc
xor
daa
dec
addr16
sub
push
push
or
inc
rorl
int
push
xchg
or
sti
push
cmp
sbb
pop
add
rolb
pushf
repz
push
loop
stos
cmp
add
shlb
jns
aam
mov
rcll
or
cmpsl
fs
fisubl
lea
in
fidivrl
loope
pop
add
cwtl
sarb
add
arpl
push
sbb
in
jb
jne
ja
repnz
add
adc
stc
fwait
into
xchg
enter
and
fidivrl
push
arpl
mov
xchg
repnz
add
orl
sbb
push
arpl
inc
sub
push
js
fldl
jns
mov
mov
xor
jg
das
cmp
movsl
loop
fs
call
push
sbb
xor
dec
lock
adc
lds
mov
in
mov
dec
insb
lahf
cmp
incl
mov
adc
xchg
adc
xor
pushf
faddl
pop
out
andl
pusha
xchg
mov
xchg
inc
pop
jne
dec
and
cs
push
xor
test
ret
int3
inc
and
daa
aam
pushl
adc
std
jae
xchg
cli
mov
fcomps
jg
mov
cmp
cld
mov
xlat
cmp
add
add
stos
or
sbb
inc
sub
pop
mov
mov
aam
rep
bound
cs
mov
push
repz
dec
mov
lds
cmp
ret
call
mov
insb
mov
mov
test
xchg
pinsrw
fwait
or
jb
jns
xor
in
mov
aad
or
cmp
nop
push
fldl
imul
cld
sarl
mov
jnp
cmp
push
jo
test
call
sub
iret
pop
rorb
test
pop
shrb
xor
out
push
xorl
icebp
stc
cmpsb
js
adc
sbb
hlt
cwtl
inc
and
mov
dec
push
jnp
testb
test
or
popf
mov
xor
pusha
fisubl
pop
adc
add
mov
lea
xor
xor
rcrl
mov
inc
ljmp
adc
adc
and
dec
ljmp
movsl
cwtl
repnz
sbbb
ds
fcoms
mov
fistpll
mov
mov
std
popa
adc
roll
pop
sbb
test
sbb
pusha
inc
out
out
fstps
xchg
sub
push
adc
pusha
sbb
lret
ret
sti
shlb
fstpl
nop
repnz
cmpsl
jge
push
adc
cmp
cmpsb
icebp
sub
pop
fists
popa
cmpsl
in
push
call
mov
fdivl
fdivrl
lea
cmp
xchg
orb
incl
nop
es
jae
jl
stc
hlt
in
aam
std
out
repnz
xor
popa
rcr
aaa
or
inc
mov
in
push
sub
dec
push
dec
jbe
repz
push
xlat
movsb
pop
cmpsl
loop
out
mov
cld
out
arpl
inc
sti
push
orb
sub
push
xchg
fs
jo
push
lret
pop
loopne
sub
out
pop
inc
push
sbbb
stos
into
xlat
push
cmp
andb
jns
dec
adc
fdivr
in
das
mov
push
fnstenv
sub
jae
data16
ret
cmp
fisttps
add
ljmp
mov
rcr
rolb
push
lods
scas
sub
lcall
dec
pop
pop
scas
jns
or
les
jmp
mov
test
mov
cmp
test
fstps
jg
loope
stc
fnstenv
jmp
imul
xchg
shlb
push
sbb
push
push
add
scas
inc
mov
js
aaa
mov
aaa
jle
out
cs
and
mov
mov
pop
pushf
xor
into
jl
dec
ret
and
loopne
push
nop
call
dec
mov
xor
cwtl
jmp
push
mov
imul
insb
loope
out
xlat
jae
sti
negb
mov
cmpsb
inc
push
shrl
jge
jge
bound
fimull
jns
nop
push
mov
dec
jmp
stos
repz
hlt
and
cmp
lret
sti
adc
push
movsb
mov
iret
push
js
push
jg
pop
cld
push
xchg
sub
xchg
ss
adc
push
out
xchg
fwait
adc
xor
sub
jns
pusha
mov
and
push
push
outsl
out
push
lcall
out
jno
inc
aad
das
cltd
repnz
bnd
addr16
outsb
mov
test
cwtl
repz
xchg
pop
add
sbb
mov
push
scas
push
push
outsl
mov
mov
mov
les
sub
cmp
test
out
fidivrs
cmp
leave
jne
test
adc
call
mov
nop
sbb
ds
mov
pop
xor
movsb
mov
xchg
out
cmp
add
outsb
lahf
jo
movsb
cli
movsl
mov
clc
sub
std
test
add
mov
xor
scas
pop
sbb
sti
cmp
ja
repnz
test
idivl
inc
xor
jns
pop
dec
adc
cs
sub
pop
mov
add
pusha
fwait
cld
push
mov
lahf
pushf
push
cmp
push
sti
cmp
dec
cmp
cmc
mov
insb
mov
mov
test
cmc
repnz
or
aam
or
jb
mov
mov
lret
pop
adcl
push
cmpb
push
stc
orl
mov
lcall
imul
nop
sub
sarb
jno
in
jl
inc
in
push
sahf
lret
jbe
movsb
movsl
out
stos
je
pop
das
push
ljmp
xor
fs
rclb
cld
sub
scas
dec
and
push
push
stc
adc
test
mov
and
iret
sar
inc
push
mov
jmp
inc
jg
dec
clc
ret
adc
cmp
and
inc
push
push
sub
fistpll
mov
test
xor
js
xchg
inc
nop
movsb
inc
fsts
mov
xchg
cmp
jg
xchg
push
das
ret
std
test
pop
jge
add
jmp
push
scas
jmp
inc
pop
sbbb
cs
aad
push
pop
mov
xor
inc
fdivrs
xchg
mov
pop
pop
bound
fstpl
jle
adc
out
das
out
fcompl
xchg
push
sbb
xlat
mov
push
add
bound
and
gs
loopne
xchg
daa
js
xor
test
lahf
mov
aam
test
les
cmp
mov
aad
xchg
lea
and
fldt
mov
dec
dec
cld
stos
jns
sub
pop
sub
fsubrp
or
sub
or
sbb
adc
cmp
lea
or
inc
ja
arpl
push
inc
out
call
push
adc
pop
rorl
cli
cmp
mov
out
js
sbb
adc
aad
sub
imul
fnsave
enter
call
or
and
insl
and
orl
cmp
mov
mov
pushf
ja
mov
and
cs
clc
lods
leave
mov
cmp
ja
push
xchg
sub
adc
lahf
lahf
inc
push
call
pop
and
movsb
mov
or
push
xor
or
jb
mov
mov
inc
insl
test
or
rolb
popa
jbe
jnp
xchg
aaa
cli
aad
fmuls
sub
mov
mov
leave
in
jbe
dec
xor
push
mov
mov
pushf
jno
or
shl
push
jp
pop
cmp
in
dec
ja
gs
jb
and
push
mov
pop
test
test
push
adc
jmp
adc
mov
and
mov
addr16
pandn
popa
jge
dec
mov
xchg
fisubrl
dec
and
jns
xchg
jecxz
jae
pop
pxor
or
cwtl
push
jns
pushf
int
push
or
js
shrb
fs
movsl
xchg
mov
sub
and
test
xchg
incb
sahf
cmp
mov
andb
lret
adc
jb
cmp
mov
stos
sub
push
clc
aam
out
add
pop
je
xchg
pop
mov
loop
xor
xchg
jo
sbb
mov
inc
fistl
xchg
ret
xor
movsb
inc
sar
lret
mov
lahf
fsubl
sbb
lock
cmp
inc
add
jns
addb
orb
pusha
mov
arpl
cmp
or
add
pop
push
lcall
adc
and
mov
in
scas
adc
inc
sub
mov
mov
pusha
dec
insb
dec
std
xlat
in
or
xlat
adc
jge
mov
clc
mov
cs
jbe
and
sbb
repnz
dec
lret
jne
je
stos
addr16
repnz
xchg
cmpsl
fcoms
push
dec
cld
xor
repnz
sub
fiadds
pop
sbbl
xchg
mov
sbb
xrelease
xchg
mov
shlb
sbb
add
jne
test
sahf
fwait
cs
cmp
int3
stc
out
pop
mov
or
add
adc
mov
adc
dec
ret
lods
push
pop
pop
jmp
jg
xor
lahf
adc
ret
adc
ljmp
jmp
lods
inc
scas
into
xchg
loopne
ret
into
mov
jp
mov
inc
fistps
and
jns
ret
jno
out
test
adc
and
or
fisubs
addr16
jl
stos
addr16
sbb
ss
adc
or
mov
push
jo
in
in
mov
rorb
jmp
fdiv
ficoms
outsl
push
adc
push
repnz
movsl
cli
fstps
adc
or
je
mov
xchg
enter
adc
mov
pushf
fmul
std
aam
jns
jno
dec
xlat
outsl
mulb
loope
add
cmp
push
test
dec
das
out
inc
cmp
mov
xlat
ss
xchg
mov
sub
adc
or
cmp
mov
andb
out
xchg
pushf
add
jmp
mov
insl
pop
pop
cmpsb
stc
test
cmpsl
or
ljmp
test
dec
fs
pop
inc
pop
cmp
rol
or
sbb
adc
fbstp
notl
jnp
rcrl
sub
adc
sub
lret
pop
in
jnp
andl
sbbb
jl
test
lds
sbb
inc
add
lea
lods
mov
dec
dec
and
in
into
dec
iret
inc
fnstsw
mov
pop
jle
jbe
pop
push
or
add
outsl
or
and
jmp
movsl
stc
mov
fistpl
js
test
adc
pop
cltd
ds
mov
ficompl
add
out
fdivrl
ja
imul
inc
pop
xchg
lds
les
inc
inc
clc
mov
dec
cmp
dec
loop
inc
mov
pop
pop
dec
movsl
jne
stc
xchg
orl
rorl
daa
mov
or
js
xor
mov
sub
test
jno
call
outsl
mov
lds
adc
lock
mov
cmpsl
pop
mov
outsb
int3
out
pop
pop
ljmp
mov
repz
imul
and
sub
aaa
das
repnz
pop
inc
jno
lods
pop
jg
out
icebp
dec
or
addr16
xor
sub
cmp
jb,pn
out
mov
pop
cwtl
outsl
pop
jmp
lds
xchg
jbe
lret
pushf
in
mov
out
nop
popa
cmp
pushf
xor
into
mov
mov
jbe
xchg
mov
lods
xlat
sbb
adc
gs
pop
loop
insl
mov
xor
inc
or
loop
ret
sti
int3
sbb
sub
loope
and
aaa
cmpsb
iret
mov
jne
jno
rol
fisubl
imul
and
cmpsl
add
aaa
enter
sti
mov
and
negl
cltd
adc
pop
and
pop
dec
inc
adc
shlb
popf
pop
stos
add
push
mov
dec
xlat
loop
and
pusha
mov
addl
ret
dec
cmp
daa
je
leave
jns
mov
jae
imul
cld
std
add
push
xchg
pushf
cmp
das
jo
or
mov
inc
cld
jb
mov
add
push
dec
loope
xchg
add
mov
sub
sub
ret
push
pop
xor
pop
push
popf
mov
jl
sbbb
test
idivb
cmpsb
fcmovnb
and
mov
mov
fistps
cmp
mov
sub
call
pop
sub
xor
in
in
lds
lods
jb
into
int
xchg
cmpsb
xor
xchg
aas
push
and
mov
mov
dec
or
mov
pop
dec
fnstcw
in
jmp
int
daa
mov
pop
hlt
nop
dec
loopne
scas
mov
adc
lcall
ss
ja
fistps
ds
adc
ret
mov
stos
enter
sbb
jp
cmp
xor
push
inc
incl
repnz
std
mov
push
push
push
mov
test
imul
fcoms
cmp
out
or
inc
adc
sahf
mov
stos
mov
in
xor
nop
pusha
adc
dec
sub
lret
and
leave
ds
enter
hlt
dec
les
es
mov
mov
loop
dec
sahf
fistpll
push
jb
xchg
and
dec
cmp
jo
pushf
xchg
adc
imul
xor
pop
push
rclw
outsb
fmuls
sti
mov
dec
cmp
pop
outsb
insb
pop
sub
decl
mov
jecxz
sbb
loopne
xchg
pop
or
add
cmp
sarl
imul
lret
lods
jmp
in
ficompl
js
push
lods
je
out
push
sbb
jmp
mov
mov
lods
in
pop
mov
cld
outsb
repnz
mov
nop
fxch
testl
xchg
call
int
ret
mov
addr16
jno
xchg
jno
aad
mov
ret
rcrb
enter
adc
data16
pop
pop
stos
jnp
je
jle
sbb
or
stc
int3
dec
jns
mov
scas
inc
push
ja
aad
adc
in
xor
xor
add
jle
dec
adc
push
cli
mov
movsl
shl
mov
popf
mov
mov
cmp
aad
mov
inc
push
pop
pusha
inc
xor
or
xchg
xor
xor
daa
outsl
stc
cwtl
xchg
mov
cmp
adc
sbb
lock
or
push
int3
fistpll
loopne
xchg
test
repz
or
or
or
pusha
cmpsl
xchg
adcl
jmp
das
jbe
repz
js
pop
test
adc
int3
out
rorb
dec
adc
int
jl
sub
sub
push
inc
in
ja
sub
cmp
xor
or
mov
pop
cmp
pusha
jno
adcl
jnp
lods
pop
and
std
fwait
test
cmp
mov
cmp
cmp
and
cmp
clc
call
or
in
outsb
push
lea
rorb
sahf
scas
jle
adc
repz
push
xchg
adc
mov
in
pop
adcb
popa
lods
bound
dec
in
and
adc
or
orl
lahf
or
sub
mov
add
mov
ds
popf
jne
cmp
ss
insb
cltd
mov
xchg
out
pop
or
test
scas
ret
pop
push
out
fldl
push
mov
rcll
sub
xchg
dec
add
or
inc
cmpsb
orb
shlb
movsb
aam
dec
ror
adc
jae
sti
in
inc
aad
sbb
sub
jnp
pop
ror
jmp
push
mov
mov
adc
clc
call
iret
jno
lea
aas
pop
jo
call
fisubs
push
add
stos
adc
add
mov
pushf
ja
sub
jo
sbb
repnz
imul
inc
ljmp
aas
push
lcall
xchg
xchg
decb
pop
jg
fisubrl
xchg
xor
lods
mov
add
mov
cmpsl
movsl
mov
fisubrl
repz
or
add
mov
pop
adc
lock
repz
insb
movsl
fs
sbb
nop
in
xlat
jns
and
je
cld
out
jle
pop
jl
cmp
xor
mov
cmp
xor
and
or
and
cs
mov
pop
and
mov
push
ss
lods
mov
int
jbe
add
xchg
xor
pop
cmp
ds
addl
lret
push
jl
add
lahf
dec
push
adc
pop
out
mov
mov
sahf
out
pop
xor
daa
sbbb
insl
shlb
ss
clc
mov
jmp
or
cmp
mov
xor
sub
inc
pop
lahf
ret
sub
out
int3
mov
pop
mov
ljmp
shrl
mov
sub
iret
data16
fcomp
mov
push
adc
mov
outsl
xor
add
fsts
mov
xlat
ja
cwtl
lret
mov
jp
adcb
aad
shl
popa
ret
cmp
inc
in
dec
out
repz
mov
in
test
add
and
jl
mov
dec
push
aad
and
ret
pusha
and
mov
lds
xchg
xchg
fs
dec
sbb
lcall
or
pusha
imull
ljmp
shr
repz
out
int
xor
push
mov
sarl
fs
sub
imul
test
lock
push
push
xchg
xchg
adc
fnstsw
push
rcll
addr16
aas
sub
mov
and
cmpl
ja
insb
and
in
gs
and
fistpl
test
les
push
fwait
sti
push
orb
mov
test
jb
cmp
mov
mov
lods
mov
es
out
mov
pop
sbb
adc
xor
arpl
push
inc
xchg
add
xor
cmpsl
cmp
sub
add
pop
add
xchg
xorb
mov
sahf
xor
clc
das
jb
fisttpl
or
in
xor
xor
daa
cmp
enter
dec
mov
sbb
inc
enter
adc
mov
movsb
imull
ret
enter
jnp
stos
mov
ret
leave
cli
and
mov
cmc
xchg
popa
jae
cmc
add
sbb
dec
or
mov
repnz
mov
pop
sub
dec
pushf
lods
pushf
dec
sub
adcl
sti
dec
adc
pop
incl
out
rcrb
nop
aaa
enter
test
pop
xchg
mov
pop
mov
jp
sahf
and
sub
jle
sub
out
sbb
adcb
mov
divl
adc
out
push
add
lea
rorl
cmp
or
jbe
jno
aas
push
insb
pop
sbb
or
inc
xchg
inc
outsb
dec
push
cld
mov
nop
adc
jb
push
sbb
inc
or
xlat
es
or
add
sub
mov
imul
insl
in
aas
jg
daa
bound
adc
faddp
push
popf
push
push
popf
fsubp
jb
mov
iret
mov
test
inc
icebp
daa
mov
test
in
aam
fiaddl
pop
jb
inc
cmp
lds
xor
sbb
repnz
fcomi
mov
fcomp
sub
add
mov
push
push
in
jns
shrl
cmp
dec
rcl
mov
mov
sub
xchg
adc
mov
xchg
mov
not
jle
lea
std
testb
clc
add
mov
jne
dec
and
fst
sub
sub
repz
pop
mov
movsl
pushf
cltd
cmpsb
sub
mov
adc
shrb
cmp
lcall
mov
add
mov
sbb
imul
mov
inc
dec
lods
imul
out
cwtl
mov
in
xchg
decb
pop
pop
push
dec
jnp
int
inc
ret
and
stos
test
jl
stos
inc
lcall
sub
test
out
out
das
adc
mov
xchg
cli
lahf
adc
mov
adc
inc
mov
sbb
aad
sub
test
loopne
in
outsb
scas
mov
and
dec
push
jg
push
inc
loopne
mov
jle
idivb
dec
jno
mov
or
aad
and
ljmp
mov
fidivs
icebp
add
xchg
mov
inc
aad
sbb
rcll
aas
jg
push
xchg
mov
pop
inc
fcompl
fistpl
cld
andl
push
cmp
call
lahf
and
add
faddl
or
mov
xor
cmp
inc
push
mov
mov
and
push
jb
sbb
cli
cmp
repz
mov
sbb
fidivs
push
loope
inc
testl
arpl
lcall
ret
sub
jno
xor
stos
pop
leave
scas
push
cwtl
pop
or
pushf
addl
mov
xchg
jg
mov
movsb
push
or
dec
dec
xor
in
jbe
stc
jnp
orl
and
push
jp
xchg
sub
cmp
fs
insb
lods
xchg
push
xorb
or
xchg
loope
fstpt
sahf
push
leave
lcall
pop
fsts
mov
mov
popf
lret
fsubl
aaa
push
adc
cmp
pop
lret
ret
pop
mov
scas
xchg
lcall
xchg
push
cmp
push
cwtl
mov
into
testl
mov
aad
gs
lock
cld
pop
fdivrs
pop
xchg
inc
push
push
aas
fstpt
pop
dec
adc
xchg
addr16
mov
inc
jno
test
outsl
or
push
jne
dec
fiadds
mov
lds
adcb
arpl
xchg
pop
mov
movsb
aam
sti
sbbb
movsb
fsubp
sub
mov
or
xchg
call
mov
fisttpll
imul
xchg
inc
enter
dec
inc
xchg
mov
dec
lcall
jbe
add
les
frstor
xchg
out
sub
mov
inc
cmp
xchg
arpl
jp
data16
mov
mov
jo
in
mov
xchg
call
or
mov
cwtl
test
int
push
sub
fwait
add
test
inc
and
pop
mov
jmp
cmc
roll
movsl
sbb
push
add
std
cmpsl
jg
call
das
sub
in
ret
pop
cmp
sub
jne
add
mov
lock
lods
add
and
xchg
push
mov
add
adcl
test
sbb
insl
rcl
mov
in
push
aas
cmpsb
test
xor
fcmovnbe
daa
loopne
push
xor
push
jg
xchg
loop
pop
adc
sub
adcb
clc
push
and
into
shll
stc
cmp
out
out
movsl
dec
sub
mov
filds
sbb
fisubs
addr16
xchg
out
mov
orb
cmpsl
test
mov
shll
inc
add
ljmp
out
out
jl
inc
mov
xchg
xor
pop
push
pop
jno
jo
lock
mov
ret
ret
mull
loope
in
or
stos
mov
jno
mov
inc
out
add
lret
shrb
pop
push
leave
xchg
enter
jl
push
pop
pop
repz
cmp
adc
enter
cwtl
scas
jns
movsb
aaa
imul
dec
or
cwtl
adc
or
and
lcall
das
and
cmp
pop
ja
mov
jecxz,pn
lods
push
sarl
xchg
fcomps
fsts
mov
es
mov
dec
lock
divb
and
lcall
popa
daa
push
or
mov
inc
jns
lret
mov
jno
icebp
cmp
data16
andl
and
push
adc
pop
jae
xlat
push
cs
inc
cmp
jmp
lds
mov
sahf
ljmp
mov
pop
sbb
and
pop
add
xor
sub
or
dec
sahf
pop
xor
cmp
icebp
cmp
jbe
test
xorb
aas
mov
and
sbb
test
or
loop
fiadds
imul
add
aad
sub
mov
cmp
fs
push
fdivp
rcll
pop
sbb
mov
push
popa
cmp
fadds
cwtl
sbb
sub
pop
sub
fisubrl
jbe
mov
addb
shrl
and
test
and
and
loopne
lods
dec
cli
push
push
jo
cmc
cli
stos
jl
into
xor
sub
mov
mov
xchg
add
test
push
fisttpll
repnz
xchg
loop
outsl
xchg
shlb
repnz
leave
aam
mov
outsl
mov
mov
mov
xchg
movq
jecxz
movl
mov
xor
in
shlb
fnstsw
push
rcrb
jae
cmp
pop
dec
cmp
dec
into
mov
pusha
sub
mov
test
fbld
pop
adc
mov
push
cld
mov
out
out
movsl
dec
mov
mull
imul
ret
repnz
mov
jns
mov
test
daa
cmp
mov
in
arpl
jb
xchg
or
lock
jmp
mov
mov
fdivs
cmp
add
dec
sbb
add
push
pusha
cld
call
mov
cwtl
jle
rol
outsl
mov
cld
xchg
cmpsl
push
and
pop
mov
or
push
in
or
in
in
les
outsb
and
sub
cmp
fwait
and
mov
xchg
jmp
mov
into
xchg
push
shrb
jmp
jge
andb
aaa
xchg
pop
or
xor
lret
jnp
aam
adc
pop
xor
test
fs
xchg
filds
sbb
addr16
loope,pt
cmpsl
cmc
pop
fdivrl
and
repnz
adc
fstpl
loop
push
xor
repnz
push
push
rolb
adc
jge
mov
lea
dec
jae
add
movsl
popa
jb
xchg
xor
rcr
fmuls
sub
cwtl
in
sbb
cmp
jno
add
iret
xchg
mov
js
jmp
dec
out
hlt
pop
pop
leave
in
lods
and
enter
lods
lods
fwait
repnz
ss
jbe
in
and
and
fisubs
add
notb
faddl
test
adc
scas
push
cmp
jo
xchg
mov
repnz
cmp
pop
mov
ja
mov
sbb
adc
test
std
xchg
pushf
stos
or
ret
adc
cmpsb
xchg
push
stos
sbb
adcb
sbb
push
ds
xor
fcmovbe
and
mov
pop
loop
shrb
out
insl
ret
add
cwtl
ds
push
push
scas
sbb
shll
cltd
adc
add
jge
fwait
sub
in
das
xor
jmp
shr
add
sbb
xchg
or
dec
push
mov
push
sahf
xchg
pop
sbb
js
xchg
fldln2
inc
mov
rolb
xchg
mov
mov
sbb
aad
lahf
ret
pop
jp
outsl
mov
push
jae
mov
push
aaa
notb
xor
aas
les
or
inc
xchg
push
xchg
adc
jne
sub
rolb
pop
arpl
arpl
clc
cld
outsl
xor
out
dec
rorl
inc
adc
mov
dec
jnp
cmc
es
and
sti
mov
daa
add
cmp
ljmp
fists
mov
jb
jne
xlat
subb
lret
cmp
push
xor
clc
mov
ja
test
repz
negb
sbb
push
pop
inc
test
pop
scas
lahf
jle
mov
sbb
cli
or
enter
sarb
lcall
adc
loop
nop
cmp
mov
sub
loopne
xlat
fwait
aam
cli
push
adc
test
mov
pop
or
stos
sbb
adc
mov
dec
xchg
xor
jp
push
sbb
and
push
das
jle
lret
or
pop
sahf
jns
mov
jb
xchg
push
sub
imul
inc
inc
push
ljmp
xchg
addb
push
sbb
xchg
inc
fbld
repz
sub
mov
mov
popa
pop
xor
nop
xchg
cmpsl
std
xchg
pop
scas
inc
xchg
jg
scas
cmp
and
sub
dec
cmp
loop
cmp
jb
xlat
cmc
mov
or
into
dec
ss
bound
sbb
movsl
jne
xor
cmp
scas
jae
bound
pop
and
mov
dec
ljmp
sbb
mov
jmp
and
mulb
shl
inc
add
leave
sbb
jge
add
repnz
shll
pop
jo
lret
leave
or
popf
sub
sbb
shrb
add
push
and
inc
gs
cmp
int3
cmp
mov
and
iret
push
sbb
adc
mov
mov
push
push
gs
ja
jge
insb
shrb
jp
mov
aaa
je
stc
aaa
lret
je
mov
js
mov
fs
fstp
add
lahf
fnstcw
mov
push
idiv
cmp
ret
mov
or
aas
mov
mov
fdiv
lcall
adc
and
cmp
inc
in
sub
das
xor
rcrl
xchg
test
nop
pop
icebp
and
push
or
or
xchg
cmpsb
jno
rcr
int
dec
and
js
sti
adc
xchg
pop
xchg
jnp
jno
dec
push
fildl
loopne
cmp
cmc
icebp
mov
subl
adcb
cltd
xor
inc
push
aas
or
jge
lahf
stc
xor
sub
idiv
mov
inc
dec
popf
fcmovne
les
cmp
ss
pusha
xor
jge
mov
arpl
jp
ds
inc
pop
lods
and
fistl
cltd
push
push
leave
pop
cmpsl
fstpl
jo
dec
outsl
dec
mov
cmp
sbbl
xchg
or
ds
loop
notl
mov
inc
sarl
push
mov
adc
push
mov
scas
mov
pop
in
test
push
or
xor
dec
fsubp
adc
fwait
loop
cld
push
fdivrl
dec
cwtl
jg
xor
imul
mov
push
cltd
lods
xor
test
mov
fwait
or
out
imul
stos
es
mov
inc
and
repnz
mov
shl
imul
gs
pop
mov
mov
orb
xor
lock
pop
dec
movsb
push
cmpsl
adc
sbb
xchg
xchg
movsl
mov
lret
xor
aaa
and
push
mov
jns
or
and
inc
fwait
punpckhbw
es
pop
mov
out
push
mov
rcrl
jne
enter
into
mov
xor
mov
test
rolb
int
adc
scas
es
clc
push
dec
std
xchg
icebp
mov
jo
je
rorl
loopne
mov
cmpsl
add
fs
push
or
movsb
add
lret
dec
cltd
mov
daa
scas
rcll
xchg
pop
cs
mov
sarl
aam
leave
insl
mov
mov
dec
scas
mov
cmp
adc
mov
pop
outsw
or
inc
push
loop
mov
xchg
arpl
dec
aad
or
test
je
and
inc
xorl
jp
push
xchg
ret
repnz
cmp
out
inc
fadds
cmc
mov
lret
rcll
adc
and
dec
aad
and
movsl
ret
ja
inc
inc
adc
std
xchg
aad
cmp
push
adcl
mov
orl
test
outsl
clc
mov
push
xchg
push
call
cs
int
push
mov
bound
jb
cmp
rol
sbb
lds
daa
addr16
lods
stos
cmpsl
enter
jmp
sahf
in
fsubr
adc
cmpxchg
std
es
and
xor
out
add
lods
sbb
in
out
push
mov
mov
jle
lods
fisubrl
mov
cld
loope
add
add
inc
xchg
scas
push
fstps
push
and
xchg
push
mov
push
adc
test
aam
push
out
xchg
mov
in
arpl
fstpt
popa
xor
js
mov
in
adc
stos
cmp
xor
inc
adc
and
int3
mov
int3
aas
loope
subb
stos
frstor
jmp
push
pop
enter
clc
fisubrs
sahf
dec
sub
add
fwait
ds
scas
rcll
cmpsl
and
das
ret
ja
xor
cmp
cltd
repz
cmpsb
mov
out
adc
push
ret
std
in
es
mov
cmp
push
rcr
loop
jb
add
out
imulb
in
pop
inc
mov
ljmp
xchg
fcompl
mov
sub
pusha
decl
mov
sub
movsb
push
mov
xchg
jb
loopne
xchg
and
loopne
sub
dec
pop
dec
enter
xchg
push
dec
adc
mov
sub
aam
mov
jns
shl
dec
stc
loop
jmp
pop
daa
cmc
mov
fmull
repnz
pop
jecxz
repz
and
and
xorb
sarb
jo
std
ret
mov
adc
xor
inc
cmc
xor
jge
sbb
repnz
add
pushf
xchg
int
push
in
fcmovb
cmp
jne
icebp
adcb
and
sub
jmp
movsb
lds
lea
push
mov
ret
or
out
stc
xchg
jg
mov
adc
push
cmp
imul
mov
dec
adcl
jno
xchg
cs
das
mov
insl
movsl
leave
sub
mov
mov
mov
js
and
cwtl
pop
movsb
inc
inc
gs
sbb
dec
loopne
pop
pop
mov
insb
pop
lock
xor
aad
pop
fwait
mov
ljmp
sub
aam
sub
lods
hlt
nop
jnp
aaa
mov
dec
adc
aaa
out
test
mov
xor
add
in
movsl
ret
out
jb
or
cmp
mov
jbe
mov
cmp
popf
popa
push
outsb
mov
test
pop
sti
cli
pop
dec
popf
je
inc
adc
pop
push
add
push
les
sub
lahf
push
insl
and
int3
push
dec
mov
movsb
lcallw
je
idivb
xor
dec
ret
cs
mov
enter
lret
or
lock
enter
jg
inc
cmpb
js
or
pop
adc
jbe
lret
cmp
xor
aas
in
jnp
mov
aad
dec
xorl
repnz
lods
sub
fdivrs
jl
shll
lret
jl
aad
aad
mov
insb
xchg
xlat
xchg
loop
adc
subl
in
sbb
inc
aam
mov
lods
movsl
nop
test
fwait
test
movsb
adc
in
push
daa
in
ja
jge
lods
lret
xchg
add
or
push
test
mov
fdivl
jp
xchg
addr16
pop
dec
add
ret
jne
xchg
adc
mov
pop
rcl
lds
add
in
rcll
jmp
imul
hlt
sub
jno
call
imul
sti
mov
jnp
lahf
lahf
cmp
or
push
scas
xchg
or
push
aam
aaa
imul
pusha
mov
pop
out
dec
sbb
add
pop
cmpsb
mov
loopne
xchg
sub
push
jmp
and
outsl
dec
icebp
sbb
fcoml
dec
inc
add
sub
add
test
fists
aad
mov
sub
mov
pop
divl
pop
mov
test
xchg
cli
dec
sbbl
orl
push
inc
pop
js
ss
out
inc
cld
push
fsubs
jbe
pop
rcll
aad
mov
inc
aas
call
xchg
mov
lds
rolb
cltd
mov
aas
mov
adc
jns
mov
sbb
cmpsb
test
push
and
sarl
aaa
add
fs
shl
pop
es
ds
mov
dec
jecxz
push
and
data16
scas
pusha
add
clc
jmp
xor
xchg
popf
jmp
xchg
inc
mov
push
pushf
mov
scas
mov
imul
lret
or
add
xchg
xchg
push
inc
sbb
scas
lea
int3
cld
jp
xor
mov
adcl
popa
out
jmp
or
sbb
inc
nop
enter
and
les
enter
cli
out
and
test
jp
inc
jge
insl
cmp
mov
clc
push
inc
mov
adc
dec
mov
ret
mov
add
cmp
enter
jae
mov
add
rep
loopne
sub
xor
js
cld
push
xchg
into
cmp
std
imul
hlt
push
xchg
out
addl
mov
pusha
mov
fsubrs
lahf
pop
sahf
fsubs
mov
or
lea
and
jecxz
or
mov
mov
xchg
out
sub
add
adc
mov
psrlq
xor
shl
cli
daa
cmp
mov
mov
dec
fwait
mov
jmp
sub
inc
ror
fistps
mov
dec
inc
fdivrp
mov
xlat
inc
push
push
test
mov
iret
adc
stos
lods
xchg
andb
gs
cmp
dec
xorb
push
jmp
fadd
dec
int
pop
cltd
mov
sarb
loopne
out
ss
xchg
fists
pushl
cltd
push
pushf
popf
sbb
cmp
adc
js
mov
pop
gs
inc
les
movsb
lods
mov
cmp
outsl
xchg
loop
dec
lcall
inc
repnz
enter
push
fwait
popf
cmp
stos
test
fistpl
imul
dec
pop
mov
imul
std
addr16
xchg
pop
sub
rcll
push
mov
inc
lahf
cmp
mov
rol
fwait
mov
dec
inc
mov
jne
notb
or
cld
pop
daa
push
test
call
push
mov
pop
push
dec
mov
outsb
mov
stos
out
and
sub
lods
jp
push
icebp
sub
pop
fcmovbe
adc
jmp
jno
mov
sbb
stos
or
in
jle
flds
inc
addl
push
pop
xor
adc
mov
and
mov
xchg
xchg
adc
add
xchg
mov
sub
xchg
adcl
mov
pop
imul
pop
outsl
subb
add
sbb
jecxz
push
or
repnz
push
ret
mov
jb
pop
sbb
mov
xlat
mov
sbbl
scas
xor
or
test
sub
jb
out
and
add
fwait
testb
adc
sbbb
outsl
rorb
adc
addr16
xor
inc
xchg
rcrl
cmp
out
mov
and
inc
lock
xlat
lods
lcall
push
data16
call
push
jno
mov
addr16
test
icebp
out
jns
jmp
dec
mov
cmpsl
jecxz
adc
cmp
in
jb
xchg
xlat
arpl
jecxz
fisubl
in
adc
pop
fiadds
mov
cwtl
scas
mov
mov
lods
dec
push
push
pop
lea
add
cmp
lahf
ret
fndisi(8087
rol
jmp
inc
jne
cmp
mov
lcall
in
xlat
ret
mov
dec
mov
nop
add
pusha
decl
cwtl
mov
loope
sub
push
and
cmp
test
into
push
xchg
dec
cli
jecxz
push
add
sub
jle
xchg
lret
test
aaa
sbb
mov
jl
sub
sahf
xchg
cmp
xor
inc
xlat
xchg
push
call
cmp
out
rcrl
sub
es
pushf
and
arpl
xchg
es
jbe
inc
jnp
xor
adc
clc
jnp
das
inc
xchg
shlb
shlb
sbb
mov
rcll
adc
add
mov
adc
add
dec
xchg
imull
xchg
lret
arpl
lahf
daa
test
into
mov
push
insl
xor
je
mov
popf
xchg
or
int
or
cmp
inc
cmp
push
cltd
test
mov
mov
movsb
shrl
aam
xchg
movsl
add
aam
lds
mov
fneni(8087
xor
out
xlat
pop
lods
in
push
sbb
lds
add
or
adc
and
xor
fs
or
adc
xlat
enter
mov
pop
cmc
data16
popl
lea
mov
ror
mov
xchg
mov
sub
dec
sub
outsb
outsb
push
cmp
adc
adc
push
push
pop
sub
jg
add
or
ret
test
pop
stos
mov
cmp
movsl
mov
push
xchg
daa
pop
shrb
incl
fsubrp
mov
jl
mov
fcoms
push
and
pop
xor
les
das
out
into
jecxz
pop
aad
mov
lahf
adc
jb
repnz
push
fadd
pusha
dec
aad
or
dec
ds
jns
sahf
fiadds
push
xchg
xchg
push
adc
xchg
xchg
cld
loope
sti
lret
pop
divb
mov
repz
inc
addr16
in
shll
inc
es
int3
mov
inc
mov
dec
dec
sbb
aam
mov
jo
sahf
and
jo
cltd
dec
std
xchg
xor
xchg
adcl
shrl
cmpsl
jl
je
pop
mov
movsb
aas
cld
jecxz
mov
roll
add
jbe
push
int
sahf
stc
ret
shrl
orl
xchg
lods
pushf
pop
or
aaa
pop
notl
dec
test
mov
and
dec
dec
movsl
or
push
psubsw
sarb
inc
aam
int
data16
pop
xrelease
xor
dec
sbb
ja
and
imul
mov
scas
mov
js
imul
inc
and
ror
jp
dec
testl
lret
in
xchg
or
imul
and
mov
test
push
rcll
ret
mov
jecxz,pn
scas
repz
sub
mov
pop
xor
xor
add
jae
sti
push
or
mov
mov
ss
loope
jnp
hlt
shrl
stos
adc
ret
xchg
fnstcw
cli
es
xchg
jbe
and
mov
adc
or
lods
aas
jae
jg
repz
push
dec
ret
push
fdivrp
cmp
cmpsl
sahf
lods
addl
cmp
nop
and
sub
ret
jne
fdivrs
mov
cmp
inc
fimull
sbb
cltd
mov
mov
cmp
testl
js
mov
xchg
loopne
arpl
arpl
dec
adc
js
div
xor
and
xchg
mov
int3
outsb
in
cmp
mov
cmc
cmpsb
lcall
bnd
sti
js
dec
xchg
adc
mov
push
lcall
jg
cmpxchg
pop
dec
ss
les
adcl
xor
jb
mov
ror
adc
cmp
mov
mov
xchg
mov
fs
mov
adc
mov
shlb
jbe
imul
subl
out
cmc
mov
push
ret
jmp
jle
stc
sbb
dec
xchg
or
mov
les
jge
insb
pop
jo
repnz
inc
mov
das
fcomps
mov
pusha
ljmp
mov
push
stc
inc
xchg
jl
in
pop
mov
test
pop
rcrl
sbb
mov
pop
dec
push
es
sub
xor
loope
sbb
mov
sbb
and
jnp
inc
adc
xchg
mov
nop
lcall
les
insl
arpl
push
repz
test
repnz
pop
push
mov
stos
stc
inc
loope
lcall
lret
lea
xchg
mov
jg
leave
jmp
out
pop
jge
push
pop
ret
jmp
mov
adc
jmp
sub
ret
pop
sub
cli
sbb
arpl
and
scas
das
jne
jno
jl
rorb
xor
xchg
aad
fisubrs
adc
jmp
gs
fstpt
add
or
adc
jno
jnp
sar
sub
jmp
test
push
test
stos
cld
cs
dec
adc
jae
je
mov
xor
cmp
rcrl
jl
dec
call
les
mov
sbb
lret
imul
cld
dec
mov
mov
or
xchg
stos
sub
lock
sub
fs
inc
xchg
mov
or
arpl
cwtl
adc
xchg
or
rcrb
out
mov
or
push
sub
vmaxss
enter
filds
enter
ficompl
adc
adc
ss
and
pop
xchg
in
jbe
mov
jo
cwtl
pop
sbb
stos
dec
xchg
mov
fs
add
fdivs
xor
and
cmc
fs
dec
fiaddl
mov
inc
pop
push
mov
popl
adc
and
test
orl
outsb
pop
xor
neg
out
jecxz
xchg
mov
or
rcrl
xchg
pop
ret
stos
stc
jnp
add
push
ss
mov
and
out
xor
cli
sub
mov
scas
es
mov
or
xchg
xchg
mov
in
adcl
pop
inc
dec
in
dec
mov
jbe
pop
int3
sbb
in
mov
xchg
fistpl
fucomip
in
mov
stc
pop
sub
call
jns
cmp
inc
inc
inc
ret
xor
xor
std
pop
loope
imul
xchg
xchg
aam
add
cmp
push
pop
push
lret
fs
cmp
imul
test
mov
pop
adc
fldl
jae
pop
fidivrl
das
pop
nop
dec
fs
pop
jmp
in
jle
loope
fcomps
and
mov
pop
jmp
lcall
or
out
add
xchg
ljmp
mov
stc
mov
push
mov
xchg
and
jle
addr16
mov
cmpsb
pop
in
xlat
shrb
mov
outsl
mov
rcrl
je
jns
std
shl
in
cmp
ret
mov
and
or
shl
aam
jge
mov
sub
jge
jo
mov
xchg
sub
iret
loopne
cmp
cmp
cmc
int3
insb
repz
call
dec
pusha
jns
jecxz
sub
jbe
pop
test
push
pop
lcall
pop
out
mov
push
xor
fdivrl
xchg
xchg
outsb
mov
xchg
test
pop
add
stos
cmpsb
jge
sub
mov
icebp
iret
jmp
push
mov
mov
adc
test
fmull
btc
icebp
lea
das
push
cmp
jb
mov
and
imul
xchg
add
in
jns
cli
mov
or
adc
outsl
imul
bound
jno
xchg
lahf
jae
pushf
jo
lcall
cmp
stc
cltd
and
std
out
es
or
add
fldenv
cs
cmpsl
ds
push
mov
dec
pop
or
sub
lods
xchg
push
fcompl
and
jnp
repnz
inc
jle
cwtl
or
cmpsl
rorb
cs
adc
int
lods
test
adc
cltd
or
inc
xor
out
push
imull
fdivrl
movsb
ljmp
pop
pusha
jle
sbb
add
in
insl
cwtl
shrl
pop
outsl
and
pop
mov
mov
in
out
aas
add
ret
icebp
sarl
call
jne
scas
int
mov
scas
sub
cmc
sbb
mov
push
sub
into
cmp
movsl
pop
sbb
into
fistl
rorl
out
push
push
loope
adc
mov
xchg
movsb
dec
pop
rol
mov
lods
inc
fsts
pop
xlat
out
mov
lea
xchg
insl
mov
adc
sbb
mov
test
sarb
cmp
push
dec
dec
int
faddl
outsb
mov
xor
push
fsubs
xchg
int3
dec
or
clc
cmpsb
jae
cmp
fiaddl
lcall
scas
insb
mov
mov
movsb
dec
cmp
mov
xchg
ljmp
popa
mov
jp
push
movsb
xor
sub
jae
mov
negl
repz
fcomps
in
sub
aad
sahf
fsubp
sub
outsl
daa
jmp
add
imul
inc
les
pop
sub
mov
movsb
js
xchg
sbb
mov
std
xchg
repz
or
lcall
scas
push
mov
sbb
xor
cmp
sub
mov
mov
and
faddp
cmp
outsb
popa
hlt
test
sub
push
cld
rorb
mov
pop
mov
in
adc
xchg
lock
ds
jo
dec
cmp
xor
ljmp
and
cld
cs
div
daa
into
inc
pop
cmp
mov
push
add
jne
pop
mov
mov
mov
incb
sbb
or
xchg
arpl
mov
lahf
js
mov
jno
lea
pushf
jmp
adc
sbb
cmc
mov
cmp
pusha
mov
pushf
mov
lret
push
jns
or
adc
push
jo
jne
and
aad
call
xor
pop
loop
cmp
adc
jp
xor
int
push
adcb
cmc
sub
mov
xchg
popf
in
push
jl
in
and
adc
or
neg
jns
mov
ss
outsl
and
inc
test
mov
mov
ja
orb
dec
repz
cmp
std
or
mov
sbb
sbb
jbe
xor
and
adcb
fiadds
pop
stc
sbb
movsl
xchg
shrb
loopne
sbb
cwtl
cmp
pushf
mov
adc
lock
push
dec
xchg
movsb
pop
insl
fiadds
jge
push
stos
ss
cwtl
mov
mov
rclb
mov
pop
movsb
lock
jns
mov
loopne
push
fstpt
pop
std
xchg
popa
cmpsl
int3
stos
test
push
push
arpl
andl
aam
mov
mov
push
pop
pop
and
mov
cmp
push
inc
sub
cvtps2pi
or
sbb
xchg
mov
inc
orl
pop
xor
adc
aaa
and
bound
fsubrl
pop
movsb
shll
js
adc
test
mov
mov
lahf
movsb
mov
and
fucomi
xchg
cmp
addr16
sub
sub
mov
int3
stos
ficoms
jge
stc
andl
lods
hlt
js
jp
lea
and
and
adc
dec
mov
test
xchg
fwait
jle
cmp
mov
xor
cltd
sahf
mov
sub
repz
cltd
adc
aad
imul
lds
pop
push
rcl
mov
repnz
ret
data16
jae
sti
out
pop
jo
rorl
je
add
jno
xorb
test
jp
test
mov
and
aaa
arpl
sti
in
mov
fs
mov
or
jno
inc
add
pop
aas
xchg
and
repz
pop
stos
cmp
call
dec
in
rol
enter
adc
mov
push
and
inc
jno
pop
cmc
adc
jl
lcall
add
xor
sub
cli
loop
decl
mov
xor
incb
pop
sbb
popa
repz
roll
push
bound
stc
adc
imull
out
pop
pop
mov
push
and
out
push
jecxz
outsl
push
arpl
sub
mov
xor
xchg
aad
stos
or
pop
movsl
inc
add
fsubs
pop
dec
or
call
pop
cmp
data16
lods
adc
dec
mov
dec
xlat
sbb
cmpsb
xlat
pop
insb
shl
imul
pop
and
mov
icebp
mov
arpl
fiaddl
lret
lods
mov
inc
jno
push
sbb
push
adc
jl
fucom
pop
lods
xchg
pop
outsb
sbb
push
roll
pop
push
jl
sub
mov
fcom
xchg
jno
stos
sbb
inc
inc
pushf
leave
add
in
pop
std
bound
pop
pushf
xor
gs
out
add
lds
out
or
mov
push
push
jp
mov
fisttpll
xor
repnz
add
jp
es
inc
clc
lret
call
aam
test
sbb
fimuls
adc
mov
loopne
fbld
dec
outsb
mov
insb
aaa
fisubs
mov
inc
sub
pop
lea
dec
adc
cmpsb
jp
std
mov
mov
neg
pop
adc
inc
cmpsb
cld
arpl
pop
out
or
out
mov
repnz
sbb
shll
je
xlat
pop
mov
std
mov
nop
push
xchg
mov
test
push
add
das
ret
pop
jns
dec
fcomps
mov
das
orl
pop
ss
jb,pt
test
cmp
mov
rcr
xchg
lock
xor
push
mov
mov
or
mov
lahf
pusha
mov
mov
fwait
test
and
out
add
xor
cmp
and
scas
outsl
prefetch
or
mov
ljmp
push
incl
and
pusha
fwait
stc
xor
testb
sub
cmp
jp
inc
or
icebp
xor
push
cmpsl
pop
sbb
jns
push
sub
pop
pop
or
pop
xchg
lea
xchg
push
pusha
sub
sbb
mov
xchg
jb
lods
pop
inc
mov
fistpl
popa
jl
outsb
cld
and
in
mov
adc
pop
std
aam
rclb
sbbb
push
mov
nop
sub
out
adc
rcrb
cwtl
jecxz
adc
push
test
pop
mov
stos
pop
jae
add
rcrl
fisubs
hlt
mov
xchg
push
dec
cmpl
sti
mov
cwtl
shl
repnz
lahf
mov
out
jg
loop
dec
mov
in
movsl
xor
lods
frstor
adc
leave
mov
mov
std
outsl
and
in
inc
sbb
inc
aad
mov
js
je
cmpsl
pop
es
inc
aam
mov
xor
fs
push
popf
aaa
sahf
sub
push
cmc
stos
cmpsb
cmp
inc
pop
inc
call
xor
rolb
pushl
mov
inc
inc
fistpl
pop
insb
out
lock
cmp
or
mov
inc
fld
pop
pushf
mov
inc
jl
lds
sbb
pop
sets
loope
int
jbe
lea
cli
and
xor
shlb
adc
jne
out
pop
mov
call
xchg
xor
xchg
sub
xchg
push
jp
sti
dec
rorl
fisubl
cmpsl
loope
lahf
xchg
lcall
xlat
sbb
xlat
xor
push
ficoms
movsl
pause
xlat
mov
mov
xchg
xor
push
mov
das
testb
xor
cmp
out
mov
test
mov
inc
ljmp
dec
mov
popf
inc
jne
cmp
push
gs
adc
xor
mov
dec
cli
rcll
lret
jecxz
insb
or
stos
fists
lret
das
dec
ljmp
rol
lods
sub
mov
cmp
data16
dec
pop
cli
jmp
jle
mov
sbb
lock
inc
sub
fisubrs
pop
pop
es
lahf
mov
mov
fstps
push
andb
lret
inc
loopne
bound
pusha
sub
enter
pushf
popf
gs
mov
lret
cmpl
push
sbb
jno
mov
cwtl
pop
pop
xchg
int3
push
roll
mov
daa
jecxz
movsl
jmp
loopew
aam
mov
fdivrl
fcomps
xlat
mov
inc
sbb
in
dec
push
lret
cmp
stc
aas
aad
call
dec
repz
push
push
jg
stos
subl
aaa
repnz
cmp
iret
lcall
out
pop
sbb
arpl
into
mov
dec
js
insb
sahf
loopne
sub
sbb
push
mov
pop
in
mov
xor
outsb
jl
pop
dec
mov
xchg
int3
mov
popf
mov
fildll
data16
std
inc
adc
sbb
cld
mov
std
decb
lea
ljmp
fmuls
icebp
sbb
add
mov
shll
mov
jb
pop
pushf
add
pop
ret
pop
fwait
addr16
pusha
xchg
jg
sti
scas
jmp
and
mov
pop
xchg
popf
mov
fildll
sbb
push
xchg
adc
fdivr
xchg
xchg
and
xchg
cmpsb
ljmp
xchg
sbb
add
mov
pop
jecxz
fsubrs
std
fldenv
or
mov
rorl
sti
adc
mov
push
pop
jl
or
pusha
or
or
ja
into
cmp
fidivl
lcall
hlt
int3
inc
pushf
into
loope
add
push
cmp
xor
aaa
xchg
popf
sahf
sbb
sbbb
inc
and
cmpsl
stos
lds
inc
stos
jbe
pop
movsb
mov
fisubrl
out
mov
sub
add
push
lcall
pop
test
popa
int3
add
cltd
enter
popa
and
and
push
push
fildll
in
fidivl
mov
in
adcl
repnz
mov
jecxz
dec
lret
xor
push
insb
mov
push
cmpsb
inc
or
mov
data16
mov
add
sub
mov
pop
mov
enter
dec
adc
repz
fmulp
adc
fs
mov
push
mov
pop
xor
mov
mov
push
mov
nop
outsb
cld
mov
fldcw
test
jo
xchg
pop
mov
fistpl
in
mov
cmpsb
sti
jmp
pop
shll
rolb
mov
rcl
mov
cmpsb
mov
lahf
imul
mov
inc
cltd
add
mov
sbb
in
jo
mov
js
mov
pop
imul
lret
jg
into
dec
push
pop
xor
addr16
mov
idivb
lret
scas
test
lods
push
mov
cmp
sbb
pop
mov
dec
pusha
push
icebp
add
movsb
mov
imul
fbstp
or
adcb
and
mov
xor
in
push
and
cli
leave
add
mov
stos
inc
btr
mov
cmpsb
cltd
mov
sar
push
cltd
mov
cwtl
jmp
fwait
lret
scas
insb
cmpsb
cmp
mov
ds
icebp
stos
bound
pop
dec
pushf
pop
xchg
pop
mov
mov
mov
sub
inc
add
cmp
fdivl
loop
lods
addr16
sbb
push
enter
sub
xchg
adc
lods
movsl
push
lcall
xorb
jne
and
cld
cmp
out
pop
jo
pop
int3
xchg
mov
cmp
jg
popf
daa
mov
jnp
scas
enter
popf
sarb
xchg
icebp
jle
testb
pop
push
out
pop
pop
lock
adc
clc
cmp
inc
addl
xchg
jo
xorb
mov
shrl
mov
and
movsl
cmp
pop
lods
int3
dec
dec
inc
iret
cmp
lock
iret
pushf
fdivs
lods
sbb
arpl
mov
inc
ljmp
loop
adc
jmp
and
stc
fcoml
add
mov
int3
nop
sar
push
mov
mov
pop
fs
aas
jbe
test
jg
xor
and
mov
or
insb
aad
xchg
lods
dec
inc
imul
cs
or
mov
xchg
inc
jbe
addb
int
imul
test
mov
xchg
mov
sbb
jmp
icebp
popl
outsb
xorb
stc
ljmp
shr
mov
cltd
cmp
stc
loope
insl
adc
shlb
int
les
out
pop
xchg
cmpsl
mov
aas
and
jle
sarl
jnp
das
jmp
mov
popf
hlt
adcb
das
dec
sbbb
cmp
push
and
adc
leave
hlt
lahf
sti
sbb
jmp
cmp
pop
scas
push
loop
and
in
outsl
movsb
jno
or
daa
addr16
cmp
roll
cmp
popf
pop
jae
test
int
test
cwtl
lret
pop
in
pop
mov
push
cmp
insl
adc
and
clc
and
fstl
imul
jb
sbb
scas
stc
or
push
sub
xchg
mov
sub
out
xchg
inc
jl
jge
dec
lahf
movsl
lea
and
in
pop
mov
mov
mov
loopne
push
add
out
dec
mov
dec
pop
out
es
push
cmpsb
hlt
and
cmp
push
movsl
addb
cmc
jo
and
mov
sub
jl
or
in
sbb
dec
mov
push
add
inc
or
lahf
test
cli
test
cmp
inc
push
dec
jns
mov
add
iret
es
mov
pop
shrb
cmp
ds
popf
pop
jle
orb
int
jge
daa
cmp
ret
jmp
mov
leave
mov
js
xor
push
mov
sub
add
add
es
mov
cmp
es
mov
hlt
incb
mov
nop
xchg
pop
or
aam
unpcklps
lahf
and
xor
mov
ss
outsl
test
xor
pop
pop
mov
pop
sbb
dec
pop
push
js
xchg
pop
inc
faddl
ja
mov
jae
lock
ja
cmpsb
es
jns
or
aam
pop
push
cmpl
daa
imul
rorl
xor
or
fbstp
loope
insb
mov
ds
shll
mov
xchg
inc
xchg
fidivl
jo
shll
adc
xor
cmp
cmp
adc
cld
clc
xchg
std
rcl
out
mov
jmp
lock
inc
repz
fistpl
aam
mov
xorl
icebp
cmp
insl
add
inc
mov
xchg
lret
stos
mov
mov
dec
inc
push
pop
inc
pop
addr16
shrl
test
in
fdivrl
sub
xlat
clc
rol
adc
outsl
ljmp
pusha
aaa
add
adc
loop
push
dec
lahf
add
repnz
xchg
push
fcoml
mov
popf
cmp
mov
mov
psllq
in
dec
mov
and
xchg
xchg
loop
dec
xor
xchg
lcall
push
shlb
inc
xchg
dec
nop
lods
cwtl
loope
dec
in
fisttpll
sbb
xorl
cld
mov
jne
xchg
daa
test
adc
push
cmpps
pop
xor
jge
insl
cmp
xor
xor
imul
or
sub
adc
mov
xor
push
mov
loope
adc
aaa
lock
mov
adc
mov
iret
xchg
ds
inc
dec
scas
test
pop
test
or
lods
mov
bnd
sub
push
test
cli
sbb
outsb
fscale
mov
mov
and
mov
adc
out
adc
call
out
pop
mov
addr16
pusha
xlat
subb
gs
or
pop
sbb
mov
jp
ficompl
aad
sbb
lahf
out
push
lcall
push
fdivrs
add
lcall
jbe
scas
inc
mov
and
loope
leave
mov
push
stos
sahf
add
cld
fimuls
dec
repz
xchg
mov
aad
add
test
mov
xchg
fld
push
in
les
test
andl
push
dec
in
out
jae
push
xor
mov
ss
mov
mov
in
mov
add
movsl
imul
repz
pop
pop
fwait
pop
test
dec
mul
in
mov
push
fmull
jno
xchg
test
lret
mov
fidivrl
lahf
pop
fsts
pop
aad
add
fsubl
popa
jmp
fisttps
in
popf
add
jecxz
in
cmp
cltd
lahf
mov
test
adc
jbe
shl
mov
dec
push
sub
xor
sub
mov
sahf
push
jge
cmpsl
repnz
insl
push
addr16
inc
mov
pushf
je
inc
jae
mov
and
jne
inc
xchg
aas
dec
adc
sub
jnp
inc
mov
push
mov
loop
add
int
mov
sti
inc
ror
pushf
adc
xlat
ljmp
push
pop
jmp
dec
loop
push
and
add
dec
inc
insl
cmp
mov
popf
push
add
jae
fmuls
fst
dec
xchg
int3
push
and
xor
mov
outsb
jno
push
inc
mov
ficomps
and
adc
testb
inc
mov
bound
xchg
sub
test
xor
in
push
loopne
into
dec
add
lods
mov
push
jecxz
dec
cmpsb
mov
out
out
sbb
arpl
push
insb
pushf
adc
mov
shl
lret
xor
add
push
mov
mov
dec
repnz
arpl
xor
xor
shrl
cmpl
clc
lds
ss
mov
ret
push
fcos
out
sbb
push
jb
jne
mov
cli
in
sbb
and
les
cs
xor
xchg
pushf
pop
mov
sub
inc
stc
push
push
nop
pop
sub
xor
sub
xorb
mov
inc
scas
sahf
movsl
loopne
jle
jge
xor
arpl
mov
lret
movsl
insl
mov
lods
adc
mov
ljmp
outsb
mov
xor
sub
sbb
xchg
mov
xlat
lods
jnp
pop
dec
out
jecxz
bound
inc
mov
sbb
js
adc
inc
push
and
scas
ret
les
dec
in
jo
xchg
insl
push
xor
pop
out
lret
lods
gs
int
inc
sub
movq
jg
inc
test
mov
movsl
popa
lds
push
dec
dec
mov
jecxz
inc
adc
push
in
sbb
cld
pop
fstpt
adc
xchg
inc
imul
adc
dec
js
pusha
jp
ror
mov
std
sbb
push
enter
or
shl
mov
jbe
pop
pop
insl
lahf
jge
into
outsb
mov
mov
jecxz
cmc
shlb
test
mov
push
sbb
jmp
aaa
prefetch
or
ret
popf
fsubr
pop
arpl
in
arpl
dec
inc
sub
inc
dec
jnp
shl
xchg
icebp
gs
mov
dec
into
out
push
mov
xchg
dec
pop
pusha
jae
or
test
jge
sub
sub
std
in
xchg
jbe
cmpsb
xor
scas
jmp
rol
lods
pushf
mov
ret
sub
xchg
sbb
into
movsl
dec
leave
push
sub
mov
sub
mov
sub
rorl
jl
sub
sub
xor
mov
pop
sahf
cwtl
pop
std
sub
rclb
ds
add
int
push
mov
aam
ror
jb
or
pop
mov
mov
ret
push
lcall
imul
ret
jo
inc
repz
xchg
negb
fistpll
jmp
pop
fimull
scas
int
jl
jne
pusha
mov
dec
aaa
in
xor
adc
cwtl
imul
inc
xor
in
jns
adc
dec
test
xor
add
loopne
pop
pop
cmpsb
adc
movsb
sub
cmp
repz
add
dec
jl
mov
pop
test
mov
jnp
sub
add
and
add
aad
cmpsb
cli
lret
fbstp
scas
xor
cs
sub
or
mov
mov
ljmp
xchg
in
add
mov
dec
out
pop
xor
insb
and
loopne
shr
adcl
cmp
sbb
xchg
out
in
xchg
inc
mov
push
mov
cmp
push
cwtl
xor
and
jbe
ss
je
popf
inc
mov
and
cmp
out
rcll
popf
inc
dec
mov
and
rorl
mov
dec
dec
adc
pop
fadds
and
add
out
mov
push
mov
pop
sbb
xor
fnstenv
in
mul
stos
andl
cmp
lods
popa
leave
push
jl
jp,pt
aaa
scas
fxch
out
fbld
shlb
pop
ss
bound
sbb
mov
mov
xor
sub
cmp
dec
nop
inc
into
jge
mov
mov
mov
out
mov
mov
inc
xchg
mov
xacquire
in
int
push
lret
cmc
das
outsl
cmc
sbb
in
xchg
or
aad
jne
in
sbb
leave
sub
push
mov
arpl
mov
mov
adc
or
jp
lock
lret
fisubl
jbe
dec
dec
or
dec
inc
pop
frstor
repnz
subb
mov
xor
jne
inc
aam
pop
push
sub
aam
je
add
inc
mov
ret
test
pop
lahf
xchg
sbb
roll
clc
cmpsb
lods
dec
loop
test
std
pop
repz
loop
inc
ja
push
push
cmpsb
movsb
lods
mov
out
mov
lds
popa
and
mov
inc
pop
dec
scas
jl
dec
and
sub
insl
cmp
ss
inc
push
in
out
push
xchg
mov
aad
rclb
inc
mov
mov
das
push
jnp
push
dec
adc
in
mov
stos
add
test
mov
cmp
mov
int
mov
enter
mov
psrlq
movsb
out
repz
jb
mov
dec
outsl
hlt
mov
cmp
pop
enter
push
jae
cmp
data16
call
mov
loop
xchg
cmpsb
into
rcl
cmc
mov
xlat
decb
sbb
mov
fcmovne
repz
xchg
push
mov
lods
frstor
fbld
pop
inc
pop
xchg
fisubrl
jnp
jae
jmp
push
push
dec
cmp
add
cmc
pop
scas
les
mov
pop
sahf
rorl
out
mov
push
shl
in
shlb
pop
in
lock
push
imul
jle
mov
mov
test
pop
sub
cmpsl
popf
fildll
icebp
int
mov
mov
sbb
cwtl
movsb
xchg
push
int3
pop
lods
lock
xchg
lahf
jae
jge
ss
fwait
add
push
mov
sbb
les
adc
ss
ljmp
cld
xor
mov
xchg
push
xchg
div
push
add
movsb
out
lea
enter
dec
fdivs
mov
clc
xchg
dec
fstpl
xchg
ficoml
fdivrs
rcrb
das
divl
add
adc
cmc
jne
or
lds
inc
cli
faddl
test
repnz
add
daa
mov
ljmp
jns
adc
lret
loopne
popf
in
pop
inc
or
jb
addr16
repz
ret
push
mov
push
sti
or
popa
shlb
shll
xor
in
or
in
add
dec
lock
cmp
add
sbb
xorb
out
xchg
cmp
stos
scas
dec
lods
jmp
outsb
mov
lock
inc
adc
fs
mov
cltd
mov
xchg
mov
jle
fwait
pop
fisttpl
xor
packsswb
or
mov
test
je
out
inc
sub
ret
cmp
jg
add
cltd
inc
ljmp
movsb
mov
clc
lret
push
and
shll
sbb
push
outsb
pop
out
or
loope
ss
mov
outsb
repz
nop
mov
mov
cmp
adc
jb
fs
std
and
sahf
push
call
pop
mov
cmpsl
and
mov
or
mov
scas
leave
mov
jl
pop
jmp
xchg
ds
fcmovnb
jle
mov
xchg
push
pop
push
js
fsubrl
xchg
stc
cmp
mov
test
repnz
lahf
icebp
add
scas
or
jns
adc
mov
cli
mov
je
adc
cmp
push
dec
cltd
cmp
cmp
xchg
dec
sbb
adc
mov
jnp
fs
shll
push
sahf
mov
je
fdivrp
add
inc
pop
or
adc
imul
scas
mov
sub
aas
stc
sbb
imulb
and
int3
inc
adc
cmp
sahf
dec
push
inc
cs
or
or
ja
inc
in
notl
inc
xor
inc
sub
add
mov
enter
sbb
fstpt
rcll
lcall
mov
jecxz
sbb
lret
insl
imul
xor
jnp
cmpl
mov
adc
xor
sarb
add
lidtl
jl
or
jbe
pushf
aas
in
test
imul
data16
or
lods
aas
lahf
pop
test
pop
scas
inc
mov
xchg
pop
push
and
nop
arpl
div
push
aaa
cli
dec
xor
sub
and
and
cmp
scas
lods
nop
pop
outsl
mov
mov
xchg
scas
xchg
pop
lock
jp
xchg
mov
jge
lret
rolb
xor
adc
adc
or
iret
and
imul
call
pop
data16
imul
mov
fwait
jae
shrl
ds
add
pushf
dec
ret
jb
roll
pop
shrb
lea
movsl
cmp
pop
incb
adc
les
clc
test
test
cmpsb
xchg
cli
or
jmp
or
jp
dec
add
and
into
test
mov
inc
das
sbb
push
stc
mov
mov
daa
fdivrp
filds
cmp
divl
fistpl
mov
jl
outsl
mov
test
pop
ljmp
in
mov
mov
or
icebp
mov
mov
jmp
ficoml
cmp
leave
lret
lret
or
adc
fdiv
movsw
xlat
cmp
lret
jl
dec
incl
sub
stos
outsl
add
jbe
cmp
stos
push
out
xor
and
es
test
cmp
lret
fwait
call
and
mov
jl
push
xchg
or
loopne
arpl
insl
cmc
loopne
inc
jbe
add
mov
ds
mov
pop
aas
cmc
xchg
xor
or
xor
xchg
and
mov
xchg
pop
xchg
scas
or
scas
xchg
scas
inc
outsb
test
ljmp
add
fs
and
jae
cmc
xor
dec
call
push
repz
mov
daa
adcl
std
scas
mov
lcall
pop
push
push
pop
aam
call
fsubs
ja
movsl
mov
sti
jge
jg
dec
lahf
adc
push
xchg
mov
push
mov
ss
test
movsb
loope
add
mov
jmp
clc
jno
cwtl
jne
jg
pop
push
add
pusha
std
sahf
sbb
push
dec
pusha
inc
bound
push
pusha
outsb
scas
mov
inc
gs
neg
xor
dec
stos
out
lock
cli
add
xor
lock
inc
cmpsl
lods
movsb
jnp
and
inc
fadd
out
xor
mov
and
dec
jp
jmp
into
jbe
or
sub
pop
adc
mov
gs
jae
mov
fldenv
aaa
mov
stos
idivb
sti
mov
inc
mov
scas
mov
hlt
ret
jmp
leave
sbb
cmp
mov
add
xchg
jns
in
jl
sbb
popf
mov
lods
sbb
out
pop
leave
lahf
fildll
mov
pusha
ljmp
test
frstor
fbstp
test
aad
scas
sub
repnz
negb
mov
xchg
int3
jo
lahf
dec
fiaddl
xchg
cld
cmp
cmpl
gs
ja
mov
cli
subl
xchg
sarl
ja
inc
lods
cmp
jge
sbb
lahf
adc
mov
cwtl
push
add
xor
outsl
push
cmp
lret
clts
jmp
cmp
lret
outsb
aad
xor
adcb
dec
inc
adc
imul
or
sahf
adc
push
push
loopw
add
dec
sbb
dec
int
loope
mov
jae
pusha
or
xchg
mov
pusha
jle
jae
mov
gs
fisubs
int
sbb
pop
loope
adc
pop
xchg
popf
pop
fnstsw
xor
dec
div
inc
xor
xchg
aad
jecxz
out
flds
or
outsl
or
cmp
mov
inc
jg
and
in
test
jl
xchg
push
sbb
ret
data16
clc
stos
lds
cld
nop
mov
add
add
add
sbb
add
mov
outsb
jo
rolb
mov
push
outsl
mov
or
mov
sahf
mov
jno
pop
dec
pop
cmp
mov
or
test
add
jmp
and
nop
inc
lret
push
frndint
mov
push
mov
jno
mov
jl
mov
mov
shr
sbbb
pusha
cwtl
jecxz
js
xchg
ja
ficoml
ljmp
jge
js
adc
pop
out
lock
loope
lcall
and
dec
xchg
leave
lret
adc
filds
pop
es
push
shrb
sbb
jae
in
sub
fs
addl
iret
mov
sbb
ret
fldt
mov
mov
aaa
pushf
dec
jnp
pop
inc
mov
xchg
arpl
cmp
push
pop
rcrl
into
or
mov
xor
cmp
dec
jmp
push
loopne
mov
fnstsw
in
jmp
movl
pop
and
xor
fwait
and
fsubl
mov
call
fwait
mov
cmp
repnz
xor
lds
pop
cmp
icebp
fwait
bound
push
mov
add
inc
push
or
aaa
call
into
ss
pop
xchg
lods
jmp
ja
and
mov
cmpsb
jmp
jmp
push
andb
mov
shlb
xor
arpl
test
or
clc
sub
sahf
fdivs
scas
jmp
mov
inc
test
mov
sub
mov
frstor
and
push
fs
mov
jp
mov
dec
in
jb
stos
add
xorb
cwtl
lret
cmpsb
push
fdivl
mov
dec
pop
push
inc
negb
pop
cltd
sub
inc
adc
clc
xor
dec
cmp
pop
xchg
jle
dec
repz
in
out
fwait
push
or
jae
lret
outsl
test
dec
outsl
imul
mov
add
aas
push
ss
popf
call
sbb
jne
rorl
int
das
inc
imul
mov
xchg
sub
test
scas
jns
repz
rcll
inc
and
xchg
ret
push
loopne
push
add
dec
add
push
pop
loope
mov
outsl
out
push
dec
rcrl
xchg
popf
sbb
jo
inc
and
jmp
or
mov
push
adc
mov
cmp
xor
jle
pop
sbb
adc
adc
xchg
cli
mov
mov
ret
xchg
jg
inc
insb
and
jge
repnz
mov
mov
sbb
fnop
mov
add
mov
test
cmp
sti
dec
test
adc
clc
add
fidivrl
add
sbb
cld
subl
popf
sti
add
dec
xor
xchg
sbb
cmp
mov
sbbb
dec
sbb
testb
push
cmp
ja
aad
inc
shlb
mov
push
cli
ret
jne
add
scas
dec
cmp
push
out
xchg
pop
scas
mov
ret
xor
add
mov
and
insl
push
push
mov
adcl
inc
cmpsb
aad
inc
add
mov
fmulp
imul
push
fcoml
adc
xor
xchg
nop
dec
das
jne
add
outsb
inc
inc
mov
repnz
sahf
stc
xchg
add
dec
mov
lods
or
clc
mov
das
mov
xor
imul
inc
movl
or
push
mov
jle
and
nop
stc
xor
sbb
pushf
rol
adc
cmpsl
add
ud1
test
lea
out
clc
and
xor
mov
jae
sbb
pop
xchg
jo
cld
xor
into
adc
test
sub
sbb
rcrl
mov
cmp
lahf
fs
ljmp
cwtl
jle
lods
mov
pop
cmc
inc
sbb
push
lods
inc
scas
movsb
addr16
cmp
mov
cs
and
pop
lahf
mov
rolb
stc
dec
int3
aad
iret
test
sbb
inc
andl
or
xor
sbb
mov
out
adc
fwait
xor
mov
xor
dec
push
push
inc
ret
xchg
xchg
inc
and
mov
jmp
pop
fdivrl
enter
test
ds
xchg
xor
mov
inc
fildl
mov
outsl
mov
dec
and
in
cmp
xor
push
add
das
lret
fstps
jp
lods
mov
movsb
pop
je
clc
sub
js
jl
cmp
scas
jno
cmp
add
filds
clc
loope
sub
jle
hlt
and
dec
add
outsb
xorb
cmc
std
mov
pop
shrl
sbb
push
cld
movsb
arpl
lods
dec
clc
jne
arpl
aaa
inc
jo
outsl
fidivrs
adc
xlat
loopne
pop
imul
or
cltd
ljmp
lahf
jne
in
clc
pop
repz
add
out
ljmp
fistps
repnz
mov
adc
xchg
jb
mov
and
int3
push
add
xchg
mov
les
jae
daa
in
negl
pop
iret
push
stos
push
inc
push
ret
dec
sti
sub
mov
movsl
and
in
pushf
adc
pop
dec
push
std
call
outsl
shll
xor
repz
xchg
stc
cmp
sub
adc
push
pop
pop
cmc
aaa
divl
adc
push
mov
pop
fldl
shll
lret
mov
inc
dec
scas
xor
pop
les
inc
fidivs
js
jne
push
jae
ret
inc
inc
lcall
add
aaa
adc
aad
cltd
jecxz
or
test
mov
mov
jmp
push
mov
adcl
aas
lcall
inc
jg
icebp
xor
jecxz
aaa
out
xor
outsl
sub
repnz
push
les
cwtl
jmp
dec
fildll
sbbb
adc
leave
dec
inc
mov
insl
cmpsb
insb
add
in
sbb
dec
lds
lock
pop
in
xchg
stos
mov
jnp
lea
rorl
inc
pop
jb
inc
mov
js
xchg
pop
pop
loopne
sub
xchg
mov
cmc
mov
loope
xor
jmp
dec
and
cli
push
aas
pop
mov
cmpsl
jne
in
and
es
lret
shl
add
iret
pop
or
cmp
insb
jae
and
jnp
push
push
loope
push
fldenv
push
fisttpll
dec
pushf
adc
and
sub
mov
dec
shrl
inc
cmp
pop
lret
jb
lret
jbe
fs
push
mov
cmc
fwait
inc
xchg
loop
dec
inc
pop
ss
popf
ljmp
pop
push
inc
sbb
dec
add
fildll
out
push
out
fs
sub
repnz
push
sub
cmpsb
daa
stos
pop
inc
es
cli
cmp
shl
add
iret
add
aam
xchg
adc
clc
dec
sub
add
stos
push
fsubrl
mov
cmp
in
and
ret
mov
mov
in
xchg
fiadds
mov
lret
xor
dec
push
enter
sarl
fbld
and
or
dec
out
pop
mov
lret
pop
cmp
sahf
bound
pop
sbb
xlat
xchg
mov
adc
adc
or
pop
cmp
inc
sbb
shll
fmuls
fildl
mov
cs
mov
xchg
inc
xor
sbb
push
push
dec
add
lcall
sar
add
pop
nop
lret
invlpg
pop
fmul
cwtl
xor
insl
loope
les
add
notl
sarl
jo
or
enter
or
xchg
shll
mov
cmp
arpl
sahf
ja
jg
and
jbe
pushf
hlt
inc
std
rorb
xchg
stos
cwtl
repz
push
xlat
mov
leave
and
bound
test
mov
bound
cwtl
jl
cmp
aaa
enter
jmp
mov
lods
xchg
xchg
xor
cld
cmp
lock
ret
stos
xor
push
movsl
jb
jbe
adc
fiaddl
lret
ret
xchg
jo
orl
push
xchg
lahf
sti
rclb
cmpsl
leave
sar
mov
adc
xchg
cltd
enter
cmpsb
or
jno
lds
sbb
jns
negb
inc
movsl
xchg
sbb
xchg
insb
and
cmp
dec
call
std
mov
mov
xchg
repz
pop
mov
mov
adc
in
movsl
and
sub
lods
fisubrs
push
sbb
xchg
loope
push
add
push
pop
shrl
movsb
pop
leave
repnz
cmc
std
mov
ja
xchg
int
mov
iret
pop
xchg
lahf
leave
push
pop
push
inc
xchg
mov
sbbl
inc
mov
scas
sbb
cmp
inc
mov
std
fimull
pushf
push
adc
inc
sti
call
dec
and
mov
mov
or
fcmove
dec
sti
pop
aad
stc
jae
pop
add
adc
aam
dec
add
xchg
dec
jno
xchg
push
push
ss
fisttpl
sub
enter
lret
movsl
mov
mov
aas
sbb
ja
lahf
notl
sub
loopne
int
fidivrs
pop
pop
mov
fucom
inc
push
fwait
jmp
sti
xlat
mov
jmp
mov
int3
push
mov
push
int
sbb
dec
jg
jg
fwait
cmp
adc
adc
pop
mov
imulb
movsb
aas
or
and
lret
jg
and
or
dec
pop
faddl
mov
aaa
lds
js
xchg
stos
fldlg2
inc
lea
aas
lcall
push
mov
aaa
sbb
xlat
clc
in
jle
dec
fistps
cltd
sarb
sbbb
mov
sub
sub
pushf
loop
cmpsl
dec
mov
testb
push
push
pop
out
xchg
jg
jne
outsl
test
in
add
mov
shll
mov
ret
idivl
int3
sub
inc
arpl
in
mov
inc
xchg
daa
dec
mov
adc
cmp
push
cs
out
mov
outsl
scas
cli
inc
sub
loop
jl
jo
pop
mov
mov
idivl
orl
out
test
pop
leave
into
jmp
sub
pop
subb
jae
push
mov
pop
sub
mov
sar
add
lds
xor
out
mov
pop
js
push
xor
jecxz
add
xchg
orl
subb
lock
notl
xor
dec
adc
jge
inc
pushf
sub
sub
out
or
xor
jl
orb
outsl
or
xchg
pusha
lods
push
add
add
scas
dec
push
sub
mov
cli
xchg
jl
xchg
dec
negb
js
sbb
or
call
bound
mov
inc
xor
jg
fisubrs
xlat
pop
mov
fldenv
adc
aaa
push
sub
xchg
les
xchg
sbb
mov
add
cwtl
or
mov
mov
out
nop
icebp
ja
push
push
push
inc
xor
aas
testl
rcrl
aad
ret
aad
out
test
lret
loop
jns
mov
sub
shll
andl
stc
leave
pusha
daa
lret
stos
xlat
fisubs
dec
jge
mov
cmc
pop
ljmp
jge
and
sahf
cmp
sbb
mov
jle
lods
mov
outsb
xchg
mov
sbb
mov
aaa
aas
sbb
mov
pop
rcrb
popf
dec
jbe
pop
inc
fnstenv
hlt
ror
cmpsb
in
push
sbb
call
xchg
lcall
fbld
sub
mov
aam
aaa
scas
inc
fsubl
inc
int
jp
mov
fwait
roll
cmp
jns
test
ret
sub
dec
add
cli
cwtl
stos
mov
outsb
xchg
sbb
loopne
stc
cld
xor
xchg
cmp
faddp
and
mov
in
test
jmp
add
mov
mov
mov
test
in
mov
cmpsb
in
mov
sbb
sub
jle
mov
or
cmpsl
ret
mov
mov
inc
call
mov
jg
xchg
push
mov
stc
cmc
push
in
and
je
mov
popa
out
mov
adc
or
pop
call
pop
es
popa
je
lods
xchg
pop
insb
mov
jle
out
cmp
out
dec
mov
ja
cs
cmc
shrl
jg
mov
lods
dec
test
sub
jns
loop
std
fs
std
mov
push
cmp
insl
inc
and
jo
popa
xchg
mov
inc
daa
xor
hlt
cmp
adc
dec
imul
pushf
xor
cmpsl
stos
fsubs
test
mov
push
sub
cli
or
insb
lods
push
pusha
or
dec
test
push
pop
lcall
sub
in
fimull
cmp
add
out
push
mov
sbb
aam
movsl
cwtl
adc
js
jmp
inc
adc
pop
sbb
in
ja
rcrb
test
xchg
xor
sbb
int
nop
lds
and
xor
jp
push
insl
fwait
out
sbb
in
aad
outsb
div
mov
add
cmpsb
int3
je
loopne
nop
into
mov
or
lods
add
dec
jb
test
pop
mov
shlb
outsl
push
out
movsl
mov
lcall
inc
nop
sbb
and
mov
pushf
jnp
ret
loop
clc
sbb
into
inc
pop
pop
sbb
xchg
stos
and
fcomip
arpl
aad
inc
jle
or
clc
xchg
xchg
push
loope
sbb
and
and
hlt
and
loopne
push
push
mov
outsb
sbb
test
outsl
adc
mov
mov
and
fistps
or
iret
and
cld
ljmp
lea
pop
iret
out
loop
jmp
fcoms
xor
sub
mov
jbe
arpl
je
jmp
repnz
bound
dec
xor
cmp
fsubrl
mov
or
inc
xor
incl
rol
jbe
nop
shl
mov
sub
test
sbb
unpckhps
inc
js
jmp
inc
test
stos
shlb
js
inc
xchg
mov
xchg
xor
mov
or
clc
repz
mov
test
mov
jnp
sub
cmpsb
mov
nop
adc
push
dec
xchg
sub
sbb
fmul
xchg
rolb
sbb
adcb
lock
ljmp
das
clc
xchg
cli
insb
mov
or
push
xor
push
pop
outsl
or
push
ljmp
inc
lret
pop
mov
jno
xor
int3
ret
scas
jbe
es
std
insb
cmp
mov
ja
inc
lock
xchg
shrb
dec
cli
stos
add
dec
or
mov
add
mov
andl
popa
aaa
jo
jecxz
testl
lret
std
mov
in
test
cmpsl
dec
xchg
pop
jae
je
scas
shlb
xchg
or
cwtl
shrl
pop
adc
sub
pop
dec
stos
rcrb
fadds
ret
jecxz
lods
add
cli
loop
dec
pop
mov
cmp
call
mov
adc
cltd
scas
mov
ja
push
mov
orb
pop
int
in
push
into
mov
push
sbb
cmpsb
arpl
dec
int
jp
push
cmpsb
bound
int3
orb
imul
inc
pop
fimull
nop
adc
add
pop
sub
ret
bound
sbb
repz
sarl
pop
jb
dec
into
push
sub
nop
js
pop
leave
pop
add
push
and
and
jp
lods
dec
cli
xchg
sub
sbbl
pop
inc
cld
and
push
inc
xor
cltd
enter
mov
loop
neg
movsl
shr
aam
stos
add
sbb
test
pop
cmp
shrl
inc
rcll
mov
aas
adc
and
jmp
push
xchg
scas
out
push
sbbl
lret
inc
or
shll
into
pushf
cmp
dec
int3
scas
sbb
imul
repz
ret
nop
popa
std
lret
xchg
fidivrs
shlb
xchg
push
out
pop
nop
fldt
xor
ja
or
adc
cmpsl
movsb
push
out
hlt
push
mov
xchg
pop
movsb
sbb
sti
and
inc
xchg
pop
adc
xlat
iret
push
mov
sahf
test
inc
inc
les
out
adc
daa
dec
dec
test
sub
sarl
or
mov
ret
inc
jbe
ljmp
pop
xor
dec
jecxz
inc
icebp
out
xor
pop
fmul
cltd
sub
sub
cld
jmp
shl
pop
loope
inc
xchg
mov
rclb
jl
mov
imul
adc
fisubs
loopne
popf
jle
pop
lods
scas
sbb
xchg
mov
xchg
jp
xor
int3
pop
pop
ret
pop
cmpb
sbb
daa
ret
inc
pop
dec
lock
jb
jno
xchg
xchg
es
push
outsb
test
sahf
arpl
imul
lahf
out
stc
repz
mov
mov
cwtl
mov
arpl
pop
jb
mov
lds
test
mov
scas
test
push
adc
mov
pop
mov
pop
cwtl
cmpsb
inc
push
aaa
adc
popf
aas
xchg
sub
dec
jno
jle
cwtl
lret
cwtl
dec
cmp
xchg
lods
aam
jmp
or
out
and
and
jmp
in
xlat
inc
lret
xor
pop
rcll
pop
enter
sbb
cmp
in
mov
ja
sub
jle
popf
lods
push
mov
out
jmp
sub
scas
mov
mov
mov
cmp
inc
mov
mov
lds
movsl
fs
sbb
cmpsl
push
push
xchg
js
mov
xchg
subl
sbb
pop
inc
adc
out
stc
xchg
mov
mov
je
sub
in
cli
imul
lods
mov
sub
fmuls
aam
sbb
sbbl
and
xchg
and
and
xor
addb
mov
outsl
pushf
xor
xor
movsl
push
dec
hlt
sub
leave
popf
jle
fcompl
mov
mov
fld
cmp
mov
fidivrs
or
shll
cmc
or
mov
dec
lcall
push
mov
addl
fldcw
pop
adc
pusha
jg
in
or
mov
popf
lea
cltd
mov
lcall
daa
inc
jne
mov
rcrl
js
mov
cmpsl
pop
xchg
aaa
out
xorl
rorb
push
les
cmp
popa
test
mov
test
cmpl
pushf
add
jl
lock
pusha
sbb
das
mov
push
cmp
sub
out
mov
fldcw
shl
ja
adc
arpl
scas
dec
sar
scas
mov
mov
dec
xor
mov
pusha
enter
pusha
mov
xchg
aas
cmp
xchg
out
dec
and
adc
sub
dec
mov
xchg
cmp
test
xor
orl
cmpsb
int
lahf
adc
dec
xchg
ds
lds
rcrb
popa
cmc
push
add
jle
adc
rorl
scas
sub
std
ds
push
inc
imul
sub
jecxz
and
lods
pop
pop
repz
shrl
fcompl
hlt
mov
enter
jbe
push
and
xor
fwait
mov
fidivs
xchg
xchg
sub
xchg
push
mov
cmpsl
das
adc
mov
pop
push
repz
in
xchg
jne
pusha
in
sbb
add
xor
out
dec
icebp
add
mov
cmpl
lret
push
arpl
and
mov
inc
cltd
outsl
fs
cld
cs
dec
test
nop
outsb
push
dec
cmp
push
stos
add
stos
clc
xor
mov
mov
nop
add
push
add
mov
aas
mov
popf
lret
decb
fbld
bound
insl
lds
dec
xor
dec
insl
out
mov
jb
mov
mov
idivl
bound
and
movsb
in
icebp
or
mov
lea
lods
jb
pop
push
jbe
in
mov
repnz
push
cmpsb
mov
insb
leave
insb
lret
push
pop
pusha
out
aad
fmulp
push
fisttpll
das
stos
in
aam
mov
pushf
pop
inc
scas
jnp
cmp
xor
sti
clc
mov
nop
shll
cmp
int
mov
push
orb
lahf
es
sub
icebp
pusha
mov
jo
call
cs
out
fmull
cmp
pop
pop
and
dec
jae
cld
or
pop
cmp
movsb
scas
cmc
int
out
sbb
leave
call
inc
dec
add
sub
xor
loop
jae
or
es
mov
inc
rorb
into
sub
scas
add
hlt
andb
lods
insb
or
ljmp
lds
add
or
or
aad
cmp
out
repnz
mov
aam
in
inc
mov
cmpsb
mov
cmc
jnp
scas
fnstsw
jae
lret
pop
cmp
into
outsb
sub
adc
and
call
pop
and
lret
imul
sbb
ds
stos
inc
xchg
stos
lds
std
add
and
icebp
cltd
push
scas
pusha
jbe
or
pop
mov
mov
cs
daa
out
push
jno
pop
push
loope
adc
adc
cmp
and
add
ret
lock
imulb
dec
sahf
xchg
xchg
es
jge
push
push
dec
xor
in
out
lock
mov
xchg
and
pop
jb
ljmp
xor
lock
dec
xchg
and
xor
imulb
push
adc
fcoml
hlt
push
mov
test
add
cmpsb
cmp
aam
sub
stos
jmp
xor
sarl
or
dec
push
sub
aas
dec
push
rolb
sbb
aas
outsb
insb
loope
fsubs
add
dec
fldenv
aas
fadd
push
pop
mov
mov
sbb
lock
aaa
leave
stc
outsb
or
fiaddl
lds
or
jb
icebp
jo,pn
sbb
stc
sbb
xchg
xor
pushf
outsl
mov
inc
ja
and
add
andl
rcl
sub
insb
pop
lcall
in
jecxz
clc
addl
xchg
jl
xlat
fsubrl
ljmp
inc
pop
or
cmp
fdecstp
adc
ja
in
jle
roll
repnz
enter
pop
add
cwtl
jae
inc
add
xor
inc
or
jge
mov
mov
rcrb
xor
movsb
lcall
stos
jnp
dec
test
leave
mov
negb
add
sub
jle
mov
push
mov
jae
cmpl
rorb
and
mov
fstpl
pop
push
push
gs
xor
jo
add
adc
shll
or
or
out
stc
stc
mov
imul
xchg
jecxz
jg
lock
push
jno
jbe
out
cwtd
mov
pop
jl
adc
es
das
adc
fistps
mov
mov
aaa
fsts
jne
es
push
icebp
lret
js
mov
mov
adc
push
add
sbb
add
cli
ds
shr
jp
xor
pushf
lcall
sbb
xlat
aaa
fisubrl
and
iret
cmp
gs
ss
mull
or
xchg
dec
stc
imul
mov
dec
sbb
rcrb
lret
push
les
xchg
mov
xchg
daa
pop
nop
dec
push
mov
std
clc
cmc
jge
jecxz
jns
clc
std
inc
loope
mov
push
sbb
mov
sub
jnp
flds
push
shl
lahf
jnp,pn
dec
lret
mov
lock
mov
roll
and
and
cmp
pop
xor
adc
cmp
adc
mov
rcrl
leave
xchg
sbb
or
mov
jne
jo
fwait
inc
mov
pop
jge
or
lock
mov
leave
subb
out
imul
mov
repz
insl
mov
ffreep
sub
sbb
fadds
cmp
pandn
das
mov
shl
out
fcmovb
enter
scas
rclb
rol
jo
jle
xor
pushl
addl
cmc
sbb
fidivl
data16
mov
aad
iret
adc
lods
and
or
test
jle
test
cmp
xchg
jno
xchg
aaa
movsl
stc
jg
ds
ret
xchg
pop
xchg
push
outsl
aad
inc
mov
repnz
popa
test
fildl
push
xor
adc
push
push
push
sbb
sahf
mull
lods
pusha
xor
sbb
in
sahf
les
inc
out
lret
cld
sub
xor
xor
mov
shlb
lds
rclb
fidivrs
xchg
dec
into
jg
daa
or
xchg
int
push
data16
and
pushf
js
cmp
ficompl
push
iret
pop
adc
inc
dec
paddb
mov
sub
sub
lcall
ret
ds
lea
scas
subl
mov
sbb
fldcw
xchg
jl
lret
insl
std
sub
jne
sub
js
inc
int
adc
ror
movsl
scas
std
dec
push
cmpsl
rcrl
and
shll
inc
test
aas
test
or
filds
insl
xor
push
push
jecxz
aam
aam
push
fwait
daa
jo
pop
mov
test
mov
fisttpl
cmc
jecxz
mov
in
and
mov
rorb
xchg
jb
mov
and
rorb
lahf
mov
in
aad
sub
addb
dec
ret
aas
in
xor
and
in
popf
xchg
and
lret
lods
fs
inc
dec
cmpsb
xchg
out
sub
lods
imul
pop
jl
mov
jne
pop
or
push
pop
xor
mov
arpl
xor
pop
arpl
fldl
stos
lcall
and
loope
out
leave
mov
sbb
mov
xor
mov
sbb
in
fildll
fwait
movsb
xor
sarl
pop
xor
jle
aas
xchg
xor
lcall
fs
mov
push
les
iret
in
aaa
nop
cmpsb
jecxz
sbb
popa
push
into
fdivp
jo
or
adc
mov
or
sub
fwait
roll
orl
test
mov
shr
jo
xchg
sbb
test
or
mov
ret
mov
mov
sub
jl
in
roll
ss
cmpl
pop
xchg
loop
dec
pop
xor
mov
scas
mov
cmp
ret
mov
add
scas
push
xchg
inc
pusha
cmp
or
daa
dec
push
cmp
or
jb
fiaddl
shrb
or
jecxz
scas
enter
out
call
mov
inc
mov
insb
ret
movsb
hlt
aaa
push
shll
nop
loop
adc
stos
fiaddl
xlat
pop
mov
jle
jno
mov
push
inc
add
aas
pop
outsb
and
test
and
xor
fistpl
sbb
sub
sbb
lretw
lods
mull
insb
or
jecxz
cmpsb
jle
ljmp
pop
ret
xchg
adc
hlt
lock
lock
jo
inc
lea
clc
pop
ljmp
and
and
out
jno
mov
sbb
ljmp
lahf
xchg
stos
sahf
dec
sub
jb
das
inc
push
cli
mov
lret
mov
ret
cltd
aam
dec
mov
fildll
cmp
divl
ret
jecxz
push
and
je
mov
lds
mov
in
fdivrs
adc
fdivs
or
ret
xor
out
aam
out
pop
and
mov
jl
out
shl
pop
inc
out
rep
addr16
pop
add
mov
or
fisttpll
in
divb
inc
push
repz
cmp
ffreep
sbb
stos
cmp
xor
push
mov
pop
push
xor
rcrb
mov
push
inc
mov
int
cwtl
stc
jno
sub
fldl
jp
and
aas
and
push
mov
scas
aad
mov
outsb
xorl
daa
loopne
stos
in
ds
jae
bound
xlat
hlt
sahf
pop
jnp
jmp
insb
sub
jmp
push
inc
mov
xchg
movq
mov
mov
mov
or
hlt
dec
das
ljmp
mov
pushf
jo
shlb
jae
fistps
daa
sti
add
add
xor
xor
clc
xor
je
lret
inc
add
xchg
shrb
mov
jnp
lea
mov
aad
test
cmp
in
mov
inc
clc
fucom
jecxz
out
fildll
pop
add
dec
and
shll
loopne
adc
shlb
pop
roll
add
mov
rcrl
add
sub
pop
mov
xchg
jl
xchg
fcoms
xchg
pusha
iret
repnz
xchg
cmp
mov
adc
add
ret
mov
dec
xchg
stos
mov
cmp
sahf
jl
push
dec
pop
push
jnp
mov
dec
jns
xorl
sbb
push
insl
push
and
xchg
add
ds
dec
rcll
rolb
or
mov
push
out
in
shl
lds
jecxz
push
push
rcr
pop
add
pushf
jne
add
out
push
xchg
push
or
cwtl
add
aad
aas
and
push
pop
pop
push
adc
int3
mov
xor
sarb
mov
xor
mov
int
xchg
sarl
mov
jns
aas
stos
loop
push
push
dec
xorb
lods
or
rcrl
jmp
out
movsb
ds
mov
mov
inc
cli
and
ss
mov
xor
sub
das
dec
xor
orl
call
mov
loope
fisubl
ljmp
mov
mov
cmc
push
jmp
pop
fcmovnb
je
es
in
jb
test
cld
xor
sti
adcb
daa
test
xchg
mov
lds
xchg
dec
xor
in
xor
imul
aaa
push
push
outsl
dec
mov
cmp
insb
push
bound
outsl
ja
pop
pushf
addr16
orl
xor
outsl
aad
or
xchg
icebp
xorl
aam
jo
inc
sbb
in
sbb
mov
adc
and
xchg
pushf
sub
leave
mov
imul
lcall
xor
pusha
mov
mov
push
mov
aas
jo
mov
popf
aad
and
call
mov
divl
mov
push
clc
bnd
push
push
xchg
mov
arpl
outsl
andl
repnz
jp
ror
orl
pop
rcrl
pop
push
ja
push
add
popf
sub
sbb
sti
xchg
add
popf
rcll
stc
jecxz
sbb
addr16
iret
sbb
push
iret
or
cs
sbb
sahf
push
and
notl
fs
test
pop
push
push
push
out
lods
xor
aam
dec
andl
push
and
dec
popa
jo
mov
pop
cwtl
in
out
mov
fadds
repz
push
mov
lcall
mov
sub
mov
fmuls
mov
inc
nop
mov
push
mov
loope
jnp
rorb
xor
psubsw
jg
ror
xor
insb
jnp
jo
jb
dec
scas
inc
pop
pushf
sub
sahf
clc
xchg
call
xchg
lds
das
cmc
rclb
mov
cmp
mov
add
mov
jne
cld
mov
xor
enter
sarb
adc
cwtl
adc
mov
push
cli
iret
jns
adc
or
jns
and
stos
data16
mov
push
sub
xor
xchg
cmp
int3
adc
xchg
and
adc
pushf
jb
mov
leave
es
movsb
jo
dec
in
mov
lahf
cwtl
stc
xchg
cmp
xchg
fsubs
insb
fst
cmp
inc
xchg
jbe
adc
or
nop
repnz
fdivs
or
je
test
ret
or
cmp
push
lahf
cli
test
lods
cmp
xor
xlat
inc
cmp
nop
out
pop
cltd
pop
in
pop
adc
int
mov
or
orl
imul
and
adc
sbb
mov
mov
in
jp
scas
mov
jbe
sub
movsl
out
cld
add
or
sarb
mov
data16
sub
scas
aam
xchg
pusha
shr
jecxz
and
push
lret
aaa
mov
ret
repnz
cmp
pop
outsb
and
adc
mov
and
insb
mov
push
xlat
inc
mov
rorl
enter
mov
sub
pop
inc
les
aad
and
gs
push
stos
mov
mov
add
xchg
arpl
push
sarl
push
bound
add
jp
sbb
repz
or
or
hlt
add
sbb
scas
jge
add
push
mov
bound
mov
test
lea
inc
lea
sbb
movsl
pop
les
push
mov
rorl
mov
lret
mov
orb
repnz
dec
dec
popf
pop
aad
push
and
test
stos
in
scas
cmpsl
cmpl
dec
mov
pop
sub
subb
cltd
mov
mov
mov
mov
mov
loopne
nop
fwait
ja
inc
sub
mov
outsl
sar
xchg
loop,pt
sbbb
into
jb
dec
lds
jl
adc
lret
call
sbb
out
or
popf
push
or
std
mov
ret
in
sar
notl
stos
add
addr16
cmp
imul
jle
xor
adc
sbb
out
outsb
fidivl
lods
xor
ljmp
in
mov
lret
pushf
ret
jne
cmp
add
xchg
lds
repz
movsl
outsl
dec
ret
mov
popa
insl
mov
push
or
sti
or
xchg
jno
push
sbb
rorb
push
gs
inc
cmp
in
outsb
out
mov
loopne
mov
pop
lret
nop
roll
and
push
xor
xchg
mov
mov
cwtl
mov
dec
pop
sub
xlat
test
lcall
pop
or
pop
xor
mov
icebp
popf
inc
mov
push
fildl
mov
sti
push
xchg
lock
roll
dec
fstpt
or
or
xor
ja
xor
psraw
pop
repnz
xor
pusha
lods
shr
xchg
jae
xorl
mov
es
mov
ja
stos
nop
sub
mov
inc
hlt
inc
mov
les
out
out
sbb
aad
inc
or
sub
sbb
jnp
movsl
loopne
out
or
mov
xchg
or
loope
inc
lods
mov
orl
jo
xor
enter
in
data16
sbb
into
add
pop
pop
subl
data16
shrl
ljmp
cmp
or
xchg
in
mov
lods
sbb
sarl
cli
fwait
mov
mov
push
and
lods
xor
repz
or
mov
imul
lds
int3
push
mov
sahf
add
or
cmp
add
nop
and
dec
adc
cmp
push
leave
std
sahf
test
movsl
mov
mov
inc
pop
loope
xchg
adc
xchg
and
in
inc
div
leave
jmp
lahf
mov
enter
sbb
out
ret
mov
and
cmpsb
testb
inc
jg
inc
in
hlt
loopne
mov
xchg
inc
fwait
or
in
mov
bound
mov
test
ljmp
fmull
jecxz
or
xchg
pop
xchg
xchg
into
pushf
mov
out
lahf
es
dec
jns
imul
jle
cmp
cmp
pop
mov
jno
mov
xor
inc
cs
std
push
addr16
repnz
fstps
call
aad
xor
imul
mov
jbe
sbb
bound
jmp
push
int3
xchg
cmp
xor
pop
push
inc
cmc
push
mov
lahf
lahf
fiadds
cwtl
cmp
inc
cmp
inc
fcomp
ja
in
divb
test
or
pop
sbb
xor
idiv
or
popa
rcl
ljmp
mov
outsb
adc
subb
data16
stos
sarl
sbb
outsl
cld
std
xchg
xchg
arpl
aad
cwtl
cmp
dec
add
mov
dec
jbe
movsl
lods
pop
scas
outsb
add
sbb
adc
in
bound
mov
pop
into
add
call
xor
ljmp
mov
inc
cmc
aas
mov
lret
repz
pop
adc
dec
das
inc
imul
add
icebp
lock
cmp
divb
enter
popa
les
mov
push
aam
add
fs
or
inc
sti
mov
scas
mov
sarb
mov
xlat
mov
mov
lods
in
or
dec
pop
mov
pop
sub
lret
andb
cmpl
inc
dec
movsb
or
popa
mov
mov
outsb
hlt
jb
push
xchg
stos
xor
or
sub
jne
mov
jp
js
add
lock
add
adc
iret
or
sarl
dec
leave
mov
push
loopne
dec
or
sub
es
sub
into
int
sub
testb
inc
fldl
sbb
xchg
sub
pop
sbb
outsb
cmp
mov
pop
pop
movsb
iret
push
mov
sbb
add
shll
xor
mov
int3
pop
out
push
sahf
mov
jo
adcb
icebp
jae
cmpsl
lret
gs
push
xchg
insb
fmull
adc
pusha
xor
adc
flds
test
ffree
movl
testb
and
stc
popa
icebp
pop
adc
stc
pop
negb
popf
mov
add
push
sbb
in
pop
in
mov
cmp
call
or
shlb
mov
insl
mov
stos
jp
cmp
pop
rcr
and
mov
push
and
fidivrs
outsb
pushl
push
in
xchg
sarb
mov
inc
adc
in
stos
hlt
sbb
inc
cmp
rorb
in
rol
fstl
in
test
in
pop
mov
pop
loope
in
inc
inc
outsl
scas
mov
bound
repnz
pop
cltd
andl
adc
push
or
jnp
daa
clc
inc
out
lods
daa
pop
test
xor
mov
out
push
inc
jmp
and
add
push
fwait
jb
repnz
xchg
leave
fmull
mov
and
aam
ret
pop
repz
cld
mov
loope
fldt
lea
inc
in
fdivr
push
mov
xchg
pop
das
sbb
sub
pop
xor
and
sbb
jmp
test
insb
scas
inc
mov
jg
mov
adc
push
ja
dec
dec
cmp
adc
aam
fsubrs
lcall
stc
push
mov
push
push
subb
fmul
mov
pop
xor
push
and
sub
cmp
adc
gs
ret
das
xor
jne
push
rcrl
test
add
out
divl
fcoml
cmp
push
in
mov
mov
mov
xchg
dec
jge
stos
ja
jge
mov
in
inc
ret
jns
lods
ljmp
arpl
pop
sbb
cmp
fucom
and
pop
and
ret
xchg
fsubr
dec
pop
fs
or
das
iret
or
dec
and
add
push
and
dec
mov
mov
aaa
hlt
push
push
jecxz
popa
cli
jb
dec
mov
dec
push
or
ficompl
rolb
inc
xchg
addr16
and
testl
aam
xchg
decb
arpl
mov
out
push
ret
insb
push
out
mov
jge
fsts
sub
adc
pop
mov
pusha
scas
mov
dec
fldenv
mov
or
cmp
arpl
mov
mov
lcall
add
xchg
ljmp
hlt
adc
sbb
xchg
sbb
js
nop
ficomps
aad
lods
pop
or
iret
mov
mov
sub
ss
cmc
dec
pop
or
push
mov
fnstsw
cmp
lret
mov
or
add
outsl
dec
cmpsb
mov
jo
sbb
xchg
jge
dec
add
mov
pop
jg
and
ljmp
sti
in
jmp
idivb
hlt
add
pop
jp
dec
and
mov
dec
push
adc
sub
xor
mov
js
inc
sbb
sub
sti
or
and
lea
pop
sbb
xor
sub
push
in
adc
mov
js
inc
push
shr
jno
mov
out
jbe
and
in
add
popf
push
and
xor
and
inc
dec
bound
sbb
insb
inc
loopne
js
push
aas
scas
inc
mov
jns
adc
sub
pushf
jecxz
sub
push
adc
push
fistpl
std
enter
xlat
icebp
adc
stos
mov
je
push
adc
xor
je
les
stc
je
fldcw
ds
sbb
enter
test
add
sbb
das
ret
inc
leave
aas
mov
ja
sub
inc
leave
jnp
rcrl
dec
mov
pop
rcll
mov
fwait
ja
mov
xchg
incl
pop
popa
cmp
and
cmp
add
inc
push
adc
or
mov
jle
inc
xlat
in
pop
adc
bound
and
or
lds
add
inc
xor
add
and
test
sbb
mov
lret
test
scas
xor
jnp
inc
adc
jns
adc
ds
add
mov
xlat
push
enter
or
hlt
mov
pop
xchg
mov
or
ret
les
dec
xchg
push
fbld
adc
push
fcom
repnz
inc
je
repz
inc
push
icebp
cs
out
filds
dec
adc
sbb
mov
cmp
pop
mov
or
pop
mov
data16
or
dec
xor
mov
and
incl
cmpsl
lcall
into
push
mov
lea
pushf
cs
xlat
scas
iret
adc
ret
outsl
mov
test
mov
and
mov
in
idiv
fwait
fwait
mov
xlat
roll
fstl
mov
inc
sbb
outsb
jg
addb
dec
ss
sub
mov
out
dec
adc
test
inc
into
mov
push
jl
mov
xlat
add
imul
test
inc
pop
ret
adcb
pop
pop
imul
pop
pop
fisubrs
pop
lcall
pusha
push
pop
out
cmpsb
mov
xor
mov
lods
push
rcll
imul
dec
gs
lds
movsl
call
push
mov
lahf
lcall
or
arpl
cmpsl
sbb
push
sbb
push
cmp
lret
clc
shl
ret
aas
push
adc
inc
pop
pop
loop
pop
push
mov
les
add
inc
fistps
shrb
out
adc
ret
xor
mov
test
sbb
inc
inc
mov
and
add
or
or
int3
cmp
cltd
lods
cwtl
stos
push
xchg
jbe
in
xor
lods
inc
sarl
mov
dec
lcall
inc
add
push
daa
clc
scas
lret
jg
cld
pushf
mov
sub
dec
stc
mov
cmc
dec
scas
push
into
data16
adc
ret
pop
mov
jns
dec
pop
addr16
call
sub
push
daa
mov
inc
jb
in
faddl
jmp
in
aad
repz
cmc
dec
iret
jo
and
mov
push
push
lcall
lret
popf
adc
jecxz
dec
sbb
fdivrs
push
adc
jl
out
std
add
pop
pop
testb
cmp
out
add
sbbb
add
xchg
adc
scas
fstl
cwtl
pusha
jnp
xor
shrl
cmpl
cmpsb
pop
stc
aaa
push
push
dec
loop
stc
xchg
ds
jl
dec
add
rclb
lcall
add
adc
inc
fists
in
mov
push
or
inc
iret
ror
mov
xor
or
sbb
int
in
les
rcll
inc
inc
cmpb
aad
gs
xor
lea
fwait
xor
mov
push
cmp
cwtl
inc
ret
mov
inc
sub
push
jnp
mov
sbb
dec
push
hlt
lahf
notb
mov
dec
loopne
and
lods
adc
jmp
inc
mov
sub
add
movsl
loope
int
mov
jns
stos
loopne
jo
aas
cmp
push
mov
cmp
icebp
movsl
addr16
cmp
test
xchg
lock
std
pop
shl
inc
add
movsl
mov
imul
enter
pop
jbe
jo
or
mov
insl
test
mov
mov
pop
lea
lods
addr16
cmp
jae
or
fnstsw
out
cmp
aas
fabs
push
mov
test
jecxz
push
xchg
out
mov
test
jbe
insl
shrl
pop
or
ss
pop
pop
adc
push
out
or
inc
fxam
enter
jae
xor
int
imul
and
cmpsb
imulb
pop
xorb
xorl
lock
loop
push
cwtl
stos
rcll
add
popf
imul
or
push
and
jmp
push
mov
dec
or
pushf
movsb
ja
dec
imul
push
cltd
push
popa
clc
ja
stc
xor
sbb
push
test
repz
lods
insl
ret
cs
sub
mov
int
call
fsubl
cmc
test
addr16
rorl
jmp
ja
scas
lods
test
out
sahf
and
jl
std
int3
or
mov
jmp
inc
je
orl
and
lea
xchg
clc
fcompl
adc
mov
lock
xchg
xchg
push
inc
push
aad
push
imul
inc
adcl
cltd
test
rcl
cmp
es
lret
pop
fstpl
pop
cmpsl
xchg
outsl
fildll
cmc
jecxz
mov
mov
sub
int
mov
sbb
push
or
xor
xor
lea
mov
mov
jne
repnz
jp
jg
adc
xorb
test
push
repnz
outsb
je
lock
aas
cvtps2pi
push
pop
jae
stos
mov
iret
nop
or
xchg
mov
adc
xor
ss
inc
push
or
inc
pavgb
stc
pop
push
xor
les
mov
scas
push
mov
fildl
jge
outsl
push
cmpsb
pop
imul
or
in
xlat
outsl
pusha
xor
pop
jne
adc
add
bound
add
push
mov
adc
xchg
xchg
test
jecxz
pop
dec
dec
push
cmp
into
lock
sbb
and
add
mov
cmpsb
test
xor
repnz
sbb
add
add
lock
data16
adc
in
dec
add
cltd
fwait
add
test
das
xchg
cwtl
ret
in
pop
incb
sub
je
xchg
daa
fdivp
insl
sub
fcomi
loope
mov
test
xor
fs
nop
sahf
loop
fidivl
fwait
loop
adc
das
fwait
xchg
or
je
push
add
add
mov
lods
sbb
cmc
mov
push
push
push
add
data16
outsl
jno
fsubs
lea
push
lcall
pop
pop
or
dec
in
adc
jg
mov
sete
in
fsubrs
cmpsb
sarb
shrb
jnp
stos
scas
aaa
adc
pop
daa
jge
popf
stos
aaa
inc
mov
es
scas
and
lods
mov
mov
mov
iret
xor
ss
xchg
jno
xchg
iret
or
fwait
jbe
push
shlb
mov
sub
lds
and
lock
dec
cli
popa
fs
cli
jo
mov
mov
sub
mov
cmp
xchg
enter
jp
mov
mov
pusha
adc
aas
ja
test
inc
and
jg
hlt
cs
ret
inc
sbb
call
adc
add
xchg
mov
xchg
rorl
pop
and
pop
jnp
xchg
sbb
dec
sbb
inc
cmc
bound
cmp
mov
dec
or
std
mov
dec
orl
dec
add
dec
adc
inc
outsl
cmp
imul
or
pop
lock
inc
incb
pop
enter
std
mov
push
loopne
cli
mov
js
push
or
in
lods
ds
push
fcoml
dec
inc
iret
sub
fcomps
xchg
sub
movsb
mov
jmp
pop
jmp
adc
outsl
and
ror
add
mov
adc
repz
add
and
mov
test
outsl
mov
cmp
arpl
jmp
mov
jo
sub
shl
or
int
hlt
and
pop
sub
mov
xchg
or
iret
lahf
push
js
outsb
pop
hlt
dec
pop
ds
aas
sarl
ja
out
pop
outsl
cmp
ret
movsb
jne
fldcw
shrl
enter
jae
sbb
push
cmpsl
push
jp
mov
mov
xor
cmp
mov
cwtl
lds
cwtl
out
push
adc
jns
jae
mov
sbbl
loopne
add
inc
mov
or
or
sbb
mov
pop
inc
jp
orl
fucom
sbb
pop
push
push
jb
sbb
out
jo
loope
mov
into
std
fisubl
and
addb
pop
addr16
leave
inc
test
scas
push
int3
in
jno
inc
mov
mov
idiv
stos
cltd
shll
pusha
lret
xchg
fisubrl
mov
shr
sub
dec
sbb
repz
icebp
mov
sbb
cmp
jg
dec
mov
mov
out
mov
xlat
jae
test
pop
cli
cmp
jecxz
into
xchg
testl
pop
aas
mov
ret
cwtl
sbb
test
mov
xchg
clc
mov
sbb
imul
xchg
xchg
std
inc
pop
and
aam
push
jl
mov
cli
out
push
jb
and
aam
sbbb
cmp
sbb
jnp
cmp
out
ja
imul
lret
bound
pop
pop
push
movsl
jns
pop
fldl
fsts
das
addr16
aas
push
repnz
lcall
ret
daa
repz
jns
or
sbbl
dec
popa
shll
std
dec
pop
js
inc
lods
mov
imul
jbe
pop
and
clc
fstl
scas
jg
xorl
jae
in
jo
loopne
jge
cmp
imul
sub
mov
mov
or
movsl
sbb
pop
mov
nop
int3
dec
xor
inc
popl
jle
sti
sti
or
dec
enter
test
jl
es
inc
push
nop
mov
push
pop
ljmp
ret
shl
out
pop
mov
sbb
sbb
sbb
sbb
mov
bound
outsl
jl
lret
lods
push
sub
mov
xchg
xor
xchg
sub
or
jp
dec
add
pusha
pop
add
sub
jmp
aam
add
rolb
xchg
pop
mov
call
jp
and
sbb
imul
or
cwtl
inc
stc
xchg
std
lcall
arpl
sub
into
or
shrb
mov
in
dec
test
xor
outsl
dec
jecxz
jle
dec
jge
fldcw
mov
mov
dec
sbb
inc
mov
arpl
ficompl
pusha
fisubrl
in
mov
jp
push
sub
sub
sub
cmp
test
dec
jne
inc
add
jnp
std
pop
push
sub
sub
mov
adc
ficoml
lds
pop
or
adc
lds
pop
lahf
ret
xchg
sub
out
sub
mov
xor
cmpsb
add
ret
ss
jnp
dec
sub
and
call
lds
lar
test
enter
mov
xor
ret
orb
mov
cli
imul
cmp
fnstenv
subb
js
jb
xchg
scas
jo
push
xchg
mov
mov
cmc
pop
ficomps
pop
push
push
dec
push
daa
xchg
sbb
push
repnz
sub
sbb
xchg
pop
in
push
xchg
inc
sbb
fwait
je
pop
jp
lds
fwait
cmpsl
test
out
xor
mov
push
inc
xchg
adc
dec
add
xchg
mov
cmc
mov
mov
jno
roll
dec
jbe
outsl
cmp
adc
js
enter
inc
mov
sbb
bnd
adc
cmp
or
movsbl
es
add
sbb
cmc
push
pushf
mov
xchg
jbe
and
lds
push
mulb
jp
rol
mov
mov
cmp
into
adc
call
mov
shlb
pop
aad
dec
popa
insb
sub
repnz
imul
jbe
ss
movsb
popa
inc
mov
lea
or
adc
sbb
lods
nop
cmpsl
push
cld
test
push
jge
push
shll
cmp
fsts
out
inc
and
pop
dec
sbb
rcll
cmp
dec
mov
mov
inc
jge
das
jbe
push
imul
stc
int
jb
inc
add
or
inc
std
cli
call
ja
mov
xor
xchg
aas
push
rcrl
daa
dec
mov
popa
lret
mov
in
xchg
jnp
xor
lcall
mov
test
push
cld
mov
dec
dec
mov
je
adc
jle
jae
insl
shl
movsl
push
mov
cvtps2pi
dec
cmp
ror
call
mov
sbb
scas
cli
push
pop
add
pop
xchg
xchg
inc
pop
sbb
notl
add
dec
cmp
int3
je
xchg
xor
mov
cmp
pop
xor
add
and
and
cmp
inc
mov
lods
xor
in
push
aas
mov
movsb
mov
cs
add
lods
leave
div
aaa
stos
jbe
dec
mov
sbb
jecxz
jns
lock
jns
insl
movsb
sbb
insb
sbb
dec
push
cltd
test
sub
in
or
push
pop
xor
scas
add
imulb
sbb
jmp
aas
repz
mov
mov
xchg
xor
cmp
sub
pop
jbe
cmp
jp
jmp
sub
lods
jp
cwtl
iret
jns
inc
dec
dec
inc
inc
shr
int3
test
mov
insl
outsl
jg
or
cwtl
pop
icebp
push
mov
lea
mov
idivl
cmp
aad
loope
movsl
or
hlt
js
arpl
mov
xor
js
push
jno
scas
mul
inc
fcomps
clc
sub
sub
push
jmp
dec
pop
out
mov
iret
pop
inc
push
mov
xchg
in
in
mov
mov
or
cltd
jo
arpl
push
andl
and
es
jle
cmp
sbb
sahf
scas
cmp
idiv
in
mov
stc
jbe
xlat
scas
xor
jns
adc
lret
das
push
loope
push
add
stos
and
cld
ljmp
in
xor
mov
aas
pop
or
dec
je
cmp
mov
test
ror
lea
sbb
aas
ja
inc
cmpsb
sti
repz
pusha
cmp
pop
push
fmul
push
cltd
xchg
rclb
sbb
xchg
cmp
and
sbb
repnz
jecxz
xchg
jns
sahf
notb
into
push
imull
loop
cmp
xchg
loopne
aad
incb
mov
cmp
movsb
pushf
loopne
cli
int3
adc
shr
jge
cld
mov
leave
mov
sub
aas
push
std
push
push
mov
rep
repz
mov
xchg
jge
cmp
cmp
inc
ss
aad
stc
push
stos
or
and
adc
sbb
push
imul
insl
loop
int3
rorb
cltd
sbb
pop
in
into
mov
and
leave
xor
inc
mov
cmp
dec
xchg
jmp
hlt
nop
shll
dec
mov
jno
xor
add
fstpl
xor
mov
mov
pushf
roll
mov
ss
push
mov
mov
push
inc
sahf
rcll
xchg
and
insl
push
push
mov
subl
test
sahf
push
addr16
xchg
push
jge
cmp
bsr
or
mov
jg
rclb
xchg
stos
mov
sub
lods
fldt
rcr
nop
jp
mov
sti
int3
push
mov
lahf
jecxz
loop
push
add
xor
dec
push
pop
pusha
stos
pop
into
fadd
jae
bound
js
test
div
mov
les
push
and
nop
pop
repz
lret
stos
xor
pop
push
pop
aas
xchg
fwait
adc
or
inc
dec
in
mov
mov
mov
sar
mov
pusha
in
dec
aad
nop
sub
imul
enter
inc
xchg
add
add
xchg
xor
add
xchg
es
jo
xchg
call
or
orb
inc
std
or
xchg
xchg
adc
add
pop
mov
mulb
iret
out
adc
std
inc
pop
jg
clc
repz
movl
jle
or
bnd
push
fs
stos
fisubrl
loopne
loop
pop
jae
pop
into
std
mov
aas
in
sub
iret
out
sub
mov
mov
lret
mov
aad
jnp
fcmovnb
mov
or
stc
pop
stos
cli
in
sbb
enter
sbb
cmc
fisttpll
lock
cmp
push
inc
loope
scas
pop
ss
ja
xchg
jb
and
ret
sbb
or
cld
mov
ret
outsl
xchg
jge
ret
push
lret
xchg
mov
mov
pop
add
aas
idiv
enter
fcompl
mov
mov
mov
fidivs
push
arpl
cld
and
mov
sbb
sub
sub
ds
insl
sub
popl
jne
push
movsl
outsl
lcall
cmp
in
cmc
mov
lock
in
das
push
lods
inc
cmp
pop
hlt
repnz
mov
iret
adc
or
data16
mov
fs
ret
ret
pushf
lahf
jge
loope
fstl
cmp
aaa
ficoms
and
sahf
jno
daa
addr16
mov
add
pusha
sbb
ret
frstor
adc
cli
jle,pt
pop
dec
mov
xchg
dec
pusha
sahf
sahf
mov
enter
or
mov
addr16
mov
or
cs
inc
cmp
jae
std
inc
dec
repnz
push
lock
fisubrl
gs
sub
push
lea
pop
in
xchg
xor
pop
out
pop
push
mov
ljmp
or
frstor
sbb
aam
inc
jnp
sti
pop
dec
out
push
sbb
cwtl
dec
cltd
mov
cld
sbb
and
xchg
cli
pop
dec
dec
mov
shlb
sbb
sub
inc
adc
lds
xor
cmp
stos
pop
mov
fwait
jmp
and
pop
cli
fidivs
aad
cmpsb
test
xor
lods
sbb
jmp
add
cmpl
inc
seto
cmp
pop
stos
bound
cmc
icebp
in
js
cmpsl
repz
xor
xchg
inc
out
lods
jecxz
mov
sbb
shl
and
pop
shll
sbb
aaa
mov
and
mov
mov
push
push
sti
mov
dec
ja
xor
pop
adc
popa
cmp
hlt
mov
cmp
or
jl
cmpsl
sar
iret
mov
or
sub
cs
dec
push
outsb
and
pop
push
and
push
in
or
and
inc
dec
pop
mov
daa
mov
mov
cmp
sub
or
cld
ds
test
movsb
mov
cmp
test
cmp
mov
fstl
xchg
je,pt
dec
mov
enter
lods
mov
mov
cld
adc
xchg
pop
mov
out
adc
xchg
aad
and
mov
mov
push
sarl
cs
dec
push
sub
and
loop
loope
andl
xchg
pop
xor
mov
inc
ljmp
cmpb
cmp
cld
mov
inc
fwait
jl
inc
pop
pop
xchg
aas
imul
dec
shl
adc
add
mov
insb
xor
xchg
mov
shl
pop
xor
mov
mov
inc
test
ja
mov
daa
xchg
cli
das
push
ds
inc
lcall
out
mov
mov
cmp
add
sbb
or
fdivrs
les
stos
xchg
adc
je
lahf
xchg
adc
movsl
push
cmpsb
push
test
mov
cli
cmp
jno
cmp
test
pushf
adcl
sbb
jle
leave
aam
roll
push
inc
insb
inc
push
add
pop
adc
stos
dec
sbb
pop
movsl
nop
adc
clc
je
jne
push
repz
push
xchg
jno
pop
sarl
pop
add
shrb
shlb
sub
dec
pop
jp
adc
cwtl
jbe
fsubrp
ds
leave
out
jno
out
repnz
add
xor
push
cltd
cmpsb
loop
inc
js
ret
mov
cmpsl
add
out
xchg
fcom
gs
cmp
adc
testb
lahf
push
and
out
jmp
adc
testb
push
dec
les
lods
adc
lock
cwtl
arpl
daa
push
nop
movsl
jmp
in
iret
xchg
sbb
add
fadd
int3
lahf
leave
into
fimull
in
addr16
movsl
dec
mov
gs
scas
loopne
out
pop
push
movsl
mov
inc
movsl
sub
outsl
mov
mov
movsl
out
insl
lahf
xorl
icebp
mov
aam
es
repnz
inc
aas
dec
mov
adc
in
outsb
pop
leave
inc
jb
jmp
adc
rorb
lret
fwait
push
sbb
mov
add
sbb
pop
fadds
jb
int
xor
neg
pop
loope
sbb
negb
pushfw
outsl
sub
addr16
outsl
fsubl
sub
dec
je
dec
dec
aam
jge
sbb
adc
outsl
ljmp
or
push
jnp
jecxz
cmp
rcll
inc
fsubrl
sbb
xchg
daa
sub
add
pop
bound
ja
pushf
cmc
push
ret
xor
pop
out
jae
cmpsb
inc
leave
dec
jmp
mov
nop
pop
lea
or
or
pop
sbb
les
scas
arpl
sub
inc
js
clc
in
inc
mov
imul
lock
add
push
sahf
push
addb
xchg
ja
add
aas
popf
lock
mov
subb
in
outsl
inc
dec
xchg
jmp
xor
mov
das
std
pop
and
insl
add
js
add
fwait
imul
dec
cmp
sahf
shrb
inc
mov
pop
mov
aam
shl
out
pause
fwait
std
dec
outsl
dec
and
mov
fwait
pop
dec
movsb
mov
jmp
mov
iret
mov
out
jecxz
pop
pop
pop
mov
sbb
insl
nop
sbb
jnp
xor
mov
call
test
rcrl
sub
lret
cmp
or
fucom
and
out
sbbl
sahf
mov
jns
adc
sub
cmp
jmp
pop
testb
mov
lock
filds
sbb
fadds
pop
flds
movsl
add
sub
inc
gs
mov
pop
frstor
mov
mov
xor
fisubs
jae
adc
test
add
insl
out
mov
js
jae
aad
add
adc
push
xor
sub
mov
nop
xor
test
sub
or
add
addr16
lcall
mov
push
dec
sub
stc
imul
cli
lock
sbb
mov
sbb
xor
dec
dec
lfs
std
mov
aaa
cmp
xor
out
iret
js
paddw
ficoms
out
add
imul
cmp
or
sub
scas
cs
push
mov
jp
out
enter
clc
pop
icebp
aad
ss
gs
or
aam
rcrl
fcmovnb
cld
cmp
rcrl
cli
add
clc
adc
push
nop
mov
mov
inc
xchg
adc
sbb
jmp
xor
cltd
and
or
fldcw
or
and
xor
add
mov
call
and
popa
xchg
popf
jns
add
pusha
stos
mov
add
lds
jl
or
cmp
mov
es
fbstp
sbb
das
subb
movsl
shlb
jbe
xchg
pop
in
stos
leave
cmc
mov
fists
mov
mov
cmp
shlb
ljmp
cld
sub
test
cld
cmp
icebp
mov
lock
pop
fidivrl
jle
in
dec
arpl
out
adc
push
xchg
fstl
popa
test
sbb
push
or
mov
shl
add
stos
rcl
insb
push
sarb
push
ljmp
shrb
js
mov
jb,pn
mov
and
and
jl
cmc
mov
mov
or
jne
cmp
mov
not
sub
outsl
int
leave
repz
push
or
sub
and
fwait
jb
cmp
cltd
pop
in
push
popf
pushf
scas
iret
das
es
addr16
loopne
or
addr16
xchg
movsb
aad
jne
jle
lahf
lock
out
jge
les
mov
dec
stos
mov
lock
xor
or
lret
pop
lock
notl
sbb
mov
pop
pop
imul
xor
mov
xchg
out
std
push
loopne
repz
dec
and
jg
ret
mov
mov
sub
std
sub
pop
pop
sub
inc
mov
inc
in
jl
sbb
loop
add
in
cmpsb
cmp
push
xor
inc
call
aad
sub
std
fisttps
cmp
test
fimuls
iret
outsl
push
push
push
nop
or
loopne
movsb
push
xor
inc
lods
inc
cmp
lds
in
adc
cld
daa
nop
andb
lea
fdivrl
in
or
dec
adc
rclb
mov
lods
lahf
dec
dec
sub
dec
es
xor
iret
test
cmpb
adc
mov
sbb
mov
xchg
jns
lods
sub
xchg
add
push
xchg
inc
mov
dec
cmp
test
dec
incb
cmpsb
dec
das
fisubrs
out
lcall
loop
xchg
xchg
js
pop
inc
outsb
mov
popa
mov
pusha
inc
pop
adc
pop
push
dec
sub
mov
lods
stc
loope
lods
fdivrs
sahf
sub
je
scas
or
sub
pop
xor
pop
daa
cltd
mov
repnz
and
std
pop
inc
push
cmp
ds
mov
or
lcall
push
ficompl
adc
xor
and
cltd
rorb
es
test
mov
rolb
xlat
xchg
pop
dec
push
mov
pop
movsb
mov
xchg
mov
mov
out
jnp
cmp
sub
lret
pusha
jp
insb
xchg
in
out
nop
daa
dec
mov
jecxz
mov
mov
popa
insl
mov
outsl
jo
nop
xchg
clc
xor
mov
or
jno
and
scas
stc
call
cli
sbb
and
movsl
sbb
pusha
imul
push
insl
dec
adc
lods
loopne
xlat
sahf
cmp
scas
xor
cmp
pop
mov
pop
pop
cmp
lods
loope
stc
cmp
jb
adc
lock
cmpsb
rorl
ret
xchg
or
ret
test
in
sub
add
mov
xchg
push
sbb
lahf
and
sub
in
push
mov
add
dec
inc
ja
mov
mov
mov
andb
mov
mov
sub
and
jbe
push
pusha
push
fsts
and
idivl
test
lret
dec
dec
movsb
ds
enter
jge
push
mov
cmp
xorb
mov
fists
push
mov
cwtl
xor
psllw
bound
xor
pop
jo
inc
scas
cmp
dec
xchg
add
mov
or
and
sub
sbb
ret
add
xchg
fstpl
aas
mov
lret
push
bound
sbbl
jbe
cmp
negb
mov
xchg
inc
jne
in
scas
xchg
lods
insw
mov
mov
fists
ljmp
adc
cltd
mov
xorl
cmp
rcrb
lds
enter
sbb
fcomip
inc
loope
lret
sub
push
mov
fidivrs
cli
fwait
out
inc
pushf
dec
push
mov
int
test
insl
mov
ret
xchg
loop
jo
sub
scas
movsb
test
dec
shrb
in
xchg
and
rorb
pop
pop
sti
push
lret
fisttpl
stos
rcr
pop
fwait
cmp
mov
insl
icebp
std
sar
cmpsb
aad
int
mov
bound
push
or
faddl
arpl
pop
cli
enter
mov
sbb
leave
aas
nop
sahf
inc
add
add
sbb
jge
pop
mov
mov
mov
sub
movsb
bound
inc
sbb
xchg
pop
lret
leave
mov
sbb
dec
xor
jnp
adcb
jp
aaa
pop
out
and
push
mov
sub
adc
jne
mov
cmc
cmp
cwtl
cmpsb
test
enter
inc
sahf
pop
mov
mov
stos
fwait
mov
jno
dec
in
dec
aaa
mov
mov
lret
mov
adc
sub
lret
xor
sub
fistpl
add
and
loop
mov
or
inc
xor
push
repnz
lea
pop
je
enter
sarl
mov
or
xor
push
pop
addr16
inc
mov
dec
adc
push
jb
insl
cmp
mov
push
add
sbb
or
push
notl
rclb
push
in
daa
imul
adc
jo
aaa
cld
sbb
sbb
add
fnstsw
sbbl
test
lods
mov
and
ja
jne
repnz
negl
cmp
outsb
cmpsb
mov
jnp
pop
aad
add
sub
test
adc
fnstcw
and
dec
jno
enter
jnp
lea
iret
stos
or
cmp
or
mov
das
dec
std
enter
loope
ljmp
mov
bound
push
pop
fdivs
mov
and
test
popa
xchg
fiadds
movsb
or
add
clc
add
lds
arpl
or
lret
das
popa
adc
hlt
inc
lcall
ja
mov
cs
das
push
insb
cmp
enter
lods
mov
lret
inc
enter
outsl
jle
sbb
je
fsts
fcomi
sahf
or
mov
int3
ficoms
add
popf
je
hlt
cld
fists
and
dec
stc
ret
rolb
lret
fs
dec
and
push
mov
aaa
nop
insb
pusha
adc
push
inc
mov
aaa
loop
sbb
push
stc
aad
xchg
mov
xchg
sbb
pop
or
push
sahf
xor
repz
adc
cmpsb
inc
imul
xchg
mov
movsb
popf
test
stos
and
or
fwait
out
push
out
sbb
icebp
xor
daa
rorb
nop
subb
loop
data16
dec
cmpsl
sti
test
into
mov
cmp
in
cmpl
cmpsb
idivl
cmp
inc
cli
or
inc
sbb
fstl
lock
sbb
jns
leave
lods
sub
inc
and
leave
sti
loop
addl
pop
test
in
imul
insb
icebp
xor
cmpsb
xchg
ror
loopne
push
push
mov
movsb
loope
adc
mov
jg
in
or
iret
adc
adc
cmp
ds
or
in
xor
mov
popf
pushf
inc
jle
out
fbld
sbb
jno
pop
sbb
cli
in
push
sub
dec
mov
rolb
xlat
cmc
push
inc
leave
std
dec
xor
repnz
je
adc
inc
adc
test
aaa
in
cmp
bound
ret
das
push
in
pop
cmpb
cld
sbb
jmp
cmp
mov
xchg
sub
test
cli
push
mov
jge
mov
or
jne
loopew
test
push
or
or
mov
je
pop
xor
jae
pop
xchg
push
addl
sub
pop
aas
inc
hlt
gs
xlat
scas
push
cmc
jge
outsl
and
lods
fxch
push
jbe
pop
xchg
incl
adc
mov
mov
xor
push
aas
mov
loope
mov
xchg
enter
add
and
les
addr16
inc
lcall
enter
or
jecxz
jecxz
mov
push
ja
in
in
enter
sarb
in
sbb
dec
sarl
fistps
jbe
subb
xor
sub
lahf
pop
shl
jl
sysret
daa
icebp
mov
jecxz
hlt
cltd
jae
out
shlb
adc
jge
xchg
jecxz
sbb
fwait
lea
cmp
mov
sbb
in
stos
loop
fs
cmpb
stos
cmp
lds
int3
cmp
or
dec
repnz
scas
flds
mov
xchg
adc
ljmp
cmp
mov
dec
imul
pop
pop
loope
mov
stos
imul
mov
test
imul
fmull
cld
mov
sbb
insl
dec
in
jns
ja
aam
popf
or
push
pop
lds
fstl
cmp
sahf
iret
fmull
xor
xchg
sbb
xor
push
cmpsl
sbb
jne
int3
stc
cmp
ja
pop
or
sub
dec
jne
jmp
lret
ret
clc
sbb
mov
dec
cltd
iret
sub
xor
jb
movaps
arpl
or
jo
aad
inc
sbb
movsl
jmp
stos
rorb
lods
movsb
push
push
dec
or
dec
fidivs
call
scas
enter
std
sti
ds
jno
adc
add
lds
dec
int
in
pop
sub
aas
mov
cmp
jp
cmp
pop
ret
mov
jecxz
enter
repnz
fs
js
sti
sub
mov
push
pop
data16
or
mov
mov
jo
sub
pop
jae
mov
popf
adc
xchg
repz
or
mov
lret
imulb
sbb
icebp
cmp
repnz
js
mov
ficomps
lds
stos
dec
inc
lret
xchg
enter
sub
inc
jmp
jnp
mov
pop
into
push
into
mov
push
and
lahf
popf
scas
pop
imul
movb
rcr
in
pop
clc
sti
push
xor
mov
push
push
dec
sub
mov
dec
test
push
aas
and
inc
movsb
xchg
lret
push
adc
aad
pop
sub
insb
cmp
sbb
shl
adc
rcll
vmovaps
lods
stc
mov
or
in
mov
xchg
dec
adc
push
test
or
movsl
and
mov
or
mov
sbb
loope
dec
enter
and
sahf
jecxz
ljmp
mov
push
call
mov
es
into
or
xor
aam
stos
inc
cmp
sahf
adc
hlt
pop
xchg
and
add
mov
mov
mov
xor
popf
sbb
sub
add
sub
out
cltd
jge
push
out
repz
int
in
xchg
jb
pushf
mov
fnstenv
add
aas
iret
xor
xchg
inc
push
movsb
sbb
mov
and
lret
ret
and
push
cmpsb
lret
add
in
fsubrl
mov
std
mov
pop
push
and
sbb
add
movsb
jg
jge
sub
repnz
mov
adcb
sbb
jp
lock
push
xor
push
ja
or
sbb
repz
adc
sbb
mov
mov
push
in
mov
jnp
repz
mov
xor
mov
mov
ror
sbb
into
es
push
add
mov
rolb
jo
les
cmpsl
loop
jecxz
pop
adcl
clc
sub
test
jae
sti
add
dec
scas
jo
pop
jnp
cmp
or
mov
pop
sbb
enter
leave
bound
imul
mov
lret
into
insb
pop
mov
push
inc
jl
cli
mov
mov
pop
push
mov
xor
cmpsb
sub
and
sbb
sub
add
dec
lods
aam
pop
and
cmp
sbb
outsb
cmpsb
dec
jno
cmp
sub
mov
out
cmpsl
sub
sahf
cmpsb
loopne
clc
mov
iret
das
insb
cli
mov
xor
fadds
in
mov
imull
mov
notl
imul
mov
idivb
pop
jns
test
cs
push
push
sub
add
mov
push
adc
outsb
cmpsb
into
xchg
rolb
dec
adc
push
int3
scas
mov
mov
mov
fbld
adc
cmpsl
sub
fcoml
ljmp
jmp
or
jno
mov
jae
sub
sbb
jl
cmpsb
add
push
stos
sbb
flds
adc
mov
mov
lret
sub
mov
ret
sub
dec
aas
jg
mov
lock
cwtl
lret
fimull
iret
cmpsl
mov
inc
mov
ret
pop
mov
dec
outsb
imull
xchg
test
gs
repz
bound
xlat
mov
xchg
sbb
and
repnz
lods
mov
seta
and
xor
lret
mov
and
test
dec
lahf
xchg
dec
xchg
add
stc
dec
cmc
sub
ljmp
loop
adc
xor
push
stc
jno
xchg
movsb
jae
inc
popa
mov
adc
out
fildl
rorl
xor
push
adc
aam
xor
cmp
stos
push
mov
rol
jnp
jmp
aam
jge
pop
ss
xor
stos
mov
aas
and
xchg
shrl
push
subl
js
mov
xchg
out
in
pop
idivl
push
leave
mov
mov
movsb
cmc
lock
mov
jno
jne
lods
inc
icebp
nop
jg
mov
je
mov
insl
clc
xlat
inc
call
sub
mov
pop
mov
fwait
cmp
push
cmp
ret
inc
in
push
and
repz
decl
mov
scas
adc
pop
sti
aas
add
push
insb
enter
xor
jns
pop
dec
cmpsb
add
popl
xor
shrl
mov
dec
lahf
test
icebp
or
mov
repz
out
cmp
mov
mov
lock
out
cmc
sub
or
dec
pop
dec
nop
mov
or
dec
popf
dec
sub
cld
xor
mov
cmpl
mov
lahf
mov
or
cmp
xchg
cltd
lret
sbb
bound
xchg
test
push
inc
fdivrp
push
mov
pushf
or
dec
jp
iret
jle
mov
cmp
outsl
stc
jae
pop
xchg
or
sbb
les
das
lcall
ja
dec
scas
int
sbb
xchg
jge
mov
inc
jp
xchg
ds
add
dec
and
stc
or
jb
mov
jmp
jae
jg
mov
pop
push
popa
sub
mov
xor
pop
sbb
jae
cmp
sbb
clc
testb
sbb
ja
add
and
sbb
jnp
aad
push
inc
jb
mov
out
icebp
mov
arpl
shl
repz
adc
loop
lcall
push
xlat
cmp
jno,pt
lret
add
jnp
lahf
xor
pop
cmp
jmp
dec
dec
and
ds
pop
in
mov
inc
pop
mov
cmp
inc
fwait
lds
xchg
addb
push
out
cmp
dec
outsb
testb
sbbl
cwtl
dec
or
mov
test
mov
pusha
pop
push
out
dec
xor
std
and
sbb
jp
adc
out
test
inc
mov
addr16
cmpsb
std
adc
fmuls
stc
dec
xchg
rclb
rcrl
aam
cmpsl
dec
ret
jbe
add
push
xchg
add
movsl
int3
jb
jp
jae
push
xlat
pop
pop
iret
iret
enter
pop
outsb
js
ljmp
negl
subl
sbb
pop
xchg
rolb
sub
mov
jmp
adc
cwtl
sbb
daa
jbe
divl
dec
sub
or
repnz
fsub
fisubrl
cmp
lods
sti
fistpll
flds
andl
ljmp
xor
aad
push
xor
sub
push
orps
fisubrs
push
stos
aaa
or
repz
jb
imul
mov
lret
into
xor
ja
jno
into
dec
shlb
enter
aas
cwtl
cmc
mov
or
loope
cs
xor
cs
jae
repnz
test
jge
iret
test
xchg
icebp
or
incb
fcomps
pop
dec
shrl
shrb
rcrl
or
lds
repz
mov
jns
daa
inc
sbb
sub
cli
jmp
dec
or
leave
or
jno
cmp
sarl
les
iret
rclb
fnsave
ret
testb
nop
fistps
pop
mov
leave
xlat
sbb
sbbb
imul
adc
stos
jnp
cmp
icebp
rcrl
cmp
dec
aas
or
ja
dec
adc
jno
outsb
and
inc
pop
cwtl
dec
call
repnz
jl
mov
dec
mov
add
pop
stos
pop
scas
sahf
xor
inc
pushf
pushf
dec
jg
pop
push
out
pop
or
mov
cld
loop
cmp
mov
pop
inc
push
pop
enter
repz
push
lea
dec
lcall
push
test
pop
enter
inc
out
xor
popf
mov
pop
cmp
data16
shll
out
push
adc
push
fcoml
pop
xor
pop
loope
mov
xlat
xor
mov
push
cmc
adc
in
pop
cmp
inc
inc
test
les
in
push
jp
fdivrl
sarb
add
out
sub
cmp
std
sbbl
push
popf
stc
shlb
sbb
les
hlt
add
aaa
add
daa
mov
mov
mov
jb
je
mov
popa
sub
xchg
or
jmp
or
dec
pusha
popa
popa
mov
push
xchg
jae
inc
inc
and
cmpsl
shl
jo
in
push
repz
xor
add
dec
or
cltd
jo
dec
sbb
mov
dec
jbe
test
popf
pusha
les
or
scas
sub
cwtl
dec
shr
out
mov
scas
pop
jecxz
shlb
imul
pop
insl
mov
ret
xorb
cmp
xor
in
mov
adc
jo
repz
pop
int3
enter
push
push
outsb
in
shr
pop
addl
push
mov
in
cmp
xor
and
jno
enter
pop
add
push
jg
addr16
clc
cmc
or
fisubrs
pop
test
sub
jns
lret
fldl
pop
sub
cltd
pop
lret
or
add
cmp
sub
and
xchg
or
das
mov
fmuls
lock
lahf
jmp
jecxz
pop
js
lock
jb
pop
cmpsb
dec
in
cmpsl
mov
decl
fnop
popf
addr16
daa
clc
sbb
std
sahf
push
pop
rorb
pop
test
mov
scas
or
xor
in
cmp
dec
popf
pop
inc
or
dec
cmc
cltd
jg
sub
pushw
popf
lcall
test
cmp
lods
and
pop
ficoml
aaa
rcrl
dec
jmp
or
lock
mov
jo
push
mov
mov
arpl
jns
cmp
sbb
stc
je
pushf
mov
lods
aad
xchg
jb
test
les
dec
imul
push
cli
cmpsb
int
repnz
adc
jae
ret
adc
inc
test
ret
push
pushf
xor
rol
xor
pop
or
or
aaa
pop
shlb
cwtl
faddl
andb
jae
mov
push
lods
or
mov
cmpsb
or
mov
mov
pushf
insb
test
inc
fs
jne
arpl
jecxz
mov
cmc
mov
dec
mov
sbb
mov
das
fst
ljmp
push
mov
push
or
add
pop
sbb
inc
cmp
dec
dec
dec
mov
outsb
inc
pop
data16
iret
xor
add
les
xchg
pop
xor
mov
cmp
sbb
pop
cld
or
inc
jb
cmp
inc
out
xor
hlt
cmp
fs
jp
pop
jle
cmp
dec
ret
fs
repnz
mov
xchg
cmpsl
add
xlat
loope
aas
pop
xchg
ret
popa
cmp
pop
sbb
mov
dec
pop
jle
xor
subl
mov
and
mov
stos
sbb
add
incl
mov
es
sub
in
addr16
xchg
insb
outsl
dec
jns
out
ljmp
test
repz
jae
ret
stc
cld
in
dec
xor
cmp
popf
mov
shll
pop
dec
shr
es
or
or
test
data16
adc
jns
pushf
jl
and
out
xchg
ljmp
jg
xor
sbb
or
ja
jne
mov
inc
fcompl
mul
fwait
adcb
fldl
clc
pop
inc
orb
xchg
cwtl
and
invd
jle
fnsave
adc
enter
pop
push
adc
push
lock
fs
adc
ss
test
mov
jo
clc
pop
fisubl
push
xchg
loopne
lret
xchg
push
insb
pop
xchg
iret
aad
fstpt
fldcw
mov
or
lret
jo
je
addr16
mov
mov
adc
and
mov
out
stos
mov
nop
jl
pop
lock
push
xchg
and
xchg
dec
das
dec
mov
inc
std
push
jmp
in
daa
or
sbb
cmp
into
outsb
int
insl
mov
sti
cli
cltd
fimuls
leave
lcall
popa
sub
push
cmpl
in
xchg
sti
mov
pop
add
push
and
pop
add
loopne
repz
test
test
cmp
mov
or
lds
xor
hlt
lret
ud2
dec
fildll
movsb
int
xchg
mov
and
dec
clc
xchg
xor
adc
jb
mov
cmp
sbbl
lret
jge
xchg
jno
dec
pop
icebp
or
ds
stos
inc
sbb
inc
mov
addr16
jno
pop
cmp
popf
loop
jno
jmp
pop
jnp
pop
fstpl
adc
jl
sbb
cmp
pop
adc
jp
sbb
sub
xlat
pop
jne
and
pop
inc
fsubl
mov
pop
out
sbb
pusha
movsb
or
in
mov
test
in
sbb
pop
fbld
test
push
jbe
sub
adc
dec
and
push
ja
mov
xchg
mov
cld
cmpsb
subl
sub
adc
xor
sub
stc
and
push
adc
adc
add
jmp
pop
pop
jge
imul
pop
or
pop
or
inc
in
int3
call
pop
roll
xchg
mov
jne
inc
mov
inc
dec
popf
rorb
lods
inc
out
push
dec
jl
int
shrb
mov
ljmp
mov
sub
out
push
and
jno
das
repnz
out
stos
xor
or
dec
xor
mov
inc
inc
cmp
dec
jnp
mov
mov
hlt
pop
push
push
ret
lea
stos
sbb
pop
inc
mov
enter
push
ret
and
mul
int
subb
es
out
xor
lcall
lahf
mov
aas
mov
fisubs
dec
js
pop
jnp
in
pusha
dec
sbb
sub
xchg
sahf
add
out
ds
jl
push
adc
xor
add
push
push
mov
sbb
adc
mov
lcall
scas
fisubl
das
pop
inc
dec
inc
or
push
stc
lret
cmpl
and
mov
lret
mov
mov
insb
add
das
scas
rcrl
andl
mov
jns
mov
mov
int
pop
add
fistpll
mov
mov
and
mov
adc
jge
pop
sbb
mov
icebp
xor
pop
int
outsb
sub
repnz
sub
fsub
sbb
test
je
addb
inc
je
int
jl
hlt
in
pusha
mov
sub
test
xchg
jnp
fsubr
fdivp
sub
stos
push
aaa
sti
mov
and
pop
out
jl
inc
cmp
mov
dec
enter
lret
fcoml
pop
pop
push
sbb
idivb
mov
cmp
lods
scas
jbe
lock
aas
sub
ljmp
lea
sbb
or
add
popf
add
adc
and
add
cmp
sbb
mov
aas
or
out
sbbb
je
xchg
ret
xchg
es
lcall
in
jle
loopne
cmp
mov
xlat
enter
ds
int3
sub
xchg
dec
pop
mov
and
push
popf
push
lret
jo
mov
mov
rcl
sub
dec
enter
sub
and
or
xor
dec
and
add
cmp
rclb
into
enter
inc
sar
dec
sbb
arpl
xchg
in
pop
in
push
les
jne
mov
cmp
pop
mov
push
outsl
lcall
aad
xchg
stos
adc
adc
icebp
pop
push
leave
cli
xchg
fstpt
pop
sbb
xchg
ja
dec
das
sub
push
rclb
mov
aam
loope
hlt
adc
lcall
xor
sbb
dec
mov
mov
cmp
mov
mov
adc
es
push
arpl
enter
ror
jge
inc
or
mov
sahf
mov
push
push
cmc
jne
pop
mov
mov
inc
fiaddl
jmp
inc
in
js
xor
cld
push
fsubl
mov
test
repz
push
sbb
stos
cld
lahf
insl
int3
in
jae
loop
lods
xor
push
icebp
and
scas
xor
cld
out
enter
hlt
orb
popa
fs
imul
jp
popa
ss
sub
or
or
lods
sbb
mov
xor
jmp
mov
in
in
cmovno
in
add
bound
popf
movsl
call
cmpsl
adcb
pop
fadds
sbb
leave
scas
adcb
jne
adc
inc
xor
xor
or
mov
or
aad
fsubrs
xchg
cld
aas
sub
xchg
push
push
mov
xchg
xchg
and
call
cmc
push
jbe
or
jecxz
ja
or
mov
xchg
sahf
mov
dec
mov
addr16
les
cmp
scas
sub
mov
ret
jp
mov
daa
dec
push
and
add
jns
popa
movsl
roll
mov
jmp
mov
clc
js
not
int3
sub
in
jbe
cmpsl
repz
inc
xchg
add
out
cld
ljmp
divl
test
scas
pop
stos
sub
loope
in
sti
cld
dec
dec
pop
adc
add
jb
insl
mov
jo
pop
lret
pop
fdivl
fs
icebp
insl
xchg
movsl
fidivs
inc
popf
mov
mov
mov
fsubl
pop
das
subb
cmp
hlt
es
cmp
adc
fidivs
rcrb
aaa
add
lock
push
or
adc
mov
fnsave
loopne
icebp
dec
sbb
jo
mov
pusha
fsubrl
sysret
mov
xchg
std
es
xor
test
neg
and
das
fisubl
bound
and
lods
jno
lds
adc
stos
xchg
push
out
mov
enter
dec
stos
push
inc
inc
and
ret
sbbl
sarl
jnp
inc
cmpsl
fildll
loop
repz
mov
bound
pusha
loop
mov
insb
adc
mov
jle
pop
lcall
xlat
es
mov
cmp
cli
cmp
mov
test
lds
mov
inc
mov
push
mov
push
inc
hlt
cmp
mov
pop
cmpb
xchg
cmpsb
add
mov
bnd
push
in
jae
pop
dec
xchg
and
clc
lds
sub
gs
pop
ret
jp
add
push
xchg
mov
roll
xor
jle
jecxz
adc
out
cmp
pop
pop
popf
leave
lock
iret
mov
stos
sub
mov
sbb
enter
insb
fdivs
mov
jecxz
sbb
lock
mov
je
insl
stos
in
ljmp
int3
dec
shll
fsub
sti
cld
mov
int
xlat
xchg
cmp
and
pop
adc
lock
scas
fisubl
push
lds
sti
les
test
mov
sbb
test
push
int3
lock
push
jge
rcr
lock
fs
jl
add
or
dec
les
mov
jmp
out
inc
xor
out
mov
inc
dec
js
add
ljmp
mov
xchg
inc
mov
sbb
push
mov
je
sub
les
sbb
mov
aad
cmpl
out
in
notb
sub
xchg
addl
popf
clc
pop
scas
and
dec
pop
jp
mov
push
add
jg
xchg
xor
imul
ljmp
lahf
iret
push
inc
bound
push
mov
out
cs
stos
xchg
sbb
xchg
cmp
negl
and
subb
dec
imul
xor
popf
push
xor
and
jg
and
fsubl
fiadds
roll
mov
mov
inc
movsb
lahf
mov
stos
xor
pop
xor
add
xor
push
pop
mov
jge
xchg
orb
mov
mov
movsl
pop
jns
pop
lret
pop
adc
push
aas
add
pusha
dec
sbb
inc
rolb
roll
loop
mov
pop
dec
ljmpw
rolb
and
xor
aas
cs
clc
inc
xchg
ds
pusha
inc
push
int3
lret
jns
int3
adc
sbb
or
adc
xorl
sar
jmp
inc
inc
push
aad
out
popf
scas
lahf
adc
sub
ret
lcall
or
xchg
xchg
pop
daa
pop
rolb
adc
lods
mov
push
jb
and
into
insb
fsubl
outsb
lahf
xor
lea
xchg
sbb
jae
roll
or
or
xor
scas
gs
or
or
idiv
in
mov
enter
xor
repz
xchg
into
pop
sbb
loop
mov
mov
and
mov
dec
sub
fwait
icebp
bound
call
jl
cld
cmpb
rcrl
xor
lea
xor
push
cltd
das
push
lea
jo
sub
adc
nop
sti
mov
cld
mov
sub
xorl
inc
movsb
sahf
pop
add
jp
rclb
ja
jae
addb
sbb
adc
sbb
addr16
inc
incb
fwait
add
ja
sbb
lock
in
or
inc
or
pop
shl
jno
cmpxchg
xor
inc
movd
mov
push
cmp
and
fstpl
lea
scas
out
add
arpl
lcall
or
adc
or
mov
jge
ja
movsl
inc
xchg
pushf
mov
icebp
sbb
mov
push
jecxz
test
je
iret
and
xor
fsts
sbb
stos
push
outsb
sbb
not
es
addl
lds
out
adc
daa
iret
cmp
nop
jo
arpl
popa
sbb
mov
push
jmp
in
dec
fs
jg
add
fwait
xlat
dec
pop
jmp
pop
push
andb
xor
push
adc
fcom
dec
arpl
mov
scas
fstpt
cmp
mov
or
dec
mov
push
imulb
ffree
sbb
leave
arpl
fstp
mov
stos
pusha
mov
les
stc
or
sbb
xchg
ljmp
adc
sbb
push
sub
mov
fistpll
pop
pop
pop
ja
rorl
movsb
push
cmp
es
xor
inc
outsl
push
dec
jns
push
adc
test
sbb
xlat
ds
in
or
sub
outsb
cli
sti
out
ja
cmp
fldcw
popa
jbe
jg
mov
test
int3
cmpsb
pushf
xor
mov
cmp
and
das
cwtl
add
in
mov
add
ss
push
cld
fisttps
xchg
jbe
pop
push
xor
xchg
mov
sbb
mov
and
aam
out
cmpsb
imul
inc
inc
jne
push
push
xlat
frstor
mov
call
cli
and
adc
pop
into
scas
jns
or
or
iret
aad
mov
push
test
mov
imul
push
push
inc
clc
push
jp
xchg
and
mov
and
or
cmpsb
jmp
mov
adc
sbb
stos
cwtl
sbb
mov
mov
or
fidivrl
push
andl
xchg
lea
add
mov
fs
pusha
dec
cmp
sahf
arpl
xchg
and
xor
mov
sahf
or
aad
mov
xchg
and
in
fsub
shrb
xor
lcall
mov
shrl
or
mov
cltd
xor
lods
enter
scas
cmpsb
lret
out
arpl
mov
outsl
test
mov
mov
es
push
lret
pop
sbb
inc
add
lret
fmulp
out
mov
cmp
ljmp
popf
cwtl
or
movsb
fidivrs
lcall
sets
and
je
aas
testb
bound
mov
ja
js
ficoms
sub
mov
sbb
clc
sbb
inc
rcrl
and
movsl
fcomps
inc
sub
arpl
test
add
iret
push
shll
out
fcmovnbe
aad
jmp
aaa
hlt
ja
jl
inc
pop
ljmp
pop
stos
mov
pusha
fmulp
in
push
push
cltd
mov
or
pop
into
repnz
cmpb
je
sbb
cld
stc
pop
or
lock
pop
shl
out
jmp
adc
leave
adc
jb
pop
xlat
jne
jbe
outsb
hlt
push
adc
clc
sub
cmp
add
inc
mov
mov
std
hlt
decl
and
out
pop
cmp
sub
sarl
mov
lods
pop
mov
sbb
push
aaa
mov
mov
mov
mov
add
sbb
cmp
pop
stos
or
and
gs
xchg
in
or
mov
and
les
cltd
shll
aam
dec
pop
dec
pop
sub
push
mov
imul
or
inc
mov
fiadds
ret
adc
inc
filds
dec
icebp
int
div
loope
mov
fimull
test
push
pop
nop
xor
repnz
lret
cmpb
adc
sbb
int
adc
mov
mov
fisttpll
lret
lock
scas
inc
pop
mov
inc
mov
pusha
or
cmp
fisubrl
cmp
add
lock
bound
mov
jge
nop
mov
xchg
shl
push
in
imul
push
push
out
adc
adc
test
fincstp
push
sub
xchg
mov
ret
xchg
int
out
mov
dec
inc
imul
fwait
negl
imul
mov
in
and
mov
mov
xchg
cltd
shrb
scas
enter
mov
imul
jbe
mov
or
outsl
cmp
jno
sti
xor
dec
fcomps
cmp
push
test
or
mov
sarl
add
inc
bnd
lahf
cmp
stos
stos
cmp
fildll
dec
int3
pop
lret
sub
or
push
in
mov
imul
imul
pop
push
inc
enter
mov
cltd
xchg
inc
mov
mov
popf
xor
push
and
mov
push
jecxz
push
lar
xchg
repz
cmp
stos
or
hlt
gs
and
dec
push
insb
imul
rorb
daa
lret
mov
mov
cltd
loopne
decl
xlat
xor
popf
dec
pop
xlat
mov
push
jnp
push
stos
leave
or
inc
mov
xchg
sbb
mov
fs
lods
sbb
sar
stc
test
pop
mov
adc
sbb
push
pop
dec
cli
hlt
and
andl
fwait
inc
fcom
cmpsl
mov
in
fs
mov
je
imulb
mov
leave
sbbb
fstps
testb
adc
sub
scas
dec
push
call
jge
cmc
ds
shll
jg
jne
pop
jp
xchg
lock
and
lds
lock
arpl
push
or
xlat
inc
xchg
mov
dec
cs
xchg
mov
rorl
repnz
xchg
pushf
fnstsw
ljmp
sbb
repnz
fdivr
es
in
sbb
add
mov
fs
xchg
in
push
jae
xchg
pop
mov
xor
cwtl
cmp
clc
in
sbb
mov
subl
out
inc
add
insl
mov
test
ss
mov
jge
and
imull
push
inc
xchg
incl
or
mov
imul
ret
test
xchg
inc
cld
inc
outsl
mov
jp
sbb
sbb
repnz
out
test
popa
fwait
or
ret
clc
jp
mov
add
mov
or
mov
repz
adc
repz
or
mov
insl
nop
lret
leave
jmp
sub
lds
fwait
out
xchg
push
icebp
arpl
scas
int
insl
xor
add
dec
add
sbb
mull
sub
sarl
mov
rcrb
icebp
iret
shlb
popf
jp
sbb
push
dec
test
mov
pop
sbb
lock
mov
push
in
or
roll
inc
cmpsb
fcoms
fwait
cwtl
test
xchg
add
jmp
dec
pop
pop
jne
xor
rsqrtps
std
jecxz
jmp
xchg
inc
rcl
test
outsb
xor
stc
mov
in
sbb
mov
push
xchg
call
cltd
ss
in
lock
clc
xchg
subb
scas
sahf
repz
ja
jl
int
lea
or
inc
mov
xchg
pop
cmpsl
jbe
sahf
inc
sub
das
es
das
inc
sbb
xor
test
xchg
mov
ret
sbb
pop
pushf
xor
pop
or
cs
outsl
cld
mov
loope
adc
in
sub
dec
xlat
add
sub
rolb
pop
pushf
push
ss
mov
cmp
add
clc
jl
pop
lcall
mov
push
and
add
ja
xlat
das
outsb
mov
in
test
sbb
sub
pop
in
mov
add
lods
cmpsl
pop
mov
cmp
adc
mov
xor
ss
cmpsl
dec
in
test
es
xor
cmp
repnz
mov
xchg
or
call
cmp
mov
pop
repnz
cmp
pop
push
clc
adc
xor
push
cmpsl
dec
xchg
push
shrl
mov
cmpl
icebp
imul
pop
leave
ret
int
std
ret
sbb
adc
mov
mov
test
sahf
cli
xor
lcall
lods
ss
inc
add
mov
cld
inc
add
fstpl
inc
mov
int
cmpsb
xor
dec
fdivrl
mov
adc
sub
les
xchg
inc
xchg
mov
mov
cmp
inc
and
mov
lods
and
cmp
insb
js
fs
inc
push
ljmp
outsb
lret
xlat
stc
adc
loop
pop
pop
sbb
jecxz
dec
xor
xchg
lea
loope
pop
mov
sub
dec
pop
mov
sti
fbld
filds
inc
xchg
mov
inc
cli
and
and
out
popf
fdivp
mov
push
mov
nop
sub
test
es
popf
xchg
pop
add
add
mov
or
sbb
inc
pop
enter
xor
cltd
sub
add
iret
or
mov
sti
leave
and
bound
mov
jo
cmp
cmpsl
leave
cmc
shlb
mov
mov
dec
and
cwtl
clc
lcall
bound
stos
cmp
stos
pop
pop
dec
in
pop
sbbb
ret
mov
loop
mov
shlb
adc
lret
lds
sbb
rolb
test
xchg
or
push
dec
cld
push
xchg
inc
add
and
jbe
or
int
lret
loop
jne
in
rcll
push
inc
ds
stc
dec
bound
pop
dec
push
mov
dec
imul
sahf
cmp
jge
add
sbb
mov
fwait
add
mov
loop
and
add
jg
adc
cwtl
sbb
hlt
push
pop
xorb
enter
mov
lcall
in
cld
aas
add
insl
jno
jecxz
jae
adc
mov
fwait
jne
or
xchg
js
clc
bound
adcb
inc
int3
push
or
cmp
jns
sbbb
into
jl
push
fcomps
add
pushf
lds
pop
outsb
rcll
jae
call
sbb
movsl
sarb
jb
mov
jle
test
add
or
into
mov
imul
pop
dec
fistl
lret
scas
xor
dec
and
add
mov
jg
mov
jmp
mov
inc
shl
dec
mov
std
filds
in
fistps
fcmovbe
imul
jmp
aas
test
gs
and
xchg
fiadds
leave
addr16
mov
int3
outsb
js
repnz
negl
pop
pop
pushf
or
jmp
addr16
jb
mov
sti
jle
sub
mov
push
adc
inc
popf
sub
lret
jmp
mov
fsubrs
mov
in
aaa
mov
cli
loope
or
leave
mov
add
int
lcall
inc
pop
xchg
fcmovbe
std
loop
neg
cmp
xlat
addb
pop
or
mov
add
push
dec
popf
mov
jae
loop
fwait
mov
mov
cltd
pop
call
gs
xchg
add
or
cmp
pop
ljmp
cmc
cwtl
push
adc
popl
jns
subl
add
xor
insl
lock
out
cmpsb
mov
cmp
int
test
xchg
das
dec
xchg
push
dec
push
jg,pn
sbb
clc
imul
mov
push
xchg
xchg
stos
test
shl
xor
pop
scas
push
jbe
les
loope
push
jne
jne
mov
loope
mov
sbb
testl
inc
inc
dec
jl
movsl
jno
cmp
sub
movsb
notl
adc
push
jo
sub
js
push
xor
or
inc
add
stos
test
dec
dec
pop
imulb
adc
rorb
mov
xor
adc
fcomip
jo
mov
rcll
mov
push
iret
xorb
movsl
roll
xchg
mov
stos
dec
paddusw
sbbl
mov
sub
xchg
aaa
rolb
ljmp
mov
inc
sar
pop
add
into
arpl
push
inc
mov
dec
and
into
ljmp
aas
pop
es
lock
dec
scas
dec
push
push
xchg
movsb
in
repnz
mov
xchg
xor
testb
sbb
insb
movl
jp
cmp
dec
pop
pop
in
idiv
orl
shlb
and
loopne
pop
inc
sti
sub
xchg
int
push
pushf
test
cmpsb
daa
pushf
shlb
mov
and
sbb
inc
test
mov
mov
pusha
dec
add
add
mov
rorb
inc
dec
mov
ds
cltd
jno
and
sub
adc
mov
xor
loop
push
inc
mov
stos
and
sub
push
lretw
xchg
cmpsb
loopne
xor
adc
data16
in
push
sub
cmp
aad
push
fcomip
cld
loopne
ret
inc
imull
mov
dec
filds
rsm
adc
or
and
hlt
and
cmpsl
leave
scas
xchg
sub
jg
das
mov
fimull
add
jp
rorb
xor
and
pop
fsts
sbb
sbb
sbb
push
jbe
jae
xor
loope
mov
in
clc
lret
cmpsl
je
stos
jnp
mov
sbb
repz
dec
pop
mov
mov
cli
sbb
es
adc
sbb
jmp
adc
in
cmp
jmp
testl
ret
cmpb
xchg
sub
data16
push
jb
mov
in
mov
cmp
leave
test
or
sub
jg
cmp
jbe
add
stc
jle
into
and
jle
xor
ds
cmp
leave
dec
pop
pop
lea
xor
xor
mov
xchg
or
xor
mov
imul
in
pop
lret
arpl
aad
sub
add
push
jb
loop
and
lret
xorl
or
adc
sub
call
rcrl
out
negb
addl
and
ret
add
stos
mov
mov
lahf
xlat
inc
mov
idivb
push
imul
imul
mov
pop
cli
popa
sub
fistps
lret
jmp
mov
dec
mov
daa
testl
jecxz
jp
popf
inc
sub
mov
mov
sbb
xor
cmp
cmp
mov
pop
xchg
hlt
push
xor
jb
js
dec
iret
sub
pop
pop
cmpsb
pusha
mov
gs
sub
mov
dec
push
push
sti
xchg
roll
jmp
fisttpl
push
xor
scas
mov
pop
lods
pop
jge
sti
loop
inc
mov
out
sub
add
lods
mov
or
stos
lds
cmp
dec
cmovns
dec
fidivs
rcl
movsl
lret
sbb
mov
or
pop
dec
popf
mov
enter
push
jnp
xchg
icebp
inc
fadds
sbb
dec
hlt
sub
jp
jg
mov
and
push
pop
push
movsb
mov
cmp
pushf
fsubrp
sbb
outsb
cmp
xor
sbb
mov
dec
or
neg
dec
lea
dec
and
andb
les
lret
xchg
mov
adc
lcall
test
inc
sti
inc
xchg
int
push
inc
sbb
mov
mov
push
ret
vpcmpgtb
push
lds
into
loop
repnz
repz
movsb
cmpb
out
sbb
inc
hlt
push
and
pop
and
adc
pop
loope
cli
add
inc
pop
inc
pop
imul
inc
ja
push
rol
scas
arpl
subl
outsb
dec
and
movsl
pop
push
in
rorb
adc
sbb
out
mov
fnstsw
or
jae
jp
inc
xor
mov
push
test
pop
inc
daa
add
dec
lods
sub
outsb
xor
inc
dec
or
jmp
subl
shlb
out
push
aam
pop
popl
inc
xchg
push
push
mov
outsb
mov
aad
xchg
movsl
push
sbb
xchg
mul
jo
sub
adc
inc
imul
hlt
adc
xor
movl
mov
and
mov
subl
loop
insb
xorb
inc
mov
add
dec
pop
add
rolb
push
leave
hlt
dec
loope
adc
fistpl
stos
ljmp
push
pusha
fisttpll
addr16
mov
das
out
xchg
lock
push
mov
fcoms
xchg
fsubrl
stc
out
fistpll
rcrl
cld
xor
pop
fsubrl
neg
roll
sbb
pop
and
scas
cmp
lret
ss
jmp
xchg
ret
pop
push
sbb
sub
add
mov
push
pop
or
fnstsw
mov
movsl
nop
ffreep
xor
jl
nop
gs
push
mov
jecxz
cld
mov
cmc
or
add
sbbl
and
stos
sub
cmp
push
inc
jg
jg
adc
js
xchg
mov
jo
push
mov
ljmp
cmc
outsl
add
leave
fbld
pop
add
adc
push
pop
sub
stos
sub
outsb
inc
mov
mov
in
movsb
mov
jmp
mov
imul
mov
sahf
adc
mov
dec
pusha
push
pusha
fstpl
sbb
fisubs
lods
push
dec
cli
or
ja
int
dec
mov
sub
andb
inc
ret
dec
pop
add
or
popa
fistpll
test
inc
mov
lods
jmp
aam
aaa
xchg
out
sbb
mov
xchg
test
lock
and
jb
push
inc
test
adc
test
jl
sbb
jno
jnp
pop
insl
mov
nop
cmp
nop
or
jmp
push
cmc
jne
stos
cld
xor
scas
inc
int
sbb
divl
iret
pusha
push
pop
jp
pop
clc
insl
xchg
fistpll
lret
outsl
dec
add
lea
int3
dec
jb
ja
add
dec
mov
mov
lret
lret
shr
daa
outsl
push
shr
mov
ja
jns
inc
inc
hlt
ds
insb
bound
cmp
es
ret
inc
jo
push
hlt
aam
roll
das
jo
fnstsw
enter
mov
ret
call
out
cmp
nop
pusha
pop
lods
loop
mov
sahf
mov
aad
das
jo
lret
int
cmc
push
inc
inc
cmpsl
ljmp
fimuls
hlt
sub
ds
nop
pop
push
mov
shrd
ljmp
mov
stos
in
push
xchg
cld
fimuls
sbb
arpl
imul
pop
sbb
sbb
cmpsl
or
inc
add
xchg
lods
mull
xorb
lcall
lahf
cs
xchg
cld
or
sub
or
xchg
ret
cmc
stos
cmp
scas
test
cmp
fsubl
dec
sti
push
mov
xchg
and
jle
jns
inc
stos
insb
adc
jne
add
mov
xchg
hlt
jg
jnp
lods
ret
dec
fisubrs
es
mov
pop
pop
into
mov
loope
pop
enter
dec
popa
and
bnd
mov
stos
cwtl
xchg
adc
push
mov
cmp
rcrb
jae
inc
sahf
cwtl
push
lahf
mov
cmp
sbb
jnp
cmp
xchg
aad
fsts
cld
push
mov
jle
pusha
xor
inc
xlat
adc
add
inc
cmp
and
cmpsl
jl
jl
js
shlb
cmpsb
add
xchg
scas
inc
cmp
fstps
or
cld
add
and
and
pop
fisubl
jl
repz
lret
movb
pushf
xchg
inc
xor
and
gs
mov
jg
sub
mov
or
nop
shrb
inc
lret
iret
push
inc
mov
xchg
outsb
fistl
mov
out
ja
xor
add
add
mov
adc
inc
pop
mov
mov
pushf
jle
insl
ret
fdivrs
or
mov
add
cwtl
xor
cs
fldcw
cmp
mov
lods
aam
je
int
sbb
or
or
pusha
aam
lea
adc
adc
lds
sub
stc
scas
iret
es
lahf
push
sub
ljmp
imul
or
xlat
fsubl
into
adc
mov
adc
leave
pop
ret
lret
or
scas
xor
jo
lock
mov
dec
mov
mov
nop
dec
adc
pop
dec
ja
or
sarl
aaa
mov
xchg
xchg
push
xchg
push
imul
stos
dec
fbld
fcmovne
xchg
sbb
leave
push
jge
jns
or
cltd
push
adc
sahf
aad
sahf
cmc
jmp
xlat
adc
rcl
jnp
rorl
add
ds
insb
pop
mov
inc
add
cmp
inc
pop
loopne
sub
aad
das
jmp
or
jae
pop
cli
shll
lds
cmp
sbb
cmp
in
dec
or
sub
test
data16
inc
dec
rcr
and
insl
jl
cwtl
adc
lea
pusha
js
jo
push
xorl
pop
mov
jae
sub
jno
ja
lea
pop
cltd
pop
inc
mov
xor
sub
sub
ja
inc
fs
inc
lcall
daa
aam
mov
lds
mov
les
ret
inc
cmp
mov
pop
sahf
sub
xchg
and
jg
inc
repnz
nop
or
inc
cmpsl
outsb
orb
loopne
jmp
sbb
dec
dec
xchg
shrb
adc
sub
mov
stc
or
dec
adc
or
cmp
push
cmp
xor
sub
jmp
imul
fisubrl
jmp
aad
pop
fsubl
scas
sbb
aaa
aaa
inc
pop
hlt
iret
pop
push
mov
vpmuludq
jbe
jns
test
les
xlat
mov
cmp
mov
dec
stos
ljmp
xchg
xor
sbb
mov
jge
cli
push
rorb
lods
fldl2e
mov
sub
in
inc
das
cmp
loop
push
sub
cmp
and
rcl
int3
mov
icebp
xor
sub
leave
jl
and
into
arpl
sbb
add
into
fwait
addr16
add
ret
popf
std
cmc
adc
rcrb
mov
incl
fmul
xchg
adc
icebp
jecxz
testl
dec
add
jl
xchg
jg
push
jae
sbb
les
pop
mov
cmp
lock
sbb
or
lahf
bound
leave
vmwrite
lret
cmp
xchg
or
testb
bound
ret
sbb
or
inc
jno
lea
rorb
jno
lret
inc
add
mov
dec
ret
push
pop
pushl
add
insl
out
ds
mov
or
push
xor
jnp
pushf
ficomps
and
mov
mov
or
xor
call
add
aam
cmp
pushaw
mov
mov
lock
fldcw
cmpsl
xor
dec
dec
popa
fiaddl
sbb
fs
insb
mov
mov
mov
scas
icebp
mov
call
mov
loopne
mov
mov
lahf
inc
mov
jl
dec
addr16
imul
scas
jne
mov
jg
pop
dec
add
add
cli
out
cmpsb
scas
inc
daa
sahf
mov
insl
lea
popa
sti
les
adc
mov
fdivr
add
xchg
pop
pcmpgtw
mov
test
mov
bound
fsincos
sbb
fmull
shl
cmc
js
out
xor
inc
dec
pop
mov
sub
fs
add
cmpsl
mov
shll
jg
js
addr16
mov
stos
mov
push
and
cmpsb
icebp
mov
pushf
mov
jmp
inc
inc
clc
and
or
lds
jb
scas
or
jmp
clc
pop
popf
out
dec
sub
lea
cltd
and
or
xor
push
rol
ss
rcll
and
push
pushf
lret
mov
movsl
pop
repz
xor
arpl
and
lods
mov
or
ret
fisttps
ret
popa
ror
pop
pop
into
movsb
neg
push
aam
cmp
jae
cmp
dec
sub
cld
les
jge
in
add
sbb
pop
and
ror
sahf
pushf
mov
arpl
popf
scas
sub
outsl
movsl
rcrl
aam
fwait
inc
xor
sti
scas
enter
cmp
out
mov
jae
data16
jne
mov
fsubrs
and
movsl
or
sub
cmpb
ret
inc
push
and
and
push
sti
lock
popa
loope
dec
mov
insl
dec
jg
cmp
aaa
pop
andl
add
jl
push
pop
pop
loop
and
jne
cmp
stc
int
enter
pop
inc
test
xor
cmp
cmp
dec
mov
in
cwtl
add
xchg
push
add
leave
ret
movb
fdivs
les
mov
sbb
call
fdivl
jno
cmp
fadds
aaa
test
lea
iret
and
or
popf
inc
dec
test
xchg
inc
movsb
push
mov
scas
inc
push
subl
xchg
push
aad
dec
cmp
pop
lret
cld
mov
int
test
push
and
movl
push
pushf
bound
xor
xor
jae
fs
xor
js
pop
pop
ds
cld
xchg
adc
cmp
ljmp
mov
sbbb
mov
and
mov
pushl
int3
sub
sub
cmp
fsubrl
cmp
addr16
out
or
pusha
inc
dec
ficompl
inc
int3
imul
out
mov
xchg
div
add
insl
notb
mov
popa
mov
pop
push
cmpsb
push
mov
inc
les
les
cmp
cs
jmp
lods
add
ret
loop
incl
and
mov
mov
shlb
mov
fwait
jo
popa
outsl
lcall
sahf
outsl
and
mov
adc
loope
dec
ljmp
add
ja
inc
or
pop
push
xchg
ret
sub
sahf
in
pop
cmp
xchg
pop
shr
rcrl
push
test
nop
and
push
fldcw
sahf
pop
clc
sbb
mov
aad
adc
mov
scas
insb
jns
rorl
stos
mov
adc
mov
lods
push
outsb
icebp
sti
rcll
incb
lret
fcomip
sbb
inc
cmp
daa
aaa
dec
outsb
mov
sbb
xchg
addl
adc
cltd
inc
or
daa
scas
lcall
mov
jmp
jo
mov
cmpl
or
dec
gs
xchg
addr16
pushl
mov
cmc
fcomp
mov
pop
sbb
in
pop
sub
push
xchg
repz
push
xor
add
lret
xchg
push
test
lods
cltd
adc
push
mov
cs
xor
mov
sarb
mov
push
repnz
dec
push
mov
push
shll
ljmp
scas
sbb
addr16
fsubs
outsl
dec
daa
inc
lea
ret
or
add
sub
xor
shlb
lea
pop
dec
out
or
cld
data16
stos
in
xor
cmp
fidivl
aaa
sub
cmpsb
mov
out
popf
sub
push
xor
add
pop
repnz
test
data16
out
lods
ficoms
addr16
push
mov
jo
push
cmp
sbb
mov
dec
and
pop
cmpsl
mov
mov
inc
xchg
cli
jl
xchg
insb
stos
jle
pop
adc
mov
push
shl
mov
push
into
jl
pop
sbb
ja
push
push
sbb
add
push
cltd
jmp
mov
xlat
sub
fidivrs
push
push
xchg
fldenv
or
jo
push
mov
mov
sub
jb
mov
xor
cltd
jae
les
movsb
addr16
mov
cmp
or
cmpsl
test
jp
dec
pop
mov
mov
int3
pop
mov
xor
pop
jecxz
imull
sub
sub
arpl
sti
xlat
sahf
push
cmp
push
scas
out
inc
xchg
aam
push
pop
sbb
dec
sahf
ss
inc
shl
xlat
cltd
clc
aad
popf
jno
jmp
movsb
leave
fucom
jp
xor
outsb
dec
rclb
shll
int3
lret
sbb
sti
loop
movsb
loopne
arpl
jl
ds
scas
lret
pop
aam
dec
cmp
pop
bswap
jns
push
dec
push
jl
jb
dec
movsb
cwtl
cmp
and
cmp
sub
jns
dec
or
call
fidivl
ja
nop
outsb
jg
jne
stos
fisubl
inc
lret
cld
inc
out
mov
leave
int
inc
stc
sub
mov
int
cmpsb
ret
xor
inc
popf
add
fisttpl
mov
pop
orl
adc
push
pop
out
div
aas
and
inc
iret
orb
inc
lods
fidivl
std
cmp
nop
insb
xchg
in
dec
hlt
and
pop
add
outsl
and
xor
stos
je
pop
or
adc
mov
int3
cmpsb
cmp
xchg
add
repnz
repnz
add
lods
sub
cmp
popf
adc
mov
pop
sbb
div
adc
jecxz
int
in
loop
adc
scas
das
sbb
sub
test
push
pop
subb
lret
outsb
and
dec
xlat
movsb
dec
xchg
and
dec
jp
xor
aaa
inc
imul
popf
and
mul
or
fsubs
or
jle
fisubrl
cwtl
cmp
repnz
jp
push
jnp
arpl
stos
inc
adc
fcmovnu
adc
imul
mov
inc
adc
mov
bound
xor
push
sar
aas
xchg
movsb
fmull
mov
inc
jl
xor
popf
mov
and
dec
fucomp
inc
sar
fnsave
sbb
or
cltd
mov
out
das
into
mov
mov
cmc
mov
out
mov
rorl
fnstsw
adc
das
stos
stos
jae
sub
mov
pop
fldcw
and
push
cmc
fiaddl
mov
push
imul
mov
cmp
sbb
push
inc
push
and
imul
gs
lret
aaa
sahf
roll
insb
in
pushf
adc
lods
lods
cld
bswap
mov
insl
pushf
shll
lods
int
int3
pushf
dec
sbb
shlb
sbb
pop
jne
mov
test
mov
adc
add
sarl
and
fnsetpm(287
js
fwait
mov
mov
in
push
and
push
idivl
pop
fdivs
fwait
jne
cmpsb
iret
lds
movsl
lret
xchg
or
dec
or
popw
add
fwait
cmp
lods
jbe
sub
mov
push
js
push
push
or
xchg
push
pop
es
xor
xorl
gs
xor
dec
movsl
dec
push
sub
xlat
fists
rcl
adc
sti
and
sti
cmp
dec
fdivrs
dec
jl
test
lea
dec
stc
xor
aam
mov
xchg
pusha
aam
mov
lods
inc
sub
in
roll
mov
test
cmpsl
cmp
cmpsl
je
idiv
inc
jecxz
sbb
push
test
xchg
add
and
pop
adc
inc
in
dec
cmp
mov
outsb
imul
jecxz
fstp
lock
jl
mov
cmpsb
push
out
jl
stos
popa
ja
cltd
inc
mov
and
sti
inc
pop
xchg
int3
sbb
xor
insl
add
int
xchg
pop
add
sti
cmp
mov
std
pop
jl
sbb
daa
cli
inc
push
xchg
cmp
or
inc
jp
sbb
pop
mov
push
or
imull
jmp
dec
adc
mov
lds
pushf
mov
add
outsb
mov
stos
mov
fwait
scas
out
sbb
adc
xor
dec
inc
lods
jmp
dec
mov
sbb
add
idivl
or
lahf
lahf
movsb
fwait
es
rorl
repz
pusha
push
add
mov
pop
in
or
mov
aad
loope
inc
rolb
sbb
cltd
cmp
cmpsl
fimull
hlt
or
jl
mov
pop
cmp
inc
push
les
pop
push
push
mov
inc
pop
jp
pop
lea
stc
cmpsl
or
and
icebp
dec
add
dec
mov
push
subl
es
sbb
mov
int3
clc
js
pop
loopne
stos
loopne
iret
lcall
stos
fimuls
push
mov
cmp
xlat
sub
pop
sbb
jae
daa
shll
daa
std
int3
inc
in
in
sub
das
jne
dec
adc
sub
adc
xlat
andl
dec
iret
sarl
add
add
sbbl
cs
cs
enter
add
mov
lods
pop
test
in
mov
scas
dec
push
xchg
inc
push
popa
imul
xchg
mov
addr16
into
xor
cs
test
push
es
cli
or
cld
sbb
sbb
mov
pop
or
aad
push
jle
inc
sti
dec
add
or
xchg
dec
cld
lock
mov
xchg
inc
push
mov
mov
cmc
test
mov
add
addl
mov
or
scas
shufps
lea
jno
or
pop
and
cmp
movsl
icebp
push
cmp
aad
pop
jecxz
mov
jns
test
push
fisttps
shl
mov
cltd
les
mov
xorb
xchg
and
out
notl
lret
lcall
inc
sahf
sbb
repz
mov
addb
stos
jbe
or
pop
cwtl
cmpsl
or
sub
mov
rcll
mov
sbb
add
xchg
clc
pop
ret
pop
popf
cmpsb
lahf
test
movsb
fs
lahf
ret
pop
jne
bound
cmpsl
fists
movsl
add
rcrl
add
adc
aas
and
negb
outsl
notb
or
xchg
inc
push
add
mov
neg
push
sbb
adc
cmp
popf
inc
les
adc
fdivp
test
je
insb
leave
cmp
adc
pop
pusha
clc
clc
cmp
jp
adcl
sbb
out
xor
cltd
pop
int
xchg
bound
popa
xchg
jo
sub
negb
xor
fidivl
cwtl
jb
pushf
test
fldl
ret
imul
insb
data16
inc
jae
jb
fimuls
outsl
into
mov
xor
inc
and
mov
out
jp
je
or
sub
and
adc
in
int3
sbb
push
call
and
out
rcrl
jecxz
cltd
sti
ljmp
rcr
push
or
mov
jmp
clc
adc
inc
dec
add
dec
andl
sub
iret
cmp
push
sbb
sub
sub
push
mov
or
xor
xchg
hlt
push
popa
inc
dec
fstl
bound
jo
sbbb
ja
and
cmpsb
adc
dec
arpl
mov
xchg
icebp
out
xlat
push
test
sub
inc
fstps
cmp
scas
scas
fildl
mov
adc
lret
adc
pop
add
shrb
inc
sub
pop
movsb
test
pusha
imul
lcall
dec
add
sub
imul
fwait
aad
sub
aaa
cli
arpl
sbb
mov
data16
lods
pop
xor
adc
jmp
mov
fucom
push
insb
fisubl
stc
add
pop
mov
add
aam
fmuls
daa
add
jp
lahf
pop
ret
cmp
sbb
mov
jmp
or
bound
out
push
xor
es
lret
push
pop
mov
pop
imul
sub
pop
popa
lret
xlat
adc
pop
ret
scas
add
fwait
mov
adc
mov
std
jle
and
icebp
inc
lcall
fbstp
fisttpll
arpl
push
jnp
jno
add
iret
adc
daa
xchg
es
cmpsl
adc
pushf
sbb
jbe
insl
jnp
cmpsl
xchg
adc
call
mov
pop
int
test
gs
sub
cmp
pop
mov
scas
rclb
pusha
pop
xchg
fs
aaa
xor
fsubr
je
adc
std
je
push
xchg
aad
inc
repnz
add
jmp
mov
imul
dec
jo
xlat
mov
movsb
scas
cmp
std
insl
sahf
or
in
xor
dec
sub
mov
loop
iret
xor
fidivs
sahf
sbb
dec
in
xchg
mov
test
inc
push
jge
mov
mov
jb
popf
xchg
lea
movsl
adc
mov
jbe
push
sub
dec
xorl
mov
std
dec
std
cmp
push
into
jne
test
jb
xor
jp
cwtl
bnd
je
daa
cld
cmp
fwait
adc
inc
xlat
xchg
fstpl
add
pop
cmpsl
mov
fs
jl
jb
aas
mov
cmp
mov
cmc
fwait
movsb
pushl
sub
inc
adc
jge
push
loope
add
jb
jg
sub
fsubrp
loop
leave
arpl
lock
mov
inc
adc
mov
and
filds
int
pop
out
mov
rcl
shr
dec
movsl
lret
adc
mov
das
mov
mov
jg
push
cld
jno
jno
arpl
aaa
out
or
les
sbb
sub
pop
mov
std
sub
cwtl
xor
fists
xor
push
xor
imul
dec
fs
or
clc
outsl
mov
dec
rorl
scas
push
xchg
dec
jp
xchg
repnz
fildl
mov
mov
jp
pop
add
int3
cmp
mov
adc
adc
fdivrl
iret
popa
adc
xorb
out
cs
sbb
push
fistpl
push
xor
mov
xor
insl
mov
movsl
cmc
mov
mov
fcoms
mov
inc
mov
push
fidivs
lret
icebp
aaa
cld
push
jbe
jle
gs
cmp
lock
imul
and
js
mov
hlt
sti
inc
add
cmp
dec
int3
out
add
push
fsub
pop
ret
mov
ffreep
xor
iret
add
ja
and
movsl
aam
mov
mov
test
call
mov
xor
ret
xchg
mov
jne
mov
xchg
sbb
push
dec
mov
sub
vmovaps
test
xchg
adc
push
stos
add
lret
cmp
add
cli
pop
loop
cmp
icebp
add
imul
or
call
inc
lret
cwtl
or
ret
insl
imul
xor
rcrl
pop
cmp
roll
cli
sbb
jnp
add
jae
cmpb
mov
and
push
pushf
mov
sar
sub
and
daa
and
fstpt
pop
mov
fistl
xor
or
jae
or
in
inc
jmp
dec
mov
push
push
inc
enter
xor
lret
icebp
and
sahf
dec
das
repnz
jmp
dec
add
gs
notl
mov
rcrb
scas
les
cmp
popf
in
add
dec
popl
push
sub
dec
jns
mov
scas
or
push
scas
sub
fldl
sbb
negb
and
sub
outsb
outsl
fnsave
js
jl
sub
out
xor
aas
pop
data16
fldcw
sahf
and
fsub
pop
lret
call
clc
das
adc
sarl
push
inc
jecxz
int
adc
enter
or
push
pop
sub
xchg
pop
adc
icebp
sub
fwait
scas
rorb
lret
cmp
icebp
mov
jg
andps
jmp
cltd
call
lock
mov
or
jmp
or
sub
pop
ljmp
push
sbb
movsb
mov
mov
pop
loop
int3
mov
sbb
insl
pop
leave
sbbl
icebp
mov
inc
ror
mov
ja
in
ret
insb
jne
cmp
cld
xor
insl
pop
xor
or
xor
mov
push
lds
bnd
sbb
cmp
sub
jg
mov
or
lcall
popa
out
imul
fstl
incb
or
dec
xchg
jno
mov
repnz
pop
mov
mov
shrb
adc
jge
sbb
js
insl
fbld
out
fldenv
int3
aad
xchg
jmp
xor
jb
jb
leave
shll
pop
sbb
pop
inc
inc
pop
push
xchg
stos
mov
aam
mov
xchg
cmc
push
fbld
mov
movsb
jae
add
loopne
repz
repnz
dec
rcl
cwtl
add
insl
sub
sub
or
cmp
jb
adc
mov
jl
loopne
aad
fbstp
int
arpl
lea
dec
jmp
repnz
cmp
inc
xchg
push
lea
stos
jb
dec
cmpsl
pop
xchg
mov
arpl
and
stc
xor
in
add
inc
add
push
pop
rclb
mov
xchg
lods
push
int
add
add
pop
mov
mov
cltd
or
or
out
and
add
hlt
mov
dec
jl
xor
lods
push
cmp
jmp
loop
cmp
push
adc
cmp
scas
and
mov
enter
mov
mov
sub
dec
or
mov
gs
xchg
imul
pop
fs
dec
shrb
in
sbb
inc
xchg
push
test
and
add
xor
mov
sub
dec
insb
and
loopne
mov
dec
popf
daa
sbb
shlb
lods
sub
stos
push
fstpl
leave
sbb
push
psubsw
push
mov
aas
push
pusha
rol
popf
jbe
jp
jmp
sub
jmp
push
or
mov
push
sbb
lods
mov
add
xchg
in
lret
je,pt
xchg
pop
add
and
jmp
inc
fmull
sti
jne
adc
jo
pop
loop
xor
sbb
and
mov
cmpl
loop
in
fcmovbe
xchg
addl
jl
mov
pop
jbe
and
cmp
dec
mov
hlt
xorb
lods
rol
mov
mov
insb
jnp
jl
xchg
imul
add
xchg
fmuls
lods
adc
inc
lahf
movl
dec
xor
jbe
add
mov
int
pop
and
xor
push
pop
add
jge
jl
push
push
and
mov
fisubrl
out
inc
cmp
dec
xchg
sahf
inc
xlat
adc
movsl
test
repnz
jle
out
mov
loop
loop
repz
inc
mov
insb
adc
sub
loope
inc
sbb
std
andb
push
leave
lret
dec
fmuls
out
jnp
adc
add
sbb
xchg
sub
or
mov
jns
jns
jge
add
cmp
sub
push
jns
loope
or
outsb
push
in
jo
xchg
and
lahf
out
test
fwait
bound
enter
in
mov
push
xchg
pop
pop
or
pop
pop
pop
adc
pop
jae
or
rcrl
jle
mov
mov
dec
clc
pop
cmp
flds
sbb
lock
xchg
into
das
jp
icebp
mov
and
jns
sub
mov
rolb
shrl
dec
jne
out
pop
add
jno
sub
sub
jg
es
punpckhbw
sti
cli
faddl
in
divl
das
arpl
out
loopne
add
mov
test
stos
or
adc
scas
test
push
cmp
xchg
subl
and
test
push
mov
enter
xor
sbb
mov
in
mov
repz
orb
sbb
cmp
xor
lods
mov
out
dec
sub
lods
loop
insl
cmp
dec
push
mov
push
gs
xor
dec
stc
rcll
or
mov
mov
shrl
dec
mov
and
cmp
lock
aad
push
adc
jp
dec
mov
mov
inc
jmp
xchg
in
jns
lea
inc
or
lock
daa
cs
ficoms
incb
jne
and
bound
ficompl
les
push
xchg
jae
imul
into
fistpl
mov
outsl
outsl
add
inc
adc
jnp
or
aam
push
testl
pop
inc
daa
iret
incb
out
jno
pushf
sbb
cmp
cmp
jecxz
xchg
cmp
cwtl
repnz
bound
mov
mov
insb
sub
add
xchg
lahf
or
ficomps
outsl
test
mov
js
cmc
js
je
adc
dec
ljmp
push
sbb
jne
and
enter
icebp
in
lods
push
enter
movsl
mov
insb
dec
rcrl
fsubrs
sbb
ljmp
lret
sub
es
mov
scas
jo
fsubrp
jnp
mov
xchg
sub
jno
dec
das
or
fildl
into
push
mov
push
xorl
std
push
dec
pop
ret
ja
cltd
mov
movsb
dec
adc
and
inc
pop
adc
stos
arpl
out
popa
add
xlat
imulb
fwait
repnz
enter
cmp
or
loopne
dec
in
out
test
lods
out
out
aaa
push
cmp
push
cli
gs
andl
inc
and
add
cmp
int
ret
cmpsl
insb
jno
scas
push
mov
push
inc
sbb
cmp
frstpm(287
das
jb
cmp
outsb
bound
pop
scas
sub
es
xchg
and
insl
pop
mov
mov
mov
popa
ret
out
bound
in
mov
dec
mov
jae
jmp
shll
jbe
sbb
popa
aaa
lds
lret
es
enter
add
jecxz
xchg
or
fbstp
pop
jns
pop
out
cmpsl
adc
jae
jno
pop
jae
pop
add
arpl
addl
xchg
pop
rclb
cmp
jne
adc
lods
xchg
pop
and
inc
mov
mov
fbstp
inc
sub
or
mov
dec
std
shll
inc
into
xlat
xchg
stos
inc
jbe
ret
push
sbb
sbb
out
sub
push
or
aas
inc
pop
push
pop
mov
inc
into
push
inc
ret
loope
or
xor
and
in
sbbb
sbb
jp
js
mov
mov
mov
cli
sub
stos
and
cmpsb
adc
add
hlt
pop
repnz
push
dec
lock
mov
pusha
iret
mov
jecxz
movsb
and
arpl
int3
xlat
adc
enter
roll
inc
ficomps
sbb
test
sbbb
sti
mov
push
xor
jl
push
pusha
call
movq
push
adc
or
or
addr16
mov
sti
inc
test
jp
call
mov
push
mov
cmp
cwtl
mov
and
sub
lret
addr16
sbb
enterw
jo
hlt
sbb
dec
iret
out
outsl
nop
push
jmp
mov
aad
push
sbb
jb
popf
movsb
pop
and
dec
scas
xor
jne
inc
mov
std
push
mov
dec
or
mov
dec
ret
insl
es
jno
test
inc
jp
push
test
ja
add
sub
push
jmp
dec
jmp
mov
dec
dec
sub
mov
fistpll
inc
inc
sub
arpl
mov
or
xor
inc
xlat
mov
jne
adc
ret
sbb
fwait
das
cld
pop
daa
test
daa
jmp
cmp
imul
xor
testb
dec
test
jno
sbbb
mov
sub
inc
decb
xor
sub
fst
out
daa
ja
mov
jle
and
push
std
fstpl
xor
sarl
xlat
mov
add
jno
cmp
xorb
stos
sbb
cmp
adc
mov
and
dec
cmpl
mov
add
ss
int3
lds
jl
ja
orl
push
xchg
aas
mov
test
xchg
mov
sbb
push
les
frstor
movsb
loope
dec
sarb
sbb
rcrl
stos
mov
mov
dec
mov
xchg
pushfw
dec
stos
push
mov
mov
jl
mov
test
and
movl
aad
cltd
inc
adc
or
mov
test
fcoms
jecxz
cmp
cld
out
in
ret
xor
mov
xor
fcoms
jle
popf
rcrl
push
fistpll
add
repnz
fsubrl
sbb
fadd
sub
pop
xor
mov
mov
ret
xchg
sbb
outsl
mov
jmp
cmp
pop
shrl
sahf
mov
jmp
jmp
popa
mov
or
iret
xchg
xchg
sbb
push
aam
or
fcoml
jb
xchg
popf
int
or
mov
decl
repz
loop
xlat
or
mov
cld
add
push
xchg
jno
mov
xchg
arpl
sahf
dec
sbb
aam
add
dec
pop
mov
out
ret
jmp
jb
jge
stos
nop
jnp
inc
sub
xchg
shlb
jl
mov
mov
pop
insb
in
push
ds
out
or
cmp
mov
push
gs
lret
daa
adc
mov
pusha
sub
enter
cmp
bound
lods
or
mov
mov
xor
stos
adc
insl
jnp
movsb
cmp
ja
add
les
mov
cld
jl
js
out
or
bound
xchg
loop
rcrb
test
dec
push
fs
addr16
or
hlt
dec
fiaddl
and
lret
cmp
ja
les
mov
cmp
mov
sbb
mov
aam
sarl
bound
pop
inc
stos
mov
cmpsb
aad
sub
pop
or
pop
mov
andl
shlb
movsl
adc
mov
popf
ljmp
mov
roll
rorl
data16
mov
and
jae
dec
ss
dec
add
cmc
leave
xchg
aam
ficompl
lods
pop
adc
push
add
scas
mov
aaa
add
ja
xlat
imul
es
inc
adc
push
loop
sahf
xor
out
dec
scas
lods
daa
mov
mulb
sub
cmp
call
mov
xlat
jne
popf
mov
std
fisttpll
ret
repz
cmp
pushl
jle
jb
sub
jo
iret
pushf
cmp
and
fisubs
sub
ret
nop
push
pop
push
jecxz
gs
aam
incl
and
loope
roll
mov
pop
outsb
shr
js
popa
lcall
lcall
in
add
lcall
dec
mov
adc
pop
test
insl
imul
jae
dec
pop
xchg
pushf
jb
sbb
insb
aaa
cmp
loop
popl
lods
mov
sub
cmp
or
leave
data16
xor
jle
sbb
fwait
jp
mov
xchg
mov
mov
push
mov
insb
sub
imul
or
xchg
int
bound
push
add
adc
movsb
xchg
push
cmp
adc
ret
add
jae
pusha
jno
fcoms
out
xor
clc
dec
cmpsl
aad
pop
cmc
adc
cmp
js
scas
stos
stos
enter
das
pushf
pop
shlb
or
add
xchg
pop
inc
jmp
lock
mov
subb
leave
push
lods
and
cli
aas
mov
into
dec
cmp
sbb
dec
mov
inc
pop
out
sarl
ret
arpl
mov
movsl
es
pop
jmp
mov
mov
aaa
dec
xchg
jmp
cmpsl
sti
ljmp
outsl
enter
xorl
push
sbbl
loopne
jp
adc
and
or
hlt
test
arpl
sub
inc
popf
or
push
mov
jp
inc
test
pop
call
sarl
xchg
adc
jnp
dec
mov
xchg
sub
mov
jae
sahf
adc
mov
ja
nop
shlb
fsubrp
ret
push
lret
sbb
insb
add
mov
out
jg
jle
mov
clc
insl
out
stos
inc
int
xlat
scas
xor
outsl
ret
inc
xchg
and
cltd
int
insb
sub
push
xor
aaa
jb
stos
jae
mov
ret
mov
ljmp
subl
out
mov
out
out
xor
mov
iret
cmc
imul
ja
mov
dec
sub
mov
and
adc
push
hlt
bound
iret
into
add
rolb
sbb
adc
push
sbb
enter
mov
cltd
pop
inc
cli
sbb
pop
test
mov
push
mov
mov
fs
out
mov
add
sub
dec
ret
add
xchg
add
nop
jns
lods
or
std
loop
in
inc
mov
mov
xor
scas
add
xorl
jp
repz
loope
mov
cltd
jge
push
push
test
and
sub
cmpsb
push
fs
xchg
pop
loop
popa
mov
adc
jmp
inc
aad
dec
or
adc
ret
cmp
or
jns
lret
in
aaa
xor
stos
cmp
xor
mov
shll
dec
push
mov
nop
mov
sbb
sub
les
ss
jno
mov
ss
push
arpl
dec
mov
sbb
adc
pop
jmp
adc
aas
push
mov
jne
ret
xor
gs
loope
fldln2
pop
repnz
out
cmp
jmp
xchg
jl
jnp
mov
xchg
lods
aaa
xor
call
inc
and
adc
jmp
adc
pusha
cli
clc
nop
push
rclb
lock
test
aas
mov
out
sub
sahf
lock
imul
lock
inc
cli
mov
aam
pusha
fimuls
loop
shrb
data16
pop
lock
jge
xor
sbb
pop
inc
test
jg
push
imul
scas
leave
xchg
or
mov
mov
add
out
stos
pop
mov
data16
inc
pop
test
bound
ror
inc
enter
or
cmp
je
cmp
test
and
addb
add
movsb
inc
jnp
dec
mov
lds
inc
jecxz
mov
insb
mov
inc
xor
leave
repnz
shrb
pushf
ror
ss
rclb
clc
inc
push
sar
sub
add
adc
out
cmc
addr16
cli
inc
mov
push
pop
sar
xchg
jae
adc
cwtl
push
lret
cld
or
nop
xchg
sahf
sbb
push
adc
push
and
sub
mov
add
lods
repnz
out
cwtl
test
xor
push
loop
push
andb
cmp
push
ss
fstps
repnz
in
aaa
movups
call
lret
mov
push
test
push
jl
xchg
inc
ljmp
xor
dec
xlat
adc
pop
sub
gs
xchg
or
sub
gs
add
mov
insl
mov
lahf
jmp
sbb
jle
shrl
push
out
add
xchg
and
mov
cmc
push
push
out
je
fidivrl
test
or
outsl
std
movb
cwtl
mov
cmp
dec
pop
add
pusha
lret
add
adc
adc
jl
push
jp
lahf
mov
sub
fisubrl
ret
push
jle
xchg
pop
sbb
dec
cmc
cmc
or
jecxz
xchg
jno
mov
jp
or
loope
add
add
inc
inc
out
dec
je
mov
mov
faddp
or
add
test
jns
or
scas
jl
es
lds
insb
inc
out
sbb
push
xchg
out
dec
dec
fdivp
xor
bnd
ljmp
data16
jae
mov
pop
je
mov
call
jo
pop
testb
adc
jmp
jo
aaa
or
or
or
ret
jg
fs
push
test
mov
push
cmp
ja
arpl
sub
xor
cli
stos
hlt
imul
dec
adc
xchg
jno
lret
roll
or
sarb
bound
in
cmp
sti
subl
lods
xor
pop
push
nop
cmpsb
insb
push
sbb
into
add
push
inc
je
andnps
ljmp
ds
iret
xor
into
push
mov
scas
test
sbb
idiv
pushf
test
or
sbb
push
and
or
movb
sbb
es
jmp
and
into
mov
ret
xor
xchg
dec
test
sahf
push
bnd
cltd
and
pop
jle
and
mov
or
add
fbld
adc
cmpsl
jge
adc
mov
dec
sub
sbb
xchg
sarl
mov
popf
xchg
lcall
popl
adc
xor
adc
jmp
jb
mov
adc
rcrb
leave
out
mov
jmp
aaa
mov
testb
jo
ret
jb
push
push
ljmp
sub
xor
jno
jns
pop
scas
gs
jle
xchg
push
in
mov
mov
jne
jecxz
or
les
xor
inc
mov
and
inc
stos
push
insb
in
mov
loope
jp
cwtl
or
outsl
push
and
or
pop
jo
adc
jg
sti
out
xchg
iret
sub
jmp
mov
sbb
dec
sub
test
mov
in
fldenv
jnp
popf
out
gs
scas
mov
and
pop
stos
inc
and
shlb
push
pop
push
jg
lret
ss
ret
dec
test
movsb
imul
flds
js
or
cmc
push
aad
jmp
fdivrl
loope
clc
ja
mov
sti
call
shll
add
nop
lods
test
fidivrl
add
ss
mov
add
mov
es
cmp
and
lods
jp
pop
jb
mov
sub
pop
dec
xchg
inc
mov
mov
mov
sub
idiv
sarb
mov
push
lods
jb
jo
aam
in
adc
inc
imul
adc
aam
jl
and
aam
shll
iret
dec
mov
dec
xor
pushf
imul
pop
sub
adc
add
xchg
adc
cmp
sbb
push
loope
andl
dec
sbb
in
adc
jge
mov
das
shlb
cmc
add
cwtl
mov
stc
faddl
rcl
leave
push
les
loope
lods
mov
sbb
pusha
cmp
and
adc
mov
add
enter
jno
cwtl
ss
in
das
pop
pop
fisubl
mov
ret
hlt
fwait
adc
std
push
push
cltd
outsl
je
inc
inc
push
dec
jno
orl
mov
iret
lret
fistpll
imul
inc
scas
sub
shr
lods
cmp
pusha
int
fcomp
les
in
push
push
je
xlat
push
mov
cmp
add
lret
jmp
mov
aam
pusha
jno
arpl
inc
adc
fsubs
adc
pop
dec
sub
and
and
shll
sbb
adc
cs
in
or
out
lea
adc
dec
imul
or
inc
lea
jecxz
fsubr
xchg
in
in
lret
push
cmpsl
mov
push
or
mov
push
les
cmp
cmpsl
les
xor
aam
jno
jo
xchg
push
push
enter
in
sub
adc
jns
inc
test
sub
adc
or
enter
fldt
inc
in
xchg
sbb
or
jle
es
andb
clc
xor
aas
iret
pop
cmp
sbb
mov
cld
lods
aam
sbb
hlt
dec
xchg
and
xchg
or
pop
int
xor
sarb
ja
inc
leave
shl
xchg
in
stos
lahf
add
aad
add
and
test
addl
mov
pushf
sub
push
shrb
adcl
mov
div
and
jbe
ja
pop
cmpsl
cmp
mov
fmull
adc
addl
mov
fistps
hlt
in
pop
stos
push
jle
jle
aad
jg
or
push
xchg
mov
pop
adc
subl
jae
cltd
mov
in
lods
jnp,pn
mov
cmp
cwtl
xor
iret
jmp
pop
loopne
sahf
pop
bound
incb
rcrl
or
xchg
jo
scas
addr16
sti
arpl
rcrb
icebp
mov
aaa
jmp
and
jnp
adcb
xchg
fistps
add
xchg
or
xchg
scas
loop
ss
lods
push
add
jl
mov
push
ljmp
adc
pusha
dec
xor
xchg
lock
mov
fmull
fimuls
das
daa
test
and
xor
sbb
fisttpl
mov
fsubrl
sub
hlt
sbb
inc
push
dec
jne
cmova
lds
pop
mov
rorb
xor
cmp
dec
out
inc
push
cld
jnp
daa
sub
xor
adc
adc
xor
fidivrl
outsl
into
in
sbb
fs
sub
add
fisubs
mov
cmp
jge
popa
andb
mov
movsb
icebp
sub
pop
xchg
movsl
dec
xor
rcrl
cmp
pop
stc
lods
and
fstps
popl
lcall
aaa
push
fwait
fwait
cmp
mov
stos
xor
cltd
push
imulb
pop
jmp
out
xchg
adc
dec
and
vdivps
cmp
popa
sbb
adc
insb
push
jae
cmp
dec
test
adc
es
leave
push
mov
xchg
push
out
shlb
je,pt
mov
popf
jns
jmp
cmp
xchg
sub
sbb
loopne
int
sbb
sub
loope
xchg
inc
mov
or
xchg
sub
bound
sbb
lcall
mov
imul
mov
icebp
out
mov
ret
mov
aad
jnp
mov
jnp
arpl
and
in
leave
cmc
mov
repnz
add
sub
scas
movsb
cmc
lea
ss
data16
mov
aam
xlat
hlt
jecxz
mov
or
jle
mov
cmp
dec
jp
mov
xchg
xor
xchg
xchg
enter
fsubrl
jge
cmp
mov
pop
es
in
dec
mov
pop
or
mov
add
mov
sti
movsl
xor
fists
loop
dec
sbbl
mov
ret
and
xor
sub
mov
dec
push
lods
push
hlt
adc
mov
hlt
adc
jmp
lds
sbbl
jo
out
in
jmp
fdivl
and
fisttpll
lahf
mov
insb
push
cmp
stc
cmp
vmovaps
dec
or
jmp
and
repnz
sub
jmp
addl
mov
sbb
pop
arpl
push
pop
add
sbb
cmp
or
fwait
push
or
cltd
jl
pop
adc
adc
sub
and
pop
mov
repnz
jp
aad
loope
mov
add
lods
fiadds
jle
call
fnstcw
jnp
push
and
add
mull
mov
sahf
xchg
das
ret
lock
inc
adc
sub
cmc
jg
push
clc
and
sbb
jbe
stos
es
adc
pop
stc
test
ds
mov
lods
add
out
das
fisubl
sbb
xor
loopne
mov
and
pop
mov
jns
scas
scas
add
cmp
cmp
popf
and
lret
xor
fwait
mov
dec
clc
xor
xchg
dec
or
das
jmp
xchg
xor
adc
cli
push
or
outsl
sub
inc
push
xlat
mov
jns
out
fisubl
push
inc
or
lahf
pop
stos
push
push
or
arpl
inc
mov
push
lods
xchg
dec
lcall
mov
xchg
gs
dec
stc
fisubl
ja
jle
cld
xchg
pop
add
aas
pop
push
mov
xchg
leave
adc
xor
mov
jae
mov
mov
popf
insb
mov
dec
pushf
cli
movsl
jle
pop
addr16
push
jno
push
scas
dec
pop
sahf
push
mov
xchg
pop
mov
pop
sub
ljmp
jl
lahf
jg
mov
hlt
js
cld
inc
cmpl
les
adc
push
sbb
push
mov
ss
lods
and
dec
push
mov
push
dec
std
mov
mov
xor
fdivr
mov
sbb
cld
xchg
mov
lods
jecxz
mov
cmpsl
xor
xchg
mov
or
test
cmpsb
lods
popf
inc
jne
cmc
and
jne
and
fstpl
push
stc
and
pop
outsb
iret
ficoms
insl
mov
imul
push
loope
sub
jecxz
popf
cmp
int
aam
cmpb
jmp
stos
nop
ficompl
xor
je
lcall
adc
cmp
jno
nop
movsl
pop
mov
fstp
jmp
jmp
loope
enter
in
pop
pop
pop
dec
clc
neg
pmaxsw
push
orl
dec
sti
das
dec
data16
ds
and
mov
sub
fadds
xchg
mov
loope
mov
add
ljmp
out
mov
stos
push
mov
pop
pop
sbbb
jo
mov
dec
jge
pop
push
dec
dec
dec
mov
push
into
and
nop
push
push
mov
jae
mov
jmp
sti
ffreep
shlb
push
xchg
xchg
inc
lret
mov
xchg
push
xchg
js
pop
pop
hlt
icebp
push
in
cltd
and
outsb
pop
cmp
in
inc
loopne
out
aas
pop
fmuls
cmp
es
sbb
aas
icebp
dec
imul
mov
mov
test
pushf
xor
mov
pop
jnp
filds
and
fldcw
repz
mov
xchg
lea
push
insb
add
shrl
imul
das
fiadds
mov
cmc
std
jbe
jle
push
cwtl
xchg
icebp
call
push
push
dec
clc
pop
ret
addr16
scas
sti
pusha
inc
rorl
call
sub
sbb
jmp
loope
xor
sti
cmp
ret
xchg
jb
xlat
add
into
lods
or
aad
ljmp
or
pop
push
pop
add
mov
rcrl
out
sbb
sbb
in
jnp
enter
push
xor
jecxz
push
and
lea
fs
jno
test
sbb
ret
mov
sbb
and
div
lods
mov
jmp
and
mov
mov
test
jno
jg
sub
fistpl
sub
or
sti
int3
out
ret
inc
xchg
out
sahf
push
jns
pop
inc
xchg
inc
push
push
sub
or
into
jae
or
jecxz
pop
fstl
sbb
xchg
mov
test
cli
cwtl
hlt
dec
mov
fidivrl
pop
push
sub
je
push
imul
aaa
mov
test
lret
push
loope
movsl
lcall
fwait
rclb
jl
dec
pop
insl
jo
rolb
pop
sbb
push
into
cmc
xor
mov
and
ljmp
inc
cmp
aas
adc
pusha
add
popa
xchg
mov
inc
mov
lods
inc
xor
adc
mov
int
adc
inc
bound
adc
icebp
xor
sbb
mov
outsb
mov
test
dec
sbb
or
in
mov
dec
xchg
roll
in
add
mov
cmp
addb
lret
add
jb
jo
iret
mov
aas
loope
jne
and
sahf
mov
test
dec
cmp
jae
gs
out
pop
repnz
dec
pop
leave
aaa
ja
mov
inc
pop
push
std
mov
xor
xchg
insl
ficoml
repnz
or
sub
sub
jg
test
cmpsb
jno
sbb
add
fisubrs
popa
jp
mov
popa
or
pop
rcr
xor
push
cmp
xchg
scas
push
dec
aad
dec
aad
push
out
xchg
jae
loop
pop
add
cltd
add
inc
mov
push
pop
inc
push
in
test
jmp
sub
inc
int3
xor
nop
sbb
jmp
mov
sub
sub
int3
inc
xor
xchg
push
outsl
cs
addr16
xchg
ds
add
jp
xor
add
inc
dec
cmpsl
cmp
je
adc
cmp
leave
adc
cmp
incb
cmpsl
push
shll
push
daa
shl
fbld
sahf
add
jp
mov
cld
xor
sbb
or
mov
mov
and
in
iret
popf
cmp
jnp
ss
mov
jp
adc
pop
loope
insb
lods
test
cltd
mov
dec
xchg
or
or
dec
xor
shl
lahf
lret
imul
pop
jne
inc
mov
fdiv
pop
jo
fwait
addr16
sbb
adc
fsts
push
leave
jno
pop
mov
in
jmp
mov
aas
pop
xchg
lret
in
lods
stos
inc
sub
cmpl
mov
fcmovnb
es
fwait
iret
lea
and
aam
inc
mov
lds
jne
mov
loopne
and
and
cld
incb
shrl
dec
and
jmp
sbb
jmp
pop
enter
and
outsl
rcrb
cmpsl
movsl
adc
xor
jl
xchg
pop
inc
push
out
pop
mov
add
stos
push
lahf
dec
stos
loope
jns
inc
ja
xchg
ret
xor
repnz
loopne
sub
pop
mov
adc
xchg
stos
dec
dec
or
mov
cmc
ja
xchg
stc
jnp
hlt
mov
jo
mov
sti
call
push
clc
mov
out
push
inc
in
dec
out
jbe
leave
js
sahf
sub
dec
sub
jp
sti
pop
aad
imul
lahf
push
jb
and
fs
mov
add
sub
or
jne
jbe
xor
into
mov
adc
adc
scas
or
imull
xorb
imul
inc
fisttpll
adc
je
in
cmp
dec
stc
sahf
jecxz
pop
pop
test
adc
push
data16
push
into
adc
in
add
rcll
push
out
movsb
call
jg
mov
push
dec
push
daa
jge
out
push
loop
sbb
mov
ja
sbb
jl
xor
in
add
das
sti
stos
aam
repz
leave
sbb
mov
test
stos
push
xlat
inc
dec
mov
out
xchg
mov
pushf
push
sbb
or
test
cmpb
fs
cmc
adcl
out
pop
mov
push
sub
dec
push
mov
aas
rcrb
fdivs
ret
fst
cmpsb
sbb
push
mov
filds
addb
push
dec
mov
test
sti
xlat
scas
sub
sub
cmp
pop
imul
xchg
inc
push
scas
inc
push
add
or
sub
inc
cmpsb
je
popf
xrelease
push
push
inc
scas
push
jecxz
out
ds
inc
arpl
icebp
scas
add
push
in
out
aas
push
and
mov
jnp
fidivs
mov
lahf
fsts
in
shlb
lds
mov
decb
cwtl
es
cmp
aas
test
push
jecxz
mov
or
mov
pop
je
cmp
repnz
loopne
mov
or
inc
shrb
and
xchg
adc
popf
lods
ret
mov
sbb
rorl
mov
fs
jmp
sub
sbb
out
js
fstpl
mov
sbbb
andl
jl
mov
mov
outsl
out
int3
or
dec
lea
lods
push
in
push
sbb
arpl
cmc
sbb
out
rcr
shrb
in
repnz
sbb
and
pop
shll
fidivrl
cmp
add
push
and
xor
cwtl
enter
gs
adc
pushf
aam
pop
enter
cmp
addr16
pop
lods
popf
cmp
imul
sbb
in
rorl
test
sbb
out
inc
pop
lock
in
cwtl
stos
repnz
in
insb
mov
idivl
pop
or
in
mov
lds
and
fucomip
jno
xchg
jecxz
xchg
cwtl
pop
fiaddl
mov
nop
push
sbb
cmp
cmp
pop
xchg
add
roll
add
lock
pop
cmc
add
inc
xor
insl
adc
mov
test
leave
jl
adc
lea
stos
repnz
dec
cli
arpl
lea
cmpsb
test
and
xchg
je
and
popf
or
dec
arpl
xor
fsubs
jbe
adc
das
mov
xchg
cld
jae
ret
sbb
imul
iret
cmp
xor
and
out
aam
push
jmp
inc
push
shl
lret
jmp
je
jle
aam
pop
fisttps
adc
or
loop
std
cli
pushf
xchg
pusha
insl
out
mov
stos
lock
lods
pop
mov
inc
into
lods
xor
and
xchg
stos
jno
icebp
cmc
or
fxam
test
xchg
push
fdivrs
outsl
test
sub
or
mov
mov
push
adc
es
pushf
orl
pop
pop
popf
aam
pop
and
enter
mov
cmp
xchg
iret
enter
jge
enter
in
sub
adc
in
sbb
sbb
xchg
sub
cld
test
fcmovu
adc
pushf
outsl
std
cmc
inc
js
decl
push
xorb
mov
idivb
sbb
mov
bnd
loopne
scas
clc
repnz
lods
hlt
dec
inc
fldl
xor
jbe,pn
lret
rorb
clc
cmpsb
ret
ror
lods
push
aad
popa
fadds
adc
jle
jmp
fmull
je
out
adc
adc
jg
movsb
test
sub
int3
mov
mov
pop
in
ss
aas
in
cmc
xlat
xor
xchg
cmp
les
aas
fmul
bound
mov
xchg
cmpsb
jns
sbb
cmp
ret
inc
jge
mov
rclb
call
xchg
das
arpl
add
mov
lret
cli
sub
mov
jae
stos
ljmp
xor
push
icebp
in
shll
fadds
rcrl
inc
inc
cmp
add
xchg
and
xchg
int3
cmp
aaa
int
sti
add
inc
setnp
jae
cmc
cli
jecxz
stos
or
mov
das
push
push
aas
in
ds
inc
mov
lret
ljmp
pushw
or
dec
jg
test
sbb
inc
loopne
dec
loope
cmp
adc
pop
aad
fidivrl
mov
mov
mov
sub
ret
je
fisttpll
ror
push
xchg
xor
hlt
test
dec
add
imul
fisttpl
mov
and
enter
mov
adc
clc
outsb
das
pop
pop
sub
pop
and
pop
and
jnp
cmp
cli
out
jp
ja
inc
loope
aas
cmpl
xchg
les
ljmp
mov
mov
push
push
jecxz
movsl
icebp
je
jle
or
or
lcall
js
lock
aas
aam
mov
outsl
les
test
or
int
mov
adc
cmpl
int
std
fsubrs
out
mov
cmpsl
xor
inc
dec
aaa
or
aaa
jge
dec
test
push
mov
mov
fwait
shll
std
add
jae
cltd
lds
inc
mov
popf
mov
xchg
aad
push
xlat
sbb
or
ret
mov
jge
enter
sub
js
inc
push
mov
dec
scas
aaa
inc
xchg
addr16
push
mov
xchg
dec
add
inc
sbbb
stos
mov
xor
pop
jne
cltd
jo
xor
cmp
inc
add
mov
mov
add
pop
sub
jbe
outsb
sbb
js
stos
rcrl
test
xlat
out
mov
mov
outsl
fwait
imul
or
call
test
mov
pop
cmp
pop
movsb
sub
out
aas
sbb
xor
adc
mov
jl
rol
sbb
mov
icebp
into
mov
iret
mov
xchg
pop
pushf
cmc
jl
adc
iret
sub
rolb
push
sbb
fwait
scas
or
push
fs
xlat
adc
push
je
and
outsl
outsb
ret
out
addr16
data16
fdivp
jae
mov
jb
mov
pop
sbbb
outsl
fsubrl
sbb
fsubs
push
push
add
cmp
fisubrs
mov
sbb
cli
out
mov
subl
add
aaa
ret
sub
mov
idivl
cmpsb
das
lret
addr16
insl
loope
repz
and
inc
pop
cmp
into
and
scas
pop
lcall
mov
push
jnp
imul
mov
test
pop
or
push
add
xlat
das
mov
mov
cmp
test
dec
push
sub
jecxz
imul
adc
add
mov
fcompl
and
jmp
in
iret
js
lret
mov
into
add
mov
push
loopne
cmp
xchg
pop
mov
adc
mov
jle
mov
or
jl
lods
mov
sub
mov
inc
bound
daa
xor
fsubs
jge
jge
arpl
stc
mov
lds
mov
pop
or
adc
cmc
leave
and
lods
je
out
push
pop
stc
jmp
cmp
gs
push
mov
repz
ret
scas
jne
mov
mov
lret
jno
adc
sub
and
cmovle
push
jns
jo
dec
add
lds
stc
js
std
pop
and
lock
in
and
pop
inc
jnp
sub
jo
mov
or
inc
fdivrl
xchg
ss
mov
push
cld
mov
aas
popw
js
mov
in
jmp
loop
mov
cmp
xor
adc
incb
add
mov
xchg
mov
icebp
iret
aaa
xchg
stos
aas
jnp
add
xchg
sahf
adc
lea
sub
sub
je
jnp
xchg
adc
andb
sahf
mov
shlb
insb
test
push
dec
add
pop
xor
add
and
push
jle
and
int
outsb
cmc
repnz
sub
std
cmp
jne
popl
dec
mov
dec
mull
mov
push
xor
add
add
cltd
subb
add
pop
xor
xorl
lret
mov
push
mov
add
int
inc
xor
les
jecxz
std
ret
jmp
cmpl
das
outsb
movsw
orb
push
sbb
mov
stos
notb
mov
adc
mov
jnp
jnp
and
inc
rcrb
mov
fstpl
push
movsl
loop
popf
shlb
test
add
jp
or
iret
ss
in
xlat
idiv
inc
mov
icebp
sbb
stc
cmp
push
jmp
test
jge
jne
add
stc
dec
sub
or
sar
outsl
or
push
mov
psrlw
or
jbe
sub
add
daa
or
mov
es
popf
jnp
cmpsb
mov
cmp
push
ret
mov
cmp
dec
mov
in
mov
add
fs
hlt
push
repnz
mov
mov
sahf
mov
inc
sub
iret
outsl
fsubrl
push
adc
mov
das
and
clc
int3
mov
jle
adc
xchg
cltd
fisttps
mov
and
xorl
into
rcl
jle
xor
inc
stos
add
test
adc
cwtl
push
cmp
dec
sbbl
das
cmp
inc
and
and
cmc
push
ss
jp
addr16
mov
in
pop
add
dec
inc
adc
mov
bound
lret
movsl
out
lret
int3
push
xchg
loopne
ds
in
xchg
push
xlat
mov
xchg
sub
and
imul
dec
cmpb
inc
cld
mov
fsubrl
pop
sahf
xor
pop
pop
dec
pop
test
mov
adc
xchg
cs
xchg
std
sti
xchg
nop
pusha
sub
and
in
pop
jnp
test
movsl
call
lahf
and
mov
mov
xor
fmull
adc
loop
hlt
mov
int3
mov
push
jno
cmp
outsl
inc
lcall
push
ds
ror
dec
mov
insl
cs
and
inc
cmp
test
mov
dec
inc
sub
fnstsw
enter
dec
xchg
xchg
mov
inc
xorl
pop
test
ret
mov
fsubr
sbb
add
jecxz
push
dec
pop
gs
repz
pop
mov
test
dec
das
jns
mov
shll
cmp
mov
std
push
xchg
dec
cmp
push
mov
sti
int
out
and
xor
add
jg
shlb
jnp
repz
lret
push
fmull
lods
and
mov
popf
xor
imulb
aad
adcl
aas
dec
sub
daa
push
insb
push
and
pop
rolb
imul
insl
pop
aad
cmpsl
adc
sub
addr16
ret
out
jbe
test
movsl
in
sbb
push
pop
inc
lret
inc
pop
or
aam
ret
add
stos
cmp
jnp
lods
xor
mov
xchg
and
mov
pop
inc
sub
jmp
out
jecxz
push
cld
lret
std
push
out
ret
mov
test
les
mov
jae
sub
orl
iret
fwait
ret
or
cmp
nop
dec
movsl
popa
arpl
pusha
fldcw
mov
ljmp
repz
ret
arpl
hlt
push
js
sbb
xlat
ret
lahf
sbb
mov
pop
les
pop
ret
cmpsb
repz
jge
xor
fidivl
jb
sbb
aad
inc
push
fdivrs
mov
stc
jne
fwait
sahf
icebp
sub
mov
xor
pop
xchg
stc
jg
push
push
mov
mov
jle
ja
or
bnd
or
pop
lret
sbb
fsubrs
jmp
jae
xor
ljmp
jno
xor
jbe
jbe
fcomps
jg
lcall
bound
shlb
jle
jae
mov
push
push
dec
and
rolb
scas
out
push
loope
imul
das
shll
xor
pop
repz
xor
stos
outsl
shrl
dec
fiaddl
call
gs
adc
arpl
hlt
mov
add
cmp
add
jl
scas
cmpsl
mov
xchg
push
mov
xor
mov
sbb
mov
faddl
test
or
movsl
stos
int
xor
adc
lock
mov
sub
and
sbb
out
dec
daa
push
and
dec
jns
push
mov
or
stos
ljmp
test
cmp
sahf
pop
push
out
test
inc
xlat
pusha
inc
nop
lea
mov
test
scas
aam
fwait
notb
das
pop
pop
fistpl
lret
or
pusha
gs
cltd
xor
pop
mov
xchg
test
xchg
push
fnstenv
lret
lock
in
stos
pop
adc
pop
or
ret
divl
pop
inc
cmp
test
and
xchg
pop
adc
shrb
jg
inc
clc
in
adc
movsl
mov
mov
pushf
push
call
mov
adc
and
jb
adc
cmp
pop
push
dec
das
clc
sub
and
out
push
test
jne
dec
in
lock
loop
mov
mov
lcall
adc
sarb
jo
jecxz
dec
xchg
sbb
jns
fwait
jecxz
mov
idiv
xchg
dec
push
dec
inc
shl
adc
sbb
pop
xor
es
mov
jle
in
mov
mov
jb
loope
stos
mov
ss
pop
fnsave
dec
rol
inc
jge
test
movb
mov
push
jg
or
aas
push
testb
sub
push
inc
shlb
jae
add
sub
sbb
ror
outsb
out
or
adc
repnz
jbe
jg
xlat
daa
cmp
cmp
rcrl
push
rorb
ljmp
adc
mov
sbb
lret
add
xor
data16
lcall
lds
and
jmp
js
pop
cmp
dec
lock
fdivs
or
outsb
dec
mov
jbe
mov
dec
inc
lods
dec
jge
fs
jae
icebp
xor
push
rolb
lds
ja
fcmovu
mov
cmp
sub
into
loope
xchg
fwait
cmpl
repz
pop
and
dec
or
xchg
rclb
stos
leave
xchg
dec
les
jecxz
xchg
push
jmp
daa
xor
out
xlat
or
xchg
ljmp
xor
mov
adc
loop
adc
orl
cmp
test
lods
sub
adc
mov
les
pop
test
inc
std
gs
cli
or
push
or
inc
dec
jle
fimull
pushf
pop
push
cli
pop
push
test
aad
lret
xchg
inc
push
pop
and
sbbl
hlt
out
shl
enter
das
in
inc
xor
dec
xor
xor
inc
mov
int
xor
js
punpckhwd
clc
rorb
add
adc
sbbb
pop
lret
cmp
movsb
push
xor
jne
jge
xchg
aaa
clc
pop
push
add
js
pop
pop
repnz
outsl
pop
sbbb
aaa
pop
xchg
inc
add
mov
add
repz
pop
mov
xorl
xchg
adc
imul
xchg
mov
jnp
sbb
adc
lret
jecxz
inc
call
pop
sub
xor
mov
or
ret
sahf
push
jp
fdivrl
sahf
ss
push
das
cmpsb
push
imul
stos
les
inc
clc
push
adc
xor
lods
cmp
push
pop
stc
scas
cli
pop
sub
loope
test
orb
adc
mov
jo
ss
es
dec
mov
mov
mov
popf
mov
jp
xorl
das
scas
pop
negb
inc
mov
scas
mov
cmpsb
xor
rcrb
aad
cs
test
and
mov
xchg
sbb
adc
pop
xchg
js
mov
mov
and
and
dec
jo
xchg
fwait
jl
in
mov
call
xlat
shr
push
add
mov
aam
mov
lret
cli
inc
mov
mov
pop
inc
xchg
jbe
or
jnp
inc
cli
cltd
xchg
push
xchg
and
mov
add
stos
jnp
pop
jb
loop
cmp
in
insl
imulb
stc
repnz
mov
ja
lahf
sub
xchg
pop
mov
mov
push
mov
dec
mov
or
scas
je
mov
xor
lock
sub
fwait
sbb
ds
push
adc
fistpll
mov
jbe
test
int3
into
xchg
test
mov
ss
fdivp
push
nop
and
enter
fnsave
pop
rep
jge
adc
lds
frstor
jecxz
lods
cmp
and
daa
xchg
cmpsb
test
jmp
mov
xchg
sbb
add
mov
popa
mov
xchg
out
push
add
int3
cmpsb
jle
cmp
imul
jp
push
stc
fisttps
inc
mov
or
daa
in
mov
out
insb
lcall
jo
enter
int3
stos
mov
add
mov
push
out
jb
cwtl
pop
sub
jmp
sub
lods
mov
data16
mov
or
or
or
repnz
jo
into
jbe
repz
test
cltd
lods
sbb
mov
xlat
push
sbb
shlb
jae
jecxz
andb
sub
inc
outsb
pop
push
or
add
les
adc
aad
push
push
and
out
fmuls
push
loope
loope
rclb
mov
mov
popa
lods
cld
mov
mov
ds
inc
xrelease
or
outsl
cmp
sar
sbb
mov
out
dec
arpl
push
ljmp
std
adcb
jge
ja
sti
test
fsubrp
fnstcw
daa
xor
int
and
adc
mov
ds
sbb
adc
lahf
aas
cli
mov
xchg
mov
push
nopl
mov
std
or
vsubps
je
es
mov
push
and
cwtl
hlt
and
jge
and
pop
mov
lock
adc
and
mov
mov
inc
sub
test
iret
and
mov
aas
sbb
jle
and
lcall
mov
shl
frstor
scas
aas
sbb
lcall
mov
sbb
testb
mov
cs
or
pop
and
icebp
lahf
repz
mov
test
cmp
popl
xor
sbb
adc
or
das
incl
iret
fcmovbe
insl
add
iret
out
mov
push
pushf
pusha
xchg
sbb
inc
mov
lahf
xchg
fisubs
cmp
test
mov
mov
cmp
xchg
xor
scas
add
ja
add
sbbb
call
push
push
idiv
jle
cvtdq2ps
mov
xchg
dec
decb
mov
les
mov
jp
mov
mov
notb
ds
ljmp
hlt
mov
jl
xchg
gs
mov
pminsw
xchg
jb
cmp
or
and
add
or
scas
mov
xchg
pop
or
call
or
mov
dec
cmp
mov
sub
out
push
test
leave
shrb
cmp
dec
sub
movsl
out
dec
ds
mov
repnz
dec
pop
push
imul
cmp
adc
inc
cltd
cltd
cwtl
aam
fadd
out
jecxz
push
xchg
xor
inc
push
fcmovnu
xor
pop
test
aaa
inc
fwait
das
decl
push
add
add
jg
xchg
mov
shrl
ret
jl
jnp
movsb
xchg
add
lret
adcb
ret
scas
adc
or
lret
push
stos
or
icebp
je
mov
arpl
adc
push
enter
bound
push
imul
lea
cmc
sbb
xchg
cli
and
xor
sbb
xor
dec
mov
cmp
inc
adc
mov
pushf
movsb
js
addr16
jl
and
pop
sbb
push
repz
add
inc
jo
jb
and
cmp
fisubrs
sbb
cltd
xchg
mov
add
aas
jp
addr16
subb
sbb
pop
adc
cltd
sub
pop
push
hlt
inc
fnstsw
lret
arpl
mov
jmp
and
push
aaa
aas
inc
repz
sub
movsl
and
sbb
dec
cld
xchg
mov
hlt
and
imul
cmp
cmp
cmp
divb
xchg
add
mov
mov
fidivl
adc
jb
mov
arpl
xchg
inc
fstl
shlb
xor
jns
cmpsl
mov
and
and
mov
mov
push
movsw
ret
sbb
arpl
ljmp
jno
out
cmp
pop
xchg
inc
xor
cmp
or
ret
je
scas
inc
in
sbb
ret
insl
dec
mov
jne
inc
xchg
dec
xchg
cld
dec
dec
push
fdivrp
dec
scas
ficomps
mov
push
mov
enter
push
xchg
loopne
mov
and
mov
scas
and
outsl
cmp
test
sub
mov
adc
pop
fs
and
jmp
addl
add
das
loop
xor
mov
aaa
sbb
clc
add
cwtl
pusha
test
lret
sub
mov
push
dec
dec
inc
fs
sti
into
push
cmp
push
cmp
pop
stos
jo
mov
pop
dec
or
mov
xor
xor
sbb
es
push
hlt
fimull
mov
sub
addr16
jge
pop
mov
push
dec
call
in
mov
aam
jp
cmp
fcomps
xchg
inc
mov
push
jle
lcall
mov
or
mov
add
inc
sub
jmp
jmp
push
stos
push
cmpb
inc
mov
or
sbb
and
inc
inc
xor
cmp
aas
pop
cmpsb
mov
and
mov
enter
push
push
and
mov
xor
sub
push
add
jl
data16
cmp
and
aam
dec
and
in
sub
mov
or
cmp
mov
rcrl
jo
shll
or
adc
jmp
mov
mov
dec
add
cmp
dec
mov
sti
icebp
xor
xor
fiaddl
daa
jo
mov
daa
ds
sub
ds
stos
push
sbb
movsl
sub
jecxz
pop
xchg
aaa
adc
or
inc
cmp
and
cmp
sub
pop
cli
mov
in
test
mov
pop
mov
sbb
repnz
xor
sub
add
mov
mov
es
sub
add
in
inc
int
imul
call
cmc
test
mov
in
add
je
enter
add
cmpsl
push
subb
lea
jp
test
dec
dec
mov
pop
mov
mov
lcall
inc
mov
jnp
iret
repz
xor
pop
or
cltd
push
arpl
mov
movsb
mov
rclb
loope
fstpl
cmc
clc
movsb
mov
bound
in
lods
or
hlt
mov
adc
leave
fwait
xlat
push
stc
incb
mov
dec
adcl
imul
jae
sbb
sbb
jg
dec
aaa
fld
mov
test
cmc
icebp
lds
sbb
repnz
out
je
hlt
cmp
jbe
xchg
shll
popf
scas
cltd
cld
pusha
mov
xchg
sbb
push
jns
dec
mov
popa
and
push
xor
sahf
or
inc
outsb
sub
out
mov
mov
jmp
rorl
ret
inc
add
mov
and
mov
aas
add
cli
push
xor
mov
jne
fst
jge
sub
and
scas
dec
mov
jbe
mov
sti
jb
xchg
outsb
push
mov
or
sub
sbb
lea
aam
loope
inc
mull
xchg
push
in
push
lcall
adc
cmp
xor
rcl
xor
and
stos
xor
jge
fstps
call
pop
scas
mov
jmp
push
ffreep
insb
icebp
add
stos
sbb
pop
shr
movb
testl
push
pop
insb
jo
mov
mov
int
sub
outsl
cmp
iret
loopne
popa
jne
pop
dec
or
pop
fs
pop
pushf
xor
or
jno
sti
sbb
lock
in
sbb
push
mov
or
pop
dec
mov
pop
scas
jo
push
sbb
rcl
push
mov
std
and
push
push
lcall
and
inc
mov
pop
insb
add
or
pop
push
and
sbb
dec
dec
push
inc
jmp
stos
jmp
ljmp
hlt
push
popf
in
inc
xor
aad
cmp
sbb
scas
mov
in
call
aam
out
scas
shrb
mov
pop
out
nop
out
cli
lea
adc
in
mov
pop
cltd
aad
add
jp
inc
push
fstpt
jne
xor
je
je
fmull
push
fimuls
xor
into
mov
aam
push
inc
ret
add
push
jmp
jmp
insl
push
insl
movsb
sbb
rcrb
lods
inc
int
jmp
xor
jnp
bound
sbb
decl
push
sbb
cwtl
js
leave
cltd
lret
mov
in
lahf
push
out
xchg
or
in
in
mov
in
mov
outsb
call
faddp
mov
mov
iret
arpl
jns
adc
adc
jo
ret
jne
movsl
cmp
fldl
sub
cmp
imul
xchg
test
scas
pop
pop
gs
ss
in
sub
or
loopne
mov
xchg
dec
adc
push
lock
xor
mov
imul
cmp
dec
dec
mov
pop
lret
icebp
add
test
or
xor
or
imul
mov
jmp
js
nop
pop
cmp
fisubrs
sbb
cmp
push
fimull
in
or
mov
ds
and
popf
dec
jno
std
mov
mov
sbb
mov
nop
mov
push
fst
jle
mov
jmp
sub
hlt
add
sub
insb
jmp
std
lods
pop
into
mov
xchg
add
lods
mulb
xor
in
insb
hlt
leave
add
push
and
and
aas
pop
mov
pop
inc
cmp
mov
push
or
lret
xchg
repnz
fs
cmp
fmul
cli
movsl
xlat
cmp
cld
jae
hlt
sub
out
pop
mov
int
out
jg
ljmp
stc
divl
dec
nop
mov
out
pusha
inc
jmp
jno
pop
popa
in
xchg
daa
int
gs
lret
dec
test
lds
mov
push
mov
xor
xor
or
sub
out
movsb
iret
dec
cmc
mov
mov
mov
and
js
fstl
push
dec
loope
cmpl
mov
jo
or
add
xchg
bound
pop
inc
dec
cmpl
out
js
xlat
inc
in
xor
dec
dec
push
add
call
shrl
and
cmp
lock
push
jl
das
mov
es
jae
sbb
daa
sahf
gs
or
inc
daa
int
jnp
arpl
dec
dec
shlb
pop
or
inc
pop
dec
mov
outsl
inc
push
cmp
pop
clc
xlat
dec
xor
or
adc
dec
mov
ret
push
sbb
mov
sub
xchg
mull
cmp
jge
in
push
ret
dec
and
mov
add
or
rorb
cmpsb
cli
push
xchg
dec
decb
fidivrs
pop
out
push
sbb
jmp
mov
stos
daa
adc
xor
mov
je
les
arpl
xchg
out
out
xor
std
cmp
sbb
in
ja
hlt
test
mov
in
lcall
adc
cli
test
in
and
xchg
jne
mov
sub
insb
mov
mov
pop
push
stos
xchg
roll
lret
imul
frstor
sub
push
cmp
dec
filds
sahf
ds
pusha
push
ret
je
sahf
cli
mov
mov
mov
jae
or
or
jbe
mov
js
mov
add
out
and
in
in
in
sahf
xchg
loopne
mov
les
inc
imul
in
adc
cltd
mov
dec
insl
and
ljmp
lds
adc
enter
jl
pop
xor
lea
sahf
mov
and
shl
addr16
mov
cli
adc
sub
xchg
add
xor
jmp
fimuls
jns
jmp
xor
xchg
push
pop
shr
mov
mov
push
lahf
xor
fwait
mov
loopne
test
repnz
das
ja
sbb
cwtl
jge
mov
jne
xchg
push
lods
testl
mov
jb
jae,pt
pop
lret
sbb
into
mov
and
js
mov
movsl
ljmp
mov
pop
lret
hlt
and
mov
jno
xchg
scas
jle
xor
adc
mov
mov
xor
xchg
adc
push
xchg
fisttps
inc
test
lsl
xor
popf
adc
test
mov
mov
dec
outsl
hlt
mov
sbb
ret
pushf
push
add
cwtl
xor
mov
sbb
aam
xor
fs
pushl
nop
xchg
lock
fldenv
mov
xchg
mov
test
cmp
aas
mov
mov
jns
jb
rol
enter
mov
cltd
daa
mov
fimuls
xor
outsb
dec
or
mov
pop
les
add
loope
outsl
movsb
push
inc
mov
loope
xor
push
pop
or
sub
ja
imul
and
cwtl
dec
not
rolb
xor
arpl
out
xor
pop
movsl
xlat
insb
mov
mov
lock
add
sbb
fbstp
mov
into
in
or
ficomps
addr16
aaa
std
fs
pop
aas
repnz
popf
ret
cwtl
shrb
hlt
loope
push
cmp
dec
in
jb
xchg
or
mov
adc
movsl
xchg
or
lcall
sbb
jecxz
and
pop
in
movsb
inc
xchg
std
loop
cmp
xchg
mov
stos
fimuls
test
sahf
pop
fistl
ds
scas
adc
ds
iret
shlb
dec
xor
jbe
add
mov
jbe
popf
out
movsl
jbe
push
scas
insl
xchg
xchg
jae
hlt
add
ljmp
push
sbb
jno
jo
fs
popf
data16
sbb
lods
add
iret
pop
fstps
subl
loop
xchg
push
jecxz
adc
ret
pop
xor
push
aaa
aaa
xor
leave
arpl
jle
stc
sub
inc
movsl
call
mov
sub
in
adcb
mov
fstpt
fwait
cmpsb
and
repz
inc
dec
jmp
dec
and
xchg
jl
cmp
addr16
sbb
cld
cld
mov
mov
dec
cld
das
adc
ret
inc
inc
repz
add
popl
jmp
das
test
jns
outsl
xchg
pushl
dec
sbb
or
xor
popa
outsl
mov
test
stos
into
and
inc
imul
mov
push
ficomps
in
sub
fistl
add
scas
popa
mov
ss
mov
out
loop
xlat
and
adc
cmp
adc
test
xor
lods
lea
in
rolb
outsb
or
push
mov
sahf
mov
mov
hlt
dec
push
test
mov
rorb
loop
and
out
pop
sub
mov
lahf
fisttpl
dec
in
imul
sbb
jmp
or
cs
add
inc
insb
iret
bound
imulb
mov
cmp
cmp
in
enter
and
inc
or
pop
xchg
xchg
add
mov
inc
es
cs
mov
mov
nop
and
or
and
sarl
jge,pn
pop
fildl
xor
cmp
jp
dec
in
movsl
adc
jge
cmp
gs
in
inc
into
xor
addb
push
mov
xlat
push
pop
jmp
jle
inc
test
pusha
or
inc
sarb
test
adc
cmp
adcb
pop
jp
sbb
cmp
jbe
add
mov
pop
repz
pop
gs
add
loopne
into
mov
push
sbb
icebp
pop
jns
lret
jo
icebp
push
lret
and
sbb
sti
pop
inc
mov
in
dec
add
fstpl
mov
add
aaa
test
xor
adc
jnp
jns
leave
jge
xchg
mov
shlb
adc
push
int
lret
xor
mov
xor
inc
dec
push
jle
hlt
adc
inc
sbb
fadds
cmc
je
add
ret
test
jp
jae
ret
pusha
adc
rcr
mov
jmp
and
and
cmp
mov
lods
push
lock
sub
xchg
daa
push
int
in
pop
and
push
out
mov
orb
je
loope
mov
fsubrp
jno
mov
add
xchg
and
jbe
mov
shr
test
insb
clc
sub
popf
je
sub
sub
mov
loopne
and
mov
dec
xchg
lods
out
xchg
lock
dec
test
stos
cli
mov
repnz
loope
clc
push
popa
cmp
inc
stos
mov
push
mov
push
sbb
sub
mov
sti
add
pop
clc
gs
and
cmp
test
jb
xchg
subl
xor
add
popf
push
xor
insb
in
and
loope
mov
sbb
int3
mov
in
in
push
sar
lock
mov
into
push
das
rcl
cmp
xor
and
mov
cmpsb
xlat
and
mov
je
and
nop
xor
mov
outsl
inc
aad
daa
xchg
mov
jg
ret
sti
xchg
nop
push
sub
xor
inc
pop
push
mov
cmpsb
xchg
std
loopne
sti
insl
jb
mov
lcall
cmpsl
sub
add
xchg
sbb
push
scas
clc
cmp
insb
leave
pop
dec
add
stos
and
mov
inc
add
in
test
insb
push
test
ret
dec
push
xor
mov
mov
fdivs
add
outsb
adc
and
test
call
outsb
mov
test
jnp
push
pop
jo
jne
in
xchg
test
pop
jae
adc
in
hlt
mov
adc
out
sub
push
test
add
lcall
js
dec
sub
data16
std
xor
jae
xor
aas
clc
repz
mov
inc
xchg
imulb
arpl
cmp
pop
mov
xchg
cmp
ljmp
or
pop
imul
fdiv
inc
add
faddl
insb
imul
or
xor
push
out
ljmp
add
adc
cli
pusha
jbe
popf
cmp
push
xchg
das
int
push
loop
das
add
mov
test
test
or
jae
xchg
leave
loope
leave
ffree
sarb
jmp
mov
fisttpll
mov
aas
pop
popa
inc
cmpsb
lock
test
dec
add
lcall
dec
cmp
in
ljmp
mov
adc
cwtl
add
aam
sbb
inc
aaa
jmp
push
push
mov
dec
ds
pop
in
pop
orb
popf
repz
mov
fwait
inc
cltd
lea
sub
sbb
cmp
jno
jb
fwait
adc
lret
pop
addr16
stos
jno
mov
stos
mov
data16
in
test
scas
insl
xchg
imul
mov
inc
fwait
cmp
outsl
inc
popa
jae
stos
xor
fs
mov
fs
outsl
mov
lods
mov
dec
rorl
int
imul
lret
stos
adc
adc
lock
jae
push
xlat
cld
stos
pop
leave
xchg
in
ret
push
pop
jle
call
xor
pop
in
gs
xor
cmp
sbb
adc
mov
mov
and
icebp
mov
pop
loopne
das
or
lahf
mov
loopne
ds
scas
sbb
sbb
jns
push
inc
lods
xlat
sbb
scas
jge
or
dec
mov
dec
sbb
xlat
push
test
notb
xor
outsb
and
jg
push
adc
jle
movsl
hlt
or
jae
mov
mov
jmp
push
clc
fcom
out
lret
pop
in
and
mov
and
dec
jns
jae
pushf
int3
inc
bound
push
inc
cmpsl
adc
cmpl
sarl
jecxz
lahf
jmp
adc
daa
add
sbb
sbb
test
add
mov
sub
sub
test
mov
test
jb
stos
add
jnp
adc
xchg
insb
les
cmp
or
stos
ja
inc
mov
jno
ljmp
data16
sub
out
in
jbe
inc
into
mov
fiadds
mov
push
cmp
rcrl
cwtl
out
push
dec
xor
mov
pop
xor
push
mov
sahf
jmp
loopne
cltd
inc
loopne
add
push
cmp
js
or
stc
mov
repnz
aas
rcl
mov
pop
adc
push
fwait
push
mov
inc
lock
into
jle
cs
push
daa
sub
xchg
xor
adc
adc
std
dec
int3
cmp
mov
sub
xor
cld
je
sarb
test
sbb
outsl
mov
xor
int
adc
test
roll
movsb
aam
mov
lock
inc
push
cwtl
jp
test
in
jmp
lods
mov
mov
mov
aas
mov
mov
das
ss
inc
mov
in
test
and
mov
push
mov
pop
cld
movsb
stc
aaa
out
mov
sub
add
clc
pop
sbb
fidivrs
push
xchg
insl
icebp
cmovle
repz
pop
xlat
inc
dec
jnp
and
aaa
push
jnp
mov
inc
out
lock
ret
lods
and
jecxz
cmp
push
xorb
sbb
adc
cmp
cmp
mov
mov
push
outsb
rorl
fdivp
lret
push
push
ret
mov
popa
out
test
jns
pop
inc
xchg
fidivs
out
sub
inc
xor
mov
and
jl
xlat
int
or
ss
mov
add
ret
add
cwtl
mov
popa
mov
nop
insl
add
xor
lods
push
jecxz
in
aaa
sbb
mov
inc
pop
popf
xor
sub
mov
inc
and
ljmp
fadd
lret
ret
dec
cli
and
je
movsl
jns
jbe
pop
pop
and
push
push
test
inc
imul
out
outsl
fnstenv
push
pop
push
or
jbe
iret
out
cmp
cmp
sub
iret
clc
sbb
cmp
mov
and
or
mov
pop
mov
sahf
jno
or
ja
cmc
pop
xlat
adcb
outsb
aas
cmpsl
inc
imul
cmp
xchg
jp
xchg
or
inc
icebp
lea
pop
inc
pop
mov
in
sbb
inc
push
daa
ja
pop
lds
and
movsl
loopne
fwait
popf
test
ds
xchg
add
aaa
icebp
dec
popf
test
add
rcl
repnz
and
imul
cmp
cltd
nop
mov
xchg
cmp
std
xor
jl
xchg
out
push
xchg
mov
xchg
pop
pop
cmp
rcrl
or
lcall
fstpt
sub
adc
pop
or
jg
sub
sub
rcl
mov
pop
fdivl
out
sub
cmp
stc
imul
push
sub
cs
cmp
cmpsb
sbb
xchg
ret
or
outsl
roll
xchg
xchg
mov
cmp
cmpsb
aas
adc
xchg
sub
mov
aas
jne
stos
mov
xor
cmp
fs
hlt
or
and
mov
adc
outsl
pop
mov
add
xor
in
aaa
xchg
lods
mov
test
or
in
jbe
cwtl
int3
mov
mov
inc
lcall
push
sbb
or
sub
fbstp
xor
out
and
xchg
fcompl
pop
int3
cmp
mov
mov
movsl
enter
movntps
sbb
imulb
mov
testl
cmpl
iret
jmp
mov
adc
sub
mov
xor
lods
loope
mov
inc
sub
repz
fs
adc
adcl
pop
mov
xchg
mov
inc
mov
mov
pop
inc
xchg
pop
sarb
mov
gs
sub
and
sub
inc
subb
mov
push
mov
mov
xchg
sub
mov
xchg
loop
fcoml
inc
inc
pop
add
dec
sbb
sti
rclb
int
es
xor
ja
arpl
inc
iret
jmp
stos
xchg
cltd
jg
dec
pop
shl
test
pop
mov
and
add
sahf
enter
stos
push
pop
inc
aad
loopne
je
and
sub
aas
xor
adc
int3
popf
cmp
leave
addr16
push
idivb
or
add
xorl
call
jp
inc
pusha
mov
and
sarb
jno
push
rcrb
lcall
xchg
inc
xchg
bound
fs
cmp
xor
iret
pop
dec
pop
cmc
xchg
push
xchg
mov
xor
cmpsl
sahf
je
cmp
sub
mov
push
dec
add
fbld
push
pop
dec
mov
jg
cmp
cwtl
xlat
sub
mov
aad
fiaddl
xchg
mov
loope
jmp
sub
inc
mov
xor
push
popf
xlat
xorb
stc
sbb
cmp
loop
push
mov
mov
push
mov
shlb
cmp
sub
or
pop
imull
pop
fsubl
xor
sahf
in
mov
aas
or
push
je
stos
jb
pcmpgtb
mov
add
push
rorl
xchg
adc
nop
adcl
es
or
loope
nop
int3
cmp
xor
sahf
inc
sub
lods
cmc
ret
mov
out
iret
mov
fistpl
jbe
idivl
nop
daa
hlt
jecxz
sbb
call
mov
add
cmp
jecxz
sub
je
and
bound
and
mov
repnz
fwait
mov
pop
inc
daa
push
lcall
arpl
or
mov
out
mov
cmp
mov
mov
dec
dec
or
iret
cmp
aam
mov
mov
push
jecxz
mov
push
fisttpll
pushf
jnp
dec
xlat
cmp
mov
jae
out
sbb
push
sbb
mov
into
adc
jbe
repz
les
das
pusha
ror
mov
frstor
mov
aas
push
jmp
jns
fwait
ds
mov
sub
or
imull
and
inc
scas
xor
jo
loope
fcmovb
shlb
pop
mov
cmp
sub
add
int3
mov
lahf
push
and
or
mov
adc
sub
xchg
mov
xor
mov
xchg
mov
nop
rcrl
js
mov
cmpxchg
shr
mov
outsl
aad
dec
mov
fistl
jecxz
sbb
lock
pop
sti
mov
jg
shll
and
aas
inc
jae
lret
repnz
push
loop
cltd
mov
iret
jl
idiv
nop
jge
and
pop
sbb
movsb
push
jge
movsl
mov
inc
push
jmp
xorb
xchg
js
jle
test
incb
scas
fistpl
mov
hlt
xor
fildl
fdivp
pop
es
aas
xchg
test
clc
cld
mov
and
xlat
jp
loope
shl
in
ficomps
jle
inc
pop
ss
testl
add
aas
andl
aad
push
daa
add
and
in
sbb
jmp
lds
add
ficoms
mov
lahf
dec
repz
popf
es
cwtl
pop
xor
lock
gs
mov
mov
jl
jle
loopne
cmp
addb
leave
inc
dec
jl
xchg
popa
and
mov
pop
dec
mov
hlt
mov
push
in
jmp
jg
mov
insb
cmpsb
xor
and
aas
mov
addr16
inc
out
sub
cwtl
out
aas
pop
das
in
mov
adc
xchg
xchg
enter
test
in
pop
xchg
pop
icebp
in
mov
ljmp
adc
dec
mov
bound
in
scas
pushf
inc
ja
loopne
dec
mov
push
scas
les
aas
dec
in
test
mov
mov
xchg
push
cmc
add
pushl
sub
js
enter
fdivrl
pop
orl
mov
push
repz
test
jmp
cs
dec
xchg
scas
mov
aad
loop
mov
mov
in
movb
ds
pop
insb
test
push
jb
jbe
xchg
xchg
dec
jb
sbb
aaa
jp
or
sbbb
adc
sar
mov
add
pop
std
movsb
pusha
mov
cmovbe
int3
cmp
xchg
test
push
jle
cltd
fnstsw
mov
not
push
mov
jp
repnz
prefetch
pop
pusha
inc
repz
inc
fdivrl
mov
js
add
fs
scas
adc
out
cmp
cmp
jle
xchg
inc
pop
pop
sub
ret
dec
in
test
mov
insb
cmp
mov
icebp
inc
cmp
stc
mov
sti
xor
xorb
cld
insl
add
mov
test
sbbb
mov
mov
out
leave
pop
iret
add
sbb
or
push
or
insb
jle
cwtl
jle
scas
mov
insl
scas
jg
cwtl
imul
mov
xchg
jne
and
sub
lret
cmp
cmp
and
fsubrs
shlb
and
fbstp
jnp,pn
cmp
nop
xor
bound
or
mov
int
xchg
push
mov
daa
mov
lds
fnsave
jecxz
hlt
xchg
pop
je
mov
lods
inc
negb
orl
ss
insl
add
cld
mov
jne
es
add
jl
test
or
pop
dec
sub
roll
xchg
push
in
jae
icebp
mov
pushf
cwtl
sarb
enter
out
test
idivl
and
add
lret
fidivs
sub
inc
xchg
movsl
dec
fadd
fnstcw
test
fldenv
jle
xchg
and
pusha
push
dec
mov
bound
mov
mov
jnp
add
adc
fisttpl
and
push
bound
push
push
pop
push
shrb
mull
jmp
ljmp
and
sbb
adc
push
inc
mov
and
adc
inc
insb
inc
loope
xchg
dec
mov
adc
negl
inc
fbld
movsb
inc
xlat
adc
inc
push
mov
loopne
mov
lahf
es
popf
jns
adc
jge
mov
mov
and
fiadds
mov
xorb
in
sti
aas
mov
pop
cmp
leave
sub
pop
outsb
cmp
or
fildl
sub
mov
hlt
popf
adcb
daa
jge
ja
mov
mov
test
mov
inc
inc
inc
push
clc
dec
cmc
and
and
negb
es
hlt
cmp
sti
es
mov
jmp
push
push
int
cmp
cwtl
in
ret
xchg
inc
mov
pop
sub
sub
fsubrp
ds
int3
and
cli
jecxz
xor
imul
sub
mov
into
lret
sbbb
inc
dec
jns
sub
jge
shl
cmp
xchg
sti
and
mov
addb
outsb
dec
add
lock
sub
and
in
dec
enter
cmp
push
push
loopne
fld
arpl
mov
dec
dec
fcmovb
fwait
push
pop
cmp
nop
stos
inc
test
push
nop
mov
xchg
mov
and
sbb
sub
std
lods
lods
insb
roll
sbb
mov
scas
in
ljmp
cli
jg
stos
and
inc
dec
xor
adc
outsl
pop
aam
cmpsb
sti
mov
jns
lret
movb
mov
mov
cmp
mov
dec
jl
addr16
push
jno
sub
xadd
pop
push
outsl
ret
repz
idiv
xchg
cmpsl
ror
mov
xor
jle
pop
not
and
jp
pop
xchg
mov
fdivrs
imul
stc
cld
mov
push
sub
fwait
mov
aam
push
insb
mov
mov
loopne
out
adc
fsubrs
xchg
xorb
fstps
mov
es
popf
pop
cwtl
insl
adc
fwait
mov
ljmp
xchg
ljmp
jne
das
lret
popa
inc
enter
dec
sbb
test
mov
pop
aam
clc
xchg
sub
mov
push
mov
nop
lock
pop
mov
out
fiadds
popa
adc
out
push
dec
aaa
rorb
adc
adc
clc
bound
jmp
aaa
xor
jmp
xchg
ret
jb
mov
mov
and
fucom
add
inc
ret
sbb
shl
test
push
pop
outsl
lea
push
int3
cmp
mov
test
outsb
sbb
mov
loope
dec
in
mov
fmul
push
xchg
sub
xor
xlat
xchg
in
aas
sti
in
pop
jno
push
add
ja
xlat
inc
mov
mov
xor
dec
add
mov
loope
mov
ljmp
cmp
push
cmc
mov
imul
add
inc
jo
push
movsl
fldt
test
je
shl
notb
xchg
inc
loop
adc
sub
sbbl
mov
arpl
addl
and
mov
push
scas
push
and
push
adc
int3
arpl
push
lock
mov
lahf
jae
in
jle
test
aam
mov
call
push
sbb
jb
sbb
clc
push
jle
shld
xor
sbb
pop
xlat
stc
dec
call
fsubr
jg
movsl
sbb
icebp
inc
sbb
test
lahf
fmulp
adc
pop
mov
cltd
xchg
push
mov
in
cmp
add
mov
push
or
lods
jae
imul
das
push
stos
decl
nop
mov
inc
sub
test
iret
push
leave
cli
mov
adc
push
aaa
movsl
add
shl
js
stc
jecxz
xor
fcmovnbe
fadd
cmpsl
popf
scas
ret
shll
lahf
lds
notl
mov
scas
enter
fwait
arpl
pop
jl
mov
jb
loopne
jmp
enter
jb
xchg
push
sbb
or
adc
xor
in
mov
or
mov
fldpi
adc
xchg
clc
test
ret
jns
mov
cmp
call
pushf
mov
les
outsb
movsb
popf
sti
imul
stc
stos
lret
mov
adc
and
xor
adc
xchg
jmp
dec
cmp
sbb
pushf
dec
push
pop
sbbl
or
call
in
and
jno
ret
push
dec
cmp
sbb
push
dec
lods
sbb
pushl
pop
or
jge
xchg
repnz
jp
pop
add
sub
dec
shrl
jl
mov
sti
xlat
shrb
push
or
sub
adc
xchg
rolb
push
push
mov
movsl
inc
pop
add
scas
push
jb
sub
stos
jnp
movsl
jge
sbb
shl
dec
lahf
mov
mov
dec
dec
lea
adc
mov
pop
data16
rcll
insl
mov
mov
xor
sbb
pop
adc
fst
xchg
mov
ljmp
into
pop
push
push
xor
loop
cmp
in
in
lods
mov
imul
and
outsb
outsb
cmp
cmp
aam
jmp
xor
clc
add
jo
cld
str
add
jl
popa
shll
cltd
out
jge
sbb
setg
int3
push
dec
jb
fildl
sub
mov
jp
mov
notw
or
lods
or
sub
pop
pushf
push
aam
out
insb
sahf
stos
les
daa
enter
sub
nop
imul
mov
sbb
sbb
pop
movsl
dec
sub
sub
popa
xchg
int
sbb
lods
xchg
xor
iret
mov
lahf
lea
in
or
aaa
or
jge
aas
negb
lcall
sbb
ret
dec
push
mov
mov
nop
push
mov
add
cmp
sarl
jb
add
xor
dec
fildl
pop
or
xchg
push
lcall
xchg
sti
adc
cmp
cmp
or
iret
daa
mov
push
mov
sub
sub
hlt
sub
pusha
fs
outsl
mov
push
popa
dec
stos
mov
jle
adc
into
pop
and
in
pop
outsl
cli
int
mov
pop
mov
aaa
mov
pusha
inc
repnz
pushf
jo
lcall
lcall
out
mov
and
mov
adc
jp
lret
pop
lahf
std
add
sub
jbe
lea
jecxz
outsb
mov
push
cli
inc
xchg
mov
or
pop
ficoml
push
mov
repz
and
test
loop
adc
clc
pop
cli
nop
xchg
enter
lret
lret
mov
push
jo
test
fs
loop
es
lret
nop
push
fwait
sub
pop
cmpsl
faddl
mov
or
imul
xchg
outsl
popf
mov
push
pop
sahf
ffree
mov
xor
fdivl
in
jmp
xor
add
sti
repnz
pop
lock
dec
std
stos
imul
sub
std
repnz
and
in
sub
out
ret
mov
cltd
repz
rclb
nop
push
dec
andb
std
nop
mov
add
mov
insl
push
cmp
fstpt
in
rcll
mov
xchg
mov
adc
fnstsw
inc
pushf
cmpsl
push
maskmovq
imull
add
roll
clc
lods
or
push
daa
cltd
mov
sbb
pop
sub
outsl
push
scas
movsb
or
mov
out
cmp
bound
adc
jns
mov
andb
mov
xchg
mov
and
lret
scas
mov
inc
jmp
xor
xchg
cmc
scas
nop
add
sub
ja
xor
sub
dec
cmp
popa
adc
subl
jge
jbe
stos
cmpsl
cmp
inc
or
sbb
push
sub
jg
inc
jne
popf
add
mov
stc
and
es
cmp
in
push
in
and
popa
push
subb
pushf
and
sub
or
scas
mov
loope
arpl
aam
push
pop
stos
xchg
or
xor
and
aam
jp
sbb
cmp
mov
and
icebp
inc
sbb
jmp
mov
fnstenv
cwtl
movsb
xchg
lss
pop
push
push
adc
in
mov
jmp
cltd
sub
js
neg
stos
jo
movb
test
aam
bound
jg
mov
enter
or
jnp
shrb
mov
sub
cltd
push
pop
cmpb
pop
fimull
cld
mov
cmpsb
icebp
sbb
xor
or
pop
mov
xchg
lahf
push
mov
dec
stos
mov
pop
cmpsb
movsb
dec
dec
aaa
movsl
orb
test
mov
nop
sub
pop
or
sti
movsl
xor
inc
idivl
aad
insl
fcmovbe
sbbl
fnstenv
mov
dec
xchg
lds
mov
jge
cmp
stos
add
cmp
lcall
fs
test
xlat
lahf
inc
dec
push
sbb
fisttpl
je
xchg
and
pop
clc
notl
ret
dec
mov
push
mov
pushf
xchg
add
es
xlat
andb
cs
int
cmp
les
jl
hlt
out
xor
pop
sub
or
repz
nop
or
adc
xorl
lods
jne
out
mov
dec
or
xchg
or
dec
dec
adc
xchg
and
mov
jbe
clc
inc
sub
mov
loopne
fstpt
out
push
jnp
mov
rcrl
sub
rcrb
mov
ja
cwtl
out
add
lcall
call
scas
cmpsl
sbb
and
push
std
dec
xor
cli
lods
repz
lea
test
popf
jle
stc
pop
movsl
xor
pop
cltd
imul
dec
jne
push
arpl
sbb
movsl
jb
add
mov
xchg
or
cmc
cmp
dec
sbb
ficoml
push
stos
pop
mov
pop
push
add
dec
cld
pop
ss
js
jb
scas
mov
sbb
pop
cmc
pop
sub
cmpsb
inc
push
push
out
loopne
cmp
decb
iret
sti
stc
and
call
push
stos
pop
mov
mov
je
mov
es
fs
mov
mov
sub
push
mov
inc
je
cmp
rcr
aaa
pop
cmp
data16
adc
mov
cmpb
shrb
in
decl
pop
xchg
push
sbb
movsl
xor
ljmp
call
int
mov
mov
dec
pop
push
lret
sbbb
sub
shll
adc
pop
inc
push
insl
mov
mov
xchg
jns
jl
mov
push
push
push
adc
ret
lods
sub
mov
mov
inc
in
cmp
sarl
rolb
daa
ljmp
inc
push
fnstcw
or
cwtl
jb
adc
lahf
cmp
sub
testl
push
in
xchg
mov
aam
or
neg
inc
mov
sub
jnp
and
shll
jmp
in
daa
mov
and
adc
mov
pop
ret
rcr
adc
cmc
push
push
push
dec
data16
shl
pop
outsb
xchg
fs
sub
xchg
scas
add
add
test
cwtl
jno
rcr
mov
daa
hlt
cmp
pop
int
add
mov
call
aam
daa
lcall
pop
push
sub
aad
bound
das
ret
xchg
jno
jp
mov
add
or
loop
mov
cli
aad
dec
cmp
in
stos
inc
scas
push
loope
cltd
insl
bound
rcrb
dec
fldt
icebp
enter
push
sub
lcall
dec
int
shrb
clc
shll
fdivrs
out
cmp
into
lret
jae
xor
addl
in
xchg
jecxz
and
lods
scas
rcll
aaa
scas
xor
lret
aaa
jmp
sbb
cmp
lods
dec
jmp
cmp
mov
mov
sbb
sub
push
jecxz
add
adc
pushf
dec
xorb
push
add
sub
or
mov
adc
mov
call
push
sbb
cmpsl
cltd
adc
xchg
out
stc
fdivr
push
cmp
cmp
mov
push
aam
pop
sub
loope
cld
sub
inc
lcall
sarl
dec
push
pushf
cmpsb
cmp
dec
loopne
shlb
icebp
outsl
pop
add
test
and
push
leave
outsl
fistl
push
std
or
dec
xor
cmp
out
leave
mov
lret
mov
stos
sbbl
dec
fs
in
incb
sti
std
push
ja
pushf
dec
dec
cmp
icebp
cmpsb
jns
jmp
test
or
lods
or
gs
pop
jg
sbb
pop
xchg
or
mov
aas
loope
mov
rcrl
data16
pop
mov
adc
loopne
aas
dec
mov
xchg
jecxz,pn
xchg
push
mov
scas
adc
fisttps
test
icebp
inc
and
inc
pushf
sbb
insb
sub
cmp
repz
pop
and
movsl
std
scas
es
mov
sub
iret
out
es
jle
mov
mov
inc
hlt
cs
call
test
jo
mov
push
rcrb
push
xchg
xlat
sbb
cmpsb
movb
sbb
add
and
cmpsl
mov
push
lds
pop
insl
fnstsw
lea
mov
inc
xor
popf
pop
ret
enter
dec
and
js
pop
fisubs
push
xor
stos
add
repz
cmp
fistpll
dec
gs
xor
adc
xor
xchg
sbb
xlat
rcr
adc
notl
stc
inc
inc
add
cmp
sbb
aaa
xchg
daa
mov
xchg
insb
nop
iret
mov
mov
and
inc
mov
loop
ret
test
xchg
fimull
mov
sahf
lock
in
xchg
addr16
mov
jecxz
jl
fs
imulb
cs
mov
scas
dec
cmc
andb
arpl
jns
jae
and
cli
jle
xor
adc
jns
push
mov
xor
loop
pushf
cmp
add
jno
xchg
addr16
jne
ljmp
cwtl
and
inc
enter
xorb
cld
cmp
inc
call
jae
fcomps
ret
dec
sbb
shl
mov
loope
and
dec
xlat
and
iret
gs
shrl
and
dec
jp
jbe
pop
inc
sbb
or
jp
outsb
push
xchg
mov
iret
rolb
add
cs
shll
mov
jecxz
add
std
mov
dec
lret
xchg
or
sbb
push
pop
imul
aas
repnz
ja
jle
insb
fidivs
xchg
cmc
or
push
jae
push
movsb
pop
ljmp
xor
inc
pop
push
cld
popf
xchg
call
add
aad
dec
loopne
inc
fcomps
pop
rcrl
lods
lret
mov
mov
adc
clc
xchg
clc
xchg
subb
mov
sbb
fwait
negb
adc
pop
cmp
out
mov
sub
push
sbb
dec
bound
cs
and
loopne
loope
sbb
or
std
outsb
pop
sar
je
clc
call
xor
aas
pop
in
mov
test
mov
xchg
push
repnz
xchg
fldcw
xchg
data16
fucom
adc
mov
popf
loopne
add
xchg
mov
mov
add
out
or
movsb
les
xchg
and
push
jge
fucomi
push
lret
ret
inc
xor
jle
push
jmp
repnz
xor
mov
jne
aam
and
aaa
sti
push
sub
std
sub
adc
fisttpl
clc
inc
mov
sarl
cli
hlt
mov
lret
sbb
mov
jno
int3
je
xlat
mov
adc
xbegin
mov
insl
loopne
cmp
cmp
pop
mov
stos
int3
inc
and
cmp
mov
pop
dec
or
dec
adcb
adc
mov
fisubrl
pop
outsb
cltd
mov
mov
adc
bound
xchg
bound
aam
mov
or
xor
xchg
dec
jl
cmpb
andb
inc
imul
push
xchg
outsl
and
sbb
add
push
mov
cli
scas
in
pop
push
and
lcall
shll
mov
test
xlat
mov
mov
ficomps
pop
sub
inc
cmc
out
xchg
or
xor
cs
sub
dec
sbb
ficoms
sub
xchg
pusha
cmpsb
aaa
mov
pushf
imul
jecxz
xor
push
sbb
or
inc
and
pop
cmp
xchg
data16
dec
pop
adc
push
fs
cmp
bound
jae
or
rcrb
adc
loope
jl
daa
add
jmp
jnp
sub
mov
mov
iret
pop
jns
xchg
dec
pop
lods
loope
lret
xchg
leave
cs
jne
add
mov
push
loopne
mov
adc
pushf
js
fstps
fld
cmp
scas
fstpt
dec
jae
nop
jo
add
inc
cmp
aad
or
dec
lods
bound
xchg
cwtl
hlt
inc
sbb
dec
pop
mov
loop
pop
subb
inc
lret
popa
inc
popf
fsubp
push
pop
rorl
mov
movsb
repz
pop
gs
inc
or
imul
aaa
inc
hlt
and
inc
stos
js
ffree
xor
inc
and
movsb
push
pop
negb
inc
mov
sbb
pop
lock
or
push
addl
mov
mov
lock
jno
divb
lods
xorb
loop
pusha
fdivs
mov
outsb
lods
xor
cltd
mov
or
dec
xchg
cwtl
inc
jae
sbb
js
mov
sbb
inc
xchg
shr
mov
pop
pop
jmp
xchg
mov
stc
repz
insb
adc
mov
sub
sbb
lock
icebp
pop
fistl
pop
inc
push
pop
mov
addb
adc
mov
hlt
jb
loop
in
sub
fcomi
sub
adc
pop
aad
daa
push
pop
sub
add
fidivrs
mov
cmp
and
add
setbe
std
sarl
ljmp
mov
jnp
xchg
dec
mov
arpl
dec
pop
or
xchg
mov
filds
das
insb
or
dec
stos
rol
push
ret
cltd
mov
mov
dec
divb
jae
sub
out
xor
bound
out
out
imul
repnz
mov
and
not
and
sub
into
daa
dec
jb
sub
dec
icebp
lds
mov
inc
enter
ljmp
push
mov
out
insb
inc
test
lods
cmpsl
ret
dec
int3
xorl
mov
out
and
jns
out
dec
andl
mov
sti
lea
adc
xor
fdivrl
jg
mov
into
in
xchg
cmp
sbb
insl
lcall
aam
dec
cmpsl
jae
roll
mov
push
or
mov
dec
dec
adcb
icebp
xchg
cmpsl
mov
icebp
data16
xor
adc
xor
popf
pop
scas
outsl
ret
into
pop
jmp
lret
or
push
aaa
sub
imul
scas
or
push
mov
mov
push
sbb
adc
push
xchg
in
iret
sub
adc
push
imul
loope
mov
mov
insb
sbb
push
adc
push
cmp
test
test
sub
mov
nop
lods
loop
push
push
pop
xor
cmp
pop
mov
dec
dec
add
xor
mov
sbb
jle
xorl
call
aas
pop
cmp
xchg
mov
cmp
mov
push
xchg
lea
out
push
in
jge
push
aaa
adc
add
xchg
sbb
scas
fs
push
pop
ljmp
andb
hlt
mov
jmp
leave
mov
xchg
cltd
sub
les
nop
jle
sbb
xor
andb
hlt
jg
test
lret
xchg
pop
scas
lods
int3
bound
test
cmpsl
cld
push
or
dec
aam
fs
fmull
in
xor
and
or
mov
xchg
cld
fists
or
jno
lret
ljmp
or
das
loop
dec
arpl
inc
ret
int
cltd
scas
outsb
out
sahf
push
sub
xor
jl
and
pop
xchg
dec
lahf
in
push
pusha
and
gs
andl
addl
mov
push
inc
inc
inc
aas
test
mov
lods
xchg
into
xchg
cmc
cmpsl
imull
sti
aam
mov
imul
push
jmp
or
and
fcomps
push
or
sbb
outsl
std
inc
and
dec
dec
aam
test
icebp
sti
out
fildl
popa
andl
push
xchg
push
push
mov
fnsave
push
adc
sbb
mov
dec
mov
xchg
lret
add
nop
sbb
pusha
call
outsl
push
aam
xchg
jnp
or
int
xor
push
dec
fs
inc
shll
in
fcomi
push
stc
xchg
jmp
dec
pop
lret
xchg
push
push
iret
mov
iret
data16
cmp
sbb
nop
addl
push
rcll
cwtl
sbb
shlb
mov
ljmp
lcall
fcmove
cmpsl
imul
or
pop
loopne
sbb
pandn
jle
daa
aad
sub
add
in
add
in
push
hlt
adc
sbb
ror
das
lock
test
arpl
insl
cmp
lods
ds
lcall
sbb
insl
mov
mov
leave
sbb
cmp
sbb
and
mov
lea
mov
movsl
mov
and
xchg
lock
je
mov
mov
cmp
int3
push
stos
rorb
pop
imul
nop
imul
cmp
test
mov
sahf
iret
mov
mov
pop
aad
jnp
lods
push
ds
lret
push
and
sub
fistpll
push
mov
push
inc
movsb
in
push
jbe
repnz
jb
add
lahf
sti
int
dec
cmp
or
sub
inc
mov
inc
in
sahf
loop
xlat
mov
pop
inc
into
sbb
or
dec
xchg
jp
and
pop
gs
jecxz
pop
jbe
sti
xor
repz
sub
jnp
icebp
stc
push
pop
lcall
sub
push
dec
outsl
arpl
adc
out
xor
pop
neg
movsb
subb
pop
mov
sbb
push
pop
dec
mov
inc
and
int
cmp
addb
push
inc
cmp
or
in
ljmp
test
test
adc
enter
or
sbb
testb
shrl
xor
xor
bound
cwtl
add
test
and
mov
jne
leave
mov
cmp
movsb
incl
in
lahf
cmp
in
push
mov
fbld
sbb
gs
lcall
aad
ja
adc
sbb
jg
mov
mov
mov
std
inc
rcll
mov
sbb
in
xchg
test
jp
mov
lcall
iret
jle
push
iret
and
jg
sbb
jge
out
mov
stc
sub
mov
lods
xchg
mov
mov
arpl
inc
push
cmpsl
and
jns
es
sbb
inc
mov
call
sub
xchg
cmp
cwtl
jmp
mov
cmpsl
cli
roll
iret
or
pop
adc
ja
out
mov
lock
ja
sub
sbb
outsb
shl
push
cmp
out
aam
ss
jb
dec
pop
or
stc
add
inc
xchg
ss
enter
adc
in
icebp
or
jnp
lods
push
ss
mov
cmpsb
adc
sbb
or
xor
pop
hlt
dec
lret
pop
mov
add
daa
push
mov
out
cltd
dec
pushf
adc
into
rcrb
nop
pop
push
and
and
gs
adc
push
leave
jne
jp
add
sbb
push
rorl
imul
orb
jnp
les
mov
insl
test
sbb
sti
sahf
int3
mov
inc
xchg
fwait
and
xor
push
jg
lea
cltd
imul
pop
jmp
add
pop
mov
andl
or
jmp
cmp
add
stc
sbb
movsb
adc
sbb
sti
mov
mov
out
xchg
xchg
popa
movsl
aas
jmp
ret
sarb
ljmp
in
in
add
inc
rclb
or
ss
sbb
mov
ret
clc
sbb
in
repnz
pop
sub
shrl
daa
out
loope
iret
cld
jmp
movsb
mov
adc
pop
pop
or
push
dec
jmp
popa
test
test
mov
cmpsb
mov
inc
mov
pop
push
fwait
pop
int3
xor
rcl
mov
and
pop
daa
sbb
or
nop
jge
jl
fcomi
lret
es
and
mov
mov
mov
je
sub
out
jp
add
test
ja
clc
enter
enter
pop
je
push
jle
jmp
fwait
pop
imul
divl
and
add
jl
cmc
adc
out
add
jmp
xchg
pop
dec
nop
fwait
mov
iret
inc
outsl
jle
rclb
dec
sub
je
or
nop
inc
adc
pop
je
aas
jb
lds
das
rcrb
inc
dec
sti
icebp
inc
jge
aaa
and
cltd
loopne
int
mov
and
cld
add
xor
imul
hlt
les
push
fstps
pop
pop
jle
mov
mov
adc
xor
scas
js
jno
xorl
jecxz
enter
rcl
cwtl
xchg
pop
js
pop
sub
arpl
ffree
lock
jae
push
rcl
divl
or
out
adc
sbb
inc
inc
popf
aaa
cmpsl
jmp
addr16
lods
mov
jge
mov
jge
jb
lret
lret
inc
adc
cmp
cltd
incb
pop
and
and
lock
mov
and
or
push
or
push
add
push
pop
or
cld
into
in
in
mov
jbe
or
jns
push
adc
push
cmp
pop
mov
sti
jnp
inc
jnp
sub
popf
push
pop
xchg
sub
jg
mov
call
pop
push
inc
in
sub
imul
jle
pop
ret
pop
popa
fcoml
or
outsl
pop
imul
xor
xlat
inc
mov
mov
xor
mov
xor
imul
inc
push
adc
rol
lret
mov
lcall
lods
inc
pop
cld
xchg
push
aas
hlt
loopne
dec
push
pop
repnz
cld
icebp
pop
out
mov
insl
adc
mov
popl
pop
rclb
inc
adc
cmpb
std
test
xor
add
dec
loop
aad
mov
ret
pusha
rcll
jbe
cld
adc
shlb
xchg
dec
adc
mov
repnz
jnp
pop
or
int3
inc
outsl
push
cwtl
scas
std
xchg
fisttpl
sub
shlb
xchg
sub
jno
das
pop
xor
adc
and
fdivs
arpl
addr16
lcall
in
dec
mov
enter
inc
in
imul
xor
jnp
push
dec
pushf
scas
aas
cld
adc
cli
mov
jmp
sahf
jp
xchg
nop
je
or
out
cli
sub
mov
xor
push
pop
adc
mov
cmp
out
into
mov
or
push
add
in
mov
mov
mov
aam
mov
fwait
jle
fwait
std
loop
xor
jne
mov
jl
jns
hlt
add
mov
xor
xor
jmp
push
stos
clc
in
in
test
repnz
decb
inc
scas
adc
xchg
fsubs
mov
insb
lds
movsl
mov
cmp
test
lods
mov
add
mov
daa
push
loop
popf
push
enter
push
sbb
cmpsb
cmp
jb
mov
xchg
shl
addr16
ss
aaa
sti
movsl
mull
popf
rcrl
mov
add
test
lcall
ret
pusha
xorl
stos
cmp
aad
mov
into
bound
lds
aam
sbb
dec
cmpsb
orl
dec
out
inc
rep
adcb
and
sub
ret
hlt
or
pop
xchg
call
inc
out
jnp
push
rorl
daa
adc
pop
add
aam
fisttpl
mov
mov
stos
les
jle
cmpsb
test
sub
popa
repnz
jo
insb
add
shll
js
addr16
mov
pop
mov
clc
iret
data16
adc
fldenv
outsb
xchg
adc
pusha
push
int
cmp
test
adc
fsubl
or
xchg
loop
pop
inc
or
clc
xchg
int
arpl
fbstp
sub
hlt
xchg
movsb
icebp
sbb
adc
mov
jp
cmp
in
je
imul
insl
nop
addr16
xor
ljmp
mov
shrl
jno
in
mov
pop
dec
iret
mov
jnp
or
sbb
push
sti
outsl
in
or
movsb
sahf
sbb
or
sbb
insl
mov
orb
dec
mov
std
imul
inc
jns
or
imul
fs
xor
loop
sbb
cmp
and
dec
repz
movsl
pop
scas
mov
push
push
mov
mov
dec
test
nop
fwait
push
mov
sbb
stos
dec
fs
and
pop
cmc
popl
xor
lret
xchg
stc
es
into
scas
jae
cld
stos
movsl
andl
ja
imul
movsb
mov
mov
pop
ret
add
pop
inc
xor
cli
mov
fnstenv
lret
xor
lods
lods
imul
xor
pop
jge
js
insl
mov
inc
lret
push
xchg
rcll
imul
clc
pushf
inc
fwait
ret
pop
mov
test
mov
mov
in
or
insl
sarb
xchg
outsl
into
dec
insl
mul
sahf
mov
or
jns
cmc
clc
add
daa
dec
mov
rcrl
mov
rorb
fs
js
mov
and
xorl
pop
popf
pusha
or
cmp
lret
aas
xchg
jne
fistps
mov
negb
xor
scas
pop
daa
call
shrl
mov
gs
cmp
inc
sbb
dec
sti
sbb
mov
test
inc
movsb
mov
pop
popl
mov
xor
mov
push
jg
mov
loope
xor
sbb
outsl
jle
fimull
aam
mov
jns
ljmp
add
xor
adc
mov
daa
pop
mov
movsb
sub
pop
test
push
mov
mov
mov
pop
pop
add
xchg
out
and
jl
js
cmpsb
jmp
negl
out
xchg
add
rcll
push
adc
cwtl
dec
cmpsl
lds
addb
lods
fdivrs
fildll
test
xchg
rcr
pop
test
pop
push
leave
ljmp
lea
outsb
movsb
lahf
mov
sarb
fldcw
roll
lret
mov
idivl
test
sbb
cmp
sbb
mov
mov
fsubp
jp
push
dec
outsl
mov
mov
aaa
mov
push
loope
dec
aaa
fwait
lods
or
mov
jno
les
loope
cmp
lea
cmp
subb
sahf
popl
pop
iret
bound
xchg
mov
mov
fucompp
sub
cld
loop
insb
popf
sarl
pop
pop
jae
fnclex
sbb
sti
movsb
ror
jo
cltd
jmp
dec
arpl
fdivs
mov
mov
ret
je
fdivr
adc
and
and
sbb
mov
adc
dec
inc
pop
sbbl
mov
push
push
pop
inc
jb
in
fstl
popa
inc
pop
gs
and
aam
subb
pop
xor
lds
jae
pop
sub
out
mov
in
adc
shll
outsl
mov
cld
inc
lock
jo
jbe
or
leave
lahf
imul
lea
stc
cmpsb
mov
ljmp
repz
imul
outsl
inc
loop
mov
lock
call
cmp
in
xchg
test
dec
cwtl
popf
xchg
mov
and
xor
cmp
push
mov
imul
call
scas
jge
jae
sub
sub
iret
movsl
jns
out
or
lahf
fisubs
aam
cmp
jno
pusha
stc
rcll
aas
xor
sahf
jne
outsl
js,pn
pop
cmpsb
dec
sbb
dec
daa
cmp
lahf
xlat
mov
adc
mov
scas
sti
push
pop
adc
inc
add
ds
daa
jge
mov
cld
bound
mov
lret
stos
dec
outsb
fbstp
inc
sub
mov
push
aas
dec
fbld
gs
and
rcr
and
adc
mov
mov
mov
inc
mov
mov
xchg
push
sub
mov
dec
fstpt
jecxz
mov
sar
scas
repnz
test
int
inc
sub
xor
je
lret
movsl
or
scas
hlt
stos
daa
test
pop
xor
add
cmpl
and
mov
xchg
test
dec
rcrb
aas
mov
mov
inc
test
push
jg
adc
pop
fistpll
aad
out
ficomps
shll
cli
out
and
mov
dec
cmp
mov
mov
push
add
xchg
mov
and
rcrb
shlb
sbb
push
out
scas
ljmp
test
mov
push
addr16
test
cmpsb
fisttpll
adcl
add
mov
test
cmp
and
mov
gs
xor
xchg
mov
adc
mov
dec
ss
shlb
lock
nop
push
bound
ljmp
in
sub
and
mov
movsl
gs
outsl
ja
or
pop
pop
cmp
sbb
or
movsb
pop
jg
inc
push
mov
lret
adc
mov
xor
cmp
mov
mov
outsl
push
cmp
jle
xchg
push
pop
sub
pop
sti
and
test
lahf
cltd
out
mov
insl
sarl
lods
push
inc
jne
jne
sti
imul
xchg
das
pop
jae
add
std
sbb
mov
pop
cli
jnp
mov
int3
enter
push
aas
aam
mov
mov
dec
hlt
jnp
adc
test
mov
hlt
mov
mov
jg
pop
cltd
ficoms
jne
jecxz
jg
pop
lret
mov
or
or
xlat
lods
mov
mov
mov
stc
mov
lret
mov
fnstenv
jl
dec
out
lcall
adcl
mov
sub
pop
jle
adc
inc
scas
add
mov
fbld
std
xlat
arpl
add
ss
mov
xor
add
pop
sub
icebp
xchg
adc
nop
adc
cmc
sbb
repz
stos
popa
pop
mov
xchg
scas
dec
ja
loopne
push
outsl
jb
cmp
jp
adc
mov
cmpsl
mov
pop
cltd
stos
push
push
pop
or
push
sub
inc
inc
mov
stos
xor
inc
icebp
pushf
repz
std
sub
loop
jl
jno
in
out
add
shr
fstp
cmpsl
sbb
movsb
subb
cmp
inc
ret
test
int
lock
and
mov
rcll
je
outsb
insb
mov
jb
scas
mov
hlt
add
leave
cmpsl
dec
inc
mov
movl
mov
adc
sbb
sahf
daa
lahf
cmp
xchg
jecxz
scas
xchg
movsb
fdivr
xor
test
xor
mov
mov
orb
addl
scas
out
fs
pop
je
and
jae
push
sbb
lock
pop
xchg
out
out
ret
jl
add
jo
cs
stc
fldenv
jecxz
fwait
in
mov
adc
mov
pop
movsl
sub
loopne
mov
mov
xchg
mov
inc
xchg
jmp
mov
sbb
outsl
mov
xchg
push
jb
aas
cli
push
scas
movsl
pop
or
clc
cmp
sub
push
sub
and
cwtl
jg
cs
xchg
rcrb
sarl
inc
fwait
int
mov
sub
adc
mov
push
mov
pop
dec
and
inc
in
push
dec
call
aaa
xchg
cmp
inc
stos
mov
mov
dec
je
fisubl
rcr
cmc
mov
jne
dec
and
rorl
lds
jp
push
dec
cmp
push
in
fdivrl
aas
jns
leave
xor
push
dec
leave
push
repnz
inc
fwait
rorl
je
mov
iret
cmp
rorl
out
mov
xchg
or
jnp
add
outsb
or
jecxz
and
mov
ret
dec
das
or
xor
cmp
mov
int3
adc
out
mov
int3
jle
cmp
sbb
mov
mov
and
xor
mov
xchg
dec
dec
or
mov
or
frstor
push
scas
cmpsl
andb
inc
push
xchg
xchg
push
sbb
negb
dec
lcall
or
mov
jns
xchg
mov
gs
push
lods
and
in
adc
mov
pusha
push
loop
in
dec
mov
or
mov
aam
mov
cwtl
cmp
lods
mov
fwait
add
and
lahf
pop
aad
inc
dec
icebp
cwtl
mov
dec
xchg
rclb
nop
scas
xchg
mov
fwait
aad
orl
addb
arpl
test
repnz
xchg
bnd
aam
xchg
gs
sub
fiadds
lcall
ret
out
mov
jle
push
mov
and
xchg
xchg
mov
iret
inc
rorb
arpl
aas
push
in
adcl
mov
pop
imul
andb
jb
fldenv
popa
clc
mov
imul
and
inc
leave
imul
or
decl
aad
adc
push
clc
notl
or
pop
mov
rep
imul
out
sbb
lea
push
arpl
adc
add
inc
pushl
xchg
inc
inc
xchg
sub
insb
adc
and
rcrb
das
pop
cmp
sbb
and
inc
enter
push
mov
pop
mov
dec
dec
enter
je
adcb
pop
frstpm(287
pop
stos
test
scas
inc
sti
mov
in
jbe
jmp
fildll
stos
lret
mov
in
lock
scas
jno
popa
mov
mov
pushf
add
push
in
push
push
cmp
fwait
dec
push
idivb
push
ss
arpl
mov
dec
aas
pop
lahf
push
xlat
dec
cmp
movsl
fdiv
addb
sub
gs
or
rcrb
pop
lahf
nop
lret
call
stos
or
xor
mov
inc
vpminub
adc
in
pushf
gs
xor
xchg
mov
adc
popa
dec
in
aam
js
iret
shl
lret
sbb
sub
add
mov
inc
cmpsb
icebp
pop
jle
fistl
xor
dec
lods
mov
scas
mov
loopne
push
inc
daa
jno
incb
pop
xlat
jno
push
icebp
push
sub
out
mov
cs
xor
pop
nop
adc
add
push
add
ss
jae
out
pop
sahf
loope
mov
mov
incl
jb
and
dec
ret
dec
hlt
add
loopne
test
jnp
pop
shll
adcl
sub
jp
je
mov
dec
insl
sbb
aam
cmp
push
xchg
jne
out
push
pop
mov
div
cmpsl
loop
pop
push
es
loope
in
xor
das
pop
sub
xchg
repz
stc
sbb
imul
push
push
jl,pn
imul
lods
das
cltd
loop
inc
imul
mov
push
add
cmp
or
fadds
sub
mov
aaa
lret
and
push
in
dec
insl
mov
cli
mov
mov
xor
adc
pop
inc
fwait
outsl
or
out
lret
cmc
and
cmp
mov
out
and
xchg
data16
pop
pop
dec
enter
add
push
mov
ss
in
lret
ss
cmpsl
outsb
insb
mov
jne
imul
rorb
mov
inc
fsubs
iret
mov
xlat
mov
jbe
repz
cmp
xchg
into
xor
mov
dec
std
jo
push
les
testb
jg
test
pop
imul
xchg
and
mov
or
div
xor
or
mov
mov
adcb
js
inc
mov
mov
inc
sbb
cmpsl
gs
idiv
fdivp
sarb
repnz
cs
aaa
outsl
and
dec
pop
pop
mov
loop
or
sub
cli
xor
in
jnp
push
and
fiaddl
scas
sbb
shll
sub
dec
imul
data16
jo
jmp
jl
and
int
dec
movsl
dec
in
pop
jb
pusha
lea
in
mov
adc
adc
in
stc
hlt
xchg
mov
daa
dec
data16
rcl
mov
push
enter
outsb
fidivrs
cld
pop
addl
pop
arpl
mov
lcall
dec
and
cmp
dec
sub
push
jbe
pusha
cmp
rcll
xor
xchg
xor
out
push
jae
daa
xchg
rorl
sub
test
adc
pop
push
mov
std
jg
or
xlat
out
mov
mov
add
push
cmp
insl
mov
xchg
shrb
sti
mov
inc
imul
movsb
push
sbb
jl
add
jae
outsl
sti
and
sbb
stos
jb
xchg
pushf
mov
push
pusha
add
cld
mov
cwtl
push
ljmp
ret
lods
idivl
pop
fcmove
mov
push
test
int3
out
inc
sbb
pop
xor
cmpsl
data16
popa
mov
push
and
out
cld
add
lock
jns
jo
outsl
fs
leave
and
add
mov
int3
pop
stos
aaa
hlt
push
sub
scas
dec
into
mov
xchg
cwtl
inc
cmp
stos
dec
cwtl
sbb
adc
loope
push
push
push
lea
mov
xchg
arpl
and
adc
divl
jmp
fsubrl
push
jg
inc
mov
xchg
insb
gs
xchg
daa
add
mov
sub
xchg
mov
cmc
xchg
gs
addr16
sub
mov
stos
loop
pop
inc
add
jecxz
es
pop
xchg
jg
or
cwtl
ret
lods
mov
out
dec
xchg
jmp
nop
pop
cmpsl
jno
mov
aad
mov
and
pop
and
adc
scas
out
push
push
xor
jo
sti
mulb
loope
cs
jg
test
jno
cli
dec
mov
sar
inc
imul
add
cmc
int3
test
outsb
dec
or
aam
adc
dec
jg
push
and
icebp
or
outsl
jmp
add
push
lods
mov
ja
lahf
stc
inc
jno
mov
nop
xchg
popf
popa
push
push
sub
aaa
and
loope
jno
adcb
add
cli
mov
lods
repz
mov
jge,pn
cwtl
sbb
sub
notl
fsub
mov
lahf
cmp
sbb
and
mov
sbb
mov
pop
pop
or
in
jl
pop
pop
mov
jge
outsb
mov
pop
add
adc
mov
push
mov
sbb
in
pcmpgtd
jle
repz
jo
jbe
je
outsl
in
xor
or
pop
push
xor
rorb
sbb
popf
pop
push
cmc
inc
mov
int3
lods
ja
push
out
rcrb
dec
add
movsl
loop
cmp
ds
fistl
aas
xchg
mov
mov
mov
mov
pop
roll
push
sbb
jno
pop
sbbb
push
add
mov
into
enter
mov
shl
jne
and
mov
mov
imulb
push
aad
imul
movb
inc
push
ret
sub
xlat
shrl
mov
adcb
movsl
frstor
sbb
in
popa
outsb
adc
or
lret
test
fisttpll
xchg
daa
test
jne
inc
and
add
int
cld
and
divl
cmc
cmp
mov
dec
dec
sbb
in
aad
mov
inc
inc
sbb
pop
or
in
mov
into
out
inc
pop
cli
lcall
adc
mov
scas
mov
mov
xchg
mov
xor
cmp
adc
cmp
cmp
in
outsb
test
cltd
test
es
mov
inc
ljmp
cli
mov
sbb
dec
scas
mov
inc
adc
xor
into
inc
insl
mov
dec
mov
popa
push
mov
dec
fisubl
or
xlat
add
pop
or
mov
stos
sub
inc
test
jne
inc
mov
jg
addr16
xchg
pop
mov
int
scas
lret
scas
and
fistpl
sbb
fisubs
pop
sbb
sub
sbb
les
xor
and
adc
lock
mov
mov
lret
push
cmp
pop
pop
sub
mov
shll
mulb
add
bound
sub
pop
aaa
push
xor
add
sub
adc
ja
lret
mov
sbb
out
pop
or
xchg
push
xchg
push
imul
push
xor
pop
dec
mov
dec
outsl
or
sub
sub
and
inc
pop
pop
sub
pop
imul
add
mov
icebp
jae
lcall
push
fwait
imul
inc
imul
rep
push
pop
or
test
or
out
arpl
xor
mov
jb
in
push
mov
or
and
ret
jns
jo
addr16
loopne
sbb
daa
inc
mov
and
inc
scas
das
test
mov
adc
lods
js
jecxz
add
xchg
pop
sbb
aam
pop
mov
jno
mov
int
sbb
cs
or
adc
jp
das
in
jmp
inc
mov
roll
inc
pop
ror
stc
mov
dec
mov
pop
dec
ficoms
sbb
idivl
inc
mov
movsb
lods
aas
push
jne
in
jg
xor
cmpsl
push
sbb
mov
das
and
lock
loopne
inc
pop
lret
and
or
dec
add
nop
imul
mov
orb
mov
fldcw
mov
in
or
addb
loopne
mov
lds
cmp
ret
dec
insl
jo
adc
add
cli
fsubrs
pop
and
push
sbb
jle
inc
in
adc
pop
cmpb
jno
or
pop
outsb
lods
mov
xchg
add
and
push
add
arpl
jo
add
in
cmpsl
sbb
insb
inc
adc
es
mov
pop
jl
pop
mov
jae
stc
leave
adc
test
enter
push
fmulp
pop
dec
push
loop
ljmp
sub
inc
lcall
push
jecxz
xchg
jno
or
imul
shll
add
scas
fdivl
es
sbb
inc
imul
pop
xorb
ret
cmpsb
pop
dec
cmp
dec
and
loop
xor
out
mov
std
mov
js
test
lods
imul
and
fsubs
movsb
call
xor
into
fldcw
add
add
shrl
cmp
loop
jbe
cmp
lcall
ds
andl
and
push
mov
iret
mov
xor
enter
lods
lahf
add
sahf
movsb
movl
add
sbb
push
mov
push
push
shrl
dec
fwait
push
mov
daa
xor
mov
shrl
dec
or
sbb
push
hlt
mov
jno
int
daa
xor
mul
sub
nop
push
repnz
leave
push
mov
sbb
or
scas
and
xor
jns
dec
mov
xchg
cli
push
cmpsl
cmp
add
sub
stc
mov
inc
xchg
movsb
iret
cmc
or
xchg
in
jg
xchg
ret
cmp
aad
rolb
dec
pop
xchg
sarb
call
cmp
jne
mov
cmc
popa
add
push
cmp
scas
dec
xchg
mov
popf
aaa
rorb
test
jbe
lds
inc
add
insb
or
and
push
adc
or
xorl
ret
pop
fisubrs
mov
push
sbb
cs
add
sub
lcall
xor
sarb
inc
or
xor
int
aad
mov
xor
stc
mov
add
fldcw
jb
popf
loop
and
lods
mov
pop
ret
push
dec
ss
add
jo
enter
or
ret
ljmp
js
and
push
dec
cmpsl
pop
pop
xor
hlt
jle
pop
sbb
mov
outsl
xor
xchg
jno
in
cmp
push
jge
inc
cwtl
repnz
mov
push
inc
imul
sahf
mov
fdivr
mov
loope
xchg
fdivs
fsubs
mov
es
mov
and
cld
adc
cli
fistpl
js
dec
add
pop
ja
sarl
out
xor
push
push
leave
jge
cli
les
xor
inc
sbb
es
jmp
repnz
add
lret
icebp
dec
adc
mov
fimuls
sbb
cld
rorl
out
push
mov
repnz
fadds
dec
in
call
outsl
repnz
lock
add
add
imul
pop
jbe
adc
mov
lret
lret
aad
lret
out
cmp
sub
movsb
ficoml
adc
xor
sbb
xchg
jae
add
sub
scas
je
cwtl
imul
and
mov
shll
cmp
pop
jno
movsb
mov
ret
out
mov
gs
jp
repnz
and
call
pop
or
lret
in
mov
outsl
roll
lret
dec
hlt
leave
push
ficomps
mov
loop
addb
lods
call
push
pop
push
call
lret
push
ljmp
inc
nop
or
insb
arpl
push
cmp
sub
mov
adc
jmp
lret
out
xlat
mov
ja
orl
dec
push
cs
jmp
stos
adc
popf
pop
test
mov
enter
sbb
out
mov
adc
push
mov
scas
ret
adc
dec
push
lcall
and
pop
cltd
jle
insb
shll
cld
and
pop
push
mov
or
aas
lret
cmp
stc
push
jne
xchg
pop
orl
into
push
int3
scas
xchg
mov
int3
inc
mov
pop
and
mov
repz
lret
pop
pop
dec
jmp
mov
jecxz
int3
mov
push
pop
push
movsl
cmp
pop
popaw
cmpsl
jns
push
adcb
jbe
or
lods
mov
or
js
adc
addb
add
jno
push
ret
fwait
das
adc
out
aad
in
lahf
fwait
adc
les
add
adc
xor
jp
mov
xor
pop
fistpl
mov
les
sbb
ds
cld
push
aaa
int3
in
in
jae
iret
pusha
mov
sub
lods
push
push
xor
rorl
arpl
or
jp
and
jnp
jo
arpl
jo
push
lods
pop
icebp
subb
mov
mov
sub
mov
cmp
pop
jge
xchg
push
dec
sub
rdtsc
jb
dec
orb
lahf
pop
or
out
outsl
and
add
test
add
fadds
jecxz
sub
js
dec
scas
push
gs
adc
push
add
out
stos
jbe
lcall
movsb
test
cmc
mov
cmp
inc
cli
enter
xlat
fisubrs
jbe
mov
loop
xchg
out
int3
mov
rorl
and
adcl
popf
adcb
in
wbinvd
gs
aas
dec
ds
clc
lcall
lods
hlt
inc
mov
or
ljmp
inc
dec
and
insl
mov
jae
lods
and
scas
stc
dec
jae
fidivrl
and
les
cmpsb
fstps
outsl
je
ja
pushf
add
lret
jmp
jnp
cmp
inc
scas
mov
dec
js,pt
daa
jo
xor
push
outsl
out
movsl
into
push
fwait
ret
pop
pop
sarb
fidivrs
jg
iret
inc
stc
stos
fmuls
sub
bound
cmp
daa
sub
jbe
icebp
jl
push
sbb
lahf
pop
cmp
mov
mov
jbe
popf
inc
roll
fistl
jnp
jae
fmul
cmp
push
add
jae
xor
and
data16
mov
rcl
clc
aad
mov
imul
popf
sbb
jge
dec
testb
aaa
cmp
adc
mov
insb
and
lea
imull
add
push
xchg
adc
loopne
mov
dec
addr16
jle
sub
rclb
into
jno
pop
mov
mov
and
outsb
sub
pop
and
mov
pop
push
clc
lods
jmp
lahf
gs
arpl
sub
mov
mov
jnp
jg
jmp
dec
je
jno
icebp
bound
nop
out
xor
inc
ja
mov
jae
jg
cltd
rcrb
or
mov
pop
arpl
pop
stc
cmpsl
ss
push
cs
push
jo
test
xor
and
jnp
cmpsl
repnz
xor
xchg
sub
cmp
mov
sbb
xor
das
jle
mov
cmpl
pop
sti
aaa
or
jno
push
loop
imul
mov
xchg
inc
pop
and
xchg
insb
or
aaa
xor
jmp
das
sub
std
xor
cmp
arpl
fcoms
mov
in
mov
xchg
xchg
insb
and
pop
push
es
lods
sti
aaa
inc
pop
fwait
pop
and
repnz
or
aad
cmpb
mov
mov
jnp
loope
adc
push
mov
ljmp
jb
lret
shll
les
xchg
adc
mov
cli
cltd
xlat
cmp
je
fs
movsb
test
in
cmpsb
adc
shll
mov
mov
inc
scas
mov
fwait
mov
lods
cmp
dec
dec
xlat
sbb
mov
jbe
fisubrl
imul
cmp
sub
jmp
imul
mov
out
and
add
push
jg
loop
push
lock
dec
cmpsb
dec
aaa
bound
jae
lret
daa
mov
push
pushf
and
out
loopne
movsb
push
stc
out
sar
arpl
repnz
xor
shl
push
jp
imul
and
jmp
imul
aaa
out
ret
stc
das
idivb
mov
xchg
xor
out
sahf
out
jo
adc
daa
add
push
mov
hlt
fisubrs
jl
or
and
or
pop
aam
add
decb
fiadds
push
xchg
jecxz
test
shll
sub
or
ljmp
daa
aad
xor
mov
jmp
xor
scas
fistpl
mov
jmp
pop
cmp
clc
push
out
adc
push
lods
js
sub
lods
pushf
pop
sbb
inc
sti
sub
mov
enter
jecxz
cmovae
push
iret
mov
pop
mov
inc
fsubp
jbe
mov
xchg
cmp
out
adc
adc
sub
int3
mov
int
mov
std
sbb
mov
fstl
xchg
lock
pop
nop
cwtl
push
xchg
out
arpl
test
clc
out
ret
popf
inc
cmc
rcl
jecxz
repnz
sbb
adc
cmp
and
pop
mov
push
inc
repnz
mov
pop
gs
imul
adc
repz
lea
or
cmp
and
cmp
fwait
orl
or
mov
mov
add
mov
loope
mov
int3
mov
pop
jge
inc
imul
popf
std
inc
aas
gs
pop
xchg
mov
cmpsl
adc
push
fmuls
sub
pop
pop
sbb
xor
std
lahf
lock
mov
mov
jle
mov
adc
fisubrs
out
inc
divb
call
loope
ret
lret
stos
out
inc
lea
sbb
lret
mov
fists
sub
clc
jnp
shl
int
ss
out
mov
bound
test
sub
test
data16
mov
jo
xor
sub
push
shll
push
pop
arpl
xchg
cs
inc
xor
jmp
adc
addr16
dec
stc
sbb
lahf
cmp
inc
jnp
jp
cmp
mov
pushf
jmp
gs
imul
jge
jb
scas
and
loopne
and
pop
rclb
mov
mov
mov
int3
loope
addr16
movb
lea
ljmp
add
mov
ss
mov
pop
pfnacc
outsb
insb
lods
test
rclb
stc
out
lret
out
nop
sbb
mov
fadd
add
rcr
addr16
jns
sbb
mov
sub
and
cld
jo
jle
sub
mov
add
lock
add
mov
add
rorb
jl
fisttpl
nop
jo
push
and
jmp
in
jo
jae
push
mov
adc
out
jo
jp
xor
fisttpl
aam
in
add
sub
rcrb
sub
pusha
add
mov
loop
pop
push
mov
sub
fsubs
cs
dec
pushw
jae
dec
decb
xor
es
lea
cmpsb
lds
jmp
imul
int3
jp
sub
mov
cltd
mov
cmpsl
aas
movsb
arpl
dec
icebp
xchg
ss
fdivrl
mov
les
sti
and
pop
cmp
inc
inc
fwait
sub
sub
cwtl
lret
push
mov
pop
sbb
pop
movsb
jb
lret
inc
nop
sbb
mov
mov
mov
adc
mov
push
xchg
addr16
lods
sub
mov
pop
cmp
adc
imul
fwait
loope
outsb
xor
mov
call
nop
ret
add
xor
xchg
adc
cwtl
aad
jb
fisubs
mov
loop
xor
inc
sbb
xor
pop
repz
dec
dec
shll
ds
xor
mov
lods
sub
mov
xor
fwait
push
pop
dec
pop
popf
cld
jl
sub
mov
shll
aad
sti
sub
sbb
inc
fdivs
mov
and
pop
cmc
std
addb
and
lods
push
repnz
in
les
inc
std
lcall
ficoml
leave
cld
insb
sbb
sti
jge
inc
jae
test
rcr
popf
xchg
imul
nop
push
sub
push
lock
sarl
push
jmp
sbb
das
fldenv
mov
jnp
fldcw
getsec
mov
cltd
es
test
lret
mov
les
repz
sbb
and
movsb
or
mov
jmp
and
mov
repz
inc
sbb
inc
pop
mov
add
or
xor
pop
insl
dec
ja
aad
or
adc
mov
jl
leave
sbb
cmp
bound
jns
filds
out
push
inc
cmp
add
jmp
adc
mov
das
jg
out
inc
xor
jge
loop
scas
out
sub
jns
lahf
insb
divl
dec
jns
inc
xor
ret
inc
sub
mov
mov
mov
inc
cmp
mov
sub
test
iret
lock
jns
jns
rorb
movsl
mov
lcall
cmp
enter
out
xchg
push
dec
stos
add
sbb
aad
cld
cmpsb
xchg
int
ss
movsb
xchg
sbbb
pop
cmpsl
inc
cltd
push
mov
outsb
jo
inc
iret
fdivp
inc
mov
mov
push
mov
ret
xchg
into
jae
lods
sbb
inc
fwait
mov
std
sbb
fs
repz
jns
xor
and
xor
cmp
loope
add
stos
pop
or
in
roll
push
sbb
lret
gs
or
dec
mov
shl
cltd
xlat
mov
jle
pop
popa
js
xor
fwait
push
dec
or
repnz
cmpl
in
adc
push
repz
mov
pop
jns
push
jo
aaa
repz
cmp
dec
out
dec
dec
mov
out
outsl
lock
dec
ljmp
pop
imul
jp
sub
shr
je
inc
scas
pop
mov
mov
add
dec
xchg
inc
adc
mov
test
mov
push
xor
js
daa
lcall
xchg
into
lods
int3
loope
adc
add
not
mov
data16
adc
pop
add
jge
lds
xchg
daa
fisttpll
sbb
pop
nop
fsubl
clc
movsb
push
adc
js
bound
mov
cmp
subb
mov
cmc
add
rcll
out
stc
xchg
xor
push
mov
lods
push
js
mov
cmpsl
jns
sbb
pop
ret
push
ret
lods
jp
popa
out
test
mov
lea
aad
pop
or
mov
mov
out
cli
mov
sbb
idiv
dec
sub
xchg
mov
xor
xchg
enter
or
dec
push
clc
out
xor
aas
into
lods
jbe
cmp
test
dec
in
cli
xchg
out
lea
or
hlt
std
stc
jecxz
xchg
jmp
repnz
lea
sub
or
test
shl
int3
in
pop
or
xor
cltd
movsl
retw
loope
push
shlb
inc
idivl
inc
xchg
sub
mov
je
sbb
aaa
mov
pop
in
mov
mov
sbb
dec
mov
insl
push
sbb
rcll
jecxz
sbb
pop
pop
pop
sub
fildll
cs
rclb
mov
stos
fsubrs
or
and
cld
lret
es
js
ja
jl
inc
adc
aas
in
xchg
push
call
mov
out
je
loope
outsb
mov
fwait
jno
sub
hlt
and
xchg
nop
inc
jne
inc
jne
in
jecxz
inc
cmpsl
sbbl
mov
xchg
xor
call
mov
divl
cs
mov
cwtl
dec
in
or
mov
sub
leave
scas
pop
mov
cs
or
xor
push
xor
sbb
mov
arpl
dec
stos
pushf
or
aaa
mov
insl
cs
push
mov
inc
es
xchg
xchg
mov
add
bound
lahf
lods
pop
lods
std
es
sub
mov
and
leave
bound
rcll
dec
xchg
lahf
out
in
sbbb
call
sub
out
iret
int3
mov
pop
mov
mov
jno
aaa
jae
ficoml
nop
mov
dec
mov
in
test
push
xor
dec
adc
gs
shlb
adc
loopne
xor
mov
lcall
fistpll
loopne
les
sub
xchg
sbb
push
inc
sarb
int3
into
mov
int
pop
loopew
adc
sbb
jmp
and
in
dec
adc
adc
sub
or
mov
jge
fcomp
inc
pushf
cmp
pop
mov
mov
ret
repnz
inc
dec
pushf
fsubl
popa
pop
mov
lods
sahf
popa
jns
test
daa
or
or
movsl
cmp
je
and
fcomps
shr
lahf
pop
sub
adc
popf
ret
mov
cmp
dec
or
xor
fsubs
dec
shll
sub
mov
or
in
cmp
leave
dec
pusha
and
mov
push
jmp
mov
jns
sbb
add
sub
or
stos
sbb
imul
popfw
sub
into
cmp
cmpsb
ja
jno
jle
or
push
icebp
lcall
shll
clc
push
mov
push
nop
adc
fmulp
dec
add
stos
mov
pushf
dec
push
jae
push
mov
jle
nop
xor
shl
daa
xchg
mov
jne
cmp
sbb
fmul
dec
xor
jp
xchg
mov
inc
xor
push
xchg
test
popa
aaa
cwtl
dec
mov
sbb
iret
pop
out
lods
cmp
sub
xor
mov
push
fiaddl
sub
insb
leave
and
add
sbb
idiv
and
out
shl
mov
ljmp
dec
push
xchg
jns
xchg
inc
cs
fisttps
inc
imul
pop
sbb
add
sarb
aas
cmp
sub
jge
out
ficompl
sub
mov
mov
xchg
or
fnstcw
sbb
icebp
push
xchg
jp
mov
xor
leave
pop
mov
jl
adc
lret
mov
dec
pop
repz
mov
mov
loopne
in
les
ds
mov
or
int3
push
or
int
inc
imul
test
push
fcom
cmp
bnd
dec
sub
push
mov
cld
jno
mov
testb
and
pusha
inc
arpl
mov
out
icebp
jnp
mov
clc
clc
xor
xchg
rclb
jb
sbb
ds
dec
cmp
sub
lds
mov
out
stos
pusha
xlat
sbb
mov
insb
mov
scas
inc
cmp
bound
in
fstpt
xchg
into
iret
stos
test
and
pop
push
lods
adc
loopne
jg
out
inc
addr16
es
dec
insb
in
fiadds
push
or
sub
icebp
inc
dec
inc
mov
test
xchg
mov
pop
xchg
insl
cmpsl
fdivrp
jge
cs
mov
or
push
or
pop
clc
cmpsb
sbb
xchg
pop
fistpl
mov
xchg
xor
xor
mov
jge
xor
mov
xchg
pushf
dec
ljmp
xchg
pop
test
jmp
pop
lcall
test
lret
mov
push
sahf
and
lds
cmovle
dec
dec
fistps
loope
test
or
orb
mov
call
sub
aam
jbe
pop
jmp
sub
mov
push
jle
hlt
xchg
dec
jmp
jecxz
push
push
xor
cmp
out
xor
bound
in
aaa
pop
and
sub
and
mov
jle
jno
js
addr16
js
icebp
add
inc
push
jp
mov
mov
int3
outsb
sub
enter
addr16
push
sub
pop
pop
ret
out
test
outsb
daa
and
fists
add
je
ficoml
mov
stos
adc
scas
add
lods
les
insl
shr
in
pop
addl
mov
in
dec
mov
test
or
cmp
test
test
cmp
jg
mov
pushf
insb
mov
aam
test
jb
push
inc
jp
mov
or
sub
xchg
pop
daa
adc
push
int
mov
clc
mov
es
les
inc
rcl
test
or
xlat
adc
test
xchg
push
and
or
enter
sbbl
jnp
jge
lret
scas
push
or
rcl
mov
fstpl
push
cmp
mov
add
dec
dec
mov
mov
negb
and
lock
cmp
inc
fcomp
xor
mov
xor
mov
mov
sub
stc
repnz
test
and
jae
imul
or
and
js
daa
push
jle
loopne
xchg
and
inc
push
mov
in
cwtl
gs
adc
inc
jmp
jmp
mov
pop
mov
fdivp
out
mov
call
aaa
push
xor
test
mov
es
iret
bound
mov
mov
movsl
movl
lret
test
inc
aaa
and
xchg
mov
sbb
inc
dec
dec
xor
cmp
adc
stc
push
inc
pop
shll
inc
popf
pop
adc
push
sbb
mov
test
out
dec
or
mov
lods
aad
cmp
pop
adc
rolb
sbb
inc
mov
inc
cmp
adc
aam
jb
jl
getsec
inc
mov
arpl
xchg
stc
push
cwtl
aaa
push
inc
movsl
fdivrl
push
mov
adcl
and
icebp
hlt
nop
fdivrl
rcl
call
lret
xchg
out
or
pop
ds
jno
leave
lret
push
or
in
ret
mov
mov
int
push
cmpb
outsb
push
xchg
loope
cmpsb
pop
lret
push
addr16
cld
mov
movsl
inc
gs
stos
mov
cltd
cmp
addr16
scas
mov
mov
stos
gs
jmp
popa
movsb
sarb
jns
jl
repz
lods
cs
push
popa
dec
mov
or
lcall
mov
xor
mov
stc
sbb
pop
cwtl
mov
sub
sub
xchg
sub
mov
and
addl
mov
and
negl
mov
adc
mov
lock
inc
imul
sbb
icebp
add
sti
mov
pop
lret
mov
fidivrs
sbb
inc
push
leave
mov
mov
jo
xor
or
mov
inc
cmp
jne
push
mov
xlat
pop
xchg
test
or
gs
data16
arpl
jmp
test
mov
xchg
repnz
enter
aas
insb
jle
jmp
sahf
or
dec
inc
js
loope
jae
mov
push
aad
sub
orl
lret
add
mov
add
out
imul
sbb
stc
lea
add
test
lret
in
popf
and
push
pop
or
lods
sahf
xchg
mov
decb
or
mov
negl
and
cmp
fsubrs
xchg
fadd
cld
aam
add
decl
sbb
ret
popf
jge
cmp
and
cmc
xchg
sub
int
sbb
or
in
mov
call
cmp
jno
sbb
icebp
dec
pop
fisubrs
out
sub
fucomi
push
repz
jb
pop
push
lret
push
cmp
loop
clc
fs
popf
sub
add
push
in
sahf
or
push
jg
mov
push
ja
xchg
and
adc
mov
sub
jo
push
xchg
mov
add
xchg
xchg
add
jbe
xchg
xor
and
push
in
push
mull
bound
push
outsb
lret
sub
out
xchg
xchg
in
sub
add
mov
mov
mov
mov
test
inc
push
xchg
aaa
xchg
loop
aam
in
xchg
dec
dec
loop
add
push
sub
cmp
enter
mov
popf
push
jbe
lret
mov
mov
cmp
faddp
rcrb
add
stc
out
pop
les
push
mov
push
pop
cltd
mov
mov
mov
dec
mov
cmp
mov
or
xor
fwait
add
in
pop
or
daa
fmull
xor
dec
mov
pop
mov
and
pop
pop
mov
sbb
or
pop
adc
lahf
dec
mov
call
jge
je
jle
push
xchg
scas
mov
inc
xchg
imul
dec
and
call
or
adc
jmp
stc
das
pop
testb
xchg
icebp
rclb
stc
sub
jge
push
lods
lahf
pop
ja
xchg
mov
add
test
jg
mov
xor
adc
rdmsr
sub
push
or
ljmp
and
jmp
xchg
jb
and
add
mov
pushf
lock
cmp
cmp
mov
add
gs
into
xchg
movsl
push
xchg
dec
xchg
das
cmpsl
and
out
sub
imul
bound
gs
jl
test
in
std
jbe
aam
mull
in
arpl
sbb
pop
jbe
xchg
mov
and
pop
cs
hlt
lock
sbb
and
ljmp
or
int3
pop
mov
ss
sub
mov
stc
ret
out
in
stc
sbbl
repnz
push
add
dec
jge
sbb
mov
xor
dec
lcall
testl
lods
cmp
movsb
xor
ror
push
out
jmp
jle
jg
mov
stc
cmp
mov
adc
iret
dec
adc
cmp
rorl
and
sbb
inc
adc
xchg
push
fiadds
jns
adc
jmp
push
nop
stos
stc
add
xchg
add
lods
xchg
ficoms
loop
xchg
loopne
in
out
mov
dec
fs
pop
jge
jo
mov
loope
popf
mov
imul
xchg
inc
mov
xor
in
jb
fwait
jg
aam
cmp
add
mov
sbb
sub
inc
mov
push
jg
mov
cmpsb
popw
push
cmp
loope
jbe
pop
pop
dec
adc
testl
jae
std
lahf
imulb
cmp
add
repz
push
out
movsl
mov
pop
and
dec
shlb
pushf
fcmovbe
cmpsl
push
lret
scas
in
fldl
mov
or
mov
lret
dec
pushl
push
mov
arpl
pop
call
test
cmp
call
xor
or
jp
cmc
xor
cmp
inc
adc
stos
pop
popl
xchg
addr16
imul
test
xor
lock
out
int3
xchg
icebp
push
mov
lea
insl
aad
ja
mov
out
icebp
push
setno
repz
adc
in
pop
inc
add
icebp
xlat
push
std
mov
push
add
adc
adc
mov
mov
dec
je
xchg
pop
adc
out
push
or
mov
push
ret
adc
xorb
pusha
mov
sbb
idiv
mov
hlt
add
sahf
pop
sbb
rep
loope
mov
inc
fwait
xchg
sub
mov
addl
shrl
xrelease
xor
pushf
pop
scas
sub
adcb
imul
mov
cmp
adc
fistpll
adc
cmpsl
xchg
ror
mov
repnz
imul
ljmp
ljmp
mov
xchg
testl
jge
jp
enter
adc
mov
rolb
fdivrs
mov
add
mov
mov
inc
xor
int3
mov
mov
cwtl
adc
xchg
xchg
pop
data16
add
jge
fs
pop
std
insb
or
jmp
fisubrs
xchg
clc
add
fisubl
cmp
mov
out
fdecstp
scas
mov
stos
jne
cmp
xchg
dec
pop
sar
pop
dec
imul
stos
pop
lret
xor
mov
jae
insb
xchg
mov
pop
mov
cli
stc
rorb
add
add
pop
mov
mov
adc
lret
inc
int3
mov
pop
sahf
pop
cwtl
mov
ja
insb
inc
add
mov
lcall
dec
sub
addr16
xor
enter
or
js
and
dec
arpl
rcrb
fidivs
cmp
add
sahf
stos
in
mov
xor
dec
mov
xor
ficoms
add
sarb
cmc
ljmp
cs
aam
mov
jmp
jb
adc
or
inc
gs
push
fucom
cmpsb
sbb
loop
xor
psadbw
pop
mov
pop
fwait
mov
subb
outsb
push
jle
xor
jecxz
sbb
sahf
int3
outsb
mov
aas
dec
xor
add
loop
dec
sub
pop
andb
lods
ja
fwait
out
push
push
lods
aaa
add
fbld
shlb
adc
cmp
int3
cmpsb
je
mov
ret
xor
jp
cmp
inc
cmp
fdivrl
insl
sub
pop
sahf
inc
mov
sarl
jbe
sbb
cltd
test
sti
scas
sub
pushf
push
mov
jle
add
jno
sbb
sub
shll
jnp
cli
das
jae
movsb
mov
movsl
adc
cmp
adc
movsl
btc
lds
push
mov
mov
xchg
cmp
xchg
vfnmsub231sd
pop
lahf
jbe
shlb
sarl
xchg
push
push
cmp
add
repnz
add
mov
inc
lcall
imul
mov
pop
repz
cltd
pusha
rcrl
adc
gs
dec
mov
jecxz
ljmp
jle
mov
add
xor
jl
test
aam
and
push
adc
and
in
mov
push
popa
cmc
sbb
push
addr16
cmp
dec
inc
div
dec
cld
pop
inc
mov
daa
mov
mov
fimuls
jmp
xchg
pop
daa
jmp
xor
pop
cmp
cmp
incb
push
mov
mov
add
dec
dec
repnz
out
leave
sbb
popf
and
or
das
push
dec
lods
daa
fcoml
adc
pop
xchg
jl
andb
mov
out
loop
sbbb
mov
mov
mov
mov
je
adc
jle
or
aad
push
and
push
mov
cmp
add
popa
add
int3
shrb
inc
dec
aas
scas
inc
mov
xchg
jle
mov
test
mov
rorb
pop
push
cmp
or
in
dec
or
inc
push
lea
mov
add
aad
outsb
sarb
or
or
jmp
gs
cli
push
fistpl
mov
pop
inc
dec
stos
xlat
insb
push
mov
lret
dec
das
add
sti
adc
aas
dec
mov
sbb
shrl
scas
or
orb
or
cmpsb
inc
jmp
xchg
dec
ja
insl
xchg
ret
int
and
popf
dec
aaa
ja
push
mov
icebp
xchg
adc
pop
dec
es
icebp
jo
lds
movsb
and
loopne
fcmovbe
int3
mov
loope
mov
dec
add
icebp
nop
xchg
dec
dec
jmp
imul
cs
mov
cmp
icebp
sar
in
pop
cmpsb
push
and
push
push
mov
mov
shl
mulb
pushf
mov
mov
xchg
shll
mov
or
repz
pop
sbb
lahf
cmpsb
push
pop
xchg
leave
cli
fiadds
jle
nop
xchg
outsl
sub
push
hlt
adc
inc
lcall
xchg
or
mov
xor
out
clc
pop
scas
jo
jmp
clc
jle
xchg
sahf
ficoml
fadds
aaa
xchg
gs
lds
fcmovnu
add
and
jl
mov
inc
mov
ret
mov
sbb
lods
mov
cmpsl
inc
loop
addr16
mov
xor
jp
or
pop
mov
sbbb
inc
smsw
icebp
cld
xchg
lret
mov
pop
mov
cld
xor
or
ja
cmp
int
divl
stos
es
or
push
fxsave
inc
icebp
aas
mov
scas
pusha
push
mov
test
pop
mov
sbb
addr16
add
adc
jno
cmpsb
or
rclb
ret
shlb
and
rcrb
sbb
jmp
cmc
fadds
and
insl
pushf
mov
psllq
stos
add
addr16
dec
adc
pop
stos
adc
adc
push
push
and
push
shrb
enter
lds
dec
out
jmp
fists
lds
lods
and
scas
loope
push
insb
mov
or
popf
jo
xor
sbb
movsl
mov
sbb
push
pop
xor
iret
insl
scas
iret
arpl
sub
into
dec
fisttpll
lods
inc
dec
dec
and
loope
pop
pop
sbb
iret
xor
lods
sub
into
js
inc
or
ljmp
ret
sbb
add
int3
jge
leave
jmp
dec
push
jmp
ficomps
jno
shr
ja
cmpsb
cmp
pushf
fbstp
pop
add
dec
frstor
sub
enter
roll
imul
dec
fistps
fldenv
fisubrs
fidivrs
and
cli
xchg
mov
cs
sub
ret
arpl
push
ja
jecxz
loopne,pt
je
and
jg
jg
les
mov
sub
push
clc
inc
nop
jb
sahf
in
lret
arpl
cmp
pop
scas
and
mov
movsb
sbb
stos
out
ss
fdivrs
pop
or
je
lcall
add
leave
cmp
lea
cmp
outsl
xchg
out
mov
or
mov
test
mov
cmpsb
xchg
jnp
daa
and
sbb
pop
popf
fwait
jnp
in
mov
sbb
push
adc
imul
cmp
mov
test
in
gs
popa
in
es
xchg
daa
rcll
xchg
jo
bound
loopne
stos
cmp
add
mov
daa
inc
mov
mov
imul
repz
inc
xor
xor
shrb
and
je
mov
cmp
sub
ret
xchg
jno
push
test
ja
test
outsb
imul
lods
jge
push
jle
stos
aas
negb
inc
into
fisttpll
cmp
mov
imul
inc
xor
add
sub
mov
xchg
out
dec
lcall
xchg
inc
push
vmread
test
push
add
outsl
stc
and
out
mov
jp
cmp
sahf
fs
aas
shl
ljmp
and
and
lahf
pop
mov
sbb
je
std
loopne
out
movsb
rolb
push
in
std
jb
mov
mov
in
insb
mov
loope
add
mov
mov
test
mov
xchg
rcrb
add
addr16
cmp
fsubrs
pop
mov
orb
ficoml
cmp
rcrb
icebp
cmp
inc
aad
cmpsb
sbb
mov
dec
lret
xor
adc
mov
aas
adc
mov
sbb
push
sarb
negl
insb
aas
sahf
cmp
cmp
pop
adc
jecxz
das
sub
push
sahf
xchg
div
sbb
sbb
lret
pusha
add
shlb
incl
sbbl
scas
mov
imul
out
mov
cmp
inc
push
daa
mov
lock
sub
sbb
shrd
push
lret
push
mov
popl
jne
imul
inc
sarl
jle
imul
fimuls
lret
and
cmpsb
push
das
enter
xchg
pop
sbb
int
lock
cmp
sbb
pop
jno
ret
mov
sbb
mov
lods
pop
clc
icebp
outsl
mov
add
cmp
mov
mov
mov
mov
mov
aaa
je
loope
lods
out
jge
iret
dec
cmp
pop
sub
enter
in
sar
sbb
and
dec
outsb
sub
jbe
shlb
xchg
mov
push
nop
das
jne
shrl
scas
lods
dec
adc
cld
sub
jno
ret
mov
lds
mov
inc
movsl
xlat
ja
inc
shrb
or
aad
inc
jo
int
push
sub
jne
mov
pop
jp
inc
and
nop
stos
dec
pushf
fwait
pop
lret
cmpsl
pop
and
or
add
push
push
sbb
inc
mov
dec
arpl
dec
xor
adc
imul
cmp
test
xchg
jae
sahf
iret
sub
or
cmpsb
mov
add
pop
dec
neg
in
mov
or
sbb
fcomps
in
fwait
jnp
stos
pop
mov
popa
lret
sahf
mov
and
pop
mov
adc
orb
push
sub
or
dec
incl
mov
fistps
add
lock
and
dec
das
outsb
in
addr16
cmp
or
push
mov
mov
jmp
sbb
sarl
and
adc
popa
jl
jge
loope
je
cmp
jl
arpl
es
cmpsb
push
fldenv
or
jae
fnstsw
ret
sub
loopne
dec
ret
inc
jg
sub
test
mov
xchg
nop
fldcw
mov
xchg
sarb
sbb
outsb
je
jbe
xchg
cmp
lcall
mov
lods
jno
leave
test
repnz
adc
mov
xchg
jmp
in
push
dec
dec
sub
rcrb
das
iret
dec
mov
cmp
adcb
and
iret
mov
sub
in
push
push
pop
rol
add
pop
mov
xchg
nop
inc
jb
pop
and
in
inc
pop
xchg
ss
jo
add
push
inc
leave
push
repnz
stc
rolb
sub
pop
pop
stc
cwtl
test
fcmovne
mov
mov
and
jne
adc
cmp
mov
inc
into
in
add
mov
jmp
sbb
insb
loope
fwait
dec
lss
xor
aad
xchg
add
pop
jle
movsl
jns
mov
mov
loopne
sbb
ss
jl
aas
lds
aaa
adc
inc
orl
imul
xor
mov
cli
xlat
sub
mov
jecxz
mov
movsb
roll
test
jge
add
sub
mov
xor
jnp
movsl
loop
cmp
jl
out
inc
cmpsb
xchg
push
jg
add
jo
sbb
push
sbb
aaa
pop
gs
repz
xchg
outsb
das
loop
mov
enter
js
inc
shll
out
push
iret
add
xor
pop
je
fldl
push
xlat
cmp
test
lods
fsubl
daa
push
stc
inc
dec
out
xchg
add
loope
ja
jmp
or
int
xor
ret
rcll
inc
dec
lret
xor
or
push
idivb
pop
jg
inc
pop
int
sub
xchg
pop
sbb
dec
cmp
jno
or
repz
mov
inc
jmp
pop
sub
cltd
pop
fwait
sub
fs
mov
mov
loopne
xor
inc
ja
jmp
push
mov
scas
and
xor
rclb
xor
outsl
jl
push
ficomps
sbb
aad
es
ret
ds
dec
int
push
mov
popf
mov
iret
push
sub
mov
cs
sub
xchg
jg
cmp
addb
ror
jae
add
mov
xor
fdivs
jp
dec
pop
sbb
adc
push
and
dec
pop
setnp
xchg
cmp
sbbl
xchg
in
repz
pop
push
or
jp
leave
inc
daa
mov
jne
insb
mov
and
push
xchg
jecxz
outsl
jmp
adc
jne
lret
mov
insb
mov
gs
inc
and
roll
arpl
int3
fs
shll
xor
and
nop
mov
and
jmp
insl
or
fsubrs
arpl
mov
ja
jo
loopne
popa
nop
push
mov
adc
add
aas
jge
sub
scas
aas
ljmp
iret
pop
test
xchg
inc
cli
mov
push
mov
dec
divb
clc
shlb
repz
outsb
cli
jnp
das
jnp
cld
repz
pop
test
loop
fs
dec
mov
jle
ss
jecxz
and
enter
in
sub
xor
leave
leave
sbb
pop
imul
jbe
sbb
mov
loope
inc
aad
push
pushf
fsubr
ja
ret
cmpl
xchg
sti
ret
mov
jge
in
popa
and
push
or
jmp
jmp
inc
outsb
xchg
ret
fsub
or
push
fadd
jb
fcoml
aas
incl
ret
stc
test
mov
nop
add
mov
mov
mov
scas
popf
daa
jl
outsb
xor
loope
gs
mov
pushf
xlat
mov
out
in
insb
fisubrs
xlat
jno
es
pop
mov
in
addl
aam
and
imul
es
loop
xchg
js
jp
clc
inc
fsubrs
mov
sti
pop
popf
mov
cld
cli
or
ret
or
rorl
mov
jle
and
sub
ja
mov
sbb
xor
mov
xor
push
and
inc
push
cmc
bound
mov
dec
inc
or
xor
mov
pop
adc
mov
push
push
xchg
pushf
pop
sbb
xchg
pop
lods
stos
test
mov
xchg
int3
rolb
mov
pop
sub
jl
jno
jle
pop
or
enter
nop
cld
and
mov
fidivl
insl
mov
jmp
dec
jmp
scas
adc
mov
lcall
pop
push
or
jo
add
sub
outsb
dec
fcmovnb
imul
and
jb
lea
xlat
popa
aad
inc
jne
and
pop
dec
push
and
flds
in
int3
imul
setp
std
inc
push
roll
movsl
sub
pop
add
repz
dec
lds
sahf
sahf
pop
cmp
inc
mov
pop
inc
add
into
pop
fwait
dec
imul
adc
imul
sub
mov
cmpsb
cmp
icebp
ja
adc
inc
stos
mov
pop
xlat
xor
push
pop
pop
aad
popa
les
pop
fidivs
neg
cmp
sbb
sti
ret
addb
jae
xchg
sub
adc
add
test
cs
int
inc
pop
lcall
mov
push
filds
jge
test
cltd
dec
outsl
ret
xor
sub
push
jne
cmp
or
imul
imul
pop
int3
push
faddl
mov
rorl
and
xchg
pusha
inc
sbb
pop
cmpsl
repz
inc
mov
push
lret
psadbw
and
jnp
mov
rclw
adc
daa
rcr
sub
sbbb
mov
imul
add
xchg
out
leave
push
push
mov
inc
clc
and
cmpsb
adc
mov
in
dec
lret
inc
xchg
outsl
sub
or
jge
daa
xchg
lea
test
nop
pop
imul
pop
pop
pop
in
push
mov
sbbl
push
test
ja
sub
inc
lcall
mov
stos
mov
xor
imul
fdivs
daa
adc
punpckhdq
pop
jae
int
push
and
imul
fndisi(8087
fistpll
mov
pop
lods
pop
xor
ret
jno
mov
pop
ret
in
jnp
or
movsb
sub
dec
jno
sub
lods
adc
push
pop
fidivs
lock
inc
in
sbb
sbb
test
lahf
call
xchg
jo
cltd
addr16
out
fs
sub
ja
fstl
mov
cmp
cmp
inc
mov
arpl
adcb
jecxz
mov
jp
xchg
fisubs
jbe
scas
pop
call
out
mov
pop
cs
mov
inc
pop
sub
pop
jo
jbe
or
gs
cmp
inc
add
xor
mov
outsb
test
sbbl
movsb
ss
ljmp
cmp
ret
pop
sti
jge
das
insb
je
popa
and
mov
jp
lods
mov
iret
out
add
inc
aam
add
cmpsb
mov
clc
pop
enter
stos
sbb
xor
js
das
orb
mov
mov
dec
lods
mov
rcrb
cmpsb
mov
das
xor
add
out
jno,pt
sub
and
stos
dec
rcr
mov
outsb
or
repz
dec
adc
sbb
aad
and
adc
dec
lcall
sub
ret
xchg
cmp
pop
fmuls
bound
mov
icebp
in
sub
hlt
inc
mov
pusha
pop
ljmp
xor
lret
mov
jl
ret
mov
sub
jg
aad
lret
xchg
xlat
incl
mov
push
cld
insb
dec
jnp
and
insl
test
test
pop
push
test
shrb
push
lock
andl
stc
jb
jl
aas
sarb
out
gs
in
mov
dec
mov
stos
js
dec
scas
leave
dec
mov
xchg
out
lods
jb
mov
jecxz
sbb
insb
push
jge
aad
addl
mov
cmp
test
shrb
scas
into
outsl
add
lds
notl
xchg
xor
xchg
lods
cmp
lret
shrb
aam
push
icebp
cltd
lahf
adc
ljmp
cmpsb
in
xor
shll
rcrb
dec
add
push
frstpm(287
cmc
and
cwtl
idivb
mov
or
adcl
repz
mov
jo
jo
pop
insl
pop
ss
pop
sub
imul
ljmp
mov
ret
ret
pushf
fsubrp
push
mov
insl
push
jns
inc
pop
push
mov
jns
lods
or
push
ret
div
dec
rcll
pop
push
adc
pop
pandn
adc
fldlg2
std
std
jl
or
mov
adc
cltd
dec
or
mov
jp
andb
in
push
add
int
push
sti
inc
ljmp
or
clc
sub
das
lock
push
enter
sbb
push
xchg
bound
mov
inc
dec
push
fmull
test
sub
xor
mov
and
rorb
xchg
test
xor
leave
xor
or
mov
loop
cmp
add
fmul
out
idivl
sub
stos
pop
fcomps
inc
sarb
sbbb
sarb
pop
fs
daa
adc
call
pop
add
loopne
pop
das
sarl
pop
jmp
sub
mov
jne
shrb
mov
mov
lcall
enter
dec
jl
out
inc
into
add
adc
xchg
dec
xor
xor
loopne
ds
sub
aaa
and
lods
dec
inc
out
dec
jbe
and
jecxz
cli
imul
sbb
fldt
sub
and
and
sti
jbe
and
es
sub
jge
xchg
rcll
cmc
jb
push
push
push
and
mov
inc
xor
pop
push
out
mov
ficoml
adc
fldl
mov
mov
test
testb
mov
inc
cmc
popa
mov
stos
cmp
lret
repz
mov
xchg
pop
imul
fwait
addr16
and
je
mov
or
shll
loope
cs
call
mov
mov
push
ret
push
pushf
popf
popl
test
or
sbb
mov
into
loope
data16
push
add
dec
and
xlat
into
jno
sbb
lcall
push
dec
bound
popf
xchg
stc
popfw
pop
and
loop
enter
repnz
sbb
jg
sbb
or
and
pop
cmpl
mov
sahf
cmp
xor
fstl
sbb
jnp
mov
fisttps
push
adc
cmc
sbb
mov
repz
imul
xor
mov
add
shl
lret
push
cmp
std
xor
subl
aad
pop
inc
cwtl
fs
jg
mov
loopne
adc
mov
push
cli
clc
dec
nop
push
ss
or
inc
fs
xor
pop
fs
push
or
arpl
cmp
js
shll
cmp
and
push
mov
jl
sbb
nop
xor
dec
mov
mov
xchg
cltd
jns
xchg
fs
dec
adc
and
inc
or
mov
out
sbb
popa
cmp
jo
or
leave
out
jb
sub
adc
pop
pop
ss
mov
cmp
repz
int
or
insl
inc
sarb
inc
movsl
ljmp
sbb
inc
scas
daa
xlat
sbb
cwtl
in
mov
ds
lcall
mov
jmp
in
outsb
cmp
mov
pop
fstpl
sub
idivl
cmc
push
ffree
sbb
mov
lret
xor
arpl
test
fnsave
pop
mov
add
jmp
repz
pop
std
clc
mov
cmp
outsl
jp
mov
hlt
pop
adc
std
frndint
bound
loopne
pop
mov
je
sti
mov
shll
sub
jno
pop
sub
mov
lcall
mov
cli
das
test
fnstenv
and
cmp
loope
xor
loopne
enter
fsts
leave
in
add
lret
sub
ja
push
or
or
cmp
adc
dec
jge
mov
xor
fisttpl
cltd
cmpsb
add
outsb
ja
xchg
scas
and
lea
cld
jbe
sbb
sarb
xchg
or
dec
in
lds
not
pop
jo
cmpsl
outsl
lea
or
jb
imul
add
xchg
rclb
jb
lret
ficompl
scas
adc
iret
movsb
mov
xchg
aad
in
in
mov
sbb
add
xchg
int3
dec
jmp
and
mov
es
das
outsb
jle
ret
dec
dec
add
jecxz
lret
enter
in
xchg
test
cli
push
xor
push
and
and
mov
repz
add
ret
inc
adc
cmp
pop
imul
mov
leave
and
loopne
pop
jmp
dec
xchg
sbb
adc
stos
dec
fwait
fwait
aad
and
pop
dec
ljmp
pop
stc
testl
mov
push
or
das
or
ljmp
inc
std
xchg
xchg
jl
xchg
dec
es
ds
dec
push
loope
mov
repz
out
test
inc
jae
call
cmpl
mov
mov
scas
pop
daa
lret
adc
mov
aam
js
testb
ja
xor
and
fnstenv
mov
dec
mov
inc
fs
mov
sub
ss
repz
jg
xchg
mov
lock
adc
jb
fsubp
int
rolb
jge
pop
hlt
ret
movd
pop
insb
aas
std
repnz
pop
ja
lret
pavgw
xchg
sub
dec
push
movsb
outsl
ret
adc
cmp
add
add
ljmp
fldl
pop
dec
nop
int3
out
inc
lcall
leave
jns,pn
das
inc
xor
sbb
fdivr
sbb
xchg
shlb
gs
out
jp
cld
mov
jns
addb
push
daa
jae
mov
dec
dec
mov
lret
cmp
push
test
jge
mov
cmp
inc
in
jns
rol
jmp
fs
cmc
cli
sub
xchg
int
inc
rcrl
push
leave
cltd
addl
bound
cs
fisubs
xchg
lea
cli
shrl
mov
pop
daa
jne
enter
sbb
addr16
adc
sti
daa
xor
xchg
sub
les
insb
leave
or
loop
daa
bound
dec
jge
cwtl
outsl
inc
int3
dec
adc
in
jb
popa
inc
cli
lret
push
xor
mov
out
cmp
xchg
mov
push
fstps
or
xchg
std
subb
sub
inc
outsb
add
imul
mov
shll
aam
add
mov
ss
sahf
pop
fsubs
jo
xor
loope
fcoml
cmpsb
jmp
push
hlt
int3
out
push
push
jo
clc
stc
jg
in
popa
lods
leave
mov
out
ja
mov
stos
icebp
daa
mov
cmpsl
lea
sub
out
pop
repz
clc
push
insb
or
dec
jg
jp
cwtl
ret
ljmp
jne
stc
fxch
aad
fdivrl
sub
push
adc
aaa
jbe
lds
bound
out
mov
xor
call
mov
mov
fstpl
pop
es
notb
adc
loop
adc
add
adc
mov
inc
xchg
pop
inc
xchg
shrb
lea
mov
push
lds
fldcw
incl
ret
js
int3
std
in
mulb
mov
or
xchg
arpl
rep
cmc
and
fucom
ljmp
pop
rcrb
push
stc
into
rclb
int
inc
add
adc
xor
mov
mov
in
xchg
sbb
ds
jl
stos
fs
lcall
rcrb
jae
mov
xchg
jle
shll
mov
lgs
ljmp
mov
sbb
imul
xchg
and
jecxz
aad
mov
rorl
inc
mov
call
lahf
mov
mov
aaa
movsl
xor
push
sti
and
decl
lock
popf
sar
out
xchg
pop
pop
call
dec
loop
insl
add
xlat
out
pusha
dec
xchg
inc
subl
lea
push
push
sti
mov
add
incb
mov
xchg
mov
stc
aad
inc
pop
or
in
xor
push
ficoms
rcrl
mov
mov
xor
push
shll
dec
test
pop
cmp
adc
and
leave
push
scas
mov
nop
dec
xchg
jo
push
ret
fists
mov
stc
xchg
adc
in
mov
adc
imul
mov
std
jmp
push
nop
arpl
adc
fucomp
adc
mov
xor
fwait
xor
xor
ja
or
sbbb
fiaddl
mov
clc
xor
jle
cwtl
jns
out
sub
add
out
ret
lahf
sbb
cmpsl
or
mulb
lret
mov
adc
ljmp
pop
mov
jno
nop
repnz
or
push
das
mov
mov
and
xchg
popf
inc
je
inc
mov
outsb
mov
xchg
clc
addr16
mov
jmp
das
pop
sti
int3
jae
addr16
cltd
cvtps2pd
mov
movl
or
ss
push
pop
and
xchg
pop
data16
pop
lods
pop
test
sub
mov
jge
dec
jnp
mov
idivb
mov
stc
gs
sub
in
sbb
add
enter
sarb
adc
call
pushf
or
das
xchg
insl
lea
repnz
push
inc
xor
mov
mov
in
mov
add
imul
push
inc
mov
lock
adc
rol
cli
dec
push
xor
popa
jns
pop
sub
xchg
test
pop
inc
xchg
fisubs
movsl
pop
scas
and
sbb
fsubrl
inc
hlt
mov
fistpl
mov
jbe
push
insl
int
xor
mov
cmp
ret
cmc
movsb
in
mov
add
out
adc
or
cwtl
inc
cmp
sbb
xchg
out
push
jge
add
cli
jecxz
vrcpss
sbb
inc
add
lret
test
xchg
aam
rorb
xchg
sub
test
mov
mov
push
es
fldt
or
ljmp
lock
aad
lds
cli
pusha
cmp
ffree
divb
xchg
or
aaa
jp
mov
shll
mov
sub
jl,pn
mov
sahf
push
lock
inc
push
mov
cmp
ljmp
lea
bound
jmp
test
out
test
test
push
imul
ret
push
inc
add
les
cmp
cld
lea
jne
cmp
popw
mov
jb
insl
mov
xchg
mov
adc
mov
pop
inc
jl
pop
push
mov
jle
lods
and
fsubrs
clc
loopne
mov
jns
push
movsl
mov
dec
xchg
sub
gs
cmp
js
push
icebp
ljmp
hlt
push
xlat
inc
arpl
stos
fucomp
cmp
bound
popf
fsubr
push
fsts
adc
adc
pop
cli
scas
int
pop
shll
test
xchg
dec
push
pop
adc
mov
iret
or
mov
adc
mov
loopne
ficoml
pop
sahf
adc
push
rolb
in
mov
mov
dec
xor
xchg
jo
ljmp
out
and
mov
mov
jbe
adc
mov
xchg
popa
add
rcrl
fcoms
insb
or
pop
sbb
mov
fwait
xor
mov
sbb
mov
lods
pop
lahf
and
lock
pop
sbb
cmp
adc
sbbb
mov
add
gs
mov
mov
xlat
push
rorl
neg
push
and
popa
call
jns
dec
pop
int
sub
movsb
cmp
and
aaa
fisubl
mov
lret
inc
and
push
aaa
dec
loop
xor
push
mov
out
jle
cli
jae
add
outsb
sub
xor
xchg
subl
lds
or
sub
or
mulb
icebp
in
inc
ret
pop
ds
mov
mov
andb
in
cs
sub
lods
add
jne
jecxz
fistpll
jns
iret
pop
adc
jo
jg
and
push
dec
lods
rcll
stos
cmpsl
push
or
or
enter
jl
ja
cmp
xor
pcmpgtb
mov
push
and
test
cmpsb
dec
in
xorb
or
or
jp
aad
pusha
inc
jg
movsl
into
add
int3
cmpsl
pop
push
inc
cmp
sub
and
mov
sahf
hlt
dec
sub
fimuls
mul
pop
push
cs
icebp
rcrb
lcall
addr16
addl
imul
in
stos
out
fstl
fwait
shrl
js
pop
psubsw
and
xchg
cmp
int3
out
cld
mov
cli
shll
push
addb
add
daa
movsw
leave
mov
pop
mov
jmp
add
push
sbb
pop
movsl
outsl
mov
mov
loop
icebp
and
mov
les
call
int
ret
jbe,pn
aam
or
in
jo
clc
rcr
or
or
adc
jbe
push
mov
mov
stos
arpl
fistl
inc
dec
mov
das
movsl
or
adc
ds
fcomp
loop
insl
add
jnp
push
cli
jecxz
push
rcrb
cmpl
xor
addl
int
sbb
mov
outsl
pusha
shr
mulb
gs
in
cltd
ficoml
sbb
cmp
ds
pop
les
fisttps
scas
push
cmp
sahf
push
js
ljmp
adc
mov
pop
imul
lahf
pusha
jno
lock
cmp
adc
repnz
sarl
sbb
add
sahf
outsl
es
cmp
cld
outsb
lahf
add
sbb
insl
push
lret
cmp
and
push
ss
jbe
xchg
mov
mov
outsb
mov
xchg
inc
and
out
mov
mov
jne
pop
adc
popf
inc
or
jae
cmp
sub
pop
add
push
mov
stos
mov
scas
fwait
jecxz
inc
mov
sub
sti
stos
pop
repnz
rol
test
pushf
add
add
insl
in
std
fsubl
xchg
mov
orb
add
clc
jno
test
in
and
ds
aam
negb
rolb
bsf
mov
dec
pop
adc
adc
test
scas
push
ffreep
mov
push
xlat
mov
pop
pop
lret
or
loop
lret
push
jae
int
in
mov
xor
fnsave
incl
outsb
fistps
cmpsl
jle
les
fldenv
push
pop
das
inc
je
xor
sar
mov
or
dec
jnp
pextrw
pop
mov
mov
dec
mov
stc
outsl
mov
push
sub
iret
mov
sbb
mov
xchg
mov
fdivrs
sti
out
cltd
xchg
lcall
push
sbb
enter
xlat
jns
push
cli
adc
stos
std
pop
xor
sbb
inc
arpl
lret
or
push
push
mov
rorb
mov
mov
sahf
mov
inc
pop
jae
cmpb
push
test
inc
pop
xor
repz
in
jnp
orb
fnstenv
cmc
popf
call
int3
in
int3
mov
leave
add
and
cmp
add
xor
xor
xchg
xchg
lock
adc
das
out
ret
stos
std
mov
jae
mov
mov
sub
sarl
loopne
cmpsl
cmpsl
popa
imul
and
cmp
dec
addb
lcall
mov
mov
xchg
adc
divb
adc
jecxz
push
lret
out
sub
cwtl
fldcw
loop
add
sub
fnstcw
dec
xlat
and
cmc
adc
adc
imul
cmp
xchg
sub
and
fdivs
inc
and
sbb
and
push
lock
mov
jae
mov
aad
insb
mov
pop
test
ficomps
cli
inc
mov
movsb
and
add
fcom
ss
mov
jmp
or
in
ds
addr16
jbe
adc
and
out
idivl
inc
scas
stc
adc
mov
pop
pop
xor
dec
pop
add
inc
cmp
addr16
sbb
cmp
fwait
push
jmp
dec
in
add
push
stos
cmp
mov
mov
loope
leave
cli
push
inc
pushf
in
in
pop
test
lods
rcrl
in
mov
or
cmp
and
cmpsb
jo
in
insl
fbstp
cmp
lahf
cmp
lds
ljmp
dec
clc
and
mov
scas
jle
sub
mov
imul
pop
js
cmp
neg
int3
and
fdivrl
lock
imulb
inc
sub
xor
in
psrld
lods
mov
popf
outsl
scas
bnd
mov
out
scas
mov
fcomps
mov
pop
dec
jnp
dec
sub
mov
andl
adc
mov
mov
testl
xor
jbe
aad
out
fcmovnbe
stos
lods
mov
inc
and
sarb
mov
and
test
jo
out
push
mov
addr16
mov
mov
rcrl
in
push
sbb
sbb
push
add
imul
insl
gs
adc
test
aad
test
aas
sbb
jns
insb
imul
int3
xor
ss
mov
dec
mov
loop
cmp
push
stos
sbb
push
inc
sti
popa
rcll
shl
sub
cwtl
push
push
sti
aad
xor
push
mov
add
cmp
and
es
cmpsl
cmp
adc
aas
aam
mov
movsb
mov
in
into
mov
mov
mov
data16
test
cs
into
out
ret
leave
sbb
icebp
pop
sub
shlb
and
or
rcll
cmp
call
xchg
les
repnz
out
push
pop
pop
jo
cmc
cwtl
add
ja
test
popa
sbb
pop
push
mov
vpcmpeqb
sbb
stc
mov
inc
pop
stos
loop
xchg
xchg
mov
mov
inc
mov
lea
loope
test
push
mov
bound
or
jle
mov
stc
sbb
jb
xchg
mov
call
addr16
mov
mov
dec
inc
jb
mov
jo
jbe
in
fdivr
add
jmp
or
mov
xor
fisubl
xor
fcmovnbe
xchg
adcl
jecxz
xor
ret
jns
lahf
into
rclb
adc
ret
test
xchg
pop
fadds
pop
pop
lea
out
and
hlt
in
movsl
push
les
xor
fcomps
add
cmp
in
scas
std
lods
fdivrs
jnp
jmp
xor
and
jae
adc
cld
shl
add
fcomi
push
lret
xchg
jb
adc
mov
or
outsl
inc
cs
das
lock
inc
leave
iret
out
sarb
aas
mov
aaa
out
or
stos
pop
cli
out
add
in
and
cmp
mov
sbb
lea
in
jle
aaa
mov
xchg
outsl
xor
mov
insl
rcll
int
push
push
add
lods
pop
inc
jnp
testb
cmpsb
cvtdq2ps
jnp
je
mov
loop
stos
scas
xor
int
add
cwtl
sarl
mov
lock
ja
mov
mov
scas
or
rclb
lcall
movsb
xor
popa
sub
fldcw
insb
sbb
orl
lock
fcmovnb
adcb
xchg
xlat
adc
imul
sub
stos
xchg
loope
push
test
ds
pop
shl
ja
jle
mov
mov
movsl
fcmovu
pop
dec
cwtl
stc
xchg
es
fists
cmpsl
loope
mov
push
pop
inc
leave
and
pop
fsubrs
pop
sub
fsubs
or
lret
inc
mov
imull
or
jne
cmpsl
and
jbe
stos
cmc
mov
add
mov
lods
mov
ja
nop
xchg
pop
pop
jecxz
xchg
cmc
data16
arpl
mov
in
push
jae
adc
mov
adcb
cmpl
in
pop
pop
push
lcall
mov
cld
jmp
int3
jb
dec
hlt
mov
fs
ss
outsb
pop
mov
jle
lret
dec
repnz
roll
pop
or
fnstsw
call
ljmp
cmp
jl
test
push
cmpsb
mov
adc
sub
jae
mov
sub
ljmp
ja
leave
xchg
push
lret
mov
nop
and
inc
sub
mov
mov
das
and
in
mov
mov
mov
std
stos
cmp
test
loope
xchg
fst
sub
iret
aaa
sar
dec
mov
outsl
pop
mov
cmp
out
or
fimull
movsl
out
je
mov
push
ret
shlb
loopne
or
jns
and
daa
cltd
or
push
lahf
and
mov
mov
out
data16
sahf
add
mov
or
lea
out
dec
imul
xor
das
xchg
jo
push
dec
adc
lcall
cmpsl
push
push
in
xchg
adc
mov
pusha
imulb
push
push
jmp
inc
jno
mov
fnsave
fstpt
mov
addr16
lret
mov
adc
jne
or
in
mov
mov
dec
shl
mov
movsl
jns
in
jp
adc
jnp
xchg
lahf
jp
push
in
dec
xchg
das
push
pop
add
fisttpll
dec
mov
or
out
lock
sbb
mov
mov
adc
mov
sbb
clc
cmp
inc
sahf
fwait
jns
out
xchg
lcall
mov
mov
out
push
pushf
sbb
ss
push
xchg
and
push
push
xchg
add
mov
roll
xchg
xchg
adc
in
xchg
pop
and
in
xchg
cmp
incl
mov
push
sub
test
int
xor
sub
in
and
pop
adc
dec
rorb
les
fsub
mov
gs
mov
pop
stos
shl
andw
arpl
jmp
pop
pusha
xchg
xchg
scas
adc
lret
xlat
push
cld
xor
scas
jl
xor
add
lock
adc
adc
or
shrb
cld
imul
mov
aam
jnp
push
outsb
cmp
ficoml
rcl
push
and
ficomps
insl
jmp
jno
adc
dec
sub
imul
repnz
jne
jb
mov
ret
sbb
insb
or
loop
stos
mov
loop
push
ret
dec
sbb
dec
enter
icebp
scas
or
dec
loopne
xlat
les
sar
adc
mov
test
das
xchg
and
inc
outsl
out
jne
aam
in
jle
lds
xchg
pop
mov
movsb
ja
push
mov
imulb
sub
clc
out
push
in
std
repz
fldl
push
test
movsb
jg
js
push
sahf
and
scas
sub
sbb
add
adc
push
repz
xchg
pop
or
cwtl
shl
divb
xor
imul
and
fdivs
sub
mov
fistl
call
repz
xor
jbe
mov
jge
cltd
mov
pop
test
stos
xorl
fs
lret
or
and
xor
jle
int3
movsl
stos
into
or
dec
leave
stos
adc
shrl
dec
dec
aad
lret
faddl
test
sahf
or
and
ds
aam
and
call
nop
movsb
pop
xchg
push
cli
push
sub
cmp
and
fnstenv
jge
dec
xor
sti
sbb
pop
sbb
int3
dec
aas
or
test
mov
add
pop
stos
es
pop
pop
xor
faddp
xlat
clc
scas
mov
fdivrp
add
inc
ja
pop
mov
cmp
jo
call
xor
mov
jmp
sbb
lcall
rcrl
mov
xchg
lcall
movsl
test
cli
jge
jle
sub
fcompl
loop
scas
out
mov
movsb
test
mov
sbb
scas
icebp
stos
ficomps
iret
sbb
mov
mov
and
mov
pop
js
mov
pop
js
inc
or
rcrb
sub
lods
mov
popa
adc
cmp
dec
mov
inc
and
cmp
idivl
lcall
or
sarb
xchg
jno
pop
mov
and
jmp
mov
mov
cs
jge
and
pop
lods
pop
dec
test
leave
add
aaa
movsb
out
incb
mov
cmp
out
mov
ds
or
or
ret
adc
push
inc
sti
movsl
or
jmp
add
or
and
xlat
adc
test
movsb
pop
mov
push
mov
jno
dec
imul
push
or
cld
in
xor
std
insb
xchg
gs
xchg
jle
test
in
mov
mov
insl
rcrl
test
cmp
dec
lods
sbb
pop
icebp
xor
xor
int
test
je
xor
mov
lea
popf
ljmp
loope
or
adc
cmp
jl
xor
pop
sahf
fneni(8087
rcl
xchg
cmp
cmp
push
aas
cwtl
add
pop
popf
daa
js
pushf
loopne
sbb
push
cltd
xorb
mov
xlat
mov
daa
jnp
ja
mov
test
imul
xchg
leave
xor
push
into
rcll
jae
cmpsl
and
cmpb
lock
xor
mov
je
xor
lret
jne
push
mov
int3
or
stos
or
in
xorb
rolb
aas
jg
fcomip
pop
add
mov
xchg
mov
insb
addr16
mov
pop
ret
xchg
mov
adc
dec
and
inc
cld
cmp
xor
int
addl
cmc
into
jle
push
aas
lret
xor
loop
mov
mov
push
lcall
mov
add
jno
mov
mov
sbb
mov
sti
mov
and
adc
movsl
fistps
pop
ret
loopne
fs
push
cmp
lcall
mov
xchg
sbbb
push
cli
enter
and
clc
test
xlat
hlt
jns
lods
dec
sub
push
or
ret
lods
mov
lock
mov
jne
mov
push
pop
test
aas
push
cwtl
cmovne
int3
mov
std
sbb
adc
mov
out
jp
mov
idivb
sbbl
sahf
push
pop
mov
sbb
xchg
xor
cmp
mov
mov
pop
cli
ds
shl
inc
dec
xlat
push
jns
lods
push
ret
movsb
push
pop
or
dec
ret
ja
sub
inc
push
sub
test
shl
adc
aaa
add
pushf
pushw
in
dec
cmp
xchg
cwtl
mov
push
pop
or
jae
aad
push
scas
hlt
xchg
das
inc
mov
add
test
jns
jno
sub
sbb
jg
add
mov
push
add
iret
test
xchg
mov
les
jge
call
pop
scas
cltd
sbb
pop
jno
rolb
adc
jge
test
sub
rcr
test
test
mov
in
es
ljmp
movhps
push
xor
xchg
inc
cld
es
loopne
into
int3
in
daa
pop
jmp
aaa
push
adc
xlat
pop
repz
xchg
imul
imul
sub
leave
mov
add
imul
xor
lahf
je
dec
mov
sbb
orb
out
cmc
ja
jne
imul
int3
out
fwait
aas
and
inc
andl
test
and
xor
jbe
stc
scas
je
inc
les
out
lds
mov
or
icebp
lods
fisttpll
fdivl
jbe
pushf
jmp
out
xchg
out
scas
sbb
add
shr
push
pop
add
mov
jnp
and
dec
xchg
cwtl
ret
aad
cmc
scas
mov
xlat
ds
mov
adc
orb
into
or
cmp
sbb
outsl
and
push
mov
repz
cmp
lods
mov
dec
ljmp
mov
fldl
int3
sub
xor
lds
les
and
mov
cld
ret
xor
xor
lock
mov
stos
std
ljmp
lock
data16
lahf
push
popf
inc
mov
movsb
call
inc
xor
les
enter
shll
leave
xchg
test
and
jmp
cmp
push
sbb
pushf
or
rorl
nop
push
push
dec
es
mov
adc
xlat
dec
adc
lahf
sub
insl
sbb
stos
push
aaa
xchg
jne
or
mov
dec
push
jbe
push
cmc
pop
aad
fisttps
sbb
divl
out
xchg
bound
sub
lret
mov
or
xchg
in
mov
aas
lret
cwtl
and
aad
sbb
mov
push
xor
mov
cmc
xchg
push
jp
rcrb
and
fnstcw
sbb
frstor
pcmpgtw
or
bound
icebp
push
mulb
mov
cli
xchg
dec
push
sarl
mov
in
dec
hlt
sbb
dec
in
push
into
inc
popf
jnp
xchg
xchg
dec
pop
testb
or
or
inc
mov
enter
sub
stos
push
push
ss
mov
add
int
stc
lods
jo
aas
js
or
mov
les
cltd
bound
mov
insb
mov
cwtl
mov
int
ja
cli
pop
testb
shl
jnp
js
inc
dec
push
cltd
inc
fs
sub
clc
cmp
stos
pop
or
sbb
inc
mov
sahf
test
inc
cmp
push
bound
push
pop
stc
jbe
in
sarl
out
popf
adc
xchg
dec
xor
stos
dec
xchg
clc
fisubrs
loope
leave
insl
and
stos
lahf
pop
mov
dec
test
repz
or
jecxz
fisubrl
push
xorl
jecxz
outsl
inc
fdivrl
bound
mov
mov
fbld
or
push
lds
push
pop
adc
stc
ja
ljmp
push
loop
mov
adc
sbb
loope
push
sbb
push
iret
cmp
je
or
mov
repnz
aas
jge
sbb
bound
xchg
ljmp
mov
push
aam
outsl
mov
xchg
mov
inc
adc
js
sbb
lds
cli
imul
or
add
mov
lea
into
cmp
add
sbb
imul
sub
sarb
aad
pop
sbb
data16
sbb
sbb
ljmp
loope
push
push
push
fdivrl
or
mov
and
pop
fs
pop
pop
mov
lahf
in
mov
cmp
jge
xlat
lods
testb
mov
add
outsb
jl,pt
jecxz
sub
cmc
jo
mov
popa
sbb
cmp
movsb
mov
inc
cmp
mov
adc
rorb
push
add
je
mov
stos
sbb
lds
movsl
inc
sub
ljmp
sbb
pop
push
inc
add
cmpsb
adc
add
jge
rclb
imul
movsb
sub
xor
cmp
pusha
loopne
sub
lahf
in
xchg
jecxz
popf
push
xchg
sbb
ljmp
nop
push
dec
mov
cld
cmp
adc
sbb
mov
seto
es
sub
ret
in
sub
fwait
sub
mov
sbb
aas
test
lret
adc
adc
movsl
loop
push
jmp
jb
test
ret
nop
jp
pop
fstl
daa
scas
push
xchg
and
stos
jp
jo
inc
andb
mov
cmp
adc
dec
mov
and
sahf
or
sub
andb
rcrb
inc
popf
jge
enter
pop
fsubl
ret
lock
xor
cli
ret
fisubl
aam
fincstp
sub
je
xlat
pop
pop
jns
out
fisubl
jmp
mov
push
nop
push
pop
vpslld
add
inc
in
push
cmp
in
xchg
and
cmpsl
fadds
xor
and
pop
push
and
dec
xchg
or
lock
or
out
inc
push
inc
into
cmc
dec
ror
lds
push
push
mov
outsb
insb
test
std
cmp
jg
mov
ret
cwtl
leave
push
test
sbb
mov
mov
mov
leave
fmull
dec
scas
pop
aad
imul
ss
call
xor
cmpb
lret
push
fimull
inc
add
xchg
test
dec
mov
cmp
sahf
adc
pop
test
pop
sub
adc
out
mov
fmuls
mov
sbb
int3
fldenv
pop
sahf
lcall
movsl
jp
data16
shr
push
sbb
mov
movsb
sub
sub
js
jnp
fwait
xlat
mov
or
in
mov
mov
sub
jnp
insb
xchg
loopne
pop
shl
sbbl
or
repz
roll
inc
jg
out
jb
jns
pop
fidivl
cwtl
mov
rolb
inc
test
scas
shlb
or
dec
pop
aad
pusha
mov
sar
int3
int
jo
imul
clc
aas
outsl
sub
ficompl
shl
push
scas
gs
movsl
imul
xchg
dec
xchg
in
mov
jle
jne
mov
mov
jecxz
mov
lahf
mov
rcll
cltd
mov
xchg
pushf
shll
ljmp
icebp
filds
mov
pushf
push
mov
pop
adc
test
pop
sbb
lahf
or
xchg
leave
shlb
imul
in
leave
lret
insl
ss
cmp
jo
inc
inc
and
dec
inc
jae
imul
sub
in
xchg
adc
std
aam
out
cli
movsl
insb
mov
push
push
aaa
push
or
mov
inc
shl
sub
mov
aaa
aaa
fwait
mov
pop
push
jno
je
enter
and
xor
js
gs
imul
repnz
xor
lock
lahf
mov
addr16
out
mov
mov
sahf
test
or
xchg
out
xchg
int
add
mov
icebp
mov
inc
mov
dec
unpcklps
rorb
sub
push
jbe
int3
ljmp
stc
addr16
and
into
push
cltd
push
cmpb
xchg
inc
xchg
bound
pop
adc
fdivl
int3
jns
aad
sbb
cmp
fs
pop
dec
fs
add
mov
mov
xor
xor
cs
dec
add
into
out
cmp
push
inc
aad
int
jne
jmp
insw
mov
sub
rcrl
xor
insb
jg
jg
stos
test
mov
pop
jp
pushf
adc
jg
sub
lahf
xchg
sbb
xor
cltd
push
das
dec
dec
popf
subb
jg
cmp
sub
aad
sbb
out
sub
mov
mov
out
scas
repnz
arpl
inc
pushf
fcoml
dec
adc
das
mul
aad
out
cmp
roll
shll
in
leave
leave
fadd
mov
dec
outsb
hlt
fcos
cmp
mov
hlt
pop
scas
sbb
movsl
imul
lcall
testl
loopne
mov
pop
mov
mov
jae
sub
loope
daa
bound
popa
or
lods
lret
faddp
insl
leave
or
lcall
negb
sub
std
xchg
jnp
bound
arpl
cmpsb
testl
xor
in
addr16
dec
jmp
clc
test
movsl
mov
insl
rorl
repnz
shrl
iret
out
xchg
cmp
gs
stos
lahf
mov
test
pop
or
in
addr16
sbb
repnz
loope
fs
fiaddl
xchg
or
sbb
xchg
pop
shlb
fiadds
stc
fdivl
test
or
gs
lret
insl
jmp
push
andl
jge
orl
rclb
ret
jnp
dec
push
orb
stc
cmp
xchg
and
sbb
lods
loopne
notl
lods
cmp
scas
cmp
sbb
adc
stc
leave
testl
scas
movsb
cmp
gs
push
inc
sub
jmp
lods
sbb
movsl
xlat
and
dec
imul
lods
dec
les
fs
add
rcrb
ret
jnp
mov
movsl
aaa
xor
jbe
xchg
sbb
xor
mov
xor
dec
cmp
push
test
in
movb
jb
cmp
in
out
xchg
inc
or
out
mov
jg
lcall
jne
xchg
inc
pushf
leave
out
jge
push
lret
pop
mov
jae
leave
dec
aad
sbb
sub
pop
and
mov
adc
mulb
cmp
jno
mov
cmpsl
lea
inc
cmp
mov
adc
ficompl
aad
enter
fsubl
loope
mov
mov
out
sbbl
insl
bound
addr16
lea
lret
xchg
add
push
ret
cmc
loopne
xor
int3
sub
add
aas
std
fisttpll
inc
in
push
orb
mov
lahf
enter
mov
add
in
inc
in
and
jo
inc
in
push
and
dec
cmpsl
insl
mov
bound
es
push
mov
fisttpl
fwait
vpshufd
std
push
scas
push
enter
adc
ret
or
ficoml
aas
aam
test
sahf
mov
jecxz
enter
loope
out
popa
jg
xchg
xchg
iret
aam
and
xlat
lea
pop
push
jae
aas
into
sbb
dec
out
arpl
inc
xor
mov
lcall
push
scas
push
mov
mov
pop
add
out
push
or
sbb
cmpsb
push
or
out
cmp
lock
lret
adc
repnz
jo
xchg
mov
sub
push
test
mov
adc
hlt
fnstcw
add
mov
push
pushf
nop
roll
and
mov
call
into
or
dec
ja
jb
insb
in
cmp
mov
xor
inc
jae
xor
cs
push
and
jno
scas
adc
push
inc
push
add
fwait
xchg
lods
push
push
and
loop
mov
cmp
mov
or
or
mov
lret
test
sbb
xchg
rcl
xchg
cwtl
cmp
fmul
pop
fwait
test
pop
inc
jno
xchg
sub
rolb
in
xchg
jp
scas
inc
fists
sti
mov
clc
aas
xor
xor
aaa
int3
and
add
xlat
outsl
add
fwait
xor
pop
movl
dec
xor
or
enter
sbb
dec
cmpsb
mov
stos
dec
xor
inc
and
ja
pop
mov
inc
mov
or
inc
add
divb
adcl
loope
jmp
mov
sbb
or
outsb
jns
inc
subb
push
mov
xchg
push
mov
ljmp
cmp
cmc
movsl
cli
push
popf
filds
lock
fadds
mov
shl
shrb
daa
insb
sbb
std
sub
outsl
scas
sbb
sbb
loop
in
dec
in
lods
aas
mov
scas
and
cmpl
inc
in
push
imul
cmp
jle
jge
push
adc
ja
mov
inc
xchg
cmpsb
mov
push
xchg
inc
in
or
int3
lods
push
enter
call
mov
dec
in
fiadds
xor
jbe
aad
cmp
mov
xor
js
xor
adcl
mov
mov
repnz
mov
and
inc
cmp
lahf
push
loopne
xchg
std
push
sub
icebp
mov
inc
fstl
mov
pop
shl
jne
adc
xlat
push
shr
xchg
test
fdivp
into
and
js
add
outsb
aas
xor
push
pop
push
and
jbe,pn
jl
stos
int3
mov
and
push
cmc
sbb
mov
clc
lret
outsb
mov
negl
inc
in
out
mov
jecxz
or
inc
gs
stos
je
in
stos
xchg
and
adc
ja
pop
xor
subb
fnsave
scas
mov
cmp
xchg
xor
loope
or
jae
pushf
sti
push
lock
push
mov
pushl
aaa
xchg
xchg
loope
out
or
xchg
out
pop
dec
loop
mov
in
mov
jge
jmp
xchg
jbe
mov
add
inc
sub
nop
addb
in
adc
adc
in
icebp
call
insl
and
xor
sbb
pop
xor
inc
sub
xchg
xchg
cmp
push
aaa
jle
dec
push
sahf
loop
sub
dec
xchg
lds
and
mov
push
into
xchg
loop
out
loopne
mov
icebp
andl
mov
aas
ljmp
rorb
fnop
jne
mov
ja
lds
dec
pop
inc
cmpb
ja
mov
leave
mov
xstore-rng
cmpsl
inc
out
pop
jne
push
xchg
mov
mov
rorl
mov
adc
cltd
push
jg
call
call
lock
mov
pop
push
bound
inc
mov
jmp
and
xchg
pop
and
fdivl
aad
pop
lods
subl
fadd
shl
pop
lock
or
gs
mov
nop
sbb
int3
push
icebp
pop
ficompl
fsubr
pop
aad
mov
arpl
mov
cmp
in
sbb
ret
sub
and
fnstsw
mov
testl
xor
push
mov
inc
adcb
adc
jp
pop
xor
imul
adc
out
ret
lret
cmp
outsl
inc
inc
sbb
lahf
call
clc
xchg
in
call
cmp
push
shll
rorl
inc
aaa
int
frstor
popf
call
cmp
les
mov
and
pop
enter
outsb
pop
or
sub
ret
fwait
addb
pushf
add
xchg
das
stos
push
mov
popa
pop
pop
inc
cs
mov
mov
push
aas
adc
outsb
int
cli
aam
mov
dec
stos
call
add
shll
lcall
frstor
scas
mov
mov
cmp
int3
andl
pop
and
in
out
xor
pop
jp
bnd
into
jmp
and
arpl
or
test
lds
jle
scas
aas
lds
nop
add
outsb
push
inc
cmp
negb
pop
into
and
push
lock
test
dec
pop
test
sbb
lds
add
push
cmpl
lcall
lds
iret
mov
inc
sub
push
xchg
or
lret
les
sbb
xor
sub
inc
jnp
adc
int
jno
or
fisubs
xchg
imul
ret
ds
ror
lods
dec
std
pop
je
cltd
xor
lods
lods
test
jg
dec
cmpsl
adc
sub
push
pop
icebp
adcl
pop
or
push
frstor
xchg
icebp
aaa
les
mov
inc
clc
mov
mov
outsl
das
lods
aas
stos
xor
test
sbb
imul
fisubl
jmp
aad
mov
aad
dec
jo
in
jbe
repnz
add
jae
gs
pusha
je
pusha
cmp
dec
add
jge
bnd
ror
or
sbb
push
fstpl
mov
aad
push
arpl
push
jno
or
mov
sub
or
scas
pop
sbb
push
pop
in
in
enter
pop
cmp
outsl
or
cmp
dec
mov
mov
inc
fisubrs
rclb
xchg
out
scas
mov
adcb
inc
jle
or
and
mov
dec
mov
dec
mov
xchg
add
mov
out
or
sub
inc
inc
dec
enter
int
inc
dec
push
jbe
stos
add
fwait
adcl
and
in
enter
add
xchg
push
mov
inc
fs
mov
xchg
daa
lret
inc
xor
pop
sub
pop
jp
push
je
sbb
sbb
lods
dec
cmp
ret
insl
mov
push
sbb
int
mov
pop
fucomp
stc
mov
shlb
jl
in
inc
adc
faddl
cmp
push
clc
mov
push
push
ror
mov
lcall
push
push
int3
xchg
xor
inc
inc
mov
sbbb
push
dec
push
add
in
inc
push
pop
sub
pop
sbb
es
push
divl
popf
aad
push
loopne
xchg
pusha
je
xchg
dec
test
cmova
arpl
subb
shrl
jnp
cmp
rcl
add
push
xlat
jnp
pop
jl
jle
sbb
enter
jb
cwtl
test
xchg
sahf
cmp
les
xlat
scas
movsb
sub
push
clc
pop
xor
jecxz
fsubl
in
xchg
mov
cli
out
ffree
and
sbb
jno
lahf
pop
int3
pop
rclb
cs
frstor
push
adc
push
mov
idivb
enter
cli
add
xor
xor
popa
into
jle
icebp
lahf
cmpsl
mov
ja
rcrb
loope
test
pop
sub
adc
jb
cmpsl
add
mov
int3
lea
sub
fcoml
push
xor
stos
pop
dec
addr16
nop
inc
pop
push
mov
pop
jg
negb
mov
jl
scas
lahf
lods
xor
shll
add
adc
xor
push
pop
sti
adc
push
mov
cmp
stos
sbb
xchg
adc
pop
iret
mov
mov
push
inc
cld
in
fidivrs
outsl
cltd
out
sbb
inc
jae
jns
lret
aas
add
mov
sub
pop
adc
pop
or
pop
lahf
sbb
adc
mov
in
je
int3
outsl
aas
mov
pop
mov
ret
shlb
daa
jns
adc
push
mov
inc
notl
rorb
test
movsl
dec
hlt
clc
dec
xchg
rcr
inc
es
dec
dec
pushf
xchg
add
push
mov
xchg
mov
push
jp
out
adc
std
stos
cmpsb
fs
mov
neg
push
mov
or
mov
sub
repz
mov
mov
mov
mov
mov
ljmp
mov
ja
inc
dec
pop
aaa
aad
lock
push
mov
pusha
and
fdivrs
xchg
bound
jbe
subb
jno
inc
inc
lock
xorb
es
into
fistpll
scas
ss
jb
movsb
adc
lds
insl
mov
and
pushf
xor
andb
ret
ljmp
dec
stos
xchg
mov
mov
test
xchg
and
fucomp
scas
lret
int
and
pop
negb
inc
adc
sbb
lahf
test
xor
lock
pop
push
cwtl
xor
cmp
popa
fs
adc
adc
xchg
inc
inc
jg
inc
jecxz
pushf
test
gs
sbb
ds
add
sbb
sbb
stc
dec
mov
jae
xor
aam
pop
js
mov
inc
push
xlat
add
sbb
insl
sarb
test
in
jge
pushf
xor
test
insl
cmc
and
addr16
loopne
lret
mov
ljmp
adcb
js
rolb
mov
fstl
cmp
xchg
js
movsb
scas
mov
push
push
push
mov
cmp
imulb
in
pop
dec
inc
jo
adc
mov
into
sub
pop
out
repz
push
pop
mov
pop
jne
popf
jbe
jo
lret
popf
push
lock
test
sbb
in
cli
insl
dec
xchg
xchg
sbb
mov
mov
dec
mov
cltd
pop
ret
pop
mov
test
decb
loope
sti
jge
sbb
push
fsubrl
lds
sbb
das
and
xchg
enter
sbb
xchg
fs
and
aad
fisttpll
or
xchg
jo
sti
inc
cmp
inc
fstpl
xchg
xchg
test
dec
inc
pop
cs
or
lock
adc
nop
pop
xchg
ret
mov
inc
fwait
icebp
or
dec
and
rcll
sbb
or
jmp
pop
cli
jg
imulb
mov
bound
add
mov
idivb
pop
xlat
bswap
pop
mov
cmpsl
sbb
int
dec
fdivr
adc
add
push
xchg
push
movsb
jnp
cmp
mov
pop
xchg
push
loop
xor
mov
adc
insb
cmc
fucomi
das
aad
sahf
test
ret
push
and
inc
fidivrs
mov
cli
ds
jbe
or
stos
ret
mov
mov
push
clc
jne
inc
mov
loope
mov
cmp
mov
fxch
xchg
clc
rcrb
or
aas
or
enter
mov
and
xchg
fimull
cs
out
xchg
subl
nop
nop
imul
inc
mov
push
out
mov
xor
es
sti
and
jl
mov
xchg
mov
loope
push
xchg
in
xor
lret
ret
lods
addr16
popf
lods
xchg
xchg
cmp
ret
scas
push
pushf
rol
icebp
orl
xlat
add
or
lods
cmpb
fadd
sahf
loopne
iret
popf
out
test
cs
scas
mov
std
ds
xchg
jmp
lret
push
jb
movsb
mov
jbe
stos
loopne
and
in
add
loope
push
mov
stc
loope
pop
jnp
call
xchg
jle
enter
and
push
sbb
popf
push
mov
dec
xchg
mov
xor
sbb
ss
or
cmp
mov
sbb
xchg
pop
lcall
sbb
test
cmc
js
dec
ret
mov
out
inc
dec
cmp
add
lock
xor
jge
xor
inc
mov
push
dec
push
movsl
es
pop
stc
in
jbe
arpl
les
cmp
push
or
adc
dec
sti
enter
push
pop
idivl
jp
shll
popf
lea
inc
push
dec
sub
mov
out
pop
mov
push
mov
lods
and
fdivs
ficompl
ffree
xchg
dec
ja
jecxz
in
icebp
out
sbb
cmp
push
fcomip
ds
sub
pop
leave
aam
xor
add
pop
iret
sbb
iret
call
sub
xor
adc
pop
jns
clc
mov
pop
xor
in
ficoms
in
push
mov
cmp
call
jecxz
movsb
mov
pop
in
clc
xchg
xorl
adc
adc
test
push
fsub
into
out
js
inc
aad
or
jo
mov
loop
and
insl
cwtl
xchg
jae
jnp
bound
push
daa
jmp
xchg
pop
xchg
inc
test
and
aam
push
aaa
xchg
fnstsw
imul
idivb
cmp
mov
push
xor
push
lahf
ja
lds
cmp
mov
into
out
xor
sbb
scas
sbb
adc
pop
stos
jns
pop
lret
xor
scas
push
lods
cmp
cmp
inc
lds
push
adc
mov
out
int
aad
fdivrs
or
movsl
ljmp
imul
les
jle
lret
int3
stos
pushf
jns
pop
sti
popf
cmp
loope
test
lock
mov
xor
xor
and
jnp
dec
or
scas
xchg
rolb
ret
fsubl
adc
fstl
push
dec
xor
mov
add
jo
xor
cmp
push
fildll
out
addr16
cmp
popf
or
pop
push
jbe
sbb
es
pop
push
out
subl
jae
call
fstpl
fs
mov
pop
loopne
push
enter
inc
adc
xor
adc
mov
sti
pop
mov
dec
mov
cli
sub
andl
inc
sbb
push
push
call
shrb
xlat
jg
cli
inc
hlt
push
sbbl
sbb
mov
cs
frstor
inc
test
mov
cmp
popa
pop
push
push
adc
loop
sbb
mov
push
pushf
dec
insb
out
push
xchg
jmp
cmp
inc
daa
cmpsl
into
push
inc
jmp
adc
insb
cli
push
jbe
ss
std
das
push
orb
push
jae
xlat
iret
popf
pop
jp
mov
cs
fdiv
sbb
dec
pop
push
sub
sbb
jg
leave
repnz
out
and
aaa
sbb
aam
push
push
mov
pop
xchg
stos
sbb
adcb
in
stos
and
sbb
sub
clc
movsb
pop
scas
mov
jno
jb
je
push
pop
adc
cmp
out
cmp
pop
sarb
faddl
stos
jne
data16
imul
mov
dec
dec
int3
sbb
fidivrs
movsb
and
push
cmp
jp
fstpl
mov
in
popf
inc
mov
std
or
cmp
inc
cwtl
aam
adcl
mov
xor
les
push
das
mov
inc
pusha
in
test
sbb
icebp
inc
adc
out
outsl
into
mov
push
fidivs
dec
cwtl
inc
adc
std
wrmsr
cmpsl
out
inc
ret
mov
and
stc
cmpsl
add
jp
xor
rcl
repnz
xchg
daa
or
mov
push
xor
mov
movsb
arpl
lods
xor
xchg
xchg
test
fdiv
cmp
cmp
in
daa
cld
hlt
sub
test
aaa
sub
dec
cmp
jge
xchg
jae
add
jae
rcl
stos
mov
mov
xchg
pop
pop
in
test
push
cmp
aas
and
xchg
lret
xchg
mov
pop
mov
mov
daa
bound
in
jae
jmp
lea
cmp
jl
add
push
in
mov
and
xchg
sub
int
stc
imul
stc
int
xchg
xchg
xor
leave
sub
adc
adcl
int3
mov
xor
sub
cli
cs
and
push
push
push
xchg
ret
mov
hlt
hlt
mov
les
cmpsl
inc
ret
lret
jae
and
mov
inc
cmpsb
aam
mov
jecxz
dec
sahf
cmp
ror
imul
mov
sub
mov
dec
mov
ret
movsb
sub
mov
mov
mov
or
pop
sub
negl
test
mov
out
inc
inc
cmp
and
scas
bound
and
repnz
ret
xor
js
ds
ljmp
jbe
pusha
shlb
push
js
and
jo
jl
icebp
iret
xchg
cli
cmp
inc
mov
push
loopne
int3
scas
or
jno
aam
jge
cmp
arpl
jg
mov
data16
nop
add
dec
and
and
or
cmpsl
imul
out
outsb
jecxz
xchg
xchg
pusha
out
push
fs
fsubs
in
pop
aam
add
cmp
addr16
inc
rol
cmc
mov
fists
ljmp
xchg
cmc
cmp
jl
cwtl
adc
mov
lods
insl
xchg
dec
shll
aaa
dec
dec
addr16
or
rcrb
dec
loop
push
push
add
push
push
shlb
mov
scas
aam
or
les
in
pop
call
fisttpll
jae
or
mov
scas
js
loope
xchg
divl
arpl
call
mov
xchg
xlat
aas
popf
sar
mov
in
imul
sub
add
add
inc
jp
in
and
ret
data16
icebp
scas
xchg
inc
mov
push
lock
pop
leave
andb
pusha
dec
inc
jbe
or
clc
scas
pop
aam
xchg
fldl
sub
mov
stc
sbb
jge
out
lret
sahf
out
test
jo
xchg
inc
jns
pop
outsb
fisubl
sub
ret
adc
int
ja
das
sbbb
int
adc
jne
inc
out
and
push
dec
or
in
xchg
inc
push
or
arpl
mov
mov
mov
add
mov
dec
mov
aam
lahf
shll
cwtl
aad
mov
lods
push
pop
repz
jg
mov
xchg
lock
in
icebp
lods
fsubrp
mov
repnz
mov
ljmp
xchg
xchg
lods
cmp
sbb
repz
shlb
jl
cmp
out
xchg
push
push
jg
push
das
dec
mov
add
sbb
or
push
dec
insl
cld
test
lahf
sbb
pop
es
fcmove
scas
cli
ret
das
jae
push
addr16
xchg
xor
mov
mov
inc
mov
xor
or
add
popa
fidivrl
inc
into
jle
and
pop
aad
insb
sbb
js
adc
aam
ret
xlat
pop
jmp
and
cmp
daa
xchg
pop
jns
xchg
cmc
add
psubsw
pushw
xchg
ret
ror
mov
das
pop
pop
cmp
push
jb
aam
hlt
jg
adc
and
outsb
lods
mov
test
sbb
xchg
sub
sbb
jnp
mov
call
movsb
jle
dec
xchg
es
icebp
xchg
rcl
int3
aaa
aaa
pop
cmp
push
int3
mov
lret
push
out
lahf
inc
movsl
adc
jbe
rcrl
push
push
jno
xlat
or
insb
sbb
lea
test
cld
lds
pop
cli
cli
nop
xor
xor
and
lock
test
push
scas
push
in
sub
outsl
sbb
and
insb
inc
int
sahf
mov
push
sbbb
mov
xor
dec
mov
in
pop
push
in
out
push
pusha
xchg
add
fs
int3
xor
in
cmc
stos
mov
and
pop
in
call
pop
sbb
dec
jnp
dec
mov
cs
scas
add
icebp
lock
cwtl
sahf
mov
ret
mov
or
orb
sub
std
or
sbb
scas
pop
fistpl
fwait
clc
add
mov
aas
clc
aaa
es
cmp
popa
ret
ljmp
ret
in
push
cld
cmpsl
pushf
scas
std
xchg
mov
jge
xchg
xchg
rorb
loopne
dec
xor
nop
pop
sbb
test
in
mov
or
push
xchg
add
cmpsl
lahf
insb
fdivrs
popf
hlt
lahf
jle
xor
fsubrs
cwtl
jbe
dec
and
adc
sub
cmpb
dec
sbb
mov
cmp
scas
repnz
dec
popf
lds
in
roll
mov
stc
in
xor
fisubrs
dec
ret
aaa
out
ret
mov
lcall
adc
in
fmul
ret
icebp
fmul
mov
jo
test
or
lods
cmp
push
mov
mov
adc
inc
xchg
jg
js
pop
stos
mov
mov
mov
rcl
stc
adc
xchg
and
or
inc
test
add
out
adc
lret
into
popf
std
fcmovnb
clc
lcall
adc
mov
mov
sbb
pop
mov
hlt
sbb
fnstsw
out
popf
cmp
push
cli
jmp
jmp
push
push
cmp
push
sbb
adc
lret
add
data16
jne
mov
adc
dec
mov
mov
in
imul
xchg
inc
xor
imul
clc
addl
push
jl
cmp
jbe
mov
mov
sbb
jnp
lock
movsb
adc
dec
xchg
ret
mov
fwait
pop
add
inc
insl
jno
mov
add
mov
aas
mov
shrl
mov
repz
push
movsb
xlat
in
xchg
mov
out
shrb
insb
mov
std
jmp
jne
sub
pop
sahf
in
out
mov
fidivrl
sbb
cmp
mov
xchg
inc
cmc
push
sbbb
movsb
cmp
mov
arpl
mov
hlt
leave
popa
add
insl
dec
add
adc
ret
into
add
clc
fcoml
add
bndldx
xchg
inc
sbb
push
dec
mov
das
idivb
in
sbb
push
shrl
xor
gs
mov
mov
jne
mov
mulb
pop
int
jnp
cmp
dec
test
or
jmp
xchg
add
fmul
in
test
data16
outsb
or
xchg
lret
dec
xchg
mov
jo
cmp
nopl
lods
push
lcall
sub
cmp
add
cmp
mov
xchg
pop
cwtl
cmpsl
cwtl
rorb
push
std
push
insl
scas
and
jae
out
outsb
std
ljmp
in
mov
lds
in
idivb
popf
js
jmp
jb
xlat
imul
mov
loope
pop
cmp
lds
addr16
lret
stc
divps
cmpb
sbb
std
lahf
sbb
mov
clc
sub
mov
cmc
or
in
es
cmp
push
out
shlw
cld
sub
call
subl
and
xchg
loopne
frstor
jb
cmp
outsl
or
fimuls
mov
addb
pop
dec
movsb
cmp
add
mov
cmp
fnstcw
mov
jge
mov
repnz
push
push
fbstp
insl
and
addl
xor
pop
jbe
adc
cltd
jl
jg
ja
es
pop
or
call
cmpsb
inc
jae
push
fstpt
filds
enter
scas
add
inc
lock
and
mov
sbb
in
adc
xchg
int3
daa
mov
xchg
jnp
movsl
pop
jbe
je
mov
pop
or
aad
push
aad
inc
fcomp
cmpsb
dec
inc
inc
int
pushf
lcall
popa
push
xor
imul
or
pusha
cmp
inc
push
int
ds
enter
pop
xchg
shll
inc
cmp
fmull
add
mov
mov
push
xchg
xchg
fsubrp
xor
mov
push
and
and
pop
xchg
mov
mov
mov
daa
jl
out
cltd
imul
xchg
clc
inc
movsl
jb
movsb
xchg
cld
cmp
mov
sub
cmp
pop
movzwl
push
mov
loop
stc
dec
push
movsb
inc
adc
in
jecxz
push
and
je
outsl
push
add
dec
ds
sub
and
and
aaa
xor
xor
push
mov
jo
inc
adc
pop
pop
comiss
loop
outsb
jnp
sub
mov
mov
daa
into
cmpsb
idivb
and
loope
mov
xlat
sub
xlat
cmpb
out
lods
fistpll
cmp
gs
dec
jge
cmp
mulb
sub
lcall
add
push
les
test
bound
xor
jmp
add
push
add
xlat
mov
pop
xchg
in
cltd
lahf
inc
loop
mov
lcall
fs
sahf
xor
sti
and
les
mov
push
pop
add
rcrl
int
out
outsb
test
pusha
dec
loop
push
jnp
int3
fldenv
lret
xchg
daa
scas
fmull
cwtl
add
in
insb
imul
or
add
lret
rorl
pop
not
mov
into
and
mov
jecxz
inc
and
popa
stc
scas
add
inc
mov
leave
scas
roll
xor
mov
push
sub
nop
loop
rcl
divl
mov
iret
adc
sbb
mov
adcb
xor
jge
xchg
cs
sub
add
or
sahf
aas
pop
sar
jbe
imul
hlt
pop
sahf
rcr
inc
sub
out
cli
ljmp
xchg
jle
and
and
sahf
push
inc
and
mov
cmp
cmp
mov
cld
push
fwait
jbe
lret
cld
cmp
pushf
adc
mov
add
mov
sbb
jnp
xor
pop
out
adc
or
mov
jbe
jp
jecxz
mov
sub
outsl
mov
out
mov
sbb
testl
mov
mov
leave
dec
mov
xchg
inc
loope
aad
push
xchg
xchg
lahf
repz
xchg
or
pop
lds
cmp
mov
jmp
push
xor
notl
push
and
in
cmp
icebp
je
pop
inc
add
scas
dec
xchg
rorb
imul
stos
push
jb
mov
popf
insl
sbb
movsb
loopne
sbb
loope
cwtl
lcall
xchg
pop
mov
ss
mull
push
xchg
mov
fucomip
out
ret
shrb
push
pushf
imul
bound
sbb
jno
shrl
mov
stos
in
sbb
pop
sti
adc
and
mov
or
loop
out
and
arpl
ds
push
pop
pop
xchg
adc
stos
ret
das
inc
fwait
loop
testb
jno
inc
mov
fwait
xor
inc
dec
icebp
jle
mov
mov
popf
fstps
stc
jae
loop
or
xor
xlat
jno
je
pop
aad
push
mov
adc
and
mov
data16
inc
loop
lahf
jge
push
inc
cld
rcll
pop
cwtl
jg
outsl
negl
loopne
jno
push
out
sbb
xchg
dec
into
inc
repnz
mov
xor
insb
mov
imul
loop
dec
loop
jecxz
aam
push
or
mov
stc
stos
cwtl
ljmp
sahf
cmp
outsb
cmp
dec
lahf
incb
in
cmp
repnz
rolb
push
dec
int
jg
pushf
ds
cltd
ret
push
jp
fwait
lcall
and
addr16
stos
inc
test
movsb
sub
pop
mov
mov
out
movsl
or
loopne
sub
scas
aaa
add
div
sub
movsl
std
cwtl
inc
lock
cmpsl
sub
inc
adcb
cmp
sbb
cmp
pop
mov
js
push
test
or
mov
mov
xchg
out
xchg
jecxz
sbbl
into
repnz
and
outsl
sbb
cld
sbb
add
test
shl
jp
add
add
iret
mov
out
jb
mov
fs
cmp
xor
cld
loope
push
stos
ds
std
fdivr
inc
aaa
rorb
popa
pop
dec
or
dec
stos
pop
xchg
mov
mov
pop
sbb
sub
das
xor
in
push
xor
and
leave
pop
fs
ret
das
lods
js
xchg
mov
inc
outsl
call
xchg
fsubl
mov
fwait
jbe
fcomps
pop
fwait
psrlq
jge
push
push
pop
xchg
or
lock
in
or
loopne
cmpsl
or
lahf
nop
cs
add
sbb
dec
clc
call
sub
lret
out
in
sub
jno,pn
loopne
jae
adc
mov
mov
mov
pop
and
push
mov
insb
xchg
out
imul
and
jp
jo
addr16
sti
dec
aam
fst
insb
fsts
popf
pop
push
push
enter
testl
inc
mov
sbb
sub
lret
pushf
scas
mov
sbb
into
data16
and
and
and
ja
insl
imul
inc
and
xchg
mov
lahf
popf
adc
mov
pop
jbe
fsubrl
mov
mov
out
push
in
aam
mov
aas
sbb
dec
or
ljmp
in
fidivs
sbb
pop
fists
and
mov
shr
jnp
inc
insb
sbb
jae
icebp
arpl
push
inc
inc
push
dec
rorl
aad
clc
fwait
mov
lock
sahf
pop
sub
in
fwait
cltd
push
dec
int
mov
or
mov
push
cwtl
insl
push
and
test
push
repnz
fsubr
dec
jmp
pop
and
iret
mov
xor
lret
aaa
add
cmp
mov
outsl
adc
imull
in
cltd
ret
add
mov
add
jecxz
outsb
add
pop
xchg
adc
lcall
or
out
inc
mov
pop
outsl
insl
test
rcrl
xchg
cmp
lahf
add
subb
add
mov
jns
pusha
iret
ret
or
lea
push
lret
push
jmp
gs
jno
add
lcall
fimuls
fs
dec
sbb
imul
ss
cmpsb
sahf
or
xor
ja
xor
arpl
sti
cld
push
shl
sbb
cmpsb
and
fidivrl
mov
dec
cmp
and
out
popa
out
and
dec
mov
inc
mov
xchg
push
xor
adcb
jnp
lods
adc
or
lea
xchg
movb
sbb
jo
js
and
jb
fwait
arpl
sub
insl
in
xor
xor
push
sbbl
pop
iret
ffreep
fisubrs
icebp
aad
mov
push
scas
mov
ds
sub
cmp
in
or
frstor
adc
nop
pop
xor
mov
sahf
lods
fildl
std
nop
sub
add
dec
cmc
adc
lods
xchg
jge
sbb
sahf
mov
inc
dec
cmp
fisubs
imul
ficoms
sahf
fincstp
add
and
ficompl
jecxz
push
mov
ret
sbb
pop
inc
cmp
xchg
ljmp
mov
or
shll
dec
inc
sti
add
push
insb
ds
jecxz
daa
enter
inc
sti
jg
pop
push
leave
cmp
xchg
ss
push
stos
rcrl
jg
mov
es
cli
fstpl
rclb
cwtl
sbb
jmp
mov
sti
repz
pop
mov
jmp
xor
subl
pop
insl
cmpsl
addr16
loopne
xlat
mov
push
fs
out
jb
push
lods
inc
in
add
and
jl
sbb
divb
xchg
push
xchg
pop
imul
jmp
mov
pop
jne
adc
add
ret
enter
cwtl
bound
call
loope
cs
push
shlb
in
add
jp
stos
mov
push
push
lea
aam
js
js
mov
add
sub
dec
out
imul
leave
movsl
push
xchg
adc
jae
out
mov
rcrb
adc
mov
ficomps
or
in
not
jl
sbb
fistpll
cld
cmp
out
adc
xor
je
arpl
lret
sub
lcall
pop
sahf
cli
dec
push
clc
or
xor
inc
mov
scas
adc
jbe
adc
cmp
and
in
jle
outsb
mov
jbe
lret
out
test
sub
pop
ss
cmp
xchg
sub
pop
addb
aam
push
dec
scas
jg
xchg
or
sti
push
push
decl
pop
dec
out
in
mov
movsb
popf
pminub
pop
fstpl
cld
sub
int
dec
shl
js,pn
push
fdivp
ret
mov
sbb
xchg
or
scas
movsl
fucomip
xchg
cmp
xlat
in
and
cmp
push
xor
mov
mov
add
je
sbb
icebp
mov
pop
mov
sarl
mov
enter
jne
push
addb
imul
xchg
jb
jecxz
xchg
cmp
ret
dec
jb
jmp
fstps
add
in
mov
rorb
jne
sbb
pushf
nop
mov
mov
ffree
bnd
ret
push
imul
mulb
mov
data16
and
ja
sub
or
push
faddl
push
mov
fwait
sub
push
xor
xchg
push
and
xor
out
ficomps
ret
mov
mov
or
cmpsb
pop
adc
jbe
lret
insb
imul
nop
mov
jne
jns
mov
jg
insb
jne
nop
jbe
sbb
mov
xchg
insb
hlt
jne
pop
push
xchg
shrl
ljmp
fs
push
lret
inc
dec
mov
lock
cmp
mull
popf
pusha
aas
mov
mov
cltd
lea
xchg
dec
ds
mov
jp
push
dec
mov
je
and
cltd
adc
adc
sub
out
mov
faddl
cmp
or
and
add
pop
dec
push
out
inc
push
pushf
push
fsubl
inc
xchg
fs
sub
loop
jmp
push
cmpsb
das
subb
or
cwtl
add
sub
aam
adc
scas
std
stc
jbe
fsub
rcrl
lods
add
outsb
adc
call
arpl
scas
push
add
xor
jge
mov
cmp
xor
fimuls
jns
call
jno
repz
sbb
push
cmp
push
sbb
lods
push
sti
or
fs
fisubrl
scas
in
cltd
mov
out
aaa
xor
jbe
fadds
push
jo
lea
int
or
xchg
daa
pop
push
sub
mov
in
int
adc
lcall
xchg
iret
mov
jnp
and
xchg
out
repnz
add
lods
out
insl
lock
sub
cmp
mov
mov
or
cs
loopne
fildl
loope
dec
xchg
fdivs
mov
push
ja
mov
push
or
xchg
andb
mov
sbb
mov
imul
jne
jmp
mov
lds
pop
fldcw
push
adc
or
jp
lds
mov
shrl
push
outsl
mov
jl
or
xchg
adc
jno
ret
int
adc
jge
mov
mov
mov
or
adc
cmpsb
scas
mov
and
xor
shlb
or
out
cmp
ret
pop
jp
filds
int3
adc
aaa
mov
and
dec
xor
pop
and
adc
mov
or
and
push
hlt
jno
into
sar
and
repz
int3
push
pop
stc
jecxz
add
fwait
cmp
enter
loopne
add
rclb
add
je
in
in
sub
filds
hlt
push
and
aaa
mov
in
stc
xchg
jb
push
faddl
jne
and
inc
push
mov
loope
pop
cmp
pop
or
cwtl
pop
fisttps
inc
fiaddl
jns
add
mov
cmpl
loopne
xchg
push
cmp
aaa
pop
and
jmp
add
jmp
pop
inc
or
imul
insb
and
scas
in
fiaddl
je
jmp
outsb
gs
xorl
pop
fwait
sub
insl
arpl
stos
arpl
shlb
push
and
data16
dec
cwtl
pusha
rolb
popf
pop
jecxz
cs
out
xchg
enter
mov
icebp
fidivl
xchg
dec
mov
call
cmp
loope
daa
nopl
fisubrl
adc
imul
in
outsb
ret
sub
aaa
je
mov
xchg
fld
rorl
and
push
out
arpl
cmp
or
mov
and
push
lret
and
sbb
sbb
lahf
cmp
ret
add
pop
sbb
incl
notl
bnd
cmp
mov
into
arpl
sarb
adc
xchg
mov
xchg
aas
test
dec
mov
adc
movsb
je
mov
jno
and
daa
lret
and
fwait
mov
xchg
roll
int3
stos
out
dec
loope
xchg
fcmovne
sbb
lcall
sub
mov
iret
fwait
dec
mov
mov
arpl
std
mov
popa
inc
dec
add
mov
cli
and
xor
dec
or
dec
iret
push
cmpsb
push
rolb
push
inc
stos
cmp
into
out
jl
into
sahf
cmp
push
inc
fadds
cmp
in
dec
inc
add
mov
jne
jno
push
add
popa
mov
dec
and
jle
pop
pop
pop
inc
imull
xor
cmpsb
icebp
out
cmp
test
iret
orl
lret
push
jbe
sbb
sarl
xchg
mov
nop
sbb
jbe
arpl
push
iret
out
add
ss
fstpl
or
lea
mov
popa
ljmp
inc
mov
movsb
sub
mov
mov
in
imull
leave
sahf
shr
sbb
lock
pop
dec
out
and
fcomip
push
dec
movsb
xchg
rorb
cmp
mov
adc
js
push
imul
adc
pop
addb
fmulp
fwait
js
xor
pop
mov
fld
mov
into
movsl
call
addr16
pop
pusha
fadd
sbb
mov
pop
test
sti
hlt
jbe
push
movsl
mov
inc
cmp
push
mov
pushf
cltd
ss
xor
xchg
andnps
sbb
mov
lock
mov
rclb
out
jle
in
add
mov
repz
shl
sbb
cmp
lods
out
mov
xor
lods
lods
mov
icebp
and
loop
cli
cld
out
cmp
dec
test
icebp
lcall
nop
or
jmp
outsl
jmp
dec
jp
sbb
dec
lret
repz
add
hlt
in
jmp
xchg
bound
cld
mov
cli
das
cmpsl
cmc
xchg
push
jp
sti
mov
repz
jp
repz
cmc
sbb
push
push
sub
notl
dec
jae
xor
fbstp
sbb
or
and
xchg
loopne
mov
dec
pop
mov
fnstcw
cmpsl
jecxz
int3
mov
push
fisubrl
pop
in
cmp
xor
xchg
xor
sub
xor
jnp
push
and
pop
mov
lret
jno
and
jno
enter
les
jnp
fistpl
dec
and
and
in
pop
or
mov
and
jp
pop
ljmp
loopne
sub
bound
or
sub
movsb
aam
ret
jmp
in
adc
pop
sbb
and
push
div
fisubrs
sbb
mov
mov
cmpsb
insl
xchg
xchg
imul
shlb
inc
test
mov
sub
adc
repz
sbb
fildl
sub
imul
mov
push
or
push
arpl
xchg
arpl
sub
add
mov
paddusb
ret
mov
inc
andb
xor
sub
movsl
in
dec
ficompl
push
clc
mov
lahf
adc
dec
mov
and
outsl
out
outsb
cmp
in
cmp
fstps
mov
cmc
jno
mov
xchg
cmp
sahf
sbb
das
jbe
das
pop
jo
andb
out
int
jbe
pop
imul
or
aam
repz
popl
int
gs
idivl
jnp
mov
data16
jmp
sub
fsubp
xchg
mov
mov
icebp
inc
sbb
sbb
and
imul
jnp
out
dec
xchg
jno
daa
js
sbb
push
xor
sbb
aaa
shrl
mov
movsl
fmull
dec
xlat
icebp
shrl
ds
or
dec
adc
xchg
outsb
jbe
or
mov
push
xchg
push
cmc
jae
leave
in
out
xchg
scas
xchg
jle
push
mov
pop
xor
es
mov
jns
inc
jb
inc
sub
es
inc
cmpsl
cmpsl
or
dec
sbb
sbb
idivl
std
dec
pushf
mov
jp
ljmp
into
in
loope
sbb
and
jp
add
xor
jecxz
mov
dec
daa
mov
add
cltd
test
mov
inc
add
inc
lods
ds
sbb
loopne
jp
neg
jp
iret
fstps
shll
mov
dec
cmpb
jmp
mov
dec
shll
mov
jbe
shrl
and
mov
rol
int
lret
adc
imul
xchg
pusha
sbbl
adc
in
push
shl
lret
pop
push
movl
ss
dec
popf
in
mov
inc
movsl
xchg
mov
jae
sub
lds
pop
mov
jae
lcall
rcrl
mov
jo
test
xor
rclb
adc
dec
push
incb
shlb
cmp
xchg
push
pop
frstor
mov
aaa
mov
sub
pop
jle
ss
lds
xlat
outsl
cltd
push
sub
xchg
ds
add
mov
xor
push
jbe
lea
out
and
in
decb
ficompl
rcll
out
dec
push
arpl
outsb
into
pushf
ret
sub
icebp
dec
outsb
andl
cmc
and
mov
nop
daa
jg
es
nop
movsb
rolb
jae
mov
pushf
and
jmp
std
sbb
cltd
stos
cmp
jecxz
mov
jns
lods
in
ljmp
inc
leave
xor
inc
cmpsl
scas
pop
jae
add
mov
bound
arpl
in
sub
dec
mov
jae
scas
ds
cmp
and
loopne
and
xchg
dec
push
pushf
mov
imul
cs
push
leave
mov
fs
lcall
jmp
lds
lock
hlt
cmp
and
mov
fldt
mov
xlat
rorl
xchg
fidivrl
jge
gs
and
lods
test
ret
mov
popa
hlt
pop
push
ss
insb
fcoms
cmpsb
cltd
mov
pop
popa
sub
dec
scas
es
in
and
jp
xchg
pop
gs
mov
insb
stos
lods
adc
sarb
lods
dec
fcompl
mov
into
scas
sbb
fidivl
daa
xchg
ds
in
leave
cmc
fcmovne
jnp
pop
pop
xor
push
fistpll
call
xor
cltd
inc
and
dec
sbb
aam
loope
gs
sub
inc
mov
lods
fwait
xor
sub
ret
and
cmp
lods
mov
data16
add
ss
leave
adc
jo
cmpsb
push
push
push
inc
adc
lret
dec
in
pushl
adc
cli
ret
push
mov
sarl
mov
mov
js
imul
ret
xor
adcb
jns
test
push
es
adc
lods
lock
dec
mov
adc
jge
adc
fisubrs
ljmp
les
int3
into
in
add
jae
popf
adc
cmp
or
cli
testl
inc
mov
push
and
xchg
imul
lods
rorb
arpl
inc
or
jl
js
addr16
into
lahf
xor
sbb
mov
jg
or
dec
push
push
mov
andb
push
and
pop
cmp
les
rol
arpl
cmp
mov
adc
ja
imul
fisttpll
push
orb
insl
cli
es
cltd
fisubs
and
addr16
adc
pop
movsb
jge
pop
stos
aas
into
or
mov
lahf
dec
xor
sub
jae
inc
or
hlt
mov
pop
stos
ficompl
pop
scas
mov
sahf
and
ret
aam
inc
mov
or
ret
test
inc
sahf
cmp
sahf
je
cltd
mov
mov
xchg
pop
jmp
pop
add
mov
pop
xchg
sahf
sub
pushf
add
sub
dec
jne
repz
icebp
paddq
pop
add
jmp
jb
jmp
push
scas
push
in
aas
aad
testb
add
cli
clc
data16
rorb
jae
sar
and
lcall
mov
add
sti
xor
jns
pop
enter
and
xor
mov
shrb
jle
or
outsb
add
jl
jle
fisubl
or
lock
popa
test
mov
xor
fisubrs
into
call
cmp
sbb
movq
mov
cli
clc
loop
push
mov
mov
popl
sbb
lret
lds
jae
xor
add
lods
test
shr
mov
je
lods
rclb
mov
push
iret
int3
jb
sub
in
push
mov
sbb
negb
mov
mov
push
in
es
inc
xor
filds
jp
in
outsl
aam
mov
stc
mov
daa
mov
popl
mov
std
fdivrl
jecxz
push
in
pop
add
sbb
outsb
loop
push
in
pushf
cmp
and
pmuludq
imul
in
xchg
push
adcb
sbbb
in
mov
or
dec
adc
jmp
orb
cmp
and
sahf
emms
dec
inc
inc
setae
and
and
xchg
sub
mov
dec
mov
pop
sbb
sub
xor
repz
pop
outsl
and
cltd
mov
xor
cmp
inc
jb
pop
and
inc
mov
repnz
bound
ja
lcall
popa
orl
ret
jne
mov
in
cmp
cmp
adc
jb
xchg
jae
les
imul
imul
adc
push
fwait
loopne
xor
rcll
lahf
inc
das
inc
xor
xor
adc
xor
xchg
inc
shlb
into
loopne
arpl
mov
sbb
scas
loop
rcrb
test
xlat
xor
dec
idivl
or
xchg
dec
mov
mov
out
mov
shrl
or
ja
mov
jp
or
mov
jmp
dec
adc
lahf
stc
loopne
push
or
push
mov
push
xlat
inc
or
inc
jmp
psubusw
cs
mov
rcl
sub
js
or
cmp
dec
scas
and
outsb
clc
push
lret
cmp
adc
lret
or
outsb
inc
jmp
sbb
lret
bound
push
loopne
add
lret
mov
jmp
push
xchg
sub
cmpsb
xor
mov
mov
sbb
push
sqrtps
sub
mov
cmp
mov
fistl
mov
pop
dec
imul
ds
xlat
adc
mov
add
nop
dec
aas
pushf
repz
add
sarl
mov
imul
out
xor
fs
fcmovnu
mov
cmp
cmp
insl
jecxz
ret
call
insb
push
jo
nop
pop
data16
ja
ror
fwait
rcrb
ret
cmp
js
push
pop
and
xor
jo
pop
push
add
jne
and
lock
mov
lock
daa
add
mov
adc
mov
in
adc
cli
out
sbb
push
xchg
xchg
adc
mov
xchg
push
add
pusha
nop
sbb
sub
jg
fstpl
fcmovb
mov
call
ja
dec
fs
sub
mov
loope
mov
ds
push
dec
and
jp
jns
arpl
int
push
test
xor
test
fidivs
nop
dec
jnp
adc
lea
addr16
fstl
xchg
mov
inc
inc
mov
mov
fucomip
cwtl
popa
les
subb
dec
fnstenv
add
xchg
xchg
mov
and
out
pop
repnz
sub
xchg
dec
pop
cmp
mov
xor
mov
cs
push
mov
dec
push
jnp
dec
stc
incb
and
adc
gs
scas
mov
inc
jno
loope
push
sbb
lea
mov
dec
enter
dec
mov
or
rorl
sahf
mov
sub
sbb
iret
ja
aaa
testl
jmp
fs
rclb
scas
ficoml
jle
lret
into
xor
out
cmp
mov
clc
popf
pop
jns
pop
jb
pusha
rcr
inc
in
rorb
xchg
stc
lds
je
rcrl
or
movntq
xchg
xchg
push
jmp
les
adc
popf
jmp
dec
mov
xchg
repz
or
rolb
rdpmc
lods
xchg
ret
adc
and
sub
adc
mov
or
aas
push
dec
pop
nop
ficompl
idivl
enter
inc
cwtl
xchg
sbb
mov
push
cmp
mov
push
lea
inc
ret
push
test
addr16
cmp
push
pusha
dec
pushf
pop
pop
mov
jg
loop
pushf
int3
scas
jo
lret
int
bound
das
cs
sbb
mov
outsb
out
lret
imul
fucomi
in
dec
pop
icebp
sub
jno
ucomiss
xlat
inc
outsb
sub
ret
fistps
jmp
mov
cmc
insb
mov
out
dec
into
jmp
nop
add
push
dec
mov
outsb
push
cmpsl
inc
inc
sbb
lahf
aaa
xor
mov
mov
pop
xlat
mov
mov
aaa
sti
hlt
lahf
hlt
fld
xchg
lea
and
xchg
ss
in
xchg
in
psraw
push
fs
mov
lahf
dec
lahf
mov
mov
jns
cmp
dec
sti
jbe
negl
call
lods
outsl
adc
icebp
add
pop
jnp
es
add
jmp
ret
mov
push
fstl
cmp
mov
inc
mov
mov
sti
dec
sbb
js
popf
jns
arpl
sub
mov
jo
lcall
repz
ja
mov
xor
insb
addr16
popf
jne
mov
out
cld
loopne
clc
pushf
pop
sets
or
mov
movsl
jne
mov
stc
movsl
pop
and
xor
in
cmp
leave
cmc
fwait
jns
or
outsl
rcrb
call
dec
mov
and
popf
mov
dec
xchg
test
shlb
popf
xchg
dec
and
and
lods
jl
int3
dec
inc
and
fsubl
stc
in
dec
push
bound
ret
push
lcall
fnstcw
aad
or
jl
nop
js
jnp
inc
rclb
pop
aad
mov
xchg
adc
test
xchg
mov
nop
mov
mov
movsl
fdivr
out
cmp
mov
nop
call
into
dec
loopne
orb
aaa
dec
or
fimuls
sarl
test
inc
push
movsl
pop
sahf
sbb
insl
sahf
ss
sub
inc
mov
pop
jbe
ds
imul
test
mov
mov
mov
sbb
je
daa
add
mov
stos
mov
mov
pop
jns
fwait
enter
jne
mov
adc
jo
cmpsb
cli
xchg
cpuid
mov
mov
jb
xor
les
mov
shrb
aam
mov
jne
pushf
movswl
xor
insb
and
iret
fs
clc
pop
test
fmuls
and
pushf
dec
and
ud0
jb
mov
gs
test
dec
fdivrs
cld
insl
inc
xchg
sub
inc
jg
push
pop
dec
inc
xor
and
rorb
pop
add
add
lret
lea
and
test
or
mov
sbb
data16
mov
mov
xchg
and
mov
in
xchg
cld
js
nop
int
and
sti
stos
or
push
jmp
jg
or
pop
push
adc
int3
fcompl
mov
sti
jecxz
mov
loope
pop
ror
icebp
idivb
xchg
jnp
rorl
mov
loope
and
movsl
lret
lret
mov
pop
add
les
jne
ss
sti
mov
pusha
sub
andl
sahf
cmp
shl
sbb
jl
jne
inc
int
or
mov
dec
and
imul
mov
add
shll
inc
insb
out
pop
pop
pushf
fstpl
iret
xor
xchg
sbbb
dec
jmp
aas
test
stos
cli
mov
int
jmp
mov
push
aas
loopne
lock
aaa
shlb
add
jno
loope
mov
lcall
fstps
jge
pop
push
push
sub
push
aaa
loop
pushf
dec
cmp
cmp
inc
addr16
xchg
xor
add
ss
int
enter
lods
clc
sub
add
and
cmp
jnp
inc
nop
push
xor
dec
dec
adc
js
xchg
hlt
aam
jl
imul
loop
jp
out
rcr
and
fsubp
mov
jae
fxch
fstps
dec
xor
jl
jmp
sbb
lock
jb
jmp
jo
xlat
and
add
jns
pop
outsl
stos
sub
xchg
inc
leave
lods
mov
dec
stc
jns
add
push
or
subb
dec
lret
cmp
int3
cmpl
cmp
cmpsb
adc
push
loopne
gs
mov
or
mov
sbb
xchg
mov
cmpsb
lods
std
adc
add
or
xchg
jp
scas
out
jmp
jae
repnz
adc
jp
pusha
push
push
xor
and
mov
xchg
daa
push
mov
shr
data16
jo
jnp
into
inc
ds
xchg
mov
xchg
call
xchg
pushf
cmp
repnz
aaa
inc
cmpsb
xor
out
rcll
lahf
aam
into
or
adc
mov
das
ds
push
out
in
fsts
stos
jle
cmp
add
inc
lcall
fsubl
fsub
into
popf
in
lds
cmc
enter
push
addl
fmull
mov
pop
xchg
sub
test
jmp
add
push
cmpsb
out
or
jmp
jg
adc
lods
adc
mov
pop
jp
mov
loope
jne
pop
lahf
mov
mov
sub
js
adc
mov
aam
stos
test
stc
mov
hlt
inc
jle
sbb
sub
sub
out
xor
and
xor
sbb
repnz
daa
push
push
das
pop
sbb
dec
or
subb
mov
cmp
push
std
loope
scas
push
int
dec
hlt
popf
sub
aad
out
adc
insl
les
push
push
push
xchg
clc
ss
pop
xlat
subl
lods
repz
popa
push
outsl
aad
jnp
mov
hlt
aad
inc
mov
and
lock
xor
dec
clc
out
repz
stos
fwait
mov
dec
aaa
jns
js
push
rcl
adc
mov
mov
outsl
cwtl
out
outsb
outsw
jecxz
int3
mov
jge
push
adcl
icebp
sub
mov
mov
fcompl
mov
dec
movsb
stos
mov
and
push
fs
repz
decl
xor
movsb
aas
out
outsb
call
jnp
clc
loop
and
cmp
pop
sbb
mov
aaa
push
or
in
adc
scas
mov
call
lret
mov
sub
movsl
pop
xchg
stos
adc
xor
inc
mov
shrb
jecxz
sub
cmpb
xlat
loopne
and
push
and
pop
add
mov
xchg
pop
pop
jg
cltd
add
sbb
call
lahf
mov
pop
icebp
cltd
pop
lock
push
and
and
mov
loop
jne
adcl
cli
fcomps
cmp
push
dec
inc
adc
cs
pcmpgtd
outsb
aad
aam
int3
pushf
mov
pop
jnp
cmpsl
faddp
roll
mov
incb
xchg
pusha
or
xor
rol
insl
mov
add
push
inc
sbb
fidivrs
cld
hlt
add
adc
cmp
mov
adc
insl
mov
or
mov
cmp
jg
inc
fwait
mov
data16
mov
push
xchg
push
imul
test
pop
ret
or
stc
shll
adc
fdivrl
push
jmp
push
shrl
adc
daa
sbb
fnsave
inc
pop
bnd
or
mov
pop
imul
jg
jb
xchg
sub
stos
icebp
rcl
dec
mov
push
sbb
fldlg2
shl
push
jl
add
int3
popf
nop
cli
hlt
scas
push
dec
fs
ds
mov
cmp
stos
in
push
xchg
jecxz
xchg
xor
shl
push
lock
aam
pop
iret
cmp
movsl
xchg
fidivs
pop
adc
and
sbb
pop
std
and
jecxz
xor
arpl
xor
shr
xchg
fstps
incb
push
sbb
leave
lds
rolb
add
push
cmpb
mov
fwait
push
dec
jnp
cmp
cmp
sbb
xchg
mov
push
lods
enter
dec
push
xchg
aaa
mov
mov
aam
test
mov
lods
insl
mov
cmpsb
nop
xchg
or
lea
push
arpl
sbb
ljmp
jnp,pt
mov
mov
dec
lahf
or
jge
lret
pop
popf
dec
cmp
pop
rcrl
dec
adc
adc
and
ds
push
andb
or
mov
jle
adcl
fwait
inc
adc
insb
stc
in
lods
popf
jae
inc
push
pop
mov
inc
arpl
arpl
lods
das
push
and
mov
xchg
xchg
mov
xchg
inc
xchg
jbe
std
or
sbb
xchg
sub
xorb
cmp
insl
lds
adc
subl
gs
sbb
test
sub
dec
movsl
movsl
mov
dec
cmpsl
jo
jge
sub
xchg
mov
mov
jg
mov
and
aad
cli
adc
dec
addr16
or
movl
vmulpd
fwait
sahf
ljmp
fsubl
mov
cmpl
inc
insl
pushf
xlat
or
int3
jle
sti
push
adc
rolb
in
aaa
mov
addr16
inc
fcmovne
mov
cmp
add
mov
dec
jbe
cmpsl
dec
push
sarl
sbb
jg
sbb
adc
cmpl
xchg
roll
mov
adc
out
push
cmp
idivl
outsb
adc
clc
mov
push
push
dec
sahf
rorl
cmpsl
lods
xor
dec
add
gs
pop
sub
aad
inc
lds
dec
js
adc
sub
inc
ja
mov
jb
pusha
das
jbe
rorb
push
jno
fdivs
loopne
mov
inc
enter
inc
sbb
or
adcb
xchg
add
xchg
adc
push
fimull
xor
xchg
arpl
adc
sbb
pop
cli
shl
or
imul
out
nop
ss
sub
adc
movsb
movsb
add
pop
cltd
or
xchg
idivl
jg
repnz
jge
pop
lds
arpl
mov
decb
xchg
and
pop
fs
xchg
xchg
stc
test
ror
sbb
dec
dec
jae
pop
adc
dec
test
out
test
lods
notb
sbb
lret
inc
cmpb
jmp
imul
les
into
mov
fbld
adc
jl
scas
dec
add
mov
sbb
test
ja
loopne
cmc
enter
cwtl
scas
dec
negb
das
and
in
call
scas
jl
test
das
mov
out
sub
mov
std
cmpsb
je
mov
icebp
jmp
out
test
mov
sub
push
pusha
cld
js
jecxz
adc
pusha
pop
pushf
arpl
cmp
xchg
sbb
push
ss
push
lock
inc
add
push
adc
lcall
call
cmp
xor
imul
xor
mov
adc
lock
xchg
pusha
ret
stos
dec
xchg
loop
repnz
dec
cmpsl
add
add
scas
and
sub
xor
jp
and
jl
pop
fdivr
xchg
mov
pop
sub
outsl
fisubrs
xor
add
movsb
push
fsts
mov
mov
les
sbb
sub
mov
scas
je
ja
shrb
inc
outsl
stos
sub
pop
sbb
push
adc
add
lret
jl
loope
cmp
das
cli
les
insl
imul
cli
mov
xchg
stos
ja
mov
cmpsl
mov
dec
mov
cmpb
insl
cmp
push
add
aaa
mov
mov
addr16
dec
scas
ja
cmpb
arpl
add
or
and
push
pop
sub
clc
mov
xor
jo
mov
out
cld
jmp
push
xor
hlt
scas
ja
popa
xchg
shlb
outsb
lcall
data16
repnz
adc
into
and
jbe
or
lret
in
push
push
pop
sbb
lods
or
lret
enter
fs
stos
pop
cwtl
push
outsb
popf
jl
and
cmp
push
push
add
test
jne
in
xor
sti
aad
xor
jg
pop
inc
adc
loop
or
je
and
jb
dec
stos
sub
cs
call
fdivrl
cltd
ss
sub
in
cmpsb
inc
aas
lods
mov
dec
inc
cmp
push
aas
mov
inc
enter
sub
push
xchg
mov
lods
lret
dec
fld
rcll
cld
dec
jle
pminub
pop
lock
push
stos
out
inc
xchg
sub
push
loopne
jb
stos
in
inc
sbb
xor
mov
xchg
mov
or
adc
and
frstor
lcall
popa
mov
ljmp
mov
jns
mov
xadd
popa
sbb
dec
push
jno
or
addr16
xchg
xchg
jbe
mov
cld
inc
mov
bound
sbb
rolb
pop
sub
push
cmp
xadd
jnp
mov
repz
jl
sbb
sub
lock
mov
mov
ret
mov
jbe
es
popf
dec
cmp
cltd
outsb
enter
adcb
shlb
xchg
xlat
mov
into
int3
in
int
push
outsl
ljmp
dec
arpl
mov
xchg
add
mov
lret
movsb
in
ret
movsb
mov
inc
mov
ljmp
or
fnstsw
test
mov
cwtl
int
jmp
js
cs
add
vmovntps
push
pop
jge
nop
jno
arpl
sbb
ds
enter
mov
out
lds
add
outsb
mov
push
lret
movsl
aas
mov
xlat
out
pop
mov
lret
pop
fisubl
push
das
and
xor
das
pusha
push
xchg
leave
push
dec
sbb
rclb
pop
fists
stos
mov
or
pop
cmpsb
pop
mov
in
int
lret
ja
mov
shll
xchg
jne
imul
or
nop
rorb
cmp
std
push
pop
cmp
lcall
js
adc
sbb
xchg
sbb
pop
cmp
and
xchg
mov
jl
hlt
push
sub
sarb
adc
repnz
les
xlat
mov
andl
les
push
loopne
icebp
lea
push
adc
adc
dec
pop
pop
faddp
or
inc
dec
pop
in
in
mov
push
pop
pop
jecxz
cli
or
cltd
push
inc
dec
aad
sti
xchg
int3
movsb
je
and
pop
pmulhw
pop
jle
dec
pop
popa
int
and
jo
push
add
out
sub
xchg
dec
rorb
hlt
mov
pop
add
ret
push
cld
or
jp
jecxz
lods
subl
popf
cld
and
test
clc
fisttpll
lods
xor
gs
xchg
push
out
ljmp
stos
sbb
or
in
push
mov
mov
icebp
pusha
xor
pop
jne
movsl
sbb
sub
pusha
jle
movzbl
mov
cltd
jecxz
cmp
fdivr
std
test
mov
fsubrl
and
fcmovu
push
mov
add
dec
aas
push
xor
lods
mov
jmp
imul
out
shrl
add
enter
data16
gs
lret
mov
dec
jo
sti
sub
mov
je
dec
adc
gs
cmp
mov
rcr
jmp
repz
popf
leave
outsb
push
scas
jns
pop
push
xchg
push
fwait
mov
movl
movsl
js
cli
out
adc
hlt
dec
es
cmc
pop
or
or
hlt
adc
sub
aaa
push
push
repnz
inc
add
xchg
cmp
dec
mov
das
mov
rcrl
sub
sbb
mov
push
scas
cwtl
das
push
sbb
sbb
mov
imul
sbb
xor
fimuls
test
shlb
xchg
cmp
icebp
lahf
mov
imul
dec
out
or
lds
push
adc
add
cmpb
dec
mov
mov
inc
add
push
xchg
and
sbb
xchg
dec
rorl
ljmp
aaa
adc
mov
js
stc
call
jecxz
inc
inc
movq
sub
jo
shll
es
fcmovnb
inc
imul
cmpsb
rorl
inc
sub
or
jge
daa
incb
bsr
or
dec
ja
sub
mov
lret
call
aas
into
shll
sbb
pop
dec
lret
sub
mov
out
sbb
push
and
fcmovb
rcll
jp
shrl
cmp
cwtl
ljmp
inc
mov
std
pop
xchg
sti
xchg
cmpsl
or
dec
shr
pop
loop
cmp
das
sahf
push
sti
outsb
bound
pop
lret
mov
mov
test
shr
cltd
adc
gs
sbb
or
jns
shll
jmp
dec
gs
les
les
add
je
jmp
mov
adc
inc
sub
in
xlat
mov
fs
or
sub
mov
ljmp
jge
sahf
lcall
fists
fs
fldcw
aaa
lret
push
dec
jg
sbb
or
insl
push
pushf
incb
pop
insl
cmp
sbb
add
and
daa
jo
in
pop
addl
push
push
cmpsb
lods
xor
shll
shl
nop
sub
jno
sub
lock
or
cmp
loope
sti
sbb
inc
jp
insb
mov
rclb
cmp
mov
cmp
aas
push
adc
enter
icebp
dec
enter
and
cwtl
imul
mov
mov
sarl
test
leave
ret
lods
icebp
jnp
inc
inc
shrb
icebp
mov
jle
cld
jae
out
push
popf
dec
int3
sbbb
lcall
imul
bound
lret
xor
jns
pop
sbb
sub
jmp
lods
fwait
or
push
dec
mov
xchg
pop
cmp
jbe
loope
push
and
jmp
dec
lret
call
lock
mov
jp,pt
or
lods
fimull
cmp
mov
fisubrl
fisubl
jmp
push
cs
dec
jge
in
add
or
fwait
int3
cmp
popf
lock
pop
test
or
jb
and
prefetch
shl
clc
xchg
lods
push
adc
les
addr16
ret
xor
shll
fsubrs
jmp
rcrl
dec
fmuls
xchg
std
ja
dec
jb
insb
sahf
mov
mov
stc
inc
aaa
mov
mov
nop
pusha
scas
mov
ret
push
sbb
ret
insb
mov
sub
inc
xor
xorb
ret
push
imul
leave
jb
ret
fxch
iret
cmc
jbe
imul
hlt
out
cmp
shr
es
lcall
push
in
lock
stos
add
enter
clc
xchg
jb,pn
negb
cmp
inc
sbb
mov
aaa
push
xchg
aaa
sbb
movb
sbb
dec
push
or
outsb
hlt
push
test
out
inc
out
pop
pop
push
cmp
fisttpll
xor
sub
cmpsl
and
adc
cmpsl
adc
not
add
pop
iret
push
sub
lds
int3
call
pop
mov
xor
in
andb
sbb
test
pusha
jb
mov
jae
adc
jno
pop
je
mov
bound
dec
sbb
mov
scas
aam
imul
inc
cltd
mov
mov
incl
enter
je
mov
out
adcb
jb
pop
mov
out
cmp
xchg
lret
stos
cs
dec
fldenv
sub
xchg
and
and
pop
std
xchg
pop
leave
push
push
gs
imulb
xchg
sub
incl
xchg
pop
mov
jle
leave
adc
movsl
ja
popa
push
aad
sbb
push
mov
stos
test
xchg
in
nop
inc
cmp
pop
fmulp
jo
mov
sub
inc
dec
pop
cmpsl
and
pop
lea
scas
ret
push
lahf
jmp
mov
adc
xor
pop
dec
sub
std
imul
popf
add
addr16
in
mov
bnd
adc
mov
inc
cwtl
in
aas
jne
clc
xchg
stos
inc
mov
in
jno
mov
popf
ret
and
or
dec
inc
rclb
andl
jo
fdivs
inc
adcb
jae
repnz
xorb
dec
sub
lock
mov
pop
xor
mov
or
pusha
mov
lcall
sbb
out
in
mov
lea
ss
inc
dec
dec
bound
sub
aam
jge
dec
pop
loope
cmc
pop
in
sbb
je
test
lods
popa
pop
push
aam
btcl
xor
decb
in
lea
sbb
aam
xor
sub
mov
jle
xchg
cmp
repz
out
das
mov
add
xor
sti
aaa
sub
cmc
xchg
xor
outsb
jae
or
xor
adc
mov
aam
add
pop
mov
out
dec
adc
sub
add
iret
sub
rcrl
sub
jle
int
mov
inc
cwtl
cmc
dec
sbb
mov
push
int3
out
les
in
pop
cmp
ja
test
call
push
mov
dec
jb
dec
mov
ljmp
pusha
dec
add
xchg
cmp
mov
cmp
xor
jp
movsl
fstpt
mov
sar
test
icebp
aaa
jg
ljmp
xor
mov
xchg
and
mov
test
repz
mov
call
mov
loopne
push
aad
push
sub
xor
ljmp
sbb
out
pop
imul
les
lea
sbb
sub
stos
mov
inc
outsl
inc
cmpsb
pop
pop
pop
imull
ret
aas
sub
cltd
fcoms
test
cmp
in
loopne
jl
push
dec
sub
sbb
inc
out
or
cwtl
jo
cmp
rcr
xlat
out
pusha
cltd
cwtl
push
add
push
icebp
cmpsb
jb
push
jl
decb
stos
lahf
pop
dec
mov
cwtl
pop
pop
into
hlt
or
add
jns
fildl
sarl
testb
negl
mov
dec
ficomps
xor
sahf
leave
stc
cmpsl
loop
or
cli
nop
arpl
aas
xor
fwait
or
cmc
lea
out
dec
mov
movsl
push
fnsave
insl
lahf
xor
dec
ss
mov
xchg
clc
adc
test
adc
pop
fs
mov
pop
cmp
iret
insl
sub
pop
sbb
cmpsb
and
mov
mov
ss
add
mov
fadds
mov
push
jns
xchg
dec
in
adc
adc
rcrb
mov
cwtl
lea
leave
std
idivb
es
fistps
and
pop
pop
insl
fld
mov
mov
xchg
sbb
xor
cmp
push
repnz
cmp
mov
mov
repz
orl
movsl
sbb
ror
es
pusha
pop
leave
pop
inc
lds
push
pop
scas
stos
in
test
adc
xor
mov
xchg
lods
adc
cmp
mov
adc
fists
ss
arpl
add
push
jmp
fdivl
cmp
daa
xor
mov
xor
or
add
cs
sarl
or
inc
pop
fildl
lods
inc
imulb
in
cmc
fisttps
xchg
jmp
jmp
into
imul
test
jmp
mov
repz
fstpt
push
iret
sub
in
sbb
shl
dec
outsb
add
jge
adc
rolb
pop
repnz
sub
mov
dec
add
test
test
aaa
outsl
outsl
or
scas
std
lea
inc
icebp
rcl
ds
push
imul
push
mov
fiadds
test
movsl
fdivl
nop
or
ret
mulb
xchg
lret
aam
ja
mov
pop
out
or
sbbb
ret
rcr
push
xchg
cmp
add
and
or
xor
jb
stc
add
mov
in
je
inc
stos
arpl
mov
mov
xor
mov
xor
ja
add
cld
mov
cld
or
mov
ss
cmp
sbb
jae
jecxz
daa
cmp
xchg
xor
xor
adc
mov
call
lods
popf
or
movsl
outsl
mov
fcomps
clc
push
push
adc
ja
fcom
hlt
mov
aad
js
ret
jbe
cld
rclb
and
sub
mov
or
and
test
ret
cmpsb
mov
pop
adc
xchg
stos
add
xlat
mov
push
jo
pusha
and
push
pop
lock
sahf
and
inc
ljmp
into
nop
dec
xchg
lret
lds
stos
or
fnsave
into
movsl
stc
mov
adc
inc
add
nop
int3
dec
or
mov
xchg
jo
adc
pushf
cmp
inc
int3
lahf
push
dec
jb
jp
jmp
arpl
cld
add
lret
or
loope
sub
xor
fdivrl
gs
clc
test
stos
cmp
add
mov
mov
mov
repz
gs
push
test
cwtl
jne
out
popa
mov
pop
add
lods
fisttps
mov
mov
pop
or
gs
icebp
mov
cmp
fldt
icebp
sbb
fisttpl
ja
test
scas
xchg
fmul
or
dec
rcrl
adc
mov
out
aas
jmp
das
adc
in
icebp
dec
dec
jg
add
fidivs
add
sbb
cli
xor
push
jo
mov
and
xchg
or
lock
push
outsb
mov
add
cmp
push
add
and
push
call
insl
cwtl
cli
pop
aaa
add
ds
cmp
in
sbb
inc
loop
jne
cmp
xchg
sub
scas
xor
rolb
roll
mull
test
movsl
xor
cmp
xor
hlt
fcoms
add
cmpl
jge
pop
mov
sbb
jg
call
ljmp
movhps
ret
dec
gs
cmp
aad
fs
ret
dec
adc
push
or
scas
mov
dec
lahf
test
push
hlt
fld
loop
int
or
addr16
push
dec
cmp
std
mov
nop
std
lret
icebp
cwtl
jns
mov
enter
in
adc
cli
mov
mov
xchg
add
jp
pop
mov
imul
mov
mov
inc
inc
push
fadds
arpl
call
pushf
test
add
jmp
pop
outsb
jbe
incb
mov
mov
in
inc
add
sbb
xchg
sbb
pop
xor
test
popf
jnp
mov
cli
xchg
jae
mov
inc
call
xor
xor
in
shll
insl
test
jmp
imul
pop
mov
movsb
lcall
mov
dec
in
cmp
mov
fists
out
mov
in
lret
lods
mov
fwait
xchg
cmp
dec
mov
pushl
jp
repnz
pop
es
ss
sti
shll
or
clc
mov
sub
inc
mov
lahf
mov
jo
fnstsw
cmp
leave
fcmovnbe
mov
mov
dec
std
sbb
pop
popf
fisubs
xor
sbb
pop
cld
and
jmp
cmp
adc
dec
fbstp
dec
lcall
clc
cmpsl
inc
pop
out
inc
mov
lret
outsl
dec
loop
cmp
test
out
cmp
jp
mov
loop
mov
dec
leave
xchg
mov
enter
sbb
repz
mov
push
nop/reserved
mov
in
ret
cwtl
outsb
cmp
xchg
mov
fwait
je
stos
sbb
aas
push
into
pop
subb
sub
and
pop
xchg
ja
pop
inc
imul
addr16
push
push
daa
jmp
push
daa
orl
pop
mov
cmp
dec
dec
outsb
cmp
into
cmp
pop
push
lahf
xchg
mov
out
dec
pop
sbb
lret
mov
mov
icebp
scas
shrl
enter
dec
mov
out
test
scas
dec
ljmp
loopne
aad
cmc
or
fisttps
push
adc
and
sarl
jne
sbb
sahf
cltd
ret
dec
outsb
cmp
shll
pusha
pop
test
sbb
sbb
bound
adc
mov
insb
bound
jle
xor
fwait
outsl
cmp
or
jbe
les
mov
bound
jle
outsl
mov
push
shrb
ret
fistps
mov
jmp
imul
mov
sbb
cmc
gs
sahf
std
cmp
add
xchg
sbb
mov
lret
xchg
cs
sahf
jecxz
xchg
js
xchg
pusha
insb
pop
jge
cmp
mov
add
dec
sbb
dec
das
test
sub
enter
lods
inc
push
in
cmp
sbb
pop
xlat
jmp
aas
inc
leave
lret
repnz
filds
jge
add
jp
sub
addr16
dec
ja
pop
pop
test
arpl
or
and
iret
or
mov
cmp
clc
lret
test
call
sub
mov
adc
in
pop
xchg
and
adc
sahf
adc
adc
enter
cli
sub
mov
pop
arpl
mov
jg
adc
cmp
mov
xor
lds
std
add
fdivs
mov
push
movsb
out
sub
sub
stos
inc
mov
imul
mov
fidivrl
jns
dec
in
push
mov
es
jge
xchg
mov
jns
sarb
and
invd
gs
dec
xor
and
jle
jecxz
adc
mov
lret
aaa
inc
cwtl
scas
pushf
add
sti
loopne
inc
mov
lock
aas
sub
jno
adc
dec
push
incb
mov
sub
mov
xor
fisubl
int
mov
shrb
jo
push
xor
adcb
push
aaa
hlt
sbb
loopne
dec
stos
xchg
int
out
rorl
loopne
push
mov
outsl
in
inc
and
loope
add
jo
in
out
xor
mov
jg
ret
mov
mov
xor
or
test
jne
sarl
or
icebp
js
movsl
test
and
lods
ret
and
in
rcrl
mov
movsl
cmp
loop
rcrl
cld
xor
sub
in
sbb
dec
push
sbb
and
in
std
sub
jle
add
sbb
mov
imul
mov
mov
mov
xchg
inc
mov
mov
mov
cltd
test
jg
sbb
loop
or
xor
jmp
les
sahf
push
adc
xchg
popf
xchg
xor
jmp
adc
sbb
in
es
xchg
bound
fldl
outsb
mov
shl
push
inc
sbb
mov
xor
decl
jge
sbb
xacquire
jle
frstor
movsb
loope
and
and
xchg
sub
sahf
in
inc
divb
psubd
jno
stos
dec
sbb
daa
sub
pop
dec
xchg
push
push
mov
imul
mov
jb
cmp
and
jmp
sbb
mov
inc
repnz
scas
outsb
sub
mov
rcrb
outsb
je
es
mov
pop
lret
in
sbbb
shll
xchg
lea
inc
adc
fs
fidivl
shll
les
movsb
jle
push
pushf
pop
mov
push
int
sbb
repnz
lahf
cs
je
movsb
mov
insb
inc
ljmp
dec
rorl
shll
test
sbb
and
mov
push
daa
cld
test
cld
iret
shll
enter
mov
out
enter
mov
fidivrl
aaa
fstps
xor
jecxz
mov
mov
decl
xchg
ljmp
adc
mov
sahf
fimuls
clc
mov
jp
fldcw
mov
push
scas
lahf
dec
cmpsl
push
insb
movsb
pop
xor
sbb
imul
cmp
fmuls
pop
and
ljmp
in
push
or
or
lcall
add
lods
imul
fnstenv
repz
and
cli
popa
fdivrs
cmpsb
adc
ss
jg
push
pop
out
sub
cmp
stc
push
push
aas
ret
pushf
clc
mov
xor
pop
rcll
rorb
stc
stos
mov
jl
or
rcl
sbb
or
fdivl
jo
loop
addr16
pop
xchg
push
mov
sub
movsb
mov
hlt
jecxz
xchg
mov
lds
loopne
sub
mov
ljmp
sti
and
cmp
in
and
mov
xchg
inc
in
push
call
mov
xchg
scas
andb
xchg
cmp
fbld
js
xchg
sbbl
mov
insb
mov
repnz
xorb
xor
jbe
outsl
cli
fsub
pop
sub
mov
pushf
inc
inc
pop
out
out
into
xchg
add
lret
lahf
cltd
in
jo
jae
push
ficoms
cltd
shll
mov
daa
fwait
cmp
gs
xor
pop
dec
pop
stos
out
fsubp
sub
jmp
xor
in
mov
or
xchg
pop
shlb
cmp
sub
lea
in
inc
aas
cmovg
mov
addr16
cmc
shrl
xchg
jbe
sub
pop
jne
inc
aam
sub
gs
in
push
xchg
addl
rorl
inc
hlt
std
adc
clc
sub
dec
cmp
pop
mov
inc
shrb
xor
cmp
sub
imul
cwtl
mov
push
ficomps
ret
rorb
call
lea
vpunpckhqdq
ss
sbb
xchg
mov
test
sbb
jge
int3
in
xor
in
mov
jb
lock
or
jno
sbb
call
ljmp
cmp
jne
test
shrl
mov
add
nop
xor
out
bswap
inc
sub
push
clc
in
out
outsb
out
js
push
out
popa
aad
mov
push
push
test
cmp
jmp
je
dec
icebp
ret
xor
jg
mov
or
cld
scas
cmc
inc
sub
push
lods
lea
adc
add
and
xlat
lds
data16
mov
add
adc
mov
jae
inc
sbb
imul
shll
in
push
ds
fildll
jg
je
ret
aad
cld
or
jle
fstps
mov
ret
les
cmp
or
adc
ret
int
faddl
push
xchg
fwait
add
or
je
push
inc
jp
rcrl
sahf
dec
test
mov
mov
or
sub
mov
bound
mov
and
test
aas
mov
and
test
xlat
push
addr16
sahf
cmp
adc
mov
fadds
pop
xor
test
dec
push
outsl
push
xor
inc
cmpsb
lds
or
addl
div
ret
add
sti
gs
std
aas
out
in
push
inc
jb
loop
dec
xor
idiv
xorb
ret
inc
add
dec
insl
cs
inc
imul
pop
fwait
das
cmp
mov
cld
sbb
mov
inc
sbb
jl
inc
pop
and
hlt
jns
ljmp
icebp
rcr
sbb
stos
stos
xchg
in
movsb
leave
bound
cmp
ror
mov
inc
xor
das
mov
jg
or
and
les
inc
pusha
mov
movsb
xchg
lods
cltd
pop
andl
out
cs
pushf
ret
sbb
mov
xorb
mov
xor
pop
sub
popa
pop
test
mov
mov
mov
inc
gs
pop
rcrb
push
cmp
push
add
cmp
repnz
jnp
daa
rcrb
cmc
push
mov
movsb
sbb
pop
and
test
scas
das
lret
cs
mov
sbb
xchg
sub
ja
cmp
adc
jle
push
daa
call
push
xor
add
or
das
adc
cwtl
sti
loopne
insb
inc
sub
sahf
xor
dec
sbb
ljmp
int3
outsl
lods
add
das
pop
fisttps
daa
push
mov
fnsave
in
lock
int
lods
dec
les
mov
test
nop
add
fwait
js,pt
dec
hlt
sub
xorl
push
push
pop
nop
sbb
adc
inc
cs
mov
cmp
sub
pop
mov
xchg
sahf
mov
mov
mov
out
jns
cwtl
adc
xchg
lods
test
movb
or
cmp
hlt
xchg
in
pusha
xchg
outsl
xchg
jge
out
inc
inc
fiaddl
daa
idiv
flds
push
je
xor
pushl
cli
dec
std
pop
lods
mov
jnp
add
imul
inc
pop
mov
bound
adc
or
fcompl
loope
jp
push
add
sbb
adc
sub
push
shll
scas
js
cs
in
sbb
mov
mov
orb
xchg
sbb
xor
je
sbbl
outsb
mov
jge
xor
in
jp
aam
ljmp
and
xlat
ficompl
dec
or
sti
pusha
xorl
in
sub
xor
xchg
nop
popa
mov
arpl
pop
repz
lret
adc
adc
or
or
xchg
adc
and
push
inc
lret
or
insl
negb
jle
and
cwtl
bound
push
addl
xor
arpl
out
push
sbb
jge
sahf
adc
adc
roll
notl
pop
and
test
mov
pusha
outsb
subb
xchg
cmp
aad
fdivl
mov
or
lcall
data16
loop
inc
add
add
mov
cmp
lods
es
jge
mov
in
inc
out
nop
inc
aas
out
sbb
or
pop
adc
jmp
dec
incl
insb
je
stos
popl
aad
test
mov
pop
fs
daa
mov
xchg
push
sub
sbb
test
lds
inc
lret
cmc
pop
and
fdivp
shll
daa
dec
lret
adc
push
inc
push
mov
insb
mov
push
mov
sub
jmp
inc
out
clc
clc
pop
sub
xchg
mov
test
sbb
pusha
mov
jnp
mov
int3
daa
mov
cwtl
aam
leave
push
or
mov
loopne
push
cwtl
gs
mov
inc
mov
andb
insl
aas
dec
jg
or
pop
incb
sti
sub
icebp
add
and
jl
xor
pushf
dec
cmp
sub
pop
xchg
sub
repz
ljmp
pop
push
push
jecxz
scas
dec
mov
ret
mov
das
add
mov
ja
sarb
cli
jbe
cmpps
xchg
jmp
xchg
push
adc
cmp
adcb
jns
jns
xchg
inc
aas
jae
dec
ss
stc
lret
shl
fs
push
pushf
pop
repz
das
aaa
insb
pop
push
pop
bound
ds
or
pushf
in
xchg
data16
or
lods
rclb
jbe
xchg
mov
push
pop
sti
pop
adc
lcall
push
aad
loope
das
jmp
pop
scas
mov
xor
add
es
xor
orl
ret
push
jle
xchg
stos
data16
xchg
cltd
adcb
testl
nop
popf
addr16
mov
cmp
xorl
scas
mov
scas
pop
sub
in
jge
int3
jge
xchg
arpl
fdivrs
iret
mov
cmpsb
and
mov
inc
arpl
push
pusha
sarl
jg
jecxz
push
jb
mov
and
mov
xor
dec
enter
jnp
add
insl
mov
xor
lcall
jae
push
in
imul
dec
lcall
cld
adc
add
xchg
add
jo
dec
inc
mov
punpckhwd
xor
cwtl
and
test
sbb
sub
sbb
loop
mov
push
cli
xchg
cmp
push
dec
out
mov
inc
sar
dec
test
mov
jl
push
in
push
ss
sub
xchg
and
jle
scas
mov
xor
rolb
dec
rclb
addr16
jmp
push
inc
lods
cmp
xchg
add
addr16
mov
pop
mov
dec
fisttps
inc
mov
inc
jmp
loop
ss
push
jno
stos
mov
cmp
ja
xor
pop
js
outsl
and
xchg
dec
jns
cmpb
pop
lods
dec
outsl
mov
cs
jo
dec
filds
or
sahf
xchg
shl
mov
mulb
mov
xchg
push
dec
pop
aas
cmc
ret
test
dec
cltd
sub
mov
imul
inc
sub
xor
cmp
into
mov
fcmovnu
enter
mov
insb
mov
loope
xor
repz
lods
arpl
xchg
orl
adc
sbb
nop
dec
mov
xor
mov
cmp
jl
xor
in
jge
and
gs
adc
std
mov
lock
lock
outsb
mov
in
outsl
aas
lret
push
adc
inc
repnz
dec
js
popa
repz
sub
arpl
jns
xchg
sarb
inc
mov
push
jmp
or
je
pop
dec
inc
out
enter
cltd
imul
adc
push
stos
fiaddl
pop
out
fsub
shl
shll
push
jl
clc
adc
xchg
outsb
mov
xchg
or
mov
popf
sub
fcoms
call
outsb
and
pop
stc
sti
jnp
sub
xor
pop
cmp
insb
mov
mov
clc
push
ljmp
xor
cli
aaa
addr16
pop
icebp
adc
js
mov
leave
pop
push
jle
fwait
das
mov
into
or
test
sahf
daa
add
sub
cmp
lock
daa
mov
dec
fwait
lret
push
cmp
push
jne
mov
sub
scas
mov
cmc
mov
sub
andl
cmc
cmp
cmpsl
imul
mov
or
out
jle
jbe
and
sbb
push
out
pop
mov
add
insl
je
call
or
jmp
jmp
inc
mov
outsl
outsl
dec
adc
jbe
push
call
testl
push
testb
adc
je
lahf
push
mov
xchg
into
divl
xchg
enter
dec
ds
lea
lea
mov
and
nop
pusha
cmp
pushf
dec
fmuls
gs
xchg
mov
shrb
es
mov
mov
add
scas
sbb
enter
mov
add
filds
aaa
cmpsb
mov
inc
sti
sti
xor
mov
mul
add
sub
std
dec
out
insl
adc
pop
xor
mov
popa
jp
movsb
jo
jne
sub
jae
adc
stos
mov
sbb
or
jo
push
push
sub
icebp
xor
ds
push
je
mov
xor
push
lock
icebp
pop
sub
into
out
popa
xor
pop
scas
xchg
std
sub
push
les
push
test
mov
lock
xchg
fimuls
outsb
daa
or
xchg
insl
xchg
or
push
pop
jae
pop
mov
push
mov
fdivl
xchg
sub
and
pop
vmread
outsl
fisubrs
insl
pop
stos
stos
adc
cmp
add
bound
jns
mov
shrl
aaa
arpl
add
aad
testl
sbb
sub
movsb
addb
add
movsl
mov
mov
jl
les
mov
ljmp
les
sub
popa
push
sbb
repz
in
data16
and
jnp
pop
mov
stc
cli
pop
in
and
jl
es
movsb
loop
imul
dec
shrb
rorl
clc
into
xlat
cmpb
js
mov
mov
xchg
scas
push
mov
adc
pop
outsl
sbb
jb
push
xor
pop
sub
in
fwait
push
popa
jne
mov
pop
sub
enter
arpl
dec
adc
inc
mov
push
rcll
sub
jo
cmp
in
mov
sub
lods
sarl
addb
mov
cmpsb
loopne
iret
cmp
or
push
je
fld
std
mov
js
xor
std
mov
loopne
ss
and
push
repnz
adc
dec
adc
xchg
xor
insl
lcall
out
ja
icebp
sahf
cmp
sbb
xor
mov
iret
cli
jae
mov
pop
stos
imul
dec
outsb
daa
pop
jns
ss
cli
push
sub
jnp
icebp
js
enter
and
aaa
adcb
leave
sub
popa
xor
cmpsl
mov
bswap
into
call
mul
repz
sbb
call
cmp
lods
inc
xor
jb
cmp
and
xor
adc
cmpsb
ja
jmp
cltd
loop
insb
scas
fists
xchg
dec
mov
cli
les
xor
stc
pop
fstps
dec
mov
or
fwait
pushf
scas
inc
jbe
imul
push
push
cmp
push
and
aad
mov
shll
repz
cli
mov
fwait
mov
xchg
inc
cmp
ss
inc
mov
jne
stc
xchg
mov
lods
push
jmp
cmp
lock
popa
xchg
push
test
inc
pop
call
notl
lahf
and
mov
pusha
dec
gs
add
outsb
inc
add
and
fwait
sub
sbb
sbb
mov
cmp
mov
rclb
lahf
inc
sub
leave
xchg
stos
sub
inc
out
pop
jmp
mov
shlb
out
das
dec
mov
adc
or
cmpsb
push
sbb
mull
push
and
fisttps
outsb
and
push
mov
or
int3
test
pusha
inc
fldenv
mov
mov
leave
jno
fs
cmp
aad
neg
push
out
dec
mov
pop
dec
xchg
es
push
xorl
inc
pop
adc
lea
je
pushf
roll
popf
push
cs
call
inc
aad
cmpsb
jmp
mov
sar
call
cmp
jnp
pusha
stc
adc
add
pop
rclb
les
xchg
add
sub
pop
or
rorb
enter
fldt
sbb
jp
or
ss
andl
aas
adc
xor
inc
les
xchg
jmp
aaa
test
fdiv
int3
ret
and
dec
pop
movzwl
push
data16
pop
imul
lea
aam
fistpl
test
adc
and
pop
cltd
das
les
mov
pop
jg
fs
lea
sbb
jbe
jmp
mov
dec
fstpl
xor
cli
sub
cmpsl
out
insb
mov
mov
sub
pop
cli
mov
in
lock
out
jno
daa
inc
and
cmpsb
lods
jle
or
addr16
rorl
sub
push
js
push
xchg
mov
and
pushf
xchg
xchg
out
mov
sub
lret
aas
arpl
mov
jle
cmpsl
mov
mov
mov
adc
lock
into
push
in
push
adc
ja
pusha
xor
dec
femms
or
add
jecxz
adc
mov
mov
pushf
push
stc
mov
push
adc
stos
dec
mov
add
das
sarb
dec
fcompl
sbb
ljmp
std
je
fbld
xchg
mov
hlt
and
pop
inc
pop
sarl
in
jb
pop
pusha
paddw
push
mov
inc
sti
add
pop
inc
cwtl
enter
jg
cmp
xchg
mov
sub
and
push
enter
outsl
push
or
jns
inc
add
movsl
jmp
mov
cwtl
sub
push
push
int3
aad
xor
xchg
sahf
arpl
in
xor
stos
cltd
rclb
and
mov
aaa
inc
sub
jae
dec
xchg
pop
leave
mov
jbe
push
inc
cltd
dec
add
mov
jne
mov
xchg
dec
in
fdivp
mov
insl
imul
fnsave
jecxz
leave
clc
inc
push
xor
aaa
gs
sbb
stc
sbb
cmpsb
sbb
dec
stc
push
pop
mov
mov
out
ja
jnp
pusha
xchg
pop
cs
shlb
cmc
pop
xor
cmp
mov
cltd
arpl
cmp
jb
dec
notb
and
inc
sahf
xchg
sbb
stc
fcmovu
adc
fcoms
add
and
dec
push
sub
mov
ljmp
or
pop
cmpsb
jnp
daa
leave
dec
and
and
insb
xchg
mov
imul
gs
mov
push
sub
xor
mov
jge
outsl
and
adc
aaa
arpl
loopne
iret
push
jne
xchg
xchg
xchg
ds
cmpsl
inc
adc
sub
lret
inc
dec
ret
pop
mov
pop
add
xchg
mov
mov
xor
inc
loope
stos
mov
pop
shll
xor
or
test
ljmp
divl
pushf
imul
dec
js
pop
and
jae
add
into
icebp
inc
imul
enter
fistpl
xchg
and
jge
movsb
or
ss
mov
mov
cmp
mov
fcom
je
pop
pop
push
scas
cmp
push
xchg
cmp
sahf
fs
xchg
loope
adc
mov
hlt
push
adc
das
adc
push
lret
mov
jge
inc
push
into
aaa
or
roll
and
ret
fcoml
outsl
and
mov
mov
add
imul
cmp
ss
adc
add
add
lea
push
jns
aam
dec
popf
fdivs
and
and
dec
jnp
mov
mov
push
clc
sub
sub
jbe
dec
into
roll
dec
push
pushf
pop
data16
in
repz
loopne
scas
lock
int
jp
out
inc
dec
mov
sti
lods
arpl
lock
jb
inc
xchg
xchg
aam
inc
ja
pushf
das
test
fisttpll
sub
ret
sbb
pop
or
push
and
sahf
insb
dec
and
inc
push
xlat
xor
mov
xchg
pop
push
inc
in
jae
out
xchg
cmp
ja
jg
dec
jo
movsl
into
arpl
jge
xchg
adc
or
cmp
je
je
cld
dec
hlt
sub
xor
es
jge
add
adcl
sbb
xchg
lods
es
or
sbb
pop
add
mov
mov
xchg
leave
mov
xchg
mov
mov
and
pop
mov
pop
pushf
test
sub
mov
or
mov
inc
je
mov
popa
lret
fwait
mov
nop
je
cmp
pop
add
lea
cmp
fmul
mov
mov
test
push
fnstcw
pop
mov
icebp
or
xchg
outsl
xchg
pop
push
mov
clc
insl
mov
sarl
mov
push
mov
nop
xor
cmc
addr16
scas
jne
or
push
repz
test
xchg
lods
jecxz
lds
push
jge
jl
jp
mov
pop
in
bound
and
xor
jb
pushf
sti
cmc
aad
inc
mov
add
fists
imul
push
mov
push
outsb
fidivrl
lods
mov
add
inc
ss
mov
lock
mov
sub
jle
xchg
mov
cmp
popa
sbb
aad
lcall
dec
jno
call
je
xchg
pop
sbb
add
jp
jp
cwtl
pop
mov
mov
popf
mov
fdivrs
adc
pushl
push
adcb
sahf
inc
or
mov
adcb
sbb
cs
pop
and
stc
repz
dec
or
sahf
ja
cmc
xchg
mov
push
mov
dec
cwtl
jne
stc
adc
mov
les
mov
sub
aad
dec
popf
sub
aam
pop
sarb
outsb
mov
daa
insl
sbb
dec
sbb
push
inc
mov
mov
fbld
dec
inc
data16
test
add
or
icebp
sub
pop
push
push
addr16
mov
xchg
xlat
mov
push
lods
xor
push
insl
and
inc
shlb
scas
cli
outsl
clc
je
sbb
outsb
dec
add
test
in
push
inc
dec
xchg
xchg
add
jge
fidivrl
popa
popa
dec
je
repz
inc
int3
cmp
test
jg
stos
pop
mov
jge
loopne
push
cwtl
pop
imul
test
mov
scas
ficoms
fsubp
std
dec
sub
sti
and
movsb
xor
rorb
fcmovu
dec
repnz
add
mov
fistpll
mov
test
arpl
xor
movsb
xchg
push
or
into
push
cmpl
cmp
xor
in
das
aad
aas
ljmp
aad
cs
ret
sbb
inc
nop
in
or
and
rclb
lock
xchg
lock
pop
test
push
jne
fs
insl
cmp
ret
out
xchg
push
push
cmpsl
aam
pop
cs
clc
push
push
cltd
leave
jmp
mov
lahf
pushf
addb
adc
xchg
push
loope
mov
jno
or
or
nop
xor
pop
and
clc
pop
dec
dec
int
lock
loope
sbb
mov
jle
jl
and
pop
and
or
dec
mov
stc
push
cmpsb
cmp
mov
into
clc
stos
adc
movsb
xor
test
jb
arpl
iret
out
int
in
ljmp
inc
in
mov
inc
je
ficoms
inc
hlt
mov
loop
cs
pop
jecxz
jbe
in
rcll
fistpll
pop
gs
outsb
push
xor
test
aam
lods
cmpsb
add
cmpsl
sahf
mov
mov
cmp
jno
jge
or
fistpl
iret
and
mov
sarb
cmp
push
fldt
loopne
xchg
test
addr16
insb
dec
pop
push
ja
mov
xlat
sub
sbb
in
push
add
lock
add
mov
inc
rorb
rcll
cmpl
enter
cmp
mov
int
fbstp
dec
pop
jg
ja
and
or
jmp
clc
hlt
lock
int
mov
icebp
adc
lea
sbb
jl
push
stos
out
fs
mulb
and
cwtl
adc
jae
daa
loop
xchg
jg
mov
xchg
pop
mov
into
sbb
and
cwtl
pop
fisubrs
add
jns
jb
loopne
sub
and
test
mov
mov
movsl
out
xchg
mov
adc
fdiv
cltd
add
test
jo
ljmp
mov
movb
in
mov
out
mov
xchg
repz
adc
in
lret
lret
popa
adc
hlt
mov
mov
cmp
fs
sub
rep
mov
jb
cmpsb
shrb
enter
push
mov
int3
into
or
daa
pop
inc
fidivrl
inc
or
xchg
mov
push
rdpmc
aaa
xchg
rcrb
xchg
sub
mov
xor
pop
jne
jb
mov
hlt
incl
test
inc
fbld
bound
in
dec
jnp
scas
sbb
jp
mov
loopne
jo
imul
mov
cmp
cli
sbb
mov
push
sbb
stos
hlt
mov
int3
add
pop
icebp
adc
jg
in
lret
pop
inc
pusha
decl
pop
jb
sub
cli
cltd
xchg
mov
outsl
imul
mov
mov
mov
sub
and
adcb
nop
fwait
pop
lcall
xor
mov
mov
out
decl
les
mov
or
movsb
xchg
mov
pop
xchg
shl
xchg
inc
lea
and
outsb
pop
mov
out
sbb
jnp
jo
cmp
fcmovbe
insb
fldt
or
or
xor
mov
pop
dec
xchg
and
sbb
insl
addr16
inc
into
xchg
cmc
les
mov
int3
add
jno
pop
sbb
fidivs
sbb
setle
cmovp
push
sti
cwtl
mov
mov
sbb
xchg
repz
sahf
into
push
or
aam
adc
mov
fadds
movsb
adc
jmp
mov
je
aaa
icebp
fimuls
or
sbb
and
fisttpll
mov
loope
push
sbb
repz
ret
inc
mov
sbb
dec
mov
xchg
loope
insb
or
test
xchg
in
inc
fcompl
lods
mov
xchg
xor
stc
mov
test
aas
call
push
mov
fwait
mov
xchg
outsb
jmp
inc
mov
jae
negl
jl
mov
mov
idivb
adc
pop
out
or
xchg
imul
or
movsl
jns
test
loopne
mov
xor
xor
test
int
shrl
into
movsl
out
int
ror
or
cs
dec
sub
fidivrl
lock
jp
pop
shl
imul
cmp
cmp
imul
and
add
xchg
lahf
and
sub
pop
sub
add
add
fucomi
enter
add
sub
jg
sub
adc
sahf
add
mov
daa
mov
mov
xchg
add
inc
cld
add
mov
aas
lahf
inc
pusha
cli
xor
dec
rep
push
xlat
icebp
xor
mov
jmp
pop
push
out
enter
xor
into
cmp
mov
push
push
mov
mov
add
mov
dec
or
push
in
pusha
leave
fsub
and
sbb
add
adcl
out
lret
mov
sbb
es
and
scas
mov
ret
jg
incl
push
in
filds
push
xchg
mov
and
sti
pop
out
imul
and
sbb
addr16
cmpsl
adc
out
notb
push
inc
es
and
arpl
fnstsw
sbb
mov
repz
addb
mov
sub
int3
sub
sub
and
adc
mov
sub
inc
loop
pop
xchg
add
jno
adc
mov
aad
push
mov
push
popa
sbb
aad
fcompl
adc
or
dec
push
addr16
sti
mov
push
push
cli
inc
xchg
sbb
jno
rcll
movsl
lods
fnstenv
jno
inc
push
sbb
dec
aam
cltd
mov
add
adcb
bound
insl
add
push
pop
sbb
inc
push
mov
xchg
pop
out
jnp
xlat
cmc
dec
insb
add
push
adc
cmc
clc
xchg
mov
or
inc
decb
mov
adc
or
out
js
dec
dec
push
enter
arpl
cmp
sbb
dec
lods
pusha
shlb
pop
jbe
sub
push
cmp
shrb
dec
mov
push
xchg
mov
rcrb
jo
inc
ret
pop
pop
cmp
xchg
cmp
dec
popa
aaa
xorb
and
mov
cli
push
repnz
ret
cmc
shl
jbe
mov
inc
inc
rcrl
mov
decl
push
cmpb
ret
xchg
cli
pop
xor
or
js
pop
call
push
mov
shrb
adc
clc
mov
clc
inc
cmp
pop
push
jmp
inc
cmpb
push
icebp
adc
add
dec
jl
data16
hlt
scas
jb
add
popa
and
xchg
iret
in
lea
stos
push
sub
in
add
das
enter
mov
add
insb
add
push
inc
jno
cltd
adc
movsl
in
addr16
inc
jne
or
aad
adc
mov
push
dec
xchg
cmpsl
insb
cld
xor
aam
fs
pop
sar
and
popa
push
dec
mulb
les
xor
cld
pop
iret
mov
xchg
add
clc
bound
stc
and
sbb
mov
or
cmpsb
leave
cmp
sub
sbb
mov
xor
jne
xchg
or
mov
add
or
aad
cli
and
mov
stos
mov
ja
std
lret
sub
rol
mov
lods
cli
fisubs
popa
in
ss
adc
mov
cmp
sarl
scas
mov
test
jle
xor
cli
dec
shrb
fwait
jmp
pop
aaa
lds
adc
sbb
push
jmp
ss
out
stc
push
mov
dec
mov
in
push
xchg
stos
icebp
in
mov
test
daa
clc
pop
cmp
cmp
mov
ret
jl
xchg
jae
pop
or
adc
mov
in
lret
jnp
jg
inc
dec
out
adc
movsb
out
xchg
imul
shlb
xor
jl,pn
stos
and
mov
jb
lcall
jp
aam
dec
shl
xlat
enter
loop
jge
add
adc
data16
icebp
hlt
and
fldl
dec
sub
scas
stc
adc
sbb
push
jnp
sbb
push
orb
enter
jle
lcall
adc
lret
adc
aam
mov
fnsave
call
cwtl
pop
int3
aam
inc
fldt
cmp
shll
push
inc
pop
test
shll
xlat
mov
scas
xor
jb
mov
mov
imul
lock
dec
mov
inc
inc
pop
icebp
jno
mov
cltd
repnz
add
fwait
iret
aaa
jg
sbb
jmp
dec
mov
mov
jb
sbb
into
pop
jle
inc
add
les
pusha
add
mov
fdivl
ja
outsl
xchg
dec
mov
pop
mov
nop
push
test
xorl
pop
push
adc
clc
sahf
or
js
add
mov
mov
ret
dec
adc
dec
xchg
mov
dec
je
movsb
pop
int3
push
sbb
test
popl
cld
nop
inc
les
cmc
jl
pop
lods
sti
or
sub
loope
or
jno
and
cmp
insl
enter
loop
push
lcall
outsb
mov
pop
dec
fcmovnu
aad
mov
scas
ret
in
xor
xchg
pop
arpl
mov
push
rclb
gs
or
iret
adc
push
insl
fstl
adc
xchg
jle
test
jae
std
popf
push
std
loopne
sub
sahf
sbb
daa
mov
stc
mov
cmp
pop
loope
fldt
in
ja
xchg
adc
je
add
jmp
repz
andb
int3
and
dec
jmp
insb
mov
inc
hlt
xchg
mov
mov
inc
xchg
mov
mov
fadds
loopne
add
in
int3
add
cli
pop
add
add
xor
insl
xchg
clts
jae
insl
in
mov
push
movsl
imul
icebp
cmpsl
cmp
jecxz
aas
inc
mov
mov
jb
push
jns
jge
xchg
dec
or
mov
adc
pusha
sbb
sub
aam
adcl
and
daa
hlt
adc
jbe
jne
test
and
xor
and
mov
jl
test
data16
cltd
push
jb
cmp
aam
sub
cmp
xchg
jne
lock
cmpsl
pop
mov
les
push
jg
mov
les
int3
xchg
ss
sub
aaa
push
loope
outsb
repnz
call
ja
xchg
pop
jo
pop
dec
fcmovbe
push
out
sarb
js
dec
data16
in
mov
test
sub
movsl
cs
ss
test
xorl
fwait
test
andl
loope
mov
jno
push
xor
add
push
add
dec
or
ret
pop
js
hlt
mov
sarl
sub
mov
stos
aad
movsl
xor
lock
out
mov
scas
jns
fisubrl
mov
lods
add
fstl
dec
aaa
inc
std
push
fildll
js
sub
push
cli
imul
lods
test
sarl
int
pop
popf
jae
adc
inc
mov
ja
sahf
sub
xlat
mov
sub
shl
or
cmpsl
shl
cltd
movsl
addr16
and
add
xchg
cmpsb
orb
insl
or
scas
iret
cmp
sub
or
jp
subl
test
adc
inc
testl
mov
lcall
rorb
ret
pop
cwtl
mov
cmp
loop
pop
xchg
arpl
mov
lods
and
aad
xlat
hlt
popf
in
orb
fadd
ds
ds
push
enter
inc
adc
jmp
fstpl
dec
ret
mov
xor
adc
lahf
adc
push
imul
mov
cmpsb
jge
shlb
adc
mov
dec
jle
adc
pop
test
dec
fcmove
jmp
insb
popa
mov
ss
mov
jmp
mov
xchg
sti
imul
jae
nop
loope
stos
inc
insl
or
and
out
mov
outsb
scas
pop
sub
loope
addr16
rcl
jmp
cs
jge
ljmp
fwait
pop
inc
and
sub
scas
scas
fwait
xchg
fdivl
movsb
push
in
in
sbb
add
sti
and
iret
sbb
and
stos
or
ret
cmp
sub
xchg
enter
out
cwtl
popa
imul
stos
or
xchg
loop
mov
shll
and
fdivp
sbbb
fdivr
ret
icebp
shll
lods
por
insl
xchg
cmc
jge
loope
je
gs
and
iret
out
arpl
dec
lds
insl
adc
xor
xor
repz
dec
xchg
ss
jno
mov
in
mov
cltd
test
shll
iret
xchg
loope
jo
imul
int3
adc
in
dec
mov
fcmovu
test
iret
mov
test
and
push
jno
sahf
outsl
jmp
mov
ret
cmp
add
das
pop
loop
mov
test
push
xor
or
subl
negl
push
cmp
addb
stos
mov
mov
push
or
popa
ja
jg
hlt
mov
push
dec
std
int3
add
fcoms
xchg
iret
inc
xchg
pop
popf
insl
lahf
or
or
fs
cmpsl
fdivs
mov
cmp
mov
sbb
cmpsl
in
in
pop
adc
in
pop
mov
rol
push
loope
nop
jp
adc
cmc
sti
pop
xchg
or
insb
pop
inc
sub
jl
fidivl
addb
or
xor
andl
xor
loop
rcr
ret
jnp
fmul
xchg
mov
ds
movsl
xchg
rcrl
cmpsl
sub
loope
mov
cmc
xchg
sub
fildll
insb
cli
xchg
xlat
mov
sub
inc
push
lods
cli
call
add
faddl
sbb
mov
aaa
movsb
rcll
insl
inc
jbe
sbb
lret
movsb
outsl
aaa
pop
fistpll
dec
pop
ja
loopne
shr
or
cmpsl
ss
inc
cmp
arpl
jae
dec
xor
mov
scas
rep
xor
jmp
xchg
push
pop
into
movsb
sbb
adc
xchg
and
push
push
inc
push
cmp
mov
jns
push
push
daa
push
adc
fnstcw
std
arpl
icebp
adc
dec
sub
cmp
add
dec
xchg
out
xor
ljmp
jmp
and
xchg
loopne
mov
pop
fld
cmp
sti
jmp
fisubrl
jno
dec
cmp
and
rcll
or
in
scas
cld
loopne
mov
mov
bound
sets
and
push
je
sbb
cwtl
xchg
sbb
loope
test
das
xchg
push
pop
pop
in
inc
mov
in
push
sbb
sub
dec
sub
loope
test
and
lock
push
cmp
call
sbb
test
and
and
mov
xor
stos
pop
lock
stc
cwtl
imul
mov
inc
mov
inc
out
in
and
xor
aas
sbb
push
mov
inc
mov
pusha
and
or
enter
je
fimuls
adc
cmp
cs
orl
sub
push
int3
sahf
dec
inc
xor
and
xor
sub
insl
cmpsb
shll
into
shrb
xchg
xor
insl
inc
xor
fwait
jecxz
pushf
scas
cmp
pop
movsl
mov
jne
xchg
idivb
data16
jns
pop
pop
leave
cmp
enter
int3
cltd
cmpsb
loope
xrelease
cmp
ret
outsl
inc
cmpsl
mov
lahf
pop
mov
js
aad
int3
dec
cmp
cmp
sub
lea
stos
push
add
pop
enter
cmp
and
sbb
xlat
mov
adcb
shlb
xor
lret
lods
inc
sbb
xor
xchg
gs
faddl
add
and
decb
mov
cmc
and
repnz
cmp
sbb
loope
jo
xchg
loopne
dec
jnp
bound
or
xchg
xchg
push
jno
jo
fldl
mov
arpl
jge
cmp
inc
clc
and
inc
push
rorl
adc
adc
cwtl
leave
mov
lcall
or
jnp
stos
jmp
xchg
cld
mov
push
cmp
cli
add
pop
sti
js
jns
ret
pop
adc
pop
push
jle
cmp
jns
loopne
pop
sub
insb
icebp
arpl
mov
in
rcll
imul
sbb
test
adc
mov
mov
adc
mov
mov
mov
fidivrl
push
xor
iret
sbb
imul
jl
jae
pop
scas
loope
shll
inc
roll
in
adc
and
int
dec
xchg
je
imul
cmp
in
cmp
jmp
daa
js
pop
inc
stos
mov
lcall
dec
pop
jne
xchg
sbb
mov
mov
jne
fimuls
repnz
xor
outsl
xor
sbb
lods
push
cmpsl
mov
cwtl
mov
pop
push
mov
sub
sbb
mov
outsb
cli
pop
jbe
int3
and
mull
mov
dec
movsl
test
dec
out
addr16
out
push
stc
in
jecxz
movsl
ljmp
jb
mov
cltd
mulb
scas
and
stos
std
ret
fs
adc
pusha
sahf
pop
adc
adc
xlat
movsl
push
push
js
movsb
cld
xlat
sub
sbb
push
in
lret
insl
inc
loopne
mov
push
adc
call
jne
mov
aam
xchg
adc
aas
xor
lds
lea
mov
ret
sbb
push
push
daa
mov
lahf
push
mov
xchg
daa
fstps
mul
push
mov
lock
adc
out
int
sti
mov
xor
scas
inc
stos
xchg
sbb
rcl
jmp
ja
pop
lods
xchg
cltd
jo
ret
hlt
mov
js
sbb
cmp
mov
sarb
rcr
ljmp
data16
stos
push
mov
dec
push
test
fs
sti
mov
sub
movsb
in
sbb
push
and
jge
fucomi
inc
or
mov
add
cmp
test
inc
orb
pop
mov
imul
lret
enter
ja
jp
into
in
pop
daa
fs
add
push
in
adc
frstpm(287
arpl
xor
push
sbbl
inc
mov
pusha
or
inc
test
add
sbb
add
cli
mov
adc
jb
cmpsl
outsl
sub
scas
and
pop
xchg
fwait
shl
lock
cli
jne
stc
and
pop
mov
inc
push
add
aas
dec
repz
clc
fsubrl
cmp
cli
cltd
rclb
mov
iret
cmp
ret
cltd
jno
mov
pop
push
add
jae
cmp
test
sbb
adc
repnz
mov
out
idiv
or
sub
mov
rcll
push
das
xor
inc
inc
adc
in
gs
sub
jle
ljmp
jp
gs
outsl
sbb
orb
fwait
sub
in
sbb
stos
pop
adc
xcrypt-ctr
cmpsl
pop
push
mov
lret
mov
lea
leave
dec
pushf
add
bnd
movsl
mov
lret
out
jecxz
push
ret
add
cmp
call
pusha
lds
jecxz
in
dec
jo
enter
clc
dec
mov
shrl
mov
clc
js
push
and
popa
movb
lahf
movsb
and
bound
inc
clc
and
pop
inc
fmull
hlt
in
and
jge
push
fiaddl
scas
call
mov
or
mov
popl
ja
cltd
adc
test
scas
cmp
fistl
out
mov
dec
test
nop
adc
cld
sub
jmp
mov
mov
stos
pop
push
inc
mov
movsb
dec
pushf
test
dec
cmp
add
cmp
push
adcl
scas
fwait
mov
mov
arpl
je
cld
fnstcw
adc
cs
pop
cwtl
pop
cmp
push
lock
out
daa
int
pop
jmp
repz
lods
and
xchg
stos
bound
xor
loope
sbb
es
sub
inc
pop
mov
movsb
js
ret
lods
cmp
test
mov
jns
jb
icebp
pop
dec
rorb
aas
jns
shl
in
push
mov
cmp
mov
sub
push
fistpll
repz
push
out
xrelease
jge
cmpsl
andb
outsl
mov
test
lea
cmp
sub
cltd
xlat
in
push
lret
sub
les
xor
clc
fwait
xchg
dec
out
cs
jecxz
lds
xchg
movsl
xchg
push
adc
pop
mov
pop
sbbl
test
movb
push
pop
clc
leave
xor
inc
sbb
jp
test
imul
enter
adc
cwtl
and
mov
jno
dec
aas
out
insb
es
hlt
mov
and
push
test
mov
add
xchg
cmpsb
scas
cmp
cmpsb
dec
push
test
mov
sahf
fiaddl
cld
repz
push
adc
out
fldt
loop
push
cs
sub
rorl
pop
xchg
lret
mov
inc
jmp
push
andb
mov
and
sbb
out
dec
ret
lahf
or
xor
cmp
push
xchg
test
test
inc
rcr
jnp
or
je
push
dec
jo
test
in
sub
iret
inc
das
mov
cmp
repnz
xchg
add
lds
jno
add
dec
sbb
imul
fcoms
je
and
fnsave
int
orb
xlat
xchg
mov
mov
call
and
hlt
inc
push
pop
dec
jecxz
sub
pop
add
dec
push
aam
push
sbb
and
or
daa
rclb
xchg
mov
xchg
mov
lods
pop
jecxz
addr16
push
cmc
sbb
lret
lds
dec
add
leave
mov
das
and
sub
filds
add
mov
push
out
mov
jmp
push
lds
mov
cs
inc
xchg
stos
in
mov
mov
mov
call
outsl
aaa
xchg
ss
xchg
sahf
in
insl
adc
jnp
addr16
inc
roll
mov
sub
frstor
cmp
inc
lds
fistpl
xlat
dec
ss
xor
pop
and
fwait
sbb
int
test
decl
loopne
js
push
ficomps
pop
addr16
push
mov
in
pop
cli
xor
xchg
imul
mov
sbb
mov
pop
movsl
mov
pushl
mov
test
xor
cmc
iret
es
data16
xchg
divl
adc
into
pop
stos
jp
sti
xchg
mov
and
sbbb
adc
rcrl
popf
loope
aad
popa
pushf
out
xor
xorb
cmp
in
orb
cmp
xlat
dec
testb
fstl
bound
dec
popf
inc
aad
pop
insb
clc
scas
int3
data16
jo
adc
mov
fsubrl
dec
movsl
adc
fdivs
dec
mov
push
adc
orl
jno
lret
push
daa
dec
rol
faddl
adc
sub
ja
jnp
mov
pop
orl
lcall
mov
fidivrl
lret
dec
stos
or
popf
sbb
ss
xchg
push
cs
or
xorl
pushf
outsb
pop
data16
cmp
add
repnz
out
xchg
inc
xor
in
sbb
or
iret
xchg
into
mov
inc
lods
jg
pop
xchg
sarl
nop
sub
rcr
sarl
add
hlt
out
mov
ret
cmc
cld
cs
dec
fidivl
shrb
bound
lods
loop
in
movsl
hlt
test
repnz
lret
lret
mov
xchg
inc
test
scas
and
mov
push
jo
cwtl
idivl
pushf
sbb
pop
stc
mov
push
shll
jae
push
movb
sahf
dec
or
leave
loopne
sbb
adc
mov
fmul
mov
movsl
push
stc
cmp
jo
repnz
sbb
gs
movsb
and
daa
gs
push
mov
pop
inc
aam
pop
adc
ljmp
call
pop
pop
mov
ret
cli
and
inc
in
inc
cmp
clc
jns
sbb
sti
adcl
mov
popf
jo
mov
sub
mov
dec
xor
xor
pusha
fucomp
and
flds
mov
mov
aas
jae
rcl
pop
outsl
adc
les
dec
mov
inc
frstor
cmp
cltd
loope
stc
out
xor
mov
insl
sub
mov
fisubrl
out
adcl
pop
jno
clc
bound
call
adc
mov
mov
mov
movsl
adc
mov
mov
fldt
stc
cwtl
jnp
dec
sub
inc
inc
lcall
and
sti
hlt
out
mov
dec
mov
adc
outsb
and
pop
cmovno
jae
roll
arpl
jo,pt
ret
pop
pop
enter
ficomps
adc
je
pushf
sub
arpl
int3
loope
and
aam
call
mov
adc
sbb
shrl
pushf
jno
popa
xchg
sub
jae
data16
shll
push
dec
and
cmp
pop
test
mov
hlt
mov
and
jp
jge
insb
cmpsl
mov
outsl
lods
jge
lahf
insl
mov
bound
or
push
cmp
out
mov
mov
lret
mov
inc
xlat
fldcw
loopne
out
mov
leave
out
mov
push
sbb
cmp
sub
sarb
rclb
push
loope
cmp
mov
mov
jns
pop
or
imul
bound
xor
jmp
sbb
test
jne
or
pop
add
lods
jge
jg
sbb
push
fs
movsl
mov
mov
dec
inc
lods
add
lret
icebp
jg
popa
cwtl
mov
push
or
stc
in
sbb
enter
pop
or
ret
test
or
call
push
dec
lock
sub
lods
test
clc
or
test
push
movl
lock
xchg
fldcw
dec
lock
and
jp
aam
nop
add
mov
and
and
inc
push
pop
dec
fsubr
adc
or
mov
fidivs
aas
gs
add
out
ret
out
xchg
push
mov
pop
ret
outsl
lock
outsb
jno
cmc
int3
mov
mov
gs
loope
js,pn
cmc
pop
adc
xchg
stos
mov
arpl
popf
cmpsb
test
mov
in
test
mov
cltd
scas
cmp
jbe
add
xor
addb
xchg
fwait
into
test
adc
mov
hlt
sub
mov
sbb
cmpsb
xor
addb
repnz
push
xor
scas
lahf
les
push
cwtl
das
pop
xor
inc
cltd
xchg
icebp
cli
fidivl
push
fwait
aas
fnsetpm(287
adc
inc
or
pop
or
sbb
xlat
cmp
lods
fnstsw
shll
andb
or
pop
pop
mov
pop
and
xchg
adc
xor
add
sti
xor
sub
xor
or
ret
arpl
inc
test
fwait
mov
fwait
js
lods
jge
mov
nop
sbbb
push
aaa
mov
test
into
mov
push
dec
mov
in
jmp
add
and
bound
insb
mov
icebp
push
lcall
ja
loopne
fcoms
and
adc
push
js
add
mov
jecxz
jge
cltd
dec
jg
std
sti
mov
adc
push
lods
push
aaa
outsb
sub
dec
scas
sti
sbb
ret
out
mov
dec
les
arpl
mov
lods
xchg
pop
fldenv
subl
push
fsubrs
cwtl
add
insl
inc
mov
pop
fiaddl
xchg
cmp
ffree
pop
scas
pop
push
bound
push
and
mov
cli
adc
dec
dec
loopne
inc
movsb
jno
lock
dec
mov
push
scas
mov
rcrl
int
filds
out
repz
xor
in
or
mov
fistpll
int3
test
out
mov
dec
xchg
sub
mov
lds
idivb
xorl
nop
ja
popa
call
aam
fs
dec
fsts
mov
jp
jle
sarb
test
ficomps
aaa
cwtl
jno
popa
filds
sub
adc
add
push
hlt
xlat
cmpsb
add
cs
mov
jg
xlat
xchg
jbe
inc
mov
xchg
out
mov
lods
gs
xor
and
adc
adc
or
push
adc
cli
inc
pop
addr16
adc
xlat
jge
fldenv
in
lds
gs
cmpsl
push
sahf
frstor
mov
or
call
rol
nop
mov
jae
movsb
xchg
mov
or
pop
and
dec
mov
push
jae
pushf
mov
pop
jb
adc
pushf
push
xor
xchg
mov
clc
jns
mov
xchg
sbb
xchg
sbb
mov
add
rcrl
fists
xor
lret
cmp
push
add
pop
into
or
sbb
xor
cs
inc
sahf
fbstp
cmc
int
push
std
sarb
std
ds
fdivrl
sbb
ljmp
out
mov
and
add
ret
push
pop
rclb
push
pop
in
sub
adc
push
aad
fs
xor
cmp
add
insl
lds
sbb
mov
xchg
and
fisttps
cmp
push
xchg
inc
aad
imul
pusha
shll
addr16
ljmp
rcrb
movb
mov
mov
jb
push
mov
ret
leave
xchg
rclb
les
je
jmp
sub
pop
scas
gs
cmp
jns
mov
push
cmpsl
lds
mov
xor
lret
jns
icebp
inc
gs
jb
sahf
jae
in
lahf
fdivs
mov
movsl
push
jp
xor
lds
lds
insb
cmp
sahf
rcl
sub
jns
or
push
in
mov
rorl
jo
daa
std
sub
mov
outsb
sbb
int
imul
mov
scas
xchg
pop
xchg
test
mov
pop
enter
jb
mov
scas
out
out
push
lret
xor
ja
sbb
leave
lret
sub
cmpb
ds
pop
mov
pop
jmp
mov
lret
xor
jecxz
sti
pop
inc
in
ret
lahf
insl
loop
cmpsb
daa
idiv
test
push
xor
xlat
jne
xchg
aad
xlat
aam
shrl
mov
rorb
out
push
jge
xchg
pop
divl
push
iret
jnp
or
pop
test
hlt
jno
addr16
fcoml
pop
jmp
arpl
adc
int
jmp
out
out
sbb
mov
sti
faddl
or
jbe
mov
addb
push
mov
ja
lods
insl
mov
mov
cld
cmp
mov
fisubs
xlat
negl
mov
mov
mov
sub
or
repnz
mov
sbb
and
sub
add
std
mov
mov
mov
stc
pusha
out
aad
add
clc
imul
mov
int
add
jae
adc
mov
inc
mov
ljmp
repz
sub
adc
movsb
push
fcom
mov
pop
sbb
shlb
sbb
sub
in
jl
jle
xchg
dec
jae
cmp
jo
pop
imul
scas
sub
andl
rolb
clc
mov
lods
sbb
lret
sar
aaa
cli
es
xchg
pop
loopne
adc
sbb
add
jg
fldcw
inc
sarb
lret
js
mov
cmp
adc
inc
addr16
cmc
pop
jae
push
aad
jnp
xor
jl
std
ret
dec
js
xor
pop
jbe
jmp
stc
push
out
imul
fcmovbe
sub
xchg
or
xor
jle
add
rol
mov
cmpsb
add
sbb
dec
mov
mov
data16
addb
adc
enter
and
or
mov
fldl
in
sbb
lahf
aad
push
or
cmp
frstor
cmpsb
cli
adc
test
pop
in
dec
sub
sub
or
jo
dec
sarl
xchg
pop
xchg
xchg
mov
mov
jg
in
es
lret
cmp
cld
mov
ds
pop
repnz
daa
push
adc
test
ret
jbe
dec
pusha
mov
dec
push
fidivl
lods
push
call
gs
mov
dec
push
mov
mov
cmp
pop
and
scas
sarl
mov
mov
lcall
ja
mov
lock
arpl
mov
js
adc
inc
int3
jnp
xchg
pushl
movsl
pop
mov
lock
imul
es
mov
aam
nop
bound
push
arpl
xor
dec
cmp
les
ret
jnp
enter
mov
mov
addr16
lds
adc
add
xlat
outsl
xchg
and
fstl
ds
jmp
push
and
sti
sub
jo
sub
or
out
xor
cmp
fsts
adc
pushf
or
movsb
jns
icebp
stos
jnp
int3
ss
push
cs
mov
int3
jge
cs
cmp
or
out
stos
push
push
and
outsb
shlb
outsl
cltd
pop
inc
mov
inc
nop
fsts
insl
or
arpl
cwtl
mov
mov
inc
movsb
xor
dec
sub
mov
pextrw
gs
ss
mov
mov
es
push
sbb
push
cmpsl
sub
jge
push
jns
sbb
icebp
and
sbb
sub
push
sub
fsts
call
shrl
into
ret
hlt
insl
je
outsl
loopew
mov
sbb
fdiv
out
inc
and
push
inc
push
sbb
xlat
shll
lgs
jbe
mov
push
or
or
sahf
mov
mov
add
jp
fcomps
add
cld
dec
mov
ret
mov
mov
add
cmp
scas
out
movsl
pop
jp
mov
mov
stos
xchg
cs
adc
mov
add
mov
jl
lds
dec
ret
loopne
dec
add
jae
inc
test
or
dec
out
test
mov
push
adc
xor
lea
push
cmp
mov
jle,pn
fwait
scas
scas
out
sub
ss
dec
in
std
mov
cmp
ss
pop
jo
mov
sub
cs
popa
clc
mov
out
mov
jmp
in
in
shrl
in
clc
idivb
or
xor
sar
lock
sub
xchg
mov
lret
dec
popf
aaa
movsl
stc
pop
loopne
sub
pushf
mov
repz
pop
jne
pusha
dec
or
lret
inc
sub
pop
or
mov
shr
jp
sbb
inc
cmp
out
fsubrs
jecxz
pop
pop
out
icebp
pop
push
bound
pop
sub
icebp
adc
movsl
int3
mov
js
shll
push
cmp
in
jne
sub
dec
pusha
out
cli
xchg
sub
out
sti
mov
push
pushf
mov
cmp
push
jns
jbe
mov
mov
imul
sbb
cli
sub
into
sbb
lahf
mov
add
xchg
leave
mov
xchg
call
aad
lods
cmp
fcompl
or
sbb
sbb
xor
mov
mov
test
jg
adc
fwait
push
lret
imul
push
xchg
xchg
data16
inc
push
aad
mov
xchg
popa
ret
mov
sbb
mov
into
out
mov
test
lcall
mov
fsubl
mov
fs
mov
jl
inc
int
push
loope
pop
repz
in
insb
stos
movsb
cmc
loopne
fidivrs
mov
push
aad
add
xor
push
dec
jb
lret
nop
xorb
pushf
mov
fdiv
pushf
cwtl
xlat
hlt
iret
cmp
jle
push
mov
movsb
lods
sbb
mov
push
jmp
lock
mov
jb
add
xchg
dec
sub
cmp
and
fbstp
fs
je
leave
icebp
loope
and
shlb
inc
sbb
pop
cmp
and
cld
pop
fsubrl
imul
jecxz
mov
mov
pop
dec
bound
push
cli
mov
pushf
into
arpl
scas
leave
cmp
push
cmpsb
lods
jae
pop
pop
dec
pop
mov
aad
fsubrl
ret
lds
jp
cmp
dec
mov
int3
or
pop
or
loop
in
fidivrs
mov
into
dec
lea
fnstenv
or
adc
cmpsb
adcb
sti
stos
cmpsb
mov
sbb
sbb
hlt
lock
lret
mov
jb
inc
jp
mov
jle
add
stos
stos
pop
pop
mov
ret
dec
hlt
xchg
fstps
xlat
out
fdivrl
into
adcb
ror
push
decb
jl
xchg
adc
adc
lcall
dec
push
out
or
gs
roll
mov
mov
lcall
add
xlat
sub
add
rorb
aam
test
adc
in
dec
shr
and
xchg
test
xor
adc
mov
dec
insl
lods
mov
mov
or
mov
inc
ja
arpl
adc
jno
push
repz
shlb
xlat
inc
scas
or
sbb
cmp
movsl
adc
xchg
jb
inc
add
clc
jmp
sarb
inc
xchg
call
in
jp
jmp
xor
cmp
scas
out
cmp
mov
bnd
pushf
sbb
jne
call
std
loop
adc
pop
xor
in
test
and
cmpsb
ja
incl
xorl
add
dec
xchg
push
mov
lock
gs
jmp
xor
jl
les
or
mov
test
rcrb
sti
sbb
les
and
push
mov
xchg
shll
shlb
sahf
mov
xchg
mov
inc
xorl
push
andl
shll
jg
xor
std
sub
popa
pop
sbb
mov
outsb
pop
fidivl
ss
push
cwtl
in
cmp
repnz
fsubrl
lahf
inc
pusha
shll
mov
xor
fisubs
sbb
out
in
inc
jne
mov
sahf
lods
jae
test
pop
inc
lods
dec
dec
mov
int
push
stc
push
aaa
xchg
mov
sub
lret
push
scas
arpl
rcrl
dec
ret
in
leave
mov
cmp
std
jecxz
fwait
out
outsb
sub
cmp
or
ss
mov
dec
sub
add
mov
insl
xor
lret
cmp
adc
adc
jae
mov
rorl
sbb
stos
shlb
in
xchg
jle
mov
sti
js
dec
test
movsl
jo
jns
lret
pop
jae
es
lock
pop
and
divl
sbb
cmpsl
add
jp
xor
jl
imull
in
cwtl
add
push
dec
dec
icebp
pop
out
jmp
fldl
mov
out
add
xchg
sbbb
inc
cmp
int3
pop
push
nop
call
lock
lds
dec
or
bound
daa
jae
or
cs
jo
dec
lcall
dec
pop
add
fdivr
xor
sbb
scas
nop
xchg
out
pop
adc
or
inc
adc
pop
and
shlb
jle
aaa
repnz
or
add
popa
jg
mov
or
dec
xchg
pop
mov
lcall
test
xlat
or
movsl
fwait
add
lret
push
jno
mov
ss
inc
add
dec
add
add
jne
push
roll
sub
adc
cmp
cmp
adc
ljmp
ss
cli
add
and
gs
mov
iret
xchg
pop
pop
ret
scas
out
or
and
dec
xchg
jb
test
mov
push
mov
movsb
arpl
sbb
pop
popf
sbb
cwtl
add
add
xchg
mov
jge
notl
loopne
jns
add
and
adc
out
dec
sbb
pop
pushf
in
jp,pt
xor
fsubrs
pop
or
pop
push
ret
inc
fs
xor
into
in
mov
fbstp
or
call
pop
int
in
adc
ficompl
in
and
lcall
sub
pop
sub
dec
or
sub
lahf
ds
test
fldl
in
insl
push
call
loope
popa
dec
scas
cmp
pop
pop
xchg
and
push
inc
mov
mulb
push
movsl
aaa
fucomip
push
sbb
xchg
mov
mov
xor
jmp
cwtl
sub
dec
ljmp
jne
fmul
sub
push
jb
xchg
push
and
sub
mov
sbb
cmp
fwait
pop
mov
push
fistpl
sub
hlt
cltd
lret
test
xor
cli
in
scas
xor
inc
inc
mov
jb
inc
aas
insl
sbb
jp
pop
and
aaa
mov
movsb
sub
fnstenv
cmp
cmp
or
cmp
mov
fisttpll
pop
pop
mov
fwait
jg
pop
jg
xor
sbb
incb
inc
sbb
cltd
jns
cmp
mov
pop
mov
mov
jg
ja
xor
loop
and
mov
cltd
mov
xchg
gs
push
out
pop
jmp
scas
sbb
fs
mov
inc
jns
mov
in
jnp
or
mov
mov
xchg
push
aas
cld
or
fmuls
inc
stos
rclb
xor
loopne
mov
xor
push
cmc
adc
mov
inc
push
inc
arpl
shlb
or
scas
mov
fbstp
inc
es
xor
xchg
gs
ret
std
stos
ret
xchg
js
test
mov
add
dec
shl
pushf
push
aas
mov
es
lea
faddl
push
push
imul
sti
sbb
mov
popf
add
pushf
insl
adc
jno
outsb
arpl
scas
sbb
jg
mov
js
mov
mov
pop
rol
jp
mov
mov
or
adc
hlt
movsl
push
adc
insl
xchg
lret
lods
cli
inc
xchg
cmp
pop
call
and
scas
icebp
inc
add
fistl
and
test
mov
movsb
cli
mov
shrb
and
rclb
or
fsts
xchg
add
dec
test
or
lcall
sbb
jle
aam
iret
aam
push
xor
and
in
fs
push
into
rolb
xor
sub
push
push
inc
pop
pop
rorb
adcl
imul
fucomp
imul
push
xchg
mov
fchs
sbb
pop
sbb
outsb
movb
ss
hlt
add
push
dec
jle
rcrl
not
outsl
or
mov
cmc
jo
mov
lcall
cltd
sub
sbbl
popf
pop
xlat
add
push
decb
inc
add
adc
adcl
sbb
out
lret
repz
lods
in
std
leave
sbb
notl
mov
pop
aaa
cs
mov
sahf
inc
mov
nop
xlat
jge
test
rorl
loope
add
ljmp
mov
xor
lea
and
scas
decl
pop
push
mov
jb
stos
stos
lahf
fs
sub
outsb
xor
or
adc
mov
xchg
test
push
lds
lods
dec
dec
and
push
or
es
xchg
mov
mov
mov
and
push
into
inc
aaa
fs
fstpt
rcll
mov
inc
or
inc
fadds
xchg
loop
jns
adc
stc
shl
add
les
lea
sarl
jns
ficoml
sub
sub
arpl
push
inc
hlt
push
sub
stos
fs
jno
pop
insl
mov
popa
aaa
rcrl
inc
xor
shll
adc
fisubs
mov
sarl
pop
sbb
leave
cli
es
rcrb
inc
mov
mov
xor
xor
jle
fisubl
iret
sub
adc
cmp
xor
test
pop
movsb
addr16
pop
addr16
inc
nop
cli
out
pop
in
xchg
xor
push
sbb
pop
stos
cmovle
mov
cmp
out
aas
mov
repz
arpl
stc
and
inc
nop
popa
add
int
adc
fdivs
sbb
sbb
jo
xor
ret
sbb
cmp
cmpsl
ja
cmp
mov
popf
imul
out
loope
add
push
sub
sbb
js
mov
mov
fwait
mov
movsl
lret
sbb
mov
add
outsl
cmpl
mov
enter
hlt
lret
fcoms
int3
data16
push
inc
sbb
dec
xchg
cmp
inc
add
push
xchg
xchg
and
out
lock
test
jbe
pop
ljmp
jo
sub
fwait
imul
jbe
push
inc
sub
mov
lahf
dec
rorb
mov
in
xor
andl
loope
lcall
mov
mov
mov
xor
fisttpl
sbb
push
out
scas
cmpsb
call
loop
flds
aam
pop
push
test
rcll
in
movsl
cmpsb
mov
jmp
jbe
dec
int
loopne
int3
pop
cmp
xchg
mov
lcall
add
jns
or
aas
fisttps
inc
in
or
lods
or
push
sbb
xor
sbb
pop
fidivrs
cmp
jnp
mov
pop
addr16
mov
pop
push
add
mov
lret
test
shll
in
mov
or
mov
xor
xor
mov
inc
mov
iret
out
aas
push
push
jg
xor
fs
jbe
push
mov
inc
mov
stos
test
pop
mov
in
mov
pop
bound
dec
or
cmpl
in
lret
add
imul
jg
unpcklps
dec
xchg
jbe
outsb
fwait
or
popf
ja
sub
mov
adcb
iret
cmp
inc
jle
lret
mov
xchg
cmp
outsb
lret
jp
mov
loop
mov
rcrl
sbb
lods
pop
cmp
sbbb
mov
pop
add
ljmp
sub
pop
mov
mov
cmpps
add
cli
push
pop
insb
fwait
or
scas
arpl
and
push
in
cmpl
fidivrs
lock
outsb
pop
sti
push
fnstenv
test
sub
repnz
mulb
or
jnp
xchg
icebp
jp
fisubl
std
fwait
scas
sub
out
xor
jne
aad
xchg
push
jp
mov
push
inc
mov
int3
jmp
test
sbb
mov
lret
push
inc
mov
push
cltd
add
test
cmp
sbb
sub
lret
jl
inc
mov
adc
or
roll
dec
iret
push
push
ret
push
js
add
mov
mov
lret
int3
test
jne
dec
shl
in
dec
sbb
lock
das
xor
inc
push
sbb
insb
inc
mov
xchg
test
lods
roll
imul
arpl
nop
pusha
mov
popa
cmp
jp
mov
jbe
cli
test
ret
fldl
xchg
sbb
scas
or
aaa
push
pusha
fstpl
mov
pop
in
lods
add
pop
ljmp
sub
push
xor
pop
dec
cli
adc
scas
out
mov
jle
xlat
lods
leave
dec
fsubrl
lods
nop
repnz
adc
sahf
sub
flds
cmpsb
pop
inc
xchg
in
or
movsb
pusha
cmp
xorl
sub
or
imul
out
or
popf
fcompl
in
mov
mov
jmp
mov
sub
ret
or
push
mov
fnstsw
xchg
fidivrl
xchg
or
js
cmpb
aad
sub
movsb
jmp
pop
cld
push
pop
es
jg
idiv
inc
push
add
in
movsl
or
xchg
add
movsl
dec
jle
jp
inc
fistps
dec
push
mov
ret
mov
loope
dec
ss
lret
rcr
and
out
cmp
mov
xchg
mov
ds
pusha
arpl
mov
daa
cmc
fldt
mov
dec
pop
lea
or
aam
pop
cmp
push
dec
push
rcl
call
push
ret
popa
inc
mov
inc
hlt
sbb
jmp
lea
cmp
sbb
cli
jbe
in
insl
sbb
jns
pop
and
sbb
jno
pop
in
imul
mov
nop
das
test
cmp
adc
jne
test
cmpsb
pop
inc
gs
inc
imul
jg
jg
jb
inc
insl
mov
jb
and
xchg
push
or
popf
icebp
xchg
pop
loopne
fistps
xor
mov
xor
mov
lret
cmpl
inc
sub
jmp
nop
mov
mov
test
cmpsl
lods
adc
ret
les
mov
sbb
pop
into
out
lcall
or
jb
pushf
shlb
or
mov
es
sar
lret
mov
jno
push
test
xchg
sub
xor
cmpl
nop
cmpsb
jmp
int
shll
jl
mov
adc
das
cltd
sub
repnz
pop
xor
xor
jp
push
jno
cmc
push
mov
and
cmp
jno
mov
dec
orl
lods
testl
or
cmpsb
cmp
jne
test
enter
jmp
call
jmp
clc
add
cmpsl
fadds
xchg
jnp
sub
nop
push
push
inc
sti
scas
mov
dec
ret
jae
mov
aam
xor
adc
repnz
inc
dec
ljmp
clc
dec
cmp
stos
xchg
test
in
mov
xchg
loopne
loope
and
int3
inc
add
ss
push
pop
and
cmpb
jmp
inc
pop
daa
xchg
adc
lods
dec
insb
je
mov
faddl
cmp
fwait
lret
je
inc
aaa
and
inc
adc
in
jmp
and
int
int
jb
shlb
sbb
xor
lret
iret
in
inc
or
mov
adc
and
fdivrs
popa
lods
mov
pop
xor
jo
inc
mov
aas
sbb
ja
or
fwait
dec
or
aas
pop
xor
pop
cmp
push
push
iret
sbbb
mov
fwait
imul
push
dec
xor
pop
push
xchg
or
cmovns
sbbl
adc
fwait
into
es
xchg
inc
das
outsb
xchg
xor
je
into
jle
adc
add
outsl
adc
jae
repz
dec
ds
repnz
xor
daa
or
cwtl
imul
test
mov
icebp
adc
mov
add
mov
stos
movsl
movsl
sbbl
popa
adc
xchg
mov
sbb
or
rclb
pop
mov
testl
fneni(8087
inc
pop
mov
mov
push
ljmp
lds
mov
inc
cmp
test
outsb
mov
push
fldcw
xchg
andl
mov
inc
and
sub
movsb
pop
sbbb
lods
jbe
push
jp
xchg
dec
push
out
loopne
push
jmp
xchg
les
fisubrs
pushf
and
cmpsl
adcl
xlat
popa
jne
xchg
mov
push
inc
push
pop
pushf
rcll
lock
es
mov
popa
pop
and
insl
cltd
inc
push
lods
imul
cmpsl
jns
lds
adc
int
push
popa
in
into
cld
mov
call
pop
push
mov
mov
out
add
jnp
call
dec
stos
dec
outsl
and
into
mov
or
xchg
lret
xor
mov
xorl
sti
imul
jne
jl
cmp
push
inc
pushf
xchg
movl
in
repnz
ds
out
xchg
into
cld
mov
cmc
xor
mov
jle
ds
or
sbb
stos
lea
movsb
in
mov
cmpsl
daa
outsl
push
sarl
pusha
es
mov
ror
lahf
add
ret
sub
lods
mov
stos
ds
ljmp
mov
int3
enter
push
enter
jecxz
loop
insl
inc
xchg
dec
data16
mov
sub
push
icebp
mov
ljmp
sub
scas
or
dec
imul
enter
dec
xor
inc
hlt
mov
daa
mov
mov
and
add
mov
int3
xor
inc
lahf
xor
mov
stos
clc
incl
scas
and
sbb
lea
ret
jmp
cltd
cmp
das
shl
mov
xchg
cmp
dec
mov
pop
mov
add
or
jns
jp
push
push
jl
out
or
xchg
dec
lret
ljmp
xor
xor
imul
stos
jle
adc
aaa
adc
add
je
cs
inc
into
pop
xchg
push
sub
add
ret
adc
sbb
push
push
fsubrs
adc
out
mov
adc
adc
fistl
incb
xchg
or
ja
pop
cltd
mov
fldl
sub
mov
fcompl
test
les
mov
scas
push
add
cmp
pop
xor
and
or
sbbb
fs
cmpsl
mov
sbb
jno
inc
pop
fnstenv
xchg
cmp
adc
cmpl
xchg
cltd
mov
cli
mov
das
in
cli
mov
lret
fiaddl
mov
leave
inc
jno
mov
xchg
or
mov
add
js
mov
aas
jle
scas
mov
subl
addl
sbb
cmc
jno
jo
aad
mov
push
push
les
adc
jmp
adc
mov
fcomps
aad
sbb
xor
and
shlb
push
test
in
test
dec
add
push
test
mov
dec
jae
push
pushl
testl
enter
mov
aas
sti
mov
lock
in
adc
mov
das
fdivs
scas
mov
add
add
je
and
push
shlb
shll
cmpsb
mov
js
add
jl
cmp
sti
dec
aas
imul
rcll
push
mov
fiaddl
insb
jmp
dec
test
pop
fs
push
push
xchg
dec
pop
xchg
inc
xchg
data16
mov
int
dec
out
lods
fdiv
hlt
fucomi
movsl
adc
push
add
pop
cmpsl
sbb
ja
jl
lods
int
xor
jae
pusha
push
xor
cmc
sbb
xchg
or
adcb
lcall
aaa
push
popf
movsl
in
add
adc
cmp
hlt
rcl
jae
sub
and
sub
push
mov
add
mov
jne
mov
cmpsb
add
pop
or
cmp
xlat
xchg
add
mov
ret
jle
mov
xor
sub
sbb
and
ja
cmpsl
pop
cmpsb
lea
inc
jl
xor
jecxz
sub
mov
xchg
and
ret
inc
hlt
and
iret
mov
leave
push
mov
sub
xor
mov
xchg
arpl
ljmp
inc
xlat
push
fisubl
xchg
push
or
cmp
jle
cmp
jne
pop
jb
lret
lahf
sub
lea
mov
add
mov
lods
bound
jg
std
mov
mov
enter
cmp
mov
cmpl
dec
mov
push
adc
mov
jns
orb
dec
out
xorb
outsb
adc
cmp
xor
pop
xchg
cltd
sbb
int3
pop
popa
mov
jl
in
sbb
out
lret
push
test
cmpb
es
cmp
fsubrs
mov
push
sbb
inc
nop
mov
mov
in
test
cmp
test
inc
rcll
addb
ljmp
push
out
sahf
data16
mov
mov
dec
mov
jae
pop
fstpl
inc
pop
sub
jl
add
test
mov
xchg
xor
push
or
outsl
bound
cli
sub
inc
xchg
fdivrl
mov
popf
fimull
pusha
pusha
arpl
lret
xor
test
jge
cmp
dec
mov
add
mov
cmp
ja
and
mov
in
mov
jne
mov
shll
in
jae
loopne
sti
push
shrl
ret
sbb
pop
mov
or
ficoms
jno
jo
fiaddl
lea
xor
popf
sbb
sbb
cmpsb
mov
push
dec
xor
ficompl
ficompl
inc
iret
adc
sub
packssdw
cmc
add
dec
mov
and
mulb
test
scas
inc
mov
inc
mov
dec
xor
lea
scas
fcomi
lock
loop
inc
xor
xchg
inc
mov
daa
cmp
cld
or
loope
jne
ds
orl
pop
pop
fldenv
leave
ljmp
insl
shlb
pop
ljmp
loop
mov
mov
adc
fadd
sbb
xchg
fwait
jmp
jl
stos
bound
xor
mov
pop
fiadds
xchg
rorl
push
shlb
lret
mov
aaa
dec
jae
sub
fs
cmpsl
jns
mov
pop
ret
pop
fdivrl
xchg
imul
fldt
loope
sbb
fs
add
jmp
xchg
mov
jnp
lds
jo
arpl
push
sub
mov
in
hlt
cltd
or
stc
dec
xor
jo
mov
mov
movsl
pop
push
sub
test
push
jbe
sbb
push
cmpsb
lret
ds
int
inc
jnp
int3
pop
mov
scas
fldcw
adc
or
mov
cmp
hlt
in
in
enter
mov
pusha
or
jge
xchg
clc
enter
mov
pusha
mov
imul
sub
out
mov
inc
mov
mov
rolb
or
bound
in
in
bound
pop
or
or
mov
pop
data16
aam
dec
dec
xor
and
inc
cwtl
bound
sub
mull
into
fs
xchg
xor
pop
pusha
aas
jns
sub
cmp
mov
ret
sysret
xlat
or
xchg
push
imul
ja
mov
inc
xchg
jge
stos
jp
push
mov
shll
adc
test
shrl
cmp
outsl
shll
mov
cwtl
movsl
fdivrp
icebp
in
lcall
imul
int
ret
cld
pop
aas
pop
std
aaa
repz
jmp
mov
inc
and
repz
clc
mov
xchg
and
pusha
xchg
sbb
mov
mov
outsl
sub
mov
test
mov
daa
adc
xbegin
mov
dec
sbb
fcoml
in
mov
dec
pop
mov
dec
mov
xor
jbe
out
out
popf
mov
cmp
xchg
iret
xchg
outsb
inc
jns
mov
mov
mov
ret
sub
xchg
lcall
inc
adc
jle
pop
ret
sub
cltd
popa
sub
iret
fldt
cld
popa
jne
lret
mov
lret
adc
mov
shlb
lcall
das
scas
or
jge
xor
jmp
mov
jno
nop
sub
mov
cld
jae
rcr
jne
xlat
cmp
sbb
popf
inc
mov
in
inc
arpl
stos
adc
dec
push
adc
aam
fisubl
jbe
mov
xor
inc
jl
push
popf
sub
cmp
inc
in
adc
cmpsl
dec
ds
inc
dec
xchg
stos
daa
add
mov
test
push
js
pop
mov
pop
dec
out
call
ror
xlat
or
pop
mov
xchg
ja
pop
int3
and
dec
mov
cmpsl
fstl
pop
sbb
sub
daa
cmovnp
pop
push
dec
add
xchg
lods
mov
xchg
ret
sahf
mov
outsl
or
lret
xor
add
mov
fnstcw
jg
cli
insb
out
fcoms
stc
test
lock
or
push
nop
loope
xorl
cmp
jmp
adcb
jae
sbb
pushf
roll
je
pop
loopne
outsl
aaa
jmp
fwait
lahf
arpl
mov
popa
fdivs
pop
mov
movl
scas
shlb
lea
add
pushf
addr16
mov
repz
mov
faddl
mov
sahf
xor
add
sub
lea
mov
push
movsl
fimuls
sbb
mov
jo
popa
pcmpgtd
dec
xchg
call
fld1
dec
aas
cmpb
mov
jne
imul
cltd
jmp
cmpsb
or
dec
popf
cmp
push
push
fnstsw
js
pusha
pop
push
mov
fdivs
inc
js
push
push
cmp
mov
or
push
js
call
loope
mov
int3
rcrb
nop
leave
xchg
sub
lds
inc
sbb
push
insb
in
xor
jl
mov
cmpsl
dec
jmp
or
iret
mov
test
dec
sbb
cmpl
mov
and
add
arpl
es
push
ds
iret
cli
sbb
lret
imul
xchg
pop
xchg
inc
mov
xor
enter
lea
outsb
sbb
sub
out
xor
pop
mov
lcall
leave
cmp
test
dec
push
inc
jmp
in
cmpsb
hlt
jnp
in
popf
aam
fsub
mov
mov
or
arpl
jmp
pop
lret
ljmp
outsb
outsl
test
iret
pop
jae
pop
pop
mov
fistpll
inc
fst
sub
lahf
out
mov
inc
shll
in
dec
push
out
jl
aad
push
mov
dec
jecxz
sarb
sub
faddl
addr16
mov
fmuls
insb
xchg
push
jle
rorb
xchg
dec
dec
das
mov
inc
inc
mov
mov
xor
xchg
fldt
test
test
xor
mov
lock
sahf
andl
notb
push
mov
push
mov
sub
data16
incb
xlat
mov
test
adc
cs
cmc
cmc
sub
hlt
or
leave
sbb
mov
in
sub
cmp
es
mov
add
jmp
outsl
push
pop
cmovle
inc
popa
into
push
into
cmp
out
pop
fs
and
sbb
aaa
add
setno
into
imul
adc
push
rorb
andl
ret
js
xchg
sbb
inc
add
xchg
out
nop
xchg
lods
aad
dec
stc
in
adc
je
mov
test
mov
inc
adcl
pop
lcall
dec
mov
in
pop
push
clc
cmp
push
out
xchg
ljmp
xchg
std
xchg
outsl
xlat
mov
push
push
cmpsl
rclb
leave
aas
int3
lds
mov
ljmp
movsb
je
imul
mov
rcrl
and
sub
adc
bound
xor
fs
std
fwait
insb
rorb
lods
xorl
aaa
xor
daa
pop
push
mov
inc
outsl
in
in
lcall
inc
pop
xchg
mov
push
push
in
adc
sub
adc
jmp
bound
nop
add
aaa
cmp
and
leave
adc
adc
popf
in
cmp
aaa
pop
hlt
cmp
andb
xorb
jbe
jmp
jp
jg
mov
pusha
shll
pop
out
adc
xchg
mov
add
clc
ret
push
push
ljmp
int
aas
adc
mov
adc
jno
lods
and
inc
sbb
repnz
adc
out
in
cs
jecxz
vmread
fsubr
xchg
sbb
pop
int3
jg
add
pop
sub
fs
dec
push
xchg
test
adc
dec
shl
pop
push
dec
or
inc
lahf
shr
das
lcall
xor
lret
movsb
mov
add
inc
aad
lods
jne
call
hlt
or
mov
pusha
push
xchg
xor
jecxz
or
out
dec
mov
inc
cs
pop
mov
pop
xor
rcll
jle
sub
or
xor
mov
out
xor
les
mov
dec
or
cmp
cmpb
mov
inc
or
div
and
test
testl
ret
add
pop
ja
push
pop
and
mov
shll
addr16
movnti
push
movsb
mov
xchg
test
je
mov
jns
lea
inc
mov
sbb
mov
jbe
and
inc
icebp
jnp
int
sahf
mov
in
test
jg
je
mov
into
aam
or
mov
inc
ss
jae
xchg
mov
pop
icebp
dec
sub
data16
and
loope
js
xchg
xor
mov
int3
sahf
pusha
rcl
or
mov
scas
cmpsb
sti
fisttpll
rorl
shl
sub
ret
cltd
push
pop
xor
ficoml
insl
scas
dec
test
loopne
dec
push
cld
and
mov
add
mov
mov
es
lods
lret
push
and
pusha
ret
mov
cld
call
and
pop
jbe
aad
dec
fdivs
out
or
mov
fdivs
xchg
jl
xchg
push
mov
std
mov
and
xchg
sbbb
pop
out
mov
rolb
dec
and
mov
aam
loopne
sub
mov
sub
mov
iret
add
jp
jp
push
add
aas
sar
lea
add
fdivrs
mov
clc
add
sub
xorb
cmp
or
xor
mov
push
mov
sub
lahf
bound
adc
mov
fsubl
je
dec
jnp
cmpsb
push
push
mov
adc
mov
sbbl
sarb
cmp
lret
vpmulhuw
pop
lds
mov
outsl
jle
xor
mov
andb
adc
inc
insb
cltd
sub
xor
cmp
and
sbb
and
lock
cs
popa
fwait
cld
and
and
lods
sub
pop
cmc
mov
movsb
bts
push
jmp
arpl
xchg
inc
inc
and
push
fwait
jecxz
movsb
cmp
jmp
xchg
std
movsb
jle
arpl
mov
es
ss
lret
pushf
sub
lods
pop
ds
aas
push
jne
cli
cmovno
pop
repnz
ss
bound
lods
pop
mov
iret
inc
push
icebp
addl
push
or
arpl
mov
add
out
xor
stos
test
cmp
sbb
cmovns
lock
aas
and
data16
jmp
push
andl
call
rorl
add
out
dec
and
push
dec
and
lcall
repnz
stos
aad
shrl
cmp
pop
cmp
mov
sarl
lds
roll
mov
hlt
lods
jmp
jl
cmp
js
in
xor
int
inc
push
notb
js
sub
ja
pop
popf
mov
dec
pop
jns
sbb
push
jp
cmp
cmp
cmp
dec
das
mov
lahf
dec
xor
leave
adc
sahf
gs
nop
aam
scas
sub
or
imul
shrb
insb
jp
push
mov
fxch
setp
dec
aas
insb
insl
filds
fldt
lea
cmc
pop
imul
fisubrl
in
fsubr
pop
jns
jo
xor
and
mov
mov
cmp
mov
push
mov
xchg
jmp
and
out
call
mov
lret
popf
inc
int
mov
dec
dec
xor
xchg
jns
loop
jae
cmp
popa
mov
mov
sarb
adc
test
loopne
sbb
sub
push
pop
mov
pusha
jecxz
test
jnp
xor
pop
imul
ss
jnp
adc
push
pop
mov
je
push
pop
jnp
stc
jb
fidivrs
inc
mov
mov
mov
xor
fstp
out
cmpsl
faddp
out
sbb
movsb
sub
je
inc
ret
movsb
fisttpll
fstps
fidivrl
push
inc
clc
inc
ljmp
xchg
jecxz
jne
xor
jecxz
lods
icebp
dec
sub
push
jg
push
stos
lcall
sub
das
sub
add
mov
fists
cs
popl
mov
mov
inc
jne
rclb
andb
pop
xchg
xor
cwtl
pop
xchg
push
aad
sbb
loop
cld
adc
or
mov
lahf
adcb
dec
outsb
mul
out
es
in
stos
sub
fnstsw
xchg
call
cmp
test
pop
push
inc
aaa
jecxz
test
bound
mov
adc
fnsave
pop
cmp
and
test
sub
sub
dec
ja
lret
and
cltd
sub
sarb
test
xchg
inc
xchg
push
in
pop
cltd
cmp
aam
xor
outsb
repz
js
mov
test
aaa
movl
les
enter
jns
dec
mov
faddp
push
adc
push
xchg
lods
popf
rcl
cmp
sahf
outsl
mov
mov
sbb
or
ret
push
mov
gs
aas
adc
subl
stos
inc
mov
roll
test
push
or
push
jl
push
xchg
mov
loope
popa
mov
pusha
fnstsw
mov
inc
xchg
pop
scas
add
fildll
xor
aad
mov
jno
cld
fcmovu
data16
or
imul
jbe
sub
inc
jge
das
dec
fists
rorb
push
clc
xchg
fistps
push
xchg
subb
mov
inc
adc
jge
mov
pop
aas
sub
test
add
mov
jp
xchg
popa
pushl
sbb
cmc
mov
je
mov
andb
mov
loope
dec
sbb
out
push
aam
aas
xor
and
pop
adc
daa
cli
inc
mov
sbb
aaa
jno
lock
add
fsubs
push
aaa
pop
pop
pop
sti
nop
imul
jg
out
fistpl
mov
aam
call
sub
mov
mov
pop
mov
popa
leave
mov
sbb
iret
in
mov
and
lds
ja
inc
lea
insb
rsqrtps
in
xor
mov
add
jne
sbb
dec
fnstenv
xchg
cmp
add
fs
push
and
or
mov
cmpsl
test
test
pop
sbb
lret
sub
mov
dec
mov
in
fcompl
and
adc
int3
fidivrl
cmp
sub
mov
dec
orb
jo
sub
and
repnz
out
cmovp
int
mov
in
jmp
lret
inc
pop
dec
call
fs
push
repz
lret
and
jl
push
jg
fdivrl
cmp
xchg
lret
out
rclb
scas
ror
aas
shll
fcmovbe
in
in
sub
push
and
mov
mov
enter
loope
cmpsb
insl
sbb
dec
aas
out
icebp
dec
sbb
jmp
cmp
or
sahf
add
xchg
push
adc
push
test
push
pop
out
insl
cli
pusha
fists
frstor
sub
fistpll
stos
cmp
sbb
adcl
aaa
or
mov
jae
jg
or
mov
lahf
gs
or
test
sbb
xor
adc
repz
fucom
xchg
enter
xor
xlat
lea
sub
xor
mov
mov
mov
int
pop
test
inc
push
out
and
push
sarl
push
fadd
hlt
jmp
push
cmp
cwtl
add
lahf
sbb
or
mov
push
imulb
sarb
loope
dec
int
push
outsl
sbb
mov
xor
add
inc
cwtl
testb
jb
test
sub
in
sbb
xor
mov
scas
and
scas
and
mov
leave
test
outsb
jecxz
mov
or
mov
push
xor
int3
negb
ljmp
mov
mov
add
in
rcrb
loop
js
sbb
mov
pop
lea
inc
and
lahf
lret
jno
or
fists
and
ljmp
clc
lock
jb
push
xchg
add
dec
pop
mov
ljmp
mov
js
sbb
add
inc
mov
mov
rol
adc
push
or
test
or
inc
pop
sub
call
pop
mov
add
imul
outsl
inc
add
lds
xchg
xor
sbb
and
scas
pop
in
insl
jmp
leave
loope
inc
pop
jne
inc
decb
in
jae
mov
mov
testl
shll
sub
into
cmc
dec
nop
push
cmp
adc
js
mov
in
xchg
xor
test
scas
mov
ret
fs
push
push
ss
std
add
test
pop
in
roll
xor
sbb
ficompl
sub
mov
xor
ret
add
pop
das
or
mov
push
icebp
push
push
je
push
lret
adc
pop
inc
push
and
pop
in
inc
insb
scas
pop
leave
lock
add
int
lahf
daa
lret
and
jns
dec
cs
cmp
inc
loopne
xchg
or
dec
mov
mov
mov
fwait
push
filds
adc
push
jno
adc
daa
jnp
inc
ficoms
pusha
js
dec
mov
or
mov
inc
idivb
int3
jge
add
movsb
add
bound
shlb
mov
dec
xor
clc
jge
pushf
sbb
or
sbb
cmp
daa
jb
jl
xor
iret
xor
icebp
insl
mov
adc
dec
stc
xor
xor
popl
adc
jns
adc
cli
imul
mov
fsubrs
xor
adc
dec
dec
xor
dec
lcall
rolb
or
enter
adc
test
xlat
mov
sub
mov
jl
pushf
mov
sbbl
and
push
in
ja
jle
fucomp
movsl
xchg
jp
jns
push
mov
dec
xchg
pop
insb
and
add
jmp
incl
cmp
repnz
inc
mov
jle
sbb
cmpsl
int3
cld
ss
dec
in
pop
mov
fidivrs
cmp
subl
js
adc
sahf
or
mov
dec
fsubrs
push
imul
ss
mov
push
push
cs
xor
pop
mov
xor
cmp
dec
cmp
mov
cmpsl
push
ret
rcrl
dec
cmp
fisttps
mov
jb
sbb
cmp
nop
mov
jnp
and
jle
mov
ljmp
mov
pusha
ja
fidivl
mov
aas
pop
and
lea
fwait
dec
and
xchg
imul
push
movsbl
sbb
pop
pop
adc
pusha
lret
ja
adc
fs
rcrl
or
aaa
sbb
mov
push
mov
adcb
or
add
mov
loop
xor
push
mov
mov
dec
push
adc
outsl
dec
ja
sub
push
testb
add
lods
out
in
jg
pop
jae
imul
ss
test
ror
fidivrs
mov
cmp
jg
cmp
xchg
fwait
scas
pop
dec
mov
mov
mov
jl
mov
icebp
adc
push
sub
es
rcrb
dec
or
js
test
and
lds
jno
mov
scas
mov
cmpb
bswap
push
icebp
pop
jle
push
out
push
fdivl
rcrl
xchg
jp
cli
lock
pop
add
or
xchg
imul
cwtl
int3
adc
dec
lea
or
adc
scas
in
andb
or
xor
sbb
fidivrs
lods
or
xor
ds
orl
fwait
in
out
push
shll
das
test
ja
cs
cmp
call
inc
xchg
out
setns
pop
sub
dec
add
inc
add
pusha
scas
es
mov
lcall
movsb
fwait
add
pop
mov
mulb
fldt
mov
inc
rorl
mov
mov
out
shll
cmp
sbb
pop
and
andl
int
push
call
imul
mov
loop
jno
jmp
test
mov
icebp
fisttpll
dec
inc
add
in
cmovno
out
dec
mov
outsb
add
push
loopne
dec
adc
pusha
fldt
call
inc
js
rorl
imul
call
cltd
pusha
movsb
das
mov
sub
inc
ds
inc
sahf
sub
test
push
dec
mov
mov
xchg
outsl
sub
stc
ret
je
jnp
cmp
iret
insb
imul
pop
out
movsb
jg
ds
rolb
pop
addl
push
lea
xchg
dec
lret
out
sub
lods
xchg
jge
popf
cmp
rcll
imul
cwtl
add
pushf
das
scas
xor
rcrl
cmp
test
call
lret
daa
push
push
mov
std
shrl
stc
and
push
ret
aam
jbe
test
out
rclb
cmp
jmp
lds
enter
roll
inc
push
shll
mov
jae
int3
popf
leave
into
test
aad
jmp
insl
in
int3
imul
cmovne
imul
add
xlat
rclb
dec
fimull
popf
push
push
pop
and
and
lods
mov
cmp
xchg
mov
imul
mov
jbe
push
push
mov
js
fldcw
lcall
in
scas
outsl
add
jmp
ja
pop
xchg
or
movsl
cmp
mov
pop
xchg
test
mov
adc
mov
dec
lock
jmp
push
jmp
ror
push
sti
dec
lds
dec
xchg
movsl
movsb
jae
dec
jno
adc
add
out
dec
or
hlt
mov
je
lahf
xor
inc
and
mov
sbb
inc
movsl
nop
popa
jmp
lret
aam
xchg
mov
rorb
push
stos
outsl
das
jns
jo
andb
xchg
aad
fndisi(8087
pop
subl
sbb
jge
and
jbe
loop
cmpsb
jge
cltd
into
bound
ss
cmpl
inc
stos
and
mov
stc
mov
mov
das
mov
sbb
stos
ficomps
mov
add
mov
cld
jbe
filds
xor
adc
dec
and
aaa
gs
gs
inc
pop
push
sbb
adc
sbb
adc
or
js
xor
lret
test
rolb
inc
nop
int3
mov
sbb
adcl
sub
das
push
xchg
cmp
add
jmp
pop
enter
rcrl
ret
or
lods
lahf
scas
mov
sbb
mov
popa
lods
or
mov
cltd
mov
inc
jmp
lahf
loope
imul
insb
or
std
dec
das
jle
and
pop
pop
cwtl
push
mov
pop
inc
add
sub
or
stos
cltd
nop
psubusw
jp
mov
cmc
pop
jg
cmp
cs
out
test
imul
test
ss
test
cwtl
adc
cmpsb
sub
rcrl
repnz
shrb
test
aaa
fstpl
fidivl
repz
xlat
push
jl
loop
lret
dec
sbb
icebp
insl
fwait
addr16
mov
pop
pushf
push
rorb
scas
enter
inc
jns
add
xchg
mov
sti
sub
add
stos
xchg
xchg
enter
xchg
test
and
ja
mov
add
lcall
push
mov
int3
call
iret
or
sub
ljmp
mov
cmpsb
rep
int3
mov
loope
cld
cmp
push
mov
ror
fsubl
jbe
cmpsb
inc
mov
nop
and
imull
daa
dec
imul
push
testb
aaa
xor
cmp
sbb
lcall
in
cmp
movsl
xor
and
popa
jno
in
pop
or
pop
jnp
cs
es
in
add
pop
add
xchg
mov
push
cmp
imul
dec
adc
leave
bound
dec
ret
mov
or
mov
out
jne
mov
mov
pop
xor
insb
and
notb
repz
popf
inc
inc
imul
pop
jle
jl
mov
jno
imul
in
je
orl
mov
test
sbbb
add
lahf
or
call
or
push
out
int3
pusha
push
cmp
aam
mov
daa
aaa
clc
dec
pop
lods
aas
xchg
sub
cmpsl
sbb
divb
mov
std
push
fadd
xor
push
inc
xchg
ret
adc
sbb
ss
stos
sub
xchg
add
cmpsb
out
pusha
push
xor
orb
inc
movsb
lock
clts
add
cmpl
cmp
mov
outsl
jg
mov
lret
vmovd
aas
rcr
lds
mov
aas
cmp
fdivl
lahf
and
dec
mov
arpl
data16
popa
xor
push
fisttps
xchg
jns
aas
xor
ljmp
mov
mov
xchg
pushw
fwait
lods
jne
sbb
jmp
sbb
mov
cltd
pop
lahf
in
mov
cmp
or
add
aam
repnz
clc
mov
fsubrl
and
cltd
jo
fimull
rcl
jne
ss
jb
jge
xor
fcmovu
and
fmull
mov
cmp
fdivs
jl
in
stos
push
div
pop
call
jae
jb
rcll
dec
push
aas
and
xor
fcomi
aas
and
mov
or
popf
xchg
adc
dec
fistl
das
or
gs
add
insb
adc
adc
add
cld
jbe
mov
xchg
fsubl
push
dec
jnp
popf
mov
sub
fmuls
mov
add
and
js
aaa
jge
fcom
mov
cmp
mov
mov
or
cwtl
pop
and
lahf
fucomi
repz
pop
inc
push
mov
push
mov
mov
adc
call
push
bound
cmp
and
pusha
jns
xor
cmp
je
cmp
ljmp
mov
jne
repnz
data16
cwtl
jge
xchg
stos
cmpsb
je
stos
mov
pop
xchg
test
jbe
pop
push
sub
xorb
push
mov
jno
pop
ret
push
loop
jle
es
iret
push
sub
ja
jp
int3
jmp
inc
sarb
lahf
cltd
pop
ret
outsb
xor
rcrb
pop
lea
mov
mov
adc
pop
mov
out
test
lea
sub
adc
test
bound
mov
dec
ja
lods
mov
push
push
pop
out
test
jg
or
push
xor
add
sbb
loope
in
jo
sub
icebp
mov
pop
or
lret
iret
sbb
cmp
xchg
jecxz
or
insl
xor
addb
and
dec
mov
push
adc
pop
insl
loope
mov
dec
xchg
xchg
pop
and
aad
pop
jle
jmp
ljmp
lock
es
or
stc
aas
mov
lea
mov
cmpsl
std
xor
jge
xrelease
xchg
xchg
shlb
clc
mov
movsb
mov
test
outsl
xor
mov
loope
je
fiaddl
pushf
dec
lcall
gs
lret
pop
sub
cmp
in
sbb
push
daa
xor
mov
lds
jmp
repnz
popl
add
rorl
sub
adc
rcrl
iret
sti
loope
ss
adc
lea
leave
aam
pop
and
adc
out
lds
add
xchg
data16
push
xor
lahf
leave
mov
sbb
sti
adc
dec
dec
fimuls
mov
xchg
dec
aam
mov
andb
sub
and
xchg
mov
pop
stc
adc
lcall
mov
mov
mov
xor
fiadds
adc
cmpl
js
clc
fisttps
addr16
jp
pop
mov
enter
mov
rclb
jecxz
mov
call
inc
sbb
and
out
and
daa
daa
jp
imul
and
mov
test
enter
enter
stos
sbb
scas
xchg
mov
loopne
loop
mov
adc
mov
cmp
imul
push
or
sub
daa
pop
pop
js
fidivrs
cmp
loopne
pop
mov
sub
fsubrl
das
cli
mov
mov
pushf
lahf
aam
cmc
nop
stos
adc
lods
jne
ficoml
in
fisubrs
cld
xchg
cwtl
jmp
out
pushf
jnp
fidivrl
xchg
movsb
ret
repz
mov
pop
jg
in
mull
cmpsl
push
or
mov
sub
pop
add
mov
out
pop
or
aad
lret
out
test
test
notb
mov
js
imul
shlb
movsl
stos
nop
lret
pop
in
lds
repnz
adc
xlat
jp
stos
out
dec
ds
or
clc
sbb
sbb
jle
mov
inc
es
daa
and
inc
jle
jbe
push
sbb
rclb
insl
pop
mov
shll
clc
shl
mov
xlat
jle
mov
push
adc
leave
dec
outsb
jbe
xchg
pop
outsb
hlt
ljmp
scas
jae
cmp
mov
shl
or
mov
dec
xchg
push
adc
ficoml
into
lret
addr16
sbb
fwait
cltd
inc
popf
pop
sub
adc
in
cmc
lcall
inc
adc
jmp
push
jg
inc
inc
ret
dec
pop
es
lock
sub
inc
inc
pusha
in
dec
pop
mov
push
insb
shll
sub
imul
push
adc
mov
test
push
mov
mov
adc
sti
push
out
add
pop
adc
fistl
mov
out
mov
or
sub
push
mov
out
mov
adc
inc
orl
and
sub
and
in
jnp
leave
xchg
dec
movsl
or
xchg
mov
scas
sbb
int
fstl
cli
or
outsl
xor
int3
repnz
cld
ljmp
jge
and
pushf
and
cmpsl
imul
pop
or
push
stc
push
sarl
aaa
aad
or
xor
scas
inc
inc
mov
std
push
repnz
mov
mov
popf
mov
inc
icebp
lods
das
stos
mov
js
dec
sbb
xchg
out
jecxz
repnz
aam
test
inc
repnz
repnz
mov
push
lods
mov
mov
cmpsl
adc
sub
push
push
push
push
jb
addb
dec
scas
dec
add
pcmpgtd
cli
add
fadds
pop
cltd
push
xor
fistps
pop
sbb
or
unpckhps
pop
and
jge
xor
shr
xchg
loop
inc
inc
xor
out
pop
loop
enter
sbb
cmpsb
sub
and
mov
jge
fsubp
fimuls
ljmp
or
lods
out
jbe
je
pop
jecxz
mov
fcmovbe
jns
fdivr
popf
dec
mov
addr16
clc
sbb
mov
je
pop
stc
and
lea
rol
sbb
mov
sbb
in
sarl
cltd
mov
push
inc
enter
jmp
js
or
insl
and
cmp
push
jne
xor
cmpsb
inc
dec
lcall
fs
repz
aas
lds
jo
push
cld
out
loopne
sub
pop
jno
std
adc
or
jb
insl
rcr
push
rolb
or
jmp
and
xor
xor
test
jne
nop
or
adc
popf
mov
shrb
push
lods
mov
xchg
adc
mov
push
mov
adc
xor
stos
imul
sub
xchg
jb
lock
mov
call
test
lret
jmp
lds
push
cli
dec
mov
add
sub
data16
jg
mulb
loop
cmp
aad
push
xor
dec
inc
enter
into
fstpl
les
fisttps
cs
pop
cmp
pop
ret
bound
mov
xor
mov
add
pop
idivl
xchg
mov
jle
adc
pop
xor
loop
and
lcall
lods
loope
dec
repnz
jae
test
xchg
imul
pop
scas
shufps
gs
mov
and
popf
popf
pop
or
rclb
add
gs
divl
ret
xor
shl
sbb
inc
xchg
movsl
in
arpl
mov
fldt
syscall
test
and
push
ret
fninit
out
nop
cmp
gs
jns
sub
mov
repz
sub
cltd
ss
inc
fucomp
jg
loop
cmc
scas
frstpm(287
push
adc
push
inc
movsl
dec
mov
sub
jae
rorb
mov
mov
mov
enter
dec
push
lods
shll
aam
pop
outsb
sbbb
fisttps
dec
lea
jp
jecxz
add
fstpl
aaa
jecxz
jne
movsl
fistpll
jecxz
sub
cmp
sti
popf
mov
pushf
lea
popa
roll
jbe
aam
int3
fdivr
and
pop
lahf
ljmp
int
cltd
lock
pop
cmc
lods
xor
cmp
stos
pop
sbb
mov
fsub
pushf
cld
movsb
sub
iret
jmp
sbbb
icebp
adc
and
imul
lds
and
ret
aas
test
out
clc
cmp
push
push
xchg
es
inc
mov
lret
jmp
inc
lahf
jnp
cmpsl
sbb
gs
and
pop
rolb
das
rol
insb
fwait
inc
pop
push
sub
outsb
ljmp
aam
stc
or
insb
push
adc
cmp
push
cmpsb
pop
das
mov
inc
pop
hlt
movsb
lea
scas
test
stc
jns
mov
pop
scas
es
xor
rcll
inc
loope
xor
add
push
mov
mov
jae
nop
xor
cs
popa
or
mov
xchg
shlb
lret
popa
cmpsb
fmuls
mov
flds
shl
adc
je
add
sarl
out
xor
jg
les
pop
testb
mov
aaa
cmp
out
fs
sub
and
aad
setbe
rcr
or
sub
push
call
into
push
popa
imul
jg
pop
out
sarl
pop
lret
mov
fmuls
inc
test
fsubl
int
jl
mov
sub
shll
loop
add
cmpsl
push
push
test
adc
dec
mov
sbb
and
in
mov
adcl
mov
rcrb
in
out
cmp
sub
push
repz
dec
jmp
imul
inc
lods
adc
sub
fstpl
mov
mov
repnz
xchg
repnz
inc
xchg
adc
lods
nop
xchg
mov
mov
and
push
mov
and
js
jl
xchg
fdiv
lcall
aas
je
mov
sub
push
in
ss
dec
in
mov
rorl
push
pop
pop
fwait
inc
sub
call
xor
inc
popa
clc
xchg
xor
xor
pop
mov
push
insb
bound
inc
mov
in
mov
mov
in
cmp
mov
and
inc
pop
mov
iret
dec
fcoms
int
ljmp
out
dec
bound
sbb
adc
mull
in
in
mov
push
scas
push
jae
rcrb
inc
movsl
mov
addb
sbb
sub
repz
and
jbe
iret
push
mov
xchg
in
lret
repz
mov
cmp
call
mov
inc
and
sub
dec
andb
aas
cmp
lcall
adc
mov
push
ds
lahf
inc
add
push
adc
mov
jp
inc
fisttpll
xlat
add
xchg
loop
rcll
xor
sahf
neg
out
xchg
test
pop
aam
add
xchg
lcall
sbb
aad
dec
inc
push
cmp
push
sub
lret
int
cmp
repz
push
xor
fnstenv
cmpsb
push
fwait
je
les
sub
scas
dec
cmpsb
js
jae
xchg
sti
fsubp
daa
pop
rorb
push
mov
adc
xchg
movsl
pop
push
jno
in
jg
outsb
xlat
shrb
stos
loopne
pop
mov
das
xor
ficompl
lcall
std
or
dec
jle
add
jge
mov
dec
xchg
jb
xor
fidivrl
sbb
cli
cmp
inc
xchg
mov
and
push
mov
scas
shll
dec
mov
push
pop
in
add
sbb
sub
jne
stc
stos
mov
dec
lea
popa
cmp
out
mov
pop
ljmp
pop
mov
sarb
cmp
mov
jns
fbstp
andl
push
test
lahf
insb
popa
fstl
cmc
mov
lods
mov
imulb
xor
jmp
movsb
push
fisubl
push
imul
mov
xlat
pop
repnz
pop
lahf
pop
dec
call
je
loop
fs
xor
sbb
test
xor
cmp
out
mov
mov
cmpsb
out
jmp
pop
add
imul
lds
xchg
push
ss
loopne
int
popa
movsl
jecxz
mov
and
mov
stc
jl
test
and
insl
adc
push
mov
pop
ret
xchg
stos
xchg
add
mov
add
push
sub
mov
adc
or
stos
jmp
inc
xor
sbb
push
xor
mov
adc
out
pop
outsl
jbe
mov
test
adc
sub
mov
fstpl
mov
sbb
imul
jns
xor
lock
push
adc
sti
sub
out
icebp
ret
xor
sub
out
push
pusha
fs
mov
add
stc
mov
fistpll
xor
push
int3
pop
hlt
test
or
popl
test
rolb
cmp
cmpsl
fmul
stos
pop
or
adc
aad
jno
mov
mov
pop
mov
pop
inc
loopne
inc
sbb
lods
lahf
push
sub
sbb
jecxz
fldl
jno
sahf
lahf
inc
add
sub
sub
popa
adcl
sahf
fcomip
test
stos
int3
outsb
cld
adc
cmp
popf
sbb
sbbl
imul
loope
sbb
jl
and
mov
mov
subl
jmp
ss
pop
mov
sti
dec
push
adcb
je
xor
out
jb
pop
test
int3
daa
movsl
xor
inc
dec
in
call
xchg
fildl
mov
shlb
sbb
iret
mov
imul
pushl
pop
nop
outsb
std
cs
fldenv
push
and
testl
or
shr
int3
sub
insb
in
pop
mov
in
daa
mov
jbe
adc
xchg
outsb
mov
cmp
jle
jg
ror
in
fs
sbb
les
cli
xchg
jp
stos
pop
loop
sub
rclb
outsb
inc
movl
and
movsl
add
ja
xchg
and
xchg
es
out
mov
int3
cmp
pop
adc
push
cs
enter
inc
push
jae
add
adc
cmp
cltd
in
aam
js
dec
xchg
lret
cmp
sbb
sti
stos
in
cmp
xchg
sub
sahf
dec
fmuls
push
xlat
push
dec
mov
xor
and
adc
sarl
and
or
stos
mov
enter
add
and
mov
lods
ficompl
scas
daa
and
into
mov
aaa
mov
sbb
jbe
add
xchg
leave
push
sbb
push
jne
cmpsl
xchg
cli
and
movsb
stos
dec
pop
jg
hlt
loopne
pop
adc
mov
lock
mov
adc
clc
cwtl
xor
fistps
mov
jmp
ja
cmp
adc
jmp
inc
xorb
sbb
movsl
outsb
dec
stos
adc
arpl
dec
sti
pop
mov
mov
dec
ret
aas
ja
out
cmp
jns
jae
movsl
dec
cmp
adc
test
aaa
sbb
adcl
outsb
cs
jbe
xlat
ds
or
scas
push
pop
jle
leave
cmp
add
jp
sub
add
and
in
and
mov
aam
mov
dec
cmp
dec
stc
mov
pusha
js
xor
stos
movsb
shrb
andl
lds
xor
xlat
addr16
cmpsb
add
lds
cmp
loope
xor
cmpsb
xor
arpl
je
sub
push
movsb
push
xchg
cmp
clc
int3
mov
fisttpl
dec
and
cs
pop
sbb
push
in
jecxz
not
jmp
sarb
cmp
scas
data16
pushf
mov
ds
rclb
mov
movsl
lahf
pop
xchg
and
int
daa
idivl
in
dec
push
das
sub
aam
pop
jo
jecxz
in
flds
xor
test
cld
out
inc
in
addr16
ss
push
or
mov
ror
adc
jb
sbb
pusha
dec
mov
dec
iret
mov
push
mov
and
push
js
inc
mov
bound
lds
and
outsl
xchg
ljmp
pop
push
inc
iret
rclb
leave
jg
int3
fsubrl
xchg
movsl
mov
adc
push
jns
mov
push
jmp
lahf
sub
mov
and
test
mov
hlt
push
repz
add
lret
in
imul
and
sahf
lahf
dec
push
push
sub
insl
movsl
adc
dec
dec
out
addb
mov
enter
shl
lret
xchg
lods
cmovg
stos
fwait
mov
push
jae
xlat
cmp
test
bnd
rcl
pop
lock
sub
push
dec
jmp
xchg
or
push
imul
sahf
xor
std
inc
mov
push
inc
jnp
lods
inc
into
imul
sub
pop
pushf
frstor
pop
ret
sahf
ja
fbld
mulb
push
notb
xchg
test
ljmp
push
dec
dec
jo
cwtl
lods
push
mov
popf
pop
mov
push
inc
push
push
pop
mov
in
sbb
addr16
lret
adc
js
pop
add
testb
in
push
repnz
push
cltd
cs
mov
sbb
addr16
test
sub
pop
sti
rclb
test
mov
jns
lret
leave
xchg
nop
cwtl
sbb
xchg
sub
xchg
insb
dec
pushf
cmpsb
ss
mov
adcl
lret
out
loop
iret
js
movsb
mov
sti
lds
aas
loop
aam
mov
xchg
lds
pushf
jp
inc
cmc
scas
aad
dec
imul
mov
push
shrl
test
outsb
jecxz
and
dec
je
add
inc
dec
mov
push
pop
pushl
cli
and
enter
adc
popa
std
repnz
and
jmp
mov
and
sub
cli
mov
xchg
pushf
mov
rolb
jne
adc
aad
mulb
out
adc
orl
pop
cmpsl
outsb
fldl
xchg
sub
and
jmp
insb
mov
pop
outsl
lret
imul
adc
add
cmp
push
push
xchg
cmpsl
ret
lods
cwtl
add
push
jbe
jl
cli
lods
scas
xor
rcr
dec
test
ja
push
push
jle
lock
mov
aam
data16
data16
sub
out
jg
clc
mov
adc
das
stc
jle
xor
jp
sub
fidivrl
xchg
mov
push
mov
repnz
mov
shr
push
mov
adc
jo
leave
mov
sbb
fwait
add
pop
das
int3
mov
mov
stos
add
repz
fbld
or
jno
daa
jge
cmpb
fistps
pop
sub
inc
fwait
sbb
mov
daa
popa
sbb
lcall
dec
and
jae
loop
fsubs
push
outsl
bound
pop
mov
pusha
fwait
subl
ss
cmpb
flds
mov
inc
mov
xor
push
mov
sbb
xchg
je
movsb
mov
lret
orl
jnp
push
les
xchg
cltd
pop
push
std
loope
add
int3
push
in
sub
ja
sahf
test
xchg
xchg
inc
testb
xor
int
fs
push
pop
inc
cmpsl
shlb
sbb
outsl
ja
dec
mov
pop
pop
pop
xor
xchg
movsb
mov
rcl
mov
imull
negb
insb
je
xor
cmpsb
lret
xor
jns
lods
fnstenv
pop
cltd
in
cmpsl
push
and
out
leave
and
cmpsl
sbb
mov
mov
cmpsb
mov
push
mov
out
or
jb
cs
js
xor
jbe
sub
xor
adc
push
outsb
push
mov
mov
sub
js
dec
out
js
gs
xor
mov
xchg
add
mov
rorb
mov
in
std
test
xchg
jmp
jns
jmp
es
jns
jb
mov
in
adc
add
adc
stos
in
fyl2xp1
shl
sahf
insl
sbb
test
fucomip
sub
lea
pushf
nop
loope
inc
jmp
jg
dec
add
cmp
outsb
in
dec
stos
fdivr
mov
aaa
sahf
inc
or
mov
insl
push
push
pop
arpl
rorl
out
mov
jmp
in
jle
icebp
imul
data16
cld
inc
test
pop
mov
in
ja
sbb
cmpl
push
cltd
pop
pusha
ja
pusha
jg
sbb
outsl
out
negl
lahf
xor
cmp
repz
movsb
cmpsb
cmp
adcb
pushf
mov
shll
push
addb
dec
mov
das
lock
jb
jo
cltd
cmp
inc
push
adc
mov
mov
daa
add
xchg
dec
jle
push
seta
mov
cmp
add
cmp
stc
imul
dec
aad
dec
inc
pusha
jnp
in
xor
xchg
std
xorl
xor
sbb
jns
inc
jle
mov
mov
je
shrb
das
shlb
and
sti
sbb
pop
and
xchg
ret
lods
xor
out
xchg
fistps
adc
fadd
filds
cmp
leave
fcoms
jae
fmuls
dec
cwtl
into
sbb
push
adc
adc
mov
in
lods
pusha
push
pop
xorb
sti
adc
pcmpeqd
xchg
cmp
imul
scas
pop
push
pusha
mov
in
inc
adcb
xlat
out
fmuls
and
cmp
dec
repz
mov
data16
add
push
rcrb
insl
push
cmp
sbb
mov
lahf
add
ds
push
mov
mov
out
in
or
hlt
in
sub
or
pushf
lds
push
xchg
mov
fidivs
fcomi
sub
sbb
push
repz
mov
jbe
sub
mov
pop
and
inc
addl
sbb
jl
test
insb
out
lods
scas
addr16
mov
jns
ret
sub
call
cltd
xchg
sub
fidivs
mov
lret
loope
into
hlt
add
add
inc
fdivl
xchg
dec
in
cmc
addr16
add
xchg
and
lods
mov
xor
sub
add
ret
xor
mov
pop
push
or
jo
or
es
jne
push
popf
jns
aaa
pop
fsubrl
outsl
test
pushf
sbb
bound
jp
mov
mov
jae
loop
sub
test
lcall
andl
jae
xor
xchg
out
mov
pop
addb
ret
test
and
inc
and
inc
pop
sbb
sub
in
xchg
inc
or
mov
cltd
dec
adc
inc
xor
aas
cmpsb
xor
xchg
push
add
or
or
fmull
and
ret
dec
imul
leave
push
leave
adc
sbb
sbb
xor
mov
push
and
and
jne
jmp
jns
push
lds
sbb
jns
push
mov
daa
int
test
roll
jmp
jmp
dec
push
mov
shlb
sub
and
sahf
inc
xor
pop
int3
inc
scas
pop
xor
je
push
int
cmp
imul
adc
test
xor
cld
xchg
or
dec
fld
dec
out
jne
cli
stos
into
inc
mov
jb
mov
jecxz
push
push
add
sti
in
or
jp
sbb
and
loop
or
mov
rorb
cmpsl
or
insl
mov
jl
fisubrl
testl
test
push
pop
jp
add
cmc
lahf
adc
movsl
mov
or
adc
pop
lods
jns
icebp
mov
lcall
xor
add
fs
mov
std
loop
andl
mov
fists
jge
mov
dec
dec
push
hlt
lds
jae
push
cltd
mov
jge
out
dec
rcrl
sub
sub
cmp
push
pop
ret
ss
loope
pop
push
dec
daa
imul
lea
lods
push
gs
notb
sbb
inc
aaa
add
xor
mov
fldenv
xor
dec
test
sbb
sub
ljmp
or
cmc
or
inc
lret
mov
addr16
sub
cltd
cli
faddl
mov
and
jo,pn
iret
cwtl
loopne
outsl
xor
adc
out
xchg
add
push
and
lods
and
jg
xchg
add
ret
cli
dec
test
sbb
repz
sti
lret
test
push
jb
pop
cmpsb
repz
mov
div
rcrl
mov
dec
das
leave
imul
xor
scas
add
add
pop
movsl
and
and
clc
popf
aam
mov
cmp
aad
daa
sbb
push
mov
jge
push
jns
or
mov
jnp
mov
lcall
cmc
sub
and
xor
clc
xlat
pop
sbb
ror
mov
jno
addr16
lods
push
sub
jne
rcrb
push
mov
xchg
push
add
mov
mov
pop
lock
dec
mov
filds
daa
jmp
daa
std
sub
lahf
mov
insb
cmp
mov
std
lds
into
lods
cltd
cwtl
sar
mov
sub
rorb
and
rorl
pop
test
xchg
mov
and
mov
sbb
adc
fwait
jge
adc
out
stc
out
inc
repnz
rorl
mov
add
mov
je
pop
inc
push
mov
int3
cmp
or
mov
andb
adc
test
repz
xchg
mov
loop
cli
or
rcll
aas
or
outsb
iret
add
dec
jae
jb
pop
mov
lret
lods
inc
push
adc
fs
int3
outsb
xor
inc
adc
sbb
popa
test
pop
movsl
inc
shll
jno
aad
sbbb
adc
stc
pop
js
imul
pop
or
imulb
std
sub
adc
stc
mov
push
dec
mov
shlb
xchg
mov
sti
leave
dec
fstpt
subl
outsl
movsb
xor
cmp
dec
xchg
lea
pop
pop
in
cld
pop
insl
and
dec
in
ja
push
ss
adc
dec
into
adc
sub
mov
incl
jae
add
mov
and
imul
mov
pop
or
mov
sbbb
jns,pt
jae
imul
push
sub
aam
scas
ja
fwait
add
das
les
bound
subl
push
cwtl
jp
fwait
sti
pusha
lcall
sbb
push
cwtl
cli
xor
cmp
xchg
add
mov
push
mov
xor
jg
int
test
cmc
mov
jbe
lcall
in
push
add
into
das
leave
lret
xor
divb
xchg
popf
adc
push
mov
jno
jmp
fisttps
mov
cwtl
test
loope
nop
and
dec
insl
jp
aaa
mov
and
push
push
mov
cmp
ljmp
rcll
add
andb
jno
dec
and
push
xchg
fsubl
loop
mov
fisttps
popf
add
loop
loop
jno
adc
mov
shl
mov
clc
ljmp
in
dec
fs
insb
ds
sbb
repz
lret
out
aam
ljmp
scas
repz
pop
mov
scas
fstps
mov
fstl
jae
js
xor
out
add
fchs
and
leave
cmc
cmpsb
or
out
push
jb
fcmovnbe
popf
jnp
addr16
mov
cmp
xor
push
push
jp
pop
dec
ret
adc
and
outsl
outsb
or
gs
ljmp
hlt
popa
std
gs
jge
inc
pop
aam
and
xor
loopne
pop
push
popf
enter
jmp
dec
stc
mov
xchg
fsubrs
adc
cmp
aam
and
xchg
ss
xchg
adc
repz
shll
jg
pop
pop
ret
lock
scas
cs
jno
inc
hlt
pop
xor
ljmp
inc
shrl
faddl
dec
cmpsb
popa
xchg
cmpsl
testl
cmp
aaa
or
cmp
push
in
sbb
loopne
popf
adc
js
sub
mov
mov
out
sbb
xor
mov
cld
cmc
push
mov
cmpsl
insb
cmp
push
movsb
jg
lock
cmp
sub
movsl
inc
jne
aas
or
mov
scas
repz
push
mov
push
or
mov
jl
push
out
ret
and
stc
add
and
pop
sub
and
xchg
sub
pop
sub
push
inc
cld
icebp
cwtl
mov
into
popf
jp
sbb
fs
fisubl
cld
rcl
pusha
loop
push
mov
fwait
je
jno
hlt
inc
test
sti
jp
mov
mov
cmp
push
pop
fisubrs
add
pop
out
adc
aas
ffree
lahf
js
add
dec
sbb
pop
cmp
out
add
fisttpll
sub
jbe
loop
sahf
lds
cmp
pop
inc
adc
lds
in
out
xor
cmp
mov
mov
shll
cmp
clc
inc
int
push
xor
movsl
push
jecxz
sahf
andl
or
stos
repnz
mov
fisubrl
xchg
push
xor
adc
sbb
enter
shlb
int3
mov
xor
or
int3
xchg
xchg
pop
xor
outsb
ja
xlat
enter
dec
pop
fs
mov
mov
aaa
popa
fs
imul
xor
push
cmp
out
mov
aad
xchg
insb
lods
adc
sbb
ss
outsl
mov
sub
push
sub
jmp
or
movsl
push
lahf
add
pop
rcll
adc
nop
scas
inc
add
je
daa
pop
push
pusha
sub
popf
in
mov
sti
call
push
xor
sbb
fisubs
popa
sub
inc
xchg
mov
mov
sub
lds
jg
pushf
adc
xchg
inc
sub
pop
repz
loope
popa
push
fistl
xor
jne
rcpps
pop
call
xchg
stc
cltd
pop
repz
mov
scas
rcr
xchg
cmc
and
vprotq
mov
rcr
clc
mov
test
mov
cwtl
test
fdivl
iret
push
dec
mov
cmp
shrb
mov
sub
cmc
push
cmp
in
cmp
fldl
sbb
sbb
vcvtsi2ss
fisttps
mov
push
mov
push
xor
cmpsb
stos
fcomps
sbb
in
test
bound
add
pusha
mov
or
push
push
adc
ja
fbld
shrb
lcall
jae
mov
movsb
or
aaa
cmpsb
cs
sbb
imul
adc
gs
aam
mov
push
ds
lcall
das
rcrb
pop
lods
inc
jbe
mov
mov
outsb
fisttpll
push
repz
repz
lock
push
idiv
xchg
adc
std
roll
mov
mov
inc
gs
sub
dec
ja
je
ret
lods
pop
pushf
cmpb
std
push
sbb
adc
xor
les
push
frstor
insl
ffree
imul
sbbb
push
sub
jg
jnp
cli
out
xchg
adc
sarl
mov
std
pushf
sub
jp
xchg
mov
sub
fmulp
stos
pop
filds
mov
lahf
int3
pop
cmp
inc
pop
xor
icebp
mov
pop
lods
test
dec
jmp
repnz
insl
mov
inc
jmp
and
and
leave
int
repz
jl
aas
ret
add
lods
or
mov
xchg
arpl
in
in
movsb
xlat
and
sub
cli
repnz
add
test
or
mov
ret
mov
movsb
pop
in
bound
arpl
andb
jp
subl
cmpsb
aaa
cwtl
sub
popf
shl
or
es
mov
clc
mov
adc
ja
enter
nop
cmp
pushf
pop
int
mov
add
add
dec
outsb
lret
jbe
cld
jbe
imul
inc
scas
jo
sbb
mov
cmpsb
cmp
sub
inc
dec
mov
xor
mov
and
movsl
mov
mov
aaa
mov
aam
divl
test
aaa
in
push
test
jb
andb
mov
dec
push
cmp
repnz
hlt
mov
and
xchg
jno
push
leave
lds
xchg
cwtl
imul
test
aam
or
cmpsb
dec
sub
ss
imul
inc
push
loopne
mov
sbb
outsl
mov
cli
lods
cmpsl
cmp
jmp
cmp
cmp
cmp
pop
ret
outsl
xchg
cld
fisttps
fwait
imul
push
ss
mov
outsb
adc
loop
stos
popf
jo
in
cmp
xchg
aad
int3
dec
aad
cmp
add
icebp
incl
sub
out
fcomps
or
fnstsw
test
andl
add
pushf
inc
sbb
mov
sbb
add
sub
sbb
jge
mov
scas
xchg
mov
lahf
dec
mov
call
xor
dec
imul
jnp
dec
xlat
shlb
lcall
insl
das
mov
sub
adc
icebp
dec
xor
push
xlat
je
sahf
out
add
push
xlat
mov
pusha
fdiv
sub
call
mull
mov
sbb
cmpsl
insb
shrb
sahf
out
push
mov
dec
pop
hlt
arpl
fwait
in
stos
and
clc
clc
mov
int3
push
jbe
fsubr
jno
mov
jl
or
add
push
fidivs
inc
pop
or
dec
sbb
pop
scas
xchg
pop
jne
jle
and
jbe
sahf
subl
test
jmp
fbstp
sub
sbb
addr16
push
dec
aad
sub
or
sbb
and
sub
sbb
mov
add
mov
out
push
push
mov
nop
and
adc
and
inc
int
pop
or
jl
mov
adc
or
push
addr16
es
popf
mov
push
popf
xchg
mov
andl
jb
xor
shll
jbe
mov
dec
jo
push
std
jmp
out
js
add
flds
in
pop
jae
rolb
shrb
add
mov
cltd
sub
rcr
leave
mov
pop
cmp
call
inc
sbb
xchg
add
arpl
jbe
fscale
mov
jl
subb
sub
insb
jg
int3
push
add
cmpsb
mov
mov
dec
hlt
into
jge
addr16
dec
fisubrs
leave
cmp
mov
sub
shrb
add
push
cmc
cli
cmp
dec
xlat
mull
subl
lret
xor
mov
in
and
addr16
push
addl
mov
push
ja
sahf
push
inc
or
mov
lret
xchg
mov
fldt
ljmp
push
adc
mov
aam
addr16
lea
scas
add
push
xor
rclb
testb
fsubrs
sahf
je
or
testb
jns
add
loop
mov
pusha
sub
in
clc
push
in
dec
daa
gs
ret
cld
pusha
mov
fwait
fs
xchg
cmpsb
push
dec
adc
repnz
pop
pop
fsubrl
mov
sub
and
pop
std
cld
lods
xchg
outsl
xor
mov
fnstsw
nopl
pop
xlat
mov
cmp
dec
lcall
shll
adc
xchg
xchg
test
xchg
inc
mov
pop
test
push
stos
or
cmpsl
stc
les
inc
and
lea
lret
fstl
int3
jno
icebp
lahf
xor
add
inc
xor
icebp
sub
iret
rcrb
test
movsb
shr
leave
divb
push
pop
mov
push
jnp
sbb
mov
fs
stc
ss
mov
loop
imul
arpl
add
clc
mov
in
sub
sbb
je
les
jbe
dec
ror
inc
pop
pop
cld
lret
pop
adc
inc
jmp
lcall
mov
cmp
sub
xor
sahf
push
mov
xchg
sbb
push
pop
jo
inc
loopne
jae
pop
repnz
or
inc
aam
cmp
mov
fdivrs
test
mov
ss
fs
aam
add
push
or
jecxz
cwtl
lods
fldt
or
lret
sbbb
leave
and
roll
jo
in
mov
push
je
aaa
xor
pop
mov
fldl
out
or
lahf
in
or
aad
push
int3
push
iret
dec
mov
push
ret
mov
cmpsb
imul
pop
inc
fdivs
mov
jbe
rorl
mov
fcompl
dec
movsl
fwait
mov
adc
fadds
iret
dec
and
setb
push
mov
data16
inc
sbb
sbb
sub
mov
aaa
shl
add
or
xchg
cmc
mov
cmp
and
jmp
push
jno
xchg
add
and
hlt
in
mov
sub
xor
jae
jle
push
js
xchg
mov
push
push
jp
dec
test
pop
fisttpll
insb
add
push
jmp
jnp
and
fildll
test
push
dec
cmp
imul
mov
mov
pop
cmp
lea
and
dec
addr16
inc
sbb
shlb
inc
inc
and
lret
out
lods
mov
sbb
xchg
inc
imul
sub
js
mov
icebp
rolb
lahf
ds
inc
mov
cmp
xchg
rorl
add
mov
ror
mov
sub
fs
jle
cwtl
es
cmpb
mov
out
cld
test
xchg
fidivs
subl
pop
or
loopne
rorl
inc
in
sbb
inc
fidivrl
call
fst
xor
xchg
lahf
lea
fadds
adc
in
jge
adc
aas
mov
out
imul
call
arpl
pop
cltd
stc
push
jne
or
imul
jge
or
sub
jnp
push
repz
mov
push
xor
aaa
ds
sbb
cmp
ja
dec
cmp
call
jbe
inc
inc
push
sbb
out
lret
push
xor
shll
fsts
cmpsb
in
inc
xor
mov
inc
mov
es
and
push
in
or
call
outsb
jge
adc
imul
push
or
cmp
mov
push
inc
add
cs
out
xchg
adc
cli
adc
add
mov
mov
out
loopne
mov
cmpsb
rcll
jle
sbb
lret
jns
fmul
jg
jno
fwait
jp
cmp
enter
cwtl
push
shlb
adc
jae
in
dec
inc
ja
int3
push
jb
testl
pushf
lret
andl
mov
ret
nop
ss
stc
sub
mov
jp
iret
mov
adc
inc
jo
push
jl
fs
and
les
or
bound
ss
mov
cs
and
xchg
lods
inc
lahf
adc
sbb
cltd
jp
adcl
insb
add
std
jns
lods
mov
call
sbb
das
mov
pop
pop
jo
cmp
adc
xchg
xor
xlat
les
push
dec
and
lods
movb
in
notb
repnz
or
enter
sub
rcrb
sub
in
pop
cmpsl
and
leave
push
mov
lods
pop
jno
inc
adc
sbb
out
inc
mov
pop
xchg
adc
stos
add
test
jbe
dec
mov
sub
shll
pmulhw
ljmp
ja
mov
inc
pop
mov
push
jl
push
dec
dec
insl
add
and
jno
mov
push
fdivrs
pop
inc
mov
xor
call
jl
or
rcrl
push
arpl
iret
pop
pop
xor
into
inc
pop
adc
cmp
repnz
lods
call
rcr
inc
test
leave
lret
bound
adc
cmp
mov
sub
inc
mov
and
or
test
xchg
ss
pop
fucomp
add
fucomip
sar
pop
mov
popf
out
iret
arpl
xchg
cmc
jne
dec
popa
rolb
dec
in
mov
push
jge
fbstp
mov
ja
cld
fisubrl
aaa
stos
add
xchg
mov
sub
aas
sub
jle
out
mov
sub
cld
scas
sbb
push
sub
push
pusha
cmpsl
aas
push
stos
push
inc
mov
in
cltd
mov
mov
mov
sbb
adc
jp
mov
xlat
add
push
xchg
jns
cmpsb
jo
mov
jmp
andb
cli
ret
pop
repz
shrb
cmpsl
insl
fimuls
arpl
dec
clc
into
cmpsb
call
shrl
hlt
mov
cltd
bound
add
mov
dec
pop
pop
inc
insl
in
adcb
inc
jno
sbb
mov
cmp
scas
jg
inc
and
enter
cmpsb
ds
sbb
das
or
push
add
jmp
push
int3
scas
xlat
sbb
pop
shr
add
lahf
movsl
in
nop
pop
mov
mov
jns
test
dec
leave
sbb
xchg
cmp
jbe
jg
sbb
push
stc
add
test
mov
jge
dec
adc
jns
sar
pop
and
dec
lods
stc
addr16
movsl
pop
sbb
or
add
cmpsb
push
push
js
in
cmpsl
jmp
mov
cli
int
pop
dec
leave
pop
xlat
mov
out
inc
mov
imul
cwtl
sbb
sub
xor
in
jmp
mov
add
push
mov
testb
mov
mov
and
js
and
add
or
cwtl
xor
jo
sahf
inc
negl
mov
jge
fildll
push
movsl
pop
add
adc
ja
les
sbb
sarb
jp
jp
popf
or
fs
mov
mov
movsl
jno
mov
sub
sub
out
cli
mov
xchg
idivb
mov
inc
into
xor
loopne
lock
push
jne
jmp
sti
sbbl
repz
mov
jae
bound
inc
dec
out
fwait
jecxz
fcompl
pop
aam
in
inc
mov
dec
jmp
mov
mov
in
mov
jl
jle
sbb
popa
pop
stc
cmp
cld
pop
sbb
mov
mov
clc
push
inc
mov
xor
arpl
dec
repz
push
jecxz
adc
in
or
mov
aad
mov
jb
mov
icebp
xor
fstp
in
imul
les
push
movsb
cmpl
cmp
jge
mov
mov
cmc
jo
test
mov
pushf
test
and
inc
and
lods
add
stc
testl
mov
add
cmpl
call
insl
sub
shlb
sarl
mov
cld
adc
stos
notb
jae
pop
add
pop
in
stos
mov
jg
lods
lock
and
jmp
cmpl
sahf
mov
adc
test
scas
call
lea
mov
les
pop
push
arpl
jg
mov
icebp
push
leave
cmp
daa
or
hlt
lea
add
and
ds
mov
movsb
jno
inc
pop
gs
mov
clc
adc
pop
and
adc
pop
inc
test
lods
sbb
in
cli
int3
sbb
push
mov
or
aad
inc
jo
push
sbb
insb
sbbb
mov
mov
das
push
mov
fdivrs
push
mov
int
jecxz
jp
mov
inc
mov
jo
jmp
imul
dec
lahf
add
fildll
pop
bound
and
add
adc
and
jmp
pop
xor
adc
stos
pop
sub
clc
pop
cs
push
adc
pop
ret
inc
jno
loope
mov
xor
or
int3
pop
daa
push
aas
cli
test
add
adc
scas
subb
aaa
mov
jle
lods
jle
fcoml
rclb
adc
notl
cld
sub
jnp
das
fsubrl
jp
cmpsb
lds
cltd
and
in
push
xchg
pop
cmp
inc
lock
sbb
xchg
xchg
ret
mov
aad
dec
mov
push
nop
notl
dec
push
xor
daa
fsubrl
inc
sbb
popf
popa
out
push
mov
ja
out
xor
mov
outsl
or
pushf
cmc
repnz
negb
js
int
popf
inc
add
daa
cmp
cmp
or
jp
out
leave
scas
gs
push
test
add
push
leave
repz
cld
arpl
addr16
enter
data16
pop
and
cmpsl
dec
push
mov
das
aas
or
sbbb
jg
icebp
jo
cmp
pop
addr16
and
es
mov
lret
iret
ljmp
jge
adc
movsb
jmp
or
iret
jo
push
dec
adc
mov
jge
test
pop
insb
pop
cwtl
pop
arpl
mov
sbb
ret
dec
cld
fsave
push
imul
pop
mov
scas
xor
shlb
push
ficompl
mov
pop
pop
add
dec
sub
mov
or
sbb
dec
int
pushf
jle
cmc
out
push
call
into
dec
dec
mov
rclb
adc
push
lods
sbb
mov
mov
pushf
cld
push
mov
inc
mov
mov
outsl
lds
mov
xorl
mov
or
lcall
sub
shrl
jo
xor
cmp
or
fisubrl
sbb
sub
or
jmp
cmpsb
push
ret
or
cwtl
cmp
pop
fidivl
mov
and
push
loopne
mov
adc
loopne
inc
dec
jp
mov
push
mov
jle
jnp
rclb
mov
xor
in
or
test
in
pop
fiadds
push
xor
inc
insl
les
mov
sahf
int
test
push
cltd
cmp
jne
or
mov
push
and
aas
scas
daa
sbb
in
mov
rolb
in
inc
mov
stc
push
dec
mov
lds
imulb
pop
ss
aad
ja
sar
mov
add
addl
clc
pop
mov
lret
enter
xchg
push
pushf
nop
loop
xadd
dec
ja
push
lods
stc
out
pop
mov
out
popf
out
sub
mov
xchg
imul
stos
jge
sub
test
js
cmp
nopl
xchg
inc
cld
xchg
cwtl
fadd
xchg
and
add
fwait
jmp
adc
inc
jle
pop
clc
inc
repz
adc
and
lcall
or
push
hlt
lcall
xor
jl
pop
sub
ja
test
pop
adc
cmpl
add
mov
in
dec
outsb
adc
or
sbb
int
inc
in
ss
gs
lea
ss
pop
jl
lods
ret
in
leave
cs
jo
fmulp
mov
test
jge
mov
push
loope
push
lret
nop
test
fnstenv
shlb
inc
sub
js
fmull
push
xchg
nop
movsl
push
out
sub
xchg
jp
or
loop
cmp
cmp
push
mov
test
popf
fldcw
mov
and
add
jns
push
ret
pavgb
cmp
pop
push
mov
add
xchg
std
pop
dec
lock
rcrb
je
mov
pop
loopne
fs
out
das
enter
rcl
imul
mov
inc
out
es
into
or
mov
ficomps
pop
sub
push
std
pop
lock
cmp
aad
ljmp
jle
pop
push
dec
xchg
jae
dec
or
enter
pop
pop
lods
insl
jg
ljmp
jecxz
fbstp
testb
mov
roll
cltd
xchg
cmp
lahf
xor
xor
in
push
mov
clc
push
add
nop
stos
mov
mov
sbb
xchg
xor
ret
or
inc
shll
mov
mov
mov
pop
in
mov
sub
aaa
ss
insb
leave
insl
push
loop
jae
dec
cltd
sub
jmp
and
out
imul
adc
rcrl
jg
fxch
adc
push
scas
fldt
sbb
mov
shll
cmpsb
lcall
in
mov
sarl
fisttps
lret
ja
jg
data16
pop
dec
jl
icebp
outsb
ret
loope
xor
lahf
pop
loope
dec
js
ficoms
xor
xchg
ljmp
cs
xchg
pop
js
gs
test
loop
jb
lahf
cmp
inc
sti
xchg
lds
sbb
mov
aad
dec
or
arpl
jne
popf
mov
mov
or
iret
push
popf
push
cmp
xchg
sbb
dec
xor
fs
add
and
pop
jecxz
pop
imul
adc
jbe
test
add
xor
stc
and
adc
pushf
add
dec
sub
addl
sbb
jo
cli
cmp
mov
jae
mov
jno,pt
daa
fs
pop
adc
fimuls
pusha
in
pop
les
xchg
sbb
nop
xchg
push
push
jo
outsb
push
icebp
clc
add
enter
sbb
addr16
pusha
jl
insb
movsl
ljmp
mov
filds
mov
leave
hlt
xchg
dec
std
and
ja
shrb
adc
idivb
fstp
mov
movl
pop
xchg
ljmp
push
fucomip
scas
sub
roll
mov
inc
push
rorl
pop
rol
outsl
and
push
push
inc
shlb
popa
sbb
mov
jle
mov
ret
iret
aam
nop
xchg
inc
ja
arpl
sub
cmp
lds
pop
jns
stos
add
sbb
mov
inc
sbb
adc
sbb
pop
leave
out
mov
and
rorl
loopw
adc
mov
or
rcll
xchg
or
mov
mov
outsl
cmc
sbb
push
cltd
stos
scas
mov
and
inc
or
rcl
in
mov
ror
push
xor
dec
fdivrs
lods
in
xor
push
cltd
push
arpl
push
jge
push
jp
movsb
je
nop
pop
jae
or
arpl
out
sub
pop
push
push
mov
sub
out
xor
sub
in
icebp
push
out
mov
insl
imul
mov
sub
idivb
bound
mov
repnz
and
push
and
in
mov
ret
cmp
add
add
push
sbb
std
ficoml
cltd
decl
or
push
into
jmp
call
fnsave
and
lret
out
dec
push
or
mov
pop
in
mov
cwtl
jbe
sbb
addr16
mov
out
adc
mov
cmp
sub
out
outsb
xchg
xchg
add
daa
mov
pop
push
enter
nop
in
adcl
sub
enter
adcb
lret
leave
inc
cltd
imul
arpl
inc
jmp
dec
insl
mov
xor
push
into
fimull
jecxz
out
lahf
fmuls
dec
leave
mov
aaa
ljmp
mov
outsb
cmc
ja
inc
and
int3
jbe
xchg
jl
iret
sbb
scas
inc
loopne
add
out
lock
inc
xorb
sub
loope
out
bnd
jmp
scas
or
push
inc
xchg
jge
add
fisubl
fbstp
insb
insb
mov
pop
cltd
int3
leave
push
mov
out
push
cmp
ficoms
popa
xchg
rcll
ret
imul
lret
sti
push
xrelease
sub
scas
mov
cli
gs
cmpsb
push
bound
lds
lea
xchg
je
pop
cli
xlat
filds
ret
pushf
cs
rclb
fildl
dec
into
cltd
inc
fs
in
mov
ds
sbb
sbb
mov
and
pop
sbb
aad
dec
dec
nop
movsl
les
xchg
inc
mov
in
jb
pop
sub
mov
dec
jbe
xchg
mov
jl
test
or
rorb
nop
push
paddsb
jl
stos
movsb
push
mov
sbb
fistpll
jo
jnp
sub
cmp
push
leave
inc
xor
test
lret
mov
lcall
jg
clc
bound
mov
mov
and
ficompl
fs
jne
adc
scas
lea
cmc
sbb
lahf
loope
cli
mov
mov
loope
mov
pop
sub
ret
std
data16
cld
push
mov
fdivrl
stc
xchg
inc
aad
xor
and
mov
enter
sahf
adc
push
sahf
ficoml
dec
sub
hlt
jmp
or
sub
cmc
shll
cmp
leave
pusha
and
rorb
in
inc
mov
in
cmp
mov
sub
cmp
push
xlat
testl
call
add
inc
pop
mov
das
jg
or
adc
data16
push
or
scas
mov
adc
cmc
inc
cmc
test
inc
mov
dec
jae
push
push
or
inc
gs
push
imul
pop
pop
add
xchg
fs
jns
fwait
in
insb
push
in
inc
popa
lock
fwait
mov
cmpsb
sahf
clc
cltd
shlb
cmc
adc
mov
jmp
pop
cld
jbe
jp
mov
in
mov
jge
adc
lods
daa
sub
cli
xchg
add
or
sbb
out
jne
push
lcall
add
mov
shll
loop
or
adc
mov
push
ss
cmpsb
test
ja
inc
pop
iret
fisttpll
adc
adc
adc
aam
cmc
sub
or
loope
mov
outsb
dec
ss
push
jg
mov
popa
push
dec
fwait
cmpsb
imul
outsl
jb
cmpsb
mov
lock
push
das
mov
lcall
fstp
cmp
popf
cmpsl
mov
add
rcrb
jg
daa
sub
cmp
adc
cmp
pop
insl
sub
or
push
and
lret
fisttps
mov
outsl
xor
cmp
mov
adc
xchg
push
xlat
add
outsl
shll
stos
pushf
lcall
add
hlt
sbb
imul
or
push
rorb
scas
xlat
sub
mov
xchg
inc
inc
dec
mov
sub
sub
out
or
lcall
push
rolb
nop
xchg
lea
arpl
push
add
mov
sub
mov
icebp
jo
and
nop
rcrl
and
add
or
jp
xchg
dec
loopne
loopne
mov
and
cwtl
cwtl
mov
cli
pushf
dec
or
das
adc
add
mulb
les
mov
fsubrl
push
cltd
test
cli
push
sti
dec
jmp
cmpsl
lret
cmpb
pop
lods
jecxz
lea
lahf
fisttpl
or
fdivrs
cmpsb
xchg
adc
ljmp
push
sub
and
cmp
push
add
mov
popa
sub
mov
js
enter
mov
adc
out
mov
jae
mov
std
inc
stos
test
push
arpl
add
movsl
adcl
aas
pmuludq
xchg
lret
jae
add
mov
jno
push
push
jno
sbb
push
sahf
les
and
mov
mov
add
push
lret
outsb
add
out
mov
adc
pop
jp
and
xchg
xchg
int
dec
pop
out
cmp
outsl
test
fwait
and
lods
out
jo
aas
add
test
mov
orb
mov
jns
pop
imul
cld
nop
data16
xchg
lock
and
loopne
lea
aad
btr
mov
iret
add
dec
lret
cld
pop
popa
xor
jb
dec
push
cs
arpl
mov
ss
mov
leave
hlt
imul
pop
rcr
sbbl
jb
mov
push
es
or
movsb
jmp
push
push
stos
shlb
das
mov
stc
andl
aas
jecxz
cwtl
aas
arpl
fidivrl
repnz
xchg
shl
mov
push
mov
je
mov
fs
fcmovb
rcr
inc
mov
pop
mov
hlt
leave
sbb
xchg
test
test
mov
sbbb
insl
push
push
sbb
xchg
add
xchg
add
insb
in
fadds
hlt
lcall
ss
jns
add
leave
inc
into
or
popf
clc
inc
scas
rcl
xchg
jp
inc
mov
out
test
mov
push
or
add
rclb
out
or
jbe
loopne
ljmp
fs
jb
iret
jecxz
inc
pop
and
pop
negl
pop
cmc
mov
cmp
mov
dec
jnp
fucomi
xchg
sbbl
lds
jne
inc
cmp
cmp
push
imul
mov
dec
insb
push
and
bnd
inc
jae
sbb
ljmp
xorb
sub
lahf
popl
dec
or
sahf
xlat
fsubl
jle
movsl
mov
ret
mov
out
mov
sbb
push
loope
hlt
mov
sub
and
xlat
stos
cmp
stc
out
out
pop
in
fstpt
xchg
int
sbb
sub
adc
aaa
push
movb
mov
in
cmp
mov
mov
loop
or
repz
mov
mov
pop
es
imul
jp
dec
divb
cmp
mov
loopne
std
push
ljmp
adc
cmp
jle
lods
xor
sahf
mov
and
mov
xchg
xchg
int3
cmc
dec
sti
negl
orl
out
insb
mov
mov
sub
push
and
std
popf
adc
cwtl
arpl
shrl
es
data16
bound
ljmp
mov
dec
mov
insl
outsb
mov
cli
outsb
dec
cmp
xor
add
mov
cwtl
adc
js
lods
inc
push
sbb
les
mov
pextrw
and
popa
sub
lods
leave
int
pop
or
shl
add
shrb
sbb
es
cmp
xchg
jg
hlt
mov
into
mov
mov
aad
repnz
jns
lcall
ss
scas
jmp
push
push
pop
es
cmc
pop
jb
mov
mov
adc
insl
repz
xchg
mov
or
pop
sti
mov
sub
hlt
lock
test
add
jns
inc
popl
and
aam
fs
imul
pop
sub
jl
es
daa
notb
mov
push
aas
daa
dec
cmc
nop
xchg
push
jmp
push
rorl
jl
mov
int3
lret
ffree
inc
imul
cmp
subb
push
insl
xchg
daa
mov
pop
add
bound
sub
xlat
adc
inc
cmpsl
andb
inc
in
push
divb
sar
cmp
div
fxch
mov
sbb
pop
lods
fstl
adc
pop
push
lret
ret
xchg
loop
movsl
shrl
ret
mov
scas
arpl
adcb
lret
push
shr
sti
mov
ss
xor
jns
std
or
inc
scas
mov
into
out
xchg
or
jns
lock
out
les
jae
mov
mov
rcll
inc
js
fwait
dec
pop
lea
in
mov
sarb
pop
gs
pop
lea
test
push
in
ret
sbb
xchg
movsb
rolb
arpl
push
pop
stc
pop
sbb
test
mov
mov
shl
int
scas
push
int
push
repz
xchg
mov
test
mov
mov
push
adc
fwait
xchg
bound
addl
pop
jb
xchg
lds
repz
add
or
jno
into
xchg
jb
inc
pop
pop
push
outsb
push
test
loope
pop
cld
mov
adc
repnz
pop
jmp
push
fistpll
sub
in
sti
ret
mov
ja
inc
movsb
pop
push
or
mov
fldt
aad
lahf
or
mov
jecxz
mov
cmpsb
das
mov
fwait
mov
adc
pop
mov
jmp
jecxz
sub
mov
jno
jl
cmp
adc
imul
test
ss
mov
fidivrl
js
fmuls
xchg
lock
int
mov
ss
clc
add
jb
je
dec
int
lock
push
loope,pt
ret
jmp
xchg
cwtl
andb
pushf
xchg
sbb
bswap
and
push
add
or
xchg
xchg
mov
lods
out
push
mov
dec
orl
and
in
rorb
or
leave
mov
inc
lahf
jne
add
xchg
pop
lock
sub
cmp
adc
into
xchg
in
add
shl
fwait
jg
out
fwait
aad
jbe
sub
jp
push
lahf
mov
mov
pop
testb
xchg
mov
nop
xchg
enter
push
cli
test
fimull
push
bound
ljmp
push
std
mov
xlat
pop
clc
pop
fiaddl
push
adc
aam
jb
jns
add
push
pop
and
rol
jae
iret
jle
xchg
iret
add
int
ss
es
int3
sahf
fimuls
gs
popa
out
cltd
pop
mov
cmpsb
lret
cmp
jecxz
or
stos
add
stos
cli
add
sbb
pop
cli
sub
pop
and
call
dec
out
mov
jmp
cwtl
mov
dec
lcall
out
mov
loopne
adc
shll
js
lods
xor
adc
fbstp
movsl
insl
xchg
andb
mov
popf
inc
sub
cs
xlat
and
sub
pop
outsb
cmp
add
fmull
push
mov
in
xchg
negb
es
xchg
xchg
inc
sub
jo
xlat
stc
in
inc
jo
les
adc
insb
outsl
fcom
sarb
sbb
jae
mov
cmp
rcpps
inc
sub
scas
mov
pop
mov
and
or
popf
add
push
es
fstps
xchg
push
cwtl
dec
add
adc
insb
sbb
pop
mov
mov
or
scas
mov
fdivl
mov
jne
into
adc
inc
push
mov
int3
push
js
jle
xor
rcrl
push
lock
sbb
mov
cmc
xor
adc
out
sub
data16
pop
lock
fstps
sbb
mov
xchg
mov
xchg
mov
xchg
out
xor
dec
inc
or
aam
in
or
loopne
stc
cmpsb
je
rcrl
sub
notl
dec
icebp
dec
inc
jle
inc
and
mov
popa
scas
stos
push
or
cs
cmp
imul
fwait
push
push
inc
mov
ja
aam
orl
dec
inc
outsl
sub
in
addr16
popf
rep
mov
xchg
add
outsb
xor
inc
scas
or
jmp
sbb
repz
int
adc
xchg
test
test
push
mov
or
push
insb
arpl
xlat
stos
sti
add
pop
imul
lds
sub
sahf
xor
dec
filds
arpl
mov
cs
inc
insb
mov
repnz
lret
mov
inc
inc
int
pop
out
mov
add
mov
in
pop
push
mov
or
cmp
popf
xor
sbb
jecxz
orl
out
rcl
or
xchg
fs
add
sbb
add
xor
pushf
xor
mov
enter
movsl
xor
leave
xlat
and
inc
insl
cmp
pop
mov
hlt
mov
mov
ret
cli
repz
sub
adc
jae
adc
aas
lret
shrb
mov
movsl
insb
fdivrl
movsb
add
es
mov
int3
mov
sub
gs
repz
ret
cmp
das
imul
push
scas
out
icebp
cmp
sub
sub
lea
movsl
lock
inc
cmp
sub
in
dec
add
aad
pushf
movsl
inc
sbb
xchg
cwtl
pushl
pop
jae
fldl
aad
jg
and
rolb
mov
push
mov
popa
add
jge
or
push
lret
aas
out
add
js
xor
jns
dec
or
xchg
ljmp
ljmp
stc
cld
push
iret
out
dec
lods
ss
pop
xor
arpl
scas
repz
ret
dec
iret
out
mov
lcall
shll
pop
jge
scas
data16
shll
arpl
mov
lret
mov
std
mov
dec
stos
mov
ljmp
push
int3
lods
out
aaa
test
sub
xor
adc
arpl
push
mov
add
out
pop
lret
scas
lahf
cmp
cmp
adc
inc
adc
out
stos
mov
jnp
jge
movnti
push
add
pop
scas
adc
cmc
dec
out
aad
enter
cmp
sti
sti
subb
fimull
sbb
clc
push
xor
mov
jo
cmp
cs
cmp
push
jnp
ret
dec
dec
xchg
mov
xor
and
and
sahf
sub
jnp
sub
xchg
jge
push
adc
lret
fdivrs
mov
test
into
fucomi
mov
insb
mov
cmp
xchg
and
and
jmp
jbe
push
pop
dec
stos
in
icebp
mov
mov
cltd
xor
stos
sub
insl
xor
mov
movsb
mov
outsb
mov
cmp
sbb
inc
cmp
dec
mov
jp
add
add
and
adc
and
and
xor
xor
out
pop
jle
mov
mov
setns
cwtl
push
pop
jbe
mov
insl
das
enter
mov
adc
xor
pop
arpl
addb
imul
sub
jae
xchg
mov
leave
nop
addl
test
lea
cmp
insb
sbb
jge
sbb
pop
pop
stos
mov
in
sbb
mov
push
test
mov
push
inc
sti
mov
add
sahf
pushf
fwait
fs
ret
hlt
movsl
mov
adc
dec
gs
pop
outsb
icebp
sub
ds
sbb
in
push
and
stos
pop
je
lods
mov
mov
jae
gs
and
mov
iret
jge
inc
inc
fdivr
sub
and
mov
sub
sbb
mov
arpl
mov
loopne
sub
popa
outsb
xchg
adc
cmpsb
add
dec
add
in
std
popf
ss
mov
fsubs
xchg
or
adc
or
pop
pop
dec
das
xchg
mov
mov
xor
outsb
push
inc
adc
inc
xor
jno
rorl
ljmp
frstor
dec
jmp
push
pop
or
mov
test
xchg
cld
sbb
mov
jmp
outsb
xlat
fwait
sub
mov
xchg
add
dec
js
jp
xchg
push
cmp
aam
push
push
data16
sbb
fstps
aad
cmp
test
push
pop
add
adc
test
push
fwait
inc
stos
stos
in
adc
push
mov
mov
inc
add
int
popl
dec
mov
dec
xor
sbb
subl
sub
ja
ret
add
jge
jmp
fnstcw
clc
rorl
mov
xor
sbb
xchg
and
ljmp
arpl
scas
data16
addr16
lea
in
pop
mov
push
mov
jnp
pop
mov
rcr
sub
les
sub
pushf
insb
sub
push
push
and
adc
arpl
orl
es
jo
sbb
pop
sub
cmp
jne
xchg
fcoml
rclb
jno
nop
pop
xchg
add
jl
fidivrs
mov
sub
push
popa
xchg
or
adc
sub
xor
lcall
sub
cmp
ljmp
mov
push
fldl
outsb
xchg
sub
or
jl
mov
push
add
mov
stos
push
sub
mov
pop
mov
xor
xor
sbb
adc
daa
push
sahf
ret
jg
lods
cmc
pushf
ret
xchg
cmp
popf
inc
int3
sbb
fs
getsec
lock
or
decb
inc
pusha
sbb
add
lods
test
inc
mov
aad
or
test
and
mov
mov
repnz
push
mov
sahf
pusha
jmp
pushf
mov
mov
loopne
sub
pop
inc
xchg
fwait
mov
lcall
xor
pop
insl
aas
les
subl
es
mov
cmp
xchg
jmp
push
ret
or
insb
fdiv
popa
inc
xchg
enter
lock
in
rcll
cmc
imul
lock
ljmp
ret
in
pop
mov
xchg
xor
mov
xchg
push
xorps
mov
insb
leave
push
stc
incl
pop
subb
add
and
push
cmp
push
test
xlat
imul
xor
mov
je
adc
mov
xlat
push
sbb
xchg
mov
mov
adc
inc
or
push
or
pop
stos
sbb
cmc
jp
daa
add
push
sbb
aaa
dec
lock
outsl
test
je
jmp
mov
pop
inc
pop
les
mov
xchg
mov
dec
add
aaa
and
movsb
inc
shlb
xor
dec
mov
cmp
pushl
jmp
lret
ficomps
mov
imul
sub
adc
in
cmp
mov
or
xchg
xorb
mov
cmp
jne
call
fadds
jae
jnp
cmp
inc
push
push
sbb
mov
adcl
mov
mov
push
inc
sbb
mov
shll
loope
cmp
jns
int3
aam
scas
xor
push
jg
sub
leave
cmpsb
stos
movsl
adc
pusha
sub
or
sbb
movsb
cmp
repz
imul
xlat
scas
in
dec
or
inc
adc
clc
jge
aaa
xor
push
das
std
push
gs
addb
ror
scas
loop
sbb
fsubs
scas
push
mov
mov
js
repz
dec
push
ret
outsb
popf
push
pusha
imul
into
jecxz
fildl
mov
andnps
pop
push
fwait
int
sbb
cmp
add
push
scas
mov
stos
and
xchg
call
es
loopne
mov
in
out
fdivl
jl
xchg
ret
mov
aaa
xor
sbb
add
cmpl
fstpt
xchg
shrl
outsb
neg
add
in
pushf
pushl
pop
sub
push
test
insb
and
lret
push
pop
mov
jmp
jmp
xchg
inc
inc
loope
loop
cmpsb
loop
mov
cmp
or
je
xor
push
jg
cmpsl
or
mov
aas
ret
loop
fwait
mov
stos
mov
push
out
pop
sbbl
dec
dec
sub
xchg
std
cmc
add
and
adc
lods
in
push
jmp
push
sub
push
out
or
sub
mov
sub
imul
or
ds
and
stos
mov
sarb
and
push
inc
pushf
add
inc
cmpsl
xor
data16
push
mov
and
xor
testb
mov
fimull
mov
jmp
jecxz
fidivs
movzwl
mov
mov
sbb
loope
ret
bnd
outsl
ljmp
add
sbb
dec
ret
repnz
adc
fildl
js
xchg
mov
pop
or
cmpsl
sub
mov
push
cmp
push
push
mov
pop
fiaddl
dec
push
mov
pop
cmpsl
xchg
push
bound
mov
or
adc
aad
out
paddusw
xor
jle
pusha
push
jns
mov
xchg
cmp
fidivrl
aas
pop
movsl
jne
or
add
add
out
cwtl
les
mov
xor
lock
nop
cwtl
dec
push
shll
xor
pushf
mov
add
jle
nop
cld
xlat
pop
in
clc
les
xor
dec
sarb
out
int3
outsl
mov
clts
ss
pop
aaa
jbe
mov
insl
mov
pop
push
dec
push
lahf
dec
and
xchg
add
sbb
sti
push
call
jne
rcrb
dec
mov
dec
imul
aam
lods
add
test
xchg
pop
jge
sub
inc
xor
incb
int3
bound
pop
imul
xor
xlat
stos
pop
sbb
test
int3
lea
inc
pop
cmp
iret
or
lods
out
shr
xor
sbb
int
test
jle
sub
mov
cmpsl
inc
cmp
ss
addr16
inc
lods
in
ret
add
test
call
popf
cmp
sub
jno
mov
mov
xchg
lret
or
xchg
or
adc
rcl
or
mov
dec
jg
dec
and
dec
out
mov
aad
stos
movsl
sti
push
das
mov
dec
je
jl
popl
cmpsl
xchg
xor
int
jg
adc
lea
adc
inc
ret
stos
and
stos
cs
add
popa
lods
jle
aaa
xor
push
ljmp
addr16
sahf
mov
jmp
pop
insb
insb
insb
sti
push
outsl
aam
shll
push
pop
cld
adc
jne
lret
mov
icebp
and
jg
test
xchg
jne
xor
lahf
dec
fldl
je
rorl
out
aam
dec
fdivs
addr16
call
sub
jns
mov
inc
decl
xchg
pop
dec
xor
push
mov
dec
pop
aaa
pop
jb
nop
cs
push
pop
jmp
xchg
ds
arpl
mov
icebp
test
cld
sbb
shl
mov
mov
outsl
dec
mov
dec
scas
fcomi
and
popa
push
ss
ss
rcrb
dec
sub
lods
sahf
fwait
ret
sbb
fmuls
cmpsb
aas
push
cmpl
imul
js
movsb
dec
jmp
bound
and
cmpsl
js
jb
xchg
test
mov
inc
popf
cmpsb
push
mov
pop
pop
int3
decl
pop
lds
rorl
lods
ljmp
movsl
push
shrb
mov
test
pusha
cwtl
xor
dec
adc
repnz
sub
jnp
outsb
add
mov
push
imul
mov
xchg
jl
xor
add
ret
and
orl
mov
adc
lret
scas
out
mov
sbb
mov
push
fnstsw
hlt
cmp
dec
mov
aas
mov
aas
inc
imul
in
push
xorb
inc
and
sbb
inc
lods
sbb
andb
mov
cmpsl
mov
adc
pop
ja
mov
in
inc
jl
imul
xor
scas
xlat
out
add
cmp
push
es
or
daa
into
insl
jle
sbbb
rcll
xchg
mov
test
test
cmpsb
adc
fdivrs
arpl
mov
mov
jge
pop
or
out
dec
cmp
sti
push
push
push
ds
dec
into
sub
aam
dec
ds
aas
addb
shll
cmp
dec
repz
repnz
pop
inc
test
push
inc
into
out
cs
ss
inc
cmp
int3
outsl
lret
mov
push
sarl
mov
add
bound
xchg
push
lcall
mov
ss
cmp
cmp
cmp
jne
imul
and
cmp
jmp
and
insl
mov
loop
jnp
imul
add
mov
push
aad
js
mov
out
dec
loope
jecxz
push
inc
aad
xchg
cltd
push
mov
mov
push
mov
cmp
addb
shl
out
lahf
inc
xchg
sub
fidivs
xor
fstpt
adc
lcall
adc
orl
popf
movsl
inc
or
insb
in
fisubs
mov
in
popf
mov
or
adc
iret
mov
mov
outsl
mov
sub
repz
in
adc
sahf
dec
cmp
sub
in
mov
nop
dec
cmp
mov
cs
loope
jns
mov
scas
insl
je
lret
pop
cmp
addl
lock
jp
sbb
int3
push
push
shlb
movb
xor
lret
loopne
adcl
repz
outsl
mov
stc
inc
loop
adc
out
xor
ljmp
mov
mov
jo
add
and
repz
lds
scas
cmc
pushf
mov
or
mov
push
sub
aaa
test
push
fsts
or
pop
arpl
pop
nop
xor
adc
fcompp
fisubrs
loop
lods
push
mov
pop
lods
dec
mov
jno
sti
stos
dec
and
push
jne
jl
inc
pusha
mov
pop
xchg
push
push
lcall
push
pop
or
mov
pushf
push
out
out
lock
fildl
pmullw
jp
mov
mov
push
mov
dec
cltd
dec
std
mov
je
je
test
add
cmp
dec
mov
js
push
xchg
subb
xor
fnstcw
xchg
add
or
adc
inc
pop
inc
mov
mov
jecxz
jno
dec
jp
or
add
add
mov
stos
imul
orl
add
jno
icebp
js
repz
push
xchg
xor
lret
test
mov
in
popf
xchg
dec
pop
lds
shrl
xchg
sub
sub
adc
fldt
mov
push
lods
mov
adc
test
xchg
jmp
push
cmpsl
ljmp
mov
dec
jb
shrl
mov
lret
fcomps
scas
inc
push
mov
or
dec
jle
mov
cli
mov
lahf
test
leave
inc
add
xchg
insl
aam
stc
loopne
in
or
popf
xchg
aam
pop
data16
sti
enter
ret
jns
mov
scas
adc
insl
xchg
push
mov
movsl
add
movb
cmp
je
jo
pop
pop
or
push
sti
lods
add
test
adcl
lea
push
pop
lahf
sub
cld
jo
icebp
imul
outsl
jge
push
xchg
fmull
jp
jmp
popf
cmp
add
fcompl
je
jne
bound
loop
lret
add
mov
adc
jb
arpl
scas
or
mov
xor
cmp
push
push
add
mov
add
lahf
pop
movsl
stos
push
lahf
outsl
add
in
pop
cwtl
mov
or
xor
xchg
loope
lahf
shr
cmpsb
stos
mov
test
pop
ss
adc
mov
cmp
mov
stos
iret
inc
or
pop
int
push
adc
sub
lock
mov
xor
cmp
es
imul
add
dec
push
lods
sub
sarb
push
dec
jge
cmp
add
dec
movsl
cmovl
icebp
or
mov
cmpsb
fisubrl
test
test
hlt
sub
or
or
fnstsw
mov
pushf
cmpsl
std
fisttps
pop
mov
xlat
pusha
cld
cli
lods
imul
lret
loope
mov
and
jbe
xor
mov
cmc
bound
jl
lock
inc
out
fbld
mov
push
push
sub
aas
pop
cmpsl
fwait
xchg
jnp
mov
int3
imulb
insb
ror
pop
pop
pop
add
mov
mov
jnp
mov
pop
xlat
icebp
in
jno
push
addb
add
pushf
mov
mov
lcall
idivb
mov
hlt
inc
sub
xor
popa
mov
push
jecxz
lods
jo
arpl
and
xchg
lret
and
sahf
adc
lds
mov
push
mov
fistpl
mov
test
je
dec
rorl
and
sahf
scas
call
popa
add
sahf
in
pop
push
mov
paddb
mov
bound
xchg
cmpb
sbb
mov
fnstcw
sahf
aad
pop
push
pop
jge
adc
adc
mov
xchg
xlat
dec
pop
jmp
mov
xor
xchg
mov
add
inc
pop
gs
ds
mov
int
push
rcll
or
std
jmp
icebp
pop
jmp
jge
jno
and
int
and
pop
das
jne
ffreep
cwtl
adc
outsb
stc
fcompl
adc
sbbl
pop
cld
jg
in
incl
xchg
pop
and
mov
push
pusha
xchg
adc
and
outsb
daa
adcl
add
and
sbb
jecxz
jb
jmp
dec
xor
lods
and
push
div
fsubrs
pop
ror
into
xchg
dec
push
add
pop
hlt
pop
fiadds
push
add
mov
xor
mov
popa
inc
mov
cmp
inc
sub
cmp
cmp
xchg
adc
mov
in
shr
dec
push
rclb
add
mov
insb
mov
xchg
push
repnz
rcll
and
inc
fldcw
jle
and
xchg
pop
xor
jns
pop
dec
fistpll
int
pop
fldt
inc
scas
in
test
xchg
cli
popa
jnp
adcb
xor
lods
sbb
aad
and
pop
arpl
out
orl
test
fisubl
rcrl
cmp
imul
mov
stos
xchg
dec
sbb
inc
rclb
das
push
andb
cwtl
lock
data16
pop
test
cmpsb
or
neg
repnz
iret
or
sti
push
popa
push
sub
push
jle
jg
push
fistps
push
cmp
imul
lret
jle
sahf
pop
test
cmp
in
ret
mov
fisttpl
mov
outsl
pop
arpl
jae
dec
aas
not
pop
insb
inc
push
or
std
out
dec
xchg
shl
mov
add
addl
mov
push
push
mov
mov
mov
icebp
mov
mov
mov
test
mov
shll
movsb
pop
add
adc
or
repnz
es
mov
loope
push
push
and
dec
or
mov
mov
dec
cmpsl
mov
mov
and
jecxz
daa
jb
bound
in
fs
push
push
jg
cmp
add
mov
sbb
sub
mov
icebp
jns
mov
xlat
stc
popa
push
push
nop
sbb
xor
sub
bound
sub
sbb
mov
imul
add
pop
add
arpl
popa
xchg
push
ljmp
pusha
inc
popa
fstpl
pop
fbld
test
cmp
push
test
xchg
xor
aaa
push
mov
jp
std
fisubrs
scas
and
inc
fimuls
enter
dec
je
inc
pop
adc
cmpsl
into
push
lods
push
push
adc
pop
mov
aam
dec
adc
sbb
or
lahf
xor
shll
mov
cs
mov
pop
shll
nop
mov
xchg
fstps
pop
dec
fldt
fsubrs
out
insl
lret
xor
mov
add
in
mov
sub
cmp
xor
adc
fcmovnbe
addl
push
frstor
out
pop
inc
sbb
iret
xchg
mov
pushf
ret
cmp
call
rolb
test
mov
icebp
pop
jmp
push
sbb
dec
ljmp
lret
mov
mov
sbb
sub
test
or
in
add
push
pop
into
jmp
dec
pop
jns
lds
adc
out
les
mov
cld
std
adc
leave
jne
rcrl
aad
ss
xchg
mov
lcall
idivb
sub
jbe
fcmove
dec
add
addl
sub
scas
addr16
icebp
mov
cmpsb
out
ret
push
jmp
mov
fidivrs
push
leave
cmp
pop
inc
pop
call
dec
push
lock
xlat
push
sbb
ret
ret
sti
xchg
imul
in
cmc
pop
and
loop
jmp
fcompl
xchg
sbb
in
cmpsl
popa
jmp
mov
inc
xchg
xchg
shr
popf
xchg
cmp
jbe
repnz
cwtl
jnp
leave
insl
clc
xchg
in
nop
xchg
rcrb
aas
lahf
cmp
mov
mov
lahf
aaa
out
loop
orb
lahf
cmp
pop
icebp
iret
fprem1
rcrb
icebp
inc
adc
pop
push
mov
lcall
sti
mov
andl
add
pop
movzwl
fs
out
xchg
inc
pop
push
in
xchg
adc
outsb
add
data16
cmp
jae
cmp
cs
or
sti
adc
xchg
push
movsl
xchg
pusha
int3
xchg
fmuls
jbe
mov
adc
dec
dec
fsubl
xchg
xchg
mov
lret
push
arpl
inc
enter
xor
ds
mov
mov
xlat
roll
cmp
icebp
into
leave
inc
lds
mov
inc
sub
sbb
lods
adcl
dec
and
ret
dec
mov
inc
mov
xor
pop
arpl
add
loop
cmp
or
jnp
std
jp
outsb
mov
dec
mov
dec
add
sbb
push
lea
clc
sbb
mov
cmp
stc
pusha
or
data16
xchg
mov
sbb
js
aam
add
test
call
xor
mov
movsb
fs
data16
cmc
xchg
adcb
subl
outsb
sbb
pop
mov
jo
sub
lock
push
addr16
dec
cmp
mov
cmpsl
bound
lret
dec
xor
pop
imul
or
repz
xor
push
aam
in
std
sub
imulw
cltd
sbb
cmp
orl
pop
fcmovb
xchg
jno
imul
lea
rcll
sarb
iret
mov
add
orl
lahf
lods
and
cmp
cli
jb
repz
adc
fildll
mov
push
cmc
cmp
adc
mov
dec
int3
mov
pop
push
push
arpl
cs
stos
jmp
test
mov
inc
dec
or
mov
add
test
outsb
pushf
fwait
shrl
test
out
mov
ret
and
ss
push
rolb
pop
sti
mov
or
jae
and
insl
mov
mov
cld
sarb
push
pop
xor
sahf
mov
rolb
ret
mov
push
inc
push
add
mov
js
adc
push
sbb
and
adc
lcall
adc
push
sbb
movntq
repnz
dec
xchg
mov
xchg
mov
push
mov
into
mov
cli
leave
aam
clc
sbb
xchg
and
lsl
lgs
push
and
test
adc
and
lcall
xor
xchg
std
push
outsb
mov
out
mov
dec
popa
in
rcrl
adc
nop
cld
stos
sub
mov
fdiv
cltd
decl
mov
adc
xchg
dec
test
adc
push
push
testb
fwait
leave
cmp
xor
call
dec
cmp
xor
pop
pslld
jno,pt
pushf
imul
stos
pop
sbb
stos
add
mov
addr16
lea
bound
lret
push
mov
ja
aas
sbb
push
lret
iret
mov
xor
leave
test
in
xor
mov
addl
mov
cli
ret
xlat
xor
aad
bound
or
sub
xchg
mov
and
inc
les
push
inc
std
sar
lods
test
bound
out
testl
int3
stc
pop
shrb
in
adc
stos
cmpsb
xor
xor
scas
xor
inc
cmc
adc
out
mov
rorl
imul
mov
xor
loopne
xchg
fcmove
adc
scas
clc
test
imul
rorl
pop
shlb
inc
test
dec
js
mov
jns
dec
mov
icebp
cld
out
fsts
in
movsl
pop
lock
mov
movsb
jno
pop
xchg
dec
sub
imull
mov
jmp
jmp
xchg
aad
data16
call
je
sbb
jmp
jbe
mov
sbb
push
fwait
shrl
dec
stos
popf
mov
pusha
pop
cmp
xchg
outsb
sbb
or
push
int3
xor
lods
sbb
pop
jne
or
ret
dec
mov
int
xor
pop
sbb
aad
fidivl
shrb
dec
je
out
dec
pop
xchg
cmp
or
inc
cmpsb
cmpb
dec
mov
loope
lret
cmpsb
dec
add
aam
inc
insl
insb
bound
push
pop
lock
cmp
pop
push
mov
inc
adc
icebp
xchg
or
insl
xchg
cs
mov
fisubs
int3
call
lcall
cmp
mov
mov
push
jb
jbe
dec
jae
in
repz
stc
mov
xchg
pop
js
mov
sarb
leave
sbb
jg
pop
pop
aam
rcrb
cli
movsl
data16
mov
mov
fdivs
xlat
loopne
adc
loop
dec
jae,pn
stos
lahf
cltd
das
sbb
mov
jnp
jno
cmp
push
cmpsb
lret
xorl
leave
shl
mov
movsb
or
adc
dec
push
push
out
xchg
aam
pushf
xchg
jbe
dec
add
sbb
ret
lcall
xchg
stos
wrmsr
repz
loop
xor
sbb
and
push
add
addr16
orb
sahf
jbe
test
push
int
repnz
movsb
das
sarb
sub
adc
test
jp
pop
icebp
xchg
pop
faddl
fs
nop
dec
mov
movsb
das
push
out
sub
adc
mov
fimull
jecxz
xor
fwait
das
mov
cmp
sbb
jmp
lods
loope
inc
jmp
push
pop
lock
lea
push
imul
fadds
adc
lods
sbb
adc
addb
push
in
dec
sub
je
inc
mov
cmpb
rolb
jns
xor
or
sub
add
cmp
jp
clc
jl
enter
inc
mov
pop
add
jnp
aas
mov
fwait
pop
in
mov
in
mov
jo
sub
aas
and
fldt
push
in
sub
imul
lods
jmp
aad
loope
cli
into
cli
movsb
ret
pop
jns
sbb
and
lcall
test
cmp
xchg
mov
lcall
lods
enter
push
sub
sbb
dec
scas
out
add
dec
repz
jbe
insb
enter
movsl
je,pt
cmpsb
fcmovnbe
pop
std
lods
push
jnp
sub
mov
imul
addr16
and
mov
repnz
iret
cmc
stos
lahf
sbb
popa
jp
add
stos
add
ret
adc
aas
cli
jle
add
pop
mov
notl
hlt
cwtl
cmpsb
xor
cmp
sbb
add
dec
mov
xor
insb
int3
adc
adc
addr16
gs
fcmovnu
int
mov
repnz
push
ljmp
cmp
push
push
enter
mov
fsts
outsl
inc
leave
sub
cmpsl
stc
pop
fstpt
rsqrtps
aam
icebp
shlb
jbe
jo
aad
sub
jnp
push
idivl
in
stc
xchg
or
inc
rclb
ror
cmc
into
test
xor
jno
add
jmp
add
push
jge
lahf
ficoml
fisttps
sbb
xchg
cmpsl
negb
loope
lods
mov
adc
les
fdivrp
pushl
js
lods
pop
mov
arpl
sbb
mov
mov
lods
cltd
icebp
mov
stos
sub
mov
mov
adc
sbb
inc
push
andl
xchg
add
adc
adc
push
movsl
roll
sbb
cltd
pop
and
sub
fwait
dec
lcall
push
pop
cmp
sbbb
xchg
sbb
in
jecxz
mov
or
addr16
jnp
stos
test
add
add
xor
adc
cmc
pop
add
rclb
outsb
sub
shll
fxch
inc
sarb
daa
divb
cmpsb
rcrb
outsl
insl
jae
sbb
mov
sahf
outsl
in
gs
xor
push
or
std
mov
cmc
xchg
adc
cli
stos
fcomps
push
repnz
loope
pushf
jb
and
jbe
pop
xchg
pop
adc
xor
cli
loop
out
sar
iret
pop
enter
add
xchg
mov
mov
js
mov
mov
subb
push
xor
xchg
sarb
adc
mov
iret
or
ja
push
push
orb
pop
pop
sub
repz
xchg
sti
jmp
ja
aaa
cmp
movsl
xchg
cmp
test
ds
adc
mov
ss
repz
jecxz
aas
cmpsl
inc
pop
leave
addps
pushf
cmp
add
cmp
sub
test
jecxz
mov
push
adc
sub
or
adc
cmp
rcrb
iret
icebp
dec
or
ljmp
mov
fsts
fwait
and
mov
xor
in
repnz
outsl
out
es
add
mov
aam
sub
lea
ljmp
mov
cmp
push
out
add
xacquire
imul
scas
lret
and
sub
dec
ljmp
mov
loope
or
test
sti
mov
add
push
cmpsl
mov
inc
push
adc
dec
fdiv
std
mov
cs
nop
in
mov
gs
andl
aas
in
rol
add
sub
mov
and
mov
cmp
mov
cmp
sarl
inc
pop
sub
adc
or
out
vpaddd
pop
andl
xlat
mov
ret
jecxz
test
fisubrs
clc
aad
xchg
pop
mov
mov
in
ja
mov
push
mov
addl
pop
data16
add
push
xchg
int3
xlat
cld
xchg
popa
cmp
push
aam
in
hlt
fwait
push
dec
sbb
stos
sbb
pavgb
popf
out
mov
mov
andb
sbb
flds
out
idivb
stos
push
fistps
mov
js
insl
add
call
xchg
mov
mov
push
ljmp
mov
and
and
and
rcll
mov
cli
inc
rorb
push
or
and
rorb
jp
sub
loop
out
inc
in
or
icebp
add
scas
dec
mov
das
sbb
ljmp
dec
fistl
test
push
jle
sub
sub
and
mov
sbb
mov
add
xor
mov
lock
jg
mov
rcl
fsts
adc
popa
int3
and
pop
sub
in
test
dec
cmp
roll
loop
repnz
or
imul
xchg
xchg
mov
loopne
lds
cmp
add
or
ret
aas
mov
outsb
jmp
shrl
pop
xlat
inc
push
fdivl
dec
fyl2xp1
and
shlb
test
pop
out
fwait
repnz
mov
dec
mov
inc
jno
cmp
ficompl
lret
icebp
sub
sbb
dec
fwait
pop
in
cmpsb
lock
dec
das
mov
inc
sbb
jl
and
popf
lea
cmp
pop
xchg
in
dec
cmpsl
cwtl
dec
push
cmpsb
addr16
mov
xor
xchg
das
lea
and
fimull
mov
mov
aam
mov
sbb
sbb
mov
pushf
xchg
xor
lahf
daa
sarl
stos
in
stc
dec
mov
pusha
jmp
arpl
mov
aam
mov
fndisi(8087
repz
fnstcw
insl
or
daa
pop
pop
fildl
jecxz
fwait
mov
mov
mov
dec
stc
jno
adc
cmc
sbb
cwtl
pop
and
sarl
fimull
das
stc
shll
fs
push
jl
pop
mov
hlt
lea
imul
cs
popa
xor
lahf
xchg
and
fiadds
dec
pop
sarb
sti
xchg
or
dec
lods
mov
stc
fiadds
lea
xchg
fimull
hlt
jle
mulb
xor
push
test
lahf
xchg
and
pop
mov
inc
xchg
inc
ds
jmp
mov
inc
lcall
stc
fsubp
push
out
push
mov
sbb
mov
adc
fwait
pop
mov
int3
mov
mov
or
mov
fwait
inc
aaa
lock
add
cmp
or
in
movsb
push
dec
cmp
scas
jle
es
jno
jp
push
jb
xchg
rcrl
and
push
xor
in
pop
xchg
stos
testb
jo
mov
inc
jno
enter
cwtl
cltd
push
enter
mov
pop
sub
xchg
and
push
outsl
aad
mov
lods
pop
xchg
ds
pushl
mov
dec
bound
ret
mov
fldcw
lahf
pop
xor
or
cmp
divb
cmp
pop
shrl
add
push
cmp
lods
imul
adc
mov
cld
mov
jecxz
dec
pop
dec
mov
lret
fdiv
in
mov
push
mov
mov
iret
rcll
xor
push
adc
test
jo
pop
cmp
mov
ret
xchg
in
test
mov
popa
loope
dec
js
inc
stos
jecxz
mov
pushf
jns
jmp
and
loope
dec
out
cmc
and
fcoms
jns
loopne
enter
mov
jp
sbb
inc
cmp
fisttps
scas
aas
mov
xor
fimull
rclb
pusha
ret
sbb
inc
lcall
or
sahf
push
out
bound
cmp
test
clc
jb
mov
mov
and
pop
lret
cmp
fcoml
mov
push
mov
jns
pop
lods
dec
cmp
xor
inc
adc
ss
outsl
sbb
lods
mov
mov
jmp
xor
add
imul
mov
bound
push
pop
pop
lcall
mov
xlat
int3
in
clc
dec
pop
scas
pop
lods
test
das
les
sbb
aam
xor
test
popa
mov
lods
inc
outsl
imul
call
add
orb
xor
ja
mov
pushf
decl
jl
cmpsl
addl
roll
and
inc
movl
jno
add
push
jmp
lret
or
nop
sbb
xchg
push
sarb
mov
adc
jb
or
outsb
es
mov
daa
sbb
inc
mov
pop
dec
in
les
jg
pushf
iret
sub
test
sbb
ds
test
xchg
mov
xor
pop
sbb
sarb
push
loop
fisttps
jg
push
sbb
jno
fmull
dec
loope
dec
aad
push
add
aaa
xor
pop
sbb
test
push
mov
adc
xor
mov
mov
push
into
je
shlb
mov
es
cmp
jo
mov
push
clc
mov
or
push
fstpl
lock
push
mov
or
pop
jbe
daa
mov
cmpsl
jp
jo
cmp
pop
sub
stos
sahf
cld
loope
add
shll
mov
mov
scas
dec
adc
leave
inc
inc
es
out
or
sbb
add
decb
in
ret
xchg
xchg
inc
sbb
adc
adc
aas
add
mov
adc
sti
xor
fsubrp
fisttps
jge
lea
aas
test
repz
mov
lcall
out
cmc
xor
cli
jp
lcall
cltd
jl
cmc
aas
iret
bound
pop
decl
sub
jb
test
iret
mov
mov
imul
jo
xlat
mov
shrl
pop
dec
fstpt
popa
adc
jno
cmp
sub
or
aas
dec
sub
lret
and
andb
jge
mov
and
push
jecxz
ljmp
scas
mov
push
popa
stos
mov
mov
movsb
outsb
push
insl
jbe
movsl
in
ljmp
xchg
cmp
je
aas
jnp
int3
test
and
enter
ss
shll
fildl
popf
or
sbb
sub
push
jo
je
mov
pop
push
xchg
std
dec
push
adc
loop
and
repz
data16
test
nop
in
xor
jmp
loopne
aam
cmc
mov
stc
nop
sub
pop
out
and
pop
aam
inc
loopne
rcrl
jnp
push
out
cltd
and
inc
mov
mov
jmp
mov
clc
push
aad
test
aad
xor
roll
and
mov
repnz
fbstp
out
loope
pusha
shl
mov
pop
mov
mov
insb
sti
mov
out
jge
jmp
lret
idiv
sbb
push
inc
add
cmp
sub
xchg
xchg
es
popa
mov
add
lcall
add
push
jg
push
pop
sub
movsb
push
pop
jmp
ja
mov
in
fildl
testb
mov
cld
add
mov
mov
gs
add
sbb
and
out
sahf
testb
sub
jns
xchg
rorb
jne
sub
mov
aaa
iret
icebp
pop
mov
push
in
and
xchg
stos
adc
sti
mov
or
scas
mov
mov
mov
or
in
pop
xor
stc
out
and
hlt
rolb
fimuls
fimull
ficoml
cli
push
jl
jno
nop
jp
fwait
pop
push
pop
sarb
fcom
lret
lcall
add
push
dec
sbb
pushf
mov
popf
cmp
fdivrp
xchg
repz
in
mov
pop
xchg
lea
loopne
int3
stos
lcall
cmp
das
les
popa
out
icebp
hlt
sbb
cmpsl
cmc
addr16
dec
cmp
cmp
mov
aad
ret
sbb
loope
stos
pop
push
mov
jmp
jp
cld
clc
fnstenv
call
xchg
mov
pop
push
jae
sub
add
rcrl
lahf
fwait
fs
in
rclb
imul
jl
sbb
mov
adc
loopne
pop
sti
pcmpgtw
push
cli
mov
cmp
rcr
imul
push
ljmp
lret
push
add
dec
cmc
imul
call
test
pop
xchg
mov
mov
lods
sbb
jge
sbbl
enter
cs
ficoms
sbb
sub
mov
cmp
callw
mulb
dec
or
icebp
fisubl
cmp
fimuls
aam
sub
xchg
cmp
dec
cwtl
jb
push
stos
out
insb
movsl
xor
sbbl
int
repnz
lock
aas
mov
aaa
dec
repz
and
jbe
xchg
mov
je
or
int3
mov
out
cmc
mov
push
and
push
mov
int3
xlat
gs
lcall
std
mov
rcl
rcll
scas
fucomi
mov
scas
pop
add
insl
push
movsl
xor
mov
inc
fidivrs
jmp
sbb
mov
mov
lret
ret
fucom
mov
mov
leave
fidivl
inc
sbb
sub
lea
cmp
int
mov
xchg
aas
dec
and
outsl
sub
shlb
pop
gs
dec
cwtl
add
cmp
add
xor
cld
jno
pop
rclb
mov
cwtl
and
mov
cli
repnz
lods
push
adc
inc
inc
push
jnp
mov
ss
stos
shll
mov
aas
test
pop
stos
pop
bnd
sbb
imul
lret
add
inc
addr16
mov
gs
leave
pop
fisttpll
xchg
mov
dec
ss
pushl
jns
dec
jge
push
test
mov
push
mov
xchg
dec
pop
pop
cwtl
fwait
sarb
pop
add
daa
hlt
enter
adc
xchg
push
jge
int3
mov
add
aas
lret
and
jo
adc
adc
pop
fbstp
jne
ja
imul
xchg
mov
xchg
lret
mov
mov
insl
adc
mov
cmp
leave
lret
push
lock
sbb
out
imul
cmp
xchg
jo
xor
dec
jle
cmc
into
cmpsl
aas
rcr
ja
jg
pop
adc
xlat
mov
popa
or
dec
push
cmp
cli
sbb
adc
xchg
push
adc
je
lret
insl
std
addr16
adc
jnp
dec
popl
dec
cli
mov
leave
iret
adc
test
sub
into
adc
xor
repnz
and
shrl
lods
into
cmpsb
dec
cs
ljmp
shll
pop
mov
loope
pop
mov
iret
ret
inc
and
imull
and
nop
xchg
cmp
shll
sbb
pop
adc
xor
cmpsl
jno
out
push
hlt
out
aam
push
in
jns
mov
outsb
je
inc
xchg
fmul
pop
stos
push
dec
test
sbb
pop
add
fcomps
pop
test
pop
insl
xchg
inc
jmp
cmc
push
sub
lds
fnstcw
imul
jne
jmp
push
mov
icebp
mov
or
hlt
sub
mov
jp
fwait
adc
pop
inc
or
sbb
gs
push
xchg
hlt
jno
in
mov
mov
sarl
out
setl
pop
das
xor
lret
sub
sahf
mov
jb
mov
fsubs
adc
in
mov
push
lcall
leave
pushf
mov
push
loopne
xchg
aad
js
pop
push
movsl
xorb
pop
test
xor
jo
jbe
push
mov
pop
cmp
mov
test
scas
movnti
test
push
mov
inc
xchg
repnz
lds
popa
in
or
push
fwait
mov
jge
sbb
insb
push
xlat
in
push
pop
lods
es
rcrl
mov
movsb
cmp
rol
lret
pop
fdivrp
das
testb
cmp
lret
mov
cmp
and
dec
sub
fsts
pop
inc
lcall
push
scas
xchg
bound
sub
nop
xchg
or
xchg
cld
arpl
pop
sub
and
loop
outsl
in
mov
jl
stc
sbb
negb
mov
xchg
pop
push
and
pop
xchg
sub
and
loop
sbb
aaa
loopne
sub
bnd
aam
fidivrl
mov
sbb
jecxz
int
push
ficoml
sbbl
inc
xchg
decl
lds
cmp
pushf
add
mov
enter
in
arpl
and
and
rol
std
ss
xor
sub
cmovnp
lcall
xor
mov
mov
jbe
iret
mov
dec
pop
lods
in
orl
jae
cmc
xchg
icebp
lcall
inc
inc
testl
call
pusha
fwait
push
mov
or
dec
xlat
call
xchg
adc
ss
push
test
add
push
dec
dec
data16
imulb
sti
sti
lret
movsl
lock
pop
push
mov
and
jmp
jp
ljmp
cs
jge
mov
pushf
repz
adc
out
or
sbb
pop
and
mov
cmpsl
mov
shlb
test
xchg
fsts
cltd
cmpsl
es
mov
mov
adc
xor
adc
dec
repnz
test
jo
adc
jbe
and
pop
iret
push
les
nop
nop
insb
xchg
loop
add
jo
imul
xlat
xlat
xchg
insb
xchg
sar
add
mov
sbb
jne
or
hlt
push
jmp
movsb
es
ljmp
mov
pop
test
in
pop
inc
xor
sbbl
ljmp
jnp
cmc
ret
or
jg
enter
out
lret
inc
dec
aas
cmpb
or
xorb
xchg
ret
xor
imul
lahf
adc
jae
jns
mov
cmp
inc
pop
lret
rcrb
pop
es
lahf
mov
push
imul
jg
mov
add
ss
popl
fisubrl
sub
adc
or
add
outsl
push
ret
xchg
test
adc
jnp
cwtl
mov
dec
insb
sbb
jb
xchg
cltd
fistpll
popf
push
je
roll
idivl
andb
pop
popa
shrb
inc
inc
mov
sub
or
in
movsl
out
inc
jge
insl
stc
shl
and
outsb
clc
or
jbe
pushf
cmpsl
jns
push
dec
fcoms
mov
push
or
mov
icebp
sub
pop
dec
sbb
mov
xchg
push
fwait
jb
outsl
jnp
pop
or
inc
aas
aas
add
mov
fwait
mov
cmp
dec
fisttpl
sbb
pop
fmuls
sbb
add
ret
bound
mov
cwtl
ret
jb
xor
fs
ret
imul
nop
xchg
and
std
jno
mov
cltd
loopne
popa
insl
aad
sbb
mov
testl
xor
stc
push
mov
inc
sub
mov
mov
push
inc
push
shlb
mov
inc
adc
movsl
xchg
xor
das
stc
sub
dec
push
lret
mov
rol
mov
jecxz
and
and
mov
enter
cli
lods
cld
jne
ds
cmp
xor
inc
mov
pop
sub
ss
fcomps
roll
push
jbe
xchg
sub
cmc
xchg
or
test
mov
jnp
out
xchg
push
hlt
push
mov
fcompl
sub
rcll
jl
sbb
in
lea
mov
jp
les
mov
xor
cmp
inc
scas
inc
out
push
insl
aam
pop
jnp
jb
push
jg
je
add
fwait
inc
outsb
popf
stos
xchg
cld
push
movl
lea
je
div
fldenv
out
je
xor
adc
fs
sub
adc
popf
jb
fdivrl
nop
jle
cwtl
and
sar
bound
xchg
mov
lds
loope
mov
out
xchg
aam
ret
pop
test
inc
jno
push
mov
cmpl
inc
dec
mov
dec
jg
add
add
mov
sub
pushf
mov
inc
shrl
sahf
aad
int
hlt
xor
int3
or
roll
xchg
adcb
dec
lds
mov
test
cmc
dec
flds
ljmp
add
dec
mov
dec
out
dec
stos
lods
dec
xor
flds
xor
dec
mov
lds
insl
pop
out
ja
js
push
xchg
movsb
pop
xlat
mov
push
js
and
in
and
adc
movsl
dec
inc
add
xchg
jecxz
inc
out
and
ror
fisubrs
mov
dec
jno
mov
stos
add
jge
fcmovb
mov
jg
fs
pop
roll
ljmp
lods
pop
aas
or
aam
dec
or
sti
xchg
fcomp
shrb
pop
sbb
stc
fs
scas
repz
dec
iret
xchg
out
sub
sub
push
in
pop
sbb
outsb
cmp
shlb
xchg
sub
mov
mov
in
adc
xchg
enter
push
inc
jo
out
lret
inc
nop
sahf
mov
std
add
xchg
add
pop
scas
push
jle
mov
cld
sub
pop
arpl
in
xor
adc
outsl
je
jl
loope
mov
movsb
mov
adc
loop
cs
fwait
pop
popa
mov
subb
mulb
pop
mov
mov
jp
mov
fstps
clc
or
das
jnp
and
loopne
or
mov
lret
sbb
int3
lock
sub
insb
sahf
fst
sbb
sahf
and
fdivp
inc
pop
sbb
jl
stos
inc
push
cmp
pop
jge
jg,pn
sub
add
push
aad
xor
inc
rcl
stos
mov
call
or
xchg
std
in
adc
ss
mov
loop
inc
xchg
pop
cmp
push
mov
mov
sbb
pop
mov
xchg
add
mov
jge
jae
clc
mov
jmp
push
jns
out
lods
rcr
cld
outsb
sub
jle
int
lods
nop
clc
frstor
inc
inc
lret
push
fisubrs
repnz
add
loope
add
mov
fisttpl
out
mov
ds
mov
into
bound
xchg
and
inc
mov
loop
testb
leave
mov
push
nop
popf
jae
aam
jnp
xor
dec
and
loope
mov
adc
mov
cltd
jle
xchg
loop
xchg
jecxz
pop
cmp
sbb
and
xchg
nop
pop
jp
push
push
test
mov
and
xor
xlat
add
fisubrs
and
sub
psubw
xchg
mov
mov
scas
aam
sub
das
pop
xchg
ss
mov
push
imul
mov
in
scas
out
ja
icebp
mov
cmc
fmull
sub
jnp
mov
movsl
xchg
popf
push
mov
lock
and
xchg
and
and
call
or
push
cmpsl
mov
cmc
imul
js
stos
bound
inc
stc
pushf
push
xchg
fs
push
daa
cmc
movsb
repnz
cmc
out
sub
scas
popf
sub
dec
cltd
std
add
sub
jecxz,pn
cmp
test
cmpsl
out
lret
xor
dec
rorb
mov
sti
call
or
pop
loope
push
push
cltd
sub
notl
fsincos
xor
shr
add
xor
adc
stos
repnz
mov
test
ret
out
and
bound
sbb
cs
fildll
mov
fdivr
out
mov
inc
in
scas
push
jbe
jl
xlat
lahf
sbb
xor
xchg
or
scas
push
and
in
les
shlb
sub
sti
mov
or
mov
sbbl
cld
inc
xchg
fildl
inc
sqrtps
into
cmp
add
stc
push
xor
jbe
pop
int3
outsl
fchs
lods
aaa
lods
pop
or
insb
addr16
mov
fistl
stos
andb
int
sahf
imul
mov
mov
jle
out
mov
icebp
push
pusha
or
movsb
lcall
movsb
rolb
inc
and
inc
test
sbb
lahf
gs
jge
push
dec
dec
sarb
mov
roll
mov
mov
and
shrl
fidivrs
jp
in
bound
jecxz
adc
and
js
cwtl
cmpsb
ror
mov
outsl
adc
jns
mov
xlat
aad
stos
jns
pop
mov
mov
mov
ds
pop
test
add
aam
in
push
jnp
jmp
sti
xchg
mov
je
test
mov
loopne
ss
movsb
jae
jmp
out
enter
and
xor
pop
bound
cs
xchg
orl
push
aaa
leave
adc
mov
or
aam
dec
cmc
in
xchg
js
or
jle
frstor
xchg
pushf
inc
cmp
daa
shlb
jae
imul
jge
into
lcall
arpl
xchg
in
push
sbb
popf
rolb
push
js
jg
jnp
mov
ficomps
sub
imul
in
lcall
fstpt
jle
sub
fiadds
les
aad
sbb
cmp
inc
iret
jne
xor
sbb
push
dec
push
sahf
pop
ror
xchg
test
es
add
xor
push
test
hlt
je
inc
mov
nopl
sbb
test
pop
xor
divl
mov
imul
jb
cmp
lds
std
xchg
lods
inc
stos
fsubs
mov
lret
imulb
mov
cmpsl
mov
jmp
jne
pop
enter
xor
cld
dec
and
fisubrs
lcall
out
jo
sbb
dec
jg
push
jg
or
jns
dec
jns
lret
jl
mov
adc
iret
out
push
xchg
fsubs
pop
mov
adc
xor
sahf
bound
inc
clc
xchg
dec
dec
pop
sbbb
add
cmp
mov
and
aaa
ljmp
icebp
adc
inc
jp
addr16
inc
dec
push
inc
push
cmp
ja
add
jns
mov
sub
and
aad
cmpsl
xor
movsb
out
add
packssdw
adc
sub
mov
jmp
out
pushf
mov
adc
aad
xchg
or
mov
jle
arpl
mov
popf
mov
test
dec
fisubrs
aaa
loope
xchg
gs
and
jge
mov
and
mov
fbld
jl
jo
push
cmpsl
sub
icebp
pop
adc
cs
adc
cmp
ds
lcall
adcl
out
sbb
shlb
cmp
lcall
push
movsb
jecxz
jbe
mov
iret
mov
out
and
popf
and
int3
jecxz
fldt
cmp
xchg
or
xchg
bound
dec
cmpsb
fsubl
mov
mov
cli
arpl
xlat
mov
push
push
mov
pop
call
mov
pop
fnstsw
sbb
xchg
adc
mov
mov
in
or
cmp
js
push
mov
mov
ror
repnz
push
mov
xchg
sub
sub
add
add
jns
push
mov
je
xchg
add
je
add
jae
inc
adc
lock
mov
ror
jmp
cmp
lock
pop
repz
lods
ret
mov
jo
popf
aaa
sti
lds
popf
bound
inc
jb
dec
stc
adc
insb
or
lds
or
mov
xorb
lret
push
add
stos
xchg
mov
and
jae
inc
jbe
jg
xor
pop
adc
sub
aaa
inc
out
cmc
and
in
cli
and
jb
sarb
test
nop
dec
add
dec
add
add
ss
popa
insb
rcrb
mov
jp
es
lock
iret
cmp
or
sahf
adc
mov
ror
adc
aad
data16
stos
ss
loop
jle
aad
push
negb
xor
loope
rolb
dec
enter
adc
hlt
pop
cltd
sbbb
jbe
inc
mov
int
cmp
lret
ret
sub
mov
xor
pop
test
test
movsl
pushf
addl
dec
pop
lds
into
dec
inc
pushf
lods
dec
test
pop
cmp
xor
cltd
ficoms
inc
add
mov
mov
iret
xor
sti
mov
neg
jle
incl
jns
arpl
addr16
fidivrl
push
add
xchg
xchg
pop
clc
push
push
jle
sbb
outsl
mov
decl
cmp
push
add
add
xor
movsl
shrb
or
mov
inc
iret
divb
xchg
add
cmp
cmp
lods
mov
pop
sti
dec
xor
or
mov
cld
loopne
mov
pop
push
cmp
cmp
enter
jg
flds
mov
jb
aad
jae
popf
xor
loop
clc
test
cmp
andl
push
jbe
or
lcall
inc
ja
jg
xor
and
mov
insb
sahf
fbld
xchg
daa
jg
int
push
shrb
test
sbb
out
hlt
int
sub
mov
xor
loop
inc
or
lcall
pop
cwtl
or
stos
cmp
addr16
adc
pop
in
int
repnz
xlat
inc
mov
leave
cmc
aaa
dec
out
cwtl
jnp
mov
inc
inc
mov
daa
rcrl
push
mov
jg
cmpsl
jno
inc
push
jp
or
add
lds
cmp
cmp
into
pop
and
rclb
adcb
mov
testl
insb
imul
inc
in
adc
ds
xchg
leave
pop
outsl
mov
mov
ror
mov
mov
pop
aas
mov
dec
loop
push
lea
cmp
insb
call
pop
shrl
mov
jns
ror
mov
dec
mov
clc
sbb
fidivl
pusha
add
sub
or
sub
push
mov
xchg
or
or
sbb
mov
push
mov
icebp
mov
clc
sbbb
data16
inc
stc
and
nop
push
mov
aam
xorl
aaa
jecxz
and
dec
pop
xchg
mov
and
xchg
dec
xor
and
inc
or
pushf
push
out
push
and
and
jge
stc
add
inc
loopne
jae
ret
pop
cld
pushf
sbb
fstp
dec
ficoml
bound
popf
cmpsl
jo
movsl
inc
fldcw
push
mov
and
cmp
jb
es
xor
mov
inc
sahf
stos
sbb
pop
xchg
ret
dec
shll
divl
mov
xor
frstor
test
mov
popa
neg
int
shl
mov
clc
xchg
call
inc
cmp
dec
mov
xchg
adc
outsl
or
movsl
mov
es
pop
ljmp
insl
mov
cmpsl
add
xor
xor
pop
mov
insb
iret
push
sahf
sbb
repnz
xor
cs
arpl
push
dec
addr16
jb
cmp
jmp
ror
xchg
or
shll
aam
jae
jmp
or
fidivl
push
push
std
mov
fmuls
daa
dec
inc
jbe
inc
pop
outsl
dec
pop
loope
ret
sub
out
test
in
out
cmp
je
inc
push
pop
jnp
pop
cltd
dec
lock
cmpl
loop
shr
pop
div
outsb
lret
inc
push
pop
dec
or
jno
sti
int
aas
testl
mov
mov
pop
shrl
xchg
js
mov
cmp
lahf
cmpsb
jl
sub
add
and
and
lret
push
pop
lock
push
lahf
xchg
or
sub
add
cmp
adc
pop
xchg
repz
cmp
jle
js
pop
jbe
test
sbb
mov
cmp
pop
mov
push
rep
sbb
and
ja
imul
cmpsb
or
inc
inc
movsb
icebp
lcall
lahf
xchg
dec
lock
add
add
inc
mov
mov
je
ret
xlat
ljmp
cmpb
stos
mov
jg
stos
mov
sub
movsl
gs
xadd
pop
ret
xlat
in
les
mov
inc
inc
popa
xlat
and
push
pop
dec
mov
aad
mov
in
cwtl
aad
pusha
dec
sbbb
sbb
or
xor
mov
or
movsbl
jecxz
pop
lcall
and
jae
jne
cmp
fbstp
pop
xor
sbb
clc
out
jns
push
dec
xor
rorb
fimuls
fcmovne
push
out
pop
loopne
in
lahf
add
push
cmpsl
add
imul
xchg
cmc
jl
shrl
ss
js
inc
cltd
mov
arpl
js
outsl
imul
fsubs
inc
lods
js
lods
hlt
push
fildl
jns
popf
mov
in
lds
cmp
inc
iret
pusha
or
and
mov
xchg
pop
in
test
movsl
dec
mov
out
dec
frstor
inc
in
mov
pushf
and
lock
ds
subl
mov
and
sub
addr16
jmp
adc
lods
in
sar
outsl
pop
lcall
sarl
movsb
push
vsubsd
sti
push
xor
insl
call
icebp
imul
fucomp
clc
inc
test
and
jnp,pn
xchg
jl
mov
outsl
push
addr16
das
xchg
js
mov
xchg
cwtl
lcall
loope
inc
mov
das
aam
add
cmp
add
cmp
adc
in
icebp
mov
jne
cli
aaa
jmp
mov
xor
loope
add
jno
and
lret
stos
fs
lahf
inc
test
das
inc
mov
pop
add
cmc
rclb
jp
jmp
mov
pop
in
ret
cmp
push
and
sub
outsb
cld
sub
or
negl
jo
sti
adc
mov
add
int
xor
gs
jg
mov
xchg
push
pop
insl
fmull
test
out
push
sarb
xchg
int
shll
mov
push
sbb
mov
pop
jbe
cld
popf
lods
jne
ret
sbb
fldenv
inc
pusha
shl
rcl
mov
scas
lods
push
sar
inc
lret
push
sbb
cs
cmp
pop
sbb
cmp
jmp
dec
cmpsl
jnp
insb
icebp
movsl
sbbb
pop
jle
add
clc
fisubrl
loope
cmpsl
arpl
icebp
pminsw
push
mov
jae
adc
push
pop
into
pop
dec
xorl
fdivl
push
cli
cs
mov
gs
jmp
lret
js
jno
pop
cmp
inc
addr16
repz
pop
mov
or
aam
push
push
inc
sahf
lcall
sbb
and
dec
push
scas
sub
jns
xchg
sub
ffreep
loop
aas
fnstcw
mov
pop
insl
hlt
inc
jns
inc
mov
outsb
iret
test
add
test
aad
fldt
dec
fstps
std
popa
dec
jle
jle
add
jbe
shlb
mov
fdivl
in
stos
sbb
mov
sub
jge
fdivp
pop
cmpsl
inc
ficompl
push
adc
ja
rclb
ja
cmp
mov
dec
in
pop
lcall
mov
push
mov
loope
cltd
xchg
jg
outsb
sub
js
mov
pop
in
dec
into
add
daa
xchg
repz
mov
stos
jne
popf
sub
xorb
jmp
ss
into
int3
adc
ljmp
or
fisubrs
into
mov
add
int3
inc
mov
lds
and
rorb
push
xlat
mov
xchg
sub
xor
or
sbb
test
dec
lock
incb
or
ja
xor
scas
jp
iret
mov
xor
push
ja
and
in
push
stos
xchg
sbb
ds
push
cltd
jmp
xor
outsl
push
adc
jg
dec
hlt
cltd
sahf
icebp
inc
inc
repnz
fs
pop
aas
push
movsb
cmp
push
adc
adc
ss
push
mov
std
xor
pusha
int3
xor
outsl
sub
mov
pop
mov
cmpb
or
call
sbb
fs
in
sbb
fbstp
push
testl
movb
scas
and
mov
xchg
jne
jno
push
jb
fiaddl
imul
mov
lds
add
sub
cmp
into
int3
repz
scas
sbb
add
or
std
jno
jb
cmp
cmp
push
jae
shl
inc
pop
jecxz
ret
jecxz
repnz
mov
inc
cmpsl
inc
mov
mov
jl
push
inc
js
push
mov
dec
ds
mov
fdivl
jnp
jg
xor
sub
sub
and
mov
popf
jle
adc
adc
aam
xchg
mov
dec
add
insl
mov
jge
lcall
push
pop
stc
arpl
push
sub
mov
pop
int3
dec
sti
mov
jo
jge
adc
dec
mov
cmp
xchg
fcomps
and
int3
push
push
out
xchg
sbb
push
dec
cmp
mov
call
fistpl
mull
cwtl
mov
int3
mov
imul
push
insl
imul
inc
pop
fisttps
push
movsb
sub
leave
scas
aaa
xor
aaa
sbb
stc
dec
hlt
sbb
sub
outsl
into
or
mov
mov
or
inc
imul
mov
fisubrl
test
addl
icebp
sub
lods
or
loop
push
push
imull
dec
inc
inc
fmulp
leave
sbb
mov
cmpsb
jl
lahf
lds
ret
xchg
out
sbb
push
pop
jo
stc
add
pop
inc
scas
outsb
pop
cmc
push
add
addr16
ss
adc
in
dec
jge
adc
stos
outsl
ljmp
xor
sub
adc
arpl
bound
lock
add
mov
rep
icebp
mov
push
arpl
jmp
cs
and
mov
pop
in
enter
in
push
movsb
std
idivb
daa
jno
into
mov
or
push
jmp
cmpsb
and
clc
mov
mov
insl
mov
jns
mov
push
fnstcw
je
rclb
cltd
sub
lret
in
fstpt
pushf
mov
sub
stc
stos
in
mov
lods
pop
test
and
xchg
adc
adc
xor
lods
jbe
enter
mov
inc
shrb
adc
xor
outsl
andl
stos
shrb
and
popf
cmp
aam
daa
insl
inc
decl
gs
test
push
shl
imul
shrw
test
adc
aam
dec
xorb
test
mov
mov
mov
ficompl
repnz
clc
pusha
pop
pusha
add
out
mov
sbb
movsb
and
xchg
lea
das
adcl
push
lock
pop
push
xchg
and
adc
push
leave
dec
idiv
mov
lret
mov
pop
in
mov
hlt
popf
mov
inc
int
xchg
mov
sbb
cmp
cmp
ss
push
ret
adc
push
cmpsb
std
lock
je
mov
sbb
lahf
adc
imul
inc
clc
mov
jle
inc
mov
mov
mov
pop
xor
scas
sub
int3
int3
js
iret
cld
add
sti
pusha
push
aam
push
in
cmc
ja
jbe
jl
xor
cmp
cmpsl
popa
or
hlt
in
jecxz
inc
jge
lock
mov
js
hlt
and
push
sbb
xchg
repnz
bound
and
pop
adc
fstpl
sub
aad
fwait
mov
in
lcall
jp
fisttps
cmp
subl
push
jne
fists
sbb
xchg
scas
push
mov
push
mov
jmp
inc
and
inc
stos
dec
mov
cmp
fwait
add
xorl
popf
sbb
pop
dec
push
lcall
rcll
arpl
repz
shll
mov
outsw
mov
jo
imul
pushf
imul
popa
mov
fistpll
pop
jnp
out
add
sbb
data16
mov
rorb
movsb
sahf
and
outsl
push
hlt
nop
insl
cmp
inc
mov
mov
xorb
mov
pop
fistps
pop
mov
std
dec
xchg
or
ss
arpl
lods
lea
movsl
push
cmpsb
aaa
inc
scas
iret
xchg
mov
scas
je
inc
testb
ja
notl
mov
icebp
mov
icebp
ret
mov
sub
pop
sahf
call
xchg
mov
xchg
pop
stos
in
jg
inc
jge
add
adc
loopne
sub
xchg
fs
gs
jmp
stos
mov
xchg
dec
mov
mov
cs
inc
dec
mov
jb
mov
les
mov
xlat
dec
outsl
mov
js,pt
add
pop
call
jns
push
icebp
enter
sti
lcall
nop
je
sbb
lret
scas
jne
xchg
cli
arpl
mov
sub
push
and
rorb
push
mov
cmp
sarl
xor
mov
or
adc
leave
lahf
adc
into
icebp
test
cmc
jp
stos
pop
xchg
ss
jnp
pop
xlat
cld
add
imul
mov
divb
adc
inc
mov
ds
pop
add
sbb
arpl
push
and
mov
jns
xor
cmc
xor
adc
adcl
daa
mov
call
jno
sbb
sahf
test
xchg
call
add
imul
push
xchg
in
jb
aam
jl
xchg
leave
inc
add
pop
inc
ficoms
rol
xchg
out
cmc
jp
mov
adc
pop
cmpsl
sbb
mov
mov
mov
movsl
dec
fisubs
and
aas
setbe
mov
sbb
mov
jmp
and
outsb
icebp
pop
jge
sbb
imul
scas
pcmpgtb
jo
mov
int
mov
fcmovbe
int
call
jecxz
xor
xor
adc
mov
cld
xchg
movsb
inc
jae
icebp
jp
and
adc
pop
mov
jecxz
imul
rcll
mov
pop
push
repnz
in
out
cmc
shlb
cld
adc
push
jp
pop
mov
or
test
push
setb
imul
or
sbb
add
inc
mov
repz
sbbb
mov
rcrl
or
cmp
mov
xlat
in
mov
bnd
iret
sbb
pop
fsubrs
sub
sub
cmpsl
subl
xor
jbe
jecxz
xlat
or
cmp
imul
cmp
insl
dec
mov
push
rorl
cmc
mov
sbb
xor
jne
test
insb
outsl
sti
ljmp
out
push
sti
xor
push
lcall
push
mov
mov
adc
dec
adc
and
dec
push
fstpt
push
loop
push
and
xlat
inc
out
out
fldl2e
lret
imul
nop
xchg
pop
mov
jge
sbb
lahf
and
xlat
inc
jnp
mov
ljmp
push
sbb
add
pop
imul
sti
mov
fimull
sar
mov
dec
mov
sbb
inc
or
cmp
lods
fisubrs
add
orl
jmp
mov
cld
shll
call
lea
mov
xlat
adc
adcb
lea
cs
test
push
lock
push
inc
lret
pop
cli
and
fimull
mov
addr16
jae
repnz
xor
fsubs
jae
es
lds
jl
or
xchg
add
lods
push
mov
xor
adc
mov
addr16
sbb
andb
popf
loope
fwait
push
in
lahf
push
push
cmp
push
push
sub
and
stos
rcll
jne
arpl
mov
clc
pop
xchg
fidivrs
es
fs
out
mov
nop
push
add
pop
test
jecxz
bndstx
inc
cmpsb
adc
push
scas
ss
mov
sub
sbb
mov
pop
loop
jne
testl
shl
pop
mov
xchg
lds
dec
inc
stc
jnp
fmulp
das
inc
fdivrl
pop
xor
and
dec
scas
andl
fsubs
inc
pop
hlt
cmc
push
cld
cmpsl
or
pop
xchg
outsb
bound
add
test
pop
aam
or
mov
add
out
mov
inc
dec
nop
aaa
sahf
xlat
pop
jb
pusha
lahf
and
std
dec
and
mov
test
mov
cs
sub
or
cmp
xor
cmc
iret
scas
cmp
xchg
rcr
int3
mov
call
or
cld
icebp
out
mov
fcomp
mov
and
mov
rolb
aad
scas
push
dec
mov
ss
stos
jo
insl
outsl
add
xchg
dec
and
inc
cmp
pop
or
mov
cs
xchg
out
mov
pop
fsts
data16
push
push
ds
cwtl
sahf
leave
xchg
or
into
int
push
lods
inc
out
fbld
movsl
pop
and
sbb
push
mov
shrb
pop
fsubrs
jns
sbbb
sub
xchg
outsl
ja
jo
sub
push
pop
cmp
call
call
mov
push
cmp
sub
xor
adc
je
les
das
or
jbe
aas
inc
sub
nop
push
insb
add
lret
lods
cwtl
cmp
dec
sahf
pushl
stos
mov
loope
pusha
pop
and
or
pop
lods
mov
test
cmp
lods
dec
lock
scas
rorb
pop
mov
hlt
xchg
lods
cmp
add
push
lds
mov
mov
and
sbb
sub
call
add
xchg
dec
bound
sub
sbb
jmp
test
push
les
cmpsb
roll
out
jbe
fwait
shrl
inc
rcll
adc
pop
in
fsts
pop
mov
notl
mov
adc
push
inc
dec
sbbl
addl
push
sbbl
sbb
notl
and
cmpsl
push
dec
xor
cwtl
cld
jp
lcall
mov
lds
mov
xor
sbb
cmp
xor
scas
data16
out
dec
xchg
div
jnp
push
stos
mov
ret
xor
sbb
mov
mull
stc
xchg
mov
push
lea
aam
lret
pop
jb
inc
mov
int
stos
lret
into
inc
sub
and
xor
cwtl
jb
xor
lret
mov
sub
sbb
push
lea
movsl
loopne
pusha
std
popf
test
icebp
add
sub
testl
sbb
int
int3
push
bound
rcr
leave
mov
inc
and
jge
es
popf
xchg
jmp
jno
jns
xor
iret
mov
fbld
lret
cmp
scas
and
ficoml
sub
leave
pop
leave
negl
cmp
call
dec
lret
mov
cmpl
sarl
mov
into
sbb
out
je
addr16
mov
fwait
repz
mov
inc
fidivs
and
outsl
push
xchg
lcall
mov
mov
insb
lods
lcall
aaa
je
in
mov
or
mov
call
cld
mov
fsubp
lahf
in
ljmp
fcompl
and
lahf
pop
pop
or
cwtl
sub
out
test
sbb
push
mov
mov
sub
insl
movsb
shlb
cwtl
ljmp
pusha
int
adc
inc
jns
push
fucomi
adc
and
jmp
and
add
sbb
mov
mov
jge
jns
lcall
out
andl
add
pop
addl
push
bound
outsb
int3
cmp
adc
cmpsb
lods
arpl
pop
outsl
or
mov
orb
sub
std
dec
mov
sbb
popf
out
mov
inc
out
or
mov
jbe
dec
mov
orb
sub
and
ret
outsl
jne
xchg
fstpl
cmp
mov
idiv
rcll
loop
sub
sbb
adc
xchg
mov
loope
std
inc
dec
dec
or
add
test
xchg
dec
or
ds
cltd
inc
fs
jbe
or
inc
xor
xor
push
aad
leave
push
cmp
fsubrp
outsb
popa
ffreep
shll
pop
inc
rorb
add
lahf
pushf
xchg
mov
and
or
cmpsb
pop
imull
jl
cli
test
imul
gs
rclb
mov
adc
loop
cmp
es
inc
sti
insb
cwtl
or
loope
jne
jecxz
cmp
out
xorl
add
or
jmp
sub
movsb
inc
adc
lods
or
insb
mov
push
insb
cmp
push
sti
jae
inc
jmp
roll
cmp
sub
repnz
xlat
sub
test
mov
xchg
loope
shrl
int
mov
aam
adc
stos
push
jo
cmp
add
push
pop
jmp
adc
push
add
es
mov
orl
ficompl
sahf
cld
pop
dec
xor
js
or
pop
jmp
add
fwait
adc
out
sub
or
stos
xor
jge
xchg
xchg
sub
std
dec
pop
and
in
repz
sub
js
push
push
xchg
adc
push
dec
dec
mov
adc
cs
adc
cmpsb
cwtl
lds
push
add
push
cmpsb
ss
pop
adc
sti
into
jge
xor
mov
out
sbb
lcall
pop
mov
xchg
or
outsl
orb
movsb
jno
leave
scas
in
lcall
mov
aaa
inc
es
push
sarb
sub
addr16
add
test
sti
repz
sub
jp
aaa
sub
lahf
sub
pushf
inc
sar
inc
int3
test
push
xchg
mov
jp
popa
or
fistpl
mov
daa
adc
dec
push
test
aad
xchg
cmp
addr16
mov
into
loope
movsl
test
ljmp
push
pop
mov
out
pop
inc
lods
or
cmp
or
sbb
orl
sbb
outsl
and
xchg
pop
mov
sub
push
test
pop
adc
xchg
inc
ret
dec
push
xchg
jecxz
outsb
ret
xchg
cmpsb
dec
je
pop
sub
inc
je
dec
xchg
outsb
cmpps
sub
add
or
idiv
pop
or
inc
std
mov
cwtl
mov
jb
xor
mov
testl
in
inc
jo
push
cmpsb
mov
pop
fwait
and
xor
adc
sub
sbb
loopne
xchg
jno
lods
add
dec
lea
into
jb
add
inc
notb
sub
jp
sbb
sahf
push
loop
mov
mov
fwait
dec
fiaddl
int3
lahf
mov
mov
dec
lret
push
adc
mov
out
jl
push
or
in
sub
mov
fldt
push
iret
stos
cmp
enter
xchg
cltd
rorb
and
add
mov
fstpt
mov
pop
shl
pop
add
add
insl
fstl
push
xchg
out
in
push
mov
push
dec
cmpsl
inc
lods
divl
addb
cmc
daa
dec
mov
mov
addb
repz
data16
jmp
or
scas
cmovge
sbb
jb
xor
gs
frstor
inc
cmpsl
mov
jo
mov
sbb
cmp
lcall
test
mov
and
mov
mov
inc
fs
jge
outsb
insb
mov
sbb
jle
jp
mov
aaa
cmp
hlt
out
xchg
mov
testl
out
sub
aas
mov
pushf
xchg
pop
rcr
push
movsb
pop
inc
ss
ret
sub
mov
jae,pn
imul
xor
stos
out
mov
pop
jp
xor
dec
fxch
push
ja
sti
cwtl
les
ficomps
in
ret
inc
inc
jo
sub
bound
dec
mov
fcoml
fxch
push
sbb
cmp
jecxz
aaa
xor
jno
cli
fstpt
lret
cmpsb
out
mov
mov
cmpsl
dec
pop
mov
aam
mov
pushf
pop
pop
cli
pcmpgtb
mull
sub
mov
cli
cmp
adcl
cmp
addr16
rcl
sbb
test
movsb
leave
jle
sub
popl
pop
mov
inc
and
mov
out
lock
stos
hlt
jle
mov
add
sahf
icebp
cmp
mov
sub
js
lret
push
push
jmp
fsubrs
rol
add
xchg
xchg
xor
mov
jg
pusha
cmp
fwait
int
jge
sub
and
mov
sub
inc
arpl
in
jmp
ret
sbbl
sbb
subb
add
and
mov
add
dec
in
push
loop
subb
insb
mov
mov
pushf
jns
cmp
jne
fmul
adc
mov
cmpsl
jae
shll
mov
jae
inc
sbb
cmp
mov
shll
data16
push
nop
mov
or
jl
mov
lcall
inc
sbb
sub
fldl
add
mov
inc
or
fsubs
call
jg
mov
xchg
mov
sub
dec
xchg
jns
xor
outsl
push
inc
push
jg
pop
mov
lods
sub
push
scas
pop
or
enter
jl
popf
xchg
xchg
or
sbb
jmp
jns
pop
xchg
ret
out
iret
stos
mov
mov
pop
inc
push
jp
push
cli
or
and
inc
sti
into
xlat
int3
mov
fidivs
pop
mov
pop
inc
sahf
inc
hlt
cmp
or
aaa
test
idivl
out
and
ja
insl
mov
cmp
cs
push
ss
ret
jecxz
sub
push
movsb
arpl
pop
aad
in
mov
in
ror
cmp
nop
faddl
es
and
aas
jne
jl
iret
hlt
pop
push
mov
popl
out
sahf
pop
jno
mov
ficoms
xor
stos
sbb
jno
andl
dec
sbb
mov
cmc
push
cli
cmp
sub
adc
or
pop
inc
fiadds
or
pop
ficoml
dec
inc
xor
add
sbb
popa
fsubrp
push
push
arpl
pop
sahf
aas
into
cwtl
mov
mov
jg
push
out
lret
mov
inc
jnp
int3
inc
pop
stc
cmp
jb
sbb
aaa
addl
out
test
stos
outsb
sub
ds
in
lods
es
and
xorl
je
fucompp
xor
nop
ret
xchg
out
adc
scas
jecxz
aaa
into
inc
inc
ja
imul
jb
pminub
mull
jge
or
xchg
out
ficoml
jbe
int
adc
push
push
mov
loopne
mov
push
mov
sarb
das
jne
je
movsl
jne
stc
pop
sahf
pusha
fists
sbb
adc
xchg
mov
sub
mov
add
xor
nop
mov
xchg
mov
inc
sbb
xchg
insb
mov
jg
scas
mov
and
jp
push
ljmp
mov
jnp
xchg
std
dec
pop
sub
dec
iret
add
imul
ds
je
rcrb
fistpll
add
notb
enter
testb
ds
pop
inc
outsl
dec
in
testb
jle
repz
addr16
js
mov
ret
push
rorb
loopne
mov
push
pop
push
adc
push
test
mov
hlt
push
lock
data16
je
movsl
adc
adc
jmp
outsb
mov
mov
loop
or
repnz
adc
rcrb
ss
lock
pop
fs
sub
popf
lret
push
inc
sbb
dec
ljmp
mov
mov
mov
mov
jb
lock
aam
xor
push
xor
out
xor
or
pop
sub
mov
sbb
mov
loopne
or
subl
test
sub
je,pn
outsl
or
xchg
xor
cld
mov
lods
sbb
pop
and
imul
shlb
stc
and
and
arpl
test
leave
xor
outsb
dec
rcrl
bound
push
lock
add
xchg
roll
dec
push
cmpsb
jp
aad
ljmp
jmp
xchg
js
lret
mov
cwtl
test
push
arpl
fs
cmp
lret
adc
mov
call
fldt
stos
in
jo
mov
repnz
mov
and
inc
inc
stc
pushf
mov
dec
cmpsb
inc
lret
push
mov
push
jmp
int
pop
jae
pop
aad
cmp
int
fsubl
inc
dec
clc
sub
mov
xchg
es
or
addb
inc
jl
ret
sbb
aas
inc
inc
jnp
sarb
xchg
stos
pop
iret
insl
pop
shlb
xor
test
add
or
rcrl
enter
push
mov
push
in
jl
bound
jbe
or
fldcw
repz
pop
sbb
es
pop
stos
les
ds
repnz
pop
out
fbld
or
rolb
setbe
dec
jae
add
lods
mov
mov
mov
nop
in
mov
scas
xchg
dec
jae
movsb
jmp
sub
jp
sbb
sbb
int3
sub
pusha
cmp
dec
pop
decb
out
pop
and
das
lock
fdivrl
pop
jg
sub
daa
jp
pusha
jg
pop
adc
js
call
inc
scas
test
les
lea
int
cmpsb
scas
pop
xchg
shll
bound
ds
lods
dec
cmp
addr16
mov
fldcw
lea
dec
push
mov
rcl
das
mov
jle
data16
jp
mov
lods
out
xor
sar
or
mov
inc
inc
es
gs
jo
push
dec
xor
adc
ss
lea
out
mov
fs
repz
dec
push
pop
es
push
sbb
dec
xlat
cltd
loopne
xchg
loopne
push
iret
jb
mov
xchg
xchg
lock
jae
xlat
jne
scas
mov
insb
cltd
add
aas
mov
pop
or
add
cwtl
insb
rol
aas
sbb
inc
mov
daa
pop
xchg
out
sti
cmp
xchg
push
test
cs
cmp
int3
mov
lahf
lahf
outsl
push
push
out
lret
sub
mov
lret
sti
std
push
xchg
inc
jno
pushf
bound
xchg
movsl
inc
sub
mov
mov
rcr
and
pop
ljmp
mov
aad
xchg
outsl
cmc
sub
ljmp
cmpsb
cmp
jl
pop
push
pop
lcall
js
ds
jbe
jo
sub
mov
mov
pop
sahf
add
movsb
mov
cmp
out
cmp
test
test
push
jge
roll
xor
push
dec
inc
jo
fisttps
add
push
mov
inc
jne
push
es
scas
movsl
imul
imul
nop
push
ret
outsb
enter
pusha
call
fcoms
add
jbe
mov
and
into
dec
add
rcl
les
add
mov
test
mov
pop
jge
mov
repz
push
lods
add
sbb
repz
push
add
push
xor
add
inc
lret
sub
jno
je
sbb
and
aas
lock
call
lcall
adc
outsb
or
hlt
in
repnz
ror
sub
add
test
sbb
in
fdivrs
loope
push
and
scas
xlat
lea
sbb
out
subb
jo
mov
icebp
jbe
mov
inc
mov
mov
aad
push
inc
jge
xor
insl
pop
mov
insb
sbb
and
lea
jnp
scas
repz
bound
movsl
lods
outsl
out
mov
addl
mov
sbb
lea
aad
std
pop
aas
nop
cli
push
loop
and
and
in
jae
mov
cmp
movsb
rcr
and
cmp
inc
and
sub
mov
sahf
and
mov
hlt
pop
sbb
dec
push
shl
cmp
insl
jmp
in
imul
or
xor
in
aad
gs
stc
mov
xor
mov
lods
and
cmc
mov
adcl
mov
xor
pop
int
mov
jmp
lock
jnp
adcl
lods
push
mov
mov
or
lods
repnz
lea
jg
mov
xor
je
out
pop
sbbb
push
mov
pop
xor
push
pop
popa
jecxz
data16
nop
mov
mov
mov
mov
add
lods
stc
mov
ljmp
push
cmp
push
add
filds
cmc
aad
addl
and
mulb
imulb
push
iret
or
movsb
cmp
mov
into
in
repnz
mov
pop
and
js
rolb
cmp
icebp
push
lods
cmp
pop
add
loopne
inc
addr16
loope
roll
pop
cmp
enter
add
imul
insb
cmp
imul
sub
ret
adc
aas
xor
mov
dec
mov
not
pop
push
jns
sbb
mov
out
mov
iret
pop
ja
cmp
mov
jb
rcll
jns
cltd
xor
mov
pop
push
sbb
sarb
roll
mov
or
xor
lret
jbe
pop
int
cs
fidivs
dec
stos
pop
fnstsw
sbb
xor
rorl
imul
jmp
mov
lea
nop
insl
hlt
cwtl
and
adc
add
pop
movsb
cmp
notb
pop
rclb
fbld
and
mov
xlat
cld
pop
and
das
daa
push
js
sbb
sbb
dec
lcall
arpl
sub
jecxz
sti
sub
in
add
push
and
daa
in
xchg
sbb
lahf
mov
sahf
xchg
cmpsl
or
inc
ja
push
arpl
call
pop
jg
xchg
lea
mov
test
es
fistl
sbb
ror
mov
daa
and
mov
ljmp
pop
mov
inc
and
cmpsl
push
fstpl
mov
or
cs
xor
in
shr
pop
jo
or
stc
mov
sbb
lahf
outsb
sbb
sbb
xchg
mov
sbb
jnp
pop
or
cmp
aas
pop
or
lods
add
jmp
jle
shll
outsl
movsl
push
push
rcrb
movsl
bound
mov
jb
enter
jo
mov
sbb
cmp
inc
loop
jb
icebp
stc
loopne
xchg
xchg
orb
inc
fwait
mov
sub
jl
pop
fistps
add
scas
mov
jnp
lret
rcrb
add
sbb
dec
sbb
sub
mov
shl
ljmp
push
inc
xchg
mov
jnp
inc
je
mov
or
outsb
mov
pop
fisttpl
movsl
ja
in
mov
insb
jne
inc
lret
mov
jecxz
movsl
in
outsl
xlat
dec
mov
push
and
loope
fisubrs
insl
mov
dec
stos
fs
pop
jae
js
fistpl
insl
fists
xor
pop
sbb
fidivrl
or
inc
movsl
pop
push
test
push
test
fiadds
ljmp
fwait
or
cwtl
adc
ds
ds
imul
adcb
lds
mov
push
pop
pop
out
test
dec
mov
xor
loop
xor
dec
in
inc
adc
dec
leave
loope
ffreep
add
mov
add
cmpsl
jnp
lahf
test
call
adc
sub
push
mov
mov
inc
or
stos
ss
addb
dec
xchg
mov
cltd
adc
push
mov
sbb
sti
add
mov
ffree
outsb
sub
aas
rol
hlt
inc
inc
sahf
sti
daa
rcl
push
xchg
int
jae
repnz
fadd
loop
rep
mov
jns
mov
dec
repz
xchg
jmp
ror
int3
mov
pop
in
movb
test
mov
add
mov
pop
push
out
fistpll
xchg
in
lcall
and
adc
xchg
aaa
sub
mov
dec
jl
mov
mov
pop
bound
adc
cwtl
mov
adc
dec
imul
stos
ja
das
xchg
rclb
jns
sarl
call
hlt
insl
int3
mov
in
mov
fsubl
add
mov
or
out
jl
clc
out
sbb
inc
inc
xchg
mov
push
cld
movsl
enter
jl
nop
je
outsl
test
shl
and
or
sub
push
aas
fisttpll
push
pop
scas
cmp
test
xchg
and
jg
cli
mov
xchg
sub
inc
jno
mov
jnp
inc
cmp
fwait
outsl
jnp
imul
iret
sub
out
leave
xor
mov
mov
fisubrl
test
pop
sub
cmp
lret
add
sarl
add
je
xchg
cmp
xchg
outsb
adc
mov
mov
shlb
scas
jmp
xor
pop
movsb
movsl
dec
dec
fwait
xchg
loopne
aad
sub
cmpsl
test
dec
subl
ja
pop
sub
popf
adc
fs
sti
jl
jecxz
dec
inc
xchg
in
hlt
jp
sbb
incl
enter
sub
or
sahf
mov
xlat
inc
inc
and
repz
imul
fildll
out
cmp
into
scas
mull
push
push
push
ljmp
lods
hlt
cmp
jnp
adc
stos
arpl
imul
sahf
mov
mov
loope
test
outsl
sahf
filds
rorl
mov
push
fmull
and
inc
scas
pop
mov
js
test
push
inc
rcl
ss
and
repz
mov
pop
nop
lret
ret
ret
and
addr16
xor
sahf
les
sub
lods
inc
repz
mov
inc
mov
shrl
mov
xchg
sub
inc
shr
mov
or
pop
int3
or
rcrl
cmpsb
push
mov
pop
outsl
sahf
mov
pop
xlat
push
loop
adc
or
daa
imul
in
mov
cltd
inc
cld
ja
sahf
sub
jo
movsb
and
cmp
ja
cld
stos
jp
stos
add
test
mov
hlt
dec
xor
test
mov
fwait
lock
int3
daa
or
out
clc
mov
loope
fwait
insb
fists
push
dec
mov
cmp
ljmp
or
popf
push
clc
xchg
sbb
or
mov
test
ja
adc
and
xchg
sahf
push
outsb
bound
femms
mov
cld
rclb
cmpsl
repnz
mov
xchg
jne
mov
push
push
mov
rcrl
sub
addr16
repnz
arpl
std
jg
sbb
mov
xchg
mov
pushf
scas
sahf
repz
ficomps
xchg
and
dec
inc
es
lock
and
nop
push
cmp
adcb
xor
adc
fcomi
pushf
add
mov
xor
ror
aas
nop
cli
insb
mov
push
sarl
fisubs
pop
dec
jnp
xchg
pop
es
cmp
jns
cmp
js
and
test
sarl
test
and
xor
repz
aam
jmp
xchg
xchg
es
dec
dec
dec
gs
loopne
fstl
dec
repnz
and
and
cmp
mov
jb
sbb
xor
inc
jecxz
xor
mov
mov
pop
clc
psrlq
test
arpl
into
xchg
cmpsl
xor
stos
xor
mov
xchg
sub
rcl
or
jl
lahf
cmpsb
test
stos
xchg
jl
sbb
push
cld
lahf
jo
jo
adc
repnz
mov
loopne
push
out
int3
lods
or
stos
inc
xor
in
dec
leave
mov
mov
js
push
aas
sbb
cmp
xor
movsb
xchg
out
push
in
inc
leave
stc
pop
hlt
mov
sub
sub
bound
sbb
jp
mov
lock
jmp
lods
arpl
ret
xchg
lret
pop
inc
cmp
es
mov
xlat
lods
movsl
ret
out
aad
sub
sti
cmp
adc
or
call
mov
dec
loop
pusha
cmp
xchg
jg
imul
mov
xorps
xchg
xchg
adc
add
jne
xchg
addr16
daa
xorl
repz
adc
cmpsl
lret
sbbb
mov
fcmovbe
xor
nop
xchg
hlt
jno
testl
imul
jl
pop
push
or
mov
add
and
gs
call
repnz
scas
inc
out
cwtl
pop
pop
loop
iret
dec
mov
jge
out
mov
cld
mov
test
xor
push
inc
add
das
cmp
fsubs
cmp
repnz
jne
sbb
push
mov
addr16
mov
rolb
test
filds
pop
mov
out
cmp
lods
in
daa
icebp
imul
lahf
dec
mov
mov
shrl
imul
insb
push
movsl
sub
and
jnp
test
xor
cmp
les
add
mov
cmp
in
jl
outsb
mov
cmp
call
mov
pop
stos
cmp
inc
mov
pop
fdivrl
mov
lcall
mov
popf
ud0
fistl
loopne
aad
clc
xor
in
add
xchg
adc
jbe
jmp
dec
push
gs
test
aam
and
bound
out
sbb
fildl
jbe
bound
lret
sub
stos
mov
inc
adc
jbe
add
in
shll
xlat
cmp
data16
push
mov
inc
xchg
sub
jnp
jae
push
test
mov
adc
push
sti
jo
mov
and
cmpsb
pop
xor
mov
xlat
fwait
cs
ficomps
mov
arpl
lds
adc
int3
ds
imul
dec
mov
inc
push
inc
scas
cld
ds
aad
std
jb
in
jmp
lret
stc
jbe
push
cmp
js
or
sub
punpckhdq
mov
xchg
xlat
jmp
xor
in
ret
push
bound
outsl
sub
test
mov
jnp
call
xchg
mov
jl
mov
xchg
mov
mov
or
xchg
dec
in
and
xchg
andl
popf
ret
mov
xchg
pop
adc
mov
jae
and
outsl
lea
sub
add
push
or
jo
sahf
or
xchg
mov
pushl
pop
adc
sub
repnz
leave
pop
jl
movsb
cmp
xlat
and
movb
push
mov
add
fists
mov
in
daa
mov
fs
notb
jmp
and
ja
scas
clc
aam
mov
mov
out
or
sbb
add
sbb
adc
iret
out
ss
mov
xchg
scas
stos
inc
insl
jp
push
orl
jmp
mov
mov
adc
jno
mov
mov
aad
sub
dec
pop
rcrb
test
out
enter
cmc
adc
ja
mov
push
hlt
mov
loop
jl
arpl
icebp
inc
dec
ret
into
js
test
cmpsb
push
mov
test
rolb
lret
pop
ja
daa
mov
cmp
sbb
push
sbb
add
pop
pusha
cmc
pop
out
jno
int3
jns
lea
xlat
cmp
pop
sub
add
pop
inc
lret
ret
jl
pushf
xlat
pop
std
cmpl
mov
xor
cmpsl
and
insl
mov
addr16
ficompl
add
mov
leave
xor
jg
loop
add
jo
mov
into
xchg
icebp
mov
cmpsb
jecxz
mov
repnz
add
dec
jg
mov
and
dec
sub
nop
fisubrl
jo
and
cmpb
xchg
sub
xchg
jo
xor
ljmp
push
pusha
imul
aam
int3
sbb
adc
xchg
flds
test
sub
inc
sahf
enter
out
in
sbb
fdivl
push
push
mov
or
das
movsl
inc
fsts
xchg
sub
pusha
jne
pusha
sub
jne
mov
push
add
and
sbb
add
jne
test
sahf
shll
mov
xor
insl
sbb
call
or
loop
ret
and
pop
mov
mov
and
ds
jne
aad
arpl
shll
xor
xor
cmpl
sub
mov
adc
cmc
test
cmpsb
xor
sub
test
in
pop
lock
jns
cli
and
fidivrl
lods
cmp
fdivs
mov
mov
cmpsl
sti
pop
inc
js
lds
addb
pop
xchg
aaa
or
push
les
insb
mov
adc
jnp
std
jmp
pop
negl
int3
testl
xchg
dec
add
jl
das
inc
insl
lcall
jecxz
roll
xor
sub
orb
dec
enter
ret
call
andl
aad
adc
cmp
push
lcall
jge
sar
add
mov
mov
lret
jp
dec
icebp
sbb
std
in
jne
stos
rcr
add
cli
movsb
sahf
popa
cmp
subl
out
clc
sbb
or
loop
std
mov
fsts
xor
lret
fwait
inc
push
test
sbb
fnstcw
pop
jmp
movsb
dec
xor
adc
dec
sti
lahf
or
fdivrp
dec
cli
movsl
popf
movsb
cs
add
js
aad
fstpl
shll
repz
int
sub
popa
sub
popa
out
inc
and
jge
lret
test
cld
mov
xor
cmp
les
lock
cmp
arpl
ret
push
cmp
pop
gs
mov
inc
or
push
jae
inc
or
nop
pop
inc
jnp
scas
add
pop
into
mov
sbb
dec
sub
lock
sti
jle
nop
scas
fidivrl
sbb
cmp
aad
out
cmp
sbb
dec
iret
jbe
sti
iret
xchg
jmp
insl
pop
data16
mov
pushfw
mov
rclb
add
dec
jnp
lahf
push
jg
sub
or
adc
mov
xchg
adc
popf
icebp
cmp
xor
push
or
sub
dec
cmp
cltd
imul
inc
js
sub
pop
add
xchg
std
popa
popa
jg
cs
mov
mov
jne
xor
push
jg
stos
imul
pop
mov
stc
sbb
jnp
sub
rcl
dec
ja
add
or
mov
enter
xchg
push
mov
push
inc
xchg
das
mov
add
add
fstps
push
push
lods
sub
loop
out
mov
fcompl
loopne
rorl
ret
in
pop
mov
bnd
and
arpl
lods
ret
adc
std
fsubr
sbb
jno
jmp
shlb
sti
or
and
and
adc
pop
adc
or
add
lods
jecxz
inc
cwtl
pop
xor
pop
or
test
nop
in
fcmovb
cmp
mov
pop
dec
in
sahf
aas
pushf
nop
cvtdq2ps
test
jae
push
pop
arpl
mov
xchg
jmp
push
lret
fs
xlat
cmp
mov
mov
mov
popa
fsubl
ss
sbb
pushf
lock
push
mov
mov
movsl
mov
jb
fs
cltd
pop
mov
adcb
and
pop
xchg
cli
jns
xor
push
inc
pop
jnp
adc
jnp
jns
fnsave
cltd
fadds
jg
pushf
push
or
enter
imul
xchg
lods
and
cwtl
pushw
sahf
pop
movsb
dec
stos
sub
cmpsl
fxch
adc
mov
xor
cli
cmpl
add
jae
pop
pop
repnz
xor
pop
push
adc
xor
sti
push
out
int3
fidivl
xor
and
pop
aam
sbbl
dec
mov
pop
add
das
push
daa
or
cmp
sub
hlt
pop
sub
movsl
push
lods
cmpsl
mov
push
lahf
jl
mov
xchg
mov
out
jmp
leave
sub
push
xor
lea
outsl
xor
and
into
dec
sub
cli
shl
cmp
push
imul
mov
int3
lret
cltd
mov
test
fnstenv
scas
inc
arpl
jae
test
lcall
mov
xchg
jp
ds
jbe,pt
shlb
mov
jecxz
lds
outsb
lods
cld
lods
test
imulb
icebp
or
add
std
or
cmpsb
loop
pop
xor
mov
adc
pop
lock
jp
push
mov
push
mov
cmp
push
dec
mov
jmp
incb
xor
xchg
test
das
fwait
mov
imul
maxps
xchg
cmp
test
in
dec
adc
jmp
pop
ret
mov
pop
fstps
jno
xchg
add
ror
in
loop
jns
push
push
mov
test
sbb
xlat
stos
mov
or
aam
leave
lahf
jle
je
iret
lahf
lahf
adc
or
mov
mov
inc
adc
push
xchg
ss
add
pop
or
jo
cmc
cmp
std
rcrb
rcrl
pushf
sbb
cmp
and
pop
and
push
cwtl
cli
call
or
je
mov
or
sbb
push
stos
dec
mov
or
stc
push
add
push
in
outsb
lret
adc
adc
frstor
pop
outsl
cmpsl
fimull
xchg
jl
std
ljmp
adc
mov
inc
shlb
cmp
leave
inc
repnz
or
inc
pusha
dec
leave
mov
sbb
inc
jnp
testb
fsts
mov
fists
push
mov
xchg
fstpl
or
into
call
int
stc
in
or
jg
enter
fldl
mov
push
shll
xor
mov
bswap
xor
push
sub
mov
cs
pop
movsl
outsl
lret
xchg
repnz
insl
das
out
add
dec
push
scas
fwait
jmp
fisubs
cmp
and
sbbb
ret
es
pop
jnp
dec
add
das
add
and
es
lds
outsl
loop
stc
cmc
out
test
mov
and
xor
fistpll
das
xor
movsl
test
nop
int
mov
inc
sub
and
dec
fwait
sbb
adc
lods
xorl
sbb
adc
cmpsb
fwait
jb
and
int
jns
sahf
pop
xor
sub
xchg
iret
mov
icebp
imul
jle
sub
notl
mov
jb
sbb
ds
in
xchg
sub
iret
mov
cmp
push
fistl
push
xchg
mov
insl
mov
xchg
push
push
ss
sbb
jge
loopne
sub
decb
test
adcb
popl
gs
mov
cmp
xchg
sbb
int3
pop
js
icebp
push
cmp
sbb
stc
popa
clc
lcall
rcrl
arpl
divl
imul
leave
incb
jne
icebp
out
mov
mov
test
in
sub
cmpsl
in
jle
jnp
add
rorl
std
sub
cld
xchg
mov
fisubs
cltd
shll
mov
inc
in
add
cmpsb
fistpll
ljmp
jbe
lds
fisttpl
dec
sub
xor
data16
scas
xchg
std
test
push
fs
push
out
sahf
push
jo
nop
js
xchg
test
cmp
inc
xlat
mov
mov
jbe
ret
mov
and
push
call
sbb
dec
mov
push
mov
in
ret
push
sbb
sub
push
or
jno
push
pop
dec
add
adc
dec
cmp
and
sbb
lods
adc
mov
inc
scas
adc
fcomip
lods
fwait
adc
pop
jmp
pop
cmp
dec
inc
push
sbb
out
dec
add
outsb
imul
dec
outsl
addr16
xchg
movl
out
push
sbb
fimull
lock
call
jl
cmp
push
add
mov
hlt
cmp
andl
fwait
es
pop
cmp
popf
mov
mov
in
dec
mov
jmp
leave
imul
add
xchg
mov
xlat
pop
fdivrp
les
lret
lds
ficomps
stos
pop
fnstsw
inc
push
dec
lret
sbb
mov
ljmp
jae
test
repnz
jno
loopne
xchg
and
dec
movsl
dec
add
cmp
pop
int
movb
fwait
jle
adc
adc
mov
push
pop
jl
xchg
insb
mov
jg
das
pop
mov
or
enter
je
cli
cmp
fsubrl
add
movsl
dec
mov
ja
jle
iret
ds
mov
xchg
sub
movsb
dec
and
inc
pop
fldcw
push
pop
insb
pop
jmp
push
and
xchg
or
pop
push
in
mov
cmp
sub
pop
sbb
js
or
mov
cs
adc
mov
sbb
andl
mov
push
or
jp
dec
jnp
or
inc
stos
addr16
movsb
stos
xchg
jg
outsb
and
inc
jo
add
lcall
mov
pop
xchg
ss
mov
or
out
movsb
push
push
notl
sahf
mov
mov
pop
jmp
out
xchg
imul
mov
pop
jmp
jmp
cmp
int3
lods
pop
inc
iret
lea
bound
in
aaa
dec
inc
popf
pushf
int
ret
js
or
add
mov
je
fisubrl
dec
xor
stc
repz
mov
andl
fucomi
repnz
rol
xor
loop
push
push
lea
scas
inc
adc
mov
loop
pusha
shlb
ret
out
clc
xchg
xor
nop
lods
xchg
push
lods
ja
sahf
stos
mov
push
sub
addr16
adc
add
lds
ret
inc
les
ficoml
mov
scas
or
mov
or
je
sti
cwtl
inc
and
sahf
test
shll
push
js
jno
mov
inc
jmp
pushf
pop
push
lahf
mov
inc
dec
inc
push
add
mov
test
sbb
mov
jne
push
lds
mov
xor
roll
jecxz
mov
or
vcvtsi2sdl
add
in
push
imulb
jb
xor
xor
loop
sbb
inc
cmpsl
pop
sbbb
push
mov
sbb
adc
in
pop
xlat
sahf
es
ss
popa
nop
cs
sub
inc
lret
repnz
cmp
popa
fcompl
outsb
in
pop
push
xchg
mov
push
mov
cli
out
pop
addl
xlat
int
adc
mov
cmp
adc
rclb
push
mov
pop
dec
call
adc
lret
mov
das
jle
cld
testl
idivb
xor
stos
sub
mov
jmp
pop
inc
dec
and
inc
and
sbb
push
mov
pop
sbb
mov
sti
sbb
sub
stc
mov
out
mov
xlat
fadds
movsb
es
add
jnp
stc
xchg
stos
icebp
mov
movsb
add
aam
push
repz
fistl
inc
or
aaa
rcll
pop
sbb
enter
push
adc
adc
shl
test
aam
push
pusha
mov
dec
bound
xor
dec
out
repnz
pop
inc
rolb
cmp
mov
test
pop
pop
dec
scas
std
push
mov
les
stc
ficompl
push
sub
jl
pushf
lret
movsl
push
sub
lods
lcall
and
xor
mov
stos
gs
jle
mov
pop
inc
or
dec
sti
mov
push
test
sbbl
inc
inc
movb
out
in
dec
push
decb
jge
popa
pop
pushf
mov
dec
pushf
pop
rcl
cli
lcall
xorl
inc
and
sbb
mov
mov
push
lock
pop
or
cli
mov
sbb
cmp
je
or
data16
push
or
push
push
sbb
jg
pop
rcl
dec
jecxz
adc
jg
movsb
addr16
jno
inc
test
cli
lret
mov
fimuls
leave
dec
hlt
or
mov
inc
jo
xor
negl
stos
in
cld
sbb
push
cmp
fldl
mov
mov
jmp
fidivl
pop
cmc
leave
push
int
mov
and
not
icebp
test
mov
and
out
and
imul
adcb
add
stos
cmp
pop
ret
fadd
mov
lock
stc
cmp
add
dec
inc
and
addr16
test
mov
cmp
pop
out
sub
bound
pop
in
in
mov
mov
jb
xlat
out
mov
mov
push
testb
jmp
xor
sbb
stos
sbb
lahf
fld1
pop
lahf
dec
pop
sub
pusha
enter
mov
aas
sti
adc
cmpsb
out
sbb
cltd
dec
inc
cmpsb
pop
movsl
jmp
and
in
adc
scas
or
in
int
into
aad
sbb
add
sbb
jbe
or
insl
xor
mov
dec
cmp
call
mov
inc
faddp
jnp
imul
add
mov
test
unpcklps
push
dec
nop
test
stc
mov
sbb
js
pop
mov
xchg
dec
inc
in
fcoml
cld
mov
cwtl
mov
inc
in
idivb
pushf
jne
add
cmpsl
mov
out
iret
inc
mov
and
lret
adc
movsl
jl
or
pop
inc
or
iret
int
dec
int3
xchg
lods
outsb
loopw
mov
std
jmp
xchg
out
scas
movsl
or
ss
mov
mov
cmc
sbb
daa
lock
dec
xor
pusha
cmc
stc
outsl
dec
lahf
inc
adc
pop
es
dec
icebp
jo
adc
sbb
dec
adc
pop
rcrl
push
aas
mov
and
ret
fnsave
jmp
mov
mov
mov
sub
or
jg
test
lods
sub
jbe
xor
scas
push
adc
mov
fs
addl
imul
ja
xor
xor
int3
fists
sbb
xor
in
lods
sbb
add
in
and
imul
sub
xorb
or
fcoms
push
inc
mov
pop
pop
jge
mov
pop
addr16
test
movsb
flds
inc
mov
mov
repz
jno,pt
test
and
insb
dec
mov
add
mov
mov
sub
bound
dec
xchg
sbb
and
and
stc
xchg
push
or
lods
mov
mov
pop
sub
ds
aad
cmpsl
test
cmp
mov
iret
leave
test
xchg
pop
sti
sar
inc
mov
adc
lcall
pop
push
outsl
xor
lea
adc
pop
and
dec
cmpsb
decl
and
sbb
sub
lret
or
jge
push
xchg
mov
sti
aaa
psubsb
inc
sub
push
neg
popa
jno
stos
rol
xchg
pop
icebp
movsl
lahf
push
mov
fstpt
sub
cmp
cmc
inc
loop
add
push
jmp
out
and
pop
or
pop
jno
ljmp
push
jecxz
je
mov
push
jmp
pop
mov
sbb
cltd
adc
les
loope
mov
mov
fwait
mov
out
out
xchg
push
insb
cmpsl
jns
gs
orl
bound
mov
andb
das
roll
cs
inc
ja
jo
lahf
add
xchg
stos
xor
xchg
jg
imulb
ficoms
jno
clc
cmp
mov
cmp
xchg
std
sar
fildl
outsl
mov
push
push
xor
lods
push
shll
fstps
enter
or
sub
dec
mov
push
mov
inc
push
movb
jl
cld
decb
jbe
popf
shll
int3
mov
xchg
push
sub
fnstenv
hlt
outsb
mov
jl
mov
mov
ja
mov
stos
scas
cmpsl
xchg
imul
mov
cltd
mov
repz
idivl
add
lret
dec
jg
in
sbb
and
or
mov
clc
cltd
aas
mov
in
es
mov
addr16
repnz
pop
shl
and
add
push
roll
aad
adc
inc
adc
jle
jge
gs
and
add
loopne
jno
rclb
jnp
xor
lods
loope
test
dec
pop
inc
xor
inc
push
mulb
lret
jne
fldenv
loope
adc
arpl
aad
adc
cmp
push
andb
movsb
out
jecxz
mov
xchg
dec
sub
pop
xor
in
and
pop
punpckhwd
jge
inc
inc
hlt
and
stc
sub
push
push
xor
bound
outsb
das
mov
xchg
sbb
jno
push
pop
dec
sub
cmp
ficoml
test
test
pop
sbbl
mov
in
and
or
mov
das
and
mov
mov
ds
adc
mov
mov
test
pop
rcl
lea
or
or
inc
adc
mov
pusha
and
int
lock
jmp
jns
mov
inc
mov
pop
popf
lds
hlt
cmp
push
push
sarb
cltd
pop
mov
adc
adc
stos
dec
into
ljmp
mov
adc
push
sub
adc
gs
je
sub
or
jle
rolb
mov
add
fwait
inc
xchg
jb
add
insb
testb
dec
push
xor
xor
push
lcall
js
xchg
mov
and
and
mov
xor
std
inc
std
and
xor
push
sbb
sbb
repz
lret
int
xor
pushf
addr16
dec
jg
xchg
lea
xor
icebp
jmp
mov
movups
push
loop
lods
jp
sbb
mov
cmpsb
fstl
icebp
pop
xlat
ljmp
mov
insb
lock
bound
clc
xchg
mov
sbb
sarl
test
rcrl
xchg
pusha
push
cmp
stos
xor
cmpsb
ljmp
sbb
jl
pop
movsl
shrl
imul
mov
push
stos
fldlg2
or
cmp
jge
push
or
aam
add
sub
mov
or
jmp
outsb
cmp
sub
pop
popa
add
test
mov
repz
loop
adc
bnd
xor
hlt
sub
popf
fcoml
rclb
mov
cmp
hlt
push
hlt
cmp
sub
ja
cmp
or
int
jno
xchg
out
xor
sbb
sbb
xchg
divl
inc
aaa
fwait
push
xor
std
mov
push
dec
hlt
pop
and
xor
cmc
js
cmpsb
je
push
jge
cmp
stos
push
mov
cs
mov
popa
cli
fnstcw
xor
je
ret
xchg
imul
fs
mov
push
jae
clc
std
aas
lea
sahf
sbb
mov
add
popf
push
lret
inc
mov
or
adc
inc
out
cmp
sbb
sub
ljmp
icebp
pop
push
dec
mov
sbb
push
cmc
repz
push
jb
ds
cwtl
imul
inc
mov
arpl
mov
xor
scas
in
cmpb
test
lea
pop
push
aaa
dec
adc
xor
scas
push
call
jno
sarl
cmc
xor
xchg
push
pop
inc
sti
lds
jno
pop
xor
mov
std
push
mov
xor
and
mov
cmpsb
mov
mov
dec
inc
aas
xor
jbe
jg
hlt
jnp
inc
jp
mov
out
push
sarb
clc
mov
or
mov
lock
inc
rolb
inc
mov
cmp
addr16
push
inc
xchg
int3
sbb
fwait
xchg
pop
rol
jno
dec
adcb
lock
sti
pop
aam
xchg
mov
cmp
lret
fldl
add
lcall
adc
jge
add
bound
xchg
jbe
cmp
in
pop
fs
ret
dec
dec
cmp
loop
mov
das
sbb
mov
es
mov
lock
pop
stos
dec
xor
mov
xor
xchg
pushf
ds
iret
roll
push
in
xchg
cmpsl
cwtl
shlb
loope
stos
iret
jecxz
xchg
push
inc
dec
lcall
cmpsl
push
pop
ja
sbb
add
mov
push
hlt
mov
jl
scas
inc
cmc
pop
cmp
int
icebp
push
push
sub
mull
jne
mov
xor
syscall
fucom
cld
daa
data16
or
inc
sub
xchg
pop
add
ret
add
jae
pop
pop
call
dec
hlt
adc
sub
popf
cmp
fistps
aas
cltd
ja
sbb
push
outsb
shrb
in
loop
dec
push
sbb
imul
xchg
sbb
and
push
lret
or
pop
jmp
cmp
and
sbb
or
sub
dec
addr16
popa
ljmp
jle
outsl
sbb
inc
jl
lds
and
fistpl
dec
shrb
in
and
mov
out
inc
mov
xorl
out
sbb
add
mov
inc
fs
push
cmp
pop
out
or
test
dec
out
or
enter
push
aam
pop
fnstenv
sub
xchg
jne
inc
ror
mov
mov
inc
nop
leave
in
sbb
fcoml
cs
push
jle
out
dec
test
out
arpl
or
movsb
icebp
lcall
aad
sbb
adc
repz
xor
ret
pop
out
mov
add
fldl
fwait
dec
adc
push
xor
scas
pop
add
xor
add
and
out
and
push
in
xchg
lret
sarl
mov
mov
inc
enter
jnp
bound
repnz
or
jmp
and
sub
or
inc
popf
aas
jg
popa
mov
and
lds
inc
gs
fsub
lret
fdivr
add
cmp
jnp
cmp
jp
add
jle
pop
xchg
cmpsb
out
mov
dec
fldcw
pop
rol
or
arpl
mov
pop
push
mov
out
add
adc
mov
cmc
cmpb
push
sbb
loopne
push
xchg
insb
lds
enter
xchg
mov
ret
adc
ret
repnz
call
movsb
inc
mov
cmp
dec
test
into
sub
and
xchg
hlt
xor
mov
out
mov
mov
or
sbb
cmc
xchg
fisubl
aaa
hlt
sbb
bound
fstps
pop
sub
and
lods
fs
pop
cmp
mov
scas
jg
sub
jmp
xor
xor
xchg
es
shll
jbe
pop
and
mov
pop
neg
push
mov
popa
inc
cs
test
add
stos
pusha
mov
aam
jbe
cld
cs
orb
adc
sub
arpl
in
repnz
inc
sub
adcl
out
pop
cmp
imul
fidivrl
outsl
push
push
loop
cwtl
mov
push
mov
je
ds
cmc
es
das
pop
loop
sbb
scas
sub
mov
cmp
in
push
mov
xchg
jnp
cmp
insl
cmpsl
aas
inc
cltd
inc
jge
cmp
popf
mov
jmp
fldenv
std
dec
setns
cmp
imul
pop
int3
mov
loop
rcl
mov
xor
sarl
mov
loope
inc
mov
fmuls
lea
adc
pop
add
push
cmpsl
hlt
imul
fdiv
jecxz
mov
xchg
out
shl
jg
push
or
pop
lds
add
sub
je
into
push
out
pextrw
jl
std
pop
inc
arpl
or
cmc
jno
push
mov
jge
mov
test
out
mov
xchg
dec
add
jne
rcrl
sbb
movsb
imul
xor
jno
ljmp
jp
adc
jae
jg
repnz
subl
mov
cmp
popf
push
jns
sub
test
and
mov
sbb
push
out
repz
decl
add
mov
cmp
movl
shlb
mov
add
test
cmp
sub
push
mov
xor
rcrl
aad
mov
ss
xor
push
leave
pop
xor
push
sbb
stos
out
xchg
pushf
mov
dec
jg
andl
inc
mov
dec
mov
xor
cmp
mov
addr16
outsl
add
stc
subb
sub
sbb
lret
xor
rclb
lods
lcall
cli
jae
int
or
jl
inc
fstl
xchg
fbld
insb
adc
fnstcw
dec
loop
sti
pop
xchg
xor
shr
fnsave
mov
arpl
sub
mov
scas
push
adc
scas
or
add
test
mov
push
pop
cld
mov
call
dec
or
dec
stos
jo
fcmovnu
xor
cmp
lds
mov
pop
divl
xor
sbb
call
sub
mov
pop
jbe
fdivrl
loopne
pop
int3
fs
push
dec
push
cmp
mov
add
pusha
sub
test
lods
inc
and
sub
out
xchg
fwait
push
cmc
aas
and
and
das
jo
cmpsb
push
sub
pushf
aas
jl
mov
xchg
sub
inc
push
jb
mov
rcll
jmp
popl
cli
or
test
fildll
clc
mov
insl
addb
cmpsl
popl
mov
lock
imul
xchg
mov
push
sub
loopne
xchg
dec
mov
fsubrl
sbb
mov
cltd
test
jmp
hlt
ljmp
repnz
outsl
fs
push
mov
or
call
jns
jle
adc
popa
mov
mov
and
pop
jle
fwait
jo
lds
push
cmpsb
cmp
sub
rol
xor
jb
add
shlb
in
test
sbb
out
inc
sbb
push
or
add
xor
cmp
push
dec
dec
jp
cmp
test
stos
scas
sbb
stc
lret
negl
out
dec
fs
dec
loope
nop
fcompl
paddq
xchg
and
mov
mov
jl
mov
out
sbb
lret
and
sbb
stc
adc
lret
xor
adc
pop
mov
hlt
pop
mov
cli
sahf
emms
fs
cwtl
mov
lret
std
jecxz
xchg
cmp
in
iret
ja
vpminub
cmp
jae
xor
push
leave
outsl
mov
pop
jge
inc
jg
adc
and
mov
pop
ret
add
or
cmp
xchg
mov
sti
sbb
cmp
xor
test
dec
or
cli
adc
in
mov
subl
add
mov
mov
movsl
sub
push
jnp
aas
stc
xor
cmp
mov
and
sub
aad
sbb
popa
popf
loop
xor
adc
mov
push
cmp
cmp
xor
adc
inc
in
push
fnstenv
daa
inc
in
movsl
fidivrl
leave
jge
inc
insb
aam
sbb
loop
mov
fwait
lock
les
sahf
sub
adc
ret
sub
xor
fldt
inc
jnp
fsub
add
adc
lahf
notb
rorb
xorb
leave
cli
pushf
inc
push
jne
jmp
stos
shrb
or
xor
fucomip
push
repz
hlt
movsl
push
dec
cwtl
and
add
dec
xchg
loope
mov
and
mov
adc
pushf
mov
pop
pop
rcll
push
cmp
inc
das
pop
inc
adc
xchg
call
inc
jno
mov
outsl
lret
push
test
callw
jb
imul
dec
adc
inc
jo
jns
jmp
inc
dec
into
int
inc
mov
pop
adc
jge
adc
or
sarb
dec
xchg
add
push
mov
cmpsl
and
xor
dec
adc
mov
mov
pop
stos
pop
inc
lea
xchg
add
add
cltd
stos
les
jb
inc
imul
push
mov
and
jl
fmuls
dec
adc
mov
outsb
push
test
bound
pusha
sub
xchg
mov
add
pusha
inc
push
loopne
cmp
shlb
xor
cmp
sub
fdivs
jge
mov
mov
pop
mov
imul
sbb
dec
dec
leave
pop
xor
xlat
adc
dec
fwait
pop
inc
loopne
add
pusha
jp
xchg
adc
je
mov
sbb
lret
mov
jbe
add
out
mov
or
jecxz
or
test
test
pop
mov
lret
in
pop
sbb
jecxz
sbb
fisubs
add
jg
sbbb
hlt
andl
push
loop
push
faddl
in
outsb
mov
subb
cmp
or
rcr
and
out
imul
jo
orl
jo
ret
sub
or
test
out
cmpsb
add
add
mov
outsl
add
int
or
adcb
shlb
dec
mov
mov
push
xor
dec
lods
in
sbb
mov
mov
xchg
pop
gs
and
dec
pop
hlt
test
cwtl
sbb
fmull
jmp
and
imul
or
loope
push
js
enter
mov
lods
cmp
imulb
mov
sub
sub
sbb
or
adc
pop
inc
scas
inc
lea
mov
xchg
pop
gs
cmpsl
mov
testb
lock
into
dec
movsl
mov
pop
cmpsb
inc
jp
or
inc
cmp
ficomps
fidivl
xor
inc
sbb
adc
cmp
in
pop
lea
movsl
outsl
dec
nop
shlb
adc
jo
scas
repnz
xchg
das
push
test
fdivs
mov
mov
in
lock
ja
jae
test
lods
repnz
mov
out
dec
mov
test
add
lret
mov
ss
add
call
je
xor
jo
js
push
xadd
scas
hlt
outsb
or
add
lods
pop
xlat
aaa
movsb
xor
xor
adc
shlb
ror
gs
inc
sub
call
in
jecxz
jg
dec
push
scas
scas
mov
notb
dec
enter
in
and
cli
js
rolb
stos
incb
jp
push
movsl
sub
enter
in
cs
orl
xchg
pop
xchg
jo
pop
nop
pop
mov
lahf
or
push
daa
scas
mov
lret
pop
and
scas
sub
arpl
std
shrb
in
ljmp
lret
or
aad
ja
sbb
cmp
push
pusha
add
pop
sti
jp
dec
sub
das
mov
outsl
je
jbe
shlb
adc
mov
cli
mov
mov
cld
inc
xor
gs
adc
mov
out
push
xchg
out
or
incb
lcall
cld
fdivrl
jnp
jne
push
out
cmp
mov
push
push
mov
mov
mov
test
add
and
pop
hlt
into
bound
cmp
leave
inc
mov
cmp
mov
dec
arpl
jns
fdivl
or
loop
xchg
pusha
clc
mov
xchg
xor
mov
push
xlat
call
imul
add
xchg
sbb
repnz
push
dec
adc
xor
cmp
dec
inc
mov
mov
in
mov
pop
mov
mov
enter
std
ret
test
ds
lock
aas
fbstp
testb
es
loope
mov
rcll
jo
push
mov
dec
sbb
dec
sub
dec
scas
rclb
mov
stos
mov
jns
mull
or
xchg
bound
ret
icebp
cli
in
test
inc
sub
mov
ret
mov
sbbb
push
push
jmp
dec
xlat
js
cmp
rorl
scas
ljmp
pop
add
aam
or
jns
sbb
into
inc
mov
xlat
mov
add
mov
push
popf
jnp
or
push
or
shrl
out
shl
inc
iret
mov
imul
adc
mov
mov
scas
fsubl
sbb
mov
das
push
adc
imul
leave
push
call
fsubr
mov
lcall
fsubrs
pop
ljmp
scas
jo
jns
mov
xor
jle
hlt
mov
dec
fldl
cli
push
outsb
enter
sbb
ror
inc
aas
push
orb
mov
cmp
mov
movsb
xchg
dec
inc
inc
inc
mov
rcrb
bnd
sbb
dec
adc
and
sub
fldl
mov
mov
xchg
and
add
dec
enter
cmpsb
out
or
jno
jecxz
test
adc
pusha
mov
mov
js
xor
pop
popa
xchg
insb
xor
icebp
imul
mov
sahf
jge
insb
push
push
push
imul
sarb
fbstp
psllq
cli
mov
jge
adc
repnz
outsl
mov
inc
jns
jge
lock
fnsave
js
adc
mov
add
lods
lock
icebp
push
loop
inc
mov
scas
and
adc
adc
xchg
inc
and
aam
mov
mov
or
loop
cmp
sbbb
push
inc
cmpsl
cld
add
ja
inc
arpl
add
js
test
jne
adcb
dec
pop
cli
lods
jb
lret
gs
pop
add
testb
mov
xor
add
inc
adc
aad
or
xchg
mov
or
and
pop
addr16
std
lods
loopne
add
in
jo
sub
test
jne
ja
mov
inc
icebp
mov
sub
out
mov
in
push
stc
popf
lcall
iret
rclb
lods
pusha
in
mov
xor
mov
loop
or
sub
ds
sub
je
mov
or
scas
mov
adc
in
addr16
in
pop
lods
movsl
or
adc
iret
lahf
pop
movsl
or
scas
xchg
adcl
jns
mov
das
iret
sub
sub
das
mov
lahf
dec
into
shrl
dec
jg
mov
pop
sbb
sti
pop
fisttpll
jecxz
out
or
loope
data16
pop
hlt
ret
aad
loope
sub
inc
scas
inc
inc
inc
jge
popf
imul
adc
stos
sbb
mov
daa
repz
mov
and
and
stos
outsl
add
stos
addr16
or
icebp
push
icebp
popa
jecxz
xor
clc
push
xlat
sti
repnz
loopne,pn
pop
add
test
xchg
xor
outsl
pop
imul
dec
sub
sbb
scas
loop
nop
adc
push
dec
sbb
add
jno
jle
sub
adc
cmp
dec
fwait
ja
inc
mov
cmp
cmc
jb
ror
mov
inc
xchg
adcb
jle
and
xchg
or
adc
das
and
and
test
icebp
dec
push
fwait
pop
lea
mov
sub
add
mov
or
xchg
xor
fidivs
pop
or
outsl
pop
push
test
aaa
and
popa
js
dec
pop
cli
or
arpl
adc
push
mov
aad
stos
pop
pop
adc
push
cmpsb
sub
ss
adc
mov
jno
adc
add
mov
and
mov
mov
iret
stos
imul
test
ljmp
xchg
call
jbe
jmp
push
ficoms
repz
push
popa
in
add
pop
xor
or
pop
lahf
or
push
sub
outsb
das
bound
ds
ss
stos
ret
aad
hlt
add
mov
push
adc
out
sbb
xchg
fadds
add
das
lods
fs
xchg
mov
mov
iret
sub
inc
outsb
adc
lea
or
pop
sbb
loope
aad
sub
cmc
lret
sub
or
adc
mov
pop
and
call
mov
mov
fs
lea
mov
fisttpl
popa
jne
or
add
xchg
inc
xchg
inc
sub
pop
outsb
mov
inc
enter
hlt
pop
andb
fisubrl
jbe
jge
jge
add
out
pop
sub
aad
lock
adc
test
aad
dec
push
dec
iret
pusha
scas
inc
sbb
and
push
hlt
inc
fsubrl
xchg
xchg
xchg
in
sbb
mov
mov
mov
and
dec
lods
fidivrs
call
int
push
stos
push
mov
push
ds
repnz
add
xchg
loope
sub
arpl
fwait
adc
rolb
std
je
push
mov
adc
repnz
mov
sbb
es
pushf
out
push
cmpsl
stc
ror
or
and
mov
sbb
xchg
xchg
outsb
sub
addl
add
or
bound
inc
mov
cmp
adc
call
movsl
loop
jno
stc
jbe
sbb
lods
adc
and
mov
out
push
rclb
cmc
ds
sub
repnz
idiv
cmp
xor
jb
in
std
imul
cwtl
loop
pop
inc
push
or
jne
push
and
inc
or
mov
test
repnz
adc
cwtl
repnz
loope
mov
mov
fmul
lret
xchg
insl
jbe
mov
aad
hlt
dec
hlt
xchg
sub
lock
xchg
je
jmp
rcrb
in
mov
xchg
bswap
adc
les
out
pop
mov
and
pop
pop
fs
inc
pop
add
fstps
lret
out
sbb
adc
cmp
add
pusha
iret
sub
fildll
fcmovne
mov
aas
pop
mov
lret
shll
lods
jae
xor
stos
pop
leave
or
loopne
test
repz
in
cmc
push
sti
sbb
or
push
sahf
xor
ljmp
nop
push
sub
sub
mov
out
xchg
mov
mov
jmp
mov
fdivrl
jg
inc
sub
frstor
movsl
and
sub
insb
cwtl
sub
and
pop
xchg
sbb
jne
mov
repz
mov
dec
scas
ds
jne
xchg
adc
dec
cs
pop
sbb
test
xchg
test
loope,pn
inc
inc
dec
add
das
loopne
push
mov
push
rorb
sarb
rolb
dec
je
mov
xor
out
or
aad
inc
sar
add
sub
mov
pop
and
xchg
add
dec
and
out
adc
cmp
stos
popl
lret
fidivs
cmp
jae
out
test
xor
ret
movsl
add
or
xor
jae
pop
fbstp
or
push
mov
cmpsb
and
pop
xchg
out
in
cmc
and
stos
and
ret
data16
ljmp
xchg
mov
pop
or
aad
inc
insl
arpl
jg
dec
sahf
rorb
mov
jno
mov
test
leave
ret
xor
xchg
dec
fucomip
call
repz
cmpb
jl
inc
jo
xchg
cmpsl
fcmove
pop
xor
mov
push
adc
lret
push
lods
jns
jp
pop
ret
sbb
sbb
out
pop
imull
je
mov
repz
dec
push
xchg
lds
jge
push
scas
push
fcoms
jecxz
cmp
lcall
and
lods
pop
pop
jne
fldl2e
push
sub
sar
dec
jg
xlat
add
sbb
addr16
insb
sbb
aad
cwtl
and
rcrb
sbb
into
sti
test
pop
sub
into
mov
pushf
std
xchg
pop
jg
xchg
dec
sti
mov
dec
push
mov
push
insl
xchg
sbb
mov
or
rolb
sbb
test
mull
leave
imull
push
mov
repz
lret
inc
mov
sbb
ret
xorb
jg
sub
jae
jmp
in
clc
in
sti
fstl
out
xchg
leave
test
aam
les
and
push
sub
mov
mov
xor
movsb
mov
jle
ret
stc
push
mov
cld
popa
insb
inc
jmp
inc
ja
repnz
cltd
ljmp
adc
xor
fstl
inc
inc
aas
in
and
sub
fistpll
bound
scas
fildl
icebp
cmpsb
es
movsl
sub
jae
int
mov
or
gs
int
dec
lds
adcl
ficoms
pushf
js
pop
push
sub
loop
mov
ss
xchg
inc
mov
dec
mov
or
sub
pop
or
mov
sbb
add
mov
jg
cltd
jmp
mov
sti
daa
cmpsb
leave
notb
enter
pushf
je
push
mov
jnp
mov
mov
adc
fwait
dec
or
or
pop
cmpsl
sub
mov
mov
jge
push
fiaddl
mov
cs
jnp
int
add
inc
dec
cld
js
or
stos
dec
test
sbb
cld
mov
aad
or
ds
add
daa
fistl
ficoms
out
repnz
repz
inc
dec
out
cmp
loopne
hlt
je
xor
cmp
mov
mov
fisttps
pop
jle
fwait
sahf
xchg
dec
xor
push
pop
mov
repz
out
in
rcrb
sti
sub
out
mov
popf
insb
sti
fsubl
push
fs
fst
sahf
imul
js
sbb
aam
inc
gs
pusha
mov
movl
mov
mov
sub
stc
and
stos
insb
shrl
js
dec
jmp
mov
jge
in
cmp
lahf
decb
dec
xchg
lret
mov
pushf
cli
mov
pop
mov
cltd
inc
sbb
addb
sub
sbb
adc
movsb
daa
xchg
cmp
roll
loope
mov
xor
fnsave
movsb
shrd
add
push
out
xor
push
das
inc
push
and
push
inc
ret
mov
jle
loopne
hlt
inc
in
mov
sbb
sbb
dec
mov
lds
sub
lods
pop
mov
mov
push
or
mov
cmp
push
insb
out
ror
cmp
mov
push
bound
add
xor
jbe
imul
shlb
cmp
stos
lds
ds
xor
or
cmp
add
cmp
push
dec
push
pop
sti
add
lret
ficomps
out
ficompl
lret
das
xchg
into
or
inc
jl
xor
or
mov
in
fisttps
adcb
jnp
cs
or
and
inc
or
cmp
addr16
jge
scas
sahf
jo
xchg
cmp
call
sub
cmp
loopne
pushf
xchg
or
mov
pop
or
icebp
mov
push
test
fwait
jns
iret
imul
repz
adc
cli
xor
fisubrl
mov
add
sahf
add
push
cmpsb
push
xchg
ret
mov
jg
test
dec
gs
adc
sbb
out
mov
and
mov
sub
fidivrl
iret
lea
iret
inc
int3
stos
cmc
add
movsl
sbb
mov
or
push
arpl
das
out
cmpl
movsb
aas
add
pop
repnz
aam
xlat
sarb
rcl
mov
enter
pop
shrb
popa
inc
testl
sub
pop
mov
out
loopne
push
out
sbbb
fwait
mov
mov
adc
sub
sahf
inc
inc
fidivs
pop
mov
inc
ja
sbb
xlat
mov
int3
pop
push
push
xchg
movsb
test
xchg
xchg
sbb
ds
sahf
mov
dec
imul
imul
inc
cli
in
add
ror
sub
sbbb
rclb
test
popf
out
add
inc
mov
insb
dec
jae
add
mov
hlt
xchg
ja
iret
or
sbb
popa
lahf
aas
cld
pop
xchg
mov
mov
add
inc
adc
add
popf
pop
inc
lds
dec
loopne
xchg
cld
jle
gs
mov
aam
jns
int3
fs
daa
xchg
pop
int3
and
fdivrs
sbb
mov
jecxz
sbb
bound
jecxz
rcrl
out
in
cmp
xchg
dec
cmc
inc
out
dec
or
ret
xchg
or
lds
mov
daa
mov
call
std
imul
xor
sbb
adc
xor
mov
inc
ret
in
dec
imull
repnz
cmpsl
ds
insl
xor
ret
daa
in
movsb
imul
or
pop
aaa
loop
push
adc
imul
in
xchg
jbe
and
mov
jns
dec
addr16
lcall
xchg
push
ja
daa
jns
lock
lret
push
lahf
push
out
and
lahf
outsb
cld
popa
add
scas
stos
psrld
rcrb
push
lods
int
mov
pop
add
mov
mov
sbb
inc
testb
hlt
fs
cmp
sti
imul
shrb
ja
lods
inc
xchg
lahf
push
cmpsb
loopne
fucomi
or
mov
add
inc
and
push
or
in
mov
test
adc
mov
stos
pushf
cmp
gs
scas
mov
push
or
incb
lret
int
xor
dec
callw
mov
or
repnz
daa
mov
adc
outsl
push
add
aam
int
imul
xchg
sbb
pop
jmp
and
push
cmc
into
fcompl
fidivrl
jbe
cmc
adc
cli
pop
pushf
les
add
aaa
pusha
jno
jmp
test
add
inc
aaa
mov
mov
adc
push
inc
mov
out
dec
mov
cmp
movsb
cmp
jge
jno
jmp
jl
xlat
popf
inc
or
into
push
jmp
jns
cwtd
ljmp
int
mov
loopne
mov
fildll
xor
inc
xchg
and
in
sub
mov
sub
push
mov
cltd
sbb
mov
cwtl
add
adcb
adcl
dec
mov
xor
aad
or
mov
mov
int3
sbb
push
jge
adc
outsb
dec
xchg
fnstcw
xor
test
inc
insl
ss
sub
xchg
lock
push
loop
and
outsb
jo
shrl
pop
pop
inc
std
jge
cmp
fldcw
rorb
xchg
cmpsl
mov
cmp
nop
imul
fdivr
adc
fidivs
sub
rcrb
daa
push
or
mov
loope
xchg
aam
lds
rcrb
xchg
scas
inc
push
sbb
inc
inc
jp
jp
pop
xor
cmp
push
cmp
cmpsb
cmc
inc
nop
xchg
pop
push
aas
and
cmpsb
ss
mov
or
sbb
imul
inc
adc
adc
add
jge
cmp
inc
dec
cmp
push
ss
mov
push
add
and
stos
xchg
sub
aas
addl
jbe
push
in
mov
insb
sar
ret
cld
push
mov
push
int3
iret
mov
iret
xor
dec
or
pop
test
in
pusha
nop
sbb
mov
jle
test
lods
jle
xor
je
testb
int
jle
mov
scas
mov
outsl
jmp
ja
xchg
mov
push
cmpsb
sahf
movsb
dec
fdiv
pop
sub
jo
dec
clc
xchg
cmp
outsl
mov
and
arpl
sbb
aaa
fidivs
push
xchg
or
subps
dec
stos
sub
add
fwait
inc
mov
and
or
jmp
popf
es
mov
insb
mov
push
in
xchg
mov
ret
fmul
out
sub
dec
jne
cmp
in
adc
inc
xchg
xchg
addl
out
push
adc
dec
pop
out
shll
lret
lcall
inc
stos
jle
rorl
sub
add
cmp
movsb
push
lret
cmp
mov
and
lret
shr
dec
dec
or
shl
int
dec
add
sbb
or
loop,pt
mov
sub
js
lret
out
xor
nop
out
push
mov
inc
jnp
shll
sar
data16
test
mov
sbb
xchg
jl
test
or
push
dec
in
dec
sbb
int
es
loope
or
sbbl
jl
mov
and
adc
sbb
mov
mov
or
cld
add
xchg
xor
pop
push
leave
ror
lods
sbb
addr16
push
push
jno
pushf
lods
xchg
mov
lcall
lret
aad
dec
adc
imul
jno
fidivs
mov
lea
push
inc
cmp
jnp
jo
push
icebp
popf
insl
push
lods
jmp
movsb
aam
adc
mov
aaa
fldcw
mov
cs
das
lret
mov
lods
in
int3
int
sbb
stos
xchg
adc
xlat
mov
cli
dec
ss
fsts
cmp
data16
jmp
stos
xor
fsub
push
ret
imul
pusha
cld
shrl
xchg
shll
add
xchg
pop
or
lret
mov
or
inc
mov
lods
call
mov
dec
push
lods
enter
push
arpl
ljmp
adc
fwait
testb
xchg
jl
mov
cld
pushf
sub
movsb
into
mov
sub
es
dec
arpl
sbb
into
add
mov
push
pop
lea
cltd
stos
mov
jp
incb
icebp
popa
out
hlt
mov
repz
add
repz
sahf
push
mov
in
inc
adcl
lods
or
cwtl
or
sub
test
sbbb
mov
es
xor
mov
inc
pop
hlt
popf
jg
mov
enter
adc
insb
cmp
inc
lods
ret
mov
dec
pop
call
mov
dec
push
mov
lods
les
sbb
adc
stc
stos
fwait
inc
shrl
mov
cld
repnz
movsb
out
push
sbb
leave
add
pcmpgtd
arpl
xchg
jmp
xchg
stos
mov
mov
lods
pop
insl
das
test
aad
mov
mov
or
jp
adc
xor
jle
xor
insb
sarl
loope
xchg
add
xor
int
frstor
test
call
xor
and
lahf
jns
dec
fistps
add
repnz
popf
sbb
in
push
js
xor
pop
nop
inc
loope
add
mov
in
insb
push
mov
or
test
push
lods
mov
rcr
imul
xchg
cmp
fidivs
test
cs
imul
jecxz
dec
cmp
jg
cmp
inc
dec
addr16
enter
jnp
js
popf
daa
rorl
inc
adc
sub
movsl
mov
aam
mov
iret
movsb
push
cs
mov
inc
add
or
rol
xor
js
xchg
adc
mov
or
adc
pop
subl
pop
fstps
inc
and
xor
js
iret
dec
dec
hlt
out
je
xor
sahf
cmp
lods
xor
push
imull
inc
cmp
mov
push
or
inc
int
fidivrl
mov
mov
gs
jg
sub
jg
mov
ret
addr16
dec
fimull
mov
dec
shll
or
ss
push
fcompl
daa
jnp
scas
popa
mov
icebp
lea
lock
and
sbb
push
sbb
js
and
scas
or
cmp
outsb
mov
mov
inc
mov
mov
arpl
push
movsl
pop
mov
rol
mov
ret
fmull
xor
jns
xchg
gs
mov
scas
jge
out
in
adc
out
lea
xchg
jge
cmpsb
pop
push
fwait
xchg
lahf
cmp
jmp
hlt
in
mov
pop
ret
ljmp
jg
aad
data16
int3
js
dec
adc
in
lahf
mov
mov
ficomps
stc
mov
pop
in
lahf
xchg
shll
mov
fcmovne
inc
sbb
insl
mov
push
fnstenv
mov
packssdw
lods
add
sub
adc
lods
jmp
scas
out
pop
test
mov
and
ja
push
pop
cmp
mov
in
push
cmp
mov
and
pop
push
in
pop
sbb
dec
and
pushf
lcall
pop
sub
fadds
xchg
cmp
ret
sub
lods
pop
cld
jae
adc
inc
mov
sub
dec
inc
aaa
in
int
arpl
jne
test
lret
mov
repz
insl
arpl
mov
sub
leave
fsubs
repnz
cwtl
es
cmc
cmp
pushf
loop
push
shl
in
push
int3
sbb
loop
test
push
cmp
repz
inc
xchg
enter
mov
jl
mov
sar
pushf
test
xchg
mov
inc
adc
push
imul
inc
loope
cmpsb
push
rcr
bound
pop
aaa
cmpsb
scas
sub
icebp
mov
aaa
sbb
mov
fwait
int
and
dec
popf
add
ds
aam
movsl
xchg
sub
test
popf
cmpsl
into
arpl
dec
popa
cmpsb
ret
clc
insl
cmc
mov
push
jle
xchg
inc
mov
sbb
mov
pop
test
fstpl
nop
movsl
dec
out
push
out
push
call
aaa
inc
out
sub
cmpsb
push
mov
fldenv
call
out
xor
xchg
stos
shll
sub
lahf
aaa
sub
push
mov
decl
aam
xor
into
ret
call
lret
pop
dec
pop
jae
cli
sub
inc
sahf
into
scas
sbb
mov
pushf
or
ja
push
in
jnp
and
jl
es
lret
inc
test
fsubrp
and
rcrb
clc
push
js
clc
jns
icebp
mov
push
dec
imul
ficoml
sub
enter
xor
cld
cmpsb
cmpsl
hlt
jne
xchg
xchg
stos
stos
fsubs
ljmp
cmpsb
or
fs
pushf
sub
sub
fisubrs
mov
aam
insb
xchg
pop
push
mov
jge
in
test
adc
and
inc
push
shlb
xor
loop
pop
js
mov
mov
jmp
enter
int
xor
xchg
pop
add
sub
das
jle
ret
pop
jns
jp
push
gs
stc
mov
cmp
sbb
pop
dec
add
out
cwtl
inc
mov
jp
cmpsl
insb
push
sub
mov
add
push
out
xor
mov
dec
xchg
ret
mov
imul
into
mov
fisttpll
mov
dec
mov
xchg
xchg
add
inc
xchg
and
popf
pusha
mov
push
cmp
arpl
mov
xchg
orl
loop
dec
hlt
push
into
dec
cmpl
mov
dec
pop
gs
sub
dec
xchg
adc
jmp
mov
xor
cmp
cmpsb
sub
mov
pushf
es
xor
out
iret
and
dec
sti
jne
fildll
add
shrl
arpl
xchg
shll
dec
outsb
mov
pop
repnz
xor
test
cmp
push
lahf
in
jne
inc
push
rcrl
and
dec
test
ja
call
mov
push
xchg
lcall
jns
hlt
testl
mov
sub
cmp
add
clc
std
roll
add
call
insl
test
pop
pop
std
loop
add
fldt
pop
mov
push
xchg
jg
in
loopne
aad
and
push
das
aam
cmp
repz
jnp
lea
mov
mov
lds
cltd
mov
inc
ret
inc
or
jl
push
test
addr16
cli
add
mov
adc
inc
lcall
sub
push
cmp
aad
push
incb
orl
sub
xor
mov
out
shrb
add
cmp
sbb
fiadds
jle
sbb
mov
jne
stos
repz
mov
enter
push
mov
mov
inc
fistpl
jp
cltd
dec
sti
mov
xor
sub
sbb
inc
and
jecxz
or
sub
inc
jmp
xor
in
add
cld
xchg
xchg
adc
xor
xor
push
mov
je
sbb
push
cwtl
mov
out
pop
aad
mov
flds
movsl
test
lret
xor
popa
push
sub
ljmp
clc
sub
push
repnz
lods
mov
pushf
mov
mov
push
mov
ja
std
mov
push
repz
orl
push
ret
dec
xlat
insl
not
xor
jle
fidivrs
jg
mov
mov
or
pop
outsb
jge
mov
das
sahf
pop
imul
or
inc
cld
lods
cmp
xor
cld
lret
ljmp
mov
lret
pusha
pushf
jp
push
cmpsl
rcr
push
insb
cltd
outsl
lret
cmpsb
movzbl
daa
rolb
scas
jbe
jge
lcall
mov
in
and
pop
mov
sbb
in
js
push
mov
scas
pop
jnp
out
push
add
inc
dec
mov
mov
dec
sbb
mov
int
jo
mov
nop
mov
out
iret
add
rcll
testl
sbb
mov
xor
and
jns
call
inc
lock
jmp
jge
lds
or
jecxz
cmp
or
inc
jp
jle
icebp
sbb
mov
lea
inc
add
and
sbb
mov
lods
lahf
in
gs
cmp
lcall
xchg
mov
jne
cmp
in
push
leave
mov
test
testb
dec
aaa
in
xchg
fcoml
rcl
fstps
xchg
jns
js
jno
repnz
and
sub
adc
js
mov
add
jne
adc
push
nop
cmp
subl
sbb
mov
rcll
push
pop
push
pusha
mov
push
cmp
leave
sbb
out
lock
sbb
hlt
inc
fisttpll
dec
das
in
adc
xchg
data16
mov
jmp
inc
aam
or
scas
aas
xchg
mov
mov
xor
cmp
std
xor
push
ljmp
add
xchg
dec
sub
in
xlat
mov
imul
jo
jmp
add
sbb
loopne
pusha
lds
aaa
mov
aad
loopne
hlt
xor
jbe
sti
ret
add
test
fadd
test
enter
and
add
cmpsb
cmp
idivl
jp
push
xlat
dec
outsl
lret
ja
or
in
sbb
xor
leave
sti
jecxz
insb
adc
lds
push
push
jmp
push
mov
fisubrl
in
pop
clc
sub
das
nop
fwait
xchg
int
add
jae
or
sbb
lods
pop
int3
popa
xchg
das
popa
xchg
adc
jo
inc
icebp
popa
cmp
add
or
and
adcl
push
fcmovne
stos
mov
jo
ja
repz
mov
push
adc
xchg
jb
xor
push
sbb
popa
dec
lods
jecxz
pop
sub
xchg
xchg
ss
cmp
jo
inc
loope
add
inc
dec
inc
notl
mov
dec
fwait
addb
pop
mov
pop
sbb
movsb
sar
lods
dec
sub
xchg
or
jbe
outsb
cmp
adc
fdivrl
pusha
lock
xchg
mov
push
push
adc
jle
dec
dec
push
mov
test
mov
pushw
ja
mov
cmp
sub
or
jp
iret
aaa
xorb
and
jne
adc
adc
inc
xchg
ja
xchg
jno
lea
cmp
pop
mov
fistl
enter
or
leave
scas
adc
and
loope
scas
fimull
xchg
xchg
pop
popf
and
add
push
es
inc
in
adc
mov
shl
jg
aad
dec
fwait
or
les
arpl
lds
inc
popf
les
test
add
insb
add
test
pop
out
loope
ss
mov
mov
xchg
in
xchg
jnp
sbb
jmp
mov
lock
lahf
push
insl
xlat
sbb
xchg
xchg
inc
les
xor
ljmp
inc
jge
test
mov
mov
mov
xor
add
push
fwait
mov
in
mov
push
scas
and
movsl
xor
fxch
jne
jnp
arpl
pop
cmp
cltd
xchg
cmpsl
add
lret
imul
mov
xchg
xchg
add
lret
or
sub
xor
jp
stc
mov
push
or
mov
cmp
dec
adc
jl
enter
aas
or
mov
mov
pushl
pop
xor
cmp
loop
jmp
and
sub
out
mov
imul
jnp
lds
xchg
lcall
mov
jg
leave
ret
jno
jbe
stos
xor
popl
adc
ficoml
push
repz
mov
imulb
jno
pop
xchg
rcr
bound
add
int
test
test
sbb
int3
fbstp
pusha
and
xchg
lods
subb
cmp
mov
ja
imul
out
dec
test
mov
stos
mov
push
arpl
movsb
fstl
add
inc
mov
lea
mov
sbb
push
dec
aad
add
sti
ja
inc
in
adc
jno
aad
dec
nop
and
mov
imul
adc
sub
arpl
pop
cmc
add
mov
push
ret
adc
fdiv
add
mov
ss
push
into
mov
notb
gs
scas
adc
cmp
jp
push
pop
pushf
mov
ds
push
or
inc
fs
inc
or
add
cmpsl
jl
sbbb
push
and
mov
jbe
xchg
js
ret
and
movsb
xor
mov
pushf
lock
sub
insb
pop
sbb
inc
sbb
jno
ss
scas
sti
fmulp
aaa
div
cmp
sub
mov
leave
inc
bound
call
dec
inc
fwait
inc
pop
pop
fwait
jp
jl
in
cmpb
stos
add
sbb
jl
dec
dec
es
jge
sub
xor
mov
push
sub
inc
dec
and
ds
scas
fisttpll
xchg
push
xchg
gs
mov
adc
mov
dec
test
or
dec
dec
fdiv
sub
shl
call
lcall
add
fidivs
shlb
dec
aad
add
xchg
add
mov
lea
test
cmp
mov
inc
mov
das
push
push
sbb
jl
push
ficoms
mov
mov
pop
pusha
adc
cmpsl
sub
scas
insl
cmp
aam
jge
or
je
push
outsl
outsl
sbb
repz
data16
idiv
push
mull
inc
out
test
pop
shrb
or
shr
fidivrl
push
loope
xor
test
push
push
inc
jmp
mov
clc
xor
aaa
mov
jae
movsb
or
jne
repz
outsb
imul
sbb
cltd
iret
push
mov
cmp
leave
test
dec
xor
cli
cmp
cwtl
cmc
or
dec
mov
or
cmpsl
cmp
sub
pop
mov
mov
or
jne
xchg
scas
sub
mov
mov
pop
pushf
rorl
pop
jnp
mov
jne
jnp
faddl
mov
cmpb
mov
inc
mov
sub
iret
adc
jl
xlat
ret
add
push
cmp
fisttpll
sub
adc
xor
pop
inc
movsl
cmp
pop
or
insb
fistps
bound
cmpsl
mov
fists
lret
xor
cmpl
push
mov
lds
push
adc
add
lea
aaa
add
jecxz
jmp
ljmp
cmc
and
push
cmp
adc
push
cld
push
and
jg
mov
cltd
das
xchg
push
mov
cmp
push
iret
and
data16
rcl
test
mov
cmpsb
fsts
jp
push
xor
mov
push
jmp
mov
aas
inc
mov
cbtw
jns
addl
and
push
rclb
jae
mov
rcrb
and
pop
or
inc
push
cmc
repz
sarb
lds
loop
outsb
add
fdivl
pop
orl
mov
cmp
fwait
inc
fs
in
clc
xor
inc
adcb
cmpsb
adc
bound
mov
cmp
in
dec
inc
notl
aad
cmpsb
into
sbb
jl
dec
divb
sbb
add
stos
fwait
mov
mov
push
daa
push
mov
sbb
or
cmp
dec
push
jno
in
rcll
xchg
daa
or
mov
aam
adc
add
add
push
sub
fisttps
mov
and
pop
scas
sub
mov
movsb
lcall
ret
ljmp
hlt
loopne
sub
push
jmp
push
mov
push
push
ret
bound
fwait
loop
leave
mov
pusha
rclb
xor
mov
mov
loopne
insl
push
cs
push
mov
fdivl
pop
and
cs
fcmovnbe
and
sbb
mov
sbb
aam
xchg
lahf
mov
fisubs
and
filds
aad
or
leave
loope
push
mov
sub
sub
bound
in
cmp
adc
data16
push
adc
rcl
sub
fildl
repz
adc
lock
aas
and
aaa
jnp
sub
dec
fiaddl
sbb
fnstenv
loope
clc
mov
sub
cli
mov
sti
mov
in
sub
test
outsl
mov
sub
pop
sub
pop
subb
mov
test
outsl
push
fcom
adc
fldenv
sub
sub
inc
int
mov
int
add
dec
xchg
mov
ja
stos
out
push
ljmp
ficomps
clc
mov
push
stc
enter
mov
dec
lods
nop
mov
inc
pop
cli
jmp
popf
cltd
xchg
xor
inc
fisubl
cmc
ja
pop
dec
das
ficomps
or
int3
aaa
sub
or
jl
ljmp
add
dec
dec
adc
mov
out
stos
jp
outsb
add
pushf
or
imul
adc
lahf
insl
nop
cmc
lock
bound
jb
mov
adc
aaa
pop
inc
dec
aaa
xchg
addr16
mov
jp
push
imull
mov
pop
movsb
pop
loopne
fisttps
mov
mov
xchg
leave
jbe
mov
xchg
mov
imul
fs
lahf
cmp
add
mov
popa
jb
popf
scas
sti
movsb
enter
test
xorl
lret
dec
mov
lret
xor
dec
es
push
insb
push
push
rcrl
aam
inc
aad
push
std
outsl
jnp
lcall
ret
adc
jne
test
outsl
call
sbb
jecxz
push
icebp
cld
lahf
cmpsb
je
out
leave
mov
sub
xchg
ja
xlat
jmp
dec
or
sbbb
inc
and
ljmp
jmp
fstpt
pop
lahf
jbe
mov
cmp
xchg
dec
push
xchg
test
mov
rdmsr
xchg
sbb
cmp
jp
adc
jg
ss
insl
add
sbb
sar
sahf
dec
adc
fidivrl
xlat
lcall
cmp
lods
mov
mov
mov
das
mov
std
pusha
xchg
pop
push
xchg
loope
sub
jmp
into
insb
jns
cltd
dec
pusha
mov
rorb
xchg
lahf
icebp
roll
mov
das
daa
xorb
je
push
inc
cltd
je
cli
iret
mov
sub
or
jecxz
outsb
ror
push
outsb
and
xchg
inc
icebp
addr16
cld
xchg
add
in
push
je
xor
sahf
rcrl
inc
lods
das
imull
fxch
push
sbb
xor
lret
mov
add
mov
loope
loopne
int
sbb
mov
cmp
mov
sub
pop
fsubl
pop
push
lods
jecxz
xchg
jns
outsb
mov
sbb
pop
dec
notl
jecxz
stos
mov
fs
test
subl
push
push
dec
lret
add
data16
arpl
hlt
xchg
iret
jbe
cmp
mov
arpl
stc
fsubl
movsl
cwtl
popaw
and
mov
jg
cmpsb
jmp
fisttpl
push
jge
add
push
js
divl
push
xchg
jg
xchg
push
fbld
adc
sarl
ss
in
xchg
mov
in
das
or
out
sbb
or
mov
fldl
mov
lahf
cmc
adc
jae
stos
dec
lods
xchg
xchg
mov
lods
stc
fistps
out
lcall
push
popf
mov
cmpl
add
dec
mov
pusha
inc
fwait
sbb
dec
jecxz
push
cs
inc
mov
mov
jno
cmp
addb
popf
sub
xchg
or
cmpsb
movb
mov
pop
add
sbb
cmp
scas
stos
aas
mov
ret
aad
lahf
test
in
addb
shl
pusha
xor
mov
shlw
adc
mov
sbb
in
mov
rcll
jecxz
jmp
pop
in
lods
scas
pop
loope
imul
jne
dec
jl
sbb
sub
fadds
mov
or
shlb
idivl
adc
sbb
divl
push
add
jo
xchg
dec
daa
mov
rolb
dec
cmpsb
add
test
jne
cmp
iret
aas
iret
lret
addr16
fs
mov
sbbb
fld
or
aam
stc
fidivl
lock
in
dec
aad
dec
and
insb
push
xchg
je
cmp
imul
pop
inc
aam
movsl
adc
add
lret
lcall
push
jecxz
sarb
or
lock
hlt
movsb
add
jo
testb
dec
jne
or
ja
inc
repz
fmuls
add
je
ljmp
jg
stos
leave
xor
adc
daa
pop
pop
adc
inc
inc
dec
pop
or
and
dec
js
test
daa
pushf
arpl
inc
sbb
mov
mov
mov
adc
push
add
movsb
xchg
mov
cmpsb
sbb
es
out
fdivrs
popa
mov
push
mov
jl
clc
test
add
ffreep
mov
inc
loope
xchg
sbb
inc
sbb
pop
or
ror
loopne
imul
mov
std
mov
and
jae
fcomip
push
ljmp
fadds
sub
xchg
push
mov
repz
and
imul
stos
lahf
and
loop
das
in
stos
xor
sarl
push
sub
fcoml
dec
imul
cmp
inc
das
idivb
das
xor
push
imul
xor
sub
jbe
and
mov
test
push
fs
loopne
pop
repz
int
clc
out
jae
mov
push
scas
jle
insl
imul
outsl
xor
shlb
jne
out
sub
sub
lock
jmp
push
push
pusha
mov
jmp
pop
jo
pusha
and
add
movsb
cltd
sub
je
push
push
push
test
pop
notb
shl
adc
and
leave
call
cmpb
out
push
cmpsb
push
xor
add
push
inc
add
adc
xchg
test
pop
add
fisttpll
lods
adc
or
mov
testl
imul
in
add
pop
sub
iret
les
mov
inc
mov
pop
push
fsubrp
lahf
push
jmp
mov
data16
add
fnstcw
cld
dec
mov
iret
mov
jg
call
aam
lea
jg
iret
stc
sub
jne
and
pop
adc
les
fwait
test
movsl
imul
sub
loop
ss
pushf
mov
jl
push
mov
rorb
stos
sti
mov
aas
mov
mov
dec
outsb
dec
push
xchg
ror
adc
mov
and
mov
push
lods
xchg
push
xchg
ds
sub
mov
notb
movsb
push
and
addr16
xor
add
pop
add
jae
inc
jns
stos
sub
imul
mov
jae
out
out
loop
sub
mov
add
orl
int
fbstp
or
sti
les
test
mov
scas
pop
aas
sub
cmpsl
xor
pop
jle
adc
add
ss
insb
cmp
push
dec
aad
les
stos
push
in
repz
push
je
add
mov
cmp
mov
popf
pushf
dec
mov
or
movsb
out
movsl
and
outsb
xorb
in
std
mov
jnp
stc
adc
icebp
adc
mov
int
push
sub
push
movsl
cltd
adc
mov
pop
cmp
fstl
imul
pop
mov
mov
in
pop
jnp
in
js
cmp
idivb
nop
xlat
test
xchg
shl
push
dec
popf
std
lcall
ret
flds
jecxz
jb
str
pop
test
inc
imul
imul
push
cli
enter
mov
mov
movsl
mov
lds
dec
sbb
cld
dec
fwait
das
cmp
push
jl
mov
fmul
jp
and
inc
sub
insl
stc
dec
adc
out
stos
stos
repnz
push
mov
xchg
jle
pop
andl
push
outsb
mov
sub
repz
pop
mov
into
xchg
stos
xor
or
or
test
mov
mov
in
mov
mov
fsubs
fcmovnb
mov
lahf
mov
test
bnd
xlat
dec
push
dec
fimuls
mov
cmc
fildll
sahf
push
jmp
or
or
rcr
loopne
mov
pop
jge
lret
mov
mov
adc
adc
hlt
aam
sti
ret
subb
inc
mov
rorl
inc
or
shl
jno
gs
fs
insl
jne
shll
jnp
inc
outsb
pop
rcr
and
xor
hlt
fcoml
mov
and
push
pop
push
pop
adc
cld
fdivrs
cmpsb
std
add
sub
call
arpl
ljmp
shrl
mov
and
test
fbld
lret
push
xor
sbb
ret
sub
dec
adc
mov
test
or
lret
xchg
push
addr16
ss
xchg
or
pop
dec
and
cmp
rclb
jo
cltd
pop
or
imul
les
jns
aam
and
sbb
mov
ds
scas
repz
ljmp
imulb
mov
mov
pop
adcl
insl
or
cmc
xor
and
xlat
pop
lahf
push
jne
ja
xchg
popf
or
sub
mov
in
mov
seta
inc
lret
insb
mov
jmp
sub
mov
fs
bound
fdivl
nop
inc
mov
xchg
jnp
xchg
mov
lods
outsb
or
push
pusha
repz
cmp
popf
les
je
daa
addr16
push
xor
cmc
neg
cli
inc
xchg
aaa
adc
jle
adc
sub
mov
loopne
imul
aaa
add
fstps
leave
andl
aas
sub
popl
ret
jge
mov
cld
pop
das
pusha
jl
mov
roll
pop
and
push
sub
cmpsl
jae
mov
sbb
fidivrl
and
jg
out
adcl
pop
scas
gs
lahf
lds
sti
in
insl
lea
ret
dec
arpl
aas
cwtl
enter
sbbl
push
mov
addb
push
jne
dec
push
push
out
dec
pop
addb
stc
scas
xchg
lods
or
mov
gs
jge
pop
or
std
cs
inc
pop
jnp
rcrl
push
xchg
pop
repz
fwait
xchg
lret
lock
movsl
jbe
into
stc
pop
mov
adc
test
in
test
frstor
mov
jmp
loope
sub
push
xor
jne
xchg
mov
in
adc
dec
loop
pop
in
jnp
mov
dec
das
aam
in
out
sub
aam
nop
and
mov
fmul
lcall
push
imul
push
mov
outsl
addr16
stc
out
add
add
xchg
mov
mov
add
jbe
les
mov
mov
sbb
out
mov
cli
lea
jl
or
mov
repnz
and
xchg
ss
mov
subl
vmread
jo,pn
xor
test
mov
mov
xchg
push
xchg
mov
xchg
adc
mov
lret
xchg
or
pusha
xor
pop
rclb
mov
out
pop
iret
inc
push
fnstsw
shll
jp
mov
xchg
cmp
xchg
mov
and
xchg
repz
mov
dec
js
pop
adc
mulb
inc
hlt
iret
ja
sti
rcr
sub
sbbb
je
ret
mov
mov
cmc
xchg
lcall
push
jg
scas
mov
and
sbb
pop
push
mov
mov
shlb
in
and
jl
push
xchg
jne
pop
pop
pop
xorl
mov
adc
xlat
in
ret
arpl
inc
pop
into
sbb
test
dec
dec
pushf
lcall
or
and
fwait
pusha
into
jne
push
movsl
test
xchg
push
push
fistpll
lods
test
popa
mov
popf
xchg
int3
push
lea
lods
sub
sub
mov
add
adc
repnz
or
mov
rol
mov
adc
scas
sbb
cs
jb
aad
adc
fstpl
in
outsl
addb
imul
xchg
shrl
jg
pop
push
pop
xor
enter
xchg
sahf
add
push
mov
test
inc
mov
mov
lcall
imul
cmp
inc
adc
adc
cld
push
dec
push
ljmp
add
xor
mov
add
push
mov
fdiv
xchg
aaa
xchg
out
xchg
shlb
and
ret
cmp
jp
ss
imul
sub
outsl
movsb
xor
fcomps
xchg
cli
rcrl
fstl
pop
out
xchg
stc
push
out
pop
mov
scas
popf
jmp
clc
icebp
in
inc
xchg
mov
sbb
out
ds
ret
adc
mov
ret
orb
mov
movsb
out
push
popf
fs
ja
adc
push
loope
ljmp
sbb
stos
imul
cmp
cmpsl
dec
add
lods
mov
ljmp
cmp
aad
inc
loope
mov
shr
divb
fmull
fucom
arpl
jno
mov
pop
push
mov
xor
cmpsb
in
test
mov
imul
lods
je
cli
push
or
jae
adcb
call
ret
cs
movsl
shll
mov
xchg
and
xchg
dec
sbbb
das
icebp
fldcw
shrb
aad
add
jb
mov
mov
clc
xor
stc
insb
push
sarl
push
lds
cld
stos
sub
add
mov
dec
es
cmpl
popf
sbb
popl
jmp
cmp
jno
enter
xchg
mov
xchg
nop
dec
add
clc
adc
cmp
iret
sub
cmpsl
movsb
loop
std
mov
and
xor
lds
js
es
mov
clc
pop
add
call
loopne
and
cmp
adc
push
fidivrl
call
pusha
jg
dec
pop
jp
xchg
imul
imul
sub
jae
sbb
xchg
jmp
shr
pop
xchg
xlat
mov
out
dec
mov
jne
mov
fwait
add
and
mov
pop
or
imul
adc
andb
and
cmpsl
mov
popl
fucom
adc
xchg
xor
jp
push
mov
rorl
nop
cwtl
cmp
int
ret
pop
lods
cs
mov
lock
pop
cmp
fidivs
ret
adcl
insb
je
mov
cli
mov
fiaddl
scas
stc
lret
ja
out
into
cli
add
aad
jle
stos
mov
inc
sahf
xchg
les
shll
ds
rcrl
inc
or
frstor
lret
jge
lret
data16
pop
jmp
jbe
ret
insl
ret
sub
lahf
xor
daa
mov
cmp
jbe
pushf
mov
jmp
loop
mov
aaa
test
jb
negl
in
jle
lods
xor
mov
nop
xchg
lods
ds
outsl
xchg
dec
rcrb
test
cmc
cld
dec
loop
dec
mov
and
sub
dec
bound
push
jae
stos
sarl
jae
dec
or
add
jo
xor
lcall
sti
data16
imul
sbb
dec
and
add
adc
fistl
adc
lds
pop
mov
les
jno
xchg
mov
mov
out
adc
sahf
sbb
xlat
or
cmc
sbb
sahf
es
ds
jae
cmp
cmp
mulb
push
les
inc
je
dec
mov
add
aaa
jne
mov
leave
repnz
push
fiadds
fdivrp
sahf
pop
into
pop
adc
add
nop
flds
jmp
jl
cmp
xor
cmpsl
js
out
stos
cmp
push
push
mov
dec
mov
cmpsl
xchg
dec
or
sub
add
jns
nop
jne
sub
outsl
push
outsb
and
cmp
negl
sub
mov
cmpsl
call
push
mov
sub
lods
stos
fwait
dec
pop
mulb
insl
stos
jns
ret
ss
in
add
pop
sub
or
push
mov
ja
aaa
scas
sub
lcall
mov
mov
mov
sti
popa
ret
pop
aaa
push
dec
sub
mov
ja
fdivp
xor
popf
jb
mov
xchg
orl
pop
test
push
loop
je
sub
dec
fcompl
add
sub
mov
cs
fisubrs
jmp
push
mov
jl
scas
and
in
mov
loope
in
add
jl
movsb
out
sbb
jge
jnp
jl
pop
ljmp
stc
mov
mov
leave
lahf
loop
aam
xchg
fildl
in
mov
lds
imul
das
jmp
cmp
pop
cmp
mov
xchg
dec
lret
mov
adc
bound
xor
cltd
repnz
inc
cmpsl
xor
adc
mov
jns
les
xor
push
gs
loop
loopne
mov
add
fs
cmp
adc
mov
sbbb
or
jae
lahf
push
inc
push
sti
popf
test
sbb
xchg
js
ret
xchg
add
in
pop
andb
xchg
xchg
pop
nop
xchg
cwtl
push
aas
aaa
es
push
testl
mov
mov
mulb
mov
cmp
sbb
andl
xor
jno
fmuls
push
xor
lcall
das
xchg
cmp
imulb
cli
fidivs
jnp
dec
clc
js
out
into
lods
imul
mov
test
or
cltd
mulb
lock
in
enter
data16
subb
dec
dec
mov
shr
shrl
xor
lods
pushf
sahf
push
mov
loopne
ja
jecxz
inc
ljmp
int3
popa
test
pop
stos
nop
cmpsl
leave
adc
mov
mov
clc
repz
test
das
inc
je
inc
popf
stc
mov
xchg
sub
and
jmp
das
test
dec
cmp
andl
dec
loop
mov
mov
cmp
insl
cmp
cmp
sub
mov
mov
test
dec
pop
cmp
jmp
out
sbb
mov
and
ret
sub
jnp
cmp
into
icebp
fstl
push
jae
inc
mov
addl
mov
pop
xchg
loope
dec
fbstp
pop
cmp
pop
idivl
inc
stos
lods
outsl
lahf
or
inc
mov
in
nop
stos
mov
cltd
pop
insb
cltd
sbb
mull
into
pop
ljmp
mov
clc
xchg
mov
ret
sub
scas
sub
mov
and
add
jmp
push
xchg
test
popf
jae
sti
movsb
sbb
xor
sbb
and
jb
in
xchg
stos
xchg
ds
pop
out
jle
or
xchg
lret
imul
jmp
push
sbb
dec
hlt
decw
sub
rorb
add
push
adc
sahf
adc
jge
push
mov
xor
inc
shrd
dec
mov
mov
popa
cmp
or
pop
push
push
adc
sub
sub
imul
xor
incl
ss
je
outsl
sub
int
pop
insb
xchg
dec
dec
fdivl
cltd
incb
movsl
inc
test
or
pusha
pop
fsubrl
or
popa
pop
jbe
and
scas
dec
mov
cmp
aas
shlb
cli
xchg
aaa
sub
and
push
mov
add
in
lret
stc
sbb
mov
sbb
mov
xchg
popa
daa
push
xchg
in
mov
mov
test
jnp
rorb
mov
dec
jg
stos
mov
and
sahf
out
mov
fisttpll
xor
test
popa
jne
mov
hlt
pop
rcl
cmp
jl
outsl
xchg
pop
mov
jl
cs
lds
aaa
scas
cmp
and
icebp
dec
nop
and
fwait
test
fidivrl
fwait
mov
imul
test
inc
dec
xor
lret
push
ret
es
test
jne
aad
mulb
xchg
push
xor
pop
push
xor
lcall
jle
out
ljmp
fdivrl
mov
mov
mov
dec
mov
pop
insl
das
roll
cmc
enter
cmp
stos
test
outsl
pop
mov
ja
mov
or
cmp
rcrl
lods
stc
loope
mov
pop
aas
bound
pop
sahf
inc
sub
mov
cmp
pop
bound
js
mov
push
lea
push
adcb
mov
jecxz
mov
test
daa
or
aas
dec
mov
mov
dec
loop,pt
ja
inc
pop
jmp
test
dec
stos
cmp
imull
cltd
push
push
stos
cld
push
xchg
xor
cltd
sbb
xor
pushf
inc
push
xor
int3
cli
push
mov
push
into
sub
jbe
xor
cli
das
stc
repz
pop
jle
sahf
and
xorl
jmp
test
or
mov
xorb
aam
fdivs
daa
test
rolb
jns
jno
or
xor
push
insb
stos
rcrl
stos
outsl
sbb
loop
bound
sub
int
pop
insl
lahf
add
sub
sbb
dec
mov
enter
pop
sbb
push
pop
pop
outsb
shll
jl
lods
push
jmp
movsb
adc
mov
and
jge
nop
cmc
sahf
mov
add
das
add
and
enter
pushf
inc
out
sub
out
jne
ficomps
fistpl
and
add
repz
mov
or
pop
or
push
js
shl
lods
hlt
sbb
sti
add
inc
ficoml
je
push
rcr
mov
cmp
negl
pop
in
enter
jecxz
lds
dec
movsb
mov
lods
pushf
sbb
or
push
add
int3
mov
jae
mov
xchg
scas
add
sbb
fadds
mov
or
cli
pop
test
pop
push
fsubrs
int3
adc
test
mov
mov
cmpb
dec
clc
je
lock
inc
inc
in
lcall
sbb
mov
adcl
je
add
and
mov
arpl
into
pop
jl
lds
pop
push
mov
xor
cld
dec
cwtl
add
push
scas
lea
and
or
enter
call
insl
les
test
jnp
shrb
mov
jno
mov
push
fistpl
and
push
dec
leave
pushf
xlat
dec
and
popf
mov
loop
sbbb
pop
mov
sub
dec
jno
mov
jae
lea
xor
xchg
loopne
repnz
repz
xor
cltd
movsb
mov
ds
das
scas
mov
lock
mov
fidivs
cmc
mov
out
mov
mov
mov
pop
sbb
sub
pop
cmc
cltd
ficoms
ret
jnp
test
aam
mov
adc
jg
in
decb
ret
cwtl
hlt
arpl
inc
push
push
xchg
popf
repnz
imul
rolb
push
mov
shll
add
inc
test
notb
js
aam
pop
jmp
inc
xchg
cwtl
pop
in
adc
cwtl
rol
jl
inc
dec
pop
xchg
data16
jne
mov
addr16
cld
cld
mov
push
sti
xchg
enter
inc
cmpsl
insl
ja
xchg
pop
repz
adc
rcrb
xor
mov
out
adc
enter
loope
jb
mov
stos
in
test
bound
call
sbb
ljmp
enter
pop
mov
repz
outsl
sub
gs
in
out
pop
pop
popa
and
and
je
daa
daa
xchg
cld
mov
cld
pop
sub
inc
in
or
xor
fcmovb
push
icebp
out
sub
out
scas
sub
rclb
mov
xchg
popf
pusha
out
cwtl
js
jo
fbstp
adc
shrl
mov
or
ret
mov
int3
aaa
test
sbb
push
adc
hlt
mov
shll
push
jecxz
sub
xorb
outsl
cmpsb
cmp
sub
ss
stc
or
add
shll
addr16
inc
sub
mov
jns
jae
in
enter
movsl
cmp
dec
mov
fdivs
and
pop
repnz
test
loope
mov
push
icebp
jne
rorl
arpl
cli
lret
inc
loop
mov
inc
test
xor
xor
int
outsb
insb
lds
jl
or
mov
xor
or
xor
in
mov
aam
cmp
and
ud0
xor
test
jecxz
es
sbb
js
push
popa
incb
adc
or
lret
inc
iret
fmull
inc
mov
and
cs
mov
sbb
sbb
adc
xchg
int3
cltd
hlt
imul
mov
repz
popa
dec
cmp
sbb
setns
inc
addl
cmp
mov
arpl
jecxz,pn
lret
sub
jle
mov
ds
push
jmp
cmp
inc
aas
bound
cltd
adc
fdivrl
push
lds
fs
inc
sub
stc
decb
xchg
mov
mov
pushf
mov
fidivs
orb
jle
lock
xchg
cli
fildll
in
addl
sarb
inc
add
aad
push
ret
pop
sbb
sub
mov
lods
test
scas
xorb
addr16
loopne
and
ror
fistpll
push
lds
mov
loopne
and
xor
enter
into
div
jns
jmp
push
xor
push
push
fsubrl
test
inc
mov
xchg
fldcw
pop
inc
lret
aas
movsl
jne
data16
fprem1
out
dec
sub
iret
cmp
scas
mov
rcrb
inc
pop
add
test
int
mov
sbb
mov
imul
test
xlat
sbb
pop
mov
cmp
insl
in
xorl
sub
lds
jg
xchg
leave
loope
push
jne
push
cltd
jnp
sbb
or
xchg
sub
add
mov
out
clc
lds
jns
popa
and
adc
daa
inc
add
fwait
popa
and
adc
in
mov
lcall
push
and
pop
adc
fistpll
pop
sbb
fdivr
cld
xchg
outsb
jl
push
and
dec
rcrb
fisubrs
mov
lea
mov
popf
insl
jbe
sarl
lods
sahf
fidivrl
xchg
sbb
jmp
rolb
jge
mov
jns
rcrb
add
js
xacquire
sti
sub
pop
cmp
shl
xor
dec
mov
lret
ja
mov
mov
movsb
lea
test
into
push
add
fdivl
cmp
dec
push
mov
jge
fnstsw
sub
lret
sbb
ret
xor
dec
mov
push
xchg
jae
lcall
fcomip
ret
outsl
mov
pop
popa
or
push
js
sbb
mov
push
int
xchg
out
dec
sub
or
int
sbb
add
pop
imul
and
movsb
fsubrp
aam
push
jmp
mov
daa
cmpsb
adc
xchg
jge
or
mov
jmp
adc
ja
scas
mov
lret
add
push
sbb
sbb
shll
cld
daa
mov
call
enter
call
popa
insl
and
cli
or
xor
movsb
inc
fs
test
mov
decb
inc
xchg
xchg
cmp
fstl
repz
mov
test
and
sub
loopne
cmp
loopne
dec
jmp
xchg
sub
jp
test
jo
loop
mov
push
fmulp
rclb
jb
int
mov
sbb
pop
sub
lret
jns
pop
enter
mov
inc
ret
inc
xchg
leave
ret
sar
add
addl
das
push
shrb
push
mov
dec
lea
insl
jae
mov
or
pusha
adc
xor
xchg
lods
jp
cld
adc
cmc
hlt
test
add
neg
inc
fsub
push
into
add
ret
pop
pop
lret
push
xchg
mov
mov
xchg
in
push
inc
cli
push
and
outsl
mov
dec
pop
lods
xchg
and
and
pop
jne
aad
inc
aam
push
and
cmpsl
dec
and
rolb
sbb
xor
jmp
xor
shrb
xchg
inc
sbb
and
out
or
add
testl
pop
or
scas
cmpsb
dec
test
jg
push
fnsave
test
in
hlt
rcrb
stos
movsl
lods
dec
insb
adc
push
add
test
test
inc
or
addb
jmp
mov
mov
xor
mov
fistl
std
loop
xchg
inc
push
and
or
dec
sarb
add
mov
push
inc
popf
jp
test
push
lret
xor
adc
mov
or
incl
add
popa
jne
mov
sbb
pop
jbe
es
xor
dec
dec
pop
out
cmpsb
aas
test
xor
jbe
xlat
mov
pop
das
sbb
sbb
push
pop
adc
cmpsl
arpl
jecxz
popa
jecxz
pushf
je
cmp
pop
int
nop
xor
aam
jns
xchg
jmp
cmpsl
add
dec
pop
movsl
cmp
gs
bound
loope
pop
fiaddl
mov
int
pushf
fwait
xor
jne
pop
or
testb
push
xor
inc
sub
fs
xor
push
ljmpw
add
xlat
subl
push
rcll
push
test
insl
popf
out
loopne
pusha
popf
sahf
popa
dec
push
sbb
xor
es
cmp
imul
jb
mov
lock
pop
inc
mov
lret
cld
icebp
jge
js
leave
das
stc
into
outsl
pop
clc
xchg
in
fdivr
fisubs
sub
inc
fwait
outsb
or
pop
mov
adc
xchg
ret
xor
mov
insl
add
dec
or
icebp
pop
xor
bound
pushf
sti
addb
xchg
cmpl
mov
inc
jl
movsl
andl
push
dec
xchg
lods
outsb
sub
mov
sub
aam
push
daa
into
dec
inc
pop
jae
jle
jo
movsl
fs
or
pop
in
inc
xchg
or
pop
push
ret
aad
cmpsb
call
add
sti
xchg
mov
lret
into
cmc
fbstp
out
adc
or
incb
sbb
jns
adcb
adc
movsl
cld
scas
sti
and
outsb
loop
mov
dec
loopne
pop
mov
stc
jmp
mov
push
xor
mov
maskmovq
sbb
mov
push
pushf
cmpsl
flds
es
nop
mov
pop
jmp
stos
dec
in
jno
movb
inc
movsl
je
hlt
shll
shrb
cmc
arpl
jg
jno
xlat
dec
mov
fwait
cmp
jge
hlt
dec
xchg
aaa
xchg
mov
fnstenv
adc
xchg
inc
xor
dec
sub
pushf
add
mov
cmp
sub
sub
test
stos
dec
shrb
jl
fdivs
mov
and
adc
je
test
sub
push
outsl
jle
ror
and
or
push
push
shll
das
loopne
mov
xchg
mov
dec
cmp
cmpsb
xor
fld
pop
sti
test
adc
pop
mov
out
rorb
mov
mov
pop
dec
mov
or
test
les
mov
add
mov
sbb
sub
pop
pusha
mov
jge
fwait
mov
sti
sub
je
enter
xchg
dec
out
out
cmp
cmpsl
pop
pop
jae
xchg
jge
cmp
and
loopne
mov
inc
sbb
test
je
scas
sub
mov
addl
out
cmc
addr16
lret
sub
mov
mov
jno
sbb
xchg
pop
loop
dec
sub
cmp
daa
les
cmpl
xchg
pop
lods
or
dec
in
xchg
lahf
and
sub
imul
or
mov
pop
in
mov
imul
or
and
stos
mov
imul
xlat
and
loope
mov
adcb
shrl
xchg
push
rolb
sbb
mov
sbb
iret
inc
aaa
test
data16
outsl
pop
jl
adc
pop
fsin
fnstsw
inc
push
cmp
enter
xor
outsl
add
mov
in
or
lcall
lahf
imul
lret
push
mov
int3
cmp
shl
arpl
aas
icebp
shl
and
push
mov
add
mov
push
aad
arpl
mov
jle
xchg
into
inc
jne
add
push
fdivs
mov
or
add
sbb
shrl
es
adc
jns
and
out
xchg
push
lcall
dec
loopne
mov
sub
ret
pusha
ja
cmp
and
es
in
mov
and
std
jno
fimull
and
jecxz
push
push
fwait
stos
imul
nop
xor
inc
or
sbb
fs
xchg
push
adc
dec
aad
push
pushf
pop
test
xlat
mov
movsl
and
cltd
imul
std
lock
xchg
inc
das
hlt
lahf
and
pop
jno
shll
movsl
dec
decl
mull
leave
mov
mov
dec
cmp
stc
pop
jg
xchg
mov
sahf
mov
mov
fwait
lea
jg
push
adc
adc
cmp
jae
outsl
jb
pop
nop
les
fs
jecxz
mov
out
xor
popf
mov
or
jae
jb
nop
jne
jae
mov
repnz
dec
sbb
adcb
cmpsb
mov
jge
popf
les
clc
xchg
mov
adc
pushf
iret
scas
push
cmp
and
jbe
adc
xchg
test
popa
mov
movsl
call
fxch
nop
pop
mov
mov
mov
mov
mov
jns
xchg
mov
hlt
inc
jno
in
pop
ljmp
dec
mov
pop
jnp
ss
cmp
add
arpl
sbb
push
mov
out
outsl
mov
and
aas
sbb
aam
das
out
js
nop
or
push
mov
or
idivl
mov
es
adc
adc
inc
jnp
lods
movsl
lcall
call
cmp
push
iret
push
xor
stos
push
mov
pop
outsb
and
nop
jecxz
fdivp
and
cmp
lret
xchg
imul
hlt
push
lret
mov
cmpsl
jns
sub
push
shll
sbb
sbb
jmp
cmp
jae
add
jle
dec
inc
mov
jnp
jb
inc
aas
icebp
push
ret
pop
jne
mov
aaa
inc
lret
push
dec
sti
inc
pop
in
aad
fdivrl
out
sub
mov
lahf
orl
xor
xor
stos
aam
nop
cmpsb
insl
mov
xchg
inc
es
test
rorl
jecxz
gs
outsl
outsb
shll
add
xchg
scas
mov
adc
mov
fimull
xor
je,pt
and
jbe
pop
loope
arpl
adc
js
mov
or
and
enter
adc
or
mov
inc
imul
or
rcrb
mov
nop
jecxz
pop
dec
or
andb
cmp
in
xchg
mov
or
pop
push
negb
lds
sbb
mov
jecxz
lods
sbb
jl
jp
inc
dec
sbb
outsl
shl
jl
arpl
mov
fs
clc
mov
or
dec
xchg
enter
int3
je
xchg
add
repz
mov
mov
adc
mov
addb
js
mov
sub
pop
cwtl
mov
push
in
cmp
mov
stos
jl
cli
jge
loope
imul
add
les
fisttpll
adc
adc
insl
cld
jg
std
pushf
call
cmpsl
add
mov
sub
int3
mov
pushf
sbb
sbb
insb
cmp
lahf
jg
test
inc
fcmovnb
pop
pop
dec
popf
icebp
sbbb
stos
adc
faddl
sub
iret
xor
daa
pop
jle
xchg
push
cmpb
lahf
and
mov
xlat
xchg
nop
lds
mov
dec
mov
add
xchg
dec
divb
mov
lock
je
cmp
sbb
or
cltd
mov
lock
int
addr16
mov
sahf
dec
ds
or
cli
rolb
push
sbb
jle
aaa
movsl
fisttpl
mov
rorl
xchg
mov
fmuls
pop
test
stos
mov
xor
xchg
adc
xor
dec
or
push
std
and
mov
out
cmp
repz
mov
add
aas
xor
mov
mov
leave
addl
add
clc
sub
pop
dec
dec
clc
push
pop
jnp
int
rcrl
and
inc
cmp
stos
sahf
popl
mov
in
push
add
sub
frstor
dec
mov
sub
push
jne
sub
in
cmp
lods
pop
fld
mov
adcb
in
lcall
pusha
and
and
cmp
mov
orb
jae
jbe
push
hlt
pop
ja
cmp
in
or
push
xchg
popa
cmp
and
enter
xchg
arpl
mov
add
mov
dec
push
bnd
fsubrs
fdiv
psubw
insb
mov
mov
adc
iret
ficomps
and
je
lea
repnz
mov
stc
loope
stc
mov
jp
les
lods
inc
inc
mov
fisttps
or
dec
push
and
movsb
lahf
fsubrp
aaa
add
int3
gs
xchg
push
lds
xor
pusha
mov
xchg
xorb
andl
loop
xchg
mov
gs
test
popf
test
pop
in
push
lea
mov
mov
and
xchg
pop
sbb
push
mov
jnp
mov
lock
add
adc
jle
test
sub
faddp
inc
je
dec
lret
add
fiadds
std
inc
jo
pop
cmp
scas
cli
dec
sbb
sbb
cli
aaa
pop
add
adc
dec
mov
mov
add
sub
mov
mov
mov
fs
sarb
ret
jae
mov
psrlq
inc
gs
idiv
inc
xor
cmpsb
mov
enter
inc
mov
xchg
pusha
jmp
ret
int
xor
int3
jl
in
xchg
ja
fdivrl
loop
pop
cmp
pop
xor
lods
adc
ljmp
sub
dec
cs
inc
cmpsb
sbbb
fs
and
bound
bnd
cld
sbb
xor
cltd
lea
xor
xor
lds
mov
adc
mov
push
into
ds
adc
adc
adc
std
pop
lret
cwtl
adc
xor
mov
mov
adc
addr16
mov
stc
int
movl
adc
pop
lret
idivl
add
popf
icebp
in
pop
cmpsb
sub
mov
xchg
xor
jle
movsl
xor
mov
fsub
stos
cmp
movb
xchg
pop
pop
mov
roll
daa
sub
push
js
mov
cs
mov
xchg
gs
and
repz
jae
add
mov
mov
push
push
imul
push
add
sahf
fimuls
xor
xchg
pop
mov
loopne
into
inc
pop
outsb
add
sahf
jge
aaa
test
lahf
lcall
out
mov
xor
popa
dec
test
test
inc
xchg
pop
pop
clc
jo
dec
in
popa
fidivrl
cld
clc
out
arpl
jl
cmp
pop
dec
loopne
cld
pop
ret
outsl
xchg
gs
out
sub
adc
pop
fbld
pop
pop
imul
cmp
mov
fwait
lret
mov
inc
push
jbe
adc
dec
sbb
mov
push
mov
push
test
add
xchg
sbb
pusha
push
outsl
xchg
sbb
test
in
pop
das
inc
jle
mov
mov
lahf
pop
pop
push
inc
imul
cmpsb
inc
pop
mov
aam
mov
lcall
bound
add
icebp
push
insb
stc
sbb
push
insb
loop
xor
add
fwait
cmp
in
stos
xor
test
enter
cmc
push
leave
dec
inc
popa
xchg
jl
mov
pop
int3
mov
cwtl
ja
imul
aam
jl
and
mov
fiadds
stos
dec
xchg
cmpsb
xor
xchg
dec
dec
in
jnp
cmp
add
xchg
adc
push
dec
jecxz
adc
cmp
rcrb
adc
inc
outsl
loope
lret
jge
sbb
xor
lret
adc
sti
or
mov
and
stos
or
pop
mov
popf
aas
xchg
inc
adc
movd
mov
jo
mov
and
popa
and
sbb
mul
xchg
loope
lcallw
or
mov
adc
cmp
out
inc
sbb
pcmpeqd
sbb
add
call
mov
cmovns
clc
lock
jns
xor
into
mov
inc
xchg
cs
stos
and
xchg
jns
xchg
jl
jno
jbe
mov
mov
rcrb
test
fs
inc
ds
mov
sub
enter
stos
pop
dec
jp
adc
lea
jmp
push
aad
shll
mov
push
and
xchg
mov
dec
and
xchg
mov
nop
in
mov
adc
mov
mov
adc
dec
lret
nop
cmp
or
mov
pop
pop
sbb
ja
das
push
sub
pop
push
es
dec
mov
cs
scas
gs
inc
xchg
stos
dec
fsubrl
sbb
inc
insb
sti
xchg
cmp
mov
push
xchg
pcmpeqb
ror
int
dec
mov
inc
idiv
cmp
movsl
loope
xlat
lea
movsl
test
push
leave
iret
sbb
es
lock
cli
xor
imul
ds
out
je
fwait
and
dec
aam
stos
loopne
negl
sbb
negl
out
stos
into
push
scas
ret
mov
add
push
in
arpl
adc
enter
loopne
sbb
popa
or
cmp
pop
ror
mov
cmp
mov
mov
clc
aaa
push
or
jge
adc
insl
sahf
enter
push
xchg
push
pop
inc
jbe
cmpsl
ret
xchg
cwtl
lea
iret
dec
xor
jno
xor
pushf
and
decl
or
pop
xorl
jno
es
xchg
inc
faddl
or
xchg
insl
jp
xlat
mov
out
ja
lahf
into
push
sub
and
xchg
imull
lods
mov
mov
and
cmc
repz
and
pop
lds
orb
pop
lret
sbb
pushl
push
test
sub
scas
cmp
add
mov
and
push
xchg
cmp
jae
cli
adc
bound
push
iret
adc
cmp
and
insl
pushf
jbe
popf
jae
and
sbb
and
jmp
xor
mov
add
push
adc
or
ret
push
mov
xchg
lret
cmp
push
xchg
ret
adc
and
nop
outsb
stos
xor
dec
aas
jno
jne
mov
mov
mov
out
fwait
imul
out
mov
test
inc
mov
jecxz
pop
pop
push
sarb
addr16
and
mov
dec
shll
mov
int3
xlat
lods
push
sbb
out
mov
rcrl
jb
xor
mov
jno
cli
fldt
inc
iret
and
enter
fnstenv
shl
insb
push
test
call
mov
clc
lret
int
jecxz
jecxz
pop
pop
aas
inc
sahf
sub
es
adc
sub
jmp
and
dec
ret
lret
outsb
sub
arpl
daa
pop
ficoml
roll
les
sarb
scas
mov
adc
jmp
mov
rolb
add
imul
jb
decl
out
adc
push
xchg
add
addr16
jae
mov
in
adc
sub
int
xor
or
in
add
out
lret
sub
inc
loope
das
or
icebp
inc
shlb
inc
push
cmpsb
sub
bound
hlt
or
jmp
adc
clc
test
lret
xchg
mov
es
mov
pop
addr16
daa
test
sti
je
insb
or
cmp
ljmp
jle
cmp
push
lock
inc
dec
inc
cmp
adc
icebp
adc
xchg
test
daa
fs
sub
stc
rcl
mov
push
mov
inc
sub
xchg
inc
pop
aaa
xchg
test
fnstcw
test
inc
in
cmp
push
adc
add
jg
lods
push
inc
arpl
ss
ds
in
pop
je
xchg
testb
mov
repz
or
aas
mov
jns
jno
iret
pop
xor
ljmp
add
mov
movsb
cltd
sub
add
cli
xrelease
mov
mov
jl
stos
hlt
push
xor
dec
lahf
xchg
test
incb
jmp
or
iret
pop
stos
or
jge
imul
out
out
xchg
xor
ljmp
xchg
lds
dec
lea
cmc
lock
cmp
mov
loop
push
lock
sahf
jp
jecxz
xchg
loopne
test
mov
jo
stos
mov
jle
or
push
ret
ljmp
mov
leave
jb
iret
dec
in
incl
jg
pop
mov
cmpsb
lock
sahf
add
xchg
subb
xchg
jno
mov
mov
add
daa
in
scas
testl
loopne
push
pop
out
scas
or
push
cmp
mov
mov
or
out
jnp
or
pop
jle
outsl
ljmp
pinsrw
outsb
fdivrl
hlt
and
fmull
jp
rcl
or
arpl
jl
rclb
pushaw
jmp
push
and
sbb
in
jo
adc
incb
push
and
or
add
xor
mov
jmp
lock
rolb
idivl
xchg
and
shrb
insb
ja
mov
in
jge
mov
push
ret
pop
xchg
push
xchg
scas
notb
je
arpl
push
mov
push
and
fildl
inc
pop
mov
decl
arpl
test
testl
mov
adc
lret
adc
lcall
push
add
xor
lret
pop
mov
inc
loope
mov
clc
and
push
in
cmp
jmp
stos
rcrl
adc
jle
mov
cmp
inc
and
jo
jns
mov
repz
inc
jge
sbbb
nop
into
jo
mov
sub
aas
inc
repnz
mov
mov
dec
pushf
aaa
push
lret
mov
gs
bound
add
inc
fdiv
jmp
loope
cli
jl
rorb
in
and
mov
mov
and
pop
lods
in
xlat
mov
sbb
mov
aaa
mov
add
push
ret
rcll
and
xchg
movzbl
jb
imul
popa
dec
rcl
and
xlat
lret
adc
sub
scas
push
xor
mov
loope
xor
cmpb
xchg
ljmp
or
adc
inc
insb
adc
and
pop
mov
inc
mov
rcr
outsb
orl
lods
sbb
outsb
cmp
fcmovbe
pop
arpl
jge
lcall
mov
fstl
in
dec
adc
mov
aaa
in
cs
mov
fsubl
std
or
jmp
push
imul
scas
jbe
shlb
pop
rcll
aas
test
repz
jns
add
inc
out
add
stos
in
mov
dec
out
sti
enter
shlb
sbb
cltd
sbb
jb
xchg
xor
sbbb
mov
cs
mov
rol
jno
fnsave
das
or
test
imul
dec
xorb
sub
sbb
enter
add
jnp
fdivrp
leave
outsb
xorl
das
test
jecxz
cmp
rol
scas
lock
popa
or
jle
rclb
jne
in
xchg
loope
imul
jmp
popa
xchg
outsb
lret
mov
mov
push
xchg
dec
scas
loope
xor
call
push
lds
dec
pop
divl
sub
ret
pop
dec
in
call
xor
imul
nop
cmpsl
outsl
fs
popa
stos
push
rclb
mov
scas
lcall
cli
lds
xchg
in
jmp
stos
inc
or
and
cmp
mov
ljmp
leave
ret
or
mov
hlt
cwtl
lret
jg
lahf
jmp
mov
push
ss
sub
sbb
arpl
cmp
insb
notl
out
mov
lds
and
adc
sysenter
xor
popf
cs
fdivrp
pop
adc
jecxz
or
into
inc
cmp
sahf
jns
mov
lds
xor
loope
jb
lock
add
js
insl
andb
int
sbb
xor
mov
push
and
xchg
scas
stos
arpl
mov
add
mov
sahf
aam
js
pop
dec
xor
out
push
cmp
or
aas
call
out
iret
jae
loop
clc
fidivs
mov
inc
mov
popf
setno
lds
adc
adc
nop
push
stc
mov
out
and
push
push
ret
popa
inc
and
cmp
pop
pop
and
lds
sbb
push
xor
hlt
add
fimuls
mov
lods
pop
add
imul
nop
xor
ljmp
sub
or
mov
jecxz
lods
ja
xchg
div
shl
enter
inc
loopne
das
rolb
xchg
or
test
push
xchg
jne
xchg
and
jg
and
pop
outsl
mov
test
jnp
adc
mov
loopne
fimuls
jns
mov
cmp
je
hlt
fwait
arpl
xchg
mov
repnz
cmp
sar
outsl
and
push
loope
pop
in
mov
xchg
inc
cltd
jbe
xchg
jmp
dec
jno
push
jp
pop
cmpsb
sub
aad
inc
rcrb
push
xchg
jo
decb
inc
movsb
out
jl
sub
lahf
into
stos
icebp
xchg
into
shlb
iret
stc
or
bound
and
fldcw
pop
shlb
enter
insl
jo
inc
push
cmc
or
push
insl
imul
and
outsb
daa
or
aaa
add
and
cltd
adc
setle
mov
roll
dec
into
push
test
ja
pop
icebp
push
adc
sbb
push
mov
mov
aas
xchg
jnp
mov
sub
xchg
jbe
adc
add
adc
push
popf
das
dec
add
jo
jno
daa
int3
repz
mov
add
jns
add
pop
inc
xchg
mov
cwtl
jne,pt
push
loop
pop
clc
popf
push
and
ret
push
rcrl
xlat
gs
dec
iret
fsubrp
mov
dec
push
push
inc
and
mov
subb
test
mov
fucomip
fbld
hlt
and
jo
stos
mov
test
adc
cmp
fbstp
jbe
cwtl
int3
add
loopne
fimull
cmc
ret
gs
jns
ja
fadds
mov
pop
in
push
loope
jg
mov
jmp
ja
sub
jae
push
test
pop
lea
xorb
test
les
sbb
fwait
jle
in
mov
je
and
cli
psllq
stos
cmp
xchg
popf
inc
cmc
ret
xchg
mov
push
pop
push
mov
lahf
aas
add
enter
pop
xchg
jnp
stc
adc
jmp
nop
mov
popf
das
enter
fwait
movsl
cmp
iret
stos
mov
cli
pushf
in
shl
lock
rcr
jbe
xor
ljmp
scas
push
test
xor
sub
inc
inc
shlb
cmpsb
inc
and
xor
cmpsb
adc
fimull
pop
cmp
push
das
ja
les
stos
jp
roll
ja
dec
mov
or
mov
enter
adc
mov
cmp
nop
dec
call
or
push
dec
lret
sahf
cmp
into
into
movsb
mov
mov
pop
jne
inc
cltd
in
mov
fsubp
sub
sub
fcompl
cli
in
or
pop
and
ret
iret
dec
scas
pop
repnz
stos
mov
xchg
ret
mov
lea
scas
test
sub
lahf
jle
inc
aaa
jne
push
pop
mov
mov
mov
jge
out
ret
mov
enter
jno
or
sbb
mov
mov
loopne
enter
inc
jb
push
pop
mov
xlat
lods
movsl
mov
insl
popa
cmp
push
stc
cmp
pop
fmuls
jg
movsl
jb
push
gs
mov
push
cmpsb
aam
notl
fdivs
dec
movsb
mov
xchg
jb
int
out
stos
dec
imul
mov
das
cli
dec
cmpsl
adc
push
stos
into
sbb
in
adc
inc
push
fisubrl
shll
in
in
jnp
cld
outsl
cmp
addr16
call
and
sub
test
jp
shr
adc
cmc
push
xchg
hlt
push
add
lods
adc
into
mov
mov
push
sub
test
cmc
cmp
inc
dec
jmp
sti
xchg
fs
lods
or
out
into
addr16
roll
push
or
lahf
sub
fwait
popa
mov
or
fisubl
xchg
out
lcall
pop
push
in
out
adc
add
aam
loope
adc
mov
mov
and
and
sahf
jmp
insl
aaa
addr16
and
push
pusha
out
rolb
mov
jne
lret
repz
mov
adc
popa
sub
bound
cli
push
loop
fisubrs
sub
cmc
lret
fdivrs
or
icebp
adc
xchg
or
in
mov
sbb
cmp
add
cmpsl
sbb
rcrb
das
clc
les
xchg
pop
inc
popa
adc
inc
mov
or
xor
inc
or
cmp
mov
leave
sub
sbb
into
in
inc
in
stos
cmp
fsubr
mov
clc
lcall
mov
or
push
cmp
xchg
xlat
push
imul
ds
lea
mov
out
inc
pop
adc
ret
lcall
ljmp
adc
fcmovnb
xchg
int3
in
xchg
outsb
lahf
mov
scas
sbb
ljmp
mov
push
xor
jle
pop
shlb
popa
leave
aad
cmpsl
push
sub
dec
pop
in
pop
lret
not
adc
loope
mov
test
cwtl
mov
and
pop
add
mov
imul
insb
cmp
nop
movsl
inc
jmp
add
ficoml
outsl
fiadds
mov
lahf
or
xadd
addr16
icebp
mov
int3
jno
in
fldt
pop
mov
lahf
add
clc
or
mov
sub
stos
popa
push
xchg
movsl
sbb
dec
imul
cmpb
mov
and
fs
inc
sbb
test
ret
inc
loop
flds
pop
bound
push
jns
push
fisttpl
cltd
lods
sbb
mov
cmp
stos
pushf
ja
xchg
mov
mov
jp
inc
push
mov
leave
sarl
mov
fildl
push
les
xor
and
mov
push
mov
divb
clc
pop
ss
popa
aas
xchg
push
mov
inc
sub
mov
xchg
in
mov
jns
std
jmp
out
adc
mov
jne
fidivrs
sbb
mov
add
push
push
shll
xchg
mov
mov
fwait
or
test
insb
push
cmp
sahf
dec
xchg
cmp
add
cs
xchg
mov
das
inc
enter
lods
mov
js
lahf
pop
inc
bound
test
or
mov
mov
xor
repz
push
mov
out
jno
push
sub
xchg
jg
mov
daa
pusha
repnz
dec
adc
sahf
fcmovu
push
fwait
pop
xor
insl
outsl
stos
sub
xchg
ss
lods
js
notl
push
and
fsub
xor
inc
in
xlat
leave
xchg
lret
mov
mov
mov
enter
fidivrs
cmpl
dec
cmpsb
sti
incl
mov
mov
jl
movsl
ja
clc
shll
or
int3
jbe
outsb
arpl
add
repnz
inc
inc
and
mov
sbb
xor
out
and
xlat
in
or
mov
dec
sbb
mov
movl
push
stc
clc
mov
roll
dec
lock
adc
cs
inc
dec
aad
xor
and
in
fisubl
icebp
adc
test
das
push
dec
xorb
pop
test
rorl
dec
xor
xlat
cmp
push
xchg
push
nop
add
icebp
mov
inc
test
nop
add
adc
cmp
add
lods
jmp
inc
test
into
jge
push
dec
xor
loope
shll
cmp
xchg
stc
mov
pop
cmc
test
adcl
outsl
and
jb
ljmp
hlt
push
mov
dec
imul
hlt
adc
iret
pop
mov
adc
add
push
dec
repz
into
add
loopne
mov
cltd
add
rcl
popf
into
cli
cmp
push
adc
push
sbb
movsl
xchg
imul
add
mov
xlat
cmp
cmp
bound
inc
sub
jmp
loope
pusha
insb
xchg
inc
adc
mov
pushf
sbb
mov
stos
cltd
sub
and
lds
or
cld
sbb
push
rcll
ja
dec
aas
mov
xorb
inc
pop
cmp
test
mov
push
stos
push
adc
xor
push
adc
sbb
xchg
sbb
mov
ficoml
push
sub
xchg
cmc
mov
sbb
lock
stc
xchg
dec
std
push
and
mov
or
scas
or
fdiv
xchg
adc
xchg
dec
jl
js
sbb
push
pop
jns
stc
add
push
mov
jb
cmc
lret
sarb
popa
mov
lea
ja
popa
push
cmp
dec
cmp
notl
call
sbb
loope
pop
int
cmp
inc
popf
inc
fs
pop
dec
pop
xor
fmuls
or
jns
lods
aas
lahf
das
addr16
popa
cmp
imul
pop
mov
pop
test
sahf
loopne
outsb
cmp
es
xchg
mov
lea
into
jp
int
nop
push
out
pop
gs
sahf
andl
push
mov
inc
call
int
aam
out
jl
lahf
pop
mov
std
cltd
packuswb
dec
test
mov
inc
out
mov
in
pusha
dec
cmp
aas
ret
sahf
or
arpl
sub
push
add
fwait
hlt
mov
mov
adc
mov
faddl
bound
mov
cmovge
testl
mov
push
mov
iret
lret
out
cmc
gs
lds
push
xchg
movsb
hlt
pushl
pop
cltd
jle
jo
ljmp
adcl
pushf
addr16
xchg
sub
inc
mov
neg
outsl
repnz
and
or
mov
push
decb
or
push
inc
xor
inc
sbb
jb
pop
mov
scas
mov
mov
test
mov
out
out
lahf
xchg
les
test
and
pop
xchg
add
add
xchg
adc
cmp
xchg
jge
shll
mov
sarl
and
repz
mov
add
mov
jnp
test
ret
push
cmp
and
lock
out
jp
mov
in
mov
stos
int3
add
inc
sub
negb
nop
pop
loopne
jmp
aas
cmp
and
push
jp
test
js
dec
xchg
push
sbb
popa
cs
cmp
xchg
fwait
cmc
mov
cwtl
xchg
or
jae
jbe
andb
dec
mov
adc
jne
jle
xchg
subb
call
addr16
shl
sub
ficoms
aam
mov
or
leave
and
jmp
jae
cmp
js
scas
shr
mov
adc
dec
pop
or
xor
adcb
js
sahf
out
jnp
subl
xor
stos
or
inc
jp
in
scas
pop
jns
dec
push
aam
outsb
mov
jge
imul
insb
ds
shrl
call
mov
outsb
andl
loop
cmp
push
or
pop
jnp
fstp
push
shl
int
xchg
in
lret
bound
bound
mov
sub
outsl
xchg
negb
xchg
lods
lahf
mov
lock
jnp
xchg
jbe
divl
xor
jg
pop
mov
mov
jmp
and
lahf
sahf
cwtl
adc
fnstenv
icebp
or
ss
jle
push
movsl
repnz
into
inc
ret
jp
add
xchg
or
mov
lcall
ljmp
movsb
dec
cmp
fiadds
movsb
in
xchg
jo
push
int3
dec
cmp
insl
test
cmp
and
mov
cmpsb
xor
rcrl
movsl
cmp
mov
jbe
inc
loopne
add
or
int
and
les
fs
je
lahf
or
xchg
lahf
cmp
icebp
cld
mov
sahf
mov
fcos
sahf
insl
daa
mov
roll
cmp
daa
bound
inc
lret
test
push
push
or
xchg
fidivrl
cmp
repz
ret
xor
cwtl
jg
push
mov
push
sbb
and
pop
hlt
scas
cwtl
sbb
or
nop
add
or
fmul
les
push
adc
ss
sub
call
imul
test
dec
sbb
mov
or
mov
mov
cltd
lret
popa
xchg
xor
jg
pop
lods
icebp
pop
imul
jg
adc
dec
in
ljmp
and
pop
ljmp
push
lods
sub
bound
jle
inc
fiadds
push
ret
out
icebp
repz
and
fiadds
loop
fadd
in
jg
push
mov
rorb
daa
dec
xchg
call
testb
sbb
sbbl
mov
call
inc
push
fcomps
inc
pop
int
mov
jge
adc
inc
rcl
and
pop
js
or
mov
jmp
xchg
cmp
and
xchg
lcall
or
loopne
pop
or
clc
imul
cmp
or
mov
mov
add
xchg
cmc
and
push
cwtl
test
outsb
jo
enter
xchg
lcall
cmp
sbb
pop
nop
mov
aas
xor
pop
lds
xor
divb
push
jmp
sub
sub
int3
cmp
scas
pushf
add
mov
pop
nop
cmc
xchg
xchg
mov
icebp
mov
adc
or
push
mov
out
add
sar
xor
test
xchg
rcll
cwtl
xchg
sub
loope
je
mov
test
sbb
mov
sub
pop
dec
or
mov
push
sti
push
jo
shll
jbe
shll
in
fisubrs
out
jne
cli
xor
sub
and
xchg
or
les
jbe
jle
xor
mov
mov
push
push
repz
adc
mov
shlb
dec
fnsave
jnp
scas
dec
or
dec
stc
pusha
insb
lcall
and
xchg
or
daa
cmp
mov
je
mov
jmp
call
stos
test
mov
pop
cwtl
push
dec
xchg
push
shll
xorb
push
mov
daa
mov
sar
popf
fdivs
pop
sbb
addr16
fs
jne
repnz
ljmp
mov
cli
stos
lret
adc
out
inc
mov
je
ljmp
mov
xchg
scas
popl
popa
test
ds
xchg
loope
xor
imul
subb
and
push
jb
dec
xchg
sub
outsb
pop
cmpsl
xchg
fdivrl
or
test
nop
aaa
fisubrl
lea
les
cmp
jle
or
pop
add
jnp
mov
cltd
cmp
jmp
aas
add
or
pop
push
dec
sbb
mov
cli
cltd
movsb
shlb
sarl
pop
pop
jp
push
push
lahf
cmp
xchg
les
fisubs
or
data16
mov
adc
or
fnstenv
sub
pop
in
push
mov
or
bound
imul
dec
pop
or
cwtl
stos
mov
adc
adc
xor
fwait
inc
fmulp
xchg
shll
and
sbb
push
dec
push
mov
loop
mov
mov
fnstcw
push
xor
popf
fwait
mov
mov
aas
mov
jg
shll
dec
pop
xchg
pushf
rcrl
jl
sub
lods
xchg
pop
in
arpl
sti
sub
rcrb
loope
pop
add
int3
inc
xor
cltd
imul
sub
test
pushf
cli
xchg
out
inc
pop
push
mov
adc
adc
cmpsb
fidivrl
sub
xchg
int
push
outsl
add
jge
loope
cmpsl
gs
mov
stc
js
pop
pop
mov
aad
mov
sub
jo
in
rcrl
pop
and
dec
push
leave
cli
mov
xchg
jae
mov
fs
jp
xor
mov
roll
jo
dec
mov
cmpsl
xchg
int3
ficompl
popf
push
sbb
push
jno
addr16
dec
and
sbb
push
mov
xlat
and
jg
adc
test
outsb
scas
notb
aas
scas
cmpsl
cmp
cmp
js
fldcw
lret
add
mov
insb
cmp
fs
pop
pop
sub
xchg
imul
sub
imul
daa
inc
movsl
inc
add
push
dec
lret
xor
mov
add
add
icebp
mov
cmpsl
inc
out
mov
ss
jp
nop
fisubrs
ja
or
mov
cld
lahf
dec
push
es
dec
cmpsb
adc
push
push
daa
sub
pop
inc
adc
cli
adc
mov
adc
or
and
in
stc
push
out
xchg
ja
pop
xchg
test
cmp
push
push
bound
jl
sbbb
lock
jne,pn
jmp
mov
xchg
idivl
popf
arpl
das
scas
fbstp
mov
sarl
push
push
sbb
popa
or
repnz
arpl
add
outsl
scas
out
sahf
inc
movsl
mov
adc
les
sbb
loop
mov
cmp
dec
jo
lea
insb
out
sbbl
sbb
jae
push
divl
sub
lods
ss
sub
les
mov
jae
sarb
or
jno
pop
jle
xchg
mov
leave
xlat
out
outsl
imul
mov
mov
jbe
punpckldq
out
enter
repnz
lcall
add
xlat
xor
push
mov
mov
in
cmc
stc
and
mov
aam
pop
pushf
fstl
or
aaa
dec
push
jle
orb
jmp
or
sbb
mov
mov
mov
adc
mov
cmp
sbb
mov
jbe
bound
scas
call
loop
jge
outsb
mov
or
mov
scas
xor
inc
imul
cmpsb
xchg
or
xor
add
xchg
jo
out
cmp
mov
popa
sub
repnz
dec
mov
or
mov
lret
mov
mov
mov
int3
repnz
cwtl
inc
outsl
pop
bound
fcomps
frstor
xchg
enter
and
push
ficompl
and
out
mov
sbbl
mov
call
gs
push
jno
xor
jge
mov
rcrl
add
dec
cmp
push
inc
daa
mov
mov
enter
mov
dec
daa
inc
push
xchg
pop
sub
jne
jge
cmpl
inc
test
and
in
dec
push
inc
jbe
leave
sub
ret
and
fwait
cmpsl
fs
idivl
imul
out
in
aad
int
in
xchg
xchg
sbb
jle
sar
fs
imul
cmp
mov
xor
iret
mov
pushf
mov
jbe
mov
outsb
lds
mov
into
pop
inc
add
dec
lcall
sbbl
pusha
cmp
xchg
cmc
pop
xor
pop
xchg
pop
adc
push
cmp
xchg
sahf
jo
and
out
cmp
leave
mov
pop
mov
push
mov
lret
out
jae
in
pop
pop
repnz
pop
mov
mov
push
xchg
ds
adc
outsb
mov
lods
and
jmp
sub
loope
mov
lods
leave
lret
bound
pushf
aas
or
sub
cmp
add
adc
push
push
inc
fdivrl
mov
push
add
leave
push
push
iret
push
xchg
movl
sub
push
push
adc
shl
mov
mov
sarl
in
cmp
xchg
pop
or
callw
sarb
dec
dec
sub
xor
xchg
push
xor
cmp
repz
imul
dec
movl
mov
aad
push
ja
insl
mov
outsl
pop
jmp
int3
xchg
ret
cmpsb
les
push
jmp
out
lock
inc
sbb
mov
adc
push
imul
jmp
sbb
adc
push
jns
lahf
or
in
add
inc
call
and
sub
mov
insb
lods
mov
jne
scas
mov
mov
fstpl
xchg
shll
imul
sub
test
rol
mov
dec
and
mov
enter
mov
mov
cmp
mov
imul
adc
pop
aam
fwait
div
fs
pop
cld
scas
idivl
mov
inc
call
jp
or
lret
jo
in
fwait
mov
mov
nop
mov
jne
loope
out
dec
out
and
add
mov
jbe
xchg
sbb
les
cmpsb
adc
pop
movl
or
fnstcw
dec
cltd
aas
add
sub
jae
jle
push
add
loopne
dec
int3
mov
leave
xchg
mov
divl
mov
fmull
inc
xchg
out
push
into
movsb
cltd
or
fmuls
dec
mov
jae
daa
std
lods
fdivs
fld
loop
cmp
pop
loop
into
mov
dec
sahf
mov
les
sbb
sti
push
test
lods
xor
lcall
xor
js
add
jl
dec
xchg
sbb
mov
shl
pop
insl
xor
ljmp
sbb
imul
sub
sub
movsb
mov
insl
lret
cmp
mov
or
lret
cmp
or
ret
ljmp
xor
pop
dec
mov
inc
movb
test
loop
or
dec
sbb
pusha
xchg
jmp
out
gs
pop
push
out
jb
pop
iret
jne
dec
jecxz
popf
mov
jb
xchg
pusha
das
sub
lcall
sub
add
xor
imul
addr16
mov
cmp
mov
dec
into
adc
mov
icebp
mov
or
orl
cmp
jp
mov
and
lock
icebp
arpl
lock
out
inc
enter
jmp
xorb
add
mov
nop
jnp
mov
push
call
and
push
in
ljmp
push
xor
popf
lock
scas
shll
repnz
fsub
add
xchg
nop
mov
sbb
std
add
push
iret
cmpsb
sub
js
je,pn
aas
mov
jno
pop
sub
xchg
push
cmp
sahf
in
xor
das
jo
sub
lret
inc
xchg
mov
cmpsl
fbld
mov
xchg
fsubrl
inc
mov
sub
iret
popa
pop
ret
cwtl
add
lock
cmpsb
adc
addr16
lret
dec
xor
or
or
cs
nop
jp
js
out
pop
push
adc
pop
lods
adc
dec
pop
aaa
xchg
movw
jge
sub
imul
push
pop
dec
and
pop
and
std
or
hlt
imul
mov
pop
fucomp
mov
sub
repnz
lds
lock
loope
stos
dec
jno
icebp
fmuls
out
addr16
shrl
cmpsl
push
fs
mov
sbb
and
jae
neg
insb
adc
rcrb
and
jo
mov
jo
movsl
loopne
and
mov
sub
and
cmp
push
pop
es
rclb
dec
es
js
adc
add
fwait
aaa
adc
pushf
sub
js
test
fdivp
xor
inc
dec
mov
enter
pop
or
aam
push
xorl
fwait
dec
xchg
push
dec
xor
or
cli
arpl
jge
sub
sti
push
mov
xor
xor
loope
inc
mov
cmpl
rcll
mov
xchg
cmc
fcompl
and
sbb
push
stc
icebp
adc
add
pusha
push
jae
push
adc
push
lahf
imul
ret
add
fldl
in
add
mov
cmpsb
jecxz
lock
aaa
in
push
outsl
and
xor
xchg
dec
inc
insl
push
inc
outsb
popf
gs
sub
in
mov
pop
jb
inc
lods
pushf
lds
lock
mov
fildl
mov
adc
mov
test
pop
pop
xor
lcall
js
or
aaa
aas
or
pop
cmp
and
add
push
ret
jp
stos
push
outsb
sbb
mov
xchg
fisubs
arpl
mov
fmuls
pop
sub
testb
xchg
adc
mov
sti
adc
jne
add
push
jns
ror
jmp
jno
es
in
dec
aad
adc
clc
mov
insl
and
pop
pop
in
sub
adc
adc
dec
aas
outsl
jae
insl
leave
dec
cwtl
std
stos
icebp
mov
add
sahf
loop
pop
leave
daa
lock
aas
js
idivl
xchg
cmp
rol
xchg
pushf
out
repz
rorl
fistpll
loope
adc
in
outsl
rclb
ja
hlt
mov
nop
push
dec
mov
nop
pop
inc
bound
add
xor
repz
cmp
pushf
shl
or
mov
jp
fldcw
in
mov
arpl
arpl
icebp
shlb
fildl
lea
sti
ret
mov
mov
pop
or
js
inc
sbb
jge
sub
jmp
pushf
stc
mov
scas
in
aas
and
imul
test
and
dec
lcall
lcall
inc
pop
mov
pop
repnz
or
jns
pop
push
push
jae
mov
jge
ret
mov
std
pop
pop
in
pop
mov
sub
adc
dec
scas
data16
cld
popf
push
jo
jmp
xchg
lock
repz
lret
xor
movsb
adc
mov
mov
incb
mov
push
lcall
cld
jb
test
gs
je
cmpsl
lcall
aas
or
mov
and
pop
sbb
stos
scas
mov
repz
inc
xchg
test
jnp
dec
cmpsb
cli
js
cld
icebp
mov
xor
roll
movsl
cs
mov
das
pushf
fstps
int3
jno
shrl
xchg
imul
dec
popf
shrl
and
push
cmp
fsub
sub
lods
push
or
mov
mov
push
jbe
or
sub
mov
les
pop
sub
shlb
or
test
divl
inc
mov
cltd
loopne
push
mov
andb
clc
sub
cmp
data16
jecxz
dec
mov
subl
adc
enter
fiaddl
lock
xchg
xchg
insb
and
adc
in
adc
xchg
lret
or
and
sti
gs
into
jge
rcrl
jmp
test
adc
jge
arpl
jae
out
dec
sbb
push
rorl
in
leave
jb
shl
or
pop
cmc
pop
mov
xchg
fucomp
xchg
stc
dec
xchg
jnp
rorb
or
insb
imul
sarl
sub
aam
inc
ss
adc
hlt
clc
adc
inc
scas
xor
mov
popa
jb
sarb
ret
jbe
add
jnp
movsb
je
xchg
daa
test
jo
mov
pop
pop
jb
scas
cmpsb
vzeroupper
add
cli
popa
leave
xor
mov
and
push
gs
cmp
sti
leave
das
fxch
mov
lcall
sbb
cmpsb
inc
xchg
outsb
fwait
test
add
sub
pop
xor
nop
sbb
lcall
iret
popf
decb
xchg
mov
out
test
imul
and
bound
shlb
xor
sub
or
fld
js
fstps
mov
inc
jecxz
xor
or
aad
icebp
pop
fucomp
jge
adc
out
push
inc
xchg
test
add
popf
rol
dec
lods
lock
push
in
jmp
jnp
cmp
push
out
popf
fwait
push
dec
clc
gs
stc
stos
pop
popa
stos
fcomp
xor
add
jecxz
inc
sti
sbb
add
mov
mov
dec
sbb
aam
inc
lret
cmp
mov
or
pop
and
sub
sbb
test
gs
sbb
ljmp
insb
xorb
and
mov
xchg
imul
mov
cmc
xor
lds
jne
leave
js
adc
icebp
xor
pop
push
pop
jbe
mov
cmp
push
mov
and
sub
imul
cmpsb
mov
mov
cs
mov
mov
movsb
xchg
pop
push
sub
and
outsl
inc
sbb
xchg
subl
int3
mov
shll
ret
dec
mov
mov
mov
add
call
shrl
pusha
lods
shrb
push
jmp
pop
mov
xchg
in
xor
mov
fdivs
adc
mov
dec
in
push
mov
push
mov
iret
xor
std
jg
jmp
xchg
mov
subl
pushf
push
ja
xor
ret
jecxz
sub
sahf
aam
mov
or
mov
out
or
inc
popa
adc
jbe
sbb
sarb
in
sbb
into
jle
push
sub
test
lahf
adc
mov
loope
nop
sbb
popf
inc
mov
ljmp
icebp
sbb
cmpsb
pop
cmp
in
jb
mov
sbb
push
shlb
mov
mov
stos
fwait
test
jecxz
pop
in
gs
sbb
insb
mov
pop
rol
jnp
stc
les
xchg
inc
push
cmp
pop
inc
mov
scas
roll
inc
mov
outsb
push
in
adc
sub
lret
addr16
xor
jns
test
or
insl
pop
out
ds
or
js
mov
imul
lcall
arpl
pusha
dec
push
jg
out
jb
add
idiv
es
loop
ret
mov
ret
sbb
cmp
xchg
mov
out
sbb
mov
stos
push
icebp
cmpsl
dec
data16
mov
shrl
scas
lret
xchg
sbb
push
call
das
out
jl
dec
xor
cli
cli
sub
jnp
dec
dec
int3
jge
mov
add
push
lock
stc
call
xor
daa
adc
cltd
mov
xor
jae
lea
sub
fldt
dec
and
mov
sahf
in
pop
pop
dec
je
jns
cmpsb
adc
sub
or
mov
or
loope
jae
lea
xor
push
stc
adc
cs
aam
repz
mov
mov
scas
add
ljmp
cmp
mov
or
adc
testb
fistps
mov
jo
xchg
stos
push
or
add
leave
add
mov
subl
or
sbb
repz
pusha
out
push
hlt
xchg
jbe
arpl
push
sbb
or
ljmp
cmpb
lods
inc
and
sbb
icebp
or
jmp
pop
mov
cmp
mov
aam
ficompl
cmp
addb
dec
pop
mov
cmc
push
out
into
xor
clc
cltd
mov
pop
push
outsb
inc
cmp
mov
cmovs
dec
jnp
inc
fnstsw
cwtl
les
pop
xor
mov
test
sti
xor
xchg
lret
dec
cmpsb
rclb
jb
mov
push
into
mov
in
pushf
push
pop
push
jne
psraw
iret
adc
dec
adcl
mov
fistl
xchg
mul
push
or
dec
insl
out
adc
mov
mov
sahf
xchg
pusha
mov
mov
jb
pop
pushf
xor
pop
inc
cmp
mov
mov
mov
xor
and
push
push
xchg
mov
cmp
pop
jge
and
mov
mov
cs
mov
outsb
fnsave
xchg
mov
lcall
sub
mov
push
xchg
mov
rorb
mov
mov
divb
or
shlb
cmp
leave
outsl
inc
lock
dec
mov
mov
mov
popa
dec
mov
repnz
js
adc
outsl
jecxz
adc
clc
subl
pop
movsl
es
jns
jecxz
xor
fisttps
imul
mov
fldcw
mov
loope
sbb
add
in
xchg
das
add
push
cwtl
mov
orl
sbb
test
jne
mov
xchg
outsb
push
mov
movsb
pop
push
push
jo
adc
mov
mov
insl
cmp
mov
xchg
mov
iret
iret
imul
jecxz
dec
mov
or
jecxz
cli
pop
sub
jnp
push
test
cwtl
faddp
mov
scas
cmpsb
popa
cld
aad
stos
cmc
mov
or
test
or
xor
xchg
test
xor
push
test
sub
in
sub
ret
lock
mov
das
out
sahf
jns
push
add
adc
cli
les
xor
icebp
mov
and
sub
xchg
cmp
popf
or
xor
outsl
inc
outsb
jbe
ds
fistpll
mov
pop
xor
mov
mov
pop
mov
or
push
pop
add
sbb
pslld
inc
bound
cmp
mov
xor
xchg
cmp
test
ret
jmp
xchg
fiaddl
push
and
loop
add
jecxz
cwtl
cwtl
xchg
mov
jnp
aaa
fiaddl
push
bound
les
cmc
aaa
pop
dec
mov
cmp
subb
xor
scas
iret
mov
pop
add
dec
push
and
movl
repz
xchg
les
lods
ret
in
mov
stos
mov
mov
in
adc
xor
dec
jbe
loop
push
lahf
test
nop
scas
test
in
mov
rolb
loop
and
jns
jle
and
sub
jp
sbb
psllq
ret
insb
xor
mov
pop
sahf
in
mov
adc
jbe
cmp
pushf
jle
daa
sbb
repz
mov
sub
je
cmpsb
stos
mov
inc
adc
jno
jle
cmp
jle
mull
cwtl
adcb
sbb
cmc
dec
inc
ja
adc
pop
sbb
cmp
xchg
cmp
jb
leave
mov
in
mov
mov
ret
xchg
add
or
in
xchg
xchg
sub
js
dec
cmpsl
pop
sbb
mov
push
pop
je
push
push
mov
mov
scas
mov
dec
aaa
cmpsl
jb
pop
mov
xlat
cmp
xor
sbbb
mov
aam
jns
cs
out
adc
mov
jl
pop
imul
sbb
or
xor
orl
dec
mov
in
mov
push
xor
and
adc
dec
repz
nop
cmp
adc
xchg
cs
hlt
enter
into
ret
mov
std
ljmp
xor
fisttpll
into
dec
cmp
stos
and
lcall
mov
ret
inc
adc
scas
push
scas
test
test
mov
adc
fs
mov
xor
ret
dec
push
pop
les
int
ds
loope
pop
lods
pop
mov
pop
cmp
xchg
test
rolb
movsb
fmul
pop
jbe
arpl
pop
cmp
mov
mov
xchg
cmp
jb
rclb
xorb
or
rorl
add
or
imul
imull
ja,pn
inc
mov
aaa
pop
sbb
xchg
fdivrs
add
mov
popf
insl
mov
pushf
cmp
adc
lock
mov
mov
xchg
cmc
clc
xchg
dec
pop
sub
cmp
inc
icebp
ret
mov
mov
add
nop
addr16
loopne,pn
bound
mov
mov
or
and
dec
movsb
test
data16
int
mov
push
repnz
aaa
jae
add
and
iret
mov
dec
mov
xchg
fidivs
lret
mov
fsts
cmpsl
cltd
mov
push
push
xor
inc
sbb
ss
sub
fisubs
pop
cwtl
clc
jecxz
push
sub
cmp
lea
in
mov
dec
xchg
call
lcall
dec
fcomi
sub
push
mov
cs
jmp
and
mov
jle
popa
loop
cmpsl
mov
ljmp
pop
mov
or
lods
adc
pop
popf
push
int3
cs
fisubrs
loope
xchg
cwtl
pop
test
jecxz
subl
mov
imul
add
sub
and
mov
bound
jg
out
sbb
movsb
cmc
mov
inc
jg
cmp
fstl
pop
add
dec
xor
xor
jl
insl
loope
mov
add
cld
jae
movsl
push
rorl
movsb
adc
imul
xor
xchg
push
push
repnz
stos
sahf
dec
lods
pop
xor
icebp
cld
cwtl
inc
stc
ljmp
ss
sub
push
jle
sbb
push
xchg
aam
and
iret
out
push
js
pusha
aaa
das
fldl
inc
lret
pop
xor
mov
movsl
insb
lcall
mov
xorl
cmp
cmpsb
add
shll
std
sbb
jns
shr
and
mov
and
inc
cmp
lock
mov
in
dec
sbb
mov
push
stc
ret
insb
push
cmp
es
mov
popf
or
fistpll
jg
cmp
fbld
movsb
test
xor
ret
and
rorb
rcll
adc
dec
add
addb
lcall
int
xor
xchg
jne
rcrl
dec
jl
jo
xchg
test
int
mov
add
aas
push
dec
jo
iret
mov
aaa
imul
bound
popa
xor
sbb
jl
inc
jl
rcrl
or
jbe
rorl
jne
and
add
test
and
lock
mull
sbb
adcl
mov
inc
stc
out
lret
bound
pop
cmp
clc
cmp
test
mov
scas
inc
das
loope
sub
out
jl
popf
pop
daa
les
cs
stc
cli
pop
aas
xlat
push
pop
lahf
push
enter
push
icebp
dec
dec
cmc
or
pop
ja
ja
sub
cld
pop
push
xchg
jnp
int
enter
dec
fs
lock
or
mov
pop
jbe
fsubrl
int3
mov
arpl
int3
inc
ret
xor
sub
inc
sub
jge
add
faddl
xchg
test
popa
xchg
aas
mov
adc
mov
jmp
fcmovnu
andb
cmp
inc
add
ja
addb
xor
mov
rcr
sub
leave
sbb
xor
inc
xchg
clc
leave
sbb
lret
add
jp
das
xlat
mov
or
ret
lods
dec
push
or
cmp
jne
sub
fildll
pop
sub
loopne
xchg
test
ja
lret
cwtl
adc
mov
out
mov
lods
sbb
dec
cmp
fcomi
and
push
mov
mov
dec
sbb
cmp
negl
addr16
insl
adc
sahf
movsl
loope
pop
xor
adcb
int3
aaa
stos
roll
jle
ds
cwtl
inc
push
and
in
and
sti
dec
dec
mov
fstl
sarl
stos
cwtl
sbb
add
mov
mov
repnz
cmp
dec
fdivrl
sbb
xchg
dec
je
inc
enter
test
cwtl
rcrb
jbe
sub
add
jns
mov
and
nop
add
jg
mov
cmc
sbb
cmc
inc
out
mov
xlat
sbb
in
cli
int3
pop
mov
cmpsl
fists
jl
dec
js
movsb
sub
mov
das
bound
js
add
jg
jg
dec
cld
cli
subb
push
popa
inc
sti
stos
pop
ljmp
jg
push
push
push
xchg
sub
dec
jae
addb
pop
dec
scas
repz
push
out
lcall
mov
sub
xchg
subps
fldl
mov
js
or
jg
mov
inc
sbb
rol
fsubrs
shl
cmp
fs
int3
mov
or
lahf
mov
or
outsl
jnp
fildl
not
sahf
mov
std
in
add
xor
pop
hlt
dec
add
xor
das
mov
xchg
jnp
xchg
scas
repz
mov
fidivrs
jp
dec
fisubrl
scas
mov
mov
push
dec
dec
insl
shlb
mov
dec
and
mov
or
mov
ja
popa
xor
int
jae
pop
jge
cmp
mov
das
adcl
sub
mov
subb
mov
rcrb
xor
ss
pop
jge
sbb
mov
lea
push
jo
into
xchg
outsb
jbe
clc
ret
loop
jne
inc
mov
push
jecxz
add
cmp
or
nop
jne
dec
lret
out
je
mov
sub
lret
ja
andl
jl
mov
sub
inc
cmp
mov
addb
adc
addl
adc
fs
jge
jle
push
xor
les
push
jnp
aad
ja
add
sub
add
outsb
out
test
cli
push
xor
enter
dec
mov
fdivl
sub
mov
mov
sbb
div
inc
jg
jae
popa
push
inc
insb
out
daa
mov
jb
hlt
lds
fucom
mov
add
lea
test
xor
loopne
loope
mov
adc
inc
sub
add
push
orl
das
fs
jmp
jmp
cs
jo
push
jno
push
xlat
out
jge
push
sbb
fucom
add
lret
sub
adc
mov
fsts
jl
ss
insb
adc
stos
aaa
aad
dec
aas
jle
dec
stos
arpl
jo
dec
pop
lds
insb
inc
int3
into
jmp
mov
xorb
add
fiadds
adc
nop
mov
sub
stos
or
sbb
or
outsb
enter
leave
xchg
or
xchg
add
mov
pop
dec
jne
jo
pop
dec
mov
jg
push
sbb
rcrl
filds
ja
or
push
jne
cmp
mov
xchg
fisttpl
arpl
pushaw
test
fwait
add
inc
not
add
mov
repz
fidivl
jnp
adc
je
pop
aas
xchg
adc
inc
push
lds
or
jae
xor
cwtl
cltd
sbb
rolb
or
pop
dec
cmpsl
rol
pusha
sbb
insb
cmp
push
dec
jl
jecxz
ret
inc
sbb
lods
or
jg
ja
mov
jmp
jbe
inc
ja,pn
in
mov
loope
loopne
dec
pop
mov
or
push
testl
idivb
loope
pop
xor
outsl
push
mov
std
dec
insb
xor
stc
xlat
jbe
pop
push
aad
and
andb
cwtl
shlb
pop
mov
cwtl
mov
les
imul
fcmovbe
mov
pop
daa
sub
inc
scas
es
xor
sbb
and
daa
das
push
pop
rorl
dec
shrl
or
pop
fsubl
xchg
sbb
out
cmp
mov
test
fucom
xor
mov
push
cs
jmp
sar
rorl
rorl
icebp
cli
out
stos
in
int3
arpl
jp
ds
and
add
cmp
lock
neg
push
pusha
jno
xor
push
cli
mov
adc
sub
popa
stos
outsb
cmpsl
out
inc
pop
fwait
xor
and
mov
shrl
cltd
fnstsw
mov
nop
arpl
sbb
push
sub
inc
inc
pop
and
mov
fadd
ficoml
adc
imul
xor
jmp
sbb
sbb
je
xlat
shl
setge
or
daa
or
loopne
dec
jle
mov
out
fldl
mov
push
push
mov
lahf
mov
adc
dec
push
push
out
sub
test
pushf
dec
popf
xchg
aad
jecxz
mov
and
insl
sub
add
xchg
call
or
lcall
test
sub
es
adcl
pop
bound
jns
inc
mov
mov
aam
out
or
lds
scas
stc
dec
mov
ja
sub
mov
pop
cmpl
repz
adc
movsb
inc
push
scas
movsl
aas
push
dec
daa
push
xchg
or
dec
call
or
push
lret
mov
jno
sarl
out
andb
xor
rclb
xchg
xor
mov
adc
rclb
sahf
popf
jl
iret
andb
inc
cs
lcall
cs
or
xchg
cmc
test
jns
lods
daa
orl
dec
scas
hlt
pop
pop
xor
mov
jmp
xor
dec
jae
xchg
dec
and
sti
testb
xor
ss
imul
jns
xor
pop
xchg
aam
sub
pop
sub
enter
pop
into
loope
push
and
ss
arpl
push
pushf
mov
out
mov
fsubr
push
fsubrl
fildl
adc
jns
rorb
test
out
xor
negb
and
iret
push
xchg
es
xchg
shll
je
outsb
adc
push
orl
sahf
pop
push
stos
dec
inc
dec
stc
das
pop
repnz
mov
push
nop
imul
push
dec
dec
outsl
mov
orl
in
cmp
fwait
imul
jbe
jecxz
in
fcoms
push
mov
pop
push
pop
sub
push
mov
push
adc
pushf
test
cld
fisubl
mov
imul
js
aam
call
mov
and
pop
fs
leave
rcrb
nop
fistpll
pop
loopne
icebp
sbb
push
popf
mov
mov
jnp
and
in
jmp
push
lcall
lahf
push
dec
inc
subl
nop
push
out
repz
pop
jmp
jecxz
stc
cmp
jne
dec
jb
and
mov
outsb
jle
orb
sbb
outsb
hlt
insl
pushl
xor
ffree
and
mov
sbb
inc
pop
clc
dec
hlt
rolb
xchg
lahf
ret
and
or
jb
mov
stos
inc
or
mov
lds
cmp
sub
shr
aam
mov
jmp
sbb
or
stos
das
fwait
jmp
push
pop
cmc
popf
ret
lahf
mov
mov
push
arpl
mov
fmuls
and
xchg
cld
inc
xor
lds
push
in
into
sbb
outsb
xchg
xor
pop
data16
ret
pop
adc
fcmovnb
inc
jp
push
push
in
push
adc
lods
mov
jbe
jno
mov
xchg
imul
arpl
mov
mov
or
xorl
int3
lea
leave
sahf
dec
jg
xchg
scas
mov
fsubs
mov
mul
aam
mov
testl
xchg
ljmp
imul
mov
rcrb
out
bound
sbb
xor
jle
cwtl
mov
inc
push
outsl
push
or
lds
sbb
lret
mov
sahf
push
sub
jecxz
adc
clc
or
pop
sahf
rcrl
cmp
mov
test
lods
xor
outsb
test
ret
mov
jae
mov
lods
in
sbb
shld
cmpsl
cmpsb
cmp
dec
xchg
das
int
pop
adc
in
bound
stc
daa
add
popa
ret
jae
adc
fnstenv
sbb
sahf
cld
lret
adc
mov
js
cmpsb
and
leave
xor
imulb
xlat
out
aas
and
je
divl
adc
in
cmp
outsb
push
clc
sbb
pop
sub
mov
dec
es
or
mov
adc
mov
sub
rcpps
add
add
ror
popa
lods
mov
xor
fldt
xor
xor
ret
or
sbb
and
sbb
xchg
mov
js
pop
push
xchg
addl
cmc
inc
push
mov
or
jnp
xor
mov
xchg
clc
lcall
and
test
fisubrs
inc
negb
inc
cmp
outsb
rcr
lret
cmp
cmc
lret
adc
push
xchg
mov
cs
ret
and
mov
push
cmp
mov
gs
xchg
cmp
cmc
hlt
lret
xlat
fnstenv
add
cmp
fisubrs
cmpb
cmp
adc
cmp
inc
xchg
int3
les
sub
ds
pop
int
insl
stos
int3
mov
fidivl
mov
cmp
sub
dec
imul
arpl
dec
or
pop
lock
pop
xchg
lds
mul
es
sub
mov
lcall
jl
cli
out
aad
inc
mov
clc
add
inc
arpl
sbbl
scas
js
cltd
shlb
adc
jmp
insl
mov
fs
fistpl
mov
out
data16
or
call
push
jb
push
or
clc
jae
test
mov
jno
mov
push
push
popa
inc
mov
xchg
mov
dec
xor
add
adc
inc
sbb
add
push
mov
mov
pusha
sub
jp
pusha
adc
adc
xchg
mov
xchg
data16
pop
dec
jne
outsl
icebp
xlat
ret
xchg
mov
mov
pop
xor
call
dec
push
xchg
dec
sub
and
inc
scas
cmp
xchg
and
out
je
sbb
pop
cmc
mov
loope
or
inc
int
cltd
fiaddl
inc
add
out
movsl
cli
sub
fdiv
loope
pop
sbb
sub
lcall
rclb
cmp
fdivrl
sub
jns
mov
sub
pop
push
pop
stos
insb
push
bndldx
insb
mov
inc
nop
sub
add
adc
es
cli
xorb
cmp
or
dec
cmp
xchg
jns
lds
cld
call
mov
and
sarl
lret
je
mov
sbb
pop
xlat
dec
out
mov
shll
insb
push
adc
or
cmp
mov
jno
sbb
and
xchg
cmp
jge
mov
call
enter
xorl
xchg
cmpsl
push
dec
xchg
cwtl
push
jl
jg
lea
sarl
cmp
ficomps
or
pop
sbb
dec
addr16
pop
cmc
insb
or
bound
add
dec
lods
sbb
jo
gs
xlat
push
enter
test
sub
pop
add
inc
mov
dec
push
push
loope
inc
jp
sbb
out
stos
sbb
mov
or
push
call
sub
push
sub
pusha
in
ss
repz
mov
add
into
sub
xchg
test
orl
xor
mov
or
cs
mov
adc
pop
cmpl
jbe
cmpsb
adc
and
mov
jno
imul
mov
or
pop
aaa
dec
adc
test
push
lret
dec
es
mov
test
bound
sahf
into
sub
add
add
xor
cmp
imul
inc
incb
lcall
jne,pn
fdivr
inc
cmp
push
int3
outsb
pop
lods
fisubl
mov
aam
jl
decb
mov
jns
stos
jmp
pusha
inc
sub
inc
jns
or
ds
add
pop
pop
loopne
jae
mov
sarb
push
push
xchg
mov
or
pop
xor
sarl
adc
or
out
mov
rcr
fidivrl
jno
cld
fmull
in
push
push
aam
jb
push
enter
and
xchg
jmp
outsl
xchg
inc
fidivrl
dec
add
inc
dec
mov
push
fmull
xor
cs
jae
lods
sub
std
outsb
pop
rcrb
into
bound
ljmp
inc
sahf
xor
sub
pop
adc
push
or
jb
pop
mov
rorl
stos
es
dec
and
fstl
sub
jnp
into
mov
jle
xchg
pop
call
mov
js
dec
dec
in
inc
pop
mov
aas
jmp
add
add
cmp
add
aaa
stc
scas
push
repz
icebp
xchg
dec
add
jbe
das
jns
roll
sub
sbb
inc
or
xor
fisubl
or
repnz
sbb
push
jae
mov
shlb
xor
mov
fucom
jbe
test
add
mov
pop
lret
out
cld
rcrl
lock
inc
lock
addb
inc
cmc
dec
xlat
subl
add
adc
and
cs
shlb
pushf
test
mov
push
mov
and
push
mov
aaa
stos
xor
inc
in
inc
cbtw
stos
sbb
shlb
es
aaa
es
imul
adc
es
adc
add
ljmp
push
push
mov
arpl
xchg
sbb
mov
sub
outsl
fisttps
shlb
cld
in
rcrb
push
data16
cs
addl
lock
cmp
les
add
xchg
add
mov
xor
fmull
xor
aaa
mov
jae
mov
fstp
mov
ljmp
scas
pop
mov
aad
cmp
in
mov
inc
xor
adc
pop
pop
int3
ret
or
xchg
cli
cmc
inc
jnp
out
cmp
sub
mov
add
push
sub
cmp
ret
and
in
push
or
add
dec
stos
pop
xchg
rcrl
popa
hlt
jns
aas
inc
mov
nop
mov
cltd
lock
fstl
cltd
xlat
insl
jb
jb
or
test
pushf
cmp
mov
mov
mov
xchg
xlat
out
sub
sbb
jge
xchg
popf
dec
mov
shlb
je
fs
mov
mov
mov
out
cmp
xor
test
or
inc
test
lret
int3
ja
mov
daa
xor
cmp
hlt
mov
pop
pop
outsb
pop
sahf
psubd
jl
xchg
dec
mov
sbb
ds
inc
scas
fidivrl
mov
xchg
lds
leave
clc
js
jne
out
fnstsw
lods
ret
loope
push
out
arpl
add
scas
jbe
mov
das
sbb
test
loopne
jecxz
pop
xchg
lahf
es
repz
xlat
int
in
nop
fwait
mov
adcb
mov
pop
mov
js
lds
es
pushf
test
inc
scas
ja
jg
dec
push
xor
mov
setns
dec
cmc
inc
mov
jo
dec
sub
mov
popf
repnz
cmpsb
hlt
movsb
aaa
stos
dec
inc
xchg
mov
mov
or
pop
push
les
iret
xchg
cmp
js
xlat
pop
scas
jg
loop
add
adc
jmp
aaa
jne
push
ljmp
aas
cmp
mov
imul
aaa
aam
xchg
mov
jmp
push
and
insl
clc
sbb
shll
push
lds
in
sbb
pop
xor
sub
nop
std
leave
push
mov
jbe
mov
sbb
mov
push
add
and
inc
iret
mov
hlt
sub
adc
sbb
add
pop
cmpsb
mov
sbb
icebp
jmp
add
ja
push
adc
insb
mov
or
sub
jle
mov
inc
pop
mov
ss
xchg
jnp
push
mov
push
ljmp
add
aaa
cmp
push
stos
add
fwait
sbb
mov
push
arpl
cmp
mov
imul
jae
stos
lods
xor
fcoml
push
xor
jg
rcrb
adc
rorb
out
pop
sub
bsr
push
ret
into
pop
sub
lahf
incb
gs
xchg
pop
or
stos
pop
pop
ljmp
and
shr
loopne
shlb
cmp
divb
js
lods
pop
out
aaa
fldl
and
sahf
outsb
jl
cld
sbb
sti
cs
cmp
xchg
xchg
xor
and
iret
jecxz
jb
mov
adc
into
mov
mov
jecxz
fwait
stos
loop
js
out
scas
push
fcompl
or
jbe
push
cmc
orl
fnsave
xchg
addl
xlat
test
pop
rcrb
enter
or
fwait
or
mul
sub
dec
mov
imul
sub
sbb
jne
mov
sbb
and
pop
pop
xlat
enter
and
adc
inc
push
aas
iret
jae
adc
add
enter
xchg
jge
push
mov
cmc
out
nop
sub
dec
cmp
ss
imul
les
jmp
shlb
sahf
data16
mov
push
sahf
cmp
mov
enterw
out
mov
add
sbb
hlt
pop
rcrl
adc
xchg
inc
xor
adc
xorl
out
mov
sub
mov
nop
add
mov
in
test
jmp
stos
ret
jb
xor
lods
xchg
lahf
mov
xchg
sub
into
mov
push
jns
sarl
int
push
dec
or
out
adc
iret
ret
fdivrl
imul
xchg
push
cwtd
aaa
std
imul
xor
mov
movsb
cmp
pop
repz
xchg
cmovae
rorb
xchg
and
dec
add
aad
pop
dec
pop
pop
pushf
push
in
cld
call
mov
sub
dec
push
lahf
dec
loopne
mov
jne
pop
cmpsl
dec
push
xchg
sub
xchg
pop
xchg
arpl
int3
xor
out
mov
add
cmp
das
fildll
out
sar
daa
or
and
in
loopne
fwait
neg
loopne
lcall
inc
outsl
inc
mov
fildl
mov
push
jl
mov
testl
mov
sub
mov
fimull
daa
ss
pushf
loop
cmp
add
cmc
nop
inc
or
jecxz
cwtl
mov
and
dec
mov
cmpb
filds
lds
sub
imull
popa
xchg
loopne
stc
daa
mov
std
imul
mov
inc
add
roll
arpl
aam
rcrb
inc
imul
mull
and
repnz
mov
pop
data16
pop
mov
lahf
stos
in
xor
call
xchg
adc
push
sbb
adc
jae
push
xchg
lods
sub
sub
ja
imul
inc
mov
pop
inc
bound
jo
repz
sub
test
out
mulb
push
inc
fdivrs
outsb
shll
popa
pop
dec
popa
dec
jecxz
dec
mov
jmpw
lret
std
sbb
andb
jne
lea
out
rol
lret
arpl
repnz
addr16
mov
add
repnz
popl
ds
dec
adc
add
es
push
inc
mov
insl
adc
mov
push
cmp
mov
xchg
lock
loop
sub
mov
cmp
inc
mov
jp
cmovb
sbb
xor
xor
cltd
popf
aad
xor
incl
mov
xor
fmull
mov
insb
insl
inc
xor
call
insl
and
mov
stos
cmp
mov
subl
pop
pop
jmp
cmp
dec
pop
test
das
pop
loop
dec
je
out
push
inc
fucomi
cmp
loope
add
xchg
xchg
jnp
inc
in
popa
ret
cmp
lods
imul
inc
mov
dec
repnz
jg
popa
add
xor
jp
pop
lret
pop
test
dec
cmp
out
adc
aam
roll
fimuls
xor
xor
inc
xlat
add
insl
mov
cmp
xor
stos
cwtl
lret
aaa
clc
or
dec
xchg
nop
cmp
cmp
mov
les
or
in
sub
or
ljmp
mov
fisubs
jp
fmull
cs
sub
pop
adc
fldl
mov
dec
stos
popf
outsb
movsb
jmp
mov
push
jmp
adc
adc
xchg
scas
subb
mov
enter
test
iret
rcl
dec
push
sarb
in
sar
cwtl
repnz
test
test
popa
lcall
mov
add
push
push
ss
scas
xchg
mov
and
mov
mov
cmp
dec
lea
scas
xchg
fs
stos
movsl
nop
or
sbb
cmp
test
rcr
out
dec
in
pop
dec
insb
jg
popl
sti
jnp
sub
imul
mov
mov
sub
mov
mov
scas
mov
inc
mov
addr16
clc
adc
ficompl
leave
rorl
push
ret
adc
mov
mov
push
roll
out
jl
push
pop
lcall
and
inc
and
adc
xor
movsb
lock
and
xchg
sar
mov
test
lods
test
adc
lds
mov
icebp
ja
mov
fnsave
aaa
cwtl
js
lods
sbb
push
inc
adc
or
pop
scas
pop
adc
inc
clc
dec
xor
add
pop
dec
xchg
les
xor
pop
xchg
cltd
pop
loope
cmpsl
outsl
fdivrs
cmp
dec
mov
lock
push
and
repnz
ror
xchg
xor
inc
sahf
jmp
cwtl
add
inc
enter
mov
mov
cli
pop
jno,pt
clc
lret
jmp
sbb
pop
test
jo
test
adc
test
or
mov
sub
or
mov
gs
test
jecxz
cmc
pop
cld
mov
or
call
push
jne
adc
mov
mov
or
mov
lret
jmp
cmpsb
pusha
hlt
mov
jecxz
test
sbb
int
adc
sub
push
stos
mov
pop
popf
popa
add
roll
cmp
mov
adc
sarl
pop
je
cmp
xchg
push
inc
rclb
mov
dec
not
push
aam
fcomps
mov
inc
and
pop
xlat
mov
mov
push
test
xchg
pop
jmp
mov
imul
xchg
jns
dec
in
ljmp
xor
outsl
shl
inc
fdivrs
add
adc
push
mov
out
negb
add
test
add
or
je
and
sbb
inc
jnp
jle
mov
addr16
imul
push
mov
cld
xor
cld
rol
cld
push
mov
push
xor
xchg
stc
ret
fcmovbe
cmp
and
mov
fadds
in
adc
dec
pop
or
adc
inc
mov
adcb
push
sub
lcall
mov
cli
lret
jmp
inc
dec
and
jo
aas
mov
and
mov
test
sti
mov
js
fisttpl
sub
xchg
cmp
and
mov
pop
in
out
cmp
pop
bound
int
push
ds
movsl
push
sti
jnp
pop
adc
imul
pusha
pop
inc
int
sahf
or
out
adc
jnp
jecxz
ljmp
das
icebp
sbb
arpl
jmp
les
cs
cmp
addl
adc
movsb
mov
xor
sub
jg
jae
mov
xchg
outsb
enter
sbb
ret
arpl
es
clc
pop
and
hlt
inc
test
and
movsb
fnstenv
sub
notl
xor
inc
dec
pop
xor
inc
xlat
fisubrl
push
outsl
xor
mov
mov
push
inc
data16
les
xchg
adc
pop
stos
jge
lahf
push
and
jae
inc
mov
mov
sub
pop
adc
xor
cmp
push
sub
leave
pop
enter
aaa
pop
and
or
je
cli
jecxz
cld
and
xchg
jmp
xor
sarl
lret
push
cmpsb
std
or
pop
lods
out
xor
mov
dec
lds
mov
xchg
mov
dec
fs
daa
je
scas
adc
adc
sbb
ja
stos
mov
pop
push
sub
jl
in
inc
push
pop
lods
adc
pop
add
mov
jae
push
mov
popl
mov
sahf
or
js
or
mov
dec
push
mov
fldenv
std
and
sub
mov
fnsave
add
data16
sbb
imul
mov
cmp
pop
pushw
jg
outsl
jo
repnz
add
loopne
inc
mov
rcr
ud1
push
sbb
push
push
push
les
mov
inc
or
inc
mov
xchg
sbb
dec
icebp
sbb
push
loope
xchg
sub
mov
jae
xchg
jmp
into
jge
mov
jbe
enter
or
cltd
mov
test
dec
scas
mov
into
orb
aaa
out
lds
rclb
pop
mov
aad
jnp
pop
adc
iret
sub
xor
out
adc
adc
jo
mov
xlat
in
into
cwtl
mov
pop
mov
sbb
cmp
insb
mov
ficoml
pop
daa
cltd
test
cmp
xchg
fadds
addb
inc
ja
add
jae
aad
cltd
pop
cmp
and
sub
sub
outsb
sbb
jns
mov
andl
incl
mov
testl
xchg
jle
mov
testb
push
movsl
pushw
mov
les
xchg
in
cmpsb
inc
cmp
cmp
lods
lds
cli
test
leave
sub
std
inc
and
pop
push
or
add
into
xor
cld
jp
add
nop
aaa
aas
sbb
mov
mov
repnz
jns
mov
adc
push
pop
stos
js
adc
test
sbb
and
shl
and
push
das
push
iret
movaps
push
mov
or
lea
mov
pop
push
shl
dec
mov
int
int3
std
pop
xchg
test
sub
das
push
mov
lods
dec
movsb
inc
movb
mov
jno
lods
scas
adcl
xlat
das
call
or
push
sbb
push
das
outsb
mov
pop
daa
stos
mov
push
push
sbb
pusha
mov
mov
jo
scas
xor
gs
ljmp
mov
xor
cltd
test
sbb
push
sub
xchg
mov
sub
dec
jge
xorl
incl
add
test
cld
sbb
repnz
sbb
lods
fsub
in
mov
movsl
pop
aaa
add
inc
mov
jmp
sub
add
scas
sti
pop
sub
mov
lds
mov
imul
push
movsb
sarb
fldl
push
xor
mov
inc
jg
lds
fidivl
movb
or
and
scas
mov
stos
mov
xchg
xchg
loope
sbb
push
sar
jae
jge
stos
lods
sub
mov
adc
in
or
pusha
mov
xchg
scas
xchg
push
mov
dec
shrl
sahf
or
cltd
cmpsb
mov
add
daa
subps
dec
jno
test
or
push
cmp
push
inc
fwait
jnp
xor
cwtl
pop
out
or
xchg
xchg
inc
xor
cld
mov
push
lods
imul
push
and
push
pop
aad
lods
adc
ror
push
icebp
ja
stc
jg
mov
lret
sub
inc
adc
loopne
rcrl
sub
sbb
add
cmp
outsl
hlt
hlt
and
das
idivl
cmp
adc
adc
fmull
xchg
ja
stos
xchg
xor
sarb
cs
cmp
out
adc
hlt
pop
cwtl
incb
fistps
push
xchg
and
xchg
mov
idiv
arpl
cld
mov
test
inc
nop
mov
fdivrp
ror
dec
mov
lahf
mov
sahf
ret
jne
pushf
test
sbb
fpatan
jae
lods
sbb
rclb
push
cli
into
dec
pop
imul
mov
ljmp
frstor
lods
push
mov
adc
in
adc
mov
mov
lods
mov
adc
mov
pusha
xor
mov
call
aam
mov
cmp
aad
mov
jg
out
lahf
bound
inc
sti
mov
outsb
jnp
adc
movsl
cmp
xchg
sbb
xchg
and
and
jbe
or
inc
pop
lahf
ret
jno
pop
cmp
ret
cmp
add
mov
cmp
orl
mov
or
fisttpll
push
add
add
cmp
insb
int
and
jno
push
adc
sahf
dec
mov
aam
aad
push
mov
dec
inc
repz
xchg
mov
int3
push
push
sub
in
dec
xor
dec
sub
cmp
and
popf
test
xor
cmp
idivl
ds
dec
push
movsb
or
sbb
add
mov
add
aad
dec
sub
outsl
int
fistpl
jno
aaa
jbe
dec
mov
dec
xchg
push
lods
xor
lods
arpl
mov
fstl
pushf
scas
insb
fsubr
pop
test
shrb
cmp
bnd
leave
nopl
pop
sub
cmp
jbe
jge
icebp
xchg
inc
dec
sarb
lods
add
mov
add
jmp
stc
xor
iret
ss
aad
fadds
fmulp
inc
aas
repnz
icebp
adc
mov
jge
mov
sub
lea
mov
jbe
or
xchg
inc
decl
add
push
sar
in
int
jb
cmpsl
pop
or
loop
pushf
cmpps
jp
push
lods
jns
lar
push
jae
ljmp
push
out
and
jle
xorb
ret
ja
hlt
ds
mov
call
xchg
dec
loopne
sub
ret
sub
cmp
push
inc
cltd
or
pop
out
test
movsb
fisttpll
sbb
inc
dec
lods
jns
add
adc
imul
loopne
mov
and
inc
mov
loop
mov
fmull
push
mov
mov
pop
mov
ret
inc
pop
add
push
sub
testb
cmc
adc
mov
movsb
sbb
ret
push
in
insl
mov
xor
fmuls
fwait
push
add
mov
imul
mov
or
fucomip
pushf
and
xor
loop
js
push
js
adc
fsubr
or
adc
sbb
xchg
mov
cli
pop
mov
or
add
pop
inc
mov
cmpsb
pop
pop
add
insb
jp
mov
into
dec
pop
jle
push
jne
sub
mov
jge
ja
lret
add
lods
xor
adc
aas
aaa
dec
pop
mov
jne
mov
xchg
cmp
mov
mov
insb
push
inc
mov
aas
mov
mov
sbb
pop
mov
bound
test
out
mov
clc
rcr
leave
push
fcmovnbe
push
pop
rol
jmp
cli
dec
stc
jp,pt
loop
jecxz
nop
in
mov
inc
shll
adc
xor
inc
sahf
leave
inc
mov
pop
imul
mov
lret
in
push
psraw
rorl
mov
pop
clc
rcrl
in
jne
aaa
push
and
ds
jo
pop
cmp
mov
xor
push
imul
js
jae
aaa
jge
scas
inc
push
adc
mov
das
imul
test
insl
stos
mov
clc
pop
pop
test
sub
mov
cmp
cld
jecxz
cmp
ffreep
push
mov
jle
fdivrl
mov
cmpb
jecxz
dec
faddp
insb
std
mov
inc
pop
mov
mov
les
sti
jo
lock
lock
pop
inc
xor
jb
addr16
and
nop
stc
cli
popf
jae
cmp
sbb
jge
push
sub
in
mov
add
fwait
pop
push
mov
add
adc
push
xchg
stos
jo
cs
xor
int
xchg
pop
sub
pop
rcl
cmp
aaa
xchg
movsb
push
adc
loop
scas
cmp
ret
add
test
jo
sub
adc
sub
arpl
push
xlat
cmpsb
std
push
in
push
dec
mov
push
outsl
fbstp
addr16
mov
mov
sub
test
test
lahf
mov
dec
push
fisttpl
leave
repz
pushf
pushf
or
rcrb
dec
sbb
jnp
mov
sbb
sub
cltd
mov
pop
fwait
rclb
mov
mov
fisttps
cmpsl
or
insb
inc
adc
sub
enter
adc
dec
fwait
pop
xor
xchg
sarl
cmp
xchg
cltd
cli
imul
or
fsubrl
mov
jnp
adc
push
addr16
nop
push
test
testl
in
scas
or
dec
push
push
push
xchg
cmpsb
arpl
les
in
enter
jge
stos
add
mov
jno
repz
inc
imul
xchg
shr
stos
sbb
sbb
sahf
and
icebp
xor
leave
jns
inc
out
mov
aam
xchg
mov
lea
mov
fisttps
andb
out
mov
jp
push
mov
insb
ds
and
ljmp
xor
jae
cmp
mov
xchg
add
lahf
ror
jns
lcall
psllq
cmp
jg
mov
fwait
add
adc
jge
sbb
add
lret
push
cmp
in
cwtl
pop
sbb
mov
or
pop
cmp
sbb
jecxz
fstps
mov
fcoms
fnstcw
and
inc
mov
dec
mov
aad
movsb
cltd
jns
jno
xor
aaa
add
or
out
or
xchg
mov
cld
add
inc
pusha
pushf
movsb
fs
xchg
into
adc
and
xor
inc
fildll
cmp
pop
pushf
adc
inc
dec
cmp
inc
sub
movsl
sahf
cli
add
mov
loop
jle
mov
xorb
xchg
mov
dec
mov
push
rep
sub
pop
cmpsb
loopne
es
xchg
dec
nop
jb
sub
test
dec
sbb
es
iret
add
xchg
int3
sahf
add
pop
fwait
test
or
lods
mov
test
sbb
loopne
mov
mov
jle
jns
inc
mov
lea
int
sbb
sub
fldt
lods
push
shl
stos
or
and
addr16
mov
xchg
mov
mov
dec
inc
inc
push
dec
inc
lock
add
scas
sahf
icebp
pop
inc
pop
xchg
xor
pop
sbb
sub
in
sbb
pop
add
shrl
sub
dec
xlat
adc
mov
sbb
xor
aam
imul
aas
push
es
jne
ss
sub
jo
mov
jecxz
and
dec
jecxz
ret
mov
add
mov
repz
lds
lds
into
xlat
lods
add
xor
xor
lea
sub
daa
mov
jp,pn
repz
in
or
jne
add
aad
adc
mov
scas
jae
mov
dec
fistpl
pop
loopne
jo
cs
pop
fsubrl
shll
push
sub
inc
and
insl
inc
stos
fildll
mov
fbstp
fstl
mov
xor
mov
jge
std
or
scas
mov
dec
repz
pushf
mov
pop
lret
jecxz
ds
rcrb
xor
inc
out
in
cmp
or
scas
inc
xchg
cmp
jns
pop
in
jns
sbb
out
dec
mov
dec
jne
rcll
push
jge
sbb
xchg
or
xor
fcompl
iret
and
aas
xor
jge
jp
fisttps
inc
push
pusha
div
int
xchg
out
nop
push
jno
cmp
sbb
jne
dec
into
push
shlb
ret
sub
add
stc
or
out
xor
dec
icebp
inc
lret
mov
and
jmp
adc
mov
inc
xchg
mov
sub
inc
push
fstl
fninit
adc
sub
pop
add
push
mov
mov
xchg
lahf
or
movsb
fsubrs
call
fiadds
inc
nop
adcl
mov
insb
in
cmpsb
icebp
insl
sbb
add
fs
cmp
rcll
sbbl
jl
loop
rcll
xchg
jmp
and
bound
jmp
daa
in
sbb
fidivrs
pop
mov
std
mov
lret
int
aad
test
jl
pop
adc
mov
flds
cli
sbb
ljmp
jb
mov
les
push
pop
bound
mov
loopne
cmp
lods
cs
icebp
pop
cmpsl
mov
pop
call
out
test
push
push
dec
sub
enter
lcall
pop
jns
test
cmp
aaa
packuswb
mov
jecxz
or
and
sbb
sub
xor
test
push
jg
push
add
mov
out
sti
sbb
push
out
std
dec
movsb
subb
lods
xor
sbb
sub
inc
stos
inc
in
sub
fcmovnb
scas
or
adc
xor
pusha
or
ja
cmp
inc
mov
lock
xor
out
inc
xchg
jns
dec
or
inc
shlb
or
add
add
getsec
pop
push
xor
test
xchg
mov
lahf
notb
sub
shl
push
add
mov
mov
inc
jne
popa
gs
jle
into
fbld
xchg
and
test
int
or
inc
and
inc
mov
mov
pop
imul
jae
sbb
js
xor
jo
inc
jbe
adc
in
call
cli
shrb
push
add
xchg
cld
xlat
daa
pop
rep
stos
pop
test
call
xchg
adc
das
sbb
cltd
mov
sub
sahf
es
push
aaa
maskmovq
or
test
pop
cwtl
stos
lret
add
sbb
sarb
push
shlb
leave
clc
pop
xlat
packsswb
pop
jne
adc
adc
sbb
lret
adc
in
stc
addr16
popa
push
push
sub
xor
imul
mov
jg
sub
mov
repnz
pop
xchg
mov
xor
jmp
adc
push
sbb
out
shl
pusha
xchg
fadds
mov
fcmovbe
pushf
push
push
movsl
shrb
mov
cmpsb
les
xchg
adc
dec
jge
push
dec
call
sahf
mov
clc
mov
mov
sahf
jnp
pop
rcrl
mov
daa
mov
mov
sbb
movsl
mov
add
cmc
loope
pop
and
jno
insb
daa
mov
jno
xor
repnz
sbb
sarb
stc
in
pop
ss
arpl
jbe
repz
dec
stos
push
add
jg
and
seto
jnp
xchg
xchg
pop
push
sbb
js
and
inc
lcall
ret
pop
jge
sahf
pop
insl
inc
clc
call
mov
jg
inc
sbb
adc
push
mov
mov
fsin
lret
les
sbb
push
and
ret
jecxz
int3
hlt
jnp
and
add
cltd
xchg
leave
sbb
test
xchg
mov
aas
xchg
mov
popf
imul
int
pmaxub
repz
ret
push
aad
adc
js
push
push
pop
sbb
data16
cs
inc
inc
sahf
sbb
scas
ret
testb
push
lods
outsb
mov
cld
and
xchg
gs
cmpsb
popf
leave
pop
inc
loop
sub
stos
mov
push
mov
cmp
add
fmull
fadds
pop
cld
push
call
test
imul
stos
movsl
inc
mov
push
lock
mov
mov
xchg
jae
sbb
sbb
inc
adc
into
and
cmp
adcl
mov
addl
test
adc
jge
leave
inc
add
dec
add
outsb
dec
cmpsb
popa
cmp
ret
lds
jno
xchg
fldenv
cmp
sub
add
jae
fistpl
mov
adc
call
mov
sbb
mov
push
mov
outsl
in
arpl
add
mov
dec
inc
and
in
push
rep
int
inc
aam
inc
pop
jno
and
mov
pop
mov
loopne
inc
cli
jne
mov
mov
push
inc
loopne
or
push
enter
jl
ret
mov
sar
lret
pop
iret
jns
scas
int
mov
ret
push
pop
movsl
jge
std
push
scas
mov
scas
sbb
js
xor
movsl
jecxz
sti
gs
xor
or
ljmp
mov
leave
inc
rcrb
in
sbb
mov
into
sub
int3
dec
or
jg
xor
xchg
inc
adc
insl
push
test
pop
pop
inc
add
int
mov
ja
sti
lcall
sti
addr16
out
adc
jle
dec
lods
inc
out
lock
mov
rolb
or
sbb
sarb
add
sub
int3
sbb
cld
movsb
sbb
lea
dec
in
mov
cmp
add
xor
pop
lret
repz
ret
addr16
add
stos
lret
jb
std
cli
push
pop
bound
test
push
mov
lods
icebp
mov
xchg
dec
aas
bound
xlat
jno
push
jecxz
push
lret
push
or
sub
sbb
adc
scas
ret
add
and
lret
in
lds
and
sarb
shlb
rolb
xchg
aam
jno
mov
pop
pop
jns
xchg
pop
xchg
les
inc
and
in
stos
add
inc
imull
testb
or
mov
rorl
mulb
ret
and
mov
jmp
dec
out
xor
sahf
cmpsb
dec
pop
xor
sbb
and
nop
test
push
aam
mov
pop
aam
sub
imul
movsl
cmpsb
jno
leave
mov
cmpsl
cmp
sbb
or
mov
jmp
mov
les
jo
repz
out
out
loope
dec
pusha
mov
ficoms
filds
mov
clc
dec
jp
pop
fildll
xorb
mov
mov
fcmovb
fstpl
iret
cmp
xchg
mov
inc
push
cmp
inc
popa
sub
jae
loop
mov
xlat
adc
mov
fisttpl
mov
stc
mov
sub
fiaddl
jp
in
das
out
test
add
or
fsubrp
cmp
xor
lock
lods
mov
test
pop
cmp
sarb
mov
test
std
fnsave
inc
imul
cmpsb
fistpll
xor
sahf
mov
sbb
add
repnz
xor
inc
pop
push
adc
pop
jae
fwait
xchg
add
dec
pop
lods
dec
mov
jge
dec
mov
push
inc
std
rclb
pop
rcrl
sbb
sbb
adc
mov
pop
push
inc
das
jl
adc
inc
add
nop
xchg
adc
mov
loop
dec
pop
and
imul
daa
bound
push
dec
iret
xor
inc
adc
jbe
or
call
pushf
std
inc
shll
clc
out
inc
stc
rclb
cmpsl
pop
cld
pusha
shr
lods
loop
jnp
scas
in
pop
addr16
inc
pop
insb
stos
sub
loop
out
cwtl
je
mov
hlt
fdivrs
xchg
mov
jnp
addl
cmp
push
mov
jle
out
les
adc
sbb
cmp
nop
lret
lcall
adc
adc
pop
mov
push
inc
call
jbe
scas
jne
lock
pushf
mov
and
test
ret
xchg
pusha
adc
enter
jae
dec
or
dec
jbe
push
and
jb
clc
pop
push
orb
pop
in
jno
and
mov
sbb
test
push
stos
xchg
in
pop
and
xchg
sub
mov
push
sub
pushl
lcall
or
roll
push
jg
call
dec
mov
add
data16
add
repnz
fucom
mul
test
jb
cmp
loope
xlat
es
push
cmp
shr
adc
imul
push
hlt
xor
push
mov
lret
or
mov
and
lds
faddl
xchg
rcr
sub
shrb
adc
pushf
cmp
xorb
enter
push
cltd
mov
jb
adc
sbbl
daa
fisttps
shl
btr
sti
aam
add
out
test
movsb
and
pop
push
cli
jecxz
sbb
jae
or
or
jge
add
repz
sub
movsb
inc
add
sbb
bound
lock
test
adc
mov
cmp
sub
push
addr16
xchg
adc
pop
cli
dec
adc
imul
xchg
lcall
stos
mov
shrb
xchg
rorb
dec
mov
pusha
ret
inc
jae
jb
push
pop
mov
push
testl
int
mov
push
fcmovb
mov
scas
push
xchg
in
in
lock
imul
addb
inc
mov
mov
cmpl
mov
xchg
ja
idiv
jne
push
dec
cmpsl
jg
cmpsl
mov
lahf
fadd
or
out
sub
xor
fidivrl
lock
dec
lret
add
gs
pusha
mov
push
mov
cmp
out
inc
mov
in
dec
aad
fisubl
push
or
out
cmp
sti
xor
lcall
movsl
leave
fmull
mov
das
push
iret
lahf
in
mov
notl
inc
cmp
xor
aaa
cltd
sub
pop
inc
xor
xchg
mov
orl
daa
movsb
sahf
aad
test
in
in
mov
fmuls
stc
push
lods
sbb
jbe
divb
int
or
out
cmp
mov
mov
ds
loop
sbb
fsubp
adc
daa
adc
aaa
nop
add
negb
dec
or
pop
xchg
push
imul
adc
push
out
lds
xor
xchg
adc
push
movsl
sbb
sbbl
push
jno
fdiv
out
fistps
bound
ja
stc
or
addr16
mov
inc
movsb
repnz
mov
push
je
bound
test
jne
enter
shlb
rorl
mov
pop
sub
add
aam
ljmp
xchg
cmp
repz
jmp
adc
fcmovnbe
ret
loop
mov
cltd
cmpsb
cmp
sub
push
jecxz
push
mov
outsl
inc
add
rcl
sub
adcl
sbb
pop
addr16
dec
into
cmpsl
outsl
xchg
ss
mov
rcll
loopne
test
js
dec
mov
dec
adc
fdivs
les
adc
fistpl
pusha
jmp
stos
stos
loop
lcall
mov
fwait
mov
scas
nop
pop
sub
das
leave
xchg
push
sbb
dec
cmpsb
mov
sar
inc
mov
push
dec
in
and
js
es
lock
test
sar
or
cmp
and
jp
cmp
jne
enter
fs
cmp
decb
inc
cltd
jbe
test
stc
or
sub
and
lret
cld
xchg
pushf
xor
jns
lcall
jns
mov
ja
insl
mov
sti
sbbl
dec
dec
pmaxsw
lods
dec
jge
es
in
sbb
lock
xchg
push
jb
std
sub
rcr
orl
mov
inc
add
mov
cmp
lretw
pop
jmp
jne
sub
sbb
decb
add
adc
test
imul
sub
sarl
je
mov
movsw
xorl
push
popa
fsts
xchg
add
xchg
aas
jae
scas
cmp
shl
xor
stos
xor
mov
mov
movsb
mov
jecxz
outsl
ficoms
icebp
test
shlb
rclb
cmp
xor
adc
scas
sub
and
or
das
sahf
push
repz
mov
adc
cwtl
std
imul
pop
scas
jo
shrl
and
aad
or
fidivl
dec
sbb
pop
lahf
dec
stc
jge
mov
dec
cli
sbb
sbb
ljmp
or
jns
loope
out
popf
outsb
xor
stos
mov
push
push
out
daa
sub
inc
dec
fs
fdivrs
adc
xor
arpl
pop
xor
add
fs
inc
adc
rolb
sbb
sahf
sbb
pop
loop
xorl
sub
ja
addl
rorb
aas
sbb
mov
es
out
and
outsb
lods
insb
rolb
mov
pusha
xchg
and
fsts
shrl
dec
popa
mov
sbb
repnz
pop
adc
adc
and
pusha
jne
jae
scas
cltd
fistl
adc
xchg
test
jnp
sub
repnz
shl
imul
ss
push
sub
push
icebp
pop
sbb
and
dec
inc
and
std
xor
pop
xor
gs
into
dec
cmc
fwait
inc
in
mov
sub
mov
stos
push
xchg
sub
pop
les
mov
mov
pop
mov
and
xor
push
and
movsl
ret
adc
scas
dec
cmp
push
jae
test
add
push
dec
or
and
and
shr
or
xlat
aad
into
insl
pop
mov
in
mov
enter
adc
not
jo
xchg
cli
fmull
jmp
mov
icebp
xchg
jno
das
mov
jp
cmp
push
pop
jmp
aas
andl
mov
or
or
mov
jg
loope
inc
sbb
aaa
aad
jp
lret
pushf
or
cmpsb
mov
pop
jmp
inc
movsl
scas
add
sub
imul
xchg
rorl
xchg
shll
mov
or
mov
mov
push
add
test
cmc
cmp
lds
mov
aad
cmp
loopne
mov
aad
mov
mov
jecxz
sbb
int3
imul
mov
xchg
ja
mov
sbb
inc
sbb
sarl
cltd
loopne
out
mov
les
loope
out
jmp
cmp
mov
push
jl
ljmp
lcall
iret
lods
cmpsl
pop
lcall
and
cld
lahf
pop
outsb
pushf
jg
push
pop
pop
dec
pop
xchg
repz
push
or
cmp
and
paddw
mov
sub
mov
cmpsb
imul
push
pop
jg
cmpsl
xchg
cmp
dec
dec
ficompl
mov
dec
sti
push
dec
or
inc
inc
rcll
mov
daa
fistps
sti
mov
xchg
pop
sub
xchg
test
add
push
xor
loop
or
aas
cmp
test
repz
xchg
mov
cmpsl
jmp
cmp
mov
or
mov
push
dec
xchg
scas
mov
ss
pop
push
xor
popf
loop
mov
call
adc
das
ret
into
arpl
mov
cld
popa
daa
mov
mov
sub
dec
rcl
sub
fnstcw
sbb
scas
cmp
sbb
xchg
xchg
xchg
jns
or
mov
and
xchg
int
cmc
iret
je
repz
sub
add
add
pop
push
cmp
mov
mov
mov
cs
push
or
cmp
loopne
jae
lahf
xor
fcompl
mov
pop
psrlq
shll
pop
fldl
push
sbb
xchg
mov
xlat
insl
test
pop
and
pop
push
mov
mov
xchg
add
mov
ds
pushf
dec
aaa
repz
push
mov
sub
int
sbb
lods
shll
andl
in
dec
push
imul
shrl
scas
gs
fcompl
add
test
jmp
add
pushf
repnz
fidivl
cltd
inc
or
sbbl
scas
mov
lods
mov
clc
push
mov
ja
sbb
add
gs
repz
stos
dec
push
xchg
add
inc
jns
fisttpll
cli
test
and
stos
ret
push
cmp
clc
movsl
mov
mov
mov
sti
jmp
and
in
mov
cmp
jns
enter
jmp
jbe
dec
xlat
xchg
or
jl
divb
inc
in
pop
push
in
gs
and
int3
aaa
adc
and
mov
lret
mov
adcb
jle
jl
sbb
mov
into
sub
push
or
xchg
jmp
scas
jno
ja
mov
adc
ret
cmp
dec
xchg
popf
gs
cmpsl
mov
cltd
insb
ficomps
sub
icebp
and
mov
sahf
inc
rclb
dec
ret
dec
mov
movsb
dec
jmp
ret
adc
add
push
int3
shl
pop
mov
mov
outsb
data16
mov
adc
neg
dec
rcll
adc
mov
or
mov
mov
leave
fdivrs
addr16
sub
mov
push
mov
out
and
jp
mov
or
ljmp
mov
push
fwait
pop
cwtl
mov
mov
sbb
or
mov
and
cwtl
adc
adc
sbb
sub
aas
arpl
addb
push
sahf
stc
aam
cwtl
and
jg
cmp
mov
or
cwtl
leave
outsl
xchg
data16
scas
sbb
and
jl
mov
cmc
cwtl
sbb
mov
cmp
pop
xchg
xor
mov
or
jae
imul
mov
mov
loop
xor
adc
out
xor
sub
ret
pusha
add
jae
sbb
mov
mov
mov
jge
jp
out
jnp
or
lods
push
adc
cwtl
stc
xchg
inc
pushf
pop
movsl
pop
inc
repz
mov
sbb
jg
iret
ljmp
or
xchg
inc
mov
mov
mov
ljmp
pop
dec
xor
mov
mov
inc
cmpsl
jecxz
arpl
xchg
test
scas
sbb
int3
cli
sub
cmp
xchg
add
in
push
mov
lcall
out
movsl
and
adcl
mov
inc
pushf
and
xchg
lcall
cmpsl
mov
mov
test
rolb
hlt
pop
sbb
test
pop
scas
shl
add
decb
push
mov
lea
in
inc
mov
fwait
movb
lock
pandn
fs
lahf
cld
or
adc
stos
sub
xchg
test
out
or
clc
gs
imul
out
xchg
xor
push
lock
out
sti
inc
pop
dec
and
mov
pop
mov
mov
mov
imul
dec
mov
push
fdivs
mov
mov
in
out
xchg
imul
jns
add
lds
in
fwait
inc
es
add
loopne
adc
test
push
roll
in
push
mov
ss
dec
cmc
shrb
xchg
fidivrs
out
stc
leave
ja
or
inc
mov
roll
fsubp
mov
aad
push
iret
imul
push
push
scas
pop
cmc
mov
popf
addr16
imul
pop
push
adc
mov
lret
adc
fcoms
add
call
inc
int
sar
inc
pop
mov
mov
mov
mov
iret
shll
xchg
inc
jg
push
hlt
jae
adc
push
pop
xor
rcrl
out
je
rclb
mov
aam
fs
xchg
pop
lcall
out
push
enter
xchg
jmp
call
mov
or
cld
mov
movb
cli
pop
add
xchg
jbe
mov
das
flds
pop
push
or
imul
jge
pause
movsl
pop
mov
lods
push
xor
cmp
data16
nop
adc
pop
push
mov
pop
shr
xchg
loope
jnp
push
push
sbb
xorb
adc
stos
inc
and
push
jbe
test
mov
mov
stc
pushf
lahf
xchg
sub
out
and
mov
test
jbe
pop
mov
dec
sahf
adc
dec
xor
xchg
cmp
loop,pn
add
cmovno
cmp
xor
stos
or
gs
mov
repnz
orl
pop
pusha
inc
orb
test
xor
mov
cmpsb
mov
cmp
xchg
pop
fnstsw
xchg
movsb
movsl
loop
add
push
popa
lcall
jb
lret
and
push
in
sub
cmpsb
cmpsb
fcoml
sbb
dec
mov
stos
cmpsl
lahf
cmp
sarl
aaa
fisttpl
repnz
icebp
loope
sub
pusha
mov
mov
and
mov
xchg
mov
aas
cmpsb
sahf
sbb
adc
cmp
filds
nop
popa
sub
fcompl
jne
cli
mov
fiadds
fidivl
xchg
push
in
jno
insb
adc
in
out
jg
call
cld
gs
out
push
sub
or
or
xchg
pusha
addb
arpl
mov
jp
adc
popa
movsl
jecxz
outsl
dec
ror
xor
cs
jae
xchg
jg
pop
test
sti
xlat
test
xor
mov
cmp
xor
cmc
or
les
aas
sub
and
aas
sbb
jg
lock
fwait
sbb
cltd
add
push
orl
pusha
push
cmpsb
inc
dec
xchg
sub
pusha
mov
jo
sub
mov
cmp
jne
repnz
pop
xchg
push
in
pop
mov
jae
in
mov
jnp
int3
adc
mov
pop
mov
xchg
enter
pop
nop
sbb
into
daa
sub
nop
xchg
or
sub
pop
adc
pop
jo
popf
jp
sbb
dec
das
xor
mov
addr16
cmp
imul
iret
adc
pushf
mov
cld
aaa
pop
mov
imul
push
faddl
pop
mov
and
and
sub
jo
ljmp
add
fiadds
mov
mov
setne
pop
repnz
xchg
popf
pop
dec
stos
test
mov
mov
imul
mov
sbb
insl
pop
roll
inc
mov
stos
push
mov
mov
fisubrl
repz
shll
out
cltd
cmpb
add
arpl
push
into
mov
insl
insl
mov
inc
xchg
in
scas
stos
cmpsl
dec
push
fdivrl
lea
sahf
adc
jns
jl
icebp
sbb
or
and
jmp
mov
test
lock
and
mov
pop
mov
cld
xor
jl
cli
xchg
dec
aaa
cmp
pusha
jb
xchg
pop
movsb
pop
jae
mov
mov
or
icebp
out
inc
cmp
into
nop
out
xor
inc
arpl
inc
and
call
mov
xor
cmp
push
inc
daa
ss
insb
inc
orb
ret
add
adc
add
jnp
cmc
push
and
jne
sbbl
mov
xchg
psrad
mov
test
sbb
add
mov
cmp
cs
imul
lods
fistpl
push
dec
fwait
add
lods
cltd
or
dec
mov
repz
or
cmp
outsb
adc
push
mov
pop
push
stos
lret
mov
std
pop
xor
loop
sub
int
cs
ret
adc
jg
mov
sub
mov
sbb
shlb
sbb
addr16
cmpl
cltd
clc
pusha
mov
rcrl
cmpb
mov
aaa
xchg
in
fwait
das
int
jp
xchg
push
insl
inc
js
jbe
scas
pop
testl
mov
fidivs
arpl
insl
pop
mov
je
jno
rcl
fnstenv
xchg
ret
sbb
add
cltd
cmc
mov
pop
xchg
popf
negl
testb
rcrb
sub
jp
jnp
xchg
mov
js
cltd
inc
dec
dec
mov
dec
sbb
fimull
mov
push
loopne
jl
es
mov
ds
sti
lret
mov
cmp
mov
dec
mov
add
cmp
lods
inc
jno
insl
jge
xlat
push
sbb
aam
aas
je
push
add
dec
mov
jnp
rol
mov
adc
and
cmp
xor
pop
push
pop
rcll
repz
mov
test
in
shrl
aas
jo
shlb
fs
adc
ss
int3
cmp
scas
mov
das
mov
pop
push
mov
cmpsb
sbb
xchg
sub
inc
leave
aam
xchg
jbe
xchg
fs
and
es
ds
xchg
push
in
rcr
fwait
out
hlt
mov
xchg
mov
imul
mov
mov
daa
std
test
lcall
adcb
shl
adc
in
repz
ss
pop
outsl
insb
imulb
test
daa
mulb
ja
gs
mov
out
xchg
add
mov
jmp
adc
fdiv
or
mov
scas
call
mov
pop
nop
push
cltd
sbb
adc
mov
out
icebp
fstpt
dec
out
rcl
push
fisttpll
mov
xor
enter
mov
les
jp
sbb
xor
xchg
popf
pop
cmp
sub
in
femms
mov
adc
sub
shrl
scas
push
sbb
cmpsl
repnz
dec
cmpsb
imull
cmpsb
adc
lret
inc
out
cmp
cmp
data16
xchg
push
add
or
and
test
add
lcall
daa
loope
lret
mov
and
jp
lods
jno
in
cmpsl
out
sub
rcrb
mov
call
mov
daa
stos
imul
push
das
lock
sbb
cmp
mov
jge
sbb
shll
mov
jmp
adc
lods
ja
push
lret
cwtl
xor
mov
pop
xchg
outsb
adc
pop
mov
xlat
mull
xchg
xchg
int
cltd
mov
mov
sub
aam
test
fistpll
in
xchg
mov
inc
pop
jno
mov
sub
jmp
stc
add
add
fnstcw
test
mov
adc
aas
xor
movsb
test
mov
mov
dec
sahf
sub
push
pop
mov
or
mov
int3
fbld
in
xchg
pop
pop
fcoml
in
sbb
hlt
and
icebp
or
mov
dec
popa
inc
jge
jae
add
adc
andl
add
fildll
sbb
fwait
sbb
cmp
and
or
and
sbb
ret
ja
pop
jo
pop
cs
and
sbb
sub
mov
popf
and
fstl
popa
lret
fsubs
insl
adc
and
mov
xchg
insb
sbb
mov
jge
dec
pop
je
sbbl
test
imul
sub
xchg
in
popf
and
lods
icebp
lods
or
jge
cltd
or
sarl
push
adc
iret
or
mov
and
jbe
js
pusha
jae
push
fstpl
sti
outsl
sbb
adc
mov
xor
mov
inc
inc
dec
xorb
mov
push
clc
fistps
add
shll
insl
sahf
mov
sbbl
loope
stc
pop
sub
dec
xorb
cmpsb
mov
push
mov
xchg
gs
test
lret
xchg
dec
filds
test
inc
movsb
movsl
xchg
nop
push
inc
inc
sbb
cwtl
sahf
and
push
hlt
fsts
divl
imul
lds
xchg
xchg
ret
mov
sub
push
ret
movsl
popa
fcmovne
sarb
jp
fisubrl
lock
lods
outsl
fcoml
aaa
fcmovnu
call
jb
xchg
mov
call
mov
mov
mov
pushf
mov
rcll
lea
inc
lods
aam
and
lret
fwait
mov
and
lock
inc
mov
sub
pop
push
bnd
ficoml
cmp
movsb
push
call
pop
xchg
out
shl
sbb
and
jb
mov
stos
cld
xorb
cmp
arpl
data16
shlb
push
inc
add
mov
adc
or
cwtl
push
mulb
aas
cmpsb
ss
or
push
inc
test
lock
jg
psllq
pushl
push
jmp
sub
xchg
mov
ljmp
insb
cmp
sub
mov
pop
loop
nop
push
dec
sbb
jle
sub
test
inc
mov
pop
popa
das
push
dec
aad
xchg
gs
loope
xor
sub
daa
push
outsb
mov
xor
dec
or
sbbl
filds
inc
cwtl
cmovge
dec
push
jbe
cmp
jmp
aas
jbe
xor
jle
lea
inc
sahf
clc
add
mov
sub
sub
pop
arpl
mov
or
dec
ss
sbb
or
scas
jmp
cmp
gs
mov
pop
or
testb
les
cld
cs
repnz
mov
sti
sub
mov
sub
jecxz
lret
ret
pop
pop
les
sbb
out
push
insl
movsb
cmp
cmp
fsubrs
push
cmp
adc
add
xchg
pinsrw
pop
xchg
ja
scas
inc
add
dec
mov
lret
fmuls
mov
add
and
cwtl
dec
jp
cwtl
data16
jb
pop
adc
lret
mov
dec
push
pop
jmp
popa
out
out
or
loop
sarl
push
call
loopne
jns
mov
rorl
pop
xor
push
enter
outsb
test
push
ds
daa
mov
inc
inc
push
cmp
sbb
shr
aaa
icebp
mov
rorb
or
rdmsr
or
movsl
sbb
test
fwait
mov
mov
leave
cmp
inc
mov
daa
mov
and
inc
xchg
scas
pop
sub
mov
cmp
std
in
orb
mulps
bound
aas
les
stos
nop
mov
mov
clc
fstpl
mov
aam
mov
jae
dec
js
lods
xchg
cs
push
mov
mov
cli
jae
jge
out
mov
pop
mov
dec
or
nop
lods
sbb
in
cmp
jo
inc
into
push
cmc
lods
cmp
xchg
adc
in
movsb
xchg
flds
fisttpl
pop
in
je
das
fsub
xor
mov
pusha
and
add
loop
mov
cli
enter
pop
cmp
shll
mov
inc
fnclex
adc
loopne
jo
xorl
adcl
test
insl
lods
lock
dec
and
addr16
cmp
fcomp
mov
repz
and
inc
loop
xchg
pusha
xchg
stos
pop
cwtl
ficomps
outsb
adc
sub
cmp
bnd
push
iret
adc
aam
and
mov
xor
lcall
or
lea
mov
popf
cmp
sbb
sbb
fs
xor
push
sub
push
sub
mov
mov
adcl
imul
sbb
pop
imul
std
xchg
adc
aaa
cwtl
or
mov
out
hlt
push
test
pusha
adc
adcb
inc
out
and
mov
aas
jnp
dec
lods
pop
and
loop
or
push
dec
aad
jmp
sub
sarb
imul
pop
stc
dec
add
sbb
ss
cmp
dec
adc
push
push
or
add
lret
dec
imul
inc
sub
mov
lods
xchg
lret
pop
mov
mov
out
xchg
bound
inc
jp
and
push
dec
jbe
leave
cmp
jne
or
adc
push
imul
ds
mov
adcb
daa
mov
lods
add
pop
sti
pop
jnp
mov
mov
test
mov
jle
dec
sbb
dec
jecxz
mov
out
and
and
xor
lret
mov
mov
push
lods
dec
lods
inc
pop
mov
inc
inc
lods
cs
test
test
icebp
sub
push
cmp
sahf
lock
pop
xchg
mov
shll
pop
dec
pop
imul
call
lods
fldz
cmp
gs
orb
lods
es
repz
and
mov
and
lret
ja
cmpb
lahf
mov
xor
aad
das
jle
imul
cmovg
cmp
inc
jb
pop
icebp
sbb
add
cli
call
dec
inc
rorl
rcl
loop
outsb
add
enter
in
mov
mov
sub
sti
cmp
sbb
ljmp
rorl
cmp
aad
lock
test
mov
adc
cmp
test
std
jl
jnp
and
jno
pop
pop
lods
pusha
push
mov
push
adc
repz
int3
push
mov
imul
mov
test
dec
mov
sbb
ficoms
sub
cmc
imul
test
cltd
jecxz
clc
aad
aaa
jb
sbb
mov
sub
test
aam
mov
xor
mov
int3
jo
inc
das
jmp
dec
mov
or
cmpb
enter
icebp
shll
jge
cmpsl
xchg
es
push
rorb
es
xchg
mov
movsb
movsl
xchg
adc
xchg
movsb
ret
js
inc
fistps
or
dec
jg
ret
ret
jo
orb
xchg
mov
xor
lods
mov
mov
inc
sbb
inc
cmpb
pop
clc
sub
jge
xchg
mov
jecxz
pop
mov
jle
int
and
subb
mov
inc
mov
inc
mov
jl
enter
xlat
lret
addr16
and
outsl
int3
cmpsb
push
push
or
pop
sbb
cmp
push
cmp
test
pop
out
imul
mov
xchg
push
mov
add
xchg
xchg
mov
out
sub
in
dec
mov
imull
xor
lods
mov
lcall
int
jb
mov
mov
add
nop
fldl
dec
adc
stos
sub
mov
sbb
lock
cmp
mov
cltd
xor
fldl
popf
jl
into
xchg
jno
pop
div
lds
imul
inc
scas
daa
push
mov
rolb
insl
push
push
mov
jmp
dec
pop
sub
xchg
aam
js
movl
ficoml
mov
iret
mov
xchg
or
lea
out
repz
or
cli
push
inc
cmp
sub
mov
outsl
frstor
add
loope
cltd
out
outsl
cmp
mov
mov
xor
scas
ljmp
mov
filds
loop
in
mov
jns
ret
sarb
lds
xchg
add
and
push
shll
mov
push
adc
dec
out
in
jg
cmc
fisttpll
je
push
mov
pop
mov
sub
xor
cmpsl
cmp
mov
mov
inc
pop
or
jb
pop
int3
mov
cmp
fstps
scas
inc
adc
stos
mov
and
adc
pop
insl
in
mov
xchg
jae
iret
mov
mov
adc
mov
push
loop
jae
xor
rorl
adc
scas
xor
xchg
mov
aaa
ja
jb
push
inc
sbb
cmp
xor
fstpt
cmpl
jl
insb
bswap
dec
imul
pop
adc
xor
jno
and
inc
lds
inc
jno
neg
imul
arpl
gs
mov
inc
es
dec
pop
sub
outsl
mov
stos
mov
xchg
test
addl
push
loopne
inc
mov
pop
mov
imul
jno
loopne
pop
fists
repnz
cwtl
cli
bnd
pop
mov
xchg
push
sub
xlat
outsb
xor
push
pusha
sbb
mov
inc
enter
sti
adc
mov
addb
sub
sarb
test
jb
mov
and
jmp
sub
scas
es
sbb
rorl
or
aam
dec
mov
jae
xor
pop
jb,pn
scas
xlat
jg
mov
cmc
jb
lods
dec
and
inc
cld
popf
fstpl
mov
sarb
mov
lcall
inc
adc
lret
sbb
adc
mov
cmp
test
ljmp
xor
push
sbb
mov
imul
cs
add
pop
and
lret
xchg
aas
lret
hlt
and
add
lea
lcall
xchg
pop
mov
cld
mov
pop
mov
cmpsb
lods
mov
inc
testb
pushf
lock
mov
and
mov
cmpl
mov
in
dec
or
and
sbb
cmp
sub
mov
adc
fisubs
dec
outsl
mov
mov
fcoms
push
test
push
test
sarb
call
mov
and
bound
fsubrs
sub
popa
sub
pusha
add
testl
adc
push
jo
and
jo
stos
mov
ja
and
js
xchg
lret
and
popa
loopne
jb
pop
xor
sub
mov
test
dec
jmp
cmpsl
insb
icebp
subb
push
inc
add
sahf
xor
das
ret
sbb
add
ret
sub
cmp
insl
push
insb
test
in
insb
adc
xor
popf
repz
sbbl
faddl
and
cmpsb
push
dec
dec
pop
dec
call
pop
mov
mov
mov
adc
fdivr
jae
push
leave
data16
fisubrl
mov
push
mov
insb
mov
roll
inc
xchg
fwait
jb
and
test
and
outsl
fsubrl
enter
mov
mov
cli
cwtl
push
mov
test
shlb
orb
jle
bound
cmp
ja
cmp
shll
xchg
xchg
add
std
loope
ret
mov
pop
xor
cltd
sub
cmp
push
jns
adc
pop
and
cmp
rcr
push
and
dec
stc
xlat
push
push
mov
repnz
fstps
mov
adc
scas
jne
imul
sub
aas
jg
jl
scas
fmul
push
movsl
adc
sub
mov
orl
pop
jb
inc
and
mov
push
xor
daa
dec
mov
hlt
sbb
push
lcall
push
fimull
ds
add
loope
aam
fsubs
imul
mov
dec
jecxz
sub
pop
sbb
stc
call
or
call
punpcklwd
addr16
dec
lds
pop
ss
xchg
mov
fiaddl
call
xor
lock
movsl
push
sbb
and
rcrb
sbb
sub
add
idivb
sub
out
inc
inc
adc
loop
sahf
mov
les
mov
data16
inc
dec
fdivp
cmc
jb
jp
xchg
or
cmpsb
out
jb
mov
in
jno
jno
or
add
lahf
fidivrs
pop
scas
xor
les
mov
and
mov
and
sbb
cmp
jmp
dec
test
jnp
adcl
in
pop
push
add
in
lods
or
and
ja
fadd
push
or
mov
aaa
pop
xchg
xchg
mov
lods
sbb
jns
jmp
out
lcall
xchg
mov
shrl
into
add
in
or
and
insb
mov
lea
test
and
xor
leave
sti
jp
movsl
or
xor
mov
jmp
out
push
jle
mov
lock
jmp
jg
push
fnstcw
ret
pop
pop
inc
push
mov
bound
arpl
or
xor
xor
cmpsb
lock
mov
jns
mov
mov
push
mov
aam
in
xadd
cmpsl
push
or
or
dec
cmp
ja
mov
negb
mov
enter
jne
lret
mov
arpl
fstpt
out
lret
lods
inc
push
inc
xchg
inc
or
lcall
ljmp
sahf
cmp
dec
idivb
push
leave
cltd
mov
gs
sub
or
jns
ss
out
push
push
loopne
xchg
xor
outsl
pop
add
addb
xor
cwtl
movsl
ret
pop
arpl
push
sub
stos
and
stos
divl
fbld
popa
mov
jg
adc
loope
inc
in
out
fwait
cs
xchg
xchg
nop
popf
fwait
adc
aam
scas
jo
mov
out
and
sbb
xor
push
mov
lods
pop
pop
mov
xchg
xor
ret
jae
stc
js
add
xor
add
lret
pop
addl
xchg
push
dec
cmpsl
scas
jg
dec
ljmp
xchg
sub
bound
mov
pushf
bound
adc
mov
stc
das
sti
test
imul
pop
fs
push
push
arpl
xchg
dec
sbb
dec
inc
mov
xchg
push
fstpl
cwtl
pop
xchg
jmp
sub
sahf
je
imul
fimull
mov
arpl
pop
xchg
mov
xchg
add
fld
and
dec
mov
nop
ds
mov
dec
sbb
jp
jp
mov
test
and
and
mov
je
lock
lods
add
lcall
pop
add
jb
leave
iret
aad
sti
nop
fwait
jo
out
xor
mov
pop
or
adc
call
jb
je
cmp
cmp
push
popl
adc
push
push
stc
and
lret
and
daa
xchg
xchg
push
testb
insl
mov
data16
push
pop
adc
jne
pop
sarb
xor
in
push
cmp
leave
add
insl
or
pop
mov
andl
mov
in
sbb
int3
xrelease
push
movsb
jae
lea
add
cltd
jmp
xchg
sbb
cmp
add
fists
movsb
gs
push
jl
sub
xor
mov
aaa
cmc
dec
adc
push
jne
movsb
sub
lahf
pop
cmp
cmp
sahf
sbb
push
out
mov
push
push
pop
stos
inc
test
jne
jge
hlt
add
mov
xchg
mov
pop
imul
inc
sub
inc
pop
das
into
mov
mov
scas
mov
mov
adc
es
out
inc
cmpsb
push
es
cli
lahf
ret
movsl
jecxz
mov
pop
jo
lret
out
ss
mov
into
dec
lcall
out
enter
out
pop
inc
popa
imul
mov
lcall
rclb
faddl
push
insb
ja
leave
mov
xchg
mov
data16
leave
push
ss
lahf
gs
jge
repnz
sbb
cmp
push
fimuls
inc
xchg
adc
es
aad
or
add
imul
loope
jno
add
adc
mov
call
push
negl
int
mov
test
or
mov
xor
cmp
fldcw
arpl
jecxz
ljmp
shrb
sbb
mov
sbb
sub
xorb
pop
push
xchg
dec
jno
sahf
push
or
shlb
popa
loop
dec
lret
mov
pop
xchg
jb
popa
pop
cli
and
cmpsl
fs
mov
test
sbb
lock
push
or
add
jns
dec
xor
arpl
jl
das
or
cs
xchg
idivl
mov
pop
inc
cmp
add
shl
sbb
adc
push
jecxz
mov
cmp
lods
addr16
sub
cld
aam
mov
sub
xor
rorb
test
xor
pop
cld
sarl
pop
sbb
xchg
cld
xlat
xorl
cmp
jp
jns
into
iret
roll
or
xor
xchg
or
and
pop
pushf
fcomps
jae
stos
pusha
mov
cld
rcr
pop
cmpsl
cmp
push
cmp
jl
sbbb
ds
xchg
pop
or
enter
js
cmp
stc
inc
ret
xlat
mov
pop
mov
lcall
dec
push
out
push
xor
repnz
xor
daa
mov
popa
movsl
cmc
cltd
jns
ftst
aaa
xchg
push
xchg
shll
sub
leave
out
push
or
mov
inc
out
out
stos
ja
out
inc
xor
push
mov
sub
rcrb
imul
mov
jnp
inc
push
mov
mov
xlat
jmp
out
call
fninit
inc
daa
cmp
fsubs
lea
aam
jne
pop
jbe
mov
pop
jp
jge
lahf
testl
in
xlat
push
fisubl
dec
xor
lock
jl
mov
rcll
xchg
mov
repnz
lock
icebp
adc
mov
mov
push
xor
cmpsb
sbb
fs
je
pop
adc
out
push
dec
mov
shlb
pop
sub
fs
hlt
push
fistl
pop
gs
push
mov
pop
and
ja
cmp
lret
mov
pop
push
jne
dec
repnz
inc
sub
mov
adc
pop
or
mov
push
popf
test
cmp
pusha
ss
cwtl
divl
and
add
hlt
stos
xchg
pop
pop
sarl
pop
cli
cmp
mov
ljmp
xchg
jae
int3
push
movsl
out
dec
rorb
and
les
push
and
mov
cmp
dec
sarb
ret
lea
stos
add
or
jl
mov
mov
add
aam
mov
jo
xor
aad
ja
sub
bound
and
je
pop
xor
jno
outsl
into
mov
scas
sbb
push
mov
xchg
and
add
mov
push
pop
shlb
inc
cmovns
jge
in
cmp
dec
mov
pop
dec
fistps
or
mov
dec
lea
ljmp
and
xchg
xor
std
loopne
daa
pushf
test
xor
mov
ficoms
xchg
jle
sbb
pop
push
movsb
aas
out
or
adc
add
inc
sahf
inc
and
movsl
out
xor
jne
jge
push
jge
mov
fmull
pushf
mov
jecxz
mov
and
test
and
xchg
push
stos
pop
sarb
out
lds
lahf
in
les
dec
push
adc
jge
out
inc
js
testl
push
cmp
adc
out
add
loopne
jg
hlt
mov
arpl
push
arpl
cltd
mov
add
adc
xlat
mov
or
frstor
dec
jl
dec
dec
sbb
xchg
mov
or
cmp
push
sub
inc
xchg
test
push
pop
leave
push
test
mov
dec
in
inc
cmc
pop
mov
cli
scas
cmp
push
int3
lcall
arpl
and
mov
lret
mov
push
xor
fnstenv
leave
jno
outsb
push
addr16
fsubl
xchg
xor
in
leave
insl
mov
adc
lcall
cmp
mov
dec
jecxz
mov
cmp
push
dec
aam
popa
cmpsl
setb
in
push
inc
test
push
dec
add
cmc
loop
pop
and
add
mov
es
adc
pop
inc
dec
stos
dec
in
sbb
test
rol
add
out
adc
inc
int
or
cld
mov
pop
sar
push
jle
add
das
idiv
fisttpll
fucomp
daa
pop
movsl
fidivrs
fs
lock
stos
jp
push
insl
imul
xchg
ss
push
mov
sub
es
push
mov
jge
clc
sbb
pop
xor
dec
jnp
outsb
nop
frstor
into
mov
mov
clc
in
inc
cli
inc
and
inc
push
xor
rcl
jecxz
scas
scas
jbe
bound
xlat
test
ljmp
icebp
inc
sub
gs
pop
movsb
mov
pop
iret
sub
repz
dec
ret
or
leave
and
add
repz
push
nop
cmp
lods
adc
push
push
add
pop
cmp
jbe
cmp
fcomps
sub
repz
mov
dec
std
fcoml
inc
cmp
popf
sub
test
jae
cmp
dec
jnp
adcb
fxch
or
adc
sub
jno
mov
imull
hlt
cmp
adc
mov
inc
jle
lret
jbe
cmp
sub
jge
repnz
ds
fbstp
sti
leave
and
xor
push
mov
fnstenv
dec
push
ljmp
insb
jmp
inc
fisttps
lret
inc
inc
mov
inc
rclb
mov
ljmp
mov
xchg
fsubs
aas
sbb
or
add
test
push
mov
xor
in
cld
jno
xorb
and
inc
push
lahf
sti
gs
shlb
ror
xchg
das
xor
aaa
test
arpl
xor
inc
push
fisubrs
inc
push
pop
inc
cmc
rcrb
adc
sub
pop
push
repnz
mov
cmpsb
jno
sub
lret
add
jne
inc
xor
xadd
test
rclb
adc
sub
in
shrb
mov
daa
xor
int3
pop
mov
lret
insl
dec
xor
sbb
adc
jmp
call
cmc
lods
add
das
imul
jmp
adcl
sub
cmp
fstps
mov
test
lock
aam
add
pop
sbb
scas
mov
push
cmpsb
nop
icebp
mov
int
inc
sarl
sbb
cs
arpl
je
cmpsb
xchg
add
mov
rorl
pop
dec
jmp
popf
add
sahf
inc
mov
popl
rclb
lahf
mov
es
pop
fstl
in
popl
mov
scas
cmp
shr
jecxz
mov
out
loop
cltd
arpl
imul
rclw
xor
in
and
out
pavgb
xchg
fdivrl
inc
xchg
mov
jecxz
rorl
push
in
insl
cmp
xor
sbb
sti
fldcw
adc
sub
loop
loopne
inc
loopne
aam
lods
inc
push
lds
inc
jmp
xchg
sbb
pop
jne
jbe
pop
mov
mov
jl
sub
xor
fsubl
inc
or
xor
mov
aas
jl
sbb
fnstenv
rcrb
pushf
scas
mov
nop
add
mov
pop
jmp
ja
cltd
insb
mov
inc
pop
clc
imul
mov
adc
add
cmpsl
push
popf
cmpb
sbb
sub
xchg
jl
int
fimuls
lods
dec
fiaddl
or
sarl
pop
aad
push
inc
fldpi
jmp
aaa
mov
push
xchg
lret
shrb
aas
ret
cs
cli
inc
lcall
push
adc
push
shrl
ja
fldenv
cmp
cmc
adc
or
push
mov
pop
jmp
outsb
psrad
imul
hlt
push
test
cmp
js
push
imul
cmpsb
xor
ret
lahf
in
int3
add
sbb
adc
data16
cwtl
jne
out
sahf
mov
cmp
cwtl
or
xchg
mov
cs
int3
lods
jl
out
loope
test
ds
dec
xchg
lret
repz
cmpsl
and
xchg
xchg
das
lret
mov
sbb
pop
jo
xor
lock
jg
cmpsl
sub
leave
sbb
pop
in
test
addr16
aam
xchg
subb
fldcw
pop
add
sbb
dec
cltd
stos
jno
ja
fstpl
inc
addb
ds
adc
sub
jbe
add
shlb
jg
int
loop
cmpb
xchg
outsl
movsb
or
or
jae
or
popa
test
inc
je
inc
push
enter
and
mull
inc
jns
sbb
iret
cld
push
xchg
lods
dec
fisubs
jl
repz
sub
sbbl
lahf
cmc
xchg
mov
lea
insl
in
cmpsl
xchg
adc
scas
sub
add
xchg
push
je
mov
jg
fiadds
sbb
lret
push
xchg
mov
sbb
mov
lds
adc
cmp
flds
ret
push
adc
jecxz
push
loope
lret
fdivs
xlat
push
add
mov
fucom
sub
lock
jns
lahf
aam
cmp
rclb
ds
lods
repz
test
out
sarl
mov
sbb
rolb
sub
rol
jge
cmpsl
add
in
fidivrl
push
sbb
mov
icebp
adc
lcall
aad
subl
mov
shrl
std
shlb
push
pop
jns
jne
pop
inc
in
pop
out
cmp
repz
add
imul
inc
orl
sbb
pop
dec
push
ss
inc
ja
lods
es
pop
int3
addr16
inc
push
sub
inc
mov
dec
imul
mov
imul
dec
adc
or
jecxz
adc
fidivl
adc
or
adc
jns
lea
push
dec
nop
daa
aad
inc
or
clc
inc
xor
mov
jmp
jle
addr16
dec
inc
jb
xor
lock
pop
push
test
jno
cld
mov
out
push
popa
inc
lods
cld
cmp
mov
sar
cmp
pop
scas
sti
ljmp
push
stos
push
mov
xorl
sub
imul
insb
mov
pop
lret
popa
je
out
dec
scas
rorl
scas
jle
inc
sub
and
out
mov
jp
mov
sbb
push
mov
mov
and
lock
mov
loop
mov
push
and
test
sub
pop
clc
stc
sub
out
out
xlat
stos
inc
pop
jo
testb
jle
or
pop
clc
pop
or
dec
adc
lods
loop
sub
shll
and
xor
inc
pusha
mov
mov
in
xor
faddl
and
roll
cmp
sbb
shrb
fidivrs
xor
push
xor
mov
adc
ja
push
mov
add
in
xor
sbb
repnz
adc
lock
lcall
push
loopne
add
jle
xchg
xor
rcr
fdivrl
movsb
xor
dec
dec
jo
repnz
fsubl
rolb
mov
cmp
xchg
shr
jl
mov
cli
and
inc
pop
dec
mul
out
bnd
push
cmp
adc
xchg
stc
inc
outsl
leave
and
lock
jmp
imul
sub
test
test
testb
xor
iret
das
sbb
inc
sub
push
sbb
pop
lahf
mov
repnz
xor
inc
and
cltd
sbb
jge
leave
adc
imul
insl
stc
ret
xor
push
push
flds
ret
test
pop
iret
cmp
cltd
int
xor
and
xor
out
fisubrs
sbb
jl
mov
enter
out
test
xchg
xchg
cld
push
mov
jns
lds
adcb
fs
push
mov
inc
neg
lret
inc
enter
and
xchg
dec
loopne
xchg
test
movsb
add
lcall
jbe
sub
sbb
pop
in
ljmp
push
push
arpl
out
mov
in
jge
nop
sbb
aas
inc
hlt
and
pop
pop
test
rcll
ljmp
inc
flds
out
cltd
push
xchg
clc
inc
test
nop
sub
popa
loopne
lods
jne
add
out
jle
xor
ret
aad
repz
fisttpl
fsubrs
add
dec
loope
repnz
lock
mov
fcomps
and
mov
push
mov
popf
push
mov
les
adc
mov
imul
mov
dec
or
cmp
jnp
test
cltd
jns
ss
in
in
xchg
les
adc
mov
lcall
cmp
mov
cmp
fcoms
les
push
jbe
xor
out
push
add
cmp
cltd
in
pop
mov
sbb
cmp
insl
mov
aaa
popf
mov
and
xchg
inc
push
aas
jge
inc
cli
push
cmp
test
sbb
shll
push
pop
add
mov
loope
shrl
mov
popa
in
lea
jae
push
cmp
inc
pop
clc
rcrl
pusha
sub
cld
inc
pop
imul
add
adc
mov
sub
mov
inc
call
push
jle
rcrb
mov
cmp
int
into
sub
adc
push
or
mov
rcl
fcompl
ficoms
sahf
orb
data16
pop
dec
inc
mov
inc
mov
mov
into
xor
inc
fldl
outsb
cld
xlat
push
add
in
jecxz
ljmp
in
out
cmpb
into
dec
cltd
mull
inc
ret
xor
jb
or
outsl
imul
data16
popf
push
xchg
outsl
pop
subb
mov
mov
xchg
pushf
out
je
xchg
lods
pop
cmp
jp
adc
es
cmpsl
lea
outsb
movsb
iret
loop
test
jp
cmp
popa
test
jg
mov
and
push
ud2
xorl
jle
or
jb
pushf
call
mov
ret
sub
cmp
and
imul
mov
add
cmpsl
inc
jmp
mov
pop
xor
outsl
sbb
aaa
inc
mov
and
popa
fsubs
sub
push
push
dec
mov
jg
push
mov
aad
push
cli
aas
mov
lret
out
loope
ss
pop
cwtl
pop
frstor
sti
xlat
xchg
cmpsb
pop
dec
in
in
or
cmp
pop
add
cmp
sbb
imul
int3
mov
cmpsb
xchg
fldt
dec
inc
push
movsl
push
jl
cmp
push
xor
mov
mov
push
inc
aas
sub
inc
nop
leave
or
scas
call
cwtl
mov
gs
loop
or
sbb
popa
xor
nop
imul
push
sbb
js
jb
inc
or
sub
mov
cmp
dec
xchg
cmp
adc
inc
add
cwtl
cmp
test
loope
dec
fcmovu
data16
inc
test
stos
out
inc
xchg
and
mov
push
pop
jl
adc
sub
enter
inc
jnp
mov
cmp
jns
inc
repnz
sbb
sbb
call
test
jne
ss
mov
mov
divl
jg
pop
mov
cmpsl
pop
inc
inc
lds
hlt
inc
jbe
aam
insb
cs
xor
call
mov
adc
in
mov
mov
lahf
ljmp
jg
cmp
push
mov
sbb
and
sbbb
lods
pavgb
push
jg
sbb
sub
push
test
scas
sub
in
enter
push
add
mov
xchg
out
jb
and
push
cltd
insb
adc
xor
pushf
push
jmp
lods
add
sarl
sub
dec
jbe
cltd
test
addb
xor
lds
sbb
xchg
push
in
arpl
pusha
test
das
scas
les
and
decl
xchg
mov
mov
jnp
sbb
pop
insl
cmp
jns
push
adc
xorl
add
addr16
lods
loope
outsl
ljmp
adc
pop
bound
push
ljmp
push
fstl
icebp
es
inc
js
or
int3
sub
xor
jnp
lds
sbb
popf
sbb
inc
xor
mov
push
jl
fwait
lret
mov
dec
inc
iret
sbb
test
les
stc
mov
pop
gs
fsubs
xchg
addr16
stos
pop
push
pmaxub
push
repnz
dec
mov
mov
fsubrl
xor
push
mov
inc
mov
pop
lret
cmp
rclb
pop
into
lret
push
xchg
test
xchg
sub
imul
and
shl
cmp
mov
lock
out
cmp
pop
pop
imul
push
mov
or
shlb
leave
push
lret
fdivs
test
push
stos
or
dec
adc
bound
add
addr16
lret
cmpsl
push
and
sbb
mov
fsubrl
ss
leave
vmovlpd
icebp
stos
or
adc
shlb
jge
or
lcall
xchg
shlb
push
inc
and
clc
test
lods
or
outsb
int3
xlat
clc
or
add
aam
cmp
jo
fs
negb
pop
xor
sbb
enter
je
lods
mov
in
sahf
sarl
jecxz
popa
cmp
inc
jge
sbb
dec
lret
std
nop
mov
movl
and
and
stc
mov
ss
jmp
insb
jbe
aas
push
jmp
pop
sahf
insb
inc
std
popf
pusha
std
ss
push
lock
stos
movsl
cmc
pop
dec
sbbb
ljmp
jnp
stc
ss
sbb
mov
gs
test
xchg
sub
ss
sub
movsl
mov
add
sbb
je
dec
mov
int
and
sub
inc
xor
add
scas
test
data16
dec
addr16
pop
out
out
push
xchg
shrb
add
inc
outsb
fxch
sub
out
push
xchg
mov
lahf
mov
cmp
xlat
and
lcall
outsb
mov
push
dec
xchg
xor
arpl
sub
daa
mov
jo
fdivl
in
shll
mov
pop
lock
ss
add
dec
movsb
shl
out
cmpsl
push
dec
btr
rep
jnp
fsubl
shlb
add
dec
mov
and
push
sbbb
mov
cmp
sarl
sbb
aam
xchg
mov
andl
push
and
test
pop
mov
arpl
movsl
jne
cmp
add
jo
jb
rol
mov
cmp
push
sub
repnz
pushw
pop
mov
into
aaa
cmpsb
push
or
pop
mov
lds
push
sahf
gs
lcall
pop
sarl
int
mov
repz
push
push
xchg
pop
pusha
test
pushf
jl
cmpsb
int3
mov
jae
movsb
add
adc
mov
jne
and
in
imul
movsb
aaa
test
dec
mov
sbb
test
into
adc
in
rcrb
xchg
scas
pop
test
inc
addb
mov
inc
xchg
xchg
dec
cmp
sbb
daa
adc
aam
scas
push
jno
mov
sbb
push
mov
mov
and
icebp
adc
adc
add
ret
or
loop
out
xchg
mov
cmpsl
outsl
mov
add
mov
adc
adc
sti
insl
push
xchg
pop
and
enter
add
mov
sbb
cmp
rorb
daa
mov
sub
xchg
imull
or
fnstenv
cmpsl
in
mov
jecxz
fldenv
mov
out
filds
add
push
ret
testl
xchg
mov
add
arpl
or
bound
lcall
aaa
jle
pop
sbb
xor
mov
push
mov
out
xor
or
pop
test
pop
xor
in
lea
jne
cltd
and
mov
lret
jns
sbb
mov
or
insl
push
ret
jns
into
dec
cmp
je
repz
je
mov
daa
ljmp
out
xor
repnz
or
xchg
ficomps
cmp
ret
jae
ja
jp
mov
ss
dec
dec
cli
or
fwait
loop
mov
je
fcoml
cmp
inc
imul
pushf
pop
inc
and
jnp
mov
jp
mov
mov
rcll
outsl
test
sub
push
add
mov
pop
cs
and
dec
mov
or
push
mov
push
fsubr
jge
cmpsb
not
push
sub
movsl
test
or
push
fcomi
nop
fildll
loope
rorl
push
cmp
add
push
xchg
rclb
movsb
pop
mov
fadds
inc
sub
jnp
test
imul
dec
in
lods
scas
cmpsb
push
popa
mov
test
push
sbb
pop
mov
repz
xor
gs
divl
mov
enter
cltd
xchg
bound
stos
xchg
cltd
les
adc
lret
fadd
jbe
jle
daa
and
add
adc
outsb
jbe
lahf
loopne
and
dec
mov
or
adc
cli
imul
push
sbb
and
push
mulb
push
fldz
cmp
inc
lock
js
sbb
adc
dec
mov
rcr
pop
in
mov
gs
arpl
leave
in
ffreep
xlat
jmp
mov
fisttpll
xchg
dec
mov
stc
hlt
mov
outsb
mov
pusha
dec
icebp
push
insl
leave
stos
out
mov
push
push
cmp
lcall
and
test
pusha
cwtl
cmp
popf
int
pop
add
adc
ret
mov
xchg
fstpt
jb
mov
insl
fwait
pop
les
mov
push
or
dec
out
mov
mov
jecxz
push
fimuls
cmp
xchg
lret
mov
xor
rcll
jl
cmc
inc
adc
add
mov
cmp
push
movsb
push
add
int3
imul
in
lods
and
shlb
push
call
mov
mov
inc
enter
jne
inc
dec
mov
xchg
mov
sar
mov
sarl
in
sti
pop
movsb
pop
xor
cmp
insl
push
add
or
outsb
and
aam
dec
and
iret
adc
cmp
pop
pushf
lcall
test
lcall
hlt
aam
cmpsl
sub
into
push
adc
sbbl
fisttpl
in
ret
lret
or
fwait
cmp
testl
lahf
sub
add
mov
jge
les
jmp
mov
addr16
fwait
dec
int
inc
lahf
cmp
xor
xchg
arpl
cwtl
push
dec
jns
sti
sbb
xor
les
or
add
filds
test
out
rorl
fxtract
sarl
daa
out
and
push
push
dec
or
pushf
repnz
sub
movsb
sbb
ret
or
mov
nop
adc
outsl
jno
mov
push
mov
mov
repnz
out
push
jne
cmp
clc
sub
mov
addb
bound
pop
cmp
push
xchg
bound
xchg
add
rcl
sbb
xchg
mov
insb
imul
adc
pop
xchg
adcb
jl
push
push
xor
ss
mov
sub
pop
lods
pushf
sub
push
test
or
popf
mov
jmp
shrl
jne
imul
cmpsl
jmp
add
mov
sbb
ljmp
pop
dec
cli
test
fs
shll
insb
stc
mov
daa
testb
bswap
inc
dec
mov
xlat
leave
xchg
js
mov
adc
pop
push
push
icebp
pop
imul
push
out
cli
or
cmp
icebp
cwtl
out
add
dec
test
ret
test
mov
in
fistpll
xor
adc
jnp
fwait
pop
mov
stos
shl
mov
mov
pop
and
popf
mov
cld
or
mov
cmpb
jo
mov
stos
and
mov
jne
cli
shlb
or
and
enter
inc
xor
addl
mov
mov
test
mov
push
rcrb
sbb
imul
ffreep
sbb
bnd
push
pop
pop
pushf
xchg
mov
gs
lcall
mov
mov
push
lods
icebp
jge
sbb
dec
imul
mov
sbb
sarb
jno
cwtl
push
cmp
dec
out
ret
adc
mov
je
or
fnstsw
mov
jne
cwtl
in
cmp
loopne
mov
mov
loopne
push
stos
stos
fistpll
test
stos
and
xor
cmp
je
in
pusha
notb
cmp
jmp
fnstcw
inc
aad
adc
popf
sub
sub
mov
pop
pop
cli
mov
adc
adc
sub
sbb
sbb
xor
mov
add
add
push
insl
inc
mov
in
pusha
test
fxam
or
or
scas
in
push
leave
movsb
and
aas
insl
int3
cld
fisubl
sti
dec
les
inc
xor
cltd
xchg
sahf
out
push
jg
fidivrl
sub
mov
xor
test
orl
push
jb
xchg
sbb
test
inc
jne
leave
in
dec
xchg
push
lds
jecxz
cmp
mov
enter
in
jg
fistpll
mov
aas
cmc
jo
out
push
mov
push
add
mov
call
adc
movsl
sbb
xor
or
pop
and
jae
and
insl
pcmpeqd
data16
inc
xchg
lahf
xor
fwait
mov
je
sbb
mov
fisttpll
xchg
je
dec
or
adc
push
les
push
pop
fisttpll
pushw
or
xchg
sarl
jg
xchg
in
push
and
jno
jo
inc
les
and
push
lds
loope
jl
js
mov
add
xor
incb
cmp
fwait
jp
mov
xchg
rcll
push
push
in
stos
dec
push
cmp
push
sti
mov
repnz
pop
jnp
add
jg
xchg
arpl
pop
icebp
les
add
and
cli
inc
push
dec
fdivr
cwtl
ds
stos
and
mov
pop
jp
inc
jns
xor
rcll
xchg
pop
rorl
sti
lcall
dec
mov
aaa
rolb
cmpsb
inc
mov
andb
ja
les
mov
lds
xor
mov
stos
vmovhps
and
dec
mov
stc
mov
xor
or
adc
lcall
add
imul
add
or
mov
pop
sub
test
jno
dec
jne
push
adc
jge
and
rorb
cmp
imull
jg
enter
sub
stos
mov
fdivs
xor
pop
cmp
enter
loop
stos
pop
or
orl
inc
adc
adc
mov
frstor
add
addl
sub
stos
xchg
out
enter
mov
dec
cltd
mov
or
mov
in
std
dec
call
mov
mov
repnz
and
pop
scas
sbb
xchg
dec
adc
out
ja
mov
add
xchg
sub
xor
test
dec
jg
adc
pop
scas
pop
cmp
testb
test
stos
lock
add
jnp
xchg
xor
fcoms
pop
clc
lret
jl
movb
popf
and
mov
and
push
pop
mov
pop
cmpsb
dec
es
jp
jno
iret
cwtl
inc
stos
sti
orb
mov
pop
add
fidivrs
jno
lret
pusha
sbb
fwait
push
dec
xor
mov
shlb
jmp
jmp
sub
leave
lods
xchg
push
pop
in
movl
inc
adc
cmp
stc
fs
inc
mov
inc
add
ds
mov
cmp
or
mov
lods
adc
stos
outsb
rcr
sub
loopne
mov
shll
inc
jbe
imulb
aas
loop
cltd
fcomip
call
pop
adc
lret
or
ja
xor
mov
pop
jno
adc
movsb
sbb
and
pop
inc
sub
push
push
shll
adcb
sub
test
mov
xchg
jnp
imul
scas
mov
mov
cmpsb
mov
sub
inc
repnz
loope
std
and
ds
or
sub
fldl
cmp
push
dec
out
in
dec
fmulp
or
push
jl
jns
cmp
lods
dec
sub
icebp
les
push
ret
sarb
push
push
mov
stos
lea
xchg
loop
and
jne
push
or
cmpsl
cs
adc
fsts
push
fsubrl
lods
enter
incl
jnp
fdivp
orb
push
fistl
xchg
and
inc
hlt
ja
fs
inc
xchg
das
push
lret
in
movsb
push
sbb
fidivrl
xorb
out
jne
clc
sahf
mov
imul
dec
ret
mov
dec
cmpsb
mov
xchg
test
test
orl
pushl
lds
pop
and
inc
xor
pop
cwtl
mov
lock
orl
dec
add
jge
and
jne,pn
dec
add
shrl
pop
xor
flds
mov
xchg
sub
xchg
or
push
in
push
ds
cli
pop
lds
cld
push
sub
jnp
inc
and
xor
imul
mov
je
pusha
cmp
and
jnp
sub
xchg
insb
inc
jle
pop
cld
dec
scas
mov
stos
sub
push
or
faddl
sbb
shll
lea
fs
fs
jmp
movsb
push
inc
push
loop
repz
pusha
adc
and
jp
mov
leave
lcall
pop
enter
and
inc
ficoml
movsl
mov
sub
sbb
push
mov
xchg
pop
jmp
cmc
cmp
pop
and
aas
xchg
movsl
loop
push
loop
xor
fwait
mov
xorb
mov
scas
sub
movsl
xchg
jmp
push
lea
aad
inc
jle
jo
xchg
sahf
rcrb
roll
cwtl
lahf
cwtl
mov
pushw
fwait
lahf
notb
fists
inc
fdivs
mov
stos
sub
adc
fld
test
cmpl
or
inc
fsubr
adc
jbe
jl
mov
xlat
dec
out
jns
push
movb
and
ljmp
inc
inc
mov
stc
cmp
cmc
cmp
jne
dec
pop
xor
jne
ret
sub
mov
pop
sbb
xchg
movsl
mov
mov
mov
xlat
cmp
push
dec
and
inc
add
push
adc
ljmp
add
push
fdivp
mov
sbb
xchg
jecxz
jl
xor
xchg
mov
ffreep
movb
jle
movsl
sbb
popl
mov
dec
popa
push
and
ret
stos
lcall
test
jbe
or
aam
mov
sbb
or
mov
xchg
xchg
cs
pop
test
jecxz
imul
xchg
push
test
mov
cmp
adc
adc
out
hlt
adc
add
cmp
sti
push
mov
pop
mov
sbb
push
pop
jne
sbbl
inc
add
jne
loope
out
mov
push
aaa
inc
mov
addr16
test
jl
push
fcomps
out
nop
outsl
mov
cld
inc
pop
pushw
sbbl
repnz
mov
sbb
jo
adc
pop
js
mov
sub
test
lcall
mov
dec
or
mov
cmpsl
sarb
enter
adc
inc
imul
rcl
push
ret
insb
call
inc
scas
stos
pop
rorb
sub
pop
push
jno
dec
cmp
dec
outsl
je
push
in
ja
add
pop
bound
add
jo
mov
push
mov
scas
mov
mov
pusha
push
fsubrl
add
das
cmp
mov
js
adc
enter
xchg
imul
xor
push
std
jae
daa
in
or
and
pop
mov
nop
aas
fsubl
incl
insb
dec
fwait
pushf
mov
jmp
fmuls
fwait
sub
mov
mov
js
sub
addl
inc
or
mov
pop
inc
int
jo
aad
pop
dec
or
mov
jmp
cmp
xchg
into
dec
cmp
aam
or
adcl
lret
xchg
es
add
push
push
popf
cmc
xor
inc
jg
add
xchg
pop
dec
pop
daa
lcall
pop
nop
push
fsubrl
inc
jmp
std
xchg
ds
cltd
stos
sarb
jns
jns
mov
ret
clc
pop
or
or
and
cmp
in
lcall
in
and
out
mov
repz
xchg
cmc
push
pop
rcrl
int3
rep
push
mov
push
push
stos
cs
lods
repz
fs
addr16
pop
lret
out
add
jp
jnp
xchg
adc
or
out
and
cmp
mov
loopne
xchg
outsl
push
adc
mov
mov
out
rorb
int
inc
ss
imul
sbb
sub
dec
add
adc
lods
sti
lret
add
push
dec
das
mov
ljmp
ret
push
ret
mov
std
pop
push
pop
popl
mov
in
pop
pop
xchg
idivb
daa
or
and
sbb
pop
cmp
je
push
mov
aam
sbb
dec
and
hlt
stos
bound
ja
das
pop
adc
loop
adc
adc
fwait
std
mov
mov
scas
xor
dec
lods
inc
mov
aam
aad
call
repz
sub
cld
int
pop
add
ljmp
rclb
stos
push
ds
test
pop
sbb
mov
dec
call
cmp
push
inc
addr16
add
mov
push
mov
arpl
out
inc
xchg
es
fiaddl
adc
xchg
imull
push
rclb
test
sbb
loop
dec
dec
scas
mov
jno
mov
nop
push
popa
cltd
mov
mov
push
out
aam
fwait
mov
movsl
cwtl
pop
or
lods
rol
test
push
mov
inc
pop
es
fucomp
mov
imul
mov
and
cltd
mov
test
out
mov
or
push
adc
push
add
push
fbld
nop
sbb
idivb
stc
push
lret
mov
mov
push
js
fsubrs
adc
jp
repz
das
sbbl
leave
jmp
daa
mov
in
in
dec
das
mov
and
pop
insl
es
push
fsubrp
dec
adc
jp
lods
jno
cmp
dec
inc
add
add
test
sub
sbb
stos
xor
hlt
dec
or
jo
jg
cmp
test
mov
sbb
jnp
xchg
iret
mov
jl
sbb
xor
stos
jbe,pt
out
pop
xchg
mov
or
jmp
rol
dec
mov
test
rcrb
dec
loop
add
pop
mov
pop
bound
sbb
mov
loop
sbb
push
in
cmc
inc
jae
add
das
fcoms
or
shr
shl
cltd
rcrb
loope
shlb
bound
aaa
loope
inc
dec
in
das
adc
ljmp
rcl
sbb
adc
and
xchg
test
jle
call
test
or
pop
imul
pop
push
std
ret
mov
mov
lcall
add
sub
pop
mov
insb
testl
cld
xor
mov
movsb
mov
loop
stos
mov
ss
push
inc
lahf
push
fiadds
and
test
stos
cmp
cli
jne
hlt
cmp
or
hlt
mov
jne
and
pop
xchg
push
clc
add
or
mov
stos
idiv
dec
outsb
lahf
fs
push
clc
jb
out
fdivrl
mov
mov
inc
cmpb
jg
cwtl
inc
dec
les
iret
outsb
push
stc
mov
cmp
xor
mov
xchg
mov
shl
pop
mov
mov
lret
inc
into
pop
sbb
xchg
or
bound
mov
mov
cmp
int
adcl
stc
ja
leave
and
adc
in
add
andl
loope
imul
adc
adc
mov
inc
aaa
loopne
pop
shll
sahf
loope
mov
clc
stc
jnp
dec
xchg
xchg
test
pop
es
scas
in
dec
repz
fldl
lret
add
jne
mov
cmpsb
or
cmpsl
push
sbb
loope
shll
jbe
mov
cmp
js
es
mov
push
stc
enter
xor
add
xchg
ljmp
add
pop
xchg
stc
cmp
mov
cmp
push
inc
pop
out
inc
cmp
loop
and
sub
xchg
mov
push
sbb
xchg
or
and
mov
test
iret
les
sahf
adc
std
repz
dec
aaa
js
scas
in
ret
aas
push
xor
or
jecxz,pn
add
shlb
add
imul
loop
pushf
mov
cmc
mov
mov
xlat
mov
movsl
jne
repnz
rcrl
push
incb
adc
arpl
add
inc
xchg
xchg
xor
rorb
cltd
addb
lahf
add
fucompp
imul
ret
xor
mov
scas
push
js
add
gs
dec
push
and
add
mov
mov
addr16
dec
lahf
push
sbb
jae
aas
sbb
stos
push
inc
and
lock
out
add
ja
clc
test
js
loope
pop
jne
icebp
jbe
andb
xchg
mov
aas
sbb
inc
and
sub
push
pop
push
and
inc
pop
and
sub
sbb
idiv
jo
push
or
in
or
loope
fdivl
lds
outsl
mov
xchg
xchg
push
cld
ljmp
jg
inc
push
dec
in
fwait
dec
pop
dec
adc
mov
ljmp
addl
dec
pop
shll
stos
fisubl
ss
dec
pop
stos
jg
cmp
in
inc
shr
jg
mov
adc
push
xor
stos
adcl
sub
xchg
in
aas
push
mov
std
sbb
pop
jns
sbb
imul
std
fmull
jge
filds
aaa
sbb
test
adc
sub
daa
xchg
test
repz
xor
mov
lods
push
repnz
mov
cmpb
icebp
and
fidivs
into
push
push
ljmp
sbb
cmp
xchg
pop
push
xchg
mov
jns
mov
cmc
movsb
insl
xor
push
inc
push
add
hlt
cmp
ds
or
adc
and
sahf
std
sbb
push
jge
adc
outsl
xchg
cs
mov
call
sub
sbb
add
sbb
lock
push
push
out
mov
mov
orl
stos
pop
inc
popf
mov
cwtl
fldt
test
dec
flds
cltd
jns
outsb
jp
int
sbb
cmp
fcomps
push
test
ds
cmp
inc
lods
sbb
xchg
in
pop
call
rorl
or
lret
jmp
fiaddl
stc
sbb
push
je
add
cmpsb
sub
push
xchg
inc
dec
ljmpw
fcoms
int3
fisubrl
int3
jb
and
mov
dec
jns
dec
test
in
fcomi
jge
iret
or
test
mov
adc
sbb
fnstcw
jg
int
add
div
int3
in
or
mov
enter
lret
add
or
int
arpl
pop
dec
jg
push
pushf
out
cmc
mov
sahf
add
inc
fwait
adc
dec
cwtl
mov
cwtl
add
les
fdivrl
push
pop
into
dec
ljmp
add
adc
adc
call
or
and
pop
mov
mov
or
add
testl
mov
movsl
lret
pusha
push
fld
and
cltd
test
into
jg
mov
mov
lock
shlb
fidivrs
std
mov
jnp
sarl
fdiv
bound
jle
mov
inc
movzwl
shlb
fucomp
mov
js
push
mov
cmp
jno
xchg
or
inc
sbb
mull
adc
lods
jno
adc
pushf
in
inc
cld
mov
push
inc
dec
out
push
add
int3
push
repnz
fisubrl
shll
sar
js
cmp
in
insl
ficoml
sbb
jno
cld
clc
sub
gs
jns
in
cmp
xor
das
sbb
mov
dec
pusha
cmc
test
pop
jp
dec
data16
movsb
lods
push
inc
adc
xlat
mov
std
stos
nop
scas
aad
lock
and
xchg
and
outsb
or
insl
sbb
mov
out
cmp
pop
or
add
jg
xchg
popa
push
push
fnstenv
push
int3
andl
cmp
or
popa
loopne
rcll
push
adc
adc
subb
aaa
fucomip
lock
jns
push
into
testb
push
inc
fneni(8087
rorl
adc
std
movsb
cmp
inc
and
mov
cmpsl
mov
xchg
mov
xchg
ds
aas
mov
jno
pop
inc
xchg
pop
cmp
cmp
call
inc
mov
fnstenv
adcb
xchg
es
roll
push
js
orb
sbb
xchg
adcl
pop
flds
lahf
iret
lahf
sub
mov
std
rorb
mov
mov
arpl
fucompp
inc
xchg
xor
imul
test
je
jae
test
out
call
add
sub
or
adc
adc
mov
test
shrb
mov
pop
or
loopne
clc
xchg
mov
repz
test
leave
pop
sub
clc
jl
js
ficoms
jno
jns
mov
jns
xor
cmpsl
mov
add
aas
mov
std
jbe
push
cmp
push
pop
loopne
outsb
outsb
into
ficompl
pop
icebp
cmp
hlt
sti
outsl
mov
push
inc
cltd
jmp
cmpsb
outsb
add
fcomi
xor
mov
mov
sub
stos
jo
int3
push
aam
xor
sbb
xchg
or
and
gs
add
ss
popl
shlb
jg
xchg
push
flds
or
jno
mov
div
pop
xor
mov
pop
or
ss
clc
mov
lds
dec
and
adcl
jmp
aam
mov
mov
mov
sub
ja
push
sbb
xor
ja
mov
xchg
cwtl
push
mov
icebp
push
push
bound
fbstp
arpl
mov
cmp
in
ja
out
xor
pop
xor
test
inc
shrb
pushf
and
xor
pop
insb
dec
fnsaves
push
mov
insb
jae
inc
xor
xor
inc
cmp
jno
jp
outsl
incl
in
pop
scas
arpl
sbb
jl
cmp
leave
jmp
cmpsb
scas
gs
jp
fsubs
push
mov
adc
cltd
ja
push
dec
mov
xor
sbb
mov
dec
mov
aas
aad
pushf
jecxz
sub
inc
test
cwtl
pusha
pop
clc
pop
adc
aas
adc
out
inc
mov
jo
xchg
lahf
int3
fnstenv
jo
mov
mov
cmp
lods
mov
mov
subl
mov
imul
inc
in
sbb
into
sub
jl
sub
xor
inc
cmpb
fs
add
jl
or
mov
fisttpl
dec
mov
mov
stos
mov
stos
movsl
int3
lret
sahf
mov
enter
mov
int3
push
and
push
xchg
aas
mov
loopne
cmpb
sub
dec
mov
pop
xchg
das
daa
lcall
outsb
jbe
sbb
mov
jp
movsl
mov
adc
adc
add
adc
dec
fiaddl
xchg
pushf
and
dec
xor
sbb
xor
ja
dec
stos
or
cmp
or
cmpsl
dec
mov
pusha
xchg
dec
or
inc
mov
push
in
mov
xor
leave
cmp
movsb
jb
fs
out
sbb
shlb
in
and
add
cmp
int
lahf
mov
loopne
and
inc
adc
cmp
sub
push
stc
push
call
xor
dec
jo
icebp
pop
sub
cmp
pop
pusha
xlat
jmp
mov
je
pop
pop
out
lock
bound
cmp
xor
fsubp
fs
js
pop
mov
sahf
lahf
lock
push
lods
xor
mov
xchg
dec
addl
je
in
arpl
mov
mov
jno
cld
push
sahf
lods
xor
iret
fisubl
cmp
sub
popa
das
adc
test
fmuls
dec
pushf
fs
imul
mov
dec
pop
push
shl
pushl
repz
mov
scas
divl
xchg
test
lock
sub
aad
loop
push
adc
sub
cmpsb
lcall
scas
arpl
xor
rep
adc
inc
fdivrp
outsl
mov
loope
cmpsl
inc
sbb
aam
sub
dec
xchg
testl
inc
inc
ret
lret
les
adc
jmp
cmpsb
lret
cmp
xchg
cmp
xchg
rclb
divb
insl
dec
pushf
jo
xlat
mov
cs
mov
mov
sub
lods
sbb
mov
dec
cli
jae
gs
hlt
pop
outsb
out
mov
mov
mov
mov
mov
int3
or
repnz
xor
inc
lret
out
jecxz
frstor
mov
dec
add
add
rolb
sbb
adc
setge
sub
dec
xchg
sub
mov
sbb
gs
jo
mov
push
mov
imulb
jne
push
cmp
lods
ja
gs
data16
adc
adc
lds
mov
pushf
dec
mov
adc
sbb
jg
pop
out
xor
mov
add
and
jmp
test
movsl
or
or
cmpsl
mov
out
xchg
scas
push
loope
hlt
xchg
pop
add
loope
inc
cltd
or
push
daa
loopne
in
or
imul
outsb
xchg
push
idivl
sahf
add
push
mov
insb
dec
pop
orb
push
inc
dec
arpl
in
add
pop
lea
loopne
popa
clc
clc
cmp
js
fcmovne
inc
fdivr
es
imul
ss
lea
xor
dec
ret
mov
and
or
jbe
inc
adc
stos
xor
imul
aam
test
xchg
jge
push
mov
lods
int
shll
cmp
jmp
xchg
testl
sahf
push
adcb
aad
mov
mov
in
out
aad
mov
loopne
push
test
fadd
sub
mov
cmc
fcompl
fstl
loop
cmp
dec
pop
movsb
sar
sbb
xor
xchg
call
cmp
in
pop
or
xchg
mov
inc
and
jmp
jbe
fnsave
jnp
out
mov
fnsave
xchg
ja
jl
jg
push
fcmovnu
mov
add
addr16
mov
mov
data16
xchg
test
fldt
and
adc
cmpsl
into
pusha
arpl
jecxz
arpl
mull
xchg
aad
cmp
xchg
into
scas
pop
adc
fbstp
test
adc
test
inc
sti
mov
sub
push
sbb
je
push
mov
push
enter
imul
jae
jmp
test
adc
pop
movsl
push
pop
mov
cli
mulb
inc
xchg
fs
cs
pop
inc
and
sub
xchg
loope
cmpsb
jno
or
cmp
scas
nop
cmp
idiv
fdivrs
les
xchg
cmpsb
movsb
pop
mov
adcl
sahf
push
mov
mov
negl
inc
and
jnp
or
shll
test
filds
sub
rol
scas
mov
loop
xchg
rorb
lret
mov
push
fisubrs
jnp
std
mov
mov
add
xchg
mov
xchg
jge
cld
lock
mov
out
lcall
shll
loop
cmp
dec
push
xchg
sbb
mov
je
lea
and
cmp
aas
ljmp
movsl
cmpsb
push
cs
xchg
insb
xchg
jge
cltd
pop
ljmp
std
pop
stos
push
jmp
pop
arpl
add
test
inc
push
in
popf
mov
pop
jg
les
adc
nop
push
pop
stos
fimuls
cs
cs
addl
inc
sub
push
xchg
pop
adc
dec
adcb
dec
or
neg
lods
xor
push
leave
inc
xor
gs
mov
out
sbb
out
xor
xchg
sbb
addr16
cmp
mov
jae
shrb
into
inc
push
jl
mov
jne
add
push
stos
xchg
out
xchg
add
dec
rcl
pop
and
adc
xchg
mov
ret
out
push
sbb
add
leave
jae
and
out
insl
sbb
daa
dec
shld
out
pop
xchg
loopne
mov
mov
pop
hlt
or
ficoms
fimull
and
jnp
jl
push
mov
imul
leave
xlat
loope
mov
inc
xchg
nopl
hlt
cmp
adc
out
std
cmp
jl
pop
popa
lea
aaa
out
mov
pop
fstpl
cmp
in
sbb
jmp
xchg
push
out
jecxz
xchg
pop
in
push
dec
pop
sbb
in
or
pop
inc
shrl
mov
xchg
cmp
mov
jbe
data16
loop
xor
mov
xor
mov
pop
mov
gs
fcoml
pop
jns
pop
push
and
fidivrl
cld
xor
test
das
pop
hlt
adc
clc
jmp
popa
cltd
mov
rol
push
pop
ret
lret
cwtl
mov
xchg
and
unpckhps
inc
mov
dec
cs
imul
cmp
arpl
icebp
sub
ret
cmp
mov
dec
fnstenv
arpl
dec
mov
jecxz
roll
fstl
or
jo
xchg
adc
sub
mov
xchg
aas
push
cli
xchg
pop
mov
pop
adc
fs
repnz
fsubl
mov
fldt
ss
mov
push
push
xchg
mov
sbb
insb
mov
mov
inc
jnp
inc
std
mov
pop
int3
pop
sti
jmp
mov
mov
pop
in
jne
jge
mov
les
das
mov
inc
inc
bound
jo
xchg
enter
or
test
test
inc
mov
out
add
cltd
gs
jl
sub
push
mov
ds
mov
ds
cwtl
jo
fcompl
fdivrl
mov
cmp
dec
mov
and
push
sbb
je
rolb
mov
sahf
fdivrl
clc
inc
or
ret
mov
cmc
adc
pop
int
sub
pop
mov
inc
in
jecxz
imul
ja
lea
ja
mov
cmp
sbb
addb
pusha
xchg
fcomps
dec
sbb
in
dec
mov
adc
out
jle
lret
add
add
add
adcb
adc
ret
mov
imul
jecxz
shrl
in
inc
sbb
fnstcw
shlb
call
in
adc
in
test
push
iret
sub
rcrl
add
pusha
mov
cmp
dec
cmp
mov
and
fisubs
sti
push
adc
cmp
add
lea
subb
popf
adc
sub
arpl
xor
push
or
xor
sbb
push
and
xlat
shll
adc
rcll
sub
fsubrs
inc
outsb
mov
push
icebp
sti
inc
or
and
mov
test
pop
out
fisubrs
pop
ficompl
mov
lods
cmp
mov
imul
idivb
test
cmp
push
cmp
jge
mov
pop
mov
ss
lcall
pop
jns
jg
xor
xchg
mov
cmp
cmpsb
dec
xchg
pop
inc
xchg
popf
lods
mov
hlt
test
jp
or
test
imull
lret
psrld
xor
mov
mov
repz
into
ret
cmp
fwait
mov
scas
xchg
and
pop
imul
hlt
pop
into
test
stos
add
aas
in
cli
cmp
sub
test
shll
inc
shl
and
mov
mov
test
xchg
sbb
adc
sub
pushf
cmp
aas
jl
repnz
sub
mov
std
fcompl
movsl
sbb
xchg
fisubs
cmp
lahf
pmullw
lods
adc
cld
push
in
repnz
pop
mov
add
lret
xchg
cmp
popa
or
test
push
dec
jmp
push
addb
enter
ss
or
cmp
push
addr16
fisubs
mov
push
popf
push
jecxz
xlat
mov
mov
adc
insb
lahf
mull
pushf
add
testl
fimuls
dec
imul
mov
mov
je
jb
aam
jl
jecxz
mov
mov
pop
push
sub
add
mov
sbb
push
pop
push
mov
push
adc
xchg
ret
loop
dec
and
int3
call
or
cwtl
lret
rcl
ljmp
push
and
jmp
jns
or
sub
or
pop
lahf
fwait
add
fcomp
adc
pop
lods
out
dec
adc
rol
pop
aad
xor
sbb
pop
ret
mov
cmovl
arpl
ficomps
pushf
pop
je
push
push
mov
icebp
pop
lret
pop
cmp
in
cmp
mulb
cld
mov
insb
xor
dec
inc
mov
xor
sarl
ljmp
lret
test
mov
fidivl
push
xchg
add
push
mov
mov
adc
xchg
adc
sub
lcall
std
sti
cmp
ds
dec
sti
sti
pop
mov
sub
mov
sbb
std
xchg
fmuls
out
dec
pop
adc
sbb
ret
mov
stc
inc
mov
pushw
addr16
pop
push
jne
jle
jl
jo
mov
add
int
shlb
push
lahf
mov
movsl
rorb
sub
mov
faddl
sub
adc
adc
push
stc
jbe
jg
xchg
or
mov
mov
fidivrl
mov
test
or
push
dec
enter
gs
jg
inc
mov
jnp
push
adc
lds
fcoms
fs
push
jmp
sbb
rcll
push
leave
push
aas
push
mov
idivl
jo
int
jne
mov
fnsave
rcr
inc
mov
stos
push
pushf
dec
jmp
jl
fwait
es
jbe
pop
jmp
cmpsl
mov
dec
pop
hlt
cmp
xor
outsl
or
popf
fdiv
or
pop
mov
hlt
fcmove
movsb
mov
out
mov
xor
gs
pusha
dec
test
outsb
das
mov
pushf
leave
movsb
into
xchg
inc
mov
push
xchg
stos
out
pop
xor
call
add
fisttpll
sbb
leave
jnp
test
ss
or
cmp
xchg
pop
push
cmp
cmp
lods
jg
stc
pop
and
push
adc
daa
fnstcw
jne
push
scas
sahf
jbe
movsb
out
jge
fwait
test
mov
test
push
loop
add
ret
add
pop
mov
mov
mov
push
pop
rorl
push
or
scas
pop
negb
ss
in
loopne
iret
push
je
xchg
jne
sbb
bound
inc
dec
scas
and
jb
sti
or
addl
andl
mov
or
xchg
push
mov
pusha
popf
or
pusha
cmp
insl
popa
mov
mov
sub
pushf
in
sbb
sti
push
ds
xchg
ret
in
adc
cmpsl
aad
ret
bound
xlat
stc
int
addl
imul
mov
in
out
shll
imul
xor
aas
push
call
adc
sbb
inc
in
pusha
cmp
ss
push
xchg
xchg
addr16
scas
or
call
push
dec
subb
cmp
aas
xchg
filds
rorl
mov
test
jl
mov
jae
mov
jno
fsub
mov
dec
sbb
das
andl
mov
jbe
test
rcl
pop
push
xchg
sub
push
sbb
imul
mov
jbe
cmp
imul
testb
dec
sub
xlat
xor
jns
scas
xlat
daa
andb
stos
xor
jl
jno
mov
inc
jne
icebp
mul
ja
lret
cld
add
sbb
or
and
cmpsl
jo
cmovge
xor
adc
nop
nop
jmp
shlb
pop
cltd
or
push
out
cmpsl
les
imul
pushl
fmull
pop
inc
xchg
stos
jg
int3
data16
das
popa
stos
outsb
xchg
dec
mov
fldcw
inc
fildll
notb
mov
pop
and
or
jmp
xor
pop
aas
mov
mov
mov
sahf
xor
xchg
popa
cmp
test
mov
xchg
push
jg
mov
add
jge
sti
inc
subl
dec
add
cltd
mov
sbb
daa
pop
push
mov
jge
fcomp
imul
btr
enter
cmpl
mov
sub
je
adc
test
add
jns
xchg
and
lock
cs
pop
add
push
iret
cld
lret
push
aam
cmp
out
lahf
repnz
cmc
push
pop
push
fdivrl
jecxz
loope
mov
cmc
cltd
jmp
shlb
sbb
cmc
mov
mov
pusha
xchg
xchg
cmpsb
or
mov
mov
outsl
aad
dec
addr16
aad
and
cmpb
inc
xchg
cmp
lret
push
jbe
inc
lods
enter
dec
movsl
or
cmpsl
shll
sub
sarb
xchg
pop
xchg
stc
adc
push
xchg
inc
lock
pop
aam
jns
lret
sarb
mov
out
xor
pop
aam
inc
mov
in
lea
add
lock
sahf
add
cmpsb
aad
pop
imul
adc
shlb
test
dec
push
test
repz
pop
lods
das
repnz
imul
repnz
dec
push
add
push
lock
xor
push
mov
ja
inc
and
cli
rcll
fwait
pop
adc
lret
popa
pop
in
add
mov
sbb
inc
xor
pop
lods
cmp
shr
les
jp
jl
mov
push
inc
push
sarb
lret
ficompl
arpl
jb
in
add
enter
adc
ret
push
push
test
or
mov
outsb
or
in
jg
lcall
pushf
jnp
jmp
scas
pusha
mov
mov
inc
mov
cmp
daa
fisubrl
adc
stos
xor
scas
stos
pop
jg
inc
ret
ficoms
mov
sti
mov
repz
mov
test
enter
sub
jnp
and
daa
cmp
lea
xor
lods
and
pop
fdivrs
mov
add
int
jae
cmpsb
cli
push
rcrb
pop
push
js
test
mov
add
inc
fidivrl
cmp
pusha
or
shl
out
inc
mov
rorl
fs
lcall
add
fisubrl
sbb
mov
mov
outsl
dec
dec
insl
sbb
rorl
jns
cltd
std
xchg
sbb
fst
xchg
mov
ss
shrl
xchg
das
cmp
pop
lock
fldcw
sti
daa
add
and
xchg
xor
pop
mov
fdivl
fldl
mov
jb
dec
mov
xlat
mov
push
cli
cmpsl
lahf
adc
nopl
ljmp
jle
fsubrp
xchg
xor
je
jmp
push
sbb
push
nop
jne
andb
add
mov
das
test
mov
loope
push
inc
shrl
stos
lock
mov
push
stos
aas
enter
imul
enter
sarb
aaa
cmp
fldl
inc
imul
stos
adc
inc
stos
push
mov
sub
call
mov
cmp
add
mov
mov
pop
jl
sub
es
stos
pop
sbb
xor
cli
xor
inc
cmove
mull
inc
jno
mov
test
sar
push
jb
sub
mov
cmpsb
adc
mov
ret
inc
jae
dec
insb
loop
stc
xchg
sbb
mov
ljmp
inc
xchg
das
arpl
cmpsl
inc
xchg
mov
loop
mov
lods
popf
jp
mov
loopne
mov
xor
mov
jae
jnp
mov
jne
out
lret
in
mov
idivb
popf
addr16
sbb
add
sub
fsubp
xchg
jl
pusha
aaa
or
lods
inc
push
out
movsl
hlt
hlt
dec
mov
push
xlat
adc
je
jmp
mov
xlat
push
scas
cli
lret
jmp
adc
lock
sub
mov
ljmp
inc
or
clc
push
sbb
in
lods
pop
je
data16
jg
sti
sarb
ja
mov
push
mov
or
mov
loope
adc
add
mov
into
and
mov
imul
stc
adc
aam
iret
fs
cmp
scas
in
dec
sahf
xchg
mov
add
pusha
out
mov
stos
lret
gs
pop
movsb
mov
lods
arpl
aaa
adc
cmp
pop
jne
cmp
aaa
pop
inc
mov
cld
or
push
sbb
xchg
xor
push
xor
cwtl
xor
repz
out
sub
mov
sub
adc
mov
dec
mov
in
and
jno
cli
movswl
fwait
mov
insl
fstpl
inc
xchg
adc
or
xor
out
adcb
jno
adc
adc
mov
dec
clc
jle
pop
xor
or
xor
inc
push
sbb
je
xor
xor
mov
subl
out
lds
xchg
xchg
mov
jbe
dec
imul
repnz
mov
mov
push
cmp
test
pop
call
push
pop
xchg
adc
out
inc
loope
ficompl
mov
cmpl
movsl
sub
fldcw
vphaddubd
inc
push
or
jl
stc
addr16
aam
arpl
clc
mov
jb
push
push
jg
iret
ja
bswap
fisttpll
push
out
enter
movsb
dec
pop
xor
ja
add
mov
lods
outsb
jge
sbbb
pop
ljmp
sbb
jo
pusha
lahf
mov
hlt
jp
xchg
push
ror
sub
pop
insl
shll
pop
push
lea
testl
inc
sbb
push
sbb
dec
inc
iret
addr16
lods
jb
int3
lahf
lods
add
sbb
jns
das
pmulhuw
push
mov
adc
xchg
inc
lods
or
loop
in
push
pop
inc
sub
jb
adc
aad
mov
pop
push
sub
adc
call
xor
or
sbb
pop
aam
add
fadd
mov
nop
fcomp
jb
jp
lods
ficoml
daa
adc
jo
adc
and
insb
je
icebp
xor
jns
jl
shrl
out
cld
dec
mov
jge
lret
push
pop
add
es
mov
ljmp
enter
aad
fstp
negl
mov
mov
pop
jp
and
dec
pop
jns
js
daa
divb
in
pop
xor
popa
mov
sub
mov
adc
xchg
call
test
mov
mov
fists
or
test
int
cmp
mov
add
inc
jl
mov
xchg
insb
jns
or
das
arpl
cmp
fsubr
cmc
push
enter
popf
aam
imul
xchg
mov
sub
pop
fndisi(8087
mov
and
in
adc
inc
outsb
sbb
push
jne
mov
fstpl
inc
jns
into
pop
mov
push
pop
push
cmp
mov
sub
xor
vandps
jo
aas
sbbb
push
in
cmp
sub
mov
jmp
pop
xor
xor
jne
repnz
or
adc
inc
mov
xor
aad
jbe
shlb
add
pop
dec
aad
sahf
incb
mov
mov
cmc
lods
pop
int3
repz
push
lcall
add
mov
outsb
insb
lods
or
sub
pop
int3
xorb
and
out
rclb
aad
xchg
adcl
adc
adc
mov
xor
and
in
fsubs
mov
dec
ror
std
dec
jo
jmp
mov
jae
cmp
pusha
testl
sbb
pop
push
cmp
lods
and
xchg
insb
dec
into
or
adc
enter
push
push
jl
cmp
cltd
fcmovnu
mov
or
aam
out
add
pop
mov
xchg
out
lods
pop
mov
or
and
test
bound
lds
icebp
dec
lods
or
addb
data16
sbb
dec
xor
aaa
movsb
jns
shr
jl
cmpsl
xchg
dec
xchg
or
jbe
cmp
push
shld
sbb
ficoms
mov
and
or
movl
lods
mov
pop
adc
push
mov
jmp
jecxz
les
iret
testl
push
ret
filds
pop
sub
mov
sti
mov
shll
insl
push
xchg
dec
loope
xor
cmp
pop
pop
mov
sti
ljmp
pop
loope
jno
inc
imul
test
and
add
pop
cmp
test
lods
aad
es
loop
hlt
push
mov
xchg
scas
and
add
push
rorb
rcll
jg
xor
out
sbbb
test
mov
insb
insl
cs
and
std
mov
xlat
lods
outsb
mov
pop
loop
mov
sti
mov
adc
aas
mov
mov
lds
cmp
sub
mov
aaa
add
das
cltd
push
xchg
imul
nop
or
pop
negl
fnsave
testb
mov
push
jge
movsb
sahf
fldenv
xlat
notb
subl
xor
mov
jbe
jnp
aas
rclb
cmp
and
stos
sarb
and
mov
and
xchg
pop
push
loope
scas
add
push
jl
enter
cmp
push
call
test
mov
jle
nop
pop
xchg
or
icebp
jo
mov
in
and
and
out
mov
movsl
aad
push
popa
cmp
pop
inc
pop
movsl
xchg
mov
insl
xlat
mov
out
int3
faddl
mov
xor
lods
test
mov
out
sarl
ret
xchg
cmpl
lcall
scas
testl
ret
and
push
icebp
sbb
sahf
out
inc
out
xor
int
mov
pop
mov
pop
add
sub
imul
iret
dec
pop
test
pusha
fsubrs
pusha
inc
shlb
xchg
jge
jmp
inc
pop
push
into
adc
mov
cltd
stc
push
xor
jmp
fs
movsl
cwtl
push
push
pop
leave
mov
pusha
stos
aas
mov
pop
jmp
sti
in
ret
sbb
std
xor
pop
xor
out
cbtw
mov
jmp
dec
jae
aam
shll
stos
pop
aad
jae
int3
mov
mov
mov
dec
dec
xor
adc
mov
movsb
cs
les
aad
rcr
aas
inc
jmp
sbb
pop
sbb
inc
ss
or
cmp
mov
rcr
mov
mov
repz
jne
in
push
xchg
scas
push
fldcw
xchg
mov
iret
mov
out
fs
sub
mov
mov
and
add
scas
and
mov
sahf
adc
or
cld
xchg
jno
sub
insb
idiv
sub
arpl
and
test
xchg
jmp
outsl
sub
dec
lea
push
test
mov
loopne
cmp
loopne
jnp
cmp
aad
in
push
xor
popa
and
sub
push
insl
xchg
imul
jbe
in
orl
xor
mov
sarl
or
clc
imul
pop
fsubrl
movsb
xor
or
js
daa
cmp
mov
insb
leavew
push
mov
dec
pusha
test
add
scas
adcb
into
stos
movsl
sbb
mov
sbb
push
rolb
movsb
rorl
cmpsb
ja
test
adc
jbe,pn
sub
push
pmaddwd
scas
add
outsl
dec
pop
sub
aas
cld
inc
mov
xchg
jne
sahf
jo
adc
and
int
xor
insl
jbe
mov
push
mov
inc
mov
jae
cmp
mov
sub
jne
xor
cmpsb
negb
std
enter
pop
sub
gs
push
or
in
push
subb
adc
stc
stos
and
push
imul
in
mov
dec
movsl
out
popf
pop
push
mov
mov
push
loopne
or
mov
adc
in
shl
pushf
lahf
mov
loope
xchg
pop
xor
xchg
cmpsl
gs
mov
pop
push
jne,pt
nop
mov
negb
mov
xchg
dec
lock
shlb
xchg
sbb
xchg
mov
cmp
es
sub
or
pop
ja
out
cmpsb
hlt
sub
mov
sub
dec
cld
sub
dec
mov
dec
jmp
mov
jnp
aad
loope
xchg
mov
add
cmp
sti
inc
push
mov
pushf
cli
pop
ret
sti
lahf
sarl
cmpsb
lods
adc
xor
xor
xchg
adc
cmp
inc
and
idivb
icebp
and
xor
dec
pop
mov
jb
imul
fistl
mov
icebp
sbb
xchg
fists
sbb
mov
sysexit
addr16
add
fwait
andl
adc
enter
sbb
xor
jge
je
rcl
ljmp
adc
xor
mov
addl
or
inc
push
push
sub
outsb
js
int
inc
and
cmp
imul
iret
enter
lds
push
out
jne
rcrl
stos
aas
pop
sub
fiadds
bnd
cs
and
pop
stos
mov
push
add
inc
out
cmpsl
call
pop
dec
xchg
leave
push
hlt
mov
inc
xchg
push
lret
sub
lahf
xor
test
xor
into
dec
iret
hlt
dec
mov
mov
sub
lds
popa
lret
pop
mov
push
xchg
call
in
nop
aaa
aas
pop
inc
insb
sbb
jnp
pop
mov
dec
daa
inc
outsb
adc
push
xchg
lods
sbb
adc
sub
lods
push
jne
lret
lock
cmp
aam
shll
int
add
cmpsb
hlt
cli
stc
fists
insl
rcrb
mov
fldenv
test
aad
mov
dec
jle
fcmovu
pop
je
jp
sub
xchg
outsb
xor
pusha
dec
mov
mov
repz
lcall
push
push
adc
sbb
xchg
mov
cmp
xchg
pop
push
pushf
es
jbe
jne
inc
cli
mov
shr
adc
cwtl
or
stos
dec
or
into
in
imul
shll
dec
gs
fcmovnb
xchg
push
inc
sbb
jl
addr16
dec
lds
dec
js
pop
icebp
pop
das
ljmp
add
out
sub
mov
mov
sub
in
test
scas
repnz
clc
inc
jp
lods
sahf
pop
sub
dec
xor
jmp
shlb
sub
jnp
pusha
mov
andl
ds
lods
xchg
sti
sub
cli
outsb
push
adc
mov
lods
add
inc
aad
xor
mov
pop
insb
cli
xchg
cmp
repz
sti
in
negb
xchg
jecxz
mov
adc
sub
mov
in
dec
loopne
neg
jecxz
sbb
or
fidivrl
mov
jmp
cmc
stos
addr16
jge
xor
jne
lcall
lods
mov
adc
mov
rol
repz
leave
stos
xchg
sbb
insb
cld
repz
push
ja
scas
out
cmp
mov
sbb
xor
pop
in
bound
ds
ficomps
test
in
cmp
out
push
mov
popf
fcmovbe
pop
xor
stos
mov
jbe
sub
cmp
cmpsl
sub
xlat
adc
jne
lea
stos
lods
mov
pusha
movsb
fwait
cltd
dec
imul
es
cltd
push
adc
loop
push
cmp
push
mov
mov
fstl
adc
sub
and
inc
inc
cmpsb
ja
repz
push
std
mov
roll
lret
out
aam
xor
pop
scas
push
cmp
adc
ret
sbb
sbb
aam
lahf
pop
daa
sub
mov
mov
lret
or
cmpsl
repnz
into
inc
mov
pop
into
dec
mov
arpl
cltd
cld
adcb
mov
das
je
lahf
in
cld
popa
mov
inc
inc
fucom
rorl
add
int3
xchg
pusha
sbb
test
sub
repz
fisubrs
sub
mov
loopne
cmovb
mov
pop
out
stc
pop
mov
push
pushf
and
jnp
mov
mov
jnp
repz
in
loop
mov
adc
in
mov
mov
push
imull
mov
pop
fildll
fcmovbe
and
mov
push
ficompl
dec
sarl
mov
sub
fwait
mov
adc
clc
xor
sbb
dec
xchg
sbb
nop
dec
xchg
aas
dec
es
inc
shl
aas
fsubrs
hlt
out
fists
lahf
mov
outsb
xchg
push
mov
rcll
and
mov
adcb
das
inc
rcl
jp
add
push
mov
rorb
outsb
xchg
mov
clc
movsb
xchg
and
and
into
inc
cmc
lret
xchg
bound
stos
sub
test
mov
pop
mov
jae
js
inc
add
jp
pop
xor
sub
push
addr16
mov
xor
cltd
bound
outsb
lods
roll
mov
or
sbb
ss
loopne
ljmp
loope
cmpl
adc
xchg
lret
xchg
addb
push
sub
jo
lret
sahf
lods
data16
pop
das
out
jo
mov
add
imul
xchg
and
push
nop
sub
pop
push
pop
cltd
dec
out
cs
jl
xchg
lods
add
loope
mov
mov
add
ror
pop
jg
xor
mov
clc
test
xchg
out
fidivs
xorl
adc
cmp
jbe
push
xchg
jle
mov
xchg
or
push
xchg
arpl
lret
test
inc
rol
inc
adc
loope
jne
cmpsb
rcl
mov
jne
inc
fisubl
mov
and
xor
sbb
fisubrs
pop
xchg
faddl
sub
xor
mov
mov
rcr
mov
pop
imul
jo
fsubrl
sbb
adc
push
pop
or
and
fsts
ss
test
pop
into
pop
xchg
call
mov
out
popa
jno
into
mov
mov
adc
imul
dec
scas
out
imul
jbe
lds
lock
cltd
sahf
add
ljmp
dec
dec
xor
jbe
xchg
test
xor
adc
cmp
mov
jle
pushl
das
xchg
adc
imul
jb
hlt
adcl
push
push
enter
add
inc
jg
imul
pop
hlt
fwait
bound
les
loop
fdivrl
in
jbe
movb
shll
int3
sbb
add
aaa
and
popf
adc
ss
mov
das
mov
inc
fiadds
mov
test
inc
fsubl
xchg
out
mov
adc
test
xorb
lahf
pop
mov
mov
sarl
loopne
cltd
sub
pop
lea
pop
push
cli
out
xor
and
adc
pushf
pop
mov
sbb
mov
sbb
jb
aam
xor
xor
jae
mov
outsl
aad
outsb
xchg
das
pop
out
in
movsl
or
addr16
hlt
fs
mov
out
mov
or
xor
push
xor
fsubl
inc
pop
call
cli
mov
scas
mov
cld
fisubs
aas
mov
jecxz
stos
xchg
outsb
scas
mov
xchg
cmp
call
cld
sub
ja
adc
int
int3
je
cmpsb
fwait
inc
in
mov
jecxz
inc
xor
adc
data16
adc
or
sahf
cld
ss
loope
cmp
inc
lods
xchg
xor
inc
arpl
cmpsl
mov
mov
aad
fdivp
daa
int3
add
pop
test
bound
push
daa
sbb
sbb
dec
pop
xchg
push
arpl
sbb
mov
insb
in
cmpsb
rclb
enter
mov
pop
adc
mov
out
or
push
pop
mov
xlat
xlat
lea
out
shlb
pop
jnp
and
addr16
sbbb
push
insl
mov
xchg
cmp
adc
mov
add
test
or
jns
ljmp
pop
fldenv
xor
or
ja
mov
ss
outsb
pop
scas
outsb
icebp
mov
sub
mov
add
and
fwait
pop
test
mov
orb
cmp
xchg
sar
pop
cmp
or
jecxz
mov
xchg
stos
push
int
jb
sub
mov
adc
adc
mov
cwtl
loope
push
inc
pop
inc
out
push
cmp
jge
adc
js
dec
jo
outsb
jmp
mov
cmp
sub
mov
in
data16
fisttpll
shr
jnp
mov
mov
data16
nop
les
arpl
sti
jno
in
mov
out
mov
loop
xor
and
daa
sbb
leave
xor
sbb
mov
push
sub
aam
shrb
fildll
gs
ljmp
jge
pop
popa
les
in
mov
or
xchg
cld
mov
sbb
fistl
arpl
xor
xchg
es
cmp
call
jl
fildl
pop
stc
inc
add
scas
out
push
xchg
dec
shrl
aaa
mov
jl
lcall
jmp
shl
add
or
insl
jns
sub
imul
sbb
in
mov
xlat
icebp
cmp
mov
out
mov
mov
dec
sbb
jns
lock
sbb
and
lock
and
inc
add
mov
xchg
leave
jg
nop
pop
jns
out
loopne
sub
mov
insb
lret
cwtl
fcoms
filds
out
mov
stos
and
shrl
xor
iret
enter
lods
ss
scas
in
test
push
mov
lea
push
idivl
movsb
in
aaa
cwtl
adcb
inc
jbe
mov
push
fwait
sahf
mov
sti
or
je
xchg
sub
mov
stc
pop
or
mov
in
popa
xchg
cli
mov
in
xchg
stos
lcall
fmulp
sbbl
pop
push
push
subl
mov
inc
push
repz
bound
stos
jne
cmp
bound
pop
repz
test
cmp
call
stos
mov
mov
in
or
mov
dec
mov
test
push
sbb
sub
add
mov
sub
out
lea
fs
loop
lea
lods
hlt
mov
in
syscall
mov
push
xor
sub
icebp
sub
pop
sti
negl
xlat
xchg
push
scas
mov
push
push
push
xlat
cmp
xlat
push
jg
xchg
and
or
xor
cmp
pop
cltd
mov
sub
mov
das
fsubs
lret
inc
xor
cltd
sarl
ljmp
mul
into
mov
sub
inc
dec
inc
mov
cltd
xor
cld
lods
dec
xchg
lret
rol
pop
inc
scas
fstps
adc
pop
jno
or
mov
sub
imul
mov
sub
popf
stos
rorl
push
jnp
sbb
sub
imull
mov
pop
daa
pop
bnd
push
fnstsw
aas
add
int
cltd
inc
sub
jmp
jae
data16
mov
mov
ds
sbb
in
ljmp
stos
cwtl
dec
loopne
rorb
scas
sahf
stos
pop
push
push
sub
fwait
jmp
lret
adc
in
scas
jne
ret
or
ja
adc
push
adc
ja
dec
jecxz
into
mov
aam
scas
std
push
add
jo
sti
jmp
jo
adc
inc
or
aas
jnp
cmp
cmp
gs
out
movsl
mov
mov
into
pop
jb
add
cmc
push
dec
data16
and
shlb
push
das
data16
loopne
aad
shrb
loopne
call
mov
inc
in
stos
mov
push
inc
mov
cmp
or
cmp
cli
js
pop
inc
into
daa
jns
add
aas
aaa
in
xchg
loopne
out
cs
pop
push
mov
add
ljmp
jmp
pop
xor
movsb
adc
pop
nop
outsl
and
hlt
mov
jl
cmp
push
xchg
and
sti
ret
addr16
cmp
jg
fwait
out
repnz
mov
les
or
comiss
cmpsb
std
insl
push
repz
lret
pop
cmp
mov
fs
inc
jmp
lods
in
cwtl
push
jo
and
pushf
jl
and
cld
and
pushf
jle
mov
lea
adc
pop
and
leave
dec
adc
sub
ja
xlat
dec
push
popa
add
mov
mov
cld
xchg
jnp
push
fmuls
cli
rolb
jae
and
mov
sbb
jmp
aas
mov
sbb
lahf
test
or
stos
ja
and
xor
stos
sbbb
cmp
jbe
push
repnz
arpl
not
test
push
push
mov
jb
jl
loopne
xor
fidivrs
dec
pop
popf
xchg
adc
add
aaa
pop
push
out
outsl
xchg
dec
mov
push
ror
pop
and
jle
push
jbe
xchg
and
sub
jo
pop
pushf
mov
and
clc
cs
bound
jmp
adc
mov
in
pop
int
fisttpll
popa
adcb
or
in
mov
stos
gs
mov
shl
jbe
cmp
xlat
cmp
ljmp
pushf
pop
ljmp
andl
scas
sbb
imul
cmp
and
nop
cmpsb
dec
fs
sub
in
ds
fdivrs
xchg
xchg
xchg
jb
push
and
das
lcall
xchg
add
sub
loope
fwait
popa
ja
rcrb
les
imul
push
xchg
sub
dec
hlt
and
daa
cltd
xor
or
aas
pop
push
jl
rcrl
fwait
stos
enter
fsubl
test
shr
mov
sbb
pop
popa
hlt
test
pushf
fiadds
xchg
int
pop
sbb
lods
test
lcall
dec
rorb
jne
lcall
xchg
enter
jb
xor
jmp
jno
or
popf
std
xchg
mov
cwtl
pop
mov
xchg
imul
in
mov
mov
push
ss
ret
cmp
xchg
les
dec
int3
pop
int
mov
xchg
sbb
pop
fadd
mov
pusha
or
sub
add
int3
sbb
mov
repnz
sbb
sub
cmpsb
inc
enter
lret
lret
gs
pop
ret
push
adc
jnp
inc
xchg
sbb
jp
xchg
push
cmp
rcll
or
rcr
xlat
int3
lea
jno
inc
lret
cmp
repz
sbb
cs
shrb
ljmp
mov
jno
ficomps
mov
and
xchg
popa
pop
rclb
stc
pop
movsl
push
jg
dec
clc
call
sbb
mov
out
imul
pop
mov
into
inc
and
addl
inc
xchg
mov
push
mov
scas
jmp
jp
mov
repnz
frstor
pop
mov
rcll
cmp
test
cwtl
push
push
push
mov
outsl
sbb
sbb
test
int3
fildl
pop
xor
adc
scas
dec
iret
daa
shrl
icebp
in
mov
mov
sub
push
mov
or
lea
sbb
lock
iret
shll
scas
add
movl
mov
mov
bound
movb
in
jnp
jb
test
loopne
jecxz
xchg
dec
xlat
mov
mov
xchg
loop
pop
cld
stc
or
adc
scas
push
mov
outsb
out
insl
push
inc
mov
xor
in
stos
in
frstor
xchg
push
imul
fists
mov
mov
das
dec
push
in
popa
jns
mov
sbb
out
mov
inc
dec
inc
mulb
dec
adc
dec
fdiv
mov
fs
stos
dec
lret
inc
bound
ljmp
sub
dec
xchg
iret
dec
movsl
push
outsb
mov
mov
mov
in
jle
add
xchg
jge
imul
cli
mov
and
std
sub
ss
aam
mov
xchg
flds
sbb
inc
jle
sbb
cmp
cmpsl
sub
mov
test
jg
and
cmpsb
add
or
int
outsb
and
loop
push
and
in
push
xchg
mov
dec
dec
or
sbb
scas
xchg
xor
shll
adc
or
lods
out
imul
cmpsl
imul
scas
adc
pop
popa
addr16
nop
outsl
fdivrl
mov
mov
stos
in
xorl
push
add
testl
and
push
lahf
sahf
cmp
push
push
inc
aas
cmp
add
in
push
shlb
adc
sahf
pop
cwtl
out
test
iret
in
test
cwtl
push
jbe
andb
jno
pop
test
mov
mov
add
loop
or
xchg
negb
je
sbb
mov
jb
push
cmp
cmc
cmp
inc
loope
xbegin
push
adc
and
test
jne
lcall
fbstp
dec
mov
out
xchg
hlt
test
inc
aad
add
es
xor
sbb
es
inc
leave
test
xor
adc
cmp
pop
xor
or
icebp
outsl
xchg
repnz
inc
mov
mov
fwait
add
sbb
loop
fnsave
cmp
dec
dec
mov
and
stc
or
jns
add
jge
rcr
ja
notb
jb
rcll
sbb
fsubl
addr16
dec
fs
mov
push
push
shll
in
lods
push
call
jae
adc
mov
data16
xor
jnp
xchg
mov
pusha
or
in
cwtl
adc
dec
inc
cmc
jo
cld
loop
adc
mov
xchg
push
push
adc
js
out
fstps
mov
int
or
lods
cltd
shlb
sbb
mov
or
add
test
test
enter
jle
push
jmp
sub
xchg
pop
or
scas
adcl
add
sub
jo
lods
test
mov
sub
inc
add
add
push
fdivrp
adc
inc
push
xchg
mov
dec
ss
das
nop
pop
jb
mov
je
rcll
lods
mov
mov
stos
lods
sahf
test
push
imul
mov
std
je
gs
ja
shr
jmp
jnp
push
cmp
fistpl
mov
or
lcall
mov
in
push
sub
push
mov
stc
popf
cli
jns
sbb
mov
idivb
loopne
push
orl
test
mov
or
dec
xor
sti
outsb
mov
sub
sbb
stos
ljmp
aaa
push
notl
pop
adc
jo
je
stos
enter
enter
jae
sahf
add
std
mov
xor
outsb
push
mov
xchg
xchg
divb
or
push
push
mov
cli
int
test
add
stos
sub
cltd
jmp
mov
ret
and
lea
jnp
jns
mov
enter
lods
fmuls
jl
mov
add
inc
and
mov
cs
lea
dec
sub
or
addr16
jnp
mov
fcoms
mov
sub
lods
adc
in
xchg
mov
mov
je
pushl
cwtl
pop
pop
push
sbb
ss
leave
mov
pop
ss
sbb
adc
push
pop
or
fiaddl
mov
loopne
push
xchg
cs
jb
push
or
addr16
shlb
scas
push
add
jo
aam
sbb
xor
xor
add
nop
stc
data16
add
call
loopne
insb
push
or
push
mov
rcr
xor
aas
andl
mov
fdivrp
adc
pop
mov
pop
cmpsl
mov
xchg
lret
movsl
sub
jbe
mov
push
xor
push
jnp
jo
inc
and
fdivl
dec
jno
addb
decl
test
mov
add
out
sbbl
push
add
fldcw
mov
mov
pop
fwait
clc
mov
shll
pop
xlat
pop
xor
pop
lcall
mov
jb
add
adc
dec
mov
pop
jl
dec
xor
jo
push
dec
ljmp
or
push
into
sub
imulb
repz
mov
lea
or
mov
adc
arpl
push
xor
push
mov
int3
repz
into
inc
add
js
mov
loop
jnp
cwtl
insb
cmp
inc
neg
mov
pop
lret
mov
ficoml
xchg
pop
sarl
xor
in
jg
sarb
adc
lcall
mov
dec
sti
xor
push
lds
xchg
mov
pop
adc
cmpb
or
or
pop
inc
mov
and
mov
sbb
aad
mov
dec
pop
xor
cmp
add
out
pop
iret
or
jbe
mov
movsl
mov
dec
inc
call
or
jg
fistl
movsb
push
push
repnz
popf
pop
and
out
cli
int3
setbe
leave
rorl
fs
loop,pt
hlt
in
xchg
idiv
or
icebp
dec
popf
push
cmp
movsl
fs
jns
pop
fimull
sub
aaa
mov
push
gs
cs
xchg
outsl
es
js
and
mov
jae
movsb
mov
sub
incl
inc
jnp
inc
ret
mov
js
jmp
sub
enter
pop
jmp
and
movsb
pop
jns
into
xchg
xor
aaa
sbb
mov
subl
inc
and
inc
hlt
xorb
xchg
mov
add
outsl
sarl
dec
jmp
ljmp
aas
movsl
mov
lret
push
cs
cmp
into
mov
sbb
mov
mov
fdivrp
jp
mov
mov
cli
push
push
aas
rcl
push
adc
dec
fsubl
pop
shll
and
cmp
mov
or
in
pushf
inc
mov
rolb
jl
shll
add
dec
out
negb
mov
or
xchg
mov
lds
xchg
aas
enter
test
outsl
mov
xchg
jbe
sub
cmp
ret
xchg
xor
fdivs
pushf
dec
sbb
xchg
push
fsubl
and
or
in
rolb
sub
jl
ret
pop
cmc
sub
sti
xchg
lret
mov
cs
leave
fiaddl
push
out
xorl
lahf
jmp
std
cmp
lahf
push
lods
and
dec
ret
mov
insl
dec
dec
dec
inc
jl
int
into
cmp
pop
mov
lea
pop
and
sub
int3
mov
arpl
out
mov
sbb
xchg
inc
mov
xchg
sbb
inc
or
pop
dec
stos
cld
cmc
arpl
pop
cmpsb
test
jge
sub
xchg
xchg
mov
aad
testb
cltd
inc
push
mov
out
cmp
loopne
xchg
inc
pop
ret
and
cmpsb
popa
in
sub
xor
mov
dec
into
fistpll
loopne
mov
jns
xchg
sub
push
dec
stos
pop
adc
and
sbb
js
sahf
pop
push
mov
xchg
mov
pop
out
xchg
add
inc
adc
movl
das
shrl
cmpsl
gs
xrelease
mov
shlb
sub
xchg
pop
sbb
pop
das
push
imul
jge
mov
adc
fwait
jecxz
cli
and
addb
mov
cmp
shlb
mov
pop
lahf
loopne
cli
mov
mov
out
dec
sarb
mov
push
adc
sbbb
push
fildl
mov
xchg
mov
pop
mov
jo
inc
daa
mov
repz
sub
mov
and
pusha
aaa
test
js
lock
outsl
gs
sbb
dec
add
xchg
bound
fiaddl
mov
pop
inc
push
and
clc
xchg
jmp
fistpl
ret
mov
mov
or
mov
rcll
or
out
fwait
sub
inc
cmp
test
pop
cmp
xchg
sti
mov
add
xorb
test
mov
cmp
mov
pop
in
adc
jns
dec
mulb
in
clc
fistps
cmp
push
fwait
push
stos
fs
adc
aaa
jnp
jecxz
and
scas
mov
or
imul
jae
aad
and
subl
jl
test
sbb
iret
in
and
cld
lds
movsb
pop
stos
jge
mov
sbb
push
mov
sbb
pop
cmp
dec
jecxz
leave
mov
pop
jbe
push
jmp
repz
add
mov
repz
lock
inc
xchg
fadd
scas
fcmove
jl
nop
fildl
dec
fs
data16
jmp
outsl
hlt
push
and
cmpl
cmp
aam
cmp
fimull
push
mov
lret
mov
cwtl
subl
inc
push
push
cld
mov
sbb
sub
cmpsb
jp
push
adc
dec
movsl
and
mov
mov
cld
aaa
push
mov
mov
mov
adc
push
imul
idiv
inc
and
testb
into
mov
push
test
iret
and
xchg
test
push
ret
xchg
out
test
mov
or
jg
rorl
jo
test
repnz
test
bound
pushf
xlat
sub
in
loop
aam
jb
add
pop
rcrb
cwtl
rcll
js
outsb
sti
jae
dec
in
je
mov
sbb
mov
lods
call
cmp
fstp
or
lds
push
stos
mov
pop
popf
fsubp
dec
in
outsb
sub
pop
mov
ljmp
iret
mov
insl
loopne
pop
hlt
pop
jae
jmp
xor
add
dec
das
in
xchg
xor
sbb
jne
iret
imul
jae
inc
pop
hlt
cli
pop
loopne
jmp
ja
pop
inc
movsl
enter
in
sub
sbb
mov
xlat
es
fs
movsl
xchg
mov
sti
stos
jle
inc
sbb
jmp
movsb
test
ja
lea
or
xor
gs
xchg
sti
das
adc
repnz
adc
sbb
data16
jne
arpl
adc
fwait
int
popa
mov
rorl
cmp
lret
insl
aad
inc
add
push
out
ficompl
sahf
and
pop
fldenv
fstl
mov
imul
out
cld
daa
fdivrl
xchg
rcll
lods
add
xchg
sub
ja
lock
push
aad
rcll
lret
adc
rcl
pop
mov
orb
gs
mov
xor
repz
or
xchg
bound
adc
insl
mov
insl
push
in
cmp
mov
ret
xor
push
jmp
enter
out
insl
or
mov
sub
sub
pop
scas
push
jl
popa
cmc
xor
dec
push
sub
xor
test
adc
xchg
loopne
out
adcl
out
repnz
rorl
mov
jns
shr
in
sub
xchg
dec
lea
mov
enter
and
je
mov
sbb
cwtl
sub
pop
mov
ja
lea
insb
rcrl
repnz
cwtl
push
in
jno
xchg
sti
loopne
sub
mov
js
mov
sub
pop
outsb
xchg
cmc
sub
cli
jg
pop
sbb
xorb
inc
adcb
cmc
fs
adc
stc
leave
cld
js
cmc
dec
mov
sar
and
xor
jecxz
into
loope
push
bound
lods
sub
and
es
sbb
sbb
sbb
cli
cmp
popa
jo
movsb
inc
pop
jmp
lret
orl
out
test
enter
xorb
pop
mov
xchg
ja
shrl
add
mov
std
push
xor
inc
pop
scas
cmp
out
cmpsb
ja
pop
mov
lods
mov
xchg
mov
imul
int
ror
jecxz
aam
outsl
lahf
mov
inc
shlb
cmc
pop
mov
and
in
cmp
mov
fwait
shlb
sbb
mov
and
inc
and
pusha
xor
test
xor
xchg
xor
cmp
jecxz
pop
xchg
jbe
out
imul
stc
enter
mov
xor
daa
pop
add
call
fcmovu
int
pop
pop
adc
push
ljmp
ret
dec
insl
inc
stc
push
xor
popa
and
adc
sbb
cwtl
out
cs
pop
fcoml
dec
adc
lods
push
shrl
imul
sub
pushl
je
mov
enter
and
loope
jmp
xchg
addr16
das
pop
xchg
adc
sub
jne
ret
xchg
fwait
push
jmp
jl
sbb
xlat
mov
dec
mov
push
jl
add
test
js
rcll
mov
jg
in
push
loop
fistps
push
andl
ds
jg
call
mov
imul
inc
es
adc
outsb
fisubrl
enter
jns
xchg
test
jle
mov
movsb
jecxz
movb
aam
repz
jae
ficoms
push
cmpsl
test
scas
mov
js
pop
push
mov
push
daa
ss
mov
iret
pop
jnp
pop
inc
aaa
adc
inc
xor
ljmp
gs
imul
mov
xchg
mov
add
sbb
xchg
sarb
ds
mov
cmp
adc
pop
jp
push
sub
jp
cmpsb
mov
sbb
mov
js
lds
popa
lahf
pop
rcrl
in
sbb
lock
sbb
in
cmc
popf
popf
sub
scas
adc
sub
imul
ja
push
cmc
mov
jp
mov
cld
fs
lods
sbb
push
in
shl
out
in
shr
movaps
sbb
outsb
lahf
js
mov
mov
sub
xor
decb
xchg
in
cltd
mov
rolb
cmp
or
hlt
dec
xlat
std
sbb
int
gs
jne
push
push
adc
ja
xor
fs
gs
mov
dec
mov
stos
inc
add
sbb
xor
insl
adc
pop
and
lcall
sub
or
cmpsb
out
and
sub
lahf
add
jecxz
cld
xchg
push
push
std
aam
push
pop
dec
xor
ja
ss
jne
nop
xor
dec
jb
dec
mov
lods
mov
dec
and
cmpsb
in
mov
xchg
mov
dec
pop
mov
xor
dec
outsl
out
mov
xor
fwait
in
lret
mov
cs
jae
pop
ficompl
fldt
lods
dec
push
movsb
negb
dec
inc
jecxz
dec
lods
xchg
fsub
lahf
pop
and
scas
leave
jp
dec
add
mov
inc
pop
dec
pop
stos
ret
lds
mov
cmpsl
dec
call
cld
add
test
pop
std
sbb
shrl
lock
cmp
adc
pop
mov
jecxz
mov
fs
shrl
nop
out
push
mov
lahf
mov
cld
aam
jne
xchg
bound
and
xor
push
mov
imul
mov
jmp
xor
mov
mov
outsl
mov
imul
aam
or
aas
xor
inc
fs
jno
pop
shll
sbbb
dec
test
jb
sub
repz
adc
jae
mov
fwait
leave
pop
inc
data16
ret
popa
pop
out
xlat
and
lods
dec
sub
mov
jbe
mov
mov
in
jae
xchg
mov
ljmp
les
dec
jno
ja
gs
push
cmp
stc
mov
fnstsw
fstpl
pop
movsl
clc
sub
out
cli
cltd
addl
push
les
rorl
daa
and
mov
and
add
xchg
mov
dec
mov
out
int
scas
pop
sbb
or
in
hlt
mov
addr16
pop
xchg
xchg
orl
jo
sbb
dec
mov
or
add
rcl
mov
push
sub
dec
cmpl
mov
daa
jecxz
ljmp
push
push
pop
flds
xor
xor
stos
inc
stc
mov
pusha
inc
in
in
mov
mov
cld
lret
dec
loopne
pop
iret
mov
dec
mov
aas
rcl
subl
and
les
mov
jnp
dec
jo
or
jp
outsb
or
xchg
xchg
movsl
imul
les
lret
jo
xor
daa
shl
lcall
popf
test
sahf
popa
test
mov
stos
in
pushl
in
mov
mov
jecxz
xor
pusha
pop
call
xor
in
add
sub
and
mov
enter
push
or
inc
mov
jo
int3
es
adc
std
cs
mov
sub
ja
aas
aam
fsubrs
mov
ret
sti
cvtps2pd
pop
fcmovu
jns
mov
jge
pop
add
xchg
or
ja
pop
pop
jno
test
xchg
jle
mov
pusha
inc
dec
in
or
add
lock
cmpsb
leave
cltd
cltd
adc
pop
shll
xchg
adc
mov
cmp
dec
aad
jge
dec
scas
or
xchg
int
popfw
fidivs
enter
mov
insl
pop
mov
loope
lock
test
lret
shl
adc
insl
sti
cmpb
nop
add
lods
out
mov
cmp
add
es
mov
pop
add
pop
lcall
das
negl
push
xor
sarl
stc
mov
in
fisttpl
mov
mov
lahf
sub
bound
add
and
stc
hlt
rcrb
inc
test
js
outsb
fiaddl
mov
sbb
je
lods
xor
imul
loopne
cmp
lahf
adcb
sub
mov
push
pop
out
xchg
in
xor
ja
sarl
dec
adc
and
mov
or
add
adc
arpl
adc
lea
stos
sbb
in
leave
icebp
mov
pop
dec
mov
jecxz
fildl
leave
sbb
sub
push
jae
in
fldcw
cli
jb
mov
lods
lea
popf
mov
pop
or
nop
jns
pop
cmpsb
cmp
es
dec
icebp
lret
iret
out
jge
les
push
neg
loopne
notl
inc
xchg
add
lret
push
in
pushf
mov
clc
xor
add
jg,pt
xor
or
fisubrs
fs
ljmp
mov
dec
dec
mov
popa
insb
mov
add
in
int3
cli
stc
lds
bnd
push
pop
cmpsl
mov
or
decb
sub
test
xchg
xor
or
mov
popa
inc
out
imul
in
stos
test
cmp
movsl
jmp
inc
lahf
xchg
in
sbb
iret
fildl
sbb
movsb
cld
mov
push
cmpsl
xor
pushf
or
jecxz
jne
sbb
jne
and
loopne
push
in
test
and
mov
es
push
mov
cli
int
imul
pop
lcall
jmp
and
fildl
loope
or
mov
push
cmc
mov
lods
arpl
dec
cmp
out
sbb
je
jno
jns
negl
stos
and
shll
lahf
push
adc
dec
out
lock
lods
in
mov
out
push
sbb
orb
in
lods
sub
xor
xor
xchg
cld
jmp
sub
sub
imulb
cmp
and
mov
inc
test
mov
inc
xor
dec
addr16
loop
rcrl
call
sbb
pop
mov
add
pop
xchg
adc
rolb
cmp
inc
cmp
pop
cmp
cmp
mov
push
shlb
push
push
inc
in
pcmpeqd
int3
int
sub
nop
in
jnp
add
mov
or
jmp
fdivrs
cmp
int3
pop
mov
and
jnp
stos
cli
pushf
pop
stos
fcomps
or
nop
xor
les
scas
xor
push
repnz
push
xor
les
or
push
mov
adc
lret
shlb
or
xchg
pusha
jne
sbb
cmpsb
jl
or
pop
cmc
xor
leave
mov
sbb
sbb
push
jbe
sub
inc
sbb
mov
enter
dec
mov
ljmp
stos
movsl
sub
sub
or
or
cltd
lret
jmp
call
xchg
je
mov
dec
mov
test
scas
sti
clts
sub
adc
loopne
mov
jmp
jle
push
mov
jmp
dec
mov
fcom
les
xchg
sbb
insl
jno
cmp
cmp
je
jg
je
mov
cmp
mov
movsl
sbb
aas
sbbl
sbb
push
movsl
outsb
pop
adc
mov
mov
into
push
and
and
in
add
enter
or
testb
cmpsb
sbbl
into
pop
imul
stos
and
push
pop
ljmp
js
inc
mov
ljmp
pop
or
push
rolb
xchg
mov
stos
jl
test
add
orl
push
push
xor
out
adc
and
fdivr
xor
rol
inc
out
add
stos
cli
lret
movsb
ja
int
fadds
lock
mov
or
cmc
out
lods
push
fidivrl
pop
jo
cmpsb
sub
test
sbb
xchg
hlt
jne
inc
push
pop
scas
lcall
mov
inc
push
fnstenv
sub
and
test
push
add
aam
xor
push
xchg
aad
xlat
loopne
mov
ficomps
fsubrs
or
inc
imul
fwait
test
sbb
push
es
out
xchg
rcrb
cmp
imul
mov
fiadds
add
dec
lcall
movsl
fneni(8087
dec
in
pushf
inc
leave
fsubr
lds
pop
sub
xchg
mov
mov
adc
push
sarb
pop
icebp
repz
add
mov
rorl
std
dec
dec
loope
das
in
mov
jge
shlb
test
or
mov
aad
out
adc
scas
xor
loopne
dec
in
jle
mov
fdivr
xchg
aam
mov
sub
fscale
cwtl
loopne
jp
repnz
sbb
push
ss
push
outsb
leave
jae
les
and
mov
dec
mov
mov
mov
in
pop
iret
enter
sub
xor
cmp
xchg
xchg
mov
mov
icebp
lsl
movsl
aas
in
insb
sub
mov
insb
lods
push
cmc
lcall
les
add
cmp
pop
mov
lcall
xlat
sbb
push
lret
and
ljmp
cmp
lret
mov
sub
fiadds
daa
and
loopne
and
int3
mov
jnp
or
ja
xor
data16
xor
dec
inc
inc
imul
dec
xchg
adc
cmp
shl
pop
mov
xchg
lds
xchg
repz
cmp
or
add
outsb
jno
add
scas
fbstp
gs
adc
sbb
jns
add
mov
fisubl
dec
imul
repnz
lock
adc
in
xor
lret
addr16
rcll
cmpsb
mov
cmc
mov
dec
sbb
sbb
add
shrl
add
push
pushl
mov
and
pop
pop
mov
fdivrs
mov
jge
xor
push
dec
xchg
xor
divl
mov
clc
clc
xor
xor
mov
testb
inc
fldcw
mov
cmpb
ja
stos
nop
cmp
test
add
jl
repz
push
enter
outsl
mov
cli
test
push
jne
xchg
sahf
sub
leave
addr16
sbb
jp
push
shr
and
adc
mov
sbb
ds
sahf
andl
sub
iret
xor
cwtl
push
ja
xchg
data16
es
hlt
jge
jl
pop
inc
cmpb
mov
scas
arpl
jbe
repz
clc
and
adc
jmp
add
xchg
mov
push
pop
test
leave
ds
adc
xchg
push
enter
test
cli
push
push
daa
stc
cmpsl
test
add
into
loop
jecxz
inc
pop
outsb
stc
imul
lods
and
mov
mov
sbb
rcl
jmp
jg
popf
cli
lret
insl
push
inc
insl
pop
and
out
jp
pushf
add
fisubrl
daa
mov
adc
leave
or
aas
stos
es
pusha
or
aam
data16
imul
xor
ja
xchg
mov
fildll
sbb
sbb
push
fstps
mov
xor
mov
lds
dec
cmpsl
iret
mov
add
lods
pop
jle
in
dec
icebp
les
adc
push
adc
inc
sbb
lea
hlt
jl
cs
push
xor
mov
cs
xchg
or
sub
jae
inc
jns
popa
mov
inc
stc
pusha
inc
and
das
sub
js
sbb
add
adc
pop
frstor
scas
pop
or
mov
xchg
jmp
xor
call
xchg
es
cmp
pop
sub
insl
adcb
test
fisubl
mov
push
pushf
sub
add
ja
int
mov
mov
adc
push
cmpsb
mov
inc
popf
xor
daa
xchg
push
xchg
cwtl
lcall
jmp
cmc
xabort
ss
xchg
int3
sbb
push
push
repz
adc
xchg
std
ja
add
jmp
lret
int
cmp
mov
xchg
sbb
es
sbb
pop
mov
and
mov
sahf
in
lods
cmc
cmp
or
fldt
ljmp
das
insl
pop
call
into
aas
and
adc
jmp
enter
push
xchg
shr
mov
and
inc
sub
mov
mov
xchg
mov
addb
addl
mov
add
add
es
pop
dec
fsubs
leave
inc
test
jnp
xchg
add
fisttpll
xor
das
or
or
mov
jbe
pop
in
lcall
xor
lods
sti
shr
cmpsl
xchg
and
mov
mov
insl
jnp
dec
and
pop
xor
dec
insl
dec
fisttpl
pop
xor
shrw
repz
and
je
dec
add
out
mov
xor
push
mov
xor
or
cwtl
shll
push
je
sub
push
stos
test
in
pusha
jle
sbb
out
jl
inc
fidivrl
mov
aas
test
pop
jmp
cmp
xor
xchg
xchg
jmp
mov
mov
loope
fs
sahf
test
jl
movsl
fmuls
inc
test
pop
scas
fsubr
or
mov
pop
sub
dec
lds
sar
push
into
ret
pop
jae
push
mov
mov
cmpb
mov
test
sbb
mov
dec
cwtl
jge
xor
mov
mov
sbb
dec
or
mov
fcomps
push
imul
sbb
mov
ja
or
mov
adc
call
xlat
add
shlb
insb
aam
loopne
aam
xchg
sub
jg
xor
rcrb
mov
mov
adc
push
mov
addr16
lods
fwait
in
push
adc
das
add
sahf
jge
adc
and
jmp
repz
fisubl
hlt
lods
lds
mov
sbb
ds
push
mov
out
filds
mov
mov
cmp
int
sbb
scas
pop
in
or
sahf
adc
push
lret
lods
test
inc
pop
jle
xchg
stc
lea
test
dec
in
jo
dec
loop
or
stos
cmc
cmp
jb
shlb
add
int3
mov
movsb
int
cmpsb
push
lcall
jge
mov
inc
addr16
jo
test
clc
or
mov
test
mov
push
add
lds
roll
jne
xor
pop
pop
in
xchg
insl
mov
add
std
jno
fildll
xor
fsts
mov
sbbb
jp
mov
add
sahf
and
dec
rcr
aad
adc
stc
cmc
aaa
pop
jnp
or
scas
pop
xchg
popf
stos
mov
mov
dec
sub
mov
pop
mov
aas
pop
or
mov
cmp
mov
ret
nop
fucomi
or
adc
std
inc
and
popfw
add
outsl
or
xchg
rcrb
mov
pop
pop
testb
dec
cmp
icebp
stos
mov
es
xchg
test
sub
mov
or
cmp
and
fisubrl
pop
pop
cmp
ret
cmc
cli
loope
dec
loop
cmpsb
mov
pop
adc
lock
xchg
or
loopne
xchg
push
push
fidivs
jbe
mov
mov
icebp
push
fldcw
daa
xchg
ds
cli
enter
pop
arpl
in
xchg
pusha
std
enter
push
xchg
or
xchg
push
mov
not
les
imull
movsb
push
mov
dec
pusha
push
push
das
push
test
and
sar
xorb
je
loopne
jb
icebp
cmpsl
mov
xor
pusha
mov
int3
adc
jb
cwtl
fsubs
dec
mov
push
addr16
add
lcall
repz
add
enter
inc
ss
adc
in
loope
aaa
adc
int3
imul
ret
int
pop
dec
mov
sbb
popa
sub
mov
in
pushf
inc
lret
dec
adc
js
and
pop
je
xor
push
fdivr
incb
inc
push
adc
push
sbb
stc
mov
shll
rol
mov
inc
loopne
jns
push
jecxz
mov
and
sti
sbb
int3
adc
inc
push
or
cmp
pushf
xor
dec
adc
loope
mov
ret
int
push
lcall
jbe
mov
and
pop
cmp
test
xchg
adc
adc
or
mov
mov
hlt
xor
fwait
push
lahf
push
ret
ja
sqrtps
insb
ss
call
pop
pop
jo
lds
push
out
and
add
xlat
scas
imul
inc
inc
jge
adc
fstpt
jecxz
clc
outsl
sub
xor
fwait
jne
sbb
int3
xchg
out
add
cmp
xchg
dec
or
in
mov
or
dec
pop
or
sub
sub
pop
push
sarl
pop
jmp
sbb
jecxz
sahf
adc
push
ds
cli
into
out
dec
out
outsb
xor
clc
hlt
in
mov
std
iret
lahf
xor
out
nop
fsubl
inc
call
xor
test
data16
cmp
cmp
sub
jg
cmp
sti
xor
into
insl
sub
aaa
adc
int3
fcompl
in
and
ret
icebp
or
arpl
mov
std
in
and
xchg
inc
inc
jbe
in
sti
js
fistps
jo
les
push
or
xchg
push
cmp
movl
xlat
les
lcall
fsubl
jnp
fisubs
cmp
iret
aas
xor
movsb
xorl
push
add
pusha
hlt
jg
mov
dec
sbb
ljmp
xor
outsl
and
push
xor
daa
mov
inc
cmp
jb
mov
inc
popa
outsl
lahf
mov
test
int3
shrb
pop
dec
sbb
pop
pop
push
sbb
inc
lods
push
xor
inc
cmp
dec
and
rolb
jns
into
xor
sbb
add
clc
movsl
dec
jno
add
pushl
mov
add
inc
push
insl
or
sbb
sar
push
aaa
pop
pop
inc
cmp
push
aas
sub
repz
and
repnz
rcl
call
xchg
into
or
pop
mov
loope
push
cwtl
cltd
inc
cmpl
inc
adc
xor
scas
pusha
je
sahf
fwait
mov
cmp
and
scas
jns
inc
dec
sub
test
loop
loopne
cmp
push
xchg
icebp
int
pop
arpl
addr16
add
sbb
test
faddl
jns
or
sub
fldl
inc
mov
add
inc
mov
mov
xorl
imul
out
sub
sbb
mov
lods
push
cmp
pop
cltd
push
lods
ds
int
addr16
nop
mov
repnz
popf
sahf
mov
adc
push
jmp
xchg
out
pop
ljmp
gs
push
mov
sbb
pushf
jmp
insl
push
add
out
mov
or
xor
inc
and
dec
pusha
lret
sahf
gs
je
out
movsl
in
push
rcrb
movsb
stc
jb
xchg
pop
mov
ss
mov
fs
scas
loope
ljmp
dec
mov
scas
cs
nop
ror
aas
or
addl
xor
scas
jge
xor
sti
lock
ss
test
insl
mov
inc
fbld
outsb
je
push
mov
dec
lods
rcrl
addr16
inc
jle
insl
mov
adc
inc
mov
fdivl
imul
rcr
mov
popa
add
lock
movsl
mov
push
cmp
idivl
mov
aas
push
push
cltd
jmp
clc
pop
aad
or
in
mov
sbb
xchg
call
sub
push
mov
js
into
inc
or
std
xchg
pop
mull
mov
das
xchg
cltd
or
pop
pop
mov
or
jl
fcoml
jno
mov
dec
fs
shr
cmc
push
fstpl
dec
pop
lret
cmp
rolb
call
enter
iret
rol
out
or
jno
pop
adcl
and
inc
arpl
mov
jb
lcall
pop
or
xlat
aam
or
sahf
ja
clc
test
aam
pusha
cmp
jo
push
mov
xor
cltd
repz
mov
clc
cs
sbb
xchg
sub
or
adc
pop
sar
insl
mov
cmp
jno
sub
leave
mov
in
ss
mov
pop
xchg
mov
mov
int3
lds
mov
test
xor
add
inc
or
sbb
dec
xchg
cli
add
ss
push
push
cmpsb
arpl
aaa
xchg
aad
lea
dec
sub
inc
pop
push
pop
mov
push
sbb
sbb
adc
add
lods
pop
repnz
adc
mov
sub
sub
sahf
inc
adcb
pop
mov
xchg
pop
repz
sub
loope
push
mov
mov
ja
jne
xor
push
xchg
cmp
cli
adc
movsl
lea
js
lods
mov
jl
ss
insl
pop
lds
mov
push
fcomp
inc
stos
mov
int
daa
je
push
test
mov
and
or
xor
jmp
jnp
dec
xor
dec
xchg
xchg
sbb
bound
and
shll
ljmp
and
mov
dec
xor
mov
gs
dec
fstps
enter
aam
jle
mov
lds
push
push
sub
stos
pop
and
push
adc
cmp
or
push
sbb
in
push
lock
jbe
out
rorl
scas
push
call
or
adc
adc
xor
fdivl
or
jnp
jge
loope
push
mov
push
decb
into
int3
push
fidivrs
test
arpl
adc
mul
adc
adc
pop
cwtl
sbb
scas
das
xchg
iret
jnp
xlat
sub
xor
in
lret
fs
leave
push
jae
outsb
sbb
inc
pusha
and
adc
shl
inc
xchg
sub
scas
dec
sbb
push
mov
inc
pop
out
push
lcall
pop
dec
inc
cwtl
mov
mov
dec
xlat
fcompl
and
stos
cmpsl
testb
int3
pop
xor
sbb
jl
fs
ss
fidivs
jle
and
mov
xchg
scas
cmp
inc
or
adc
pusha
mov
repnz
pop
adc
test
mov
cmp
lcall
dec
or
stos
fisttps
push
lea
imul
mov
into
lods
inc
jns
or
scas
xchg
mov
and
mov
sbb
shlb
pop
out
addr16
cmp
into
repnz
adc
cld
test
loope
loope
sbbb
icebp
and
lcall
mov
push
and
rcll
outsb
mov
rcrl
in
int
fldln2
test
mov
dec
xor
mov
inc
imul
mov
and
cmpsb
xchg
mov
mov
mov
fisubrs
aaa
aad
pusha
rol
out
shlb
mov
or
sbb
pop
xor
mov
xor
push
shrb
mov
push
gs
push
je
cwtl
cmp
mov
clc
adc
sub
cld
adc
mov
pop
enter
and
dec
sub
jnp
mov
jmp
js
jmp
scas
fnstsw
pop
mul
aam
xor
mov
xor
xor
push
arpl
mov
jge
in
arpl
mov
dec
push
pop
xor
aam
imul
add
mov
je
out
das
push
adcb
repz
adcb
stos
in
rolb
test
dec
mov
mov
in
loop
shlb
mul
cmp
inc
inc
in
mov
mov
xchg
mov
inc
push
add
scas
adc
xchg
pop
push
jne
mov
xchg
out
push
ret
cwtl
outsb
shr
xor
add
into
push
pop
movsl
fstps
jo
dec
out
iret
in
sti
adc
jbe
or
adc
popa
in
test
adc
enter
dec
mov
lods
mov
inc
push
fisubl
and
repz
mov
jne
shll
adcl
loopne
add
ss
iret
clc
and
and
mov
mov
inc
push
xchg
push
mov
pop
dec
outsb
jmp
enter
lods
mov
loopne
push
pop
pushf
repz
es
ret
and
sbb
jns
jle
les
aas
inc
ficoml
enter
mov
jecxz
cmp
not
sbb
xor
add
xchg
sub
jnp
xor
leave
mov
dec
jnp
or
pop
xchg
dec
sub
or
cmp
fisubrs
add
push
mov
cwtl
sub
lock
enter
test
push
gs
pop
mov
mov
xlat
mov
arpl
divb
test
int3
jl
push
mov
fsubl
or
dec
addr16
push
pop
pop
and
cs
in
xlat
mov
inc
or
mov
enter
dec
test
inc
mov
mulb
test
ljmp
xlat
mov
dec
dec
push
xchg
rcl
stos
test
fiadds
ret
push
stos
mov
stos
fldcw
lcall
cmpsl
rorl
xor
xor
ja
test
movsl
lea
jmp
mov
jno
cmp
jecxz
shl
ss
scas
cmpsb
xor
pop
ret
scas
lea
xlat
mov
add
mov
std
and
fnstenv
mov
ret
lahf
sbb
mov
outsb
dec
mov
push
les
jge
mov
out
jnp
stc
jb
shrl
adc
rcrl
sub
push
mov
fildll
sub
adcl
inc
fs
gs
xchg
popf
les
mov
cmpsb
jmp
int
sbb
jl
pop
mov
clts
fs
fcmove
adc
pushf
in
icebp
js
lea
sbbl
bound
xchg
popf
lea
jns
mov
xchg
sub
ds
popa
movsl
dec
jg
enter
and
xor
pop
fisttpl
push
loopne
cmp
xchg
aas
and
jecxz
mov
sbb
add
enter
lahf
sub
rcrl
iret
xor
mov
les
es
icebp
cmpsb
cmp
outsl
incl
fisubrl
adc
pop
dec
lcall
aaa
mov
add
xchg
ljmp
cmp
lret
sahf
imul
sbb
lret
mov
mov
clc
mov
jb
es
nop
insl
rcrb
out
repnz
pop
lods
stc
jo
pop
or
bound
adc
pop
insl
xchg
cmc
inc
inc
mov
shlb
addr16
add
pushf
jne
pop
inc
pusha
stos
cmc
pop
das
imul
or
leave
mov
hlt
iret
inc
sti
gs
pop
mov
or
dec
mov
jp
adc
xor
into
inc
pop
leave
les
xor
jb
or
mov
and
fsubrs
push
dec
shlb
lret
xor
mov
in
daa
mov
dec
mov
mov
pop
aad
sbb
mov
pop
ret
mov
outsb
je
cmp
xorl
pop
mov
mov
xor
dec
mov
push
dec
cmp
sub
loope
mov
fimuls
cli
and
cmpsb
hlt
out
add
jle
rcll
in
fs
sbb
mov
and
jmp
aas
inc
mov
fwait
out
jle
xlat
les
adc
add
addl
mov
mov
js
lods
pop
fs
push
jbe
pop
xor
and
cltd
xchg
push
add
and
sahf
cmp
pop
das
js
and
xchg
gs
mov
dec
sahf
mov
sbb
jb
fcomp
lret
stos
push
dec
out
adc
data16
fidivs
leave
cmpsl
mov
les
out
aaa
data16
jecxz
or
xor
loopne
call
test
adcl
adc
outsb
cwtl
jp
sub
dec
iret
decb
lds
pop
xchg
xor
inc
test
pusha
add
mov
movsb
insb
or
test
and
xchg
adc
shlb
lret
inc
mov
aam
int3
mov
dec
loop
sbb
test
sbb
dec
out
and
out
xchg
dec
ret
jg
adc
sbb
push
cmp
sbb
sbb
je
in
outsl
mov
or
sub
addr16
cmp
enter
pop
and
xor
cwtl
xchg
ja
pop
add
subl
stos
int3
add
lret
mov
xchg
mov
movaps
jg
movsl
nop
push
fsubs
or
xchg
xorb
xchg
mov
jae
popa
inc
dec
testl
sub
mov
mov
adcl
fs
jo
imul
scas
int3
lds
stos
out
jbe
jae
addl
dec
rolb
and
add
lods
or
cwtl
xchg
sarl
add
mov
daa
sti
cmp
shlb
in
pop
push
xor
push
mov
mov
pushf
mov
push
movsb
lods
and
add
arpl
sti
sub
daa
jno
mov
sbb
mov
xchg
cli
xor
test
jae
xchg
pop
out
pop
cmp
jp
mov
dec
sbb
add
pop
adc
movsl
insl
jo
cmp
inc
cmp
mov
pop
dec
bnd
mov
aad
jnp
sbb
fistl
aaa
lahf
int
dec
xchg
and
push
add
inc
xchg
pop
push
outsl
cmpsb
add
icebp
cmp
lret
int
jne
sub
daa
cmp
pop
mov
repz
loopne
sbb
and
mov
push
out
mov
insl
std
and
jne
pushf
lret
and
lahf
mov
lar
mov
scas
mov
mov
jne
mov
or
js
out
loope
mov
repz
inc
xchg
add
push
xor
ja
popa
sub
cmp
inc
xchg
stc
scas
ret
and
xor
jmp
ret
and
aam
jb
test
xlat
jae
imul
mov
call
pop
pop
lret
lock
lret
je
repz
cs
pushf
arpl
es
loop
add
mov
lods
aad
xchg
push
mov
test
loope
xor
popf
das
hlt
outsb
mov
pop
inc
pop
mov
mov
xor
dec
jecxz
aad
mov
adc
test
inc
dec
adc
shl
adc
icebp
pop
aad
negb
arpl
ret
mov
jae
inc
push
pop
xchg
imul
jecxz
scas
mov
xchg
js,pn
stc
dec
lcall
testb
orb
in
inc
push
add
out
cmp
popa
imul
daa
sub
adc
aaa
test
xor
fmul
or
push
leave
das
insl
mov
repnz
xor
add
cmp
dec
rolb
out
das
xchg
cmp
inc
stc
outsl
loope
rol
test
adc
and
test
ret
popl
lock
xor
int3
and
jb
adc
pop
bnd
cltd
sahf
test
inc
or
lods
shll
inc
icebp
mov
insl
mov
aas
fnsetpm(287
sub
dec
les
push
push
mov
add
and
out
sub
leave
lds
sbb
pop
pop
loopne
test
xlat
pop
dec
loop
fistpl
mov
mov
mov
jp
sub
not
lret
push
lds
je
test
sub
push
mov
ficompl
and
rcrl
jge
mov
leave
push
outsl
inc
movsl
lcall
call
fistps
and
jnp
outsb
jmp
xlat
pop
dec
leave
mov
mov
adc
shlb
and
rcr
add
and
add
cltd
cmp
cmp
cmp
clc
popa
lret
jb
xchg
shrl
dec
cmp
dec
cmc
movl
lods
aas
jnp
xor
jge
pop
pop
lods
ja
jae
loopne
jne
data16
jo
xchg
dec
jnp
sub
mov
js
fcmovnbe
add
leave
cli
pop
dec
mov
jo
lret
sub
subb
add
andl
fdivr
shrb
push
jno
fbstp
push
in
lcall
or
enter
cwtl
das
lods
fldl
mov
mov
fldl
scas
addr16
pushf
and
xchg
sbb
mov
push
in
add
shrb
or
sub
push
fincstp
std
popf
jbe
fiaddl
jo
xor
testl
mov
xchg
shlb
int
jne
sbb
cmp
arpl
mov
mov
adc
cmp
xchg
push
test
dec
pop
add
pop
inc
fldt
push
inc
sahf
adc
ret
add
or
jge
in
inc
in
cmp
pavgb
out
dec
jae
call
push
test
sbb
jecxz
or
in
lret
lds
and
lahf
mov
iret
call
aaa
imul
jle
pusha
cmc
xor
in
out
test
or
mov
dec
jnp
into
and
out
aad
mov
inc
sti
adc
shll
cmp
dec
add
or
mov
std
mov
dec
cli
dec
or
inc
add
cmpsl
inc
pop
mov
popf
dec
sub
dec
loope
enter
xor
or
fdivrs
daa
jo
add
sub
out
and
sar
ds
repz
or
jmp
mov
and
and
pop
ret
jno
fcom
add
repz
dec
repz
dec
mov
rcll
adc
imul
xorl
popf
pop
ret
mov
scas
iret
sbb
sarb
js
aam
and
test
fld
jl
mov
sbb
add
jae
jo
mov
mov
xor
sbb
lret
lds
jae
push
cmpsl
xchg
fdiv
xchg
addr16
into
mov
add
scas
mov
jne
in
movb
cmp
mov
daa
and
xchg
nop
jb
pusha
jmp
or
mov
xchg
or
add
ret
outsl
aam
mov
iret
sbb
icebp
pop
mov
jl
xchg
sub
pop
ljmp
leave
inc
mov
je
sbb
sub
xlat
in
insb
pop
ficompl
ljmp
out
sbb
mov
push
sub
or
mov
out
push
test
push
xchg
jns
lods
push
xchg
test
xor
fcomp
fwait
iret
sub
sti
mov
bound
pushf
fstl
fldt
xchg
fbld
adc
pop
shl
adc
inc
fisttpll
mov
std
fcmovnu
les
mov
jl
pusha
sbb
jne
jne
jae
in
jp
scas
pop
adc
iret
test
dec
fwait
dec
enter
jmp
mov
sub
and
les
pop
mov
jle
xor
ljmp
xchg
sub
fsubs
jl
adc
jb
xchg
cmc
in
pusha
push
stc
fs
jae
scas
lret
pop
subb
mov
jo
mov
ret
cltd
lods
loopne
inc
movsb
sahf
mov
call
or
xor
add
mov
sahf
cmpsl
jno
ljmp
and
cmc
pushf
adc
push
enter
shr
mov
cmp
pop
mov
adc
mov
pop
aam
mov
loope
add
add
sbb
fsubs
mov
hlt
stc
shlb
cld
fisttpll
inc
sbb
jo
pop
idivb
mov
stos
int3
out
xchg
xchg
les
sbb
xchg
scas
push
test
xor
lcall
lock
loopne
push
push
andb
lea
push
insb
mov
mov
mov
call
lea
push
rolb
hlt
adc
jle
stc
push
dec
dec
mov
cmp
movsb
pop
jno
loop
adc
mov
xchg
outsl
or
enter
shrl
mov
push
adc
push
add
ja
jno
add
xor
dec
icebp
inc
ficompl
enter
clc
inc
inc
fwait
mov
and
jle
push
aaa
test
ficoml
les
dec
sub
jmp
xor
dec
jne
stos
mov
sbb
xor
enter
test
sub
pusha
adc
movsl
testl
or
rolb
xchg
sbb
fdivrl
sbb
xchg
cs
xor
movsl
out
sbb
in
cwtl
lods
imul
dec
and
in
movsb
inc
psubw
jge
and
pop
aas
mov
test
pop
jno
or
fisubs
out
and
repnz
mov
mov
dec
out
add
cmpsl
insb
inc
cmp
sbb
psrlq
and
sbb
les
outsb
mov
leave
lea
rcrb
adc
sbb
and
out
mov
add
push
xor
and
je
lahf
pop
dec
lret
xchg
adc
shll
cmpsb
xor
or
ljmp
popa
out
bnd
cld
sub
cli
sub
pop
xchg
or
lcall
addr16
mov
cmp
mov
lods
jno
std
xor
cmp
popf
lds
mov
lods
lret
test
adc
add
in
in
icebp
fimuls
push
andb
inc
in
std
push
cmpsl
pop
out
and
outsb
adc
std
and
cld
sbb
jnp
je
arpl
push
pop
out
cmpsb
std
hlt
shll
out
add
mov
and
and
popf
adc
shlb
push
cmp
add
inc
mov
ret
jmp
push
jne
leave
dec
adc
in
rorl
mov
dec
test
fdivrl
lds
cltd
loope
xchg
mov
popf
add
sub
repnz
sub
mov
shl
mov
pop
mov
outsl
push
and
pop
lds
out
adcb
cld
jnp
cld
in
push
push
cmp
inc
cmp
cmp
lea
fcmove
call
jo
pop
and
shrl
je
xor
lock
into
push
rorb
push
fsts
add
push
sbb
out
ret
jp
aas
rcr
mov
shl
sbb
mov
pusha
push
repnz
sub
sub
xchg
adc
xchg
cmp
es
mov
push
lea
lahf
inc
rcl
in
inc
ret
mov
scas
and
lcall
js
xor
xchg
push
ffreep
mov
sbb
in
and
in
dec
adc
outsl
imul
repz
sub
jmp
cmp
fnstsw
pop
mov
aas
fstpl
push
shlb
popl
add
dec
fildll
jae
in
cmpsl
in
pop
sbb
fldcw
add
ljmp
out
push
popf
jp
lods
popl
cmp
adc
or
sbb
sub
sbb
inc
sahf
repnz
fistl
xchg
repz
mov
push
jne
jg
xor
sub
pop
mov
test
xchg
or
push
mov
push
pop
scas
pushf
aas
push
add
dec
ss
adc
add
adc
lea
mov
cmp
or
cmp
xchg
lods
popa
insl
sbb
inc
mov
xchg
adc
sub
push
cmpsl
jmp
in
xor
push
sahf
cmp
xchg
dec
mov
mov
jmp
mov
insl
ljmp
jg
push
push
mov
xor
movsb
icebp
sbb
adc
pop
insl
int
pop
call
cmpsl
cwtl
lret
je
int3
int
jo
pop
shll
inc
inc
ds
xor
outsl
sbb
repnz
arpl
loopne
into
and
aas
jp
sbb
sbb
or
cwtl
pop
sarb
inc
sbbb
iret
ret
in
cmp
pop
mov
mov
rcl
pop
roll
cmpsl
cmp
adc
sub
test
push
das
ret
adc
mov
mov
push
jb
fwait
add
inc
movb
push
into
pushf
sahf
stos
cmpsb
mov
outsb
out
gs
add
js
aam
aas
xorl
scas
orb
imul
out
cli
iret
push
es
sub
sti
cmp
ds
cmp
gs
enter
dec
in
dec
pop
push
pop
adc
jb
popa
movsl
xor
cwtl
push
dec
xlat
test
mov
int3
or
rep
push
or
sub
and
int3
xchg
add
in
xor
jp
call
sbb
inc
es
sbb
and
rorl
or
sti
fmuls
lret
inc
test
jb
repnz
rorb
adc
lods
jg
pop
push
push
lods
adc
lret
sub
mov
xchg
mov
sbb
stos
imul
cmp
or
loope
push
insb
incb
cli
fmuls
inc
sub
xor
dec
jmp
push
sub
scas
or
jns
add
push
jmp
movsb
jns
call
ficompl
and
inc
pop
loopne
imul
push
xlat
mov
sub
fsubl
dec
repz
std
lret
mov
mov
mov
cmp
mov
sahf
xchg
inc
sti
and
lods
faddp
xor
ss
jg
inc
jecxz
push
mov
xor
sub
mov
and
mov
rorb
xchg
mov
mov
dec
das
je
or
ds
dec
mov
xchg
shl
add
jl
dec
popa
xchg
xor
jecxz
and
mov
jmp
movsb
cld
adc
out
inc
mov
les
in
xchg
mov
popa
mov
loope
sub
xchg
out
xchg
pop
pop
inc
dec
add
addl
test
mov
cmpsb
xchg
js
data16
popl
jno
shrb
out
pause
jns
push
or
xchg
scas
jo
sub
repz
mov
fidivrl
aaa
rclb
scas
and
inc
fs
adc
into
sub
mov
jns
in
xlat
icebp
ret
call
cmp
rcrl
data16
mov
fisubl
out
sarb
adc
cld
cmpl
sub
mov
stos
cmp
jo
stos
ret
xchg
nop
rorl
jnp
nop
loope
mov
mov
jns
or
push
jno
stc
int
in
in
or
add
in
jae
test
pop
fdivrs
sub
daa
fwait
out
fidivrs
push
stc
mov
mov
xchg
andl
cmpl
ret
sbb
ficoms
cld
dec
xor
push
adc
or
inc
outsl
inc
jle
push
or
sar
enter
addl
dec
sbb
les
test
fisttpll
push
push
and
mov
js
addr16
shll
out
cli
sub
mov
push
ret
out
scas
mov
orl
pop
sbb
mov
pushf
add
pop
pop
push
dec
pop
test
stos
notl
mov
mov
leave
sub
add
arpl
push
mov
mov
lret
mov
jo
cmp
ljmp
or
inc
cmp
leave
sbb
and
cld
or
ret
inc
movsl
stos
push
and
dec
push
xor
jge
popf
adc
add
push
movsl
inc
lock
push
add
movsl
mov
movsb
xchg
mov
cltd
jl
rep
mov
in
fistpll
enter
js
cmp
push
pushf
enter
push
dec
das
jecxz
jbe
into
into
push
dec
inc
sbb
add
je
les
dec
out
push
xchg
dec
sti
nop
fxch
aam
out
test
pop
mov
or
sti
dec
scas
cmpsl
push
add
jle
dec
sub
xchg
aad
rcr
mov
push
jne
add
jmp
lods
xlat
dec
out
adc
mov
shlb
and
pop
lods
aaa
repnz
fwait
stc
mov
movsb
out
or
sbb
adc
xchg
xchg
addr16
into
mov
orb
jge
sahf
pusha
cmp
pop
jecxz
push
inc
push
sub
jne
aas
pop
mov
mov
mov
ss
mov
gs
in
add
xlat
add
xabort
pop
rclb
aas
push
loopne
scas
inc
cmp
add
adc
xchg
dec
cld
sub
lret
dec
subl
xchg
ljmp
mov
pop
jo
mov
sbb
adc
das
movsl
and
or
cmp
stos
lahf
sub
pop
add
push
fwait
sbb
pop
cmc
ret
push
push
and
orb
mov
xchg
js
mov
mov
ss
pop
not
xchg
out
test
adc
mov
stos
test
xor
bound
outsb
dec
mov
mov
mov
mov
mov
or
sub
insl
int3
jbe
jp
dec
or
xor
pop
popa
xor
and
js
xor
or
mov
xor
xchg
push
jno
jne
mov
push
cwtl
lea
adc
add
push
xor
pop
or
sti
std
mov
inc
ljmp
ds
inc
outsb
outsl
repnz
ss
and
jns
pop
mov
ss
jg
sbb
stos
out
test
mov
lcall
push
push
pop
inc
fistl
lret
sbb
lods
dec
scas
in
adc
xchg
and
and
or
pop
sub
xchg
and
repnz
push
jl
jmp
jno
sub
sub
movsl
xchg
or
xchg
jle
mov
scas
pop
inc
push
jecxz
jmp
int
jno
femms
cmp
out
jge
fcoml
repnz
lea
cld
dec
xor
sahf
add
popf
sub
adc
imul
cmp
push
outsb
mov
nop
mov
cltd
shlb
or
jecxz
call
push
daa
fwait
pop
dec
jnp
cmpsb
mov
push
fimull
jbe
test
sbb
push
and
inc
in
xor
pop
lock
and
aas
xchg
xor
insl
pop
pop
stos
jl
add
clc
icebp
jnp
mov
or
notl
je
movsl
movsb
je
xor
jmp
test
and
mov
hlt
roll
mov
fisubl
fisubs
iret
pop
fldt
popf
insl
inc
xchg
xorb
hlt
xchg
xchg
sbbb
popa
inc
js
inc
mov
pop
imul
xchg
mov
leave
rorl
lahf
sub
add
in
js
shll
xor
mov
xchg
dec
lods
mov
out
pop
push
adc
xchg
mov
push
inc
movsl
loop
cmp
fldcw
mov
sbb
add
fs
inc
sub
add
push
hlt
lea
pop
das
lcall
rcll
loope
xchg
inc
lahf
xchg
jmp
and
js
sahf
xor
xor
or
sbb
sub
imul
fistpll
movsl
pop
xchg
mov
xchg
mov
dec
dec
std
pop
mov
mov
shrl
mull
jno
aaa
pushf
int
inc
sub
lds
push
xchg
add
or
xor
xchg
shrb
fs
test
jne
push
stos
sbbl
mov
lods
mov
jecxz
addr16
mov
cmp
insl
pop
sti
ljmp
movsb
adc
rcll
mov
add
mov
push
stos
into
out
sbb
sti
jmp
out
in
test
cwtl
loopne,pn
loop
imul
int
mov
sbb
in
ds
mov
loop
lcall
aaa
shrl
cmp
shlb
mov
insl
sbb
or
sbb
mov
rcrb
arpl
or
jb
stc
movsb
add
repz
dec
push
jmp
dec
mov
push
cmp
into
jp
push
leave
mov
push
loope
lret
or
js
loop
push
push
arpl
data16
loop
fsubl
daa
jge
sub
adc
sbb
dec
push
fiadds
pop
mov
bound
lahf
rcr
ret
jle
adc
in
sub
out
call
scas
cmp
fwait
xor
popf
sub
imul
jmp
sbb
imul
lcall
int
ror
mov
mov
inc
ret
test
shlb
pop
stos
or
out
mov
sbb
xchg
mov
sbb
cmp
rolb
fadds
mov
mul
mov
cmpsb
ret
lock
or
stos
scas
lret
pop
sub
pop
pop
loopne
jo
push
aaa
dec
out
leave
jo
in
xor
pushf
push
mov
push
xchg
mov
pushf
test
jae
mov
xor
and
sub
or
jg
mov
jg
push
xchg
xchg
mov
cmp
testl
sarl
notl
lret
jae
push
pusha
jno
lret
add
inc
dec
push
int3
pop
test
pinsrw
xor
cmpsl
xor
lods
es
jb
in
fmuls
rcrb
dec
cmpsl
xor
cltd
cmp
aad
jmp
fldcw
dec
cmpsl
popf
rclb
add
jae
or
lret
add
mov
jno
dec
daa
adc
add
dec
sub
pop
cwtl
addl
mov
xchg
pop
mov
fnstsw
decb
dec
cmp
pop
fcoml
das
adc
repz
sub
cld
mov
cltd
in
xor
js
shrl
adc
ret
dec
js
xchg
cmp
cmp
mov
cmpsb
addr16
xchg
aad
into
jge
lret
mov
push
fidivrl
push
mov
fwait
add
mov
ds
pop
aas
or
out
dec
xchg
mov
lods
sub
jae
jnp
icebp
inc
in
lahf
psubb
mov
dec
sub
xchg
add
int
sub
ror
js
mov
cwtl
mov
adc
aad
or
xor
and
lret
sbb
sub
cmc
jmp
addb
sarl
add
mull
pop
int3
call
xor
repnz
cmpsl
or
mov
lea
pop
ljmp
pop
mov
pop
pop
aad
push
imul
ret
cmp
scas
xchg
mov
test
insl
sbb
fistpl
mov
lock
add
pop
jo
repnz
into
and
and
cmp
xchg
ja
xor
push
push
popa
dec
cli
popa
cmc
clc
push
xchg
xchg
pop
xchg
mov
enter
xchg
mov
lock
js
paddusw
dec
insl
cmp
mov
jg
fisubl
ds
out
rclb
xchg
mov
daa
inc
mov
push
fidivs
or
aaa
shll
repnz
stos
push
lea
mov
test
cmp
sahf
lds
jl
push
cmp
inc
and
inc
stc
push
mov
in
xor
shrl
jo
out
mov
sbb
aad
xor
fisubl
push
out
inc
inc
jle
fdivrl
jge
mov
loop
mov
fwait
arpl
test
ror
add
mov
push
push
clc
mov
pop
push
lods
inc
dec
push
push
mov
fidivrs
cmp
aaa
js
or
mov
repz
mov
aas
mov
add
int3
xchg
roll
adc
jb
push
aaa
sti
mov
sbb
cmpsb
and
daa
mov
cli
add
ss
aam
aad
rorl
pusha
imul
mov
and
inc
cmpsb
sti
pop
push
pop
lea
jg
push
cmp
aaa
sbb
pop
sub
inc
push
aam
adc
inc
and
gs
mov
insb
icebp
mov
or
int3
push
add
in
ja
jle
int3
andl
and
and
cs
xor
shlb
popf
pop
jne
rorb
cmp
add
xchg
ret
fcomp
jnp
cmp
test
mov
rorb
scas
sbbl
stc
lds
sbb
xlat
pop
jno
test
out
jmp
xor
pushf
insb
push
fistpl
iret
jbe
dec
xor
sub
and
hlt
pop
mov
lods
jecxz
pop
repnz
enter
and
inc
and
aam
aas
scas
stos
pop
negl
unpckhps
movsl
stos
fs
aam
mov
sbb
jo
js
fwait
adc
mulb
mov
dec
imulb
outsl
mov
nop
mov
cld
rcrl
push
call
push
imul
dec
pop
inc
mov
popf
pop
iret
std
push
fistps
int3
cmp
pop
addr16
sbb
outsl
ret
fists
int3
cld
inc
leave
pop
andb
cmc
in
pop
clc
pop
loopne
xchg
push
je
out
push
cmpsb
imul
push
cmp
inc
dec
fisubl
les
sbb
mov
dec
stos
shrb
gs
add
cli
cmp
outsb
cmpsl
cmp
inc
sbb
cmpsb
push
inc
push
mov
jno
jecxz
mov
pop
push
mov
adc
jne
mov
enter
aam
ret
jecxz
cmpsl
xor
dec
jbe
mov
push
fldenv
loopne
cli
and
cwtl
and
ja
cmp
xlat
jno
loope
push
pop
in
shlb
mov
aaa
pop
xlat
mov
xchg
pop
gs
mov
and
addl
ret
or
mov
dec
inc
popf
dec
add
cmp
int
out
pop
push
or
sub
xor
add
in
pop
sbb
roll
sbb
lahf
fstl
pusha
cmpsl
into
xchg
rcl
int
cmp
mov
dec
lock
jp
test
mov
fdivs
cmp
ja
inc
andb
rolb
test
rorl
jecxz
mov
repnz
mov
ja
push
iret
mov
inc
mov
add
cmp
or
add
sahf
xor
mov
xchg
popl
addr16
out
push
jge
jns
sahf
pop
lods
movsb
mov
adc
pop
push
inc
jmp
fidivl
and
aaa
inc
xorl
inc
loopne
loopne
lods
cmp
pop
add
mov
cmp
cmp
xor
jbe
mov
movsb
pop
xchg
pop
icebp
pop
icebp
sub
pop
test
cwtl
or
enter
popf
pop
aaa
dec
inc
jmp
std
and
lcall
pop
push
fwait
mov
rcrb
xor
sub
popa
loopne
xor
movsb
rcll
push
xor
stos
push
cmp
jle
repnz
int3
mov
adc
gs
xchg
xor
jmp
sbb
add
xor
out
adc
push
js
daa
loop
fstpt
mov
cmp
jnp
inc
push
mov
bound
cmp
imul
ss
repnz
push
sub
rolb
xlat
rorb
sub
mov
push
loope
jecxz
mov
mov
fiaddl
cwtl
imulb
sbb
fwait
enter
pop
jns
xorb
ret
jge
jne
fsubs
push
mov
jne
into
loop
mov
lahf
adc
lods
fmuls
out
test
icebp
or
dec
adc
out
jge
dec
push
cld
pop
pop
test
cmp
insb
sub
icebp
dec
sub
push
cmc
mov
in
jp
inc
imul
xor
xchg
enter
sbb
loop
sbb
or
out
mov
push
mov
test
add
push
push
in
iret
sub
dec
aas
jmp
inc
and
pop
fldt
sbb
pop
lcall
mov
xchg
sub
jg
xchg
cmp
imul
je
out
jnp
hlt
imul
aas
cli
mov
inc
adc
and
movsb
hlt
pop
repnz
iret
sti
pop
frstor
sbb
cmp
shll
in
popa
jecxz
dec
adc
mov
fcompl
leave
test
insl
add
roll
jno
cmp
mov
outsl
repz
sbb
mov
mov
inc
pop
jnp
iret
jb
inc
mov
ret
mov
pop
push
out
lds
mov
push
jge
jle,pn
jg
imul
cmp
scas
faddp
pushf
jecxz
sbb
mov
call
daa
mov
daa
jno
mov
push
sbb
inc
xor
test
dec
je
cmp
testb
in
int
cmp
pushf
xor
add
nop
pop
sar
sarl
jecxz
loope
push
cltd
xlat
dec
mov
cli
fiaddl
rolb
pop
fadds
push
js
daa
jmp
jns
mov
rolb
xor
rcrl
push
add
xlat
push
out
adc
mov
sti
fs
sahf
jno
out
jg
sub
imul
je
pop
xchg
inc
and
arpl
ret
into
jl
sub
outsw
scas
cld
fsubs
test
shl
or
jns
adc
jbe
aas
cwtl
je
add
cmp
shr
daa
jnp
leave
jle
das
push
stos
int3
jns
lcall
xor
mov
jle
cmpsb
ret
shl
or
sbb
inc
sub
cwtl
mov
movsl
lods
push
jnp
iret
lahf
mov
nop
dec
xchg
iret
test
inc
out
lods
or
mov
fiadds
pop
xchg
adc
rolb
jo
xor
xchg
int3
movsb
imull
cmc
nop
cli
push
push
nop
fdivrl
repz
cmpsb
pop
imul
lret
sub
and
in
xor
and
adc
fisttps
xor
dec
rclb
mov
inc
pop
inc
xor
aam
add
adc
addr16
js
dec
dec
inc
movsl
inc
call
dec
xchg
testl
sub
out
sbb
inc
andl
cmpb
sbb
testb
es
das
cs
sub
in
enter
pushf
fisubl
lahf
sahf
iret
int
fistl
or
adc
and
or
xor
in
adc
fs
inc
xor
push
stc
xchg
daa
jg
mov
cmp
cmpsl
ja
incl
cwtl
and
xor
orl
pop
ret
clc
inc
xchg
enter
mov
xchg
loop
xor
cmp
rorl
aam
ror
mov
fnstenv
cmp
mov
jnp
rorl
xorl
lcall
sub
xor
inc
dec
outsl
pop
scas
dec
test
imul
sub
out
sbb
ret
notb
cmpsl
pop
push
fsubrl
jmp
icebp
sar
and
jecxz
xorl
sti
lods
adc
or
arpl
sbb
pop
jno
data16
lds
cmp
arpl
loopne
mov
mov
push
mov
or
cltd
scas
push
sbb
mov
xchg
faddl
popf
je
adc
or
push
fildll
imul
jb
rclb
je
sbb
in
rclb
ret
pushf
add
bound
xchg
lds
addr16
dec
dec
popa
xor
aad
daa
cltd
inc
pop
ss
stc
push
mov
dec
lods
dec
aas
dec
mov
pop
pop
aaa
inc
mov
mov
dec
in
jb
pop
dec
in
icebp
lods
lock
jnp
ret
jo
ja
add
mov
mov
mov
rcr
cmp
dec
repnz
sbb
and
and
mov
pop
inc
out
xor
xchg
xchg
jle
cmpl
inc
push
cwtl
sahf
xchg
sub
imul
sub
ficomps
inc
sbb
dec
pop
lods
les
sbb
push
nop
test
bound
mov
movsb
fld1
out
pushf
or
test
or
leave
mov
inc
pushf
push
sbb
dec
gs
sti
cltd
out
stos
mov
add
jnp
cmp
rcl
adc
mov
jne
scas
in
or
loopne
mov
aad
xor
addb
jae
nop
fldcw
pop
cwtl
and
mov
sub
scas
cld
inc
fnsave
add
inc
sub
test
pusha
test
rcrb
jmp
loopne
stos
mov
jl
inc
mov
in
adc
fildl
wbinvd
cltd
pop
cmp
mov
mov
stos
xchg
in
jge
jbe
inc
aam
inc
sbb
jo
shl
add
pushf
fnstenv
lods
mov
dec
jns
jo
mov
cmp
mov
pop
cmpl
in
loope
adc
nop
mov
xlat
xchg
mov
mov
pop
fistpll
xor
loopne
ret
and
hlt
das
lock
orl
dec
js
xchg
mov
mov
movsl
ljmp
fisubs
ret
fisubrl
lock
inc
jg
mov
lahf
ror
ljmp
or
or
lahf
sub
pusha
and
adc
mov
jmp
aaa
pop
mov
mull
sbb
in
lods
cmp
cwtl
andb
repz
xchg
dec
and
orl
fldenv
sub
sbb
lds
mov
aaa
into
scas
or
inc
cli
jl
jle,pt
sti
inc
shlb
dec
inc
adc
adc
insb
inc
sbb
xor
jns
and
adc
scas
fcmovne
push
pmulhw
rclb
sub
xlat
stos
jae
mov
mov
mov
mov
sbb
inc
sub
fnstsw
cmp
scas
testb
mov
loopne
cmp
std
mov
sbb
pop
dec
pushf
push
es
mov
inc
xchg
shll
dec
in
mov
sub
leave
sub
insl
loopne
cmpsl
sbb
sub
in
mov
xchg
xor
pop
push
insl
sahf
dec
ja
ret
push
xor
jp
cmp
adc
push
mov
or
mov
jl
in
sub
cmp
cli
cmp
sbb
and
mov
dec
clc
loopne
fisttpll
clc
push
in
add
adc
nop
cli
sub
nop
dec
rorb
xor
sbb
stc
cltd
push
mov
nop
push
int
xchg
ret
xchg
enter
dec
lea
sub
nop
jmp
xchg
pop
lret
movsl
sbb
jae
sub
iret
xchg
add
xor
hlt
dec
xchg
imul
pop
sbb
or
cmp
xchg
inc
addb
xor
mov
add
cwtl
mov
lds
push
push
fwait
mov
aam
cwtl
loopne
jo
xor
es
push
lret
or
xor
insb
aam
arpl
cmp
dec
rorl
loop
jnp
mov
mov
lock
ljmp
pop
out
sbb
adc
sub
lret
adc
fldcw
imul
inc
mov
mov
mov
adc
jge
outsb
jns
lea
pop
int
xor
jb
mov
mov
pop
out
je
or
mov
inc
sbb
imul
rcl
mov
push
jne
dec
popf
mov
xchg
in
cwtl
outsb
push
loopne
in
enter
mov
ljmp
dec
inc
nop
mov
test
push
xchg
out
jmp
or
or
loop
and
adc
xor
and
fwait
cmp
push
mov
jbe
push
pop
das
adc
aas
jmp
je
stos
insl
or
mov
lock
lods
jmp
nop
inc
popa
jmp
fstl
push
rorb
sbb
arpl
ljmp
pop
or
jle
push
ja
mov
push
movl
xor
fidivrl
repnz
mov
lret
lcall
push
xchg
dec
inc
jbe
pop
cld
insb
add
sbb
xchg
and
cli
inc
test
outsl
sbb
jle
ret
shlb
xchg
lcall
pop
ljmp
in
dec
outsl
loop
ret
lret
les
mov
fbstp
sbb
and
inc
jne
or
inc
sahf
sarb
in
test
fimull
jnp
pop
aam
loop
push
insl
pop
jp
and
sub
or
and
sti
ljmp
pop
daa
out
inc
push
daa
outsb
xchg
idiv
mov
cmp
inc
subb
daa
pop
das
loop
xor
aas
mov
mov
and
jne
cmpsb
imul
xchg
shlb
inc
xchg
sbb
inc
jb
jnp
jge
xor
daa
mov
xchg
iret
mov
imul
int
rcrb
lods
cmpsl
maskmovq
mull
adcb
jb
enter
jle
and
cwtl
pushf
mov
inc
out
test
push
add
jp
sbbb
sub
out
cmc
pop
in
stos
xchg
out
jo
sarb
enter
lea
jnp
jne
lock
icebp
or
ja
aam
ljmp
into
test
inc
cs
cmovs
or
cmpsl
or
call
inc
fsts
lock
movsl
mov
sahf
push
in
and
mov
cs
sar
das
sub
fcoms
sbb
jmp
popa
adc
in
dec
and
int
fdivrs
dec
js
push
stos
push
test
push
or
dec
sbb
mov
mov
xchg
push
xlat
js
jge
fildll
dec
and
and
sub
mov
add
ret
dec
jmp
cvttps2pi
cltd
shlb
ljmp
mov
ss
xchg
add
pop
movsl
lret
sti
xlat
test
xchg
lret
jmp
push
sbb
ljmp
test
pop
scas
sub
stos
xor
sti
into
mov
cmp
jg
cwtl
sub
mov
cmp
ds
jae
fwait
inc
aad
jnp
sbb
outsb
fs
in
and
pop
adc
hlt
gs
lock
inc
cmp
out
out
or
dec
pop
or
or
xor
inc
jno
cmp
dec
sti
cmp
out
adc
test
je
push
ror
add
adcl
scas
jg
cmp
jns
jns
add
dec
mov
popa
sbb
jl
xchg
xor
movsl
pop
xor
imul
fwait
mov
roll
xchg
xchg
cmp
mov
pop
adc
outsb
jle
and
stos
les
aas
lret
sub
mov
mov
lret
cmc
fldcw
sbb
std
fistpl
and
lcall
xor
sub
add
mov
leave
mov
mov
daa
pop
rcrl
out
pop
mov
mov
ror
push
mov
jne
mov
ficomps
push
xchg
add
push
xor
das
aad
and
jno
mov
mov
mov
pop
and
pop
pop
xchg
and
ss
or
push
xchg
lds
push
and
push
rorl
dec
je
pop
inc
push
add
sub
push
pop
shll
jmp
and
push
out
mov
mov
outsl
addr16
jne
das
lods
addr16
stos
jp
fimuls
out
in
ds
push
jl
lods
pop
lock
adc
xlat
adc
fidivs
notb
xchg
jle
jp
imul
sbb
sub
or
xchg
pop
push
scas
enter
or
cltd
ljmp
ret
int
mov
add
cmpsb
pop
lods
jns
daa
xchg
push
pushf
dec
pusha
test
adc
pushf
xor
int3
push
ret
xchg
jbe
fdivrl
jle
pop
cmp
sub
outsl
cwtl
cmpb
mov
pop
mov
sbb
scas
adc
adc
inc
insl
fstpl
lock
xor
adcl
cld
push
cwtl
gs
cwtl
jp
inc
mov
dec
in
lods
xchg
sub
nop
mov
rcrl
adc
xchg
popa
pop
das
jmp
fs
addb
mov
push
andb
int3
insl
icebp
aad
adc
and
xchg
mov
dec
lret
push
test
push
push
jmp
fnstcw
mov
jecxz
ret
in
sbb
mov
or
or
leave
xchg
clc
push
jns
dec
fwait
mull
ljmp
les
xor
imul
movb
sbb
xchg
insl
int3
ljmp
jl
jg
cmp
mov
cmp
test
add
adc
movsb
stos
and
hlt
shl
pop
popf
push
mov
sub
cmpsb
adc
dec
xchg
aad
inc
repz
loope
jmp
in
jl
mov
test
and
imulb
out
jo
test
jmp
adc
adc
mov
pop
into
pop
out
icebp
mov
clc
and
jb
xchg
fbld
loope
xor
ret
adc
mov
push
push
sub
lahf
mov
mov
cmp
aas
fists
popf
outsl
je
test
cmp
mov
shll
cs
adc
sub
sub
push
mov
insl
cmpsl
mov
sub
imul
movsb
ficomps
lods
imul
xchg
lahf
shr
xor
inc
mov
das
push
sbb
cli
shlb
cmp
repnz
sub
je
mov
shlb
loopne
and
js
sub
insl
ja
pop
add
pop
testl
push
push
jmp
ret
outsb
mov
push
xor
mov
test
mov
lahf
mov
xchg
outsl
hlt
sbb
aas
inc
mulb
test
bound
add
pop
push
mov
dec
xchg
stc
stos
or
xor
ret
lods
cltd
enter
je
adc
inc
pop
dec
sub
lret
add
add
lods
stos
mov
fwait
mov
icebp
mov
jl
xchg
cwtl
jbe
xor
fldl
sarb
mov
mov
repnz
adc
ficomps
pusha
out
pop
mov
lcall
mov
sahf
push
fisubrl
pop
pop
fbstp
or
shrl
outsb
inc
shlb
nop
fstpt
mov
int
jo
or
xor
add
pop
push
mov
push
or
jle
js
enter
cltd
sbb
or
movsb
adc
xchg
shll
fwait
jnp
stos
fistps
add
xchg
or
bound
and
xchg
scas
lcall
cwtl
cwtl
std
mov
inc
dec
vpextrw
popf
call
sub
loop
cld
fldcw
xchg
sbb
sub
inc
test
adc
sbb
test
fdivl
orl
hlt
enter
fistps
xchg
fildl
idivl
popa
sub
mov
fstps
lahf
inc
aam
pop
adc
adc
dec
mov
jne
dec
mov
adc
jmp
test
cmpsl
inc
fimull
shrb
push
pop
inc
dec
jecxz
int3
cld
jae
push
filds
call
nop
cwtl
ds
fs
and
dec
out
popa
and
xor
xchg
pusha
pop
adc
adc
insb
add
aaa
pop
xchg
xchg
test
dec
cmpsl
mov
das
xchg
sahf
fcmovnb
icebp
fwait
test
insb
and
inc
sbb
cmp
ret
ret
cs
jl
add
adc
cmp
jb
in
xchg
mov
xor
xchg
mov
pop
in
cmc
adc
inc
and
sbb
adc
adc
std
pop
and
jg
sti
aas
mov
pop
pushl
mov
mov
add
jae
adc
cmpsb
or
repz
sbb
mov
or
sub
data16
or
dec
fwait
aas
stc
ss
fimull
mov
sbbb
dec
mov
push
push
sub
and
xchg
sbb
sbb
mov
movsl
fdivrp
add
out
xor
dec
sub
fistpl
mov
inc
mov
push
enter
lcall
movsb
subl
ficompl
shll
das
stos
fs
add
xor
mov
mov
ljmp
xchg
loope
or
mov
mov
daa
sub
flds
imul
xchg
cmc
in
add
sub
and
fbld
in
mov
mov
fs
jo
mov
xor
popf
and
sub
jl
lods
and
ljmp
xor
aaa
sub
sub
pop
mov
xchg
pop
mov
push
fsubr
cli
sti
dec
das
jo
aam
xor
pushf
aam
enter
jns
sbb
test
add
sub
fcomi
out
jge
loopne
or
pusha
and
lds
fmuls
imul
inc
mov
aas
clc
popf
dec
daa
jb
mov
mov
inc
test
cmp
mov
sub
pusha
jns
outsb
mov
bound
sub
sbb
cli
cmp
inc
scas
icebp
outsb
repz
pushf
push
mov
hlt
xor
mov
mov
xor
es
sub
jg
lret
adc
mov
pop
fucomi
cmpsl
push
pop
dec
daa
mov
pusha
mov
jbe
sub
pushf
xchg
lcall
mov
popa
sub
stos
xchg
sti
lret
jl
jns
fiaddl
or
mov
movsb
fmuls
and
jnp
popf
rolb
or
test
jmp
or
push
insb
push
cwtl
mov
int
int3
iret
jl
out
insb
es
fnstsw
pop
adc
mov
dec
testl
jmp
jle
mov
push
push
mov
movl
addr16
das
in
and
fsubrl
pop
aam
lret
or
lock
sbb
fistpll
movsb
or
jmp
outsl
adc
loope
inc
or
mov
sbb
mull
out
in
mov
lahf
xchg
jp
pop
shlb
add
pushf
insl
das
or
push
ljmp
ds
je
popa
inc
and
popa
bound
add
push
cld
push
test
fstpt
sbb
mov
adc
pushf
int
and
pop
mov
pop
das
lock
in
mov
clc
xor
sub
mov
xlat
mov
out
inc
push
xor
lret
aaa
mov
movsl
jnp
xor
dec
lea
stos
xlat
neg
and
sbb
pop
cmp
push
hlt
lret
mov
jbe
imull
jns
mov
movaps
mov
mov
xchg
add
popa
fcomi
loop
inc
adc
pusha
lock
mov
or
js
and
js
je
cmp
or
adc
or
dec
mov
and
outsl
int
adc
dec
cld
stos
cmpsl
jae
loope
add
mov
subb
dec
sbb
dec
cmpsl
push
jmp
repz
xchg
jno
jl
mov
add
mov
mov
rcll
or
out
pop
and
jecxz
fs
pop
pop
fwait
aam
adc
inc
mov
jg
mov
lds
push
pop
dec
push
dec
dec
mov
sbb
push
cmp
lds
ret
mov
dec
push
inc
out
xchg
adc
xor
dec
fsubrl
stos
daa
adc
rcrl
shrb
pop
or
movsl
adc
pop
or
call
fsubl
jmp
mov
clc
mov
lods
icebp
or
mov
adc
test
jecxz
fiaddl
lret
shll
pop
or
sti
fmuls
loop
popf
test
inc
mov
sub
aas
and
pop
int3
adc
fwait
cmp
daa
sahf
fisubs
fstps
cmc
jae
cmc
mov
pop
cld
aad
cmc
decl
fsubrs
jecxz
in
jb
xor
js
pop
xchg
repz
inc
pop
mov
int3
add
dec
adc
add
pop
add
iret
in
jg
roll
add
cltd
fwait
xchg
pop
fld
mov
pop
push
cmc
std
mov
fildll
jmp
and
xor
mov
push
ja
sti
ds
in
testb
mov
cs
leave
mov
push
loop
pop
je
fdivs
jo
dec
mov
pop
jmp
sbb
push
xchg
inc
or
imul
lea
adc
mov
push
mov
jmp
xchg
cmp
repnz
into
insl
and
push
data16
dec
cltd
add
in
add
pop
mov
int3
pop
mov
xchg
mov
cmpsl
pop
fs
inc
mov
or
js
lcall
pop
pop
test
enter
adc
pop
in
push
sti
or
mov
dec
pop
dec
mov
std
enter
mov
mov
mov
mov
sbb
clc
push
or
or
incb
dec
adcl
xchg
daa
sbb
jmp
sub
mov
pop
pop
inc
imul
ljmp
xchg
and
push
sub
pop
shll
adc
or
sbb
jne
dec
imul
pushf
popf
stc
mov
add
flds
and
aaa
aas
movsb
xchg
sbb
push
xchg
fbld
arpl
js
loop
sub
and
mov
ret
aaa
add
es
sub
xchg
out
les
scas
mov
sub
stos
jns
sbb
cmpsl
xchg
rclb
imul
sub
xchg
xor
clc
pop
or
xchg
jmp
mov
xchg
sbb
pop
inc
jnp
stos
xchg
push
adc
xchg
sub
arpl
xchg
rcr
adc
es
push
inc
movb
test
cmp
mov
outsl
fcmovu
in
mov
cmp
shrb
mov
gs
clc
dec
pop
outsb
subb
ret
xor
out
xchg
add
idivl
bound
or
aam
out
aas
pop
jg
adc
inc
fimuls
movsb
push
mov
and
mov
mov
fdiv
jg
mov
mov
int3
mov
loopne
sahf
mov
mov
xlat
inc
aaa
jo
dec
arpl
xchg
lret
push
push
mov
sub
mov
mov
lret
pop
mov
faddl
mov
dec
sbb
test
sbb
fstpl
or
push
push
in
scas
or
mov
mull
jae
push
inc
and
push
and
dec
mov
es
cmp
sub
or
cmp
xor
adcb
aas
push
push
icebp
cmp
mov
add
fwait
scas
fists
add
xchg
std
dec
outsl
test
das
js
mov
stos
jbe
xor
hlt
cmp
fildl
jo
js
into
cwtl
xor
popf
and
mov
and
repz
outsl
sub
outsl
aaa
dec
cmp
xchg
mov
xor
pop
dec
xchg
and
dec
ljmp
orb
cmpsl
into
sbb
fimuls
xchg
inc
sub
mov
push
sbbl
xor
and
xchg
sbb
icebp
and
and
imul
jbe
out
movsb
sahf
mov
rolb
mov
mov
loopne,pn
test
inc
jmp
ss
dec
test
xchg
pop
cmpsb
mov
aaa
or
pushl
sbb
movsl
dec
jmp
xor
les
adc
and
sub
aaa
adc
les
int3
cwtl
test
push
je
and
mov
les
movsl
xor
adc
hlt
fsts
sahf
imul
int
cmp
cmp
rcrl
ds
jmp
xor
sbb
add
mov
or
cld
loope
cli
rol
lds
call
cmc
call
push
insb
ror
sbb
push
cmpsb
mov
gs
dec
cltd
jmp
cli
icebp
scas
or
pop
cli
sub
out
xor
jl
in
add
xchg
jno
rorl
andl
in
movsb
idiv
stc
lahf
sub
sbb
call
mov
add
stos
cld
and
loope
push
lds
test
js
xchg
rorb
push
mov
aad
mov
sahf
cmp
sbb
inc
andb
push
mov
mov
cmp
test
xor
std
cmp
and
mov
mov
aas
cmp
cmc
lret
mov
int
lea
montmul
cmpsb
inc
mov
push
jg
movl
test
shll
sub
loop
push
jg
insb
sub
sbb
int3
and
cmp
popa
ret
cltd
popl
ret
rol
imull
loop
pop
ljmp
add
or
pop
or
push
in
add
in
imull
xchg
test
adc
ror
mov
xor
mov
or
insl
xor
frstor
mov
cmp
movsb
icebp
int
inc
inc
lds
inc
mov
outsl
cmp
jmp
ss
in
imul
mov
cltd
pop
inc
or
jl
pusha
dec
int
adc
mov
mov
jae
arpl
push
and
jno
mov
pop
sbb
js
call
fwait
and
xchg
dec
xor
mov
dec
dec
aad
inc
ret
je
pop
mov
jp
and
or
pop
aad
aad
stos
mov
ret
add
xchg
and
sbb
cmp
in
pop
push
popf
xor
mov
out
mov
icebp
mov
cmp
ja
fidivs
fbld
xchg
mov
data16
or
or
out
mov
add
mov
lock
pop
mov
jns,pn
pop
xor
mov
adcl
ja
jns
scas
sar
adc
jle
out
cmp
test
ficoms
call
ljmp
pop
mov
data16
adc
mov
push
popf
test
pushf
enter
dec
mov
in
dec
test
cs
loopne
mov
pop
ret
cmpsb
js
in
cld
pop
jb
add
or
sahf
mov
push
mov
sbb
mov
and
mov
pop
repz
pop
sbb
jnp
das
cmp
dec
jp
ffreep
mov
lea
and
cltd
lahf
imul
cmp
jno
jne
adcb
or
dec
jb
pshufw
shr
sbb
ja
nop
pop
out
sahf
out
aad
mov
xchg
inc
or
out
fcoml
and
jmp
sarl
sub
mov
sahf
notl
aaa
shl
mov
loope
add
dec
xor
add
stc
mov
mov
mov
xor
lret
sub
pop
mov
into
rcrl
cmp
ret
jno
or
or
jle
xchg
and
lods
mov
mov
adcb
fs
pop
and
jecxz
mov
nop
mov
movsb
pop
ftst
jb
imul
push
std
mov
mov
inc
dec
int3
or
pop
jmp
xchg
cli
loop
adc
mov
and
dec
insb
lds
push
in
rcrb
push
aaa
ja
pop
in
in
div
int
lods
int
repnz
cmc
out
stos
push
sub
mov
and
jge
es
pcmpgtw
or
push
sbb
mov
adc
dec
pop
ret
mov
mov
scas
outsl
sbb
mov
mov
sbb
insl
in
ja
iret
push
ss
icebp
mov
push
fisubl
mov
fstl
xlat
ljmp
adc
sbb
mov
lods
fmull
sbb
push
push
std
or
outsl
adc
stos
out
lods
negb
xorb
xchg
xor
lea
icebp
and
lea
push
xor
add
mov
or
int
pop
mov
pop
out
roll
mov
cmp
inc
mov
push
pop
jp
testl
push
adc
xchg
movsb
adc
lahf
mov
sbbb
mov
and
sar
adc
shr
pop
lcall
lods
iret
mov
cmp
mov
fidivrl
inc
aam
repnz
sub
aas
loope
inc
xchg
outsl
or
lahf
aam
fistps
es
mov
fcoms
js
sub
ret
mov
fdivrl
pop
out
push
jg
cmp
xor
add
fisttpll
pop
sub
ja
adc
adc
pop
jecxz
scas
push
add
in
notb
mov
adc
add
xchg
and
mov
and
lret
mov
jnp
cwtl
add
das
jle
lods
repz
roll
fildll
push
push
cwtl
and
bnd
sbb
jmp
mov
shrl
xlat
nop
insl
dec
add
std
or
sbb
inc
dec
mov
nop
ret
push
cmpsl
dec
cmp
pop
rep
in
pop
call
inc
pushf
mov
jge
mov
cmp
iret
jns
adc
push
adc
jge
es
int3
je
cwtl
and
push
pop
jnp
movsb
add
test
addr16
lret
data16
movsb
popa
insb
arpl
push
push
ljmp
icebp
leave
mov
lds
loop
and
shrb
xor
sbb
inc
test
xchg
adc
adc
dec
sub
fnstsw
je
or
in
lret
fs
nop
xchg
popa
add
cmp
fwait
sahf
lods
dec
roll
jecxz
aad
je
addr16
adc
push
ret
bound
mov
pop
mov
xor
mov
movsb
add
lret
add
jmp
push
xchg
mov
add
cmp
cmc
inc
or
fdivs
sahf
je
sbb
fs
stos
pop
push
lods
mov
scas
cmp
shr
out
cmpl
shrl
jno,pt
mov
mov
push
repz
mov
les
cwtl
push
pushf
pop
out
or
adc
loope
mov
xor
ljmp
inc
cmp
lcall
mov
in
dec
xchg
mov
addr16
or
mov
fldl
sbb
mov
repnz
or
data16
frstor
and
mov
dec
xchg
mov
inc
test
popa
fistpl
cld
popf
sub
adc
mov
sbb
inc
jg
shlb
popa
jmp
jg
xchg
push
aaa
sbb
push
int
dec
in
lods
movsl
stc
or
xlat
or
mov
in
mov
adc
ret
ret
xor
inc
cmpsb
jecxz
mov
ret
push
fisttps
jge
inc
pop
push
jmp
out
mov
pop
and
xchg
mov
cmp
shlb
aas
fnstcw
fs
shrb
lret
ljmp
add
push
int
inc
test
adcl
or
subl
pusha
pusha
ja
mov
cld
mov
inc
push
pop
adc
iret
inc
xor
iret
inc
add
push
int3
ret
aam
xchg
imulb
call
ret
pop
shrb
mov
sbb
pop
jns
inc
dec
cmp
adc
adc
add
lret
es
out
movsb
movsl
mov
dec
adc
rorb
push
aas
jmp
xchg
inc
add
insl
je
pop
adc
repnz
jmp
into
in
jbe
sbb
fsubrl
in
iret
loope
fdivrp
pop
aas
mov
int
frstor
push
test
fcoms
pop
dec
scas
sbb
cld
mov
add
or
xorl
in
jb
insb
xor
xor
movb
mov
cld
mov
bound
jbe
push
sub
loopne
cmpsb
mov
push
adc
in
mov
out
inc
add
sbb
dec
pop
jbe
clc
loope
pop
sub
ret
xor
adc
push
movsl
xor
mov
imul
inc
pop
sub
fsts
push
mov
bound
sbb
fwait
jb
pop
cmp
lock
mov
sub
test
shrb
or
aad
jmp
push
sbb
aam
test
shrl
insb
push
testb
pop
pusha
mov
fistpll
xchg
inc
xor
jg
cmp
mov
push
es
cmp
or
arpl
nop
xchg
pop
inc
pop
loop
mov
sti
sar
inc
xor
out
sbb
fisubrl
add
sub
pop
aaa
mov
aas
pop
mov
push
cwtl
les
fst
add
sub
sub
outsb
shrl
push
in
cmp
adc
add
idivl
das
xor
dec
mov
add
test
out
subb
lock
push
or
fcmovb
idivl
mov
inc
mov
mov
push
and
mov
push
mov
insl
ret
enter
cs
adc
aad
lock
xorps
es
xchg
mov
or
dec
mov
xor
cmp
or
inc
stos
cli
xor
and
lds
sub
sbb
cmp
pushf
mov
pop
cwtl
pushl
je
pushf
stos
fsubr
pop
and
push
sub
int3
mov
ret
aam
cmc
xor
cmpsl
sub
in
inc
push
and
xchg
jl
inc
fwait
mov
and
fldenv
jne,pn
mov
aam
test
mov
leave
daa
sub
mov
mov
sub
les
add
xorb
and
js
fsubl
and
and
xchg
adc
mov
repnz
mov
hlt
xchg
fwait
cs
rolb
loopne
inc
sbb
sbb
dec
into
push
xor
icebp
call
sub
ficomps
jno
mov
gs
fimuls
sahf
inc
or
enter
cmpsb
pop
cs
lcall
jnp
pop
cmp
mov
push
adc
pop
pop
and
sti
repz
or
repnz
loop
sahf
mul
jnp
xor
jb
in
mov
mov
jnp
xchg
mov
movsb
fs
dec
pop
imul
leave
mov
push
and
jg
aam
cs
mov
pop
or
ret
test
repz
jno
pop
andb
lahf
cmp
fisubrs
cmp
test
add
aam
and
aaa
pop
fldenv
out
loopne
mov
jno
loope
int
popl
in
outsl
enter
out
mov
pop
xchg
and
sbb
jge
inc
call
xchg
mov
insb
push
js
mov
jle
adc
mov
in
addr16
cli
daa
add
cltd
mov
jbe
sub
push
dec
out
adcl
or
lock
call
xchg
cmpsb
fadd
out
sbb
out
pop
and
fwait
pushf
push
add
arpl
mov
cmp
ja
lods
or
xchg
sahf
pop
stos
daa
adc
adc
cmp
pop
jnp
stc
cmpsb
fmuls
inc
jne
hlt
lods
stc
mov
fildll
jge
lea
push
cmp
pushf
pop
jo
cwtl
sub
xchg
ja
stc
add
mov
jbe
movsl
repnz
xchg
cmp
inc
inc
cltd
mov
inc
mov
jnp
xor
sbb
mov
or
adc
loope
jb
inc
icebp
pop
mov
push
sub
imul
adc
imul
stos
adc
push
clc
and
pop
xchg
cmpl
bnd
mov
ficompl
popf
ja
subb
aas
lock
cmp
push
or
arpl
add
jae
cli
mov
add
push
dec
nop
jecxz
mov
push
adcl
shrb
xchg
cmc
imul
inc
fistpl
shrl
push
xor
xchg
xor
inc
jns
pop
dec
out
inc
push
mov
inc
xchg
ror
sti
pop
aad
mov
mov
les
adc
add
iret
daa
and
add
push
shll
stos
call
sub
inc
aas
sti
test
and
push
jae
adc
pop
cmp
pop
call
pop
mov
xchg
mov
cmpl
jmp
add
push
mov
in
sub
lcall
xorl
mov
inc
nop
imul
inc
pop
jbe
or
mov
jns
rcrb
hlt
mov
pop
lahf
movsl
in
add
mov
and
stos
inc
xchg
outsb
test
cmpsb
lahf
mov
test
and
jnp
cs
add
test
arpl
and
add
cmp
in
mov
clc
jae
mov
push
adc
push
mov
or
jmp
inc
xchg
push
cs
cwtl
call
call
and
pop
inc
xchg
adc
mov
inc
add
adc
inc
xchg
push
adc
ror
or
push
and
xlat
sti
mov
sub
inc
ret
lret
lea
and
sbb
arpl
sbb
push
cld
stos
xlat
stc
push
stc
add
jnp
iret
jnp
jno
dec
mov
jmp
push
test
loop
jbe
lods
cmp
push
aad
aam
adcl
xchg
pop
pop
xchg
insl
pop
pop
sbb
inc
mov
cmp
ds
mov
fists
xchg
shlb
repz
mov
push
push
jle
repz
out
inc
insl
and
push
in
fisubs
adc
pusha
movsl
arpl
push
xor
sbb
cmc
int3
outsb
cmp
inc
mov
stos
out
mov
inc
push
dec
mov
sub
mov
jp
push
adc
aad
add
loope
push
pop
loope
mov
jp
xor
cmpsb
lds
testl
inc
lahf
imulb
bound
jae
mov
fsubs
mov
sub
xchg
mov
insl
mov
fwait
jmp
stos
jmp
jl
les
xchg
lret
push
aam
push
and
adc
and
lods
sbb
xchg
int
pop
aam
add
mov
dec
and
jmp
xor
enter
inc
in
test
push
call
andb
sbb
in
add
adc
test
ja
or
lcall
and
xor
jmp
insb
mov
sub
mov
mov
in
scas
xchg
fnstsw
cmp
test
enter
mov
insb
lods
push
sbb
push
mov
jg
sbb
or
inc
jb
andl
and
ja
subl
fiadds
sbb
add
push
sti
mov
pop
xchg
shrl
jno
mov
mov
repz
push
adc
and
xchg
mov
fdivr
push
jecxz
mov
jle
mov
movsl
out
stos
xchg
adc
fwait
push
push
pop
cmpsl
push
sbb
jb
push
add
add
flds
mov
or
pop
jmp
sub
sub
fdivrs
xor
push
pop
pop
test
add
nop
jl
and
lea
xor
xor
inc
jb
arpl
xchg
imul
ret
stc
movsl
fwait
arpl
xchg
dec
incb
inc
cmp
pop
test
xchg
add
and
fimull
jle
pop
cmc
push
mov
adc
inc
xor
aam
jecxz
stos
mov
mov
arpl
mov
jge
scas
out
mov
movsl
nop
js
test
testb
adc
or
jbe
and
fbld
in
mov
stos
movl
jge
cmpsb
es
inc
cld
cmp
test
jnp
jae
stos
mov
adc
mov
and
pop
jne
gs
clc
jns
pushf
pop
sub
bound
sbb
lea
orb
pop
jbe
sub
jmp
mov
fs
and
cmp
xchg
movsb
clc
hlt
sub
stos
mov
xchg
loope
test
imul
pop
xor
jae
jp
adc
jo
lahf
stos
mov
lods
movsl
je
add
and
jecxz
inc
pop
test
mov
ret
sbb
arpl
mov
loopne
scas
lret
dec
stc
jecxz
sbb
jmp
out
jl
shlb
ficoml
mov
pop
cmp
jg
and
push
ljmp
dec
int3
mov
or
mov
loope
movsb
out
sub
xchg
jg
cltd
cltd
jg
adc
or
fwait
lcall
inc
in
in
adc
jae
popa
aaa
orb
es
xor
add
mov
and
mov
jmp
mov
leave
dec
aam
rep
leave
sub
test
fbstp
jmp
pop
imul
sbb
popf
and
jne
xchg
lods
sarl
ss
sahf
scas
ret
push
adc
cmp
and
add
adc
pushf
pushf
fisubl
fwait
xchg
pop
inc
xchg
lahf
lcall
push
pop
add
push
pop
add
and
cmp
call
pop
adc
les
cwtl
rcll
ljmp
pop
mov
in
xchg
sub
mov
stos
jl
lock
in
sbb
push
ret
and
rcrl
lods
sbb
mov
test
pop
imul
pop
add
mov
mov
test
inc
aam
jb
or
add
out
orl
loop
cli
dec
inc
sti
mov
cmp
call
and
mov
mov
mov
es
leave
adc
jnp
test
and
mov
xchg
pop
fwait
push
aam
shl
sub
movsl
ret
mov
lods
mov
ss
push
xor
es
mov
inc
pop
shlw
jle
cmpsb
lea
jl
testl
sbb
les
xchg
jb
jbe
xlat
pop
aas
adc
testl
jecxz
and
xchg
movl
scas
push
lahf
push
das
nop
and
pop
in
cmp
sbb
mov
dec
je
add
or
cld
inc
in
sub
xchg
xor
pop
data16
sti
test
or
jno
in
sub
fwait
sub
sub
jmp
jg
mov
mov
scas
popf
mov
pop
jno
dec
pop
or
movsb
out
xlat
sub
inc
or
adc
fwait
insl
mov
jns
repnz
sahf
mov
jmp
cs
and
mov
mov
ljmp
push
push
dec
cmpsb
inc
rcr
xchg
push
sub
imul
add
xor
loop
sbb
and
xor
test
iret
jecxz
cmp
mov
cmpsb
sbb
adc
lcall
push
out
push
into
repz
xor
mov
sbb
movsb
push
imul
push
imull
sub
fisubrs
fistps
jb
or
mov
push
lock
in
mov
pop
pusha
lea
push
movsb
mov
jg
idiv
or
pop
push
pop
adc
mov
mov
add
out
jb
xlat
sub
movsl
movsb
outsl
or
sbb
adc
les
sub
sti
cli
or
outsb
in
push
cltd
cmp
outsl
sub
leave
cmp
lahf
cmp
push
aaa
push
jg
inc
mov
fdivs
jbe
es
pop
enter
out
das
jge
jl
cmp
dec
or
pop
xlat
or
mov
iret
push
or
inc
pop
cltd
lcall
xchg
incb
int
xor
cmp
test
out
jmp
push
mov
movsb
push
into
adc
mov
sub
xchg
sarb
cmpsb
jo
inc
fldenv
inc
mull
pop
jp
loope
dec
jno
hlt
adc
xchg
and
xchg
fists
ja
ds
pop
push
addr16
test
lea
cmp
int3
sub
push
or
loop
rcrb
les
cmp
stc
xorl
dec
test
adc
enter
push
nop
fxch
aas
mov
test
mov
pusha
jecxz
pop
jl
lcall
mov
fcmovne
jo
lret
loope
popf
test
mov
and
jno
push
les
insl
pusha
mov
or
sub
push
mov
pop
daa
and
shlb
rcrb
mov
and
andb
out
andb
sub
jg
adc
mov
stc
cmp
push
notl
pop
movsl
les
outsl
rclb
xor
in
cmp
pushf
push
ret
clc
test
jl
data16
cmp
lret
xchg
push
ljmp
shl
clc
dec
or
fiadds
mov
dec
and
movsb
sbb
int3
lea
popf
inc
clc
xor
jnp
jns
fld
fwait
jno
scas
sub
sahf
fdivl
jae
xor
xchg
ret
test
adc
xchg
fwait
xor
or
call
outsb
jl
lds
daa
fmul
jmp
fadds
scas
jmp
xchg
fiaddl
cmp
pop
dec
push
xchg
xchg
pop
in
pop
xor
pop
xchg
imul
push
mov
imul
sub
push
mov
push
outsb
push
xor
pop
outsb
testb
xor
or
mov
mov
movsl
in
mov
lock
mov
inc
cli
pop
pusha
hlt
fldt
stc
cmp
pop
mov
xlat
sbb
mov
insl
adc
pop
jge
add
gs
stc
push
inc
add
xor
xor
xchg
bnd
or
xchg
fwait
mov
or
xor
in
cli
ret
outsb
fwait
lret
mov
bound
jnp
jle
popa
push
int3
inc
outsb
or
mov
scas
das
fidivl
fildl
adc
adc
in
adc
mov
imul
pop
andb
push
out
jnp
inc
pop
adc
xchg
xor
xor
arpl
ljmp
push
mov
out
ljmp
stos
xchg
push
xchg
push
dec
xor
mov
cwtl
push
lea
xchg
pop
fnsave
rol
out
inc
insb
out
rol
mov
fsubs
mov
syscall
loop
jb
mov
mov
loopne
mov
outsb
ja
or
push
mov
pop
mov
xor
pop
mov
aam
pushf
fsubrl
loop
jge
scas
sbb
inc
push
cmp
shlb
xor
popa
or
inc
in
bound
mov
mov
xor
inc
adc
daa
sti
stos
mov
cld
insw
dec
push
adc
mov
out
pop
fwait
and
push
out
and
test
cmp
insb
dec
and
cmp
mov
jno
push
and
pop
jns
daa
fistpl
rol
hlt
mov
je
jg
aam
jmp
das
mov
inc
push
insl
mov
mov
sub
cmp
dec
sahf
into
ds
cmp
iret
lahf
and
sub
pushf
xor
mov
loop
mov
jo
into
push
rorl
lods
jnp
jb
mov
push
xchg
mov
xrelease
mov
jge
out
mov
push
sub
cld
sub
xor
jns
jg
sahf
aas
shll
outsb
mov
orl
dec
sbb
loop
cltd
sub
dec
pop
sti
inc
mov
add
fwait
aas
sub
dec
push
iret
pop
xor
jmp
inc
imul
ret
rorl
or
push
pop
test
or
cld
mov
je
push
sbb
ja
jle
and
lds
mov
xor
mov
cmc
ret
aas
dec
fdivp
mov
sub
adc
cltd
sbb
pop
mov
ss
fldl
popf
pmaxsw
cmp
lods
add
and
cs
idivb
js
sub
push
aad
ret
repz
int3
mov
sbb
in
push
movsl
xor
ss
rorl
mov
lcall
cmp
push
mov
jb
andl
popa
inc
sbb
insl
xor
mov
push
jp
out
mov
pop
sar
daa
push
mov
in
pop
adc
jb
pop
orb
mov
cmpsl
cmp
jae
cmp
pop
push
push
cmp
jns
push
push
xchg
xlat
cwtl
jmp
lcall
aaa
mov
jne
nop
movsl
and
stc
inc
push
icebp
mov
sbb
pop
mov
inc
jg
leave
addb
or
cltd
scas
in
pop
cwtl
out
cmpb
sbbl
jmp
mov
mov
jo
stos
adc
test
packuswb
aaa
dec
pop
xor
xor
scas
mov
test
stos
xchg
jl
cmc
dec
xor
and
jno
cld
jp
add
dec
cmp
icebp
scas
shr
movsl
mov
popa
push
xor
jnp
push
cld
andl
cltd
stos
loopne
movsb
sbb
into
jle
dec
idiv
stc
out
movsb
ret
add
mov
cmp
jp
cmp
sbb
lret
or
jmp
inc
xchg
jp
bound
insl
cmp
es
mov
pop
insl
std
idivb
movsl
in
inc
movsl
push
out
iret
enter
clc
jo
fisttps
push
cmp
xchg
bound
sarl
jae
adc
stc
push
loope
cmp
adc
jmp
mov
jge
out
das
shrl
and
push
mov
pop
call
sub
int3
jg
sub
push
lds
ja
inc
dec
mov
push
mov
inc
dec
repnz
adc
xor
fstpt
jb
repnz
jge
add
inc
int3
lret
xor
dec
outsb
popa
popf
and
shrb
rcrb
and
sub
fwait
sub
and
sti
movsb
push
push
lods
cmpsb
sub
dec
fmull
ret
adc
pop
rorb
into
jns
gs
out
repnz
in
movsl
das
mov
arpl
negl
aaa
inc
pop
nop
mov
pop
leave
ds
out
jg
jae
or
xcrypt-cbc
cmpsl
push
dec
xchg
pop
mov
cmp
pop
push
scas
sub
mov
aaa
pop
pmaxsw
xchg
fisttpll
std
rorl
js
clc
push
mov
or
insb
pop
addl
pop
push
or
insl
loope
dec
push
call
push
fcmovu
cmp
in
push
icebp
in
xchg
fisubrs
push
sub
dec
sub
fisttpl
push
cltd
loop
div
fildl
xlat
addr16
and
inc
pop
cmp
in
mov
mov
adc
repz
mov
push
mov
mov
mov
ret
stos
mov
cmpsl
arpl
mov
addr16
xlat
and
inc
std
fsubrs
mov
and
or
mov
fimull
xor
inc
outsb
in
jecxz
pop
adc
shrb
adc
xor
daa
cmpl
cmpsl
mov
sbb
jno
hlt
and
lds
cmc
in
scas
movsl
push
or
or
pushf
add
xchg
pop
mov
rcr
ds
aam
stos
add
ficoml
lahf
call
mov
ss
dec
pop
imul
xchg
repz
pop
mov
sub
push
xor
or
cld
lea
mov
xchg
lods
mov
pusha
loopne
pop
lahf
xchg
sub
or
and
nop
fisubrs
lea
fpatan
sub
cmp
dec
imul
dec
and
jle
cmp
fimull
movsl
mov
mov
lret
and
dec
push
sub
lods
pause
int
cmpsl
mov
pop
and
cmc
lcall
pop
cmp
mov
push
pop
jns
js
shl
dec
mov
inc
jl
adc
pop
pop
push
xchg
xchg
shlb
adc
or
filds
rcrl
mov
mov
out
adc
shlb
sbb
push
sbb
scas
jecxz
mov
mov
ret
fiaddl
dec
js
mov
push
jl
dec
adc
outsl
cmpsl
call
mov
or
stos
test
lahf
xor
icebp
lods
aad
cmp
push
jl
hlt
std
iret
cmp
scas
jbe
mov
push
adc
mov
mov
pop
test
loop
std
fldl
loopne
or
out
inc
xchg
lods
leave
push
and
jno
xor
add
cwtl
nop
xchg
pop
in
repz
mov
cld
sbb
loop
xchg
sub
sbb
enter
fdivl
test
mov
lahf
inc
mov
rol
mov
xchg
push
or
jbe
jmp
push
inc
push
xor
fwait
test
loop
pop
insb
mov
xchg
mov
xchg
and
push
sbb
sub
inc
mov
ret
lods
push
mov
std
ror
mov
iret
jmp
imul
push
ret
jmp
je
aas
dec
inc
adc
insl
mov
mov
mov
mov
sub
adc
mov
mov
push
rolb
xor
add
pusha
cmpsb
test
jecxz
ds
lcall
pusha
push
stos
inc
loopne
add
sub
xchg
pop
addr16
mov
inc
mov
or
xlat
inc
test
cltd
push
xlat
das
mov
pop
ficoml
pop
xchg
mov
bound
and
scas
movsb
adc
mov
jmp
mov
stos
jnp
rcr
mov
mov
mov
or
dec
dec
jmp
jo
test
stc
icebp
or
repnz
and
loopne
cmp
adc
nop
add
ror
stos
push
mov
adcl
addr16
inc
jbe
repz
in
push
inc
popf
enter
aam
sbbb
jmp
scas
test
xchg
or
add
dec
repnz
into
dec
loop
pop
dec
inc
add
sbb
pop
inc
fistps
test
dec
fidivl
sub
sbb
xor
mov
fwait
scas
add
fucomi
mov
sub
jge
sbb
addr16
adc
sub
lock
mov
call
and
ljmp
cmp
insb
mov
adc
cmp
mov
jecxz
cmpsl
pop
es
jnp
in
cmp
cli
out
jg
mov
std
add
jae
xchg
aam
lock
test
jbe
sbb
das
ficomps
push
ds
cmp
mov
in
shrb
lea
xor
int3
and
push
pop
stos
loop
in
mov
ss
cmpsl
inc
push
lock
ficoms
test
bound
add
out
pop
mov
xchg
xchg
add
xor
js
arpl
ja
sbb
mov
mov
stos
xchg
lret
pop
push
xor
and
adc
xlat
push
sub
sahf
push
inc
push
mov
aad
mov
roll
lods
outsl
sbb
outsb
mov
rcrb
mov
inc
inc
cmpsb
in
and
cmp
pop
ss
cmp
out
movsl
or
push
addr16
mov
pop
in
notb
lods
scas
xchg
mov
sbb
aaa
and
pop
xchg
popa
fcomi
jns
mov
mov
mov
adc
sbb
es
or
cmp
push
outsl
test
push
cmp
jge
adc
into
jmp
pop
inc
fisttps
pushf
repnz
mov
lret
fisubl
and
xchg
mov
jle
insb
dec
imul
fs
mov
addb
cmp
or
and
push
jo
push
push
testb
push
lds
jge
and
jb
adc
add
mov
and
cli
mov
push
mov
shlb
mov
sbb
cmp
lock
pop
bound
adc
xchg
scas
inc
fsubl
xchg
and
fsubs
mov
lds
pop
out
adc
scas
rcrb
xor
aas
sbb
test
int
mov
pop
mov
mov
sbbb
or
pop
scas
insl
lcall
pop
inc
aam
loope
mov
pop
les
mov
mov
lods
push
mov
cwtl
stos
jg
xor
in
push
cmpsl
mov
mov
mov
and
movsl
dec
rorb
sbb
rclb
cmpsl
and
cmpsl
mov
and
xchg
imul
pop
mov
mov
movsb
and
mov
out
mov
xchg
out
sbb
pop
cmc
inc
push
std
jne
mov
les
xchg
mov
cmp
addr16
push
sbb
movsl
inc
dec
and
js
shlb
pop
shrb
lcall
jle
dec
gs
bound
xchg
ss
adc
dec
pop
xchg
xchg
fs
mov
jge
lcall
cli
daa
xchg
pop
dec
shlb
sbb
inc
xchg
jecxz
xor
stos
jb
jge
jb
pusha
lea
cmp
jae
pop
sub
ljmp
jmp
arpl
das
enter
rorb
out
mov
dec
xlat
jl
or
push
sub
cmpsl
adc
sbb
mov
daa
loopne
add
xor
xlat
or
push
mov
mov
push
add
push
std
xor
lods
and
mov
mov
sub
fistps
add
cmp
cmp
in
xor
mov
cmp
or
push
lea
lock
loop
lods
push
outsl
pop
dec
stc
call
setno
stc
xlat
mov
sub
les
mov
fs
mov
inc
rolb
mov
or
divl
js
loopne
and
nop
xchg
cmpsl
cmp
iret
and
shrl
inc
jp
cs
push
enter
das
loopne
xor
rcl
mov
lock
andb
shll
push
es
lods
loope
mov
xor
out
aaa
pushf
pop
or
adc
mov
loop
cld
lock
push
call
push
cli
fisubs
mov
jle
inc
jae
movsl
push
push
jae
xchg
or
ret
mov
movsl
and
push
mov
cmp
rolb
cmp
imul
insl
fs
mov
dec
inc
and
jle
aas
jne
adc
out
and
rorb
and
mov
mov
xchg
push
mov
sbb
push
lods
jbe
xlat
pop
lret
cmp
jns
mov
lods
fsub
jb
and
cld
xchg
sub
push
les
btr
cli
dec
cwtl
lcall
testl
stc
lahf
cmp
in
divb
rclb
xchg
inc
xor
lods
push
push
and
movsb
cs
mov
arpl
mov
ja
lahf
fistps
data16
cmpl
out
jmp
fisubrl
out
pop
aas
mov
ret
lds
dec
jmp
add
loope
fldt
fldl
cmp
gs
jg
or
insb
or
dec
lods
int
push
call
jae
ja
dec
mov
fmul
orl
mov
inc
or
mov
aas
lea
hlt
je
mov
xchg
xor
add
jmp
scas
pusha
xadd
jnp
pop
jo
mov
aas
fimull
stos
hlt
lods
cltd
lock
xchg
and
mov
push
adc
notb
iret
in
mov
cmp
imul
mov
and
shrl
bound
dec
imul
roll
popaw
mov
cmp
dec
add
pop
dec
and
or
adc
inc
in
xor
das
jbe
sbb
mov
cmp
ja
out
add
fsubrl
test
and
inc
push
add
pop
ds
scas
outsl
push
in
mov
mov
jns
cmp
rorb
aaa
scas
outsl
std
fldenv
cli
xor
sahf
int
push
dec
mov
cmc
add
mov
cli
mov
jno
loop
pop
pushf
mov
xlat
loope
cmp
jp
frstor
push
cmp
popa
shrb
cli
inc
cmp
bound
iret
xlat
test
repnz
sub
inc
test
cs
pop
out
mov
pop
mov
movsb
mov
and
hlt
and
orl
pop
fildl
inc
cltd
loop
ljmp
mov
mov
int3
mov
mov
pop
mov
daa
sbb
sbb
mov
or
orb
mov
rcl
into
push
jp
bound
xchg
jecxz
test
sbb
push
jg
shl
in
sbb
movsl
jns
mov
sbb
sub
push
repz
inc
add
gs
aad
sub
mov
xchg
icebp
pop
mov
xchg
xchg
ds
je
xor
push
sbb
mov
push
movsb
arpl
ljmp
jle
leave
test
mov
test
movsb
mov
inc
stos
mov
dec
std
inc
mov
cmp
mov
push
insl
dec
inc
lods
cmp
jb
cltd
sti
dec
mov
xor
int3
aam
add
test
and
pop
mov
aaa
mov
cmp
xor
into
loopne
mov
xchg
dec
pop
push
xlat
ret
mov
inc
dec
fidivrs
jl
mov
mov
rol
jne
mov
lcall
pop
orl
fldcw
rclb
push
movsl
mov
daa
or
fs
jo
jb
call
sbb
dec
jle
loopne
hlt
pop
mov
inc
adc
outsb
icebp
and
les
jge
jo
mov
sbb
sub
jmp
lret
and
sub
push
mov
cmpsb
scas
cmp
sub
mov
jne
mov
bnd
push
test
popa
lea
std
dec
out
js
add
push
popf
cli
jns
cmpsb
stos
insb
mov
fists
fadd
inc
data16
xchg
jle
cltd
std
add
push
sar
cmp
add
pop
ljmp
cmp
mov
sub
rolb
sub
into
push
ds
add
lods
dec
js
mov
push
nop
movsb
jo
add
hlt
aas
fbstp
lea
xchg
cmp
xchg
push
cli
imul
inc
add
xchg
lods
mov
mov
lret
push
sti
mov
hlt
movsl
mov
and
mov
loopne
lahf
xchg
xchg
sbb
push
mov
jle
insb
mov
push
jle
push
and
cwtl
sub
sbb
ret
mov
stos
ds
scas
sbb
mov
cmpsb
xorb
push
out
sbb
pop
add
hlt
shll
mov
jl
test
mov
mov
push
stos
sub
enter
cmc
pop
and
ljmp
loope
int
mov
xor
rcr
dec
sahf
mov
ljmp
xor
fs
xchg
cs
and
lea
mov
xor
test
dec
inc
sti
mov
jne
cmp
hlt
or
ffreep
sbb
in
enter
rorb
icebp
lods
fldl
imul
cmp
pusha
mov
call
lret
in
mov
sti
imul
push
insb
sbb
dec
sbb
popf
mov
popf
rolb
pusha
lock
adc
and
pop
sbbb
daa
stos
hlt
jo
mov
jp
and
mov
scas
mov
mov
int3
mov
add
outsb
mov
ror
dec
pusha
pop
adc
push
push
mov
add
out
cmp
adc
testl
sbb
xchg
rorl
jg
mov
fstl
rcrl
aaa
adc
test
ljmp
inc
mov
jb
push
mov
adc
test
adc
enter
lret
lret
xor
push
push
lock
test
xchg
out
rcrb
cmp
leave
insb
sbb
add
cwtl
daa
jl
pusha
int
clc
sbb
decl
emms
rcll
and
jle
daa
ja
cltd
es
push
lods
mov
int3
and
subl
jmp
int3
jns
or
out
mov
daa
mov
pop
out
jne
push
or
outsb
adc
pop
mov
xchg
sub
aas
outsb
push
in
mov
aaa
jl
aaa
xchg
out
lahf
lcall
add
xlat
rorb
inc
xchg
dec
out
xchg
fisttpl
or
das
and
outsb
push
jo
dec
xor
out
lahf
pop
sbb
js
sbb
mov
xlat
sub
addr16
sbb
fsubr
xchg
jecxz
or
imul
and
testb
std
dec
mov
cmpb
mov
aam
push
aaa
push
mov
inc
push
push
and
mov
add
push
ja
mull
insb
xchg
sbb
loop
clc
sub
jl
push
jns
push
divb
std
xor
xlat
ret
sbb
leave
ds
outsl
add
mov
pop
push
iret
jb
cmp
jae
mov
mov
jp
xchg
gs
adc
push
sub
xor
mov
in
xor
cmp
rcll
gs
jle
scas
mov
lods
sub
and
fsubrs
enter
jo
push
cltd
fs
jmp
push
inc
mov
idiv
sub
push
push
cmp
push
stc
and
dec
push
jecxz
mov
jns
fstl
insb
std
enter
int
cs
pop
xor
shl
xor
pop
dec
adc
fidivs
sub
repz
add
ss
js
gs
clc
mov
dec
adc
nop
push
aad
lock
movsl
ficoml
add
outsb
cmpsb
in
push
mov
jg
xor
cmp
hlt
push
mov
out
repnz
aas
jp
cmp
ds
xorl
cmpsl
mov
mov
jb
mov
pop
sub
inc
adc
pop
stos
dec
mov
arpl
in
mov
loope
imul
rcll
mov
aaa
int
fs
je
push
insl
mov
aad
add
outsb
lods
xor
sbb
push
mov
sbb
repnz
das
jmp
test
or
mov
add
ficoms
adc
xchg
dec
ds
sbbl
lcall
adc
add
out
jae
xchg
pop
jbe
into
xchg
fmull
mov
mov
repz
adc
push
insb
adc
and
das
fldl
sbb
inc
lret
and
sar
and
shlb
aas
sbb
add
test
and
adc
pand
mov
clc
xchg
and
sub
sbb
dec
mov
push
dec
push
jmp
cwtl
cmp
sbb
lret
lods
push
repz
ret
sub
repz
imul
inc
mov
leave
cmp
adc
and
mov
sub
xchg
in
sbb
dec
pop
cmpsb
push
aaa
pop
ss
dec
pop
cltd
fdivp
dec
pmulhuw
fldenv
cmp
jne
or
or
xchg
arpl
xchg
mov
cmc
test
mov
roll
arpl
repnz
sahf
out
push
mov
mov
dec
ror
aad
fists
loopne
js
mov
jg
jne
inc
test
fsubs
lods
es
ds
xchg
mov
jecxz
pop
xor
mov
push
test
rolb
movsl
fists
xchg
add
xchg
hlt
pushf
inc
sbb
aad
pop
test
daa
pusha
sbb
into
into
loopne
rorb
rcll
pushf
leave
adc
loopne
es
xchg
lock
sub
outsl
movsb
or
cmp
pop
rcll
pop
sbb
jo
mov
mov
repz
mov
sub
xlat
pusha
xchg
rcr
shll
sub
add
or
xchg
fimull
scas
pushf
mov
and
imul
sarl
push
xchg
sub
lcall
push
das
mov
inc
mov
daa
dec
mov
out
or
mov
add
sbb
cmp
insb
into
xor
dec
sbbb
cmp
adc
out
cli
call
insl
and
push
inc
cmpsl
sti
push
adc
jb
jg
xor
add
pop
fnstsw
dec
pop
insl
popf
adc
push
out
pop
mov
loope
push
movsb
test
mov
xchg
xchg
cli
push
push
mov
mov
imul
sub
test
xchg
pop
cmp
ljmp
insb
jnp
loopne
jo
adc
cmp
das
xor
ficoml
or
cmc
xor
aad
in
sbb
push
ljmpw
addr16
ret
in
and
xchg
dec
cltd
in
test
or
outsb
int
or
mov
jb
inc
sub
xchg
xor
ret
jle
out
jecxz
mov
inc
sti
jle
mov
push
jge
adc
fistl
jl
jl
cmpsl
pop
popa
push
push
pop
pop
mov
xchg
jnp
jge
adc
add
pop
and
stos
pop
pop
sub
test
mov
ret
cmp
xchg
jbe
fistps
ljmp
jno
bound
push
xchg
int
sub
pop
jo
pop
loopne
pop
fistpl
shr
orb
sbb
xchg
adcb
iret
sub
adc
mov
xchg
xor
dec
movsl
shll
xchg
fwait
cmp
clc
fisubl
mov
push
das
adc
lods
and
aam
divl
add
mov
mov
imul
xor
adc
jp
popa
push
mov
in
movsb
mov
pop
stc
scas
outsl
sbb
mov
xchg
xchg
inc
outsb
ret
lods
xor
add
sarb
aam
xor
andl
int
jl
fcomi
movb
insl
popf
fucomip
xchg
incl
and
rcrb
mov
imul
pop
ds
or
fildl
push
rclb
sbb
in
aas
mov
push
push
mov
rcrb
jno
jae
das
addl
jle
into
or
mov
sbb
cmp
sarl
insl
jg
or
sbb
or
in
xchg
loope
sti
test
jo
leave
cli
mov
insb
jmp
xor
adc
pmullw
fcompl
loope
adc
jl
dec
cmp
jmp
out
pusha
mov
xchg
mov
addr16
rcll
cs
mov
mov
mov
dec
jmp
xlat
dec
push
shl
sbb
imul
and
cmc
inc
push
cmp
push
push
jmp
into
xor
stc
dec
or
sbb
mov
scas
cltd
cli
push
mov
int
push
mov
adc
nop
mov
inc
sub
mov
loop
cltd
jno
push
fbstp
enter
dec
jbe
add
loop
pop
in
pop
jo
jnp
mov
scas
pop
push
mov
xor
shll
sbb
sti
pop
mov
daa
mov
outsb
pop
fs
out
andb
mov
inc
loop
mov
addr16
mull
out
fsubrl
int
fcompl
dec
mov
out
dec
sbb
push
mov
stc
xor
add
movsl
call
outsl
xor
push
bound
mov
insl
inc
and
cmpxchg
dec
bound
jl
movsl
sbb
dec
test
jbe
fimull
cmpsb
mov
jb
or
pusha
push
sbb
push
dec
and
or
dec
mov
jmp
mov
mov
les
cli
cmp
cmpsb
lcall
jge
or
call
test
andb
lcall
test
call
sub
shll
pop
xor
jno
cmpsl
pop
mov
push
repnz
lock
mov
push
lcall
adc
mov
push
or
cmpsb
mov
adc
bound
xchg
daa
or
sbb
lock
jge
adc
sub
push
aas
dec
fstpt
aas
cmp
or
push
stos
or
inc
add
popf
pop
pop
adc
and
lret
add
mov
mov
jae
sub
iret
pop
and
jg
mov
mov
sbb
orl
mov
xlat
or
inc
scas
fwait
loop
stc
call
leave
popf
inc
ja
sbb
clc
in
aad
cmp
cmp
outsb
xchg
mov
sub
lret
roll
into
and
je
jne
ret
mov
fildll
cmpsb
sub
out
and
lret
ljmp
jo
lds
pop
int
mov
testl
xchg
popa
mov
test
sbb
adc
fisttps
xchg
mov
mov
sahf
ds
adc
mov
sub
ljmp
mov
mov
loop
cmpsl
je
fdivrl
jno
inc
adc
sbb
stos
adcb
insb
addl
dec
sbb
mov
inc
add
imul
or
cmpsl
pop
push
or
xchg
jae
call
jo
adc
inc
test
adc
dec
push
xchg
cmp
fcoms
inc
fldt
pop
popa
xchg
inc
lcall
test
jne
pop
inc
jecxz,pt
push
cmp
xchg
add
sub
and
cmp
push
mov
dec
outsb
dec
in
jmp
scas
popf
add
mov
mov
jmp
roll
jns
dec
test
pop
divl
add
inc
shll
fwait
jmp
jg
hlt
sub
sub
cld
pop
mov
or
mov
inc
jp
rolb
dec
and
sbb
rcr
shr
push
or
ret
sahf
push
lock
test
cltd
xor
mov
jo
or
cmpl
stc
mov
les
shlb
iret
pushf
push
insb
push
mov
dec
movsb
lcall
pusha
out
in
fs
cmp
in
mov
and
outsb
addl
lcall
or
jmp
jecxz
xor
dec
pop
sub
mov
ret
xchg
pop
popa
xchg
cmp
lret
testl
lret
rorb
leave
test
or
or
aam
sub
rcrb
lods
mov
adc
cmp
xchg
inc
stos
and
mov
jno
mov
or
lock
jp
and
lcall
enter
inc
jle
cs
inc
pop
into
mulb
scas
xlat
mov
fwait
ljmp
negb
cmc
out
push
arpl
jl
jl
jne
cmpsl
mov
jns
and
movsb
adc
imulb
add
mov
jno
outsb
jae,pn
mov
mov
sub
cmpsl
int
adc
add
imul
pusha
sub
jno
jge
mov
xchg
sub
or
xchg
scas
xchg
push
push
in
mov
movsl
xchg
dec
jbe
push
inc
xor
or
cld
mov
mov
mov
xchg
jne
repnz
ja
mov
andl
popa
je
mov
repz
add
mov
out
stos
xchg
jb
sbb
mov
ret
outsl
popf
dec
outsl
cmp
aad
outsl
mov
sbb
cmpsl
xor
lds
inc
dec
outsl
test
ss
into
loop
inc
add
negl
push
movsb
idivl
ljmp
lock
add
xchg
jecxz
jne
dec
fisubrl
clc
out
into
sbb
inc
nop
xor
xchg
sub
movsb
xchg
je
inc
jno
mov
mov
fiadds
stc
data16
cmpsb
pop
lret
dec
inc
insl
aaa
xchg
xchg
mov
push
sahf
push
xchg
icebp
das
dec
test
bound
pop
rclb
out
and
or
mov
inc
sub
jns
push
insb
sti
cwtl
or
push
ficoms
out
cld
dec
ficoml
aas
mov
sbb
xchg
shll
add
mov
xchg
iret
pushl
insl
shll
push
insl
inc
push
dec
jge
and
mov
bound
push
in
push
cmp
int3
and
push
call
push
mov
imul
lret
cltd
mov
inc
mov
lds
dec
or
jle
ror
dec
mov
mov
add
and
jp
imul
les
mov
mov
daa
std
add
push
les
shll
cs
mov
dec
das
cmp
test
hlt
adc
xchg
pop
nop
mov
xor
sub
sahf
inc
or
jecxz
orl
mov
mov
push
out
pop
cmp
sbb
add
pushf
rcl
andb
push
shll
xor
fldenv
pop
sub
xchg
adc
pushf
inc
cmp
insl
mov
mov
pusha
xchg
and
jl
call
xchg
pop
mov
mov
mulb
call
xchg
mov
in
sbb
test
push
frstor
sbb
cs
xor
pop
fistpll
cmp
ret
mov
fwait
lret
pop
mov
pop
or
sbb
call
aas
enter
add
mov
rorl
pop
add
xor
pop
mov
mov
mov
add
adc
push
or
je
icebp
dec
dec
loopne
adc
push
lods
repz
mov
cmp
aam
lcall
fdivl
sbb
sub
lds
cmp
pop
jnp
push
jb
nop
in
ljmp
add
shl
nop
cs
lds
js
push
xchg
mov
imul
leave
ret
jecxz
js
in
jle
dec
lea
push
addb
inc
pusha
pop
addr16
outsl
aaa
psllq
jne
xor
rcrb
inc
and
fcomi
push
adc
lret
adc
or
dec
sub
jp
mov
adcb
inc
or
stos
cmc
pop
icebp
ret
sarb
xor
sbb
mov
rorb
jo
dec
sbb
loopne
or
loope
jecxz
sar
lods
lods
pop
mov
cwtl
xor
mov
push
jge
or
xchg
sbb
inc
cltd
add
dec
fsubs
jnp
addr16
add
xchg
incl
inc
icebp
adc
cmp
xchg
add
dec
cltd
out
mov
addl
jmp
push
test
pop
sub
push
dec
mov
ret
xchg
xchg
adc
inc
incb
add
push
cmp
add
in
aas
sti
in
icebp
sbb
cmp
iret
lahf
test
pop
or
xchg
lds
fwait
mov
xchg
les
sub
jge
or
or
scas
out
mov
dec
xor
mov
xor
out
fnstenv
cltd
pop
sub
es
xor
xlat
aad
pop
scas
mov
add
insb
es
or
int3
lahf
push
stos
dec
mov
shlb
or
push
cmp
mov
sbb
mov
cltd
mov
outsl
je
mov
mov
mov
lds
mov
loopne
sub
out
xchg
and
fwait
pop
mov
mov
or
adc
outsl
shlb
mov
fwait
test
or
jne
lahf
mov
test
ficomps
xchg
or
lret
sub
push
les
popa
sub
mov
popf
out
jb
mov
cmp
push
mov
inc
dec
cmp
push
push
lahf
cmp
jo
je
pushf
xchg
adc
xor
xor
and
inc
ds
sahf
mov
fmull
mov
arpl
lock
lds
iret
gs
add
mov
adc
iret
stos
loope
inc
ss
xchg
or
mov
adc
shrl
xor
outsl
ret
adc
mulb
mov
push
int
adc
cltd
loope
sbb
add
and
inc
mov
xchg
fwait
pop
out
add
xor
fiadds
shr
xor
inc
mov
lea
iret
push
jno
mov
imulb
pop
loop
pop
jge
jecxz
push
sbb
bound
jne
aaa
cmp
mov
xor
mov
inc
ja
fmul
sub
and
fistpll
rorb
imul
imul
cmp
dec
movsb
loope
mov
or
popa
cmp
xor
dec
arpl
jecxz
mov
outsb
xor
cmp
pop
fs
and
pop
lahf
sub
xchg
cmp
in
les
mov
or
mov
pop
ret
hlt
xchg
mov
stos
out
rolb
cli
xor
adc
inc
xor
mov
cmp
sub
mov
das
mov
sbb
stos
pop
insl
aam
xor
cmpsl
pop
mov
and
xchg
fs
jb
push
rep
icebp
pop
insl
lcall
push
loopne
xchg
addr16
xchg
test
mov
jno
xchg
out
aad
aas
test
stos
sbb
enter
cld
xchg
sbb
inc
jb
sub
icebp
mov
test
push
icebp
sub
movsl
cmc
aam
sbb
rcl
sub
jae
cmp
pusha
call
xor
insw
push
xor
ss
jmp
pop
aad
push
inc
lret
in
add
xlat
es
pop
and
mov
jecxz
loope
in
cld
xchg
mov
loope
and
add
mov
xchg
jl
aad
xor
in
cmpsl
push
xor
mov
jne
int
sahf
jge
mov
or
mov
insb
jle
or
scas
dec
mov
lock
xchg
rolb
sub
jmp
sarl
xor
test
pusha
pushf
out
cmpps
sub
sbb
std
add
outsl
cmpsl
cmp
inc
rcll
in
addr16
shll
shlb
ficompl
stc
xchg
lret
pop
in
lds
rorb
pop
and
cmc
cmpb
xor
adc
fcoml
mov
push
mov
pop
sub
cs
dec
pop
iret
iret
sbb
and
pop
repnz
xsha256
cmpsb
sar
lahf
out
xchg
icebp
movsl
shlb
popf
pop
shr
push
cmp
push
and
scas
sbb
fcmove
mov
iret
xchg
and
mov
scas
stos
outsb
sarl
xchg
or
jg
mov
ds
divl
rcrl
sti
xchg
sbb
jns
hlt
and
mov
movsb
and
sbb
jne
jo
dec
in
mov
call
addr16
xor
mov
xor
imul
push
xlat
lahf
mov
clc
jno
negl
sub
xor
daa
inc
or
test
hlt
sbb
ret
test
arpl
xchg
jecxz
cmc
enter
sarl
lcall
and
xor
push
out
out
xchg
mov
imul
cmp
loopne
stos
fstpl
or
out
std
mov
dec
adc
mov
stc
push
inc
push
fsubp
cmpb
mov
or
inc
inc
mov
aad
cld
lahf
ljmp
leave
lret
outsb
mov
add
stos
out
loopne
and
jle
push
jmp
ss
mov
rclb
jnp
out
nop
je
sub
add
repnz
sbb
cmp
sbb
cwtl
frstor
jnp
push
cmp
mov
cs
fwait
jns
add
jnp
rcrl
sbb
fwait
mov
out
ds
loope
inc
data16
pop
into
scas
push
mov
xor
cltd
inc
ljmp
jmp
push
pusha
ret
jge
push
add
ds
leave
stos
push
jecxz
repz
xor
out
int3
fs
adc
mov
sahf
jp
jl
xor
inc
enter
out
mov
or
addr16
cld
jge
fstl
daa
adc
mov
je
cs
lahf
jb
out
je
xchg
adc
sub
cltd
roll
dec
outsl
dec
ret
lret
insl
sub
fistps
ja
mov
or
add
data16
push
add
or
lea
mov
aas
mov
sahf
daa
pop
or
push
push
jl
add
fldenv
cmc
loopne
je
mov
outsb
push
aas
outsb
fdivrl
or
mov
sbb
pop
mov
enter
aad
ja
xor
adc
push
aaa
sub
inc
mov
mov
andl
pop
xchg
fidivs
inc
insb
xchg
or
cmpsl
cltd
into
or
cld
xchg
xor
out
dec
mov
daa
cli
xor
jl
inc
or
xchg
dec
movsb
sub
cmc
lock
xchg
inc
out
adc
lock
lock
mov
cmp
stos
sti
xor
add
mov
xchg
movsl
jne
ljmp
mov
fcoms
mov
shl
aam
aaa
shrl
lea
add
popa
out
cld
sbb
ret
testb
rcr
fcmovnbe
fidivrl
in
js
sbb
movsb
sub
dec
enter
pop
add
outsl
sbb
cmc
mov
sub
cmp
sbb
push
fidivrl
fisubl
inc
push
cmp
mov
es
add
pop
fidivs
es
jge
lret
jg
movsb
inc
aad
fisttps
outsl
scas
cmc
fsubrp
or
xchg
add
and
inc
scas
pop
or
jg
rcrb
call
mov
sbb
push
out
les
stos
push
add
in
ds
int3
cmp
cltd
test
jb
ja
push
pop
mov
inc
aam
js
sbb
xor
xor
dec
loope
jae
adc
jb
popf
inc
in
jne
stos
pop
std
shrl
and
sub
mov
lret
mov
inc
mov
in
out
adc
iret
outsl
sbbb
sbb
sub
inc
xchg
shll
sbb
xchg
add
and
cltd
xor
push
insl
lods
xchg
pop
movsl
stc
bound
adc
jnp
ret
cli
call
popf
dec
xchg
xchg
ljmp
cwtl
add
stos
aam
out
xchg
sbb
jb
lret
pop
push
loope
pusha
loopne
ja
sbb
popf
sbb
mov
sub
jnp
es
and
inc
pusha
test
fs
pusha
enter
mov
in
pop
lods
or
cmp
cmpb
lock
fsubr
mov
call
arpl
and
fisttpll
cmp
imul
and
mov
mov
std
push
push
mov
and
andb
mov
scas
in
sbb
das
xchg
iret
adc
pushf
je
in
sbbb
icebp
ja
xor
or
pop
int
cli
pop
jb
xlat
outsb
xchg
add
adc
lods
jecxz
adc
insb
dec
push
sub
jae
jno
fmuls
jb
jmp
mov
ret
enter
out
sti
das
dec
fldt
fsubrl
lahf
xor
xchg
xor
ja
andl
faddl
insl
iret
jg
scas
outsb
imull
mov
iret
jns
xor
iret
mov
jge
lods
mov
sbb
sbb
push
and
sub
arpl
sbb
sbb
jb,pn
sub
aad
shrb
add
and
incl
lods
xor
lahf
loope
scas
adc
nop
push
xor
imul
out
inc
fidivrl
pop
inc
out
daa
adc
arpl
mov
jnp
or
mov
add
xchg
dec
xor
mov
mov
pop
pop
xchg
mov
inc
aam
xchg
fstpt
mov
and
or
addr16
sub
outsl
js
lret
xor
loopne
mov
cmpsb
lahf
xchg
jp
fsubs
out
ds
mov
pop
addr16
push
aaa
or
lea
std
inc
adc
pop
push
mov
les
mov
jl
fisubl
popf
inc
sub
hlt
add
insb
xchg
stos
shll
jmp
das
in
mov
add
and
cmp
lea
jle
pop
mov
inc
jo
adcl
arpl
inc
push
ja
dec
and
rclb
push
loope
int3
in
icebp
outsb
insb
in
pusha
push
repnz
fildll
inc
sarb
imull
sbb
movsl
inc
cld
mov
mov
sub
mov
and
outsl
or
das
mov
aas
mov
xchg
inc
mov
aad
dec
aam
ret
addr16
push
cmp
lret
dec
sbb
mov
ret
lea
mov
in
mov
adc
fcoms
push
rcrb
ret
and
xchg
fsubp
cmc
stc
mov
mov
jbe
push
clc
lcall
sbb
mov
outsl
xor
and
pop
jnp
fcmove
lret
pop
movsl
add
outsl
jl
mov
into
stos
pop
jb
push
or
xor
xchg
scas
push
insl
inc
in
jecxz
cwtl
xor
sub
call
pop
in
arpl
cmp
mov
sub
add
push
hlt
push
mov
xchg
mov
adc
mov
ja
xor
loope
pop
push
push
lock
fildl
dec
fnsave
xchg
pop
mov
js
arpl
shrl
outsl
sbb
stc
pushf
inc
fsubl
js
xchg
test
jge
test
iret
aad
or
sti
xor
popf
xor
lock
fs
sub
fwait
and
lcall
cld
xchg
rorb
hlt
ret
mov
xchg
scas
push
addr16
add
clc
pop
and
loopne
scas
adc
sub
call
addl
shll
inc
cltd
leave
scas
bound
dec
shlb
or
inc
jnp
cli
mov
outsl
or
enter
mov
or
cmpsl
shlb
push
xchg
push
mov
std
push
cmpsb
xor
pop
enter
sbb
int
cmp
jecxz
lret
and
push
cmpsb
mov
push
push
cmp
hlt
pop
cmpsl
pop
roll
xor
sbb
pop
inc
sub
shll
jns
xchg
rep
jns
lock
or
imul
lcall
or
mov
outsb
sub
add
lea
pop
out
loop
jmp
pop
addb
ret
and
fs
rcrl
mov
pop
cwtl
mov
int3
mov
push
and
aam
xchg
dec
hlt
inc
dec
adc
popf
outsl
push
insl
or
nop
push
popa
adc
xor
das
int
mov
into
adc
cmp
mov
jg
std
das
adc
popa
pusha
aad
decb
addb
push
hlt
mov
popa
push
in
test
inc
xchg
fcomps
xor
dec
jne
dec
fidivrl
sbb
push
pop
mov
fwait
mov
ljmp
jo
pop
test
ds
movsb
inc
arpl
sub
stos
push
mov
into
cld
or
inc
xor
pop
sbb
fbstp
jns
fsubs
mov
sub
push
rcll
test
jae
inc
repz
push
outsb
pop
xchg
xor
mov
cmp
mov
xchg
xor
int3
add
sub
pop
mov
mov
and
insb
inc
enter
dec
lcall
int3
mov
ds
adc
jae
mov
cwtl
and
pop
jbe
push
mov
loopne
in
sub
gs
data16
fs
cli
std
arpl
aas
or
hlt
and
std
mov
sub
xor
aaa
out
out
cmp
add
jl
dec
js
pop
popa
imul
mov
inc
xchg
daa
mov
outsb
pop
push
push
and
add
mov
das
lods
std
add
and
pop
lods
lds
test
sub
jg
inc
or
aam
push
xchg
insb
xor
into
and
xchg
push
dec
sub
shr
enter
sbb
sub
lods
rorb
stc
nop
pop
lret
lret
sbb
jb
xor
xor
lock
and
xchg
notl
push
mov
subl
fmull
insb
les
inc
xor
jl
mov
mov
fwait
in
mov
mov
aam
inc
cli
int3
out
les
mov
push
inc
jmp
jnp
cmp
xor
pop
enter
mov
popf
icebp
xorl
minps
pop
aad
dec
cmp
and
int3
movsb
xchg
add
or
sbbl
cwtl
js
lods
push
pop
adc
mov
aas
es
mov
or
mov
push
cli
jno
lods
mov
or
fcomps
add
test
out
and
jae
stos
popa
mov
ss
in
push
call
test
out
ret
mov
inc
scas
ficomps
mov
adc
cmc
mov
das
hlt
and
mov
inc
sbb
inc
mov
test
shlb
fimull
inc
test
adc
cmp
addr16
jp
mov
sub
sub
insb
cmp
fwait
mov
xchg
jge
cltd
hlt
jnp
dec
rolb
std
aam
pop
insl
mov
fdivrs
ljmp
imul
cld
add
mov
xor
arpl
repnz
sbb
mov
mov
dec
mov
in
icebp
fdivrl
rcl
xchg
loope
mov
jns
repnz
cmp
dec
inc
inc
lock
mov
lock
cmp
jmp
inc
dec
js
jb
cmp
push
daa
addr16
cmp
and
cli
sbb
sti
mov
push
or
sub
mov
insl
xor
cmpsl
inc
mov
rcr
sbb
loopne
cmp
mov
cld
test
sub
mov
roll
ficoml
jmp
stc
or
in
adc
std
imul
mov
sbb
adc
lcall
xchg
popf
imul
in
sbb
pop
ret
scas
push
rorl
inc
inc
push
inc
inc
sbbl
shl
and
imul
imul
sub
cmp
in
test
mov
xor
in
dec
testb
mov
aas
aam
imul
mov
call
fsubrl
adc
mul
jnp
nop
cmp
mov
cmp
fdivr
and
jo
aaa
cmp
arpl
loop
int3
incb
xor
fiaddl
push
jle
outsl
jo
test
popa
sub
mov
gs
sub
cmp
lcall
lret
xor
inc
pop
pop
les
inc
inc
push
fildl
mov
int
jmp
sbb
iret
leave
jg
push
in
cmc
ja
enter
mov
xchg
rolb
popf
fmull
test
out
fisubs
xchg
and
mov
mov
test
mov
sub
mov
xchg
test
mov
xor
add
jge
jbe
insl
test
lods
adc
jbe
push
mov
xchg
dec
jmp
std
xchg
xchg
add
cli
and
out
and
lods
mov
ret
sahf
lods
cmp
mov
inc
rcll
movsl
addr16
sbb
fsubs
hlt
cmp
jb
fimull
mov
pop
in
jb
outsl
cmp
cmpsb
dec
mov
add
shll
mov
adc
mov
nop
inc
out
cli
divb
pop
and
cmp
sub
jecxz
ja
xchg
pop
cmp
dec
pop
icebp
xor
or
sub
sub
mull
popf
push
ljmp
xor
pop
jmp
pop
in
imul
add
mov
lods
lods
adcl
insb
leave
cwtl
mov
loopne
and
les
sbb
out
leave
sahf
xor
jecxz
cmp
out
fcoml
adc
clc
xchg
jp
scas
out
cmpsb
inc
dec
and
icebp
and
shrb
cmp
push
ja
cmc
cmp
push
and
lahf
mov
sbb
outsb
cmpsl
and
inc
cmp
fcomip
jmp
pop
dec
inc
mov
dec
ljmp
and
nop
pop
iret
fbstp
or
sub
arpl
inc
or
fidivs
mwait
sarb
call
shlb
das
mov
jbe
enter
divb
lret
xor
mov
push
push
test
idivl
dec
push
lahf
lock
subb
lret
sub
lcall
mov
mov
xchg
pop
cmpsl
stc
and
pushf
std
addr16
xchg
loopne
adc
mov
pop
lods
iret
fsubp
mov
addb
test
dec
jae
out
leave
mov
fwait
in
leave
jnp
xor
loopne
enter
mov
mov
pop
test
subb
imul
pop
jno
jle
jl
test
add
insb
test
sbb
je
out
test
in
mov
or
cmp
cwtl
add
loope
push
out
hlt
push
xchg
mov
repz
fistps
int
jmp
mov
mov
xchg
scas
jns
loop
dec
pop
mov
inc
mov
jecxz
cld
clc
ret
and
dec
dec
sbb
xchg
std
jbe
jae
adc
arpl
mov
or
ja
loop,pt
ret
int
imul
scas
mov
je
fldenv
xchg
fmulp
lods
and
jl
scas
mov
iret
cmpb
add
push
mov
stos
lret
sub
jmp
push
mov
lock
sub
jg
add
jbe
jecxz
jmp
jmp
adc
push
jp
in
sub
cmpsb
js,pt
out
adc
das
xlat
or
movb
nop
mov
mov
jae
push
pop
push
je
ss
in
cld
stc
aas
sub
rcrb
and
jno
lcall
fs
movsl
inc
jmp
dec
xchg
xchg
scas
mov
es
ljmp
mov
xchg
test
jl
adc
movsl
scas
in
xchg
xchg
adc
mov
and
mov
mov
addl
sbbb
hlt
jecxz
mov
push
movsb
cli
pop
push
pop
mov
push
stc
cmpb
mov
inc
add
xchg
sbb
sbb
stc
xor
lods
push
test
sub
xchg
fwait
cmpsb
lds
add
ret
push
je
loop
or
addr16
pop
push
insl
sub
cwtl
xor
xchg
pop
fistps
aaa
repz
scas
jne
xchg
imul
push
arpl
xor
cmp
add
sbb
scas
retw
ret
mov
xchg
mov
mov
mov
inc
lds
cmp
fisubrs
pop
aam
fimull
jae
in
dec
dec
sub
sub
popf
pusha
inc
iret
or
pop
mov
pop
out
dec
mov
notb
cmp
sbb
hlt
movsl
mov
rorl
sub
cmpsl
movl
dec
pop
mov
mov
xor
es
sbb
push
sbb
shlb
les
xor
hlt
jne
dec
stos
jns
sbb
jecxz
jbe
pop
mov
and
cmpsb
jno
and
fcomps
pusha
cltd
jb
sub
jnp
mov
inc
mov
jecxz
mov
push
xchg
xchg
mov
sbb
jle
mov
jp
imull
inc
fldenv
jle
push
sbb
loop
pusha
sub
mov
inc
jbe
es
lea
mov
sbb
lahf
daa
lret
sub
xchg
mov
cmp
jbe
rcl
lds
shlb
and
lea
hlt
and
js
pusha
add
adc
and
jno
mov
sbbb
xor
lahf
and
scas
cwtl
pop
negl
or
and
int3
bound
ficoms
aas
pop
and
data16
cld
or
jecxz
test
mov
loop
les
gs
repz
pop
xchg
int3
and
pop
loop
out
cmp
xchg
ja
cmpsl
sub
daa
sbb
add
mov
sub
push
push
lods
sub
stos
inc
popa
sub
push
cmpsl
inc
or
orl
in
mov
lret
xor
popf
mov
leave
insb
ja
repz
cmp
aad
add
inc
xlat
inc
cmpsb
nop
rolb
sbbb
outsb
lea
xchg
pop
shll
into
add
movsb
jnp
adc
clc
cmpsl
sub
call
dec
lret
mov
pop
inc
rcr
addr16
pop
insb
pop
mov
jge
icebp
pop
dec
scas
les
lods
rcrb
and
out
lods
xchg
mov
inc
scas
in
mov
xor
stos
sti
div
das
stc
or
test
xor
push
stc
or
push
or
ret
mov
push
push
negl
add
xchg
shlb
mov
leave
push
add
or
leave
fdivl
lret
shll
std
push
insl
std
dec
sbb
mov
clc
cmp
les
rorl
adc
jl
fnstsw
or
mov
push
dec
pop
psllq
fistl
call
add
mov
imul
loop
or
insb
test
gs
adc
mov
repnz
outsb
punpckhdq
pop
imul
fs
test
insl
pop
mov
and
les
pop
mov
iret
dec
ret
xor
repz
ret
push
mov
nop
adcl
mov
inc
ret
ds
jl
out
stos
into
xchg
jmp
pop
cmp
pop
mov
sbb
mov
jbe
sbb
bound
jne
mov
mov
fsubp
jo
sbb
leave
and
jnp
loop
push
in
sub
lds
imul
ret
outsl
out
cmpsb
into
or
jae
andl
inc
stos
mov
mov
add
sub
inc
adc
and
jb
sahf
aaa
addb
push
cmpl
xchg
adc
hlt
insb
mov
mov
mov
shrb
lock
dec
cld
or
mov
fimuls
insl
mov
lods
lea
aam
cltd
cmp
shrb
sbb
or
ret
fsubl
cld
jo
mov
dec
xchg
pop
jbe
cmp
mov
jno
jne
adc
xor
inc
jp
xor
insl
loopne
jle
adc
popa
add
add
pop
or
add
repnz
popf
test
in
sbb
pop
fs
aam
push
iret
mov
ja
cld
dec
shrl
into
mulb
pop
in
jno
in
gs
insl
or
scas
in
js
mov
mov
popa
jo
pushf
in
pop
xchg
lcall
test
ljmp
pop
xchg
dec
add
mov
and
cmp
xor
lods
out
sub
xor
shll
mov
cwtl
mov
ja
mov
inc
sti
lcall
gs
gs
cmpsl
xor
in
jb
nop
mov
push
stos
mov
out
nop
cmp
sub
sbb
and
mov
sub
jmp
mov
pop
push
ljmp
dec
mov
mov
bound
cmp
rorb
push
dec
and
gs
push
scas
jge
cmc
mov
fs
aam
pop
outsb
mov
dec
rcl
inc
sub
test
jb
dec
cmpsb
cli
popf
or
iret
xlat
popl
int3
push
clc
fstpt
imul
sub
cmp
arpl
inc
xchg
xchg
xchg
mov
rcrl
aaa
mov
daa
cli
mov
jns
pop
out
mov
dec
xor
cmp
adc
test
pop
or
fbstp
ljmp
or
call
shlb
pushf
dec
dec
xor
sub
jae
ror
int3
cmp
pop
push
pop
add
aam
mov
nop
test
cmp
jecxz
stos
pop
cmp
mov
mov
cli
imulb
sti
loop
jo
jae
inc
cmp
push
fdivrs
mov
hlt
data16
or
pop
pushf
xchg
je
mov
in
cmp
cli
or
mov
insb
adcb
aaa
mov
sub
repz
and
leave
incb
jno
clc
add
jo
cmp
out
scas
and
jge
in
xor
divl
daa
aad
lret
jmp
loope
sbb
mov
mov
xor
nop
dec
mov
mov
cmc
int3
xchg
or
aam
pop
test
xor
nop
hlt
and
dec
les
pop
mov
mov
and
mov
add
dec
pop
mov
xchg
fcoms
pop
imul
ss
scas
inc
outsb
and
xchg
daa
lcall
icebp
movsb
jo
jmp
push
dec
mov
add
in
repnz
jae
jne
lret
push
pop
addb
and
mov
iret
mov
dec
and
in
lcall
or
or
jno
cld
fwait
aam
test
imulb
adc
je
xor
stos
add
test
dec
xchg
or
ret
xchg
stos
rorl
add
xor
mov
les
aam
or
sub
adc
addl
cmc
shrb
adc
fadds
sarb
fwait
test
aas
and
xor
arpl
sahf
sub
sub
add
rcll
mov
mov
mov
aam
lret
cs
stos
jmp
mov
aaa
inc
jmp
pop
shll
push
adc
mov
xor
out
js
loope
test
nop
sahf
push
inc
pop
popa
jmp
fidivs
jl
enter
fiadds
repnz
cmp
push
sub
aaa
test
dec
into
jge
test
movb
sbb
std
and
push
jns
stos
scas
sbb
popf
int
mov
and
xor
fnstcw
fwait
in
mulb
jle
mov
gs
pusha
movsb
cltd
dec
and
mov
sbb
jp
sti
mulb
adc
mov
mov
pop
push
fs
das
jg
notl
loop
push
test
shlb
pop
pop
sarb
data16
cli
and
pop
es
xchg
rclb
sbb
fidivl
lcall
xchg
inc
inc
hlt
enter
push
push
xchg
fbld
jg
adc
cmp
xor
mov
std
mov
lcall
lods
fdivs
mov
call
mov
jg
ret
sahf
in
imul
xchg
mov
xor
hlt
clc
enter
cltd
in
sub
test
js
mov
vphadduwq
cmp
rolb
pusha
test
pusha
cmp
push
jbe
xchg
dec
jb
sbb
xchg
cmp
icebp
jae
xor
jecxz
xchg
pop
es
loopne
cmp
shlb
daa
push
repnz
cmpsb
sbb
cmp
adc
fisubl
dec
mov
popf
mov
jne
xchg
dec
popf
mov
push
shr
int
and
dec
repnz
push
pushl
mov
clc
jp
es
and
dec
and
lea
clc
in
dec
gs
test
sbb
leave
stc
xor
mov
adc
fs
rorl
push
inc
sub
jo
fiaddl
xchg
and
mov
push
jno
data16
fwait
adc
lret
sub
leave
imul
sub
decl
jle
lods
inc
movsl
xor
push
xchg
and
rcr
divl
lahf
jns
test
add
jmp
in
jnp
pop
clc
popa
mov
pop
mov
mov
popa
xchg
popa
out
pop
cmp
ffree
push
nop
and
jbe
icebp
je
or
mov
fsubr
cwtl
pop
adc
jge
inc
cmp
or
rorb
jl
cmp
test
in
push
xchg
sbb
or
dec
xchg
pop
negl
in
std
mov
pushf
pop
cmp
into
mov
jecxz
xchg
call
aad
or
repz
shll
cmpsb
hlt
testb
xchg
aad
inc
ss
stc
frstor
pushf
js
cmp
mov
ficoms
adc
vmwrite
outsl
xor
dec
pop
lea
adc
mov
fsubl
pop
inc
jl
lret
dec
xchg
or
pop
bound
push
ja
and
imul
inc
cmp
popf
lahf
cmp
mov
sbb
mov
fstl
dec
mov
sbb
or
je
xchg
jg
cwtl
push
add
sub
dec
inc
lods
loopne
mov
mov
test
cmpsb
data16
xchg
mov
movsl
xchg
std
pop
sbb
pop
test
push
push
test
daa
inc
insb
popf
loopne
cmp
adc
xor
in
dec
or
add
fisubrs
jo
push
push
div
push
lahf
dec
popf
call
aam
ret
in
sub
xor
pop
add
gs
je
ss
mov
cs
and
iret
and
divl
push
imul
jb
jle
aam
leave
mov
hlt
repnz
mov
mov
jmp
enter
mov
popf
mov
scas
ds
rcl
xchg
push
shl
int
aad
out
inc
mov
push
icebp
adc
js
mov
cmp
ret
scas
pushf
fbld
sahf
push
xchg
xor
in
sbb
inc
aad
pop
adc
jbe
stos
push
dec
mov
pop
js
dec
fcmovne
hlt
push
lock
ljmp
loopne
clc
mov
test
pop
dec
jp
mov
sti
mov
push
test
and
dec
les
dec
add
lret
in
out
xor
sbb
icebp
loop
cmp
fwait
lods
sti
dec
sbb
xchg
pop
cwtl
iret
dec
push
ljmp
push
sub
jmp
mov
xchg
inc
xchg
cli
cmpsb
and
imul
ja
jns
shll
ret
test
sub
push
insl
push
push
cld
mov
jecxz
jl
or
jp
rorl
mov
xchg
mov
stos
mov
rcrb
sub
jbe
or
loopne
int
xlat
dec
fildll
push
ficompl
or
xchg
xor
sti
or
pop
incl
xchg
sub
dec
mov
mov
add
bound
push
sub
lahf
sub
das
push
add
inc
rcrb
sub
or
outsl
mov
add
in
sub
mov
push
aas
mov
repz
cmp
fcoml
sbb
add
orl
bound
sub
fs
sti
outsl
sti
repnz
lret
sbb
int
fwait
lds
xlat
out
cmp
shrl
adc
paddq
and
jbe
add
adc
mov
test
jecxz
jle
mov
push
in
add
into
inc
sti
fcmovu
les
jmp
dec
addr16
push
or
mov
cmp
jnp
mov
cmp
lods
imul
push
mov
imul
clc
lahf
bnd
adc
xor
testl
iret
mov
add
adc
scas
jmp
sbb
and
imul
xchg
lahf
mov
mov
loop
popf
pop
in
mov
jmp
jno
sbb
in
cmp
mov
outsb
adc
cmp
std
outsb
adc
paddusb
mov
lea
in
mov
mov
popa
mov
xor
jle
scas
mov
cs
cmpsb
xor
cltd
divl
dec
lret
add
xchg
sub
lock
pop
xlat
fs
jmp
jnp
bound
sub
loope
ret
and
push
xchg
test
dec
js
insb
loop
loop
push
sarb
dec
icebp
mov
sub
inc
mov
add
jne
mov
push
cmpsl
ljmp
xchg
pushf
cld
das
sti
xor
push
jns
cmp
cli
inc
cli
xchg
shll
out
push
cmp
aas
jp
pushf
daa
sbb
pop
repz
and
push
push
fs
scas
dec
xchg
aad
ror
js
out
mov
stos
cltd
jne
inc
inc
and
dec
push
fsubs
fwait
sub
andl
ret
fwait
cmp
sub
add
add
push
insl
out
das
rorl
incb
mov
arpl
push
push
mov
ss
dec
inc
xchg
pusha
or
das
call
cmpsb
out
xorb
jns
xor
jp
je
add
bound
pusha
xchg
sbb
imull
mov
cmc
into
jle
cmp
xor
dec
inc
rorl
into
pop
cli
add
pop
mov
dec
aas
cwtl
jb
pop
cmp
pop
pop
in
xrelease
inc
or
lcall
pop
imulb
mov
fstl
or
push
cltd
in
lock
sub
and
push
outsl
repz
leave
mov
aad
and
sbbl
adc
mov
push
jns
les
in
xchg
lahf
xor
les
mov
loopne
push
adc
popf
mov
enter
jl
cld
or
cmpsb
insl
shrb
mov
adc
out
inc
roll
dec
add
adc
jno
pop
aad
dec
xor
or
or
fsubl
icebp
inc
in
lds
dec
bswap
push
cltd
fcmovbe
mov
xchg
push
and
jle
inc
dec
sbb
xchg
lret
cmp
pop
xor
iret
frstor
sbb
pop
push
ss
lret
mov
mov
or
sbb
dec
xor
xchg
mov
inc
pop
mov
sahf
popa
add
mov
dec
aam
mov
pop
roll
dec
outsb
loopne
jb
mov
sbbl
cmp
lahf
jnp
sub
loopne
addr16
push
inc
and
inc
loopne
ror
cmp
call
xchg
mov
ret
loope
adc
lock
pop
test
ja
aaa
adc
sub
in
and
sbb
stos
inc
jle
jge
movsb
mov
xor
movb
xor
push
push
pop
jae
sub
xor
fisubs
add
inc
sbb
fcompl
or
dec
push
cmp
shlb
fs
adc
aad
test
mov
into
xchg
fnsave
mov
mov
push
dec
mov
in
xorl
pop
mov
mov
jb
shlb
insb
pop
xor
push
loope
inc
mov
rorl
test
fwait
or
outsb
push
std
fmul
stos
sub
xor
mov
pop
jecxz
or
movsl
inc
pusha
repnz
addr16
or
inc
jno
fisttpll
add
xor
cmc
je
xchg
movsl
addb
and
pop
jns
lahf
les
pushf
mov
pop
je
sub
fstpl
in
mov
fadd
pushf
xor
xchg
mov
cmpsb
pop
inc
das
sub
mov
cmp
sbb
or
xor
lds
push
xchg
test
xchg
cmp
iret
pop
iret
in
sub
int3
inc
ret
orb
cwtl
pop
push
jge
and
xchg
insl
jbe
inc
lahf
xlat
inc
sti
adc
test
sbb
jmp
jns
movsl
imul
jle
push
sub
lret
int3
in
xlat
repnz
sbb
stos
cmpsl
repnz
aaa
in
sarb
xor
nop
icebp
test
cmp
push
pop
lea
cmpb
in
dec
adc
iret
rorb
or
inc
push
jg
jbe
ja
clc
xchg
loope
add
xor
mov
push
fucompp
lods
push
sub
cli
lret
cmp
jno
daa
fwait
lods
dec
xlat
add
xor
pmaxsw
in
mov
inc
int3
mov
xchg
insb
in
mov
movsl
test
adc
xchg
ds
adc
mov
xlat
mov
sbb
and
xor
ljmp
std
aaa
decl
popf
push
lds
dec
dec
insl
in
mov
in
xor
fldenv
repz
adc
fdivl
in
cli
add
ja
jle
xchg
jae
sbb
push
sbb
ss
ret
sub
movsb
sub
ficoms
shlb
pop
cmc
mov
je
aam
int
shll
lret
push
sub
mov
push
lcall
jge
xor
mov
movsb
enter
roll
pop
out
insl
jle
add
mov
or
loopne
enter
sub
jne
jg
xchg
stos
outsb
sub
pop
fldenv
fldenv
gs
shlb
pop
rorl
xchg
stos
jns
xor
nop
in
xchg
adc
rcl
ss
xchg
jbe
jb
push
jbe
ja
and
pop
or
xor
jnp
sarb
ds
dec
aad
push
lea
xchg
gs
push
and
pop
pop
enter
mov
ss
dec
mov
and
mov
shrb
jnp
add
ds
mov
cmp
mov
inc
mov
je
cwtl
in
jl
jns
leave
pushf
outsb
mov
jno
xchg
out
mov
inc
fdivl
add
mov
mov
pop
int
cmpsb
cmp
insl
sbb
jecxz
mov
jle
ret
or
cmp
subl
in
adc
out
icebp
jmp
movsb
leave
imul
fidivrs
mov
cli
sub
jp
pop
push
xchg
rorb
push
aas
jmp
push
add
adc
addb
scas
repnz
and
adc
xchg
sbb
stc
mov
mov
push
jb
push
cld
inc
out
xchg
std
cmp
shl
adc
movsl
nop
pop
nop
mov
mov
add
or
int
scas
mov
jecxz
xchg
ja
adc
int
mov
je
in
in
and
mov
jg
pop
repnz
mov
sub
aaa
mov
jae
scas
std
mov
dec
adc
enter
push
adc
or
jns
dec
dec
cld
icebp
mov
add
sbb
and
jb
cltd
or
repnz
mov
adc
test
popa
cwtl
incb
ja
jns
sub
popa
inc
fwait
push
shlb
inc
shrl
pop
push
xor
lods
push
sbb
jp
jp
jb
mov
pop
xchg
in
and
leave
iret
jp
xchg
into
and
lret
cmc
stos
adc
add
or
mov
jl
add
scas
aaa
lods
aas
out
mov
insb
inc
push
js
push
jno
pop
icebp
inc
ds
outsb
and
jecxz
cmp
sub
xchg
sbb
fdivrl
das
in
xchg
cld
in
movsl
loopne
pop
pop
mov
js
push
and
lcall
ljmp
lods
ds
xchg
pop
and
loopne
lret
mov
out
inc
fwait
lods
sub
sahf
xor
fdivrp
mov
mov
xchg
daa
mov
aam
xchg
jo
test
xchg
aam
rcrl
vmovsldup
push
enter
mov
push
pop
jg
in
sbb
add
mov
orl
push
out
mov
pop
push
lret
test
jns
jge
in
stos
pop
mov
leave
adcb
lea
out
test
mov
pushf
lock
mov
aas
add
pop
out
icebp
and
push
or
sub
pop
mov
pop
out
jbe
jp
pop
xor
push
mov
insl
mov
loop
sti
into
dec
mov
enter
add
gs
lods
popa
ret
pop
call
pop
sub
cli
subl
popf
test
jb
pop
mov
aam
ret
mov
fsubr
stc
fs
mov
xor
cmp
pop
xor
add
or
mov
xchg
xor
mov
xchg
jo
clc
pusha
sbb
cmp
dec
bound
adc
outsb
popf
clc
push
cld
dec
insl
jb
mov
pop
xchg
cmp
hlt
fimull
fisubs
rcrb
pop
dec
pop
imul
push
sbb
mov
or
mov
andb
inc
shlb
in
movsl
adc
or
dec
push
lret
mov
sbb
fwait
pop
cmp
test
fucom
xchg
inc
dec
jl
movsl
inc
paddusb
adc
enter
inc
cmp
es
xchg
mov
shr
ss
pop
pop
lcall
xchg
cli
pop
sarb
and
and
cmpsb
insl
test
inc
rorb
dec
insb
xor
push
dec
in
xchg
ss
mov
push
hlt
mov
loop
fs
fnstcw
cli
stc
movsb
pop
cmp
sbb
jb
jg
mov
in
push
cmp
inc
out
int3
or
je
adc
fdivrs
push
push
pop
dec
es
or
sti
sbb
outsb
jnp
mov
xor
mov
es
lahf
cmp
push
fstl
mov
lds
push
repnz
pop
leave
mov
lds
test
fdivl
xorl
jb
pop
addr16
test
mov
push
ret
stc
call
cmp
add
add
cs
cmp
popf
dec
ret
addl
enter
es
sti
inc
sbbb
xor
jno
push
mulb
xlat
nop
inc
leave
hlt
mov
xchg
in
pop
pop
fldenv
mov
fwait
mov
stos
xor
xor
cld
lret
repnz
enter
loope
dec
jno
dec
pop
test
test
clc
inc
shll
lds
xchg
imull
cmpsb
scas
xchg
repnz
adc
sub
lea
xor
jb
fldl
cmp
push
mov
lret
mov
ss
in
and
inc
loop
xchg
out
outsb
test
mov
daa
jae
pop
imul
ds
jecxz
fsubs
jne
movsb
int
jge
lea
adc
jge
int3
cmp
ret
jge
mov
inc
test
sbb
js
push
into
xlat
jecxz
mov
inc
hlt
cmp
es
loopne
sbb
sub
fstpt
inc
or
add
jno
inc
dec
loopne
imul
mov
add
sub
adc
mov
stos
jge
imul
in
aaa
sub
mov
sub
fnstenv
ret
or
jmp
movsb
mov
pusha
mov
call
inc
mov
psrad
mov
movsb
push
std
cmp
pop
xor
in
daa
shlb
dec
pop
lcall
outsb
lock
adc
jne
jns
imul
loope
in
mov
lods
aam
and
or
xchg
sbb
fildl
jb
outsl
inc
xor
fidivrl
xchg
imul
js
loopne
mov
sbb
and
pop
xor
push
mov
into
jb
daa
sub
push
cmc
push
je
shr
iret
jo
daa
popa
inc
ja
xor
es
push
cwtl
dec
popa
dec
mov
fstps
dec
mov
add
iret
jnp
imull
hlt
arpl
rorl
mov
scas
dec
adc
xor
testl
cmp
aad
cmp
imul
or
adc
pop
push
cmp
insb
in
xchg
push
sub
lock
jmp
push
adc
pop
dec
mov
jecxz
mov
xor
daa
in
sbb
mov
push
or
mov
jl
ss
mov
push
aaa
shlb
cltd
sbb
cli
es
inc
insl
mov
shl
sbb
pop
add
pushl
ret
adc
jmp
rcl
test
negl
insl
cli
pop
in
pusha
jl
loopne
pop
and
push
gs
popf
push
outsb
or
dec
int3
cmp
dec
and
jb
xchg
jmp
xorb
xor
sti
add
pop
mov
mov
xor
aam
dec
repnz
hlt
dec
in
ja
js
mov
pop
jle
daa
inc
dec
fadd
cmp
loope
sub
xchg
shll
jae
jno
xlat
and
in
data16
jbe
es
icebp
mov
into
rcll
cmp
adc
stc
out
sbb
imul
sahf
dec
push
sbb
xorl
inc
leave
ret
data16
mov
insb
jge
into
jbe
stos
xor
lods
or
mov
mov
nop
fnstenv
xlat
sbb
idivb
mov
subb
sbb
xchg
push
adc
mov
into
xchg
lret
out
lods
xor
and
or
pop
mov
repz
sub
add
pop
inc
out
lea
push
or
xor
fnstsw
mov
orl
push
in
std
mov
and
and
cmp
or
add
mov
adc
push
lods
jno
pusha
dec
and
push
shl
jne
movsb
les
mov
out
sub
or
xor
jns
dec
add
add
xchg
dec
add
inc
pop
dec
sbb
ja
cmpl
and
cmp
rcr
add
jge
mov
cmpsb
mov
sbb
add
into
test
jmp
aaa
inc
cmpl
subl
adc
mov
out
sub
lret
jnp
gs
andl
shl
push
je
or
sub
les
pusha
xor
leave
in
sbb
cs
std
out
or
fiaddl
and
mov
dec
jp
fs
jp
or
cmc
xchg
fimuls
inc
fsubrp
add
clc
xadd
lcall
mov
test
pusha
add
cmp
push
xlat
mov
aad
out
fdivrl
call
ficompl
sbb
negb
mov
ljmp
out
push
pushf
and
daa
jo
fs
nop
pop
out
int
sbb
idivl
nop
sbb
scas
ds
xchg
ds
fwait
dec
inc
hlt
aas
gs
std
mov
pop
mov
inc
push
jbe
mov
rorb
and
iret
jbe
sbb
jae
adc
lret
rcrl
sub
aam
xchg
sahf
cs
imul
stos
sub
ja
pop
pusha
shl
shrb
stos
out
sub
push
cmp
dec
xchg
jmp
cwtl
sbb
movl
data16
xor
cmpsl
mov
cwtl
insb
xchg
lods
mov
add
mov
stos
cmp
fsts
cmp
jg
sub
add
repnz
push
in
test
cmpb
adc
mov
jbe
stc
pop
nop
idivb
repz
xchg
insb
push
enter
and
incb
jg
dec
mov
pusha
push
fdivs
aam
xchg
jae
lods
cmc
stos
push
gs
dec
sub
and
mov
test
or
dec
in
push
ret
aad
xchg
xchg
lea
mov
cld
movsb
pushf
add
test
xchg
enter
enter
pop
push
jl
idivb
sbb
imul
stos
stc
inc
jmp
dec
aaa
jge
pop
fildll
and
push
xchg
scas
mov
fimull
jmp
nop
outsl
loopne
pushf
cmp
inc
je
inc
adcl
les
add
setne
mov
jnp
popf
mov
in
add
cs
in
mov
sbb
xor
mov
outsb
lret
ficompl
mov
or
out
out
lret
loope
mov
mov
mov
push
and
loop
loopne
fstl
mov
xlat
test
jge
adc
loop
inc
xor
notl
out
ljmp
jno
jl
add
jns
bound
push
jno
or
movsl
jae
bt
into
aas
cmp
pop
xor
mov
mov
repnz
cwtl
aaa
cmp
aaa
aam
loop
inc
jg
loopne
cmp
mov
push
movsb
cmpsl
pop
lret
cli
fwait
outsb
xchg
xchg
mov
roll
roll
movsb
sbb
cmc
aam
lods
shr
mov
cltd
js
cmp
stos
lods
xchg
lods
ljmp
adc
cmc
movsb
inc
in
insl
pop
jecxz
outsl
mov
mov
mov
xchg
add
insl
jge
ret
pushf
add
cmp
push
pusha
gs
push
and
fldcw
sbb
jmp
inc
test
les
jle
mov
push
pushf
dec
inc
fists
imul
in
insl
fstl
dec
cmpsb
xchg
es
out
push
roll
inc
pusha
sub
test
lcall
movsl
sub
and
scas
jbe
and
sahf
insl
jo
adc
pusha
cli
loop
mov
std
fs
jne
pusha
pushf
pop
daa
or
jge
push
xorb
aam
jecxz
gs
xchg
sahf
push
lcall
adc
xchg
icebp
lds
add
aaa
mov
fdivrs
push
jecxz
dec
cmpsb
push
fsubs
lock
xor
mov
jo
sub
cmp
sarb
jmp
push
push
sbb
mov
ficoml
fcom
dec
mov
dec
stos
lcall
rclb
add
mov
add
jnp
fucomip
jl
lods
in
inc
add
fdiv
mov
inc
movsl
into
shll
xchg
mov
push
xchg
mov
ljmp
hlt
cmp
lock
pop
push
lret
pusha
in
xchg
bound
dec
push
xchg
sahf
jnp
rep
dec
inc
jl
popa
sti
add
hlt
enter
cmpsl
push
and
cli
mov
icebp
sub
jns
ret
mov
dec
inc
lock
xlat
sahf
jne
stos
hlt
cwtl
cwtl
sbb
lock
mov
push
mov
lods
sbb
test
mov
mov
xor
aam
sub
dec
gs
lahf
test
rcr
addr16
arpl
adcl
lcall
mov
pop
jo
jl
push
pop
mov
daa
mov
mov
mov
add
shr
push
inc
mov
mov
imul
xor
mov
pop
clc
fsubl
xchg
int
js
subb
in
insl
jne
xlat
sbb
pop
xchg
mov
mov
push
jns
adc
ficoml
ja
mov
pushf
orl
add
fwait
aaa
push
insl
push
jg
xor
lods
ljmp
cmp
xor
adc
push
jmp
cmp
jno
xchg
mov
sbb
adc
push
inc
bound
cmp
fstl
loop
fimuls
or
and
rolb
aas
add
cwtl
adc
js
add
dec
scas
aaa
shll
dec
xchg
sub
and
xchg
inc
in
cmpsb
jmp
out
lds
insl
mov
and
in
xchg
push
loopne
push
testb
and
jno
lods
mov
xchg
fadds
loopne
push
inc
rol
jae
pop
xlat
cmpsl
mov
jge
out
add
insb
into
bound
addb
cmc
adc
lahf
pop
mov
rorb
mov
inc
lods
pop
pusha
add
rorl
leave
push
or
sub
bound
mov
scas
adc
int
sub
xchg
test
sbb
adc
stos
or
adc
in
pushf
push
cli
mov
mov
popf
jno
xchg
insb
cmpsb
data16
out
ficompl
jle
outsl
and
fistpll
push
adc
into
xchg
xor
jb
outsb
add
jae
add
cmp
stc
clc
or
in
sbb
and
mov
push
repnz
pushf
gs
loop
shlb
inc
dec
pop
or
shrb
mov
push
mov
lret
xchg
testb
pusha
movsb
cmp
repz
jg
setnp
xchg
mov
loop
xor
xor
fisttpll
std
test
push
popa
xchg
xor
xchg
cmpsb
inc
xor
daa
fistl
scas
clc
lods
inc
std
cld
pop
pop
cli
rol
rclb
inc
sbb
arpl
push
pusha
pop
es
xor
bound
mov
jo
and
fucomi
hlt
and
push
vshufps
les
cli
mov
pop
push
paddsw
mov
popf
aaa
pop
and
pushf
push
imul
sbb
add
push
add
inc
lret
enterw
or
adc
flds
and
movsb
cltd
fwait
dec
lahf
jns
sti
add
lret
xchg
pop
pushl
xor
dec
arpl
repnz
bound
ret
push
sub
push
out
test
inc
insl
insl
mov
cltd
mov
xchg
push
mov
and
jno
mov
popf
mov
mov
jno
sbb
repnz
and
je
repnz
push
sbb
out
push
in
ja
aas
add
sbb
fildll
repz
imulb
lods
aas
test
cld
pop
sbb
add
movsb
push
enter
and
shlb
inc
sub
ljmp
dec
sarl
fcoml
adc
mov
fwait
dec
pushf
cmpb
and
lods
sub
test
cmp
and
ret
aad
xchg
or
push
lea
push
mov
lret
int
repz
push
xchg
and
push
push
sbb
sub
icebp
popa
lcall
add
xchg
sbb
jns
nop
scas
mov
mov
outsl
xchg
sub
arpl
pop
and
jecxz
or
adc
cmpsl
in
mov
subb
jno
push
aaa
fldl
aaa
mov
mov
jg
add
out
pop
push
aas
xchg
xchg
sub
mov
xor
pop
inc
xlat
fcomp
popf
dec
int
jge
in
lds
int3
in
cmp
cmp
cmpsl
pop
xchg
sub
mov
push
sub
inc
ljmp
dec
nop
mov
pop
adc
adcl
jno
fcoml
je
jmp
push
repnz
sub
popf
jmp
cmp
push
sarl
pusha
mov
xor
xor
cmp
aaa
pushf
lds
xchg
scas
out
cmc
xchg
aas
adc
xchg
pop
or
loop
mov
lret
in
ss
lret
in
mov
push
inc
insb
sub
loope
xor
xchg
out
seta
adc
push
inc
sbb
mov
mov
into
in
mov
dec
mov
fiadds
push
pusha
ja
sub
cli
cs
and
add
ss
pop
mov
mov
sti
jns
lret
es
mov
insl
push
adc
jo
xchg
adc
ljmp
and
fstpt
and
test
push
addr16
ja
mov
xchg
and
nop
and
or
sbb
in
shrb
gs
mov
shl
bound
cmp
arpl
add
cmp
jecxz
in
andl
outsl
stos
cmp
mov
inc
or
sub
stc
iret
icebp
fistl
out
xchg
shlb
bound
ret
or
out
dec
add
out
aad
xchg
fstpl
shlw
sti
test
add
or
mov
jmp
testl
rcr
rclb
add
xlat
fwait
pusha
outsb
outsb
cmp
pop
das
pop
xchg
inc
or
setbe
nop
pop
mov
shll
add
mov
inc
stos
inc
pop
scas
fstpl
jmp
xor
cmp
cmp
jbe
sahf
cmpsl
call
jmp
pop
mov
loope
add
movsl
test
subb
ljmp
mov
cmp
sbb
cmp
je
jge
adc
pop
mov
xchg
dec
loopne
mov
mov
xchg
add
clc
adc
push
push
mov
mov
push
movsb
cmp
imul
ja
and
stc
or
test
xlat
pop
ret
adcl
je
jns
imul
jg
jmp
stos
xchg
std
xor
movsb
pop
and
in
sub
es
and
cmpsl
inc
inc
mov
adc
out
push
adc
mov
mov
testb
roll
sbb
cmp
adc
outsl
lds
adc
std
mov
in
cmp
mov
jl
lahf
icebp
adc
sub
loope
or
push
fstps
push
jns
push
push
insl
jmp
mov
in
jnp
andb
adc
lcall
mov
jno
imul
xor
cmp
pop
test
jae
addb
inc
and
mov
pop
movsb
mov
and
xchg
sbb
or
xor
push
subb
jecxz
mov
test
jo
pop
dec
pop
xor
cmp
loopne
cmp
gs
fs
test
pop
jl
jo
movsl
mov
fld
lock
leave
in
movsb
sub
or
pop
fsubs
mov
pop
orl
or
lods
fsubr
adc
inc
sbb
pop
mov
sarb
lea
jne
cmp
adc
push
and
push
xor
xor
mov
xchg
pop
inc
pop
fimull
jge
jle
sti
fisttps
out
cmp
movsl
push
pop
test
mul
aas
adc
inc
adc
pushf
leave
fsts
in
cmp
scas
cmp
sbb
call
mov
test
push
leave
mov
shl
add
sub
and
mov
arpl
push
dec
or
jmp
jmp
xchg
lret
iret
inc
inc
pushl
jae
mov
out
jecxz
jecxz
pop
sahf
cmc
fwait
mov
jg
adc
lret
aad
mov
pop
cmp
roll
imul
mov
enter
div
cmc
enter
fnstsw
jle
stos
loopne
arpl
jno
in
test
sub
arpl
out
flds
fcoms
or
and
leave
fmuls
out
test
shll
repz
movb
sub
ljmp
rolb
adc
cltd
shlb
mov
out
sub
outsb
pop
jno
test
xchg
push
inc
fisttpll
sbb
add
fs
mov
popf
test
jnp
add
jg
sbb
hlt
lcall
xor
shl
call
fimull
into
push
icebp
in
jae
dec
or
push
dec
test
sahf
or
push
std
aad
jp
lret
cmp
xor
fs
mov
push
cwtl
jae
push
adc
xchg
push
cmp
pusha
popf
sbb
sti
dec
shrl
adc
dec
xor
jp
mov
mov
cli
lcall
mov
mov
dec
sub
jp
fsubl
cmp
in
jno
inc
insl
sti
push
test
pop
cld
xor
fcompl
sbb
ja
sub
in
test
dec
adc
jg
add
andb
fnstenv
sub
lods
shl
fidivl
subl
pop
push
insl
pop
scas
testl
shr
cmp
mov
xorb
mov
aad
xor
mov
mov
xchg
inc
test
mov
jl
iret
dec
scas
cwtl
std
mov
out
mov
cmp
lret
fldl
mulb
ja
mov
bound
xorb
cmp
dec
mov
loopne
into
pop
dec
and
push
add
mov
mov
cmp
push
or
test
cmpsl
mov
mov
aad
icebp
sub
scas
scas
mov
cs
pop
pop
sub
jo
cmp
xchg
inc
and
call
push
inc
int3
lahf
mov
fdivrs
subl
mov
adc
inc
xorb
into
cmp
rclb
sbb
test
scas
inc
and
lret
push
aam
cmp
out
pop
inc
ds
cmp
mov
out
lret
sti
push
pop
add
sub
out
ds
sti
adc
imul
pop
mov
fiadds
rcll
push
push
pop
mov
es
cmp
hlt
jl
cwtl
sar
xchg
mov
xor
xlat
jns
fimull
mov
lcall
and
and
pop
and
pop
daa
jnp
idivl
in
add
sbb
lods
sbb
jns
adcb
mov
movsb
inc
test
cmp
lods
dec
pushf
jecxz
sbb
mov
lcall
xor
jnp
inc
push
outsl
sbb
leave
aaa
sahf
mov
dec
call
jge
mov
iret
icebp
fnstenv
jb
and
jns,pn
leave
jns
ficoml
sbb
pushf
movsb
loopne
in
xor
mov
inc
inc
daa
lock
and
jno
cli
pop
pop
inc
stos
dec
pop
jecxz
cmpsb
std
sbb
jle
xchg
imul
mov
das
in
sub
xor
int3
mov
shrb
repz
xchg
or
sub
dec
lret
nop
add
stos
jl
pop
mov
fildll
mov
mov
sub
es
jmp
fmuls
mov
aaa
or
xchg
sbb
mov
mov
jmp
mov
addl
inc
xor
sarl
imull
shrl
cmp
nop
jb
push
scas
cmc
inc
and
shll
jp
mov
adc
cmp
sbb
pop
fstpl
repz
mov
mov
shrb
test
out
push
jl
sbb
out
mov
aas
push
xchg
xchg
mov
dec
repnz
ss
sti
mov
adc
ljmp
insb
mov
sbb
rcll
pop
loopne
or
addl
lcall
imul
arpl
aaa
jo
xchg
adc
mov
add
jmp
icebp
test
in
movsb
test
lods
pop
inc
pop
cmc
cmpsl
imul
xor
and
adc
inc
jmp
pop
iret
sti
cmp
js
lea
mov
fs
pop
cmpsl
in
mov
in
aam
push
lods
push
xchg
icebp
mov
add
test
push
mov
arpl
sbb
add
inc
mov
dec
adc
sti
pop
mov
xor
jle
ss
or
ljmp
jbe
mov
xchg
in
mov
ja
les
lds
push
ja
mov
and
mov
add
sar
cmp
orl
negb
fcmovu
push
add
push
cltd
push
aad
push
xchg
mov
xchg
jae
das
repz
mov
jo
fidivrs
fwait
xchg
pop
mov
push
pop
fimull
mov
decl
sub
mov
mov
adc
in
mov
mov
shll
push
sbb
shll
mov
adc
sub
mov
xchg
pop
ljmp
clc
cli
sbb
mov
repnz
inc
xor
out
mov
mov
outsb
mov
pusha
mov
mov
mov
pushf
clc
orb
out
ficoms
xor
mov
loop
mov
aaa
pop
adc
ret
icebp
subb
jae
mov
mov
orl
sub
push
cli
ror
outsb
jo
mov
in
out
adc
sarl
or
in
push
aas
sub
mov
stc
mov
xor
pusha
clc
inc
and
pop
arpl
sbb
jge
inc
out
popf
arpl
mov
mov
and
adc
push
pushf
mov
lcall
and
pop
push
dec
xlat
mov
test
dec
imul
mov
add
mov
inc
cmpsb
testl
cmp
dec
pop
and
test
mov
into
shrb
rolb
sbb
inc
mov
outsb
fdivrs
rcll
xor
cli
mov
sbb
leave
ret
cmpsl
mov
cmp
sub
sarb
cmp
add
add
call
sub
dec
or
jo
add
clc
sub
or
mov
pop
xchg
push
orl
pop
xor
bnd
decl
nop
orb
int
pop
push
sarl
push
rclb
push
aas
les
sahf
mov
jnp
add
dec
mov
sub
xlat
pop
mov
sub
cs
pop
das
lods
in
in
jg
xchg
shrb
das
push
lock
pop
fimuls
loopne
cmp
imul
mov
mov
jo
sbb
scas
ds
js
xchg
mov
jns
dec
jle
pop
or
xchg
dec
fs
data16
lds
sahf
loopne
loop
outsl
das
lret
mov
gs
aam
xor
push
cld
ficompl
dec
es
je
mov
adc
dec
popfw
mov
jmp
movsl
jae
outsl
fs
cltd
and
pop
loope
mov
dec
rol
jg
adc
sti
popf
add
jb
inc
je
js
adc
out
sbb
daa
in
inc
push
scas
mov
push
mov
lahf
jo
pop
insb
rcr
dec
lret
jne
ja,pt
pop
adc
mov
adcb
pop
cmpsb
sbb
sbb
mov
mov
addb
xchg
xchg
jno
xor
jl
mov
mov
pop
lcall
out
mov
and
mov
hlt
ds
popa
out
push
xlat
jb
mov
idivb
adc
xor
mov
push
outsb
mov
mov
push
arpl
shll
repnz
sbb
inc
sub
xor
jae
or
sarb
lock
push
sub
dec
sti
ficomps
pop
pop
rcll
sub
mov
scas
mov
les
or
out
mov
je
out
pop
inc
in
pusha
mov
sbb
mov
inc
sahf
mov
mov
aas
mov
fstpl
cmc
imul
int
add
ret
lea
mov
bound
mov
sub
pop
xor
jg
pop
mov
in
inc
data16
dec
cmp
icebp
inc
test
cmp
push
mov
popf
or
or
adc
or
xchg
mov
sub
das
xor
push
jp
and
sbb
rorb
les
in
jmp
nop
xchg
aad
cld
movb
stos
jg
cmc
test
jge
xor
fisubs
rcrb
mov
ficoms
es
dec
mov
xchg
adc
cmpsl
or
xchg
mov
in
enter
fisubs
ds
xchg
sbb
clc
sbb
cmp
das
push
mov
lret
inc
out
lahf
mov
fildl
cmp
xchg
dec
mov
mov
cwtl
shl
movsb
out
dec
cmp
test
xchg
push
pop
dec
push
pop
or
stos
mov
xor
xchg
pop
lock
pop
mov
or
fidivrs
mov
fildll
rorl
loope
add
leave
sbb
mov
sub
mov
out
sbb
loope
mov
sbb
sub
sub
std
jb
test
movsl
shrb
in
pop
mov
lret
ja
outsl
stos
test
enter
ja
shl
or
out
scas
pop
mov
sbb
mov
and
das
cmpsb
push
mov
mov
rcrl
scas
pop
cmp
imul
test
jecxz
subl
mov
test
clc
xor
cmpsb
in
mov
sub
lods
inc
sbb
mov
dec
cmp
or
loopne
stos
dec
mov
jge
std
arpl
cmc
or
repz
dec
sub
mov
inc
inc
ror
aas
movsl
xchg
mov
ret
popa
xchg
xor
adc
cmp
aad
int3
push
xchg
shrb
jl
fwait
popa
icebp
sub
xor
jp,pn
add
cmpb
sbb
xchg
sbb
ret
dec
dec
dec
rolb
scas
adc
or
in
push
imulb
scas
or
fldl
les
inc
cmp
cmpsl
iret
out
loopne
roll
test
dec
pop
cltd
xor
push
iret
icebp
inc
lahf
inc
or
xor
and
data16
loope
mov
mov
pop
pop
xchg
dec
adc
ja
cmpb
add
mov
cmc
pusha
adc
loop
lret
mov
repz
jno
add
lret
popa
test
lcall
and
cmpsb
ret
stos
xchg
xchg
dec
mov
mov
or
pop
pusha
lret
or
mov
das
push
add
adc
push
lcall
mov
sbb
cltd
mov
and
enter
fwait
dec
sbb
xchg
push
lea
dec
daa
fsubrl
icebp
add
jecxz
pop
jnp
dec
fmuls
jmp
arpl
daa
jno
mov
popf
pop
fisttps
loopne
jne
adc
scas
mov
mov
cmpb
dec
push
pop
insl
dec
dec
aam
jb
jg
mov
leave
mov
sbb
cmp
inc
and
or
ror
int
test
cmp
or
subb
mov
lret
popa
dec
cmpsl
lret
inc
or
dec
adc
aaa
pop
push
mov
cmp
es
or
loop
mov
pop
push
xchg
sti
ja
fidivs
add
pop
jne
lea
shlb
test
mov
bound
fbstp
xor
adc
xchg
addr16
rclb
lock
pop
sub
jecxz
lahf
xor
sbb
inc
lret
pushf
pop
adc
mov
adc
xchg
xor
inc
aad
cli
dec
cmpsl
cli
push
leave
sbb
xchg
push
mov
mov
push
mov
push
lahf
out
and
in
cwtd
rol
mov
jnp
mov
or
insl
ds
mov
push
popa
mov
cld
ror
pop
mov
sti
cmp
lods
or
push
inc
outsl
push
mov
dec
jo
sti
mov
int
push
adcb
inc
jb
dec
inc
les
imul
adc
lds
and
mov
fstps
push
sahf
xchg
jl
and
mov
mov
xor
add
mov
outsb
call
dec
pushf
movsb
pusha
aaa
push
jno
repz
aas
jae
fs
in
and
push
ret
push
xchg
mov
lret
adc
mov
add
inc
in
and
adc
fwait
pop
sub
daa
loop
inc
incl
aas
popf
cs
xchg
mov
dec
push
out
add
pop
cmp
cld
xorb
leave
lods
sbbl
mov
or
aad
xchg
xorb
scas
out
pop
mov
lret
testb
dec
outsl
in
ja
and
add
sahf
in
sti
sbb
faddp
fimull
rorb
imul
in
icebp
inc
adc
mov
movsl
sbb
pushf
out
and
sub
add
repz
and
in
adc
push
addl
test
cmpsb
andl
xlat
rcrl
stos
jo
mov
push
push
shll
ret
jb
mov
enter
inc
lret
cmp
push
sbb
add
scas
out
imul
fcmovnbe
cwtl
dec
mov
cmc
imul
es
sahf
jg
jg
pop
lret
pop
add
push
clc
xchg
push
data16
lock
jnp
fwait
adc
pop
popa
insl
push
xchg
jl
and
mov
mov
imul
or
cmp
and
push
fsts
sahf
mov
mov
popa
stos
std
fsubrs
test
and
lea
jo
repz
mov
fcmovu
out
jl
add
cwtl
fisttps
rol
add
and
repnz
sbb
jo
cmp
pop
xor
cmp
pop
xorl
jne
out
pop
sbb
cmp
out
jl
lret
cmp
mov
rorb
rcrb
fcmovnu
test
popa
add
hlt
or
sbb
sub
das
xor
push
fsts
es
test
jne
jbe
in
gs
lea
xor
lcall
inc
data16
push
lret
lods
or
sub
loop
pop
push
or
or
lcall
lds
mov
ljmp
hlt
sbb
add
push
mov
or
test
add
icebp
push
inc
in
push
push
lods
adc
ja
test
cli
add
cmc
mov
and
popa
push
cmpsb
dec
sbb
shrl
xlat
dec
mov
and
aam
mulb
jg
mov
pop
ret
inc
movl
add
inc
imul
js
push
add
repnz
inc
inc
jb
pop
aas
push
gs
repz
pop
lret
xchg
jnp
pusha
mov
adc
aaa
scas
imul
pop
out
lret
push
dec
inc
sbb
add
or
sbb
fmul
push
sahf
decb
cmp
test
pop
lock
lcall
pushf
sbb
sbb
and
cmp
dec
push
rolb
push
adcl
ret
sbb
lods
imul
and
aaa
jns
sub
cmp
sub
movsl
outsb
cmpsl
adc
pop
mov
cmpsb
ret
inc
cmp
sbb
dec
int
add
push
xor
add
inc
fldt
pop
add
ret
pusha
mov
or
mov
push
movb
push
sarl
push
mov
mov
pop
push
xchg
adcl
or
sbb
pushl
test
add
xchg
mov
in
in
xchg
pop
push
data16
mov
inc
cmp
mov
mov
pop
pop
rcrb
sahf
fisttpl
push
sbb
jg
fdivs
jecxz
fstpt
push
cmc
movsl
xchg
rcrb
hlt
push
mov
cli
cs
ds
inc
push
dec
test
lea
mov
int
daa
jl
and
loopne
adc
pop
xchg
inc
imul
sub
imulb
scas
xor
or
and
mov
sbb
sub
das
and
or
sbb
outsl
ss
push
mov
mov
fs
and
sbb
inc
out
mov
jnp
and
fldcw
lcall
add
into
rolb
cmp
dec
popf
dec
push
push
add
adc
lock
stos
fldenv
enter
mov
int3
addr16
ja
jne
push
cwtl
sahf
mov
push
adc
sahf
xor
xor
jge
cmp
cwtl
shlb
nop
xor
rcr
and
pop
sub
das
ja
fs
insl
data16
cld
xlat
dec
and
test
adcb
nop
push
daa
jmp
inc
sub
sbb
push
dec
cmpsb
cltd
sub
mulb
fdivl
dec
xchg
sbb
stos
inc
int
loop
sub
cmpsl
testb
inc
jb
test
push
addr16
or
sbb
nopl
xlat
sub
aam
push
sub
imul
in
or
mov
xor
into
stc
and
mov
fsubrl
inc
loop
dec
push
pop
popf
lcall
push
jbe
mov
lods
inc
sar
or
jge
incl
or
lcall
sbb
ret
jns
mov
icebp
push
or
imul
pmaddwd
xchg
adc
dec
cmpsl
iret
mov
mov
adcb
jbe
push
dec
roll
sbb
loope
dec
dec
sahf
lods
cli
mov
out
xor
and
sbb
and
push
imull
fiaddl
mov
pushf
cld
fmuls
ss
push
mov
mov
ret
lret
popf
inc
scas
xchg
adc
pop
scas
sub
insl
loopne
jo
mov
incl
adc
dec
fcmovnu
pushf
scas
xor
fists
pushf
jno
lods
inc
loopne
aam
push
in
mov
jnp
movsb
fisttps
mov
mov
mov
subb
testl
mul
pop
jl,pn
sub
and
scas
jmp
hlt
sub
xchg
stc
xor
push
dec
stc
es
push
push
ss
insb
mov
xchg
stos
jmp
mulb
ss
sbb
mov
jmp
movsl
pop
repnz
xor
inc
cmpb
out
into
inc
mov
addb
dec
mov
push
stos
jb
dec
inc
xchg
cmc
xchg
sti
jecxz
dec
ror
mov
movsb
xchg
aas
jp
mov
stos
out
test
inc
nop
and
fdivs
dec
gs
dec
jae
inc
ret
aas
lret
fwait
repz
adc
jge
mov
notl
loopne
sub
jae
out
jg
clc
jg
cmc
sahf
cmc
push
or
fadd
mov
pop
leave
scas
or
jb
dec
xor
mov
shlb
mov
or
imul
in
lcall
xchg
outsl
xchg
mov
push
jp
sub
fcompl
mov
jg
divb
enter
mov
ljmp
or
fists
fstps
mov
shll
jne
loope
pop
ret
fmulp
daa
adc
dec
mov
scas
sbbl
adc
sbb
ret
lret
insb
mov
dec
mov
int3
insb
push
cmovl
rcrb
inc
inc
stc
imul
test
and
sub
icebp
addb
into
pop
lods
lock
push
into
xchg
in
ffreep
hlt
sbb
jb
pop
mov
xor
test
push
hlt
or
and
xchg
jle
sub
jmp
sbb
aam
stos
and
test
rol
cmp
fiadds
jno
scas
mov
dec
stos
lret
lcall
imulb
adc
push
shlb
sbb
lods
aad
out
lock
rcl
shrl
adc
loopne
jmp
push
cmp
nop
mov
sub
loop
or
cli
lods
jg
cmpsl
cmp
xchg
mov
xchg
xor
inc
dec
mov
push
popf
pop
sbb
ret
arpl
shlb
push
adc
fidivrs
test
in
repz
sbb
or
xchg
stos
stos
jg
icebp
cmp
divl
jne
and
pop
popa
in
shll
shll
pop
leave
cmpl
lock
cwtl
fwait
cmp
mov
stos
sbb
xor
mov
mov
int
add
sbb
shrb
inc
jle
in
test
dec
push
in
adc
push
imul
inc
mov
lods
sbb
pushf
push
in
test
push
rolb
or
and
push
scas
int
arpl
jge
les
insl
shlb
jb
inc
xor
adc
xor
data16
push
cs
sbb
stc
leave
pop
jo
jbe
popa
gs
mov
inc
loope
mov
xchg
mov
jnp
cs
rorl
xchg
jecxz
lods
sub
es
scas
sub
dec
rcll
sbb
in
cmp
push
aas
mov
and
mov
or
add
add
fwait
and
or
les
inc
mov
lods
sarb
cld
or
push
inc
mov
push
jmp
movsl
add
lods
orl
insl
pmulhw
inc
pop
jne
scas
dec
jp
mov
hlt
inc
mov
mov
mov
lea
imul
or
and
stc
xor
lods
push
push
movsl
lods
jg
xchg
out
cmpsb
mov
sbb
test
pop
aam
fiaddl
pop
adc
sbb
cld
add
test
sub
mov
dec
data16
pusha
mov
insl
push
adc
mov
add
push
iret
cltd
and
adc
inc
cltd
jg
xlat
addr16
sub
outsl
mov
jns
sbb
xor
icebp
lcall
xchg
or
cmp
mov
sbb
cmp
xchg
sahf
mov
push
or
and
in
mov
insl
out
outsl
test
xchg
lcall
ljmp
cmp
lods
aam
lret
lret
jno
enter
mov
mov
sub
fldcw
pop
xchg
pushf
aaa
add
lods
sbb
xchg
clc
in
xlat
mov
andl
mov
mov
jb
icebp
sahf
sub
sbb
adc
sub
sub
lret
inc
repz
sub
add
imul
sbb
mov
shrl
pop
sub
cmp
cmpsb
or
fsubl
mov
outsl
mov
dec
jl
jg
add
aad
loopne
nop
bound
pop
pop
outsl
scas
ja
push
fcmovnu
sbb
in
mov
mov
push
fdivp
jge
xchg
jns
sub
mov
add
testb
mov
gs
dec
pop
repz
outsl
or
icebp
nop
xor
add
push
dec
insb
push
jmp
inc
fnstenv
pop
das
push
iret
mov
scas
mov
pop
test
loop
ficompl
push
inc
pop
pop
push
in
sti
mov
mov
fbld
lahf
lea
leave
stos
mov
sahf
pop
lcall
and
jo
push
shr
push
insb
test
lcall
das
cli
jno
pop
mov
mov
push
sahf
mov
xchg
pop
in
movsb
repz
rolb
bound
ret
xor
out
sub
xchg
cmpsb
xor
outsl
test
mov
pusha
fmuls
es
mov
pop
dec
clc
xor
mov
imul
mov
insl
mov
movsl
icebp
daa
mov
movsl
fldl
cmp
sbb
clc
xchg
jnp
das
add
loop
push
dec
arpl
fs
add
xchg
dec
cmp
inc
xchg
push
mov
cmp
test
scas
push
jge
stc
arpl
adc
mov
mov
cld
std
xor
jmp
dec
jb
cmp
cs
test
fisttps
mov
or
xchg
out
test
shl
dec
mov
lds
loopne
rorb
dec
std
out
pusha
push
push
fstps
cmp
dec
add
popa
test
adc
sbb
cmp
and
in
lret
xor
sub
xchg
int3
stc
jnp
test
pushf
sub
addb
stos
jmp
cld
jge
loope
jno
inc
pop
mov
add
call
clc
in
push
lahf
cmpsl
clc
aad
xchg
das
test
sub
data16
cmp
aaa
loopne
js
cmc
mov
pusha
xor
or
in
ds
test
cmp
jnp
cmp
mov
and
adc
lret
not
xor
pop
sbbb
and
xor
sub
cmp
sub
loopne
dec
sahf
inc
test
hlt
jge
adc
xchg
sbb
jo
ja
in
mov
les
je
and
push
insb
int3
push
loop
in
test
xor
xor
push
push
push
xchg
and
insl
lods
leave
dec
shlb
push
xor
fwait
pusha
repnz
lock
arpl
mov
out
js
push
pop
stos
cltd
imul
adc
cld
jmp
jl
repnz
aas
bound
dec
pop
xchg
mov
xchg
lods
mov
sub
inc
cltd
sarb
xchg
in
sub
sbb
jo
mov
sarl
sub
jl
and
enter
ljmp
mov
scas
dec
insb
add
sbb
cld
lcall
lds
les
popf
sar
dec
cmp
jmp
inc
add
push
pushf
loopne
sub
mov
and
mov
addr16
dec
fnstcw
cmp
loopne
shlb
iret
popa
mov
stos
in
cli
sub
cmp
and
add
into
lea
mov
imul
aam
sub
sub
lods
out
out
cwtl
mov
aam
pop
add
lock
mov
dec
dec
daa
mov
ss
lahf
adcl
mov
ret
xor
sarl
add
inc
and
mov
push
into
mov
cmp
xor
xlat
mov
xchg
imulb
mov
jle
xor
hlt
push
aaa
mov
int
movsl
cmp
imul
pop
jbe
pop
mov
aaa
mov
into
rcll
ds
int
mov
call
or
and
lea
call
mov
clc
pop
insl
popa
pop
iret
fcomip
pslld
sbb
and
pop
sbb
pop
call
cmc
insl
in
jne
pop
lcall
push
es
cli
mov
lods
mov
or
mov
aad
mov
in
add
adc
fsubl
xchg
stos
or
or
or
cltd
dec
hlt
dec
sub
test
push
movl
sub
call
adc
je
stos
icebp
rorb
movsl
rorb
mov
fimuls
sbb
outsl
cmc
push
pop
xor
push
fsubrs
addr16
pop
sub
sarb
inc
aas
inc
sar
mov
or
dec
inc
xor
fcoms
push
mov
js
and
jns
push
iret
mov
add
and
or
xchg
sbbl
in
jle
lds
in
daa
rcrb
jecxz
loop
xor
sbb
push
in
lds
ret
scas
xor
loop
xchg
push
outsb
fwait
mov
mov
and
push
jne
sbb
push
cwtl
jb
arpl
decl
xchg
mov
sbb
adc
bound
fsubrs
xchg
mov
in
in
insl
addr16
insb
out
repnz
bound
mov
jecxz
sub
jl
or
sbb
mov
loope
mov
test
xchg
xlat
push
call
cmp
and
jb
dec
fucomi
test
outsl
sub
popa
mov
mov
cwtl
nop
lea
rclb
jle
inc
mov
push
inc
jle
and
fadds
in
mov
adc
je
cmp
insb
into
outsl
mov
into
inc
xor
or
pop
pop
cmp
sub
and
adc
push
xor
mov
out
push
mov
gs
gs
xor
cltd
jb
outsl
push
mov
jle
lret
je
inc
imul
lds
jmp
mov
hlt
lds
inc
inc
jmp
jecxz
dec
fwait
inc
ja
cmp
test
ds
or
sbb
cmp
add
insl
and
imul
rol
int
dec
mov
imul
mov
aas
popf
mov
pop
int3
and
test
pusha
scas
jnp
in
nop
jp
lods
sub
stc
nop
cmp
aad
cmp
loop
jbe
dec
cmpsb
add
sbb
shrb
mull
and
add
into
mov
fs
cmp
dec
xorl
pop
pop
out
add
scas
push
ja
ljmp
add
pop
add
aad
mov
idiv
sbb
inc
jecxz
and
lea
cwtl
or
xor
shrb
dec
cmp
scas
sahf
int
mov
ret
pop
and
xchg
cmc
fwait
lods
xor
call
push
daa
xchg
scas
adc
mov
inc
adc
in
out
lods
pusha
in
outsb
add
out
outsl
stos
jnp
xchg
shlb
aad
mov
pop
out
sbb
ror
lcall
in
nop
ja
punpckhwd
jo
sub
shl
ja
push
fstpt
mov
mov
dec
jl
js
fsubrs
in
in
out
sbb
je
and
stc
cwtl
ja
dec
adc
ss
stc
jne
idiv
pop
insl
leave
inc
cmc
lods
or
push
cmpl
push
int
js
push
xor
dec
pop
rolb
cli
xor
out
das
adc
mov
pusha
les
out
rcll
shll
dec
cmp
sti
push
push
into
or
and
je
mull
xchg
adc
arpl
or
mov
push
out
pushf
jo
pop
daa
in
jmp
jns
jno
out
repnz
movsl
in
sti
hlt
push
ss
jle
imul
dec
inc
sbb
add
or
in
cmpsb
sbb
repz
push
pop
pop
jle
sti
push
or
inc
bound
and
lahf
sbb
cmp
adc
mov
xchg
pop
cmpsb
scas
cld
adc
fwait
cmp
in
cltd
ja
ds
enter
jecxz
lods
add
adcb
inc
mov
or
inc
mov
iret
xor
add
loop
jae
cmp
push
sbb
enter
xor
adc
data16
push
hlt
loopne
mov
sti
rclb
call
xor
ss
xor
mov
pushf
pop
jl
in
imul
in
je
jle
aad
fidivl
std
jb
enter
pop
sti
push
mov
pop
jge
jecxz
lea
inc
bound
gs
icebp
dec
or
in
mov
fisubs
push
xor
imul
clc
dec
outsb
mov
or
scas
lods
fucomip
int
mov
popa
add
shll
mov
jg
rcll
out
xor
and
push
mov
inc
inc
adc
sbb
pop
nop
addr16
xor
notb
jecxz
stos
imul
dec
pop
and
aad
pop
jg
mov
fmull
pushf
inc
into
insb
add
pop
and
mov
jns
lahf
mov
add
add
adc
lahf
xchg
mov
loope
dec
lock
insb
adc
decb
pusha
jp
mov
dec
xlat
int3
mov
cmp
push
push
adc
adc
clc
jbe
cmp
adc
adc
push
lahf
add
movsb
korw
fs
mov
cwtl
sbb
sub
loopne
inc
cmc
or
dec
and
push
in
push
inc
add
arpl
lret
xchg
cmp
cmp
and
ja
notl
adc
push
mov
lock
rol
andb
xchg
xchg
pop
incb
sub
jg
push
repnz
mov
push
in
xlat
js
mov
push
sbb
sbb
gs
test
xchg
mov
jne
mov
cld
adc
xor
js
push
popa
mov
pusha
sti
jne
add
imul
faddl
mov
mov
adc
stos
pop
pushf
test
out
loop
push
ss
adc
xchg
int
push
pop
dec
inc
mov
push
loope
sub
dec
pop
into
jmp
push
xor
clc
add
repz
pop
jns
xor
movsl
xor
adc
push
dec
shrb
sbb
fisubrs
fisttpll
xor
inc
xchg
sbb
push
dec
adc
pop
sbb
cmpl
push
xor
andb
loop
adc
lret
push
push
xor
push
les
xlat
mov
adc
sbb
enter
and
cmp
mov
add
ds
or
je
fstps
int3
sub
mov
mov
mov
and
lcall
pusha
outsb
pop
cltd
cmpsl
and
cmp
ljmp
sub
addr16
or
adc
fucom
adc
inc
gs
scas
push
shl
test
jecxz
cmp
add
nop
imul
lock
or
xor
shrb
pop
mov
and
call
cld
cmp
xor
mov
lea
jle
int3
loope
pusha
cs
das
mov
in
dec
and
ret
fwait
cmp
mov
mov
jb
cwtl
data16
sbb
mov
xor
and
lods
lds
jnp
popa
xor
in
ljmp
jbe
mov
jl
fisttps
push
mov
inc
push
in
or
sbb
out
stc
and
movsb
xorb
mov
lds
add
das
cmp
dec
adcl
inc
mov
faddl
rcrb
sti
and
fisttps
ret
jne
push
or
jbe
mov
and
test
mov
and
cmc
or
cmp
rep
xor
xchg
cli
std
mov
cmpsb
dec
nop
imul
sbb
add
mov
mov
push
jno
popa
and
nop
xchg
fwait
movsb
test
pop
or
xorl
xchg
jle
push
add
mov
push
cli
push
xchg
fildll
sub
push
sub
int
sub
ret
mov
out
enter
test
xor
aas
js
shrb
mov
jb
cwtl
and
inc
mov
test
add
arpl
adc
fstpl
icebp
aad
jp
inc
rcrl
into
subl
adc
ljmp
shrl
xchg
sbb
adc
scas
mov
xchg
je
xor
adc
adc
fidivrl
sbb
xor
jecxz
decb
inc
leave
jne
pop
pop
cmpsl
lret
sub
cli
jle
or
lea
in
fmuls
mov
xchg
pop
push
jnp
aaa
mov
shll
fwait
loopne
jmp
jmp
into
stc
xchg
sbb
pop
jge
dec
push
cli
testl
je
cmp
xchg
adc
in
or
imul
out
push
and
jbe
into
aas
nop
jecxz
aad
xchg
test
xor
and
add
inc
es
fwait
aaa
dec
add
and
scas
xchg
sub
jge
into
mov
mov
and
jne
call
sub
xchg
les
cmp
sub
jg
jno
cmp
lds
orb
xor
jns
sbb
pop
call
imul
ret
cmc
push
push
push
sbb
add
cmc
dec
xchg
jl
popa
enter
push
dec
jae
out
addr16
pop
sub
outsb
mov
dec
xchg
leave
jl
or
es
mov
lret
ficomps
cmpsb
mov
pop
les
out
cld
rorb
add
inc
mov
jge
stos
fsin
jmp
push
mov
sbb
test
add
jp
add
lret
lods
or
sarl
addr16
je
pop
fs
mov
loope
dec
enter
xlat
rol
push
pop
in
cmp
loop
fucomip
cmp
pop
mov
mov
inc
addr16
aad
sub
adc
shr
or
addb
push
pop
ret
in
push
mov
rclb
dec
or
imul
mov
sbb
adc
sbb
cltd
lcall
adc
adc
fisubrl
into
mov
sbb
in
sub
xchg
movsb
adc
mov
leave
mov
and
pop
sbb
or
lock
lret
les
and
sub
xchg
aad
jle
cmp
mov
js
cmp
cmp
dec
popa
pop
mov
cmpsl
jg
inc
cmpsl
sti
mov
xchg
pop
sub
popf
lea
dec
xor
ficomps
outsl
xchg
xor
or
icebp
jno
incl
sbb
mov
jnp
adc
ds
pop
jo
sbb
inc
jnp
mov
mul
add
lods
addb
ja
sbb
shll
stos
cmp
fbld
lahf
repz
push
sub
xor
test
mov
xchg
mov
mov
sub
dec
mov
push
lret
daa
cmp
dec
inc
add
adcb
popf
addl
dec
inc
bound
pushf
add
jle
jmp
in
inc
inc
repnz
lahf
je
imul
or
xchg
pop
xor
cmpsl
adc
inc
outsl
pusha
xchg
cmp
mov
repz
arpl
add
fnclex
jecxz
add
pop
stc
push
xchg
xchg
daa
mov
popa
sub
add
cmp
loop
dec
sbbb
sahf
sbb
lds
lahf
sahf
movsb
mov
jbe
outsl
and
mov
mov
xlat
jno
loope
int
aaa
fcomps
popf
subl
inc
out
pop
cmp
mov
lock
hlt
andb
call
xchg
pop
fucom
lcall
xor
mov
mov
mov
imul
cmp
push
test
pop
pop
cmp
test
pusha
out
sbb
gs
data16
push
pop
xor
mov
add
and
lcall
das
xor
lahf
mov
lahf
mov
mov
push
subb
scas
es
popa
ja
cli
and
cmpsl
cli
in
adc
jno
movzbl
and
loopne
pop
dec
pop
fmul
inc
into
cmpsb
into
icebp
or
and
mov
call
incb
icebp
sub
xchg
jl
mov
sbb
inc
decb
fsubrl
outsb
adc
cli
jl
xor
mov
aaa
mov
repz
jb
scas
into
loopne
pushf
jmp
sbb
es
mov
outsb
adc
pushl
sahf
repnz
add
pop
lods
in
jl
xor
fstl
decb
clc
add
sub
dec
inc
pushf
in
mov
test
outsb
mov
mov
jne
testb
mov
jne
fst
jae
mov
scas
mov
cmp
push
test
adc
add
xor
sbb
xchg
jo
test
mov
in
sub
lcall
je
dec
iret
dec
lret
or
and
xchg
mov
mov
dec
pop
es
rol
outsb
jne
jno
ljmp
cli
jne
inc
fdivr
repz
cmp
cld
sarl
sbb
pop
lods
add
in
adc
push
hlt
cmc
jecxz
mov
in
out
dec
and
mov
shll
cmp
and
mov
ja
mov
aaa
mov
inc
inc
dec
cmpsb
inc
nop
repnz
pushf
adc
mov
sbb
or
mov
adc
inc
lea
mov
test
pop
loopne
or
push
fwait
push
mov
cs
dec
aam
addl
out
popa
inc
call
jp
rorl
jo
pop
movsl
xchg
or
adc
sti
and
lea
cs
icebp
enter
dec
int
jg
xchg
mov
fldl
and
int3
mov
sahf
mov
insl
ss
or
push
fiadds
dec
mov
adc
adc
imul
js
cmp
mov
mov
adc
stos
jae
cmpsl
aam
push
in
fwait
hlt
mov
mov
sbb
jp
mov
xor
mov
data16
or
mov
sti
shll
inc
dec
add
sub
shll
jmp
pop
scas
das
sbb
mov
hlt
in
shrb
test
out
gs
scas
mov
ljmp
xchg
pop
jg
inc
ds
mov
das
pop
test
dec
add
repz
add
ret
loop
arpl
mov
push
adc
test
std
push
jp
inc
loope
jle
push
cmc
lret
jno
xor
clc
pop
fldcw
mov
insb
jno
pop
sub
shlb
sub
jmp
xchg
push
mov
lock
fs
cmp
push
test
scas
fdivrl
mov
pop
and
jmp
icebp
adc
sbb
loope
cmp
xchg
push
xor
sub
stos
cmp
dec
sub
pop
jle
jl
into
jno
push
clc
addl
xchg
pop
mov
shrb
dec
loop
mov
ss
pop
aaa
mov
inc
add
loope
test
jg
incb
xor
xchg
in
push
lock
movb
imul
jne
xor
fmuls
and
loopne
or
shll
sti
mov
inc
mov
dec
xchg
push
hlt
test
lret
lret
fsub
and
and
daa
pusha
into
mov
loopne
add
xchg
jl
cld
mov
enter
push
inc
xor
push
aaa
mov
enter
inc
mov
mov
iret
int
mov
or
inc
es
daa
lret
test
repz
cmp
xchg
pop
mov
repnz
push
sbb
push
push
testb
fdiv
lock
pop
repnz
pop
iret
mov
lahf
jmp
push
or
jle
sbb
dec
push
fimuls
xor
repz
imulb
sub
int3
inc
rcll
out
inc
fidivl
jg
inc
dec
dec
dec
leavew
imul
pop
mov
out
dec
or
xchg
pusha
leave
nop
mov
push
adc
rcl
ret
iret
add
iret
jne
stos
scas
popf
imul
shl
pop
bound
pop
cmp
fisttps
mov
pop
fldz
inc
ret
jecxz
sbb
push
in
xchg
jb
cld
add
mov
repz
push
push
outsb
fistpl
pop
sbb
div
adc
ffree
daa
jmp
push
incl
pusha
adc
mov
dec
clc
push
nop
sub
fwait
sbb
push
pop
lret
xor
gs
cmp
js
mov
imul
mov
mov
jg
hlt
je
adc
inc
push
daa
cmpl
fisubl
popa
dec
adc
popl
out
cli
mov
movsb
jbe
inc
loopne
aam
aaa
dec
xchg
xchg
mov
inc
mov
sbb
leave
leave
push
cltd
or
mov
push
xchg
outsl
popf
pop
fsubl
mov
movsb
jle
mov
sahf
pop
fimuls
fnstsw
loopne
mov
mov
pop
je
dec
xor
push
lds
xchg
cmp
pop
or
mov
pop
js
js
pop
lods
dec
add
data16
add
cmp
mov
enter
and
or
std
inc
add
clc
dec
and
push
scas
mov
xchg
jo
jg
dec
mov
sbb
dec
dec
push
pushf
xor
sbb
push
cmp
xlat
pushf
out
rorb
cld
pop
rorb
popa
cmc
sub
push
and
rcrl
mov
cmp
cmp
sahf
mov
sub
xadd
xchg
pop
sbb
jmp
jecxz
insb
lds
lret
pop
jge
roll
cld
gs
cmp
pop
notl
sbb
adc
cmpsl
mov
xchg
loop
fdivl
push
sbbb
mov
pusha
push
test
jmp
jbe
or
or
aam
push
dec
jmp
loope
or
add
xchg
xor
mov
pop
sub
idiv
and
mov
push
pop
loop
stc
xchg
mov
inc
push
jae
mov
pop
das
repz
roll
fwait
pop
add
mov
inc
cmpb
bnd
ret
js
popa
sub
out
popf
cmpsl
lods
outsb
addr16
aaa
fiaddl
ljmp
fwait
pop
into
loope
in
cld
mov
daa
mov
std
mov
push
mov
dec
push
xchg
mov
jnp
mov
cmpsl
inc
push
mov
outsb
fwait
ljmp
loopne
or
enter
les
jno
dec
cmpb
orb
pop
rorl
aam
mov
sub
dec
fimull
or
aam
mov
pusha
add
imul
ja
jmp
es
lea
les
imul
icebp
sub
jl
fdivrs
mov
das
xchg
stos
out
xchg
clc
cmp
inc
or
jge
or
in
inc
push
mov
stos
sti
pop
cmp
cmp
aad
mov
xor
xchg
or
and
xorl
mov
mov
jp
insb
mov
outsb
das
mov
inc
movsb
arpl
frstor
pusha
enter
loop
stos
icebp
bound
add
lods
sahf
leave
xchg
xchg
jne
adc
dec
sbb
xchg
inc
loop
push
and
dec
jmp
notl
stc
ret
pop
mov
orb
xorl
add
notb
xchg
fs
jmp
jl
add
rclb
lret
xchg
testb
cmpb
je
mov
jbe
ja
outsb
jge
inc
xor
xor
inc
ror
mov
mov
movsb
jmp
dec
ljmp
inc
mov
push
mov
in
lcall
outsl
adc
mov
cltd
je
sbb
jnp
sub
xor
and
out
jne
outsb
ret
into
leave
in
divl
sbb
mov
jne
sub
into
dec
int
mov
mov
ficomps
lcall
cli
xchg
fisubrs
xor
xchg
mov
mov
sbb
adc
jns
popf
xor
pop
jo
insl
xor
flds
push
push
push
pushf
sets
push
mov
pop
or
into
adc
push
std
push
sbb
in
jb
ds
lahf
mov
jo
in
add
push
movq
les
or
push
mov
mov
mov
pop
jmp
xchg
repnz
push
pushf
cmp
fidivrs
sub
cmp
pop
mov
cli
lret
out
push
mov
pop
inc
je
xor
dec
mov
xor
fstps
lret
adc
lret
fwait
les
mov
sbb
mov
sbb
xchg
fcomip
sbbl
out
xchg
sbb
xchg
rcrb
mov
clc
lcall
lcall
and
test
push
or
fcompl
and
jge
aam
leave
mov
insl
lock
xchg
addr16
or
imul
xor
and
in
pop
decl
lret
push
or
sub
sbbb
fwait
mov
insl
jnp
sub
adc
sbb
dec
inc
inc
add
and
push
pop
std
adc
pop
test
push
test
sub
int3
dec
in
pop
xchg
adc
movsl
ficoms
inc
pop
mov
push
mov
jp
and
xor
dec
pop
pusha
push
inc
in
push
sub
or
repnz
push
push
addr16
dec
jg
pop
arpl
es
jo
in
in
shll
addl
in
cmp
lock
ret
or
lret
dec
ret
mov
xchg
mov
fs
int
mov
mov
movsb
jmp
out
rcl
into
mov
inc
mulb
and
daa
inc
jge
imul
shll
js
mov
inc
insl
scas
imul
jne
inc
aas
in
hlt
fdivs
decb
rorl
pop
xor
mov
ficoms
push
movlps
roll
mov
pop
mov
dec
fiaddl
cmpsb
mov
test
inc
cmp
imul
sbb
out
das
add
push
sub
icebp
push
daa
push
imul
pop
addb
mov
mov
int3
lods
gs
adc
push
enter
inc
dec
out
out
aas
xor
loopne
div
push
add
out
sub
gs
das
sub
or
xchg
incl
xchg
adc
cs
or
psrad
xor
fimuls
and
fidivs
push
fmull
dec
cmp
rorl
push
nop
ror
cs
jge
pop
pop
cmc
lock
push
repnz
ljmp
mov
or
enter
ret
ja
lock
jne
lods
inc
lret
push
sub
sub
outsb
jle
js
xchg
xor
sub
sub
push
dec
aaa
dec
call
cmp
sarl
jge
xchg
push
cld
cmpsb
dec
xor
and
jb,pn
jmp
cltd
adc
add
sub
popf
cmp
push
std
sub
cmp
sarb
test
adc
sbb
mov
data16
call
mov
mov
movntps
xor
iret
jbe
xor
inc
enter
lds
jl
xchg
push
sub
push
add
jge
xchg
psllw
push
xchg
push
insb
sbb
stos
stos
mov
mov
xchg
in
rcrb
aad
mov
adcb
inc
dec
fcmovb
aaa
cmc
icebp
pop
cltd
sbb
pop
dec
movsl
cltd
jmp
out
xor
inc
mov
into
lcall
mov
mov
mov
dec
xor
jns
in
rcrb
ja
adc
int3
daa
or
jnp
adc
jmp
fmul
xchg
cmpsl
cmp
mov
fdiv
arpl
call
add
jbe
enter
ljmp
push
sbb
lcall
cltd
popf
mov
sbb
aam
or
push
and
push
add
fstl
fs
mov
outsb
xchg
cli
sti
dec
int3
xchg
daa
push
mov
jne
push
mov
jb
mov
aad
dec
aas
pop
fcmovne
testl
mov
mov
push
mov
lods
sbb
ja
cmp
jae
je
jne
nop
mov
mov
push
xor
ror
movsb
cmpsb
out
in
xor
mov
js,pt
push
int
xchg
xor
push
sub
pop
push
ret
roll
sahf
loop
dec
push
sbb
mov
and
push
cltd
cmp
or
push
test
scas
mov
sbbl
jbe
rcl
lods
dec
ds
addb
dec
pop
jo
sub
dec
mov
je
ljmp
sbb
lea
pusha
sti
mov
outsb
cmp
cmp
dec
ja
rorb
repz
pop
insb
push
push
push
pop
pop
test
pop
and
rorb
jp
inc
cmp
fimuls
sahf
and
cwtl
pop
arpl
pop
icebp
push
ja
and
pop
xlat
dec
sub
and
stos
mov
inc
jmp
call
out
adc
scas
loopne
insb
cmpsb
je
pop
xchg
adc
mov
scas
pmaxsw
inc
lock
pop
test
adc
js
cmpsl
aaa
adc
leave
loope
mov
push
adcb
js
cwtl
jno
flds
pop
test
pop
sti
dec
dec
mov
fs
xor
sbb
test
js
xchg
pushf
cmp
adc
movsl
out
shll
and
lret
enter
push
mov
xor
mov
add
cmp
imulb
scas
nop
sub
push
mov
cmp
cmpsb
xchg
aaa
nop
mov
or
jae
and
xchg
mov
sbb
stc
daa
arpl
jbe
sbb
dec
scas
int
mov
bound
fisttpl
jo
and
mov
jo
dec
icebp
mov
inc
mov
xor
or
popf
push
mov
pop
gs
pop
rcrb
sbb
mov
shll
push
or
stc
xchg
add
inc
xor
cmp
bound
adc
ja
jecxz
icebp
and
xor
in
add
sub
int3
jne
stos
lods
sbb
in
mov
jns
pop
and
es
pop
and
test
push
stos
dec
sub
mov
ja
mov
mov
iret
dec
sub
jae
je
dec
push
daa
and
sub
pop
outsb
scas
fimuls
fnsave
fs
sub
subb
sysret
jp
es
xlat
insl
subl
outsl
and
repz
test
daa
dec
int
lds
pop
mov
test
xor
call
and
jb
mov
cmp
sbb
pushf
outsl
hlt
mov
cmpsl
clc
xor
into
icebp
fnsave
fnstcw
adc
pop
dec
cwtl
inc
push
mov
jge
or
mov
add
lds
les
out
aad
mov
jo
or
pop
mov
ja
into
xor
mov
mov
xchg
add
sar
lcall
sbb
test
sbbl
push
pusha
push
push
aam
push
cmp
adc
sarl
aam
push
push
push
rcrl
shl
dec
imul
pop
adc
leave
out
rorb
and
lods
jo
shrb
cmp
popf
inc
mov
loope
outsl
and
sub
insb
add
mov
pop
cmc
jne
stos
adc
jb
adc
out
dec
inc
xchg
ss
mov
mov
pop
pop
jae
and
jb
fsubrl
mov
int
mov
test
ja
repz
xchg
dec
hlt
mov
adc
insb
xor
push
es
out
dec
jg
popa
sarl
xor
dec
cmpsl
jg
push
inc
mov
push
sbb
xlat
out
clc
out
dec
fstl
sub
xchg
mov
sub
jmp
mulb
pop
adc
pop
push
addr16
out
pop
lret
imulb
aaa
xchg
rcll
rorb
shlb
outsb
mov
std
lods
cs
mov
sbb
fwait
leave
arpl
pop
mov
sbb
xor
es
push
out
mov
jb
and
push
jge
aad
xor
jns
popa
mov
in
js
inc
add
fwait
repz
inc
ffreep
mov
sbb
pop
mov
insl
repz
sbb
loope
dec
aad
call
or
jno
jmp
jo
push
xchg
mov
scas
mov
add
aaa
std
push
jno
dec
out
repnz
icebp
mov
and
jae
jl
rcr
mov
cmp
das
pushf
dec
stos
jmp
mov
inc
dec
inc
fwait
mov
ret
ss
js
mov
lret
das
ret
inc
mov
push
stos
adc
sbb
add
notl
mov
out
xchg
push
push
sbb
in
dec
ljmp
sbb
mov
or
ret
lods
mov
mov
and
mov
pop
or
or
mov
mov
and
xor
neg
fdivrl
clc
xor
push
nop
cmpsb
lea
mov
adc
repnz
addr16
and
movsl
call
in
mov
lea
sbb
mov
cmovl
push
sub
xchg
fldt
subb
fdivrl
movl
add
sbb
or
aad
add
stos
stos
cmp
shlb
sbb
mov
imul
imul
or
ja
xchg
inc
int3
je
imul
xor
fcmovbe
mov
in
pop
mov
rolb
testl
insl
movsb
xchg
jp
shll
movsl
jg
lahf
push
xor
push
iret
lea
icebp
dec
test
mov
fisubl
jnp
push
push
mov
mov
sub
notb
scas
out
add
push
mov
addb
ret
cmp
jge
dec
and
sti
nop
gs
fldenv
cli
sbb
sbb
xor
out
adc
mov
mov
cmpsb
dec
pop
add
xchg
icebp
dec
push
push
mov
mov
scas
movsb
sub
mov
mov
sahf
test
in
movsl
jl
sub
mov
sub
jbe
add
cmp
cltd
cwtl
fldenv
xchg
mov
repz
in
stos
movsb
test
mov
mov
mov
fcomps
dec
mov
orl
loop
add
xor
mov
cmp
ss
mov
mov
add
jmp
adc
mov
vandnps
aad
inc
xchg
jne
inc
ret
xchg
mov
jnp
dec
rcrl
xlat
and
or
ljmp
adc
movsl
mov
xor
push
notb
sub
ret
adc
xchg
mov
in
mov
out
imul
pop
cmp
test
pusha
imul
pop
lea
mov
and
int
cs
sub
xor
xchg
fcos
sbbb
fimull
add
scas
mov
and
sub
mov
call
sub
inc
test
sub
aad
inc
sti
insl
icebp
ja
aad
cmp
dec
and
nop
stos
sbb
mov
jb
in
jge
pop
scas
push
gs
pushf
cwtl
jg
cwtl
cld
cld
xchg
int3
jne
cld
mov
test
xlat
and
cmp
add
lret
pushf
or
cltd
mov
fdiv
daa
inc
testb
fsubr
xchg
xor
fbstp
repnz
sub
loop
test
cmpsl
lock
fwait
lods
roll
pop
sahf
xor
inc
xchg
shr
mov
sbb
mov
mov
nop
mov
fs
xchg
ss
mov
or
ret
add
pop
mov
outsl
jbe
loop
xchg
popf
scas
sarb
mov
iret
add
push
xchg
xchg
sbb
orl
push
loope
inc
jp
mov
jns
pop
fs
and
jg
mov
xchg
jb
jne
or
mov
icebp
insb
mov
icebp
je
cwtl
rcll
pop
insb
fisttps
movsb
sti
stc
fadd
rcl
jmp
fwait
pop
lds
or
bound
pop
and
popf
test
repz
jge
or
shl
subl
mov
in
sbb
add
in
movd
mov
push
inc
cmpsl
inc
and
mov
dec
jg
cltd
cmc
or
stc
mov
mov
pushl
aam
jle
int
shlb
outsl
mov
aad
sub
mov
in
andl
fwait
jae
dec
mov
dec
cwtl
stos
push
dec
mov
pop
push
mov
lahf
dec
xchg
sub
mov
push
push
mov
xchg
jg
es
mov
dec
jle
adc
push
aaa
rorb
adc
inc
ljmp
pop
in
pushf
test
int
or
imul
mov
dec
jb
inc
jmp
arpl
add
test
jns
sub
jns
adcl
push
mov
rcrl
xor
adc
mov
subl
inc
fnstcw
adc
lods
iret
xchg
mov
sub
movaps
mov
adc
sub
sarl
adc
imul
iret
jnp
sbb
sub
inc
sub
xchg
out
and
inc
push
inc
cs
inc
dec
mov
cmp
frstor
shl
add
adcb
sarl
sbb
dec
je
jl
push
jp
mov
repnz
fistl
lahf
add
std
sub
data16
cmp
mov
loope
push
xchg
push
std
or
cli
fdivrl
mov
add
cwtl
rcll
pop
fwait
mov
dec
xchg
xor
xchg
ljmp
xor
cmp
lcall
lods
shl
inc
xor
push
das
push
add
decl
mov
pop
sbb
dec
mov
jb
push
int
dec
les
adc
push
and
sub
cmp
jno
or
mov
ror
jnp
and
cmpsl
mov
jbe
pop
jae
mov
mov
es
sbb
jl
std
jecxz
mov
fisttps
lods
imul
dec
bound
je
mov
mov
in
mov
sbb
jnp
mov
push
ret
fcoml
add
sbb
mov
sub
xchg
or
add
cs
imul
add
in
repz
lods
call
dec
add
mov
push
scas
fiaddl
mov
testl
ret
or
sbb
shrb
inc
repnz
mov
pop
push
out
fs
icebp
adc
out
js
pop
sub
test
imul
leave
pop
mov
push
lds
adc
jmp
mov
xor
aaa
rcll
mov
shll
popa
ds
adc
dec
in
sbbb
jmp
lods
shlb
sbbl
int3
jb
xchg
popf
jge
rcrl
loop
jp
pushf
movsb
jnp
pop
out
sub
lcall
adcb
bound
test
adc
xor
sbb
fldt
int
cmpsl
sar
cli
adc
in
cld
pop
movsl
test
shr
insb
lcall
dec
mov
lods
ja
imul
popa
sub
xor
push
fiadds
push
mov
dec
insl
out
or
dec
cmpb
jo
push
pop
test
stos
daa
mov
popa
dec
pop
sahf
aad
adc
lret
push
push
push
mov
in
movsl
enter
idivl
mov
pop
aaa
pop
or
lret
add
adc
mov
and
sbb
gs
sub
cmpsb
push
ja
pop
stos
fidivrl
addr16
mov
sarb
js
pop
sahf
push
sub
ss
imul
cmc
lret
stos
lahf
stc
hlt
jp
imul
xchg
and
test
mov
xchg
mov
jp
sti
das
jge
xchg
inc
das
cltd
and
jmp
mov
rcrl
insb
and
leave
arpl
std
addr16
in
hlt
or
adc
lret
loop
cltd
or
imul
sarb
pop
xchg
add
lods
jne
jo
add
xchg
xor
inc
lods
xchg
repz
popa
js
cmpl
stos
popa
adc
cmp
dec
xchg
or
out
xchg
cmp
les
dec
lods
lock
dec
in
shlb
or
cwtl
outsl
jo
sbb
and
or
imul
cmp
outsl
sti
out
xchg
loopne
sbb
xor
xchg
sbb
in
cmovle
call
std
dec
popf
dec
lahf
xor
stc
mov
rcr
lock
mov
popa
mov
push
push
xor
in
xchg
inc
iret
lea
or
fstps
std
xchg
stos
fs
notl
add
add
fbstp
mov
sbb
pop
mov
add
insb
imul
and
jns
ja
roll
mov
pop
jecxz
aaa
jmp
push
pop
cmp
cmp
mov
pushf
scas
out
dec
mov
arpl
hlt
lret
je
jle
sti
pop
data16
mov
xor
daa
in
into
bound
popf
inc
lods
xor
sub
stc
mov
pop
adc
lods
cmc
mov
scas
ret
into
xchg
rclb
sbb
jb
mov
les
xor
push
stc
mov
cmpsl
loopne
sahf
stc
outsl
inc
je
cli
pop
mov
stos
std
mov
call
js
test
ss
inc
jp
mov
jno
clc
mov
repnz
fsub
aaa
jge
lds
stc
and
pop
jns
adc
mov
out
pop
mov
mov
loop
lea
in
sub
popf
es
sub
dec
cwtl
and
test
jnp
loopne
add
das
lods
dec
jl
sub
fidivs
sahf
popl
nop
push
jae
lar
xor
xchg
bound
push
pop
cmc
pop
push
leave
mov
or
fsts
jg
cmp
xor
or
inc
sub
dec
sbb
insl
icebp
add
daa
lret
sub
adc
cli
push
mov
cmp
cld
mov
stc
scas
repz
and
cmc
dec
sub
aad
sahf
sub
test
pop
mov
addr16
into
test
les
and
loopne
jne
leave
add
adc
popa
cmp
repz
dec
pop
cmp
test
movsl
mov
mov
or
inc
add
fs
sbb
adc
inc
push
into
or
xor
loope
sbb
jecxz
lds
and
mov
push
xchg
push
sar
and
xor
mov
decb
sahf
mov
lahf
frstor
dec
pop
mov
mov
sbb
mull
xor
inc
mov
fmuls
pusha
mov
lds
cmpsb
adc
cmp
jg
xor
jb
jnp
and
and
mov
leave
xchg
nop
add
repnz
mov
mov
fisubrl
sub
call
jns
add
inc
xchg
shrb
dec
inc
decl
lret
orb
adc
call
dec
add
jns
sarl
mov
pushf
scas
jl
js
cmp
cmp
lahf
fnsave
les
xchg
dec
into
out
sub
dec
orb
sbb
xchg
add
push
cmp
scas
sbb
cmpsl
inc
sahf
jmp
adc
or
lahf
test
adc
fidivs
cmp
lcall
xor
jmp
push
gs
rorb
jg
test
push
cmp
sbb
jno
xchg
sbb
jecxz
sbb
es
movsl
cmpl
add
or
push
cltd
pop
sbb
xor
mull
lea
push
lods
sub
int3
das
sbb
into
xchg
loop
test
dec
push
xor
fwait
push
fstpl
push
sub
cli
cmpsl
mov
pop
push
or
xchg
dec
scas
jb
push
incl
data16
sbb
and
cld
dec
hlt
sti
cmp
fst
nop
jge
dec
das
jg
mov
cwtl
or
fadds
lcall
add
inc
and
cmp
cmp
scas
pop
les
xorb
sub
adc
outsb
loope
sbb
out
mov
push
or
mov
ja
push
dec
stos
sahf
inc
outsb
pop
movsb
bound
loop
dec
js
mov
rcl
cmovg
pop
sbbl
movntq
mov
ficoml
inc
stos
mov
je
loopne
xchg
iret
mov
out
mov
mov
outsl
int
lods
outsl
adc
mov
clc
push
push
outsl
add
lret
les
add
sbb
mov
outsb
push
gs
stc
xor
sub
pop
and
jne
repnz
jne
loopne
imul
lahf
add
aas
rolb
pop
shrb
mov
idivl
jp
mov
dec
sti
gs
mov
insb
xor
aam
and
add
pusha
enter
add
xchg
je
lret
subl
push
rol
xchg
clc
sbb
push
pop
mov
mov
loopne
aaa
lcall
sbb
cmp
sbb
cltd
dec
xor
cmpb
push
push
shrb
je
xor
add
sub
or
pop
sbb
imul
scas
mov
dec
jns
mov
adc
icebp
mov
xor
push
call
sub
loop
pop
in
push
popf
push
and
jnp
mov
push
insb
es
enter
in
add
subl
stos
nop
dec
jae
inc
js
aad
pop
test
stos
hlt
mov
cmp
icebp
jg
push
sbb
xor
dec
push
mov
lods
jmp
mov
js
jg,pt
in
ss
add
in
pop
mov
popf
or
mov
adc
cwtl
push
mov
notl
aam
xor
add
push
ja
xor
adc
adc
xor
fsubl
cmp
xchg
mov
sub
sub
mov
push
or
or
xchg
mov
or
xor
cmp
xchg
sbb
mov
outsb
jle
inc
or
sbb
lods
push
test
pop
shrb
xchg
add
sub
inc
in
out
sub
lahf
add
testl
dec
xchg
sti
adc
repz
in
repz
inc
xchg
sbb
cmpsl
out
dec
divl
jne
cmp
lcall
or
or
repnz
fwait
jge
mov
ss
int3
mov
mov
loope
rcrb
adc
or
sbb
lret
ret
fiadds
xchg
iret
push
imul
sbb
inc
mov
sub
leave
fstl
icebp
je
popf
inc
add
inc
into
inc
push
or
fidivrs
mov
adc
push
imul
mov
ficomps
decl
xchg
xor
xlat
aad
add
popa
xchg
lret
cmp
inc
mov
push
push
outsl
sub
mov
cld
lods
loopne
lock
fbld
arpl
dec
dec
loope
jns
jmp
adc
push
adc
sub
push
jno
cmpsl
data16
out
jno
ret
jmp
out
lcall
dec
pop
or
pushf
cmpsb
push
std
daa
aas
sbb
sar
or
push
jbe
sbb
aas
aaa
mov
mov
or
ret
lods
rolb
fwait
mov
add
mov
and
fstpt
jne
jbe
jecxz
aas
int
cmp
inc
scas
mov
xor
stc
lahf
adc
lahf
sub
cmp
outsb
into
imul
loope
hlt
ja
stos
icebp
ficoml
dec
add
push
add
sahf
rorb
sbb
sahf
psubd
mov
dec
call
cmp
or
cwtl
inc
mov
cmp
outsl
addr16
ror
test
lret
and
je
xchg
jnp
cld
xchg
ret
sarb
fwait
fnstcw
sub
xor
mov
nop
loope
sbb
jecxz
iret
xor
sub
cmpsl
sti
add
and
stos
nop
out
add
xchg
jg
pop
xchg
mov
cmp
jl
lret
lea
fst
fidivs
xchg
pop
das
xor
pop
or
orl
sub
add
fimull
mov
std
jle
adc
mov
in
add
pop
test
les
adc
loopne
inc
add
pop
pop
daa
inc
inc
xchg
leave
mov
cmpsl
aas
test
push
xorl
jmp
sub
push
test
and
inc
ret
jp
pop
in
ds
dec
xchg
and
mov
xchg
jecxz
dec
pusha
cmp
xchg
pushl
bound
gs
lret
xchg
push
divl
aad
popf
add
mov
jnp
out
pop
imul
pop
cld
xchg
stc
mov
stos
lods
pop
mov
xor
in
pop
cvtpi2ps
xor
adc
arpl
clc
push
lock
cmc
call
roll
enter
jnp
cli
jg
lea
pop
cltd
jmp
push
aaa
mov
push
into
je
jno
xchg
xchg
adc
mov
imul
bound
mov
gs
dec
test
sahf
popf
leave
mov
adc
dec
shll
icebp
mov
mov
xor
not
shrl
ret
mov
cmp
mov
iret
cld
add
cmpsl
cmp
insl
out
loope
mov
fimuls
dec
pop
xor
pop
cld
xlat
imul
xor
scas
sub
push
mov
leave
sahf
les
adc
out
push
imul
inc
lahf
aas
aam
cld
mov
leave
shl
popf
xchg
daa
gs
cld
mov
pushf
pushl
addr16
jno
fstpt
pop
fwait
out
ret
aas
scas
dec
cmp
sub
cs
sbb
pop
aaa
ret
sbb
xor
or
stc
cs
xor
arpl
xor
or
test
xchg
test
push
aad
loopne
mov
push
cmc
clc
cs
cmp
lret
in
mov
loop
or
jge
clc
movsl
test
jge,pt
stc
and
in
lret
pop
and
add
push
sub
pop
rcr
cld
mov
out
pop
pop
lds
int3
ljmp
add
das
fwait
pop
cwtl
push
test
sarl
clc
fdivrp
test
insl
xor
icebp
or
or
enter
mov
pop
jns
cmp
xchg
ss
loopne
shlb
jne
push
add
loop
iret
mov
push
jp
mov
mov
push
or
int
fcomip
sbb
and
jmp
insb
xor
jae
push
xchg
ret
loope
insb
mov
nop
inc
sbb
cmp
xor
pop
test
andl
es
and
cmpsb
cli
adc
daa
mov
in
jp
sub
dec
cmp
lods
je
inc
pop
jge
cld
mov
fwait
and
or
push
js
in
pop
mov
aas
in
mov
je
shlb
negb
fists
out
mov
shrb
cltd
es
or
mov
xchg
jnp
jo
adc
xchg
mov
in
add
decb
cmp
dec
sti
jns
imul
cltd
fisubrs
jnp
inc
mov
dec
lcall
shlb
lds
jnp
pop
pop
aaa
add
pop
cmp
sbb
mov
jle
xor
mull
cmp
push
or
ja
mov
jle
aas
mov
xchg
mov
shll
inc
cmp
dec
pop
jo
mov
stos
icebp
enter
sarl
jb
out
xchg
adc
pop
je
sub
mov
dec
test
out
mov
xor
xchg
mov
shlb
add
bound
pusha
add
xor
aad
lock
sahf
mov
jl
xor
in
cmp
lcall
mov
arpl
aad
jp
lods
jb
adc
mov
add
mov
or
push
aam
xor
je
push
adc
aaa
sub
stos
pushf
mov
popa
repnz
rclb
push
mov
lods
or
out
das
ret
pop
lret
divl
lods
push
fdivl
mov
cmp
sahf
mov
test
sbb
cmp
iret
sbbl
mov
test
movsl
ret
hlt
cmc
loopne
pop
fidivs
iret
pop
inc
add
cmp
test
movsb
adc
shr
dec
call
lahf
sti
mov
shll
cli
outsl
jl
jge
imulb
fiaddl
xchg
pmuludq
mov
xchg
out
repz
cmp
mov
test
xor
and
mov
adc
sub
addl
and
das
or
mov
cli
aas
jecxz
aas
jo
or
mov
push
adc
ds
mov
dec
test
loopne
xchg
call
sub
divl
mov
lods
nop
rcll
outsb
mov
xlat
fcomi
sarl
pusha
repz
movsl
test
xchg
sbb
cli
fidivl
sub
xchg
adc
mov
or
mov
insl
testb
mov
cmp
and
mov
xchg
mov
sbb
lahf
pop
lret
jns
mov
loop
sub
loop
jno
mov
scas
outsb
pop
jbe
aad
mov
add
pop
nop
push
aaa
icebp
leave
movaps
js
jmp
sub
shll
scas
movsb
stos
push
fdivr
loope
lcall
cmp
outsl
mov
xor
testb
in
pop
out
iret
outsl
lret
sbb
dec
and
jo
cmp
or
jle
shlb
xchg
aam
mov
dec
lret
jo
jnp
mov
std
mov
rcrl
les
sahf
push
add
and
arpl
mov
mov
repnz
out
mov
loope
iret
mov
mov
pop
frstor
sbb
loopne
jno
les
adc
mov
fs
sbb
cmp
mov
aam
push
mov
das
xchg
in
or
sbb
sbb
dec
scas
sbb
sbb
les
loopne
mov
call
pop
int3
pop
dec
imul
pop
push
mov
je
cwtl
loop
aad
mov
jp
xchg
pop
push
enter
repnz
lods
rclb
pop
mov
lea
imul
pusha
hlt
aam
xchg
cwtl
dec
sti
test
ljmp
dec
ficomps
into
addr16
push
lds
imul
test
loope
mov
sub
or
sub
pop
inc
push
ret
roll
sbb
mov
cmp
pop
test
jle
cli
es
xor
int3
cmp
or
pusha
cmpsb
pop
cmc
cmpsb
jecxz
push
mov
aas
inc
mov
cmp
sub
sti
sbb
sti
mov
mov
push
cmovns
lods
pop
ljmp
dec
jne
daa
push
pop
lods
xchg
enter
inc
mov
fisubl
in
jne
pcmpeqw
jb
mov
ret
scas
xchg
loop
mov
lds
js
cmpsb
sub
lret
dec
out
add
fwait
fwait
push
xchg
rcll
mov
mov
jno
lods
int
pop
cmpsl
dec
cmpsl
nop
cmpsb
jecxz
add
rcrl
cmp
es
jmp
sahf
gs
pusha
sti
xor
pop
iret
fsubs
sbb
test
lock
or
cs
insl
or
push
out
sbb
arpl
cld
pop
cli
sar
pop
or
stc
jne
pusha
in
cli
add
inc
jbe
push
cltd
in
lock
stos
mov
fdivp
jbe
and
inc
rcl
clc
sti
mov
cltd
fldl
std
jo
dec
sbb
mov
inc
xor
out
lret
in
mov
cwtl
adc
sbb
lds
orb
add
inc
sbbb
lock
es
push
push
xchg
nop
popf
adc
scas
incb
inc
fildl
not
push
arpl
push
inc
fiadds
jnp
leave
jns
add
mov
ljmp
call
sbb
pushf
and
movsb
mov
popf
enter
mov
add
insl
xchg
outsb
push
stc
ret
push
xor
loop
cmp
jae
aaa
mov
push
push
cmp
sbb
data16
icebp
jb,pt
popa
xor
aad
mov
mov
mov
loop
in
push
addr16
xor
jmp
out
cltd
push
aas
ficompl
mov
xchg
aas
cmp
jg
jno
pop
aas
inc
dec
push
inc
enter
pushf
cmp
pop
pop
cmp
pop
lock
les
out
mov
jbe
jge
jae
dec
xchg
pusha
imul
xor
test
push
add
inc
std
ror
inc
and
ret
sbb
jo
lret
cmp
iret
jae
mov
loop
mov
inc
loop
pop
xchg
push
pop
jp
stc
std
xrelease
rcrb
adc
or
enter
jne
into
cmc
popa
adc
or
jge
xchg
and
mov
loopne
mov
pop
int
and
in
pop
mov
xor
sbb
lds
mov
enter
test
loopne
sbb
addl
xor
sbb
sahf
hlt
or
jmp
xchg
cmp
loopne
cmp
mov
xchg
movswl
add
cmp
subb
cmp
dec
dec
pop
push
lcall
xor
push
or
inc
lret
push
mov
xchg
aad
push
test
pop
mov
fcompl
cmp
in
cs
pop
dec
cmp
cld
lahf
mov
in
lahf
loopne
mov
xchg
ror
test
fs
xchg
jo
cmp
pop
add
push
cmp
adc
in
imul
in
insb
addr16
jge
aad
push
cltd
lcall
out
and
jno
push
push
mov
xchg
mov
pop
fbld
arpl
xchg
lahf
hlt
xchg
mov
add
fcmovu
ljmp
std
js
sub
sub
dec
popf
push
or
int3
and
subb
ds
add
mov
test
mov
mov
cs
pop
or
in
push
call
lods
fsubs
sbb
dec
push
xchg
jne
imul
les
pop
mov
ficomps
or
icebp
es
push
int3
mull
dec
mov
mov
movsb
adc
scas
inc
push
adc
push
nop
popf
es
pop
loop
mov
mov
lods
pop
fwait
cld
xor
loope
test
imul
std
sbb
inc
andl
mov
jae
lahf
push
cwtl
aam
pop
scas
icebp
xor
lret
mov
inc
jge
pop
pop
push
xlat
ret
mov
hlt
sub
lock
add
addr16
js
sbb
xor
adc
adcb
nop
mov
mov
movsb
fcomi
cmp
dec
ja
js
adc
cmc
fbld
mov
je
mov
int
fldcw
ret
or
fldenv
pop
data16
lahf
cltd
insl
mov
mov
fnstsw
popf
mov
pop
sub
dec
xchg
push
popf
inc
rcrl
scas
or
and
push
loopne
mov
jp
popa
inc
enter
mov
repz
and
push
fstpl
dec
es
mov
cwtl
ret
dec
mov
outsb
das
inc
push
call
lret
add
scas
inc
imul
cmp
addl
lret
inc
in
jmp
sub
shll
out
xor
add
jbe
mov
inc
imul
sbb
xchg
adc
lahf
sbb
push
adc
pop
inc
outsb
out
xchg
paddw
movsl
fsubs
jp
js
add
test
adc
push
dec
ret
xor
cwtl
mov
lea
out
dec
push
push
push
xor
cli
icebp
pop
and
pop
push
movsl
subl
movsb
fistpll
push
xchg
push
sarl
mov
inc
cmc
mov
aam
fcomi
out
and
mov
pop
or
jl
nop
xor
mov
and
lds
inc
push
cmpl
xchg
mov
leave
jecxz
xor
xlat
jne
fcoml
fcompl
pop
adc
mov
xchg
mov
arpl
pop
dec
out
psubd
xchg
xor
add
sbb
sbb
insb
jae
int
mov
jo
xchg
adc
pop
dec
push
mov
sub
push
cmp
mov
rcll
and
test
ds
bound
dec
xor
mov
xchg
in
sbb
insb
jmp
hlt
stos
xchg
sub
pop
or
push
insl
jle
jecxz
out
insb
pop
mov
mov
push
mov
or
movq
outsl
les
cmp
fsubr
cltd
jnp
sbb
cli
rclb
mov
pop
pop
sub
mov
les
fs
xchg
push
mov
or
pop
loope
push
rorb
mov
push
cld
xor
pop
pop
xchg
mov
jne
adc
mov
add
cs
lods
sbb
mov
imul
or
jecxz
dec
scas
scas
sub
dec
jo
incb
bswap
outsl
fnstcw
insb
or
inc
loopne
mov
mov
sahf
pop
sub
sbb
cmpsl
mov
notl
mov
dec
inc
outsb
mov
pusha
xchg
jp
test
xlat
inc
and
xor
xchg
fwait
pop
ljmp
mov
xorl
int3
enter
sti
hlt
push
cmp
mov
lea
sub
cs
cwtl
xchg
outsb
cmp
test
pop
fidivs
add
sbb
xchg
mov
push
sahf
add
dec
jl
add
into
fwait
in
or
mov
lods
fisttpl
or
mov
inc
movsb
pop
fwait
aaa
aaa
inc
push
roll
sub
push
mov
jbe
ret
test
cltd
daa
into
jbe
or
pop
and
xor
mov
pop
fistpl
inc
mov
das
xchg
cmp
sbb
cltd
xchg
ja
xchg
push
sbb
sarb
mov
ds
lret
test
mov
fcmovu
out
mov
test
push
jmp
dec
cmp
aas
out
xor
mov
aaa
hlt
jae
adc
inc
sbb
inc
jbe
mov
inc
push
mov
lret
mov
adc
push
inc
pop
cld
and
test
cmpsl
inc
push
inc
inc
insb
int
sub
sbb
and
and
sub
xchg
jecxz
xchg
cmp
or
in
cltd
cmc
mov
out
mov
stos
aad
push
push
arpl
pop
cmp
add
test
sbb
mov
insb
out
lcall
scas
push
mov
cli
lret
insl
aad
dec
sahf
jmp
pop
mov
sarl
jne
push
xor
xchg
sbb
loope
mov
fs
cs
nop
hlt
xchg
lds
cmp
aaa
std
sub
lods
cwtl
out
leave
decl
or
je
cmp
aad
push
dec
jecxz
sarl
gs
dec
test
es
and
cmp
int
inc
repz
mov
sub
add
leave
mov
mov
mov
cmp
cli
das
repz
stc
xchg
add
ret
and
sub
sbb
data16
jle
push
sbb
push
std
or
mov
and
push
cmc
insl
into
fsub
and
or
mov
mov
or
test
loop
inc
jp,pn
or
and
xchg
sub
mov
in
cs
into
and
ss
insb
lds
xor
jns
mov
inc
jg
sbb
jl
in
jne
stos
push
or
sub
jl
push
adc
cmp
es
scas
jo,pn
fdivrl
stc
jg
out
xor
xchg
jl
jo
sbb
gs
es
in
push
jne
repnz
pop
movsb
out
add
xor
mov
movsl
jl
dec
push
mov
movsb
lods
mov
pop
cmc
mov
shl
cwtl
cld
push
jne
inc
cmp
ds
dec
outsl
adc
jne
es
adc
pop
das
mov
movsb
xlat
fstl
cmp
add
inc
outsl
mov
xchg
mov
ja
jl
loopne
xchg
xor
dec
fs
cmp
mov
jl
mov
mov
int3
pop
incb
shlb
idivl
inc
lods
out
roll
mov
inc
lods
dec
dec
mov
es
mov
ja
aaa
leave
ja
xchg
cmpsb
popaw
enterw
test
mov
scas
insb
xchg
xchg
insl
mov
shrb
mov
pop
sub
cld
test
push
adc
pop
adc
mov
cmc
clc
adc
js
mov
test
add
xor
in
shlb
mov
inc
hlt
push
dec
or
inc
mov
push
jns
vpunpcklqdq
addr16
inc
cmp
aas
adc
and
leave
xor
inc
loopne
lahf
pop
aaa
add
mov
mov
inc
add
or
or
pop
xorb
outsb
int3
ret
jo
or
push
push
inc
mov
clc
push
stos
push
rclb
xor
inc
pushf
mov
in
ljmp
out
xchg
jg
popa
jb
mov
push
xlat
push
lcall
dec
lea
sbb
inc
mov
and
mov
sub
test
fcmovnb
xchg
imul
adc
cld
lahf
xchg
push
and
subb
cmp
sbbb
lock
ret
and
dec
push
jo
scas
adc
dec
sub
sbb
adcb
jmp
imul
ss
js
xchg
out
mov
insb
inc
movb
fisubs
xchg
iret
ret
pop
cmpsb
js
loope
out
das
ja
cwtl
jmp
leave
popf
cmp
jo
lock
xchg
test
mov
jmp
sbb
insb
cld
jmp
xchg
xchg
jg
loope
jno
imul
je
bound
orb
mov
rcr
fsubl
sub
xchg
inc
iret
mov
mov
int3
cmp
and
les
gs
idivl
data16
and
push
push
repnz
xor
or
cmp
inc
mov
dec
retw
iret
mov
cmp
mov
mov
mov
std
adc
mov
cmp
scas
negl
shll
shll
je
sub
xor
lock
sbb
leave
xchg
repnz
push
bound
push
mov
fsubrs
test
sti
cmpsl
push
lcall
sahf
out
shlb
cmpsl
cmp
dec
adc
fists
cwtl
aam
push
daa
stc
adcb
outsl
cmp
cli
inc
jbe
inc
pushf
add
movswl
lock
inc
aam
adc
pop
pop
or
enter
xchg
scas
push
cld
cmp
mov
sti
or
mov
ret
in
jns
and
adc
ja
cltd
xchg
subb
ja
mov
movsl
mov
fmuls
inc
push
stos
adc
out
stos
inc
out
cli
mov
in
cmp
sub
jnp
into
cmpsl
fs
in
fistpll
rcrb
aam
push
insb
xor
inc
inc
in
scas
and
jp
lret
lods
sete
mov
xor
stc
mov
into
pop
dec
aad
nop
jne
mov
jmp
outsb
hlt
add
jbe
xor
lock
jecxz
dec
push
adc
cld
loopne
xchg
jae
xchg
pop
inc
mov
mov
lcall
dec
fisttpl
jmp
aad
hlt
adc
push
ljmp
push
ja
dec
mov
inc
add
jbe
fidivs
mov
adc
push
xor
jecxz
arpl
mov
lret
add
js
stos
xchg
scas
loop
pop
inc
int3
outsb
rcrl
sub
cmp
cld
mov
enter
jnp
inc
and
pop
mov
outsb
cltd
imul
mov
sar
mov
and
jnp
icebp
jmp
je
lcall
enter
or
or
lock
cmp
sbb
mov
add
mov
aam
jb
pop
cmovge
xor
pop
push
cmpsl
mov
jnp
aad
lock
mov
xor
fs
in
and
pushf
aad
add
mov
jl
sbb
sahf
fisttpll
aas
test
les
movb
inc
cmp
shr
fimuls
push
and
adc
sub
and
add
dec
mov
xlat
push
pop
mov
cmp
stc
xchg
adc
pop
popa
imul
mov
inc
sbb
add
insl
push
in
pop
dec
in
or
popa
ljmp
unpcklps
clc
pop
call
aad
sbb
jmp
jl
inc
bound
fcomps
add
push
test
movsl
dec
dec
jle
les
aas
mov
in
fisubl
mov
sub
mov
push
faddp
rorl
inc
dec
loop
jecxz
cs
push
in
sahf
out
aas
inc
pop
sbb
dec
std
stos
stos
mov
add
popa
inc
mov
mov
lahf
jae
inc
gs
xor
fs
outsb
xlat
add
pop
lea
sbb
mov
movsl
mov
repz
js
das
jmp
movsb
xor
cmovne
adc
add
mov
out
shll
push
dec
repnz
xchg
shrl
sbb
inc
sub
pop
adc
fucomp
push
into
jns
push
push
mov
jp
push
nop
pop
fsubrs
xchg
mov
cld
xchg
lods
test
std
inc
loop
dec
out
fsts
out
arpl
dec
inc
orl
or
push
mov
dec
mov
loope
pop
cmp
mov
lret
aas
push
or
sub
insl
jle
or
sbb
xor
das
ret
sbb
jmp
mov
jo
inc
mov
int3
into
push
popl
mov
cmc
pop
xor
pop
cmp
jne
lock
in
jecxz
sbb
or
mov
lea
mov
jnp
sahf
jbe
out
sbb
add
cmp
lret
and
out
pop
cwtl
mov
cli
add
fidivs
pusha
inc
inc
mov
add
cmp
test
call
fldenv
arpl
test
stos
dec
push
push
mov
inc
ja
aas
pop
push
fsubs
ljmp
int3
jns
add
fnsave
push
jle
daa
add
xor
dec
jnp
pusha
scas
cmc
pop
mov
push
shrl
divl
push
pop
mov
das
xor
push
rcrl
push
and
sbb
ds
dec
int
or
push
sbb
aad
mov
jle
pop
movsl
push
sti
add
js
pop
add
in
or
sahf
sub
and
dec
repnz
inc
mov
dec
pop
xchg
pop
inc
aam
cmp
lret
test
pop
pop
sub
xor
test
push
fcoms
cmpsl
inc
mov
sub
xor
mov
ja
jns
mov
ret
dec
mov
pushf
rolb
sbbl
pop
ror
in
pop
push
test
outsl
mov
adc
ljmp
jge
push
xchg
inc
dec
dec
push
pop
and
decl
lahf
rcrb
or
mov
mov
or
cmp
pushf
xchg
adc
sbb
loop
xchg
xor
and
inc
and
xchg
mov
sbb
inc
add
inc
jne
notb
clc
clc
pop
push
ds
pop
push
scas
mov
xchg
hlt
fsubs
cmc
push
arpl
mov
add
adc
xor
mov
lret
push
jl
clc
lock
adc
jmp
rcr
dec
mov
cmp
add
jne
mov
jp
mov
xor
mov
out
mov
clc
jl
pop
or
pop
and
hlt
and
out
mov
test
fisttps
movsb
jle
inc
adc
sub
fbstp
dec
inc
popa
es
sbb
pushf
dec
xlat
shrb
popa
mov
cmpsb
xchg
jp
test
push
stos
andl
fcomip
les
xor
lcall
mov
adc
cmpsl
js
jecxz
mov
xchg
mov
pop
sbb
decl
andb
cltd
dec
adc
pushf
iret
in
pop
add
sti
adc
or
cli
ds
push
add
stos
loope
mov
dec
lds
fnstenv
xor
leave
and
mov
pop
cmc
mov
jnp
inc
push
fs
push
sub
leave
rcr
sbb
mov
cwtl
pop
xor
or
adc
pop
mov
outsl
clc
add
mov
push
dec
js
sbb
sti
xchg
mov
and
dec
and
aam
pop
pop
and
scas
xor
outsl
cmpsb
and
scas
pop
adc
push
repz
jno
insl
gs
lods
adc
repnz
xchg
jne
fld
adc
ljmp
rcr
inc
mov
xchg
imul
call
adc
and
pop
ret
test
or
lods
mov
inc
mov
xchg
adc
aad
and
jge
fcompl
sub
fidivrl
xor
mov
ss
test
sti
sub
push
call
hlt
xor
lret
pushf
insl
cld
stos
js
pop
lea
ss
push
lea
cmp
fwait
adc
sbb
ja
gs
call
mov
mov
insb
fadd
ret
jae,pn
in
rcrl
sbb
lret
fsubrl
sub
stos
popf
nop
cmpb
push
sahf
xchg
fcoml
test
push
sbb
mov
inc
cwtl
les
jo
add
xorb
imul
or
mov
stos
xorl
lret
and
cmovne
jnp
pop
fcompl
pop
sub
in
push
insb
xor
cwtl
out
bound
dec
sub
in
jecxz
dec
pop
mov
shll
push
cmpsb
push
int3
fidivrs
int3
pop
or
fisubrs
lcall
mov
jmp
inc
inc
test
stos
imul
repnz
add
vmread
pop
mov
and
mov
sub
setl
push
dec
xor
inc
ljmp
push
lds
lods
sub
lock
adcl
ret
jo
out
ret
dec
jae
lods
icebp
aam
jg
dec
inc
les
cmp
sub
mov
mov
pop
pop
pop
sbb
je
mov
jb
or
imul
enter
xchg
incb
or
push
lahf
stc
sbb
xor
adc
aad
test
mov
dec
add
ja
xchg
add
xchg
int3
and
and
ja
xchg
adc
insb
or
rcrl
mov
push
mov
into
nop
adc
dec
subl
outsl
hlt
pop
sbb
add
popa
mov
inc
pop
out
cs
cmp
ds
neg
adc
or
push
mov
fdivrl
and
sbb
shl
dec
jle
jo
sub
xchg
sahf
push
push
sbb
fcmovnu
xor
popa
fisttpl
fdivrs
pop
lret
mov
and
push
cs
and
lods
mov
dec
in
sub
cmpsl
sub
cmp
sbb
xchg
shll
xchg
xor
in
xor
popf
iret
xor
and
mov
mov
sbb
cmp
and
cltd
sub
vpunpcklwd
add
pop
insl
jle
jnp
movsb
aaa
ljmp
out
and
dec
daa
out
xor
or
mov
rclb
xchg
inc
adc
int
out
stos
in
bound
into
sub
xchg
jl
mov
dec
ret
jnp
sar
jmp
xor
arpl
scas
xchg
icebp
add
xchg
call
lods
insl
inc
out
xchg
bound
aaa
dec
pop
mov
jae
das
xchg
or
xchg
outsb
lods
inc
lods
lods
mov
sub
xchg
sub
inc
cmp
lret
imul
fildl
fistps
dec
lret
call
add
lcall
pop
xchg
ljmp
std
sbb
dec
pop
jo
dec
sbb
push
xchg
stos
stos
addb
or
push
pop
mov
sbb
fimull
jne
icebp
ret
sub
movsb
lret
lods
dec
or
insb
bound
cmc
lea
out
and
testb
out
fwait
or
in
shl
lret
dec
and
jp
out
imul
mov
push
mov
pop
in
jg
sbb
scas
push
shll
in
jb
adc
sub
dec
mov
idivb
and
or
push
pop
mov
insb
cwtl
cmp
mov
inc
jmp
add
popa
xchg
pop
sub
xchg
pop
stc
les
sub
cmp
lahf
arpl
pop
sti
test
sub
mov
cmp
dec
jno
outsb
mov
jbe
or
cmp
push
adc
aam
testb
mov
mov
jo
les
xor
mov
adc
cmp
dec
iret
inc
lods
sub
lock
fidivl
jnp
repz
pop
mov
pop
fsubr
xchg
mov
jb
mov
cmp
cmp
nop
andb
dec
into
jne
push
aam
ds
dec
mov
jbe
adc
rorl
roll
pop
lahf
push
mov
ds
mov
push
mov
out
mov
and
adc
jns
mov
bound
mov
xchg
aaa
dec
jb
and
jae
dec
lahf
mov
ds
outsl
bound
insb
push
into
pop
jle
sti
jo
mov
aaa
mov
scas
adc
sbb
dec
sbbb
icebp
xchg
loope
out
dec
add
pop
sub
std
jo
lcall
add
inc
lods
stc
mov
bound
stos
push
insl
outsb
and
adc
dec
ljmp
fcoml
push
dec
and
fcomi
cmp
xor
and
stc
inc
je
hlt
pop
lds
iret
or
push
shrb
repz
xchg
mov
dec
arpl
mov
jb
push
inc
xchg
jge
in
loope
mov
shll
jge
aaa
testl
sub
cmp
jp
and
mov
dec
dec
inc
add
lea
push
jg
mov
jno
inc
icebp
outsl
pop
subl
xchg
dec
add
das
lcall
aas
std
daa
loope
push
push
mov
inc
dec
adc
push
add
test
pushl
push
push
mov
sub
ret
pushf
in
ffree
pop
mov
fmul
cmc
cltd
jo
shl
notb
jbe
sbb
setg
mov
push
addl
nop
repz
lahf
add
cld
clc
hlt
stos
cltd
mov
orb
adc
jg
ds
inc
cwtl
push
jl
sbb
mov
push
inc
cmp
cmc
xchg
repnz
repnz
push
mov
imul
sub
loope
cwtl
test
aam
sub
repnz
ds
inc
or
push
jbe
jle
add
call
hlt
loopne
mov
fwait
inc
arpl
lahf
xor
int
in
sub
in
decb
mov
fisubrs
arpl
lods
adc
push
test
lock
ds
and
iret
adc
pop
push
mov
icebp
mov
add
jb
push
jp
mov
pop
insb
cmp
movsl
pop
out
xchg
dec
fisubrs
std
iret
sbb
jb
sbb
or
lock
std
dec
lods
adc
cmc
dec
xchg
pop
and
inc
cmp
mov
call
imul
jnp
sub
adc
inc
aam
lret
sub
cmpsb
jp
popl
lods
sbb
imull
push
orl
add
test
icebp
or
dec
loope
dec
and
xchg
ljmp
sbb
sub
inc
inc
mov
aad
cmp
push
inc
add
movsl
sub
xchg
test
ret
inc
gs
mov
sbb
mov
mov
jb
inc
fucomp
pop
mov
push
test
loop
popf
xor
lret
cs
xchg
jp
gs
push
xchg
cmpb
mov
mov
ss
ja
aas
mov
mov
pop
in
mov
testb
pop
mov
or
call
mov
stc
sarl
add
imul
xor
int
adcl
pop
xchg
cmpsl
lock
inc
cmpsb
enter
adc
xchg
das
xor
repnz
insl
adc
fsubrp
pop
adc
out
fsubr
fisttpll
cltd
add
arpl
inc
sub
rolb
sbbb
dec
and
mov
push
roll
in
sahf
push
push
cld
adc
rcrb
mov
sbb
ret
or
inc
xchg
leave
xlat
psubsw
cmp
and
aaa
lds
sbb
dec
es
mov
xor
subl
jmp
or
mov
mov
mov
mov
lds
inc
repz
or
lods
clc
cmp
pop
dec
addr16
mov
movsl
iret
and
stc
rol
or
mov
call
ret
mov
add
cmpsl
shll
push
iret
mov
hlt
rclb
lods
je
lea
aam
inc
and
cmpxchg
push
int3
mov
jno
and
mov
or
sbb
pop
movsl
imul
add
mov
fld
pop
lahf
arpl
cmpsb
idivb
mov
and
mov
push
lcall
arpl
sub
out
pop
es
adc
iret
pushf
repz
scas
xor
repz
push
jae
mov
or
js
or
orb
ja
arpl
sahf
mov
inc
jp
mov
add
mov
jne
aam
dec
and
hlt
jl
gs
shrl
xor
pop
push
push
loopne
stos
jle
jle,pt
jo
pop
lret
mov
daa
mov
loopne
sbb
push
in
or
ds
inc
jg
in
in
enter
std
xor
into
mov
sub
pop
aaa
cmpsl
idiv
ljmp
push
xchg
pop
js
xor
cmpsl
mov
jb
jge
fiaddl
cmpb
jno
pop
inc
xchg
sbb
cli
enter
mov
mov
sub
xor
scas
loopne
dec
je
adc
out
and
fdivrp
sbb
rcrl
fistl
outsb
mov
cld
mov
scas
or
mov
add
frstor
in
pop
sub
mov
fcompl
xor
sub
scas
add
mov
mov
fbld
cld
sub
cli
cli
sbb
das
jbe
call
mov
cmp
scas
aas
adc
lret
mov
jp
stc
jne
hlt
cltd
lret
dec
sbb
adc
cmp
sub
add
inc
cli
jl
or
mov
and
inc
mov
inc
js
rolb
insb
bound
sahf
push
int3
gs
lods
mov
sub
push
shll
imul
sbb
mov
xchg
in
push
mov
inc
mov
xchg
inc
or
mov
js
jns
aaa
sbb
lret
int3
mov
push
nop
fldl
mov
and
pop
sub
stos
into
ret
das
xchg
push
push
insl
adc
jl
mov
iret
jg
rcll
jmp
jmp
mov
mov
das
jno
shlb
add
mov
push
mov
push
pusha
loope
mov
push
fsubp
js
push
inc
xor
fst
loop
loope
push
sbb
sub
jl
jo
push
sbb
push
sub
lret
sti
fs
pushf
jb
ss
sbbl
inc
add
stos
dec
mov
inc
cmpsl
xor
pop
jmp
add
jae
ljmp
pop
dec
mov
in
add
cmp
fisubrl
jns
lahf
aaa
mov
adc
adc
xor
sbb
xor
jg
push
bound
nop
fmull
adc
loopne
sub
pop
push
mov
testb
and
mov
stc
in
cld
inc
sbb
jns
in
dec
inc
xor
jle
sub
xchg
es
bound
loope
call
mov
cmp
loope
hlt
xor
call
in
int
cmp
lea
rcrl
pusha
cmpsl
out
mov
popf
mov
inc
push
xchg
xor
cmp
xchg
pop
dec
leave
add
lea
add
test
imul
shll
dec
lea
push
xchg
fwait
mov
adc
out
pushf
xor
stc
or
inc
popf
fisubl
aam
js
xlat
loopne
outsb
inc
lea
dec
inc
mov
mov
das
and
lret
jae
cld
xlat
mov
ret
in
mov
adc
popa
mov
cmp
pop
mov
mov
xchg
add
jb
pushf
pop
add
loope
jbe
movb
sbb
pop
dec
lods
jecxz
stos
inc
repnz
in
xor
les
ret
mov
ljmp
lods
pop
adc
inc
pop
xchg
cmc
icebp
add
lock
adc
and
js
mov
call
dec
das
add
fcomip
in
jl
push
fcompl
ds
xlat
rorb
mov
shrl
sbb
hlt
and
dec
xchg
xchg
aad
test
jno
ss
clc
add
repz
inc
push
xor
lock
or
sbb
push
fildll
jl
push
cltd
lahf
call
and
or
jge
fisttpl
mov
xor
push
pop
xlat
stos
fsubl
mov
js
xor
adc
ret
pusha
lods
sub
add
jo
mov
test
mov
outsl
xchg
jmp
mov
repnz
xchg
loope
add
jno
dec
dec
in
xor
loopne
sbb
in
rclb
fistl
pop
cmc
and
inc
jnp
cwtl
divb
dec
mov
mov
daa
cli
mov
lret
arpl
cmp
bnd
in
add
mov
push
pop
mov
add
in
sbb
fcmovnu
out
out
cmp
push
sub
test
rcll
pusha
cmp
test
xchg
movsl
lea
fwait
and
pusha
pop
adc
xchg
push
mov
cmpb
fistps
out
mov
xchg
lret
data16
test
inc
xor
mov
add
jecxz
int3
adc
mov
or
lcall
mov
cmpsb
into
inc
and
and
popa
test
mov
adc
data16
xchg
sbb
shl
out
adc
push
jp
and
adc
fnstsw
fwait
aas
xor
fstpt
mov
test
push
into
and
xchg
clc
dec
cmp
daa
mov
push
xchg
mov
sbb
mov
dec
jnp
or
push
das
jne
insb
mov
movsl
pushf
or
mov
stc
pop
stc
xor
addr16
mov
inc
subb
pushf
icebp
pop
vunpcklpd
pop
mov
sub
pop
sub
xchg
out
lcall
pop
xchg
lahf
xor
in
dec
sbb
jb
lret
pop
jecxz
push
lds
inc
pop
lret
xor
lcall
push
and
xor
aam
ret
dec
xor
cld
rorl
inc
cli
outsb
sarl
mov
xor
cmp
addr16
icebp
sub
out
je
sub
mov
mov
add
mov
insl
adc
sbb
cmpsb
pop
ret
jge
out
xchg
jle
jne
movsb
xor
imul
daa
push
repz
or
jl
mov
leave
cmp
jnp
inc
loopne
push
jle
out
cmpsb
mov
xor
jb
push
dec
mov
sbb
xlat
lahf
push
aas
sub
or
iret
mov
repz
pop
jb
pushf
and
adc
pop
scas
pusha
in
xchg
insl
push
and
lahf
xchg
dec
insb
test
inc
adc
cli
mov
lret
jle
pop
sub
ja
aas
test
shrl
inc
pusha
sbb
and
xchg
mov
shl
cwtl
aas
addb
ljmp
ja
loope
xor
fcomip
int
jne
add
scas
jno
into
leave
mov
stos
mov
push
leave
add
shrb
add
fstl
in
push
push
mov
xchg
and
test
jl
add
in
call
insb
mov
movsl
mov
inc
mov
or
jg
or
mov
outsb
aaa
std
sbb
roll
loopne
xchg
mov
pop
rol
pop
loope
jg
mov
sahf
adc
test
call
rclb
in
mov
add
leave
cld
lret
push
roll
push
or
ljmp
mov
cmpsb
mov
dec
cmp
fstpl
mov
cmp
rolb
sbb
or
rorl
movsb
out
jbe
jne
leave
fidivl
cmp
jno
mov
das
fcmovne
icebp
and
into
dec
fsubl
lret
lods
mov
les
test
test
xchg
sbb
xor
out
inc
sbb
xchg
cwtl
jge
sub
movsl
mov
xchg
dec
and
loop
mov
ret
xchg
and
push
lods
adc
pushf
xchg
in
push
adc
mov
mov
and
daa
dec
sbb
sbb
out
mov
mov
xor
mov
cltd
inc
push
cmp
or
pusha
hlt
sbbb
jo
das
mov
mov
pop
and
stos
xchg
mov
je
jl
leave
repnz
popl
push
data16
adc
sub
cmp
lcall
cmp
test
ret
pop
insl
push
fiadds
or
dec
mov
fmul
lahf
pusha
mov
cmp
or
fs
lret
adc
pop
jl
add
inc
sbb
mov
xchg
mov
xchg
mov
inc
arpl
stos
jecxz
cwtl
jnp
jno
icebp
mov
lds
test
je
adc
addr16
clc
pop
sub
jg
stc
mov
sbb
push
clc
adc
fadd
mov
sub
push
cmpsl
ret
lret
int3
and
xlat
xchg
mov
sti
sbb
testb
loope
jmp
inc
sub
add
cmp
pop
lret
shlb
je
aad
mov
sbb
jo
mov
cltd
inc
mov
in
mov
cmpsl
aaa
lds
sub
xor
fimuls
xchg
inc
push
icebp
lods
cmpsb
mov
pop
aas
add
pop
and
movsb
loope
cmp
in
dec
mov
inc
sub
and
jb
js
add
mov
pushf
ljmp
imul
mov
and
outsl
repnz
inc
push
inc
outsl
ss
mov
adc
filds
ss
bound
jmp
pop
ja
cmp
cltd
push
xchg
and
ss
adc
loope
cs
or
popa
lret
or
sti
aaa
lock
scas
adc
pushf
adc
mov
pop
out
or
rcll
and
adc
lods
out
lahf
and
arpl
jne
pop
das
stc
hlt
fadds
adc
mov
mov
and
sub
cs
test
dec
mov
bound
inc
sub
mov
dec
and
inc
repz
dec
andl
sbbl
sub
pop
inc
inc
sbb
jg
dec
adc
sti
add
xchg
pop
push
mov
push
imul
mov
sub
rcrl
sub
inc
xchg
pusha
push
in
out
xor
cmp
inc
jl
push
fldt
fstl
shrb
orb
sub
enter
daa
jl
movsb
xchg
and
je
xchg
lock
sub
inc
lods
cmc
push
lods
test
push
push
adc
push
or
mov
outsb
mov
jl
push
pop
jae
or
test
add
mov
ret
repnz
insl
inc
sub
mov
dec
dec
aam
int3
pop
mov
adcb
mov
and
mov
fwait
in
rcll
dec
push
or
xor
out
pushf
fsubr
shlb
push
sbb
inc
out
bound
pop
call
push
lods
cmp
cmp
les
cmp
jnp
orl
dec
dec
adc
and
cmp
lock
ljmp
xchg
push
xchg
nop
and
xor
int
add
xor
push
cld
push
push
xor
sub
or
aam
sub
ret
das
add
pop
in
mov
push
mov
test
xchg
popa
pusha
jae
rep
shl
insl
xchg
push
gs
fstpl
aaa
fidivrl
fstl
insl
divl
xchg
jle
mov
xchg
outsb
pop
jecxz
in
lea
mov
jmp
test
ja
es
sub
arpl
ljmp
mov
inc
sbb
jl
sbb
and
cwtl
movsl
leave
sub
sbb
popf
fimuls
mulb
adc
and
and
mov
mov
inc
pop
clc
push
xchg
or
fiaddl
shll
cmp
push
mov
pop
sub
pusha
in
mov
leave
ljmp
xchg
addr16
push
mov
or
mov
ret
rclb
xor
lret
xchg
inc
dec
or
lock
in
mov
xor
nop
add
mov
les
ss
popa
sub
xor
xchg
out
mov
sahf
icebp
lcall
out
inc
push
or
dec
mov
popa
addr16
leave
std
icebp
js
mov
mov
jp
jnp
sahf
leave
cltd
jno
dec
iret
inc
mov
and
call
fcoml
mov
scas
pushf
addr16
sbb
dec
arpl
dec
push
mull
je
dec
aas
ljmp
ja
movsl
sti
repnz
pop
xlat
fstpl
xchg
out
lret
jle
and
gs
xchg
mov
test
fmull
pop
xor
adc
repz
jmp
inc
mov
lods
pop
and
fwait
or
adc
loop
cs
xchg
movsb
or
andl
pop
popf
mov
enter
xchg
and
mov
mov
or
push
cmc
push
out
lods
push
inc
inc
clc
push
lock
call
jae
sbb
sbb
iret
dec
subl
pop
sub
mov
movsb
xchg
scas
jns
fdivp
push
clc
enter
jo
nop
inc
enter
inc
push
jae
jle
lahf
mov
pop
sbb
ljmp
xchg
outsb
js
insl
out
or
sbb
rcl
dec
rcrl
ljmp
mov
je
test
ljmp
fwait
sbb
xchg
adc
push
sarl
xor
inc
mov
xchg
jbe
or
xchg
dec
shll
or
mov
cmp
cmc
loop
xchg
ljmp
jnp
aad
cmp
push
pushf
jns
mov
and
add
xchg
daa
and
int
cwtl
fsubrp
call
sbb
mov
lock
in
mov
imulb
je
mov
cmp
mov
fwait
in
lcall
cmpl
or
js
fcoms
jl
sbb
test
mov
mov
mov
mov
push
setnp
pop
sbb
push
in
add
mov
test
call
test
popf
int3
mov
lahf
jne
clc
and
xchg
std
and
xor
movsl
sbb
mov
push
cmpsb
mov
sub
mov
lock
pop
cmp
cmpsl
adc
mov
data16
sub
sub
dec
mov
mov
add
pop
adc
in
xor
shrl
jbe
inc
mov
or
push
bnd
test
adc
xchg
jle
cwtl
imul
movsl
inc
mov
lods
cli
leave
xchg
hlt
int3
push
and
in
insl
stos
pop
iret
and
iret
scas
sarb
mov
in
sub
adc
iretw
jne
dec
fstpt
jecxz
into
pop
and
xchg
mov
adc
push
cmpsb
jl
push
loope
mov
pop
push
add
leave
std
rorl
testb
into
mov
clc
fsts
notb
mov
inc
mov
ss
shlb
in
cmp
add
repz
popl
lcall
add
std
popf
fimull
mov
mov
dec
std
adc
loop
shr
xor
mov
bound
aas
cmp
add
out
jo
mov
dec
jno
cmp
mov
xor
scas
pop
es
insb
int3
xchg
mov
lods
or
insb
cmp
test
mov
mov
and
xor
addb
xchg
mov
mov
adc
js
or
orl
push
push
scas
xchg
xor
dec
inc
push
mov
in
push
imull
imul
jle
fidivrs
stc
or
lahf
add
pop
lret
jno
and
arpl
lock
jecxz
push
out
xchg
or
pop
rol
push
jno
cwtl
sub
popf
aaa
add
rcrb
scas
xor
fstpt
lahf
and
popa
rcr
xchg
sub
dec
insl
mov
and
shll
stos
test
cmp
adc
loop
shlb
paddw
dec
aad
pop
jge
cmp
adc
or
mov
xchg
pop
cwtl
jmp
mov
aad
adc
out
out
mov
dec
cmp
repnz
and
das
sahf
loope
jp
repz
sbb
lods
inc
in
mov
or
jo
pop
lods
sbb
test
ret
icebp
jo
movsl
adc
test
cmpsb
mov
push
jecxz
cld
sub
cmp
xchg
and
loopne
int
pop
push
icebp
or
sti
mov
aam
inc
mov
sub
pop
dec
add
mov
pop
das
lahf
daa
dec
das
cld
leave
mov
shll
loope
js
jbe
xor
fildll
je
bswap
ret
mov
or
cmp
and
mov
test
stos
notb
imul
int3
sub
stos
pop
repnz
xor
stos
sub
aas
mov
out
sti
int
das
xchg
sti
xor
loopne
inc
dec
rolb
add
xchg
lods
adc
orl
movb
enter
sbb
jmp
or
pop
cs
rcrb
push
ss
jl
mov
mov
xlat
movb
fcmove
scas
mov
cmp
clc
stos
in
outsl
add
clc
movsb
popf
shrl
adc
out
mov
icebp
push
mov
cmp
andb
dec
add
cmc
jnp
repnz
and
jl
mov
popa
das
push
jle
xchg
imul
pop
inc
jp
dec
jle
je,pt
add
mov
das
shlb
pushf
push
in
cmp
sbb
lcall
jns
sbb
shlb
dec
out
mov
in
js
pop
add
int
out
mov
jb
nop
arpl
mov
aaa
mov
int3
inc
jno
clc
fldcw
cmp
or
xchg
xchg
sbb
mov
pop
add
or
and
adc
mov
pop
xchg
dec
popa
leave
mov
sarb
add
sub
dec
adc
imul
popf
or
scas
pop
imul
jmp
ljmp
nop
push
insl
push
fmuls
pop
dec
loope
sbb
into
fs
cld
adc
es
or
mov
mov
mov
jmp
mov
mov
gs
call
repz
push
lock
inc
jle
xlat
pop
lds
mov
imul
aam
mov
mov
and
jp
icebp
mov
dec
sti
notb
mov
mov
sub
aas
xor
add
inc
mov
lret
popf
test
inc
iret
xchg
mov
dec
iret
xor
stos
aad
sbbl
in
dec
pop
inc
or
xchg
orl
lahf
rcrb
mov
cld
mov
or
push
cmp
out
sbb
mov
add
jmp
or
repnz
cmc
imul
xchg
pop
jne
cli
pushl
stos
int
adc
mov
fidivrs
mov
cld
pusha
outsl
cmp
in
fnstcw
nop
aaa
push
out
pop
dec
pop
test
inc
mov
gs
xor
mov
inc
push
fisubrs
mov
addb
scas
dec
dec
cmp
ljmp
pop
jbe
stos
stos
daa
out
pop
push
shll
push
scas
test
or
cwtl
daa
adc
cmpsb
sub
adcb
push
dec
rcl
fs
push
xchg
hlt
pop
push
outsl
adc
pushf
movsl
int3
jmp
mov
lret
ljmp
dec
fistpll
icebp
xor
in
addr16
outsb
xor
mov
shll
xor
stos
jmp
cmpsb
inc
stos
vcvttps2dq
cld
push
cmp
xchg
cmpsb
sub
movl
xchg
loopne
sbb
out
mulb
mov
add
jne
rcll
xor
cmp
xor
inc
lcall
repnz
dec
jns
ss
into
out
sub
dec
sub
sub
fdivrl
sub
push
dec
std
loopne
cmp
mov
sub
in
test
test
pop
pop
fmull
ret
cmp
cwtl
jp
adc
push
jo
das
ret
jge
addr16
repz
fsub
ret
dec
or
adc
fwait
jae
ficomps
lret
sub
and
xor
fidivrl
pop
inc
jp
jmp
mov
test
or
aaa
movb
jnp
out
adcb
ret
xor
dec
mov
jecxz
test
sbb
push
push
sub
cmp
cmp
idivl
mov
push
pop
sbb
xor
shll
add
addr16
inc
sub
or
pop
push
cmp
fisubrs
mov
fisubrs
lods
add
mov
sbb
scas
mov
jnp
inc
aaa
je
outsb
cmc
aad
xlat
or
fdivrl
movsb
mov
out
mov
jecxz
out
jo
insl
mov
aaa
je
cmc
pushl
push
cmpsb
mov
daa
pop
jb
lcall
push
cmpl
outsl
xchg
sub
lret
mov
dec
cmp
lcall
mov
xlat
fs
aad
int
bound
pushf
gs
decl
pop
mov
jg
inc
into
lods
sub
shll
adc
fdivl
lahf
rorb
sbb
push
into
lahf
cmpsb
scas
hlt
mov
fimuls
out
inc
adc
pushf
aas
jo
mov
dec
out
sbb
dec
jno
pop
outsl
and
add
testl
and
fcmovnb
cmc
repz
mov
cmpl
addr16
je
js
popf
ds
cmpsl
or
jns
push
shrb
icebp
dec
mov
jb
sbb
or
mov
pop
mov
pop
subb
pop
inc
jg
enter
test
hlt
add
jns
cmp
in
idivl
push
xchg
enter
mov
push
sbb
xchg
cmp
sub
dec
repnz
repnz
pop
jp
cld
cwtl
fcmovnu
sub
cmpsl
in
arpl
sub
arpl
jb
in
mov
in
outsb
loopne
pop
jae
loope
imul
or
mov
cmp
daa
repz
dec
add
jecxz
sbb
movsb
mov
xchg
inc
sub
jae
data16
cli
out
data16
std
nop
stos
sbb
push
xchg
ljmp
mov
mov
cwtl
mov
or
add
add
dec
inc
mov
stc
xchg
popf
ficomps
je
jle
ja
stos
mov
push
or
fidivl
scas
insl
call
insb
sub
int
or
jge
hlt
fadds
fildl
pop
adc
mov
mov
enter
shlb
mov
popw
dec
cmp
sbb
sbb
cli
adc
and
jo
pusha
or
into
mov
iret
leave
or
xlat
or
sbb
das
lret
ljmp
test
sub
pusha
mov
add
cmp
jns
idiv
pop
jmp
mov
icebp
das
jp
mov
out
leave
push
jo
mov
fmuls
cmp
pushf
cli
xchg
add
mov
pop
test
and
xor
outsl
repnz
imul
mov
jl
gs
add
test
gs
sbb
sbb
testl
dec
popf
pushf
lea
lock
or
mov
ss
sti
and
mov
stc
inc
cmpsb
ds
sbb
dec
movsl
push
imulb
testb
insl
daa
mov
jmp
aad
loope
hlt
push
rcrb
fcos
cli
icebp
inc
ss
cmp
in
or
lahf
orb
xchg
aam
xor
cmpsl
push
aad
pop
outsl
mov
lret
mov
iret
sbb
jl
scas
adc
inc
shrb
out
popf
mov
lods
xchg
mov
pusha
jl
lock
inc
test
sub
push
dec
adcb
pop
test
adc
data16
push
mov
push
push
cli
int3
sahf
sub
jnp
shrb
pop
jp
cmp
mov
pop
lock
mov
aad
sarb
inc
sbb
and
sub
pop
add
nop
in
ss
fstpl
fadds
mov
outsb
and
lcall
and
aad
popf
inc
in
ja
mov
leave
jbe
es
mov
dec
imul
fidivrl
cmp
xor
adc
in
and
outsb
mov
loop
sahf
movsl
ret
sbb
out
ror
cmp
f2xm1
test
adc
out
push
insb
in
ja
adc
fidivrs
int3
mov
inc
xor
xchg
xchg
sti
imul
dec
jae
jl
pop
cmpsl
ret
fcomps
fsts
in
outsb
in
mov
xchg
in
jne
in
mov
cmp
fstpl
xchg
mov
call
mov
inc
sbb
cmp
rolb
leave
xor
cli
bound
repz
aaa
clc
mov
outsl
jns
je
fdivl
notl
popa
scas
je
dec
jnp
imul
ret
or
sub
jb
jnp
inc
dec
jbe
nop
lods
jmp
fdivs
pop
push
dec
sbb
rcll
hlt
shrl
xor
xchg
mov
cmp
enter
add
push
es
jmp
sbb
stc
repz
push
sbb
out
nop
and
outsl
sar
mov
push
ja
addr16
pushf
mov
pop
cmp
xchg
xor
inc
cmp
sbb
or
das
xchg
or
subl
test
add
lret
inc
xchg
add
scas
js
hlt
mov
lds
pop
xchg
repz
add
cmp
xlat
dec
ret
rcr
enter
push
out
shlb
popa
adc
bound
in
les
mov
lock
fidivs
mov
push
pop
ss
movsb
or
lret
jge
lret
fldt
stos
pushf
scas
adcb
push
xchg
push
sti
pop
xchg
sahf
test
pop
mov
je
push
inc
fistl
mov
mov
pusha
loop
cmpsl
ret
cmp
dec
xlat
addr16
ss
outsb
adc
pop
cld
push
inc
std
add
cmp
sbb
sbb
sahf
mov
pop
cs
lret
inc
aad
lret
pop
scas
xor
xchg
inc
xor
or
test
adc
mov
rcll
jb
sub
popf
dec
daa
xor
call
sbb
mov
adc
leave
rcrb
in
loope
mov
xchg
xchg
scas
jo
mov
insb
cltd
ds
mov
jecxz
sbb
xlat
enter
and
add
inc
cltd
cltd
movsb
jae
or
push
mov
inc
mov
mov
mov
clc
jle
cwtl
adc
fisubs
push
jne
or
adc
push
cmp
loopne
test
test
call
xor
outsb
cmp
cltd
cs
add
xor
outsb
cmp
sbb
mov
outsb
mov
cmp
mov
imul
inc
push
push
popf
push
pop
jp
jns
mov
fcompl
pop
inc
rcrl
mov
rclb
mov
dec
test
jno
into
push
lea
int3
xchg
xchg
das
dec
leave
repnz
lret
dec
lods
fs
nop
das
xchg
loope
push
lahf
mov
xor
out
ljmp
scas
and
adc
cmp
cmp
std
addr16
mov
adc
movsb
nop
xor
cmc
xor
cltd
and
jl
inc
dec
shrb
sbb
sbb
out
int
lahf
inc
fisttpll
pop
or
es
mov
inc
sub
pop
inc
stos
mov
js
jge
cmpl
lods
cmp
xchg
xor
xchg
push
loop
pop
ja
mov
sbb
inc
insb
test
cmc
fisttps
sbb
lcall
enter
in
dec
sti
fldl
cwtl
sarl
dec
in
pinsrw
aas
mov
cs
and
pop
dec
xchg
sub
xchg
jmp
or
and
loop
and
dec
iret
sbb
addr16
pop
jp
fsubr
std
add
jp,pn
icebp
and
jl
pushl
pop
fst
lcall
jge
popa
xor
add
mov
test
sahf
cmpb
inc
fdivrs
push
ds
or
xchg
lock
mov
pushf
push
add
aaa
jge
arpl
imul
rorb
xchg
adc
test
mov
mov
xchg
push
outsb
jmp
test
push
int3
xchg
addr16
div
ret
xor
ret
les
decl
fs
into
bound
test
xchg
pop
adc
aad
cltd
into
adc
push
adc
imul
mov
pop
aas
push
repnz
je
fdivs
jmp
loope
int
push
loop
dec
fcomps
mov
arpl
cmc
into
sbb
stos
xchg
inc
loop
icebp
jnp
ja
out
jecxz
in
sub
mov
xchg
xchg
dec
jg
rcll
cmp
push
fwait
imul
or
push
outsb
push
shlb
jb
inc
scas
enter
xor
in
insl
or
das
sub
cmpsl
ret
jg
ss
into
inc
aaa
insb
inc
stos
cld
pop
fisttpll
nop
mov
mov
nop
aas
std
ficomps
jb
mov
sbb
stos
fildl
icebp
cmp
or
mov
fiaddl
or
adc
mov
fistpll
stos
stos
int3
push
pop
mov
cmc
mov
mov
pop
xchg
mov
loop
rorb
pop
push
mov
fldl
rol
repz
cld
js
dec
push
cmc
jb
mov
inc
pop
daa
jo
push
push
pop
imulb
ljmp
sub
inc
jns
sbb
mov
aaa
cmp
movsl
popa
hlt
pusha
xchg
sbb
push
rcrb
lock
add
out
mov
subb
pop
jo
test
jecxz
cld
mov
add
mov
pop
roll
mov
jnp
popa
daa
add
lods
nop
jg
cmp
in
daa
pushf
xchg
xchg
mov
iret
shlb
cli
jg
imul
pop
mov
insl
mov
inc
mov
xchg
mov
test
push
pop
mov
inc
and
fisubrl
mov
addr16
aas
push
das
mov
pop
daa
pop
dec
inc
enter
lret
jl
in
or
subb
cld
xor
aaa
push
inc
test
jle
loope
cmpsb
mov
mov
xchg
sbb
int3
pop
cmpsb
sub
stos
lock
ljmp
fcmovnbe
mov
mov
fnstenv
xchg
faddl
aas
icebp
fcmovnu
jp
ret
mov
andb
jns
aas
push
mov
popf
mov
enter
mov
xchg
jnp
mov
scas
jnp
popf
mov
ret
popf
xchg
repz
push
pop
mov
dec
xor
shlw
repnz
cmc
mov
fistps
mov
inc
gs
dec
daa
jae
cmc
out
shrb
rclb
lods
das
scas
mov
pusha
xchg
jo
int3
dec
and
cmp
push
lods
xor
adc
rcll
sahf
js
scas
sbbb
adc
jae
scas
pusha
sbb
fdivrs
sub
inc
es
cmp
popf
dec
sbb
jbe
addr16
xor
push
push
jmp
nop
xor
dec
mov
addl
jae
loope
das
popa
xchg
je
jno
dec
sub
bound
add
and
out
dec
out
inc
fidivrs
mov
cli
mov
jecxz
pop
pop
cmpsl
lock
mov
mov
add
das
addr16
adc
mov
in
adc
dec
jge
xchg
loopne
sbb
sti
xchg
pop
push
out
daa
mov
and
push
cmp
lods
and
std
loop
cmpsb
sahf
mov
ja
js
stos
std
in
dec
std
aaa
mov
fwait
pop
je
mov
iret
fwait
mov
xchg
mov
arpl
in
call
mov
fs
cmp
fstps
std
xor
adc
fidivs
push
sbb
mov
dec
dec
or
and
or
inc
cli
hlt
pop
mov
sub
cltd
in
ficoms
mov
test
in
int3
inc
and
jb
cmpsb
fildll
in
rcrb
jnp
or
jle
add
mov
lahf
insb
shr
dec
and
add
jne
lret
pop
int3
add
adc
andb
xor
shr
iret
jae
cmp
mov
callw
xchg
in
add
enter
and
inc
dec
in
pop
enter
add
adcl
lret
test
hlt
and
ss
adc
inc
fdivs
fidivs
sbb
in
and
xchg
xchg
cmpsl
adcb
mov
and
pop
arpl
push
or
dec
rolb
leave
mov
inc
jge
cwtd
insl
xor
or
loop
inc
jno
pop
std
push
pop
out
and
pop
jg
call
lock
sbb
adc
stos
in
cmpb
push
je
add
cs
push
or
mov
or
aam
insl
idivl
and
pop
pushf
ror
pop
mov
xor
jns
daa
cmc
mov
sub
lods
push
or
popf
icebp
stos
pusha
inc
aad
add
call
hlt
gs
cltd
idivb
inc
and
push
cmpsb
outsl
out
mov
push
rorb
cmp
inc
hlt
ficompl
js
roll
out
xor
inc
mov
adc
sbb
std
inc
inc
mov
fistpl
sti
mov
decb
jnp
jle
push
cmc
add
outsb
or
test
test
pop
mov
push
imul
pop
inc
popa
or
vmwrite
cmpsl
movsb
xor
ja
add
iret
out
aam
popa
pop
bound
ret
mov
xchg
sub
jecxz
fidivl
in
scas
or
ret
mov
cmpsl
cmp
mov
cltd
dec
and
bound
xlat
push
int3
stc
cmp
mov
ffree
jne
addl
out
sbb
mov
leave
pop
mov
push
stos
jno
xor
out
jb
and
or
and
aam
jb
ret
sub
sub
out
nop
sti
inc
mov
loop
pop
jl
jae
mov
mov
cltd
xor
inc
loope
xchg
cli
test
inc
in
sub
daa
fisubs
push
ljmp
shlb
inc
icebp
sub
lds
rclb
xchg
jb
cmp
inc
push
xor
and
in
pop
jl
inc
xor
and
jo
lods
arpl
cmp
cmp
pop
hlt
icebp
test
pushf
jb
aas
adc
ret
sub
or
fldt
xchg
cmp
jle
testb
cmp
cmp
dec
jp
jg
fdivs
insb
sbb
jp
out
or
sahf
test
leave
test
adc
clc
cmpsl
data16
xor
mov
push
adc
cli
pop
add
adc
je
mov
lock
mov
rcrb
sbb
les
pushf
cmp
loop
jae
jge
lds
int3
pusha
mov
orb
popf
sub
push
sbb
aas
sbb
and
jb
in
push
mov
sbb
pop
push
jbe
sbb
jp
jbe
test
in
mov
fistpl
js
adc
and
jp
cltd
dec
nop
adc
repnz
jp
sub
jo
cmc
mov
pusha
cmp
repnz
inc
dec
sbb
fprem
xchg
cmp
and
pushf
ds
xor
dec
ss
push
in
lret
xlat
push
jnp
pop
and
and
out
cmpsl
xchg
nop
outsl
cmpsb
xor
aad
xorl
cmp
xchg
lret
inc
push
sbb
mov
inc
lock
fldenv
fucomip
out
sbb
loopne
pop
rorl
aaa
in
mov
mov
fsubl
and
jnp
in
cmp
add
push
cmpsb
xor
dec
movsl
insb
push
cmp
pop
jns
sbb
push
jne
lcall
mov
sub
pop
jg
notb
lcall
scas
into
push
dec
fdivrl
into
jle
mov
xor
lret
cmp
mov
dec
ja
lahf
stc
gs
insb
stc
enter
push
loopne
push
sti
out
sbbl
sbb
push
adcl
sub
arpl
idivl
push
lret
addr16
cmc
aas
dec
cmc
jbe
cli
arpl
pop
push
xor
pop
cmc
sbb
cmp
pop
clc
mov
mov
sub
cmp
pop
lret
xor
aam
add
and
lods
sbbl
test
sbb
scas
sbb
mov
aad
cmp
push
pop
les
in
imul
inc
mov
add
mov
nop
incb
ja
jae
or
mov
push
push
cs
and
jecxz
pop
ss
ja
addr16
loopne
cmpl
cmp
pop
mov
mov
jno
cs
push
push
xchg
out
aas
push
mov
sub
mov
andl
icebp
jo
pop
ljmp
adcb
popa
loope
sub
lds
sbb
fistpl
fistl
dec
lcall
repz
adc
jb
mov
test
andb
xor
ljmp
cmpb
cmc
dec
sbb
or
fmuls
lods
inc
addb
sub
fldl
and
jnp
outsb
repnz
rol
mov
add
pop
scas
and
jecxz
fmull
sahf
mov
sub
xchg
xchg
add
sbb
mov
inc
test
cmc
cmpsb
nop
into
add
les
ss
pop
cld
jp
jecxz
data16
aad
rorl
mov
popa
mov
cmpsl
ret
cli
jecxz
mov
movsl
xor
mov
or
ret
pop
int3
cmp
push
sub
fxam
lds
add
pop
and
add
mul
int
xchg
ficoms
and
inc
daa
push
in
add
add
lods
dec
loop
popf
mov
sub
and
in
cli
dec
lods
lds
jbe
in
mov
inc
sbb
mov
jnp
lock
rcl
int3
mov
xchg
push
int
ss
mov
jg
mov
adc
sbb
push
sub
mov
mov
ret
lods
bound
xchg
mov
repz
mov
inc
mov
in
test
cmpb
mov
lea
and
mov
nop
add
outsb
adc
lock
xchg
mov
xor
cmp
fs
add
jbe
vmovss
and
ret
arpl
shrl
jecxz
mov
mov
dec
xor
push
dec
or
loope
mov
outsl
push
cmp
rorb
add
int3
pop
xor
push
or
and
or
sub
dec
fs
cwtl
imul
test
mov
imul
jge
sub
pop
dec
mov
mov
push
cwtl
mov
mov
pusha
iret
add
mov
lret
or
cmp
mov
mov
int
testb
xchg
lds
lret
inc
pop
test
sub
outsl
dec
cwtl
dec
jae
xor
fldenv
push
cs
test
and
push
cmp
mov
inc
leave
sub
inc
cltd
jne
cmp
mov
sub
imull
jg
mov
loope
pop
inc
mov
dec
in
les
sub
fld
mov
xor
or
ret
xor
inc
fimuls
pop
sbb
scas
aam
fiadds
adc
sti
lods
cli
dec
andb
lods
and
inc
pusha
lcall
xchg
cld
cmp
or
test
jmp
sub
leave
sub
fstpl
jo
std
mov
add
das
es
cmpsb
pop
cmp
mov
push
xchg
adc
dec
xor
inc
sbb
push
xchg
shlb
test
push
imul
pop
pop
ds
jmp
test
cmp
leave
cmpsl
out
jb
dec
pusha
sub
rorb
xchg
sub
in
inc
daa
jecxz
dec
xor
in
dec
or
sbb
in
sub
rclb
lock
mov
mov
cmp
cmp
sbb
push
aad
out
dec
daa
nop
xchg
mov
mov
in
sti
or
shrb
jecxz
and
cmpsl
mul
lret
int
pop
test
lret
xor
cmpsl
dec
adc
pop
mov
mov
inc
mov
inc
mov
lods
lret
lret
in
or
sti
mov
jp
jns
pop
add
leave
and
movsb
or
and
mov
adcl
jmp
bound
test
xchg
push
movsb
lahf
les
or
xchg
or
and
shr
sub
cmp
addr16
mov
sbb
jns
cmp
inc
outsl
jno
stos
push
orl
xlat
popf
add
jg
pop
adc
push
test
jp
jp
cmp
insb
sbb
sub
test
outsb
inc
repnz
jae
jp
sahf
and
in
fisubs
fstpl
xchg
icebp
insb
xor
imul
insb
cmp
cltd
mov
xlat
shlb
fs
add
add
dec
push
mov
jmp
dec
daa
xor
mov
sahf
orl
je
mov
jne
dec
fdiv
sar
xchg
pop
roll
bound
popa
pop
cmpsb
test
cmc
mov
lds
lds
arpl
movsl
nop
inc
hlt
jmp
cmp
inc
or
lret
negl
scas
aaa
push
shl
xchg
sub
lods
loope
mov
cwtl
lock
das
ds
lods
movsl
fistl
push
xchg
into
imul
imul
push
xchg
lods
pop
icebp
lret
mov
sbb
sbb
or
dec
fmul
sub
aas
pop
insl
imul
test
cmpsb
mov
popa
loopne
jnp
scas
leave
xor
imul
push
daa
adc
lret
push
sub
mov
xchg
xor
xor
dec
jle
mov
sbbl
cmp
daa
mov
faddl
fistl
inc
dec
xchg
popf
cmp
lods
cmp
push
sti
xchg
dec
iret
mov
dec
inc
and
lds
or
jle
pop
cmp
pop
cmc
push
push
add
stos
gs
mov
insl
jg
imul
cs
adc
daa
imul
mov
fwait
leave
cmovbe
loope
popa
push
loope
sti
ljmp
adc
bound
sbb
cmc
sbb
or
cld
sub
adc
push
outsb
pop
lods
orb
pop
lea
jp
repz
ds
imul
jne
ret
mov
xor
cmp
sub
add
insl
mov
mov
loope
xor
cli
jns
jg
icebp
mov
imul
add
push
jno
enter
enter
lods
cs
push
pop
dec
jb
push
iret
cli
sti
lahf
and
aaa
ja
cmp
addl
dec
stc
das
jmp
jns
into
stos
push
imul
and
pop
icebp
adc
and
imul
add
dec
loopne
popa
dec
out
mov
insl
cmp
or
fidivrs
fwait
push
repz
faddl
loopne
fists
movsl
std
nop
mov
psubq
test
loopne
cmp
rcrl
ret
xchg
mov
aam
outsb
mov
fcmovnb
mov
xor
test
mov
aaa
sahf
push
sbb
jmp
mov
push
add
stos
cmp
lret
jp
loop
in
mov
mov
imul
faddl
loop
repnz
rcrl
jnp
fstl
daa
test
push
imul
or
int
sbb
ret
pop
dec
sub
push
adc
push
xor
push
inc
icebp
jnp
cmp
mov
jmp
out
bound
mov
mov
push
or
fdivs
mov
xor
fisubrl
adc
sbb
jp
xor
add
and
mov
lods
mov
mov
add
faddp
movsl
enter
scas
or
adc
pop
and
cmp
scas
popa
out
clc
cmp
inc
cmc
add
in
and
pop
std
mov
xchg
xlat
push
jbe
cld
adc
loop
shrb
jbe
sbb
xchg
mov
or
jns
or
pop
lahf
or
mov
inc
testl
les
adc
aas
sub
jno
jb
or
sub
frstor
cmp
mov
jbe
or
loopne
nop
xlat
inc
test
mov
stos
sub
cmpb
imul
jns
sbb
popa
mov
inc
daa
jle
rorb
cmp
inc
andl
cmpsl
inc
mov
shll
negb
imul
cld
fldt
pop
cmp
je
inc
add
fsts
jmp
mov
addr16
mov
lods
jecxz
js
cmp
daa
push
inc
imul
repz
testl
stos
mov
into
jnp
scas
into
or
fwait
jno
mov
or
stc
mov
jne
cli
lods
addl
or
mov
jo
xor
xor
test
mov
inc
push
decb
jmp
dec
push
std
roll
jbe
ror
ljmp
mov
lahf
das
pushf
popa
xor
fidivrl
jno
cld
test
test
ljmp
ret
mov
ss
insl
dec
testl
sbb
mov
lods
popa
and
sub
cmp
xchg
dec
add
into
adc
ja
es
insl
mov
les
xor
mov
inc
aam
fildll
pop
addl
mov
js
and
add
out
mov
adc
imul
ja
bound
int3
or
in
test
mov
es
cld
xor
jne
das
pop
ja
add
push
fidivrl
popf
je
loopne
subps
mov
adc
mov
add
aas
jg
dec
xchg
mov
nop
and
lret
iret
in
jb
into
scas
add
pop
cmpsl
repz
push
xchg
xchg
cmp
or
ja
lret
jmp
cmp
inc
out
scas
xor
call
jge
xchg
adc
testb
pop
pop
or
rcrb
pop
aas
jle
test
add
jg
call
mov
push
pop
outsl
insb
shrl
outsl
add
mov
sar
adc
pop
mov
ret
xchg
stos
es
stc
jle
jnp
ja
dec
cld
fildll
loope
ror
sub
mov
sub
jo
ror
stos
pop
out
pop
ljmp
fidivs
pusha
mov
test
es
stos
movsl
pop
fistps
or
nop
jb
or
add
and
push
adc
shrl
gs
jne
andb
jge
and
xchg
pop
mov
push
stos
dec
inc
out
push
fidivs
cmpsb
push
iret
lret
faddl
rolb
repz
inc
mov
jbe
cmp
mov
mov
jne
sub
in
pop
fnstcw
gs
add
mov
clc
xor
fwait
decb
mov
push
mov
sub
push
pushf
jnp
nop
mov
pop
jmp
mov
and
adc
pop
adc
mov
insl
out
add
sahf
fsub
pavgw
imul
dec
or
xorl
sbb
repz
sbb
push
sahf
pop
jno
nop
jb
jp
push
insl
into
sbb
outsb
dec
adc
sti
iret
cmp
std
lods
mov
mov
sbb
adc
xor
xor
push
scas
fidivrl
pusha
or
push
das
mov
push
and
mov
sub
subb
js
std
insb
inc
insl
subl
lods
sub
stos
leave
cmpsb
inc
adc
mov
bound
cmc
add
nop
sbb
adc
imul
push
int3
aad
xchg
xor
pushf
push
add
sbb
mov
bound
mov
mov
inc
outsb
jo
pushf
xor
or
fiaddl
mov
cmp
jae
push
mov
bsf
insl
mov
adc
ficoml
imul
cwtl
movsl
call
ss
and
adc
aad
xorb
sbb
push
push
fcoml
mov
ret
sbb
lcall
movsb
jns
inc
roll
jb
xchg
popf
cmpl
in
jle
imul
sahf
jae
jne
mov
js
cmp
add
fs
cmp
adc
rclb
sbb
fsubr
fistl
cmp
leave
rcll
pop
jmp
ficoms
aaa
aas
xchg
pop
ret
push
cld
rcl
imul
shrl
fdivs
inc
pop
mov
mov
jmp
mov
xchg
lds
adc
or
ljmp
shrl
mov
lock
mov
out
and
mov
and
imul
xchg
in
cltd
sar
xchg
arpl
xorl
xchg
add
dec
jle
test
repnz
cmc
pop
into
and
es
pop
ja
scas
jb
inc
ret
ret
mov
outsb
out
push
mov
jnp
dec
ret
orl
mov
add
add
repnz
outsb
std
lahf
dec
in
into
fistpll
por
jmp
pop
int
xchg
int3
pop
mov
mov
and
scas
mov
idivl
mov
jae
jns
aaa
int3
sbb
adc
dec
popf
cmp
sub
mov
cmp
adc
push
jo
adc
inc
dec
dec
jmp
call
xchg
pop
test
push
adc
push
cmp
mov
push
push
mov
sub
sub
into
insl
fldenv
aaa
mov
mov
stos
pushf
cmp
inc
cmpsl
ss
rorb
test
mov
lahf
mov
dec
mov
out
pop
imul
add
cmpb
add
sbb
xchg
dec
je
mov
sub
fistl
mov
mov
jle
and
ror
mov
xor
test
sub
adc
jno
or
test
cmp
or
mov
pop
js
jno
test
pop
loop
cmpsl
xchg
xchg
movsb
sbb
mov
xorl
subb
cmp
mov
or
stc
out
mov
std
and
fldt
push
movsl
sarl
xchg
pop
sub
mov
test
not
pop
inc
and
fidivs
int3
dec
mov
idivb
ret
inc
inc
and
dec
pop
addr16
sub
and
xchg
pushf
jae
push
aaa
pop
insl
xchg
push
loopne
subl
jne
xor
outsb
out
push
fwait
mov
mov
jbe
mov
out
push
mov
popf
mov
insb
les
and
push
imul
push
pop
jo
or
mull
and
mov
inc
std
dec
mov
xor
push
push
and
cmc
lret
and
xchg
xchg
xor
sahf
cmpl
rclb
and
mov
and
insb
xchg
jmp
cmp
mov
xchg
jg
mov
pop
push
cmc
ds
mov
rorb
gs
add
and
lods
fs
xchg
pop
push
fucom
call
mov
test
dec
test
dec
inc
rclb
or
lock
cmpsl
leave
sub
imul
fildll
inc
fsubr
in
sub
xchg
cmpsb
mov
enter
sub
out
repz
xor
mov
mov
mov
in
rcll
jno
sbb
lcall
push
outsb
loopne
pop
sub
xor
adc
sar
test
jb
inc
and
loope
fidivl
dec
out
sub
sbb
jp
pop
mov
xchg
mov
shrl
dec
or
mov
sub
sarb
mov
inc
or
push
xchg
mov
lods
cmp
push
mov
cs
adc
dec
das
adc
mov
xchg
or
dec
fildll
and
and
dec
push
pop
pusha
xor
sub
cmpsl
aad
xchg
push
addr16
add
adc
test
cli
xor
mov
lcall
mov
insl
jns
cmp
lcall
cs
aad
stos
cmp
jge
jbe
cmp
fildll
inc
jbe
out
xchg
sbb
mov
mov
push
adcb
pop
mov
mov
pop
movsl
mov
lock
mov
lcall
mov
ret
mov
shlb
add
and
dec
mov
lds
mov
xchg
sub
jae
pop
test
and
in
pop
dec
dec
sarb
inc
adc
cmpsb
insb
jb
sbb
mov
int
add
dec
popa
shll
adc
mov
lods
sub
adc
inc
dec
pop
push
sub
mov
push
mov
inc
dec
addr16
daa
or
adc
call
mov
xor
xor
movsb
mov
xchg
mov
mov
daa
test
and
jno
sbb
sbb
pushf
inc
mov
cmc
cmp
lahf
push
incl
mov
dec
pop
push
loopne
ss
xchg
iret
add
int3
and
mov
fdivrs
js
loop
inc
pop
push
inc
xchg
cld
cmp
dec
jmp
pop
dec
sbb
lret
daa
cmpsb
aad
push
ret
fcmovnu
push
push
mov
sbb
popa
shl
mov
jl
mov
pop
cmc
jmp
adc
stos
lods
sub
fstp
and
lahf
mov
sbb
popf
int
lock
cmp
mov
mov
dec
loop
dec
push
icebp
aas
in
or
mov
xor
ds
lahf
adc
hlt
xchg
and
data16
das
add
sub
xor
sub
jmp
mov
lea
xchg
std
pusha
shlb
sbb
xchg
leave
loop
scas
jecxz
or
cmp
cmpsl
lds
popf
dec
fsubl
fcompl
stos
sbb
jp
loope
sahf
sub
in
out
jl
mov
xorl
mov
ja
or
inc
push
push
in
push
sub
repnz
mov
mov
loopne
pop
xor
pop
mov
xchg
xor
icebp
jnp
fisttpl
cmp
jno
popf
pop
xor
in
mov
call
out
stc
push
sub
cs
jge
dec
into
btc
pop
into
fnstsw
and
addr16
push
aas
adc
push
sub
fld
push
mov
into
sub
sub
jmp
xchg
mov
push
or
fcmovnb
ret
push
fimull
pop
into
xor
jg
mov
adc
and
aam
push
testb
sbb
daa
mov
xor
mov
push
jnp
sbb
fsubs
call
xor
lods
dec
cmpsb
adc
add
ds
cmpsb
inc
adc
xor
lret
shlb
jbe
mov
outsl
adc
cmp
inc
pop
fs
cmpsl
shl
iret
adc
nop
daa
arpl
imul
inc
push
pop
data16
cmpb
adc
dec
jmp
cmpsl
std
push
and
sbb
mov
outsb
mov
pop
mov
clc
pushf
push
push
aas
loope
das
dec
cs
scas
sbb
push
adcb
mov
inc
cmpsl
xor
mov
pushf
cld
pop
xchg
loope
push
gs
mov
xor
dec
push
add
mov
pop
jnp
push
push
jb
xor
data16
sbb
scas
mov
cmp
pop
cmp
mov
and
xor
sbb
sbb
xchg
mov
xchg
push
fcompl
daa
push
jae
mov
or
scas
stc
inc
mov
fadds
cmp
arpl
lahf
cmp
enter
les
cwtl
xorl
mov
je
packuswb
xor
lock
rcl
test
popf
jecxz
inc
cmp
inc
jle
fwait
inc
out
xchg
cli
imul
adc
mov
cmpsl
pop
add
dec
cmp
adc
int3
dec
xchg
mov
jecxz
and
jg
pop
push
and
dec
jg
movsl
push
add
adc
jl
popa
lods
jne
and
aam
lods
mov
fnstcw
and
adc
adc
jecxz
es
int3
cmp
push
ja
idivl
shl
mul
test
inc
sahf
add
jg
cmp
adc
outsl
xchg
es
fwait
push
dec
push
dec
push
iret
inc
idivl
cmp
or
test
fdivl
pop
xchg
cmp
dec
push
sarb
sahf
ret
add
ljmp
push
or
pop
adc
dec
cmp
inc
sub
mov
out
mov
or
call
adc
stos
push
js
mov
mov
mov
ficompl
adc
jne
in
fabs
cmp
jns
lret
stos
stc
pop
ljmp
out
inc
inc
call
cmp
inc
mov
xchg
xchg
lcall
push
sbb
ret
dec
mov
push
pop
pop
sbb
mov
xlat
cmp
mul
jmp
sub
push
jecxz
dec
adc
sub
cmc
in
pushf
or
cmp
or
pop
and
xor
arpl
mov
add
cltd
enter
mov
fstl
xchg
out
aaa
lahf
push
push
jmp
cmpsl
test
jae
sub
je
pop
ret
icebp
mov
adc
mov
dec
aad
sbb
mov
jl
jnp
mov
xor
xchg
fcmovb
cmp
mov
cli
xor
hlt
xor
and
inc
mov
call
pop
test
jns
mov
movsl
pop
sbbb
sahf
insl
mov
cmp
jge
loop
adc
xchg
rorb
jmp
mov
andb
mov
pushf
mov
or
test
lret
xor
mov
cmp
stc
leave
pop
sbb
and
int
lret
test
cmp
xor
loope
gs
rcl
imul
xchg
bnd
rcll
inc
mov
and
ja
aad
pop
cmp
jle
mov
nop
fs
pusha
jnp
sbb
and
in
dec
mov
inc
pop
movsl
test
pop
mov
movl
int
adc
int
test
pop
into
push
es
and
out
and
aam
shlb
sub
insl
mov
test
cmp
pop
pushf
mov
icebp
mov
into
pop
jp
or
pop
daa
rcr
arpl
jg
add
mov
xor
in
mov
popf
cmp
push
sarl
sahf
xor
pop
mov
je
popf
xchg
js
add
and
lret
jle
hlt
fstps
cmp
jns
insl
cmp
stos
fcmovne
je
sub
mov
push
aaa
mov
nop
hlt
gs
outsb
leave
pop
test
pop
aad
sbb
lcall
inc
sahf
mov
or
jnp
xor
insb
push
push
jbe
sub
int
ljmp
inc
inc
or
hlt
aad
adc
mov
push
sub
mov
in
and
push
negl
sbb
push
xchg
xchg
mov
fimuls
stos
out
inc
add
add
push
jl
jge
push
xchg
jl
inc
push
fcoms
and
lret
pop
inc
idivl
jge
rclb
or
repz
push
aam
inc
jp
testb
iret
mov
jle
lock
xchg
repz
mov
push
ljmp
mov
pop
mov
push
rcrb
pop
lds
inc
movsl
subl
mov
lods
lcall
dec
sbb
cwtl
or
jnp
cmp
xchg
xchg
cvtps2pi
ss
dec
pop
dec
fisubrl
loope
sbb
movsl
repz
testl
sbb
adc
push
push
daa
adc
cmp
mov
xor
inc
imulb
and
adc
jle
lods
clc
or
sub
xchg
hlt
xchg
int
mov
and
xor
mov
cmp
adc
jmp
and
stos
xchg
mov
outsb
xchg
hlt
cmc
dec
pusha
fnclex
sti
imul
sbb
shl
push
js
mov
dec
mov
xchg
sub
stc
push
ret
jge
popw
push
outsb
mov
mov
pop
or
stos
into
xor
cmp
scas
imul
and
inc
orl
stc
xor
mov
jecxz
roll
sub
pop
dec
fiadds
test
add
orl
sbb
aas
call
mov
pop
adc
cmp
subl
or
or
lret
mov
mov
sti
sub
lret
mov
fs
ja
adc
push
clc
das
aas
ja
jnp
add
aas
and
test
mov
int3
scas
mov
inc
dec
test
jo
jo
mov
call
sbb
lcall
mov
fmuls
push
iret
aad
clc
cmc
pop
or
aaa
jge
stc
pop
mov
xchg
xor
gs
sub
and
lret
ror
mov
lret
lcall
popf
lret
push
mov
pop
xchg
push
cmp
movsl
xchg
mov
stos
jae
jae
fists
cmpsl
cld
inc
lods
xor
dec
fisubrl
jmp
mov
jg
nop
je
pop
adc
jle
shl
es
int
pop
lcall
pop
ljmp
jmp
les
jns
xchg
sbb
pop
mov
adc
push
mov
adc
xor
xchg
xchg
or
stos
sbb
jae
dec
das
mov
xor
jne
adc
fwait
btr
mov
lcall
roll
in
movl
dec
loop
aam
stc
clc
into
imul
mov
call
xchg
lods
int
js
mov
or
cmpsl
add
dec
loopne
xchg
ljmp
pop
pop
les
mov
fidivs
jg
xor
mov
sbb
pop
pop
cmp
add
idivl
nop
inc
adc
inc
push
daa
xlat
mov
cmp
pusha
add
movsb
sahf
fcmovnbe
and
mov
add
inc
pop
cmc
stos
and
pop
out
xchg
out
xor
cmpsl
jmp
popa
pop
lock
test
ffree
pop
push
out
pop
mov
fcmovnb
cltd
dec
int3
mov
inc
or
fidivl
jb
gs
dec
lods
add
ljmp
mov
in
scas
cmp
movsl
xor
mov
inc
aad
std
icebp
fwait
sbb
or
fistpl
inc
mov
add
push
adc
xchg
xchg
pop
dec
repnz
jle
fmuls
popf
outsl
stos
xchg
jne
arpl
das
cltd
xor
dec
push
pop
out
rolb
gs
cld
subl
and
mov
push
push
divb
and
sub
shll
pusha
sbb
cmc
testl
xor
cmpl
sbb
popf
jg
iret
outsb
loopne
sub
or
mov
stos
jle
ljmp
faddl
lock
adc
adc
pop
or
out
lret
dec
mov
and
mov
jp
and
or
test
xchg
ret
adc
push
push
xchg
negb
mov
inc
fsubrl
pop
push
xchg
cld
push
push
lcall
dec
add
inc
xlat
push
movsb
pop
xor
cmp
mov
push
insl
dec
ss
shll
insb
rorl
adc
inc
ja
pop
cmp
sarb
or
inc
sub
push
fs
mov
xlat
addr16
sbb
daa
mov
or
dec
out
jno
rcrb
sub
call
jns
scas
out
jno
aad
pop
sub
adcl
sbb
jle
xor
push
jnp
pop
sub
push
out
mov
add
iret
lea
ss
icebp
aas
movl
xor
ret
fldcw
mov
cwtl
gs
mov
pop
bound
dec
cmc
lret
adc
and
into
dec
not
fmuls
push
sub
gs
rorl
out
pop
and
mov
push
adc
dec
sub
lret
fdiv
mov
clc
sti
popf
xchg
adc
fistps
out
mov
mov
cmp
pop
stos
stos
jmp
cwtl
inc
jae
shlb
cmpb
add
mov
lret
push
in
jecxz
ret
mulb
jno
jge
sbb
jae
add
xorb
push
sahf
ret
imul
jmp
dec
lcall
and
and
xchg
lock
jnp
je
ds
inc
idiv
or
bound
jle
sbb
dec
ret
imul
or
popf
out
addl
xchg
push
sub
adc
jge
inc
lahf
aad
sbb
mov
rcl
decb
int3
cmp
sub
mov
mov
add
jmp
in
xor
fldt
sarb
or
lret
idivl
and
mov
mov
iret
adc
jae
add
iret
jne
mov
sete
cmp
sub
sbb
dec
pop
lahf
mov
pusha
icebp
mov
push
push
push
imul
lods
lock
push
lahf
mov
sti
or
ret
xor
repz
push
mov
outsl
out
loop
leave
jb
jecxz
fldt
mov
mov
jne
cmpsb
add
mov
xor
push
cmp
mov
cmp
and
mov
lahf
and
int
mov
jmp
xchg
push
js
mov
dec
cwtl
push
lret
mov
jno
outsb
iret
cmc
fdivl
adc
popf
jne
jmp
loop
cmpsb
xlat
dec
lret
mov
xor
push
push
or
xchg
scas
lods
pop
jns
mov
sti
or
cmc
ret
subb
cmc
mov
mov
cmc
lahf
shr
lret
add
inc
incb
loop
ljmp
and
scas
inc
popf
lcall
sub
fiaddl
imul
mov
shl
push
sub
mov
mov
dec
loop,pn
push
aaa
fistps
mov
bound
sbb
jo
in
mov
sub
flds
lods
mov
inc
or
popf
xor
lock
push
dec
ss
jle
fsubs
insl
xchg
pop
mov
fwait
test
aas
jns
loopne
mov
icebp
add
lods
jb
jno
sbb
fwait
daa
daa
sbb
adc
jns
iret
jp
lds
sub
jb
jno
xor
jno
xlat
ss
movzwl
add
xor
sub
dec
sub
mov
stos
inc
aad
jae
xor
xor
mov
mov
sbb
in
mov
xchg
int
or
pop
mov
imul
jo
xor
adc
adc
movzwl
jns
push
sbb
fcomi
mov
push
arpl
and
xchg
fidivs
or
insb
jmp
je
mov
rclb
jecxz
push
dec
mov
aam
push
mov
mov
in
in
test
call
imul
jmp
cs
mov
inc
das
xchg
inc
jns
mov
and
shll
push
push
pop
xor
out
ret
cmp
fidivs
adc
shll
fstpl
mov
jno
xor
movsb
lret
and
add
mov
insl
cmp
loopne
cltd
or
insl
mov
pop
xchg
dec
mov
sbb
push
add
movswl
mov
hlt
mov
outsl
pop
pop
aad
fstps
push
icebp
mov
test
mov
cld
enter
sbb
adc
aaa
in
fcmovb
mov
and
sahf
mov
daa
insl
pop
rolb
pusha
xchg
cmp
mov
push
movsb
mov
out
xchg
sarl
push
es
test
aas
sbb
sbb
sbb
subl
mov
rorb
dec
notb
lcall
adc
add
mov
aad
mov
xchg
push
xchg
jns
fisttpll
popf
pop
xlat
pop
mov
sbb
xor
mov
xchg
sti
add
push
inc
enter
xor
push
icebp
xchg
jbe
leave
push
fimuls
cwtl
add
inc
les
cli
in
movl
mov
aad
sbb
sub
mov
cmp
in
mov
stc
xor
adc
popf
shll
pop
and
scas
lods
mov
sub
outsl
and
pushf
push
test
mov
pop
mov
imul
lcall
daa
addr16
scas
je
jns
push
jmp
sbb
sbb
jne
sub
testb
inc
sbbb
js
repnz
xchg
addr16
sub
jo
fsubr
mov
lods
pop
sar
sbb
loop
int3
into
mov
mov
aas
pusha
mov
jp
jmp
mov
mov
or
mov
outsb
sub
ljmp
and
add
cmp
xchg
aad
push
or
push
mull
jbe
or
mov
idivl
jnp
leave
addr16
pop
das
push
sbb
in
mov
cltd
push
jo
push
fisubl
arpl
mov
ret
ja
mov
ffreep
adc
mov
rcrb
idiv
stc
or
subb
push
iret
outsb
loope
dec
xchg
dec
into
sub
aad
jp
pusha
and
pop
mov
roll
mov
jmp
xchg
push
test
imul
add
xor
pusha
sub
pushf
pop
or
inc
cli
xchg
add
sub
insb
sbb
add
push
bound
sub
aad
scas
mov
cmp
cmpb
push
push
or
rol
decb
rolb
adc
lods
add
push
orl
data16
push
dec
cmp
and
xchg
dec
jl
daa
fidivs
pop
adc
int3
or
xor
aad
fldenv
imul
fcmovnu
cld
stc
cmp
cmp
pop
xor
mov
fildl
enter
jae
pop
sbb
jb
lods
addl
es
push
push
or
or
push
or
cli
data16
loopne
out
and
fnsave
push
inc
pop
or
aaa
idivb
lock
cmp
push
add
fsubrs
mov
lcallw
ret
sbb
xchg
sahf
pop
jp
xor
xchg
pop
stos
jns
in
adc
mov
cwtl
shll
imul
in
pop
out
mov
cs
jge
cmp
xchg
aas
aaa
fwait
sbb
sub
xor
sub
pop
cld
pop
inc
loope
in
cmpsl
push
js
adc
lret
lret
neg
scas
mov
aad
cli
ds
mov
jp
xchg
cmpsl
cmc
imul
push
jb
les
divl
jne
mov
fnsave
jno
lds
rol
mov
sub
add
adc
fsubrs
sti
dec
and
hlt
push
and
sub
or
adc
push
loop
adc
fstpl
mov
cmp
jnp
jl
icebp
mov
in
adc
add
mov
fstpl
pop
pop
add
pop
sbb
dec
lock
dec
scas
adc
mov
shlb
mov
jmp
xchg
mov
loope
pop
popa
pushf
imul
cmc
cs
dec
cmp
clc
xchg
lds
aaa
pop
push
or
mov
cmc
xorl
scas
daa
fbld
add
ret
inc
sub
repnz
push
dec
xor
incl
mov
sub
mov
dec
shrb
fstpl
and
jo
mov
add
and
or
fmull
leave
movsb
call
aaa
xchg
add
pop
mov
bound
add
loope
sub
mov
sub
bound
out
xor
ret
sti
add
sbb
cmp
adc
insb
xlat
dec
add
lods
aaa
mov
popf
ja
out
nop
inc
add
mov
xor
fstpl
es
mov
and
fisttps
addl
add
push
fs
mov
jno
sub
mov
xchg
xchg
in
add
call
movsl
jg
push
pop
dec
imul
mov
add
push
jo
shll
jle
fimuls
ret
ljmp
jmp
pop
es
ss
test
xor
adc
mov
mov
gs
sbb
push
mov
add
rclb
movb
push
test
mov
daa
jp
frstor
loopne
jno
jecxz
xchg
mov
aaa
jo
cmc
inc
gs
mov
into
aad
sbb
and
push
rorb
imul
insl
fs
adc
dec
mov
or
xor
inc
adc
adc
add
mov
push
pop
adc
sub
jo
cmp
jo
sbb
nop
mov
sar
test
mov
ss
mov
repz
mov
pop
jnp
push
mov
insl
aam
scas
push
mov
lods
fldcw
inc
jno
aad
jbe
scas
loope
jmp
mov
mov
xor
adc
adc
pop
xchg
rorb
pop
cmc
push
xchg
test
mov
scas
inc
decb
cmpsb
xchg
test
in
cmp
push
mov
or
lretw
cld
in
aad
xchg
mov
insl
popa
push
and
out
jno
repz
inc
cli
clc
rcrb
mov
push
fwait
cwtl
pop
mov
xor
sub
xor
insl
lods
stos
outsl
imul
addr16
push
cltd
inc
imul
add
mov
lret
sbb
mov
pop
xchg
clc
push
mov
mov
bound
cmp
xchg
out
gs
bound
and
lret
cli
mov
jge
das
mov
jmp
mov
ds
movsl
xor
call
test
and
cmp
popa
cmpsb
jo
adc
push
mov
fmull
and
dec
xor
cwtl
bound
in
loope
aad
adc
jo
cltd
or
jp
aas
jg
in
mov
repz
xor
and
adc
ret
popa
outsl
stc
shrl
fcmovnbe
mov
xor
sbb
imul
mov
dec
mov
jle
loop
or
xchg
sbb
and
pop
cmp
xchg
test
test
jle
mov
mov
jp
and
mov
sbb
imul
mov
sti
out
loopne
mov
gs
cmc
ss
movsl
imulb
mov
into
mov
jl
scas
lea
into
xor
mov
mov
xchg
pop
rorl
jb
cld
int
fmul
and
gs
add
mov
in
push
lret
fsubs
jge
jmp
xorb
push
imull
stos
and
loopne
add
rcrl
dec
cmp
ja
xchg
mov
notb
aaa
xor
ffree
loope
stos
adc
lret
mov
fdivrs
adc
jbe
push
rcll
rclb
stos
adc
fsubrl
mov
fimuls
push
push
ljmp
lods
insl
mov
test
fwait
les
cli
add
inc
xchg
pusha
pop
mov
xchg
pusha
push
sbb
xor
cmp
dec
mov
mov
jne
addr16
jmp
repnz
lahf
ret
or
pusha
popf
mov
jo
out
insl
mov
inc
cs
dec
repz
pop
cld
dec
push
fsubrs
mov
fmuls
subb
and
xor
sarl
sbb
jns
test
pushf
insl
outsb
cmp
repz
push
mov
fsubrp
add
and
lods
and
jmpw
ret
pop
loopne
aas
cmc
cltd
scas
xchg
sbb
inc
jnp
sub
fnstenv
sti
mov
cmp
popf
sahf
xchg
cmp
pop
lcall
add
or
inc
cmpsl
push
fwait
jo
shll
mov
js
outsb
pop
fs
pop
pusha
inc
jecxz
add
daa
test
mov
clc
and
insl
add
mov
jns
add
call
xor
je
negl
adc
enter
pop
push
xchg
push
repz
bound
mov
clc
xor
add
enter
jne
xchg
push
jnp
stc
sahf
xor
mov
imul
cmc
addl
fists
ret
add
jmp
je
xchg
mov
mov
pop
or
sarb
cmp
movsb
in
in
popa
xlat
jl
ret
lcall
jo
fidivs
add
mov
lret
cmpsl
pop
dec
dec
stc
int3
imul
jo
sbb
leave
and
jge
xor
jb
and
mov
lods
adc
clc
mov
gs
enter
inc
data16
aam
jbe
or
xor
lds
and
jg
ljmp
mov
add
cmc
add
mov
stos
insl
or
adc
sbb
lds
push
sbbb
fcomip
cmc
mov
sti
fcomps
hlt
xor
arpl
jmp
xor
jecxz
lea
jbe
imul
dec
fmull
mov
xchg
dec
push
stos
gs
fwait
xor
add
in
jb
int
out
sbb
sbb
fucomp
adc
mov
ret
mov
and
mov
sbb
xor
mov
mov
sbb
push
jno
and
cs
or
jp
jmp
ret
push
ret
pop
insl
or
xchg
shll
xchg
out
out
lock
xor
mov
push
into
cmc
xchg
cmp
and
outsl
or
xor
aad
lods
xchg
imul
mov
fsubl
xchg
pop
mov
push
in
add
lret
xchg
pop
fnsave
inc
pop
jns
jnp
les
jge
pop
or
and
dec
cltd
cmpsl
cmpsl
test
xchg
push
xchg
mov
stos
mul
stc
pop
pop
enter
xor
fs
popa
mov
push
outsb
xor
sbb
or
gs
jle
xor
mov
sbb
sti
inc
repz
xor
sub
jge,pt
pop
adc
jle
fstl
pop
push
fwait
nop
pusha
mov
push
movsl
pop
cmp
inc
mov
xchg
pop
sbb
jbe
lods
fs
inc
mov
jp
divb
xchg
sahf
sbb
and
sbb
and
stc
xor
icebp
lea
dec
imul
dec
xlat
sbb
scas
loop
pop
push
jmp
dec
fwait
fwait
cmp
lods
sbb
ja
sbb
jbe
lods
sbb
imul
pop
shll
fnstenv
and
jmp
dec
add
outsb
add
mov
dec
lea
adc
dec
orl
cmp
jge
xchg
daa
cmp
in
push
mov
lea
in
aas
dec
pusha
mov
enter
sub
addr16
movsb
hlt
into
mov
jge
bound
popf
dec
add
mov
pop
xchg
daa
inc
mov
subb
aam
xchg
cmp
jmp
xchg
fisttpll
add
mov
ds
mov
icebp
icebp
test
aad
icebp
decb
mov
mov
jnp
mov
fwait
xchg
out
cmp
mov
adc
filds
adc
mov
adc
cmpsb
inc
jb
sub
cltd
jle
xor
cs
call
mov
cmpsl
sbb
cmp
mov
mov
cwtl
adc
test
mov
ss
pop
pusha
mov
xchg
outsb
pop
in
stc
cmp
cmp
stc
xchg
out
mov
imul
addr16
test
xorb
int3
add
lahf
mov
rolb
aaa
cs
add
call
jnp
push
cmp
push
cmc
sahf
mov
jne
int3
lret
inc
and
test
shl
enter
push
repz
add
scas
in
mov
je
mov
dec
pop
jmp
mov
add
sahf
dec
stos
jne
roll
pop
push
andb
ja
adc
lahf
mov
enter
pop
dec
mov
arpl
js
shrb
sbb
jae
pop
mov
sbb
in
call
jge
bound
lock
int
adc
add
sbb
rclb
cmpsl
rorb
inc
inc
xchg
cld
inc
fidivs
lahf
je
xor
movsb
in
xchg
fnsetpm(287
dec
or
mov
or
cmp
int
aaa
cld
cmp
pushf
xor
jl
and
sbb
shl
popf
inc
roll
mov
push
sub
inc
jnp
sti
push
stos
dec
mov
pop
add
call
ds
lcall
mov
adc
sbbb
nop
jg
pusha
out
pop
sub
adc
fcoml
inc
testb
dec
push
sbb
inc
pop
push
imul
and
pusha
mov
outsl
jb
scas
movsl
out
in
cmp
mov
push
xchg
fsubrs
cmp
mov
mov
xchg
pop
ds
adc
cwtl
cmp
pop
std
xchg
outsb
cmp
ret
push
adc
stos
mov
mov
pop
cmp
cld
call
pop
cli
jbe
in
cli
and
movsb
outsb
pop
das
adc
in
adc
cmc
mov
imul
leave
insl
sar
jnp
fists
pop
stos
adc
mov
jnp
fcom
cmp
xor
popf
mov
lahf
mov
in
psadbw
push
or
adc
and
add
push
bound
xchg
test
fstpt
shrl
test
jnp
xor
sbb
dec
repnz
xchg
dec
cwtl
jns
pop
add
sbb
clc
out
jno
cmpb
sub
mov
pop
repz
mov
cmp
lcall
sbb
imul
into
cmp
insl
jp
push
cltd
push
stos
push
stos
int3
mov
add
and
ret
insb
inc
aam
jbe
ja
stc
add
in
mov
push
iret
mov
faddl
mov
lea
dec
xchg
sbb
mov
arpl
pop
into
scas
sar
xor
jbe
sbb
xor
mov
outsb
mov
pop
sbb
mov
jnp
cmc
mov
dec
push
xor
loope
jns
das
lahf
movsb
xor
cmp
push
or
push
push
jae
adc
push
dec
lcall
dec
je
sbb
push
sbb
dec
mov
mov
jne
adc
jg
cltd
cli
pop
fstps
cmpsl
cli
and
clc
leave
mov
pusha
movsb
mov
shl
out
cmp
jb
icebp
sub
adc
neg
lret
sbb
fisttpll
sti
mov
dec
lds
push
inc
movsl
test
negl
mov
cmp
sbb
xor
ljmp
in
std
cmp
inc
rcll
sbb
cmp
shlb
mov
incl
dec
or
roll
push
inc
int3
mov
dec
xlat
enter
sub
imul
xchg
pusha
cld
fstpl
xor
nop
pusha
push
mov
push
jmp
or
aad
pop
push
rcl
or
xchg
out
ss
xor
push
les
inc
clc
dec
mov
cltd
int3
and
lcall
rolb
sub
fmull
and
bound
mov
mov
mov
pop
stos
push
in
cwtl
into
in
fldl
outsl
loop
add
pop
jnp
dec
and
push
xlat
or
mov
rcrb
pop
adc
jp
dec
dec
xchg
insl
and
addr16
pop
cltd
aam
cli
rcrb
out
pop
lea
es
imul
ficomps
lahf
aaa
or
push
jecxz
mov
cmp
scas
or
or
gs
xchg
daa
and
aaa
dec
mov
sbb
insl
movsl
xor
cltd
scas
or
test
out
mov
sbbb
cwtl
andb
push
and
xlat
adc
rcl
mov
push
pop
sti
icebp
in
pop
loop
pop
minps
sub
scas
insb
aad
dec
sbb
push
enter
sahf
jp
mov
xlat
sub
adcb
sub
dec
sbb
dec
lret
inc
mov
sarl
int3
xchg
aam
ss
addb
cmp
mov
and
insl
xchg
or
aam
ds
mov
xchg
cli
sti
xchg
popa
inc
sbb
jns
stc
fsubrl
sub
loope
mov
filds
push
scas
fiadds
aam
jge
mov
mov
sti
stos
sub
cltd
aas
test
orl
scas
das
push
dec
and
adc
jb
sarb
cwtl
mov
and
pop
xor
mov
popa
inc
jle
xor
adc
push
fsubl
cmp
loop
fidivs
paddsb
fwait
lret
aad
xlat
shll
les
lret
repz
xchg
push
add
lret
dec
daa
push
inc
inc
ss
loop
mov
in
adc
mov
inc
stos
testl
and
mov
js
xchg
jp
inc
mov
push
je
mov
pop
add
push
push
pushf
xor
popl
ja
push
add
stos
adc
cli
adc
pop
sti
push
imul
cmpl
xchg
imul
cmp
ljmp
in
lcall
into
lods
mov
pop
xchg
sbb
stc
repnz
mov
inc
xchg
repz
mov
or
mov
popf
arpl
sub
push
dec
pop
sub
pop
pushf
fwait
daa
sub
cmpsb
dec
adc
add
adc
mov
pop
rcrl
jo
stc
dec
jbe
in
shl
mov
loopne
push
rcrl
mov
testb
xchg
lea
popa
pop
pop
pop
inc
push
jecxz
lock
in
movsb
xchg
cltd
cmp
cmc
xchg
mov
icebp
mulb
add
std
jbe
or
add
jae
fwait
movsb
in
jg
add
jbe
cmp
xor
sub
push
sarl
iret
clc
adc
dec
test
mov
sub
fildll
add
mov
dec
sbb
cmpsb
movsl
mov
nop
inc
push
jae
jb
rclb
test
xchg
xchg
or
out
loop
mov
in
xchg
jge
cmp
xlat
inc
push
scas
xchg
mov
dec
icebp
jb
add
dec
jp
out
test
xchg
data16
aas
shll
dec
xchg
mov
rcl
jbe
mov
inc
or
out
out
iret
fimull
xchg
pop
mov
ja
xor
sarb
jbe
out
xchg
stos
cmpsb
ds
push
xchg
inc
mov
lds
cmp
mov
sbb
add
dec
inc
nop
and
call
jl
sahf
xor
adc
mov
adc
std
jo
into
xor
movsb
adc
jecxz
mov
cs
aas
pop
mov
rcll
cmp
mov
jb
rclb
loope
mov
inc
cmp
mov
mov
in
jmp
and
pusha
out
out
mov
cltd
pushf
xchg
hlt
in
sahf
popf
mov
adc
adc
xor
scas
jae
xor
jns,pt
in
cmpsb
adc
imul
cmp
daa
add
imul
and
out
dec
add
xor
adc
sub
dec
mov
movsl
scas
or
mov
jnp
mov
es
dec
jle
out
dec
mov
mov
push
add
sbb
popf
das
jecxz
es
lahf
xor
mov
aas
mov
jp
out
inc
sbb
push
pop
cld
das
cld
call
or
add
mov
jge
orb
push
cmc
shll
imul
testb
dec
iret
out
imul
lcall
push
mov
jns
sbb
lds
pop
ss
iret
or
negb
rcrb
jmp
push
in
popa
bound
sbb
xchg
aaa
repnz
pop
xor
mov
cmpl
inc
dec
push
in
hlt
push
mov
sbb
sub
lds
popa
cli
mov
jp
rcrb
pop
mov
xchg
add
jmp
iret
sbb
das
or
jne
je
sub
jmp
jmp
test
sub
inc
inc
sbb
xchg
imul
lea
push
ret
cmpsl
xor
repnz
xchg
and
mov
sub
xor
or
xorb
or
shlb
imul
xor
jecxz
mov
aam
push
sub
cmp
adc
pop
inc
cli
cmpsl
push
andb
jmp
or
xor
rcrl
xlat
fldenv
ds
sbb
jo
dec
cmpsb
fwait
jno
sbb
mov
movsb
aaa
adc
xchg
jne
sbb
dec
jnp
lods
hlt
pop
mov
and
js
xor
pop
call
jmp
fmul
push
inc
hlt
xor
aad
sarl
xlat
inc
add
inc
sub
cmp
clc
or
fisttpll
fcom
fisubrl
loope
mov
clc
mov
nop
mov
xchg
adc
mov
pop
add
mov
xchg
cmpsl
inc
push
xor
pop
mov
out
movsb
and
and
movsl
mov
sbb
jns
in
int3
cmpsl
inc
jb
sbb
dec
lods
cmp
or
aad
das
aas
sub
hlt
pop
out
negb
loopne
mov
xchg
daa
xchg
xchg
in
aas
je
ja
leave
movsl
sbb
stc
xchg
lds
outsb
shll
fildl
or
or
scas
in
jmp
mov
shll
mov
loop
xchg
sub
enter
out
push
xor
rolb
lds
mov
jnp
inc
or
push
xor
mov
out
xchg
andl
push
mov
mov
inc
jp
insl
out
xor
push
add
popl
mov
pop
pop
jmp
jp
fistpl
aam
mul
xchg
addr16
and
jae
inc
push
jg
pop
subl
lock
dec
in
inc
and
adc
sbb
jns
inc
xchg
mov
aam
push
in
out
stc
mov
int
jge
inc
sahf
gs
jns
mov
mov
movsb
dec
orb
shrb
loopne
mov
rolb
jle
inc
fs
lret
adc
aad
cmp
and
mov
pushf
mov
lea
call
mov
aam
jnp
das
add
test
or
cmp
ficompl
out
sbb
ss
push
pushfw
mov
push
js
xchg
xchg
mov
push
clc
jge
sub
aas
or
gs
push
or
shll
loope
jl
test
mov
and
push
je
jge
and
sahf
pop
inc
dec
add
jg
cmpsb
push
dec
mov
sbb
mov
cwtl
aaa
and
pop
lock
dec
sub
popa
pop
daa
pop
pop
lock
and
sub
loope
ficomps
stos
repnz
repnz
in
mov
dec
add
dec
cmp
mov
mov
adc
mov
mov
or
popa
sbb
aam
fcompl
mov
push
jne
jmp
jg
mov
jns
mov
add
sarb
jnp
pusha
cmp
or
subb
test
dec
push
or
pop
and
lds
add
mov
mov
pushf
js
mov
push
jmp
mov
out
out
pop
push
cmpsb
sbbb
sbb
xchg
cmovo
mov
aaa
iret
jmp
jl
nop
inc
jmp
imul
ret
pop
test
inc
add
xor
push
or
push
push
sub
push
pop
pop
ljmp
fwait
xor
notl
xor
pop
dec
push
divl
or
jbe
movsl
or
call
dec
mov
ja
and
jmp
push
xor
cmp
outsb
cmp
cld
dec
aad
adc
jae
insl
or
mov
push
xor
pop
lods
fisttps
aad
mov
rolb
sahf
arpl
lods
pushf
push
addb
test
mov
fwait
ss
pop
scas
sti
cmp
cmp
fwait
dec
mov
sub
ret
int3
xchg
ljmp
sbb
xchg
lock
hlt
xchg
pop
hlt
push
mov
dec
fcompl
xchg
stos
les
ja
js
add
fwait
inc
imul
xchg
jo
jle
aaa
xchg
fisttpl
outsl
fistpl
and
or
or
cmpsb
adc
mov
out
jno,pn
aam
test
faddl
fcoml
rol
leave
sub
cmpsb
pop
mov
outsb
jo
mov
in
test
xchg
jmp
stos
xchg
aam
divb
xor
cli
adc
jno
test
push
dec
xchg
add
push
mov
xor
adc
imul
cmpsl
cli
test
mov
and
and
sbb
jle
out
ja
jnp
cmp
mov
xorb
add
clc
loopne
cmp
inc
adc
pop
rclb
dec
call
ret
inc
test
inc
xor
add
pop
aam
shlb
push
jle
pop
jnp
mov
jmp
pop
into
roll
andl
adc
dec
sbb
push
cmp
inc
xchg
add
ret
mov
scas
push
shll
push
aas
mov
xchg
adcb
xorb
jg
inc
lods
sbb
lahf
shrb
pop
arpl
das
in
add
pop
out
shrb
imul
and
and
outsl
pop
test
and
xchg
jp
imul
call
pop
adc
mov
aam
xchg
insl
or
push
ret
cmp
push
pop
lret
sub
jae
mov
jecxz
stos
push
mov
imul
lea
aad
mov
mov
jecxz
xlat
emms
movsl
add
push
stos
cmpsl
jmp
gs
aaa
fmull
adc
add
lahf
rcrb
mov
or
cld
inc
pop
ret
cmpsl
mov
sub
sti
inc
lods
scas
clc
cld
popf
int
sti
test
arpl
popa
aas
dec
lret
aaa
lahf
xchg
in
pop
jg
fstps
jp
or
mov
in
mov
jecxz
cmp
xor
out
int3
les
dec
test
dec
sbb
iret
fs
sub
push
imul
jbe
rclb
add
bound
bswap
or
push
and
insl
adc
xor
sbb
push
push
in
fcmovnbe
or
cmp
xor
imul
lods
jae
pop
sbb
mov
add
in
rorb
sar
test
in
das
fiadds
inc
lods
je
aam
sub
and
fwait
xchg
cmp
pop
dec
mov
mov
les
divl
js
add
xor
into
dec
add
jge
push
out
add
sub
roll
inc
cwtl
mov
popf
ret
mov
mov
push
jmp
int3
stc
mov
add
jae
ficomps
pusha
insl
ficomps
or
jg
push
adc
fstpl
pop
xlat
icebp
and
add
or
push
sub
icebp
mov
and
push
dec
or
mov
dec
add
movsb
imul
mov
je
mov
pop
std
in
daa
inc
lahf
push
push
sbb
mov
cltd
mov
call
loope
sarb
sub
imul
xchg
cltd
out
ss
pop
js
gs
data16
or
mov
mov
push
shlb
or
aaa
nop
insb
add
xor
or
jge
addl
jbe
loop
adc
or
out
arpl
dec
popf
fldl
pop
add
fucomip
lds
xchg
stos
ds
push
fcmovnbe
orb
or
cmpb
out
mov
or
mov
ret
or
jae
std
cmpl
fnsave
mov
xchg
in
lcall
pop
mov
jge
pop
xor
add
inc
add
xor
jmp
jge
mov
loopne
test
add
xor
fildll
mov
cmp
imul
xor
mov
and
dec
ja
ja
add
sbb
into
pushf
mov
push
lret
pop
shll
icebp
jmp
xchg
and
fdivs
loop
cmp
insb
inc
adc
jns
pop
cmp
fsts
sub
aam
outsb
adc
cmp
add
insl
addr16
sbb
repz
stc
push
and
loop
add
sub
ret
pop
jmp
sti
mov
daa
pop
shr
and
pop
les
sub
jle
mov
dec
aad
jle
ja
cltd
mov
push
lods
push
lcall
cmp
cmc
pusha
stos
mov
hlt
xchg
jp
rcrb
loop
sbb
fnstsw
mov
testb
sbbl
sub
adc
icebp
lret
lock
cmp
call
int3
lret
xchg
mov
xchg
mov
arpl
jns
mov
int
aam
xor
mov
daa
cwtl
xor
push
adc
aaa
jg
in
cmp
and
ja
in
cli
xchg
cli
mov
in
icebp
daa
or
adc
mov
loope
push
dec
xchg
add
hlt
mov
ud2
xchg
data16
jmp
pop
orb
ret
pop
cs
and
pusha
fdivs
jmp
int
adc
in
loope,pt
jo
pop
xchg
loop
pop
imul
es
mov
into
and
rcr
inc
or
push
xchg
data16
mov
push
push
loop
shl
shrb
pop
xchg
pop
lcall
dec
cwtl
adc
es
leave
test
push
sbbb
xchg
clc
xchg
mov
fstps
sub
inc
pop
adcb
mov
insb
or
xlat
add
and
iret
pop
jl
dec
jecxz
dec
lahf
sbb
aad
or
xorb
lahf
pop
les
popa
mov
div
outsl
jl
pop
out
and
jne
lds
and
mov
cmp
loope
sbbl
jecxz
fidivl
pop
jno
popl
inc
push
mov
sbb
push
inc
ss
aam
jge
sub
lret
fbld
sub
push
inc
jnp
mov
adc
inc
or
or
iret
sahf
sarl
lret
xor
xchg
fisubrl
xchg
popf
aas
inc
ljmp
inc
and
xor
clc
fs
xchg
loopne
jns
xor
mov
push
mov
rolb
mov
jno
in
sub
mov
sub
cli
jle
adc
and
mov
jmp
sti
movsl
jb
adc
rcrl
outsb
jl
cli
inc
sub
daa
pop
and
mov
adc
mov
roll
add
mov
das
mov
jno
dec
mov
mov
dec
xor
out
sub
add
fs
mov
fdivrl
ja
xchg
pop
stos
and
cs
imul
mov
mov
mov
inc
mov
xchg
xchg
outsl
loop
ds
sar
movsl
addr16
std
popa
adc
push
cmpsb
pop
push
xor
dec
xchg
push
insl
scas
push
xorb
pop
mov
jg
testb
rcl
jg
push
test
xor
cmp
pop
rcl
jecxz
pushf
popl
cmp
cmp
inc
imul
inc
repz
dec
pop
into
or
adcl
ret
dec
and
fistpl
xor
mov
add
cmp
fs
lcall
push
outsb
jne
lds
jnp
jnp
jbe
add
xchg
dec
sbb
out
shr
into
mov
or
popf
movsb
flds
jp
push
lret
jae
cmp
cmpb
out
and
leave
daa
jnp
jmp
test
mov
dec
mov
xchg
and
sbb
dec
sbb
pop
stc
dec
or
cmpsb
xor
inc
mov
lock
fwait
lods
mov
xchg
cmp
jo
das
jmp
or
xor
push
lea
push
add
aam
inc
imul
je
int
push
int
jmp
push
mov
mov
mov
hlt
xor
out
sbb
mov
fcmovu
daa
imul
mov
dec
xchg
cmp
arpl
push
leave
ljmp
pop
jne
mov
jge
int3
ss
xchg
adc
jmp
insb
mov
pmaxsw
pop
sbb
mov
sub
push
fisttpl
and
lock
inc
pusha
ret
cmpsl
andl
filds
mov
adc
push
gs
or
ljmp
mov
adc
inc
and
and
jmp
xchg
das
dec
and
xchg
mov
sub
imul
jae
jg
fsubl
jecxz
dec
sbb
pop
je
mov
jle
mov
push
outsb
xchg
cmp
repz
push
dec
push
test
sbb
mov
adc
jg
test
aas
mov
pusha
inc
jg
adc
out
fs
sub
lds
rcl
xchg
je
notb
out
mov
xor
hlt
scas
pop
pusha
test
into
pop
sub
mov
or
dec
subb
fcompl
bound
mov
in
sub
repz
xchg
push
cmp
fwait
xchg
ljmp
xor
int3
nop
sub
lea
cmc
mov
roll
sub
xor
mulb
mov
sbb
ds
push
dec
mov
mov
js
and
repnz
rorb
push
out
jne
jecxz
push
push
jo
lds
scas
dec
sbb
sub
out
push
mulb
sbb
adc
daa
rorl
sti
into
dec
mov
pusha
sub
xorl
adc
pop
cltd
pushf
xor
push
lods
jno
test
sub
or
test
int3
loop
stc
mov
push
in
int
imul
jmp
imul
fidivl
psllw
scas
mov
mov
pop
pusha
dec
jl
sub
pop
mov
inc
stos
cltd
inc
pop
push
jmp
mov
mov
jmp
jecxz
lcall
mov
sub
xchg
jle
pop
pushf
mov
loop
aas
cli
cmp
nop
scas
les
jne
loope
pop
cmpsb
fsub
in
fdivl
iret
jbe
mov
dec
scas
dec
xor
mov
hlt
inc
inc
sub
sbb
xchg
fstpt
rcr
cmpsb
clc
cmp
lret
push
out
jnp
mov
inc
shlb
add
jb
push
ret
jns
push
loopne
jge
jno
in
jmp
push
je
lahf
or
fisubrl
fisubrl
sbb
shlb
push
xlat
inc
fld
aaa
push
jle
pop
js
ja
cmp
stos
fdivrs
mov
ljmp
add
and
cltd
aad
scas
sbb
mov
and
jb
adcb
das
xchg
lea
adc
pop
xchg
dec
pop
and
icebp
repnz
jle
ds
inc
out
xchg
sbb
shlb
scas
clc
std
mov
inc
xor
pop
push
push
int3
icebp
mov
dec
outsl
ficompl
cmp
out
xor
pop
inc
lahf
sbb
js
fs
aas
mov
cmp
es
out
dec
pushf
mov
fldenv
pop
ljmp
cld
sbb
ss
insl
inc
mov
daa
pop
push
insb
aaa
inc
or
shrl
mov
mov
sbb
mov
js
mov
mov
cmp
shrb
sbb
gs
imul
xchg
inc
ret
inc
js
hlt
push
or
clc
jns
fs
pop
loop
lret
jo
mov
lds
out
shll
arpl
imul
push
movsl
push
call
fchs
and
push
aam
xchg
into
cld
mov
push
cltd
stos
mov
mov
movb
xchg
sub
gs
pop
cmc
cmp
sti
repnz
out
aad
js
xchg
push
clc
xor
sub
mov
inc
fcomps
cmp
in
scas
addr16
rorb
rcr
shl
cld
mov
mov
into
mov
mov
sbb
roll
and
pushf
sbb
add
jg
fdivrs
outsl
jecxz
pop
dec
fidivs
fisubl
pusha
int3
or
insb
sub
xchg
jnp
xchg
div
mov
dec
cs
loopne
pop
std
in
and
cmp
add
and
inc
decb
dec
lods
in
iret
das
mov
sbb
dec
sbb
sbb
stos
loop
adc
mov
sbb
leave
mov
add
repnz
scas
sub
push
rcll
mov
pusha
daa
xchg
repz
repz
lret
lods
jmp
ss
leave
loope
xchg
push
mov
lods
xor
pop
push
jno
outsl
lahf
inc
in
pop
js
lea
scas
and
inc
dec
sahf
mov
outsl
jmp
inc
or
popa
cmp
int3
push
shll
push
mov
and
xor
arpl
mov
ja
or
jns
lahf
adc
push
je
in
jbe
mov
divl
decb
pop
outsl
mov
sub
rol
stos
pop
test
addb
xor
cmc
jns
dec
cld
data16
adc
cli
push
lahf
jno
push
mov
fsubl
sub
iret
pop
jb
cs
mov
xchg
nop
inc
or
pop
sub
jne
fwait
daa
stc
mov
arpl
repz
sar
mov
fdivl
push
adc
test
imull
mov
mov
mov
arpl
mov
cmp
inc
icebp
mov
push
roll
call
mov
push
into
cmp
int
loop
nop
add
pop
andl
mov
cmp
dec
jmp
dec
and
adc
add
inc
test
aaa
adc
mov
movsl
mov
push
or
inc
mov
mov
nop
cs
pop
decb
pop
inc
inc
int
scas
and
movl
mov
inc
imul
imul
add
ret
shr
cmp
rcrl
adc
push
sbb
cwtl
in
aaa
sub
ficoml
data16
mov
testb
jne
mov
xchg
std
push
cmp
mov
in
bound
js
dec
xlat
pop
imul
add
mov
mov
outsl
add
pop
dec
jmp
sahf
xlat
jmp
jle
xlat
ror
jbe
or
fwait
in
dec
aaa
mov
imull
fcoml
pop
adc
fidivrs
xchg
mov
push
divb
icebp
push
test
inc
fs
sti
xor
into
push
aas
push
xor
mov
and
sub
pop
inc
xor
mov
inc
addr16
xlat
cmp
ret
fbstp
ss
jo
aad
outsl
outsb
jp
int3
sub
cmp
sbb
ljmp
sub
call
js
xchg
push
xchg
popa
dec
jmp
cmp
scas
xchg
pop
jle
js
sbbl
dec
or
push
pop
rcll
or
cmp
enter
xchg
sub
and
push
mov
jge
sbb
dec
mov
popf
mov
icebp
mov
xor
insb
cltd
cmp
sarb
mov
int3
mov
adc
sbb
stc
mov
pop
imul
int
or
stos
ret
orl
jmp
jnp
addl
vmovq
mov
dec
test
inc
push
dec
outsl
mov
xchg
mov
xor
jle
imul
fwait
mov
mov
dec
pushf
jns
sub
xchg
pop
int
jle
fsubl
das
dec
in
adc
mov
dec
sarl
push
test
cmp
jge
inc
pop
adc
movl
mov
outsl
into
shll
or
xor
cmp
das
mov
insb
aaa
cmp
hlt
xor
js
icebp
pop
xchg
sbb
out
rcl
rorl
sub
add
mov
sbb
mov
int3
pop
cmpb
cld
loopne
dec
enter
mulb
popf
cltd
jnp
push
shll
pop
out
js
out
jae
xchg
jbe
jbe
mov
in
fwait
in
mov
mov
jnp
cmp
inc
jp
add
or
jecxz
hlt
jecxz
stc
sbb
imul
loop
arpl
add
loopne
or
pop
mov
scas
xchg
cmc
fadd
in
ss
and
ja
adc
stos
scas
mov
fs
adc
and
mov
pop
mov
sub
test
xchg
repz
orb
cmpsb
stc
sub
sub
fs
jae
mov
or
add
xor
adc
push
aaa
mov
movsb
inc
inc
sbbl
arpl
jge
andb
cmc
out
push
mov
adc
jecxz
pop
mov
subl
and
cld
pop
xchg
dec
mov
shlb
enter
test
pop
xchg
loop
mov
rclb
out
call
mov
idivl
sub
int
push
stc
cmpsb
sbb
mov
mov
cmp
mov
sub
adc
xlat
mov
mov
cmp
jmp
pop
scas
lods
jns
cltd
cmp
mov
movsl
shll
ja
jecxz
inc
mov
and
pop
sbb
or
xor
js
out
bnd
pop
sbb
fistpll
lret
enter
pop
int3
push
imul
stos
pop
ja
popf
mov
mov
mov
mov
jp
rcrl
rorb
pop
stos
fidivrs
mov
dec
fadds
sub
cmc
sub
sub
mov
rcl
ja
mov
jmp
sub
pop
sbb
cli
nop
cmp
test
jge
push
mov
inc
jns
into
in
ror
add
xchg
sub
in
stc
cmp
dec
push
cmpsb
dec
rclb
and
fisttpll
int
scas
jg
xor
xor
rclb
and
ja
mov
inc
mov
out
jmp
rcl
mov
adc
mov
shr
or
pop
imul
bound
ds
jb
jo
jno
xchg
xorl
jg
pop
int3
shrl
scas
jae
leave
add
add
outsl
push
cmpsl
mov
in
out
dec
and
enter
fwait
and
cmp
in
xchg
mov
sub
iret
pop
cltd
divl
mull
aad
xor
ds
pop
mov
mov
lcall
fnstsw
or
pop
mov
mov
cwtl
icebp
mov
sub
test
xor
cld
popa
lcall
xor
inc
pop
insl
dec
je
ljmp
arpl
inc
jle
sub
shrl
xlat
push
js
lds
push
and
aad
jle
adc
dec
dec
jmp
sbb
push
bound
xor
push
insl
pop
pop
test
inc
lret
or
icebp
adc
push
imul
mov
mov
fs
fldl
jmp
gs
pop
addl
cltd
fldl
xchg
or
jg
movsb
jns
ss
inc
imul
push
xor
push
in
and
in
rcrb
scas
sub
pop
rclb
mov
cmp
aad
stos
xor
inc
jmp
inc
in
add
repz
xlat
push
pop
mov
or
shl
arpl
jp
ret
rorl
cmpsl
dec
sub
pushaw
sbb
lret
dec
das
inc
cmp
push
pop
xchg
out
loope
adcb
ret
pop
jge
xor
mov
movsl
adc
xor
mov
push
inc
cmp
jo
adc
cmp
ds
addr16
ja
ret
push
xlat
rcl
jl
stc
mov
adc
popf
movl
push
test
and
movsl
es
clc
loopne
pusha
cltd
out
lods
enter
dec
or
and
cld
jno
aas
xchg
xchg
xor
cmc
push
lock
and
xchg
dec
cmpsl
shll
jae
aam
icebp
pop
sub
lahf
fs
daa
mov
ds
xchg
mov
xchg
sbb
mov
adc
sbb
mov
or
fsubrl
push
xchg
subl
pop
sbb
scas
stos
add
stos
addl
jno
add
cmc
mov
push
sbb
idivb
addr16
arpl
cmpb
mov
cs
out
icebp
adc
notb
add
mov
stc
mov
jo
push
adc
icebp
mov
xchg
movsb
mov
adc
or
push
pop
aam
loope
cmc
mov
jg
adc
dec
das
jl
add
sbbl
sub
sub
jecxz
fwait
inc
outsl
cmp
add
idivb
inc
js
and
mov
inc
xlat
out
mov
push
inc
mov
xor
inc
shl
pop
rcrl
jmp
cmp
imul
dec
jno
loopne
fsubrl
dec
xchg
stos
shll
outsb
adc
stos
push
pop
out
adc
and
loop
or
cmc
or
jle
aam
pusha
lahf
mov
cmp
aad
cmp
aas
leave
sarb
insl
mov
out
rcrb
xor
mov
jne
xchg
push
cltd
ja
nop
scas
pop
cmp
mov
jb
mov
mov
fsubl
add
jo
lret
and
imul
mov
mov
mov
sbb
int
push
mov
stos
sbb
and
pop
pop
lock
adcb
sub
mov
mov
mov
jle
fisttps
and
push
test
mov
inc
aaa
ss
dec
cmp
loopne
lods
and
jle
mov
pop
shrl
mov
cmp
arpl
lods
or
mov
out
add
sub
insl
nop
aad
sub
addl
and
push
in
loopne
and
outsl
daa
xor
xor
dec
jbe
sbb
mov
dec
sub
cmc
push
ror
mov
lret
jle
lret
lds
or
dec
test
xchg
jp
sub
mov
sub
clc
dec
cmp
movsl
repnz
loop
popa
sub
xor
cmc
adc
in
jecxz
jns
xchg
sub
and
ret
inc
adc
jecxz
pop
addr16
mov
jge
xor
mov
orl
mov
cmp
out
adc
jnp
flds
ret
test
and
aas
enter
sub
xchg
jmp
pop
xor
inc
jge
jg
add
cmpsb
lret
push
sbb
jns
std
or
xorb
sbb
dec
cmpsb
cmp
das
mov
jle
mov
insl
shrb
imul
lret
ljmp
inc
fst
push
stos
out
les
lret
push
std
fbld
shlb
push
icebp
mov
test
adc
pop
aam
jbe
mov
fisttps
jmp
int3
sbb
pop
mov
mov
and
shll
cld
sbb
mov
cmp
notb
negb
loop
cmp
push
lret
sbb
push
pop
imul
xchg
stc
jnp
imul
iret
and
push
pop
pop
mov
icebp
add
jl
test
lcall
ret
leave
and
push
push
or
jle
mov
lock
lret
repz
das
push
add
lods
push
icebp
stos
mov
ret
or
repnz
inc
les
sbb
adc
call
pop
xchg
add
mov
jg
xchg
rcrl
mov
sbb
cmpsl
ret
xor
mov
mov
lahf
pop
std
orb
cmp
fldl
adc
std
rorb
xchg
rcrb
mov
cmp
mov
test
sbb
push
pushf
fcoml
andl
lods
decl
mov
sub
add
shlb
dec
inc
pop
mov
jns
inc
xor
mov
sbb
cld
and
popf
into
mov
ret
add
mov
add
sub
nop
or
sahf
dec
imul
loope
sti
lret
lea
push
push
mov
enter
jno
mov
adc
add
push
clc
mov
jno
xor
rorb
pop
mov
push
sub
lods
stos
cltd
aaa
mov
mov
insl
inc
cmpsb
fnstsw
orb
aas
repz
cld
ljmp
cs
das
mov
les
addl
and
rorl
sti
dec
sbb
pop
faddl
enter
in
adc
cltd
call
push
and
add
andl
nop
adc
inc
xor
inc
xchg
movsb
frstor
test
sub
xor
jns
adc
inc
es
and
adc
jle
xchg
mov
pushf
mov
inc
clc
roll
test
push
push
ffreep
inc
je
mov
rcr
jle
mov
xchg
xchg
lcall
and
xlat
lods
add
jle
popa
adc
dec
pop
int
push
out
mov
into
lret
stc
inc
jle
xor
pushf
ja
sub
mov
and
es
pop
in
imul
sahf
addb
in
lock
pop
addr16
ljmp
dec
mov
mov
or
xchg
mov
inc
scas
in
jne
das
cli
scas
repnz
dec
mov
scas
mov
mov
mov
out
into
sbb
mov
rcll
mov
insb
out
frstor
inc
cmpsb
mov
loop
mov
jae
flds
inc
mov
es
push
das
dec
adc
lods
and
rcrb
popa
rcr
gs
mov
std
pusha
xchg
mov
jo
lahf
bound
mov
pop
lahf
int
sub
jecxz
dec
sahf
stc
fs
push
mov
and
jo
pushw
xor
pusha
xchg
aad
mov
icebp
inc
xchg
bound
and
inc
pushf
adcb
or
popa
dec
sysenter
mov
mov
cld
cld
popl
sbb
push
outsl
dec
dec
mov
pop
inc
xchg
jne
dec
je
sub
pop
test
outsl
sbb
push
fadds
pop
pop
mov
or
fnstsw
cli
mov
repnz
xrelease
ror
jl
jne
int3
sbb
aaa
sbb
dec
loop
jge
hlt
mov
idiv
addr16
leave
fsubrs
and
cmp
mov
jno
mov
fisttpl
sub
mov
add
mov
mov
mov
mov
movsl
mov
into
mov
test
enter
arpl
xlat
sbb
test
mov
ja
pop
mov
cmp
pop
and
cmpb
cmp
pop
outsl
or
fucom
sub
leave
scas
ret
jg
mov
lock
lcall
and
insb
jno
mov
xor
out
mov
daa
rorb
jo
jp
aas
pop
daa
and
mov
in
inc
jg
fs
or
icebp
adc
loop
pop
xor
add
mov
popf
pop
jl
fs
lcall
jns
andb
jne
lret
xor
std
mov
or
push
mov
mov
adc
push
mov
loop
gs
mov
mov
jnp
mov
stc
sub
scas
push
sbbl
mov
adc
imul
mov
inc
hlt
in
ds
xor
test
inc
test
inc
mov
jecxz
cmpsb
mov
add
dec
imul
mov
fisttpl
incl
push
pop
popa
sub
cmp
or
jnp
mov
mov
xchg
dec
cltd
or
pop
int3
ret
push
dec
sbb
push
and
dec
faddl
outsl
pop
xor
mov
in
xchg
jp
mov
and
pop
in
pop
dec
clc
mov
ds
fwait
ja
andb
addb
xchg
fs
add
test
jne
or
push
cmp
cmpb
ja
or
push
mov
lahf
cmpsb
push
adc
pop
jge
pop
lods
aam
adc
pop
push
push
cmpsb
jb
mov
or
test
aas
outsl
dec
out
ds
inc
jecxz
movsb
fwait
das
push
add
lods
mov
scas
clc
sub
sarl
add
outsb
mov
mov
pushf
insl
mov
add
cli
dec
inc
fsubrs
stos
test
pop
lods
adc
lods
mov
adc
in
push
mov
mov
aas
out
sbb
xchg
cli
das
add
inc
xor
xor
repz
add
jmp
xlat
movsl
adc
mov
cmp
sahf
shl
add
jbe
bound
into
test
adc
lock
xor
xchg
je
sub
or
jle
mov
cmc
xorl
repnz
jns
fisttps
adc
xor
jnp
and
bound
fstpl
push
incb
inc
adc
outsb
insb
addr16
aas
lock
adc
stc
inc
sti
repnz
test
fcompl
inc
dec
test
or
xor
pushf
mov
mov
and
lcall
sbb
inc
cmpb
inc
jne
push
xchg
fcompl
je
pusha
mov
push
loopne
aam
loope
cli
jmp
ss
lds
in
push
push
or
aam
insb
mov
jl
sar
jl
lahf
jp
inc
sahf
mov
adc
imul
jg
xlat
sti
mov
adc
xchg
sbbb
jl
popf
pop
sti
mov
jno
sti
xor
sub
push
and
shrl
pop
mov
lret
jb
cwtl
testb
inc
ja
cwtl
jg
pushl
stc
imull
sti
inc
imul
jne
and
ja
nop
stos
mov
xorl
pop
outsb
shrb
pushf
ret
movsl
push
ret
stos
fs
lds
mov
add
aad
add
cmc
sahf
push
lcall
adc
mov
aas
imul
in
xlat
xlat
stos
loopne
leave
ret
cld
mov
mov
add
stos
cli
aad
and
mov
mov
sbbb
sub
dec
adc
in
mov
jo
movsl
mov
roll
adc
pusha
mov
nop
lock
std
insb
push
cmp
push
shrl
jns
sti
add
scas
xchg
repz
out
aas
xchg
fdiv
repz
dec
lods
popa
and
jno
or
aaa
ror
mov
pop
or
gs
xchg
inc
pushf
jle
or
mov
ja
xchg
out
cltd
or
orb
xor
imul
scas
in
scas
es
das
lret
pop
in
inc
cmp
adc
repz
xor
loopne
pushf
sar
in
xchg
outsb
add
add
mov
shr
jle
cs
jmp
outsb
lcall
or
push
sbb
mov
and
push
sub
cmp
inc
push
adc
xor
cmpsl
and
loope
jg
add
add
out
mov
stc
dec
inc
aas
ret
mov
push
test
lret
mov
add
jg
or
add
imul
push
shll
dec
sub
insl
mov
fildll
sbb
mov
notb
sbb
fcmovnbe
pop
and
call
lea
ljmp
mov
into
stos
xchg
mov
dec
push
mov
lret
mov
cmp
call
cmpxchg
cwtl
call
sbb
mov
xchg
sbbb
sbb
ljmp
mov
popa
and
cwtl
inc
pop
popf
test
mov
mov
pop
adc
repz
repz
testb
bound
inc
nop
dec
fbld
int
sub
rcrl
adc
mov
push
test
dec
add
mov
jmp
fbstp
rcrl
pop
push
insb
mov
xchg
sahf
dec
fsubs
loopne
rorb
in
movsl
lock
sub
fdivr
ret
dec
sub
mov
les
xchg
arpl
push
out
lret
insb
out
mov
adc
inc
cmp
xor
out
pop
lods
mov
dec
jno
lcall
mov
into
or
cmp
mov
hlt
pop
into
mov
add
pop
adc
call
in
jbe
pop
sbb
pushf
and
jno
sub
adc
inc
in
scas
lret
dec
dec
jo
outsb
and
cli
adc
in
adc
test
xchg
or
inc
push
jmp
xor
call
out
arpl
cmpsl
push
lods
mov
rcr
dec
mov
das
mov
shr
sbb
xor
adc
inc
addl
mov
sub
popa
cmpsb
jl
xor
rcr
cmp
push
cmp
pop
xchg
stos
subb
movsb
cwtl
stc
test
mov
inc
stos
enter
add
mov
lds
and
ljmp
icebp
fwait
sub
sub
sub
dec
lods
pop
jnp
out
push
cmpb
cmp
push
mov
cmc
out
dec
adc
push
pop
loope
mov
pop
mov
sub
xchg
out
leave
insb
in
sub
push
js
xlat
xor
push
push
push
lods
xor
dec
adc
pop
push
sbb
es
rorl
sbb
xchg
xchg
xchg
stc
lods
dec
adc
adc
stc
lahf
cld
lods
outsl
in
data16
add
cwtl
xlat
push
push
cli
mov
insl
adc
scas
cmp
stc
addr16
sbb
mov
push
pusha
xchg
test
xchg
pop
rol
aaa
jmp
mov
inc
imul
popf
test
push
imul
mov
out
adc
cwtl
inc
inc
out
xor
int3
out
dec
fidivrs
scas
nop
jbe
cltd
jl
xchg
jae
fiadds
cld
jmp
inc
std
lds
pop
jne
roll
nop
push
test
sbb
mov
aaa
mov
sbb
in
iret
test
jge
icebp
pop
sub
jne
outsl
mov
lret
jno
rorb
clc
dec
iret
outsb
jecxz
ret
movsl
imul
add
push
mov
jmp
mov
jl
hlt
add
aas
dec
std
cmpsl
inc
adcl
loopne
push
jg
ret
scas
call
mov
iret
jo
cmp
sub
add
cld
nop
test
orl
or
test
xor
sbb
cmp
and
xchg
int3
icebp
movsb
ds
in
cltd
xor
add
clc
es
pop
jb
out
pop
fldl
fs
push
pop
arpl
mov
push
je
and
jg
inc
xor
gs
mov
clc
fimuls
in
fs
fxch
xchg
mov
daa
dec
ret
rorl
nop
add
roll
cmpsb
out
sbbl
cmpsb
dec
fwait
jb
pop
arpl
pop
jo
dec
jge
daa
mov
adc
mov
and
jp
scas
cmp
decl
rcr
rcrb
xchg
xor
repz
mov
add
movsl
clc
dec
daa
fwait
ja
scas
aad
stos
jns
add
inc
addb
cmp
pop
pop
cmpl
cwtl
pop
sub
sbb
adc
aaa
rorl
test
outsb
pop
fildl
out
fst
jge
add
mov
dec
movsl
iret
dec
sbb
and
add
cwtl
dec
or
fnstsw
jb
cwtl
mov
out
out
insl
test
dec
xchg
test
xchg
fdivl
jne
or
subb
sti
pop
or
jecxz
fldt
cwtl
cmp
jmp
mov
mov
inc
mov
jl
dec
xor
arpl
jne
mov
shrl
incb
cmp
sahf
push
dec
movsb
xchg
in
mov
cmp
cltd
xchg
pop
adc
adc
into
sub
pop
pop
push
adcl
sub
push
inc
lahf
adc
shlb
xorb
adc
test
aad
cmp
fdivl
pushf
mov
xchg
leave
pop
pop
aas
mov
sub
and
outsb
dec
int
div
fsubrl
movsb
jmp
mov
jecxz
cs
mov
and
push
ficoms
dec
stc
xor
mov
out
imul
in
inc
cmc
aas
mov
rcr
push
mov
movsl
mov
add
nop
inc
push
mov
pop
aam
inc
jg
or
in
inc
out
lock
pop
cs
fcompl
addb
mov
xchg
gs
insb
pop
jecxz
stc
sub
mov
cmpsl
inc
jne
adc
adc
lret
pop
icebp
mov
push
cmp
bound
push
aam
sbb
adc
call
cmc
movsl
mov
adc
or
mov
sbb
xlat
xchg
add
nop
dec
sti
pop
mov
negb
daa
stc
les
aaa
push
notl
pop
sub
fbstp
jmp
push
mov
daa
push
hlt
inc
aas
shlb
mov
xchg
js
cmp
enter
fwait
mov
inc
stos
ljmp
repz
gs
mov
movsl
stos
jns
push
pop
pop
in
mov
orl
test
inc
cli
stc
mov
std
xchg
mov
repnz
xchg
dec
mov
jl
sub
mov
push
fists
cmovnp
in
adc
pusha
cmp
bound
sbb
std
imul
les
imul
pop
aad
ds
addr16
or
data16
scas
or
fnstsw
clc
in
xchg
xor
adc
cwtl
or
out
cs
test
push
adc
inc
outsb
shrl
cmovnp
cmpsl
nop
sbb
and
mov
mov
mov
jg,pn
xor
repz
cltd
fistps
out
lds
insl
push
xchg
addr16
xchg
mov
pusha
pop
inc
int
mov
sbb
mov
cmp
das
adc
push
cmpb
icebp
ret
loope
jae
or
ret
inc
add
jae
loopne
fidivrs
mov
fmuls
out
xlat
dec
ljmp
stos
je
pop
sub
fcmovbe
lea
pop
mov
dec
mov
mov
xor
or
mov
rcrl
sbb
push
push
mov
daa
lcall
es
mov
shll
jo
cmp
mov
shll
loope
je
pushf
xchg
in
add
cmp
dec
push
push
mov
dec
sahf
sti
lret
lods
push
int3
shll
jge
scas
xchg
movsb
jle
sub
rorl
in
inc
xchg
sub
inc
inc
xchg
lods
adc
js
aam
in
dec
stc
ret
xchg
pop
mov
pop
sub
mov
mov
subb
int3
pop
jl
loope
adc
mov
shlb
xchg
inc
inc
xor
push
ljmp
pop
fldenv
mov
out
mov
fs
lret
xchg
jno
inc
or
popf
xchg
jle
cmp
out
mov
insb
jecxz
push
int
mov
fisubrl
or
dec
ja
pop
and
es
inc
jb
or
out
pop
pop
fildl
mov
mov
repz
pop
add
shll
data16
insl
movsl
pop
mov
sbb
mov
mov
xor
ds
incb
xor
data16
push
or
and
push
shll
movsl
and
shrb
mov
inc
pop
jno
rorb
orl
test
mov
xor
xchg
lcall
push
shlb
shll
xlat
in
cmp
mov
pop
xchg
call
int
lret
jecxz
ljmp
in
fs
gs
add
dec
out
sub
bound
iret
sti
outsb
repz
and
lods
mov
inc
cltd
pop
outsl
xor
mov
adc
insb
inc
cmp
pop
lods
cmp
add
es
rcrl
repz
add
sub
lahf
aaa
scas
xor
jb
mov
push
cmpsb
mov
mov
fnsave
push
xchg
cmp
std
pop
jg
adc
mov
mov
pop
sbb
popa
popa
loopne
lahf
lret
adc
lret
addr16
sub
add
mov
sub
sub
xchg
daa
decl
pop
loop
cmpb
fucomi
sarl
inc
jnp
xchg
addb
jno
mov
mov
addr16
jle
push
or
xchg
gs
mov
lods
dec
pop
xor
addb
pop
rol
adc
xchg
mov
dec
dec
repz
mov
adc
frstor
je
push
xor
xchg
pop
stc
outsl
mov
push
cmp
fdivrl
ret
push
addr16
adcb
insb
sub
int
jo
addr16
addl
xchg
test
jg
iret
rclb
mov
mov
ss
hlt
test
out
out
fcmove
enter
pushf
cli
cmp
test
fs
std
or
and
std
scas
add
add
test
add
fadds
sbb
test
out
or
leave
jno
adc
inc
jg
inc
mov
fcoms
xor
inc
cs
test
ljmp
fldenv
sub
aas
leave
dec
jno
adc
imul
scas
push
xchg
mov
out
add
push
in
aas
ficoms
aaa
inc
arpl
jnp
mov
outsb
mov
xor
les
and
jo
inc
dec
sub
push
adc
loope
sub
mov
xchg
int3
sbb
xor
push
ds
out
jl
lcall
inc
wbinvd
call
cmp
xchg
cmp
mov
jne
int3
js
out
dec
push
dec
imul
popa
lea
loop
sub
lock
stos
dec
xorl
ja
sub
lcall
mov
shl
sbb
mov
adc
pusha
pushl
cmp
sbb
dec
inc
fcomps
call
jp
xor
and
pop
loopne
lea
and
cltd
test
loopne
std
lcall
xchg
xchg
and
xchg
add
test
jb
sbb
or
cmp
sbb
jbe
mov
push
jecxz
popl
out
push
pop
pop
stos
fidivrl
xchg
xchg
sbb
xor
insb
imul
clc
or
dec
and
shl
mov
mov
sub
movsb
xor
repz
hlt
aad
jb
je
jb
stc
fwait
push
nop
or
mov
add
stc
jae
in
pop
sti
jmp
stos
adc
cld
xor
es
mov
push
or
pop
mov
loope
sub
jmp
inc
aam
sub
cmc
jae
sbb
jmp
lods
jae
and
das
inc
pusha
stc
cmp
shrl
pushf
sub
outsl
popa
xor
jno
xchg
cmp
cmp
pusha
mov
cli
aad
loope
cmpsb
xchg
cmp
mov
andl
xlat
repz
lret
loop
out
xor
mov
lcall
inc
aaa
aas
jp
xchg
rcr
addl
mov
mov
cmc
push
pop
sahf
push
xchg
sbb
push
arpl
jnp
nop
inc
sbb
xchg
mov
push
push
ja
into
nop
push
call
mov
loope
pop
mulb
inc
aas
jb
das
dec
inc
mov
mov
or
dec
js
xchg
leave
es
pop
imul
dec
aaa
mov
jnp
push
lret
daa
fisubs
or
cld
mov
lock
fistpll
sbbl
cli
mov
jmp
add
or
test
loop
enter
jge
mov
addr16
call
clc
mov
das
sub
push
sub
jl
out
sub
dec
fiaddl
push
lds
mov
adc
shll
clc
ds
mov
inc
roll
dec
arpl
js
xchg
and
subb
push
sti
lods
imul
push
pop
cmpsb
out
sub
pop
add
movb
loop
xchg
adc
add
adc
out
cmpsb
or
jae
jo
orl
mov
pop
xchg
test
movsl
cmc
movsb
inc
lcall
xor
in
sub
push
jmp
sbb
call
pop
inc
popa
roll
aas
jmp
stc
sbb
sbb
dec
insb
testb
jmp
outsl
fucomp
mov
push
add
push
xchg
push
mov
sbb
ret
popf
pop
les
adc
out
aam
aad
sub
int
sbb
push
mov
lock
adc
inc
in
add
lea
lods
cmc
pop
ficoms
jge
cmp
icebp
lods
cld
mov
mov
mov
daa
imul
inc
pop
lea
cltd
xor
ret
dec
rep
mov
xchg
cltd
test
fwait
sbb
sahf
dec
lahf
iret
fisttpl
in
xor
mov
push
ficompl
addl
arpl
jne
cmpsl
enter
sahf
cmpsb
lock
push
xor
sub
xor
xlat
xchg
cmp
lods
incl
mov
add
jb
movlps
aad
add
rcr
imul
pop
dec
push
rcrl
ficompl
add
cmp
ss
loopne
leave
rcrb
arpl
add
cmp
cmc
xchg
mov
out
mov
adc
call
jnp
outsl
mov
xchg
inc
sbb
scas
je
xor
insl
sbb
and
mov
adcl
insb
push
int
loope
je
dec
mov
dec
testl
and
rolb
outsb
sub
shlb
call
xchg
cmpsb
mov
sbb
dec
sbbl
in
ss
test
repz
add
add
test
loope
and
mov
jg
adc
add
xchg
cmp
xor
inc
rorl
pop
in
inc
or
pop
dec
popa
xlat
imul
test
call
les
ljmp
cmc
mov
add
bnd
push
mov
lods
ja
es
xchg
and
and
mov
stos
out
sbb
xchg
ja
popl
call
mov
rorb
in
pop
movsl
fs
divl
sub
mov
jno
push
lcall
outsb
jns
mov
and
mov
add
pop
jle
and
jg
mov
push
mov
out
mov
sbb
stc
mov
rcrl
movsb
insl
cmc
in
xchg
and
mov
dec
or
adc
sbb
lret
lret
call
pop
popa
push
test
out
stc
mov
outsl
in
sub
sbb
bound
into
psubd
cs
add
jmp
sarl
test
adc
inc
mul
jl
adc
loope
call
push
and
int3
loope
pusha
sub
lret
daa
or
cmp
pusha
testl
push
sbb
and
cltd
stc
xor
or
sub
xchg
out
out
test
les
jbe
cmc
jns
push
je
sbb
jno
sub
jp
test
mov
ret
mov
je
xchg
mov
adc
fcmove
arpl
out
cmc
popl
mov
fs
xor
cmc
lds
xchg
js
mov
mov
mov
and
push
and
dec
popf
idivb
xchg
sub
nop
mov
dec
xor
pop
pop
pop
or
scas
gs
mov
sbb
xor
sub
leave
or
ljmp
push
mov
pusha
jb
cltd
sbb
iret
cli
mov
sub
adc
aam
je
pop
push
repz
xor
in
out
mov
push
sbb
and
pop
xor
loopne
dec
jne
sub
clc
test
mov
cwtl
addb
push
inc
pop
xor
fs
movsl
dec
shlb
add
jle
mov
xchg
loope
sub
mov
or
test
mov
xchg
xlat
push
ret
gs
js
add
sbb
add
cmc
pop
and
flds
and
add
add
mov
sub
sub
sub
pop
int3
roll
push
lahf
sub
mov
sub
add
icebp
in
sub
mov
push
das
or
xor
sti
fst
jmp
and
popa
push
and
nop
jecxz
jne
dec
add
dec
jmp
push
xchg
sbbb
loope
jmp
imul
imul
shrb
sub
pop
push
pop
and
mov
cwtl
test
pushf
xor
cmp
icebp
cld
inc
je
leave
cmpsb
xor
xor
cwtl
cltd
mov
ret
les
in
xor
sarb
dec
rcr
out
into
rclb
inc
sbb
xlat
mov
mov
adc
pop
cmp
addb
mov
xchg
cwtl
mov
or
sarl
neg
push
fwait
add
push
mov
lahf
iret
cmp
dec
enter
outsb
out
inc
xchg
mov
jnp
insb
js
pop
jle
out
in
rcrl
mov
je
inc
jb
pop
jo
les
sub
jp
mov
movsl
xchg
or
xor
pop
js
mov
imul
imul
or
ss
mov
push
or
jbe
aam
jne
mov
clc
mov
sbb
leave
fwait
jle
sbbb
add
test
or
stc
xor
bound
mov
jle
xchg
aaa
pop
adc
mov
xlat
jae
popa
adc
cmpsb
inc
outsl
aaa
aas
outsl
ret
outsl
adc
jmp
movsb
in
cmpsl
sub
dec
not
or
mov
fiadds
push
xor
iret
call
push
sbb
test
pop
xchg
movsb
das
lahf
push
clc
jns
jle
aaa
les
xchg
xlat
sbb
add
shlb
jl
std
xor
imul
fildl
xchg
cmc
adc
fcompl
pushaw
rcll
inc
xor
push
xchg
push
popa
cld
inc
sub
pop
mov
test
push
inc
xor
adc
dec
out
aas
jae
push
ss
jle
jbe
push
ffreep
nop
sub
in
insl
in
lods
mov
clc
lea
adc
ret
out
inc
call
rclb
test
lock
jnp
pop
dec
pop
pop
aas
fisttpl
mov
jl
xor
mov
rcll
subl
and
and
fcoms
shll
std
icebp
in
add
ljmp
repz
scas
nop
addr16
mov
or
jnp
cld
out
out
popf
push
dec
loop
mov
repz
in
mov
dec
dec
and
pop
pop
popa
and
jnp
sbb
jne
leave
mov
xor
dec
loope
not
sub
mov
ret
loop
repnz
aad
in
fldl
adc
mov
jae
pop
jo
outsl
mov
shrl
xor
inc
std
imul
pop
mov
dec
xchg
aas
inc
push
shlb
dec
mov
mov
mov
loopne
lods
addr16
fdivrl
push
sbb
xor
xchg
jbe
push
xchg
pop
cmp
push
cwtl
inc
push
push
or
push
mov
dec
ds
nop
repz
add
scas
dec
adc
dec
pushf
mov
and
mov
decl
aam
jns
lret
aam
idivl
adc
std
sub
aad
nop
pop
adc
icebp
inc
gs
xchg
xchg
jmp
mov
pop
int3
mov
in
or
mov
enter
nop
ficoml
jnp
and
mov
ret
lock
sub
mov
in
cmp
in
cli
in
imul
mov
aaa
cs
hlt
fadds
pop
cmp
lret
rol
insb
mov
jle
xchg
jecxz
jge
add
iret
rorb
cmp
push
ret
mov
js
and
pusha
cltd
lock
movsb
aad
mov
xor
cmpsb
cwtl
ss
add
and
je
sbb
dec
stos
in
jl
jne
push
and
add
mov
je
dec
jbe
push
in
sbb
mov
inc
idivl
sub
sti
inc
cltd
adc
cmp
adc
enter
int
int3
adc
xchg
ret
cmp
push
jl
mov
mov
lahf
xchg
push
jne
out
inc
xchg
es
jns
xor
push
sti
bound
dec
mov
pop
imul
inc
ficompl
ljmp
cmp
mov
sti
cmp
add
mov
adc
gs
push
loope
shlb
fsubs
push
cmp
mov
jns
pop
out
inc
imul
jp
sbb
or
xchg
jae
loop
sub
cmpsb
cmp
mov
sbb
adc
and
inc
dec
pop
adc
inc
cmp
dec
and
loop
or
push
jb
notb
outsl
out
pop
les
pop
dec
pop
and
pop
rclb
arpl
lock
sahf
adc
mov
mov
or
subl
add
mov
dec
std
hlt
lret
aas
jo
mov
sbb
push
loopne
in
inc
and
fwait
jo
sub
sbb
cld
negb
cmp
jge
shr
ss
mov
mov
pop
xor
ja
outsl
ds
push
dec
jne
enter
or
or
inc
sbb
lods
jno
mov
cmp
push
and
sti
add
insb
arpl
xchg
dec
cmpb
mov
jns
push
inc
xchg
xchg
add
mov
shll
push
mov
adc
adc
cld
push
mov
cmp
mov
cmp
lods
pop
aad
lret
popf
mov
pop
push
jecxz
lcall
fldenv
inc
mov
inc
push
popa
in
jp
loop
xor
jle
aad
es
jbe
xor
sarl
int3
int3
xchg
cmp
sbb
mov
adc
xor
outsb
cmp
add
sub
and
sbb
adc
mov
lret
mov
or
xor
aas
mov
cltd
xor
cmpsb
mov
adc
push
sub
inc
cmc
lock
jb
inc
push
aad
cmp
mov
scas
imul
cmp
mov
adc
mov
or
xor
push
test
stos
lret
or
jns
dec
sbb
movsb
lahf
push
mov
outsb
add
imul
rolb
add
push
dec
mov
mov
xchg
mov
mov
shll
cmp
loopne
add
push
mov
test
repnz
rcl
dec
aas
rcrb
sub
das
aaa
std
push
js
repnz
push
push
js
nop
ja
pop
xor
in
push
cmp
inc
mov
and
inc
jl
sbb
icebp
cmpsl
js
cmp
call
clc
je
cmp
mov
jae
mov
fs
add
scas
orb
das
loopne
ret
add
jmp
jl
or
and
jg
adc
ds
xor
lods
mov
clc
mov
jle
fwait
mov
push
inc
sub
dec
addr16
jbe
pop
sbb
mov
bound
mov
cmc
enter
pop
data16
lahf
arpl
jb
arpl
and
xchg
test
jae
adc
cmp
mov
stos
std
cmovs
mov
lods
cmpsb
cmp
dec
mov
cmpsb
push
fldpi
xchg
aad
mov
mov
sub
push
inc
lock
imul
mul
popf
or
mov
push
push
sbb
lea
pop
dec
fbld
and
jo
rcr
lcall
inc
cmp
notl
pop
cs
lret
pop
jl
adc
push
or
adc
data16
movsb
push
push
test
lds
sub
cmp
cmpsl
sub
ss
out
jnp
dec
xchg
test
rolb
adc
daa
mov
jo
loopne
mov
jae
mov
sbb
cltd
nop
push
push
out
sub
test
dec
jle
popa
xor
add
in
js
inc
icebp
lock
lahf
mov
dec
inc
sar
adc
push
jle
pop
in
or
mul
xchg
stc
mov
scas
mov
cli
enter
cmp
and
addr16
jp
and
xchg
xor
mov
cs
les
movb
das
in
ret
shlb
je
mov
ja
iret
hlt
iret
nop
xchg
push
sub
popa
fldt
les
jnp
clc
loope
jno
test
bound
fiadds
inc
fistpll
xchg
mov
mov
sbb
xlat
mov
repnz
inc
iret
or
dec
icebp
orb
pop
imul
shlb
in
fsubr
and
aad
mov
pop
xlat
push
pop
cmp
outsb
stos
mov
icebp
sub
add
lock
cmc
or
push
jno
dec
dec
lods
movsl
fcoml
ljmp
in
or
push
jns
cmpl
mov
mov
mov
sbb
pusha
faddl
test
movsb
adc
out
inc
xor
mov
add
mov
push
aas
or
imul
lock
stos
jae
fidivrs
cmpsl
lea
lock
addr16
aad
mov
out
and
lods
add
imul
mov
mov
mov
dec
ss
xchg
or
push
clc
mov
push
rcr
cmp
sub
inc
cwtl
xor
jg
sbbb
xlat
jmp
loopne
dec
mov
ret
inc
cmp
fbstp
xchg
jne,pt
int
mov
push
imul
push
dec
xor
adc
aas
out
xchg
push
ret
pop
ret
inc
imul
das
out
mov
inc
es
push
ds
cmp
shl
mov
mov
mov
mov
dec
dec
sarl
mov
mov
mov
and
in
in
mov
lods
fsubrl
jae
imul
push
and
ffreep
xor
pop
filds
mov
mov
mov
lret
inc
lret
arpl
inc
dec
mov
jg
cld
and
test
fnstsw
push
insb
xor
sub
add
jbe
aas
pop
push
or
arpl
and
mov
inc
jo
out
sbb
mov
xchg
push
sub
fisubl
movsl
rolb
testb
mov
popa
enter
sbbb
testl
jmp
dec
cmp
mov
mov
cli
fwait
jnp
pop
jmp
test
aas
in
jg
xor
inc
xchg
mov
repz
xchg
lods
hlt
sub
or
mov
xchg
sbb
test
lret
and
scas
jle
mov
arpl
sahf
inc
je
icebp
bound
xlat
inc
sti
pop
and
sbb
jmp
mov
imul
mov
sub
push
xorl
xor
mov
jl
ds
imul
xchg
pop
mov
sbb
les
cmp
jbe
sub
push
and
stc
and
or
inc
lods
loopne
lahf
jle
or
inc
out
int
push
inc
out
dec
push
leave
cmp
mov
or
clc
mov
js
or
sub
in
data16
pop
jge
outsl
sub
or
mov
fwait
dec
lods
sbb
jl
aaa
dec
cltd
sub
cmp
pop
nop
aaa
mov
xor
jno
push
sbb
push
xchg
lock
pop
mov
jle,pn
fbstp
xchg
ljmp
cmp
gs
and
jg
sbb
popa
or
mov
movsb
cmp
cmp
iret
inc
xor
cmp
sahf
testl
or
hlt
scas
rcrl
repnz
pop
fwait
insb
repnz
ret
push
cwtl
das
aam
mov
or
add
mov
flds
pop
das
loopne
sub
dec
pop
scas
push
mov
inc
xlat
imul
push
push
out
daa
fxch
xor
test
test
lcall
sbb
mov
jecxz
pop
mov
iret
adc
mov
jb
inc
pop
cmp
adc
push
ja
pop
xor
cmp
dec
cs
loope
xor
je
xchg
adc
packssdw
inc
push
jnp
pop
xorl
sahf
inc
cmp
popa
jp
fdivs
into
add
pusha
hlt
stc
insb
enter
or
aaa
xor
call
rcl
je
arpl
mov
movsb
inc
jns
pop
shl
mov
leave
jg
leave
or
das
mov
outsb
js
mul
clc
test
stos
xlat
in
push
std
inc
fbstp
bound
sub
incb
xor
pushf
lret
and
mov
into
repnz
arpl
cld
or
ja
mov
rcrl
pop
ja
in
ja
mov
lea
jl
arpl
sub
xchg
xchg
iret
mov
jns
arpl
inc
or
sbb
mov
std
int
xchg
popa
sub
mov
lods
add
shll
aam
mov
add
mov
les
cmp
fcmovne
mov
fiaddl
dec
xchg
mov
jae
loop
out
out
mov
xchg
or
mov
add
stos
lods
outsb
mov
cmp
decb
sbb
cmp
inc
icebp
out
jecxz
pop
clc
daa
xlat
jecxz
testb
mov
adc
adc
xchg
pop
mov
add
sub
cld
divb
fstl
mov
push
adcb
fisttpl
push
pop
aam
ficoml
xchg
out
mov
sub
or
sbb
sbb
shrb
sub
or
mov
add
dec
xchg
rorb
push
test
and
lret
adc
sti
mov
loope
mov
push
add
out
jp
jns
fsubrs
cmp
xchg
xchg
and
faddp
mov
clc
ret
cltd
pop
pop
pop
inc
mov
arpl
ss
popa
into
lahf
mov
lea
std
and
aas
ds
out
das
icebp
iret
into
shl
xor
push
cs
push
mov
xor
xchg
enter
mov
or
sub
pop
call
jno
push
iret
adc
mov
fwait
out
cmp
mov
ljmp
cmp
arpl
xor
mov
jg
push
add
xchg
pop
pop
xchg
dec
mov
and
mov
aaa
outsl
ret
sub
sbb
rcll
cmp
call
imul
pop
sbb
stos
cmc
adc
mov
and
hlt
shrb
sarb
fs
inc
and
push
add
aas
add
addr16
mov
mov
mov
or
lock
pop
xor
sub
pop
and
pop
les
addl
xchg
push
push
cwtl
jge
in
xor
lods
loope
in
adc
adc
xor
cs
loope
imul
aas
mov
popf
and
push
add
jg
mov
pop
jg
std
fldl
js
pop
arpl
xor
xchg
out
add
imul
pop
cmp
pop
stc
loopnew
dec
and
xor
xor
fstpt
sbb
mov
mov
xor
mov
sub
out
xor
cmp
push
lahf
into
hlt
in
xchg
sbb
sub
sti
mov
into
ret
fwait
loope
gs
xchg
lods
rcll
lods
insl
xchg
lock
sub
add
sub
or
jnp
xor
sbb
int
pop
cmp
mov
mov
mov
pop
mov
mov
inc
pop
push
mov
mov
into
lods
mov
cmpsb
mov
jae
sub
cs
jnp
mov
adc
add
mov
adc
mov
mov
and
mov
push
stos
lret
adc
jmp
movsb
and
push
pop
pop
cwtl
scas
dec
pop
loope
jae
xor
flds
data16
and
lahf
jae
into
xchg
mov
movsb
jecxz
xorb
mov
xchg
loop
je
sub
adcl
mov
mov
add
or
into
xchg
stos
push
push
jecxz
xlat
aas
popa
sbb
mov
add
xor
jecxz
lcall
mov
ret
rclb
imul
mov
push
lahf
roll
lds
movsb
stos
daa
cli
loop
lds
add
je
xor
push
xchg
fistpl
movsl
jae
outsl
mov
orb
stos
ficoms
outsl
scas
dec
xchg
mov
cmp
and
sbb
mov
movsb
sub
and
mov
mov
shlb
cmpsb
cmp
inc
imul
jecxz
pop
das
jb
addb
jge
sub
rclb
movsb
pop
int3
push
insl
dec
mov
xor
std
xchg
dec
dec
dec
jnp
ret
jae
in
sbb
dec
test
mov
lods
mov
pop
int
faddl
sbb
jp
gs
dec
push
jae
hlt
lea
jg
fiaddl
js
adc
pop
in
cmpsb
lret
test
ja
sub
rcll
mov
or
jno
int3
mov
loope
test
dec
mov
lods
xorl
inc
push
or
add
test
mov
mov
out
into
or
cmp
icebp
cmpsb
movsl
shl
out
cmp
pop
jecxz
lods
and
adc
enter
inc
mov
and
shll
mov
lods
les
mov
cs
cmpsb
mov
push
outsb
mov
cwtl
inc
lret
inc
add
sub
lahf
push
sub
aaa
std
cmpsb
lods
adc
cld
shlb
jno
push
push
sti
lret
jo
pop
mov
xchg
add
push
dec
dec
icebp
cmpsb
xchg
fidivrs
sub
pop
ret
mov
imul
iret
ljmp
into
stos
sbb
popa
pop
popf
aam
enter
cmpsb
out
arpl
imul
cmp
fldcw
inc
neg
inc
aam
pop
cmp
jb
stos
dec
mov
jno
push
add
add
xor
sub
mov
add
es
jmp
push
int3
adc
xor
mov
ffree
push
lods
loope
movl
loop
sbb
in
xor
xor
mov
out
in
cmc
dec
push
push
cmp
clc
pop
pop
testb
call
movsl
mov
and
lret
pop
bswap
jmp
lods
gs
push
add
flds
pop
mov
mov
fbstp
jl
loope
dec
imul
out
ss
inc
jno
pop
sub
cli
sbb
jo
insl
in
sbb
and
out
or
xor
jp
pop
fdivrs
dec
push
int
std
jp
mov
sbb
scas
lahf
pop
cmp
and
loope
rorl
shr
pop
shlb
repnz
push
nop
fs
fwait
xorb
cmp
sbb
xor
shl
js
mov
sub
in
xor
push
std
cmp
pop
test
xor
jae
pushl
out
lahf
mov
movsl
lds
es
dec
or
inc
push
sub
adc
cli
int3
mov
cmp
sbb
data16
jle
mov
jle
in
or
sbb
mov
fucom
inc
jbe
fabs
sbb
decl
mov
pop
or
cmp
sub
addb
ljmp
enter
fwait
sbb
inc
pop
scas
push
arpl
mov
inc
movsl
lcall
fistpl
clc
pop
test
push
in
add
jno
cmp
fcomps
jne
mov
leave
and
mov
icebp
cld
int
fnstsw
js
add
pop
sbb
scas
das
pminsw
sub
xchg
pop
mov
and
mov
ds
daa
cmp
mov
sbb
scas
sbb
or
mov
and
fcmovnu
shll
mov
jl
adc
sahf
and
data16
mov
in
jg
mov
mov
shl
enter
mov
jge
or
ret
seta
outsl
ret
cld
push
mov
out
lret
fidivl
popw
fcoml
mov
aas
pop
jp
mov
add
or
les
xor
lods
xchg
and
enter
inc
out
inc
pop
dec
inc
ret
movsb
cs
xchg
out
iret
in
arpl
inc
mov
and
pop
sub
ljmp
mov
xchg
mov
fdivrl
cmp
je
stos
cmp
icebp
call
jns
mov
xchg
iret
jmp
icebp
inc
add
sub
sub
out
cmp
dec
mov
ret
ss
scas
jnp
adc
test
leave
adc
or
ljmp
push
in
xor
pop
inc
lock
jmp
inc
mov
inc
add
popf
mov
psubusw
je
stc
push
andl
cmpsb
add
sbb
inc
popf
cmp
jb
mov
addr16
dec
pushf
jge
sub
clc
push
or
mov
pop
jge
incl
sbb
xor
jae
cmpsl
adc
mulb
sahf
clc
arpl
enter
testl
jmp
mov
or
call
sarb
cwtl
sti
xorl
push
in
jns
sub
imul
les
cltd
lea
pop
cltd
cld
mov
ret
call
pop
sub
xor
push
hlt
icebp
clc
mov
in
notl
and
mov
shll
mov
or
movsl
sub
pushf
or
cld
cli
pop
repz
push
sub
aad
sub
in
inc
xchg
dec
shrb
add
stos
xchg
dec
test
imul
jbe
mov
jmp
ss
iret
mov
adc
push
or
negl
sahf
push
xchg
daa
mov
xchg
mov
mov
cmp
rcll
out
adc
leave
imull
inc
data16
clc
push
aam
scas
add
repz
pop
mov
psraw
mov
call
xlat
in
sbb
cmpsl
stos
outsb
sbb
xchg
test
rclb
inc
and
push
xchg
push
sub
imul
ds
test
sbb
or
sbb
mov
xor
stc
xor
xlat
and
jnp
lds
dec
mov
into
xchg
outsl
out
pop
test
xchg
cmp
jl
mov
jg
cld
fcmovb
and
push
sub
xchg
jne
sub
clc
out
or
lock
aad
adc
mov
fldenv
scas
jae
lds
push
mov
scas
ret
pop
dec
fidivrs
ljmp
fwait
mov
std
and
stos
dec
sbb
push
sbb
jg
sbb
outsl
imul
mov
cmp
repz
cli
xor
aas
mov
jae
mov
cwtl
inc
ret
dec
adc
push
mov
jl
imul
sbb
stos
ja
icebp
cmp
shrl
inc
pop
and
dec
xchg
xor
je
std
andl
pop
icebp
cltd
fistpll
lahf
fidivrs
enter
mov
cmp
in
rcll
pop
mov
jb
lds
xchg
pushf
add
test
jle
test
xchg
test
push
mov
ss
mov
pop
repnz
mov
clc
movsb
push
pop
movsl
add
fldcw
xchg
inc
push
push
mov
pop
leavew
dec
leave
sbb
xchg
jns
mov
mov
stos
mov
pop
mov
xchg
mov
clc
fidivs
lods
loop
dec
push
sbb
or
test
shlb
repz
popa
aas
into
std
sbb
bnd
ret
inc
cs
roll
cmovs
dec
push
push
shr
add
mov
xor
sbb
mov
adc
cli
stc
pop
rcll
nop
stc
cmp
int3
fdivs
jo
mov
loope
inc
pop
pushf
out
shlb
xor
repz
ret
enter
gs
pop
leave
popa
enter
jo
movsl
cmp
fdivs
jo
mov
mov
iret
cmp
fistpl
or
scas
sub
lods
stos
jmp
mov
fildl
sbb
in
std
in
ljmp
mov
push
call
or
fs
sti
scas
ds
outsl
push
call
and
add
cmp
fst
mov
cwtl
and
xchg
mov
push
jnp
push
push
pop
adcl
aas
mov
or
clc
jg
add
sbb
shl
xor
mov
sub
stc
push
pop
pushf
xor
adc
pushf
adc
mov
jnp
add
sbb
or
dec
adc
sbb
ss
mov
stos
mov
push
repnz
cmp
test
mov
into
pusha
cmp
cmp
push
adc
dec
push
loope
leave
jp
pop
shrl
and
xchg
and
inc
data16
daa
cmpsb
les
loope
or
pop
add
sub
lea
jmp
je
push
sub
cmp
push
mov
or
imul
pop
mov
adc
loope
xor
mov
push
idivl
pop
ds
ret
or
and
dec
mov
test
lret
or
inc
dec
insl
adc
xchg
lahf
xchg
insb
sub
adc
popa
mov
mov
mov
das
lahf
inc
dec
jno
nop
mov
notb
mov
sahf
cmp
mov
add
adc
movsb
mov
out
sub
jecxz
sbb
loop
lock
sbb
pop
lahf
iret
orb
ljmp
in
addr16
adc
and
sub
push
jl
repz
movsb
push
repz
shl
das
imul
aam
and
push
orb
pop
cltd
int3
je
dec
lcall
xor
lods
mov
cmpsl
in
in
inc
lcall
and
out
pusha
loope
negl
ljmp
adc
or
inc
sti
sbb
dec
and
sub
xor
int3
adc
push
inc
out
mov
cmp
loope
lods
jecxz
mov
and
jnp
pop
insb
shlb
mov
inc
call
xchg
int
rcll
sub
movsb
sbb
lahf
fwait
les
aad
inc
pop
in
and
xchg
shl
xchg
cmp
negb
add
pop
jge
cli
cwtl
imul
testb
dec
xor
and
fimuls
push
pop
gs
push
stos
inc
insb
inc
ret
sub
pushf
orb
and
bnd
stc
adc
and
daa
cmpsl
addl
and
push
pandn
sarb
test
js
into
and
ja
xor
adc
xlat
and
mov
jg
fldenv
dec
fst
add
popf
dec
mov
cmp
testb
xor
insb
jns
xchg
shll
enter
jge
lcall
xchg
scas
or
mov
loopne
pop
aam
das
ss
jbe
xchg
push
loopne
mov
fbstp
mov
rcrl
sti
xchg
insl
mov
dec
repz
fucom
fwait
dec
out
outsb
cmp
push
mov
xchg
insb
pop
sbb
and
rep
push
xchg
mov
jb
stos
sub
fistpl
ds
fldl
leave
sahf
lea
loop
pop
push
add
adc
add
aas
fsubs
push
mov
sub
pop
incb
popa
sbb
sarb
xchg
push
add
inc
xchg
cmp
stc
ja
sbb
mov
fcompl
xchg
pop
jne
movsl
pop
push
adc
jnp
sarb
mov
pusha
mov
ret
jns
adc
dec
jmp
rolb
inc
ret
cmc
pop
dec
mov
pop
lret
push
mov
jne
in
jmp
inc
movsl
test
push
scas
popa
push
jnp
out
call
loop
jne
lods
adc
shll
mov
push
add
add
faddl
fdivp
out
mov
bound
jg
xorb
pop
sbb
je
test
outsb
out
ret
push
loope
push
push
inc
hlt
cmpsl
jns
test
xchg
jge
popa
aad
mov
pop
mov
jmp
cmp
cmp
daa
adc
pop
inc
cmc
test
loopne
scas
mov
fnstsw
jns
insb
dec
rcll
cmp
cltd
sub
mov
push
or
mov
xor
pop
cltd
jg
test
fadds
out
adc
jbe
imul
sub
jb
ja
lock
xor
sub
les
bound
pop
scas
xor
xor
jmp
hlt
push
ljmp
pushf
or
and
pop
push
dec
lea
adc
adc
icebp
mov
push
addb
outsb
divb
icebp
cmp
mov
mov
in
pop
movsb
add
push
xchg
pop
xchg
fs
popf
lret
cmp
fldcw
pop
aaa
jge
repnz
sub
pop
cmp
push
cmp
xor
stc
or
or
sub
cwtl
mov
sbb
mov
add
push
sub
pop
test
jae
fs
push
sub
mov
adc
bound
in
movsl
and
xchg
mov
aas
inc
push
jno
sar
push
rorl
fdivs
int3
inc
mov
dec
loope
leave
clc
dec
pop
mov
sbbl
shr
push
outsl
cwtl
out
lret
xchg
dec
xor
add
jno
leave
sub
jl
mov
push
and
sub
pop
cltd
jle
aam
rcrl
rcl
pop
sub
aam
mov
inc
insl
lahf
notl
das
adc
je
mov
lea
mov
dec
inc
jo
xchg
pop
inc
test
jmp
mov
push
cmp
sub
jecxz
push
cltd
fwait
addr16
mov
ficoms
mov
and
or
lret
insb
mov
sarl
mov
fs
xchg
leave
mov
ds
sarl
xchg
dec
pop
rcr
pop
jbe
and
and
mov
jno
xor
fwait
jge
mov
mov
movsb
inc
inc
push
fsubl
cmc
push
rorl
jg
es
push
sbb
in
ja
scas
push
or
push
out
mov
mov
xchg
test
or
sub
lahf
movsl
into
lea
je
dec
adc
fwait
adc
xchg
popa
mov
test
ret
cmp
adc
bnd
cwtl
mov
dec
jp
push
inc
orb
jns
mov
cmp
mov
push
jl
sbb
cmp
call
mov
xor
mov
xchg
xor
iret
adc
push
das
jno
sub
lcall
int3
or
fisttpl
ret
and
push
dec
xchg
scas
aas
add
daa
nop
jnp
pop
into
pop
sbb
arpl
pop
jle
enter
xchg
sub
lahf
sub
xrelease
mov
shrl
mov
mov
xchg
inc
test
shlb
mov
fsubrl
pop
data16
pop
push
cwtl
out
aaa
adc
push
dec
adc
or
mov
adc
xchg
mov
ret
cwtl
push
test
ret
lds
xor
sub
xor
pop
imul
push
cmpsl
xor
mov
cmp
outsb
repz
push
pop
push
or
jecxz
je
mov
push
testb
icebp
fstl
shrl
sub
into
decb
mov
add
jmp
xchg
fdivrs
test
pushf
call
loope
imulb
nop
in
imul
inc
pusha
sub
jbe
int
mov
dec
dec
or
and
nop
lds
pop
in
push
xchg
in
cmp
shl
loop
daa
ja
lea
mov
push
xor
loopne
stc
notl
mov
mov
sbb
or
sbb
push
test
aam
xchg
jg
mov
xchg
loopew
incl
push
loope
insb
out
and
mov
and
xchg
xchg
rclb
ret
xor
mov
add
fwait
loopne
sti
int3
fimull
sbb
jle
sbb
das
jg
pop
pop
pop
or
jl
jle
out
int3
popa
in
xor
aam
add
pop
into
clc
ja
std
and
jbe
xor
adc
cmpsb
cmp
sub
js
xor
jno
stos
mov
xchg
mov
mov
rcrl
call
lret
loopne
inc
fnsave
in
addr16
insb
js
imul
hlt
mov
mov
imul
in
inc
pushl
jecxz
rclb
xorb
pop
push
mov
adc
inc
stos
call
ret
lods
aaa
pop
jnp
testl
add
or
cmpsl
fnstcw
nop
js
movsl
and
hlt
shrl
pop
push
repz
sub
cmp
or
jmp
adc
das
popa
jno
jnp
jmp
push
push
inc
mov
inc
jae
ljmp
cmp
cli
mov
negb
mov
mov
iret
jae
sbb
cmp
inc
mov
mov
push
into
mov
xchg
dec
dec
nop
cmpsb
cmpsl
sbb
adc
mov
in
call
add
pushf
cmp
dec
lds
cld
pop
loop
dec
lea
imul
dec
cwtl
test
add
cmp
jo
test
movsl
shrl
cmp
push
fcmovbe
pop
xor
push
movsl
sub
cmp
sbb
xchg
popa
bound
jbe
pushf
xchg
mov
repz
pop
outsl
jl
xchg
mov
push
mov
test
mov
pop
dec
inc
jno
in
fbld
hlt
rcrb
and
xorb
mov
xchg
cmp
mov
int
xor
sbb
test
mov
inc
std
lahf
xor
popw
mov
cmpsl
movsl
mov
xchg
sub
xor
cld
lcall
dec
or
call
pop
pop
aaa
lgs
std
addr16
jae
push
test
into
sub
pop
movsb
jns
fmuls
mov
jg
pop
mov
out
mov
mov
mov
shl
daa
mov
inc
daa
sbb
inc
daa
imul
sub
and
sbb
call
cmp
mov
dec
and
push
and
mov
mov
js
call
sbb
mov
test
loope
aam
fildl
into
in
sbb
bound
scas
push
pop
mov
mov
aas
orl
loopne
test
mov
outsl
pop
js
jno
push
fisubrl
pop
repz
sar
mov
bound
mov
add
leave
sub
or
shl
jb
or
inc
mov
mov
and
pop
cmp
pop
out
add
jge
andl
cmp
xchg
mov
xor
roll
xor
mov
divl
cmpsb
mov
inc
shrb
inc
xor
rcrl
push
decb
dec
popa
or
xor
lcall
xlat
xchg
jbe
out
push
cltd
fldenv
and
sbb
daa
popf
dec
jp
repnz
jecxz
les
jp
cmpsb
mov
repz
mov
jo
add
stc
jmp
mov
cli
fmul
sub
and
cli
jmp
pop
xchg
popf
mov
or
flds
cmp
aad
enter
sub
clc
ja
pop
in
aam
out
push
hlt
fistps
or
mov
dec
pushl
mov
xor
mov
jnp
cmpsb
mov
dec
xor
rorl
pop
aas
fcmovu
xchg
xor
or
sub
mov
mov
mov
inc
fdivr
jge
add
dec
or
ds
test
mov
popa
pop
lcall
pop
lock
les
push
dec
mov
xor
fsubp
dec
add
xchg
aaa
add
mov
mov
ds
push
jo
xchg
and
and
xor
stos
out
out
xor
es
xor
jg
jge
mov
sub
xchg
jne
pop
xchg
in
adc
ljmp
xchg
ffreep
xchg
sub
aad
data16
cmpsb
sbb
enter
movsb
jmp
jno
fstpl
movsl
daa
dec
dec
andl
add
mov
sarl
fidivrs
int3
addb
push
hlt
je
pop
add
mov
and
clc
sbb
test
mov
test
xchg
mov
scas
shlb
loop
movl
sub
mov
mov
cmp
push
sbb
sbb
mov
sbb
into
stc
sub
xlat
lods
mov
popf
andb
pop
ss
pop
fildll
jne
imul
dec
adc
lcall
xchg
add
push
push
stos
push
mov
aaa
or
xchg
loope
aam
sub
mov
cs
xchg
dec
jp
cmpsb
xlat
scas
orb
fs
jnp
xlat
pop
push
jmp
insb
cmpsb
cli
or
je
xchg
cmc
sbb
dec
cmp
fistpl
loop
cmp
mov
idivl
add
adc
cld
adc
jg
arpl
movsb
push
incl
mov
sarb
stos
iret
repz
or
cmp
xchg
mov
arpl
scas
dec
dec
dec
lea
les
jne
inc
pop
push
jbe
je
mov
xor
mov
aad
lea
and
jg
jg
or
insb
out
notl
nop
jge
into
or
mov
jo
subl
lods
push
cmp
inc
cmpsl
jp
into
adc
push
fcomps
add
sub
loopne
push
call
call
push
xor
imul
enter
ret
daa
add
sbb
int3
mov
cmp
int3
or
inc
test
dec
cltd
fs
aam
fnstsw
mov
dec
into
push
xchg
lods
pop
loop
mov
inc
adc
mov
insb
pop
pop
push
sbb
sub
es
dec
sahf
mov
pop
and
mov
pop
fimull
dec
and
jle
sub
out
cltd
int
push
in
jl
daa
fldt
lea
nop
ret
outsl
sub
aad
push
sub
shrb
ret
cmp
in
sub
sub
movsb
stc
dec
sbb
out
repnz
rcll
das
out
sbb
inc
pop
pop
adc
lock
adc
sub
push
rolb
xor
mov
test
sub
inc
dec
dec
das
jbe
sub
aam
cmp
or
lock
xor
subb
xchg
mov
fildll
xor
notl
popl
push
mov
sub
sbbl
xchg
dec
daa
mov
popa
mov
and
sahf
aam
ljmp
inc
test
shll
movsl
loope
inc
testb
in
fs
loopne
out
push
iret
and
mov
scas
std
orb
out
cmpsb
sahf
jecxz
mov
es
push
push
das
adc
icebp
pop
lods
add
ficoml
lea
jle
push
jno
out
adc
pop
push
cmpsb
mov
or
jne
mov
push
fcoms
jmp
or
in
fbstp
mov
add
popf
xchg
dec
sub
std
xchg
js
xor
pushf
mov
pop
in
dec
ret
shlb
sbb
xchg
test
jne
les
iret
stc
aad
add
call
mov
mov
lea
jp
lcall
fisttpl
lret
jl
xchg
push
leave
mov
ja
sbb
push
in
adc
jno
fdivrs
or
push
sbb
add
xor
mov
or
mov
pop
adc
and
call
mov
adc
outsb
in
sub
pusha
arpl
insb
jne
stc
jge
cmp
and
xchg
fcomps
test
lods
dec
out
outsb
jecxz
js
out
jg
pop
adc
fldl
xor
push
mov
sub
arpl
push
mov
xor
loope
mov
mov
adc
mov
rclb
test
xor
out
inc
imul
daa
outsb
push
sbb
enter
xor
into
sbb
adc
xchg
or
test
rorl
ss
xor
mov
aas
in
scas
fwait
cli
shl
lock
pop
jbe
push
xchg
mov
mov
fldenv
mov
xchg
decb
test
mov
data16
sbb
mov
mov
out
mov
pop
out
incl
add
mov
adc
mov
aad
dec
les
int3
mov
jo
xchg
or
mov
dec
xchg
sahf
xchg
int3
dec
pop
xchg
lods
mov
in
mov
mov
mov
pop
add
xchg
jbe
sub
lods
dec
or
ds
push
ja
orb
add
lcall
lret
aam
scas
mov
dec
jp
lret
push
jmp
dec
iret
negb
mov
mov
push
pop
pushf
jmp
call
push
pop
int
adc
inc
imul
inc
dec
inc
aas
cmp
xor
pmulhuw
xor
loope
sub
cmpsl
ss
mov
ret
lods
mov
scas
pop
xor
in
das
push
pop
lahf
push
lcall
es
call
push
daa
loope
inc
cwtl
lret
mov
mov
pop
jg
sbb
sahf
pushf
sahf
mov
fs
sahf
aam
cmc
cli
adc
sub
ficoms
mull
mov
pop
xchg
dec
stc
test
leave
in
xlat
push
cmp
sub
out
push
mov
loope
iret
outsl
push
inc
cmp
dec
xor
pushf
cwtl
int
inc
call
push
push
gs
pop
sub
push
adc
outsl
xchg
jle
adc
lcall
stos
pop
lods
lahf
inc
lahf
ds
faddl
in
out
pop
inc
leave
adc
loope
cltd
pop
fwait
jnp
data16
es
dec
sub
jl
cmp
xlat
mov
xor
cmc
gs
loope
inc
jbe
idivb
cmc
or
outsb
xchg
fwait
in
pushf
outsl
mov
pop
cmp
xor
filds
loopne
and
sbb
xchg
ret
or
and
mov
mov
sbb
vmovlps
adc
inc
cmp
cmc
adc
mov
cmc
sbb
bound
lahf
popf
xchg
and
xor
lret
insl
cltd
ret
mov
inc
xchg
les
dec
inc
cs
sbb
in
jne
iret
scas
rol
icebp
insl
cs
loopne
inc
push
fs
dec
imul
ss
je
das
jne
cmp
rcl
inc
xchg
xor
fs
icebp
imul
cmc
and
mov
mov
jno,pt
out
fdivr
mov
leave
ds
int
cmpsb
jnp
and
cld
sti
popf
xchg
dec
xor
out
or
movsl
xor
pop
mov
and
xor
sbbl
lea
das
aam
xchg
adc
adc
mov
jecxz
xlat
es
mov
mov
push
adc
out
mov
xchg
int3
add
mov
in
lret
xchg
test
std
int3
pop
test
fmulp
push
ror
out
jl
mov
push
push
pop
sbb
out
test
fisubl
arpl
adc
imul
sbb
js
out
sahf
push
pop
cltd
sub
cmp
ret
sub
pushf
mov
dec
mov
push
mov
dec
outsb
mov
pop
adc
inc
sarl
xor
int3
cmp
push
insb
and
cmpsb
test
jo
xor
std
test
jnp
mov
inc
jmp
arpl
lea
xchg
cmp
cld
sbb
mov
popa
mov
push
xchg
or
adc
inc
xlat
loope
xlat
mov
rcll
push
cld
add
stos
jg
add
js
cwtl
jnp
push
out
loopne
shrl
mov
cmp
js
xchg
xchg
fsubp
sbb
fcomi
test
es
inc
mov
dec
mov
out
leave
aad
push
mov
or
dec
outsb
mov
cmc
jno
jne
or
enter
repnz
jle
fstpt
subb
fs
xchg
cmp
rorl
jle
aad
jo
pop
sbb
xchg
scas
mov
gs
aam
jecxz
nop
push
cli
push
jae
dec
cld
pop
mov
cmpsl
pop
and
ja
imul
insl
add
lds
fs
mov
add
pushf
test
adc
xchg
adc
daa
negb
daa
test
cld
sti
js
fwait
jns
je
rcll
xchg
cltd
iret
popa
mov
dec
rcrb
xchg
leave
cli
pop
das
lods
and
inc
push
xor
out
mov
loop
mov
or
cmp
xchg
mov
jmp
ja
jno
loope
push
xchg
mov
sti
mov
insb
loope,pt
popa
jecxz
inc
cmp
enter
jo
lahf
adcl
mov
xchg
rclb
sub
inc
add
pop
popa
xchg
cmpsb
loope
and
fistl
notb
jg
inc
das
pop
xchg
adc
test
aas
sub
scas
mov
pusha
lea
cmp
and
push
mov
pop
xor
mov
neg
sub
dec
and
push
loopne
add
gs
dec
pop
xor
test
loopne
xchg
insl
aam
ds
jne
nop
test
loope
sbb
xchg
xchg
cltd
leave
daa
mov
xor
push
xchg
and
out
jg
push
sbb
cld
imul
push
and
sbb
ret
mov
cltd
int3
add
sub
rorl
in
jge
push
mov
pop
je
adc
loop
dec
rcrb
push
sub
int
stos
xchg
fisubl
ds
negb
test
sub
sub
mov
xchg
movsb
ret
call
mov
jbe
xchg
push
adc
fisttpll
fsubs
dec
or
adc
ja
mov
jb
in
xor
bound
lahf
push
imul
jmp
not
jmp
sbb
sbb
sbb
inc
in
andl
cltd
sbb
xchg
aam
addr16
adc
and
lret
cmpb
gs
ja
xor
leave
std
shll
adc
enter
xchg
movsl
jg
mov
sub
jl
dec
jmp
pushf
pop
je
divl
mov
jle
jmp
mov
cmp
stos
shrb
jmp
xor
cmp
dec
jno
sbb
in
inc
adcl
outsl
add
mov
cwtl
jl
push
add
sub
push
incl
nop
imul
cmp
jge
xor
sbb
xchg
mov
sbb
mov
cmpsb
sub
cmp
jge
mov
adc
lock
scas
pop
dec
aam
jo
popf
lcall
adc
push
packuswb
test
mov
xchg
inc
mull
inc
cmpsl
pop
and
sub
jno
push
lret
in
add
aad
test
out
xor
pop
push
add
test
push
pop
scas
rorb
mov
js
imul
int
cmp
int3
in
addr16
pusha
jb
pop
shlb
adc
pop
stos
inc
nop
out
jp
jns
jge
push
jmp
mov
notl
sub
sbb
ret
pop
roll
dec
adc
xchg
ret
xor
sub
subb
sbb
js
mov
mov
das
hlt
mov
popf
repz
ret
jle
mov
mov
cmc
xchg
cmpsl
lahf
pop
fldcw
and
lret
add
idivb
ret
cmp
jmp
rcl
arpl
pop
jge
call
shlb
or
sbbl
add
jno
aaa
push
sbb
and
push
jmp
dec
adc
sub
jge
cltd
mov
add
ret
adc
ljmp
inc
mov
cmp
cmp
inc
push
cmpsb
loope
xchg
mov
les
int
insl
pop
lret
test
push
mov
jl
fnop
pop
repz
in
mov
outsb
ds
fcomps
testb
add
xchg
dec
ffreep
mov
mov
ret
cmpb
pop
cwtl
movsl
aad
ret
xor
sbb
icebp
addr16
add
mov
push
sbb
mov
mov
pop
adc
addb
inc
sbb
aad
stos
pop
imul
mov
call
jg
inc
pop
or
hlt
out
fs
sub
sbb
xchg
nop
push
jae
dec
repz
sub
sarl
loop
xchg
xchg
sarb
sub
pop
rolb
test
inc
pushf
pop
add
shll
mov
loope
sub
int
je
mov
shl
mov
mov
hlt
mov
aaa
loopne
je
lret
or
inc
rorl
daa
mov
icebp
jo
or
mov
xor
cli
xchg
cmpsb
or
movsb
jo
lcall
add
stos
bound
jg
icebp
push
xor
add
mov
and
mov
xor
cld
inc
cmpb
push
dec
pop
shll
out
mov
jb
jbe
cwtl
xchg
repz
test
adc
dec
test
jle
jbe
jnp
shll
lds
push
ss
jg
cmp
mov
cmpsl
mov
xchg
aas
add
out
test
xchg
or
lahf
push
pop
out
movsb
or
push
gs
pop
cld
cmp
sbb
mov
mov
or
jmp
ss
mov
js
jge
push
stos
inc
orl
repnz
fimuls
mov
xchg
mov
sbbl
dec
repz
dec
negl
fldl
shrb
mov
lea
out
mov
in
sarl
inc
test
mov
push
mov
int3
mov
movsl
and
xor
cltd
pop
leave
pop
add
push
loop
jge
fwait
mov
fistps
faddl
dec
ja
pop
jbe
aaa
enter
sub
jb
xchg
sbb
dec
jne
jnp
cmpsl
repnz
sbb
adcb
test
imul
inc
es
shrb
pop
ficoml
mov
push
inc
ret
push
shrl
movsb
popl
pop
movsl
divb
pop
shrb
mov
fdivr
clc
test
sahf
inc
out
insb
dec
fisubrs
std
sahf
sahf
jae
xor
push
cmpl
dec
lock
or
xchg
sub
sub
lock
and
in
inc
sti
ja
decb
es
lret
add
jecxz
xor
ds
pop
xor
mov
jbe
frstor
cmp
imul
in
push
or
cmp
jnp
xor
addr16
pop
sub
adc
cmp
cmp
xchg
je
cmp
jg
push
in
popa
xchg
push
ds
add
lret
lret
movsl
int
dec
mov
iret
ret
in
adc
push
pop
inc
mov
fwait
adc
xchg
mov
in
ret
aas
pop
and
jmp
push
test
in
in
pop
inc
dec
cmpsl
mov
and
mov
push
cmp
aad
shr
pushl
in
aam
sbb
jns
dec
cmc
adcl
aam
fistpl
jg
aad
or
or
push
mov
xor
xor
adc
lret
adc
movsl
pop
dec
movsl
pop
out
aad
and
aas
lods
cli
jg
cmp
jle
and
mov
stos
and
bound
out
jne
jmp
xchg
jb
push
lret
inc
sub
test
mov
mov
test
pop
das
cmp
pop
xlat
and
in
loop
imul
and
push
test
pusha
mov
and
jmp
negb
pop
sbb
adc
repz
inc
xchg
aad
std
push
and
lcall
push
xchg
push
pop
and
sub
ljmp
loop
cmpsb
inc
popf
pop
jp
cwtl
mov
bndstx
imul
cli
mov
add
test
xor
xor
mov
loope
fcmovb
out
repz
hlt
pop
xor
nop
fs
imul
dec
push
push
clc
fistl
pusha
jne
cmpsb
rcrb
jnp
cli
xor
addr16
shll
and
mov
imul
dec
lds
pusha
pop
and
cmp
hlt
cltd
int3
cmpsb
cli
int3
jno
shlb
xchg
xchg
mov
push
aam
loopne
cmp
std
pop
ret
inc
push
jecxz
test
mov
xor
and
mov
leave
cmpsl
mov
outsl
lds
sbb
add
add
pop
adc
cli
stos
pop
sbb
sahf
and
test
add
js
ds
dec
mov
mov
inc
fucomip
in
xor
xlat
jle
ret
inc
lds
sahf
jg
xchg
push
xchg
adc
dec
in
dec
mov
inc
lods
xor
fucomi
lea
inc
rolb
cmp
sbbb
rolb
ret
lods
or
mov
shl
cmp
xchg
aam
test
std
leave
mov
mov
psubusw
dec
ret
fcmovne
sbb
dec
adc
fmull
and
repnz
xlat
mov
sub
nop
pusha
ud0
xor
xchg
push
outsl
jecxz
cmp
xor
stos
lret
add
lss
push
xchg
aas
bound
adc
jbe
bound
das
lahf
pushf
notb
xor
dec
jl
ret
dec
xor
push
jmp
insl
fwait
test
movl
roll
and
insb
out
hlt
adc
add
xor
xchg
mov
and
push
ficoml
mov
cmpsb
mov
push
shl
adc
jbe
fidivrl
int
scas
je
adc
mov
out
adc
adc
dec
js
stos
iret
sub
mov
icebp
push
inc
popa
mov
inc
movsb
inc
je
push
or
adc
or
lods
sbb
test
mov
xchg
inc
push
lret
pop
in
mov
push
ret
sarb
cmpsb
sbb
xchg
push
sbb
jl
push
sub
push
js
sarl
mov
lcall
inc
adc
orb
or
and
adc
or
test
xchg
fs
push
lock
in
cld
or
inc
not
out
mov
sbbb
in
test
mov
mov
jnp
adc
stos
push
push
add
and
pop
into
cmpsl
rolb
shll
mov
rclb
daa
jnp
pop
pop
push
fiaddl
ret
xchg
imul
mov
mov
lret
cmp
ds
mov
lahf
rorb
xchg
arpl
and
dec
mov
inc
mov
js
and
add
mov
dec
dec
test
mov
xor
pushf
cmpsl
push
ljmp
daa
and
fstpl
mov
ret
adc
cld
filds
jmp
xchg
sbb
and
mov
adc
dec
lret
loopne
lret
jo
and
dec
fwait
insl
sbb
mov
mov
aas
fsubrs
call
pop
mov
dec
roll
and
push
je
xor
push
dec
fdivrs
xchg
invd
pop
mov
and
into
mov
jmp
icebp
jns
xchg
add
sub
sbb
add
mov
and
and
repz
setae
and
out
or
shll
imul
imul
fcmovnbe
jmp
mov
cmp
adc
mov
jl
pop
insb
in
xor
idivb
insl
inc
push
xor
inc
adc
loop
jmp
popa
rclb
mov
pusha
xchg
mov
mov
jb
movsl
dec
inc
lcall
fwait
scas
mov
mov
sbb
ret
loopne
lret
lds
pop
fbstp
movsb
lahf
jns
push
jle
cli
cmpsl
cmp
loope
mov
xor
aas
cmp
jge
cltd
sub
mov
sub
out
ret
sbb
shll
fidivl
xchg
push
adc
outsb
fmull
or
pop
xchg
js
pop
cld
loope
mov
fsubrs
aaa
fadd
inc
jge
addr16
pop
out
repnz
sbb
dec
xchg
xchg
sbb
add
push
pop
cmpsl
sbb
sti
inc
sti
idivb
scas
popa
popf
and
mov
loop
clc
mov
mov
repnz
dec
lcall
rcr
movsl
cmpsb
lds
ror
and
or
dec
imulb
stos
sub
push
dec
sbb
insb
mov
push
aam
leave
dec
inc
hlt
pop
jmp
mov
sub
adc
push
sbb
jp
and
push
int3
inc
bound
push
xorl
loope
aam
out
gs
jns
inc
jle
leave
jge
mov
jo
in
rorb
mov
out
and
cmp
dec
cli
test
push
jl
pop
jno
mov
xor
and
fdivs
lret
shld
mov
roll
xchg
dec
cmp
popa
fs
adc
xor
in
jb
popa
imulb
adc
ret
inc
loopne
xor
pusha
inc
ret
dec
pop
inc
xchg
jle
mov
cmpsb
dec
jmp
cli
dec
add
xor
or
insb
lret
xor
mov
ljmp
leave
cmp
lea
sub
push
mov
test
movsl
mov
push
fidivl
stos
cwtl
and
sbb
sbb
push
xchg
or
imulb
inc
je
push
call
lods
jp
and
xchg
ds
jge
dec
sbb
lahf
mov
pop
adc
push
ret
int3
cmp
jbe
test
add
movsl
stos
and
mov
icebp
cltd
mov
mov
jno
xchg
adc
add
loopne
jmp
pop
sbb
push
insb
stos
sbb
xchg
testl
xor
rcr
pop
arpl
sbb
xor
test
sub
fwait
and
mov
or
dec
popf
cmpsb
stc
shll
xchg
daa
pop
mov
lret
cmp
mov
pop
in
popf
xchg
jl
aas
fnstenv
std
aas
aaa
je
movsl
jp
dec
shl
xor
mov
push
nop
loope
mov
push
or
and
xchg
xlat
daa
push
cmpsl
cmp
daa
imul
jp
jns
leave
repz
pop
cmp
nop
pop
sbb
jecxz
pop
dec
int
cli
pop
adc
mov
je
aaa
xor
aam
repz
push
and
xchg
pop
cmpsb
push
sbb
jmp
int
aaa
int3
test
mov
mov
pop
push
popa
fildl
fwait
adc
daa
imul
and
sbb
sti
repnz
xchg
xchg
out
mov
leave
daa
or
inc
outsl
mov
jnp
jno
sub
jno
add
and
mull
pushf
js
lcall
fs
xchg
sti
cmp
cmp
dec
pusha
xlat
insl
fsubl
in
xchg
cwtl
mov
pushf
stc
dec
xchg
fisttps
popf
pop
outsb
mov
and
andb
mov
ljmp
mov
call
repnz
int
adc
popf
adc
ljmp
lret
inc
in
jb
jmp
and
mov
test
scas
gs
jbe
cli
rcr
jns
adc
mov
mov
push
loopne
cmp
sub
jne
hlt
xor
inc
mov
or
lods
imul
lea
repz
jg
pop
push
fstps
sub
add
sub
and
mov
inc
sub
lcall
cmp
mov
or
lcall
or
aam
sti
outsb
stos
arpl
pop
pop
pop
rcr
les
or
in
jp
mov
inc
sbb
js
mov
jle
lds
xchg
and
negb
js
movsl
jg
add
jno
push
lock
rcr
xchg
cmp
ss
pop
fimull
inc
cs
adc
sub
mov
loop
rol
push
loopne
mov
shrb
cltd
daa
mov
push
fcmovu
les
jmp
fldl
test
jnp
and
popa
mov
add
adc
sub
in
inc
std
adc
std
clc
sbb
inc
pop
add
daa
popa
aad
xor
mov
jle
adc
jecxz
xchg
push
mov
jno
mov
pop
add
inc
push
in
cs
mov
icebp
loopne
gs
sub
jmp
mov
sbb
out
sbb
rorb
or
icebp
inc
push
loop
and
lea
loop
clc
add
outsl
sbbb
mov
or
pop
mov
movsb
and
jns
push
cmc
enter
mov
loopne
inc
fcompl
mov
lock
cld
das
push
outsl
arpl
lret
push
pushf
and
fisubrs
cltd
mov
inc
sub
dec
mov
lds
test
pusha
jb
pop
orl
adc
cmpsl
in
mov
xor
mov
aad
adc
inc
cmpsb
cmp
sub
fwait
add
aaa
lock
sbb
push
test
ffreep
outsb
out
repnz
xor
fdivl
iret
pushf
push
dec
cs
inc
cwtl
sbb
in
dec
idivl
mov
pop
xchg
xor
data16
ret
mov
jns
popf
nop
das
leave
ret
adc
ljmp
repnz
push
xor
sbb
mov
cmp
inc
dec
daa
sbb
mov
mov
lods
adc
xchg
pop
mov
dec
and
jmp
dec
aam
adc
mov
xchg
dec
nop
or
stos
sub
push
jno
sbb
stos
or
cltd
cmpl
mov
xor
loope
mov
stos
adc
lret
mov
add
xor
nop
push
shlb
push
into
pop
scas
in
mov
data16
pop
clc
scas
cmpsb
dec
in
outsb
cwtl
or
sub
pop
mov
xor
push
push
loop
jbe
bound
mov
out
pusha
jg
jp
sub
imul
icebp
jl
jp
or
int
nop
jb
fwait
inc
testl
popa
inc
ja
stc
out
cmpsb
out
jno
mov
mov
sbb
push
cmp
inc
das
xchg
call
add
cmpsl
test
mov
lcall
shl
adc
orl
or
xchg
xchg
enter
xchg
je
lods
jnp
test
pop
add
mov
clc
or
cmp
arpl
repz
pop
lret
repz
and
imul
push
xlat
in
and
cltd
pop
jno
mov
arpl
ret
lds
dec
popl
imul
dec
inc
inc
inc
loop
je
jae
mov
inc
aam
shrl
aad
xchg
stc
out
inc
cmp
lret
sbb
push
jne
push
mov
mov
sub
scas
sub
scas
pop
dec
movsb
cs
dec
int3
out
stc
pushf
mov
dec
adc
lock
aad
inc
xchg
fisubrl
repz
mov
call
mov
das
inc
pop
push
push
mov
add
cmpsb
add
lea
loope
xchg
pop
xchg
fnsave
bound
mov
adc
cltd
jge
clc
ss
sti
scas
das
ds
xchg
dec
xlat
mov
loope
xor
push
rcll
aam
in
jb
pop
call
jecxz
std
cmp
adc
scas
jecxz
push
outsl
lods
out
adc
test
es
es
mov
mov
xor
jmp
loopne
imul
push
ret
addr16
dec
roll
inc
and
and
xchg
push
test
xor
out
jle
jg
mov
je
ret
inc
push
add
push
push
xchg
or
dec
sbb
sbb
in
lret
out
stos
pop
mov
jae
xchg
dec
pushf
negl
push
ljmp
sbb
ds
push
lock
jne
mov
test
repnz
xor
sbb
fisttpl
lea
add
movsb
mov
shll
les
xor
or
xor
sahf
inc
pushf
sti
insl
mov
adc
mov
cmpsl
cwtl
inc
test
ss
leave
jnp
cmpb
mov
jo
stos
or
cmpsl
inc
inc
shlb
pop
in
cmp
sti
xor
xchg
pop
stos
rolb
insl
jge
lds
sbb
jg
cmpb
cmp
and
dec
mov
fcoml
and
or
adc
pop
push
arpl
ffreep
xlat
outsb
xor
lods
sub
ja
es
fstl
adc
jge
into
test
ror
ss
jnp
push
and
ret
fisubrs
pop
lock
pushf
scas
xor
jg
push
sti
outsl
sbb
mov
pusha
mov
cs
cmc
aaa
sub
mov
inc
sub
mov
filds
lds
xlat
movsb
jecxz
and
or
mov
je
out
pop
movl
xchg
daa
into
sbb
sbbb
rcll
cmp
fistps
leave
push
mov
mov
movsl
mov
pop
add
xchg
or
dec
jge
fwait
insb
push
cld
pop
fstps
push
sbb
or
lahf
sbb
adcb
xchg
outsl
xchg
pop
adc
fistpll
ficoml
lcall
add
fndisi(8087
push
xchg
outsl
subl
loope
sub
cmp
pop
mov
jae
test
xchg
loopne
jb
sbb
pop
mov
mov
cmpl
icebp
out
mov
cmpsl
stos
scas
mov
inc
jge
addb
or
out
sub
cmpb
jecxz
js
roll
rorb
stos
cmp
sbb
sti
pop
inc
lahf
fucomip
mov
cmp
xchg
daa
faddl
and
pushf
shll
mov
cltd
mov
xor
and
mov
arpl
mov
and
icebp
xor
stos
xchg
cmp
xor
pop
xor
mov
xchg
sbb
out
mov
xchg
inc
dec
dec
cmp
dec
xchg
sbb
dec
or
outsl
cmp
xchg
jnp
mov
in
in
enter
out
jne
int
dec
sub
stos
bound
jle
shlb
jb
movsb
cmp
std
add
dec
into
mov
scas
add
stos
fidivs
ljmp
dec
pop
leave
mov
adc
das
fsubrs
imul
leave
sbb
jno
cmp
and
sbb
loop
inc
pop
sti
push
dec
movsl
dec
pushfw
es
popa
stc
xor
lea
imul
das
test
ds
sub
dec
lret
loop
in
and
cmp
idivb
clc
pop
lea
sbb
bound
fcom
add
lret
or
imul
mov
ret
js
mov
xor
pop
pop
orb
fcom
xor
mov
or
cmc
ss
fiaddl
insl
mov
inc
lods
inc
xchg
stc
mov
jecxz
test
mov
jge
or
jno
lret
xor
lds
scas
dec
push
std
mov
cmpsl
insl
in
and
test
test
jmp
ljmp
cmp
cmpsb
jp
outsb
mov
pop
addr16
repnz
sti
sub
xor
jmp
int3
shlb
sbb
arpl
sbb
cmc
jnp
movsl
imul
int3
mov
cmp
or
xchg
dec
and
mov
movsb
scas
mov
dec
imul
jmp
cld
push
fldl
cmp
aad
ret
loop
xchg
mov
movsb
dec
add
cmp
jge
inc
push
pop
in
push
paddusb
icebp
imul
data16
or
stc
ret
cmpsl
lods
mov
and
jmp
fs
cltd
pop
or
push
ljmp
das
ret
push
insb
ljmp
test
dec
cmp
fdivrs
push
call
adc
adc
or
mov
fs
push
ret
popf
adc
ss
aas
shrb
std
jne
mov
xor
aam
call
and
int
stc
filds
out
clc
icebp
popa
inc
dec
xchg
es
mov
call
fiaddl
sub
mov
out
test
sbb
repnz
pop
pop
in
pop
std
ja
insb
pop
es
add
xchg
add
add
xchg
jne
xor
or
cmpsl
pushf
dec
push
scas
dec
or
pop
jb
fnstcw
fmull
aam
in
out
sub
fsubrp
and
jo
repnz
lods
int
test
iret
fistpl
mov
fsts
bound
lahf
in
xchg
fyl2xp1
mov
outsb
and
ret
sbb
adc
sbbl
xchg
or
stc
lahf
or
stos
neg
pop
sarb
or
mov
cli
mov
and
addr16
push
adc
sub
out
aas
repz
lods
and
jno
inc
add
xor
cmp
sbb
and
pop
jb
insb
movsl
and
cmc
and
aam
insl
iret
xlat
sub
cld
fidivrl
pop
inc
sbb
push
aaa
clc
mov
cltd
repnz
std
xor
jle
imul
dec
fsubrs
push
shlb
push
cwtl
dec
adc
movsb
movsb
cmc
icebp
repz
inc
add
pop
jno
cmp
mov
sub
dec
movsb
ret
addr16
cs
fsubs
test
orl
imul
ss
dec
insb
dec
outsl
push
data16
lds
mov
cmp
and
addb
icebp
notb
lahf
mov
mov
int
jne
xchg
mov
stc
sub
fwait
add
ja
fabs
repnz
xor
fcoml
fistpl
mov
add
push
inc
and
ret
outsb
imul
es
jns
pop
inc
orb
lock
sbb
jo
mov
stc
dec
rep
cmp
and
ljmp
add
out
in
cs
sub
cli
push
inc
mov
ss
enter
pop
hlt
call
jns
mov
idivb
ds
cmp
into
jb,pt
inc
push
movsb
in
xchg
mov
fidivrs
and
ss
push
fisubl
cmp
scas
cmc
mov
cmpsb
mov
jbe
mov
aas
xlat
mov
cmpsl
adc
bound
jl
insl
repz
fucom
cli
leave
xchg
jne
dec
jmp
mov
dec
dec
cli
cld
xor
push
enter
movsl
popf
xchg
sub
pop
mov
je
or
xchg
mov
mov
jle
jae
mov
sbb
hlt
cli
cmp
aad
xchg
pop
sbb
mov
jg
jno
dec
xchg
nop
xchg
push
mov
sub
gs
ret
movsb
icebp
push
lret
sub
jl
push
mov
jp
roll
subb
ss
popa
rcll
xor
insl
or
lahf
sub
rorl
push
imul
dec
mov
sbb
cmc
fdiv
or
lds
pop
sbb
pushf
test
pop
xlat
aam
addl
inc
push
jae
data16
popf
sub
jle
mov
jo
jae
jne
jb
rcl
in
push
xor
adc
or
mov
daa
test
push
testl
in
js
mov
lret
xchg
xor
leave
sbb
vpcmpeqb
fidivs
push
pop
dec
in
fstl
push
inc
shll
sbb
mov
pop
call
mov
cwtl
aam
jne
push
andl
daa
lahf
sahf
outsb
push
dec
sbb
popa
inc
mov
insl
scas
js
ja
push
sub
mov
mov
xor
mov
in
mov
sub
or
cmp
es
ljmp
fnstenv
lcall
scas
cmpsb
fsubrs
sub
cld
cmp
lods
sub
fcoms
ret
adc
pop
inc
sub
repz
pop
es
lcall
adc
and
adc
mov
enter
aas
ficoms
dec
shlb
xchg
sbb
aad
push
mov
mov
mov
push
call
xchg
mov
add
mov
test
imul
imul
das
flds
and
imul
lock
cli
sbb
ss
push
lds
ficoms
frstor
ja
in
imul
cmpsl
mov
adc
mov
mov
outsb
in
ljmp
jp
or
pushf
adcb
jp
adc
nop
out
nop
push
loopne
rorl
push
mov
iret
inc
nop
iret
sbb
pop
andl
push
repnz
or
stos
push
mov
je
mov
das
adc
pushf
xchg
insb
pushf
clc
repnz
mov
hlt
out
xor
movsl
sahf
jle
and
xor
and
inc
jge
jnp
aam
inc
js
xor
cmpsb
cld
sub
andl
adc
push
sbb
cmpsl
xor
sarb
in
lcall
xor
scas
push
mov
adc
mov
add
mov
sti
adc
shlb
rcll
sti
or
scas
jb
arpl
xor
mov
sbb
sbb
sub
ficompl
push
xchg
aam
or
dec
add
push
aaa
rolb
pop
sbb
push
push
test
push
xchg
pop
stos
dec
cmp
adc
clc
fstl
adc
orl
cmp
and
jns
pop
int
test
add
arpl
inc
pop
mov
cmc
xor
pusha
popa
push
adcl
rclb
clc
xor
jl
cli
sub
xlat
and
xor
cmpsb
jae,pn
xor
cmp
sub
push
mov
mov
inc
cmp
arpl
push
mov
lret
pushf
jbe,pn
dec
push
push
cld
xchg
test
dec
pop
cmpsl
gs
das
pop
lds
jb
aad
int3
movsl
int3
arpl
pop
mov
sbb
leave
add
push
mov
inc
cmp
fs
rolb
xchg
jg
scas
mov
sub
xchg
xor
cmp
or
shrb
push
pusha
out
mov
and
pop
fs
ja
bnd
js
iret
loope
aaa
std
fdiv
int3
and
leave
ds
pop
mov
push
aad
xor
and
mov
jne
inc
jb
fmul
aaa
and
xor
mov
mov
cld
scas
icebp
fdiv
sub
and
pop
test
add
push
push
repnz
incb
push
jb
insb
aam
and
or
test
jne
popf
jmp
aam
int3
xlat
cmpsb
addr16
sbb
xchg
dec
rcll
sbbl
psubw
hlt
daa
fdivs
xor
xchg
test
stc
ljmp
push
xchg
or
push
xchg
jb
push
jl
pop
lods
les
fcoms
js
jb
jbe
js
dec
sbb
mov
cmp
sub
jo
lea
shlb
shrb
xchg
mov
pushw
jmp
jne
dec
aam
dec
or
cli
push
pushf
dec
fs
add
jns
loop
mov
cmp
dec
pop
jmp
adc
arpl
cwtl
mov
pop
pop
adc
loope
and
mov
and
cs
cmpsl
test
loop
fildl
adc
mov
jmp
sbb
movsl
cwtl
inc
lret
in
sub
stos
int3
inc
shll
into
inc
sub
mov
xchg
lret
mov
ja
lock
test
sbb
dec
rep
jmp
mov
xor
clc
stc
mov
jmp
pop
dec
or
cmpsl
inc
mov
xlat
or
dec
cmp
sarb
xchg
loopne
jb
insl
aas
mov
cwtl
add
or
and
fdivrl
jl
push
xchg
movsl
push
inc
lea
dec
mov
imul
mov
aad
mov
jnp
fistl
jmp
lods
add
mov
outsb
pop
scas
pop
sbb
mov
inc
jge
mov
pop
mov
lods
xor
popa
cltd
sbb
dec
jnp
xlat
inc
lods
test
fsubr
jns
and
xor
cs
dec
pop
sbb
sub
or
mov
mov
lcall
sbb
arpl
addb
push
jecxz
lods
fstpl
pop
pop
adc
sbb
or
jle
xor
cmp
cmp
mov
inc
les
mov
subl
and
mov
cltd
cld
sub
scas
stos
loopne
xchg
mov
insb
leave
adc
jmp
sbb
mov
stos
push
pop
push
dec
xchg
or
sub
mov
mov
xchg
and
shlb
daa
push
jl
jns
stos
jle
mov
pushf
jecxz
aad
jbe
and
adc
or
sti
les
inc
xor
and
cmpsb
xchg
or
popf
sar
gs
stc
sarb
int
je
jne
and
fisubl
fildl
pop
mov
fdivrs
daa
pusha
inc
and
mov
and
into
pop
jo
imul
mov
mov
jbe
outsl
push
and
rol
mov
mov
imul
pop
sub
rorl
ret
add
jmp
shlb
jp
repnz
jmp
sbb
mov
orb
inc
add
aas
popf
fidivs
xchg
mov
stos
mov
lret
pop
dec
test
xor
stos
sahf
adc
or
and
xchg
add
ljmp
xor
sbb
in
add
aaa
ljmp
clc
je
add
add
repnz
push
sub
je
add
dec
fsubs
call
xlat
movsb
push
lea
lahf
gs
movsl
push
jo
in
aaa
nop
int3
push
insb
or
dec
outsl
xchg
mov
pop
adc
inc
pop
leave
dec
ffree
movsl
jmp
cmp
mov
movsb
movsb
push
rcrl
insl
popf
cmp
je
pop
push
out
jle
les
dec
mov
fwait
xor
aaa
es
stc
stos
into
ss
out
push
xor
sbb
fcomps
mov
jmp
bnd
rorb
mov
push
jmp
fistpl
pop
cmpsb
adc
ljmp
and
inc
movsl
sub
cmpsl
lods
mov
sbb
aas
xor
cld
jno
pop
imul
mov
movsl
xor
push
jnp
push
cmp
aad
fs
iret
jb
outsl
ljmp
iret
and
add
notb
and
in
in
jle
sarl
or
pop
cmp
outsb
cmp
sub
xchg
inc
jno
cwtl
adc
sub
scas
sarb
mov
pop
inc
arpl
gs
mov
push
cmp
lock
scas
cmp
call
mov
dec
cmpsb
inc
pop
adc
inc
push
cld
mov
arpl
inc
int3
sub
in
mov
xor
xchg
jecxz
pop
push
rclb
push
inc
ret
loopne
test
loopne
sar
jo
in
into
sub
push
mov
push
lcall
inc
xor
add
pop
sbbl
enter
mov
jmp
dec
roll
push
subb
sub
pop
jno
jbe
pop
lcall
xor
inc
incl
shrl
push
mov
out
test
dec
sub
in
jnp
adc
ficomps
adc
cmp
cmp
add
or
adc
fwait
add
inc
mov
mov
jnp
dec
cltd
movsb
in
mov
repz
sub
out
push
rol
arpl
dec
adc
lret
adc
ss
push
js
loope
fnstsw
mov
neg
insl
jmp
push
leave
push
in
inc
fidivrs
jg
sti
pop
push
mov
push
mov
cltd
scas
test
mov
data16
add
and
ja
xchg
cmp
aas
push
loop
cmp
push
xor
sub
xchg
in
jae
sbb
ret
scas
add
mov
clc
mov
cmp
out
cmpsb
sub
loop
jg
enter
inc
mov
jmp
scas
push
mov
xchg
into
icebp
call
je
sti
lea
lret
xor
sub
xor
jp
lods
push
fldenv
lahf
push
cmp
cmc
shlb
stc
sbb
cmc
popa
mov
push
cmc
cwtl
push
outsb
cmc
xor
pop
insb
in
mov
mov
fstl
fnstsw
sbb
les
cwtl
fcmovnb
jne
divb
sbb
xchg
sbbl
leave
jmp
cld
ljmp
icebp
push
or
mov
push
and
xchg
hlt
fists
in
add
imul
aam
cs
inc
loope
mov
jo
movsb
sbb
insl
mov
xchg
xor
cli
lock
std
pop
repz
sub
pop
outsl
daa
or
in
cmpsb
dec
fs
ja
aam
push
lcall
jae
in
sub
sbb
stc
jmp
add
xchg
inc
jbe
or
pop
lock
or
mov
mov
xor
mov
xchg
push
push
jb
ret
adc
cli
dec
push
xor
mov
jns
idiv
sbb
inc
xchg
pop
pop
pop
mov
xlat
add
dec
das
out
cs
pop
je
dec
cmp
mov
jo
stc
adc
stos
lahf
sub
jle
adc
add
jne
push
sbb
or
sub
fs
loop
pop
and
mov
scas
mov
les
pushl
out
aam
roll
mov
mov
and
inc
ja
adc
test
mov
xor
mov
sub
popf
fld
insl
shlb
cli
rcll
inc
frstors
ss
inc
mov
jnp
inc
mov
test
xchg
sub
into
and
sbb
mov
insb
cwtl
inc
xlat
stos
lahf
add
mov
iret
jbe
jle
push
fucomp
jg
push
push
lret
bound
push
xchg
pop
dec
cmp
xor
cltd
add
push
xchg
push
mov
popa
div
push
outsl
pusha
jmp
imul
mov
ficoml
iret
xor
jp
xchg
clc
mov
icebp
pop
loop
sbb
lds
and
adc
pop
popa
outsl
pop
test
ret
pop
int3
jb
jmp
xchg
mov
pop
dec
jo
jmp
mov
pop
and
aad
xchg
popa
ret
xchg
pusha
add
out
dec
int
sub
dec
pop
mov
outsl
out
aaa
add
fsubrs
icebp
cli
sub
cmc
lret
mov
xchg
mov
out
adc
sub
mov
xchg
xlat
ret
jg
dec
je
pop
dec
out
cmp
into
jle
aad
add
cmp
xchg
push
sub
xor
shrl
xor
adc
fsubr
and
xor
ss
test
and
outsb
je
loope
je
pop
jl
jl
imul
cli
loope
lret
jnp
inc
flds
pop
dec
push
jno
mov
inc
sub
pusha
and
nop
mov
push
imul
xchg
repz
add
lea
fsubrl
arpl
dec
popf
loop
push
fisttpl
sbb
push
xlat
jb
test
stos
popa
test
ret
pop
sbb
xor
lock
fxtract
iret
mov
xchg
xor
scas
or
xor
pop
sbb
ss
jnp
mov
fwait
movsb
inc
nop
in
movsb
sbb
fwait
jno
mov
dec
cmp
mov
push
out
inc
cmp
mov
xchg
cmpsl
dec
js
lret
inc
jge
xor
stos
pop
mov
out
outsb
sbb
cmp
cmp
cmc
inc
inc
xor
jns
fistl
mov
cltd
movsl
jmp
sahf
fs
repz
sbb
lahf
mov
jmp
mov
jl
push
stos
fiadds
or
insw
insl
jge
pop
xchg
push
fidivrs
sbb
and
pop
xchg
xchg
or
enter
xor
jge
pop
out
aaa
arpl
push
cwtl
addr16
insl
mov
cmp
inc
mov
dec
add
dec
add
setns
ljmp
xchg
popa
jmp
mov
and
aaa
shl
xchg
pop
xor
in
mov
push
call
push
sbb
out
push
dec
pop
mov
shrb
insb
test
mov
out
mov
out
mov
and
cwtl
imul
lcall
pop
clc
test
jae
sbb
cmp
xchg
cld
push
cwtl
or
push
jo
lds
mov
pop
loop
shrb
daa
movsl
add
outsb
sbb
test
pmulhw
je
das
cli
fnstcw
cltd
push
or
call
enter
and
adc
push
cmpsb
shrb
xor
es
je
pushw
sub
cmp
scas
mov
test
imul
addr16
adcb
mov
adc
jg
mov
loope
cmp
aad
cmpsl
enter
mov
cltd
shll
sbb
xor
pop
push
clc
pop
out
or
and
ds
jmp
test
adc
leave
mov
repz
fsubrs
std
cmp
push
mov
mov
push
and
es
ds
andb
jb
xor
sub
sub
mov
mov
pop
sbb
or
cmp
stos
loop
ret
and
lock
popa
pusha
inc
loop
lods
push
mov
dec
xchg
pop
adc
aaa
aam
adc
rorb
push
mov
cmpsb
cmp
xchg
pop
adc
cmc
xor
push
aad
and
lcall
jg
pop
xchg
dec
outsb
sbb
rolb
scas
hlt
in
xor
xor
sarl
outsb
pop
xor
cwtl
adc
hlt
dec
movsb
sahf
shll
cmp
hlt
std
jecxz
icebp
add
adc
stos
in
pop
mov
cmp
add
frndint
lea
sbb
lds
test
cwtl
int
xchg
add
mov
ljmp
lahf
adc
push
stc
je
jp
cltd
mov
inc
rcrb
js
pop
stos
mov
fadds
lds
lock
add
xor
nop
lahf
cmp
in
mov
cld
sub
lret
mov
push
das
mov
sub
pop
movsl
mov
gs
scas
pop
or
sahf
sbb
jmp
mov
or
sub
sti
sti
or
mov
pop
inc
ds
and
or
sub
sub
inc
insb
ficomps
ljmp
lods
xchg
dec
pop
jbe,pt
jb
pusha
xchg
int
pop
pop
mov
push
adc
jmp
mov
push
bound
push
aaa
xchg
mov
inc
ds
jmp
add
test
xor
pop
mov
int
sbb
into
or
ljmpw
jle
mov
dec
mov
push
sbb
mov
or
jge
or
inc
sbb
stc
arpl
or
add
xchg
pop
add
ret
sub
int
pop
xchg
clc
int
jae
loope
in
movsl
cld
cmp
shlb
aas
mov
dec
cmp
push
cmp
lret
mov
ja
ds
out
addb
mov
aad
push
daa
cltd
mov
loop
lods
mov
hlt
scas
jae
inc
aaa
mov
icebp
jns
icebp
ja
stos
mov
mov
test
mov
ror
lds
add
jle
cld
stos
mov
inc
jl
fwait
cwtl
popa
fnstenv
jo
mov
xor
mov
jb
pop
hlt
cmp
imull
xor
leave
test
pop
sub
inc
frstor
push
hlt
mov
in
fsubrs
out
pop
xchg
cmpsb
sbb
fists
repz
dec
pop
xchg
cmp
test
call
and
fs
jp
mov
xchg
pop
jge
insb
push
add
lea
jle
push
cmp
scas
sub
fwait
sub
lahf
insl
xchg
stos
outsb
cmp
loop
lea
sarb
pop
and
lock
push
or
fcomps
mov
mov
pop
jbe
iret
mov
pcmpgtd
aam
inc
sbb
ficoms
push
int3
mov
rcl
push
lret
jmp
cmp
ljmp
test
enter
in
arpl
inc
repz
enter
xlat
in
xor
or
or
xchg
cmp
loope
jmp
lcall
mov
lcall
xor
push
ret
into
cmp
mov
xchg
sbb
loopne
adc
or
ds
push
pop
sub
push
mov
dec
mov
jl
inc
dec
mov
jnp
pop
sub
or
sbb
out
dec
xor
test
sub
cmp
push
and
ret
xchg
lret
mov
rcrb
xor
cmpl
cmc
adc
pop
outsl
iret
sub
jo
cli
sub
adc
mov
stos
call
out
into
aaa
fcmove
outsb
lea
dec
xchg
xor
popa
int3
cmp
shll
es
inc
loopne
mov
inc
mov
ret
mov
xchg
xor
mov
jg
data16
xchg
mov
sub
pop
popa
pushf
mov
jg,pn
ret
std
sbb
fnstsw
add
ds
xchg
dec
mull
jnp
and
pop
jae
mov
bound
jbe
mov
les
rolb
cmp
mov
xchg
test
fst
stos
add
std
add
push
push
fwait
mov
mov
fldcw
jecxz
cli
dec
sbbb
call
fdivrl
arpl
lret
or
add
mov
jae
dec
insb
push
xlat
jb
cli
loopne
xchg
jb
push
push
cmpb
and
stos
xchg
pop
mov
cld
in
dec
push
xor
imul
xchg
xchg
scas
and
lret
sub
lcall
xor
add
mov
xchg
sahf
dec
outsb
lock
sti
gs
aaa
add
cmp
cs
subb
push
or
pop
cmp
enter
imul
gs
call
mov
adc
rcl
push
fisubrl
mov
jp
push
adc
mov
in
push
fwait
push
mov
push
pcmpgtd
shrl
inc
xor
xchg
aad
std
xchg
ret
addr16
xchg
fucomp
inc
mov
sti
mov
mov
cs
or
das
dec
insb
bound
adc
pop
lea
jl
jnp
cmp
inc
adc
loope
push
and
mov
pop
aad
lahf
pop
add
sbb
mov
add
inc
sub
loop
fidivl
push
pop
movsb
fdivs
jge
mov
sub
in
test
ret
or
push
test
mov
mov
dec
mov
mov
fisubs
lret
pop
mov
gs
repnz
fwait
or
movsb
and
fidivs
jge
inc
pop
sbb
mov
lods
add
pop
pop
jno
pop
in
push
lcall
dec
bound
mov
lods
in
repnz
mov
xchg
mov
mov
push
stos
pushf
mov
jg
xor
jmp
inc
pop
enter
addr16
mov
add
jb
aam
loopne
mov
jb
iret
out
push
fnstenv
jno
rcr
out
int
stos
rorl
es
pop
aaa
movq
pop
xor
ret
cs
pop
and
sub
cli
mov
jmp
mov
push
aad
andb
mov
jg
cli
xchg
mov
lock
xor
lret
xchg
addr16
sub
fsub
lods
mov
push
stos
in
mov
test
sbb
inc
or
push
movsb
sbb
xchg
lods
lock
cmpsb
dec
sub
arpl
adc
lods
popa
or
nop
xorl
sbb
xchg
out
loopne
testb
pextrw
adc
test
xchg
xchg
gs
fisubrl
jle
rcll
and
loop
aaa
xor
xchg
add
test
sub
push
add
pop
mov
cmc
mov
and
cltd
rep
clc
xchg
aam
enter
aaa
and
and
cmp
mov
push
imul
mov
pop
mov
and
int3
stos
cmpsb
outsb
hlt
ja
enter
out
inc
enter
pushw
xchg
cwtl
jb
lahf
ret
add
pop
mov
xchg
nop
loop
add
xor
and
in
sbb
mov
cmp
enter
cmpsl
xlat
insl
or
adc
ss
dec
loop
js
jnp
push
jne
aad
std
cld
push
push
sub
mov
push
xor
sbb
jecxz
pop
dec
lret
inc
dec
stos
xchg
jmp
fmuls
hlt
les
add
dec
jp
fldenv
xlat
lock
adc
mov
dec
jecxz
pop
frstor
movsb
mov
or
movsl
adc
xor
or
int
cmp
xchg
lods
sub
stc
enter
jo
notl
gs
repnz
ss
dec
push
loope
mov
bound
int3
adcb
nop
xor
fldl
shll
jle
jle
imul
xchg
leave
inc
dec
xor
jg
aad
idivl
shl
test
xor
ja
adc
mov
out
negl
mov
outsl
cmpsb
jae
pop
push
dec
and
pop
insb
inc
int3
xor
cwtl
push
xlat
out
mov
xchg
mov
mov
ret
cmc
out
adc
loope
test
scas
mov
rcl
jb
and
and
mov
sub
xchg
pop
repz
aas
test
push
cmp
mov
push
dec
sub
ja
test
movsb
mov
inc
mov
inc
mulb
ret
and
dec
mov
loopne
popf
sti
pop
xor
xchg
push
mov
add
movzwl
jmp
sub
stos
xor
repz
add
jae
call
mov
dec
pop
inc
cmp
jb
push
push
popa
adc
inc
addl
lcall
in
xchg
mov
aam
xorl
stos
cmc
in
and
popa
jg
out
xlat
or
cmpb
mov
add
xor
jns
push
sti
pushl
mov
ficompl
xor
clc
push
inc
or
cmp
lods
jle
xchg
fwait
pop
jns
leave
adcl
mov
gs
sbb
stc
xchg
jb
add
loope
cmp
int
mov
cmp
mov
mov
inc
mov
xchg
mov
mov
jbe
clc
aam
movsl
ret
or
inc
xchg
sub
testb
popa
mov
push
jnp
mov
push
lods
sub
jbe
ss
jne
pop
xor
sahf
xor
cs
lea
add
push
jle
cwtl
data16
daa
adc
movsl
rclb
or
push
inc
clc
pusha
fistpl
mov
rclb
in
std
xor
sbb
insb
inc
in
call
bound
outsb
rcl
cli
jecxz
push
in
iret
or
mov
bound
iret
push
das
xchg
shll
mov
and
xor
daa
dec
cmpsl
test
dec
mov
xor
add
adc
pusha
jmp
push
or
add
pop
pop
dec
daa
adc
insl
inc
movsl
les
and
flds
fwait
cmpsb
pop
addr16
ret
mov
adc
pop
xor
sub
in
addr16
jae
fwait
xchg
sbb
jae
add
enter
dec
push
pop
mov
aas
xchg
les
mov
dec
imul
lock
mov
fistpll
xchg
shll
xor
sbb
mov
xor
rcll
scas
in
push
into
sub
decl
leave
mov
mov
lock
inc
test
push
adc
push
jecxz
or
mov
mov
repnz
pop
leave
js
or
frstor
outsl
fwait
je
inc
mov
inc
inc
popa
paddusb
loopne
mov
loopne
jg
jl
mov
loopne
pop
jecxz
das
andb
dec
dec
test
mov
push
clc
mov
cld
lret
pusha
repnz
push
push
xor
dec
push
call
xor
dec
lods
adc
je
pop
les
jne
push
std
mov
cld
cmp
mov
push
dec
inc
cmc
sti
sbb
popa
jns
icebp
shl
inc
negl
orl
testl
push
pop
add
mov
aad
xchg
sub
xlat
mov
ret
dec
or
ja
les
pop
mov
shl
push
addr16
fwait
ss
imul
out
loop
stc
inc
and
dec
enter
adc
sbb
fisubrl
mov
and
fisubrs
in
add
cmp
jle
jns
xchg
addr16
mov
dec
mov
xorl
xlat
adc
mov
pop
add
add
push
cmpb
xchg
mov
add
rcll
rclb
iret
jno
pop
push
stc
or
push
test
lret
dec
push
cwtl
stos
pop
push
nop
insb
add
pusha
add
loopne
mov
sub
movsl
dec
out
in
mov
std
pop
pop
jmp
mov
or
test
aaa
dec
or
in
inc
fsubs
orl
add
aas
sub
sub
mov
add
dec
sarb
ja
int
lods
mov
jp
jecxz
sbb
mov
fwait
outsl
jb
mov
mov
inc
pop
lret
dec
jbe
cmc
sub
jp
sarb
add
test
rclb
pop
push
mov
jmp
push
sbb
stc
aam
mov
xchg
or
mov
dec
ja
mov
cmp
fisubs
pop
test
cmpsb
fistl
dec
cwtl
jl
or
arpl
xchg
xchg
mov
push
lods
and
xchg
add
xchg
clc
jl
push
adc
jmp
test
xchg
daa
inc
ror
loopne
fisttpll
fnstcw
mov
mov
aam
mov
sbb
mov
and
mov
cmp
leave
std
sub
repz
rorl
lock
aad
add
mov
lahf
in
or
inc
mov
nop
hlt
cli
mov
pop
icebp
ficoml
stos
mov
cmp
sbb
mov
jne
in
fcmovb
movsb
aaa
int3
fistl
push
loope
push
ja
xor
dec
mov
outsb
inc
out
xchg
push
out
rcrb
clc
xor
inc
cmp
inc
hlt
push
pop
clc
dec
pop
xor
sub
cltd
fwait
or
repnz
aaa
xor
loope
mov
add
xor
jmp
in
shll
je
stos
enter
xor
sub
ss
inc
scas
mov
jp
push
xor
mov
and
cs
popf
xchg
mov
adc
dec
ja
roll
testl
or
dec
jge
das
fwait
xchg
loopne
inc
mov
data16
ljmp
cli
xchg
mov
ss
or
jae
xchg
test
jmp
cwtl
inc
push
je
mov
test
shll
dec
popl
aad
popf
push
stos
mov
mov
incb
daa
fbld
or
sbb
inc
or
enter
mov
int3
imul
or
aas
xor
add
or
enter
sub
pop
shrb
and
push
pop
adc
sub
daa
push
mov
popa
inc
mov
add
xor
ror
xchg
ret
or
in
sar
icebp
dec
jl
pop
xor
insb
fdivrp
gs
push
popa
mov
cmpsb
and
xlat
test
pop
bnd
packsswb
lds
ficompl
insl
sub
es
push
std
aas
hlt
test
push
push
xchg
lds
xchg
mov
mov
test
fs
mov
test
scas
and
mov
and
dec
sbb
mov
sbb
lret
xchg
and
fstpt
aam
fisttps
pop
adc
jae
pop
stc
fcompl
lods
loopne
lods
mov
pop
mov
roll
test
adc
xor
dec
sti
popa
jge
push
ret
cmp
imul
jns
jmp
ds
adc
pop
mov
lods
inc
mov
mov
adc
mov
dec
clc
xchg
hlt
in
jecxz
rcl
das
cwtl
cltd
fcomps
test
ficompl
enter
int
ret
xchg
jecxz
add
pop
xchg
ja
xchg
movsl
sbb
adc
adc
sbb
xchg
cltd
repz
ss
out
lret
int
repz
negl
dec
jg
flds
call
sbb
push
jb
adcl
mov
cli
bndstx
rorl
inc
and
decl
cli
addr16
xchg
ljmp
addr16
shlb
lds
xorb
int3
mov
adc
pop
sbb
jno
in
testb
xor
mov
jno
sub
dec
mov
out
cltd
pop
or
inc
lods
or
jae
add
jb
dec
push
cmp
pop
cld
ret
pop
cmc
jmp
mov
stc
das
pop
cmpl
out
cs
stos
sub
loop
sub
sahf
and
aas
movsb
pop
rorl
imul
imul
adc
jle
cmp
pop
jns
cmp
dec
sub
lcall
lret
xlat
daa
push
xchg
fstpt
xlat
repz
jno
and
addr16
je
and
lcall
push
in
repz
jb
jl
subl
inc
fstpt
fs
push
or
push
bnd
push
scas
ja
fsubs
test
in
push
xor
jp
call
sbb
xchg
inc
xchg
xchg
mov
sbb
push
mov
mov
add
jne
adc
or
mov
pop
adc
sbb
in
stos
cmp
fidivs
nop
mov
pushf
cs
aaa
arpl
leave
fwait
and
test
and
and
mov
jmp
mov
mov
fnsave
jecxz
jae
inc
adc
mov
shr
dec
or
pusha
push
stc
xchg
or
sti
movsb
push
add
fisubs
pop
cmp
stc
dec
pop
cmp
addr16
stos
cmp
jle
lret
shlb
pop
mov
mov
add
cmp
inc
mov
loopne
xor
cmp
sub
push
lods
or
ret
out
loop
cmp
jecxz
stos
xor
lret
xchg
shlb
mov
sbb
insl
outsb
ret
add
push
xchg
fs
jle
mov
mov
add
jo
cmp
jo
jo
inc
jnp
dec
jo
sub
lahf
into
gs
cmpsl
and
loope
in
nop
inc
jp
add
loop
std
icebp
jmp
outsl
dec
cmp
sub
jo
aad
out
xchg
addr16
push
push
pop
mov
rorl
pushf
mov
or
add
in
push
outsl
jb
jmp
xor
push
fisubrs
or
test
out
inc
notb
stc
jge
fbld
jl
mov
push
xor
dec
or
xchg
hlt
test
icebp
fidivl
jno
jne
ror
addr16
mov
push
cmpsl
in
ret
ret
sub
dec
cmp
aas
dec
les
stos
cltd
lret
sbb
mov
jg
lea
addr16
addr16
nop
or
cli
fisubs
daa
sbb
adc
push
xor
jae
add
aad
jb
xchg
mov
sbb
pop
xor
jbe
sbb
adc
and
fmuls
sub
jo
js
add
cmp
ret
jecxz
add
xchg
in
mov
mov
lods
mov
xor
repz
imul
outsb
loope
cmp
mov
lods
scas
fistps
dec
mov
bound
fistpl
add
out
outsl
inc
xchg
in
lret
sbb
push
popf
mov
dec
mov
mov
cld
xchg
xchg
lahf
mov
clc
mov
lock
mov
inc
mov
jno
pop
fisubrl
cmp
rcrb
lods
fisubrl
lret
jns
pop
rol
lahf
cmpsl
sub
pop
mov
push
pop
dec
sbb
stos
repnz
dec
push
pusha
mov
mov
cltd
popf
adc
mov
icebp
shr
sub
xchg
scas
stos
mov
dec
mov
push
add
scas
mov
pop
xchg
fs
testb
cs
add
adc
aaa
adc
lock
sub
mov
sub
push
xchg
rorb
xor
cli
call
push
sarl
sti
pop
mov
bound
jnp
lds
jle
test
adc
iret
sub
ret
aad
or
pop
inc
and
iret
mov
pop
iret
cwtl
inc
xor
lea
cmp
xchg
shl
rorb
pop
sub
lds
aaa
data16
addr16
push
mov
xorb
dec
fs
imul
sbb
arpl
pop
adc
dec
cmc
out
sub
pop
testl
inc
out
jmp
mov
loope
mulb
mov
dec
add
into
dec
mov
fists
aad
shlb
cli
jp
scas
popa
push
sub
sub
adc
in
jb
xchg
add
jp
fildll
gs
jmp
es
test
lods
add
cli
movsb
loope
mov
ret
fcompl
dec
scas
pop
and
or
add
adc
movsb
movsl
mov
scas
movsb
inc
sbb
dec
mov
ja
jmp
ja
mov
pop
cmpsb
cmpsb
repz
inc
iret
or
jmp
ljmp
daa
add
popf
call
inc
inc
lock
and
ss
inc
xchg
movsb
cltd
adc
inc
fwait
inc
cld
jno
sbb
bndstx
inc
ret
add
out
cli
out
adc
mov
inc
in
aaa
pop
loop
sbb
push
out
sbb
pushl
cwtl
mov
dec
add
shll
lea
mov
pop
out
pop
pop
cmpb
je
sahf
cmp
les
cs
and
xchg
mov
dec
dec
mov
bound
and
shll
xchg
add
sahf
js
dec
sbb
in
iret
bound
sub
dec
mov
dec
mov
push
mov
ss
push
add
dec
mov
aaa
shr
test
clc
je
mov
cs
ret
cli
mov
popa
rcrl
pop
push
or
test
push
es
out
data16
xor
xlat
mov
popa
push
jge
adc
sbbl
jno
xor
cltd
cmp
dec
int
stc
nop
rorb
stos
sbb
sub
inc
jge
mov
pusha
xchg
enter
in
pop
xchg
mov
rorl
loopne
mov
mov
xor
pop
dec
ljmp
pop
push
jnp
movaps
out
xorl
mov
push
outsb
add
jecxz
pop
or
dec
and
push
in
int3
fwait
or
mov
adc
dec
subl
fildll
in
jns
add
jp
fwait
pop
in
icebp
mov
jg
push
xor
push
jo
fiaddl
mov
in
andb
inc
sub
jns
mov
cld
pop
fwait
dec
rorb
or
subl
sbb
jle
out
and
sub
or
adc
cmpsb
xor
fcmovb
out
pop
cmp
adc
push
pop
push
jmp
sub
jmp
push
inc
cmp
jns
pusha
push
outsl
aas
mov
xchg
xor
in
incb
and
mov
mov
jae
jmp
push
rep
lahf
mov
insb
push
pop
mov
cmpsl
push
jp
std
fistpl
call
ss
xchg
jae
int3
shlb
dec
aaa
aas
incl
sahf
adc
mov
scas
cmp
jmp
lock
mov
add
lods
imul
and
pop
or
fstps
and
push
scas
fimull
faddl
test
inc
ds
out
mov
ljmp
sbb
fcoml
test
mov
mov
mov
and
clc
adc
leave
mov
push
mov
mov
push
push
or
push
jns
and
jbe
call
imul
daa
inc
lods
popa
int
loope
pop
mov
das
ror
stos
jb
xor
mov
xor
and
repnz
jp
push
xchg
out
imul
push
popa
aas
xchg
xor
lds
adc
addr16
jl,pt
cmp
js
das
cmp
pop
cmp
loopne
mov
adc
cmp
leave
sub
jl
mov
xor
sbb
jb
mov
ret
mov
ret
and
sbb
scas
roll
ss
pop
jb
and
aas
xor
fwait
mov
cmp
sbb
mov
int
ret
psadbw
in
mov
das
xchg
inc
mov
repnz
pop
stos
or
mov
aaa
push
push
and
hlt
stos
in
xchg
adc
and
and
adc
dec
mov
push
mov
cmpsb
xchg
xchg
cmpsl
push
xchg
subb
fwait
xchg
sbb
addr16
loopne
jne
outsb
mov
push
cli
out
lods
test
xchg
pop
sbb
mov
jo
das
and
adc
pop
les
arpl
sbb
pop
fstl
stos
dec
inc
mov
dec
loop
imulb
push
or
inc
ret
lahf
int
add
mov
and
fldl
inc
or
cmovs
repz
int
sbb
sbb
pop
dec
sarl
stc
loope
loope
sbb
push
jmp
jbe
aaa
push
pop
and
and
add
dec
mov
jecxz
push
inc
mov
lahf
sar
sbb
push
fistpll
push
dec
mov
divl
fbld
push
mov
push
and
outsl
cmp
xor
es
loope
sub
add
insb
lods
andb
jle
in
test
xor
cmp
out
data16
outsl
cli
lea
jg
daa
cmp
push
lahf
sbb
in
and
fstl
in
sarl
insb
add
jecxz
cmpsl
lahf
adc
loope
fxch
in
pop
mov
adc
stc
ds
lret
xchg
out
movsl
fsubp
nop
mov
not
xchg
push
xlat
shll
pop
call
add
push
sbb
je
loope
stos
sbb
mov
cli
sbb
fs
movsl
dec
inc
enter
jge
mov
push
mov
push
outsb
adc
popa
ret
add
cli
cmp
movsb
fnsave
lods
xlat
pusha
test
sub
dec
loopne
cmp
mov
inc
movsl
adc
add
mov
add
xchg
sub
xor
xchg
cmp
lods
loop
jnp
lea
or
lods
ror
sub
cltd
inc
push
imul
dec
sarl
cmpsb
pop
in
mov
in
mov
icebp
push
test
and
repnz
cmc
ja
cmp
push
dec
js
aas
leave
je
movsl
jo
push
mov
movsl
fwait
or
adc
fildl
inc
mov
lret
sub
fisubrs
mov
xchg
call
mov
pop
add
scas
mov
mov
mov
std
adc
movsl
push
xchg
push
add
jl
xchg
push
rcrb
and
ss
xor
dec
pop
sbb
testb
jns
inc
fwait
mul
aaa
jge
mov
xchg
lret
xor
dec
or
jecxz
xor
push
pushf
jb
dec
jmp
adc
sbb
dec
jle
mov
divb
insb
pop
cmpsb
imul
xchg
cli
push
adcb
loop
loopne
push
fisttpll
cmp
stos
xor
mov
negl
movsl
pop
or
cmp
frstor
aad
push
mov
jmp
mov
testl
sbb
xchg
and
in
push
jmp
loopne
dec
pop
lods
cmc
ja
mov
lahf
ljmp
or
mov
ret
or
inc
das
mov
sub
xor
mov
movl
pop
jp
int
ljmp
xchg
cld
pop
cmc
and
mov
pop
xor
jns
ds
push
mov
aas
mov
mov
xor
push
out
dec
jno
dec
dec
popf
or
push
js
mov
cmpsb
and
out
pop
out
out
popf
rol
pop
testb
mov
dec
or
fstl
xor
dec
sbb
mov
loop
ret
mov
out
in
mov
adc
mov
or
je
scas
adc
cmp
lret
mov
repz
jmp
movsl
bound
ret
setae
popf
je
in
or
sahf
int3
inc
lahf
icebp
arpl
ljmp
iret
sub
cli
pop
mov
aad
adc
pop
enter
sbb
mov
jo
pop
and
in
mov
mov
sub
push
cmp
adc
out
enter
mov
pop
fldenv
mov
test
fisttpll
xchg
mov
pop
add
mov
jp
xchg
popa
cli
loope
fs
repz
daa
gs
test
pop
rolb
pop
push
jmp
lods
call
pop
mov
dec
mov
cmc
add
aam
xchg
inc
enter
pand
sbb
stos
push
xchg
les
pop
daa
add
push
das
rclb
adc
adc
movsl
cmp
xchg
loop
hlt
andb
push
push
ss
xchg
mov
clc
ficoms
inc
mov
jmp
mov
pop
add
call
adc
fimuls
ror
jae
sti
in
nop
lret
ss
add
bound
or
pop
out
mulb
xor
and
cmp
fcomp
push
push
clc
aam
fwait
scas
mov
or
pop
mull
xlat
mov
jmp
jecxz
pop
jnp
sarl
hlt
adc
icebp
cmp
clc
add
jnp
mov
cmpb
test
jmp
cmp
aaa
dec
out
dec
fwait
stc
lret
mov
mov
mov
stc
outsl
xchg
lods
jmp
cmp
nop
push
mov
in
pop
push
loope
out
cmp
adc
pop
fldenv
fistpl
jae
mov
pop
xor
jle
sbb
push
ret
loop
add
arpl
mov
sbb
icebp
lahf
das
ja
xchg
mov
sbb
inc
adc
xchg
fisubrs
mov
dec
add
addb
lahf
stc
insb
stos
loope
lds
push
lods
cmp
je
sub
ljmp
cmp
cmp
icebp
sub
dec
mov
jo
popa
rorb
xchg
rcr
adc
mov
adc
push
imulb
vsqrtss
loopne
jne
cs
xor
aas
es
stos
inc
add
mov
xor
pop
test
fcmovnu
cmpsl
pop
inc
ret
in
hlt
mov
in
pop
lret
imul
icebp
arpl
xor
xor
out
jnp
movsl
and
jl
mov
xchg
sahf
lock
cmc
insb
orb
cmc
jno
mov
sbb
xor
clc
jo
cmpsb
mov
mov
cs
out
adc
insb
mov
cmp
jo
dec
mov
cmp
jge
jecxz
cmc
cli
fadds
cmp
cmp
xchg
out
ljmp
jo
jmp
popa
pop
xchg
pop
jbe
lsl
fwait
xorb
xor
jns
out
xor
inc
in
mov
add
enter
leave
cmp
scas
and
xor
mov
ss
leave
rcrl
mov
or
hlt
cs
push
lods
mov
sub
stos
or
sarb
pop
jne
fldl
sbb
lea
jg
pop
rolb
addl
stos
xchg
test
bound
jbe
adc
inc
xor
in
sub
out
xchg
jmp
and
cmc
and
adc
mov
push
mov
jmp
mov
iret
loop
add
aad
mov
push
in
cwtl
ret
stos
leave
push
and
clc
jo
lods
rclb
iret
das
or
adc
add
cmp
or
ss
repz
dec
dec
xchg
call
insl
jne
jle
es
jns
mov
dec
inc
daa
fisubrs
imul
mov
pop
mov
ret
jmp
jne
push
mov
adc
adc
ja
mov
rolb
push
adc
mov
and
push
sub
pop
mov
push
add
xor
sub
lea
dec
mov
jbe
mov
cmp
imul
dec
push
outsl
fyl2x
mov
and
movsl
xchg
mov
inc
lea
fsts
enter
ds
push
adc
push
pop
mov
sbb
loope
popf
or
les
fisttps
rcrl
ds
jecxz
stc
ret
dec
xor
mov
icebp
jg
adc
loopne
add
xchg
test
xor
add
stos
push
mov
dec
sub
stc
mov
mov
push
xor
xor
sub
jb
sarb
mov
adc
mov
pop
jbe
push
push
mov
shlb
imul
lods
scas
push
or
push
insb
iret
cmpsl
rclb
xor
dec
push
jns
loope
xchg
cltd
popf
and
or
out
fbstp
push
sub
pop
cmpsb
andl
addl
call
loop
aad
fs
cmpsl
ss
xchg
imul
push
test
test
aad
or
xchg
mov
xchg
leave
mov
sub
add
sahf
sub
xor
cli
div
xchg
dec
add
jne
dec
mov
push
and
cmc
xor
mov
ret
arpl
jno
xchg
sbb
in
push
push
sahf
mov
fsubs
shrl
cltd
mov
mov
mov
xchg
or
lret
mov
aas
ret
fldcw
test
out
pusha
jp
faddl
lcall
ret
out
xorl
xor
jecxz
lods
fisubs
mov
sti
mov
push
jne
xchg
and
fisttps
xchg
aas
mov
sub
mov
jae
inc
sub
xchg
stos
lcall
xor
cwtl
cmovl
sbb
cmc
cmp
movsb
dec
jne
adc
pop
mov
adc
iret
mov
and
stc
sub
xor
inc
xchg
loope
loopne
lcall
mov
or
insl
add
stos
xlat
mov
loope
mov
decb
sub
jmp
repz
shll
fisttps
cmp
cmp
incb
lcall
mov
pop
mov
add
test
mov
and
movsb
inc
mov
inc
cmp
cld
lahf
daa
sbb
out
outsb
adc
add
inc
idivb
push
insb
stc
lahf
jo
jg
dec
sbb
and
cs
xchg
ja
pop
mov
jmp
repz
sarb
push
inc
fstl
and
pop
sbb
jb
iret
sub
lret
ds
xchg
mov
lock
sub
mov
cmp
ds
pop
dec
repz
push
cli
shl
in
pop
in
add
pop
add
xchg
cmp
dec
lret
dec
popf
aam
pop
cs
xchg
outsb
scas
fildll
push
lret
xor
mov
ss
pop
push
arpl
xchg
mov
das
or
leave
add
push
adcl
and
dec
ja
sbb
leave
rclb
and
dec
sub
loopne
inc
into
repnz
mov
push
mov
sub
mov
ret
lret
addr16
test
sbb
xor
adc
stos
cmp
jno
insl
push
rclb
int3
lods
les
push
and
adc
jne
sub
pusha
jno
mov
push
mov
or
jp
mov
das
mov
jle
lods
pop
sub
and
mov
in
sti
xor
inc
push
mov
imul
rcr
cmp
inc
mov
daa
jmp
mov
dec
int
sarb
sub
test
ljmp
adc
mov
adc
aaa
dec
xor
lods
in
push
sub
xor
nop
sub
dec
incl
jno
inc
outsl
cli
test
cltd
push
call
jge
push
inc
mov
inc
or
int3
ret
out
cmp
test
inc
jge
pop
mov
mov
xchg
pop
or
or
rcll
jmp
les
mov
sub
or
iret
leave
iret
ja
lds
adc
in
ss
xlat
in
mov
fcompl
pop
into
xchg
xor
aaa
cltd
push
aas
jne
jl
je
xchg
push
mov
ss
mov
adc
push
into
dec
dec
ret
pop
push
inc
rcr
mov
and
jo
pop
push
xchg
xor
aas
xchg
mov
ror
repz
push
xor
pop
repnz
mov
dec
pop
scas
cmpl
nop
arpl
dec
imul
sarl
mov
lods
cmc
mov
into
ret
mov
pusha
add
imulb
clc
jno
fdivrs
adc
mov
sub
xchg
and
rol
jge
xchg
mov
cmpsl
iret
mov
es
in
outsb
mov
jo
mov
dec
es
mov
rcrb
push
inc
push
jno
cltd
dec
dec
les
push
pop
mov
add
mov
push
pushf
dec
jmp
xchg
dec
out
into
xchg
sub
sbb
xchg
test
add
lea
push
insb
mov
push
mov
pop
mov
jae
push
xor
sub
jg
lret
fbstp
in
mov
shll
test
dec
jp
ss
ljmp
cmp
xor
aad
test
mov
mov
push
lahf
cltd
test
jmp
sbb
movsb
jl
xor
and
jp
dec
setns
daa
loopne
jbe
mov
popa
rclb
pop
pop
xor
mov
pop
out
or
pushf
sbb
in
sbb
iret
mov
mov
cmpsl
xor
out
clc
push
in
fcom
lcall
repnz
enter
jecxz
daa
nop
jg
dec
imul
xchg
cmp
adc
cmp
not
movsb
stc
mov
mov
pop
pop
adc
das
lods
mov
dec
adc
xchg
dec
mov
in
push
xchg
xor
dec
icebp
scas
cmpsb
sbb
pop
cwtl
test
outsl
fiaddl
xor
add
fiaddl
lock
dec
xor
mov
mov
mov
push
insb
cmc
leave
pop
sbb
and
leave
lahf
jns
add
in
push
bound
js
xor
loopne
js
mov
data16
jge
nop
in
xor
xchg
pop
clc
inc
loope
jne
dec
xchg
rorl
adc
or
in
lods
js
jge
cs
lock
fsubs
xchg
fwait
adc
or
fcoml
insb
ljmp
xchg
in
push
test
dec
xchg
adc
insl
jbe
push
lahf
out
mov
stc
rcr
stos
add
inc
les
pop
jae
pop
adc
mov
incl
mov
mov
scas
mov
and
sar
mov
jg
sub
in
xchg
popf
aas
fnstenv
cmpsl
and
lods
mov
jp
bound
stos
adc
mov
orl
and
xor
and
push
inc
mov
sub
shrl
aam
inc
or
mov
andb
cmpsb
cli
dec
add
adc
xchg
dec
dec
scas
or
mov
gs
or
adc
pushf
dec
in
test
dec
into
jno
add
sbb
jbe
jae
test
mov
out
sahf
pop
mov
stos
push
push
fists
and
clc
iret
cmpsb
and
rcl
jns
iret
inc
dec
or
fwait
add
mov
jmp
or
mov
and
cmp
andb
and
mov
jne
push
fldt
dec
push
addr16
lods
ss
pop
xchg
push
addr16
mov
lock
and
call
fidivrs
xchg
adc
xor
pop
out
push
jns
pop
lret
mov
dec
cmp
repnz
mov
mov
push
push
push
ficoms
test
sbb
pushf
in
leave
jp
jno
or
mov
push
xor
arpl
xor
adc
mov
vpavgw
test
mov
arpl
cmp
imul
fcoml
xlat
inc
inc
push
negl
addl
sub
popa
cmp
repz
inc
adc
xchg
cltd
xchg
cmp
or
mov
lret
out
std
shl
pop
dec
sub
sub
lret
xchg
call
icebp
sahf
pop
pusha
fistpll
in
adc
mov
cmp
lahf
jp
jg
pop
xor
repnz
xor
push
or
sbb
lahf
pop
pop
adcb
mov
dec
xchg
call
es
aaa
cs
sub
jae
stos
mov
decb
enter
jg
enter
mov
sbb
push
ret
pop
sar
cmp
in
arpl
jb
pop
rorl
adc
lea
pop
pop
fsubr
cmp
mov
loop
ss
pop
pop
pushf
icebp
in
jg
xchg
fwait
ret
dec
dec
mov
divb
clc
enter
int
cli
cmc
faddl
push
pop
in
xchg
mov
bound
or
push
lds
jb
sbb
jp
adc
lahf
pop
lret
xor
sub
dec
and
ds
and
movb
mov
xor
jae
mov
dec
mov
pop
cld
mov
dec
sbb
inc
inc
fidivrl
je
call
jo
loope
xchg
dec
sbb
cmpsl
jne
sbb
pop
inc
cli
and
cwtl
sbb
push
cmp
jne
dec
lds
or
or
mov
mov
or
fistl
xchg
sbb
dec
push
sub
or
cmp
pop
cmpsl
pop
xor
jb
test
pop
mov
in
in
je
add
add
inc
jg
test
jmp
inc
cmpsb
xchg
subl
inc
int3
add
add
in
mov
push
daa
sbb
xor
imul
mov
popa
fnstsw
mov
dec
lock
dec
sbbb
repz
mov
and
sbb
mov
pushf
je
and
lods
cld
shr
fnsave
xlat
xor
inc
adc
adc
jl
arpl
push
dec
frstor
jo
push
xchg
loope
xor
or
sbb
enter
jns
insl
xor
dec
push
xchg
aam
scas
push
add
adc
xchg
pop
cld
sarl
or
cmp
cmp
or
aad
int3
sub
cmp
inc
xchg
divl
mov
insb
js
mov
sbb
pop
mov
les
dec
sub
sti
add
and
inc
sbb
xor
mov
nop
lret
pop
fmull
lds
mov
xor
push
mov
loope
ja
dec
negb
int
and
xchg
rcll
nop
jl
and
adc
jp
icebp
pop
add
sub
outsl
in
inc
dec
jmp
iret
movsl
int
push
sbb
lods
fdivrl
sub
cmp
loop
or
mov
mov
sub
jle
filds
cmc
les
gs
out
stc
pop
test
sub
lar
sbb
shrl
into
fsubr
subb
inc
into
std
push
popa
imul
mov
out
nop
jnp
inc
jp
pop
int3
xchg
daa
lcall
xor
imul
dec
int
shrl
int
aas
jg
je
mov
mov
lods
push
adc
mov
mov
pop
add
push
mov
movsb
xchg
push
iret
ja
fsub
xchg
jge
and
in
xor
mov
mov
mov
sarl
mov
xchg
jp
lods
jns
pop
mov
insb
pop
or
es
or
js
adc
dec
out
inc
mov
loop
popa
cs
pop
outsb
call
inc
xor
rcr
or
jbe
cmp
and
adc
sbb
sbb
fisttpl
ret
push
bound
js
cwtl
ss
shll
inc
fstps
adc
int3
sub
movsl
fidivs
hlt
sub
push
xor
jecxz
cmp
loope
inc
xor
mov
xor
js
push
test
mov
cltd
xchg
sbb
test
xor
sbb
xchg
xor
ljmp
outsb
ja
pop
scas
into
mov
add
lock
std
aam
pop
adc
ds
int
adc
fwait
test
pushf
adc
js
pop
adcb
aaa
aad
adc
popf
mull
aaa
mov
enter
js
lods
cmp
arpl
dec
add
pop
or
jg
mov
add
xchg
xchg
arpl
test
jmp
negl
mov
mov
movl
sub
pop
stos
jecxz
rolb
xrelease
ljmp
mov
ljmp
repz
enter
fwait
rcll
aam
les
popf
mov
push
sahf
mov
cmc
daa
cmp
xlat
mov
push
shlb
lods
push
leave
pop
mov
xor
jbe
adcl
sbb
jmp
pop
pop
dec
repnz
in
push
dec
bound
hlt
movsl
cmp
cmpsl
mov
pushf
iret
out
das
add
out
dec
out
push
mov
or
mov
subl
imul
testb
aad
dec
jae
pop
js
pop
ja
xchg
or
and
sbb
test
cli
cmp
jae
jb
lock
inc
push
out
pop
sarb
aas
add
rcrb
cwtl
jbe
aas
ficoml
aad
mov
stc
mov
call
cmp
pop
int
pop
repnz
lret
pop
pop
mov
xchg
pop
mov
popf
icebp
xor
movsl
sub
jp
xchg
daa
mov
ljmp
fcomp
mov
mov
loope
sub
jne
dec
xchg
jge
scas
or
imul
rcrl
add
aad
ret
cwtl
sbb
mov
xor
adc
daa
inc
cmpsl
xor
frstor
daa
inc
push
dec
addr16
jl
push
push
movsl
and
out
jmp
mov
mov
sub
mov
popa
movsl
sub
roll
cmc
inc
push
repnz
addb
adc
add
mov
push
xchg
inc
xchg
sahf
cli
inc
icebp
sahf
and
je,pn
inc
cmp
fcmove
sub
add
push
imul
push
pop
test
arpl
add
inc
inc
dec
xchg
inc
pusha
lods
les
jae
test
mov
rcl
adc
mov
mov
fdivrl
ret
fdivl
push
mov
mov
arpl
subb
sarb
xchg
dec
cmp
pop
sbb
repz
pop
sub
enter
nop
and
cltd
push
ss
push
dec
xchg
jb
mov
pop
mov
inc
xor
shr
data16
dec
mov
out
fldt
stos
pop
test
and
nop
lcall
imul
dec
push
mov
lcall
mov
lods
adc
lods
jmp
pop
jb
popf
and
ret
dec
stos
aaa
sub
jecxz
out
lds
push
push
icebp
xchg
sahf
ret
pop
mov
push
sub
jg
mov
imul
push
sbb
mov
aam
xchg
jle
lret
test
inc
pop
add
mov
sahf
dec
xor
mov
out
push
adc
inc
dec
int
shll
jmp
cli
sub
ret
cmp
hlt
xlat
repnz
jp
dec
inc
fmuls
cli
jno
aad
stc
cld
jbe
ret
mov
frstor
and
adc
jns
repnz
aaa
pop
int
mov
in
mov
mov
xchg
repz
inc
rcl
cmp
jg
inc
lods
movsl
mov
mov
sti
lret
bound
lock
and
movl
out
or
cli
test
and
jecxz
repnz
mov
fcomi
repz
int3
push
mov
fucomi
dec
pop
jmp
mov
repz
xchg
test
rcrb
lcall
fmul
lods
jp
out
movsb
dec
dec
cltd
out
aaa
sub
add
call
mov
inc
mov
out
out
mov
js
inc
cmpsb
stos
mov
mov
pinsrw
pop
in
negb
incb
std
into
repz
mov
es
outsb
nop
push
mov
lret
int3
arpl
sub
adc
push
orb
push
stos
mov
mov
sbb
jnp
mov
jno
push
movsb
enter
or
jb
jmp
jmp
pop
jo
pop
dec
dec
dec
xor
lods
xlat
mov
mov
push
fcomps
fcoms
pop
sahf
mov
cmpsl
dec
add
bound
mov
inc
sub
cld
outsl
test
loope
or
cs
jp
or
mov
adc
aas
mov
out
sbb
scas
insb
loopne
cmp
ljmp
into
loopne
fadd
xor
mov
sbb
cmp
or
xor
frstor
pop
mov
cmp
cwtl
dec
mov
ficompl
dec
sub
mov
xchg
dec
int3
gs
idivb
cmp
iret
adc
shrb
lock
stos
push
push
pushl
sbbb
dec
lods
in
addb
out
cmpsl
in
aaa
in
mov
jae
lret
ret
push
jmp
sub
sbb
push
inc
ds
jl
and
xchg
int
movsb
xor
movsb
lcall
cwtl
inc
inc
insb
jno
cwtl
imul
icebp
mov
mov
iret
cmp
cli
loop
fstpl
scas
adc
inc
out
ljmp
shrb
cmp
int3
sub
jmp
pop
xchg
sub
cmc
adc
or
cmpsl
push
mov
ror
xor
pop
movsl
jnp
mov
push
pop
jg
mov
and
iret
or
mov
movsb
xchg
mov
mov
xchg
push
imul
pushl
jnp
xchg
cmp
movsl
mov
in
xchg
les
cmc
pop
aad
push
sti
rcrl
mov
bound
ss
repnz
test
push
jne
jp
in
xor
xchg
shrb
pusha
fcmovbe
sub
jle
lret
sbb
adc
push
mov
nop
and
pop
sbb
pop
ds
test
jbe
xchg
mov
int
sbbb
pop
dec
pop
xchg
mov
lahf
jbe
lret
or
frstpm(287
cmpsb
ret
lods
mov
mov
mov
in
push
add
iret
or
jle
out
sti
jno
jmp
adc
mov
mov
adc
fcomip
inc
sti
sbb
sbb
add
rorb
ljmp
clc
inc
lret
and
jo,pt
es
test
jl
lret
add
push
push
jo
rorb
ret
inc
push
and
mov
stos
ljmp
loopne
xorb
movsl
cmp
ret
mov
icebp
jl
xchg
andl
push
or
xor
adc
in
lods
sub
sahf
and
aas
jne
dec
add
in
adc
xor
push
jo
in
mov
daa
push
fcmovbe
ret
lods
sbb
cmp
jae
nop
jle
push
loope
btrl
push
xor
cmp
mov
push
xchg
push
or
call
in
push
pusha
cld
decb
sbb
lea
sarl
inc
daa
mov
outsl
jne
sbb
das
adc
adc
xchg
add
pop
jmp
jns
sub
inc
lret
ja
mov
push
xor
push
xor
cmp
ret
xchg
mov
mov
cmp
or
and
mov
xchg
sub
popf
cmp
add
leave
ret
hlt
push
and
mov
sar
push
out
and
imul
inc
sub
hlt
sub
inc
sub
dec
add
and
imul
push
jae
jae
push
loope
sub
ret
ret
mov
sub
adc
adc
lret
xchg
mov
sub
aas
pop
mov
movsl
iret
cmp
test
mov
add
popf
out
mov
sub
mov
xchg
jle
addr16
or
aam
sub
add
pop
adc
mov
mov
dec
popa
aas
sti
test
scas
xor
push
lds
fisttpl
jl
call
stos
call
sub
dec
sbb
int3
cltd
jle
ret
sahf
movsb
mov
insl
fs
and
and
loopne
into
cmp
or
dec
xchg
mov
cmc
incb
data16
lea
out
cli
push
sbb
test
test
fs
rep
aas
jge
ja
inc
andl
scas
mov
addl
pop
arpl
out
add
and
imul
rcll
push
std
push
sub
sbb
out
in
sbb
nop
or
mov
dec
mov
push
or
sub
sbb
inc
das
ljmp
push
cli
xor
sub
dec
das
cwtl
lret
ja
aaa
xchg
lea
repnz
add
mov
sbb
pop
inc
rcrb
mov
push
incl
mov
mov
mov
inc
xchg
adc
imul
mov
xchg
lahf
xchg
pushf
hlt
std
cmp
fidivrs
pop
sbb
sbb
shll
div
sbb
jne
sbb
jle
leave
std
outsl
or
and
neg
mov
inc
cmp
test
sbb
or
sbb
sbb
lcall
cmc
adcb
mov
or
jb
insl
and
in
xor
inc
and
lret
and
insl
dec
arpl
and
mov
stos
repnz
cltd
push
rorl
je
fmuls
stos
pusha
outsl
mov
xor
clc
mov
dec
push
push
pop
jge
mov
cmp
cli
into
inc
shl
shr
std
inc
mov
loope
lret
push
jae
mov
xor
or
mov
icebp
cmpsb
pop
mov
mov
cs
push
lock
xchg
mov
loop
lret
mov
pop
mov
or
orb
xor
gs
xchg
lds
cmpsl
out
outsb
mov
ficomps
fucomp
xlat
arpl
andl
pop
nop
jg
add
jg
and
out
jecxz
mov
icebp
int
push
pop
and
sbb
mov
push
cwtl
fisttpl
mov
and
dec
pop
lock
imul
iret
stos
sub
dec
cmpsl
pop
xchg
repnz
pop
push
push
stos
js
fistps
push
andb
orl
cmp
and
lret
dec
mov
push
bound
pop
xchg
and
das
out
add
in
xor
mov
cmpsb
jmp
push
mov
mov
mov
mov
push
mov
cli
mov
cld
sbb
cld
lret
cmp
loope
add
cmp
test
inc
roll
mov
insl
sub
loop
cmp
cltd
outsb
jbe
xor
out
test
imul
insb
mov
jo
imul
and
push
sub
pop
mov
add
xchg
sbb
inc
dec
stc
pop
jecxz
mov
jns
xchg
lret
jne
je
fadd
andb
aaa
iret
scas
and
xchg
jg
aad
and
xchg
leave
loopne
filds
cmpsl
lahf
data16
sub
nop
mov
xor
rol
imul
push
out
cmpb
mov
icebp
adcl
and
orl
lret
xchg
jle
jl
lret
sub
adc
and
and
rorl
cmp
mov
inc
dec
test
icebp
ret
xchg
pop
mov
cmp
stos
out
iret
push
mov
xchg
fidivrl
ret
push
mov
repnz
mov
into
mov
outsl
or
lret
xor
dec
cld
stos
push
adc
xor
lahf
mov
xchg
stos
jae
fsubl
movsl
push
cmc
icebp
pop
xchg
mov
pop
and
cmp
mov
mov
mov
xor
mov
mov
fwait
xor
jae
out
int3
mov
jno
sub
mov
pop
roll
cmc
data16
mov
sbb
popf
outsb
xor
mov
in
out
insb
pop
cmp
js
xstore-rng
cmpsl
inc
sahf
mov
jns
jge
jle
loopne
cmc
jl
fisubs
and
jbe
adc
cmp
call
dec
sbb
pop
xchg
jmp
xchg
sbb
sbb
jbe
inc
bound
lret
push
sahf
sbb
clc
icebp
in
jmp
arpl
push
mov
cmpl
jno
lcall
xchg
ret
mov
inc
int3
test
cmp
lods
ja
fcomi
sbb
shr
mov
sub
test
xorl
dec
cmp
push
fs
mov
inc
push
push
adc
mov
jmp
xchg
loopne
fistpll
aas
test
or
cmp
int3
out
int3
bound
mov
leave
repnz
mov
loopne
repz
out
sub
aad
fsubrp
decb
xorl
mov
mov
jp
pushf
daa
lock
mov
jbe
imul
out
cmc
lret
jbe
jno
sub
outsb
aaa
fcomps
adc
xchg
adc
mov
inc
or
clc
pop
enter
ljmp
fdiv
adcb
ja
test
cs
clc
aam
cld
or
dec
mov
shr
fucomip
push
mov
inc
out
iret
mov
push
inc
xor
mull
icebp
mov
arpl
inc
js
test
pop
sti
xchg
js
pusha
push
aad
lcall
out
xor
inc
sub
adc
mov
iret
out
mov
imul
pop
bnd
loopne
shlb
add
sbb
enter
insl
mov
lods
lret
arpl
aad
pop
sti
or
incb
or
scas
lods
insl
clc
icebp
mov
or
push
andb
push
lods
adc
test
mov
sub
pop
lea
xchg
bound
xchg
sub
test
movsb
sahf
xor
jbe
sahf
push
adc
pop
inc
prefetchw
or
xor
or
dec
fs
push
aad
add
dec
mov
in
adc
xchg
adc
push
xor
out
xor
fldcw
mov
add
or
ror
sub
insb
jbe
mov
pop
pop
pop
mov
mov
icebp
movsb
sarb
xchg
mov
and
xor
testl
jbe
adcb
cmp
dec
adc
add
js
push
imul
nop
std
xor
dec
adc
xor
test
sub
add
jle
stc
arpl
data16
out
cmp
fwait
sbb
dec
sbb
stc
push
adc
or
mov
fnstsw
jno
inc
aad
and
fmulp
iret
mov
js
sahf
ret
and
test
jns
cmpsl
popf
imull
sbb
push
mov
add
leave
insb
mov
xor
push
bswap
dec
out
or
mov
push
sahf
lods
sbb
cmp
add
inc
lret
add
ljmp
sbb
and
in
sbb
pop
orl
nop
filds
pop
push
jmp
mov
repnz
cmpsb
push
out
mov
xchg
inc
mov
sub
movsl
xor
fisubl
call
fnstenv
negl
orb
pop
xchg
adc
push
or
addb
inc
stc
data16
pop
adc
test
sti
mov
mov
xor
mov
xchg
addr16
daa
or
pop
mov
stos
sbb
icebp
enter
in
test
jb
repnz
neg
cmp
stc
out
icebp
mov
xlat
aas
mull
arpl
pusha
sub
pusha
and
iret
gs
or
fidivrs
scas
sub
mov
dec
adc
clc
and
sahf
inc
inc
adcb
mov
push
movsb
mov
pop
push
push
push
shlb
add
cltd
xchg
mov
jmp
mov
loopne
pusha
movsb
push
pop
das
aaa
es
xchg
inc
shrb
in
cmp
ja
fistps
pop
and
mov
mov
bound
test
psubusw
xchg
ss
cmpsl
sti
sbb
and
cli
and
scas
iret
fistpll
cmpsb
adc
inc
cmp
aam
jns
push
jnp
xor
adc
inc
sub
ret
mov
or
imul
dec
dec
mov
cmpsb
cltd
xchg
mov
lods
pop
sub
inc
outsb
jg
lret
pop
insb
inc
and
fstp
sbb
xchg
rcrb
and
and
aaa
out
xchg
cwtl
adc
mov
fnstcw
mov
and
xor
bound
push
stos
xor
pusha
nop
sub
push
arpl
fwait
jge
cmp
repnz
push
je
pop
in
sti
cmp
cwtl
mov
cmpb
jl
das
in
push
das
daa
js
push
icebp
mov
gs
adc
repnz
in
pushf
pop
icebp
xchg
push
push
int3
mov
mov
es
frstor
mov
xchg
ljmp
leave
xor
out
int
push
out
jmp
scas
jmp
adc
mov
out
inc
pop
popf
mov
adc
cmp
jp
cmc
fs
sub
gs
imul
xor
loope
pop
adc
pop
lahf
fcmovnu
sub
inc
mov
mov
mov
sahf
aad
mov
shrd
pop
fcoms
add
dec
mov
jg
sbb
mov
xchg
xchg
mov
pop
jb
fstpl
dec
mov
xor
addr16
mov
je
xor
xchg
cltd
sub
into
aam
sbbb
shlb
fsubrl
hlt
push
jnp
xor
insb
xor
jne
incb
add
movsb
mov
mov
adc
andb
jnp
jecxz
fstpt
test
or
xor
addr16
jecxz
xchg
shlb
xor
adc
in
push
xchg
mov
sti
out
leave
push
pop
call
dec
jne
xchg
movsb
stc
stc
repnz
pop
ja
push
rcr
inc
fsubrs
bound
and
pop
out
mov
add
test
enter
jbe
in
jno
aaa
sbb
fs
imul
pop
rorb
mov
pop
subb
mov
mov
mov
lret
jge
mov
adc
sub
lds
cli
xchg
cmpsb
and
xor
into
jbe
push
icebp
adc
inc
adc
or
sub
push
andl
xor
and
divl
sbb
leave
mov
fcom
loop
push
fidivl
fistps
fwait
sarl
adc
cmp
addr16
imul
add
notl
loopne
xchg
test
aad
lods
xlat
popa
add
mov
mov
and
cs
push
rol
in
dec
mov
mov
test
mov
out
sub
add
test
dec
je
push
pop
xchg
ficompl
sbb
pop
xor
or
bound
add
stc
mov
pop
jl
lock
inc
mov
and
insl
lret
dec
stos
dec
add
pusha
inc
lods
bnd
jl
xor
xchg
mov
flds
mov
pop
repz
lds
jl
shll
mov
packuswb
mov
cmp
jmp
pop
lret
fimull
and
sub
xor
ja
clc
aas
lcall
jl
sti
je
into
push
xor
dec
mov
nop
mov
mov
jbe
mov
jg
dec
pop
fistps
jae
pop
fbstp
into
adc
cmpsl
mov
inc
dec
orb
imul
push
nop
add
or
adc
jo
andb
rcr
mov
mov
movb
aaa
sub
enter
jnp
adc
and
dec
add
pop
inc
or
popa
push
jb
mov
rorl
or
adc
sbb
xchg
lea
stos
cld
gs
sahf
push
lcall
mov
jmp
push
mov
cmp
dec
insl
adc
cmp
jge
and
lahf
fmul
mov
cwtl
inc
mov
aad
imul
fwait
add
dec
jge
aaa
push
rol
push
push
fstps
add
fadds
jae
pop
es
xchg
ret
push
xor
or
jmp
xor
pop
nop
cltd
daa
pop
bound
mov
jns
mov
data16
mov
sub
push
adcb
lds
sub
add
divl
hlt
sahf
popa
xchg
ja
jp
in
cmp
clc
push
les
loope
loopne
mov
xchg
jg
das
jge,pn
scas
test
jle
lahf
cld
int3
and
sub
pop
jne
xor
nop
adc
int3
mov
mov
xlat
mull
inc
arpl
cmp
movsbl
out
pop
dec
or
fwait
pop
or
dec
add
lret
jmp
mov
das
mov
xor
sub
shlb
outsb
pop
add
mov
dec
ja
sub
roll
adc
fisubrs
push
imul
adc
inc
sbb
movsl
xor
xchg
mov
aas
mov
add
mov
shl
xchg
rcrl
push
dec
add
sub
mov
cmp
mov
mov
mov
mov
in
mov
inc
test
daa
add
roll
cmpl
or
fld
pop
jg
pushl
adcb
popf
pmaxsw
cmp
jecxz
mov
push
pop
jns
filds
jno
cmpsb
inc
sub
aas
lock
mov
lea
ret
and
push
icebp
cmc
ffree
dec
jle
pop
jno
lods
and
mov
lods
bound
aam
sbb
scas
adc
fisubrl
mov
pop
mov
jb
aaa
popa
add
daa
pop
jl
pushf
cmp
std
inc
push
mov
pop
jg
fcomip
cwtl
xchg
sbb
shll
bnd
fs
jno
xchg
mov
dec
aad
shlb
arpl
and
xchg
shl
mov
pop
cwtl
xor
push
or
add
notb
jl
jmp
cld
dec
scas
fs
out
scas
xor
scas
xor
push
mov
inc
into
adc
cmp
out
and
cmp
in
in
stc
or
daa
lods
imul
out
ss
cmp
inc
mov
cltd
ficomps
mov
adc
lret
inc
es
lea
adc
sbb
in
sahf
inc
xchg
push
pop
out
les
xorb
sbb
pop
jns
cs
jne
rol
mov
add
mov
mov
sarb
mov
cmc
add
dec
sbb
je
xlat
orb
inc
data16
add
lret
inc
adc
mov
insb
jnp
repz
mov
jno
repnz
out
mov
xchg
push
lock
add
jl
inc
lods
das
shl
test
add
stos
xor
dec
push
es
mov
mov
dec
rcll
lods
push
adc
sbb
xor
jns
daa
jno
je
aam
add
repnz
rorl
jb
loope
xor
scas
pushf
popa
sbb
xchg
inc
mov
add
adc
popa
xor
ja
in
aad
or
imul
or
inc
pop
mov
dec
leave
adc
adc
sbb
call
movsl
mov
pop
mov
cmp
es
add
mov
adc
jmp
scas
xchg
inc
cmp
gs
inc
in
xchg
pop
in
outsl
aas
inc
in
es
aam
push
jb
shrb
aaa
cwtl
mov
daa
pop
inc
cmp
nop
shll
xchg
mov
loopne
lcall
add
jb
xor
out
mov
xchg
adc
push
mov
and
cmp
aaa
test
mov
adc
jge
outsb
adc
lea
mov
fcmove
rcl
xlat
cld
push
orb
pop
fildll
popf
test
mov
sub
stos
insb
mov
inc
mov
arpl
push
in
add
lods
test
dec
es
or
mov
nop
mov
and
cmpb
mov
xchg
stos
mov
pusha
int
mov
fmul
adc
or
pop
in
ja
movsl
sub
fisubs
je
mov
stos
je
adc
push
push
sbb
and
leave
aad
lods
in
icebp
dec
jl
jae
mov
mov
inc
fst
push
cmpsl
adc
ja
mov
xor
jb
mov
faddl
loopne
adc
mov
imul
ds
or
and
fcmove
iret
cmc
lcall
xchg
cli
test
and
hlt
nop
mov
xor
test
jo
mov
shl
sub
pop
fists
push
into
sbb
inc
mov
sbb
call
xor
mov
and
mov
add
xchg
mov
lods
outsb
or
cmp
xchg
data16
dec
neg
cli
lods
mov
add
mulb
shlb
xchg
push
pop
aaa
loope
dec
test
cmc
je
push
or
sahf
sub
jae
pop
les
pop
pop
outsl
jns
inc
andl
test
movsb
xor
rol
or
mov
mov
jnp
cmp
ds
sbbl
mov
into
imul
adc
adc
mov
bound
cwtl
mov
lahf
fwait
push
clc
sub
inc
out
repz
mov
shll
lret
sbb
lcall
pop
mov
mov
pop
cltd
pop
sti
or
ret
test
jne
cs
addr16
jecxz
xchg
mov
data16
jno
push
dec
push
test
mov
sti
ja
mov
sarb
mov
iret
sub
and
and
and
subl
into
sub
out
mov
insl
hlt
jne
mov
stc
mov
lds
sub
cmp
add
outsb
es
aad
sbb
mov
mov
jb
or
in
xchg
leave
mov
cltd
fwait
push
subb
sub
sub
xchg
inc
stos
jmp
repnz
push
pop
ret
push
push
mov
fimuls
or
mov
cmp
cmp
or
repz
xor
sahf
fcom
leave
popa
popa
cmpsb
push
add
pop
and
inc
cmp
adc
ficoms
fwait
clc
adc
mov
xor
cmpb
sbb
dec
pop
mov
repz
push
sahf
lahf
cmp
outsl
repnz
mov
addr16
ja
add
dec
in
inc
sub
lcall
and
xchg
les
mov
in
arpl
jns
sbb
sub
fdiv
inc
testl
in
in
imul
cltd
fdivl
mov
ret
xchg
aam
xor
lock
sub
cmp
std
push
xchg
mov
mov
pop
inc
or
filds
push
jp
insb
cmpsb
xor
out
or
pop
out
cmpsl
movsb
sbb
push
push
jo
lock
iret
cmpsb
lods
rcrl
fwait
aas
imull
fisttpl
insl
ja
lret
pop
xchg
inc
mov
test
xor
adc
les
pop
mov
sti
pop
mov
xlat
or
out
test
push
mov
mov
mov
iret
inc
add
cmp
mov
inc
xor
ret
pop
sarb
mov
fistl
lods
pop
call
iret
rolb
adc
xlat
dec
and
jnp
orb
xchg
mov
jmp
stos
test
inc
cmpsb
mov
xchg
ret
dec
jno
ret
push
adc
push
add
stc
ljmp
aaa
test
and
add
out
push
fmuls
push
xchg
into
mov
scas
xor
inc
jno
mov
int3
jecxz
daa
imull
jno
fwait
and
cmpb
inc
jl
cld
adc
cwtl
cmp
push
lea
icebp
hlt
int3
out
sbb
lods
repz
cmp
xor
pop
roll
sub
out
inc
xchg
xchg
push
lret
inc
cmpsb
and
rcrb
jbe
xchg
scas
mov
jo
and
mov
push
or
cld
jl
das
jg
push
out
mov
add
das
adc
inc
popa
leave
sub
sbb
inc
sahf
fnsave
pop
ds
push
mov
mov
push
mov
add
jl
push
nop
or
jg
mov
pop
xor
jae
leave
ret
stc
sub
ja
mov
leave
rorl
lods
pop
ljmp
push
insb
pop
sbbl
pop
cmp
mov
lds
out
pop
cli
repnz
pushf
dec
jmp
and
stc
nop
fst
pushl
jbe
push
scas
cs
sub
test
cmp
mov
push
xor
in
push
test
in
lock
cmpsl
dec
inc
fiaddl
xchg
cwtl
icebp
dec
or
fwait
adc
into
aaa
in
and
sarb
loopne
fiadds
xchg
cmc
fwait
aad
sub
popf
insb
jnp
mov
mov
jae
jb
sbbb
dec
dec
sarb
xor
xor
nop
mov
mov
add
mov
cmp
test
in
out
enter
pop
mov
xchg
xor
clc
adc
xchg
add
xor
lahf
cmp
fcom
ret
sub
lcall
rolb
lcall
jg
mov
push
scas
adc
mov
cmp
push
popf
sub
ret
xchg
add
jne
mov
pusha
int3
rclb
cs
enter
cmc
test
dec
push
ss
mov
dec
xor
adc
add
pop
sub
pop
les
cmpsl
inc
mov
lret
dec
cmp
test
cmp
jp
adc
pushf
daa
cmpsl
out
es
push
lods
cmpsl
ss
inc
into
pusha
fsubrs
lea
jnp
mov
xlat
jo
ret
cltd
sti
rolb
aas
pushf
dec
jo
jbe
cmp
dec
and
addr16
outsl
pop
and
rolb
adc
xchg
lods
sub
imul
jle
ja
xchg
mov
push
inc
scas
add
mov
cli
or
push
mov
iret
into
sbb
out
out
gs
adc
cmp
int3
cmp
scas
dec
mov
pop
ret
js
pop
bound
fimull
sub
enter
std
aaa
inc
enter
and
adc
js
mov
sub
stos
adcb
flds
ds
and
cmpsl
push
ret
mov
add
xor
outsb
mov
ja
inc
call
fcmovnu
loop
push
or
mov
fisubrl
loopne
and
mov
push
sbb
push
insl
les
xlat
nop
jl
pop
jg
sbb
sub
cmp
jno
ss
lret
fldt
mov
adc
push
jg
jle
push
int
jbe
addr16
fcomp
int
movsl
xlat
movsb
sbb
mov
mov
jne
imul
sub
faddl
call
imul
jnp
lahf
imull
jo
mov
xchg
jg
andb
dec
sub
push
push
ja
loopne
mov
pop
outsl
cmp
daa
push
popf
mov
call
xor
lahf
sub
mov
mov
mov
shll
in
pop
stos
sub
jmp
xor
add
arpl
aad
inc
outsb
icebp
dec
pop
clc
addr16
stos
lock
mov
fnsave
mov
aad
dec
mov
push
addl
dec
cs
in
fcmovnbe
or
gs
lods
lret
adc
cmp
repnz
sub
jmp
into
test
sahf
mov
movsb
es
nop
pop
dec
fucomp
int
xor
lock
enter
rcl
cld
inc
sub
push
rorb
add
cmp
aad
movsb
jecxz
push
sbbb
push
movsb
cmpsb
test
sub
fildll
pop
es
cwtl
mov
insl
add
add
testl
jg
push
arpl
xor
mov
in
cmpsl
nop
push
push
jo
fs
and
ret
lods
fnstenv
jb
pop
mov
in
dec
sub
aam
addl
xor
jno
dec
pop
fmul
stos
popa
lods
insb
in
mov
call
mov
ds
std
jae
dec
das
or
mov
dec
xor
add
stos
pop
out
xor
insb
cli
or
cmp
push
sarb
push
lret
jno,pt
loopne
adc
clc
add
hlt
fucomi
ds
cmc
add
cmp
cmp
shrb
int3
roll
mov
fwait
push
or
mov
pop
dec
cmp
dec
jnp
adc
lds
adc
jg
and
in
aaa
sub
sub
push
bound
fsub
test
test
cmpsl
sbb
pop
inc
loop
push
rol
push
cmpsb
es
sar
pushf
fwait
cmpsb
clc
in
stos
clc
add
jmp
in
clc
xor
es
aam
mov
nop
cmp
test
movsl
jl
lds
sbb
xchg
repz
inc
push
and
mov
jecxz
pop
ffreep
mov
sbb
rcr
es
test
sub
je
jmp
push
int
fcmovne
xchg
add
addr16
adc
sbb
inc
icebp
mov
pop
leave
fistps
or
xchg
inc
int3
xor
insl
cltd
out
movsl
sti
cwtl
jbe
ljmp
pop
in
cmpsb
ret
jns
lahf
and
push
das
lret
cmp
cmp
and
jno
mov
mov
mov
dec
jp
jbe
fisttpl
push
pop
dec
data16
dec
aad
and
mov
lea
pop
ret
push
add
and
jg
sub
jecxz
ljmp
adc
xor
sbb
mov
aas
jle
pop
decb
sbbb
and
jecxz
fldt
mov
loope
and
push
sarl
imul
enter
dec
and
out
mov
test
push
in
xchg
out
sbb
dec
repnz
xor
add
repnz
in
mov
imulb
roll
cmp
lds
sbb
xchg
iret
ja
push
fistl
cmpsb
int3
or
jnp
fists
sbb
icebp
jecxz
iret
xor
aaa
add
arpl
fisubrl
mov
out
cmc
jle
or
mov
jl
enter
loope
cld
pusha
or
mov
or
mov
sbb
cmp
sbb
andl
sub
sub
sub
sub
test
mov
mov
add
add
cltd
aad
mov
push
sarb
das
push
push
fwait
loope
enter
repz
cli
test
inc
xor
mov
loop
icebp
pop
cltd
stos
scas
inc
std
xor
aas
jg
inc
bound
push
xchg
clc
in
xchg
push
out
js
test
jno
sbb
jno
xchg
lcall
xchg
jmp
adc
inc
mov
xor
and
xor
pop
push
cs
je
les
inc
ljmp
push
sbb
mov
sbb
xchg
cmpb
sub
ss
je
cli
fwait
das
scas
int3
dec
addr16
out
fdivl
subb
mov
mov
sub
dec
das
mov
pushf
or
pop
xchg
xchg
jp
loope
imulb
int3
call
scas
fabs
pop
mov
shlb
sub
push
and
inc
push
dec
leave
inc
inc
js
pusha
test
sbb
jle
dec
sbb
or
movsl
or
sbb
mov
or
in
cmpsb
sbb
adc
push
mov
aam
push
bswap
jo
dec
sub
push
push
and
push
adc
jmp
inc
pop
loop
inc
mov
jae
or
lea
cmp
adc
shll
xchg
sbb
popf
jg
sbb
icebp
sbb
repz
aas
mov
cli
mov
js
arpl
cmp
bound
in
xor
ret
dec
add
iret
cltd
arpl
mov
imul
jl
xchg
add
inc
mov
inc
add
mov
add
icebp
jbe
fnstsw
sub
mov
sub
xor
sahf
jae
sub
push
and
pop
dec
lods
rcll
mov
sbb
clc
dec
cmpsl
pop
dec
int
mov
sti
cmp
sbb
movsb
ds
fwait
stos
pop
mov
popa
push
dec
push
incb
cmp
jecxz
cli
fsub
int3
xchg
loopne
test
pop
outsb
cmp
mov
cmp
mov
mov
and
add
xor
or
insb
jnp
popa
lods
insl
mov
fisttpl
mov
mov
mov
mov
mov
dec
lret
push
ja
mov
or
sub
popf
clc
clc
stos
mov
sub
pop
dec
mov
dec
mov
push
rcl
js
sbb
repnz
pop
sbb
iret
xchg
pop
xchg
pushf
mov
lahf
sbb
push
popf
outsl
out
xor
clc
mov
inc
hlt
shlb
pop
and
repz
imul
lea
push
push
lahf
mull
test
xorl
je
push
std
sub
out
sub
out
ret
loop
adcb
push
mov
mov
mov
mov
xlat
push
mov
cmc
cmp
rorb
popf
lods
call
jo
fildl
scas
jno
xchg
adc
xor
and
lahf
jo
in
cli
jg
mov
pop
or
sti
test
jmp
mov
xchg
inc
xchg
xchg
inc
jp
pop
dec
movb
mov
xor
cli
inc
pop
shlb
js
inc
jmp
inc
iret
sbb
out
es
adc
xchg
xor
js
dec
and
lret
sub
adc
cmp
bnd
add
add
mov
ret
call
adc
iret
or
dec
sub
inc
aad
fldcw
sub
arpl
sahf
aas
mov
loopne
dec
push
dec
es
push
jmp
arpl
xlat
in
rorb
add
jo
inc
dec
mov
adc
and
cmp
sub
xchg
rclb
sub
xor
cmp
mov
in
pop
sbb
dec
jle
sub
mov
mov
lahf
pusha
cmp
pusha
fucomi
ss
jl
stc
adc
dec
mov
and
dec
and
mov
test
scas
jecxz
cmp
popf
mov
add
cmc
push
push
sbb
push
scas
adc
pop
fstpl
sbb
in
add
scas
pop
js
dec
or
jbe
mov
and
leave
mov
mov
jl
cmc
pop
dec
cld
and
lods
aas
xor
dec
mov
sub
jae
movsb
pop
xchg
push
add
xor
jno
pop
dec
insb
cwtl
cmpsl
pop
jbe
ljmp
in
and
mov
out
daa
ffree
xor
and
inc
ror
push
mov
fildl
outsb
or
dec
aas
mov
bound
popf
ljmp
dec
lds
cmp
sti
jl
call
pop
inc
shl
jge
jne
outsb
lret
imul
sbb
lds
jnp
lea
cmpsl
fimuls
out
sbb
divb
shlb
xorl
jb
push
mov
movsl
or
mov
xchg
xrelease
push
aam
mov
ds
fdivl
jecxz
out
cmpb
imul
and
ljmp
addr16
dec
pop
inc
cltd
iret
add
rolb
jl
adc
or
pop
aaa
mov
lock
cwtl
fadds
out
cld
js
mov
orb
mov
inc
nop
leave
aas
popf
int
jno
xor
mov
sub
sub
cmp
sbb
jl
ja
movsl
into
sub
xor
arpl
push
ret
cmp
insb
cmpsl
mov
xlat
test
inc
shrb
fmull
fsubrs
adc
push
mov
adc
cwtl
cmpsb
mov
cld
mov
mov
jecxz
and
xor
jne
js
sti
cs
rcll
cli
lock
les
sbb
jg
add
jno
push
sbb
xchg
cs
jnp
out
cli
cwtl
fistpll
adc
dec
fsubrl
adc
dec
pop
adc
lods
push
dec
addr16
lds
inc
mov
into
cmp
adc
rolb
sysret
sub
push
repnz
lcall
orb
es
clc
sub
pop
imul
sbb
or
adc
dec
mov
aad
cmp
pusha
shl
xchg
push
int
add
xchg
add
inc
cmp
addr16
jl
pop
stc
add
repnz
cmpsb
adc
sbb
pop
inc
ss
jge
sbb
arpl
loopne
sbb
inc
das
and
jp
sbb
push
jle
jae
shlb
xor
mov
dec
daa
mov
std
int3
pop
lret
cmpsb
imul
sub
mov
getsec
mov
mov
jbe
or
xchg
cld
push
or
icebp
xchg
mov
lcall
out
cmp
jmp
cmp
mov
shlb
cltd
dec
lret
jns
xor
sub
int
shrb
push
cs
cmpsl
xchg
mov
inc
pop
add
cmp
in
nop
and
and
jns
and
adc
out
jb
sahf
aas
shr
pop
subl
dec
mov
xchg
inc
mov
adc
sbb
inc
cmp
aas
loope
ds
fdivrp
sarl
jg
aad
subl
dec
xor
jmp
mov
mov
ror
stc
xor
dec
adc
push
pop
lcall
dec
cmp
xchg
les
bswap
daa
mov
add
ds
sub
idiv
add
ret
mov
out
clc
out
dec
mov
jg
cmc
ja
mov
cltd
test
mov
add
add
mov
out
cmp
jl
mov
jo
mov
popf
sub
add
and
outsl
cmpsl
lret
inc
rolb
mov
inc
subl
dec
cmp
xorb
adc
cmp
test
jl
mov
hlt
test
add
fdivl
mov
ja
push
jno
add
jne
shlb
mov
scas
mov
aad
imul
in
ss
jno
popa
dec
jb
push
mov
sub
mov
push
pop
cld
inc
sbb
sbb
mov
pop
incl
mov
jae
push
jae
inc
mov
aas
mov
jg
leave
test
adc
shlb
mov
out
call
outsb
jecxz
jb
add
hlt
outsb
flds
hlt
mov
add
inc
in
push
out
rcrl
push
adc
cli
push
xchg
sbb
sub
push
es
and
fscale
or
in
inc
aam
mov
enter
testb
pop
outsb
adc
orb
mov
adc
test
dec
jge
adcl
adc
mov
or
mov
sub
cmp
mov
dec
or
or
lret
repnz
push
test
mov
popa
movsl
addr16
ret
fidivrl
rcr
push
testl
xchg
jp
cmpb
sub
in
rolb
pop
mov
xor
iret
fists
push
dec
nop
imul
test
movb
shrb
sub
out
movsb
bnd
fnstsw
sbb
cmpb
in
cmpsb
adc
and
mov
and
mov
mov
sub
dec
or
adc
icebp
push
mov
lcall
fwait
inc
xor
loopne
lods
xchg
test
add
lods
and
into
jno
lea
mov
clc
icebp
bound
inc
dec
hlt
cmc
xchg
xchg
stc
xor
sbb
fs
mov
in
repz
aam
sbb
dec
lds
xchg
and
adc
test
dec
xchg
inc
sbb
mov
xchg
or
jmp
or
mov
dec
mov
mov
jb
inc
pusha
cltd
outsb
pop
les
mov
add
outsb
rorb
inc
orl
incl
mov
out
xor
and
jecxz
mov
xor
sbb
jns
rcr
rcrl
lock
jmp
lock
jns
xchg
push
push
jno
mov
inc
into
dec
insb
cmpsl
popa
sub
sub
sbb
mov
or
insl
push
out
lea
lods
push
push
outsl
lret
inc
xchg
push
mov
lods
lret
and
and
flds
sub
sub
loopne
fcompl
fsubl
push
shlb
mov
out
push
fiadds
jne
inc
xor
xchg
mov
in
sub
leave
pop
cmp
pop
mov
mov
loope,pn
insb
jbe
ret
mov
push
mov
bnd
movsl
mov
adc
lahf
fcomp
mov
sbb
jmp
push
or
fistl
pop
and
add
sub
mov
xor
jmp
inc
cmp
and
jmp
mov
aad
add
adc
push
jl
jmp
lods
push
in
les
roll
mov
pop
insb
and
and
xorb
lret
mov
mov
js
xlat
shlb
mov
ljmp
jl
sbbl
dec
nop
sbb
mov
push
repz
in
hlt
cli
cmp
push
jecxz
mov
push
mov
sub
fdivrl
lods
mov
or
sub
cld
mov
jle
movsb
lret
testb
xchg
int3
sbb
out
mov
sub
add
sbb
and
cmp
adc
mov
sbb
stos
mov
dec
adcb
fsub
out
scas
int
pop
mov
lods
cli
jae
or
push
lret
enter
aaa
into
jne
flds
push
sub
outsl
stc
nop
dec
add
fldl
dec
pop
mov
sbb
mov
inc
cs
sbb
das
scas
cltd
bound
pusha
adc
dec
mov
fsubl
push
loop
mov
sub
mov
xlat
sub
repnz
inc
movsl
dec
sarl
xchg
ficoml
mov
mov
sbb
or
dec
xor
or
and
mov
mov
icebp
inc
fisubrs
pop
std
cmc
sbb
mov
ret
fadds
or
mov
push
xor
pop
xchg
inc
and
jmpw
inc
push
lret
sub
jmp
inc
ljmp
outsl
xchg
insl
data16
std
std
dec
rcrb
dec
lret
inc
push
mov
pop
sbb
pand
xchg
aad
aas
and
mov
or
js
popf
mov
sub
fsubr
popf
push
add
cli
xor
mov
pop
mov
pop
in
adc
pop
sbb
jmp
xchg
mov
add
mov
xor
lds
cs
xor
int3
das
lahf
test
sub
out
aam
insl
in
icebp
andl
inc
dec
stos
outsl
test
repz
pop
pusha
je
out
loop
call
jbe
mov
inc
out
cmp
xlat
sbb
or
sbb
add
pushf
xchg
enter
sahf
movsb
pop
xchg
jg
add
lret
mov
aas
jp
shr
dec
jmp
fisubs
cmp
sub
out
fucompp
imul
xchg
pop
dec
pop
lock
mov
scas
lcall
imul
insl
jmp
icebp
dec
shlb
mov
xchg
mov
fdivrs
or
and
ss
das
xchg
fs
jb
xchg
sub
adc
fbstp
imul
cs
sbb
mov
dec
in
add
inc
call
cpuid
and
ds
into
mov
xchg
inc
jb
scas
add
adcl
xor
mov
test
mov
dec
dec
outsl
gs
push
dec
ficoms
sbb
mov
in
cmp
sub
insl
xchg
sub
mov
mov
lea
ljmp
adc
jmp
in
adc
je
mov
pop
mov
incb
inc
in
or
insl
inc
aam
sahf
add
mov
dec
sahf
ljmp
inc
dec
or
cmp
inc
add
mov
cmp
pop
daa
or
iret
loope
adc
mov
jle
outsl
sti
jmp
sub
dec
mov
push
sub
cmp
adc
dec
adc
imul
stos
rcl
jne
gs
jg,pn
inc
out
mov
jle
pushf
push
inc
mov
mov
adc
movsb
jle
sub
jge
jno
imul
cld
fbld
in
stc
cltd
psrlw
xchg
and
fidivrl
sub
cmp
es
push
jge
pop
jne
jg
push
inc
push
xor
fists
ljmp
mov
jle
movsl
gs
mov
pop
jns
aad
adc
mov
xchg
mov
push
push
push
mov
push
push
cmp
or
sub
mov
and
xor
push
mov
push
dec
test
iret
nop
or
and
pusha
repz
data16
push
mov
fsubr
jne
lret
push
xchg
fisttpl
dec
fdivl
outsl
cmpsb
xchg
mov
dec
nop
lahf
aam
loope
loopne
and
dec
push
lea
jo
js
dec
inc
stos
pushf
mov
mov
sbb
mov
loope
out
pop
dec
ljmp
cmp
in
test
xchg
out
pop
loop
movsb
mov
lret
inc
fnstcw
jb
xchg
xchg
nop
jp
jns
push
das
xchg
and
movsb
mov
fdivs
imul
std
mov
inc
jne
inc
mov
add
xchg
pushl
xlat
sbbl
sub
and
inc
fstps
arpl
inc
insl
fmul
push
jg
hlt
or
insb
cmp
cs
jmp
andb
ja
fs
sbb
inc
adc
inc
int
mov
shrl
dec
sbb
cmc
mov
lret
adc
sbb
sahf
scas
xorb
sub
bswap
mov
ljmp
insl
dec
dec
fs
cmp
insb
aaa
push
push
call
test
and
imul
xor
aaa
and
in
or
pusha
loop
pop
xor
xor
int3
repz
mov
or
call
movb
int3
clc
scas
movsb
pavgw
shr
mov
inc
enter
jmp
mov
dec
xchg
and
add
xor
fld
cltd
ja
scas
mov
mov
or
mov
ljmp
icebp
adc
mov
jmp
jecxz
jne
fsubrs
xchg
sbb
mov
mov
pop
test
cmpsb
jge
xchg
jl
repz
or
or
add
nop
push
ret
mov
movsb
fs
cwtl
xorb
mov
mov
xchg
sub
inc
loop
mov
shll
call
xchg
fistl
arpl
fstpl
or
cmp
pop
adc
pop
leave
bound
iret
jmp
imul
push
rcrl
sub
mov
jmp
jns
mov
push
outsl
mov
cmp
and
pusha
sbb
ret
jge
sbb
cmpsb
push
loop
shlb
hlt
stos
sub
test
cltd
xchg
sbb
dec
cmp
add
ficoml
jmp
std
jg
fstl
ret
je
push
sbb
mov
movsb
ja
adc
test
mov
nop
jno
mov
shrl
subl
mov
cli
jae
sub
add
insb
inc
shlb
fimull
sub
mov
stos
fs
shrb
mov
roll
mov
and
mov
xor
mov
out
xor
pop
adc
or
cmpsl
sub
data16
cli
stos
in
mov
jnp
xchg
andl
dec
jl
arpl
xchg
rclb
mov
mov
pop
mov
rcl
cmc
jl
std
or
cmp
and
les
orl
inc
push
test
divb
and
dec
mov
push
mov
pop
addr16
lods
arpl
clc
int3
jp
push
in
or
pop
lret
bound
mov
sbb
aaa
or
xchg
mov
sti
es
les
mov
and
mov
push
stos
fdivrs
pop
pop
cmpsl
test
ljmp
ds
and
mov
out
js
xor
sbb
pop
hlt
iret
mov
adcb
mov
bound
aad
jo
dec
xor
jge
dec
out
jle
pop
jl
lahf
subb
jge
std
pop
and
lds
adc
cwtl
insb
xor
insb
push
lods
sbb
aam
push
fsubrs
mov
iret
sti
popa
addr16
push
xor
xor
push
aas
jg
jmp
sbb
cltd
punpckhdq
push
sti
sbb
jmp
cwtl
mov
enter
sti
sbb
cmc
enter
ret
xchg
xchg
xor
lock
pop
ljmp
popa
imul
pop
loope
icebp
add
mov
pop
jmp
nop
repz
cmp
shll
and
loopne
push
jb
mov
push
dec
out
push
cld
outsb
sbb
movups
in
cmp
dec
filds
test
or
sti
movsl
dec
out
jge
adc
dec
xor
sub
ja
sahf
jmp
mov
sbb
pop
jge
pushf
xor
push
jmp
add
dec
ljmp
ja
dec
add
out
jno
and
add
imulb
cmpl
popa
jnp
popf
stos
mov
pop
add
movsl
pop
insb
ret
push
ror
sarl
insb
dec
pop
mov
xchg
cmp
add
and
jge
out
jg
inc
mov
jmp
icebp
enter
mulb
or
sbb
nop
or
aam
and
imull
sub
mov
movsl
in
fdivs
adcl
and
insl
in
jo
aas
leave
adc
push
movsl
in
mov
cmp
idivb
lds
push
pusha
rorb
sub
xorb
and
adc
pop
shlb
dec
lock
imul
fildl
xor
jb
jecxz
pushf
add
mov
mov
and
in
mov
xorb
outsb
cmp
lds
mov
fstpt
cmc
jg
sbb
push
shll
cli
push
bound
aam
std
and
push
sub
inc
adc
fwait
push
pop
pop
sbbb
mov
mov
jb
jns
cli
fists
jnp
sub
dec
fisubs
shrl
push
xchg
fcompl
stos
jle
jno
jno
aam
jns
jno
pop
hlt
loopne
mov
add
in
cmpsb
nop
popa
inc
sub
adc
test
sbb
ss
mov
or
nop
jmp
in
fiadds
rcll
adc
cmp
cmpsl
dec
adc
pop
sub
or
das
jge
int3
mov
jns
mov
push
pop
mov
push
push
and
repnz
push
dec
adc
ja
sub
xor
test
xor
adc
ss
dec
test
lahf
pushf
dec
fdivl
fidivrs
jmp
add
xchg
xor
jae
je
lock
outsl
mov
adc
pushf
inc
sbb
cmc
adc
sbb
hlt
dec
cli
xchg
cmpsl
mov
clc
jge
add
insl
add
cmp
mov
dec
push
xchg
or
out
or
stos
dec
daa
aaa
jle
adcb
out
arpl
shll
call
xor
js
arpl
mov
pusha
in
mov
std
mov
lods
push
ret
jge
fcmove
in
cld
movsl
je
in
mov
mov
dec
mov
inc
out
fs
lcall
mull
out
jb
fildl
mov
in
es
scas
stos
mov
mov
inc
push
loopne
inc
xlat
inc
jl
shrb
inc
xchg
in
cli
mov
sbb
aaa
ljmp
pop
sub
or
push
adcb
dec
push
cli
ds
inc
jo
adc
clc
stos
imul
lock
or
inc
cmp
mov
adc
orb
xchg
loop
inc
loope
ljmp
cmp
iret
rol
cs
lock
xchg
mov
mov
push
mov
adc
pop
daa
mov
lea
sti
aas
add
jle
mov
xchg
adc
push
repnz
push
lods
ds
ret
sub
xchg
jl
cmp
mov
jmp
in
lods
jo
movsb
mov
add
inc
jae
mov
mov
movsb
or
aad
mov
jae
push
sarb
aad
std
iret
enter
add
sub
pop
mov
lods
movsl
xor
lahf
inc
data16
sahf
addr16
pusha
sbb
rol
stc
test
xchg
notl
in
jp
cmp
xor
and
leave
and
xor
dec
imul
dec
xor
push
sbb
sub
push
cli
xadd
push
fs
pop
fcoml
lods
xchg
push
sbb
lahf
out
mov
insb
xor
int3
or
lcall
cmp
mov
scas
test
jg
push
outsb
es
push
sub
shll
mov
lds
lds
idivl
sbb
ds
iret
stc
repnz
mov
outsb
ljmp
cs
aad
out
call
push
lcall
adcl
stc
mov
ret
push
sub
push
imul
or
sub
fistps
add
lret
mov
int
jmp
ja
adc
std
lahf
icebp
test
adc
enter
aas
pop
cmp
sbb
nop
stos
mov
gs
mov
fwait
sbbb
jnp
or
leave
add
push
inc
jmp
or
fdivl
xchg
push
test
mov
inc
push
and
cmp
out
sti
hlt
and
inc
popa
subb
push
inc
ror
mov
mov
rorb
inc
loope
aad
jo
or
test
push
sub
dec
scas
dec
inc
xchg
dec
movsb
jle
mov
mov
aam
fs
aad
and
push
jne
push
adc
insl
lods
cs
test
repnz
iret
push
rcll
inc
aaa
mov
sti
and
cli
fwait
outsl
loop
push
mov
adcb
pop
xor
mov
mov
xchg
ja
test
lret
or
loope
or
call
lret
jl
mov
push
das
push
pop
xchg
lea
sti
push
dec
aas
xchg
stos
fbstp
mov
cmp
mov
std
jmp
lock
cmp
cwtl
stos
leave
inc
push
sbb
sub
mulb
idivb
mov
lret
pop
pop
insl
lods
push
pop
sub
or
add
test
mov
mov
xlat
mov
les
xchg
test
cltd
ds
cmpb
ljmp
js
xchg
sti
xchg
mov
fcomps
fwait
out
enter
add
push
in
xlat
inc
jns
mov
inc
mov
cmp
add
jno
outsb
imul
adc
loop
sbb
fcoms
and
movsl
mov
aas
dec
pop
rolb
cwtl
test
fsub
enter
add
pushf
add
lods
pop
aas
fdivr
insl
jmp
cmp
xchg
or
call
aas
outsl
xchg
mov
pop
pop
jmp
cmp
sbb
and
dec
bound
mov
in
jns
mov
push
add
and
pop
jmp
pop
test
ret
inc
arpl
data16
hlt
outsl
leave
push
pushf
mov
mov
mov
cmc
xchg
and
rol
fwait
daa
mov
fdivr
mov
stos
and
stos
rcrl
ljmp
dec
dec
mov
test
and
mov
push
jnp
dec
sbb
xor
jl
jne
jbe
xchg
jle
rclb
ret
loop
in
sub
and
pop
sub
das
pop
inc
jns
call
mov
xorl
jno
mov
push
aad
adc
and
or
jmp
addr16
sub
inc
xor
hlt
lret
pop
pop
in
icebp
jmp
dec
push
shll
cwtl
mov
pop
notl
add
jge
dec
icebp
lret
or
fisttpl
fwait
in
xorb
dec
xor
sbb
mov
lods
ret
mov
jl
cld
push
out
fnstsw
repnz
push
fldl
outsl
sbb
and
cmp
push
inc
sarb
arpl
sarl
pop
push
movl
add
inc
pop
js
add
movsb
clc
add
adc
mov
imul
and
cmp
jbe
test
loope
stos
test
sbb
sbb
clc
inc
dec
outsl
call
in
repnz
adc
adc
jl
adc
push
mov
out
add
inc
pop
add
cmpsb
and
cs
repnz
and
fmul
imul
and
jns
sub
in
and
clc
mov
adc
movsb
inc
or
popl
pusha
jo
mov
jne
adc
cmp
lods
xor
pop
cld
inc
xlat
xchg
ret
xor
rorb
sti
add
dec
aaa
pusha
cmp
push
scas
cmp
loope
inc
jnp
push
mov
cmp
and
fwait
jp
xchg
ficomps
cwtl
call
mov
adc
inc
pop
inc
push
lods
mov
xchg
and
xchg
xorl
fidivs
aam
dec
add
hlt
jecxz
ret
sar
xor
out
fbstp
sbb
inc
jb
push
pop
jb
add
in
mov
mov
and
sarl
push
push
movsb
cmp
lcall
xchg
pushl
iret
or
ljmp
adc
out
mov
and
ds
jecxz
rcr
push
orl
pop
cmp
icebp
xorb
jae
icebp
push
push
bound
mov
pop
ds
pop
insl
lret
aam
pop
ja
mov
sbb
pop
pop
bound
ret
sbb
dec
lahf
out
jnp
mov
xlat
int
leave
aam
cmpsl
adc
inc
sahf
stc
inc
mov
insl
mov
push
xchg
fwait
test
mov
ret
or
jbe
shl
sbb
cwtl
gs
pop
sub
icebp
iret
inc
pushf
in
cmp
cmp
mov
pop
scas
cmp
and
xor
xor
ror
jge
outsl
imulb
out
cmc
jb
jmp
push
mov
xor
aad
std
js
mov
mov
pop
lahf
sarl
mov
pushf
and
sub
imul
pusha
negl
sbb
es
mov
push
cmp
fwait
dec
pop
arpl
jno
lea
mov
arpl
jnp
mov
out
lods
push
int3
and
inc
push
mov
sub
cltd
es
orb
and
sbb
mov
popf
loopne
test
cmp
push
mov
outsl
iret
mov
xor
pop
shl
push
mov
ret
push
loopne
xchg
fcoml
xchg
ss
pop
cmp
popf
aad
movsl
inc
incl
mov
pop
xchg
jae
jae
and
cmc
leave
daa
loope
cmp
les
dec
cld
icebp
sub
jl
dec
sub
insl
xlat
mov
jle
ss
arpl
stc
xchg
mov
sub
mov
inc
inc
jns
repz
hlt
xchg
push
mov
mov
mov
push
xchg
in
ret
out
pushl
xorl
test
out
lock
jnp
repnz
jmp
push
or
mov
in
movsl
fst
rolb
aad
ja
lods
adc
pushf
mov
in
mov
mov
mov
and
mov
negl
cld
out
push
fs
popa
jns
inc
rorl
aam
daa
ljmp
repnz
iret
subb
jge
inc
mov
jo
sbb
mov
cltd
leave
adc
cwtl
adc
fstl
sbb
jg
sbb
add
xor
hlt
fnstsw
or
hlt
cmp
test
jle
gs
pop
mov
jbe
mov
test
mov
push
dec
push
hlt
pusha
xor
not
xor
push
pop
sub
loopne
mov
sbb
cltd
adcl
sub
mov
aas
sbb
and
xchg
push
dec
scas
xor
jo
call
mov
mov
pop
push
inc
cmp
aad
pusha
popf
sarl
sarl
std
jno
js
out
mov
add
xor
push
cmpsb
ret
sbb
movsb
xchg
aaa
ret
shlb
add
xchg
rcrl
cld
ss
push
mov
adc
fwait
push
roll
cmp
mov
sub
mov
mov
repz
stos
outsl
rorl
pusha
adc
ret
jge
fildll
dec
or
and
or
addl
mov
jae
mov
cmp
jb
mov
adc
push
mov
lock
adc
enter
call
jb
sbb
icebp
data16
shll
aas
adc
jge
adc
add
popa
dec
mov
sub
ret
mov
xor
sub
rorb
or
cmp
lret
movsl
pusha
imul
inc
jnp
lock
loope
mov
xor
xchg
in
sbb
out
mov
pushf
lahf
jb
ret
cmp
iret
fisttpl
sbb
inc
in
xchg
cwtl
inc
in
xchg
pusha
xchg
jmp
xchg
nop
jl
sub
jl
ret
xchg
mov
adc
add
inc
push
push
add
or
mov
push
adc
aaa
mov
test
inc
rorb
arpl
repnz
mov
lret
pop
nop
pop
int3
add
dec
ret
jb
sub
jle
notl
dec
int
cmp
add
adc
pop
mov
das
cs
fdivrs
xor
test
cmp
pop
repz
mov
cmp
cld
inc
sub
mov
xor
cmp
loop
aam
and
int3
cltd
loope
cmp
rcll
aaa
in
jns
mov
insb
inc
pop
clc
inc
ret
popf
test
fldcw
mov
mov
fldt
add
ret
pop
cmp
mov
adc
mov
idiv
lret
cmpsb
je
pop
xchg
xchg
shrl
add
fnstenv
ja
int3
pop
test
mov
pop
gs
sbb
rclb
hlt
scas
adc
jmp
or
jg
out
daa
loop
cli
jl
pop
out
outsl
lret
into
mov
mov
inc
push
and
inc
cmp
add
mov
addr16
and
inc
outsl
inc
inc
adc
inc
fwait
push
imul
nop
bound
adc
dec
inc
in
add
mov
mov
out
mov
push
lea
and
fcmovb
cmp
push
dec
mov
clc
cmp
pushf
cmp
test
aas
jb
cmp
and
rol
lds
jge
mov
mov
dec
cmpsb
dec
clc
lahf
shlb
imul
data16
jno
imul
push
leave
pop
std
outsb
stc
addr16
jb
hlt
inc
sbbl
push
fcmovnu
out
and
push
pop
mov
inc
jb
inc
mov
stos
fcomps
xchg
pop
lret
mov
add
bound
lret
adc
int
aaa
mov
jbe
push
aaa
pusha
lcall
jp
scas
mov
std
mov
add
push
push
pusha
jmp
pushf
enter
jge
scas
aam
mov
mov
xchg
sahf
insb
iret
sub
xchg
sbb
push
fwait
ds
pop
inc
cmc
add
mov
xchg
lds
loopne
mov
hlt
out
jp
pop
cmp
sbb
orb
lock
ss
cs
shlb
mov
add
int
imul
sub
inc
outsb
cwtl
clc
addr16
and
mov
fsubrl
pusha
test
lcall
inc
xchg
pop
ds
mov
jl
cltd
imul
in
nop
jge
inc
dec
cmp
clc
lods
icebp
inc
aaa
test
mov
lcall
pop
cli
scas
inc
sbb
sub
sub
cltd
fiaddl
jg
and
jae
cmp
inc
push
dec
push
aaa
dec
inc
cmp
testb
inc
and
xchg
fsubs
pop
sahf
inc
sbb
sub
push
pop
lret
call
cmp
jo
and
sbb
and
outsb
stc
push
cld
jg
repz
xor
cmp
popf
mov
inc
std
push
ss
pop
jge
sub
pop
xchg
push
sti
inc
addr16
cmpsl
dec
rcl
pop
add
and
popf
outsl
shrb
adc
adc
cvtps2pd
icebp
push
push
repz
fnstsw
sbb
inc
add
inc
ror
inc
sbb
mov
fs
inc
std
dec
loope
mov
adc
xlat
jle
in
mov
sbb
jae
lods
cmpl
sub
dec
push
enter
out
mov
push
sub
cli
mov
pusha
inc
movsb
or
lea
mov
int3
ret
subb
lret
push
or
shlb
jae
or
pusha
cmovbe
cmp
and
and
cli
pop
dec
cld
lock
xor
jbe
push
pop
fs
mov
inc
hlt
mov
daa
dec
inc
popa
movsl
inc
jp
dec
in
inc
lock
mov
frstor
sbb
les
xorb
adc
shlb
dec
ljmp
lods
clc
jg
rorb
data16
stos
ljmp
test
sbb
fsubr
add
pop
cmp
movsl
je
jmp
cmpsl
cmp
push
pop
dec
sub
push
mov
xor
rcl
sub
lcall
test
movsb
sbb
shlb
mov
dec
fwait
and
test
test
jecxz
jne
dec
aas
stos
cmpsl
inc
mov
loope
push
mov
imul
sti
test
mov
adc
out
aas
pop
daa
lods
jmp
sbb
sub
lea
stc
in
mov
dec
and
mov
scas
lock
jge
xchg
lods
push
mov
or
sub
inc
mov
ret
test
fs
dec
jmp
hlt
lock
adc
lret
fcoml
data16
and
and
mov
hlt
sub
rcll
out
sbb
jns
or
cmp
in
and
lea
imul
mov
test
sub
xor
std
or
cmp
lea
add
pusha
aas
jnp
dec
movsl
jns
lock
clc
and
pop
fmul
stos
test
lahf
mov
mov
imul
and
jg
lods
call
jp
sbb
mov
xor
aad
les
mov
lahf
mov
ljmp
out
xor
insl
in
popa
fsubr
cmpsl
sub
das
jg
push
add
cmp
pop
aam
xor
lret
mov
adc
and
jno
xchg
fcoms
mov
clc
pop
lea
and
out
jle
pop
jl
out
adc
jp
pop
cmpsb
scas
push
sub
rorb
cmpsl
pusha
sub
push
push
mov
arpl
push
bound
pslld
push
popl
sub
xchg
pushw
hlt
shlb
sub
les
movsl
mov
addr16
xor
gs
fmuls
xor
xor
test
add
and
push
leave
push
mov
jge
rcll
jecxz
sub
jns
lods
enter
push
jmp
push
push
mov
sahf
push
movd
in
leave
stos
mov
push
cmc
xchg
adc
or
or
xchg
insb
dec
dec
dec
mov
repnz
popa
push
cmp
mov
cli
jg
cli
sbbb
fistpll
push
aaa
inc
push
push
sub
add
fucomi
adc
in
out
rep
xchg
xchg
repz
pop
scas
push
xlat
dec
lret
repz
and
lret
xor
pop
mov
mov
jne
adc
pop
jno
sub
ja
imul
adc
rcrl
mov
mov
or
and
xor
leave
add
mov
iret
pop
sbb
cli
jae
sbb
cs
arpl
rcrl
inc
mov
sahf
xchg
cmp
adcb
sbb
les
inc
fcoml
cmc
aaa
shr
leave
xchg
ja
sti
xchg
fisttpl
pop
movsl
or
dec
jae
pop
pushf
jle
mov
cmp
mov
ret
cmp
xchg
push
rcll
sub
xchg
sbb
mov
into
jae
mov
sub
cs
jo
cltd
dec
cmp
aas
jns
iret
sub
jecxz
popa
pop
dec
ficoml
mov
stc
inc
imul
lds
push
push
add
sub
fsubrs
xchg
lahf
ret
dec
mov
jl
hlt
fdivs
fxch
out
xor
repnz
xor
dec
popf
stos
fucomp
xor
mov
mov
push
daa
push
mov
loopne
sub
dec
sbb
jge
inc
mov
push
rclb
push
cmp
mov
enter
pop
fnstenv
pop
aas
xchg
scas
pop
call
pop
shlb
nop
push
daa
out
es
and
cmpsl
insb
xor
cmpsb
cmp
call
sahf
fldl
mov
push
cli
push
call
lahf
ret
jb
push
cwtl
jecxz
inc
adc
mov
or
mov
aaa
sbb
mov
fsubr
adc
push
jg
cmp
mov
cmp
pop
add
or
aas
mov
lea
push
out
sub
cmp
popa
int
mov
xor
neg
cmpsb
cmpsb
or
pop
test
jl
mov
repnz
push
cwtl
mov
inc
cmp
xchg
xlat
pop
add
pusha
andl
sahf
negl
xor
sbb
out
pop
dec
sti
loopne
adc
pxor
mov
add
xlat
rcr
lret
in
jb
sbb
dec
out
inc
pop
gs
dec
pusha
add
scas
ret
test
mul
clc
pop
xchg
imul
shlb
aam
push
call
jp
pop
cld
insl
clc
mov
adc
and
gs
ret
mov
cmp
inc
addb
add
loope
outsb
dec
and
add
xchg
mov
in
cwtl
ljmp
cltd
adc
push
and
or
dec
mov
adc
pop
loop
insb
movsb
clc
and
push
dec
mov
arpl
add
cmp
xchg
mov
inc
cmpsl
jg
xchg
sbb
adc
lret
sarl
lock
repz
mov
cmc
and
popa
outsb
xchg
stc
adc
push
mov
mull
adc
adc
dec
aas
sbb
push
ljmp
mov
inc
ret
divb
xor
xchg
jecxz
mov
jbe
or
jmp
cmpsl
mov
imul
push
and
mov
in
jne
cmp
mov
fnstsw
cmp
cld
add
test
xchg
sbb
xor
mov
pop
aam
loop
mov
lea
push
sub
xor
iret
pop
adc
and
nop
add
mov
push
mov
inc
lahf
jp
aad
add
jb
push
lcall
popf
gs
popa
fcomps
dec
addr16
ja
mov
and
test
cld
sti
jge
push
push
jmp
imul
pop
lret
mov
out
sbb
pop
adcb
out
inc
sti
notl
ljmp
or
add
fcmovb
pop
call
mov
pop
shl
push
xor
mov
nop
sahf
push
jmp
ja
js
fdivp
or
jg
popa
fwait
sarb
push
fstpt
push
push
aam
add
jnp
xor
fs
leave
inc
lret
in
push
jmp
iret
out
roll
mov
xor
xchg
jno
push
xor
jp
aam
inc
inc
lcall
adc
fadds
mov
dec
fdivl
jnp,pn
sub
outsl
fimuls
repz
scas
aad
pusha
lret
lds
and
es
into
mov
and
mov
inc
push
mov
inc
cs
js
jp
pop
add
jne
insb
or
insl
xor
xchg
sbb
out
les
xchg
ucomiss
jecxz
adc
jne
fwait
into
insl
rolb
les
test
and
mov
aam
jge
and
loop
mov
lods
scas
jbe
adc
xchg
clc
mov
jmp
fsubrs
cmovne
loope
out
leave
dec
data16
incl
cmp
out
cmp
clc
cs
jo
mov
cld
or
outsl
xchg
xchg
mov
push
mov
push
stos
mov
jl
xorb
adc
ficoms
jnp
fmulp
orl
mov
test
pop
mov
test
dec
loopne
or
xchg
mov
or
aad
push
push
push
fadds
ffreep
xor
sahf
rorl
cwtl
xor
gs
push
push
pop
sbb
fwait
movsl
and
stc
in
and
fcmovb
cmp
int3
jo
mov
add
jle
scas
sbb
sbb
leave
insb
leave
jmp
add
ds
mov
cwtl
imul
test
xor
roll
call
mov
lea
out
nop
inc
adc
push
cli
jb
sub
icebp
sub
lds
inc
fs
filds
fsubl
mov
inc
xchg
pslld
lret
filds
lea
xor
adc
fnsave
adc
and
mov
jne
or
imul
mov
std
lds
or
int3
cwtl
push
fcoms
es
add
sub
movsb
inc
movb
and
or
cltd
sub
inc
jp
pop
jno
outsl
xor
jecxz
adc
rcl
insb
sub
and
loope
mov
roll
call
rcrb
rcr
and
mov
cltd
outsl
jmp
repnz
aaa
sub
pop
dec
rcl
int
push
out
adc
pop
into
xor
dec
scas
push
pusha
add
inc
mov
das
cwtl
imul
bound
fisubs
cmp
or
lods
xor
out
xchg
add
je
call
leave
add
insl
cltd
jnp
ret
or
pop
push
imul
jmp
es
dec
inc
mov
add
and
aad
fucomip
mov
lods
test
fwait
out
out
gs
xchg
mov
lahf
lahf
jne
lods
dec
icebp
call
xor
cmpb
jp
jae
jbe
sbb
addr16
movsl
rcll
ljmp
sbb
pop
cmpsl
int3
sub
ret
shr
pop
jl
jecxz
ja
xor
shrb
pushf
fwait
aas
cmp
jnp
push
nop
or
mov
and
adc
aas
fs
pop
add
mov
aaa
int
push
push
pop
lds
aaa
out
sub
mov
test
subb
daa
fcoms
cmp
scas
dec
jae
out
adc
aam
push
dec
dec
xor
or
jne
clc
imul
jbe
test
push
fildll
sarl
fwait
mov
xchg
push
es
orb
add
sub
sbb
into
js
mov
or
lods
xchg
add
testl
or
fimuls
cmpsb
cli
or
pusha
out
shrl
test
arpl
cltd
xor
cld
cli
mov
xor
adc
push
push
lahf
lcall
je
or
mov
daa
lods
and
jecxz
div
cli
add
mov
in
add
push
cmc
push
stos
inc
jns
sub
lret
and
or
fsubp
ds
mov
sub
jecxz
lret
jp
xor
mov
dec
dec
les
mov
mov
lods
add
xor
sahf
lods
fiadds
dec
pop
out
mov
pop
pusha
inc
sbb
mov
mov
sbb
aad
xchg
jne
stos
mov
mov
les
mov
add
bound
sarl
add
popf
arpl
xchg
out
lea
sub
push
and
aam
add
push
xchg
xor
or
mov
outsb
fldcw
scas
mov
test
data16
movsl
adc
in
loope
push
scas
imul
rcll
fidivrs
pop
call
mov
inc
loopne
pop
mov
dec
push
add
lods
loop
fisubl
inc
rolb
inc
call
aaa
xchg
stos
lods
loop
out
add
pushf
fiaddl
mov
addr16
adc
jns
bound
sbb
lods
cmp
call
pop
out
call
and
ret
daa
int
adc
lret
outsb
in
lds
sbb
icebp
dec
and
jo
pop
fcoms
fcmovne
loop
adc
jp
arpl
das
xor
adc
and
dec
push
mov
out
dec
sub
dec
arpl
scas
dec
bnd
sbb
adc
mov
and
out
je
push
fisubl
faddl
xor
xchg
int
cmp
ss
dec
xchg
dec
sti
mov
jbe
fs
stc
add
inc
jmp
push
mov
inc
nop
into
sub
cmpsl
cmpsl
es
cld
jmp
dec
test
cmc
cs
ret
loope
pop
es
sbb
mov
decl
lods
inc
mov
inc
mov
pop
lcall
aad
lea
or
inc
adcb
cwtl
jecxz
mov
and
push
xlat
ljmp
inc
das
les
outsb
sbb
jb
in
inc
mov
push
pop
xor
dec
xchg
mov
ja
imul
rorl
jecxz
aad
sahf
ret
movsl
iret
or
inc
lods
sbb
lret
pop
ss
adc
push
js
lcall
int
adc
shl
add
xor
nop
pop
stos
ret
mov
adc
in
jno
pop
cmp
test
lods
incl
push
cmp
cs
test
or
outsl
mov
xor
pop
or
push
push
and
xchg
pop
aam
fldenv
pop
jo
scas
push
cli
xchg
popa
stos
ljmp
sub
imul
imul
inc
inc
xchg
and
push
cmp
inc
popl
pop
movsl
sbb
fsubr
lret
push
sbb
lods
xchg
stos
or
mov
mov
popf
inc
xlat
sbb
test
push
or
cmp
jne
push
orl
jp
push
test
pop
ljmp
mov
in
stc
jge
data16
cmc
mov
cvtps2pi
clc
int
pop
data16
adc
or
pop
es
flds
mov
xchg
push
sbb
cltd
fildll
or
shlb
nop
dec
lret
lret
cltd
in
and
jae
adc
je
loopne
lcall
lock
test
mov
add
stos
pop
out
shll
inc
jmp
stos
cwtl
in
ret
jp
rcrb
fidivl
mov
out
loope
mov
ja
adc
or
add
cmp
or
sbbl
jle
notl
mov
jnp
sub
or
mov
in
cli
push
in
ficoms
push
lahf
sbb
xor
sub
test
pushl
in
cmp
daa
faddl
xchg
test
out
jmp
xchg
inc
repz
scas
cmp
test
std
scas
popa
sub
int
cmp
arpl
lock
jb
jne
popa
fmull
or
ljmp
or
adc
xchg
aad
jns
pop
dec
jmp
aas
xor
pop
fcmovb
out
icebp
jp
out
cmp
push
pop
or
mov
jp
enter
std
push
lret
fcmovu
push
dec
cmpsb
xchg
push
add
xor
das
sbb
cmp
outsl
jecxz
movsb
dec
sbb
xchg
add
mov
push
mov
icebp
adc
sub
les
xor
dec
mov
ficoml
mov
sub
xor
push
add
jb
ss
xchg
lock
dec
inc
popf
jae
or
nop
xor
inc
push
and
imul
sbb
bound
cmp
jl
xchg
cmp
cmp
add
cmp
push
sbb
cmp
add
jns
mov
shl
iret
fcom
cwtl
test
sbb
xor
xchg
push
jl
inc
pop
int3
pushf
lock
lea
std
or
or
xor
xor
xor
aas
mov
inc
loope
das
inc
or
mov
sbb
enter
test
cmp
adc
jnp
xchg
inc
sub
and
insl
lds
jo
cld
clc
push
movsb
sahf
inc
mov
jp
js
mov
das
mov
lods
mov
shlb
pop
cs
rcrb
fstpt
popa
cmp
ljmp
je
imulb
insb
push
or
pop
aaa
jecxz,pn
push
test
mov
push
push
es
ret
add
ficoms
shr
pop
mov
into
cmp
inc
ret
push
mov
fs
push
mov
cmp
mov
push
shr
lods
dec
and
enter
jle
jle
adc
inc
lods
jg
xlat
pop
mov
pop
clc
dec
out
lcall
dec
int
adc
cmp
aam
cmp
test
js
test
or
lock
or
sub
fdiv
inc
out
push
popa
cs
xor
out
or
or
sub
dec
iret
lds
ljmp
aam
ds
lds
sub
rcll
std
or
mov
jmp
sbb
mov
jmp
jecxz
mov
je
push
shrb
insl
mov
bound
in
jecxz
fiadds
sub
xchg
mov
sarb
lahf
push
push
jl
cmp
fnstsw
js
jae
rorb
test
das
xchg
jno
sbb
lea
jg
xor
mov
pop
aas
mov
push
xchg
cmp
or
addr16
push
sub
xorl
aad
pop
inc
sahf
or
lahf
lods
cld
sti
push
jne
les
imul
lcall
inc
lock
fidivrs
scas
sub
xchg
sub
adc
subb
enter
pop
xor
es
sub
les
aam
inc
int
sbb
pop
je
aad
in
mov
popl
mov
sub
sbbb
mov
lahf
fiaddl
mov
scas
jb
xchg
popa
stos
stc
jecxz
dec
xchg
xchg
jnp
imul
add
jbe
out
xchg
or
adc
jle
push
into
into
add
or
dec
xor
push
dec
das
adc
nop
imul
pop
cmp
mov
jmp
mov
dec
push
shlb
xlat
nop
xor
lret
sub
xchg
fstps
idivb
sbb
dec
push
mov
cmpsb
xchg
testl
fs
lret
outsl
add
lret
jmp
cli
mov
sbb
mov
inc
lahf
xor
ja
es
mov
jp
xor
inc
call
repnz
outsb
stos
jae
xor
and
inc
sub
pop
cli
cmp
mov
pop
iret
rsqrtps
mov
cmp
or
jl
mov
push
xchg
mov
adc
dec
add
daa
add
ret
in
jp
push
mov
push
mov
sub
pushf
fiaddl
movsb
movsb
xor
dec
pop
int
imul
addr16
ja
insl
mov
or
jle
insb
push
lret
subw
jns
es
mov
movsb
inc
jne
test
in
add
xlat
jl
and
mov
ss
inc
inc
int3
mov
faddl
out
movsb
push
aaa
pop
add
and
cmp
pop
or
test
stos
sbb
lds
fimull
or
cwtl
std
cmpsl
das
aam
test
clc
repnz
fwait
xor
data16
insl
mov
mov
je
js
lock
sub
xchg
add
pushf
insl
shlb
fldcw
jmp
sti
mov
xchg
dec
jnp
out
mov
inc
push
xchg
imul
xchg
nop
cld
fnstenv
jle
mov
xor
or
push
xchg
mov
sub
in
vmwrite
fs
and
adc
dec
pop
push
das
add
sbb
popf
lods
jle
mov
sub
scas
add
imul
bound
sub
iret
xchg
push
int
stc
std
inc
sub
cmp
mov
fiaddl
mov
and
dec
scas
test
cli
push
ret
mov
orl
or
inc
mov
cli
xchg
lods
pop
xchg
mov
loopne
jbe
shll
movsb
fadd
insb
or
mov
cli
enter
sbb
repz
xchg
testb
pop
add
rcrl
lahf
jg
lcall
cltd
repz
out
lret
jmp
popa
dec
sub
mov
popf
jl
jb
adc
or
hlt
cmp
ds
test
sbb
adc
lret
pop
int3
arpl
data16
into
bnd
in
movsl
js
sbb
mov
out
in
std
cmp
loopne
push
testw
sbb
scas
cmp
lret
push
xchg
movsl
inc
sbb
or
pop
jno
jp
or
mov
dec
outsl
lds
xchg
sbb
and
sub
inc
ret
enter
mov
nop
fwait
jno
pop
cmc
adc
adc
jecxz
aaa
ret
fildl
push
lahf
jle
sbb
cmpsb
fimuls
adc
sbb
aad
rorl
pop
testb
or
lcall
aaa
push
pop
pop
xchg
aas
mov
imul
or
or
xor
sbb
orb
mov
mov
call
movl
xor
fsubp
test
push
xlat
sbb
sti
pop
sub
pushf
jae
mov
fsubs
pop
dec
inc
leave
sti
jmp
and
punpckhbw
daa
dec
rol
push
test
ljmp
lahf
inc
mov
cwtl
cs
pushaw
cmp
dec
mov
xor
xchg
scas
imul
push
or
mov
cs
adc
lea
push
movsb
in
sbb
in
and
inc
mov
push
in
xor
mov
lods
mov
push
jecxz
sbb
cmp
outsb
je
fwait
int
jmp
xor
adc
cmp
and
pop
xchg
bound
jecxz
je
dec
fstps
dec
lock
pushf
xchg
insb
fsubrp
es
hlt
sbb
mov
enter
scas
pop
decb
mov
daa
adc
sbb
aad
imul
xchg
push
lahf
call
jbe
sar
dec
leave
mov
outsb
mov
shlb
orl
lods
cmpsl
sbbl
in
aaa
push
insb
jg
push
clc
push
js
sbb
out
rcrb
aad
nop
test
ffreep
sbb
push
fsubs
lods
aam
insb
int3
and
lock
sbb
cwtl
mov
test
pusha
or
fnsave
xchg
push
insl
sti
pusha
imull
test
jb
pop
dec
cmp
in
int3
inc
enter
lock
xlat
outsl
pusha
jle
test
or
push
add
pop
jns
or
ds
and
ret
mov
push
aad
rolb
sarb
xchg
and
and
test
sub
dec
scas
sbb
clc
cmpsb
fisttpl
jecxz
push
int
imul
sets
push
aam
jge
mov
dec
movl
gs
sub
adc
shlb
in
mov
fs
shlb
pop
jmp
push
xor
xor
mov
cmpsb
mov
outsb
jbe
jno
xor
pusha
imul
cmc
pop
cmp
add
dec
pop
fildl
fucomi
rcrl
sub
lcall
sti
movsb
movsl
js
pop
pop
leave
xor
jae
fidivrl
pop
sub
movsb
dec
dec
xor
fucomp
out
dec
fwait
sub
packsswb
xchg
add
jle
lods
std
out
xchg
inc
idivl
loopne
mov
inc
xlat
scas
add
call
enter
stc
jp
add
sbb
mov
xor
pop
test
dec
pop
xor
add
out
pop
cmpsb
loop
cmpsl
loope
pop
push
or
pop
or
ds
jnp
adc
dec
ds
aam
test
xchg
xor
add
inc
or
fwait
xchg
cli
sub
sub
insb
mov
and
inc
sbb
jnp
push
jno
push
xorl
shll
pusha
sub
mov
xchg
cmp
adc
insb
cmp
and
sub
mov
jns
xor
outsl
cltd
adc
sbb
jmp
xlat
lods
jno
cmp
mov
das
cltd
add
jmp
inc
xor
roll
add
jns
shlb
xor
dec
pop
adc
test
dec
fdivs
add
xor
cmp
lahf
out
popf
cmp
sbb
dec
es
out
push
dec
dec
adc
gs
pop
mov
jmp
sbb
int3
push
rsm
push
rorl
ss
fldl
jg
dec
mov
out
shlb
mov
sbb
pop
mov
mov
add
adc
out
or
lea
aas
stos
arpl
dec
inc
pushf
mov
arpl
jno
fisttpl
cmp
sti
add
ss
mov
jno
enter
or
clc
sbb
testl
cmpsb
test
mov
fwait
jecxz
out
adc
jb
inc
mov
rcll
pop
test
sub
mov
add
pushf
cltd
cmc
out
test
stos
push
add
cmc
pusha
add
xchg
ljmp
jb
rclb
imul
cli
fadd
adc
mov
jbe
ficompl
sbb
pop
push
arpl
lret
jle
inc
sub
add
mov
inc
insb
lcall
mov
in
lods
test
ret
mov
std
pop
pop
gs
pop
mov
jmp
es
cld
adc
add
rcrb
sbb
pop
mov
clc
rcl
dec
and
dec
push
inc
sbb
pushf
lods
fsubrs
xchg
or
pop
sub
out
fiaddl
mov
loopne
push
fstl
push
aam
pushf
lahf
pop
mov
repnz
sub
sub
rorl
les
nop
mov
or
rol
gs
push
outsl
sti
and
popf
insb
cmp
aas
sbb
mov
lods
das
negl
fnsave
insb
cs
and
leave
mov
jns
into
pusha
sar
ss
jmp
lds
xchg
or
push
dec
repnz
jmp
frstor
rcrl
mulb
dec
inc
jb
inc
sbb
fstps
jns
popf
add
imul
mov
insb
dec
dec
roll
addr16
jne
sahf
lea
pop
mov
pop
xchg
in
jae
testl
sbb
cltd
shl
mov
push
xor
popa
daa
daa
pop
add
jp
mov
cmp
ja
jg
popa
in
lods
jle
xchg
mov
mov
sub
and
sbb
out
xor
out
jbe
xchg
aaa
xchg
lods
mov
mov
data16
push
aaa
das
repnz
imul
jo
in
xor
insl
jmp
cltd
icebp
add
int3
sti
sarb
xor
clc
repz
jg
fmuls
jmp
fnstsw
adc
push
pop
add
negl
inc
push
fbstp
mov
xchg
sbb
adc
frstor
dec
clc
adc
xor
ds
lock
lcall
inc
ficomps
aad
enter
scas
fistpl
pop
xlat
jb
out
jecxz
or
cmp
test
stos
out
cmp
pop
in
jp
xchg
mov
iret
mov
mov
or
inc
mov
add
subl
or
cmp
dec
xchg
xlat
in
aaa
add
jb
or
and
stos
sbb
cmp
aaa
sahf
aad
inc
insl
call
or
add
leave
ds
or
pop
xlat
adc
cmp
jmp
jecxz
push
aad
cmp
cmp
call
fimuls
mov
ret
cmp
cld
fstl
push
xor
les
mov
lret
das
mov
sbb
adc
pop
out
mov
or
movsb
push
sbb
xchg
daa
xchg
dec
and
rcrb
pop
dec
lea
inc
xchg
xchg
xor
mov
lods
push
cmpsb
mov
cmpsl
cli
xlat
inc
lds
push
inc
call
test
retw
jnp
ss
das
js
test
mov
pop
cmpsb
int3
push
inc
int
or
cwtl
adc
and
test
mov
sub
arpl
xchg
fwait
mov
scas
mov
adc
add
in
imul
insl
mov
pop
mov
inc
jb
mov
jns
xor
xor
clc
mov
subb
decl
js
inc
mov
repnz
sbb
inc
add
scas
mov
je
in
call
ss
mov
cmp
dec
js
roll
daa
mov
and
hlt
and
mov
in
pop
cmp
mov
call
sbb
mov
push
lds
push
popa
push
decl
insb
pop
xchg
js
add
clc
mov
or
je,pn
daa
icebp
mov
test
loopne
es
xor
les
outsl
je
push
aad
push
xchg
sbb
jl
into
or
popa
xchg
push
sahf
adc
iret
icebp
jae
xor
fldl
sub
loope
mov
mov
enter
jle
out
adc
adc
in
push
cmp
dec
test
pop
test
scas
inc
dec
out
and
mov
pushf
jmp
xchg
xlat
xchg
sti
es
mov
cltd
dec
lods
cmp
cli
test
daa
push
add
mov
jmp
in
pop
jge
insb
inc
jnp
sti
nop
xchg
mov
jmp
or
dec
cmp
lea
out
xchg
sub
pop
push
dec
or
adc
mov
enter
lcall
mov
out
jns
jne
lock
jl
mov
adc
lea
xchg
clc
lcall
adcl
int
jecxz
cmp
loopne
lock
and
push
inc
shll
push
mov
fwait
mov
inc
dec
pop
test
and
in
incb
sbb
adc
arpl
xchg
mov
push
add
jge
or
fbld
nop
aaa
push
push
cwtl
cs
xor
or
xchg
lods
mov
shlb
pop
sbb
pop
inc
xchg
test
lock
sub
sbb
into
je
xchg
imul
scas
hlt
add
lds
stc
xchg
scas
repnz
jmp
add
popf
lds
dec
rcr
lods
lcall
idivl
insb
adc
das
arpl
adc
push
aaa
sbb
dec
lret
mov
mov
inc
adcb
add
xchg
imul
aad
push
ja
outsb
cmc
enter
fxch
das
shll
jb
xor
or
push
and
dec
cmp
lret
jecxz
fcompl
clc
lret
or
test
jmp
jle
jno
jmp
inc
fs
mov
int3
loopne
sahf
pop
aad
jno
jp
sbb
pop
jle
jl,pt
mov
adc
je,pn
pop
xor
sti
mov
mov
xchg
push
cmp
inc
insb
out
xchg
mull
xor
rclb
or
inc
inc
mov
mov
icebp
add
pushf
fstpt
loope
adc
dec
cmp
inc
or
ljmp
or
ror
and
loop
incb
adc
mov
inc
add
in
xor
dec
xchg
dec
xchg
das
xchg
js
or
sbb
cmp
cmpsb
cmp
push
repz
clc
add
mov
mov
or
stc
push
sbb
adc
jmp
fcomps
and
cmp
shll
jbe
jbe
ret
add
repz
leave
ficompl
dec
mov
xchg
push
inc
lcall
mov
fisubrs
faddl
adc
imul
mov
sbb
nop
icebp
setae
inc
lret
jle
sahf
scas
xchg
and
test
cmp
cmpb
aam
cmp
and
adc
pop
mov
cmp
jmp
stos
cmp
in
sub
adc
push
leave
addb
dec
ljmp
jne
sub
cmp
addr16
fidivs
movsl
add
call
cmp
cmp
push
test
mov
scas
stc
cmc
outsl
pop
out
pop
aas
bnd
sub
iret
pop
test
sbb
jns
cmp
adc
lahf
lcall
int3
push
gs
lock
in
stos
ret
dec
scas
pop
lcall
cmp
das
mov
fdivr
iret
mov
mov
popf
adc
loop
mov
and
aad
mov
and
jmp
repnz
orw
cli
pushf
mov
sub
push
fdivp
xorl
fwait
adc
push
sahf
and
xor
movsl
pop
jp
mov
pop
mov
shll
mov
lock
jo
mov
out
adc
popf
sbb
or
lock
xchg
cmpsl
xor
pushf
aam
and
cltd
cmpl
push
xchg
and
in
call
jl
push
cltd
ret
cmp
testb
push
icebp
scas
and
inc
ja
jg
jno
jae
ss
xchg
repnz
aad
push
aam
ja
xchg
js
stc
xchg
jmp
mov
xchg
pop
dec
pop
pusha
movsl
leave
sub
lods
rcll
fsubrl
scas
cli
stos
inc
test
hlt
lods
ljmp
fldcw
mov
adc
neg
gs
gs
mov
or
mov
push
movsb
out
call
and
mov
cwtl
movsl
fwait
inc
nop
lods
in
ja
dec
adc
gs
imul
aam
in
or
in
jae
and
pop
jmpw
or
sub
shrl
ja
jecxz
stos
dec
or
in
daa
mov
jg
pop
xor
add
sbb
and
shl
push
jno
jns
xor
jns
in
jle
or
pushf
mov
enter
jp
fimull
and
in
sub
out
fdiv
or
and
mov
jg
push
dec
test
and
cmp
sbb
insb
mov
cmp
hlt
imul
push
or
push
inc
inc
sub
add
and
and
aas
and
mov
mov
pop
movsl
in
int
out
sbb
jmp
adc
iret
dec
cmp
movsl
shl
cmpsb
fimull
inc
and
pop
popf
popf
testb
sbb
mov
push
mov
pop
cs
loop
or
fsubrl
out
cmp
pop
lret
xchg
iret
xor
sub
xchg
ret
daa
hlt
jnp
adc
pop
push
pop
loope
xor
cmp
outsl
add
xchg
inc
mov
add
scas
adc
out
movsb
loop
pop
jno
aas
sbb
xor
xor
sahf
loopne
iret
popa
cmp
movb
arpl
in
xor
mov
or
shlb
aad
call
xchg
clc
pop
add
and
or
cmp
clc
enter
in
pop
adc
ficomps
inc
pop
mov
mov
ficomps
mov
jle
mov
mov
dec
repnz
xchg
cli
mov
lret
dec
loopne
in
xchg
jp
bound
adc
or
fs
rorb
icebp
ss
push
jo
sub
shlb
sbb
les
cmpl
or
in
in
ficompl
xchg
aam
repz
push
sbb
repnz
pminsw
rclb
pop
mov
in
dec
pop
into
out
push
lcall
shll
sahf
xchg
in
xchg
dec
movl
ljmp
sarb
pop
test
xor
jg
sti
push
mov
and
loop
push
push
das
ds
ss
or
mov
test
cmp
mov
imul
icebp
mov
fs
jg
push
es
mov
mov
insl
push
sbb
sub
mov
icebp
cwtl
adc
cmpsb
sub
sub
pop
aam
fs
jo,pt
aam
mov
pop
cmc
enter
jl
daa
inc
daa
lds
dec
je
into
lcall
ss
cltd
arpl
pushf
mov
in
insl
das
mov
mov
fsubs
cs
mov
add
mov
add
daa
jno
test
xlat
je
pop
or
xchg
mov
call
scas
xlat
loop
sub
rcr
jne
mov
inc
es
xor
ret
rorl
lods
inc
hlt
dec
cmp
movb
scas
insl
pop
mov
divl
pop
stos
data16
callw
fwait
add
pop
pop
xchg
mov
xchg
jge
mov
das
mov
mov
outsb
test
aas
xchg
xchg
scas
cltd
mov
xchg
mov
inc
xchg
test
push
push
pop
adc
pop
and
pop
add
pop
add
dec
les
pop
pop
xchg
shlb
fimull
mov
pop
scas
inc
jbe
jno
loop
jmp
bound
arpl
sbb
dec
mov
lds
pop
and
das
mov
dec
rcr
mov
lret
xchg
add
sub
fs
jbe
addr16
xor
cwtl
mov
mov
mov
push
cld
cmp
add
inc
sbb
mov
and
sbb
or
or
stos
je
das
pop
dec
fiadds
pop
mov
insl
mov
xchg
xor
pop
orl
jns
imul
xchg
or
sub
insl
xor
js
lods
xchg
mov
and
mov
mov
sbb
jg
or
cmp
test
pop
mull
adc
not
mov
cli
test
push
push
mov
adc
inc
repnz
cs
and
sbb
flds
adc
pusha
movsb
ljmp
jno
sarb
ret
movsl
shlb
inc
xchg
jl
repnz
addr16
push
fcomi
or
push
cltd
cmp
lret
cltd
shll
dec
es
jno
popf
or
cmp
push
bound
jge
nop
scas
in
daa
adc
fs
pop
cmp
je
mov
hlt
enter
jl
out
mov
dec
sub
ja
add
or
enter
add
bound
sub
insb
pop
aaa
lret
jo
imul
xchg
popf
jmp
push
je
mov
inc
int
push
stos
mov
inc
cmp
mov
test
xor
and
scas
mov
cmc
fs
je
xor
outsl
pop
and
xchg
mov
shll
cli
out
jo
dec
mov
mov
adc
aam
xor
scas
out
aaa
jnp
imul
imul
mov
fcmovnb
cmpsb
pop
or
aas
pop
lahf
std
stc
xchg
mov
sti
sbb
mov
int3
pop
jg
ret
or
mov
mov
inc
cmpsb
stos
xor
jnp
ljmp
push
inc
dec
mov
enter
sub
mov
pop
test
leave
pop
lret
aaa
mov
iret
nop
sub
adc
sahf
push
and
xor
cmp
mov
icebp
dec
and
cmp
push
bound
push
daa
test
push
push
cli
vdivss
data16
add
fstpt
jge
imul
pop
inc
xchg
xor
cmp
lods
shrb
mov
mul
sub
daa
jle
sbb
pop
int3
ss
test
cltd
call
jle
nop
stc
inc
lods
jmp
negb
mov
outsl
jge
xchg
sti
addr16
xorb
or
imul
push
in
cmc
inc
insb
mov
jge
sub
mov
repnz
std
sbb
mov
scas
pusha
sbb
ss
mov
dec
std
out
xor
fimuls
sub
call
adc
btc
ss
sub
cmp
test
push
inc
pop
jmp
jae
testl
sub
repz
loope
pop
inc
mov
in
fisubrs
pop
movsl
test
arpl
adc
in
into
sub
push
pop
xchg
jnp
scas
adc
insl
popa
arpl
sti
cmpsl
js
jecxz
dec
mov
pop
jl
adc
in
or
test
stos
outsl
mov
fcmove
jmp
addb
jae
in
jbe
push
in
pushf
rol
les
pop
rcrl
push
cmp
xlat
cltd
push
pop
xchg
testl
imul
fnstenv
jmp
dec
xchg
loop
or
mov
sub
ds
push
test
add
cmp
dec
xor
mov
inc
mov
xchg
dec
test
adc
lds
lcall
xor
sub
sbb
roll
jnp
or
mov
in
ret
std
test
and
ljmp
jo
mov
inc
dec
data16
mov
jae
mov
inc
in
mov
or
dec
int
nop
mov
cmc
jns
sbb
clc
sub
aas
mov
adc
loope
dec
pop
sub
outsb
sub
xchg
je
loope
test
scas
dec
outsb
movsl
inc
paddb
push
and
push
fimull
jmp
into
int3
mov
dec
dec
mov
mov
fldt
push
popa
adc
aam
or
insb
mov
enter
out
mov
sbb
mov
xor
pusha
mov
fsubrs
outsl
mov
out
rorl
mov
nop
xor
scas
cmp
dec
mov
int
jne
mov
xchg
xchg
mov
add
mov
inc
xchg
es
pop
call
xchg
jl
hlt
leave
add
pop
jb
andl
mov
cmp
data16
lahf
fldt
mov
test
icebp
insl
cmp
movsl
mov
insb
notb
dec
mov
sub
jg
pop
dec
psubsb
shll
int
jae
adc
fcmovbe
aaa
dec
jp
mov
add
inc
ret
scas
dec
icebp
jne
das
adc
std
or
jge
aad
inc
sti
fadd
fimuls
cmpsb
dec
add
push
jg
jns
fmull
pop
cmpsb
add
and
xchg
clc
sbb
fdivrl
lds
out
push
out
xor
imul
fwait
fwait
jle
and
cmp
push
cmp
lods
push
cmp
mov
mov
pop
icebp
add
test
out
xor
int
popa
or
mov
sbb
mov
lcall
sbb
sub
mov
rorl
and
mov
je
jns
sub
fdivrl
push
popf
gs
rcrl
xchg
inc
mov
les
into
mov
push
xchg
fwait
xchg
add
stc
xchg
or
inc
or
adc
movsl
sub
pop
rcrb
not
out
push
insl
sub
or
pop
call
inc
sub
mull
jb
push
dec
mov
stos
jb
clc
push
pop
scas
stos
mov
sub
fstpl
repnz
sbb
fcom
mov
or
xchg
mov
sbb
test
in
push
fbstp
cmp
dec
js
mov
test
mov
mov
pop
add
scas
jmp
scas
lds
mov
dec
inc
aaa
call
int3
jb
enter
dec
add
sbb
dec
sub
je
cmp
or
ljmp
ss
xor
ja
and
inc
sub
mov
aaa
jns
in
jp
dec
cmc
xchg
fsin
pop
dec
mov
and
insb
mov
fistps
or
or
bound
cmp
call
into
sbb
rcl
sbb
pop
fwait
test
xchg
pop
das
push
cmp
in
push
bswap
jle
dec
or
int
cmc
shll
in
mov
sahf
pop
mull
es
incl
sahf
js
pop
xorb
hlt
hlt
pop
mov
inc
pop
mov
andl
jns
mov
pop
xor
xchg
push
shl
je
lret
std
mov
push
mov
test
fs
push
mov
in
lret
shlb
repz
or
lods
iret
xchg
mov
mov
ja
mov
sbb
int3
sbb
imul
cmpsl
push
xchg
icebp
xchg
mov
fisubrs
mov
mov
push
sbb
adc
fwait
pop
stos
in
jle
outsb
mov
je
and
mov
fimull
imul
in
or
add
xor
sub
sub
adc
cmp
jg
lcall
sub
mov
dec
push
jg
lods
fsubl
ljmp
jecxz
mov
jae
mov
icebp
jl
dec
push
dec
scas
mov
xor
xchg
out
loop
mov
addr16
push
movaps
push
mov
or
bsf
lahf
mov
cld
inc
cld
ret
push
adc
ret
mov
push
jnp
pusha
sub
jnp
add
mov
pop
imul
xor
cli
lret
sti
stos
lret
sbb
pop
xchg
loope
adc
sahf
in
mov
stos
cmpsl
jno
test
ficoml
and
out
ret
mov
xor
or
pop
out
bound
roll
adc
scas
sub
adc
ds
jl
cli
cld
rcrl
ja
adc
mov
mov
loop
lock
cmpsl
popf
cld
bnd
cmpsb
xlat
pop
mov
ds
pushf
sub
mov
inc
outsl
push
mov
adc
cmp
test
inc
lea
and
xor
les
or
es
rcll
jge
pop
lods
pusha
pop
inc
loopne
mov
cmp
sub
inc
dec
insl
mov
and
dec
cmp
mov
cmp
push
push
stc
loop
pop
daa
mov
dec
jmp
orb
jge
inc
lahf
stc
cmp
into
stc
mov
fnstcw
pop
or
dec
mov
jl
mov
jne
lahf
pop
add
scas
adc
sahf
sbb
jmp
xchg
aaa
mov
sub
call
lods
bound
cmp
les
xor
loop
fucomp
adc
or
mov
mov
sub
jl
loopne
cmp
mov
or
aad
jmp
add
xor
inc
jl
inc
and
enter
sub
clc
sbb
fidivrl
add
mov
jle
mov
rcrb
jnp
sti
divb
mov
jle
pop
in
mov
aad
je
js
iret
mov
inc
int
stos
or
add
sti
push
aam
sbb
push
lock
push
add
add
sbb
stos
pop
in
or
jmp
iret
es
sarl
xrelease
xchg
sub
mov
jbe
in
push
fbstp
mov
repz
sub
push
call
pop
rcrl
push
pop
sbb
mov
repz
clc
fxtract
inc
into
and
pop
add
stc
out
jae
jl
mov
sub
jp
push
push
int3
ret
push
inc
xor
mov
clc
in
xor
xchg
sub
pop
jbe
pop
sti
lcall
xchg
icebp
aas
or
ret
cmp
xchg
aas
jmp
pop
add
in
mov
aad
inc
mov
adc
daa
mov
out
cmp
cmp
sbb
loopne
dec
dec
jg
push
fwait
movsl
and
shlb
mov
in
lret
push
xchg
in
stc
jb
pop
mov
adc
lcall
mov
pusha
orl
cmp
mov
jns
sub
sahf
cmp
aad
neg
mov
lods
fwait
stos
std
cmp
or
outsb
cmpsb
es
cmpsl
sub
or
lock
scas
imul
pop
xchg
addl
push
xor
adc
xchg
out
insl
jnp
enter
push
sbb
jge
sub
pop
repz
frstor
into
xor
add
inc
cmpsb
jmp
in
fdivrs
xchg
mov
dec
pop
pop
mov
es
es
cld
push
insl
sub
mov
adcl
js
and
notb
pushf
lods
das
std
jp
sub
cmpsb
mov
mov
fisubrs
pop
adc
mov
inc
jg
fiaddl
xor
jae
pop
scas
in
pop
mov
add
cmp
in
mov
or
jno
lds
jl
sbb
outsl
mov
mov
leave
daa
pop
push
imul
or
stc
outsb
mov
add
sub
mov
ja
push
xchg
mov
sarb
inc
popa
sbb
xor
fsubr
add
fcmovb
push
sbb
jae
movsb
xor
in
nop
into
sbbb
cmpsl
push
cmc
and
pop
out
and
pop
xor
or
cld
shlb
ffree
mov
cmp
mov
leave
mov
loope
dec
cltd
xor
push
sbb
ret
sbb
mov
les
xor
insb
xor
std
imul
jae
cmpsl
not
repnz
jo
xlat
andb
xchg
dec
mov
dec
dec
jne
mov
push
into
popa
push
pop
sbb
mov
lock
jb
pop
sbb
add
stos
sub
dec
pop
push
ss
popf
and
adc
xor
mov
mov
push
sbb
mov
andl
insl
lret
insb
mov
xchg
pop
cli
icebp
imul
inc
inc
andl
stos
mov
mov
push
scas
repnz
stos
lock
adc
faddl
sbb
and
push
and
js
lds
jle
dec
sbb
pop
xchg
pop
dec
das
and
and
shrb
ja
xchg
ljmp
adc
cwtl
xor
rcll
fs
inc
mov
dec
cmp
shl
xor
insl
cmp
xchg
push
out
and
daa
cs
cwtl
xor
out
test
sbb
and
es
fldcw
insl
pusha
mov
test
cltd
inc
lds
xchg
test
out
incl
stos
rorb
adc
push
sbbb
pop
inc
xchg
clc
pop
std
mov
push
xor
push
lods
sub
pop
mov
pushf
mov
pusha
jns
xor
adc
sub
int
pop
sbb
pop
mov
pop
iret
roll
stos
push
stos
enter
stc
add
ds
jl
aam
sub
push
fcoms
or
lea
stc
mov
push
jo
jle
inc
xor
jl
jmp
lds
divb
xor
inc
xlat
pcmpeqw
or
sbb
xor
mov
outsl
fidivl
imul
or
add
leave
ja
icebp
shll
or
cltd
jmp
sbb
xor
outsb
mov
adc
pusha
fisttpl
sub
clc
or
jle
inc
ljmp
addr16
test
mov
out
jno
mov
fs
fdivrs
push
add
cmp
and
loope
and
inc
mov
add
lock
xlat
and
mov
rcll
push
rcl
mov
add
shlb
cmpsl
decl
adc
and
pop
mov
jb
mov
xchg
es
loopne
imul
testb
pop
dec
xchg
lds
pusha
xchg
xor
sub
out
or
mov
iret
push
loope
lret
fmuls
and
sbb
cmc
das
cwtl
sbb
pop
aad
fisttps
sbb
js
inc
push
jl
inc
call
call
cs
xor
sub
aam
pop
cltd
pop
push
movsb
stos
dec
jp
xchg
adc
cmpb
add
cwtl
rcr
fisttpl
add
xor
ret
add
push
dec
dec
pop
fsubrl
jmp
dec
mov
insb
push
xor
and
rcr
into
mov
fwait
adc
mov
pop
es
dec
xchg
nop
les
or
js
fwait
mov
ds
shlb
lret
mov
mov
jbe
bound
xacquire
aaa
enter
adc
out
test
clc
cs
sbb
mov
pop
adc
in
push
inc
pop
or
lret
std
adc
pop
push
or
sbb
lcall
sub
mov
mov
inc
je
add
xchg
sarl
sub
shlb
mov
out
dec
xor
inc
mov
mov
ja
or
adcb
shrb
shl
rcll
ja
xchg
int3
adc
jmpw
mov
loope
int3
insl
add
repz
sub
test
jl
inc
jp
sbb
and
xor
out
icebp
xor
cmp
stos
jns
lds
dec
and
jp
outsb
sbb
xorl
add
cmp
mov
mov
xchg
adc
pop
xchg
adc
popf
cmpb
loope
jle
cld
testl
xor
cmpsb
xor
out
xor
imul
mov
pop
scas
mov
std
adc
out
or
bound
cmp
std
push
subb
mov
cmp
movsb
lods
fcomp
lret
test
insl
adc
mov
pop
dec
lods
sbb
fistpl
pop
pop
cmp
adc
les
fbstp
dec
push
mov
add
jmp
shlb
test
or
in
das
in
or
inc
ss
out
ffree
push
adc
xchg
sarl
call
mov
adc
cmp
popf
push
js
or
repnz
pop
inc
mov
dec
into
jge
push
dec
arpl
cs
fcmovnbe
test
pop
mov
addb
lods
pop
dec
xor
stc
repnz
jbe
pop
rclb
add
dec
aaa
mov
jle
and
cmp
lahf
ss
outsl
jg
cmp
inc
movsl
xchg
push
mov
dec
ljmp
add
into
cli
mov
mov
inc
test
setno
push
neg
aaa
movsl
in
in
or
cs
cmp
push
xchg
jb
jbe
mov
add
clc
mov
mov
jp
je
mov
mov
orb
testl
sbb
dec
das
push
mov
pop
sub
pop
xchg
orl
gs
adc
inc
sbb
mov
punpckldq
arpl
jb
pop
dec
mov
imul
inc
in
lret
int
mull
scas
sbb
and
mov
mov
push
add
js
mov
pop
pmaxsw
sbb
dec
shll
les
push
mov
adc
invd
and
daa
jne
add
out
sbb
xor
ret
jnp
sbb
xor
filds
pop
mov
add
pop
leave
pop
addr16
pusha
mov
sbb
pop
pop
adc
push
pop
and
loope
movsb
out
xchg
popa
cmpsl
mov
aaa
xor
out
sbb
mov
loopne
xchg
imulb
xchg
mov
mov
cs
mov
xor
pop
fcomps
cmc
sbb
cltd
mov
incl
mov
imul
sahf
xor
dec
pop
mov
jmp
push
test
rorb
inc
dec
xor
subb
sbb
jg
test
in
pop
adc
inc
sahf
mov
mov
das
push
out
imul
mov
adc
or
cmp
cmpsb
jo
mov
jge
mov
icebp
fildl
popf
data16
aaa
inc
or
mov
aas
lret
lahf
xchg
cmpsb
lods
fiaddl
les
insb
xlat
dec
je
fisubs
clc
sub
andl
jns
add
push
addb
push
inc
loope
pop
loop
cwtl
int3
adc
loope
xor
jecxz
dec
lret
xor
xor
xchg
ret
filds
pcmpeqb
mov
jnp
cwtl
jp
push
pop
mov
mov
fsubl
fs
divb
fcoms
add
jnp
push
adc
fldl
and
arpl
mov
es
cmpsl
incb
push
add
adc
jbe
bound
pop
cmp
cwtl
mov
xor
inc
and
into
pop
addr16
gs
jmp
inc
add
popa
lahf
cmp
push
enter
adc
xlat
repz
mov
pop
outsb
out
repnz
loop
pop
hlt
cmpsb
pop
push
adcb
loope
jl
hlt
jb
int
mov
mov
pusha
les
gs
jle
mov
movsl
std
push
mov
mov
out
inc
inc
clc
add
inc
out
shl
mov
xchg
jl
push
xchg
xchg
flds
xchg
js
incb
xor
nop
lahf
jno
loop
push
hlt
aam
adc
sti
popf
outsb
roll
enter
jecxz
cs
push
mov
pop
addr16
add
incb
adc
movmskps
dec
stos
dec
jge
sbb
jnp
fs
cmp
inc
adc
mov
roll
cmp
jge
xor
pop
dec
mov
sbb
out
lods
jp
ds
xor
jne
inc
stos
jns
adc
leave
cmp
xor
mov
lds
mov
or
xor
idivl
popf
cmc
and
test
leave
xor
fwait
iret
gs
jge
loop
test
xor
aas
xchg
aad
xchg
ss
fucom
mov
jo
roll
sub
push
imul
mov
addr16
sbb
push
pop
cmc
xchg
dec
push
xorb
pop
sbb
push
xchg
pop
cld
stc
pop
push
inc
popf
mov
adc
cltd
cltd
popa
shrb
dec
and
sbb
fdivrl
testl
loop
loope
add
pop
push
inc
xchg
in
mov
lret
lret
mov
sub
xor
cmp
cmp
rcll
lds
mov
or
mov
push
aad
test
add
shlb
mov
je
fistpll
push
xchg
popa
setb
clc
lret
inc
dec
loopne
fucom
push
popa
fwait
repnz
dec
lods
sbb
repz
add
js
jmp
mov
dec
mov
fmul
lahf
jp
ret
adc
jmp
xchg
mov
mov
push
std
mov
xchg
fwait
out
mov
popa
pop
push
xor
pop
mov
mov
scas
cmp
sub
add
loope
cltd
sbb
jbe
insl
add
inc
in
inc
outsb
test
sub
mov
inc
push
inc
jle
stc
iret
in
inc
mov
lods
sbb
cmp
imul
ret
int
or
adc
ret
push
mov
and
imulb
xchg
jnp
jmp
test
sub
dec
jecxz
jno
decb
aaa
sub
cld
mov
dec
popf
jmp
lcall
and
loopne
repnz
jno
mov
push
push
dec
in
adc
and
xchg
jle
mov
enter
lds
in
jmp
les
sbb
mov
js
out
mov
xlat
inc
in
mov
fildll
xor
mov
sub
pop
jle
push
shrb
jno
xchg
out
mov
and
cmp
sub
sahf
pop
in
push
lret
pushf
cltd
test
push
xchg
or
fs
jmp
mov
mov
push
dec
adc
cmpsl
and
aaa
push
xchg
out
jne
fwait
or
neg
int
xor
fnstcw
mov
insb
sahf
bound
into
and
cmp
stos
int
std
outsb
xchg
data16
pop
mov
add
pushf
push
bound
push
xchg
xchg
fsubrl
pop
mov
scas
hlt
out
cmp
push
jp
cmpsb
out
nopl
jge
aad
fdivr
test
mov
sbb
lret
mov
hlt
pusha
imull
test
scas
fcmovne
dec
xor
cmp
call
enter
push
inc
fsubs
scas
push
xchg
bound
data16
xchg
dec
dec
pop
test
fsqrt
nop
icebp
pop
jle
call
out
out
ret
mov
push
sub
js
mov
sahf
inc
addr16
lods
inc
loop
cmpsb
cmp
out
dec
popf
or
aaa
pop
aaa
mov
push
cli
sub
lods
jmp
out
ficoms
cmp
xchg
and
ficomps
lds
xchg
xor
sub
jbe
mov
mov
ret
arpl
cmc
into
or
add
lret
stc
jle
mov
jo
xchg
test
mov
negb
mov
dec
rcr
mov
adc
ja
lock
ss
xor
lahf
aaa
adc
dec
mov
les
pop
fwait
in
es
push
dec
pop
add
push
push
aad
add
jmp
fs
stos
jb
aam
and
gs
cmpsl
into
cli
pop
dec
or
xor
jb
das
pop
mov
pushf
hlt
ret
push
inc
ret
dec
xchg
clc
dec
and
mov
stc
sub
mov
mov
push
sbb
add
pop
pop
adc
jnp
xchg
clc
in
repnz
mov
in
and
loopne
movsl
sahf
clc
out
adc
gs
pop
jns
jp
add
lcall
or
popf
push
imul
push
sub
cli
mov
mov
cltd
mov
ja
adc
out
sbb
push
dec
cwtl
imul
and
insl
frndint
fcoms
jbe
cmp
pop
push
hlt
mov
push
ss
sti
das
data16
dec
int3
sub
and
repnz
pushf
jmp
inc
or
cli
mov
subl
fidivrs
in
and
add
pop
sub
push
movsb
aas
push
inc
cmp
sub
dec
mov
in
mov
xchg
cmpsw
ret
imul
cld
jbe
mov
mov
xor
rorb
adc
adc
les
pop
mov
scas
mov
push
xchg
dec
and
jp
aaa
jmp
lcall
lds
cltd
aas
sub
xchg
push
or
mov
cmp
lods
xchg
dec
sub
mov
sbb
xchg
in
xor
sarl
dec
div
add
arpl
movsb
xchg
pop
inc
popa
out
jnp
lea
pop
mov
fstl
sub
dec
clc
ja
and
or
adc
or
icebp
add
stc
add
jmp
jae
cmc
push
push
movaps
push
lods
or
jecxz
inc
xchg
test
adcl
fsubrp
out
cmp
aad
sahf
dec
fsubs
mov
mov
daa
fnstcw
mov
cmpsb
mov
add
and
dec
cltd
fdivrl
movsb
inc
mov
mov
sbb
or
sbb
adc
adc
inc
pop
jo
test
pusha
push
arpl
test
imul
xchg
rcrl
push
add
mov
or
dec
push
popa
xlat
arpl
outsb
mov
mov
imul
adc
in
icebp
cwtl
cs
fstl
inc
popa
aaa
cs
movl
xor
rorb
lret
dec
mov
push
ss
insb
xor
inc
jp
xchg
out
or
aam
pop
mov
xor
inc
xchg
jge
dec
repnz
mov
push
loop
or
mov
or
sbb
xlat
cmc
test
lret
xchg
lods
scas
lahf
shrb
fisubl
push
iret
xor
jge
mov
sub
push
adc
or
push
sub
lock
or
xchg
pop
fs
rorl
mov
int3
data16
pop
jbe
fimuls
adc
sub
or
push
mov
xchg
add
and
les
jmp
or
jno
dec
xor
sbbl
imul
addr16
ljmp
out
add
adc
xchg
jecxz
es
mov
mov
mov
jecxz
inc
mov
loopne
sbb
and
iret
neg
jl
imul
das
faddl
mov
negb
lret
cld
push
data16
xchg
addb
lods
xor
xchg
arpl
xchg
mov
lods
scas
or
mov
sbb
nop
lds
outsb
jne
adc
cmpsb
jle
push
jnp
cltd
adc
add
into
rol
movsb
cmp
jnp
addl
sahf
loop
inc
outsl
cmp
sub
pop
mov
xor
jle
fadds
es
loope
arpl
push
lds
xor
adc
cmpsb
dec
jnp
arpl
push
loop
daa
xor
mov
ss
and
inc
adc
lds
mov
mov
jle
out
rorb
mov
mov
popf
inc
iret
insl
sub
iret
dec
pusha
adc
cmpsl
pop
std
mov
mov
add
out
iret
mov
aaa
add
arpl
insl
add
mov
push
mov
daa
jo
pop
insl
push
sbb
lcall
dec
in
jno
or
cmc
push
cld
mov
pop
push
mov
mov
aam
add
jle
pop
ja
movb
pop
inc
pop
lahf
in
and
and
mov
enter
lods
addr16
push
cmp
jae
inc
sarb
jno
pop
push
imul
mov
cld
sub
mov
jae
mov
idivl
adcb
inc
aas
lods
aad
sbb
cli
xchg
cmc
lds
sbbb
or
pop
push
ljmp
mov
jle
and
push
lret
gs
add
pop
mov
and
in
outsb
cmp
jp
inc
out
inc
inc
mov
adc
and
pop
pop
shlb
int3
movsb
push
je
sbb
int
inc
movsl
hlt
sub
insb
jns
xchg
sbb
adc
xor
sbb
pop
xor
xor
enter
dec
mov
or
inc
xchg
dec
dec
and
popa
sub
add
cmc
idivb
dec
mov
shlb
in
aas
mov
push
and
ss
imul
rcr
xchg
dec
lcallw
cmpsl
sahf
jno
ret
adc
in
ds
inc
rcrl
test
xor
mov
or
or
loope
mov
xlat
scas
and
sbb
sub
stc
and
adc
and
adc
out
sbb
pushl
mov
data16
xor
dec
xor
jo
pop
adc
shrb
pop
sbb
push
jecxz
fidivl
xchg
xchg
push
icebp
mov
fimull
pop
js
pusha
xchg
bound
arpl
cltd
and
and
jle
jb
xorb
stc
test
icebp
imul
sbb
aas
hlt
xor
loope
scas
pop
stos
popa
xorl
cmp
adc
jmp
cmpxchg
pop
push
icebp
addb
cmpsl
jp
mov
push
inc
push
aas
pop
push
lcall
imul
aas
xchg
push
inc
jmp
push
inc
push
jb
enter
aaa
cmp
xchg
push
test
push
mov
pop
inc
imul
xor
dec
adc
jno
xchg
pop
fwait
jle
pop
mov
sub
jp
neg
fcom
popa
movntps
adc
sub
jp
xchg
enter
popa
jae
repnz
sbb
or
loope
adc
dec
pop
add
jl
sbb
rorl
vmovdqu
jnp
mov
fisttpl
jo
repz
mov
dec
inc
sub
push
mov
fsubl
int3
test
adc
mov
shll
fmul
jbe
inc
push
xlat
and
int3
jl
push
sbb
pop
movsl
shll
push
call
or
outsb
pusha
xchg
and
or
and
jmp
sub
xchg
xor
sahf
je
test
dec
daa
cld
adc
sti
inc
mov
fnop
out
in
loope
ret
sub
cmp
leave
mov
adc
add
pop
adc
sub
push
fisttpll
jle
push
xlat
imul
js
adc
imul
test
insb
inc
sub
pop
add
xchg
lods
fs
jno
imul
aaa
dec
jb
mov
add
in
popf
js
xchg
xchg
insl
mov
sbb
fcomi
cmp
cmp
testb
or
outsb
movsb
add
jns
out
rcl
inc
push
scas
jo
xor
iret
jmp
adc
dec
test
jo
shll
mov
mov
gs
hlt
push
mov
xchg
ss
int
cmp
xchg
or
hlt
or
int3
clc
adc
and
repnz
push
adc
enter
pop
mov
push
inc
push
out
sti
pop
cwtl
jne
out
sub
sbb
add
pushf
test
push
outsl
xchg
jl
imul
fidivs
mov
add
test
jle
lret
shll
or
leave
adc
or
fsubl
push
xchg
xchg
and
arpl
in
or
das
sahf
mov
dec
int3
pop
mov
lahf
push
dec
inc
lret
sbb
test
mov
pop
iret
or
inc
mov
mov
ret
sub
mov
nop
push
or
jle
pop
push
jp
ret
lret
insl
lret
mov
push
shr
call
loopne
dec
and
sub
cs
cmp
dec
xchg
in
fstps
and
sbb
pushf
ret
pop
in
mov
add
mov
fwait
daa
sub
and
mov
out
mov
mov
cld
mov
xor
popa
mov
sub
xchg
fadds
scas
pop
or
push
test
add
hlt
lahf
lock
outsl
pop
pop
cmp
or
jnp
push
inc
xchg
mov
les
mov
ds
jge
and
hlt
cli
fcoml
or
add
inc
pop
adc
xchg
pop
loopne
mov
jmp
addr16
sbb
fcmovnb
mov
ds
pop
repz
jno
pop
dec
fcomps
shrb
repnz
or
out
ljmp
outsb
arpl
out
pop
dec
jmp
inc
or
rorb
dec
mov
loope
cs
or
dec
mov
jmp
emms
leave
xor
jbe
dec
std
sub
sub
fsubs
jns
sahf
lock
sbb
popa
int
das
sbb
call
sub
in
sbb
lds
loope
and
sarl
sub
popa
xor
sbb
mov
pop
lea
xchg
ret
cmp
subps
je
jo
lret
mov
sbb
out
lock
int3
popaw
mov
flds
xchg
dec
push
xor
popw
xchg
mov
sbb
out
loope
out
stos
xor
pop
imul
les
or
ret
push
dec
dec
cli
int3
xchg
insb
shll
movsb
fldcw
sarb
mov
imull
loopne
ljmp
lahf
mov
push
xchg
mov
xor
stc
or
mov
dec
xor
pop
cli
loop
out
or
adc
mov
cwtl
sub
adc
test
ja
push
movsb
pop
xchg
out
gs
setb
iret
pushf
mov
out
flds
mov
xor
dec
mov
mov
imul
mov
sbb
iret
shlb
data16
sub
jg
sub
sti
cmc
sbb
ds
jle
inc
mov
sbb
out
push
cwtl
mov
xchg
jg
popf
icebp
hlt
pop
pop
test
cmp
dec
add
clc
popa
addr16
movsb
aas
sub
popf
cmp
les
scas
aam
push
call
push
sbb
cmpsb
mov
imul
mov
sbb
out
fxch
lock
cmpl
in
mov
inc
test
adc
xor
shl
add
popa
xchg
addr16
fwait
sbb
clc
movsb
mov
mov
adc
pop
dec
pushl
pop
jge
or
push
orb
in
hlt
mov
andb
push
sub
push
inc
fsts
mov
mov
lods
mov
out
adc
lret
outsl
les
xchg
andb
and
xchg
cmp
pop
add
push
cwtl
fcoml
jo
inc
shrl
push
sarb
mov
xchg
cs
dec
sub
arpl
or
mov
xor
push
xor
fsubrl
stos
jmp
fnsave
xchg
jl
out
xor
fs
pop
and
fwait
and
sahf
mov
mov
mov
cmp
dec
sbbb
mov
jecxz
dec
adc
das
mov
sarl
xchg
pushf
mov
je
adc
out
adc
in
int3
bound
mov
mov
jno
test
lcall
sub
femms
xchg
lahf
cltd
aam
movsb
icebp
and
mov
sub
mov
cmp
lret
jae
and
xchg
xlat
xor
insb
fwait
or
das
mov
aaa
ds
inc
fscale
clc
cmp
outsb
and
sbb
loop
shl
es
lcall
dec
cmp
pusha
scas
sbb
mov
call
add
lds
scas
xchg
sbbl
outsl
outsl
inc
push
ret
xchg
jae
jle
lods
and
push
jae
xchg
pop
adc
adcl
pusha
inc
push
cmp
jnp
es
cs
add
cmpsb
jg
mov
in
or
sbb
and
lods
sub
push
rolb
adc
xlat
stos
es
push
cmp
mov
aad
int3
mov
sub
mov
or
clc
sub
push
jae
fsubs
arpl
scas
jb
xchg
push
jge
xchg
inc
imul
in
call
push
jbe
mov
test
fdivl
cmp
inc
scas
rol
jge
in
test
scas
fwait
mov
lret
sub
or
cmp
xor
jmp
pop
shl
mov
cmp
ljmp
mov
jns
cmp
mov
sbb
fidivs
pushf
in
aad
sbb
push
out
push
mov
lret
adcb
stc
sub
movsl
adc
popa
jns
jecxz
and
dec
xor
mov
bnd
adc
rclb
sbb
pop
and
or
jb
sar
and
xchg
mov
inc
or
and
pop
fidivl
xchg
push
aam
ljmp
inc
testb
push
and
lods
cmp
mov
jge
cmc
sub
scas
adc
adc
mov
mov
insb
ljmp
outsl
jecxz
mov
stc
dec
or
inc
adc
fnstsw
aam
out
mov
aad
add
xor
loopne
sub
mov
js
testb
mov
shl
lea
xor
bound
clc
xor
add
pop
sbb
ljmp
in
xchg
in
ds
push
mov
sub
scas
mov
inc
fsubrl
dec
xchg
push
lea
call
fiaddl
mov
push
xchg
mov
mov
sahf
or
or
jae
dec
and
sub
shll
lds
pop
sub
icebp
lcall
or
sbb
out
mov
pop
cmp
cli
loop
lahf
cmp
mov
fnstcw
adc
adc
dec
jmp
ja
push
pop
mov
das
sbb
xchg
rcll
insb
lahf
daa
out
test
push
adc
rcl
std
push
fidivrl
pop
outsl
sti
lret
call
adc
cwtl
mov
fsubs
jne
mov
inc
cmpsb
imul
jns
out
stos
fcompl
js
clc
ror
dec
inc
push
das
or
inc
cld
add
cmp
ret
pop
inc
scas
int3
aas
jecxz
mov
mov
inc
mov
out
or
sbb
push
xchg
movsb
push
decl
pusha
dec
cmp
sti
mov
cmpsb
cmp
mov
cltd
adc
pop
push
push
movsl
dec
in
jge
in
fimull
mov
lds
jnp
loope
in
shlb
push
xchg
dec
push
jbe
out
sbb
les
or
jb
jne
xchg
jns
inc
or
into
mov
inc
mov
push
mov
inc
lods
xchg
push
inc
xchg
repnz
mov
pusha
lret
lret
add
cs
xchg
popf
leave
mov
lods
aam
jmp
mov
and
out
push
and
aas
stos
mov
jge
out
adc
xor
mov
std
and
imull
mov
dec
fs
cs
clc
fisttps
popf
cwtl
and
out
int
ja
rolb
jbe
xor
jnp
imulb
dec
mov
mov
sub
jg
int
loop
aas
dec
add
repz
adc
sarl
pop
mov
pop
add
lock
sbb
sub
mov
ja
out
cli
sahf
call
dec
xor
xchg
mov
or
xor
ja
lcall
and
lds
jge
sbb
xor
push
fiaddl
stos
sub
mov
test
test
in
and
iret
pop
insb
popa
divl
in
fdivrl
xchg
insl
mov
call
mov
xchg
pop
lods
lods
jae
lret
sub
mov
dec
xchg
ret
sub
pop
pop
mov
into
sbb
jbe
aaa
xchg
nop
lret
sub
les
iret
cmpsl
mov
ja
and
add
xchg
add
mov
stos
add
mov
dec
jne
movl
bound
and
adc
pop
insl
or
or
fs
mov
push
icebp
test
add
inc
dec
and
xor
insb
mov
lcall
rcr
xchg
or
lss
push
repnz
sub
lods
xchg
pop
or
mov
arpl
fwait
xchg
mov
cmp
mov
rcll
cmp
mov
cltd
daa
scas
push
xchg
lock
scas
pop
sete
pop
cltd
and
inc
loope
dec
cmp
add
outsb
cmp
loop
and
bnd
jp
ja
cmp
sub
cld
int
sbb
inc
lahf
imul
xlat
pop
ret
das
js
push
lds
fnstenv
enter
pop
ror
fdivl
test
dec
sub
sub
jecxz
subb
movl
bound
sbb
loopne
inc
xchg
and
mov
dec
lret
cmp
mov
xlat
ja
adc
pop
lods
inc
lock
sbb
mov
outsl
out
movsb
mov
fcoml
jp
and
pop
pop
fisttpll
xor
pop
cmpsl
loope
lea
ret
mov
ljmp
mov
mov
cmp
cld
xlat
out
and
inc
std
cwtl
das
and
adc
mov
mov
ljmp
jo
mov
pop
and
das
popl
xchg
in
jae
mov
xor
decl
aaa
cmp
adc
divb
jnp
aaa
fmuls
pop
sub
mov
adc
inc
adc
enter
out
bndldx
arpl
jge
int3
iret
jge
sub
sbb
cmp
dec
mov
push
rcrb
rcl
xchg
lods
repnz
mov
popa
out
pop
cld
mov
jnp
jl
push
aam
or
xchg
in
inc
cmp
jg
aaa
mov
test
push
mov
inc
add
outsl
push
and
dec
lock
stos
hlt
dec
jecxz
in
cmp
movsl
and
into
je
mov
loop
loop
nop
sub
mov
mov
enter
pop
jae
out
inc
pop
cltd
inc
iret
loop
and
enter
aaa
outsl
pop
stc
adc
call
ret
and
fcompl
xchg
cmp
lods
dec
add
dec
xor
into
out
mov
cmpsl
jecxz
add
pop
scas
test
adc
insb
xchg
mov
and
popa
out
mov
xor
jl
mov
or
sahf
out
movsb
and
aad
mov
adc
fnsave
mov
add
incl
sub
jp
repnz
pop
test
push
test
and
cltd
jne
cli
out
fcomps
and
xchg
stos
iretw
movsb
add
jno
fidivrl
jecxz
mov
in
xchg
out
xchg
add
shll
dec
stc
std
pop
scas
cli
std
sub
nop
cltd
inc
sub
nop
out
test
fs
dec
inc
call
ss
imul
add
arpl
test
lret
adc
jge
insb
je
sub
in
push
hlt
js
push
ret
jecxz
jbe
or
pop
xor
push
out
and
shrl
movsb
xchg
pushf
push
sti
mov
mov
call
mov
fs
scas
test
das
push
les
in
xchg
bound
add
lret
mov
xor
cmp
and
jbe
enter
push
push
repnz
das
inc
fs
fdivs
cmp
stos
push
iret
sub
dec
shrb
xor
andl
push
flds
mov
xor
xchg
outsl
or
into
jbe
push
enter
fcomps
adc
les
cmpsl
jle
push
nop
lods
aaa
jmp
pop
jg
lahf
ror
inc
sbb
jl
and
popa
cld
hlt
insl
push
mov
dec
pushf
adc
sub
ljmp
enter
daa
mov
add
ds
xor
pop
add
jl
stos
xchg
iret
test
cwtl
pop
sarb
push
push
sub
bound
fildll
xor
add
pop
cmpsb
popl
lock
push
cmp
and
shl
adc
add
shll
lea
movsb
shr
inc
dec
mov
jl
sahf
mov
punpckhbw
loopne
dec
cltd
cmpsl
sbb
sbb
cmp
outsb
inc
or
jb
dec
in
testb
clc
clc
dec
stos
insl
jmp
sub
out
and
mov
movsb
mov
jbe
cmp
jle
mov
add
or
jge
fiadds
adc
jmp
arpl
or
push
sub
cmp
lods
jle
pusha
mov
add
and
lds
adc
mov
mov
mov
movsl
ret
addr16
mov
pop
sub
fdivrs
sub
dec
mov
movsl
cwtl
inc
addb
je
vhsubpd
mov
ja
and
xor
test
xchg
dec
in
sbb
outsl
mov
pop
fisttpll
rol
outsb
jmp
cld
add
mov
lea
lret
add
or
ja
addb
push
sarl
push
cmpsb
mov
leave
mov
les
out
jecxz
dec
push
push
cs
jno
je
sbb
pop
std
stos
and
out
sti
es
aad
pop
sbb
out
inc
cmp
inc
dec
push
and
sarl
loope
rorb
mov
mov
in
mov
in
sbb
adc
mov
ljmp
test
sub
cltd
lds
sbb
insl
scas
xor
mov
pushf
mov
mov
fstl
jle
insl
outsb
out
inc
daa
cld
aaa
adc
push
xchg
jmp
movsb
es
adc
xor
push
or
cltd
and
and
stos
std
icebp
mov
pop
xchg
ficoms
pop
out
fadd
pop
leave
sbb
stos
jl
fucomp
inc
mov
imul
fadd
mov
sbb
cmpsl
jb
pop
push
test
rorl
test
loop
pop
adc
hlt
or
addr16
frstor
lahf
pop
mov
and
pop
aas
ret
cld
or
pop
jno
rclb
push
mov
or
mov
jl
mov
pop
dec
aad
ds
jne
mov
mov
addr16
adc
dec
mov
cmpsl
pop
xchg
stos
fidivrs
in
paddq
xor
inc
dec
addr16
pop
mov
shl
pop
xchg
inc
mov
jbe
sti
loopne
sbb
outsb
xor
sbb
sar
shr
aad
daa
out
pop
mov
xchg
int
out
mov
sti
sbb
pop
cwtl
push
mov
aaa
outsl
lock
lock
jecxz
addb
scas
and
sub
or
lcall
into
cmc
and
arpl
xchg
sub
adc
shrb
loop
mov
sbb
mov
addb
int3
loop
ds
lods
mov
lock
aaa
das
mov
or
jae
adc
xor
loope
pop
dec
sub
dec
out
xor
and
add
mov
ret
mov
pop
cmpsb
insl
push
sub
xchg
and
mov
cmpsb
mov
pop
pushf
fwait
jb
leave
icebp
lods
pop
and
jne
add
lods
sbb
insb
std
add
ja
js
adc
mov
test
scas
xlat
sbb
out
xchg
xchg
leave
pop
in
jecxz
mov
push
or
add
lret
repz
push
rcll
test
jb
jnp
xor
mov
adc
lahf
testl
dec
push
jne
fwait
jb
adc
or
mov
xchg
loopne
ja
cmp
pop
dec
sbb
fldt
repnz
adc
jb
inc
cld
xor
pop
xor
inc
jp
xorb
and
cwtl
inc
pop
adc
or
pop
push
stos
jne
push
std
and
je
mov
jecxz
std
xor
jns
inc
xlat
loope
popa
fwait
xlat
inc
lock
shrl
jg
fucomp
sbb
and
shl
adc
push
mov
push
pop
in
shrl
adc
hlt
xor
nop
hlt
pop
rorb
push
add
lods
jo
in
ret
jl
in
cltd
cwtl
mov
pushf
xchg
scas
hlt
outsb
lcall
imul
jne
mov
jae
push
aam
sbb
loope
and
jb
outsl
push
popf
mov
and
imul
cs
sub
xor
xchg
sbb
setbe
fcoms
dec
bound
test
call
pop
icebp
or
insl
in
in
lds
pop
lock
lds
adc
inc
jae
mov
icebp
cltd
popf
cmc
mov
and
xor
jne
cmc
jae
lret
push
push
sub
adc
aad
popa
push
add
mov
adc
stos
pop
incb
xor
mov
lds
inc
out
dec
in
out
xor
movsb
out
pop
sub
sbb
or
adc
idivl
in
fdiv
xchg
enter
insb
sbb
cmpsl
push
insl
into
cs
mov
mov
shll
dec
adc
inc
xchg
mov
mov
leave
loopne
adc
pop
xchg
jge
xchg
stos
data16
fsts
sahf
sbb
xchg
push
jge
add
xchg
sarl
scas
fdiv
jle
jnp
sub
movsb
movsb
cli
loopne
arpl
mov
sub
adc
sub
jecxz
ds
popf
and
push
xchg
pop
add
inc
rolb
rol
and
push
inc
nop
cmp
rcrb
jg
hlt
xor
mov
cltd
pop
insl
pop
push
mov
sbb
mov
adc
mov
aam
push
movsb
std
rolb
ss
div
lds
pushf
jmp
lods
scas
scas
xchg
push
mov
aad
or
adc
sbb
mov
dec
mov
and
lcall
jmp
mov
sub
lea
mov
into
fcoms
dec
push
ja
mov
sub
jp
adc
jp
ret
loope
lds
cmp
into
popf
jae
fisttpll
sub
xor
cmp
pop
mov
rcr
jle
jnp
mov
pop
fcmovbe
add
push
mov
leave
dec
sbb
sbb
cmp
in
idivl
cmp
mov
sub
adc
push
pushf
inc
out
pusha
cmp
xchg
outsb
imul
std
repz
fwait
sub
andl
lret
pop
dec
jmp
or
into
sbb
ljmp
je
inc
rorl
daa
popa
xchg
les
das
ret
push
leave
sub
sahf
fsts
movsb
imul
dec
ret
mov
adc
arpl
push
or
jno
mov
sti
pop
xlat
enter
xchg
jo
pushf
das
sahf
jb
out
frstor
mulb
xchg
or
dec
popa
push
gs
shll
rcll
mov
push
out
mov
push
add
mov
pop
inc
stc
xchg
cwtl
add
fadd
push
adc
mov
add
pop
add
repnz
xchg
jns
and
repnz
outsb
push
or
rorb
inc
dec
push
mov
dec
out
movsl
mov
mov
adc
imul
stc
mov
movsl
gs
data16
jecxz
fnstsw
cmp
stos
xchg
jno
xor
fs
add
pop
es
jne
jmp
cmp
sub
lods
jbe
popf
out
aad
enter
pop
adc
add
lods
insb
push
call
sub
jg
or
rcrl
dec
hlt
mov
shrb
outsb
shrb
mov
paddusb
lea
loop
out
push
sub
mov
inc
jo
ja
std
push
xchg
xchg
pop
fidivs
cli
jnp
inc
add
int3
or
mov
jns
jbe
push
fwait
mov
mov
adc
xchg
leave
mov
mov
push
test
int
loope
hlt
stc
inc
mov
loopne
mov
add
push
mov
enter
mov
add
lds
dec
mov
sub
inc
sub
aad
inc
push
outsl
push
and
loop
pusha
mov
dec
lea
add
lods
ret
in
sub
adc
inc
sbb
scas
in
and
sahf
je
mov
sub
pushf
jle
or
pop
inc
or
adc
jns
push
adc
repz
and
jns
add
in
sub
push
ss
mov
out
push
xor
ss
imul
add
push
into
idiv
out
test
loop
and
aaa
jle,pt
lds
jecxz
xchg
cmp
dec
out
inc
sbb
imul
or
sub
mov
xchg
cmpsl
in
jl
pop
cltd
inc
je
cltd
push
pop
insb
les
rolb
faddp
int
popf
inc
adc
jge,pn
adc
cmpl
jecxz
push
mov
jmp
addr16
mov
add
loop
decb
movsl
adc
xchg
and
icebp
push
movsl
lods
call
lcall
and
xchg
sbb
clc
test
dec
ja
mov
frstor
cmp
out
sub
lock
ficompl
xchg
lds
xor
insb
inc
pushf
mov
cmp
dec
dec
xchg
adc
push
ljmp
inc
scas
jae
lcall
stos
ss
je
insb
flds
push
mov
aam
icebp
in
enter
mov
mov
pusha
dec
mov
xchg
js
mov
fistps
outsl
dec
lahf
sub
push
mov
repnz
sub
xchg
jle
lds
and
ret
aaa
sub
mov
fdivr
mov
xor
addr16
add
jg
push
sub
sti
dec
popf
jmp
stos
adcb
loope
scas
push
ret
push
lds
idiv
mov
jg
add
sahf
cmp
test
mov
pop
notb
pop
cmpsb
lds
dec
lret
push
push
fistpll
negl
daa
test
adc
movsl
test
xchg
cmp
pop
lods
rcl
fsubs
movsl
jnp
sbb
mov
lret
push
imul
pop
iret
fmull
cmpsb
mov
lds
xor
cmp
insl
test
sbb
cltd
and
mov
dec
push
jb
mov
decl
in
or
add
fyl2x
loope
and
cmp
call
xlat
dec
js
loope
sbb
sub
popf
pop
jle
mov
and
mov
out
push
cmp
jle
repz
aaa
loop
jl
inc
decl
cmp
out
out
jmp
dec
mov
lcall
sbb
cmp
add
mov
repnz
mov
adc
xchg
testb
lret
adc
cwtl
cmpsb
aam
rcl
test
inc
and
pop
test
inc
and
sbb
lcall
loopne
sub
sub
popf
add
or
and
push
xchg
lock
sti
stc
xchg
out
mov
mov
inc
hlt
xchg
mov
xlat
test
jno
add
mov
jbe
pop
fcmovb
inc
aas
cmp
mov
xchg
shlb
mov
scas
add
call
fbstp
inc
pop
xchg
xor
int
sub
decb
fisubrl
les
push
fyl2xp1
xchg
pop
mov
test
mov
sub
mov
enter
xchg
ret
dec
fcomps
cs
test
mov
lock
mov
int3
jle
cmpsb
adc
out
sti
out
jmp
test
add
nop
shll
inc
inc
outsl
push
add
inc
repnz
pop
cmp
fdivrs
push
mov
add
sbb
push
jns
cwtl
gs
out
sbb
push
test
mov
popf
xchg
adc
popf
pop
out
addr16
es
je
jo
ret
lods
fsubl
rcrl
icebp
popa
ja
movsb
and
addr16
icebp
rcr
mov
jge
cmp
test
ret
movsb
ja
dec
adc
leave
aad
sub
lods
popa
shlb
inc
es
mov
int3
out
pop
cmp
je
insl
lret
sarb
sub
mov
mov
imul
repnz
mov
aam
xchg
sub
or
adc
push
adc
mov
rclb
sbb
arpl
ss
jg
mov
adc
icebp
push
aam
orl
leave
fadds
xorb
cmp
std
mov
pop
mov
mov
rcrl
or
test
lret
xor
add
add
orl
jno
mov
pcmpgtb
and
mov
decb
inc
jo
cwtl
aam
inc
push
lods
cmp
pop
pop
xchg
fsubl
aas
lods
stos
mov
sbb
sub
or
mov
les
fisubrl
mov
adc
and
imul
mov
in
cmp
push
add
dec
icebp
incl
fstps
lahf
lret
push
cmp
out
mov
orb
xchg
or
insl
bound
mov
test
dec
push
jl
bound
clc
mov
insb
jo
or
bound
repz
fidivrs
sar
push
aad
popf
daa
outsl
aad
outsb
push
lea
jge
lds
rorb
inc
lahf
iret
sbb
test
sub
fldenv
fldcw
and
cmpb
lcall
test
out
insl
popa
mov
andnps
ja
in
sub
pushf
stc
pushf
add
add
insb
inc
cmp
xchg
mov
pop
sbb
dec
pop
lods
repz
fstpl
cmp
adc
pop
push
mulb
ds
adc
lods
daa
shlb
sahf
jnp
rcrb
inc
sbb
in
ss
movsl
jmp
loopne
sub
adc
ret
adc
dec
imul
xor
or
jb
je
inc
loope
mov
mov
pusha
sub
test
out
and
push
cmp
repnz
dec
xor
arpl
jge
pop
in
jge
mov
push
fisubs
test
xlat
dec
jae
fstpt
data16
fisttpll
push
aas
xchg
or
int3
mov
add
inc
sbb
dec
nop
outsl
jmp
in
push
jl
or
insb
pop
xor
sub
in
push
stos
std
inc
push
xchg
add
popa
mov
cwtl
outsl
je
adc
sub
in
das
stos
sub
out
push
inc
inc
xchg
aas
lods
xchg
fisubrl
xchg
mov
lds
pushf
cmp
ja
dec
sarl
push
das
mov
test
or
movsl
mov
stc
cwtl
lods
xchg
cmp
lods
xchg
int
js
cmp
lods
mov
popf
lahf
xor
dec
push
mov
call
shll
popf
mov
lds
jns
inc
fistl
cmp
xchg
je
aas
or
mov
test
push
out
js
push
inc
and
loop
into
mov
aam
popa
xchg
es
mov
loope
fs
lcall
std
mov
fwait
testb
pop
mov
unpcklps
xor
daa
fdiv
cli
push
lds
cmp
arpl
clc
cltd
inc
inc
cmp
cmp
std
sahf
icebp
lds
dec
xor
sbb
mov
inc
or
dec
add
inc
int
jl
ret
fisttps
dec
xor
test
sub
fwait
xchg
jge
inc
push
push
push
imul
jo
jecxz
sub
xor
and
lret
xor
out
mov
sbb
xor
dec
clc
mov
xor
shll
inc
push
pop
cwtl
add
adc
cmp
addr16
pop
mov
mov
cmp
and
add
mov
pop
nop
leave
jle
leave
cmp
pushl
in
cltd
or
in
sub
stc
ficoml
jge
mov
test
lock
push
ficoms
jge
xchg
stc
mov
fisttpl
mov
outsb
sub
gs
movsl
ret
cmp
pop
test
inc
cmc
jp
imul
int3
cmp
lret
or
and
or
ret
out
rolb
or
imulb
imul
push
adc
outsl
pop
sbb
aaa
push
mov
adc
sbb
dec
jbe
mov
incb
sub
repnz
cmp
xor
dec
push
inc
in
sbb
ljmp
rclb
push
in
jp
or
mov
add
ss
fcmovb
inc
jns
cmove
jo
in
sti
cmp
cmc
lcall
sub
push
pop
fwait
in
ficoml
jecxz
nop
push
mov
loope
inc
mov
mov
inc
pop
jo
lret
mov
call
lcall
mov
sub
test
cs
xchg
jns
xor
cmp
in
sub
push
push
outsl
mov
xor
cmpsl
xchg
imul
push
jns
pop
sbb
xor
inc
in
data16
ja
lea
cmp
leave
pop
fsubrl
sub
test
test
adc
pop
test
cmpsb
jl
sub
push
rclb
push
jle
dec
sarl
hlt
ss
dec
ss
iret
fidivl
movsl
mov
inc
inc
or
cli
rcll
icebp
cmpsb
scas
aas
fsubrs
test
int
or
outsb
dec
xchg
pushf
shrd
push
and
jns
aas
icebp
sub
and
mov
nop
mov
fucomip
jbe
sub
sub
mov
das
jo
cmc
xchg
lods
es
xchg
push
sarl
fucomi
clc
rorb
pop
push
mov
mov
adc
out
cmpsl
mov
insb
sub
ret
imul
pop
xchg
ds
lods
or
ss
outsl
pushf
xor
mov
aad
jmp
dec
or
adc
mov
into
jbe
mov
cld
push
popa
outsb
xor
out
xchg
add
aaa
aam
add
out
inc
push
aam
push
pushf
jg
stos
stos
les
sbb
inc
pop
jp
movsl
pop
or
adc
iret
stos
mov
mov
jns
imul
pop
sub
call
sub
push
xchg
sbb
mov
mov
push
aas
mov
jbe
pop
lock
popf
fs
iret
test
inc
test
dec
lret
jo
pop
insb
movsb
sub
fnstcw
cli
sarb
ficompl
dec
mov
cmc
xchg
and
push
and
pop
xor
leave
xchg
mov
stc
lahf
xor
cltd
movsl
xchg
cmpsl
jp
sub
fs
hlt
lods
or
loop
push
xor
push
pop
aad
cltd
out
add
mov
mov
xchg
push
std
sub
cs
idivl
add
pop
jns
pop
out
lods
xchg
pop
scas
mov
add
aad
cmp
jecxz
daa
add
inc
bound
jp
clc
out
fucomip
das
movb
aad
pop
dec
xchg
pop
add
push
jecxz
mov
addr16
adc
or
cs
inc
fstpl
push
xor
and
mov
aas
test
lds
leave
stos
int3
iret
mov
test
mov
pop
outsb
jne
into
xchg
pop
in
pop
sub
cmp
ja
inc
sarl
cmpsb
cmp
dec
xchg
addl
leave
inc
aam
mov
in
stos
ss
mov
cwtl
push
rorl
and
test
aaa
mov
sti
movsl
test
jne
fidivs
push
mov
cmp
sbb
jle
je
xchg
or
jnp
jb
jns
fwait
push
callw
rorb
mov
dec
leave
cmpsl
sti
xor
aas
ret
and
xchg
inc
iret
inc
loopne
jb
jecxz
std
push
xor
lds
cmpsb
cmc
test
dec
jp
mov
dec
mov
outsb
pop
mov
loope
fsubs
ret
insb
inc
mulb
pop
idivl
mov
in
dec
mov
mov
lret
xor
xchg
jecxz
test
jle
fcoms
push
int
dec
adc
and
inc
call
xorl
mov
cld
int3
mov
frstor
cltd
scas
sub
into
and
and
mov
jo
xor
fcmove
ljmp
int3
xor
push
pop
lods
mov
dec
mov
and
adc
sbb
sub
repnz
push
out
jne
rclb
push
movsb
xchg
cmp
jnp
mov
pop
rcrl
mov
sbb
add
sbb
inc
loopne
jl
add
imul
out
dec
jle
mov
cmp
repz
add
inc
outsl
ficomps
mov
xor
in
lock
xchg
loopne
inc
js
insl
mov
sti
dec
inc
cmp
arpl
xor
dec
or
jno
jo
or
jns
xchg
test
and
enter
notl
scas
sub
out
icebp
or
mov
inc
out
push
jmp
dec
insb
jae
cmp
sarl
imul
dec
add
repz
insb
outsb
ret
movsl
ret
or
and
mov
pop
pop
stos
jbe
subl
mov
inc
test
dec
and
aam
rclb
icebp
xchg
mov
subb
mov
div
xorl
das
cmpsl
jne
das
in
xchg
push
cmp
adc
mov
inc
or
or
jno
sbb
es
aaa
ja
dec
mov
inc
push
out
test
sbb
cmpsb
jne
mov
and
lret
cmpsb
das
sub
adc
dec
sbb
push
cmp
outsl
push
jmp
mov
pushf
adc
in
inc
outsl
imul
jl
fdivrs
call
dec
xlat
xor
ljmp
add
dec
mov
subl
out
cltd
int
cld
lret
dec
push
ror
pop
or
jbe
aad
pop
movb
mov
pop
mov
push
cld
jae
aas
xor
mov
jnp
mov
testb
rep
das
insb
fisubrl
sub
pop
cmp
pop
sub
mov
addr16
mov
dec
jecxz
jmp
es
jb
xorl
pusha
das
mov
add
je
in
cmp
in
test
stos
imul
dec
and
cwtl
push
filds
mov
cmpsb
push
repz
jb
sub
fs
lock
lcall
xor
das
and
lock
mov
push
cmp
push
dec
xor
addl
sub
in
jbe
fstpt
stos
idivb
call
adc
outsl
shr
inc
cmc
fwait
mov
stos
daa
jae
adc
test
aam
les
jno
dec
call
popa
mov
iret
scas
xlat
sub
or
clc
and
xor
push
jb
fs
into
mov
push
outsb
repz
xor
cwtl
icebp
jb
gs
loopne
scas
jbe
or
sub
inc
aam
pop
dec
pop
xor
jmp
iret
push
inc
mov
popf
subl
jo
fcmovb
test
mov
mov
xchg
ss
sti
mov
ds
push
cmpl
dec
test
pop
lret
das
sub
inc
or
sub
cwtl
mov
lds
jne
mov
rcrl
jmp
jns
cmpsb
mov
pop
cmpsb
repz
sahf
mov
push
rcrl
sbb
mov
rcll
pop
sbb
aaa
push
or
push
fmul
sbb
sub
fsub
push
stc
xchg
lret
sbb
pop
mov
mov
and
push
int
jecxz
movsl
cmp
push
fimuls
fimuls
xchg
mov
and
xchg
mov
dec
mov
lahf
fstpt
lret
cmpl
mov
repnz
mov
dec
xor
mov
push
ret
add
lock
stc
pop
and
pop
cli
mov
mov
jnp
je
inc
fisubrl
ss
pop
mov
jnp
pop
cmpsl
call
in
sub
sub
movsb
repnz
cld
test
outsb
jae
loope
inc
dec
lret
enter
hlt
dec
scas
push
mov
mov
cmp
fdivrp
inc
sub
gs
imul
ss
mov
sahf
shrl
fmuls
sub
sbb
dec
leave
daa
xchg
and
test
sbb
aam
inc
dec
cmp
jge
shl
ror
enter
in
mov
fcompl
fwait
jecxz
shl
negb
cmp
cmp
cmpsb
ljmp
incl
mov
pop
ds
outsl
popf
jg
sub
add
stc
sub
jns
aad
push
fsub
adc
and
rorb
lods
bound
inc
clc
ss
dec
and
dec
and
mov
mov
outsb
sbb
jl
mulb
and
jle
clc
in
mov
xchg
outsl
loope
mov
daa
into
push
fwait
xchg
in
mov
negl
hlt
out
les
xlat
mov
or
insl
xchg
and
fnsave
in
je
or
and
sbb
cs
cmp
inc
and
push
mov
jmp
hlt
push
out
inc
sub
mov
pop
adc
inc
daa
xchg
add
inc
xor
xchg
xlat
mov
popf
mov
xlat
cmp
roll
stos
dec
mov
adc
push
add
lcall
mov
push
jg
loope
imul
mov
inc
jl
lds
cmpb
mov
inc
ss
cmpsl
inc
stos
jmp
sub
cmp
inc
mov
sub
pop
lds
fs
int3
sub
pop
pushf
inc
jecxz
lcall
jbe
adc
movsl
push
add
inc
pop
xchg
xor
xchg
cmp
test
les
mov
idiv
mov
sahf
push
or
push
cmpsb
daa
std
pop
cwtl
loope
or
jp
stos
dec
test
cmp
dec
add
stc
mov
imul
andl
sbbl
cmp
or
fldcw
mov
add
cmp
mov
pop
mov
test
add
inc
cmp
sahf
and
lds
sbb
jl
push
ss
fadds
fadd
sbb
add
xor
jle
nop
xor
andb
sar
sub
mov
cmc
ds
mov
insb
icebp
jbe
xchg
inc
pop
inc
sti
cmp
cmp
adc
push
push
cmp
clc
and
je
push
dec
lock
and
outsl
js
pop
scas
mov
xchg
sbb
xchg
mov
mov
mov
sar
push
addr16
int
hlt
fmull
loopne
jg
jb
cs
aas
enter
xor
sub
or
push
sahf
mov
mov
cmpsb
xchg
mov
or
ds
imul
and
and
in
mov
mov
cltd
jmp
js
dec
movsl
inc
jl
jle
cmp
xchg
or
fisttpl
scas
adc
loopne
test
and
rcll
lahf
jp
inc
mov
sahf
inc
push
add
int
insb
cli
push
and
add
icebp
or
cmp
push
movsl
fistpll
or
and
add
popa
and
xchg
les
mov
cmp
pop
adc
je
xchg
push
insl
shr
add
and
or
jg
cmpb
dec
lcall
hlt
pop
xlat
ds
adc
idiv
add
scas
imul
sub
mov
sub
les
sub
rolb
movsb
or
aad
inc
les
outsl
adc
shl
frstor
rolb
inc
outsb
ljmp
xorl
pop
fcompl
es
outsl
push
fsubl
pop
xor
into
dec
push
das
gs
mov
pop
adcb
mov
push
inc
sti
dec
and
cmpsb
push
aaa
out
sbb
mov
push
add
popf
push
adc
sbb
dec
push
dec
xchg
hlt
xchg
mov
fistps
cmp
icebp
dec
aam
push
xor
add
xchg
pop
pop
popf
cmpsb
or
mov
pusha
jns
sub
int3
or
dec
aaa
sahf
in
hlt
xchg
int3
fs
or
xlat
ds
in
cmp
fstps
sbb
in
in
pop
pop
pushf
hlt
jb
aaa
xchg
add
sar
jbe
popf
test
lds
imul
jb
sbb
inc
pop
dec
stc
or
and
stos
push
add
jmp
mov
lods
fcoms
loop
sti
mov
fidivl
lret
lea
xchg
jg
out
inc
jge
rorl
xor
testb
jo
data16
xchg
mov
or
pop
and
out
out
arpl
dec
mov
push
jbe
inc
push
repnz
adc
outsl
add
and
dec
xchg
shll
ja
xchg
push
or
testl
pop
in
sub
push
je
mov
xor
das
cmp
sahf
jge
mov
daa
push
sahf
add
test
leave
call
and
pop
andl
inc
xchg
push
mov
sub
jp
dec
or
nop
stc
cwtl
inc
and
mov
jo
insb
aas
dec
push
ja
cs
test
push
jb
push
imul
rcl
pop
xchg
xchg
outsl
inc
test
ljmp
sahf
dec
sub
das
xor
arpl
push
or
lret
jbe
fdivrl
cmpsl
xlat
or
pop
icebp
popf
repnz
jmp
aas
test
fildl
add
adc
cmp
and
mov
insb
mov
xor
fwait
xchg
test
inc
cmp
push
jg
pop
add
or
mov
cmp
int
shr
mov
fadds
mov
push
mov
pop
push
rclb
fbld
in
pop
lcall
hlt
aas
add
sbb
mov
or
pop
es
jo
mov
mov
stos
xchg
dec
clc
xor
and
call
mov
fwait
loope
push
jecxz
adc
cmpsl
add
dec
mov
nop
xchg
dec
push
in
jne
fcoms
xchg
lods
mov
inc
scas
mov
popf
mov
xor
imul
out
sub
and
cmc
mov
sub
push
incl
or
jle
sbb
adc
jp
in
test
gs
int3
inc
or
mov
mov
xchg
pop
cmpsb
mov
jb
pop
mov
clc
test
xchg
sub
push
aas
add
jge
test
incl
in
flds
aad
pop
mov
add
or
ljmp
cmp
jne
test
push
inc
jge
ljmp
push
sahf
into
mov
or
aam
repz
lods
adc
cld
dec
inc
ss
sub
mov
add
cs
cmp
std
mov
mov
lock
in
pop
push
getsec
xchg
fwait
nop
cmpsl
pop
cli
mov
mov
ja
mov
scas
mov
cmp
sub
adc
jnp
in
inc
dec
dec
loop
push
mulb
imul
insb
sbbl
hlt
adc
push
add
sub
cmp
adc
mov
movsl
pusha
aad
gs
fldenv
mov
arpl
sub
sbb
mov
cltd
pop
sub
cmpsb
mov
adc
popa
adc
mov
andl
jne
mov
fmull
fwait
arpl
daa
inc
aam
jp
ljmp
dec
push
jo
jle
or
mov
jnp
jge
adc
test
cmc
fstpl
out
adc
pop
and
xor
outsb
das
sub
push
mov
or
enter
inc
jp
test
shrl
pop
andb
std
and
mov
jmp
dec
enter
pop
addr16
xchg
loope
mov
arpl
dec
add
cmp
xchg
bound
lahf
mov
adc
cmp
dec
jmp
xor
imul
pop
test
jbe
fcomps
daa
jecxz
lds
sub
inc
mov
fistpl
movsb
push
pushf
sarb
sub
addr16
int3
inc
cmp
pop
jge
shll
aaa
dec
shrl
inc
fistl
mov
cs
lahf
xlat
mov
jg
ret
or
dec
and
gs
dec
ret
popf
std
add
push
jmp
and
mov
lds
sub
lods
mov
mov
mov
ja
std
icebp
push
push
sub
push
inc
add
popa
sbb
repnz
add
adc
out
in
sub
xchg
sub
out
xor
pop
pop
add
pop
mov
pop
cmp
or
ret
lds
or
call
jecxz
inc
mov
pop
test
pop
lahf
fiaddl
pusha
sub
mov
divb
in
roll
push
aas
inc
add
sub
push
and
cmp
enter
mov
scas
mov
mov
jnp
jp
divb
and
push
cwtl
loopne
loope
bound
cltd
aad
outsl
pop
jo
inc
mov
negl
stos
movl
mov
adc
data16
sbb
xchg
fmuls
pop
sti
and
add
mov
ds
loop
push
lret
hlt
add
lds
pop
lds
push
call
or
lods
pop
sbb
cmp
xor
sub
cltd
in
rcrb
fldenv
les
push
lock
inc
daa
cld
arpl
xchg
inc
testl
mov
fisubl
mov
js
xor
je
es
push
jecxz
inc
in
mov
push
sbb
hlt
rorb
xor
add
mov
shr
push
pop
repz
sbb
jp
xorl
dec
cmp
into
test
int3
shr
inc
loop
xlat
xchg
mov
xchg
out
mov
mov
pop
push
cs
mov
mov
gs
mov
rorb
push
jmp
adc
ja
sahf
push
aam
or
jmp
mov
mov
fs
xor
into
or
push
adc
scas
xchg
sahf
jmp
adc
lret
ss
fldl
mov
xchg
shlb
add
inc
in
adc
push
loopne
jle
add
sbb
pop
stos
push
sbb
xor
psraw
jg
push
mov
adc
aaa
divl
les
es
lcall
and
sahf
inc
lock
inc
xchg
sahf
aas
jp
js
mov
pop
lods
ret
or
push
mov
mov
jae
shll
cmpsl
mov
clc
dec
fiadds
add
bound
xchg
loopne
sbb
push
dec
xor
test
jmp
aas
iret
jbe
and
dec
sbb
clc
ret
jno
out
jge
ds
or
out
std
inc
jecxz
insb
mov
jmp
aaa
jecxz
pop
outsl
xchg
out
negl
stc
fstpl
cmp
mov
and
sbb
xor
inc
orl
loop
ja
int3
cld
negl
xchg
insl
data16
sub
testl
scas
fcoml
sbb
cwtl
iret
inc
aas
add
lret
repnz
mov
jmp
adc
pop
mov
dec
mov
jne
dec
push
pop
adc
add
frstor
xchg
mov
loop
nop
ja
push
cmc
ds
dec
fldl
sahf
jne
clc
jecxz
js
repnz
dec
movsb
cmp
hlt
jecxz
add
repz
mov
fs
or
mov
sub
xchg
adc
pop
lcall
adc
fldcw
scas
xor
shrb
add
xchg
lahf
jle
test
push
scas
movsl
lods
xchg
shlb
sbb
lea
push
aaa
xor
add
xchg
bswap
cmp
push
mov
xorb
int
pop
pop
jp
dec
push
pop
mov
sbb
or
jno
mov
lods
pop
es
pushf
scas
out
fbstp
enter
or
daa
mov
jnp
loope
mov
adc
jmp
int
sahf
adc
call
shll
insb
pop
sub
clc
pop
cmp
lea
pop
popa
cld
popf
cwtl
adc
lahf
or
pushl
int3
inc
inc
lods
call
xchg
in
ret
push
iret
ret
enter
mov
mov
pusha
jae
mov
jl
lcall
lcall
dec
xchg
push
shlb
jbe
push
push
ss
movsl
rcrl
jne
insb
push
movsl
je
push
mov
mov
aam
mov
jl
cmp
mov
enter
fstp
adc
mov
jge
cmp
stc
loopne
loope
pop
aam
aam
add
mov
in
mov
add
test
hlt
pop
ljmp
sbb
cmpsb
stos
iret
and
mov
mov
mov
xor
jae
inc
std
mov
call
lods
xlat
mov
inc
mov
pop
xor
rcrb
add
pop
lcall
out
je
aaa
scas
add
out
daa
sub
ret
in
inc
cltd
dec
out
pushf
inc
frstor
addr16
sbb
sbb
cmpsb
sbb
es
mov
cmp
fsubrs
or
mov
add
jne
mov
flds
je
or
mov
mov
mov
cs
daa
mov
jae
mov
imul
les
ljmp
mov
movq
minps
cmpsl
in
lret
jle
push
push
cmpsl
add
in
arpl
aas
aad
cld
dec
jbe
pop
dec
jnp
dec
jne
fcompl
jbe
mov
cld
cmp
pop
cs
xor
loop
cli
pop
in
icebp
cwtl
icebp
out
scas
fidivl
push
cs
setns
cmp
jns
xchg
jle
or
xchg
sbb
mov
lea
lret
dec
icebp
inc
enter
pusha
ds
shll
mov
lret
test
sarl
sbb
add
or
jecxz
mov
xchg
imul
push
dec
popa
adc
in
fstpl
jns
jecxz
or
stos
add
faddl
push
popa
lds
lret
loopne
cmp
xchg
dec
lahf
sub
daa
mov
in
call
adc
mov
fadds
gs
imul
xchg
into
cwtl
outsb
jmp
push
stc
jnp
inc
mov
mov
jg
aam
xchg
scas
out
jp
mov
sahf
negb
mov
adc
lea
mov
jnp
dec
mov
aas
pop
jmp
inc
je
fimuls
outsl
push
stc
adc
loop
outsb
gs
fisubl
in
or
shlb
mov
iret
ljmp
lods
rcrb
nop
repnz
mov
and
inc
aaa
dec
mov
sbb
mov
data16
cmp
push
cmpsl
jle
scas
stc
sbb
push
cmpl
iret
inc
test
adc
pop
sbb
xor
jo
pushf
jo
in
cmp
xor
push
lcall
lea
ficoml
xchg
mov
pop
dec
and
es
pop
inc
movsb
dec
sub
jl
je
xchg
addr16
sub
cmpl
fsubs
sbb
aaa
mov
cmp
inc
stos
pop
xor
jmp
stc
dec
je
scas
aaa
pop
adc
cmp
jge
movl
dec
dec
jae
js
in
mov
xchg
dec
das
scas
mov
nop
cs
mov
imul
jae
cli
test
int
ss
ljmp
out
aam
push
aaa
test
jmp
mov
int
mov
jae
pop
jle
mov
cmp
out
dec
out
jg
sub
ret
dec
add
inc
sbb
out
or
fwait
xor
or
dec
dec
jnp
jns
inc
fnstenv
xor
mov
mov
and
push
mov
lods
cmp
sub
cmc
jg
in
scas
ss
adc
lea
movsb
ffree
jb
aaa
pop
dec
int
lock
xchg
pusha
out
push
loop
add
repz
adc
inc
adc
je
aas
mov
fmul
sarl
outsl
loope
scas
arpl
inc
popl
cmp
add
xor
and
or
test
xor
push
mov
cmpsb
ja
je
pushf
mov
fbld
dec
enter
aaa
xchg
leave
xchg
jecxz
push
ja
lretw
test
inc
pop
push
xlat
outsb
cmp
jo
xor
dec
sub
daa
lret
addl
jle
cli
mov
jge
dec
push
cmp
imul
xchg
das
push
cld
pop
imul
data16
pop
pop
dec
ficoms
sbb
cwtl
ja
inc
dec
jecxz
rolb
mov
outsl
cmp
and
sub
roll
adcb
int3
addr16
xchg
mov
or
repz
inc
les
mov
lock
or
cmp
sub
icebp
out
xchg
shrl
fcoml
leave
mov
jne
stos
mov
mov
movl
out
rcrb
popf
and
addr16
push
inc
frstor
cmpsb
popf
insb
jmp
xchg
push
jno
in
in
ret
enter
insb
xchg
daa
outsl
cmp
mov
mov
xchg
into
in
lods
sahf
or
and
js
dec
push
mov
stc
fdivl
pop
or
js
dec
push
or
adc
pusha
jp
mov
push
or
mov
or
mov
or
das
ficomps
cmpsb
mov
std
add
adc
xchg
pushf
gs
pop
cmp
enter
sbb
adc
mov
inc
std
dec
mov
test
sub
push
aam
lret
inc
push
pop
pop
sbb
cmp
icebp
and
out
pop
je
dec
fs
push
out
push
pop
mov
lret
jne
mov
mov
test
xchg
scas
sbb
pop
xor
add
mov
sub
sbb
cmp
jg
add
inc
stos
fwait
sbb
push
jp
cmc
jmp
mov
sbb
scas
cmpsb
mov
add
lahf
xor
sbb
aaa
adc
in
loopne
iret
das
inc
jl
inc
iret
dec
push
jmp
sahf
inc
mov
jnp
test
pop
out
cmpsb
adc
sub
fsubrp
sbb
dec
add
cmpsb
gs
push
gs
inc
aad
dec
inc
mov
push
xchg
jbe
inc
push
imul
cld
cmpsl
mov
iret
add
cmpsl
and
jp
loop
lods
mov
or
or
std
adc
jo
pop
pop
ds
fcoml
cli
inc
mov
popf
mov
fwait
icebp
ret
push
imul
add
out
push
inc
out
and
jmp
test
sbb
inc
mov
sub
arpl
add
jnp
jecxz
pop
add
fdivl
lea
je
stos
cmp
push
popa
pop
fs
fdivrl
push
mov
pop
dec
or
xchg
xor
mov
ljmp
pop
adc
dec
cs
lods
cwtl
repz
mov
add
add
pop
and
aad
fbstp
add
je
mov
mov
daa
sub
iret
push
jl
or
or
and
cmp
lods
mov
dec
mov
ds
bound
xchg
leave
loope
hlt
and
cmp
repz
push
nopl
and
xchg
shll
cld
leave
repz
xchg
adc
pushf
out
and
addr16
pop
cwtl
dec
xor
xlat
jge
shr
push
xchg
test
and
in
pop
push
add
fimuls
xor
cs
enter
inc
jae
mov
add
imul
pop
bound
imul
and
add
pusha
pushf
movsl
pushl
and
testl
add
jnp
iret
rcrb
xor
call
andb
dec
push
push
nop
lret
add
testb
movsl
arpl
lret
mov
dec
repnz
sti
loope
es
call
push
fsts
cmpsl
insl
cmc
inc
sbb
sbb
fidivs
loop
in
pop
int3
es
arpl
ja
cs
jae
jbe
sbb
push
aam
sar
dec
dec
xor
dec
popa
mov
scas
in
add
out
jp
add
ret
inc
mov
lahf
js
cmp
lods
outsb
push
lock
cmp
cmp
jb
xchg
xor
jge
sahf
mov
std
ret
aas
daa
mov
sub
adc
cld
or
or
lds
xor
repnz
mov
js
add
jae
jmp
sbb
push
xlat
mov
jmp
mov
mov
jp
pop
dec
push
es
adc
mov
pop
out
repz
pop
xchg
test
cmp
add
mov
mov
jle
cli
loope
xchg
xchg
hlt
inc
out
fcoms
or
jae
daa
ucomiss
mov
cltd
mov
cmc
sbb
scas
xor
add
dec
xor
mov
xchg
dec
or
fdiv
mov
jp
movsl
push
dec
fwait
lods
adc
loope
ds
xor
xlat
mov
push
jno
inc
adc
or
adc
dec
mov
sbb
addl
sbb
sarl
mov
xor
mov
xchg
pop
cmp
enter
into
stc
int
in
fmul
sub
dec
xchg
lods
popa
int3
aaa
fcompl
xor
loope
sub
dec
and
sub
or
fs
xor
pop
int3
fwait
in
and
inc
les
and
clc
mov
sbb
fistl
popa
sub
dec
scas
cmp
push
mov
mov
xchg
je
sbb
xchg
shlb
and
aam
sahf
ds
addb
aam
inc
int
in
cmp
rclb
ljmp
inc
pop
daa
shlb
xchg
sbb
adc
lds
int
out
add
out
insb
in
push
pop
scas
and
add
or
popf
lods
sbb
mov
aam
arpl
inc
push
outsb
xor
rolb
or
jae
push
stos
movb
pop
push
loop
or
ss
mov
adc
push
repnz
lock
push
cmpsl
ror
push
push
sbb
xchg
repnz
cmp
call
inc
push
xor
in
sbb
jl
ja
cmp
push
jg
mov
adc
rorl
inc
movsl
jg
dec
jno
inc
out
popa
sarl
cmp
sbbl
jns
cmp
js
xchg
mov
sar
ret
cmpsl
xchg
jecxz
lret
idivb
jmp
pop
pop
xchg
inc
dec
je
ds
addb
sbb
jg
xor
jae
sub
cli
xor
fistps
or
pusha
mov
cmpsb
ret
pop
xor
movsl
movsb
xor
loope
cmp
out
stos
outsl
lods
in
aas
xchg
out
mov
js
std
shr
and
outsb
pushf
int
imulb
pusha
jns
inc
xchg
test
add
daa
in
pop
sbb
dec
mov
imul
sahf
stc
inc
in
int3
mov
outsl
xchg
inc
adc
xchg
push
xor
insl
push
ret
mov
rorb
insl
out
pop
pop
add
jae
popf
xchg
lea
call
dec
adc
ja
decb
sub
pop
pushl
push
pop
outsb
pop
das
pop
mov
sti
mov
aam
movsb
popa
mov
sbb
int3
mov
mov
pop
pop
addl
push
addr16
ja
imul
addr16
movsl
lods
sub
sbb
mov
xor
add
jmp
sub
sbb
jbe
stos
push
mov
outsl
cmp
pop
push
inc
pop
lock
inc
sarl
jnp
out
into
xor
jbe
in
addr16
pop
lahf
shll
popf
pop
inc
ret
daa
sub
mov
je
sub
into
xor
loopne
dec
sbb
cmpsb
or
lret
xchg
loope
pusha
xchg
rclb
xchg
and
loopne
in
lcall
data16
sub
mov
popa
repnz
out
lock
adc
and
lcall
and
dec
sub
sarl
xchg
insl
out
cmpsl
cmc
addl
push
cmpsl
repnz
pop
adc
mov
push
sbb
inc
aas
sub
mov
das
stos
mull
add
add
cmp
lods
inc
fcomp
adc
lock
dec
cld
cmp
xchg
out
aad
into
xchg
adc
xor
dec
lret
mov
decl
pop
sbb
pop
idivb
adc
std
sub
enter
push
add
add
cmp
popf
and
stos
fs
pop
xchg
bound
and
jmp
movsb
mov
lods
popa
arpl
mov
or
mov
lahf
sarl
lahf
enter
jns
lret
aad
incb
es
pop
mov
ss
or
loopne
pop
sbb
outsl
mov
jns
xchg
or
insb
pop
inc
shlb
lcall
out
lret
jnp
sub
sub
into
cmc
or
cltd
idivb
xor
icebp
fwait
lcall
jnp
repz
out
cmp
scas
mov
mov
push
out
stos
daa
or
xchg
or
mov
fidivs
xchg
mov
sarb
gs
and
push
dec
push
mov
cmp
loope
arpl
mov
mov
dec
jnp
pop
adc
adc
xor
cli
inc
pop
aaa
lds
std
test
leave
and
xchg
and
xlat
iret
sbb
pop
les
insb
aaa
sub
sbb
shlb
adc
push
repz
roll
insb
or
out
xor
fdiv
rcrl
and
movsl
shll
rcll
jle
cmp
inc
fcom
addr16
or
sub
inc
mov
es
xor
shll
mov
sahf
xchg
push
xchg
mov
or
cli
jecxz
addr16
and
mov
outsl
pop
adc
outsb
xchg
ss
pop
dec
xor
hlt
xchg
sbb
mov
aam
sarb
xor
daa
ss
sahf
outsb
jge
xchg
insb
mov
movsb
xchg
cltd
xchg
xchg
pop
dec
imul
loope
xchg
pop
pushf
aam
fmull
jnp
pop
jo
xchg
push
and
repz
sub
aad
mov
ret
inc
in
add
dec
pushf
aad
jle
mov
sbb
mov
out
xor
mov
dec
in
outsb
scas
mov
das
jae
fwait
jge
lcall
decl
daa
mov
sbb
nop
std
out
je
xor
add
imul
addb
mov
aaa
std
loope
fildll
in
xchg
ficompl
and
sub
jb
fstpl
add
scas
dec
or
cmp
adc
jg
int3
cmpsb
ds
ja
cli
cmp
adc
ss
sbb
das
sub
cmp
or
xchg
xor
pop
push
imul
dec
mov
pusha
gs
fnstsw
jns
fstpl
jo
mov
dec
lahf
in
notl
sbb
cltd
icebp
jp
imul
mov
jp
cmpsb
aad
movsl
in
cltd
fidivrl
cmp
pop
scas
fmul
pusha
aam
aad
xchg
into
jl
mov
mov
insl
xchg
inc
or
jp
sbb
push
call
xchg
inc
pop
cmp
int3
add
pusha
and
shll
xchg
sbb
aas
mov
mov
mov
ja
or
mov
add
adc
jmp
not
lds
xchg
lods
dec
movsl
add
sub
cmpsl
cmpl
push
nop
sub
movsl
sti
pop
pop
movsb
dec
mov
leave
ficompl
xchg
fsubrs
or
push
mov
inc
cmpsl
mov
fsubs
xor
add
loopne
out
mov
shrb
test
popf
jns
xchg
test
dec
add
test
adc
shlb
pop
push
pop
sub
imul
xor
sub
pusha
push
sti
push
fidivl
pop
push
add
test
push
sub
or
out
movsb
fwait
inc
test
push
icebp
cld
lea
push
adc
jp
bound
movsb
addr16
xchg
or
adc
aam
es
scas
mov
push
mov
fdiv
mov
in
clc
repnz
shrb
and
cmp
lods
push
int
cmpsl
enter
std
imul
ja
xchg
dec
mov
adc
rcrb
add
xchg
mov
imul
add
xchg
xor
pop
in
es
mov
sbb
pop
test
mov
stos
aaa
mov
popl
push
jge
mov
imul
adcl
adcb
insb
mov
lds
hlt
xchg
mov
adc
sub
mov
dec
aaa
cmpsl
dec
inc
ss
add
cmp
lods
inc
out
pop
xchg
sbb
cmpsb
and
popf
shlb
nopl
aaa
je
pusha
repnz
scas
adc
lret
shr
dec
mov
cmp
cli
push
jb
js
xchg
roll
and
fwait
mov
sar
pop
inc
dec
pop
jne
dec
int
movl
xlat
cmp
lret
xchg
sbb
call
adc
and
cli
xor
rcll
add
dec
imul
repnz
xor
pop
mov
sbb
inc
loop
in
popf
xor
out
mov
popf
xor
es
adc
pop
hlt
shr
push
sub
es
lods
inc
enter
mov
je
jp
out
dec
stos
mov
dec
mov
aad
movl
push
pop
in
test
leave
pop
cs
jmp
jp
lahf
jne
pop
jmp
sbb
jg
cmp
cmc
sub
ret
dec
call
dec
xor
mov
mov
cmpb
shlb
mov
jge
sub
and
mov
sub
lds
or
push
adc
clc
inc
cmp
jge
aaa
rorb
mov
xor
pop
jle
mov
call
xchg
mov
mov
cmp
testb
push
stos
clc
scas
gs
sub
jecxz
sub
clc
pop
mov
iret
mov
insb
fnstcw
xchg
add
popa
nop
add
pop
daa
je
imul
mov
mov
movsb
cmp
sub
add
aaa
pop
faddp
mov
sub
mov
xor
adc
adc
orb
jge
jo
outsl
fmul
mov
xchg
cmp
call
cs
lret
mov
add
aaa
jne
in
mov
sub
cmpsb
daa
mov
add
ds
pop
dec
call
fwait
mov
testb
mov
mov
int3
jmp
mov
ss
popl
dec
movb
out
xor
icebp
adc
ljmp
rol
fsubrl
in
cltd
pop
inc
dec
jns
adc
xchg
ljmp
mov
imul
jmp
or
iret
cmp
aaa
inc
mov
cltd
mov
loopne
out
push
xchg
int3
rcll
stc
sub
js
mov
scas
hlt
adcl
mov
pop
pop
les
pop
jno
jno
mov
adc
dec
fldl2t
xchg
enter
or
push
fs
sub
pop
pop
xchg
sub
je
mov
in
or
xchg
cmp
pop
mov
je
lcall
loope
ret
fld
test
mov
sbb
aad
aaa
hlt
mov
aad
rclb
pop
add
insb
cmp
mov
mov
xchg
sbb
incl
jge
pop
loope
mov
mov
lret
outsb
mov
imul
icebp
mov
mov
test
fisubrs
xchg
loop
mov
rorb
cs
pop
sub
inc
lret
push
fistpll
pusha
push
dec
xchg
lea
or
dec
sbbl
je
sahf
sbb
jmp
xchg
jl
push
cmp
test
xchg
xchg
test
sbb
loopne
or
mov
nop
mov
push
adcb
iret
fldl
mov
xor
subb
scas
mov
or
and
xor
adc
popl
and
push
xchg
pop
js
inc
mov
cmp
push
cwtl
sub
jg
sarl
sbb
in
mov
daa
mov
cmp
pushf
inc
clc
dec
jbe
dec
xor
lret
shr
xchg
outsl
iret
jmp
and
mov
cmpsb
loopne
shrl
div
addr16
aaa
mov
lahf
xchg
shrb
mov
es
jle
test
ja
bound
sub
aad
dec
mov
mov
push
test
lahf
adc
inc
xchg
jge
rcr
lods
xchg
cmp
mov
xchg
adc
jmp
push
add
pop
iret
or
sahf
inc
add
lcall
sbb
dec
aaa
add
pop
cmpsl
fwait
into
call
sub
out
sub
add
repnz
mov
cli
cmc
push
cli
outsb
mov
inc
lahf
in
sub
jno
stc
sarl
lds
xchg
jns
int
dec
jne
mov
xchg
ja
cmp
push
dec
aad
movsb
sub
test
lods
ret
mov
cmpsb
mov
filds
xor
jbe
out
das
dec
pop
fwait
inc
call
add
or
sti
imul
cltd
sbb
adc
lea
jp
mov
inc
jno
dec
out
jg
jb
cmpsb
icebp
xor
lcall
cli
pop
jle
lock
pop
arpl
pop
sub
aaa
sub
mov
mov
scas
out
jp
xchg
pop
xchg
test
jl
iret
bound
hlt
or
sbb
dec
dec
lock
rorb
out
icebp
mov
xchg
sti
mov
cmp
and
fldt
sub
jg
push
leave
or
cmp
je
mov
or
movb
and
aam
add
jnp
stos
push
xor
imul
into
pop
lods
in
nop
push
adc
or
fldcw
lods
sbb
push
and
daa
cmp
xor
in
jno
sbb
jp
ret
sbb
mov
cltd
xor
xor
stos
or
insl
movsl
sub
lcall
cmp
ret
pop
in
fisubl
mov
xor
cld
movsb
nop
pop
packssdw
and
jns
cmpl
fisttpll
shl
push
stos
frstor
aaa
outsb
or
fistl
lcall
push
pop
imul
xchg
push
push
inc
or
cmp
shr
movsb
scas
ficompl
pop
aam
fsubs
idiv
ja
sbb
mov
adc
xor
adc
leave
or
nop
icebp
popf
pop
cli
or
in
cli
std
cli
pop
fsubr
mov
sub
mov
fsubl
js
mov
pop
and
lcall
mov
dec
mov
icebp
leave
inc
test
xchg
pop
test
mov
or
inc
imul
mov
mov
jbe
ss
xchg
negb
mov
aam
and
addr16
or
jno
imul
out
ret
push
sub
sti
xor
movsl
dec
int3
loopne
sbb
stos
inc
lods
mov
and
add
aas
pop
adc
mov
sbb
into
cmp
inc
push
or
fcmovne
mov
or
push
xor
adc
cmc
das
dec
mov
arpl
pop
xchg
mov
xor
inc
ret
dec
cmp
sbb
ret
push
pop
mov
in
shll
mov
push
sahf
mov
mov
test
add
sbb
imul
gs
andb
mov
sub
sub
and
ja
into
inc
xchg
sbb
jbe
inc
inc
frndint
lcall
adc
pop
pop
dec
and
sub
sbb
sub
sub
and
bound
add
sbb
sub
and
jne
sahf
arpl
push
int3
rol
and
stos
and
jge
xchg
cltd
arpl
push
sbb
enter
xchg
cmpl
sub
xor
aaa
outsb
add
fwait
jbe
data16
push
aam
cmp
in
jo
sbb
fwait
ja
and
test
and
mov
push
jae
iret
out
push
loop
negb
xchg
lock
cmc
push
pop
sub
fldcw
inc
cmp
mov
add
sbb
pop
mov
les
test
dec
add
and
fldenv
fbstp
enter
insl
and
popa
dec
sbb
ret
dec
ljmp
sahf
in
stc
mov
xchg
das
rorb
jbe
cmp
pop
cltd
sbb
jo
push
shlb
mov
inc
inc
fsts
es
stc
lcall
pop
mov
iret
stos
push
adc
dec
inc
adc
sbb
xor
mov
mov
cmpl
jno
add
out
xchg
lret
das
adc
icebp
fdivr
sbb
pop
push
fdiv
js
push
inc
pop
je
sti
mull
movsl
inc
nop
push
gs
int
iret
bound
fidivl
add
jle
mov
cmp
sbb
fbld
jecxz
xlat
jg
sbb
add
fwait
mov
jae
mov
push
cmp
rclb
or
iret
out
mov
out
fisubs
jnp
jge
cmc
pop
repnz
sbb
shll
lcall
pop
adc
or
divb
dec
inc
dec
cmp
push
mov
mov
fst
mov
cmp
out
fs
mov
icebp
xchg
sti
bts
in
ds
add
icebp
adc
xchg
xchg
xchg
or
pop
into
dec
stos
sbb
out
cmc
or
adc
repz
ljmp
push
decl
sarl
cs
stc
sub
in
cmc
mov
mov
mov
mov
push
fld
scas
jnp
aaa
movsl
cmp
dec
xor
mov
push
sahf
aaa
cmpsb
ss
mov
enter
sbb
adc
dec
sbb
inc
push
roll
cmpsb
pushf
push
fldcw
cmp
lret
or
adc
jg
or
mov
outsb
xor
push
sub
nop
add
sbbl
bound
hlt
inc
ss
or
in
sti
fsubrl
xor
cmp
add
xor
in
jg
adc
push
aaa
lret
faddl
ja
adcl
push
fcmovnb
into
addr16
inc
jle
insl
repz
sub
addl
fidivrl
cld
add
sub
jmp
cmp
cmp
repnz
div
add
outsb
insl
push
adc
or
pop
xor
imul
sbb
out
popf
leave
push
leave
rcll
std
in
inc
push
testl
fwait
addr16
ret
mov
xchg
icebp
pop
fistpll
or
jl
lock
icebp
cmove
daa
loope
imul
xchg
and
lods
sti
aam
cltd
test
xor
out
cs
dec
in
lcall
cltd
jle
fcmovnu
xor
int
fimuls
mov
mov
jbe
jmp
iret
mov
ret
cmova
pop
lcall
add
aas
xchg
jp
repz
push
ret
dec
and
ret
cwtl
mov
fisubl
fdivrs
dec
push
dec
pop
mov
ljmp
cmc
mov
xchg
add
cltd
out
and
push
or
inc
mov
in
call
sti
es
cwtl
xor
cltd
mov
sbb
pop
cltd
and
test
sub
fcompl
scas
add
fldl
loopne
push
xchg
pop
loopne
aad
mov
xchg
xor
pop
subl
clc
push
push
mov
lds
int3
and
dec
add
in
push
aas
pop
cmp
cmp
inc
scas
add
popf
xor
aaa
sahf
sbb
and
rolb
xor
mov
push
mov
and
mov
and
xchg
rolb
xchg
shll
add
cmp
mov
cmp
pop
rclb
pop
ljmp
sbb
pusha
push
pusha
ret
sbb
and
in
jp
sbb
test
js
cs
dec
inc
cmc
shlb
mulb
insb
mov
test
mov
nop
dec
ss
pop
xorps
movsb
xchg
outsl
xlat
add
outsb
frstors
imul
mov
mov
mov
inc
repz
arpl
and
and
mov
jle
fistps
and
inc
loop
loop
imul
out
lcall
push
push
test
roll
fbld
cmp
mov
jecxz
mov
data16
mov
ficoms
push
loopne
mov
out
icebp
gs
and
mov
add
cmpsb
jmp
mov
ljmp
das
dec
lahf
out
add
movsl
push
push
mov
or
jmp
xchg
aaa
je
shll
pusha
xlat
fistps
push
popa
pushf
mov
mov
cli
push
je
imul
jle
test
inc
mov
sti
sbb
push
ficoms
ret
stos
shrl
sbb
shrb
pop
add
mov
lret
pop
sbb
test
add
jbe
mov
push
sbb
sti
sub
inc
inc
jns
repz
push
jne
aaa
mov
sarl
push
inc
mov
rcl
out
mov
jo
sahf
fnstcw
arpl
aas
cmpsb
lret
hlt
sub
sub
jae
test
pop
popf
add
movsl
sub
icebp
push
pop
loope
ljmp
mov
jge
pop
jg
out
cmpsl
rcrl
sbb
jb
mov
cmp
test
test
aam
mov
xor
xlat
enter
jbe
mov
adc
out
sahf
push
iret
jge
insb
sub
je
and
inc
mov
adcl
jns
add
jb
push
cmpsb
sbb
sub
orl
jmp
jnp
mov
mov
jg
and
pop
lds
stc
sahf
test
lods
mov
xchg
lahf
mov
jns
sub
xchg
lods
mov
sbb
inc
sub
mov
jecxz
mov
and
nop
jae
outsl
out
dec
mov
stos
jg
orb
xchg
mov
cld
out
les
sarb
sub
wrmsr
push
repnz
pop
leave
xor
mov
dec
data16
dec
or
in
inc
xchg
pop
je
or
jb
repz
jnp
stos
shl
test
cmpsb
aam
sbb
les
dec
fcomi
dec
sbb
notl
add
inc
mov
test
repnz
add
jl
jae
mov
clc
xor
push
push
push
mov
push
mov
repnz
xor
mov
aam
mov
repnz
je
clc
jno
das
mov
xchg
daa
cwtl
push
mov
push
mov
lods
insl
pop
arpl
push
icebp
mov
xlat
aad
pop
repz
xlat
inc
xchg
incl
or
adc
mov
ja
mov
add
mov
adc
jle
cmp
je
insb
mov
in
lret
xchg
sub
pop
fnsave
popa
shr
faddp
jmp
inc
push
sbb
aad
sub
stos
int3
pop
and
xchg
ja
outsl
out
imul
gs
xor
call
pop
xchg
mov
adcl
daa
sub
hlt
jge
rorb
or
addl
stc
sub
lcall
mov
sbb
xchg
mov
mov
push
pop
lret
js
pusha
add
ret
dec
mul
and
pop
rclb
pop
sbb
xchg
stc
add
mov
andl
aad
movsb
pop
in
jl
and
idivb
out
xchg
fists
mov
or
imul
pop
pop
push
lret
mov
jbe
or
out
add
je
inc
fisttpll
add
or
movsb
mov
and
mov
fbstp
aaa
cs
fdivl
sub
leave
les
xchg
das
cmp
pop
fdivr
insl
mov
xchg
out
faddp
inc
lods
call
sbbl
ret
sub
cmpsl
leave
mov
out
add
cmpsl
pop
mov
mov
mov
scas
xchg
fisubl
movsb
aad
cmpsl
pop
int3
xor
dec
test
xlat
add
mov
andb
push
fucomip
or
pop
shrl
add
or
out
ret
and
test
arpl
leave
jbe
aaa
mov
inc
insb
sub
pop
icebp
loope
or
dec
xor
fisttpl
jge
test
jno
xlat
sbb
mov
pmaxsw
ljmp
jl
sub
ds
je
lahf
icebp
cwtl
mov
sbb
inc
pusha
fcomps
adc
push
adc
mov
dec
incl
xorl
push
nop
das
call
sub
mov
adc
mov
mov
js
or
mov
fdivrl
in
dec
lcall
shrb
iret
xchg
fcoms
mov
and
jecxz
adc
mov
jo
into
enter
push
sub
xor
sahf
scas
fldl
xchg
push
inc
es
pop
mov
daa
std
test
inc
push
loope
inc
subl
jns
les
int
push
sti
addr16
out
inc
ret
mov
sahf
mov
test
adc
out
and
xchg
push
adc
jge
xchg
ret
jle
sub
xchg
mov
daa
pop
pop
xchg
xchg
sbb
push
sbb
int
inc
loopne
movsl
xchg
jp
outsb
pop
stos
mov
loopne
ficomps
pop
int3
mov
addl
push
fnsave
jo
leave
pop
cmp
jne
sbb
sti
imul
negl
add
mov
push
adc
mov
xchg
push
rcll
xchg
lret
pop
pop
cltd
jle
lea
xor
bound
movsb
sub
pushf
stc
cmpl
in
inc
adc
sbb
wrmsr
cmp
push
xchg
sbb
mov
in
xchg
mov
pusha
cmp
pop
push
je
fidivrl
cmpsb
cmp
pusha
xchg
xor
test
cltd
add
adc
scas
sub
xchg
xchg
adc
stc
bound
xchg
mov
mov
or
add
repnz
vpmacsswd
cmpsb
inc
cmp
cld
in
push
int3
and
int3
arpl
mov
js
sbb
sbb
fistpl
add
lea
aas
es
mov
mulb
cmp
push
jg
stos
mov
sub
mov
fisttps
cld
dec
shr
pop
push
ret
outsl
mov
orl
sub
cmp
sbb
test
ds
xor
adc
es
push
xor
aad
xchg
test
and
stos
cmpsl
push
int3
xor
sbb
movb
jnp
xchg
sub
dec
cmp
repnz
and
jbe,pt
dec
xchg
xchg
xorl
stc
rolb
or
pop
pop
dec
rorl
pop
mov
outsb
mov
shl
dec
ret
stos
arpl
mov
fs
or
mov
inc
es
sbb
sub
test
movb
loopne
xor
sbb
mov
pop
or
lcall
insl
in
outsl
pusha
jl
shlb
pop
xor
subb
ja
shl
push
gs
push
add
and
jnp
sbb
in
ret
imul
push
int
int
cmp
out
pop
loop
push
jnp
add
sahf
sub
inc
add
or
or
cmp
dec
jo
inc
push
pop
loopne
sti
lods
add
cmpsb
cli
mov
jge
mov
xchg
movsl
and
sub
fcomi
adc
dec
enter
add
mov
cltd
cmp
mov
cmp
mov
mov
adc
cs
daa
ficompl
scas
scas
mov
in
jle
orl
xor
dec
inc
cmp
test
lock
dec
pop
nop
les
scas
fdivrl
incl
lahf
xchg
enter
add
pusha
mov
lea
mov
dec
fisubrl
sub
sbbb
mov
mov
fistpl
dec
std
repz
lret
fimuls
in
inc
stos
pop
js
shrl
fildll
inc
int3
dec
add
inc
movsl
adc
mov
mov
sahf
popa
fcompl
fidivl
cmp
pop
cs
dec
pop
mov
mov
adc
shlb
call
or
daa
xchg
or
aad
sbb
sub
push
or
push
scas
adc
loop
fwait
andl
jae
mov
cltd
clc
daa
cmc
sbb
call
dec
ljmp
in
sub
cmp
subb
mov
popf
add
and
push
xor
sbb
std
and
lcall
mov
sub
aam
loopne
inc
xor
sbb
enter
mov
int
mov
subl
and
jae
pop
notb
push
jg
ja
cmp
or
mov
jno
add
mov
pop
mov
ljmp
inc
out
clc
adc
cmp
xchg
mov
mov
jmp
aad
mov
add
test
push
pushf
idivl
orb
add
add
imul
and
xor
push
cmp
mov
sbb
lods
imul
pop
adc
pop
imul
mov
mov
leave
insb
in
push
shl
repnz
gs
mull
sub
mov
jo
or
mulb
loope
xchg
mov
scas
push
cmpsb
pop
aaa
jle
testb
lret
push
in
jle
pop
stos
jne
mov
pop
orb
cmpsl
sub
or
xchg
or
jbe
mov
jne
in
out
negb
jo
sbb
data16
jle
aas
mov
pushf
cltd
out
inc
std
inc
cmp
pop
push
rol
xor
xchg
push
call
ljmp
jge
test
cmp
mov
mov
mov
sbbb
inc
pop
test
shll
jnp
jp
in
jle
test
cmp
mov
rcll
jae
pcmpeqd
pop
push
sub
sbb
das
pop
jg
movsl
cmpsb
ja
outsb
data16
cmpsb
inc
je
dec
inc
adc
je
mov
mov
jbe
aad
pushf
jle
daa
loopne
fs
adc
js
cs
lea
push
pop
test
sbb
xchg
adc
pop
fsubrp
mov
into
shrl
push
mov
std
inc
push
and
mov
imul
sub
xor
or
cmp
pop
mov
inc
mull
addr16
fldl2e
mov
out
lcall
call
add
adc
imul
das
lahf
and
leave
sar
jle
dec
mov
push
adc
stos
rorb
jnp
mov
inc
xchg
int3
and
inc
jns
cltd
rolb
sbb
insl
sbb
sub
mov
dec
movsl
lds
pop
int
ret
inc
dec
dec
push
jp
ret
xchg
sbb
les
cwtl
or
cltd
rorb
faddp
push
cltd
dec
mov
jne
xchg
cmp
pop
inc
and
add
sti
sub
loop
xchg
clc
jmp
lods
xlat
imul
test
fidivl
scas
or
ss
shlb
dec
inc
fs
insl
clc
hlt
sub
push
cmp
and
xchg
xchg
out
jno
movsb
xor
fidivrl
mov
cmp
loopne
stos
xor
stos
rorl
push
ficompl
data16
jmp
jmp
inc
xor
mov
add
out
cld
inc
jnp
cmp
mov
scas
push
xor
push
sbbb
imul
icebp
lods
xchg
pop
lods
femms
pop
jmp
cld
adc
loope
jecxz
and
loope
lret
aad
xchg
jmp
push
mov
dec
ret
inc
nop
pop
xor
jnp
ss
mov
mov
out
or
sbb
das
mov
insb
test
in
and
xor
out
sahf
jl
cmp
lcall
data16
xchg
sbb
adc
notl
lret
cwtl
jge
and
xchg
fcomip
pop
push
iret
sub
or
pop
hlt
jmp
jle
pop
fldl
nop
add
popa
cmp
and
inc
in
jg
dec
push
das
cmp
xor
ret
jmp
or
test
inc
or
push
push
pop
bound
out
test
repnz
pxor
mov
daa
mov
mov
push
fs
pop
loop
decb
or
sub
inc
cmp
ret
daa
or
sbb
push
sbb
sub
sbbb
out
sahf
or
loope
push
iret
inc
mov
leave
call
or
mov
adc
pop
jmp
xchg
div
rcll
mov
enter
xchg
fcompl
fildl
mull
mov
loopne
mov
inc
lods
inc
inc
cltd
cmpsl
mov
out
pop
add
xchg
cmpsl
out
imul
mov
push
loop
iret
push
lret
adc
mov
shlb
xchg
dec
mov
cmp
push
shl
dec
push
add
cltd
push
fwait
shlb
mov
pop
dec
xlat
xchg
in
pop
int3
xor
sbb
adc
pop
lods
js
xchg
mov
mov
sbb
mov
jne
iret
inc
movsl
adc
out
mov
incb
jle
call
pushf
adc
sahf
jae
sti
add
shlb
jno
stos
add
jo
pop
cmp
dec
arpl
and
sbb
aad
pop
aad
test
pop
jp
or
push
mov
mov
cmp
xchg
out
xchg
push
movsb
inc
inc
pop
push
jo
adc
ds
pop
insb
jae
xor
outsl
dec
es
mov
lods
loopne
daa
push
or
stc
xchg
cmpb
dec
test
pop
cmp
mov
xchg
out
out
mov
andb
ret
icebp
leave
popf
xor
mov
adc
scas
xor
xor
es
or
cmp
mov
out
add
jmp
ljmp
js
cmpsb
pop
out
repz
insb
out
lods
xchg
jns
and
mov
sbb
cmp
das
fistpll
aam
ja
lret
testb
fisubs
inc
popa
les
and
or
aad
adc
inc
aam
testb
xchg
negl
inc
xlat
fcompl
lcall
push
insl
cmc
adc
lret
sub
fimull
loopne
scas
xchg
nop
xchg
push
cwtl
imul
outsb
movsl
jge
lahf
dec
lock
aas
mov
cltd
pop
jae
dec
push
outsl
push
iret
add
mov
repnz
jo
lret
adc
mov
test
test
jecxz
sbb
cmp
leave
inc
adc
movsb
dec
xchg
cld
inc
adc
mov
push
stos
stos
sub
xchg
jg
cwtl
cmp
pop
sbb
add
xor
mov
mov
push
fcmovbe
shrl
xchg
add
sub
xchg
shlb
mov
cmp
push
daa
mov
repnz
test
out
movsl
fisubl
fdivl
sub
pop
gs
jl
pop
jb
pop
mul
mov
popa
sbb
imul
mov
and
dec
data16
mov
mov
fldcw
test
subl
aad
and
test
or
pop
lds
sar
jnp
loopne
arpl
push
mov
or
adc
xchg
test
jno
adc
data16
lds
dec
into
jg
data16
push
lods
sub
outsb
push
aad
add
jo
out
push
mov
aam
sbb
mov
mov
xor
popa
dec
loop
ret
int3
push
xchg
pop
out
xchg
xorl
push
call
aas
mov
mov
fisubs
inc
fsts
push
sbb
add
popa
lea
lea
xchg
inc
fwait
dec
dec
push
dec
inc
xlat
fiadds
jle
jns
or
and
pop
rcl
xchg
pop
push
dec
or
popf
test
mov
data16
mov
into
pop
aaa
je
test
and
add
stc
scas
es
mov
scas
adc
fidivrs
dec
outsb
cmpsl
arpl
hlt
pop
popl
xor
aam
mov
sbb
out
popf
inc
cmp
in
mov
jbe
notl
push
dec
pusha
jl
fsubl
rcl
xorl
fidivl
jge
leave
sbb
cli
push
js
mov
sbb
push
jmp
pop
dec
int3
push
cs
pop
out
fs
inc
pop
insb
ss
les
adc
inc
and
in
dec
testl
insl
xor
adc
dec
pop
mov
xor
adc
mov
jg
insb
sbbl
jmp
mov
cmpsl
and
cwtl
jno
sbb
dec
fmulp
rolb
cmpsl
test
jmp
mov
lea
xor
and
and
lea
mov
popf
xchg
lock
add
das
orl
push
mov
jge
addr16
add
in
xchg
xlat
imul
add
mov
dec
scas
and
call
mov
fstl
repnz
add
repz
inc
sbb
leave
jmp
add
dec
lods
xchg
jp
xchg
test
ret
insl
lds
icebp
decb
mov
dec
mov
popf
mov
mov
push
xchg
fadds
movsb
and
xlat
jo
nop
and
shll
lods
es
aas
jbe
dec
jmp
call
mov
std
xchg
imul
add
jnp
iret
dec
lahf
or
push
pop
fs
out
push
pop
test
lds
push
jge
in
mov
xchg
sti
jo
mov
and
pop
in
xchg
mov
andb
mov
mov
sbb
cmc
cltd
ret
in
inc
repz
int3
bound
filds
push
lock
jle
out
pop
push
roll
scas
into
jo
mov
std
add
push
insl
cmp
out
scas
andl
daa
cmp
movsl
or
clc
sbb
rcr
cmp
ljmp
jge
call
add
xchg
pop
adc
icebp
cmp
jmp
pop
gs
je
mov
out
movl
xor
and
test
ja
dec
jno
jbe
cmp
pop
mov
xchg
jmp
mov
js
aam
inc
mov
push
out
stos
std
pop
loop
adc
aaa
je
adc
jg
add
and
mov
outsl
jb
imul
js
fidivrl
insb
add
rcrl
negl
mov
inc
fwait
sub
pop
clc
repnz
jns
dec
out
outsl
inc
cmp
pop
and
add
mov
mov
hlt
cli
lods
inc
lock
std
inc
pop
es
adc
or
cmpsb
pop
fldcw
pop
or
repz
or
sub
fwait
xor
jae
push
stos
dec
sub
into
out
outsl
mov
adc
adc
fdivr
cli
and
lock
dec
loop
lahf
push
inc
ret
stc
stos
aas
dec
adc
out
in
outsb
lock
jne
pop
fucomi
test
jge
repz
adc
mov
push
cmp
sahf
gs
dec
xchg
shl
xlat
sub
jmp
and
or
jge
push
mov
cmc
xor
pop
not
inc
xchg
xchg
mov
roll
aaa
jecxz
jmp
data16
push
data16
fimuls
std
xchg
ja
jmp
mov
and
ret
sbb
iret
dec
imul
xor
scas
push
lret
cmp
cmp
pop
ret
jns
xchg
jbe
pushf
xor
add
add
std
punpckldq
push
sti
pop
adc
pusha
in
out
cmp
adc
je
pop
imul
fistpl
test
or
sbb
mov
aaa
les
test
int
daa
or
pop
mov
dec
push
adc
sub
test
mov
pop
push
dec
lret
pop
add
pusha
mov
mov
mov
and
jnp
mul
jp
mov
pop
test
fsts
leave
pop
xorb
xchg
and
fninit
inc
inc
adc
mov
pop
bound
mov
jmp
rolb
ret
iret
je
dec
jmp
lahf
test
je
mov
mov
dec
ljmp
jecxz
in
mov
cmp
mov
cmp
ljmp
xchg
bound
jl
hlt
mov
and
das
test
bound
xlat
pop
scas
mov
adc
jmp
dec
adc
push
xchg
mov
push
jg
pop
mov
adc
imul
xchg
xchg
les
jnp
data16
jl
jno
jbe
or
xchg
sbb
icebp
loope
cmp
jo
dec
dec
sbb
fsubrl
sbb
dec
sub
add
popa
fisubl
and
pop
cwtl
cmp
dec
pusha
cmp
mov
lret
stos
adc
je
xchg
and
sub
jl
mov
sub
stc
out
lods
sbb
mov
mov
mov
and
push
das
cmp
mov
and
ss
pop
xchg
mov
stc
cmp
repnz
popa
cmpsb
bound
pop
fwait
pop
push
test
lret
pop
dec
mov
add
mov
enter
sub
adc
jae
les
fdivrs
je
pop
inc
push
xor
cmp
nop
nop
jecxz
cmp
rcrl
dec
inc
jmp
add
cwtl
mov
jbe
mov
dec
test
push
lock
gs
cmp
cwtl
ss
aas
dec
jl
jne
jl
jecxz
pop
mov
popa
test
xchg
xchg
pop
mov
push
outsb
adc
push
jmp
aaa
push
fisubl
mov
mov
in
jne
cmp
inc
mov
jg
push
out
outsb
andl
mov
and
outsl
inc
loopne
push
xor
aad
daa
and
or
pushl
bound
mov
mov
popa
add
sub
cld
adc
ss
ss
popf
pushf
inc
mov
in
mov
cmpsb
mov
mov
push
sub
xor
sbb
and
adc
jnp
test
data16
ret
add
inc
jne
adc
cmp
cmpsl
sarb
sarl
movsb
inc
jb
lret
mov
or
cs
xor
sahf
adc
lahf
inc
jl
sbb
fistl
lahf
and
stc
mov
adc
in
mov
jg
sbb
jg
xor
test
pop
sub
ret
dec
cwtl
aas
mov
dec
scas
scas
xchg
aam
stos
sbb
stos
and
cmc
or
inc
inc
pop
ja
pop
inc
in
ret
pop
pop
neg
stos
push
or
stos
fs
jge
cmp
and
dec
call
in
lahf
xchg
jnp
sub
xor
add
push
mov
clc
sti
je
push
pusha
cwtl
shll
xchg
aaa
lods
xor
jns
nop
cmp
repnz
jge
push
out
popf
mov
call
inc
xorl
fwait
inc
mov
mov
push
pop
mov
xchg
dec
pop
or
leave
int
les
jl
sub
mov
imul
jg
cltd
sbb
ffree
inc
lahf
inc
mov
ret
das
jo
sub
lret
andb
xchg
xchg
jnp
push
pop
mov
sub
cld
push
adc
stos
xchg
mov
jg
pop
stos
shlb
inc
out
test
mov
dec
outsl
xchg
mov
add
popf
bound
mov
fs
dec
ret
mov
xchg
xlat
mov
cmp
movsb
mov
inc
push
mov
fdivl
xor
rorb
jmp
mov
in
jmp
sahf
ljmp
add
sti
xchg
jp
pop
xchg
cld
movlps
cmp
lret
je
or
jnp
test
mov
ret
dec
xor
scas
add
mov
lahf
xchg
push
movl
xlat
mov
aas
mov
movsb
das
mov
sahf
and
repnz
or
mov
or
or
clc
push
ljmp
push
jbe
push
gs
mov
xlat
jns
leave
xchg
mov
in
jg
aas
mov
lods
pusha
mov
insl
mov
test
sub
jecxz
add
mov
dec
pop
inc
mov
cltd
pushf
mov
dec
and
or
or
sbb
mov
xor
test
decl
addr16
inc
adc
xchg
imul
pop
lods
aas
sbbb
add
je
sub
sbb
mov
xor
shl
sahf
fwait
daa
dec
push
cmp
cli
push
push
lret
outsl
add
inc
repz
xchg
aam
lret
lahf
xchg
xor
pop
das
bound
inc
outsb
hlt
fs
jae
cli
pop
dec
push
test
movsl
gs
pushfw
pop
jle
cmpsb
popa
cld
mov
dec
iret
cmpsl
xchg
je
ret
mov
push
nop
test
dec
pop
orb
adc
mov
mov
nop
sbb
iret
stc
and
aad
jnp
int3
and
mov
lahf
icebp
dec
pop
lods
ror
cli
lcall
adc
sbb
movsb
movsb
dec
jle
jl
jne
fcoms
jmp
subb
test
mov
mov
out
adc
cs
mov
dec
nop
sbb
mov
lds
pop
inc
int3
and
pop
or
xchg
dec
in
daa
inc
lret
or
lret
js
cmp
into
mov
divb
fistps
add
sbb
ret
or
add
add
pop
xchg
inc
dec
je
bound
and
out
push
out
in
out
adc
popf
vpshufd
int3
out
ja
lcall
mov
repz
cmc
pop
push
push
out
ret
gs
mov
popl
inc
popa
pop
inc
subb
and
andl
add
jg
mov
stos
roll
loope
dec
xchg
mov
mov
ljmp
mov
cmp
push
pop
add
sbb
out
addb
mov
insb
jp
test
mov
sbb
ja
cmp
fnstenv
rol
cmp
jae
repnz
push
imul
bound
cmp
sub
sbb
enter
dec
sub
fwait
insl
dec
das
xchg
in
pop
inc
mov
lret
outsb
or
pop
aas
outsl
dec
pop
lods
adc
add
inc
insl
xchg
and
sub
cmp
into
mov
out
stc
lods
insb
lods
adc
out
jnp
xor
in
pop
xor
rep
push
pop
xor
sbb
xchg
in
and
fcmovb
xlat
mov
xor
cwtl
shl
cmpb
mov
movsl
subb
out
cltd
xchg
mov
cmp
mov
scas
lret
xchg
sub
ds
ja
clc
les
cmpsb
jo
dec
in
sub
mov
mov
cmpl
add
lods
pop
xchg
aaa
pop
sti
scas
in
mov
fcomi
sub
xlat
inc
rolw
xor
fdivr
lret
sarb
pushf
bound
int3
dec
aaa
mov
xchg
pop
xchg
jl
mov
lea
mov
shrb
inc
bound
orb
sarb
aam
mov
mov
daa
push
mov
push
dec
push
xchg
dec
mov
scas
pop
cmp
sub
stos
mov
in
jbe
or
test
outsl
daa
cmp
les
lret
mov
mov
fisttps
xchg
in
cmp
pop
push
sbb
add
sub
xchg
push
aam
xchg
mov
fiadds
push
mov
dec
xor
repz
push
add
adcl
pushf
mov
pop
clc
xchg
pop
das
loope
xchg
pop
lret
xor
imul
int3
cmp
stos
test
pop
adc
daa
fistl
push
ja
pop
in
xchg
xchg
lea
push
push
dec
or
xchg
imul
aad
dec
xor
add
add
insl
scas
push
jecxz
jmp
scas
test
xchg
out
call
pop
ljmp
pushf
push
cs
out
call
sahf
imull
add
sti
adc
sbb
xor
insb
stc
ret
das
lea
mov
add
inc
push
std
adc
nop
add
jns
pushf
out
dec
mov
insl
and
lods
lods
shrl
add
push
outsl
lods
stos
sub
dec
inc
xchg
pop
mov
mov
mov
push
mov
mov
pop
adc
xlat
test
rorb
int
test
add
mov
ljmp
jb
add
sub
jnp
inc
and
sub
int3
add
push
cli
scas
fcompp
out
jb
xor
dec
jno
movb
xor
jb
divb
aaa
jae
and
mov
mov
jo
jb
sbb
mov
inc
pop
push
int
mov
and
test
imul
pop
add
test
xchg
sbb
add
xchg
shrb
mov
or
imul
ljmp
inc
fiaddl
ljmp
stc
fsts
pop
mov
dec
cwtl
mov
cs
pushl
mov
xchg
loopne
push
hlt
stos
test
xchg
imul
jno
xorl
mov
shl
call
idivl
arpl
cmp
mov
int3
pop
daa
imul
pop
push
ja
and
mov
mov
xchg
mov
cmpsb
pushf
lcall
in
add
pop
stos
mov
jns
int3
cmpsl
jl
adc
sbb
jnp
xchg
and
shll
jecxz
hlt
outsb
push
cli
cmpsl
fistpll
test
push
adc
push
mov
push
lahf
test
and
push
out
push
mov
pop
fsubs
aaa
movsb
rcrl
jl
jecxz
jb
ja
cmp
push
std
cmp
push
adc
cmc
inc
test
out
push
fsubrs
fistpl
push
pop
testb
jmp
jmp
js
pushw
enter
mov
scas
add
shrl
int3
mov
loopne
sbb
sub
rclb
cmovbe
pop
mov
cmp
loop
bound
pop
loop
cmc
push
aam
lock
les
mov
dec
xor
sub
test
test
imul
cld
push
into
subb
cwtl
por
mul
imul
cmc
in
cmp
ljmp
mov
ja
sub
in
ja
xchg
xchg
and
mov
addr16
or
mov
fstl
ret
pop
lret
cli
or
out
gs
mov
lcall
add
sub
sub
cmpsl
js
xchg
mov
cwtl
sbb
xchg
fld
popa
and
push
push
xlat
and
xor
xchg
xorb
jno
mov
into
imul
or
dec
add
shll
imul
sbb
mov
push
xchg
dec
cs
xchg
xor
inc
out
repnz
rclb
lods
mov
dec
test
pop
jbe
sbb
mov
mov
push
cmpsb
jle
mov
jno
xlat
mov
pop
jae
movsl
mov
pusha
mov
pop
cmp
leave
pop
sub
sar
mov
roll
or
sub
mov
push
in
int3
inc
adc
dec
pop
lret
mov
mov
and
cli
fdivs
icebp
and
incb
faddl
xchg
rorb
jno
inc
fs
xchg
xor
insb
sub
mov
pop
cmc
decl
push
insl
xchg
test
cmpsb
fucomp
dec
jle
fldcw
aam
movsl
ret
pushl
mov
and
addl
add
xchg
fwait
pop
mov
aad
ja
clc
test
lcall
mov
lods
xchg
mov
and
xor
xchg
clc
mov
push
cmpsl
lret
ss
movsl
xchg
adc
inc
add
mov
add
push
test
aad
add
xlat
jo
cltd
inc
test
aam
aaa
jl
mov
jno
mov
scas
cmp
popa
xor
popf
enter
sahf
je
rorl
mov
mov
cmpsl
inc
stc
jmp
adc
test
in
add
inc
ret
hlt
mov
xchg
or
aad
mov
mov
mov
mov
ret
hlt
pushf
adc
fsubs
repz
scas
sbb
lods
nop
xchg
push
dec
push
pop
pop
sbb
cs
outsl
loop
adc
popa
adc
lahf
mov
pop
mov
mov
jl
mov
popf
cmp
lret
jae
cmpsl
clc
mov
jmp
xchg
dec
lock
icebp
stos
dec
andl
xor
je
jne
adc
push
push
test
push
imul
mov
cltd
hlt
or
test
and
mov
les
sub
add
gs
jne
xor
cmp
pop
daa
xchg
xlat
fistpl
shll
pop
push
hlt
mov
inc
adc
push
xor
lods
or
jecxz
xchg
gs
pmulhuw
adc
inc
out
test
mov
or
ret
adc
push
out
hlt
dec
call
rolb
fcomi
fstps
mov
lcall
jnp
out
jge
ficoml
in
cmp
fwait
cld
cmpsb
pop
insb
cbtw
pop
das
enter
add
jno
enter
test
jne
je
add
push
roll
iret
sbbl
rcrl
pop
xor
xchg
lret
xchg
jmp
pop
orb
dec
in
sbb
jae
outsb
xchg
fidivs
stos
jge
mov
ja
in
ljmp
xor
cs
in
in
inc
jmp
jge
mov
popa
andl
aas
xor
mov
push
mov
clc
movsbl
cltd
scas
push
cmpsb
fidivs
test
mov
hlt
js
mov
sahf
cmpsl
dec
and
mov
cmp
adc
cltd
lcall
xor
mov
fbstp
mov
mov
leave
xchg
mov
or
pushf
test
jae
mov
into
fstl
push
fwait
adc
andb
pop
inc
insb
adc
lret
mov
mov
mov
movsb
pop
in
fwait
pop
cwtl
ljmp
adc
xchg
cmp
pop
jnp
xor
sbb
sbb
xchg
cli
and
and
lret
sub
out
and
in
sbb
clc
push
out
ret
aam
adc
mov
mov
sbb
lds
in
test
loopne,pn
add
pop
xor
ljmp
fcmovne
scas
lcall
and
xor
dec
xor
lods
push
xchg
fldt
add
cmc
mov
jo
xor
jnp
mov
jl
dec
out
stos
paddd
cmpsl
mov
js
imulb
pushf
push
pop
pop
inc
call
lods
inc
cs
fbstp
or
and
push
sti
and
jo
pop
and
mov
int
sub
scas
cmc
adc
sbb
fistl
cmpsl
inc
adc
cld
push
orb
mov
push
sarl
cs
ficoml
jg
sub
fnsave
cmp
cwtl
dec
int3
xor
addb
fs
test
popf
pop
mov
cltd
add
cmp
jle
sar
rclb
fdivrl
imul
stos
rcl
jmp
xchg
lock
jns
jle
dec
imul
hlt
ds
mov
test
arpl
test
movsb
mov
add
aad
push
inc
jmp
and
div
push
jnp
je
inc
pushf
arpl
cs
lret
fwait
add
inc
mov
movsl
sub
movsl
lret
icebp
pushf
enter
xor
clc
push
les
mov
mov
scas
ss
xchg
into
xor
dec
shll
leave
mov
enter
dec
sub
je
std
fwait
sub
out
mov
pop
xchg
into
or
jp
les
dec
xchg
fiadds
and
cwtl
test
lahf
aas
rcr
imul
push
enter
leave
int3
lods
into
jmp
in
mov
sbb
mov
shrl
jl
or
or
in
jae
clc
cmp
movsb
cmp
inc
cmpsb
test
fcoml
fwait
or
push
mov
dec
jecxz
lds
xchg
fisubrl
cwtl
lods
add
dec
sbb
push
insb
mov
addb
xchg
stos
mov
dec
repnz
fcompl
sub
add
mov
cwtl
movups
xchg
loope
cmc
xchg
ret
push
dec
pop
pop
push
mov
push
cmp
and
repnz
lds
and
ds
into
mov
jg
mov
int3
lock
cmp
mov
incb
xchg
stos
mov
push
ret
mov
xchg
int
adc
xchg
in
cmp
jge
aam
dec
lahf
rcl
add
sub
add
xlat
in
rcrl
jp
dec
aam
mov
out
jo
push
mov
jmp
mov
int
cli
push
vpunpckhdq
call
pop
js
cmpsb
fnstsw
rolb
mov
mov
jl
sti
xor
sbb
movl
jb
xchg
jae
addr16
mov
add
jge
cwtl
je
out
lods
lahf
subl
pop
stos
shll
sub
rep
lods
jp
sub
jb
mov
mov
pop
xchg
jp
cmp
popf
cmp
xlat
adc
sub
test
icebp
pushf
inc
xor
out
push
fs
push
sub
xchg
test
in
cmp
add
pop
shll
push
xorl
cmp
jg
mov
dec
sbb
xchg
fnsave
enter
mov
ret
jns
pop
stos
add
xchg
cld
cmp
fcompl
push
stos
cld
or
jnp
or
mov
lea
imul
cmpsb
filds
aam
loopne
sbb
inc
push
pop
pop
ss
loopne
mov
jno
in
arpl
sbb
leave
addb
mov
sub
mov
push
cmp
adc
inc
jae
pop
xor
or
and
ljmp
mov
push
lcall
push
nop
sub
cmp
sbb
leave
push
repz
cli
addr16
dec
mov
mov
push
fwait
inc
sbb
into
jmp
push
mov
data16
mov
adc
mov
jae
mov
xchg
fisubl
mov
into
xlat
int
push
adcb
adc
in
loope
mov
mov
outsb
jg
mov
insl
fs
sub
insb
or
add
push
dec
test
cmp
in
mov
jl
decl
shll
mov
imul
fildll
mov
jp
popf
stos
cmpsb
aas
shll
in
push
in
sbbb
into
add
in
les
sbb
xlat
movsl
rorb
pusha
paddusw
and
insb
sub
stos
cmpsl
fisttps
cmpb
jne
aad
jo
pop
ss
pop
shll
or
jp
je
inc
test
idivb
movaps
mov
mov
cmp
sub
in
fsts
daa
xchg
test
push
mov
inc
std
jns
pop
dec
scas
add
pop
add
sbb
jle
pop
aam
in
test
jmp
cltd
xchg
cmp
stc
cmp
xor
adc
push
inc
stos
push
jo
jmp
pusha
cmc
sbb
cltd
dec
push
std
ss
clc
imul
pop
lcall
stos
lods
sbb
sub
sub
cmp
movsb
adc
stos
dec
dec
cli
sbb
mov
xor
jge
dec
movsl
or
in
mov
pop
nop
push
add
and
pop
inc
out
push
sbb
std
fbld
pop
fldcw
insl
push
in
jne
mov
xor
fistl
xor
dec
cmpsl
sbb
jmp
mov
fwait
cmp
ret
inc
or
cltd
shl
rcll
popa
sti
jae
or
jbe
push
cmp
out
mov
iret
cmp
sahf
rol
outsl
cmp
ljmp
rolb
pop
jb
repz
mov
sub
or
jb
jno
xchg
pushl
add
lds
lds
push
lds
add
jb
out
test
sbb
in
test
adc
js
sub
add
sbb
dec
pop
add
movb
cmc
mov
aaa
adc
negl
xchg
and
loope
dec
mov
or
aas
mov
sbb
and
insl
lahf
jbe
lret
jne
push
jecxz
or
jbe
scas
inc
adc
sti
sub
sub
mov
add
ret
add
imul
push
xchg
addb
repz
or
repz
cmovns
int3
xor
adc
sbb
ljmp
daa
out
push
sub
dec
lret
push
ss
pusha
mov
mov
and
mov
pop
stc
jecxz
aas
test
mov
popa
adc
or
stc
jbe
lea
xchg
jecxz
dec
xor
outsl
cmpb
test
pop
stos
stos
aad
sub
xchg
lret
rclb
imul
fdiv
pop
pop
mov
or
fmulp
repz
inc
movsb
mov
adc
outsl
loop
dec
repz
push
test
adc
daa
pop
sbb
sub
push
sahf
in
getsec
jg
push
lahf
add
sbb
mov
int
inc
push
add
jnp
loopne
xlat
bound
test
out
int
cld
pusha
stos
arpl
stc
sub
stos
cmc
pushf
lret
pop
out
fisttpll
dec
mov
push
sbb
shl
sbb
jnp
mov
mov
inc
sbb
bound
lock
mov
mov
out
push
fucomp
clc
mov
cmp
cmp
ljmp
insl
pop
loopne
xchg
dec
mov
pop
mov
sahf
sti
data16
dec
pop
xchg
mov
movl
adc
and
loop
and
add
pop
mov
stc
data16
out
stos
movsl
inc
push
cmp
subl
jl
cmp
aad
cmp
add
add
xor
xchg
jge
push
xchg
xchg
mov
adc
out
fsubrs
inc
xlat
scas
leave
icebp
loopne
pop
mov
pop
loope
adc
cmp
pop
fwait
jnp
lcall
mov
fcmovnb
cli
loope
add
gs
or
dec
and
das
pusha
xor
insb
fs
decl
cwtl
pop
mov
push
jb
test
mov
add
outsb
frstor
sub
xor
add
ret
mov
loope
sbb
mov
pusha
lret
xor
and
addr16
repnz
xor
in
mov
mov
ja
enter
adc
push
imul
stc
sar
out
mov
es
dec
and
repz
xor
adc
das
fsts
popf
mov
cmp
das
inc
xchg
in
sub
fwait
test
mov
popa
mov
mov
add
stos
call
daa
test
hlt
imull
xor
aad
jmp
scas
es
mov
aad
lock
inc
loope
adc
imul
and
bound
xchg
imul
mov
adc
push
push
sub
pop
cmp
adc
push
repz
lret
jle
or
imulb
dec
aaa
adc
push
in
stc
pop
scas
js
mov
jb
adc
push
out
test
mov
xchg
cmp
inc
mov
cmp
sbb
sbb
in
dec
insl
ja
movsl
ss
dec
fs
sbb
jl
loop
jno
aam
mov
int3
cs
push
cmp
sub
jmp
push
mov
jns
sbb
rolb
lret
loopne
mov
rclb
enter
std
push
or
scas
ds
test
fs
sub
sub
lds
jae
shlb
sbb
lcall
xchg
push
stos
popf
pop
gs
sub
imul
jl
cli
and
inc
inc
sub
scas
mov
out
mov
loopne
inc
push
jmp
jp
divl
push
sbbl
add
mov
push
sub
addl
inc
xor
sub
sbb
pop
cs
dec
lahf
gs
push
mov
mov
mov
xchg
pop
mov
icebp
add
icebp
fsqrt
sub
dec
sbb
arpl
pushf
mov
stc
xchg
jnp
shl
shl
sbb
imul
dec
cld
push
sarb
push
mov
adc
adc
pop
daa
dec
or
repnz
test
addr16
pushf
pop
adc
aad
mov
pop
mov
repz
dec
popl
mov
cmc
fsubrs
cmp
and
lock
adc
sub
cwtl
or
loop
fiaddl
mov
hlt
push
inc
jbe
enter
fisttpl
cmc
and
inc
cmp
imul
lret
cmpsl
jnp
fidivrl
insl
subl
mov
sti
out
jno
cld
jno
sub
and
or
push
lret
add
mov
divl
pop
in
orb
hlt
out
sbb
sub
xlat
mov
movsb
test
sbb
jnp
cld
into
subb
mov
mov
cmpsb
mov
mov
adc
adc
leave
inc
cmpsb
and
pusha
adc
mov
aas
outsl
scas
out
sub
xchg
out
fmul
or
pop
push
push
mov
push
inc
mov
mov
and
jno
inc
cwtl
pop
xor
push
xlat
jae
shrl
mov
mov
push
push
std
cmpsl
or
adc
pushf
mov
inc
and
std
ljmp
cltd
test
iret
jnp
mov
push
fwait
test
movb
push
in
insl
out
jns
jbe
dec
sub
out
int3
cwtl
fs
mov
jo
push
repz
fnstsw
arpl
mov
mov
jmp
gs
xchg
sub
cld
mov
adc
jmp
mov
cmp
xchg
push
inc
jbe
mov
push
dec
test
insl
stc
pushf
shlb
lea
iret
loopne
mov
imull
inc
mov
in
push
xchg
roll
sar
scas
into
mov
pop
call
fnstcw
pop
ds
pop
sbb
loope
pop
fs
sbb
adc
push
adc
negl
lahf
clc
xor
cmp
sub
jnp
inc
mov
nop
popf
sub
cmc
mov
ret
fldcw
das
lret
lret
push
lods
incl
fsubl
adc
mov
mov
and
push
das
sbb
out
imul
popf
or
jmp
lods
or
fcom
adc
shl
pushf
mov
pop
out
cmp
out
outsl
xlat
or
lods
lock
mov
mov
cld
or
loope
jnp
mov
dec
inc
outsb
cmpb
push
jae
inc
sbb
fdivrs
mov
xor
adc
lock
cmpsb
push
push
and
mov
cmc
xor
push
in
or
dec
mov
push
das
mov
pop
mov
xchg
rdmsr
loopne
jecxz
into
daa
mov
jo
ljmp
and
and
dec
or
addr16
das
inc
xor
pusha
ja
add
insb
inc
or
ljmp
and
clc
xor
fs
cmp
adc
loop
pop
push
pop
dec
cmc
outsb
notl
imul
adcb
cmpsb
jbe
jecxz
daa
out
push
push
pusha
and
or
in
fbstp
and
mov
pop
pop
loop
jmp
test
or
mov
push
out
or
push
mov
pop
in
loopne
sub
out
fidivl
pop
movsl
mov
out
mov
mov
loop
lret
test
repnz
jno
cmp
inc
pop
fldz
divb
lods
xchg
dec
cmp
xchg
sti
sub
jb
xchg
cwtl
cli
cli
push
repz
inc
xor
pop
test
xor
xchg
jb
popa
mov
cld
cmp
outsb
sub
icebp
scas
daa
cmp
daa
sbb
mov
mov
ficoml
sub
or
sub
mov
push
in
hlt
daa
les
xchg
or
fs
pop
inc
push
xor
lcall
aaa
and
mov
or
and
lods
cli
sub
aaa
lea
add
mov
clc
cld
sub
repz
leave
push
xor
iret
add
mov
stos
xchg
mov
mov
push
xchg
or
pop
or
cli
gs
movsb
pushf
jne
jne
pop
bound
jb
or
add
lods
push
lds
mov
andl
iret
pop
dec
rolb
fwait
imul
xor
pop
lret
int
outsl
shlb
into
fdiv
jle
lcall
mov
sbb
pop
bnd
cmp
sar
sahf
mov
fimull
xchg
cmc
ss
pusha
loop
mov
insb
mov
sub
xchg
cmp
mov
add
jle
xchg
push
pop
inc
mov
cmp
out
test
andb
lahf
sub
and
je
push
cmp
or
dec
xchg
xchg
mov
add
pop
cwtl
movsb
and
out
jecxz
mov
xchg
mov
outsb
add
loope
cmp
mov
enter
cld
sub
adc
mov
jecxz
lret
inc
cmp
pop
repz
clc
in
sbb
fwait
test
pop
mov
mov
pusha
pop
scas
cs
cmp
outsb
pop
mov
sahf
out
dec
mov
addl
ljmp
add
mov
divb
dec
jo
cltd
in
xchg
pop
dec
neg
into
popa
mov
int
add
mov
aaa
incl
movb
sti
stc
in
stc
xchg
icebp
call
repz
aad
jecxz
jo
pop
sbb
lds
xchg
in
mov
cltd
mov
cmp
faddp
xchg
inc
mov
mov
fnsave
ljmp
push
lcall
pusha
aad
push
jmp
jg
cmp
pop
int3
insl
add
xlat
pop
cmp
xchg
mov
repz
push
rcl
scas
xor
mov
rolb
sbb
push
xchg
mov
push
jmp
das
or
xchg
lods
scas
stos
pop
ret
jl
push
addr16
jmp
adc
sbb
js
cwtl
shll
pusha
mov
mov
dec
adc
lock
and
mov
jo
mov
testb
xor
and
inc
mov
xchg
push
mov
lcall
or
add
dec
dec
mov
fsubrl
ss
ss
or
cmp
pop
repnz
push
dec
leave
adc
adc
loop
imul
and
push
add
mov
jge
push
sbb
cs
xchg
xor
xor
repz
dec
xchg
xchg
sub
adc
aaa
dec
fdivl
pop
push
cmc
mov
mov
rclb
push
inc
lods
adc
mov
and
cltd
imul
imulb
es
pop
incl
fsubs
fwait
pop
loop
into
shl
out
jmp
cmpsb
or
insl
push
mov
xor
popf
ljmp
idivb
dec
inc
clc
lret
or
cld
psllq
and
outsb
fisubl
push
outsl
sbb
cmp
jge
push
int3
lds
inc
into
fcoms
xor
mov
pushf
and
lahf
or
sbb
ljmp
aas
mov
ret
and
mov
xchg
lea
test
inc
mov
mov
xchg
nop
mov
enter
bound
insb
orl
clc
push
mov
pushf
sbbl
mov
add
sub
xchg
xor
fidivl
lret
enter
fsubrl
hlt
and
dec
xchg
aaa
test
inc
aad
inc
push
push
pop
imul
js
add
movsb
push
dec
lret
int
addr16
sbb
cmpsl
fiaddl
fnstenv
in
daa
or
mov
daa
sbb
cmp
data16
outsl
lods
inc
int
dec
or
lahf
testl
out
les
mov
cs
xchg
addb
idiv
adc
xor
stos
out
gs
sub
push
xor
sahf
ffree
cmp
and
xchg
hlt
push
test
bound
icebp
mov
gs
push
mov
add
add
data16
sub
sahf
icebp
cmpsl
cwtl
add
fwait
jecxz
or
mov
aas
sub
sbb
in
mov
mov
rcrb
jmp
add
lcall
push
aas
fimuls
inc
jmp
dec
hlt
in
pop
je
jno
rol
mov
mov
ficompl
in
and
insb
mov
push
mov
fbstp
lcall
push
sbb
nop
jae
cltd
es
repz
pop
das
rep
jge
xchg
into
in
sbb
ss
xchg
pop
ljmp
idiv
mov
ret
in
and
push
push
shr
test
xor
pop
cmp
and
negb
lods
adc
sbb
xchg
push
mov
std
sub
orb
mov
jle
sub
outsb
pusha
es
sbb
push
stc
cmpsb
mov
loopne
cltd
sub
insb
testb
leave
pusha
cmpsb
imul
stc
test
lahf
mov
in
jl
arpl
xchg
xchg
xor
and
addr16
xchg
mov
test
adc
and
fwait
cmp
or
mov
and
xchg
mov
dec
out
adc
sub
jmp
add
mov
fildl
mov
pop
lds
movsl
movsb
testb
xchg
or
outsl
inc
cmpsb
sbb
xchg
lret
push
icebp
addr16
outsl
popa
sbb
sbb
push
push
rorb
xor
xchg
pop
sbb
jmp
jge
fldenv
xchg
iret
lcall
xor
outsb
jge
cmp
enter
push
cmp
jne
xor
and
insb
test
xchg
mov
xor
ret
aas
fcomps
pop
adc
pop
enter
repz
mov
push
sbb
clc
add
jb
and
mull
inc
daa
push
or
lcall
hlt
jae
lret
jb
jmp
adc
adc
jno
cmp
pop
ds
xor
out
in
jno
repnz
and
and
scas
mov
loopne
cmc
dec
add
cld
iret
out
and
cli
push
push
and
and
sbb
fadds
push
xchg
enter
mov
movb
cmp
and
bswap
or
jecxz
and
lcall
call
test
xchg
push
sahf
mov
push
dec
mov
adc
dec
mov
adc
pushf
adc
mov
scas
pop
mov
pop
enter
repnz
out
sbb
clc
testb
xor
in
mov
js
shll
icebp
add
push
dec
cmp
rep
mov
push
idivl
mov
jo
out
lods
jmp
scas
icebp
push
lahf
divb
movb
or
fisttps
into
pop
addr16
mov
sub
jle
sub
jl
mov
xchg
mov
shrl
leave
ljmp
dec
sub
xor
and
xchg
pop
mov
inc
pop
outsl
xor
scas
out
push
into
daa
cwtl
call
mov
fcmovbe
sub
xor
dec
pop
xor
fnsave
xor
dec
jge
mov
repz
or
out
dec
xchg
cmp
scas
dec
hlt
dec
cltd
add
sub
mov
hlt
cmpsw
cmp
sbb
pop
ss
jne
loop
cmp
or
and
pop
sbb
mov
pushf
push
sub
fisubrl
clc
int
mull
and
ja
add
mov
xor
pop
call
insb
sahf
out
shrb
int3
rorl
jne
push
dec
stc
cld
subl
dec
fisttps
adc
jbe
or
lahf
mov
mov
mov
jns
pop
cmp
push
cmp
fs
jp
sub
scas
jl
inc
and
out
sub
test
inc
xchg
push
cmpsl
and
fists
into
pop
pop
or
jl
cmp
and
inc
mov
or
lret
cs
aas
add
lahf
push
push
pop
adc
inc
rcll
xlat
subb
and
fcmove
pop
lret
ret
jecxz
lds
dec
pop
cmp
sbb
adc
and
jb
mov
enter
outsb
jge
xor
stc
test
lods
cmp
push
mov
cmp
in
popa
pop
sbb
cld
loope
add
cmc
mov
push
or
mov
push
xchg
lods
lret
cmp
and
int3
push
or
clc
sbb
push
mov
in
dec
xchg
add
mov
xor
mov
in
lcall
sbb
cmc
adc
fldcw
rcll
leave
cmp
call
jg
repnz
and
or
pop
jno
das
lret
push
lahf
fwait
adc
cvtps2pi
nop
sbb
add
jecxz
call
push
in
and
ret
adc
adc
stc
in
jb
add
add
lds
inc
mov
xchg
inc
mov
dec
mov
sub
jbe
sbb
jno
lock
add
les
add
addl
out
push
lret
sbb
nop
and
add
dec
add
inc
and
push
cltd
addl
push
push
jo
dec
mov
scas
jl
push
jp
das
mov
mov
mov
nop
decl
inc
add
jl
add
arpl
mov
dec
sbb
lcall
and
int
int3
ja
je
push
jg
clc
lret
ja
add
add
mov
sbb
mov
adc
cmc
sub
jnp
mov
test
nop
dec
cmp
pop
ja
dec
dec
or
cltd
cli
dec
mov
aad
mov
xchg
icebp
je
xor
jg
sti
pushf
cmc
leave
rolb
sub
lcall
popa
lea
pop
xchg
xor
xchg
add
hlt
jle
inc
out
cmc
test
into
mov
inc
pushf
pop
sub
mov
cmpsl
push
out
cmc
pop
cs
and
push
pushf
or
adc
push
mov
ret
jnp
dec
push
ret
je
lock
inc
pop
aas
adc
xor
sbb
push
in
daa
sub
mov
cmc
mov
push
push
xor
fdivrs
addr16
xchg
pop
jnp
jmp
ret
out
or
cmp
stos
ror
xchg
mov
jbe
data16
imul
mov
xchg
jb
shlb
imul
cmp
out
in
insb
daa
dec
xor
and
fsubrs
fidivrl
pop
out
loope
mov
fwait
imul
inc
sbb
lods
inc
es
lods
or
xchg
ljmp
in
cld
sbb
pop
cmc
inc
ret
clc
divl
cmp
jns
xchg
mov
xchg
mov
mov
adc
shrb
out
or
jns
loope
lcall
in
and
dec
add
orb
and
int3
decb
fcomps
push
mov
stc
inc
inc
push
pop
ror
mov
cmp
fmull
std
and
mov
xchg
nop
pushf
jnp
xor
pop
xchg
in
lods
xchg
inc
test
divb
mov
nop
push
add
lods
pop
cmpsb
and
clc
sbb
mov
test
push
mov
jg
and
insl
faddl
pop
call
jl
out
std
inc
insl
jbe
sbb
mov
outsl
dec
mov
out
jl
pop
int3
call
lahf
cmpsl
add
xchg
sarl
xchg
sub
push
mov
jnp
ret
dec
ret
cmp
loop
xchg
add
gs
push
bound
mov
cmpsl
pop
imul
adc
push
insl
test
pop
mov
jl
stc
daa
cmp
jecxz
inc
push
daa
faddp
mov
in
les
sti
sbb
sub
ret
lock
out
cld
rclb
mov
jg
mov
xor
or
cltd
scas
or
push
dec
mov
jae
ret
jmp
cmpsl
mov
lods
stos
shll
lock
sbb
adc
fstpt
fs
sbb
mov
repz
jno
mov
inc
cld
scas
aaa
mov
test
dec
and
mov
jne
and
or
js
xchg
out
mov
popf
movsl
rcrl
decl
sub
push
mov
sti
adc
loope
rcll
xor
in
or
mov
insl
lea
dec
out
js
mov
and
shll
mov
cmp
mov
jge
mov
dec
or
out
outsl
inc
sarb
add
and
fs
cmp
sti
rcr
mov
daa
dec
pushf
adc
add
popf
pop
ljmp
js
push
mov
fsts
clc
lret
sub
rol
push
and
dec
nop
or
inc
sub
and
in
cwtl
lds
loopne
es
nop
into
stc
add
mov
inc
leave
int3
divb
sbb
subb
add
mov
push
clc
in
mov
xor
mov
dec
ret
cmp
add
push
jle
adc
mov
push
sbb
lcall
out
rcl
sbbl
dec
pop
fs
inc
dec
int
negb
loopnew
push
pushf
stos
fwait
push
bound
add
rcrl
sbb
cld
or
cmc
fcmovu
cmp
sub
out
std
mov
sbb
cmp
sub
stos
js
js
add
movsb
mov
push
push
fstps
jle
sub
xor
push
gs
out
jmp
cli
push
jg
loope
fucomi
sbb
mov
sub
out
jl
or
push
add
mov
mov
sbb
inc
aas
sub
or
adc
xchg
pop
rol
lcall
pop
fldenv
lods
adc
rorl
leave
cmp
jg
push
stc
sbb
loope
mov
mov
push
lock
mov
loop
out
dec
mov
pop
stos
jp
gs
cmpsb
lret
dec
ret
mov
jecxz
popa
int3
cs
cmpsl
mov
sarb
sbb
xor
and
repz
mov
fcmovne
inc
or
push
pop
movsl
sbbl
jb
mov
test
jae
aaa
sub
fwait
adc
jmp
pusha
add
rorb
sbb
pushf
mov
scas
test
push
fisttps
cmp
inc
push
loopne
mov
into
push
add
or
pusha
out
fwait
sbb
fmulp
test
dec
outsb
mov
aaa
lea
jnp
sub
add
or
popa
add
jns
aas
sub
mov
aaa
cmp
inc
add
push
push
pop
and
push
mov
sbb
loopne
or
ret
xchg
jb
lea
xor
fisubl
inc
nop
adc
je
sub
or
lahf
enter
iret
lods
mov
call
mov
test
mov
xor
adc
aad
push
xor
xchg
cltd
arpl
in
adc
sbb
push
mov
outsb
dec
sbb
fmul
mov
sbb
pop
pusha
add
ss
push
shlb
daa
lock
mov
sti
inc
or
jge
popw
xor
add
ret
mov
loope
add
add
rcl
out
sub
and
push
pop
cmp
jb
fistpl
and
or
cmp
mov
in
or
clc
in
sbb
push
iret
or
jl
dec
jle
jne
xchg
outsb
add
cwtl
adc
int
das
idiv
push
stc
and
mov
ret
loopne
sti
pushf
mov
pop
mov
pusha
lea
push
and
or
cld
mov
dec
addb
imul
jle
mov
push
ret
paddusw
idiv
mov
sub
or
repz
mov
sub
add
test
dec
add
cmpsl
inc
adc
js
cmpsb
and
movsb
js
fistpl
in
gs
mov
mov
out
les
adc
setg
xor
popf
fildll
int3
nop
inc
cmc
fcoms
aad
add
idivl
inc
bound
lret
lret
popa
sbb
mov
adc
clc
movsl
lea
xchg
loopne
roll
dec
xor
out
int
sbbl
xor
fdivrs
mov
dec
adc
add
push
or
pop
mov
arpl
inc
aas
leave
pop
sbb
fwait
mov
lods
push
subb
add
std
cli
cmp
call
shrb
xchg
push
push
cs
dec
testb
cmp
cltd
sbb
or
fdivl
lahf
cmp
jge
mov
bnd
pop
flds
stc
fsubrl
lock
sub
outsb
xor
cmp
xchg
mov
jle
outsb
sbb
fstps
mov
aam
jp
ljmp
sbb
jle
push
xchg
subb
sub
jecxz
adc
icebp
into
cwtl
out
adc
cmp
dec
icebp
add
cmp
jns
fwait
pop
dec
jle
mov
fidivrs
lcall
cld
push
fstp
repnz
sbb
cmpl
test
gs
rolb
pushf
addr16
lcall
jecxz
mov
stos
fadd
xchg
and
jno
add
divl
dec
fdivrs
or
push
inc
flds
xchg
cmp
jecxz
loopne
mov
push
lock
pop
jno
das
pop
fidivs
inc
or
xchg
test
cld
dec
inc
lea
loope
in
imul
jl
and
in
jmp
in
xchg
loopne
inc
mov
ret
pop
adc
stos
roll
cmpsl
lods
lods
mov
pop
addl
es
push
push
leave
push
mov
xlat
lcall
xchg
xchg
fdivr
inc
lret
addr16
lea
fucomi
pop
shr
xor
push
lahf
cmpl
jge
mov
imul
sarb
repnz
and
loopne
rcl
out
pop
jp
pop
cld
rolb
dec
jbe
shlb
movsb
dec
fs
mov
clc
aas
mov
cmp
mov
push
daa
and
cmc
repz
outsb
mov
repz
popf
adc
fdivp
test
cmc
rorb
or
jmp
jnp
inc
cmp
or
scas
dec
push
scas
mov
xlat
in
stos
xchg
mov
xchg
push
cmp
inc
pop
cmp
jne
adc
mov
mov
lods
xchg
dec
xor
hlt
xor
add
scas
lock
xchg
dec
jmp
test
scas
repz
sub
mov
push
pop
xor
dec
shrb
mov
and
or
pop
call
sbb
ja
movsl
bound
scas
cmpsl
rcll
test
imul
sbb
mov
hlt
rcrb
pop
push
jb
xor
dec
movsl
call
int
push
sbb
and
xchg
adc
and
cli
mov
filds
mov
int3
and
popw
dec
in
pushf
sahf
nop
leave
mov
nop
inc
leave
cmpsl
xchg
lods
ljmp
fisttps
test
mov
pusha
lods
shrb
outsl
ljmp
in
ja
adcl
jns
jnp
xchg
mov
and
jl
push
push
xchg
inc
popf
dec
repz
imul
imul
inc
int
xchg
fdivrl
in
mov
sub
xor
inc
popf
push
push
fbstp
mov
clc
adc
orl
loop
aam
enter
push
fadds
push
out
mov
dec
dec
sub
cmp
xor
sub
or
pop
add
repz
andb
repz
out
int3
cmc
pop
or
fdivrl
dec
and
inc
call
in
fnstcw
mov
in
mov
lret
push
cmp
adc
imul
pop
push
cli
bound
imul
dec
mov
rclb
mov
xchg
add
jmp
fwait
ret
and
xchg
aas
or
jb
and
stc
mov
mov
addr16
rorl
push
sahf
test
adc
push
into
std
sub
test
lret
push
repz
xchg
sub
adc
shrl
sbb
sub
ds
inc
test
in
sahf
das
push
pop
and
lea
dec
push
pushf
int
jne
les
mov
sub
xchg
aam
imul
mov
or
insl
mov
dec
jb
cld
adc
push
fnsave
cmpsb
ret
push
dec
into
or
push
add
mov
or
fimuls
lods
mov
xchg
sub
mov
imulb
out
xor
rclb
adc
out
adc
in
lret
shll
hlt
dec
loopne
fadd
mov
xor
mov
and
pop
nop
addr16
imul
mov
jp
outsl
jl
dec
inc
outsl
jg
add
mov
push
jmp
lahf
or
mov
fs
insb
in
push
insl
mov
fs
jmp
lret
or
pop
cmpsb
cmp
adc
or
push
ficoms
aad
add
enter
push
loopne
test
sarl
fwait
adc
sbb
out
push
jbe
dec
jecxz
mov
jns
xchg
dec
cmp
iret
scas
push
fmulp
cmc
sbb
pop
es
push
gs
mov
cmp
iret
or
xchg
adcl
fmul
les
mov
lea
cltd
testb
call
es
pop
int3
insb
fildll
push
jnp
pushf
push
jmp
es
sub
lods
sbb
lock
mov
pusha
in
cmpsb
sbb
xor
jae
adc
lds
lcall
rcrl
mov
xor
fsubrl
dec
mov
pop
adc
adc
and
or
sbb
cwtl
sbb
out
shrb
lret
lcall
bound
and
int
pop
push
and
addb
test
and
push
ret
scas
cwtl
sub
xor
push
shrl
dec
pop
test
out
in
inc
loope
pop
or
cs
ret
roll
mov
mov
ficoml
mov
popa
fisubs
mul
xchg
xchg
mov
adc
pop
cs
lea
dec
fisubrl
adc
int3
clc
shlb
pop
push
in
jmp
scas
gs
out
sbb
mov
sbb
pop
push
sub
xor
adc
inc
push
dec
jnp
es
mov
pop
push
jl
jp
mov
lret
ss
std
jle
inc
cmp
mov
out
push
test
cs
push
mov
jecxz
adc
dec
inc
out
xchg
lods
dec
mov
aad
mov
inc
sahf
sub
push
and
call
shll
jb
ljmp
in
aas
insl
xor
insb
xor
inc
xchg
add
adcb
ret
mov
xchg
adc
jmp
adc
or
push
mov
push
adc
sbb
jns
mov
mov
std
mov
notl
or
insl
imul
insb
movsb
and
cmpsb
mov
adc
lock
and
loop
xchg
xchg
and
mov
jp
mov
cmp
dec
inc
call
rcrl
add
movsl
in
lret
push
mov
sub
out
mov
fcomp
inc
subl
int
fwait
mov
mov
movsb
push
add
jns
mov
out
icebp
sahf
mov
sbb
mov
pop
mov
aas
lea
mov
fidivrl
f2xm1
aas
repnz
in
cwtl
add
lcall
mov
jbe
outsl
mov
insl
nop
imul
inc
call
cmp
out
dec
and
inc
rcr
jb
mov
adc
xor
cmc
repz
mov
ds
mov
xchg
jb
aaa
xchg
sbb
popf
and
movsl
fs
jmp
xchg
je
int
push
out
and
jno
js
mov
and
fistpll
or
xorl
mov
sub
adc
mov
xchg
jl
lcall
pop
push
jge
xor
cmp
jo
imul
and
or
mov
dec
pop
repz
cwtl
and
js
dec
xchg
ficomps
stos
add
or
or
jle
pop
cmc
push
fistpl
daa
lahf
shrl
sbb
sbb
mov
repz
dec
or
sub
les
add
sbb
pushf
jle
mov
in
stc
mov
das
mov
popf
xchg
mov
push
and
sahf
cmpsl
mov
stos
mov
sub
jl
fistpll
bound
stos
sbb
fimull
ret
sahf
xchg
cwtl
fsubrp
inc
xor
fildl
adc
ficomps
and
inc
pop
jae
push
orb
test
idivb
nop
stos
sub
jge
dec
les
dec
sbb
inc
in
sbb
aad
sbb
cmc
xor
and
cltd
aam
mov
addb
repz
and
insl
jle
loopne
xchg
inc
rclb
test
in
adc
jae
enter
arpl
sbb
mov
lret
out
clc
push
mov
mov
cmp
inc
ja
insl
mov
mov
mov
lret
sbb
loope
out
daa
dec
cmc
jno
shll
fadds
leave
jecxz
xchg
xorb
cmp
and
jae
movsb
mov
inc
sbb
mov
jle
adc
inc
inc
push
push
enter
pusha
sub
mov
xor
push
sub
and
fstl
ret
repz
cmp
mov
sti
sub
dec
jmp
outsb
loopne
stc
out
sub
in
pop
repnz
into
in
sub
lea
inc
or
add
sub
lods
nop
loope
dec
pusha
cmp
scas
cmp
movsb
mov
mov
mov
or
jne
inc
daa
loop
push
in
lds
mov
cwtl
adc
mov
push
lods
rorl
dec
ss
push
mov
push
sub
pop
cmp
xor
call
or
test
inc
xchg
mov
repnz
das
leave
rclb
sbb
mov
mov
mov
aam
push
imul
ljmp
and
stos
sbbb
jns
arpl
xchg
aas
sbb
test
shl
cmp
scas
popf
fcmovu
jmp
inc
jns
imul
jp
in
dec
add
gs
or
push
lock
mov
lret
repnz
mov
sub
inc
rcrb
addb
jae
push
mov
fwait
push
and
inc
fildl
xchg
xchg
repz
sbb
push
sbb
add
jnp
pop
nop
pop
lret
jecxz
sub
iret
mov
das
sub
adc
inc
push
ja
in
pop
cltd
jmp
cli
nop
inc
js
mov
adc
dec
insb
adc
sbb
push
push
enter
dec
sub
mov
fnstcw
iret
mov
xchg
sub
shll
cmp
fsubrl
es
xchg
push
inc
inc
les
push
repz
xchg
lock
outsl
cs
cmp
cmpb
inc
std
xchg
xchg
push
scas
je
imul
rcr
xorl
jp
adc
enter
loop
movsl
scas
mov
out
xor
ljmp
ds
call
loop
push
les
adc
pop
rcrl
cmp
aaa
aam
sbb
mov
pop
and
cwtl
push
ljmp
inc
fiaddl
mov
sub
je
pop
cli
outsl
insl
stos
insb
inc
ljmp
ss
mov
js
adc
jo
or
mov
popf
push
je
cltd
enter
xor
cmpl
bound
mov
adc
stos
ljmp
push
cmp
enter
cmp
ljmp
xor
pop
inc
inc
mov
cmpsb
jl
mov
out
call
mov
lcall
jmp
jg
je
xor
jl
inc
shlb
lods
stos
pushf
push
or
bound
inc
imul
inc
xor
push
and
pop
das
xchg
mov
xchg
dec
jle
repz
add
pop
dec
push
mov
dec
pop
fimull
mov
in
or
and
cmpsl
jp
jno
pop
jb
imull
adc
mov
cmpsb
inc
les
lds
and
and
outsb
xor
icebp
ret
inc
aam
mov
inc
xor
mov
and
mov
xor
ss
xchg
jbe
out
cmc
imul
sub
das
mov
and
ljmp
add
pop
xchg
jns
stc
xor
test
jo
pop
cmp
mov
mov
gs
adc
mov
lods
mov
and
shlb
cltd
lock
cmp
xor
inc
shlb
fiadds
xorl
dec
adc
mov
jnp
cmp
rorb
ss
mov
jge
push
test
xchg
mov
mov
shrb
jle
les
or
push
sbb
mov
mov
pop
cmp
inc
ss
inc
bnd
mov
xchg
add
mov
lcall
and
xchg
fcoms
mov
sub
cmpl
call
in
in
inc
inc
lock
sar
stos
jnp
lock
and
xchg
xor
and
jle
popa
push
sbb
xchg
outsb
ljmp
add
mov
dec
cltd
xchg
stc
mov
scas
fisubs
ja
mov
scas
or
push
pop
ja
xor
lret
ja
divl
mov
dec
cltd
test
push
lea
push
jle
mov
push
ret
sub
inc
add
mov
add
das
pop
mov
loop
jne
or
mov
mov
insb
outsl
arpl
sbb
pop
out
data16
fs
mov
jp
push
pop
pop
addb
addb
push
cmp
sti
daa
push
sti
cmp
xor
add
jl
xchg
mov
insb
mov
notb
sub
pushf
sub
shlb
xor
dec
outsb
sub
inc
push
sub
repnz
fwait
and
sub
in
data16
jl
hlt
xchg
clc
daa
mov
imul
mov
int3
jg
pop
adcl
pop
mov
insl
inc
xlat
movsb
loop
push
sub
mov
and
pop
test
decl
clc
and
mov
jb
stos
rcll
addr16
faddl
imul
push
rcl
popf
add
inc
cmpsb
mov
lock
xchg
jne
out
cs
or
mov
jbe
add
es
cmp
push
pop
insl
sbb
xchg
dec
push
pop
pop
loope
dec
lock
jmp
xor
sub
ja
outsl
adc
pop
insl
int3
sbb
cmp
inc
fistl
dec
xchg
loopne
add
cmp
and
pushf
fsubrp
out
mov
inc
scas
inc
pop
dec
movsl
inc
fidivs
jp
sub
sub
movsb
push
dec
mov
call
fisubrs
imul
xor
xchg
xchg
ss
sub
xchg
sahf
shr
push
xchg
clc
and
inc
jnp
test
lods
loope
xchg
jo
cmp
mov
ret
in
inc
adc
nop
jle
cmp
stos
pop
jge
or
iret
inc
stos
cli
out
aam
loopne
movsl
jbe
stos
jae
out
dec
jno
inc
ja
insl
leave
xor
into
pop
loopne
or
lods
xchg
int3
push
nop
or
sub
inc
mov
orl
xchg
cwtl
subb
adc
push
mov
orb
push
add
mov
xchg
imul
push
enter
or
xchg
pop
mov
jle
loopne
aad
aad
xchg
incl
jno
adc
inc
fucom
mov
rcrl
notb
popf
hlt
jle
sbb
ret
pusha
pop
mov
jge
movsl
cwtl
das
pop
add
movsl
popa
sarb
dec
daa
add
stos
scas
sbb
add
adc
sub
sbb
dec
dec
jbe
shl
orb
int
mov
add
fldt
out
pop
and
or
stc
jmp
fsubl
adc
ss
mov
movsb
jns
mov
lahf
add
dec
mov
test
push
jle
jle
or
call
orb
stos
call
cmp
push
and
mov
scas
mov
xor
popa
lea
loopne
leave
push
repnz
cmp
jmp
aad
jmp
es
ret
jb
lret
mov
xlat
push
cmp
rcll
sub
dec
xchg
rclb
fstl
out
or
lahf
loope
bound
mov
mov
jl
pop
enter
mov
sbb
lods
cmp
xchg
insl
in
push
push
jmp
imul
xor
jmp
push
adc
je
sub
je
ret
int
xor
jns
popa
loopne
jae
in
negl
jg
dec
xchg
pop
lcall
push
insl
shlb
in
add
stos
mov
add
test
lock
lahf
xor
add
pop
jecxz
push
das
xchg
mov
mov
sub
xchg
outsl
push
cmpsl
jmp
loope
ret
clc
aas
add
stos
cwtl
lcall
sbb
pusha
out
stc
cmpsl
nop
iret
out
pop
pop
mov
lret
mov
mov
nop
jo
testl
stc
pushf
sbb
mov
add
and
push
gs
out
shlb
inc
hlt
cltd
ror
push
mov
or
fwait
cltd
sub
mov
xor
out
push
or
cmpsb
jo
popf
xor
incl
popf
push
cld
in
jmp
or
push
or
fcomp
fs
idivl
adc
cs
cltd
lods
pop
xlat
mov
hlt
mov
lahf
lret
mov
xchg
jbe
sbb
jle
mov
lcall
inc
add
xor
adc
xor
cwtl
sbb
lret
std
sub
cltd
add
test
pop
repz
jp
xchg
sti
xchg
xor
int3
or
ds
in
rorb
or
xor
dec
loop
rorl
roll
sub
xchg
push
sub
cmp
lcall
adc
sbb
xchg
xor
int
and
cmp
inc
pop
nop
and
icebp
daa
out
gs
leave
add
xor
mov
scas
push
push
dec
shll
pusha
cmp
jecxz
adc
sbb
rcr
pop
push
in
xor
pop
in
cmp
imul
sar
sub
dec
mov
leave
xor
add
xchg
js
movsb
cmp
pop
in
jo
insl
dec
scas
mov
test
adc
hlt
lcall
add
sub
jmp
inc
push
out
push
or
adc
loopne
stos
int
inc
cmc
clc
mov
scas
mov
xchg
mov
ds
test
inc
sub
in
js
lret
mov
stos
mov
xchg
jnp
inc
xchg
xchg
ret
out
inc
inc
sbb
or
adc
into
cmp
mov
xchg
cltd
or
aad
mov
lret
in
repnz
enter
lret
xlat
mov
pop
mov
mov
xor
cltd
mov
inc
ja
aad
pop
leave
jmp
jmp
fildl
cli
movsl
dec
ret
mov
leave
pop
orb
push
clc
mov
mov
out
adc
out
andl
xchg
pop
mov
inc
xor
jne
in
ljmp
add
sub
mul
lcall
sub
cmp
and
int3
mov
pushf
orb
push
in
mov
arpl
fisttps
push
or
jmp
xchg
cmpsb
sub
scas
jns
and
in
mov
stos
xchg
neg
push
cwtl
and
push
test
ds
dec
xlat
cltd
or
add
jae
out
sub
and
pop
mov
mov
mov
imul
testb
mov
xor
outsb
cmp
sbb
and
dec
jns
push
sbb
fbld
fnsave
dec
xor
push
cmp
add
jbe
xchg
cs
imul
aas
sub
mov
inc
inc
push
push
fsin
xchg
inc
test
cwtl
push
jle
std
pop
outsl
mov
cmpsl
mov
sbb
pop
mov
inc
xor
ret
ds
mov
lods
cmp
cmp
sub
cmpsl
jle
js
fistpll
mov
inc
cmpsb
xor
pop
mov
test
in
push
test
push
sub
or
and
rolb
mov
mov
push
data16
addl
ss
and
or
addr16
dec
fisubl
pop
mov
movsl
rcr
aas
fwait
push
int
stc
jbe
push
inc
push
push
sub
mov
pop
pop
pop
loop
dec
out
add
dec
add
ds
arpl
shlb
dec
mov
mov
mov
scas
pop
call
cwtl
and
outsl
call
scas
subb
andl
mov
lret
mov
xchg
jge
out
xchg
or
lock
es
add
xchg
out
loope
cmpsb
and
outsl
leave
fcompl
clc
dec
fwait
mov
out
mov
je
inc
lret
mov
push
jge
cmp
dec
xchg
imul
and
lock
fnstenv
cs
test
aaa
ljmp
add
xor
aaa
add
data16
std
arpl
xor
mov
insb
or
sub
je
je
es
push
push
imul
lods
push
push
inc
sub
and
adc
call
outsl
and
test
out
repz
xchg
add
dec
les
frstor
jle
jne
jmp
sub
popf
or
and
jne,pn
les
in
jnp
aas
xchg
push
pop
hlt
fcmovu
or
pop
mov
jbe
sub
imul
sbb
dec
sub
mov
sbb
fwait
icebp
sarl
sub
ret
rcr
insb
cmc
ror
inc
inc
jg
inc
pop
push
pushf
xchg
xchg
pop
call
cltd
xor
jp
int3
lcall
mov
sbb
lods
xor
xchg
in
xor
jp
pop
cwtl
or
xchg
push
mov
push
push
lods
addb
pop
cwtl
clc
mov
dec
mov
test
rorl
mov
mov
jne
into
sti
into
inc
jnp
sbb
in
jnp
in
push
cmc
mov
pop
push
push
mov
ret
outsl
call
xchg
or
push
sub
dec
jno
rolb
inc
js
in
int
movl
xchg
idivl
dec
imul
out
sbb
call
addb
xchg
outsb
loopne
xchg
pop
adc
outsb
sub
inc
mov
jecxz
scas
sbb
push
or
xchg
jmp
add
dec
popa
add
and
or
out
popa
stc
and
bound
and
in
fcomi
je
lods
sub
cmpsb
in
outsb
xor
xorl
cld
les
hlt
cmpsl
scas
mov
jle
push
aaa
pop
outsb
jle
aad
pop
call
loope
fldenv
movswl
hlt
lock
dec
dec
pop
push
push
minps
nop
inc
js
aas
push
aam
popf
call
and
and
pusha
jae
ljmp
sub
das
loop
ficoml
fwait
rcll
test
cmc
sbb
cmp
mov
jg
add
xchg
dec
das
adc
jl
pop
lods
jno
jbe
cld
push
push
mov
daa
adc
xor
test
sbb
cld
adcb
dec
add
inc
into
xlat
clc
xorl
mov
lods
xchg
clc
lock
dec
hlt
mov
test
adc
sub
leave
dec
notl
mov
les
mov
mov
inc
test
push
addb
inc
sub
pop
mov
mov
cld
hlt
push
das
inc
sarl
and
test
loop
aas
fcompl
insl
mov
jb
add
lret
cmp
push
cmp
jmp
jbe
aaa
adc
shlb
shll
fisubrl
repz
adc
mov
sub
pop
sarb
mov
hlt
sub
pop
xor
stos
cli
jo
and
push
out
ljmp
mov
dec
nop
adc
hlt
pop
fiadds
xor
lea
sbb
loope
sti
and
das
inc
jecxz
fdivs
test
xchg
hlt
cld
or
and
adc
pop
push
in
sbb
jle
push
push
aaa
mov
out
mov
cmp
jp
mov
adc
dec
xor
outsb
fnstsw
inc
fdivr
dec
mov
movsb
or
sti
nop
or
push
rcrl
cmp
mov
adc
sbb
cmp
pop
call
or
cmpsb
sub
jo
adc
stos
pop
or
xchg
subl
shl
data16
add
or
inc
push
mov
xor
dec
pop
mov
stos
xchg
and
inc
and
and
ret
jmp
imull
xchg
je
test
pop
fs
lods
imul
lcall
lds
xchg
mov
push
stos
mov
fisubrl
xchg
mov
xchg
mov
rol
aad
pop
mov
js
adc
mov
imul
int
xchg
dec
es
fwait
cmp
inc
push
cwtl
stc
mov
mov
push
add
xchg
fwait
push
out
mov
dec
pop
mov
loopne
int3
xor
xchg
out
sbbb
xchg
jmp
popa
xor
int3
fcomip
gs
inc
add
sbb
push
loop
mov
push
mov
mov
sub
int
mov
xchg
push
das
shlb
jae
cli
xor
scas
jae
into
cltd
lret
adc
mulb
imul
adc
mov
sub
push
mov
pusha
cmp
arpl
movsl
push
mov
ud2
or
jno
bound
mov
xchg
cmp
mov
movsl
pop
lcall
lcall
mov
aas
dec
xchg
dec
adc
xor
fcompp
mov
bnd
out
xlat
daa
xor
xor
jne
int3
frstor
inc
test
loopne
xchg
jge
cmp
fiaddl
and
aad
les
jecxz
mov
cli
cmp
jno
inc
and
aaa
imul
imul
mov
flds
sub
add
add
loop
pop
dec
push
mov
rorb
mov
pop
cld
loopne
or
aad
pusha
mov
inc
out
test
lret
xor
sub
xchg
in
xchg
jno
shr
push
aad
mov
mov
test
and
xor
xchg
fbstp
xchg
jb
cmpb
add
aad
mov
in
sti
sub
sub
lock
test
loope
in
push
mov
inc
xchg
mov
and
or
jns
aaa
in
or
push
xor
mov
mov
cmp
sbb
pop
ret
clc
cmp
add
ss
movsl
mov
rcrl
in
push
push
push
xchg
mov
add
jnp
iret
pop
xchg
jp
add
pop
loope
push
ja
dec
pop
add
pop
push
sub
popa
aam
xor
mov
push
or
or
sub
loopne
in
ljmp
lahf
bound
jmp
add
loopne
adc
fldl
and
inc
and
sar
jmp
fs
adc
jnp
daa
mov
push
cs
or
fidivrl
addr16
lods
jge
hlt
repz
dec
arpl
addr16
sbb
out
aad
xlat
or
outsb
pop
jg
insl
loop
rorb
xchg
sub
pop
pop
aam
out
mov
pop
add
inc
cltd
arpl
in
and
cld
mov
int
popl
sbb
adc
mov
hlt
repnz
sti
enter
jae
movsb
pop
fwait
stos
xor
xor
lea
inc
idivl
push
fs
mov
jbe
iret
cld
dec
cmp
dec
push
push
mov
out
xchg
mov
mov
test
fcom
xchg
mov
sub
jmp
mov
shrl
cwtl
sbb
xchg
setp
outsb
cmp
adc
arpl
dec
pop
ljmp
test
bound
pop
ljmp
ss
test
into
jecxz
add
ljmp
xor
and
fidivrl
mov
adc
jns
pushf
jne
call
hlt
orb
int
cmc
push
out
test
cmc
fsubl
push
add
jmp
in
pop
xchg
pop
and
addr16
mov
ljmp
cmp
frstor
fcompp
mov
mov
xor
xor
fcompl
push
lahf
pushf
xchg
stos
cli
inc
dec
movsb
addr16
popa
sahf
pop
stos
test
jmp
dec
js
mull
pop
adc
ret
sub
fnstcw
inc
outsb
push
loopne
sub
cmpsl
xlat
data16
cli
inc
add
or
cwtl
pop
jne
outsl
int
or
xor
test
mov
insl
adc
lret
push
lods
pop
and
or
fsubl
fistpl
jle
mov
test
mov
je
in
lds
dec
xor
in
and
cmpsl
test
clc
inc
jmp
andl
clc
dec
out
jbe
movsb
ljmp
popf
add
js
and
gs
mov
aaa
xchg
outsl
test
xor
es
or
mov
pop
in
mov
imul
jns
push
xor
or
and
adc
add
push
mov
es
call
loope
cmpsl
subb
icebp
leave
fcompl
popa
jp
cmpsl
pop
hlt
sub
push
inc
ljmp
bound
xlat
push
pop
mov
pop
stc
andb
mov
jb
sbb
jg
sbb
inc
cmp
push
mov
inc
mov
ret
call
dec
mov
inc
fimuls
dec
and
xchg
jge
std
push
loope
fwait
mov
ja
add
int
dec
aam
in
scas
mov
mov
pop
jo
ljmp
cmpsl
iret
mov
outsb
xchg
jl
ficompl
je
les
fnstsw
cmp
mov
pop
mov
out
std
loope
mov
fldt
or
lret
testb
xlat
add
mov
stos
int3
dec
lods
cs
mov
pop
jle
in
bnd
mov
inc
pop
cmpsb
enter
mov
jecxz
fsub
mov
lcall
stos
push
xor
push
or
fimull
xor
or
pop
adc
adc
mov
mov
pushf
cwtl
gs
ret
adc
js
idivb
lcall
aad
push
mov
ret
stc
adc
or
add
xchg
loop
pushf
ljmp
sbb
xchg
or
inc
jecxz
pop
clc
mov
lock
push
lret
adcb
mov
clc
xchg
popa
jno
xor
movsb
pop
cld
xchg
popf
sub
mov
push
cltd
mov
mov
fimuls
js
jns
hlt
mov
cmp
xchg
ret
mov
stos
rorl
cmp
xor
mov
lds
push
cmp
add
pop
cmpsl
pop
lcall
out
in
hlt
cmp
popf
dec
mov
dec
xor
xchg
popf
xor
out
outsl
push
cli
xorl
hlt
insl
xor
aad
fmuls
fld
movsb
mov
mov
cmp
sub
mov
out
aam
mov
sbb
imul
mov
lods
mov
mov
push
sti
stc
insl
outsb
hlt
dec
pop
mov
gs
mov
push
das
sub
pop
mov
mov
lods
out
mov
cmp
xor
mov
cmpsb
add
adc
cmc
aaa
push
cltd
jnp
das
cmpsl
shlb
jmp
test
popa
out
movsl
jno
add
clc
xor
adc
ds
adc
cmpsl
dec
push
sahf
test
sbb
jmp
mov
pop
push
loope
sub
cmp
andl
scas
jns
scas
loope
xchg
xchg
lret
xor
push
test
jmp
jo,pt
fadds
cmpsl
cmpb
lods
cmc
rorb
mov
loopne
cli
fcomip
in
lahf
jmp
xor
push
push
inc
and
dec
fnstsw
pop
jl
test
ret
pop
mov
pop
mov
and
adc
lahf
sub
push
pop
imul
jne
clc
sbb
out
lcall
data16
sar
roll
mov
sub
or
fldl
adc
mov
cwtl
mov
adc
dec
push
jns
xchg
imul
add
mov
stos
pop
push
xor
bound
push
add
addr16
mov
and
sub
add
es
cmpsl
movsl
je
sbb
push
flds
or
jmp
bound
and
sbb
adc
movsb
lods
xlat
into
xchg
loop
adc
inc
inc
addr16
sub
call
xchg
lods
call
push
stos
push
int
push
aad
jnp
lods
adc
mov
inc
hlt
cmp
loop
insb
jmp
pushf
lret
xchg
push
divb
int
inc
stc
cmp
inc
jne
addr16
dec
sbb
cmp
faddp
dec
scas
fwait
push
jae
sub
pop
xchg
icebp
mov
sub
lods
inc
fucomp
movsb
or
adc
movsb
add
mov
mov
and
jge
inc
aad
ljmp
push
mov
insl
mov
xor
mov
dec
sbb
xchg
dec
es
addr16
movsl
xchg
add
push
clc
cmpsl
fcomps
adc
popf
xchg
dec
or
jb
rcrb
or
and
add
jns
mov
sbb
jmp
roll
mov
gs
jnp
push
repnz
daa
cmpsl
push
xchg
repnz
mov
lods
div
pop
or
clc
xchg
repz
sti
out
mov
jae
mov
mov
mov
jnp
cltd
ds
icebp
movsl
jns
push
jg
daa
inc
dec
int
adc
sub
push
adc
iret
cld
aad
mov
int3
dec
or
popf
imull
and
fcompl
dec
js
pusha
mov
mov
xchg
lcall
push
pushf
bnd
ljmp
cltd
pop
mov
jo
imul
mov
sbb
aaa
aaa
mov
call
pop
imul
cmc
popa
jns
xor
insb
js
leave
mov
lods
lahf
cmp
sbb
mov
rorl
cli
mov
outsl
std
and
mov
shrl
test
fcmovu
in
scas
fmuls
jae
xor
in
fdivs
into
jnp
loopne
adc
inc
mov
push
sbb
lahf
push
dec
test
out
lret
pop
test
cmp
test
lock
xchg
xchg
xor
mov
ficoml
mov
arpl
push
fndisi(8087
cmpsl
or
imul
jg
push
and
fcomps
in
add
sub
lret
mov
add
fimull
hlt
mov
bound
outsl
sub
inc
popf
cmpsl
inc
dec
cmp
fiaddl
test
scas
inc
jns
jge,pn
movsb
mov
jg
cmp
lds
daa
aaa
fldcw
iret
jo
or
ret
out
push
push
pop
in
xlat
test
inc
jnp
mov
inc
cmp
mov
add
sub
mov
lea
mov
repz
cmp
push
adc
inc
mov
adc
xchg
cli
xchg
adc
das
shll
adc
cmp
push
xchg
mov
pop
popa
xor
test
in
gs
clc
pop
iret
push
xor
sahf
sbb
out
loop
loop
mov
aaa
pop
or
jecxz
jl
in
sub
in
add
pop
aas
loope
out
adc
mov
insl
sub
cmp
aad
rcrl
push
pushf
decl
lods
lds
popf
loope
mov
sbb
dec
jno
mov
or
add
mov
push
fs
xchg
ljmp
mov
push
pop
pop
ds
fbstp
xchg
cld
je
mov
lea
sub
lock
dec
fcmovnu
js
dec
xor
push
arpl
lock
mov
inc
push
fldt
rolb
fdivrl
jns
push
xor
testb
or
xor
add
push
fsub
and
fdivs
inc
lret
cltd
ss
cmp
out
frstor
push
mov
test
mov
cld
hlt
icebp
push
xor
inc
stos
mov
and
mov
push
in
outsb
sahf
movsb
xor
or
dec
cld
sahf
mov
cwtl
sti
add
clc
fs
jmp
mov
scas
and
lods
pushf
js
xor
stos
movb
out
and
ss
scas
mov
out
add
stc
mov
pop
popa
ja
int
pop
stos
sbb
push
enter
andb
dec
push
push
sbb
and
pop
nop
aad
dec
jnp
dec
arpl
push
sbb
out
rclb
pop
scas
push
stc
push
jno
sub
push
jmp
push
in
negl
scas
popf
jge
mov
add
lret
jb
mov
push
push
lret
mov
pusha
sub
sub
fisttpl
mov
dec
sbb
push
aaa
inc
xchg
loop
fnstenv
hlt
pusha
ret
int3
xchg
push
adc
add
add
sbb
xor
nop
sbb
lods
pushf
shrl
movsl
fidivrs
xorb
arpl
andb
mul
dec
mov
aam
cmc
mov
pop
push
mov
enter
rolb
push
inc
call
cmp
dec
sub
push
adc
cmp
sub
add
decl
hlt
orl
lret
shll
scas
jbe
shl
sbb
sbb
or
mov
hlt
add
mov
shll
in
xchg
mov
das
pop
mov
inc
mov
sub
pop
mov
pusha
push
gs
insb
test
push
imul
pop
in
cmpb
push
xchg
gs
mov
mov
xchg
inc
stos
sbb
pop
mov
insl
sub
data16
cld
bound
movsb
jo
sti
sbb
mov
lret
movsb
outsb
xchg
ja
loope
lret
pop
int3
add
pop
movsl
bound
cli
push
and
aam
add
push
mov
and
es
cmp
fcmovnbe
dec
dec
in
add
scas
hlt
cs
sub
sbb
mov
mov
ret
ret
mov
rolb
loopne
adc
xor
xchg
sbb
repnz
adcl
push
dec
mov
sub
dec
roll
xchg
cs
aaa
pop
mov
jle
cli
aas
add
or
dec
bsr
push
jnp
xor
lods
mov
cmpsl
mov
xor
xlat
fldcw
mov
pop
push
mov
int3
stos
popf
popf
ja
test
rorb
shr
clc
xor
repz
mov
ret
pop
cmc
mov
inc
xor
dec
push
sbb
mov
ja
js
jno
xchg
out
idivb
cmp
sbb
jo
push
or
dec
xchg
mov
sbb
or
loope
sahf
movb
gs
dec
push
popa
lret
xchg
jl
cmp
sub
jp
test
int
outsl
out
pusha
xor
push
lea
in
cmc
cmp
sarl
push
xor
xlat
sarb
push
push
loopne
dec
or
lahf
cmp
loope
ljmp
push
dec
and
sarl
fcom
rorb
pop
inc
xchg
jbe
int3
mov
sub
stc
dec
push
pop
sub
cs
inc
cmpsb
dec
push
aam
in
jnp
xchg
scas
add
cmp
sbb
js
pusha
cmp
jo
sbbb
nop
sub
mov
divl
dec
push
fwait
jnp
dec
mov
into
inc
push
pusha
lods
fwait
xor
mov
std
les
lock
clc
mov
insl
jo
jge
daa
or
xchg
out
adc
mov
addr16
jle
jnp
nop
dec
fadd
jge
cmp
aas
out
pop
test
or
insb
cmp
aam
jg
fisttps
bound
mov
xchg
cmp
xchg
inc
jp
fs
es
xor
dec
jp
inc
cmc
insb
in
in
xor
jno
fs
mov
addr16
cmp
fistl
ss
cmc
outsb
movsb
incl
jb
cmp
inc
inc
stos
lret
sub
pavgb
test
pop
das
mov
out
sub
push
pushl
adc
lock
stos
data16
push
pushf
imul
add
aad
sbb
adc
mov
divl
sub
pop
dec
add
sbb
stc
dec
loope
sbb
mov
xor
out
lahf
mov
pop
inc
xor
outsl
mov
nop
push
cmp
xor
add
xor
jns
mov
popa
push
mov
lds
mov
repnz
jecxz
ljmp
sbbb
adc
xchg
push
sub
add
negl
lahf
dec
loope
pop
cmp
in
or
sbb
jbe
test
mov
sbb
push
xor
mov
dec
xor
xchg
mov
outsb
lds
adc
push
daa
and
out
in
pop
jnp,pt
adc
xor
mov
push
jbe
mov
ret
sbb
or
sub
je
sub
or
dec
mov
cmp
mov
dec
add
cmpsb
push
ljmp
pop
into
orl
push
icebp
arpl
test
mov
pop
mov
cmp
aas
sbbl
les
xor
cltd
lods
das
rcll
xchg
push
jmp
inc
push
into
lds
imul
and
push
enter
pop
shll
sbb
test
loop
outsl
adc
in
mov
scas
add
adc
mov
jp
xchg
fsubs
mov
shrb
sbb
adc
das
cli
jb
mov
xor
mov
test
clc
movsb
movsb
icebp
dec
add
mov
jle
jle
sbb
lea
pop
push
mov
pop
lods
addr16
hlt
xorb
lret
and
mov
xchg
cmpsl
or
scas
xchg
jno
push
and
shlb
sahf
jge
xlat
mov
enter
or
jge
repz
stos
call
mov
ficomps
adc
jbe
cs
std
xor
cwtl
mov
dec
jge
dec
mov
aam
popf
jecxz
movsl
inc
and
lret
clc
pusha
push
jns
hlt
in
mov
ret
inc
loope
lock
push
popa
mov
jp
push
das
mov
pop
lcall
xchg
push
and
movsl
testl
push
or
pop
mov
dec
xchg
sbb
xchg
sbb
out
in
sbb
pop
or
add
sti
out
stos
call
jmp
mov
mov
cmp
lds
mov
xchg
jg
pusha
xchg
pop
dec
or
orb
cltd
into
in
dec
stos
mov
fstpt
outsb
repz
xor
repnz
add
scas
pop
or
ret
mov
test
mov
lods
enter
pop
shll
inc
sar
jle
popf
inc
into
inc
mov
adc
inc
ret
mov
xor
je
inc
and
sub
mov
sbb
push
and
lcall
adc
mov
test
mov
or
push
bound
sbb
fnstenv
shl
mov
jo
lahf
mov
in
xor
xchg
xor
out
test
test
andl
pushl
mov
lret
inc
rorb
repnz
popf
mov
mov
lods
jle
iret
repz
dec
or
adc
and
clc
adc
add
mov
out
fistpll
sahf
sbb
jo
daa
outsl
lcall
aaa
mov
jne
xor
sbbl
dec
and
pop
push
aam
or
pop
xor
add
cmp
shrl
xorl
or
xchg
adc
add
clc
loopne
mov
or
push
mov
cmp
test
lcall
inc
mov
xor
ja
adc
mov
xchg
push
or
mov
cmpsl
inc
jl
scas
lret
pushf
jecxz
aad
inc
mov
mov
inc
inc
add
mov
add
and
mov
sbb
push
cld
mov
popf
xchg
or
mov
add
jge
mov
xor
movsb
jl
ret
xchg
roll
mov
shll
mov
xchg
or
inc
or
fsubr
rcrb
js
lea
xor
mov
cltd
adc
sbbl
mov
bound
cwtl
xlat
les
clc
insb
cmpsl
sahf
mov
pop
dec
leave
mov
or
mov
mov
mov
xchg
adc
mov
movsb
add
xor
loope
adc
inc
or
loop
cwtl
in
stos
mov
xor
rorb
mov
mov
cs
pop
aas
mov
stos
adc
mov
lods
repnz
cli
vunpckhps
mov
adc
test
pop
or
fldt
or
sub
xchg
xor
dec
in
push
bnd
or
and
shll
scas
push
ret
in
sti
scas
lds
les
jae
mov
aas
jmp
push
dec
ret
push
xor
pusha
jnp
xor
push
cmpsb
xchg
in
mov
les
cwtl
push
icebp
and
push
adc
pop
push
ja
or
jp
and
inc
inc
adc
xor
push
fbstp
mov
lahf
jns
aam
xchg
or
es
out
cmp
ret
fistl
rcrb
icebp
or
cmp
jecxz
push
xor
mov
sub
mov
jns
dec
mov
push
jne
loopne
adc
mov
call
and
jecxz
insl
mov
xchg
dec
loope
add
pushl
xchg
mov
popa
movsl
fs
lock
add
inc
dec
inc
push
or
fldt
cs
jecxz
loopne
sarl
cmp
sbb
push
mov
out
mov
fimull
xchg
cmpsb
lret
xor
inc
loop
xchg
scas
jmp
jb
mov
dec
xchg
xor
movb
pusha
dec
adc
lods
popf
dec
sbb
ljmp
xchg
mov
dec
and
mov
adc
mov
in
cld
dec
loop
or
push
insb
adc
xor
inc
es
cmp
sub
and
cmp
push
dec
outsl
xor
pop
dec
dec
int
popf
mov
adc
dec
test
call
fisttpll
push
mov
and
xchg
lret
cli
imul
add
mov
jo
lods
pop
nop
rcll
jb
push
mov
jo
fwait
cmp
sti
push
cmpsl
inc
mov
pushf
arpl
lock
pop
push
mov
inc
lahf
push
sbb
outsl
mov
les
test
fwait
ror
xor
inc
sub
add
decl
mov
inc
fnstenv
ret
lret
outsb
rcll
lea
push
shrl
cltd
stos
inc
stos
push
mov
adc
push
jmp
jp
shlb
ljmp
xor
jns
cltd
movsl
aad
repnz
dec
ss
sbb
adc
arpl
pop
lret
push
int
pop
mov
push
dec
sbb
ss
lret
addr16
push
inc
negl
push
ret
rcrb
sbb
enter
lds
mov
dec
in
outsb
mov
mov
jne
loope
mov
aas
xchg
xchg
xor
pop
jmp
push
imul
fidivl
mov
jecxz
sbb
stos
xchg
aad
adc
push
and
fbstp
pop
push
aad
mov
outsl
sub
adc
bound
pop
fisubs
stos
push
add
in
out
int3
jae
push
push
data16
iret
xor
cwtl
psllw
out
push
out
loope
pop
bound
jb
loope
add
dec
pop
aaa
sbb
sbb
sub
stos
mov
pop
lcall
add
push
pop
adc
mov
cmp
movsb
adc
add
imul
cmp
test
mov
xlat
push
and
adc
loop
cwtl
dec
xchg
in
imul
or
mov
insl
mov
dec
dec
mov
iret
out
daa
and
push
scas
out
adc
mov
mov
or
and
in
test
mov
cli
mov
out
imul
mov
aam
push
add
mov
test
or
sub
pop
jae
daa
adc
int3
pop
nop
pop
xor
int3
xchg
in
cltd
out
adc
xchg
aam
into
jg
or
and
test
push
jp
jle
pop
dec
inc
jbe
mov
dec
leave
popf
sub
or
fdivs
sub
or
daa
or
aad
jecxz
scas
enter
pop
xor
mov
gs
mov
or
jne
fsubl
add
sbb
fsts
xchg
sub
adc
pop
cs
mov
pop
mov
dec
and
inc
loop
cmp
xor
xchg
mov
fists
fwait
sbb
cmp
and
sbb
iret
pop
mov
cld
adc
mov
xchg
leave
int
test
dec
inc
call
cltd
mov
xor
adc
ds
and
lods
andl
fucomip
dec
outsl
popa
mov
cwtl
cli
sub
push
adc
xchg
and
jno
mov
mov
fbld
sbb
mov
call
insl
inc
outsl
inc
jae
pop
ljmp
test
mov
add
cli
or
xorl
and
test
mov
fnstcw
xor
sub
sbb
aam
jecxz
xchg
ret
mov
lret
sarb
ja
cmpsl
jp
xchg
mov
in
aam
mov
push
lods
fisttpll
inc
jle
loopne
sub
pop
mov
mov
xor
repz
ss
pop
aad
js
xchg
fs
shll
or
xchg
push
pop
stos
mov
and
push
jo
sub
cmpsb
and
insl
stos
add
dec
outsb
loopne
jp
outsb
pmaddwd
into
push
or
xchg
xchg
cmp
addr16
xor
fstp
or
and
jno
or
jmp
sub
push
pop
fcmovnu
rorl
cmp
cld
cld
or
jmp
frstor
gs
xor
js
or
sbb
xchg
out
jno
into
insl
sbb
cmp
mov
jbe
adc
adc
lret
push
stos
aam
jl
lcall
or
aas
mov
movl
jb
bound
pop
dec
imul
test
mov
inc
in
jg
mov
pusha
or
mov
pop
dec
out
mov
leave
lods
pushf
popf
mov
les
mov
push
pop
dec
push
imul
popa
lea
lea
xchg
pushf
adc
fs
jle
dec
dec
xchg
into
inc
aas
lock
js
inc
test
push
or
outsb
inc
jle
push
ss
fdiv
mov
sbb
ja
hlt
jl
and
imull
and
ret
imul
pop
lods
push
xchg
call
jg
int
xchg
inc
iret
mov
addr16
adcb
and
je
xchg
int3
sub
test
sub
add
out
and
das
sub
adc
call
push
jp
pop
bswap
lods
and
fsubs
data16
or
mov
xchg
ja
xor
add
popf
push
xchg
adc
addr16
pop
jo
jg
add
bound
into
inc
in
cld
add
icebp
mov
add
cmc
sub
jb
shll
mov
jbe
sub
das
xorb
std
hlt
test
loop
in
push
xchg
lahf
in
aad
enter
loop
push
mov
cmp
jns
xor
sbb
pop
daa
loopne
sub
imul
adc
push
xchg
mov
cs
sbb
fcmovnu
inc
iret
movsl
pop
jle
testb
imul
aad
imul
jmp
xor
pop
pop
insb
pop
pop
ja
imul
rclb
inc
jne
sub
sub
push
loope
xor
outsb
out
pop
inc
stos
xchg
and
fwait
push
add
add
mov
sbbb
jns
clc
adc
mov
dec
adc
push
or
fsubs
mov
lahf
pop
inc
xor
loopne
and
inc
call
pushf
ds
clc
pop
in
in
outsb
jp
xchg
or
shlb
imul
pop
mov
push
std
or
icebp
dec
add
fdivrs
jmp
sti
call
nop
inc
cmc
clc
rolb
ret
shl
aam
test
rclb
and
loop
insl
mov
cld
jecxz
adc
icebp
xchg
out
mov
cmp
mov
clc
cmp
mov
cmp
in
cmpsb
jnp
iret
xchg
inc
insl
jle
adc
sub
mov
ret
jo
das
outsb
sbb
test
lret
lret
mov
fistps
dec
stos
xor
adc
stos
inc
mulb
int
jl
cmp
xor
sub
add
push
std
aas
xchg
leave
adc
mov
ds
pop
lds
xor
pop
aas
sahf
xor
addr16
scas
xchg
cmpsb
dec
mov
sbb
cmc
xchg
lahf
or
sbb
mov
hlt
cmpsl
jmp
mov
inc
sub
cmp
hlt
jne
rcrb
std
jecxz
imul
mov
pop
fsubs
mov
fistl
dec
aaa
or
xchg
jle
and
xchg
dec
jp
ss
aad
sti
clc
mov
mov
pop
jb
mov
sbb
mov
iret
addr16
je
add
in
fldz
cli
js
scas
push
nop
lds
mov
or
sub
adc
pop
repz
xchg
int3
push
pop
sbb
xchg
out
fists
mov
lret
mov
xorl
enter
in
and
test
aam
loop
js
dec
mov
aaa
mov
xorl
lods
jbe
hlt
inc
pop
dec
adcl
ds
sub
pop
pop
mov
movsl
lods
mov
fdiv
mov
jle
and
mov
adc
xchg
push
repnz
gs
sbb
aaa
jns
mov
push
lods
icebp
pop
daa
inc
js
mov
imul
cmp
fsubrp
sbb
sbb
fcom
pop
mov
rcrb
hlt
lea
inc
adc
xchg
cmp
nop
sbb
sbb
test
sbb
push
ftst
andl
cltd
out
inc
test
jno
push
cwtl
jmp
in
lds
mov
mov
lahf
pop
rcll
xchg
sub
push
xor
xor
adc
and
aas
shll
mov
adc
mov
ja
sub
xor
jbe
add
jge
mov
popf
and
adc
adc
dec
push
ja
mov
push
sub
gs
into
xlat
mov
movsl
popa
mov
arpl
sub
or
ds
cs
enter
js
fwait
lock
adc
cld
fs
andb
repnz
jl
je
mov
cmc
cmp
sub
in
out
or
subb
iret
std
cli
popa
fdivr
aas
or
in
push
pop
daa
cmpsb
xchg
subl
fisttpl
rolb
repz
cmp
jae
mov
sub
push
add
mov
lcall
cmp
outsl
sub
inc
or
test
xor
std
inc
aaa
sub
ds
stos
inc
mov
ja
pop
mov
inc
mov
dec
sbb
int3
fstl
jp
sbb
push
cmc
jmp
push
pop
sbb
mov
and
pusha
test
sub
test
pop
dec
mov
subb
mov
iret
pushf
mov
dec
dec
clc
das
insb
jecxz
mov
ficompl
push
add
fld
sbb
fildll
orl
dec
rcrb
jno
inc
clc
fsubrp
pop
shl
xlat
fwait
test
xor
insb
or
jno
lods
loope
xchg
push
jmp
in
incb
pop
mov
imull
pop
mov
xchg
inc
cmp
sub
lret
xchg
xchg
imulb
jl
inc
mov
xor
ljmp
stos
and
cmc
test
bound
cwtl
cmp
fisubs
ljmp
sub
and
bound
dec
fcmovnb
ret
and
and
iret
add
mov
pop
lahf
mov
aas
pop
mov
and
hlt
cld
add
inc
jbe
sbb
inc
aas
jp
xchg
test
movsb
cmp
jo
jnp
call
dec
jp
mov
imul
mov
loop
lahf
dec
add
inc
test
cmp
popf
inc
das
pop
push
loop
and
xchg
mov
ficoml
test
mov
movsl
inc
addr16
dec
pop
jae
in
insl
mov
or
jmp
data16
add
pop
xor
mov
xchg
xchg
adc
mov
lods
enter
divb
vcmppd
stos
lret
mov
mov
repnz
shrb
bound
aad
loop
lock
lea
imul
mov
mov
ss
ja
insb
cld
mov
pusha
mov
dec
add
addr16
arpl
rorb
hlt
push
jne
fs
es
or
scas
imul
xchg
and
insb
xor
test
pop
aam
pop
outsw
fcompl
inc
out
data16
cwtl
pop
and
sti
jl
jo
inc
mov
pop
mov
dec
cmp
jne
dec
add
pusha
xor
es
inc
or
pusha
add
pushf
dec
and
iret
test
pop
inc
or
pop
mov
or
dec
fdivr
or
test
orl
fidivrl
cmp
cmovnp
ljmp
fistl
in
psllw
ss
and
lret
dec
xchg
ret
ror
mov
sbb
mov
aam
cmp
imul
xor
leave
loope
test
clc
les
bnd
adcl
push
dec
lods
pop
jl
jl
push
imul
add
cmpsb
xorl
sahf
sbb
inc
or
imul
push
xchg
int3
stos
in
cmp
test
lods
loope
ljmp
popa
movsb
push
and
jl
jne
push
add
lret
repnz
push
fstpt
ljmp
sbb
ss
mov
cmp
or
add
lea
and
xorb
push
pop
and
inc
xor
loop
cltd
fisttps
adc
push
dec
and
cld
add
scas
test
dec
pop
inc
xor
jge
pop
sarl
mul
mov
fwait
inc
mov
enter
outsb
pop
sahf
mov
pop
dec
and
mov
cltd
cltd
shlb
push
inc
xchg
nop
sbb
fistpll
ljmp
out
pop
rorb
mov
iret
add
jno
mov
mov
rolb
sbb
dec
repz
popf
orb
lods
or
jns
lods
stos
jo
orb
adc
pop
sarl
cltd
dec
pop
out
mov
cld
dec
das
outsl
sbbl
adc
xlat
mov
cmp
sahf
int
incb
push
jne
sbb
pop
je
xchg
inc
sbb
or
xor
jle
inc
jbe
cs
add
pop
jl
adc
mov
pmuludq
sar
stos
xor
ficompl
adc
pop
ljmp
mov
mov
mov
bound
outsl
les
das
jmp
adc
mov
inc
and
pop
xchg
mov
jle
lret
dec
push
test
pop
lods
pusha
icebp
push
rol
ret
ret
cli
xchg
push
and
mov
incl
ds
pop
jmp
in
std
jp
fisttps
mov
rcrl
mov
cmp
subl
mov
imul
jp
int3
mov
push
cmc
or
fiadds
or
addb
stos
nop
in
add
dec
adc
mov
push
inc
or
int
dec
in
in
inc
add
loopne
dec
sbbl
popa
pushf
movsb
enter
jns
ret
out
pop
xor
mov
pmovmskb
dec
inc
or
jb
addr16
sub
jmp
add
test
dec
push
in
adc
xchg
fisttpll
push
xor
test
enter
mov
ljmp
fnstcw
lret
rcl
cmp
scas
out
add
adc
pop
call
sbb
and
das
adc
mov
fwait
dec
js
sbb
push
push
fsubrl
and
sbb
jle
jb
cmp
ds
testb
mov
mov
push
scas
les
es
xchg
pop
in
sbb
arpl
jecxz
mov
les
in
inc
adc
xchg
out
ja
jb
out
push
inc
mov
loope
or
pop
cmc
fwait
mov
mov
sbb
inc
int
mov
lock
xlat
mov
int3
adc
push
mov
in
xlat
aam
xrelease
imul
mov
shrb
jecxz
add
nop
pop
cltd
xor
mov
sbb
cwtl
xor
negb
sub
pop
repz
sbb
inc
xor
pop
xor
jns
lahf
adc
callw
out
mov
aad
jnp
add
mulb
xchg
jo
pop
stc
cwtl
inc
fisubl
xchg
mov
dec
adc
adcb
add
rclb
pop
loopne
mov
xor
sti
repnz
fldt
pop
arpl
pop
push
les
icebp
pop
test
mov
jecxz
test
mov
or
dec
xor
mov
les
jecxz
pop
insl
rolb
rcrl
cmp
scas
jg
cmp
inc
xor
loopnew
imul
mov
sub
sub
movsb
push
fisttpl
cmp
fdivr
pop
push
xor
ret
or
jecxz
je
jecxz
lea
dec
scas
cmp
push
clc
scas
inc
cmp
mulb
mov
inc
aaa
push
fcoml
shr
mov
adc
adc
jo
int
pusha
push
push
rolb
bnd
inc
out
inc
or
or
mov
inc
pop
icebp
jmp
test
negl
stc
enter
inc
repz
inc
repnz
and
fwait
adc
or
add
testl
std
push
xchg
test
mov
xchg
outsb
arpl
add
and
pop
lock
or
mov
xor
divps
dec
or
jnp
mull
push
out
xor
sub
adc
call
push
adc
mov
push
ss
pop
pusha
or
int
inc
ja
jb
mov
out
cmp
jge
fnstsw
adc
xchg
fs
jmp
push
inc
ret
add
stos
pop
popa
int3
jnp
sti
sbb
push
dec
jecxz
stc
xlat
lock
movsl
stos
jne
mov
xchg
rclb
mov
ret
out
cmc
jle
ret
mov
adc
inc
inc
into
bnd
loop
test
aaa
cmp
into
stos
andl
pop
jg
ja
push
fmul
and
inc
bound
cmp
ljmp
es
push
daa
inc
and
sbb
sbb
rolb
cmp
in
je
dec
popf
mov
repnz
adc
or
cmc
adc
stos
loope
addb
mov
aas
jmp
mov
out
dec
sbb
in
push
or
aas
mov
gs
inc
dec
cmp
mov
shll
daa
sbb
or
lds
aam
ret
xor
enter
xchg
adc
out
pushf
pusha
insb
mov
iret
sbb
negl
xor
xchg
jg
cld
leave
test
out
push
test
scas
fistpl
andl
jno
clc
adc
rorl
aaa
inc
jmp
mov
jb
fsubrs
and
mov
sub
mov
stc
push
sbb
add
dec
fs
imulb
jae
or
dec
add
scas
push
stos
mov
test
hlt
pop
pushf
loop
xchg
push
int
and
cltd
sub
inc
lcall
pop
inc
lahf
adc
lock
es
sub
ds
add
push
icebp
fdivrp
jnp
xchg
xor
cld
sub
ljmp
push
pop
mov
movsb
ja
cs
loopne
fimuls
sbb
daa
inc
jo
push
ds
fdivs
adc
add
cwtl
loope
cmp
insb
sti
jmp
dec
pop
xchg
adc
or
rolb
mov
mov
pop
push
xlat
pusha
mov
mov
adc
xor
dec
aad
pop
push
pusha
mov
xchg
adc
mov
xor
aad
mov
fs
dec
sarb
hlt
push
mov
dec
xor
outsb
mov
nop
add
push
pop
cmpsb
sahf
loope
jle
xor
sbb
mov
lret
add
enter
push
mov
xor
or
pop
sti
push
mov
mov
inc
sbb
xchg
repnz
adc
es
mov
adc
pop
cmp
cltd
sub
in
mov
test
jno
cmpsb
cmp
adc
jmp
sbb
adc
loop
pop
and
adc
je
xchg
clc
mov
lock
outsb
cli
daa
sbb
stos
test
jp
and
insb
out
mov
imul
mov
mov
hlt
aaa
aas
sub
or
mov
sbb
movsb
pusha
mov
and
jmp
pop
aam
shll
or
int
lea
stc
fs
dec
outsl
jl
daa
rcll
cmpb
adc
mov
xor
int3
out
jne
jge
xchg
aam
xchg
daa
fsubrl
test
xor
lods
xchg
xchg
mov
ret
add
cmp
lret
outsl
lods
push
jg
push
sbbb
and
pop
ret
fsubl
mov
fst
xor
bound
push
add
mov
loope
jbe
iret
pop
and
inc
subb
into
inc
cmovge
pop
xchg
fs
sbb
cmp
daa
sbb
sbb
cmp
ret
jle
jns
or
xchg
sahf
push
fs
adcb
aam
mov
xor
fnstenv
cmp
or
xor
or
cmp
lret
arpl
cltd
pop
mov
adc
xchg
repnz
test
in
sub
stos
cmc
loop
in
loope
mov
or
pop
popf
push
jl
xor
xchg
scas
ljmp
inc
add
loope
les
fwait
mov
sahf
movsb
push
mov
and
sub
jl
cld
push
push
divb
sub
les
decl
sbb
lods
inc
push
cmpsl
pop
sahf
popf
xor
imul
sbb
mov
xor
setnp
test
xchg
cmp
pop
repz
sub
ret
push
roll
lret
pop
dec
push
push
test
popf
xchg
stos
aam
inc
jae
repz
adc
jb
pop
pop
das
inc
sbb
test
push
outsb
lret
in
xor
push
iret
mov
les
cmp
mov
pushf
xchg
lds
inc
push
icebp
xchg
or
or
cli
adc
mov
pop
sub
xorb
in
inc
sbb
inc
mov
lods
fidivs
push
lock
sub
shll
ss
leave
insb
xchg
dec
pop
jmp
add
addb
cltd
push
jecxz
adc
ficomps
repz
mov
mov
dec
push
fcompl
std
loop
jp
data16
mov
add
mov
push
cli
out
gs
dec
fcoms
add
mov
ja
push
addr16
dec
add
lods
push
mov
xchg
ja
sub
lret
inc
xchg
arpl
xchg
icebp
das
clc
mov
stos
or
dec
pushf
jns
mov
add
call
cmc
jno
pusha
cmpsl
arpl
scas
push
cmp
movsl
jge
mov
fisubl
xorb
adc
sub
pop
outsb
mov
sbb
and
subb
xchg
cld
mov
mov
push
das
pop
mov
out
outsl
aad
add
sbb
mov
mov
incb
je
sub
pop
in
mov
arpl
imul
pop
jge
ljmp
xor
in
icebp
fcmove
out
mov
imul
js
in
jecxz
insl
push
jbe
orl
mov
lds
nop
loop
test
pop
shl
lea
ficomps
inc
shlb
sbb
mov
inc
or
rdpmc
add
out
inc
add
dec
inc
shlb
pop
pop
shr
xor
negb
in
shlb
sbbb
and
dec
or
mov
mov
ret
insb
add
xchg
stos
dec
inc
add
shr
test
pop
lcall
mov
inc
sbb
pop
jo
call
aam
mov
xchg
ror
rorl
mov
stos
add
pop
mov
sub
lods
movsl
dec
pop
xchg
sub
jb
imul
adc
aaa
push
inc
cs
jp
pop
fistpl
shrl
loop
xor
andb
mov
mov
leave
lock
mov
std
jae
xor
adc
test
shll
sbb
iret
push
aad
loopne
dec
ds
repnz
stos
ljmp
int3
sub
shrl
xchg
enter
jge
jl
adc
test
std
leave
fildl
cmp
inc
jge
pop
not
sub
push
mov
adc
pusha
adc
loop
lds
add
xor
and
cli
lds
clc
in
ss
adc
mov
mov
xchg
sti
mov
inc
gs
add
sbb
arpl
sbb
pop
pop
pop
aam
insb
xor
out
sbb
iret
cmpsb
jbe
xchg
dec
in
and
mov
das
or
psrld
dec
rorb
sbb
decl
and
scas
pusha
js
xor
or
lock
push
insl
dec
mov
and
mov
loop
in
push
pop
adc
and
aaa
clc
int
add
adc
xchg
jecxz
aaa
mov
xchg
dec
ficoms
xlat
stos
and
cmpsb
js
mov
ret
and
dec
lds
aam
incb
arpl
mov
in
dec
xor
aad
addr16
pop
divps
xchg
cmp
out
pop
in
xor
inc
adc
adc
and
jae
and
xor
push
jg
ret
add
sub
rcl
sbb
mov
lods
test
mov
inc
out
add
loope
mov
pop
aad
outsl
ljmp
lcall
sub
push
push
sahf
sub
inc
adc
push
pop
sbb
sbb
insl
inc
ror
ja
cmp
sub
out
mov
scas
mov
ja
adc
lahf
ffreep
lock
jmp
lahf
sbb
dec
in
mov
and
pop
stos
imul
jl
iret
ds
adc
add
sbb
add
stc
inc
cmp
mov
and
push
fldcw
pop
push
fidivl
stos
dec
ficomps
movsl
or
or
out
push
outsb
test
or
popa
add
xor
lds
cmp
popf
cmp
sbb
mov
jno
or
xor
sub
jno
mov
sti
push
imul
insb
xlat
ret
dec
lahf
loopne
aam
pop
xchg
cmpsb
test
je
and
out
and
andb
sub
or
adc
in
dec
shlb
mov
add
sbb
ret
dec
push
lret
add
addr16
inc
pop
xchg
outsb
movsb
cmc
xchg
xor
fsubp
jecxz
mov
mov
lret
fwait
mov
icebp
sbb
punpckhwd
arpl
pusha
xchg
xor
mov
clc
xor
push
lock
cmp
pop
lds
and
stos
mov
sbb
cltd
xchg
addr16
xor
mov
mov
cld
cmp
cmpsl
push
cmp
nop
adc
add
pandn
imul
inc
shll
cs
and
std
xchg
push
ror
add
cli
pop
clc
rcll
lods
jnp
rcrl
pop
cmpsb
dec
jge
popa
mov
cmc
into
adc
aam
sbb
in
sub
pop
scas
movsb
inc
dec
mov
adc
adcl
sub
pop
xchg
dec
dec
or
loope
sub
mov
jo
addr16
sbb
mov
sub
in
lds
inc
in
scas
push
and
ss
adc
fnsave
adc
xorl
idivl
jnp
add
lret
std
popa
in
fwait
add
rorb
push
arpl
scas
jb
cmp
mov
cmp
push
sub
repz
xor
popa
xchg
add
sbb
dec
add
stc
pusha
cmpsb
out
lods
iret
lds
std
push
adc
xchg
xchg
push
nop
out
push
adc
in
or
lock
out
outsb
fsubrp
xor
adc
add
or
pop
sahf
mov
xor
in
les
sub
mov
out
or
mov
push
add
sbb
clc
in
xor
push
rcll
mov
xor
jmp
imul
popa
sub
xchg
mov
push
out
outsl
pop
sahf
xchg
xlat
popa
xorb
in
imul
mov
in
movntps
das
mov
mov
das
rorl
jae
pop
hlt
xabort
xchg
daa
popf
mov
imul
mov
dec
scas
inc
imul
cs
cld
dec
pop
ljmp
out
and
sbb
fs
aad
cmp
mov
inc
subl
inc
icebp
xor
shr
push
stos
jo
add
out
pop
mov
xchg
test
fists
stos
fdivrp
shrb
mov
popf
push
push
add
jb
popa
add
push
pushf
das
out
xor
xor
jb
xor
ljmp
sub
inc
mov
cltd
sub
pop
hlt
adc
xor
js
pop
stc
xchg
push
dec
popa
push
rcl
add
jno
fs
imul
cmp
lds
sti
jb
xorb
out
xchg
push
jb
rorl
leave
adc
insb
ret
add
lock
in
mov
fnstsw
fnstsw
loop
xchg
mov
dec
sbb
and
and
imul
inc
mov
push
gs
sbb
pusha
mov
xor
fwait
push
push
xlat
imul
in
jp
push
stos
out
adc
outsl
ficomps
icebp
repz
pop
push
aam
in
out
subb
in
lahf
pop
jb
mov
jne
jge
aaa
mov
in
dec
cmp
movsb
cmpsl
inc
jne
mov
or
jecxz
jns
ds
insl
push
sub
ja
cmpsl
daa
and
into
imul
ljmp
imul
xor
inc
int3
hlt
push
outsl
andb
cmpsl
imul
mov
fcmovb
jg
iret
sub
pop
sbb
xor
test
or
cmc
stc
inc
lods
test
push
negl
pop
push
sahf
mov
sub
bound
sub
test
add
rcll
sbb
lock
aaa
test
addl
add
clc
xor
cmp
xor
xchg
repz
in
fcoml
je
andb
jl
or
pop
movsb
into
mov
clc
xchg
leave
jp
xlat
es
lahf
mov
pop
js
push
test
push
xor
push
movsb
sarl
cmc
jno
pop
mov
jle
fisubl
pop
scas
ja
inc
add
dec
pop
ret
js
sahf
hlt
inc
xor
adc
or
sbb
and
push
mov
xchg
or
popf
popf
js
rcll
and
popa
mov
fstl
xchg
sbb
test
adc
data16
mov
movsl
ror
inc
inc
in
mov
mov
mov
ja
aam
sbb
or
adc
insb
rcpps
push
mov
push
popf
test
lock
xchg
inc
mov
ret
repz
dec
aas
pop
fsubs
jmp
jl
scas
push
into
shlb
test
add
xchg
mov
dec
add
jns,pn
jns
mov
cmpsl
sbb
popa
idiv
fwait
mov
lcall
pop
mov
adc
and
sarl
outsb
loope
or
ds
jne
mov
jmp
in
rorl
insb
into
xchg
cmp
incl
jmp
ja
repnz
xlat
mov
iret
ret
mov
bound
add
rclb
aas
pop
or
scas
loop
sub
pop
xor
mov
jne
hlt
jb
and
fldpi
rorb
jnp
dec
jbe
mov
sarb
stc
jmp
cltd
movsb
mov
ljmp
adc
leave
xor
sbb
lock
cwtl
push
mov
mov
or
mov
aad
pop
push
pop
dec
mov
mov
or
hlt
add
enter
and
push
mov
stc
out
xor
or
jbe
dec
jp
andb
lods
dec
mov
call
and
or
outsl
out
shlb
sub
divb
iret
popa
mov
subl
pop
pop
cld
pusha
scas
fs
loop
subb
fwait
daa
rcrl
push
sub
push
pop
mov
sub
leave
mov
fldl
jmp
dec
fisubrs
stos
in
cmp
dec
into
mov
shll
iret
mov
in
lret
rol
scas
fstps
mov
aad
jo
fisubrs
add
cmp
std
cmpl
cmc
jecxz
popa
pushf
fcomps
mov
mov
ret
pop
loop
and
in
xchg
and
lret
out
rclb
and
pop
outsl
imul
enter
and
int
or
jle
push
int3
adc
int
bound
aad
lods
mov
negb
or
inc
push
repnz
or
jge
mov
not
sub
stos
pushf
mov
inc
test
and
sbb
mov
fnsave
or
clc
repz
scas
das
hlt
xor
adc
cwtl
outsb
cmp
add
orb
dec
xor
js
xchg
es
jnp
mov
xchg
pop
xor
cmpsl
dec
xor
fisubrs
adc
ret
inc
inc
sbb
lods
mov
mov
mov
push
inc
cmp
ds
adc
outsb
xchg
loope
sub
leave
std
inc
pop
jb
add
dec
imul
inc
pop
fadds
xor
xchg
popf
sbb
jmp
mov
and
dec
fs
xchg
mov
ljmp
xor
mov
add
lret
sti
ljmp
and
xchg
jno
dec
cli
push
lods
push
sub
xlat
fs
inc
push
mov
test
add
push
fcomp
and
push
xlat
rcr
mov
imul
inc
mov
and
scas
rcr
and
lea
sub
xchg
inc
push
cmp
mov
pusha
ffreep
xor
sbb
insl
pop
scas
push
mov
push
popa
push
xchg
or
pop
sti
insb
sub
lock
ret
pop
mov
movsl
enter
mov
fisubrs
and
fnstenv
subl
and
or
mov
jge
xchg
out
sub
xchg
sub
lods
shlb
push
sub
and
push
xor
jp
insl
movb
repnz
lods
and
cmp
jne,pt
push
lods
sti
pop
mov
test
gs
adc
mov
stos
in
sbb
lock
inc
outsl
ds
jl
js
test
mov
push
movsb
data16
sub
cmpsl
fwait
mov
adcb
arpl
and
mov
add
dec
xor
or
fsubs
mov
sbb
or
push
sub
sbb
addr16
clc
lahf
mov
addl
das
xchg
out
push
and
ret
mov
nop
push
repnz
cs
add
pop
mov
cmp
arpl
mov
jnp
mov
xchg
xchg
mov
lret
out
mov
outsb
rorb
in
fisttpll
lahf
fwait
xchg
and
xchg
enter
test
push
out
jns
xor
mov
scas
fwait
sbb
in
pop
jnp
pop
dec
ror
mov
inc
dec
push
icebp
jb
xor
xor
pop
or
and
sbb
cmp
mov
xor
jg
xlat
ljmp
pop
xchg
xor
stc
adc
test
sub
stos
mov
test
adc
add
or
push
xchg
clc
insl
dec
movsl
inc
adc
xorb
sub
cmp
push
mov
add
or
pop
rcr
repz
push
adc
xor
test
xchg
and
pop
lret
lods
lods
fs
lds
push
dec
sbb
xor
jge
setg
es
fimuls
cwtl
jno
shrb
int
imul
aam
jne
lcall
mov
out
fwait
jno
dec
icebp
xchg
jns
xor
mov
ss
test
and
pop
pop
mov
stos
dec
daa
andb
aad
movsb
push
xchg
rorl
dec
scas
sti
jge
and
js
ret
add
stos
mov
in
push
pusha
mov
jnp,pt
cmp
shlb
cmp
jecxz
mov
and
rolb
rorl
mov
add
push
push
adc
mov
jl
cld
jnp
add
cs
lea
xchg
decb
adc
ss
or
std
push
loop
pop
push
aad
mov
sar
mov
mov
out
push
mov
lret
mov
mov
mov
cmpsl
mov
fadds
popl
subb
mov
cmc
hlt
inc
jns
sbb
mov
sti
xchg
test
stos
xchg
stos
in
clc
nop
imul
pop
push
xchg
fwait
mov
sarl
add
sbb
int3
jle
cmp
or
pop
fsub
xor
mov
mov
mov
lcall
and
pushf
rclb
js
das
and
xor
repz
push
and
stos
mov
lods
jmp
push
ja
repnz
fs
das
or
and
push
sub
arpl
add
jg
xor
push
les
push
daa
mov
pushf
ret
pop
mov
jb
stc
notl
aas
or
addr16
jl
scas
cmc
imul
sti
xchg
cwtl
adc
sbb
push
mov
mov
push
out
test
inc
je
xor
test
pusha
and
mov
insl
push
xchg
ja
ret
loop
and
push
xor
shlb
jne
loopne
ds
xchg
inc
in
lret
jno
cld
lahf
popa
push
sti
and
paddsw
aaa
inc
into
sarb
aad
test
test
dec
pop
into
ret
xchg
xchg
insb
std
and
xchg
out
ror
cmp
sahf
pop
dec
lods
shrb
pop
notl
xchg
push
dec
jl
mov
or
lea
mov
jmp
fwait
cmpsl
or
fs
lods
ret
movsb
testb
push
cltd
xchg
aad
lods
mov
lret
sbb
js
adc
and
repnz
and
stc
gs
xchg
mov
iret
push
rcrl
les
int3
mov
mov
xor
push
mov
clc
sbb
sub
dec
shr
push
mov
cmpl
mov
aad
enter
aaa
push
xchg
jne,pt
stc
lods
mov
adc
dec
adc
rorl
sub
sti
xchg
imul
push
aad
or
les
sbb
ret
jmp
shlb
mov
insl
pop
std
pop
movsb
lahf
mov
ja
ret
sub
add
dec
call
enter
lods
sbb
pop
push
inc
push
pop
sub
outsl
xor
cs
adc
sarl
or
jl
out
cmp
and
dec
push
bound
adcl
jb
int3
jne
jg
out
data16
push
andl
mov
clc
mov
pop
jmp
xor
rcr
jl
jmp
sbbl
cltd
inc
in
cmpsl
mov
add
es
xchg
jo
xor
inc
std
mov
sub
push
jae
std
pusha
lahf
or
ret
and
into
ret
in
in
movsl
xchg
or
xor
cmpsb
jmp
xor
xor
stc
adc
stos
ds
int3
jl
mov
jp
add
and
mov
mov
push
dec
xchg
push
xor
mov
mov
mov
sub
cmpl
sub
sbb
scas
cli
aam
inc
jnp
sti
scas
xchg
mov
jns
mov
and
mov
adc
mov
xchg
ret
xchg
movsb
cmp
out
or
sbbl
push
fst
andl
in
cmp
in
out
popf
lds
xchg
cltd
mov
scas
mov
and
data16
add
and
lret
in
loop
or
gs
push
sub
dec
dec
loope
lret
cmp
lcall
ljmp
and
pop
add
movsl
sbb
mov
lret
push
in
fsubp
ficoms
shr
xchg
test
scas
in
or
or
sub
testl
sub
push
das
xor
andl
cs
ret
xchg
or
cld
add
adc
mov
call
jo
adc
rcll
cmp
xchg
xor
inc
nop
cmp
sbb
mov
pop
adc
dec
ret
jp
rcrb
repz
shrb
lret
dec
jbe
je
enter
pop
xchg
mov
leave
popf
xchg
aad
mov
sbb
pushf
into
mov
add
outsb
test
adc
imul
fs
xchg
punpckhdq
and
subb
out
ss
mov
in
imul
idiv
imul
xchg
mov
mov
ds
inc
hlt
test
cmp
inc
xor
cld
insl
insb
mov
sbbb
fstpl
jle
add
xchg
mov
cmp
add
lea
and
out
stos
cmp
push
mov
sub
js
xlat
sarl
adc
lock
mov
push
popf
sahf
in
push
jmp
add
jo
arpl
push
das
sahf
inc
dec
in
paddsb
mov
pop
sbb
cmp
mov
insl
lahf
xor
out
pop
and
popa
sar
mov
test
test
scas
insb
int
in
shlb
insb
mov
mov
jmp
cld
add
out
lock
mov
push
xchg
fldcw
pop
inc
pushf
adc
ret
movsl
inc
shrl
adc
push
test
rolb
sahf
stc
aam
inc
push
mov
int3
ljmp
into
loop
sbb
inc
out
sub
mov
setno
inc
dec
add
dec
push
mov
aad
add
fucom
test
or
repz
arpl
loope
outsb
push
shrb
pushf
dec
pop
and
scas
test
lea
pop
mov
xchg
pop
mov
cmp
mov
mov
adc
inc
out
jecxz
pop
fs
mov
and
mov
das
jno
fld1
out
mov
in
mov
push
pop
pop
subl
xchg
clc
pop
jno
and
fldt
addr16
test
xor
mov
insl
cmpsl
lods
mov
mov
mov
fwait
in
gs
ljmp
add
scas
xor
xchg
pop
cmp
push
cmp
cli
jp
in
dec
mov
shlb
loopne
jnp
jns
push
in
pop
inc
add
push
jo
loop
or
pop
hlt
ret
out
push
data16
adc
stc
fdivs
mov
into
dec
out
sub
mov
mov
stos
aam
stos
js
jbe
jl
inc
cmp
add
cmpsl
sub
mov
mov
repz
rcr
mov
mov
fmulp
mov
test
leave
mov
jle
testb
addr16
pop
cmp
dec
mov
int
mov
stos
int
jnp
rclb
mov
mov
push
insl
adc
je
mov
rcrl
xchg
pop
das
pop
scas
push
repz
dec
and
xchg
sub
sbb
push
push
inc
pop
push
stos
pusha
cld
adc
jno
lahf
scas
mov
mov
mov
rorb
popa
pop
mov
and
std
xor
mov
rolb
add
inc
mov
xlat
cltd
mov
xor
outsb
or
popf
filds
inc
pop
xchg
insl
fdivl
out
bnd
jp
inc
mov
test
cli
ljmp
scas
xchg
jo
es
aam
loope
lods
stos
xlat
mov
stos
mov
jmp
sub
or
push
lea
fs
jnp
xor
xchg
lods
sub
mov
jge
fisubrl
mov
jns
jl
inc
push
movsb
xor
jb
popa
movsb
inc
add
mov
fimuls
push
mov
push
xchg
xor
iret
cmp
mov
mov
fcompl
add
xchg
pop
lret
stos
pop
lea
or
mov
in
push
push
fs
shl
inc
inc
cwtl
dec
adc
aaa
mov
cld
sub
jne
repz
push
mov
lods
or
dec
adc
test
sahf
aas
scas
inc
outsl
je
rorb
push
sahf
shl
in
mov
stos
shr
popf
pop
xchg
sub
or
dec
cltd
call
xchg
xchg
mov
mov
movsb
inc
cmc
rolb
in
test
push
pop
shrl
push
xchg
scas
fldt
cmp
aaa
and
frstor
rorl
in
mov
jo
jne
xor
lods
jo
int3
in
push
shrb
jle
mov
adc
repz
mov
pop
into
dec
int3
jb,pt
hlt
in
mov
jge
pop
add
and
mov
sub
and
xor
jnp
xchg
lret
dec
adc
int3
push
imul
jg
and
data16
or
xchg
fidivl
cmp
aas
mov
xor
or
out
aas
cmp
and
fadds
daa
mov
inc
cld
popf
sub
sbb
dec
adc
xor
xor
sbbl
aaa
mov
jg
sub
sbb
jbe
inc
out
xchg
and
repz
in
hlt
dec
neg
cltd
pop
ss
pop
mov
lods
jge
int3
roll
mov
addr16
dec
lret
inc
xchg
imul
inc
xchg
pop
and
add
add
jbe
sbb
arpl
lcall
dec
test
aaa
das
movsl
push
out
xor
or
xchg
or
dec
push
dec
jmp
loopne
lret
fstl
aad
xor
sub
lahf
or
jne
cmp
and
push
jns
gs
cmp
jbe
mov
aas
and
ljmp
adc
out
inc
cmpsl
into
or
pop
mov
mov
rolb
push
addl
cmc
ret
cmp
jecxz
mov
xor
ss
ja
mov
sbb
adc
pop
outsb
xchg
adc
daa
jmp
push
into
mov
cmp
int
mov
fimuls
sub
cmpsb
mov
sub
insl
shrb
lods
outsb
test
cmp
sub
cmpl
or
shlb
xchg
mov
xchg
mov
enter
jmp
fwait
xor
mov
gs
pop
mov
cmp
hlt
mov
mov
sub
daa
fldcw
add
stc
adc
test
std
pop
movups
and
ret
or
stos
out
stos
dec
out
jecxz
sub
loop
dec
leave
or
jmp
std
mov
movsl
add
and
mov
add
lcall
inc
aaa
in
hlt
fimull
js
dec
xchg
incb
lods
int3
inc
or
xor
push
push
pop
or
mov
test
jnp
aaa
pop
test
mov
pop
jns
filds
and
fcmovnbe
xor
sbb
push
dec
pop
mov
jb
fldenv
jl
fstl
sbb
mov
or
les
imul
cmpsb
push
jge
fiaddl
inc
pop
int
jp
out
mov
push
adc
mov
mov
jecxz
insl
add
cmp
cmp
mov
fstps
mov
shll
add
xchg
icebp
and
and
lret
aaa
loopne
sub
push
fcoml
or
xor
or
shll
push
sbb
gs
adc
mov
jge
ret
lahf
cwtl
mov
mov
dec
pop
pusha
adc
movb
adc
addr16
stos
in
rcll
adc
into
leave
pop
sub
in
sbb
pop
rcrb
inc
mov
je
nop
cmpsl
jb
sbb
std
sbb
push
push
in
add
push
cmp
jp
testb
sbb
mov
inc
movsb
mov
sahf
andb
or
ljmp
or
xchg
fidivrs
dec
sbb
xor
cmp
lods
rcll
jge
jmp
cmp
xor
add
xchg
imul
mov
jnp
mov
and
movsb
pop
or
cmp
int
rolb
push
mov
scas
cmpsl
lahf
jl
loope
pop
sbbb
adc
push
jge
mov
sbb
pushf
jne
or
movsl
push
loopne
imul
cli
lret
inc
lods
loopne
dec
es
iret
shrl
cmp
sub
test
dec
push
icebp
bound
add
fdivl
fsubrl
sub
inc
jle
in
cmpl
mov
sbb
sub
jnp
js
cmp
inc
mov
lcall
pop
push
jbe
lahf
xchg
popf
out
xchg
pop
mov
xchg
and
pop
pop
xor
fcomi
sbb
jmp
pop
lcall
ss
push
aas
lds
in
scas
mov
cmpsb
fs
shlb
sahf
dec
loop
hlt
test
mov
gs
sti
sub
mov
rol
and
movsl
sbb
popa
rcr
jne
in
xor
icebp
mov
inc
push
xor
fistps
mov
lock
in
mov
mov
cmp
push
into
jo,pn
cmp
testb
pop
jp
cli
out
mov
mulb
add
testl
int3
jge
lods
dec
stc
cmpsl
mov
xor
push
push
dec
jg
pop
inc
or
out
stos
push
mov
dec
fildl
popa
xchg
push
sub
testl
das
add
enter
imul
roll
leave
pop
mov
in
inc
mov
xchg
fs
inc
icebp
popf
lcall
cmp
addr16
cmpsb
pushf
mov
lret
pop
jo
and
je
test
mov
ja
mov
jecxz
mov
xlat
mov
jnp
xor
mov
sbb
ds
xor
iret
stc
out
xchg
inc
imul
xor
rcll
mov
push
pusha
insb
sbb
cmc
jb
std
aaa
push
xor
decl
inc
mov
mov
jmp
insb
add
jl
xchg
adc
mov
mov
adc
sbb
in
cmp
sti
notl
adc
mov
rorb
popa
xor
aam
sub
xlat
outsb
pop
or
cmp
out
test
jle
sub
mov
push
push
xchg
sbb
ret
mov
lods
aaa
xor
enter
dec
int
lret
cmp
cmp
movsl
test
arpl
daa
icebp
mov
das
pop
xor
xchg
mov
sbb
ds
ficoml
out
pushf
ret
mov
xchg
and
mov
aam
aas
sbb
stc
adc
pop
ret
sbb
mov
sar
xor
pop
xchg
pop
aad
imul
mov
add
test
jno
cmc
and
rclb
xor
and
xchg
das
aad
std
mov
mov
repz
inc
sbb
sub
xor
decb
fisttpll
push
cli
leave
push
lcall
sbb
pop
mov
pop
fnstsw
inc
nop
sbb
sub
push
dec
aas
mov
jbe
popa
inc
mov
les
inc
jbe
xchg
clc
in
pop
lcall
in
loop
sbb
ficomps
sbb
jnp
icebp
mov
sti
xlat
mov
sbb
push
cs
movsb
or
sbb
fcoms
sbb
xor
mov
and
adc
rolb
pop
or
push
dec
xor
addr16
push
sahf
fstpt
cli
or
and
push
mov
or
push
jb
call
mov
jb
xor
dec
insb
test
std
push
sbb
push
shr
cmp
jp
push
xchg
cmp
popf
cmp
jl
inc
arpl
adc
loop
inc
pop
adc
jge
repnz
jne
loop
hlt
cvtps2pd
fistpll
pop
mov
fisubrl
push
inc
testb
pusha
mov
jl
arpl
adc
jmp
lds
add
cmc
push
jg
add
jge
stc
clc
rcrl
dec
dec
and
jp
adc
push
aas
sub
inc
imul
rclb
in
add
test
add
mov
xchg
xchg
in
bound
je
pop
mov
inc
lea
fdivrl
shrb
push
sti
scas
fidivrl
xchg
es
push
xchg
int
ret
repnz
mov
xor
mov
pop
adc
mov
das
jae
test
sub
fldcw
sub
dec
int3
arpl
mov
sbb
xor
cmp
loop
fsubrl
cmpsb
push
add
or
sub
cmp
arpl
leave
mov
push
rol
mov
loop
sbb
shrb
roll
xchg
aas
enter
out
sbb
out
cwtl
mov
mov
loop
mov
mov
xchg
cmpsl
aam
mov
cmp
mov
les
push
sbb
mov
mov
cmpsb
mov
mov
scas
in
push
nop
leave
cmpsb
call
push
sub
and
clc
scas
inc
xor
and
lods
roll
notb
idiv
sub
jle
roll
in
out
adc
negb
sbb
mov
dec
push
inc
out
stos
mov
xor
mov
cli
loop
jne
mov
cmp
xchg
jns
add
adc
in
push
mull
and
test
fwait
sbb
fnstsw
cmp
out
fldt
idivb
out
fstl
dec
call
mov
push
cli
scas
out
sub
lock
cmpsb
xchg
jle
adc
add
dec
mov
mov
sti
decb
lods
lock
sub
push
cmp
xchg
clc
xchg
xchg
jns
popl
pop
adc
mov
mov
and
imul
cmpsb
mov
pop
xchg
cmpsb
pusha
fsubs
stos
rcrl
fmull
xchg
pushf
mov
insb
add
jmp
addr16
cmpsb
xchg
outsl
js
jo
popa
dec
std
jno
movsl
lcall
jb
mov
inc
inc
imul
int
mov
shlb
dec
mov
xchg
pop
lahf
mov
mov
sub
arpl
mov
fdivrl
repz
sarb
jge
aaa
call
clc
rcr
loope
hlt
adc
insl
inc
hlt
iret
cmp
mov
aad
or
or
pop
dec
jg
push
loope
jge
int
sub
lret
shrb
int
adc
sub
add
mov
fistpl
popa
inc
out
es
sub
rcll
jmp
push
pop
sbb
fldenv
jb
add
inc
xchg
xor
sahf
shlb
push
push
fcmovu
addl
add
xlat
test
xchg
xchg
adc
testb
jecxz
sar
jle
pop
out
mov
das
in
outsb
or
add
ljmp
fistps
enter
pop
fucomi
jp
mov
ret
xchg
fld
or
xchg
fdivs
shll
mov
jo
dec
xchg
push
mov
sbb
pop
cmc
in
rcrb
mov
add
jnp
out
push
mov
stos
xchg
pop
and
icebp
adc
adc
iret
xchg
push
jnp
fcmovnbe
mov
pop
roll
lods
cmpsb
cltd
pop
dec
or
lahf
hlt
dec
sbb
hlt
mov
mov
stos
popf
mov
mov
inc
std
sbb
sar
cmp
pop
mov
int
out
repz
pop
call
fidivrl
sbb
ss
andb
iret
mov
and
push
push
pop
sub
add
cltd
cmp
adc
xchg
xchg
add
cs
shll
out
stc
repz
xor
xor
xchg
sub
pop
aas
fisubrs
insl
sub
repnz
inc
dec
jle
clc
imul
mov
hlt
in
jne
pushf
ss
push
add
aad
test
fsubl
and
rcl
into
jns
inc
daa
aaa
add
mulb
add
outsb
xor
dec
sbbl
pop
imul
test
mov
icebp
stc
roll
out
add
fstl
clc
inc
xor
xor
testl
js
imul
xor
jp
cmc
or
or
push
jno
aam
sbb
and
es
jmp
test
jl,pt
xchg
push
orl
sbb
fwait
daa
shl
mov
in
xor
dec
mov
test
add
in
mov
out
repnz
inc
xchg
lret
inc
push
rorl
cltd
scas
push
cmp
jp
jmp
push
fcmove
push
test
std
pusha
jns
stos
xchg
push
mov
pusha
repz
cmc
ss
fistpll
mov
pop
mov
cmp
ret
xor
scas
xor
cld
mov
xlat
sbb
movl
in
clc
je
imul
pop
pop
xchg
int3
scas
pusha
pop
popa
imull
inc
mov
inc
popf
dec
xor
push
jo
cmp
push
lock
into
jnp
popa
push
dec
inc
ja
test
mov
mov
pop
add
ficoms
or
fwait
mov
enter
and
push
dec
jg
clc
outsb
test
push
adc
sbb
ljmp
inc
lea
mov
sbb
loopne
push
out
pop
xchg
inc
xchg
pop
pop
add
test
jbe
sub
lea
mov
lcall
pop
call
lret
dec
mov
push
lret
cmp
xor
ds
movsb
aam
popl
sbb
dec
jnp
and
inc
stos
mov
mov
pop
sub
lea
dec
push
sbb
movsl
mov
js
subb
mov
test
jecxz
or
dec
jecxz
movsl
imul
inc
jmp
and
fdivp
mov
pop
int3
sbb
out
ficompl
incb
aad
inc
js
adc
xchg
push
adc
pushf
jl
pop
ljmp
pop
xor
sar
shll
pop
imulb
pop
lods
adc
mov
subl
clc
sbb
add
mov
or
jmp
adc
jmp
sub
fs
out
faddp
jmp
rorl
cltd
sub
loopne
lret
push
je
mov
sub
xor
inc
stc
mov
fdivrs
and
xchg
fdivrs
mov
inc
stos
jae
dec
add
jo
cmp
loop
rcll
insl
adc
and
test
cltd
xchg
xchg
sbb
xchg
add
sub
sahf
imulb
stos
sub
xchg
bound
ret
cmp
dec
dec
jg
xchg
jecxz
adcb
repnz
sub
adc
push
and
shlb
lret
xor
in
fbld
push
dec
push
cld
stos
clc
or
sar
mov
mov
inc
loopne
push
fucomp
cmpl
cmp
aas
fs
inc
sbb
cmc
popf
mov
mov
fmull
cmp
sbb
fldenv
sub
mov
push
mov
mov
mov
js
mov
mov
push
pop
andl
adc
jo
clc
out
xlat
test
xchg
and
cmp
adc
test
out
es
or
jp,pt
cmp
sbb
lock
inc
in
pop
cmp
ret
mov
popf
inc
pop
mov
push
movsb
rorl
push
mov
dec
xchg
arpl
pop
xor
hlt
xor
inc
pop
insl
jl
sub
pop
movsb
push
or
flds
sbb
fadd
movsb
icebp
cmpsb
mov
jno
inc
dec
jecxz
mov
mov
push
stos
stos
xor
sarb
or
sahf
inc
int
repnz
push
xchg
inc
cmpsl
mov
movsl
push
outsb
inc
in
push
test
fisubrl
mov
insb
xor
pop
jmp
push
cmpsb
das
movsl
out
jp
jl
dec
jnp
sub
jge
mov
mov
or
negb
int3
js
call
or
jns
cmp
cmp
iret
jmp
add
je
or
popf
dec
leave
pop
push
xor
stc
incb
out
mov
xor
andb
push
std
out
leave
mov
mov
leave
call
clc
pop
es
xchg
jp
sbb
mov
mov
mov
pop
movl
sbb
roll
stos
cmp
jno
push
mov
xlat
or
jle
nopl
and
in
fdiv
adc
mov
adc
test
negl
mov
andb
pop
jmp
jbe
into
jl
fdivs
lcall
ret
std
mov
fmul
cmp
inc
xor
sub
mov
dec
sbb
ret
or
adc
inc
push
sub
or
in
lcall
test
jmp
xor
or
cmp
or
xor
sub
leave
scas
add
push
in
cmp
inc
xor
daa
sbb
and
popf
mov
push
mov
mov
push
insb
or
and
inc
sub
dec
or
in
daa
sarl
inc
lock
push
fildll
sbb
fdivl
lods
leave
call
xchg
mov
adc
lahf
clc
add
aas
cli
int3
sbb
leave
in
adcl
mov
int
push
movw
sub
fstpt
ds
sub
push
cmp
cmp
loope
call
mov
adc
push
sbb
lcall
add
ss
mov
andl
scas
lods
clc
pop
mov
xchg
push
xor
repnz
add
rclb
ss
mov
pop
arpl
cmc
dec
call
in
sti
or
xchg
dec
jbe
in
lods
pop
xchg
rcrb
stc
dec
xchg
scas
sbb
aad
mov
je
cs
sbb
push
sbb
sahf
in
push
leave
in
inc
dec
mov
aad
pop
mov
pop
loop
or
mov
xor
and
paddw
test
sub
xchg
mov
aas
inc
push
mov
jo
jp
jbe
popa
repnz
mov
sbb
mov
xchg
call
mov
ficoms
js
out
adc
xchg
inc
cmc
insb
and
inc
xchg
cmpsl
loopne
pop
in
pop
inc
and
nop
mov
int
leave
or
not
and
lock
test
pop
jg
xchg
push
repz
mov
cmp
sub
popf
dec
lods
lahf
push
inc
gs
xchg
cmp
enter
pop
add
mov
and
cld
or
insb
mov
adc
cmp
push
xchg
add
mov
inc
out
sub
dec
mov
jne
mov
popl
test
and
jmp
xchg
push
mov
mov
lcall
sbb
cwtl
fstpl
cmp
jp
push
call
lret
add
push
mov
push
add
mov
mov
mov
jne
clc
or
and
repz
cmp
add
in
sbb
and
inc
iret
repnz
mov
int
sbbb
sub
xor
pusha
dec
aam
pop
pop
sbb
outsb
cmp
scas
sahf
fistpll
pop
add
cli
or
jmp
dec
mov
clc
or
sub
mov
imul
in
inc
xchg
je
xor
cld
adc
inc
test
push
mov
data16
sbb
xor
stc
aas
cwtl
sub
mov
inc
or
inc
sub
sbb
and
cmp
imul
push
sbb
xor
scas
xor
adc
stc
sbb
es
dec
bound
icebp
add
jbe
and
cmp
mov
sarl
and
sbb
ljmp
jl
inc
mov
dec
and
std
pusha
inc
mov
scas
sub
lcall
xchg
jg
outsl
jmp
insb
or
jg
inc
jno
movsl
inc
movsl
mov
les
cmp
shll
cmp
ret
xlat
xor
cmp
jle
je
mov
inc
lahf
jne
inc
xlat
jb
addr16
inc
rorl
iret
imul
lcall
xor
mov
add
mulb
or
rcrb
dec
nop
lea
mov
ljmp
cld
xor
push
cwtl
mov
std
xchg
popf
repz
int3
jl
mov
inc
addr16
pop
cmp
lret
push
mov
inc
imul
inc
gs
es
cltd
jmp
ljmp
xor
fnstenv
fstpl
test
cli
call
add
jb
push
mov
xor
fwait
fldl
fucom
jg
rclb
out
test
sti
aaa
insl
jmp
mov
mov
cmp
scas
clc
popf
insl
xchg
pop
int
test
lea
and
shrb
outsb
and
pop
into
pop
or
negl
mov
mov
and
add
mov
mov
xor
mov
add
cmp
jnp
sbb
cltd
roll
lods
and
out
enter
in
jb
ja
shll
dec
notb
pop
sub
adc
mov
ljmp
into
loope
std
xchg
cwtl
mov
push
fwait
cli
std
cmp
pop
loop
adc
adc
mov
enter
mov
mov
ret
out
pop
jge,pn
pop
das
mov
adc
loope
cs
add
movsl
dec
lea
rorl
inc
sub
sahf
cmp
pop
mov
rcll
ds
lods
inc
sbb
movsb
mov
aas
dec
frstor
inc
inc
push
mov
push
mov
mov
call
jp
out
es
popf
mov
stos
es
test
jge
lock
mov
js
ds
mov
popa
mov
addl
lods
fsubp
or
call
into
pop
rcl
and
pop
mov
pop
fmul
and
ffree
fimuls
ja
add
jge
fiadds
lret
push
std
aad
inc
mov
pop
filds
les
hlt
jl
add
jne
into
jo
fwait
arpl
jp
in
imul
mov
pop
repz
push
sbbl
je
sub
stos
sbb
outsb
fwait
iret
sub
xchg
xor
repz
dec
movsl
pop
repnz
xchg
enter
jmp
mov
cwtl
cmp
push
push
in
or
jp
jg
fmull
fisttps
lock
push
inc
fs
add
push
aas
addr16
in
mov
setl
mov
push
adc
adc
push
movsl
movb
setb
lcall
fcmovne
and
push
stos
orb
cmpsb
mov
and
aad
pop
cli
cld
in
adc
mov
sarb
mov
enter
arpl
dec
lock
aam
jle
jbe,pt
sti
in
jmp
fnstsw
mov
outsb
fnsave
inc
mov
push
out
scas
aad
add
inc
js
cmpsl
hlt
sub
rorb
cld
xchg
lcall
mov
mov
imul
mov
and
cwtl
fildl
cmp
test
pop
in
ja
push
sahf
jb
repz
mov
and
les
aam
ja
jge
cmpsb
lods
xchg
cmpsl
cmpb
cmp
dec
mov
stos
dec
std
or
inc
stos
lcall
and
ja
add
mov
popf
mov
out
mov
push
mov
shlb
imul
mov
mov
xor
dec
mov
in
pop
dec
mov
out
fucomp
outsb
xchg
dec
aam
mov
mov
pop
leave
inc
mov
xor
jmp
mov
daa
imul
jae
jmp
sbb
adc
test
push
mov
jns
push
push
dec
lahf
cmpsl
aas
jl
stc
xor
mov
gs
jbe
or
mov
dec
test
dec
push
push
push
mov
mov
mov
aad
cwtl
jo
push
insl
fisubl
or
xchg
icebp
sub
cltd
mov
cmc
sbb
push
sbb
mov
in
lret
fildll
call
movsl
mov
mov
bound
mov
inc
mov
jnp
sti
mov
adc
imul
jns
cmpsl
cltd
or
adc
rcrl
jo
stos
movsb
aam
test
jbe
cmp
and
lods
lds
dec
adc
sub
cmp
pop
fwait
or
test
cltd
test
xchg
cwtl
or
bound
pop
and
inc
clc
sahf
jmp
inc
enter
fs
adc
or
push
adc
push
adc
clc
pusha
popf
jle
jo
or
fstps
and
inc
add
aam
dec
pop
add
xlat
add
std
nop
je
or
cmp
dec
xchg
adc
mov
or
cmpsb
mov
mov
das
and
and
out
sbb
mov
in
call
arpl
rol
clc
mov
xor
mov
push
mov
pop
sbb
sub
roll
lahf
scas
sbb
mov
sub
xchg
and
inc
mov
xchg
shll
dec
xor
das
cmpsb
mov
inc
stc
jle
das
popa
data16
inc
enter
loopne
cmpsl
and
shll
inc
stc
inc
divps
xor
jb
cmp
mov
inc
or
xor
adc
int3
iret
xchg
int
pop
jo
dec
xchg
lret
cmp
sbb
enter
mov
cwtl
jl
fbstp
lret
sbb
add
rcll
iret
mov
mov
out
mov
inc
sbb
movsb
add
inc
jge
insb
mov
outsb
scas
test
mov
push
cmpsl
mov
push
scas
popf
cmp
pop
adc
dec
mov
or
jne
xorl
xor
pop
cli
cmp
les
jle
push
xor
mov
rorb
lock
xor
shlb
cmc
cs
push
jmp
movsb
mov
out
repnz
sub
or
lea
push
add
ficompl
xchg
pop
in
int3
in
dec
inc
fstpl
cmpsl
shrb
dec
das
cld
xchg
ret
and
and
fildll
add
sbb
adcl
xchg
out
xchg
dec
aaa
pop
mov
gs
push
mov
hlt
std
cmp
push
into
jae
adc
xor
cmpsb
insl
dec
mov
pop
or
shr
mov
ss
cmp
dec
add
and
and
cmpsb
xchg
jo
pop
fs
loop
ljmp
ficoms
fwait
stos
or
pop
stos
push
lock
data16
stc
jg
fidivs
pop
mov
or
call
lcall
scas
imul
int3
lahf
icebp
cs
jecxz
or
cmp
leave
cli
push
fsub
jb
push
sbb
xor
lea
xor
xchg
lret
out
cmp
leave
sti
loope
mov
pop
repz
cs
sbb
lods
fcmovnbe
mov
fcmovb
adc
xor
mov
fs
lods
popf
aam
jbe
jno
ret
cmpsl
movsb
inc
mov
inc
enter
arpl
arpl
ret
aam
inc
mov
movsb
jo
sahf
adc
mov
push
dec
stos
xor
sub
mov
fwait
cs
enter
jecxz
push
cltd
push
push
or
pop
into
out
sbb
sbb
push
adc
aas
or
and
aas
arpl
dec
call
sub
and
or
daa
add
adc
nop
jo
dec
lods
mov
xor
sub
fldenv
xchg
faddl
push
push
cltd
mov
rorl
sti
sti
sub
add
je
mov
sbb
mov
dec
movsb
les
mov
pop
and
mov
jne
mov
jmp
fistl
inc
pop
int
into
pop
push
xchg
ljmp
pop
fstps
adc
hlt
repz
mov
mov
out
jle
mov
sti
push
cli
push
lock
xlat
mov
testl
add
ret
in
popf
cwtl
xor
xchg
movb
inc
addb
adc
das
popw
xchg
outsb
lods
dec
ljmp
mov
inc
xlat
pop
lahf
and
lcall
frstor
xor
xor
gs
push
mov
dec
lret
dec
lahf
popa
sbb
push
pop
mov
cmp
outsb
ret
repz
fidivl
xchg
adc
movsb
sbb
lds
not
divb
sbb
mov
jl
and
mov
sub
add
push
fnstcw
cmpsb
fisubl
call
psadbw
pushl
sub
add
cmp
pop
sbb
mov
mov
scas
fcompl
jmp
cmpsl
or
inc
pop
xor
fcomps
loop
cmpsb
pop
jne
sbb
call
test
push
and
cs
push
rcr
and
in
cmp
adc
mov
popf
mov
push
jle
into
repz
shrb
pop
mov
mov
fistl
popa
add
sbb
aas
jg
or
mov
aad
fstpl
jmp
call
andb
lods
ss
pop
std
fimuls
xchg
je
mov
push
jmp
divl
imul
out
and
push
push
outsl
pop
sbb
aam
sub
pop
imul
ds
push
into
mov
int
mov
jmp
dec
jbe
movsl
stos
sbb
mov
xor
and
mov
sbb
popa
clc
xchg
leave
aas
inc
jmp
mov
and
sysret
iret
mov
xchg
and
sti
sub
lahf
xchg
ret
std
or
aas
subl
lock
nop
fcomps
dec
loope
shrl
adc
lods
mov
add
mov
pop
xchg
addb
push
les
test
mov
je
xor
rcl
fwait
icebp
mov
mov
sarl
leave
iret
movsl
into
or
outsl
jno
pop
stc
and
push
bound
cli
gs
cli
cltd
and
and
mov
pop
rcll
pop
add
and
sub
pop
sub
stos
inc
je
push
mov
add
fbld
xchg
movsl
jecxz
lret
mov
lret
cmp
js
lea
dec
sbb
addr16
pop
sti
xchg
lds
call
push
scas
rcll
jecxz
cwtl
clc
outsb
xor
shrl
pop
mov
subb
xchg
mov
icebp
mov
push
mov
pop
pusha
pop
mov
std
imul
inc
lea
in
adc
sbb
jbe
test
rcll
pop
jb
testl
push
in
cs
iret
pop
mov
push
jnp
pop
or
mov
and
pop
push
daa
aas
push
test
dec
lock
pop
inc
push
add
push
movsl
mov
pop
scas
xchg
mov
repnz
int
xchg
aas
hlt
push
mov
adc
ja
sbb
jp
sbb
adc
idivb
fdivrs
dec
xchg
cmpsl
fildl
pop
imul
pop
mov
mov
mov
push
xor
dec
ss
sbb
sub
dec
mov
scas
or
sub
cmp
lahf
mov
mov
push
inc
push
lods
sub
sbbb
int
fstp
jmp
xlat
jl
in
pop
pcmpgtw
mov
std
mov
dec
sbb
stos
fmull
std
or
mov
cmp
int3
mov
iret
mov
jle
repnz
fcom
pushf
test
mov
add
mov
xchg
fbld
imul
dec
mov
movsb
push
ret
or
mov
enter
aas
pushf
das
stc
imul
scas
mov
mov
mov
push
mov
cmp
cwtl
test
sub
je
sub
mov
enter
aas
push
sub
pop
popa
shll
leave
lods
jmp
ljmp
cltd
scas
aaa
jmp
pavgw
or
cmc
test
add
int3
sub
stos
mov
add
mov
js
fldt
xchg
or
fistpll
out
mov
shrb
cwtl
adc
out
test
mov
test
in
mov
ficompl
daa
inc
sub
hlt
fadds
fistpl
rcr
adc
sub
sbb
ror
mov
test
xorl
adc
mov
mov
pop
out
inc
cmpsl
scas
cwtl
cltd
jle
jnp
rorb
imul
pop
add
mov
int
int3
and
sub
add
sbbb
mov
ficoml
push
push
stos
jnp
cs
push
inc
filds
mov
ficoms
or
lea
mov
fisubrs
xor
call
insb
xchg
jbe
mov
mov
stos
cmp
cli
mov
jl
inc
mov
cmp
icebp
sahf
stos
and
aaa
sub
push
xchg
mov
ds
push
hlt
jo
sbb
pop
dec
inc
cs
icebp
xchg
sub
ret
pop
cli
ss
jle
push
scas
cmp
pop
in
jns
stos
cmp
jno
fistpl
cli
sbb
adc
or
sahf
fwait
stos
add
in
sub
cld
mov
stos
pushf
mov
cmc
pop
mov
cmpb
xchg
push
adc
inc
outsl
daa
inc
push
stos
pop
es
push
inc
repnz
fidivs
cli
push
or
cltd
sbb
dec
fdivl
or
and
xor
je
xchg
cli
iret
in
dec
sbb
test
rclb
inc
incl
xchg
aad
lods
mov
fsub
push
adc
jecxz
shrb
stos
dec
popf
hlt
inc
push
and
fcom
loopne
xlat
or
lods
pop
push
push
les
loopne
push
xchg
jns
sub
ret
popl
mov
mov
negl
fldcw
lods
mov
gs
out
adc
bound
lahf
gs
repz
leave
cmp
mov
jle
push
xchg
loop
ja
fldenv
lds
or
pop
pop
lds
out
dec
lea
js
notl
dec
fstl
pop
xchg
and
aaa
sti
inc
jb
call
addl
dec
ret
dec
dec
daa
addr16
test
add
popf
pop
faddl
inc
cmpsl
aas
xor
js
and
xchg
adcl
and
adc
rcr
jecxz
push
ret
imul
jno
sbb
in
cmp
sub
xor
sbb
subb
les
sbb
jle
scas
and
add
dec
test
icebp
cmp
std
rorl
push
adc
cmp
and
addr16
pusha
xor
inc
aad
push
stos
sbb
mov
mov
push
and
int3
xchg
in
ljmp
imul
jnp
mov
mov
push
mov
into
insb
inc
mov
out
loopne
xor
mov
aas
sub
sub
pusha
xchg
outsb
mov
xor
cmp
fidivl
add
daa
dec
loopne
scas
movsl
and
sahf
stos
push
bound
mov
push
in
mov
cmpsl
movsb
ss
sub
pop
ja
icebp
ljmp
add
push
and
aad
ffreep
cs
mov
cmp
xor
inc
mov
sbb
aaa
icebp
add
or
lcall
mov
jae
ljmp
das
mov
loope
add
es
and
lods
mov
inc
sbb
insb
cld
push
mov
and
inc
clc
andb
in
out
lds
sub
jmp
xlat
fcomp
imul
pop
int
scas
sub
cmpsl
jl
aad
rorl
pop
sbb
pop
mov
mov
bound
ljmp
pop
scas
or
pop
mov
inc
sub
stc
sub
les
addr16
aas
pop
test
fmul
push
in
repnz
cmp
add
cmp
test
dec
dec
call
push
fs
inc
xchg
jl
repnz
push
jg
add
call
mov
pop
jp
daa
jge
xchg
lahf
inc
dec
ljmp
cmp
gs
cltd
jle
adc
xchg
inc
or
mov
sbb
inc
mov
cmpsb
loop
mov
mov
arpl
push
imul
shll
test
cmpsb
or
mov
jae
inc
xchg
lock
pushf
mov
shrl
jmp
or
cmpb
lock
popf
jns
adc
imul
lods
mov
arpl
xor
hlt
cmp
mov
ret
ja
push
test
pop
mov
out
and
cli
mov
lock
xchg
mov
stos
cmp
test
andl
jno
jle
adc
mov
push
aaa
or
leave
xchg
iret
mov
imul
fdiv
scas
nop
jbe
mov
pop
fs
test
and
pop
call
push
push
and
bnd
add
jbe
mov
outsb
jne
mov
xor
xor
insb
repz
out
xor
push
inc
idivl
repz
jge
adc
push
sbb
push
xor
jmp
shrl
mov
fiaddl
ret
adc
lret
aam
pop
cwtl
push
mov
mov
or
lock
lods
jl
int
and
in
ds
or
sbb
xlat
inc
daa
out
rcpps
shll
adc
pop
mov
cmp
push
into
cmp
xchg
sbb
dec
outsb
stos
stos
mov
popf
add
push
or
out
or
dec
push
mov
sub
mov
add
stos
pop
push
mov
push
scas
jb
lea
push
pusha
pop
iret
adc
clc
mov
cmp
mov
es
scas
cmp
dec
rorb
fs
push
add
mov
mov
pop
or
insl
xor
xor
dec
test
jge
lods
stc
fstp
imul
repz
inc
and
push
push
or
mov
repz
fcoms
cmc
push
sti
adc
xchg
lret
sub
into
dec
aam
dec
rorl
and
sbb
add
pusha
in
sbbl
jnp
aam
jmp
dec
mov
pop
xchg
push
out
xlat
dec
aam
or
xchg
mov
xchg
leave
in
xchg
mov
xorb
addl
inc
jecxz
out
mov
test
jmp
xchg
fidivs
xor
mov
xchg
cli
insl
push
imul
stos
scas
lods
jnp
jp
add
push
sbb
or
jb
jp
mov
rcrb
cmp
cmp
jle
pop
pop
ss
les
test
cld
xor
es
int3
stos
dec
pop
daa
bound
push
outsb
fdivs
imul
scas
push
sbb
sbb
adc
int
jle
dec
es
dec
in
lock
stos
fsubr
sub
push
mov
xor
and
aam
mov
arpl
pusha
mov
gs
or
shlb
fidivl
mov
lds
test
ss
sbb
add
bnd
mov
dec
inc
cmp
sub
adc
pop
mov
and
mov
fsubl
sahf
inc
insb
outsb
mov
gs
mov
cmc
mov
inc
movsl
sbb
sbb
fcomps
aas
or
pop
jae
ljmp
xchg
test
aad
out
aam
pop
xchg
mov
pop
mov
nop
notb
jmp
shlb
mov
imul
rol
jbe
test
popf
test
or
rclb
pop
popa
inc
cmp
cmp
test
out
mov
adc
pushf
cli
call
jge
aam
mov
inc
adc
jnp
sbb
ret
dec
fwait
lods
adcl
inc
imul
mov
xchg
jns
repz
mov
pop
pop
std
loopne
cmpsl
cli
aad
rcll
inc
nop
in
addb
mov
es
sub
psubb
push
jns
dec
es
scas
mov
dec
leave
xchg
insl
mov
test
mov
dec
in
fwait
push
xor
dec
add
out
mov
sbb
fisubs
xchg
js
out
mov
outsl
std
imul
ss
adc
sbb
mov
repz
mov
jns
xchg
add
sub
es
or
xlat
addr16
fabs
outsl
ja
dec
jae
pop
mov
mov
int
out
mov
xchg
push
sub
imul
and
cmp
outsb
sub
mov
rcr
sbb
xchg
sub
sub
scas
lahf
mov
sti
lret
cmp
push
fimull
fsubrl
fidivs
aam
adc
add
inc
enter
lock
sub
shll
shll
inc
or
adc
adc
in
xorb
mov
or
cmp
fidivs
mov
sub
pop
sub
stos
test
jecxz
test
sbb
lret
add
mov
imul
inc
roll
sub
addb
mov
mov
jle
cld
mov
xor
jne
sbb
pop
inc
ret
ja
or
sbb
ret
loope
cmpsb
daa
xor
xor
and
fstp
sti
inc
cmc
test
addl
scas
call
push
jne
jp
jb
hlt
and
cmp
xchg
fnstenv
mov
rcr
int3
push
sub
mov
xor
add
xor
scas
xchg
fimuls
sub
lahf
inc
adc
adc
pop
addl
ret
mov
cmp
dec
jno
movsl
scas
enter
and
clc
add
cmpsb
fxch
fadds
jno
push
imul
and
jp
mov
rcrb
adc
mov
cmpsl
cmpb
add
pop
int3
cmp
mov
push
inc
bound
sidtl
add
lcall
xchg
sub
add
rcrb
adc
jmp
fcom
cmc
lods
ja
loopne
mov
push
jno
es
jb
addr16
fildll
stos
and
pop
stos
dec
dec
inc
sbb
loope
inc
xor
mov
stos
ja
out
and
xchg
xchg
inc
jno
in
insb
imul
cmp
jmp
cld
sub
xor
pop
loop
sub
or
mov
dec
pop
mov
xchg
mov
in
add
sub
xlat
int
ds
sarl
out
mov
or
xchg
scas
loopne
popf
dec
push
inc
and
mov
scas
inc
push
mov
in
xlat
and
cmp
push
push
mov
stos
add
pusha
fbstp
pop
pop
stos
fs
je
cmp
xor
stos
sbb
lds
sbb
mov
mov
das
je
xchg
sub
outsb
out
mov
dec
fwait
incb
ret
xchg
pop
in
aas
mov
popa
out
mov
inc
dec
sbb
fidivrs
out
mov
dec
push
or
cmpl
insb
jae
xchg
into
inc
push
in
out
xlat
jl
xchg
addl
mov
inc
fiadds
pop
lock
scas
lods
and
and
xchg
inc
mov
inc
rorl
ja
cmp
ret
rcll
das
rcr
aad
lds
push
cld
push
lret
ljmp
ljmp
pop
mov
pop
inc
and
enter
pop
and
jne
dec
mov
addb
and
xchg
shlb
push
in
inc
addb
mov
lock
dec
pop
fsubrs
cmpsl
lock
push
scas
push
mov
xor
rorl
xor
iret
sti
fidivrs
arpl
sub
aad
push
movsl
ss
mov
pop
aad
pushf
sbb
adcl
dec
push
xchg
orb
ret
sbb
add
mov
ja
mov
clc
sbbb
in
rclb
aaa
inc
cld
mov
cli
icebp
pop
scas
mov
fnstcw
mov
cs
jne
xor
arpl
cmpsb
icebp
push
jmp
jbe
mov
xor
adc
pop
xchg
clc
jp
push
imul
inc
pop
dec
insb
neg
lret
das
adc
xor
andb
leave
mov
mov
out
adc
fdivrl
shr
out
dec
mov
xchg
shrl
aad
push
add
inc
and
sbb
jecxz
hlt
sti
ljmp
je
add
sbbb
test
xchg
xor
xlat
enter
cmc
sub
das
lret
cmp
mov
sbb
mov
adc
or
mov
ja
fcoml
mov
fcmovne
sti
repz
push
scas
sub
lods
adc
adc
mov
cmp
or
mov
inc
cwtl
lahf
mov
outsl
dec
sub
dec
iret
ja
mov
repnz
movsl
stos
jecxz
movsb
imul
test
jae
stos
cli
push
inc
movsl
aas
loop
nop
insl
rcl
xor
int
pop
mov
sbb
lods
into
fldenv
jl
fstpt
or
ret
outsb
es
add
inc
xchg
stc
cmp
mov
es
je
jl
mov
push
and
arpl
scas
push
add
adc
adc
xchg
out
mov
jb
insl
fiadds
sub
xorb
fcoml
fcmovnb
pop
cli
in
loope
ljmp
jp
push
or
push
sbb
lock
loopne
insb
iret
dec
aaa
pop
cltd
call
push
lret
lahf
pop
es
imul
lret
mov
mov
sub
push
out
xor
mov
jmp
scas
pop
sub
pushf
jns
adc
push
xor
fwait
inc
mov
ret
mov
stc
or
pop
cli
leave
daa
ds
dec
mov
inc
loopne
lods
in
pushf
aas
movsl
cmpsl
adc
ret
add
inc
add
mov
rcrl
loope
fisubl
sbb
lret
cli
popa
xchg
push
fbstp
sub
mov
push
mov
push
push
jmp
push
arpl
xor
mov
mov
js
mov
ds
xor
daa
cmp
es
jl
sarl
push
mov
mov
xlat
in
dec
mov
add
add
cli
hlt
lods
lret
fbld
adc
test
xchg
or
shll
push
out
iret
or
jb
pop
inc
mov
push
and
pop
sub
mov
out
in
add
sbb
mov
inc
cmc
sub
sub
pop
xor
jg
adc
mov
jle
rol
sti
sbb
stos
cmp
ret
pop
push
mov
sub
and
xchg
dec
push
enter
std
out
pusha
je
push
fildll
std
jae
js
xor
sar
int
jno
pop
sbb
popf
daa
pop
jg
jns,pn
and
sbb
fdiv
int
fcoml
mov
scas
les
mov
and
pop
mov
insb
pop
or
cmp
mov
leave
xchg
lahf
mov
out
es
and
out
sahf
inc
in
dec
xchg
cltd
movsl
xchg
test
aad
xor
repz
jno
and
hlt
rolb
out
dec
cltd
sub
leave
or
mov
dec
mov
outsb
add
data16
xchg
dec
mov
adc
cmpsb
and
mov
outsb
add
inc
mov
pop
xchg
rorl
push
push
mov
enter
dec
and
xchg
mov
imul
mov
xchg
xchg
dec
mov
icebp
cmpl
xchg
sub
and
mov
jae
mov
pop
cmp
arpl
fisubs
and
test
xor
scas
sub
in
lret
jg
pop
sub
xor
adc
lods
call
aad
mov
daa
cmpl
lret
push
adc
dec
ljmp
dec
shrl
inc
bound
xchg
out
pop
test
xor
iret
dec
fldcw
pop
mov
add
push
scas
pop
ret
shr
dec
adc
fsub
pop
xor
xchg
fdivrl
loope
in
sub
cmc
pxor
push
xlat
mov
xor
add
or
imul
js
mov
mov
pushf
aaa
push
push
lea
jae
cmp
sub
cmp
pop
jno
mov
in
outsl
ficoms
subb
inc
or
or
adc
jns
jbe
test
add
js
popf
dec
idivb
xchg
outsb
sti
data16
lds
in
dec
xchg
mov
push
or
jg
jnp
cmc
pop
push
mov
sub
std
pusha
mov
addr16
in
ds
or
push
clc
lea
push
jecxz
stos
ljmp
push
lods
ds
push
pop
dec
aam
sub
push
mov
mov
mov
sbb
arpl
les
or
out
sub
mov
pop
mov
movsb
and
ret
lret
in
push
ret
movsl
sub
mov
cmp
mov
cmpsl
sbb
cltd
orb
or
pusha
ja
rcrb
pop
push
aam
lcall
inc
and
push
mov
mov
fidivl
int3
jmp
xor
pusha
add
dec
sbb
jecxz
popa
xor
xor
clc
testl
shrl
sbb
jge
in
stos
mov
sbb
mov
mov
scas
mov
es
mov
addl
push
pop
sub
arpl
xchg
cltd
push
and
out
cmpsb
lcall
les
jo
outsl
mov
mov
subl
ja
andb
divb
dec
and
rol
adc
sarb
mov
mov
aam
adc
hlt
cmp
testl
pop
shll
adc
and
sbb
pop
pop
mov
adc
dec
outsl
les
or
mov
pop
cs
int
push
lods
out
add
test
je
ljmp
sbb
xchg
int
xor
jecxz
xor
jle
xchg
dec
imul
inc
stos
and
fisttps
loop
divl
sahf
or
aam
and
push
pop
stos
cmp
xor
mov
and
ja
in
popf
xor
movsb
and
pop
sbb
into
mov
sbb
outsl
popa
jg
jecxz
sub
pop
dec
fidivrl
mov
jno
sub
lcall
loop
test
dec
pop
or
loope
jecxz
push
out
mov
sbb
pop
jo
sub
push
pop
negb
pop
rcr
cmc
std
cmpsb
test
in
jmp
fidivs
jmp
loopne
dec
stos
in
fs
cli
xor
xchg
dec
cmp
jle
outsl
lock
daa
shrl
add
sahf
push
xchg
test
pop
pop
jae
out
mull
xchg
push
sbb
xor
clc
out
adc
ja
lahf
rcll
or
scas
push
sti
jle
xlat
mov
out
shl
fdivrs
fldt
gs
mov
xor
jg
dec
jno
rorb
hlt
rcr
jmp
mov
in
xor
int3
rcrl
andb
cs
push
rorl
xchg
or
and
adc
xchg
cwtl
jge
jmp
sub
sbb
fstl
cwtl
bound
mov
cli
loop
ja
cmp
jle
das
mov
test
or
cs
jb
aad
out
daa
cld
mov
popl
cmpsl
cli
loop
push
inc
jle
shll
mov
popa
xchg
adc
cmp
adc
adc
cmp
jo
and
cwtl
mov
pop
push
pop
or
mov
sub
repnz
sbb
dec
add
nop
mov
ja
inc
subl
sbb
aad
adc
xor
mov
lea
insb
stc
add
sbb
add
lds
test
out
imul
mov
push
fs
adc
sub
enter
movsb
test
cltd
adc
pop
or
es
repz
loope
fistps
jp
push
push
jp
mov
dec
and
xchg
jp
cmp
outsb
stc
das
dec
int3
pushf
add
jmp
xchg
scas
mov
pop
mov
movsl
inc
xchg
hlt
repz
mov
cmp
sbb
cmp
xorps
push
js
loopne
xchg
cmc
call
leave
ja
lret
movsl
data16
sahf
xchg
push
pop
aad
add
and
sub
or
inc
add
hlt
jecxz
ds
dec
es
dec
dec
pop
cmpsb
pop
pop
push
fwait
xchg
jnp
xor
cmp
push
mov
xorl
daa
xchg
adc
pop
add
cmp
and
lock
adc
cmpsl
or
xadd
inc
sbb
movsb
ljmp
jmp
adc
xchg
es
imul
sbb
mov
repnz
mov
mov
loop
in
adc
pop
inc
jne
test
and
mov
sbb
cs
dec
fidivrl
mov
enter
add
dec
gs
negl
in
cmpsb
pushf
out
out
stc
fxsave
ret
ret
jb
lahf
test
inc
mov
inc
jbe
nop
in
xor
jne
jb
mov
xor
xchg
repz
test
mov
cmpsb
call
push
in
ja
mov
js
nop
jp
stc
mov
pushl
push
push
int
push
adcb
add
cmpsl
ds
fxtract
movsb
dec
stc
dec
push
mov
sbb
xor
lcall
jl
loop
lea
in
aad
daa
imul
dec
pop
aam
xor
test
lcall
mov
adc
cltd
rcl
cmp
sub
inc
cmpsb
sbb
mov
push
test
adc
sub
mov
icebp
xlat
pusha
add
dec
leave
movsb
jb
rcrl
pop
cmpsb
cmp
inc
pop
fs
stos
int3
adc
stos
mov
iret
push
imul
fisttpl
mov
xor
ljmp
js
or
fsin
jg
out
pop
and
pop
out
aad
stos
lock
mov
mov
mov
out
push
and
jle
pop
push
outsl
pop
mov
lds
hlt
cmc
lods
mov
xlat
lods
mov
adc
sub
mov
jle
outsb
sub
or
jge
jp
inc
sbb
stc
jbe
mov
enter
xchg
jmp
addb
mov
push
lahf
aaa
es
inc
cmc
inc
pop
jg
adc
and
mov
pop
bswap
mov
push
imul
push
lcall
mov
mov
std
pop
push
leave
mov
xchg
cmc
insb
or
cmpl
xor
push
ss
sarl
push
add
add
pop
sbb
xchg
pop
cmp
mov
lahf
sub
add
jg
pop
sbb
xor
testl
sbb
and
pop
mov
sub
jmp
sbbl
push
js
out
push
imul
mov
sbb
cmp
in
int3
lods
das
xchg
add
mov
data16
mov
dec
data16
mov
idivl
pop
inc
dec
clc
outsb
pop
movsb
out
cld
rcrb
xor
jmp
cmp
bound
pop
enter
cmp
mov
lahf
fldcw
xchg
pop
inc
rclb
loope
sub
mov
mov
add
sbbl
rclb
add
setae
call
mov
gs
mov
test
dec
xchg
jne
movsb
or
xchg
or
jmp
pop
icebp
add
pop
loop
pusha
fisubl
cmp
or
xchg
lret
dec
stos
cs
pop
cltd
jg
dec
mov
inc
fidivrs
fwait
inc
mov
lahf
push
dec
mov
gs
adc
cld
pop
movsb
bnd
test
mov
dec
dec
xchg
enter
sbb
subb
fistpll
inc
push
xor
das
pop
scas
leave
xchg
push
out
ret
cmp
and
mov
stos
mov
pop
movsl
add
les
xchg
imul
pop
sbb
dec
sti
dec
je
jo
inc
call
rcrl
rcll
cmp
pop
jecxz
int3
mov
jns
xor
scas
mov
fisubrs
lret
mov
jmp
or
pop
sub
stos
lcall
addr16
adc
dec
nopl
push
pop
mov
add
cli
iret
adcl
sub
cwtl
add
repz
jmp
lret
imul
cwtl
pop
jle
push
jae
pushl
pop
testb
jecxz
subl
ror
insb
xchg
std
inc
call
push
push
mov
push
mov
xchg
test
jne
jo
loope
int
aaa
call
add
cmp
test
cwtl
sub
jns
gs
mov
mov
sbb
xchg
in
adc
and
lret
outsb
and
clc
mov
insl
mov
cld
fldenv
aas
fcoml
mov
xor
insb
test
sub
lods
xchg
data16
insb
xchg
mov
pop
data16
inc
enter
sar
jp
push
inc
cwtl
or
push
adc
shlb
das
pop
pop
repz
jno
cmc
cmp
lods
mov
fwait
les
pushl
sahf
int3
std
stos
enter
and
sub
mov
neg
fcomi
and
push
dec
cmpsb
xchg
pop
and
inc
xchg
testl
inc
ret
fdivrs
pop
cli
adc
jge
mov
mov
pop
pop
rorb
sarl
pop
ret
xchg
push
imul
sbb
sbb
jg
add
dec
xchg
push
lret
xchg
decl
testb
mov
inc
inc
out
jns
mov
shll
mov
and
gs
lcall
insl
adc
out
stos
fnsave
cmp
jle
and
in
repnz
ret
mov
shlb
shll
dec
or
lcall
cmp
jmp
xor
mov
mov
clc
xor
add
push
jno
mov
dec
sbb
mov
lcall
dec
cmc
cs
mov
das
call
push
fnstcw
add
inc
cwtl
ljmp
mov
jne
cli
pop
dec
mov
and
ret
xchg
in
sub
mov
into
in
dec
aaa
rcrb
shll
sub
les
jmp
fstpt
jno
cmc
ljmp
aam
mov
icebp
les
mov
dec
sti
add
aam
dec
enter
push
aaa
ficoms
nop
jbe
scas
mov
rcll
in
in
shll
test
sub
pop
mov
subb
mov
push
jle
fstl
subl
dec
mov
inc
ja
push
and
sub
mov
insl
inc
pop
test
pop
mov
adc
repnz
pop
aas
aad
sub
roll
inc
in
ds
cmp
mov
jmp
in
xchg
dec
test
das
ret
xor
popf
pushf
dec
aad
js
fwait
mov
arpl
inc
inc
insb
push
rcrl
push
cmp
pop
stos
sahf
cmp
push
jl
enter
js
pop
mov
pop
in
sbb
arpl
push
movsb
pop
popf
outsl
cmpsl
lds
stos
mov
movsl
outsl
fsts
add
cmp
xchg
fs
movsb
xchg
add
test
outsl
push
xchg
xchg
incl
push
fbld
pop
lods
fxch
xor
push
and
test
dec
mov
scas
or
mov
cmp
out
mov
in
xor
cmpsb
es
in
add
sbb
jl
xchg
xor
sti
pop
xor
pop
jge
in
mov
push
xchg
sar
je
pop
mov
pop
aad
inc
jle
fnstenv
ret
mov
mov
dec
inc
insb
adc
shll
dec
jge
or
adc
call
xchg
cld
pop
outsl
and
inc
or
sub
mov
sub
cwtl
xchg
cmc
popf
pop
and
cmovle
out
nop
push
cmp
push
js
cmp
inc
loopne
sbb
adc
cmpsl
sub
fprem1
push
mov
mov
mov
adc
mov
pusha
aad
jae
cmp
dec
out
sub
pop
sub
sbb
add
sub
xor
sbb
out
add
jl
sbb
cmp
cltd
sti
ret
shlb
pushf
data16
mov
and
sbb
xchg
push
imul
dec
add
jo
test
dec
cmp
add
test
mov
push
pop
in
cmp
sbb
in
int
shr
push
mov
addr16
loop
adc
dec
push
jns
stos
xchg
movb
dec
push
cltd
push
xor
mov
sbb
popf
cmp
add
pop
sub
lret
fnsetpm(287
jno
fld
xchg
xchg
lea
jbe
fdiv
data16
add
dec
out
mov
icebp
cmp
dec
lahf
cmc
nop
cwtl
xor
lds
jae
mov
sbb
adc
jns
inc
jo
or
in
out
shrb
mov
movsb
jae
inc
jmp
xchg
xchg
loop
out
popf
xchg
imul
testb
cmp
inc
pusha
add
pop
sub
sbbl
pushf
shll
int3
push
std
mov
add
and
pop
fmuls
or
std
frstor
dec
or
leave
inc
rcrb
bound
sti
mov
mov
aas
sbb
inc
xchg
iret
out
xor
jo
pop
insb
xchg
sbb
enter
mov
dec
hlt
clc
cmp
sbb
addr16
shll
or
ss
adc
mov
or
sbb
jge
mov
mov
lods
or
test
pusha
je
lret
cs
adc
mov
sub
sub
add
mov
bound
xlat
push
cld
mov
es
add
mov
lods
into
fcoml
cmp
mov
loopne
out
icebp
mov
sub
push
and
loop
aaa
cmp
into
pushl
and
andb
xlat
daa
jle
mov
inc
dec
rorb
adc
sbb
sbb
jl
xlat
fimull
pop
cwtl
dec
dec
dec
movsl
xor
xchg
cmc
fsub
cltd
adc
sub
cli
sti
jo
or
jge
dec
dec
push
mov
outsb
xchg
or
and
push
jmp
loop
test
cmp
mov
sti
jge
inc
push
orl
xor
xchg
lcall
push
push
pop
into
cmp
xchg
leave
jge
or
sub
push
outsb
mov
inc
adc
aad
pushf
int
cmpsb
jle
ja
mov
mov
loop
iret
je
sbb
mov
mov
fisubs
rorl
in
mov
insl
bound
pop
mov
inc
lock
mov
sti
das
daa
lock
lock
jecxz
orl
jmp
push
pop
mov
sub
aaa
ficompl
fistps
in
cwtl
iret
push
push
adc
inc
jne
add
mov
rcl
inc
jle
dec
mov
push
add
test
loop
push
sub
sub
lds
mov
das
xor
mov
lret
je
mov
mov
daa
into
out
cmc
sub
mull
push
lcall
fistl
or
cs
shrb
push
pop
dec
mov
adc
out
icebp
movsb
or
stc
cli
or
cld
push
mov
cmp
fidivl
insl
test
in
faddl
ljmp
in
xor
adc
shrb
inc
sti
jbe
add
ret
sbb
ss
pop
mov
out
lds
push
add
into
cmp
dec
add
adc
mov
outsl
add
push
and
bound
out
add
mov
cld
leave
jb
pop
test
push
sbb
shr
pop
jne
jns
test
sub
clc
sbb
inc
or
movsl
mov
out
inc
cmc
pop
or
jno
sub
daa
jmp
add
jae
mov
bound
jnp
cmp
mov
mulb
bound
or
cmc
cmp
push
lret
stos
je
out
ja
push
rcll
xchg
push
shrb
cmp
roll
sub
stos
hlt
mov
sbb
xchg
pop
call
cmp
sub
xchg
adc
dec
stos
jl
xor
mov
mov
and
sub
and
pop
out
das
movsb
fbld
pop
pop
jle
add
fs
or
mov
inc
nop
xchg
dec
cwtl
outsl
popf
jecxz
adc
pusha
shrl
and
divb
pop
cwtl
or
iret
clc
and
add
mov
add
cwtl
jge
inc
lock
pop
xchg
inc
jno
xor
mov
jo
fadd
cmp
sbb
mov
adc
enter
mov
orb
in
cmp
push
andb
xor
and
mov
insl
fsubrs
sub
lock
or
call
mov
js
sub
sub
addr16
dec
shl
push
jg
pop
movb
jb
pushf
cmp
xchg
fisubrs
jp
into
sbb
lock
sub
xor
push
pusha
out
and
es
aas
mov
jnp
xor
cli
pop
dec
stos
inc
into
sub
out
test
xchg
pop
jae
adc
sbb
ficoml
push
add
and
lea
movsl
js
push
xchg
adc
icebp
pop
xchg
xor
fnstenv
cmp
cmpsl
push
call
loop
push
inc
call
add
test
push
outsb
mov
shlb
gs
xchg
mov
and
and
stos
and
sbbb
sbb
cltd
cs
xor
xchg
out
call
stos
xchg
and
stos
lds
sbb
scas
cmp
lods
icebp
aad
jge
xchg
inc
add
bound
mov
push
xchg
inc
inc
adc
push
pop
cmp
addr16
push
outsl
mov
into
xor
repz
out
or
aad
push
mov
es
and
or
fldt
adc
stos
inc
jmp
mov
movsb
imul
cwtl
cmp
dec
rol
cmp
lret
push
jne
sub
pop
mov
jmp
cmpsb
cmp
pop
xor
shll
sub
jg
dec
int3
aaa
testl
in
sub
outsb
adc
fists
mov
fcompl
out
incl
or
sti
jns
or
cmp
fbstp
sbb
dec
inc
sub
adc
jnp
sub
stos
xlat
sub
sub
jb
pop
into
notb
test
std
adc
fistpll
insl
movsl
cmp
pop
xor
mov
sub
dec
mov
fisubrl
mov
xor
pushf
scas
add
mov
into
mov
cmc
lea
insb
das
mov
dec
mov
push
cmpsb
cli
enter
dec
mov
ficoms
xor
clc
dec
fcomi
andb
movsl
sbb
int3
sub
or
arpl
test
dec
rcll
xor
jle
movsl
xchg
adc
das
adc
bound
movsb
xor
rcrl
sub
fnsave
inc
test
in
sbb
fs
push
or
xorb
dec
leave
jno
jno
or
fsub
clc
cli
into
jg
jg
pop
fistl
gs
andl
pmulhw
jmp
fsubs
sbb
loope
inc
mov
stos
pop
lret
loopne
test
in
jbe
mov
scas
pop
mov
mov
jno
cmp
push
fsubrs
fisubrl
push
mov
mov
push
pushf
insb
dec
dec
popf
push
jmp
enter
dec
sbb
mov
shll
ret
int3
adc
push
xchg
outsb
push
fwait
imul
addr16
cmp
push
mov
int
sbb
jg
fstpl
loopne
sbb
call
cmpsb
icebp
stos
iret
repz
cli
iret
out
mov
nop
sbbb
clc
adcl
fmuls
mov
push
out
cmp
cmp
stos
movsl
mov
iret
rclb
jbe
or
inc
push
fs
jle
shll
adc
mov
add
sbb
or
inc
adc
jnp
gs
mov
and
das
leave
mov
or
and
inc
dec
in
mov
pop
pop
popa
pop
insb
das
sbb
or
xchg
xchg
xchg
mov
pusha
cwtl
movsb
mov
mov
test
mov
push
xor
loope
inc
inc
pop
pop
pop
leave
jg
cmp
out
sub
inc
or
mov
xchg
adc
aad
popa
aaa
dec
in
or
in
inc
aam
push
xchg
push
mov
cmp
push
mov
jle
roll
jp
push
out
fldl
sub
pushf
movsb
cwtl
aam
push
rcll
shll
xchg
sti
mov
mov
lea
and
sub
mov
repz
and
clc
or
adc
jno
and
mov
cmc
and
xor
lea
insl
in
push
pop
mov
mov
xchg
pop
ljmp
lods
cltd
repnz
xor
dec
jmp
mov
ret
leave
mov
xchg
out
stc
add
ficompl
lods
lcall
cwtl
and
jb
push
sbb
add
std
pop
sbb
add
icebp
lds
out
lahf
mov
das
rcrb
mov
pushl
repnz
push
divb
jne
pop
lds
sbb
jo
jae
shlb
das
inc
xchg
mov
sahf
push
std
andl
push
movl
adc
mov
push
insb
lods
clc
jl
loope
orl
and
pop
and
adc
or
lret
pop
cmp
jnp
xchg
cmc
js
adc
dec
adc
xor
pop
rcr
loop
scas
ljmp
cld
out
pop
jb
mov
jge
add
adc
cltd
push
iret
xor
dec
pop
data16
loopne
addr16
scas
sbb
sub
cmp
out
sarl
pushf
mov
push
bound
xor
shlb
ljmp
scas
stos
mov
xchg
test
dec
arpl
ja
pushf
inc
pusha
adc
test
adc
lret
push
and
xchg
jl
es
mov
mov
jg
lock
test
push
shll
fnstenv
xor
add
repz
cs
inc
xchg
adc
sbbl
mul
enter
sub
and
jp
mov
movsb
sbbb
test
lahf
cltd
out
pop
push
fwait
inc
and
cltd
mov
add
sbb
mov
leave
xchg
sub
sub
adc
mov
iret
xchg
jne
popf
movsb
mov
mov
sub
push
in
mull
iret
pop
popl
inc
leave
cmp
add
push
mov
xrelease
jle
daa
out
pop
xor
inc
jge
xlat
repz
and
adc
jbe
xchg
rcrl
icebp
sbb
fwait
xchg
roll
bound
sti
mov
and
dec
mov
rcr
sub
or
or
and
cmp
mov
push
and
jmp
jge
loope
aaa
and
das
out
ret
push
sub
mov
test
jb
int3
push
or
cs
ret
loopne
xor
xchg
imul
repnz
jl
mov
dec
and
jno
pop
pop
roll
lcall
lods
push
addb
or
xor
dec
stc
inc
scas
in
xchg
outsl
or
dec
movsb
mov
adc
sub
sbb
sub
xlat
cli
dec
cs
xchg
xor
mov
pop
xor
iret
je
dec
mov
fdivrl
lret
or
push
scas
mov
mov
or
stc
mov
adc
sbbb
repz
bnd
shrb
mov
mov
cs
pop
inc
pop
sub
add
fwait
sbb
pop
repz
lahf
cmpb
jno
sbb
mov
and
lods
mov
inc
jmp
nop
sub
and
mov
mov
pop
lret
movsl
push
inc
scas
cmp
loop
mov
add
fimuls
xchg
fnstcw
dec
mov
sub
push
cmpsb
xchg
test
fimull
sbb
sarb
loopne
sti
fdivrl
add
lods
test
js
jns
clc
sub
adc
mov
imul
jb
popa
imul
aad
test
movl
stos
addr16
mov
jae
cmpb
xchg
insb
jns
and
shl
jle
sbb
fs
xor
popf
adc
mov
pop
dec
xchg
mov
xchg
notb
jb
push
xchg
cltd
cwtl
mov
cmp
mov
stc
test
pop
mov
cmpsl
inc
imul
dec
jbe
sub
mov
adc
adc
pop
shl
aas
cs
les
pushl
xchg
daa
bound
push
cmpl
jne
lcall
cmpb
jmp
ds
fcomip
xor
dec
mov
stc
mov
jae
int3
cmp
fidivl
jb
dec
int
nop
int3
out
stc
iret
adcb
sub
nop
jno
push
sbb
jne
mov
icebp
into
cs
aas
mov
in
jg
mov
and
ret
aad
push
push
add
pop
fcoms
loope
das
or
imull
popl
cmp
clc
adc
nop
dec
outsl
cmc
mov
pop
repnz
es
int
out
ret
sub
sub
cmp
es
jg
fxch
and
xchg
pop
ret
push
enter
push
inc
mov
jg
and
fisttps
push
mov
cld
xor
jg
iret
sbb
push
pop
mov
pop
testb
xor
cmp
pop
rclb
push
sub
dec
into
cmp
push
shlb
imul
icebp
and
imul
inc
cmp
fdivl
and
out
cmc
mov
fnsave
clc
mov
jl
roll
and
pop
and
jae
jecxz
fnstsw
pop
inc
inc
leave
cwtl
cmp
add
repz
inc
inc
dec
ds
push
jnp
rol
jno
dec
cmp
popa
out
in
cmc
and
cmc
das
dec
sub
cmp
movsb
xor
push
xor
in
aad
imul
clc
fsubrl
fwait
jmp
jl
lods
cmc
repnz
mov
mov
mov
aad
mov
or
out
lds
shll
shlb
sub
jb
ficoms
push
xchg
testb
jb
addr16
dec
in
or
adc
inc
aad
inc
test
int3
pop
ss
sbb
xchg
adc
xchg
xor
jbe
cli
aad
rcr
popa
mov
xor
mov
ja
ja
push
push
popa
gs
mov
ljmp
mov
inc
jmp
mov
sub
or
jmp
je
ror
xchg
sub
inc
aaa
cmp
and
inc
pop
stc
call
dec
leave
fdivrl
aas
dec
mov
repz
mov
fsub
mov
mov
or
lcall
pop
lods
loop
jmp
lahf
xchg
sbb
sub
jbe
divl
mov
repnz
ret
leave
test
push
adc
in
ljmp
xor
mov
repnz
stc
roll
test
or
dec
xchg
into
push
xor
ja
push
rcrb
inc
inc
dec
lds
mov
imul
sub
mov
dec
inc
adc
xor
fisttps
dec
inc
lea
inc
pushf
test
adc
pop
xor
sbb
das
and
sub
les
sub
lahf
sub
sbb
push
popf
andl
arpl
cmp
adc
orb
and
mov
aaa
pop
aam
inc
aad
ss
mov
dec
sahf
push
lcall
ja
pop
test
or
lcall
rcll
xor
mov
sbb
sub
jno
xor
add
add
xchg
pop
cmpsb
jp
jbe
test
les
cld
sbb
lds
mov
xor
enter
mov
push
mov
outsb
xchg
inc
xor
daa
iret
stos
jl
movsb
lret
imul
xor
sub
mov
push
add
shll
call
fcomi
mov
daa
adc
test
fdivrl
xor
mov
dec
lahf
ja
xchg
sub
and
jge
or
jne
jecxz
inc
fmull
call
sbb
out
push
adc
and
adc
jmp
sbb
int
test
dec
dec
cwtl
sbb
sub
jb
pop
pop
loop
push
aaa
aas
jp
notb
mov
jb
in
dec
lret
xor
lds
icebp
sub
shll
mov
push
inc
cmpl
mov
in
xor
clc
adc
cmp
mov
in
int
sub
xor
add
cmp
pop
pop
sub
int
pop
test
pop
xchg
insl
xorb
repnz
test
bound
mov
int
xor
mul
nop
cmpb
cmpsb
pop
mov
pop
mov
insl
lods
popf
sub
inc
loop
push
or
inc
push
mov
mov
hlt
das
jno
fimuls
adc
imul
dec
xor
jno
inc
hlt
mov
fiadds
mov
xchg
and
imul
fxsave
imul
xlat
aaa
popa
xor
lods
jp
dec
test
push
xchg
sbb
mov
outsb
aam
mov
xchg
jp
frstor
xchg
in
dec
daa
lods
push
add
idivl
pop
xchg
ret
sub
idivb
addr16
rcll
xchg
sbb
xchg
sbbb
inc
jb
dec
sbb
jle
jno
pusha
ljmp
push
loopne
aad
xlat
xchg
sbbb
jle
inc
pop
notb
into
iret
cmp
push
add
pop
push
das
pop
and
xchg
push
push
repnz
xchg
movsl
pop
mov
sub
add
mov
jae
les
dec
clc
daa
jo
std
inc
pop
pop
in
jg
xchg
mov
jmp
outsb
dec
pusha
std
scas
ret
push
ficompl
and
icebp
and
lock
lret
add
sub
mov
ficoml
cld
lahf
stos
fists
xchg
pop
adc
xor
flds
and
aad
pusha
xchg
aaa
leave
aam
loope
push
and
movsl
imul
inc
ss
sub
or
add
cmc
mov
lret
pop
popf
mov
add
inc
push
fcoml
push
push
into
mov
in
push
rsqrtps
add
jmp
cmp
neg
cmp
cmp
fs
push
cmp
pop
mov
mov
stc
cmc
in
std
and
mov
mov
mov
dec
push
aad
mov
dec
jne
mov
add
ficoms
sub
mov
jns
push
idivl
jne
stc
js
push
dec
nop
cwtl
sbb
sti
aad
leave
mov
loope
pop
push
mov
fwait
cmc
push
pop
imul
icebp
xor
inc
cmp
sbb
jb
mov
jmp
dec
adc
mov
repnz
out
mov
cmp
icebp
stos
rolb
outsb
inc
lods
mov
in
mov
movsb
aam
cltd
xchg
test
ljmp
sbb
add
mov
sbb
cli
mov
xor
xor
jns
loopne
fimull
xor
ss
pushf
push
sub
mov
xorl
lods
aas
xchg
push
sub
inc
xchg
adc
inc
xchg
out
sub
xor
dec
aam
xor
fwait
adc
arpl
or
or
loop
clc
ja
add
pop
pop
in
std
fldl
nop
xchg
push
pop
mov
cmovae
dec
data16
pop
mov
incl
dec
and
jle
cmc
movsl
test
lea
jp
rorb
test
jg
js
loopne
popf
push
fs
and
sti
loopne
std
pop
lods
popa
push
dec
mov
cmpsl
xor
les
stos
arpl
mov
inc
pop
add
and
pop
dec
cld
fisttpll
movl
inc
cmp
pop
fptan
mov
je
mov
rolb
out
push
mov
fstps
sbb
mov
movd
jge
push
dec
ss
or
fidivl
fwait
loope
int3
iret
pushf
lret
dec
stos
push
ret
pop
inc
jmp
insl
sar
xor
pushf
sbb
or
cmp
add
adc
imul
adc
icebp
pop
repz
out
js
push
cmp
loopne
fcompl
repnz
mov
testl
adc
mov
fs
fimull
push
jo
xorb
mov
pop
lcall
mov
push
jnp
repnz
jmp
cmp
dec
push
jne
inc
lock
adc
hlt
pop
insb
mov
mov
cli
push
xchg
and
mov
popa
pop
mov
js
lahf
sbb
dec
or
mov
cmpsb
push
fs
nop
adc
test
hlt
aad
sub
xchg
push
push
adc
and
enter
int3
adc
stc
aaa
xor
mov
stos
jl
aas
push
and
jbe
stos
add
jo
fildl
push
pop
loopne
sahf
out
ljmp
inc
icebp
jmp
pop
in
and
insb
xchg
repnz
xchg
leave
sub
sub
jbe
cmp
test
or
xchg
int
mov
out
stc
aam
mov
imul
and
jno
lods
fadds
xchg
cmp
ss
dec
sub
cmp
data16
or
add
fcoml
sti
fcoml
and
iret
arpl
stos
enter
push
mov
adc
pop
ljmp
adc
les
jge
jle
push
insl
int
jne
add
xor
xchg
arpl
mov
or
mov
mov
or
lahf
int3
fcmovbe
adc
dec
lret
pop
jb
andl
add
mov
cmpsb
int
push
mov
leave
negl
jp
mov
mov
ret
jge
adc
lcall
enter
test
fcmovne
out
xchg
inc
jnp,pn
clc
dec
ficompl
fisubrs
in
dec
cwtl
mov
jmp
cmp
fs
sub
sub
gs
aaa
cli
js
cli
mov
popl
or
stos
in
fs
jo
push
add
xchg
sahf
inc
dec
dec
dec
cmp
je
cmpsb
inc
test
fs
enter
or
mov
mov
call
lds
mov
stos
insb
inc
test
imul
fmul
mov
bound
mov
adc
mov
inc
or
lret
jmp
cmp
xor
aam
movsb
test
pop
xchg
sub
sub
xlat
insb
or
add
jae
jmp
pop
arpl
or
idivb
dec
mov
imul
andl
fwait
sub
in
jge
shlb
orl
push
aas
xchg
mov
jb
aam
xor
stos
adc
xchg
pop
pop
fwait
scas
neg
test
mov
xor
add
push
sti
push
pop
and
jge
dec
fistps
add
fcoms
fldenv
cmpb
hlt
out
imul
ficoms
int
cwtl
pop
lods
xchg
sti
mov
jb
xor
ret
jns
and
out
stc
or
push
and
clc
xchg
adc
mov
jl
or
jmp
xchg
pop
hlt
push
push
scas
cmpl
jns
out
testl
xlat
sbb
pushf
fs
in
cmp
jecxz
push
iret
icebp
jp
cli
mov
mov
out
pop
sbb
int3
lods
fldenv
arpl
mov
in
mov
popf
pop
repz
add
and
xchg
repnz
shll
inc
addb
cmp
push
bound
cmp
and
divl
adc
mov
mov
aas
aaa
int3
aad
cmpsl
sarl
std
data16
add
ss
mov
mov
sbb
xor
sbb
jmp
popf
cmpsl
shrl
dec
adc
ret
mov
xor
gs
pop
outsb
outsb
push
adc
jmp
push
shr
mov
jbe
sbb
push
push
inc
or
jl
xor
insl
imul
inc
testl
test
xchg
push
scas
mov
mulb
icebp
sub
dec
inc
and
iret
ss
xchg
xor
lret
cmpsb
jg
inc
shrl
cs
negb
pop
adc
jae
lea
sub
test
push
std
insl
cmc
imul
repz
pop
mov
gs
aam
movsl
sbb
ret
pop
inc
jno
xlat
aad
add
mov
dec
leave
jb
push
or
mov
mov
in
sub
add
repz
push
fisubrl
push
and
sub
imul
mov
cltd
or
fs
mov
and
xchg
sub
adc
xchg
jmp
jmp
shrl
jmp
mov
inc
dec
mul
sbb
xor
out
outsb
cmpsl
xchg
cmp
and
popa
leave
lea
icebp
pusha
cmp
or
inc
adc
lock
pop
mov
mov
outsb
jb
cmpsl
adc
mov
mov
xor
cmpsl
jg
addb
dec
mov
hlt
mov
mov
mov
xchg
fsub
mov
sub
jbe
sbb
shlb
fwait
dec
mov
popf
or
mov
das
dec
outsl
mov
dec
pop
movsl
adc
sti
ds
sbb
addr16
cld
push
push
dec
pop
insl
popf
pop
pushl
dec
adc
fcmovne
ror
pop
mov
sub
iret
cmpsl
cltd
pop
into
xchg
or
aad
lock
insl
push
sbb
cld
add
adc
jne
int
rolb
stc
push
inc
and
jge
mov
mov
mov
push
adc
in
clc
mov
and
lahf
icebp
stos
daa
ss
push
push
lods
adc
daa
cmp
push
int3
jne
imul
xlat
or
mov
popa
xor
xor
fistpll
pusha
xor
mov
xchg
outsb
dec
xchg
insb
push
negb
lea
adc
xchg
pop
inc
adc
lock
or
scas
push
aad
je
mov
rolb
movsl
in
loop
mov
popf
jae
dec
aaa
subl
xor
out
fstl
sbb
jle
ljmp
outsb
push
pushf
fldt
adc
out
cmp
mov
xor
loop
cwtl
imul
les
xchg
std
mov
loopne
push
out
mov
mov
xchg
fxch
cmc
fisubl
sbb
pop
shrl
cwtd
leave
jnp
leave
test
jno
mov
push
lahf
repz
or
testb
cmc
popf
xchg
cmp
imul
xchg
xlat
pop
jne
sbb
mov
not
jnp
mov
into
add
xor
mov
xchg
loope
jno
dec
and
movsb
jle
ljmp
in
aam
fwait
mov
arpl
inc
fistps
or
sbb
mov
mov
roll
sub
les
xor
jg
xchg
les
out
outsl
jl
lcall
loopne
fisubl
xchg
xor
or
and
out
movsb
push
mov
sbb
adc
sub
int3
nop
push
in
sbb
xchg
mov
arpl
adc
jl
inc
std
pop
inc
sub
sub
cmp
push
adc
xor
push
jae
insl
push
jne
push
xchg
cwtl
stos
pop
fistpll
xor
mov
xchg
cwtl
or
xchg
xlat
roll
inc
scas
ja
pushl
push
adc
mov
daa
shlb
mov
xor
repz
inc
dec
repnz
in
cmpsb
rorl
xor
dec
jl
push
std
loope
jecxz
in
mov
adc
fsubs
adc
jp
cmp
cmpsb
or
mov
sbb
jb
pusha
xchg
test
or
scas
test
mov
mov
pop
out
xor
out
fldln2
lea
jg
push
fs
nop
and
scas
mov
in
add
loope
loopne
test
in
fnsave
stc
cmp
rcl
ud1
into
call
adc
pop
add
test
cmp
mov
rorl
and
jbe
sub
lcall
scas
xchg
jne
pop
iret
fmul
shll
push
inc
adc
add
sub
inc
or
xchg
dec
in
dec
icebp
aad
xor
fnsave
cmc
xchg
daa
push
cmp
adc
inc
aaa
pushf
shll
popf
sarb
jmp
jg
ljmp
xlat
nop
cmp
pop
dec
xor
xor
xchg
fwait
pop
cmp
mov
sub
sub
ret
subb
clc
jae
and
xlat
push
mov
lahf
xchg
repz
pop
mov
xchg
pop
push
mov
xchg
or
or
sbb
inc
mov
rcll
xor
loopne
inc
test
andl
insl
jno
sub
xchg
jo
jns
loope
lods
inc
insl
repnz
lods
xchg
add
data16
inc
shlb
lods
rorl
sarl
aaa
leave
icebp
or
int3
ret
fnsave
cmp
sub
bound
cmpsb
mov
sub
jne
jo
add
insl
cmp
dec
jb
xchg
cmp
or
xchg
test
movsb
outsl
mov
insb
fwait
dec
data16
xlat
stc
daa
iret
pop
ja
std
inc
push
pusha
lahf
xor
aad
add
inc
sbb
sbb
jae
sub
nop
or
jbe
pop
sub
pop
je
mov
mov
jbe
mov
es
xchg
sub
cld
bound
dec
nop
cmp
pop
shlb
lret
ja
mov
pop
adcb
adc
xor
push
pop
nop
in
jno
mov
roll
insb
and
mov
and
xchg
iret
jg
sub
insb
mov
data16
fstpl
and
push
aas
sbb
lret
sbb
lahf
mov
cs
or
test
mov
in
jno
pop
aas
push
cltd
in
and
das
push
dec
jno
test
mov
scas
add
mov
addr16
insb
insl
push
xchg
mov
or
push
lcall
stos
and
fmuls
mov
pop
aas
cld
into
add
pop
inc
and
addr16
jge
faddl
ror
mov
push
sub
fmulp
xchg
or
lar
jbe
fwait
loope
lock
ds
sub
mov
mov
dec
sub
dec
adc
inc
sahf
fwait
jp
xchg
or
ja
dec
pop
mov
jge
in
sbb
in
imul
das
sub
mov
dec
xchg
insl
and
sbb
fisttpl
js
fists
pop
aam
inc
jb
cmp
pop
std
and
pop
adc
int3
mov
mov
dec
adc
mov
adc
jge
mov
xor
adc
stc
scas
jbe
cmpl
push
xor
xchg
sub
in
mov
emms
stos
xor
dec
mov
sbb
jno
jg
mov
inc
pop
fsubrs
movsb
xlat
cltd
aad
pop
cwtl
repnz
nop
pop
inc
jae
imul
test
xor
adc
fdivl
out
lods
aad
daa
adc
cmp
pop
std
aaa
leave
mov
test
mov
fisttpll
sub
stos
loope
pop
pusha
mov
rcll
pop
test
push
pop
jne
pop
adc
xchg
mov
xor
jno
in
mov
cltd
fs
xchg
or
in
pushf
jns
bound
ljmp
mov
push
lret
bound
stos
or
sub
dec
shll
adc
loopne
repnz
pop
and
test
loopne
or
sahf
or
cmpsb
cmpsb
loope
ljmp
mov
gs
push
fnstcw
daa
sub
adc
out
out
fsub
cmpsb
inc
sub
cmp
fmull
inc
fwait
lcall
pop
jb
imul
mov
adcb
xchg
inc
mov
je
push
lea
insl
ss
xchg
inc
call
adc
ljmp
xchg
push
mov
setbe
mov
icebp
dec
pop
decb
repz
aam
test
lahf
inc
cltd
jp
sarb
jns
or
in
pop
aam
and
ret
jns
sub
push
sbb
jno
cmc
lds
mov
aaa
cmc
aaa
mov
add
adc
cmp
mov
and
lcall
mov
loopne
dec
or
fadds
pop
test
arpl
rcl
adc
sbb
cmp
fstps
and
lods
cltd
jecxz
mov
push
dec
jbe
add
psadbw
mov
fidivrl
xor
xchg
fistpl
shl
mov
cmpsb
inc
in
out
mov
or
add
push
inc
inc
adc
pop
lret
or
mov
ljmp
nop
jecxz
xchg
sti
inc
mov
sbb
cmp
mov
cmp
mov
mov
fdivrp
mov
mov
out
jno
cmpsb
adc
fstp
fbstp
mov
inc
mov
test
fildl
or
mov
inc
dec
jle
xchg
enter
insb
xchg
push
pushf
ljmp
jecxz
mov
dec
or
jno
ds
push
sub
aad
push
in
in
mov
push
xchg
fmuls
xor
xchg
in
inc
dec
je
sub
pushf
cmp
pop
mov
push
adc
je
dec
ret
jns
mull
enter
adc
or
imul
in
dec
loopne
ret
or
mov
arpl
insb
adc
xchg
inc
sbb
outsl
repz
sbb
xchg
stos
add
mov
push
xchg
cmc
test
test
adc
subb
push
sub
insl
stos
pop
and
cmc
add
pop
jge
or
sahf
push
cltd
pop
into
inc
add
sti
jnp
push
nop
leave
push
in
les
insl
inc
in
add
hlt
mov
out
and
js
mov
and
adc
stos
fldl
push
pop
mov
sub
stc
cmp
cwtl
dec
jne
adc
mov
ds
dec
cld
add
adc
sbb
pop
repz
push
lcall
and
addr16
xchg
pop
add
lcall
stos
jbe
and
test
fnstsw
iret
and
push
stos
add
cmpsb
call
sar
dec
cltd
stos
dec
mov
mov
dec
iret
popa
mov
or
dec
jecxz
stos
es
rcr
mov
inc
mov
mov
shll
mov
sub
pop
loop
dec
mov
mov
clc
or
inc
clc
cli
jae
or
bound
das
data16
shlb
aam
xor
mov
out
test
cs
push
pop
mov
fmulp
movsl
cwtl
jbe
jmp
pop
roll
add
jne
fstl
dec
xchg
enter
icebp
adc
je
jae
mov
cmpsl
ds
dec
sbb
mov
test
xor
add
pop
faddl
push
mov
std
les
ja
mov
and
cmc
sub
inc
popa
aas
push
push
mov
mov
fcomps
mov
sbb
rcr
mov
dec
mov
push
push
ficoml
es
mov
stos
fildll
nop
loopne
insb
push
xor
dec
stos
sub
loope
jns
or
xchg
dec
pop
test
rcrb
mov
imul
imul
dec
iret
out
jns
mov
push
inc
mov
andb
das
add
mov
bound
lods
lcall
loop
popf
outsb
insb
jo
cmp
push
sub
inc
mov
outsl
lds
jge
icebp
mov
or
outsl
shlb
xor
cli
mov
cmp
xchg
or
jmp
push
mov
les
shlb
push
ret
or
mov
popf
mov
dec
jecxz
test
jbe
sbb
stos
jbe
scas
push
insb
ja
and
cmp
cmpsl
movsl
shll
jmp
fwait
repnz
lds
dec
inc
mov
and
push
loop
jbe
jmp
xchg
jg
sbb
je
jns
andl
dec
cli
popa
nop
push
pusha
dec
hlt
je
xor
xchg
mov
mov
and
xorb
out
xchg
bound
loop
in
xor
outsl
loopne
call
xlat
imul
fs
push
lahf
ret
shlb
popa
mov
jb
test
xorb
dec
cmp
sar
mov
bound
out
lea
fstps
dec
into
inc
nop
jnp
adc
pop
out
loopne
sub
cmp
out
in
fisubs
jbe
and
xchg
mov
lods
mov
and
xchg
imull
daa
cmp
mov
stos
cmp
addl
jg
mov
in
imull
cs
dec
jne
mov
jbe
rorb
cltd
jno
inc
cmp
mov
cli
negb
loope
aam
sub
repnz
and
pop
jge
rcl
sub
sbb
jno
jp
test
pop
pop
mov
mov
mov
stos
sub
cmpsl
je
sarl
loope
call
in
and
popa
sub
loope
sbbb
add
psubusw
fdivrl
int3
mov
push
cwtl
inc
mov
call
jo
or
sbb
rcl
hlt
push
mull
mov
lods
xchg
pop
lods
popf
dec
or
or
cmc
sub
or
inc
test
xlat
adc
movsl
xor
xchg
dec
inc
int3
pop
loopne
inc
inc
add
movsb
dec
jno
add
out
movsb
repz
mov
fbstp
mov
add
xchg
es
dec
xor
clc
push
bound
outsl
inc
pop
in
les
int
mov
xchg
fcoml
xor
mov
int3
hlt
ss
inc
push
xchg
xchg
pop
pop
push
xlat
mov
push
jbe
sub
add
add
xchg
divb
dec
xchg
sahf
xchg
sub
out
mov
enter
inc
fstl
pop
repnz
pusha
js
fstp
std
sbb
or
pop
mov
gs
das
sbb
gs
addr16
sub
rcrl
rclw
and
fdivrs
mov
mov
dec
xchg
mov
jmp
mov
push
jbe
stos
repz
mov
test
push
into
clc
insl
lds
in
jb
jle
and
mov
aad
or
loop
divl
push
xchg
sbb
sahf
inc
testb
sub
jo
cmp
iret
jp
mov
add
or
cmpsl
movsl
mov
call
rcrl
sbb
xor
sahf
mov
mov
je
and
adc
in
hlt
or
sahf
xchg
xlat
pop
and
mov
mov
jns
popf
add
pop
inc
xor
or
scas
push
and
insb
aaa
rorb
mov
mov
xchg
idivb
mov
mov
cmpsb
dec
rcll
cwtl
notb
icebp
aad
mov
cltd
mov
mov
dec
cltd
pop
mov
call
lcall
push
ss
jmp
push
sbb
inc
mov
ficompl
jb
sarl
and
addl
mov
out
and
in
lahf
arpl
mov
push
mov
sbb
xor
add
mov
test
jbe
jmp
add
sbb
xor
xor
in
mov
push
rcl
jle
pop
jge
pop
push
cmp
rcll
inc
and
imul
dec
sahf
lods
mov
jb
rcrl
dec
loope
mov
ds
mov
cmp
mov
inc
or
xchg
jo
mov
jge
gs
int
cld
cmp
imul
mov
push
dec
std
xchg
movsb
jo
pop
stc
push
or
adcb
cmpl
adc
imul
ss
sub
fsubs
repnz
mov
lock
lods
test
adc
push
clc
cmpsb
and
sub
pop
sbb
cs
hlt
jmp
arpl
popf
sbb
in
ja
lret
mov
jl
jle
sbb
jns
test
aad
jge
xchg
mov
push
xchg
lds
sub
mov
mov
or
clc
inc
cmp
hlt
inc
das
in
das
push
mov
cmp
adc
sbb
cmp
inc
pop
movsb
jbe
out
sbb
sub
insl
mov
stos
adc
dec
sarb
aad
sub
rcrl
push
cmp
add
dec
jnp
add
pusha
ljmp
xor
aam
arpl
in
sbb
icebp
pop
xor
int
pusha
mov
cmc
xchg
jns
mov
repnz
pop
cmp
shl
enter
mov
adc
ja
lds
inc
jne
sbb
dec
cmp
jg
sub
es
outsb
sti
inc
jo
jb
dec
lret
push
fsubrl
repnz
pop
push
mov
imul
fldpi
loop
ss
ret
mov
and
imul
mov
cld
divb
add
jae
xor
jg
push
xchg
nop
je
dec
lods
out
pop
ret
repz
stc
xor
fnsave
lret
cmp
in
push
hlt
mov
jle
push
test
sti
mov
dec
je
cmp
cld
aad
out
jl
push
jne
dec
adc
cs
cmp
rolb
test
movsb
mov
test
int
push
inc
xor
jns
pop
pop
push
scas
jecxz
pop
int
aam
xlat
jmp
loop
ljmp
dec
xchg
xchg
das
out
mov
ljmp
fsubl
jg
cmpsl
or
mov
push
ret
mov
cltd
bound
dec
jmp
mov
fcoml
fs
mov
lock
and
add
pop
mov
sub
xchg
mov
sub
mov
test
shl
hlt
push
pop
fs
imul
add
push
cli
jl
outsl
test
pop
negl
loopne
out
mov
test
push
pop
insb
or
test
pop
imul
mov
push
fdivl
stc
arpl
sbb
xchg
nop
or
mov
push
ljmp
and
xor
je
xor
shrl
push
mov
xchg
sti
fstpl
push
ljmp
addl
push
loope
mov
neg
in
repz
daa
xchg
inc
int
xchg
cmp
add
fsubr
mov
adc
jnp
push
js
mov
jnp
sahf
xchg
lods
sarb
push
xchg
test
xchg
lret
mov
inc
inc
jmp
cmp
and
idivl
lret
push
push
ljmp
lahf
cwtl
into
fcmove
shr
sti
loop
mov
mov
insl
je
dec
or
cmpsl
cld
push
and
movsb
test
cmp
dec
into
mov
xchg
mov
aaa
adc
fst
push
push
xor
mov
imulb
cwtl
incb
dec
mov
and
out
aas
popa
and
pop
add
outsl
ss
mov
dec
aaa
sbb
sbb
in
inc
imul
lahf
mov
dec
outsl
sbb
and
fs
pop
jg
mov
cli
sbb
mov
lods
pop
pushl
pop
mov
rolb
jge
mov
mov
stos
lcall
fst
data16
daa
add
std
cs
outsb
jnp
xchg
call
xor
pop
push
in
and
inc
movsl
and
fldenv
cmpsb
xor
adc
sub
arpl
sbb
cmp
cmp
ja
sub
test
dec
adc
mov
pop
jne
cmp
cmpsl
xlat
stos
scas
add
fbstp
dec
xor
fwait
es
in
sbb
pop
jo
test
dec
adc
lock
hlt
mov
mov
or
inc
and
or
xor
jge
push
ja
add
mov
lds
sub
sarb
pop
sbb
dec
mov
inc
scas
adc
aaa
xchg
leave
js
daa
and
push
inc
mov
sub
push
fstpl
stos
jge
dec
pop
or
jae
mov
mov
add
out
mov
or
xchg
pusha
loop
or
mov
sbb
mov
pop
int
outsl
cs
cmp
mov
inc
test
daa
out
mov
sbb
jae
cli
cmp
adc
pop
sub
or
mov
xor
cmc
xchg
mov
subl
imul
or
aaa
mov
add
out
and
movsl
cli
pop
jmp
sub
add
mov
aas
mov
push
icebp
xchg
mov
inc
lret
jne
push
das
or
rcrl
mov
adc
or
fs
jae
mov
pop
fwait
adc
test
cmp
in
enter
lea
lds
test
fcomps
and
insl
jae
lea
push
ret
add
ret
flds
movsb
and
xor
push
dec
clc
out
jl
jecxz
cmpsl
sbb
mov
push
repz
les
mov
inc
mov
cld
lcall
jne
mov
mov
mov
loope
test
popf
sbb
popl
and
xchg
jle
shl
pop
scas
fcmovne
mov
sbb
push
fnstcw
fidivs
jnp
enter
std
inc
dec
jnp
adc
mov
sub
int3
nop
mov
pop
aad
sbb
xchg
and
adc
int3
jne
aam
or
imul
mov
pusha
add
xchg
in
adc
jg
add
cmp
fiadds
arpl
xor
and
popf
test
sub
loop
adc
cmpsl
and
mov
test
aas
xchg
mov
mov
xchg
adc
lret
mov
xchg
mov
dec
stos
cmp
les
aad
les
pop
xor
je
mov
stos
xchg
mov
inc
xchg
test
test
cmp
and
lret
aad
mov
add
inc
cmpsb
mov
inc
lds
mov
adc
je
push
in
nop
js
mov
xchg
int3
shl
sub
pop
mov
bound
popf
cmc
push
xor
rcll
push
in
test
fidivrs
rclb
lahf
sbb
ss
adc
xor
aam
outsb
pop
dec
push
rcrb
add
out
cld
cli
mov
inc
lea
mov
mov
and
rorb
lret
hlt
insl
adc
call
mov
mov
jl
add
fnstsw
loope
or
cmp
dec
incb
cmc
add
mov
test
pop
adc
sub
lods
mov
xchg
inc
ljmp
in
cltd
xchg
sub
mov
popf
xchg
push
pop
fcomps
jp
cmc
inc
popa
push
xlat
stc
out
movsl
push
xor
xchg
mov
cmpb
fistpl
loopne
test
xchg
push
stc
jnp
rcll
movsl
xlat
mov
and
jg
xor
ret
xor
mov
sahf
xchg
push
rolb
sbb
leave
out
aas
test
mov
js
xor
cltd
inc
dec
cmp
addr16
into
daa
jle
into
cmp
je
push
xchg
jg
rolb
dec
hlt
icebp
in
cmpsl
stc
adc
jns
repnz
stos
push
xchg
aam
lock
gs
xchg
shlb
clc
or
in
cmp
push
movsl
pop
pop
lock
insb
movsb
push
sub
ljmp
bound
in
push
pop
mov
mov
data16
test
cmp
fwait
mov
pop
sub
stos
not
xchg
in
sub
inc
dec
sub
test
push
xor
stc
push
cmp
cmpsb
jmp
pop
mov
xchg
pushf
je
in
mov
je
mov
aaa
xlat
ret
lahf
ljmp
stos
outsb
jmp
or
fs
add
xor
xchg
icebp
inc
inc
popf
std
jbe
bound
lcall
dec
lcall
lock
push
andb
jp
jae
icebp
ljmp
data16
mov
jge
ja
sub
pop
dec
out
jae
push
inc
int3
ret
fwait
pop
mov
and
push
in
pop
and
push
mov
fstpl
js
xor
das
les
sub
loop
xor
daa
adc
mov
loop
lods
jge
addr16
cmc
push
pop
jns
sub
cs
and
repz
push
sbb
xor
or
xchg
arpl
sarb
rolb
cmp
gs
pop
insl
sub
popf
shr
add
aaa
and
fs
inc
incl
add
dec
pop
cmp
addr16
mov
xchg
dec
adc
into
fsubl
in
stc
or
loop
jno
mov
in
repnz
lcall
mov
incl
aas
cli
push
xor
dec
clc
sarb
iret
cmp
inc
xor
fiaddl
cwtl
sub
loope
stc
jp
xor
test
jns
lret
lds
dec
ljmp
fdivs
js
sbb
sub
mov
xchg
ljmp
aas
xor
pop
push
leave
loope
push
jp
xor
mov
insb
lretw
mov
cmp
push
xor
push
fwait
mov
mov
mov
sti
jmp
lahf
les
xchg
xchg
cmp
push
sahf
add
mov
xchg
fs
aam
xchg
nop
xor
je
sti
rorl
pop
sbb
mov
out
outsb
insl
enter
sub
imul
adc
call
xchg
clc
rcll
jl
repz
jecxz
dec
pop
mov
cmpsl
stos
jb
fmull
cld
xlat
rorb
xchg
lahf
mov
std
ret
and
jo
loope
popf
mov
mov
out
mov
inc
fldcw
fldcw
repz
pop
cmp
mov
das
pusha
bound
and
lea
sbb
and
push
aam
push
sahf
mov
jns
pop
and
or
adc
push
xor
fsubl
or
jle
add
fnstcw
sub
dec
cld
push
pop
mov
jp
call
xchg
rcr
jbe
and
lret
and
pop
ret
xchg
mov
lods
pop
jae
add
test
addr16
iret
sbb
adc
pop
lret
cmp
mov
pop
xchg
lahf
lret
xor
push
mov
nop
xor
push
scas
pushf
mov
fisttpll
cmp
test
das
mov
cmc
lock
mov
movsb
cmp
sbb
pushfw
aaa
inc
xchg
movsb
iret
add
mov
pop
out
push
lods
sbb
inc
inc
push
repnz
ror
and
repnz
dec
mov
adc
icebp
pop
fbstp
jno
test
xchg
sbb
inc
jl
mov
in
rcr
push
mov
shl
stc
dec
cmpl
sbb
pop
or
pop
inc
loopne
stos
mov
adc
and
add
sub
lods
fs
jo
add
inc
mov
sar
and
lock
mov
sbb
cld
ficomps
test
xchg
mov
popa
popf
or
inc
pop
dec
je
push
dec
std
sbb
dec
jge
popf
jbe
repnz
xchg
dec
add
xor
test
adc
push
mov
xchg
mov
outsb
jae
lret
cmc
loopne
movsb
js
add
push
cs
lods
mov
sti
xchg
outsb
mov
xchg
movsl
cltd
out
sbb
divl
into
fcmovnb
subl
and
lea
andl
out
and
jnp
lods
mov
lock
loope
sub
ficomps
mov
jl
nop
or
cmp
push
sub
mov
lea
pop
das
ret
dec
jmp
adc
xor
jmp
outsl
test
in
xor
add
jp
pop
out
stc
imul
int3
inc
dec
outsl
rcl
std
fidivrs
push
js
jmp
aam
lds
pop
or
stos
rcrb
rclb
jb
mov
xchg
mov
in
push
pushf
es
les
mov
and
pushf
cmp
inc
mov
push
jge
clc
jns
jmp
loopne
jo
ss
insl
mov
pop
add
aas
and
out
lods
mov
or
mov
aad
mov
out
shll
push
jecxz
testl
jge
popf
negl
shr
dec
sbb
sbb
xor
lods
aam
int
xor
cmpl
mov
stc
jmp
std
pop
and
stos
iret
scas
xor
sub
cld
push
or
ud1
cld
ss
fsubr
add
pusha
xchg
jge
out
add
ss
daa
scas
xchg
call
mov
sub
rolb
cli
cmp
sub
add
adcb
addl
popf
jno
leave
mov
mov
mov
and
cli
push
mov
dec
sbb
cmp
rcrl
sbb
mov
and
loope
insb
jmp
lret
mov
fnstcw
sbb
mov
xchg
popa
in
add
popf
lock
or
adc
add
in
pop
int3
or
dec
sub
jns
iret
hlt
fs
push
ja
sbb
xchg
aad
jne
xchg
mov
add
outsb
adc
push
mov
dec
push
mov
std
mov
add
mov
sbb
lcall
sub
push
xlat
lods
cmp
ljmp
push
xor
cli
cwtl
icebp
adc
inc
mov
ror
lds
aam
pop
add
out
nop
imul
loope
jb
push
mov
call
ljmp
out
ds
xor
adc
inc
mov
add
push
xchg
lods
sbb
loope
pop
sub
xor
jns
xchg
hlt
enter
pop
xor
sbb
pop
mov
scas
loopne
or
mov
aaa
mov
in
add
ret
adc
mov
fiaddl
les
xchg
xchg
aaa
pop
mov
jl
or
xlat
dec
out
push
out
and
pop
jmp
cltd
ret
stc
mov
push
shlb
jo
inc
mov
push
cmc
iret
mov
enter
fs
lods
mov
movsl
das
sbb
out
imul
cmp
jle
outsl
mov
mov
scas
shlb
cmp
fcomps
fsubp
pushf
xor
mov
pop
adc
aas
mov
insl
jle
daa
jg
mov
xchg
mov
sbb
and
loope
cmp
add
mov
shrl
pop
adc
xlat
aas
mov
and
jns
loopne
adc
enter
push
and
add
lcall
mov
xchg
ds
lret
and
cld
cwtl
es
fwait
sahf
mov
aaa
test
imul
fsub
shll
xor
div
mov
mov
lods
adc
dec
stos
test
xor
pop
divb
sbb
jbe
push
repz
lret
and
mov
pop
out
sub
ret
jg
or
xor
outsl
xor
notb
push
aas
mov
push
scas
cmp
leave
and
fstp
rolb
mov
push
lcall
pushf
cmc
push
xchg
test
inc
add
jo
mov
mov
mov
fisubrl
pushf
add
jns
mov
jne
fwait
add
ficoms
mov
clc
int
jecxz
arpl
xchg
adc
jp,pn
popa
and
mov
and
mov
cmp
out
mov
mov
outsl
add
jne
jne
sub
cmp
pop
arpl
push
lret
mov
aas
into
ss
fcoms
pushf
lcall
je
shl
push
fwait
in
test
loope
in
inc
imul
les
sub
popa
fbstp
data16
mov
ljmp
lock
lahf
mov
and
stc
sti
xchg
subb
push
cmc
dec
sub
inc
xchg
hlt
mov
ret
lds
inc
xor
stos
xor
sub
xchg
fnstenv
add
test
push
int
mov
cmp
jne
loopne
scas
addr16
les
out
add
iret
sahf
and
push
sub
cs
dec
or
ret
mov
mov
stos
sarl
loope
loope
adc
inc
icebp
out
and
scas
decb
cmp
add
in
arpl
mov
inc
jns
cmpsb
daa
ds
xchg
jle
dec
jp
push
lea
in
js
jne
insl
lret
lods
mov
push
jl
bnd
cld
popa
xchg
sub
into
test
pop
jnp
xchg
subb
movsl
add
jb
fdiv
inc
or
push
push
call
mov
sbb
notl
xchg
repz
sbb
mov
xchg
push
jae
pop
jp
inc
lds
test
mov
adc
out
ret
and
in
out
loope
push
push
jae
inc
out
push
push
jne
jne
inc
adc
into
ja
aam
xor
pop
lret
cmpb
leave
or
dec
push
push
xchg
xchg
xchg
sbb
mov
popa
push
mov
scas
xchg
lret
or
xchg
sbb
push
lods
lahf
ficoml
xor
jmp
pop
xlat
daa
scas
sub
sub
or
and
int
mov
js
jbe
loope
rcrl
int3
nop
lds
jns
add
mov
inc
cmp
clc
ja
and
add
mov
sbb
xchg
outsl
push
push
xchg
jbe
adc
xchg
add
jmp
jecxz
lods
cmp
aaa
push
xchg
xor
insl
jns
pop
popa
and
mov
or
in
add
dec
int
fadd
cmpsb
rorb
out
cmp
ljmp
xor
jecxz
mov
pmuludq
std
dec
out
pop
gs
mov
stc
hlt
ret
sbb
call
xchg
push
xchg
xor
fildl
cmp
pop
push
mov
mov
sti
xor
loope
sahf
jmp
clc
in
inc
mov
aam
inc
inc
cmp
mov
pop
nop
or
dec
dec
push
add
cmpsl
sub
and
scas
mov
inc
imul
pop
das
jle
pushf
mov
and
jne
lcall
pop
mov
cmp
add
lea
jns
insl
pop
test
es
mov
or
sub
int3
jb
sub
sub
mov
xrelease
into
ret
add
jae
fldcw
sub
xchg
push
cmpsl
xchg
jmp
mov
lcall
jl
cltd
jae
fiadds
enter
hlt
mov
adc
cwtl
cld
cmp
cmp
outsl
jb
int3
out
mov
rcr
lods
cmpsb
pop
sbb
xchg
cmp
imul
and
push
mov
pop
movsl
and
sub
rorb
iret
xor
rcrw
xor
inc
daa
push
in
sbb
fmulp
sub
and
and
sbb
int3
or
pushf
lock
jnp
pop
loopne
ret
mov
cmc
adc
jp
push
sbb
das
ja
mov
fwait
insl
dec
cs
mov
mov
sbb
cmp
pop
inc
jmp
es
iret
cmc
jecxz
int
ds
pushf
jne
sub
dec
jecxz
inc
mull
push
inc
arpl
lds
ss
pop
push
lods
data16
outsl
outsb
loop
and
cmpsl
inc
adc
addl
sbb
fildl
sbb
stc
or
jecxz
and
mov
stos
or
leave
testb
rol
imul
scas
adc
add
sahf
rcl
in
push
js
dec
pop
sub
lods
clc
jno
adc
add
xchg
arpl
cmp
pop
mov
fmul
jb
cli
mov
mov
xor
pop
neg
xor
push
mov
inc
add
or
sub
mov
jmp
mov
xchg
mov
lods
movsb
ret
nop
cld
fsubrp
adcb
into
xor
sbb
fildl
rcrl
lock
mov
jae
jecxz
mov
dec
dec
xor
aam
or
fdivrs
je
stos
fidivl
ret
insb
adc
rcrl
sub
dec
dec
push
test
lods
xchg
and
mov
xchg
rolb
aad
cmp
sbb
test
xor
mov
cmp
push
aad
leave
sbb
fisubl
lcall
imul
test
dec
mov
jns
adc
mov
das
or
sti
sub
stos
xchg
xor
ret
push
adc
in
popf
xchg
stos
pop
lret
test
mov
mov
std
lods
fnstcw
jg
sub
and
or
jge
mov
push
mov
mov
add
xor
adc
cmp
inc
daa
sbb
and
arpl
test
push
xchg
int
push
dec
leave
scas
mov
int
cmp
adc
cmpsb
dec
pop
jae
ret
and
pop
xchg
lcall
xchg
lret
loopne
dec
xchg
xchg
push
add
and
and
xchg
out
or
push
hlt
shll
clc
adc
fnstsw
and
imul
dec
inc
rcrb
loopne
push
fcmovnu
out
and
sub
sub
push
dec
and
xor
pusha
sbb
fwait
mov
mov
fimull
shl
into
dec
imul
sub
js
in
outsl
or
dec
dec
push
in
and
lods
add
mov
es
out
in
nop
mov
jmp
cmc
ficoms
and
xor
mov
out
dec
das
adc
sub
ja
and
fisttpl
and
cli
and
push
lcall
jl
jp
lea
mov
lds
sub
cli
sub
scas
mov
or
jle
cmovae
flds
or
cmp
scas
push
push
xchg
xchg
outsl
sbbl
and
pop
and
out
pop
jnp
stos
mov
dec
jmp
aam
or
sub
mov
sbb
inc
cmpb
sub
xchg
cltd
into
test
push
mov
sti
enter
ds
mov
scas
sbb
hlt
lods
pusha
ret
inc
mov
scas
jge
cmp
mov
adc
xor
xchg
nop
push
hlt
shll
inc
rolb
leave
fiaddl
mov
inc
mov
mov
lds
push
popa
fwait
sub
jne
push
lcall
sbb
in
sub
out
out
mov
push
pop
cmpsb
hlt
add
std
shrl
cmp
cmp
jp
jp
scas
jp
call
mov
dec
xor
addr16
aam
jns
dec
push
psrlw
xor
jecxz
jbe
outsl
je
fimuls
outsb
and
fwait
pop
adc
addl
and
xor
in
dec
xor
imul
mov
xor
es
dec
adc
fwait
and
cltd
cld
icebp
cmp
jno
adc
pop
xchg
fsubl
mov
pop
xchg
iret
in
xchg
outsl
mov
jno
mov
xor
cmp
js
mov
mov
mov
pop
js
xor
loopne
add
addr16
add
mov
xor
fcoms
cwtl
mov
mov
inc
leave
xor
arpl
test
add
daa
xor
inc
lods
rorb
cmp
rcrb
jno
mov
mov
mov
iret
adc
scas
dec
scas
mov
push
test
xchg
cmp
mov
repz
arpl
add
and
sbb
push
enter
add
jne
adc
cmc
sbb
mov
jns
arpl
jp
sbb
cmp
or
cltd
push
fiadds
pop
or
into
jnp
sub
movsl
adc
jae
lahf
jnp
fwait
cli
pop
sbb
lcall
inc
push
xchg
jle
jp
mov
push
data16
lahf
xchg
mov
mov
jns
pushf
lock
out
jl
cli
cmc
mov
popf
mov
cld
xchg
fnstsw
sti
mov
out
pusha
mov
lock
jp
mov
mov
mov
inc
and
pop
xor
mov
ja
or
arpl
mov
xor
ljmp
push
pop
or
iret
xchg
movsl
sub
push
mov
scas
add
sti
call
cmp
xchg
pop
mov
xor
push
outsb
jle
fidivrs
dec
imul
push
sbb
xchg
imul
inc
pop
cmp
and
test
jae
jae
mov
fwait
mov
lcall
dec
sti
mov
xchg
inc
sbb
leave
inc
xor
stc
aad
push
cmp
mov
in
mov
in
into
or
add
mov
jo
inc
sbb
aam
ss
push
mov
xor
sbb
push
scas
jno
jb
cmp
mov
sbb
rcr
jle
pop
inc
mov
scas
push
mov
loop
xchg
pop
dec
sbb
mov
fs
xchg
or
jp
repz
push
js
sbb
ljmp
push
inc
push
sbb
pop
mov
add
popf
cmp
lods
mov
jecxz
xchg
aas
jbe
xchg
stos
sbb
ret
invd
xor
in
lock
dec
xlat
xchg
mov
sbb
mov
push
dec
js
cld
jns
test
negl
adc
push
test
test
pop
lods
and
cmp
inc
notl
in
pop
ja
xchg
jb
cmp
or
and
mov
loope
lret
jg
pushf
push
sbb
cli
inc
bswap
push
mov
mov
in
scas
xor
cli
outsb
push
loop
icebp
add
cld
mov
cli
cmc
stos
movsl
sbb
or
out
inc
stc
mov
imul
mov
dec
inc
pop
xchg
ss
xchg
push
mov
iret
inc
push
sbb
out
movsb
lret
stos
loope
popa
and
daa
jbe
test
inc
xlat
mov
adc
push
mov
rclb
lret
cli
mov
sbb
inc
cmp
sarb
mov
fsubrs
mov
lret
mov
xor
les
mov
xor
pop
add
cld
pop
loopne
loopne
addr16
mov
popf
mov
ds
imull
sbb
mov
out
in
push
add
push
fs
cld
inc
cmovbe
mov
stos
or
movsb
adc
sub
xchg
fmulp
sti
test
dec
shr
cmpsl
pop
imul
mov
scas
loope
pop
lods
sub
sub
sub
mov
hlt
daa
adc
adc
lock
mov
sbb
fsubrl
outsb
pavgb
mov
jmp
cmc
pop
in
dec
sub
daa
cs
wrmsr
jo
loope
loopne
inc
xchg
xchg
js
imul
cmp
add
jle
push
add
mov
jnp
notl
jl
hlt
cmpsb
xchg
and
xchg
pushf
lods
and
cmp
addr16
fsubs
mov
ficoms
fildll
fistpl
ror
dec
mov
inc
xchg
shll
push
jmp
jl
fistl
lock
or
out
stc
nop
insb
xchg
inc
pop
jo
or
push
pop
xchg
pop
pop
fistps
mov
jne
or
shrl
sub
or
pushf
fdivrs
mov
bound
jge
or
xchg
sbb
in
repz
push
outsl
sbb
mov
or
push
xor
cmpsb
dec
xor
into
push
out
or
sub
or
inc
rorb
out
mov
movsb
in
shlb
daa
inc
xor
call
into
jecxz
mov
push
nop
mov
and
cld
xchg
or
dec
lahf
add
adc
stos
rcl
das
and
xchg
je
inc
in
lcall
fldt
sbb
aad
in
dec
sbb
les
mov
call
inc
out
ret
sbb
rcrb
jge
in
clc
push
jnp
add
pop
xor
leave
inc
insl
mov
pop
jp
sub
loopne
push
cmp
iret
scas
add
inc
aas
test
or
lods
mov
pop
push
mov
pop
cs
dec
jne
xor
cmpsl
and
inc
stos
cmp
xchg
into
xor
cs
xchg
add
insb
xor
outsb
das
pusha
repz
push
cmc
testb
pop
xchg
mov
lea
cltd
addr16
sub
jp
pop
dec
ljmp
js
lcall
mov
xor
add
adc
test
jmp
mov
sbb
mov
das
jecxz
pop
xchg
call
test
std
ss
cwtl
jecxz
push
push
gs
shrl
xchg
daa
xor
mov
xor
js
add
mov
push
xchg
movsl
pusha
int
pop
jns
add
ss
xchg
lods
pop
push
scas
cmp
jbe
and
icebp
cli
jnp
fildll
add
cmpl
inc
roll
mov
mov
mov
inc
or
rol
sbb
loopne
je
mov
and
dec
je
cmpsl
aam
sub
cs
adc
jns
sub
dec
inc
or
mov
jbe
aas
sub
adc
pusha
mov
push
dec
imul
pop
pushf
push
sub
sahf
aam
xlat
inc
cmp
ljmp
sbb
sub
and
mov
cmp
lea
lds
jecxz
adc
jnp
lahf
mov
sahf
testl
addr16
mov
fdiv
mov
and
popa
cmp
inc
aaa
sbb
mov
inc
jge
jb
rclb
jp
and
fldl
xchg
adcl
inc
sub
hlt
in
mov
inc
xchg
mov
lock
repnz
int
mov
or
icebp
xchg
jmp
in
loope
pop
adc
jmp
stc
push
and
pop
cltd
pop
xor
ficomps
jb
xor
xor
inc
mov
std
scas
jne
lahf
testl
and
pop
pusha
clc
pop
inc
xchg
popa
inc
sbb
sahf
cs
cld
ficoml
xor
cmpsb
add
mov
fsubs
add
mov
jns
push
mov
fdivs
das
hlt
inc
movsb
mull
repnz
arpl
dec
mov
cmp
jnp
stos
jle
fs
lret
mov
fnstsw
lds
stos
outsb
mov
sbb
shlb
push
lds
ss
xor
sbb
push
mov
int3
xchg
loop
mov
push
mov
push
and
imul
movsb
rcll
dec
enter
lret
mov
call
int
ror
sub
daa
inc
cld
mov
jno
sti
dec
xchg
aaa
and
cmpsb
or
iret
ss
call
dec
xor
push
in
popf
ret
jo
cmp
es
cmp
daa
into
in
jnp
addb
pop
popf
push
mov
pop
xchg
push
push
inc
mov
adc
test
enter
push
popf
gs
icebp
data16
repnz
xchg
sub
and
sahf
cli
push
inc
mov
das
ret
mov
or
fcoms
jo
cmp
dec
loop
cs
loopne
or
insb
mov
cmc
test
mov
xchg
or
aad
test
or
daa
fiaddl
stos
es
loopne
les
fldl
xor
fnstsw
pop
stc
cmpsl
lods
mov
mov
jmp
jle
mov
push
shll
jo
push
dec
fcoms
inc
xchg
lock
sub
xchg
mov
add
or
xor
add
jne
pop
fnstcw
popa
lcall
or
push
stos
cmp
sahf
stos
mov
xor
and
imul
and
enter
add
mov
add
out
iret
mov
ret
es
dec
pop
lret
lret
leave
jmp
adc
add
add
xlat
pop
inc
mov
sahf
gs
or
mov
xor
jecxz
orb
out
dec
xchg
pop
sbb
sbb
int
pushf
lock
das
add
jp
inc
push
ss
lods
lret
push
dec
cltd
lock
shl
inc
test
lods
mulb
test
cmp
mulb
std
loope
jae
aaa
mov
fidivl
jo
lods
add
stc
scas
test
data16
aas
outsl
out
arpl
idiv
enter
dec
inc
loopne
jno
or
jb
loopne
popf
jmp
xchg
cwtl
add
je
shlb
mov
fcmovne
push
pop
mov
addl
sbb
mov
mov
cmp
cmp
add
rorb
push
adc
inc
sbb
and
pop
pop
testl
divps
or
and
add
stos
sarb
scas
add
mov
stc
les
mov
ss
mov
push
push
pop
jmp
imul
push
mov
in
xchg
fildll
xor
enter
inc
in
das
insb
sar
jb
xchg
adcl
outsl
xor
cmp
jbe
pop
push
jbe
fisubl
pmulhw
and
andb
jg
adc
push
or
or
lcall
pop
cmc
imul
fildll
and
int3
test
add
lcall
popf
adc
aam
cmpsb
sbb
out
or
mov
outsb
xchg
mov
sub
mov
cmp
fwait
test
inc
adc
inc
out
and
ss
cwtl
dec
js
mov
push
dec
sbb
fsubr
sbb
icebp
or
leave
bound
push
out
mov
cmp
and
loopne
loopne
out
test
and
cmp
ret
and
cld
fcompl
cmp
or
push
adc
or
inc
xchg
add
test
pop
lds
flds
repz
push
scas
popa
mov
insb
gs
stc
xchg
pop
or
and
lahf
call
fdivs
sub
repz
lods
in
stc
dec
mov
test
adcb
push
jp
jge
addr16
mov
xchg
pop
les
ja
inc
push
rcr
mov
mov
inc
push
bound
outsl
xchg
push
jp
push
ljmp
jns
hlt
nop
pusha
cmp
ret
dec
dec
xchg
or
pop
jo
pop
push
mov
add
clc
jp
xor
jecxz
gs
and
callw
js
das
add
fstps
mov
or
lods
in
mov
add
pop
push
fdivr
popf
dec
and
dec
sbbl
ret
push
xchg
lds
xor
and
sub
pop
aas
mov
push
gs
imul
add
jne
sbb
scas
sub
adc
adc
popl
lret
xchg
cmpsb
lea
sbb
dec
adc
hlt
and
jne
fistl
pop
add
cmp
add
mov
push
mov
out
adc
inc
rorb
push
jl
jl
mov
cmp
fcomps
outsl
mov
or
aam
lcall
xorb
pop
inc
nop
sub
dec
jns
mov
fstps
sahf
push
fisttpl
or
xchg
repnz
es
add
xchg
les
lret
ss
pop
in
inc
imul
xchg
repnz
fdivs
xchg
mov
arpl
arpl
adc
mov
xchg
in
call
or
xor
js
fs
push
push
mov
xchg
sub
cmpsl
jbe
adc
aam
mov
sbb
mov
shll
or
mov
dec
fdivrs
mov
shrb
sub
inc
cmpsb
mov
in
cmp
sub
push
pop
ret
sbbl
sbb
test
add
pushf
xchg
psubsw
mov
fdivr
mov
fstpt
cmc
shlb
into
inc
push
fistl
rorb
mov
call
mov
and
mov
mov
and
adcl
cmpsb
cs
mov
mov
ss
jns
pop
xchg
arpl
xchg
popf
call
mov
jecxz
jne
pop
pop
aam
popf
sub
jno
add
xchg
aas
inc
jp
popa
push
xlat
push
push
cmpsb
outsl
push
in
lahf
inc
mov
mov
sbb
test
outsb
xor
mov
daa
jge
jo
push
lea
cltd
push
cld
push
les
ret
lods
es
fnstenv
dec
int3
clc
push
imul
xchg
add
clc
dec
jle
ret
test
dec
sbb
sub
ds
shll
fs
fsts
or
pop
es
xchg
xchg
es
imul
inc
jecxz
ljmp
aad
jo
testl
mov
mov
repnz
mov
repz
inc
xor
xchg
sbb
sbb
and
xchg
out
xor
lods
inc
mov
cld
call
testl
add
into
xor
pop
mov
imul
dec
sub
and
mov
push
jb
mov
mov
pop
lods
xchg
daa
fistps
inc
and
repnz
outsb
rolb
jecxz
mov
fwait
sub
fucomi
or
jp
leave
enter
lods
fnstenv
ret
fisttpl
rcll
sahf
push
push
fidivs
pop
mov
adc
mov
mov
shrb
cmpsl
inc
sbb
pop
hlt
negl
push
jo
xchg
aas
mov
hlt
aad
mov
cltd
mov
adc
daa
iret
andb
cmpsl
pushf
pop
fmuls
and
jns
cli
mov
mov
ret
negl
xchg
jmp
jnp
test
jno
inc
pop
xchg
push
mov
loopne
rcll
push
inc
pop
or
jmp
lahf
andb
xor
into
mov
js
lahf
cwtl
scas
addr16
xchg
int
dec
jb
loopne
popf
pop
ja
dec
push
mull
sub
sub
rorb
add
sub
call
fsubrl
jbe
jecxz
nop
xor
aas
jecxz
sahf
orl
mov
xchg
push
push
cld
xchg
test
iret
push
dec
outsl
jnp
test
loopne
ds
les
in
in
mov
adc
andb
xor
pop
std
in
aaa
sbb
mov
repnz
jo
test
push
adc
or
fcmovb
sub
cli
jns
dec
addr16
es
mov
pop
pop
pop
rolb
jo
xchg
cmp
lret
test
lret
loop
inc
dec
pushl
sub
and
loope
mov
mov
xor
mov
add
add
lods
adc
scas
arpl
jno
pop
lret
sar
out
fdivl
mov
iret
add
test
in
pop
dec
sub
js
int3
push
mov
aam
inc
pop
or
imulb
data16
imul
pop
mov
cs
out
inc
lcall
cmc
push
and
dec
sub
mov
test
mov
addb
adc
xlat
mov
lcall
adc
mov
mov
aam
mov
jae
insb
sbb
push
sbb
inc
push
ret
cmp
or
inc
push
xchg
mov
popf
aas
and
pavgb
jle
mov
loope
pushf
xlat
adc
jo
mov
or
fisubrl
jnp
pushf
bound
bound
pushf
fwait
pop
stc
ret
fiaddl
mov
pop
fidivs
add
adc
repz
add
jns
jno
fbld
jp
push
mov
jp
ret
scas
outsl
push
bound
aas
je
xor
sub
lods
pop
push
inc
push
test
in
ret
adc
push
xor
scas
sub
inc
outsb
outsb
jnp
sahf
testl
push
xor
sub
cs
pop
lret
mov
mov
mov
pop
cmp
cli
xchg
jecxz
xlat
rorl
lods
and
and
xor
pop
mov
jmp
fisttpl
inc
sbb
mov
inc
sub
sbb
hlt
lret
xor
jno
xor
adc
iret
sarl
pop
fs
fnstsw
das
imul
xor
popf
mov
fcmovnu
insb
or
lods
enter
cmp
iret
in
sbb
xchg
test
testl
push
dec
pop
insb
mov
int
push
fsubr
aam
out
dec
adc
adc
jns
insb
imul
shlb
mov
push
fwait
cmp
les
lods
adc
mov
inc
arpl
cmpsl
arpl
cmp
mov
or
add
jb
sub
mov
push
adc
cmc
test
leave
cmp
ss
sub
pop
xchg
stc
or
stos
push
jnp
or
pop
notb
fwait
mov
es
fidivs
movsl
dec
mov
mov
out
imul
xchg
fstps
pusha
mov
pop
push
add
mov
mov
inc
cmpsl
push
and
jne
mov
mov
jle
xchg
lahf
xor
es
lds
lret
sub
add
pusha
xlat
xor
sub
mov
push
add
xor
lahf
mov
xor
jge
in
jle
add
cmovnp
cmp
xchg
mov
push
cs
sbb
mov
fwait
push
cmp
shr
sar
jp
mov
mov
out
pop
repz
movsb
or
std
subl
xor
adc
fnsave
mov
scas
pop
inc
xchg
add
jle
out
mov
jb
fsubrp
gs
adc
adc
pop
faddp
push
jb
loope
hlt
fmulp
cmp
fld
mov
mov
je
and
mov
clc
sbb
fdiv
mov
shl
scas
rcrl
sub
imul
jo
lahf
test
pop
push
adc
lods
andl
adc
js
cmp
or
push
xor
lods
dec
repz
mov
mov
adc
xor
mov
mov
add
andl
iret
ror
push
push
bound
das
hlt
scas
fstps
mov
dec
repz
and
pop
out
jb
bt
movsb
rclb
lcall
sub
data16
sbb
mov
jnp
sbb
jecxz
mov
dec
and
out
pop
cmpsb
jo
dec
sbb
xchg
sbb
setae
inc
or
fnstenv
cld
mov
mov
add
push
sarb
pop
pop
in
jle
mov
popf
loopne
mov
aas
daa
and
popf
lds
insl
pushf
out
pop
stos
dec
cwtl
xchg
push
movsl
loopne
aam
adc
and
push
stos
push
popa
stos
je
out
adc
idivl
js
outsb
cltd
repnz
sub
sub
in
xor
mov
sub
es
cmp
outsb
test
xchg
fiadds
frstor
insl
jnp
xor
rclb
xchg
jo
frstor
outsb
bound
push
pop
xor
testb
inc
mov
dec
xchg
dec
push
fidivl
inc
sub
inc
push
xor
dec
int3
xor
pop
adc
mov
rcl
inc
lret
push
aam
xchg
mov
push
leave
enter
sbb
pop
or
js
mov
mov
ja
out
mov
push
cmc
stos
loope
pop
jo
mov
sub
dec
fdivl
sub
addr16
dec
popf
jmp
inc
aad
scas
loopne,pt
lret
pop
rorb
std
data16
mov
or
cmp
or
dec
mov
popa
jecxz
mull
add
cmp
imul
mov
scas
add
and
movsb
scas
sbb
cltd
xchg
and
adc
js
pop
pop
into
pushf
xchg
arpl
add
mull
inc
mov
addr16
lods
mov
pushl
lret
aas
sbb
pop
mov
pop
mov
mov
ret
mov
sub
insl
dec
dec
xchg
out
mov
mov
lods
cmp
popa
jae
aaa
dec
xchg
fnsave
sahf
jns
push
stc
lds
cli
pushf
ret
fcmovbe
adc
icebp
push
movsb
or
xchg
loop
inc
pusha
loope
and
inc
rcll
dec
or
repnz
dec
mov
sarl
inc
add
cwtl
outsl
fldenv
sbb
data16
jge
add
jns
sar
adc
dec
cmc
sub
inc
mov
in
mov
sbb
mov
dec
cmp
pushf
or
cmp
lock
push
mov
rolb
imul
inc
jb
jne
mov
cmpsl
mov
mov
push
shlb
aas
and
xor
adc
aam
pop
push
int
xchg
mov
dec
icebp
ss
aad
inc
iret
jns
pop
fwait
jl
push
push
pusha
cli
push
cmp
mov
fwait
pop
aad
sub
leave
lahf
pop
cmpl
push
mov
lock
loopne
push
cmc
sub
clc
int
lcall
and
imul
fdivp
mov
xorb
int3
inc
push
jl
sbb
xchg
mov
ret
pop
sub
push
sub
push
dec
mov
dec
fdivrs
movsl
push
lods
mov
push
and
mov
cli
or
fwait
sub
dec
mov
repz
cmp
push
mov
adc
in
sarl
aad
ds
jge
out
insl
and
mov
add
leave
pushf
xor
xchg
ror
imul
clc
add
or
outsl
out
rclb
setle
pop
mov
cmc
les
pop
hlt
test
mov
dec
push
mov
icebp
out
test
pop
sub
ss
mov
dec
dec
push
into
sub
ss
loop
data16
sbb
or
jg
cmp
mov
imul
stos
jne
mov
ljmp
lods
fsubrs
dec
fiaddl
xchg
pop
sbb
push
iret
test
mov
cmpsb
inc
in
mov
jns
inc
hlt
push
xchg
inc
sub
mov
xchg
fdivrs
lods
aas
inc
roll
rcl
or
mov
xor
push
notl
pop
inc
and
cmp
and
movsl
add
jo
mov
push
sub
pop
dec
mov
aad
clc
xchg
popf
and
dec
cwtl
pop
cld
mov
jo
in
jle
nop
or
ljmp
pop
mov
jne
test
adcb
mov
and
aaa
jmp
push
cmpsb
pop
in
sbb
fldcw
outsb
ds
stc
insb
push
xchg
aad
or
jb
in
mov
js
fidivrs
mov
fdivrp
movsl
dec
arpl
aaa
inc
ds
inc
push
push
fsubs
sbb
mov
pop
cmpsl
out
mov
test
pusha
mov
lcall
dec
pop
fbld
fistpll
shrl
jl
test
shr
test
cmp
lret
outsl
pop
and
dec
inc
int
in
mov
out
xchg
lret
xor
cmp
pop
pop
in
jl
mov
pusha
jle
xchg
push
ret
fistl
cmpsl
nop
lret
fnsave
inc
bound
iret
ja
std
fs
jne
out
inc
sbb
mov
incl
cwtl
dec
xchg
xchg
test
stos
gs
cli
push
lods
pushf
mov
or
adc
jo
arpl
int3
sub
mov
jg
arpl
xchg
test
add
or
insb
rolb
js
mov
rorl
mov
lahf
cld
add
sbb
sbb
dec
pushf
ss
dec
in
and
fcompl
in
call
jle
xchg
in
or
push
fadds
mov
jo
cwtl
loope
and
shlb
and
inc
mov
mov
jne
xor
in
fwait
mov
out
cmp
mov
addb
fmull
fistpll
int3
push
xchg
push
or
adc
shl
dec
cmc
mov
adc
ljmp
icebp
out
cmp
fcmovnu
mov
xchg
cltd
inc
sarb
add
rorl
das
std
js
hlt
movsl
outsb
scas
out
std
daa
pop
xlat
add
adcl
and
dec
mov
sub
pusha
dec
mov
sbb
cwtl
cld
ss
sub
xor
sbbb
mov
mov
inc
data16
pop
or
push
cmpsb
jb
stos
rol
inc
test
or
clc
push
imul
jnp
pushf
outsb
xor
xchg
fidivrl
adc
mov
es
arpl
xor
dec
sub
cmp
ret
mov
jle
sbb
jge
push
and
mov
xchg
dec
and
jbe
pop
cmp
mov
jb
imul
mov
xor
add
sub
adc
sub
je
dec
imul
jecxz
leave
jle
fucomip
js
pop
jmp
adc
lock
and
sub
orb
pop
adc
fimuls
fdivrs
fdivrl
mov
jae
mov
add
jne
fnstsw
testl
cmpsb
jb
sub
pop
mov
cli
jns
jne
loope
jae
xor
pop
push
bound
cmp
loope
or
add
push
mov
cmp
in
pop
or
jmp
or
lret
cltd
add
lds
pop
ret
lret
dec
inc
xchg
cmp
pop
imul
icebp
in
and
xchg
pop
cmp
enter
and
call
dec
repz
push
insb
pop
shrb
add
in
mov
mov
sti
mov
ret
add
sub
or
ss
cs
js
movsb
dec
pop
ja
jae
inc
lds
mov
pop
flds
jo
addl
and
imul
aad
das
or
jg
dec
mov
fs
dec
fstpt
icebp
jecxz
or
sbb
test
js
and
xor
xor
cld
pop
jge
scas
test
movsb
xchg
enter
mov
out
insb
lret
repz
inc
lret
mov
ljmp
push
xor
icebp
dec
or
xchg
sbb
mov
cmp
xchg
clc
cmpsl
cmc
outsb
int3
les
jl
cs
sbb
lea
je
movsb
mov
lahf
jle
sub
stos
movsl
and
lds
jno
rcrl
lcall
lahf
mov
bnd
imul
and
mov
push
bound
scas
sub
popa
mov
pop
std
inc
inc
shl
cmpsb
pop
sub
dec
std
fwait
leave
sbb
lret
push
fdivrs
jae
xchg
subb
rorl
dec
sub
dec
test
cmp
cmc
dec
mov
in
push
sbb
add
jns
lea
or
faddp
jnp
out
movsl
pop
sbb
ljmp
xchg
bound
mov
jle
add
xchg
sub
jb
dec
stos
mov
lcall
pusha
sub
int3
mov
iret
adc
mov
inc
clc
out
ss
dec
push
leave
les
outsl
aaa
mov
and
cld
xor
jnp
imul
lods
addl
pushf
lss
dec
push
pop
push
push
dec
gs
push
xchg
xchg
inc
hlt
add
ficomps
roll
adc
xor
mov
jmp
add
aam
shll
icebp
sub
fdivl
add
adc
pop
jne
mov
sub
mov
jbe
in
cli
mov
add
xchg
dec
lods
sbb
inc
dec
scas
mov
adc
mov
add
ja
mov
in
imul
jecxz
pop
mov
or
jb
rol
test
cmpb
das
cli
xor
adc
xor
fs
push
mov
int
cld
iret
mov
sub
test
loope
inc
fwait
xor
jmp
inc
cmp
bnd
push
fstpt
sub
mov
movsb
into
mov
push
nop
ja
arpl
mov
enter
fs
add
adc
push
pop
aas
mov
enter
cli
sub
mov
xor
fisttpl
sub
xchg
idivl
jl
movsb
xor
sub
mov
dec
in
xchg
inc
sbb
pop
shll
push
add
mov
cmp
add
cmp
or
inc
rorl
jbe
mov
out
adc
sbb
daa
or
outsl
mov
mov
inc
lcall
pop
dec
sbbl
das
setle
sbb
js
cld
mov
dec
in
hlt
stos
cmp
or
mov
insl
and
dec
inc
push
fldt
fisubl
mov
adc
clc
subl
jbe
dec
movsb
xor
adc
add
mov
lret
mov
cwtl
pop
loope
jle
inc
inc
jmp
adcb
dec
mov
movsl
dec
mov
sbb
jmp
xchg
jp
imul
push
dec
adc
mov
xor
test
push
or
sar
stc
les
mov
sbb
into
cld
cmpb
xchg
je
fwait
mov
test
fistps
imul
cmc
push
popa
rep
ret
mov
repz
cld
divps
popa
out
scas
pushf
shrl
ja
mov
loop
movsb
es
fldz
mov
mov
push
popf
loope
int3
jo
outsb
xor
inc
inc
sbb
shr
shll
add
sub
outsl
jnp
scas
mov
push
xor
cmp
pop
mov
data16
lcall
pop
pop
jb
lods
loope
mov
xchg
pop
jmp
mov
sub
mov
mov
in
jp
inc
inc
jecxz
nop
lret
in
insl
mov
roll
inc
jp
outsl
ljmp
and
out
rcl
fcompl
int
fstpl
dec
aas
arpl
enter
inc
cmp
negb
and
dec
andb
sbb
sub
fisubrl
cld
pushf
lahf
cmpl
enter
pop
xchg
aam
dec
in
cld
cmp
fdivrs
jae
ret
lcall
dec
fdivl
xchg
push
and
and
push
lods
pop
shll
gs
add
cwtl
fbstp
jmp
imul
int
mov
jnp
dec
push
sub
push
int
in
cmp
mov
ds
pop
ds
pop
mov
ret
sub
pop
push
jnp
adc
dec
sbb
jno
cmp
add
xchg
hlt
fisttps
push
dec
xchg
sbb
inc
imul
mov
dec
mov
push
mov
and
push
mov
push
sbb
sahf
inc
ret
lods
fucom
mov
ljmp
jl
jbe
mov
into
in
push
aad
ret
mov
mov
push
sbb
dec
pop
jbe
xchg
int3
jl
inc
pop
cld
and
sti
push
mov
aaa
mov
pop
imul
ljmp
in
jmp
repnz
shll
bound
sub
call
xchg
pop
loop
dec
ret
inc
cmp
orb
dec
test
jbe
insb
pop
loop
das
addr16
push
scas
in
stos
mov
push
and
std
push
stos
decl
je,pt
push
add
and
int3
idivl
inc
xchg
jo
pop
lret
in
stc
outsl
into
imul
jns
icebp
daa
sub
rorb
jbe
sbb
test
cld
std
add
mov
inc
pop
call
or
rolb
adc
cmp
push
jae
movsl
out
jbe
in
nop
dec
pop
es
xchg
mov
mov
lods
xchg
mov
sub
mov
sub
bound
dec
and
dec
lea
lods
mov
loopne
fstp
pop
movsb
rorl
inc
mov
push
sub
mov
cli
ja
inc
daa
or
nop
push
push
popf
fnstsw
cmp
jo
mov
sub
data16
pop
mov
xchg
jne
out
rcrb
push
add
xchg
xchg
inc
lcall
addr16
repnz
loopne
out
dec
ret
mov
sub
dec
lahf
out
mov
and
data16
mov
mov
jecxz
push
test
orb
cmp
dec
out
ret
push
and
adc
mov
cmp
arpl
hlt
and
sbb
lcall
subl
mulb
lcall
sbb
outsb
callw
push
inc
xchg
clc
xchg
pusha
inc
in
es
xor
and
adc
and
repnz
or
pop
adc
cmpsl
rcll
cld
in
adc
ja
jae
xchg
lods
mov
scas
lahf
sub
fisttpll
cltd
dec
pop
dec
subl
lods
aas
push
repz
jno
fdivs
mov
popa
pusha
lret
fistpll
fistpl
pop
test
outsl
add
cmpsl
push
je
or
loopne
lds
xor
push
popa
loop
filds
cli
pop
mov
orb
imul
jecxz
mov
jl
xchg
mov
dec
push
imul
aam
orb
add
sbb
ljmp
imul
in
addr16
inc
lahf
and
test
loop
add
mov
lret
jecxz
fcompl
roll
adc
jbe
xacquire
sbb
inc
mov
xor
repz
loopne
rorb
sub
dec
es
repz
shrb
xchg
scas
cmpsb
jmp
inc
loop
int
xchg
inc
scas
call
dec
sbb
pusha
adc
xchg
ret
movsb
mov
xlat
movsb
dec
iret
jnp
sbbb
shlb
xchg
and
jp
sahf
leave
mov
xchg
push
adc
jo
dec
mov
jo
mov
sbb
stos
mov
loopne
inc
hlt
repz
pop
push
cwtl
jl
ret
mov
test
inc
and
stc
xor
jl
xor
pop
jge
arpl
rorb
jae
addl
sbb
sbb
cmp
insb
mov
dec
mov
and
pop
fisttps
sbb
je
bound
jns
stos
outsl
inc
or
inc
ss
push
and
test
cmpsl
add
jg
cmp
es
jmp
clc
pop
pop
inc
bndstx
cwtl
sub
cltd
iret
ret
xor
add
imul
push
loopne
sub
dec
pusha
je
rcr
add
jb
inc
dec
cli
cli
lods
cmp
movsb
mov
sub
ret
cmp
cmp
addr16
pop
push
ja
dec
lds
je
jl,pt
xchg
sub
vmovdqu
add
xor
xchg
dec
repz
sbb
dec
jb
data16
repz
mov
bnd
in
test
jbe
jecxz
repnz
cwtl
adc
lods
dec
out
and
ds
fs
loopne
out
and
jb
cmp
ja
ljmp
inc
clc
test
xchg
and
arpl
mov
ljmp
mov
pop
repz
pop
aaa
push
pop
out
icebp
inc
test
das
fcomi
das
xchg
xor
push
mov
and
mulb
mov
push
out
mov
cld
adc
push
fists
jmp
shl
shl
jle
xchg
push
sbb
icebp
ret
rolb
adc
mov
or
or
cltd
imulb
cmpsb
push
icebp
or
test
repnz
mov
push
daa
pop
add
jb
jns
sub
popf
sbb
jp
jg
jno
testl
leave
push
stos
outsb
add
fs
inc
movsb
xor
cli
inc
fcoml
jne
or
das
mov
mov
mov
mov
sub
and
jo
scas
es
cmp
ss
dec
mulb
jnp
std
fisubl
jbe
sub
notl
movsb
cmp
call
or
fidivrs
add
cmpsb
sbb
and
mov
aas
pop
xor
es
jecxz
ret
mov
cmc
cs
stos
add
hlt
mov
stos
aam
sbb
into
inc
adc
dec
sarl
ja
dec
push
mov
mov
hlt
je
push
xor
leave
shll
cs
xchg
fsubl
and
cmp
ds
or
sub
stos
je
test
mov
inc
js
flds
push
dec
rorl
les
push
or
pop
push
mov
pop
add
or
js
rolb
cmp
or
lods
pop
insb
adc
inc
pop
stos
lea
sub
jb
pop
mov
testb
mov
cmpsl
adcb
outsl
fcompl
dec
shrb
mov
loope
inc
pop
push
jmp
push
lahf
cld
imul
mov
mov
dec
xchg
jp
sub
nop
out
in
call
or
test
decl
jmp
and
mov
mov
adc
pushf
ret
pop
mov
push
cwtl
jno
jmp
movsb
dec
mov
ja
in
add
ljmp
pop
jmp
pop
jecxz
popa
imul
negl
imul
outsl
js
push
cli
cltd
jl
jae
pop
dec
xor
in
add
loope
mov
jo
sub
lcall
cmpsb
add
and
jae
jbe
shlb
lret
sub
das
pop
xor
dec
js
out
scas
clc
push
mov
push
outsb
mov
and
cli
je
inc
inc
xchg
ret
jmp
adcl
mov
ror
in
push
stos
or
bound
adc
push
mov
lcall
xor
mov
or
ficoms
idivl
mov
loopne
and
mov
lods
je
or
or
or
daa
pop
mov
hlt
loop
pop
pop
movsb
push
and
shlb
xor
clc
sbb
mulb
ret
and
popa
mov
dec
iret
adc
lret
pusha
jg
fsubr
sub
aaa
and
or
in
cmp
pop
jle
mov
mov
imul
xchg
inc
xchg
fiaddl
stc
add
stos
sbb
fildl
add
mov
movsb
out
movsb
sahf
rdmsr
dec
vphadduwq
repnz
dec
sbb
imul
dec
pop
jl
push
lcall
jg
and
stos
and
and
lcall
inc
push
pop
iret
mov
cmp
and
xor
xor
cmp
xor
or
ret
in
icebp
mulb
add
sub
or
lret
testb
mov
movsl
cwtl
sub
arpl
sbb
sti
pop
movsb
xchg
fldcw
out
cmp
sahf
loop
pop
fcmovne
mov
push
xor
mov
pop
jne
xchg
movsb
ret
rorl
call
ret
dec
sbb
mov
pop
js
repz
cmpl
outsb
push
test
mov
cmp
int3
xchg
or
jge
inc
xchg
dec
mov
inc
icebp
inc
jge
mov
xor
or
sahf
jns
inc
pop
aas
pop
aaa
xchg
mov
rcll
mov
bound
push
sub
or
and
sub
pop
enter
cmp
add
mov
sti
jmp
xchg
fnsave
nop
out
sbb
scas
icebp
xor
cmp
pop
push
scas
mov
or
lret
lock
test
test
xchg
push
test
std
ja
lods
rcll
and
cmp
shrl
mov
addr16
inc
mov
lds
lock
movsl
rcrl
cmpsb
mov
mov
daa
int
hlt
fsubrs
subb
lret
push
shlb
into
int3
push
stos
xchg
aad
movsb
scas
repz
in
dec
aas
subb
lock
lret
inc
mov
addr16
lea
bound
sub
outsb
faddp
subl
andl
dec
and
xchg
fisttpl
cmp
add
outsb
mov
lds
ljmp
push
or
cmpsl
sub
push
stos
pop
lret
jecxz
mov
add
mov
aas
xchg
outsl
push
and
pusha
sub
mov
jb
cmp
pop
leave
in
int3
test
xchg
arpl
cs
xchg
xor
add
clc
cmp
clc
cmp
leave
cmp
stos
push
push
mov
loope
arpl
push
jmp
push
dec
lods
lods
les
rcl
pop
push
sbb
mov
aam
pusha
das
mov
dec
out
das
push
xchg
mov
mov
pushf
fwait
in
loope
pop
jbe
arpl
xchg
sub
xchg
popf
and
pop
repnz
shufps
in
stos
das
ss
sub
jg
and
add
lds
sub
iret
int3
pop
push
cmp
mov
scas
scas
sub
gs
jns
ror
adc
or
push
xor
enter
mov
and
mov
adc
sub
daa
fisttpl
and
xor
pop
adc
adc
push
and
loope
add
push
insb
sub
outsl
repnz
mov
lods
adc
pushf
push
stos
push
out
xlat
rcll
enter
insl
femms
mov
mov
inc
and
push
mov
stos
or
jae
inc
dec
adc
inc
sub
iret
ljmp
push
pop
rolb
sub
inc
mov
pop
popa
mov
das
mov
decb
add
jne
js
fnstcw
jns
test
mov
lock
push
pop
inc
and
les
sub
inc
lods
and
out
fsub
test
jae
mov
mov
jle
push
or
test
test
xor
rcll
outsl
add
and
insl
sbb
sbb
mov
nop
xor
push
std
mov
sar
and
sar
pop
sub
int
xchg
adc
dec
or
imul
pushf
rorb
test
aaa
mov
or
pop
xor
jo
cmp
or
lea
add
insl
and
ds
push
cli
push
add
aad
lds
xor
es
sti
inc
arpl
dec
je
test
mov
rcrl
push
pop
push
ret
lret
adc
call
testl
test
cmpsb
jnp
in
xchg
pop
movsl
cwtl
pop
jp
fsubp
xchg
sub
sbb
xchg
outsl
enter
clc
sub
cmp
pop
call
mov
scas
pop
test
cld
pop
aad
aas
sub
orl
repz
jns
dec
inc
sub
jns
movl
or
sbb
push
sbb
aas
call
in
cmpl
cmp
jnp
cmc
rcrb
sub
pop
jmp
lret
or
mov
cli
jecxz
nop
mov
push
mov
sbb
sti
hlt
lahf
shll
mov
jnp
mov
push
xchg
je
adc
leave
pop
negb
sub
jne
das
test
sbb
push
outsb
pop
aam
scas
jbe,pn
fs
cmp
sub
std
dec
ret
ret
dec
out
add
cmp
cs
pushf
les
jnp
jge
std
jge
jns
jno
flds
dec
js
push
dec
fidivl
mov
or
cwtl
xor
loop
test
nop
xchg
dec
scas
sub
or
push
adc
call
xor
jmp
ss
orb
add
add
mov
outsb
mov
popa
cmp
movsb
fmul
aas
movsb
in
out
outsl
inc
ficoms
xor
repnz
leave
cltd
cmc
jb
cmp
hlt
hlt
in
iret
cmp
push
fldenv
cmp
jnp
out
push
clc
mov
and
pop
ror
lods
test
adc
repnz
sar
fs
cmp
mov
outsl
jns
orl
popf
xchg
not
mov
inc
int
xchg
jo
mov
scas
xchg
repz
xchg
push
repz
xchg
aaa
xlat
fadd
imul
lahf
fidivs
cmp
mulb
jae
push
js
addr16
or
cmpsb
lcall
mov
mov
sub
sti
and
push
data16
xchg
mov
clc
addb
jno
sub
sahf
std
inc
ss
test
lods
mov
ds
jl
push
cli
pop
cmp
test
pushf
ljmp
stos
imul
push
cmc
cli
std
roll
sbb
jns
pop
xchg
jno
stos
negb
jge
add
repz
shr
insb
mov
push
into
ds
popf
loope
mov
les
jecxz
add
mov
inc
fnstsw
mov
or
pop
clc
outsb
outsb
faddl
pushf
sub
lock
mov
inc
mov
out
js
outsb
testb
ror
imul
pop
mov
jg
js,pn
test
in
inc
aad
aas
out
and
lret
jb
repnz
out
sbb
lcall
test
jle
dec
sbb
fadds
dec
push
xor
fs
xor
adc
inc
das
cmp
sbb
adc
xor
mov
orl
mov
movsb
pop
adc
leave
imul
lret
sbb
aam
pop
jle
or
ds
mov
rcll
mov
sahf
arpl
push
dec
popa
jae
icebp
sbb
insb
insl
les
repnz
and
jno
and
fistpl
cmp
cmpsl
in
fistps
sub
sbb
inc
mov
aad
sub
jns
jno
adc
daa
dec
imul
pop
pushf
jge
cmp
adc
subl
pop
add
cmpsl
push
inc
cwtl
imull
pop
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
jbe
push
cmp
stos
xor
sti
repz
push
pop
cmp
mov
adc
lods
cli
adc
xor
pop
fstp
shlb
adc
pop
repnz
or
xchg
dec
sub
jmp
fsubl
fbld
int3
mov
sbb
jle
lahf
in
dec
into
jnp
pusha
fiaddl
icebp
iret
fwait
mov
sub
cmpl
jae
xlat
es
insb
mov
scas
pushf
mov
js
dec
adc
sbb
das
dec
std
push
loop
fcmovbe
int3
pop
mov
or
dec
or
sbb
loope
push
pop
mov
adc
fsubrl
or
cmpsl
adc
rcrb
jae
out
jmp
fmull
lret
fwait
pop
fwait
push
in
jl
pop
xor
and
dec
mov
das
ja
xor
pop
sbb
push
jne
sbb
mov
xchg
jb
jecxz
sub
mov
lds
mov
ret
adc
ret
inc
fsubrs
test
sub
mov
push
sbb
insl
repz
and
adc
imul
sahf
push
ds
pop
sbbb
icebp
xchg
faddl
leave
lock
push
aad
and
test
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
cmc
mov
