sbb
add
adc
jne
std
push
mov
inc
aaa
cmc
retw
lock
cmp
test
adc
lret
stos
inc
mov
dec
das
jmp
dec
mov
mov
cld
lea
test
or
push
daa
xlat
pushf
mov
pop
xchg
loope
sbb
lods
scas
or
mov
mov
xor
mov
popf
enter
jo
mov
testb
cltd
jno
or
and
fwait
lods
sbb
push
jo
out
cld
add
icebp
push
xchg
mov
fyl2x
shrb
cli
and
mov
sub
loop
pop
mov
repnz
dec
and
fnstcw
in
dec
push
shlb
push
push
lock
test
mov
test
test
xchg
xchg
mov
repz
push
cmp
jbe
out
adc
xchg
call
daa
mov
xchg
popa
aad
cmp
dec
mov
cmpsb
sbb
jl
int3
movb
xchg
mov
enter
or
cmp
dec
repnz
adc
add
mov
aam
dec
cwtl
outsb
inc
js
adc
jmp
push
lods
clc
mov
xor
pop
aaa
ss
and
pop
rclb
bound
out
or
fs
jl
push
mov
je
pop
mov
ljmp
shrb
add
jae
fcmove
loopne
xor
fwait
cltd
arpl
loop
popa
or
or
mov
lds
cld
jo
out
jle
fistps
es
in
insl
dec
mov
call
jbe
pop
jns
mov
lret
clc
sbb
and
lcallw
fwait
push
mov
xlat
inc
push
push
mov
cmc
xchg
incl
sbb
pop
inc
mov
shl
cli
inc
lds
test
gs
push
les
mov
xor
mov
xchg
pop
sbbl
out
and
aaa
xchg
addr16
pusha
adc
sbb
test
inc
mov
ja
out
pop
push
sbb
in
jp
icebp
sbb
xlat
mov
jns
push
pop
lea
aaa
imul
imul
mov
adc
rcrb
fwait
in
adc
dec
outsb
xor
and
leave
addr16
in
xor
adc
call
push
sbb
repnz
xor
ja
mov
in
ret
xchg
mov
punpcklwd
scas
scas
mov
jle
loopne
xor
push
and
fs
mov
icebp
mov
and
jg
add
cmc
lahf
cld
fdivrl
sbb
and
jle
xchg
adc
pop
inc
outsl
add
xchg
lretw
divl
lea
push
shll
sbb
fimull
shll
mov
dec
pop
out
mov
adc
inc
mov
cs
xor
outsl
sahf
push
clc
les
andl
adc
movb
out
push
ds
jb
and
mov
mov
mov
cmpsb
xchg
add
fnsave
jns
jle
and
jge
repnz
dec
sbb
test
pop
repz
roll
cmp
sub
or
sub
sub
cmp
sbb
push
lret
fmulp
sahf
in
fsubr
fwait
subl
fcomp
jp
pop
pop
add
ss
xchg
adc
sbb
mov
orl
push
popf
test
test
fwait
push
pop
dec
xor
or
mov
dec
xchg
pop
add
repz
ljmp
inc
popa
sbb
mov
out
movl
out
xor
movsl
cmpb
je
sub
cmp
shll
pop
sub
lea
jl
jmp
or
adc
pop
subb
jb
pop
ret
jbe
nop
stos
jb
adc
cs
xchg
gs
shl
sbb
inc
sbb
and
lahf
xchg
dec
shl
add
cmp
adc
add
and
popf
jmp
ljmp
lret
call
inc
pop
inc
dec
in
jno
shll
mov
lcall
push
aaa
pop
fisttps
mov
fsubs
jne
movsb
pop
dec
cmpsl
out
sub
orb
sarb
je
sub
int
call
adc
or
push
jo
jl
jg
mov
shrb
es
stos
sub
inc
sub
jbe
lret
loope
adc
sbb
lahf
rorl
bound
cmp
mov
addr16
inc
data16
mov
divl
add
mov
fildll
inc
es
sub
les
adcb
cmc
dec
and
push
and
fimuls
repnz
jecxz
fbstp
ja
out
cltd
pop
add
test
lcall
mov
sub
xchg
insl
jp
inc
push
inc
push
jns
addr16
rolb
jecxz
fsqrt
sbb
mov
clc
scas
xor
jno
test
sub
push
sub
xchg
imul
leave
std
xor
insl
pusha
xor
sbb
and
and
add
inc
or
or
adc
add
mov
sub
loopne
test
sti
cmp
sbb
inc
bound
cmc
insl
xchg
pop
add
mov
cmpb
cmp
push
mov
in
lea
adc
repz
fnstsw
pop
ja
pop
daa
cmpsl
mov
mov
and
pop
sarb
mulb
jns
xchg
pop
mov
mov
xchg
mov
fwait
lds
jnp
les
mov
jns
loop
rolb
mov
fstpt
xchg
enter
mov
pop
lods
push
fisubs
dec
jl
pusha
or
sub
cmc
fs
sti
mov
mov
inc
inc
dec
jb
pop
out
fildl
xor
loop
hlt
mov
jl
popf
pop
rcr
adc
scas
rolb
xlat
imul
hlt
stc
sbb
rcrb
daa
sub
sbb
and
das
lahf
cmp
dec
sub
out
pop
mov
les
js
xor
cmp
mov
adc
sub
push
mov
xor
push
test
dec
cmp
sbb
jle
mov
sub
in
add
out
lcall
lea
mov
shll
test
imul
push
mov
cmp
add
into
mov
out
lods
testl
sti
inc
into
shrb
cli
and
test
xor
pop
push
or
iret
jmp
nop
add
iret
aam
mov
sub
push
lea
sub
sti
test
xchg
mov
bound
fwait
mov
push
and
fsubrs
ss
sbb
pusha
add
mov
cmp
cmp
loope
xor
cmp
lods
lahf
xor
dec
dec
inc
jecxz
fwait
cli
and
add
dec
aad
icebp
je
sahf
pop
mov
fidivl
sub
cld
in
and
jbe
in
js
decb
cmpsb
push
fmulp
jle
sbb
mov
xchg
fstps
cmpsl
in
fcomps
dec
ljmp
shl
popf
shlb
jns
sbb
pusha
fcmovb
test
pop
sahf
inc
loope
sbb
adc
xchg
in
pop
push
jnp
aas
aaa
pop
sbb
adc
dec
daa
ljmp
sarl
sub
add
es
dec
in
movsl
sub
adc
lret
pop
jg
hlt
fsubl
and
je
jbe
mov
xchg
ret
cs
sub
xchg
js
inc
sbb
and
hlt
mov
lods
popf
mov
aas
call
or
push
gs
lret
add
pop
clc
imul
pop
cmp
repz
stos
aad
add
push
push
sti
xchg
xlat
das
mov
jmp
and
jge
fldenv
inc
add
imull
popw
test
movsl
in
xor
stos
xlat
cltd
dec
push
jl
aaa
dec
or
mov
jl
addb
pushf
out
movsl
lods
fldl
sti
push
test
push
int3
pop
aas
test
sti
ljmp
pop
loope
bound
shl
pusha
idivl
insl
sbb
mov
pusha
cmp
jno
jns
cwtl
xchg
jno
sub
push
xchg
les
dec
and
sub
clc
insl
pop
or
cmpsl
jp
xor
jns
test
jg
test
ja
or
jp
jg
test
mov
loopne
pop
push
inc
movb
stos
jne
or
adc
inc
daa
and
pop
sbb
lret
in
mov
push
mov
in
mov
sbb
in
int3
in
std
outsb
out
incb
dec
mov
mov
outsl
cmc
int3
mov
push
cltd
sbb
popf
xchg
shll
adc
xor
shrl
loop
pop
and
xchg
lret
xor
cltd
ja
xor
sub
mov
mov
gs
fistl
outsl
sub
les
stos
push
push
int
out
and
mov
jae
loope
out
push
mov
mov
dec
xchg
hlt
test
aaa
mov
daa
cli
jne
mov
ss
leave
mov
jle
fcomip
mov
mov
lds
xchg
mov
call
mov
jno
pop
xor
lds
cmp
je
sub
outsl
mov
and
shrl
lret
mov
cmc
cltd
xor
test
lahf
jnp
push
xor
dec
and
jbe
ret
sti
aaa
and
std
jne
xchg
or
dec
jmp
cmpsb
mov
xlat
cmp
jbe
les
adc
stos
iret
xchg
xchg
dec
into
arpl
jmp
dec
cmpsl
mov
add
inc
mov
cmpsl
rcll
dec
inc
xlat
out
test
ss
je
jns
test
insl
repnz
movsl
xchg
insl
sbb
adcl
cmp
pop
imul
sub
sahf
mov
pop
insb
inc
push
rcrb
jae
sbb
push
cmovns
cmp
sub
divl
jo
jge
std
xchg
jno
or
push
add
popf
leave
fimull
pushf
leave
andl
mov
bswap
lfs
push
scas
adc
mov
sub
bound
int
std
mov
iret
mov
hlt
add
sub
jl
lahf
call
xor
push
js
es
lcall
insl
pop
aas
out
sbb
aad
or
and
out
ret
push
mov
add
mov
sarl
movsb
sldt
mov
insl
cmp
sub
adc
adc
std
ret
sub
imul
push
nop
inc
inc
pop
pop
insb
pop
aas
or
in
xchg
sub
sbb
lahf
xchg
cltd
arpl
mov
pop
sub
or
shrb
push
shrl
test
flds
push
or
iret
and
mov
pop
cmp
mov
sbb
cltd
fistpll
fldenv
add
in
rclb
lods
ret
outsb
lcall
mov
out
cmp
js
push
sub
inc
add
lock
mov
mov
shlb
inc
xchg
dec
bound
add
sbb
xchg
imul
pop
mov
mov
lock
stc
pushl
push
cld
mov
dec
xlat
adc
cwtl
in
lea
testl
aaa
js
test
lcall
mov
jo
dec
in
xchg
adc
sub
hlt
jae
cmp
das
addr16
jmp
jg
rorb
mov
xchg
stos
xchg
cmpl
or
mov
stos
dec
mov
xchg
in
inc
aaa
fwait
mov
fninit
lahf
xor
xor
loopne
mov
fwait
sub
jb
push
cmpsl
incl
push
inc
fs
and
dec
imul
outsl
inc
ficoml
adc
cmp
je
adc
push
imul
inc
bswap
std
xchg
out
cmp
icebp
ljmp
bound
icebp
bswap
fwait
std
adc
stos
jbe
test
hlt
int3
mov
mov
jae
in
sub
popa
push
ss
push
insb
inc
test
pop
in
scas
in
addr16
adc
outsl
loope
sub
mov
test
pop
clc
sarb
icebp
inc
xor
mov
sbb
and
lret
rcll
jmp
sbb
inc
cmp
sbb
jmp
idivb
jo
loopne
mov
in
ret
shll
jo
pusha
mov
loopne
inc
js
cmp
jmp
das
lea
cmp
outsb
xchg
mov
or
sub
mov
xor
inc
pop
inc
push
xchg
out
in
jae
adc
out
ficompl
aaa
inc
iret
daa
daa
frstor
xchg
xor
fsubrp
jmp
ja
out
add
mov
xchg
aad
and
inc
push
insl
lret
xchg
pop
enter
call
pop
movsl
dec
add
sbb
or
loop
cmp
sub
sbb
stc
hlt
mov
pop
or
jne
jle
xor
add
fdivl
loop
cltd
xchg
cld
popf
lcall
daa
rol
iret
or
rclb
sarl
push
pop
mov
pop
int
dec
xor
fiadds
adc
dec
mov
cmc
cmp
aaa
test
aad
and
xchg
gs
in
fdivl
pop
cmp
ds
stos
movsb
adc
and
ret
outsb
sbb
lahf
repnz
test
inc
xor
jl
lea
addl
inc
xor
push
cli
lret
or
out
sbbb
pop
flds
push
cmp
cmc
lahf
xor
dec
out
push
adc
out
fwait
imul
or
sub
bound
xor
add
aas
cli
add
rorl
pop
out
cmp
mov
mov
adcb
int3
pop
lds
mov
xchg
sub
movsb
push
or
jb
add
jb
rclb
add
fimull
jnp
sub
xchg
hlt
les
inc
pop
pop
rolb
lods
sbb
rcrb
je
call
cltd
std
mov
add
addb
out
cmp
insl
flds
lods
icebp
dec
icebp
call
or
pop
push
pop
popf
stc
and
test
fwait
rclb
movl
adc
aaa
fwait
cmc
dec
mov
add
cltd
sub
into
jo
push
jecxz
addr16
pop
sub
nop
dec
mov
add
adc
mov
mov
xchg
lods
mov
mov
outsb
lea
dec
jp
xchg
xor
mov
stos
addr16
cmpsl
push
mov
cwtl
mov
mov
stos
pop
xor
mov
jg
lea
call
lret
scas
rcrl
outsb
add
mov
call
rolb
jmp
sub
xlat
getsec
popf
insl
mov
hlt
jne
call
in
iret
sub
jg
int
and
rclb
mov
push
sub
outsb
mov
rcl
nop
icebp
jns
out
push
dec
cmp
xor
dec
jp
ffreep
mov
lock
aam
or
lret
je
cld
mov
lock
inc
out
jle
ret
jp
add
or
inc
cs
mov
sbb
mov
pop
sbb
jl
lret
fiaddl
clc
mov
or
jb
dec
lret
ja
shrl
inc
rclb
and
les
pop
mov
insl
mov
std
sbb
push
lret
pusha
fists
inc
xlat
cmp
dec
cmp
ret
repnz
movsb
loope
std
pshufw
xchg
lret
test
cmc
pusha
lret
shlb
bound
push
dec
add
xchg
pop
jo
jmp
cltd
cs
cmp
jb
iret
pop
fwait
inc
push
cmp
nop
dec
lret
pusha
cld
or
xchg
les
daa
sbb
pushf
pop
imul
jne
popa
jmp
cltd
insb
testb
sub
ret
dec
jae
cs
xor
fisubrs
cmpsl
inc
loop
inc
cmp
dec
dec
pop
cmp
and
adc
mov
xchg
mov
aam
pop
add
pop
lods
dec
jb
pop
subl
mov
mov
stc
les
dec
cmc
scas
xchg
adc
subl
add
cmc
mov
adc
stos
stos
sub
mov
cld
mov
rclb
or
loop
dec
mov
mov
xchg
jns
pop
out
fs
and
sub
jbe
jp
jg
andl
mov
dec
and
scas
int3
test
fmulp
and
int3
xlat
lea
leavew
insl
imul
add
and
test
cmp
shll
jo
push
and
clc
bound
xor
arpl
imul
insl
xchg
push
jns
mov
call
lea
repnz
mov
mov
jbe
sbb
in
sbb
add
push
xor
repz
mov
sbb
jae
stos
aas
mov
fists
xor
es
repnz
pop
std
cmc
xchg
and
out
mov
and
xchg
nop
dec
test
jns
sub
js
xor
jmp
cs
fdivrp
pop
rcrb
lock
push
test
cwtl
sbb
cmpsl
fistl
enter
xchg
sbb
inc
lret
mov
gs
ret
jmp
das
push
popa
fucomip
cmp
pop
fstps
jno
pop
lret
fldl
inc
test
pop
cmc
shlb
or
or
sar
add
out
sbb
imul
int3
subl
ljmp
notb
sbb
adc
xchg
inc
sub
mov
push
cmpsb
jmp
mov
mov
das
mov
test
pusha
rcl
int3
fstl
pop
int3
rcl
stos
sub
stc
jl
inc
xor
push
cmc
rclb
adc
adc
sbb
add
xor
pushf
push
xchg
mov
pop
cs
test
mov
cltd
jge
popa
xchg
insb
lahf
inc
sub
cmpsb
lret
ds
and
out
and
in
insl
mov
jbe
movsb
out
aas
mov
pushf
les
stc
push
lea
add
js
fwait
pop
ret
pop
mov
sbb
mov
xor
jnp
ss
mov
mov
dec
iret
pop
imul
dec
movsb
cmp
ds
dec
dec
pop
pop
cli
jns
inc
pop
fisubrl
sti
loope
xlat
inc
jne
pop
jb
pusha
in
xchg
xchg
test
adc
insl
mov
xchg
and
sti
mov
mov
test
push
mov
and
loopne
inc
movsl
sbbb
dec
out
loopne
jl
call
add
mov
dec
es
cld
jecxz
sub
frstor
roll
in
dec
int3
in
add
cmp
jns
or
mov
loope
jns
enter
push
ss
jne
movsb
push
jmp
nop
movsl
pop
int
push
xchg
pop
dec
sub
repz
insl
fsubrl
sub
pop
sub
test
pop
pop
aam
or
xor
ja
sbb
test
lock
daa
jb
sbb
insl
enter
pusha
std
sbb
jbe
lods
push
test
cmp
xchg
dec
les
jae
scas
jbe
pop
shll
shrb
mov
in
dec
cli
stc
pop
repnz
add
adc
cwtl
ficomps
jge
xchg
pop
movlps
dec
sub
push
xchg
sub
repz
sub
fmull
jge
cmp
scas
mov
mov
sub
cli
jmp
rorl
inc
std
test
or
negl
aas
in
call
mov
jg
imul
jo
les
sub
inc
dec
ss
or
lea
sub
stos
addb
rorl
vcvtsi2ssl
test
int
mov
inc
es
jns
mov
or
sbbl
repnz
in
mov
pop
lret
mov
dec
imul
sub
dec
push
loope
std
loopne
cmp
in
add
inc
cwtl
jge
push
int3
clc
or
add
and
xorl
roll
hlt
pop
xor
pop
pop
stos
iret
xor
mov
sbb
lea
cmpsl
out
in
lds
cld
lods
test
bound
cmc
dec
bound
rorb
ja
sahf
fst
outsb
mov
in
ds
push
loop
sub
sub
popf
pop
xchg
stc
sbb
hlt
and
repz
jge
ds
ljmp
push
push
mov
lods
inc
int3
jmp
jge
mov
pushl
xchg
repz
inc
imul
es
cmp
pop
rcr
in
adc
mov
dec
pop
inc
jno
ret
call
pop
lret
and
xchg
add
daa
and
js
mov
mov
aaa
shlb
mov
arpl
scas
push
jns
jecxz,pn
movsb
jg
inc
dec
push
jge
cmc
sbb
cmp
xchg
outsb
imul
loope
xor
es
push
mov
adc
repnz
aad
push
flds
in
add
pop
js
sbbb
shl
and
je
xor
jno
int3
scas
addb
dec
dec
xchg
xchg
enter
pop
sub
mov
jo
xor
inc
or
cmp
xchg
xlat
fisubrl
ljmp
movsl
bound
in
sbb
sub
imul
dec
or
sub
dec
push
sbb
test
shlb
mov
pop
loope
lret
enter
jg
jns
aas
sarb
int
cs
sub
mov
lret
in
or
mov
jl
lds
movsb
repz
jl
mov
fcmovne
pop
xchg
ja
jbe
sub
xchg
jo
loop
or
mov
cmp
pop
xor
fadds
lods
leave
gs
mov
orl
icebp
decl
add
imul
ja
mov
mov
pop
sahf
ficomps
push
fdivr
cmpsb
arpl
xor
pop
mov
ss
adc
and
out
insl
mov
mov
adc
inc
push
outsl
inc
sti
dec
adcl
leave
xchg
ret
adc
push
cld
shlb
fdiv
xchg
sbb
jmp
jl
inc
out
fwait
cld
cmp
sarb
mov
pop
xorb
stos
aaa
out
inc
loopne
mov
jle
push
xor
cmpsl
int3
lea
add
test
cltd
pop
mov
insl
das
fldenv
inc
and
fldenv
imul
ja
jae
lcall
adc
out
testl
lock
add
lahf
lock
pop
out
lret
or
sub
pop
aas
imul
mov
xchg
ret
ss
jp
enter
mov
mov
das
jmp
add
dec
or
mov
mov
fldt
xor
dec
fs
jno
ds
call
mov
ret
jne
pop
cmp
jmp
ret
push
add
sbb
and
sahf
sub
das
pop
mov
popf
sbb
jne
cmp
adc
incl
dec
jg
push
mov
test
fsts
cmovbe
mov
scas
mov
pop
shrb
ret
mov
sti
js
pop
xchg
lods
ljmp
add
jne
pop
rcrl
int3
stc
jp
pop
test
push
lods
test
push
pop
cmpsb
xchg
jnp
add
out
test
pop
pop
loope
sbb
dec
lods
ja
es
xchg
bound
pop
inc
mov
xor
jp
pop
add
insb
or
pushf
movsb
and
mov
das
cmpsl
lret
rcll
mov
ss
sahf
mov
imul
dec
jb
pushf
ret
in
and
mov
or
jnp
pop
cmp
rorl
jo
into
lret
cmp
mov
test
jb
outsb
lahf
addr16
push
out
lock
xor
lods
add
adc
lds
add
sub
cmp
inc
daa
add
xchg
fcmovne
sbb
pop
test
dec
test
xchg
jae
sbb
enter
int3
sbb
mov
lcall
adc
loopne
dec
jecxz
sbb
sahf
mov
shrl
vpunpcklbw
repnz
mov
inc
jno
mov
jecxz
pushl
jmp
fsub
ja
sti
es
add
mov
shrl
xor
std
xchg
mov
xchg
in
pop
jnp
xchg
pop
xor
stc
sbb
jecxz
mov
mov
sbb
dec
push
ja
ret
in
aad
mov
pop
pop
push
sub
fldl
push
mov
aaa
add
sub
fdivrs
dec
and
es
shrb
add
jnp
jno
pop
movsl
ret
cmp
pop
imul
andb
jp
sub
fildll
mov
fcomip
sub
and
cmp
cmp
or
roll
test
xor
shrb
mulb
orb
ret
imul
sbb
fs
jbe
jl
stc
dec
popf
cmp
mov
mov
lods
sbb
adc
lock
lods
jge
jmp
inc
jnp
outsb
rcr
jg
insb
andl
add
sub
clc
test
ja
aam
pop
jle
xor
push
xor
pop
insl
mov
jo
shr
scas
cwtl
fists
jno
mov
fs
dec
adc
dec
push
inc
test
cmp
bound
adc
and
lahf
mov
push
add
call
mov
cld
mov
imul
shll
dec
jns
pop
imul
mov
clc
addl
sti
add
aam
cmp
mov
add
push
sub
int
aam
repz
mov
pushf
lcall
xorb
mov
out
cld
mov
aad
dec
or
sub
lret
jmp
in
cmpl
xchg
push
das
jnp
mov
cwtl
stos
push
pop
es
inc
mov
or
push
sbb
xchg
mov
cltd
cmc
and
xchg
hlt
mov
adc
mov
outsb
xchg
sbb
mov
or
in
repnz
add
mov
xor
inc
push
pusha
mov
xchg
push
lods
andl
rcrl
dec
jns
xchg
jne
pop
or
dec
fisubs
repnz
stos
push
inc
aaa
dec
and
shlb
add
out
js
mov
sbbb
inc
mov
pop
cmp
jge
in
and
xchg
or
push
aaa
adc
stos
inc
ret
pop
or
xor
xor
int3
inc
ss
fldcw
dec
cmpl
mov
int
add
pushf
xlat
xorl
mov
fisubs
mov
push
pop
lods
pop
push
push
add
ror
xchg
std
enter
xor
cmp
insl
push
test
adc
scas
shl
cmp
pop
mov
dec
and
cmp
and
sbb
xchg
mov
fcompl
sub
xor
loopne
movsb
mov
js
pop
setbe
jo
leave
cmp
ljmp
adc
dec
jnp
call
pop
xchg
add
cmp
push
inc
fcomps
xchg
pop
jmp
jg
jge
mov
rolb
jns
mov
mov
rorb
push
movsl
loope
cmpl
mov
jno
lret
es
dec
push
je
out
call
jmp
dec
mov
push
mov
repnz
scas
pusha
test
rorb
hlt
daa
adc
xchg
jo
cs
dec
loop
js
fdecstp
jns
rclb
lock
or
xlat
cmpsl
aam
inc
fs
mov
cmpsl
mov
outsb
adc
lcall
dec
mov
dec
xor
rorl
inc
in
outsl
cltd
out
stc
xchg
sbb
ja
inc
lods
jnp
mov
outsl
ss
div
and
stos
aad
in
and
mov
mov
sti
jbe
arpl
jmp
repnz
xchg
cmp
push
fwait
into
dec
xlat
mov
incl
lock
add
stos
or
je
push
cli
xchg
pop
subps
std
ja
fcoms
call
jecxz
push
mov
or
xlat
xor
cld
addr16
xchg
push
inc
popf
mov
out
pop
sub
xor
pop
lods
cmp
packuswb
pop
sbbl
jge
mov
imul
xchg
fucom
jge
cwtl
push
loop
add
jle
push
cmp
pop
jo
pop
pop
inc
imul
cwtl
pop
enter
rcrl
inc
jg
fs
adc
rolb
xor
bound
cltd
addr16
andb
loop
sbb
adcl
cmpsb
shrb
inc
into
jmp
out
jb
popa
sub
ljmp
pop
or
mulb
add
push
xlat
fwait
hlt
insl
fwait
push
mov
and
xor
cmp
jle
enter
shl
aam
cmp
hlt
cmpsb
outsb
or
icebp
jo
js
lret
and
bound
sbb
test
popaw
ljmp
out
xchg
popf
idivl
add
mov
cmp
shrl
repnz
push
loop
push
xchg
repnz
jmp
and
push
lret
adc
or
in
push
testl
mov
ror
adc
cmp
push
pop
mov
and
mov
loope
testb
inc
dec
repz
imul
mov
imull
push
movsl
dec
and
jl
lahf
push
movsl
out
jg
jo
dec
mov
lods
daa
cmpsl
in
or
xor
aaa
subb
jecxz
add
stc
pop
imull
test
cld
nop
or
adc
sbb
ja
cwtl
fidivrs
aam
pop
ljmp
pop
jo
inc
jl
mov
pusha
pop
loop
sub
mov
xor
les
pop
test
pop
xlat
adc
mov
jae
mov
xor
fdivr
cmp
cmp
inc
xchg
mov
in
ja
inc
stc
push
or
int
jbe
xchg
pop
ficomps
fidivs
jg
jmp
pop
out
mov
mov
push
xorl
pop
sbb
or
cmc
imul
cmpsl
adc
test
add
jb
adc
xor
bound
test
sub
mov
sub
jne
in
sub
orb
or
mov
daa
push
push
cs
add
sub
sbb
lea
push
mov
aaa
inc
lds
dec
pop
mov
sbbb
out
jp
sahf
dec
pop
or
inc
je
addr16
cwtl
das
in
ret
cmp
cltd
xchg
cld
mov
push
int
cmp
rcll
lret
mov
mov
dec
push
adc
lret
sbb
les
stos
popa
mov
push
cwtl
fwait
mov
xchg
xchg
xor
daa
movsb
lret
cmc
lret
fisttps
bnd
cli
jno
xor
sub
jb
mov
faddl
movsb
fdivs
lock
mov
or
scas
add
mov
clc
xor
and
mov
insb
je
in
ret
push
clc
and
or
jp
popf
sti
add
jle
sub
and
push
in
push
cs
sbb
sub
jle
fdivp
in
push
inc
int3
add
jo
sbb
stc
adc
xchg
ljmp
fdiv
push
shlb
sub
test
xchg
mov
xchg
push
jo
movsl
jo
ret
adc
dec
shl
insb
fists
jp
pop
xor
div
mov
and
adc
cli
cltd
sahf
pop
push
call
outsb
sbb
jo
repnz
and
adc
pop
lret
add
xchg
sti
and
push
out
jns
int3
outsl
pop
xchg
pop
jmp
or
repz
push
enter
test
fs
mov
cmp
subb
pop
xchg
imul
rcl
sbb
inc
std
ss
data16
scas
jne
subl
loop
aaa
inc
sbb
das
push
push
daa
xor
jno
leave
jns
adc
jno
mov
xchg
sub
sbb
mov
pop
sub
sbb
das
pop
nop
bound
fildll
add
mov
lods
js
dec
push
mov
shrb
add
xor
xchg
pop
pop
outsb
lock
mov
sbb
and
lea
pusha
fwait
rcr
push
call
ljmp
jno
mov
sbb
xor
lret
jb
jp
cmpsb
mov
hlt
and
pop
test
je
pop
mov
mov
jle
scas
popf
or
stos
dec
pop
imul
and
mov
clc
sbb
adc
mov
sbb
rorl
mov
in
pop
loope
lret
inc
lahf
ds
rcrb
xchg
es
mov
sub
sub
je
fucom
pop
sahf
stos
push
jp
adc
xlat
je
and
cli
mov
sbb
add
je
mov
mov
loop
mov
fistpl
jecxz
das
xor
pop
stos
inc
in
add
push
aaa
xor
rcll
pop
lods
push
adcl
lret
in
fxch
cmp
pop
sub
and
lods
xchg
add
fcmovnbe
push
push
shlb
mov
mov
mov
and
test
push
cmp
fistpll
xor
subl
imulb
out
out
es
repz
push
icebp
sub
jp
xor
in
lods
lock
jb
add
ljmp
test
frstor
repz
cmpsl
mov
xlat
data16
push
shlb
pop
sahf
mov
das
js
mov
rep
cmc
adc
cmpsl
xor
cltd
sbb
int3
inc
sbb
adc
gs
xor
stc
sbb
sub
xor
inc
dec
fwait
cmp
adc
stos
xchg
cld
sub
pop
rorl
mov
lods
and
pop
fcmovu
sub
ret
lret
aaa
cld
and
imul
sbb
in
mov
test
fidivrs
gs
ss
mov
xor
sahf
iret
push
out
mov
mov
xor
xor
pop
fnsave
fs
stos
aam
push
xor
sub
pop
ja
push
repnz
fcomps
sub
or
pop
inc
popl
cmp
sub
add
xchg
divl
push
nop
jmp
add
adc
jnp
jnp
stc
mov
xlat
push
pop
mov
bound
movsb
or
pushf
inc
incl
fwait
call
inc
mov
pop
rolb
test
mov
push
movsb
mov
addr16
pop
pop
push
jae
test
popa
dec
fisubl
call
shr
mov
int
in
lret
mov
dec
in
push
stos
mov
mov
jno
ja
jge
add
add
int
ret
push
mov
test
add
in
shrb
je
sbb
std
jg
js
add
push
mov
jle
jb
int
xchg
push
or
imul
mov
jge
js
xchg
inc
push
jo
ss
jecxz
pop
mov
lret
add
pop
lret
inc
popa
loope
mov
fldcw
stos
xchg
cmp
xchg
push
es
das
in
cli
negb
pop
cld
sbb
scas
std
dec
and
sbb
jle
inc
dec
loope
lret
dec
jg,pt
sbb
repz
sbb
ret
fdivrl
pop
add
xor
pop
jo
jb
sub
cwtl
xchg
and
lods
jnp
mov
sub
pop
or
jp
mov
into
out
pop
push
pushf
push
mov
and
stc
popf
shr
sub
scas
in
mov
pop
adc
pusha
out
push
adc
lock
sti
and
push
cmp
call
add
ret
sbb
mov
ret
in
je
push
fcompl
in
insb
mov
sbb
cmpsl
les
shll
lea
jbe
stos
out
mov
outsl
test
sbb
lret
aaa
scas
in
cmp
pop
out
mov
and
xchg
js
push
adc
test
out
jp
outsb
add
mov
mov
adc
sub
mov
cld
and
adc
movsl
pushf
mov
adc
pop
loopne
ret
mov
add
js
jmp
lret
lock
bound
ffreep
push
adc
inc
sahf
xchg
repz
xchg
cmp
fadds
mov
push
sbb
mov
lret
out
out
fdivl
insl
dec
dec
bound
sbb
inc
cmpsl
scas
das
aam
pop
push
out
push
iret
scas
sbb
inc
adcl
sbb
jecxz
and
mov
push
and
push
push
sub
xchg
mov
push
stos
jne
mov
in
jnp
lods
fneni(8087
adc
pushf
in
jg
push
mov
sar
jge
insb
mov
dec
fsubs
inc
nop
jb
cmpb
pop
inc
jns
ja
negb
cltd
fldenv
das
mov
pop
cli
mov
decl
or
jle
ja
pop
lahf
sbb
fsts
in
dec
arpl
mov
push
mov
mov
sub
scas
leave
xchg
adc
dec
repnz
dec
les
mov
insb
pushf
mov
outsl
test
dec
xchg
pop
into
push
fcoml
or
cmp
xchg
dec
roll
sbb
repnz
mov
stc
fldl2t
push
mov
out
sbb
ss
mov
mov
pop
popf
aam
jecxz
shrb
mov
cwtl
jnp
iret
cltd
ds
add
xor
jns
movsl
addr16
xor
sub
int
or
imul
xchg
call
loope
rolb
pop
outsb
add
mov
xchg
mov
stc
cmp
mov
xchg
sub
fdivl
xor
adc
jl
push
faddl
xlat
jmp
jns
in
out
sbb
xor
adc
out
sub
jl
mov
dec
dec
jae
dec
jno
popf
test
jno
xchg
enter
sbb
inc
or
sbb
mov
data16
scas
icebp
aaa
mov
fsubp
pop
dec
test
out
inc
cs
mov
sbb
int3
jne
push
sub
sbb
lock
mov
in
cmp
lcall
lods
mov
repnz
jmp
pop
dec
jge
mov
jl
dec
ret
add
add
pop
sbb
pop
stc
xor
mov
jno
shlb
fldt
jo
adc
jns
sub
xchg
jnp
fcoms
ficoml
pop
dec
cmp
cmpsl
jne
or
fwait
and
in
jg
lret
xchg
push
dec
inc
loop
sbb
cmp
fdivrs
sub
xor
push
subb
mov
js
push
inc
das
fists
mov
pop
sahf
into
mov
and
mov
insb
repnz
jg
mov
or
jmp
pop
cmc
sahf
mov
mov
xchg
test
jp
xor
fwait
adc
popf
sbb
or
cmp
xchg
fidivrs
cmc
mov
cld
mov
scas
rcll
jb
dec
imul
fmull
sub
roll
js
cmc
popf
lods
mov
adc
jmp
sahf
pusha
xchg
and
push
data16
adcl
pop
mov
push
fwait
ret
push
dec
xor
inc
or
out
mov
ljmp
clc
cltd
adc
pop
mov
daa
pop
pop
cmp
fbld
push
cmp
sahf
or
dec
test
and
mov
pop
pop
or
data16
add
sbb
push
jns
push
hlt
mov
mov
dec
sbb
repz
ja
lock
scas
std
xchg
adc
push
jge
pop
fdivrl
leave
mov
dec
daa
jne
mov
testb
cmp
outsb
notl
push
cmpsb
lea
jo
push
test
xchg
or
and
xor
pop
push
cmp
cld
xor
daa
popa
call
test
pop
roll
fcoml
pop
add
lds
cld
push
or
adc
push
movsb
movsl
or
xchg
imul
iret
subl
jp
sbb
xchg
push
mov
or
ret
addr16
test
mov
inc
mov
pop
adc
movl
in
and
scas
scas
pop
push
add
jb
mov
mov
mov
jl
push
mov
cli
or
repnz
push
das
jns
in
std
bound
les
mov
out
push
mov
out
fcoml
pop
add
add
xor
xor
xor
lret
pop
fisubs
iret
ss
xchg
test
sbbb
adc
push
inc
fsubrs
push
dec
mov
enter
es
mov
and
adc
daa
mov
data16
mov
jecxz
in
cmp
shlb
sar
imul
mov
dec
incb
pushf
push
andb
es
lret
jecxz
sub
inc
mov
and
fimull
js
sub
jmp
xchg
sbb
xchg
mov
int
or
mov
cld
scas
add
test
sbb
or
adc
jl
mov
xchg
sbb
in
aas
mov
mov
imul
lods
lret
xchg
lret
push
mov
int3
in
lcall
push
dec
mov
add
les
inc
and
in
pop
pop
hlt
out
mov
fstpl
fstl
or
inc
jne
mov
push
loopne
xor
push
push
push
notl
mov
sti
stc
notb
xor
pop
mov
mov
dec
or
jl
pop
ret
add
leave
pop
and
aas
pusha
test
stc
xor
pop
push
push
push
ljmp
stos
das
outsl
in
push
jo
dec
dec
arpl
xchg
lds
pop
icebp
into
fimull
or
add
and
add
xchg
mov
mov
arpl
push
lods
jne
xor
adc
cmp
pop
dec
xor
cmp
loop
mov
inc
add
fsubl
jns
iret
loop
sub
das
pop
out
mov
sbb
cmp
sub
xchg
cmp
mov
push
pop
and
jns
scas
lcall
mov
std
push
cmp
cmp
adc
pop
mov
mov
ljmp
pop
popl
shll
sbb
jl
adc
pop
and
rolb
test
pop
or
or
movsb
jnp
loop
mov
push
pop
xor
jmp
mov
clc
or
out
rorb
pop
inc
fwait
dec
pop
call
int3
gs
sahf
stos
jb
adc
and
nop
divl
jg
cmpsl
fidivs
pop
mov
out
subl
pop
ljmp
hlt
outsl
xor
mov
rolb
scas
mov
cli
lock
scas
repz
ss
adc
test
mov
dec
add
pop
loope
xor
cltd
mov
das
dec
adc
stc
inc
stc
fistpl
push
xor
aad
cmp
clc
mov
mov
sti
sbb
fldcw
popl
cmp
daa
jbe
xor
push
dec
outsb
outsb
xchg
sahf
pusha
sbb
jo
into
sbb
or
cvtps2pd
push
lret
push
sti
notl
ret
sbbb
sbb
xor
movb
aam
pop
stos
lcall
sti
imull
inc
xor
pop
test
sub
roll
jo
push
aas
rorl
aad
orb
pop
iret
imul
cli
lret
aam
xchg
enter
pop
ret
ret
ret
and
lds
movsb
imul
cmp
bound
xor
outsb
mov
test
addr16
cmpsb
mov
repz
adcb
loopne
mov
out
xor
xchg
cmp
adc
jbe
mov
pop
ret
ret
pop
cmp
cmp
pop
lret
fwait
out
mov
or
mov
push
ja
pop
xchg
mov
imul
mov
lock
int
dec
xchg
mov
cmpb
cmp
shll
fiaddl
por
jbe
xchg
pop
push
jo
xchg
test
cmp
xor
inc
mov
or
lock
movsb
lods
insl
or
adc
clc
inc
jle
addr16
mov
pop
lret
shrl
mov
pop
xor
or
mov
xor
and
push
or
jae
ss
inc
imul
shrl
cmc
mov
jmp
lea
je
push
repnz
ljmp
mov
ds
fists
aas
sub
mov
xlat
xor
rcll
and
insb
add
stos
cli
repz
pop
incl
jns
fcoml
add
out
popf
mov
dec
loopne
adc
mov
jge
ss
inc
iret
lods
push
ret
xchg
push
cltd
push
pop
loope
mov
mov
aaa
jb
dec
lods
mov
mov
mov
test
xorl
push
cs
xchg
mov
pop
jge
addl
push
mov
flds
cwtl
adc
cmp
addl
lret
xchg
movsl
dec
sarl
out
cltd
xchg
ret
dec
sub
rorl
mov
jecxz
imulb
in
ja
push
push
jp
xchg
les
icebp
int3
pop
repz
arpl
mov
mov
roll
test
jp
push
push
je
mov
sub
lahf
mov
fidivl
sub
jmp
mov
nop
sbbl
add
mov
add
xchg
lods
stos
lahf
inc
bound
sub
push
mov
fsubl
pop
xchg
stc
imul
repz
or
xor
in
data16
pop
or
int
jp
lods
iret
lret
cld
lret
pusha
inc
mov
es
inc
data16
out
adc
icebp
push
lcall
ljmp
mov
outsb
out
pop
fisttpl
shll
arpl
cmp
adc
das
xor
pushf
sarb
js
pop
and
daa
daa
loopne
sub
movsb
xchg
push
fwait
repz
aaa
fs
in
bound
mov
cld
dec
pop
sub
call
adc
and
mov
xor
and
sbb
mov
push
inc
dec
adc
dec
in
outsl
test
pop
scas
pusha
push
sbb
xchg
inc
cmc
ljmp
inc
cs
pushl
shr
pop
int
leave
gs
sbb
sahf
mov
or
movsl
lahf
ret
mov
test
stc
push
mov
pop
mov
pop
out
jecxz
arpl
cmp
mov
sub
sub
mov
mov
cmp
and
mov
mov
inc
mov
adc
hlt
adc
add
and
mov
in
iret
or
outsl
cmp
inc
jno
mov
xchg
jbe
mov
and
cmpsb
inc
sbb
add
pop
jp
mov
insl
xchg
pop
dec
xchg
add
arpl
and
sub
mov
pop
mov
inc
std
sub
decb
inc
jbe
test
push
test
mov
xchg
call
pop
adc
pop
pushf
push
cmp
xchg
xchg
inc
inc
insl
inc
mov
add
push
es
iret
into
and
mov
cmp
je
mov
push
icebp
sub
sti
push
xchg
nop
inc
sbb
int3
mov
sub
fcoms
rcl
ljmp
in
mov
cwtl
sahf
loopne
inc
pop
add
add
mov
dec
mov
out
int3
mov
push
mov
fidivs
pop
add
iret
push
xchg
loop
mov
xchg
mov
push
fstpl
jmp
dec
ja
mov
jl
lods
test
je
call
out
jne
arpl
ret
pop
dec
xchg
popa
xchg
shl
loopne
or
xor
cmp
sbb
cs
pop
lcall
mov
pushf
scas
mov
rcll
push
sub
sbb
sarl
push
not
loopne
cmp
stos
ret
cltd
dec
sbb
scas
fbld
xor
mov
nop
xor
sub
mov
pusha
mov
cmp
ljmp
and
out
mov
in
push
lahf
xor
in
aas
jnp
xor
mov
push
sbb
push
xor
dec
or
rclb
test
push
dec
sbb
imul
xchg
mov
into
scas
and
mov
icebp
push
inc
dec
pop
lret
cli
jne
call
aam
inc
iret
mov
push
out
push
shll
cwtl
shlb
cmp
subl
pop
or
push
mov
cmpsl
gs
out
inc
test
sbb
lock
mov
imul
js
cltd
mov
adc
mov
xlat
fucomi
aas
adc
hlt
int3
jg
movsl
sub
ret
addr16
and
pushf
in
addb
movsl
outsl
jmp
push
mov
xor
test
sahf
movsl
shlb
add
aad
mov
adc
cwtl
jo
cltd
shrb
lds
jmp
pop
fsubr
scas
mov
push
cmp
sub
adc
ficomps
mov
sbb
scas
mov
jg
mov
nop
mov
mov
pop
xor
call
ffree
jp
std
sbb
adc
clc
mov
dec
mov
mov
mov
ficompl
adc
jmp
fnsave
fisttpll
jmp
fbstp
movsl
test
push
lretw
dec
aad
subb
ret
pop
sbb
mov
loopne
out
imul
mov
mov
test
add
add
or
sbbl
ret
outsb
out
mov
test
ror
mov
decb
and
push
shl
push
pop
arpl
jle
mov
push
outsl
pop
int3
jnp
loopne
or
scas
push
sti
push
sub
and
call
les
imul
or
andl
add
mov
or
inc
sub
call
mulb
xchg
iret
jmp
lar
loopne
mov
inc
jl
dec
shr
xor
and
popa
push
lret
pop
stc
cli
jl
stos
out
aas
lcall
call
les
into
or
and
or
add
stc
loop
je
test
insb
orb
rcr
dec
mov
mov
lods
pop
testl
fldl
mov
dec
mov
jg
cltd
or
leave
cs
jnp
sti
das
sub
ret
mov
mov
and
mov
sbb
add
repz
jge
sub
sete
xchg
inc
iret
jmp
rolb
xchg
cs
addb
push
imulb
adc
insb
test
in
inc
movsl
sub
mov
iret
push
aad
adc
pushf
addl
inc
lcall
jno
lock
mov
jnp
and
sub
push
dec
push
dec
mov
int
jl
pop
pop
mov
jmp
addr16
outsl
jge
imul
fwait
or
mov
mov
in
push
jae
out
stc
inc
decl
cmpsb
out
popf
pop
in
popa
pushf
ljmp
rorb
pop
les
clc
dec
pop
xchg
sbb
nop
sub
push
jp
dec
lods
pop
xchg
stos
fdivrs
lahf
push
inc
sub
sbb
push
push
insb
pusha
push
and
pushl
rcll
push
loop
into
cld
stos
cltd
xor
push
clc
xor
sarl
int
dec
jo
in
idiv
test
xor
insb
jle
xchg
stc
pushf
sarl
jnp
xor
cmpsl
in
add
flds
jae
std
dec
lret
xchg
iret
sub
push
lods
add
dec
stc
jg
mov
mov
ds
xchg
xor
push
sti
sbb
xor
push
cmp
hlt
or
xchg
jno
sbb
pop
xor
lods
xchg
inc
idivl
daa
clc
and
mov
push
xchg
sti
adc
mov
jl
popa
pop
mov
or
dec
negb
int
jp
sar
push
cmp
adc
fs
out
lds
xchg
adc
ljmp
cwtl
mov
or
outsl
adc
cmc
lods
pop
call
dec
loopne
inc
xor
mov
xchg
pop
xchg
in
shll
sub
dec
cmp
inc
push
mov
jecxz
pop
inc
xor
gs
negb
pop
adc
or
inc
sahf
lods
jp
ja
arpl
scas
inc
std
lcall
test
call
cmp
cmp
pop
jae
rcll
imul
jae
out
scas
rcrl
scas
lahf
icebp
mov
cmp
mov
mov
cmp
nop
je
rol
pop
xchg
gs
loope
ret
and
pop
xchg
xchg
xor
mov
push
ficoms
hlt
test
rcll
push
mov
pusha
pop
cmp
adc
call
std
sbbb
or
out
sbb
mulb
xor
mov
rolb
mulps
jg
push
mov
mov
xchg
mov
pop
jmp
jge
xchg
scas
cmc
addl
rcr
inc
ja
xchg
loop
sbb
cmc
vfrczps
mov
push
sub
inc
mov
fidivs
test
cmovg
sbb
adc
add
jo
fwait
lds
into
push
in
fwait
inc
pop
push
mov
pop
sub
and
push
mov
dec
in
pop
inc
mov
fidivrs
pop
mov
and
aad
push
adc
mov
sti
pop
sbbb
jecxz
cmp
cmp
inc
pop
lods
push
add
add
adc
insb
aaa
inc
sub
daa
call
dec
repnz
adc
je
ds
les
addr16
stos
insb
je
outsl
aas
enter
dec
sbb
lds
push
or
popf
notb
jge
add
jle
mov
cmp
sti
popa
mov
mov
mov
mov
loop
aas
out
fs
loope
add
enter
pop
mov
mov
adc
inc
sarb
push
test
test
xor
test
shlb
fdivs
popf
imul
dec
push
inc
lods
cltd
in
jle
pop
sbb
test
dec
lahf
out
fwait
incl
js
inc
fsub
sub
dec
push
lds
ss
push
sub
add
movsl
cmp
mov
add
pop
cmpsl
faddl
xchg
xor
lods
inc
and
repz
mov
fistpl
shll
fildll
or
popf
sub
sbb
mov
add
inc
fmuls
push
test
pop
mov
push
xor
es
mov
sbb
cmpsb
jae
gs
mov
xor
ds
pop
hlt
xchg
jl
sub
dec
add
push
push
sbb
inc
test
adc
in
pop
jno
mov
js
clc
mov
jmp
movb
add
mov
push
int3
imul
push
sbb
pop
rorb
shll
xchg
orb
lods
pop
fistps
mov
je
xchg
stc
imul
dec
hlt
add
dec
xchg
sti
jnp
dec
sub
test
jne
xchg
fwait
jl
popa
and
sbb
dec
pop
xchg
repz
sub
dec
loop
pop
pop
lock
enter
scas
sub
sbb
adc
mov
mov
push
sbb
sub
mov
std
ds
aaa
mov
flds
addr16
xchg
jne
fucom
test
mov
mov
jnp
or
and
es
data16
cmp
mov
add
sbb
pop
cmpsl
idivl
add
loope
loopne
cmp
lds
lahf
mov
orb
xor
pushf
cmpsb
or
or
adc
pop
scas
fsubrs
fs
mov
push
adc
inc
sarl
mov
mov
insb
popa
outsb
sub
movsb
jl
push
inc
adc
dec
pop
mov
mov
mov
mov
or
aaa
jge
and
cli
out
pop
sbb
mov
xchg
jle
push
fwait
movsb
mov
test
fistl
insl
scas
jle
sarb
pop
shlb
loop
adc
mov
cmp
jnp
sub
jp
addl
ret
pop
xlat
mov
jnp
out
rcrl
dec
adc
test
mov
mov
loop
daa
mov
out
adc
sub
mov
and
setle
aad
cld
lods
ret
mov
out
jb,pt
or
movsl
shll
jge
jae
mov
movsb
inc
xchg
daa
ror
jp
cld
xchg
xor
std
mov
xchg
cmp
sub
addb
jle
inc
mov
and
inc
or
imul
lock
mov
imul
mov
push
cltd
inc
mov
cmp
fbstp
sbb
add
ss
pop
in
fisubrs
mov
std
in
daa
mov
in
sub
jbe
adcl
ljmp
sub
pushf
pop
mov
ret
cmp
int
mov
cmp
inc
jge
sub
daa
jp
jmp
adc
xchg
imul
scas
inc
loopne
notb
mov
pop
xchg
popf
dec
test
mov
sahf
out
dec
push
out
pop
fstp
and
imul
push
sub
pop
push
sub
mov
xchg
iret
sbb
fdivrs
jns
fs
sar
cmpsl
lahf
ret
das
cld
ss
stc
adc
into
or
fcompl
into
cs
or
xchg
int3
push
fldenv
dec
mov
pop
ret
imul
loop
xchg
gs
dec
mov
in
inc
scas
push
push
repnz
sbb
jg
fiadds
or
adc
dec
push
lahf
inc
outsl
rclb
push
pop
jnp
rcrl
addr16
pop
xchg
cmpsb
jl
jp
jl
mulb
in
inc
push
icebp
mov
or
stc
cwtl
lods
fisubs
lret
stc
cmp
and
sahf
cmp
adc
push
in
sbb
jo
pop
or
stos
arpl
inc
loope
jp
and
or
int3
mov
or
iret
and
fs
add
std
dec
pop
repz
les
popf
mov
cmp
pushf
mov
pop
fists
sub
hlt
pusha
add
popa
sahf
fisubrl
xor
daa
inc
push
sbb
lea
mov
sub
adc
cmpb
mov
jb
fbstp
andl
sub
gs
dec
addl
movsl
and
cwtl
lods
and
sbb
push
adc
pop
push
insl
addr16
cmp
rclb
js
pop
lods
leave
pop
sahf
mov
inc
jns
mov
add
pop
jbe
mov
mov
add
push
ja
fbld
divl
adc
sub
xchg
add
in
add
xchg
clc
icebp
negl
jmp
cli
lock
popa
out
xor
xchg
iret
push
cmpl
mov
push
js
fidivl
dec
pop
and
in
xchg
sub
sahf
mov
aaa
movsb
pop
cmpsb
jecxz,pt
movsl
inc
cmc
pop
adc
mov
pop
xorl
mov
popa
sti
mov
es
dec
dec
jle
pop
inc
in
cmp
sub
dec
inc
mov
xchg
cld
pop
inc
fsts
div
mov
cmp
mov
leave
mov
and
mov
sbb
imul
testl
arpl
mov
ljmp
scas
hlt
jne
repnz
insb
mov
loopne
xor
test
pop
int
pop
pop
sahf
call
test
add
push
arpl
mov
sub
clc
xor
fimull
rep
std
adc
repnz
stos
and
xchg
out
in
pop
jne
popf
aas
adc
dec
in
sub
and
sbb
dec
jg
sub
pop
pop
mul
cmp
adc
jp
mov
mov
fsubrs
hlt
in
xor
arpl
int3
cwtl
push
dec
testl
pop
fsubl
js
pop
add
adc
aaa
add
jb
leave
stc
lds
cwtl
cmp
subb
and
mov
les
in
cld
cmp
jl
shl
fcmove
xor
mov
mov
pop
les
adc
scas
mov
lret
push
shlb
rclb
adc
stc
cmp
lds
jecxz
mov
je
imul
out
xor
pop
repz
pop
movsl
and
fnstsw
icebp
xchg
sub
int3
cmp
dec
shlb
cld
mov
inc
movsl
cmpsb
aad
test
ds
xor
stc
sbb
pop
insl
out
ficomps
dec
mov
xor
sub
addr16
cmp
jnp
cmp
add
sahf
imul
aad
cmc
into
stos
xchg
shr
xor
pop
insl
enter
cmp
ret
dec
in
inc
ss
outsl
mov
les
outsl
out
imul
fistpl
xlat
adc
xchg
mov
repnz
pop
mov
out
push
dec
jo
inc
lods
mov
add
sbb
nop
inc
shrl
addb
dec
out
xchg
pop
ret
les
add
call
jo
int
push
leave
mov
sahf
stos
pop
cwtl
inc
mov
sbb
mov
mov
push
lea
mov
sbb
mov
cmp
icebp
pop
popa
inc
dec
mov
fldl
mov
dec
cmp
adc
pusha
fsubrl
jne
add
sarl
aad
movsb
sarl
repnz
lret
in
sbb
out
inc
push
sti
xor
les
push
dec
popf
fisttps
sub
cmpl
int
inc
push
ret
hlt
enter
ficoml
xor
testb
sbb
enter
scas
jecxz
sahf
push
lahf
testl
push
sysexit
shll
xchg
sub
mov
fimull
je
into
out
loope
jne
aam
ljmp
dec
movsl
incb
push
lea
cmpl
insb
push
jp
ljmp
jbe
stos
dec
inc
fnstenv
inc
xchg
mov
aam
adcb
adc
or
aaa
in
and
xchg
movsb
mov
adc
aas
add
push
enter
push
jg
or
clc
test
push
lock
pop
insb
xchg
xorb
pop
loope
loopne
add
hlt
mov
pop
sub
fiadds
aam
and
push
sarl
popa
jb
cli
arpl
pushf
inc
sbb
mov
mov
test
push
addr16
xor
xchg
push
arpl
mov
in
test
je
loop
xor
loope
sub
sub
cmp
or
imul
out
cmp
enter
fwait
in
in
into
push
push
pop
adcl
jb
xor
push
push
push
mov
lods
ljmp
es
add
les
push
pop
les
jg
dec
jle
scas
enter
out
pop
lds
cwtl
sbb
loopne
fisttpl
and
fcomps
sbb
dec
out
out
int
jge
cmp
cmpsb
xchg
mov
or
xor
decl
aaa
pop
push
jl
enter
or
jp
inc
mov
or
mov
in
add
sbb
xlat
rcll
setns
pusha
or
adc
mov
into
cmp
out
sti
mov
mov
cltd
or
mov
arpl
add
aad
sbb
frstor
lock
sbb
push
sub
mov
out
dec
sub
pop
dec
mov
movsl
out
dec
test
inc
in
ret
adc
enter
cmp
addr16
pop
fisubrl
lock
add
aaa
jmp
in
jmp
arpl
pushf
mov
popf
inc
adc
addb
jg
fs
orb
mov
aad
push
mov
adc
xor
aam
hlt
jno
stos
in
nop
lret
lahf
mov
mov
inc
fs
scas
cld
popf
or
push
adc
add
and
dec
mov
jbe
mov
push
mov
lret
mov
pop
shll
xchg
jp
cltd
rol
fs
sub
mov
or
sbb
daa
or
mov
lock
push
std
dec
or
in
stos
notl
das
jmp
sub
fnstcw
pop
es
sub
fidivl
add
out
out
sbb
inc
sbb
loope
cltd
dec
inc
cwtl
xchg
rclb
icebp
aaa
enter
sbb
dec
cld
lea
stc
clc
loopne
dec
sbbl
push
es
aaa
add
xchg
cltd
cmp
lahf
cmp
mov
cmp
test
lcall
ret
pop
shll
and
les
cmp
add
mov
and
xchg
imul
jge
xor
ja
fbld
in
jle
imull
fstpt
aas
push
add
add
cmp
jg
int
sbb
stos
aad
push
fldcw
cmpsl
sub
rorb
sub
pop
repnz
cmp
push
jb
nop
cwtl
daa
mov
jg
jno
lds
push
xor
sub
xor
xchg
push
push
scas
outsl
stos
outsb
or
xor
sbb
pop
lahf
jmp
cmpsl
jle
sbb
pop
inc
andb
test
inc
dec
mov
insb
pusha
mov
lods
or
lret
sbb
cmc
popf
lfs
and
jg
outsl
push
mov
xchg
cmp
jbe
jae
mov
sub
dec
cwtl
xchg
adc
outsb
xchg
mov
push
in
jge
mov
jle
adc
fmul
and
ret
xchg
lret
test
test
add
mov
sub
adc
mov
add
xchg
mov
jge
cs
shrl
stos
aam
xlat
leave
scas
cwtl
clc
mov
jmp
test
sbb
daa
jp
shrl
icebp
repz
mov
mov
xchg
hlt
jecxz
cmp
addb
or
test
xchg
sbb
les
or
loope
mov
xor
pop
jnp
dec
insl
jl
in
insb
jg
dec
enter
daa
add
addb
push
xlat
ja
mov
lds
and
jecxz
ret
enter
or
jns
or
push
or
imul
and
and
push
and
inc
addr16
pop
lods
mov
movsb
pop
lahf
mov
arpl
fwait
inc
inc
orl
lahf
cli
push
sub
mov
jbe
jle
add
and
lahf
call
cwtl
xor
pop
into
fadd
imul
call
scas
rorb
push
movsb
imul
dec
and
cmpsb
push
inc
es
test
scas
ret
jns
lahf
sub
sbb
int3
xlat
inc
dec
mov
pop
cli
xor
idivb
xor
mov
imul
pop
popa
imul
fs
arpl
push
mov
fwait
lcall
cmp
mov
andl
repnz
pop
out
out
sub
jecxz
cmpsl
xchg
enter
mov
xor
outsb
dec
push
gs
out
jp
pusha
adc
fbld
fiadds
test
std
arpl
ret
push
mov
lcall
ja
xor
inc
fmuls
mov
dec
out
sbb
sbb
inc
daa
sbb
push
adc
cwtl
iret
mov
xchg
xor
jecxz
pop
mov
xchg
adc
test
div
jne
sar
push
enter
aad
mov
jae
lds
xchg
lock
cmp
sub
lods
jp
loope
inc
xor
stc
rcll
repnz
hlt
stos
int
and
lods
push
mov
ja
inc
outsl
ja
mov
xchg
dec
xchg
popa
lods
leave
into
popf
shlb
inc
push
adc
call
inc
rcrb
or
sbb
outsb
sbbb
inc
and
stc
out
mov
cmp
jge
test
pop
or
test
inc
mov
xor
xchg
mov
add
lahf
aad
jno
add
cmp
cmp
cwtl
cld
sarl
cmp
outsb
shrb
jno
insb
push
mov
cli
xchg
dec
pop
push
inc
push
mov
std
hlt
popf
mov
fmuls
and
rcr
push
xchg
stos
cltd
rclb
xor
out
dec
sbb
or
cmp
mov
cwtl
mov
mov
cmpsl
mov
pop
pop
jbe
mov
hlt
ret
xchg
loopne
addl
js
push
pop
in
jnp
xor
sub
pop
mov
cmp
fwait
jbe
popf
xchg
stos
push
loope
add
pusha
insb
sbb
lret
adc
mov
fldenv
pop
fcoml
dec
inc
push
stc
aas
cmp
test
xchg
xchg
enter
dec
addr16
add
ljmp
xlat
lcall
pop
push
mov
push
test
xchg
arpl
data16
test
movsb
test
sub
mov
ds
inc
fdivrl
cmp
adc
jae
or
add
sub
push
or
mov
push
sub
xor
and
sub
adc
divb
push
popa
addr16
int3
dec
inc
mov
data16
jge
adc
mov
loope
xchg
incl
or
add
repz
push
movsl
shl
iret
jmp
popa
pop
sbb
cli
dec
lea
and
sub
pop
mov
scas
fsts
faddl
addr16
movsb
or
mov
inc
cwtl
pop
pop
loop
mov
sub
jno
cmp
xorb
add
dec
cmc
dec
insb
test
xchg
aam
aad
xor
lods
loope
push
inc
aaa
aaa
inc
mov
jns
loop
mov
push
int3
xor
aas
and
mov
cmpsl
add
dec
leave
into
push
mov
ljmp
mov
mov
lods
pop
add
adc
hlt
lea
repnz
sarl
or
jb
das
sbb
mov
stos
push
inc
mov
js
mov
push
sarl
js
mov
in
xchg
call
or
mov
adc
adc
test
shll
xlat
sub
mov
xlat
mov
popa
mov
and
push
pop
repnz
ljmp
js
negb
movsb
lods
pusha
test
mov
sub
and
shrl
xchg
pop
arpl
push
xchg
mov
cmp
xchg
jle
call
popf
dec
ret
ret
xchg
mov
push
adc
cmp
orb
add
pusha
nop
fimull
and
push
loopne
push
push
pop
xchg
test
lahf
pop
pop
adcb
cmpsl
aaa
sbb
jnp
cld
cmp
daa
push
pushf
sar
mov
js
imul
pop
cmp
jo
addr16
mov
ja
or
hlt
xor
in
push
cmp
mov
mov
popf
add
lds
inc
stc
pop
mov
pop
dec
das
mov
pusha
ss
pop
mov
jp
xchg
jle
aam
negb
push
xor
adc
lahf
adcb
scas
push
lock
inc
and
mov
out
es
push
and
jbe
mov
adcl
sbb
push
lock
fcoms
fimull
scas
scas
sub
push
movsb
inc
sub
add
mov
and
pop
add
bound
popf
cmp
adc
cmp
cmp
inc
adc
push
stc
xor
fbstp
mov
dec
xorl
dec
imul
scas
repz
push
sbb
arpl
and
push
scas
or
push
out
orb
xchg
mov
jns
fsts
jge
hlt
mov
dec
cmp
jne
mov
fiadds
std
xlat
sbb
cmp
cld
jnp
cs
jecxz
mov
mov
in
pop
or
xchg
xor
stos
mov
inc
fldt
jge
into
outsb
gs
clc
push
test
in
mul
ror
xlat
xchg
jne
or
idivb
push
pop
add
sub
js
xor
aad
mov
stc
jne
jl
orb
or
or
ds
inc
andl
sub
sbb
mov
nop
mov
fs
dec
in
cli
xlat
out
outsl
subb
sbb
call
stc
mov
dec
xor
dec
mov
jne
push
pop
push
out
push
cmp
push
inc
ja
and
cwtl
rcr
mov
push
fstpl
mov
aad
pusha
pop
push
pop
pop
mov
cmp
loop
push
mov
pop
and
pushf
ret
divb
out
mov
dec
lods
std
ljmp
cmpsb
pop
cmc
cmp
jmp
fisttpll
stos
fstl
sarl
cmpsb
and
sbb
jg
cwtl
cmpsb
dec
add
iret
ret
out
insl
out
fistps
pcmpeqb
iret
fwait
or
push
sahf
cltd
xor
icebp
push
cmp
sbb
xorb
rorb
js
xor
lds
dec
rorl
and
push
push
mov
sub
jne
and
cmp
sub
push
call
lcall
lods
or
mov
lods
xchg
mov
mov
pop
out
fidivl
or
add
mov
push
leave
fstpl
outsl
aas
rorl
cld
dec
enter
and
jg
inc
flds
sarb
xchg
push
xchg
push
in
xchg
aas
xor
sub
mov
cli
leave
jo
mov
inc
cltd
xchg
jge
dec
pusha
dec
sbb
ret
cli
dec
aaa
scas
mov
cwtl
scas
pop
and
xchg
lods
inc
dec
mov
out
cmp
lret
sub
xchg
jmp
sub
adc
sbb
dec
jg
mov
ret
inc
hlt
xchg
jmp
loopne
aad
stc
arpl
cwtl
mov
or
insl
mov
imul
cmp
xchg
daa
inc
pop
xor
roll
mov
imul
cmp
pop
aam
scas
or
filds
pop
xchg
push
subl
cmp
pop
movsb
pushf
mov
lock
mov
dec
pop
adc
push
cmpsb
sbbb
adc
sbb
xchg
ja
sbb
and
sbb
fists
test
or
loop
imul
rorb
or
movsb
cmp
andl
sbb
into
ds
iret
icebp
add
inc
icebp
adc
cmpsb
or
fdivrl
jecxz
cli
push
aaa
cmp
lret
insl
repz
outsl
inc
mov
jmp
or
cmp
orl
and
shl
sbb
ljmp
je
repz
sbb
cwtl
adc
xchg
shll
orb
push
pushf
push
call
ret
add
test
add
popa
or
lcall
xchg
stc
cmp
or
xchg
sbb
push
mov
xchg
mov
mov
jp
jns
aas
hlt
xchg
orb
xchg
sub
mov
ficomps
cmp
lret
inc
imul
mov
imul
xor
mov
shrl
iret
fwait
push
outsb
movsl
sub
fisttpll
adc
cmp
incb
push
leave
mov
mov
sarb
or
inc
gs
mov
ss
cmp
pop
insb
shrb
andl
addr16
outsl
daa
xchg
or
je
push
mov
cmp
sti
insb
loopne
add
push
jae
fsubrl
or
out
outsb
sbb
mov
out
repz
notl
fsubp
sub
shr
sbb
mov
enter
imul
iret
loopne
lds
fistl
jo
and
sahf
mov
test
cmpsl
stc
nop
adc
pop
push
lret
push
out
dec
add
jo
pop
add
aas
lcall
lret
sbb
push
sub
jno
push
jae
sub
or
xor
mov
pop
xchg
cmp
pusha
lods
mov
add
popa
sbb
imul
es
cmp
repnz
or
xchg
cmp
cmp
pop
jle
add
pop
jge
outsl
jg
arpl
fs
stos
stc
arpl
mov
adc
and
iret
rcrl
hlt
out
sub
cmp
adc
sub
out
push
inc
lds
dec
sti
sahf
test
les
ds
jge
add
push
pop
mov
bound
outsb
cmp
aad
push
fwait
lds
jno
inc
cmp
or
fadds
sahf
out
lods
mov
ret
push
mov
cmp
mov
into
les
xor
mov
test
out
ja
into
xchg
arpl
pop
fcmovnu
out
fnstsw
pop
rclb
adc
and
cli
sub
dec
dec
inc
test
push
cmp
adc
aas
dec
aas
jo
sub
daa
cmc
mov
mov
stc
pop
out
or
push
cmp
xor
std
loop
popa
sbb
sbb
adc
mov
test
dec
stos
mov
and
mov
fs
or
push
mov
hlt
mov
pop
push
sti
je
outsb
sub
adc
xlat
pushaw
insl
or
push
lock
addr16
adc
adc
in
popf
inc
sbb
pusha
adc
daa
in
mov
jno
cmc
cld
mov
sbb
fstpl
mov
clc
sub
loop
popf
mov
inc
jge
cmp
cs
ret
xchg
mulb
mov
and
and
orb
ret
das
out
dec
enter
dec
rorb
out
xchg
cmp
sbb
adc
dec
pop
scas
xor
cltd
xor
mov
test
adc
je
jno
out
das
jecxz
in
insl
out
daa
cmp
cmp
jb
cmp
push
imul
mov
les
adc
jmp
and
xlat
ret
xchg
dec
stc
xchg
insl
jne
push
jle
pop
mov
or
push
dec
call
daa
sahf
test
adc
int
cmp
sub
cmp
fcmovu
mov
lahf
mov
movsb
cmpsb
push
adc
mov
test
and
sub
jmp
ds
aas
xor
cli
orl
jmp
mulb
inc
jp
iret
inc
inc
push
sub
gs
mov
out
bound
dec
mov
lods
push
icebp
push
ja
rcrl
push
repnz
mov
in
mov
mov
dec
xchg
lea
inc
addr16
dec
pop
lcall
inc
pushf
push
subb
pop
mov
xorl
mov
ficomps
test
adc
repnz
pop
je
xchg
mov
dec
movsl
negb
and
ss
psrlw
dec
stc
enter
xorl
cs
mov
dec
inc
sbbl
clc
mov
aas
jno
jno
cmp
add
mov
mov
icebp
inc
inc
inc
daa
std
fsubrp
xor
sub
mov
lret
idivl
cmp
mov
mov
hlt
cwtl
lret
cmp
movsl
cli
test
push
ret
adc
sub
jmp
jp
or
sbb
addb
mov
int
mov
mov
mov
paddb
mov
insb
or
jne
push
sub
pop
mov
ja
sub
rorl
sub
in
pop
cld
cmp
popf
dec
mov
lods
cmp
lea
std
cs
mov
xor
gs
xchg
cmpsl
pop
clc
dec
ja
and
dec
cwtl
adc
mov
int
xor
pop
shll
xor
add
dec
xchg
enter
insl
psubsw
cmp
out
inc
inc
mov
pop
mov
loopne
mov
jp
jmp
sahf
rorl
or
cmpsl
in
mov
lret
xor
pop
xchg
adc
inc
subb
scas
ficoms
out
sti
and
adc
pop
and
jb
aas
cmp
xor
test
movsl
mov
xchg
popa
fsubrl
loop
push
and
outsl
lcall
mov
jo
pop
add
push
mov
mov
repz
fnstenv
xchg
dec
mov
mov
cld
and
xor
repnz
in
shll
js
push
mov
inc
data16
push
test
cld
je
mov
mov
idiv
loop
mov
xor
jo
andb
xchg
push
sub
push
adc
les
repz
push
in
xor
xchg
jo
decb
fildl
push
in
dec
cld
push
inc
aad
inc
and
inc
mov
sbb
and
jg
int3
fstp
sti
cmc
jmp
and
jg
and
test
add
pushf
mov
pop
mov
sbb
push
add
lods
clc
sahf
stos
out
sub
loope
dec
xlat
add
sub
mov
gs
loopne
sbb
sahf
lds
push
and
dec
ljmp
and
sti
enter
xchg
outsb
xorb
sbbl
dec
push
jmp
mov
stos
mov
and
int3
outsl
jl
cmpsl
pushf
nop
cmp
fcomps
sub
clc
icebp
dec
test
addr16
lcall
mov
aas
icebp
and
push
daa
mov
fisubrs
cmp
or
cwtl
jmp
pop
fs
jbe
aas
idivb
push
movl
jns
mov
js
insb
daa
aaa
cld
dec
pushf
or
mov
jae
lods
xlat
sub
out
jle
je
xor
sbb
jb
dec
sbb
popa
adcl
scas
fs
add
in
sbb
or
mov
pop
sub
pop
add
imul
imul
push
push
aam
xchg
xchg
test
mov
gs
cmp
jne
testl
mov
dec
inc
xor
fildl
lret
jge
adc
jmp
inc
xor
ret
xor
cli
lods
and
fucomp
pop
and
test
push
mov
push
cmp
mov
gs
and
pop
lret
mov
or
ja
pop
enter
mov
dec
leave
xchg
inc
mov
xlat
adc
je
push
xor
repz
in
push
fnstenv
icebp
mov
adc
fs
scas
sbb
roll
dec
leave
xchg
xlat
loopne
mov
sub
cmpsl
fnstcw
jg
sbb
xor
filds
xchg
sub
dec
mov
mov
fwait
mov
inc
loop
inc
sub
xchg
mov
cmp
mov
push
mov
in
movsl
mov
out
imul
mov
ja
add
pop
sbb
push
movsl
movsl
inc
inc
sub
jns
push
cmp
int
sahf
cmp
leave
pop
out
adc
arpl
sbb
test
js
cmp
xor
subb
call
xchg
and
adc
cmpsl
mov
dec
out
cli
mov
lcall
cmp
loopne
cmpsl
xorb
mov
popf
mull
decl
jae
orb
xchg
daa
and
inc
int
mov
sub
pop
pop
outsl
jecxz
es
cmpsb
pop
ret
push
in
sub
push
in
add
popa
ss
cmp
inc
aad
pop
jecxz
iret
cmp
mov
sub
jecxz
jg
roll
and
fbld
test
mov
and
push
adc
std
or
xor
int
sub
mov
daa
xchg
in
adc
ret
mov
jge
jg
push
mov
sahf
dec
icebp
pusha
xchg
push
dec
int3
test
lahf
lret
add
shll
js
mov
add
int
mov
arpl
jmp
dec
test
adcb
lcall
js,pn
pop
out
push
out
test
bound
sub
inc
hlt
jnp
shlb
xlat
fidivl
movsl
sub
call
notl
lods
jno
sbb
fld1
sub
and
in
adc
pop
xchg
in
mov
bound
jl
sub
les
negb
in
push
je
loop
test
inc
shll
sub
mov
mov
mov
test
dec
into
pushf
pop
adc
lret
jmp
pushf
xor
fistpll
mov
dec
sahf
inc
sub
dec
int3
and
sbb
push
lret
jns
bound
add
dec
int
mov
push
and
lock
xor
add
hlt
cld
in
lods
imul
push
pop
mov
repnz
adc
mov
fstpt
rorl
scas
ljmp
push
dec
cwtl
bound
scas
inc
sarb
mov
cld
out
je
stos
mov
mov
mov
pusha
lods
gs
lds
sbb
mov
push
pop
add
push
pop
sub
movb
les
pop
imul
clc
je
notb
bound
scas
pop
and
inc
and
cmpsb
repnz
div
sbb
jne
add
mov
imul
pop
loop
sbb
ja
in
cltd
sub
adc
push
lret
out
sbb
dec
sarb
aad
js
loope
jmp
inc
lock
jne
enter
fidivrs
jbe
mov
jae
dec
int
cmp
xchg
and
sahf
lock
mov
xor
data16
les
push
loope
jl
push
dec
stos
and
push
fwait
mov
daa
and
push
and
or
cmp
into
fidivrs
scas
sub
ds
movsl
popf
mov
and
icebp
jne
pop
cmpb
test
push
jmp
push
push
inc
mov
jp
stos
aaa
xor
xor
pop
sar
in
push
push
cs
shlb
mov
shlb
cwtl
sub
mov
push
icebp
ret
icebp
mov
shll
mov
aas
pop
dec
push
pop
add
inc
jg
sbb
mov
inc
jmp
sti
xchg
sarb
add
sub
sub
icebp
mov
pop
jnp
mov
popf
fcmovnbe
andl
dec
std
loop
adc
fisubl
inc
add
jecxz
mov
and
push
movsl
roll
enter
pop
mov
addr16
xchg
data16
and
shll
xchg
jmp
sahf
scas
arpl
mov
xorb
fildl
es
ss
sub
xchg
sub
out
mov
inc
lods
out
test
cmp
xorl
push
push
loop
bnd
nop
and
cmpsb
or
xor
dec
popa
xor
mov
or
sub
loope
and
and
movsb
inc
loopne
mov
mov
jmp
ret
ss
test
addb
push
pop
mov
out
push
push
out
shlb
int
jns
mov
add
adc
and
sub
mov
push
in
rol
sti
mov
xor
jo
dec
cli
call
push
add
jmp
rclb
jmp
fsubl
fwait
mov
cmpsb
scas
out
jbe
sbb
dec
pop
ds
cmp
lods
dec
das
rcrl
sbb
xor
shl
in
sbbl
jb
xorb
push
jnp
or
jnp
outsb
or
mov
and
xchg
push
push
ss
mov
lahf
pop
mov
xor
jae
mov
imul
cwtl
xorl
mov
mov
mov
cli
jp
sti
stos
adc
test
cli
fmull
shr
dec
xchg
out
sbb
mov
cmpsb
mov
mov
xchg
pop
std
ret
push
lods
out
sbb
push
lds
cmp
rolb
rclb
add
rcrb
pop
scas
sub
jle
in
movsb
and
mov
jb
stc
rolb
dec
jp
sub
fidivrl
pop
adc
push
cs
aaa
sbb
inc
in
es
xchg
push
nop
jno
push
xchg
gs
mov
bswap
dec
sarb
arpl
xchg
cmpsl
pop
popf
fidivrl
ret
dec
hlt
mov
cwtl
push
mov
sub
pop
pusha
inc
add
adc
addr16
leave
loope
bound
ljmp
mov
jmp
mov
inc
xor
pop
jae
jecxz
nop
loope
aas
ss
push
pop
inc
pop
and
into
xchg
mov
mov
fwait
jp
ss
cmp
adc
xchg
dec
xorl
sets
sbbl
mov
test
ficomps
cmc
shrl
xlat
push
scas
popa
imul
aad
adc
add
and
ret
in
rclb
cwtl
andb
jns
mov
pop
cltd
cvtdq2ps
stc
stos
mov
push
lcall
ss
mov
xchg
mov
xchg
jno
and
out
dec
scas
imul
xchg
frstor
inc
push
xor
jmp
and
jmp
rorb
addr16
int3
and
xchg
jmp
lods
adc
mov
enter
rolb
ja
lcall
mov
sub
mov
adc
lods
ljmp
int
std
fistps
xchg
add
and
lahf
arpl
add
sahf
push
cs
jg
cs
mov
pop
call
ror
in
lock
ss
fstl
jge
dec
icebp
imul
mov
mov
outsb
inc
pop
push
mov
pop
jp
inc
add
sub
dec
mov
loop
dec
adc
mov
lret
test
and
ss
rcll
mov
insb
adc
push
inc
insl
jp
sub
out
mov
insb
popf
outsb
cmp
lods
sbb
push
fildl
xorl
sub
cs
in
sti
add
cmp
insl
ja
in
sub
mov
add
inc
aaa
nop
aad
and
popa
push
and
inc
ja
icebp
inc
cltd
mov
adc
or
dec
lock
xor
jmp
mov
pop
xchg
xchg
mov
cmp
add
and
inc
push
cmp
into
sahf
push
adc
cli
and
sub
cmpsb
or
mov
loopne
cmp
mov
loop
ljmp
das
stos
divl
inc
mulb
dec
xor
fstps
xchg
jmp
stos
push
jo
dec
dec
or
in
push
cmpsb
mov
fistl
add
enter
xchg
cmp
cmp
mov
jmp
cmp
hlt
pop
jp
lods
push
mov
bound
xor
xchg
test
movsl
sub
jbe
xor
and
dec
add
stos
sub
add
or
shll
roll
cld
xor
mov
inc
in
lock
jo
push
pop
rorl
iret
xchg
xor
push
cmpsl
decb
mov
aas
shrl
jge
mov
xchg
sbb
lods
pop
loope
sbb
sub
jle
pop
movsb
fcmovnbe
stos
cmp
orl
dec
icebp
mov
adc
mov
ss
fs
push
aam
or
lcall
pop
xlat
mov
stmxcsr
sbb
out
dec
xor
pop
xor
adc
adc
or
xchg
mov
push
sbb
insl
cmp
pop
outsb
push
xorl
adc
lods
mov
xchg
pop
adc
inc
daa
repz
or
mov
lret
xor
jns
pop
popf
or
and
in
inc
cmp
arpl
js
sub
aaa
xchg
mov
in
and
popa
loope
std
xor
popa
fldt
xchg
arpl
in
pop
mov
xchg
xchg
sbb
hlt
and
xor
sahf
cmp
roll
sti
or
out
int3
in
push
daa
xor
cmc
scas
mov
sub
lahf
cmp
add
rclb
imulb
add
jecxz
lret
jnp
xchg
sub
pop
jmp
int3
push
imul
cmp
shr
push
xor
out
dec
or
cmp
xchg
loopne
in
fisubrl
repz
push
push
pop
in
in
push
loopne
and
adc
sti
push
dec
or
out
mov
mov
repnz
popf
into
dec
mov
sbb
lods
mov
pop
sub
or
arpl
fisttpl
sub
mov
jl
mov
das
inc
fcoml
pop
ret
in
mov
dec
inc
lret
out
jns
dec
enter
mov
push
mov
xor
enter
sub
push
jbe
dec
in
int3
sbb
scas
mov
outsb
shll
shrb
aam
enter
shll
jo
outsb
mov
sbb
pop
jle
adc
jbe
mov
cmc
jge
lds
push
xor
jo
addb
test
and
outsb
xor
pusha
lcall
popa
fisttpl
push
iret
mov
mov
inc
aad
call
jae
pop
or
push
add
inc
xor
or
jno
ficoms
adc
dec
adc
jnp
mov
mov
sbb
stc
call
or
push
xchg
adc
fwait
cmp
mov
rcl
testl
dec
mov
aam
test
test
mov
daa
cmpsl
mov
pusha
xor
xlat
orl
out
mov
cmp
pop
mov
jne
push
add
jns
cmpl
jle
push
jmp
aad
jb
jns
push
mov
mov
ret
hlt
sbb
data16
loopne
mov
push
repnz
pop
mov
testb
sbb
jns
dec
xor
fsub
and
inc
push
imul
push
adc
repz
dec
or
mov
insb
mov
mov
push
push
popf
pop
leave
xchg
inc
sbb
fldln2
or
jmp
cmp
pushf
sbb
movsb
mov
mov
sub
cld
dec
in
cmp
leave
mov
jne
lahf
xor
mov
loop
mov
cli
fwait
add
jmp
add
das
inc
aad
ror
mov
push
dec
dec
incl
icebp
scas
js
out
mov
cmp
cmpsl
inc
leave
out
push
cs
cmpb
bound
rcr
insb
in
xchg
push
scas
push
frstor
add
in
int
mov
out
int
mov
jnp
test
rcll
cmp
xchg
and
hlt
adc
ss
add
fisttps
push
lock
and
adc
outsl
ret
and
stos
int
cmp
sbb
das
sbb
or
push
pop
cmc
cltd
ds
cmp
and
icebp
xchg
int3
popa
repz
dec
scas
ja
cmpsl
rcrb
in
sahf
out
add
pusha
lods
push
cmpsl
adc
push
arpl
dec
mov
sti
push
aam
dec
aam
pop
jns
js
sbb
mov
pop
xchg
mov
xchg
inc
xor
clc
jle
fistpl
mov
loope
das
in
movsb
inc
fcoml
xchg
dec
leave
mov
mov
shr
pop
insb
xchg
xchg
jmp
adc
cs
ljmp
aam
mov
icebp
push
push
sub
movsb
xor
enter
xchg
imul
adc
xchg
adc
push
addr16
mov
adcl
push
movsl
push
cmp
pop
adc
mov
mov
sti
movsb
jl
fisubs
ss
hlt
adc
mov
stos
jmp
lret
lds
inc
pop
add
and
mov
or
push
dec
lods
fdivl
je
in
cltd
and
jns
pop
cmp
mov
inc
je
js
stos
mov
sub
nop
dec
jecxz
in
test
jnp
addb
sbb
or
xor
test
cli
lock
lods
stos
dec
sahf
cmpsl
cltd
mov
inc
add
mov
pop
push
jg
inc
scas
mov
gs
and
cld
lds
in
neg
sbb
out
xor
das
sbb
in
xchg
stos
xchg
fldenv
das
and
mov
mov
daa
jl
jne
push
sub
popa
sahf
call
pop
pushl
xchg
xchg
push
loop
aaa
xor
cmp
incb
sub
push
popa
fsubrs
mov
or
or
pop
pop
popa
jne
in
add
in
ss
xchg
xchg
or
repz
inc
xchg
pop
push
jmp
rclb
mov
popa
inc
jo
inc
xor
orb
pop
sbb
sbb
sbb
call
out
add
mulb
scas
mov
outsb
test
shrl
add
pop
lret
pusha
mov
leave
mov
cmp
movaps
out
mov
inc
ds
rclb
pop
push
aas
mov
or
pop
add
push
mov
xor
cld
cmpsb
in
sub
in
jle
cmc
nop
dec
out
cs
mov
xorb
dec
push
pop
or
cmp
out
pop
cmp
jl
cld
or
pop
mov
mov
pop
push
dec
dec
pop
mov
adc
inc
shl
jo
cmp
and
or
pop
es
push
jp
push
pushf
inc
mov
xchg
es
mov
cltd
jg
bound
mov
pop
ss
mov
ret
pushl
and
mov
dec
lods
xorl
mov
cmp
xchg
imul
insl
mov
adc
int
shrl
in
rcr
sbb
and
in
lcall
cmp
into
lea
jo
push
or
pop
xlat
jno
in
push
or
cltd
mov
sbb
mov
adc
inc
mov
fsubl
gs
dec
jmp
fadds
bound
jp
cmp
orb
mov
lret
lock
add
aas
or
insb
shll
out
and
mov
push
lock
push
test
psrlq
sbb
dec
fdivs
pusha
inc
push
outsl
pop
sbbb
insb
sbb
lcall
call
push
add
xor
xchg
cwtl
cltd
faddl
cld
mov
mov
push
adc
push
push
jae
pop
mov
xchg
mov
cmc
mov
stos
out
ljmp
jge
sbbb
pop
jne
lea
in
aas
negl
pusha
repnz
test
inc
ror
pushf
sti
push
das
push
mov
adc
cmc
push
cmpsl
push
mov
sbb
test
push
ljmp
dec
inc
mov
xchg
mov
test
loop
mov
jae
loopne
sub
jae
sub
sub
inc
pop
push
sbb
into
sub
jne
lret
cs
popa
clc
cmp
scas
lea
pop
ret
bound
xlat
push
jmp
adc
sbb
mov
pusha
lods
fstl
loop
dec
ja
aad
stc
and
cltd
push
sti
cmp
loop
add
xchg
dec
push
cmp
push
mov
insb
je
sub
inc
cltd
jecxz
or
sar
and
iret
fisubrs
cltd
mov
cltd
mov
outsb
ss
add
pop
push
dec
sbb
sub
orb
cmp
adc
pop
xchg
fwait
outsb
test
cmp
inc
in
inc
insb
notb
pop
sub
or
push
ret
fcoml
into
out
mov
iret
push
push
jl
mov
sub
call
repnz
xlat
stc
lds
lret
sub
xor
inc
mov
ja
jle
std
sub
jl
xchg
mov
je
loop
arpl
sub
dec
hlt
or
push
fldl
and
jmp
loopne
dec
divl
mov
and
pop
mov
insb
enter
lea
xor
ja
dec
inc
and
imul
push
or
dec
or
or
icebp
ljmp
jo
clc
pop
jge
loope
lret
aam
mov
mov
push
inc
mov
subb
pushl
mov
mov
mov
add
adc
mov
fiaddl
testl
int
mov
stos
adc
jb
xlat
inc
inc
jbe
pop
call
icebp
dec
mov
push
jno
repz
pop
jge
fsubrs
je
push
sbb
ds
cli
popa
js
xchg
nop
sub
jne
or
adc
mov
popf
mov
ror
cmp
pop
ja
mov
imul
mov
iret
and
pop
cmp
bound
jmp
sbb
inc
push
test
add
inc
test
add
icebp
shl
sub
pop
mov
or
mov
cwtl
je
pop
out
lds
push
shrl
and
rorb
dec
imul
sub
pop
in
adc
cs
mov
jae
dec
sbb
jge
mov
cmc
mov
in
push
mov
imulb
imul
mov
scas
jmp
subl
int
jecxz
push
sahf
fldt
or
daa
cmp
jg
sbb
mov
jge
add
outsb
dec
and
lock
lock
add
cltd
mov
cmp
and
dec
xor
mov
jb
dec
cmp
ret
mov
pusha
fs
fists
cltd
xchg
mov
mov
xor
mov
pop
cmc
sti
jmp
enter
xchg
nop
jb
xor
dec
mov
in
cltd
xor
addl
push
mov
xor
xchg
nop
lods
xchg
hlt
mov
xchg
sbb
sbb
mov
ljmp
repz
iret
aaa
and
mov
pop
xchg
scas
xchg
ds
out
jns
ja
push
pop
loop
jg
push
pop
dec
fdivr
loop
pop
mov
xor
out
push
ret
pop
mov
fisttpll
add
imul
lret
push
inc
mov
pop
jp
addb
das
ret
aad
loopne
enter
add
outsb
xor
add
mov
sti
es
sbb
jae
scas
neg
stos
outsl
push
push
cltd
pop
mov
push
in
dec
push
jo
gs
dec
jnp
ljmp
ja
adc
enter
cmp
scas
push
sub
xchg
dec
out
rsm
cwtl
pop
rorl
and
and
ret
ficoml
xor
xor
aad
pop
fisubrl
notl
fucomi
xchg
out
mov
mov
lret
sbbb
fisttps
mov
cmc
mov
imul
loop
aam
jge
pop
dec
jnp
pop
push
xchg
inc
sub
sbbb
ds
pop
dec
or
xchg
inc
xor
stos
int3
mov
repz
adc
xchg
mov
les
test
mov
ficoms
sahf
nop
cmpsb
mov
shrb
dec
sbb
cmp
pusha
popf
pop
insl
addb
jp
or
sbb
xor
popa
add
push
push
stc
adcb
cld
jns
in
dec
cmpsb
jae
add
cmp
pop
cmp
fistl
mov
push
inc
xor
pop
jle
scas
xchg
in
pop
add
test
xor
out
stos
je
test
sub
jmp
mov
pop
cmc
jae
lahf
mov
mov
push
fnstenv
mov
loopne
mov
inc
add
pop
sub
outsb
inc
sbb
or
scas
sbb
lods
lcall
inc
jo
jno
test
cltd
ds
xchg
fwait
xor
sbb
call
aad
loopne
std
pop
fwait
inc
inc
ret
push
mov
int
mov
cld
pop
mov
std
mov
fdiv
xchg
xor
stos
push
mov
xor
call
in
out
popa
pusha
adc
imul
mov
leave
data16
adc
adc
jle
lret
ljmp
inc
aad
cmp
push
shlb
lahf
jne
mov
xor
and
push
dec
and
add
push
sbb
sbb
pushf
jno
fisubs
imul
push
xchg
xor
mov
loop
dec
in
xchg
mov
cmpsb
sbb
lcall
push
and
and
pop
lahf
out
add
xchg
jae
mov
mov
or
clc
sti
mov
lods
add
add
nop
push
mov
pop
adc
add
outsl
push
sbb
call
int
cltd
sbbl
xor
cli
call
loop
imul
dec
push
xor
adc
orl
mov
lods
test
adc
adc
xchg
xlat
lcall
sbb
in
add
fistl
jge
push
cmp
jecxz
inc
stos
movsl
and
inc
pop
mov
xor
movsl
mov
imul
add
mov
in
subl
pop
aas
push
es
cmp
jecxz
idivb
test
push
pop
jge
inc
xor
dec
sub
lds
inc
aad
insl
mov
adcb
lcall
out
negb
imul
repnz
ss
sbb
jl
push
xchg
call
sbb
xchg
hlt
xchg
dec
ret
cmp
aad
out
push
xor
incb
jno
gs
mov
std
mov
push
icebp
sarb
shll
jae
pop
mov
fidivrs
and
dec
fiadds
cli
dec
push
mov
lahf
mov
cmp
mov
mov
push
iret
mov
test
scas
ljmp
fs
xchg
clc
mov
es
in
sub
or
cmp
mov
mov
adc
mov
lret
pop
mov
pop
xchg
bound
push
cvtps2pd
sbb
orl
imul
mov
sbb
pushf
sarl
out
push
xchg
adcb
cmp
arpl
subb
pop
xchg
aaa
mov
sahf
notl
ds
xchg
or
in
pop
cmp
addl
mov
leave
xchg
mov
mov
lock
test
lret
adc
aas
leave
sbb
addb
pop
cld
push
movsl
daa
mov
sbb
sub
pusha
mov
out
notb
cli
js
sti
inc
ljmp
out
pop
inc
stos
insb
pop
xchg
popf
lods
sub
dec
adc
cmc
mov
outsw
addr16
cmp
mov
mov
and
sahf
fisubrl
cmp
mov
cmp
mov
inc
xor
pop
pop
dec
sbb
rcrl
mov
ljmp
insl
lret
mov
int
and
pop
jle
popl
cmp
dec
inc
sbbl
stos
dec
aaa
sub
sub
and
and
adc
data16
jmp
ret
mov
sub
jmp
and
ljmp
mov
enter
adc
sbb
add
data16
arpl
xchg
shl
call
pushf
sbb
cld
les
cmp
inc
scas
cli
outsb
les
ret
xor
popf
pop
arpl
popa
pop
mov
add
jno
loope
cmpl
out
adc
in
inc
inc
xchg
movsb
sub
stos
fldcw
and
imul
mov
jg,pt
sub
cld
aas
mov
stc
cld
popf
inc
popa
adc
or
pop
inc
cmpsl
aaa
push
or
push
imul
sbb
mov
mov
fistpll
sbb
sarl
es
cmpsl
pop
outsl
ss
lds
leave
lea
insl
mov
cld
ret
adc
add
mov
sti
sti
inc
rcrb
xor
mov
loopne
loope
jns
cmc
xchg
roll
mov
outsb
sub
hlt
mov
adc
enter
sbb
add
xchg
cmp
jl
pop
inc
adc
push
push
jb
mov
scas
and
mov
pop
ljmp
add
sub
add
cmp
ret
movsb
in
lods
push
aad
and
inc
mov
int
sub
in
jns
outsl
pop
push
rcrb
xor
and
push
jmp
jno
adc
pop
mov
xchg
add
sub
jge
sub
mov
enter
pop
push
ficoms
std
jne
push
fstpt
bound
fcmovne
insb
sub
dec
xchg
lods
mov
js
and
inc
pop
imul
mov
stos
pop
ljmp
xchg
ljmp
leave
jl
sar
or
push
fistps
inc
sbb
test
mov
jecxz
jae
jl
push
pop
pop
push
push
inc
ret
ljmp
les
add
inc
iret
hlt
clc
inc
ljmp
inc
flds
je
inc
and
xor
bound
into
outsb
mov
sbb
push
jae
je
das
pusha
mov
cmp
sub
sbb
rol
and
xchg
add
in
fs
jle
icebp
push
push
mov
les
cmp
in
in
sub
cmpsl
jp
mov
sub
fmull
mov
jmp
in
xchg
in
int
sub
mov
jmp
mov
scas
push
imul
and
lret
mov
pop
add
sbb
adc
pusha
sbb
mov
dec
jecxz
push
outsl
sbb
inc
add
lret
fdivrs
fbstp
sbb
in
xchg
xchg
cli
or
sbb
sub
shrl
mov
scas
mov
js
addb
adc
ss
and
cmp
movsb
sub
sahf
movsl
jp
adc
testl
push
mov
push
cmp
pop
xchg
xchg
inc
jg
push
mov
aas
ret
int3
xchg
stos
cmp
pop
xlat
cmpsb
mov
ret
icebp
xchg
fcoms
lret
jle
pop
lret
lds
jo
pop
mov
sbb
jecxz
sarb
loop
sub
pop
mov
scas
jne
cmpsb
repz
testl
test
sbb
into
sbb
pop
out
jns
pop
mov
jne
mov
push
aaa
lahf
mov
dec
rcrl
adc
xlat
sub
data16
iret
dec
js
xor
push
lret
test
popf
popf
xchg
stos
cs
push
push
sti
test
push
pop
addr16
push
out
dec
fiadds
dec
nop
rcl
mov
or
and
dec
push
out
jecxz
xor
cld
mov
cli
loop
shll
mov
push
push
jge
js
fiaddl
pop
movsl
lods
aaa
lods
mov
cmp
sbb
cmpb
or
adc
cmpsb
pop
imul
push
bound
adcl
dec
add
cmp
loopne
xchg
xchg
and
imul
fisubl
rorl
cmc
movsl
shlb
es
scas
js
frstor
inc
outsl
jno
mov
xchg
inc
xchg
and
pop
dec
repz
ss
fadds
mov
cmpsl
outsl
in
adc
aad
xchg
scas
inc
mov
imul
pop
jb
jbe
call
jnp,pt
ret
movd
in
mov
pusha
jb
dec
xchg
and
imul
dec
rol
jp
cmpb
les
jno
in
pop
fsubs
stos
cmp
push
loopne
int
out
in
dec
and
fcoml
sub
pop
hlt
data16
pop
jns
cmc
xor
cmpsb
data16
das
into
adc
loop
and
loopne
dec
lock
push
in
insl
out
dec
inc
xor
cmp
pop
inc
enter
inc
jecxz
lods
jns
in
add
scas
pop
jmp
in
sbb
mov
fimull
mov
loop
jp
movsl
cmp
sbb
mov
push
imul
xor
push
inc
mov
sub
jnp
cmp
xchg
add
shrb
jl
ficompl
dec
test
cld
rorb
inc
or
pop
in
out
aad
jl
mov
inc
cmpl
jo
adc
ret
sub
adc
xor
movsl
fidivl
sbbl
xor
pop
mov
fnsave
jle
js
push
lret
push
add
fistpl
rcl
fwait
mov
jge
xchg
xor
xchg
rol
cmpl
mov
mov
mov
xchg
sub
add
xchg
pop
inc
jge
popf
stc
and
mov
fabs
mov
jae
xchg
in
push
inc
cltd
out
xorb
lods
insb
pop
in
int
mov
out
adc
je
ljmp
loope,pt
cmp
xchg
dec
mov
mov
lret
and
aas
or
cld
mov
sub
test
js
iret
mov
xchg
addr16
mov
jmp
dec
sarb
lods
clc
xchg
xor
ja
pop
mov
lcall
sbb
mov
mov
inc
jbe
rolb
push
sbb
xlat
mov
pop
inc
cmp
loope
pop
mov
sub
xchg
inc
sub
and
and
jae
dec
cmp
and
movsl
add
arpl
or
std
mul
push
lret
sub
cmp
lret
and
and
loope
xor
test
ficompl
sbb
pop
arpl
pop
js
ret
mov
outsl
movsl
out
adc
movsl
jnp
in
inc
xchg
xchg
push
inc
clc
pop
mov
jno
cltd
or
jecxz
push
in
cmc
in
sub
push
repz
adc
call
xchg
pop
push
rcr
xchg
xor
daa
push
mov
jg
xchg
fldenv
test
mov
xchg
inc
loop
xchg
repnz
out
mov
movsl
mov
or
dec
inc
pop
mov
vcmpsd
shll
mov
and
dec
incb
outsb
scas
mov
test
jnp
popf
fisttpl
aad
ret
xor
inc
out
frstor
jecxz
add
dec
outsl
jno
xor
pusha
cld
stos
test
cmp
lret
stos
test
and
rol
bound
push
inc
push
cwtl
ret
dec
jae
pop
pusha
lds
fisubs
cmp
fcomi
push
cli
pop
mov
andb
dec
ljmp
iret
push
jo
lret
flds
cmp
sub
and
inc
sub
pop
fadds
iret
cltd
pop
jl
std
int
jl
mov
and
pop
xor
sbb
mov
es
cmp
shll
jb
xlat
leave
aas
and
dec
data16
hlt
je
jb
pop
rclb
mov
mov
xor
pop
std
mov
rep
xchg
jg
in
jg
jo
cmpsb
loop
add
imul
mov
insl
adc
hlt
xor
imul
or
outsb
sbbb
xchg
dec
and
clc
adc
sub
xchg
mov
sbb
aam
pop
pop
arpl
mov
aaa
mov
cmpsb
jl
loop
popf
mov
lock
and
inc
fmuls
icebp
mov
insb
int
popf
icebp
mov
popf
in
cld
xchg
nop
xchg
and
lods
cwtl
pop
mov
repnz
mov
jp
jg
jmp
dec
aad
xchg
cmp
lahf
addr16
cmpsl
ret
mov
dec
jge
dec
das
or
pop
cld
arpl
in
pushf
pop
outsb
mov
scas
mov
cmc
lods
or
ret
stc
inc
aam
arpl
or
inc
iret
loopne
out
mov
hlt
adcl
outsb
mov
int
addr16
iret
fdivr
sub
andb
sbb
fwait
xor
rcr
pusha
cmp
fldcw
jl
xchg
fcoms
jg
push
hlt
es
xor
das
push
add
cli
loopne
outsl
stc
daa
mov
xor
out
xlat
pop
xor
out
test
cli
adc
or
jne
iret
inc
aam
lock
popf
xchg
pushf
aam
xchg
sbb
popa
jne
xor
adc
std
jnp
out
or
js
push
popa
xor
lcall
jne
dec
cmp
jge
inc
test
out
or
into
mov
mov
mov
add
xchg
or
inc
adc
xchg
push
js,pt
cmp
cli
cltd
sbb
shlb
fidivl
push
mov
push
emms
or
cmp
add
sbb
test
jnp
outsb
jecxz
pop
inc
mov
aas
loopne
xlat
pop
xor
dec
scas
mov
jle
repz
hlt
aaa
in
or
pop
mov
xchg
push
adc
inc
repnz
sub
cltd
es
pop
mov
sarl
and
cmpsl
jle
mov
pop
repz
or
mov
stos
js
sub
cmpsb
rorb
jl
and
and
xor
mov
xchg
or
sub
es
xor
cmc
in
xchg
add
add
add
sbb
sbb
mov
fmul
jge
jmp
push
dec
push
mov
sbb
cmc
mov
sub
ret
mov
fwait
lret
cli
push
sarl
sbb
fcmovnb
int
sbb
push
mov
sbb
push
mov
add
mov
inc
push
jg
fimuls
pop
pusha
addr16
add
ja
setge
cld
cmc
loope
out
orb
incb
test
adc
mov
scas
adc
stos
xor
loop
fwait
test
in
mov
pop
fcoml
movsb
loope
fwait
cwtl
xor
in
pop
jo
jno
dec
pop
dec
xchg
pop
xor
or
insb
loope
in
pusha
rcrl
insl
pop
je
in
cltd
push
and
inc
inc
in
outsb
cmp
dec
daa
jnp
and
sbb
daa
rcrl
dec
pop
mov
andb
roll
xor
std
push
fwait
dec
sub
jge
or
out
pusha
fwait
inc
dec
push
cmpl
roll
xchg
int
or
mov
dec
insl
pop
nop
das
jg
push
mov
jb
add
orl
lods
out
add
rorl
mov
jge
mov
add
stc
mov
pushl
sub
fbld
popa
jp
rcll
addr16
xchg
fstps
out
mov
push
in
adcl
xor
int3
sbb
jo
inc
cmp
ds
dec
popa
adc
jb
xrelease
int
add
sbb
or
mov
inc
sbb
push
pop
mov
outsb
cmp
call
sti
jns
cmp
jmp
xchg
xorb
loopne
push
mov
ss
or
pushf
mov
dec
or
sbb
jmp
pop
mov
lret
fisubrs
shr
cmp
fcompl
xchg
dec
jb
pmaddwd
imul
cs
enter
pop
xchg
push
xchg
sub
int3
xor
int3
data16
push
rcll
mov
arpl
adc
adc
sbb
imul
push
shll
out
inc
add
mov
div
mov
repz
xlat
fbld
sahf
sbb
subb
lcall
dec
or
test
testb
mov
add
in
fistpll
loop
sub
popf
adc
ljmp
jbe
ds
cmpsb
int
xorl
inc
and
add
sub
sbb
imul
mov
fs
enter
push
mov
and
aad
xchg
aaa
xor
test
or
je
stos
push
mov
test
insl
ret
fdivp
mov
add
hlt
cmp
sub
mov
ret
lcall
lcall
test
mov
in
hlt
dec
mov
jp
rep
inc
lock
sbb
adc
pop
loop
imul
inc
loopne
cmc
outsb
iret
aaa
mov
cwtl
jns
dec
mov
push
cli
sbb
mov
das
or
scas
movsl
ret
pop
das
cmp
push
test
outsb
xchg
and
jns
ret
movsb
jge
fwait
xchg
pop
fnstcw
outsb
fisubl
mov
xor
pop
mov
lahf
inc
loop
mov
adc
shll
fsubr
mov
ss
stos
mov
cmp
testl
adc
js
xorb
lods
pop
xor
lcall
imul
cmp
push
inc
in
push
mov
adc
xchg
pop
popa
jnp
outsl
mov
cwtl
fwait
sbb
in
scas
mov
cmc
jecxz
jns
mov
loope
dec
mov
jne
out
inc
push
dec
mov
in
stos
inc
mov
xor
pop
int
inc
push
je
seto
mov
cmp
in
push
inc
clc
push
ja
mov
jge
xchg
scas
jno
mov
das
inc
pop
cwtl
xor
dec
sbb
mov
imul
imul
mov
dec
in
out
xchg
mov
jecxz
xchg
mov
imul
stos
outsb
mov
xchg
jb
test
push
or
push
sbb
outsb
or
ret
mov
inc
ds
fldt
ljmp
or
cmp
daa
sbb
js
ds
add
adc
jmp
shl
xchg
je
mov
fdivrs
jno
mov
or
xor
jns
shl
loope
arpl
pop
jb
test
dec
xchg
ljmp
sbb
insb
pop
fimuls
stos
add
fwait
fwait
mov
mov
sti
push
mov
popf
jae
daa
cmp
or
inc
cld
and
ret
ret
sbb
lds
mov
insl
pusha
test
pop
cmp
sub
fwait
sub
mov
cmp
or
jbe
cmp
insb
jo
dec
jnp
aas
das
push
or
std
sbb
jmp
jmp
inc
lds
fldt
fbld
stc
mov
test
cli
pop
mov
push
pop
jne
mov
push
and
pop
adcb
popf
add
add
push
mov
cld
push
jo
sub
pushl
out
mov
fisubl
adc
mov
fsubs
push
sahf
arpl
xor
jle
jmp
loop
clc
adc
sbb
dec
adc
and
popf
fcoml
loopne
pusha
adc
add
inc
clc
lcall
iret
fsubl
add
fdivrl
pusha
lret
adc
mov
fmull
xchg
loopne
jl
inc
dec
nop
xor
enter
jge
movsl
mov
pop
mov
jbe
sti
cmp
imul
inc
clc
stc
dec
push
out
bnd
cmpsb
jge
into
ret
jnp
push
addl
xchg
jbe
dec
test
push
insl
je
adc
sbb
jne
loopne
stos
mov
fs
scas
ret
pop
push
and
dec
test
mov
daa
or
pop
jl
inc
in
movsl
mull
pushf
call
or
popa
adc
sub
mov
jnp
sub
xchg
jns
adc
stos
out
mov
jg
hlt
lahf
adc
mov
test
xor
inc
fdiv
or
scas
call
mov
xor
lahf
xsavec
mov
or
imul
add
out
add
or
xor
mov
mov
or
outsb
mov
in
inc
inc
sahf
adc
mov
jl
mov
lret
and
cli
add
dec
pop
jo
xchg
test
outsl
lods
and
dec
mov
rorb
je
push
popf
mov
jecxz
sbb
xchg
cli
movsb
dec
mov
popa
mov
leave
jno
rclb
sub
mov
ja
clc
xchg
lods
in
test
cmpsl
and
push
lahf
int3
mov
call
or
sub
pop
stos
addb
pop
add
sbb
sahf
loope
push
cmpsl
mov
pusha
testl
loope
out
fidivl
and
popa
xor
mov
xchg
jne
hlt
sub
pop
call
sbb
ret
es
add
shlb
adc
push
aam
jne
and
orl
adc
gs
hlt
scas
out
pop
sar
notb
jae
push
call
jecxz
lret
mov
fnstcw
mov
lcall
and
xchg
out
js
inc
sub
sub
push
and
in
in
dec
push
mov
repz
inc
repz
xor
pusha
xchg
push
out
lahf
jns
fistl
lods
mov
mov
pushf
inc
popf
negl
mov
insl
inc
popf
xor
lahf
adc
mov
jb
sub
inc
xchg
leave
loop
adc
adc
jnp,pn
fmuls
push
mov
xchg
mov
xchg
xchg
std
loope
in
push
bound
test
movsl
notl
and
stc
add
sub
pop
test
fistpll
xchg
sahf
stc
lahf
stc
dec
fistpl
movsl
pop
and
sub
jecxz
fcompl
mov
inc
scas
mov
push
sahf
xchg
xchg
out
xlat
fs
adc
clc
cmp
es
mov
mov
inc
aaa
call
aas
repz
xchg
jb
add
cli
cmp
mov
lods
inc
in
mov
pop
jae
jle
in
jmp
mov
fcomip
push
sti
and
xchg
push
mov
ljmp
es
pop
in
and
scas
pop
divl
call
add
push
add
cmpsl
dec
daa
cmp
sub
outsb
jecxz
push
push
dec
or
lock
sbb
cmp
add
notl
sub
repnz
mov
pop
aas
xlat
dec
xchg
stos
scas
sti
clc
xchg
and
scas
pop
ret
xor
mov
cmp
lds
loope
lret
sub
mov
nop
js
lcall
mov
add
insb
mov
ljmp
insl
jecxz
pop
pop
movsb
and
sbb
loop
xchg
std
das
sub
js
inc
movsl
cmp
je
popa
push
fistpl
scas
mov
je
outsb
mov
pop
inc
jbe
mov
pop
xor
aaa
loop
sub
jge
cmp
jg
jg
gs
mov
jne
mov
add
iret
fstps
mov
popf
out
cmp
stos
xor
cmpsl
add
xlat
and
add
cmpsb
fistpll
mov
in
push
mov
jbe
sub
adc
or
ja
mov
add
sub
mov
or
jmp
in
sarb
jb
bound
in
jnp
adcl
in
add
pusha
nop
shll
pop
sub
je
and
lds
nop
mov
push
lods
pop
rep
xchg
pop
mov
cmp
jns
dec
sbb
icebp
negb
insl
cmp
ret
xchg
pop
enter
push
and
cmp
aaa
xchg
lret
jbe
inc
pop
pop
add
push
loope
push
push
xlat
push
jno
pop
jp
imul
jp
movsb
shl
pushf
test
push
mov
or
push
imul
push
or
mov
cwtl
push
mov
popa
stos
lcall
cmp
dec
test
adc
xor
xor
push
lock
and
jno
outsl
sahf
loop
insl
ficompl
lds
bound
jmp
lock
or
insl
lds
jnp
call
jb
insl
data16
shll
or
cmpsb
ja
sub
es
or
jo
push
cmpl
jecxz
lods
cmpl
xchg
dec
or
cli
mov
iret
jle
ret
scas
daa
jge
lret
cmp
call
push
fsubl
cmp
repnz
stc
or
fimuls
cmp
cmp
sub
jl
dec
cmpsl
push
ja
sti
enter
sarl
sbb
sbb
scas
sarb
jecxz
call
jg
movsb
jmp
pushf
cwtl
or
pop
nop
pop
outsb
push
sti
int3
cmpsb
xor
inc
sbb
sbb
lahf
or
mov
decb
cmc
lock
mov
lods
loope
stos
xor
adc
xchg
inc
lods
pop
adc
rcll
xchg
dec
and
adc
push
dec
add
lock
add
adc
sub
mov
arpl
push
scas
xchg
loope
outsb
test
or
mov
jl
inc
lods
shll
imul
push
jns
mov
xor
js
aas
and
fwait
imul
aad
cmp
mov
push
jo
and
scas
xchg
jmp
cmp
adc
sub
loop
jb
ss
lds
loopne
in
test
adc
xchg
pop
adc
inc
dec
mov
sbb
addr16
mov
cmp
out
arpl
mov
cwtl
rclb
ficoml
jecxz
pop
mov
xchg
call
push
imul
stos
int3
and
push
dec
dec
stos
aam
or
inc
or
frstpm(287
mov
sbb
inc
xchg
fcmovnu
insl
sahf
enter
mov
repz
sbb
lahf
mov
clc
or
insb
cld
cmp
nop
cmp
mov
aam
fisttps
xor
sti
data16
or
cmpsl
xchg
daa
sarl
lret
nop
push
mov
flds
rorl
fwait
xlat
jle,pt
xor
xchg
jnp
xor
mov
xchg
movzwl
jne
sbb
adc
jne
leave
push
subb
lcall
or
xchg
xchg
or
sbb
pop
or
stos
mov
sbb
cmp
fsubr
push
jmp
cmpsb
cmp
cmp
iret
inc
push
js
mov
adc
insl
js
dec
mov
or
cmpsb
jge
push
inc
fcoml
xchg
and
xchg
test
jnp
jmp
fwait
mov
mov
xor
mov
std
outsl
mov
cld
pop
mov
fs
adc
dec
jmp
inc
adc
pusha
pop
pop
inc
mov
pop
xchg
shlb
cmpsl
jae
in
jmp
fsubs
cmp
gs
pop
int
ja
fistl
sbb
rcl
push
nop
or
fs
mov
and
mov
jl
inc
test
rcrb
mov
mov
cld
iret
adc
sbb
xor
mov
inc
jno
mov
testl
jmp
mov
push
mov
movsb
dec
jl
add
mov
push
mov
test
push
scas
ljmp
hlt
xor
sahf
subb
jne
or
loop
ja
push
push
or
fistpll
das
sti
data16
lret
push
sbb
mov
nop
xor
or
jle
jo
push
mov
fdivl
aam
and
or
pop
dec
in
inc
rclb
xchg
int3
mov
cmp
mov
lret
stos
jb
push
sub
into
lods
outsb
daa
xchg
xchg
xlat
inc
daa
out
popf
xor
ret
sbbb
pop
fnstenv
ror
shll
fwait
aad
rcr
sub
inc
mov
movsb
add
adc
scas
test
fcoms
mov
aam
pushl
push
adc
push
fs
idiv
adc
dec
sub
and
push
or
cmp
imul
dec
fidivrs
test
pusha
xchg
inc
in
or
je
or
jne
insl
inc
xchg
push
cwtl
shrb
jl
mov
outsl
pop
loop
push
mov
xchg
pop
divb
jp
mov
scas
movsl
mov
data16
outsb
sti
call
pop
and
jb
rol
add
leave
ss
shrl
inc
xchg
cs
cmp
sbb
outsb
xchg
jl
push
out
cwtl
aad
xchg
inc
hlt
inc
sahf
cwtl
add
je
xchg
xchg
or
cmp
dec
or
xchg
xchg
mov
lods
push
pop
test
addb
cmovl
pop
icebp
mov
pop
inc
jl
shlb
sti
js
pop
daa
and
sti
and
mov
mov
lret
xchg
sbb
pop
mov
aad
mov
mov
ss
jg
push
adc
push
xchg
scas
into
jmp
sbb
xchg
mov
jbe
mov
jmp
ret
iret
out
sub
sbb
add
fistps
mov
pop
lds
pop
cmp
nop
les
aad
and
mov
rcll
mov
test
rcrb
shlb
adc
push
std
loop
lods
clc
sahf
or
js
in
movsl
mov
push
push
or
pop
add
shll
sub
int3
int3
call
push
bnd
mov
jmp
adc
test
cmp
mov
fcompl
std
repz
jb
fsub
or
xchg
xchg
jge
inc
sub
pop
lret
push
sbb
dec
call
dec
icebp
lock
pusha
push
cmpsl
xchg
inc
mov
addr16
out
mov
add
cmp
imul
outsb
push
loope
rolb
sub
test
sbb
mov
imul
test
pop
add
xor
and
jg
sar
dec
sbb
movb
xchg
mov
jmp
and
out
imul
adc
int
call
push
cs
dec
shll
mov
adc
int3
insb
push
pop
adc
jge
xchg
mov
jno
jae
mov
outsb
adc
xchg
sub
ss
ficoms
push
jns
push
loop
arpl
movsb
arpl
stos
pushf
mov
outsb
jp
mov
sbb
inc
mov
fnstsw
xlat
cmp
testb
mov
popa
outsl
ss
inc
sub
addr16
out
jmp
cltd
adc
iret
lock
inc
push
jns
repnz
out
lret
stos
xchg
stos
loope
xchg
mov
sbb
adcl
adc
mov
add
dec
cmp
pusha
pop
aad
out
call
push
cmpsb
jns
and
xor
cmp
mov
jb
inc
fcoms
push
daa
sbb
lods
pusha
mov
xor
pop
and
arpl
xchg
gs
push
jno
cmp
lret
scas
shrb
mov
aaa
pop
mov
lea
dec
and
mov
frstor
cmp
push
fisubl
add
test
sub
testb
mov
hlt
insl
add
fwait
pop
jnp
mov
sbb
jmp
jae
mov
jle
dec
adc
call
mov
clc
in
xchg
roll
aaa
test
pop
mov
add
dec
ja
pop
dec
out
inc
jbe
ss
pusha
loopne
lea
add
cwtl
idivl
push
out
cmpsb
mov
sbb
jle
add
mov
inc
imul
std
hlt
lret
lret
sub
cld
and
jecxz
imul
push
into
les
sti
mov
fwait
repz
es
addr16
arpl
daa
cld
and
cs
fiaddl
or
mov
inc
in
lds
outsb
cltd
mov
xor
pop
jb
mov
cmpsb
lds
out
dec
cltd
int3
sbb
or
ds
cli
lret
in
adc
and
cmp
sbb
je
and
dec
add
dec
xorl
lods
push
jae
loopne
cwtl
or
cmp
cmp
test
mov
pop
test
pusha
rcrb
push
mov
jmp
mov
mov
sbb
rcll
mov
call
xchg
fwait
push
mov
or
popa
mov
sub
lret
push
cmpsb
pop
or
ds
and
cmc
cli
cmp
inc
ss
dec
test
or
mov
movsb
dec
arpl
cli
dec
mov
addr16
in
push
lock
sbbl
cltd
add
cli
add
jns
js
loopne
cwtl
adc
sahf
call
inc
dec
dec
cmp
int3
inc
insl
jecxz
addr16
mov
arpl
pop
jge
dec
adc
insb
stc
cmpsl
insb
and
pop
fisubrs
or
inc
xor
mov
mulb
xchg
out
int
sub
and
rcrb
push
add
jle
inc
movsb
cld
inc
les
jns
into
jae
shl
popf
int
lock
or
mov
xchg
hlt
loope
negw
push
mov
push
imul
sbb
icebp
mov
add
loop
mov
int3
repz
gs
pop
bound
pop
fistpll
mov
push
mov
xor
adc
xor
mov
int
inc
sbb
scas
insb
jne
jo
mov
push
lea
inc
mov
xchg
jecxz
ljmp
xor
sbb
dec
into
xor
out
je
arpl
pop
iret
stos
mov
or
lods
add
dec
and
rorl
adc
dec
das
jp
push
or
fwait
xor
xlat
pop
out
mov
mov
in
push
fildll
hlt
jg
mov
clc
add
mov
leave
lock
stos
cld
or
neg
push
cmp
cld
cltd
fcmove
and
in
mov
iret
ds
out
bound
out
push
lods
pop
mov
nop
sub
outsl
out
sbb
lret
insb
out
and
mov
pop
mov
insb
sub
lret
shlb
sbb
add
lret
inc
mov
pop
lret
test
mov
mov
and
add
or
mov
xchg
jmp
push
sti
xor
jnp
dec
mov
movsb
aam
sbb
xor
mov
fwait
insb
push
cmp
cmpsl
mov
pop
mov
cmc
mov
mov
aam
add
stos
ss
or
je,pn
cmp
jne
gs
or
sbb
aam
sub
fildl
fcmovnb
sub
xchg
sahf
pop
pop
jae
mov
and
scas
or
imul
aam
addb
jbe
sbb
mov
cli
jmp
dec
sbbl
dec
xchg
in
mov
push
out
pop
shlb
outsl
cmp
xchg
popa
mov
pop
stc
scas
or
ret
iret
jmp
mov
adc
or
pop
mov
pop
mov
jmp
add
adc
mov
pop
mov
inc
ret
jae
adc
jle
mov
in
test
mov
xor
movl
clc
or
pop
mov
add
mov
xlat
cmp
ja
jne
jbe
int
sub
ljmp
jne
ret
lods
cli
cmpsb
rorb
addr16
jge
sbb
sub
int
fildl
dec
lcall
pop
xchg
ret
aas
or
fimuls
sbb
aad
data16
hlt
fidivs
and
sbb
push
jnp
pop
fmulp
mov
lahf
cld
shlb
xor
cmpsb
pop
loop
stos
or
add
lods
cmp
fadds
or
fstpt
sub
popf
test
filds
out
xchg
mov
push
xchg
mov
jne
daa
aad
mov
icebp
adc
loopne
mov
adc
pop
push
adc
xor
inc
pusha
repz
and
cmp
popf
xorb
xchg
outsl
ret
adc
das
jl
mov
div
jle
cmc
jmp
nop
xchg
ror
mov
sub
dec
ffree
lea
push
jp
sub
ror
in
aaa
mov
int
xchg
popa
clc
out
mov
add
xor
push
jmp
addr16
push
mov
sbb
push
icebp
pop
rorl
add
inc
and
xchg
rolb
add
fcos
sbb
dec
clc
fsubl
test
xor
cs
nop
insl
jle
repz
pop
stc
inc
mov
aas
in
lods
pop
add
cmp
test
xchg
inc
fistps
cld
lds
mov
lret
es
mov
or
push
cs
mov
aam
nop
cli
mov
add
insl
or
dec
daa
clc
loope
sub
mov
pop
std
pop
sub
jbe
insb
mov
pop
out
mov
ja
fwait
lods
dec
jp
loop
mov
sub
leave
test
cs
push
cmp
addr16
aas
dec
dec
xchg
dec
in
insb
loopne
ret
dec
add
pop
push
xchg
inc
cmp
xchg
call
test
cli
mov
inc
mov
inc
sahf
mov
dec
shrb
xor
test
adc
push
nop
xchg
pop
cmp
insb
jnp
adc
xchg
fcoms
or
les
dec
dec
xchg
lds
jmp
push
mov
pop
rorl
push
adc
dec
out
pusha
mov
sub
dec
and
les
and
sar
imul
lds
arpl
inc
stos
inc
leave
dec
pop
mov
sbb
das
jno
cmpsb
mov
and
dec
lcall
xchg
mov
sahf
push
sub
pop
dec
cmpsl
dec
imul
lea
rclb
pop
es
cmp
cmp
cmp
in
fcoms
sub
jmp
pop
leave
cs
mov
in
dec
sub
out
popl
xchg
sbb
stos
fprem
and
or
xchg
or
adc
dec
add
pop
sbb
pop
fwait
push
cld
pop
sub
dec
cwtl
sub
outsb
xor
sbb
imul
push
xorl
xchg
loopne
inc
fmuls
hlt
enter
js
outsb
gs
xor
test
ftst
xchg
scas
mov
enter
fwait
enter
or
out
inc
mov
popa
dec
cmp
stc
popa
mov
add
sbb
icebp
mov
insl
and
add
dec
lea
pop
sub
cmp
push
icebp
lcall
push
push
ss
mov
scas
cmp
into
mov
pop
enter
loope
sub
push
test
pop
inc
pop
mov
nop
cs
xchg
ss
push
into
std
add
into
xlat
or
mov
pop
xchg
mov
xchg
jge
dec
jl
out
xor
mov
mov
test
fstpt
cmp
lea
add
into
imul
mov
add
gs
inc
loope
sbb
or
add
jb
loopne
add
in
inc
xchg
in
int3
movsb
aaa
cmp
pushf
stos
sub
cmp
stc
push
int
jns
test
pop
icebp
rcll
push
xchg
pop
xchg
push
sarb
mov
pop
jb
rcll
cmp
cmp
jecxz
jp
aam
lods
negb
insb
out
or
pop
sub
or
mov
aaa
jp
mov
clc
cmp
scas
ss
cmp
icebp
fidivrl
in
inc
xchg
and
in
sbb
cwtl
and
push
lods
pop
cmp
out
mov
xchg
xchg
pop
in
jmp
jns
das
addr16
or
mov
inc
inc
clc
outsl
inc
jecxz
push
inc
out
repnz
icebp
add
das
mov
cli
push
mov
mov
es
sub
mov
lret
inc
loope
cmp
mull
lds
sub
test
cmc
in
sbb
les
outsb
xor
aad
movsl
xchg
fnsave
fidivrl
scas
sarl
mov
mov
cmpsl
test
add
sti
add
dec
jae
pop
and
pop
sbb
add
lret
clc
pavgw
daa
das
repnz
jns
adc
jmp
incl
push
pusha
repnz
lods
dec
fwait
inc
mov
ret
mov
push
push
pusha
push
sarb
clc
inc
push
mov
adc
pop
cwtl
mov
dec
xchg
scas
test
int
mov
in
les
pop
cmp
pop
cmc
insb
js
in
dec
sbb
cmpsb
push
add
cmp
jp
push
stos
cmp
aam
jecxz
sbb
popa
in
cmp
pop
cwtl
mov
add
sbb
sub
mov
fisubrs
sub
adcl
out
pop
pop
inc
or
xchg
cmpsl
inc
jb
pusha
mov
fdivs
dec
jg
and
scas
or
nop
sbb
adc
adc
push
in
ja
xchg
jp
sub
mov
inc
iret
mov
rcrl
leave
ret
repnz
aaa
icebp
nop
lods
mov
xchg
fucom
xor
mov
cmp
pop
into
sub
jmp
push
inc
mov
cmc
test
add
jo
daa
mov
mov
sub
ficomps
pop
sbb
loop
pusha
cli
mov
cmp
jae
popa
filds
mov
out
testl
dec
cmp
sarb
jae
rorb
xchg
xor
cmp
test
clc
fs
cmp
lods
lahf
jl
xchg
fstp
and
dec
icebp
popf
cmp
or
das
adc
xchg
sahf
shrl
imul
mov
scas
add
mov
enter
and
cmp
scas
or
jns
int3
and
sub
push
in
xchg
testl
sbb
cwtl
sub
mov
mov
cs
jl
push
shr
icebp
push
xchg
ja
pop
std
scas
clc
push
mov
sbb
fimuls
xchg
sub
pusha
adc
pop
lcall
jle
loop
stc
fs
and
cmp
aam
inc
pop
ss
adc
mov
and
fwait
cmp
std
js
rol
add
push
adc
add
sub
outsl
jb
stos
mov
divb
mov
xchg
out
mov
sub
mov
lods
div
jg
mov
add
and
stos
push
shl
add
and
negl
ds
mov
faddl
sub
inc
dec
mov
mov
add
mov
cmp
push
fcomp
scas
jnp
test
jp
mov
push
xchg
push
sbb
loope
xlat
xchg
ds
clc
leave
movsb
mov
repnz
sbb
push
test
inc
mov
push
inc
mov
loope
pop
daa
in
jnp
or
fs
mov
pushf
xchg
adc
stos
icebp
push
sahf
pop
jle
xchg
jne
sub
cmpb
in
mov
test
or
std
lods
pop
in
lret
xchg
push
call
inc
adc
add
or
sbb
fsubp
scas
or
std
xchg
imul
daa
and
pop
outsl
jo
xor
cmp
mov
enter
lcall
jecxz
cmp
int
int
imul
cmp
adc
notb
mov
jne
xchg
mov
add
xchg
push
les
xchg
jo
xchg
call
das
aaa
clc
mov
mov
or
test
rcr
adc
adc
mov
jnp
xchg
mov
test
test
xchg
fbld
sarb
mov
sbb
xchg
sbb
jle
movsb
add
sbbl
es
rolb
adc
pop
and
sbb
outsb
fcmovb
ret
cmp
cmp
adc
ja
add
scas
mov
movsb
dec
mov
adc
test
inc
jmp
jmp
negb
mov
stos
stc
iret
jne
xchg
xchg
clc
mov
xchg
sqrtps
test
xchg
and
les
mov
cmp
add
test
stos
inc
cmpsb
repnz
movsl
fdivrs
add
jnp
mov
xchg
pop
imul
rolb
jmp
in
mov
outsb
adc
int3
subl
shrl
js
inc
leave
mov
rorl
xchg
loope
out
mov
loop
add
scas
mov
sbb
or
ja
lahf
pop
add
push
cmp
cmpb
cmp
xor
push
inc
cmp
sbb
inc
xlat
lds
in
mov
test
imul
add
ret
dec
stc
and
loopne
and
mov
jg
lods
pop
gs
lds
pop
push
test
and
jmp
cmp
xor
sub
add
lods
rcll
into
dec
jo
inc
addr16
lock
ljmp
cmp
imul
push
add
mov
cld
sub
mov
nop
psllw
sub
sub
jnp
popa
loopne
movsl
jno
xlat
jecxz
add
inc
push
pop
cltd
push
leave
rorl
mov
das
andl
jae
dec
xor
add
pop
mov
sub
daa
ljmp
int
and
xchg
add
movsb
addr16
jge
xchg
adc
mov
in
sub
nop
rclb
aaa
in
aad
lret
shr
enter
pop
sub
lods
in
cld
jno
lret
xor
xchg
push
adc
jae
negl
mov
shll
dec
sbb
cltd
add
and
int3
dec
leave
jp
push
jmp
mov
data16
cmpsl
lds
sub
sbb
lods
sub
cltd
mov
xor
shrl
pushl
sti
shlb
sub
lods
std
rolb
jmp
inc
cltd
jbe
adc
test
dec
sub
jge
mov
jecxz
push
xor
mov
mov
jge
lahf
addr16
inc
mov
fdivl
pop
and
push
mov
out
xorl
lods
test
push
js
mov
and
push
push
les
into
roll
cmp
xlat
stos
cmpsl
scas
repnz
insl
mov
adc
data16
xor
les
mov
incl
scas
scas
cmp
push
adc
ficoml
mov
lahf
pop
call
inc
js
imul
shl
fs
daa
push
inc
pop
push
inc
cmp
cmpsl
mov
jnp
movsb
nop
ja
lock
and
or
inc
sbbl
popa
les
dec
test
imul
rolb
out
mov
jecxz
pop
cmc
in
cmp
jns
lahf
push
cmpsl
dec
or
mov
jmp
aam
je
mov
ljmp
push
insb
dec
inc
xor
sbbl
push
jb
xorb
inc
jg
lahf
int
inc
add
dec
aam
adc
sbbl
jns
loop
cmp
insb
imul
xchg
ds
mov
jo
jnp
xchg
loope
shlb
mov
std
repz
pushl
jne
aam
mov
loop
enter
mov
mov
dec
in
rolb
rorl
rcrb
cmp
scas
jo
cmp
sbb
jecxz
int
cmp
std
cmp
mov
or
cmp
movsb
repnz
enter
mov
push
imul
aaa
out
mov
imul
shll
jae
xorb
inc
jmp
mov
popa
pop
das
inc
imul
push
les
insb
xchg
js
popa
clc
pop
cs
jle
cmp
pusha
loope
loope
fwait
dec
pop
ds
jge
stos
lods
mov
test
pop
hlt
in
xchg
and
mov
ret
loope
test
inc
cmc
inc
pop
ja
cmp
addr16
rol
sbb
outsb
xchg
xlat
push
cmc
pop
mov
mov
mov
sbb
mov
ret
sub
sub
dec
sbb
push
mov
insb
mov
sbb
cld
or
mov
mov
mov
test
pop
adcl
jmp
jge
imul
dec
hlt
cmp
inc
jmp
cwtl
jbe
ljmp
popf
sbb
ja
xor
imul
push
pop
jg
stos
mov
js
dec
je
out
mov
frstor
lahf
dec
inc
sub
dec
add
lods
test
jge
pop
arpl
or
sti
jg
lods
out
sahf
movsl
je
xchg
lret
dec
mov
cmp
xor
inc
cmp
mov
das
stos
bound
inc
add
or
int
mov
sbb
shl
outsl
xchg
int
push
push
cmp
sbb
ja
xchg
fs
inc
bound
nop
jb
sbb
inc
mov
push
jecxz
iret
aaa
aas
cmp
shrl
jo
mov
sar
jns
outsb
jo
mov
fst
xor
push
cwtl
push
jnp
mov
add
mov
adc
mov
adc
sahf
pop
pop
xor
push
cltd
rorl
sbb
mov
mov
pop
push
out
jmp
add
jae
imul
pop
mov
cmpsb
mov
mov
push
pop
in
and
dec
lods
roll
sbb
repz
sub
sbb
dec
cmc
enter
xor
add
addw
pop
sub
sbb
dec
mov
xchg
lods
or
sbb
popa
and
inc
mov
lret
movsl
cmc
mov
xlat
repz
add
and
mov
mov
push
jecxz
jbe
int
mov
int3
adc
pop
in
mov
cmp
sbb
mov
jmp
push
inc
loop
push
imulb
fs
sarb
aam
gs
and
in
and
shlb
jmp
mov
lea
cli
int
mov
es
inc
call
xor
stc
aad
leave
pop
lods
cmp
mov
shl
sbb
jo
test
out
sarb
loopne
scas
pop
jb
mov
fildl
ja
pop
mov
cltd
xchg
ret
mov
dec
aad
fwait
or
pop
jp
cmp
es
inc
xchg
fdivrl
cmp
das
pop
push
pushf
adc
sub
pop
iret
in
push
adcl
js
lea
push
jmp
cmp
dec
es
add
pop
test
and
xchg
xchg
pop
or
sahf
ds
inc
jle
je
push
stc
sbbb
and
adc
xor
push
rorl
mov
insb
fcompl
dec
xchg
movsb
add
cltd
divl
adc
icebp
mov
aam
call
xchg
lds
std
sub
cmpsl
adc
push
mov
or
fnstenv
shll
lea
mov
test
pop
push
movsl
mov
sbb
enter
stc
and
cmc
iret
jb
and
or
xor
rolb
dec
jo
add
jbe
popf
xchg
movsl
dec
fsubrl
outsw
loop
sub
enter
mov
imul
ss
sar
call
or
xor
pop
fs
or
test
mov
xor
jb
lret
or
ror
pop
out
jnp
int3
xor
dec
sbb
outsl
mov
push
mov
cmp
adc
jae
xor
sbb
outsl
sub
push
sub
jnp
and
rcl
nop
dec
call
mov
les
out
mov
pop
jecxz
cmp
mov
mov
aaa
imul
mov
jle
fimull
scas
cwtl
scas
fistps
cmp
loopne
lret
call
inc
das
inc
jle
add
imul
adcl
inc
and
sub
lcall
sub
daa
add
adc
les
das
xchg
cmp
cld
in
popf
stos
movsb
stos
int3
cmp
js
leave
mov
jg
add
out
sbb
jecxz
fstl
call
sub
cli
out
andl
lcall
out
and
pop
shl
frstor
sbb
fsubr
mov
adc
adc
sub
mov
aam
xchg
mov
dec
sub
mov
mov
xchg
or
or
ljmp
ja
clc
adc
and
mov
add
outsb
and
cmpl
cmp
bound
call
push
mov
push
sti
cmp
xchg
cmp
lahf
add
pushf
jb
cmp
cmp
lea
mov
pushf
int3
dec
call
jl
dec
lods
ret
je
lock
dec
sbb
add
pop
push
sbb
sub
sub
pop
sbb
sub
das
aam
cmp
pop
int3
popa
jecxz
mov
xchg
clc
test
cwtl
push
jno
push
jg
outsb
and
rorl
divb
and
sbb
test
data16
pop
and
fidivl
inc
add
or
in
gs
mov
pop
push
stc
repz
jo
movsb
addr16
rcl
push
fsubl
xor
or
cmp
fstpt
cmp
xor
or
add
dec
shrb
dec
push
movsb
stos
fimull
mov
pop
out
mov
mov
mov
out
shll
xlat
int
loop
ja
push
out
movsb
dec
repnz
push
push
jl
pop
ja
mov
ss
test
in
mov
or
mov
xchg
pop
pop
pop
in
test
int
out
sbb
mov
sbb
xor
jge
js
shrb
xor
mov
or
adc
mov
aaa
mov
stc
fistps
dec
aam
nop
subps
adc
push
sub
stc
sbb
imul
aam
mov
mov
push
cmpsb
decb
jns
inc
push
sbb
mov
sbb
leave
repz
vmwrite
jecxz
popf
jmp
jg
dec
push
jns
cmp
cmpsl
shrb
loope
add
mov
push
sbb
cmpsl
push
andl
jecxz
push
mov
mov
cmp
in
dec
cld
cwtl
lea
shll
sbb
ds
icebp
pop
jbe
jbe
mov
mov
jmp
ljmp
xchg
push
test
enter
popl
add
out
mov
aad
scas
pop
push
daa
aas
jne
loop
mov
iret
push
mov
xchg
fwait
cltd
and
mov
inc
scas
adc
sti
xchg
aad
decl
movsb
xor
xchg
mov
cmpsb
call
out
xchg
mov
inc
or
cli
dec
mov
outsb
outsb
enter
add
adc
xchg
xchg
xchg
loopne
outsl
cmp
xor
out
cmp
pop
fldenv
push
int3
cmpsl
add
push
pop
dec
adc
mov
dec
and
in
mov
out
sbb
mov
sti
test
sahf
xchg
push
adc
clc
repnz
or
inc
cmp
fwait
or
es
xchg
shll
and
cmpsb
xchg
movsl
and
adc
pusha
scas
dec
jae
pop
jo
fstp
negb
in
add
or
dec
ret
xor
inc
mov
cs
add
xchg
push
inc
fbstp
mov
shrl
movsl
lods
es
test
fistpll
mov
iret
xor
dec
ds
cld
fcmovne
mov
stc
in
imul
imul
lock
add
mov
push
pushf
stos
push
push
and
aam
jle
inc
mov
negb
xchg
jnp
mov
adc
mov
jecxz
daa
test
icebp
mov
mov
mov
push
adc
push
lea
lock
sbb
adc
mov
insb
mov
sahf
dec
mov
jno
out
aaa
mov
jge
pushl
enter
pop
ss
and
add
fs
mov
sbb
mov
ret
mov
insl
sbb
jp
insl
dec
dec
test
cmp
sbb
test
mov
leave
mov
jns
aad
loopne
and
dec
imul
rcll
pop
out
mov
fildll
push
sarb
lods
loopne
hlt
mov
mov
push
ljmp
push
outsl
add
inc
lds
test
aad
mov
mov
xor
mov
in
enter
xor
loopne
cmpsb
jbe
flds
jl
or
lods
jo
inc
jae
daa
test
pop
hlt
mov
mov
pop
fsubl
out
xchg
or
inc
cld
test
stos
fadd
lods
daa
out
cmp
pop
outsb
jle
push
cmp
test
fs
test
add
sub
scas
jp
aam
mov
shlb
pusha
jb
ja
inc
mov
cmp
popl
pop
sbb
je
mov
loop
repnz
cs
mov
push
movsb
rcr
div
adc
mov
fs
xchg
pop
cmpl
repnz
sub
divl
jp
pop
nop
fcoml
in
iret
xchg
or
call
mov
in
mov
movsl
sahf
sti
add
imull
cmc
nop
std
jae
das
shrb
shr
xchg
dec
enter
or
xchg
xlat
sub
pop
jno
inc
mov
mov
sti
sub
shl
movhps
sub
pop
and
out
push
daa
xchg
daa
jp
xlat
ret
insb
fwait
jmp
bound
int3
fnstsw
sbb
adc
pushl
mov
imul
sub
or
inc
cli
push
mov
cmp
and
loope
cli
xlat
jb
mov
loopne
sub
out
push
int
cmc
sahf
sub
and
stc
and
mov
sti
push
adc
fsts
ret
pop
shlb
out
add
mov
lret
jbe
into
out
loope
shl
scas
mov
in
mov
sbb
mov
in
sub
outsb
js
xor
js
insb
push
inc
xchg
enter
repnz
iret
push
adc
cmp
lods
loop
insl
out
dec
sbb
jl
test
sbb
sti
xchg
cmp
scas
push
mov
jmp
push
add
rcll
sub
movsb
int
sub
pop
lds
punpcklwd
sahf
ljmp
icebp
dec
xchg
cmp
adc
jge
test
arpl
xor
add
xchg
les
adc
mov
inc
out
ljmp
dec
fimuls
out
jb
or
xchg
fimuls
test
and
mov
movsb
mov
mov
push
and
dec
jo
adc
dec
xchg
jge
jo
xchg
ljmp
jl
jnp
ja
dec
aad
sub
out
xchg
sbb
push
decb
jmp
pop
or
or
pop
dec
mov
out
int
and
in
pusha
pop
dec
adc
dec
aaa
jle
scas
xor
or
jb
fsubl
fsts
jp
lcall
and
test
jl
pushf
cmp
sub
std
stos
lret
xchg
sub
fstps
or
add
mov
out
dec
mov
mov
inc
add
cli
mov
xchg
mov
inc
call
jnp
jae
inc
leave
fsubl
cmp
int
jae
stos
inc
push
cmpsb
sub
lret
cwtl
mov
dec
mov
shlb
fwait
out
lea
adc
pop
call
xlat
pop
push
inc
add
mov
sbb
mov
pusha
sarb
out
mov
lretw
push
je
jg
cmp
lods
incl
jb
add
pop
jmp
xor
adc
jmp
arpl
mov
add
aas
arpl
clc
pop
cltd
adc
push
repnz
lods
or
adcl
mov
pop
popa
fidivrl
shr
xchg
cmp
push
mov
jmp
xor
cmp
pop
pop
xor
jbe
mov
fildll
push
ret
sbb
das
push
push
icebp
leave
fistpll
xorl
sarl
add
flds
stc
xor
or
pusha
cmp
add
ds
loop
and
sub
cltd
or
rcll
loope
and
shrl
cmpsb
or
out
xlat
adc
jle
mov
lock
mov
out
in
cmp
add
std
repz
ss
loopne
xchg
mov
aaa
repz
dec
inc
mov
imul
xchg
inc
mov
adc
add
pop
ds
push
dec
les
mov
loopne
cld
js
repz
mov
adc
adc
stos
mov
push
test
sarl
mov
shll
push
call
pop
stc
cs
or
in
test
sbb
mov
dec
aaa
jmp
cmpl
xchg
pop
push
mov
loop
inc
pop
cmpsl
mov
and
jl
inc
lods
mov
lahf
jo
mov
test
stc
jge
and
lods
decb
xchg
loope
mov
adc
sarl
dec
js
mov
sbb
jmp
scas
xchg
sbb
inc
adc
add
xchg
adc
jl
lret
into
stos
cmpsb
jge
xchg
les
mov
jl
fstpt
out
gs
and
outsl
pop
lcall
push
xchg
xchg
inc
inc
les
mov
cmp
orl
sbb
adc
clc
outsl
cmp
int3
sub
pop
add
jg
add
dec
aad
fildl
pushf
test
push
les
rcrl
jmp
pop
sbb
push
sbb
dec
fimull
jns
flds
fwait
mov
sub
sbb
dec
mov
sub
shl
xlat
push
mov
pop
mov
mov
pop
repz
lods
pop
adc
jo
sbb
cmc
sub
sbb
out
ret
test
adc
call
popa
cmp
jge
pop
dec
mov
pusha
pop
scas
mov
xlat
ljmp
or
add
frstor
cmpsb
mov
adc
fisubrs
xchg
fmull
inc
mov
dec
mov
addb
js
sbb
mov
hlt
fcmovbe
cltd
push
nop
mov
stc
nop
mov
fisubl
push
sarb
fisubrl
adc
xor
adc
cwtl
jecxz
aad
in
dec
push
cmc
sahf
xchg
into
scas
inc
mov
loop
inc
aad
and
sbb
push
sub
or
adc
loope
pusha
mov
sub
add
jp
cmp
loopne
xchg
mov
sub
fsubp
add
add
inc
into
jl
les
scas
xorb
adc
frstor
add
jns
jne
inc
adcl
mov
xor
stc
jg
insw
dec
mov
out
add
outsl
xchg
fldenv
aad
jno
sub
cmp
test
jbe
push
negb
xchg
cwtl
cmp
testb
aas
mov
jnp
test
gs
mov
in
int3
xor
cmp
addr16
and
cmp
pop
sbb
adc
inc
mov
inc
sub
sarl
sbb
cmp
inc
cld
xor
mov
fisubl
sti
mov
stc
insl
xlat
repnz
lds
insb
push
cmc
cmp
gs
cwtl
dec
xchg
in
or
dec
orb
mov
pop
dec
out
sahf
pop
or
mov
sahf
int3
imul
ret
rcr
cmp
mov
loope
push
movsb
daa
stos
and
push
adc
mov
popa
lock
popf
ret
out
es
out
insl
out
nop
and
fcompl
mov
xor
push
les
mov
pop
aas
xlat
stos
pusha
stc
sub
lcall
mov
data16
jecxz
call
sbb
outsb
in
fldl
push
mov
stc
sbbl
and
dec
mov
pop
idivl
enter
stos
out
inc
fucomi
enter
xchg
div
cltd
xor
fisubl
movsl
jg
pushl
lock
int
xchg
mov
pusha
fidivs
push
sbb
gs
dec
in
mov
out
ror
into
fisttpll
inc
aam
and
fmul
ljmp
dec
addr16
pop
inc
and
ss
stc
inc
mov
outsb
mov
sub
lds
call
loop
daa
jmp
mov
jo
movsl
cltd
ret
push
jnp
pop
int3
cli
fldt
je
lea
or
sub
and
mov
sbbl
int
outsl
mov
add
sub
or
sub
in
fwait
lret
in
int3
dec
cmp
inc
pop
stos
pop
adc
jb
fwait
pushf
add
mov
mov
xlat
jnp
and
jl
jae
mov
int
and
jnp
daa
inc
and
repz
xchg
outsw
xor
aad
or
or
pop
lods
fcomp
adc
add
out
or
mov
out
arpl
scas
cmpb
xor
xchg
jns
das
add
or
xchg
cltd
mov
cmpsl
in
jg
test
cmp
fs
icebp
jae
rorb
out
lcall
das
pop
into
inc
repz
fisttps
lock
pushf
ret
insb
lock
adc
dec
cmpsb
xchg
lds
mov
hlt
pushl
jecxz
pop
test
jmp
add
xor
out
pop
out
mov
outsl
mov
cmp
outsl
outsb
xchg
mov
mov
das
jl
repz
sbb
mov
dec
in
lcall
sub
imul
xchg
fistl
mov
mov
inc
pop
inc
fabs
push
push
add
js
ret
inc
add
rorb
jmp
mov
insb
loop
leave
mov
roll
fwait
and
xchg
pop
mov
test
ret
mov
nop
js
jge
or
dec
or
ja
xor
ja
mov
cli
add
inc
mov
cmp
outsb
pop
inc
out
push
in
xchg
inc
out
icebp
dec
rol
sbb
jae
movsb
popa
mov
cmp
push
lock
lcall
push
sub
mov
sub
pop
adc
dec
pop
js
fs
adc
mov
lods
lea
sbb
xor
mov
js
cld
and
lods
sbb
xchg
adc
pusha
push
call
aas
pop
cmpl
inc
fnstenv
or
pop
addr16
pop
in
adc
in
jno
jecxz
push
mov
stos
fmuls
cmp
imul
sub
jmp
fistps
repnz
sub
add
inc
fmull
mov
js
jmp
stc
mov
sbbb
dec
mov
jle
jo
fisttps
mov
popa
push
adc
shlb
rorl
into
mov
adc
dec
cwtl
push
popf
mov
cli
mov
push
sbb
rorb
or
shrb
cwtl
fdivs
clc
out
mov
imul
push
sarl
outsl
pcmpgtw
mov
pusha
push
mov
and
cltd
repnz
notl
dec
int3
mov
sub
add
mov
popa
sub
js
stos
push
test
bound
add
inc
cmpsb
push
pop
cwtl
sbb
das
adc
xchg
mov
int
push
les
ds
xor
addb
inc
popl
xor
lods
leave
bound
cmpsb
push
cmp
std
lret
xchg
mov
push
or
clc
dec
sub
jl
or
movl
inc
pop
cs
mulb
out
xchg
mov
clc
lret
jge
rolb
push
or
sub
movsb
clc
mov
into
repnz
gs
loope
mov
test
mov
aam
jl
mov
push
sub
jg
out
pop
mov
or
fs
aaa
cltd
adc
mov
gs
das
loop
mov
shrl
jno
push
and
setle
loopne
add
js
movsl
cmc
or
shll
cs
mov
adc
pop
inc
add
or
or
enter
mov
pop
es
cld
divb
shrb
jnp
in
imul
jle
pop
inc
daa
sub
inc
mov
mov
push
jnp
push
add
loop
add
imul
aas
pop
popa
inc
lds
mov
xchg
aam
mov
pop
out
mul
sbb
lods
lret
shl
xor
rcll
mov
pop
sahf
sbb
adc
push
shlb
lahf
or
ds
stos
cmp
mov
xchg
fidivs
daa
jecxz
sub
pop
and
cmp
aam
mov
push
fwait
push
or
mov
int
lahf
mov
mov
std
insl
rcll
jb
inc
adc
test
mov
add
fsubrs
repz
adc
adc
loop
shrb
rcrb
jmp
mov
fdivl
pop
movl
push
neg
sbb
mov
fmull
shlb
sub
or
mov
inc
add
rolb
or
push
sub
cmp
dec
mov
dec
lds
add
lods
pop
push
add
sub
cmc
popa
inc
and
add
insl
xlat
inc
cltd
bound
adc
popf
cmp
mov
popa
adc
push
movsl
fwait
xchg
mov
in
negb
push
or
or
scas
les
sbb
sarl
fnsave
insb
outsl
idivb
adc
push
jbe
xor
xchg
out
mov
iret
mov
std
das
jl
gs
pop
mov
das
cmc
in
and
mov
mov
enter
lret
int
iret
sbb
pop
mov
mov
add
repnz
cmp
cmp
lcall
daa
fwait
push
xchg
jbe
mov
pusha
inc
push
xchg
cmpsl
scas
mov
std
repz
adc
mov
or
daa
or
pop
inc
fisttps
int
notl
popf
out
int3
mov
stos
popa
push
out
and
mov
das
loop
sbbb
lea
add
cmp
sbb
sti
repz
js
mov
cli
pop
mov
jb
les
stc
std
jge
sub
ja
psrlw
xchg
sti
sbb
sbb
mov
out
add
mov
das
mov
lds
jno
popa
inc
xchg
adc
sti
mov
neg
or
inc
rorb
or
cmp
sbb
push
push
pop
xorb
hlt
int3
adc
leave
add
sahf
jns
inc
nop
or
dec
insb
mov
mov
mov
call
addr16
sbb
ret
push
bound
mov
call
aaa
inc
leave
notb
icebp
inc
out
pop
shll
add
sbb
cmp
adc
lea
fucomi
cmpsb
and
cld
testb
mov
push
call
pop
mov
push
mov
or
out
fwait
push
jb
pop
enter
clc
clc
orb
std
and
dec
imul
mov
scas
adc
aam
sub
in
mov
iret
cld
xchg
in
insb
jmp
lret
mov
add
leave
scas
dec
movsl
repz
xchg
test
inc
ljmp
enter
gs
adc
sub
and
gs
out
ja
cwtl
ret
xchg
loope
sub
int3
daa
repnz
sti
aaa
shr
es
mov
xor
out
push
and
push
nop
sub
mov
fwait
iret
push
and
sbb
int
mov
data16
sub
pop
stc
add
push
in
dec
andl
fs
sbb
mov
jle
data16
call
fwait
outsb
ret
inc
push
mov
cmp
leave
loop
scas
push
xchg
add
repz
inc
filds
nop
sub
and
xor
test
es
xor
les
pop
lds
std
sbb
sahf
or
sub
sub
fdivrp
jo
inc
ja
pop
ss
cs
push
pop
xor
fwait
mov
dec
int3
xor
and
addb
xor
and
test
dec
cmp
push
sub
subb
fsubrs
mov
push
lret
push
aas
sbb
jp
ret
scas
lret
cwtl
and
fmuls
in
rcrb
mov
pop
jbe
pushl
imul
mov
out
flds
hlt
in
aam
inc
push
lods
fistpl
and
inc
lds
push
push
shlb
out
insl
xchg
inc
cmp
cltd
lea
ret
xor
sub
dec
mov
mov
inc
mov
pop
sti
rcl
push
iret
push
adc
adc
jae
xor
push
pop
int
pop
js
add
mov
and
jbe
dec
fsubrs
ljmp
andl
mov
repnz
addr16
pop
cli
dec
xor
adc
stc
add
fs
repz
lahf
xchg
mov
in
inc
leave
xor
pop
aas
xchg
sub
fisttps
and
push
imul
sbb
inc
loopne
aaa
add
je
test
jo
test
mov
js
jmp
in
shl
sti
fs
jae
sti
movsl
pop
rcrb
pop
lret
mov
xor
fidivs
mov
fldl
pop
nop
jg
gs
xor
lea
movsb
addb
cli
mov
lods
xor
mov
or
lret
loope
push
fildl
outsb
ja
sti
cmp
push
je
push
lods
mov
jp
jbe
jb
xor
jno
and
addr16
ret
test
sbb
cmpsl
dec
popa
mov
xchg
xor
xchg
pop
jnp
xchg
xor
test
xchg
xchg
cmp
cmp
mov
imul
in
cmc
out
xor
push
ficomps
aad
aad
out
movsb
popf
cmpsl
dec
mov
les
fwait
lahf
jno
adc
cmp
xchg
adc
pop
sub
negb
or
adc
insb
out
lods
jmp
pusha
mov
out
pop
mov
ja
aam
sub
lret
sahf
sub
push
sbb
mov
pop
inc
pop
adc
cld
arpl
addr16
jle
add
sbbb
enter
mov
cmpsb
xchg
xchg
negb
jg
inc
pop
mov
jbe
stc
shrl
push
push
pushf
repz
mov
movsb
cmp
push
sub
bound
and
add
push
and
inc
pushf
push
dec
xchg
aad
enter
mov
pop
mov
push
pop
fnstcw
cltd
inc
adc
push
jmp
dec
push
fists
or
mov
ljmp
out
les
add
or
mov
jb
or
out
into
mov
xor
lods
push
icebp
testb
arpl
push
cmpsb
imul
pop
pusha
mov
fldt
xlat
or
lea
cmpsb
pop
inc
pop
out
cmp
shll
daa
mulb
jnp
xchg
add
push
pop
test
les
and
adc
xchg
bound
lea
ret
mov
xchg
ret
repnz
sbb
mov
jl
movsb
push
test
jmp
mov
fldcw
and
sub
lds
arpl
inc
cmpsb
inc
lods
out
lret
pop
mov
xor
cld
pop
insb
mov
or
xor
jge
add
ret
es
lods
adc
and
out
movsl
repz
repz
adc
fistps
and
fistpll
sbb
pop
jle
xlat
enter
and
dec
js
inc
shr
jbe
cmp
shll
aam
shrl
xchg
cmpsl
push
and
js
hlt
mov
fcomps
sub
int3
and
test
ret
pop
arpl
jno
jle
xchg
sbb
and
mov
mov
loopne
jns
std
imul
loopne
mov
or
sbb
scas
push
push
cmp
mov
add
dec
stos
rorb
jbe
fcomip
data16
xchg
add
inc
add
andb
jl
outsl
dec
loopne
lods
cmp
sub
jl
aaa
fnstenv
shlb
stos
repnz
mov
in
xchg
imul
or
mov
cwtl
add
mov
jl
mov
pop
push
je
sub
stos
lods
add
ljmp
cld
push
iret
gs
jecxz
add
adc
fcmovnu
lock
push
stc
insb
idivb
or
ss
mov
ds
scas
mov
dec
push
add
out
xchg
fisubrl
add
lods
cwtl
bound
daa
mov
in
imul
push
sub
add
shll
fdivrs
rol
lods
rcll
leave
lock
add
xor
or
pop
scas
xor
es
lods
inc
jmp
push
loopne
std
dec
pop
mov
pusha
mov
sbb
xchg
pop
mov
adc
xchg
movsb
rorb
fimull
rcrl
hlt
and
stos
rcl
arpl
mov
fsubs
pop
fwait
jecxz
jne
sub
cmp
mov
hlt
xlat
lret
sub
shlb
lea
push
ds
xchg
je
cmc
cwtl
adc
stos
cmp
stc
xor
cmp
aas
aas
popa
mov
int
pop
cmp
xchg
mov
sbb
cmp
cs
test
nop
call
push
ja
sub
cli
push
or
das
cmpsl
jbe
insl
addr16
jp
mov
mov
xor
mov
jne
sub
mov
clc
sahf
push
outsl
rcrl
aaa
or
in
rcll
cmp
stc
and
xlat
and
cmpps
insb
test
popf
fs
push
fmul
sbb
sti
sti
test
pop
cmpsl
or
shr
addb
mov
bound
jb
push
fisubs
fdivs
stos
cmpsb
sub
or
mov
mov
pop
popf
sub
jae
roll
loopne
push
pop
mov
test
jecxz
pop
lods
jmp
ss
xchg
dec
sub
sub
jle
es
jns
push
inc
dec
gs
mov
push
inc
adc
cmpxchg
and
shl
sub
das
push
or
mov
cmc
and
ret
mov
insb
psrlq
test
pushf
int3
push
jbe
mov
imul
rorl
jl
mov
mov
lods
shll
addr16
repnz
inc
clc
xor
divl
pushf
add
out
push
shrb
dec
mov
das
into
push
mov
insl
add
xchg
into
jl
outsb
aaa
sarl
or
mov
jbe
mov
or
icebp
xchg
pop
fistl
pushf
popf
xchg
xchg
repz
leave
xchg
mov
cmp
jns
and
ja
dec
inc
fcoms
push
mov
cltd
adc
test
scas
addr16
daa
je
cmpsb
scas
outsl
lahf
loope
push
dec
push
jle
sub
shll
insl
fidivs
fisubrs
ss
lahf
aam
mov
xor
inc
add
loopne
mov
dec
mov
mov
movsb
mov
add
flds
dec
fnstcw
sbb
mov
es
int
adcl
scas
inc
fs
les
xchg
outsb
das
fimull
out
push
test
or
inc
adc
cmp
pop
mov
shrb
jnp
or
and
ss
mov
mov
inc
lods
imul
rclb
add
mov
add
push
lea
dec
mov
xchg
and
inc
mov
fstps
daa
cmp
pop
sub
insl
mov
lret
jp
subb
data16
inc
mov
xchg
xchg
jae
lds
sbb
dec
mov
cmpl
cmp
and
jbe
pop
jle
and
dec
pop
test
xchg
das
roll
or
mov
cmc
ret
jb
add
sub
clc
cld
ss
hlt
cmp
push
es
call
std
pop
and
push
fidivrl
xchg
or
cmc
sub
or
shll
aam
mov
pop
aam
push
or
adc
js
push
pop
or
mov
outsl
aam
push
and
movsb
xor
in
scas
add
sbb
pop
adc
or
and
test
scas
repnz
jbe
je
or
dec
cmp
into
and
lret
xor
lcall
mov
lock
hlt
scas
outsb
xlat
push
sbb
add
in
dec
xor
lock
mov
dec
pushf
mov
mov
insb
and
sub
fsubl
stos
stc
mov
test
xor
mov
push
and
pop
ljmp
mov
mov
aam
cmp
out
lock
mov
dec
test
dec
jle
mov
mov
xor
dec
or
xchg
xor
or
cmp
fcoml
scas
daa
xor
cmp
mov
add
push
cwtl
sub
stos
popf
dec
pop
jg
bound
test
stc
jecxz
push
xor
xchg
inc
test
lock
dec
push
xor
sarb
or
and
ss
xchg
insl
dec
test
imul
jecxz
ljmp
hlt
pop
mov
add
pushf
fisttps
cmp
cmp
sub
iret
mov
adc
push
lods
jno
mov
xor
inc
jno,pt
andb
subb
out
or
sub
and
pop
push
pop
scas
stos
and
cmpsl
fnstcw
push
jp
inc
xorb
lods
lock
jne
fldpi
sti
jo
mov
push
add
dec
mov
testb
iret
and
hlt
inc
lcall
popa
push
or
fcmovbe
cmp
cli
xchg
out
imul
cmp
mov
sub
fadds
movsl
dec
cmp
pop
fisttpl
adc
push
mov
mov
fldt
ss
sarb
out
add
cli
rcll
adc
pop
int
dec
inc
sub
mov
out
fnstsw
sbb
popa
mov
adc
les
movsl
adc
pop
dec
pop
hlt
inc
inc
pop
lea
sub
mov
stos
es
dec
xor
and
push
adc
jg
popf
and
cld
and
fiadds
jb
das
xor
mov
or
ja
sub
scas
xlat
mov
repnz
sub
mov
cs
leave
test
ja
aas
insb
fmul
out
mov
sbb
mov
push
jns
mov
test
push
lret
mov
pop
mov
add
in
out
mov
or
jno
fs
mov
scas
sahf
pop
movsl
out
and
mov
dec
inc
shrl
sub
mov
movb
cmpsl
cs
push
idivb
stos
pushf
int
xchg
dec
shlb
int3
jl
push
lods
pop
dec
int
les
and
mov
xor
xchg
clc
les
sub
jmp
cltd
adc
pushf
pop
lcall
rol
push
jnp
sahf
push
addr16
sbb
xor
xor
sub
fcmove
mov
dec
jp
pusha
ljmp
cltd
add
imulb
movsb
in
jnp
or
stos
or
clc
inc
outsl
rcrl
scas
int3
loope
xchg
and
lods
add
mov
adcl
andb
fcomip
fwait
ds
mov
daa
popa
out
xor
mov
cmp
je
leave
mov
daa
shrb
les
imul
mov
add
pop
in
repnz
adc
inc
or
jnp
lahf
inc
adc
in
inc
adc
sbb
jecxz
mov
in
rolb
and
out
cmp
pop
inc
fiaddl
pop
mov
adc
pop
dec
int3
leave
and
arpl
les
dec
mov
into
jle
rorl
pop
pop
insl
mov
cld
sub
repz
mov
xor
adcl
and
out
rcl
xchg
fs
or
push
push
add
fwait
sbb
nop
push
mov
fbstp
mov
sbb
push
fnstsw
jb
mov
xchg
out
xor
fistl
mov
scas
ss
dec
mov
inc
rclb
mov
mulb
mov
xchg
pop
sbb
fisttpl
sbb
sub
or
add
xor
arpl
mov
pop
inc
mov
xor
mov
popa
adc
adc
sbb
sub
clc
xor
lods
in
mov
lea
jecxz
add
push
mov
mov
dec
mov
or
cwtl
add
xchg
push
cli
dec
decl
aas
sub
xorl
or
addl
movsb
repnz
jb
cwtl
scas
out
addr16
test
adc
or
cltd
out
bound
add
jecxz
in
add
xor
mov
ljmp
inc
push
lahf
sbb
shl
and
lods
jo
pop
sbb
xor
int
cmp
notb
push
gs
xor
adc
jl
test
jns
je
sahf
dec
mov
popf
cld
arpl
test
sub
or
leave
sarl
cld
jae
adc
cmp
adc
aaa
je
xor
and
pop
test
ljmp
movsl
mov
pop
fdivrl
in
sarb
scas
cltd
test
push
xor
stc
and
int
popf
push
push
ror
in
pushf
dec
xchg
test
push
pop
add
push
push
jo
pop
cmpsb
sahf
in
ds
mov
mov
pop
and
pop
es
adc
outsl
xor
vaddpd
adc
push
push
cmp
pop
jnp
or
enter
inc
out
or
sarl
jp
cmp
rcll
pop
push
lock
sarb
mov
adc
dec
lahf
rcr
inc
pop
aam
push
push
int
cltd
sbb
loope
xor
test
jmp
xchg
mov
insb
jecxz
add
inc
lds
sarl
dec
sti
scas
ljmp
push
mov
mov
insl
pop
sbb
mov
leavew
ret
out
aaa
mov
adcb
filds
gs
mov
ljmp
stos
fsubr
mov
hlt
jl
cmp
sub
lock
add
sbb
jp
mov
push
aas
lods
aad
dec
mov
mov
ss
call
leave
out
sbb
test
ret
sub
cwtl
jo
int3
xor
gs
xor
aas
arpl
xlat
ljmp
push
lods
ljmp
adc
add
dec
xchg
aad
push
pusha
mov
popa
mov
and
adc
imul
push
adc
inc
jle
dec
xchg
pushf
stc
hlt
sbb
mov
push
cltd
push
out
negb
daa
mov
les
push
mov
hlt
mulb
add
pusha
mov
or
aas
aam
mov
in
loopne
ficoml
loop
pop
xor
dec
mov
adc
inc
aad
or
mov
aas
mov
js
cld
inc
and
sbb
push
lds
cmpsl
lock
fdivl
adcb
test
je
shr
pop
mov
lret
pop
fdivl
mov
mov
xor
mov
aaa
cmp
and
sahf
cld
sbb
push
add
and
pop
divl
je
aaa
das
mov
cmp
pop
out
out
cs
or
mul
enter
pop
jnp
xor
aaa
and
js
mov
lds
loop
cld
or
cli
xor
cmp
std
push
shrb
sbb
leave
cld
or
movsb
fs
or
push
push
cs
test
pusha
xor
inc
push
sti
mov
and
jge
pop
cli
xchg
cld
mov
mov
push
insl
fmuls
xor
sahf
test
pusha
cmp
pop
push
push
aaa
push
mov
stos
in
rcrw
inc
repz
mov
cmp
adc
cmp
xor
int3
add
fs
sub
incb
lods
push
and
mov
dec
mov
aad
scas
and
cmc
outsl
cli
insb
test
mov
in
inc
in
push
pand
sub
jp
or
fprem1
or
sub
mov
out
lahf
enter
cmp
sbb
leave
popf
mov
push
xor
inc
adc
cmc
ret
out
scas
pop
xchg
xlat
mov
or
push
test
sahf
cli
das
stos
jecxz
iret
lock
inc
mov
jmp
pop
add
out
pop
mov
cmp
push
xor
jno
dec
movsl
sti
std
xor
cmp
in
mov
mov
test
mov
addr16
ljmp
and
sarl
mov
mov
jecxz
rolb
push
sbb
cmp
adc
add
ja
xchg
pop
es
sub
imul
popf
fiadds
scas
dec
and
popw
movsb
leave
popf
addb
mov
sti
imul
pop
dec
jp
cwtl
mov
loope
jne
push
sub
xchg
push
insb
dec
dec
adc
and
mov
pop
sti
out
lret
out
scas
xor
fbstp
xor
push
fildll
ss
out
xchg
mov
mov
dec
cmp
fwait
enter
shl
sbb
mov
stos
push
insl
rcll
enter
mov
pushf
xchg
test
insl
in
jns
add
pop
xchg
imul
dec
jnp
cmc
filds
mov
pop
cmovl
cmp
inc
or
aam
inc
das
lcall
or
mull
inc
push
imul
inc
cwtl
inc
adc
sub
inc
imul
mov
repnz
xor
or
mov
sub
cmpsb
addl
jle
test
cmp
es
stc
inc
jns
mov
loope
jbe
lods
mov
dec
lods
out
test
inc
sub
add
fs
rclb
and
divb
and
ljmp
imull
cltd
mov
test
jb
repnz
mov
daa
lret
cwtl
push
or
dec
and
ja
inc
sbb
add
mov
cmc
shrb
movsl
adc
adc
push
test
xchg
cmp
or
jmp
jl
lcall
inc
sbb
aam
fwait
cld
repnz
dec
mov
mov
jl
xchg
cmp
je
divb
ret
js
pop
call
pop
push
add
pop
mov
aad
in
mov
sbb
fcomp
in
lret
out
popf
mov
push
cmpsl
mov
jecxz
adc
ret
pop
inc
jmp
imulb
cmc
in
mov
out
pop
jle,pt
xor
push
movsb
mov
sti
jecxz
daa
add
stos
push
gs
fmul
sub
lret
cmc
add
and
lds
lret
cld
inc
ficompl
fcmovu
mov
adc
inc
pop
xorb
outsb
cmpsl
mov
fisubrl
sbb
ficompl
mov
aad
sbb
out
imul
in
push
bound
lret
mov
outsl
addl
sti
rcll
push
popf
mull
push
xor
xor
outsl
iret
rorb
pop
sub
cmp
jmp
dec
push
mov
ret
fs
sbb
adc
mov
sub
sub
subl
mov
out
add
fisttpll
mov
addr16
stos
dec
sar
stc
sbb
rolb
repnz
ret
addr16
pop
add
aad
mov
jb
push
loope
stos
cmpsl
movsb
pop
pop
push
aam
mov
fcomps
sbb
mov
pop
push
aas
testb
incl
push
and
call
mov
sub
pop
cmovns
xlat
sub
push
jnp
insb
or
fldt
xor
inc
std
push
xchg
pop
jns
sete
fwait
mov
clc
les
dec
and
lods
dec
jbe
aad
fstl
in
ss
scas
and
ljmp
push
mov
inc
subl
lret
pop
shl
test
icebp
rolb
cld
xor
mov
xchg
scas
lods
faddl
xchg
test
push
or
xchg
sbb
mov
mov
jo
sbb
jbe
xchg
mov
mov
dec
in
shlb
pop
lret
and
mov
inc
mov
es
dec
xchg
jl
pushf
sbb
insl
sub
aaa
fs
cmp
fidivrs
adc
xor
loopne
into
xchg
mov
in
imul
jne
sbb
sahf
rcl
sbbl
mov
push
inc
ja
in
sub
sbb
ds
inc
dec
es
pop
mov
or
sub
pop
mov
mov
aaa
out
iret
mov
std
adcb
in
fstpl
and
mov
add
in
fidivrs
gs
xchg
xor
dec
fisttpl
jle
push
aaa
mulb
cmp
push
mov
es
neg
jbe
xor
movsb
and
or
add
sti
outsb
jle
int
pop
xor
es
mov
push
add
rcrl
int3
push
jae
adc
popa
sahf
dec
leave
lock
jb
xchg
pop
es
and
or
mov
int
push
and
cmp
xchg
sbb
pop
vpsrlw
adc
jmp
mov
or
rcrl
add
cmp
xchg
testb
inc
cmp
repnz
pop
xchg
cmp
dec
call
addr16
xchg
jo
sbb
les
mov
out
and
fnstcw
jp
xchg
arpl
loope
add
cwtl
das
outsl
test
and
pop
in
inc
sahf
add
add
popl
pusha
dec
or
scas
xor
dec
adc
sub
mov
xchg
lods
add
loopne
ljmp
xor
ret
mov
or
push
xchg
xchg
or
fisubrl
jge
fs
jae
or
pop
xchg
pop
in
push
adc
xor
scas
xchg
cmp
out
dec
or
scas
inc
push
lock
int
lret
lcall
pop
xchg
jo
packsswb
mov
out
pusha
sarb
or
push
mov
add
cmc
jle
js
push
or
pop
or
mov
andl
pop
sbb
jb
outsl
imul
cwtl
mov
dec
scas
push
xor
fstpt
popf
hlt
mov
jno
aad
fwait
stc
mov
lods
es
xchg
and
sub
mov
cmp
inc
dec
adc
lret
xor
loopne
dec
loopne
test
cmp
adc
enter
fdivrp
sti
fs
xchg
cmp
add
push
and
outsb
mov
popa
hlt
jae
xchg
mov
insb
lcall
es
pop
je
test
cmp
dec
sbb
cld
lods
cmc
mov
arpl
jb
sti
popl
aam
into
jo
ss
inc
xor
cmpsl
pop
aas
and
mov
rorl
add
sub
cmpsl
sub
and
data16
mov
fwait
pop
ja
mov
lock
jne
lods
test
lret
call
sub
andb
jle
sar
inc
adc
fistpl
movsb
xor
shrl
ljmp
push
or
sbb
add
push
push
xchg
gs
sbb
ret
arpl
cmpsl
out
cmp
mov
mov
loopne
scas
and
push
pop
dec
mov
mov
xor
sbb
inc
repnz
movsb
fadds
jns
jg
jmp
and
sti
aad
ss
push
add
rcl
stc
jnp
nop
scas
cmpsb
lret
icebp
sbb
mov
sarl
das
xchg
test
xor
pop
arpl
daa
roll
imul
add
cmpsl
inc
jno
jmp
aad
test
sub
cld
nop
sbbl
lea
js
mov
js
jne
bound
inc
and
les
std
dec
adc
mov
js
dec
push
cmpsl
jmp
pop
and
ret
push
ja
insb
orb
sub
jp
mov
aas
out
aas
dec
sub
and
addr16
push
mov
mov
in
pop
pop
cld
stos
lret
fistpll
cmpl
imulb
stc
mov
fsubl
mov
nop
mov
cld
jecxz
cmc
fstps
test
jp
mov
aaa
es
loope
dec
cmp
fistpll
push
push
leave
push
add
adc
xor
fidivrs
cmc
jae
stos
xchg
pop
cmp
add
insb
cld
xor
jns
dec
les
xchg
incb
scas
jl
fsubr
dec
push
pop
testl
mov
clc
sti
imul
jg
aaa
xchg
idivl
push
loopne
sbb
gs
pushf
ficoms
pop
loop
mov
nop
lods
inc
mov
mov
clc
pop
test
cmp
pop
fdivrp
add
xor
mov
adc
inc
inc
enter
dec
fisttpll
inc
lds
pusha
inc
pop
mov
push
mov
or
int
mov
aaa
mull
xor
mov
mov
mov
xchg
sbb
idivb
int3
xlat
jno
in
adc
sbb
sub
push
add
pop
or
mov
push
addr16
sbb
dec
pushf
sbb
std
out
imul
push
mov
aas
sbb
jge
cmp
push
mov
mov
outsb
push
push
jge
dec
stc
and
bound
mov
cmpb
add
xchg
mov
inc
push
shrb
push
add
add
pop
ss
enter
dec
repz
sub
push
subl
mov
es
stos
fwait
xlat
push
scas
mov
xor
add
mov
into
mov
cld
jecxz
sbb
insb
sub
cs
lds
inc
xchg
bound
dec
and
mov
es
xor
and
divl
cmp
cmp
sub
mov
mov
popl
cmp
dec
xchg
lods
repnz
pop
push
addb
mov
movntq
out
fidivl
xor
aaa
xorb
stc
aam
fwait
pop
dec
out
mov
nop
mov
aas
popa
dec
lcall
cmp
jo
pusha
js
lcall
mov
and
sub
cmpsb
subb
flds
lds
pop
xor
cmc
cmp
xchg
mov
or
and
cwtl
stos
cs
jp
adc
push
call
sub
mov
adc
test
repz
sub
addr16
pusha
rorl
data16
sub
adc
jmp
sahf
adc
xor
jl
jl
pop
add
adc
les
pop
cmpl
xlat
aad
pop
xor
push
pop
test
mov
les
dec
push
pop
loopne
xchg
mov
jb
pop
loop
and
lds
cmpsb
inc
xor
dec
or
mov
test
add
js
loope
add
adc
dec
xchg
jae
pop
ja
sbb
inc
repz
pop
pop
repnz
sub
pop
pop
push
popa
pop
cltd
xor
cmp
insb
xchg
imull
xchg
mov
push
pop
xchg
lret
mov
push
jb
aaa
sbb
dec
imul
mov
js
neg
rcrb
mov
push
ds
insb
and
jecxz
add
sahf
adc
mov
mov
xchg
les
push
gs
jns
inc
out
or
mov
jb
dec
cmp
pop
filds
push
jb
adc
cld
or
jno
stos
adc
xor
sub
pusha
pop
mov
clc
int
cs
stc
jl
sbb
adc
mov
xchg
cld
lea
or
xchg
cmp
sub
mov
nop
lods
pop
mov
mov
jae
cmc
sub
xor
jbe
cmp
push
jmp
mov
int
push
roll
push
sub
mov
popf
mov
ljmp
andb
cmpsl
mov
fs
iret
jno
andl
inc
jo
cli
out
ja
xchg
out
sbb
dec
pop
mov
add
stc
jo
test
cld
aaa
icebp
mov
shlb
xchg
mov
mov
incl
mov
data16
xor
int
pop
mov
cltd
push
les
and
scas
cmp
pop
xor
xchg
test
mov
shll
push
cltd
ret
hlt
and
add
fdiv
lcall
in
je
rcr
cmpsl
cmp
mov
and
xchg
sub
jmp
cmp
xchg
xor
test
push
and
sub
add
fs
pop
scas
jo
pop
add
sub
scas
das
jae
aas
aaa
and
pop
test
das
adc
js
mov
push
sub
nop
push
jmp
xchg
ljmp
cmp
mov
movl
cmpsl
mov
mov
inc
cld
shll
jbe
movsb
xor
aaa
xor
test
test
dec
add
ret
mov
or
arpl
insb
das
inc
jge
sub
sub
push
adc
jl
ds
sub
mov
inc
sub
jg
add
mov
inc
or
insb
cmp
dec
mov
aam
fwait
pop
inc
aaa
jb
xchg
sbb
je
inc
sbb
fadds
adc
shlb
push
sub
movsb
test
stc
mov
stos
loopne
xchg
ficompl
scas
aam
xor
fidivs
or
xchg
xor
xchg
call
mov
mov
test
jmp
mov
add
outsl
les
pusha
xor
add
dec
inc
or
xchg
mov
cmpsl
pop
sub
jb
xchg
inc
and
imul
in
and
dec
lods
lods
popa
mov
imul
jle
pop
popa
lods
cmp
or
adcb
dec
cwtl
mov
xor
push
sbb
adc
cmc
jg
js
popa
pop
ret
adc
fs
jno
add
fildl
insb
cmp
jnp
mov
jno
movsb
and
dec
add
adc
stos
pop
mov
fildl
lret
xchg
call
cmpsb
lea
inc
out
popa
sbb
sahf
mov
mov
dec
outsl
jp
adc
repz
cmc
ds
xor
adcb
cmpsl
sbb
iret
adc
adc
add
mov
repz
ljmp
push
test
ss
inc
movmskps
lret
xlat
add
sub
leave
cmc
jle
mov
lods
loopne
scas
sbb
not
xor
cmp
sbb
jno
dec
push
repnz
mov
aaa
imul
rcrl
adcl
lret
add
inc
popa
ds
xchg
mov
lock
mov
jge
movaps
mov
test
mov
mulb
dec
ds
inc
sbb
mov
and
les
sub
dec
outsb
cmp
add
sub
pusha
push
scas
ret
sbb
adc
fdivrp
imul
jbe
add
test
and
pop
rol
int3
and
fwait
and
ret
and
jo
shll
popa
in
in
out
ljmp
lret
ret
sbb
add
ljmp
movsb
stc
fldcw
pop
inc
or
dec
jmp
pop
mov
sub
jae
fisubl
mov
add
movsb
mov
push
enter
pop
sbb
icebp
jmp
icebp
mov
mov
fmuls
insl
addr16
sbb
out
cmc
cmpsb
call
in
shll
call
cld
fld
pop
inc
dec
fists
dec
cmpsl
aam
cwtl
hlt
adc
inc
mov
sbb
les
jle
cmp
iret
cmp
jle
movsl
jp
insl
vrsqrtss
dec
das
jp
mov
mov
pop
out
fcoms
xchg
adc
fstl
divl
dec
test
cwtl
add
out
in
ds
xchg
sub
xor
test
cmpsb
jl
mov
mov
sub
rorl
mull
cs
xchg
push
inc
mov
xor
stos
imul
xor
clc
inc
outsl
and
jb
in
sahf
call
cld
mov
pop
mov
fistpl
fwait
cs
or
mov
jnp
fcompl
fs
jge
movsl
adc
subl
mov
in
mov
sbb
roll
aam
or
adc
outsl
insb
dec
mov
fistpll
inc
fwait
or
cmp
push
cmpsl
bound
imul
xchg
xchg
jge
shlb
out
insb
mov
cld
daa
rorb
push
in
aas
jbe
outsb
dec
xor
inc
test
mov
sbb
aad
shlb
aam
lret
mov
adc
jnp,pt
fs
xor
sbb
je
out
repz
dec
push
cwtl
fidivrl
dec
mov
inc
xor
insb
in
mov
in
xor
xlat
and
push
mov
pushf
and
mov
jecxz
jmp
jnp
push
aam
fsubrl
jle
jae
mov
arpl
cmpsl
dec
out
sub
lret
mov
loopne
push
int
push
leave
sub
push
jnp
dec
mov
mov
or
cmp
pop
aas
pop
xor
scas
push
and
gs
mov
inc
in
imul
scas
jno
mov
icebp
add
cmp
adc
xchg
lods
subb
dec
stos
aas
xchg
and
jnp
cltd
pop
pop
or
imul
inc
aaa
jmp
inc
repnz
ja
lcall
arpl
mov
cmpb
mov
in
clc
imul
in
jns
int3
sub
lods
int
mov
mov
movsl
rol
dec
mov
sti
sbb
dec
jecxz
cmp
sub
add
add
sbb
sbb
mov
inc
sub
mov
dec
js
mov
dec
ljmp
mov
ljmp
rolb
popf
sbb
std
sub
lods
loope
lret
or
into
fwait
sbb
imul
xor
cltd
mov
loop
push
mov
jne
adc
and
push
push
and
mov
das
jnp
iret
lock
xchg
xor
mov
mov
cs
pop
movsb
mov
xlat
in
ret
pusha
sbb
adc
inc
lret
in
mov
pop
out
lea
sbb
mov
push
repnz
sub
cmpsb
jl
loope
push
movsb
xor
fsubl
mov
popf
scas
sbbb
fmuls
push
pop
add
adc
push
xor
orb
dec
out
lds
jns
outsl
lret
xchg
nop
loopne
insl
lcall
dec
xor
pop
cmpsb
push
jp
mov
outsb
jge
adcl
xchg
cld
clc
lock
fndisi(8087
sbb
pop
pushl
lods
jne
test
sti
xchg
xorb
pop
into
cmp
adc
push
addl
pop
out
push
clc
mov
or
imul
daa
add
outsl
aas
idivl
dec
aas
jno
cmp
mov
arpl
pop
not
arpl
xchg
inc
mov
push
lahf
cmp
pop
gs
ja
or
sahf
sub
jae
xchg
add
cmpsb
mov
insl
dec
cs
cli
int3
lret
jbe
xchg
pop
lock
jno
ljmp
daa
dec
jmp
mov
jmp
mov
lret
mov
jo
pop
jnp
in
enter
push
add
in
and
movb
ficomps
jns
aad
pop
mov
mov
insb
or
stc
aam
std
lea
push
jnp
inc
inc
mov
lret
add
pop
inc
xchg
push
add
ljmp
sbb
negb
pop
and
pop
sub
or
xor
jnp
pusha
ret
mov
movsb
daa
cwtl
dec
sbb
adcl
cmp
movsb
mov
cld
scas
js
sti
repnz
in
pop
xchg
movsl
mov
fstpl
mov
jle
mov
mov
outsl
add
inc
xchg
sti
inc
or
sub
mov
movsl
mov
cmpl
cmp
and
rcll
and
icebp
dec
sti
rclb
mov
adc
subl
xchg
stc
shl
rolb
add
inc
cwtl
adc
jle
pop
addr16
sbb
sbb
movsl
les
movsb
jle
mov
in
ret
stos
pushf
push
movsb
pop
cmp
das
adc
out
sbb
mov
call
por
std
xor
and
shlb
lds
xlat
push
dec
xchg
jge
sub
test
cmp
pop
lods
sub
pushf
cmp
mov
dec
push
cmc
cmp
mov
pop
std
ja
cmpsl
shrl
push
arpl
adc
adcl
int
js
imul
jl
pop
mov
and
dec
and
addl
popa
xor
clc
jo
mov
pop
movsl
push
mov
adc
xor
fnstsw
jno
inc
lahf
test
xor
dec
pop
aam
push
ss
stos
push
jmp
lock
scas
and
pop
adc
mov
inc
inc
jl
shlb
fistpl
enter
mov
and
movsl
sarl
aad
xchg
jg
popa
and
fldt
inc
fistpl
mov
mov
lock
push
scas
adc
nop
lock
outsb
pop
xchg
xor
pop
push
test
je
xchg
mov
iret
mov
pushf
stos
cmpsl
call
fs
sub
gs
lahf
lcall
in
stc
dec
int3
push
or
data16
push
mov
mov
pop
jecxz,pn
push
pop
mov
enter
js
mov
sub
cs
or
push
jecxz
fstp
rclb
icebp
imul
pop
jge
ss
sub
xchg
fwait
cld
xor
cwtl
and
shrb
aaa
add
mov
jne
loopne
mov
pop
sub
lock
nop
mov
cmp
sbb
jge
iret
lods
or
mov
loop
add
mov
popa
movb
xor
xor
notb
mov
cwtl
notb
sub
jg
loope
lret
jmp
xor
lret
lock
inc
leave
mov
xchg
mov
repnz
push
jl
mov
aad
sub
imul
push
mov
mov
in
je
icebp
push
fldenv
push
mov
adc
sbbb
inc
shll
push
inc
dec
jmp
movsb
daa
inc
loopew
add
push
pop
repnz
lcall
pusha
mov
fcompl
push
mov
insb
testb
inc
mov
lret
repz
mov
imul
js
test
mov
test
insl
cmp
mov
out
pop
dec
mov
push
xorb
popf
test
jb
cmp
orb
js
scas
leave
fisttps
cmpsl
or
in
imul
mov
out
mov
addb
add
leave
fidivs
mov
sti
mov
into
xor
lahf
flds
adc
sbb
ret
and
dec
mov
mov
pusha
sub
push
leave
js
pop
pushf
and
inc
pop
lds
sub
in
cmp
gs
aad
or
cli
inc
shrl
dec
mov
xor
ds
and
rcll
push
stos
push
mov
iret
out
mov
dec
lahf
mov
xchg
mov
cwtl
jge
push
stc
pop
push
mov
popf
mov
stos
das
nop
cmp
into
fwait
xlat
mov
xor
test
pushf
mov
xchg
into
cmpsb
cmp
mov
sub
mov
and
fwait
arpl
adc
ficoml
sbb
mov
idivl
aaa
mull
nop
ja
adc
cmp
inc
aad
cli
rcll
cld
and
lds
fxch
pop
fcomps
mov
xlat
pop
mov
inc
cmp
lcall
xchg
fwait
and
add
push
jecxz
push
divl
jnp
fstps
pop
jns
leave
mov
jb
outsl
jp
ret
or
aas
xchg
push
push
jg
out
xchg
rolb
sub
dec
mov
lods
sub
das
mov
bound
scas
enter
sbb
pop
pop
rolb
dec
fisubrs
xor
lock
xor
outsl
mov
cs
add
dec
mov
adc
out
insl
or
push
sub
scas
mov
add
push
lahf
mov
ja
mov
jge
cmp
fsts
xchg
enter
inc
sbb
add
mov
jbe
test
xor
cli
push
add
pop
jecxz
popa
cmp
xchg
sub
loop
pop
adc
add
or
bound
aam
cwtl
repnz
or
push
push
into
adc
jne
pusha
xchg
repnz
dec
scas
push
pop
outsb
xor
cmp
sti
bsr
bound
aas
mov
insl
inc
ficoml
sub
push
mov
lds
cmp
jge
mov
cs
scas
xchg
pushf
pop
push
mov
icebp
mov
enter
add
or
dec
daa
sbb
mov
fisttpl
jmp
cltd
out
cmpsl
icebp
mov
add
sub
xchg
jge
mov
icebp
enter
mov
push
mov
shll
mov
nop
loopne
lahf
lahf
sbb
ss
sub
leave
loopne
xlat
xor
es
jne
dec
xchg
ljmp
jle
outsb
dec
cmpsb
iret
mov
push
mov
test
mov
out
lahf
dec
and
or
sbb
iret
orb
inc
adc
mov
dec
push
inc
cmp
nop
or
fldenv
inc
xchg
in
jo
fwait
lret
sbbb
lods
xor
leave
scas
xchg
lret
inc
stc
aad
jl
sbb
cmp
inc
mov
frstor
dec
or
ret
enter
loope
jae
sbb
push
add
ret
add
jge
pop
push
add
outsl
push
test
outsb
jle
push
dec
mov
fsubl
sub
cmpsb
jge
or
sti
popf
shll
mov
jnp
vmread
xchg
sub
insb
and
xor
mov
pusha
pop
loopne
int
xchg
jp
jne
aam
mov
jnp
aas
loope
jne
pusha
sub
xchg
push
cmpsb
mov
dec
cmp
adc
sarl
lods
std
out
dec
push
or
and
adc
push
jae
xlat
faddp
test
aad
xor
sbb
and
loopne
inc
mov
sub
insb
and
or
fdivs
jo
fsts
adc
jge
int
shrb
aam
jo
sti
sub
loopne
mov
sar
pushf
sub
sti
into
or
fistpl
in
sbb
and
je
sarb
adc
push
push
add
das
inc
push
fs
inc
xchg
add
inc
fnstcw
inc
xor
pop
and
mov
ds
stos
loop
iret
jg
inc
sti
ret
sub
lock
jge
fdiv
cmp
bound
inc
out
mov
loope
adc
dec
out
in
push
iret
push
popf
and
dec
adc
mov
xor
mov
push
jmp
into
mov
shl
nop
test
dec
bound
inc
js
scas
int3
dec
testl
mov
cmp
stc
lcall
sub
cmpsb
mov
imul
fsubl
and
cmp
call
pop
adcb
into
repnz
xchg
jno
add
xor
and
mov
push
push
mov
fdiv
dec
test
cmpsb
insl
arpl
data16
inc
fucomip
cmp
push
cmp
cmp
lea
orb
xor
jnp
andb
shlb
and
cli
ja
cli
call
sub
ret
pop
or
sahf
lret
daa
das
dec
testl
push
imul
dec
or
test
fcomi
xor
mov
push
inc
sbb
test
dec
pop
cmpsb
jg
stos
jmp
adc
and
mov
nop
add
lret
cmp
mov
sarb
aam
add
es
fs
fdivl
mov
sub
xlat
imul
mov
fisttpl
in
lds
icebp
jb
sbb
xor
les
xlat
push
mov
add
dec
int3
stc
jns
xchg
xor
in
dec
cmp
fadd
fstpl
test
pop
adc
jbe
sar
ss
lds
clc
pusha
in
sbb
fildl
rcrl
int
sub
cmp
jne
pop
jne
push
mov
and
insb
mov
sarl
pop
stos
jle
xor
sti
fwait
movsl
sub
cmp
ficoml
leave
pop
push
push
icebp
stc
pop
fcoms
jmp
or
dec
shll
pop
ss
jge
enter
xlat
clc
cmp
je
sbb
mov
call
popf
mov
or
fisttpll
jbe
in
mov
scas
adc
movsb
add
cmp
out
lahf
int3
jae
push
out
andl
push
std
sub
xchg
lea
icebp
xchg
jl
rclb
rcll
add
inc
xor
or
mov
mov
sub
push
mov
and
out
and
dec
mov
sbb
pop
and
pop
out
out
jmp
jmp
rcrl
and
repz
push
cld
and
int3
cmpsl
jo
add
mov
lods
movsl
push
adc
lcall
sbb
adc
xorl
insb
stc
test
test
int3
mov
sti
insl
sub
loope
shll
lods
sub
ret
sbb
inc
and
jge
push
cs
and
imul
pop
sbb
jb
mov
ss
fbstp
add
gs
test
cmp
test
subl
lret
lret
inc
aas
or
mov
inc
pop
test
loope
cmc
daa
mov
pop
nop
fxch
dec
pop
cmp
push
cmp
pop
mov
mov
cs
insb
pushf
out
dec
and
xchg
inc
lock
pop
jmp
xor
pop
jne
je
lret
push
int3
xchg
add
sbb
ljmp
cmc
push
mov
cltd
mov
pusha
jle
inc
and
inc
jbe
in
addb
mov
add
int
mov
movl
in
invd
jbe
jae
mov
mov
in
push
inc
aad
lret
jne
push
loope
inc
xor
cld
push
dec
sub
and
mov
push
sbb
xchg
out
lods
out
sbb
into
mov
adc
pusha
test
sbb
stos
int
lods
cmpsl
xchg
aaa
or
das
xor
dec
pop
ret
inc
add
and
test
cmp
leave
hlt
leave
sbb
lcall
jo
xlat
add
imul
aad
enter
jle
jecxz
stos
xor
mov
xchg
adcl
jle
jo
adc
sub
es
sub
aam
inc
and
add
mov
jmp
out
xchg
adc
mov
add
mov
aas
rorl
stos
mov
add
outsb
daa
mov
ljmp
push
clc
adc
in
lea
decb
jge
cwtl
aam
jae
jge
loop
xor
dec
mov
pop
dec
sub
sub
sub
adc
xchg
ret
sub
mov
jecxz
or
mov
pop
stc
push
xchg
or
clc
inc
adc
dec
std
adc
shl
addr16
inc
sub
or
test
js
lock
scas
sahf
inc
es
cmp
imul
out
bound
leave
xchg
lock
imul
pop
dec
dec
pop
popl
lret
adc
mov
clc
jbe
jbe
mov
lock
negl
sarb
push
les
mov
addr16
fsubs
test
jno
lds
push
lods
aam
pop
pusha
fisttps
scas
jge
aad
and
imul
mov
mov
das
or
lock
sub
loope,pt
adc
inc
sti
popa
or
std
mov
scas
pop
mov
mov
jns
cwtl
ljmp
test
in
sarb
icebp
dec
xor
pop
xor
xor
jmp
push
adc
mov
fsts
je
and
pop
jbe
adc
hlt
lret
mov
mov
movsl
ret
add
insl
stc
mov
test
sbb
imul
mov
movsb
jb
sbb
cmc
mov
out
add
dec
pop
xchg
push
xor
outsb
dec
int3
lret
push
inc
push
mov
je
mov
std
lods
psrld
dec
mov
mov
push
sub
ror
pop
std
dec
fcomps
add
gs
call
add
out
cmc
sbb
iret
lcall
xchg
xchg
cmpsb
jne
jl
push
push
xchg
ret
cmpsb
or
xlat
jecxz
add
fnstcw
push
ss
xor
jmp
xchg
or
xchg
bound
or
adc
imul
add
js
stc
and
pop
in
adc
adc
das
imul
out
jp
push
add
or
test
add
mov
or
inc
cmp
in
and
and
adc
imul
add
cwtl
lock
shlb
push
mov
imul
inc
sbb
jae
push
shlb
dec
xchg
fisubrl
inc
sub
iret
pop
mov
mov
les
cmp
movsb
xor
test
jns
test
jge
adc
sahf
cmpsb
jbe
fsubp
dec
pop
xchg
mov
scas
insl
les
hlt
push
sbb
scas
sub
mov
dec
add
cmp
and
and
sub
lcall
insl
dec
scas
and
call
test
lret
push
sub
jb
and
jbe
popf
or
data16
dec
pop
shrl
push
mov
dec
sti
sub
repnz
stos
and
dec
add
es
mov
push
push
iret
or
jg
mov
je
sbb
mov
xchg
pop
pop
xchg
cmpsl
bound
and
pop
pusha
cmp
xor
jae
mov
hlt
mov
inc
sub
xchg
pop
shll
inc
pop
cmpb
cmp
xchg
ret
leave
push
int
push
mov
out
xchg
cmp
adc
pop
aas
fimuls
xchg
fimull
adc
add
sbb
cmp
cld
sti
jno
mov
xchg
adc
ss
mov
ret
jbe
scas
ja
pushf
inc
or
addr16
sbb
stc
enter
rcr
jle
or
or
jns
adc
push
cmc
cmp
hlt
mov
mov
dec
sub
jg
es
jge
ds
repz
cli
dec
inc
int
into
dec
and
or
cltd
sbb
sahf
pop
gs
dec
dec
cli
cmp
ljmp
ret
xor
notl
push
aad
jge
mov
pop
dec
jge
cli
or
pop
adc
mov
jo
sbb
mov
unpcklps
and
xor
cmp
and
les
ss
add
mov
adc
jno
data16
icebp
popa
or
xchg
stos
aas
or
test
or
fcomps
jns
dec
sub
aas
inc
inc
mov
int3
sarb
loopne
lods
push
in
inc
pop
inc
mov
addr16
mov
bound
mov
xchg
imul
test
push
je
xor
and
test
xor
jmp
inc
fnstcw
stos
jno
cmp
adcb
iret
dec
cmc
stos
push
or
mov
inc
enter
popa
mov
test
and
add
mov
negb
sbb
aad
push
icebp
dec
or
xor
aaa
pop
pop
jmp
xchg
imul
jmp
xor
push
sbb
mov
jns
push
dec
imul
incb
mov
insl
inc
mov
sub
cmpsl
outsl
sbb
lods
jmp
out
adc
lock
jne
in
enter
sub
mov
or
movsl
imul
dec
cmp
xchg
stos
push
mov
outsl
xlat
cmp
xchg
xchg
sbb
and
jmp
lret
aaa
test
cmp
int
inc
addr16
sub
xchg
shlb
jno
and
pop
imul
lock
add
sbb
add
cmpsl
ret
xchg
jns
push
mov
fdivs
mov
ds
mov
popf
mov
les
insl
std
in
inc
and
push
dec
dec
xchg
test
lock
iret
pop
mov
inc
mov
or
push
cmp
adc
outsb
mov
aas
hlt
or
stc
push
shrl
or
adc
movsb
xor
adc
adc
pop
inc
shll
cmpsb
sti
add
cli
fwait
mov
mov
jmp
in
ficomps
dec
add
inc
mov
je
addr16
or
loopne
jmp
xchg
dec
fdivl
inc
xchg
mov
pop
leave
push
pop
movsb
int3
add
mov
pop
xlat
dec
iret
loopne
in
push
pop
jno
lock
dec
pusha
out
movsl
addl
jnp
jbe
adc
fidivl
mov
mov
dec
cltd
movsl
xor
cmpsb
neg
push
xchg
dec
lahf
loope
xor
or
mov
cmpsb
pop
enter
aas
xlat
jge
clc
addr16
push
cmp
mov
cmpsl
sub
xchg
cmc
leave
pop
pop
sbb
leave
test
push
popa
outsb
jp
sub
jne
mov
inc
inc
jle
ss
xor
mov
scas
scas
mov
outsb
testl
scas
outsl
sarb
xor
inc
xchg
sbb
mov
mov
in
jns
inc
or
sub
outsb
jae
lret
ret
jne
lret
ds
mov
sub
inc
sub
test
add
push
andb
imul
lods
orl
lcall
sub
sbb
imul
cmp
stc
sub
or
or
lar
out
cmc
fsubrl
clc
mov
cld
shrl
push
mov
test
cmpsl
push
insb
cmp
in
fldcw
jb
imul
call
xlat
xchg
inc
dec
repz
mov
stos
shlb
jle
mov
in
repz
adc
add
cmp
jecxz
in
adc
test
pop
out
xor
fstl
adc
sub
hlt
pop
pop
in
outsb
bound
push
dec
mov
aad
orb
mov
sub
or
dec
js
int
and
insb
mov
dec
pop
insb
adc
cli
sub
movsb
push
test
in
push
xchg
out
or
push
and
mov
mov
sub
push
xor
or
jbe
mov
in
fildl
jns
in
jnp
dec
mov
ds
arpl
jnp
clc
loope
mov
and
mov
mov
jp
mov
push
add
push
scas
pop
or
or
cmc
pop
xchg
push
out
mov
push
repnz
movsb
or
fsqrt
adc
push
jl
outsl
cs
ss
sti
mov
adc
hlt
cmp
ret
push
add
add
push
xchg
out
fnstsw
lcall
or
xchg
fdivrl
cli
lret
outsb
sti
std
shl
cwtl
es
rorl
xchg
mov
lret
and
inc
jecxz
pop
hlt
push
sub
setb
ret
loop
pandn
pop
pop
lods
js
cltd
hlt
mov
je
ret
sub
or
xchg
jp
loope
imul
add
pop
dec
nop
leave
call
push
inc
outsb
loope
cmp
testl
loope
out
cmpsl
pushf
adc
push
mov
aad
movb
imul
adc
pop
movsb
popa
into
adc
add
sarb
sarb
fistpll
cli
sub
sub
repz
loopne
adc
je
fwait
ret
sub
adc
insb
mov
stc
jecxz,pn
insl
or
and
mov
cltd
push
or
and
cmp
out
sub
cmp
xchg
scas
jp
adc
aaa
sbb
out
negb
mov
pop
push
pop
mov
cmp
jne
enter
dec
mov
lcall
imul
rolb
mov
aas
dec
loopne
jp
loope
xlat
mov
add
and
sub
outsb
popa
out
adc
jae
pop
adc
fwait
xchg
insb
and
jno
jb
mov
mov
mov
imul
sbb
je
mov
mov
aam
jne
dec
outsl
push
in
add
movsb
nop
xor
cmc
xchg
mul
imul
or
sub
lret
mov
pop
out
shll
int3
ds
lahf
mov
xchg
ret
pop
bound
mov
adc
out
push
loop
sub
push
cmp
cmp
push
adc
xor
repz
jg
mov
arpl
pushf
and
daa
and
sub
ljmp
mov
aaa
fiadds
and
xchg
cmpsb
or
jno
shrb
scas
fnsave
mov
adc
out
mov
hlt
imul
bound
mov
in
push
out
mov
movl
sub
mov
mov
arpl
je
mov
cltd
pop
ret
stos
fistps
pop
mov
dec
loop
or
jg
mov
xchg
nop
xchg
cmp
mov
inc
popf
stc
hlt
push
lds
cwtl
pop
sub
jp
push
add
jl
dec
mov
mov
lret
cltd
pop
nop
push
sbb
ficoms
jnp
push
inc
jmp
mov
sbb
jecxz
cltd
lea
test
stc
and
xchg
push
sahf
nop
rcrl
inc
push
cmp
fs
data16
les
cltd
pop
test
xorl
dec
mov
data16
lret
dec
push
aad
mov
cmp
sbb
outsb
ret
sbb
and
cmp
sub
add
ljmp
fsubr
jne
sub
adc
adc
and
dec
xchg
cwtl
loopne
and
bound
push
or
adc
out
or
jp
mov
repz
in
xchg
cmc
ret
fxch
je
xchg
lcall
fmull
mov
cmpsl
filds
into
ljmp
imul
mov
mov
and
cmp
test
xchg
or
ret
scas
sbb
mov
add
push
push
decl
jp,pn
leave
adc
outsl
clc
aaa
outsl
push
xchg
test
sbb
ret
mov
cltd
sub
outsb
mov
popf
inc
test
notb
jle
lret
lahf
aaa
mov
pop
rcll
add
je
dec
pushf
mov
xchg
push
out
pop
mov
xor
sbb
xchg
push
lahf
jge
inc
add
push
push
cmp
lods
in
push
and
and
xchg
jbe
cmp
jecxz
mov
lret
fnstsw
sub
movsl
xchg
pop
sti
sub
adc
stos
mov
mov
call
adc
pop
mov
mov
adc
and
pusha
mov
ret
dec
sub
inc
pop
test
psubw
mov
orl
mov
arpl
adc
mov
mov
les
xor
shrb
test
dec
stc
stc
push
mov
and
mov
clc
add
xor
js
clc
sarb
call
jne
dec
je
xchg
fs
in
and
lods
push
pop
arpl
leave
xchg
out
mov
pop
or
cwtl
ret
out
sbb
push
adc
add
mov
icebp
cmp
repz
jmp
neg
ret
iret
insb
out
xchg
xor
add
iret
adc
bound
xchg
mov
mov
cmpsl
arpl
dec
add
xor
mov
fldenv
mov
sahf
cmpsl
loop
mov
ret
sub
jge
lret
repz
or
test
sbb
push
pop
mov
pop
orl
mov
je
fsubrs
jne
je
jno
sub
addl
fcompl
jne
lahf
lea
or
std
imul
xchg
cltd
subb
jmp
pop
lea
in
outsb
mov
test
loop
imul
pop
or
pusha
sbb
subl
fsts
xchg
arpl
sub
int
stos
push
in
mov
ljmp
push
daa
mov
push
mov
sbb
faddp
xchg
into
shr
mov
cmp
jb
cmp
pop
imull
xor
push
mov
imul
jp
cmpsb
ds
inc
addl
jmp
fs
sahf
fdivrp
push
or
ret
adc
lcall
cmp
imul
dec
pop
rorl
xor
stos
mov
xchg
out
lods
add
sbb
push
scas
test
jecxz
out
sti
int
test
jae
insl
sbb
push
mov
cs
jbe
dec
jg
xor
push
xor
fs
cmpsl
hlt
fsts
mov
std
lock
out
xlat
ss
cmp
jmp
mov
inc
inc
bound
pop
or
in
shll
mov
or
shlb
and
cmp
js
enter
scas
rorb
pop
sub
push
cmp
out
out
push
lret
insl
fmuls
pop
mov
addb
mov
or
pop
sub
jle
ja
and
jno
or
in
and
dec
and
test
cld
ja
jp
mov
int3
stc
jo
loopne
dec
inc
fs
fsubl
mov
addr16
les
das
dec
out
sti
stos
mov
xor
dec
imul
push
jbe
ret
mov
xchg
xchg
aaa
add
push
flds
or
inc
xlat
mov
mov
dec
hlt
or
repnz
jne
dec
test
or
push
sub
push
in
mov
test
lret
movsb
in
push
and
dec
lea
and
pop
or
xchg
push
movsl
adc
adc
lea
xchg
outsb
ret
gs
dec
ljmp
ss
cmp
mov
mov
xchg
sub
xchg
lods
jae
push
add
outsl
jae
dec
test
mov
test
flds
fcomps
insb
inc
xor
ja
cltd
push
push
enter
cmpsb
div
cld
in
pop
add
cmp
pop
jne
xor
xchg
repnz
dec
add
add
fnsave
mov
sti
repz
mov
push
xchg
sahf
in
add
push
bound
sbb
das
push
cmp
pop
in
out
jne
dec
fstpt
int
xorb
dec
fisttpll
ja
dec
cld
xchg
das
adc
pop
jmp
pushf
xor
pusha
out
sbb
std
sub
mov
cwtl
push
ret
mov
icebp
jne
dec
scas
xor
xlat
into
jnp
jo
pop
jecxz
jb
imul
in
xor
out
jo
push
or
add
adc
adc
dec
and
lret
stos
movsl
push
push
push
lea
fs
hlt
xchg
jmp
and
pop
dec
pop
stos
pop
lahf
and
daa
fdivl
mov
xor
inc
dec
scas
mov
cmpl
dec
cmp
push
ljmp
inc
cmpsl
push
mov
imul
cmp
cmp
push
pop
cwtl
fnsave
pop
repz
xchg
pop
into
xor
mov
mov
lods
xchg
push
ja
das
aas
jp
popa
subb
jno
pop
in
push
insb
dec
xor
je
cld
push
mov
dec
cmp
inc
mov
call
cmp
xchg
jbe
push
loopne
xchg
icebp
lret
ret
shlb
mov
mov
push
mov
mov
mov
mov
mov
adc
lock
lahf
leave
push
and
in
dec
pop
push
call
in
rorl
jnp
fidivs
dec
inc
insl
cmp
sbb
add
iret
int3
stos
push
jo
icebp
sbb
jnp
mov
mov
xor
fcomp
rcrb
sbb
jl
jg
push
rorb
imul
or
inc
xor
jne
cli
sbb
out
out
scas
xor
mov
pop
aad
stos
pop
mov
sbb
dec
rcrb
mov
adc
dec
inc
nop
pop
aaa
or
and
push
in
push
xor
clc
loope
jge
xchg
mov
hlt
push
pusha
cwtl
test
nop
lds
inc
sti
inc
mov
xor
xchg
sbb
leave
jbe
loop
mov
das
xchg
repz
mov
dec
inc
pop
test
in
iret
lds
inc
jg
sti
pop
sbb
jg
dec
mov
cmc
xlat
xlat
clc
jg
fs
shlb
es
fdivr
push
pusha
pushf
jb
icebp
das
xchg
fwait
sbb
sbb
sub
or
popf
push
or
scas
adc
jbe
inc
scas
int
movb
and
or
adc
push
out
pop
aam
ja
add
jns
popaw
jb
mov
pop
das
mov
cmp
cmp
addr16
or
out
push
outsb
cmp
subps
lea
pop
jle
pop
stc
mov
jne
mov
outsb
test
cmpsb
ss
loopne
movsb
dec
push
mov
gs
in
mov
pop
cmp
aam
imul
fcomps
or
sbb
fwait
or
xchg
inc
imul
xlat
mov
jp
xor
and
xchg
insb
stc
out
fistps
sbbl
cmp
movsb
push
mov
aaa
fimull
test
mov
jo
movsl
mov
sbb
pop
outsb
push
pop
sti
jge
ret
add
pop
jecxz
rolb
loopne
shrl
arpl
lea
arpl
out
outsl
hlt
pop
cmp
xchg
inc
mov
inc
pop
push
sbb
inc
lret
je
lea
lods
xor
mov
pop
rcr
jne
out
adc
fwait
lea
xchg
cli
jb
cmc
cmp
adc
dec
adc
mov
inc
in
lahf
xchg
imull
push
jmp
fnstenv
mov
sbb
insl
pop
xchg
lret
pop
pop
mov
ficomps
fidivl
dec
mov
jne
stc
loopne
cmp
lea
mov
pushf
pop
les
lock
dec
xchg
popf
je
pop
shl
inc
add
mov
call
xchg
lret
cld
cmp
les
mov
arpl
pop
add
add
xchg
test
mov
out
into
sub
out
pop
xchg
test
or
jo
nop
inc
pop
cmc
fisttpl
mul
and
sti
cltd
or
cwtl
jmp
mov
xchg
or
movsl
sbb
fsubl
lock
daa
data16
aad
in
mov
xor
add
mov
sbb
adc
dec
xchg
xor
push
add
lock
push
adc
dec
inc
das
push
jmp
je
inc
ret
xchg
pop
sbb
mov
ds
lock
mov
xchg
fldt
cmpsb
mov
js
enter
push
and
rorb
loope
cmc
mov
lcall
test
jne
mov
fsubrp
lcall
mov
cld
stos
xchg
mov
pop
dec
fs
retw
or
jno
fcompl
mov
fildl
mov
xor
sub
aaa
popa
or
dec
xchg
dec
data16
int
add
cmp
call
test
jne
ljmp
addr16
mov
movsl
mov
rorl
scas
mov
push
mov
stc
mov
ret
sti
ljmp
call
sbb
ror
push
frstor
dec
dec
insl
xor
jnp
inc
or
pop
xchg
hlt
test
andb
jp
jle
das
sbb
inc
add
inc
cltd
jae
jl
lods
or
mov
fidivrl
xor
sbb
int3
mov
iret
add
dec
movsl
or
shll
jge
cwtl
push
mov
aaa
mov
push
iret
adc
sbb
push
push
inc
das
rolb
repz
scas
jge
mov
sub
add
imul
mov
repnz
repz
pusha
pop
jecxz
aaa
push
es
add
lods
fs
fs
scas
pop
neg
imul
and
mov
mov
fsub
icebp
fldcw
fidivl
test
inc
jo
mov
mov
pop
icebp
xchg
gs
loopne
mov
pop
shl
bound
cmpsl
ror
pop
aam
cmp
jns
loope
popa
or
mov
mov
dec
cwtl
int3
icebp
xchg
cmp
hlt
daa
les
mov
das
pop
shlb
lods
inc
andl
cltd
mov
mov
nop
pop
enter
cmp
movsl
das
xchg
test
cwtl
cmp
add
sarb
bound
test
jmp
cmp
inc
aas
test
jle
gs
ljmp
pop
push
mov
sub
mov
pop
sbb
and
and
sub
int3
jnp
fisubl
in
inc
push
pop
lock
or
add
add
icebp
test
sbb
daa
fwait
jae
stos
call
jle
and
cs
jge
pop
aam
xchg
mov
stos
aam
lods
xchg
sbb
js
push
pop
cmc
subb
jle
jge
clc
imul
rcrl
xor
push
mov
mov
add
testl
in
idivb
adc
out
add
mov
xor
mov
out
jae
ret
pop
add
adc
gs
sub
mov
std
aad
mov
jns
sbb
andnps
stos
add
pop
sti
dec
mov
arpl
subb
out
negb
mov
and
ljmp
sarb
adc
mov
sbb
push
cmc
mov
xchg
ljmp
cmpsb
ss
es
outsb
dec
testl
fwait
jl
gs
mov
or
xor
sahf
outsl
loop
add
and
sbb
mov
mov
ds
daa
push
sub
jnp
mov
jo
das
xchg
in
repz
test
and
push
add
fldcw
inc
lret
xchg
lods
add
push
adc
pop
pop
outsb
daa
jno
js
mov
pop
mov
xor
aaa
lret
enter
inc
insl
std
push
add
pop
push
lret
lret
rol
add
ss
mov
loop
pop
arpl
cld
pop
cmp
insb
and
addb
push
leave
mov
xchg
xor
sub
or
adc
jo
push
cmp
dec
sub
cmpsb
xor
push
and
mov
mov
hlt
xchg
es
out
xchg
sti
xor
pop
and
jns
lahf
pop
lahf
mov
sbb
mov
cmpsb
aam
add
jo
es
adcl
inc
shrl
and
stos
lret
arpl
adc
sbb
shrl
inc
int3
xchg
mov
lea
rcll
lret
stos
jno
nop
lds
movsb
inc
sarl
cmp
or
lds
pop
repz
pop
pop
push
push
inc
adc
push
mov
sahf
and
jg
mov
movsb
push
push
fstl
push
xchg
mov
and
adc
pop
jbe
jnp
daa
push
iret
jecxz
fsubrs
cmp
jmp
or
ss
pop
mov
mov
clc
sub
cmp
scas
nop
mov
dec
test
mov
pop
test
aaa
push
sub
stos
inc
mov
or
jns
xchg
out
into
movsb
andb
sub
lods
stos
mov
mov
dec
sbb
outsl
movsb
sbb
les
and
std
push
or
fldt
mov
cmp
mov
movsl
insl
jo
addr16
notb
or
ficompl
clc
pop
lret
xorb
cmc
mov
sub
dec
sbb
xchg
ficoml
and
movsl
jecxz
lcall
mov
pop
loope
dec
mov
lods
push
xor
imull
cmp
jne
dec
dec
lock
pop
leave
std
inc
leave
sbb
shrl
dec
adc
fmulp
cmpsb
int
jecxz
insb
mov
out
inc
inc
outsb
jae
mov
mov
mov
add
insb
popa
icebp
stos
dec
loopne
out
sub
pop
rclb
fldcw
and
or
js
sub
pop
je
iret
jp
add
mov
push
xchg
insb
cmp
imul
imul
cmp
sahf
inc
mov
js
shll
push
and
int
aaa
xchg
pop
cltd
cltd
sub
push
and
and
and
jbe
out
aam
jmp
or
push
adc
ds
mov
es
lahf
stc
sub
test
or
rorb
mov
shr
cmpsl
pop
aad
push
shrl
cmp
lcall
stos
dec
aam
jae
or
cmpsl
mov
pop
ror
das
out
mov
and
setl
dec
sbb
sarl
push
test
xor
cmpl
fldl
pop
lahf
pop
jle
fwait
pop
mov
popf
dec
mov
adc
in
idivl
jb
pop
es
imul
mov
clc
xchg
loopne
pop
rclb
call
cs
dec
and
lods
aas
lret
xchg
insb
jmp
sub
rcrb
dec
or
jge
mov
lea
sarb
std
daa
test
or
lods
jle
cvtdq2ps
arpl
xor
lock
mov
and
out
sbb
mov
fildl
daa
jbe
xor
inc
jne
clc
cmp
nop
and
dec
outsb
jl
mov
xchg
fwait
push
ret
scas
pop
clc
add
xor
mov
jg
aaa
ljmp
sbb
or
push
mov
push
adcl
loop
or
cmpl
fcmovb
cli
lods
jp
xchg
mov
pop
das
and
repz
leave
xor
mov
jle
push
out
rol
pop
popf
jecxz
push
test
or
dec
mov
sbbl
loopne
ds
xlat
imul
sbb
aad
pop
mov
or
test
popf
pop
ja
and
je
pop
dec
lret
inc
push
lret
rcl
shl
inc
xor
jle
pop
pop
push
adc
pop
pusha
negb
lret
aas
iret
cmpsl
or
cwtl
test
xchg
jp
jno
into
fmuls
out
ffree
les
test
loop
rcl
lret
push
repz
repz
adc
push
sbb
and
frstor
sub
add
or
arpl
in
adcl
sub
push
into
loopne
ljmp
in
sub
ljmp
in
adcb
mov
xchg
push
push
in
dec
int
lret
mov
and
in
icebp
icebp
popl
xchg
jmp
fucomi
hlt
test
push
fsub
xchg
icebp
mov
dec
jns
jl
adc
adc
jne
adc
inc
mov
dec
xor
mov
das
dec
outsl
std
xor
add
sub
icebp
movsb
iret
nop
outsl
shrl
mov
and
in
and
out
push
stc
insb
adc
mov
in
aam
cmp
push
xchg
data16
pop
aad
jbe
aaa
sbb
iret
jg
cmp
in
scas
dec
mov
xchg
and
jmp
pop
imul
mov
mov
imull
aam
push
cmc
out
subl
mov
insl
testl
adc
dec
sbb
out
pop
stos
inc
hlt
cmpsb
pmaxsw
mov
int
push
add
inc
je
mov
jnp
mov
xchg
jg
pop
shll
divb
push
mov
pusha
addr16
mov
pop
sbbb
mov
addr16
icebp
in
pop
xor
mov
repz
jnp
push
push
enter
mov
cld
mov
cs
add
ja
fwait
jl
mov
dec
add
push
jo
cld
jae
js
shll
lret
sub
adc
xchg
bound
mov
ficoms
jo
pop
mov
xor
or
push
cmp
inc
lds
sahf
or
stos
jmp
loopne
xchg
cmc
xchg
mov
fidivrl
mov
push
jp
std
sub
or
gs
fsub
jge
fstpt
movsb
dec
adc
sub
orl
add
mov
sti
cmc
ljmp
addr16
icebp
int
cwtl
enter
rolb
xchg
roll
mov
rorb
inc
and
ret
cmp
das
lock
fcoms
lret
sbb
inc
sub
jns
cmpl
iret
or
leave
ret
cmpsb
subl
pop
cmpl
jmp
in
outsb
data16
xchg
sub
popa
mov
jo
xlat
fadds
inc
test
sub
pop
stos
dec
dec
xchg
std
les
mov
adc
int3
pushf
shll
out
pop
shlb
cmpsb
push
sti
js
lea
xchg
dec
outsb
jmp
dec
pop
adcb
jmp
jmp
ja
push
mov
or
popa
mov
mov
push
dec
sub
add
adc
mov
or
lods
cmp
notl
adc
mov
loope
sub
jle
scas
jbe
stos
test
mov
fwait
inc
and
jg
sbb
jb
aaa
inc
adc
mov
add
mov
mov
xor
int3
xchg
push
repz
std
fistl
jnp
adc
in
mov
push
std
les
icebp
int
orl
add
lods
pop
sub
dec
sbb
ja
aam
add
clc
mov
adc
cmpsb
mov
xchg
cmpsb
ret
jp
mov
cmp
mov
test
cmpsb
pusha
dec
sbb
imul
and
dec
nop
sub
sbb
inc
pop
js
jbe
xchg
lret
shrb
xchg
and
jnp
xchg
sub
sarb
test
jg
sbb
movsl
mov
aaa
imul
std
cmp
movsl
push
push
int3
int
sbb
fnstsw
lcall
jb
test
inc
mov
push
js
stc
inc
push
cmp
clc
fistps
test
jo
pop
std
dec
or
push
cwtl
jne
and
xor
dec
pop
stc
sub
pop
lods
fwait
jb
jnp
jle
mov
or
push
adc
popf
sub
lds
push
cmp
mov
clc
mov
jnp
fildll
adc
divb
push
lods
stc
cmc
scas
jp
push
sbbl
mov
fwait
les
mov
out
xor
in
out
jns
xor
adc
ljmp
push
popa
cmp
lret
neg
jg
int3
jbe
fmull
pop
cmp
jp
fnstenv
adc
inc
push
leave
inc
jge
insb
shll
adc
jecxz
or
mov
push
lds
mov
imul
mov
cmp
sbb
jl
icebp
roll
les
ficomps
jno
dec
pushf
or
dec
ret
scas
loope
rcr
mov
sub
outsb
daa
in
jne
inc
push
push
jb
cwtl
ret
push
test
lcall
shlb
fcompl
mov
dec
cli
call
push
sub
dec
shrl
test
cmp
inc
pop
filds
fists
enter
repnz
fwait
ret
inc
mov
outsl
cwtl
out
mov
pushl
xchg
leave
mov
imul
hlt
mov
pop
lock
sub
data16
shll
lahf
and
jns
mov
shl
push
stc
jae
out
in
xchg
mov
push
lock
xchg
insb
hlt
fstpl
sbb
loopne
data16
push
dec
lds
test
jno
mov
cmovp
add
test
xor
jl
sbb
push
dec
cmp
xor
push
mov
xor
pop
sub
popf
aas
mov
in
imul
mov
outsl
xlat
inc
int
test
leave
es
arpl
es
int
in
sbb
xor
push
push
inc
mov
cld
pop
sub
lcall
xlat
repz
pop
jmp
jo
icebp
imul
mov
loop
shrl
lock
std
jae
in
adc
cwtl
mov
or
mov
fwait
es
das
in
or
push
jbe
add
push
fisubrs
ljmp
and
mulps
jmp
xchg
push
xchg
loope
add
hlt
in
jns
fcmovu
and
in
roll
xor
adc
mov
cmp
inc
scas
or
adc
xchg
pop
dec
jo
es
pop
add
aaa
in
jae
loopne
xchg
jb
xor
sti
sub
mov
mov
xor
cmp
imul
add
dec
movsb
dec
lret
sbb
jnp
push
sbb
andl
incl
push
xor
xchg
or
shrl
gs
jmp
add
repnz
ret
cmp
enter
dec
xor
push
ret
aam
jg
divb
sub
dec
std
mov
sbb
jno
inc
testb
lret
push
mov
sub
adc
sbb
and
jmp
sub
sub
cmp
pop
add
mov
pushl
inc
mov
sbb
mov
arpl
hlt
sarl
add
icebp
xchg
xchg
xchg
or
adc
dec
clc
inc
jno
jo
inc
scas
dec
add
add
and
js
mov
pop
repz
and
xor
jne
lods
push
bound
inc
not
mov
jno
push
dec
fnstcw
pusha
push
cmp
lods
mov
or
jbe
or
dec
js
sub
int
jp
add
jnp
arpl
pop
add
pop
call
pop
mov
add
xchg
push
movsl
xlat
ffree
and
and
test
sub
adcb
and
jb
mov
or
imul
cwtl
sbb
std
loope
gs
in
cmc
mov
jg
into
xchg
mov
outsb
int3
fstl
cmp
imul
adc
mov
add
sub
pushf
test
mov
fisubl
int3
push
pop
js
sub
mov
cld
call
es
sub
sbb
arpl
ja
xlat
cmp
mov
iret
add
js
sti
mov
shr
nopl
fmulp
or
mov
out
test
push
aaa
cmp
sbb
dec
xchg
jnp
shl
xchg
pop
cmp
movsl
std
cmp
int
cmc
popa
jno
fwait
lahf
xor
dec
ja
fstps
and
out
xor
loop
xchg
pusha
test
cmc
cltd
and
test
mov
lock
cmc
cmp
fmul
pop
mov
in
test
cltd
and
movsb
aaa
jmp
jle
out
addl
xor
inc
pop
aaa
rcrb
aas
add
push
shlb
add
pop
pop
inc
and
xchg
mov
shr
shrb
call
subl
flds
or
inc
fstpl
mov
mov
xorl
push
test
xchg
cmp
mov
inc
nop
addr16
adc
cmp
je
popf
repnz
sbb
jo
fbld
xchg
lds
or
rorb
aaa
jmp
sarl
out
ror
inc
das
mov
rorb
mov
rol
imull
cmp
sub
out
adc
push
jl
stos
pop
dec
sub
pop
lds
pushf
std
out
xor
cmp
stos
jne
mov
dec
insb
mov
cmpb
fstpt
xchg
movsl
dec
and
fld
pop
outsb
mov
jae
movsl
shrl
inc
rcll
cmp
inc
jmp
arpl
adc
pop
repnz
je
mov
sbb
mov
movsb
inc
add
ret
jp
pop
sbb
test
bound
jmp
xchg
and
mov
sub
sub
std
adc
jne
lret
xor
and
rcrl
push
lret
cmp
out
fs
dec
rcrl
push
insb
push
xlat
inc
cmpsl
xorl
nop
rol
mov
sbb
dec
sbb
into
add
dec
push
lcall
adc
fs
arpl
je
push
inc
hlt
jb
not
jecxz,pt
les
das
mov
xchg
or
repz
add
mov
xchg
pop
push
ret
push
and
aad
out
filds
pmulhuw
lret
mov
bound
mov
stos
mov
cmpsl
inc
leave
int3
hlt
andl
fstps
aam
call
jle
xorb
lock
cld
mov
pop
and
cmp
jno
cmpsl
sahf
dec
sub
out
mov
cmp
jb
mov
out
sub
inc
imul
mov
movsb
je
movsl
pop
sarb
test
ja
fcompl
mov
stos
dec
cmp
incl
xor
out
jge
mov
and
xor
or
or
pop
or
ret
outsl
push
push
aas
fstl
gs
fnstsw
insl
test
fwait
sub
xchg
outsl
sbb
dec
mov
mov
sub
push
mov
lret
ljmp
inc
and
into
mull
add
mov
xchg
ja
push
ss
imul
movsb
mov
dec
pop
jmp
cmp
sbbl
dec
xor
int
mov
aaa
mov
inc
pop
pop
mov
or
cld
mov
test
add
jecxz
imulb
clc
push
push
vminsd
cmp
cmpsb
jl
sub
lahf
or
shl
pop
mov
je
cwtl
cmpsl
lods
lods
bnd
sub
xchg
ss
jns
neg
jle
mov
mov
inc
and
or
scas
lret
adc
pusha
sub
pop
xchg
xor
cmp
aaa
leave
mov
sub
jbe
add
jns
mov
das
and
fisubrs
test
sub
cli
mov
aaa
pop
inc
xchg
xor
stos
mov
mov
fdiv
std
lret
pop
pop
ljmp
inc
add
sbb
insb
dec
xchg
sbb
stos
push
cmp
jo
sahf
aas
jle
aad
add
ss
loope
mov
mov
mov
xchg
push
inc
mov
mov
jae
jge
lea
cmp
push
adc
dec
add
mov
add
jle
dec
mov
cmc
mov
pushf
lock
ds
shlb
loop
pop
in
cmc
mov
jle
fstl
fcoms
xor
lods
arpl
fnclex
jle
mov
xlat
pop
test
mov
sbbl
test
push
xchg
into
dec
adc
cld
jmp
cltd
inc
add
pop
mov
mov
or
jge
adc
cmp
roll
repz
or
sarl
stos
pop
jmp
mov
out
movsb
pushf
sbb
mov
fstpl
cmc
les
sbb
mov
jle
sub
das
pop
or
xor
inc
pop
mov
ss
fwait
ss
or
int
mov
xchg
aas
mov
xor
inc
push
or
xchg
fidivrl
add
push
lret
jne
and
ret
rcrl
inc
sbb
push
lods
loop
sub
ds
mov
xchg
push
jbe
push
mov
sub
and
xchg
scas
jns
mov
xorl
mov
inc
add
pop
mov
das
xor
std
sub
mov
in
or
jge
daa
cwtl
xor
daa
cld
fildll
hlt
cli
or
lahf
adc
push
pop
cwtl
push
sbb
out
add
pop
mov
dec
andl
imul
fdivr
adc
cmp
sbb
mov
pop
xchg
push
fwait
jp
test
jmp
jp
cmpl
adc
sbb
out
or
xlat
mov
or
add
lods
add
xchg
pushf
adc
in
sbb
movsw
push
dec
cmp
mov
insl
les
cs
add
add
mov
out
loope
lcall
and
or
mov
sub
pop
imulb
aas
ss
inc
stos
jecxz
gs
mov
clc
xchg
int3
xchg
xlat
imul
adc
insl
cmp
imul
mov
mov
test
scas
daa
inc
mov
mov
test
jns
mov
inc
adc
jmp
sbb
mov
stos
lds
mov
scas
push
aas
push
mov
mov
repnz
and
test
sub
mov
mov
push
jb
aad
jmp
icebp
lds
pop
xchg
mov
fprem1
push
call
jb
lret
jle
in
or
into
ret
loope
loopne
lret
lods
adc
sub
dec
mov
adc
mov
pop
mov
xor
cld
dec
js
bound
pop
mov
jmp
or
addr16
inc
dec
iret
fistpll
lret
pop
arpl
dec
out
data16
push
pop
adc
movsb
add
mov
cmovge
movb
add
xorl
mov
inc
or
test
pop
adc
add
xchg
mov
sarb
xchg
pop
jae
shr
sti
in
cmp
jl
xchg
sbb
les
pusha
lret
loop
mov
and
mov
bound
inc
push
je
push
lea
ret
jg
cli
sahf
push
mov
data16
lcall
repnz
cmpsb
pop
fwait
loopne
or
adc
jno
fadd
dec
pop
mov
mov
fucom
mov
das
ds
ljmp
mov
cmp
add
or
mov
aam
xchg
aad
lret
mov
fsubrl
popa
lahf
push
sbb
mov
jmp
call
in
push
fwait
adc
dec
loop
nop
bound
adc
xor
fcoms
clc
dec
outsl
insb
inc
pop
jl
cmp
rcrl
mov
lret
mov
in
les
aam
push
adc
cld
jnp
push
adc
jle
mov
cs
aad
pop
mov
sub
or
xor
sbb
dec
sub
out
test
clc
sti
or
mov
fcom
add
cwtl
jae
mov
ret
push
lahf
sub
aad
sarl
xchg
or
bound
dec
jb
loopne
jb
popa
sub
inc
rcrl
loop
push
loopne
pop
int
out
and
xor
mov
std
pop
pop
rcrb
movsb
loop
jno
popa
adc
popf
fbstp
loope
in
aaa
push
pop
pop
push
fistpl
inc
out
xchg
push
lock
mov
mov
xchg
les
mov
push
mov
xor
mov
pop
or
xor
es
arpl
xchg
add
hlt
mov
cmpsl
es
popf
repz
sub
add
call
pop
data16
imul
outsb
sub
mov
outsl
mov
scas
popf
xchg
push
xor
jge
xchg
dec
and
add
cli
pop
and
stc
mov
lahf
loop
pop
dec
imul
rclb
jno
add
xor
jmp
jmp
jae
in
lock
mov
faddl
daa
or
mov
jl
lea
xor
popl
addr16
jg
outsb
dec
fwait
outsb
sub
ds
daa
enter
adcb
pop
cmp
or
lea
and
mov
fbld
sbb
and
dec
into
je
movsb
xchg
and
pop
jb
rorl
mov
add
xchg
shrb
out
mov
push
push
pop
adc
dec
xchg
test
inc
mov
mov
pop
notl
cmpb
pusha
dec
std
mov
mov
fwait
jl
mov
fs
pop
shlb
test
ror
mov
aad
lcall
mov
cli
xor
and
ss
jecxz
add
cltd
adc
loop
sbb
daa
dec
and
jno
loope
aad
and
cli
mov
shrl
jecxz
outsl
cmp
lods
jp
push
xlat
call
mov
test
mov
xor
mov
xorb
cmp
lods
or
jae
sbb
in
in
lock
dec
jae
cmp
mov
push
rcll
jae
mov
test
pop
and
sub
pop
cwtl
sarl
or
push
adc
in
sub
jmp
sub
inc
jg
mov
or
rorb
bound
pop
jecxz
and
ror
clc
in
call
add
cmp
mov
mov
inc
jecxz
pop
arpl
aaa
xor
push
fs
push
gs
pusha
mov
rcl
iret
out
fsubr
mov
or
and
sub
push
cmp
rorb
sbb
fucomip
test
loopne
imul
shl
hlt
outsb
inc
movsb
in
fldl
ficompl
hlt
and
mov
push
outsb
jp
push
outsb
daa
icebp
cmp
filds
je
xchg
inc
lret
lock
imul
xor
in
xor
mov
out
sbb
xchg
and
imul
cmp
mov
xchg
pushl
xor
stc
and
in
sbb
sbb
push
ljmp
xorl
mov
mov
inc
js
add
mov
das
ss
cmpb
adc
shrl
pusha
lea
xlat
jno
push
add
adc
pop
pop
jne
mov
sbb
dec
pop
xchg
and
stc
pop
add
xchg
sbb
push
jb
lret
cmp
aam
pop
push
ja
push
enter
push
and
insl
fists
lock
stc
push
das
sbb
jge
sub
and
mov
js
dec
mov
clc
data16
adc
jg
pop
clc
mov
arpl
testl
push
xor
ss
subb
ret
jmp
push
or
adc
add
xchg
iret
mov
mov
insb
dec
sbb
sbb
cmp
inc
sahf
xor
outsl
fldenv
cwtl
sarb
addr16
adc
imul
int3
stos
inc
daa
jno
cs
movsl
mov
test
loopne
sbb
sbb
sbb
popa
flds
sub
lret
push
divb
xor
inc
or
lret
xchg
mov
in
cmp
ret
hlt
inc
xor
pop
out
mov
jo
cld
and
call
cmp
lahf
fstpt
ja
stc
add
cmp
cltd
jmp
cmpsb
xor
xor
cli
ret
cmpb
sub
xchg
pop
repnz
mov
aad
aas
gs
call
and
sbb
aam
sub
mov
jne
lret
jecxz
je
sub
xchg
daa
icebp
jb
sub
adc
inc
cmp
rorb
fadds
pusha
addr16
cmp
cmp
cmpsb
lret
movsl
scas
out
sub
mov
xor
jg
pop
popa
pop
pusha
bound
xchg
aam
pusha
push
sub
jns
mov
into
add
xchg
push
std
cmp
push
mov
dec
mov
mov
inc
stos
inc
rolb
or
push
ret
test
pop
ljmp
mov
xlat
and
jno
sub
dec
pop
ja
xchg
adc
pop
mov
pop
jo
mov
lea
aas
scas
pop
movsb
or
daa
jp
and
pop
mov
aas
xchg
jp
push
bound
jb
lock
cmp
push
or
add
fs
add
push
bound
repz
cltd
sarl
negb
xchg
sbb
outsb
xor
xor
ja
arpl
inc
adc
jns
loop
xchg
xor
push
aas
and
mov
ss
in
ret
popf
xlat
jbe
loopew
in
push
flds
in
pusha
or
arpl
cltd
cmp
pop
js
or
add
int3
or
and
sahf
popl
xchg
push
adc
das
shr
lea
call
jmp
out
and
into
push
adc
and
cmc
pusha
fwait
jmp
clc
or
push
pop
inc
sub
mov
lods
lahf
movsb
xorl
lret
mov
pop
push
stos
sub
popf
cmp
lcall
in
inc
xchg
fwait
cmp
gs
jle
scas
out
ficompl
xchg
in
pusha
dec
mov
div
adc
out
add
lret
push
sbb
mov
push
jne
aaa
xor
xchg
pop
dec
push
cmp
sub
adc
add
xor
sub
or
cs
pusha
and
mov
xor
xrelease
loopne
push
xor
loopne
jae
popa
xor
pop
cmp
cmc
repnz
stos
inc
xor
sub
or
push
xor
mov
push
sbb
lret
mov
cmp
stos
sub
inc
dec
dec
pop
ja
rcrb
out
sbb
gs
push
mov
cwtl
aaa
test
push
xor
out
ss
mov
pop
imul
ja
cmp
dec
and
or
fldenv
cmpsb
xor
out
sub
mov
popl
outsl
lock
push
xor
xor
add
lock
mov
outsl
fistl
sahf
push
adc
and
arpl
push
mov
xor
xor
test
psubw
mov
mov
push
mov
inc
xchg
dec
lock
inc
cmpsl
jnp
idivl
cltd
cmpsl
loopne
pop
andb
jmp
std
ficoml
mov
mov
adc
insl
addb
xchg
arpl
sbb
pushf
mov
mov
xor
and
push
push
sbb
imul
rol
test
fsubr
cmp
jno
jl
xor
add
inc
lods
cli
shlb
stos
push
lret
jle
jmp
and
mov
mov
push
lahf
xchg
lret
ret
mov
loope
cmp
and
xor
adcl
repnz
adc
cli
cmp
verr
adc
or
mov
ja
sarb
in
data16
push
jp
adc
lret
addr16
add
gs
cli
shll
imul
test
or
mov
jle
cmp
ja
xchg
bound
mov
shlb
cli
int
mov
frstor
call
pop
jp
fcomip
push
sbbl
div
mov
ret
test
sbb
push
jo
push
push
in
xor
lock
dec
lods
jmp
in
cmp
idivb
ljmp
jns
dec
sbb
sub
inc
push
jecxz
hlt
inc
fadds
outsb
scas
xchg
inc
push
xchg
push
inc
sbb
inc
pop
cmpsl
loop
pop
sti
xchg
mov
icebp
les
adc
mov
rsqrtps
mov
aad
outsb
into
je
sar
sub
lea
int3
ficomps
pop
sbb
jge
push
hlt
lret
sub
clc
cmp
sbb
add
sub
add
xor
mov
mov
out
or
clc
xlat
arpl
or
orl
inc
adcl
mov
jbe
hlt
into
mov
out
subl
jl
aaa
es
or
push
sbb
jge
jge
dec
pop
xchg
sbb
push
push
xchg
push
cmp
cli
or
ss
mov
aaa
add
inc
cwtl
cmc
jg
mov
pop
outsb
sub
lea
nop
call
pop
mov
mov
ljmp
fs
xchg
in
mov
add
rcl
mov
push
call
hlt
jnp
sub
mov
aam
jno
pop
sarl
pop
jmp
int
push
sbb
cs
xchg
outsl
outsb
lret
pop
dec
pop
out
jb
gs
mov
daa
xlat
mov
mov
xor
xchg
push
fnstcw
fiadds
shlb
pop
xchg
test
push
add
fmull
jno
fistpl
inc
cmp
cmc
stc
jb
stc
vmovq
imulb
incb
jae
fistps
xchg
xchg
inc
js
sub
cmp
ret
daa
sar
dec
add
cmp
pop
out
xchg
cmp
jmp
aas
sbb
sub
ficoml
js
int
lahf
je
push
jg
sti
orb
push
xorb
mov
aas
ret
cmp
rcr
cmpl
cmp
sbb
lahf
lock
mov
pop
xor
push
loopne
inc
ret
inc
sbb
hlt
push
cmp
jle
or
xor
cmc
xor
mov
dec
xor
xor
and
loopne
sbb
mov
pop
jo
mov
rorb
les
ret
jnp
push
ror
aas
inc
lcall
adc
and
and
adc
ret
pop
or
push
xor
sub
ljmp
and
dec
dec
cmp
subb
cmpsb
xchg
sbb
mov
in
lret
jg
jmp
cmc
sbb
dec
inc
lea
mov
testl
jg
inc
sbbl
xchg
pop
leave
lea
cwtl
mov
addb
adcb
sbb
sub
sbb
lahf
ret
nop
insb
orl
loop
mov
nop
dec
add
push
and
sbb
movsb
dec
call
sbb
stc
mov
lods
bound
xorb
bound
pop
inc
mov
arpl
hlt
popf
sahf
and
jp
dec
inc
cmpsl
jnp
and
pop
or
xchg
jne
andl
dec
inc
insb
fcompl
dec
ss
fiadds
movsb
pop
xchg
das
adcl
insb
and
insb
stos
lcall
lds
jb
jbe
mov
std
push
mov
jp
or
adc
sbb
rcrb
popa
ds
aad
pop
mov
lret
sbb
xchg
mov
fidivrl
jg
addr16
imul
sti
add
movsl
rorl
mov
rclb
jmp
xchg
in
cwtl
pop
gs
add
push
or
das
ds
pop
bound
sbb
sbb
xchg
data16
jecxz
xchg
dec
sahf
or
inc
xor
or
push
rcll
lret
adc
int
xchg
jo
pop
mov
shlb
clc
pop
push
imul
pop
lcall
inc
out
xchg
add
push
adc
xor
mov
repnz
jecxz
fucomp
jg
mov
arpl
test
cmc
cs
mov
push
outsl
mov
mov
in
ret
call
sahf
or
in
lods
stos
fdivr
js
js
fyl2x
loope
les
das
sti
xor
push
test
adc
insb
movsb
pop
mov
push
push
loope
cmpsb
mov
mov
add
sbb
dec
dec
aad
jge
dec
in
xor
xchg
and
mov
push
in
ficomps
fwait
icebp
fidivrl
in
adc
popa
int
ret
xlat
jl
test
nop
lea
push
inc
add
repz
and
shrl
add
xchg
pop
add
mov
imul
pop
ret
int
ljmp
jns
push
xchg
sbb
ret
ret
mov
ljmp
push
das
mov
mov
ret
js
movsl
cmp
dec
leave
and
jp
push
in
leave
cmp
mov
xabort
aaa
rcll
dec
nop
xchg
in
repnz
mov
push
icebp
push
mov
loopne
mov
sub
mov
mov
mov
lret
data16
pop
sub
cmp
das
xor
mov
idivb
mov
cmp
sbb
sub
cltd
dec
pop
or
fnstsw
xor
movl
lea
test
clc
shrl
shr
inc
mov
fwait
xchg
inc
fwait
repz
jo
adc
adc
xchg
xchg
jmp
nop
inc
test
mov
sbb
cs
add
rcll
sti
daa
imul
cmp
jbe
cmp
movsb
mov
into
sbb
pop
mov
repz
push
loopne
out
imul
inc
push
div
icebp
cli
divl
icebp
cmp
scas
sbb
sbb
pop
adc
add
into
add
xor
fimull
push
mov
loop
adc
inc
addr16
cmp
sahf
jae
adc
ds
xlat
jnp
loop
pop
aas
repz
outsb
xchg
pop
or
data16
xlat
mov
fmull
pop
and
pop
dec
sahf
sub
mov
push
sarl
jno
into
and
jae
cmpsl
pop
jns
hlt
sbb
sub
xorl
cld
dec
test
shll
lcall
or
adc
fcoml
and
scas
insl
mov
push
inc
pop
les
cmpsb
cmp
call
mov
lcall
or
das
ja
mov
in
aad
ja
in
lds
mov
push
gs
sarb
mov
mov
int3
jge
lds
mov
imul
addb
cmp
cwtl
xlat
dec
jo
data16
push
cwtl
add
mov
movsb
mov
push
xor
jmp
fxch
push
iret
iret
mov
push
push
pop
in
rolb
sbb
icebp
xchg
out
push
insb
jb
mov
sbb
roll
push
pop
cmp
mov
mov
leave
mov
sub
mov
shrl
ja
jge
cmp
xchg
pop
jl
and
out
push
les
roll
jmp
pop
or
mov
pop
mov
lds
pop
loopne
dec
xchg
pop
cld
dec
and
fs
aas
stos
push
jne
cmp
xor
loop
loope
das
ret
in
cli
daa
jb
mov
jge
setbe
std
fnstcw
aas
mov
xchg
mov
test
sub
out
xor
adc
loop
in
add
nop
inc
inc
add
pop
insl
int3
push
jmp
ja
in
in
cmp
and
js
sbb
xchg
fimuls
fldenv
and
jecxz
jl
inc
sbb
push
pop
adcl
push
pop
push
inc
repz
in
add
inc
in
data16
sbb
cld
hlt
and
mov
sahf
push
mov
cmp
int3
bound
xchg
mov
addl
mov
ret
mov
jp
push
sbb
mov
aam
dec
loope
add
pop
push
pop
ljmp
fcoml
aas
in
mov
xor
cltd
rolb
jns
jnp
mov
cmp
insl
push
mov
push
scas
js
and
inc
mov
pushf
mov
test
hlt
mov
in
out
push
in
mov
jg
mov
xor
xchg
sub
mov
xchg
push
sahf
stos
repz
stos
xchg
push
pop
xlat
aam
jbe
iret
bound
addr16
sahf
sarl
sbb
cmpsl
push
xchg
loop
push
cmpsb
pop
sahf
jg
mov
ret
shl
movsl
cmp
jne
out
adc
inc
or
dec
movsb
adc
xchg
lds
ret
leave
je
out
cltd
inc
std
stos
push
inc
loopne
jne
jbe
or
cmpsl
sbb
ljmp
iret
fsubr
bound
arpl
pushf
lock
xchg
lea
test
aaa
test
cmpsb
aam
call
hlt
sahf
add
enter
out
cmp
cli
cmc
ljmp
rep
mov
clc
test
jns
mov
inc
aaa
int
sub
xchg
shrl
lcall
insl
aas
inc
cmc
dec
les
add
mov
je
andl
loopne
xchg
fstpt
push
movsb
ljmp
arpl
movsb
shrb
stos
add
lahf
xor
fsubrl
lods
insb
sbb
repz
sti
insb
test
out
lock
stos
pop
adc
xchg
lea
in
rol
lock
or
xor
xor
mov
sarl
or
loop
add
mov
mov
out
pop
mov
jg
sahf
dec
jb
dec
idiv
push
jg
xor
aaa
mov
dec
popa
inc
rol
inc
push
das
test
sahf
mov
ret
mov
mov
xor
leave
cmpl
sbb
mov
jg
mov
push
sub
jb
outsb
xchg
sub
cmp
popl
push
inc
jle
cld
into
mov
xchg
jns
jecxz
mov
xchg
int
idivl
aas
inc
sbb
les
mov
pushl
sahf
cmpsb
fnstcw
mov
iret
mov
in
jne
dec
xor
xor
fs
mov
push
cmp
cmp
or
lods
fistl
cmp
ds
jno
mov
dec
inc
test
dec
jmp
and
popa
mov
push
mov
push
outsb
hlt
cmp
xor
push
test
imul
stos
jg
ljmp
test
dec
ljmp
inc
jge
or
ljmp
mov
or
mov
cmpsb
mov
fnstcw
ret
lods
add
fsubs
sbb
icebp
xchg
lods
cltd
jo
jo
out
and
pop
cmp
mov
lret
push
fistl
add
dec
add
pop
fidivrl
ret
iret
outsb
mov
pop
repnz
cmp
inc
and
mov
cmp
xlat
lods
push
cmp
xor
sti
push
push
lret
subl
imul
jmp
fidivs
pop
test
jns
leave
or
shll
mov
aas
xchg
jmp
add
sarl
pop
adc
movsb
int3
aas
pop
dec
pop
aas
mov
cmp
cltd
ds
push
jge
pushf
clc
mov
or
into
lods
dec
xchg
imul
mov
insl
imul
or
movsl
mov
push
mov
sub
ss
stc
xchg
pushf
dec
jecxz
lods
test
sub
rcll
outsb
jbe
mov
jp
cmpsl
ficoms
or
xor
cmp
push
aas
jge
xchg
iret
jl
popf
mov
xchg
jne
cmp
and
jmp
xchg
xchg
pop
movsl
sti
or
addr16
enter
lods
shlb
and
repz
aaa
mov
repz
mov
ret
aas
rorl
test
add
cmp
mov
popf
ficompl
outsb
pushf
leave
cld
in
outsl
mov
popa
icebp
scas
inc
bnd
dec
in
jmp
es
mov
inc
fldln2
pop
scas
push
ficoms
jbe
xchg
sbbb
dec
lahf
jg
dec
popa
in
mov
cmp
sub
movsb
sub
pop
add
roll
dec
mov
add
pop
rcr
test
pop
lds
xlat
aaa
pop
sub
mov
mov
outsb
dec
rclb
sbb
addr16
mov
jge
mov
lock
add
loope
jb
imul
xchg
adcl
sub
outsb
data16
adc
fsubs
rep
sbb
push
js
xchg
jp
dec
loopne
mov
jne
shlb
ret
cmpsb
shrl
inc
and
mov
sub
xor
lds
rorb
loope
or
or
addr16
popa
jns
aas
xchg
pop
jge
hlt
loopne
mov
cwtl
cmpsb
jns
or
and
enter
ficompl
repz
inc
jp
jnp
sbbb
inc
insb
out
psubusw
mov
add
data16
lahf
cwtl
and
and
xor
xlat
cmp
dec
push
into
xor
push
mov
sub
xlat
and
pop
jbe
orb
loope
xchg
sti
das
fcompl
scas
cmpsb
sub
mov
pop
rclb
out
dec
inc
enter
cmp
daa
push
jns
arpl
inc
inc
mov
xchg
decl
scas
popl
gs
xchg
push
and
mov
sbb
and
int
mov
push
loope
cmp
call
cwtl
cmp
cmpsb
xchg
in
mov
pop
js
jnp
pop
int3
inc
xor
ljmp
add
inc
mov
inc
cmpsb
faddl
into
enter
movsl
mov
test
inc
xor
jecxz
daa
popf
xchg
cmp
or
pop
sub
jae
cmp
mov
das
pop
ja
ljmp
popf
addl
shlb
lock
xchg
pop
and
sarl
enter
ds
icebp
mov
add
dec
inc
dec
xchg
inc
mov
and
mov
repz
enterw
mov
inc
sub
jecxz
xchg
mov
add
popl
aaa
and
pop
sbb
cmc
hlt
xchg
lock
in
dec
test
iret
out
imul
repz
pop
call
stc
push
out
pop
enter
andl
pop
rcrb
dec
lods
test
cmpsb
sbb
mov
pop
push
int
loope
mov
push
mov
dec
or
push
sarb
popf
idivb
xchg
sbb
in
or
xchg
popf
aad
ss
test
jl
pop
inc
leave
cli
mov
clc
stos
cwtl
addr16
outsb
push
cmc
sbb
test
addr16
std
push
xlat
cmp
jecxz
cwtl
fcoml
das
xchg
push
pop
outsb
int
jle
out
fimull
jno
lahf
outsb
mov
mov
sbb
ror
jnp
loope
and
cmpl
xchg
jge
inc
mov
cmp
adc
pop
jo
push
iret
mov
jbe
mov
adc
mov
daa
add
lcall
push
fwait
push
out
leave
xchg
loopne
cmpsb
dec
fisubs
ljmp
push
mov
inc
inc
rcrb
xchg
shr
iret
sbb
xchg
add
idivl
hlt
xor
sahf
lock
dec
sbb
mov
jmp
aaa
jb
pop
mov
mov
mov
jg
mov
call
adc
jb,pn
lahf
xor
sbb
dec
and
and
and
mov
daa
jbe
imul
add
cmp
call
dec
in
lahf
cmp
sub
repz
popa
mov
outsb
cmpsl
jle
aas
movsl
jae
add
xchg
imul
jbe
out
pop
mov
out
xchg
mov
std
inc
push
std
inc
push
adc
repz
mov
aam
inc
pop
jecxz
mov
lahf
cmp
mov
mov
mov
jecxz
sub
cltd
adc
and
sbb
fwait
push
push
mov
xchg
mov
fcmovnbe
inc
int3
sub
aad
xchg
inc
in
xchg
incb
icebp
inc
xchg
dec
push
add
jp
sub
lods
leave
xor
outsb
sbb
lahf
xchg
push
push
xlat
mov
ret
mov
ret
xchg
hlt
xchg
cmp
outsb
mov
jno
push
xor
cmp
adc
cld
add
jl
jl
imul
jo
int3
leave
mov
sahf
push
cmp
addr16
mov
lods
lods
decl
adc
add
push
jp
orl
xchg
push
negb
or
testl
lods
stos
or
dec
pop
mov
js
inc
int
bound
addr16
dec
lahf
dec
push
sbb
jmp
mov
scas
cmp
aad
loop
fisubl
sub
cmp
mov
aaa
adc
addr16
enter
dec
repz
xchg
fisubs
jns
dec
aam
popa
jecxz
mov
adc
int3
pusha
faddl
and
addl
mov
fsubrs
ja
xchg
js
jbe
push
cltd
std
iret
xor
push
mov
mov
imul
mov
or
push
mov
imul
addr16
jo
sbb
mov
pusha
adc
xorl
scas
push
popa
jbe
jmp
or
cmpsl
aad
bound
sub
or
cmp
push
mov
iret
sub
inc
fildl
mov
mov
popf
adc
lret
mov
xchg
sub
aad
aas
xchg
js
ja
int3
jb
inc
push
out
lea
jno
jb
in
pop
add
mov
pop
imul
sahf
div
mov
or
jp
push
aad
les
pop
push
inc
es
fdivl
and
outsl
jecxz
pop
std
inc
cmpsb
fs
mov
push
xor
jno
or
jns
cmp
clc
imul
jmp
cmpsl
inc
mov
shll
jo
outsl
sub
push
mov
push
mov
or
dec
loope
jge
adc
fldl
inc
adc
mov
jmp
inc
xor
mov
lods
adc
orb
push
jg
add
xor
dec
gs
js
cmc
cmp
js
push
mov
push
sub
adc
xchg
into
mov
cmp
stc
arpl
or
fisubrl
dec
pusha
addb
nop
scas
mov
add
in
outsl
rcr
repz
xchg
data16
fcmovu
and
shll
test
lret
dec
bsr
xlat
add
stos
movsl
pusha
test
aaa
shlb
jno
cmp
insl
scas
or
mov
inc
fcmovnb
les
or
js
aaa
lods
jmp
jnp
adc
fldenv
test
js
shr
or
dec
sbb
cmp
push
mov
xor
mov
cs
cmp
sarb
ja
rorl
push
sbb
sub
dec
ljmp
icebp
xchg
and
jns
cmp
loopne
or
or
aad
std
jbe
add
adc
lods
shl
ljmp
insl
enter
pop
or
rcrl
repnz
sub
test
clc
add
outsb
ja
cmp
lods
mov
in
shr
test
sub
fisttpl
mov
fs
mov
adc
iret
and
add
pop
lret
mov
jne
ljmp
mov
and
mov
xchg
popa
pop
pop
xor
xchg
inc
je
enter
mov
mov
mov
or
mov
sub
movsl
iret
xor
mov
push
xchg
jecxz
je
cmc
mov
sub
enter
cltd
cld
mov
scas
imul
imul
mov
js
orl
popa
adc
bound
xor
or
xchg
bound
and
cli
xchg
imull
imul
mov
scas
loop
cmp
cld
pop
lret
es
dec
inc
inc
inc
mov
pop
xor
icebp
aam
sub
scas
arpl
stc
sub
lcall
test
xor
mov
push
mov
lret
loope
loope
sbb
and
clc
aad
sbb
fsubrl
mov
or
mov
sub
xchg
test
mov
cs
pop
pop
add
mov
push
rep
xchg
popa
in
fcoml
or
inc
lea
bound
xorl
nop
shrl
int
ret
mov
and
mov
out
jl
aad
pop
push
pop
dec
lea
sub
pandn
cmp
xchg
inc
and
ret
hlt
out
popa
ret
push
in
ds
rcrl
imul
aam
sub
push
test
jae
or
pop
or
dec
mov
pop
lret
bound
lahf
fnsave
rcl
pusha
adc
xor
mov
mov
insb
das
sbb
or
push
popf
dec
repnz
pushf
cmp
jg
je
mov
and
mov
lret
xlat
jge
int3
xchg
in
xor
repz
scas
pop
nop
xchg
sbb
adc
inc
scas
mov
in
ret
cmp
les
and
cs
sub
dec
ret
mov
test
ljmp
jl
xlat
ljmp
push
pop
sub
sub
arpl
dec
xor
movsl
adc
stos
hlt
lcall
dec
add
addb
xor
cmp
cmpsl
popa
iret
mov
scas
das
data16
xchg
int3
xchg
or
sub
aam
or
orb
ror
out
dec
cmpsl
or
xchg
test
xchg
dec
dec
inc
ret
mov
pop
jno
push
push
pop
insb
jbe
fs
mov
inc
push
cwtl
cmp
cmp
inc
das
mov
xchg
sub
cwtl
lret
scas
out
mov
js
fidivrl
dec
push
js
mov
mov
jecxz
cwtl
fldenv
mov
push
jg
nop
sub
sub
jbe
out
mov
ss
aas
adc
mov
mov
mov
js
cmp
mul
xlat
add
or
jne
push
and
inc
or
xor
sbb
std
dec
lcall
cmp
dec
lret
or
mov
cmpsb
lock
ljmp
int
mov
lods
je
dec
jmp
aad
xor
sub
daa
xlat
in
mov
mov
stos
xchg
jbe
aaa
add
in
mov
cmc
push
test
push
push
and
ficompl
dec
ljmp
push
mov
push
aas
ja
mov
pop
repnz
mov
int3
xor
xor
inc
dec
cmpb
adc
fcoms
in
mov
inc
arpl
rorb
sbb
test
and
daa
jge
stos
aad
dec
fs
xor
inc
decl
xor
jmp
add
imul
lods
adc
ret
in
es
imulb
or
es
ds
mov
xchg
push
and
push
int3
fs
jo
xchg
xor
add
rcrb
mov
xor
dec
cli
aad
cmp
push
jecxz
push
sbb
mov
jne
aam
xor
inc
sti
cmp
test
push
aas
cmpsl
sbb
fmuls
out
adcl
push
icebp
adcb
push
mov
xorl
iret
in
jle
cmpl
cmp
fisubrl
cs
int3
dec
adc
dec
in
loopne
in
out
and
mov
mov
inc
mov
pusha
sub
mov
cld
xor
scas
jo
mov
sub
fimull
inc
mov
mov
repz
mov
push
jmp
je
jle
pop
addb
ficompl
ret
push
inc
push
pushl
xchg
jb
and
inc
xchg
ljmp
add
jmp
sbb
movsl
lahf
adc
pop
jp
aaa
push
or
int
push
cmpsl
cltd
fstl
ret
leave
ljmp
or
aaa
cmp
cli
jne
xor
mov
add
sti
stos
cvtps2pi
mov
mov
xor
outsl
inc
int
xchg
fcomp
add
repnz
add
out
push
push
call
push
hlt
leave
cmp
fsubl
cmpsl
and
add
nop
fisttpl
dec
fwait
jae
mov
dec
pop
xchg
mov
fs
mov
or
jg
mov
dec
imul
outsb
mov
aas
cwtl
xor
jo
pop
sti
es
andl
loopne
popa
popf
push
lahf
inc
adc
gs
fwait
xchg
pop
xchg
daa
inc
pop
int3
adc
push
xlat
push
push
sub
fs
orl
and
mov
pushf
sbb
aas
jp
scas
cli
and
push
sub
test
mov
xlat
cltd
cmp
fnstenv
mov
and
data16
xchg
mov
fadds
pusha
lcall
cwtl
xchg
mov
lahf
adc
sub
mov
xchg
pop
mov
cmc
adc
mov
outsl
mov
push
cmp
cmp
or
sbb
push
sub
sbb
xchg
cs
sbbb
cmp
add
dec
jecxz
xchg
dec
pop
addr16
pop
push
mov
adc
popf
repz
orb
inc
dec
stos
out
dec
stos
popf
scas
jb
lcall
into
ja
pop
hlt
daa
sub
rcrl
push
jne
dec
mov
insb
push
sub
mov
xchg
cmpsl
push
scas
pop
stc
or
cmp
ja
cs
mov
jge
cmp
cmpsl
mov
pop
inc
fstps
test
or
and
jne
out
push
inc
sub
iret
leave
mov
es
xor
shlb
and
loopne
mov
or
lret
insb
mov
and
or
cs
in
lock
jno
lcall
mov
addr16
nop
xor
adc
pushl
sub
pop
fisubrs
cmp
cld
or
daa
lret
test
push
sarb
mov
push
jnp
loopne
or
daa
int3
popa
or
xchg
loopne
xlat
cmp
add
and
or
cmp
xchg
mov
aam
shll
inc
mov
pop
mov
pop
sub
loopne
and
scas
dec
adc
push
ret
ret
into
push
jae
and
dec
inc
cmc
dec
in
fdivl
or
pushf
pop
push
lds
cmpsb
adc
cmp
jne
lahf
inc
in
add
mov
jnp
xchg
movsb
insb
pop
mov
pushf
xchg
mov
jge
in
mov
imul
jbe
cmp
adc
xchg
mov
call
adc
push
test
movsb
cltd
dec
add
inc
push
push
or
out
adc
mov
out
cmpsb
jl
inc
aas
add
cmpsl
add
inc
mov
add
cmpsl
cmp
mov
dec
mov
lea
cmp
jge
jl
mov
lahf
mov
fwait
push
fsts
push
cwtl
out
cmc
bound
inc
les
pop
fiaddl
push
pushf
leave
lahf
cmc
cmp
ret
adc
subb
repnz
je
icebp
xchg
jbe
sahf
adc
xor
repnz
cmp
ja
push
push
lea
les
or
pop
ret
test
cli
ljmp
arpl
out
and
push
mov
mov
jg
jno
fnsave
mov
nop
scas
ss
and
push
adc
inc
push
popf
lods
ljmp
insb
cli
sub
adc
pop
test
mov
ret
adc
in
mov
popf
mov
ret
gs
ljmp
repz
mov
cs
adcl
nop
leave
sbbb
inc
in
sub
out
mov
mov
arpl
push
xor
idivb
jmp
jns
cmc
dec
mov
mov
aaa
and
dec
mov
mov
sub
sahf
sahf
jnp
xlat
cmc
adc
dec
mov
sbb
sub
push
add
xchg
add
aam
pop
popa
loop
cli
fisttpll
jne
arpl
dec
imul
mov
hlt
stos
cmp
rorb
popf
pop
iret
sahf
push
jno
out
lea
sti
cmp
cmpsb
jne
jae
mov
pop
cmp
or
add
lock
outsl
imul
mov
and
ds
or
sub
pop
jb
xor
pop
adc
xchg
mov
into
push
mov
mov
push
test
call
call
sbb
jnp
inc
sbb
fldt
mov
adc
orl
sti
adc
in
stos
mov
lock
mulb
sbb
pop
daa
push
out
adc
sarb
mov
int3
pop
push
or
daa
cltd
test
mov
mov
xchg
sbb
les
fisttpl
mov
les
mov
inc
inc
mov
add
dec
mul
dec
nop
jbe
xchg
popa
movsb
cmp
xchg
mov
jmp
das
mov
fwait
out
loope
pop
xchg
mov
inc
leave
inc
mov
rcll
jmp
push
insb
push
aad
lcall
fidivl
mov
xchg
cld
xor
pop
mov
inc
mov
aad
call
ja
sbb
popa
push
stos
int
ja
xchg
xlat
out
in
adc
xchg
jl
lea
or
aam
testb
pop
lcall
lods
mov
push
lea
subb
outsl
mov
out
test
push
mov
mov
jb
pusha
cmpsb
jg
imul
hlt
cmp
idivl
jne
jg
mov
mov
lcall
lret
mov
hlt
cli
pop
jns
push
push
or
lock
mov
mulb
out
ror
and
mov
mov
hlt
push
push
ja
neg
xchg
test
lret
pminub
and
scas
or
jnp
push
adc
leave
movsl
mov
sub
pop
jle
cltd
mov
adc
mov
testb
xor
idivl
sti
or
out
divl
test
jmp
mov
leave
sbb
pusha
fisubrl
test
jno
cmp
xchg
mov
pop
fwait
mov
das
out
pop
and
cli
ds
mov
jle
and
mov
mov
dec
pop
or
jo
mov
imul
adc
sbb
sbb
jmp
popa
sahf
add
sbb
pop
and
or
mov
cmpsl
sbb
pusha
mov
hlt
push
fcomps
das
adc
out
sti
stc
push
inc
mov
hlt
testl
sub
pop
push
sub
push
mov
inc
scas
fstp
std
or
call
pop
cli
push
add
mov
and
xchg
jp
mov
mov
movsb
dec
rcll
xchg
jns
insl
addr16
or
dec
stc
mov
cs
cmp
pop
fdiv
cmpsb
sbb
xor
leave
fisubl
pusha
adcb
in
in
and
inc
inc
cmp
mov
adc
pop
stc
push
cld
aas
stc
push
pop
xchg
nop
pop
repz
jae
xor
arpl
push
jbe
mov
xchg
cmpsl
jno
pop
sub
arpl
fdiv
sub
xor
sub
faddl
cmc
cld
or
adc
xchg
fldt
push
mulb
es
movsl
lds
jae
cmp
inc
xor
mov
mov
sub
filds
mov
mov
movsb
movsl
enter
xor
outsb
int
xlat
mov
jb
inc
push
ljmp
jg
pop
mov
in
repnz
out
add
or
push
in
xlat
cmp
sbb
mov
inc
pop
imul
fucom
inc
pop
inc
sub
mov
popa
das
inc
inc
mov
mov
xchg
mov
xlat
xchg
adc
mov
cwtl
sahf
cmpsl
jbe
scas
push
sub
jmp
mov
arpl
xor
fsubrs
add
sub
add
fisubl
fisubl
xchg
and
dec
outsl
shll
cmp
and
stos
xlat
cwtl
jne
lret
mov
mov
out
enter
jne
xor
iret
xchg
insb
pop
cli
or
pop
out
lret
sub
push
jle
mov
mov
sub
push
add
mov
and
xor
enter
fstpl
int3
psrlq
pop
jp
cmp
in
shlb
mov
fdivr
cmp
daa
xchg
jbe
and
call
call
mov
jo
push
test
add
xchg
movb
mov
cwtl
cmp
loopne
pop
mov
adc
mov
sbb
lods
jbe
jae
sahf
xchg
imul
pop
adc
mov
aad
inc
dec
jmp
ja
and
xchg
repz
or
ljmp
mov
adc
and
push
xchg
sub
dec
arpl
shrl
into
push
mov
mov
mov
xchg
icebp
mov
sub
push
cmc
and
mov
pop
outsb
jnp
dec
scas
inc
jbe
jns
jge
xlat
inc
sahf
xor
inc
add
stos
notl
icebp
hlt
lods
sub
sbb
xor
orl
sub
dec
mov
jno
je
xchg
shrb
das
in
gs
fidivrs
std
cmp
and
mov
cmc
mov
js
and
int3
rcll
sbb
pop
outsl
jb
mov
sbb
or
arpl
mov
jle
jbe
or
aas
test
into
mov
gs
adc
mov
and
pop
jbe
leave
sub
push
mov
push
into
adc
push
inc
fldt
sub
or
pop
xchg
fisttpl
and
fldcw
pop
dec
shlb
xchg
je
jo
mov
loopne
xor
inc
dec
cmp
out
in
xor
out
fld
or
xchg
add
sbb
loop
mov
add
lds
sub
mov
mov
dec
dec
es
ds
mov
lret
pop
roll
popa
daa
dec
test
enter
std
push
dec
mov
lea
mov
fs
inc
popf
xor
sti
push
ss
xor
inc
fbstp
add
mov
lcall
xchg
aas
mov
daa
sub
mov
push
xchg
cli
xlat
xor
xor
ss
add
pop
test
push
xor
ret
mov
and
insb
mov
xor
add
xchg
push
xchg
cld
mov
push
scas
arpl
test
jne
dec
mov
and
arpl
bound
adc
ja
pop
repnz
sbb
mov
in
test
stos
mov
and
out
popf
jl
sbb
or
scas
sbb
sarb
jge
fisttpll
inc
imul
push
pop
das
test
push
cwtl
mov
nop
rcll
mov
push
sbb
sub
sti
adc
mov
jmp
les
loope
fstpt
mov
xchg
and
xlat
fcomp
rorb
sti
cmc
lds
or
mov
lret
lods
or
xchg
jp
or
mov
cmc
repnz
popa
or
lret
mov
ret
aaa
sub
mov
or
sbb
inc
ljmp
mov
or
sti
jne
mov
jo
inc
jns
cmp
pop
cld
sbb
ja
ja
push
int3
inc
or
mov
jle
push
xor
push
notb
inc
ss
cli
adc
mov
jno
popa
test
ljmp
inc
pop
ret
in
aad
cs
ret
mov
ljmp
pop
inc
daa
sbb
ljmp
mov
in
loope
mov
fsubs
int3
call
push
pusha
adc
push
cmp
cld
and
inc
xchg
xor
xor
push
and
ljmp
aas
insl
lcall
cmpsl
push
mov
js
sti
dec
fld
in
sub
xchg
pop
popl
mov
scas
xor
gs
sub
adc
mov
popa
gs
add
insb
xchg
outsb
xor
pop
inc
daa
icebp
stos
mov
lea
sub
sub
mov
clc
imul
mov
inc
fdiv
and
fisttps
mov
lds
jno
dec
rcll
pop
add
call
imul
push
sub
mov
xchg
add
cmp
push
outsb
or
repz
add
sbb
aad
xchg
les
bound
aaa
lods
loopne
or
movsb
mov
lret
test
loope
jmp
aam
pop
cmp
lods
pop
iret
xchg
ret
shl
out
mov
cwtl
sti
push
push
add
cld
add
xor
xlat
enter
int3
out
adc
jae
or
sbb
jb
aas
aad
jo
rcll
addl
adc
sub
dec
int
mov
shrb
adc
jnp
ja
dec
inc
int
mov
pop
cmp
fsub
pop
outsb
pop
push
inc
sub
dec
into
pop
scas
xor
les
cmp
xchg
and
jmp
or
aaa
pop
pushl
sbb
pop
daa
ja
or
xor
movsl
xor
add
mov
push
add
mov
mov
sbb
push
cltd
add
lods
mov
cmpb
add
sti
adc
icebp
out
add
pushf
testl
ficoms
sbb
mov
jmp
mov
adc
mov
and
popl
js
sub
dec
pop
ds
lcall
mov
jmp
cld
mov
xchg
mov
enter
scas
cld
fisubs
mov
inc
sub
mov
fidivrs
cwtl
pop
outsl
loop
mulb
in
sti
out
sbb
dec
xor
inc
hlt
cmovno
ja
push
out
stc
loop
call
fwait
stos
ljmp
sbb
add
into
lods
in
jno
mov
dec
fistps
in
pop
jns
or
add
lods
or
lahf
xchg
jmp
and
ret
popf
dec
nop
int3
loope
cmp
lcall
sub
lea
mov
pop
pop
sub
or
xor
mov
and
mov
aaa
lret
int
call
je
into
int
cli
adc
sub
sub
sub
je
daa
push
pop
hlt
pop
lea
cmp
mov
mov
ret
daa
arpl
mov
push
or
call
inc
mov
cmp
adc
sarb
mov
fld
dec
fsub
arpl
pushf
test
notl
loope
xor
fabs
test
inc
into
mov
sbb
adc
pop
pusha
aad
sub
ds
or
dec
out
xchg
sarb
icebp
push
subl
xor
cmp
mov
test
repnz
pop
sti
sbb
das
sub
leave
cmp
and
outsl
adc
sbbl
jno
enter
enter
lock
xchg
jne
popa
cmpsb
lods
mov
jecxz
test
adc
cmp
js
xchg
scas
mov
rcrb
push
or
lods
jge
sub
sarl
push
roll
lcall
xlat
push
dec
or
sub
mov
lock
xor
xor
mov
xor
mov
iret
mov
outsl
dec
sub
push
shll
push
cmc
lret
cltd
bound
lods
mov
mov
mov
hlt
xchg
je
sti
mov
into
or
xchg
sbb
xchg
xchg
leave
or
in
bound
inc
scas
mov
je
into
xchg
pop
testb
pop
xor
add
add
or
fninit
aad
cmpl
sub
dec
pop
push
pop
adc
xor
jmp
jae
pop
and
or
or
xor
into
aad
repz
nop
and
fdivrl
repz
pop
popf
push
mov
pop
and
mov
mov
mov
cmp
inc
daa
outsl
lret
and
cmp
jbe
xor
push
cltd
pop
fmull
fsubl
xchg
xor
push
jmp
adc
push
lret
lret
rolb
mov
sub
mov
push
inc
cld
enter
cmp
mov
addb
xor
lahf
dec
hlt
in
cltd
loop
push
and
imul
add
shlb
hlt
orl
mov
mov
ljmp
addr16
xorl
sbb
push
dec
sub
xlat
add
or
mov
pop
add
jae
out
mov
pop
loope
push
outsl
mov
dec
jg
pushf
pop
push
mov
in
dec
ja
test
cmp
loopne
cs
or
cmpsl
pop
adc
mov
popa
pop
psrad
les
aaa
push
mov
jg
adc
inc
addr16
ljmp
sbb
testb
xor
jle
dec
xor
cld
fnstsw
xchg
mov
and
leave
jno
sbb
scas
xchg
aam
lcall
in
cmp
inc
jb
bound
into
or
inc
mov
mov
sub
push
jbe
rcrb
inc
ss
ja
mov
in
sub
rdtsc
in
jle
xor
je
adc
frstor
sub
fdiv
sbb
lahf
sub
aaa
data16
mov
fisubl
dec
cmpsl
lcall
jnp
push
xchg
pop
rorl
insl
stc
or
pushf
jo
roll
insb
ja
fsubrs
xchg
sahf
jg
lods
push
add
mov
fprem
imul
sbb
negl
mov
xor
inc
xchg
dec
les
mov
fimuls
mov
iret
in
jns
repz
clc
cmp
mov
sub
jo
inc
je
mov
jnp
fbld
xor
cld
jb
lcall
in
fidivrs
cmp
inc
in
into
jmp
ss
pop
adc
sar
addr16
ds
into
cwtl
pushf
mov
push
jmp
daa
jecxz
and
cmpsb
cwtl
add
arpl
and
test
adc
out
je
inc
jmp
dec
xchg
jo
jbe
pop
jg
sub
lahf
jae
stos
and
pop
pushf
cmovp
mov
or
xchg
xchg
scas
mov
imul
mov
mov
shlb
outsb
jns
ja
repnz
std
mov
lahf
push
cltd
ret
stos
jl
data16
fcmovne
add
or
xchg
mov
mov
into
push
stc
sahf
hlt
mov
sahf
mov
mov
cmp
pop
push
cld
test
loope
aaa
xor
mov
cmp
out
and
jnp
mov
mov
xor
out
ljmp
jns
mov
pop
ss
xor
pop
mov
sarl
sub
xchg
aad
insb
jp
mov
dec
adc
pop
add
jmp
aam
push
mov
mov
insl
or
jg
push
into
or
sub
ret
jo
loop
enter
and
notb
push
in
jg
in
mov
data16
cmp
hlt
push
xchg
out
push
mov
iret
mulb
ja
jb
sbb
xchg
je
pop
ljmp
xor
into
lret
loop
aas
sub
jo
es
mov
xlat
xor
or
push
fidivrl
movsb
das
insb
ja
bound
cmpsb
sbb
ffree
and
int3
jnp
pop
into
push
cmc
addr16
nop
adc
movsb
cwtl
push
out
outsb
xchg
addr16
cmpsl
mov
xchg
out
pop
lods
ss
cli
into
cmc
cmpsl
lds
insl
popa
and
mov
stc
xor
pop
mulb
pop
lods
sbb
test
or
mov
rorb
fisubrl
inc
dec
push
adc
mov
pop
xchg
lea
push
out
xor
jle
roll
neg
andb
cmpsl
pop
fcomps
outsb
lcall
lea
mov
and
mov
cmc
sti
paddsb
xor
pop
xlat
cmp
jp
mov
mov
cmpsb
mov
enter
lret
mov
mov
jge
stos
and
in
imul
jno
push
test
outsl
ret
push
dec
inc
xor
jge
iret
lock
test
les
xchg
gs
addr16
add
push
test
repnz
xor
ficomps
inc
je
test
aaa
push
pop
and
repnz
adc
xorb
mov
dec
push
or
pop
mov
and
inc
mov
lea
mov
loope
sbbl
loope
push
fisttps
xor
jae
popf
mov
push
xor
cs
fsubl
adc
pop
sub
jne
pop
pop
loope
test
jae
imul
int3
mov
in
jg
push
test
sub
loope
cmp
bound
sbb
xlat
add
faddp
in
adc
fnstenv
xchg
add
xchg
fdivs
pop
sarl
nopl
sub
int
ds
imul
xor
push
outsb
pop
icebp
int
popf
mov
sbb
dec
jae
repz
adc
cmpsb
lock
mov
jb
jle
adc
mov
gs
aaa
or
lret
sti
insl
jnp
inc
adc
xchg
out
cmp
push
push
cwtl
in
push
and
js
inc
mov
jno
cltd
dec
cld
and
pop
inc
cmpsb
out
stos
dec
pushf
out
push
js
add
bound
pop
daa
or
or
xchg
xor
bound
rcrl
cld
insb
movsb
dec
jno
push
jbe
adc
subb
mov
dec
dec
out
lcall
pop
cld
and
dec
cmpsl
cltd
bound
adc
inc
pop
xchg
xchg
ret
jp
sub
mov
xor
notb
add
cmp
cmp
inc
push
leave
dec
cmp
jae
cwtl
pop
mov
pop
jmp
xor
sti
sbb
shl
int3
imul
fisubl
outsb
rol
ficompl
jno
shll
ja
xor
mov
ja
add
mov
rcrl
xchg
mov
les
lock
mov
xchg
lods
pop
xor
stos
xchg
int
and
mov
gs
insb
mov
stos
sub
leave
call
std
jbe
fistps
pop
mov
test
dec
adc
jge
aaa
repz
hlt
pop
hlt
cmpsb
icebp
push
out
pop
sbb
sub
push
adc
in
add
in
cmp
inc
lea
incl
mov
dec
xchg
int
mov
jecxz
into
sbb
paddq
ljmp
cmp
mov
daa
push
ja
xor
ret
xor
fnsave
popa
jp
pop
push
packuswb
mov
fistpll
test
pop
xchg
xchg
inc
dec
mov
xor
mov
mov
and
jl
stos
pop
cmp
mov
test
shlb
ja
fisttpll
xor
pop
stc
jmp
pushl
sbb
data16
dec
mov
pop
mov
xchg
adc
inc
sub
jnp
lcall
stc
lret
mov
into
and
pushf
or
aaa
bound
loop
imul
mov
inc
stos
mov
lret
xor
pop
out
shr
loope
shrb
mov
pop
xlat
out
pop
ja
pop
push
or
xor
movsb
repnz
sti
jmp
mov
je
mov
int
cmp
aas
pop
lods
loopne
or
cmc
stos
jno
and
and
adc
or
cmp
aad
cmovne
sbbl
sbb
outsl
inc
pusha
shrl
or
adc
mov
incb
pop
and
cmp
cmp
dec
sahf
xor
or
push
cltd
mov
lds
or
repz
pop
imul
outsb
jmp
popf
repz
fistpl
sbb
in
jae
sub
in
rcll
xchg
addr16
cmpsb
loop
leave
xchg
std
and
xchg
pop
movsl
out
sub
arpl
push
mov
mov
in
stc
xchg
sbb
test
sbb
test
movsl
dec
into
pop
or
adc
cmp
push
pop
cmp
loopne
jne
addl
add
sarb
mov
add
sbb
decb
test
ljmp
mov
lcall
dec
cltd
pop
inc
xchg
cld
push
aam
inc
gs
push
loope
pop
stos
aam
lcall
xchg
pop
enter
idivb
aam
inc
mov
rorl
insb
fcmovnb
les
jle
icebp
xchg
lret
std
sbb
mov
mov
and
sbb
push
dec
in
xor
mov
jge
sub
push
fistl
jno
and
cmp
ret
sub
movsb
in
or
ror
jmp
fsub
sbb
leave
imul
xor
or
push
pop
or
pushf
adc
sarl
test
adc
push
outsl
jno
cmp
imul
dec
mov
pop
leave
mov
xchg
xchg
movsl
movsb
outsb
test
sub
pop
int
sbb
or
fidivrs
cmp
xchg
dec
xchg
test
or
loope
int
mov
push
lahf
lcall
jp
and
aad
and
std
xlat
push
enter
mov
nop
or
sbb
or
sbb
into
xchg
mov
push
test
adc
daa
adc
and
inc
scas
xchg
js
xor
pop
test
jmp
fcompl
dec
cwtl
dec
dec
jno
push
mov
mov
or
iret
rolb
dec
daa
pop
bound
xchg
faddl
jo
xchg
or
pop
loopne
lods
cli
jmp
cmp
mov
daa
iret
mov
mov
xchg
mov
add
jl
stos
cmpsb
mov
mov
sub
mov
sbb
out
sbbb
pop
add
jns
sbb
mov
sub
pop
and
popf
js
mov
iret
std
sahf
test
cmp
loop
mov
mov
incb
mov
cmc
lds
mov
push
fndisi(8087
xchg
outsb
popf
in
sbb
les
es
mov
inc
data16
jp
loop
hlt
adcb
add
mov
add
mov
and
iret
inc
rorb
gs
int3
insl
adc
xchg
xor
sub
out
lods
mov
mov
push
or
dec
dec
lcall
sub
push
xchg
popf
xchg
mov
es
addr16
mov
out
mov
xor
xlat
outsb
pop
ljmp
test
xchg
inc
inc
popa
dec
loop
icebp
shr
push
sbb
mov
jl
bound
mov
es
push
mov
lahf
pop
pop
mov
cmpsl
push
sbbl
mov
aas
stos
cwtl
into
icebp
inc
pop
lods
push
in
push
fcoms
hlt
mov
out
pop
add
pushf
aam
xlat
int
sub
mov
xlat
dec
sub
fiadds
jmp
testb
jae
push
outsl
add
ljmp
ljmp
je
js
sub
cmp
fmul
testl
imul
cmp
inc
popf
stc
stos
add
add
mov
outsb
test
aas
mov
push
or
jge
push
sbb
or
out
pop
pop
xlat
push
push
mov
sbb
pop
jp
mov
ljmp
clc
xchg
jns
nop
ret
xchg
inc
mov
incb
mov
jg
add
test
mov
sbb
and
xor
sbb
imulb
push
and
es
imulb
or
or
stos
xchg
incl
xlat
xor
subb
fs
xor
ljmp
nop
dec
sarl
push
xchg
out
shlb
sbb
jnp
push
mov
adc
cmpsl
xchg
add
add
in
adc
les
xor
xchg
orl
mov
lds
popa
loope
xchg
lods
ss
sbb
ficoms
aam
mov
push
lods
std
shrb
nop
call
test
dec
pop
cmp
xchg
or
fxch
mov
inc
push
ds
fsubrl
jl
lcall
mov
xchg
fildl
cwtl
pop
mov
mov
jg
call
fucom
mov
ret
repz
pop
popa
sbb
push
push
cmp
or
into
imul
xlat
adc
cld
jge
pop
mov
lret
push
cmp
push
addr16
pop
mov
push
fcom
into
jge
outsb
add
pop
or
cmc
mov
fwait
sub
leave
dec
push
insb
gs
pop
into
lea
adc
fistl
pop
sbb
xchg
and
inc
push
jb
xchg
insl
pop
inc
sub
and
in
xchg
or
push
jge
clc
lock
adc
mov
sub
pop
jle
lcall
aaa
subb
jmp
cmp
cmp
mov
adc
adc
cmc
mov
bound
ret
and
sti
lret
test
push
ss
cmp
pushl
test
jecxz
sbb
call
jl
sbb
iret
xor
pop
fimull
repnz
mov
cltd
enter
xchg
daa
das
xchg
mov
ds
xchg
rolb
jle
push
jne
cmp
adc
push
gs
xor
cmp
nop
fcompl
jae
inc
mov
add
and
cmp
test
add
mov
ret
xor
jecxz
xchg
sub
clc
and
jmp
xchg
jno
mov
pop
pop
lea
pop
je
popa
sarl
out
cmc
test
adc
ret
mov
ss
inc
xchg
popa
sub
rolb
pop
push
out
push
pusha
in
xor
or
add
mov
mov
or
dec
enter
decb
sahf
sub
cs
sub
jg
lds
adc
and
incb
xchg
aas
fsubrs
dec
lods
jg
adc
mov
mov
xchg
in
out
hlt
scas
and
pop
jno
cmc
sbb
push
pop
cmpsb
rcr
inc
jbe
sub
mov
dec
lods
adc
and
or
aam
lcall
das
fwait
daa
jmp
scas
dec
adc
ficomps
xchg
jmp
movsl
push
ljmp
iret
stc
inc
iret
add
mov
cld
pushf
rcrb
lods
scas
sub
xchg
mov
shll
dec
pop
add
cmp
mov
jmp
add
push
shll
out
mov
jne
jns
xchg
or
shll
sbb
mov
fcomps
mov
jb
movsl
les
mov
lret
and
scas
cmpb
jmp
inc
cmp
mov
mov
push
enter
sub
sub
fs
mov
lock
add
push
inc
pop
decl
fmul
repnz
or
pop
xchg
fsubp
pop
jmp
movsb
js
clc
and
mov
fsubrs
inc
add
lods
push
imul
lret
pop
push
lea
jecxz
iret
fs
lahf
pop
and
ret
das
outsl
std
dec
fdivl
jle
and
pop
hlt
or
mov
stc
int
ror
push
cmc
mov
dec
pop
fmul
xlat
leave
mov
mov
mov
and
or
mov
lahf
imul
int3
jo
dec
and
pusha
push
arpl
pop
test
mov
fbstp
jno
push
inc
das
inc
and
psubsw
out
pop
mov
out
popl
push
test
in
jle
sbb
adc
int
ljmp
out
cmpsl
cmp
fidivl
mov
inc
push
jae
loop
or
stos
lods
mov
fwait
mov
push
mov
arpl
int
add
mov
pop
push
bound
rorl
sbb
lret
cmp
sbbb
sub
ja
xor
jmp
or
xchg
jle
hlt
pop
add
sub
lahf
and
add
std
js
std
ret
clc
lods
lods
arpl
sar
inc
aam
sar
lcall
test
mov
mov
enter
mov
aas
dec
mul
out
and
dec
push
data16
sti
jbe
ljmp
pusha
sbb
inc
outsb
aam
mov
mov
ja
addr16
fwait
push
out
cmpsl
data16
xor
cli
divb
adc
cmpsl
int3
adc
call
mov
test
sub
push
data16
mov
stos
jge
int3
jecxz
xchg
mov
orb
push
dec
pop
push
lock
flds
and
push
lods
jmp
into
sub
and
lahf
lahf
jmp
pop
cltd
fmull
inc
and
xchg
push
loop
push
sbb
push
xor
mov
cmc
push
mov
or
cmp
adcl
push
dec
jne
xor
cmp
add
inc
xchg
adc
mov
adc
push
scas
daa
stos
xchg
add
and
outsb
insl
in
inc
adc
and
divl
mov
negl
ss
mov
dec
js
ss
loopne
roll
cmpsb
mov
lods
inc
xor
push
xor
push
aaa
push
sti
cmovb
pop
andl
iret
outsb
sbb
jg
dec
cmpsb
mov
jbe
rcrb
lods
xor
xor
lock
sarb
lret
imul
dec
ret
mov
fisubrl
imul
and
cs
push
mov
dec
shrb
xchg
xchg
out
inc
push
lods
enter
cwtl
shlb
cs
mov
popa
sbb
fildll
and
jbe
aaa
inc
sbb
ja
fs
xor
in
fdivl
jmp
jle
and
mov
js
or
cmp
jne
lret
rclb
mov
cmp
aas
les
xor
pop
pop
mov
xchg
daa
dec
fists
pop
xchg
aam
loopne
push
mov
cmp
nop
test
xchg
sarl
scas
int
dec
sbb
add
inc
cmc
fs
sarb
iret
stos
mov
adc
movsb
cmpl
mov
out
push
mov
push
scas
mov
push
xchg
push
mov
push
lock
jno
add
jmp
and
insb
mov
push
cmp
xchg
pop
enter
pop
push
sub
and
jns
outsl
jp
fnstsw
xor
fwait
dec
je
jns
and
aam
shlb
ret
xchg
sub
insl
xor
add
cltd
fnstsw
pop
push
loopne
sbb
adc
xchg
inc
addr16
sub
dec
and
adc
pop
mov
add
push
pushf
inc
xchg
pushf
jg
adcb
mov
xchg
loop
rorb
rcrb
and
push
stc
lock
dec
std
dec
shll
mov
mov
scas
pop
sbb
mov
adc
sub
or
or
mov
push
xchg
jns
cmpsb
imul
mov
fists
xor
cmp
ja
or
mov
test
sub
fdivr
jae
mov
cmp
stos
inc
mov
cmp
push
sub
adc
lret
cmp
ret
popf
je
dec
push
mov
addl
scas
jge
loope
out
out
pop
scas
stos
addr16
popa
xor
aas
pop
mov
ss
enter
pop
mov
cmpsb
mull
push
dec
sbb
pop
clc
jl
enter
adcb
aaa
jmp
adc
fstps
mov
jno
mov
xchg
cmp
push
jo
xor
adc
adc
or
mov
rcll
cmp
popf
xor
mov
push
push
jae
aas
sub
fists
add
add
push
leave
dec
mov
push
test
data16
dec
iret
dec
popa
dec
stos
sub
std
xchg
push
ja
rol
paddq
push
nop
insl
xchg
outsl
xchg
pop
jns
clc
lds
xchg
inc
movsb
jnp
das
inc
inc
jnp
lahf
xchg
orb
in
out
xorb
ficoms
jb
xor
cltd
lock
add
mov
inc
add
daa
shlb
inc
ss
mov
xchg
mov
test
inc
adc
loopne
mov
mov
in
inc
out
pop
leave
pop
or
jg
inc
push
xor
mov
xchg
orb
rcrl
pop
test
dec
sub
scas
inc
push
jmp
mov
fnstenv
stos
pop
dec
ja
pop
push
les
push
lods
cmp
adc
cmp
mov
mov
sbb
movsb
cmp
cmp
mov
mov
inc
sbb
outsb
roll
mov
jne
mov
push
lock
out
mov
ljmp
cmp
adcb
lea
out
sub
push
cmp
and
movsl
pop
pop
sbb
and
addr16
pop
fistps
add
mov
dec
test
xchg
lahf
scas
fst
mov
iret
xchg
mov
xor
retw
aam
mov
jbe
push
push
adc
adc
popa
jno
stos
ss
xchg
adc
lods
daa
and
adc
shl
sbb
cmp
xchg
repnz
inc
adc
cmp
and
xchg
mov
jl
jns
add
fimuls
lods
cmp
push
push
pushf
xchg
or
jp
and
add
ljmp
add
mov
push
mov
cmc
inc
js
int
lret
push
jge
roll
iret
pop
cli
adc
lds
lea
mov
mov
sbbb
lret
data16
lret
repz
std
popf
cltd
sub
stc
cmpsb
lahf
iret
mov
adc
jb
out
test
daa
mov
mull
mov
dec
in
dec
out
mov
dec
arpl
es
cmc
adc
jae
daa
jne
fsubs
icebp
push
sub
inc
mov
subb
arpl
xor
mov
inc
jnp
loopne
cmp
out
add
jl
xchg
loope,pn
repz
pop
jge
and
or
in
loop
push
insb
inc
in
dec
cmpsl
addr16
push
push
sbb
or
daa
mov
pop
insb
loop
sub
shll
lods
int3
insl
and
add
repnz
cmc
mov
out
into
cmpsb
mov
pop
das
fs
mov
out
scas
mov
ja
fs
popf
sub
mov
out
imul
mov
push
and
cmpsb
scas
inc
inc
outsl
pop
in
push
in
jbe
pop
xor
mov
lahf
ret
xchg
repz
mov
add
xchg
test
or
mov
outsl
sti
inc
fstpl
cld
ss
adc
cmp
rclb
nop
iret
int
inc
mov
clts
enter
call
test
enter
loopne
or
pop
ljmp
jp
mov
mov
mov
js
mov
scas
mov
cmp
clc
fcoml
neg
insb
push
pop
in
and
addr16
fnstcw
sbb
add
inc
xor
mov
jle
inc
or
jecxz
sbb
les
xor
arpl
fsts
ja
push
aaa
or
jbe
mov
rorb
push
jnp
nop
jl
popa
xchg
inc
mov
out
lret
push
inc
mov
add
and
or
popa
addr16
xor
cmpsl
stc
mov
mov
ja
jmp
cmc
xor
cltd
stos
test
out
and
iret
adc
sub
sbb
imul
not
ds
inc
pushf
mov
add
jge
adc
in
cmp
jo
mov
sbb
mov
rcrb
and
xor
jg
loopne
aam
in
negb
mov
mov
or
in
les
imul
inc
rolb
dec
pop
cmp
add
xchg
sbb
mov
mov
frstor
mov
xor
mov
adc
lcall
push
jbe
and
mov
cmpsl
pushf
sbb
cltd
sub
pop
push
outsl
xor
inc
jge
or
jnp
ret
push
aaa
pop
mov
mov
out
cmp
leave
xor
pop
outsl
dec
sub
or
repz
jne
loopne
cmc
jle
and
jb
addb
mov
fs
sti
xlat
xchg
cmp
rolb
add
testb
jecxz
and
pop
xchg
shrb
lds
int
cmc
cmpsb
mov
and
push
ss
adc
imul
jge
jns
or
sbb
jge
shrb
dec
adcb
xor
cltd
out
imull
sub
test
push
ficoms
xchg
data16
js
idiv
loope
add
xchg
mov
andb
sbb
pop
roll
jne
icebp
dec
push
cli
jno
addr16
xchg
cmc
and
cmpsl
scas
out
mov
and
xor
xchg
cmpsl
loope
pop
es
jl
test
xchg
lods
imul
and
ds
addl
dec
adc
bound
or
fsubrs
pop
cmpsl
inc
dec
add
mov
sbb
or
test
xor
adc
dec
movb
scas
dec
inc
lret
xchg
xchg
test
stc
push
int3
mov
xor
sub
pop
lods
pop
push
jg
or
stc
lds
add
movsb
cli
imul
repz
dec
cmp
repz
imul
hlt
jnp
mov
sahf
sbb
sbb
sti
xchg
jp
mov
test
xchg
rcll
add
ja
vunpckhps
mov
inc
bound
addb
or
add
gs
add
cmpsl
sbb
ljmp
sub
imul
push
outsb
xchg
nop
mov
lahf
cmp
insb
fxam
in
call
pusha
jnp
mov
jp
int
push
imul
or
out
xchg
mov
testl
xchg
jno
xlat
jb
inc
or
arpl
jbe
negl
cld
sbbb
xchg
push
and
into
fbstp
mov
mov
xchg
lret
pop
sub
pop
or
int
inc
js
test
or
out
jg
cmp
aad
or
les
mov
inc
pop
ficompl
mov
mov
mov
sbb
dec
call
out
jbe
int3
rolb
into
add
cmpl
and
cwtl
outsb
push
add
jnp
aam
outsb
cli
sub
dec
or
shll
je
daa
jmp
jbe
es
cmp
enter
gs
sbb
in
dec
inc
mov
sub
ret
addr16
mov
mov
and
jg
outsb
icebp
jecxz
in
jmp
cli
xchg
push
hlt
push
add
jp
shl
rcll
add
push
inc
pushf
stos
mov
aad
nop
pop
xchg
enter
jb
dec
and
cltd
push
and
pop
mov
or
mov
push
inc
out
sub
cmp
aam
icebp
sub
inc
out
dec
cmp
cwtl
je
add
shl
incb
lret
cltd
add
into
xchg
cltd
sti
xchg
lods
xchg
popa
mov
in
mov
xchg
hlt
add
add
lds
scas
and
mov
xor
es
cwtl
fsubrs
xor
dec
mov
dec
push
lock
xchg
enter
ljmp
inc
pop
xchg
mov
inc
push
shld
loope,pn
fs
pop
mov
pop
pop
cld
inc
fstp
fildll
sub
jns
adc
outsb
pop
add
popf
sub
loopne
xchg
push
mov
and
pop
test
out
jb
dec
or
nopl
lret
jge
popa
in
insb
aas
cmp
test
xchg
ret
out
loop
movsl
inc
push
loopne
xor
in
xchg
xchg
ljmp
xlat
mov
pop
xor
push
jo
push
je
cli
and
inc
mov
loopne
cmp
cmc
or
std
dec
std
nop
dec
daa
cmpsl
xor
and
xchg
mov
mov
xchg
mov
sub
sbb
push
popl
and
dec
fcomi
add
test
shll
push
shl
adc
push
jmp
and
out
mov
sbb
xchg
imul
inc
sub
scas
mov
push
cmp
inc
shrb
inc
adc
mov
adc
das
negb
and
jnp
dec
lods
sub
xchg
dec
pop
xor
jle
push
stos
mov
ret
inc
adc
xor
cmp
cmpl
add
mov
outsl
pop
sbb
lods
adc
data16
sarl
ret
flds
or
adc
jge
inc
push
pop
int
push
outsl
jge
sub
stos
addr16
in
mov
jbe
jp
jg
scas
ljmp
je
jp
and
add
ljmp
mov
aad
icebp
mov
xchg
cmove
adc
and
test
pop
enter
sbb
push
int3
add
pop
sahf
lcall
sbb
cmp
aam
pop
sub
rcrb
daa
jl
mov
inc
aam
stos
and
push
leave
pusha
jle
leave
and
ds
mov
fistps
ja
jno
out
jle
inc
mov
or
or
sarl
xor
push
inc
lret
sub
lods
popa
push
out
mov
dec
leave
cmp
add
cltd
inc
imul
enter
cmpsb
test
jb
test
mov
xchg
xor
adc
cwtl
hlt
sbb
ret
out
popa
mov
and
mov
bnd
mov
cmc
fcmovbe
mov
outsb
fildll
aas
inc
mov
pop
inc
int3
bound
cmpsb
mov
pushf
push
out
push
int3
jl
shll
push
and
pusha
test
or
xor
data16
sbb
mov
push
pop
in
shll
cmp
push
xor
pusha
rcll
cmp
clc
insb
test
inc
imul
imul
enter
int3
fcomps
ja
mov
sub
mov
ffree
aas
rolb
mov
cwtl
lea
and
jns
dec
and
xor
xchg
mov
popa
jb
shrl
in
fisubrs
ret
lods
pop
adc
adc
mov
sbb
push
xor
insl
lock
xchg
loop
push
fildl
cli
imul
pop
mov
scas
movsb
loop
movsb
ss
fnstenv
jae
sub
popa
cmc
cmp
arpl
pop
cmp
adcl
loope
outsb
shll
mov
outsb
int3
xor
rorl
insb
ljmpw
ud1
cmc
sub
sub
test
jbe
push
mov
xor
mov
sub
mov
daa
test
jecxz
outsb
pop
sub
mov
xor
mov
lods
jno
int3
in
scas
add
adc
test
or
sub
enter
add
cmp
nop
inc
jle
push
pop
hlt
test
addr16
jbe
je
xor
lock
pop
push
jge
jp
cli
mov
out
mov
mov
mov
mov
bound
and
rorl
push
jne
inc
jmp
dec
sbb
push
fs
push
pop
jg
inc
scas
fdivrp
mov
fstpt
sarl
add
stos
push
fs
bound
inc
lods
jg
push
xchg
adc
imul
icebp
mov
push
pop
inc
into
inc
sbb
idiv
fmuls
add
mov
cmc
std
fsubrp
or
mov
test
xchg
mov
das
scas
add
cld
sbb
test
and
jbe
push
lds
dec
sub
push
loope
push
or
xorl
fisttpll
ss
scas
dec
and
lcall
cltd
xchg
pusha
cmp
sbb
or
sbb
mov
dec
add
sub
mov
iret
xchg
dec
dec
sbb
pusha
lret
inc
iret
mov
push
mov
ficoml
aad
test
addr16
lcall
lcall
sar
mov
aaa
lods
cs
xlat
dec
aad
cmp
jbe
dec
outsl
jne
push
inc
dec
cs
out
dec
enter
es
sub
cltd
stos
loop
and
dec
mov
add
ret
lret
fldenv
lods
faddl
insb
adc
sbb
jne
add
xchg
out
inc
xchg
out
or
enter
daa
test
inc
aad
cmp
fisubrl
mov
or
cmp
jge
insb
mov
sahf
insb
jecxz
inc
jmp
sidtl
xlat
or
cmp
outsl
inc
ljmp
daa
mov
mov
cmove
lods
sbb
repnz
inc
and
out
es
test
rcrb
dec
and
into
mov
mul
mov
sub
pushf
enter
inc
push
mov
hlt
adcb
or
inc
repnz
cmpb
addr16
ss
or
pop
mov
shr
mov
dec
push
and
sub
mov
pop
sbb
les
sub
fldl
mov
gs
shll
dec
sahf
stos
cmp
shr
dec
lds
cltd
and
jle
rcl
sub
mov
push
movsl
pop
push
adc
jmp
sbb
push
repnz
idivb
jl
jle
je
dec
jmp
push
sub
jns
leave
sbb
ss
ret
push
mov
aas
push
loop
fistpl
dec
mov
sti
js
push
fstpt
jl
repnz
cld
xor
sbb
sar
and
sub
add
jmp
out
les
mov
ret
sbb
cmc
movsl
es
lods
std
adc
mov
and
icebp
push
cmp
xor
cld
add
or
xor
push
sbb
or
and
sbb
jle
sub
inc
push
xchg
jp
addr16
in
testb
scas
lods
push
pop
scas
mov
in
cmp
xor
enter
aam
cli
outsl
idivl
shlb
je
sti
cltd
xchg
mov
and
cmp
arpl
jo
fwait
imul
xchg
cmp
dec
sub
iret
xor
ret
addr16
mov
out
loope
call
pop
movsl
es
mov
lods
and
inc
push
sub
sub
popf
test
jb
sbb
arpl
lahf
mov
push
dec
xchg
std
into
or
fmull
roll
xchg
inc
lds
jns
insb
sub
xchg
pop
ret
lret
inc
sub
test
xorb
out
or
mov
mov
nop
sbb
les
mov
loopne
sbb
repz
and
xchg
rorl
push
loopne
sub
cmp
les
mov
ret
int
mov
xchg
mov
mov
dec
int
xchg
insl
dec
les
mov
push
in
andb
movsl
pusha
imul
sub
pop
sarl
data16
xchg
jp
lret
adc
addb
push
imul
int3
fldcw
data16
fnstenv
dec
fistpll
fiadds
jg
add
jmp
pop
inc
loopne
sbb
mov
mov
leave
push
push
loop
mov
lods
pop
inc
je
cmp
or
mov
add
cmp
scas
idivl
push
pop
popf
cli
pop
scas
sub
mov
enter
sbb
mov
rol
outsb
cmp
insb
in
mov
test
jns
aaa
arpl
pop
mov
lock
cmp
push
cld
xchg
push
aam
mov
xlat
std
jge
xor
sub
ret
add
add
fs
mov
sbb
pop
repnz
pop
mov
xchg
nop
ss
addr16
leave
xorl
or
xchg
sbb
add
xchg
or
in
popf
outsl
xor
jg
or
outsl
jb
inc
adc
hlt
pop
mov
pop
fdivr
stos
cmpsb
call
adc
movl
and
dec
xor
loop
mov
jl
stos
sub
dec
mov
mov
cli
mov
xor
or
add
ljmp
bound
cmp
fwait
xchg
cmp
shlb
inc
cmpsl
cmpsl
arpl
cs
inc
icebp
push
mov
xor
cmpsb
stos
aaa
incb
cmp
sub
and
inc
pusha
movsl
sets
loop
xor
mov
jg
jle
out
loope
mov
and
xchg
jmp
mov
inc
loope
and
shll
push
lahf
jg
add
lahf
sbb
dec
lcall
in
mov
push
fstpt
clc
fwait
mov
ror
cltd
jae
ljmp
pushf
repz
fidivl
roll
push
enter
cltd
sti
and
and
aam
out
out
inc
mov
test
ud1
fs
mov
push
dec
pop
int
xor
rorl
adc
outsb
int3
add
notb
ss
push
idivl
and
and
mov
xchg
insb
mov
inc
cmp
sbb
repz
or
sbb
idivb
mov
jl
pushf
jne
lock
pop
inc
pop
cmp
sbb
ja
xchg
cmpsl
gs
iret
jecxz
les
lock
int
call
or
dec
add
jge
xor
aaa
xchg
xchg
sub
mov
push
test
mov
leave
mov
cmp
scas
sti
shll
add
js
sub
das
jmp
jno
aam
mov
sub
inc
mov
sub
xlat
xchg
or
adc
es
push
jb
ret
mov
in
mov
cwtl
outsb
xor
mov
xor
xchg
outsb
mov
inc
xchg
mov
push
mov
pop
cli
sub
or
pop
mov
jae
es
test
jae
lds
mov
jnp
dec
push
sbb
test
movsb
stos
sub
fwait
inc
cmp
out
loopne
xor
cmp
pop
dec
adcl
inc
pop
push
cmc
pop
inc
dec
xchg
pop
mov
movsb
mov
inc
aaa
mov
lret
std
andl
clc
popa
pop
fimuls
xchg
inc
lock
mov
fisttpll
mov
push
add
jmp
je
daa
xchg
lock
ds
subl
mov
hlt
hlt
insb
push
je
push
fcoms
cmpsb
cmp
add
in
insl
xchg
loop
sti
stc
pop
ret
fs
test
sbb
lret
in
dec
daa
imull
sahf
mov
pop
push
mov
loop
add
cli
pushf
pop
xchg
ja
arpl
inc
sbb
movsl
and
imul
mov
xchg
jno
fbstp
gs
lea
inc
mov
cwtl
in
lods
pop
xor
into
js
mov
jmp
shrl
sti
push
push
data16
ret
dec
lret
xchg
scas
mov
shrl
out
repz
mov
ficompl
mov
mov
fsts
and
mov
add
cli
ss
cmp
pop
pop
push
adc
lret
rorb
enter
mov
jge
and
les
add
jno
rcr
xchg
cmp
rorl
mov
adc
add
dec
ficompl
pusha
cmpl
mov
int
jns
push
lods
pusha
cli
xor
mov
dec
mov
subb
fisubrs
mov
loope
scas
in
imul
and
popf
stos
aaa
mov
mov
sbb
mov
test
rol
push
addl
fiaddl
jb
pop
rol
icebp
lods
inc
mov
les
mov
mov
arpl
adcl
mov
adc
dec
push
xchg
scas
jle
in
xlat
fstpl
dec
call
dec
dec
sbb
sti
or
cmc
mov
in
mov
cld
push
mov
repnz
xchg
in
push
add
iret
add
lods
or
xchg
mov
push
notb
dec
xor
shlb
dec
jo
mov
faddl
sahf
into
out
loop,pn
push
iret
outsl
cmpb
pop
fistpl
add
mov
xchg
lods
jge
xor
jns
mov
shl
jge
sti
cmp
xchg
out
jl
adc
or
out
push
mov
inc
add
call
push
mov
fistpll
sti
pushf
mov
mov
sbb
sti
lea
xchg
mov
inc
mov
and
cmpsl
ss
fmuls
push
aas
mov
xchg
das
push
movsl
mov
mov
mov
and
inc
lods
das
adc
jl
pop
and
call
mov
stos
or
cmc
pop
add
leave
pusha
dec
movsb
inc
fistpll
stos
aaa
sub
cmc
push
mov
push
mov
cs
fnstcw
and
add
in
ljmp
xchg
jl
add
insb
xchg
add
fbld
lock
inc
dec
rep
and
and
mov
push
jmp
sti
idiv
pop
and
jne
fnstsw
jbe
imul
inc
mov
int3
mov
xchg
cmp
sar
test
lock
mov
pop
push
inc
insb
mov
pop
arpl
dec
pop
push
jnp
cmc
lahf
pusha
adc
in
xchg
sbb
and
pop
sub
movsb
in
andl
jmp
lret
lock
xchg
frstor
pop
push
in
inc
shll
xor
leave
sub
int
jmp
adc
pop
and
pop
pusha
xchg
out
ret
push
sbb
mov
cwtl
mov
push
lahf
xchg
ljmp
loop
add
pop
inc
fprem1
and
cmpsl
cltd
sbb
push
stos
jb
jmp
lcall
xchg
sub
add
ljmp
or
add
adc
outsl
test
mov
pushf
push
js
mov
xchg
outsl
add
out
enter
xor
jl
fsubl
sub
test
pop
xchg
jae
push
dec
push
dec
repz
mov
inc
xor
mov
mov
bound
pusha
cmpsl
sbb
ret
mov
jge
mov
jle
sub
ljmp
pop
xlat
mov
push
fsubrl
and
mov
pop
popa
in
dec
or
insl
sbb
inc
popf
and
fs
mov
cmp
cmp
and
sub
sti
cmp
inc
push
popa
push
les
xchg
mov
ljmp
mov
inc
jl
outsb
mov
repz
push
xor
xchg
aad
cmp
push
push
movsb
cld
sub
loop
add
stc
imul
outsb
push
mov
fmul
mov
fisubrs
jg
hlt
dec
shrb
sub
inc
addr16
jne
out
ret
and
lahf
es
iret
lret
or
aad
mov
adc
rorl
dec
mov
std
loopne
inc
outsb
sbb
movsb
lods
adc
add
dec
mov
adc
jne
pop
fs
divb
mov
xor
inc
fdivl
mov
sbb
pop
mov
dec
sub
aad
je
jne
jle
loope
mov
mov
lahf
cs
cwtl
xchg
xchg
ljmp
in
sub
cld
xor
xchg
cmp
es
inc
test
pop
pop
xchg
repnz
lret
adc
repz
mov
mov
cmovno
sub
scas
aam
jo
mov
insl
scas
arpl
jbe
add
out
cmp
lahf
sbb
fdivrs
sbb
mov
adcb
xchg
pop
ja
cli
cld
in
dec
sub
xchg
sbb
sbb
cld
or
in
cmp
cmp
mov
adc
aam
aas
sbb
xor
mov
shlb
adc
cmc
mov
daa
gs
mov
xchg
adc
cmovae
push
sub
gs
xlat
mov
sarb
mov
jp
mov
pop
pop
cli
out
cli
lret
mov
lcall
test
test
mov
push
and
cmpl
dec
hlt
inc
push
arpl
loop
jl
fnsave
test
fiaddl
mov
push
push
loope
loop,pn
push
mov
mov
and
pop
dec
shrb
inc
lods
adc
and
mov
js
and
jo
xchg
and
xor
jne
ret
outsl
xor
pop
fs
or
dec
adc
daa
jecxz
add
gs
mov
into
add
sbb
jmp
or
call
icebp
mov
dec
pop
or
xchg
inc
sbb
mov
sti
xchg
xlat
insl
add
xor
orb
addr16
iret
outsb
in
jno
out
data16
popa
sbb
mov
sbb
push
idivb
negl
mov
push
mov
xchg
mov
addr16
mov
aad
in
push
cmpl
adc
dec
adc
js
pop
dec
out
inc
pop
or
scas
jbe
in
imul
push
mov
add
add
fsub
notb
add
aaa
xor
xlat
adc
nop
scas
pop
mov
popaw
nop
fstl
mov
fcmovnu
lods
jecxz
adcb
inc
adc
aas
pop
adc
push
leave
adc
aad
xchg
sub
jecxz
xchg
ljmp
repnz
push
mov
loope
xor
fs
mov
lcall
in
cmp
mov
jae
jge
xchg
pop
jle
mov
pushf
adc
push
mov
mov
scas
sub
cmovo
in
les
or
imul
pop
xor
jae
cwtl
out
jmp
es
bound
mov
sub
imul
lahf
xchg
loopne
or
nop
mov
push
jge
adcb
sbb
lods
repz
fabs
fwait
cmp
cltd
dec
loopne
dec
repz
cmp
cltd
push
mov
add
js
cld
popa
xchg
sbb
sbb
shrl
mov
cmc
push
call
jbe
cmp
fs
mov
loopne
jns
sbb
xchg
fimuls
scas
imul
mov
stc
stos
mov
push
iret
pusha
sti
cmp
data16
lods
fucomi
data16
push
je
cmp
stc
mov
pop
or
popa
cmp
mov
adcl
popf
sub
push
loop
fs
ret
add
add
popf
xchg
cli
mov
outsb
add
popl
cwtl
mov
shlb
fimuls
xor
fcoms
mov
divb
mov
push
xor
mov
push
mov
fldenv
adc
nop
rcl
pusha
mov
inc
outsb
mov
dec
lret
insl
into
nop
pop
and
jecxz
addb
xor
xchg
inc
mov
into
mov
out
mov
inc
jo
pop
sbbb
ror
mov
sbb
shll
call
shlb
or
dec
inc
jnp
inc
mov
and
bound
shl
mov
dec
jae
mov
out
jne
out
add
dec
xchg
es
outsb
movlps
int3
adc
iret
jne
lret
addl
in
imul
dec
out
mov
clc
test
sbb
insl
sbb
push
sub
mov
pushf
dec
xchg
movsl
gs
mov
in
and
and
push
cltd
mov
and
fcmovnu
outsl
inc
vandnps
rclb
pop
cmp
sub
pushf
sahf
stos
nop
sub
push
in
lret
inc
or
cmp
xlat
add
adc
sbb
arpl
loope
and
rclb
mov
push
shlb
jnp
fisubl
loop
sub
sub
pop
dec
or
stos
xchg
sub
push
cmpsb
int
insl
les
xchg
pop
loope
sbb
movsl
and
pusha
insb
jno
pop
das
sub
xchg
jnp
lret
test
dec
add
and
mov
mov
fnstenv
enter
jbe
xor
xchg
jp
xor
dec
xchg
lds
inc
cmpsb
push
sub
mov
imulb
aad
sbb
sub
mov
inc
out
arpl
sbb
push
or
pop
adc
xchg
out
pop
insb
ds
incb
sbb
xor
pop
sbb
outsb
call
jnp
xor
xor
jno
iret
roll
sarb
pop
sbbb
popf
inc
lock
lods
das
icebp
push
ret
idivb
ljmp
mov
mov
adc
cmp
mov
adc
imul
sti
shll
lods
dec
adc
jbe
or
rorb
mov
and
mov
repz
push
in
and
or
outsl
imul
stos
sub
out
pop
cmc
cmp
xor
mov
sub
bswap
sbb
fcomi
fsubl
test
xchg
sub
cmpsl
mov
insb
mov
mov
loope
inc
ja
mov
inc
cmp
pop
push
or
xchg
test
adc
cmp
cli
and
push
sarb
pop
mov
je
and
ret
sub
mov
aaa
adc
fnstcw
pop
add
mov
mov
scas
arpl
movsb
cld
movhps
dec
pop
pop
or
push
mov
test
mov
lods
les
adc
loop
cmp
aad
call
dec
jp
xchg
aad
icebp
out
stos
push
mov
movsl
push
loope
or
inc
lret
push
jo
mov
sub
mul
dec
sahf
cmp
cmp
jmp
sbb
and
fldcw
pop
sbb
adc
mov
sub
repnz
sbb
fisubrs
pop
inc
fwait
mov
jns
adc
xchg
mov
leave
gs
mov
or
arpl
lock
cmp
inc
jb
mov
xchg
mov
push
daa
call
mov
in
out
sahf
sub
ror
fstp
divl
inc
hlt
in
mov
scas
adc
std
fucomp
lea
push
subb
aaa
loop
cmp
and
jecxz
xchg
icebp
dec
push
inc
mov
sbb
jbe
popa
adc
leave
inc
jbe
movsb
push
lret
enter
mov
sub
clc
lods
fistl
cld
repnz
call
gs
negb
lds
icebp
jns
pushl
mov
jbe
jae
stos
mov
cltd
iret
clc
xchg
push
sub
ljmp
gs
out
sahf
mov
mov
inc
into
imul
test
dec
ljmp
ss
jmp
xor
ss
jmp
jl
adc
mov
movsl
loope
test
insl
and
fucomp
push
sahf
out
add
fstpt
daa
adc
dec
sub
bound
mov
or
sbb
sbb
xlat
pop
insb
in
rcr
insl
js
sahf
test
mov
movsl
push
and
mov
mov
imul
cwtl
stos
ret
xorl
in
push
dec
jnp
cmp
inc
in
push
nop
jne
and
int3
pusha
sub
mov
inc
test
or
jae
mov
pop
jecxz
nop
sub
dec
push
movsl
xchg
push
test
into
sub
rcrl
jae
adc
push
and
lss
cmp
sbb
push
fwait
add
je
jmp
pop
dec
adc
or
adc
test
adcb
jmp
mov
cmp
bound
jno
enter
lcall
add
mov
xlat
repnz
cltd
adcb
sub
fwait
xchg
fwait
and
lds
int3
lods
loop
and
cltd
test
mov
pop
ja
sub
xchg
lea
mov
jae,pn
dec
sbb
out
dec
push
mov
pop
sub
in
jnp
lret
add
pop
and
jl
cmp
pop
jmp
mov
iret
int
mov
lods
fnclex
arpl
loope
jge
xchg
icebp
or
ja
rcrl
inc
loopne
add
or
call
jmp
fstpt
insb
arpl
dec
xchg
mov
xor
mov
lcall
push
movsl
mov
mov
fisttpll
enter
insb
sub
int3
jp
dec
xchg
mov
notb
sub
jae
out
inc
xor
ja
mov
jno
sbb
mov
popa
iret
inc
int3
fildl
jnp
call
movsb
and
shrl
sub
cmpsb
movsl
dec
and
pop
jno
jge
fdivrs
das
sbb
sbb
leave
push
ss
push
pop
sbb
loop
sbb
std
and
loopne
cmpsb
lret
hlt
lea
js
jle
in
stos
mov
xor
push
gs
push
pminub
int
test
jp
fs
orb
cld
mov
out
sub
outsb
cltd
dec
in
lds
addb
daa
test
call
lcall
inc
std
lcall
push
mov
outsl
mov
ja
pusha
ss
sbb
inc
je
push
cld
lods
xchg
ds
cmp
bound
sub
test
adc
cmp
mov
add
jae
push
sub
xorl
sbbl
add
psubq
adc
icebp
in
arpl
xchg
fcmovnbe
fadds
xor
pop
outsb
cmp
and
mov
cmpsb
pushf
fcoms
dec
adc
cmpsl
rclb
push
popf
lahf
lods
leave
jg
mov
es
jno
dec
shlb
jle
pop
jo
pushf
lods
mov
fstps
dec
mov
test
pop
dec
fwait
sti
movsb
lcall
push
repnz
or
popf
push
fcmovne
and
xchg
or
popa
jns
shrl
sbb
inc
or
and
out
test
lods
or
xorb
pop
std
xchg
outsb
lea
jno
inc
xor
xchg
lods
addr16
pop
ret
fsubs
addr16
aad
fmull
pop
bound
add
pop
jo
std
cltd
ljmp
std
jbe
stos
push
inc
cmc
jb
xchg
std
inc
jb
jmp
adc
scas
cmp
push
rcll
stos
mov
lods
dec
sbb
mov
andb
dec
xchg
cmc
mov
or
test
sub
sbb
cwtl
lods
xchg
popl
call
test
mov
sub
popa
xchg
jecxz
xor
sub
jle
xor
mov
add
negb
icebp
das
or
loop
mov
imul
in
hlt
les
mov
jno
ret
xchg
leave
outsb
mov
mov
lahf
push
jbe
jb
sbb
fidivrl
add
movsl
les
loope
mov
sahf
adc
push
xor
cli
jne
dec
xor
inc
cld
pop
mulb
xchg
test
lock
mov
stos
test
mov
adc
and
mov
loop
mov
push
pop
into
jmp
mov
imul
in
aad
cmp
mov
jns
iret
daa
jg
mov
aaa
mov
rcl
pop
sbb
fbld
stos
dec
mov
fwait
xor
push
rclb
push
scas
jle
xor
orb
sub
push
xorl
mov
mov
xor
cmp
mov
xchg
iret
out
or
addl
adc
push
je
mov
js
sbb
sbb
cmpsl
xchg
inc
cmpb
cwtl
fidivl
mov
add
pop
aad
lds
pop
sbb
or
aam
int
sub
test
dec
out
dec
ds
push
movsl
push
test
lcall
ficompl
cmp
pop
in
repz
int3
enter
xor
fwait
sbb
in
push
shll
sbb
test
into
mov
rcrl
and
clc
xchg
sub
in
pop
dec
in
cld
es
test
mull
and
ret
jmp
insb
addr16
dec
sub
insb
sbb
jo
push
dec
pop
lahf
orl
adc
int3
inc
sub
int
inc
xor
mov
jbe
filds
jae
inc
test
sub
out
mov
sbb
fldcw
int3
mov
scas
jp
mov
pop
imul
das
push
je
aam
stos
xchg
pop
cmp
inc
mov
push
shr
sbb
add
sbb
rcl
out
mov
adc
sbb
ljmp
mov
mov
xor
jne
sub
mov
dec
stc
jo
inc
insl
lret
adc
into
bound
mov
or
shrl
fistps
sub
or
les
xchg
push
xor
call
pushf
cmp
jl
jnp
cli
mov
cmp
rclb
mov
jo
movsb
xchg
int
xor
aad
pop
mov
out
test
fwait
test
gs
sbb
div
xor
lea
in
fsub
mov
jge
popf
das
std
cmp
lock
push
inc
pop
mov
add
mov
stc
imul
xchg
jge
mov
mov
mov
call
mov
mov
dec
jl
repz
sbb
mov
lret
test
pop
clc
cmpsb
and
repnz
std
lods
xchg
imul
repnz
mov
sbb
mov
movsl
in
xchg
mov
ror
push
imul
sub
adc
cli
into
insl
fadd
jbe
outsl
cmp
movsb
mov
cmp
mov
les
push
outsl
push
mov
push
je
lods
pop
push
out
bound
jns
xor
ja
cmp
pop
sub
cmp
push
jmp
cmp
mov
inc
ljmp
pop
lds
int3
cmc
rolb
lock
and
int
xchg
icebp
ds
dec
cmpsl
iret
push
pushf
push
dec
out
cmpb
jae
mov
jb
insl
imul
mov
cmpsb
subb
or
and
arpl
rcrl
sbb
push
lret
cmc
cmp
dec
inc
faddl
pop
inc
fsubl
fs
stos
sbb
lret
cs
insl
cltd
xchg
leave
inc
imul
sbb
push
fcmovnu
pop
stos
push
stos
push
add
or
push
and
cs
icebp
xor
sub
add
jnp
cmp
mov
pop
push
gs
bnd
out
and
xchg
pop
mov
sbb
outsb
inc
sbb
dec
cwtl
mov
adc
sbb
xchg
mov
lods
mov
sbb
mov
jno
inc
roll
adc
mov
mov
dec
mov
mov
add
jecxz
sbb
cld
fisttps
cmpsl
mov
xor
stos
cwtl
pushf
cmp
mov
das
mov
mov
sub
sti
fdivrl
ja
popa
jl
and
jp
sahf
push
xlat
jno
mov
jle
insb
jbe
jnp
mov
lea
icebp
jle
pop
jp
xor
mov
cmc
arpl
xor
dec
fldenv
gs
add
xor
shlb
in
cmp
jno
xchg
pushf
ljmp
pop
xchg
inc
lods
xchg
leave
mov
into
sbb
js
rcrl
stos
adc
lock
or
test
mov
lock
in
or
add
loop
or
sub
xor
and
mul
movsb
in
dec
add
add
and
cltd
mov
dec
fisubs
sbb
mov
inc
adc
aad
push
xchg
pusha
repnz
bnd
sbb
push
adc
push
mov
sub
cmc
jae
jns
push
andb
fldl
sbb
xchg
mov
rorl
xorb
mov
xchg
add
sbb
pop
into
insb
dec
pushf
pop
out
loop
inc
shlb
dec
cwtl
ret
lahf
mov
aam
pop
jnp
inc
ljmp
or
sbb
cmp
push
into
or
fildll
jge
lahf
inc
xor
in
or
push
repnz
sbb
cmpsl
cmpsb
sbb
sahf
pop
lods
mov
daa
insl
jl
pusha
aaa
lahf
or
lret
jg
movsl
jmp
fdivr
jae
sbb
pop
xchg
xor
xor
sub
xchg
push
adc
mov
notl
repnz
popa
jns
mov
clc
lock
add
xlat
out
cld
in
dec
shrl
pusha
xor
scas
mov
mov
mov
lea
mov
scas
or
mov
ss
icebp
subl
pop
or
lock
push
mov
adc
iret
nop
jle
fstps
in
cmp
clc
sbb
faddl
adc
push
xorl
mov
and
xor
into
push
shrb
adc
sub
out
movb
cmpsl
cs
scas
cwtl
inc
scas
pop
out
cmp
jne
movsl
pushf
pop
add
xor
les
imul
idivb
mov
ret
iret
sub
jbe
daa
xchg
or
sub
les
je
lahf
mov
mov
xor
nop
daa
popa
cwtl
jge
outsl
push
mov
xor
cmp
scas
andb
insl
xor
mov
pop
and
inc
dec
and
orl
cmpsl
cmpl
test
mov
sub
cmp
lods
insl
aaa
pop
gs
and
sub
outsb
or
mov
push
nop
sub
push
mov
shrl
scas
dec
fildll
ds
cmc
jno
and
cmp
dec
or
jns
or
dec
leave
mov
mov
add
xchg
pop
cwtl
adc
into
or
outsl
pusha
ja
sub
divl
mov
fstpt
xor
mov
pop
cld
sbbl
outsl
insl
aaa
jmp
cmp
push
cmpsb
hlt
ret
push
out
in
xlat
xor
mov
jns
mov
jg
mov
imul
int
sbb
mov
aas
repz
scas
and
mov
jecxz
jg
shlb
adc
inc
mov
fsubs
mulb
xor
pop
mov
stos
imul
xchg
dec
out
push
mov
bound
fcmovbe
popf
xchg
mov
movl
sbb
push
cld
pop
cmpsl
or
aaa
pop
loope
pop
inc
mov
pop
popf
mov
dec
mov
shrl
xorl
outsl
scas
imul
adc
add
pop
inc
in
in
xlat
jp
xchg
outsl
jae
cmp
inc
inc
aad
mov
push
mov
cmpl
test
call
cltd
cwtl
mulb
mov
loop
test
mov
into
xchg
cmp
ret
pop
xchg
push
push
add
mov
jp
dec
push
inc
xor
stos
call
dec
xor
xchg
xor
mov
sub
loope
aam
inc
arpl
dec
or
pusha
dec
sub
pop
call
stos
inc
xlat
outsb
scas
jns
loope
les
mov
pop
xchg
cmpsl
jb
and
negb
cmpsb
clc
fistpl
arpl
aas
cmp
movsb
and
push
sbb
sbb
jecxz
jne
inc
push
pop
sbb
cwtl
adc
lret
outsb
pop
inc
out
push
mov
add
xor
dec
cmp
cltd
subb
xchg
sbb
cmpsb
inc
dec
jo
jp
sub
das
jb
lret
xchg
js
jns
imull
mov
loope
std
addb
jns
lret
imul
push
les
mov
pop
mov
iret
pop
mov
insb
mov
ret
out
aam
hlt
xchg
add
dec
hlt
push
xlat
je
test
sbbb
jo
ret
fidivrl
orb
inc
ss
add
repz
inc
sbb
inc
xor
sarb
mov
mov
pop
lahf
cmp
pushf
fidivl
xchg
sub
mov
addl
stc
fdivrl
add
mov
jp
inc
mov
xor
cld
std
shll
mov
jae
lcall
sbb
fucomi
mov
cmc
and
pop
cmp
dec
cmp
xchg
xchg
dec
stc
mov
adc
jns
fs
cs
or
movsl
and
and
rorb
inc
pop
cmp
push
stos
mov
add
sahf
cmp
push
cwtl
pop
subl
jmp
negb
pop
jns
xchg
mov
fsubs
popa
jne
adc
imul
sbb
es
adcb
sub
sbb
clc
ret
xlat
mov
adc
jp
or
cmp
mov
mov
lret
push
and
or
sbb
lret
lds
arpl
push
outsl
jo
jno
sub
jno
push
xor
fidivrl
js
popa
cmp
lods
insb
or
into
loopne
cli
mov
mov
xor
or
mov
mov
mov
mov
aad
sbb
jnp
pushf
mov
leave
sbb
cmp
outsb
sbb
pop
std
jnp
push
dec
popa
and
pop
add
es
jne
xor
std
mov
repz
mov
adc
xchg
cmp
mov
cmp
incb
push
sub
setge
sbb
and
sub
icebp
xchg
fdivr
mov
pop
add
push
sub
mov
cmp
repz
enter
mov
ds
std
sbb
aam
mov
insb
lahf
or
dec
jmp
das
adc
pop
dec
mov
fs
movsb
out
aas
lods
add
mov
aad
inc
aas
cmpsl
inc
clc
mov
lahf
das
hlt
sub
adc
mov
sarl
push
pusha
jge
int
icebp
stos
sarb
jnp
dec
or
inc
iret
movsl
push
out
enter
nop
pop
push
pop
test
test
fs
mov
or
xchg
mov
in
or
xor
int
stos
nop
orl
mov
push
es
and
mov
std
movsl
aam
pop
inc
enter
movsw
dec
leave
pop
jno
xchg
inc
cmc
or
mov
into
mov
inc
mov
int
hlt
mov
sbb
pcmpeqd
or
into
fcomip
mov
adc
mov
mov
in
scas
js
pop
lds
hlt
cld
pop
mov
push
in
jmp
pop
or
jbe
mov
ret
adc
xor
imul
or
adc
or
movsb
xor
inc
jmp
adc
insl
lock
ljmp
in
pop
and
inc
jle
rolb
cltd
out
xor
scas
jmp
inc
ds
and
je
call
cmp
imul
test
pop
cwtl
insb
lret
lods
mov
and
fsubrl
xchg
inc
inc
ss
adc
insl
std
dec
aam
std
fistps
and
int
mov
shl
mov
mov
jo
loop
mov
mov
bound
mov
sbb
popf
inc
push
push
cld
dec
push
popa
xchg
pop
mov
adc
andb
lret
dec
push
cld
lret
mov
call
mov
adc
faddp
testb
or
cltd
sahf
jle
or
and
jmp
push
jae
loope
push
pop
inc
add
jle
dec
daa
mov
into
mov
scas
inc
pop
cmpsb
xchg
pusha
xchg
lret
movsl
hlt
je
loope
inc
div
mov
cmpl
lret
movsl
das
mov
push
xor
jl
loop
fsub
xorl
outsl
rcrb
aam
dec
and
pop
dec
jae
mov
or
mov
xor
or
rcl
sbb
cmpsb
mov
fs
mov
idiv
scas
sub
pusha
pop
xchg
xchg
test
cmpl
xor
out
cmp
scas
je
out
imul
das
fldenv
jl
xor
xor
jae
das
pop
mov
xlat
scas
dec
int3
or
pop
repnz
aas
and
push
in
xchg
dec
mov
movsb
sub
out
lods
cmpsl
mov
int
xorb
inc
imul
xor
loopne
cld
jbe
sub
push
push
sub
inc
sbb
xor
out
mov
test
das
pushf
and
cld
xchg
or
dec
psrlw
mov
fistpll
cmp
dec
loop
stos
sbb
lret
xchg
mov
outsb
lret
lock
mov
in
dec
jo
dec
xor
mov
fistl
testb
dec
into
dec
push
push
and
imul
test
ljmp
in
fsubs
mov
imul
mov
dec
adc
repz
stc
in
arpl
popf
mov
stos
push
add
clc
pop
sbb
test
push
jbe
jns
sahf
jmp
fwait
ret
inc
or
inc
xor
cltd
data16
xchg
pop
lods
les
lods
cmp
mov
inc
jnp
xchg
xchg
js
dec
pop
mov
or
xor
dec
jno
adc
jno
testb
enter
cs
cmp
fisttps
lahf
fdivr
sbb
leave
pushf
sub
arpl
scas
aad
cmp
mov
ror
mov
int3
inc
lcall
ja
push
jmp
cltd
imul
fadds
xchg
jno
stos
jge
lret
cmp
and
pop
pop
sbb
shll
and
popa
js
sub
js
add
shll
mov
sti
xor
sti
cld
insb
xchg
jp
lock
push
mov
inc
enter
sarl
into
add
mov
mov
out
insb
movsb
lock
sbb
jns
sahf
sbb
or
mov
aas
jbe
mov
adc
mov
nop
scas
push
imul
lds
push
jo
stc
jle
loopne
stos
orb
cltd
sbb
pop
push
mov
jbe
nop
pop
adc
sti
jbe
and
mov
jno
push
push
mov
inc
shrb
adc
adc
mov
imul
dec
paddw
in
xchg
lods
jno
cltd
pop
pop
hlt
pop
adc
dec
scas
push
inc
lea
mov
subl
pop
dec
cmc
out
sbb
hlt
pop
push
sbbb
jg
xchg
sbb
pop
or
push
insl
jno
xor
cmpsl
cmpsb
rcll
cmp
mov
add
xchg
pop
lret
shlb
icebp
std
cld
out
xchg
or
jg
mov
cmpsb
fldcw
pop
push
lods
mov
xchg
cmp
int
mov
outsb
mov
jb
push
sbb
mov
mov
mov
stc
jnp
enter
mov
push
xchg
movsl
mov
fdivrl
dec
popf
adc
repz
inc
daa
mov
xorl
fcoms
jne
and
outsl
add
test
leave
in
es
dec
push
lret
pusha
mov
ljmp
clc
dec
scas
nop
adc
rcrb
icebp
xchg
insb
mov
fdivs
add
xor
test
sbb
gs
jg
xor
cld
xchg
jle
mov
mov
dec
sahf
adc
dec
push
leave
xchg
cmpb
push
daa
sahf
fcmovnb
leave
jb
int
mov
xchg
cmp
scas
adc
in
xor
ljmp
imul
push
aas
cmp
in
push
out
xchg
sti
mov
mov
stos
sub
adcb
es
jne
addb
inc
xor
cs
cmp
sbb
xchg
or
mov
sub
lds
xchg
ds
mov
cmp
andl
jno
fwait
pusha
mov
sub
rorl
frstor
lcall
add
cmp
and
jmp
fimuls
sbb
into
fdivp
or
xchg
push
jmp
mulb
dec
mov
repz
in
pop
mov
xor
aam
lcall
inc
pop
mov
jge
xor
jmp
js
daa
push
mov
pop
jg
pop
add
cmp
mov
mov
mov
shrb
cmp
clc
mov
adc
cltd
das
arpl
inc
adc
into
sbbl
hlt
sbb
xchg
bound
dec
xchg
repz
daa
out
mov
data16
ficomps
popa
pushf
jnp
lahf
mov
roll
icebp
in
stos
cmp
imulb
fcomps
adc
mov
mov
or
push
jp
lahf
mov
sub
ffreep
loopne
sub
gs
xchg
mov
push
dec
movsl
shll
das
mov
xchg
pop
ret
rolb
clc
sti
mov
xchg
xor
push
push
fidivl
nop
pop
fsts
push
call
xchg
xor
outsb
popf
sbb
xchg
jns
addr16
sub
cmc
rorl
insl
jmp
add
push
fdiv
fsubrl
and
jno
in
sbb
imul
mov
jmp
leave
push
fiadds
mov
inc
sub
push
test
sbb
inc
mov
sub
cmpl
cli
adc
mov
repz
xlat
add
arpl
jb
cmc
ret
lock
insl
pop
dec
sbb
jmp
adc
int
lahf
rcr
loop
nop
mov
popf
fstpt
mov
sub
cmpsb
jno
inc
push
jg
ljmp
and
vexp2pd
mov
popa
scas
loop
call
jne
xor
lret
sti
push
js
filds
out
add
jne
inc
push
ljmp
adcb
adc
fnsave
xchg
cmp
dec
sbb
pop
xchg
push
or
ja
inc
xchg
add
cmpsl
mov
xchg
nop
pushf
add
out
outsb
push
iret
jmp
jae
outsl
jp
shll
cld
out
push
mov
adcl
loop
fnstcw
xor
xor
inc
xor
addr16
or
and
shl
cmpsl
adc
pusha
pop
testl
jg
icebp
dec
into
cwtl
gs
std
sub
xor
cmp
out
aaa
lahf
aas
into
add
adc
cmpsl
call
dec
sub
mov
cmp
mov
aam
scas
xlat
test
testb
nop
mov
pop
push
add
jns
out
jp
sbb
sbb
pop
inc
mov
imul
sub
sub
push
test
lds
pop
call
inc
xorb
loop
testl
adc
popf
bound
cmp
testl
cmp
mov
les
je
and
pusha
sub
lret
xchg
sarb
leave
and
loopne
pop
in
mov
mov
outsl
mov
lods
xlat
mov
push
and
mov
imul
mov
cs
mov
in
out
in
shlb
jle
xchg
insb
lcall
frstor
cmpl
mov
jg
jl
jb
popf
cmp
pop
mov
xchg
sbb
sub
bound
jbe
push
lods
adc
push
jnp
sub
repz
add
add
lea
cwtl
dec
mov
test
ljmp
in
push
mov
inc
rcrb
jmp
push
add
shrl
mov
mov
push
mov
stc
push
aad
fistl
lret
scas
ja
orl
push
repnz
nop
stos
cmpb
das
and
aaa
loop
imul
jmp
add
out
sbb
jb
test
jo
sbb
ror
jmp
mov
loopne
test
in
xchg
push
mov
mov
loopne
insb
mov
movsl
clc
dec
out
aam
xchg
fsubrl
and
xchg
jle
rcrb
xchg
xchg
mov
jo
sarb
jne
dec
or
pop
lock
inc
pop
rclb
xchg
ror
imul
aas
jl
and
rorb
es
aas
out
jbe
test
jae
inc
nop
imul
and
call
je
mov
out
pop
imul
iret
mov
cmovnp
ljmp
in
xor
scas
sahf
lret
add
add
daa
jo
outsb
out
into
sbb
and
xchg
cltd
nop
int
xchg
xchg
pop
test
inc
int
fmuls
stos
clc
pop
icebp
inc
pushl
adc
xchg
or
pop
fstps
adc
idiv
inc
call
in
jae
leave
sbb
outsl
xor
adc
call
ret
shlb
addr16
shlb
in
xchg
nop
inc
xor
daa
dec
mov
pop
out
dec
mov
inc
inc
ret
in
test
test
jl
pop
jmp
push
loopne
mov
or
xor
adc
sbb
dec
dec
js
iret
jnp
fs
data16
inc
sbb
lods
mov
ds
dec
fisttps
or
iret
push
jge
ret
rol
or
adcl
outsb
mov
sbb
dec
push
pushf
jns
les
jl
xor
push
xor
int
jae
mov
rclb
adc
jle
jbe
clc
sub
or
or
adc
std
xor
dec
cmp
pop
movsl
fmul
ss
mov
mov
decb
push
adc
fisubs
sbb
sbbl
ret
and
adc
out
arpl
xor
jg
add
mov
sub
mov
cld
stos
sti
xchg
pop
mov
cmp
pop
mov
clc
dec
aas
sti
jl
loop
jae
jmp
fbstp
push
cli
int3
cmpsb
pop
aas
testb
incl
mov
mov
adc
push
jmp
outsl
std
adcb
sub
pushf
pop
pop
fcmovu
mov
mov
jno
test
loopne
bound
leave
aaa
pop
jg
or
mov
scas
test
test
imul
outsl
and
pop
cmp
cmp
pop
inc
adc
test
lods
and
pop
or
xchg
mov
push
cmp
ret
cmc
ret
jno
push
jp
inc
inc
movups
lock
in
lods
sub
add
jbe
cltd
lock
push
ljmp
mov
inc
shlb
jp
imul
in
xor
dec
jns
adc
ljmp
mov
fadd
mov
frstor
dec
leave
enter
sub
insb
pop
pop
sbb
clc
fwait
xor
in
scas
add
pop
shl
shll
fdivl
cmp
flds
inc
sahf
fwait
mov
mov
je
je
movsl
loop
ja
xchg
xchg
mov
cmp
adc
and
or
jno
jnp
sbb
das
mov
loopne,pt
lahf
into
rcrl
xor
sarb
dec
jno
int3
lea
jmp
pop
shrl
or
enter
mov
mov
add
adc
scas
pop
out
sub
sub
repnz
stos
pop
sti
rorb
movsl
in
mov
repz
push
stc
mov
ja
mov
push
sti
out
mov
mov
add
sbb
lods
add
xchg
bnd
push
cmp
les
insb
rcrb
pop
mov
jecxz
cmp
inc
jmp
pop
mov
jo
dec
push
lds
xchg
pop
dec
xchg
jb
cs
jb
ret
adc
sbb
stc
daa
inc
js
mov
push
jg
out
std
inc
mov
xchg
mov
xlat
mov
insl
loopne
mov
out
call
sub
sbb
out
int
mov
sahf
push
and
adc
lahf
add
gs
push
sbb
rcll
div
push
inc
int
or
jp
or
cmp
sub
xor
call
popf
testb
shrb
sbb
inc
fstpl
imul
repz
or
inc
sbb
shrl
and
dec
rcrb
jne
and
sub
inc
aad
push
lret
es
push
push
shlb
dec
lock
cwtl
dec
pop
mov
inc
loop
pop
mov
sub
les
xchg
mov
sub
pop
mov
lock
pop
jns
pop
jno
jb
pop
cs
int3
pop
and
aad
add
pop
sub
mov
or
cmp
pop
stc
xor
lods
sub
sub
cmp
andl
and
xchg
std
push
or
push
push
mov
or
sarl
movsb
pop
rcrb
pop
out
lahf
inc
mov
hlt
fnstcw
lahf
cmp
ljmp
jno
sbb
and
popl
or
js
repz
lea
pop
mov
adc
dec
push
icebp
mov
aas
iret
cmp
push
pop
inc
test
push
and
xchg
shll
inc
data16
sbb
lea
adc
mov
jns
cmp
test
and
jns
pushl
cli
lds
iret
sub
sub
or
scas
jecxz
stos
mov
jp
mov
shrl
loope
subb
fpatan
and
cmpsl
cld
rorl
push
scas
jne
mov
push
ret
adc
out
rcl
cmp
cmp
scas
in
mov
and
clc
popa
sub
adc
lds
xchg
mov
out
add
pop
mov
addr16
inc
repnz
fcmovnbe
iret
outsl
iretw
fwait
pop
and
test
mov
jo
pop
jb
fwait
cmp
adc
mov
xor
mov
aam
inc
adc
sub
add
xchg
es
imul
je
mov
push
lea
addb
inc
fildll
xor
idivl
stc
repz
movsl
lret
inc
cmp
lods
movsl
add
push
dec
push
xor
inc
inc
notb
dec
loope
and
mov
cmc
pop
insb
jp
lahf
sbb
cld
das
pop
or
or
lahf
cld
js
sub
jns
push
sbb
jno
xchg
add
mov
dec
xlat
arpl
xor
stc
mov
push
inc
mov
pop
test
sbb
mov
inc
call
mov
xlat
mov
xchg
and
testb
xlat
fisttps
adc
ss
jl
int
adc
pop
pop
lcall
cmp
fcmovbe
repnz
popf
inc
imul
sahf
xorb
test
loop
xlat
lock
push
stc
cmp
clc
pop
rorb
jne
jl
cli
push
or
jmp
int
mov
ds
mov
pop
xor
repz
dec
test
xor
xlat
aaa
jno
xor
adc
mov
jns
fadds
sarb
stos
cmp
repz
and
push
aas
jne
lds
and
test
fsub
outsl
rolb
xor
push
sarl
pop
popa
dec
test
insb
add
add
fdivrl
xchg
clc
push
movsl
leave
imul
out
jne
dec
test
das
shl
xlat
add
add
mov
call
sub
dec
fisubs
clc
pop
adc
clc
jmp
sbb
cmpsl
jb
leave
movsl
cmp
and
cmp
out
cld
jmp
xchg
xor
orb
lret
inc
mov
xor
dec
loope
pop
jno
cmp
sysexit
cwtl
xor
pop
cmp
dec
inc
mov
fwait
scas
sbb
push
decb
mov
xor
out
ja
fdivrs
shl
jg
mov
xor
mov
movsb
lock
lret
jb
fdivs
lods
fsts
lret
mov
sub
cli
push
jne
cmp
stos
push
lods
test
iret
sbb
jl
jno
std
nop
cltd
lods
jmp
out
sbb
fsubrp
stc
lock
cmp
aaa
pop
mov
mov
mov
mov
jae
adc
in
mov
mov
pop
dec
jmp
fdivrs
cmp
es
cmp
xchg
fnstsw
or
xchg
jmp
dec
push
sbb
jp
lock
jp
and
clc
out
imul
or
dec
jmp
dec
mov
and
dec
rorl
pop
jbe
test
cmp
mov
movsl
and
adc
mov
sub
and
inc
lods
push
adc
mov
lods
and
push
add
int3
cmp
idiv
out
rolb
test
test
icebp
mov
fisubrs
pop
push
iret
inc
sarb
call
into
lods
pop
inc
ja
daa
pop
push
lret
ja
je
mov
gs
leave
sahf
lahf
in
xor
pextrw
cmp
mov
and
fcoml
pop
int3
insl
aad
cltd
lods
lods
and
lahf
push
sub
movsl
out
lock
jo
inc
adc
lds
call
stos
inc
xlat
shrb
test
inc
je
incl
test
dec
jne
dec
jnp
stos
mov
and
inc
pop
sbb
sub
imul
leave
mov
hlt
cmp
mov
loopne
mov
int
xchg
xor
push
std
pop
rol
pop
mov
icebp
mov
pop
jne
les
xor
mov
cmp
fisubl
xchg
add
je
cmp
icebp
arpl
jbe
repz
in
mov
out
loope
enter
or
lds
insb
ljmp
test
popa
clc
mov
inc
mov
sub
jae
mov
shl
movsb
xlat
ds
push
es
sub
dec
scas
sti
xchg
mov
dec
bound
je
mov
lea
sub
cmp
stos
inc
push
mov
lcall
shll
adcl
push
xchg
xchg
push
int3
jo
data16
jle
jecxz
movb
loopne
mov
pop
div
aam
nop
jb
push
lea
pop
mov
jb
xorb
jne
pop
fcoml
adc
loopne
dec
push
sbbb
mov
mov
or
lds
mov
and
mov
iret
lea
movsb
scas
in
clc
xor
pop
movsb
mov
out
ja
pop
jl
adc
push
mov
push
stc
cmc
mov
js
lea
push
pop
fsubp
fstpl
lcall
cmp
outsb
pop
push
sub
add
popaw
add
rorb
adc
adc
pop
lret
xor
mov
xor
inc
sub
push
jo
nop
dec
ret
out
mov
and
nop
out
xor
add
arpl
pushf
cs
adc
jne
mov
sub
test
cmpsl
mov
jecxz
mov
movl
mov
sahf
aam
inc
mov
scas
int3
shlb
js
int
sub
mov
add
das
popl
jbe
pop
imul
movsl
std
mov
fcmovnb
mov
out
inc
jno
pop
and
pop
out
sbb
xchg
cwtl
movsl
xchg
xor
sbb
ret
xchg
mull
popa
cwtl
and
ficoml
sar
mov
imul
push
pushf
xchg
mov
scas
jecxz
add
daa
push
std
jge
sub
mov
push
daa
pop
pop
sarl
jno
sub
popf
rorl
add
mov
mov
mov
icebp
xchg
cmpl
mov
hlt
lock
dec
inc
add
jecxz
mov
call
mov
movsl
dec
pop
xor
sti
rorb
repz
inc
icebp
fs
cmp
rclb
xchg
in
sbb
insl
dec
aad
ficomps
mov
or
xchg
test
lret
and
adc
xor
push
cmp
inc
test
pushf
lcall
das
repz
cmp
pop
inc
adcl
and
testl
push
fisubrl
push
in
cmp
dec
aaa
xchg
jnp
push
std
sbb
daa
ffreep
test
sub
cltd
and
inc
in
imul
or
jge
icebp
imul
lods
clc
fdivp
inc
outsl
mov
lock
outsl
lret
cli
or
in
push
jp
test
mov
or
les
lret
xor
ds
jnp
sub
xchg
inc
xor
add
cltd
sahf
cs
mov
mov
iret
stc
sbb
xor
inc
test
mov
in
test
pushf
out
mov
add
data16
test
sub
sbb
mov
repnz
inc
repz
sbb
inc
mov
xchg
push
xor
insl
cld
clc
jecxz,pt
fdivs
xchg
mov
orl
mov
test
imul
inc
inc
push
or
jecxz
cmpsb
xchg
or
icebp
mov
shr
mov
jle
push
fsub
push
push
xchg
push
mov
dec
call
sbb
pop
pop
out
bound
fmuls
adc
xchg
shlb
mov
out
adcb
ficompl
fstl
filds
add
addl
out
aam
mov
stos
aas
das
nop
jmp
jge
fwait
jno
adc
push
shlb
mov
or
pop
mov
ficompl
xchg
xlat
push
ret
xchg
sbb
in
xchg
xor
fnstsw
jae
sarb
mov
ror
mov
ret
sbbl
ret
ljmp
in
lock
addb
sub
les
flds
mov
xor
sub
fs
test
stos
mov
jecxz
stos
mov
mov
xor
mov
jg
xor
mov
dec
mov
pop
les
in
mov
ja
pop
mov
and
sbb
cli
pop
mov
test
jne
inc
fcmove
sbb
insl
push
add
cmp
inc
cmpsl
push
adc
and
xor
rcll
mov
sahf
arpl
loop
lea
lahf
push
mov
orb
mov
mov
out
fildl
mov
stc
push
push
dec
dec
sub
mov
jmp
lds
mov
cmp
in
jl
pop
repz
fwait
dec
jno
leave
pop
mov
sti
arpl
ret
xchg
out
ds
lret
frstor
mov
and
and
pop
dec
jmp
mov
les
mov
imul
cmp
mov
fs
jp
ret
aam
push
int3
sub
push
sbb
aas
push
xor
mov
rclb
into
inc
es
lret
xor
pop
bnd
mov
and
mov
loop
and
mov
xor
push
lret
ret
push
ljmp
pop
rorl
sbb
mov
or
rcrb
ficompl
sbb
add
push
sub
push
jae
xchg
cmp
lds
mov
das
lds
adc
pop
and
imul
lcall
mov
dec
outsb
jnp
lock
loop
xchg
gs
or
push
jb
push
and
lods
daa
mov
mov
pushf
cmp
xor
sbb
aaa
xor
add
dec
and
js
outsl
sbb
dec
pop
push
xchg
ljmp
pop
call
pushf
fdivrs
int3
and
fstps
into
mov
xor
inc
push
or
xchg
sti
fimull
adc
gs
rcll
fsubrl
std
pop
dec
jns
xchg
mov
sbb
mov
mov
cmp
test
sar
lods
sbbw
or
imulb
and
xchg
fdivl
iret
loope
add
push
add
push
inc
bound
xor
stos
adc
cs
in
lods
pop
das
xchg
les
imul
aad
loop
jp
in
scas
push
inc
push
lock
mov
pusha
ret
push
xchg
iret
jp
icebp
push
xchg
lret
mov
imul
jns
push
xlat
pop
dec
lcall
or
push
xchg
int
ss
mov
int3
lcall
sahf
arpl
xor
lahf
cli
and
cmpsl
ljmp
divb
popa
divl
in
or
lahf
xchg
mov
xchg
inc
jae
pop
mov
pop
push
jnp,pn
aam
dec
rorb
xchg
dec
sub
cmp
and
push
sbb
sub
lcall
mov
fwait
adc
rcll
movsb
mov
std
ret
jg
pop
sbb
popa
inc
lcall
shlb
jne
mov
xorl
dec
inc
out
push
incl
test
fsts
lea
or
lret
jnp
pusha
inc
mov
pop
push
dec
mov
mov
gs
daa
pop
xor
xor
mov
out
stc
add
push
rcr
dec
out
cmp
imul
mov
pop
push
stos
xchg
jecxz
cld
or
jmp
push
xor
sub
jbe
movsb
mov
and
xchg
push
hlt
add
leave
cmp
xchg
pop
sub
xchg
add
loop
loope
sbb
fsubrp
or
mov
test
rolb
cmp
pop
xchg
xor
mov
sbb
clc
pop
push
cmpsl
cmpsb
movsl
shrb
iret
pop
pop
cli
into
arpl
fwait
add
cmp
or
jmp
xor
inc
mov
testb
shl
incb
mov
fs
sub
clc
mov
and
dec
mov
xchg
aas
mov
pop
mov
lds
leave
mov
dec
inc
pop
push
outsb
fs
mov
ja
rorl
sub
jne
pop
enter
in
jb
loop
cltd
enter
loope
shlb
mov
pop
mov
sbb
pop
jae
pop
inc
jge
or
and
xor
outsb
dec
mov
mov
out
jge
mov
inc
fimull
jnp
mov
mov
pop
outsb
push
pop
out
xchg
inc
ljmp
and
jno
jbe
mov
add
ljmp
in
adc
call
mov
inc
pop
mov
leave
mov
inc
inc
push
ja
mov
inc
aam
or
push
insb
or
inc
dec
ds
scas
sbb
jg
inc
sub
shrb
addl
dec
sub
inc
adcb
push
add
daa
add
dec
sub
loopne
mov
and
lea
adc
iret
aaa
mov
dec
xor
imul
push
sbb
ljmp
push
mov
gs
adc
outsl
pop
aad
sub
dec
hlt
cwtl
int
test
cmp
sbb
xchg
pop
in
mov
and
in
sbb
iret
add
adc
push
cltd
cmp
stos
lds
mov
cmp
inc
xchg
push
add
ret
xchg
leave
dec
test
push
ds
jp
xchg
jl
adc
ja
in
fldt
pusha
jne
popa
jp
mov
adc
sahf
or
lods
mov
in
stos
rorb
ds
mov
push
fisubs
rorl
mov
mov
jno
daa
inc
or
cmp
cli
lock
in
push
outsl
push
sub
cld
test
cmp
pop
sub
rcr
movsb
aaa
icebp
fs
popa
sub
cmp
mov
mov
sti
lcall
sbb
outsb
fwait
fs
out
pop
sbb
andb
std
xchg
lock
mul
scas
mov
lods
mov
popf
jmp
mov
mov
aaa
ds
inc
sbb
fisttps
cmp
add
out
lret
and
mov
leave
sbb
or
dec
add
imul
adc
push
add
xor
jb
sbb
dec
xor
lds
mov
jae
cmp
mov
movsl
xchg
out
fcompl
addr16
negb
push
pop
ror
mov
test
pop
jecxz
test
insb
aam
cltd
push
push
into
add
mov
mov
lret
les
imul
xchg
dec
jle
ds
and
testl
and
xor
dec
pop
mov
jne
outsb
sbb
jns
mov
daa
push
hlt
push
pop
scas
movsl
out
cmpsb
sbb
adc
in
pop
rcr
cli
out
popf
lea
into
sub
jecxz
ret
or
xchg
mov
lahf
das
outsb
dec
std
call
gs
std
sub
movsb
cs
push
push
ret
adc
mov
iret
mov
and
add
or
nop
mov
daa
mov
fcompl
cmp
dec
push
outsb
lea
xor
mov
mov
xor
outsb
pop
mov
lcall
adc
cmp
fidivl
ss
dec
int3
adc
pop
adc
and
movsl
call
repnz
popl
xchg
out
jmp
mov
xchg
jecxz
push
mov
icebp
push
ds
push
pop
mov
cmp
cmc
arpl
or
pop
in
cmp
dec
lahf
ljmp
jl
dec
loope
daa
and
shl
rcrl
adc
jmp
or
call
pushf
lret
xor
js
pop
add
and
jl
cltd
jecxz
inc
dec
xor
mov
mov
test
sub
popf
test
lret
mov
mov
adc
adc
daa
cmc
aam
in
test
scas
jbe
mov
sti
xchg
adc
sub
hlt
cwtl
mov
dec
ror
xor
mov
add
cmp
xor
push
lea
scas
xchg
mov
insl
cmp
fdivrs
cli
cwtl
pop
out
mov
shl
xchg
dec
in
xchg
dec
add
jnp
iret
cs
cli
add
scas
sub
sahf
push
push
iret
dec
xlat
and
cld
aam
dec
jbe
add
or
or
pop
subl
sbb
das
sub
sbb
hlt
sub
inc
inc
outsb
dec
push
out
mov
nop
ss
mov
xlat
lret
xorl
push
ret
ljmp
mov
dec
pop
fsubr
xchg
pop
adc
int3
xor
mov
insl
adc
push
add
es
mov
mov
adc
and
add
dec
int3
xor
mov
ret
mov
in
cmp
popf
add
and
push
pop
xor
cli
pop
sub
pop
dec
mov
and
add
cmpsb
cli
push
pop
add
push
mov
push
dec
stos
jnp
or
mov
dec
mov
push
enter
cltd
xchg
inc
cwtl
sbb
adc
fistpll
jecxz
xchg
in
or
bound
icebp
cmpb
test
mov
sbb
sbb
rorl
sbb
int3
jmp
ljmp
je
in
loop
arpl
cs
mov
test
jne
or
add
lods
cmpsl
cs
jns
testb
aad
adc
jg
xor
jg
std
sbbl
rsm
xchg
mov
outsl
pop
lock
gs
add
push
cmp
xchg
or
movsb
insl
inc
scas
pop
sub
sbb
pusha
or
mov
xchg
daa
fwait
and
sub
mov
jno
xchg
out
and
out
ficompl
adc
out
loopne
pop
push
mov
pop
mov
orl
and
and
xchg
cmp
or
leave
iret
fistpll
sub
insb
test
and
rcrb
outsb
sbb
and
loop
fldenv
push
orw
pop
xchg
adc
mov
mov
test
push
or
jp
ja
push
sbb
xchg
jae
inc
sbb
js
ret
int
push
mov
cmp
jp
inc
js
mov
repnz
scas
lret
jg
sub
pop
xchg
fistl
mov
and
andb
pushf
xchg
cmp
test
jne
mov
inc
mov
das
inc
mov
enter
sub
fldl
popf
jle
dec
ret
sti
leave
lret
cmp
std
std
mov
xor
clc
cli
inc
jae
and
pushw
testb
pop
jge
xchg
and
inc
pop
jbe
outsl
cli
mov
pop
dec
mov
fadd
add
psrld
push
aam
pop
xchg
loopne
lret
cltd
stos
mov
xlat
adc
jns
mov
pop
jmp
dec
mov
out
jnp
mov
pop
mov
cs
ljmp
stc
jae
mov
push
cmp
push
pop
out
sbb
adc
or
sbb
jne
shrl
fnstenv
popa
aad
clc
mov
sbb
push
je
mov
xchg
push
sub
sarl
or
gs
int
andps
test
int
or
movsb
cmp
data16
fistps
loop
jb
jb
mov
dec
pop
sub
sarb
mov
std
cmp
sub
fcompl
mov
shrl
int
cmp
xor
cmp
daa
fstl
cld
mull
cld
jp
cmpsl
or
fwait
imul
shll
cmp
inc
gs
lods
mov
xor
jae
push
adc
cmp
dec
inc
xchg
sub
xor
aas
push
xor
cmp
xlat
sbb
xor
jge
in
push
pop
imul
cmc
test
xorb
sbb
test
in
into
cmpsb
bnd
sarl
mov
add
xor
fwait
push
jecxz
dec
ja
jecxz
mov
mov
sti
jle
xchg
xor
andl
add
inc
mov
ss
arpl
fnstenv
nop
outsb
arpl
insb
mov
push
hlt
sbb
mov
adc
mov
push
incb
mov
mov
sub
lods
jns
pop
mov
dec
sub
push
dec
pop
mov
push
in
aaa
in
or
fisttpl
pcmpgtd
mov
scas
pop
mov
xor
pop
cld
push
adc
adc
imulb
test
xchg
pop
fdivl
jns
mov
pushf
ljmp
cmp
inc
push
mov
xchg
cs
xchg
xchg
outsl
clc
lds
nop
cli
xchg
or
jg
sub
les
pop
xor
sbb
cmp
loope
scas
and
push
mov
aas
and
inc
dec
enter
sub
popa
ja
jmp
fnsave
mov
inc
js
enter
mov
pushf
push
hlt
xor
push
cmpsl
mov
out
test
pushf
xchg
shl
outsl
fdivl
loope
jecxz
dec
xor
repnz
cwtl
xchg
popa
stos
fwait
sbb
enter
in
pop
cli
popa
sbb
add
sub
test
xchg
iret
sub
pop
lock
sbb
lret
cmp
cmpsl
lods
pop
add
insb
xchg
lcall
in
jmp
jl
hlt
sub
sti
jle
scas
cmp
repz
xorl
inc
pop
in
sub
je
lods
mov
jno
add
outsl
mov
jle
ja
loope
push
int3
or
fcoml
cs
mov
repnz
push
shll
lahf
xor
je
add
xorl
notl
mov
push
jnp
xor
in
sti
jnp
dec
adc
mov
sbb
mov
insb
outsb
dec
scas
addr16
movl
testb
dec
ds
or
icebp
mov
jo
aam
icebp
mov
sarl
xor
sub
adc
sbb
addr16
addr16
mov
push
test
rcrb
int3
daa
pop
xorl
out
inc
cmp
sub
or
xchg
out
push
rcl
aam
cmp
xchg
xchg
sbb
add
rolb
and
xor
push
das
stc
pop
into
mov
mov
test
add
add
lods
leave
lcall
xor
jnp
pop
sbb
test
xchg
in
mov
sti
mov
add
dec
lahf
mov
cld
movsb
adc
in
pop
gs
stos
out
xorl
pop
lock
insb
rcll
and
pop
cs
mov
cwtl
stos
iret
cwtl
out
cmp
cmp
jbe
test
add
cwtl
incl
push
ljmp
idivb
int
sbbb
xor
push
in
push
inc
js
mov
stos
mov
into
scas
sub
rep
jl
adc
sbb
sub
es
pop
nop
and
cmpb
inc
adc
sbb
inc
decl
std
cltd
rol
adc
adc
popf
jns
sub
add
jle
aam
imul
sub
mov
pop
sub
xor
insb
aam
lcall
xor
test
in
mov
ret
je
aas
pop
daa
cmp
xchg
pop
jl
ja
daa
jl
test
sbb
clc
add
fwait
mov
inc
rol
add
gs
movsb
or
into
cmp
enter
jle
add
xorb
aas
cmp
dec
xchg
mov
bound
inc
dec
mov
loopne
sub
int3
dec
push
or
adc
pop
mov
xchg
addr16
adc
mov
ss
xchg
cmp
scas
mov
test
cmpsb
jbe
bound
mov
cmp
jecxz
and
or
and
iret
or
mov
mov
fstps
dec
mov
dec
cltd
adc
mov
pop
mov
and
pop
xor
pop
pop
enter
lahf
mov
and
mov
pushf
fcomps
insb
pop
pop
mov
and
cmp
jmp
int3
push
mov
mov
rcr
pop
push
cmp
call
int
aad
mov
sahf
scas
in
outsl
pop
mov
push
add
pop
sbb
test
jl
subb
mov
mov
push
pop
in
jl
test
push
mov
dec
push
and
adc
and
adc
lock
in
test
das
imul
cli
ret
fldl
jge
jp
jge
xchg
shrl
pushf
fucomi
mov
fsubr
ss
fwait
add
imulb
shll
dec
or
lcall
rclb
out
xor
popa
icebp
mov
sub
xchg
jae
cld
sub
pop
push
addr16
mov
sub
jns
jle
xchg
push
sub
cmp
daa
out
xor
push
mov
pop
xlat
jnp
mov
shl
push
jecxz
sbb
aad
mov
adc
pusha
fdivl
cwtl
and
xchg
jbe
pushf
js
movsl
or
cli
sub
jge
jb
add
daa
dec
sahf
cmp
xor
das
icebp
sarb
sarb
xlat
imul
cmp
cltd
push
add
push
notb
mov
xlat
gs
out
mov
insb
mov
jg
imul
push
adc
mov
fldl
lods
mov
lods
ljmp
out
fs
lcall
pop
xor
xor
outsl
fwait
sbb
xor
test
fwait
ret
jne
cmc
mov
out
ror
nop
mov
stos
push
sub
pop
cmp
inc
cmp
dec
cld
mov
or
bound
cs
es
hlt
rorb
xchg
xchg
jge
popf
aaa
nop
pop
jmp
loope
loope
daa
adc
cmp
js
scas
lods
stos
rorl
outsb
cmp
or
subl
loopne
fidivl
in
mov
xchg
stos
add
push
jo
or
push
sbb
mov
xor
enter
add
cmp
sti
and
cmp
mov
arpl
insb
dec
mov
out
arpl
insl
jmp
movb
xchg
push
push
jmp
stc
or
ljmp
sar
and
sub
shlb
or
dec
lock
insl
in
jecxz
sub
mov
inc
out
push
xor
adc
nop
pop
out
lds
and
push
mov
and
cmp
xchg
xor
pop
mov
or
pop
or
pusha
sbb
scas
jbe
lock
ljmp
arpl
out
lock
mov
lock
je
stos
pop
pushf
add
jge
in
aam
dec
mov
mov
cmp
loope
jmp
mov
movsb
mov
inc
lahf
notb
aad
push
xor
out
sbbb
sbb
in
gs
inc
jecxz
xchg
push
pop
aam
mov
cmpsl
cli
xor
cmp
mov
shrl
push
iret
stc
push
xchg
icebp
mov
add
mov
movb
out
or
pop
movsb
sbb
sahf
inc
mov
jne
push
dec
test
adc
nop
and
fbstp
lahf
lret
mov
jbe
call
jne
adc
dec
push
mov
sub
mov
fwait
repnz
mov
mov
sbb
fs
xchg
pop
mov
xor
adcl
popa
adc
jb
xor
fwait
mov
and
adc
jle
or
stos
mov
ds
add
adc
jb
test
loop
or
adc
mov
insb
sub
cmp
loop
ss
lds
imul
xor
fs
mov
fsubrl
xor
aad
loop
icebp
jnp
jns
fbld
mov
push
adc
pusha
mov
clc
push
mov
dec
addr16
and
xchg
nop
leave
and
jg
mov
jnp
rol
jo
jns
call
sub
jnp
lock
and
add
ret
dec
jb
xlat
push
mov
push
or
fdivrl
cltd
cmp
sahf
jae
mov
rcrb
ds
ret
and
rcr
addl
mov
jne
ficoml
test
ret
scas
mov
add
cmpsl
es
movsb
dec
or
mov
and
push
or
daa
and
mov
dec
idivl
push
mov
stos
push
mov
pushf
or
data16
push
adc
gs
sub
out
loop
mov
test
ljmp
and
shrl
adc
xlat
xor
data16
adc
rorl
aad
mov
cmp
mov
fnsave
imul
mov
stos
pop
fisubrs
pop
call
stos
ficomps
sub
cs
push
or
int
repz
xchg
loope
lock
mov
inc
daa
daa
stos
stos
gs
xchg
cmpsl
or
mov
fidivrs
clc
push
add
pop
test
adc
imul
mov
lret
mov
gs
inc
in
add
jnp
imull
lea
outsb
arpl
rol
stos
in
aam
bound
push
sti
mov
out
mov
imul
and
mov
cmp
push
arpl
adc
pushl
xor
adc
xchg
mov
test
std
jmp
sbb
cwtl
add
sub
add
pusha
mov
repz
or
scas
add
push
xor
je
push
jno
xor
pusha
in
pop
insb
jp
dec
jl
pop
sbb
or
dec
cmpsl
pop
xor
sahf
sub
std
xor
mov
outsl
dec
ss
inc
adc
and
jge
insb
ss
cld
dec
adc
cs
mov
sbb
dec
mov
push
mov
xchg
jp
imul
mov
mov
inc
dec
sbb
xchg
sbb
imul
lea
fdivrl
fdivr
mov
sub
test
in
pop
das
jb
jg
js,pt
into
push
xchg
jp
in
pop
cmp
push
dec
add
mov
mov
pop
xchg
hlt
and
js
jge
push
and
cs
lds
pop
mov
mov
sahf
sub
in
outsl
push
sti
jno
je
adc
dec
fldl
cli
daa
cltd
subl
pop
xor
inc
cmp
mov
aad
jp
imul
and
xchg
cli
cmp
cmpsb
dec
aad
inc
and
enter
mov
stc
repnz
ss
shrb
mov
pop
and
arpl
cmpsb
or
and
mov
mov
push
shrl
push
punpckhbw
pusha
negb
push
pop
ss
mov
sahf
mov
mov
push
add
sub
fdivs
imul
xchg
mov
es
nop
leave
dec
cmpsl
or
pop
loope
pop
mov
jmp
stos
dec
dec
or
push
adc
inc
push
mov
aas
sbb
sub
es
xor
test
pop
adc
lock
push
push
pop
sbb
das
xchg
call
pop
sbb
jns
sub
es
jo
roll
rolb
jmp
xor
in
inc
dec
xchg
and
sbb
or
xchg
sbb
mov
dec
repnz
sub
mov
cli
mov
out
mov
imulb
xor
pushf
fistps
inc
jno
das
xchg
je
sbb
movsl
in
and
cmp
inc
mov
or
cmp
jl
rolb
je
pop
inc
xlat
pop
lock
js
adc
jecxz
inc
add
push
bound
ret
mov
pop
inc
adc
lea
xchg
ja
mov
rcrl
sbb
or
sbb
mov
jge
ror
xor
into
mov
fmuls
mov
push
inc
xorl
stos
sahf
jbe
jb
mov
movsb
add
scas
adc
mov
or
push
ret
adc
mov
das
jp
pop
pop
ret
imul
mov
in
lods
mov
pop
mov
cmp
add
call
stc
add
jae
shlb
dec
ljmp
incb
rcrb
xorb
inc
dec
test
cld
popf
call
xor
sbb
data16
or
fisttpl
aas
sbb
mov
ds
pop
jbe
adc
xchg
dec
fs
cwtl
bound
add
push
cmpsl
sbb
scas
pop
sub
xor
call
sbb
or
sub
enter
xor
push
xor
or
pop
out
das
test
movl
jl
mov
mov
das
repnz
icebp
fdecstp
xchg
xchg
jo
push
push
mov
movsl
xchg
shl
mov
mov
lret
inc
dec
cmp
nop
inc
lods
xor
xchg
and
jae
jno
js
test
push
or
cmpsb
sti
and
dec
mov
or
test
sub
add
sub
icebp
cmpsl
lret
test
and
and
jl
movsl
int
arpl
xor
pop
fs
movl
dec
pop
xor
arpl
leave
push
out
scas
imul
int
das
jg
enter
int
inc
mov
dec
jle
les
lds
imul
aaa
sbb
lock
dec
or
imul
aas
mov
fistpl
cmp
jp
dec
cwtl
sub
loope
xlat
xor
lods
dec
in
cmp
push
je
sti
lret
adc
adc
adc
jge
xchg
push
push
jno
iret
hlt
mov
push
fmuls
test
xor
lret
adc
idivb
or
sub
jmp
pop
xchg
or
lea
add
lea
pop
dec
test
inc
pop
cmpsl
cmp
mov
lret
mov
mov
mov
insb
clc
fcmovnu
les
stos
pushf
adc
sub
ret
jge
dec
add
xchg
dec
or
stc
stc
and
insb
mov
loop
test
inc
mov
add
inc
test
imul
adc
push
cmpsb
xor
mov
xlat
xlat
aam
subl
sbb
fstps
call
inc
inc
sub
inc
cli
jge
bound
ds
jge
dec
xor
cmp
sarb
push
fbstp
sbb
add
cmpsb
ss
dec
mov
repz
xlat
jae
and
sub
ret
bnd
inc
mov
push
rcrl
pop
and
push
mov
test
repnz
les
sarl
int
mov
or
cmpsb
cld
mov
mov
xchg
aaa
sbb
xor
push
hlt
sahf
add
test
es
inc
repnz
leave
in
and
sbb
std
add
out
jg
cmp
fdivrp
jmp
jge
sbb
push
inc
aas
xchg
gs
cli
mov
lods
xchg
insb
xor
mov
adc
pushf
sbb
push
push
mov
mov
adc
cmp
mov
or
push
aaa
lret
mov
ja
push
dec
mov
cmc
or
hlt
pop
inc
lock
sbb
adc
movsl
mov
mov
or
jnp
pmaxub
pop
lods
mov
xor
jbe
sbb
add
popa
and
das
dec
fimuls
out
lahf
hlt
call
or
xchg
lea
imul
notl
dec
adc
mov
inc
daa
shll
dec
mov
outsb
push
sub
cmp
push
mov
mul
in
sub
xchg
fwait
icebp
jmp
fisttpl
insb
movsl
sbb
jne
pop
jae
xor
jle
aad
sub
icebp
loope
mov
push
dec
cltd
mov
sub
enter
je
daa
das
dec
imul
mov
hlt
jne
add
into
lahf
add
out
lahf
or
dec
jmp
dec
orb
ljmp
test
mov
addl
adc
fadd
jnp
stos
sub
clc
lds
adcl
push
mov
movsb
shll
lcall
xchg
imul
or
out
dec
jbe
sub
mov
jno
cmp
popf
gs
inc
xor
pop
xchg
adc
imull
pop
adc
and
fsubl
lods
add
hlt
roll
adc
adc
cmpsb
imull
sarb
je
ret
popa
jno
and
mov
test
dec
inc
xor
xor
push
test
jmp
dec
mov
sub
jmp
cmp
call
mov
mov
xchg
arpl
shll
xchg
adc
sub
dec
adc
sub
xchg
adc
inc
out
testl
inc
mov
push
jge
mov
mov
in
shlb
xor
and
je
out
pop
clc
sbb
jmp
fsubr
stos
sbb
jmp
aaa
sti
cmp
jle
ret
outsl
mov
outsb
sbb
jg
add
shll
sub
push
add
aas
push
imul
push
pop
jbe
pushf
gs
bound
lock
adc
mov
push
jecxz
push
dec
cmc
xchg
fld
adc
add
bound
dec
dec
push
addr16
jecxz
jo
fisttpll
cs
repnz
repz
movb
and
cmp
push
js
inc
int
dec
adc
in
push
arpl
sub
mov
pushf
shl
aam
cmpsl
ror
mov
ret
jge
shl
or
xchg
mov
ss
lods
lds
adc
pop
jle
lcall
sti
sub
fcoml
jo
pop
push
push
out
cmp
stos
adc
xor
adc
fildl
push
inc
mov
faddp
in
pop
sbb
fidivrl
mov
mov
push
mov
pop
lods
notl
pop
fists
jl
lock
sub
jns
cmp
mov
popa
dec
jns
flds
lock
xor
dec
mov
imul
cltd
mov
mov
xor
in
jb
gs
fstp
xchg
push
xchg
fmull
cmp
je
mov
add
push
fadds
dec
cmpsl
in
jp
mov
jl
cmpsb
adcb
pop
aad
sub
mov
dec
or
pop
xor
mov
xchg
fdivrl
ja
adc
in
dec
mul
jbe
ret
cmp
pop
lret
rorb
push
mov
ja
add
into
sbb
add
iret
aad
mov
jl
stos
mov
and
xchg
dec
movsb
xchg
xor
push
jmp
mov
ja
dec
daa
int3
cmp
sub
and
test
stc
int
cmp
cmpsl
lret
or
sbb
push
add
jb
xchg
nop
push
mov
shrb
ret
scas
fbstp
test
add
dec
rcl
and
loope
xchg
lock
out
push
push
xor
dec
call
push
fisttpl
push
pop
mov
cmc
ja
lcall
jge
add
or
pop
test
and
arpl
aaa
outsl
add
sar
mov
xlat
xchg
and
push
adc
int
sub
pop
lea
xchg
pop
mov
imul
push
imul
aad
xor
xchg
push
adc
dec
sub
movsb
and
xlat
adc
xor
int3
and
in
outsl
roll
pop
shl
or
push
xchg
mov
ja
sub
cmp
and
test
mov
sbb
pop
pop
or
divl
sbb
out
out
add
mov
fwait
divl
push
dec
aaa
mov
push
xor
mov
adc
mov
sarl
xchg
push
inc
aad
popa
mov
jae
sub
lcall
cltd
xchg
mov
ret
jbe
push
repnz
out
cmp
popf
decb
cmc
jb
cs
sub
mov
inc
adc
jne
repnz
gs
jge
insb
lcall
lfs
fcomp
push
mov
movsb
xchg
les
scas
mov
das
sub
or
mov
mov
mov
pop
and
xchg
out
fnstcw
ffree
je
mov
pusha
add
popf
and
lret
mov
cwtl
je
in
jne
sti
ljmp
inc
cmp
dec
rcrb
movb
mov
push
rcrl
xchg
jns
cmp
ret
cmpsl
cmp
es
outsl
fstpl
lods
movsl
out
pusha
xor
add
arpl
movaps
or
sarl
aam
in
pop
and
xor
scas
ja
outsl
mov
and
nop
jo
int
arpl
les
jl
pop
lahf
pusha
clc
int
inc
mov
insl
adc
imul
mov
or
dec
aad
fsubrp
in
lahf
movsl
jmp
inc
mov
cmp
movups
push
mov
pop
sbb
aas
daa
imul
mov
cmp
jle
rolb
mov
xor
cmc
bound
jne
adc
pop
add
popf
scas
cltd
rcll
imul
pop
jge
jae
add
adc
js
mov
out
es
lcall
sub
inc
ds
inc
mov
sahf
scas
push
xchg
xlat
cmpsl
dec
mull
orl
ljmp
je
inc
sub
push
and
shlb
xchg
pushf
mov
imul
ja
xor
xchg
inc
sub
aam
adc
aaa
push
in
push
cmova
faddl
dec
fucomip
push
sahf
inc
fs
cmpb
lret
pop
mov
xchg
lret
mov
xchg
push
and
xor
jl
pop
aaa
aad
mov
or
mov
dec
pop
lahf
adc
call
lods
dec
addb
jae
mov
push
data16
leave
scas
mov
pshufw
or
out
adc
repz
test
xchg
mov
mov
scas
lods
dec
fimuls
into
pop
xor
in
mov
mov
and
push
mov
loope
imul
jle
sbb
pop
mov
loop
mov
mov
dec
dec
imul
stc
jns
movb
mov
jp
insb
scas
adc
xorl
sbb
pusha
mov
addr16
sbbl
add
dec
call
adc
rcpps
push
jge
pop
mov
inc
aad
xchg
add
push
mov
lret
dec
scas
and
push
cwtl
icebp
or
test
cs
in
cwtl
sarl
cltd
add
jp
aas
mov
fwait
push
int3
and
mov
in
gs
mov
dec
inc
imulb
jb
ss
jae
int
add
sbb
out
mov
ja
inc
sub
sbb
xchg
mov
aam
adcl
shl
out
loop
push
out
sub
and
xchg
mov
in
xchg
mov
jno
push
pop
xchg
xor
aam
cmpsl
jmp
mov
mov
mov
xchg
rorl
addr16
inc
repz
mov
dec
adc
cld
cwtl
enter
mov
lods
adc
rcll
pop
inc
jo
jmp
scas
clc
je
sti
rorb
rolb
mov
or
jmp
cmpsl
push
movsb
xor
jnp
lret
insb
lret
popf
clc
cmp
push
mov
sbb
add
and
pop
aam
xchg
int
aam
xor
out
subl
dec
fstps
or
fsubrs
mov
mov
mov
sbb
jno
push
xchg
fstl
xchg
mov
bound
xor
inc
repnz
mov
out
adc
inc
pop
xchg
nop
adc
cmp
mov
lods
les
jo
pushl
enter
dec
popf
test
test
push
push
cmp
adc
dec
lret
ret
lcall
adc
loope
dec
cmpb
lds
das
cmp
cmpsl
hlt
test
pop
dec
daa
mov
mov
sahf
mov
cmp
mov
aad
mov
xchg
xchg
ret
dec
sub
cmpsl
mov
xor
scas
inc
scas
dec
leave
sbb
add
cld
dec
int
mov
push
mov
leave
mov
inc
imul
xlat
and
jne
xchg
cmp
lcall
aas
fs
movsb
ret
cmpsl
lret
stos
sahf
lret
pop
sbb
mov
adc
lahf
lret
notl
insl
pop
add
pop
and
popa
or
loopne
dec
cltd
fimull
cltd
inc
adc
mov
pop
std
movsl
xor
sbb
repnz
je
jb
pop
pop
loope
mov
add
mov
lods
in
rcll
stos
sarb
mov
or
call
xor
mov
nop
adc
inc
push
pop
jp
loop
jl
les
pop
or
lea
pop
inc
lds
outsl
cmp
call
push
and
jle
negl
cmp
add
inc
subl
push
mov
ret
cmpsl
mov
scas
pop
or
sub
ds
jmp
xor
sbb
mov
and
adc
dec
rcr
cmp
pop
jnp
fidivrs
adc
test
andb
test
sub
int
imul
adc
or
bound
stc
test
es
mov
or
mov
push
in
adc
or
cmc
dec
xchg
xor
inc
std
dec
outsb
adc
cmpl
aas
ljmp
jo
mov
test
push
cli
ss
pop
fnstsw
mov
and
es
loope
or
sub
popf
add
or
dec
jge
pop
jae
pop
adc
adc
call
add
imul
mov
cmp
aaa
test
xor
das
jae
enter
sbb
stc
jns
test
jno
adc
cmpsl
outsb
sarb
cmpsl
jae
xor
push
cwtl
fistpl
cmp
xchg
mov
addl
mov
adc
insl
loop
add
sbb
dec
lcall
mov
fwait
pop
add
ss
xchg
push
adc
and
leave
cmp
cmp
lahf
iret
icebp
jmp
xchg
xchg
fnstenv
pop
outsb
jg
cltd
into
xchg
and
les
out
inc
jb
xchg
ret
pusha
je
lods
stc
clc
push
inc
lahf
out
xchg
sbb
sub
lret
test
lock
sub
stc
cmpsb
and
jp
and
test
and
push
stos
xchg
incl
dec
addb
outsl
or
aas
mov
push
jle
push
sub
push
mov
xchg
mov
push
out
ja
mov
xchg
lods
or
push
dec
mov
sbb
sahf
clc
lahf
out
add
dec
push
out
and
push
sbb
shlb
cli
cwtl
ret
mov
insl
lea
mov
out
sbb
jmp
shl
addr16
add
stc
into
xor
dec
das
mov
push
fadds
aam
and
sbb
pushf
adc
sub
mov
add
test
sbb
push
aad
dec
add
sub
sbb
jp
sbb
test
mov
mov
popf
ss
sub
stc
aas
xor
xchg
mov
fnstsw
inc
cmp
mov
xchg
add
pop
push
cmp
sub
dec
mov
hlt
jecxz
sub
dec
push
pop
enter
incb
cmc
sti
xchg
int3
mov
hlt
inc
fwait
sbb
jle
jns
enter
les
and
add
imul
or
sub
jns
ss
dec
push
popf
iret
jo
mov
cmpb
ret
mov
lcall
jo
mov
je
or
cmpsl
mulb
pop
adc
mov
daa
lds
out
stc
sub
insb
pop
rolb
jg
push
out
fnstsw
dec
xchg
outsb
fidivs
fidivl
lahf
scas
dec
lds
aaa
lret
insl
scas
call
sub
adc
in
shll
sbb
popf
xchg
or
shlb
in
inc
cmp
jne
dec
mov
leave
pop
push
mov
hlt
clc
jne
xchg
mov
lret
aas
dec
in
iret
daa
jle
fisttpll
push
mov
aam
pop
push
sahf
repnz
lcall
loopne
push
repz
fmull
hlt
out
aam
pop
int3
stos
clc
testl
push
add
mov
incl
pusha
jmp
es
push
sbb
mov
or
add
sub
xchg
stos
and
dec
cmp
aam
fs
jns
xor
jnp
dec
mull
pop
jno
xchg
testb
test
or
adc
sub
in
les
lock
sbb
movsb
sar
jmp
sbb
repnz
je
add
sbb
or
mov
shrl
movl
psubw
inc
push
add
jns
addr16
jae
test
pop
mov
popa
in
pop
scas
push
ja
cltd
and
stos
xchg
cmp
mov
sub
push
movl
aad
andl
dec
loope
enter
dec
inc
sarb
clc
dec
out
mov
adc
jmp
rorb
adc
xchg
in
mov
repnz
jge
sbb
pop
movsl
mov
loopne
stos
test
into
imul
or
sub
mov
xchg
mov
and
shrb
fwait
mov
xlat
cs
dec
and
mov
std
das
inc
scas
lcall
mov
cwtd
outsl
push
fisubs
xor
pop
arpl
cli
out
frstor
sub
cmp
lds
fisubl
rclb
hlt
je
out
shl
fsubs
sub
xchg
fisubrs
enter
lret
xor
dec
sbb
sub
mov
jbe
loope
movsl
push
test
int3
inc
lahf
cmp
cltd
dec
jo
or
xchg
dec
mov
xchg
shl
mov
sti
sbbb
popa
lret
or
jecxz
fidivrl
cmp
mov
enter
icebp
mov
inc
add
jecxz
dec
and
fs
push
testb
inc
xlat
std
cltd
lds
loopne
dec
rclb
pop
pop
and
pop
fsubrl
xor
or
jb
jmp
xchg
pop
push
call
pop
mov
out
adc
rolb
or
rcr
mov
pop
sub
fiaddl
jno
ror
mov
cli
mov
or
push
sbb
enter
dec
lea
lds
dec
stos
mov
cmp
cltd
pop
pop
in
loop
cmc
push
adc
shrl
jle
push
scas
push
adc
or
adc
inc
pop
jne
decl
fisttpl
dec
add
mull
jne
xchg
push
jbe
or
lea
out
in
xchg
jns
repz
sbb
or
push
pusha
mov
pop
cmp
in
aaa
mov
inc
int
dec
out
loope
ss
sbb
push
jns
popf
jmp
dec
mov
inc
xor
xor
in
dec
test
and
add
lret
sbb
icebp
xchg
jg
into
add
dec
lock
xchg
aam
push
lcall
pop
test
dec
inc
pushf
fistpll
pop
ret
gs
out
pusha
icebp
cmc
test
mov
inc
xchg
orl
dec
bound
imul
daa
mov
or
rsqrtps
push
jp
or
sub
pop
jg
xchg
push
sbb
push
loop
cli
push
out
xchg
dec
pop
popa
clc
test
pop
fs
stos
jo
mov
out
addb
mov
push
cmp
pop
push
sbb
cmp
sub
add
push
jae
inc
int
or
inc
adc
dec
mov
inc
jbe
int
pop
mov
xlat
cmp
xor
rorb
xor
sub
imul
daa
adc
jns
lods
sbb
mov
xchg
test
push
or
add
and
sub
out
enter
pop
push
cs
repnz
xchg
dec
cmpsl
lea
xor
pop
imul
adc
dec
enter
sahf
ja
cltd
mov
leave
nop
push
pop
xchg
cmp
out
rorb
adc
ds
loopne
call
xchg
xchg
ljmp
sbb
es
es
popf
iret
shl
jns
pop
call
pop
inc
ficompl
mov
xlat
push
mov
push
arpl
jl
imul
fldenv
mul
test
mov
out
mov
mov
xchg
and
lahf
sbb
pop
cmp
jmp
mov
xor
outsl
out
iret
pop
sub
shll
imul
dec
rcr
fdivl
ds
in
mov
xchg
xlat
mov
or
dec
aaa
mov
push
mov
add
mov
jg
notl
loop
aaa
cmp
outsl
xor
and
xchg
in
pop
scas
mov
scas
movsb
lods
fs
scas
loopne
dec
xor
es
hlt
push
mov
hlt
std
jo
pushl
push
push
sti
or
scas
in
pop
incb
jl
loope
mov
pop
sub
push
jns
mov
xchg
repnz
shl
jne
mov
or
or
int3
sub
fwait
push
pop
in
repz
repz
fs
sub
push
ja
imul
out
ljmp
and
mov
cld
and
xchg
gs
and
inc
orb
sbb
scas
fwait
ds
push
gs
shll
cwtl
sub
pop
les
xchg
das
es
loop
pop
cltd
push
cmpsl
pop
fsubs
jmp
loope
push
add
or
lcall
loopne
int
in
lods
or
mov
loopne
shr
push
int
in
inc
out
pusha
cmc
xor
or
cmp
lcall
pop
sahf
sub
fwait
jmp
sbb
negb
mov
ss
imul
or
xchg
shll
mov
int
repz
ffreep
outsl
or
dec
shr
pop
stos
add
add
add
mov
ret
fidivrs
in
jns
xlat
dec
popf
in
insb
jecxz
int
loopne
jno
cmc
cmpsb
rcr
loopne
cmpsl
pop
imulb
jg
loopne
or
adc
sbb
jecxz
fcmove
bound
ss
xor
sub
jecxz
fbld
adc
movsb
cmp
push
sub
push
mov
sti
sbb
enterw
fs
sub
dec
push
mov
push
mov
jb
or
inc
or
mov
xchg
adc
xlat
mov
pop
mov
lret
stc
loop
mov
inc
push
or
xor
pop
cmp
repnz
lret
jns
popfw
and
mov
add
pop
sub
imul
push
aas
dec
adc
dec
and
or
imul
fidivs
mov
lret
dec
out
and
mov
add
rcll
add
jmp
xlat
jae
xor
fcoml
inc
mov
rorb
xlat
mov
sbb
lret
inc
dec
rolb
in
push
loopne
adc
aaa
push
pop
pusha
push
mov
push
jl
rcl
mov
pop
xor
xchg
inc
jae
pop
mov
cmc
mov
lcall
sub
scas
sbb
popf
cltd
inc
ljmp
fwait
sub
cltd
outsb
or
lods
out
ja
xchg
into
fdivs
arpl
bound
jno
and
dec
mov
loopne
cmp
or
pop
or
inc
xor
and
add
movsb
pop
inc
xchg
pop
sbb
stos
mov
mov
aaa
pop
add
outsl
pop
test
int
xchg
push
cmp
jno
sbb
push
jge
push
mov
pop
add
std
gs
fisttpll
decb
inc
lret
andb
mov
xor
and
sub
ret
xchg
mov
out
cld
sub
push
sahf
mov
test
xchg
jl
xchg
jns
mov
mov
int3
aad
fndisi(8087
fwait
sbb
fldenv
sarl
scas
pusha
pop
lahf
push
sbb
lret
pop
div
imul
cwtl
cmp
add
add
cmp
scas
pop
movl
stc
dec
mov
cmp
xchg
jecxz
andl
pop
loope
xor
push
out
fstp
mov
aas
in
out
sbb
pop
in
jl
inc
es
imull
dec
sahf
flds
mov
push
jb
push
or
or
sub
cmpw
push
nop
mov
xchg
fcmovu
aaa
fcomps
mov
repz
subb
arpl
xor
lods
push
add
lock
shrl
pop
loop
mov
sbb
fsubs
test
popa
es
mov
jp
fdivr
mov
jae
in
xor
add
add
cmpsb
pushf
aaa
mov
clc
push
loope
cmp
loope
fwait
cmp
loopne
cs
xchg
cmp
fstpt
negb
push
fmuls
adc
mov
in
stos
jle
xor
jnp
enter
das
adc
push
scas
jmp
jg
xor
push
test
sahf
lret
pusha
jle
cmc
iret
jl
sbbl
popf
add
cmpsl
cmp
sahf
mov
pop
testl
fs
fdivr
stc
inc
sbb
mov
push
mov
mov
jbe
inc
cli
jnp
pop
xor
int
mov
inc
lea
arpl
pushf
sarl
and
inc
insb
pop
cli
dec
imul
xor
ds
pop
stos
imul
mov
and
xchg
dec
xchg
xchg
pop
rorb
push
call
cmp
pushf
nop
jno
js
mov
dec
stos
cmpsb
inc
xorb
push
call
jmp
gs
cli
clc
movsb
rorb
pop
inc
xchg
movsb
push
cmp
pop
pop
inc
ficoms
xor
mov
jg
sbb
icebp
daa
cmc
testl
call
orl
push
push
inc
dec
repz
addr16
cmp
xor
adc
loopne
lds
or
int
mov
sarb
sub
fmuls
leave
arpl
ds
data16
and
dec
inc
or
ljmp
cmc
xchg
lds
and
mov
add
xchg
test
and
mov
mov
sub
cmpsb
lods
inc
test
sub
pop
dec
lods
aad
repz
cmpsb
xchg
mov
lret
fistpll
and
and
int
jp
shr
dec
in
and
fdivp
push
mov
jmp
mov
sbb
fnstenv
aas
loopne
std
sar
or
sbb
inc
cmp
push
sub
mov
out
mov
xor
ss
repz
jl
xor
cs
pop
add
fstps
and
gs
mov
cmp
loope
leave
push
daa
orb
or
in
jecxz
in
jle
mov
fimull
nop
jnp
mov
add
sub
jns
inc
push
mov
sub
fdivl
xchg
push
adc
insb
and
fsubp
popa
xchg
dec
mov
xchg
fcmove
jbe
pop
fcompl
outsb
pop
dec
cmp
add
jb
rclb
incl
ret
or
jp
sub
jb
cltd
data16
mov
faddl
sbb
mov
inc
stos
in
xchg
push
xor
cmp
test
fisttps
hlt
jb
xchg
mov
xchg
ljmp
ret
shll
bound
popf
cmp
or
lds
popf
popf
xchg
or
push
repnz
pop
in
leave
jns
mov
gs
inc
bound
mov
enter
inc
inc
inc
inc
push
push
loope
int
dec
dec
or
xchg
mov
aaa
xlat
stos
shll
mov
jns
mov
out
stos
mov
shrl
iret
push
jb
xchg
cmp
icebp
push
test
movsb
mulb
mov
arpl
dec
in
addr16
mov
xchg
sarb
jecxz
jbe
nop
cmp
xchg
xor
mov
nop
sub
std
mov
mov
popa
inc
aad
xchg
xchg
mov
fwait
xor
adc
loope
fxch
sub
and
and
test
arpl
add
les
or
jno
push
mov
insb
out
push
fnstenv
imul
xchg
test
xorb
rolb
das
mov
mov
xor
xor
pop
xor
cmc
in
add
mov
fcompl
scas
pushf
fdivs
sahf
dec
out
std
jb
cmp
jb
ret
push
sti
cmp
popfw
pop
cmp
jmp
jle
aas
stos
out
dec
jmp
sub
mov
push
sub
sbb
push
lcall
xchg
aaa
mov
or
imul
jp
icebp
adc
inc
jns
sar
xchg
xor
mov
insl
and
in
mov
dec
lcall
aas
and
repnz
add
mov
mov
jno
pushf
scas
cli
sub
clc
sbb
mov
pop
pop
and
fisttpl
aas
fwait
loope
pop
das
js
pop
loope
push
push
lcall
mov
sbb
in
xor
mov
es
dec
ret
popf
inc
fidivs
mov
ljmp
dec
push
or
das
test
inc
pop
lods
lock
dec
jecxz
mov
push
jno
xlat
sub
lret
nop
test
out
in
inc
mov
inc
cmpsb
inc
dec
aam
movsb
adc
bound
cmp
loope
xchg
testl
dec
cmp
nop
imul
sub
xor
mov
lds
call
add
pop
jnp
lods
mov
inc
mov
in
lds
sarl
and
popa
test
mov
movsb
sub
jg
fadds
out
mov
and
mov
test
testl
leave
xor
push
inc
stos
jnp
adc
push
das
arpl
mov
cmp
ror
xchg
cmp
cmp
jle
loop
leave
adcb
cmpsb
add
mov
cmpsl
unpcklps
bound
lret
sbb
jle
in
mov
inc
xor
mov
xchg
push
xchg
sub
dec
cs
mov
push
and
test
cs
sub
and
dec
scas
nop
xchg
pop
fcmove
out
loope
xchg
es
xchg
mov
adc
push
mov
roll
xchg
js
jns
jg
cli
stos
dec
push
sub
fists
sub
jbe
push
enter
addr16
shll
fimull
cmp
adc
sbb
imull
sbb
and
subb
outsb
pop
in
out
insl
scas
repz
mov
push
mov
jns
pushf
loope
fistpll
dec
xchg
scas
dec
cmp
xlat
adc
test
dec
fst
xchg
pop
out
lock
dec
mov
cmp
inc
sahf
sbbb
jo
xorl
mov
pop
pop
cmp
aaa
cli
inc
cmpl
enter
mov
add
xchg
inc
mov
jmp
addr16
inc
jle
mov
pop
sub
loopne
leave
aas
push
and
sbb
mov
push
jmp
xor
sub
mov
sub
mov
lret
test
or
pop
repz
push
js
jne
hlt
sub
adc
jne
lcall
mov
andl
lret
xchg
js
inc
cs
lods
or
cmc
dec
stos
jg
cmp
push
xchg
and
cmpsl
mov
cmpsl
ss
call
mov
pop
testb
add
test
jge
outsl
aad
inc
stc
movsb
or
add
outsb
sub
lock
adc
je
in
sbb
mov
repnz
sbb
lods
cmp
jp
in
arpl
xor
and
pop
mov
std
sub
es
xor
dec
mov
sbb
jl
sbb
push
xchg
cmp
pop
addl
das
push
loope
fistpl
repnz
mov
in
aad
jp
lcall
xor
orb
aam
adc
js
cmpsb
xchg
cltd
cmpsb
out
daa
add
divb
lods
add
repnz
loope
cld
mov
inc
scas
push
push
xor
jecxz
push
push
or
iret
leave
mov
xchg
movsb
js
cmpsb
pushf
mov
popl
mov
push
dec
xor
adc
cltd
xchg
sbb
jg
loope
pop
fcomps
inc
inc
jo
adc
jbe
add
jg
ss
fyl2x
popa
fwait
int
add
pop
andb
jl
push
pop
pop
xor
js
mov
testl
fsub
push
in
mov
les
inc
lds
cmc
les
hlt
or
decl
and
fstpt
cli
cld
into
fwait
insb
jecxz
mov
push
inc
or
jbe
add
jmp
lods
int
push
dec
add
loopne
jge
inc
lcall
loopne
inc
xor
add
mov
imul
dec
decb
das
test
mov
fwait
popf
mov
orb
or
dec
mov
cmc
dec
fcom
sub
push
jp
test
jno
jge
icebp
inc
mov
or
mov
rcrb
push
fldenv
aas
int3
stos
mov
inc
or
mov
nop
js
xchg
push
pop
pop
scas
in
lods
xor
fsubrs
fdivrs
xor
sbb
iret
cmpsb
pop
jmp
xor
xor
dec
xchg
out
sub
jbe
ja
or
mov
xor
or
rclb
xchg
mov
sbb
aas
imul
inc
xor
push
lahf
dec
and
mov
notb
xor
and
mov
loopne
or
push
hlt
call
cmpsb
add
mov
sti
sti
jae
fistpl
jp
mov
xchg
adc
ret
cld
dec
pop
xrelease
inc
lds
test
inc
ljmp
fistpll
mov
lahf
xchg
add
popf
pop
sub
pop
mov
lds
in
addr16
js
rcr
insl
jb
or
ja
fiadds
pop
adc
mov
fbld
inc
add
bound
jnp
idiv
ja
xor
or
cwtl
mov
sbb
mov
xlat
inc
cmpsb
add
add
cmp
or
adc
mov
movsl
sub
je
cmp
popf
xor
lds
imul
or
mov
pop
mov
sbb
iret
cld
ficoml
inc
adc
xor
jle
inc
enter
rcrb
int
jb
in
insb
stos
neg
lea
cmc
hlt
popf
lea
scas
loop
cwtl
imul
lret
push
and
add
dec
daa
lea
adc
cmp
out
jb
mov
lea
jp
sub
push
ret
outsb
not
cmp
mov
xchg
mov
gs
loope
out
mov
lds
jb
test
packssdw
ret
cs
nop
adc
testl
push
push
jo
jne
aaa
xor
cmp
ds
mov
mov
jmp
std
or
xchg
xchg
fsqrt
inc
cwtl
push
xchg
cmp
and
paddw
mov
push
mov
das
jp
gs
sub
jne
or
movsb
out
mov
testb
std
clc
imulb
add
jecxz
mov
sarb
cmp
ja
cmp
cmp
pop
lahf
pusha
inc
xor
cli
cmpsl
insl
bound
aaa
stc
cwtl
pop
mov
lea
je
sbb
int
dec
fdivl
dec
pop
out
xchg
cwtl
imull
jns
adc
icebp
jp
add
or
mov
jecxz
jge
add
scas
fsubs
pop
imul
jle
sahf
add
adc
aam
sahf
dec
cvtdq2ps
and
incl
js
sub
xor
das
and
ficoms
or
xlat
jae
ret
or
in
cmp
pop
sub
xor
adc
scas
pop
ljmp
cmp
mov
xchg
into
pop
scas
sbb
hlt
in
cwtl
jl
inc
dec
mov
ljmp
stos
sbb
xchg
stos
shll
shrl
add
mov
fadds
les
mov
cs
ja
sbb
adc
or
jno
adc
inc
cwtl
mov
add
dec
in
pop
bound
negb
push
mov
xchg
xor
aad
aam
or
test
inc
test
adc
push
sahf
jno
in
lcall
ret
pusha
mov
cmp
in
inc
sbb
fwait
inc
inc
icebp
call
pop
inc
add
sub
shlb
shld
addb
adc
push
stos
or
adc
test
js
and
mov
lods
inc
filds
cmp
jmp
sub
or
push
xchg
sub
push
ljmp
dec
push
sti
push
mov
dec
arpl
push
out
or
in
inc
ret
pop
push
xor
jno
xchg
cmp
in
inc
add
mov
cmpsb
loope
call
xor
stos
movsl
aad
sbb
inc
dec
lret
lret
xor
xor
xor
imul
sbb
mov
jb
testb
mov
add
adc
jae
push
outsl
push
adc
sbb
cmp
mov
ds
jmp
and
popa
ficoms
add
outsb
and
js
mov
xchg
sahf
inc
test
lock
movsb
cmp
adc
and
jle
cmp
pop
mov
lcall
aas
fs
push
xor
ret
jge
xor
inc
fistpll
pop
jo
jle
xchg
pop
nop
mov
mov
cmpsl
xchg
jo
fdivl
stos
notb
push
outsb
call
jl
mov
scas
jbe
xor
ss
dec
arpl
sahf
outsb
inc
cmp
lahf
flds
cmc
add
pop
xor
push
or
adc
lret
push
andl
mov
out
mov
add
outsl
lods
out
pop
add
sbb
aam
cmp
pop
cmpsb
repz
cmp
fdivl
inc
pusha
data16
push
sub
movsb
or
outsl
fnstenv
pop
xor
mov
and
lods
sti
dec
movsl
or
pop
fucomip
jno
leave
xchg
idivb
dec
cltd
sarb
sub
and
sub
negb
outsl
cli
insl
cmp
hlt
and
nop
stos
jle
inc
xor
out
lret
cmpsl
and
pop
mov
pop
loop
inc
pop
mov
xchg
fnstsw
stos
xor
jns
sub
fcompl
jmp
push
push
mov
addr16
adc
jp
xchg
pop
mov
rcll
mov
cmpsb
mov
out
gs
fadds
or
je
adc
ret
out
outsl
dec
or
pop
dec
stc
test
cmp
enter
loope
lret
sub
push
insl
xor
or
jecxz
idivb
push
and
mov
inc
push
pop
xchg
add
ljmp
push
push
inc
jmp
add
adcl
jo
ds
rolb
imul
out
pusha
cmp
mov
je
sub
lods
subb
mov
arpl
xchg
push
mov
jbe
jb
push
xor
push
push
sbb
not
mov
das
imul
out
mov
jbe
mov
in
inc
cli
pop
test
mov
xor
out
cmpsl
adc
int3
sti
cmp
xchg
mov
ss
dec
xchg
inc
and
notl
repnz
adc
push
mov
rcll
push
xchg
dec
loopne
lret
mov
and
mov
xchg
repz
repnz
mov
jecxz
cld
mov
xchg
in
jmp
daa
xor
cmp
inc
cmpsb
add
inc
inc
sub
mov
lds
rol
add
mov
adc
adc
mov
cmp
jmp
jns
arpl
testl
ror
cmc
lret
sub
std
sahf
fildll
test
sbb
and
fwait
int
xchg
enter
add
xlat
ljmp
imul
cmp
jnp
bound
jecxz
or
push
ficoml
or
or
insb
mov
ss
fisubrs
sub
xor
addr16
pop
out
clc
paddsb
popl
lods
and
sub
fdiv
add
mov
push
insb
iret
xlat
pextrw
cmp
jmp
data16
sub
lock
dec
loope
and
lcall
bnd
push
mov
push
das
leave
add
jle
bound
notl
and
test
addb
filds
aaa
iret
mov
fisubrl
xor
icebp
jmp
std
mov
adc
xchg
gs
js
pop
mov
mov
ret
mov
sbb
out
std
scas
jecxz
lods
jp
push
out
sub
nop
inc
push
mov
ljmp
jne
aaa
movnti
fwait
cmp
popa
test
and
inc
sbb
mov
aad
jne
pop
ljmp
out
inc
ds
mov
aad
push
lcall
sub
movsl
cmp
enter
movsb
push
adc
repz
lock
scas
aad
cmpsb
nop
pop
stos
data16
jge
xchg
lcall
scas
out
ret
xchg
test
adc
mov
cmc
inc
movsb
dec
add
ret
and
scas
es
pop
andb
in
push
mov
xor
stos
xor
cld
notl
mov
jl
sbb
push
sahf
sbb
mov
jp
pushf
push
arpl
xor
loop
nop
out
jo
sti
outsl
cmp
in
inc
jbe
mov
jne
mov
scas
ja
or
fildl
rcrb
stos
push
cmp
dec
lds
pop
cmp
push
insl
imulb
call
mov
or
bound
cmpsb
shl
loop
or
adc
xor
pop
call
add
pop
leave
stos
add
dec
arpl
mov
pop
jb
rcrl
paddusb
or
ficomps
push
imul
lcall
lret
popa
jle
pop
adc
mov
fstps
ret
push
cli
sti
or
lcall
jbe
xchg
sub
xor
outsb
inc
sub
mov
test
lret
in
sub
mov
aad
push
mov
sbb
pop
adc
daa
pusha
dec
sub
int
pop
cmp
shll
cmp
sbb
repnz
arpl
addr16
imul
mov
les
pop
push
icebp
mov
fwait
jae
int
sub
fisubrs
insl
repz
jge
clc
inc
sbb
stos
jp
fisubrs
filds
pop
loopne
cmp
ss
jle
or
sarb
pop
jp
movsb
rcl
push
or
popa
aam
and
pop
in
int
out
pop
jl
mov
mov
jno
cmpsb
xchg
pop
notl
subl
insl
pop
mov
cs
cmp
add
dec
mov
data16
cs
xchg
inc
mov
jnp
xlat
lahf
cmpsb
js
pusha
gs
cmp
pop
xchg
push
and
mov
adc
jge
and
mov
out
lcall
jb
and
sbb
stc
inc
adc
out
mov
in
xchg
lock
sbb
xlat
pop
adcb
jl
sub
stos
clc
test
popf
fnsave
scas
mov
push
mov
and
hlt
mov
cmp
jb
push
push
xlat
xchg
incb
cli
aad
xchg
and
aaa
or
adc
push
xlat
inc
xchg
insl
cmp
fiaddl
and
fsubrs
imul
das
sub
push
add
cmpb
fstl
mov
jbe
les
and
ljmp
daa
inc
mov
cwtl
inc
call
jge
add
add
lock
arpl
or
cli
xchg
adc
sub
pop
icebp
inc
shr
shr
sub
arpl
test
xchg
data16
fcompl
pop
shlb
mov
and
enter
mov
and
es
mov
and
xchg
and
mov
xor
movsb
daa
fisttpl
clc
cmpsl
daa
mov
jge
push
enter
mov
push
test
ljmp
jbe
dec
mov
and
jno
cli
rcrl
arpl
in
in
rclb
iret
fisubl
xor
pop
cmp
fldl
out
test
dec
stc
pop
jl
daa
nop
xchg
movsb
mov
adc
dec
xchg
pop
xor
cwtl
or
and
into
mov
sbb
cwtl
mov
xchg
pop
or
xor
push
cmp
cmpsl
repnz
dec
push
rol
loop
add
dec
in
cmp
hlt
sbb
out
hlt
jo
pop
xor
mov
movsl
push
push
push
or
and
lods
cmp
daa
add
rclb
pop
popf
aas
or
addr16
jae
je
add
cltd
xor
ja
push
daa
mov
mov
pop
or
fidivl
test
jmp
fcompl
mov
inc
lock
rcr
jae
adc
jae
cli
popf
pop
xor
cmp
or
test
in
stos
mov
ja
pop
movsb
inc
mov
iret
and
pop
xor
ret
or
ds
jge
outsl
cwtl
out
jecxz
and
mov
mov
and
add
cld
lds
sbb
cld
adc
fists
loopne
aad
dec
call
dec
xor
cmp
jl
repz
fninit
push
sbb
jb
loopne
lods
mov
rorb
mov
sbb
repnz
nop
xchg
mov
mov
sub
loopne
cltd
lock
aas
cwtl
cltd
xchg
pop
sbb
lods
repz
cmp
dec
aad
mov
xlat
cmpsb
push
mov
loopne
pusha
aas
pop
push
movsb
inc
push
test
enter
notl
pop
mov
jmp
mov
rclb
inc
cmc
ljmp
divb
adc
in
mov
add
jecxz
mov
cltd
sbb
jne
mov
xor
popf
pcmpeqb
aaa
inc
mov
jge
ja
mov
adc
pop
mov
add
inc
scas
lahf
mov
push
push
arpl
ret
leave
xor
popf
fbld
test
push
cmp
and
pop
xchg
and
fidivrl
push
stos
jge
call
xchg
test
test
mov
in
jnp
push
and
call
push
aam
push
pop
cmp
xchg
mov
inc
scas
aas
movb
test
pop
mov
mov
loope
add
jmp
mov
push
mov
dec
cmp
outsl
fucomip
xchg
lret
movsl
dec
out
dec
xorb
scas
mov
xor
scas
jnp
enter
movsb
xor
scas
out
les
mov
adc
pushf
inc
int3
adc
pop
shrl
pop
adc
das
addr16
leave
adc
arpl
inc
addb
xchg
lea
out
lods
cmp
and
push
pop
inc
repnz
outsb
jo
imul
inc
or
dec
jb
sbb
pop
sbb
movsl
enter
lds
call
adc
cs
adc
les
jmp
mov
cmp
pop
test
inc
stc
inc
cmpsb
adc
xchg
xchg
jne
mov
jecxz
iret
sti
sub
and
insb
dec
outsb
lea
popf
mov
out
and
push
incb
outsb
mov
adc
cld
mov
mov
dec
adc
xor
adc
cli
or
pop
decl
pop
lret
test
xor
lds
sub
and
pop
xchg
xlat
lcall
mov
mov
jno
mov
ret
loopne
int
test
addr16
dec
out
mov
fdiv
addl
out
out
and
aam
pop
jae
sbb
or
pop
dec
mov
ror
push
pop
dec
adc
aaa
pop
jb
sbb
stc
sbb
cmp
mov
mov
imul
mov
pop
and
xor
sbb
testb
repz
jle
dec
call
pop
js
sub
inc
jne
push
fcomp
cmc
xchg
cmp
stc
xchg
and
jmp
cltd
xchg
and
dec
loopne
shr
lock
bound
adc
fs
mov
jb
and
fnclex
stos
add
push
mov
sbb
inc
paddd
mov
clc
leave
flds
sbbl
data16
sbb
xor
cmc
mov
or
ss
or
stos
mov
mov
mov
mov
push
ja
xor
or
jnp
sti
fs
jl
aad
jecxz
outsb
test
or
lcall
movsl
xor
mov
pop
mov
jbe
xchg
jl
mov
pop
or
ja
or
jp
or
adc
push
ficomps
jo
pop
mov
std
sbbl
xor
jbe
aaa
mov
xor
aas
inc
sub
cmp
mov
or
repnz
aas
or
push
cwtl
jmp
dec
mov
in
adc
ficoms
adc
sub
push
dec
rcl
fcoml
or
insl
lea
orb
add
push
push
mov
xor
add
sbb
pop
loopne
lcall
cltd
push
mov
mov
insb
loop
push
sbb
mov
and
mov
lea
or
jp
mov
fsubp
out
push
ja
movsb
movsb
mov
inc
je
insb
aad
aaa
mov
in
mov
lcall
pop
push
jge
mov
addr16
ds
shll
dec
loopne
sarb
dec
ljmp
fildll
addr16
inc
xchg
mov
add
call
inc
dec
sti
xor
popf
mov
xchg
aaa
push
cld
inc
es
push
pop
inc
inc
pop
scas
and
xchg
fimuls
pop
push
lds
outsb
cltd
scas
xchg
call
loopew
ret
xchg
movsl
lea
scas
mov
pushf
pop
addr16
cmp
mov
push
rcrl
xchg
sahf
sbb
dec
push
jne
lods
push
imulb
outsl
gs
inc
jb
test
insb
por
out
dec
cmp
inc
mov
cld
mov
adc
and
movsb
cmp
or
in
cmp
jbe
call
jecxz
jle
mov
jge
or
pop
jns
inc
and
test
and
jp
xor
adc
jle
repnz
push
xchg
mov
pop
cld
xor
fwait
mov
jns
or
add
pushl
mov
inc
popf
jecxz
test
mov
sub
or
cmp
sub
lea
xchg
dec
jge
je
push
aaa
jo
stos
lea
mov
jno
inc
rcl
ret
push
mov
inc
mov
push
dec
xchg
sub
or
loop
iret
and
in
jbe
lea
sbb
ret
enter
fcmovnu
mov
insl
xor
pop
in
test
xor
mov
sbb
adc
in
rclb
xlat
xchg
ret
xchg
lcall
cmpsl
xlat
cmp
mov
ja
pop
push
push
out
loope
adcb
add
in
adc
enter
mov
pop
lea
int
pop
std
pop
jns
outsl
cmp
cmp
adc
insl
sahf
cltd
xor
push
iret
iret
popf
out
aaa
out
dec
push
movb
les
push
and
add
call
test
dec
cmp
xchg
cmp
push
jo
aad
cmp
jecxz
out
insb
dec
or
xchg
data16
loopne
pop
jb
pusha
mov
push
lret
mov
pop
insl
mov
adc
aaa
mov
push
inc
aaa
fstpt
insb
jno
in
mov
cmpps
or
mov
outsl
lea
cmp
pusha
lret
inc
jle
dec
pushf
dec
push
cmp
mov
add
cmp
ror
enter
jne
mov
pop
cmp
daa
test
scas
inc
mov
push
pushf
in
cmc
mov
jo
int
cs
iret
je
lcall
mov
mov
rcrl
or
sbb
add
pushf
jl
out
ss
inc
mov
and
dec
inc
cmpsl
shll
rorb
cmp
add
lods
xchg
cmp
in
and
mov
cwtl
or
daa
jnp
sbb
lods
sub
xchg
mov
mov
xor
pop
rclb
aam
sub
loope
loopne
cmp
testl
lret
ljmp
std
out
repz
mov
add
push
xor
dec
hlt
sbb
jnp
jb
loopne
xor
push
ds
push
adc
stos
lods
xor
xor
push
enter
adc
jl
mov
adc
or
pop
xchg
jnp
stos
push
push
sbb
jmp
sbb
sbb
shrb
jge
nop
xor
push
fucomp
and
pop
fimuls
fwait
lods
stos
aam
jmp
pop
xor
add
testl
sub
negl
mov
es
cmp
jb
push
or
fisttps
arpl
mov
jns
or
int
scas
pop
fadds
or
ror
cs
pop
das
pop
stc
adc
dec
sbb
cmpsb
cmp
sub
pop
lret
dec
push
out
pop
ja
sbb
adc
cltd
xor
mov
mov
test
push
jno
or
pop
cmp
iret
xor
sub
fisttpl
ss
pop
lods
xchg
push
cltd
pushf
mov
int3
push
dec
loope
inc
hlt
rcl
adc
xor
mov
fisubl
je
inc
pop
imul
mov
fs
adc
mov
stc
aam
and
xchg
bound
lock
and
add
icebp
scas
out
jnp
into
subb
loope
adc
xor
pop
mov
xor
mov
lock
xchg
ret
jle
cmpsl
divb
int
in
sub
ret
xchg
daa
test
adc
add
cmp
jns
xchg
js
and
bound
adc
sqrtps
fstpl
mov
and
adc
test
pop
in
sub
or
sbb
les
in
mov
mov
call
inc
pop
or
sbb
inc
sahf
roll
push
aad
in
pusha
lods
pop
daa
movsl
mov
inc
inc
cli
adc
push
cs
mov
dec
repz
repz
int3
orl
mov
push
into
dec
add
fdivs
mov
dec
cmp
int
push
neg
out
movsb
cmp
arpl
in
sbb
mov
outsb
fcomps
lock
in
in
xchg
mov
cmpsl
sub
ret
jns
in
pushf
push
mov
hlt
fcmovnu
repnz
ret
adc
testb
movsl
sbb
push
or
movaps
mov
push
outsb
fisubl
push
in
jb
in
mov
addr16
push
mov
cs
fsincos
call
fiadds
ss
outsl
js
xchg
inc
sarb
lea
test
adc
xchg
cmp
movnti
movsb
jg
jae
mov
xchg
add
sub
xchg
js
cmp
dec
mov
add
roll
adcb
loope
nop
sbb
push
insl
inc
repz
or
jecxz
pop
mov
and
adc
push
jno
sub
into
out
fstpl
pop
push
cld
xchg
xorl
and
jge
cltd
jecxz
sbb
insb
mov
push
cmp
mov
cmp
pusha
test
fildll
fwait
xor
negb
fsubl
int
movsl
xchg
jns
not
push
jmp
push
push
adc
test
cmc
add
push
nop
push
test
xchg
adc
jmp
mov
stc
sub
inc
add
xor
fmuls
cltd
in
add
add
push
mov
jl
shrl
add
push
test
sub
sbb
mov
jnp
sbbl
imul
into
stos
inc
pop
sti
xchg
pop
adc
mov
stos
cmp
sti
pop
sbbl
mov
test
imul
inc
inc
mov
pop
pop
mov
sub
into
fadds
inc
gs
jmp
jnp
xchg
fiaddl
add
sub
repnz
cmpb
mov
fstl
ljmp
mov
jp
mov
rcrb
dec
enter
xchg
sbb
pop
movsl
fsub
loop
adc
inc
push
mov
push
das
repnz
imull
pop
inc
fsts
mov
imul
adc
dec
inc
out
call
sbb
fmull
jle
pop
mov
mov
cmp
mov
popa
sbb
jne
out
push
sbb
pop
les
es
mov
adc
int
mov
xchg
jb
lea
sub
sti
cmp
adc
fstp
jns
pop
out
out
xchg
mov
ss
hlt
inc
sub
stos
xchg
mov
mov
xlat
xor
mov
dec
push
in
push
into
push
cmp
repnz
test
outsl
push
push
pop
mov
shrb
mov
xor
cmp
fucomip
xchg
ja
mov
ja
dec
add
pusha
aad
insb
icebp
stos
cmpl
xchg
pop
lahf
adc
sub
cltd
jne
add
fldenv
pop
test
pop
aaa
xchg
pop
gs
xchg
in
lret
call
mov
jno
mov
and
test
mov
int3
xor
xchg
daa
jmp
xchg
imul
fs
push
sbb
inc
fbstp
js
xlat
cmpsb
repnz
dec
movsl
lea
dec
ds
sub
adc
cmp
lock
ds
cmpsb
cmp
xchg
mov
xchg
mov
cmc
mov
out
xchg
shr
enter
pop
jb
and
cmpsb
into
pop
push
sbb
stc
cld
xchg
pop
mov
hlt
pop
xchg
fimull
fadd
out
jge
in
cmpsl
add
mov
jmp
std
fmuls
cwtl
cmp
xchg
add
pop
nop
sub
pop
xor
mov
lret
loope
imul
shll
bound
rolb
pop
add
sbb
push
ss
xor
aam
push
dec
inc
xlat
push
or
nop
adc
fisttpl
dec
aaa
addr16
mov
xchg
andl
test
inc
mov
test
jno
jae
pop
movsb
mov
sti
loop
movsl
inc
fmull
loop
cmp
in
aaa
jae
xor
arpl
cmc
push
mov
int3
in
pop
inc
add
mov
hlt
repnz
xchg
out
or
ja
std
mov
cs
add
lods
dec
test
inc
sub
cmp
pop
std
mov
movsl
fildll
add
or
imul
scas
fists
aam
in
pop
ja
cltd
and
movsb
mov
mov
xchg
mov
xchg
scas
mov
rclb
test
cmp
dec
inc
push
inc
ret
and
idivl
push
lea
sub
insl
std
sub
fsts
or
jecxz
bound
idivb
adc
in
and
lds
xor
aad
sbb
in
ss
lock
into
in
dec
repz
enter
or
mov
adc
and
inc
lea
xorl
int
js
cmp
push
cli
pop
outsb
mov
jp
jns
or
out
into
push
xchg
mov
dec
stos
mov
or
push
xchg
cmp
or
pop
and
push
imul
sbb
mov
lret
mov
pop
int3
pushf
xchg
xor
les
add
push
xor
sub
cmp
jno
mov
mov
lcall
mov
shll
inc
mov
adc
xor
mov
les
lret
push
cld
enter
sbb
and
ljmp
xor
jp
cmp
add
test
aam
cmp
or
xlat
jp
sub
xor
jne
pop
mov
pop
sbb
dec
sbb
push
addr16
aas
ljmp
mov
loopne
or
pop
push
or
and
lret
and
cmp
sbb
sbb
dec
and
popa
jp
push
adc
mov
pop
add
and
das
sahf
mov
sub
gs
ficoms
gs
xor
cld
adc
rclb
nop
ds
test
repnz
sbb
outsl
dec
nop
das
repz
lahf
cwtl
je
popf
sub
xchg
jle
mov
or
mov
insb
cs
dec
jle
lods
out
stc
push
mov
js
add
leave
addr16
imul
push
sahf
loope
int
pop
xor
out
mov
dec
ror
mov
in
cs
jo
icebp
or
dec
pop
push
or
adc
pop
push
repnz
add
pop
xor
test
xor
pop
mov
test
addr16
aad
xlat
dec
mov
addr16
mov
cmp
ja
sarl
imul
cmp
and
fwait
sbb
xchg
icebp
or
sar
fisubrs
stos
push
pusha
xchg
push
shlb
ret
int3
int3
leave
pop
push
cmp
sbb
dec
push
stos
daa
enter
and
push
aam
adc
sbb
mov
xlat
mov
mov
xchg
inc
push
outsl
or
popa
mov
jns
arpl
cmovb
mov
xor
fcoms
mov
xchg
dec
pop
sub
in
negb
lock
cmp
mov
adcl
jmp
out
test
mov
mov
rol
fdivp
inc
bnd
je
mov
mov
fs
in
pop
push
jge
cmpb
adc
adc
pop
mov
out
cmc
cwtl
into
jecxz
xor
mov
outsl
les
lret
cmpsl
aad
arpl
xlat
pop
int3
adc
push
add
xchg
jmp
bound
adc
jae
pop
jecxz
mov
and
pop
and
xchg
loopne
aas
popf
inc
jae
imul
mov
xchg
shll
hlt
and
add
aam
bnd
stc
mov
fwait
xor
fwait
cmp
push
imull
cmpsb
fwait
xchg
push
bound
ljmp
mov
std
sub
push
shr
jnp
lea
sbb
lcall
mov
sbb
mov
arpl
test
outsb
dec
js
ficomps
ret
clc
loop
mov
ds
cmc
or
xor
sub
sbb
or
pmaxub
insl
in
into
cmp
pusha
incl
lods
push
inc
aas
xor
out
jle
xor
lret
lods
or
das
push
inc
scas
sub
inc
hlt
and
test
repnz
cli
fsubs
fcomps
mov
pusha
adc
fimull
pop
mov
jo
push
or
imul
cli
lcall
inc
js
sysenter
imul
inc
or
clc
and
ja
sbb
sub
imul
inc
sbb
dec
sbb
dec
sbb
loope
lods
bound
lods
xor
push
dec
fucompp
mov
mov
out
sbb
bound
aaa
pop
fsts
loop
push
repnz
lahf
sub
inc
repnz
pusha
in
dec
insb
sbb
pusha
scas
inc
ds
ljmp
enter
js
xor
scas
add
sub
into
xchg
cmp
or
cmpsl
lret
pop
ljmp
and
cmp
adc
out
leave
jmpw
shll
cmp
hlt
sti
fwait
cmp
fcomps
jmp
cmpsb
jbe
push
loope
insl
cwtl
xor
or
sub
cmp
out
xchg
das
or
rcr
xchg
int
stc
add
jno
dec
adc
mov
test
loope
pop
push
cmpsl
fidivrs
cmp
in
in
pusha
xchg
cs
jo
jmp
adc
xchg
xchg
clc
lcall
enter
filds
dec
leave
dec
repz
into
pop
cmp
faddp
stos
lods
pop
repz
cld
lods
mov
lods
dec
into
mov
mov
mov
sbb
cmc
ja
xlat
loopne
stc
pop
in
fisubl
jg
add
xchg
js
xchg
mov
in
inc
push
lods
inc
mov
mov
int3
fildl
ja
add
jge
fldl
rcrl
pop
mov
mov
and
mov
inc
movsl
aam
out
int3
popa
dec
xchg
rol
ror
pop
add
push
mov
pop
sbb
stos
aas
adc
popa
fiaddl
mov
xchg
add
pop
xchg
push
xchg
dec
insb
notl
jb
sbb
xchg
outsb
out
mov
add
inc
scas
rcrb
add
cmp
test
cld
jbe
inc
xor
lret
push
out
xchg
cmp
imul
pop
lahf
dec
xchg
mov
aam
pop
repnz
add
jne
mov
jo
out
mov
mov
stos
push
jo
mov
push
xlat
xchg
fists
pop
pushf
pop
aas
fs
mov
in
pop
nop
and
lahf
ret
push
ds
dec
inc
and
jecxz
cmc
inc
divl
or
mov
mov
xlat
add
ret
and
cltd
lea
cltd
repnz
loope
dec
and
fs
lret
pop
adc
jmp
mov
lea
mov
sarb
push
sbb
or
or
mov
fnstsw
lods
cmp
add
or
ja
fisttpl
mov
movsl
ljmp
addr16
inc
xchg
loope
adc
movsl
mov
mov
pop
test
aaa
lock
das
mov
pop
mov
inc
rcrb
adc
clc
dec
xchg
mov
adc
mov
mov
pop
add
or
loop
cli
inc
add
shl
rclb
mov
movsb
sub
xor
lods
cmp
xchg
aaa
jbe
sbb
rcr
fwait
sahf
das
mov
cmpsb
test
xlat
and
jg
adc
call
cmp
pop
leave
add
ljmp
cli
sbb
push
jbe
jge
add
fst
mov
mov
sti
pop
push
xchg
in
jl
xor
ret
movsl
push
ficomps
sub
test
fstps
in
repz
add
das
or
js
subl
imulb
sbb
lcall
sbb
sbb
loop
add
ja
dec
jnp
or
cmp
ljmp
loop
sbb
into
lods
loopne
xor
lea
jp
in
stos
add
enter
cli
pop
loop
mov
jnp
inc
inc
pop
stos
xor
pushf
xchg
insb
mov
test
in
fcmovnu
aaa
stc
mov
and
or
insb
and
xchg
fimull
push
push
add
bound
adc
daa
es
out
inc
push
pop
aad
js
xchg
out
das
movsl
rclb
and
in
mov
cs
stc
lret
mov
pushf
popa
xor
ficoml
imulb
push
xor
pop
cmpsb
pop
jg
nop
push
sbb
add
mov
ljmp
push
sbb
pushf
pop
inc
pop
cmp
xchg
outsb
sub
loop
adcl
jecxz
repz
jne
mov
adc
add
mov
iret
xchg
and
mov
jg
inc
cwtl
imul
cmp
es
shrb
adc
xchg
dec
jecxz,pn
add
add
xchg
fiadds
xchg
mov
adc
js
inc
scas
xchg
push
jmp
mov
or
pop
aad
jp
inc
jo
insb
xlat
pop
add
imul
loop
mov
xor
mov
mov
subl
jl
leave
push
cmpb
data16
mov
xchg
jne
inc
out
scas
rolb
test
jle
and
sub
fsubl
cli
mov
or
inc
jle
dec
jle
push
imul
les
test
inc
inc
adc
or
aad
mov
test
jecxz
hlt
lea
js
lret
xor
cmp
fwait
out
push
or
fsubrl
push
jae
mov
pop
push
adc
mov
and
dec
adc
icebp
pusha
fcoms
inc
movsl
xchg
loop
or
mov
leave
mov
add
test
jp
jbe
fstl
gs
cmp
inc
add
and
push
jmp
jb
mov
mov
enter
adc
sar
adc
fmuls
call
mov
mov
fwait
mov
ret
sbb
mov
bound
inc
push
mov
sarl
pop
pop
and
loope
xchg
test
xlat
xor
iret
push
mov
jl
mov
or
xchg
xchg
jns
pop
aas
cld
jnp,pn
add
enter
aaa
sbb
xchg
xor
shlb
push
ja
stos
ds
pushf
mov
daa
mov
out
call
jp
int3
sub
out
mov
mov
sub
xlat
push
faddl
dec
push
int3
add
inc
sti
stc
movsl
sub
pusha
jp
mov
adc
inc
push
mov
lcall
pop
adc
ja
xor
pop
pop
mov
add
ss
aaa
sbb
lods
fcmovnb
lds
jecxz
aad
or
mov
inc
pop
mov
mov
cvtdq2ps
dec
jns
mov
inc
cmp
rep
mov
sub
sarb
ret
out
jns
mov
arpl
loopne
loope
mov
push
add
shll
je
aad
cmpb
sub
jne
clc
in
mov
ss
xchg
ja
leave
js
ljmp
fsubrp
inc
adc
jecxz
stos
mov
mov
int3
inc
int3
mov
inc
out
xchg
push
orl
dec
mul
notb
addr16
add
dec
into
bound
ret
mov
pop
pop
add
stos
es
and
xchg
push
pop
pop
or
lods
and
xchg
roll
mov
push
jnp
shl
push
test
pop
clc
lea
and
lods
xor
xchg
xchg
push
mov
stc
ljmp
getsec
pop
sahf
mov
mov
into
sbb
mov
daa
cmp
pop
fs
cmp
adc
cmp
cmpsl
mov
mov
popf
adc
xor
sbb
mov
xor
hlt
std
jp
or
subl
mov
inc
add
dec
loope
mov
into
clc
add
test
mov
mov
daa
push
cld
out
pop
xchg
dec
xchg
xor
jg
push
cmp
ror
es
aaa
pop
ret
dec
test
dec
outsb
jmp
cmc
xor
cmp
pop
pop
shrl
sbb
fcomps
rcll
xchg
dec
ljmp
cmp
mov
nop
and
lahf
push
jl
mov
xchg
pop
gs
adc
or
ljmp
in
and
clc
dec
fmull
pop
fwait
push
sub
mov
dec
mov
xchg
popf
shll
popf
mov
push
cmpsb
fisubl
xlat
les
repz
mov
lret
inc
jbe
data16
xor
outsb
ljmp
jnp
inc
stc
xlat
imul
mov
sub
mov
push
add
inc
push
insl
mov
dec
lods
sbbl
mov
mov
subb
push
push
daa
fstps
aaa
push
fstpt
sub
cwtl
test
cmpsl
xor
aad
jae
psubusw
sub
push
push
repnz
add
cs
loope
fsubrp
test
stos
stc
nop
mov
iret
test
addr16
ficompl
xchg
imul
mov
push
push
stos
sub
cmp
ja
fstps
movsl
int3
xor
lock
jne
jp
lods
cmp
mov
andb
mov
mov
leave
bound
sbb
jmp
mov
test
xchg
fcompl
push
add
lahf
xorb
dec
insb
and
sti
cmpsl
pop
and
ficompl
inc
inc
lret
sbb
push
pop
pusha
insb
add
inc
jecxz
insb
and
sbb
repnz
jne
mov
test
das
addr16
lahf
xchg
jmp
fsts
adc
mov
fimull
adc
fxch
sub
xor
aaa
push
lods
sub
and
xorb
cltd
push
mov
lock
inc
popf
repz
lret
mov
clc
repz
push
mov
popf
push
jno
adc
inc
or
sub
mov
lret
and
jb
shll
sbb
enter
cmp
arpl
jle
sti
ret
inc
frstor
cld
mov
pop
insb
or
mov
add
or
arpl
addr16
xor
mov
xchg
ret
mov
inc
data16
xor
rolb
fsubs
mov
pop
mov
les
aaa
int3
test
das
and
cmp
jne
scas
sbb
dec
sub
sub
inc
xor
mov
out
mov
mov
or
and
in
fwait
mov
ror
test
lods
aam
xor
sbbb
cmc
sbb
pop
lods
push
in
je
dec
into
inc
in
jb
aam
pop
cmpsl
sti
popf
lahf
pop
or
add
rolb
shl
cs
jg
cltd
nop
adc
or
jae
std
cltd
popf
loop
sub
push
cmc
xchg
mov
imul
movb
jmp
jecxz
imul
jp
adc
jl
mov
cmp
adc
lret
push
push
mov
xor
iret
daa
mov
xchg
mov
syscall
cmc
rcr
or
aam
pop
out
and
or
sbb
add
sbb
les
xor
sbb
adc
arpl
sarl
inc
jnp
test
mov
cmpsb
push
sbb
or
andb
xchg
xor
out
push
out
mov
xchg
cmp
movsb
sub
add
sti
lcall
imul
arpl
js
mov
std
xor
addb
xchg
enter
and
adc
fwait
sbb
in
sbb
cld
int
fwait
cmp
sti
fs
fcomps
jbe
and
sub
inc
inc
popf
fmul
ret
test
lea
cmp
popa
xchg
xchg
mov
clc
fadd
insb
mov
sub
iret
pop
sahf
aad
adc
inc
pop
iret
cmp
scas
cltd
cmp
insl
sbb
mov
aad
ret
mov
jg
cmpl
add
mov
mov
jae
ret
insb
dec
sbb
cmp
xor
jl
clc
push
rorl
mov
roll
jmp
enter
lock
mov
jo
lods
add
cltd
sub
in
aaa
ss
subb
sub
sub
pop
jne
shr
mov
lods
mov
sub
test
movsl
pop
jo
cmp
data16
mov
sarb
xor
out
cmc
cmp
mov
shll
imul
inc
mov
icebp
sti
jb
push
jl
in
inc
daa
push
jb
inc
incl
mov
divl
loope
jmp
xor
push
push
lcall
mov
mov
frstor
xchg
sub
lods
jge
int3
xor
dec
sbb
enter
add
add
xchg
xchg
test
adc
mov
sub
cmpsl
inc
cmpsl
in
mov
test
cld
jmp
in
sbb
nop
lock
popa
pop
add
jnp
ljmp
and
mov
clc
inc
mov
push
out
mov
aad
inc
mov
mov
jns
xchg
and
shrb
mov
loopne
and
test
movsl
daa
xlat
mov
push
lds
adc
addr16
mov
subl
lret
js
loop
dec
data16
pusha
mov
inc
xlat
sbb
dec
incb
dec
xchg
xor
and
inc
add
push
adc
mov
sbb
idivl
xchg
aad
jns
int3
jo
inc
push
sub
js
popf
and
mov
lock
pusha
icebp
out
ret
and
sub
fsubs
lret
fstpl
sub
ret
mov
lods
or
orb
pusha
jecxz
mov
out
std
fs
in
popf
mov
add
xchg
ret
inc
pop
xlat
popa
cmc
or
mov
pop
loopne
mov
dec
lods
sub
loope
mov
xchg
movsb
fs
cmp
insl
mov
shlb
cmp
pop
shl
mov
push
into
mov
mov
outsb
repz
push
jmp
jl
or
adc
or
xchg
adc
iret
std
stos
enter
dec
cld
jno
or
push
roll
pusha
imul
push
and
adc
cs
xor
stos
repz
push
cmpsb
lea
inc
xchg
test
jno
sub
xor
push
insb
insl
pop
push
es
cmp
dec
sbb
pushf
imul
or
sbb
lods
aas
in
das
cmpsl
lods
dec
fcoml
push
dec
push
cltd
stos
push
add
jae
hlt
stos
sub
imul
inc
and
int3
push
stos
mov
pop
leave
sbb
std
pop
push
dec
inc
mov
cmpsb
mov
adc
sub
pop
loope
dec
mov
jge
push
mov
mov
movsb
das
add
sti
or
bound
add
lock
loope
inc
movsb
bound
idiv
xor
sahf
call
and
jno
aaa
dec
fnop
neg
mov
shlb
sub
dec
lods
jae
test
or
sub
ja
loope
adc
pop
push
fidivrs
adc
repz
sub
mov
jns
test
sbb
mov
sahf
scas
scas
add
fsts
adc
push
std
cmp
sub
jns
cmc
incb
test
push
push
hlt
icebp
xor
mov
sub
sub
or
or
mov
cmpsl
shlb
push
shrl
repz
testb
sahf
push
sbbl
push
shl
ljmp
dec
or
xor
sub
cmp
push
scas
xchg
ret
in
inc
mov
jno
sti
ja
adc
inc
xor
mov
aad
mov
push
mov
cmc
xchg
xchg
lods
mov
imul
scas
xor
jmp
push
cmp
xor
ds
data16
mov
or
inc
mov
fcmovnb
fmull
push
cld
sarl
in
xchg
std
mov
adc
mov
cmp
popa
out
xchg
cmp
ret
ret
jo
jp
jg
push
mov
adc
xor
xchg
insl
pusha
loop
dec
xor
clc
pusha
cmp
fildl
sbb
push
out
xor
lahf
iret
cmp
in
adc
jns
adc
sub
iret
lods
push
lea
mov
push
add
push
mov
mov
jmp
lret
sub
mov
sbb
stos
fs
testl
ja
pushf
or
adc
std
mov
addb
xor
adc
push
inc
add
pop
cmc
ds
test
mov
pop
mov
xchg
imul
scas
repz
repnz
mov
lahf
movsl
inc
dec
fldenv
and
int
xchg
loopne
adc
sub
mov
sub
imul
cmpsl
fwait
jo
dec
dec
pop
imul
mov
and
in
mov
outsb
aas
pushw
pop
add
sub
punpckhbw
icebp
in
or
mov
bound
mov
and
nop
push
inc
lcall
mov
out
aas
sub
bound
xchg
sub
sti
cmpsb
xor
jo
pop
pop
pushf
in
cltd
mov
xlat
mov
or
dec
dec
jmp
cli
sti
insb
jae
fucomi
dec
cmp
mov
into
js
mov
mov
stos
lods
mov
fsubs
cmc
and
aad
movsl
inc
inc
das
call
mov
mov
push
in
stos
cwtl
je
or
jle
insl
mov
mul
jle
inc
push
out
fisttpll
mov
lock
cmp
shl
pop
lods
imul
or
push
ret
fiadds
clc
mov
push
inc
cmpsl
dec
js
mov
stos
jp
pop
jb
fdivr
stc
mov
mov
pop
adc
shrb
jb
or
lret
sbb
mov
repz
addr16
mov
sbb
cwtl
sbb
cmp
int
mov
and
add
stos
mov
scas
cltd
repz
inc
scas
jns
cmpsl
pop
lret
mov
emms
imul
or
dec
sub
and
jecxz
adcl
adc
lret
xor
inc
push
dec
sbb
ret
push
clc
xchg
push
mov
xor
jle
aas
xor
add
xor
addr16
add
xlat
lds
mov
mov
push
jae
jbe
sbbl
xchg
fists
inc
div
pop
ja
mov
mov
cli
fidivrl
imul
and
call
dec
or
pop
add
outsl
pusha
xor
adc
mov
arpl
sti
sbb
loop
mov
cwtl
dec
orb
add
pop
add
xchg
inc
jb
xor
xor
cmc
cwtl
int
jmp
sbb
loopne
dec
orl
leave
popa
mov
jno
add
lret
shlb
cltd
out
arpl
jnp
fwait
js
xchg
jmp
repnz
mov
pop
fcomp
or
jne
fbstp
imul
adc
cld
scas
pop
mov
ja
sbb
fcoms
push
xchg
jge
mov
movsl
xchg
negb
lahf
ja
xor
stos
pushf
inc
sbb
outsb
push
adc
mov
das
test
rcrl
out
in
jp
add
pop
dec
mov
sub
out
push
aaa
adc
hlt
int
sbb
add
adc
sarl
fstl
stos
inc
aas
pop
test
insl
pushf
mov
push
and
cld
dec
sub
xchg
pop
decb
test
daa
mov
xor
ds
push
push
adc
lret
fistps
mov
and
test
hlt
roll
cmp
mov
push
mov
sub
scas
push
pop
movsl
mov
pop
cltd
mov
pop
ljmp
push
lock
testb
lret
pop
or
in
in
repz
shl
daa
hlt
adc
ret
and
push
das
mov
and
mov
and
pop
and
lds
or
add
fstl
scas
scas
sbb
mov
and
cmp
pop
jnp
pop
inc
lea
cld
gs
adc
mov
xchg
cmc
dec
inc
pop
mov
jnp
jle
and
dec
mov
out
push
jl
imul
and
outsl
mov
mov
jne
insb
mov
mov
repnz
fcomps
sub
movsl
pushaw
mov
bound
push
push
xchg
jp
fists
stos
mov
mov
dec
loopne
in
push
adc
jge
nop
cmp
jb
push
in
or
dec
mov
xor
std
fimull
push
mov
ror
gs
and
jge
lods
xor
sahf
hlt
aaa
mov
jne
mov
out
fwait
pop
arpl
gs
sbb
dec
int
aam
insl
or
push
mov
lahf
pop
lret
mov
mov
lock
jns
repnz
pop
push
pop
test
mov
mov
jg
sub
iret
and
inc
or
repnz
xor
xchg
xchg
sub
dec
out
mov
ret
fsubrs
aas
nop
or
push
orl
fnsave
jle
add
roll
fisttpl
dec
mov
or
cmpsb
div
add
xor
pop
xor
in
push
fcmovb
mov
adc
fbstp
int
dec
mov
loop
push
or
rolb
inc
shll
shll
rcrb
xor
fldenv
popf
pop
mov
inc
bound
neg
out
inc
ljmp
push
jge
pusha
push
lods
and
mov
popa
je
popf
mov
dec
insb
pop
ja
sub
adcl
add
and
sbb
popa
inc
xor
scas
dec
cwtl
jns
mov
xorl
shlb
xor
cmp
pop
lods
cmp
out
repnz
das
jecxz
cmp
out
inc
flds
daa
rcrl
lret
add
psraw
or
sbb
cmp
xor
fstps
stos
subl
jne
repnz
mov
push
aaa
cltd
cld
rorl
xchg
lahf
mov
add
fisubs
sbb
or
inc
stos
lret
cltd
repnz
fsub
test
dec
lea
rol
dec
xchg
imul
adc
cltd
lods
sub
out
or
stos
pop
lods
mov
mov
jmp
movsl
pop
jecxz
fldt
test
pop
mov
lahf
call
mov
add
xor
jne
mov
xchg
sbb
insb
call
jo
xor
push
cmc
lock
int
or
push
pop
leave
shl
cmpsb
sbb
fnstenv
add
mov
jg
mov
das
mov
out
sbbl
mov
scas
mov
lret
cmp
mov
and
fnstcw
fimuls
in
stc
andb
outsl
xor
cmp
pop
sti
call
dec
adc
frstor
mov
jne
jb
sub
sub
adc
and
adc
mov
aas
sub
out
cmp
and
enter
jno
data16
rcll
mov
out
mov
pop
inc
loope
mov
rcl
out
mov
test
pop
repnz
call
sub
divl
int3
pusha
pushl
mov
cmp
shll
test
or
mov
adc
sub
and
out
pop
aaa
sub
pop
cld
aas
out
popf
stc
test
pop
mov
in
pop
and
loope
hlt
push
fwait
stos
popa
jg
cmp
mov
aaa
fstpl
xchg
es
sub
xchg
push
ljmp
test
or
xchg
sub
cwtl
adc
les
cmp
inc
adc
push
xchg
icebp
aad
jge
repz
pop
push
mov
insb
xor
and
aad
pop
in
stos
cld
mov
sub
jne
movsb
cld
fcompl
aaa
popa
ret
test
push
xchg
lea
mov
lock
dec
aad
sub
cld
cmp
loop
out
mov
jae
movsl
es
in
cmp
jns
mov
stos
sar
jg
roll
rolb
xchg
aad
cmp
or
popa
push
xchg
jns
sub
pop
adc
aad
xor
sbb
insb
pop
aaa
mov
jmp
and
les
popf
pop
arpl
push
nop
push
sbbb
pop
into
fdivl
in
cmp
call
jns
daa
or
frstor
lock
cmpsb
sbb
push
test
push
xor
mov
repnz
push
clc
xlat
pop
inc
fimull
std
push
sbb
faddl
int3
and
cmp
ret
pusha
mov
fbstp
mov
mov
jnp
pop
cli
movsl
adc
mov
or
push
andl
add
sbbl
out
inc
stos
out
out
aas
lahf
hlt
mov
adc
push
pop
out
hlt
add
dec
js
fcompl
xchg
sub
add
push
out
out
mov
lret
push
jnp,pn
pop
test
lods
xchg
cltd
out
and
sub
cmp
jmp
jg
xor
or
sbb
or
xchg
jno
xor
enter
add
xchg
sbb
fmuls
sub
lcall
lods
cmp
call
mov
or
scas
je
arpl
xchg
inc
test
inc
cmpsb
cmp
push
xchg
lds
dec
mov
xchg
xor
mov
pop
mov
pop
cmp
inc
xchg
push
imul
call
cmp
iret
push
enter
iret
xor
dec
fisubrl
xchg
lret
pop
out
arpl
enter
sub
cmp
jp
xor
arpl
cmp
jae
movsl
jl
sbb
jnp
jge
dec
ds
xchg
shlb
lds
xlat
cmp
dec
cmp
mov
test
push
loopne
pop
push
sbb
pop
sbb
cs
mov
popa
mov
push
lcall
mov
and
sub
dec
mov
jb
lcall
mov
repnz
add
xor
inc
jae
fistps
dec
cs
or
imul
or
xor
mov
sub
shrl
out
jns
and
bound
int3
cmpsl
iret
enter
xor
pop
pop
int3
or
js
dec
mov
loop
in
adc
es
push
jp
or
dec
jne
adc
es
sub
or
xchg
sub
jp
fs
dec
movsl
dec
jne
and
into
fs
sahf
inc
push
push
nop
out
fldl
xchg
pop
xor
mov
ja
sub
push
inc
and
push
imul
out
sub
data16
mov
sub
inc
insb
movsl
cwtl
push
ret
push
jae
nop
sbb
or
leave
add
pop
fnstenv
jecxz
sti
cmp
dec
mov
loope,pt
or
or
icebp
ja
or
les
fcoml
mov
out
xchg
xchg
push
mov
int3
loop
jmp
jge
inc
mov
ret
ret
pop
ret
aas
stc
fidivrl
test
lret
sub
mov
scas
or
adc
leave
add
fstps
fwait
and
es
sbb
lahf
into
arpl
movb
sbb
push
mov
mov
and
mov
cmp
pop
incl
pop
neg
sub
outsl
into
bound
sub
inc
and
jl
arpl
stos
mov
or
sbb
js
arpl
stc
pop
pop
jnp
pop
inc
lods
or
inc
pusha
nop
mov
andl
sub
jae
cmpsb
mov
pop
cmp
aad
daa
cltd
scas
das
outsb
add
repnz
and
jmp
dec
rcr
aad
xchg
jae
sar
inc
and
les
xchg
pop
inc
ret
scas
xchg
pusha
data16
push
mov
inc
cmp
or
fimuls
and
loop
sbb
push
mov
test
hlt
or
enter
fnsave
sub
xchg
cltd
mov
lods
pop
cmpsb
and
xchg
add
shlb
inc
xchg
loopne
or
push
inc
andl
mov
xlat
sarb
or
in
js
lods
popf
mov
nop
pop
pop
pop
inc
jb
or
adc
in
adcl
add
loopne,pn
ja
dec
inc
cli
sbb
mov
jns
xchg
ror
lea
inc
dec
ja
and
xlat
pop
push
roll
test
int3
mov
add
dec
xlat
hlt
popa
test
roll
fwait
das
push
loopne
into
out
lds
sbb
mov
xchg
aam
orl
cmpsl
mov
test
sti
adc
lcall
mov
mov
mov
or
and
dec
jmp
mov
xor
jp
aam
dec
dec
out
jge
mov
hlt
movsl
repnz
pop
push
andl
je
out
dec
sbb
sbb
lea
nop
sbb
jecxz
test
dec
rolb
stos
jo
cmp
mov
scas
rorb
cmp
fcmove
push
cld
push
inc
push
mov
jno
sahf
sti
and
cmp
mov
test
cmpsl
xor
or
fsubrs
pop
or
jne
pop
pop
jne
inc
dec
cmp
lret
test
ret
inc
icebp
scas
xchg
loope
std
xlat
xchg
add
mov
inc
aas
pop
jge
pop
cltd
mov
cmp
out
add
pusha
xor
fwait
aad
adc
jle
add
pop
fs
cwtl
divl
mov
lock
pop
mov
pop
insl
and
inc
and
test
test
jecxz
push
sbb
mov
lock
jbe
adc
es
sub
movsl
iret
call
jns
lods
jbe
and
and
fstl
pop
dec
bound
movsl
adc
cmovl
jnp
push
negl
jae
js
in
jg
mov
cmp
lock
cmp
mov
into
adc
push
andb
sbb
div
cmc
repnz
in
and
cmp
lahf
fisttpll
test
mov
inc
inc
mov
xchg
xor
jo
popf
cmp
dec
repnz
or
in
jg
test
dec
push
push
sbb
lock
scas
adc
add
pop
aaa
cs
pop
push
or
iret
movsb
sub
pop
mov
jl
sub
insl
push
adc
cmc
jle
inc
test
out
ss
decb
icebp
sti
mov
mov
or
dec
adc
jg
inc
and
mov
fcomps
fdivl
mov
pop
mov
cwtl
jnp
out
cmp
int
movsl
or
lds
es
add
push
xor
jge
pushf
pusha
imul
iret
or
or
xlat
pop
cmp
inc
xchg
push
aaa
int
sbb
jno
orb
fcomip
inc
pop
jmp
inc
inc
mov
dec
jle
inc
scas
inc
inc
scas
fidivrs
das
add
mov
jne
dec
pop
js
les
insl
dec
sti
lret
stos
popf
stos
xlat
shrl
mov
pusha
mov
insl
dec
popf
fwait
inc
pop
sub
scas
out
sti
daa
pop
push
das
mov
inc
rcll
adc
or
cmp
inc
mov
pushf
add
fbstp
lcall
jl
dec
movsl
sbb
popl
cltd
testl
push
mov
sub
in
movsb
mov
or
adc
pop
jno
inc
ljmp
and
jns
xor
test
sbb
sub
mov
repz
sub
stos
pusha
or
and
movsl
sbb
arpl
ret
fs
add
or
sbb
sbb
xor
mov
lock
or
out
mov
hlt
pop
mov
mov
adc
dec
das
pusha
imul
sbb
lahf
fidivl
test
lea
cwtl
adc
fdivrl
add
inc
pop
mov
jb
movsb
xchg
mov
scas
lea
adc
mov
data16
add
ret
cmp
push
add
xor
push
lock
mov
mov
faddl
cmp
push
cld
and
add
mov
sar
jns
fbld
ret
enter
mov
out
pop
inc
pop
shll
xor
ds
pop
roll
adc
es
mov
jmp
or
loope
xlat
xchg
cmp
imul
or
jae
mov
fwait
mov
pop
cli
insl
aas
js
add
adc
je
psrlq
sbb
cmp
xchg
in
test
sub
das
adc
insl
and
jl,pt
or
fsub
mov
lahf
repz
push
push
shlb
pop
xchg
mov
sarb
adc
mov
jp
fs
pushf
dec
mov
std
pop
pushf
inc
bound
fnsave
and
jg
push
out
mov
inc
scas
cmpsb
mov
fwait
scas
cld
fiadds
cltd
cld
xchg
cs
xlat
ficomps
adc
push
push
push
clc
lods
and
out
mov
cld
dec
lahf
sbb
xchg
mov
mov
fnstenv
mov
mov
mov
lods
fcmove
and
fsts
ss
ja
cmp
mov
lret
cmpl
sub
jns
popf
pusha
jl
inc
mov
dec
outsl
inc
lahf
pusha
mov
sahf
push
fisubrl
insb
adc
into
pop
mov
sub
sqrtps
sbb
repnz
jl
icebp
xchg
lods
nop
cs
xorl
mov
or
stos
iret
cmovbe
inc
mov
lods
or
cs
or
decl
adc
cli
mov
mov
cmpsb
mov
or
in
dec
inc
cmpsl
fwait
pop
cld
push
orl
inc
cmp
xor
fnsave
sbb
rcll
and
or
gs
sbb
mov
movaps
in
pop
dec
dec
pop
mov
dec
add
xor
scas
mov
ror
orl
inc
adc
imull
out
adc
ljmp
aad
inc
loop
stc
lcall
loopne
sahf
add
mov
xchg
inc
shll
mov
daa
pop
xor
ret
js
pop
dec
test
mov
pop
icebp
hlt
jle
test
sub
add
pop
xor
add
xchg
fidivl
inc
fidivrs
push
call
pop
mov
and
ss
xlat
jo
cmc
mov
cltd
rcrb
je
xchg
loope
outsl
xchg
arpl
shll
icebp
mov
lock
loop
in
inc
push
cmp
xchg
xor
fistl
sub
mov
jnp
std
pushl
outsb
and
fwait
dec
xchg
mov
in
in
neg
push
lods
or
or
xor
jns
adc
ds
fmull
xor
scas
push
pop
ja
push
jl
push
pop
pop
aad
cmp
xchg
pop
jl
sub
add
leave
cli
ret
and
cmp
sub
ret
xor
add
rol
jne
out
sub
and
mov
jmp
lcall
xor
fstp
mov
mov
mov
dec
adc
add
fistps
dec
mov
push
sbb
fisubl
xchg
cltd
icebp
fidivl
std
pop
mov
notb
jo
sarl
dec
mov
nop
ret
insl
dec
ljmp
js
fnstsw
inc
jg
or
push
mov
mov
jmp
subps
dec
aas
rcll
arpl
dec
fwait
cli
pusha
push
fstpt
in
jp
mov
fldl
gs
and
mov
push
sbb
or
and
bound
bound
mov
arpl
cmc
enter
outsb
scas
or
bound
and
test
in
andb
mov
cmpsb
fs
out
sub
push
cmp
aad
fwait
aad
dec
and
inc
out
sar
ret
cmpsb
mov
push
adc
xchg
clc
pop
mov
xor
cmpsl
xchg
lret
popa
dec
mov
sub
bound
fsubrl
mov
dec
mov
inc
mov
scas
push
sbb
rcrb
jg
sub
sub
or
incb
cmp
aaa
sub
rcl
popa
dec
jne
pop
mov
mov
lahf
in
xor
inc
and
lods
arpl
jno
pop
pushf
das
outsb
xor
aam
test
andl
fs
outsl
shlb
pop
adc
sbb
add
popa
pop
mov
popa
mov
cltd
aam
rclb
or
sbb
pop
lea
ficoml
dec
lods
inc
mov
inc
adc
mov
push
fisubrs
out
loopne
fs
loop
push
mov
pop
dec
call
insl
aad
das
jl
jecxz
xor
push
or
aam
and
pop
dec
repz
xor
mov
enter
sbb
scas
icebp
xor
pusha
sti
jne
inc
push
adc
div
mov
cs
jno
xor
ret
imulb
divps
shlb
and
in
mov
pop
jmp
mov
jecxz
xchg
xchg
and
ret
rorl
jnp
xchg
imul
adc
imul
adc
imul
hlt
push
mov
es
inc
or
std
mov
fistpl
es
push
push
mov
fnsave
fistpll
mov
sbb
xor
call
sub
scas
add
mov
dec
pop
in
jmp
inc
pop
lods
das
jge
dec
sub
pop
xor
movsl
or
mov
call
imul
icebp
or
pushf
sub
or
test
sub
jae
scas
add
xor
dec
inc
ficompl
sub
pop
lock
inc
pop
push
mov
jl
into
cmp
cmp
pop
jmp
cltd
jmp
ret
bound
cltd
cli
lret
dec
fnstenv
push
sbbb
aad
dec
out
and
sbb
sbb
pushf
testb
sub
je
xchg
int3
mov
push
test
cltd
adc
and
adc
mov
push
shlb
cmp
dec
lock
pop
int
mov
pop
mov
cmp
iret
arpl
mov
push
test
xchg
mov
in
cli
xchg
iret
lahf
shr
mov
scas
fdivp
pop
cltd
fldt
jmp
push
push
pushf
ret
jbe
xor
adc
rcll
cmp
pop
push
dec
jo
sbb
and
loopne
data16
outsb
rcrl
xchg
loope
mov
mov
jp
aam
cmp
shlb
cmc
sahf
adc
cwtl
addb
jle
cmp
pop
and
adc
fucom
add
jmp
pop
fadds
repnz
push
dec
out
adc
sub
push
xchg
add
sub
mov
xor
movsl
fcmovu
lret
imul
sbb
pop
fwait
mov
mov
fsubrs
lret
ror
sarb
inc
pop
mov
xor
mov
cmpsl
loop
das
jl
fcmovu
inc
jb
jg
mov
and
outsl
mov
xor
xchg
sbb
pushf
lcall
rcrl
sub
dec
outsl
xchg
adc
ljmp
sbb
or
sarl
sarl
sub
mov
sub
repz
push
les
cld
popf
outsb
cmp
adc
stos
lea
cmp
repz
lods
and
or
loope
cli
arpl
push
sub
mov
sbb
loope
xor
and
add
jecxz
movd
add
push
jle
shlb
mov
or
inc
add
mov
popa
sarb
in
stos
lods
push
mov
cwtl
out
sub
sbb
aaa
cmp
jecxz
sbb
gs
dec
and
cmp
clc
stc
jl
jae
add
pop
stos
jae
mov
xor
lcall
inc
and
xchg
aad
jmp
adc
xchg
ret
mov
das
xchg
cmpsl
jmp
sub
mov
pop
notb
adc
push
fdivrs
sahf
sbb
add
push
cmp
rorb
sbbl
stos
data16
xor
stos
scas
push
fdiv
loope
repnz
inc
imul
into
pop
movsb
or
jg
jno
mov
add
repz
ja
aam
cmp
sub
outsb
mov
add
mov
push
xor
or
mov
mov
mov
jno,pt
call
divb
xor
cmp
dec
lea
fnstsw
inc
or
sbb
adc
mov
ret
jo
test
cli
jbe
lock
pusha
into
cmp
push
cmp
mov
mov
push
and
xchg
push
sbb
leave
lods
add
xchg
cmp
pushf
lods
adc
dec
dec
add
and
jns
scas
shrl
inc
scas
sub
mov
lahf
enter
into
pop
xchg
cmc
loop
leave
sbb
push
add
cwtl
mov
bound
arpl
daa
loopne
pop
dec
pop
dec
jae
xor
adc
jne
add
mov
mov
or
cmp
dec
xchg
daa
call
les
ss
sub
jg
ds
push
dec
in
sub
pusha
aaa
sub
in
mov
rep
xchg
in
test
rolb
dec
fs
xchg
mov
std
gs
fimuls
inc
flds
xor
adc
dec
dec
mov
iret
jp
ss
jo
lret
cmp
leave
sbb
and
dec
loope
or
pop
outsb
into
mov
imul
int
call
ss
pusha
imul
xor
clc
rorb
loop
dec
cmpsl
cltd
loope
push
out
adc
mov
pop
gs
inc
lcall
fcmovnb
inc
xchg
mov
icebp
lret
gs
jns
sbb
inc
mov
sub
cmpsb
enter
and
imul
popa
adc
push
ja
aad
xor
jns
mov
mov
push
add
add
jmp
sbbb
xor
cld
adc
push
xchg
pop
push
sub
cmc
push
fcmovne
rol
scas
imul
sub
fbstp
adc
adc
jmp
mov
xlat
lret
push
sbb
outsl
fsts
mov
mov
sub
out
sbb
and
loope
call
call
dec
loop
outsb
dec
enter
xchg
adcl
push
or
sub
hlt
icebp
inc
sahf
fcoms
mov
jl
dec
outsb
xchg
pop
test
arpl
sub
push
xor
mov
dec
cmp
pushf
fistps
jb
mov
adcl
pop
fadds
inc
ret
int
mov
inc
movsl
jbe
add
add
dec
loope
gs
aas
aam
dec
push
and
jno
xchg
ja
mov
icebp
pop
dec
lahf
adc
and
dec
mov
arpl
dec
int
bound
stc
les
xchg
inc
xor
jl
leave
ret
subl
ror
or
leave
jge
fs
cmp
lret
dec
add
iret
cltd
int
dec
out
pushf
mov
in
mov
jmp
xchg
jbe
adc
adc
insl
adc
inc
add
enter
adc
dec
dec
out
jle
ret
push
sub
jecxz
leave
clc
cmp
mov
stos
push
mov
mov
or
add
push
lods
mov
push
addr16
pop
mov
dec
loope
push
inc
mov
cli
push
icebp
aaa
or
lods
test
in
push
jns
fistpl
mov
push
enter
mov
xchg
pop
hlt
lods
leave
mov
xor
add
mov
lret
lahf
sahf
cwtl
ja
pop
sub
mov
sbb
jbe
xchg
arpl
push
mov
pushf
paddw
aaa
mov
movsl
jl
mov
add
add
je
mov
int
fildl
jnp
add
cmc
dec
stc
inc
jmp
jmp
pop
mov
cmp
push
dec
jb
cmp
std
iret
call
enter
sub
xchg
inc
adc
fsts
cli
lock
cltd
xchg
jge
xchg
in
lock
mov
push
push
jno
jp
cmp
sbb
pop
std
pushf
adc
xor
mov
push
lahf
pop
mov
sahf
push
jge
out
and
lahf
pushf
shl
push
adc
ret
stos
cs
pop
cmpsl
lcall
int
sbb
sub
add
cwtl
shrl
shrd
aam
inc
int3
xor
mov
or
dec
lahf
mov
jne
and
push
cmp
push
sbb
mov
es
cltd
inc
fbstp
aam
mov
mov
mov
adc
mov
jno
mov
and
popa
movsl
dec
or
clc
in
lock
push
lret
shl
push
sbb
jb
push
xchg
mov
xor
jno
mov
mov
clc
movsl
xchg
test
ret
sub
add
in
mov
in
cmp
dec
push
and
stc
jnp
or
shr
rorl
inc
mov
outsb
out
sbb
pop
add
fisttpll
mov
iret
and
xchg
adc
xchg
xor
lds
loop
arpl
mov
xor
push
add
cmp
lock
cmp
fs
inc
fmul
fdivp
into
inc
rolb
mov
pop
ret
jo
addr16
imul
cmp
mov
adc
inc
fistps
notl
jbe
cwtl
lea
mov
bound
imul
outsl
jae
inc
sub
ja
xor
bound
adc
ljmp
and
fwait
out
es
test
aad
pop
and
int
out
daa
mov
bound
pop
in
adc
cmp
dec
jle
pop
dec
jns
dec
cld
and
mov
sti
data16
mov
adcb
in
cmp
xchg
mov
fbld
inc
push
cltd
fistpl
xor
cmp
lret
jbe
mov
movsl
lds
test
push
add
inc
test
dec
aas
clc
lret
add
pushf
inc
outsl
sub
divl
sbb
hlt
xor
lock
pushf
adc
pop
inc
scas
mov
pop
ret
cmpl
notb
fdivs
adc
aam
je
sub
push
pushf
jp
fistpl
imulb
mov
xor
mov
lods
orl
mov
jecxz
into
add
xchg
test
mov
xor
xchg
sbb
sbb
jo
stos
jno
xchg
leave
jge
das
mov
cmp
push
push
pop
and
das
jmp
xchg
imul
xchg
xchg
xor
or
pusha
sbb
ficoml
xor
xchg
inc
adc
push
or
jle
fwait
leave
inc
push
push
jbe
sahf
ret
sub
push
shr
push
lods
push
dec
xchg
daa
sbb
mov
rorb
pop
push
mov
stos
jo
addr16
insb
mov
subb
sbb
add
call
adc
sbb
jg
dec
push
and
push
mov
enter
pop
push
prefetcht1
pop
gs
xor
loopne
xchg
xchg
pop
js
aad
out
jmp
jbe
sarl
lods
dec
std
or
jmp
addl
sarb
fldl
pop
mov
nop
or
adc
or
sarl
adc
gs
cmp
xlat
jp
or
jo
dec
mov
add
incl
fcmove
jns
sbb
pushf
hlt
and
adc
lcall
or
lret
push
sub
lds
inc
jp
mov
add
mov
enter
sbb
fwait
sahf
test
sbb
and
sti
jle
js
pop
fldcw
in
xchg
mov
pop
jbe
and
fmuls
push
stc
in
aaa
bound
jmp
sti
cmp
push
mov
mov
ss
mov
je
aaa
mov
pop
sbb
fldenv
dec
jle
push
in
adc
cmp
sub
dec
mov
and
jnp
aad
mov
ret
or
jecxz
jmp
sub
mul
rorl
mov
push
imul
xchg
test
cs
insl
or
mov
sysret
mov
rorl
arpl
jge
and
or
cmp
cmp
mov
adc
int3
lods
scas
sub
cli
ret
popa
hlt
adc
xlat
int3
sti
xchg
dec
push
lds
dec
add
mov
rcll
mov
xor
xlat
sub
mov
mov
xor
pop
sbbl
pop
and
cli
mov
inc
sbb
mov
clc
fiadds
hlt
aam
pop
mov
sbb
push
xchg
test
xchg
lods
shll
fadd
mov
cmpsl
stos
or
cwtl
pop
ja
mov
int
and
imul
lcall
adc
or
jnp
xor
jecxz
push
lret
add
adc
sbb
mov
pop
adc
dec
mov
clc
sbb
fldcw
jmp
adc
cmp
mov
into
adcb
add
add
insl
lock
rcrb
pop
add
cmp
jg
scas
lock
xchg
xchg
adcb
push
mov
lock
sti
inc
sbb
aad
in
int3
sbb
push
sahf
adcb
fcmovb
mov
lods
test
inc
mov
xor
jb
imul
jno
and
and
inc
stc
lock
xchg
mov
dec
push
adc
mov
sub
inc
jne
cli
fimuls
fistps
jge
je
cmp
scas
dec
decl
inc
popf
sbb
jbe
push
xor
mov
nop
std
pusha
rol
xorl
ffreep
stos
xchg
mov
jo
repz
xchg
fs
add
xchg
cmc
xlat
or
fiadds
cmpsl
sbbl
mov
add
xchg
xchg
fcoml
xchg
mov
mov
enter
jmp
mov
mov
mov
adc
dec
xchg
mov
incl
fstps
pop
popa
fwait
push
lods
movsl
loopne
mov
fists
push
fcom
aas
sahf
mov
loopne
nop
movsl
adc
imul
mov
rcll
adc
scas
adc
dec
pop
mov
jle
or
lds
dec
pusha
mov
mov
dec
mov
xor
pop
enter
mov
xlat
mov
leave
repz
loope
jne
hlt
adc
adc
jg
out
jno
shlb
add
fwait
into
xor
fistpl
out
push
adc
lods
and
lods
data16
xor
add
push
dec
aas
jo
movsl
fwait
or
add
test
fwait
in
push
dec
test
aad
lock
js
and
ficompl
and
repz
mov
mov
inc
iret
cs
cld
call
or
xor
sbb
ret
mov
xchg
scas
xchg
shlb
sahf
inc
lods
in
mov
lods
pusha
xor
shrl
das
xchg
mov
push
jbe
mov
jno
out
testb
pushf
notb
cmpsb
sarl
sub
addr16
xchg
cmp
push
jo
push
mov
sub
je
pop
lock
stos
incb
in
push
ffreep
jp
lock
add
mov
js
jne
sbb
pop
in
dec
push
jno
clc
fistps
loope
add
lods
xadd
test
push
sbb
stos
xor
dec
out
stc
jno
std
out
jne
push
das
out
xchg
and
cld
mov
mov
mov
pushf
enter
outsb
jbe
mov
adc
mov
jmp
cmc
pushf
popa
clc
inc
adc
into
mov
ja
and
shlb
ss
imul
inc
rcl
cmc
mov
mov
dec
movsl
cmp
mov
pusha
push
mov
mov
mov
pop
xchg
sub
inc
mov
data16
icebp
adc
dec
imul
ss
rcll
ja
pop
enter
pop
or
inc
dec
scas
movl
mov
es
lods
push
mov
add
sub
mov
imul
out
in
lcall
pop
mov
cmp
scas
add
insb
negl
mov
adc
test
outsl
das
mov
fldt
jns
sarb
cmp
mov
add
dec
sbb
cli
adc
test
mov
mov
mov
mov
ja
pop
xor
or
xor
std
add
mov
jns
and
jae
sbb
xchg
filds
xchg
inc
cmpb
push
xor
lds
sbb
outsl
inc
test
sarl
xchg
subb
push
insl
dec
inc
sub
insb
sbb
adc
push
xor
inc
mov
pop
sbb
cwtl
imul
mov
xchg
inc
mov
fsubrl
out
pop
sub
ret
xchg
jnp
es
jns
mov
or
cli
rclb
pop
mov
aad
lds
shr
lahf
sub
inc
lret
sub
sarl
and
fwait
cmpsb
sub
inc
fnstenv
stc
lahf
testb
jp
ret
xchg
lock
es
das
mov
xchg
popf
and
dec
filds
scas
push
fwait
int
jp
clc
xchg
sbb
push
cs
shl
sti
in
in
xor
std
outsl
jae
cmp
push
mov
les
dec
lret
jl
arpl
iret
inc
jp
jne
lret
xor
jb
pop
dec
aas
addr16
test
test
cmpsb
lods
jno
push
sbb
jg
adc
int
das
xchg
fidivs
cmp
xor
gs
sub
ficoms
mov
mov
repnz
mull
repz
repnz
add
xchg
mov
int3
fnstcw
push
push
in
mov
rol
shrl
jmp
and
lds
mov
lret
sti
stc
sub
cmp
sub
ret
or
push
pushf
jle
das
push
mov
jp
rorl
xor
add
lcall
cmpsl
jno
sbb
pushf
out
add
fcmovnbe
adc
sbb
pop
loopne
and
out
jns
cmp
arpl
pop
mov
jae
sbb
inc
xor
js
test
xchg
or
jbe
bound
mov
and
lods
xchg
dec
mov
mov
xchg
fs
inc
repnz
inc
shll
sbb
add
push
ret
xchg
cmpl
xor
fldenv
pusha
lods
push
das
mov
xor
push
dec
inc
mov
and
xchg
jno
jbe
rep
loopne
xchg
cs
xchg
cmp
ljmp
jns
or
ja
add
lret
fwait
dec
adc
int3
cmp
inc
loop
das
jecxz
js
sub
out
in
subl
sub
lds
mov
xchg
in
pop
ds
cmp
jecxz
jne
cmp
pop
push
xor
jmp
enter
and
es
inc
mov
pop
lods
xchg
and
pop
cmp
enter
xchg
fstpt
call
pop
js
xchg
mov
mov
rep
sbb
and
mov
sub
push
stos
clc
inc
outsb
sarl
mov
xor
sahf
fdivr
ds
lcall
daa
jae
das
jecxz
dec
loope
mov
ret
sbbb
clc
sti
lret
xor
push
mov
ret
rorb
test
lock
lock
and
test
jmp
mov
pop
popa
sub
sub
inc
jg
push
mov
repz
pop
je
lods
pusha
jmp
movsl
scas
and
mov
movsb
push
pusha
adc
pushf
fwait
outsl
pop
scas
jae
jns
xor
xchg
mov
jp
pushf
inc
and
sarl
mov
jmp
sarb
xchg
in
cmp
push
and
sbb
les
mov
cmp
fs
dec
popa
mov
in
mov
mov
cmc
jmp
jle
shlb
in
fwait
lds
lret
aaa
pop
insb
rorl
rcrb
out
lock
inc
dec
mov
stc
pop
insb
sarl
or
mov
mov
xlat
mov
adc
lret
pop
hlt
lock
and
sub
test
adc
pushf
out
ljmp
fisttpl
mov
push
inc
mov
into
pushf
in
dec
in
pop
ss
mov
push
sti
fcoms
rcrb
sub
int3
dec
test
in
hlt
add
inc
std
sahf
mov
mov
outsl
pop
pop
mov
out
adc
mov
mov
adc
ljmp
pop
jmp
lcall
sti
call
nop
cld
out
iret
mov
jnp
loope
xchg
inc
add
js
dec
pop
leave
jne
inc
push
pop
adc
mov
xchg
sarb
sbb
aam
test
jb
mov
xchg
xor
mov
xchg
andl
cmpsl
sub
dec
mov
mov
bound
push
movsb
mov
add
mov
xchg
aam
into
add
lcall
lret
bound
lods
sbb
arpl
fwait
sub
outsb
cmp
add
inc
push
or
clc
int3
xchg
fadd
fistps
lds
jns
mov
add
cmp
inc
mov
sbb
in
pop
fdivp
cmpsl
lock
inc
repnz
and
pop
into
dec
adc
fwait
sbb
cmp
pushf
idivb
inc
jg
shlb
mov
es
scas
test
jno
jge
pop
and
ret
shll
cmpl
insb
imul
sbb
clc
mov
jno
xchg
xor
es
icebp
cmp
or
inc
mov
mov
cmp
imul
outsb
shll
mov
popl
mov
lds
enter
cmp
call
push
or
pop
pusha
out
les
dec
mov
repnz
ja
ret
push
cmc
xchg
scas
sbb
adc
xorb
int3
jl
aad
dec
imul
fldenv
push
imul
call
dec
fistl
xchg
test
lcall
inc
or
test
imul
test
stos
xchg
fsubr
enter
pusha
stos
out
pop
xchg
rorb
mov
cmc
int
push
cli
shl
pop
popf
and
xor
subb
jae
cld
scas
push
mov
faddp
adc
or
inc
dec
push
fwait
ds
or
aas
mov
aam
dec
das
fldcw
mov
xchg
icebp
daa
and
ret
clc
stos
xchg
pushf
pop
xchg
dec
add
stos
rorb
mov
push
aas
mov
ds
in
popa
lret
inc
aam
pop
sub
push
test
dec
xor
insb
leave
jne
inc
sahf
inc
jp
data16
pop
cmp
aad
xchg
mov
cmpl
xchg
or
shl
jmpw
sarb
std
aas
leave
int3
xlat
and
and
scas
mov
sbb
scas
lcall
pop
pop
dec
xor
adc
pop
pushf
jns
imul
in
fsubrp
pop
sub
loope
inc
hlt
mov
ljmp
push
xorb
sbb
adc
xor
insb
cmp
fimuls
inc
jbe
xchg
add
in
sub
jo
push
mov
mov
jo
js
or
clc
rorl
push
outsl
adc
mov
inc
jbe
sbb
xchg
and
in
push
dec
push
stc
lds
shl
aaa
dec
aas
add
or
mov
cmpsl
pop
pop
dec
fwait
push
out
sahf
ret
inc
lock
and
jne
mov
push
ret
popf
arpl
inc
push
int
shl
subb
arpl
dec
insb
jmp
adcb
pushf
add
loope
sub
aam
jns
lret
pusha
call
cmp
inc
fnstenv
push
bound
out
mov
dec
inc
sub
jae
pop
jb
mov
add
jge
outsl
add
or
imul
jns
mov
sbb
sub
daa
cli
push
dec
jg
bound
adc
jb
rol
imul
inc
add
out
aam
or
xorb
lret
sub
mov
cvtdq2ps
push
ss
cmp
dec
xchg
test
or
lcall
sahf
fdivrl
mov
xchg
cmp
cmc
push
pop
lcall
lea
outsl
imul
sub
loop
pop
cmp
mov
add
and
ljmp
dec
pop
or
iret
mov
dec
xchg
dec
mov
or
jb
fcmovb
and
mov
sbb
out
ret
cli
mov
loopne
out
adc
adc
push
and
mov
outsb
pop
pushf
popf
xchg
iret
mov
daa
mov
pop
neg
adc
cmc
sbbb
mov
repz
gs
pop
out
pop
cli
not
leave
xchg
ljmp
sub
out
jmp
push
sbb
mov
sub
mov
xchg
lret
rorb
shrl
fsubrl
adc
loope
outsl
adc
mov
inc
leave
in
es
xor
popf
es
outsb
cltd
pop
or
xor
stos
into
pop
int3
int3
sub
mov
dec
dec
cmp
or
in
lahf
jp
pushf
or
dec
push
insb
cmp
add
imul
and
sarb
adcb
add
lea
lcall
and
inc
stos
push
daa
cmp
shll
enter
std
in
stc
ljmp
clc
and
ret
data16
mov
dec
repz
or
inc
ljmp
dec
add
fists
dec
jns
mov
outsb
or
fsub
pusha
push
fwait
add
stos
mov
mov
mov
loop
cli
out
stc
mov
mov
xchg
sub
jle
cmp
je
frstor
xchg
je
xchg
mov
stos
lret
out
add
mull
test
mov
mov
rcr
imul
and
aam
sbb
push
and
ss
pop
mov
sub
dec
fstps
pop
pusha
and
out
insb
xlat
test
sahf
out
inc
push
push
mov
sub
lcall
lcall
addl
in
cmp
sbb
xor
mov
dec
shl
das
pop
pushf
hlt
mov
push
rclb
pusha
and
rorb
mov
fsubrs
mov
je
pusha
cmpl
jecxz
xchg
rclb
or
mov
test
sbb
ss
pop
in
loop
adc
xchg
adc
sub
and
pop
sahf
es
mov
shlb
push
aaa
enter
push
fdivp
cmp
or
data16
and
pushf
inc
lods
and
outsl
fisubrs
test
pop
fstl
dec
sub
fldl
pushf
in
movsb
adc
rol
mov
loop
xchg
push
nopl
pop
je
scas
mov
push
inc
dec
and
arpl
pop
icebp
mov
add
bts
jo
add
add
daa
mov
sti
mov
shrl
in
mov
fidivrl
popl
add
in
cltd
fwait
mov
mov
mov
pop
inc
add
or
cmpsb
cmp
es
test
or
xor
pop
cmpsb
add
xchg
scas
push
out
pop
neg
arpl
sbb
mov
ret
mov
dec
xor
mov
jle
pop
stos
cmc
add
jae
rcrl
sbbb
sti
shrl
xchg
inc
pushf
push
sbb
or
popa
jne
mov
adc
js
and
inc
pop
repnz
lret
inc
xlat
rcr
sti
push
cmp
sub
in
mov
testb
ss
and
adc
into
data16
cmp
or
aaa
mov
or
jl
frstpm(287
mov
xchg
outsl
adc
iret
cmp
in
adc
sbb
jbe,pn
fldenv
lds
lcall
loope
jo
sub
outsl
ja
hlt
arpl
mov
roll
and
xchg
xor
mov
xor
sub
shl
mov
jbe
in
mov
xchg
cltd
aaa
adc
jno
mov
sbb
dec
leave
mov
ret
push
lret
arpl
jo
fsubs
inc
mov
xchg
addr16
and
in
pop
mov
xor
stos
mov
push
and
js
xchg
cmp
dec
inc
adc
out
je
mov
fnstenv
dec
mov
iret
je
jge
push
jae
scas
call
dec
and
inc
push
ljmp
insb
and
push
inc
insb
xchg
mov
jo
popa
insb
sbb
pop
les
test
int3
out
mov
add
fcomp
cmpsb
andl
xor
test
movsl
frstor
xchg
aas
pop
dec
xor
mov
add
sbbb
js
cltd
mov
lods
sti
mov
lahf
sub
mov
xor
lods
call
lret
jge
xor
popf
in
ss
push
cwtl
stc
pusha
push
rorl
cmc
jmp
push
inc
or
lods
addr16
xchg
xor
cwtl
push
xor
lret
cmp
imul
fwait
mov
adc
popa
push
xchg
rcrb
int3
pop
jno
push
les
sub
dec
sub
outsl
sbb
sti
adc
test
xchg
mov
push
mov
clc
fmulp
fcomps
rcrl
je
add
sbb
mov
or
icebp
repnz
lods
pop
cmp
cwtl
cmpsl
xor
icebp
daa
enter
shl
dec
jbe
cmp
cli
mov
push
xchg
push
in
jecxz
mov
mov
test
pop
dec
mov
popa
push
in
mov
sub
xchg
in
loopne
mov
mov
xchg
push
cmp
aam
data16
pop
out
adc
jne
inc
negl
sub
sbb
or
xchg
xchg
sbb
loop
inc
test
lods
aaa
stos
push
mov
in
and
mov
fimuls
je
cmp
shl
jo
mov
mov
push
int
call
cmpsl
lahf
push
loopne
call
enter
fwait
iret
push
scas
push
sti
sub
popf
rcll
mov
inc
es
test
pop
ss
in
ljmp
icebp
mov
test
cmp
xchg
mov
in
inc
jnp
mov
cs
push
cmp
in
jbe
sahf
jg
and
rcll
ja
addr16
sub
pusha
mov
sbb
dec
ret
sahf
out
stos
sbb
xchg
mov
arpl
mov
pop
repz
mov
pop
in
sbb
add
adc
add
maskmovq
add
and
mov
cs
imul
std
scas
push
adc
jp
adc
cmp
loope
push
pop
cmp
daa
testl
movsl
sbb
test
dec
cld
mov
xlat
pop
sbb
arpl
ret
xor
mov
mov
mov
push
cltd
cmpb
inc
jbe
and
mov
push
mov
cmp
test
pusha
movsb
pop
fidivrl
pop
push
pop
xor
popa
stos
inc
mov
aaa
ret
lret
and
movsl
dec
fstps
lret
push
cmp
lahf
cmc
cwtl
std
add
mov
push
out
mov
enter
bnd
add
imul
scas
add
xchg
cli
cmpsb
dec
fldt
inc
xor
loopne
sbb
adc
dec
or
jb
xor
lret
or
in
push
out
dec
insl
xchg
push
jae
rorb
jmp
sarb
and
and
rcll
sbbl
insl
ja
rolb
std
mov
mov
xlat
pop
cwtl
or
cld
scas
sub
adc
sub
inc
pop
lahf
inc
cmp
and
int
jne
push
in
jl
sbb
mov
jae
es
pop
sub
test
int
push
fldt
fwait
les
lahf
dec
jmp
inc
jns
sbb
sub
in
subl
lods
sahf
ds
mov
xor
imul
testb
mov
adc
xchg
mov
cmp
lods
mov
add
pop
data16
stos
jne
add
mov
xchg
lret
test
adc
sub
fnstenv
clc
inc
js
inc
into
cmp
gs
lea
ljmp
xor
cmp
push
jle
imulb
pop
sub
jno
mov
stc
movsl
pop
mov
pop
mov
rorb
push
test
cli
pop
dec
hlt
cmpsl
fisubrs
sbb
dec
xor
fdiv
push
and
and
xchg
loopne
fs
mov
stc
jne
pop
insl
mov
cmc
int3
jge
das
negb
mov
cltd
cltd
add
pushw
or
scas
ljmp
ret
or
stos
lock
sbb
clc
out
sbbl
js
inc
ficomps
xchg
out
sbb
loop
adc
stos
xor
insl
loope
jne
mov
cmc
sub
sub
xor
je
dec
ljmp
jl
pop
pop
cmp
mov
lret
xor
sbb
call
int
mov
jae
in
push
frstpm(287
mov
pop
cmpsb
ret
adc
loope
jmp
sbb
push
lods
aad
jb
test
cs
and
mov
outsl
sub
xchg
sub
mov
adc
or
cltd
sub
popf
adc
sub
pop
push
icebp
push
lcall
ret
sub
cmp
int3
scas
cmp
push
fwait
mov
test
xor
cmp
inc
ljmp
fstl
movsl
popa
sahf
je
jb
or
adc
lahf
shll
inc
mov
mov
shl
dec
fcmove
pop
popf
rol
popa
and
and
lea
in
out
notb
scas
addr16
sbb
adc
loop
jo
xor
xchg
mov
loope
loop
jl
mov
sbb
xchg
add
es
cmp
fnstsw
aad
les
test
jbe
jmp
sbb
int3
pop
jge
test
outsl
fcmovnu
add
xchg
adc
ljmp
mov
outsl
fmuls
loope
sarb
loopne
nop
push
xchg
icebp
jl
enter
mov
dec
cmp
imul
loope
test
sbb
sbb
push
sub
mov
inc
repz
movl
xchg
cmc
fwait
pop
cmp
lds
icebp
xor
jnp
xchg
jg
fmull
mov
add
mov
jle
jae
fsubl
mov
dec
cwtl
adc
test
in
inc
pop
leave
movsl
in
or
sti
pop
xchg
out
aam
push
aad
ss
mov
fldenv
popf
lea
daa
in
pop
std
out
push
sub
and
push
sbb
loopne
push
add
scas
aad
pop
lods
rcll
jp
mov
push
scas
add
inc
iret
ss
cmc
roll
push
repz
mov
mov
aas
lock
sub
idivb
cmpsl
mov
shll
mov
jle
inc
je
inc
add
sahf
mov
pushf
sbb
xor
mov
das
add
xor
mov
xchg
mov
ja
out
ficompl
xorl
inc
cmpsb
out
ret
jne
fwait
int3
cmpl
jae
lret
scas
push
call
push
push
insb
pop
cmp
aam
mov
int
mov
negb
ret
sbb
mov
sti
inc
mov
daa
dec
cmp
into
pop
xchg
sbb
push
mov
fnstenv
mov
add
dec
fsubrp
fnsave
sub
test
movsb
add
pop
and
cmp
fldt
mov
inc
enter
cld
xor
and
mov
dec
call
and
nop
outsb
mov
das
push
or
jmp
adc
in
leave
jle
clc
xor
pop
shl
out
adc
test
insl
push
inc
xchg
in
xor
xchg
push
pop
sub
jecxz
xchg
into
dec
inc
jo
mov
test
dec
mov
mov
icebp
es
push
xchg
mov
dec
pop
mov
mov
mov
jp
and
pop
xchg
gs
adc
sbb
scas
adc
out
mov
leave
pop
jne
lods
push
pop
test
cmpsb
xchg
mov
inc
test
xor
push
jo
dec
lods
jns
and
xor
imul
sbb
push
jge
shrb
push
in
out
arpl
pop
jns
enter
mov
inc
sahf
push
andl
fs
outsb
sbb
xchg
mov
sbb
scas
sarb
cmp
rcr
mov
mov
push
xor
adc
dec
add
movsb
repnz
pop
lock
mov
inc
jge
arpl
fdivl
cwtl
lods
aad
xor
ss
pop
and
xchg
pop
flds
mov
inc
adc
call
push
iret
adc
bound
scas
or
outsl
xchg
lods
and
data16
lret
repz
mov
addr16
popa
push
sub
push
les
gs
sub
pop
movsl
pop
push
mov
lret
lcall
sub
and
adc
cmp
xchg
jno
inc
cmp
sbb
push
mov
cwtl
mov
stos
or
fisubrs
and
in
fiadds
jmp
shl
sbbl
or
push
and
in
gs
movsl
mov
push
aad
cmp
jle,pt
push
ss
mov
loop
xor
movsl
xor
pop
or
mov
arpl
filds
xchg
xchg
and
push
cli
mov
out
xor
in
and
or
inc
mov
popa
int3
jnp
sti
daa
jp
pop
jmp
es
pop
push
fwait
adc
lret
es
adc
imul
sub
ror
fimull
repnz
aaa
loop
and
xchg
pop
pushf
sahf
inc
and
popw
xorl
into
jbe
das
jno
imul
pop
into
sub
inc
xchg
sahf
mov
cli
popf
push
jne
mov
add
cmpsl
shll
xchg
lea
hlt
mov
sarl
in
mov
add
je
in
adc
adc
test
dec
sub
push
addl
cmp
lret
in
lret
xchg
pop
mov
mov
es
mov
jo
into
mov
mov
es
cltd
inc
shlb
daa
ja
xor
inc
mov
ja
cs
xchg
insl
xchg
mov
pop
aam
jp
int3
lods
xchg
cmpxchg
movsb
and
or
xor
sub
xor
pop
push
mov
cmp
jle
xor
cmp
jle
mov
ret
jo
es
loopne
lret
pusha
repz
fdivs
mov
subl
xchg
sub
jp
inc
push
jmp
stos
pop
xor
mov
mov
jg
stc
pop
jbe
insb
sub
xorl
add
inc
xor
xor
test
and
xor
insl
std
shll
mov
orb
jb
jle
mov
ret
push
aad
xor
add
icebp
das
scas
mov
push
faddp
adc
jnp
cmp
fsubrs
cmpsl
in
test
fs
push
xor
fmuls
mov
or
stos
inc
lds
jne
jg
dec
sbb
or
fstpl
out
adc
sub
jo
ret
aad
aas
add
lea
out
in
jge
or
push
test
push
cmpsl
mov
jmp
sbb
sub
mov
out
in
sbb
xchg
xchg
or
lahf
daa
adc
cmp
cmpb
add
pushl
xchg
add
out
inc
cmc
adc
imul
sub
fs
pop
movsl
mov
mov
mov
iret
mov
shll
sub
adc
bound
nop
test
sbb
rcrb
mov
scas
sub
jae
pop
popf
and
addl
pusha
adc
call
lea
insl
call
sbb
faddp
lret
push
in
mov
ret
in
arpl
jecxz
test
cwtl
sub
test
dec
stos
xchg
inc
cwtl
in
into
pop
adc
jae
mov
push
iret
push
andb
adc
sub
inc
xchg
js
dec
pop
push
dec
jb
mov
mov
les
repz
sbb
das
repnz
jl
out
xor
or
cli
or
xchg
cltd
test
mov
push
fst
hlt
dec
jmp
scas
or
cwtl
pusha
add
je
pop
gs
in
cli
imul
icebp
inc
pop
loopne
pop
aas
mov
mov
addb
or
pop
mov
dec
std
mov
push
out
aaa
jns
inc
mov
test
inc
cltd
xor
gs
xorl
divb
mov
xchg
add
jae
js
outsl
les
je
lret
inc
or
mov
lahf
jle
fsubrl
add
leave
mov
sub
xor
imul
aad
pop
fimuls
lods
mov
jle
popa
jo
scas
xchg
mov
loope
xor
dec
shl
mov
cmp
and
into
add
xchg
ret
daa
int3
xor
and
xor
aad
pusha
rorl
mov
and
and
dec
adc
mov
push
push
cmp
or
in
sbb
ffreep
xchg
inc
arpl
xchg
xor
lock
data16
es
pop
lods
pusha
fwait
aam
in
and
mov
cmc
sbb
lods
push
xor
scas
dec
sub
gs
bound
dec
xchg
pop
in
pop
fsubrl
insl
jnp
inc
insb
pusha
iret
cli
cld
xor
clc
jno
jg
loopne
or
dec
pop
cmc
popa
xorb
pop
jle
leave
push
cmc
jge
jecxz
push
fucomip
sbb
pusha
lret
push
jecxz
call
repnz
dec
fwait
rcrl
sarl
out
sub
test
pop
stos
sbb
ss
pop
dec
dec
fs
mov
xchg
into
lret
bound
sbb
dec
in
pop
or
jnp
mov
or
stos
pop
pop
js
push
lret
cmp
fsub
xor
xchg
sbb
dec
iret
xor
dec
mov
mov
movsb
push
pusha
add
push
push
and
stos
mov
fscale
addr16
mov
stc
scas
les
dec
leave
negb
mov
xchg
push
cs
sbb
pop
insl
mov
mov
stc
add
mov
insb
pop
sub
dec
jmp
sub
push
icebp
mov
push
aaa
pop
mov
mov
mov
lahf
adc
dec
xchg
clc
add
shll
mov
mov
outsb
jp
aas
mov
mov
scas
adc
popf
xchg
push
adc
mov
mov
ja
pop
xchg
jecxz
pop
mov
int
inc
add
cmpsb
xchg
pop
sbb
inc
pop
sub
cmp
scas
outsb
sub
lds
lret
ss
cmp
xchg
push
sahf
dec
push
ljmp
js
push
mov
xchg
or
repnz
xchg
stc
arpl
aam
in
mov
pop
je
lock
or
mov
xchg
cmp
clc
cmpsl
loop
pop
arpl
cmpsb
inc
movsl
mov
lcall
pop
sahf
outsb
ja
pop
shlb
add
pusha
outsl
loope
add
lret
icebp
push
pushf
or
and
inc
cmp
adc
inc
adc
jbe
std
aad
add
adc
cmpsb
inc
mov
and
pop
push
push
loop
pop
daa
shrb
or
xor
js
sbb
push
decl
iret
jae
xorb
sti
sub
push
and
jno
fdivl
cmp
pop
cs
cmp
mov
push
mov
fldt
inc
xchg
outsb
fwait
arpl
clc
and
out
aad
xchg
mov
mov
jne
sub
dec
jo
cwtl
sbb
xor
shl
push
push
pop
jl
dec
mov
xchg
inc
in
rclb
sbb
into
in
xchg
sbb
in
and
push
xchg
leave
aam
mov
adc
call
leave
cmpsb
not
cmpsl
adc
jg
sub
bound
stos
xchg
mov
jecxz
aad
test
pcmpgtd
insl
pusha
ds
xor
mov
pop
push
jp
jns
cmc
enter
movb
inc
cld
xor
dec
mov
inc
sahf
sbb
push
and
dec
fldl2e
sub
mov
sti
js
clc
ret
push
pop
fadds
mov
sub
adc
xlat
jg
fldl
data16
jmp
dec
inc
cmp
or
je
fnstcw
lds
mov
cmc
divl
imul
push
pop
fstps
daa
cld
cmp
or
lods
int3
mov
xchg
and
and
jge
add
aaa
push
cmp
adc
push
call
pop
or
outsb
fnstcw
js
mov
in
cltd
push
xchg
mov
xchg
and
or
dec
sbb
mov
mov
sub
mov
jcxz
jp
mov
ljmp
push
push
inc
xchg
push
jg
pop
sub
xor
addb
js
adc
lods
or
push
cmp
mov
xor
xchg
in
loop
cmp
mov
xchg
leave
push
adc
insb
dec
jle
loop
cmp
mov
jns
mov
jmp
push
sbb
jne
shlb
popf
inc
lret
inc
shlb
pop
repnz
in
adc
inc
xchg
push
test
fsubr
mov
loop
addb
pop
gs
mov
mov
inc
idivb
fisubrs
out
adc
sub
mov
ds
push
jb
fcoml
mov
mov
pop
lret
pop
cmp
in
xor
cmp
mov
pmulhuw
outsb
leave
mov
hlt
inc
sub
testl
dec
jnp
mov
repz
xchg
cmp
mov
adc
add
test
mov
xchg
pop
mov
ja
jae
or
xchg
test
ret
xchg
add
push
out
test
sbb
hlt
cld
pop
icebp
pop
mov
ljmp
cmc
jg
adc
xor
jb
int3
js
shrl
and
push
xchg
mov
push
push
loope
push
lret
pop
fisttps
push
mov
adc
push
and
fcompl
lods
xor
jbe
out
scas
mov
adc
xchg
daa
ljmp
mov
test
cmp
push
rolb
xor
sar
sahf
sub
cwtl
insl
imul
mov
in
pop
xchg
sub
or
cmp
xor
cmp
mov
in
ljmp
ljmp
sub
mov
xor
imul
sub
adc
push
stc
mov
lcall
and
push
lret
sub
cmp
xor
iret
mov
stc
pop
adc
stos
xor
push
outsb
iret
addr16
push
jl
lock
daa
popf
xchg
addr16
sub
or
or
cs
lock
popa
mov
add
stc
out
mov
push
and
int
mov
cs
dec
fs
idivl
push
stos
es
addl
sarl
adc
jecxz
cmc
scas
mov
in
jge
popa
cmp
jmp
push
in
push
dec
or
stc
cmp
push
pop
adc
add
shr
mov
aam
cmpsb
pop
sub
aam
movsb
push
adc
mov
mov
loop
pop
adc
hlt
lods
add
mov
pop
icebp
je
inc
add
scas
dec
hlt
mov
loopne
jae
cld
xchg
int
add
xchg
ret
pop
push
or
xchg
dec
push
sub
ds
and
add
imulb
cmp
inc
test
sub
push
mov
sub
mov
sbb
jmp
out
fwait
mov
mov
clc
roll
iret
insb
cltd
ret
int3
js
and
outsl
cmc
mov
dec
aam
xlat
aaa
mov
fs
xchg
loopne
out
push
cwtl
push
xchg
jbe
arpl
cmp
movsl
add
int
dec
lret
xchg
mov
jle
inc
enter
push
adc
mov
fimuls
push
push
int
es
hlt
xchg
inc
das
cmp
popf
bswap
loopne
pop
push
mov
inc
add
mov
insb
xor
insb
jmp
gs
cltd
cmp
sub
pop
shrl
mov
addr16
fcomps
sarl
mov
push
inc
addl
scas
mov
roll
cmp
sub
shll
push
sbb
movsl
sbb
aas
jno
cmpsb
xorb
subb
jbe
push
push
int3
inc
int
stc
rorl
std
out
add
lcall
rolb
push
loop
push
xchg
cmpsb
ja
mov
mov
movsb
out
lds
test
push
mov
dec
inc
insb
mov
int
ret
or
aad
xor
imul
sti
push
sub
mov
lret
in
add
xchg
push
jbe
mov
dec
int
xor
pusha
sub
aam
ja
pop
xor
aam
xor
stos
dec
sar
cmp
cmp
cmp
mov
in
fiaddl
inc
pusha
jl
jecxz
fisttpll
dec
push
sahf
xor
js
or
iret
push
push
sbb
bound
das
inc
jo
push
sbb
loopne
xchg
dec
mov
flds
mov
inc
add
pop
jg
rcl
sub
xchg
idivl
and
sbb
fsubl
loope
ss
arpl
and
adc
pop
and
and
aad
mov
pop
js
push
mov
ret
inc
movsb
or
mov
cmp
leave
sbb
jecxz
add
push
lret
sti
add
jecxz
clc
adc
loop,pn
mov
es
inc
cmpsb
mov
mov
rorl
ret
pop
pusha
decl
sbb
push
mov
lret
cwtl
rcll
cwtl
pop
mov
xchg
pop
mov
scas
inc
cmp
jb
add
mov
push
daa
lahf
pop
jo
js
or
rcr
sub
and
sahf
std
mov
mov
xchg
push
jg
xor
subl
jae
mov
push
xchg
push
stc
jecxz
xchg
or
pusha
add
lcall
test
mov
push
mov
arpl
push
stc
inc
imul
leave
sbb
add
iret
int3
cld
aam
std
sbb
mov
mov
lahf
adc
jle
sub
xor
popf
call
and
jg
push
and
push
cmp
mov
jp
inc
jno
stos
jo
bound
int
xchg
scas
sbb
or
insb
sub
cli
sbb
imul
mov
or
outsl
loopne
push
push
adc
or
jne
push
roll
es
sub
lret
mov
addr16
push
dec
fcompl
fisubrl
inc
cmp
jge
fldt
mov
mov
cmc
out
jl
sub
call
inc
xor
outsl
lds
and
pop
dec
sarb
jns
pop
roll
push
xrelease
scas
push
js
pusha
aad
fiadds
les
popa
jp
dec
cmpsl
add
les
cmp
fs
lods
jnp
repnz
add
cli
mov
and
sbb
and
lds
ret
and
dec
repz
leave
aas
mov
je
imul
cmp
or
cmp
cmpsb
cmp
iret
and
inc
jb
jbe
clc
pushf
jl
xchg
add
mov
sbb
arpl
sub
push
adc
fs
cmp
cmp
dec
push
lods
icebp
enter
rcl
fidivs
add
mov
mov
movsl
or
movsl
and
dec
xor
lea
out
fucomi
divb
hlt
or
hlt
gs
lods
loop
mov
cwtl
rcrl
jl
sbb
mov
dec
outsl
inc
stc
push
cmc
mov
jle
pop
lock
daa
jae
mov
sub
nop
mov
cmp
daa
or
sahf
icebp
jnp
out
push
sbb
lods
lret
push
outsl
or
mov
ror
imul
jecxz
xchg
fidivl
jl
sbb
sub
test
out
enter
xor
mulb
sahf
xchg
inc
shrb
ret
xor
xor
sub
xchg
call
inc
adcb
push
inc
in
mov
popf
in
xorb
icebp
and
inc
xchg
xchg
cmp
jmp
loope
sti
lret
xor
mov
std
adc
dec
add
loope
and
sub
cmp
adc
cltd
movsl
ret
xchg
lods
or
ds
push
xchg
push
ja
cwtl
pusha
lcall
and
test
js
lret
mov
sbb
cmp
jmp
loop
stos
cmp
and
inc
neg
in
mov
es
movsl
iret
shrb
lods
mov
insl
or
insb
jnp
lahf
sahf
lret
imul
inc
jae
lea
cmp
xor
add
rclb
add
outsb
mov
and
mov
inc
sub
pop
pop
gs
nop
insb
mov
pop
cmpsb
fwait
stos
cltd
mov
mov
adc
push
and
xchg
xlat
or
mov
mov
mov
lret
inc
pop
xor
loopne
nop
leave
inc
out
adc
sub
add
mov
cmc
js
mov
rorb
icebp
inc
pop
jge
mov
sub
arpl
insb
mov
mov
cmp
add
scas
insl
rcr
xor
aaa
int
leave
add
cld
jp
jl
jnp
push
or
jle,pn
insb
scas
dec
inc
sub
scas
lea
mov
vcvttps2dq
jmp
bound
pop
push
adc
or
ret
stos
mov
in
xchg
sbb
movsb
es
xchg
pop
push
jb
ja
xor
xchg
movsl
push
dec
iret
mov
daa
push
pop
xchg
jne
fs
iret
enter
xchg
push
cwtl
xchg
mov
sub
xchg
push
sbb
xor
inc
dec
nop
mov
out
mov
xchg
aas
aas
cmp
inc
sbb
xchg
sbb
fbstp
dec
lcall
push
xor
iret
or
arpl
loop
test
lret
aad
insb
insb
test
in
inc
lock
cld
mov
jecxz
aad
xorl
in
mov
mov
fwait
jnp
lock
xchg
call
mov
outsb
xchg
rcl
pusha
push
cmp
inc
or
inc
repz
out
jbe
sub
inc
xor
orl
sub
inc
mov
mov
pop
and
pop
sbb
or
icebp
jp
mov
fistl
adc
dec
lods
or
sbb
insb
or
cli
fcmovbe
xor
cli
test
lahf
jno
scas
cmpsb
push
out
arpl
out
call
dec
cli
add
jge
loope
scas
ret
jp
pop
popa
int
inc
jl
jo
mov
jno
xor
std
mov
mov
jecxz
pop
scas
push
ja
loop
repnz
mov
out
clc
jns
ja
inc
push
dec
or
jle
hlt
aaa
push
movsb
movsl
adc
jl
add
and
jbe
out
mov
scas
pop
addr16
jp
cmp
fs
and
mov
call
bound
pop
repnz
xchg
mov
int3
jle
shl
fstp
mov
jae
mov
lcall
stos
ss
in
mov
cli
pop
sarb
cmp
daa
mov
xchg
aas
lods
ret
cld
cltd
out
outsl
outsl
and
loope
mov
cmp
out
movsl
ja
sar
xchg
lods
mov
cmc
mov
and
xchg
cmc
mov
jbe
andl
ror
out
dec
enter
nop
cld
aam
mov
fsts
insl
jecxz
adc
adc
scas
or
imul
or
push
xchg
cld
pop
fcompl
and
out
pop
insl
inc
mov
pop
jo
mov
dec
out
nop
jbe
add
add
in
jae
stc
das
dec
or
fmull
stc
xchg
xchg
and
sarb
fadds
movsl
movb
push
popf
jmp
or
mov
hlt
mov
mov
loope
xchg
mov
mov
mov
xor
xchg
ljmp
xchg
dec
cwtl
shl
lahf
adc
dec
fdivp
xchg
out
repnz
inc
aaa
leave
xchg
shlb
test
xor
xchg
jne
fldt
mov
dec
fs
mov
ljmp
push
cwtl
sar
out
out
push
dec
das
and
jb
in
addr16
mov
cmpsb
or
rcll
ja
gs
cltd
inc
pusha
jle
jp
gs
inc
mov
cmp
roll
fisttps
loopne
adc
ss
lahf
lcall
inc
mov
sbb
faddl
ljmp
xor
loope
lods
fcmovnu
jl
inc
inc
push
mov
aam
pop
mov
fidivrs
cmp
lock
mov
xlat
jne
mov
arpl
cmp
lods
pop
mov
inc
jle
sub
dec
cli
or
inc
cwtl
and
jge
arpl
xor
xlat
push
into
adc
push
sbb
cmp
fisttpll
adc
mov
mov
cmp
stos
ret
aam
push
in
add
mov
push
and
inc
inc
xor
and
adc
add
push
cmc
in
mov
jle
sbb
fstps
xchg
inc
cwtl
cld
jecxz
stos
andl
push
fwait
mov
push
aam
push
cmc
xchg
fcomp
fnstcw
shll
call
jo
mov
mov
out
pop
leave
mov
mov
mov
pop
fildll
fdivrs
sti
repnz
test
adc
sbb
cmpsl
in
mov
dec
lret
pop
lock
inc
lahf
dec
test
adc
and
xchg
cmp
dec
pop
mov
and
dec
cltd
mov
in
in
xor
mov
xchg
or
sti
mov
jmp
cli
fsts
mov
mov
popa
mov
jge
adc
adc
dec
mov
popa
clc
sub
das
jae
and
xchg
jb
pop
mov
insb
out
das
add
xchg
cwtl
dec
test
fsubrs
aaa
pusha
sbb
adc
sarb
adc
repnz
dec
pop
jge
push
inc
cmpsb
dec
push
icebp
and
test
mov
hlt
pop
outsl
fistl
cld
pop
xlat
mov
lock
sbb
adc
push
in
xor
cld
stc
pop
xor
addr16
fs
or
jp
hlt
pusha
mov
xchg
cltd
fs
jmp
das
es
add
cmpsl
jae
cltd
lret
cld
mov
scas
loopne
in
sti
adc
jle
mov
aad
cld
dec
jge
iret
jns
insl
push
cs
test
orl
gs
sbb
scas
pop
std
push
scas
dec
or
mov
jno
dec
inc
aas
es
jecxz
xlat
adc
insb
mov
jp
push
sbb
sarb
sbb
xlat
jno
push
pop
mov
subb
pop
mov
sbb
nop
iret
mov
into
popl
in
std
dec
rorb
insl
daa
stos
cmpsb
test
enter
adc
das
xbegin
push
sub
inc
xchg
call
xchg
jmp
notl
mov
sahf
cmpsb
dec
clc
bound
in
fimuls
jl
hlt
push
or
cmp
xchg
or
adc
call
in
inc
rcll
cmp
sbb
xor
loop
shll
data16
sub
sbb
jae
rorl
stc
xor
sub
xlat
loop
mov
dec
jecxz
xchg
cmpsl
shll
movsl
sbb
ret
into
out
jp
outsb
mov
cmp
hlt
sub
aam
lret
in
cmpsl
mov
jo
movsl
adc
loopne
or
gs
lods
pushf
mov
jge
cmc
jns
outsl
sbb
lret
rclb
sbb
xor
fisubl
mov
enter
add
jp
add
arpl
or
add
pop
pop
pop
cmc
nop
or
fildl
jmp
stos
mov
ss
fnstenv
or
lea
jae
add
in
fdivs
out
jp
xor
or
pop
cmp
cmp
xchg
add
dec
add
cmp
mov
and
fstl
xchg
mov
cmp
mov
xchg
stc
gs
add
popl
jp
in
push
imulb
mov
jmp
xlat
popf
lods
pop
gs
push
js
mov
lcall
scas
das
cmp
mov
dec
into
scas
or
rorb
cli
xorl
sub
mov
int
insl
dec
xor
mov
cmc
sub
notl
add
int3
cmp
arpl
aad
jae
repz
call
aam
jb
das
mov
cli
add
pushf
xor
cmpsl
mov
loope
addb
xchg
repnz
movsb
inc
scas
mov
mov
dec
hlt
adc
out
int
icebp
aaa
mov
and
jo
mov
cltd
jle
addr16
test
aas
lock
shll
or
stos
sbb
daa
mov
mov
fcoml
dec
fsubs
push
push
xor
stos
daa
or
jp
pushf
xchg
xor
xlat
out
add
leave
push
mov
add
sar
sbb
call
fistpl
mov
rcr
mulb
xlat
sub
sbbl
das
dec
cmp
fstl
mov
push
aas
popa
sub
cmpsl
mov
out
pop
mov
insb
dec
nop
jo
push
add
push
sbb
and
lahf
stc
xchg
lcall
push
test
adc
sub
dec
test
jg
out
adc
lret
sbb
cmc
or
and
pop
cmp
mov
out
xchg
mov
or
dec
stos
pop
dec
fists
idivl
xlat
pop
imul
es
jbe
pushf
ljmp
cmp
mov
adc
mov
jbe
push
push
sub
mov
outsl
cmpsb
mov
xor
js
fcompl
add
fdivrl
pop
or
test
mov
shlb
push
out
orb
jge
popa
push
incl
pushf
ds
mov
cmp
mov
xor
mov
stos
fs
add
orl
imul
addl
dec
and
push
arpl
cmp
int
push
mov
adc
test
ljmp
out
daa
mov
jg
push
dec
push
cld
daa
push
inc
js
shrb
inc
ljmp
sub
shlb
sub
xchg
pop
out
inc
negb
sbb
mov
mov
dec
stos
das
jp
pop
inc
mov
push
repz
insb
out
jle
lret
jmp
sarb
imul
sti
mov
jg
cmp
cmp
into
xchg
lea
popf
ljmp
cs
mov
jae
xor
pop
mov
scas
pop
jp
sbb
data16
sub
mov
xchg
cmp
cwtl
imul
es
rorl
sahf
sti
cmp
out
lods
dec
cmpb
fnstsw
sbb
enter
add
lahf
icebp
test
out
aad
rcll
lcall
std
test
jns
popf
neg
xlat
fists
mov
cmc
stos
xchg
shll
mov
adc
int3
sbb
inc
jmp
cmp
jbe
inc
jo
ret
fdivs
into
or
dec
fcoml
mov
sahf
stc
rorb
leave
mov
popa
mov
outsl
scas
data16
mov
out
daa
jmp
mov
iret
add
ret
pop
lcall
testb
add
add
insl
inc
add
sbb
xor
inc
pusha
cld
fisubrl
aas
ret
mov
out
adc
bound
movsb
mov
jge
mov
js
mov
xchg
call
adc
sub
sub
mov
mov
push
in
mov
aaa
cmp
or
pop
stos
mov
dec
hlt
hlt
in
sbb
out
dec
data16
idivl
cmp
or
enter
mov
faddp
push
fwait
adc
pop
mov
adc
jge
xchg
mov
popa
icebp
psubsw
in
jb
std
imul
cld
je
mov
lret
bnd
leave
nop
xor
xchg
mov
push
fldl
inc
enter
icebp
mov
mov
js
jmp
in
lcall
cmpsb
sub
sub
fsub
or
cwtl
sub
mov
aas
mov
cld
add
js
aas
push
addr16
xchg
cmp
lds
jnp
nop
pop
dec
cmp
xchg
xchg
loop
and
push
scas
cmp
cmp
lahf
cld
mov
orb
or
push
test
xchg
add
adc
test
and
push
stos
popa
adc
repnz
jb
and
mov
and
repnz
add
push
outsb
dec
sbb
aam
scas
add
adc
sahf
loop
clc
xchg
sub
sub
iret
jp
stc
movsl
ss
faddp
iret
cmp
and
jg
push
rcll
lods
adc
les
xchg
lods
addb
xor
into
loope
mov
mov
add
dec
add
stos
push
mov
sub
lods
add
or
sub
lcall
xchg
ret
lret
fstl
decb
pop
mov
inc
ret
cli
into
mov
std
arpl
fadd
ficoms
pusha
adc
mov
out
lock
xchg
xlat
sbb
stos
outsl
dec
jge
sub
ficomps
fucomp
rclb
int
sahf
push
fildl
std
or
out
cs
das
pop
das
fsts
mov
xor
daa
push
xchg
outsb
into
pop
lods
mov
cmc
lods
push
je
cmpsl
mov
daa
in
or
push
dec
outsl
xchg
mov
test
xor
fcoml
cltd
dec
dec
and
xlat
cld
ret
loopne
inc
in
add
pop
in
push
push
xchg
fwait
ljmp
sbb
idivb
jle
or
xchg
mov
out
es
imul
bound
jg
pushf
xorl
mov
sub
pushf
jmp
adc
std
mov
adc
imul
inc
subb
hlt
loop
dec
xlat
sbb
sbbb
mov
jne
fistpl
test
clc
xor
dec
mov
or
repnz
js
fisubl
xor
and
mov
jl
push
xlat
mov
mov
je
in
iret
xchg
mov
shll
mov
push
loop
dec
lcall
movsl
scas
movsb
in
or
jne
and
push
push
cmp
in
in
dec
je
jae
inc
mov
mov
bound
or
mov
dec
xchg
mov
adc
dec
sbb
inc
push
xchg
inc
pop
arpl
js
mov
mov
mov
dec
repz
sub
gs
aas
in
mov
mov
orb
or
aam
test
xchg
sti
xlat
cmpl
mov
cmc
push
fwait
movsl
xchg
pop
and
leave
cli
mov
push
add
cmpsl
jg
jo
outsb
xor
push
dec
orl
push
pusha
movsl
lea
add
add
imull
jnp
mov
movsb
mov
or
add
out
cld
test
jbe
mov
loopne
ret
fwait
adc
lret
xchg
movsb
nop
sbb
push
stc
jle
cltd
aaa
sub
aas
and
inc
es
cmp
aaa
mov
int
sarb
arpl
adc
jo
sbb
lret
mov
xchg
call
popa
and
jl
xchg
stos
mov
loop
mulb
out
movsb
stos
add
mov
in
insl
xor
jb
jl
sbb
xlat
mov
sub
cmp
aad
pop
push
mov
aad
in
and
movsl
adc
push
mov
or
add
lcall
bound
fadds
sbb
mov
cmp
dec
stos
mov
push
fsubr
adc
cmpsl
inc
leave
mov
fistl
stos
mov
fadd
popa
in
sub
xor
xchg
cmp
mov
sub
push
mov
je
pop
add
or
pop
leave
dec
imul
add
pushf
pushf
xchg
testb
sbb
ret
mov
das
mov
xchg
cmpb
jno
sub
daa
aam
andl
dec
sub
mov
movsl
mov
mov
sub
rcrl
ss
xchg
cmpb
cmpsb
jo
jle
stc
fcomps
enter
insb
inc
push
enter
cmp
lods
leave
loope
cmpsb
push
std
mov
and
xchg
sbb
in
je
imul
xor
loop
cmpsb
ret
scas
cmpsb
stos
jge
jo
sub
dec
cmpsl
mov
or
xchg
mov
ja
jne
xchg
xchg
iret
dec
jne
pop
cmp
jno
pusha
jae
or
dec
adc
and
pop
xchg
mov
xchg
hlt
or
inc
dec
jp
out
dec
and
pusha
insl
cltd
fwait
mov
insb
jbe
imul
sub
inc
int
cmc
sbb
daa
roll
hlt
pop
inc
jge
test
pop
das
nop
jg,pn
mov
push
or
sbb
mov
jnp
jl
fbld
sub
adc
in
in
sbb
and
mov
cmpsl
mov
lcall
outsb
sti
fisubrl
mov
or
push
in
das
sbb
sbb
jae
pop
js
mov
or
mov
repnz
sub
fdivp
pop
pop
insb
cmp
mov
pop
sub
push
inc
in
jno
jge
jg
rorb
int3
push
fwait
ret
push
inc
push
dec
cmp
movsl
ja
push
dec
sbbl
push
in
push
sub
ret
ds
test
cmpsb
xor
fnstenv
idivl
inc
and
push
popa
adc
mov
lret
pop
in
and
xor
add
mov
inc
dec
jp
mov
jmp
and
ret
scas
xor
out
or
inc
xchg
fs
fdivl
lds
lock
or
mov
sub
cltd
cld
add
jle
mov
std
xchg
ljmp
mov
lahf
lock
sahf
dec
call
mov
inc
aad
adc
xchg
arpl
scas
xor
mov
pop
dec
stos
xchg
jne
cld
js
pop
xchg
sarl
xor
incl
out
inc
xor
pop
into
sarl
xchg
idiv
push
push
es
into
jns
mov
push
jg
ds
jl
sbb
or
or
fstl
hlt
xchg
mov
push
arpl
pop
sbb
jnp
jg
sub
loop
or
cmp
das
adc
xchg
mov
sbb
movsl
or
test
dec
into
mov
sahf
or
js
and
adc
lahf
xlat
jnp
cli
mul
xchg
cmp
das
rolb
test
test
lret
dec
mov
lock
outsl
pop
cmpsl
out
xchg
movsl
cmp
scas
pop
sub
jo
cmp
xchg
movsb
std
jmp
lds
sub
mov
lock
push
mov
aad
data16
mov
push
cmpsl
mov
stc
icebp
lods
nop
std
sarl
pop
cmc
and
adc
xchg
out
dec
pop
aad
pop
flds
xchg
inc
mov
sub
and
jbe
push
repz
dec
movsl
adc
pop
sbb
cbtw
aad
xlat
das
out
out
mov
pop
adc
clc
test
aad
push
lea
sbb
pop
and
int3
mov
fwait
sbb
adc
mov
mov
mov
ficompl
inc
add
aaa
xchg
inc
mov
out
lahf
mulb
inc
movsl
cmp
pop
mov
lods
xor
sbb
out
roll
sub
mov
sbb
cli
mov
or
loope
xchg
popa
insb
xchg
loope
xor
cld
push
cmp
in
jne
gs
mov
mov
mov
icebp
enter
sbb
outsl
or
in
insl
mov
or
loope
add
mov
imul
icebp
jb
jmp
adc
sub
xchg
insl
xchg
test
or
push
xchg
xor
ljmp
lock
addr16
pop
add
xor
xlat
cmpsb
cltd
sbb
mov
pop
inc
jno
bound
subl
mov
iret
call
lea
mov
ret
xor
incl
jp
add
mov
dec
in
push
dec
aas
mov
dec
aad
imul
mov
sub
nop
ftst
and
sti
fwait
jo
push
in
jle
xchg
and
sbb
inc
enter
loope
notl
mull
mull
sbb
cmpsl
lea
enter
daa
xor
sbb
into
cmp
push
jmp
aam
ret
xchg
lods
sub
and
jg
mov
fistl
aam
int
gs
in
inc
sub
xchg
std
mov
mov
aas
pop
rcrl
test
leave
out
dec
sub
xor
orl
aad
xorl
iret
bound
jl
mov
mov
ss
addr16
stos
imul
and
jp
mov
mov
mov
add
pusha
sahf
pop
pop
insb
fildll
lock
ljmp
movsb
mov
sbb
into
xchg
adc
or
jge
andb
jle,pt
pop
das
cmp
hlt
shl
ds
in
shlb
pop
loope
jl
dec
stc
dec
clc
mov
test
int
add
shrb
mov
imull
test
incl
rcll
mov
hlt
pop
aas
int
xchg
xchg
dec
xor
jb
mov
push
std
orl
add
sti
subb
sbb
icebp
mov
push
stc
xchg
into
add
sub
sub
mov
dec
jp
sbb
test
pushf
and
int
fnstsw
sbb
push
xor
in
std
imul
mov
mov
movsb
mov
testb
fs
mov
movsl
xchg
cmp
add
inc
cmc
repnz
or
pop
hlt
sahf
call
mov
out
push
cld
dec
movsb
push
push
jecxz
aad
push
loop
inc
mov
shlb
in
jbe
mov
cs
aam
mov
fstpl
ret
mov
xchg
aam
xchg
loop
sahf
cmp
loop
add
mov
jecxz
int3
js
jmp
pop
mov
mov
imul
mov
xor
jmp
aad
movq
pop
or
leave
int3
jmp
push
dec
cmp
ret
and
dec
xchg
adc
mov
pop
insl
push
enter
ds
and
mov
cmp
sbb
ret
and
repnz
or
cmp
dec
sub
jb
push
sarb
fidivl
outsl
xor
iret
fnstsw
xchg
pop
dec
in
inc
ss
nop
push
icebp
mov
xor
pop
stos
inc
pusha
loopne
ja
jl
mov
dec
aaa
sub
xchg
mov
movl
sbbl
or
mov
repz
mov
dec
mov
adc
mov
arpl
fisubrl
push
ss
int3
cmp
je
mov
xor
scas
ficoml
shl
dec
jl
mov
cs
sbb
test
call
pop
repz
jns
dec
pop
loop
inc
add
inc
dec
sbb
sub
call
push
mov
cmp
pop
daa
inc
cmp
lahf
out
pop
inc
jle
mov
outsl
or
dec
and
dec
jne
ret
ds
outsl
inc
hlt
movsl
lcall
add
jg
clc
out
data16
push
ds
push
jg
pusha
sbb
fwait
xchg
mov
jbe
add
jo
lret
sbb
and
jp
loop
sbb
push
hlt
daa
mov
faddl
mov
adc
lret
add
mov
js
cmpsb
fucomip
mov
push
bound
negl
mov
call
mov
pop
mov
nop
jmp
repnz
andb
addr16
fdivs
mov
in
and
push
mov
cwtl
push
andb
adc
arpl
sbb
cmp
or
add
cmp
shrl
rclb
mov
ret
pop
push
test
inc
out
fsubl
sti
xor
movsb
dec
lods
push
cmp
mov
out
jecxz
and
xor
loope
outsl
jecxz
inc
mov
mov
pop
push
cli
pop
hlt
jmp
pushf
xchg
addr16
divb
adc
mov
out
mov
in
jecxz
into
dec
lret
mov
jns
outsl
sub
dec
adc
cmc
add
aaa
push
imul
outsl
xor
add
cmpsb
sub
push
xchg
add
sbb
adc
std
mov
jecxz
jbe
xor
aaa
movsb
lret
out
mov
pop
jno
sub
and
mov
frstor
xlat
cwtl
dec
inc
shll
xlat
xchg
mov
dec
je
add
cmp
add
sub
cmpsb
jecxz
cmc
dec
mov
les
loopne
xchg
cmp
js
lret
mov
xchg
popf
xor
or
outsb
pop
divb
gs
imul
mov
xlat
sub
cmp
fnstenv
js
pop
mov
std
push
mov
cmc
jmp
adc
cli
dec
cmc
std
mov
out
rorl
mov
cmc
out
enter
mov
dec
inc
call
mov
call
aas
push
mov
cmpl
jge
loop
add
adc
lret
leave
inc
fstps
cmp
out
test
enter
test
mov
pop
mov
and
sbb
push
clc
mov
xorb
mov
jno
mov
movsb
xchg
push
scas
sbbl
sbb
lret
dec
mov
jb
popa
xchg
daa
jne
lcall
call
test
jns
sub
leave
sbb
xor
push
shl
incb
in
ret
mov
cltd
in
out
pushf
add
and
call
adc
pop
dec
push
lea
sub
incl
pop
stos
dec
pop
push
add
pop
push
mov
and
push
xor
into
scas
inc
jne
xchg
jmp
sub
push
inc
das
sbb
fldt
mov
nop
mov
aad
sbb
shrl
shll
xor
xchg
outsb
xor
fmuls
sub
mov
pop
std
lret
pushf
lea
int
fists
mov
je
sub
jne
push
sub
dec
hlt
push
fdivrl
mov
cltd
dec
xor
pop
das
data16
pmaddwd
xor
sub
or
out
js
mov
ja
stc
fbld
mov
rcl
into
push
push
jl
cs
or
lea
jae
jbe
sub
test
stc
stc
adc
andl
mov
jle
lret
ja
sub
jg
push
or
mov
cmp
mov
pushf
adc
popa
jg
push
xchg
test
xor
cmp
xor
mov
push
aam
repz
negb
inc
xor
push
imul
cmp
adc
stc
mov
mov
les
es
lret
inc
enter
icebp
insl
lds
add
sbb
repz
pushf
in
frstor
adc
repz
and
daa
scas
fcomip
int3
les
pushf
or
or
stc
icebp
mov
mov
pop
out
leave
outsl
stos
pop
sbb
sahf
insb
or
dec
cmpb
aad
test
das
mov
jmp
pop
sbb
out
push
fbld
lcall
in
andl
xor
dec
adc
xor
xchg
ds
ret
push
jle
pop
bound
cmp
int
mov
sub
aaa
cli
mov
pop
pushf
cmp
sahf
leave
push
mov
loope
fwait
mov
js
test
std
cli
ret
sbb
xchg
loop
maxps
sbb
int
inc
and
shl
outsb
insb
dec
push
or
add
dec
jo
or
cltd
sbb
js
hlt
and
popa
lret
pop
sti
sub
pslld
stos
fdivp
mov
mov
xor
jg
jecxz
sahf
shl
mov
in
mov
nop
es
dec
cmp
mov
subl
add
dec
int3
cltd
insl
push
push
cmp
je
lods
push
lods
pop
xor
xor
add
add
test
loop
ds
cmp
adc
lret
into
jg
pushw
add
es
scas
cmp
or
lret
xchg
imul
and
xor
cltd
mov
lods
aam
sub
or
ljmp
sbb
je
stos
or
pop
xchg
xchg
stos
sbb
stc
sbb
stos
adc
in
pop
fcompl
sbb
imul
ds
or
adc
mov
push
in
fcmovnbe
jge,pn
das
enter
mov
dec
sub
orl
add
mov
sub
ret
fnstenv
or
jp
sub
xchg
push
jno
mov
cltd
das
adc
xor
mov
mov
aas
adc
out
lahf
ficomps
sub
popa
xor
ret
inc
dec
rcll
int
dec
leave
repz
adcb
sbb
and
lea
sbb
hlt
mov
mov
mov
cmpsb
test
inc
jecxz
insb
sub
clc
jnp
sahf
cltd
pop
lds
sbb
or
cwtl
cmp
adc
sub
xor
idiv
add
mov
mul
xor
pop
lahf
inc
or
les
in
je
aaa
shll
rorl
lock
adc
lret
sbbb
mov
rcrb
xchg
pop
je
sub
push
orb
adc
xor
cmc
pop
sahf
insl
cmp
xchg
sbb
mov
lea
mov
inc
push
and
imul
xchg
inc
xor
sbb
aam
cs
out
push
inc
js
aad
and
out
cmpsb
cwtl
cld
test
loope
dec
out
dec
std
add
mov
mov
mov
data16
mov
inc
into
push
jecxz
sub
inc
jb
jl
push
jmp
std
jl
pop
or
lods
mov
mov
insl
push
jbe
mov
inc
or
or
cmp
cmp
inc
cmpsl
push
mov
ret
cmc
xor
inc
or
cli
outsb
xchg
pop
xlat
dec
and
ret
dec
jb
loop
xchg
ja
pop
add
int
repnz
pop
sub
fdiv
jbe
inc
dec
xor
push
inc
xor
addl
fs
scas
sub
jge
and
pop
ret
out
xchg
cs
ss
loope
jnp
cmc
mov
adc
add
sbb
js
ficoms
aad
cmp
or
repnz
scas
shl
mov
loope
movsl
test
push
add
cmp
insb
or
cmp
push
inc
adc
je
insl
mov
lret
dec
hlt
shlb
push
cwtl
add
xchg
add
stos
mov
repnz
xchg
insl
call
jmp
pop
iret
sarl
sbb
lret
stos
dec
adc
fbld
add
int3
out
sbb
push
lcall
nop
rcll
lods
mov
adc
fwait
adcl
cwtl
xor
pop
and
cwtl
pop
bound
pop
pop
xchg
ror
clc
fsubrs
push
pop
pop
es
adc
jge
mov
sbb
jle
pop
add
je
or
sbb
lds
cmp
mov
fld
sub
fstpl
push
sbb
call
mov
jo
sarl
mov
jp
jecxz
inc
pop
inc
lcall
push
xchg
push
out
dec
mov
jecxz
mov
cmp
js
adc
in
mov
je
sbb
push
lea
mov
inc
lcall
adc
sarl
pop
inc
fs
pop
push
pusha
push
pop
hlt
test
and
jmp
aaa
sbb
jmp
rolb
inc
cli
cs
xor
pop
jmp
mov
movsb
les
mov
mov
testb
xchg
sbbb
insl
in
push
data16
leave
cmp
mov
fildll
push
push
pop
cmovp
adc
and
je
and
nop
shl
jmp
pop
cld
mov
pop
pop
movsb
pop
jno
adc
adc
in
les
movsl
sub
cli
les
xor
idivl
std
mov
arpl
xchg
das
lcall
roll
add
out
clc
or
push
cmp
rcr
inc
and
fists
cmp
xchg
pop
add
adc
or
rorb
dec
popa
test
push
stos
idiv
dec
adcl
int
or
sbb
mov
movsb
sub
pushf
add
inc
push
loopne
inc
xchg
jb
xor
cmp
jmp
mov
cmpb
fstp
dec
sub
movd
decl
xor
add
out
adc
andl
sbb
std
dec
ret
shrl
fisttpl
lds
rcll
lock
lock
adc
jmp
shl
lods
lods
fidivrs
push
es
clc
inc
pop
pusha
stos
jecxz
in
fwait
sbb
jp
iret
add
sarb
xor
dec
in
notb
ljmp
or
cltd
sbb
cmp
jmp
or
xchg
clc
shlb
and
and
push
xor
push
dec
cmc
scas
push
jg
jp
lcall
iret
sub
cmpsb
dec
stc
cld
add
shrb
out
mov
fimull
dec
jp
pop
sbb
lret
es
sbb
inc
jg
inc
fdiv
dec
or
lock
xchg
or
movsb
insl
hlt
jbe
xor
or
enter
hlt
cmpsb
fsubs
rorl
ljmp
push
fldl
push
pop
lret
add
sub
and
fucomi
inc
mov
inc
icebp
xchg
repnz
out
filds
enter
shll
outsl
push
cs
pusha
pop
popf
push
out
loop
les
cli
adc
sti
and
test
jp
mov
jae
and
hlt
rolb
insb
sub
aas
fistl
pop
and
sar
call
mov
roll
cmpsb
lret
xor
ds
mov
fistpl
repz
cli
mov
or
in
test
sbb
jl
and
mov
sbb
cmp
and
flds
rcr
sbb
inc
idivb
or
mov
adc
jg
inc
mov
mov
xor
fwait
dec
je
andl
sub
rcrl
dec
rcrl
inc
or
mov
aad
xor
fadd
jge
addb
jne
sub
je
hlt
fsubr
mov
and
insl
and
adc
inc
roll
xchg
ficomps
bound
stc
popf
add
enter
scas
jb
jmp
in
mov
dec
push
inc
lock
push
repz
pop
in
cmpb
inc
sbb
jmp
or
lcall
insb
push
stos
xor
rcl
xchg
xchg
xchg
ds
push
rcll
inc
mov
daa
and
sbb
xlat
cmpsb
adc
pop
es
mov
jo
nop
jmp
out
adc
mov
mov
shrb
sbb
dec
sahf
pop
cltd
pop
gs
sbb
sbb
mov
adc
loop
lahf
mov
mov
aam
test
push
xchg
xchg
sub
sahf
hlt
push
hlt
jnp
pusha
push
sub
mov
sahf
imul
cmp
fwait
test
cmp
add
insl
cmp
imul
mov
jle
mov
ja
dec
ret
add
push
xlat
fimuls
sahf
jae
xor
out
push
xchg
inc
pop
mov
jg
inc
movsb
loop
in
dec
cmp
or
push
test
push
fcmovnb
xchg
xchg
imul
popa
push
or
in
fs
adc
adc
stos
inc
rorb
or
push
fldenv
lods
andb
sarl
cmpsb
fdivr
push
rorb
push
xor
scas
das
fs
loope
addr16
xchg
ficomps
xchg
add
lods
js
fwait
xchg
frstor
outsb
es
popf
cmp
pop
cltd
mov
mov
mov
sub
mov
aaa
push
cmp
insb
xchg
test
inc
pushf
loope
xchg
cmp
cmpsl
adcl
dec
pop
jmp
or
jg
mov
int
mov
jp,pt
dec
jno
test
das
push
cmp
xor
daa
mov
and
icebp
mull
into
rclb
cmc
or
repnz
fidivl
xor
sub
test
lahf
fcoml
aas
xchg
push
clc
insb
out
mov
aad
and
push
mov
cmpsl
and
dec
mov
xchg
mov
and
aam
adc
aas
das
mov
dec
ds
lret
cmpsb
js
pop
arpl
es
pushf
adc
insb
lcall
sbb
inc
sbbl
push
test
sub
xlat
pop
lock
addb
jno
sub
dec
ljmp
loopne
jle
pop
in
hlt
push
dec
push
lcall
testl
mov
leave
jne
mov
mov
test
mov
adc
or
aas
mov
ss
daa
push
push
loope
fildl
and
fidivrs
jbe
and
jbe
sub
inc
movhps
xchg
les
subl
fbstp
into
ljmp
jnp
mov
decl
push
dec
mov
add
bound
and
ja
test
cs
fiaddl
test
lock
movsb
sbb
jno
fstl
stc
xchg
xchg
testb
mov
mov
sbb
push
dec
mov
mov
cwtl
push
cmp
in
imul
movsb
sbbb
sbb
or
mov
xchg
int
and
fwait
mov
jne
xchg
or
xchg
bound
dec
cmp
es
adc
lods
ljmp
leave
inc
loope
xchg
lods
add
mov
outsl
and
inc
lea
cwtl
pop
mov
pushf
mov
cltd
fsubrs
cmp
stos
cli
or
jl
test
xchg
test
mov
mov
test
call
das
stos
pop
inc
and
adc
xor
test
mov
int3
cmpsl
lods
push
mov
xor
inc
movsl
sub
push
pusha
test
sbb
dec
sub
cmp
push
mov
divl
jb
lods
aad
loope
xor
push
add
add
pusha
push
cmc
lea
in
mov
pop
fs
out
in
jle
add
stos
mov
das
inc
sahf
push
mov
mov
test
and
sahf
cmpb
outsb
inc
or
dec
cltd
fisubl
cmp
xor
jecxz
outsl
pop
andb
cmp
inc
mov
lret
pop
cs
adc
pop
dec
dec
add
out
call
cmpsb
cmpsl
aaa
cmpsl
cld
xor
push
aaa
popa
out
adc
lret
cmpsb
jne
mov
xor
or
rorl
rcrl
in
adc
inc
xlat
mov
sti
shl
test
jl
push
fistpl
adc
test
pop
movsl
test
sbb
jge
jle
add
jne
xchg
cltd
dec
mov
mov
pop
fs
xor
movsb
mov
bound
clc
dec
push
push
mov
mov
adc
movsb
shlb
pushf
adc
push
out
pop
add
aas
xchg
cld
shlb
divl
daa
push
push
aaa
js
mov
dec
add
xchg
push
es
or
jle
bound
cltd
and
mov
push
jmp
leave
adc
incl
lods
lret
jle
ljmp
pusha
mov
jno
adc
fs
and
lcall
std
pop
xor
pop
dec
or
jecxz
inc
lock
dec
and
dec
xchg
fsubr
mov
sub
fstpl
loope
iret
es
shr
mov
stos
js
pop
cmp
dec
pop
and
fs
push
in
dec
adc
mov
push
cwtl
pop
ds
mov
mov
imul
and
out
filds
movsb
add
flds
das
inc
sti
pop
leave
xor
rorb
jge
fucomi
test
xor
mov
lods
mov
insl
mov
mov
push
in
sbb
dec
push
pop
jg
and
test
jb
fisubl
mov
imul
xor
sbb
ficompl
cmp
dec
pushf
scas
and
stos
cld
lods
loopne
inc
aad
lahf
in
imul
mov
fldt
mov
add
test
push
stos
sub
dec
xchg
sbb
mov
adc
xchg
jnp
idivl
xorl
das
and
adc
nop
pop
iret
sti
sbb
jae
mov
popf
lret
scas
or
fst
cmpsl
inc
xor
or
xchg
cld
sti
in
xchg
jecxz
push
repnz
dec
pushf
sbb
xchg
pop
mov
lcall
stc
xor
xchg
stos
xrelease
nop
int3
xchg
push
sub
xchg
lock
movsb
pop
mov
setnp
and
rorb
hlt
arpl
call
ljmp
dec
add
js
jb
aaa
leave
mov
push
ja
lods
jmp
mov
imul
pusha
nop
add
mov
push
push
lret
aam
sbb
adc
es
mov
jnp
cmp
push
inc
jne
add
xlat
fsubrs
fdivl
dec
mov
push
add
mov
imul
shll
pop
add
adc
imul
scas
out
pop
sub
dec
or
xchg
orl
ljmp
cs
push
filds
adc
and
jnp
push
push
leave
sti
scas
pushf
addl
cwtl
flds
mov
mov
icebp
ficoms
outsb
lahf
arpl
xorl
bound
sbb
inc
repz
int
ret
pop
mov
shll
and
pop
inc
or
add
in
decb
decl
xchg
sub
push
pop
in
aaa
push
icebp
add
lgs
das
test
addr16
or
aas
inc
and
js
adc
jns
pop
inc
sbb
mov
mov
mov
rcll
pop
imul
scas
jp
add
bound
jecxz
sub
xchg
xchg
dec
das
dec
lcall
testb
repnz
sbbb
adc
pop
es
pcmpgtw
scas
cmpsl
xor
outsb
inc
insl
mov
jl
pushf
loope
loopne
out
movsb
sbb
jno
iret
aad
lds
daa
jecxz
scas
cmp
leave
and
mov
lahf
jge
push
scas
shrl
pop
shll
addl
or
js
lea
dec
add
in
js
rcrb
dec
fiaddl
repz
lret
ret
movsl
cmp
mov
std
sahf
adc
xchg
xor
pop
lds
push
cmp
test
fnstenv
inc
stos
in
rorl
mov
arpl
ficompl
xchg
cmp
cmp
addr16
pusha
push
adc
dec
or
xor
outsl
inc
push
sbb
xchg
push
stos
es
mov
add
lds
loope
fldl
inc
mov
imul
loope
fdivl
and
insb
jne
movsb
xchg
xchg
mov
jb
adc
fcoms
adc
lods
test
mov
repz
mov
inc
loop
sub
popf
gs
xor
xchg
xchg
and
stos
repnz
hlt
ficoms
mov
out
xor
popa
sub
loopne
mov
mov
push
add
jb
push
cs
shlb
mov
lahf
cmp
push
xchg
in
mov
dec
pop
xlat
cmpsb
out
clc
frstpm(287
and
mov
cli
in
xchg
and
xor
inc
mov
inc
mov
xchg
add
mov
sbb
lock
rorb
lea
mov
test
test
mov
cmp
pop
pop
lods
push
lock
cs
cmc
sub
mov
sub
lds
jae
and
fstps
fcom
xchg
or
and
fisubl
inc
mov
sbb
xlat
xor
out
pushw
dec
arpl
mov
ja
pusha
xlat
adc
js
lods
popf
xchg
pop
iret
rorl
pop
xlat
add
icebp
mov
repz
mov
insb
andb
pop
mov
cmp
sti
push
sbb
cmp
into
pop
xor
inc
inc
fs
call
das
xor
data16
dec
hlt
call
call
test
stc
lea
mov
das
add
aaa
xor
loop
lcall
xor
xchg
std
dec
andl
lods
dec
xchg
xor
insb
std
popf
fwait
mov
xchg
fidivrl
jb
ljmp
sub
inc
xor
stos
ret
push
cld
enter
pop
mov
fidivrs
popf
or
and
mov
push
stos
popf
and
lds
test
sbb
dec
or
inc
fdivr
mov
ja
mov
xor
popa
or
nop
sub
andb
dec
incb
xchg
inc
pop
outsl
loope
push
cltd
add
adc
outsl
stos
stc
mov
mov
test
hlt
mov
sub
jno
push
repnz
pop
ret
cmp
sbb
mov
dec
outsb
ret
push
fisttps
into
inc
sti
insl
add
idiv
pxor
mov
subl
mov
mov
and
rclb
mov
rclb
cmp
repnz
mov
nop
test
adc
test
sbb
ss
xchg
lods
lcall
cwtl
fstl
fcomp
sarl
pop
int3
push
inc
outsl
mov
roll
mov
ds
cmpsl
es
popa
movl
and
mov
and
ds
push
cmp
push
add
out
adc
lret
pop
dec
js
mov
aam
pop
shrb
int3
push
lahf
jnp
fbstp
sbb
lret
sbb
sub
inc
xchg
int
int3
jecxz
cmp
mov
push
add
or
add
jle
stos
mov
adc
shrl
cmpsb
fwait
sub
dec
xor
jb
in
fwait
xor
push
icebp
in
mov
jb
pop
mov
aam
cs
mov
fwait
inc
cwtl
dec
lret
lea
outsb
push
push
sahf
loopne
test
jp
sbb
fimull
scas
shll
xchg
mov
mov
jmp
inc
cli
fwait
aas
sub
mov
out
loopne
or
aad
test
jecxz
jnp
pop
pop
mov
sbb
cmpsl
lock
sahf
aad
and
out
loop
or
fisubs
not
mov
mov
hlt
pop
pop
cmp
adc
add
push
call
je
inc
mov
addl
sbb
pushf
or
push
aam
adc
inc
repnz
in
negb
push
fidivs
cmpsb
movsl
adc
leave
cmp
sub
pop
out
arpl
loope
and
test
leave
pop
or
fsubrl
xchg
mov
cmp
mov
lock
popa
fisttpll
imul
in
and
repz
cs
cli
cmp
push
lock
in
testl
xchg
out
cmpsb
mov
lods
adc
push
mov
pop
sub
jbe
rclb
pop
stos
cld
hlt
fsub
sahf
in
test
ja
mov
decl
dec
mov
mov
enter
jbe
mov
pop
or
dec
pop
mov
gs
sub
mov
gs
mov
xchg
jbe
out
fpatan
xlat
xchg
push
sti
fisttpll
shll
subl
mov
orb
repnz
dec
dec
pop
adc
shlb
es
rcll
add
and
lcall
addl
pop
xorl
push
push
jg
push
add
sbb
adcb
mov
js
pop
xchg
dec
fdivrl
or
pop
fsubl
mov
add
ljmp
iret
aam
aam
and
fsin
add
iret
inc
int3
sti
dec
pop
inc
loopne
pop
in
pushf
fidivrs
aas
sub
nop
aad
out
adc
enter
sub
scas
ds
jb
test
lock
jmp
adc
xchg
jge
lods
pop
pop
xchg
cld
imul
xchg
lds
and
xor
inc
jg
bound
cmp
inc
jns
loopne
imul
mov
cltd
cs
fucomp
stos
es
cmp
or
cs
mov
dec
popa
jno
jp
mov
push
mov
std
add
push
test
ja
pop
add
adc
in
or
add
jbe
mov
repz
cltd
sbbb
jne
cmp
adc
clc
sub
movsl
push
lods
push
cli
dec
mov
es
jg
or
mov
jp
arpl
in
clc
dec
xor
push
imul
nop
ljmp
mov
lcall
sub
mov
or
mov
jae
lock
jbe
out
and
scas
shlb
enter
sbb
test
jge
sub
pop
push
bound
push
test
push
hlt
xor
mov
mov
outsb
and
test
or
std
sub
add
jb
mov
jnp
or
dec
lds
fists
sub
je
int3
cmp
dec
add
sub
into
aam
add
hlt
cmpsb
clc
minps
shlb
and
mov
dec
add
mov
mov
pop
adc
pushf
in
cmp
sub
dec
mov
jl
daa
sub
push
cmpsl
xor
and
push
pop
notl
jg
jo
jmp
cs
pushf
aaa
jne
xor
jecxz
lods
call
cmpsb
dec
in
fsubs
les
jo
jle
push
sbb
gs
mov
inc
inc
inc
sub
cs
fcompl
push
aam
adc
add
sbb
sahf
inc
scas
icebp
shll
pop
lds
xor
ljmp
inc
call
push
push
adc
out
jbe
mov
insl
push
pop
sub
push
push
popa
sbb
ficomps
lds
adc
lds
mov
adc
jge
test
out
jb
pop
in
test
cmpsl
js
add
mov
or
fmulp
or
outsl
cmp
aaa
fadds
xor
mov
movsb
out
addl
sub
fisttpl
out
pop
sbb
sti
ret
js
mov
and
leave
mov
jmp
dec
sbb
mov
imul
mov
sahf
sarb
cmc
jecxz
lds
mov
sbb
push
popf
ficoml
xor
enter
mov
lods
out
icebp
mov
into
xorl
rcl
js
cmp
lret
clc
out
cltd
jae
fdivrl
cmp
mov
and
or
test
sti
sbb
test
push
mov
fwait
or
out
mov
sub
cmp
sahf
xorb
icebp
ftst
movsl
outsl
ficoml
gs
or
orl
mov
movsl
cmpsb
fwait
in
xlat
bnd
and
rorb
jbe
cs
cltd
jns
sarl
cmp
pop
clc
xor
pusha
push
sbb
mov
sbb
jecxz
gs
sahf
adc
fcoms
lds
daa
sahf
int3
mov
mov
pop
cltd
pop
fisubs
in
jge
or
sti
shll
stc
mov
xor
mov
stos
pop
movsb
fisttps
inc
sbb
push
sub
inc
into
dec
cmp
adc
mov
ret
stc
test
jl
pop
push
lret
adc
int
sbb
test
idivl
fisubrs
dec
xor
mov
into
mov
ds
in
sbb
mov
subb
aam
out
inc
call
push
jae
loope
fidivrs
sbb
mov
mov
jge
mov
pop
shl
xlat
out
sbb
xor
dec
mov
add
xchg
push
and
ss
mov
imul
sub
data16
popa
sti
inc
push
test
stos
out
mov
or
test
sqrtps
stc
stos
and
add
fidivrl
jnp
push
ret
inc
ds
out
rcll
mov
sub
sbb
xchg
sbb
adc
out
jle
pop
pop
jg
nop
and
jg
lret
and
rclb
jp
push
xchg
stos
adc
lret
clc
scas
mov
in
mov
inc
xchg
sbb
shr
aas
jae
dec
test
sahf
out
out
cli
dec
and
fsubrs
lcall
inc
pop
or
jg
stc
ljmp
sub
scas
xchg
addb
das
xor
in
xor
lods
aad
and
out
sbb
dec
fiaddl
push
xor
movsb
stos
or
std
lcall
cmpb
mov
clc
bound
adc
test
add
movsl
mov
clc
sarb
pop
and
push
imul
ljmp
or
rol
dec
aas
test
js
and
xchg
pop
addr16
call
mov
push
in
shll
cmpsl
pop
sub
scas
cmp
lahf
shr
bound
nop
insb
test
sahf
pushf
outsb
popa
xor
cmpsl
push
pop
aam
inc
std
jp
pop
shll
pop
pop
mov
and
shll
mov
out
push
mov
mov
mov
mov
movsb
jo
xor
pop
mov
std
pop
popa
cmp
mov
lock
add
ja
lret
and
popa
hlt
mov
test
dec
dec
sbb
and
pop
cmc
test
arpl
into
andb
mov
pop
sub
jns
sub
stos
ds
pushf
adc
mov
cmp
jle
nop
and
mov
lock
push
inc
or
dec
and
shll
mov
sti
ljmp
jp
xor
cmp
popa
mov
mov
push
mov
inc
and
ljmp
cmp
xor
inc
cmc
shrl
lcall
mov
out
sbb
pop
lods
cmc
jp
sbb
or
jp
jne
mov
lods
inc
iret
jl
leave
out
cmp
jle
mov
in
inc
cmc
ret
xor
xor
xor
dec
add
pop
cmpsl
mov
outsl
imul
les
cmp
aam
addl
inc
data16
cmpsb
cltd
xor
test
out
sbbl
sub
jl
test
xchg
cmpsl
ret
fistpll
lods
std
hlt
stos
mov
or
ljmp
insb
dec
lods
fimull
ja
push
or
jl
clc
jg
xchg
pop
aad
ds
pusha
sub
daa
pop
ficoms
cs
mov
push
jae
xor
scas
rcll
and
out
jno
loop
lods
aas
aam
xchg
pop
cmc
sbb
decb
pop
cmp
rorl
rorb
lods
data16
adc
mov
sbb
lods
leave
mov
add
mov
test
xor
fsubs
sbb
adc
pushf
adc
loope
fsubs
stos
add
sbb
push
sbb
enter
push
leave
cwtl
shlb
jb
lret
push
into
lahf
fidivrl
sbb
faddl
dec
xchg
and
jmp
dec
daa
sub
shlb
jae
dec
bound
aad
inc
sub
nop
push
lea
add
cwtl
aad
out
jb
aaa
out
in
sub
jo
nop
insl
mov
inc
sbb
jb
data16
push
dec
mov
jecxz
cmp
add
fnstsw
add
cli
imul
inc
bound
pop
mov
push
or
jl
jecxz
pop
dec
mov
mov
bndstx
clc
push
xchg
imul
mov
xchg
ds
negl
repz
pop
icebp
out
xor
dec
popa
int
pop
cmovl
sbb
pop
inc
add
and
adc
addr16
loopne
rcrb
sbb
jb
flds
or
mov
inc
xor
mov
push
mov
test
mov
pop
outsl
pop
add
cli
mov
imul
push
rorl
push
mov
ss
shr
adc
movsl
fwait
mov
neg
popa
sbb
add
imul
xor
lods
fwait
idivb
and
dec
sbb
sub
sti
stc
dec
pop
int
dec
mov
mov
int3
mov
test
in
pop
mov
mov
sahf
xchg
addl
std
loope
rol
dec
push
mov
loope
mov
mov
mov
inc
mov
and
xchg
sbb
inc
stc
pmullw
dec
inc
mov
rcrb
scas
push
test
add
mov
out
imul
push
jp
mov
test
enter
rclb
scas
mov
movsl
test
std
imul
xchg
jmp
out
imul
mov
ret
push
shll
lret
out
es
jp
xor
pop
nop
lock
push
lahf
and
jp
jmp
xchg
xchg
sbb
pop
pop
add
xchg
dec
cvttps2pi
xchg
cmpsl
jp
imul
cltd
push
getsec
pop
mov
lea
mov
dec
stos
push
lods
mov
jo
dec
jmp
push
push
call
fldcw
or
xor
adc
aaa
and
push
and
mov
xor
jg
out
xchg
sbb
mov
ret
fstpl
mov
imul
pop
push
inc
pop
leave
insl
mov
fstpl
cmp
pushf
sub
shlb
jp
and
xor
fwait
mov
pop
inc
adc
rcll
cmp
roll
repnz
popa
xchg
call
cmc
cli
or
movsl
movsb
push
push
and
out
adc
or
outsb
mov
mov
out
sbb
add
movsb
push
push
clc
push
add
fldenv
or
ret
les
loop
idivb
stos
adc
jmp
jp
test
mov
sbb
jge
dec
ret
in
inc
insl
fidivrl
out
xor
addb
sub
negl
insl
add
cmp
icebp
jae
ret
fisubs
push
loop
aaa
cmp
iret
lret
jg
test
or
cmp
in
push
push
cmpsb
nop
mov
mov
push
movsl
jmp
fs
outsb
jb
ret
add
fmuls
fistpll
xchg
dec
mov
cwtl
lods
dec
fcomi
stos
sbb
jle
jecxz
mov
dec
insb
sub
jl
mov
inc
inc
push
mov
shll
push
mov
jmp
xchg
sbb
les
cmc
sub
jb
push
cmp
frstor
movb
jbe
dec
pop
push
lcall
sub
mov
gs
pop
sub
pushf
mov
pushf
mov
test
mov
test
push
std
cmp
push
inc
mov
loope
dec
cwtl
ret
push
xchg
cs
push
lret
inc
sti
xor
inc
cs
xchg
xor
xor
pop
fwait
sahf
mov
dec
sbb
add
adc
add
mov
pop
adc
inc
push
pop
pmaxub
cltd
mov
jl
mov
add
push
cs
pop
xchg
pop
xchg
cs
lahf
mov
pop
xchg
mov
int3
push
nop
sub
xchg
and
inc
sbb
lahf
pushf
lret
nop
aad
mov
int3
and
negb
repnz
lret
test
mov
add
mov
lahf
iret
mov
rcrl
cmp
mov
popa
loop
icebp
in
mov
push
in
rcll
dec
cltd
fcomps
imul
push
push
sub
fwait
lock
cmc
lock
xor
mov
jbe
xor
std
mov
adc
xor
and
cmpsl
mov
jp
cmp
mov
jge
jne
jbe
xorl
dec
clc
fisttpll
loop
mov
fnstsw
testl
shl
mov
test
xchg
leave
in
jg
ja
sub
mov
sbb
bound
loope
jg
stos
or
and
push
scas
inc
xchg
stc
jne
adc
sub
add
aad
push
jmp
shrl
test
sbb
pusha
outsl
push
and
divl
push
jp
cmp
ror
ficomps
fmull
sub
insb
ror
sub
fldcw
cs
sub
mov
push
cmp
imul
add
int3
popf
pop
paddsb
pop
pop
fwait
push
daa
jae
mov
xchg
rcrl
sbb
rcrb
or
dec
pop
popf
xchg
mov
scas
mov
cmp
sbb
push
push
out
mov
lahf
add
jmp
inc
dec
fdivs
leave
xor
and
xor
push
rcr
push
lret
inc
push
xchg
sti
fsub
outsb
dec
xor
rcrl
ss
mov
addl
pop
inc
mov
sbb
pop
dec
dec
inc
sahf
nop
xchg
or
inc
inc
mov
mov
dec
mov
push
subl
and
pop
add
pop
dec
add
cltd
jne
fnstenv
ret
aaa
jnp
push
idivl
pop
sub
xor
add
loope
mov
sub
aad
inc
add
aaa
jne
xor
adc
add
mov
movsl
cmc
adc
inc
into
cwtl
inc
adc
sbb
push
jg
lcall
xchg
lds
jecxz
and
arpl
out
push
push
iret
pop
xor
jmp
jmp
or
mov
loop
mov
inc
mov
jbe
imul
pop
cmp
int3
push
jns
aam
adc
test
mov
adc
test
mov
xor
or
in
fcomip
or
daa
push
cli
and
in
adc
stos
cltd
jg
add
sbb
ret
push
sbbb
lods
mov
mov
adc
jbe
test
push
enter
pop
sub
add
popa
out
mov
andb
lret
icebp
addl
jns
pop
iret
xchg
dec
and
ficomps
call
inc
insb
and
jbe
xor
rcrl
fildl
mov
add
lds
jae
mov
pop
outsb
clc
fistpl
in
decl
movsb
mov
arpl
jl
mov
add
cmovo
leave
rcrl
cld
imul
pop
iret
jmp
mov
mov
push
mov
daa
cmovns
cmp
xchg
mov
mov
and
adc
jle
dec
rolb
push
add
mov
sbb
cmp
inc
mov
sti
es
aam
aaa
insl
adc
imul
push
dec
add
lods
sub
ds
jle
push
add
xlat
xor
xor
inc
imul
push
push
mov
fdiv
int3
sub
sub
andb
fs
pop
fistps
xchg
mov
xchg
xor
mov
sbb
ret
sub
rcrb
sub
sti
adc
inc
mov
jecxz
nop
or
xchg
add
out
push
loop
lret
dec
pushf
inc
and
shlb
jnp
add
fadds
mov
fldenv
ret
xchg
inc
jp
lock
or
inc
sbb
xchg
cmp
clc
mov
aaa
scas
add
ret
lahf
jl
sub
pop
push
int3
push
rorl
mov
mov
mull
je
inc
mov
inc
sahf
js
subb
out
ret
xchg
inc
pop
xchg
insb
flds
push
adc
jmp
cs
scas
mov
or
jnp
adc
enter
loop
dec
in
ljmp
sahf
bound
test
xor
das
cmp
xlat
mov
cltd
adc
jno
inc
xor
dec
cwtl
loop
aaa
mov
sub
shlb
mov
nop
sbb
fildll
mov
pop
pop
adc
jo
and
pop
cmp
mov
pop
xchg
mov
jb
cmp
sbb
ja
clc
cmpsb
sbb
push
sets
rcll
adc
add
add
xchg
inc
jb
xchg
incb
sbb
clc
mov
fldt
cmp
lret
out
loopne
push
adc
sub
das
cmpb
pusha
xchg
push
dec
pop
jmp
adc
enter
and
andl
and
ror
cltd
xchg
sub
test
das
add
xlat
jbe
push
cmpsb
ljmp
push
mov
push
cmp
imul
scas
les
cmp
and
pop
mov
jns
mov
cld
push
sbb
mov
xchg
cwtl
icebp
leave
xchg
push
lock
cmc
fs
xor
pop
xlat
or
and
movsl
xchg
addb
ljmp
rcrb
adc
imul
pop
idivl
jecxz
xor
mov
fwait
adc
adc
incl
lods
cmc
or
pushf
cmovno
xor
jae
lahf
ja
dec
iret
shrb
scas
mov
push
sti
mov
xchg
cli
or
dec
mov
sti
rcl
cmp
call
mov
scas
iret
cmp
inc
cmp
fists
cmpsl
movsb
push
es
cmp
xchg
mov
mov
or
loopne
sub
fldt
js
cli
xor
adc
xchg
inc
shll
fmulp
inc
inc
sub
mov
leave
mov
iret
test
aad
std
mov
jno
rcll
mov
flds
sub
pop
add
pop
insl
jns
in
jbe
test
add
xchg
pop
add
jo
outsl
mov
mov
and
movsb
shrl
bound
mov
scas
pop
cld
addr16
mov
pop
dec
pop
divl
lods
js
icebp
mov
daa
jno
sbb
std
xchg
data16
fnstcw
shrb
rcrb
sub
stos
mov
add
call
mov
sub
shlb
or
out
mov
cmp
stc
adc
insb
xor
repnz
pop
jecxz
inc
sbb
xchg
mov
xchg
adc
imul
jno
xor
mov
rcrb
xchg
adc
and
cmp
jns
pop
mov
jecxz
adc
adcl
out
sbb
ljmp
adc
loop
jo
dec
xchg
fsubs
adc
push
in
je
in
mov
ja
insb
xor
cwtl
mov
insl
mov
out
es
shll
pop
out
sub
loop
out
mov
adc
and
stos
adc
mov
push
sbb
cmp
inc
outsl
xor
dec
adc
jecxz
push
dec
adc
inc
lods
and
jg
arpl
push
push
aad
fwait
pop
imul
mov
test
inc
sub
insb
pop
xor
popa
scas
dec
pusha
movl
push
jae
sbb
xchg
addr16
insb
in
jg
jnp
add
jne
stos
insl
jl
and
inc
movsl
xchg
clc
sbb
shl
jge
push
cmpsb
pop
mov
jns
and
and
clc
cmp
and
fwait
xor
xor
cmp
std
and
dec
inc
stc
mov
les
push
xor
jle
in
adc
mov
int3
js
xchg
cmpsl
inc
push
inc
xchg
test
jp
cltd
xor
dec
pop
sbb
mov
xlat
cmpsl
pop
cmp
mov
or
aas
mov
pop
mov
sub
scas
popl
push
cwtl
sbb
pushf
sbb
hlt
mov
mov
or
and
push
mov
in
xchg
mov
loopne
pop
int3
lahf
insb
loop
insl
pop
push
ss
iret
mov
mov
aam
sbb
mov
test
or
and
xor
ss
xchg
aas
sub
in
and
mov
sub
fwait
xor
hlt
clc
push
lock
adc
pop
fistl
shll
icebp
mov
add
imul
pop
dec
jg
leave
lret
out
adc
push
testl
push
repz
repz
xchg
pusha
add
sti
icebp
mov
push
repz
xor
ret
mov
out
push
cmp
iret
insb
xchg
jg
push
aaa
loop
dec
daa
pusha
xor
xlat
sbb
addr16
aaa
push
in
inc
mov
scas
jg
cwtl
rorb
or
xor
cmp
in
xchg
dec
sub
xor
clc
ss
cmpsl
mov
out
jl
inc
or
test
scas
xchg
and
lret
and
sbb
xchg
push
dec
or
adc
mov
mov
sub
out
inc
test
addr16
repz
data16
rcrb
jl
fcompl
push
mov
or
test
xor
in
dec
jp
cmp
fstps
stos
int3
jmp
adc
test
push
jns
pop
aad
ja
sub
shrl
inc
out
ss
popf
je
frstor
adc
xor
popa
fcmovbe
out
repnz
cmpsl
and
pop
jp
sbb
or
or
add
addr16
jns
xor
movntq
out
imul
xchg
xchg
add
adc
push
mov
roll
in
mov
addb
inc
push
add
outsl
ret
push
lods
xor
or
icebp
fistl
jmp
stos
aad
mov
enter
mov
loope
fnsave
mov
fldt
xchg
insl
invd
push
cld
cmp
sbb
lea
cmpsl
sub
aaa
repz
in
fldcw
call
dec
and
sub
add
pop
test
push
fs
stc
jl
jne
push
fwait
cmp
cmc
leave
inc
rcrb
inc
aaa
or
addr16
jecxz
hlt
cmp
and
sti
inc
mov
sbb
or
and
adc
stc
lret
mov
rol
in
stos
cmp
loopne
pop
jno
mov
inc
xor
xor
int3
adc
dec
mov
push
mov
adc
adc
in
xor
pop
mov
push
fisttpll
xchg
cmc
into
das
fsts
insl
lock
fildl
dec
cmp
sub
and
pop
dec
cmp
pop
adc
lea
repnz
mov
fcoms
push
rcrb
jb
loopne
leave
xor
sub
sub
mov
das
cwtl
enter
test
mov
and
pop
scas
mov
cmp
hlt
imul
aam
ss
ror
cwtl
push
fstpt
inc
bound
xor
jecxz
in
cmp
sbb
fmuls
dec
repnz
call
xor
add
pop
mov
add
in
movsb
add
add
daa
adcb
xchg
mov
adc
pushf
stos
push
ja
inc
int3
sahf
pushf
lds
out
mov
xchg
lock
sub
lea
inc
lahf
enter
xchg
pop
adc
fcomi
adc
mov
in
popa
lea
mov
loop
pop
int
jg
or
add
stos
test
add
xchg
insl
movsl
jns
ljmp
adc
stos
fisttpl
imul
sbb
or
fldt
daa
sbb
movsb
jp
push
jne
add
cmpsl
mov
sub
dec
inc
in
sbb
mov
mov
push
add
fcoml
clc
sub
adc
mov
xchg
int
addl
push
mov
xchg
xor
insl
in
stos
mov
push
mov
push
enter
mov
insl
jbe
xchg
cwtl
pop
mov
mov
xchg
test
push
mov
ss
xor
sbb
or
add
mov
jl
scas
pop
sbbb
xchg
adc
cltd
insb
dec
or
mov
imul
test
xchg
push
pop
jo
fists
mov
mov
dec
cmc
cltd
bound
push
test
shll
mov
cli
leave
inc
jbe
adc
and
lcall
inc
push
das
std
jne
push
mov
sub
scas
and
cli
out
xchg
xor
out
inc
push
out
pop
mov
pop
push
scas
sbb
push
daa
xor
jae
pop
std
lock
xchg
or
or
stos
jg
repnz
scas
fsubrl
jae
lahf
push
mov
jbe
loopne
push
loop
xor
rorb
add
cmpb
int
mov
sti
mov
std
push
adc
xchg
mov
loope
out
lret
pop
push
dec
sbb
aaa
enter
es
push
jbe
int3
popa
lods
xor
test
idivb
mov
mov
or
mov
stos
cs
mov
add
cltd
scas
popl
jle
aam
jge
push
ss
sub
and
mov
decl
dec
mov
pop
dec
jb
fistps
loopne
jns
sbb
aas
and
xor
je
gs
cwtl
xchg
int3
rcr
jo
push
insb
push
out
dec
push
xor
push
fnstcw
inc
sub
movsl
outsb
sub
into
repz
mov
out
mov
push
lods
dec
sbb
insl
jne
push
insb
jb
cmp
in
jle
pop
or
xor
test
pop
lods
cmp
sbb
inc
push
xchg
push
xchg
in
mov
hlt
mov
sub
mov
dec
js
jne
ret
inc
pop
jns
inc
push
ss
add
mov
fs
call
mov
test
jbe
pop
lock
or
xor
mov
dec
xor
or
mov
mov
and
push
repz
inc
jmp
ret
sub
add
in
insb
aam
frstor
je
push
mov
adc
xchg
mov
out
xchg
iret
pop
push
jnp
push
rorb
inc
ror
cbtw
push
pop
push
inc
popf
xlat
adc
inc
stos
mov
jbe
mov
das
lock
and
insl
stos
mov
sbb
sbb
sub
inc
sub
fimuls
push
mov
jnp
jp
in
popa
sbb
xor
fcomi
repz
push
daa
je
cmp
es
movsb
sub
adc
mov
push
mov
stos
shlb
sbbl
fbld
push
fisubrs
das
iret
mov
mov
mov
sbb
add
call
push
cmp
shll
mov
ja
sysexit
pop
mov
adc
push
push
jecxz
pushf
xor
lds
or
jno
or
jle
mov
stc
pop
call
lret
sbb
mov
adcb
sub
pop
sub
out
aad
adcl
out
sub
loopne
pushf
movsb
xor
imul
xchg
adc
mov
aas
imul
mov
out
iret
pop
shr
add
add
movsb
inc
sub
inc
xor
lods
stos
push
int3
or
into
fwait
sbb
out
mov
inc
cmp
out
or
out
mov
sbb
out
adc
xor
push
cli
push
int
cli
xchg
scas
mov
mov
jp
push
lods
arpl
xor
xor
sbb
decl
adc
sub
dec
loope
rcll
sbb
pushf
jbe
xor
xchg
popa
add
or
sbb
clc
repz
pop
lret
das
repnz
lret
jl
adc
test
xchg
imul
jl
and
outsb
cli
std
sub
adc
int3
sbb
iret
cmp
adc
pop
lods
inc
jno
jl
xchg
xchg
pusha
int
xchg
sbb
ficoms
inc
aad
xor
inc
nopl
lcall
xlat
xchg
test
inc
pop
adc
insl
call
jmp
xchg
sub
fisubrs
pop
leave
cmp
cmp
add
push
in
adc
or
subb
mov
cmpl
adc
inc
sub
add
vpunpcklqdq
les
hlt
into
push
cmc
jo
push
enter
mov
sub
aas
addl
sub
inc
pop
or
popf
andl
ss
fidivrs
or
je
cmp
testb
iret
inc
sub
pop
push
fwait
dec
inc
ret
push
mov
shrl
out
push
fcoms
xorl
and
xchg
xor
imul
inc
mov
xor
pop
aam
or
push
shrl
cmp
xor
fimuls
jmp
and
xchg
aaa
mov
and
push
aad
inc
pop
add
in
aad
xchg
and
jmp
test
lcall
push
dec
add
sub
arpl
xchg
lret
pop
pop
fmuls
mov
mov
cmpsb
call
lahf
sub
lcall
mov
test
aad
pop
fwait
mov
xor
jae
sti
adc
movsb
adc
pop
pop
cmpsl
sub
push
clc
or
or
scas
add
lea
add
mov
dec
inc
jecxz
dec
aas
jge
xor
lcall
test
outsl
les
lods
cwtl
mov
lds
sub
mov
sub
shll
add
out
mov
push
pop
das
das
insb
pushf
or
out
sbb
mov
mov
pop
scas
outsb
xchg
lret
dec
jle
mov
sar
test
mov
add
mov
mov
pop
mov
sarb
testb
push
jge
std
pop
out
stos
push
xlat
sbb
and
roll
imul
fsts
loop
pushf
insl
test
into
in
pop
es
sahf
xchg
lret
fisubrs
ljmp
pop
inc
mov
mov
inc
in
push
bnd
in
push
mov
sbb
mov
cmp
data16
inc
xlat
mov
or
shlb
outsl
mov
cs
daa
das
stos
mov
mov
or
in
sarb
andl
in
sub
dec
mull
scas
lods
jg
clc
inc
nop
inc
outsb
mov
pop
mov
pop
nop
jle
sbb
lcall
dec
in
aas
inc
adc
test
mov
mov
jbe
clc
scas
imul
add
cmp
cmc
lret
push
movsb
mov
or
inc
stc
and
push
or
mov
jns
jo
into
movsl
leave
jo
cmp
jmp
jl
add
testl
dec
and
push
sub
or
jp
push
inc
ret
sbbl
scas
xor
inc
sti
cwtl
mov
mov
mov
xchg
jb
in
jne
pop
xchg
mov
outsl
cmp
cmp
orb
push
imul
mov
outsl
adc
jl
push
mov
out
and
pop
adc
out
js
jo
stos
pusha
outsb
adc
out
movsl
fwait
hlt
int3
xchg
inc
jmp
ja
mov
iret
scas
dec
mov
pop
daa
lds
sub
imul
mov
stc
outsb
push
sbb
movsb
push
push
stos
aam
jb
sbb
jmp
ret
xor
sbb
push
ss
std
repnz
cltd
in
pop
popl
jno
jle
mov
xchg
dec
hlt
das
sti
fsubrl
or
bnd
or
inc
push
incb
gs
loop
out
out
out
lret
mov
cmp
dec
cmpsl
mov
lahf
push
jge
in
pop
data16
mov
xchg
cwtl
dec
cmp
in
sub
sbb
cli
gs
lods
shll
lahf
mov
cli
jno
mov
cmc
leave
dec
fisubs
dec
test
or
pop
add
sub
sub
test
loopne
jns
or
add
fxch
js
mov
sarl
call
xchg
les
rol
xchg
cmpsl
inc
jbe
mov
popf
mov
sub
pusha
and
dec
iret
sti
lret
cld
lahf
sbb
int3
xor
sbb
xchg
xor
in
push
and
and
inc
dec
xor
aad
mov
ret
cmp
mov
ljmp
negl
and
sarl
sti
inc
insl
jno
rorb
lahf
cmp
push
loope
inc
jle
jb
mov
loop
cmp
movsl
and
dec
adc
jo
cmp
sahf
mov
sbb
inc
fidivs
mov
cmp
in
fbld
cmp
imul
pop
in
cmp
dec
mov
dec
inc
fistps
mov
je
cmc
xchg
jp
push
sti
or
xchg
jp
adc
lret
sub
xor
mov
cmp
adc
aaa
fisubrs
or
cmpsl
test
ss
jae
push
push
gs
mov
mov
xchg
bound
ret
mov
mov
aas
fs
dec
push
into
nop
out
cmp
fisubs
or
push
jo
cli
stos
dec
mov
fdivrs
jo
cmpsb
xor
stc
pop
daa
push
jne
call
jecxz
or
mov
in
push
aas
cltd
xchg
jmp
or
sahf
popa
fmull
test
and
jbe
test
ss
ret
pop
mov
push
dec
idivb
pop
and
ljmp
xlat
xchg
hlt
mov
cmpsl
cld
mov
and
cmpsb
pop
cmp
in
pop
shrb
hlt
pop
pop
sub
incb
loopne
inc
bound
loop
jmp
lock
fstps
cld
jae
out
inc
and
ljmp
pop
push
andb
push
call
xorl
ljmp
and
mov
daa
jl
rcll
es
loopne
sub
and
dec
repz
call
adc
add
xchg
mov
imul
outsl
mov
jmp
fcoml
sbb
add
rorb
pop
pop
pop
out
pop
jg
stc
xchg
movsb
mov
xor
enter
sar
aaa
cmp
pop
xchg
or
xchg
icebp
push
popa
inc
stos
pop
sarl
divb
and
cmpsb
inc
pop
mov
xor
les
mov
ret
or
into
mov
jo
aad
data16
outsl
pop
or
cltd
xchg
inc
orb
movsb
add
inc
mov
mov
jo
jae
mov
ja
jo
push
pop
add
jge
mov
aas
push
mov
jl
mov
mov
jno
xlat
lcall
fisttpl
cmp
popf
xlat
in
mov
cmc
and
jg
dec
decb
out
inc
pop
mov
mov
adc
clc
dec
cmp
data16
sub
es
scas
scas
jl,pt
cmp
push
and
out
sbb
test
insl
mov
push
mov
cmp
call
mov
add
call
je
inc
outsb
cmp
clc
mov
xor
sbb
sbbl
adc
adc
mov
mov
movsb
sbb
aaa
popl
out
xchg
movsb
inc
dec
and
jnp
mov
pop
inc
or
int3
or
insl
lret
pop
jecxz
push
shll
add
lret
enter
gs
dec
sti
xchg
jnp
mov
pusha
data16
inc
lods
dec
jge
and
sbb
inc
imul
push
pop
push
jecxz
jno
loope
push
sbb
xor
mov
dec
push
stos
jmp
push
sub
adc
cmpsb
mov
jg
outsb
xchg
pop
sub
xchg
mov
imul
fwait
hlt
mov
mov
jne
sbb
stc
jmp
cli
lds
mov
rorb
xchg
jge
mov
xchg
jl
mov
fcoms
mov
mov
js
sbb
sub
icebp
pop
jae
dec
sbb
mov
sub
pop
cmp
or
jae
push
icebp
pop
mov
adc
pushf
mov
sarb
inc
inc
std
mov
jb
daa
pop
pop
sbb
sub
rdpmc
cltd
mov
movsl
out
arpl
xchg
arpl
ds
popf
dec
loopne
and
mulb
lods
lods
cmp
mov
jmp
aas
push
lahf
cmpsl
sub
adc
scas
jecxz
loope
aaa
add
std
enter
jg
mov
cltd
xor
rorl
jne
xor
cmpsb
aam
ret
dec
xor
pop
fcmovnu
pop
orb
aad
cwtl
movsb
lds
pop
rorb
sbb
insl
das
mov
les
jne
ss
mov
cmp
sub
xchg
stos
jge
sub
mov
mov
mov
int3
cmpsl
mov
mov
xchg
imul
ds
sti
sub
push
pop
add
jge
loope
jae
adc
sub
pop
pop
mov
insl
cltd
popf
stc
nop
mov
cmp
xchg
pop
lods
jle
test
mov
lret
add
scas
adc
xchg
push
adc
dec
pop
jmp
xchg
cmpsl
mov
mov
movsb
rclb
mov
dec
adc
lret
adc
test
out
inc
mov
js
dec
mov
mov
mov
xchg
test
sbb
inc
fmul
jg
mov
test
jb
out
inc
pop
inc
ljmp
lock
sbb
mov
mov
shll
pusha
into
jo
nop
and
cmp
cmpsb
ret
dec
fiadds
cmp
je
les
xchg
and
xorl
aas
vstmxcsr
movb
push
stos
or
dec
imul
ja
sbb
xor
adc
loope
or
shlb
mov
sbb
fs
mov
mov
outsb
lret
adc
imul
sbbb
adc
outsb
adc
cmp
in
movsb
jo
add
and
and
inc
push
sub
mov
adc
pop
movsl
and
cwtl
pushf
adc
inc
into
inc
xor
in
add
das
xchg
adc
mov
shlb
stos
dec
leave
js
mov
push
cmp
jl
xor
pop
subb
dec
inc
push
aam
cwtl
leave
addr16
push
dec
int
xchg
or
arpl
fstpl
or
sahf
out
sbb
divb
sub
pushf
inc
fdivr
and
ror
push
out
sub
in
mov
fildl
cmc
mov
inc
popa
xor
jg
sbb
add
enter
cmp
xchg
jle
testl
popf
mov
repz
sub
loopne
adc
mov
adc
test
stos
lret
jnp
cmp
dec
inc
cmpb
in
push
sbb
daa
daa
mov
int3
pop
cwtl
or
ficomps
jae
jns
ror
ljmp
icebp
pop
cmp
out
xchg
mov
fildl
out
mov
ftst
aas
in
pusha
in
fsubrs
inc
adc
aaa
dec
push
mov
out
xor
ljmp
ja
loope
mov
sbb
fisttpll
jecxz
pop
sbb
call
inc
test
xor
xor
pop
in
and
push
sbb
adc
push
xchg
in
out
std
mov
jle
vandnps
ror
push
daa
or
lods
stc
shll
xchg
cmp
dec
sbb
sbb
mov
jb
sub
inc
or
dec
icebp
xchg
sub
clc
cmp
jmp
ds
mov
repnz
in
test
cmp
push
repz
gs
xchg
jne
mov
pop
mov
outsb
es
push
jl
movsl
scas
loop
mov
dec
sbb
cwtl
mov
or
xor
dec
add
inc
dec
mov
mov
sbbb
dec
xor
xchg
fs
xor
rcl
enter
pop
int
mov
and
push
jmp
lcall
xchg
pop
push
push
xchg
aad
push
jmp
mov
lock
ds
je
push
xchg
popa
test
aaa
pop
es
mov
push
adc
js
add
and
cmpsb
pop
push
lea
lea
jg
les
sahf
dec
cmpsl
inc
fcomps
xchg
inc
and
push
std
loope
dec
mov
mov
adc
outsb
push
push
gs
test
mov
std
push
out
mov
jg
sahf
mov
iret
fwait
data16
ffreep
push
sub
or
addr16
and
add
sbb
push
push
fidivrs
fcmovu
cmp
push
push
add
std
and
cmp
stc
jl
inc
xor
enter
mov
stos
fstpl
xchg
in
outsl
jo
xlat
mov
fbld
push
aaa
faddl
mov
mov
daa
pop
inc
cmp
jmp
in
mov
push
lret
in
sub
movsl
mov
or
scas
mov
or
bound
mov
leave
xchg
inc
mov
mov
out
mov
push
jae
mov
sub
hlt
jmp
xchg
test
cmc
xchg
add
addr16
andl
leave
push
jg
pop
jmp
ss
mov
in
mov
addb
jl
push
xchg
adc
xor
mov
shl
pop
dec
jb
cwtl
daa
int3
xor
pop
fnstcw
imul
pop
xor
pop
imulb
into
adc
and
adc
jl
pop
mov
pop
jo
adcl
push
cwtl
lds
push
lock
popa
call
inc
pop
in
jne
setne
ds
mov
dec
scas
sahf
dec
in
mov
xor
outsb
pop
mov
inc
and
movsl
push
or
jbe
shll
jecxz
mov
imul
int
outsl
cmp
xor
cli
xchg
es
mov
add
inc
and
jns
sbb
rorb
scas
je
xchg
decb
xor
jnp
aam
jbe
xor
addr16
xchg
je
push
jbe
stc
insl
mull
and
rorl
mov
cmp
or
sahf
jmp
cld
leave
aam
sbb
cmpb
push
stos
adcb
movsl
iret
push
mov
pop
or
movsl
mov
mov
movsb
mov
cmp
sbb
cmc
sbb
push
sub
pop
sahf
inc
sbb
pop
sbb
cwtl
aas
leave
adc
mov
or
jmp
or
or
rcr
mov
gs
and
cmp
adc
jge
mov
pop
mov
fdivrs
xor
mov
lds
push
jns
and
les
add
fdivrs
pop
outsl
out
pop
testl
jne
mov
pop
cltd
xchg
xchg
shrl
mov
test
and
fdivrl
lea
cmpl
xchg
mov
add
mov
repnz
mov
stc
jg
leave
stc
cld
clc
pop
mov
xchg
xchg
push
jge
cmp
pusha
lea
repnz
ds
xlat
cmp
jae
dec
ljmp
bound
sbb
jl
cli
adc
into
inc
xor
sbb
jecxz
and
fildll
push
and
pop
jle
jae
dec
imull
jbe
pop
add
sbbb
sub
ljmp
cli
mov
and
push
mov
scas
incb
jo
outsl
inc
mov
xor
mov
movsl
mov
shrb
jo
mov
bound
scas
inc
xchg
mov
in
jns
add
ja
xlat
sti
dec
and
iret
cld
or
aas
cmp
sbb
cltd
mov
or
dec
push
nop
adc
push
stos
mov
sbb
mov
inc
popf
out
repnz
xorb
rcll
xchg
mov
xlat
fcmove
push
inc
adc
xor
xchg
adc
fsubrs
jmp
and
repz
dec
stos
lcall
frstor
and
sbb
mov
into
xchg
stos
fistps
sub
leave
push
shrl
jne
out
popf
and
aas
andb
mov
mov
dec
push
dec
stc
fnstcw
mov
ret
je
jecxz
in
inc
push
xchg
in
add
std
mov
notb
mov
cli
push
std
inc
test
stos
decl
sti
cmpsl
push
lea
cmp
jno
or
ljmp
inc
xor
xor
ret
imul
and
std
xor
pop
jl
inc
add
xchg
cmp
lret
popf
pop
pop
xchg
test
sub
rolb
test
mov
orl
or
pop
sub
arpl
lret
fs
jmp
je
fsubrs
jmp
into
es
pop
adc
cmp
pop
or
sub
lret
das
std
jmp
jns
ja
pop
mov
or
hlt
mov
pop
xlat
cmp
arpl
test
pop
shll
mov
fs
aad
daa
stc
adc
pop
out
test
stos
mov
dec
xchg
std
repz
les
inc
inc
xor
mov
cltd
mulb
xchg
lods
std
mov
push
and
dec
je
aas
add
shl
lahf
mov
mov
push
adc
xor
es
fcmove
cli
pusha
pop
mov
and
js
dec
and
cmpl
out
cmp
cld
bound
pmaddwd
push
repnz
pop
cld
ljmp
jl
mov
add
in
les
scas
sub
lret
addr16
jo
cmp
inc
push
cmp
pop
sbb
fmuls
cmpsb
pushf
mov
loop
aam
push
icebp
fisubs
dec
push
out
mov
add
sbb
mov
rorl
repz
mov
mov
xchg
adc
jb
pop
fistl
jecxz
aas
jns
daa
lock
gs
arpl
mov
pop
push
movsl
in
hlt
jno
and
sti
icebp
popf
repnz
jge
repnz
les
or
scas
sub
push
jl
inc
ss
stos
adc
add
push
clc
pop
outsb
int3
or
mov
xor
pop
cmp
jne
faddl
sbb
arpl
dec
cmp
mov
sbb
scas
mov
scas
fadds
push
mov
sub
jnp
pop
pop
sbb
stc
xchg
test
cmovo
lret
jl
adc
arpl
sub
jnp
scas
clc
lods
sub
outsl
xchg
in
fdivs
jp
fists
inc
repz
and
cld
testl
push
pop
push
loopne
adc
sub
imul
add
imul
adc
lret
xchg
mov
insl
jge
adc
jns
out
mov
test
jb
test
shl
pop
insl
js
mov
leave
rorb
pop
cmp
or
cmc
mov
sub
fwait
push
mov
stc
push
cmp
movsl
cltd
cmp
cmpsl
fldcw
scas
repnz
in
loop
popf
arpl
jae
ljmp
lcall
lds
pop
cli
lcall
cmp
xchg
aad
fidivrs
es
dec
or
cmpsb
cmpsl
mov
shlb
dec
or
pop
pop
scas
outsl
mov
cmp
lds
test
fcoml
test
mov
loop
adc
or
mov
add
in
xor
mov
inc
mov
shrl
fisubl
ljmp
sbb
xchg
adc
orl
scas
shl
pop
mov
xchg
lock
push
movsl
ja
testl
push
or
push
sarl
jecxz
jo
adc
mov
stos
jge
insb
jle
aad
addb
mov
cmp
loop
pushf
nop
dec
ret
lcall
addr16
or
pop
sub
ds
fimull
insl
subl
je
xchg
jo
dec
test
add
scas
pop
leave
nop
mov
xchg
aas
pushf
pop
pop
addr16
jecxz
movsl
jnp
outsb
sbb
jle
xchg
mov
nop
in
and
inc
adc
imul
dec
jns
test
sbb
data16
cmpsb
jo
push
dec
xchg
jle
daa
movsl
test
les
jmp
pushf
into
mov
xchg
pop
shll
iret
dec
fbstp
ja
std
or
cld
jl
mov
cmpl
and
push
jnp
sub
and
jbe
push
ss
in
xlat
sbb
rclb
sarl
das
and
jo
push
fcomps
xchg
out
faddl
vdivss
aam
int3
mov
adc
lods
mov
shr
sti
popa
xchg
pop
mov
aam
jae
jl
scas
pop
mov
mov
into
sbb
cwtl
ret
jnp
dec
jae
jb,pt
or
test
popa
inc
xchg
jnp
popa
sbb
aam
sbb
jge
push
pushf
fsubl
mov
push
add
dec
mov
cmpsb
scas
jmp
push
sahf
sbb
sub
nop
adc
repnz
dec
out
xlat
jge
mov
lahf
ja
repz
loopne
cltd
fwait
sbb
loopne
mov
out
jle
movb
xchg
scas
adcl
cli
mov
and
pop
into
fmuls
in
jg
sbb
test
and
adc
mov
pushw
aas
stos
push
inc
xchg
scas
dec
imul
push
xor
xchg
xchg
jmp
int
stos
lret
pop
loop
rolb
add
popa
repz
fsubl
jmp
aaa
cmp
sbb
sbb
inc
push
jnp
dec
inc
test
popa
test
mov
arpl
jne
fucomi
loop
xchg
enter
les
dec
ret
dec
cwtl
jb
movsl
lods
imul
fsubrs
sar
pop
push
nop
lea
aad
push
xor
jmp
inc
ret
push
and
push
imul
add
jo
clc
sarl
ds
clc
push
mov
outsl
mov
sbb
pop
inc
or
es
adc
or
test
or
fiaddl
push
xor
add
fwait
lea
js
inc
cmpsb
jle
or
mov
xorb
ret
test
jmp
push
fsubrs
adc
repnz
push
sbb
and
mov
pop
jo
add
sti
jns
mov
mov
jmp
popa
xchg
adc
or
rorb
sbb
push
movsb
xchg
jecxz
sub
sub
fisubs
rorb
cmp
push
cmp
inc
daa
and
mov
jae
filds
sahf
mov
pop
cmp
ret
push
clc
mov
or
cltd
xor
nop
and
pop
fwait
aaa
in
cmpsb
mov
js
out
fistpl
adc
out
movsl
pop
xchg
iret
fldcw
add
xor
movsb
loope
aad
mov
cmp
dec
js
imul
sbb
fs
arpl
fbld
adc
inc
sbb
addr16
insb
cmp
outsl
xchg
loopne
in
mov
movsl
aas
aam
or
inc
sahf
in
shlb
call
bound
and
cmp
jbe
mov
insl
test
data16
sub
rolb
sub
mov
mov
add
sub
cmp
pop
in
stc
adc
in
add
movsb
mov
jb
push
iret
mov
push
or
outsb
mov
testl
in
sub
popf
inc
rcrl
mov
jae
jmp
ficoms
sub
jmp
mov
jae
adcb
pop
leave
je
jae
sbb
leave
test
add
mov
xor
pop
xor
nop
and
mov
pop
das
ja
sti
orl
sub
in
mov
inc
xchg
add
dec
xchg
insb
hlt
loop,pt
jnp
jmp
xchg
cmp
shrb
sti
and
push
int3
cwtl
into
pop
xchg
fcomi
xor
test
aad
mov
fsts
lret
cld
shr
cmp
jg
testl
clc
xor
add
mov
mov
pushf
jmp
fsubrp
jne
decb
dec
inc
push
mov
mov
jmp
lds
inc
lds
pop
mov
jmp
inc
sbb
stos
jno
mov
or
out
mov
inc
mov
pop
imul
and
imul
xchg
das
cmp
mov
jo
xchg
xchg
and
add
dec
mov
cs
lahf
negl
pop
or
gs
orb
imul
jo
xchg
push
mov
mov
add
cmpsb
es
cli
test
mov
mov
push
mov
xor
sahf
clc
popa
push
shlb
and
mov
jge
dec
addr16
add
sbb
sub
dec
jo
and
push
mov
std
fsts
pop
push
cltd
or
out
mov
test
or
add
mov
cltd
push
push
dec
mull
icebp
test
les
in
in
aaa
scas
dec
mov
fisttpll
mov
pop
inc
das
lods
cli
aad
and
les
lods
xor
adc
add
mov
mov
and
dec
pop
pushf
pop
fcomp
int3
or
jle
pop
ss
clc
in
pop
test
xor
outsb
jp
mov
xor
sbb
scas
fnstcw
mov
out
adc
mov
adcl
std
insl
mov
movsb
inc
es
fwait
inc
scas
test
xchg
mov
push
dec
bnd
add
add
sub
mov
or
jne
sub
adc
mov
push
sbb
or
push
dec
cli
adc
adc
mov
push
xor
lds
into
jp
push
sarb
mov
scas
mov
cwtl
das
and
xchg
push
xchg
popf
popa
jb
cwtl
pop
sti
data16
dec
pusha
or
jns
pop
adc
je
inc
jnp
lret
pop
movsb
fdivl
cmp
in
ret
stc
adc
outsb
shll
add
popf
bound
lret
icebp
stc
xchg
stos
jl
dec
dec
sub
hlt
sti
daa
jae
sub
aas
jbe
cld
mov
sti
fstpl
loope
xchg
out
js
or
cli
push
jecxz
scas
push
jns
std
push
mov
dec
jle
in
mov
aad
cmp
push
push
jecxz
pop
xchg
lret
testb
mov
sbb
fdivrs
sbb
xchg
cmp
int3
adc
imull
pop
rcl
jp
scas
or
sub
and
pop
add
sub
int3
cli
ja
xor
mov
pop
cmp
out
mov
pop
mov
jle
daa
sahf
inc
sub
mov
lods
pop
and
jo
mov
dec
fistpll
or
and
xchg
xchg
cmp
jno
in
popf
std
mov
cli
imul
push
xor
adcb
mov
mov
pushf
icebp
sbb
sti
mov
dec
mov
sbb
lock
iret
sbb
outsl
dec
lahf
dec
cmp
js
and
outsl
push
mov
ret
adc
cmp
cmpsl
sub
lock
je
mov
push
jnp
mov
cmp
pop
mov
mov
orl
out
mov
mov
push
dec
dec
or
pop
mov
cmp
fcompl
rcrb
cmovs
mov
fsubl
and
loopne
mov
xor
mov
rclb
cmpsl
fcompl
mov
push
add
inc
push
pop
js
sub
std
sub
nop
test
add
adcl
pop
cli
adc
mov
dec
mov
add
xchg
out
sub
inc
push
les
mov
jp
mov
pop
adc
sbb
jae
dec
data16
pop
push
push
push
imul
cmp
mov
jne
rcrb
push
dec
lret
and
jg
or
std
jns
ret
in
mov
roll
dec
jno
lds
pop
iret
and
daa
cmp
push
js
add
test
mov
sbb
xor
mov
repnz
aaa
fwait
cmp
dec
insb
add
sahf
sarb
fsubl
sbb
xor
test
cli
das
pushf
xchg
scas
scas
mov
push
clc
sbb
gs
xor
dec
sti
lods
dec
dec
out
movsl
jno
pushf
movsb
jmp
mov
call
fbld
add
jmp
lret
iret
sbb
cmp
pusha
addr16
test
and
xchg
xor
in
push
add
jae
outsl
lea
ljmp
out
dec
sti
mov
push
sbb
ret
aas
dec
cld
lods
adc
pop
dec
aad
lcall
aas
or
leave
pop
lret
pusha
fistl
xchg
push
sub
push
xchg
push
and
nop
mov
mov
pop
sbb
xor
cmp
incl
pop
fistpll
and
adc
cld
push
mov
lcall
push
fisubrl
cmc
pop
push
les
cld
aad
xor
fdivl
mov
popa
icebp
sbb
in
and
sti
lcall
jl
mov
daa
aaa
push
mov
rclb
xorb
dec
lcall
cmp
stos
xorl
xchg
cmp
scas
arpl
sbb
sub
xor
jns
and
jno
jmp
jns
in
outsb
sub
aas
aas
sbb
lea
lds
imulb
mov
inc
pop
cltd
gs
test
inc
mov
inc
in
ja
lret
mov
hlt
cltd
outsl
cmp
push
pop
mov
jbe
cli
xor
mov
pop
subb
cmpb
cwtl
xor
sub
or
or
cmp
dec
lahf
pop
xchg
and
sub
fdiv
mov
xor
or
gs
pop
das
pop
sbb
out
jne
push
in
xchg
mov
mov
push
repz
fidivl
dec
imul
inc
dec
mov
xor
mov
andb
int3
xchg
inc
xor
jg
or
cmp
decl
push
or
jb
mov
add
pop
mov
adc
jmp
sub
int3
pop
pop
adc
mov
test
lods
stos
aaa
cld
pusha
mov
and
push
xor
xchg
shll
sub
add
pusha
shl
inc
outsl
loope
push
mov
and
adc
cmpsb
rcll
lret
sbb
mov
gs
xchg
lcall
jne
insb
pop
xorb
cld
xchg
inc
daa
cmp
mov
mov
jns
fnsave
or
or
jge
into
dec
xor
or
cmp
or
or
mov
cmp
cmp
pop
mov
lahf
jbe
sbb
mov
and
loope
pop
int3
jle
add
fst
cmp
stos
into
inc
dec
mov
mov
imull
mov
xor
dec
dec
fld
outsl
aaa
enter
lds
pop
xchg
lret
dec
jbe
aad
popw
ror
inc
pop
cwtl
int
out
fwait
dec
add
sbb
dec
sahf
and
idiv
pop
xchg
xchg
in
cli
push
sti
add
cmp
xor
cmpsl
ja
aas
mov
add
inc
xchg
icebp
dec
lock
dec
std
adc
push
and
push
sbb
lret
inc
jl
cli
movsb
adc
out
sub
fbld
mov
sti
dec
inc
out
cld
fistl
repz
test
stc
cmp
fcoml
hlt
xor
sbb
sbb
call
pusha
lods
jl
mov
ficoms
sbb
mov
push
or
mov
in
mov
and
fldcw
fwait
xchg
lods
push
and
xchg
mov
pop
xor
and
ffree
cmp
or
inc
loop
arpl
shll
insb
rorb
pushf
leave
daa
notl
push
pushl
pop
inc
dec
mov
popf
xchg
push
lods
xchg
xor
mov
jae
jge
jge
jge
out
dec
inc
xchg
cmp
adc
jecxz
int
pop
jnp
mov
push
xlat
inc
sub
jb
ret
mov
mov
xor
xor
in
idivb
jae
jo
es
aam
or
loopne
ljmp
adc
filds
push
adc
frstor
adc
icebp
pop
loopne
arpl
jl
out
out
push
lcall
pushf
mov
inc
pop
lahf
jp
pushf
dec
ret
lds
test
pop
xchg
pop
mov
imul
testb
pop
sbb
imul
xorb
or
fsubrs
jmp
cli
add
cmpsl
adc
push
cs
add
xchg
pop
cwtl
mov
push
pop
clc
dec
dec
xlat
fldl
mov
rcll
lahf
cmp
jl
add
jne
std
sbb
ljmp
sbb
sarb
mov
add
or
gs
xchg
in
mov
jae
mov
jno
jle
sbb
push
rcrb
or
cmpsb
sbb
adc
jne
sbb
cmp
inc
push
pop
push
in
inc
and
cmp
pop
sahf
jne
sub
ds
repnz
fcoml
mov
cmp
icebp
ret
repnz
push
add
pop
std
lods
dec
int3
sbb
inc
pop
shll
mov
mov
fldenv
jae
mov
shr
pop
jle
mov
sub
dec
dec
inc
repz
push
push
leave
outsl
sbb
outsl
mov
rclb
add
leave
out
push
xor
mov
int
sbb
pop
pop
aad
loop
sbb
pop
fdivr
imul
mov
aas
ret
imull
jmp
testb
lods
inc
xlat
jbe
cmpsb
out
cmp
je
mov
xor
lahf
push
mov
sti
cmpsl
sbb
or
fwait
leave
jb
fwait
shl
sub
ret
add
scas
fisubl
sbb
mov
xchg
mov
stos
sahf
int3
and
sub
xchg
push
dec
dec
xor
clc
loop
testb
cmp
mov
inc
popa
push
inc
push
push
aam
scas
fdivs
add
call
and
subb
mov
and
daa
insb
test
test
add
fidivrl
aas
into
add
in
stc
pop
lret
mov
push
mov
arpl
dec
add
push
and
test
mov
aam
lods
stos
jp
xorl
mov
dec
addl
ja
fwait
xor
mov
mov
push
cmp
loopne
pop
fists
pop
roll
and
and
int
outsl
xor
jnp
mov
add
xor
ss
or
mov
mov
pop
push
xchg
in
cmpsl
icebp
mov
cmp
adc
in
daa
xor
add
mov
or
xor
je
repnz
arpl
push
sub
mov
add
dec
dec
cltd
adc
and
add
mov
inc
movsl
stos
add
sbb
xchg
and
sbb
dec
or
icebp
push
nop
call
push
jecxz
sbb
add
subb
xorl
jmp
mov
movsb
fs
mov
clc
push
pop
mov
int3
xor
cmp
pop
and
ja
out
inc
sarl
dec
or
mov
xchg
ret
out
mov
push
mov
push
pop
and
adc
jp
cs
es
rolb
sbb
xchg
cld
in
push
mov
fcomps
nop
popa
push
push
dec
stc
or
outsb
test
pop
movsl
mov
cmp
loope
into
aad
xor
pop
in
call
jp
push
loopne
xor
push
push
movsl
je
dec
inc
fsubl
xchg
scas
push
pop
xchg
mov
into
popf
sub
scas
loope
lret
mov
cmp
js
pop
sbb
mov
scas
cmp
cmp
xchg
mov
in
push
adc
push
add
push
xor
out
ja
mov
mov
lods
es
or
test
test
dec
adc
inc
sbb
pop
sub
loope
into
mov
cs
fstps
inc
mov
add
lock
cmpsb
mov
mov
cmp
jbe
cmpsl
gs
adc
xor
jbe
mov
cmp
iret
pop
mov
insl
dec
mov
inc
xchg
sbb
cmc
mov
iret
in
lods
icebp
data16
das
repz
pop
cmpsl
jno
frstor
fwait
push
cli
repz
test
xchg
fcompl
fistpl
sbb
sbb
imul
aaa
inc
addr16
fs
push
and
cmpsb
addb
out
sti
cmp
data16
ds
rcrb
or
int
push
out
xchg
jo
repz
js
sub
repz
inc
and
lods
lret
aad
inc
cmpsl
aas
mov
iret
cmp
ss
xchg
push
mov
xor
pushf
xchg
pop
fldenv
xchg
or
arpl
mov
push
into
outsl
push
sbb
repnz
xchg
icebp
jecxz
xlat
test
clc
test
mov
push
icebp
push
inc
xchg
sub
andl
enter
pusha
repnz
mov
push
pop
push
mov
cwtl
int3
stc
enter
mov
pop
xchg
push
das
mov
js
insl
or
call
push
mov
cld
jno
les
mov
les
or
xor
cmp
ret
fdiv
xchg
sbb
pop
push
mov
repz
cmp
adc
sub
js
sub
sahf
cmp
movsl
jmp
imul
mov
push
jge
and
cli
cmp
xor
add
das
push
pop
mov
push
cmc
add
xchg
jnp
cmpsb
jg
aas
aaa
andb
std
mov
mov
ret
scas
insl
dec
out
rcll
xchg
lea
pop
cmp
jp
test
sbb
xchg
pusha
jb
xor
sbb
int3
lret
popa
xchg
out
pop
xchg
data16
clc
adc
stc
xchg
and
dec
mov
arpl
dec
ljmp
inc
lret
popf
leave
cmc
pop
mov
lret
in
mov
cmp
cmc
add
int3
sbb
pop
lret
mov
jg
decl
mov
inc
pop
outsl
lods
inc
and
adc
mov
mov
fidivl
outsl
push
fdivrl
enter
lea
pop
or
dec
add
fsubrl
loopne
cld
pushf
iret
out
jns
cmp
xchg
xchg
es
push
nop
adc
push
cmp
aas
add
ret
scas
test
and
mov
inc
int
sub
test
lock
popa
mov
jge
stos
add
mov
sub
mov
cli
and
xor
pop
mov
adc
out
pop
lcall
dec
lret
mov
sbb
mov
push
sbb
and
mov
outsb
ja
sti
roll
in
aam
xorb
or
mov
imul
inc
fistpl
out
out
mov
mov
add
add
loopne
outsl
push
sub
sbb
add
cltd
pusha
aad
shlb
lds
mov
gs
jns
loop
jo
movsl
lea
pop
shufps
pop
xor
sbb
adc
xlat
movsb
pop
add
cli
push
fisubrs
pop
repnz
testb
int
xchg
std
pusha
loop
test
or
nop
xor
sbbl
enter
stos
inc
mov
adc
ja
jl
clc
into
adc
aas
pinsrw
and
ljmp
ja
cmp
adc
sti
fcoms
mov
adc
out
jmp
bound
dec
mov
jmp
les
aam
inc
mov
insb
inc
and
lcall
mov
cmp
xor
cltd
nop
test
mov
inc
xlat
xchg
lods
popf
mov
sub
jbe
dec
cltd
out
and
stos
cmpsl
or
cmp
rcll
add
fiadds
adc
mov
fldenv
adc
jp
dec
sarb
jle
aas
bnd
in
mov
push
add
fs
mov
adc
inc
pop
imul
ficomps
dec
xchg
dec
adcl
test
push
push
sub
cmp
rorl
aas
rorb
arpl
dec
in
adc
push
rcll
es
ret
add
aam
sbb
sbb
gs
xor
mov
pop
repnz
ss
sub
mov
sub
xchg
inc
cmc
dec
mov
hlt
jmp
shl
jmp
mov
add
jae
std
xor
push
das
and
daa
add
xor
pop
or
addr16
pop
mov
icebp
out
loope
push
jmp
pop
outsl
mov
dec
leave
hlt
dec
mov
inc
xchg
adc
in
xor
cs
les
pop
mov
lods
push
sti
jecxz
fldt
push
push
shl
mov
push
int3
repnz
fcoml
mov
loope
sahf
mov
sub
iret
into
mov
adc
sub
sahf
mov
and
pusha
jne
xchg
shl
pop
icebp
mov
sub
mov
out
push
testl
sti
cmp
insb
jmp
repnz
jbe
cmp
loopne
adc
sbb
push
cltd
movb
cwtl
mov
cli
mov
sub
dec
orl
popf
and
cmp
cmovbe
jns
and
xchg
mov
cmp
cltd
xor
in
jp
ror
icebp
pop
icebp
loop
mov
mov
push
mov
enter
dec
mov
mov
add
jae
xor
xor
iret
mov
test
aas
fwait
loopne
fists
push
inc
out
xchg
icebp
xor
jle
sbb
push
pop
popl
sbb
loopne
movsb
scas
addl
fsubl
xor
es
xchg
inc
and
mov
out
push
movsl
push
sub
xor
and
lahf
jle
dec
cmp
or
pop
je
aas
scas
pop
jecxz
cltd
scas
xchg
imul
mov
je
push
loopne
enter
daa
in
mov
mov
repnz
bound
les
push
test
xor
inc
outsb
xchg
xchg
sbb
cmc
lock
mov
into
and
push
fadd
jge
jae
cmpsl
adc
push
cmpsb
out
cmpsb
or
orb
xchg
out
xor
mov
xorb
xchg
scas
inc
cmp
imul
and
dec
in
ficompl
fwait
aas
cs
and
xchg
sbb
inc
mov
pop
or
add
inc
inc
jle
icebp
xor
or
dec
pop
xor
lods
pop
push
pop
and
les
sub
sub
test
jle
lret
jmp
pushf
test
pop
inc
add
int3
loope
loopne
aaa
daa
sub
jb
mov
lret
pop
mov
jnp
mov
inc
inc
push
sti
fwait
adc
sub
cltd
sub
btr
enter
data16
sbb
xor
mov
idivl
xchg
enter
jmp
dec
orb
mov
adc
xchg
xor
sahf
pop
mov
sbb
mov
sub
test
testl
mov
jp
outsb
cld
sbb
ret
mov
mov
mov
idivb
push
repz
scas
dec
popa
and
jae
cld
rcrb
lock
lcall
dec
dec
inc
push
dec
into
mov
cli
fcoml
mov
stos
fwait
xor
sub
in
jp
sub
outsl
mov
mov
mov
in
sbb
adc
loopne
stos
fcomps
mov
xchg
test
mov
jg
add
jmp
jae
and
test
fst
lret
ljmp
int3
push
jb
push
jle
xchg
mov
rorl
push
mov
xor
arpl
rcrb
push
mov
and
cmp
sbb
int
push
jmp
pop
fldt
dec
and
rcll
ret
out
stos
dec
pop
mov
lds
jo
pop
lcall
cltd
outsl
iret
test
out
sbb
mov
int
or
mov
and
int
fs
cmp
jno
xchg
ret
lock
cltd
and
aam
and
lahf
ljmp
mov
sub
push
mov
stos
jp
xlat
dec
jns
add
sub
pop
nop
pop
pop
sub
stos
and
cmp
jle
push
push
js
je
mov
mov
shrb
jmp
or
xchg
sti
xor
mov
adc
sub
addr16
push
lahf
lods
jle
sub
es
icebp
cld
mov
ds
enter
mov
les
cmp
push
inc
call
mov
lea
enter
push
into
fcompl
lods
lret
or
cmp
rorb
ret
jle
jecxz
ljmp
aaa
stos
outsl
pushf
dec
inc
scas
jp
popa
out
cmpsb
in
pop
ret
inc
jne
xor
idivb
pop
mov
movsl
aam
mov
cmc
bound
xchg
add
fstl
cltd
dec
dec
sub
xchg
clc
scas
push
pop
pop
jae
cltd
mov
mov
imul
dec
mov
jnp
xchg
sub
inc
inc
jnp
cmp
lcall
add
dec
or
es
repz
mov
mov
lcall
xchg
lret
dec
dec
cld
shll
pop
jle
push
dec
add
neg
inc
mov
outsl
xlat
lods
xlat
or
mov
jbe
sbb
dec
inc
rorl
imul
jo,pn
push
cmp
ja
dec
inc
dec
repnz
movsl
push
xor
or
jecxz
addr16
add
add
sbb
inc
lock
sub
scas
out
daa
mov
mov
stos
mov
into
cmp
icebp
lods
shll
jle
mov
dec
ret
cmpsl
repz
movsl
jecxz
xchg
xchg
cmp
dec
loop
cmp
jle
ljmp
jo
cmp
outsl
in
into
mov
add
lock
daa
sarl
inc
pusha
inc
lods
jecxz
pop
iret
stos
inc
sub
divb
xchg
lock
imul
sub
adc
add
mov
dec
xor
jecxz
adc
add
gs
ljmp
dec
pusha
pushf
inc
cmp
jge
pop
jns
scas
cmp
popf
mov
push
and
test
loopne
scas
scas
daa
lods
adc
mov
iret
shll
cmpsb
es
lock
mov
mov
or
cmp
add
xchg
mov
ljmp
add
cmp
mov
pop
add
push
or
sti
je
xchg
pop
xor
cmp
dec
inc
push
push
iret
insb
pop
pop
mov
mov
inc
lcall
loopne
rorb
movsb
xlat
push
pop
jb
ljmp
je
incl
add
loop
je
int
pop
add
outsl
jp
repz
adc
mov
scas
pop
push
xchg
pop
movsl
push
sbb
adc
dec
std
and
test
shr
jb
pop
sub
mov
cwtl
rcrb
mov
cmpsl
xlat
sbbb
cmp
jle
mov
aas
adc
sti
mov
sub
fists
xorl
imul
mov
pop
sbb
push
es
xor
jge
mov
cmpsl
mov
inc
fstl
jp
sbb
xchg
jg
out
push
les
lods
jb
push
jns
jno
sbb
cmp
movsb
mov
adc
cli
into
xchg
out
cmpsl
cmp
sbb
push
hlt
mov
inc
sub
adc
loope
mov
sbb
lret
jmp
sbbb
dec
cmp
fwait
mov
mov
inc
or
cli
stos
sub
fcomip
ja
imul
call
xor
pop
and
int3
and
xor
xor
insl
jle
clc
xchg
mov
pop
jecxz
mov
xor
dec
dec
cmp
out
dec
sbb
mov
sbb
xor
sub
jle
sub
jno
not
aad
scas
pop
xor
or
ja
call
and
sahf
fisttpll
out
mov
inc
dec
mull
test
jg
out
cld
insb
jge
in
fistl
xchg
adc
and
arpl
test
or
aaa
xchg
cmp
addr16
mov
aas
cmp
sbb
jae
mov
ljmp
ljmp
jp
shrl
test
xchg
jne
lods
and
std
jns
js
arpl
mov
outsl
jno
sbb
dec
jecxz
ja
testl
lret
pop
int
jb
icebp
push
std
sahf
cmpsb
add
inc
popa
sbb
test
hlt
repz
dec
std
js
push
cld
fs
push
cmp
clc
divl
daa
adc
ficoms
jno
fisubrs
dec
and
das
inc
outsl
mov
aad
inc
mov
xchg
pop
xchg
push
cwtl
outsl
fcom
inc
and
sti
push
sti
stc
lods
mov
hlt
sub
cmp
pop
jo
sbb
cmp
jge
jmp
pop
int
push
jae
mov
mov
mov
push
cs
mov
jbe
dec
inc
mov
xorps
jb
sahf
xchg
mov
xchg
movsb
or
enter
cmp
cmc
mov
adc
jmp
jecxz
xlat
pushf
adc
cmp
orb
das
pop
mov
cmpsb
or
mov
push
cmp
pop
xor
pop
push
dec
dec
dec
aad
loop
or
push
dec
cmp
aam
loopne
cmp
cli
es
push
out
in
cmp
mov
mov
aaa
push
ds
cmpsl
fldl
fucomi
cmp
adc
or
add
popa
pushf
jg
mov
mov
daa
sbbl
mul
ret
push
call
push
out
pop
push
lods
inc
pop
dec
jno
aas
add
scas
push
jl
ffreep
shlb
jb
arpl
sbb
xchg
js
jmp
adc
filds
std
xor
mov
in
call
inc
push
cmc
int3
cmpsl
cmp
and
aam
xchg
and
fists
adc
enter
popf
adc
lock
dec
sbb
stos
jecxz
sub
cmp
ret
hlt
and
ret
xchg
adc
imul
jl
cmc
add
xchg
les
pop
mov
inc
xor
xchg
cli
and
fsts
je
leave
cmp
ja
repnz
xor
ljmp
adc
call
js
pop
popa
mov
int
mov
add
imul
inc
and
lods
shl
aam
mov
adc
push
lods
loopne
and
sub
mov
sub
mov
pop
int3
js
dec
cmp
sub
repnz
and
mov
flds
inc
mov
mov
ret
lds
mov
mov
es
scas
clc
leave
lea
mov
ljmp
pop
ret
cmp
jnp
inc
xor
ds
mov
xor
ffree
aad
cmp
sub
js
push
push
shll
imulb
push
jmp
dec
xchg
call
test
mov
jge
enter
jnp
mov
notl
mov
aas
stc
xchg
sar
adc
adc
xor
xchg
xor
inc
in
xor
jmp
jns
mov
mull
and
add
fisubs
notl
mov
adc
pcmpeqd
mov
mov
jno
js
bound
jge
cltd
jno
gs
jge
adc
mov
push
fcomps
pop
in
test
insl
push
movsb
xchg
mov
push
cs
pop
mov
mov
ss
jb
sub
rcrb
jg
loopne
out
enter
addr16
jae
jp
sub
cmp
jl
xor
lret
adc
xchg
cmp
movsl
lcall
dec
adc
xchg
pop
xchg
in
jle
test
sbbl
mov
jns
es
movd
loop
jae
mov
add
jl
neg
rol
lock
add
mov
adc
loopne
movsl
popf
inc
jno
or
push
loope
sar
and
cmp
outsl
out
sub
mov
lds
in
scas
iret
add
cmc
inc
jmp
cmpsl
push
push
or
jle
xor
jb
push
fnsave
sub
mov
push
bound
mov
aam
add
cmp
jp
lret
outsb
addb
push
bound
or
cmp
rolb
mov
clc
insl
jno
inc
push
stc
adc
loop
outsl
insl
std
stos
test
ret
jne
xchg
notl
mov
fdivl
cwtl
cmpsb
jp
cld
out
clc
cltd
add
pop
cmp
int3
mov
test
mov
mov
sbb
pop
movsl
push
outsb
xchg
out
jmp
pop
cmp
lods
lods
addr16
lea
jbe
cld
scas
lods
insl
insl
int
dec
pop
xchg
jae
inc
cmp
fdivs
xchg
pop
xchg
mov
rcll
sbb
adc
adc
bound
je
insl
repz
push
stos
push
leave
pop
js
pop
push
xchg
xchg
sub
add
jge
mov
cmpsl
push
pop
xor
push
mov
cmp
dec
jns
int3
mov
mov
cmpsb
jecxz
adc
mov
sub
mov
jns
movsb
lock
push
out
cmp
adc
or
cli
stc
jg
sbbb
inc
sub
pop
pop
xchg
leave
sbb
mov
pop
sub
inc
es
push
out
fsubp
jae
fcmove
jge
mov
pushf
push
xchg
das
xchg
cmpsl
testb
orb
adc
adc
lods
sub
xchg
aam
push
out
xchg
inc
add
jne
push
xor
repz
aad
in
mov
lcall
and
inc
cmp
and
loope
xchg
pop
jbe
or
and
jno
insb
gs
flds
into
cmp
inc
dec
xchg
leave
scas
imul
out
das
sbb
and
clc
jns
pop
out
std
push
lock
push
pushf
repz
clc
jno
popa
lods
push
fxch
das
push
arpl
imulb
push
icebp
ja
cmp
or
adc
push
notb
mov
add
lret
cmp
test
jns
or
xor
jl
scas
mov
hlt
loopne
pop
add
xchg
pop
fsts
ss
or
in
int3
leave
jecxz
lock
inc
lods
pop
push
ljmp
pushf
iret
mov
lret
mov
arpl
gs
leave
dec
add
scas
and
repnz
sbb
mov
bound
les
shll
sarl
push
push
mov
fwait
les
orl
sbb
sbb
leave
cmp
mov
imul
pushw
test
adc
mov
push
sbb
or
or
mov
add
daa
cmp
xchg
lock
jmp
mov
pop
xchg
xlat
fld
jae
pusha
pop
pop
or
lret
fs
aas
aad
insl
xchg
or
mov
pop
aad
out
lods
pop
mov
loope
test
cmp
push
jb
adc
mov
out
xor
lds
mov
repz
in
mov
mov
testb
data16
sbb
shl
xchg
ret
js
loopne
cltd
mov
dec
cmp
or
mov
pop
lods
add
stc
pop
rorl
test
mov
sbb
pop
ljmp
jno
push
pop
mov
add
push
jne
push
pop
xchg
push
sbb
lcall
fdivrs
cmp
enter
add
adc
pop
xlat
es
fnstenv
dec
xchg
jmp
shl
cmpb
mov
nop
scas
inc
xchg
mov
cmc
inc
and
adc
add
or
push
pushf
jge
and
mov
jo
lret
int3
aam
mov
jl
ficomps
mov
and
sub
pop
leave
dec
mov
nop
pop
jo
mov
xchg
clc
push
out
cmp
sahf
or
iret
cltd
jle
sbb
sahf
testl
xchg
xchg
call
cmpsb
popf
mov
cld
sbb
cmc
sub
push
mov
xchg
mov
test
test
and
fs
push
iret
mov
js
add
fwait
xor
in
aad
inc
cwtl
std
jae
sbb
enter
mov
ret
xor
mov
jno
sbb
fidivs
and
es
jg
faddl
dec
shlb
clc
xor
addl
fsubrl
mov
cs
xor
mov
mov
int3
dec
jae
xlat
dec
sbb
icebp
lock
add
mov
or
mov
fdivrs
arpl
sbb
scas
data16
push
iret
out
lret
cmp
addr16
scas
cmc
dec
scas
fiaddl
addps
adc
dec
ds
shr
aaa
popf
mov
divb
cmp
lds
push
aas
lods
adcb
pop
adc
imull
lea
and
movsl
mov
and
jle
inc
sarb
mov
lods
loopne
push
aas
or
pushf
xchg
repz
sub
test
bound
iret
dec
lds
mov
movsl
and
lds
add
sub
pop
jp
stos
stc
lods
jae
lcall
enter
fistpll
inc
add
imulb
stos
push
pop
pop
dec
xor
test
rcll
es
ds
fsts
or
fwait
rcll
and
adc
je
sub
jnp
inc
mov
push
pop
lahf
movb
js
out
mov
imul
inc
das
arpl
repz
xor
repz
xchg
add
xchg
je
inc
add
cs
in
icebp
rcrl
stos
and
sbb
test
xlat
sbb
in
scas
cli
daa
xchg
add
push
push
stc
push
cltd
mov
push
sbb
mov
je
leave
cmc
int3
shll
mov
fistpll
fadds
cpuid
es
mov
insl
add
loop
push
xor
cmpsb
std
fnstenv
out
movsl
fmuls
shlb
push
aas
adc
ljmp
enter
outsl
xlat
addr16
enter
mov
jae
mov
jmp
mov
nop
jo
or
dec
mov
rolb
xchg
jle
adc
sub
and
jl
and
imul
xchg
aas
mov
sub
inc
shrb
stos
pop
xchg
push
push
js
ljmp
jg
dec
mov
jg
mov
cmp
push
subb
pop
fnstcw
enter
cmp
repz
jmp
adc
mov
cmp
push
xorb
cmpsl
jle
push
add
stos
ss
xor
test
cli
pop
xchg
sbb
int3
lahf
xor
sbb
push
out
mov
loop
lret
repz
mov
sub
les
rol
mov
gs
add
push
xchg
push
mov
data16
jmp
inc
dec
xchg
xchg
scas
xchg
outsb
pushl
pop
cmc
xchg
or
inc
lods
lds
or
testb
repnz
adc
insl
cmp
lods
call
cmp
mov
mov
mov
cwtl
addr16
lds
cmpsl
roll
mov
mov
xchg
stc
jno
add
andb
sbb
jo
push
add
push
xorb
daa
inc
sub
in
pop
lock
sti
arpl
addr16
jg
insl
test
jbe
gs
mov
adc
lret
stos
mov
shlb
cmpl
xchg
and
xchg
push
call
and
or
sbbb
cmpsl
mov
int3
data16
push
out
push
jnp
sbbb
dec
ret
inc
mov
shl
sbb
push
pop
call
xor
dec
xchg
push
mov
cli
clc
mov
subb
mov
shll
add
sbb
xchg
pop
daa
pop
or
aad
mov
aas
mov
fnsave
arpl
or
shrb
jecxz
loope
je
lret
mov
insl
rol
sub
pop
add
push
outsb
adc
mov
loopne
mov
cwtl
mov
sbb
add
ret
dec
xchg
bound
aas
pop
repnz
sbb
jne
pop
jg
lcall
mov
push
arpl
dec
stc
and
mov
fs
ret
push
std
inc
lret
aaa
subb
scas
pop
lods
sbb
or
test
push
aad
pop
jo
jp
xchg
mov
loope
or
dec
test
pop
cmc
mov
pop
cmp
sub
jne
xor
add
fwait
add
adc
mov
sub
mov
loopne
inc
imul
jp
adc
jnp
cmpsl
fisttpll
lods
pop
hlt
jle
push
ss
loope
xor
mov
orl
or
jmp
pop
jle
out
inc
jg
js
xchg
gs
mov
jge
nop
mov
fptan
pusha
jb
add
cmp
mov
test
shrl
rorb
or
popa
add
adcb
sub
xchg
push
sti
push
inc
adc
xchg
xchg
mov
jbe
mov
idivb
inc
outsl
push
cli
rorl
ja
orl
jbe
and
or
push
xor
dec
or
fsubl
insl
push
scas
test
mov
int3
arpl
push
jg
int3
iret
add
xor
insl
leave
adc
pop
rolb
test
ss
out
imul
in
lds
mov
lret
or
push
pop
push
faddp
xchg
insb
xchg
xor
dec
call
inc
sub
icebp
inc
inc
xchg
cs
stos
mov
shl
xchg
push
in
dec
repz
sbb
and
loop
mov
sbb
orl
cmc
repnz
jle
xor
lods
xor
push
out
cmp
pop
cli
mov
insb
les
sub
test
push
add
ret
push
scas
movsb
call
scas
or
aam
xor
pop
xchg
scas
jnp
das
inc
sbb
lods
xchg
push
aaa
cmp
xchg
mov
push
push
out
pop
scas
rclb
mov
das
xchg
scas
repnz
jb
lahf
dec
lods
rol
into
iret
mov
mov
xor
loop
leave
loope
cli
pop
push
int3
pop
sub
mov
lods
je
daa
test
dec
clc
and
xor
or
jmp
pop
push
negb
int3
sbb
movsb
inc
jns
and
repnz
in
cmp
fmuls
shl
out
and
div
xorl
push
repnz
pop
cwtl
mov
jmp
cmp
ret
xor
inc
loope
mov
push
daa
in
cwtl
insb
inc
push
insl
daa
inc
adc
dec
dec
xor
cmp
sarl
pop
frstor
rolb
mov
roll
xor
cmp
mov
out
ljmp
jno
inc
ja
repnz
push
ds
popf
fucom
mov
push
icebp
add
adc
push
mov
mov
fwait
mov
or
lea
aam
dec
or
dec
pop
stc
or
or
cmpsw
fyl2x
jne
pop
sub
movsl
fdivr
or
xor
popf
lods
inc
mov
test
jne
mov
inc
xchg
hlt
mov
cmp
add
pushf
sbb
cld
jno
push
adc
jg
cmp
in
aad
movsl
bound
mov
test
repz
jne
push
sahf
push
insl
test
lea
scas
shlb
push
leave
mov
repz
xor
stos
push
imul
mov
inc
stos
and
pop
decb
int
mov
out
enter
call
add
ret
adc
xor
mov
lods
inc
xchg
loopne
mov
popa
movsb
faddl
shrl
gs
lret
xchg
cmp
in
aaa
call
mov
inc
out
aaa
jb
iret
jns
shrl
lods
push
out
adc
imul
pop
cld
bound
js
jbe
mov
push
sbb
sbb
mov
dec
adc
mov
mov
dec
leave
adc
nop
insb
jns
dec
ficompl
test
sti
or
bound
xchg
repz
lods
into
subl
adc
push
add
cld
sub
lods
or
lret
fwait
adc
sub
je
popf
push
mov
pop
in
mov
fwait
jno
xor
dec
mov
cmpsl
xchg
dec
sbb
out
loopne
mov
stos
mov
ja
bound
jnp
fildll
dec
in
fadd
push
iret
leave
mov
adc
shrl
mov
es
shll
jp
pop
or
clc
stc
cmpsb
adc
lock
lea
push
clc
loope
incb
int
loopne
aad
mov
pop
sub
hlt
aam
pushf
sbb
mov
pop
dec
inc
push
ret
ret
dec
aaa
add
mov
sub
cmp
shrd
ss
jmp
mov
xchg
adc
jb
fistl
push
repnz
jmp
add
call
sbb
loope
lret
out
cmpb
xor
xor
out
jecxz
jle
mov
mov
sbb
or
xchg
leave
bound
cmpsb
mov
cmpxchg
xchg
xlat
mov
clc
sbb
idivl
sbb
in
sub
pusha
xchg
or
push
cmp
or
sti
and
outsl
xchg
stos
adc
in
mov
jne
xchg
or
pop
jbe
cmc
ljmp
jno
sub
hlt
sbbb
jbe
mov
pop
arpl
jne
das
cld
or
xchg
daa
jo
lahf
or
xor
fisttpl
mov
xlat
add
outsl
push
daa
push
add
push
and
cmc
mov
pop
pop
ja
sbb
insl
mov
jl
push
cli
mov
adc
or
sub
loop
jne
fsubp
enter
je
orl
mov
iret
dec
and
fldcw
rol
pop
jp
inc
or
pop
mov
pusha
daa
push
jle
cld
imul
movsb
insl
cs
jle
xchg
push
inc
sub
mov
inc
jg
test
loopne
clc
addr16
sub
xchg
imull
lock
mov
call
sahf
or
mov
adc
xchg
cmp
enter
imul
sub
int3
pop
arpl
cmp
and
sub
push
loope
outsl
stos
push
push
loope
daa
mov
mov
jge
pushf
subb
xchg
out
jo
xchg
call
push
pop
subl
mov
test
cld
add
push
pop
and
jp
lcall
pop
into
mov
leave
cmp
ja
xchg
pushf
icebp
xchg
xlat
push
add
inc
sbb
das
jge
jmp
cltd
dec
lea
fsubl
add
inc
jl
xchg
and
imul
rorl
pop
sub
xchg
jle
and
add
or
xchg
scas
xchg
sub
cwtl
adc
iret
test
shrl
dec
cmp
ja
cli
mov
xchg
push
mov
mov
out
loop
in
push
lret
pop
out
inc
push
fnsave
in
sub
pop
mov
mov
cwtl
mov
rorl
pop
xor
mov
jb
sub
sub
xor
int3
xchg
test
test
xchg
iret
adc
dec
lods
arpl
loopne
mov
fildll
mov
lock
sub
dec
or
cmc
ljmp
pushf
jnp
pop
outsb
jmp
aaa
scas
mov
bound
popa
push
xorl
mov
xchg
push
dec
sub
push
fwait
or
mov
orb
adc
mov
push
ficoms
movsl
xor
imul
cmp
ret
in
push
ja
aam
cmpb
and
cmp
js
ret
adc
leave
out
jge
dec
xor
repnz
sub
das
pop
cltd
push
inc
xchg
dec
jae
hlt
fucomp
rorl
dec
arpl
sub
jo
xor
movsl
mov
ret
adc
xchg
cmpl
xor
in
and
sub
lret
insl
mov
add
inc
lret
cmp
in
iret
bound
adc
mov
int3
push
enter
sbb
push
sub
icebp
push
dec
lcall
ss
mov
mov
pop
push
sub
idivl
inc
test
lret
adc
mov
xchg
pop
inc
pusha
cwtl
fdivs
push
mov
xchg
jmp
push
ljmp
out
fsubr
adc
and
das
insl
push
aad
jns
jbe
test
lcall
mov
in
mov
stos
ret
and
daa
push
inc
add
mov
or
xchg
cwtl
dec
fldl
loop
xor
sbb
inc
fs
jo
mov
or
outsl
stos
cmp
repnz
inc
stc
cwtl
scas
add
or
inc
movsl
push
sub
dec
dec
loope
test
fisubrl
dec
cmp
jp
fidivs
lock
mov
into
mov
xor
shll
pusha
xor
popa
add
inc
sti
dec
mov
jecxz
test
jg
dec
xchg
xchg
dec
ja
adc
ret
lret
xor
dec
cwtl
xor
inc
adc
xor
adc
xor
ja
lods
mov
in
xor
push
xor
dec
or
xor
adc
incb
shrb
or
pop
pop
push
jp
setns
jo
in
dec
xlat
sub
les
shlb
ret
inc
js
inc
push
std
sbb
ljmp
repnz
xor
adc
mov
out
cmp
xchg
sti
cli
inc
repnz
loopne
aad
jle
pushf
mov
sbb
mov
xchg
and
imul
mov
cli
mov
mov
nop
or
push
push
jbe
cmp
xor
and
sub
adc
mov
popa
outsl
cwtl
xor
mov
mov
jo
mov
push
push
shl
std
adc
mov
fnsave
sub
insb
sub
xor
lods
stc
cmp
int
cmp
arpl
popa
sahf
test
loope
cli
clts
cmp
pop
cs
push
mov
popa
cmc
jo
mov
enter
bound
jl
sub
inc
icebp
jb
scas
out
outsl
push
cmp
test
and
scas
xlat
shlb
cmp
loop
cmp
ja
push
rorl
js
fcmovu
incl
mov
cmpsb
mov
loopne
inc
fwait
inc
pop
sbb
inc
jae
pop
out
mov
lcall
stos
sbb
inc
push
ljmp
inc
xlat
inc
mov
xchg
jo
xrelease
out
push
subl
test
add
cmpsb
push
int3
xchg
pushf
and
and
xchg
cmc
add
adc
cmp
imul
add
xchg
lea
pop
adc
in
daa
jbe
xchg
sbb
xor
sub
cmpb
lahf
sti
and
mov
icebp
cmp
sbb
cmp
fadds
jb
neg
cwtl
cwtl
jne
push
cmp
cmp
mov
xor
sub
outsb
push
mov
pop
bound
icebp
push
je
enter
int3
push
cmp
shlb
lret
dec
stos
push
xchg
aam
and
cmp
jo
jmp
ljmp
sub
or
int3
mov
mov
jae
mov
pop
sahf
mov
mov
sub
adc
ror
aas
dec
adc
mov
dec
pop
fs
mov
or
sub
imul
cwtl
or
sub
in
push
cld
arpl
xchg
mov
xor
pop
pusha
adc
mov
aaa
fildl
cmp
fwait
or
es
loope
icebp
out
mov
sub
cmp
pop
rorb
sarl
push
stc
xor
or
leave
aaa
adc
sbb
incb
add
sub
dec
mov
mov
cmc
cmp
test
js
xchg
inc
and
outsb
je
mov
pop
pop
sub
out
in
jecxz
nop
test
inc
stos
ljmp
mov
fs
cmp
repnz
jmp
adc
inc
jno
add
add
jne
xlat
lock
lock
js
outsb
cmp
enter
and
cli
fsts
push
adc
bound
lods
xor
jno
in
daa
push
xor
fwait
pop
es
js
in
inc
loop
hlt
mov
sbb
adc
arpl
xchg
test
adc
enter
cwtl
jg
jle
jecxz
les
or
sbb
orl
dec
sahf
das
enter
inc
adc
add
lock
xor
daa
iret
pop
subl
xor
cmp
cmpb
pop
mov
lods
fldl
lea
jmp
or
repz
xlat
lahf
pop
push
stc
or
sbb
mov
jnp
sub
dec
mov
pop
je
cwtd
xor
les
sbb
pop
mov
repnz
outsl
shlb
dec
or
lea
xchg
filds
stc
imul
leave
out
dec
mov
add
add
lret
sub
popf
out
dec
cmp
xchg
mov
and
lds
daa
pop
mov
push
outsl
mov
inc
ret
sub
adc
cwtl
dec
insb
scas
pop
mov
inc
pop
rclb
adc
jb
jp
rcrl
pusha
test
call
je
and
sub
inc
sti
js
pushf
adc
and
lahf
and
pop
dec
leave
test
xorb
gs
dec
out
sbb
js
je
sub
cmp
mov
inc
movsb
cltd
shr
movsb
into
aas
das
or
mov
mov
imull
pop
and
adc
push
mov
repnz
gs
fisttpll
mov
cli
add
sahf
dec
leave
testl
add
cld
sar
popa
xorb
cltd
add
es
mov
lcall
push
mov
pop
scas
mov
pop
mov
xchg
ds
repz
jecxz
push
add
int
adc
xor
push
sbb
inc
scas
popf
mov
inc
adc
mov
and
jge
pop
arpl
nop
loopne
dec
loopne
mov
add
gs
sub
loope
lret
and
aaa
test
rcrl
std
add
inc
imul
jo
dec
pop
dec
dec
xchg
jb
out
mov
cmpsb
mov
add
mov
mov
ret
cltd
std
shll
push
mov
mov
pop
insl
stos
lods
cs
dec
in
mov
pop
push
dec
fwait
pop
add
push
or
imul
lea
fildll
jns
insb
sub
fsubrs
add
dec
sbbl
xchg
mov
dec
mov
pusha
mov
xchg
loope
test
jns
call
or
mov
add
test
outsl
psrld
inc
iret
imul
mov
xlat
mov
mov
imul
sti
push
mov
movsl
fisubl
mov
scas
dec
jmp
push
adc
addb
sub
out
cmpsl
jg
xor
enter
inc
movsl
mov
push
and
and
adc
loop
sbb
jmp
fidivs
arpl
rclb
bound
fstpl
sub
test
jle
adc
mov
lret
adc
xchg
lret
adc
xlat
orl
inc
dec
insl
xlat
dec
fdivrs
aam
lds
mov
ds
call
stos
test
or
iret
je
push
sbb
in
test
add
sub
xor
inc
dec
and
jo
clc
imul
pop
mov
and
cvttps2pi
sub
xor
cmc
xchg
cmp
push
xchg
add
in
iret
pop
or
add
fsubs
scas
xor
cwtl
sbb
lea
pop
sub
lock
sub
imul
out
fcmovnb
pop
cmp
mov
lahf
mov
push
enter
ja
in
scas
test
roll
scas
mov
xchg
mov
xlat
jl
cmpsb
or
dec
fsts
adc
push
nop
jl
push
jl
and
push
mov
cmp
cmp
movsb
adc
and
je
dec
xor
mov
pop
push
rcrb
int
cmp
lods
fwait
ret
leave
movsb
aad
aam
cwtl
es
xchg
loopne
mov
arpl
mov
imul
dec
jg
mov
cs
arpl
mov
xchg
mov
popf
sahf
adc
popf
aas
and
push
mov
int
repnz
insl
xlat
jo
cmp
mov
sbb
sub
int3
addr16
jmp
movsb
iret
in
push
jnp
test
fbld
add
cmpb
fcmovnu
xchg
xor
mov
ss
shll
mov
push
fistps
dec
xor
cltd
and
mov
xor
mov
xlat
mov
pop
cmpsl
ret
shll
mov
fprem1
cltd
pop
add
repz
jg
outsl
cmp
add
mov
and
cltd
mov
add
into
jl
stos
loopne
cltd
xchg
sti
pushf
adc
jmp
jns
sbb
insb
pop
mov
push
inc
jmp
cmp
sbb
fxch
stc
mov
insb
movsl
sub
sbb
call
jne
cwtl
fwait
jl
inc
sti
sub
sti
sahf
mov
ljmp
fs
add
cmpb
pop
sbb
xor
xorl
in
mov
pop
icebp
add
stos
leave
and
add
cmp
jb
fnstenv
sub
or
lods
pop
sub
inc
mov
xor
dec
xchg
adc
xor
std
insl
jnp
in
test
mov
push
aaa
ja
push
and
add
mov
xor
loop
fldt
jmp
insb
std
sub
aad
out
sbb
cmpsb
cmpsl
fistps
loop
push
adc
paddd
mov
cwtl
pop
insb
inc
mov
jne
inc
adc
test
test
mov
das
mov
pop
sti
sbb
adc
sahf
add
lods
cld
sarb
fstpl
cmp
sbb
xlat
push
mov
mov
mov
fisubrl
jno
and
dec
fistpll
jl
outsl
dec
gs
adc
inc
loop
mov
cmp
outsl
cltd
in
mov
add
cmp
sub
lahf
shrl
mov
or
arpl
stos
leave
add
mov
push
jg
jecxz
int3
out
mov
xchg
inc
lahf
xchg
add
sbb
mov
and
jo
sti
aam
push
and
push
add
cli
or
cmpsb
insl
test
out
adc
hlt
out
dec
jle
adc
out
aad
lods
and
outsb
nop
insl
dec
sub
lret
cmp
jne
and
sub
add
jbe
shlb
sub
inc
shr
ds
push
inc
mov
push
loope
lea
inc
movsb
std
xchg
mov
sub
mov
es
testb
movsb
arpl
fnstsw
aaa
fdiv
dec
int
mov
pop
add
jne
pop
lahf
loop
and
std
fcmovne
ljmp
in
hlt
repnz
mov
jne
iret
dec
sti
subb
or
cmp
out
insb
movsb
lods
insl
data16
mov
into
outsb
mov
hlt
push
inc
jecxz
cli
and
add
or
in
or
xchg
daa
loop
js
pop
xchg
aas
mov
scas
pop
and
mov
pop
cmc
mov
ja
push
push
jg
cmp
mov
nop
add
adc
loopne
imul
jbe
jg
fs
sbb
jae
sti
jne
or
shrl
pop
pop
push
pop
frstor
fiadds
stos
add
sahf
push
sahf
jns
in
xor
ljmp
pop
xor
jp
jo
xor
lret
xorl
dec
jp
adc
fwait
cmp
add
mov
fcomps
rolb
sub
ljmp
jo
js
pop
pop
push
mov
mov
inc
add
sub
or
cmp
or
mov
fidivs
sub
popf
jnp
data16
les
lcall
push
and
mov
push
stos
mov
cmp
stos
xor
push
mov
je
xchg
sbb
cwtl
ret
pop
push
stos
xor
hlt
ret
inc
push
pop
mov
mov
test
jl
mov
sub
cld
jecxz
lods
ds
cli
pop
imul
lret
fwait
pop
aas
add
pop
or
or
cmp
dec
adc
or
pop
mov
dec
and
into
xchg
int3
scas
push
adc
inc
push
sbb
add
addr16
push
mov
adc
mov
fbld
sbb
loop
mov
sub
popa
sbb
dec
inc
mov
mov
dec
js
ljmp
push
mov
lahf
mov
fs
mov
gs
adc
xorl
jb
cmc
pop
inc
jp
push
cmp
movsl
lret
inc
push
mov
adc
fwait
out
jae
sub
xchg
ret
aas
sbb
cld
lcall
push
inc
clc
jne
lcall
pusha
mov
fwait
xchg
call
inc
or
adc
das
xchg
xchg
outsl
fsubr
mov
add
mov
dec
push
cmpsl
dec
pop
cmp
and
add
cmpsl
ret
scas
das
mov
ret
test
ret
ret
mov
call
neg
add
add
imul
call
shrb
cmp
push
repz
stos
outsl
lea
push
lea
mov
xchg
iret
mov
fbstp
add
mov
data16
pop
jle
pusha
ret
inc
in
stos
xorl
push
inc
or
ljmp
xchg
repnz
mov
push
push
cmp
xor
sub
ss
sbb
pop
imul
cmc
xchg
mov
push
push
sub
mov
cmpsb
mov
les
shll
jecxz
hlt
or
mov
mov
push
xchg
in
js
repnz
negb
mov
and
test
cmp
adc
stos
cltd
jmp
test
xchg
push
sbb
cmc
mov
cmp
xor
jge
add
or
data16
ret
lahf
enter
mov
pop
pusha
mov
arpl
dec
jne
xor
fwait
inc
loop
outsb
xchg
add
adc
les
pop
cmpsb
dec
add
test
push
in
out
loop
xor
ljmp
lock
push
cpuid
push
adc
inc
push
das
ss
cld
ret
pop
orl
enter
mov
sbb
out
mov
cli
add
enter
push
test
stc
sub
call
bound
or
sub
mov
cs
lea
sbb
call
pop
sbb
jge
add
pop
add
xorl
fs
repnz
pop
rolb
mov
mov
add
mov
and
daa
xor
aaa
push
cmp
inc
push
fmul
adc
mov
lahf
aaa
fcmovb
xchg
test
ljmp
push
les
add
pop
gs
idivl
adc
push
push
adc
mov
ror
inc
mov
inc
xlat
test
add
pop
test
jnp
aas
pusha
jb
mov
cmp
in
iret
insl
andb
fwait
mov
lods
inc
fwait
xor
xchg
ds
lea
pop
lea
mov
dec
mov
mov
aaa
out
ret
xor
jp
shrl
movsb
jo
faddl
dec
out
push
ret
cmp
push
mov
addr16
fnstenv
push
cld
aam
in
push
stos
aad
and
fldl
xchg
test
push
inc
mov
xor
cmpsl
xor
push
js
push
rcl
mov
xchg
push
stc
pop
inc
filds
jbe
notb
enter
mov
subl
xor
jno
mov
inc
pop
cld
loop
aam
mov
cli
xchg
sti
addr16
test
aaa
dec
push
jno
cmpsl
into
sub
jnp
test
xchg
pop
mov
xchg
scas
aaa
cmpsb
adc
aam
pusha
or
int3
lret
cmovs
inc
xchg
xchg
divb
xor
xchg
les
rcl
movsb
int3
mov
and
mov
cltd
pop
push
jae
call
sbbb
push
xor
jae
call
cmp
lock
pusha
bound
push
fisttpl
add
jecxz
xor
sbb
mov
sbb
jns
movsl
inc
out
aam
add
mov
lret
or
sbb
inc
xchg
xchg
gs
enter
jbe
mov
xor
mov
and
xor
mov
in
adcl
rcrl
das
push
sbb
add
inc
mov
inc
cmp
mov
int
push
daa
xor
lods
mov
jmp
mov
and
hlt
movsl
outsl
pop
or
pop
mov
mov
fbld
cwtl
sub
mov
dec
ljmp
call
inc
mov
fimull
mov
mov
adc
xor
fwait
enter
cmpsb
push
cmp
je
lret
jno
xchg
lds
stc
das
iret
test
pop
ja
mov
mov
and
mov
hlt
inc
sub
xchg
in
fiaddl
or
xchg
pop
fwait
insl
cmp
mov
data16
push
repz
inc
mov
dec
fs
fcoml
fdivs
mov
sub
push
dec
and
sbb
repnz
and
mov
imul
out
fisubs
mov
dec
mov
aaa
test
icebp
stos
cmc
lcall
stos
mov
mov
sbb
sbb
cltd
lock
mov
adc
xor
sbb
test
mov
ja
inc
xchg
sbb
jne
jle
mov
dec
push
inc
adc
das
pop
jb
and
add
push
cmp
mov
push
xlat
pop
push
test
shrb
out
xchg
adc
cwtl
out
xorb
icebp
jmp
mov
mov
xor
push
push
out
pushf
movsb
js
mov
daa
mov
sarl
mov
inc
stc
and
xchg
xor
cwtl
cmpsl
rcll
out
sbb
dec
ret
inc
sbb
fucomip
imul
shrl
pop
mov
outsl
push
xchg
cmp
pusha
pop
pop
rclb
pop
inc
xchg
mov
pushf
sahf
and
cmp
xchg
scas
inc
pop
outsl
bound
cmpb
inc
or
sbb
or
xor
out
jecxz
add
mov
adcl
sbbb
or
push
lahf
pop
and
push
xlat
scas
dec
pusha
cld
outsb
mov
mov
into
bound
xchg
aad
scas
ret
lahf
data16
xor
lret
pushf
push
push
mov
stos
je
push
dec
mov
pop
ficoml
pop
pop
xor
rclb
repz
xchg
sbb
imul
or
shlb
push
insb
dec
rolb
cld
iret
inc
test
mov
sub
mov
nop/reserved
mov
out
adc
jle
js
push
test
lods
mov
aam
in
hlt
or
ficoml
sbb
jne
push
je
test
and
jo
sub
or
loope
push
mov
in
test
test
mov
lahf
lods
cltd
imulb
insb
add
push
nop
mov
dec
scas
inc
sbb
test
popf
mov
or
ficoml
sub
mov
mov
xchg
mov
lods
sahf
dec
aad
int3
hlt
test
push
and
cltd
ret
aam
mov
adc
cmp
inc
test
addr16
sub
lahf
jl
rcrl
push
sub
push
xchg
push
cmp
call
add
jnp
mov
jne
jecxz
es
fbstp
xor
addr16
adc
dec
mov
std
fnstenv
adc
jbe
adc
mov
ss
xchg
int3
mov
jmp
sti
cld
ficomps
lock
fldenv
int
jg
adc
pop
pop
dec
movsb
movsl
imul
arpl
adc
mov
dec
xchg
lahf
xor
adc
stos
es
push
mov
jno
adc
add
pop
mov
call
popa
loope
jmp
inc
push
lea
and
test
rol
ret
inc
fs
outsb
mov
jge
rclb
pop
mov
rcr
je
ret
rclb
push
push
or
mov
insb
aaa
ret
push
mov
jecxz
ror
dec
fstpl
incb
sub
and
fidivrl
loope
xchg
mov
dec
lcall
jbe
aam
adcl
imul
divl
cltd
shrl
jbe
sbb
push
sub
adc
add
xlat
and
out
mov
lock
pop
into
andl
addr16
cs
ds
test
inc
dec
fwait
sahf
std
shlb
test
lds
push
and
test
xor
mov
cwtl
or
push
xchg
ret
pop
out
adc
loop
pop
out
rcll
dec
xchg
push
repz
cmpsb
cld
leave
dec
faddl
xchg
xchg
sahf
jecxz
ss
or
push
inc
insl
push
aas
outsb
sub
add
push
sti
int3
sbb
xor
les
mov
jp
jns
nop
and
jmp
outsb
ret
loope
dec
or
or
mov
xor
clc
mov
xchg
xchg
or
push
repnz
mov
jp
aaa
stc
push
sub
aam
jle
shlb
jb
sub
jb
out
add
loope
je
insb
push
insl
jnp
mov
mov
loopne
jmp
jle
cmc
int3
sbb
sahf
std
lods
pop
mov
cmpsb
push
dec
adc
push
mov
jl
lock
add
pop
divl
movsl
mov
mov
adc
pop
movsl
lahf
mov
in
inc
inc
inc
mov
out
shll
sub
pop
in
out
out
xor
xor
push
test
int3
lcall
or
mov
fcoms
mov
dec
stos
sub
mov
shrb
cmp
lahf
push
lods
xchg
xor
ljmp
stc
mov
mov
dec
push
pop
mov
clc
adc
add
test
leave
flds
xor
imul
leave
subl
push
and
rcll
popf
push
mov
in
in
lock
jle
adc
bound
cmp
adc
adc
bound
sbb
out
xchg
or
mov
dec
lods
insb
mov
push
push
decl
outsl
mov
jno
mov
push
xchg
mov
push
adc
push
xor
mov
push
clc
pop
iret
mov
into
mov
inc
mov
in
rorl
test
push
mov
loop
clc
dec
xor
mov
imul
mov
jle
push
xor
push
lods
jmp
xor
loope
lret
movsb
rorl
jp
dec
mov
jns
xor
ja,pt
addr16
push
in
js
inc
adc
aaa
daa
or
bound
rorl
mov
das
mov
jbe
hlt
je
pop
sub
sbb
adc
mov
outsl
addl
call
inc
push
dec
mov
sbb
icebp
mov
jb
insl
ret
dec
xchg
fwait
scas
sub
shrl
call
addr16
dec
pop
shll
mov
movsw
rclb
sub
clc
jle
cld
jne
sub
popa
mov
jno
scas
cmp
pop
pop
sbb
xchg
je
mov
xchg
js
push
jb
mov
mov
sub
cmp
icebp
inc
daa
or
xchg
jle
mov
cmc
shl
jo
jge
jp
sahf
faddp
das
jnp
das
mov
cmp
mov
loope
jp
mov
iret
pop
pop
cmp
xor
lds
imul
daa
je
add
and
push
js
addr16
cltd
cmpsl
inc
pusha
adc
mov
lret
sub
push
adc
mov
fidivrs
inc
in
incb
daa
or
lods
enter
in
fisttpl
jmp
xor
shr
lock
fildll
mov
insl
xchg
outsl
insb
pop
lock
out
and
test
aad
dec
jge
inc
mov
sub
jmp
mov
out
sub
sub
jbe
int3
lcall
push
les
sub
inc
sub
push
dec
push
xor
aam
jg
adc
leave
xor
lods
sbb
cmp
jae
rolb
imul
sub
mov
ret
jge
loop
dec
movsl
inc
push
imul
lds
add
fisttps
inc
ret
and
nop
inc
out
out
jns
sbb
lret
xorl
cmp
sbb
lds
sub
psubq
ret
out
icebp
imul
dec
daa
cs
pop
fisubrl
outsl
pop
push
enter
push
repz
pop
aad
push
add
push
movsl
aam
pushf
or
sti
inc
mov
adc
pand
jae
jge
xor
faddl
jle
jnp
cmc
sbb
mov
clc
stc
test
push
fwait
add
pop
xor
pop
rcr
into
decb
xor
mov
test
xchg
inc
or
out
mov
adc
insl
xchg
and
orl
sbb
mov
fistps
stc
insb
add
lcall
xor
loope
stc
xchg
push
les
pushl
test
cmp
ficoml
decb
adc
or
add
pop
js,pn
stc
mov
out
push
test
adc
loopne
pop
imul
inc
sub
sbbb
cmpsb
roll
lea
scas
ljmp
incb
cmp
jo
push
fcmovnb
mov
adc
inc
and
dec
sarl
imul
fstps
movsl
pop
cmp
in
fcoms
ds
xchg
jnp
mov
add
xchg
pop
sbb
imul
add
fdivl
add
pop
lahf
sahf
in
push
dec
cli
cld
jg
pop
in
dec
push
xchg
aad
insb
test
push
test
inc
aad
and
mov
outsl
les
out
or
nop
mov
std
push
outsl
dec
pop
jecxz
add
push
aad
lods
stc
sub
test
xor
jl
cltd
inc
xor
mov
mov
push
sub
cltd
pop
jl
cld
push
mov
jmp
sbb
rol
add
test
fsubr
xor
mov
pop
scas
jmp
xor
dec
or
mov
cmp
cltd
or
adc
icebp
adc
fcmovnu
leave
into
push
aas
pop
xchg
push
stos
cmp
fld
mov
cwtl
mov
imul
cmp
dec
push
dec
xchg
out
fstpl
fs
addb
xchg
pusha
stos
lock
mov
sbb
add
jae
addl
mov
mov
outsl
and
jl
je
les
xchg
push
lds
cmp
sbb
jp
call
sarl
inc
ja
testl
add
negl
xchg
fldl
popa
scas
pop
pop
and
in
dec
xor
fldt
xor
shr
sbb
mov
sub
nop
xlat
sbb
cld
out
fimull
jb
mov
jae
ret
jp
mov
std
mov
inc
in
sbb
sub
scas
popf
jo
sub
inc
mov
leave
mov
and
sbb
xor
movsl
or
js
orb
cmc
cmpsb
out
push
jbe
je
push
push
bound
xchg
imul
mov
cmp
mov
sbb
ret
sarl
mov
cmp
fxch
insb
or
xor
push
mov
pusha
in
rcr
inc
aaa
iret
les
sub
lds
jl
lret
sti
sar
or
fidivs
test
andb
pop
push
mov
aas
test
cwtl
jbe
test
cmp
orl
jae
pusha
pop
fldl
cmp
jmp
ss
jg
out
pusha
cmc
scas
mov
dec
pop
js
sub
pop
stc
imul
addr16
lahf
aam
add
ds
addb
mov
push
fsubl
jbe
icebp
int3
jne
xchg
sub
mov
hlt
or
sti
adc
inc
fnstcw
daa
aad
and
mov
push
mov
stos
sbb
aam
outsl
shll
xchg
outsl
clc
fwait
popf
pop
or
sbb
ja
out
clc
das
push
dec
sbb
roll
xlat
adc
push
sbb
incb
ds
daa
divb
subb
add
push
js
dec
dec
pop
sub
imul
jne
cmp
add
or
ficoms
xlat
insl
cmc
push
mov
pusha
xor
xlat
lods
inc
sub
cltd
dec
test
loope
and
xchg
push
test
adc
aas
mov
dec
mov
xchg
mov
roll
scas
and
fmul
les
inc
inc
cmpsb
mov
ret
sbb
lods
xchg
xchg
inc
jns
insb
xor
push
cwtl
call
cs
mov
std
lret
bound
jp
test
push
cmp
cmpsb
imul
rorb
repz
sbb
mov
lods
cmp
mov
loopne
mov
cmpsb
loope
imul
ret
inc
push
ret
incb
mov
iret
shl
pop
lock
in
addr16
lods
sub
or
lret
adc
pop
idivl
push
daa
add
pop
out
call
mov
adc
mov
push
notl
leave
out
push
popf
outsl
inc
xor
in
xchg
bound
adc
enter
push
sub
outsl
loopne
jmp
pop
lods
dec
in
and
dec
imull
lahf
push
adc
push
xor
cmp
push
mov
jl
sub
cmpsb
push
js
mov
enter
scas
pop
jmp
adc
jno
fmuls
xchg
jge
cs
das
dec
xchg
adc
cwtl
ret
push
hlt
das
dec
aad
fistpl
mov
int3
xlat
sbb
mov
sbb
ret
sub
xchg
jns
cli
cmpsl
push
stos
lahf
es
xchg
cli
xchg
sub
aam
add
pusha
mov
popa
dec
cmpsl
stos
mov
int3
shrb
jb
pop
fistpl
cmp
mov
or
testb
dec
and
stos
or
test
int
ja
xchg
add
mov
fcomps
andl
inc
fcomps
adc
paddusb
add
add
pushf
subb
xchg
jbe
scas
sbb
aad
xchg
into
int3
sbb
push
in
or
ss
mov
jo
xchg
mov
xor
cmp
mov
mov
sub
ds
pushf
sub
mov
loope
dec
adc
test
push
and
js
lea
mov
mov
loopne
xor
aaa
test
sbb
insl
ljmp
dec
push
cs
ror
icebp
sub
mov
movsl
dec
or
movsb
popf
sbb
jg
daa
pop
sarl
ja
xlat
cltd
fstps
mov
fistpl
dec
fucomip
mov
or
inc
int3
mov
add
cltd
jno
and
cltd
or
stos
and
les
inc
or
sub
or
mov
insl
push
push
sub
jmp
sarb
stc
sub
sahf
popa
pop
sbb
mov
repnz
pop
call
icebp
sub
xchg
aas
pop
mov
jmp
mov
jg
cli
popa
lds
cld
pop
lahf
or
imul
popf
movnti
rcll
cmpsb
or
pop
dec
outsl
push
scas
inc
push
outsl
or
popf
mov
cmp
shll
xor
in
test
mov
and
and
iret
pop
dec
xor
xchg
cwtl
mov
sub
pop
test
stos
int
ja
xchg
adc
inc
cli
xchg
jns
lds
jnp
cltd
cmp
fucom
fildll
test
in
aaa
pop
xchg
mov
addr16
filds
xchg
push
adc
lods
add
or
push
mov
out
dec
inc
cmp
mov
push
adc
lea
cmp
loop
leave
mov
out
push
pop
outsl
jecxz
pop
inc
mov
xor
dec
fyl2xp1
xor
inc
push
popa
repz
std
rclb
xor
and
out
ja
cmp
outsl
adc
cmp
dec
lret
imul
icebp
push
pop
call
cmp
mov
sub
ja
jl
push
mov
push
push
jg
pop
insl
dec
jg
mov
cmp
mov
sbb
add
jbe
aas
scas
lret
in
std
ja
std
inc
movsb
mov
int3
lods
int3
sub
jg
mov
mov
add
jge
out
mov
test
cs
cld
jo
inc
lea
mov
sub
or
aam
and
je
movsb
arpl
imul
adc
push
xor
dec
popa
daa
cmpsl
jae
pop
push
cld
pop
mov
dec
sub
sbb
sbb
imulb
xchg
sbb
idivb
jmp
popf
inc
mov
gs
adcb
mov
out
push
sbb
in
push
cmpsl
jne
sbb
mov
sub
pop
adc
test
xor
test
stos
xor
gs
dec
test
jne
mov
out
cmpsl
dec
push
xchg
in
pop
pop
and
or
shlb
jae
inc
lret
hlt
sbb
ret
add
loopne
jne
das
nop
or
sbb
push
std
sub
mov
out
popa
sti
cmpsl
js,pt
addr16
dec
xor
pop
sahf
add
std
xor
lea
sub
xchg
jge
insb
sbb
inc
lock
cmpsl
or
test
xchg
shl
pop
add
dec
clc
negb
mov
ds
std
xor
mov
sbb
aaa
stc
mov
cs
les
hlt
insb
insl
imul
mov
outsb
jg
in
fsts
mov
iret
fldcw
mov
hlt
insl
movsl
xchg
lret
scas
xlat
mov
xchg
aas
sub
sbb
fimull
in
int
subb
fldt
xchg
pop
out
popf
dec
sub
out
lret
and
jmp
mov
jo
cs
loope
scas
sub
add
cs
push
in
sbb
jmp
icebp
push
nop
push
js
and
sbb
dec
out
dec
jp
jo
subb
test
jle
arpl
mov
mov
mov
subps
ret
pop
pusha
in
je
push
sub
push
jns
or
shl
lahf
xchg
lahf
cwtl
int3
xchg
inc
int
aas
adc
in
mov
sbb
out
icebp
inc
insl
loopne
inc
mov
outsw
mov
in
push
movsb
icebp
jecxz
scas
fsubrl
int
jp
sbb
jae
inc
mov
rclb
setl
call
cmpl
cwtl
add
sarl
jge
fisttpll
leave
jns
pop
xchg
ret
mov
dec
and
push
sub
mov
xor
sub
and
lods
popa
sbb
aad
mov
pop
or
daa
hlt
data16
mov
insb
je
adc
jp
es
mov
mov
cwtl
mov
mov
push
idivb
mov
popa
lods
push
pop
icebp
sub
jo
insl
push
mov
daa
dec
mov
xchg
adc
push
xor
out
dec
push
cs
pop
cmp
cmp
mov
in
inc
test
out
or
mov
sub
push
cmp
pop
inc
cli
data16
inc
mov
ss
or
mov
sbb
sti
jns
push
add
aam
testl
sub
lods
and
loopew
and
call
xor
mov
sahf
sbb
sbb
inc
out
scas
mov
adc
pop
test
lds
or
push
xchg
xor
adc
mov
mov
jnp
and
rorb
mov
aam
loopne
ss
mov
mov
adc
js
sub
inc
int3
xchg
punpcklbw
icebp
out
mov
xchg
dec
jnp,pt
sbb
test
add
inc
push
or
jge
pop
mov
jmp
hlt
shrb
pop
dec
movsb
jp
into
call
push
add
mov
jb
and
fs
sub
cmp
sahf
js
dec
je
or
enter
adc
ljmp
sbb
das
in
insl
fs
std
push
popf
pusha
jmp
gs
xchg
orl
cmp
popf
int3
pop
loope
ret
movsl
adc
xor
jns
orb
mov
fistpll
std
ja
ja
mov
dec
loope
scas
cwtl
icebp
shr
mov
ljmp
or
dec
adc
cmp
ficoms
mov
pop
or
rcll
dec
mov
hlt
out
fnstsw
pop
fwait
mov
mov
orl
inc
test
test
out
sbb
mov
xor
lds
inc
mov
xor
test
pop
xor
inc
sub
fwait
daa
cmpsb
cmpsb
cmpb
adc
pop
aad
sbb
sbb
or
sbbb
shl
add
cmp
mov
pop
push
fnstcw
mov
pop
push
or
push
dec
ss
out
dec
or
fisubs
adc
mov
jne
dec
movsb
push
jae
js
call
loopne
lahf
lds
adc
test
inc
inc
mov
cmp
pop
cmovge
nop
dec
out
insl
fistpll
dec
mov
lea
je
repz
mov
test
int
add
stc
in
jg
or
icebp
lret
xchg
jns
fs
xchg
loope
xlat
jmp
test
push
or
push
inc
mov
pop
inc
je
pop
mov
jo
push
dec
dec
xchg
aas
movsl
push
jg
push
adc
adc
lods
inc
dec
cmp
test
jno
push
in
pop
sbb
push
cmpsl
std
inc
cmp
or
cld
mov
dec
sub
or
frstor
add
sahf
popa
jg
leave
fistpl
in
rorb
cwtl
dec
bound
data16
fistpll
insl
cli
les
add
mov
mov
outsb
ds
xchg
gs
pop
mov
loop
movsb
mov
or
inc
fs
loope
pop
mov
lods
lea
fnsave
inc
hlt
xor
add
sarl
cmp
daa
push
mov
inc
out
dec
cld
cmp
push
jbe
adc
push
xchg
sbb
inc
js
and
movsl
xor
addr16
xchg
and
mov
lahf
sbb
iret
js
jbe
cmpsl
pusha
mov
push
cmpsb
inc
fisttpll
sub
sbb
fimull
loopne
cmp
xchg
es
gs
sbb
lret
or
push
js
outsl
hlt
js
adc
cltd
xor
adc
cmp
pop
sub
mov
dec
jo
mov
lahf
inc
repz
and
cmp
mul
xchg
test
inc
sti
xchg
mov
adc
in
xchg
cwtl
sub
lret
dec
jp
pop
or
and
out
repz
cli
fucomp
stos
cmpsl
jl
push
cli
fisttps
gs
test
cwtl
inc
mov
mov
leave
mov
lods
xlat
dec
lods
cwtl
sahf
xchg
inc
push
xor
movlps
int
cmp
sbb
jae
adc
lods
icebp
repz
out
push
bound
fwait
ja
leave
clc
jns
bsr
out
stos
dec
mov
fidivrs
pop
dec
out
cmc
out
xor
rcll
mov
les
adc
das
outsl
xor
pop
mov
and
pop
jg
inc
nop
daa
mov
es
roll
and
stc
jne
jp
inc
mov
jg
lock
sbb
sbb
xor
dec
lea
out
mov
out
sahf
outsl
lcall
pop
xor
leave
cmpsl
fisubrl
sub
sub
loope
lods
xchg
cmp
adc
dec
sbb
push
mov
push
js
mov
xchg
pop
jecxz
mov
hlt
ja
pop
and
and
jno
subb
movsl
pop
jnp
addl
sbb
xchg
sbb
pop
add
xchg
das
daa
setg
sub
xlat
in
fstp
jge
inc
xorb
dec
or
in
fcmovnu
mov
int
cmp
cmpsl
ss
fildll
inc
in
cmp
add
mov
pop
jle
andl
bound
dec
inc
sbb
adc
mov
dec
clc
enter
sbb
mov
mov
jnp
and
in
push
mov
xor
call
xlat
mov
pusha
imul
inc
dec
jmp
pop
lods
xchg
push
jb
jns
fcmovnu
push
icebp
push
lds
mov
mov
inc
leave
jge
push
test
mov
rorb
addr16
int3
inc
jno
in
pop
add
sbb
xor
addr16
xchg
adc
push
xor
pop
cli
repnz
or
shr
lds
movsb
mov
mov
push
xor
rolb
stos
inc
push
inc
add
gs
nop
mov
push
mov
sbb
jp
lods
test
cmp
ds
mov
hlt
add
add
adc
push
mov
inc
stos
loop
pushf
and
fbstp
movsl
xchg
mov
daa
mov
xchg
clc
sarl
sub
testl
fstp
xchg
xchg
dec
jne
idivb
push
icebp
jns
sub
mov
aad
les
imul
stc
sbb
cmpb
icebp
xor
cli
std
aam
cmp
stc
fs
loopne
xchg
aam
cmp
test
adc
loop
adc
inc
ss
sarl
cmp
pop
xor
cmp
leave
int3
pop
sbb
repz
test
loopne
out
add
in
jnp
frstor
lcall
mov
inc
cvtps2pi
outsb
adc
mov
sub
loope
pop
sbb
sbb
faddl
test
cld
out
loope
ja
xor
dec
fs
mov
sub
dec
push
and
pop
push
jns
shl
jb
push
movsb
xchg
jo
je
push
fimull
popa
loope
fs
in
push
xor
xchg
int
packssdw
in
in
mov
or
or
out
frstor
pop
lods
dec
sbb
stos
ret
dec
in
add
inc
ficompl
and
or
lods
in
lock
rclb
dec
mov
push
push
dec
adc
xchg
pop
insb
daa
je
outsb
insb
or
push
xchg
sbb
xchg
inc
dec
pop
pop
cld
ret
imul
in
std
int
dec
imul
cmc
popf
dec
add
mov
xchg
mov
mov
inc
sub
mov
out
fstpt
mov
icebp
icebp
test
or
lcall
imul
repnz
xchg
jo
add
decl
loope
mov
fs
add
sbb
into
movsl
or
inc
dec
jbe
add
scas
cmpsl
mov
xchg
mov
ds
push
lods
loopne
jno
xor
xchg
xor
les
pushf
je
and
aam
jl
lret
pop
idiv
int3
jle
stc
gs
jecxz
in
in
adc
test
fwait
mov
dec
fiadds
lea
dec
sbb
mov
mov
cmp
pop
dec
xchg
aas
jl
sbb
or
outsl
jbe
js
insb
mov
lret
and
adc
pop
jmp
arpl
in
mov
movsb
dec
pusha
lods
es
mov
inc
sub
sahf
jns
rclb
sahf
cmp
iret
xchg
out
orl
pcmpgtd
mov
lret
rorl
lcall
and
test
pop
mov
stos
bound
ss
nop
out
and
shrl
sahf
lock
aaa
adc
out
imul
inc
std
sbb
adc
add
cmpsb
scas
sbb
fs
lret
ret
das
in
pop
push
cmp
jge
fimuls
insb
sub
in
cld
call
popf
push
cmp
ja
scas
out
stos
iret
mov
adc
arpl
jp
cs
outsl
jno
mov
fcoml
addr16
cmp
mov
adc
cmp
inc
add
out
adc
mov
mov
mov
jge
xchg
mov
bsr
fwait
dec
mov
imul
jne
popf
test
mov
ja
xchg
and
movsl
in
sub
int
jb
mov
popa
ficomps
mov
subl
int
mov
loope
int3
icebp
dec
lahf
pop
push
or
into
and
cs
adc
enter
and
mov
insl
jge
lahf
test
movl
push
test
or
in
push
push
popf
inc
cmpl
es
popa
mov
stc
xor
icebp
cli
dec
clc
fcmovb
int3
lea
fwait
and
adc
inc
xchg
inc
push
fdivrs
lea
and
pushf
pop
pop
rcrb
cmp
adc
inc
mov
cmp
cld
data16
inc
fs
cli
mov
test
and
rcl
and
cmp
push
aas
xchg
jns
loope
mov
mov
pop
adc
mov
std
fnstsw
loop
pop
add
jns
data16
out
push
mov
cwtl
push
in
imul
and
dec
jecxz
adc
xor
rorl
or
addr16
jle
bound
cs
inc
repnz
stc
lock
test
add
fcomps
or
mov
ret
adc
sbb
mov
or
scas
xlat
out
and
cmp
pop
pop
lcall
jnp
mov
fstl
dec
popf
fwait
aas
cmp
push
imul
fldenv
inc
jge
repz
lahf
or
jbe
xor
xchg
mov
adc
rcrl
and
mov
jns
sar
ljmp
pushf
insb
ss
scas
ljmp
in
std
movsb
rolb
into
lea
negb
and
inc
dec
fidivs
or
push
push
push
add
pop
pop
sub
or
movsb
ja
inc
in
stos
mov
mov
add
into
mov
pop
cmp
mov
cmp
cli
dec
fwait
mov
xor
sbb
clc
dec
cs
mov
int3
adc
push
lock
bound
sbb
mov
sbb
add
fsubrs
add
sbb
aad
inc
repz
insl
xchg
and
sub
cwtl
mov
je
pop
stc
add
cld
ss
enter
jg
daa
test
pop
xchg
inc
out
std
movsl
fildll
int
and
xchg
fwait
dec
inc
mov
jle
faddl
mov
pop
inc
adc
push
cmp
adc
dec
pusha
or
js
xchg
cmpsl
add
mov
mov
push
hlt
jge
out
jp
enter
outsb
inc
fwait
movsl
mov
loopne
jle
push
mov
cld
and
dec
xor
sub
inc
mov
sbb
jae
mov
cmovg
clc
loopne
push
nop
mov
daa
int3
mulb
aas
mov
sbb
mov
fsubrp
cmp
in
clc
adc
bound
xchg
imul
out
and
in
lcall
icebp
cmpsl
cmp
out
and
fmull
sub
test
nop
sub
cmpsl
cmp
jecxz
fsubs
push
push
push
sbbl
push
ret
jp
adc
add
vmulsd
dec
cmp
mov
xor
sbb
and
idivb
aam
inc
push
xchg
ds
sub
or
nop
imul
adc
imul
fwait
dec
dec
adc
inc
xchg
pop
and
pop
xor
je
cwtl
cmc
je
lea
test
ja
pop
cmp
pusha
in
es
ret
aad
xchg
adc
es
or
mov
mov
push
push
dec
jg
push
pop
addr16
cli
sbb
lcall
cmp
sbb
mov
ret
add
jbe
ror
test
stos
push
scas
or
pop
loopnew
jmp
stos
movsb
andl
adc
and
scas
mov
mov
movsl
adc
stos
mov
roll
cmp
aas
cmp
sbb
cmp
fmuls
pop
mov
add
jp
cwtl
mov
in
mov
inc
pop
mov
gs
push
or
sbb
out
inc
dec
loopne
inc
cld
inc
push
nop
je,pt
or
pop
add
inc
fsts
sbb
and
sub
jne
and
adc
stc
mov
mov
ja
push
leave
adc
lret
pop
das
enter
dec
jmp
jns
sbb
mov
push
or
shrb
insb
mov
nop
mov
andl
dec
push
negl
dec
sbb
add
out
push
inc
xor
jmp
cmp
pop
mov
pop
faddp
cmp
mov
sti
aam
mov
dec
loop
enter
push
or
fnsetpm(287
pop
xchg
cmp
mov
lea
xorb
adc
jmp
stc
mov
mov
push
clc
das
vmovmskps
fnsave
mov
idiv
add
call
inc
insb
inc
jg
sub
clc
xchg
mov
insb
pop
sbb
mov
pushf
add
xchg
xor
cmp
fwait
xlat
pop
xorps
add
jg
cmpsl
sarb
jns
xchg
pop
mov
sub
push
xor
dec
mov
in
sti
sbb
ret
aaa
cmp
in
cmpsb
je
cmp
push
movsb
lcall
mov
inc
and
loop
cmc
loopne
test
add
loopne
adc
jne
fmuls
cmpsl
cmp
sbb
mov
mov
addl
pop
out
and
stc
out
jbe
lods
or
int
pop
xchg
dec
mov
lea
cwtl
and
das
mov
adc
inc
jl
pop
cmp
cs
stos
pop
adc
and
test
ret
imul
arpl
es
push
and
dec
clc
ljmp
pop
push
mov
incb
push
jmp
roll
movsb
loopne
jae
scas
ret
cmp
jnp
imul
push
ficomps
pop
pop
jb
and
insb
lock
jnp
fs
stc
outsl
loop
dec
int3
mov
js
sbb
mull
es
inc
repz
aas
pusha
dec
adc
pusha
call
pop
iret
lods
cli
enter
iret
mov
sahf
aam
xor
fnclex
xchg
pop
bnd
mov
jne
xor
lcall
imul
inc
xor
or
cs
pop
popf
call
pop
mov
sbb
lcall
lds
inc
sahf
mov
pop
popf
xor
xchg
inc
lret
popa
jno
cs
out
and
adc
cmpsl
pop
add
leave
push
cmp
xor
push
inc
inc
push
pop
xlat
mov
xchg
xchg
adc
push
pushf
push
push
enter
inc
hlt
mov
or
sub
cli
gs
mov
fcmove
lcall
loope
addr16
dec
cmc
xor
popf
pop
cmp
ret
xchg
sub
xchg
out
gs
dec
inc
or
ret
mov
arpl
dec
pop
mov
jg
pop
repnz
je
aaa
mov
idivl
or
test
pop
jbe
pop
sti
fistl
xchg
xor
pop
xlat
popa
mov
loopne
ja
sub
mov
push
dec
std
fildll
sub
je
dec
mov
punpckhwd
sub
sbb
sub
insl
movsl
lretw
xchg
inc
push
in
loop
cmp
pop
sbb
iret
pop
int
mov
push
sti
push
aad
insb
and
jl
jne
mov
mov
pop
cmp
jge
movsb
mov
rolb
fidivl
add
and
nop
je
mov
and
mov
and
mov
getsec
push
fisubrl
insl
or
lock
scas
cmp
je
out
testb
movsb
in
test
cmp
xor
or
and
xor
sub
xor
push
xor
daa
test
aad
clc
adc
mov
add
add
pop
inc
pop
lcall
pop
loop
and
push
xor
mov
mov
push
clc
pop
or
jl
scas
fdivrp
mov
scas
out
xchg
das
cli
push
fs
pusha
ret
ds
sub
fsubrs
jle
fbld
sub
xchg
imul
aaa
push
out
push
mov
sub
jecxz
leave
mov
sti
incb
adc
outsl
mov
rep
jne
xor
test
or
data16
fwait
clc
push
adc
pop
es
test
sahf
push
cmpsl
sbb
repz
loope
push
sub
clc
mov
arpl
cmp
inc
sahf
clc
loope
out
dec
push
jns
sbb
lods
push
adc
icebp
sar
and
adc
mov
loope
cwtl
inc
inc
adc
idivl
sahf
cs
add
push
insb
mov
pop
repnz
out
imul
jbe
repnz
push
lods
push
sbb
and
daa
jns
mov
sub
dec
and
mov
mov
scas
add
cmpsl
movsb
cli
stc
adc
mov
adc
mov
pop
jbe
popa
lret
mov
adc
iret
sbb
bound
sahf
xchg
mov
das
sahf
mov
sub
push
pop
enter
or
scas
popf
inc
inc
fbstp
xor
xor
daa
mov
imul
mov
push
xor
jbe
sub
or
out
push
lret
loope
jmp
xor
out
inc
push
push
inc
jbe
movsl
xor
mov
dec
out
dec
dec
lcall
std
test
rclb
imul
dec
xchg
fcmovnbe
inc
lods
ljmp
mov
sbb
sub
btsl
nop
xchg
sub
sub
pop
and
and
daa
lds
test
mov
and
lret
xorl
jb
push
xchg
sbb
pushf
popf
jge
or
je
adcl
jne,pt
jbe
popf
push
mov
push
repnz
fldenv
repnz
xor
push
scas
ljmp
jl
push
pop
cmp
or
ljmp
adc
enterw
mov
lds
mov
cs
mov
mov
test
fidivs
ret
ret
enter
cmpb
shrb
jnp
jo
jg
mov
add
sub
mov
cli
mov
lea
int3
in
shrb
in
pop
subb
inc
or
hlt
pop
adc
loopne
lods
fdivs
sarl
out
sub
lcall
fiaddl
in
mov
jne
dec
dec
push
xchg
int3
leave
fsubrp
mov
cmpsb
jg
cmp
lret
sub
test
pop
mov
fisubrl
mov
aaa
pushl
pop
pop
fmull
iret
inc
aaa
aam
xor
ficoms
push
addr16
test
jmp
pop
push
insb
push
outsb
mov
ja
or
inc
jge
or
movsb
orl
outsb
cmpsl
sub
insb
pop
shrb
and
lret
xchg
ficoms
loopne
and
enter
popf
ljmp
hlt
pop
sub
xchg
insb
jecxz
lods
jb
clc
mov
dec
lret
pop
insl
cmc
pop
add
mov
test
jg
mov
stos
nop
cmpb
pop
pop
xor
sub
jecxz
fcoml
sub
mov
sub
xchg
push
and
arpl
push
lods
sbb
stos
cli
repnz
inc
ret
je
cmp
mov
jl
rol
mov
subb
sub
cmp
ja
lods
mov
lods
pop
xor
fs
push
and
push
popf
inc
into
das
sbbl
jo
add
xchg
pop
mov
push
cmpl
pop
int
jnp
push
cli
inc
lcall
sbb
or
xor
ret
xor
mov
sar
stos
cmpsl
aas
push
xor
mov
dec
xor
decb
lret
jae
or
cwtl
lahf
push
sahf
mov
mov
test
jl
js
sub
mov
in
pushl
push
mov
dec
adc
test
adc
shr
jno
jl
das
outsl
mov
jo
and
inc
dec
fisubrl
push
outsb
and
or
jnp
sbb
leave
jnp
jno
xor
popa
jecxz
pushf
les
mov
mov
dec
or
nop
jp
dec
dec
clc
aaa
lock
jnp
add
cs
fiaddl
out
add
bt
cli
cwtl
mov
popf
imul
mov
xchg
mov
call
daa
xchg
stos
sbb
gs
lret
fimull
add
lea
imul
scas
idivb
and
mov
pusha
pushf
xchg
xor
mov
out
push
lret
or
jp
mov
dec
repnz
adc
sbbb
shll
lds
in
fwait
sbb
xchg
lcall
sbb
mov
sub
bnd
inc
mov
push
push
add
xor
test
jecxz
xor
cli
mov
lock
jmp
repnz
vandps
fstpt
jno
test
repz
cmp
mov
cwtl
jb
add
xchg
push
cmpsb
negl
and
add
inc
xchg
sbb
out
ja
outsb
not
cld
xchg
add
adc
roll
outsb
xchg
out
sbb
lcall
push
test
mov
or
daa
cmc
push
scas
and
dec
std
or
jae
mov
and
mov
into
xchg
mov
das
sbb
cs
jae
int3
xchg
xchg
popa
ja
call
ds
iret
push
pop
idivl
dec
ja
inc
push
stos
dec
out
mov
pop
pop
cmp
je
insl
cld
mov
popa
movsb
mov
nop
xor
adc
sbb
jno
test
mov
outsb
popf
not
sub
xchg
mov
cmp
aas
inc
cld
pusha
sbb
or
push
repz
or
sbb
and
addr16
xchg
call
and
fwait
mov
mov
inc
test
add
clc
pop
test
dec
dec
jmp
sub
popf
les
int3
cs
in
sti
aam
nop
cmp
std
xor
mov
aad
loopne
sub
and
sub
lret
push
pop
cli
movsl
ss
push
cld
xlat
pop
neg
lock
pop
adc
jp
or
dec
fstpl
jl
mov
pushf
push
cwtl
sti
mov
stc
shlb
fmull
push
jns
mov
mov
pop
jne
sub
inc
mov
test
pop
bound
arpl
aas
pushl
movsl
mov
mov
cmp
inc
jno
sub
push
mov
ljmp
cmpsl
xchg
cmp
fisubrl
rolb
std
pop
dec
jo
scas
popa
fcompl
dec
push
iret
into
pop
adc
push
adc
jns
or
lea
addr16
mov
hlt
mov
add
add
setns
mov
dec
and
adc
adc
dec
jns
xchg
jne
pushl
addr16
aad
gs
pop
pusha
jge
xor
xchg
insb
or
fisttpll
mov
pop
pop
es
in
jecxz
jge
pop
loopne
scas
shrb
hlt
repz
pop
add
stos
fs
adc
adc
fdivrp
test
fsubr
movsb
les
xchg
and
jns
push
adc
fwait
outsl
jo
cmp
xor
pop
pop
cmp
adc
movsl
adc
and
jge
push
jbe
leave
mov
add
out
sub
cmc
sysenter
xor
mov
aaa
push
mov
xor
outsb
stos
test
mov
cmp
inc
popf
out
out
enter
mov
in
and
adc
cmc
add
xorb
clc
mov
add
jle
daa
clc
adc
xor
pop
adc
mov
pop
test
call
dec
in
cmc
inc
push
xchg
xor
cld
mov
or
push
jns
sub
or
push
pop
push
or
mov
pop
hlt
cmp
mov
cwtl
ja
xchg
mov
push
les
orb
mov
cmp
jp
out
imul
out
pop
imul
das
sub
jae
pop
in
lods
add
into
fwait
lret
mov
jl
jb
and
jle
cltd
movsl
movsb
roll
jl
stos
push
push
or
xchg
aas
xchg
jl
sbb
jl
stos
das
and
dec
mov
test
out
mov
pop
hlt
dec
pop
mov
ffreep
rolb
shr
add
sub
cmpsl
scas
pop
aad
test
xor
divb
xor
xor
repz
in
push
mov
pop
lds
jns
scas
cmp
testb
mov
jns
and
sar
lds
out
sbb
mov
fisubrl
xchg
hlt
add
xchg
jno
iret
dec
imul
inc
cltd
mov
lahf
or
mov
jmp
jp
bound
insb
data16
cmpsl
cmp
jo
pop
or
pop
jge
sbb
dec
jecxz
inc
push
mov
or
enter
enter
leave
push
jne
imul
test
push
inc
sub
jp
nop
xchg
jb
xor
mov
ds
jmp
leave
sarl
mov
test
xor
pop
or
adc
lcall
addr16
fisubs
outsl
push
sbb
jae
sbb
inc
aad
movsb
sahf
mov
mov
idiv
push
jecxz
xchg
inc
iret
std
dec
shll
inc
cwtl
pushl
and
shlb
ljmp
sbb
mov
inc
ret
ja
das
stos
cmpsb
adc
aaa
das
mov
mov
push
ss
jns
sbb
lock
bound
repnz
nop
sub
cmc
ds
out
scas
pop
pop
int
repnz
pop
ret
xor
loopne
scas
jecxz
and
popf
rcrl
add
pop
out
sti
insb
cltd
loop
mov
xlat
icebp
pushf
int
push
and
xchg
xlat
movsb
sbbl
adc
mov
loop
imul
aam
mov
mov
ja
xlat
push
cmpsl
in
push
mov
push
push
test
cmpsl
mov
push
mov
rcrl
cmp
cld
add
jp
adc
xchg
lret
ja
cmc
jmp
mov
incb
lahf
pop
pop
scas
call
cmpl
lods
fcom
dec
pop
outsb
daa
dec
pop
bound
fistl
lea
or
imul
lods
mov
scas
sbb
xchg
xchg
xchg
pop
mov
pop
enter
shl
jge
nop
or
xchg
dec
movsl
mov
or
jl
dec
pop
gs
stc
sarb
pop
in
in
xor
cwtl
or
scas
sbb
dec
adc
and
into
pop
xlat
mov
and
repz
sub
cli
mov
cmp
ds
mov
cltd
pop
inc
insb
lods
nop
push
mov
movsb
sbb
cld
fwait
iret
mov
inc
mov
aad
ficoml
arpl
xor
pop
dec
pop
cmp
insb
sti
popf
addr16
rorb
bound
test
mov
sub
dec
dec
xor
gs
xor
iret
in
or
lret
sbb
xor
jle
dec
pop
int
aas
jo
repnz
lcall
xor
scas
xor
or
icebp
jmp
or
pop
bound
filds
xchg
lea
and
mov
in
test
mov
hlt
int3
aaa
or
or
jp
xchg
adc
sbb
xor
sub
xor
jo
mov
mov
pop
lock
ja
test
outsb
aam
mov
lret
push
or
aas
jbe
push
cwtl
xor
mov
stos
in
mov
sbb
loope
pop
aam
jne
push
or
mov
es
imul
mov
cmpl
clc
fwait
push
cwtl
sbb
popa
movsl
sbb
lret
cmpsl
insb
and
dec
les
test
cmpsl
loop
xchg
mov
cwtl
sti
pop
stos
xor
push
aad
mov
or
and
push
lds
lock
stc
daa
dec
cmp
mov
and
add
imul
outsl
fists
into
fsubl
fsubrl
cmp
loope
xlat
mov
ret
jmp
push
or
mov
mov
mov
movsb
xchg
push
xchg
hlt
mov
daa
add
dec
inc
std
aas
inc
iret
rcr
sbb
adc
aad
add
stos
stos
or
mov
jge
and
sbb
sahf
mov
mov
xchg
mov
mov
inc
insb
adc
mov
xchg
xor
cmpsb
push
stos
jle
stos
cmpsl
pop
outsl
cmp
xor
stos
test
pop
jo
in
xchg
stos
xor
adc
cmpsl
hlt
lods
jmp
bound
add
outsb
dec
mov
sub
cmc
mov
adc
rorb
inc
rclb
scas
sahf
and
cmp
popa
xchg
sub
sbb
cmpsl
test
sbb
fs
nop
fdivs
loop
or
lahf
out
aas
cwtl
fsubrs
and
push
pop
inc
mov
ret
mov
mov
sahf
das
and
pushf
out
cmp
imul
idivl
aaa
shrl
popf
cmp
cmp
fsqrt
add
shrb
movsl
push
xor
sub
mov
pop
adc
cmp
inc
dec
push
jne
int
cld
inc
xchg
pop
sbb
jp
aaa
jge
imul
mov
and
inc
or
mov
dec
imul
xor
mov
mov
jge
out
addr16
sahf
push
jg
loop
jbe
adc
sub
cmp
sbb
pop
bound
add
and
jo
mov
aas
xor
ss
mul
aam
and
lods
jne
xor
xchg
pop
cltd
mov
jnp
inc
addr16
adc
loop
jae
dec
cli
cmp
cmp
fimull
sbb
sbb
xchg
add
imul
test
inc
inc
lret
nop
or
jg
mov
outsl
rorb
jns
movl
roll
adc
cs
divl
dec
push
xor
pushl
inc
cmpsb
loop
clc
sub
add
mov
lock
das
pop
push
xchg
test
sub
xchg
jnp
in
mov
xor
add
mov
pop
shlb
dec
movsl
outsb
dec
jne
mov
and
and
jae
std
fildl
arpl
popa
lcall
push
movsb
xor
mov
ret
aam
out
mov
mov
ja
out
xchg
repnz
cltd
nop
jo
cmp
outsl
fcmovnbe
mov
mov
inc
fwait
test
or
fwait
sub
add
mov
pop
out
lea
push
pushf
ret
xchg
pop
ljmp
flds
sbb
adc
sub
sub
lods
sub
dec
mov
sub
andl
mov
pop
lret
nop
adc
cmc
mov
jb
xchg
mov
cmovs
jne
testl
jbe
lret
mov
mov
call
insl
mov
xchg
pop
hlt
xor
jae
jl
and
leave
push
outsl
rcr
jne
bound
mov
inc
cmp
andl
insl
add
inc
pushl
imul
outsl
fcompl
ljmp
cmpsl
je
mov
leave
ljmp
aas
xor
xlat
ret
xchg
mov
fsubrl
add
rcrl
pop
repz
pushf
lea
orl
or
jl
cmpsb
out
pop
push
xor
nop
cld
imul
or
push
jnp
dec
add
dec
sbb
push
mov
faddp
xchg
mov
inc
js
push
or
mov
push
insb
ss
sub
push
or
or
push
or
insl
jns
pop
in
sbb
dec
in
rcrl
ret
xor
test
pop
dec
hlt
je
shrb
or
jb
add
shrb
mov
shrl
aaa
lahf
inc
dec
jae
cmp
std
cmpsb
pop
dec
cmp
stos
jmp
adc
mov
dec
aam
ret
push
test
sti
leave
mov
shlb
xchg
test
mov
jle
ljmp
sbb
or
into
inc
ret
sbb
jl
cltd
add
xchg
dec
flds
fcmovnb
das
add
mov
mov
mov
iret
insl
orl
xor
cltd
cmp
js
loop
sub
mov
inc
cmp
mov
or
mov
cmp
fcoml
cwtl
cmp
inc
inc
test
ret
pushf
rolb
js
add
mov
jbe
iret
shll
mov
xlat
lcall
pop
cmpsb
pop
out
ret
leave
inc
mov
xor
push
xchg
or
sub
je
sbb
nop
ja
imul
jmp
ja
sub
gs
inc
fistpll
adc
mov
shr
mov
int3
dec
insb
xchg
add
and
mov
fcompl
pop
mov
stos
fstl
idivl
pop
mov
fldl
inc
in
jmp
xor
je
ss
hlt
push
pop
int
sarl
lret
psubsw
sbb
and
outsb
mov
stc
and
dec
or
mov
cmp
inc
jecxz
sbb
roll
adc
xor
movsb
adc
mov
lods
lahf
rclb
mov
push
insl
push
xchg
test
lea
rorl
mov
es
xchg
push
gs
sbb
out
pop
insb
mov
mov
jns
xlat
lock
out
pop
xor
or
xchg
mov
popa
jl
das
sbb
sub
fidivs
rclb
mov
enter
cmp
pop
push
mov
sahf
xlat
dec
add
xchg
mov
and
xlat
mov
ss
outsb
adc
jb
add
nop
leave
adcl
mov
shl
xor
adc
aaa
icebp
fldt
aam
out
mov
mov
js
sub
pop
pop
push
lret
sahf
shll
lahf
hlt
aaa
mov
pop
sbbl
shll
sub
or
push
adc
mov
ljmp
fisttpl
fimuls
into
imul
out
pop
test
out
call
mov
or
hlt
jno
mov
and
pop
test
out
sub
push
xlat
mov
add
mov
std
mov
pop
push
push
add
int
sbb
mov
mov
add
imul
cmpsb
loop
lods
mov
push
inc
add
ljmp
push
loopne
sub
inc
adc
bound
or
jl
in
repnz
add
jmp
xchg
pusha
adc
add
mov
xchg
jb
mov
mov
jno
sub
lock
sahf
push
push
and
pop
sbb
lret
cs
pop
push
and
adc
mov
jp
jo
stc
fcmovb
push
lcall
push
popa
mov
rolb
inc
faddl
sarb
mov
inc
int
push
scas
popf
push
imul
ljmp
dec
sub
pushf
push
jo
and
mov
sbb
dec
xchg
lret
cmpsb
shrb
pusha
mov
fmull
in
dec
lods
jge
mov
jge
jno,pt
pop
sub
xor
dec
fnstsw
dec
pop
fimuls
push
int
aam
js
cwtl
leave
sub
ds
shrl
jnp
push
and
push
xchg
sub
jns
xlat
imul
pop
stos
ljmp
xlat
push
in
leave
add
lock
and
jne
add
xchg
out
je
lret
dec
lcall
lods
popa
data16
shl
and
xor
mov
adc
cmc
ss
rolb
inc
cmpsb
dec
stos
pop
push
mov
fs
bswap
and
sbb
sub
or
mov
mov
cs
in
jae
scas
mov
lock
lods
sub
mov
xor
pop
mov
cwtl
pop
push
ret
xchg
stos
cmp
and
in
dec
and
mov
cmp
jmp
push
aad
cmpsl
sti
inc
mov
mov
mov
inc
jbe
sbb
test
cmp
sahf
mov
loopne
outsl
and
andb
stos
xchg
jae
lods
test
fildll
pop
and
sbb
adc
lahf
mov
add
cs
out
shlb
cmp
sbb
test
sub
insb
mov
mov
cwtl
inc
fbstp
setle
mov
cmp
cli
pop
push
adc
mov
rorb
test
sti
test
sub
jge
inc
mov
adc
mov
mov
inc
sbb
jecxz
sub
popf
fstpl
and
dec
jns
dec
sti
sub
add
outsl
repnz
scas
mov
and
dec
dec
popf
clc
sbb
mov
lock
pop
add
mov
mov
test
nop
orl
test
or
or
mov
jecxz
jae
subb
out
jg
cmpsb
xchg
stc
lret
add
push
and
cwtl
les
bound
data16
popa
mov
leave
xchg
jmp
xor
mov
cwtl
mov
cmp
dec
pop
xor
dec
mov
pop
adc
inc
lock
xchg
push
mov
popf
lret
adc
dec
cld
dec
jbe
ds
jecxz
or
jb
lds
aaa
popa
aas
xchg
dec
sbb
and
clc
mov
sub
inc
add
dec
inc
insb
movsl
lods
outsl
add
cs
xor
and
cmpsl
cmpsl
pop
nop
dec
mov
fbld
mov
push
mov
jnp
out
movsl
repz
ds
adc
fsts
dec
inc
out
aam
xor
cld
ret
push
loopne
inc
into
in
inc
mov
xlat
fs
ret
out
lea
pusha
mov
xchg
sub
jl
shr
call
jbe
mov
hlt
sub
sahf
xchg
cmp
in
add
jb
ret
sti
mov
push
test
sbb
sub
ss
sub
faddl
or
std
cli
pop
dec
mov
cs
pop
or
pop
adc
mov
jmp
sti
inc
fisttpl
aas
jp
scas
cwtl
lea
inc
inc
xlat
out
mov
mov
ljmp
cmpsl
pushf
enter
dec
push
lcall
jne
push
outsl
jns
or
mov
mov
imul
daa
xor
mov
sub
sahf
sarl
mov
mov
mov
mov
pop
aas
add
loopne
mov
xchg
add
nop
pop
out
dec
push
xchg
clc
cmovnp
jb
lods
pop
and
xor
ljmp
sub
sub
mov
mov
in
cli
das
push
dec
inc
scas
into
sub
mov
push
mov
add
call
push
shrl
inc
mov
push
insb
loope
call
cmp
popa
jge
sub
pop
mov
cmp
sbb
shrl
divb
aad
decl
adc
inc
push
ret
inc
in
lea
sbb
shrb
pop
scas
shrb
mov
inc
mov
fnstcw
xchg
push
pop
sub
pop
aas
ljmp
xlat
gs
int
add
pop
cmp
decb
xorb
gs
xor
and
out
mov
xchg
push
fidivs
idivb
add
arpl
loopne
aad
add
stos
xchg
js
mov
popf
xchg
mov
aam
mov
fsubs
test
push
jns
push
gs
pusha
jnp
lret
dec
fucomip
or
adc
and
js
jne
shlb
mov
push
loop
and
pop
mov
jmp
adc
imul
imul
xor
lret
int3
mov
dec
nop
jg
pushf
or
mov
aam
pop
cmpsl
dec
or
pop
xor
js
and
les
into
rcrb
std
mov
inc
cld
test
mov
in
scas
leave
mov
adc
xor
call
test
xchg
jnp
mov
setns
mov
cs
xchg
ljmp
push
xchg
push
pop
mov
cli
jle
dec
xor
pop
jb
outsw
sbb
push
in
add
sti
faddl
pop
inc
mov
mull
sbb
mov
icebp
insb
stos
andl
jno
hlt
int
sbb
inc
xchg
pop
jbe
lods
shr
jle
into
or
jne
xor
pushf
lds
shrb
cli
xchg
and
cmp
inc
sbb
sahf
in
pusha
sbb
push
imull
out
fnstcw
into
jb
jge
jnp
or
addl
int3
popf
mov
enter
pop
add
into
mov
inc
mov
xchg
inc
imul
les
pop
rclb
in
out
insl
mov
ss
jmp
or
xor
mov
das
aam
inc
jb
jl
add
mov
aaa
insl
mov
mov
push
loop
lahf
in
sub
cmp
push
mov
sbb
scas
jns
cmpsl
fsubrl
xchg
test
fsubrs
mov
mov
call
leave
lret
jo
stos
lods
jbe
sarb
mov
xor
push
mov
data16
sbb
xor
xchg
je
inc
pop
ds
sub
cmpsl
shlb
movsb
shrl
arpl
sbb
sub
pop
es
sbb
adc
dec
call
fldl
mov
popf
inc
mov
test
jmp
imul
pop
mov
mov
adc
or
adc
ror
dec
sub
movsl
dec
jmp
scas
inc
orl
mov
cmp
popa
dec
or
add
leave
stos
xchg
gs
cmpsb
stos
inc
inc
dec
hlt
cli
mov
inc
shr
push
or
repnz
ljmp
xchg
inc
push
inc
pop
addr16
cld
dec
ja
sub
pop
push
cs
jmp
aas
add
pop
and
stos
shrd
inc
pop
xor
lret
inc
incl
add
sbb
sbb
sub
gs
jae
int3
inc
cmp
dec
mov
cmc
add
stos
iret
fisubs
mov
clc
cs
push
pop
out
call
cmp
imul
aad
dec
add
inc
mov
dec
sub
call
pop
leave
dec
mov
mov
andl
daa
xor
addr16
jo
pop
loope
sub
sbb
adc
loop
fildll
adc
inc
mov
jae
jg
sahf
push
lret
add
jae
jne
pop
dec
andl
daa
jae
xchg
push
mov
test
cltd
stc
into
push
xchg
in
push
pushf
pop
lods
fs
dec
pop
stos
push
jne
mov
in
and
sti
sub
push
loope
aas
cs
jb
es
or
push
jno
icebp
into
pusha
js
lret
stc
dec
sub
lods
cmp
stc
mov
mov
inc
mov
mov
scas
mov
lock
or
jb
sbb
and
lahf
lret
decl
int
pop
jle
aam
enter
jae
je
ficomps
jno
mov
in
aaa
mov
scas
movsl
mov
icebp
jns
cwtl
popf
cmc
sbb
add
nop
in
cmc
lock
xlat
xchg
inc
mov
fildll
pop
imul
in
pop
lret
js
push
add
stos
pop
dec
mov
rorl
ret
cmpb
bound
mov
aas
xchg
not
jns
ljmp
addr16
pusha
jmp
imul
bound
in
int3
adc
inc
data16
pop
push
adc
or
sbb
roll
mov
pop
loopne
xor
jns
lea
cli
inc
outsl
jb
in
call
loop
shr
mov
repz
and
and
inc
test
adc
insl
test
test
cltd
es
dec
sub
mov
test
call
cmc
mov
push
mov
jmp
sbbb
out
stos
inc
add
mov
jae
aad
stos
mov
sub
sub
pop
stc
xor
in
mov
cld
mov
and
adcl
shlb
sbb
and
push
pop
inc
hlt
jbe
push
mov
xorl
fsubs
nop
pop
loop
jl
das
add
int3
sub
pop
xchg
pop
mov
flds
rcrb
mov
pushf
mov
pop
fdivl
out
jbe
insl
or
test
icebp
pusha
mov
xchg
inc
js
dec
fstpt
dec
enter
inc
jl
aam
leave
outsl
jnp
cmc
dec
push
lods
int3
mov
fwait
jle
mov
rclb
pop
mov
es
scas
and
repz
insb
in
lret
daa
add
int
inc
mov
leave
xchg
sarb
adc
pop
call
shl
dec
jnp
popf
xor
iret
imul
cmp
mov
leave
pop
sub
xchg
cmpsl
and
int
popf
push
fs
adc
xchg
call
add
xchg
cmpsb
ret
xor
jo
icebp
sub
sbb
xchg
call
xchg
cwtl
inc
incb
mov
xchg
inc
cltd
sbb
stc
pop
sub
inc
sbb
push
scas
cld
aam
sub
mov
lret
mov
add
sahf
cmc
xchg
jne
push
xor
stos
or
repz
push
bound
push
nop
repz
jnp
sub
pushf
push
fbstp
mov
aas
mov
movsl
mov
mov
sub
push
and
out
std
inc
push
idivl
add
pop
pop
or
jg
mov
mov
and
mov
popl
les
jo
stc
sub
jmp
and
and
sub
outsl
andl
dec
out
cmp
sub
mov
ds
ret
rcrl
dec
cmp
int3
push
ds
sbb
lds
sbb
das
sub
mov
dec
xchg
add
fwait
repz
or
add
lret
adcl
jne
sti
in
push
test
cltd
in
jne
icebp
mov
cmpl
dec
xchg
daa
mov
sub
shrl
push
mov
cli
mov
ds
push
jl
sub
insl
mov
dec
in
dec
push
jmp
add
xchg
push
fnstcw
or
jl
test
and
jb
out
sbb
sbb
jmp
je
add
stc
or
and
mov
xor
out
mov
mov
or
pop
sbb
pop
mov
pop
and
xchg
ss
call
out
pop
mov
lret
cmc
js
fmul
call
cmp
lds
mov
repz
xchg
leave
sahf
adc
loop
push
mov
sbb
xor
mov
mov
mov
jl
sbb
fcmovb
cmp
add
ljmp
mov
add
sti
cmp
ficomps
mov
xchg
repnz
int3
mov
jne
push
cmp
imul
cli
fistpl
fidivrs
testb
jp
jmp
or
mov
dec
lea
jns
mov
mov
xchg
lcall
stc
sub
daa
daa
cmp
and
mov
dec
fwait
cmpsl
or
mov
jno
cmc
add
jl
xchg
jl
sbbl
pop
hlt
xor
and
je
mov
xchg
inc
outsb
mov
and
push
mov
push
xchg
movsb
add
adc
int
pop
push
and
mov
int
outsb
sub
outsb
cmpsb
inc
bound
and
or
xor
sbb
adc
aaa
sarb
js
xor
arpl
sub
mov
fidivrl
dec
gs
add
jns
fstpl
mov
adc
jecxz
cmp
and
aam
lea
sub
int
push
adc
gs
cwtl
sub
aam
mov
fists
inc
bnd
movsb
pop
inc
sahf
jp
hlt
or
xchg
push
cmp
movsl
xchg
cmpsl
sub
mov
push
lock
push
jmp
push
sbb
popf
xchg
xchg
mov
pop
xor
dec
in
push
jp
loopne
xor
sub
cwtl
cltd
mov
loopne
sbb
inc
cmc
fwait
aam
imul
dec
sub
xchg
aas
add
std
push
fcoml
jb
push
in
and
pop
in
xchg
fiadds
cmp
mov
sub
gs
and
inc
lods
repnz
testb
pop
test
shlb
int3
mov
lods
ret
or
dec
sub
int
cmpsl
repz
pop
inc
mov
jge
imul
dec
fsub
imul
xor
inc
mov
ja
popl
sbb
mov
inc
push
lea
into
stc
icebp
push
dec
ds
js
test
aaa
dec
cmp
aas
cmp
jns
xchg
inc
das
out
jmp
mov
adc
jae
inc
mov
xor
pop
ret
cs
xchg
push
fidivs
sbb
cmpsb
jns
push
sbb
push
repz
or
rorb
jo
sti
mov
movsl
icebp
in
mov
cmp
xchg
test
jecxz
ja
lds
loopne
mov
out
pop
mov
mov
jno
push
mov
xor
inc
aaa
push
daa
and
lds
jo
scas
cmc
sbbl
outsb
cmp
leave
inc
aam
xchg
cmc
mov
test
push
mov
jo
inc
pop
ret
or
jl
jno
std
lds
imul
jg
ds
or
inc
cmpsb
out
sbb
and
jne
push
ja
or
push
add
add
cltd
mov
rol
dec
arpl
push
pop
pop
icebp
sub
fdivrl
stc
and
sbb
pop
scas
out
leave
enter
mov
inc
pop
pop
fiaddl
insl
sub
pop
adc
popa
clc
push
int
pop
bound
sbb
xlat
mov
pushf
sbb
pop
jp
popa
push
xchg
cmp
mov
and
and
and
cwtl
xchg
sbb
jo
hlt
cmpsb
nop
sbb
out
dec
lret
jl
lret
xor
into
xor
push
test
add
imul
pop
lret
enter
cmp
xorl
out
inc
loopne
mov
aad
in
idiv
or
movsb
stos
rcrl
ror
sarl
mov
fisubl
and
inc
xor
jle
inc
or
stos
movsb
sub
and
fdivrp
shlb
movb
sbb
inc
cli
or
sti
pop
out
inc
mov
and
repz
data16
lret
dec
or
cmp
xor
cltd
dec
int3
push
std
stc
mov
pop
and
dec
fisttpll
sub
cmp
dec
ret
xchg
movsl
jmp
mov
shll
clc
pop
shr
fcmovb
icebp
add
pop
mov
inc
int3
jecxz
mov
ret
rorl
in
lret
leave
sbbb
mov
lcall
in
pop
or
filds
sti
ret
fstpt
xchg
out
xchg
mov
jecxz
add
shrb
cmc
movntps
aad
leave
sbb
jg
ret
inc
icebp
aad
jp
jns
xlat
jl
gs
jg
incl
mov
add
ds
lahf
sbb
mov
inc
scas
pop
in
jns
dec
mov
rcrb
push
or
sub
mov
ret
loop
dec
dec
adc
pop
sbb
cltd
mov
sub
mov
stc
push
iret
or
and
les
xchg
fwait
xchg
push
or
jo
xchg
pop
bound
int
xor
insb
es
bound
or
and
aas
divl
inc
test
dec
out
pop
aas
lods
arpl
mov
or
fsts
repnz
jmp
mov
pop
lcall
cld
in
mov
popf
call
fwait
jbe
cmp
or
aas
cltd
mov
ja
push
cmp
adc
jg
out
add
sbb
push
loope
sub
lea
sbb
push
insl
test
dec
lret
adc
sahf
adc
addb
jge
je
mov
sbb
sarb
cmp
sub
mov
push
jp
test
scas
inc
test
imul
and
mov
sub
push
sub
mov
lcall
ds
xchg
das
pop
mov
popa
je
pop
sahf
pop
icebp
push
insb
jle
mov
lahf
bound
fistps
or
sahf
test
mov
mov
daa
data16
bound
ja
jmp
pop
dec
mov
inc
outsb
fs
push
adc
mov
out
xchg
push
xor
addb
imul
jp
popf
push
cmpl
or
and
push
int3
cmp
sbb
arpl
enter
ret
dec
jbe
stos
sub
cmpsb
and
add
lods
jmp
xor
xor
call
mov
dec
mov
push
daa
nop
inc
and
adc
adc
cs
pop
mov
incb
leave
dec
sbb
ret
cmp
inc
test
mov
dec
fs
mov
mov
push
lret
push
ljmp
sbb
fisttps
call
ret
xchg
xchg
enter
dec
fisubl
stos
dec
hlt
scas
jns
arpl
ret
mov
mov
cmpsl
xchg
add
ja
xor
sahf
iret
and
jecxz
je
cld
mov
test
mov
sub
fisubs
stos
jo
sahf
stos
pop
mov
pusha
pop
sub
xchg
push
rolb
mov
or
cli
dec
add
inc
jno
into
test
andl
xorb
xchg
sub
and
or
jecxz
lods
icebp
je
xchg
outsb
xchg
pop
xchg
into
jno
lods
adc
add
lods
and
inc
cmp
or
femms
sub
dec
pop
add
divl
jecxz
mov
arpl
inc
cmp
cmp
lock
and
push
xchg
and
andb
imul
dec
and
jns
sahf
shll
in
inc
adc
cmc
loope
cmp
sbb
loopne
in
aam
jle
xchg
pop
xchg
push
add
jg
ds
sti
int
aaa
or
push
sub
fistpll
outsl
iret
int3
or
pop
cli
and
lds
push
lds
gs
call
cmpsb
popf
lahf
and
sub
ret
lods
mov
xlat
leave
rclb
inc
sub
xor
cmp
popf
pushf
setb
lods
cmp
xchg
or
into
js
jg
pop
rorb
pop
jno
add
shr
fisubrl
inc
pop
jle
jl
les
sub
lret
pop
stos
and
cmp
addr16
pop
out
sub
enter
fidivl
mov
sbb
je
test
scas
mov
sbb
dec
xor
test
jbe
lods
dec
adc
jecxz
dec
jns
sbb
xor
sbb
lds
scas
cltd
push
or
sub
scas
lock
stc
inc
std
mov
and
add
adc
addr16
or
sub
inc
movsl
ja
cltd
xchg
out
push
div
jmp
mov
xor
adc
push
into
sahf
sub
dec
leave
cltd
addr16
aam
pop
ret
mov
and
adc
out
xchg
jae
mov
cmp
mov
in
fistpll
adc
notl
pop
es
pusha
aaa
mov
push
jae
push
sti
dec
adc
sbb
mov
adc
inc
and
sub
or
repnz
pushf
pop
dec
mov
arpl
inc
push
xchg
cmpsl
hlt
out
fs
dec
rolb
in
push
mov
std
mov
fisubl
adc
jno
push
jl
mov
arpl
loop
decl
mov
push
iret
add
inc
fwait
out
cmp
mov
cvtpi2ps
mov
sbb
xor
cmpsl
pop
outsl
xor
out
repnz
sahf
call
jbe
or
inc
xchg
pushf
sub
call
cmp
das
dec
jp
das
outsb
jg
mov
sbb
push
push
leave
les
and
es
mov
or
sub
jnp
mov
cmpsb
mov
add
or
sub
mov
jns
push
mov
add
das
push
jno
jl
ja
inc
cld
shr
xor
in
jle
leave
xorb
dec
jb
mov
push
pop
jg
mov
std
mov
pushf
js
sub
jg
xor
out
lods
in
jecxz
cmp
xlat
idivb
cs
and
mov
dec
rep
addr16
je
push
or
and
xchg
push
jmp
out
lcall
lcall
mov
xchg
jnp
sub
add
xor
pop
jle
and
add
gs
jmp
outsb
dec
pop
daa
icebp
lods
gs
aam
mov
outsl
and
nop
dec
cmp
cld
jno
xchg
push
inc
cs
testb
mov
push
aad
fists
xor
adc
pop
xchg
pusha
mov
leave
mov
call
fstl
mov
mov
inc
lret
loope
sbb
adc
and
mov
dec
push
fxch
sub
inc
jle
stc
arpl
daa
jle
pop
pop
lods
fistpl
and
out
mull
sbb
push
arpl
xor
jmp
mov
or
or
test
aaa
xor
pop
outsl
xchg
leave
fsts
loope
test
pop
inc
mov
fmul
rclb
aaa
add
adc
dec
std
push
push
movsb
mov
loop
cld
out
nop
jbe
cmp
mov
aaa
sbb
pop
clc
addl
or
and
negl
mov
cmpsb
xor
mov
xchg
push
test
divb
sbbb
bound
inc
lods
push
repz
jno
mov
push
mov
ds
xchg
aam
sbb
pushf
jbe
jmp
pop
dec
mov
in
pop
insl
cmp
and
nop
ja
and
or
nop
jle
aam
xchg
in
in
push
pop
xchg
leave
sti
imul
mov
arpl
pop
cmp
js
out
mov
mov
mov
cmp
lock
arpl
in
and
sti
pop
mov
je,pt
pop
shr
fidivl
insl
dec
emms
jmp
stos
in
add
push
out
outsb
dec
and
cmpsl
add
sub
mov
jmp
loopne
out
xor
je
aam
lahf
ret
outsl
in
into
xchg
push
pop
mov
insl
jecxz
lret
pop
and
or
mov
fcoml
nop
ret
xor
lea
lahf
rol
jl
hlt
cmpsb
repnz
or
sub
push
pop
jge
pushf
dec
mov
or
mov
or
popa
sub
dec
mov
inc
or
xchg
add
adc
mov
sbb
inc
xlat
dec
loope
lock
jmp
xchg
cwtl
mov
sahf
adc
cmp
pop
xchg
push
mov
and
inc
add
add
cmp
loop
adc
repnz
or
and
jno
scas
outsl
das
sbb
lods
lods
repnz
mov
and
jo
in
mov
cmp
pop
repz
inc
cmp
stc
fmul
jecxz
out
add
mov
pop
push
les
js
pop
in
cmpsl
xor
inc
leave
lcall
push
mov
jnp
movsb
xchg
scas
adc
test
push
jns
push
stc
insl
or
sbb
cmpsl
mov
pop
mov
xchg
mov
jmp
enter
dec
mov
dec
push
mov
ror
repnz
lret
jo
in
inc
sub
daa
roll
pop
xor
or
xchg
fcmovbe
mov
daa
jge
pop
jge
addb
add
scas
mov
dec
mov
sahf
mov
fmuls
filds
lret
cmp
pop
sbb
loopne
push
pop
jne
icebp
xor
aad
cwtl
pop
mov
xchg
pop
mov
lea
ret
xchg
mov
dec
mov
shlb
mov
or
cmp
mov
outsb
sub
xchg
scas
lea
sahf
cs
fcomps
xchg
xchg
add
ret
sbb
mov
lea
push
mov
mov
and
adc
lds
cwtl
adc
insb
jg,pt
inc
xor
pop
call
xchg
jns
pop
scas
bound
popf
icebp
outsb
jo
test
in
cmp
cmp
out
js
mov
idiv
and
sub
sub
push
xchg
aas
int3
mov
jp
xor
pop
pop
in
sbb
mov
and
pop
data16
sbb
ret
mov
int
cmp
loopne
outsb
adc
cmpsl
jns
xchg
fs
fmuls
leave
mov
sbb
loope
push
cmpsl
jmp
in
cmp
sub
mov
ss
adc
out
scas
add
leave
mov
test
jbe
and
in
movsb
movsl
sub
je
xor
ret
pop
cmp
stos
loope
add
adc
cmpsb
ja
or
add
es
int
stc
jne
dec
pop
fidivl
xchg
inc
adc
mov
sub
iret
mov
and
cs
inc
mov
mov
dec
push
ret
mov
sub
pop
inc
lds
lahf
mov
sub
aas
loopne
ss
or
imul
std
adc
notl
int
das
ss
out
mov
cmc
xor
sbb
push
or
inc
sbb
and
mov
sub
ljmp
repnz
xchg
jge
adc
repz
inc
mov
pop
cmp
xor
lods
sti
enter
shrb
aad
pop
icebp
mov
in
fwait
sub
or
jmp
ficoml
mov
xor
mov
sti
int
push
or
add
int
mov
icebp
out
movsb
mov
cmp
jl
jne
leave
jno
fdivl
sbb
pop
sti
pop
mov
icebp
or
sub
out
jb
and
repnz
test
xchg
iret
shlb
test
js
test
mov
push
stc
xor
movsb
pop
sub
mov
mov
push
pop
cltd
push
fdiv
push
test
je
gs
mov
test
xchg
das
mov
cltd
inc
push
xor
stc
jno
std
sub
dec
xchg
adc
pop
push
daa
das
add
push
pop
lret
xor
mov
dec
cmp
jb
test
and
inc
mov
add
sub
stc
or
push
add
dec
push
inc
mov
cmp
js
add
pop
std
jne
mov
mov
xchg
mov
or
mov
sub
cld
adc
dec
ret
lods
je
cld
or
or
popa
mov
es
std
mov
mov
clc
leave
nop
aam
xlat
les
lcall
push
lods
outsl
sub
mov
out
mov
int
test
clc
mov
sub
movsb
xor
fnstsw
lea
lcall
cmc
jne
mov
inc
in
jmp
ret
xor
ljmp
dec
mov
outsl
cmpb
add
xor
stos
enter
subl
dec
enter
mov
dec
xchg
dec
push
dec
aam
sti
aam
lcall
jno
popf
dec
jmp
pop
fwait
lret
sahf
repz
xlat
inc
rcrb
dec
xchg
jle
test
lods
push
sbb
and
aad
xchg
scas
in
enter
add
adc
fists
mov
mov
or
ss
fcomps
bound
dec
or
hlt
test
aas
sbbl
jae
je
and
ljmp
lods
movsl
lods
add
stos
mov
shlb
lcall
mov
push
shll
jo
aam
mulb
in
test
xchg
mov
int
dec
enter
pushl
xchg
mov
jo
adc
scas
push
mul
ljmp
cmpsb
movsb
mov
loopne
push
inc
leave
lcall
jmp
or
cld
stos
mov
cmp
push
jp
aas
jge
imul
pop
lods
add
subl
out
sarl
ficomps
sub
push
jmp
jae
sbb
scas
mov
or
or
sbb
mov
mov
mov
xor
push
testb
test
imul
push
repz
push
xchg
sub
daa
cs
jbe
dec
clc
call
daa
pop
sub
fiadds
nop
dec
outsb
aas
jg
sbb
testl
sbb
shrd
and
or
aam
sub
push
stos
out
xor
flds
enter
push
andl
aas
icebp
call
les
mov
loop
dec
pop
push
pop
cltd
filds
pop
xchg
shll
lret
and
enter
push
pop
xchg
sub
mov
xchg
shlb
sti
pop
jnp
cmpl
insb
pop
inc
clc
jp
mov
aaa
sar
into
mov
loop
lea
push
sub
jo
lret
and
mov
rcr
inc
cmc
inc
or
jbe
mov
jno
sub
lock
ret
shll
nop
stos
cwtl
stos
add
sahf
das
dec
fdivs
mov
ret
push
sbb
mov
push
adc
sbb
sbb
hlt
out
jnp
outsl
popa
hlt
lock
add
or
cwtl
cld
sarl
inc
xchg
lret
jne
aam
in
cmp
nop
aad
sbb
aas
mov
adc
jb
xchg
mulb
call
mov
add
sub
das
push
flds
jns
dec
dec
adc
call
sbb
cmpsb
add
and
lods
mov
add
fs
addb
lret
lret
in
sub
test
xchg
dec
daa
push
fisttpl
cld
and
xor
mov
andb
jge
nop
aad
cwtl
inc
lods
ret
jmp
mov
cmp
xchg
mov
data16
into
loopne
das
xchg
and
sbb
mov
push
lock
and
dec
in
inc
sbb
mov
xor
rcr
in
add
or
mov
filds
mov
fnstenv
fisubrs
xchg
add
inc
rep
out
jge
inc
mov
fildl
mov
mov
ja
adc
xchg
into
leave
dec
ljmp
mov
hlt
push
repz
lea
scas
sbb
and
xchg
xorl
lret
sbb
arpl
and
pop
leave
jecxz
fs
mov
jno
nop
cmp
jle
insb
add
repnz
loop
mov
jno
lahf
sbb
out
sbb
nop
test
push
mov
cmp
jbe
aaa
inc
or
pop
lea
ljmp
or
test
pop
fwait
test
and
mov
sub
sbbb
pop
sub
sub
pusha
cli
or
das
xor
repnz
rcrb
push
aad
lock
pop
mov
push
cld
cmp
int3
mov
inc
mov
or
daa
sahf
mov
fisttpl
sub
jb,pt
pop
imul
mov
push
arpl
sub
jno
add
and
mov
arpl
arpl
daa
loope
out
mov
xor
imul
dec
xor
cmp
in
jmp
fwait
pop
pop
pop
dec
arpl
mov
inc
add
inc
test
jp
dec
push
dec
outsb
sbb
or
pop
in
cltd
sub
pop
mov
cli
call
ret
jns
or
test
add
imul
xor
addr16
fldt
jle
insb
rcll
hlt
jecxz
mov
mov
inc
adc
push
ret
cmp
ljmp
and
popa
mov
mov
scas
cltd
adc
in
inc
mov
decb
sbb
mov
rorl
fcmovnbe
sub
pop
cwtl
popa
add
xor
cs
inc
out
jmp
into
insb
xor
mov
rcrl
lds
ja
inc
add
xor
cmp
or
lods
jle
jae
push
inc
int3
aad
int3
or
testl
adc
pop
push
pop
out
or
dec
mov
rcl
inc
adc
out
sbb
stc
jno
xor
push
and
adc
jbe
xchg
ret
add
mov
sub
or
xor
inc
insb
cmpl
test
cld
inc
mov
xor
sti
xchg
std
and
jle
in
rcll
inc
jmp
daa
jnp
daa
ljmp
clc
adc
jl
cwtl
xor
cwtl
outsb
mov
mov
mov
or
cmp
xor
pusha
xchg
mov
dec
lcall
stc
mov
and
outsl
std
aaa
stos
stc
jne
fwait
sub
mov
lock
mov
rolb
stos
rcrl
enter
push
cmp
mov
lds
nop
daa
mov
dec
mov
in
gs
out
pop
int
out
sbb
or
sub
mov
jge
mov
or
ss
in
enter
test
inc
int3
pop
shll
mov
and
cmp
cmpb
ret
mov
filds
adc
mov
push
scas
add
push
adc
inc
dec
movsb
sahf
mov
pop
xor
fldcw
fcomps
push
xchg
jge
mov
fucomp
ljmp
add
pop
push
inc
daa
dec
sbb
test
pop
decb
sbb
in
or
xchg
fldcw
pop
scas
adc
and
push
mov
movsl
inc
pop
pushf
data16
test
xor
sarl
jmp
mov
ss
cmp
cs
push
stc
dec
xor
dec
into
mov
daa
pop
and
out
xchg
insb
fisttps
or
mov
clc
mov
add
push
aas
mov
divl
hlt
or
fdecstp
aaa
and
sbb
pop
fnstenv
pop
add
js
jg
adc
mov
xlat
xchg
dec
sbb
lcall
or
sbb
add
ss
push
xchg
sbb
repz
in
mov
pop
mov
or
addl
test
sub
fnstcw
out
cmpsl
mov
xor
cmp
sbb
repnz
outsl
mov
enter
push
push
addr16
lret
in
lock
test
dec
roll
imul
icebp
and
mov
mov
bound
mov
cmp
data16
pop
sub
sbb
mov
pop
push
sbb
fwait
mov
sbb
dec
out
xadd
inc
mov
das
dec
push
adc
or
mov
stc
push
and
ljmp
cwtl
ljmp
out
mov
or
dec
cs
bound
sub
jl
lds
ficoml
pop
sub
out
leave
lcall
push
xchg
sbb
shlb
mov
push
gs
add
out
iret
cmp
insb
cmp
repz
aaa
data16
shlb
in
inc
xchg
movsl
push
lods
gs
inc
jle
ds
in
mov
shll
jae
cld
cmc
lods
jge
sbb
sub
push
mov
jmp
or
rol
js
adc
cmp
jae
cmp
pop
arpl
mov
ret
ror
cmp
in
push
push
sub
sub
dec
sub
ss
movsl
aam
pop
orb
addr16
or
adc
aam
movsb
lea
fstps
sbb
push
dec
daa
cmp
aas
in
pop
data16
push
mov
xor
mov
into
cwtl
in
and
add
hlt
lods
mov
xlat
jo
pop
jge
cmp
push
ja
push
shlb
sbb
fistpll
and
push
xchg
jb
cld
ret
fcomp
stc
shrl
cli
imul
stc
mov
out
cmc
in
cmpl
dec
out
mov
imul
or
jns
inc
fsubrs
jbe
add
pop
movsl
in
rorb
int
pop
or
cmp
jmp
jle
pop
pop
sub
in
cmpsl
out
pop
jbe
pop
dec
data16
or
enter
pop
cld
scas
jmp
dec
lods
int3
adc
fnsetpm(287
lcall
dec
stos
mov
sub
dec
cld
add
jl
cmp
jp
push
mov
out
adc
sarb
dec
or
jg
popf
sbb
pop
out
test
xor
xchg
imul
cmpsl
fcompl
mov
mov
mov
addr16
fucomp
mov
xor
std
inc
notl
ds
daa
sahf
das
push
addr16
shl
sub
xchg
sti
cmp
stc
cld
cs
jo
add
aad
sbb
aad
inc
or
insb
addr16
cwtl
dec
call
sub
adc
pushf
mulb
mov
rolb
add
or
cmpsb
mov
cmpsl
and
sub
cmp
sarl
rcl
xor
dec
fsubrl
js
jg
lods
adc
mov
icebp
cmp
jae
push
hlt
mov
xorl
mov
cli
mov
push
js
xchg
jns
xchg
dec
mov
mov
mov
lds
xchg
lods
fnstcw
fwait
add
mov
add
push
sbb
std
push
in
xchg
mov
adc
fidivrs
fistps
mov
ficoms
mov
lret
dec
add
out
mov
mov
ss
jge
mov
dec
idiv
je
mov
inc
sbb
out
xchg
pop
sbb
mov
mov
sbb
adc
or
or
repz
fsubrs
fwait
adcb
jge
test
rclb
cmp
mov
dec
pop
add
test
mov
jae
mov
cmc
mov
loop
ret
dec
data16
mov
loopne
mov
sub
xchg
loop
lds
mov
test
push
stos
dec
in
mov
push
jecxz
jno
cmp
mov
jp
fnstcw
bound
incb
and
cmp
jp
in
loope
scas
pop
push
bound
inc
in
pop
daa
das
lret
in
pop
sbb
or
sub
pop
lds
dec
xchg
mov
push
mov
les
adc
mov
popa
imul
or
into
loope
push
jl
popw
cmpsl
cmp
loop
daa
mov
in
cmpsb
pushf
fimull
pop
xchg
stos
mov
es
ret
and
sub
jl
or
xchg
mov
es
inc
or
pop
xor
call
orl
inc
jne
imul
dec
cmc
fisttpl
out
je
cltd
scas
pop
jbe
flds
add
test
cltd
icebp
mov
dec
movsb
cmp
daa
mov
jle
leave
icebp
mov
shlb
fscale
mov
lock
and
push
push
testl
sub
lock
push
int
rcll
mov
mov
xchg
scas
daa
ret
ja
mov
sbb
lea
dec
popa
ljmp
mov
ficomps
mov
sub
adc
out
fwait
sub
pushf
cmp
inc
and
mov
push
rcl
mov
ss
cltd
inc
in
cmp
roll
aaa
call
bound
mov
das
lock
imul
jb
cmp
adc
xor
icebp
in
inc
std
jmp
mov
ds
ret
xorl
jmp
jbe
stos
mov
add
cwtl
popa
stos
xchg
out
popf
test
popf
insl
jmp
fwait
outsb
add
pop
cwtl
inc
les
pop
into
jge
cmp
cs
xchg
push
jge
les
cmpsb
jae
mov
mov
fstl
lods
lcall
shlb
dec
pop
movsl
xchg
lea
inc
icebp
cmp
in
push
aam
sbb
jne
mov
mov
cld
mov
add
in
inc
mov
xor
pushf
loope
lcall
movsb
pop
cltd
cld
nop
dec
add
pop
push
push
aam
push
pushf
add
imul
push
cmpl
adc
mov
les
or
mov
fisttps
lock
push
dec
aaa
or
or
in
inc
sub
jno
pop
addl
lods
and
xlat
xor
clc
mov
dec
add
enter
cmpsb
dec
clc
jae
push
xchg
popa
or
xor
cmc
inc
xchg
mov
loop
out
mov
or
jnp
mov
pushf
and
je
jb
adc
pop
out
lcall
stos
pop
out
mov
sbb
jo
ret
add
lret
fwait
cmp
sahf
popf
jp
mov
push
dec
stos
sbbl
mov
lds
inc
mov
inc
in
add
mov
jne
pop
mov
cmp
pop
dec
in
inc
dec
sub
das
pusha
adc
das
mov
mov
das
stos
je
fwait
mov
xchg
adc
out
scas
dec
pushf
outsl
mov
sub
xchg
xor
pushf
pushf
dec
add
movsb
mov
or
cltd
jp
mov
aaa
sub
incb
ja
mov
sahf
into
test
mov
dec
jp
cmpsl
in
dec
cmp
mov
out
movsb
in
addb
movsb
sbbl
fdivrl
into
sub
push
mov
jno
mov
sub
xchg
dec
xor
xlat
inc
pop
or
roll
cmpsb
fsubs
das
jb
and
mov
jp
inc
sbb
int
movsb
jbe
mov
call
mov
and
pop
inc
outsl
nop
mov
dec
into
xchg
or
mov
mov
mov
xchg
insb
pop
js
jp
repnz
ljmp
sbb
out
mov
mov
fmull
and
cmp
in
push
iret
test
ret
daa
imul
add
hlt
push
in
sti
fs
lcall
jecxz
dec
mov
mov
mov
add
imul
ret
dec
mov
sbb
test
jg
mov
push
fcompl
rorb
adc
js
repnz
sbb
xchg
pusha
cwtd
jmp
mov
ss
mov
jle
imul
stos
ret
out
lock
in
jp
push
xchg
mov
mov
je
ret
je
or
imull
dec
sub
cmpl
or
mov
ds
pop
out
xchg
ret
fldt
sub
rorl
xchg
mov
fwait
sub
repnz
inc
and
daa
mov
jp
mov
pop
add
xchg
push
jl
test
test
cmpsb
xchg
jb
add
scas
movsl
xchg
lock
dec
and
aas
pop
pushf
mov
xor
nop
and
fs
mov
repz
push
pop
int
aaa
rcrb
pop
sti
das
add
scas
or
xor
div
pushw
fisubrs
and
pop
roll
sbb
jno
and
nop
mov
data16
pop
jno
cmp
popa
mov
in
or
icebp
loope
fistps
adc
push
loop
sub
aad
sbb
sbb
sub
test
add
pop
lea
pop
int
sbb
add
outsl
leave
and
cmpsl
xchg
cmc
outsl
push
in
pop
mov
test
adc
push
jns
shl
or
push
adc
sbb
xor
cld
sub
mov
adc
leave
adc
gs
fldenv
add
xchg
dec
push
inc
cwtl
and
jmp
lds
mov
inc
rcll
dec
pop
push
cmp
pushf
inc
xchg
out
mov
inc
test
pop
pop
aad
mov
cmpsl
mov
push
mov
ret
nop
jl
jg
cld
into
or
bound
xchg
or
add
lret
inc
jmp
mov
cmp
mov
js
sub
popf
sub
gs
xchg
fdivs
sub
sti
add
push
dec
and
or
ds
cwtl
sti
fs
xchg
mov
inc
loop
mov
jmp
ret
xchg
popa
pop
enter
popa
insb
fistps
cmp
jp
and
fsubs
add
push
adc
add
xorl
dec
sub
mov
lods
test
nop
jbe
loopne
add
scas
iret
jl
mov
mov
inc
lcall
pop
cmc
cmp
ret
push
es
fmul
mov
lahf
jmp
add
shll
test
sub
push
dec
shll
scas
int3
out
movsl
call
lret
adcb
pop
xchg
inc
sbb
fbld
jle,pt
cmp
xlat
cli
jecxz
mov
dec
push
or
in
cltd
mov
adc
xchg
pop
pop
gs
jbe
sbb
push
divl
mov
lahf
xchg
jl
es
add
mov
hlt
sbb
dec
pop
xchg
popa
add
mov
pop
leave
sarl
or
addr16
ret
push
fldl
mov
mov
aas
out
test
mov
add
and
mov
out
leave
cmp
bound
add
cmp
cmpsb
or
fdivl
in
jp
xchg
and
gs
jp
xchg
xchg
xchg
mov
es
sbb
int
das
adc
sub
sub
pop
sarl
push
sub
clc
sub
sub
pop
mov
mov
mov
sti
lods
or
movl
adc
fcompl
cld
rorl
xchg
sbb
xchg
mov
in
pusha
jne
inc
imul
cs
cmp
orl
sar
xor
fsubr
sbb
jo
orl
fstl
data16
fidivrl
and
lods
push
and
rcr
mov
mov
sub
mov
je
mov
inc
ret
rcl
sub
xor
out
ud0
cwtl
mov
xchg
sbb
mov
or
inc
out
and
inc
or
pop
jo
cmp
movsb
fildl
data16
fstl
imul
inc
scas
gs
scas
cmp
test
jns
out
pop
or
mov
pop
cs
lea
out
pusha
mov
inc
outsl
aad
mov
loopne
inc
jbe
mov
mov
js
push
mov
or
lret
std
das
mov
push
cmp
or
add
cmp
jnp
in
rolb
in
push
rcrl
ror
push
mov
nop
fnstsw
pusha
popf
lahf
sbb
mov
jle
inc
stos
test
jne
dec
mov
or
movsb
jns
fsubs
loope
insb
fildl
mov
aad
mov
mov
std
sbb
mov
mov
in
nop
mov
mov
mov
jmp
lods
mov
les
jg
and
jl
out
and
dec
mull
xchg
dec
pop
xchg
mov
scas
js
pop
arpl
outsb
int3
or
mov
test
mov
mov
xor
mov
hlt
xchg
xchg
lcall
mov
cmp
negl
xor
dec
jecxz
push
mov
pop
imul
shlb
push
xor
push
xor
int3
test
mov
or
jbe
push
mov
xchg
cld
pop
dec
or
dec
ds
std
movsb
or
cmp
push
sbb
and
cmpsb
sbb
sbb
mov
dec
cmovno
push
lcall
daa
mov
aaa
adc
mov
cmc
mov
cs
ficompl
rorl
mov
xlat
push
lret
xchg
push
not
std
sub
pop
sub
and
jmp
pop
mov
adc
out
pop
xchg
fmuls
mov
mov
test
xor
mov
xchg
fsub
push
daa
movsb
call
cld
aas
push
jge
sahf
adc
pop
inc
sub
js
gs
mov
data16
xchg
dec
or
into
fbstp
cmp
add
lods
arpl
push
mov
adc
xor
dec
add
mov
imul
add
inc
mov
cmp
xlat
lods
js
fwait
or
notl
xchg
push
cmp
incb
fidivl
xchg
loopne
aad
lahf
lea
pusha
fiaddl
or
jmp
sub
or
xor
cmpsl
jno
push
addr16
outsl
nop
push
fmull
fmul
es
adc
incb
inc
out
sbb
lcall
or
adc
inc
adc
test
orb
sub
jmp
pusha
sub
frstor
pushf
cltd
hlt
or
inc
mov
mov
pop
lret
rcr
lahf
pop
ror
and
iret
add
addr16
cwtl
pop
xchg
mov
and
mov
adc
ss
pop
cld
jle
adc
mov
push
outsb
sti
pop
mov
push
dec
mov
sub
xchg
adc
adc
addr16
mov
icebp
ss
das
ffreep
arpl
ret
jl
sarl
iret
pop
jmp
pop
std
lret
push
push
out
cmp
sarl
adc
inc
movsb
pop
jmp
sub
iret
out
mov
sahf
cwtl
js
inc
fdivl
test
xchg
in
mov
repz
nop
in
xlat
popf
xor
jae
pop
mov
fisubs
iret
dec
mov
into
insl
push
jecxz
lea
shlb
ds
inc
xcrypt-cfb
cmpsl
and
test
push
xor
ret
ljmp
rcrl
sub
aaa
lods
into
jno
mov
sub
psubd
cmpsl
sub
cmp
sbb
out
sarb
xchg
insl
add
pop
shrb
loopne
cmpsb
xor
jl
sub
gs
or
data16
ret
xor
repnz
adcl
and
pop
mov
cmp
jg
cmpsb
mov
arpl
fisubs
and
iret
in
mov
sbb
ret
mov
fisubs
std
hlt
ficomps
repz
or
out
out
mov
add
cmp
stc
mov
sub
cwtl
fbstp
xchg
imul
mov
push
sbb
fmull
xor
or
loope
cmpsb
cltd
dec
inc
lahf
incb
std
dec
xlat
xchg
jae
or
clc
fnsave
iret
jg
push
stos
jle
cmp
inc
popf
push
pop
add
test
test
mov
jmp
aaa
inc
loope
pusha
cmpsb
adc
cli
divl
insl
aad
add
ljmp
out
push
add
call
jg
dec
xchg
jecxz
and
adcl
mov
cmp
mov
jecxz
sarb
test
pop
mov
pop
in
xchg
loopne
adc
push
inc
jne
aad
inc
push
cmc
and
lret
xchg
dec
stc
jbe
aas
rcl
mull
jge
mov
sbb
push
push
negl
cmp
aas
mov
mov
daa
fld1
scas
push
jno
add
ret
mov
out
push
jo
sub
sbb
pop
xchg
dec
lods
inc
jecxz
pop
in
test
in
xchg
sub
movsb
push
loop
jge
xchg
dec
mov
push
pop
mov
push
ffreep
mov
mov
cmp
lods
mov
clc
aad
jae
inc
stc
in
sti
mov
orl
punpckhwd
push
or
stc
mov
dec
xchg
and
stos
xor
leave
sub
xchg
sbb
or
in
hlt
test
mov
repnz
ret
xor
push
arpl
sbb
pop
inc
dec
lds
sbb
lret
iret
cmp
xchg
repnz
test
lea
xchg
sbbl
cmp
daa
movsl
lock
lds
xchg
outsl
push
lea
cmpsb
or
xchg
es
push
xlat
mov
ret
and
stos
enter
mov
jo
and
push
fdiv
xchg
cld
push
and
mov
and
push
lea
mov
push
out
adc
js
pop
dec
ffree
jb
loope
mov
and
pop
push
dec
jp
repnz
es
arpl
scas
in
test
mov
inc
and
mov
in
cmp
cwtl
dec
ja
lock
pop
ret
xor
pop
dec
inc
ss
cmp
push
loopne
dec
fidivrs
fldcw
xor
inc
sub
xor
popf
pop
xchg
jne
xor
ror
fldenv
imul
inc
scas
pop
lcall
or
outsl
sti
xor
lds
cmp
xor
cmpsb
xchg
jb
outsb
add
leave
aas
dec
arpl
rcr
cmc
fsub
fcmove
andnps
jmp
insb
mov
pop
xor
lahf
mov
fwait
pop
mov
dec
ret
dec
iret
inc
sbb
test
xchg
mov
adc
lcall
mov
mov
dec
jl
jl
imul
stc
cld
decl
xchg
ss
add
enter
flds
mov
hlt
mov
xor
pushf
dec
sbb
hlt
das
jb
or
pop
cmp
jmp
jb
mov
sub
xor
inc
lods
scas
movsb
loop
pop
pop
adc
add
gs
pop
cmp
int3
iret
xor
xchg
dec
dec
sub
push
scas
shlb
push
inc
sub
mov
lea
inc
push
xlat
xor
aaa
mov
stos
jae
pop
push
xor
inc
push
jb
in
xorb
mov
addr16
adc
shrl
push
dec
push
fcoml
popf
add
loop
shl
push
xor
and
stos
mov
test
inc
mov
jnp
stc
mov
jle
jne
xchg
daa
cmpsl
add
sub
loopne
addr16
sub
sub
pop
mov
movswl
insl
add
mov
and
aas
and
dec
dec
push
mov
pop
lea
mov
xchg
addl
ja
or
inc
xchg
lods
jecxz
mov
arpl
rcll
jo
mov
loope
leave
insb
js
leave
inc
iret
aad
adc
pop
mov
sbb
jae
jp
jg
fldl
in
push
jbe
rol
sbb
jbe
ret
jp
push
jns
les
loop
hlt
mov
into
sbb
mov
mov
cmp
lcall
je
jecxz
out
arpl
lods
out
notl
je
loope
fucomip
dec
out
add
mov
sarb
dec
cmpl
pop
int
scas
stc
mov
mulps
shrb
mov
pop
insl
mov
out
mov
mov
fwait
sarl
and
loope
push
push
push
mov
cld
pop
xchg
push
cmc
xor
ljmp
mov
lds
das
xor
bound
push
fstl
xchg
fsubrs
pop
nop
adcb
das
add
scas
jp
mov
inc
fcomi
push
mov
push
cltd
mov
iret
mov
push
lahf
fcoms
mov
es
movsb
xor
ror
insb
mov
movsb
mov
sub
inc
adc
sbb
mov
adc
iret
loop
int
inc
shl
fsubrs
imul
mov
lahf
and
mov
lahf
xchg
jne
sbb
push
imul
jg
xor
mov
rcrb
shlb
outsb
dec
mov
imul
inc
ljmp
loopne
cmp
pop
pusha
adc
mov
xor
pop
cmp
dec
xchg
inc
cmp
loopne
mov
test
mov
xor
push
inc
jge
jb
add
cmpsb
xchg
adc
fisttpl
add
lret
dec
in
mov
dec
pop
jo
std
sbb
push
fnstenv
sbb
sbb
adc
stos
sti
mov
imul
sub
repnz
rol
insl
and
lcall
jbe
mov
and
inc
outsl
loope
push
sbb
out
dec
pop
iret
imul
sub
call
sub
sbb
mov
imul
mov
fisubrs
adc
dec
dec
outsb
xchg
push
test
cmp
pop
rorb
jnp
pop
mov
jb
and
stc
push
cli
cmp
clc
pop
cmc
dec
adc
sahf
or
sub
mov
paddq
repnz
push
aas
mov
aaa
and
or
in
dec
icebp
xor
mov
mov
jg
lods
xchg
out
adc
mov
test
or
and
push
shll
or
and
popf
mov
pop
add
sbb
icebp
stc
cmp
ret
cmp
loope
dec
adc
fstl
cmp
or
das
sbb
cmpl
push
daa
test
pop
iret
pop
shll
out
sub
popw
js
in
rcr
jl
cmp
jp,pt
xchg
dec
pop
inc
popa
popa
adc
mov
ret
enter
inc
mov
adc
jmp
push
daa
sbb
mull
call
es
push
mov
js
inc
ja
int
hlt
adc
xchg
adc
dec
pop
fst
bound
out
aam
mov
ja,pn
cmc
out
xlat
in
mov
psubusw
push
adc
das
add
inc
sbb
js
and
call
movsl
xlat
sub
ret
mov
lret
out
nop
mov
cmp
and
sbb
jp
xchg
subb
cld
jl
cmp
dec
adc
shl
scas
inc
cmp
adc
insb
xchg
mov
xchg
cmpsb
xor
imul
hlt
mov
insl
repz
sti
mov
js
cmp
in
dec
jne
test
ss
sub
popf
pusha
data16
mov
mov
pop
aas
sar
push
cli
punpcklbw
push
mov
fdivr
and
mov
test
inc
in
cltd
pop
xor
add
and
sbb
xchg
sub
jo
inc
movsb
cmc
popf
mov
jno
jbe
rclb
mov
hlt
and
adc
leave
or
push
daa
cmc
mov
je
cmp
iret
out
in
imul
popa
push
test
insb
lret
mov
and
cs
aad
addr16
pusha
xchg
in
xchg
in
hlt
xchg
icebp
jnp
push
fistl
cwtl
mov
mov
imul
sub
dec
ljmp
test
push
sub
orl
aad
mov
inc
repnz
das
sbbl
daa
pop
mov
pushf
xor
ja
inc
das
adc
test
jp
xchg
les
ljmp
fists
xchg
xchg
clc
push
dec
lock
push
sub
fcomps
push
into
jnp
sbb
mov
adc
mov
and
pop
pushf
in
pusha
loope
pusha
fs
sti
sbb
aam
cwtl
push
outsb
test
aam
insb
jnp
mov
pop
outsb
out
test
and
cltd
pop
pop
fdivrl
mov
xchg
adc
mov
in
push
cmpl
sbb
inc
stos
and
dec
mov
nop
movsb
pop
lock
add
cmpb
in
pop
bound
mov
or
or
push
sbb
and
test
in
cltd
inc
cmpsb
xor
xor
fsubs
movsb
mov
outsb
rol
outsb
hlt
in
inc
jl
fadds
ret
xchg
dec
mov
mov
push
fidivl
or
cwtl
mov
fidivs
ljmp
pusha
bound
arpl
nop
mov
pop
js
clc
push
sub
fdivr
dec
xchg
aas
mov
fcomip
inc
pop
cmp
mov
dec
mov
cmp
std
inc
inc
test
mov
push
inc
out
pop
addb
insb
bound
jae
xor
mov
fisubrs
imul
adc
aas
inc
repz
imul
fdivl
and
popa
jmp
dec
out
test
and
mov
or
outsb
int
sbb
pop
and
int3
mov
adc
mov
mov
sbb
imul
xchg
mov
xor
xor
and
fs
mov
inc
mov
aaa
testl
pop
adc
dec
lods
adc
mov
xlat
push
imul
out
sub
lds
lods
cmp
pop
jp
sub
cmp
pop
ret
pop
sbb
int3
sbb
add
mov
mov
fldcw
shll
inc
fcomi
adc
cmpsl
loope
leave
mov
ja
push
push
mov
mov
add
cmp
adc
pop
push
xor
sub
mov
es
jnp
sahf
xor
call
inc
cld
xchg
loope
and
les
sub
sti
or
sbb
and
mov
stc
fiadds
or
push
sbb
adc
repnz
ret
ja
shrb
pusha
mov
stos
rorb
sub
das
lock
mov
cltd
out
or
push
add
rcll
xchg
sti
jp
testl
pusha
add
outsb
adc
or
mov
jl
lea
cs
adc
ficoml
or
inc
and
dec
cs
and
mov
sbb
pusha
xchg
stos
lcall
gs
aaa
push
aam
fcomi
inc
mov
xor
mov
shrb
mov
adc
repnz
outsl
xor
or
sub
push
cmpsb
mov
push
and
stos
fidivs
stc
and
ljmp
repnz
or
mov
inc
fbstp
and
cmp
insl
mov
js
lahf
fcomip
dec
rcr
jne
stos
jg
subl
int
loope
leave
add
sub
mov
xor
mov
adc
stos
out
ljmp
lcall
fistl
incb
mov
inc
mov
icebp
lock
xchg
and
std
and
test
jle
mov
jbe
jmp
pop
mov
jb
cmc
jbe
adc
push
and
jne
jbe
sbb
mov
cs
fcmove
stc
cmp
fldenv
xor
and
add
popa
movsb
std
into
inc
adc
mov
fs
aad
dec
dec
xor
lods
jmp
into
gs
xchg
repnz
sbb
sub
or
xor
lcall
scas
jp
roll
lods
jle
daa
inc
mov
xchg
stos
xchg
imul
add
mov
aad
repz
jno
cld
mov
adc
xchg
jl
or
cmpsb
cs
lds
mov
lock
and
cli
pop
mov
or
das
push
clc
mov
loopne
loop
aad
dec
lds
sti
fnstcw
push
add
movsb
cwtl
mov
imulb
mov
add
push
or
mov
xor
or
lods
popf
pop
push
lahf
repnz
out
inc
mov
xor
xchg
gs
test
sbb
pop
mov
xchg
cli
fcomps
iret
xchg
divb
mov
add
xor
rclb
xor
sbb
les
cmpsl
add
add
in
cmpsb
int
inc
and
arpl
push
jns
orl
mov
mov
dec
pop
lahf
je
les
lcall
dec
adc
mov
ja
inc
les
cs
or
roll
insl
pop
add
jp
pop
aad
fidivs
into
not
inc
mov
xor
xchg
mov
or
dec
gs
shlb
xor
packssdw
shrl
in
stos
inc
and
repnz
aad
xor
test
leave
outsb
rclb
shlb
movl
dec
push
xchg
aas
ret
pop
xor
into
push
lods
outsb
cmp
jae
push
and
fistpll
loope
out
jecxz
adc
add
loopne
push
std
repnz
inc
jge
jecxz
jb
mov
ds
cmpsl
aam
or
outsb
pop
sub
push
adc
je
or
cmp
mov
pop
lds
jmp
repz
push
cld
push
lret
js
aad
stos
imul
out
insb
add
jb
push
mov
shrb
mov
call
adc
mov
xor
loope
int3
pushf
fisubrs
sti
repz
lock
lea
cmp
xor
icebp
mov
push
sbb
mov
aam
jmp
adc
jge
mov
sub
pushf
pop
push
les
shrb
lock
inc
xor
sub
cmp
inc
sti
ss
xchg
sahf
mov
stos
mov
mov
xchg
sub
and
pop
add
inc
mov
das
mov
inc
loopne
pushf
jne
jle
popa
add
in
xchg
mov
jbe
sarb
mov
aad
mov
mov
jecxz
leave
push
xchg
push
lahf
mov
das
sbb
aas
mov
add
out
mov
fiaddl
xor
inc
xor
daa
je
push
in
xor
and
mov
push
or
movb
sar
pusha
or
jmp
cmc
push
push
and
out
cltd
inc
in
ret
mov
pop
cmp
xchg
dec
mov
push
rorl
mov
pop
add
add
iret
cmp
add
mov
cmpb
arpl
inc
stos
insb
and
scas
mov
lods
frstor
jnp
dec
push
inc
inc
call
inc
push
jecxz
aam
in
push
fmuls
or
dec
js
cli
ds
into
push
adc
arpl
rcrl
int3
int
out
out
aas
jae
mov
mov
ret
data16
data16
mov
in
and
cmpsb
loope
outsb
or
push
inc
fstps
aas
push
jo
cmc
aad
jg
push
xchg
xchg
mov
dec
iret
int3
adc
sahf
add
xchg
fnsave
lock
pop
mov
dec
into
pushf
int3
gs
ljmp
mov
mov
inc
adc
pop
adcb
inc
fcoml
fs
clc
leave
movsl
and
pop
dec
cmp
imul
dec
shl
popl
orl
vmread
push
pop
subb
ret
jbe
pop
pop
ja
sub
cld
icebp
sbb
cmp
push
adc
jo
mov
mov
imul
jg
cmp
rcrb
pop
xor
out
inc
fidivl
sahf
idivl
jg
decb
mov
fcmove
dec
add
cmp
mov
dec
rorl
jns
adc
rcrb
pop
jbe
decb
cwtl
add
jmp
insb
movsbl
popl
add
xchg
pushf
mov
sub
inc
adc
jnp
and
pushf
repnz
push
roll
mov
out
jp
pop
mov
mov
xchg
mov
loop
mov
push
mov
mov
dec
cmp
xchg
call
ljmp
int3
dec
push
sub
daa
jmp
fistpll
addr16
ffree
out
xchg
enter
movsb
icebp
sbb
add
inc
jmp
push
jge
movsb
fldenv
push
sarl
and
mulb
push
sub
rclb
lock
push
ljmp
mov
xchg
insb
test
ds
cmc
cmp
adc
sub
sub
mov
jp
dec
push
push
mov
jb
ds
mov
aam
and
sub
mov
jns
inc
pop
mov
mov
xor
xor
sbb
aaa
leave
and
push
dec
jnp
in
sbb
popf
push
sbb
in
add
scas
mov
out
mov
dec
jb
mov
ljmp
lods
push
dec
out
mov
jnp
inc
cltd
call
xchg
mov
ljmp
dec
xchg
jo
mov
sbb
arpl
pop
repnz
rolb
pop
push
mov
aam
xchg
push
test
jge
jmp
and
in
inc
xchg
or
fimull
dec
std
bound
sbb
mov
mov
loop
xchg
ret
cmp
daa
push
inc
sbb
stc
dec
mov
cmpb
dec
repz
lods
fbstp
stos
outsb
mov
rcrb
xchg
and
inc
xor
and
leave
leave
jno
movsb
xchg
and
les
adc
pop
xchg
test
jmp
mov
or
lods
jb
das
sbbl
push
pop
cmp
mov
shr
adc
ja
and
xchg
push
call
dec
cmpsl
xchg
mov
fists
arpl
xchg
add
inc
mov
cmpsl
sub
pushf
add
iret
iret
adc
arpl
sbb
inc
pop
daa
callw
mov
js
mov
inc
filds
adc
loope
addr16
xor
xchg
pop
jo
fs
add
pop
dec
jecxz
jo
mov
test
inc
outsl
xchg
and
xchg
and
aas
sub
inc
cld
cld
insb
js
mov
sub
dec
mov
insb
scas
mov
cmpsb
mov
and
loopne
inc
add
icebp
inc
ds
sub
fnstenv
push
ja
mov
in
lret
insl
dec
and
add
pop
inc
dec
push
cltd
rorl
adc
push
popa
aad
mov
or
cmp
cld
lods
movsb
push
repnz
mov
xchg
sub
jb
pop
xchg
test
cli
sbb
cmp
pop
or
outsb
hlt
or
mov
mov
inc
xchg
or
stos
aad
repnz
jmp
dec
lea
dec
mov
xor
sub
dec
lret
mov
mov
adc
aaa
sub
mov
dec
shll
or
imul
in
lods
xor
aam
push
pusha
jns
mov
data16
pop
cli
call
rcl
jae
outsb
sub
fs
xor
lret
xchg
mov
out
call
fldcw
mov
lods
loope
xor
pop
pop
test
imul
es
leave
cmp
jmp
fs
mov
jae
sbbb
aad
mov
mov
cmp
insl
cli
enter
sub
sahf
dec
inc
adc
andb
mov
mov
loop
dec
faddl
stos
das
add
aad
fimull
pcmpgtb
jb
dec
xchg
loope
lcall
repnz
rcl
inc
addr16
push
out
cmp
or
jns
sbb
pop
pop
outsb
pop
mov
es
jne,pn
dec
pop
int3
lcall
int
xchg
fsubrl
rolb
push
imul
fucomp
pop
sub
stc
mov
test
iret
push
add
xlat
mov
and
jecxz
adc
insb
nop
inc
int
loope
push
adc
stos
sar
mov
fildll
jns
inc
sbb
aas
icebp
xchg
rorl
mov
pop
cmpsb
xchg
xchg
cwtl
test
xchg
xor
call
das
test
cmp
xor
and
imul
sub
ja
sti
sahf
push
pusha
jg
push
jle
mov
mov
cmovl
sub
movsb
xor
mov
gs
dec
fld
inc
push
mov
dec
aaa
in
clc
mov
add
into
jns
push
je
mov
test
and
xlat
testl
outsb
outsb
mov
fadd
call
sahf
add
icebp
outsb
sbb
fisubrl
mov
pop
xchg
cmovle
jo
cmp
pop
add
rol
jmp
mov
sub
cs
jo
dec
mov
ret
pop
bound
jg
xlat
cmp
aaa
ljmp
pop
add
pop
std
pusha
pusha
ljmp
ss
mov
adc
negb
mov
sar
mov
xchg
fdivl
stos
ret
sbb
inc
lret
lret
mov
mov
dec
les
hlt
push
std
es
mov
cmpsl
rolb
lahf
int3
push
push
or
pop
loopne
in
dec
jne
mov
das
inc
rcll
jno
push
pop
divb
out
sub
adc
cmp
ret
jge
lea
test
movsb
mov
sbb
xchg
dec
test
jmp
inc
mov
dec
insl
cli
mov
lahf
add
mov
cmpsl
lcall
ds
push
cmpsl
addl
sarl
xchg
pusha
sub
jp
iret
cmp
xor
sub
into
out
outsb
adc
mov
mov
sub
xor
fcoms
test
ficoml
gs
icebp
sbb
aas
mov
cmpsb
cmpl
leave
inc
fldenv
mov
stos
mov
fdivl
in
js
mov
imul
cmp
mov
and
mov
push
int3
jnp
cld
pop
inc
mov
sub
mov
mov
arpl
cli
cli
je
adc
scas
fmul
in
dec
xchg
fcoml
jmp
imul
cmpb
pusha
mov
cmp
shl
jl
and
pop
pop
pop
sbb
sub
imul
in
insb
push
in
dec
outsl
pop
adc
insl
jne,pt
popa
ret
push
push
pushf
divb
mov
int
xlat
cli
jmp
insl
jne
fildll
mov
pop
add
fwait
lcall
arpl
push
dec
adc
shlb
jl
jns
ja
mov
jbe
cli
mov
imul
rolb
cmp
push
ss
mov
add
imul
xor
push
dec
sti
stos
mul
cmpsb
ret
and
cmp
and
adc
mov
lcall
ret
sbb
inc
lret
lret
jg
sbb
dec
mov
aas
cli
push
stc
insl
jnp
hlt
ret
mov
test
rolb
add
mov
and
shll
insl
push
test
jne
push
jg
fs
shlb
sub
inc
inc
xchg
mov
bswap
or
sbb
push
mov
lds
or
mov
mov
dec
clc
or
pusha
aad
jnp
push
aad
pop
lds
popf
imul
nop
jo
mov
xor
xlat
in
cli
movsl
cmp
js
pop
ja
repz
push
pop
cmc
mov
imul
lods
pop
iret
jno
cmp
xchg
pop
aad
rorl
out
out
jno
xchg
or
pop
jle
ds
pop
cmpl
es
or
pop
repnz
lods
jp
dec
and
nop
jmp
inc
cmc
cmovle
mov
pop
xchg
mov
shrb
pmaxub
in
xor
jae
shrl
clc
mov
loope
adc
div
push
pop
push
push
mov
ljmp
es
shll
popf
mov
cmpsl
scas
pop
lods
repnz
rorl
fisubrs
sbb
sub
adc
pop
push
and
adc
lods
mov
imul
mov
in
jle
dec
mov
sbb
daa
loopne
les
mov
movl
push
or
popf
pop
jae
repnz
mov
or
xchg
imul
dec
lds
fdivrs
xor
sarl
mov
pusha
add
out
shrb
stos
add
loope
xchg
xor
test
std
mov
add
dec
jae
aaa
lock
mov
ljmp
xchg
sbb
mov
inc
adcl
pop
jnp
loop
xchg
loope
imul
xor
adc
shll
shll
jp,pn
dec
aaa
mov
jecxz
rcl
sahf
popf
jmp
add
lods
cmp
or
and
xor
jmp
ret
js
jge
mov
jae
xlat
cmp
insl
mov
jb
cmp
xchg
mov
add
jb
test
repnz
repz
stos
push
fs
push
mov
adc
movsb
pop
sbb
test
ss
cli
fldl
sub
jb
or
mov
mov
mov
or
jb
sub
inc
pop
sarl
and
sti
sub
outsb
ret
movsl
je
fmull
mov
rorl
bound
lock
cmp
data16
xchg
cmp
mov
xor
jg
mov
mov
push
movsl
xor
push
mov
fs
loope
cwtl
push
rcll
hlt
das
leave
xchg
lods
mov
sti
push
jl
push
mov
sbb
ja
sbb
sbb
pop
std
lock
loop
push
sbb
inc
in
cmp
mov
or
or
mov
fdivl
lea
ret
stos
scas
mov
push
js
ja
es
dec
pushf
dec
xchg
sahf
sbb
inc
cmpsl
jno
incl
push
es
scas
cmp
ror
ja
push
cwtl
push
or
into
test
imul
lds
cmpsl
push
ds
inc
xor
mov
jge
imul
adc
ds
std
aas
fisubrs
int3
add
aam
loop
dec
lds
in
aas
lret
mov
inc
cltd
mov
shll
fadds
push
xchg
ds
adc
cmp
cmp
int3
shll
cmpl
mov
and
pop
mov
out
fidivs
sub
insl
jle
sub
cmp
dec
ds
jmp
jmp
out
jbe
jnp
mov
imul
pop
das
je
loopne
jl
sarl
mov
cmp
inc
inc
jns
xchg
lds
ja
mov
int3
mov
fbstp
je
sbbb
movsb
sub
sbb
int3
jecxz
pop
inc
flds
or
dec
fistpll
test
lds
mov
sbb
mov
xor
stc
jle
xchg
cmp
jge
push
cmpsl
pop
mov
xchg
shlb
out
ror
in
jae
inc
pop
insl
loope
shlb
ljmp
adc
push
or
jae
mov
add
and
adc
pop
cs
jge
out
dec
push
adc
add
popa
adc
push
fadds
lret
lret
push
sbb
mov
jg
js
leave
jno
fs
and
xor
xor
lcall
sub
inc
out
xor
xor
push
lahf
cmp
nop
adc
mov
dec
dec
pop
fistpll
adc
fwait
jb
and
je
xor
pop
cs
ljmp
and
lret
popf
cmp
xor
jbe
mov
sahf
cmpsl
addb
repz
je
cmpsl
lods
push
sub
cltd
std
xor
outsb
mov
cmp
mov
pop
pop
jno
xor
enter
mov
mov
sub
or
cmp
cmpsl
les
cmp
int3
fldt
add
test
pop
mov
jge
add
push
cmp
ja
cmp
fldt
fcomps
stos
test
mov
pop
mov
jmp
shll
jbe
xor
add
sub
jg
fldt
sahf
and
popf
or
decl
sbb
in
push
xchg
aad
sbb
sbb
push
jl
push
jns
jae
arpl
data16
icebp
dec
enter
clc
mov
cli
pop
mov
jl
repnz
fldl
mov
movsl
in
mov
outsl
sub
icebp
repz
jae
nop
jns
sbb
sbb
mov
mov
fsubr
pop
and
jb
sub
imul
out
add
movsl
jno
loopne
add
inc
and
mov
sbb
cmp
pop
decb
mov
cwtl
fidivrl
shlb
test
mov
push
scas
adc
mov
pop
and
clc
push
inc
aad
scas
repnz
cwtl
sbb
add
adc
fmuls
jae
pop
cmp
out
or
push
scas
or
in
aam
mov
popa
jl
fmull
xor
pop
out
mov
mov
push
adc
sahf
cmpsl
and
jne
pop
ret
inc
cmpsl
mov
adc
xchg
les
bound
mov
shrl
and
pop
mov
cmp
pop
stc
daa
dec
and
lods
add
popf
dec
xchg
loopne
push
xchg
dec
xchg
data16
ds
cmpsl
shl
loopne
mov
sbb
xor
test
rorb
movsl
and
jp
push
in
mov
test
rclb
lock
das
and
push
xchg
std
in
mov
std
mov
decl
cli
imul
mov
bound
data16
into
pushl
shlb
lret
or
repnz
imul
or
xor
cs
mov
jmp
pop
inc
movsb
mov
sub
pop
cmp
dec
rcrl
fistpl
stc
fdivrs
pop
leave
cmpsw
sub
movsb
mov
loopne
lods
lock
in
cwtl
ret
insl
and
xchg
fnsave
xchg
lret
in
divl
and
push
sbb
xor
ljmp
lock
gs
dec
mov
shl
in
pop
xchg
and
mov
shll
std
fs
arpl
hlt
mov
inc
insb
pop
jle
jecxz
fnstsw
repz
pop
mov
repnz
cld
ret
cld
sbbb
jle
and
dec
aas
xchg
mov
test
sub
aaa
mov
adc
fmull
mov
xchg
dec
and
inc
push
xor
int
add
andl
test
xlat
lea
jp
sub
rorb
fadds
rorl
inc
leave
rcrl
mov
fwait
add
xor
jl
cs
scas
jo
shl
sbb
jae
scas
mov
jns
out
mov
push
repz
inc
lods
aas
sahf
test
dec
xor
pop
xchg
test
fdivrl
push
aas
fs
cld
jnp
aad
dec
sbb
jno
dec
mov
pop
sub
mov
dec
push
pop
insl
pop
add
loope
test
pop
repz
lcall
adc
fwait
in
js
dec
rorb
mov
xchg
lret
into
lds
sub
loop
push
cmpsl
lock
fstl
stos
roll
mov
iret
pusha
push
xchg
ret
inc
or
lcall
adc
icebp
jge
jmp
adc
jmp
in
jecxz
pop
ss
xchg
ds
jno
lea
test
mov
and
and
push
push
cmp
cmpsl
jbe
in
jle
jl
pop
lods
fidivl
dec
push
push
cmp
sbb
idivb
cmpb
sahf
mov
sub
dec
or
cmp
inc
adc
adc
cld
xor
fsts
adc
leave
mov
adc
xchg
rclb
out
xchg
sub
cmpsl
clc
cmp
xchg
nop
jmp
out
pop
aad
jne
mov
leave
rclb
add
lahf
js
or
jae
mov
test
enter
push
or
jnp
in
mov
cmp
sarb
pop
xor
cmc
cmp
mov
sti
cwtl
or
fisttpll
repnz
lods
inc
fiaddl
or
sub
pushf
rclb
imul
push
sbb
nop
inc
mov
movsl
je
xchg
lret
mov
xchg
push
mov
ficompl
gs
aad
pop
inc
fstps
lret
mov
gs
lea
and
movsb
lcall
dec
in
dec
sbb
cwtl
sub
lahf
sbb
push
xchg
sub
dec
jnp
xchg
mov
mov
mov
xchg
inc
mov
insb
movsl
push
jns
mov
inc
xchg
sub
jns
cmp
addl
and
adc
popa
in
xchg
ja
adc
out
mov
mov
cmc
data16
fisubrs
or
mov
sbb
ret
imul
push
mov
shrb
cmp
outsb
cmp
ja
stos
lahf
push
xor
sub
loop
fucomi
mov
out
jne
in
jns
and
add
pop
lods
xchg
lcall
call
std
mov
in
mov
add
daa
xchg
jecxz
gs
xor
mov
dec
dec
sub
sbb
ret
xchg
sub
decl
adc
ss
mov
into
shll
ret
xlat
and
ret
mov
mov
mov
lea
in
push
xor
pop
stc
fistpll
push
xchg
or
rclb
outsb
adcb
js
inc
jg
outsb
pop
out
imul
out
mov
mov
lcall
xorl
dec
in
loopne
aad
jle
sti
or
xchg
dec
xchg
sti
or
mov
scas
or
push
pop
into
lret
xor
add
cli
cmpsl
hlt
mov
movsl
sbb
les
bound
jge
int3
in
inc
fbstp
and
leave
ljmp
push
push
iret
fstpt
lahf
mov
mov
es
xchg
mov
inc
mov
dec
mov
mov
test
fsubs
fwait
or
xchg
mov
call
gs
inc
fistps
jp
mov
jge
mov
loop
cmp
cmc
pop
cli
rcr
fnstsw
adcb
std
cmp
ret
mov
fidivl
jnp
add
shlb
aam
pop
aad
pop
ja
stos
mov
popf
jb
and
xchg
pushf
push
jle
pop
cmp
pop
mov
mov
mov
repnz
xchg
mov
aad
lea
dec
xchg
pushf
and
lods
stos
jge
inc
fadd
inc
hlt
jne
push
movsb
movsb
xor
cwtl
les
jmp
jns
pop
stos
mov
orl
out
dec
xor
mov
gs
clc
ds
jl
or
testl
cmpsl
adc
and
std
mov
ljmp
into
int
mov
test
shrb
aas
jnp
fisubrl
mov
pusha
test
enter
mov
popf
pop
cld
adc
in
or
stos
jo
push
les
sub
jg
int
jno
fists
test
add
xchg
xorb
lret
xchg
pop
sbb
neg
sbb
dec
adc
popa
xchg
rcrb
lds
out
aaa
in
ljmp
repz
lcall
sbb
mov
pusha
or
mov
or
movsl
adc
mov
cmp
add
pop
call
pop
filds
jbe
jmp
cmp
insb
pop
sbb
jge
xor
sub
lcall
mov
lret
loopne
xor
xchg
popf
fldl
mov
jmp
les
ret
out
pop
fnstcw
mov
jmp
sahf
jns
scas
jne
push
lds
xor
add
sbb
icebp
or
ret
pop
leave
push
fcoms
fnsave
mov
dec
fcompl
or
jl
cmpsl
cmp
add
fisttpll
jbe
mov
cmpsb
test
or
add
and
test
push
sbb
and
stc
push
lea
loop
lahf
repz
jp
xor
pop
ret
clc
cmc
adc
je
movsb
sarl
adc
sbb
adc
pop
ret
outsl
dec
or
mov
cmp
jbe
hlt
test
cwtl
mov
mov
mov
hlt
out
push
mov
jo
popf
js
cltd
jmp
dec
sbb
pop
dec
outsb
ret
mov
xor
add
cmpsl
add
imul
ja
sbb
adc
or
scas
aad
mov
mov
sub
adc
mov
cmpl
cmp
inc
push
cmp
mov
sbb
cmp
xchg
out
ss
shrl
arpl
xor
sbb
das
fdivr
lret
rclb
rsqrtps
push
and
sbb
shr
inc
repz
xchg
push
mov
or
push
xchg
insl
inc
xchg
mov
xor
adc
mov
clc
rcrl
das
xor
loope
adc
lea
jge
xchg
add
std
shlb
loopne
cmp
push
xchg
and
inc
movsl
sbb
push
xchg
mov
fistpll
cmc
dec
push
jg
js
ds
pop
lea
or
mov
or
or
lcall
xor
fdivrl
daa
decb
sbb
fs
jno
rcrb
jl
sbb
ret
cmp
sub
filds
ja
push
mov
leave
fiadds
clc
in
cmp
gs
vmovq
les
mov
add
mov
cmp
mov
mov
jo
sbb
and
sti
test
push
call
or
sbb
pop
in
push
add
or
and
sti
sub
push
imul
out
xor
call
mov
dec
sbb
pop
xchg
push
cmpsl
push
xchg
out
cmp
adc
stos
adc
lods
rcll
inc
enter
repnz
repnz
neg
dec
mov
fmull
fs
adc
mov
mov
enter
mov
jl
mov
subb
xchg
pop
or
jbe
pop
mov
adc
pushf
or
lret
mov
inc
xchg
pushf
out
lock
push
adc
pop
dec
fs
lcall
adc
mov
sbb
call
aad
jns
add
js,pt
arpl
mov
jns
testb
mov
ror
adc
mov
fsub
js
jne
mov
js
cmp
mov
test
gs
out
rcrl
dec
dec
xchg
push
push
pushf
pop
jl
push
adc
aam
lods
mov
insb
stos
and
dec
pusha
mov
and
leave
lcall
nop
ljmp
ret
fbld
push
in
popf
imul
push
cwtl
xchg
dec
xor
div
push
mov
xchg
xchg
add
lock
dec
loope
sar
cltd
mov
arpl
mov
mov
daa
and
and
fisttps
mov
sbbb
clc
cmp
sub
popf
mov
iret
push
fucomp
lret
sub
jl
aas
leave
insb
insb
sahf
fildl
xor
repz
jo,pn
call
push
or
nop
stos
add
rclb
ss
jl
jge
mov
fistpl
sahf
lret
iret
nop
inc
and
pop
xor
mov
xchg
adc
push
jle
jb
inc
adc
cwtl
cmp
insl
in
inc
aad
mov
xchg
icebp
roll
fwait
and
addl
jb
aad
gs
mov
test
ret
bswap
icebp
fimull
sbb
dec
test
ss
loope
shrl
jp
mov
mov
lods
jb
adc
dec
and
rcll
ss
js
jp
dec
pop
int3
loope
data16
mov
roll
lahf
adc
sub
idiv
out
mov
fs
stos
scas
cmpsb
jbe
mov
adc
or
inc
nop
and
sub
jecxz
das
push
popf
movsl
pushf
cmp
fnstenv
xor
cwtl
hlt
xchg
mov
dec
xor
loope
hlt
push
jb
mov
jne
gs
rorl
mov
fsub
push
mov
call
dec
fwait
sbb
push
dec
dec
loop
sbb
int3
fcomps
aad
inc
cltd
fimull
mov
push
add
bound
sbb
imul
or
fimuls
mov
ffree
jl
or
js
push
divb
aad
cmc
mov
out
aaa
sub
je
ljmp
imul
mov
jno
aas
inc
cmp
movsl
xchg
fs
push
repz
popf
mov
sub
outsl
sbb
dec
push
mov
mov
cmp
mov
shrb
cmp
sbb
mov
sub
add
push
loopne
or
loop
push
shl
loopne
lcall
fstl
sbb
push
adc
push
xor
lea
clc
out
lods
xchg
cmp
mov
in
stc
into
sub
out
push
cmp
add
mov
jae
xchg
fldcw
jecxz
sub
or
movsb
lea
das
push
hlt
fsubr
test
clc
mov
repnz
mov
aas
out
cltd
outsl
clc
cmpsb
je
repz
call
dec
jl
pop
sbb
scas
mov
test
push
cmpsb
loope
cltd
clc
xor
mov
adc
mov
movsb
dec
ss
inc
mov
fwait
test
mov
xchg
xlat
aaa
loope
subl
mov
popf
hlt
out
jnp
add
scas
inc
xchg
mov
mov
jle
push
sbb
rclb
mov
jb
sub
cltd
xchg
inc
lahf
cmp
mov
daa
dec
jb
sbb
les
add
es
mov
pop
and
out
adc
xlat
xor
popf
cltd
int
popf
movsb
push
outsl
adc
push
and
xor
repnz
jnp
inc
mov
mov
mov
dec
mov
pusha
xor
adc
incb
cmpsb
into
sub
mov
fildl
xchg
das
sub
movsl
jo
fsubrl
in
movsl
sub
insb
jg
jne
imul
iret
push
fidivl
jg
lret
cwtl
xchg
clc
mov
mov
cwtl
xor
shll
pop
pop
or
mov
int
in
cltd
jnp
inc
dec
bound
pop
push
test
mov
dec
pop
mull
mov
or
cmp
push
dec
fldenv
roll
and
incb
pop
xchg
enter
lods
popa
insb
xchg
stos
or
cmp
dec
ds
inc
xchg
insl
aam
ds
or
scas
adc
pusha
sub
out
push
bound
jge
dec
call
dec
enter
ljmp
repnz
add
ret
repnz
pop
jnp
into
popf
jg
cs
stos
pop
fcompl
clc
lds
pushf
sahf
imul
add
dec
arpl
lock
lods
scas
jnp
sub
fwait
sbb
ja
sub
jbe
addr16
pop
add
and
pop
sti
sbb
pop
ret
inc
insb
dec
lods
lcall
cmp
dec
arpl
jnp
insb
in
stc
std
mov
in
sub
sub
push
lods
cmp
xchg
fadd
mov
into
out
jno
into
cmp
int
test
vmovlpd
mov
fwait
daa
sub
xor
sbb
repnz
roll
je
loope
mov
lcall
rol
and
nop
or
jno
repz
jb
mov
xor
test
pop
jae
push
xor
int
pusha
ret
add
push
sub
and
stc
lea
outsl
jb
xor
mov
mov
out
or
leave
or
push
push
lret
or
add
xor
lock
cld
push
mov
pop
ret
sbb
jmp
pusha
ds
push
lea
lock
div
and
push
and
lods
out
cmp
outsl
loop
out
icebp
inc
stc
femms
pop
lret
movsl
push
mov
or
add
sti
test
popa
mov
mov
shll
lods
insb
or
inc
jl
outsl
bswap
loope
pop
notb
mov
cmp
aaa
popa
adc
lods
mov
or
ret
dec
adc
dec
nop
mov
mov
cld
btr
and
add
es
mov
sbb
icebp
fwait
pusha
jmp
add
or
xchg
cmc
aaa
stos
jo
adc
lret
scas
cmp
pushf
fsts
dec
push
pop
xchg
xor
fildll
pop
mov
loope
pusha
cmpsl
fsubs
lahf
insl
adc
inc
jbe
mov
pop
lahf
mov
ret
loope
push
lahf
jae
inc
aas
rolb
fcoml
idivl
and
cvttps2pi
mov
mov
jmp
dec
insl
mov
mov
push
roll
push
push
push
sub
loop
xorl
or
sbb
orb
push
or
ret
add
dec
jle
pop
rcl
orb
jnp
ficompl
imul
xchg
cld
fs
mov
es
lds
test
push
ret
pop
mov
xor
mov
xchg
mov
add
inc
scas
repnz
aad
and
cmp
cmp
stc
hlt
test
mov
cmp
adc
xor
lahf
lds
mov
pop
loopne
js
cli
push
cmp
pop
dec
das
test
dec
aam
push
dec
call
jecxz
push
jge
ljmp
mov
xchg
int3
jecxz
jbe
out
loopne
fidivrs
js
daa
pop
fildl
fimuls
push
ret
jb
jge
imul
push
xchg
mov
mov
not
jmp
sti
lods
cltd
pop
mov
ljmp
push
sbb
sbb
clc
sbb
fstpt
mov
mov
lret
dec
mov
bound
andb
jb
mov
das
std
fidivrl
or
popf
stos
fs
cmp
stos
xor
dec
adc
popf
in
in
lret
lcall
sti
mov
lahf
mov
pushf
or
or
jp
aad
cli
cmp
enter
addr16
shrl
es
dec
arpl
arpl
inc
jmp
lea
xor
adc
mov
inc
mov
int
fdivrl
out
outsb
test
stos
bnd
hlt
or
ret
jecxz
inc
lods
test
dec
sbb
dec
fbstp
gs
or
es
push
xor
sub
arpl
push
inc
call
jge
mov
add
sbb
lock
cwtl
xor
or
mov
lret
aas
out
dec
ret
pop
ret
adc
sub
lods
push
bound
out
adc
inc
cmp
ret
xchg
pop
pop
inc
cltd
insb
dec
dec
adc
pop
roll
rcll
xor
cmpsb
sub
gs
shll
test
inc
xor
dec
int
lea
insb
add
mulb
mov
and
xchg
sbb
jnp
mov
inc
fs
fdiv
xchg
cld
jge
cmp
mov
das
fsubrs
jnp
test
sbb
and
sti
mov
or
fisubl
lods
dec
pop
popa
mov
adc
rcrb
je
icebp
push
xlat
lret
loopne
les
inc
sbb
mov
stos
popa
dec
sbbl
das
and
mov
addr16
dec
mov
jge
jmp
test
adc
push
xor
sbb
into
test
fildll
and
mov
push
mov
push
xchg
inc
mov
inc
pop
sbb
jo
adc
ret
add
rcll
fdivrs
out
ss
loope
scas
arpl
lret
sub
sti
inc
or
and
dec
xchg
push
jp
push
mov
daa
lahf
inc
xlat
inc
dec
xor
movsl
repnz
jb
mov
push
popa
das
ret
push
or
pop
xor
pop
subb
sub
out
in
test
sub
mov
xor
stos
jno
pop
xor
sub
bound
lahf
pop
add
sbb
jl
or
fisubl
mov
or
push
xchg
test
add
cmp
xor
aam
test
cltd
in
hlt
lock
clc
imul
xchg
cmp
iret
adc
or
dec
mov
fadds
adc
mov
clc
out
jmp
xchg
xor
xchg
lea
jl
and
jmp
xchg
cmp
call
add
mov
jge
pop
cmpsl
mov
cs
sub
sbb
inc
xor
mov
dec
cmc
adc
int3
adc
fucom
imul
jb
mov
or
mov
and
adc
fistpll
or
adc
pop
push
dec
movsb
jmp
dec
enter
ret
andl
xchg
lods
sub
leave
addr16
into
ds
sub
sti
adc
arpl
jbe
add
movsl
leave
mov
sbb
aam
repnz
sub
enter
popf
cs
cltd
cli
mov
pop
repz
aam
iret
les
dec
jp
push
loope
push
pop
mov
cwtl
lods
ljmp
jecxz
adc
push
clc
push
arpl
mov
add
inc
andb
lods
push
sbb
or
out
arpl
pop
xchg
jno
cmp
sar
cmp
dec
dec
and
cmp
test
orl
mov
mov
shlb
stos
xor
or
in
pop
fsub
sbb
enter
push
pop
sti
push
pusha
ret
mov
jg
nop
es
cmpsb
push
fbstp
hlt
jb
imull
and
out
into
daa
into
push
xchg
loope
adc
out
sbb
or
xchg
inc
push
repz
inc
inc
pop
pop
leave
pop
mul
imull
aas
cs
not
mov
cli
cs
lcall
pop
out
gs
loope
in
adc
push
sbb
lea
push
test
insl
sub
and
or
cld
cmc
mov
les
rolb
pop
aam
loope
mulb
je
jbe
js
xchg
xchg
nop
imul
sbb
mov
xchg
data16
inc
lock
incb
out
shlb
nop
scas
popf
mov
cmpsl
dec
divl
mov
ja
push
clc
jp
out
and
fdivrs
dec
mov
addb
iret
sbb
mov
sbb
mov
xchg
and
sarb
sahf
fnstsw
loop
mov
pusha
shlb
dec
push
sub
pop
fmull
arpl
cmc
xchg
push
mov
clc
insl
je
scas
test
jo
pop
xor
adc
jle
mov
ljmp
fstpl
icebp
pushf
pop
les
pop
cmp
imul
enter
inc
xchg
inc
mov
cs
movsb
mov
cmp
in
fcomip
ljmp
dec
jo
jecxz
mov
push
xchg
pop
ret
insl
loop
cmp
push
lcall
pop
fwait
rclb
inc
arpl
fldl
pop
cmp
push
mov
int3
and
and
dec
outsl
inc
adc
push
mov
sbb
sahf
cmp
in
mov
inc
movsb
aam
mov
mov
add
stc
loope
add
xor
imul
out
imul
pop
mov
fs
je
jg
cmp
test
fidivs
lret
xor
adc
stc
jns
sbb
mov
xchg
pop
jns
scas
or
jl
mov
stos
jne
xchg
xor
xor
pop
jnp
scas
jp
cmp
or
mov
dec
sarb
or
pop
inc
repz
negl
lret
loope
pop
mov
int
movsl
nop
icebp
ret
daa
cmc
mov
sbb
rcrb
mov
or
mov
inc
xchg
ljmp
add
outsb
or
pushl
jbe
cmc
pop
bound
les
pop
scas
mov
jecxz
push
cmpl
pop
mov
ret
xor
adc
insl
pop
scas
aaa
dec
out
ret
mov
jecxz
inc
cmpsl
pop
add
dec
and
push
push
loop
js
cmpsb
iret
push
lock
pop
xor
or
cmpsl
pop
pop
flds
insl
sub
mov
dec
mov
aad
lcall
and
icebp
popl
aas
das
sub
mov
mov
idiv
xor
push
push
jecxz
lock
xchg
jbe
hlt
mov
aas
cmp
cs
push
xchg
dec
cmp
fwait
hlt
inc
leave
jbe
pop
lods
lea
lcall
cmp
shlb
jl
fcoms
out
adc
test
cmpsl
or
cmc
inc
mov
xor
mov
pop
mov
or
jl
sbb
mov
scas
cmp
out
jp
sbb
arpl
and
dec
jl
jecxz
scas
loop
jo
imul
mov
adc
imull
je
jle
jb
push
xor
cltd
and
and
jl
mov
mov
aas
jl
pop
jecxz
cmp
sbb
pop
daa
cmp
mov
push
pushf
dec
orl
in
adc
or
xor
mov
stos
js
inc
fmull
dec
lret
gs
arpl
das
cmc
pushf
mov
cmp
movsb
stos
cmpsl
add
pop
add
pop
push
in
push
pop
in
xchg
mov
addl
movsl
pop
lcall
icebp
fmuls
lock
inc
decb
inc
jnp
push
add
inc
mov
fistpl
aas
mov
mov
jbe
adc
les
xchg
in
sbb
sahf
loopne
push
mov
scas
pushf
movsl
les
not
popf
lods
pop
movsl
push
int3
mov
jge
push
sub
mov
addl
mov
loopne
cwtl
adc
loope
xchg
jl
ss
jle
mov
sub
jne
repnz
mov
cld
das
in
fdivrl
daa
xlat
add
push
sub
cltd
repz
xchg
dec
mov
arpl
iret
std
mov
xor
int
sub
and
push
jecxz
iret
mov
pop
mov
movsl
mov
mov
fnsave
stos
fnstcw
ficomps
sbb
pop
pop
jo
add
add
pushf
iret
jmp
mov
pushf
ja
mov
mov
enter
jno
sub
pop
and
cmp
inc
adc
xchg
nop
outsb
push
testl
test
test
dec
pop
pop
sub
ja
xlat
iret
jp
mov
or
xor
jp
popf
je
jnp
pop
repz
pop
jg
xorb
add
sub
enter
fldl
cmp
xchg
aad
inc
fildl
add
sub
lahf
scas
inc
roll
dec
mov
clc
and
loopne
cwtl
pop
mov
push
xlat
push
sahf
xchg
add
and
lods
fdiv
in
pop
stos
pop
seta
xor
jg
repnz
lods
insb
pop
subb
imulb
popf
test
lods
ja
addr16
and
gs
sti
jmp
bound
push
cltd
iret
out
das
jo
out
jno
jnp
mov
test
rcll
push
pop
or
cld
or
in
icebp
mov
sub
lret
push
sub
inc
mov
jnp
jg
sbb
mov
jmp
outsb
lock
rorl
push
adc
popf
or
mov
lcall
mov
add
add
sub
subl
enter
mov
lds
mov
xor
iret
dec
arpl
sbb
dec
fdivr
mov
mov
xchg
jne
notl
mov
daa
push
mov
sti
into
or
hlt
loopne
pop
ret
andb
mov
aad
lds
into
xor
push
fidivl
lahf
cmp
cld
pushf
sahf
bound
in
addl
add
enter
xor
inc
loop
int
repz
lret
push
jmp
aas
mov
pushf
out
pop
scas
mov
aad
sub
and
inc
push
jge
xchg
pop
cmpsl
push
lret
mov
loopne
mov
mov
add
adc
outsl
addr16
rol
pop
push
mov
insl
adc
into
shlb
mov
loop
mov
into
lds
mov
push
cli
in
rclb
jle
fildl
push
pop
aad
mov
pop
cmp
fbstp
push
int3
cmp
fimull
jmp
or
jns
out
test
push
repz
lret
movsl
push
arpl
cltd
xor
inc
loopne
and
add
stos
aas
jge
xlat
pop
lret
inc
xchg
and
insl
je
pop
mov
in
nop
jmp
lods
shll
scas
mov
into
aam
dec
fidivs
push
shlb
xchg
in
test
test
add
lods
stos
mov
pop
inc
clc
insl
scas
and
pop
push
xchg
lods
ja
pop
xchg
cs
mov
pop
lock
and
lahf
test
cltd
es
hlt
mov
mov
and
loopne
and
movsl
add
push
jmp
mov
mov
popf
in
jecxz
scas
mov
lods
les
call
push
fdivs
in
std
push
add
pop
outsl
sub
lcall
enter
mov
add
xchg
jae
cmc
cltd
mov
lahf
fnstcw
push
mov
push
xchg
mov
and
mov
xchg
lds
xchg
adc
lock
in
sbb
sbb
push
out
sub
loope
pop
push
out
push
and
mov
dec
xor
add
jge
add
repz
vmread
enter
push
ret
xor
iret
jne
popa
in
push
jb
fidivl
pop
mov
jp
mov
mov
test
out
xchg
out
aaa
test
mov
jp
icebp
jmp
sbb
mov
mov
sbb
mov
sub
mov
gs
sbb
clc
pop
in
setge
jl
clc
fucomip
lcall
rcrb
xchg
and
or
cmpsl
and
jbe
adc
push
push
xchg
sub
inc
data16
mov
addr16
mov
mov
cmp
cmpsl
xor
and
mov
ja
mov
or
enter
into
ja
cmp
outsl
std
sub
xchg
cmp
mov
mull
jns
cmc
in
push
jne
shlb
jmp
test
ret
sub
lcall
jbe
in
loop
push
inc
mov
xor
push
into
mov
jns
xorb
mov
loopne
xchg
punpckhdq
bound
xchg
pop
loope
outsl
decl
mov
or
mov
test
pop
xor
push
jle
inc
jno
arpl
das
add
hlt
in
enter
pop
rol
xchg
pop
hlt
call
cmp
inc
je
scas
mov
xchg
add
std
in
js
inc
mov
lret
rorb
add
loope,pn
stos
xor
imul
in
jp
sub
cmp
dec
pop
jp
shr
imul
outsl
mov
push
jge
pop
inc
mov
and
mov
jp
lods
or
lret
sahf
movsl
negb
roll
and
push
push
mov
cmp
sbb
cmpsl
jns
jae
or
addr16
push
popf
daa
cli
mov
cltd
test
add
arpl
adc
xor
shr
adc
sbb
cmp
imul
sub
pop
rolb
mov
jne
jmp
stos
dec
mov
sbb
pop
cmc
out
frstpm(287
popf
push
xor
fsubrl
roll
jp
std
scas
or
pop
dec
and
ss
ljmp
push
push
repnz
fimuls
xlat
adc
xchg
lahf
push
dec
lret
mov
sbb
mov
insb
mov
xchg
aad
and
out
add
je
mov
cmp
sub
stos
dec
shll
cmpl
xchg
ja
sub
pop
je
inc
out
sub
jmp
add
and
pop
pop
mov
mov
jg
sub
nop
outsl
sahf
push
adc
sbb
sub
add
pop
cli
xor
cmpb
inc
clc
lods
cld
stc
in
call
mov
cmp
push
cmc
dec
in
push
push
mov
movsb
sub
dec
lea
mov
arpl
and
test
inc
cli
inc
and
inc
shrb
mull
cmp
adc
jne
mov
cwtl
dec
xor
cld
dec
xchg
rcrb
adc
mov
popa
adc
jns
scas
push
cmp
push
lcall
adc
mov
aaa
mov
sub
xchg
push
bound
icebp
dec
mov
jl
mov
jmp
sub
mov
scas
cmp
bound
push
pop
sbb
loope
add
call
aam
xor
push
scas
and
mov
jge
mov
jne
test
mov
inc
pushf
jb
js
int
cmp
data16
lods
fisubs
ljmp
gs
jle
ret
xchg
inc
mov
sahf
das
push
data16
inc
inc
sub
mov
or
push
mov
ljmp
iret
sub
testl
scas
mov
cs
xchg
sbb
cmp
dec
pop
add
and
mov
aaa
inc
lret
mov
and
jmp
imul
test
inc
xchg
mov
adc
jbe
push
stos
lret
cli
pop
cmp
lcall
inc
cmp
add
xchg
das
in
and
addr16
mov
dec
mov
mov
add
popl
dec
in
sub
pop
ds
sub
sahf
adc
into
or
jg
jecxz
jne
rcl
mov
jne
lock
pop
lds
dec
ret
repnz
shlw
adc
push
or
ret
push
inc
pop
mov
xorb
sbb
rorl
xchg
or
sbb
cmpl
mov
andl
cmpsb
stos
mov
mov
xchg
or
fs
int
jl
adc
sbb
daa
lret
lock
cltd
iret
add
inc
in
mov
shl
js
jp
dec
rcrl
sub
jge
sub
push
es
scas
mov
lock
xor
cmp
bnd
mov
test
mov
sahf
inc
outsb
arpl
lods
int
mov
cmpsl
dec
dec
jnp
out
into
das
jp
faddp
cmp
dec
jmp
into
mov
in
push
imul
cmpsl
out
sbb
or
stc
mov
xorl
inc
iret
push
inc
clc
stos
movsb
and
not
ret
adc
sarb
test
sbb
test
stos
push
pusha
fwait
sbb
mov
movsw
lret
sti
mov
mov
daa
movb
fcom
xchg
jne
clc
jno
in
or
adc
ljmp
cmp
aad
movb
mov
push
xlat
mov
cwtl
sub
mov
rcr
push
xor
push
icebp
pop
aaa
cmp
shlb
jne
data16
sub
pop
decb
adc
sti
fnstsw
push
inc
cwtl
jno
adc
imul
test
mov
insb
pop
sub
mov
sbb
xlat
xor
mov
lods
xchg
or
cmc
push
mov
fcmovu
sub
jp
push
xor
lret
cmc
jl
mov
fbld
ret
push
adc
sbb
mov
fsubl
adc
sbb
push
mov
lea
sbb
adc
dec
mov
or
dec
jns
outsb
sbb
cmp
lds
inc
xchg
flds
and
fxch
into
push
shll
add
jecxz
dec
les
subb
xchg
dec
insb
gs
out
cmp
call
mov
sub
shll
pushf
pop
lret
out
sub
shll
mov
inc
xchg
sbb
rclb
pop
cmp
jmp
sbb
es
sub
add
xchg
fnstsw
pop
sub
cmpb
outsb
addb
out
mov
sbb
cs
jecxz
pop
push
add
push
int
or
jg
xchg
ret
xchg
out
scas
inc
mov
or
repnz
xchg
adc
insb
jge
loop
in
es
cltd
mov
je
jbe
into
push
loopne
nop
jecxz
pushf
ljmp
outsl
mov
cmpsl
daa
sub
sub
fidivs
inc
pop
fsubrl
test
add
leave
pop
je
js
jne
dec
int3
sbb
rolb
xorb
fnstsw
adc
cs
and
sub
das
push
cmpl
jmp
bound
lret
daa
pop
aas
stos
cmp
push
out
sarl
mov
ds
fdiv
inc
rcll
xchg
out
idivl
arpl
add
xor
cmpsl
mov
jg
xchg
xor
nop
adcl
push
loope
cmp
js
ljmp
ja
push
push
pop
in
in
rcrb
mov
xchg
push
fs
and
cmpsb
jae
push
and
mov
or
xchg
bound
xchg
jo
movb
push
or
add
std
cmp
loop
lods
mov
jnp
xchg
pop
iret
fildll
call
shlb
out
inc
lods
inc
mov
sbb
sub
xchg
loope
or
mov
dec
adc
push
cltd
sbbb
mov
pop
inc
jg
pop
inc
dec
out
cmpsl
aaa
mov
enter
xor
sub
cmpsl
cmpsl
int
adc
sub
push
in
dec
ja
je
mov
cmp
push
pop
jo
ljmp
data16
in
lahf
jns
or
cmpl
leave
xchg
leave
out
mov
mov
jb
inc
mov
js
add
int
add
sbbl
jg
sbb
int3
cmp
mov
scas
mov
adc
jbe
rcrl
test
push
lea
mov
jne
xchg
push
dec
pop
ud0
pop
add
lea
aas
test
and
icebp
xchg
adc
fildll
stos
mov
add
push
pop
mov
stos
mov
scas
pop
mov
push
cli
dec
shll
enter
dec
pop
inc
sub
mov
mov
pop
push
xchg
and
jge
sub
add
int
xchg
icebp
jae
cmp
mov
xchg
not
add
std
shl
cmp
mov
into
icebp
int
jnp
mov
pop
jns
lret
enter
movsl
push
movsb
jp
push
idivl
rcll
stos
popa
and
in
in
jmp
and
repz
jl
clc
xor
movsb
lods
push
inc
mov
adc
das
and
push
test
pop
jo
rcll
mov
inc
dec
add
in
leave
repnz
cmp
sub
in
jb
jmp
lcall
sbb
jne
mov
push
mov
jmp
inc
cmp
subl
cmpsb
iret
sbb
adc
rolb
sub
out
in
mov
push
cmp
pop
mov
pop
ds
test
hlt
mov
pop
push
mov
sub
lea
or
sti
mov
cli
adc
fstpl
add
cltd
jno
aas
in
jge
push
push
jbe
outsb
scas
push
mov
jmp
repnz
gs
sbb
rcrl
cld
sbb
shll
xor
sub
stos
loop
test
and
dec
movsl
mov
and
inc
inc
and
es
fwait
subb
adc
pop
arpl
out
pop
cmp
jecxz
jbe
fnstenv
fchs
lret
out
mov
adcl
inc
lret
mov
aad
mov
mov
pop
mov
push
aam
inc
xor
sbb
push
cmpsb
mov
insl
mov
adcb
jno
or
imul
mov
popa
mov
mov
in
add
push
xchg
int
sbb
push
lahf
jnp
sub
cmp
mov
xchg
jl
in
cmp
out
fisttps
pusha
aam
sub
not
xchg
mov
shll
cli
mov
xchg
push
inc
subl
push
dec
andb
out
mov
call
inc
mov
sub
jl
out
enter
enter
flds
sahf
xorb
shl
cmp
popa
repnz
ret
mov
or
iret
cmp
fistpl
pop
xchg
xchg
sbb
dec
in
xchg
lods
jmp
fnstsw
xor
sarb
sub
jmp
and
dec
cmpsb
rcr
or
scas
rcrl
gs
push
adc
adcl
lret
dec
iret
pop
lds
arpl
call
xlat
sets
cmp
pop
mov
mov
sbb
xor
loopne
orb
mov
push
adc
push
mov
xchg
push
aas
mov
mov
aam
push
push
xchg
adc
mov
xchg
leave
sub
inc
push
stos
pop
push
je
push
cmp
mov
stos
cmp
jo
mov
xlat
push
and
popa
fdivl
fistps
sbb
xor
mov
mov
inc
hlt
fadd
cwtl
mov
jp
ja
cltd
mov
xchg
data16
fcmovb
shl
cmp
cld
adc
push
popf
fcoms
sti
xchg
outsl
fisttpll
push
je
adc
inc
xchg
mov
cwtl
or
roll
mov
jp
mov
or
std
test
mov
packuswb
pop
testl
lret
stos
jbe
ja
gs
test
xor
mov
jge
inc
xchg
or
or
xor
fidivrs
or
inc
repnz
aaa
mov
push
mov
int
mov
dec
sbbb
out
mov
ret
fiadds
sub
sti
xlat
pop
icebp
cltd
push
lea
mov
adc
je
mov
fidivrs
arpl
jecxz
gs
shlb
push
ja
mov
repz
add
jle
push
pop
lret
cltd
sbb
in
dec
repnz
outsb
mov
jno
mul
mov
push
pop
or
mov
inc
cmp
lahf
add
dec
xor
or
pop
sub
shl
std
rorb
das
xor
inc
cs
mov
push
and
inc
sti
jp
mov
jae
and
sub
jg
xchg
fwait
push
or
ljmp
int3
push
test
mov
inc
aas
leave
add
movsb
dec
xchg
sub
cwtl
cmp
push
pop
inc
sbb
jbe
hlt
xchg
test
add
push
fisubrl
aas
inc
out
mov
and
jl
push
rolb
adc
push
outsb
repz
ret
add
imul
sub
dec
jl
cmp
or
jns
cmp
push
out
sbb
push
mov
imul
insl
push
adc
aad
dec
jb
sahf
in
jge
into
lahf
popa
cwtl
jne
sub
imul
xchg
push
pushf
adc
adc
ret
jge
dec
mov
inc
dec
ficompl
mov
ja
inc
and
mov
movl
jmp
scas
je
mov
ret
test
cld
imul
inc
or
ret
push
dec
je
gs
cmpsb
mov
mov
mov
xchg
push
mov
cmpsb
dec
popf
mov
cmp
jns
sub
push
and
cmp
adc
scas
bound
lret
imul
cmpsb
stc
dec
or
pop
dec
xor
jb
les
lret
stos
mov
adc
and
fpatan
scas
les
mov
insb
mov
lret
fxch
inc
gs
das
xchg
sub
mov
movsl
cmc
cmpsb
mov
lock
add
mov
push
lret
adc
test
test
jbe
cmpsl
or
insl
lcall
adc
mov
mov
pop
dec
push
cmpsl
shll
out
push
jp
imul
aaa
lcall
sub
push
sub
lahf
je
push
mov
cmp
int
dec
in
aam
add
add
cltd
cwtl
or
in
xchg
and
or
jge
xor
fmull
xor
or
jecxz
mov
push
ljmp
shl
add
divl
das
add
in
inc
in
ficompl
mov
sti
sbb
cmp
pop
mov
xchg
xchg
jl
cmc
push
jle
insl
xor
xlat
push
dec
scas
mov
test
daa
push
mov
inc
xor
imul
in
lcall
jbe
sub
mov
je
bound
fsubrl
pop
mov
sbb
inc
ret
ret
mov
cwtl
ds
mov
cmp
call
xor
shlb
dec
pop
shll
pop
or
push
addr16
shrl
mov
out
mov
outsl
xor
cmpb
pop
lods
movsb
stos
imul
jae
loop
out
inc
outsb
jno
push
and
cmp
aas
pop
jp
scas
vorps
jle
push
mov
pop
lahf
adc
sti
test
frstor
cld
fstpl
jp
cmc
repnz
cmp
enter
movsl
stos
int
cmpsb
inc
mov
xchg
cmp
pushf
mov
xlat
inc
aad
jg
cs
adc
dec
inc
push
cmp
jbe
notl
cmp
sahf
jb
mov
mov
sbb
scas
lods
push
mov
pop
sub
ror
mov
and
filds
pop
cmp
sbb
lcall
cwtl
inc
cmp
push
cmp
stos
mov
ss
flds
mov
inc
jno
shrl
inc
dec
outsl
add
mov
fisubl
ss
sbb
lret
dec
imul
add
push
or
xchg
pop
loopne
clc
sub
and
shrb
popa
or
loopne
mov
mov
or
sub
mov
nop
mov
clc
jnp
cmp
es
dec
pcmpgtd
xor
adc
xor
int
cmpsl
iret
add
pop
add
shrl
xchg
cmp
in
adc
cld
push
ror
andb
add
repnz
cmc
stos
sti
call
sbb
enter
mov
inc
and
int
fisttpll
pop
or
cltd
xchg
mov
nop
jo
jg
mov
sbb
aad
pop
mov
lret
je
or
or
cmc
lds
cmp
ret
xchg
mov
out
inc
sbb
dec
cs
ljmp
popf
cmpsb
fs
sbb
out
push
mov
and
mov
jnp
dec
ret
loope
or
je
sub
or
mov
jecxz
sahf
xchg
stc
adc
lret
sub
sbb
or
pop
cmp
stos
adc
push
dec
test
adc
mov
loop
push
push
sub
lods
fbstp
xor
push
ret
adc
add
xchg
pop
mov
jns
mov
inc
int3
lahf
jmp
cwtl
cmp
lods
mov
push
mov
daa
push
sub
cmp
inc
fsts
jmp
xchg
dec
int
xchg
add
ret
pop
push
fldpi
std
pop
mov
sbb
and
mov
jo
inc
lret
xor
test
test
add
sub
bswap
test
add
or
xor
dec
xor
pop
loop
sbb
inc
sub
imul
mov
aas
pop
lret
xor
xchg
jbe
mov
aad
aaa
js
adc
aam
faddl
xlat
jecxz
push
jnp
xor
out
rcrl
out
inc
and
and
scas
clc
and
cmp
push
add
inc
xor
roll
push
sbbl
loop
lahf
mov
push
pop
mov
jae
cld
add
in
or
mov
and
pushf
cs
cmpsl
or
add
xchg
fs
mov
data16
xchg
cmp
test
repnz
addr16
les
jno
xor
jecxz
pop
jo
ret
cmp
inc
popf
jg
and
mov
insl
and
cmpsb
xor
mov
xchg
leave
daa
push
pop
jnp
push
arpl
xchg
in
aas
adc
shl
test
jo
push
xchg
xlat
popf
xor
xorl
cmp
test
push
jl
pop
inc
in
gs
int3
psubusb
nop
hlt
mov
xchg
cs
cmc
dec
pop
push
sbb
cli
sub
dec
lods
rcl
sahf
sub
mov
mov
gs
icebp
stc
in
jne
je
xchg
mov
add
add
shlb
pop
mov
dec
fs
push
mov
fildl
or
mov
mov
leave
dec
imul
hlt
es
pop
sub
insb
stos
das
and
cs
dec
push
and
mov
cltd
dec
cmp
cmc
fstp
enter
pop
pop
stos
inc
out
xor
push
aas
lret
add
mov
cmc
or
das
or
mov
jae
xor
int3
xor
out
xchg
cmc
or
dec
xchg
movsl
xor
pushf
std
cmp
xor
jg
and
pusha
aaa
mov
add
jp
lea
das
push
mov
add
out
or
pop
int
and
xor
std
flds
xor
call
adc
adc
sbb
popa
icebp
sahf
xchg
mov
ljmp
rclb
lock
nop
aad
jle
in
out
scas
ret
lcall
clc
jp
js
cmp
jbe
out
xchg
lods
cli
loop
mov
test
mov
call
mov
inc
and
mov
shll
out
call
inc
pop
xor
jle
pop
jno
leave
idivb
cmpsb
jo
inc
push
mov
in
pop
insb
outsl
gs
mov
jae
adc
mov
jle
rclb
xchg
iret
ds
xorb
ss
pop
bound
mov
adc
in
jne
xor
xchg
dec
cmp
sbb
fwait
scas
xchg
stos
je
mov
add
and
pop
aaa
dec
adc
mov
jnp
es
lods
jmp
xchg
xor
sub
int3
stc
int3
jmp
addr16
pop
repnz
jmp
mov
inc
out
subb
add
cld
gs
enter
loop
push
inc
mov
movsl
fsubr
int3
xchg
add
shrb
mov
adc
and
loop
dec
push
int3
ret
movsb
pop
pop
in
inc
pop
repz
jbe
stos
in
sub
and
test
sbb
mov
inc
stos
ljmp
dec
addb
nop
jp
imul
popa
sbb
dec
in
incb
jg
inc
adcb
fmul
push
and
or
mov
pop
adc
mov
ja
sub
mov
cwtl
or
ds
jg
in
add
cmp
xor
insl
sub
adc
fwait
or
test
mov
sub
and
xor
push
sbb
pop
pop
jne
sbb
cmovne
in
loope
repz
push
mov
xor
sbb
xchg
xchg
std
cmp
shlb
mov
or
das
sbb
mov
jbe
stc
in
stos
or
adc
xor
push
and
mov
mov
adc
mov
push
xor
push
adc
mov
pop
mov
add
xor
jg
sub
add
push
pop
mov
test
adc
andb
xchg
scas
shlb
int3
out
outsl
movl
or
mov
fs
cmp
jle
inc
lods
cmp
sahf
ss
push
jae
pusha
xchg
cmp
int
sub
push
mov
rcll
scas
sti
shlb
enter
add
adc
or
push
lcall
xor
stc
es
int3
xchg
int3
es
adc
mov
outsl
and
testb
or
sub
pop
rcrl
mov
xlat
mov
fidivrs
sbb
into
pop
mov
jno
inc
fwait
mov
mov
lods
repz
clc
xor
mov
dec
inc
mov
mov
xchg
lea
fcmovb
aam
jne
pop
imul
bnd
inc
or
cmp
lahf
cmpsb
mov
xchg
dec
push
fnstenv
mov
jg
jg
mov
repz
popa
loopne
adc
cmpsl
arpl
int3
in
pop
call
out
mov
pop
fsub
sti
imul
pop
push
push
loopne
scas
dec
push
or
aaa
xor
ljmp
inc
pop
mov
push
fsubrl
lret
sub
mov
out
and
dec
fstpl
sub
and
sbbb
scas
and
sbb
sbb
cmpsl
aaa
lock
push
stos
cmpsl
shlb
or
pop
xchg
xor
insb
cli
cmp
dec
and
pop
scas
into
jne
dec
add
push
das
hlt
push
mov
movsl
ret
xor
test
mov
enter
hlt
cmpsl
daa
mov
dec
cmp
dec
adc
xchg
sbb
in
scas
xchg
sti
stc
shl
sbb
in
aad
xchg
inc
xchg
jmp
inc
out
fwait
nop
mov
lahf
aad
xor
inc
mov
mov
pop
sub
sub
das
mov
mov
lods
test
dec
lods
mov
jle
icebp
imul
mov
movsb
test
das
cli
int
cmp
sub
push
add
xor
xor
ljmp
outsl
push
mov
sti
dec
jl
pop
push
mov
mov
dec
shl
insl
inc
inc
jmp
fisttpll
adc
pop
es
mov
mov
mov
fsts
or
xchg
into
xchg
daa
lret
cmp
outsb
or
mov
jns
orl
and
push
pop
or
jl
out
ss
out
mov
xlat
mov
insb
push
xor
and
xchg
xchg
jo
cli
in
je
jns
call
mov
xchg
mov
aaa
es
mov
cmp
xchg
push
pop
pop
aad
idivb
cltd
repnz
mov
pop
movsb
mov
mov
fwait
icebp
movsb
je
iret
popf
stc
sahf
mov
dec
andl
adc
decl
leave
pushf
popf
imul
jg
nop
cld
dec
xchg
push
scas
push
and
push
fdivrl
adc
or
xchg
jle
push
mov
push
xor
jns
movsb
lods
xor
mov
shll
test
inc
sbb
stc
jle
xor
loop
mov
es
or
dec
cmpsb
or
push
clc
pop
cmc
xor
fimuls
inc
scas
rorl
insb
pop
push
test
jmp
and
lods
loop
mov
jno
xor
push
and
xchg
dec
mov
pop
mov
mov
jmp
ja
aam
das
mov
icebp
mov
xor
push
sbb
imul
fisubrl
adc
or
sub
dec
and
dec
das
mov
lahf
mov
push
cmpsl
cmpb
faddl
sub
ret
lods
sub
and
shlb
leave
je
xor
leave
es
into
mov
push
adc
xor
xor
test
loopne
xchg
fsubs
jns
mov
into
cmp
xor
push
icebp
push
push
inc
cmp
imul
add
adc
jecxz
outsb
mov
sbb
jnp
ja
pop
pusha
jmp
adc
addr16
push
cmp
addr16
dec
test
push
outsb
sub
cmp
mov
nop
lea
fdivs
aad
dec
sub
outsl
iret
cmpsb
icebp
lcall
add
iret
into
aam
sub
jp
adc
add
outsl
cmpsl
repz
popf
lds
rorb
loop
push
jle
and
test
adc
sub
enter
adc
idivl
test
pop
pop
mov
fisubs
les
shl
mov
mov
adc
je
lea
pop
loope
outsb
xchg
daa
out
push
movb
inc
lret
jmp
into
out
arpl
fs
into
mov
or
fbstp
and
orb
and
icebp
dec
mov
hlt
int3
inc
jo
lcall
jns
lods
int3
sbb
mov
pop
out
sbb
xor
aad
inc
scas
jbe
mov
out
insl
xchg
stos
call
or
jb
cli
inc
iret
xlat
mov
inc
cmp
mov
pusha
mov
adc
cmp
clc
aas
pop
jecxz
sub
mov
test
lcall
xor
sahf
call
sbb
dec
test
add
dec
shl
pop
fidivs
leave
ficoms
push
inc
movsl
ss
mov
push
add
mov
iret
fsubs
ret
shrl
adc
pop
sahf
adc
insb
daa
xor
sbb
in
add
fbld
pop
and
and
das
enter
out
in
sub
and
sub
push
out
cmp
lahf
addr16
fcoml
into
cmpsb
xor
sarl
sub
lret
push
mov
cmp
test
mov
out
mov
std
pop
stos
add
jmp
sbbl
mov
dec
xchg
adc
add
cmp
mov
movsb
pop
cld
repz
fwait
idivl
repnz
push
out
es
cmp
mov
pop
mov
popf
rcrl
daa
dec
je
cld
sub
adc
dec
fs
pusha
insl
sbb
ds
lea
mov
xor
cmp
pop
xor
and
insl
daa
test
out
inc
or
and
jecxz
mov
fldl
fiaddl
jecxz
aad
imul
xor
je
xchg
jae
lds
push
js
jp
jle
inc
mov
es
popa
and
mov
or
push
mov
fsub
addr16
fcompl
loop
out
ss
ja
insb
mov
jmp
jle
fadd
dec
ja
pop
push
inc
popf
adc
adc
cmpsb
adc
dec
fs
insb
insb
inc
dec
xchg
ds
or
orb
dec
stos
mov
mov
sarb
imul
and
rcl
mov
and
mov
jp
sub
data16
pop
popa
push
rcll
int
out
sbb
xor
shl
and
or
testl
cmpsb
and
xor
scas
dec
fidivs
adc
aad
cmpsl
sub
push
dec
test
xchg
jmp
out
pop
push
xor
dec
dec
or
adc
es
mov
fildll
sarb
xor
mov
jae
cld
pop
push
and
mov
aad
push
stc
mov
ror
daa
mov
jle
mov
cmc
fucomi
cmp
in
jne
movsb
fcmovnb
or
imulb
and
jo
pop
push
xor
cmpsl
sarb
adc
loop
test
jno
mov
das
jge
hlt
pusha
adc
lea
pusha
add
enter
and
out
je
sub
test
fmuls
popa
in
add
dec
lahf
adc
negl
ds
std
test
fnstenv
bound
pop
jo
data16
maxps
lods
movsb
inc
dec
or
repnz
adc
call
notl
ret
xchg
xorb
push
movsl
and
mov
adc
ret
sub
xor
out
push
imul
dec
or
push
jl
push
sbb
shl
iret
push
pop
jp
and
call
adc
cmc
jb
mov
arpl
js
and
gs
or
push
cmp
push
stos
clc
fimull
stc
icebp
loopne
push
adc
bound
les
mov
mov
aaa
adc
jp
sbb
cmpsb
push
xchg
sbb
je
and
pop
dec
jle
mov
adc
jle
rorl
xor
shlb
sub
and
scas
push
clc
add
scas
mov
adc
adcb
gs
xor
push
push
loopne
jo
push
inc
pushf
sahf
out
push
and
insb
jmp
gs
cld
add
jmp
test
pushw
je
add
jp
out
movsl
and
and
pop
pop
into
lcall
std
sbb
xorb
jb
add
jno
sarb
out
dec
in
pushf
xchg
inc
mov
and
shl
decb
js
cmpsb
and
xchg
xor
in
cmp
mov
jno
hlt
mov
dec
arpl
and
push
hlt
add
jge
fs
sbb
nop
cmp
xchg
ret
mov
inc
dec
fistpll
and
test
mov
loope
jbe
xchg
and
mov
dec
sbb
testl
leave
push
je
push
inc
ss
lods
or
dec
stos
sub
in
xchg
mov
jo
sub
fistps
mov
xchg
ss
ljmp
pop
xor
cmpsb
ja
scas
into
ljmp
jp
mov
imul
jno
mov
pop
xor
std
outsl
pop
das
adc
repz
outsb
mov
pop
add
pop
xchg
ds
xchg
or
add
dec
or
inc
test
push
xor
push
rcrl
cmpsb
aad
stc
iret
xor
loopne
inc
and
mov
sbb
mov
ret
jne
mov
or
xchg
cmpsl
orb
push
mov
movsl
xchg
jg
inc
into
stc
pop
lcall
dec
movsb
sub
popa
jbe
xchg
mov
movsb
jg
xchg
and
add
push
and
loop
xor
jno
call
or
mov
mov
xchg
push
icebp
cwtl
mov
cmpsl
cli
inc
or
and
dec
notb
lret
pop
imul
dec
pop
fimuls
movsl
dec
leave
sbb
push
pop
mov
dec
lods
lods
enter
jne
out
add
xlat
out
push
data16
and
inc
xchg
clc
outsb
add
ljmp
dec
test
xor
mov
add
test
sti
dec
js
mov
add
mov
mov
add
add
sub
es
xor
imul
iret
aad
mov
sbb
gs
lret
xchg
xchg
loop
mov
dec
subl
dec
js
sbb
jg
pop
cmp
repnz
lock
xor
bound
xor
test
mov
std
dec
mov
jnp
jmp
push
mov
xor
push
push
aam
push
inc
out
test
add
cli
inc
gs
in
pop
and
jb
movsb
xchg
inc
ds
rclb
repnz
fistl
adc
sbb
stos
testb
jl
ret
out
sbb
xchg
push
clc
pop
inc
nop
xor
shr
repnz
pop
cmc
pop
imul
jp
ds
hlt
test
and
out
out
arpl
and
mov
mov
sub
mov
xchg
popa
sbb
mov
movsb
in
fwait
aam
icebp
dec
xorb
mov
add
cmpsl
cmp
xchg
xchg
icebp
insb
adc
pop
das
loop
adc
sub
lds
repnz
test
xchg
hlt
roll
loope
in
xor
dec
aaa
add
pop
xchg
pop
adc
or
or
fbstp
mul
addr16
loop
fcomps
and
push
fnstenv
xor
ds
push
mov
into
fiadds
out
ds
jae
pop
pop
cld
enter
aaa
scas
iret
cltd
jle
and
mov
pop
push
scas
rcl
stos
test
push
xlat
in
mov
mov
add
dec
outsl
addr16
add
stos
adc
mov
mov
and
dec
out
lock
cltd
jl
pop
sbb
mov
or
mov
sub
dec
inc
cmovbe
aam
jae
sbb
shll
hlt
js
call
jge
pop
test
dec
mov
cmp
push
bound
les
repnz
and
xchg
xor
pop
aas
and
das
xchg
adc
or
lahf
mov
push
sub
xchg
dec
scas
out
cmpsl
push
stos
inc
xchg
mov
popa
fldcw
xorl
scas
inc
cmp
rorl
sarb
test
mov
adc
pop
fisttpl
fnstcw
bound
xchg
arpl
iret
es
mov
mov
repnz
sub
add
mov
and
xor
outsl
sub
imul
jp
dec
sbb
inc
test
dec
pop
lock
fdivp
xor
mov
pop
jns
or
or
inc
in
in
in
xchg
push
test
sbb
mov
call
test
out
xlat
dec
fs
or
filds
pop
add
rol
fsubrl
in
add
lret
sbb
sbb
hlt
mov
xchg
inc
shl
ror
test
loopne
or
lea
mov
into
and
call
xchg
pop
mov
or
xor
sti
and
mov
mov
xchg
imul
push
adc
pop
nop
divps
or
mov
fidivs
mov
lods
lret
ds
hlt
loope
sub
jnp
fs
lret
in
mov
psllq
pop
subl
cmp
mov
and
mov
xorb
rorb
leave
popf
loope
push
in
xor
adc
jb
and
sub
sbb
push
ret
ret
cmpsl
mov
cwtl
mov
and
sbb
cmp
aas
dec
mov
out
mov
packssdw
adc
add
inc
idivb
inc
add
add
lret
mov
mov
push
or
shlb
mov
pop
sub
ljmp
insb
lds
in
lds
icebp
mov
jge
mov
cs
in
xchg
sub
dec
sarb
scas
xchg
dec
adc
std
call
cmp
aad
push
push
pop
lret
inc
push
sub
fdivrl
js
cld
in
add
test
push
xchg
pop
sarb
add
daa
or
xchg
mov
ret
test
bound
addl
ss
repnz
stc
adc
pushf
dec
push
lret
sarb
daa
adc
stos
outsl
sub
popa
mov
xchg
pop
sub
mov
sbbl
inc
test
mov
inc
mov
rolb
jle
sub
dec
jne
loopne
loopne
sti
cmp
outsb
xchg
scas
push
sbb
push
iret
inc
stc
add
in
mov
mov
inc
imul
pop
dec
pop
and
xchg
cmc
push
bound
mov
mov
inc
adc
add
push
lahf
jbe
lea
popa
mov
add
and
mov
mov
dec
imul
inc
in
inc
stos
aad
lahf
divl
ss
or
js
add
mov
dec
push
lcall
mov
pop
adcb
xlat
push
shlb
push
sub
pop
aam
in
xor
push
cmp
mov
lret
mov
mov
mov
push
rclb
std
pop
jp
cmp
fdivp
jno
into
push
mov
sub
cwtl
xor
and
cltd
push
in
mov
sti
repnz
repz
jae
jp
gs
jne
xor
dec
imulb
out
int
movsb
icebp
adc
mov
pop
dec
push
xchg
movsb
lahf
xor
jbe
iret
pop
jecxz
les
into
sbb
mov
mov
adc
cmc
inc
sbb
mov
lret
movsl
pop
push
cmc
fsub
push
int3
xor
cmp
sbb
adc
dec
mov
push
pop
cmp
pop
outsb
rcr
test
in
add
sbb
imul
mov
loope
scas
pop
arpl
add
in
adc
dec
push
std
jg
jl
lock
je
xor
cmp
imul
jge
cmp
mov
mov
xor
and
aaa
adc
loopne
and
sarl
mov
test
ds
dec
pop
into
es
sbb
imul
rsqrtps
fadds
shrl
push
push
xor
push
in
shrl
imul
push
das
negb
aam
xor
mov
mov
sbb
mov
popf
fsubrp
test
push
adc
cmpsl
jp
test
xor
icebp
lds
arpl
cs
ret
inc
inc
mov
outsb
xchg
addr16
int
cmpsl
jge
dec
xchg
xor
jae
cltd
mov
sub
bnd
and
or
iret
pop
mov
inc
jno
pop
cmpsb
mov
xchg
adc
sbb
stos
repnz
push
push
pop
jp
jle
out
add
mov
out
lahf
sbbl
pop
xor
xchg
out
cmpsb
mov
push
test
out
cmpsl
dec
aam
adc
push
sub
cmp
and
xor
test
int3
jns
pop
xor
or
mov
jecxz
std
jae
jge
mov
mov
outsl
inc
cmp
xchg
xchg
add
data16
popf
cmpb
bound
stc
xor
dec
jb
lret
sub
faddp
hlt
lods
call
push
mov
cli
xor
jno
loop
in
psubusw
cmp
sti
push
out
bound
mov
jb
lods
sti
adc
test
or
push
lcall
out
fstpl
jecxz
or
push
inc
icebp
pop
in
jge
push
js
lahf
fcompp
jae
xor
rol
pop
mov
loope
jge
push
iret
adc
mov
push
inc
lahf
pop
mov
ljmp
pop
cltd
and
mov
les
mov
dec
add
inc
dec
mov
hlt
mov
mov
xchg
fsubl
sub
bound
int3
adc
xchg
je
or
xchg
movsb
fsubrs
xchg
adc
sbb
aad
and
mov
subl
and
dec
jle
dec
shlb
and
fwait
in
mov
aam
lahf
ja
mov
sub
mov
imul
sub
ucomiss
xor
or
dec
js
add
cltd
inc
push
mov
adcl
daa
pop
aaa
mov
xor
sub
int3
cmp
push
hlt
or
stc
sbb
imul
je
xchg
hlt
xor
pop
jmp
rol
stos
sbb
mov
jge
or
hlt
xor
jle
and
xchg
xor
sbb
fwait
sbb
dec
ja
mov
test
fcomp
lret
mov
inc
mov
shr
ja
adc
sbb
into
mull
jo
dec
test
pop
sarl
mov
adc
out
dec
in
pusha
push
iret
in
movsl
sub
stos
dec
cmp
out
xor
sub
jge
aam
cmp
orl
rclb
es
xchg
in
pushf
mov
lods
aad
js
mov
repz
in
loopne
imul
std
push
int3
pop
mov
jl
js
roll
or
xchg
xchg
ret
add
add
out
xchg
je
inc
jnp
xor
xchg
xor
mov
mov
pop
mov
stc
test
adc
repz
xchg
cs
leave
loope
xchg
lods
std
negl
lret
clc
fstp
in
int3
mov
in
movsl
dec
in
lahf
fiadds
sarb
sub
cmp
sahf
push
jns
ret
lds
fadd
rol
xor
xchg
sti
or
push
xchg
in
push
and
popf
cmc
mov
mov
and
push
adc
pop
mov
push
or
insb
iret
and
mull
sarl
jbe
push
push
push
shl
cwtl
xor
sub
clc
pop
gs
pop
adc
hlt
mov
push
xchg
mov
sahf
in
xchg
mov
out
sarb
mov
cltd
stc
mov
sub
sbbl
mov
or
mov
add
popa
xchg
ds
addr16
sarl
fs
push
fldl
es
inc
mov
push
js
xlat
add
mov
pop
cld
ljmp
jg
inc
mov
sub
push
cs
cs
nop
push
xchg
jmp
stos
dec
ficoms
xor
adc
rcrl
pop
cmp
pop
movsb
jne
shl
sbb
xchg
fs
jnp
inc
pop
test
pop
ret
mov
testb
add
nop
pop
lds
pop
shl
mov
dec
mov
imul
lcall
lea
dec
pop
sarl
repz
xor
mov
cmp
add
inc
push
push
and
sub
dec
jbe
rcl
bound
xchg
testb
xchg
std
inc
pop
in
popf
dec
pusha
test
iret
mov
push
sti
inc
inc
icebp
stc
enter
jl
outsl
mov
pop
push
or
mov
enter
mov
test
fcmovnbe
data16
add
repz
sbbl
xor
sbb
inc
jmp
rcll
pusha
jl
out
mov
pop
or
aad
mov
hlt
subb
xor
gs
jg
mov
mov
jle
sbb
sbb
jle
push
ret
mov
ds
mov
out
ja
push
cmp
jle
mov
cmpb
ret
inc
fwait
lods
les
mov
add
aam
test
push
mov
pop
cmp
cmpsb
pop
or
outsl
js
stc
push
jecxz
fdivr
inc
maxps
sub
fnstenv
mov
subl
jle
mov
repnz
mov
mov
je
into
dec
adc
jge
add
pop
sahf
adc
mov
pushf
push
cs
jecxz
int3
sbb
adc
bound
or
nop
push
sbb
sub
cs
or
lock
sub
pop
adc
adc
shufps
mov
hlt
xor
in
outsb
bound
pop
outsl
movb
sub
adc
mov
xchg
fidivrs
cli
in
pushf
int3
pop
sub
test
cld
outsb
outsb
pop
mov
scas
stc
addr16
xor
andb
ds
inc
fimull
sti
xchg
sahf
sub
daa
outsb
and
mov
pusha
mov
jne
arpl
jecxz
mov
push
in
loop
call
push
inc
lods
jbe
bound
outsb
lock
inc
test
or
mov
add
into
outsb
stos
push
lahf
fstps
js
pop
push
push
test
mov
mov
push
sub
lcall
xchg
aam
sub
rcl
pop
jp
xchg
and
sahf
sub
subb
mov
pop
inc
and
xor
or
das
dec
sti
call
loop
fistl
dec
push
aam
test
out
shrl
or
xchg
and
lds
lods
add
or
mov
cli
pop
bound
hlt
sysenter
mov
mov
pop
lock
pop
xor
xchg
arpl
and
scas
pushf
orb
rorb
mov
and
mov
fwait
mov
dec
sub
xchg
test
out
add
lods
sub
mov
add
icebp
mov
push
rorl
xor
scas
push
shr
mov
inc
pop
push
ret
addl
sbb
add
test
xchg
mov
fisttps
stos
cmpb
das
inc
aaa
js
mov
cli
dec
scas
mov
xchg
adc
pop
cltd
sub
jb
fidivl
testb
jecxz
mov
in
in
stos
sahf
flds
aam
dec
ret
pop
lock
inc
sub
fisttps
call
cwtl
inc
add
xor
inc
hlt
outsl
inc
movsl
mov
jb
lods
pusha
jecxz
gs
add
mov
sarl
pop
xchg
lret
leave
insb
ret
popf
cmp
or
pop
popa
fimull
jl
add
ljmp
fs
mov
xchg
push
pop
xlat
cli
ja
mov
jmp
cs
xchg
imul
push
mov
andb
xchg
pop
xchg
add
inc
scas
nop
dec
ss
fimuls
mov
mov
pop
rcr
jp
mov
cmp
jle
lahf
int3
or
shlb
jne
cwtl
cmp
daa
andb
xor
sbb
fisubrl
addl
adc
imul
rol
push
mov
cmp
das
imul
add
test
jmp
hlt
fstpt
dec
jg
sub
pushf
test
or
fnstenv
mov
inc
lcall
add
mov
dec
sub
in
outsl
pop
das
xchg
xchg
jno
imul
les
mov
push
aad
add
or
push
fwait
pushf
pusha
shrl
push
sbb
shll
in
dec
ds
into
mov
pop
cs
dec
jne
and
jb
ret
pop
adc
xor
jl
lret
out
sahf
xchg
add
xor
sub
pushl
imul
inc
and
xchg
mov
dec
mov
loopne
jge
sbb
push
mov
adc
sub
std
add
jmp
popf
push
hlt
adc
mov
and
mov
imul
mov
inc
dec
adc
mov
push
scas
inc
mov
test
addr16
add
and
lods
js
push
scas
test
aam
out
jg
xor
sarb
pusha
shlb
adc
arpl
pop
pop
inc
inc
jge
and
aam
sub
xlat
pusha
cmpsb
mov
js
in
cs
cmpsl
push
push
das
cmp
repnz
testl
inc
cli
push
or
scas
popl
mov
fwait
mov
js
loop
rcr
pop
stos
lcall
les
add
fbstp
adc
pushl
cmp
clc
ret
pusha
in
jmp
sub
arpl
fwait
push
es
es
pop
lock
clc
or
mov
xchg
dec
and
movsb
push
imul
mov
jo
outsb
hlt
call
lds
fisttps
pop
xchg
fcoms
fsubr
data16
jae
push
xchg
rorl
jg
dec
fs
lret
push
popa
sahf
pop
lahf
clc
xchg
mov
jo
push
ja
push
xchg
jno
mov
loop
mov
push
push
cmp
leave
daa
dec
rcrb
les
jmp
sahf
xchg
dec
or
xor
cli
loop
add
mov
push
add
xchg
sub
jle
sti
movsl
mov
pop
shlb
data16
sbb
ja
xor
fdivp
ljmp
xchg
dec
sub
fists
jae
xchg
insb
movsb
aam
xlat
test
into
sbb
pop
fcmovnbe
push
mov
call
mov
mov
xlat
adc
enter
lret
cmp
ds
leave
sub
sbb
mov
mov
cld
sbb
lds
pop
adc
adc
cmp
repz
push
xor
sbb
pop
scas
push
add
loope
cli
dec
xor
xor
out
mov
adc
shll
jb
arpl
jo
dec
loop
mov
add
mov
std
push
cmpsb
rolb
push
jmp
push
mov
jns
scas
sub
shlb
and
cmc
fcomps
or
lahf
inc
lea
and
loope
mov
push
stos
ret
or
lods
mov
mov
push
inc
xor
or
roll
shll
aaa
inc
imul
je
sbbl
pop
mov
roll
mov
sahf
stos
imulb
push
aas
mov
outsl
lahf
or
xchg
mov
pop
dec
ljmp
mov
add
movsl
and
dec
cmc
mov
ffree
pop
js
pop
lcall
enter
mov
cmpl
pop
or
scas
lds
push
movsb
ja
adc
mov
loopne
pop
xor
insl
or
sub
icebp
mov
or
mov
es
or
outsl
mov
roll
les
int
stos
jbe
fistpll
cld
fcmovne
stos
pop
ret
out
mov
push
pop
pop
mov
xchg
jl
jne
cmp
cmp
pop
lock
jg
rorb
inc
sub
mov
imul
or
cli
mov
mov
sbb
lahf
dec
sti
mov
push
in
fnsave
inc
icebp
mov
adc
push
cltd
pop
test
popa
lcall
jb
popf
repnz
xor
punpcklwd
test
jo
cmp
int
or
pop
jp
imul
dec
adcl
outsb
mov
lea
hlt
sub
push
faddp
push
mov
pop
mov
push
ss
ja
ficompl
shlb
leave
pop
add
xor
loopne
or
mov
sahf
push
out
adc
mov
dec
jne
je
xor
xchg
mov
cmp
and
daa
outsl
and
sbb
pop
mov
jecxz
mov
stc
push
sub
loop
jmp
daa
pushf
lret
mov
jne
mov
xchg
cmp
jecxz
movsl
test
sbb
pop
push
fldt
push
nop
and
je
pusha
add
frstor
push
cmp
lcall
push
lds
fldl
in
cmc
push
scas
add
and
xor
inc
imul
pop
and
aas
in
cld
mov
fcmovnu
cmp
fs
jae
jne
int3
push
sbb
add
mov
pop
xchg
in
pusha
sbb
shr
lock
xor
mov
pop
test
daa
out
pop
pop
dec
mov
mov
pusha
inc
push
hlt
fidivrl
mov
shlb
jecxz
add
mov
xchg
sub
popa
jo
sub
dec
cmp
dec
repz
aaa
inc
jb
stos
in
inc
jns,pn
hlt
xchg
cld
imul
cmp
xchg
int3
popf
mov
cwtl
sarb
xchg
outsb
loopne
mov
mov
push
ja
pop
addb
adc
push
sbb
pop
lea
pusha
out
pop
push
jbe
mov
lods
or
xor
dec
adc
add
aas
adc
and
shll
incb
dec
lahf
add
mov
imul
shr
in
mov
insl
push
mov
jp
and
outsb
or
jmp
inc
fstpl
cld
xchg
movsb
addb
xchg
pop
sub
in
arpl
pop
cwtl
xlat
fstl
stos
jecxz
mov
and
mov
pop
lret
inc
or
jo
jmp
popa
pop
cwtl
xchg
andl
lea
mov
jnp
sub
jmp
test
pop
jg
ret
mov
and
push
faddl
pop
inc
lock
sbb
or
lock
div
mov
test
jb
cmp
xor
es
dec
jecxz
loopne
xor
inc
popa
or
aaa
push
push
fs
adc
mov
stc
sbb
mov
fs
mov
cltd
mov
jnp
nop
sub
sbb
rcrb
push
lret
jae
cmp
push
call
je
mov
and
ficoms
xchg
xor
rcll
lcall
xor
push
addb
inc
cmc
jp
inc
insb
out
push
adc
ret
xchg
jg
add
push
enter
lahf
push
add
cmp
push
lret
or
mov
mov
mov
xor
sub
mov
rol
sbb
jno
aas
arpl
subb
or
gs
pop
mov
xlat
loopne
movsb
inc
add
test
and
sbb
inc
cmp
pop
cwtl
jae
dec
enter
insl
or
aad
sub
es
jg
lcall
mov
dec
test
insb
faddl
nop
cmpsb
movsb
mov
inc
test
add
mov
in
test
repz
addl
mov
dec
add
cmpsl
xor
dec
push
xchg
add
int
cmpsb
stc
dec
arpl
div
into
mov
ljmp
lcall
popa
scas
sbb
sti
jb
dec
outsb
xchg
push
inc
loopne
sbb
xchg
movsb
pushf
mov
or
sub
push
lret
lds
ficomps
lock
scas
or
push
xchg
cmp
push
mov
clc
cltd
jecxz
test
leave
outsb
mov
xor
iret
jnp
in
jne
test
fcomi
mov
stos
add
icebp
push
mov
lock
xchg
adc
fs
mov
cmp
mov
inc
sahf
inc
jp
shll
rorl
adc
add
inc
push
mov
mov
rorl
sbb
iret
cmp
ret
pop
push
ficoms
jnp
test
xlat
sbb
and
pop
fcomps
add
test
out
cmp
cmp
shl
sbbb
sub
nop
pop
inc
xchg
inc
movsl
mov
repz
test
cmc
jnp
cmpl
iret
pop
mov
je
into
shll
arpl
stos
adc
xor
mov
xor
loop
dec
jo
mov
jl
add
pop
jno
cmpsb
jge
rolb
xchg
adc
push
rorb
leave
pop
mov
fnstenv
xchg
jecxz
lea
lods
call
jbe
mov
lcall
mov
sti
bound
mov
jo
stos
cwtl
xlat
rcr
rorl
dec
pushf
cld
pop
cmovns
cmp
mov
xchg
xor
jl
dec
or
in
dec
notl
leave
mov
adc
pop
cmpl
popf
dec
add
cld
sub
jnp
sbb
loope
cld
push
fmull
xchg
ljmp
mov
adc
js
popa
test
mov
cmpsl
mov
scas
pop
and
adc
jnp
in
mov
divl
mov
mov
push
sub
mov
sbb
inc
cmpsb
push
inc
xor
and
xor
enter
rep
mov
push
call
sub
inc
mov
adc
mov
stos
pop
fildl
scas
dec
mov
jb
mov
jb
test
push
dec
dec
cmp
sbb
push
lahf
mov
nop
jns
pop
loope
cmpsl
jo
ret
ss
ret
or
pushf
push
pop
jp
jmp
xchg
lcall
push
fbstp
adc
mov
xor
rcrb
push
orl
mov
xchg
or
imul
incl
xlat
pop
sbbb
rcll
jo
mov
pop
push
ret
fildl
pusha
shll
fs
sarb
dec
adc
inc
mov
xor
test
inc
outsb
fwait
jl
adc
fwait
mov
add
inc
jns
and
pop
dec
cmp
inc
fldl
and
pop
mov
dec
lock
enter
xorl
pop
rol
fsts
sti
push
pop
xchg
dec
loopne
jbe
fdivrs
imull
das
or
arpl
push
jge
adc
push
lret
xchg
add
sahf
rcrb
subb
aas
insb
loope
sbb
nop
and
test
nop
sahf
in
dec
xor
and
mov
xor
push
jne
pop
push
pop
and
sub
ficomps
out
push
xorl
sub
mov
test
jle
inc
push
and
sub
xchg
ret
nop
test
sbbl
adc
xchg
add
lods
pop
ret
das
pop
xchg
adc
dec
jle
bound
add
sbbb
lret
pop
mull
sub
inc
das
ljmp
fsubrl
push
add
xor
sbb
popf
push
outsb
pusha
sub
in
jbe
or
push
aaa
mov
shll
hlt
xchg
lods
fisttps
loopne
jb
sub
mov
lods
push
push
mov
xor
aam
xchg
add
std
ret
imul
jg
stos
and
cmpsl
dec
jne
in
aam
scas
sbb
adc
xchg
adc
dec
adc
jecxz
test
into
xor
icebp
int
push
sti
ds
mov
cmp
out
dec
mov
fdivrs
aaa
sub
push
pop
shrb
add
xor
and
fdivp
push
and
pop
sbb
push
jecxz
or
imul
clc
sub
aaa
ret
or
mov
fbstp
loop
iret
outsb
in
sub
pop
in
jecxz
loope
imul
mov
inc
xchg
xor
ja
pop
inc
mov
inc
mov
dec
iret
add
insb
aam
mov
pop
pop
cwtl
popf
sahf
lods
mov
fcmovnbe
or
pop
cli
and
adc
int
stc
sbb
xchg
mov
je
fisubrl
frstor
bound
jge
cmpsl
lock
fstps
cmp
push
ja
xchg
sub
sub
pusha
jno
and
and
fcompl
das
mov
mov
pusha
clc
cld
rorb
daa
test
mov
jecxz
push
push
sbb
add
adc
xchg
fwait
aaa
jb
cltd
pop
pusha
in
pop
push
fs
out
loopne
inc
mov
je
inc
fistps
add
pusha
jp
push
and
jge
cmc
pop
push
mov
out
jge
add
dec
fisttps
and
inc
mov
mov
imul
jb
push
mov
movsb
outsb
loop
icebp
andl
pop
push
mov
sbb
aas
mov
xor
jmp
sti
je
shll
lock
xchg
adc
push
iret
adc
jmp
in
and
mov
ljmp
inc
out
mov
cmpsl
push
push
sub
mov
rcrl
subb
jp
imul
aas
jg
fiadds
xbegin
sbb
mov
nop
mov
hlt
cs
or
lret
pusha
test
adc
sbb
ja,pt
xchg
inc
sub
cmp
cmp
or
test
cmp
shlb
adc
jmp
add
lock
jb
sti
jmp
pop
test
add
dec
pop
adc
test
add
outsb
cmpsl
je
aam
iret
inc
cmc
mov
out
mov
jle
or
stos
negb
rolb
xchg
enter
repnz
std
movsl
movsb
jo
xchg
xchg
jbe
stc
imul
into
push
outsl
or
sti
mov
jbe
fwait
loop
cwtl
outsb
xlat
pop
daa
hlt
xchg
pushf
in
iret
cs
sbb
and
cmp
push
data16
jmp
pushf
adc
aaa
pop
ja
loope
push
test
rolb
imul
aam
gs
repnz
dec
pop
inc
dec
sub
out
dec
in
movsb
jg
cmc
cmp
insb
imul
mov
mov
aaa
das
cmp
jmp
jecxz
rorl
test
push
inc
ja
jbe
and
fimuls
stos
lcall
cld
jns
in
loop
xchg
mov
in
scas
scas
push
daa
arpl
shlb
adc
mov
sbb
pop
xchg
insl
repz
ret
fidivl
cmp
inc
bound
imul
push
and
push
pop
cmp
sbbl
push
push
in
aam
fnstenv
aad
pusha
xor
dec
jno
pop
inc
movsb
pop
imul
and
push
aas
daa
shl
dec
xor
pop
les
js
arpl
and
jno
test
mov
mov
outsb
xchg
inc
cmp
push
int3
xor
ret
outsl
sahf
fldcw
sbb
sbb
inc
aam
lret
stos
add
push
add
xchg
icebp
mov
in
mov
rolb
fisubrl
sub
jns
stos
pop
repnz
insb
sub
imul
imul
repz
fdivrs
xchg
and
xchg
sbb
jl
mov
cmp
icebp
inc
dec
bound
mov
add
loope
mov
xchg
leave
cmpb
xor
adc
in
jp
xchg
xchg
mov
jp
das
xor
adc
ret
movsb
shll
repz
mov
adc
pop
push
stc
or
nop
call
add
shlb
or
out
cmp
mov
popa
leave
xchg
decb
cmp
pop
test
out
loope
xor
scas
fwait
mov
jl
fdivl
lahf
mov
imul
cwtl
insb
sarb
std
mov
and
or
push
das
shl
sbb
insl
jo
sub
repz
sub
out
adc
movsl
dec
or
addb
sti
pop
sub
inc
push
mov
jno
rolb
pop
push
movsl
inc
sub
das
hlt
adc
and
imul
test
mov
aad
push
fnstsw
mov
ficomps
jmp
add
les
pop
arpl
lret
add
pop
stos
fists
aam
sub
and
or
sahf
rcl
sub
iret
sbb
pop
jnp
sub
movsl
lods
lods
add
adc
cltd
addr16
inc
adc
lret
aam
push
aas
inc
jne
add
js
mov
sbbl
aam
mov
dec
leave
mov
sahf
js
pop
sti
ror
rorl
xor
jge
es
pop
pop
mov
loop
ss
cltd
sub
inc
sub
test
jns
adc
xlat
jns
sub
arpl
push
roll
sub
outsb
dec
shrb
xchg
aad
cwtl
fisttpl
repz
cltd
inc
into
fimuls
xchg
dec
push
mov
in
nop
andl
and
mov
pop
jge
cmc
jecxz
xchg
inc
test
lea
in
cs
cmp
clc
jno
out
push
and
sarl
xchg
sarl
dec
mov
ret
lea
int3
data16
nop
mov
ficomps
rcl
test
dec
stc
fistl
xchg
hlt
pop
scas
jns
rcrl
sub
cmp
push
add
xchg
mov
iret
cwtl
inc
dec
loope
daa
loop
xchg
jp
dec
mov
filds
test
jb
push
decb
repnz
lahf
adc
pop
jo
pop
loopne
adc
push
add
cs
lds
jmp
fsubl
hlt
inc
out
or
ret
dec
cmp
inc
stos
xchg
and
mov
pop
ja
push
cmpsb
add
push
fistps
out
fildl
movsb
bound
dec
sub
out
mov
push
out
fsubrl
xchg
adc
rol
stos
js
stos
fstpl
xchg
mov
add
hlt
jl
or
pop
clc
arpl
dec
and
roll
cmp
xlat
pusha
cltd
sub
pop
sub
dec
imul
idivl
push
in
es
mov
lea
jecxz
mov
in
movsb
clc
jb
mov
jle
jae
fcmovne
enter
sbb
adc
adc
aas
pop
mov
push
xor
lahf
pop
pop
pop
inc
ljmp
lret
xchg
mov
push
mov
cmp
jno
cwtl
mov
push
push
sub
faddl
jle
jp
inc
xchg
mov
sbb
dec
cmpsb
adc
jecxz
sub
inc
adc
rolb
add
push
ret
fdivl
pop
cmc
pop
cwtl
int3
ret
xor
cmp
adc
jb
ja
ret
push
push
mov
jp
adc
dec
mov
cltd
pop
mov
mov
mov
ljmp
out
sbb
into
cmp
dec
inc
inc
pop
add
gs
hlt
out
mov
push
fidivl
imul
insb
pop
out
or
leave
ret
dec
mov
int3
xor
mov
xor
push
mov
fstl
andps
sub
mov
sub
dec
xchg
es
mov
pop
lods
test
sbb
xchg
dec
add
cs
out
int
mov
fldt
pop
or
dec
jg
pop
gs
mov
pushf
out
lcall
lock
popf
test
scas
aaa
and
push
cmp
adc
cs
int
dec
aam
mov
out
jo
push
popa
popl
ret
mov
lcall
dec
filds
push
loopne
xor
mov
xor
adc
imul
mov
mov
daa
push
aas
sbb
dec
sub
stos
cmpsb
clc
dec
icebp
fistpl
cmp
mov
push
inc
fiadds
out
es
dec
repz
add
sti
hlt
sub
jbe
mov
adc
push
and
icebp
cs
push
lahf
mov
mov
pusha
cmpsb
or
lahf
add
rorb
aam
andb
nop
scas
dec
mov
push
int3
pop
test
jg
push
cmp
inc
jmp
jne
dec
std
pop
test
fisubrs
xor
ja
test
shrb
mov
xor
nop
ret
mov
and
sbb
outsl
lahf
add
jno
faddl
jo
enter
fwait
in
adc
sub
out
mov
push
add
add
dec
cmp
xor
sbb
fwait
sahf
cs
scas
sbb
loopne
int
push
outsb
xor
add
pop
ret
fs
sub
mov
mov
out
inc
mov
shll
adc
aas
adc
mov
out
fwait
adc
jo
dec
test
les
ret
into
push
bound
testb
rorl
inc
scas
fdivl
push
push
add
out
pop
push
clc
inc
adcl
xchg
add
pop
adc
ret
fisubl
sub
lahf
xor
outsl
repnz
popl
dec
dec
lods
pusha
insl
pusha
fwait
sub
mov
in
mov
mov
mov
int3
int3
test
call
adc
mov
repz
adc
lret
in
lea
loope
cmp
jle
mov
push
adc
pop
and
loop
lods
nop
stos
sti
xchg
scas
int3
mov
imul
or
mov
das
adc
and
inc
mov
cmc
add
les
or
insl
test
mov
shlb
cwtl
lock
xchg
and
ds
inc
add
mov
add
jae
pop
or
in
sub
in
xor
or
pusha
lcall
shlb
jne
mov
outsl
mov
int
stos
nop
push
fucomip
std
enter
testb
fs
sbb
jnp
add
add
adc
aas
bound
out
fwait
inc
xor
imul
xchg
lods
sub
xchg
mov
mov
add
jbe
roll
popa
dec
mov
dec
in
xchg
sbb
pushl
scas
jecxz
pop
insb
jge
xor
repz
push
popf
out
cli
adc
dec
cmp
jnp
push
fmulp
mov
dec
cmpsl
mov
xor
clc
into
clc
push
sar
repnz
mov
lcall
inc
leave
add
cmp
mov
inc
sub
or
insb
fiadds
outsb
fidivrl
add
adc
and
hlt
push
cld
inc
call
scas
push
pusha
gs
cld
filds
push
stc
imul
mov
sbb
mull
inc
sub
outsl
pusha
mov
pop
mulb
pop
fcmovu
lcall
insb
add
stc
test
sbb
aam
sbb
mov
dec
mov
xor
or
stos
add
ss
cwtl
lock
lret
push
daa
xchg
xchg
pop
push
movsl
adc
sahf
test
pop
adc
add
movsl
and
jnp
idivl
scas
mov
in
hlt
dec
stos
ficomps
mov
mov
push
add
xor
pop
pop
sbbb
outsl
ss
imul
xchg
subb
lods
mov
push
bound
add
inc
mov
or
jp
sbb
and
repnz
mov
imul
lds
lret
cmpsb
and
mov
add
or
iret
mov
mov
cs
jnp
push
mov
lcall
das
repnz
out
je
ja
rolb
jle
mov
add
sti
test
icebp
movsl
repz
jmp
mov
popf
and
repz
dec
and
loopne
divl
out
cld
sub
movsb
icebp
call
jp
scas
cmp
pop
or
ret
xor
xchg
jmp
hlt
dec
cmpsb
std
sub
lds
inc
mov
xchg
sbb
imul
stos
jecxz
test
test
dec
sub
mov
mov
loope
pop
in
add
inc
add
mov
aas
mov
sub
les
xchg
clc
int
in
not
subl
test
ja
or
or
mov
lret
cmp
inc
rcll
adc
xor
dec
rcl
mov
sbb
and
push
push
stos
sbb
movsl
xchg
jns
xor
int
aam
pop
sbb
movsl
call
sub
div
insb
ss
ss
xchg
or
sbb
sub
sbb
insl
or
out
decl
nop
repnz
aam
jmp
mov
mov
clc
dec
inc
cmc
pop
xor
jae
pop
dec
in
in
lahf
sbb
ss
incb
stos
and
adc
add
push
lds
mov
mov
leave
xor
jbe
jle
cmpsb
or
mov
out
test
fisttpl
lret
sub
lock
jg
jno
in
mov
popf
mov
add
repnz
pop
mov
mov
pop
mov
arpl
out
data16
push
mov
jmp
push
xor
add
mull
arpl
dec
ljmp
lahf
inc
cmc
inc
loope
mov
sub
add
add
xor
ret
mull
daa
or
std
movsb
jb
push
xor
jg
pop
bnd
xchg
push
pop
stc
or
lods
lds
sbb
ret
sbb
push
push
or
sbb
divb
addr16
xlat
hlt
adc
nop
xchg
sbb
sub
daa
mov
and
inc
cmp
lret
lret
cmc
mov
movsl
jbe
mov
and
aas
pop
push
aad
ud1
dec
movsl
fisubs
fistpll
lret
jp
jne
addl
fcmovnb
test
pop
and
adc
fnstcw
mov
jnp
add
mov
mov
add
cs
xchg
jo
pop
loope
adc
out
outsl
insb
add
inc
mov
addr16
sub
xor
or
fnstcw
and
or
out
icebp
dec
mov
jb
aad
dec
cs
sbb
cld
push
insb
adc
pop
mov
pusha
mov
out
sbb
add
icebp
ficoml
mov
rcrl
mov
adc
pop
cld
out
sbb
cmp
push
sbb
mov
fnsave
pop
mov
push
pop
cmp
jb
imul
xor
mov
mov
xchg
or
push
push
pop
pop
fmuls
jg
sub
scas
xchg
mov
fsubrs
jae
push
push
in
imul
nop
sbb
inc
dec
fprem
sbb
into
out
inc
mov
ror
mov
mov
jge
xchg
dec
mulb
ljmp
push
xchg
test
or
es
push
sub
adc
nop
loop
lret
mov
fwait
adc
jp
adc
and
out
int3
movsb
inc
mov
in
les
and
xor
cmpsl
dec
dec
jl
mov
pop
fcoms
and
pop
subps
push
push
testl
jl
fsts
and
xchg
mov
js
xchg
jae
imul
es
dec
push
mov
jnp
push
out
jp
leave
jbe
mov
xchg
popa
push
cmpsl
in
mov
in
in
fbld
cld
jo
test
dec
repz
lods
jecxz
push
outsl
in
movsb
jne
enter
mov
mov
cs
test
popf
push
js
xchg
mov
ss
leave
fs
jo
mov
mov
push
mov
pop
sbb
or
cmp
mov
ret
cmc
mov
out
stos
loop
repnz
adc
lock
ret
je
jne
inc
cmp
pushf
mov
jmp
into
jl
xor
insl
daa
lahf
stos
lahf
cmp
outsb
addb
ret
mov
add
xchg
adc
pop
das
sbb
mov
sub
or
pop
sub
shl
fucomip
out
xchg
xor
pop
mov
xor
das
sbb
fcoml
xchg
pop
add
frstor
pop
shrb
popa
mov
sbb
fisubrl
negb
sub
rcr
cld
ret
sub
xor
adcb
push
add
mov
xlat
xor
rorb
dec
mov
inc
ficomps
das
xor
dec
push
xchg
pop
hlt
repz
cmp
in
mov
outsl
xchg
pop
orb
aam
inc
scas
hlt
addr16
test
ret
cld
and
xchg
xchg
xchg
pop
das
in
mov
inc
jno
sbb
int3
call
test
push
mov
pushf
shrl
cmpsl
pop
dec
push
shlb
xor
shlb
cwtl
imul
jnp
lahf
mov
push
or
inc
roll
mov
add
inc
push
and
cmp
add
lret
cwtl
cmp
mov
xor
clc
cltd
pop
dec
test
out
testl
lods
mov
in
or
push
les
xor
stos
cmpb
mov
fs
adc
pushf
mov
inc
cmp
and
fcomps
in
insl
js
jae
dec
sti
sbb
mov
add
or
xchg
cwtl
cmc
lret
iret
add
test
fnstsw
xor
aad
pop
shrb
push
icebp
sub
pop
or
adc
iret
insl
cs
test
adc
push
jae
mov
xor
test
subl
test
pop
inc
dec
test
cld
sub
adc
cs
in
fstpt
fwait
mov
lret
test
xchg
lea
test
jmp
call
mov
fdivs
pop
cmpl
outsb
lea
and
test
adc
xor
jne
lea
mov
jecxz
lret
pusha
push
xchg
xor
mov
cld
pop
stos
gs
adc
adc
fmulp
mov
mov
dec
js
sbb
or
out
cltd
nop
orl
dec
test
iret
sub
int
test
fldt
adcb
idivl
cmp
loopne
pop
jns
or
xlat
xchg
pusha
sbb
xor
fiaddl
jle
lcall
xor
fsubs
ret
stos
hlt
cli
loop
inc
push
xchg
inc
adc
arpl
shrb
fdivrl
mov
dec
mov
jmp
mov
push
int
push
or
jbe
push
mov
push
adcb
and
mov
outsl
scas
xor
inc
push
sub
movsb
inc
arpl
or
xchg
mov
push
fistpll
pop
iret
mov
cmp
jne
shl
adc
lds
sub
adc
mov
push
rorl
call
jns
jbe
xchg
jle
or
adc
xchg
add
idiv
mov
cld
ret
cwtl
adc
divl
add
mov
or
ret
ret
xlat
inc
dec
pop
lea
out
inc
mov
jns
fs
lock
repnz
push
jb
bound
mov
push
call
or
sbb
jp
or
clc
iret
scas
fimull
or
cltd
xchg
jle
cmp
add
das
jle
jg
inc
aad
jns
into
imul
adc
mov
fnstsw
cmp
push
loopne
push
adc
mov
pop
xchg
fsubrp
add
bound
dec
lods
gs
sahf
fwait
dec
lds
mov
push
adc
push
popf
adc
cltd
stc
int3
mov
mov
fbstp
outsl
dec
ds
iret
les
pushf
lds
push
xchg
pop
arpl
cmp
and
cmc
adc
and
jns
fidivs
shll
xor
adc
or
inc
outsb
lods
mov
pop
jnp
jnp
xchg
sub
ja
decl
mov
xor
gs
mov
es
out
jl
add
xchg
xchg
pop
enter
and
ret
mov
sahf
push
iret
lea
xor
inc
stos
lret
pop
xchg
pop
cld
push
cs
jl
mov
insb
pop
arpl
test
jo
test
std
mov
inc
aam
mov
jecxz
mov
pop
sbb
xchg
rcrl
in
or
mov
inc
and
dec
cmp
fwait
mov
push
adc
mov
mov
inc
jp
pop
pushf
ffreep
in
adc
call
rcl
hlt
mov
clc
pop
dec
aad
lock
nop
xor
fidivrs
push
rcrb
pcmpgtb
jne
jle
rcrb
call
push
push
mov
ljmp
les
push
lods
or
push
xchg
push
mov
fnstsw
xchg
fstpt
out
sub
mov
mov
lret
nop
pop
gs
and
test
nop
xor
test
dec
xchg
push
rol
int
mov
ds
fnstcw
pop
jge
insl
jae
lock
cmpsl
dec
jbe
push
adc
jbe
xchg
in
push
xor
sub
cltd
cmp
inc
test
jg
mov
clc
sub
jns
add
and
inc
aad
and
pop
orb
mov
jecxz
loope
cmp
push
push
mov
add
data16
or
les
sub
add
xchg
rcll
or
imul
push
inc
popa
js
addr16
or
cs
neg
mov
add
fwait
jno
out
cltd
ror
dec
adc
xchg
imul
push
xor
adc
or
cmpsl
or
lods
jle
inc
orl
inc
mov
adc
cmpsl
sbb
add
push
cli
jmp
push
jmp
mov
gs
ljmp
cwtl
out
test
xor
out
or
inc
jl
adc
aad
or
ret
sub
jmp
sbb
push
loope
push
push
inc
daa
out
sarl
imul
xchg
adc
movsl
jno
iret
cmp
jp
sbb
mul
mov
xchg
xchg
sub
sbbb
pop
adc
orb
call
pop
notl
loopne
pop
or
cwtl
test
push
jl
cmpb
xor
rol
int
add
xchg
mov
mov
daa
xlat
mov
adc
sub
mov
inc
std
pop
mov
aam
pop
loope
dec
dec
pop
dec
popa
push
cmp
jle
mov
inc
mov
pop
sbb
fwait
sti
fxch
rolb
lcall
sahf
sbb
and
push
lods
push
xor
push
scas
mov
inc
stos
push
jg
je
in
mov
test
xchg
pop
subb
popf
out
pusha
mov
notl
fdivrs
inc
and
push
jnp
data16
lods
popf
test
addr16
stc
sahf
adc
xlat
adc
adc
jmp
sbb
movsb
es
cmpsl
or
sti
out
int3
pop
xchg
pusha
inc
mov
inc
mov
sub
lds
mov
imul
and
ds
pop
mov
inc
cmp
sbb
fldcw
mov
ljmp
xchg
jb
jne
mov
int3
imul
fwait
dec
pop
mov
push
and
pop
inc
test
fistps
les
or
mov
push
sbb
mov
sbbl
xor
cmpsl
mov
dec
push
repz
push
and
mov
add
pop
jbe
xchg
fmul
test
pop
loope
insl
pop
mov
fldenv
imul
adc
outsl
iret
out
push
shr
ret
and
bound
push
jno
xor
sbb
push
pop
cli
xchg
loope
mov
push
dec
mov
xor
dec
ficomps
jnp
lcall
dec
jl
jle
lods
adc
scas
push
mov
in
addr16
sbb
insl
mov
push
push
mov
ja
xchg
xor
push
ffree
pop
ror
push
std
lret
mov
loope
cld
jae
push
fmul
orb
pop
jb
sbbb
outsb
push
fs
push
arpl
xor
pop
cmp
out
aas
ret
push
int3
lock
cli
daa
pop
cmpsl
jns
aam
jle
push
mov
or
enter
lods
outsb
sub
add
push
sbb
or
push
jg
popa
push
cmc
push
xor
mov
inc
sub
jae
pushf
jne
or
dec
cmp
xchg
push
xor
jnp
call
dec
cmp
mov
in
imul
xchg
lahf
push
mov
out
imul
jns
lahf
ss
cmpl
jg
shll
mov
insb
repz
pop
rcl
sub
mov
lret
or
loopne
mov
test
mov
xor
pop
sbb
rol
cld
std
das
fs
pop
idivl
pop
inc
xchg
cs
jg
and
lret
fnsave
lods
push
xor
sub
dec
push
mov
cli
mov
cld
mov
mov
dec
aaa
mov
jge
add
pop
dec
mov
sbb
cltd
cld
lea
mov
repz
sbb
sti
ja
mov
mov
jae
and
jp
out
ljmp
cmpsb
loopne
mov
test
pop
mov
jb
or
sbbl
js
movl
rcl
es
imul
outsb
mov
xchg
mov
scas
and
adc
pop
out
cmp
push
xchg
pushf
int
cmp
fildll
pop
insb
rorb
adc
pop
and
pop
pop
dec
sbb
push
rclb
mov
mov
sbb
call
ss
pop
xchg
add
mov
push
leave
mov
cmp
pop
inc
mov
dec
jle
mov
pusha
popf
mov
loopne
enter
and
mov
mull
in
int3
and
adc
push
jmp
in
rclb
mov
jmp
mov
into
sarl
ss
xchg
pop
xor
aam
int3
scas
and
xchg
ds
test
jle
std
push
int3
lret
dec
pop
lock
jmp
mov
out
leave
arpl
push
jbe
ss
fidivs
dec
cli
or
mov
arpl
mov
mov
xor
push
ds
outsl
into
add
rclb
cltd
aad
adc
dec
rorb
dec
xlat
hlt
aaa
popf
cmc
fisttps
xor
pop
push
ds
das
add
add
mov
mov
setb
pop
flds
mov
xchg
stos
mov
inc
xor
cmc
add
mov
push
dec
iret
aad
mov
adc
add
dec
movsl
jae
push
ret
cltd
enter
jb
mov
add
and
pop
jmp
js
jbe
ljmp
push
sub
out
test
loope
aas
cli
hlt
stos
mov
add
sub
mov
cmc
aad
into
popf
mov
xchg
std
cmp
xchg
fsubp
insb
lods
pop
insl
cmp
ret
mov
shr
adc
sbb
mov
push
dec
int
xchg
cli
push
inc
movsl
loopne
jnp
les
xchg
sbb
das
push
sub
cmpsl
popf
xchg
jns
movsl
xor
jp
fsub
push
xlat
xchg
shrl
inc
jle
mov
pop
or
imul
pop
dec
out
insl
lds
xor
repnz
mov
mov
push
and
and
int
mov
mov
es
cmp
inc
inc
dec
ss
jno
popa
lret
sub
loop
push
xchg
loop
mov
mov
jbe
and
jl
and
insl
lahf
xchg
add
mov
lods
push
icebp
add
mov
adc
scas
lock
cli
cmpb
sbb
xor
push
push
dec
push
leave
mov
imul
and
sub
ljmp
add
or
aaa
fs
xchg
pop
mov
mov
xchg
divb
jbe
inc
js
lahf
sgdtl
divl
sub
sub
xchg
dec
loop
fwait
mov
enter
cli
popa
mov
jge
into
xor
fwait
adc
rcr
cmp
push
shlb
push
ljmp
mov
enter
iret
popa
jge
dec
push
mov
out
es
mov
aaa
jg
insl
js
test
leave
lea
xchg
jmp
and
scas
aad
inc
insl
mov
and
repz
les
xchg
ja
inc
lods
push
add
pop
enter
cmp
or
mov
jne
and
int
jle
mov
xchg
cmp
push
pop
sbb
sub
loop
lods
testb
jle
das
repnz
and
add
xchg
jmp
in
rclb
aad
outsl
dec
push
ja
push
or
mov
hlt
divl
mov
inc
xchg
fdivl
cmc
pop
in
pop
out
xor
and
pop
loopne
lds
adc
or
repnz
xchg
aas
jle
test
jns
push
mul
lods
imul
inc
push
test
lods
push
sub
mov
jle
and
add
jnp
push
mov
jno
inc
inc
fbld
pop
mov
ja
push
stos
adc
lods
and
aaa
mov
lret
xchg
fldenv
test
pusha
mov
repz
out
bound
add
shrl
jo
sbbb
lock
push
xchg
xchg
jmp
mov
mov
test
push
sbb
sbb
orl
push
rcl
xor
mov
popa
fucomp
sbb
xor
test
inc
or
test
inc
daa
pop
fcoml
clc
mov
and
ds
jmp
pusha
jne
add
ffree
xor
cmp
popf
pop
cmc
out
shrb
cwtl
or
mov
and
fsts
sbbb
mov
lods
and
push
outsl
push
int
pop
insl
in
jno
bound
sbb
cltd
xorl
mov
das
sub
xchg
std
push
aad
mov
and
shrl
xchg
add
sbb
push
loopne
jbe
outsl
push
xor
add
jle
mov
test
in
sahf
add
fildll
push
xchg
add
lahf
pop
or
int
shr
and
inc
mov
and
adc
fbld
adc
sbb
mov
inc
jnp
adc
push
push
lock
sub
insl
push
add
das
inc
cmp
lret
icebp
ret
lods
sub
dec
sahf
push
cmp
or
adc
in
pop
dec
lret
int
push
insb
xchg
adc
insb
and
sbb
pusha
fwait
xor
scas
mov
or
dec
sbb
cmp
pop
jmp
pop
popa
jl
sbb
mov
mov
lret
lods
cs
pop
pop
aad
fisttpll
jnp
xor
les
and
mov
loop
fwait
pusha
outsl
test
push
lahf
mov
jo
cld
push
mov
mov
push
ja
jne
scas
pop
leave
mov
xchg
adc
xchg
inc
fldt
fistl
sub
or
lret
ss
pop
push
inc
mov
lds
fistps
das
inc
cmp
cmp
ss
fimuls
cmp
scas
inc
and
add
mov
xor
jge
and
and
inc
or
xchg
fsubrs
daa
clc
stc
lcall
mov
into
dec
jecxz
rorb
cmp
in
mov
xchg
jo
or
mov
push
pop
adc
push
call
movsb
lahf
movsl
xchg
imul
pop
and
cmp
imul
or
dec
lahf
movsb
add
out
lret
or
cli
push
hlt
or
cmpsl
lods
pop
or
loope
fistpll
dec
xor
shlb
sbb
loope
mov
pusha
pop
and
fisttps
cmpsl
mov
pop
sbb
inc
testl
into
in
and
xchg
or
fists
and
push
iret
jecxz
in
jge
aaa
pop
push
mov
sub
add
fidivl
std
mov
dec
ret
mov
iret
adc
pop
out
loopne
jb
mov
repnz
dec
movsl
sub
add
insl
popf
lods
aam
jge
fisubs
dec
adc
insl
in
pop
jns
les
adc
cmpsb
pop
gs
gs
xchg
out
xor
mov
inc
lahf
mov
bound
push
pop
ds
cmpsl
outsl
pop
sbb
out
cmp
jl
inc
xchg
dec
mov
clc
xchg
mov
testl
mov
and
push
iret
cmp
int3
idiv
push
addr16
lea
push
mov
inc
in
cmp
mov
lahf
rorb
pop
loope
dec
mov
xchg
adc
or
inc
stc
repnz
mov
jo
and
enter
jnp
xchg
rcrl
jecxz
mov
mov
pop
push
stos
faddl
imul
jns
add
adc
leave
das
mov
stos
inc
imul
sahf
shl
std
and
scas
sub
scas
addr16
test
lahf
pushf
cmp
sbb
repz
inc
cmp
xchg
xor
mov
stc
pushf
call
or
xchg
xchg
mov
cld
fmul
pusha
pop
shrb
push
mov
lea
mov
andl
dec
jae
lock
andl
cmp
cwtl
inc
test
sbbb
test
js
fildll
xor
add
aaa
sub
xchg
add
fidivl
xor
rcll
mov
pop
stc
fcmovb
xchg
mov
and
es
jne
mov
cmp
pop
sub
xlat
cmc
push
pop
repz
or
push
test
pusha
xlat
add
movsl
cwtl
into
pop
xlat
sahf
repz
inc
and
mov
sti
fistps
and
jecxz
sub
in
js
cwtl
loop
mov
je,pt
addr16
lcall
xor
fdivl
sub
adc
sbb
sbb
dec
gs
jmp
inc
inc
xchg
mov
add
or
lds
js
pop
mov
push
xchg
cmp
in
mov
pop
lret
jg
sti
aam
jge
jge
jbe
jae
loop
cmp
sbb
xchg
cltd
mov
sub
mov
loop
adc
std
and
enter
xorb
das
cmp
ss
and
push
mov
xor
pop
fst
lock
mov
add
pop
mov
aas
jbe
xor
mov
or
push
or
xlat
xor
test
pop
jecxz
outsb
mov
icebp
loope
push
sub
das
sub
dec
cmc
sub
adc
xchg
inc
add
inc
cmpsb
push
mov
xor
xchg
cltd
xchg
jno
jnp
mov
xor
xorb
mov
ss
jle
lods
inc
cmp
xor
pop
outsb
inc
aam
xor
dec
or
stos
adc
in
cmp
pop
jp
push
incl
lahf
or
pop
or
xchg
int
push
and
mov
xor
enter
mov
mov
ret
jge
fwait
and
dec
out
icebp
and
push
ds
pusha
pop
lret
fistl
adc
les
pusha
fstps
imul
notl
and
mov
push
stc
and
int3
ret
add
movsb
pop
sbb
or
out
ljmp
jae
je
sub
lret
daa
in
faddp
and
pop
das
sbb
jbe
lret
in
leave
dec
mov
in
fsubs
xchg
fistpll
xlat
pop
fsubs
mov
hlt
fsubrp
jp
insl
into
cmpsb
pop
js
cmp
shlb
push
pop
mov
stos
jp
mov
jns
cmp
int3
inc
fstp
push
xchg
push
push
add
xchg
hlt
xor
push
pop
cli
push
pop
out
cmp
pop
imul
dec
cmp
sbb
add
cwtl
cmpsl
aaa
movsb
mov
dec
lods
out
dec
adc
mov
sub
std
ja
out
xchg
cltd
lret
cmp
xchg
jp
inc
rcll
jl
pop
mov
lahf
sbb
mov
stos
inc
lret
mov
mov
out
movl
sub
and
mov
pop
das
fmull
je
cmp
fwait
jno
out
push
sbb
push
inc
popa
adc
push
inc
push
push
lods
test
xchg
mov
lret
icebp
ret
mull
push
stc
lahf
jecxz
inc
rclb
mov
and
mov
les
pop
mov
xchg
xor
in
jne
rcrl
mov
xchg
jbe
push
dec
addr16
push
jae
js
and
or
jle
and
pop
pop
leave
push
int3
or
mov
push
xchg
std
stos
pop
filds
insl
xchg
add
roll
push
push
xchg
mov
out
fimull
test
and
pop
add
addr16
mov
xor
xchg
mov
push
dec
pop
ret
push
add
add
mov
rcll
or
divb
outsl
outsl
xor
imul
stc
pop
jb
xchg
ret
test
popf
imul
sub
sbb
or
into
push
rep
loopne
mov
jmp
and
mov
inc
sub
push
daa
data16
clc
out
mov
ja
bound
loop
adc
mov
rcrl
jg
jb
das
adcl
xchg
xchg
les
pop
out
pop
rorl
sarb
jo
sub
leave
sahf
sbb
mov
sahf
push
les
mov
scas
fildl
mov
pop
add
shl
xchg
push
sub
pop
or
adcl
inc
std
shl
repz
nop
mov
arpl
daa
ljmp
dec
aad
pop
cmp
arpl
or
pop
aad
loop
pop
movsb
xor
pushl
or
adc
pop
jge
daa
pop
pushf
add
inc
mov
sbb
xchg
out
or
pop
mov
lahf
mov
cmpsb
shll
cli
insb
jns
jno
fisubl
push
or
inc
repnz
orb
push
jo,pt
and
cltd
idivl
out
xor
es
ljmp
jp
mov
jle
std
into
popf
xor
jle
repz
mov
mov
hlt
test
xor
cmp
out
stc
sub
mov
push
movsb
inc
mov
adc
xor
push
pushf
mov
mov
and
mov
in
push
into
mov
int3
popf
dec
cmp
psrlw
add
movsl
mov
rclb
bound
sub
outsl
inc
iret
cmp
cmp
sub
xor
sbb
and
dec
sub
add
push
and
pushf
ja
dec
cli
add
cmpb
sbb
loop
loop
mov
out
loopne
cs
lods
mov
sub
cs
and
popl
lock
and
or
xchg
pop
les
jl
les
adc
fnsave
loope
mov
lret
aas
popf
hlt
aam
in
mov
insl
mov
hlt
imul
imull
loope
addr16
or
adc
sbb
sbb
aam
jle
xchg
mov
in
mov
outsl
mov
shlb
dec
mov
out
xchg
dec
push
mov
pop
xchg
filds
dec
mov
add
and
pop
push
xor
sbb
add
cmp
ss
out
push
xor
adc
icebp
xchg
andl
fidivs
fsts
fdivrs
or
cmp
mov
sub
loopne
sub
es
add
sub
or
lea
imull
and
mov
mov
aas
push
iret
pusha
push
xor
dec
adc
addb
stos
mov
fistl
cltd
cmc
scas
mov
mov
flds
cmpsb
outsl
push
sub
setge
or
mov
neg
sub
mov
scas
ret
xlat
ret
mov
jecxz
mov
roll
jae
and
jp
pop
cwtl
leave
mov
je
add
inc
dec
mov
imul
rcr
popf
xchg
inc
xor
cmp
adc
out
icebp
into
dec
cwtl
jnp
mov
clc
or
pop
and
fwait
clc
cli
test
lods
pop
stos
push
or
mov
in
pop
js
shrl
push
movl
std
jle
aad
xor
repz
mov
hlt
push
std
dec
in
pop
push
loopne
movsl
pop
daa
test
inc
xchg
push
sbb
int
add
int3
shr
sbb
stc
fmuls
js
sub
cmpsb
fwait
push
je
and
out
ret
and
lret
sub
fldt
popl
xor
fcomi
push
test
dec
jnp
outsb
xor
repnz
call
mov
cmpsl
out
cld
aas
sub
add
sti
mov
pop
add
jmp
pusha
and
and
lock
leave
iret
inc
stc
xadd
xor
mov
xor
stc
xchg
ss
jl
sub
add
dec
inc
cmp
idivb
push
mov
sub
sbb
push
dec
inc
lods
add
sub
mov
and
lock
aad
jnp
mov
movsb
adc
cld
je
xchg
ljmp
shrb
xor
js
push
test
mov
gs
mov
movd
mov
movsl
mov
aaa
test
repz
jbe
jns
lea
push
adc
jno
frstor
jg
jns
lret
call
sbb
cld
push
lods
fidivrl
cmp
lods
sbb
out
dec
pop
sbb
adc
outsb
or
popa
test
cmpsl
pop
push
push
dec
outsl
jno
lfs
pop
fs
mul
mov
outsl
cld
test
mov
pushf
sub
jmp
mov
mov
sub
jp
pop
dec
das
dec
jbe
repz
imul
mov
hlt
sti
xchg
or
test
scas
and
xor
sbb
lock
sbb
mov
xchg
dec
clc
add
dec
loop
and
or
ljmp
fnstsw
test
gs
mov
push
std
xchg
add
and
fs
xchg
mov
loop
push
mull
jnp
inc
mov
fistps
arpl
andl
jbe
pop
jle
push
lods
std
imul
insl
add
push
xlat
test
mov
sbb
and
push
mov
dec
or
imul
cmp
arpl
xor
iret
das
sub
roll
lds
lcall
out
lret
mov
repnz
repz
lock
bound
outsb
addr16
aam
push
push
sbb
jle
das
add
add
mov
adc
jnp
pop
ljmp
mov
xor
insl
push
inc
and
inc
push
das
mov
subb
jns
testb
movsb
mov
mov
jo
scas
shlb
jb
lret
repnz
add
stos
fisttpl
idiv
mov
sub
incl
xchg
push
push
pop
fidivrl
cld
sarb
jle
jbe
push
dec
xlat
shll
dec
xor
jle
sbb
test
inc
xor
or
jl
pop
fwait
xor
mov
mov
ficoms
push
sub
cmp
add
ret
or
mov
daa
inc
rcl
pushf
sub
repz
ds
orl
pushf
push
xlat
cmp
out
enter
xlat
sub
not
cmpsb
sub
jge
pop
int
pop
je
and
xor
dec
dec
jg
inc
cmpsb
push
mov
enter
mov
mov
push
cmp
jecxz
cmp
or
sub
scas
insl
setae
popa
mov
mov
aam
daa
scas
sub
les
movsl
or
sub
xor
addb
test
sti
js
fdivp
inc
iret
js
pop
jmp
pop
push
cmpsb
push
cmp
push
inc
jg
je
and
popa
mov
imul
jmp
lahf
cmp
adc
mov
jmp
xchg
loope
imul
bound
jmp
xchg
popa
je
push
nop
push
mov
popl
fxam
scas
clc
cmpsl
in
lahf
pop
movsb
daa
or
and
dec
xchg
inc
mov
lock
jle
repz
mov
dec
lea
jb
xchg
push
es
clc
mov
out
mov
jmp
insb
cmp
nop
adc
out
repz
sbb
in
dec
sbb
lods
jmp
sbb
mov
and
or
dec
int3
and
inc
mov
in
xchg
inc
jge
xlat
ss
sbb
loopne
fistpl
mov
dec
xchg
lock
xchg
jo
xchg
mov
cmp
fimull
out
test
add
cmpsl
bound
data16
in
add
xor
jns
push
aad
xor
insl
stos
and
jb
stos
push
mov
jmp
cmp
imul
aaa
push
cmc
sub
adc
xor
dec
inc
idivb
push
add
test
lods
cltd
enter
es
xlat
js
loope
out
lahf
stos
mov
xchg
push
push
push
rcrl
push
std
cltd
mov
ficoms
xor
insb
in
add
out
mov
in
xor
daa
xchg
rolb
or
adc
inc
pop
flds
or
cmp
outsb
test
and
sti
mov
jecxz
shrb
icebp
test
dec
inc
daa
xchg
inc
jbe
and
sub
in
repz
out
je
movsl
fmuls
or
jnp
mov
or
std
sbb
add
jnp
insb
jb
xor
hlt
mov
dec
popf
pop
cld
jecxz
xor
mov
movsb
inc
insl
xor
dec
lds
lods
mov
daa
test
icebp
mov
clc
jbe
inc
mov
mov
testl
ds
inc
mov
dec
dec
mov
cmp
push
rcrb
push
jne
mov
push
mov
je
outsb
or
lcall
es
pop
subb
in
mov
sar
out
and
add
pop
or
fstpt
push
mov
pop
sbb
sbb
cld
push
in
xchg
les
dec
push
fistpl
roll
or
xor
scas
fs
add
mov
or
lahf
loop
rorb
lds
imull
ljmp
in
popa
jb
sub
idivl
aas
cmpsb
mov
stos
cld
loopne
nop
decl
mov
cmp
mov
aam
xchg
sub
push
andl
cmp
pop
adc
js
xor
cmp
out
or
call
out
mov
push
rorl
lock
pop
call
push
repz
dec
or
test
stc
repnz
outsl
lock
jno
cmp
jecxz
push
xchg
mov
test
mov
cli
fildll
rorb
lret
push
xor
jge
sti
pop
inc
cmpsl
add
inc
pop
sbb
icebp
mov
adc
rcr
push
adc
stos
add
adc
ficoml
dec
cmc
in
cmpb
test
mov
in
test
dec
push
outsb
xchg
cmpsl
lret
xlat
movsb
xchg
push
aas
add
daa
adc
mov
adcl
push
pop
dec
sti
inc
jne
movsl
cmp
jle
and
cmp
xor
mov
xor
cmp
dec
cmp
push
cltd
cmp
adc
or
xchg
pop
aad
and
pop
icebp
lods
xor
cmc
subb
mov
loopne
dec
jge
push
das
jl
fstps
test
call
mov
popa
sub
rorl
jp
fistps
fs
pop
inc
jg
cmp
stos
lock
call
daa
outsb
ficoms
popf
add
or
sub
pop
or
push
scas
adc
aad
sarl
jg
movsl
xor
pushf
mov
out
cmp
adc
and
fadds
jle
ror
sbb
addr16
inc
or
addb
sub
xor
stos
or
mov
add
jle
pop
aad
inc
mov
pusha
popa
fmulp
xchg
lret
lds
mov
lods
insb
inc
ficoml
scas
or
or
sahf
mov
sub
pop
mov
add
adc
loopne
neg
pop
xlat
popl
xchg
ds
pop
mov
dec
xchg
cwtl
iret
aas
gs
inc
int3
mov
jp
xchg
shll
and
es
stos
addr16
in
lcall
jno
fadds
jmp
and
addl
arpl
shll
jmp
icebp
jg
pusha
and
sub
fadd
sbb
push
pop
fdivrs
leave
sarl
xor
fisttps
insb
mov
mov
cli
jp
mov
dec
rorl
xor
xor
cmp
outsl
out
roll
jae
icebp
and
fcompl
add
in
shrb
or
jg
lock
cs
ds
inc
sahf
dec
int
outsl
fs
cld
jbe
fbstp
pop
mov
in
ss
pop
notb
dec
cli
gs
and
sbb
dec
arpl
sahf
mov
lods
push
sahf
stc
mov
inc
push
and
or
mov
sub
mov
cmp
dec
sub
pop
mov
push
je
xchg
jmp
clc
mov
pop
jns
outsl
lcall
push
lods
jmp
out
js
out
inc
and
loopne
sti
mov
stos
or
sub
je
add
xchg
repz
adc
cmp
push
adcb
imul
and
fwait
lods
mov
test
cmpsl
inc
and
js
dec
inc
add
and
and
pop
lock
inc
lock
xor
ss
fildll
ds
out
movsb
sbb
or
sbb
in
into
nop
call
fcoms
cld
cltd
shlb
sbb
cmp
mov
xchg
jmp
jbe
mov
push
push
mov
lret
int
aas
mov
shl
fisubl
add
rcrl
rep
mov
movsb
loope
insl
lcall
sarb
hlt
jge
sub
mov
lock
loopne
enter
lret
push
in
jno
pop
rorb
aaa
adcl
out
iret
xor
sbb
inc
mov
mov
jl
push
xchg
mov
inc
cld
leave
sti
sbb
cmp
jecxz
sub
xor
xchg
pop
dec
das
lods
scas
sti
mov
adc
adc
loopne
arpl
rcll
stos
xor
mov
mov
lahf
ficoms
sarl
jne
jnp
testb
scas
mov
lahf
mov
dec
sarl
cmp
sub
loop
aad
xchg
in
insb
xchg
xchg
pop
inc
cmp
repz
dec
ds
lret
int
out
mull
add
inc
mov
icebp
ret
sbb
int3
mov
lea
sub
cld
push
repz
mov
mov
or
jp
test
cld
adcl
sub
iret
popa
sub
and
mov
ror
stc
jae
sub
aad
cmp
inc
rcll
xchg
jbe
and
inc
and
addl
dec
dec
in
xor
mov
sbb
in
rcr
add
sub
push
push
stc
and
sub
cs
jne
mov
in
xor
scas
push
push
subb
mov
stos
jo
dec
je
xor
xor
int
push
insl
orb
aaa
idiv
jno
dec
jge
lock
add
mov
mov
hlt
lods
sbb
lcall
push
lahf
fs
xchg
adc
cmp
mov
xchg
inc
pop
aas
xlat
scas
lds
repz
es
pop
push
es
shll
xchg
sub
movsl
popa
mov
or
push
mov
xchg
ret
inc
imul
push
mov
dec
outsb
aam
dec
or
sbb
mov
jns
inc
in
sub
lret
movsl
xchg
adc
lea
jae
mov
cmc
je
adc
adc
daa
dec
ja
xor
push
ss
xchg
test
dec
popa
xchg
push
adc
xchg
rorl
inc
dec
daa
loop
pop
test
inc
and
fiadds
mov
or
orb
incb
sti
gs
out
sarb
pop
sbb
xor
add
addr16
cld
xchg
push
mov
test
jecxz
mov
sbb
sub
int
jne
push
insl
inc
inc
in
add
jmp
xor
jg
add
icebp
outsb
pop
mov
sar
sarb
push
js
inc
cwtl
xlat
jo
lahf
sti
jge
adc
dec
sbb
cli
jg
sbb
imul
dec
leave
repz
pop
lret
cwtl
cmp
mov
faddl
fneni(8087
and
jmp
push
fildl
inc
cmpsb
popf
call
call
call
in
lcall
cmp
push
ret
add
shll
fldt
neg
fninit
ds
out
jae
push
push
and
cmpsl
daa
xchg
cmp
xlat
mov
es
push
movsl
push
add
ja,pt
mov
lret
xchg
scas
inc
int3
xorb
testb
and
in
push
sarb
daa
test
inc
pop
jb
rorb
and
les
add
sbb
jne
repnz
fs
mull
inc
stc
je
push
adc
cmp
jg
inc
ja
pushl
stos
add
pop
data16
push
cmp
scas
sbb
and
mov
cmp
and
jae
pop
sbb
mov
mov
mov
xlat
rcl
lock
inc
mov
dec
popf
movsl
leave
clc
cld
hlt
and
pop
arpl
out
pop
nop
or
jbe
and
xchg
sbb
mov
dec
and
jo
sti
lret
test
and
mov
dec
cli
jae
dec
call
mov
jo
cs
jns,pn
sbb
aas
adc
push
rcll
or
in
adc
js
ret
push
out
cwtl
scas
out
mov
lret
pop
stos
xor
adc
sbb
inc
jecxz
pop
push
sub
mov
cwtl
xchg
aaa
aas
lds
pop
dec
pushf
dec
js
jnp
sbb
jl
cmpb
mov
pop
repnz
pop
mov
jne
pop
jo
cmp
in
rep
push
jno
xor
faddp
into
ret
sarb
ret
adc
mov
or
sbb
lock
popf
mov
test
dec
push
into
dec
mov
aad
clc
lock
jp
dec
iret
mov
inc
sub
mov
loopne
mov
pop
les
mov
bound
out
imul
jae
xor
mov
inc
ja
or
movsl
xchg
push
lcall
pop
outsb
dec
jp
into
mov
inc
lods
sbb
mov
cmp
enter
mov
mov
push
test
pop
addr16
inc
test
jg
mov
lcall
inc
call
out
rclb
push
sahf
nop
movsl
data16
sbb
pop
xchg
fimuls
cwtl
test
pop
sub
inc
in
out
ss
inc
cwtl
fbstp
pop
aas
cmp
xchg
test
aas
pop
lret
jl
aad
jbe
outsb
sti
inc
or
mov
inc
mov
dec
jg
mov
push
aam
push
push
jnp
adc
add
jne
xchg
sbb
pop
rcll
mov
fsubrs
sbb
icebp
in
pusha
sbb
shrb
mov
cmp
cwtl
repnz
jecxz
arpl
loop
inc
push
mov
bound
fsubl
dec
sub
scas
ss
mov
rcrb
loop
sbb
ljmp
inc
fstps
push
pushf
loopne
push
inc
mov
fcomps
movsl
adc
divl
rolb
mov
inc
xor
jmp
inc
ret
inc
mov
xchg
push
rorl
and
int
inc
leave
loope
movsb
cmp
data16
push
call
rcr
outsb
mov
outsl
sbb
fld
dec
jle
imul
xchg
add
das
fists
sbb
lds
fbld
mov
rcll
in
or
and
addr16
dec
fwait
dec
or
sub
and
sti
ud1
adcb
lahf
mov
dec
int3
les
inc
lods
insl
or
inc
push
test
mov
sub
pop
je
dec
inc
in
inc
xor
aas
fisubrs
cs
jnp
push
lock
mov
mov
xchg
inc
adc
or
push
or
inc
jns
int
in
into
xor
adc
addr16
mov
cmp
ret
jno
enter
and
adc
lahf
dec
rorb
in
int
or
cs
outsb
add
into
das
jb
cld
outsb
push
pop
mov
cmpsl
push
pop
ljmp
mov
xchg
iret
fldcw
sub
push
repz
je
or
sarl
cwtl
ret
fiaddl
neg
xchg
xchg
push
loop
xchg
inc
stos
dec
pop
or
int
pushf
fsubp
lahf
int3
pop
pop
mov
loop
leave
repz
fisubrs
mov
jecxz
jecxz
bound
hlt
gs
in
cs
mov
pop
mov
outsl
sbb
and
ret
clc
sar
sbb
xchg
out
idivb
push
dec
scas
jmp
sti
mov
dec
jno
jnp
push
rcrl
adc
ror
mov
dec
sub
in
xor
popf
push
aad
lock
enter
fs
in
mov
cmp
and
sahf
in
mov
and
aad
test
pop
adc
in
xchg
mov
data16
out
pop
data16
stos
movb
and
push
jp
out
in
enter
push
subb
mov
icebp
cmp
and
stc
sub
pop
test
notb
jmp
sbb
mov
cmp
xabort
push
xor
mov
jge
pop
cld
imul
lret
and
push
push
xor
xor
cltd
lock
adc
outsb
stos
cwtl
push
nop
ret
xchg
adc
lcall
enter
push
push
int
fisttpll
sbb
adc
mov
lods
sbb
adc
insl
xlat
icebp
pop
rolb
inc
das
sbb
xorl
sbb
imul
aam
jmp
lock
testl
outsb
or
mov
xor
sbb
and
push
mov
jb
mov
test
mov
jl
daa
add
ret
fnstenv
adc
jns
xor
push
add
pop
loopne
jmp
iret
aad
out
imul
cmc
test
mov
xor
imul
sub
aaa
mov
xlat
jle
adc
fsubs
dec
adc
dec
in
adc
add
dec
adc
std
lock
mov
cmp
shrl
inc
test
test
sbb
add
shll
stos
dec
jne
mov
pop
rorl
mov
mov
fs
aam
iret
rcll
inc
jbe
push
js
sbb
in
cwtl
jbe
lds
mov
repnz
add
mov
and
sub
adc
inc
jge
mov
pushf
nop
cli
std
mov
mov
scas
mov
xchg
popf
loop
stos
sbb
loope
mov
cmp
iret
movsb
decl
mov
jg
jne
cli
and
ror
jno
jg
push
or
sub
inc
out
or
in
pop
and
sbb
mov
addb
push
ja
push
stos
insb
nop
push
fisubrl
stos
icebp
jecxz
and
and
push
inc
adc
sbb
loopne
lods
sbb
inc
push
inc
fisubl
jg
mov
xor
movsb
clc
xor
xchg
fstpl
inc
les
jmp
adc
xchg
lcall
in
mov
cmp
mov
sub
stc
fistpll
aad
jg
and
pusha
movsl
iret
inc
sbb
dec
mov
xor
adc
clc
xchg
xlat
stos
loopne
out
mov
arpl
aas
in
imul
imul
xlat
dec
pop
jnp
lret
xor
imul
and
das
pop
adc
mov
xor
xchg
jl
fwait
lea
dec
xor
xlat
xchg
out
mov
or
icebp
cmp
test
lcall
imul
pop
rcl
or
les
mov
xor
scas
mov
add
neg
push
jle
xor
out
jl
cmp
dec
rorb
jo
loope
add
stos
inc
lcall
in
jb
ss
dec
jmp
data16
push
add
insl
in
cmp
test
push
pop
dec
int3
mov
jae
subb
or
mov
push
leave
jle
push
add
ljmp
or
lds
xchg
in
je
icebp
arpl
out
stc
popf
leave
ud2
stos
jl
pop
and
sub
add
push
mov
call
movsl
loope
ret
in
in
push
inc
loop
fisubl
push
loope
lcall
pop
sbb
cmpsl
pop
addr16
mov
dec
lods
fwait
dec
jmp
sti
imul
sbb
scas
test
mov
stos
imul
and
popf
cmp
mov
shll
notl
pop
lods
popa
fmul
fsubl
xlat
xlat
mov
lods
insl
xchg
aaa
adc
sub
dec
mov
xchg
ss
add
and
jo
xor
stc
or
mov
movsb
push
adc
inc
ds
jl
push
rol
sahf
xor
xlat
and
movsb
dec
nop
pop
pop
or
jne
stos
dec
mov
inc
mov
call
and
loope
and
xor
rclb
sbb
fildl
outsb
aaa
mov
mov
sahf
popa
movsl
lcall
adc
fistpl
mov
xor
xorb
popf
ficompl
pop
cmp
fcoms
jp
out
and
add
jns
mov
xorl
or
fmull
xchg
jb
xchg
stos
test
sahf
mov
lahf
ja
nopl
add
nop
scas
adcl
and
push
mov
out
xor
adc
rcrb
push
fcomi
inc
das
mov
adcb
scas
movsb
idivl
movsl
sarb
in
subb
popa
out
movsb
fcmovnb
xchg
ret
xor
sub
sub
push
adc
ljmp
jg
ljmp
negb
subb
jg
outsb
or
fdivs
pop
enter
stc
shl
mov
push
popf
inc
mov
and
mov
cmpsl
int3
es
push
or
pop
xchg
xchg
or
mov
fs
xlat
pop
adc
mov
cmpb
shll
sarb
push
dec
mov
cmp
push
bound
outsb
or
adc
sub
inc
dec
pop
inc
lock
rcrl
stos
pop
sahf
mov
je
arpl
push
dec
int
fdivl
out
mov
pop
inc
sbb
push
and
push
shlb
mov
jnp
testl
pop
pop
cld
insb
mov
xor
ds
xchg
push
pop
js
movsl
xchg
add
fcompl
test
rcll
jbe
fwait
insb
mov
fistl
cmp
iret
mov
lahf
fmuls
stc
fs
mov
add
push
notl
fs
cld
mov
push
push
jg
iret
movsb
insw
lret
dec
push
pop
outsb
test
jmp
inc
xorb
das
js
jbe
inc
jecxz
int
mov
xchg
inc
arpl
cltd
mov
ja
adc
loope
scas
scas
pop
jo
int
das
cmc
aad
stos
testl
add
xor
es
arpl
xor
das
lret
in
shll
mov
and
xlat
mov
test
arpl
jo
jg
dec
movsl
and
xchg
dec
adc
xor
mov
and
jbe
loopne
mov
test
popa
mov
mov
rorb
sbb
addr16
add
and
cmp
test
sbb
xor
sub
xchg
nop
shll
or
lret
xchg
jecxz
xchg
cmp
inc
cli
sahf
pop
dec
sbb
sub
xchg
push
push
pop
sbb
mov
cs
in
jae
sarb
inc
mov
mov
add
xor
adc
shl
cmp
lret
fists
ret
mov
enter
mov
hlt
popa
bound
lods
aam
scas
add
pop
add
inc
daa
xor
push
jae
dec
paddq
cmp
lods
cmc
sbb
add
imul
scas
sbb
adc
stos
xchg
scas
inc
in
mov
jle
fsts
xlat
xlat
xor
pop
mov
das
out
adc
jle
lcall
aas
and
xlat
mov
pop
mov
push
imul
iret
xor
adcl
cmpb
and
daa
stos
jae
fnstsw
mov
or
sbb
cltd
adc
stos
cmpl
fisubs
xorl
aad
and
xchg
jl
cmp
mov
sbb
pop
insl
ficomps
push
adc
mov
add
clc
roll
cmp
insl
icebp
inc
pop
stos
iret
mov
fidivl
xor
jmp
bound
dec
sbb
js
mov
loopne
loop
xchg
cmpsl
add
test
xlat
inc
mov
int3
loop
dec
out
xor
hlt
fdivrs
cmp
cld
call
adc
fmull
xor
dec
cmp
inc
fnstcw
xchg
decl
pop
push
push
ret
jne
clc
fwait
enter
mov
xlat
push
push
mov
jb
into
mov
xchg
mov
cmp
testb
scas
pop
sbb
clc
out
add
loope
jle
pop
adc
ljmp
jne
push
and
cli
es
xchg
and
push
daa
and
mov
imulb
outsl
shll
cwtl
xchg
and
imul
inc
fsubrl
mov
adc
xor
enter
inc
loopne
out
mov
out
cmp
and
pop
shlb
lret
sub
in
dec
fmul
clc
scas
pop
ffreep
nop
or
xchg
pop
xor
je
lea
mov
sub
movsl
mov
xchg
xor
mov
dec
pop
je
fwait
xor
das
imul
out
cs
xchg
xchg
xor
add
popf
mov
out
xor
jge
mov
leave
dec
mov
sbb
loope
pop
lods
dec
push
cmp
push
hlt
inc
insb
jb
xor
xor
adc
je
cmc
aaa
pushf
and
jo
je
imul
and
and
sarl
or
jnp
aam
and
inc
enter
std
jne
add
xchg
pop
pusha
or
std
add
pop
or
test
adc
mulb
push
cmpsb
xchg
pop
dec
les
adcb
jg
loopne
icebp
cli
je
mov
xchg
inc
or
mov
push
and
mov
dec
jno
das
xchg
shrb
jg
sub
movsb
int
mov
cmpsb
lock
ret
inc
push
xchg
xor
pop
ljmp
push
mov
xchg
inc
in
cli
mov
out
rcrl
jbe
lret
sahf
lock
push
jg
imul
lods
mov
or
inc
ret
and
movsl
test
jle
insl
pop
push
cmpsb
cmp
ret
dec
pop
lods
call
add
lods
daa
or
jae
jp
in
add
std
fsub
push
xchg
cmpsl
or
push
dec
or
ret
sbb
pop
pop
and
pop
int3
jne
sti
test
jne
pushf
mov
in
cs
cs
sbb
mov
daa
mov
push
adc
fiadds
xor
sbb
mov
sub
cwtl
les
inc
mov
ja
cmpsb
jmp
jae
cmp
jbe
xor
dec
xor
cltd
xchg
adcb
aad
push
push
cmp
xor
mov
pop
test
push
inc
fsubr
or
mov
cmp
adc
in
mov
xchg
add
pop
jle
pop
sbb
push
stc
dec
inc
loop
cmp
cwtl
fidivrs
fldenv
lret
aaa
or
mov
lods
lcall
ret
cltd
jmp
lea
cmpsb
mov
mov
cmp
movsb
jne
cltd
sbb
xorl
pop
xor
ficoml
jle
add
stos
push
xchg
neg
int3
sbb
push
mov
or
mov
add
xlat
cmp
aad
jnp
fcoml
mov
mov
int3
xor
add
mov
mov
cmpsb
out
xor
xchg
jo
pushf
sbb
xchg
push
rol
cmp
lds
push
jne
push
mov
or
aaa
test
stc
ret
outsb
pop
ds
pop
fnstenv
gs
ret
adc
popa
xchg
adc
out
inc
xchg
cwtl
cmp
jne
mul
mov
adc
outsl
sub
dec
test
loope
cld
or
outsb
mov
adc
mov
mov
xor
imul
inc
mov
sbb
cmp
push
lea
inc
cmp
aad
mov
fnstenv
mov
xchg
mov
pop
aaa
push
or
arpl
imul
jae
xchg
sub
sbb
pop
loop
fstpt
rolb
rclb
in
mov
push
or
ja
out
adc
mov
inc
and
inc
and
enter
nop
mov
jbe
dec
clc
sbb
xor
xchg
scas
and
cmp
xor
xchg
xor
mov
test
fwait
repz
cmp
loop
xor
inc
ret
lods
mov
lret
jle
in
cmp
sbb
call
sbb
adc
in
xlat
cmp
pop
shr
lods
xor
sub
push
and
xor
pause
mov
push
lret
js,pn
fiaddl
out
dec
loope
jecxz
xchg
rdmsr
fsubrp
or
pushf
push
jmp
xor
pushf
adc
mov
pop
pop
shrl
movsl
push
add
fstpt
aas
or
cmp
in
xchg
aaa
in
roll
fs
xchg
sahf
data16
iret
push
mov
divl
mov
xor
or
rcr
hlt
popf
fidivrs
mov
cld
xchg
ljmp
and
jb
cmp
stos
sbb
out
ret
rclb
cwtl
mov
inc
stos
repnz
jmp
inc
pop
mov
adc
pop
pop
popl
ficomps
and
js
daa
or
into
jg
inc
ss
dec
push
xor
in
mov
fnstcw
dec
inc
cmp
inc
adc
jno
mov
mov
popa
xor
hlt
jecxz
add
adc
jo
xor
rolb
mov
mov
aaa
sub
test
dec
in
mov
jb
cld
mov
pop
icebp
xchg
subb
dec
addr16
add
sub
adc
xor
mov
jns
es
lret
push
test
fcoms
popf
ficoml
mov
or
popf
dec
call
bound
sub
cmpsl
sbb
xchg
scas
daa
xor
jg
mov
jle
stos
icebp
icebp
xchg
cmp
push
ja
push
add
loop
and
jge
pop
popa
adc
fisubs
cs
mov
jl
out
xchg
dec
movb
shrb
adc
cmp
into
cmp
cmp
fsubr
out
dec
and
addr16
rcl
or
dec
addr16
xchg
mov
sub
mov
mov
repnz
testb
fwait
jge
in
mov
out
mov
popa
xor
lods
xor
pusha
xchg
xchg
jg
hlt
dec
leave
jmp
adc
jl
insb
or
mov
sbb
test
movsl
dec
cwtl
mov
arpl
sub
lret
dec
adc
pop
pminsw
or
push
repz
ljmp
mov
pop
sub
pop
push
imul
add
std
or
or
in
adc
cmp
out
fstpt
jno
pop
fcomip
scas
outsb
cmp
and
test
adc
into
mov
mov
xor
push
clc
xchg
inc
lahf
push
sub
andb
jg
mov
or
mov
and
xchg
pop
or
adc
aad
popa
cmp
gs
cs
push
test
xor
enter
and
cmpsb
and
movsl
inc
andl
jno
ja
inc
popf
adc
cmpsl
fisubrl
mov
arpl
and
push
mov
clc
nop
add
jg
mov
jb
adc
out
mov
movsl
push
push
mov
sbb
and
fimull
jge
dec
aam
mov
xchg
cltd
scas
dec
sbbb
sbb
xor
add
dec
fs
imul
ret
in
loope
xchg
pop
icebp
mov
sub
pop
lock
inc
sti
inc
popf
fistpll
cmp
jecxz
jns
mov
xchg
test
add
inc
in
jno
out
xlat
xchg
add
stos
cmp
jecxz
test
mov
mov
popf
mov
sbb
pop
jns
adc
and
jbe
mov
cwtl
js
mov
push
mov
lret
int3
inc
fisttpl
test
sbb
shrl
jne
scas
push
or
pop
pop
adc
jbe
test
adc
cmp
mov
sti
jecxz
adc
push
mov
pop
hlt
iret
mov
ljmp
jge
je
repnz
std
xor
mov
inc
adc
adc
in
adc
ja
xor
fucomp
and
popf
or
cli
sbb
add
cltd
pop
or
das
add
orb
out
push
jle
gs
loopne
int3
inc
pop
loope
push
xchg
dec
fsub
subl
scas
push
fidivrs
jg
inc
xor
push
ret
rcr
pop
adc
hlt
cmp
push
sub
popf
xlat
xchg
fisttpl
xor
jg
xor
js
std
cli
lret
jl
lret
xor
mov
push
in
xor
lcall
push
mov
stos
sub
js
popl
and
fs
outsl
int
aas
mov
sbb
sar
fidivs
mov
test
leave
mov
jbe
cld
mov
cwtl
dec
mov
cmc
cmp
or
mov
les
pop
mov
pop
cs
cmpsb
mov
movsl
xchg
cmp
jg
jne
shlb
sbbl
push
jecxz
popf
pop
jno
xchg
xor
das
pop
sub
mov
jge
mov
in
mov
loop
jg
lret
filds
and
popa
or
mov
mov
std
inc
mov
xor
cmp
jae
jb
subl
orl
or
dec
call
stc
inc
insb
jne
pop
pop
rorl
sahf
mov
pushf
jno
in
push
push
xchg
jecxz
xor
loopne
push
mov
xor
or
test
pushf
ret
aam
jmp
push
pop
mov
or
loop
jge
mov
inc
movsb
sti
mov
sbb
movsl
mov
push
hlt
mov
xor
out
rep
sarl
jmp
cmp
cmpsl
popa
mov
and
mov
shlb
push
daa
push
xchg
push
mov
xor
insb
jnp
jne
mov
xlat
addl
add
push
ret
sub
cmc
xor
mov
xlat
push
iret
mov
rcll
dec
mov
dec
ja
call
pop
and
leave
pop
jecxz
mov
loope
lods
sahf
jge
xchg
clc
dec
dec
stc
dec
sarl
ja
addr16
imul
push
xor
leave
adc
push
lret
mov
sbb
scas
xchg
mov
movsl
das
out
xor
sub
dec
mov
call
or
push
push
fmul
out
in
xor
lahf
iret
sub
lret
mov
mov
lock
insl
and
test
cmp
shrb
mov
bnd
addl
jae
ss
cwtl
incb
and
cmp
scas
fists
inc
adc
popa
je
int3
push
add
pop
fildl
scas
les
mov
cwtl
movb
inc
fcmovbe
stos
dec
or
add
ja
mov
lock
pop
push
adc
adc
mov
popw
xor
fs
out
int
nop
insb
rcll
nop
cs
and
int
inc
stos
sub
sbbb
imul
fcomps
shlb
inc
lods
jmp
out
fwait
movsb
outsb
adc
and
xchg
push
movsb
fdivrl
jmp
stos
out
mov
rcrl
test
lock
pop
mov
aaa
dec
xchg
movsb
adc
cmp
push
shr
lods
sahf
mov
sbb
xorb
subb
std
nop
cltd
enter
pop
mov
dec
scas
jmp
cltd
xor
xor
stc
outsb
out
mov
lds
mov
xchg
test
pop
ret
jnp
xchg
jne
into
loop
xchg
xorb
loope
or
int
mov
cmpsl
sbb
sub
js
cmp
pop
mov
push
mov
or
push
ficoms
rol
sbb
mov
in
leave
pop
ret
mov
aad
jl
mov
cmpb
lods
arpl
sub
mov
inc
lods
js
pop
and
sbb
lcall
lahf
push
pop
addr16
inc
repnz
leavew
popa
imul
dec
pusha
mov
imul
xor
push
inc
daa
jne
fldl
or
leave
scas
aad
cmp
pop
lret
mov
ljmp
xchg
inc
lret
jecxz
jae
and
add
cmp
cltd
jmp
scas
int3
js
push
lret
or
fcmovne
push
lea
and
dec
mov
or
js
mov
xor
sbb
fcmovnb
cmp
cmc
call
push
and
out
insl
shl
xor
shrb
or
jbe
fdivrl
pop
dec
dec
mov
sub
das
je
fwait
cmp
add
adc
pop
cmp
std
rcl
stos
push
jnp
sub
push
inc
aam
pusha
mov
ljmp
stc
push
mov
out
loope
mov
mov
inc
cmp
cld
adc
gs
push
jmp
loop
stos
lods
and
pusha
rcll
adc
inc
in
jns
adc
sarb
jle
cmp
sub
lea
sarb
push
xor
pop
jnp
sub
or
mov
dec
cltd
fstpt
loop
fucomp
push
repnz
scas
sub
push
pop
pop
gs
rorb
shl
mov
mov
sub
lea
into
add
or
push
js
popa
cmp
xchg
call
lods
ds
xchg
mov
pop
xor
push
mov
inc
xchg
imul
xchg
push
xchg
mov
ds
mov
out
inc
aaa
in
sbb
inc
fsubrp
movsb
in
or
out
sbb
dec
xor
repz
stos
imulb
sub
ret
inc
aaa
dec
xchg
lea
mov
gs
xchg
and
lea
out
iret
scas
xor
xor
outsb
dec
cltd
out
xor
popa
cmp
or
les
pop
aad
pusha
mov
mov
ja
pop
or
lret
mov
add
cmp
and
mov
dec
les
loop
add
cmpsb
cld
dec
in
cmpsl
test
or
mov
xlat
popa
in
fwait
cmp
scas
imull
cmp
jbe
movsb
mov
in
fcoms
push
faddl
stos
mov
add
addr16
data16
add
inc
add
jle
or
push
dec
je
jbe
and
arpl
das
cmpsb
loopne
mov
stc
out
addr16
or
shll
inc
lcall
pop
adc
into
xchg
daa
fisttps
inc
sub
sub
in
imul
dec
cltd
and
adc
mov
sub
mov
sbb
sbb
or
scas
ljmp
pop
lahf
jmp
shrb
cs
mov
jge
xorb
testl
cld
sbb
fistpll
inc
imul
in
daa
gs
push
xchg
mov
mov
pop
push
inc
fcmovu
pop
aad
mov
sti
gs
sbb
lea
ds
jp
push
inc
popa
mov
lret
mov
inc
lods
clc
ja
mov
jge
mov
repnz
ret
push
je
jg
inc
mov
xchg
dec
jmp
dec
sbb
mov
lods
fstpt
pop
mov
mov
xchg
jmp
les
fs
mov
dec
mov
push
jecxz
push
dec
std
cmp
adc
mov
push
rcrb
clc
leave
cmp
ss
or
js
push
xchg
push
push
sbb
add
fcoms
in
fdivrl
mov
xchg
dec
call
jno
jo
dec
xchg
test
push
sbb
shrl
in
jo
push
cli
or
xchg
push
mov
adc
shl
mov
sbbl
fs
xchg
outsl
aas
dec
pop
js
nop
push
popa
testb
movsl
xor
dec
addl
into
push
fbstp
and
xor
jno
aaa
dec
nop
mov
jmp
insl
inc
in
sub
add
sarb
mul
lret
ficomps
xchg
stos
pushf
pop
sbb
jmp
out
mov
sub
mov
mov
leave
inc
lea
iret
and
sbb
xchg
xchg
push
add
mov
xchg
movswl
orb
lcall
mov
sbb
lea
lods
inc
sub
cs
insl
mov
inc
jb
fwait
mov
data16
sbb
jbe
outsl
outsl
sub
fwait
jecxz
icebp
xchg
xor
sbb
sbb
rorb
pop
lret
mov
daa
test
sahf
sub
rorl
repnz
jecxz
aaa
cltd
sub
inc
addr16
cld
repz
mov
push
dec
and
out
adc
xchg
mov
mov
mov
cmp
xor
and
rorb
cltd
fldt
hlt
jae
inc
xor
loop
cli
push
out
dec
sbbl
pop
daa
add
jp
xor
lods
lds
mov
cli
pop
adc
shlb
in
bound
pxor
xchg
outsl
mov
ror
scas
mov
cs
fildll
repnz
cmp
div
gs
stos
pop
cmc
push
mov
xchg
pop
push
nop
mov
push
dec
pushf
aam
call
lea
out
clc
add
sti
mov
out
dec
cltd
nop
xor
cmpsl
popf
xor
daa
dec
pop
xor
jp
icebp
in
int
push
mov
jge
test
xchg
jae
or
je
add
sub
ss
mov
cmc
jns
mov
cmp
push
dec
xchg
jb
pushf
dec
add
push
xchg
lret
out
jl
jnp
imul
scas
cmc
cmc
add
sub
adc
aad
ja
dec
push
ret
push
mov
sub
push
cmpsb
movsb
pop
push
loop
pop
push
push
adc
jno
dec
lock
lret
je
xchg
mov
daa
or
aas
and
nop
cmp
aad
pop
push
pushf
jae
sub
xchg
mov
dec
xchg
fmul
jnp
mov
dec
or
and
dec
data16
push
mov
mov
xor
lret
out
data16
scas
fcoml
aaa
cmp
xor
in
fldl
mov
mov
cmp
cs
stc
scas
es
jnp
call
adc
cwtl
mov
icebp
outsl
test
rol
jle
test
cmp
hlt
mov
aas
out
ss
in
jmp
jb
fiaddl
sbb
xchg
add
int
data16
aas
dec
push
mov
cmp
not
adc
sbb
and
in
add
inc
rolb
aaa
rcll
cli
sub
into
jge
repnz
fidivrs
jp
movsl
popf
xchg
sub
and
jbe
icebp
jp
push
btl
jmp
loope
shlb
stos
sbb
sbb
pop
pop
jnp
xor
or
repz
outsb
adc
punpckhwd
int3
jge
std
int3
in
stos
lret
ret
cmp
inc
jmp
out
shl
test
insl
frstor
adc
sub
movsl
sub
sbb
movsl
adc
cmp
popf
mov
scas
andl
fldcw
pop
mov
dec
rorb
sahf
mov
mov
dec
lods
mov
jle
lds
fistps
call
inc
outsb
inc
mov
cmpsl
fmuls
mov
push
or
add
add
in
xor
or
arpl
test
dec
shr
push
sbb
and
pop
push
movsl
fisubs
rol
push
pop
add
dec
aas
enter
mov
ret
inc
inc
xchg
cmc
lcall
ss
dec
hlt
outsl
or
cltd
inc
adc
mov
jns
jno
stos
and
inc
loope
or
pushf
or
out
add
xchg
sbb
jecxz
mov
pop
jp
push
mov
and
xchg
cmp
aas
cli
mov
repnz
xor
push
cs
aam
sbb
dec
stc
sbb
cmp
dec
mov
cmp
jp
outsl
xor
add
or
pop
inc
repnz
dec
loope
cmp
lcall
lcall
push
lock
js
and
stos
lret
xlat
mov
outsb
inc
test
jecxz
push
cmp
bound
adc
pushf
cmp
inc
xor
je
cs
or
shl
sbb
in
and
jns
aam
xchg
cltd
pop
test
jmp
pushf
inc
pop
pop
cld
fs
or
add
mov
sub
std
jle
ret
push
add
mov
jecxz
incb
mov
mov
cmp
shll
pop
pop
push
popa
mov
jecxz
xchg
pop
cmpb
out
jo
test
fisttpl
pop
dec
scas
shl
scas
cs
or
jg
js
xchg
sbb
arpl
mov
stos
xor
sub
adc
loop
std
xchg
inc
pusha
push
addr16
fsubrl
leave
orl
in
jg
bound
push
out
jo
xchg
rorl
lock
popf
in
mov
xor
neg
add
push
xor
stos
scas
push
out
xchg
or
xchg
sub
rcrb
dec
mov
jge
rolb
mov
pop
and
dec
cmp
xor
mov
inc
in
cmp
xor
jnp
js
push
jnp
push
inc
imul
xchg
neg
adc
inc
out
or
inc
mov
ret
pop
scas
sbb
test
outsb
int3
out
push
subl
outsb
sub
cmc
sub
nop
jns
outsl
inc
xchg
and
add
xor
mov
adc
and
pop
mov
in
adc
int3
roll
sub
xor
aad
adc
lds
cmp
loope
nop
pop
in
and
xchg
pop
sbb
jecxz
inc
lock
jmp
test
gs
outsl
adc
leave
cmp
out
test
xchg
fidivl
and
sbb
std
arpl
and
data16
adc
pop
adc
xlat
in
or
ljmp
jo
lret
jmp
test
sub
clc
inc
pop
pop
fwait
sti
test
popa
inc
sar
pop
jmp
push
cmp
sub
jge
mov
popf
inc
or
jnp
ret
pop
dec
scas
out
and
popa
mov
inc
outsb
mov
xchg
cmpsb
xchg
xchg
dec
movsb
and
or
in
je
inc
sbb
mov
lcall
ret
pop
loop
mov
xchg
mov
push
lods
not
popf
jns
mov
inc
xchg
and
mov
das
std
add
fwait
or
inc
push
test
lahf
cwtl
pushf
adc
pop
mov
inc
xchg
pop
sbb
pop
add
gs
sbb
push
cs
aas
movl
outsl
test
ss
arpl
mov
sub
and
clc
shrb
scas
les
sbb
out
dec
out
inc
mov
xchg
repz
scas
outsl
in
push
ret
es
mov
dec
daa
sbb
lea
mov
mov
sub
jge
and
jae
jb
fs
push
sbb
or
xchg
pinsrw
xchg
mulb
pushf
lahf
push
cmp
mov
mov
lcall
xor
je
rcrl
fwait
pop
addr16
mov
cmp
mov
jmp
js
and
sub
adc
cmp
mov
das
andb
add
push
pop
arpl
and
popf
add
subl
jmp
cld
rcll
inc
lahf
xor
inc
insb
and
shlb
sub
dec
iret
arpl
mov
jbe
and
dec
push
sti
test
xchg
orl
xchg
push
mov
leave
push
in
xchg
sbbb
jo
test
jl
jnp
push
xchg
test
add
sub
mov
sub
insb
in
rep
test
mov
fmuls
and
in
lahf
mov
jle,pt
pop
xchg
ja
and
mov
xchg
lcall
xlat
mov
and
mov
sub
xchg
test
aaa
cmp
divb
int
mov
sub
faddl
aad
ret
pop
or
sbb
fmull
jnp
popf
enter
cmp
xlat
dec
lret
ret
push
xor
popf
jo
arpl
mov
cltd
fldcw
inc
inc
dec
fsubp
xor
mov
jne
outsl
mov
xor
push
jno
mov
filds
xlat
mov
mov
ret
popa
rclb
sub
jecxz
nop
jmp
enter
popf
cmc
inc
mov
push
fiaddl
mov
lahf
cmpsl
and
mov
clc
repnz
outsb
xchg
cmp
add
in
rcrb
push
or
addr16
jmp
pop
stos
call
jmp
jnp
mov
dec
cld
mov
mov
cmp
in
inc
hlt
out
lock
sbb
mov
push
mov
out
out
jno
mov
push
test
push
dec
sarl
jbe
cltd
aaa
mov
ret
fadd
jmp
mov
or
and
aam
adc
das
jg
jb
dec
cmp
in
out
fisttpll
jmp
mov
stos
fsubrl
bound
sub
rclb
mov
add
jae
adc
mov
rcll
adc
lret
pop
mov
xchg
mov
cli
call
jnp
mov
mov
or
sbb
loope
shl
nop
popa
mov
cli
cmp
push
rorb
adc
jg
cmc
sub
mov
ret
adc
jg
push
inc
xlat
xchg
xchg
mov
cltd
dec
sub
flds
xchg
jge
les
jno
jmp
sbb
jmp
sbb
fbstp
dec
push
or
mov
push
push
dec
insl
sbb
or
adc
xchg
daa
cmpsb
cmpsb
or
sbb
jno
scas
fstl
clc
fidivl
fsts
in
test
mov
push
mov
dec
shll
arpl
xchg
xlat
arpl
xchg
xchg
push
and
sti
in
enter
push
js
jne
adc
dec
mov
rcrb
cs
insb
mov
push
cmpsl
in
lods
daa
imul
icebp
mov
jns
xor
lret
xchg
pop
in
addl
lea
rcll
cmp
adc
outsb
jg
mov
jbe
insl
jne
mov
imulb
sub
sarb
mov
adc
sarb
das
adc
mov
cmp
pop
push
sbb
fwait
inc
js
repz
cs
sub
rolb
xor
loope
lock
adcl
add
mov
shrl
and
loop
in
push
data16
xor
movsb
inc
jg
pop
lret
enter
cld
fs
jg
mov
fsubl
and
aas
or
das
in
outsl
inc
jl
add
daa
xchg
insl
loope
mov
dec
rol
fwait
lcall
pop
mov
ret
adc
fildll
rcrl
repnz
ret
and
jp
ja
xchg
xchg
add
ljmp
push
fists
xor
cwtl
xor
sbb
or
lock
cmpsl
xchg
push
sbb
addr16
mov
lahf
out
adc
mov
cmp
rclb
lock
lods
adc
stos
movsl
std
clc
cmp
pop
mov
sub
cmp
cmpsl
xor
scas
mov
insl
adc
dec
mov
mov
out
cmpsl
adc
ds
fnstsw
lods
pop
into
jno
jne
aaa
adc
inc
mov
sahf
sbb
cmp
cmpsb
jbe
sbb
and
test
cmp
cmp
in
shlb
mov
add
idivb
and
stos
push
jo
mov
cmpsb
dec
stos
and
xor
lahf
clc
cltd
jp
cmc
movsb
int3
fidivrl
fisttps
jo
dec
mov
out
mov
inc
mov
dec
mov
inc
icebp
lods
xor
jo
sub
cmp
inc
push
sbb
sub
lret
pop
add
fidivs
mov
stos
inc
pop
xchg
ja
sub
jbe
int3
psrlw
or
out
test
pushf
pop
nop
nop
mov
jb
cmpsb
push
imul
loope
ds
int3
test
jp
jns
add
jbe
pop
jns
or
cli
push
ja
fs
pop
int3
lret
test
add
pop
jns
xchg
imul
jecxz
xchg
mov
or
jecxz
or
clc
pop
fsubrp
icebp
push
fmuls
xorb
int
xchg
icebp
push
pop
push
aad
sub
divl
jmp
enter
aaa
add
loop
ljmp
push
std
mov
push
roll
bound
add
loop
stos
int
hlt
lcall
push
repz
adc
arpl
push
push
rcrl
mov
pop
or
insb
aaa
and
gs
mov
mov
mov
add
aas
add
dec
sbb
cs
jbe
fdivrl
jo
negb
fstpl
dec
mov
lods
pop
aad
xchg
or
and
mov
jmp
pop
ret
push
xchg
xor
xor
arpl
pop
cltd
mov
push
stos
jne
mov
xor
in
adcb
push
fisubs
and
nop
sbb
out
scas
roll
jno
mov
and
stc
insb
shrl
or
in
mov
mov
in
or
jns
mov
shll
mov
loopne
inc
jmp
aad
subb
add
ficoml
or
pop
mov
mov
out
cmp
or
push
xor
je
imul
sbb
mov
jg
jecxz
repz
jb
pop
sarb
repz
dec
in
fmull
nop
add
js
lahf
cmp
hlt
in
ljmp
jmp
xchg
shll
test
inc
dec
dec
mov
inc
jo
xchg
test
imul
dec
and
cmp
pcmpgtd
adc
push
mov
pop
push
mov
bound
mov
mov
clc
xchg
xor
lahf
aad
dec
pop
and
lret
jb
popa
mov
clc
jb
ficoms
test
jmp
pop
mov
sub
fcompl
xchg
pop
add
rcrb
and
jno
xor
inc
mov
js
test
into
sbb
cmpsb
aaa
cmp
pop
iret
sub
push
ror
or
mov
les
jecxz
add
lahf
repnz
repnz
jne
xchg
cmp
ja
mov
mov
push
or
das
sub
bnd
xlat
jecxz
aam
mov
int
xchg
adc
push
xor
or
mov
nop
jg
ds
pop
leave
xor
mov
cmp
daa
repnz
push
jne
loope
aaa
movsb
pushf
addr16
jecxz
adc
gs
into
addr16
inc
push
shlb
dec
adc
outsl
rcrl
add
insb
in
insl
add
xchg
xchg
add
pop
sub
mov
aaa
popf
mov
xor
mull
or
je
sbb
sbb
lods
mov
pop
fdivrs
xorl
xchg
cmp
xchg
arpl
mov
fildl
lret
stos
jno
and
not
test
and
push
arpl
jp
ficompl
or
add
cmp
dec
lock
aam
push
stc
iret
out
pop
pop
mov
mov
std
mov
cmp
outsb
xor
mov
mov
or
mov
in
lcall
outsl
cltd
fcmovne
fnstsw
popa
imul
jle
addr16
pop
das
mov
jns
js
mov
push
pop
jmp
ret
mov
sub
imul
cmpsl
fisubl
sub
push
cmp
dec
xor
xchg
cmp
mov
out
add
pop
push
ljmp
mov
enter
fdivrs
addb
xchg
cmp
icebp
scas
cwtl
push
add
push
mov
sub
leave
mov
and
jae
repz
lods
push
divb
mov
loop
loope
xlat
jnp
repnz
mov
es
jns
es
je
imul
cmp
or
or
adc
in
cld
or
push
scas
icebp
ljmp
pop
ds
es
inc
adc
aaa
jae
enter
test
cmc
rclb
mov
mov
iret
jae
cmp
inc
cmp
sbb
call
xchg
xchg
push
adc
cmp
fidivrs
add
test
fidivl
mov
pop
movsb
enter
sub
test
push
xchg
sub
xor
movsl
gs
test
inc
je
cmp
push
sbb
mov
jmp
jae
jl
loopne
fstps
jg
or
and
or
add
pop
mov
xchg
orb
mov
and
cmpsl
pop
mov
xor
jmp
adc
or
fcmovnu
or
pop
insl
repnz
test
test
sub
mov
es
and
mov
les
cld
push
dec
sub
cli
add
shrl
lahf
les
mov
iret
into
les
pop
test
and
inc
scas
bound
push
sahf
jge
jmp
mov
xchg
sbb
leave
btl
in
xchg
xchg
push
xlat
scas
push
xchg
xchg
mov
lcall
rcrl
xchg
xchg
add
mov
daa
jne
sub
sbb
rcrb
lds
cli
adc
sub
inc
adc
test
jg
pusha
xor
pop
jmp
rcrb
lcall
push
loopne
aaa
and
mov
sbb
out
enter
mov
dec
into
adc
andl
dec
mov
in
shll
fisubrl
pop
pop
lock
stos
test
pop
adc
add
lahf
mov
pushf
mov
cmc
out
in
cmp
jae
jle
pop
mov
cmpsl
xor
leave
ds
addr16
in
addr16
pop
cmp
insb
adc
sub
push
fstpt
jl
arpl
cltd
cmpsl
pop
or
rolb
dec
xchg
lods
hlt
aad
push
add
popa
in
dec
jl,pt
mov
ficompl
scas
and
mov
jmp
repnz
dec
pop
sub
je
jle
fdivl
xor
test
and
mov
mov
push
inc
loope
test
cmc
dec
adc
inc
fildl
insb
mov
jb
loopne
add
fisubrs
jp
lret
insb
inc
ds
jge
loopne
push
adc
frstor
cmp
dec
pop
add
cmp
xchg
push
sub
lods
sub
add
rolb
jbe
sub
add
rcrl
pop
loope
test
sbb
push
lock
mov
lock
adc
pop
jbe
push
mov
add
and
popf
mov
inc
stc
mov
ret
idivw
add
pop
cld
imul
jbe
rcll
outsb
pop
fcomp
jp
pop
jmp
inc
adc
shrl
sub
stos
add
scas
loope
sarl
xor
xor
decb
mov
aad
inc
pop
mov
mov
lds
test
arpl
popf
or
bound
jl
icebp
pop
mov
cmpsb
adc
imul
add
pop
fsubp
aas
call
aaa
fisttpl
push
sub
inc
inc
cli
dec
out
mov
in
jecxz,pt
scas
pop
stc
sub
pop
add
imul
push
bound
movsb
lahf
orb
pop
inc
jns
jp
arpl
int
xchg
aas
stos
in
adc
or
mov
cli
xor
ss
je
add
pop
rolb
imul
xor
dec
imul
add
ljmp
mov
inc
push
shll
cmpsb
sub
sub
lods
out
pop
aaa
mov
sbb
testb
aam
lods
cmc
xchg
stos
test
ret
clc
js
loopne
maskmovq
mov
sub
cltd
testb
jge
mov
sti
popa
xchg
ds
shll
in
cmp
cmp
stc
lret
call
and
cmp
loop
fs
mov
mov
mov
cmc
xor
jge
sub
mov
aas
aam
cmpsb
push
hlt
mov
daa
iret
mov
out
push
test
cmpsb
pushf
push
cli
or
xchg
mov
sub
jle
mov
nop
gs
paddb
mov
ljmp
subl
aas
fwait
lret
ljmp
shll
out
test
or
sarb
or
pusha
ljmp
clc
add
fcmovnb
ja
xor
cs
in
inc
mov
cs
fwait
xor
push
cmp
pop
jle
jnp
inc
and
ds
sbb
paddusw
jb
adc
add
clc
mov
nop
cltd
js
jae
movb
dec
shr
cmc
mov
inc
nop
divb
lds
pop
mov
jnp
lods
adc
inc
cmp
push
pop
sbb
push
mov
inc
cs
aaa
xchg
cs
hlt
or
mov
outsb
fstps
cmpsl
pop
jae
dec
ss
nop
mov
aas
mov
pop
add
jo
aam
mov
out
pop
add
and
cmp
ss
xor
push
xor
mov
clc
push
ja
pop
andb
int3
test
sbb
cmpsl
xchg
add
cmp
imul
sub
mov
push
push
sub
test
in
std
int3
mov
inc
sbb
add
xchg
fcmovne
sub
mov
xchg
dec
jmp
test
repz
pop
outsb
mov
xchg
dec
loop
jo
test
dec
cld
sahf
mov
lret
loope
or
cmp
adc
decb
push
aam
add
inc
xchg
outsb
addr16
pop
inc
push
movsb
mov
loopne,pn
and
jb
mov
test
ds
mov
fists
cmpsl
mov
sbb
push
lret
cmpl
outsb
mov
mov
push
lret
icebp
sbb
adc
jl
test
ret
cmp
push
clc
data16
cmp
xor
test
lock
sub
out
adc
cmp
mov
inc
cwtl
jne
aaa
mov
lea
push
fcmovbe
leave
outsl
dec
cmp
pop
insb
xchg
cmp
test
mov
shl
ret
repz
push
pop
icebp
in
movsb
mov
cmp
ss
mov
lret
out
adc
pushf
dec
loopne
sub
bound
push
cltd
es
cltd
mov
jl
jae
jb
fsubp
push
shlb
sbb
cwtl
sub
inc
push
sbb
add
add
mov
divb
incb
or
mov
push
cmpsb
les
in
jae
or
test
inc
fwait
out
insb
adc
pop
cmpsl
mov
rcll
dec
jg
dec
and
xchg
rcrl
test
push
lcall
jg
mov
jo
mov
movl
mov
imull
jmp
stc
scas
jno
push
dec
inc
dec
adc
lea
dec
lock
and
push
repnz
in
leave
pop
fwait
jl
push
push
inc
mov
aad
ljmp
push
mov
jge
pusha
mov
lret
int3
inc
add
adc
ljmp
or
pop
sbb
mov
aaa
repz
jae
xchg
jo
xor
xchg
xchg
es
add
dec
cmp
aas
jns
and
xchg
push
test
dec
sbb
daa
fcomi
push
jae
cmp
shll
sub
add
jmp
cmp
out
pop
mov
pop
mov
or
cld
mov
pushf
popa
fsubrl
stos
fmuls
sbb
enter
loopne
pop
gs
xchg
xchg
xor
and
adc
xorl
push
and
mov
popw
sbb
repnz
jle
sbb
pop
imul
shll
insl
adc
fsts
popl
jg
fsubrs
jno
daa
jne
lea
daa
push
lds
sub
xlat
cs
cli
mov
mov
adc
shll
cltd
out
dec
scas
icebp
roll
adc
sbb
enter
std
or
daa
mov
or
negl
mov
xor
dec
cli
imul
jns
push
jecxz
add
cwtl
push
fcoml
pop
es
xchg
hlt
lock
outsl
pop
inc
cld
or
sti
or
ljmp
mov
pop
cmpsb
popf
cmp
out
sub
jnp
or
mov
cmpsl
stos
mov
div
int3
loopne
inc
test
pop
fdivrl
popf
gs
add
pusha
inc
sbb
xchg
int3
xchg
stc
jns
inc
xchg
std
mov
std
pop
xchg
adc
sub
pop
in
mov
mov
sbb
cmp
mov
into
popa
not
add
insl
out
jle
pop
cmpsb
mov
aad
pop
pop
fbld
mov
mov
fwait
adc
inc
repz
dec
dec
mov
mov
push
dec
adc
mov
es
add
aad
jg
sub
mov
ret
mov
outsb
sahf
sbb
call
sub
add
add
xor
arpl
xor
outsl
inc
xchg
push
sbb
insb
adc
fiaddl
es
iret
adcb
sahf
sbb
xchg
loopne
cmc
push
lods
das
and
sbb
ret
daa
mov
aaa
pop
and
call
and
jb
xchg
mov
and
test
leave
or
stos
pop
add
and
jmp
cmp
test
cmpb
call
in
das
inc
mov
jne
adc
jl
mov
popf
push
jl
push
outsb
sbb
mov
scas
xchg
testb
repz
pop
fldl
enter
imul
add
cmp
mov
pop
mov
pop
push
jnp
cmp
rcl
repz
cwtl
or
inc
adc
fs
adc
adc
jo
out
insb
aas
and
add
push
mov
dec
test
xor
xchg
aam
dec
pushf
xor
ds
shll
mov
shrl
test
pushf
adc
jnp
into
ret
aam
shll
jb
lahf
mov
bound
xchg
sbb
pop
fldcw
movd
jno
repz
cmpsb
mov
loope
xor
loopne
push
dec
add
sahf
adc
scas
decb
jns
aam
adc
lods
push
mov
mov
add
fadd
cmp
dec
xor
or
inc
xchg
lret
push
sarl
adc
mov
add
mov
pop
ror
shl
mov
sub
out
daa
mov
es
xor
mov
xlat
loope
mov
mov
dec
aam
mov
xorl
int
sub
pop
fcmovu
rol
ss
out
mov
daa
jg
and
filds
std
fwait
int
sub
adc
movl
addr16
test
subl
cmp
xor
aad
cli
inc
bound
cmp
ljmp
xor
cmc
or
subl
subb
mov
sar
enter
adc
dec
cmp
xchg
fmuls
ret
daa
dec
push
addr16
add
or
xor
ds
xchg
or
popa
dec
cltd
xchg
lret
cmp
mul
mov
insl
or
cltd
push
or
mov
xchg
adc
jnp
ret
icebp
imul
stc
iret
sbb
out
repz
sbb
in
aad
mov
fbld
shll
dec
shlb
push
ljmp
xchg
push
or
pop
ja
xchg
push
scas
jnp
test
hlt
xchg
jno
je
jno
cmp
out
adc
ds
and
push
cmp
filds
jl
sub
or
sti
push
dec
sbb
or
or
call
sarl
sbb
cmp
movsl
push
lcall
rcrl
pushf
loop
push
dec
xor
outsb
add
jbe
and
lret
dec
pushf
xor
das
xchg
insb
adc
mov
int
or
sbb
sub
cmp
out
and
add
adc
rol
inc
repz
pop
lret
lock
cmp
je
lahf
mov
aaa
andb
add
push
imul
fildll
jecxz
aam
sub
dec
pop
leave
push
inc
jo
dec
ja
jecxz
mov
sahf
imul
dec
rep
pop
divb
lods
lahf
fiadds
jns
out
mov
sub
mov
ja
inc
in
pop
sub
nop
and
je
enter
nop
ret
jne
jns
adc
loope
and
push
pop
stos
jl
std
movsl
bound
call
fldl
inc
or
fisubs
jp
lods
sbb
ljmp
gs
and
xchg
jmp
and
inc
js
scas
into
mov
xchg
inc
mov
pop
jae
jp
scas
lods
int3
push
test
loopne
jp
jb
out
sbb
mov
leave
movsl
incb
mov
xor
popf
mov
mov
int
imul
sub
cltd
aam
nop
add
and
lds
into
push
xchg
gs
mov
ficompl
inc
sahf
sarb
in
outsl
rcll
test
mov
sbb
test
or
cmp
xor
sbb
mov
sub
clc
push
and
inc
insl
push
push
test
inc
ljmp
adc
cmpsb
and
dec
cmp
jl
mov
loope
notb
cs
push
push
fadds
or
and
mov
cltd
repnz
loop
jge
aas
icebp
es
int3
inc
sbb
jp
and
out
sbb
xchg
pop
ret
fwait
add
out
pop
dec
jne
dec
mov
dec
mov
mov
jg
push
rolb
lods
in
jg
movsl
cmp
out
rclb
push
jg,pt
push
lahf
mov
add
fisubrl
mov
dec
cmpsl
xor
outsl
push
aas
data16
sub
shlb
cwtl
lret
push
push
test
mov
dec
test
sbb
ljmp
sub
sub
movsl
rolb
shl
rcl
mov
addl
sbb
icebp
arpl
bound
sbb
cltd
scas
loope
inc
das
scas
in
aad
mov
out
sbb
out
sbb
jmp
lahf
lock
and
into
add
fistl
pmaddwd
hlt
pop
lcall
lods
enter
xor
ss
xor
sar
xor
cmp
add
imul
insl
test
adc
shrl
xchg
cld
inc
push
xor
mov
adc
addr16
mov
movsl
mov
and
push
icebp
pop
fbld
out
popa
fs
push
insl
sbb
icebp
jb
lock
jne
dec
pop
das
lock
ljmp
xchg
sbb
mov
sub
icebp
mov
or
mov
pop
add
pop
jne
jae
inc
sbb
xor
xchg
or
or
mov
xchg
cmp
inc
mov
ficomps
cmc
in
pop
sub
rolb
mov
sbb
jno
adc
xchg
cmp
lahf
jae
cld
or
mov
inc
outsl
jle
scas
sbb
and
push
fisttps
xchg
iret
inc
pop
popf
or
int3
ja
jmp
jl
int
cli
cmc
pushf
push
scas
jmp
inc
sub
mov
jo
xchg
arpl
jecxz
je
mov
cmp
sub
sub
negl
or
add
pop
stc
xor
mov
daa
xor
aad
jl
dec
jae
jnp
in
pop
mov
mov
movsb
imul
jbe
icebp
loopne
sub
inc
mov
mov
adc
loopne
in
cmp
xor
adc
jecxz
and
jmp
shrl
lock
clc
decb
dec
ror
adc
inc
fs
mov
stos
sahf
jmp
cmc
mov
subb
mov
mov
out
mov
inc
push
push
sub
das
inc
mov
jns
shlb
loopne
jno
xor
inc
mov
and
icebp
gs
imul
mov
pop
outsb
sarb
jmp
jno
sbb
pop
mov
push
or
sub
sbb
jnp
mov
aad
jecxz
pop
jmp
cmovae
xor
das
ja
fstl
push
pop
sbb
jbe
or
push
or
fs
xchg
aas
in
sti
push
in
jno
jns
dec
popa
js
inc
cmpsb
push
mov
push
and
xlat
mov
pop
icebp
cmp
inc
lahf
and
into
repnz
stc
pop
cli
add
insb
lea
pop
mov
push
mov
inc
mov
inc
rcll
push
and
or
pop
in
fisttps
mov
add
leave
xor
mov
mov
mov
out
dec
xorb
shrl
or
push
scas
ret
std
sub
jp
lds
push
mov
mov
jns
lahf
mov
mov
ror
insb
sub
popf
sbb
add
mov
lahf
fidivrs
dec
shr
ds
xchg
shll
sbb
inc
sbb
js
ret
pop
mov
add
ret
jb
repnz
or
leave
add
repz
fsubl
sub
jg
sbb
xchg
scas
xor
notb
push
lahf
mov
and
ret
xchg
adc
xchg
or
xor
mov
push
mov
addr16
and
xorl
iret
aam
mov
adcl
jno
scas
imul
inc
mov
xchg
jne
cmpsb
popf
xchg
and
data16
aas
insb
push
mov
dec
iret
loop
add
nop
clc
push
aam
jnp
add
fcoms
sbb
push
aam
cmp
out
mov
loopne
mov
scas
loopne
aas
fadds
test
push
int3
jmp
std
dec
scas
push
test
inc
stos
fwait
inc
test
inc
jne
xor
shlb
fstpl
mov
jle
push
int3
inc
cmp
les
xor
cmpsl
sti
loopne
fcmovu
sahf
push
adc
cmp
jmp
xor
or
xor
div
int
ret
dec
popa
xchg
xchg
pushl
mov
pop
test
idivl
jno
aad
loope
sbb
xchg
sar
movsl
xchg
cwtl
jg
jno
jne
pop
mov
adc
pop
test
dec
or
adc
mov
andb
adc
xor
pop
ret
mov
andb
pop
std
jecxz
cld
inc
add
scas
mov
shlb
jo
jmp
ljmp
mov
mov
pop
sahf
sarb
lea
cmpb
imul
sahf
push
out
mov
push
mov
push
sub
aas
data16
movsl
or
pop
adc
or
mov
xor
jnp
hlt
js
ljmp
pmullw
pushf
inc
jp
test
lret
or
jb
mov
in
cld
sub
cmc
jb
ljmp
adc
ret
xor
xor
adc
jecxz
stos
add
xor
ror
sarl
pop
ret
sbb
xor
sub
mov
xchg
aaa
mov
xchg
aam
sub
test
cs
sbb
mov
in
mov
adc
out
adc
sub
cli
xor
js
xchg
outsl
imul
lods
push
and
adc
inc
in
push
sub
fldt
mov
xchg
leave
inc
xchg
pop
sarb
sbb
rorb
sbb
pop
xchg
sahf
add
jle
repz
sti
outsl
sbb
mov
ljmp
shlb
add
pop
enter
cmp
cmp
push
lea
out
inc
mov
js
and
pop
aaa
arpl
notb
pop
enter
fcomps
cmp
lcall
xchg
push
mov
mov
sbb
test
cmpsb
mov
cmpsb
neg
mov
inc
aad
rcl
cmpsb
jecxz
call
push
dec
test
sbb
cmp
pop
push
movsb
lret
cli
cmpsl
push
mov
lcall
loope
in
xchg
cltd
xor
dec
add
arpl
or
xchg
mov
mov
xchg
push
jmp
das
cs
inc
and
push
addr16
lock
hlt
aam
ja
xchg
ljmp
xchg
cmp
mov
lock
in
dec
adc
xchg
cmpsl
and
test
adc
dec
lret
pop
dec
pop
repnz
mov
leave
xchg
nop
mov
testl
mov
mov
mov
inc
insb
jb
stos
dec
cld
mov
cmp
fisttpl
dec
cmp
mov
inc
aaa
mov
mov
ret
inc
xchg
pop
push
test
dec
divb
sbb
inc
repnz
dec
mov
aaa
nop
inc
mov
fdivrl
mov
incl
sarb
leave
push
mov
aas
cmp
inc
and
jmp
lds
cld
arpl
mov
inc
in
xorl
andl
fiadds
push
int3
lea
out
les
jbe
mov
xor
popa
cmc
movsl
xchg
sbb
cmp
movsb
ss
push
mov
addr16
scas
loop
jle
mov
and
ljmp
inc
push
loop
dec
pop
or
sub
sub
ret
mov
sbb
sbb
clc
rorl
cmp
pop
dec
mov
push
mov
jbe
jecxz
gs
xchg
clc
dec
sbb
aad
stos
jns
inc
scas
cmpsb
cmpsb
in
rcr
jne
lcall
pop
in
jp
xchg
clc
push
mov
mov
cmpb
xor
out
test
xlat
aaa
lds
stos
sbb
fwait
jge
rol
add
cld
out
cmp
push
or
mov
lcall
xchg
mov
incl
lahf
jp
lret
and
inc
add
outsb
push
loop
hlt
mov
lret
mov
push
das
outsb
dec
mov
sbb
lock
out
mov
mov
sahf
daa
adc
je
pop
ja
arpl
insl
xchg
pop
nop
xchg
arpl
cmp
aad
int
adc
arpl
mov
cli
sub
ret
movsb
push
je
inc
mov
jno
popa
pop
lods
movsl
aad
addr16
push
inc
loop
test
and
int
ja
xor
or
xlat
jp
outsl
test
xchg
push
ret
aam
cwtl
sbb
xor
mov
push
mov
xchg
mov
sub
cltd
leave
jbe
adcb
sub
fst
jne
adc
into
mov
xlat
add
cltd
arpl
cmp
addr16
cltd
add
loope
lret
loop
cmp
movsl
in
inc
imull
jb
push
fstpl
ds
sub
xchg
dec
xchg
int
push
inc
cmp
and
and
mov
dec
lock
xchg
lea
mov
fwait
dec
imul
lret
mov
inc
loope
jo
add
pop
inc
mov
cmp
enter
cwtl
out
fiadds
popa
int3
dec
jg
jns
ficoml
mov
in
mov
repnz
add
dec
sahf
xchg
pop
push
cmc
and
fcoml
pop
xchg
mov
cmpsl
push
push
icebp
or
add
or
add
pushf
xchg
or
dec
scas
sub
mov
pop
ss
jmp
adc
ret
int
jne
fs
ja
sub
lods
movsl
out
call
xor
shll
sub
jl
mov
out
popl
stos
adc
sahf
adc
adc
test
sub
popa
sub
sbb
ja
insb
mov
cmp
mov
mov
je
mov
jnp
xchg
les
sbbl
push
cmp
jle
scas
add
cltd
divl
repz
scas
sub
std
fdivr
lahf
or
cmpsb
mov
dec
dec
pop
jns
xchg
lcall
sub
test
shrl
mov
lds
mov
inc
cmp
adc
jl
cmc
mov
gs
ret
lock
sub
aaa
fdivrs
mov
xor
movsl
cmp
sub
les
call
push
adc
aaa
addl
aas
xlat
aas
imul
mov
mov
in
jp
adc
cli
insb
mov
pushf
jl
jp
adc
mov
push
pop
imul
mov
push
popa
add
mov
out
rclb
mov
sar
imul
mull
scas
push
sub
cmc
fidivs
bound
das
push
add
xor
dec
sti
cmp
cmp
in
mov
xor
aaa
fcmovb
test
cld
clc
insb
ffree
dec
mov
pop
xchg
pop
xor
add
aam
cwtl
sub
or
icebp
or
repz
jne
mov
stos
mov
fdivs
cmc
out
lds
or
inc
xchg
inc
xchg
cwtl
cs
je
xchg
cmp
fsub
gs
fs
inc
dec
out
daa
mov
xorb
in
dec
cmpsl
pop
add
mov
shrl
outsl
fucomi
sti
push
xchg
roll
clc
movsl
jle
sbb
cld
in
popf
addr16
and
enter
dec
cmp
icebp
inc
repz
dec
inc
jno
xor
fstl
movsb
dec
push
psrlw
gs
enter
push
lods
pop
sti
incl
add
and
push
aaa
into
jae
pop
xor
inc
jecxz
mov
jmp
lcall
out
rolb
jns
out
cld
movsb
popa
add
jle
scas
ret
hlt
mov
dec
fimull
xchg
mov
add
mov
mov
lahf
ja
push
loopne
dec
adc
ljmp
test
adc
into
mov
pop
inc
jno
jge
mov
stc
xor
dec
ja
sub
clc
gs
mov
lret
es
jnp
lret
jne
cmc
out
arpl
or
lret
std
out
sti
jmp
insl
mov
dec
int
int3
mov
and
dec
fwait
sbb
mov
xor
cli
fs
insl
sbb
dec
cmpsb
dec
jo
push
sbb
lock
pop
ds
mov
xor
xchg
movsb
lds
pop
dec
inc
ljmp
adc
cmc
mov
jmp
xchg
jmp
bound
in
arpl
lcall
xchg
mov
mov
adc
packssdw
pop
sarb
dec
adc
insb
lods
or
lds
or
addr16
imul
fs
mov
stos
mov
arpl
adc
in
test
pop
dec
pop
inc
out
adc
or
fisubs
cltd
subl
in
jns
push
pop
mov
sub
sbb
cmpsb
das
push
mov
pusha
mov
cmpsl
stos
jg
sub
test
dec
daa
mov
mov
test
cmc
aad
sarl
adc
push
jg
and
movsb
jno
lock
lret
xchg
or
dec
jns
sarl
addr16
mov
cwtl
shll
ljmp
add
pop
adc
arpl
cmc
and
sbbl
leave
pop
push
into
mov
add
push
push
repz
pop
fwait
shl
lods
leave
mov
xchg
out
sub
or
mov
push
sbb
push
push
imul
pop
adc
clc
push
lret
cmp
dec
jnp
dec
testl
push
sub
add
push
insl
sbb
test
das
push
decl
test
push
fcomip
jo
mov
lds
mov
xchg
xchg
cs
les
xor
or
or
pop
or
cmp
inc
add
jno
mov
fidivs
pop
out
repnz
ss
adc
mov
pop
shlb
hlt
cmpl
pop
jl
sbb
push
outsl
xor
inc
out
adc
call
xchg
push
stos
cmp
pop
in
fisttpll
popf
pop
dec
mov
mov
pop
jnp
fstl
mov
lods
sub
ja
add
xor
popa
add
lea
cmpsb
outsb
nop
mov
test
mov
leave
test
sti
or
inc
insl
aaa
rorl
jnp
jbe
jmp
push
sub
in
add
dec
daa
jnp
mov
and
ja
movl
divl
in
aaa
movl
xchg
push
sahf
lods
mov
and
mov
mov
sbb
and
sbb
sbb
outsb
push
dec
mov
jbe
rolb
mov
jmp
jle
mov
orl
ret
and
test
dec
dec
lds
push
xor
les
or
loopne
jg
cmp
jle
add
sub
cmp
or
inc
sub
dec
sbb
outsb
jne
mov
or
sbb
aas
lea
outsl
jmp
mov
into
inc
and
ret
or
push
repnz
jg
mov
stos
mov
loop
pop
lret
dec
add
imul
mov
cli
adc
cmc
aas
inc
sbb
in
shr
fstps
rcrb
xlat
cli
lods
scas
rcll
test
jno
lret
xchg
filds
sub
in
and
popf
insb
mov
xor
jno
icebp
in
pushf
add
xlat
into
add
int3
xor
adc
pop
add
bound
imul
mov
ret
das
lea
mov
xlat
leave
adc
aad
mov
fcoms
lahf
sub
mov
data16
push
fistps
jno
mov
inc
insb
mov
xchg
inc
sbb
fstps
mov
aad
out
shl
mov
push
mov
pop
aam
nop
arpl
fyl2xp1
stos
repz
scas
out
pop
clc
dec
loope
jl
mov
mov
inc
mov
movsl
shr
orb
lods
dec
mov
mov
inc
pop
cmp
std
xchg
and
popa
rcl
push
xchg
test
push
jno
cmp
mov
out
cmp
fnsave
jne
xchg
inc
xlat
loope
pop
ja
push
xchg
fidivs
push
sti
mov
add
pop
mov
pop
es
xor
add
cmpsb
dec
cmp
pop
popl
or
inc
pushf
adcb
mov
xlat
and
and
cmp
push
cmp
xchg
xor
push
lods
mov
jo
lahf
pop
xor
fistps
cmpsb
es
es
mov
rdpmc
pop
fwait
sbb
out
inc
mov
enter
loopne
and
ret
aas
cmp
jne
repnz
movsb
push
cmp
out
inc
mov
add
and
adc
jg
cmpsl
adc
fbld
notb
xchg
mov
in
inc
sub
lret
dec
fwait
jmp
cltd
bound
inc
adcb
pop
push
pop
push
jns
jg
pop
mov
sub
das
movsb
push
push
or
bound
push
pop
add
jo
adc
mov
sbb
or
gs
lds
and
shrl
jne
mov
clc
repz
clc
out
outsb
rorb
loopne
jbe
or
and
adc
test
jb
dec
inc
inc
push
pushf
inc
cmp
or
mov
and
mov
mov
dec
insb
and
int
shl
adc
mov
jo
out
dec
ret
or
jo
mov
ret
scas
test
in
mov
cmp
jne
dec
js
sqrtps
shld
jno
cld
mov
add
and
in
dec
loop
jle
loop
cltd
push
scas
das
cmpsl
mov
dec
jle
xchg
dec
mov
xor
adc
imul
adc
rcrb
mov
push
add
mov
lret
xchg
push
mov
outsl
subb
xchg
stc
sbb
lea
push
sub
jg
in
aam
xorl
dec
lret
sub
mov
into
jl
shll
adc
mov
enter
outsb
icebp
addr16
xchg
jo
cld
clc
inc
out
rclb
div
sarb
push
iret
test
add
push
sub
dec
add
vpsubsb
outsb
and
sub
mov
push
inc
out
idivl
insl
loop
dec
jne
insb
mov
sbb
fwait
sbb
rorb
movsl
mov
and
outsl
lea
mov
jecxz
cs
mov
push
push
negl
and
mov
inc
jne
adc
fisttps
and
lods
or
into
lret
jne
mov
aad
mov
in
mov
lods
ss
fcomip
mov
ljmp
xor
fidivl
push
or
mov
cmc
push
nop
into
stc
fdiv
mov
pop
mov
shl
and
in
or
inc
movsl
imul
adc
jns
xlat
jo
inc
push
pop
sarb
mov
jo
jecxz
ss
out
xor
aaa
inc
popa
sbb
imulb
shlb
repnz
mov
xchg
ficoms
mov
lea
jge
iret
mov
cmc
daa
dec
fcoml
aad
or
in
adc
shll
mov
adc
push
daa
push
loope
dec
or
mov
xchg
dec
inc
mov
pop
insl
pop
addr16
lods
popa
outsb
mov
loope
fcompl
shlb
xchg
xor
test
mov
cmp
daa
je
ljmp
in
dec
fmulp
jge
pop
stc
fbld
out
test
mov
roll
sbb
mov
ficoms
inc
fwait
sahf
enter
scas
iret
aas
dec
ficompl
xchg
mov
in
adc
push
call
and
lahf
mov
leave
push
out
add
jle
ret
mov
mov
int
pop
in
pop
or
fstpl
push
or
arpl
arpl
and
mov
mov
adc
xlat
loopne
call
loop
mov
xchg
inc
mov
and
es
rolb
push
xorb
mov
and
xchg
inc
aam
sub
cmp
and
jno
popf
cmp
loop
mov
or
adc
push
data16
jmp
fsubl
and
dec
insl
push
xchg
jnp
jnp
ret
jmp
je
pop
lret
addr16
jb
push
push
lahf
stos
dec
ss
xlat
insl
jo
push
add
cmpl
jmp
inc
movsl
inc
pop
jno
fxch
or
jnp
mov
sarb
sub
lret
pop
sub
xchg
cmp
inc
clc
int3
pop
push
mov
test
nop
aas
mov
mov
pop
jl,pn
int
push
insb
ret
mov
sarl
cmpsl
push
inc
add
call
and
jg
mov
ja,pt
jg
dec
imul
test
cmp
ret
inc
cli
xchg
mov
repnz
push
cmp
inc
jns
add
lods
adc
out
push
pop
pop
bound
mov
outsl
repz
sub
fucomi
loope
cmp
fstl
movsb
je
cmp
pop
test
jp
xor
cmpsb
aas
out
and
mov
fstl
scas
adc
or
stc
inc
ljmp
or
les
rcrl
push
icebp
or
in
test
mov
fldenv
mov
insl
pop
std
pop
mov
sub
loope
push
rorb
mov
mov
pop
pop
dec
bound
mov
push
mov
push
popa
sbb
jo
hlt
mov
add
es
pop
shl
movsl
inc
repz
scas
and
nop
inc
dec
shlb
push
inc
push
push
sti
jns
add
jne
push
int
sub
stos
in
leave
mov
ficoms
lock
push
xchg
pop
sahf
repnz
inc
jp
test
push
pop
cltd
sahf
or
xlat
ds
movsl
cmpsl
in
dec
in
mov
lret
test
sbb
call
in
hlt
mov
jg
rorb
clc
dec
pop
xchg
imul
xor
inc
and
jp
adc
pop
inc
popa
dec
and
lcall
dec
fwait
les
cmp
adc
and
aam
pop
cmpsl
mov
pusha
mov
stos
ljmp
adc
lret
dec
xchg
pop
pop
xchg
pushf
add
sub
daa
cmc
sbb
mov
mov
leave
fs
lock
addr16
sbb
scas
sbb
push
sbb
call
and
push
rclb
xchg
xchg
pop
mov
xchg
push
xchg
mov
sub
xor
jl
mulb
loop
roll
and
iret
loope
ja
inc
push
cli
sti
pop
dec
ja
fdivrs
xorl
and
out
into
mov
jl
into
pop
int3
mov
addr16
shrb
ja
sbbl
cmpsl
imul
xorb
and
aad
pop
or
add
es
loop
and
lock
jle
arpl
inc
shll
sub
cmpsb
sbb
mov
test
sbb
cmp
push
pop
out
cmpl
daa
push
sahf
lahf
push
subl
inc
stos
cld
dec
cmpsb
int
fucomp
shll
cmp
stos
outsl
fsubrl
sahf
lods
sub
xchg
jo
pushf
mov
or
push
pushf
and
aas
or
out
jp
and
pop
ret
jne
lods
pop
push
pop
sahf
pop
imul
xchg
mov
into
dec
dec
fdivrp
inc
ljmp
push
sahf
jmp
nop
into
mov
aaa
xor
sub
and
mov
jp
pushf
scas
imul
aaa
jecxz
pop
pop
repnz
xor
pop
lods
and
and
pop
or
xor
arpl
pop
sbb
sbb
daa
aam
sub
and
movsb
ret
imul
test
dec
movsl
lods
sbb
mov
pop
push
mov
scas
ret
fdivl
mov
in
pop
dec
cs
ljmp
mov
or
iret
movsb
and
jge
loope
push
shlb
stos
pop
test
daa
ss
xchg
mov
hlt
mov
add
xchg
js
rcll
push
sbb
cmp
mov
xlat
pop
push
cmpb
mov
fbld
iret
rcll
outsb
cld
mov
xchg
pop
outsl
dec
ret
pop
pop
enter
popa
popa
dec
prefetcht1
xlat
or
in
dec
std
sbb
sub
add
jns
iret
sub
loop
and
mov
js
rep
sti
inc
sbb
cmp
leave
lea
cmp
jle
mov
sar
dec
and
adc
int
dec
out
frstor
xchg
mov
mov
ret
push
fnstsw
call
lret
adc
mov
pop
call
or
xchg
subb
inc
ss
sbb
adc
sbb
xor
lret
cld
pop
mov
xlat
push
jle
sbb
mov
mov
sbb
pop
jo
jmp
enter
inc
jbe
ja
cmp
cmp
scas
xchg
leave
or
push
mov
add
jne
cld
jmp
cmp
lods
popf
pop
ret
and
inc
push
or
ret
fldt
pop
aas
sub
das
push
xor
cli
jne
movhlps
loopne
mov
aaa
and
daa
xor
js
cmp
leave
lret
rolb
mov
xor
or
sub
bound
mov
lea
or
fisttps
mov
in
mov
xchg
and
xchg
sbb
ret
fsubs
int3
lea
lods
add
outsl
push
loope
nop
lret
adc
and
push
lds
mov
or
push
xor
dec
cmp
jge
repnz
mov
stc
ss
in
cs
fbstp
iret
lods
dec
out
push
and
xor
lods
and
lds
mov
xchg
pop
loopne
in
out
push
xchg
inc
adc
sub
iret
int3
sbb
pusha
pop
aas
mov
stos
fnsave
mov
loopne
sbb
loop
xor
clc
pop
ret
sar
popa
lock
sti
push
dec
or
mov
sbb
sbb
mov
outsb
fbstp
mov
cli
in
sahf
adc
js
dec
xchg
sar
das
mov
fmuls
xchg
mov
data16
movsl
inc
pop
inc
dec
test
pop
insb
or
mov
xor
lds
jne
mov
std
int3
out
jecxz
shlb
mov
sbb
pop
cmpsb
mov
cmp
fidivl
and
xchg
outsl
sbb
sbb
inc
clc
daa
mov
aad
in
or
ficompl
js
outsb
cmp
cmpsl
ja,pt
dec
repnz
push
jp
push
dec
arpl
push
lods
xor
pop
sub
in
mov
cmpsb
cmpb
cmpl
mov
jmp
add
xchg
insl
jl
or
sarb
mov
push
sbb
add
jle
in
and
jmp
cmp
orb
bswap
subb
sbbl
cmp
inc
jecxz
fcmovne
fucom
jne
or
add
xor
cmp
push
xor
pusha
lods
scas
es
es
cmp
pop
xchg
rolb
mov
and
bound
fs
das
sub
pop
push
pop
out
out
pop
lcall
jge
lahf
enter
adc
cmpsl
bound
js
mov
jg
arpl
lds
adc
xchg
pop
mov
in
xor
cli
or
dec
lahf
mov
pop
cltd
xlat
jecxz
out
loopne
inc
adc
xchg
daa
fistps
xor
xor
jmp
shrb
loopne
pop
xorb
cmp
stos
nop
lods
loope
out
and
stos
adc
pushf
popf
add
sbb
bound
je
or
rcrl
xchg
into
jb
fcoms
adc
xlat
lock
scas
seta
cmpsb
stos
gs
jo
push
cwtl
pop
inc
mov
lods
pop
lods
outsb
jb
enter
cs
scas
mov
out
in
inc
cmp
lods
push
fwait
adcb
repz
sti
es
xchg
rcrl
outsl
repnz
push
sub
xchg
je
vmovss
outsl
bound
cld
loop
sti
inc
sub
pop
dec
mov
mov
lret
mov
mov
adc
sbb
cmp
arpl
adc
sahf
jmp
push
ja
sbb
lds
filds
lret
jl
in
inc
shrb
aad
push
pop
sub
js
add
mov
xor
int
lock
aam
sbb
jne
adc
cli
dec
cmp
in
inc
xor
in
dec
cmp
dec
ds
in
rolb
sbb
or
dec
xor
mov
outsb
and
dec
aas
mov
jmp
pop
mov
push
inc
aad
push
add
fmuls
mov
push
mov
leave
dec
mov
xchg
add
cmpsb
into
cltd
dec
stos
jo
xor
cld
mov
gs
xor
pop
test
sahf
bound
filds
ficomps
insl
inc
out
inc
jbe
popf
xor
scas
ds
add
sub
dec
sub
gs
cli
and
and
popf
sahf
xchg
xchg
or
mov
mov
add
data16
ret
mov
nop
sbb
mov
ss
enter
das
cld
lcall
dec
xor
mov
roll
pop
in
out
or
hlt
popa
xor
cmp
jl
jns
shl
add
cltd
mov
mov
clc
mov
ret
bound
in
lods
or
mov
call
sbb
cmp
jns
jb
ss
cmpsl
mov
cmp
or
mov
ja
mov
mov
jne
lret
dec
mov
outsl
pop
gs
jp
lods
jbe
pinsrw
gs
push
jle
sbb
sarb
dec
repz
cltd
dec
test
mov
test
movsl
cmp
test
out
test
idivl
lods
cmpb
or
sub
lahf
pop
daa
sti
inc
bndldx
xchg
push
sbb
dec
mov
nop
sar
sub
jge
scas
dec
leave
in
int3
add
hlt
adc
jge
dec
stos
cmpl
jno
repnz
fmuls
xlat
pop
jl
mov
push
nop
lahf
and
jg,pn
mov
dec
xchg
and
mov
xor
faddl
daa
pop
lock
jmp
mov
aad
faddl
sbb
jmp
push
push
imull
test
ret
jae
jg
stos
sub
adc
clc
test
jmp
lea
icebp
mov
mov
fadds
iret
insb
xchg
mov
lret
aam
fdivl
mov
int3
lret
sbb
xchg
les
insb
cmp
jne
orl
arpl
clc
es
jge
mov
inc
push
test
sbb
and
iret
jle
mov
lds
mov
jle
out
leave
adc
cwtl
xchg
std
out
inc
orb
mov
mov
mov
aas
cmp
mov
add
xchg
mov
mov
mov
popa
cmp
add
loope
fidivl
or
ja
adc
or
into
dec
xlat
shlb
jns
jns
aas
js
pop
jne
movsl
push
outsb
sbb
pop
sbb
out
mov
fstpt
jnp
jmp
scas
aad
jp
mov
pop
mov
push
xor
out
ficompl
and
mov
cmp
inc
xchg
int
fwait
gs
jns
pusha
adc
dec
mov
add
std
ja
adc
dec
add
xlat
in
lcall
test
xchg
dec
mov
mov
inc
in
jbe
stos
jge
mov
inc
xchg
push
xchg
lret
adcl
mov
test
pop
xchg
push
lods
xchg
mov
inc
sub
jg
push
xchg
shll
dec
pop
xor
adc
iret
popl
dec
mov
fs
adc
repnz
sbb
or
lcall
or
xor
shl
mov
cmp
loope
inc
push
cmc
push
mov
jb
sarb
cmp
jne
dec
xor
js
call
xchg
cmc
insl
cltd
or
loop
fnsave
shlb
jbe
xor
or
lret
inc
movsl
mov
add
pop
push
lret
mov
add
data16
mov
iret
push
test
les
sbb
mov
popa
mov
sarb
icebp
adc
inc
add
cmp
movsl
sub
and
sbb
imul
mov
ret
jl
dec
rclb
negl
inc
sbb
stc
cmpsl
fiaddl
mov
and
jmp
inc
je
fdivrs
lock
mov
jae
push
iret
es
in
sub
loopne
shll
dec
and
lret
push
imul
mov
cmp
loopne
xor
cwtl
movsb
loop
cmp
inc
rclb
inc
scas
loope
dec
test
xor
and
ret
jmp
shl
cld
cmp
xor
cmpl
xchg
mov
jge
dec
pop
add
mov
xchg
fidivs
jge
in
dec
or
mov
out
xchg
mov
xlat
mov
sub
cli
jp
push
mov
cmpl
pmuludq
jecxz
xor
or
lcall
mov
imul
pushf
sbb
repz
xor
sub
cmp
jns
movsb
add
nop
push
sub
std
test
dec
decl
cs
lcall
jge
or
les
popa
dec
je
mov
in
lret
xchg
inc
mov
push
popa
jb
inc
cmp
scas
xor
sbb
sub
bound
jp
outsb
dec
fists
mov
pushl
xchg
mul
xor
int3
jge
inc
fmuls
push
icebp
mov
and
fisubrs
mov
cmpsl
popa
sub
sub
add
mov
pop
clc
cmp
popa
sbb
xchg
xor
cmp
ss
roll
cmpsl
xor
stos
cli
test
movsl
cld
xchg
sub
jecxz
cmp
in
dec
fcmovnbe
sub
xchg
fistl
dec
in
aad
rcll
dec
scas
pusha
js
insb
ljmp
inc
arpl
xor
insl
inc
xor
mov
xor
adc
pop
daa
shrb
add
fst
bnd
sbb
dec
cli
xor
jmp
push
bound
mov
insb
sysexit
sbb
fistpll
insb
add
test
push
cmp
inc
insl
and
or
adc
loop
inc
lcall
out
mov
cmp
lret
call
add
cs
add
inc
dec
mov
pop
mov
sbb
or
jnp
inc
stc
insb
mov
aaa
outsb
sbb
mov
scas
inc
mov
cmpsb
mov
imul
cltd
hlt
fldl2e
js
ficompl
add
daa
mov
scas
xor
push
aas
sti
call
pop
insb
jge
adc
mov
out
shl
add
out
sub
xchg
pop
mov
addr16
push
inc
add
std
subb
pop
pop
adc
imull
out
cmpsb
fcomps
out
push
es
inc
scas
shl
movsb
mov
add
pop
insb
lods
adcb
fwait
in
cmpsb
xor
cmp
int3
mov
pop
mov
test
sub
mov
dec
add
xchg
pop
add
adc
cmp
sarb
add
incl
lcall
xlat
popf
mov
lahf
mov
add
std
sbb
cmp
mov
fsubrp
mov
subl
push
repnz
divb
lods
out
out
push
push
push
push
imul
fwait
mov
mov
mov
xchg
bound
int
imul
arpl
clc
adc
jne
fldl
inc
out
pop
mov
xor
ja
sub
outsb
and
mov
ret
imull
out
ss
mov
lods
xchg
mov
sbb
out
xor
insl
iret
inc
in
adc
inc
mov
xchg
and
hlt
ljmp
adc
ds
xchg
adc
cmp
sarb
xor
loope
cli
hlt
pop
push
nop
cmp
gs
lea
mov
and
mov
push
mov
xor
cli
adc
outsl
cmp
xchg
ljmp
inc
pop
cltd
jbe
lock
xchg
sbb
push
dec
pop
pop
fcomip
in
subb
sub
jmp
xor
push
fstps
xor
pop
push
out
xchg
int
dec
shrl
test
pop
mov
loop
lods
dec
adcw
mov
ret
les
xor
mov
lret
loope
dec
inc
dec
push
add
insb
daa
loope
pop
int
push
les
fsubs
jno
lds
jmp
and
clc
and
mov
push
mov
sahf
in
and
push
dec
dec
sbbb
xchg
mov
inc
movsb
mov
jecxz
xchg
dec
int3
xchg
rolb
mov
jl
lea
sub
xchg
pop
jg
mov
add
mov
lret
sbb
pop
cmp
jb
mov
mov
stos
lret
mov
and
sti
xchg
lods
test
daa
and
pop
cwtl
xchg
push
bound
mov
xchg
lock
shll
loopne
inc
pop
push
bound
test
fcomi
inc
lret
cmp
or
add
xor
jnp
out
adc
xchg
adc
or
in
adc
insl
add
sbb
lcall
dec
jl
jg
data16
sahf
pop
or
shrb
push
jge
jg
je
push
jle
xchg
xor
roll
loopne
fstpl
mov
out
shlb
ja
dec
fnstsw
adc
mov
lods
cmp
inc
mov
pop
lods
inc
or
js
pop
dec
out
nop
cltd
es
push
test
fwait
dec
out
mov
push
jne
test
inc
mov
aad
add
dec
into
sub
inc
test
sub
call
lahf
bound
insb
jns
mov
adc
adc
mov
jl
mov
orb
cmp
mov
das
stos
xor
movsl
mov
sbb
aaa
pop
dec
dec
pushf
mov
xchg
lock
mov
push
aad
jl
test
js
add
add
inc
xor
push
test
aas
ss
xchg
mov
pop
es
mov
pmullw
pop
test
sub
sbb
outsb
mov
xor
jbe
mov
dec
fdivrs
inc
rclb
adc
jb
es
add
or
andl
jl
dec
ret
out
xor
mov
pop
sub
les
sbb
outsl
xchg
xchg
pop
xor
push
jg
jnp
push
dec
jl
lea
ret
jl
cmpb
cwtl
push
adc
ret
orl
mov
push
mov
mov
andb
movsb
fbstp
xchg
xor
mov
addr16
out
or
jecxz
out
dec
xchg
push
mov
lret
test
xchg
xor
jg
pop
and
mov
push
leave
pop
inc
cmpb
jmp
scas
daa
mov
xor
mov
leave
lods
aad
icebp
js
xor
mov
movsb
cmpsb
subb
sbb
scas
shll
outsl
adc
lods
shll
popl
pop
call
and
xor
and
pop
lahf
cmp
ficoms
cld
adc
ficoml
ljmp
daa
les
js
fistl
xchg
lods
sbb
xchg
cli
pop
dec
lock
xchg
sti
mov
ret
cwtl
cmp
or
dec
fmuls
stos
mov
int
pusha
out
loop
xchg
es
lods
fdivl
and
sbbl
and
rcll
pop
cmpsl
out
aam
inc
lret
push
shll
or
cld
imul
pushf
sti
cmpsb
jmp
lret
cmp
iret
shl
sbb
arpl
cmpsl
fildl
es
outsl
xchg
push
adc
mov
hlt
pop
push
xorl
pop
add
jmp
aas
cmp
pop
mov
ret
data16
mov
lock
jmp
fiadds
sub
xor
das
adc
or
mov
outsl
add
jne
add
push
in
inc
sbb
adc
xor
mov
cwtl
sub
push
stos
and
mov
call
pusha
jne
mov
loopne
sub
add
ja
test
pop
sub
jg
cmp
repz
test
pop
inc
scas
arpl
mov
pop
pop
loopne
pop
ds
inc
dec
sbb
lret
jg
mov
gs
sbb
popf
dec
push
push
add
or
sbb
fsts
out
mov
cmp
xor
aad
inc
arpl
or
leave
push
inc
adc
add
imul
imul
jae
mov
pop
jp
mov
mov
call
mov
inc
movsb
mov
jle
and
jge
pop
nop
mov
fiaddl
fwait
dec
mov
scas
sbbl
test
dec
negb
les
jns
sub
jne
cwtl
in
and
cld
enter
lcall
cmp
dec
je
xor
mov
add
cmpsl
iret
mov
lock
xor
jae
mov
inc
arpl
mov
cmp
push
sbb
sbbl
pop
or
shrl
pop
and
outsl
es
mov
push
cmp
loope
stos
in
jne
mov
mov
xor
push
mov
ret
push
fwait
out
repnz
jbe
in
arpl
pop
hlt
sbbb
movb
ret
mov
mov
adc
loop
inc
cmp
icebp
jnp
movsb
inc
adc
jge
fwait
call
outsl
aam
rorl
sbbb
insb
push
cmp
adc
inc
addr16
mov
xor
xchg
outsl
mov
cmpb
push
xor
pop
cmpsl
xchg
mov
push
adc
out
fnstenv
xor
jle
jne
outsl
adc
lock
ja
xorl
enter
xchg
push
push
bound
mov
cmp
mov
dec
mov
push
hlt
dec
push
and
cwtl
or
mov
in
push
cmp
notb
add
sbb
cs
xchg
in
lock
sbb
pushf
rcrb
sub
popf
sbb
jno
outsl
lahf
add
cmp
jge
adcl
incb
adc
shrd
pop
orb
xlat
xor
add
mov
mov
adc
pop
xchg
sbb
cld
orb
mov
cmp
xchg
or
jmp
cmpsb
jmp
cmpsl
lea
mov
pop
sub
lret
aas
bound
ss
repnz
dec
cmc
dec
incb
or
and
ja
vpunpckhqdq
testl
mov
pushf
pop
std
jl
dec
push
ljmp
jmp
fisubl
in
clc
and
jg
out
mov
scas
ds
and
shl
sarb
mov
add
adc
push
repnz
jno
fcoml
adc
pushf
add
mov
and
aaa
int
int3
cld
dec
jmp
cmp
loopne
popa
clc
dec
pop
popa
sub
add
lods
sbb
cmpsl
das
stos
or
ret
andl
ret
sbb
and
cmc
fisubrs
add
pop
mov
cmp
sbb
xchg
cld
xchg
cmc
xchg
cmpl
jb
pop
cmpsb
outsl
mov
xchg
dec
jg
cmp
insl
push
cmp
aas
cmp
dec
scas
adc
loope
ror
sbb
xchg
test
stos
aas
jns
stos
fisubrs
inc
pop
es
sbb
lcall
lret
mov
enter
jne
outsb
pusha
test
out
or
mov
jle
sbb
or
dec
pusha
xor
jo
scas
nop
mov
mov
rorb
xor
out
cmp
repnz
push
pop
adc
shl
cmp
cmpsl
mov
outsb
sbb
repz
leave
test
adc
imul
push
int
fstl
dec
in
sub
jecxz
jecxz
adc
pop
insb
gs
jmp
dec
mov
push
lahf
mov
scas
in
loope
sbb
pop
pop
mov
dec
cli
pop
xor
icebp
push
sbb
jle
xchg
sbb
jg
cmp
je
in
xlat
jecxz
inc
sbb
add
or
push
mul
clc
ljmp
insb
jns
js
ljmp
xor
push
or
fists
fs
mov
repnz
sub
int
aas
xor
and
and
stos
add
loopne
stos
add
fwait
sbbl
repz
loope
lea
arpl
stos
clc
inc
insl
sbb
cmpsl
fs
and
jmp
out
mov
lock
jae
add
imul
inc
dec
int3
das
test
popf
jbe
jno
outsb
out
fwait
ljmp
sbb
cmpsl
sbb
and
inc
sbbb
shl
cmp
or
xorb
rcrl
insb
jbe
adc
add
ljmp
jp
cmp
push
out
mov
aas
adc
inc
rorb
xchg
test
mov
inc
fcmove
outsb
adc
aas
scas
lock
loop
adc
push
jg
inc
inc
cmp
lret
cmpsl
popf
inc
xchg
push
lret
rcrl
xor
pop
mov
jns
cltd
mov
inc
adc
and
sbb
ds
adc
xor
stc
in
pushf
pop
sub
jnp
jecxz
addr16
daa
ja
push
aaa
lcall
dec
jbe
mov
cwtl
nop
mov
jo
popf
lods
lret
sub
xchg
jne
xchg
sub
xor
dec
pop
sub
pop
pop
std
loope
sbb
or
or
mov
or
inc
adc
bound
xchg
aas
add
outsl
mov
vzeroupper
jo
xchg
inc
push
nop
popa
not
test
fsubr
jp
sub
pop
sahf
cmp
sbbl
sbb
loop
and
or
xor
add
in
dec
pushf
mov
fwait
mov
jne
shl
call
add
sub
movsb
cltd
sbb
dec
ljmp
and
addr16
pop
out
iret
adc
jae
jae
push
mov
or
inc
bound
icebp
adc
lods
mov
test
outsb
dec
xor
lcall
sbb
ret
test
inc
xor
add
inc
stc
and
data16
fstpl
cmp
and
sbb
adc
outsb
xorb
out
add
fcompp
dec
adc
mov
addb
cld
xor
pop
pop
rolb
sbbl
lds
or
lcall
movsl
mov
les
daa
dec
jge
mov
and
aam
and
dec
or
cltd
jecxz
fwait
sbb
js
cmp
addr16
test
je
inc
pop
dec
sbb
xchg
inc
leave
mov
cmp
xlat
cmp
hlt
and
xchg
pop
popa
sbb
hlt
cmc
or
sarb
inc
inc
lret
lahf
or
push
pop
roll
inc
sub
pusha
mov
int
cmp
sbb
sub
jp
mov
xor
sub
xchg
mov
jmp
cld
xor
cmp
pop
mov
popf
dec
push
pop
mov
xchg
mov
inc
lcall
enter
mov
in
or
xchg
dec
mov
cmp
adc
sbb
lods
lds
xor
dec
xchg
push
stc
and
sub
cmpsl
cmp
leave
popa
jge
inc
cmpsb
sbb
popf
testl
arpl
mov
jmp
insb
fwait
pop
mov
pop
cmp
fcoms
add
push
mov
push
cmp
xor
mov
leave
push
mov
insb
stos
aas
fdivrl
loopne
iret
lcall
jmp
in
pop
xchg
incb
int
mov
sti
push
pop
mov
push
ss
frstor
dec
aas
ss
mov
arpl
shrb
adc
cmp
enter
and
out
cmp
shlb
jno
mov
int3
xchg
push
pop
shrb
sbb
mov
std
inc
ljmp
or
adc
cmp
cwtl
mov
test
data16
mov
lock
sbb
scas
dec
insb
call
mov
sahf
or
decl
inc
push
mov
cmp
mov
lret
sub
ljmp
fidivl
xchg
ret
hlt
mov
repz
in
pop
and
rcll
inc
lahf
jecxz
repnz
mov
andl
das
sar
repnz
xor
out
dec
or
enter
add
dec
pop
insl
jns
and
xchg
cmp
pop
push
into
lret
std
popa
jmp
push
mull
stc
addr16
icebp
je
stos
mov
fxch
ljmp
aas
out
cmp
hlt
lahf
in
lahf
jecxz
add
sahf
adc
cmp
jmp
mov
orb
adc
ret
stc
dec
xchg
jb
std
mull
push
std
pushf
cmp
jmp
xchg
popf
fwait
jmp
mov
scas
cmpl
movsb
daa
lcall
inc
pushf
arpl
cld
pop
leave
call
fcom
push
out
adc
mov
cmp
aad
push
jge
add
mov
mov
or
lret
aam
adc
jne
xorb
sahf
jne
mov
push
out
add
mov
and
rcrl
dec
int
push
hlt
xchg
push
testb
and
xor
push
dec
push
fwait
dec
sbb
xchg
mov
sub
sub
inc
sub
pop
cltd
rep
dec
mov
in
push
clc
cmp
insl
cmp
jecxz
outsl
sub
jns
dec
scas
sbb
pop
mov
insl
addr16
add
popa
lret
lcall
mov
pop
hlt
pop
sub
sub
mov
popa
stos
nop
aaa
rorl
lds
int3
or
pusha
daa
lock
addr16
mov
divl
outsb
adc
push
and
inc
and
inc
loope,pn
dec
lcall
xor
ds
inc
jl
in
cmp
fucom
jmp
mov
stc
inc
loope
jbe
out
arpl
sub
mov
push
les
or
subl
jnp
mov
sbb
test
dec
stos
pushf
insb
cmp
push
insb
int3
inc
xchg
cltd
fldt
in
sub
aam
hlt
xchg
add
adc
sbb
gs
push
push
mov
dec
fwait
imul
sbb
push
or
adc
inc
outsl
pop
push
dec
jbe
rcl
and
cli
push
or
movsb
pop
lret
push
jecxz
stos
or
push
cwtl
aas
movsl
out
and
into
mov
xchg
out
lret
push
push
cmp
stos
adc
pusha
push
mov
or
mov
dec
aam
jge
sbb
push
sub
sbb
test
jb
cmp
data16
mov
jmp
das
outsb
dec
adc
sbb
icebp
ret
xchg
mov
movsb
cli
cmpsb
lock
push
outsb
fisubrs
clc
movsl
lret
mov
or
cli
sub
mov
inc
test
xchg
sbb
push
out
pop
mov
mov
add
pop
xor
add
adc
sahf
jecxz
push
mov
mov
push
mov
sahf
inc
lods
ljmp
mov
pop
xchg
jnp
add
imul
or
add
add
jb
ret
mov
popl
mov
fwait
cmp
repnz
pop
sti
mov
inc
mov
xor
ljmp
mov
add
stos
mov
mov
xchg
hlt
cli
mov
fs
js
ficoms
lds
xchg
push
inc
pop
add
mov
scas
sbb
pop
pop
jbe
imul
cmpsl
imul
outsb
and
test
mov
add
aaa
insb
xor
pop
jl
aaa
jl
dec
daa
push
gs
aas
repz
aam
out
in
js
push
data16
aam
ja
das
sar
imulb
cmp
sbb
lahf
popa
loope
xor
pop
imul
cmpb
es
adc
xor
invlpg
mov
ret
xor
cld
and
es
inc
adc
push
jecxz
cmpsb
jns
xor
in
push
or
xchg
shll
jmp
pop
cmpsb
mov
inc
adc
into
out
icebp
les
xchg
into
fsubl
push
fsub
rcrb
dec
push
aad
xchg
out
ret
push
jnp
xchg
in
fwait
xchg
xchg
mov
inc
icebp
insb
mov
dec
xor
mov
lcall
adc
mov
enter
shll
in
mov
cltd
aas
insl
jg
scas
cs
rolb
lcall
and
fsubs
sbb
xor
pop
xchg
test
mov
pop
aaa
push
push
testb
fstps
in
jge
sub
xchg
jmp
mov
aas
fdivr
daa
test
dec
sub
jnp
mov
sub
add
lahf
mov
mov
cmp
or
and
iret
push
sbb
cmp
adc
repz
loopne
adc
stos
jecxz
xchg
dec
adc
or
or
enter
adc
imul
fs
popa
xor
into
push
shlb
xchg
scas
inc
es
lods
cwtl
dec
sub
movsl
lret
inc
push
fdivr
imul
inc
jnp
and
out
enter
jne
and
fwait
mov
pushf
sub
mov
jp
push
dec
cmp
fsubs
mov
movsb
cmp
gs
into
mov
inc
add
adc
pop
mov
shrl
ds
insl
adcb
lret
ficompl
mov
call
pop
in
jns
inc
aam
daa
mulb
pop
sbb
scas
push
add
add
pop
sub
cmp
or
inc
xor
adc
aas
loop
repz
stc
sbbb
lret
aas
mov
jg
mov
cmp
mov
mov
xchg
test
mov
adc
test
jbe
sbb
xorl
push
int
jo
inc
jbe
cmpsl
outsl
pushf
pop
aas
sub
lock
cltd
cmpsl
xlat
je
cmpsl
arpl
xchg
add
sub
dec
aaa
fstl
sub
int
fcmovb
pusha
sbb
xchg
mulb
push
dec
mov
add
pop
mov
mov
js
mov
pop
mov
aas
or
out
jae
pop
push
push
pop
mov
adc
cs
out
push
pop
fldcw
mov
pop
inc
mov
ret
or
push
and
ret
inc
lea
and
mov
psubsb
push
cltd
jae
push
xorl
fbstp
lock
sti
daa
fs
arpl
push
cmp
sbb
xchg
jo
xor
xor
lea
mov
fcmovb
pop
dec
ret
nop
sub
jmp
in
arpl
mov
into
push
dec
sbb
add
das
cmpsl
sbb
stc
gs
jne
bound
lods
jp
mov
in
inc
adc
iret
xchg
xchg
ret
adc
fnclex
jge
pop
fbstp
jbe
xchg
xchg
or
cmp
aas
inc
dec
sar
ficompl
sbb
add
test
testb
bound
pop
dec
and
xchg
movsl
cwtl
fdivs
leave
aam
mov
out
mov
adc
int
aam
lcall
nop
inc
cmp
ljmp
out
sub
pop
or
mov
pop
add
inc
fisubrl
inc
testb
aaa
enter
dec
and
shl
or
or
fcoms
mov
ljmp
jmp
lret
test
loopne
in
xchg
xchg
dec
sbb
inc
cmc
or
popa
pop
push
dec
mov
ret
dec
enter
inc
mov
repnz
loopne
or
xchg
out
adc
aas
nop
in
jno
adc
fwait
push
jge
lahf
lods
and
pop
lock
scas
mov
out
push
add
data16
cmp
mov
fisttpl
into
sbb
jno
cmp
xlat
test
add
inc
mov
sbb
pushf
add
cs
add
mov
lock
out
loopne
sbb
shlb
jecxz
sbb
inc
dec
xor
cld
sti
xlat
sahf
lret
cmp
mov
mov
cmp
mov
adc
pop
cmp
test
hlt
test
push
push
loope
lods
std
adc
xlat
out
lret
nop
jno
mov
shlb
mov
dec
or
xchg
mov
test
faddp
or
mov
mov
pusha
inc
jecxz
aaa
push
or
jl
add
jno
lods
in
adc
jb
jo
push
sub
add
mov
dec
shll
sub
push
aas
test
jmp
push
dec
cmp
sub
iret
mov
test
das
daa
xor
xchg
push
imul
push
ljmp
ljmp
adc
subl
ljmp
in
push
mov
ret
sti
jbe
dec
cltd
jle
jecxz
fcompl
inc
pop
pop
mov
je
xchg
pop
movsl
and
and
aam
ret
inc
loopne
pop
insl
repz
sbb
loope
mov
pop
push
fdivl
iret
int
lock
push
xchg
popf
add
pop
push
lahf
movsb
dec
cmpsb
mov
das
outsl
nop
push
in
mov
pop
add
sub
mov
arpl
xchg
push
dec
aaa
mov
or
jnp
repz
ja
inc
sub
push
out
mov
adc
add
xchg
cmpsl
or
push
dec
push
test
cmp
jb
icebp
movsl
adc
ret
insb
movsb
cmp
or
lret
pop
or
insl
out
push
aas
or
cmc
pop
cmp
loope
test
cmpsl
mov
out
fwait
loopne
jne
jmp
inc
xchg
push
stos
sahf
lods
push
xor
out
inc
xor
jmp
adc
popl
aad
in
xor
lock
jb
jno
lods
in
dec
mov
stc
and
aad
clc
repnz
or
add
cmp
addl
mov
lock
das
les
ss
add
lods
jmp
add
outsl
xor
cmp
adc
jecxz
cmp
loopne
push
fsub
ja
das
loop
movsl
imul
shrl
mov
or
ret
imul
adc
roll
nop
fadd
xor
inc
fcmovnb
and
mov
add
xlat
pop
in
cwtl
xor
add
mov
and
cwtl
add
loope
pop
addr16
movsl
cmp
loop
imul
add
arpl
push
mov
mov
or
dec
pop
sbbl
in
xchg
push
sbb
mov
mov
sbb
dec
cwtl
out
mov
cmp
xor
and
fs
xor
sbb
push
lods
pushf
lds
dec
test
es
hlt
jne
loope
mov
xchg
pusha
sub
shrb
int3
cltd
pop
into
notb
mov
test
sbb
fsub
mov
xchg
nop
leave
and
aad
pop
and
lea
mov
lret
push
xor
notl
insl
inc
xchg
fwait
push
fbstp
inc
adc
push
sub
ja
push
popf
das
cs
iret
std
or
xchg
and
mov
jl
and
rcr
mov
lea
divb
aas
add
mov
inc
rorl
push
arpl
decb
vphaddwq
mov
movb
imul
push
mov
sbb
pop
add
mov
rorb
adc
lods
mov
in
pop
push
fsts
xchg
stos
pop
adc
das
arpl
sub
pop
cwtl
pop
xchg
push
arpl
pop
insl
mov
lcall
cmp
rorb
lret
aam
les
jmp
out
lods
sbb
lock
decl
or
int
repz
xor
hlt
adc
cmp
or
adc
ds
stos
push
inc
enter
mov
push
iret
sarb
cmp
add
inc
jge
jnp
mov
sti
xor
aam
repz
and
mov
jno
mov
pusha
lea
andl
and
lods
pop
xor
dec
test
jnp
push
cli
sbb
sub
lret
aad
loopne
cs
in
arpl
xchg
enter
sbb
jecxz
cmpl
xor
push
dec
mov
repnz
lret
sahf
sti
inc
aad
cwtl
pop
lods
ret
outsl
lcall
out
add
inc
pusha
fwait
cmp
sahf
inc
ret
dec
nop
test
jg
daa
movsl
push
fisttpl
jne
stos
sub
lret
pop
xchg
xor
adc
pinsrw
pop
jle
lea
xchg
scas
mov
xchg
lods
stos
aam
scas
adc
adc
inc
rclb
dec
les
or
loop
jg
les
mov
push
mov
lds
jbe
mov
or
nop
cwtl
jmp
mov
insl
or
dec
aad
mov
enter
stos
xor
sub
in
fiadds
jmp
cmc
shll
out
sbb
popa
sti
cmpsb
xchg
aam
fs
inc
fistpll
push
pop
popf
mov
ljmp
ds
lcall
scas
out
loopne
push
fnsave
aas
xor
cmp
int3
les
jle
mov
pop
jl
cmp
enter
imulb
bound
scas
bound
ljmp
jecxz
sarl
mov
icebp
ret
mov
arpl
lds
bound
push
adc
jno
push
mov
test
fstpl
mov
sbb
outsb
fisubs
filds
sub
popf
mov
ret
cmpsb
movsb
jne
push
aas
push
and
jbe
adc
enter
stc
mov
negl
push
mov
fcmovb
inc
xchg
xchg
sub
enter
or
jmp
lret
push
call
outsb
mov
inc
xchg
jae
xchg
push
sub
cmp
ds
pop
jge
jnp
adc
mov
leave
jbe
cltd
ret
and
nop
sub
push
lods
inc
icebp
movsl
sbb
test
jle
pushl
jb
das
notb
xor
mov
cmp
popf
sbb
pop
scas
xlat
cmp
cwtl
add
lods
cmp
add
mov
into
cmpsl
cltd
mov
out
lahf
jl
or
xchg
fcoml
mov
hlt
jno
and
in
punpckldq
push
pop
imulb
loopne
mov
inc
test
and
xor
rorb
adcl
push
movsb
push
fwait
in
push
xor
and
andl
ss
daa
dec
add
xchg
xlat
flds
push
xchg
jge
add
pop
les
gs
or
sub
push
add
cmp
repnz
cmp
sbb
add
testb
aas
ret
scas
and
mov
cmpsb
dec
dec
mov
fsts
sbb
lret
bnd
and
dec
and
fs
mov
dec
add
xlat
add
pop
sarb
mov
stos
mov
dec
roll
xchg
mov
sbb
push
inc
je
mov
mov
mov
clc
cmpl
enter
push
mov
rol
lahf
jp
test
sbb
pusha
mov
in
mov
das
jg
or
addr16
imul
mov
enter
lods
dec
inc
dec
inc
pop
pop
imul
sub
dec
mov
shrl
pop
lods
pop
andl
adc
cmp
pop
mov
loopne
jae
mov
or
add
lret
and
dec
sbb
cmc
dec
je
dec
add
stos
pop
imul
jo
adc
ds
pop
dec
into
sahf
add
xor
push
mov
xchg
cmp
cmpl
out
rcrb
stos
pop
gs
mov
jo
gs
pop
pop
inc
movsl
int
loope
int3
iret
scas
fwait
push
nop
aas
xchg
lret
iret
shrb
or
inc
push
sbb
sbb
fs
shll
xchg
dec
push
inc
mov
int
inc
xor
in
sbb
out
mov
outsb
sub
rol
sti
lahf
cwtl
jbe
xchg
jl
dec
dec
out
aas
push
movsl
cmp
lcall
mov
andl
add
sqrtsd
jae
or
icebp
jnp
pop
div
test
jbe
jl
shl
scas
aam
mov
xchg
addb
ljmp
arpl
mov
imul
mov
fbld
inc
jl
arpl
in
loope
cmp
xor
in
or
xchg
ficoms
repnz
jb
dec
dec
arpl
or
mov
lods
or
push
ss
iret
shr
push
pushf
sub
mov
rcl
xlat
test
faddl
cmp
fimull
push
sbb
fwait
in
lret
inc
jne
je
mov
xchg
ja
imul
test
sub
jg
loope
popa
dec
cmc
or
pop
jecxz
dec
mov
mov
movsb
das
inc
and
sub
pop
in
test
loope
mov
or
daa
dec
jno
mov
push
mov
or
ss
mov
leave
lret
cmp
daa
stos
fisttps
loopne
mov
and
push
push
xor
in
add
jae
mov
mov
psubw
clc
lods
push
ljmp
fistpll
mov
sub
jecxz
pop
aas
cld
inc
jl
imul
pusha
fbld
daa
pop
inc
or
sbb
inc
xorl
push
jo
pop
rorl
xlat
aas
mov
xor
pusha
mov
in
dec
pop
xor
xor
dec
inc
ficompl
int3
call
repz
add
test
dec
add
fmul
lret
jl
cmp
jae
jne
xchg
lods
xlat
lret
xorl
xchg
iret
pop
cld
cmp
inc
clc
inc
and
push
pop
fisubl
or
xchg
cs
mov
xchg
outsb
mov
mov
cmp
jmp
jbe
pop
mov
into
or
xor
ljmp
sahf
pushf
incb
mul
aam
lods
or
cmp
je
push
cmp
xorl
cmpsb
push
shll
xor
adc
sbb
ror
or
push
test
jecxz
jne
mov
mov
add
cs
mov
inc
call
xchg
lret
shl
sub
enter
fdivs
out
test
xchg
pop
mov
lock
scas
mov
ljmp
cmp
fldl
mov
add
fcoml
arpl
pop
cwtl
gs
sbb
xchg
mov
faddl
mov
imul
adc
lods
sar
lret
lea
movsl
mov
mov
mov
mov
les
mov
mov
sbb
sbb
leave
scas
cld
jns
lods
test
test
insb
sub
fucomp
popa
xchg
dec
outsl
sub
inc
sub
or
xchg
jno,pn
mov
into
push
ja
out
icebp
lods
mov
sbb
xor
add
sahf
or
insb
lahf
or
fdivl
into
sbb
push
test
cmp
xchg
call
in
data16
adc
pop
or
sub
js
cmc
jmp
js
push
js
adc
out
ja
test
jmp
stos
push
adc
popf
cmpb
pop
popa
push
pop
mov
mov
jge
or
outsl
scas
out
and
fisubrs
test
adc
orl
ss
xchg
pop
mov
cmpsb
mov
add
jge
shll
mov
or
popf
push
mov
pusha
add
out
lods
xchg
outsl
aam
loope
mov
add
cmc
adc
jnp
sti
pop
fadds
adc
iret
or
jnp
inc
cmp
jae
ret
out
jo
lret
gs
enter
xor
ret
movsb
andl
test
loope
jg
sarb
push
movsb
int3
in
push
movsb
mov
popa
inc
push
jmp
xor
insb
mov
mov
rolb
mov
fstps
clc
stos
jl
in
popf
push
hlt
or
and
push
lods
fidivl
mov
hlt
or
scas
out
sbb
pop
cli
pop
ljmp
testl
sub
mov
or
ja
lods
mov
repz
xchg
cmc
rcr
push
mov
mov
inc
ss
test
aad
sub
lret
out
fldl
js
movsl
rcr
adc
inc
sub
mov
inc
push
js
push
pop
fiadds
int
std
jge
shrl
cmc
out
div
fisttpl
push
and
or
dec
xor
inc
inc
test
push
cmp
jo
inc
sbb
stos
je
dec
pop
in
bnd
ljmp
cmc
mov
lcall
loopne
leave
or
add
scas
mov
mov
mov
add
shlb
mov
andb
int
jb
mov
xchg
fwait
mov
andb
fdiv
mov
sbb
xchg
sub
jnp
out
notl
jge
addl
pop
out
mov
cwtl
sbb
or
mov
inc
mov
xor
and
pushf
mov
sbb
fbld
or
nop
data16
outsb
pop
pop
dec
into
mov
cld
pop
jns
or
cmp
xlat
xorl
shrd
je
mov
sarb
loope
sub
scas
jne
cmp
pop
jl
ljmp
dec
lock
and
pop
dec
into
int3
mov
rolb
mov
aad
lret
or
push
mov
outsb
scas
sahf
lods
push
aam
mov
bt
sti
lcall
xor
clc
sub
sub
xchg
movsb
pop
fs
lock
sbb
bound
stc
sub
inc
push
outsb
sbb
mov
sarb
and
xchg
mov
xor
jne
popf
loopne
neg
pop
jge
xchg
je
je
sahf
outsl
js
repz
and
push
xchg
inc
in
jae
mov
sub
outsl
or
fnstenv
out
rcrl
jg
mov
leave
xor
inc
xchg
xor
jp
dec
out
sahf
ja
call
cmc
call
xchg
jmp
das
sub
inc
inc
sub
xchg
addl
or
and
les
add
repnz
pop
xchg
faddl
mov
or
inc
pop
dec
out
fidivrl
icebp
out
aad
mov
xchg
sub
mov
test
cmp
add
cmp
push
xlat
ds
push
loope
hlt
push
push
fisubrl
push
jno
pop
inc
lds
movsl
xor
dec
sub
cmp
daa
aam
mov
sub
adc
xchg
pushf
xchg
mov
xchg
aad
fs
push
out
xchg
in
jecxz
jmp
cmp
aas
addl
rcr
inc
cld
pop
insb
mov
pop
outsb
lahf
daa
xor
cli
mov
arpl
rcl
mov
orl
subl
mov
popa
push
repnz
push
pop
stc
cli
in
aad
test
movsb
popf
sub
jle
ffreep
and
in
jle
lret
xchg
outsl
loopne
hlt
dec
rcrb
xor
fadd
faddl
mov
adc
jno
insl
push
push
popf
add
mov
mov
stc
add
pop
fbld
xchg
pop
mov
sbb
outsb
mov
xchg
ror
mov
push
push
test
out
pop
std
rcll
std
loopne
push
das
icebp
cwtl
pop
mov
les
pusha
in
and
cmp
cmp
dec
adc
fs
cmp
pop
aad
roll
mov
mov
jp
idivb
nop
jne
jl
movsb
ljmp
sahf
fwait
cmp
pop
mov
push
cmpsl
in
fisttps
hlt
andb
fldl
jl
mov
xor
or
push
cmpsl
adc
out
xor
jmp
iret
rcl
loopne
sbb
and
xchg
dec
repz
std
cmp
mov
lds
lret
shlb
xlat
movsb
test
push
sub
andl
cwtl
dec
daa
xchg
xor
adc
mov
adc
movsb
les
mov
test
push
fs
sbb
cli
or
nop
inc
jg
adc
mov
cmp
lahf
xchg
clc
insl
sbb
dec
cmp
imul
jb
mov
fsubrp
js
icebp
sti
popl
imul
pop
fs
scas
push
movsl
cmpsl
fimull
push
pop
xchg
inc
inc
vorpd
mov
xchg
loop
xchg
out
call
lahf
les
arpl
xchg
mov
sub
popa
and
xor
inc
add
leave
adcb
mov
into
cld
repz
add
lahf
and
pop
loop
addr16
jo
push
jbe
add
pop
stos
shrb
jne
mov
in
sub
int
jmp
in
lcall
imul
inc
mov
fildll
xchg
loopne
jns
mov
out
xlat
in
jno
mov
out
movsl
mov
scas
mov
das
pop
pop
sub
int3
push
addr16
and
adc
cli
xlat
xlat
int
jg
enter
sbb
sbb
dec
out
repz
test
jno
lods
and
xor
mov
cmp
aaa
push
lcall
fistps
bound
push
aam
sub
mov
fnstenv
cltd
or
stos
imul
or
stos
sarb
pop
pusha
out
dec
sub
cmp
pop
notl
mov
arpl
lret
cmc
std
stos
jecxz
adc
shrb
cmc
outsl
fcom
mov
cmp
loopne
cmpsb
fcoms
pop
loopne
icebp
mov
add
push
mov
and
int3
ret
xchg
jo
insb
mov
push
xchg
mov
and
cs
dec
adc
shl
xor
add
testl
pop
adc
lret
inc
add
inc
inc
sbb
xchg
pop
out
cmpsb
and
ja
cmpsl
push
push
rolb
mov
add
push
int3
mov
or
sub
int3
add
loopne
jne
push
inc
or
or
dec
adcb
dec
fnstenv
lock
dec
jle
add
mov
pop
and
cltd
mov
jns
add
cs
push
xchg
xor
xchg
sbb
and
mulb
sub
bound
xlat
jne
ss
icebp
jmp
cmpb
and
jnp
adc
arpl
sbb
out
jge
mov
lahf
mov
notl
stos
mov
cmp
clc
in
fsubr
push
pusha
mov
adc
push
rcl
sbbl
sbb
sbb
bound
jb
or
push
mov
sbb
adc
mov
outsb
push
and
add
xchg
xchg
mov
cmp
aam
mov
dec
repz
jle
jp
mov
sbb
cmp
add
jge
imul
mov
leave
loopne
xchg
movsl
sbb
xchg
xchg
repnz
out
lret
jecxz
sahf
arpl
mov
xchg
shl
insb
fstpl
add
xchg
subl
sahf
ljmp
dec
sbb
push
test
and
cmpb
dec
and
add
inc
xchg
inc
push
fwait
pop
pop
stos
jnp
sub
aad
push
mov
scas
lret
pop
in
xchg
cwtl
scas
in
hlt
mov
or
sti
add
jb
push
icebp
dec
inc
push
or
sbbb
rorb
pop
sub
jnp
lods
sub
psubd
cwtl
icebp
roll
xchg
pop
cmp
mov
cmp
jmp
in
out
jbe
mov
nop
lock
inc
jns
add
jg
mov
loope
jne
stos
push
and
mov
lods
cld
js
out
sub
stc
popf
dec
push
mov
jb
movsb
enter
inc
or
loope
les
fs
and
mov
cmc
sahf
leave
andl
nop
out
sbb
scas
loop
insl
aad
sbb
into
push
mov
mov
sub
mov
aaa
xchg
fwait
shrb
lret
mov
lcall
mov
push
xor
push
mov
test
popf
pop
das
mov
dec
test
into
imul
out
cld
insl
adc
pop
pop
mov
xor
out
dec
jb
ficompl
hlt
push
es
inc
mov
cmp
jmp
rcrb
scas
jp
mov
adc
jns
sub
mov
sub
pop
in
fstps
in
out
push
push
addr16
push
data16
iret
dec
xor
sbb
popa
mov
dec
cmp
mov
jp
fisubs
fists
xor
js
cmp
jp
lret
jb
icebp
push
cwtl
mov
popa
push
repnz
push
xchg
lods
jecxz
lds
cmp
mov
adc
mov
push
lret
sbb
add
xor
xor
jns
add
cwtl
mov
adc
lcall
push
lahf
ds
mov
pop
aas
popa
outsb
addb
and
mov
js
xchg
or
in
fwait
imul
fstl
test
iret
and
sarb
loopne
ret
inc
out
cmovl
sbb
int3
loop
std
test
mov
xchg
in
js
scas
mov
pop
movsl
cwtl
test
shlb
xchg
sub
shll
jmp
cmp
cmp
aam
mov
mov
mov
xor
out
adc
sub
je
and
fildl
ficoml
popf
iret
mov
pop
sbb
out
xchg
xor
mov
in
negb
shlb
or
sarb
jl
jae
pusha
inc
jp
jb
and
mov
push
pusha
add
int
out
dec
xchg
push
xchg
pop
adc
jle
jecxz
lods
sub
orb
adc
inc
add
push
popa
les
dec
popl
inc
scas
sub
lea
lea
jns
mov
push
mov
cmp
out
push
or
push
adc
jp
pop
in
cmp
push
xor
push
jle
push
jne
xchg
test
stos
pop
ret
mov
scas
xchg
inc
dec
sbb
loope
xor
cmp
mov
mov
jge
outsb
add
push
sti
mov
sub
and
inc
decl
push
xchg
adc
or
cmpsl
lret
cld
frstor
pop
xchg
mov
fnsave
fistpll
cli
push
fcoml
dec
xchg
sbb
jl
fisubs
push
fsubrs
inc
push
dec
bound
and
and
push
adc
xchg
clc
add
movsl
mov
mov
jmp
sbb
int
js
loopne
jae
js
dec
adc
in
mov
aam
movsb
fadds
jae
inc
orb
sub
lret
stos
movsb
inc
jns
adc
in
ja
or
fldenv
cmpsl
in
add
insb
decl
mov
aaa
mov
dec
fistpl
adc
push
outsb
cmp
ljmp
push
lcall
call
mul
mov
aaa
dec
mov
or
xchg
lretw
cwtl
les
and
nop
sub
sub
cs
das
and
bound
in
call
jae
vsubsd
fiaddl
sub
out
addr16
cmc
or
sub
dec
inc
sbb
pop
ret
add
aam
shll
shll
cmp
xor
arpl
push
adc
jo
adc
jae
xor
mov
sbb
jle
lock
sub
inc
adc
inc
stc
rorl
movsl
test
ret
add
shll
dec
nop
adc
nop
cmp
jg
popa
jp
dec
mov
arpl
cmp
cwtl
dec
nop
mov
fidivrl
xlat
repz
sbb
dec
out
clc
xchg
jle
pushf
inc
loope
lock
stc
or
cltd
adc
out
mov
stos
nop
inc
push
adc
mov
pop
jmp
mov
mov
test
push
stos
in
mov
cmp
imul
pop
add
xorb
jne
cmc
mov
or
cmpsl
mov
pop
adc
cmpsl
sub
out
pop
cwtl
xor
leave
dec
adcb
and
stos
push
add
or
or
mov
loope
pop
xchg
enterw
push
mov
fcoms
icebp
inc
push
xchg
iret
pop
adc
mov
mov
sbbb
xchg
xchg
cmpl
jmp
mov
fs
in
and
shlb
dec
popf
pop
hlt
out
idivb
mov
pop
jno
pop
jg
leave
popa
not
into
xchg
hlt
bound
jnp
call
movl
repnz
je
dec
sub
mov
pop
fmuls
aas
ds
adc
cmp
mov
cmpsb
shrl
push
scas
xlat
mov
dec
add
lds
xlat
rcl
mov
cmp
mov
mov
dec
mov
push
gs
ret
mov
push
mov
and
pop
lock
inc
inc
xor
pop
adc
xchg
xchg
shll
or
pop
fnstenv
xchg
push
cltd
mov
mov
inc
sbb
cmp
push
sbb
inc
fistl
inc
lock
inc
mov
out
add
pop
fdivr
and
shll
lods
stos
rcrb
xchg
pop
sub
leave
cmp
inc
icebp
enter
fwait
lds
repz
andb
test
adc
call
lcall
icebp
stos
and
sub
and
mov
int
bnd
sub
imul
jb
adc
mov
sbb
js
dec
and
lds
es
pop
lret
dec
mov
inc
or
mov
jns
push
out
mov
out
dec
adc
pop
stos
jle
push
int3
pop
sbb
movsl
pop
mov
jmp
xchg
iret
daa
cltd
sbb
pop
mov
pop
push
scas
sub
xor
in
add
add
pop
and
addr16
mov
ret
div
lret
sub
push
call
addr16
push
adc
pop
push
mov
sbb
insl
jns
cwtl
mov
inc
adc
sub
sub
mov
decb
lahf
adc
cld
inc
lret
out
pop
add
incl
dec
add
shrb
in
sti
add
insl
jl
es
dec
lahf
idivb
sti
and
pop
hlt
adc
out
ret
ror
shl
mov
stos
bound
jb
inc
xor
add
mov
inc
popa
jno
dec
xchg
jg
out
or
imul
jge
sbb
les
addb
fisubl
icebp
fistpl
push
sbb
popa
mov
test
and
rorl
xchg
dec
cmp
xor
add
adc
fwait
pusha
mov
mov
jne
push
or
xchg
cs
rorb
call
jg
movsb
dec
push
mov
ret
popf
jo
stos
xchg
incb
fcomi
movsb
lods
inc
inc
or
mov
or
pop
pusha
jns
arpl
mov
sbb
cs
pushl
push
and
xor
inc
mov
data16
push
cmpsb
mov
add
shl
mov
or
testb
sti
shrb
test
sub
fdivr
mull
sbb
imul
adc
sub
pop
rorl
outsb
in
jns
repnz
popa
imul
xlat
sub
adc
sahf
lods
add
out
push
add
daa
jge
in
adc
jne
xchg
out
shrb
jg
mov
clc
getsec
inc
cmp
inc
or
daa
pop
movsl
popf
iret
adc
jge
jae
jne
inc
sti
data16
xchg
call
and
cmpsl
and
test
mulb
or
ljmp
inc
lods
mov
call
subl
daa
xor
sub
movsb
push
setne
mov
scas
je
in
sub
insb
xchg
lcall
int
fisubrl
fstpl
addr16
test
cs
mov
push
push
xlat
pop
dec
mov
lock
in
sbb
inc
pushf
movsb
out
enter
shll
std
inc
xchg
push
ja
shl
fcmovbe
pop
pushw
adc
shr
pop
fcmovu
subl
daa
and
cmc
jl
jnp
les
inc
jbe
pop
dec
sbb
scas
jb
daa
xchg
shrb
jmp
cli
sbb
mov
or
popf
sbb
outsl
aad
sub
loope
or
sub
iret
mov
addl
jg
cmp
int
into
pop
inc
mov
add
sub
mov
xor
fdiv
repnz
cmp
adc
add
fstl
arpl
mov
out
mov
mov
cwtl
rol
enter
sub
mov
outsl
lret
mov
and
ret
push
ret
arpl
jl
les
xor
inc
dec
movb
lret
sbb
cmc
mov
pop
cli
sub
in
cmp
test
sub
pop
lcall
add
cld
lock
fcmovnu
pop
pusha
into
je
shl
push
addr16
cli
das
mov
xor
xor
les
jo
push
fsubp
dec
fs
insl
cli
cwtl
sbb
sbb
cs
xor
dec
mov
fbld
stos
xor
xor
add
mov
cmc
add
shlb
pop
fdiv
adc
mov
imul
cwtl
clc
push
or
sbb
sub
loopw
jp
xchg
cltd
lods
ret
adc
pusha
mov
mov
fs
jmp
pop
lock
fprem
daa
minps
cli
arpl
sub
add
cmp
cwtl
and
roll
mov
xchg
mov
les
sub
inc
pop
lods
lcall
inc
or
in
lret
test
xchg
jo
fwait
leave
sub
or
cmpsb
lea
pop
sub
adc
arpl
les
cmp
je
pop
cwtl
jmp
cmp
mulps
loop
mov
in
sbb
ficomps
out
repz
arpl
cltd
push
lret
xchg
cltd
push
inc
sahf
pop
in
mov
pop
cwtl
add
sbb
xchg
xchg
and
sar
adc
nop
mov
mov
lods
aad
xlat
inc
cwtl
mov
rcrl
add
mov
mov
movl
mov
data16
mov
push
fwait
sub
push
mov
or
movsb
sub
lahf
scas
insl
pop
les
sbb
push
mul
pop
fldt
imul
sub
mov
xor
or
shl
inc
xor
mov
mov
or
lods
pop
and
sbb
neg
adc
cmpsb
push
dec
stos
negl
push
jb
loop
cmp
xchg
ret
add
test
mov
jecxz
sub
fstpt
and
outsl
cmp
fisttps
out
mov
cmc
or
jp
add
jp
cwtl
add
aas
fists
ja
insb
mov
shrb
dec
cld
pop
fimuls
daa
cs
xor
mov
jl
shrb
sub
or
test
lcall
xchg
or
mov
std
mov
ss
xchg
or
cmp
sub
jae
mov
sub
movsb
jg
inc
mov
xchg
pop
push
pop
cmp
cmp
rclb
adc
mov
add
cmp
andl
icebp
lret
cmpsl
mov
fndisi(8087
adc
fidivl
mov
inc
test
mul
inc
sbb
jmp
sub
sub
lea
dec
clc
sub
sub
jecxz
cltd
xlat
int
ret
or
push
and
xchg
ret
inc
ja
test
fdivp
in
roll
mov
idiv
mov
add
out
push
div
mov
in
mov
cmpsl
sbb
fcoml
push
fcmovne
popf
add
jle
mov
cmp
loopne
xchg
les
cmp
pop
and
inc
mov
add
test
out
pop
cltd
push
das
stos
xchg
ret
pop
add
dec
cltd
push
gs
sti
pop
adcb
dec
mov
or
pop
adc
aad
pop
insb
pop
leave
sbb
pop
push
add
fcomi
cs
inc
ror
or
xor
fisttpll
scas
mov
inc
std
fcomip
fldl
xor
aaa
push
dec
lods
jl
push
push
out
aam
add
mov
into
ja
xor
testl
psubsb
popa
cmp
mov
imul
and
mov
lods
inc
adc
loopne
mov
in
aas
xor
jns
sub
sub
fwait
sahf
jb
jge
cmp
add
imul
push
xor
xor
fidivrs
mov
adc
rolb
dec
mov
xor
in
cmpsb
bound
cmp
mov
push
or
pop
add
pop
jnp,pt
push
add
stc
hlt
sbb
jo
es
stc
lahf
cmova
fstps
ficoms
lahf
cmpsl
lods
aad
mov
mov
mov
lcall
push
repz
outsb
mov
xlat
jae
notl
iret
and
push
popa
clc
inc
dec
mov
ds
sub
icebp
enter
xor
mov
popf
int3
dec
pop
or
cmc
test
push
dec
lea
xor
hlt
rorl
dec
out
cmp
fstpl
xor
insl
sahf
aaa
jle
js
cmc
xchg
in
dec
pop
cltd
mov
mov
aas
aaa
mov
push
lcall
dec
aad
sub
pop
or
mov
roll
xchg
dec
cld
adc
int
and
movsl
loop
dec
add
xor
dec
mov
mov
xor
xchg
mov
mov
ja
sahf
pop
orl
rorl
pop
and
stc
out
jl
mov
xor
repz
lret
xor
jbe
xchg
rep
mov
in
pop
sahf
scas
sti
orb
push
xlat
int3
push
pop
cmova
stos
sbb
clc
cmpsl
loope
adc
add
loope
or
cmp
add
iret
xor
cmp
test
xchg
aad
pop
cmp
popf
lret
add
xor
jp
lock
add
int
push
jae
sub
lds
imul
mov
sbb
outsl
dec
and
data16
and
mov
inc
repz
mov
ret
dec
divl
push
hlt
popa
sahf
mov
pop
filds
lahf
and
aas
lahf
int
in
cmp
int
pop
sub
ficoms
jbe
mov
sbb
popa
test
jge
orb
pop
mov
imul
mov
cmpsb
cmp
fs
sbbl
push
and
insl
or
loopne
push
and
inc
pushf
lods
dec
inc
cli
adc
imul
mov
sbb
mov
mov
dec
xor
sbb
push
out
cltd
inc
jg
add
cmp
mov
xchg
push
jnp
push
mov
inc
roll
loop
jb
loop
xchg
xchg
rclb
sbb
aad
addr16
dec
test
popa
add
cmpsl
int
inc
test
insl
mov
clc
adc
jl
es
cld
lret
in
cmpsl
idivb
imull
xor
cltd
push
and
cmp
lahf
add
mov
imul
hlt
or
inc
mov
les
jmp
mov
pop
jns
lds
cmp
adc
jmp
jns
jb
repnz
test
jge
lods
xchg
and
or
mov
iret
cmpsb
sub
cmp
jle
dec
aaa
jg
jae
sbb
sub
fwait
inc
stos
jb
lds
loopne
sub
xor
or
xlat
iret
aam
mov
jl
push
rolb
ljmp
int
xor
cmp
cmpsl
push
cmc
in
lea
push
jo
sub
add
pop
mov
xchg
push
jmp
daa
maxps
jmp
in
mov
insl
lret
fcmovnb
das
inc
cli
fidivrs
ljmp
add
xor
out
repnz
testb
fucom
push
inc
stos
push
loop
cmp
out
push
mov
and
mov
lret
ja
inc
pusha
in
pusha
jns
test
leave
sub
sbb
mov
roll
xchg
cltd
mov
xchg
pop
xchg
scas
cmpsb
jmp
pop
fcoml
mov
add
mov
push
inc
sbb
and
cmp
adc
pusha
icebp
mov
scas
jnp
xchg
mov
shll
insb
icebp
pop
mov
int3
rcl
subl
mov
xor
xor
add
aam
pop
mov
add
or
jns
push
mov
xor
stc
test
or
sbb
xorb
mov
sub
faddl
pop
or
lret
add
imul
das
cmpsl
cmpsl
push
xchg
imul
xlat
mov
or
or
lea
bound
jbe
lahf
and
mov
and
jne
jb
xchg
push
insl
sub
cmp
hlt
jne
inc
inc
pusha
mov
subb
rcl
adc
pusha
pop
fidivrl
cmpsl
sbb
adc
dec
pop
cmp
sub
les
cmp
sub
notb
add
and
and
and
sbb
pop
mov
jbe
xchg
adc
aam
push
int
jl
ds
pushf
adc
shrl
sbb
adc
cmc
mov
mov
orb
adc
inc
fwait
lahf
iret
aaa
sbb
jg
push
or
jo
jnp
cmp
lcall
sbb
test
or
vpmacsdql
mov
repnz
stos
aaa
push
mov
stc
ljmp
movsl
lcall
clc
jne
adc
iret
cmp
cli
inc
fstps
add
jp
sub
cmp
call
cmp
mov
ljmp
ss
xchg
fs
ret
test
and
out
dec
pusha
js
fmull
cs
mov
imul
cmp
cmp
add
in
sbb
xlat
jp
xor
push
inc
jns
jne
inc
and
aad
std
dec
ret
imul
xchg
push
sub
adc
cltd
stos
xlat
sub
lods
daa
pop
xor
sbb
stos
dec
adc
jge
cwtl
cmp
sarb
sahf
mov
pop
xchg
bound
dec
sub
and
sub
xchg
xchg
cmp
out
pop
pop
enter
push
iret
push
loope
cmp
cmpsb
push
ljmp
and
dec
mov
cmp
cmp
add
xchg
dec
mov
push
lods
mov
loop
cltd
das
bound
add
arpl
pop
jno
dec
jbe
in
pushf
imull
or
lret
pop
xchg
inc
mov
loop
nop
mov
or
xor
in
cwtl
jp
pusha
cmp
jle
jae
ss
inc
cli
movsl
or
repnz
leave
out
adc
les
and
mov
ja
fs
jmp
sub
cltd
icebp
ret
fs
cltd
cmpl
dec
scas
jge
je
pop
insb
insl
andl
adc
jp
inc
and
shll
and
mov
xor
ret
xchg
jnp
sub
aas
outsl
push
insb
ret
push
ret
cmp
pop
add
les
loopne
mov
inc
add
outsl
outsl
jl
cmovp
imul
fninit
lret
cltd
pop
flds
pop
mov
insb
lods
aam
mov
push
popf
mov
pop
mov
mov
cwtl
mov
inc
jle
pop
and
arpl
lods
adc
daa
pop
test
aam
add
adc
dec
movsl
pop
mov
jg
cmpsl
ja
call
and
adc
mov
push
rol
je
fcompl
cmc
shrb
inc
xlat
js
cmp
xchg
arpl
add
mov
sahf
xor
ljmp
mov
mov
add
pminub
jg
scas
jl
das
mov
or
push
rorb
outsl
test
pop
loop
sub
clc
stc
sbbl
adc
xchg
int
adc
adc
lock
push
inc
iret
inc
jnp
xor
out
jle
jnp
movsb
mov
or
mov
push
jle
mov
adc
mov
insl
push
mov
movsb
popf
pop
pushl
push
test
ljmp
cli
xor
cmp
iret
inc
cmp
ss
out
sub
pop
add
or
orl
out
or
in
mov
and
mulb
cmp
ja
std
add
xchg
push
push
std
or
pop
in
xor
cmpsb
dec
sub
aas
into
dec
lock
idivb
adc
rol
psrld
mov
scas
jecxz
xchg
or
dec
dec
movsb
hlt
shrb
jb
mov
dec
inc
add
mov
fdivrl
add
stos
mov
lea
inc
mov
cmp
dec
mov
jg
mov
mov
sbb
addb
sbb
lods
sub
xchg
inc
cli
xchg
mov
imul
or
cs
push
push
ljmp
xor
add
rclb
xchg
repnz
je
mov
pop
out
repnz
stos
pop
mov
mov
call
pop
fistps
fmuls
out
lea
cmp
pusha
mov
mov
int3
xchg
pop
mov
sarl
dec
mov
mov
testb
cmp
sub
cmpsl
dec
push
loope
addr16
pop
into
loop
mov
mov
cmp
cmpsb
sub
fs
cld
xchg
cmp
in
loope
lret
fidivl
xlat
iret
rorb
icebp
in
cmp
mulb
and
cmpl
mov
movsl
mov
cld
mov
dec
lods
mov
jmp
mov
out
jge
loope
add
adc
inc
xor
je
cli
cltd
mov
xchg
mov
xchg
sbb
add
sahf
mov
jle
adc
pushf
cmp
sub
test
sub
cs
xchg
int3
mov
gs
ljmp
and
ss
cltd
cmc
iret
mov
bound
pop
ja
adc
in
pop
insb
xchg
xor
repz
push
xchg
scas
jae
cltd
add
imul
mov
and
or
rolb
inc
arpl
xor
xor
notl
iret
inc
movsb
rorl
push
in
js
adc
ret
mov
sub
cli
pusha
stos
aad
pop
jne
inc
push
mov
out
adc
lret
inc
mov
sub
out
adc
enter
push
cli
loopne
pop
clc
cs
je
popa
dec
in
xor
and
jle
dec
inc
addr16
or
test
adc
xchg
mov
pop
fcmovnb
jg
out
sbb
iret
shl
add
fisubl
xchg
stos
rorl
shlb
sbbl
mov
or
loope
loope
push
pop
and
push
outsl
cmp
cmp
mov
nop
rclb
lret
cmp
jecxz
movsb
outsl
pop
inc
sub
xchg
imul
mov
cld
int3
cld
mov
les
js
add
jge
andl
ds
sub
push
add
xor
mov
lret
aad
push
add
sahf
jle
addl
call
dec
xchg
or
add
xchg
xor
insb
enter
shl
push
shr
cli
mov
jne
sbb
ljmp
adc
push
data16
xchg
and
jle
mov
fimuls
jo
bound
inc
movsl
dec
inc
pop
aad
cmp
icebp
loop
stos
xor
add
sub
call
pop
mov
xchg
fdivs
mov
sbb
sbb
adc
movsb
aaa
pop
jle
pop
js
and
movsb
fwait
insl
scas
loop
jmp
sarb
into
sbb
dec
call
jmp
sarl
mov
int3
cmp
shl
ficomps
sbb
lret
out
out
cli
iret
inc
hlt
outsl
mov
push
and
fcomps
mov
mov
xlat
xor
movsl
addl
xor
cmp
loope
push
mov
push
mov
mov
es
or
mov
call
xor
scas
daa
fmuls
jle
js
jg
idivb
mull
stc
movsb
pext
fstpt
insb
ds
or
inc
lret
outsb
mov
xchg
add
iret
sbb
cltd
mov
jg
jne
mov
mov
sbb
mov
pop
fildl
call
mov
jle
hlt
sarl
cmpsb
arpl
test
add
sar
mov
lods
add
aaa
orl
dec
sahf
nop
sub
pop
decb
pop
adc
aaa
pushf
sub
sti
repz
inc
sub
ret
in
sbb
sub
adc
in
ret
bound
mov
or
popa
sub
jns
xchg
es
jmp
mov
pop
movsb
mov
inc
cli
jno
add
sbb
and
mov
call
in
dec
push
push
ret
cmp
xor
pop
nopl
inc
add
inc
fsubp
frstor
sub
xor
ficoms
mov
jecxz
sub
mov
mov
js
jno
ds
inc
das
js
and
fcmovb
hlt
dec
push
jle
dec
push
mov
iret
jecxz
xchg
dec
adc
stos
or
icebp
adc
fwait
jecxz
cmp
div
cltd
aaa
scas
adc
sbb
xchg
jnp
adc
cmp
movsl
into
xor
dec
imul
cmp
mov
idivb
cmc
repz
cmp
jae
ljmp
lds
sbb
lds
dec
xor
lods
and
fistps
lods
ja
addr16
loope
cmpsb
or
push
fsubrp
je
sub
add
adc
out
daa
outsb
lock
arpl
loopne
add
js
mov
cmpsb
cwtl
add
xchg
rolb
jo
pop
xor
test
sub
add
push
sub
dec
repnz
mov
icebp
cmpsb
jb
fimuls
je
mov
aas
das
popf
dec
scas
adc
xlat
das
test
jecxz
loopne
enter
leave
pop
and
add
mov
dec
mov
outsb
xchg
cmp
mov
sbb
xor
sbb
sti
das
mov
fdivs
icebp
and
dec
lods
xor
push
sub
sub
mov
jns
stos
xor
rorb
cld
cwtl
lock
outsl
mov
das
ss
popf
gs
pop
mov
int3
call
push
shlb
push
das
mov
jge
les
lods
nop
adc
sub
lea
mov
pushl
iret
pop
dec
rep
stos
mov
xor
xchg
iret
adc
jg
jo
push
mov
dec
mov
lods
jnp
inc
pop
cmp
cmp
jbe
mov
inc
stos
cmp
fcmovu
ja
xchg
cmp
add
xchg
dec
test
inc
or
xchg
or
inc
test
stos
neg
add
lret
adc
jp
jge
push
dec
sti
or
fwait
out
or
subb
mov
gs
dec
xor
je
ljmp
out
cmpb
out
pop
mov
push
push
in
stos
jbe
out
in
arpl
outsl
dec
popl
dec
jne
roll
and
fstpl
nop
xchg
loopne
xchg
jle
fcom
inc
sbb
sahf
dec
xchg
cmpsl
jo
dec
rcrl
testl
jno
add
icebp
cmpsb
xor
sub
dec
movsb
xchg
push
shrl
pushf
mov
xchg
or
mov
loop
ret
outsb
mov
in
mov
adc
mov
jbe
xchg
ds
cwtl
lds
mov
push
push
and
shlb
mov
push
sbb
call
aad
adcl
pop
ret
lret
push
out
cmp
sbbb
cmp
inc
jb
add
add
mov
mov
mov
push
mov
inc
xchg
js
subb
inc
cmc
out
mov
fs
inc
lods
push
das
sub
aam
dec
push
inc
test
movsl
pop
pop
xchg
movsl
xor
into
mov
dec
jb
mov
pop
mov
ss
addl
cmpl
mov
repnz
push
fwait
call
xchg
and
jmp
sub
and
xchg
outsb
pop
shll
out
scas
mov
pop
push
in
lcall
lods
and
std
jle
out
cmpsb
dec
and
inc
in
pop
inc
xchg
ret
lahf
loop
dec
movsl
or
in
jbe
sbb
push
inc
les
jns
push
xlat
clc
sbb
and
fdivp
ficoml
jb
in
mov
jmp
inc
add
push
adcl
or
shr
outsl
inc
pop
in
cs
jb
jecxz
xchg
jno
inc
lcall
lcall
mov
cs
rorl
lea
push
adc
mov
mov
inc
xor
sbb
pop
fs
ffreep
inc
les
xchg
aad
data16
mov
adc
xor
mov
out
or
sub
cmp
gs
out
lds
fisttpl
cmc
dec
cmpl
mov
faddp
or
jnp
add
or
lods
pop
and
fistl
sahf
fldl
and
mov
fmul
iret
inc
jmp
jge
add
pop
push
jmp
jle
push
adc
adc
daa
rcrl
and
or
lods
seta
mov
push
rcr
notl
sub
and
or
or
xor
sbb
mov
pop
jno
notl
decb
or
mov
xchg
jp
jp
in
sub
pop
sbb
add
testb
inc
pushl
inc
faddl
sbb
xchg
out
or
outsl
subw
je
cli
jbe
shr
ja,pn
lret
mov
aam
mov
mov
into
test
dec
es
out
push
into
pop
cmc
loopne
sar
fchs
fisttps
mov
or
and
mov
out
aas
imul
js
fwait
rcrl
mov
cld
ret
jle
andnps
into
xor
dec
pop
aad
inc
sbb
fistl
rclb
dec
push
inc
aam
ds
ljmp
fiaddl
cli
adc
push
pop
orb
mov
outsl
out
mov
push
fstpt
inc
test
sbb
gs
leave
mov
scas
aas
mov
es
sti
push
sbbb
sbb
fcomi
fs
shlb
or
cld
pop
sahf
cltd
sub
lcall
push
rcl
call
mov
pop
out
pop
dec
add
divb
ficompl
jo
dec
dec
in
pusha
and
xchg
mov
fdivp
aas
stos
xchg
int3
mov
mov
mov
cmp
or
mov
std
cmp
xchg
imul
cmp
lock
scas
adc
and
pop
xchg
lret
fs
dec
in
in
and
movsl
sub
sub
cs
push
pop
lcall
cmc
inc
sbb
push
ret
idivb
cmpb
add
call
mov
call
xchg
ljmp
push
dec
inc
xchg
and
or
nop
xchg
inc
stc
or
mov
mov
and
stc
bound
mov
push
push
into
add
div
push
aam
mov
mov
ss
and
pop
cmp
lret
add
pop
jne
bound
data16
push
out
int3
dec
and
pop
cltd
lea
std
mov
test
adc
inc
add
sub
jne
sti
pop
cmpsl
cwtl
lock
push
jno
jg
nop
iret
clc
dec
fmull
mov
mov
nop
negl
inc
and
fildl
xchg
mov
cli
scas
pop
mov
add
or
mov
lock
jae
leave
jle
cmpb
add
pop
stos
mov
push
ret
rolb
js
repnz
into
in
inc
jmp
xchg
push
pop
jbe
stc
xchg
adc
or
fldt
arpl
je
pushf
inc
sub
jo
les
sub
push
sbb
imul
clc
push
ljmp
lret
adc
jmp
inc
lods
dec
hlt
xor
out
mov
lds
icebp
stos
sahf
sub
andl
or
mov
sbb
stos
test
xchg
and
insb
ss
loope
mov
xchg
lahf
xchg
andl
dec
and
inc
push
xchg
test
jecxz
outsl
into
rol
mov
ss
jno
sub
pushf
fbld
dec
cmpsb
ffreep
push
fs
fisttpl
push
pop
jnp
xchg
sbb
sar
xchg
inc
std
xchg
nop
sub
loop
fisubs
cmc
clc
push
jg
adc
mov
pop
daa
adc
pop
rorl
data16
testb
and
jno
in
popa
cmp
inc
fnsave
jge
and
out
fdivrp
fldcw
mov
insl
jns
push
dec
jb
mov
mov
movsl
lahf
int3
xlat
cmp
mov
jl
dec
fcmove
mov
cld
leave
addl
sub
out
js
fwait
aaa
stos
movsl
mov
push
pop
inc
jns
stos
arpl
xor
movsl
dec
and
mov
fdivrl
mov
xchg
sbb
scas
repnz
push
add
push
insl
mov
test
jp
sbb
mov
add
cwtl
test
bnd
xor
inc
mov
sbb
in
andb
push
fsubl
mov
add
dec
sti
mov
inc
pop
out
push
or
fs
test
cs
adc
loop
mov
jp
and
ljmp
lcall
cltd
cli
stc
jo
hlt
push
aam
adc
test
mov
xchg
mov
aas
ds
nop
adc
repnz
imul
pop
aas
test
sti
mov
enter
push
inc
in
or
imul
cmpb
xor
jmp
data16
iret
adc
lcall
fs
loopne
jp
or
push
icebp
outsb
xor
pop
test
adc
jmp
and
sub
mov
and
pop
fs
mov
add
dec
imul
mov
std
xor
js
scas
pop
adc
lahf
mov
enter
repz
repz
jl
sbb
test
xor
xor
jb
jle
std
sbb
xchg
mov
lods
xor
xchg
sti
push
popl
ror
out
fs
mov
repz
jo
lds
xchg
scas
add
shrb
cmpsl
xchg
add
mov
xor
xchg
or
mov
mov
arpl
pop
test
xchg
lock
addl
movsb
shl
rorb
dec
xchg
push
sub
pop
scas
fiadds
mov
mov
cmp
xchg
push
cmpsl
mov
add
mov
rorb
mov
test
jmp
into
and
adc
js
test
ficoml
xor
daa
aam
cltd
xchg
xor
add
das
clc
jge
lock
inc
mov
adcb
push
pop
pop
inc
dec
iret
fs
iret
lahf
int3
and
test
pop
xchg
lock
lcall
loopne
push
fucomp
jp
popf
scas
cmp
cmp
inc
add
pop
fldl
in
adc
insb
movsl
xor
in
push
pop
out
or
dec
mov
xlat
int3
xlat
cwtl
inc
test
ret
xchg
mov
dec
int
push
orl
sahf
xor
and
es
aad
mov
jle
repz
pop
and
mov
mov
or
inc
cmp
xchg
int
fdivrs
daa
and
mov
in
pop
cmp
mov
push
or
add
adc
movsb
dec
cmp
mov
daa
mov
adc
imul
xchg
iret
in
add
iret
andb
test
fdivs
ljmp
or
ja
in
xchg
mov
hlt
lret
ljmp
push
cmp
sub
test
inc
sub
inc
cmp
cmpsl
xorl
cmp
mov
jl
out
aas
pop
ret
jnp
arpl
sbb
mov
aaa
or
and
adc
mov
lret
xor
cwtl
loopne
aas
xor
dec
test
xchg
je
popa
aaa
pop
add
jp
mov
pop
sub
xor
fucom
ja
xchg
add
cmp
fdivrs
adc
ret
fcomp
push
out
dec
mov
mov
dec
dec
lret
xchg
add
sbb
and
cmp
mov
inc
mov
xor
add
cld
mov
in
pop
dec
xchg
clc
fs
mov
pop
ret
les
jmp
or
dec
gs
xchg
or
mov
lods
sub
jmp
nop
mov
mov
lret
inc
mov
cltd
es
cmpb
xchg
and
lods
mov
outsb
pushf
leave
das
lods
dec
adc
push
sahf
scas
cmpsb
out
xchg
mov
cmp
ljmp
roll
adc
push
cli
mov
das
mov
push
mov
mov
push
mov
out
push
or
inc
inc
pop
enter
insb
xor
stos
fidivrs
fcomi
loope
jecxz
fisubl
mov
fstpt
push
dec
loopne
fdivrl
ja
lret
dec
jge
xchg
mov
jns
jmp
xor
aaa
pop
add
and
and
rcll
cmp
clc
cmpsl
lods
dec
add
les
cmp
sub
rorl
pop
xchg
sub
pop
addr16
pop
sub
scas
es
in
ja
mov
outsb
das
ds
mov
loop
cs
pushf
into
xchg
push
mov
mov
push
test
mov
jnp
imul
scas
adc
push
fistps
mov
stc
inc
mov
popa
push
and
jns
pop
inc
jae
dec
lret
test
je
mov
jbe
mov
lret
std
fldl
sbb
adc
sub
or
loop
sub
jle
mov
ds
push
mov
aam
or
movsb
or
imul
outsb
adc
sub
jmp
iret
sub
xchg
adc
sub
mov
insl
mov
push
or
aaa
insl
or
leave
jge
and
dec
push
xchg
mov
aas
adc
cmp
push
fwait
ret
pop
jp
push
or
mov
mov
repnz
xchg
sarl
fprem
mov
or
inc
sub
sub
add
movsl
lods
cmp
mull
pop
dec
jle
aad
mull
repz
fstpl
scas
shl
push
adc
ret
or
out
adc
js
jno
ja
movsb
sar
sbb
pop
in
int3
test
or
xor
in
inc
lea
fstpl
mov
roll
mov
cmp
push
adc
push
fidivs
lds
sub
jbe
stos
fnclex
sar
add
xchg
data16
ret
sub
add
iret
idiv
xchg
add
shll
ret
loop
fstps
push
fucomip
sbb
jb
push
lret
call
in
jg
in
push
push
inc
or
jne
ljmp
pop
mov
push
mov
xchg
leave
mov
out
push
xor
or
ror
nop
mov
pop
out
negl
inc
ss
test
mov
rcl
dec
adc
sub
arpl
jno
fdivrs
repnz
imul
dec
mov
ljmp
dec
xchg
sbb
pop
arpl
adc
sub
cmp
push
addr16
adc
jb
arpl
xchg
cli
mov
push
jmp
pop
jae
test
jp
xlat
jmp
mov
jae
in
jno
xchg
dec
adc
push
stc
jp
sub
dec
inc
jns
inc
xchg
roll
out
add
pushf
cmpsb
nop
scas
ret
cmp
pushf
dec
int
cmp
cmpsb
iret
inc
test
sarl
mov
sub
lock
or
inc
adc
mov
aad
out
jb
pop
out
xor
dec
jnp
in
mov
dec
call
xor
popf
dec
andl
call
ja
adc
mulb
mov
je
fmull
fstp
push
jge
add
stc
sbb
push
mov
enter
mov
adc
xchg
outsl
sysenter
leave
adc
sub
pop
icebp
sbb
mov
fdivrl
pop
push
mov
cmpl
call
dec
data16
pop
dec
inc
pusha
dec
jae
xor
jb
insb
pop
xor
stc
cltd
and
xchg
into
dec
inc
xlat
mov
pushf
lcall
cltd
inc
aas
cwtl
lahf
add
inc
or
xchg
lcall
push
jns
pop
icebp
outsl
daa
notl
scas
adc
ljmp
push
imul
and
adc
push
xchg
mov
inc
mov
pop
dec
fwait
cld
clc
jb
cmp
lahf
mov
mov
enter
test
adc
inc
mov
in
lock
cmp
inc
and
jp
std
push
in
mov
or
sarl
add
push
pop
cmpsb
ljmp
push
test
stos
fisubrl
loopne
xchg
arpl
in
dec
aas
loope
sub
out
xchg
lahf
cwtl
or
jle
nop
xchg
mov
or
xchg
jg
imul
lods
int3
jmp
add
add
adc
out
mov
test
mov
cld
xor
add
push
rclb
dec
mov
mov
jnp
out
dec
cltd
out
jg
pop
mov
dec
xor
cmp
dec
jae
and
cmp
mov
jb
mov
in
xor
dec
icebp
jge
sahf
pop
dec
lahf
into
je
jnp
pop
fucomp
dec
inc
sahf
fidivrl
inc
hlt
mov
outsl
dec
test
je
jae
push
cmp
or
cmpsb
pop
xchg
js
loop
xor
sub
lahf
xchg
push
test
fnstenv
inc
je
push
jecxz
jnp
or
jae
mov
scas
je
xor
hlt
mov
jmp
sahf
js
imul
out
test
or
test
pop
imul
loop
jg
or
and
xchg
pop
xor
imul
push
inc
sbb
jmp
mov
mov
loop
or
lret
xor
xor
cmp
add
xchg
jne
add
orb
or
mov
adc
pop
das
mov
push
inc
mov
insl
daa
nop
mov
bound
ja
jae
dec
dec
or
imul
adc
call
lret
ss
pop
lock
icebp
movsl
loop
repz
add
add
xchg
mull
mov
ret
mulb
loopne
lcall
and
lcall
inc
popf
and
out
jne
int3
sbb
std
sti
pop
andl
ds
xor
and
leave
rol
insb
cmpsb
movsl
sbb
jl
gs
cmp
leave
inc
jb
add
mov
shl
repz
insb
gs
shlb
cmp
clc
lock
add
popa
fptan
adc
shrl
xchg
inc
scas
imul
std
fs
cmp
jle
or
leave
xchg
test
mov
sub
inc
scas
jle
fwait
lock
add
pop
in
sub
aam
xchg
fs
cs
or
into
stos
push
loope
pushf
out
lods
fidivrs
adc
lea
dec
push
dec
movsb
std
test
dec
pop
cs
imul
insb
cmc
jp
xlat
mov
dec
xchg
inc
mov
fldl
adc
sti
outsl
in
in
jae
dec
or
stos
fwait
inc
rolb
dec
add
rorl
mov
and
inc
lret
sbb
sbb
add
dec
add
scas
popf
and
ss
in
jle
xor
push
sahf
rcl
into
aad
inc
popa
jo
mov
mov
mov
dec
xorb
icebp
mov
and
add
aas
outsl
pop
adc
pop
push
mov
jno
fnstcw
jecxz
inc
mov
sbb
outsb
call
js
ds
arpl
test
push
mov
in
aam
adc
mov
lock
adc
loope
stos
adc
cmp
add
pop
mov
gs
mov
mov
sbb
cmpsb
sub
and
insb
sbb
fs
jp
rclb
pop
jg
jge
push
sarb
mov
add
ret
cmp
lret
out
hlt
xchg
xchg
aas
and
popa
out
mov
icebp
lods
sbb
mov
push
std
fdivl
clc
push
jns
loop
lds
in
fistps
fwait
inc
xor
jg
xchg
mov
adc
aaa
pop
std
lret
decb
adc
lea
cli
cli
and
xchg
sbb
shll
push
cmc
xchg
mov
mov
mov
push
mov
cwtl
cmp
sbb
adc
lret
add
pop
mov
jl
fstpl
mov
imul
lods
jle
sub
cwtl
jb
sub
subb
adcl
xchg
mov
mov
inc
das
decl
mov
and
mov
push
out
aaa
cmc
and
or
jle
in
ds
and
test
loopne
aam
sub
sti
jl
adc
adc
in
cmp
push
call
mov
ucomiss
mov
mov
shlb
pop
das
xchg
sub
xchg
les
ret
jae
fcmovu
cli
jmp
and
xor
inc
mov
pop
push
mov
icebp
and
mov
mov
scas
xor
add
clc
jb
sti
mov
daa
shll
imul
sbb
aam
inc
add
cmp
jb
push
add
std
mov
cmp
sbb
repnz
fcomps
ss
mov
orb
lea
sbbb
jbe
pop
stc
xchg
test
rclb
xchg
insl
std
test
jg
cmpsl
imul
dec
dec
in
lahf
mov
idivb
cmp
ret
sub
or
push
cmp
fsubl
in
fs
fsubrs
inc
aaa
pushf
xchg
movb
cwtl
xor
out
sti
fmuls
es
pop
pavgb
scas
fucomp
jns
icebp
pop
mov
lea
jo
jge
rcrl
lret
xchg
xchg
loopne
mov
dec
stos
idivl
cmpsb
hlt
cmc
into
jns
mov
jmp
imul
dec
push
push
ljmp
fs
fcmovnb
inc
sub
and
aam
push
out
repnz
push
or
cs
outsb
adc
push
mov
inc
jnp
mov
ret
pusha
bound
push
jle
mov
popa
loopne
adc
mov
xchg
pop
xchg
out
add
fs
xor
mov
popa
lcall
sub
xor
pop
adc
and
sbb
ja
aam
inc
std
lcall
loope
push
je
cmp
je
push
not
and
push
push
enter
xchg
dec
rorb
or
and
into
pop
outsl
sub
fld
inc
inc
add
xor
outsb
sbb
ret
sbb
inc
rcr
adc
fimuls
out
cmp
jns
test
and
popa
ss
lahf
rcll
mov
push
xsha256
cmpsb
adc
jp
mov
ret
cmp
call
in
or
lods
loopne
pop
mov
push
decl
inc
xor
and
cmpb
xchg
mov
mov
jecxz
stc
mov
faddl
add
mov
hlt
daa
mov
push
mov
push
mov
xor
sub
fnsave
leave
add
jb
fstp
or
lods
push
mov
and
xchg
jae
xchg
mov
adc
mov
sub
and
mov
clc
pushf
filds
nop
sub
negl
cmpsb
insb
jl
stos
repnz
pop
or
adc
mov
loope
xchg
lods
adc
incl
aad
xchg
jg
lods
push
lods
mov
pop
lea
test
test
add
iret
adc
and
sbb
and
add
pop
mov
lcall
pop
mov
jecxz
testb
mov
xchg
into
xchg
cmpl
cltd
lcall
sbb
int
mov
cmp
arpl
nop
dec
call
mov
bound
repnz
fdivrl
bound
sub
rcr
push
push
sbb
fcomip
aaa
daa
out
push
loop
mov
cmp
push
test
mov
or
in
adc
mov
iret
jae
sub
mov
jns
je
add
cmp
or
adc
js
inc
xchg
aad
js
popf
push
js
jmp
sub
jo
bound
idivb
jnp
pop
les
lea
mov
mov
mov
sub
sub
mov
aad
out
and
sub
aam
fsubs
adcl
pusha
pop
jecxz
push
cmpsb
adc
inc
into
mov
fidivrs
or
daa
stos
push
pop
push
into
mov
xchg
std
movl
dec
das
bound
mov
pop
pusha
popa
pop
js
je
jo
or
stos
mov
mov
ret
in
cld
nopl
jl
xchg
lret
ds
push
int
loopne
icebp
dec
pop
test
mov
daa
push
int3
mov
mov
cmp
cwtl
icebp
daa
enter
into
mov
out
push
adc
sbb
repnz
jbe
adc
mov
and
push
bound
pop
in
or
cld
xor
rcll
hlt
loope
xchg
insb
jge
and
push
mov
xchg
push
scas
cmpsl
jnp
mov
test
shl
xlat
insl
gs
pop
aam
notb
fdivrl
fildll
popf
test
ret
and
rcll
cmp
xchg
and
push
mov
aaa
inc
dec
adc
push
or
mov
das
lods
ret
add
jns
add
lds
cmp
insb
mov
sub
shll
jge
subb
cmc
call
xchg
loop
xor
mov
es
cmp
cmp
adc
pop
shll
fmull
mov
call
pop
int
push
adc
add
outsl
jmp
inc
xchg
aas
gs
aas
clc
cmp
sub
adc
mov
jge
pop
dec
sub
sub
dec
mov
dec
or
out
cmp
outsb
mov
mov
or
push
movsl
mov
pop
dec
push
push
xlat
repnz
mov
adc
add
mov
ljmp
push
cwtl
dec
pop
movsl
jbe
mov
test
inc
fwait
pop
or
in
or
and
jmp
sub
jge
dec
pop
jmp
aaa
pushf
xchg
lcall
xchg
push
stc
outsb
adc
jns
rcl
lret
cs
fcmovbe
xor
mov
imul
in
add
inc
jge
hlt
sub
roll
xchg
out
cli
xrelease
ret
dec
cmc
iret
add
add
push
push
and
fstpl
dec
imul
xchg
cmc
negb
cmpsl
pop
outsl
repz
mov
loopne
fs
fadds
scas
jae
push
adc
jnp
dec
pushf
pop
adc
add
jne
xor
pop
mov
pushf
inc
xchg
cmp
and
sub
jae
in
aam
cmp
mov
push
packssdw
fcoml
sbb
scas
out
insb
lret
pusha
mov
fucompp
fscale
addb
push
pop
mov
popa
pop
gs
mov
jae
aam
sbb
out
sub
pop
js
inc
push
xor
ja
xchg
cmp
mov
pop
fstpt
out
and
jns
movsl
ljmp
imul
mov
xchg
jo
rcrl
and
mov
add
or
and
sub
mov
dec
xor
sbb
pop
repz
add
ljmp
in
fs
popa
scas
incl
push
hlt
xchg
mov
xchg
data16
shlb
cmp
jbe
movsl
add
or
es
addr16
mov
mov
mov
and
adc
dec
iret
jns
mov
mov
mov
xor
call
or
pop
shrl
jmp
mov
fst
sbb
xchg
scas
mov
jp
pop
jmp
outsb
shrl
ja
mov
fldt
iret
fwait
or
movsl
stos
mov
fidivs
cmpsb
add
adc
push
fs
dec
sbb
mov
stos
xor
pop
xor
lea
lods
js
popa
sub
nop
add
stc
push
sbb
ja
add
testl
pop
test
push
or
inc
arpl
lcall
sbb
push
in
jae
lcall
bound
mov
cld
sub
push
jle
xlat
or
xchg
sub
jle
xor
jne
jae
sub
sub
popf
xchg
lahf
js
dec
clc
cmpsl
lods
mov
push
leave
jge
in
divb
xor
pop
or
xor
subb
push
loop
and
lock
std
xor
mov
ljmp
pop
imul
pop
sbb
dec
mov
fwait
scas
push
sbb
cmpsl
xchg
cmp
dec
ja
les
pop
lock
mov
jge
sbb
xchg
pop
sub
das
xor
sbb
outsl
fmul
inc
das
loope
mov
or
jbe
bound
xlat
ljmp
int3
movsb
cwtl
loope
cld
das
push
mov
mov
test
out
lds
dec
bound
add
fcom
lahf
aaa
jnp
outsl
dec
lds
cmp
lods
scas
es
sbb
adcb
lock
daa
lods
mov
pop
fsubl
cltd
sbb
dec
fisubs
lock
subl
jno
dec
and
mov
sbb
mov
mov
insb
daa
adc
jle
mov
push
add
xor
sahf
lea
mov
enter
lds
test
enter
or
jge
push
popl
fbld
filds
or
mov
pop
sti
mov
adc
fcmove
imul
jmp
or
cltd
adc
jno
out
adc
pop
pop
cmp
loope
xchg
jnp
jle
xchg
sti
sbb
ret
jl
dec
xchg
jne
inc
out
sub
mov
xlat
dec
dec
shlb
pushf
inc
mov
out
shll
inc
dec
mov
shrl
daa
add
cmp
adc
xchg
pop
imul
dec
mov
popa
push
mov
dec
pop
sub
jb
lods
or
mov
adc
mov
fs
push
and
jg
aas
pop
std
pop
inc
sub
aad
adc
enter
xchg
inc
and
idivb
ss
xor
aad
stos
std
lods
pop
pop
leave
daa
push
adc
daa
cmc
je
or
sbb
pushf
js
sbb
inc
fistps
pop
sub
pusha
push
mov
jmp
pop
out
ds
cmc
int
sub
dec
inc
lds
pop
pop
neg
adcb
int3
xor
sbb
loop
xchg
movsl
test
jne
aaa
les
adcl
sub
xor
push
inc
mov
jmp
loope
inc
push
jp
and
movsl
or
dec
mov
pushf
mov
test
or
lcall
mov
test
or
mov
mov
bound
lds
aam
xor
jmp
mov
xchg
cmp
test
cmpsl
icebp
add
notb
and
imul
dec
xor
out
jmp
xor
dec
mov
pop
sub
std
out
jne
shl
fcmovne
jb
sub
fs
jnp
cs
test
out
lahf
mov
inc
inc
aaa
jge
addl
mov
ja
enter
cmp
sti
ret
push
or
stos
imull
mov
cwtl
cmpsb
dec
repz
pusha
popf
and
or
ffreep
mov
jge
cwtl
fists
shlb
mov
cmpl
mov
loopne
or
lret
shrd
or
sub
sub
cld
cmp
push
lock
mov
repz
fisubrs
mov
push
out
add
jb,pn
lods
xchg
in
pop
or
xor
cmp
inc
push
xor
pop
pop
stos
mov
pop
pop
jb
mov
mov
repnz
lret
xchg
jp
subl
aam
inc
dec
fisttpll
in
dec
repnz
divl
xchg
sti
repnz
xor
pop
lock
pop
imul
repz
sub
xchg
jl
je
out
inc
xchg
jne
jge
xchg
jbe
add
push
mov
jl
jae
cmpb
xor
mov
aam
xchg
inc
dec
in
test
jne
test
pop
cli
add
popl
popa
mov
push
push
sub
stos
push
aam
clc
mov
out
cmpl
jp
leave
ljmp
outsb
push
or
xchg
dec
pusha
cli
fwait
pop
add
dec
outsl
call
scas
notl
into
or
mov
leave
hlt
in
lds
inc
imul
xor
dec
add
pop
inc
inc
jne
jg
ret
mov
xor
lock
negb
sbbl
xchg
lock
mov
das
sar
mov
dec
out
fidivrl
and
lea
pop
mull
inc
stos
mov
movsl
xor
lods
popf
cmp
loopne
and
arpl
ret
stos
sbb
std
shlb
data16
jl
mov
pop
and
movsb
add
dec
call
push
mov
jle
mov
sbb
cmp
cmp
mov
in
xor
in
addr16
and
dec
mov
das
mov
sub
jbe
sti
mov
and
adcb
sub
aad
std
xchg
and
pop
jle
repnz
ljmp
dec
orl
xor
mov
iret
lahf
or
repz
mov
hlt
inc
dec
and
outsl
bound
repz
test
jle
icebp
xor
jne
and
mov
nopl
mov
push
icebp
int3
xor
fadd
outsb
movsl
outsl
shlb
movsl
mov
lcall
clc
add
mov
and
loopne
aam
mov
mov
adc
mov
into
dec
test
or
int3
scas
jno
pop
andl
shll
pop
jp
lret
push
dec
sbbl
push
data16
enter
lcall
nop
jge
lret
data16
ljmp
ja
mov
scas
mov
add
inc
mov
imul
add
lea
pushl
jle
or
pop
loopne
cmp
sti
in
pop
ret
add
push
xchg
pop
roll
dec
sbb
xor
push
mov
jo
scas
mov
in
mov
inc
push
push
jmp
dec
leave
pop
mov
jle
mov
pop
fcomp
jge
cli
jg
sub
jmp
lsl
lds
push
and
jl
arpl
out
leave
inc
cmp
add
sub
push
jecxz
fnstcw
add
ja
ljmp
xor
jl
and
sub
mov
mov
hlt
inc
imul
orb
mov
mov
adc
add
add
stos
in
cmp
cmp
push
adc
ss
sbb
out
sti
xchg
pushf
or
cmpsl
in
xchg
sbbb
lea
cwtl
loope
inc
pop
xchg
adc
inc
testl
test
pop
lret
mull
shlb
pop
test
mov
sub
sbb
mov
imul
cmc
pop
jb
pop
inc
out
pushf
lcall
in
push
jle
loope
mov
idivb
mov
cwtl
lahf
adc
sub
and
sbb
cwtl
in
adc
hlt
rolb
aam
jge
test
or
inc
lock
xchg
add
dec
fdivs
in
cmpsl
xor
int3
jne
test
mov
inc
cmp
jmp
ds
stc
repnz
xorps
and
sahf
pusha
adc
mov
xchg
out
adc
enter
jno
mov
in
inc
scas
loop
xor
lock
lret
js
test
cmpsl
xchg
insl
pop
clc
pop
iret
push
mov
aaa
sub
push
pop
pop
imul
dec
xadd
and
dec
out
mov
shlb
fiaddl
mov
jmp
xlat
lds
xchg
popa
roll
int3
aas
inc
cs
push
int3
aas
sub
adc
jecxz
push
stos
push
mov
movsl
fldt
xor
jo
mov
mov
into
mov
jb
cmp
divb
pop
pop
aad
cmp
dec
and
mov
aad
stos
jno
lcall
or
in
icebp
inc
test
js
sub
push
imul
mov
cmp
mov
mov
lods
or
cmpsl
add
fsubs
and
sub
xor
cmp
gs
mov
mov
sbb
out
das
movsl
fwait
stos
and
sbb
ds
cmc
scas
int
dec
xchg
sub
mov
rcrb
jae
loope,pn
mov
inc
jmp
mov
dec
xchg
xor
fs
clc
out
leave
fldl
cmp
adc
movsb
mov
mov
stos
mov
arpl
cmpsb
xchg
jmp
xor
xchg
in
adc
pop
add
scas
mov
sbb
jmp
push
sti
aam
adc
xchg
call
pop
aas
jge
punpckhdq
repnz
jbe
insl
arpl
add
cmc
pop
lods
pop
imul
add
out
fnstsw
gs
adc
xlat
test
call
mov
mov
fdivrs
sub
jl
jb
mov
push
add
add
and
hlt
or
xchg
enter
sub
ja
in
fstpt
xor
and
cli
into
pop
in
push
add
call
mov
pusha
test
rorb
ss
addr16
sbb
ret
dec
mov
leave
outsb
mov
insl
sahf
mov
negb
cltd
adc
sbb
pop
mov
dec
pop
sti
xor
push
enter
sub
mov
cmpl
pop
push
xchg
sub
mov
mov
jne
cmp
les
jns
mov
gs
in
cmp
or
jne
loope
push
fsubp
pop
mov
fdivs
inc
test
in
mov
mov
xor
add
mov
in
insb
daa
in
leave
and
icebp
in
pop
mov
mov
jmp
jmp
pusha
fildl
cmp
push
mov
xchg
cmp
mov
push
pusha
cs
or
addr16
xchg
sub
test
pusha
out
xlat
iret
adc
and
jno
sbbb
cli
fsubs
sub
pop
jae
dec
sub
test
gs
sahf
adc
add
push
fisttps
dec
cmpxchg
ds
xor
repnz
insb
lcall
ds
xchg
mov
rclb
mov
pop
cmp
adc
fs
js
and
mov
ret
xchg
push
cmpsb
sbb
inc
push
add
ret
aam
aad
or
mov
cmp
call
movsb
or
inc
adc
lock
scas
test
jnp
mov
push
push
cmp
cld
or
in
lods
stos
cmp
sub
std
cld
jecxz
popa
test
lea
add
and
sub
int
fisttps
int3
imul
data16
jne
push
sbb
push
jp
in
je
xlat
pushf
jae
add
shll
jecxz
test
roll
adc
test
test
push
test
mov
roll
out
mov
xlat
mov
sahf
out
dec
test
add
xor
xor
out
dec
insl
sub
mov
mov
pop
scas
xchg
sbb
xchg
imulb
pusha
or
mov
sub
int
push
mov
inc
jbe
ljmp
lcall
cmpsb
sub
inc
jmp
sbb
pop
cmp
xchg
mov
les
mov
imul
sbb
jmp
fildl
mov
test
sub
inc
jne
aad
adc
daa
in
pop
test
cmp
mov
mov
mov
xor
jno
push
stos
adc
jl
cmc
rolb
jno
and
fcmovne
inc
loope
push
and
mov
call
les
mov
mov
mov
cmp
jmp
inc
jbe
jl
xchg
test
mov
test
xor
pop
xor
jnp
xor
fldl
rorb
loop
popf
xchg
dec
or
cs
sub
test
andb
xchg
jbe
mov
ss
mov
loope
mov
jbe
into
xchg
lcall
lret
leave
daa
test
dec
mov
mov
dec
mov
cmc
inc
sbb
mov
gs
jb
and
cmp
sub
push
push
mov
into
mov
mov
xchg
shrl
enter
mov
and
sub
jb
stos
cld
jns
mov
inc
adc
cmp
xor
add
movsl
and
dec
sub
xchg
xor
inc
test
mov
sub
mov
loopne
pop
xor
and
sub
xor
sbb
push
mov
and
pusha
test
divl
loop
not
popf
dec
push
lcall
iret
std
test
cli
inc
mov
mov
loope
jo
xchg
sahf
fscale
inc
cmp
sti
mov
mov
sbb
adc
cmp
mov
and
xor
js
loopne
imul
arpl
imul
iret
or
icebp
fidivl
and
aas
mov
in
mov
push
inc
ficomps
in
xchg
mov
loope
in
scas
adc
or
ret
cs
es
cs
and
pop
adc
ja
int3
popf
jmp
pusha
xchg
jno
fidivrl
scas
push
sbb
fidivrl
inc
sub
add
jle
sbb
jecxz
and
sub
cmpsb
arpl
mov
inc
int3
jmp
adc
scas
or
mov
xchg
xchg
lds
mov
inc
outsl
les
mov
stos
mov
xchg
stos
test
repnz
add
jge
push
jnp
test
jle
mov
mov
cmpsb
mov
das
inc
inc
jl
hlt
scas
and
sub
js
and
fldl
fstpt
dec
jp
mov
js
sub
pop
cmp
and
in
out
xor
or
shll
sub
mov
cli
or
add
cltd
push
movsl
xchg
rolb
sbb
jp
sub
sahf
popf
cmpsb
sub
loopne
jp
mov
push
sbbb
xor
xchg
in
or
sti
adc
movsb
jmp
jo
in
in
jg
push
xor
mov
jmp
push
pop
stos
or
imul
xor
adc
lock
out
inc
sar
mov
mov
je
cmp
push
push
pop
cmp
jo
pop
cmp
push
sub
fld
dec
ret
xchg
sub
cmpsl
fnstsw
mov
aam
gs
ret
stos
mov
fwait
mov
aas
cld
jp
rorl
sub
xchg
mov
jns
cwtl
cmp
scas
add
inc
ds
jecxz
pop
lods
movsl
jmp
and
into
aas
mov
xchg
rorl
lahf
sub
sbb
int3
mov
movl
add
xchg
addr16
jmp
mulb
mov
daa
mov
cmpsb
mov
ljmp
hlt
in
sahf
dec
adc
sbb
xor
mov
scas
dec
inc
and
xor
orl
jne
cmp
adc
shll
inc
into
test
or
mov
or
pop
in
push
sub
test
mov
mov
into
loopne
push
xlat
lods
push
cli
imul
xchg
fsub
and
int3
lahf
sub
es
mov
lret
jp
mov
xchg
lcall
ja
cmc
mov
filds
xchg
cmp
lahf
jmp
fistl
mov
iret
inc
xchg
add
test
orl
rol
lock
push
adc
decb
push
aaa
pop
ja
in
push
inc
inc
dec
sbb
mov
in
test
loope
sub
imul
jo
and
retw
and
or
dec
mov
jno
lahf
test
mov
push
loop
in
test
sti
fistl
and
movsb
call
sub
sahf
aad
cmp
das
mov
fwait
stos
mov
test
inc
mov
pop
shrl
xchg
pop
addr16
imul
aam
xchg
repz
xchg
xor
lret
cltd
cmp
dec
inc
or
adc
roll
and
adc
repz
imul
jp
mov
push
bound
dec
dec
arpl
fcom
rolb
jmp
aad
and
shl
scas
mov
stos
jmp
pop
in
mov
push
stos
ret
inc
out
sti
fcomps
stos
pushf
sub
xchg
jecxz
in
xlat
into
dec
sbb
inc
rolb
out
loope
push
mov
add
insb
xor
add
mov
cli
dec
and
iret
fcmovu
cli
cmpsl
mov
out
dec
mov
jg
aam
or
add
and
test
in
add
enter
fnstsw
mov
jae
outsl
nop
pop
or
insb
outsl
pop
out
adc
push
sub
jnp
xchg
pop
mov
mov
stc
mov
inc
int3
push
sub
sbb
lea
leave
adc
fldenv
xlat
test
mov
in
pop
push
dec
insl
rorb
mov
rcrb
inc
and
pop
adc
in
lods
outsl
dec
mov
arpl
inc
xchg
add
scas
sbb
pop
jg
push
cmp
sub
test
pop
pop
imul
mov
push
lcall
and
mov
out
xchg
sar
into
cmp
shrl
lea
push
and
mov
xlat
pop
push
mov
xchg
jle
outsb
lods
incb
mov
andl
in
iret
xchg
sbbb
fsts
out
mov
or
jo
jbe
lret
or
add
mov
rsm
cltd
fcomps
std
mov
mov
insl
loopne
adc
xor
test
test
inc
pop
pop
andb
push
adcl
pusha
cmp
pop
ret
sub
push
cmpl
pop
add
popf
adc
lods
xchg
mov
shl
loope
iret
scas
xorb
mov
movsb
xchg
cli
jl
and
repnz
add
test
in
fstpt
xchg
and
inc
loope
jbe
mov
cwtl
jns
jmp
shrb
mov
lock
jg
sahf
adc
lcall
cmpl
xor
test
mov
sahf
loopne
cli
add
inc
in
adc
add
in
stc
pop
repnz
std
mov
cmc
push
bound
jl
test
xchg
imul
sub
push
xchg
pop
repnz
pusha
inc
mov
pushf
mov
adc
sub
mov
jl
scas
pushf
dec
loopne
mov
adc
loop
xor
or
sahf
loope
mov
add
shr
sub
in
push
add
lock
nop
or
jecxz
lret
cld
xlat
adc
notl
cli
xchg
xor
fcompl
jb
or
call
loop
lahf
mov
xor
cmp
jae
jmp
push
mov
lds
lds
in
scas
add
fwait
ja
mov
fsubrs
pop
sbb
icebp
sbb
cld
jp
fimuls
and
jne
mov
out
xchg
push
sbbb
sub
adc
jp
push
mov
or
loope
fcomps
int3
jae
xorb
and
in
xlat
jo
xor
sbb
push
pop
in
jbe,pt
sbb
mov
in
or
shl
scas
jle
and
push
xchg
mov
out
jb
mov
xor
cmp
pop
pop
lret
push
adc
push
adcb
mov
pop
outsl
mov
loope
pop
cmp
dec
dec
jge
rorl
fiadds
inc
fwait
add
test
mov
push
aas
xor
adc
sbb
iret
hlt
dec
cltd
cmc
inc
in
nop
pop
into
es
std
xor
call
mov
jbe
test
in
hlt
or
push
push
sbb
mov
adc
nop
lock
push
aas
sbb
es
fstps
aaa
xchg
out
jge
test
pusha
sbb
sti
cmpb
xchg
rorl
inc
les
xchg
fwait
rcll
enter
dec
cmpsl
push
mov
add
adc
mov
sahf
mov
loope
out
es
roll
jg
pop
fisubrs
outsb
jo
in
out
test
nop
jmp
pop
imul
sub
push
sbb
mov
mov
in
icebp
push
loope
sub
jno
shlb
out
fstpt
haddpd
js
mov
mov
insl
mov
fcmovne
jb
xor
pop
jmp
adc
icebp
cmpsb
sub
cmp
xchg
push
cmp
or
push
dec
or
mov
add
aad
fwait
and
mov
loop
mov
dec
scas
addr16
loopne
popa
dec
and
fisubrl
push
fldt
divb
xchg
cmp
sbb
mov
inc
sbb
clc
repz
or
inc
sub
lock
and
ret
test
push
mov
das
dec
ds
leave
xchg
cmpsb
inc
mov
sbb
neg
es
ja
fprem
cmp
sub
mov
aad
adc
jle
mov
loopne
jp
xchg
in
inc
ds
jb
gs
incb
test
sub
arpl
push
out
sbbb
mov
repnz
jmp
dec
jmp
or
pop
outsl
repz
lods
adc
fdivs
test
outsb
imul
add
data16
repnz
popf
jl
cmp
push
cmp
jle
in
jge
pop
xchg
dec
ljmp
adc
jecxz
jo
fcompl
pop
hlt
les
sub
lret
pop
lods
ror
je
lahf
js
fdivs
fwait
out
ss
mov
jnp
xchg
shr
scas
push
aam
inc
pop
adc
dec
sbb
inc
fs
or
pop
cmpsb
mov
jo
enter
inc
shll
lea
je
cld
push
pop
push
ss
or
push
jl
pushf
jne
pop
popa
push
push
cmc
or
daa
add
xor
into
lock
dec
mov
mov
inc
ret
dec
adc
aaa
add
mov
jbe
pop
or
sbb
adc
dec
and
inc
jbe
dec
or
wbinvd
pop
lods
out
je
sbb
idiv
mov
in
or
or
cmp
push
fdivr
pusha
mov
inc
cld
cmp
mov
es
fistps
pushf
lcall
clc
fcoms
std
dec
nop
fisubrl
bound
jge
pop
mov
xchg
es
in
adc
push
dec
lret
pop
pop
fadds
xchg
jnp
rolb
shlb
int
dec
dec
es
jno
rolb
call
dec
sbb
cld
sub
int3
sbb
dec
das
pop
testb
or
gs
add
mov
repnz
xor
jnp
push
inc
jbe
call
inc
clc
enter
mov
or
stos
add
and
enter
mov
xor
shlb
and
das
mov
mov
cmpsb
or
stos
lcall
jle
ficomps
fs
xorb
mov
fdivrl
xor
scas
mov
sbb
xchg
scas
std
rclb
mov
and
hlt
or
cmp
dec
lods
xchg
out
cmp
lock
mov
sbb
scas
daa
fdivs
out
inc
jno
lahf
pop
mov
das
imul
cmc
dec
out
pop
pushf
xchg
mov
nop
pop
loopne
mov
cmp
imul
shrb
mov
add
xchg
add
push
gs
adc
mov
divl
pop
jns
es
mov
movsb
out
data16
jo
ret
icebp
dec
in
xchg
outsb
pop
mov
test
jg
mov
mov
testb
in
and
cmpb
pop
popf
mov
adc
xlat
mov
test
shlb
xor
inc
adc
sbb
rcrb
dec
mov
cmpsl
mov
in
pop
cmp
cmp
int3
adc
sbb
mov
xchg
add
cmc
cmp
push
dec
xor
dec
cwtl
jecxz
rclb
call
into
pop
inc
leave
stos
push
push
jl
fs
mov
inc
add
add
push
repz
mov
and
cmpb
push
xchg
imul
and
icebp
int
mov
inc
pop
mov
stc
xchg
dec
bnd
or
cltd
fldl
xor
xor
mov
push
out
sbb
shll
imul
adc
shrb
dec
and
mov
cltd
in
pop
xchg
jl
pop
data16
pop
mov
sbb
sub
dec
adc
sahf
pop
or
push
add
adc
jecxz
ret
or
mov
jnp
rclb
xchg
addl
sarl
fldt
lock
loope
mov
leave
ficoms
daa
xchg
lahf
inc
push
jle
adc
stc
cmpl
xor
xchg
rcll
and
sysexit
jg
and
inc
imul
xchg
and
cmpsl
adc
pop
mov
mov
and
and
adcl
xchg
push
inc
jecxz
inc
add
push
test
ret
jge
int3
fmull
mov
int3
xchg
cmc
dec
xchg
sub
out
rclb
fxch
ds
sub
js
aam
lret
iret
cmp
dec
bound
int
dec
js
sbb
inc
aaa
lock
and
push
ror
cmpsl
jne
jmp
push
repnz
lret
adc
jne,pn
adc
mov
and
sub
xor
and
cwtl
movsb
dec
dec
out
ret
rcrl
sti
dec
xchg
or
pop
outsb
sti
test
mov
lahf
push
fwait
mov
in
aad
jae
or
movsl
dec
hlt
xchg
push
cmp
mov
push
ljmp
stc
jmp
or
es
mov
fwait
rolb
in
loopne
sub
fistl
ja
mov
cmp
jmp
pop
arpl
jecxz
push
mov
fmull
jmp
cmp
mov
adc
mov
or
jmp
jo
mov
loopne
cmpsl
pop
cmp
jae
xchg
dec
repz
je
mov
bound
pushf
adc
icebp
js
push
and
in
scas
jl
movsb
fbstp
call
les
dec
test
push
inc
movsl
fdivs
jae
icebp
pop
loop
repz
and
jge
rolb
rcr
fimuls
mov
fdivrl
xchg
bound
xor
loope
xchg
sub
mov
cmp
mov
cmpsl
jnp
or
ljmp
mov
xor
lods
lahf
lods
xchg
out
std
das
divl
repz
movsb
dec
and
cmp
xchg
movsl
and
fisubrl
sub
inc
sahf
sub
fadd
in
xchg
and
daa
sti
pop
fs
adc
shll
daa
imul
dec
or
out
mov
test
arpl
or
aas
stc
pop
dec
xor
xchg
mov
sahf
xchg
pop
dec
dec
ss
mov
enter
cs
pop
ljmp
xor
inc
sbb
lock
push
xchg
into
mov
push
out
bound
push
or
aad
insb
dec
jo
pop
sbb
push
pop
adc
movsl
mov
mov
shll
dec
inc
inc
xchg
inc
fcmovu
es
pop
or
inc
mov
js
push
or
mov
push
inc
int
div
out
inc
outsl
push
xchg
xor
dec
aas
icebp
and
ficoms
jmp
aaa
add
out
pop
frstor
sbb
fisubrs
xor
lahf
aas
popa
cmc
in
jo
jnp
and
icebp
fwait
mov
std
arpl
les
cli
push
jg
test
xchg
sbb
icebp
pop
into
jle
push
sub
outsb
mov
stos
xor
push
push
jb
lahf
fs
movsl
sbb
hlt
mov
mov
lds
mov
pushf
movsb
out
push
mov
into
xor
sarl
out
icebp
ljmp
jb
adc
xrelease
cmp
test
push
imul
std
leave
arpl
jg
sarb
add
or
mov
in
cmc
call
or
sub
fsubrs
or
pushf
shll
lock
mov
dec
iret
xor
jnp
mov
push
vlddqu
pop
or
xchg
ja
sbb
or
fsts
shrb
xchg
xor
or
lods
ja
fisttpl
mov
sub
inc
push
xchg
pop
leave
leave
daa
and
int3
sub
inc
push
adc
jnp
mov
push
cmp
call
xchg
push
fwait
pushf
add
sub
add
ljmp
or
dec
shrb
add
rolb
int3
imul
loopne
pop
or
fidivl
pop
adc
adc
push
cmp
movsb
mov
ljmp
in
push
stos
and
movb
lret
lret
sbb
or
fwait
cmp
lcall
iret
mov
push
leave
mov
jge
jle,pt
sub
mov
inc
mov
icebp
xchg
cmpl
sbb
cmp
rcrb
stc
daa
lcall
pmaxub
jge
cmc
jl
clc
adc
fdivp
mov
dec
loopne
pop
inc
cmp
mov
rorl
push
gs
lret
cmp
mov
stos
ja
ret
adc
sbb
daa
mov
sbb
and
mov
repnz
mov
inc
push
popf
nop
andl
cmp
aad
shll
lret
cli
fwait
sub
sbb
xchg
mov
lahf
sbb
pop
dec
sahf
stos
int
mov
cmp
xor
mov
jo
aad
push
xor
popa
xor
fs
xchg
lahf
or
push
cld
sub
movsb
mov
bound
fadd
aas
add
addr16
fimuls
xor
mov
sub
not
and
inc
lock
fneni(8087
pop
ss
cmpsb
es
and
shrb
insb
pusha
ss
pop
sub
aad
mov
mov
adc
addl
in
int3
add
xchg
sub
xor
mov
mov
gs
aas
dec
mov
add
adc
loopne
ss
into
fcoml
adc
push
pop
aam
inc
testl
cmp
jo
push
jle
pop
insb
inc
icebp
cli
fsts
pop
and
in
faddl
mov
lock
lret
enter
aad
cltd
lcall
imulb
popf
xchg
fiadds
lods
cmpsl
mov
loope
repz
add
scas
cmpsb
push
xor
or
out
push
mov
pop
mov
dec
mov
insb
loope,pt
or
sub
lahf
es
in
iret
lds
js
adc
lahf
pop
popa
cmp
ss
jecxz
jb
leave
repnz
subl
or
pop
lock
sbb
inc
int3
pop
and
mov
cmp
mov
out
jae
loop
test
addr16
push
aad
xor
shll
adc
out
adc
mov
repz
mov
test
lods
add
stos
cmp
push
xlat
sbb
insl
jl
push
and
push
setg
cwtl
fisttpl
cmp
in
mov
cmp
jnp
out
push
cld
in
xchg
cld
daa
xchg
jecxz
xchg
pop
adc
pop
dec
testl
add
mov
pop
pop
imul
outsl
mov
subl
test
jle
lret
lret
subb
std
iret
out
inc
mov
rcrl
loopne
imul
mov
xchg
test
or
ja
jg
loope
xchg
mov
shl
xor
ffree
mov
and
pop
hlt
stos
push
mov
cmp
add
add
in
xor
repnz
inc
ficoms
movsl
mov
fdivrs
call
sub
mov
jg
mov
mov
dec
repz
js
fimull
sub
or
push
test
jg
jg
pop
dec
xchg
xor
xchg
add
aaa
lods
leave
xlat
mov
xchg
jne
add
in
movsb
mov
pop
push
pop
dec
stc
mov
in
fwait
repz
ss
or
mov
nop
jbe
in
push
push
scas
xchg
out
shrb
std
xor
push
xchg
movsb
cld
mov
lcall
and
mov
lods
fs
faddp
cmp
cltd
adc
loop,pn
addr16
pop
push
adc
lods
pop
ret
pop
push
sub
fwait
xlat
pop
push
sbbl
or
movsb
arpl
jb
jl
outsb
sub
stc
or
push
cli
or
push
mov
cmp
mov
into
cmpsl
cmpb
in
jns
outsl
jle
mov
cmp
ret
mov
ds
scas
aam
dec
pop
and
clc
pop
jle
test
mov
lds
nop
push
add
cwtl
enter
pop
popa
imulb
out
das
jecxz
xorb
push
cmp
lock
lret
clc
movsb
insb
and
pop
in
js,pt
xchg
sub
inc
jp
pop
fsubs
mov
mov
adc
or
push
inc
jo
mov
mov
cltd
mov
fmull
pop
popa
inc
lahf
dec
notl
xor
cmp
mov
mov
movsb
mov
jbe
movsb
pop
clc
sti
jo
inc
cmp
stos
pop
sbb
movsl
test
inc
subb
xchg
dec
xor
outsl
int3
in
aad
jge
jecxz
xchg
in
sub
inc
clc
in
inc
ds
inc
neg
rcrl
repnz
aad
ficoms
mov
mov
push
mov
jbe
pop
cmp
mov
and
clc
arpl
xorl
int
sub
test
iret
xor
call
and
por
and
dec
mov
insb
imul
mov
js
scas
adc
xchg
test
add
mov
gs
sti
jne
cmp
push
mov
push
xlat
or
adc
adc
lahf
incb
sahf
add
push
fucomp
add
lds
inc
fdivl
lret
mov
sub
hlt
mov
aam
cmp
call
test
fimuls
pop
movsb
cltd
jnp
movsl
rcl
out
add
pop
aas
pusha
add
xor
or
int
andl
inc
aam
dec
cli
leave
popa
icebp
pusha
push
push
cs
sub
aad
cmp
insb
or
popf
iret
test
cmp
stos
sbb
out
and
push
push
add
aad
ror
adc
xor
or
cmpsb
jo
sub
mov
js
fsubrs
cmc
subb
adc
mov
shlb
cltd
in
jne
xchg
pop
imul
aam
dec
lods
jg
sub
test
ret
lds
inc
cs
rorb
mov
sub
cwtl
cmp
mov
outsb
and
outsl
dec
push
movsb
and
xchg
adc
inc
sub
jns
insb
aam
xchg
lahf
or
xor
jg
lods
mov
sbb
ficomps
dec
iret
mov
push
cltd
fiaddl
cmpsl
dec
push
pop
jb
cmc
shr
mov
test
mov
xchg
imul
adc
pop
dec
jmp
std
bnd
sub
mov
outsl
insl
sub
out
xchg
stos
je
mov
mov
jae
push
lods
aaa
jbe
xchg
add
mov
mov
jp
test
jmp
mov
cmp
jle
mov
fwait
lds
sbb
je
cmp
rorl
or
lcall
xor
push
lahf
push
cld
adcb
ret
aaa
stos
jmp
mov
add
pushf
loope
adc
mov
sbb
pop
jecxz
lret
lret
ret
sub
repnz
sahf
pop
test
jp
mov
out
adc
out
lahf
std
jl
and
orl
push
jns
sub
bound
shrl
push
dec
fstpt
xchg
int
jmp
adc
push
rcrl
mov
xchg
fwait
push
or
fnstsw
mov
stc
mov
mov
ret
lds
or
cmp
nop
dec
pushf
fidivrs
aad
jecxz
cmp
and
outsb
ret
clc
inc
bound
mov
mov
and
cli
das
xchg
xchg
js
fcompl
mov
rolb
push
adc
fldl
xchg
cmp
add
mov
push
inc
sub
xchg
add
icebp
mov
cmpsb
pop
jnp
into
pop
cmp
clc
dec
movsl
pop
dec
pop
or
shrl
stc
cmp
mov
push
add
mov
jecxz
lds
or
aaa
sbbb
sub
popa
inc
mov
pushf
je
sbb
xchg
sub
adc
mov
dec
out
nop
shll
mov
sahf
outsl
sti
add
popa
push
sbb
std
or
in
or
sahf
jge
enter
push
mov
push
sbb
dec
pop
lds
cmpb
jns
add
aad
mov
repnz
clc
out
and
add
or
mov
fsubrl
mov
mov
rcll
int
cmpsb
adc
enter
pop
push
mov
adc
repz
mov
push
leave
out
adcb
daa
ror
push
push
jb
data16
sbb
mov
stos
stc
insb
fldl
cmp
mov
movsb
xlat
add
loopne
loopne
mov
int
out
dec
popf
jo
push
jmp
test
ret
clc
push
mov
addr16
loop
adc
popa
and
add
aaa
testl
jg
stos
ret
ss
push
movsl
aaa
out
popf
lret
dec
jp
shll
sbb
jae
into
int
fucomp
cmpsb
aaa
adc
iret
flds
test
lods
jmp
movsb
inc
jmp
scas
repz
push
sub
stos
mov
adc
js
push
lods
add
jle
mov
pushf
cltd
pop
ja
cs
mov
xor
fsubr
adc
fldenv
cmp
pop
push
sbb
stos
lock
sbb
mov
movsb
mov
lds
dec
xor
in
dec
mov
in
dec
shll
enter
loope
mov
sarb
pop
cmp
outsl
push
ror
int3
fsubrl
into
sti
or
and
and
inc
fbld
cltd
jle
xchg
mov
lret
inc
push
cmc
sbb
fisubs
inc
adc
cmp
xor
mov
mov
cmp
adc
dec
ljmp
sbb
pop
call
mov
and
mov
cltd
scas
insb
or
insb
stos
sub
ret
out
addr16
test
inc
sub
jg
cmc
out
jl
sbb
sub
cmp
imul
icebp
cmp
das
cmp
dec
xor
jns
mov
and
ret
dec
inc
jae
gs
mov
mov
mov
out
loop
dec
fists
je
cmp
mov
enter
jbe
lcall
lret
aad
jge
cli
and
call
cld
lock
jae
inc
cld
dec
icebp
mov
dec
pop
jae
movsl
inc
and
mov
lock
pop
popa
movsb
ljmp
orl
lea
xchg
cmp
pop
push
jbe
test
cld
loopne
xchg
lods
pop
xchg
or
in
jp
xchg
in
les
mov
insl
psubb
pop
mov
test
movsb
jb
cli
sahf
jl
add
sbb
adc
mov
cmp
and
jns
sbb
mov
icebp
pop
mov
cmp
out
inc
cmpsb
pop
sub
dec
test
cmp
sub
inc
mov
adc
loope
jp
flds
addb
in
cmpsb
jmp
pop
push
lods
or
ja
dec
lcall
pusha
bound
test
mov
call
sbb
cmpsb
ret
lock
imul
in
push
cwtl
xor
mov
out
arpl
out
sub
sub
scas
lods
out
movsb
sbb
jle
clc
dec
lods
xchg
cld
fdivs
jno
cmovo
pop
xchg
adc
xorl
insl
fld
pop
addr16
sub
dec
push
xor
cmc
loope
xchg
retw
aaa
push
sub
ss
test
dec
mov
in
cmp
popl
jne
out
out
pop
outsl
sahf
leave
xor
add
cmc
dec
dec
jae
adc
fisttpll
pop
lock
lods
sub
popa
cmp
or
jge
push
insl
roll
movsb
inc
jae
inc
aad
mov
inc
pop
mov
xchg
mov
clc
pop
jo
mov
inc
push
sbb
daa
inc
test
sbb
icebp
and
mov
pop
jecxz
scas
mov
insb
sub
fisubl
cltd
xchg
lock
rcll
incl
arpl
adc
cmpsb
shrl
lods
jns
sub
xchg
cmp
pop
fs
in
or
jbe
cltd
call
fidivrs
data16
mov
out
sahf
iret
div
sbb
push
and
push
jl
aad
or
test
dec
push
ret
mov
and
inc
push
jae
sub
outsb
sbb
sahf
cmp
mov
lock
inc
stc
lods
fisttps
xor
push
lds
and
or
dec
outsl
pminub
repz
sub
mov
inc
insb
gs
out
jbe
or
stos
sub
push
loopne
fnstsw
mov
andb
adc
outsl
nop
cld
lret
fcmovb
jbe
fucomi
dec
sti
movsb
cmpb
mov
inc
nop
shll
and
mov
iret
inc
test
call
dec
nop
les
jmp
lods
fwait
ja
leave
outsb
sub
cmp
add
cmp
jne
inc
pop
xchg
inc
das
add
xor
sub
icebp
sti
addr16
adc
push
lea
pop
cmpsl
sar
pop
clc
js
lcall
dec
aas
mov
fcmovu
testb
test
rcl
lea
insl
pop
mov
mov
xor
int
and
stc
out
arpl
mov
xchg
push
jae
dec
sti
add
pop
push
jmp
mov
jns
xchg
cmp
das
stos
lahf
out
dec
lcall
mov
sbbl
jg
xchg
lahf
scas
int3
stc
xor
sbbb
mov
mov
xchg
xchg
dec
call
ja
dec
pop
in
stc
mov
popa
ss
mov
mov
and
cwtl
imul
lret
sti
cmpl
cmp
jo
outsl
mov
divb
sbb
repz
adc
or
mov
enter
mov
daa
adc
int
or
icebp
mov
lcall
push
adc
arpl
inc
xor
lcall
movsl
mov
shrl
lahf
and
pop
sbb
mov
out
pop
dec
jg
mov
aad
mov
inc
dec
test
adc
orl
sti
aas
mov
push
cltd
xchg
movsl
inc
rcll
ret
dec
add
fcoml
add
rcll
xlat
and
push
dec
xchg
lock
sahf
cmovb
call
push
sbb
mov
call
xchg
inc
aaa
mov
add
and
cwtl
into
daa
pop
mov
movsl
push
int
mov
in
fildll
jecxz
mov
push
shl
sbb
push
sub
mov
push
insb
adcl
mov
scas
and
inc
cmpb
xor
lods
and
add
aam
or
fadd
loop
xchg
insb
pop
push
adc
int3
jg
mov
pushl
mov
lods
je
fcmovu
repz
insb
nop
adc
sahf
mov
push
mov
into
cli
dec
aas
inc
imul
outsb
out
pop
xor
pop
xchg
xor
adc
stc
ljmp
out
mov
mov
mov
and
inc
inc
xchg
jecxz
adc
fs
js
xchg
ljmp
cmpsb
pop
bound
bound
inc
xor
out
jns
fs
pop
xchg
push
lret
jge
jae
in
or
into
leave
test
jne
adc
sbb
pop
push
adc
mov
xchg
or
jns
and
sub
cmp
int
inc
push
pop
icebp
jp
xchg
sbb
pop
xor
sbb
testl
out
imul
mov
fistps
out
cmp
add
add
push
xchg
mov
shlb
in
insb
adc
dec
leave
fnsave
clc
fcomip
outsl
mov
in
lock
mov
or
dec
pop
out
mov
rorl
or
aaa
jns
jne
je
mov
jp
sahf
cld
les
dec
loop
inc
fistl
je
neg
cmpsb
gs
cmp
lods
mov
fadds
pushf
jmp
orb
ljmp
repnz
pusha
lret
ljmp
cmp
mov
mov
inc
aas
bound
lods
dec
cmc
xchg
adc
sbb
rorl
movl
push
xor
clc
icebp
cmp
mov
cmpsb
inc
pop
pop
mov
test
test
jae
cmc
add
and
fcomps
out
inc
arpl
aaa
cwtl
pop
cmp
loope
lock
xchg
in
cld
enter
ja
stos
sbb
fwait
dec
adc
mov
sbb
aad
or
lods
push
cli
mov
sbb
out
je
rorb
jecxz
or
push
int3
push
dec
rolb
cmpsb
aas
je
les
mov
mov
dec
and
mov
push
xchg
push
pop
jne
out
pop
cld
push
lods
jb
xchg
insl
lock
sarl
cmp
or
inc
mov
cmp
sti
cmp
outsb
js
subb
aaa
push
push
dec
sahf
mov
push
push
test
mov
lods
lods
enter
fildll
loope
jnp
lock
sbb
mov
stos
add
stos
out
mov
xchg
sub
sbb
loope
mov
xchg
mov
sahf
inc
sub
xchg
fists
mov
mov
scas
and
mov
out
loope
push
lea
call
dec
jl
or
jne
dec
mov
pop
inc
add
and
test
orl
cmpsb
inc
out
gs
iret
mov
add
sbb
out
xchg
push
mov
jmp
lods
pop
mov
jae
xor
push
push
aas
loop
xchg
pusha
adc
cltd
pop
test
cmp
add
fwait
add
test
aas
cmp
stos
int
fcoms
pop
xor
mov
das
scas
push
ss
je
rclb
sub
test
sub
fs
and
mov
fst
scas
xchg
jo
sub
or
pop
jecxz,pn
mov
push
push
jnp
adc
out
cwtl
mov
outsl
push
push
rol
popf
mov
in
rol
inc
and
loope
aam
pushf
popf
fcomps
and
sub
dec
repz
pop
daa
cmp
testb
je
jns
stos
adc
int3
pop
cmp
ljmp
stos
aam
push
mov
or
and
negl
ss
lock
test
cli
fbld
lds
pop
repz
lea
in
shlb
mov
cmc
insb
mov
or
sbb
dec
and
cmp
pushf
into
lret
jno
mov
je
lcall
adc
inc
cmp
mov
fisttpll
dec
rorl
pop
das
clc
xchg
loopne
int
push
lret
pop
xchg
push
fidivrs
and
xchg
cmpb
jns
ljmp
push
dec
mov
xlat
push
jg
aas
in
std
aas
pop
movsb
jne
ljmp
jnp
adc
mov
es
int
int3
and
lods
mov
mov
dec
cmpsl
push
pop
mov
pop
loopne
xchg
pop
push
dec
repz
ret
sbb
mov
push
dec
mov
adc
jno
mov
ret
add
imul
popa
dec
pop
std
cmpl
in
repnz
lret
js
movsb
dec
push
add
push
jl
cmpsl
fcmovu
xchg
inc
scas
lahf
jecxz
push
xorl
mov
push
loope
xor
mov
rep
mov
ds
mov
mov
shll
stos
pop
fistpll
and
popf
mov
and
push
inc
adc
addr16
fsubl
xor
sub
mov
das
cmp
clc
out
cmp
fidivl
sbb
rcll
mul
loopne
cmpsb
sub
cmp
pop
sbb
daa
jg
jmp
add
clc
xor
xlat
or
add
inc
ljmp
cld
lds
adc
add
xchg
cltd
scas
je
pop
lds
fildl
in
inc
out
js
and
daa
test
cmpsl
cli
outsb
les
push
popa
xchg
pop
dec
cmc
dec
ja
test
xchg
dec
jg
add
or
addr16
pop
xchg
bound
fcoml
fdivr
push
ss
push
imul
enter
xchg
aam
xor
js
dec
arpl
jnp
dec
jecxz
sbb
insb
inc
push
pop
inc
jp
xchg
int
lcall
sub
cld
xchg
jns
jle
hlt
cs
inc
lods
dec
dec
nop
pushf
fsubr
push
iret
fs
sub
sbb
xor
mov
imul
aad
addl
dec
fcmovnbe
jo
pop
pop
int3
ud1
enter
lock
pop
jno
dec
sbb
push
jge
cmp
dec
clc
sbb
xchg
bound
jbe
pushf
adc
int
hlt
and
cmc
push
ret
pop
insb
mov
lods
dec
fwait
or
emms
dec
sub
jg
push
scas
and
fists
pusha
lret
inc
nop
icebp
or
rclb
arpl
add
pop
mov
jo
pop
sub
xor
lods
test
xor
jmp
mov
jo
test
ljmp
test
orl
insl
mov
jnp
or
and
cmc
pushf
push
mov
movsl
and
sub
imul
and
ret
pushf
das
pop
ss
jp
cmp
mov
test
and
mull
imul
leave
inc
int
cmpsb
mulb
out
movsb
and
sbb
ret
int3
and
mov
xor
hlt
ret
into
mov
jmp
icebp
leave
jno
mov
stos
lcall
pop
cmp
and
pop
dec
imul
push
jnp
fidivl
push
adc
loop
and
pop
lods
lahf
pop
lret
in
addr16
testl
mov
out
add
aaa
sbb
lods
test
pop
push
jl
mov
stos
ds
iret
fs
stc
xchg
popa
and
int
sti
sbbb
cmp
mov
loop
das
ficoml
dec
inc
pop
mov
push
pop
test
push
dec
mov
les
xor
ficoms
push
mov
and
stc
mov
cld
push
mov
test
mov
jmp
cwtl
and
cmpsl
xor
aaa
sti
and
or
dec
out
add
lods
push
or
sub
push
xchg
loop
rcrb
mov
pop
enter
int3
mov
add
pusha
fs
fwait
adc
mov
sub
xlat
or
aaa
lea
in
sbb
mov
push
fs
js
mov
aaa
dec
mov
nop
lods
xlat
mov
mov
pushf
xchg
jp
xchg
imul
mov
fimull
rol
loopne
mov
mov
fwait
dec
pop
cmp
daa
test
enter
shlb
dec
ljmp
mov
adc
popf
pop
andb
dec
cmc
ja
pop
sbb
test
in
jae
lods
jecxz
testl
mov
pop
sbb
inc
pop
push
xor
push
sti
nop
mov
lods
lds
adc
mov
nop
pop
loopne
jne
mov
movsl
or
jnp
push
xchg
adc
xchg
xchg
dec
push
iret
jle
mov
dec
adcb
fwait
push
loopne,pn
sbb
lretw
mov
cs
cld
xor
mov
aam
jge
pop
push
and
sbb
jl
shlb
jg
jmp
shrl
and
in
ss
fbld
hlt
push
dec
inc
mov
das
out
imul
fistpl
fstps
loopne
int3
xor
push
jg
shlb
inc
adc
cmc
adc
cmp
jmp
fwait
sahf
mov
loop
leave
lret
cmpsb
ljmp
inc
sub
scas
push
test
fidivrs
dec
clc
mov
rorl
jge
fldz
xchg
insl
or
mov
out
and
inc
mov
ret
mov
mov
es
sub
mov
add
mull
and
leave
mov
pop
push
and
sbb
mov
leave
sbbl
xor
xchg
fwait
sub
xor
pusha
cld
lock
outsb
jno
and
mov
mov
mov
cmp
enter
sarb
dec
fwait
je
cld
lcall
dec
jo
pop
into
sti
outsl
dec
lea
mov
adc
and
push
imul
fdivp
ficomps
mov
dec
out
adc
out
lods
cmp
pop
push
pop
lret
dec
in
ret
mov
out
into
testb
sbb
adc
inc
jns
stos
jns
mov
loop
and
jp
push
test
int3
mov
cs
ja
pop
dec
xor
lret
fsub
mov
jne
ret
mov
je
int3
xchg
inc
enter
mov
xorl
and
ret
or
fistpl
or
les
mov
sub
mov
push
add
pop
int
mov
push
imul
int3
out
jnp
pop
shlb
dec
cmp
xchg
push
mov
xchg
xchg
fisttps
jo
enter
int
in
sbb
and
lret
pop
cmp
mov
pop
inc
in
and
adc
jns
jmp
das
cwtl
add
repz
outsl
ss
mov
push
sbb
cmp
mov
push
ds
lods
ret
sub
sub
sub
cli
lret
daa
and
popa
stc
and
inc
popf
hlt
jo
fnstcw
sbb
and
test
in
push
sub
mov
lea
popa
aaa
mov
sarl
jno
enter
jne
sbb
outsb
push
mov
ret
xchg
fstpl
or
cmpsl
dec
cmpsb
int
ret
pop
fwait
inc
mov
mov
ret
dec
pop
add
outsl
movsl
push
adc
je
test
cmp
pop
mov
dec
scas
jle
mov
in
adc
jg
pushf
stc
dec
dec
je
scas
loope
xor
outsb
jbe
daa
push
iret
pushl
sbb
inc
mov
fnstenv
ja
and
or
mov
mov
das
stc
rolb
fisttpll
xchg
test
into
push
mov
add
repz
pop
lods
stos
jge
ljmp
out
push
dec
sbb
push
lret
nop
xchg
xchg
mov
push
mov
dec
and
ja
out
push
xchg
ds
xchg
xor
cmpsb
sub
pop
aam
cmp
sbb
push
lret
mov
cwtl
inc
adc
cld
mov
push
aam
iret
pop
push
movsl
xlat
push
addr16
out
dec
pop
fst
out
jp
out
xlat
xchg
js
dec
dec
rol
orb
add
inc
cmp
pop
aas
xchg
mov
mov
fisttps
sti
or
lea
nop
sub
mov
mov
adc
add
sbb
test
push
add
sahf
and
fidivrs
repz
mov
repnz
mov
mov
and
inc
lret
xor
dec
sbb
sbb
lret
push
mov
xor
add
out
pop
pop
int3
pop
outsl
int
mov
mov
inc
sahf
mov
filds
rcrb
cltd
jns
leave
or
inc
sbb
pop
loope
mov
push
inc
lret
arpl
mov
ja
in
lcall
popa
cwtl
mov
lods
push
cs
adc
inc
lods
dec
mov
out
push
in
adc
mov
pop
out
cmpsl
hlt
push
ss
mov
mov
mov
jae
inc
add
test
out
daa
adc
cmp
aas
add
jle
fidivs
mov
gs
sub
lcall
xchg
out
add
shl
pop
pop
push
movsb
dec
imul
sbb
out
popf
pushf
mov
lea
sub
or
adc
scas
enter
jl
xor
sbb
or
inc
xor
shr
push
cmp
mov
fnstenv
std
fwait
mov
in
lock
inc
pushf
adc
test
inc
push
mov
xor
and
movsl
js
ficompl
sbb
push
ss
int3
sarb
jo
repnz
scas
jecxz
and
xchg
jne
lcall
xor
push
pop
dec
popf
das
ret
cld
push
sbb
out
lret
divb
jno
nop
ficompl
or
inc
lods
cmp
xlat
daa
xor
dec
dec
jns
je
outsb
inc
rorl
testl
mov
or
nop
shl
scas
adcb
sbb
push
movsl
pop
call
pop
inc
inc
sbb
pop
xchg
repz
jle
xor
pop
dec
out
out
rcr
inc
and
out
out
sub
xchg
out
jns
cmpl
xlat
das
lret
lret
addl
movsl
mov
ja
enter
add
pop
sub
sbb
lret
je
xor
add
fnstcw
addr16
sbb
xor
mov
ljmp
mov
mov
rcrl
push
arpl
das
movsl
mov
lahf
and
bound
push
cmp
mov
imul
iret
xor
aaa
sti
ds
lahf
or
out
cli
movsl
pop
adc
sarb
rorb
in
cmpsl
ret
rcll
adc
sub
int
push
mov
lea
pop
dec
xor
sub
jl
decb
pop
loop
pop
sbb
addl
das
sbb
mov
cltd
xchg
lret
mov
lods
shrb
mov
lea
adc
ud0
insb
data16
sub
sbb
mov
cld
outsl
pop
mov
cmp
enter
add
cmpsb
dec
cmc
sub
sbb
mov
adc
add
push
cmpsl
jb
into
mov
xchg
inc
ret
mov
sbbl
add
sbb
or
dec
and
popa
and
shrl
scas
push
cltd
and
sarl
aad
sbb
lahf
cmp
lret
fiaddl
das
fabs
mov
or
mov
pop
ds
jl
xor
sahf
pop
fdivl
outsl
out
pop
imul
imul
pushf
pop
clc
mov
in
jp
or
div
mov
lock
xchg
aaa
insb
rorb
dec
sub
mov
out
add
int3
xchg
add
sbb
rolb
inc
add
aad
inc
loopne
aad
fidivrs
rcrb
dec
aaa
std
push
cmp
sub
jns
nopl
xor
push
mov
push
sbb
xor
out
jae
xchg
push
subl
adc
pop
idivl
jmp
int
push
mov
pop
cwtl
dec
adc
dec
pop
mov
pop
leave
adc
and
cmc
fcmovnb
xor
or
mov
sub
shl
push
pop
aad
fisubrs
dec
clc
lret
and
into
inc
inc
mov
das
push
mov
subb
bound
dec
sbb
pop
int
cli
imul
pop
pop
lds
fwait
jge
sbb
aas
test
in
lcall
push
je
xchg
rclb
out
sbb
rorl
pop
cmp
aaa
andl
outsb
xor
js
dec
and
or
xor
mov
in
dec
outsb
imul
sahf
mov
jbe
adc
imul
add
and
test
movl
or
adc
mov
lods
and
jo
sub
jb
or
push
cmpsb
cltd
stos
push
cmpsl
jmp
push
push
push
jbe
adc
xor
outsl
shlb
sbb
mov
push
pop
jmp
movsl
daa
movsl
filds
les
ret
mov
out
daa
popf
in
in
sbb
or
adc
aaa
aas
nop
and
jb
popf
add
adc
shll
and
jmp
pop
cwtl
hlt
mov
jecxz
shrl
enter
mov
cmp
mov
pop
add
arpl
fs
sub
shlb
pushf
out
or
adc
int
and
sbb
and
xor
les
xor
inc
shll
test
mov
add
push
inc
cmp
inc
xor
ficompl
dec
xchg
mov
jnp
test
add
aaa
adc
call
add
xchg
xchg
fidivl
pop
pop
and
andb
jl
mov
out
orl
and
stos
loop
inc
dec
and
xchg
pop
add
call
fldz
pop
jns
stos
mov
rorl
dec
jo
push
in
cwtl
pop
out
pop
adc
or
lods
xor
xchg
jmp
test
rcrb
xchg
outsb
and
rorl
or
js
pop
repnz
push
push
push
mov
ds
push
and
lcall
stc
xchg
mov
orl
push
sub
sbb
dec
icebp
decl
xor
movsb
stos
xchg
and
mov
mov
sub
outsb
sbb
mov
push
mov
pop
test
push
pop
add
sub
dec
mov
cli
xchg
push
sub
dec
jo
hlt
dec
cmpsb
dec
cltd
je
inc
jno
popa
in
push
xchg
fmul
ret
rorl
and
inc
add
ja
xchg
aaa
push
jecxz
dec
sub
push
push
pushf
sahf
mov
mov
loopne
mov
std
adcl
cmpb
out
imul
lds
stos
push
pop
outsl
jmp
xor
daa
adc
add
enter
pop
xchg
mov
add
sub
adcb
adc
fwait
dec
mov
insb
push
push
sub
push
mov
out
mov
dec
repnz
xchg
mov
push
cmc
jae
out
dec
mov
inc
mov
in
mov
jns
std
ret
int3
xchg
xor
out
jnp
jbe
jbe
push
mov
adc
aad
pop
movsb
aam
ja
or
imul
push
insb
test
inc
and
mov
repnz
incb
test
imul
sbb
daa
ja
rclb
mov
xchg
jnp
jecxz
int3
sub
mov
mov
xchg
ret
push
mov
inc
out
adc
movsl
rcrb
ret
pop
mov
mov
jge
adc
sbb
mulb
push
loop
loopne
mov
fs
lock
sbb
in
sub
movzwl
lret
pushf
fstps
jno
push
arpl
mov
cmp
sub
mov
cmp
add
test
cltd
addr16
xchg
arpl
ss
jne
in
mov
das
vmovd
js
orl
ret
pop
test
int
jg
gs
xor
pusha
jle
jge
insb
lret
mov
add
add
inc
je
and
adc
cmpsb
sbb
pop
mov
movsb
dec
and
sbb
mov
mov
push
dec
push
loope
ljmp
inc
adc
and
clc
jbe
movsb
dec
cmp
sbb
jg
add
jecxz
in
lret
sbb
push
andl
addl
or
int
fsts
mov
pop
les
test
jno
sbbb
ss
jmp
cli
xchg
mul
hlt
int
adc
sbb
shrl
dec
xchg
out
pusha
sub
cmp
ret
push
test
rorb
pop
subl
or
std
idivb
imul
jecxz
jge
mov
mov
and
jne
inc
rorl
int3
sub
xchg
outsl
and
ds
jb
xchg
sbb
jle
aad
fwait
lret
push
push
int3
or
xchg
jb
xlat
cs
jg
stos
movsb
jns
mov
int3
cmp
cmp
xor
enter
cmc
imulb
dec
enter
call
mov
in
arpl
dec
add
adc
call
pop
adc
shrb
imul
adc
or
outsb
loope
jmp
adc
out
push
jg
call
daa
sbb
icebp
hlt
rclb
fwait
or
cmp
mov
scas
lret
pushf
xor
dec
xchg
and
xor
iret
rcr
jmp
hlt
es
push
or
cmp
mov
imul
inc
mov
push
lcall
ret
inc
subb
cmp
jmp
test
in
mov
cs
imul
adc
dec
out
repz
inc
dec
sti
sbb
cmp
pop
push
pop
xchg
ret
sbb
jae
pop
mov
cmp
test
sahf
sbb
push
mov
rorb
fcomps
std
adc
lods
or
sar
mov
adcl
aad
xchg
fidivs
adc
push
cmp
pop
std
mov
pop
dec
sub
push
push
test
sbb
fidivrs
lods
in
cmp
mov
xor
orb
pop
cmpb
rcrb
jp
dec
loope
and
call
out
inc
inc
in
repnz
dec
outsl
push
lods
push
xchg
and
and
ret
or
jg
add
data16
loope
mov
fdivrs
push
or
mov
sub
adc
pop
pop
fs
push
out
lret
out
stos
jg
push
sub
loop
mov
jp
jnp
cmp
loop
cmp
push
repz
jnp
lods
repnz
pushl
movsb
and
ss
stos
in
pusha
mov
push
mov
jmp
push
inc
inc
inc
adc
jno
xor
shrb
idiv
aad
or
and
shrb
or
dec
pop
aad
pop
push
jae
jmp
sbb
scas
fdivl
ljmp
mov
or
movsb
pusha
sbb
pop
lods
adc
and
cmp
push
inc
lock
pop
into
aad
xor
jle
mov
jno
insb
push
or
jb
stos
jns
nop
push
inc
mov
out
jl
pop
and
out
sbb
into
jp
dec
loopne
pop
rolb
mov
mov
and
cwtl
cmp
push
out
cmpl
adc
push
pop
scas
cli
pop
or
xchg
ss
insb
mov
xchg
inc
add
add
dec
or
mov
test
in
jns
into
xchg
mov
test
cwtl
sbb
stos
mov
sbb
xchg
sarl
dec
fiaddl
sbb
sahf
insl
int
stc
insl
and
lret
cmp
xlat
push
push
test
fildll
daa
jne
dec
pop
mov
inc
insb
cmp
movsb
insl
in
mov
aaa
xchg
add
imul
or
loopne
enter
add
pop
inc
sub
mov
sti
and
ss
add
rep
mov
rcrl
mov
aaa
push
loope
lret
pop
mov
mov
mov
adc
mov
and
outsb
scas
push
hlt
adc
dec
xor
shrb
jb
fs
outsl
xchg
movsl
test
pop
jns
stos
mov
jbe
rcl
lds
faddl
cmp
gs
mov
mov
sub
xchg
pop
push
mov
inc
popa
push
imull
fs
adc
out
pushf
pop
enter
hlt
dec
mov
mov
rorb
mov
mov
cmp
mov
loop
ret
addr16
imul
jnp
dec
add
xchg
sarb
fldenv
out
roll
or
mov
out
adc
push
cmp
cli
xchg
adc
xor
ffreep
xor
fnstenv
or
aad
mov
sub
rcrb
into
pop
arpl
repz
mov
shll
and
ljmp
stos
dec
cmpsl
adc
sarl
inc
std
xchg
sbb
into
inc
xor
push
sub
decb
inc
bound
or
xchg
add
shrl
mov
cs
les
jl
divb
addb
mov
loopne
or
sub
lret
xor
mov
add
outsl
sahf
mov
dec
repz
push
jnp
pop
stos
jbe
pushf
mov
ja
clc
std
and
scas
sahf
push
sub
mov
lcall
sbb
pop
imul
add
in
and
mov
jle
adc
enter
fldenv
xor
ljmpw
or
enter
push
daa
jmp
lods
out
ss
mov
rol
es
dec
jns
es
fs
mov
mov
addr16
and
or
cmp
and
scas
es
arpl
xchg
xchg
out
push
and
shrb
aaa
lods
adc
mov
or
mov
mov
lds
inc
jmp
rcr
imul
loope
xchg
std
xor
push
pop
push
data16
fdivs
jne
mov
or
push
xchg
xor
hlt
or
inc
push
mov
in
mov
pop
xlat
in
int
sbb
leave
loop
push
push
mov
lcall
mov
in
and
nop
sub
dec
sub
xchg
aad
bswap
xlat
inc
fwait
xor
push
mov
inc
outsl
sub
push
mov
movsb
insb
mov
cmp
jge
aas
jno
ja
mov
jmp
push
lcall
pop
int
adc
insl
pop
pop
push
std
out
scas
fldenv
sub
sub
cmc
sbb
mov
sbbb
push
dec
pop
jnp
hlt
cwtl
add
and
test
stos
adcl
addl
leave
je
leave
push
sti
sarb
mov
sub
out
scas
js
lret
mov
inc
pop
mov
xchg
mov
mov
xor
popf
popf
ds
sbb
enter
mov
jmp
lods
adc
in
test
adc
loopne
sbb
and
xchg
cs
nop
sub
mov
lcall
fisubrs
lret
or
arpl
test
dec
imul
movsl
dec
jge
out
nop
ret
loop
ljmp
mov
sub
pusha
mov
loop
cmpsl
inc
xchg
push
fimuls
push
push
jae
push
aad
iret
leave
jg
rcrl
pusha
subl
out
push
mov
and
test
and
call
divl
fwait
ss
dec
dec
sbb
xchg
stc
inc
xchg
jle
push
lock
xchg
outsl
xor
cmp
sub
jb
cli
add
imul
mov
fnsave
clc
fsubrs
out
movsb
clc
ror
mov
inc
cmp
mov
ss
cld
pop
mov
pop
lods
in
adc
js
cli
dec
nop
das
xor
mov
mov
loopne
adc
jp
fidivrl
out
in
loop
push
cld
mov
clc
lea
mov
lcall
push
lea
dec
sub
popa
xor
push
sub
rcll
fnop
lods
cwtl
aam
loop
jb
cltd
cmpsl
jmp
int3
lret
adc
ss
jmp
call
mov
sub
cmpsl
addr16
push
outsl
push
and
sbb
stos
jb
xor
push
insb
mov
push
inc
stos
sarb
or
lds
aas
sbb
jp
std
mov
sbb
dec
call
mov
mov
mov
xchg
cmc
mov
dec
sbb
push
in
in
and
rcrb
or
mov
loop
cmp
lret
push
mov
add
push
mov
push
les
cld
xchg
push
inc
repz
leave
popf
add
mov
mov
jb
rolb
push
gs
and
or
add
and
int3
enter
sbb
stos
ds
movsb
jecxz
mov
add
loopne
adc
roll
roll
mov
stc
gs
ljmp
push
jp
lock
xor
lds
jnp
and
pop
jg
inc
std
rorl
into
add
sbb
call
and
je
add
pop
out
adc
mov
in
jge
mov
int
in
xchg
cmpsb
fsubl
mov
popa
jbe
outsb
scas
and
mov
sarb
inc
jbe
sbb
and
sub
lahf
icebp
nop
daa
hlt
and
fs
jno
xchg
sub
push
and
test
push
adcl
mov
ljmp
fwait
xor
and
cmpsb
das
lret
push
aaa
inc
rcr
xchg
lea
imul
cmp
fdivs
or
out
cmp
leave
or
pushf
jbe
rcrl
mov
das
das
and
pop
addr16
jo
aam
jbe
add
cli
push
cmp
rolb
mov
fsubrl
and
lcall
ficomps
pop
je
mov
hlt
insb
sbb
xor
cltd
sub
clc
push
fs
fcoml
pop
movsl
xorb
pop
mov
pop
mov
imul
jns
je
test
push
fisttpl
mov
iret
push
ja
notb
cmp
mul
push
outsb
jb
ljmp
js
idivb
enter
mov
into
lods
mov
sbb
cmc
cmp
mov
test
pop
aad
mov
pushf
movsb
sub
subl
nop
les
adc
adc
mov
imul
xchg
cmp
addr16
mov
inc
fs
sbb
mov
sbb
push
fdivrs
dec
push
insb
fisttpll
mov
ret
orb
or
cli
mov
pop
pop
jbe
lods
into
jmp
adc
mov
mov
imul
xchg
or
xchg
push
cmp
notl
out
pop
lret
add
dec
fists
jnp
in
push
mov
pop
jecxz
test
add
sub
test
dec
out
cs
add
sahf
pop
push
xchg
repnz
pusha
cld
and
xor
sub
jb
cli
out
inc
mov
cmpb
adc
cmpb
repz
sti
inc
adc
cmpb
outsl
mov
test
mov
sub
mov
adc
xor
inc
adc
jnp
cmpb
sahf
dec
jnp
inc
shr
imul
sub
xorb
scas
add
pop
xor
cmp
es
enter
pop
and
cmp
shlb
dec
mov
std
and
rclb
adc
cmpb
push
test
dec
outsl
cld
fisubl
ficompl
loope
aas
mov
jg
icebp
dec
xchg
jl
enter
cmc
push
sbb
push
sub
xor
jnp
movsl
js
lahf
std
and
jbe
add
hlt
test
fidivrl
cwtl
xor
mov
jne
mov
loope
jns
jecxz
lcall
push
fisubrs
add
mov
push
inc
cmpsl
das
enter
lock
push
push
jo
adc
rcl
mov
xchg
sub
enter
imul
push
les
movsb
mov
push
fists
jb
and
out
dec
loope
cmp
jae
clc
cltd
dec
mov
dec
popf
jbe
cmp
fbld
lods
rcl
stos
jecxz
lds
sahf
inc
shlb
fmull
push
les
das
sbb
jne
andb
jbe
cmp
out
xchg
sub
std
adc
out
push
data16
mov
mov
xor
ficoms
call
add
in
inc
push
fisubl
imul
xorl
mov
mov
testb
imul
pop
ret
mov
ja
fs
inc
push
ficoml
pop
push
sub
iret
ror
pop
pop
sub
or
mov
add
xor
pushf
in
or
and
add
xchg
in
mov
mov
sub
adc
and
filds
xchg
js
cmp
insl
mov
mov
fs
enter
test
jnp
ja
fadd
push
adc
adc
rcl
mov
or
jnp
lock
cmp
cld
add
loopne
cmp
sbb
rcl
int
jmp
insb
addl
fisubrs
andb
dec
and
jnp
mov
in
dec
lea
adc
and
ja
cli
hlt
shll
pop
incl
cli
aaa
div
adc
and
cmp
icebp
mov
out
and
jo
cli
clc
data16
iret
add
push
imul
add
jno
xor
cmp
and
insl
add
pop
aad
dec
icebp
push
lret
xor
mov
lods
sbb
sbb
lods
push
mov
icebp
cmp
icebp
mov
inc
hlt
or
xchg
add
out
stos
out
xlat
test
fcmovbe
adc
pop
imul
mov
xor
sub
ja
rolb
mov
inc
sub
mov
pop
sti
mul
xlat
mov
mov
mov
shrw
adcl
daa
sahf
ret
push
mov
subb
pop
jb
jns
jae
cmp
clc
cmp
aad
in
insb
cmp
jl
push
jp
outsl
mov
or
test
or
mov
mov
xlat
lret
xchg
mov
out
sub
test
and
aam
ljmp
sub
lahf
hlt
adc
jecxz
and
pop
loop
das
and
rcrl
popf
popa
and
jns
rcrb
and
test
shlb
xchg
and
addr16
xor
fildll
jge
cltd
data16
adc
test
mov
dec
nop
icebp
inc
dec
pop
pop
push
cs
daa
jecxz
scas
sti
incb
addl
inc
xchg
scas
ja
pop
test
jge
icebp
cwtl
lret
into
out
cmp
push
imul
int3
je
mov
inc
xor
aaa
outsb
sub
sbb
bound
inc
or
dec
lods
jle
iret
sub
adc
push
mov
sub
das
lds
mov
dec
aaa
xor
pop
pop
enter
push
add
fldcw
rcrb
filds
sub
dec
xchg
add
test
cwtl
fildll
sub
and
pop
mov
ja
mov
sti
jmp
push
negl
cmpb
into
addr16
jbe
stos
clc
jl
call
lahf
in
cmp
popa
mov
xor
fnstcw
inc
test
dec
or
insl
roll
mov
std
testl
pop
push
sub
ret
clc
cs
jmp
cli
aas
testb
mov
mov
adc
dec
add
and
add
cmc
bound
xchg
add
adcb
add
or
mov
push
aas
mov
popf
mov
pusha
sahf
mov
fcmovne
cld
iret
mov
dec
ret
popf
jne
jnp
cli
fcmovnb
dec
lods
ret
jo
cli
lods
das
repnz
xor
xor
or
mov
mov
ja
or
and
test
out
aam
sti
pushf
or
cs
call
into
xchg
mov
imul
mov
int3
clc
bound
cmp
sti
ret
push
push
cld
addb
nop
stos
mov
mov
sub
sbb
sbb
xchg
pop
mov
xchg
pop
jmp
mov
lret
cli
int3
push
inc
xor
jb
test
dec
sub
js
popa
inc
pusha
adc
inc
sbb
mov
mov
mov
sti
mov
jp
pop
xchg
xchg
popf
mov
dec
cmpsl
xor
fdivs
inc
and
jl
jb
sbb
cmp
dec
addr16
rcl
add
inc
dec
inc
dec
and
repnz
inc
cmp
mov
jo
jne,pt
test
lods
outsl
inc
pop
and
and
jp
add
mov
ret
pop
or
cmc
mov
cmc
inc
hlt
cmc
rorb
test
movsb
mov
mov
je
xchg
pop
imul
sub
jg
add
dec
xchg
push
cwtl
ja
sub
mov
sbbl
pushl
fdivrl
mov
jge
and
fs
push
ret
repz
sub
pusha
inc
pop
outsl
and
push
pop
test
in
or
inc
mov
test
out
fs
jne
and
loope
js
scas
test
xor
loopne
prefetch
xchg
jae
adc
cmp
imul
and
lock
ret
repnz
mov
test
add
mov
or
mov
adc
mov
mov
filds
rcrl
in
rcrl
dec
adc
xchg
lahf
das
or
pusha
jle
pop
cmp
jg
xor
xchg
jge
test
repnz
xor
sbb
jp
mov
xor
mov
rcr
repz
inc
shr
and
stos
mov
sub
sub
lods
in
mov
mov
cmpsl
arpl
mov
mov
fnstcw
imul
mov
pop
je
mov
and
inc
filds
mov
inc
hlt
aas
jp
xchg
adc
leave
lock
out
aas
pop
push
stc
out
cmp
fstpl
push
sub
jae
lahf
fmull
push
adc
lea
xor
sub
in
mov
in
mov
mov
daa
roll
xor
andl
push
jg
add
or
push
mov
lahf
mov
push
add
dec
subl
xchg
std
and
cmpsb
icebp
out
sub
out
enter
movsb
std
sub
or
aaa
pop
std
jo
pushf
loope
cmp
push
mov
push
pop
movsl
inc
out
xchg
outsl
lods
jge
scas
add
ljmp
and
cli
ret
fldz
dec
cmpb
lret
fdivp
js
xor
dec
cltd
jge
jb
push
mov
dec
lods
pushf
xchg
aad
xchg
push
inc
in
mov
jns
fs
pop
sbb
mov
cmpsl
or
xor
mov
lds
dec
jbe
xor
int3
adc
arpl
and
pusha
sbb
or
pop
sub
lds
and
jnp
sub
sbb
xor
cmp
inc
into
loope
jae
cs
pusha
fs
cmp
jge
dec
popf
xchg
mov
cmc
adc
mov
in
sbb
sub
push
lret
mov
and
test
fidivrs
divb
cmp
mov
test
test
enter
cli
adc
imul
es
mov
xor
mov
mov
repz
orb
fwait
and
cmp
sub
or
aas
jne
ror
mov
mov
enter
and
cmpsl
and
jl
jb
cwtl
in
and
mulb
imul
mov
sbb
scas
sbb
pushf
pop
sbb
push
aas
jb
mov
mov
iret
mov
call
push
aad
pop
xchg
and
sahf
mov
mov
pop
stos
mov
pop
jl
mov
and
iret
jmp
je
andl
orl
push
mulb
mov
in
push
mov
data16
and
sbb
cmc
in
cmpsl
dec
sub
dec
sbb
or
jb
ds
jo
mov
mov
or
jb
jp
cld
fidivl
lcall
mov
inc
mov
fidivl
test
mov
cmp
ret
push
push
add
out
rcll
out
mov
pop
gs
adc
adcl
xchg
xlat
and
inc
lock
mov
shll
popf
cmpsb
cld
jecxz
pop
in
push
jp
loopne
mov
add
cs
sub
or
xchg
lds
mov
push
sbb
and
scas
sub
xchg
pop
out
add
sub
or
cmpsb
pop
imul
mov
cwtl
imul
inc
jb
dec
push
enter
dec
shll
daa
lock
mov
lret
frstor
sbb
pop
inc
lock
jge
lods
ss
es
je
leave
movsb
aas
mov
push
sub
inc
mov
jns
and
testb
push
mov
cmp
jne
hlt
pusha
mov
push
dec
inc
xchg
mov
lret
loope
gs
repz
inc
sar
cmp
je
lock
fisubrl
mov
vhaddpd
push
jecxz
scas
adcl
std
lret
repz
gs
popf
mov
pop
add
ja
add
pop
out
hlt
jb
xor
add
pop
adc
pop
fwait
lahf
pushf
and
sub
push
and
sub
pop
test
or
movsb
mov
push
iret
cmp
xor
mov
adc
imul
inc
adc
loope
adc
mov
shll
pushf
imul
faddl
fs
cltd
ss
aad
lahf
and
adc
sbbb
jnp
fldt
cld
icebp
jns
or
mov
jle
push
loope
cmp
xlat
mov
in
popa
xchg
adc
mov
test
push
mov
into
mov
dec
subl
mov
pop
inc
jae
xorl
add
xchg
sahf
push
dec
test
pusha
or
movsb
jg
sub
data16
mull
movsl
mov
movsb
fiaddl
cmp
xor
popa
lea
sbb
les
add
insl
aam
lcall
in
cld
cmpsl
loope
arpl
jae
inc
push
movsb
ret
add
jecxz
cmp
push
clc
cmc
sar
out
rcr
mov
shlb
loop
js
daa
mov
int3
aaa
mov
or
adc
fdivr
js
sbb
mov
pusha
ds
add
cmp
aaa
adc
dec
push
cli
gs
hlt
sub
cmp
es
xor
sub
xchg
imul
lds
bound
std
xor
mov
inc
or
out
mov
lret
imul
test
jecxz
divl
int
mov
push
xor
hlt
xchg
sbb
push
and
insb
shrb
repnz
sub
int3
sarb
shlb
jp
rclb
jne
dec
pop
out
pop
out
in
mov
sub
out
stos
or
js
std
outsl
out
imull
adc
dec
lret
pusha
xchg
pop
mov
sub
adc
inc
js
add
ljmp
push
test
cmpsl
push
mov
push
mov
and
gs
sub
fiadds
pusha
sbb
lret
or
xor
adc
xchg
mov
xor
pop
fldt
not
jl
xor
sub
mov
mov
add
fstps
rcrb
into
mov
jae
mov
sarl
dec
lock
push
into
rcrb
or
popa
ret
rclb
push
mov
shrl
pop
in
and
scas
cmp
mov
sbb
jecxz
ret
divb
cld
and
idivb
xchg
imul
mov
loop
lahf
test
test
mov
add
push
adc
mov
cmp
mov
les
test
in
push
mov
and
icebp
lods
lret
test
mov
cld
xor
in
std
jns
outsl
or
push
gs
enter
nop
sbb
jne
mov
xchg
lea
loope
sbb
repnz
add
and
pop
and
jns
xchg
and
sub
jnp
sbb
push
mov
push
sub
mov
mov
jmp
xchg
shlb
sub
sbb
sbbl
stos
xor
sub
sub
push
xor
cwtl
adc
int
cld
dec
dec
fs
xchg
fldenv
aas
ljmp
inc
movsb
mov
adc
cmpsb
jecxz
pop
mov
lods
add
ret
sub
sbb
dec
scas
fcoms
cld
out
cs
fldenv
cltd
into
and
xor
lods
mov
sub
mov
xchg
push
xchg
out
add
lds
or
int
ret
out
jp
cmp
mov
cmpsb
sbb
jge
or
std
pop
sete
add
or
and
inc
insb
add
shr
shlb
pop
fwait
jnp
xchg
jg
pop
inc
inc
sbb
cmp
xchg
into
pop
xor
cmp
inc
xor
xchg
mov
cs
jo
out
mov
jmp
add
dec
jo
jl
push
lods
insl
inc
xchg
push
ss
imul
xchg
popf
sub
xor
ljmp
inc
pop
cli
inc
das
adc
mov
mov
push
sbb
push
rclb
js
sbb
and
outsb
mov
xchg
leave
out
mull
adc
andl
ds
mov
dec
inc
out
xchg
stos
stos
subl
adc
lret
xchg
sbb
inc
mov
iret
rolb
cld
mov
pop
and
inc
push
mov
out
jl
xlat
push
xlat
lods
cmp
jg
pop
xor
jnp
xor
pop
dec
fiadds
loop
lds
dec
test
sub
mov
addb
cmc
cmpsl
cmp
scas
jno
xor
out
push
mov
orl
and
ret
leave
lods
jecxz
in
dec
stc
push
inc
jl
and
jno
mov
lods
push
mov
cmp
call
jp
inc
std
dec
or
pushl
stos
xor
push
test
mov
sahf
loopne
fsubs
sub
call
sti
xor
andb
cwtl
cmp
inc
mov
aam
popa
jmp
inc
lods
pop
shll
cwtl
cmp
imul
xchg
inc
and
cmpsb
nop
xchg
cwtl
push
fimuls
out
mov
shlb
pop
mov
xor
jl
jne
scas
movsb
outsl
inc
mov
jo
leave
mov
std
pop
lret
clc
bswap
mov
or
arpl
and
pop
cmp
and
xor
add
dec
cmp
jo
or
loopne
cmp
ja
and
xor
test
dec
lret
fsubrs
xor
inc
mov
andl
nop
ss
pusha
jle
dec
lea
jl
xor
mov
and
cmp
ja
fisubrl
xor
adc
shrl
dec
jo
sub
icebp
xchg
lea
jmp
dec
mov
gs
add
and
pop
or
popa
lods
pop
dec
mov
andl
xchg
sarl
fbstp
push
outsb
xchg
add
inc
sahf
ficomps
inc
cli
pop
push
adc
mov
loope
mov
jle
lods
gs
int3
movsl
shll
insb
je
test
test
inc
cmp
xorb
ss
jmp
push
jecxz
fstps
push
mov
add
pushf
call
testb
sub
imul
popf
xchg
adc
mov
jle
das
or
test
mov
and
xchg
sbb
xchg
shlb
mulb
pusha
js
xchg
fs
pop
jp
xchg
cwtl
js
jbe
lock
mov
shll
pop
mov
sti
test
sub
inc
call
add
fnstsw
mov
lods
pusha
cltd
sbb
rorb
adc
aaa
lea
xor
mov
mov
xor
cs
inc
orb
in
jbe
ret
xor
mov
in
cmp
mull
cmp
aaa
dec
test
pusha
subb
lods
lods
mov
cmpsl
sub
jnp
mov
xchg
xor
and
insb
xchg
cmc
cmp
sti
push
push
mov
pushf
repnz
mov
inc
ja
fcmovu
pop
ret
hlt
xor
cmp
loopne
daa
sbb
cmp
inc
mov
jb
das
adc
pop
push
mov
pop
mov
fdivs
pushf
push
push
or
movsl
adcb
dec
add
mov
in
daa
fnsave
xor
push
xor
xor
mov
popf
or
leave
lcall
cmpsb
fsubl
cmp
lock
push
clc
int3
pop
fdivrl
mov
xchg
jb
xchg
jae
fwait
jge
jle
cld
lea
into
mov
xor
bnd
jg
jae
loop
mov
leave
daa
adc
dec
js
or
or
sub
aas
jg
cltd
push
pop
fdivs
jge
and
cs
fisttps
xlat
dec
insb
mov
push
cmp
sub
sbb
xchg
jl
xchg
popa
iret
testb
mov
jno
das
test
cmc
jne
je
add
sub
mov
stc
mov
enter
inc
call
cmp
jb
int3
jb
cmp
jl
inc
negb
pusha
jl
std
rcrl
test
dec
xchg
pop
jg
mov
or
mov
adc
out
sub
xor
pusha
ficomps
rol
cmpsb
aaa
or
lret
outsb
sbb
cwtl
jmp
subb
rclb
cmp
cmp
iret
ja
insb
xor
lret
std
cmp
jp
inc
lods
push
sbb
sub
leave
loop
inc
int3
cmpsl
vmovd
push
pop
push
inc
cld
jno
lea
scas
xchg
push
dec
loop
rcr
aaa
stos
cmp
xlat
iret
xor
add
push
jp
push
sbb
dec
push
clc
outsb
fiadds
int
push
jo
lcall
push
pop
mov
sub
gs
mov
lock
mov
mov
dec
pushf
lahf
in
cmpsl
loop
mov
mov
mov
inc
jbe
or
jo
mov
dec
inc
dec
enter
cli
test
jns
imul
cmp
loop
ret
jbe
or
jno
movsb
add
dec
xor
ss
std
in
pop
ficoms
xchg
and
shlb
ss
jge
push
int3
ljmp
mov
jo
inc
daa
hlt
add
aam
or
into
pop
dec
das
mov
nop
cmc
adc
pop
mov
leave
push
daa
mov
ja
leave
sbb
mov
push
mov
js
faddl
sbb
fidivrl
xor
in
aas
push
outsb
pop
jbe
je
push
push
jmp
popa
xor
ret
sub
sub
mov
fdivs
cltd
xor
push
pop
out
sub
push
pop
sub
cmp
stos
inc
and
out
fnsave
rcr
insl
dec
inc
insb
cmc
dec
movsl
sbb
loopne
inc
push
aad
dec
jge
mov
movsb
imul
lods
push
dec
jns
add
lods
xor
cmp
stos
sub
or
dec
pop
jecxz
fmuls
xchg
rorb
and
and
pop
lret
rcl
push
loope
adc
aam
jl
cmc
push
xchg
mov
or
push
pop
jnp
adc
pop
push
push
add
dec
testl
or
popf
and
pop
sub
cmp
cld
bound
lods
xor
mov
mov
nop
aam
clc
leave
pop
mov
adc
in
es
cltd
gs
inc
sub
sbb
jo
pop
lods
test
ficompl
test
jecxz
lret
sub
mov
out
add
in
adc
push
jle
pop
push
push
out
in
aad
xchg
jae
and
mov
fisubrl
repz
je
sub
call
push
dec
loope
sbb
cmc
std
arpl
lods
sbb
rorb
jecxz
clc
pop
divb
mov
jo
or
cmpl
mov
popf
inc
push
jle
stos
movb
inc
test
fwait
jb
or
sti
hlt
pop
jo
fnstsw
dec
xchg
push
in
cmp
test
pop
out
xor
out
adc
arpl
pop
push
dec
inc
sub
cmp
orb
idiv
aaa
add
add
std
xchg
pop
jne
inc
les
pop
cmp
inc
fisubl
ljmp
sti
or
xchg
int3
dec
fstps
mov
mov
adc
jl
mov
jl
xchg
ret
mov
add
out
sub
cli
loope
add
push
aaa
adc
cmc
stos
mov
outsb
xor
mov
xchg
stc
pop
aad
js
leave
xor
jo
or
leave
sarl
cvttps2pi
pop
ja
jg
inc
mov
ljmp
cmpsb
cmp
in
jp
or
mul
pop
mov
xor
bound
dec
fsubrs
ja
lea
mov
add
dec
jg
mov
jnp
fcoml
dec
cs
xchg
sbb
cs
xchg
or
jo
jl
jecxz
imul
dec
lret
xlat
jbe
cs
addr16
sbb
cmp
into
lcall
mov
std
sub
push
repnz
or
pusha
shlb
je
mov
outsb
jae
cmp
aam
ss
jnp
repnz
scas
and
lock
cmp
mov
xchg
repnz
outsb
outsb
ret
outsb
test
pop
jmp
push
inc
jno
push
mov
sti
xor
pop
mov
pop
mov
push
inc
leave
out
sbb
push
popa
nop
push
ds
gs
mov
cmp
dec
xor
pop
push
cltd
cltd
mov
pminsw
sub
push
shr
push
mov
cmp
std
cltd
mov
adc
add
into
test
jno
or
inc
inc
in
push
push
outsb
mov
mov
std
dec
pop
mov
inc
fs
and
repnz
add
fs
sarb
mov
dec
in
ss
pop
mov
cltd
rcll
inc
mov
repnz
mov
inc
subl
sub
fwait
sarl
fwait
insl
idiv
and
push
fwait
or
mov
aam
pop
add
dec
jo
or
cwtl
rcrb
pop
negb
jmp
inc
movb
pop
divb
sub
push
jmp
in
pusha
jge
aad
pop
mov
stos
mov
pushf
mov
arpl
int3
es
jmp
cmp
cwtl
andl
mov
inc
push
add
or
add
sbb
inc
dec
shll
jg
pop
pop
cmp
fs
xor
flds
mul
jmp
lcall
lds
mov
outsl
data16
rcrb
cmp
data16
cli
aad
out
or
in
sub
cmpsl
btc
sub
mov
gs
cmp
enter
jne
lahf
movb
xor
lock
test
jo
repnz
in
xlat
in
lcall
sbbl
or
scas
outsb
or
or
or
fcomi
dec
cli
mov
jns
shl
lahf
clc
ja
xchg
fsubrs
sbb
hlt
movsl
ss
movsb
cmp
push
mov
mov
shl
and
mov
push
xor
out
mov
push
lret
jmp
imul
imul
sbb
and
or
pushl
inc
cmpsl
xchg
lahf
repz
mov
fldl
mov
mov
lods
sbb
push
cmp
dec
sbb
mov
repz
mov
outsb
sub
mov
fcompl
push
xchg
fadd
mov
gs
pop
std
ljmp
mov
jo
pop
int
in
mov
inc
sbb
xchg
leave
pop
out
ja
arpl
lock
adc
xlat
cmp
cmp
in
lcall
std
mov
push
cmp
out
jecxz
fwait
or
xchg
xchg
nop
dec
sub
adc
lods
mov
mov
push
aas
cwtl
insb
sbb
leave
sahf
pop
push
mov
test
movsb
pop
fwait
push
jecxz
xchg
into
scas
lret
lock
addr16
addl
addr16
sarb
mov
xor
jae
mov
sbb
cvtps2pi
inc
jle
pop
sti
mov
jno
mov
int3
or
push
pop
mov
es
dec
push
and
push
sub
scas
jecxz
std
or
adcl
into
js
adc
inc
int
sbb
sub
es
cmpsl
insl
cli
cmp
fnstsw
jbe
push
sub
sub
loopne
mov
outsb
loopne
sbbl
jge
and
and
das
mov
push
mov
or
shrb
sbb
mov
lcall
loope
mov
pop
xchg
or
test
inc
scas
sub
pop
fidivrs
push
pop
enter
pop
imul
test
push
ss
xor
ja
mov
adc
sub
mov
mov
cmp
mov
or
push
jo
lds
inc
mov
addb
mov
cmpsl
inc
jmp
jl
in
sub
or
and
mov
xchg
jnp
jecxz
jecxz
scas
cwtl
jle
ljmp
xchg
ret
cmp
mov
addr16
jl,pt
call
sarl
dec
xor
mov
orl
xchg
xchg
xlat
stos
cmp
popf
pop
out
cmp
jae
movsl
mov
jecxz
loop
or
test
dec
mov
adc
push
js
or
incl
jge
jecxz
add
js
stos
jg
fs
stc
lea
adc
mov
out
mov
lea
sub
inc
into
cld
stc
fmull
and
repz
nop
xchg
cld
cmp
scas
loopne
cmp
repz
dec
and
xchg
out
pop
shrl
inc
mov
push
dec
fucom
lea
pushf
pop
inc
push
xchg
test
mov
arpl
lods
or
rcl
rolb
int
dec
call
mov
and
xor
add
xchg
fistl
xchg
jae
pop
jmp
loope
fs
clc
add
mov
push
fsubrl
sub
mov
inc
mov
mov
cmpsb
ret
sbb
mov
shufps
fiadds
sbb
subl
test
ret
ret
es
mov
fwait
loope
ret
loop
or
sahf
xchg
cli
fimuls
daa
pop
imul
loopne
popf
xor
push
fildll
outsb
adc
mov
lret
jg
cmpsb
sub
out
mov
imul
enter
push
js
fidivs
xor
add
dec
and
mov
cmpsb
adc
pushf
mov
mov
ret
mov
loop
sbb
pop
ljmp
sbb
jno
xor
pop
jnp
cmpsl
ret
into
or
xor
mov
lock
mov
mov
ds
or
loope
mov
adc
or
push
mov
repnz
pop
fsubs
sahf
mov
mov
xchg
sub
inc
push
mov
mov
cmpsl
inc
cli
push
jg
xchg
cmp
xor
push
jg
lahf
fwait
scas
push
hlt
repnz
sub
jb
aaa
xchg
sbb
fcmovnbe
inc
hlt
mov
mov
mov
adc
cld
cmp
fbstp
sub
bound
bnd
cmpsb
add
xor
mov
insl
dec
dec
jmp
jg
loope
call
mov
aam
lods
in
rcll
clc
cwtl
push
cmp
pop
int3
sub
cltd
arpl
mov
ror
jae
cmpsb
mov
mov
cmp
mov
stos
rorl
add
xor
stc
lahf
jo
mov
int3
cmp
outsb
push
jb
cwtl
bound
dec
pop
xlat
jns
jb
rcl
xchg
xchg
imul
xlat
mov
jb
loopne
or
and
mov
xor
sti
addr16
xor
sub
and
xor
fs
inc
fstpl
mov
lret
sbbb
lcall
repnz
push
sbbb
fistps
mov
inc
or
loope
fidivs
lods
lea
call
push
mov
or
and
ret
xchg
add
rclb
or
hlt
stos
and
stc
jmp
dec
incb
shrl
and
add
add
dec
sahf
xchg
icebp
add
andb
push
clc
cmp
out
out
out
aas
xchg
and
cmp
inc
fildll
push
repz
jp
jg
adc
push
jnp
mov
mov
dec
sbb
push
fs
dec
push
mov
in
scas
shrl
movsl
xor
and
clc
pop
push
mov
push
addr16
cwtl
and
out
mov
mov
mov
add
adc
xchg
ss
sub
adc
mov
pop
pop
xor
je
mov
iret
mov
fsubs
and
mov
inc
jle
mov
insl
mov
pop
fnstenv
sub
bound
sub
mov
mov
es
cld
sbb
and
std
push
sbb
roll
stos
dec
test
in
mov
jae
xor
sub
lret
lret
xorb
rcrl
stc
fsubr
xchg
nop
xlat
test
mov
jmp
adc
or
test
loope
sub
test
pop
xchg
lcall
testb
aad
adc
out
jno
js
add
pop
dec
add
mov
loope
dec
das
cmc
push
stc
outsb
shlb
sbb
decb
or
jnp
pop
jne
jp
jbe
lcall
pusha
cmovne
and
xchg
test
ret
dec
aad
or
dec
inc
cmp
mov
or
int3
das
std
ja
andb
add
insl
xor
icebp
sbb
call
dec
icebp
jnp
out
shll
ucomiss
shrl
sahf
clc
lret
xchg
movsb
repz
test
nop
fsubs
jle
sub
jle
es
iret
ret
lods
xor
mov
mov
cmp
loope
cmp
or
bound
insb
mov
rcrb
enter
mov
idivl
loopne
cli
jo
scas
add
push
jnp
in
xchg
fsts
adc
mov
sub
repnz
ljmp
pusha
es
adc
pop
or
clc
and
imul
mov
and
dec
in
xor
cmp
out
out
lret
xchg
imul
xchg
mov
shl
test
adc
imul
or
push
lods
movsl
sub
add
jl
cs
mov
out
add
push
jge
mov
call
xchg
or
popa
out
push
xorb
pop
adc
cmpsb
jle
mov
mov
xor
in
in
jecxz
sub
sbb
dec
push
xchg
lods
mov
hlt
popf
lret
push
xor
mov
fbstp
and
mov
pop
sub
int3
je
rol
das
mov
mov
outsb
fmul
sub
imul
aad
loope
inc
sti
mov
xchg
cli
cmc
xchg
cmc
aas
xchg
dec
cmp
push
sahf
mov
mov
fidivrl
insl
pop
sub
lock
loope
push
jbe
inc
xchg
in
in
mov
lea
fimull
jecxz
jle
xchg
js
pop
nop
jno
outsb
mov
enter
dec
push
pop
lcall
push
xchg
cmpb
mov
cs
pop
add
pop
sbb
popf
mov
jmp
sub
inc
mov
xchg
je
pop
enter
lock
aas
mov
jae
loope
add
push
sbb
mov
es
mov
fsts
pushf
jno,pt
cmp
sbb
add
jb
out
test
xchg
jl
fdivrl
shlb
outsb
mov
sahf
idivb
cwtl
shlb
in
movsl
pop
int3
iret
pop
adc
js
lock
add
push
out
xor
out
mov
mov
xlat
addb
adc
push
mov
dec
cmp
outsb
mov
pop
lds
test
jne
or
inc
add
int
jg
in
mov
mov
pop
dec
dec
add
scas
sub
or
es
push
dec
jle
adc
adc
jae
ljmp
popa
sbbb
dec
pop
inc
dec
jo
or
and
add
sbb
adc
mov
hlt
cmp
push
push
popa
jne
push
mov
sbb
mov
insb
and
shll
in
mov
jnp
out
mov
adc
ret
inc
push
add
inc
fsubs
shrl
jge
xchg
pop
clc
mov
stos
loope
xor
mov
gs
icebp
mov
out
out
or
loopne
sbb
mov
pop
or
xchg
imul
int
fistpl
pop
out
cmp
adc
stc
mov
insl
cs
repnz
cmp
es
mov
ljmp
fidivrl
inc
ret
push
push
sub
ss
lods
and
lock
loopne
out
mov
jmp
push
jecxz
mov
insl
fldcw
and
mov
stos
xchg
mov
pop
insl
mov
insb
jno
xor
mov
jo
mul
cmpsb
mov
jp
jae
repz
adc
or
adc
cmc
cmpsl
lods
out
repnz
icebp
xchg
sbb
lods
pop
rorl
test
add
ret
loopne
mov
push
jp
sbb
lods
pop
push
stos
hlt
in
out
jge
idivb
inc
divl
out
add
hlt
inc
add
mov
inc
dec
push
xor
divl
or
dec
lock
adc
mov
rcll
xchg
pop
test
push
xor
leave
lret
xchg
lock
adc
adc
cmp
cltd
mov
sar
ja
popa
jnp
shl
loop
dec
mov
and
inc
xor
lcall
and
scas
xchg
sub
mov
jbe
out
sbbb
push
ljmp
xchg
jmp
lahf
subl
cld
cmc
lret
push
das
lods
jne
out
insb
call
fsts
ficoms
cmp
loope
mov
adc
mov
fldenv
xor
jecxz
pop
mov
mov
movsb
mov
es
movsl
inc
lcall
or
shrb
int3
rclb
and
pushl
mov
fs
sub
js
xchg
outsl
adc
cmpsl
push
add
inc
enter
sub
movsb
xchg
mov
xor
and
int
stos
push
stos
push
cld
lods
push
push
inc
jp
sub
lret
repnz
fsts
imulb
mov
adc
int3
sub
iret
addr16
add
daa
insl
dec
js
scas
jbe
jae
mov
shrl
in
jl
das
icebp
pop
sbb
int
or
push
mov
pop
in
lret
outsb
lods
adc
cmpsb
stc
push
pushf
fs
jmp
adc
mov
mov
repz
inc
aad
sti
pop
add
push
inc
xchg
popa
cmp
dec
xchg
xchg
fldl
in
push
inc
dec
mov
es
out
inc
fidivrs
xchg
out
loopne
sbb
sbb
xchg
loop
ret
ficoms
je
sahf
mov
lahf
and
cmpb
adc
cmp
stos
inc
cwtl
dec
std
and
rorl
lods
dec
adc
push
push
lret
mov
jl
xchg
mov
lods
sub
fldlg2
stos
jl
fwait
lds
jnp
add
mov
loopne
push
fs
out
jl
mov
out
test
out
subl
aad
ljmp
shlb
test
cmp
or
int
pop
mov
mov
jp
stc
xor
adc
lds
ja
push
std
movsb
pop
test
mov
outsb
ret
loope
rclb
pushf
jle,pt
aad
and
fstps
mov
shrb
sub
adc
add
lret
mov
cmp
data16
jns
sub
inc
cmp
mov
rcl
and
pop
mov
testl
sbb
pop
add
pop
xor
cmpb
ret
repnz
adc
pushf
xor
xchg
movsl
adc
adc
xchg
in
cmc
lret
pushf
les
es
js
sbb
pop
or
xor
sub
or
gs
sub
mov
xchg
lahf
and
mov
std
notl
fs
sti
outsl
or
aam
inc
mov
jbe
ret
jbe
sbb
mov
aam
push
add
outsl
lahf
sub
jmp
jb
insb
fidivrl
adc
sbbb
orb
sbb
ljmp
cmc
ret
popf
clc
and
aam
jae
cmp
dec
dec
xlat
mov
xorb
adc
dec
jg
inc
push
dec
adc
fbld
aam
mov
flds
xchg
test
inc
mov
rolb
adc
mov
dec
mov
test
movb
dec
xchg
ret
pusha
out
ret
adc
js
mov
mov
sahf
cmpb
xor
pop
inc
stc
and
test
sar
push
jmp
mov
call
stos
cmp
xor
shlb
sub
ds
enter
lahf
sbb
shll
decl
xchg
and
pop
sarb
stos
push
push
or
mov
insl
rorb
cmp
mov
push
lods
sbb
push
push
in
flds
cli
aad
aaa
pop
out
sub
push
inc
je
fmul
int
xchg
sti
inc
cltd
sub
adc
repnz
orl
xor
push
sbb
mov
ds
mov
or
cmpsl
clc
andl
js
adc
push
dec
mov
and
call
ss
jle
fsubrs
mov
and
push
jb
mov
fisubs
cld
les
adc
push
mov
pop
push
add
pop
cmpsl
loope
sub
pop
les
nop
fistpll
rcll
push
xchg
sub
clc
in
pop
push
add
jl
in
adc
or
xlat
std
or
mov
adcb
cmp
jns
les
cmp
dec
jo
dec
mov
rclb
icebp
lods
bound
push
xor
pop
dec
adcb
fs
shl
dec
add
mov
mov
in
add
fcmovb
cmpsl
gs
daa
push
dec
mov
push
lret
ficomps
ljmp
fsubp
xlat
mov
test
xchg
lahf
dec
inc
dec
dec
jmp
cmp
pop
shrb
ror
and
shlb
sbb
cwtl
xorl
mov
ss
imul
cltd
push
daa
roll
add
test
xchg
divl
iretw
cld
addb
xor
test
xorb
mov
mov
xor
cld
gs
cltd
sbb
jne
enter
outsb
js
pop
pop
call
sbb
jns
test
cmp
or
insl
jnp
fmull
pusha
lods
inc
sbb
jg
jb
ss
roll
jo
and
addr16
sbb
inc
sub
lcall
push
in
shll
mov
scas
adc
ret
inc
lret
out
inc
lds
in
leave
mov
mov
sub
push
arpl
out
int3
dec
xchg
fiadds
test
lock
fsubl
mov
adc
fiadds
xor
and
xchg
andl
xchg
pop
es
inc
jnp
push
adc
xor
sarb
push
sbb
int
mov
inc
pop
adc
and
jno
adc
cld
jbe
pusha
pop
cld
adc
cmc
enter
or
daa
nop
in
in
sbb
push
aad
sub
or
int
jmp
lods
imul
inc
xchg
mov
push
xor
data16
test
icebp
xchg
pop
fxch
lret
adc
cs
add
mov
data16
sub
mov
and
cmpsb
outsb
push
sbb
add
fimuls
sub
dec
pop
test
movsl
test
push
fcomps
or
push
mov
xor
aaa
xchg
adc
jge
and
or
push
push
and
stos
out
outsb
aas
clc
or
mov
push
add
adc
sbb
ficompl
xchg
dec
cld
aam
cmpsb
imul
add
jae
fnclex
xchg
jmp
pop
cmpsl
data16
idivb
xor
add
cld
aam
sbb
filds
pusha
les
adc
iret
sti
xchg
add
enter
ret
xchg
xor
cld
dec
ljmp
jle
inc
inc
std
ror
and
mov
shrb
shll
mov
push
add
push
and
dec
lahf
cli
movsl
xchg
inc
xor
or
pop
nop
cmp
outsl
push
fmulp
ss
mov
mov
cmpsb
out
push
push
outsb
fmull
inc
scas
dec
adc
loop
mov
adc
mov
lods
ss
dec
or
adc
ljmp
ficoml
fstpt
fabs
push
testb
xchg
sar
inc
pop
sbb
insb
lds
into
xchg
in
decb
xor
mov
stc
jb
mov
leave
idivb
jecxz
or
dec
dec
scas
cwtl
mov
fisubrs
outsb
loopne
jnp
cmpsl
cmp
and
aad
mov
cwtl
out
jl
or
fldt
test
mov
pop
jne
test
jne
mov
push
nop
sahf
inc
vpmovmskb
pusha
decb
xor
sub
xchg
dec
add
bound
inc
ds
cmp
scas
outsb
inc
popf
dec
jbe
lods
jp
or
stc
xchg
mov
das
mov
pop
pop
loop
mov
cli
ljmp
aad
cmpsb
pop
push
xchg
cmp
lods
jle
loope
sarl
sub
fwait
jb
push
arpl
mov
insl
outsl
dec
sub
sbb
mov
lret
outsl
sbb
push
or
push
sets
sub
push
xchg
andps
not
push
dec
pop
or
outsb
mov
inc
push
mov
and
push
cmp
push
push
and
pop
add
mov
xchg
mov
xchg
stos
scas
inc
mov
jecxz
jge
and
add
cmpsb
cmpsb
mov
dec
xchg
add
test
mov
jmp
xlat
jne
pushf
repz
jg
les
in
and
outsl
idivb
push
aaa
jae
mov
in
mov
xchg
mov
push
mov
cmp
fwait
stos
shl
sbb
rol
ljmp
jo
or
mov
arpl
adc
mov
cs
rclb
clc
sub
fidivs
adc
sti
and
xchg
pop
fmull
xchg
mov
imul
push
and
faddl
out
jns
sub
pop
dec
cmp
pop
sti
fidivrl
jae
push
sub
mov
mov
mov
and
lcall
cmp
fcmovne
inc
loop
add
insl
inc
stos
and
push
lods
sub
xchg
mov
mov
bound
test
movsl
movsl
stos
jbe
jp
xor
sub
or
mov
sub
movsl
fmull
dec
xor
popa
pop
inc
mov
std
imul
sub
loope
and
fchs
dec
push
pop
mov
fs
xchg
in
stos
adc
mov
mov
gs
fadds
lcall
incb
daa
rol
dec
data16
pop
aaa
and
push
mov
push
cmp
jg
mov
pushf
mov
aaa
lock
or
push
lcall
or
scas
mov
mov
cmpb
mov
in
push
orl
pop
add
ljmp
lret
sti
movl
add
std
lds
jge
jl
and
mov
mov
addl
pushf
test
xchg
addr16
out
es
push
js
mov
adc
push
test
sbb
inc
movsb
push
ja
or
lock
dec
clc
pop
cld
cmpb
mov
add
jno
xlat
cmp
sub
xchg
jo
push
dec
aas
push
mov
jp
repz
dec
sub
in
out
cmp
dec
jns
repnz
push
push
in
imul
mov
out
jmp
je
sbb
dec
jp
icebp
xchg
xchg
lcall
in
push
in
jp
xor
lods
enter
mov
jne
fcmove
and
push
loop
ss
decb
aas
ja
cmp
sbb
fistpll
cmp
daa
and
rorl
aaa
in
sub
movb
jp
in
inc
fwait
popf
rorb
push
xor
sub
pop
xchg
mov
dec
mov
sub
lock
pop
lods
imul
test
pop
insl
mov
add
xchg
mov
ret
sub
repz
outsb
xchg
lock
jecxz
xor
and
xor
add
sub
push
cmp
lds
jecxz
movsb
cltd
jmp
shrb
loope
jne
test
cmp
cmp
inc
fldl
iret
xorl
cwtl
or
and
fs
in
xor
in
insb
test
mov
inc
filds
fsubrp
xor
arpl
mov
cltd
je
inc
mov
ljmp
negb
mov
push
scas
test
insl
les
mov
or
lds
jge
test
mov
out
lea
in
loopne
in
shl
jle
into
push
shrl
cwtl
cmp
sbb
or
rolb
insw
cmpsb
ljmp
mov
and
xor
fistps
and
daa
bound
dec
mov
stc
clc
in
cmp
inc
jl
mov
mov
lea
mov
jae
popf
or
cmp
in
adc
adc
xlat
lods
nop
xchg
pop
pop
in
adc
inc
lcall
xor
sub
inc
jmp
cmpsb
pop
dec
test
xchg
add
mov
in
cmc
jbe
cli
mov
std
outsb
mov
xor
loop
jp
sbb
or
mov
pusha
pop
jle
mov
and
xor
xor
jl
pusha
lcall
jmp
mov
jg
arpl
loopne
push
std
mov
xorb
xor
shlb
outsb
jne
add
sub
xchg
mov
push
dec
iret
jecxz
jno
adc
dec
mov
xchg
xchg
xchg
add
das
adc
filds
pop
clc
xor
cmc
lds
push
or
adcl
jle
or
cmp
mov
cmp
pop
push
js
and
add
add
out
mulb
mov
mov
into
sub
ds
mov
push
mov
dec
mov
xchg
xor
mov
mov
add
push
pop
test
aam
jle
test
mov
int
data16
test
jne
cwtl
enter
lcall
out
or
out
or
dec
xchg
xchg
fldt
jae
jg
stos
jae
jbe
enter
les
or
mov
pusha
nop
pop
cmp
push
add
sub
mov
sbbb
add
jne
add
outsl
xchg
sub
push
jns
lods
je
push
pop
outsl
rcrb
ja
ret
fildll
xchg
lcall
cwtl
mov
push
jbe
pushl
ja
nop
adc
je
pop
fistps
dec
push
ljmp
xor
iret
data16
pop
mov
aaa
aas
push
sub
mov
sahf
mov
sbb
jne
in
xchg
sbb
push
idivb
mov
dec
add
push
incl
dec
fs
clc
mov
xor
cmp
xlat
fnstenv
lret
lcall
sub
ljmp
push
adc
mov
inc
lret
insl
push
enter
sbb
sbb
sbb
push
inc
adc
pop
and
mov
clc
sub
aas
std
loopne
cmp
push
inc
push
insb
mov
in
mov
fs
mov
out
orl
loope
out
lahf
fldl
sub
cmp
cltd
outsb
addr16
sahf
lret
scas
fildll
dec
cwtl
xor
or
push
mov
pop
cwtl
sub
xchg
sahf
and
pushf
das
and
test
xor
mov
imul
xor
fs
or
mov
js
pop
adc
dec
das
xor
mov
pop
pop
fistps
and
repnz
or
icebp
mov
cmp
aas
mov
xchg
xor
mov
xchg
mov
jns
cmp
xor
push
leave
add
lcall
inc
dec
mov
mov
pop
filds
popf
gs
jnp
js
jg
xor
push
push
adc
jge
push
daa
cmpsb
mov
jp
cmpsl
pop
das
aad
ss
jbe
repnz
push
rcll
daa
mov
mov
out
inc
jo
arpl
sti
push
out
mov
mov
add
lcall
nop
mov
jnp
inc
rol
xchg
lret
data16
and
cmpsl
out
pushf
push
add
or
and
outsl
inc
orb
leave
push
xchg
jp
cltd
pop
add
xchg
xlat
mov
jle
jle
mov
adc
into
cld
out
xchg
sub
jg
pop
into
test
inc
dec
test
cld
stos
jl
xlat
jbe
shlb
dec
cli
sub
pop
sbb
adc
sub
aad
test
fildll
sub
cs
dec
mov
movsb
xchg
xlat
pop
out
lahf
test
stos
jl
lods
ja
and
push
scas
cmp
cmp
add
inc
daa
inc
cmc
dec
add
sti
cld
ret
repnz
xchg
aam
shrl
imul
cld
cmpsl
mov
cmpsl
lods
mov
movsl
cwtl
jmp
fisttpll
les
testl
jnp
xor
push
pop
lahf
sbb
jbe
ret
popa
lods
imul
pop
stos
pop
lahf
jno
les
jg
insl
push
xchg
xor
mov
mov
dec
adc
fdivl
or
jecxz
adc
out
pop
push
push
sub
pop
cmp
push
cli
cltd
clc
sub
push
xchg
insl
jle
sub
push
data16
jb
jecxz
and
mov
leave
jge
scas
es
mov
test
icebp
shl
popa
insl
and
sub
stc
inc
int
in
stos
inc
jbe
push
xchg
shlb
jle
sbb
push
test
mov
pop
jo
sub
jl
fstl
mov
cmp
add
add
pop
das
dec
xchg
cmpsb
stc
pop
mov
push
xor
sub
popa
inc
mov
test
gs
xchg
xlat
push
ror
dec
notb
xor
pop
call
fcmove
add
mov
lods
insb
fcomps
xchg
mov
push
ds
testb
cli
or
ljmp
cmp
mov
adc
dec
and
mov
movsl
outsl
loopne
push
rcl
insl
inc
jb
sbb
mov
arpl
jne
jg
push
and
cmp
xchg
js
inc
jmp
clc
jbe
je
imul
rolb
loope
sub
ds
dec
out
dec
mov
mov
enter
sub
sbbl
xchg
out
or
test
jnp
mov
popa
adc
lea
mov
ror
outsb
push
mov
in
notb
push
or
popa
mov
jo
push
push
and
loope
mov
cmpsl
xor
les
mov
pop
xchg
xchg
add
pushf
and
decl
mov
mov
cmp
jns
mov
popf
adc
add
call
out
and
in
or
pop
mov
sbb
xor
or
aam
jle
in
out
enter
in
in
mov
xchg
jo
inc
les
dec
rcll
cmp
mov
jb
out
lds
jne
stos
inc
push
lret
inc
push
jbe
push
sbb
jb
dec
adc
cmc
pop
rcrl
out
cmp
nop
decb
icebp
sub
xchg
pop
aad
jae
cmp
mov
lcall
ret
pop
mov
dec
mov
adc
mov
outsb
cmp
leave
stc
sub
mov
inc
outsl
rol
fimuls
lea
nop
and
lock
adc
xor
cmp
xor
es
jnp
pushf
outsl
lret
push
push
subb
lea
test
imul
bound
imul
and
dec
test
leave
les
add
add
add
push
jle
insl
pop
les
in
xchg
mov
aad
push
mov
repnz
cmc
sbb
and
sbb
fldl2t
or
adc
mov
jae
jecxz
sbb
sar
inc
pop
pop
scas
popa
jge
mov
lcall
fisubrs
ret
std
adc
jne
inc
aaa
and
inc
dec
sub
subb
in
push
lds
inc
inc
arpl
int3
jmp
out
arpl
imul
mov
into
sub
ss
xchg
dec
lahf
loop
mov
sti
xchg
lock
pop
mov
ss
add
sbb
mov
cmp
inc
and
dec
push
mov
fwait
pop
sub
repnz
mov
ljmp
cmc
jo
and
or
mov
inc
stos
add
mov
sub
or
add
mov
jg
add
test
pop
cmc
push
adc
hlt
mov
leave
dec
faddl
jmp
repnz
mov
pop
push
outsb
jge
sub
adc
or
aas
mov
enter
pop
and
and
push
arpl
decl
je
xchg
dec
out
jnp
mov
sub
js
pusha
jb
sbb
push
cwtl
repnz
mov
sahf
subl
jle
cmpsl
inc
cmp
sbb
insl
fdivp
pop
mov
ret
sbb
out
mov
and
outsl
mov
ret
or
pop
add
mov
arpl
ds
lock
add
orb
in
das
xchg
fucomp
jne
out
test
jns
sahf
dec
addr16
addr16
loopne
cs
inc
or
cmp
sbb
xchg
popl
cmp
mov
push
sub
xchg
insl
or
repz
ja
cwtl
and
xor
or
dec
enter
push
sub
ss
fs
mov
stos
xor
sub
ljmp
ds
jmp
push
cmp
hlt
aam
std
lret
in
inc
xor
popf
push
push
and
inc
insl
stos
xchg
inc
test
fstpt
mov
cmp
or
mov
nop
dec
and
sti
mov
js
and
push
cmp
mov
cmp
jns
jl
push
icebp
dec
mov
mov
gs
jns
loopne
mov
push
xor
or
hlt
lods
inc
mov
xchg
out
ffreep
xchg
xchg
repnz
jns
movsl
and
jnp
push
dec
pushf
iret
dec
movsb
mov
or
outsl
test
popf
cmpsb
push
jne
push
pop
lock
aas
or
mov
cmp
dec
cmpb
sbb
dec
cmp
test
ret
jns
jp
leave
notb
rorb
cmp
sub
stos
cs
popa
scas
test
push
jnp
out
and
push
sub
imul
mov
rorb
into
or
pop
push
bound
out
cltd
aaa
xor
in
setnp
or
xchg
inc
ret
out
xchg
push
repnz
adc
repnz
cmp
jecxz
lcall
movsb
push
in
loope
jno
rorl
push
cmp
mov
mov
push
mov
inc
mov
push
in
mov
inc
mov
into
daa
jne,pt
enter
cmp
pop
or
pushf
std
or
inc
mov
les
or
jo
xor
mov
cmp
xchg
loopne
in
mov
jp
xlat
inc
xchg
mov
mov
cld
xorl
push
pushf
jo
mov
shrb
dec
cld
cmp
inc
xor
mov
fldl
lcall
out
pop
xchg
je
cmp
movq
adcb
movsl
inc
lret
js
addb
xchg
or
subb
sarb
jae
out
aad
dec
add
fwait
int3
add
xor
xor
jo
icebp
ds
add
jb
shll
jecxz
insb
mov
mov
add
jb
mov
aas
push
xchg
sbb
ret
push
mov
push
imul
icebp
or
std
sarl
iret
cmp
clc
mov
sbb
shll
sbb
int
movsl
xor
pop
orb
fdivrl
push
addl
scas
stos
and
mov
ret
rorb
outsb
mov
push
or
andl
ja
push
adc
adc
jno
xor
xor
popf
xchg
shll
clc
add
in
mov
add
mov
xchg
xorl
stc
dec
das
and
xchg
loopne
leave
ds
dec
pop
inc
push
xchg
shl
fmuls
or
loope
and
or
cld
sub
xchg
out
testl
insb
jno
sub
mov
lods
fldt
jecxz
int3
and
iret
cmp
in
mov
mov
cmp
cmpsb
push
jl
push
cmp
mov
cli
cmp
and
xchg
lods
xchg
mov
aaa
ljmp
mov
push
outsl
dec
imul
lds
add
sbb
aam
sbb
xchg
xchg
dec
addl
xlat
xlat
dec
popf
fidivrs
lea
or
jg
xchg
push
xorl
and
jp
iret
mov
out
daa
mov
cmp
pop
js
shrl
pop
pop
xchg
mov
aam
aas
or
xor
push
xor
jae,pn
shlb
pushf
in
xchg
mov
enter
mov
mov
mov
ficoms
mov
mov
rcll
and
mov
mov
inc
loope
dec
enter
jmp
mov
out
das
jge
cmp
shlb
cmc
jge
inc
leave
cs
inc
and
jle
test
xor
pop
lahf
loop
push
ret
enter
jle
mov
xor
pop
dec
sub
xlat
cmp
lods
mov
ja
jno
sbb
lods
mov
sar
mov
repz
add
mov
inc
add
nop
mov
lock
mov
sbb
inc
icebp
pop
push
les
sub
push
ficomps
cld
pushf
lcall
pop
jmp
icebp
dec
test
pop
mov
mov
jno
dec
push
mov
cmp
lods
jns
lods
lret
jge
aam
in
stos
je
push
pop
inc
mov
insb
in
scas
inc
add
outsb
pop
pop
repnz
sbb
push
negl
dec
lret
aaa
dec
mov
jge
data16
imull
insl
arpl
cmp
or
pop
push
or
xchg
xchg
mov
mov
rcrl
jmp
movsl
insb
xchg
fs
xor
loop
and
rcl
cmp
inc
imul
xor
aaa
fucomp
js
fistpl
outsb
xchg
enter
lahf
repnz
cmpsb
jne
cmp
jae
lahf
adc
test
pop
iret
add
hlt
xor
insl
mov
repnz
das
push
cmp
adc
xlat
int3
adc
xor
ss
xchg
insb
push
xchg
mov
inc
sub
test
pop
fnstcw
je
js,pt
push
mov
test
fildl
jb
sahf
xor
stos
adc
mov
test
ja
mov
fisubrs
in
popa
data16
imul
pop
sbb
gs
fbld
rorl
jp
push
leave
lret
gs
scas
es
xor
add
mov
rcrb
es
popa
or
inc
xchg
mov
jge
shll
cmp
add
or
cmp
mov
nop
cmp
add
fadds
movsl
cmp
push
test
jbe
mov
add
mov
aas
shl
mov
icebp
fisttpl
cmp
xchg
dec
test
xor
imull
jo
in
int3
ja
mov
hlt
or
pop
sub
push
xchg
xor
push
jno
cmpsl
cmp
lahf
jp
jne
xor
dec
mov
xor
mov
stos
stos
jecxz
aaa
jle
je
jb
js
add
mov
ss
mov
adc
push
sub
and
arpl
lods
sbb
popf
cld
iret
push
insl
xchg
mov
add
push
adc
les
scas
aad
sbbl
push
mov
pop
fnstsw
in
lret
cld
mov
cmpsl
or
test
pop
xchg
aas
enter
int3
repnz
or
outsb
mov
fdivrs
xchg
movsl
lcall
outsb
or
mov
rclb
xor
mov
jnp
iret
rolb
push
mov
movsb
pop
xchg
add
cmp
inc
push
push
js
mov
cmpl
mov
sbbl
or
cmpsl
inc
mov
sahf
inc
jl
xchg
dec
mov
insb
or
sbb
push
dec
ja
insb
ret
jbe
cmpl
cmp
rol
adc
xor
inc
rcrb
jb
dec
and
jne
fnsave
aad
push
mov
divb
jmp
test
sub
in
xchg
mov
jb
pusha
mov
fcmovne
or
test
nop
mov
mov
stos
lock
mov
push
mov
or
insb
test
popf
out
sbb
test
and
push
jg
or
push
inc
out
popf
loop
inc
aaa
lods
push
xchg
movsl
and
or
jmp
mov
dec
loop
outsb
loop
out
xchg
scas
rcll
mov
jecxz
ja,pt
xchg
inc
sar
movsl
cmp
sahf
fcom
push
sahf
mov
push
jno
movsl
jnp
pop
dec
xlat
repnz
cmp
adc
adc
mov
pushf
roll
inc
jae
add
cwtl
hlt
hlt
sbb
int3
push
dec
xlat
push
push
inc
adc
arpl
aaa
sub
mov
stos
les
jno
filds
dec
loope
or
lods
adc
loope
xor
push
fwait
sahf
out
stos
sti
mov
jle
xchg
lock
sahf
popf
ficomps
dec
mov
in
pop
popf
push
pop
mov
adc
dec
sbb
sub
mov
jmp
mov
cltd
icebp
xchg
pop
push
jnp
push
jp
jge
sti
dec
cmc
xchg
push
xor
pusha
pusha
adc
push
test
repnz
mov
repz
cli
mov
decl
inc
cltd
sarb
jg
sub
dec
sbb
mov
xor
data16
push
roll
push
popf
push
xchg
sub
es
xor
inc
iret
ret
fisttpll
loope
inc
dec
adc
and
repnz
xor
frstor
clc
mov
cmp
jno
and
xchg
jp
fwait
push
inc
cli
mov
movsl
add
jmp
mov
arpl
fs
rol
js
test
mov
xchg
movb
insl
cmp
movzbl
mov
sarb
cmp
scas
push
add
in
and
or
inc
addr16
cld
mov
jnp
mov
scas
jne
jo
xchg
std
lahf
ljmp
or
mov
or
mov
in
push
and
cld
xlat
or
xorb
push
sub
out
jnp
mov
sbbl
lcall
test
ret
hlt
xor
xchg
mov
ja
nop
in
or
cmp
movsb
xor
inc
repz
dec
aas
xchg
scas
push
xchg
jae
addl
stos
jmp
jbe
ja
loopne
fwait
std
fwait
jg
mov
mov
mov
repz
and
cmp
mov
adc
inc
or
rorl
out
jbe
cmp
negb
xlat
lcall
sbb
cmpsl
push
aas
ss
insl
mov
push
aas
sub
and
cmp
mov
cs
imul
ss
daa
pop
dec
mov
scas
push
add
mov
push
repnz
lret
xchg
and
cwtl
cs
xor
ljmp
js
sti
call
xchg
lods
les
mov
xchg
orb
int3
in
push
outsb
lahf
sbb
inc
aas
int
ja
popa
repnz
mov
lahf
mov
mov
adc
daa
dec
orb
loopne
mov
insl
pop
add
fs
addl
mov
fs
call
xchg
pushf
adc
lds
dec
mov
sbb
fisttpll
pop
inc
jno
xchg
into
jge
imul
adc
add
mov
or
movsb
movl
insb
adc
out
aaa
xorl
lret
inc
mov
mov
jecxz
aad
and
clc
mov
sub
lret
cmpsl
push
insb
bound
pusha
dec
cmp
movsb
std
loop
mov
incl
scas
fnstcw
les
mov
call
cmpsl
pop
cmp
push
call
cmpsb
or
loopne
cmc
and
xor
push
cmp
cmp
repz
dec
fbstp
cwtl
aad
inc
sarl
ds
enter
fs
mov
mov
mov
arpl
lea
fnstcw
dec
fisubs
hlt
shll
pusha
inc
outsl
cmp
je
cltd
bound
xor
inc
mull
ja
mov
cs
sar
mov
push
add
push
mov
xchg
fiaddl
inc
mov
jl
lds
push
dec
cmpsb
mov
fs
dec
mov
inc
imul
cmp
add
mov
sti
int
aad
popfw
rcl
pop
je
aas
dec
and
scas
lgs
lret
inc
mov
push
sub
jae
cmpsb
sub
and
xor
ljmp
roll
and
adc
lods
into
pop
and
mov
outsl
shrb
ret
mov
push
sbb
push
jno
cmpsl
jecxz
push
mov
insl
bound
cmpsl
sbb
lea
mov
test
sub
sbb
mov
std
cmp
gs
pop
xchg
sti
inc
inc
gs
sub
xor
or
roll
sbb
iret
stc
jae
shll
pop
rcrb
push
sub
add
dec
lfs
insb
das
xchg
sahf
in
jb
lcall
xchg
or
inc
jecxz
loopne
jae
push
mov
xchg
pop
mov
mov
push
adc
add
out
hlt
cmp
ret
addr16
dec
inc
cmp
push
ret
add
xor
xchg
iret
dec
out
daa
pop
sub
and
add
ret
lods
fs
sub
jmp
outsl
or
lret
push
sbb
mov
xor
ret
and
push
jne
loop
jno
push
lods
xchg
sub
cmp
rorl
mov
dec
mov
int3
cmpsb
add
push
cli
or
jo
addr16
icebp
and
jmp
daa
mov
jne
rcrl
inc
roll
mov
in
mov
add
mov
inc
stos
arpl
inc
rcl
int
and
mov
sbb
push
das
dec
int3
addr16
stos
roll
hlt
daa
jns
sbb
test
push
lods
dec
nop
adc
mov
jnp
mov
add
orl
mov
cmp
mov
jbe
sbb
rcrl
push
clc
test
das
cmp
mov
stos
lret
shrb
sub
xchg
shlb
les
in
mov
jns
std
and
and
stos
jb
jmp
loop
sub
add
fnsave
sbb
out
movsl
mov
pop
jecxz
loopne
out
add
add
jbe
jb
push
into
shlb
pop
mov
leave
dec
xchg
adc
cmp
jnp
loope
sub
cmp
aad
inc
sbb
cli
jno
jnp
shrl
xchg
loopne
je
inc
jbe
sahf
jb
push
push
nop
xor
stos
je
into
jmp
es
rclw
xor
pop
mov
jge
ja
mov
dec
les
arpl
out
xchg
and
or
in
or
repz
jns
dec
cmp
mov
ficoml
mov
xlat
mov
sub
mov
jbe
jle
xchg
sbb
jmp
mov
pop
add
ret
mov
mov
push
cltd
leave
stc
and
cmp
inc
repnz
mov
in
fsts
jno
mov
cmp
lcall
mov
jae
pop
xchg
or
or
loop
pusha
mov
aad
sarb
adc
mov
dec
adc
adc
push
add
push
mov
nop
adc
je
add
adc
cmp
mov
in
rcrl
cs
int
cld
je
fldt
jge
ja
enter
int
push
pop
jmp
mov
mov
sbb
test
js
jmp
dec
mov
xor
dec
inc
incl
sub
mov
and
jne
xor
push
fdivr
push
mov
lret
outsl
fsubl
lret
insl
testl
mov
imul
inc
sub
pusha
pusha
shll
push
inc
cld
clc
xchg
in
ret
jmp
mov
mov
div
div
test
stos
jnp
sub
enter
push
add
scas
leave
dec
popf
cmp
jo
sti
jecxz
aad
dec
lcall
inc
push
dec
sbb
or
pop
jg
xchg
sub
sahf
inc
ja
shl
and
dec
cmp
jb
inc
enter
and
mov
das
dec
aas
in
and
aas
adc
icebp
neg
push
push
inc
leave
dec
mov
scas
xchg
int
test
pop
or
into
push
loop
pop
test
in
ret
inc
loope
jnp
xchg
cmp
ljmp
sub
test
jo
mov
lea
in
das
pop
cmp
fwait
pusha
add
testl
xchg
jbe
mov
inc
or
jge
notb
dec
fisubs
testl
je
jb
int3
add
jnp
movsl
mov
in
dec
sarb
add
inc
dec
mov
xchg
test
cmp
or
sbb
or
call
mov
dec
cmc
stos
and
cmp
xor
inc
lds
mov
out
add
in
int3
and
jb
out
movsl
pop
xchg
pop
in
add
call
cld
mov
mov
cmp
imul
push
cmpsl
jmp
movl
das
mov
ret
or
mov
fcoml
call
sbb
push
daa
jle
push
mov
dec
sti
jecxz
adcl
into
imul
imul
lret
ret
into
cmpsl
sti
mov
xchg
jns
dec
xchg
shl
shlb
ja
rorl
mov
jnp
ljmp
ret
insl
inc
data16
rclb
and
test
push
arpl
push
movsl
inc
aas
jae
xchg
dec
cmpsl
adc
push
fiadds
adc
loop
jbe
cmc
cli
ja
xor
push
mov
out
repnz
scas
mov
mov
and
out
dec
in
les
pop
xorb
loope
js
aam
and
ret
fs
rorb
mov
add
mov
mov
or
sbb
xor
jns
mov
lea
xchg
test
bound
lret
stos
push
dec
cmc
sbb
xor
cld
jecxz
xchg
sbb
inc
dec
adc
mov
or
cltd
bound
dec
xchg
idivl
and
pop
in
mov
cmp
fdivr
stos
pop
jno
in
xlat
insb
push
mov
sub
in
loope
dec
mov
add
push
push
jae
adc
and
addr16
sub
sbb
aas
cmp
add
shl
xor
xorl
stos
icebp
movsb
aad
or
shr
push
lahf
jmp
test
int
aad
movsb
xchg
in
push
hlt
arpl
lcall
mov
in
lods
dec
lds
loop
ret
mov
int
dec
inc
push
daa
loopne
ret
adc
xchg
and
add
and
fisubrs
sbb
ret
sbb
imul
pop
push
and
jmp
push
mov
mov
xor
jo
pop
sbb
stc
loope
add
push
and
loop
in
sarl
into
idivb
in
push
pushf
jnp
ret
dec
inc
push
in
test
inc
stc
cli
rolb
adc
xchg
arpl
test
mov
fstpl
hlt
jo
mov
cmpsb
movsl
and
inc
into
and
jb
ret
add
lds
leave
in
inc
ror
xchg
shll
loopew
imul
mov
adc
sahf
arpl
mov
mov
nop
cltd
jb
lahf
scas
leave
jmp
fnsave
add
outsl
fisubrs
push
mov
mov
iret
aam
ljmp
mulw
jle
pop
loope
sub
rorl
lods
cmp
pop
shrb
jne
jae
add
inc
test
cmp
xlat
sub
call
push
push
fcmovne
pop
mov
push
and
inc
mov
sahf
and
cmp
or
push
mov
lods
imul
imul
add
mov
popa
sub
and
xchg
push
push
jmp
stc
xchg
hlt
clc
jle
out
or
and
fucomp
mov
sub
movl
push
aas
xor
mov
sbb
movsb
mov
jecxz
jno
mov
adc
lcall
fs
mov
xchg
scas
in
test
add
cmp
cs
and
sbb
mov
bnd
sbb
mov
int3
in
push
cmpl
inc
cmpsb
sub
xchg
lods
outsb
repnz
cmpsb
in
mov
jl
or
xchg
dec
fwait
nop
xchg
imul
inc
inc
cld
leave
repz
fldt
pushf
js
add
or
sbb
pop
pop
pushf
push
inc
pop
add
sar
stc
popa
in
pop
mov
push
dec
lock
icebp
mov
cld
and
scas
dec
or
mov
into
arpl
inc
sub
imul
xchg
addb
mov
aam
dec
xor
test
or
sbb
ljmp
and
loop
test
ds
push
jge
push
bound
mov
lods
push
xor
and
mov
std
nop
mov
movl
jge
mov
fmull
scas
fsubrl
incl
push
das
dec
xchg
fisubs
inc
lret
or
out
add
lds
lret
dec
ja
dec
sarb
out
setns
cmp
xor
sbb
int
test
fst
daa
lock
lods
jl
arpl
aaa
scas
xor
les
aad
inc
fsubrl
lods
or
cmpsb
jmp
xlat
cmp
adc
rorl
lahf
jg
and
pop
insl
iret
out
xchg
xchg
iret
mov
add
out
cltd
jmp
in
or
stos
jmp
stos
jp
int3
cld
mov
mov
lods
adc
int
inc
dec
mov
dec
aas
xor
test
adc
jg
lahf
sub
int3
jnp
pop
cmp
cli
icebp
push
xor
dec
pop
xor
fists
push
nop
lcall
popa
es
clc
lea
jmp
and
ljmp
pop
lret
pop
in
push
int
jno
mov
rcr
hlt
ficoml
inc
pop
push
jno
shlb
sbb
pushl
es
dec
stos
lods
xchg
mov
and
and
mov
into
fadds
push
arpl
pop
adc
stc
dec
sub
sbb
inc
jo
scas
fnsave
sbb
jp
in
pop
jmp
inc
inc
adc
push
xor
xor
in
push
or
shrl
sti
or
repnz
xchg
jmp
lahf
lcall
dec
xor
pop
scas
lds
sbb
fnsave
popf
jecxz
lock
lahf
lock
inc
pushf
push
ljmp
sbb
push
call
and
xchg
xor
scas
sub
icebp
repnz
mov
mov
hlt
xchg
mov
mov
push
out
les
mov
adc
and
pop
mov
fildll
inc
ja
addr16
dec
in
movlps
cmp
xor
cmc
dec
nop
fs
aaa
or
out
mull
lods
stc
push
aam
lret
fidivrs
pop
mov
rep
in
out
inc
cmp
cwtl
cltd
add
mov
pusha
pusha
shlb
and
or
fwait
addr16
mov
inc
push
mov
rolb
mov
outsl
dec
scas
mov
inc
or
jne
aad
ror
mov
fcompl
daa
cmp
je
stc
or
xadd
xchg
push
xor
shrb
fisubrs
add
sbbb
shlb
in
lea
mov
scas
lret
xchg
call
xchg
dec
xchg
pop
mov
dec
scas
fisttpl
incb
or
cmp
push
test
pop
insl
xchg
lea
dec
pop
in
jmp
roll
push
fnsetpm(287
and
mov
fimull
and
std
pop
cwtl
aas
push
dec
dec
mul
mov
lret
mov
sub
mov
je
cli
pop
shr
in
xor
add
push
push
add
push
fmuls
mov
es
inc
or
pop
or
enter
fnsave
rclb
call
in
incb
jae
orb
aas
mov
sbbb
fs
loopne
into
pop
dec
in
das
mov
mov
xchg
push
dec
inc
dec
pop
outsb
mov
or
push
sbb
mov
xchg
int
fistl
fincstp
inc
ret
popa
shlb
xchg
std
mov
add
loope
jae
enter
dec
mov
and
outsb
jle
push
ret
add
mov
cmp
in
mov
insl
xchg
pop
jo
aaa
js
aas
fwait
scas
push
inc
sub
push
adc
pop
xor
or
adc
mov
cs
js
lcall
cmp
sub
push
dec
pop
and
jo
push
add
mov
fstpt
negl
mov
les
push
add
xor
mov
pop
xchg
scas
dec
lods
xchg
ja
pop
or
loopne
jne
leave
xchg
mulb
xor
mov
stos
addr16
std
imulb
jmp
jb
cltd
and
lahf
aaa
mov
mov
xor
fisubs
mov
xor
mov
dec
and
mov
pop
stos
out
mov
add
das
mov
mov
push
fisubrl
pop
movsl
rcrl
pop
cld
loop
cmp
dec
scas
push
loope
popf
mov
ror
mov
int3
xorl
cld
mov
push
fs
subb
pop
or
in
pop
or
roll
cmpsl
jmp
fdivl
push
or
xchg
rcl
jge
or
mov
push
and
mov
std
xchg
ds
add
mov
es
and
xor
mov
push
sbb
inc
jl
dec
xchg
insl
cmp
mov
mov
mov
dec
in
or
sub
ja
xor
pop
loope
in
ljmp
lret
sbb
push
std
movsb
xchg
sbb
daa
xorl
sub
gs
dec
jmp
iret
sub
int
jmp
test
movsl
and
pop
sub
xchg
pop
jo
adc
or
jb
add
and
jle
mov
test
mov
bound
push
and
cld
fiaddl
ljmp
in
or
cltd
fcoml
add
or
lret
and
call
movl
inc
push
ficoms
push
mov
repz
or
in
pop
mov
mov
xchg
or
cmc
xor
int3
add
rcpps
jmp
stos
jecxz
fxch
and
roll
push
fidivs
push
jne
add
dec
jmp
cmc
pop
mov
rcrb
inc
adc
das
cli
fmull
lea
add
add
mov
inc
pop
xor
jae
xlat
sti
adc
into
movsb
jmp
insb
push
cmc
pop
lods
fwait
sub
jmp
push
std
mov
or
inc
add
arpl
add
test
push
aaa
adc
xlat
decb
aas
js
sub
pavgb
push
pop
imul
stos
loopne
stos
sub
je
pushf
outsb
fidivl
loope
inc
adc
sub
aas
lock
push
icebp
fdivp
push
xor
sub
aaa
or
in
fcmovb
jge
insl
scas
lock
push
inc
sub
leave
hlt
sub
fdivl
int3
pop
mov
push
sbb
and
sahf
xorb
add
xor
dec
movsl
or
mov
jns
mov
pop
mov
mov
lea
adc
imul
pop
mov
insb
in
jno
pop
add
movsl
addr16
mov
shll
xchg
popf
xor
insl
stc
ret
jnp
repnz
fnstsw
daa
pop
cmpsb
rcll
test
scas
mov
popf
mov
mov
inc
in
outsl
adc
fs
imul
push
push
sbb
xchg
push
hlt
xchg
add
xchg
insl
jmp
gs
and
jl
pop
outsb
inc
jae
xor
jns
push
pop
dec
out
cli
enter
mov
add
mov
das
xorl
xor
xchg
mov
ret
and
sbb
sbb
fs
pop
adc
out
dec
inc
jae
inc
ljmp
in
push
pop
fld
push
and
adc
out
testb
in
iret
bound
jnp
out
mov
pushf
push
or
nop
xlat
xchg
inc
pop
stc
ds
lcall
inc
stc
xchg
adc
xchg
lcall
mov
je
jne
mov
xor
lock
push
xor
mov
jecxz
jmp
sbb
cmp
sti
inc
mov
jbe
adcb
fiaddl
mov
lret
xchg
push
dec
adc
insb
iret
out
and
add
lods
jmp
cmp
add
push
cmp
pop
shrb
in
and
fdivs
fwait
cld
cmp
adc
sbb
outsb
popa
push
dec
clc
out
dec
pushf
insl
sbb
jnp
movsb
mov
icebp
dec
imul
jb,pt
lcall
push
jne
or
pushf
and
outsb
int3
and
jo
in
inc
lcall
mov
sbb
stc
rcrl
int3
mov
or
add
or
shl
xchg
push
cltd
lret
sub
ljmp
mov
das
notl
jmp
inc
inc
pop
xor
out
nop
mov
sbb
lods
sub
mov
in
cwtl
add
dec
aaa
enter
mov
xor
ss
out
mov
pop
lahf
mov
adc
pop
ret
add
rcrb
dec
jmp
scas
dec
ret
sub
imulb
mov
arpl
std
push
popa
mov
push
adc
xchg
mov
push
sub
xchg
add
xor
into
sbb
push
lock
aas
xchg
lcall
ja
sbb
fdivrl
ds
call
decl
je
int
hlt
jl
in
int3
sbb
out
mov
or
cmp
push
xor
or
les
lds
mov
push
or
jmp
pop
out
jo
fcoms
int
add
push
aam
xchg
push
mov
das
xor
pop
inc
enter
pop
in
cld
adcb
insl
cmpsl
mov
dec
shr
in
ljmp
ret
jle
pushf
hlt
out
or
faddp
sub
outsb
adcl
in
shlb
scas
mov
pop
lods
jns
cli
arpl
shrl
adc
pop
xchg
sbb
inc
int
jle
mov
lret
pusha
inc
xlat
adcl
push
xchg
pop
xchg
jb
jge
add
adc
xchg
pusha
add
mov
daa
in
mov
pushf
aad
lods
add
icebp
adc
in
je
and
xorl
sub
adc
mov
mov
xchg
mov
in
or
shrb
adc
mov
inc
aas
inc
xchg
mov
scas
mov
fsubr
mov
lret
jb
push
dec
dec
loop
je
pop
inc
test
mov
and
filds
fsubl
es
or
add
scas
repz
in
adc
movl
xchg
shrb
mov
adc
or
push
push
loop
sbb
add
jns
cld
or
pop
xor
cmp
std
outsl
mov
mov
rcrl
ret
cmp
push
iret
in
insl
xchg
andb
inc
mov
lcall
popa
repnz
dec
repnz
xchg
jp
cmp
xor
out
test
rcl
fcoms
cwtl
outsb
jge
stos
aas
aas
push
sahf
sbb
push
or
mov
sub
outsl
addr16
mov
xor
daa
xor
fcmovnbe
cltd
jle
ffreep
jmp
push
adc
movsb
stos
in
pop
roll
hlt
add
loope
jnp
pop
das
hlt
push
addl
stos
in
mov
or
mov
push
call
jg
push
pushf
push
cmp
insb
mov
dec
pop
inc
call
in
mov
push
cli
xor
test
dec
fimuls
pushf
pop
fneni(8087
clc
inc
sbb
sub
fwait
pop
xchg
mov
hlt
sahf
std
repz
xor
xchg
nop
idivl
imul
push
xchg
clc
outsb
push
lock
jne
out
mov
fdivl
and
push
sbb
andl
cmp
inc
jo
and
xchg
sti
xchg
scas
orb
test
xchg
push
xchg
leave
pusha
inc
test
add
mov
pop
aad
or
ret
sbb
push
testb
push
mov
pop
sub
stc
and
fadds
xchg
adc
outsb
aas
mov
fwait
es
mov
into
mov
ds
dec
push
ret
mov
jp
pop
out
jae
bound
dec
and
das
xlat
addr16
pop
movaps
add
xlat
in
jns
daa
jnp
mov
out
dec
and
out
xchg
rclb
loop
popa
mov
loop
fcoms
push
call
jno
in
cs
xchg
stc
bound
pusha
xchg
and
push
mov
sub
out
mov
sub
aas
repnz
ljmp
inc
add
sbb
sub
pop
bound
or
or
addr16
ret
test
sahf
popa
vmptrld
xchg
shll
pop
mov
sarb
jecxz
jle
ret
cmp
daa
repnz
leave
or
jno
out
or
pusha
sbb
or
es
lahf
hlt
arpl
js
pop
imul
dec
push
scas
in
xchg
pop
idiv
das
inc
andb
mov
cmp
adc
jmp
or
repz
push
test
out
lahf
and
and
into
sbb
dec
fisubrs
push
repz
add
sbb
adc
push
push
dec
rorb
or
loopne
gs
mov
mov
inc
sub
imul
lcall
or
addr16
and
in
push
adc
icebp
cwtl
es
jbe
and
add
adc
stc
movsb
pop
in
and
mov
scas
or
dec
mov
push
jecxz
stos
and
jmp
stc
sub
pop
mov
jl
push
loope
fsts
and
cmpsb
mov
lahf
cmp
aam
jb
bound
inc
dec
pop
cmp
std
or
xor
lea
scas
movsb
dec
sbb
inc
inc
xchg
lea
push
inc
push
mov
fwait
loopne
fsubrs
into
mov
inc
mov
mov
inc
daa
cs
icebp
sub
and
mov
scas
aad
push
xchg
sub
sub
pop
in
sub
push
jo
in
mov
jbe
jbe
or
adcl
lock
mov
mov
sub
or
in
mov
movsl
sub
scas
and
mov
ret
outsb
popa
insb
or
ds
push
xor
outsl
mov
inc
cwtl
icebp
and
outsb
jne
outsb
outsl
or
pop
or
add
pop
test
xor
fisubrs
mov
in
dec
in
loopne
outsl
mov
mov
mov
dec
push
leave
shrl
cmp
push
inc
mov
push
call
sbb
xchg
adc
mov
pop
mov
push
xor
cwtl
xor
and
push
cmc
pushf
fiaddl
sahf
sarl
pop
mov
dec
out
lods
hlt
mov
outsl
or
jo
xchg
sarl
xchg
rorb
imul
mov
jae
cmp
xchg
imul
iret
cld
inc
inc
fcompl
push
sub
lcall
insl
mov
add
into
fidivs
add
push
rorb
clc
or
and
aad
fbstp
sub
dec
imul
mov
imul
lret
lock
leave
outsb
lods
mov
inc
ret
xor
call
dec
test
addl
adc
mov
mov
nop
or
movl
add
call
aas
decl
ret
aam
push
add
fstl
adc
xchg
xchg
lods
adc
xchg
pop
sti
call
dec
aam
mov
xchg
stos
rorb
lea
stc
pop
jne
mov
push
xor
inc
and
leave
loope
or
inc
movsl
inc
cmpsl
subl
loope
sub
ljmp
push
lods
cmp
pop
out
popa
lds
clc
roll
fimuls
cli
mov
test
leave
adc
xor
jno
xchg
mov
xor
cld
lret
pop
fwait
sub
mov
dec
insb
xchg
icebp
cmp
mov
sbbb
mov
lock
mov
dec
cmp
lds
ror
popf
mov
out
dec
cmpsl
dec
sbb
bnd
sub
push
jne
mov
fs
mov
mov
dec
push
das
fucomp
adc
and
mov
mov
jmp
fldcw
fsubs
pop
xchg
push
and
outsb
sbb
xchg
mov
add
std
sub
fadds
aaa
in
enter
or
fimuls
lods
popa
cwtl
inc
lret
ficoms
cld
das
dec
jae
pop
iret
add
xor
sbb
adc
sbb
loope
std
mov
lahf
movsb
movsb
push
jmp
insb
movsb
push
or
clc
lds
popl
call
cmp
or
fiaddl
rorb
inc
dec
out
mov
stos
nop
push
ds
cld
enter
ret
adc
nop
sbb
aas
dec
push
sub
sub
dec
sbb
dec
sbb
es
mov
cli
dec
aam
mov
push
xchg
mov
mov
mov
cmpsl
fistps
fsubs
aaa
arpl
int
shrl
sbb
rclb
dec
xlat
jecxz
jmp
cwtl
ret
lds
cltd
dec
dec
jb
aad
xchg
std
or
dec
mov
sbb
sub
or
arpl
icebp
in
aas
mov
or
sbb
ss
test
addr16
lcall
mov
cli
fldl
xor
or
shll
out
cmpsb
shlb
movsl
rcrb
cmpsb
lock
dec
xlat
mov
js
push
cmp
outsb
pop
fwait
push
lcall
cmp
ret
cmp
mov
addr16
push
add
bound
dec
mov
fists
xor
call
jmp
fmul
lahf
cmpsl
add
mov
mov
test
dec
out
mov
in
sub
push
sub
add
mull
out
adc
fstpt
rcll
adc
repz
dec
pushf
std
fwait
sbb
leave
mov
jp
loop
lock
mov
ret
mov
in
xor
or
popf
imul
and
ljmp
aad
fldt
aad
jmp
lock
xchg
xchg
dec
daa
sbbb
fwait
cmp
xor
fsubrl
jae
jl
lahf
fstpl
adc
rcrl
jg
movsl
adc
in
les
iret
jmp
and
xchg
repz
popa
sbb
sub
imul
mov
adcb
jno
and
sub
inc
fcomi
jae
add
jmp
push
add
addr16
xchg
lahf
js
vmovdqa
cli
outsb
inc
dec
fisubrs
xor
test
xlat
mov
aam
sbb
and
test
hlt
imul
jecxz
xor
outsl
and
aad
rcll
arpl
push
dec
jmp
push
aas
sbb
or
sahf
mov
vprotd
scas
mov
inc
cmp
ffree
test
out
sbbl
testb
repz
push
xlat
cmp
ds
jl
xor
jle
cld
xchg
sbb
clc
test
jno
dec
pop
mov
jmp
insl
push
les
aam
in
and
sbb
mov
jg
and
cmp
push
out
das
mov
push
int3
mov
fldenv
repz
les
mov
pop
and
xchg
fsub
jnp
mov
cmpsb
xchg
int3
inc
xor
push
mov
jg
arpl
mov
sti
mov
lods
cmp
dec
std
and
mov
inc
mov
std
xor
fstl
shlb
call
addr16
or
vfmaddsd
pop
call
lods
dec
test
xor
call
ja
stos
xchg
mov
scas
inc
mov
mov
arpl
shrb
hlt
fwait
icebp
mov
test
fisttpl
push
nop
cld
stos
es
add
push
out
pop
dec
shll
pop
stos
push
jnp
lods
adc
push
xor
add
movsl
push
or
push
mov
popf
pop
sub
sub
mov
push
mov
or
ds
jle
insl
jb
andb
mov
rolb
lock
push
add
jle
dec
rcl
mov
or
ljmp
cld
xchg
jns
sbb
insb
push
jns
adc
test
dec
clc
fadds
inc
out
xor
mov
push
popf
jmp
xor
and
shll
leave
xchg
stos
xchg
outsb
sarl
sbb
in
push
scas
add
mov
push
dec
or
pop
insb
pop
mov
pop
repnz
data16
add
rclb
sahf
cmp
and
mov
mov
loopne
pop
add
mov
filds
repnz
dec
push
pusha
jnp
aad
out
mov
dec
or
mov
dec
aad
sbb
cmpsb
mov
push
xchg
shrl
add
mov
inc
or
sbb
dec
fs
sbb
mov
sub
adc
repnz
sub
sbbb
xchg
push
cmp
sub
loop
bound
mov
int
jns
jns
add
sti
ret
jne
nop
push
jmp
sbb
jge
mov
and
dec
pop
and
and
dec
push
sbb
loop
adc
pop
subl
jecxz
pop
or
sub
mov
inc
push
jecxz
in
hlt
xor
sti
xor
dec
in
add
sub
mov
sub
jb
scas
or
mov
jp
pop
mov
or
stos
jbe
push
xor
loop
ss
fwait
out
fs
push
sti
sub
scas
mov
test
out
push
test
xchg
daa
subb
sub
xchg
cltd
adc
iret
adc
fidivl
pop
add
jne
mov
sub
jb
stc
inc
mov
adc
cmp
lods
out
stc
and
and
fwait
ret
ss
dec
xchg
pop
mov
clc
adc
mov
mov
sbb
mov
enter
or
add
icebp
subl
or
popa
lds
popl
enter
adc
lock
mov
sar
mov
aad
outsl
and
xchg
and
dec
daa
les
pop
mulb
xor
fsubrp
add
fstpt
jno
mov
pop
lds
dec
aaa
je
fsubr
lahf
dec
fisubrl
jnp
pop
cmp
xor
mov
mov
mov
dec
test
fucomip
js
push
add
mov
fwait
das
arpl
scas
outsb
mov
dec
sub
cmp
fs
inc
xchg
mov
push
sub
push
jge
bound
leave
inc
and
xor
and
adc
out
push
pop
mov
cli
aas
xchg
cmp
imul
adc
dec
push
mov
int3
mov
ret
mov
xchg
shlb
sub
in
aad
or
cmpsb
add
rorl
pusha
sbb
jns
adc
adc
test
cmpsl
or
into
fistpll
ret
jns
or
jmp
jbe
aad
into
jnp
jge
sub
shlb
jo
imulb
dec
lcall
hlt
cmp
push
fisttpll
clc
mov
mov
mov
fsubrs
adc
mov
imul
jno
je
fld
pop
inc
and
mov
sbb
out
scas
fstpl
sti
sub
pop
int3
pop
fisubrs
inc
pop
mov
push
cltd
into
cwtl
inc
sub
jge
fdivs
cmpsl
push
aad
lea
gs
fucom
stos
clc
ljmp
inc
cmpsb
dec
scas
mov
xchg
aam
mov
adc
int3
jbe
gs
lret
mov
mov
cmp
fmull
jmp
rdpmc
mov
push
mov
ficompl
or
mov
arpl
scas
vpsubsw
inc
test
and
lahf
daa
xchg
jae
xor
dec
sar
ficoms
mov
sbb
mov
push
mov
outsl
sbb
lcall
mov
repnz
sub
mov
cs
cmp
call
mov
pop
jnp
je
pop
inc
int3
adc
loop
je
jp
inc
or
adc
push
cltd
mov
test
loopne
add
mov
adc
scas
jmp
lcall
int3
mov
jle
push
pop
mov
out
and
cli
cli
ret
movsl
loopne
insl
xor
and
pop
jnp
mov
mov
mov
xor
loope
loopne
mov
or
and
dec
popa
rcr
xchg
cmp
cmp
jnp
arpl
sbb
mov
in
fwait
jle
outsb
je
pop
scas
and
stos
adc
mov
in
adc
add
mov
mov
xchg
add
cltd
enter
enter
mov
jp
push
mov
pop
mov
fiadds
xor
xchg
dec
mov
fildl
rcr
nop
sbb
sbb
sub
lahf
sbb
adc
stos
imul
jle
cmp
pop
mov
jbe
stos
les
movb
dec
repz
mov
mov
sub
stc
sti
or
cmp
jl
sbb
les
shlb
hlt
sub
fbstp
inc
cmp
imul
pushf
jmp
jecxz
loop
nop
dec
stos
test
mov
leave
sahf
ret
out
xchg
jno
fstpl
pop
sbb
adc
or
iret
jno
add
es
wbinvd
aas
xchg
mov
jb
jl
add
emms
test
jb
fistl
jnp
rcll
bound
in
adc
push
push
lret
test
pushf
int3
xchg
nop
out
lret
push
pop
std
cs
mov
add
push
sbb
pop
sbb
sbb
inc
out
fs
jmp
je
cmpsb
add
push
mov
scas
and
test
cmpsl
add
jge
js
sahf
mov
mov
dec
into
inc
push
rcll
xor
fdivrp
jge
pop
pop
clc
sti
lret
aam
std
mov
sub
xchg
cmp
xchg
sahf
mov
sbb
xor
cmp
fwait
cli
mov
or
into
push
daa
or
sahf
jns
out
daa
test
mov
pusha
or
pop
and
sbb
mov
sahf
pop
popf
lods
data16
xchg
gs
popa
xchg
and
push
rcll
and
icebp
and
lock
push
and
dec
add
push
loope
lock
pop
push
inc
cli
add
data16
or
inc
ja
add
add
xchg
add
fs
sbbb
xorb
inc
mov
jns
lret
rcrb
mov
dec
movl
jbe
jmp
pop
fbld
outsl
outsb
orl
fistps
insb
xlat
mov
dec
je
sub
daa
lahf
xchg
or
test
inc
fbld
adcl
cmpsl
mov
insl
es
xchg
sti
lods
dec
jmp
cmp
sub
mov
mov
insb
push
inc
in
mov
cmp
imul
or
dec
push
in
mov
daa
push
add
mov
fstpt
jnp
inc
lods
aaa
pop
jbe
add
dec
stos
mov
in
sbb
mov
scas
pop
sarl
or
pop
xchg
movsl
jnp
repnz
cmp
or
sub
lahf
mov
scas
mov
les
adc
xor
inc
mov
clc
xchg
aam
sub
or
icebp
push
mov
xchg
inc
loopne
mov
leave
lcall
jge
xor
add
pop
insb
mov
int
cld
cmp
jae
stos
or
rorb
jg
adc
outsb
ret
mov
and
xchg
mov
jge
cs
cli
je
jnp
or
addr16
test
je
dec
aas
lret
push
xchg
movsb
aas
incb
xchg
inc
and
and
mov
lcall
xor
push
inc
push
roll
gs
mov
ret
jp
push
mov
jbe,pt
rolb
test
mov
cmpb
adc
icebp
mov
or
rsqrtps
scas
insw
ret
rorb
push
xor
cmpsl
fwait
inc
cmp
sbb
scas
ret
xor
mov
inc
clc
push
sbb
ficoms
add
shrb
push
daa
pushf
imul
or
jae
dec
mov
xchg
inc
sub
pusha
jnp
idivb
popf
lds
cmp
xchg
pushf
scas
add
mov
std
stos
shlb
loop
lret
pusha
push
adc
dec
adc
jge
pop
mov
or
inc
ja
movsl
popa
insb
lret
mov
ljmp
xchg
add
mov
pop
test
arpl
enter
dec
sbb
fidivrl
cltd
pop
scas
test
mov
icebp
insl
inc
negl
xchg
mov
mov
jbe
mov
push
xlat
mov
sbb
mov
jne
rcrl
mov
dec
xor
out
in
push
cmp
fstpt
psadbw
and
je
add
adc
out
in
movb
pop
sub
rorb
fwait
adc
ja
loope
icebp
in
and
or
sub
sahf
or
add
sub
cmpsl
cmpsl
sbbb
cmp
push
cmpsb
add
and
inc
outsl
adc
jle
add
ss
mov
xor
sub
out
mov
clc
xchg
xor
pop
sbb
mov
and
les
les
sbb
rcl
inc
jb
cs
nop
scas
xor
mov
add
or
sbbb
mov
repz
enter
jbe
pop
out
insl
add
mov
adc
mov
sub
inc
dec
scas
stc
xchg
fs
push
pop
xorl
add
xchg
inc
xor
inc
jae
mov
cmp
bound
push
fmuls
mov
mov
jg
xor
and
pop
sti
xlat
je
ror
cmp
ss
leave
sbb
js
ror
dec
fsubs
rclb
mov
ret
lock
popa
xor
mov
imul
int
cmp
inc
jmp
adc
cmp
int
and
mov
rep
xchg
aam
loope
les
hlt
ss
test
xchg
dec
fwait
jecxz
repz
push
adc
ror
mov
cwtl
je
xchg
clc
add
ja
loop
xchg
jns
sbb
testb
icebp
lret
cmpsb
int3
mov
mov
sbbl
popf
repnz
jecxz
mov
push
inc
jecxz
movsb
push
cltd
in
adc
js
cmp
jmp
sbb
pushf
add
mov
mov
cmp
pop
popf
add
out
fwait
or
pop
fcompl
push
dec
out
pop
fidivrl
data16
das
addl
push
rcll
popa
outsb
pop
pop
jnp
and
pushf
in
cmp
cmp
ljmp
sti
sbb
outsl
jae
push
cmp
int
fldcw
pop
jmp
dec
mov
dec
lods
dec
stc
out
je
lea
iret
test
mov
fsubrl
xchg
lods
ja
icebp
movsl
rcl
xchg
mov
loopne
xchg
aad
fbstp
cmp
arpl
dec
mov
mov
in
and
or
mov
aad
sbb
movsl
mov
push
mov
xor
or
jno
adc
cmp
pushw
cmpsl
punpckhdq
clc
dec
and
sbb
xor
rcrb
sbb
jnp
mov
ds
push
repz
stos
lret
popf
pushf
mov
sbb
cmp
sub
test
enter
test
movsl
push
lcall
icebp
xor
arpl
test
fnsave
xchg
xlat
mov
mov
pop
fs
aam
pop
sub
mov
stos
lcall
and
sbb
mov
test
dec
inc
and
fisubrl
jmp
push
add
inc
jbe
iret
mov
xchg
sub
adc
es
in
cmpsl
sub
sub
adc
or
pushw
shll
out
dec
lea
imul
add
test
pop
daa
cwtl
outsl
sub
aaa
inc
not
add
push
sti
in
gs
xchg
pop
gs
fimuls
sub
out
sahf
pop
pinsrw
scas
mov
dec
xor
sbb
sbb
leave
psubsw
data16
xchg
xchg
push
loopne
popf
test
pop
sub
inc
aam
dec
popa
xor
dec
or
and
and
ror
sub
int3
lret
mov
cmpsb
mov
jo
xchg
mov
lret
orl
xor
mov
addb
sbb
call
call
xor
mov
sahf
insl
lds
jg
xchg
mov
movsl
sbb
ret
iret
jmp
scas
jnp
push
and
mov
xor
mov
pop
xchg
push
lret
add
inc
cmp
clc
ja
imul
sti
popl
cltd
dec
jne
mull
test
inc
nop
scas
mov
jl,pt
movsl
sub
xor
mov
arpl
jno
mov
shrl
lret
and
iret
cmp
idivl
sahf
in
in
ret
popa
in
sti
vmread
push
insl
add
rol
mov
lds
push
shrb
addr16
push
lds
into
inc
insl
nop
fcom
xchg
lcall
mov
mov
mov
clc
call
vpcmpeqb
cwtl
mov
cmp
mov
push
sbb
cmp
sarb
loopne
out
jnp
ret
pop
push
xor
mov
or
movsb
and
movsl
hlt
inc
xchg
fimull
or
mov
xchg
shlb
rorl
aam
jmp
lods
je
sub
loop
sti
pushf
adc
sub
cmc
aad
mov
cmpsl
rcll
mov
test
daa
mov
inc
pop
int3
call
call
jp
test
pop
orb
stos
nop
sti
scas
dec
inc
mov
push
pop
push
mov
jle
insb
addr16
in
mov
inc
cltd
stc
and
shlb
sarb
es
testl
ds
cwtl
mov
ljmp
pop
mov
xor
sbb
push
out
pusha
fisubs
sub
pop
jnp
mov
ljmp
adc
dec
add
cmp
lahf
ja
in
xchg
sbb
test
sti
outsl
rol
pop
mov
cmpb
mov
int
and
inc
add
addr16
shll
cmp
mov
gs
mov
jg
insb
dec
xchg
aam
in
xchg
cmc
sbb
out
mov
fwait
inc
in
xchg
out
jae
hlt
mov
std
movl
or
insl
cmp
push
imul
das
imul
addr16
push
xchg
pop
shlb
xor
mov
movsl
sub
lcall
jbe
inc
sbb
lcall
movsb
leave
and
pop
dec
addr16
mov
adc
notl
mov
mov
push
and
fwait
jl
inc
sbb
fidivrl
push
xor
subb
xor
cltd
mov
test
or
mov
sub
mov
shlb
and
shll
cmpsl
fistl
and
cs
adc
in
cmpsb
mov
jl
das
sbb
cwtl
xor
and
jns
popa
pop
imul
inc
clc
inc
ret
inc
fwait
pushl
out
idivb
add
xchg
push
cmp
cmp
loopne
cmpsl
sub
rcrb
test
sub
mov
loop
and
pop
sbb
jne
addr16
daa
popa
cltd
jp
cli
ss
xor
mov
xchg
sub
pop
xchg
scas
or
push
movb
lock
jo
pop
xor
pop
daa
mov
icebp
jb
mov
push
pop
add
xchg
adc
or
arpl
pushf
loopne
fists
jp
pop
repz
sbbl
mov
stos
into
push
outsl
addr16
insb
dec
js
pop
inc
mov
pop
or
push
adc
divb
xor
fbstp
lahf
int3
sbb
imul
mov
adc
sub
int
adc
test
sbbl
cmp
cmpsl
push
popf
inc
sbb
jne
cmp
jne
and
pop
fdivl
push
pushf
xchg
jno
push
lock
outsl
dec
mov
shll
mov
repnz
xor
inc
mov
jo
outsl
mov
in
mov
or
push
enter
hlt
jb
push
je
push
push
jg
sub
xchg
out
pop
ljmp
movsb
and
mov
repnz
fucomip
or
mov
rorl
es
push
jns
mov
repnz
sub
inc
pop
into
cmp
mov
rol
adc
ss
out
ljmp
sbbl
inc
mov
mov
pop
push
push
or
sub
and
outsb
or
add
and
xchg
test
fstl
loope
out
aad
mov
sbb
les
pusha
ja
aaa
sbb
cmp
add
sarb
clc
mov
in
stos
out
push
fimuls
xlat
jno
fimull
inc
in
jo
lret
dec
xor
aam
cmp
adc
add
sub
cmpxchg
sub
mov
popa
inc
loopne
aaa
into
sub
xchg
stos
sarl
mov
add
inc
fistpl
inc
cltd
jg
push
mov
js
aad
lcall
xor
ljmp
xor
add
test
sub
loop
xor
mov
xor
adc
mov
push
sbb
jl
popa
icebp
mov
lahf
push
lret
bound
sti
push
push
cmp
fistl
inc
mov
cmpsl
add
loop
dec
jmp
sbb
sbb
ret
jle
sbb
popf
adc
test
sbb
shrl
jl
test
add
daa
ret
mov
sbb
dec
loope
mov
push
lock
repz
ja
out
or
sub
add
iret
stos
aam
xchg
or
inc
shll
pushf
sbb
xchg
call
imul
cmpsl
inc
inc
sub
fsubr
popa
mov
jae
loop
pop
fdivs
push
loope
lcall
cmp
pop
sub
pop
outsb
jnp
in
dec
push
xor
inc
xorb
lods
add
dec
xchg
inc
add
xor
dec
mov
clc
fsubs
xor
aaa
mov
mov
pinsrw
jge
lds
push
jne
xchg
inc
into
scas
adc
loopne
xchg
pop
cmp
add
cwtl
fisubrs
imul
testl
ficomps
pop
push
sbb
mov
adcb
or
xor
add
test
mov
or
mov
mov
mov
cmp
jne
or
out
popa
dec
jmp
daa
push
lds
jnp
int3
pop
ds
shlb
js
add
add
clc
stos
dec
popa
test
push
push
or
imul
inc
push
xchg
mov
add
shl
decb
inc
pop
jns
mov
outsl
aas
mov
sub
mov
lret
pop
ss
mov
and
pusha
popf
jno
cwtl
shl
xlat
dec
xchg
add
mov
mov
mov
sub
imul
and
nop
ja
ljmp
push
mov
xor
cwtl
ljmp
data16
pop
push
das
lea
bound
jno
test
mov
shll
jne
out
arpl
andb
mov
add
aam
out
xchg
int
pop
mov
mov
mov
inc
sbb
fsubrp
sbb
or
ficomps
js
sbb
rcrl
push
cmc
mov
add
and
mov
fs
lods
outsb
out
and
pop
jmp
mov
ret
sbb
sub
arpl
mov
in
imul
xchg
inc
push
push
dec
test
inc
add
add
out
add
xor
ss
push
xchg
sub
jb
repz
adc
fsts
adc
ja
push
pop
cwtl
testl
add
movsl
pop
arpl
addr16
sbb
adc
jbe
mov
frndint
lret
xchg
jne
push
pop
sub
daa
mov
jg
aad
jo
mulps
add
loope
or
aas
push
popf
push
mov
mov
jecxz
enter
xor
call
xor
push
in
les
push
nop
xchg
nop
test
aas
pop
adc
inc
js
loope
aaa
cmp
xor
into
and
mov
adc
rolb
test
mov
push
test
pop
adc
cmp
pmuludq
lret
inc
sub
sbb
popa
push
cmpsl
xor
mov
not
cmp
mov
mov
inc
mov
daa
in
jns
mov
in
outsl
aad
mov
daa
aaa
leave
aam
mov
daa
std
dec
mov
aaa
pop
incb
mov
jl
jmp
mov
shll
adc
idivb
mov
imul
scas
sub
dec
data16
bound
sbb
add
cld
cli
mov
lds
cmp
or
rcl
add
push
push
idivb
dec
lods
pop
xor
les
mov
mov
xchg
lds
test
or
xchg
lock
adc
mov
adc
cmc
in
bound
push
aad
dec
ret
ficompl
xchg
pushf
mov
cmp
jecxz
adc
dec
movsb
and
pop
into
sbb
push
in
lock
sub
test
push
neg
ljmp
imulb
rorb
inc
xchg
mov
mov
jge
repz
mov
xchg
dec
leave
xchg
test
mov
jg
les
addr16
inc
mov
mov
pop
inc
xchg
dec
xor
cld
out
shr
aad
lds
adc
mov
leave
mov
xchg
scas
xor
adc
mov
sbb
out
inc
mov
add
cmp
lret
int
mov
cwtl
and
pop
push
jae
nop
rcrl
test
out
jmp
stos
in
sub
dec
push
rcrl
mov
inc
scas
in
movb
ret
ljmp
lods
rorl
iret
out
mov
jg
inc
dec
mov
adc
push
out
dec
push
inc
add
cmp
xchg
sar
cmc
outsl
or
cltd
sti
cld
mov
ret
jbe
cli
repnz
std
ret
adc
enter
inc
xchg
sbb
or
adc
sbb
xor
jns
sbbb
je
pop
mov
inc
xchg
push
mov
sub
push
outsl
mov
mov
insb
and
add
lret
stc
int
scas
and
scas
sub
mov
out
cmp
dec
cmp
and
xchg
adc
push
pop
and
ljmp
add
outsb
push
outsb
mov
ret
xor
cld
inc
mov
loop
cmpsl
xchg
adc
sbb
jmp
sub
out
sub
mov
gs
je
scas
or
adc
sbb
push
pop
outsl
inc
rol
inc
sbb
call
push
imul
into
mull
je
xchg
mov
push
inc
pushf
cmp
cmpsl
imul
fidivs
cmp
cmp
add
rorl
pop
jmp
cwtl
leave
or
add
jmp
ret
loop
addr16
clc
dec
into
fisttpl
add
arpl
sarl
jbe
bound
cwtl
lds
cmp
inc
mov
lods
ds
and
cmp
sub
stos
pusha
outsl
int3
enter
scas
loope
orl
adc
fucom
rcrb
mov
mov
inc
push
push
push
flds
insb
cmp
mov
cmc
adc
int
fwait
es
pop
or
mov
jg
mov
andb
notl
and
lods
sti
dec
jle
push
enter
aas
mov
unpcklps
sub
cmc
fistps
xor
movb
pop
testb
aas
push
mov
loope
jne
add
xchg
nop
arpl
push
scas
xor
fdivrl
jp
fistps
sbb
imulb
call
lahf
add
jl
cltd
out
lock
pushl
dec
sbbb
in
pop
loop
sbb
fnsave
jno
add
lods
push
inc
cmp
lcall
cli
jbe
mov
repnz
imul
or
mov
or
in
xorl
int
lea
inc
pop
sbb
repnz
push
outsb
ss
xorb
pop
xchg
out
cld
jbe
sti
or
dec
cmp
filds
sbb
cld
cmp
fisubrl
call
jl
inc
rorl
lahf
sahf
lea
xchg
scas
lret
sub
loopne
lods
ljmp
out
lea
xchg
adc
mov
push
fisttpl
aad
lahf
mov
sbb
dec
xlat
adc
jmp
in
lahf
int
pop
add
stos
cmp
push
cmpsl
pop
jecxz
pop
shrl
pop
outsl
jle
fcmovne
jg
fimuls
negb
repnz
dec
xchg
inc
icebp
fistpll
stos
repnz
aad
ud0
pop
insl
or
ds
stos
sbb
xchg
mov
pop
lcall
and
xchg
repnz
lret
inc
jmp
outsb
cmp
int3
mov
iret
mov
mov
jno
cmpsb
ret
dec
mov
stos
push
out
jecxz
inc
in
in
pop
push
dec
cmp
js
insb
push
cmp
jb
jge
mov
sahf
inc
out
insl
sub
adc
test
cs
or
add
sub
or
lret
cmpsl
ja
pop
or
mov
repnz
dec
pop
outsb
adc
jne
inc
dec
push
or
out
pop
fistpl
divl
sahf
inc
inc
jge
and
adc
mov
adc
mov
rcr
or
fldcw
loope
xchg
cli
pop
xor
cmp
ficompl
fucom
adcb
out
xor
pavgb
in
sbb
mov
xchg
les
mov
and
jmp
or
add
std
addr16
add
sbb
data16
jns
pusha
stos
or
addb
inc
inc
and
push
pop
fcmove
or
or
push
and
fs
pushf
lods
jmp
aaa
sub
in
lods
xchg
mov
vphaddudq
lahf
data16
push
sbb
lret
icebp
sub
add
aad
sub
outsb
sbb
movsb
mov
inc
testb
mov
mov
xchg
fidivrs
lods
stos
cmp
ffree
push
push
data16
lods
clc
das
mov
adc
je
es
loopne
or
icebp
adc
outsb
mov
in
inc
jg
mov
fs
mov
adc
aas
dec
jmp
aas
pushf
or
pop
sahf
xorb
cmp
les
int
push
cld
jmp
xchg
fstps
nop
xchg
push
gs
pop
inc
jno
jb
shl
adc
sbb
ja
push
iret
lods
and
or
in
into
xchg
sub
and
movb
jnp
rcrb
shrl
pop
cld
xchg
lahf
mov
mov
or
dec
lods
or
daa
xlat
mov
mov
je
cmovle
mov
xchg
pop
arpl
pop
lods
mov
adc
mov
dec
pop
fisttpl
out
pop
cltd
ret
pop
push
orb
sbb
xchg
mov
sti
test
fistl
sbbl
or
std
adc
scas
sbb
bound
fcoms
inc
pop
mov
sahf
fildl
bound
stos
cmp
int
cmpsl
int
mov
lret
or
mov
movsb
je
mov
push
xchg
xchg
int3
push
jecxz
and
dec
mov
ljmp
inc
mov
popf
inc
outsw
mov
cmp
hlt
jmp
cmpsl
outsb
inc
xchg
loope
adc
add
mov
gs
mov
aad
je
xchg
mov
insb
xor
shrl
test
out
out
adcb
lea
sarl
sub
lock
addb
lods
pop
xor
ljmp
addl
jge
inc
lcall
aas
push
inc
inc
adc
jmp
pop
fiadds
and
rclb
add
push
in
repnz
imul
mov
dec
xorb
leave
repnz
lret
fwait
mov
lahf
mov
adc
push
mov
mov
gs
sub
roll
xchg
scas
into
flds
pop
pop
into
xchg
lea
pop
mov
xor
mov
pop
dec
xchg
gs
fdivr
sub
adc
stos
lds
sbb
leave
punpckhdq
lea
jge
cltd
xor
aaa
out
aaa
mov
lret
ss
icebp
xchg
in
and
loopne
pop
mov
adc
and
ds
cltd
lds
mov
fsub
not
fiaddl
ret
dec
xchg
addr16
movsb
xchg
cwtl
xor
sub
mov
push
fwait
test
repz
popa
adc
das
imul
cwtl
dec
aam
fwait
aam
sub
pop
loop
xchg
mov
pop
xchg
xlat
andb
popa
xchg
add
jl
in
loop
push
cmp
mov
or
int3
test
int
jmp
fs
jmp
push
add
leave
inc
add
pop
sbb
out
cmp
sub
or
mov
arpl
dec
movsb
fsub
stc
je
lods
mov
add
lret
jnp
sub
push
call
adc
xchg
mov
sbb
inc
jae
ret
mov
dec
push
repnz
icebp
mov
cmp
popa
rolb
add
adc
mov
or
scas
ret
sti
jb
out
cmpsl
mov
cmp
les
sub
in
call
popf
cli
adc
cwtl
repz
and
je
pop
mov
imul
cmp
fwait
movsl
lea
fstpt
out
mov
dec
cmpsl
push
push
inc
nop
fdivs
test
sub
leave
jge
push
cmpsb
cmp
adc
xchg
xor
out
xor
push
xchg
xor
push
loopne
addr16
xor
jne
xchg
jo
mov
mov
cmc
mov
pop
lret
movsl
inc
dec
adc
mov
mov
jmp
inc
add
push
push
outsl
sub
dec
add
je
mov
mov
sahf
in
pushf
lods
xlat
adc
push
test
mov
mov
cld
ljmp
jp
lea
xchg
mov
pop
jne
mov
push
dec
loope
add
inc
aaa
fisttps
xchg
mov
add
push
stos
jbe
mov
cmpsl
pusha
inc
jbe
cli
jo
gs
mov
push
dec
aas
mov
mov
fwait
mov
addb
xor
add
shr
sub
mov
insb
fisubrl
jae
sarl
ja
sub
jo
xor
es
mov
loope
pop
xchg
mov
mov
cmp
push
sbb
cmp
inc
pop
sub
in
into
loopne
inc
ret
push
ds
popa
sbb
stos
test
adc
sub
sbbl
push
adc
bswap
xchg
cltd
jmp
push
pop
repz
and
inc
pop
lods
fwait
jge
bound
or
mov
jo
cmp
int
xor
sub
aad
push
sarl
outsl
sarl
mov
aaa
push
mov
repz
stos
and
fistpl
sbb
sbb
lods
cld
repz
jp
hlt
jbe
int3
sub
rorb
int
or
jle
push
add
jb
aam
and
arpl
bound
and
or
xor
stos
loopne
mov
lahf
push
xchg
adc
shll
push
pop
stc
sarl
push
sbb
xchg
lahf
mul
and
notb
in
fadd
movsb
dec
push
cmpsb
je
mov
pop
in
stos
scas
push
test
xchg
mov
les
xchg
fcomi
sbb
push
stc
lret
pusha
mov
xchg
lock
int3
dec
push
jae
ror
fistl
mov
and
mov
cmpl
mov
out
mul
out
pop
ret
iret
inc
mov
inc
mov
mov
and
hlt
push
push
test
adc
sub
sub
je
xchg
mov
sti
popw
out
roll
adc
inc
jns
scas
popa
into
test
mull
stc
xchg
inc
push
sub
pop
mul
jo
xchg
jno
add
lea
mov
xchg
jg
xchg
mov
fists
popa
dec
adc
dec
sbb
mov
mov
mov
idiv
mov
imul
cmp
mov
pop
aaa
add
sbb
xor
negb
sahf
sbb
cmc
mov
dec
add
dec
es
jle
test
lock
sbb
arpl
sub
xchg
xor
fisubs
js
lea
andb
loope
mov
lcall
dec
jae
insb
and
in
add
mov
mov
sub
xor
sub
fbstp
insl
xchg
addr16
test
fdivrs
data16
hlt
shr
mov
and
ds
insb
mov
and
sbb
mov
outsl
popf
sbb
enter
push
mov
popf
xor
out
and
negl
mov
mov
leave
mov
fdivr
pop
mov
mov
cld
in
mov
mov
bound
out
loope
sbb
into
cwtl
mov
adc
mov
stos
sbb
inc
push
dec
inc
je
push
push
mov
ja
push
pop
out
inc
inc
sub
gs
lods
jl
gs
ret
cmp
std
data16
adc
and
inc
inc
pusha
mov
mov
sbb
push
xchg
movsl
outsl
ds
push
scas
sbb
aad
push
lods
cmp
in
mov
dec
das
pop
and
std
clc
loopne
daa
add
mov
xchg
mov
loop
sub
sub
sar
ds
pop
je
sbb
enter
shlb
inc
nop
mov
or
clc
and
dec
lcall
inc
test
enter
cmpsb
and
hlt
mov
pop
imul
and
sub
inc
rolb
idivl
shrl
stos
xor
add
int3
mov
sarl
pop
sub
in
je
sar
lods
push
or
jns
mov
pushf
mov
imulb
lods
dec
push
leave
pop
mov
shlb
mov
stc
shll
mov
in
pop
neg
shlb
xchg
sbb
jge
sbb
inc
test
roll
dec
scas
gs
imul
dec
addr16
add
andl
das
dec
and
mov
mov
int
cmp
lods
push
push
call
lods
jg
pop
sbb
xchg
repnz
cmp
pop
gs
jne
shll
in
sub
mov
push
out
mov
int3
adc
xchg
fs
sbbb
xchg
lods
stos
aaa
jnp
lret
in
stos
aaa
add
cmp
jb
xchg
mov
sub
out
jnp
fsub
js
mov
cmp
mov
inc
repnz
fldenv
xchg
jbe
sub
aam
mov
and
shll
cmp
lock
out
insb
sub
xchg
ja
cmpsb
or
gs
shl
int
rcrl
sub
add
in
add
push
jle
pop
stos
and
out
test
push
xchg
aas
call
shl
mov
aam
arpl
mov
nop
test
xchg
mov
mov
push
cmp
inc
add
out
push
xor
cmp
mov
hlt
inc
sub
movsb
mov
cs
fisubrl
roll
xchg
das
inc
adc
loop
test
jp
pop
std
mov
xchg
cltd
xor
jle
xor
add
nop
jnp
jbe
in
xchg
imul
sbb
andl
and
pop
jne
ss
fcomi
adc
cmp
pop
dec
pop
out
or
push
test
pop
in
or
mov
js
mov
sbbl
in
movsl
xchg
movsl
xor
pop
int
push
outsb
inc
outsl
cmpsb
popf
clc
or
sub
cs
jecxz
or
in
inc
jg
rclb
mov
insl
test
xchg
mov
out
adc
jne
aam
adc
push
into
jl
mov
inc
xlat
dec
cmp
lods
xlat
cmp
or
test
lret
push
cs
andl
movsb
sub
test
add
mov
cmp
pop
pop
outsb
dec
mov
pop
pop
mov
mov
inc
test
add
test
xchg
insl
inc
or
mov
pop
pusha
int
mov
test
add
push
es
inc
sti
push
fwait
xchg
es
ret
and
outsl
jecxz
jmp
mov
aam
adc
sub
xchg
inc
sub
loop
repnz
or
add
fsubr
out
sbb
fistps
jle
into
shll
lret
ja
ljmp
xchg
mov
cmp
jb
fmull
push
dec
in
xorb
add
jmp
xchg
sbb
not
xchg
mov
outsl
inc
mov
outsl
and
add
and
mov
jb
jmp
fdiv
mov
jle
mov
mov
push
dec
cmp
mov
popa
jnp
inc
ret
jp
mov
jecxz
ds
jl
pop
jo
adc
jp
sub
pop
loopne
jl
sbb
xlat
cmp
call
add
jb
sub
sub
or
push
pop
rcl
pop
mov
cmc
lods
test
dec
xor
mov
movsl
fimuls
mov
inc
sbb
jmp
out
sub
ljmp
mov
lods
dec
rcrl
fs
cs
repnz
lahf
or
dec
out
inc
fwait
jl
ficompl
insl
add
adc
cltd
push
inc
imul
cltd
pop
push
clc
into
mov
and
aad
sbb
cmp
pop
add
shrb
add
popa
pop
cltd
mov
or
repnz
xor
xor
imulb
mov
decb
mov
cltd
iret
into
lret
xchg
inc
sarl
inc
adc
cltd
mov
push
lret
cmpsl
mov
addl
mov
jno
dec
push
jge
mov
aam
test
push
stos
out
push
mov
loopne
pop
mov
lods
jbe
xor
mov
xor
sti
jecxz
cmc
xor
in
mov
pop
sub
daa
mov
ds
js
mov
pop
inc
int3
es
fcomps
out
mov
mov
jne
mov
adc
jle
cmp
notl
scas
sti
sub
dec
lret
into
data16
pop
movsl
movsl
mov
nop
or
or
test
mov
arpl
es
xchg
and
dec
les
stos
mov
data16
jnp
add
fs
in
aam
add
cmp
movsl
pop
push
mov
out
fnstsw
and
test
mov
push
add
mov
mov
mov
jecxz
lods
out
outsl
pop
loop
or
in
adc
mull
mov
mov
add
mov
dec
aas
mov
push
arpl
pop
jl
lods
imull
rclb
daa
arpl
std
in
pop
icebp
xchg
xchg
adcl
pop
sbb
call
std
inc
scas
mov
add
jae
mov
inc
nop
mov
xor
add
loop
in
stos
int
sub
fwait
outsb
add
call
or
imul
aad
push
mov
enter
in
mov
cltd
jae
adc
dec
mov
xor
xor
or
jbe
dec
inc
inc
andl
dec
popf
dec
or
aad
icebp
jecxz
lds
mov
xchg
pop
or
pop
sbb
fs
pop
pop
cli
xchg
lock
adc
mov
inc
inc
or
and
loopne
jge
push
stc
jmp
mov
mov
mul
iret
aaa
outsb
dec
popa
sbb
cld
inc
mov
jb
loope
test
les
repnz
mov
dec
add
push
dec
lods
clc
mov
into
and
inc
js
fldl
mov
pop
push
movsl
shrb
scas
aam
gs
pop
sti
mov
adc
jecxz
fsubs
mov
jno
or
xchg
inc
aas
stc
sti
mov
addr16
sub
aas
aam
sbb
xor
push
push
lea
and
cmp
xchg
test
stos
mov
int
add
or
jle
sub
inc
add
or
cmpb
cmpsb
outsl
into
dec
pop
hlt
cld
sub
repnz
xchg
in
mov
daa
sub
fsts
aas
inc
movsb
xchg
mov
cmc
es
fidivl
sbb
add
in
rorb
rclb
cld
sbb
mov
jg
jb
cmovp
jl
push
call
sub
pop
add
out
arpl
pop
mov
inc
sbb
pop
fwait
and
or
push
fcmovbe
test
scas
loopne
pop
pop
inc
ficoml
rcl
pop
das
in
popa
mov
fcompl
mov
dec
jge
mov
and
jns
call
adc
loopne
xchg
jns
cmp
insb
push
mov
bound
popa
div
ja
pop
dec
je
xchg
mov
dec
xchg
mov
push
and
dec
jl
xchg
xlat
add
shl
imul
cmpb
push
or
mov
cwtl
js
test
push
call
sbb
mov
ljmp
cs
sbb
push
mov
cltd
call
cmp
lods
adc
outsb
cmp
mov
inc
fstl
cmpl
cmp
pop
adc
out
adc
sbbl
cmp
lods
cmp
jp
lods
rcr
out
subb
or
je
push
into
enter
ror
jg
hlt
and
aad
dec
dec
ret
pop
mov
sub
stc
cmp
sbb
jne
lcall
divb
les
insl
pop
fisttpll
pop
fdivrl
jl
dec
test
cmpsb
inc
mov
adc
gs
incb
adc
jl
fsubrl
ss
imul
out
mov
movsb
inc
ja
shlb
adcl
mov
fldcw
dec
cmp
movsl
in
inc
or
je
sarb
nop
adc
dec
enter
aad
jns
gs
xchg
and
nop
sbb
clc
inc
icebp
xor
push
ja
jb
push
or
je
cli
mov
test
mov
cmp
and
dec
sbb
xchg
add
sti
out
stc
jo
rolb
es
lret
dec
loop
add
adc
jecxz
adc
pop
jne
sbb
cmp
mov
pop
xor
gs
sti
jg
push
dec
sub
inc
lods
xchg
in
sub
push
cmpsl
stos
pop
sbb
jl
xor
loop
fisubl
mov
add
mov
lret
cmp
pop
stc
adc
push
jp
clc
push
es
push
std
out
pop
mov
fisubs
xchg
data16
ret
xlat
mov
rolb
cmp
xlat
mov
cmp
lret
sti
leave
push
rol
je
ja
cmpsl
xor
jp
test
or
loope
mov
sti
nop
cmpsb
idivl
test
in
and
stos
iret
xchg
popf
jae
or
fsub
sub
cmc
add
rolb
jns
shll
int3
lret
sub
and
rcr
sub
mov
push
sbb
dec
aas
sbb
std
lahf
jns
mov
dec
inc
pushl
std
mov
push
adc
mov
adc
test
lods
aam
jge
sti
xchg
sub
fsubl
inc
add
xlat
adc
jns
mov
fisubs
pusha
ret
dec
dec
pop
jo
xchg
or
xor
mov
or
mov
aad
push
or
sbb
bound
in
stos
cmc
adc
dec
jl
in
shrb
and
icebp
jle
jno
in
cmp
mov
cmp
es
or
mov
or
xchg
ret
movsl
xor
or
insl
or
mov
int3
adc
lods
push
popl
push
pop
enter
fcoml
fsubrl
lret
movsb
mov
std
jp
jbe
xchg
nop
out
std
push
mov
test
dec
adc
movsb
jnp
push
xor
xchg
inc
fisubs
rdpmc
aas
mov
push
movsl
aas
push
xlat
push
xchg
mov
loop
and
dec
dec
push
das
mov
sub
push
popa
mov
test
int3
ret
pop
push
push
add
dec
push
popa
ret
aad
mov
cmpsb
xchg
dec
sbb
das
pop
mov
sbb
dec
clc
or
cltd
stos
fadds
sbbl
mov
in
test
in
scas
stc
mov
pop
inc
mov
sbb
lds
push
xchg
es
jg
and
fdivrl
pop
mov
stos
mov
sti
sub
sbb
cmp
mov
negb
mov
push
pop
pop
das
jge
cmpsl
cltd
or
mov
inc
pop
sbb
dec
hlt
pop
jl
jmp
cli
cmpsl
xchg
mov
repz
mov
cmovs
test
or
or
iret
xchg
mov
jae
sub
int
jmp
outsl
mov
pop
jbe
dec
and
loopne
adc
push
mov
cs
into
sbb
sarb
sbb
mov
cli
mov
add
sbb
les
out
popa
shll
insl
pop
test
iret
out
mov
jno
pop
jo
push
je
sub
in
jecxz
insl
and
and
out
pop
mov
mov
jmp
divb
sbb
scas
xchg
sahf
stos
lcall
inc
jae
cmp
push
fwait
or
lds
lods
mov
sbb
jbe
cmp
popf
xchg
mov
mov
or
in
ja
sub
hlt
sub
push
inc
scas
sarb
or
in
popf
pusha
and
pinsrw
jae
dec
rolb
out
hlt
and
mov
clc
divb
pop
or
leavew
mov
push
fisubl
in
xchg
out
dec
aad
mov
int
mov
fwait
pop
sub
mov
loope
mov
xor
int
mull
repz
cmpsb
sub
bnd
shlb
out
mov
xchg
xlat
or
and
fs
xor
lahf
push
xor
pop
inc
xchg
push
loop
mov
sub
lcall
cmpsl
test
jmp
rcrl
xor
jp
pop
push
add
jl
cli
inc
push
test
data16
out
xchg
or
fbstp
out
test
jp
iret
cwtl
adc
outsl
es
adc
push
jbe
add
data16
jbe
loope
inc
and
leave
arpl
xor
int
sbb
jmp
adc
pop
xchg
and
dec
pop
adc
repz
dec
sbb
inc
mov
xchg
insl
push
lret
sbb
movsl
stos
mov
push
arpl
nop
cmpsb
cmp
inc
mov
mov
fisttps
std
jle
movsl
or
and
xchg
jne
xor
shrb
sbb
das
add
loopne
push
cmpsl
cs
hlt
mov
mov
pshufw
dec
push
mulb
push
out
pop
dec
ja
push
mov
dec
insl
inc
xor
leave
fs
xor
jmp
push
inc
cld
sbb
sub
xchg
dec
lea
jge
clc
jecxz
cmp
inc
rcll
adc
cmp
popf
cmp
xchg
aam
outsb
jmp
pop
pop
leave
adc
cwtl
cmpsb
fisttpl
fldl
into
ror
lods
cmpsb
push
stos
adc
fadds
ja
inc
call
insl
xor
adc
into
push
in
int
gs
adc
push
mov
mov
cmpsl
mov
lods
or
dec
mov
mov
mov
test
pop
call
dec
mov
pop
daa
xlat
pushf
mov
jmp
and
cmp
push
inc
mov
jno
add
and
cmp
arpl
cmp
xchg
mov
sub
test
ret
or
shlb
rclb
movsl
cmp
ret
in
dec
out
sbb
push
sub
clc
out
cmp
pop
push
cmc
inc
and
ja
xchg
fldenv
add
dec
cwtl
addr16
dec
in
sub
add
bound
jnp
sahf
add
mov
scas
retw
adc
dec
push
test
bound
jp
cmpl
adc
cmp
jmp
sub
inc
sti
xor
jmp
push
xchg
and
inc
outsl
add
fimull
sti
xchg
pop
inc
out
jne
mov
iret
shr
jp
jne
sub
andb
aam
outsb
in
popa
push
mov
push
int3
rcrl
sub
dec
and
fcompl
mov
mov
stos
sub
mov
lods
test
les
out
shrl
fwait
bound
mov
movsl
cli
xor
cmp
push
adcb
movsl
xchg
add
jmp
out
pop
pop
mov
andl
mov
rcr
insl
mov
push
subl
mov
sbb
sub
fs
xor
sub
dec
ss
add
cli
out
or
fwait
je
mov
push
sahf
insl
push
push
pusha
xor
popa
mov
lods
mov
lods
sub
leave
push
mov
inc
cwtl
lods
mov
aas
sbb
and
jecxz
fnstcw
incb
mov
pusha
pop
jne
mov
push
aad
cmpsb
add
shll
xor
adc
sub
mov
mov
mov
jne
ja
cmpsl
stos
push
js
mov
xor
lea
adc
jle
data16
dec
ret
outsb
shrl
or
jmp
dec
push
out
lds
lods
aas
stos
inc
sbbl
cmp
mull
into
or
dec
dec
or
push
das
adc
sbb
aam
lods
sahf
mov
shrb
lret
test
xchg
pop
xchg
and
imul
pop
jne
jno
mov
dec
insl
mov
jge
lds
inc
out
xor
sub
rcr
imul
imul
test
pop
imul
lds
lods
cmp
xchg
nop
dec
xchg
xor
gs
xor
cltd
test
bound
jnp
cld
adc
in
stc
sbb
push
cs
out
jle
fisubrl
sub
insl
pop
ret
int3
jns
sbb
js
mov
movsl
lock
sub
fildl
loop
sub
loopne
popa
mov
jne
jo
movb
sub
iret
adc
xchg
outsl
pop
xor
cmp
mov
cmp
inc
lods
or
pop
fsubl
out
jne
in
fnsave
imull
ret
pop
pop
out
sub
and
cs
inc
shll
xor
and
sarl
in
inc
push
shrb
mov
out
out
dec
movsl
mov
not
or
mov
inc
mov
pop
aas
inc
fwait
mov
iret
rorl
mov
mov
push
fidivl
insb
stc
movsl
arpl
mov
cmp
xor
mov
orl
mov
cli
repnz
cmpsb
cmpsl
iret
rorl
and
clc
shlb
and
mov
test
rcll
and
xchg
xchg
pop
ja
mov
lods
jae
mov
push
cld
mov
movsb
mov
outsl
push
xchg
mov
sbb
sti
pop
xchg
movsb
jbe
in
int
icebp
imul
mov
call
add
push
pop
into
jb,pn
mov
cmp
jne
or
push
adc
xor
shrl
lret
cli
popf
repnz
retw
mov
mov
and
gs
or
mov
icebp
dec
sub
jb
dec
ret
pusha
jp
mull
inc
and
mov
push
mov
cmp
pop
out
jae
mov
imul
rorl
fsubp
sbb
loope
inc
inc
int
mov
inc
sbb
mov
mov
cltd
gs
nop
repz
popf
mov
mov
dec
cld
mov
dec
mov
out
xchg
aad
xor
push
cmpsb
jno
jg
aad
mov
or
inc
xor
xchg
mov
xchg
daa
push
jo
int
sbb
mov
insl
jae
push
scas
mov
mov
sbb
push
cmp
mov
add
in
shll
mov
aad
sub
icebp
sar
sub
lods
jge
dec
les
cltd
into
and
ficomps
xchg
cmpsb
dec
jae
dec
movsb
adc
push
add
add
cmp
inc
xor
call
test
jle
pop
mov
js
push
add
rorl
pop
out
movl
lods
or
or
sbb
mov
out
mov
mov
jge
xchg
call
xor
pop
popl
or
int3
loope
pushf
jae
int3
xor
jbe
repz
lahf
repz
inc
sub
cmp
sub
icebp
loop
rolb
rorb
cwtl
test
loop
cli
fwait
xchg
xlat
push
and
les
imul
jecxz
out
outsl
scas
and
mov
jecxz
fsubs
fwait
movsl
fcoml
sub
pop
mov
and
into
nop
jl
and
out
clc
repz
ficomps
pop
loopne
adc
inc
in
cld
cmp
aam
push
xchg
xor
mov
push
mov
fcomps
in
outsl
fnsave
cmp
incb
add
jne
iret
jle
nop
mov
ss
iret
fs
xor
xor
inc
pop
imul
daa
mov
jl
ret
clc
mov
loop
aaa
ficoml
clc
jge
in
adc
loope
bound
mov
sbb
dec
inc
les
sarb
cwtl
lret
daa
dec
enter
pop
xchg
sbb
pop
mov
andb
adc
pop
in
stos
push
stc
xor
push
inc
adc
sub
hlt
mov
dec
aad
xchg
sub
mov
rcl
scas
insl
mov
xor
xchg
cld
cli
cmp
cmpsb
imul
stos
cmpsb
inc
or
std
dec
pop
cmp
or
push
jmp
pop
hlt
fnsave
pusha
push
andb
sub
aas
and
pusha
push
xchg
mov
lods
dec
cmpsb
jne
mov
hlt
jo
sub
push
sti
cmp
fisttpl
mov
xlat
mov
fcmovnbe
popf
lahf
mov
mov
stos
imul
jbe
pushf
sub
aaa
lock
mov
mov
dec
out
mov
clc
mov
insb
or
jecxz
xor
xchg
pop
pop
in
mov
or
repnz
jno
sbb
lods
repz
push
fiaddl
dec
sub
mov
repnz
xor
add
movsl
pop
push
shrb
jbe
xchg
cwtl
adcl
push
rclb
aam
push
or
aam
les
xor
js
mov
pop
xor
cmp
rcl
jae
fcompl
xchg
sbb
push
add
roll
add
cs
into
mov
aam
loopne
dec
aam
ja
sbbb
xchg
sub
mov
std
hlt
mov
dec
popf
lret
sub
mov
mov
jbe
sbb
lods
out
cs
dec
xchg
imul
inc
fimuls
pushf
cmp
cmp
sbb
sub
mov
mov
jo
inc
and
pop
cmp
mov
int
andb
push
sahf
dec
cmp
in
jbe
inc
idivb
xor
sub
pop
or
gs
rcr
fmuls
repnz
inc
aaa
aaa
mov
xchg
aas
aas
fisubl
mov
xor
and
mov
jbe
pop
in
sbb
pop
inc
pop
add
jne
in
fstl
popa
flds
and
push
adc
pop
arpl
mov
int3
and
les
cltd
inc
jecxz
adc
inc
repnz
in
push
hlt
lret
cvttps2pi
push
int
movsb
mov
pop
lds
inc
add
rcll
ljmp
or
ret
inc
dec
movsb
sahf
adcl
lcall
sbb
cs
out
adc
in
sbb
aam
xchg
adc
xchg
shll
iret
jecxz
ss
scas
addb
xor
pop
jo
xchg
and
test
sahf
push
int
cmpsb
movsl
nop
mov
pop
scas
dec
push
push
and
addr16
test
add
mov
mov
sub
pop
sub
les
mov
mov
jmp
mov
xchg
cmc
push
fld
mov
push
stc
mov
arpl
or
sub
mov
adc
xor
or
mov
shll
cltd
loopne
fwait
jl
test
cmpsl
roll
hlt
lret
push
inc
loopne
and
neg
inc
cmp
cmpsl
sbbl
ss
nop
ficompl
xchg
inc
and
xchg
fimuls
pop
cmpl
movsb
into
clc
adc
fisttps
add
inc
xchg
inc
call
push
nop
push
mov
cld
scas
lock
and
add
int
cmp
jne
mov
mov
or
mov
fisubrs
pop
bound
mov
rcll
adc
xchg
and
cld
mov
inc
repz
mov
pop
mov
jl
pop
xor
mov
xorl
shll
and
cmpsl
rorb
mov
jno
lcall
data16
je
mov
mov
sti
sub
xchg
ds
sti
mov
adc
sbb
fwait
subb
pusha
call
hlt
outsb
movb
and
inc
subl
and
pushf
mov
sub
test
fcmovne
movsb
adc
std
mov
or
cltd
bswap
gs
pop
lahf
cli
es
push
stc
cmp
mov
jo
dec
lods
adc
sar
mov
and
fcomi
das
cmpsl
in
mov
ss
sub
xchg
pop
lret
fiaddl
xlat
movsb
jmp
test
and
icebp
or
xchg
test
pop
sub
lret
cmpb
movsb
outsb
sbbl
pop
imul
push
mov
xchg
pop
fwait
enter
je
pusha
fucom
sbb
mov
inc
adc
in
fwait
rcrl
pop
inc
fwait
cmp
or
or
ret
andl
insl
repnz
jb
cli
pop
jle
or
sub
movsb
xchg
in
inc
cmp
outsl
icebp
shlb
pushf
inc
int3
iret
movsl
add
mov
inc
cmp
cmp
xchg
daa
xchg
or
xlat
pop
lods
loope
add
sbb
add
sbb
je
andl
sub
cmp
or
mov
xchg
xor
xor
jle
dec
xchg
rcll
mov
ja
stc
movsl
loope
out
xor
icebp
stc
and
xor
and
push
cmp
test
add
xor
mov
popa
out
jp
repnz
cmp
cwtl
lock
push
ret
add
outsl
insl
aas
jnp
cs
aas
xor
xchg
pushf
mov
mov
jge
pop
cmp
sub
sti
cli
jg
adc
pop
inc
outsl
add
test
pop
dec
popa
and
out
mov
idiv
sbb
push
filds
xchg
xchg
xlat
insl
fstl
fnstcw
jns
mov
and
movsb
fbstp
fmull
shl
jle
pop
scas
adc
fs
add
pop
jp
scas
mov
push
dec
idivb
ror
repnz
and
fs
roll
and
mov
negl
inc
mov
leave
lea
adc
pop
jne
ja
mov
or
inc
out
jecxz
test
xor
and
mov
xchg
fs
cmp
cmpsl
movsl
in
call
cmp
and
mov
push
cmp
add
enter
cmpsl
cld
xchg
lret
cmpsl
xor
jno
jecxz
fstps
dec
fwait
mov
rolb
sub
jo
jb
and
sub
sub
insb
adc
cltd
cld
push
bound
negb
int3
mov
popa
adc
mov
hlt
lods
mov
fdivl
xor
xchg
lret
lock
mov
test
inc
pop
dec
push
sahf
add
out
and
sbb
imul
inc
mov
lea
mov
repnz
jae
repz
movsb
inc
and
stos
mov
sbb
in
mov
sub
scas
add
and
js
dec
mov
sahf
stos
movl
xor
cli
mov
and
faddl
and
call
adc
icebp
mov
arpl
imul
arpl
in
sbb
loopne
in
test
nop
insl
rcrl
sbb
lds
push
cmp
lds
and
into
mov
mov
xor
cmp
dec
clc
das
xorl
fimuls
or
jno
dec
push
lret
dec
addl
adc
jle
sub
xchg
cmpsl
sbb
pop
dec
sbb
jge
add
and
xchg
shll
push
popa
out
sub
shlb
ds
jg
mov
sub
movsb
inc
fstpl
imulb
xor
dec
imul
aaa
xchg
dec
mov
cld
add
mov
mov
das
int
pusha
mov
sbb
mov
and
add
movsl
xchg
lcall
jg
hlt
dec
jb
ljmp
lods
mov
les
push
das
cwtl
add
inc
lret
fldenv
fcompl
hlt
scas
stos
xchg
movl
test
pusha
shrb
cltd
sub
jnp
dec
loope
pop
movsl
fimull
sub
dec
into
fs
xchg
push
inc
shlb
add
popa
aas
xorb
inc
aam
cwtl
jmp
adc
add
pop
fwait
outsl
and
add
icebp
adc
dec
fisubs
push
jp
loopne
jge
or
fs
or
ss
loopne
mov
frstor
cli
mov
lea
in
ret
cld
xchg
adc
mov
mov
mov
pop
push
push
aam
stc
mov
aaa
inc
gs
subb
clc
mov
adc
shr
add
dec
fwait
jae
cmpsl
dec
mov
fcmovnu
scas
push
loope
test
aad
dec
mov
ds
fs
xchg
in
mov
cmc
and
sbb
dec
or
int
cmpsb
add
pop
mov
pop
shlb
in
or
je
stc
fcomi
jbe
scas
out
aam
sbb
sub
mov
nop
in
mov
push
pop
ljmp
lahf
iret
call
inc
mov
cmp
call
mov
leave
adc
push
das
lcall
sbb
mov
in
or
stos
mov
les
stos
ja
mov
stos
adc
outsl
push
adc
xor
xchg
mov
mov
out
leave
in
lret
cld
cmpsl
test
push
ljmp
scas
insb
xchg
lock
dec
fcomip
xor
add
addr16
push
rorl
dec
jne
inc
jle
fs
je
je
mov
decb
lock
fmulp
push
ja
dec
dec
and
int3
js
inc
or
lock
pop
mov
and
push
mov
sbb
xchg
add
inc
fisubs
pop
lods
push
leave
ds
mov
shlb
or
cmp
std
or
lcall
sbb
lcall
in
push
aad
test
mov
sbb
stos
cld
dec
bound
testb
or
push
fcoml
pop
jo
rclb
mov
cmp
mov
cwtl
shl
jmp
jns
gs
das
repnz
pop
and
jge
sysenter
jle
add
ja
stos
sub
lahf
icebp
out
lcall
mov
mov
and
ss
bound
loope
pop
xchg
cmpsb
mov
mov
ds
sub
xchg
jne
aas
fsubrs
loope
sbb
inc
movsl
and
repz
out
rolb
adc
cld
lcall
cmpsl
ja
dec
inc
fwait
ds
push
arpl
lcall
inc
scas
int
sub
jo
lock
icebp
add
xchg
cmp
stos
pop
mov
mov
sti
loop
test
inc
inc
pop
aad
hlt
or
push
shl
pusha
jae
adc
dec
pushf
xor
mov
add
mov
stos
fstsw
push
ja
lods
je
mov
push
push
add
int
push
fldcw
or
lahf
or
cmpsb
lods
push
aad
and
sti
outsb
sbb
stc
jno
addb
pop
add
add
testl
and
aad
adc
movsb
mov
xor
addr16
insb
lods
dec
pop
jp
dec
or
jb
cmp
pop
ds
inc
movsb
std
add
xchg
sub
sbb
das
ret
inc
xchg
icebp
dec
pop
inc
jecxz
outsb
popl
lret
iret
int
repnz
sbbl
xor
xor
adc
repz
xchg
loopne
sbb
sub
ficoml
mov
movsb
push
xchg
aaa
xchg
stos
int
in
aaa
jmp
lret
jmp
fildl
dec
jl
lea
ljmp
cmp
jne
mov
cs
nop
pop
xchg
xor
xor
mov
out
mov
repnz
int
or
inc
rorb
cmp
adc
iret
inc
in
sub
add
push
jbe
fists
jne
inc
negb
aaa
divb
push
cmc
xchg
mov
mov
dec
sub
cmp
add
fidivrs
mov
nop
push
xlat
out
clc
outsl
loop
insl
inc
ja
lahf
gs
gs
mov
dec
lods
mov
pushf
xor
xlat
cmpsl
xchg
jno
pushf
enter
stc
mov
xchg
sub
jg
jns
sub
scas
nop
pop
shlb
sub
add
jp
loop
xchg
xor
pop
xor
xchg
das
out
mov
cmc
push
jecxz
lret
dec
pop
clc
mov
cli
decb
pop
orb
loop
scas
pop
and
dec
pop
xor
mov
shll
dec
jno
sbb
cmp
dec
jb
pop
xchg
mov
dec
inc
sbb
cmp
test
mov
lret
adc
mulb
mov
jmp
adc
mov
dec
mov
jns
lock
push
call
sub
arpl
sbb
dec
rclb
mov
movsl
push
pop
iret
adc
push
xor
in
es
in
and
push
xor
lret
push
mov
popa
movsb
jb
jns
xor
sbb
xchg
cmp
mov
adc
add
sub
loopne
ss
adc
mov
cmovle
mul
push
scas
inc
std
push
or
mov
push
pop
enter
cwtl
push
cli
adc
push
mov
or
and
dec
mov
jb
nop
jns
in
outsb
addl
sbb
dec
cmpsb
nop
sbb
cmp
stos
push
daa
cmp
xchg
les
fwait
mov
add
add
pop
clc
dec
ljmp
pushf
xchg
xchg
out
je
cmp
aad
inc
push
repz
mov
xchg
sub
cmc
in
les
sub
jae
xchg
aam
jmp
out
xchg
mov
rcll
push
addl
notb
mov
popf
and
sub
add
xchg
pop
jnp
loopne
xor
fcoml
pusha
sahf
add
das
popa
dec
mov
loope
cli
mov
add
outsl
jl
repz
bound
xchg
jge
imul
test
pop
pop
mov
ss
cmp
leave
push
pop
sahf
into
inc
lds
std
pop
dec
movsl
ret
mov
and
rclb
les
mov
in
push
movsb
scas
ds
sbbl
mov
and
xlat
cmp
mov
test
push
inc
pusha
movsl
cmp
push
movsl
rorb
xchg
repz
sub
addr16
call
add
jae
jnp
mov
ficomps
imul
scas
push
jns
test
mov
daa
stc
lock
scas
sub
xchg
dec
mov
dec
mov
out
rclb
scas
xor
int3
and
add
cmc
inc
jp
sbb
inc
call
lea
lds
out
test
inc
add
bswap
xlat
mov
decl
pop
stos
out
add
xor
lret
sub
xchg
jno
subb
sub
cmpsl
test
movsb
push
xor
imul
dec
xor
sub
mov
aam
std
mov
es
mov
daa
ficompl
mov
insl
and
cmp
call
add
vcvtsi2sdl
sbbl
enter
inc
lahf
ljmp
pop
cli
sub
mov
cli
jge
mov
in
es
sbb
popa
pop
and
sbb
mov
pop
push
pusha
fwait
push
cli
ljmp
xchg
sbb
push
add
cltd
jp
lods
outsl
sbbl
adc
adcl
dec
mov
iret
push
arpl
mov
scas
lret
or
jne
aas
pusha
call
popf
push
rcrl
pop
jg
repnz
leave
jbe
cmc
dec
add
lea
cs
pop
mov
xchg
repnz
lcall
cmp
sbb
mov
ret
xor
jle
push
frstor
hlt
mov
loop
lods
sub
divl
scas
inc
lcall
addr16
lods
popf
cli
sub
add
mov
jns
out
divl
out
push
int3
call
mov
jb
inc
lret
in
stc
mov
int
or
xchg
fstp
dec
push
sbb
stos
xchg
pushl
out
jb
xchg
cmpl
cmp
ret
fidivl
jae
jb
sbb
cli
adcb
addr16
aad
stos
jge
lods
incl
jb
mov
mov
mov
incl
cmp
sbb
dec
repnz
cmc
sarb
enter
push
outsb
and
dec
and
into
rclb
into
adc
sbb
or
aam
sub
stos
int
mov
hlt
and
add
jae
pop
cmpsb
hlt
ret
add
aas
push
rolb
pop
ret
hlt
ljmp
mov
pop
xor
les
ss
repz
inc
jmp
and
or
push
xchg
mov
mov
cltd
adc
aas
cmp
xor
jl
bnd
cmp
ds
les
xchg
push
inc
and
icebp
testl
mov
jns
in
mov
test
push
dec
dec
push
sbb
adc
mov
int3
xor
xor
cli
and
bound
xchg
ss
inc
or
pop
xchg
adc
aas
add
cltd
test
faddp
adc
pop
rcrl
lret
aam
sbb
xchg
pushf
add
sub
mov
adc
lock
xor
lods
stos
leave
or
adc
mov
out
pushf
add
mov
sub
xor
es
dec
stos
subb
push
jns
add
int
movsb
cmpsb
iret
pop
outsb
cmp
loop
clc
lods
sarl
dec
ja
xchg
push
in
inc
jo
stos
sub
push
mov
aaa
jmp
fstl
mov
lret
mov
pop
pop
call
insl
add
test
scas
push
pushf
fsts
push
or
cmpsl
fstpt
lret
xchg
sub
or
and
popf
pandn
or
loop
movsb
pop
insb
orb
push
cmpsl
cmp
mov
xor
es
inc
jbe
and
sub
data16
out
in
sub
jmp
push
cmp
bound
xorb
in
mov
jb
lock
push
cmpsl
daa
pop
insb
dec
mov
lea
int3
add
sub
mov
fidivl
fwait
inc
mov
pop
stos
repnz
in
pop
inc
cmp
xchg
lock
mov
loop
jno
lret
int3
bound
sbb
cs
xchg
sbb
repnz
push
dec
loope
mov
fdivl
xor
loope
sarb
inc
push
push
push
in
pushf
sbb
mov
sbb
mov
cmc
enter
and
adc
ja
shr
shl
add
mov
add
push
out
inc
sub
pop
mov
push
cmp
jp
nop
rcl
jae
or
cmp
in
repnz
andb
lahf
pushf
adc
xor
je
xor
xor
or
xor
dec
jp
test
ret
aad
daa
scas
pop
push
inc
faddl
mov
shrl
test
leave
mov
and
dec
sarl
and
mov
shlb
mov
cmpl
testl
bound
mov
call
xor
mov
or
stos
jmp
into
xor
std
mov
hlt
jmp
cmp
loop
ja
jl
popa
xchg
shlb
test
add
mov
sbbl
adc
add
dec
dec
shll
adc
aam
mov
sub
or
cmpsb
rcrl
dec
stc
xlat
inc
push
imulb
mov
pop
sub
push
outsl
stc
sarl
push
int
mov
gs
inc
out
jge
ds
divb
sub
out
stos
or
cmp
shll
fcoml
les
out
and
scas
jns
mov
pop
call
rolb
es
dec
lods
xor
js
shl
push
sahf
xor
popf
cmc
ss
pop
insb
xchg
popa
dec
lods
push
and
xlat
jb
push
mov
xchg
pushf
fisubs
mov
ret
pusha
mov
gs
pop
mul
mov
mov
sahf
aas
fldenv
pop
adc
arpl
in
out
pop
inc
inc
lcall
dec
mov
pop
jae
jmp
lock
repz
into
sbb
push
mov
test
stos
aaa
push
xchg
and
ljmp
mov
in
test
rep
daa
jbe
pop
cmpsb
mov
rcrl
shl
pop
xchg
stos
leave
sbb
repnz
jb
into
movsl
push
aad
jnp
mov
daa
inc
inc
out
pop
mov
fidivrs
push
and
sub
push
sbb
jg
rcll
sub
and
test
sub
insl
out
mov
call
mov
pop
push
push
ficomps
fwait
inc
sbb
scas
cmp
and
push
stc
xor
test
dec
fs
mov
cmp
cmpsl
sub
scas
or
add
lods
mov
out
outsl
js
ljmp
sbb
ret
lods
shr
int
push
cmp
scas
scas
mul
and
push
pop
push
mov
test
add
stos
test
ljmp
pop
rcrb
jle
lea
pop
push
inc
or
aas
jnp
add
cmp
mov
fidivl
faddl
scas
xor
scas
mov
cltd
cmp
rcr
bound
cld
xchg
mov
xor
test
outsl
std
inc
jecxz
sbb
xchg
mov
inc
or
or
lcall
add
mov
xlat
xor
daa
jle
fcmovnbe
push
inc
bound
mov
inc
jl
jo
enter
mov
pushf
and
or
ret
bound
mov
jo
push
adc
test
movsb
add
add
sub
jns
inc
outsb
pop
stos
mov
iret
aas
test
bound
popa
adc
lock
inc
mov
in
push
push
rorl
inc
jae
lahf
int
lods
pop
sbb
push
imul
les
jl
mov
lods
mov
clc
and
cmp
or
mov
mov
push
lods
dec
aas
cmp
movb
xor
xor
cwtl
clc
mov
sbb
ds
movsl
lcall
iret
pushf
jne
cmc
dec
or
lock
sbb
aaa
jno
lds
stc
sbb
mov
movsb
mov
cs
xchg
pushl
shrb
or
popa
in
pop
dec
push
ds
or
dec
ret
add
test
push
xor
scas
lods
sahf
mov
xor
mov
xchg
or
inc
inc
js
jnp
mov
mov
add
rcll
out
scas
stos
lods
jle
dec
cmp
movsb
bound
xor
out
lods
jg
test
jns
dec
inc
push
xchg
jo
lods
xor
pop
imul
outsl
dec
inc
test
repnz
dec
or
cwtl
or
jle
push
push
mov
adc
cld
pop
clc
mov
pop
movsl
pop
jmp
test
push
jp
xchg
sub
stc
dec
fisubrs
sbb
xchg
sub
jae
add
lea
push
sti
in
stos
dec
pop
jne
loop
inc
cmp
sub
mov
or
or
pop
jmp
sub
clc
enter
ret
ret
adc
sub
stc
bound
pop
lock
cwtl
dec
adc
loop
dec
lock
pusha
dec
subl
pop
in
sbb
inc
add
enter
push
lret
arpl
mov
pop
loop
mov
dec
fsubrl
loopne
mov
xor
mov
sbb
insb
pop
daa
pop
out
into
in
test
sbb
cltd
aaa
pop
into
inc
shlb
adc
inc
mov
pop
push
ret
popf
call
std
adc
mov
inc
mov
in
aaa
cmp
sub
lea
cmpsl
movsl
cmp
push
int3
enter
xchg
push
inc
push
out
jb
inc
sbb
push
jno
mov
dec
sbb
leave
inc
pop
lods
enter
sbb
in
fstps
and
jbe
inc
cli
inc
enter
negl
test
dec
cmc
push
repz
sbb
jnp
and
and
shrb
lock
xchg
dec
push
std
pop
xchg
cmp
cltd
insl
xor
lods
aam
lret
sub
scas
push
fistpl
int3
sub
sub
ret
addr16
cmp
hlt
pop
pop
mov
mov
stos
mov
test
pop
xor
push
push
sbb
pushf
sarl
jae
push
popa
jnp
outsb
scas
pop
lea
cmp
dec
in
rorl
dec
enter
xchg
es
clc
xor
jecxz
in
sub
int
dec
rclb
sub
mov
or
imul
das
jmp
jg
pop
jl
mov
ss
test
inc
icebp
cld
inc
iret
xchg
out
inc
nop
push
sub
mov
mov
jnp
out
and
adc
xor
jo
sbb
jae
inc
insl
dec
pop
int
fdivrs
les
lret
mov
enter
movsb
shrb
xchg
callw
xchg
lret
outsl
cmpsb
cmp
inc
mov
dec
ret
divb
fsubrs
popa
cwtl
xor
pop
xchg
cmpsl
or
mov
mov
fisubrs
popf
dec
pop
lods
pop
lahf
jno
das
mov
mov
inc
sbbl
leave
xor
mov
mov
push
filds
divps
inc
aaa
xchg
adc
sbb
test
sbb
sti
pushf
mov
adc
pop
jo
stos
cwtl
popf
push
out
sbb
loop
fwait
ljmp
shlb
shr
xchg
ret
inc
dec
fsubl
inc
xchg
jno
inc
mov
rcrl
xchg
daa
fucomi
xor
push
movsl
cmp
adc
mov
adc
xchg
js
push
fwait
sti
mov
cli
pop
loopne
arpl
dec
fsin
adcb
mov
push
imul
dec
mov
xchg
es
and
jbe
stc
insl
sbb
lock
mov
jg
loopne
xchg
sbbb
push
xor
js
orl
stos
add
stc
stos
inc
mov
in
xor
mov
daa
inc
jmp
repz
pop
and
js
sbb
cs
sbb
push
mov
pop
mov
mov
aam
inc
daa
mov
mov
popf
dec
adc
call
xorb
dec
jns
jb
xor
add
in
push
jge
lret
mov
test
aad
jg
es
push
adc
out
sub
repnz
xor
rcll
popf
mov
or
out
xchg
mov
std
mov
jg
sbb
jbe
rolb
iret
jmp
dec
pop
dec
lods
sti
or
out
fsubrl
jae
sub
sbb
clc
faddp
addr16
test
xor
push
outsb
rorl
insb
mov
mov
mov
pusha
out
iret
or
cs
addr16
jo
jns
add
in
adc
or
mov
aaa
sbb
push
iret
lods
and
jbe
mov
lcall
mov
jge
cmp
insl
in
dec
push
dec
inc
mov
pop
push
fisubrs
ret
popf
fucomip
mov
aaa
dec
loop
sbb
lock
mov
pop
in
sbb
les
pop
cmp
cmc
mov
adcl
loopne
decb
fcoms
mov
and
mov
inc
js
jp
jnp,pn
mov
add
cmp
popa
and
test
inc
psllw
inc
iret
test
ret
movsb
jecxz
xchg
adc
stos
mov
xlat
lret
rorb
sbb
and
incb
das
adc
adc
fdiv
fxch
mov
scas
adc
ds
scas
repnz
loope
or
sbb
pop
gs
xchg
daa
sbb
inc
fs
rclb
ds
cmp
xchg
aam
add
dec
bound
dec
ljmp
add
jbe
xor
add
pusha
or
js
jle
xor
mov
adc
mov
scas
mov
mov
pop
xchg
fmulp
mov
inc
shlb
inc
mov
dec
lret
out
inc
mov
aam
movsb
jmp
jle
shlb
dec
lods
lret
fs
cmp
pop
scas
ret
adcl
jbe
sahf
cmpsl
fsubl
pop
dec
pop
pop
rorb
aaa
cwtl
inc
push
xor
mov
xchg
and
xchg
sbb
aam
mov
fwait
xlat
jne
repnz
mov
mov
cs
fs
stos
stc
out
xlat
daa
mov
push
xchg
add
cmpb
jns
mov
xor
std
stc
aad
ret
insb
dec
xchg
or
dec
xor
ficoml
out
jmp
call
popf
outsl
out
mov
repz
fucomp
mov
int
rcrb
inc
test
and
enter
stos
shll
or
adcb
dec
in
fwait
sbb
add
ds
cmp
jne
sbb
rorb
imul
repz
incb
clc
push
jl
mov
pop
push
bound
adc
and
roll
popw
mov
jnp
in
aas
cli
dec
pop
imul
jle
add
data16
cmc
ret
cmp
cld
fcoms
mov
cmp
cmp
dec
call
push
pop
jg
mov
mov
les
add
ss
mov
sarb
pop
icebp
scas
jmp
mov
jle
pop
push
lret
jb
push
rclb
jl
adc
mov
int
push
pop
sub
fwait
and
adc
xor
popf
xchg
adc
push
test
pop
adcb
jge
pop
aad
das
and
les
jp
gs
movsl
mov
out
push
pop
rcrl
push
nop
ss
pop
mov
pop
dec
xchg
sahf
mov
pop
dec
insb
mov
cmp
lret
pop
inc
sub
out
push
or
mov
pop
aaa
es
lahf
loopne
jnp
insl
sbb
popf
xchg
arpl
cmp
jbe
into
int3
adc
jmp
test
in
movsb
sub
fisttpl
das
mov
std
or
repnz
push
inc
lds
vpxor
cli
test
dec
fisubs
js
int3
add
stos
mov
inc
int
mov
je
mov
adc
inc
in
and
sarb
notb
sbb
cmp
xchg
mov
adc
inc
adc
inc
push
mov
sub
mov
jns
inc
dec
scas
in
xchg
addb
rorl
pop
loopne
lds
mov
add
mov
into
leave
cwtl
add
sub
jmp
outsl
jns,pn
sbb
mov
bound
loopne
inc
in
mov
shl
sbb
pushf
xchg
sub
add
fmuls
jl
rclb
adc
jp
icebp
or
je
arpl
out
or
fldenv
mov
repz
les
push
ret
adc
inc
bound
aaa
adc
scas
stos
jbe
fisubl
add
xor
add
sahf
jle
lahf
mov
mov
cmp
push
xor
cmp
iret
or
fcmovnbe
dec
sbb
rcl
pushl
mov
rcrl
sub
mov
mov
fisttpl
push
lods
add
mov
popf
jne
gs
mov
cltd
stc
mov
lods
or
dec
or
lcall
lods
test
pop
mov
jmp
pop
pop
fistl
subl
faddl
xchg
jnp
nop
stc
push
popa
fstl
mov
xchg
sbb
push
popa
ret
mov
cs
or
cmp
sub
xor
popa
jg
or
inc
add
add
sbb
pop
imul
mov
mov
dec
pusha
mov
jae
or
jbe
sub
mov
aad
cwtl
xchg
movsb
rorl
aad
fwait
hlt
gs
std
push
dec
jle
fs
jnp
dec
int3
jecxz
mov
bound
mov
mov
loope
xor
adc
jl
cwtl
mov
js
push
mov
sbb
mov
dec
mov
addl
mov
xor
inc
pusha
js
mov
dec
mov
sbb
dec
mov
cwtl
fisubrl
in
outsl
xor
pop
and
and
mov
jbe
idivb
mov
insb
stos
arpl
push
sbb
popf
lret
into
daa
fdivrs
sub
and
in
push
inc
mov
xchg
dec
dec
sub
push
fst
jmp
sub
push
xchg
and
adcb
test
xor
push
fsubr
inc
fcoml
notl
loop
jae
push
daa
int
adc
ret
mov
enter
mov
push
jae
adcl
inc
push
or
and
icebp
push
ret
pop
mov
and
test
clc
sbb
xchg
pusha
mov
repz
leave
mov
fnsave
dec
jns
out
mov
push
push
sbbl
fstps
stc
adc
push
dec
es
test
mov
data16
mov
dec
and
xchg
pop
xor
cmp
mov
addb
imulb
jp
mov
add
pop
testl
pop
fwait
sub
outsb
inc
push
imul
shlb
sti
push
shll
mov
gs
stos
sub
adc
mov
pop
xchg
test
and
xchg
cli
ja
fcmovnbe
add
movsl
in
movsl
jle
stc
push
mov
cmp
fstl
sub
sub
fwait
ljmp
imul
les
sbb
sbb
pop
dec
jmp
pushf
and
shll
mov
mov
fdivrl
jle
js
scas
or
mov
and
cmp
mov
mov
enter
enter
mov
pop
test
adc
sahf
add
fsubr
jno
ss
cwtl
test
aam
sub
repz
mov
rcll
and
pop
xchg
outsl
inc
push
or
mov
fsubs
inc
in
cmpsl
or
cmpsl
mov
jecxz
xchg
sub
xor
andl
into
add
inc
ret
pop
mov
daa
incb
arpl
iret
aam
cltd
pop
sub
push
mov
lea
dec
in
mov
les
notl
adc
std
mov
into
loope
test
call
rorb
cmc
inc
or
loop
add
jp
mov
daa
hlt
sbb
sbb
push
aaa
dec
sub
jne
pop
mov
sbb
movsl
sahf
or
push
lods
insb
mov
sbb
jb
cmp
aas
in
fxam
inc
shlb
nop
jns
jmp
mov
decb
push
push
xchg
clc
enter
ret
icebp
pop
loop
xchg
mov
jl
testb
cmp
test
adc
or
pop
xchg
sub
inc
repnz
lea
sbb
nop
mov
cld
dec
cwtl
jl
xchg
add
sub
clc
in
mov
mov
pusha
and
out
jg,pn
iret
push
push
inc
stos
mov
aas
filds
jo
stos
push
push
adc
shrl
insb
addr16
in
mov
mov
cmp
lods
xor
cmc
mov
jb
adc
pop
scas
icebp
jle
mov
mov
jbe
jmp
outsl
sarl
mov
jbe
pop
xchg
sahf
cli
jl
ret
fwait
push
clc
popf
inc
jae
jge
and
inc
xchg
adc
mov
mov
or
add
pop
decl
pop
jl
add
ret
lahf
xchg
xchg
dec
dec
inc
xor
xchg
repz
xor
fwait
mov
int
rclb
outsl
push
jg
clc
mov
cmp
lock
pop
jg
jmp
lock
test
movsl
cmpsb
xor
mov
stos
shlb
repz
imul
gs
ds
push
dec
popf
xchg
sar
dec
popa
mov
mov
jnp
imul
fs
jmp
addr16
or
jae
repz
and
push
adc
mov
mov
add
icebp
das
jns
push
cmp
es
aad
in
adc
mov
mov
aas
xor
andl
lret
sub
dec
push
jo
jmp
movsl
xchg
aaa
test
sbbl
pop
pop
dec
into
xlat
into
call
mov
addr16
xor
stc
pushf
and
pop
out
mov
or
aam
and
leave
hlt
jmp
loop
add
push
or
insl
mov
adc
fs
push
in
test
fists
dec
fists
rol
add
test
loopne
inc
push
leave
push
lahf
test
mov
add
sub
mov
popa
inc
mov
imul
xchg
and
cld
or
pop
ja
in
ret
aam
paddq
repz
rorl
mov
add
jne
adc
decl
imul
jae
xchg
clc
sti
add
pop
push
imull
and
jge
or
pop
fidivs
mov
inc
dec
cli
and
mov
and
dec
ficoms
pop
dec
sub
cli
loop
dec
imul
mov
mov
ss
out
jo
mov
test
xor
cmp
xchg
lret
je
aaa
mov
and
sbb
mov
push
push
pop
fs
pop
cmpsb
pop
xor
or
jb
add
ud1
ja
orb
xchg
iret
insl
xchg
divl
or
fs
test
orb
mov
cs
imul
lock
mov
add
and
arpl
pop
mov
ret
xor
inc
shl
adc
and
dec
pop
or
cmp
jne
dec
mov
xor
mov
or
xchg
push
adc
push
xor
cmpsb
ja
cld
push
jl
mov
mov
xor
jbe
push
push
mov
imul
mov
and
sub
push
pop
lahf
push
mov
xor
push
bound
lgs
call
xchg
cli
roll
stos
or
mov
testb
mov
adc
outsb
fwait
adc
push
xchg
aad
add
imull
cmp
push
cltd
mov
jb
cmp
idivl
sahf
clc
sub
aaa
jo
pop
pinsrw
mov
jecxz
mov
pop
fldcw
sub
lock
mov
xor
test
add
xor
xlat
inc
inc
in
lods
insb
leave
jl
divb
test
push
ret
sub
hlt
mov
hlt
es
sub
loop
sti
inc
pop
push
jne
xor
cmp
mov
insb
adc
pop
mov
xchg
arpl
push
sbb
rcll
dec
mov
mov
lods
lea
cmpsl
cmc
mov
mov
test
sarl
nop
rcrl
aam
pop
mov
mov
jecxz
xchg
dec
push
test
xor
jle
jne
push
cmp
mov
and
frstor
es
push
adc
movsl
xchg
mov
xor
mov
xchg
push
pop
out
xor
mov
leave
loope
aad
aaa
xlat
jg
inc
aaa
icebp
dec
xor
scas
mov
push
and
pop
cmpsb
push
addr16
mov
push
mov
mov
inc
fdivs
push
sbbb
popa
or
js
cli
pop
ret
rcrb
mov
add
push
ja
sub
push
orl
or
sub
aad
sub
sti
inc
and
mov
dec
lock
mov
mov
in
lock
push
shlb
or
cmp
and
push
jbe
and
cmp
mov
shlb
aas
data16
fldcw
sti
lret
bound
adc
inc
fistl
jmp
iret
xor
pop
std
out
xchg
stos
mov
inc
xor
fcoml
jbe
loope
lahf
mov
pop
sbb
or
popf
shrb
rcll
dec
insb
loop
pop
sbb
iret
movsl
push
adc
outsb
fdivs
mov
pop
pop
xchg
das
outsl
push
adc
lcall
jl
push
mov
clc
jnp
sub
push
lret
sti
pop
ficompl
jnp
ss
pop
push
jae
rol
adc
popf
xchg
das
pop
and
or
jae
ljmp
insl
mov
mov
leave
jbe
sub
lret
adc
arpl
xor
or
rcl
cmc
jg
leave
add
dec
mov
clc
sub
mov
decb
sbb
je
sub
scas
jmp
add
or
adc
into
push
jbe
xchg
insl
add
scas
lods
cmp
jne
test
mov
lret
push
js
inc
es
jp
fcompl
lea
mov
jbe
inc
jmp
mov
and
loopne
rol
fnstenv
mov
fld
std
in
sti
fadd
mov
orb
jp
sub
iret
clc
or
outsb
roll
ret
sbb
add
jo
push
fsubrl
in
stc
mov
jnp
lret
je
das
ret
mov
loopne
sub
and
ficoml
mov
cwtl
clc
adc
push
ret
or
sub
jge
movsl
rol
sbb
mov
xchg
fnstcw
mov
hlt
add
jge
aaa
dec
cmp
pop
ljmp
les
test
daa
hlt
adc
mov
scas
cltd
xor
mov
pushf
xor
pusha
aam
push
int3
ljmp
test
subb
inc
ret
push
pushl
push
or
push
jnp
sbb
test
sub
cli
xor
inc
or
xchg
mov
jns
inc
mov
xor
xchg
jg
arpl
xchg
lret
push
push
dec
sub
dec
xor
inc
adc
add
mov
xchg
inc
pop
xchg
mov
mov
out
mul
sarb
mov
adc
idivb
std
leave
js
mov
jp
cwtl
cmpsb
test
mov
pop
jae
pop
out
insb
subl
stos
inc
aad
jge
shr
pop
out
cmpsl
cmp
sbbb
mov
lret
aad
sbb
adc
dec
sbb
cli
stos
sbb
pop
lea
dec
and
fwait
sub
adc
lea
mov
xchg
mov
popa
inc
sbb
mov
fwait
sar
lock
cs
jnp
out
int3
fs
cmpsl
mov
xchg
loopne
xor
push
mov
fdivrp
lahf
test
out
scas
push
nop
dec
popf
add
loope
add
out
push
cmpsl
out
inc
push
sub
jnp
adc
rolb
dec
xor
push
jb
push
jg
xor
test
lret
jae
fxch
xorb
sub
test
sbb
jns
into
lods
das
and
andb
cs
dec
or
popa
popf
cmp
mov
in
xor
lahf
add
mov
jecxz
add
das
lock
cld
fs
add
insb
push
mov
scas
mov
mov
ljmp
cmpsl
pop
jb
push
mov
ret
std
bswap
aas
js
aad
stos
jecxz
gs
pop
sahf
sub
outsl
jbe
push
or
jae
or
scas
rcr
push
fldenv
mov
lret
mov
int3
sub
int
or
jbe
jb
aad
out
mov
int
pop
bound
add
mov
aam
imul
jmp
cmc
dec
cld
add
rcll
xchg
add
xlat
inc
das
dec
and
ja
pop
and
andl
fs
into
fucomip
push
and
jg
in
mov
or
insl
mov
cld
sbb
fisttps
test
out
mov
cld
cmpsb
rcr
push
ljmp
out
mul
call
xchg
cmc
or
sbb
shll
icebp
jl
push
mov
ja
stos
cmp
push
xchg
or
sbb
mov
push
and
in
xchg
and
loopne
lea
jb
push
jae
pop
cmp
int
adc
mov
sbb
adc
mov
dec
out
loope
int
lds
popf
test
xor
sub
dec
das
dec
mov
cltd
adc
inc
mov
stc
test
mov
or
daa
fisubrs
and
or
pop
ds
lods
fcmovu
ja
and
repnz
dec
sarb
fisubrs
or
lahf
inc
sti
js
dec
xchg
clc
jb
add
pop
ds
lahf
loop
xchg
sub
mov
into
cmp
cmp
mov
or
add
inc
jns
mov
cmp
xlat
lock
dec
shrb
mov
lods
jnp
popa
dec
pop
hlt
and
pop
pop
cli
cmpsb
orb
pusha
arpl
mov
inc
mov
dec
cmpsb
jbe,pt
jns
orb
sbbb
sub
lret
in
loop
dec
sbb
or
and
cmc
pop
sti
lret
add
pusha
stos
push
ret
or
std
outsb
outsb
mov
movsl
int
push
test
or
ljmp
repnz
scas
inc
cmp
cmp
push
aaa
xor
push
cld
in
xchg
inc
sub
ljmp
testb
lret
fs
cmp
pop
scas
xor
and
stos
dec
jno
test
sti
cmp
aaa
dec
mov
mov
mov
lahf
adc
ljmp
xor
cld
dec
and
add
dec
mov
hlt
fidivrs
xchg
add
enter
add
sub
mov
mov
psubb
fwait
out
pop
stos
xor
pushf
jg
xchg
icebp
sbb
adc
shrl
cmp
imul
pop
movsb
out
jno
cmp
inc
les
jbe
add
ds
inc
mov
sub
pushf
or
fsub
clc
lods
sti
jle
jmp
stc
sbb
and
and
xchg
lcall
cmpsb
dec
test
cli
cli
sub
minps
cmpb
movsl
lret
push
repnz
mov
push
cltd
add
bound
lods
jecxz
xchg
arpl
imul
sbb
xor
leave
sbb
movsb
bound
dec
loope
cmp
push
jge
cmp
xchg
add
cmpsb
iret
outsl
js
sbb
cmpsb
into
fldcw
sahf
jp
xchg
ja
mov
ret
ds
ret
cmpl
popa
jge
out
fcompl
fistpl
js
stos
loopne
jae
adc
fdivp
imul
push
add
pop
insl
push
mov
fwait
and
hlt
adc
xchg
in
out
adc
jae
add
mov
cmp
dec
andb
fwait
dec
xlat
stos
rorb
leave
mov
ret
outsb
mov
pusha
fwait
cmp
es
fdivl
push
scas
in
mov
repnz
jo
je
sarl
test
mov
cmp
pop
test
mov
mov
loopne
das
adc
outsl
xor
addb
inc
jl
cltd
pop
addr16
sub
sub
in
in
in
jbe
fisubrl
dec
fs
pop
jmp
inc
fiaddl
enter
xor
clc
sbb
mov
mov
mov
fcompl
lret
ret
push
cltd
lods
lret
adc
js
push
inc
sbb
shll
jno
shll
or
or
sub
insl
ss
mov
roll
push
cmp
mov
rsm
adc
into
pushf
inc
nop
ret
mov
push
pop
mov
pop
loop
push
mov
cli
pop
mov
adc
dec
adc
sahf
dec
andl
test
aaa
or
mov
add
movl
push
dec
sbb
iret
outsl
mov
inc
cmp
aas
xchg
loop
mov
movsl
pop
loope
fucomip
fstl
movsl
jle
rclb
sahf
inc
imul
js
add
xchg
jnp
insb
test
pop
ret
daa
xchg
mov
repz
or
mov
mov
jg
xlat
pushf
push
out
ret
xchg
aam
xchg
fstpl
loope
fsubl
roll
ds
bound
in
and
int3
or
out
and
jmp
imul
inc
adc
movsb
xchg
lret
sbb
ja
cli
mov
lods
push
not
mov
adc
cli
xchg
lret
aas
in
ret
push
int
push
imul
mov
pop
jle
jne
sbb
aad
xchg
rclb
pop
sub
insl
push
rcrb
ja
push
and
sbb
out
sub
and
xchg
xlat
pop
adc
int
cmp
popf
xchg
out
pop
clc
loopne
mov
in
jbe
pop
test
inc
sbb
sub
je
es
rcrb
mov
mov
sbb
out
repz
mov
xchg
jmp
push
push
or
sahf
stc
in
push
fwait
lock
dec
rorb
stos
xor
or
push
addb
shrl
in
loope
mov
xchg
add
jmp
jne
inc
dec
xor
and
dec
cmpsb
adc
xor
xor
mov
jmp
repz
shll
adc
jmp
leave
dec
pushf
dec
or
in
or
mov
dec
mov
jns
sub
stos
jge
loopne
push
lea
test
jbe
shll
test
sbb
mov
gs
mov
call
push
dec
cmpsl
pop
out
mov
mov
sub
cs
sbb
jmp
loopne
adc
idivb
nop
jmp
imull
ljmp
push
and
andb
adc
loopne
mulps
test
mov
push
push
sbb
or
adc
jmp
daa
cmp
ret
jbe
jmp
jns
adc
adc
xchg
dec
cld
std
fadd
lret
jno
sub
sti
outsl
mov
sub
sbb
and
pop
lea
mov
rorb
movsb
mov
sahf
jge
push
xchg
lods
push
inc
ret
adc
or
js
inc
push
cmpsb
rcr
fwait
mov
in
shrb
notl
cmp
js
test
pop
imul
sarl
aas
cld
or
adc
push
adc
mov
jmp
das
es
sbb
xchg
fs
fadd
scas
dec
fsubr
jo
mov
lds
add
xor
and
push
cmp
ret
bound
sub
jbe
or
leave
dec
sarl
test
pop
jmp
push
repnz
data16
cmp
fsubs
xchg
roll
fyl2x
pop
or
mov
sbb
addr16
sbb
cld
sbb
mov
mov
sbb
add
push
imul
push
ja
repz
add
push
sub
push
dec
pop
sarl
fcmove
adc
mov
jne
aam
push
jle
xor
pop
imul
jne
sahf
sti
jg
push
dec
jp
cmp
adc
fdivrl
mov
or
cmp
jecxz
mov
nop
lods
sub
sub
les
cmp
in
lret
nop
outsb
mov
xchg
shll
add
std
xchg
mov
call
pop
mov
enter
scas
jb
or
rcrb
loope
nop
xchg
sarl
in
sbb
leave
stos
cmc
aas
dec
std
push
stc
jns
mov
mov
dec
pop
push
inc
icebp
mov
xor
push
sti
in
jo
adc
jge
jno
xchg
lock
xchg
in
xor
pusha
fistps
movsb
js
xchg
insb
je
aam
test
in
out
xor
mov
sub
pop
cmp
xchg
rcrb
in
gs
insl
dec
sbb
inc
mov
inc
roll
les
sub
lods
sub
ja
rcll
xor
out
jmp
push
clc
ret
lock
xor
mov
cmp
inc
sti
mov
es
xchg
add
fcomps
test
insb
xchg
jmp
lock
fcoms
out
cmpsb
rcl
shrb
adc
xchg
fwait
mov
fistpll
sarb
dec
fbld
test
dec
out
ss
xchg
in
cmpsl
bound
decl
jns
mov
dec
or
lahf
mov
rclb
jnp
mov
adc
fs
push
pop
push
mov
mov
scas
cmp
mov
add
xor
inc
and
xor
repnz
xor
int3
adc
mov
add
cmp
ret
in
mov
lods
ret
xchg
insl
jns
test
aam
cli
hlt
lcall
xor
sbb
sub
fcomi
cwtl
mov
or
inc
mov
mov
andb
jbe
inc
rcll
fildll
jne
inc
dec
jle
sbbl
lds
clc
movsl
scas
sub
incl
jo
jl
cmp
cmp
leave
or
and
lock
mov
mov
jmp
dec
rcll
jbe
dec
push
cmp
lods
and
xor
mov
jmp
xor
jbe
ret
lods
lock
scas
pushf
mov
jl
int
es
movsb
rcrl
dec
cmp
test
lock
mov
push
jge
cwtl
pop
pushf
cmp
aad
daa
mov
iret
aad
rorb
mov
sub
imul
addr16
out
mov
fistpll
pop
jp
xorl
jmp
fidivrl
pop
and
pop
jns
int
push
inc
je
scas
call
cmp
popa
mov
or
sahf
pop
pop
jne
es
bnd
sbb
sub
cmp
or
outsb
mov
icebp
daa
and
push
pop
loope
ljmp
loope
ret
insb
sbb
mov
xchg
cld
jno
dec
std
push
in
jae
js
jne
fwait
mov
inc
fbld
ret
inc
mov
stos
jb
test
enter
mov
ja
cmp
mov
sub
cs
pop
inc
dec
push
mov
movsl
or
jo
and
inc
mov
inc
hlt
sbbl
and
sete
xchg
xor
mov
outsb
push
xchg
jnp
aas
pop
movsb
or
sub
gs
movsl
les
sub
in
loop
scas
jge
mov
or
insl
test
inc
pusha
repz
and
mov
aas
pop
push
outsb
fcompl
dec
push
lahf
lcall
sbb
sub
mov
out
xor
mov
sbb
pop
cmpsl
and
faddl
adc
into
push
fistpll
inc
out
and
inc
ficompl
xchg
leave
ror
iret
pop
mov
adc
loope
jmp
push
daa
add
xchg
addr16
mov
inc
xchg
lds
dec
push
iret
gs
bound
insl
repz
mov
test
ljmp
mov
mov
jae
ret
or
jnp
jne
lods
add
movb
ja
in
mov
in
mov
sbb
push
movsb
add
imul
jp
ja
test
loop
jg
adc
mull
stc
adc
jne
into
mov
ss
sbb
pop
add
ja
repz
les
jge
scas
or
repnz
and
lret
jmp
cwtl
incl
icebp
jle
mov
test
adc
cltd
std
or
push
cltd
popf
pop
pop
add
cmp
push
out
mov
arpl
cmpsl
mov
sti
in
mov
loop
iret
sub
mov
out
or
and
fidivs
add
adc
inc
jge
je
cmp
mov
pop
aas
mov
jne
pop
xor
ret
andl
movsl
sub
in
add
cld
cs
lds
jo
mov
notb
jo
xchg
dec
negb
test
int3
les
adc
add
inc
shl
lods
sahf
push
sbb
in
pop
mov
sbb
outsl
sbb
xchg
or
lahf
fsubl
nop
mov
push
cmp
mov
dec
push
xor
pop
rcrl
pop
outsl
ja
pop
and
mov
das
pop
sbb
daa
adc
aam
ljmp
mov
pop
ficoml
mov
or
fcoml
xor
push
cmp
in
jmp
lcall
sarb
jo
jl
adc
test
std
sub
ljmp
mov
daa
mov
cmp
shlb
out
divl
test
pusha
pop
and
out
xchg
add
mov
data16
cmp
fldl
adc
sub
frstor
fs
dec
lds
loopne
xor
arpl
adcb
mov
jnp
sub
scas
pop
pop
mov
sub
roll
test
push
or
adc
leave
inc
push
shll
in
rorl
add
test
inc
mov
pop
jbe
les
into
jae
dec
ja
or
pop
popf
push
sbb
jne
das
adc
push
rorb
hlt
jno
out
divl
sub
xchg
nop
cs
insb
or
insb
testb
aaa
je
adc
or
ficoms
xchg
sbb
out
mov
or
dec
lods
mov
mov
movsl
adc
loop
mov
inc
fnstcw
pop
pop
fidivrl
sub
push
inc
lret
push
pop
fistpll
sarl
jae
add
push
ret
cld
adc
and
cmp
and
cmp
mov
jg
fsubl
jae
add
bnd
add
ljmp
daa
int3
inc
add
das
push
xchg
lea
leave
movb
fadds
das
cmc
jne
xor
inc
sbb
dec
sub
fisubrl
fwait
mov
test
pusha
decb
jle
ljmp
pop
cmp
mov
inc
imul
gs
daa
mov
cltd
xchg
aas
jne
xor
out
add
lea
mov
mov
sub
jbe
sbb
lock
and
mov
rol
aam
in
cltd
insb
sub
sti
jl
add
aaa
loop
dec
icebp
sbb
mov
mov
mov
mov
jbe
push
test
lcall
push
or
in
in
les
sub
fsub
xchg
lods
aaa
js
ret
fucom
dec
pop
add
adc
add
jbe
jle
push
rorl
int3
mov
jne
ss
lds
mov
cs
pop
dec
in
mov
insb
movsl
es
add
lahf
sbb
cmpsb
imul
adc
mov
dec
jp
fcoml
push
out
jns
nop
xor
sbb
mov
cltd
xor
int3
nop
out
dec
js
xchg
shlb
mov
dec
mov
sahf
aas
jae
cmp
inc
jbe
mov
sub
pop
adc
jno
pop
inc
insb
jb
and
mov
das
iret
scas
pusha
pop
or
add
hlt
mov
push
push
push
cmp
mov
adc
jle
mov
xchg
xor
jge
jle
mov
lret
dec
mov
xor
add
iret
or
outsl
sbb
sbb
stc
clc
das
or
jns
out
outsb
push
fiaddl
or
ss
sar
loopne
pop
sbb
sub
andl
outsb
fwait
in
leave
lds
test
xchg
add
xor
xor
mov
push
push
enter
std
xchg
data16
daa
out
or
aas
loop
in
push
lea
fisttpll
movsb
fnclex
mov
mov
hlt
mov
dec
or
mov
xchg
loope
dec
int
and
jmp
xchg
adc
add
jae
and
or
sub
jp
mov
jns
cmc
nop
xor
cmp
addr16
push
pop
bound
jl
bndldx
sarb
sbb
add
push
xor
xor
stos
in
inc
xor
rorl
rorb
push
adcl
shl
lea
or
add
mov
pop
enter
add
fwait
lret
outsl
int3
aam
push
jne
insl
arpl
inc
inc
pop
mov
xchg
test
mov
les
xchg
sbb
cli
inc
pop
push
in
cmp
fnsave
int3
addr16
adc
testb
push
imul
adc
lret
inc
test
loope
paddb
cmp
lcall
mov
rcl
test
cli
push
insb
pop
stos
popa
jnp
ret
jge
loop
rorb
leave
mov
jno
lcall
les
or
mov
add
sti
jo
rcll
pop
pop
dec
lea
out
leave
dec
call
xchg
sti
pop
mov
sub
mov
xor
loope
sub
xlat
push
in
movsl
jo
in
or
fdivrs
lret
mov
mov
push
pop
mov
rcll
faddp
push
xchg
adc
xchg
mov
test
pop
jge
or
inc
ret
xlat
fmul
sub
mov
hlt
out
std
xchg
mov
lret
adc
ja
movsb
jecxz
icebp
test
mov
push
cld
loopne
or
shll
xor
movb
icebp
jbe
lods
xchg
cltd
pop
sbb
rcll
aam
js
mov
sti
inc
mov
cli
or
mov
xchg
xchg
and
sbb
add
push
iret
and
pop
pop
inc
movhps
inc
pop
pop
ljmp
in
arpl
push
iret
inc
ret
fwait
jns
jns
std
mov
stos
idivb
dec
icebp
add
loope
jbe
cli
xchg
enter
push
mov
pop
inc
in
push
mov
popf
cmp
imul
mov
adc
ret
mov
ss
mov
inc
ds
pushf
out
sbb
sbb
call
rorl
mov
idivb
jmp
push
adc
adc
sbb
ficoml
dec
arpl
mov
dec
mov
pop
enter
outsl
inc
inc
xchg
test
sti
cs
dec
mov
leave
xchg
cmp
jg
insb
mov
mov
pop
jecxz
xchg
shrl
cmp
ret
sub
mov
loop
aas
rolb
hlt
jg
pop
dec
add
dec
xor
call
sub
repnz
mov
sub
jp
mov
je
testb
mov
orb
stc
loopne
filds
cld
scas
xchg
jne
cmp
jno
pusha
filds
pushf
cltd
cmp
lahf
fwait
mov
and
sbb
lods
dec
subb
iret
mov
subb
dec
stc
popa
pusha
add
inc
and
jmp
and
cmpsl
sbb
adc
mov
idivb
push
cmpl
jge
push
pusha
jp
push
push
sbb
mov
cld
popa
test
loop
pop
xor
push
or
stos
movsl
aad
jb
pop
push
mov
mov
push
call
adc
daa
insl
xor
inc
cmp
mov
clc
mov
sbb
add
out
je
movsl
icebp
jle
jo
add
and
pusha
mov
inc
enter
test
pop
out
popa
addr16
jp
push
xlat
arpl
fnstenv
jmp
lods
inc
stos
outsl
int
xor
lret
mov
pop
lock
out
xchg
ret
mov
and
inc
data16
ss
add
out
dec
dec
xchg
loopne
sub
cmp
lcall
xchg
adc
cmp
and
lcall
jno
cmpsb
pusha
adc
pushf
and
sub
cmp
dec
lcall
ss
xchg
xorb
and
repz
rol
cli
jg
add
mov
and
jnp
and
push
xor
push
jle
xchg
pop
push
xor
add
adc
dec
leave
jno
push
stc
in
ret
imul
push
lock
sbb
push
out
ljmp
sbb
fadd
jl
mov
mov
loop
fidivl
adc
mov
stc
jmp
adc
sahf
inc
cltd
rcrb
dec
jb
daa
sub
xor
adc
pop
pop
or
stc
jne
fs
sub
ret
sbb
cmp
or
cmpsl
cmp
mov
inc
adc
call
fnstcw
inc
xchg
xchg
dec
imul
add
inc
mov
sbb
in
cmp
mov
add
js
mov
mov
pop
ljmp
xchg
hlt
sar
loop
dec
jns
les
frstor
daa
cli
fwait
outsl
adc
mov
loopne
mov
cld
push
mov
adc
movsb
sti
imul
mov
aad
pop
call
xchg
fdivrs
mov
in
sub
add
mov
fldcw
and
negb
jo
mov
fnsave
inc
mulb
mov
ret
es
mov
iret
shll
scas
aas
pusha
jbe
inc
sarl
mov
nop
sbb
sub
mov
lds
mov
sub
scas
neg
test
sub
pop
mov
ja
mov
cwtl
lret
sahf
push
sbb
int3
sub
or
enter
add
jmp
aaa
sarb
xlat
sti
stc
push
and
in
mov
hlt
test
lods
jnp
int
pop
mov
jae
cld
mov
add
inc
sub
sub
call
sub
sub
push
mov
and
xchg
mov
jg
cmpb
jmp
cmpsb
or
sub
pushf
push
add
jmp
pusha
or
bound
outsb
cwtl
push
jl
dec
push
pop
cs
mov
cmp
sub
add
push
stos
mov
lret
or
std
inc
xchg
leave
es
test
in
push
fucomi
lss
repnz
adc
dec
inc
cmpsb
fnstsw
xchg
sbb
rcll
push
pusha
inc
cwtl
scas
test
call
mov
or
xchg
jns
mov
mov
scas
nop
mov
mov
sar
stc
fs
addr16
pop
sbb
icebp
jae
ret
ljmp
and
scas
jp
lods
mov
je
and
pop
sarb
xor
repnz
add
out
jbe
lods
jno
push
subb
jae
jle
mov
mov
fidivs
sub
mov
and
shlb
int3
sub
scas
ja
fwait
mov
fmull
test
cmp
mov
das
xor
fildl
mov
adc
pop
rclb
stos
mov
enter
pop
sub
cmp
outsb
pop
ss
rol
xor
es
adc
mov
sub
cmp
je
and
rcrb
inc
xchg
test
jmp
lods
jo
mov
push
mov
xchg
or
mov
jle
insl
or
leave
sub
or
shlb
insb
adc
insl
mov
out
outsl
xor
mov
mov
sbb
jo
cmp
pop
addl
out
pop
ss
sarl
sbb
cmp
lea
add
mov
outsl
bound
daa
in
mov
daa
loop
xor
shlb
out
sbb
mov
pop
nop
jae
add
cmp
pop
divb
jne
mov
daa
shll
andb
inc
pusha
mov
xchg
sub
sahf
add
xchg
xchg
inc
lret
pop
mov
push
sti
mov
test
lods
arpl
add
mov
das
mov
iret
pop
test
inc
xchg
les
jp
std
sub
adc
add
dec
into
pushf
data16
loop
fdivrs
nop
ror
xlat
sbb
aaa
dec
bnd
daa
xchg
mov
pop
xchg
push
mov
movsb
dec
push
in
add
and
sahf
arpl
sbbl
dec
mov
pop
and
jns
std
add
aad
in
loopne
pop
sarl
and
jl
scas
mov
cld
fsubl
mov
subb
inc
inc
lcall
shrl
push
pop
in
fcmovnb
pop
cmpsl
mov
adc
add
mov
je
lds
pop
in
mov
mov
jp
mov
js
push
mov
fs
mov
hlt
inc
pop
out
jmp
loope
into
fwait
add
rorl
es
in
sbb
in
mov
mov
fidivrs
jb
pop
pop
lods
xor
xor
mov
cltd
add
daa
int
jbe
and
aad
repz
sarl
push
inc
mov
lret
push
xlat
inc
sub
je
push
lret
repnz
test
or
dec
mov
gs
arpl
fs
dec
jp
and
and
cld
ss
mov
jg
pop
enter
fdivs
pop
pop
pop
add
pop
lods
lret
movsl
jecxz
pop
leave
dec
stos
mov
push
jns
rclb
and
stos
dec
pop
mov
mov
out
mov
pop
push
pop
or
lock
fcmovnb
inc
lret
das
nop
jno
sbb
repnz
andb
aam
inc
jne
inc
push
or
inc
xchg
lahf
push
addl
inc
pop
fcmovnu
lcall
pop
call
lock
test
xchg
hlt
push
push
mov
adc
jmp
fimuls
dec
pop
jmp
out
cmc
jge
cmp
dec
mov
ss
mov
xor
mov
adc
or
cmp
or
dec
xor
loopne
push
int
loope
mov
in
test
adc
xchg
xor
xchg
xchg
test
cs
pop
xchg
xor
test
mov
push
loope
push
rcll
in
fstl
push
push
mov
scas
cli
icebp
repnz
xlat
mov
dec
sub
and
mov
call
lahf
aas
push
sbb
inc
into
adc
fiadds
mov
dec
mov
xor
xchg
subb
inc
je
dec
sbb
add
jno
loope
hlt
cmc
in
push
xor
xor
jbe
stos
jmp
adc
xor
cs
stos
sub
mov
sahf
mov
mov
cmpsl
add
cli
push
into
rcr
and
scas
fldenv
sahf
or
ret
xchg
jge
adcb
and
jmp
sbb
dec
inc
adc
insb
cld
pop
int3
mov
jo
pop
push
and
jbe
stos
stc
jp
cld
in
mov
ficoml
pop
in
lahf
jns
xchg
xchg
mov
lock
fildl
bound
add
fs
xor
addb
jb
dec
sbb
dec
ficoms
cmp
rcr
orl
pop
sbbl
inc
xchg
call
sbb
inc
fsubrl
sbb
movsb
and
loop
inc
lods
jbe,pt
add
gs
outsl
jns
and
lahf
ret
inc
jb
mov
aas
cmpsl
jno
mov
idiv
mov
fisttpl
movsl
in
sub
mov
fwait
iret
adc
movsb
xchg
add
out
cmp
int
and
cmp
push
add
mov
mov
mov
ror
mov
lods
mov
jge
inc
enter
xor
cmp
lahf
xor
or
lahf
pop
hlt
mov
imul
lods
hlt
mov
xchg
inc
subb
data16
mov
and
outsb
out
outsw
dec
pop
sarl
rcr
je
addb
inc
push
push
aas
add
sub
stos
push
into
lods
rcr
xchg
jmp
mov
sub
aad
mov
shrl
loop
aad
add
inc
fsubl
lods
xchg
decl
ds
jmp
cmp
daa
jge
fwait
dec
jbe
jecxz
sbb
dec
push
mov
aad
adc
js
aaa
mov
cmp
mov
loop
inc
cmp
pop
mov
nop
idivb
fisubrs
ja
mov
adc
icebp
inc
xchg
push
ret
or
mov
in
adc
sbb
repnz
int3
out
mov
sbb
test
pop
mov
in
loope
and
fildl
outsl
sbb
imul
jp
push
mov
xchg
dec
push
imul
ret
insl
sbb
jl
adc
cmp
push
inc
xor
lea
and
cmpb
add
and
mov
xlat
popa
mov
sbb
clc
inc
cmp
aas
pop
mov
or
or
lods
mov
std
loop
inc
mov
dec
jbe
aas
pop
mov
sub
hlt
adc
cli
out
xchg
jo
aas
mov
daa
lcall
cld
jbe
into
rolb
roll
jbe
inc
xor
rorl
enter
inc
push
into
sub
and
jg
cld
pop
push
adc
mov
xorl
loope
fidivl
je
scas
test
mov
xchg
pop
sub
mov
add
sbb
popa
lods
mov
lock
iret
push
xchg
sbb
pop
sub
pcmpeqb
xchg
mov
mov
mov
mov
addr16
lahf
loopne
sti
ljmp
push
push
fucom
jl
pushf
ds
jo
leave
sub
sub
test
mov
or
jmp
addl
adcl
push
repnz
sub
inc
push
shl
fwait
clc
jge
addb
ja
das
jno
mov
sahf
inc
or
inc
pop
shrl
fistl
repz
pushf
inc
cmp
jecxz
and
imul
aad
stos
xchg
xor
add
decl
insl
or
cmp
fwait
fwait
call
stos
dec
xchg
rorb
pop
insl
leave
pop
loope
sbb
ds
and
ret
daa
dec
inc
jecxz
xor
out
fstl
lods
xor
cltd
jle
dec
into
cmp
cs
jbe
testb
lock
jl
test
int
in
pop
test
xor
xor
into
inc
cmpsb
lahf
sub
insb
mov
adc
mov
rcl
ja
cmpsb
dec
mov
add
dec
ljmp
movsb
mov
xor
loopne
cmpb
mov
out
mov
jae
add
imul
pop
mov
lea
adc
enter
cmp
dec
push
ret
addr16
test
in
pop
jb
and
out
or
lret
pop
push
jmp
xchg
stc
cs
sbbl
test
inc
jne
xchg
mov
loopne
sbb
push
fldt
int3
cmp
fs
sbb
xchg
fdivrl
psubb
jae
mov
adc
push
lds
dec
cmpsl
rorb
mov
arpl
ret
not
mov
imul
xorb
iret
inc
xorl
testl
lods
mov
test
mov
sbb
pop
popf
adc
mov
push
iret
dec
fdivl
cs
fcmovne
notb
das
cmp
std
movsl
push
decb
shrb
or
pop
add
xor
stc
insb
xchg
mov
divl
add
adc
inc
mov
dec
pop
jo
idivl
stos
fsubrs
cltd
jo
xor
pop
dec
mov
imul
cmp
jns
mov
enter
mov
jae
mov
fsubl
cwtl
mov
divb
inc
pop
les
icebp
out
jae
arpl
dec
mov
test
mov
mov
xor
mov
dec
mov
adc
cmp
pop
jge
jbe
aad
cs
mov
push
or
push
cs
jo
fbstp
or
dec
pop
sub
xchg
loopne
xchg
lret
aaa
fldln2
jp
lret
mov
loopne
adc
loopne
pop
add
lcall
mov
sbb
test
mov
push
cltd
arpl
and
out
test
fcomi
xor
mov
dec
pop
jnp
cli
sbb
jbe
mov
push
clc
call
sub
adc
cmpsl
lahf
jl
ljmp
out
fistpl
psllw
aam
mov
leave
icebp
aad
cmp
or
mov
jl,pn
pusha
mov
xchg
add
dec
adcl
dec
repz
xor
cmc
adc
adc
mov
cmp
ror
or
std
popa
mov
pop
push
mov
dec
scas
and
dec
js
pop
xchg
in
lret
cwtl
mov
adc
fxch
lahf
jo
mov
or
pop
in
jne
inc
sub
push
adc
flds
popf
mov
arpl
xor
push
repz
std
jge
call
mov
ljmp
xor
addr16
les
mov
stos
test
movsb
inc
or
ss
push
out
loop
jmp
inc
das
and
in
adc
mov
int
daa
jp
sub
pop
adc
jb
inc
jae
stos
mov
pop
adc
jae
pop
add
sub
mov
dec
filds
mov
or
inc
aam
xchg
push
cltd
or
or
stc
mov
jae
jbe
int3
jae
sub
mov
cli
xor
lcall
adc
xacquire
sbb
leave
iret
lea
dec
daa
aam
inc
xor
sbb
das
imul
pop
aas
xor
adc
pushf
mov
pop
clc
sbb
sub
cld
and
inc
or
dec
push
jb
adc
mov
pop
les
cmp
xchg
fstpl
out
xchg
ds
pusha
xor
push
inc
dec
inc
and
jmp
push
scas
cmp
jmp
movsl
mov
mov
xor
jo
fdivs
int3
call
dec
es
push
adc
pop
scas
std
xor
stc
inc
push
scas
notb
das
or
pop
sarl
jle
inc
push
loopne
inc
mov
mov
or
outsl
jecxz
sbb
inc
and
in
push
jno
in
adc
in
insl
or
in
dec
cs
jae
add
mov
jb
pop
mov
cmp
jmp
push
push
fsubrs
mov
ja
and
jno
xor
je
xchg
idiv
push
mov
roll
ja
fwait
rcrl
mov
jne
ljmp
jl
jo
inc
shl
aaa
ret
sbb
or
int
stos
xor
addr16
les
movsl
xor
fimuls
pop
mov
mov
dec
xchg
ss
pop
or
aad
adc
mov
push
pop
push
xor
enter
out
mov
jle
xor
jbe
dec
test
mov
push
scas
iret
in
pop
mov
out
popl
js
push
pop
aam
pusha
mov
sahf
pop
popa
lods
outsb
add
mov
divb
mov
jbe
popf
dec
movsb
xchg
mov
xbegin
cmpsb
inc
push
jno
std
cmp
jb
cmp
dec
dec
ja
dec
stos
push
ss
imul
sbb
cmp
fnstsw
push
add
adc
mov
test
and
pop
scas
pop
cmp
push
push
mov
ficomps
inc
add
inc
xchg
xchg
cmp
aaa
pop
ffreep
sub
sbb
xor
push
daa
in
fwait
neg
xchg
pop
ja
mov
push
fdivrp
push
iret
mov
test
imul
popf
outsl
bound
mov
sarl
in
adc
dec
repnz
les
mov
add
mov
jne
imul
xor
pop
jle
leave
cltd
xor
inc
lcall
mov
in
addr16
adc
pop
xchg
or
ret
mov
imulb
mov
arpl
pop
jbe
add
mov
roll
ljmp
fstps
sub
push
scas
mov
and
mov
xchg
cwtl
rorl
sbb
cltd
xchg
pop
jmp
mov
push
dec
stc
add
push
inc
je
decl
adc
outsb
cmp
fidivl
adc
inc
jmp
loope
xor
jg
push
fidivs
xlat
cmpl
scas
sbb
inc
jns
aaa
push
ret
cld
mov
pop
mov
shlb
mov
sub
stos
cli
mov
dec
lcall
jno
mov
sub
or
ss
jp
cs
sub
dec
sub
or
cwtl
cmpsl
lock
jnp
stc
and
outsb
pop
push
jg
xchg
xor
adc
ret
mov
jne
jge
mov
pop
jnp
pop
std
dec
movsb
mov
sti
add
pop
xchg
mov
gs
cmp
inc
or
jns
cli
mov
add
cli
pop
repnz
mov
loop
sarb
popa
adc
test
ja
std
lea
out
lock
dec
pop
xchg
dec
sub
sub
loope
enter
mov
sub
push
lcall
mov
cmp
dec
or
pushf
sti
mov
dec
aaa
push
jns
jmp
insb
test
inc
std
mov
fstpt
data16
scas
xchg
mov
xchg
mov
arpl
flds
outsl
or
cs
std
xchg
mov
or
js
pop
sbb
scas
ret
scas
cwtl
cmc
cli
inc
jecxz
cmp
mov
loope
xchg
jp
add
dec
mov
and
or
mov
shll
sbbl
dec
call
dec
fcmovb
lahf
std
sbb
inc
adc
lods
adc
nop
cmp
shll
jmp
adc
mov
daa
lret
scas
mov
mov
je
jle
cmpsl
cli
loopne
adc
mov
fdivrl
lret
int3
repnz
pushf
mov
pop
imulb
or
loop
sub
dec
jo
inc
insb
push
adc
and
out
cmp
gs
jmp
mov
out
imul
mov
mov
fsubr
pop
sub
mov
jecxz
adc
bound
dec
aad
sbb
push
pop
jl
pop
jno
repnz
and
aaa
int
sub
jl
xchg
ds
jnp
jp
push
fwait
cmp
xchg
inc
into
sarb
sbb
push
lea
fdivs
sub
sub
aad
ss
fbld
lds
sbb
or
mov
and
adc
imul
popf
jl
push
jae
pushl
jb
mov
push
or
jno
out
sub
icebp
mov
mov
cmp
rcrb
push
bswap
imul
test
push
and
lea
pop
mov
sahf
pop
jp
push
add
out
bound
push
aaa
sub
mov
dec
pop
pop
pushf
or
jno
mov
out
and
sbb
rcrl
in
cmp
je
insl
cltd
mov
adc
adc
ljmp
or
jo
or
sbb
scas
mov
mov
test
xchg
rolb
clc
or
fldenv
xchg
shll
mov
sub
negb
push
lds
push
xchg
pop
mov
es
inc
pushf
nop
inc
out
sbb
inc
stos
jno
mov
loopne
int
repnz
inc
in
aad
xchg
mov
add
fmuls
sbb
xor
add
xlat
cmpsl
mov
sub
pop
adc
push
pop
sbb
sbb
cltd
mov
push
int
cmp
ja
enter
xor
leave
mov
jae
notb
mov
pop
jnp
icebp
jno
cmp
leave
mov
jb
jmp
or
shll
pushf
insl
mov
and
pop
mov
rclb
add
dec
or
jecxz
mov
inc
outsl
or
lahf
jmp
shll
es
fnstsw
xchg
loope
mov
inc
jae
adc
or
jno
push
adc
pop
lret
mov
push
roll
fimull
scas
hlt
mov
shll
jnp
mov
cmc
and
lcall
jecxz
hlt
adc
sahf
mov
xor
sbb
fxtract
mov
cwtl
fisubrl
adc
out
stos
ret
mov
notb
inc
sahf
jp
jp
push
hlt
gs
les
sub
push
es
out
or
movsb
xor
mov
sti
pusha
inc
ljmp
jno
je
cmp
fidivrs
addr16
shr
nop
add
sbb
cmp
lock
mov
fbstp
add
add
outsb
add
mov
sub
sub
adc
fbstp
mov
jmp
inc
cmp
push
dec
aas
sahf
push
push
dec
sub
push
and
mov
outsb
nop
cmp
push
fwait
inc
decb
cld
paddd
inc
jnp
sub
loopne
femms
xchg
pop
loop
out
das
lds
sbbl
rorb
out
jp
adc
fs
out
or
aas
mov
vfnmadd213pd
daa
popf
push
sub
int
mov
push
mov
mov
push
jl
lea
inc
jbe
add
push
in
add
add
int
and
add
movsb
push
rcr
xchg
mov
xchg
xor
sti
push
orl
fnstcw
movl
sbb
jno
sbb
pop
sbb
dec
mov
bound
sbb
dec
mov
jge
rclb
sahf
cmp
stc
stos
pop
push
repz
or
test
xchg
leave
cmp
pop
push
fsubr
jo
inc
aam
xchg
pop
cmp
cltd
cli
in
jecxz
lods
xchg
sub
jo
sub
lds
inc
push
pop
sbb
leave
pop
jns
mov
sub
mov
das
std
jne
and
jmp
dec
cmp
push
out
xchg
es
or
cwtl
lods
es
sub
push
push
xor
inc
movsb
pop
or
sub
hlt
cltd
andl
push
push
lock
pushf
xor
jle
push
cwtl
loopne
imull
imul
mov
inc
mov
cmp
inc
mov
cwtl
adc
filds
rclb
cmp
nop
sar
and
xor
out
imul
mov
dec
outsl
inc
push
adc
sbb
sbb
sbb
dec
mov
mov
sbb
bound
aad
mov
outsl
mov
mov
in
orl
movl
scas
add
lret
jae
pushf
pop
mov
push
lods
nop
cmp
xchg
cmp
gs
insb
neg
mov
inc
mov
in
push
movsl
aaa
or
std
cmp
xor
test
pushf
repz
ds
xor
fcmovnu
adc
cltd
xchg
xchg
mov
push
pop
xchg
xor
add
arpl
mov
push
jb
sbb
mov
push
pop
mov
inc
sub
aad
xlat
ljmp
popf
ret
adc
sbb
mov
jb
fmull
outsb
xchg
xor
jns
icebp
out
lret
cmp
lahf
outsl
add
ret
fdivs
mov
repnz
loope
in
popa
xchg
js
lds
ss
push
xchg
outsl
rcrl
mov
dec
cmpsb
shlb
dec
lcall
scas
lods
mov
pop
pop
cs
sahf
addb
dec
or
shlb
mov
mov
cwtl
ret
lds
xchg
ja
xlat
adc
mov
inc
jb
daa
xor
lods
lahf
adc
mov
mov
into
divb
es
mov
gs
or
fs
jp
lods
cld
push
cmpsl
sbb
dec
adc
dec
adc
mov
and
adc
xlat
mov
jae
and
mov
push
lods
jle
mov
push
xor
ret
loope
pop
lcall
movsb
enter
mov
loope
fildl
movsb
inc
lret
push
dec
loope
lods
ja
or
inc
sub
inc
scas
sahf
push
sti
add
inc
movsb
cmc
pusha
mov
xchg
loope
roll
mov
jo
sub
icebp
mov
out
jnp
lock
push
xchg
xchg
mov
inc
ds
pop
cmpsl
inc
cmpsb
push
sub
cld
shr
std
loopne
aad
aad
add
push
mov
lock
imul
push
loop
sub
add
mov
ss
stos
xor
sub
roll
cmp
cltd
in
sti
sbb
lcall
cmp
aaa
cmp
push
or
xchg
mov
int3
dec
jnp
inc
pop
in
insl
add
jg
popf
push
lods
push
pushf
in
adc
enter
cmp
test
xchg
cmc
rcrl
arpl
outsb
shrl
cmc
xchg
lods
or
jne
hlt
lods
jo
adc
gs
mov
xchg
sub
loope
sbb
xchg
inc
mov
add
jp
fldcw
data16
ss
mov
lods
lock
mov
test
or
adc
les
pop
sbb
les
dec
arpl
adc
mull
cld
mov
pop
mov
lds
or
cmpsl
mov
jmp
lahf
sbb
pop
push
lods
xchg
jo
movzbl
mov
dec
mov
adc
cmc
xor
cmp
jne
cmpsl
pushf
arpl
out
lock
addl
lods
incl
shll
rorl
or
adc
mov
mov
cs
mov
jb
xchg
dec
jg
xchg
outsl
aas
imul
arpl
call
cmp
push
loopne
push
xor
shlb
mov
fbld
loopne
lds
mov
mov
add
sbb
inc
fs
insb
shr
aas
cmp
pushf
mov
pop
hlt
insb
xchg
xchg
test
insb
lock
jno
mov
loope
aaa
jno
jg
push
sub
test
rcrl
aad
pop
xor
repnz
sbb
sub
xchg
enter
sub
and
push
adc
filds
sbbl
mov
insl
imul
shl
pusha
sbb
rolb
inc
jmp
pop
sbb
cmp
jg
fmull
xor
int3
in
jg
in
data16
mov
lret
lods
out
in
sub
les
mov
sti
ret
cwtl
adc
icebp
pop
adc
adc
xor
sahf
lods
pushf
in
xor
outsb
mov
aas
lds
adc
repz
xchg
sbb
xchg
scas
mov
gs
negb
xor
add
outsl
or
ret
jp
sub
xor
ss
xchg
jb
inc
popa
jnp
xchg
jno
pop
sbb
push
scas
call
jno
mov
rclb
addr16
std
lea
cmpsb
divb
jb
jmp
out
and
mov
xlat
or
and
bndldx
dec
shl
es
shll
mov
push
frstor
mov
jmp
mov
jns
gs
jg
rcl
sbb
lret
cmp
jp
push
mov
adc
push
iret
jno
jb
xchg
mov
out
mov
test
mov
mov
jo
xchg
test
push
in
aam
jge
mov
push
sub
dec
int
fwait
orl
cmp
mov
into
arpl
xchg
icebp
test
add
stos
jle
sub
sbb
cwtl
or
mov
xchg
xchg
dec
push
int
inc
jo
ficomps
lahf
rcl
sbb
cmp
cmpsb
idivl
popa
and
arpl
mov
out
stos
push
dec
stos
mov
jno
bound
sub
add
mov
pcmpgtb
push
ljmp
and
jbe
loop
in
inc
mov
xchg
add
in
inc
xor
push
aas
sbb
mov
out
inc
pusha
ja
popa
mov
or
stos
xorl
or
cltd
test
popl
repz
leave
cmp
pop
jbe
jns
je
push
cmp
cmc
push
inc
adc
push
popa
divb
stos
out
add
mov
fists
pushl
xchg
jp
lret
fxch
xchg
jb
test
mov
adc
les
in
or
dec
clc
lcall
pop
push
dec
cld
fistps
xor
adc
xor
push
xor
cmp
in
imul
pop
outsb
mov
lea
dec
jp
fstpt
xor
sub
xchg
leave
aas
outsb
ret
adc
sbb
inc
out
mov
lea
and
lcall
push
xchg
lods
outsb
rcr
imul
adc
popa
lahf
in
out
push
inc
cmpsl
cmp
cmp
mov
je
push
mov
jno
jge
add
mov
adc
mov
push
cmp
jmp
rcrl
in
cmp
aas
cmp
cmp
test
sti
test
pop
and
push
sub
dec
mov
stos
sub
cwtl
mov
push
inc
arpl
inc
dec
dec
repz
fldt
lahf
and
stc
mov
aaa
sub
mov
fisttps
aad
jl
dec
inc
enter
iret
sbb
and
imul
insb
adc
mov
inc
cli
icebp
dec
jo
fiaddl
movsb
adc
in
aas
jnp
push
call
mov
and
mov
cmp
fsubrl
and
add
xchg
std
pop
mov
fnsave
cmc
inc
aad
ret
ds
cmp
aas
cmpsl
cld
xor
jp
js
mov
movsl
lahf
stc
cmp
loopne
dec
and
test
adcl
and
mov
sahf
ret
push
cmc
shl
inc
mov
dec
pop
dec
int3
lcall
bound
mov
add
mov
mov
nop
cmp
dec
lods
gs
cmp
dec
lret
std
clc
aas
and
inc
and
jae
push
ds
insb
mov
lods
inc
mov
outsb
pushl
stc
fnstenv
sub
ret
jecxz
push
pushl
fwait
adc
ja
gs
mov
push
lods
mov
inc
lret
loopne
dec
loopne
das
mov
mov
lds
add
jge
aas
push
addb
dec
adc
repz
jl
in
xchg
cmpsb
lahf
outsb
mov
decb
push
fdivr
addr16
pop
or
push
cmp
push
xor
inc
mov
sbb
sbb
sub
repz
mov
pusha
pop
or
icebp
add
mov
mov
push
insl
and
mov
test
fistl
repz
negb
push
imul
pop
cmp
push
xor
mov
aas
mov
daa
cmpsl
mov
dec
popf
lds
call
add
cmpsl
daa
xor
stc
stos
jmp
mov
ret
stos
fbstp
fs
jmp
adc
mov
ret
pop
roll
in
scas
adc
or
test
mov
imulb
aam
fisubs
dec
jae
dec
rol
push
sbb
mov
cmc
mov
lock
sbb
stos
iret
pop
jbe
or
pop
push
mov
mov
lret
dec
sub
aaa
cli
jecxz
arpl
add
xchg
or
push
dec
data16
cmp
mov
sbb
mov
push
call
adc
inc
aam
cld
test
push
mov
add
popl
xor
mov
sbb
sbb
ja
adc
xlat
push
pushl
or
add
mov
push
das
lret
cmpps
or
inc
int3
rcrl
pop
clc
mov
icebp
andb
push
mov
stos
mov
mov
ljmp
sahf
aas
hlt
mov
pop
testl
jp
xchg
adc
stc
pop
sbb
cmp
dec
dec
push
push
lods
add
sbb
xchg
test
lods
pop
mov
or
idiv
clc
test
cmpsl
loope
jne
mov
scas
push
cmp
fwait
jl
call
ret
aad
sub
dec
imul
push
mov
in
popf
sub
add
loope
pop
fdivs
int3
ljmp
push
cld
jae
shll
fidivrl
or
mov
xor
xor
jp
and
insl
imul
daa
js
xor
mov
adc
int
pop
movsl
mov
sub
jl
fldenv
cwtl
jp
dec
and
pop
fwait
sbb
sub
std
push
scas
clc
push
insl
iret
movsb
ja
pop
aam
mov
out
push
xor
out
cmp
fsubl
cli
mul
imul
sbb
test
jge
repz
aaa
cli
iret
xlat
push
jbe
sbb
in
push
in
mov
mov
orl
ret
inc
cld
jecxz
mov
xchg
jo
inc
aam
cmpsl
cmpsl
and
push
mov
enter
jge
inc
xor
xor
xchg
insl
dec
jg
mov
filds
dec
cmpsb
movsl
dec
inc
cld
jnp
out
pop
mov
dec
in
xor
xchg
test
test
mov
mov
inc
iret
mov
outsl
aad
jno
lahf
mov
imul
xchg
jmp
cmpsl
rep
sub
and
loopne
imul
aaa
or
pusha
adc
or
mov
mov
push
jge
mov
xor
les
add
lods
lret
lods
sarl
loope,pn
ret
ret
out
inc
xlat
mov
cmp
xchg
popa
mov
lods
mov
pop
sar
inc
and
sub
push
inc
mov
jne
inc
pop
sbb
cmp
cmp
and
pushf
add
mov
push
pop
scas
xchg
pushl
std
lock
iret
push
int3
insb
or
icebp
adc
popa
lea
jge
xchg
cmc
mov
lods
push
push
aam
das
test
inc
push
pushf
lcall
mov
je
inc
jno
sahf
rorl
cmpsl
push
push
dec
mov
xor
fadds
adc
int
imul
fldenv
or
ret
adc
mov
sub
mov
call
imul
arpl
shrb
aas
mov
scas
xor
subl
int3
cmp
in
xorl
insb
add
pop
inc
fbstp
inc
mov
js
and
push
sbbl
sbb
mov
add
pop
push
ja
dec
pop
int
add
cmp
jmp
pop
pop
test
pop
stc
shr
mov
or
ja
cmp
loope
mov
ja
and
adc
jge
sbb
stos
out
sub
out
out
dec
stc
je
sub
rol
mov
mov
dec
dec
lds
and
add
push
jge
xchg
and
shrl
sbb
xorb
ljmp
test
les
ret
stc
xor
iret
pop
sub
fists
and
push
add
cmp
pop
std
inc
notl
jo
fisttpl
push
dec
mov
leave
loopne
cmpsl
jno
cwtl
sub
lock
in
xor
cmpsb
mov
bound
and
or
lcall
ljmp
cltd
int3
rorl
pusha
adc
add
dec
daa
or
mov
out
jl
cmp
sub
shrb
fisttpll
pop
call
xchg
imul
xor
mov
jle
mov
nop
xor
inc
xorl
lods
mov
add
sti
pop
cwtl
js
jo
incb
jg
push
lret
pop
ror
out
jae
sub
repz
sub
jg
or
adc
adc
sbb
fmuls
adc
lds
movsl
or
cmp
push
push
nop
imul
imul
int
mov
div
sbb
mov
xchg
and
lds
or
cld
jbe
mov
xor
test
shll
or
test
pop
nopl
inc
into
das
pop
pusha
add
push
gs
xor
sbb
and
pcmpgtw
cmc
sbbl
sub
xor
mov
sbb
jo
sti
jle
push
sub
and
test
jb
jne
sti
cltd
pop
pop
push
and
adc
jnp
cli
lods
sub
or
mov
and
ja
in
cltd
push
cltd
das
mov
sub
bound
push
xchg
add
push
aas
mov
or
sub
dec
iret
rcrb
and
jb
fisttpll
lea
sbb
test
and
test
data16
out
adc
push
push
xchg
out
sub
out
and
mov
aam
test
cmp
les
add
fiadds
ljmp
sub
adc
xchg
clc
sub
adc
mov
sub
dec
mov
fs
out
sbb
int3
pop
mov
inc
inc
das
popf
adc
pop
aad
inc
lcall
xlat
adc
out
pop
sbb
or
roll
inc
sub
out
sbb
popa
xchg
push
les
int3
fisttps
push
push
movsb
push
mov
inc
test
cmc
sahf
int
sub
ds
ficomps
jmp
and
daa
or
mov
ficoml
mov
out
add
loopne
push
push
movsb
push
or
mov
lahf
inc
pop
mov
lret
adc
xchg
out
inc
out
and
out
sub
or
pop
movb
ss
add
gs
fwait
mov
jno
scas
popf
cli
or
adc
repnz
loop
add
hlt
xchg
mov
dec
shrl
movl
and
je
sbb
outsb
or
ljmp
cmpsl
and
or
daa
and
rorb
sub
mov
xchg
jae
jmp
jge
sbb
mov
aas
inc
jg
iret
inc
fwait
mov
pop
xchg
movsl
xrelease
les
frndint
imul
dec
push
fs
std
into
jo
jl
jb
jno
iret
jo
je
stos
push
jae
orl
mov
inc
in
fsubs
adc
xchg
cmp
xchg
pop
sub
xor
fbstp
aad
iret
scas
in
ret
push
cmp
jb
cli
push
mov
mov
add
aam
jnp
mov
sub
cld
cs
cmp
sub
pop
mov
jmp
pop
xor
adc
adc
mov
lcall
sub
lock
popf
gs
or
adc
mov
cmp
ficompl
stc
inc
sbb
jae
inc
cs
push
xchg
push
push
push
idiv
jp
divb
pop
or
aaa
imulb
adc
ja
push
fwait
add
es
fisttps
adc
out
loop
jns
jae
lret
out
sbb
dec
lcall
xchg
icebp
mov
sbb
jecxz
dec
xchg
sub
cs
or
xchg
xor
idiv
daa
xchg
in
jne
js
out
inc
jns
xorl
mov
dec
roll
daa
test
out
fildl
enter
and
mov
xchg
call
jp
or
jae
mov
xor
jl
push
xor
mov
push
stc
cmp
inc
sbb
out
repz
adc
sub
sub
movsl
and
into
into
jecxz
inc
clc
repz
add
ret
mull
sarl
jmp
cmpsb
iret
cmp
cmc
sarl
and
pop
scas
push
inc
dec
fsubrs
lret
or
repz
out
loop
mov
pop
or
jp
shll
sub
sbb
xchg
xlat
mov
sti
sti
lret
jnp
sub
xor
mov
ds
or
xchg
outsb
or
dec
inc
pop
dec
push
lret
rorl
daa
mov
inc
add
push
jae
or
or
jnp
push
push
and
test
pop
push
mov
outsb
and
mov
mov
mov
arpl
adc
mov
loop
loope
mov
sarb
push
scas
mov
xchg
lock
jecxz
mov
mov
push
pop
ss
shr
pop
jp
mov
cltd
mov
gs
push
out
outsb
ret
aaa
inc
out
shl
and
rorb
movsl
decl
sbb
and
mov
fists
adc
mov
mov
inc
xchg
icebp
addr16
sti
popf
or
mov
sahf
inc
ret
fwait
scas
and
cld
aam
mov
sti
cmpsl
or
fiadds
jmp
cmpsb
or
sti
sbb
lods
jg
shlb
jnp
outsb
test
fbstp
lret
daa
cwtl
mov
dec
in
nop
and
in
jae
jbe
ficompl
xchg
lods
lods
pop
xchg
add
pop
mov
mov
les
mov
mov
jns
jae
cli
aam
fwait
mov
adc
jae
stos
outsl
pop
dec
and
inc
ror
into
xor
insl
pop
out
push
inc
xchg
ss
sbb
cmp
xor
fldz
push
push
add
loopne
jb
test
jl
fistpll
dec
aad
mov
mov
testb
fcomip
je
push
scas
pop
cmp
or
sar
dec
outsb
movsl
and
mov
add
push
sbb
scas
lahf
mov
and
mov
daa
mov
jmp
pop
in
imul
push
mov
in
push
mov
mov
pop
loop
movsl
jg
aad
dec
mul
cmpsl
mov
mov
stos
cmp
fwait
scas
jns
int
pop
mov
add
ret
cmp
fwait
mov
mov
adc
sub
ret
push
mov
mov
stos
jb
or
cmp
push
testl
jno
push
adc
nop
mov
or
sbb
cmpl
push
cmp
neg
lea
mov
jbe
inc
out
mov
sbb
mov
xchg
or
add
movsl
in
xor
adc
test
ret
push
rcll
mov
nop
sahf
int3
cmp
leave
jae
or
inc
repnz
popa
inc
ret
xor
mov
repz
sbb
adc
jg
mov
xchg
add
sub
or
xchg
inc
ret
addps
add
outsl
push
add
pusha
sub
pushf
cmpsb
lahf
jbe
jmp
loope
stos
cli
mov
xchg
and
jbe
int
inc
fcmove
xor
xlat
jo
cltd
stos
pop
dec
bound
rcl
arpl
adc
push
mov
aaa
pop
iret
movsl
pop
or
sub
pop
xchg
xlat
push
xchg
dec
jle
lcall
push
mov
test
popf
xchg
dec
cs
pop
ss
pop
sub
push
sahf
pop
mov
int
pop
pop
in
orb
cmp
sub
ret
add
jg
addl
loope
ja
add
bnd
repz
push
pop
je
jb
in
mov
jle
add
jge
sbb
mov
into
or
xchg
dec
mov
lcall
fistpl
pop
hlt
aas
repnz
aaa
test
in
fidivrs
xchg
inc
cmpsl
jo
test
mov
mov
add
inc
shl
sarb
leave
lds
mov
sti
push
mov
or
sub
mov
aas
std
testl
imul
repnz
jecxz
push
jno
lods
inc
out
cmp
cmp
cwtl
imul
ja
push
cld
into
stos
jmp
call
test
sub
xchg
pop
std
fsts
cmp
lods
xchg
insb
js
lcall
add
mov
jnp
xor
sbb
mov
jl
mov
cmp
or
call
fistps
jmp
push
lods
fldenv
notb
cmp
dec
jge
push
mov
add
dec
insb
inc
mov
fistl
xor
dec
pop
ds
dec
adc
enter
jmp
mov
frstor
fisubl
pop
cmpl
sti
jae
fcomps
push
adc
cmc
xorl
es
or
mov
jns
or
scas
sub
mov
aas
or
push
sub
jg
sub
jmp
sbb
movsl
clc
sub
and
or
and
in
add
adcl
data16
mov
mov
cmpsl
xorl
mov
adc
call
sub
adc
dec
xor
xor
fsts
cs
jne
jle
je
push
sarb
shlb
push
das
movsb
ret
je
lods
sbb
stos
lahf
enter
hlt
incl
mov
lcall
divl
mov
jge
outsb
add
push
and
xor
mov
cmp
aas
icebp
enter
iret
out
jb
stos
mov
adc
fucomi
push
push
repnz
sub
mov
fcmovnb
jecxz
aad
xchg
xor
pop
sub
push
lahf
jbe
sbb
pop
push
daa
dec
or
insl
jns
mov
jbe
out
rcll
idivl
adc
ss
mov
sahf
imul
lock
enter
pop
lods
ss
and
mov
lds
adc
sub
ror
daa
inc
pushf
imul
sbb
mov
inc
or
test
lret
pop
xor
iret
inc
jae
cmpl
incl
icebp
cmp
fistps
test
jo
xchg
jmp
sbb
pop
mov
ret
push
mov
jae
leave
add
lret
push
sub
popa
into
sbb
pop
and
movsl
stos
xchg
aad
push
mov
mov
pop
mov
dec
test
pop
xor
cmp
es
inc
mov
sahf
enter
es
dec
jmp
mov
scas
fdivrs
dec
mov
imul
inc
fwait
jge
repnz
daa
dec
push
sub
or
adc
sarb
popa
mov
push
int3
cmc
in
mov
call
xor
sub
sub
mov
mov
sub
adc
mov
pop
jns
jmp
int3
cmpsl
push
sahf
xor
jg
sub
subb
adc
xchg
mov
inc
pusha
ds
inc
pop
loope
lods
fisubs
inc
mov
cmpl
cmp
pop
sub
dec
xor
mov
push
and
aad
leave
out
sti
insb
mov
sub
cld
add
insl
or
sbb
inc
push
mov
test
sbb
mov
inc
btc
daa
jp
jmp
push
sahf
movsb
push
add
xor
cli
je
dec
lahf
cmp
lea
jae
pop
sub
stos
iret
add
ss
pop
into
pop
fcmovnbe
insl
out
std
sub
push
xchg
mov
lret
xchg
cmp
cmpsl
pop
mov
inc
dec
inc
or
mov
push
xor
and
sbb
push
in
push
rcl
rcr
push
push
jl
imul
xchg
in
dec
lret
ret
dec
insl
jnp
sub
xchg
mov
sub
sbb
adc
ss
inc
xchg
pushf
mov
scas
aam
lds
orl
mov
pop
adc
jnp
popa
add
enter
mov
bound
adc
inc
out
push
sahf
dec
sbb
fistps
and
or
push
and
xlat
cmp
xor
adc
xchg
inc
xchg
sbb
fbstp
push
and
pop
sub
ds
rcrl
outsl
xlat
push
dec
or
xchg
dec
arpl
dec
or
and
adc
xchg
dec
xor
loope
mov
lea
cmp
jecxz
lods
xchg
sub
mov
iret
fdivrs
xchg
xor
fs
mov
outsl
das
pop
xchg
add
mov
pop
ds
subl
mov
or
aas
jnp
jnp
arpl
enter
lea
fisttps
ss
jmp
sbbb
insb
fcom
mov
add
push
or
ss
lds
mov
mov
nop
and
pushf
mov
pop
jnp
mov
jecxz
lret
in
jae
push
fisubs
or
outsl
icebp
sti
or
adc
push
stc
ds
test
hlt
fwait
lods
scas
fidivrs
cmp
dec
iret
or
stos
push
sub
sub
jg
jbe
repz
mov
jbe
jg
xchg
movsl
or
cmp
repz
jecxz
in
and
mov
mov
and
lahf
pop
cmp
test
cmp
jne
das
push
mov
jb
xor
stos
add
cmpsb
push
inc
and
adc
in
shr
test
mov
push
jne
imull
push
xor
sbb
xor
in
fcompl
lods
pop
dec
rcrl
data16
inc
enter
pop
xor
testb
test
xor
mov
sbb
xchg
mov
inc
pop
gs
dec
les
icebp
xor
fldcw
test
insl
adc
pop
dec
cs
inc
jl
mov
sub
fsubr
sub
or
and
xor
mov
cwtl
out
popa
lods
cmpsb
inc
std
cmc
mov
xor
js
sbb
inc
movsb
int
movb
mov
mov
jp
lods
fs
and
jecxz
push
fucom
push
repnz
lds
push
jae
adc
add
and
adc
rcrl
jnp
aam
jg
push
push
mov
push
add
enter
icebp
add
xchg
rcrl
add
and
cwtl
pop
mov
adc
mov
adc
sarb
pop
xor
into
adc
rolb
add
popa
jae
fdivr
sbb
mov
mov
xchg
stos
fwait
lret
out
and
or
and
push
sub
push
sub
sub
mov
mov
or
movsb
inc
xor
arpl
xor
inc
mov
xchg
cmp
lea
mov
mov
mov
cmp
or
jae
test
push
and
pop
bswap
sub
dec
fcompl
fisubrs
lock
fcoms
and
scas
cmp
push
dec
mov
push
or
and
mov
xor
nop
imul
in
out
divb
outsb
push
cmpsb
jnp
xor
and
ficoml
sub
fbstp
jecxz
pop
inc
xchg
push
lock
mov
xor
dec
inc
xor
scas
bound
stos
dec
pushf
je
popa
mov
daa
mov
leave
jno
push
cmc
xor
mov
xchg
xchg
cs
jne
mov
push
mov
inc
sbbb
sbb
loope
in
jnp
jns
xchg
dec
cmp
ret
inc
ljmp
dec
push
mov
dec
inc
mov
fistl
push
enter
and
push
or
push
shlb
into
xor
int3
nop
pop
cltd
add
fs
loop
pop
mov
dec
call
pop
fs
dec
stos
inc
sbb
pusha
jp
scas
cltd
shl
pop
mov
add
or
xlat
outsl
lcall
xor
sub
scas
push
jnp
xor
loop
add
rcrl
test
les
cwtl
inc
mov
divb
jns
gs
test
je
pop
imul
leave
mov
mov
test
mov
xchg
data16
mov
xchg
dec
push
les
dec
inc
sub
in
lahf
mov
cmc
inc
stos
mov
insl
xor
in
jbe
adc
roll
mov
cmpsl
mov
es
xchg
call
data16
fcmovu
or
fs
notb
xorb
mov
dec
jecxz
dec
out
xor
ljmp
in
mov
pop
and
mov
imul
jbe
not
cmp
enter
push
aam
cltd
jo
push
dec
mov
ret
in
cwtl
mov
xlat
daa
mov
leave
inc
jnp
dec
outsb
scas
cs
adc
mov
push
addw
mov
dec
sub
mov
xor
add
js
lods
and
int3
test
mov
ss
scas
pop
jecxz
adc
xor
xchg
or
inc
pop
daa
xor
mov
ljmp
push
mov
xchg
mov
gs
dec
lods
into
push
aad
pop
sbb
jnp
adc
out
rolb
push
inc
cwtl
push
test
outsl
sbb
mov
movsl
sbb
xor
insb
mov
mov
cmp
xchg
pusha
xchg
into
mul
clc
inc
fs
lods
push
xchg
push
jp
and
push
lods
adc
sti
and
fnstcw
pop
mov
jg
push
into
pop
daa
mov
cmpb
hlt
lods
shr
ficoml
mov
xchg
xchg
cmp
mov
cwtl
dec
imul
sbb
mov
add
fdivr
sub
xchg
adc
adc
or
fwait
xor
push
dec
cs
cmp
outsb
add
sub
cli
mov
int3
xchg
xchg
lock
mov
notb
mov
cli
jge
enter
test
int
sbb
and
ret
push
fs
aaa
imul
repnz
mov
subb
ja
or
xchg
push
cmp
cmp
scas
bound
les
in
mov
cs
lahf
daa
jns
or
fs
push
xchg
movsl
dec
and
or
arpl
call
dec
cltd
add
and
mov
int
sbb
mov
inc
xchg
cmp
cmp
scas
push
aaa
inc
dec
mov
pop
sub
popf
aam
pushf
cltd
movb
mov
adc
es
rolb
mov
jb
and
pushf
jecxz
js
and
mov
mov
cmp
jb
iret
into
sti
movsb
js
or
lcall
cmp
mov
cs
mov
pop
or
pop
fwait
lock
fiaddl
lods
in
and
out
push
imul
mov
pop
lahf
adc
mov
xchg
cli
movsb
aad
in
lds
jmp
sbb
outsb
imul
aad
jbe
pop
les
scas
int3
mov
add
xchg
mov
outsb
sbb
lret
jmp
data16
in
icebp
repz
mov
mov
inc
cmpsl
jae
cld
adc
icebp
das
dec
jecxz
and
ss
or
lret
jl
lods
jns
jb
mov
loop
fbstp
test
adc
stos
and
iret
xchg
mov
push
scas
mov
or
push
pop
mov
insl
ss
pop
mov
and
push
dec
stos
into
outsl
outsb
xchg
repz
addb
inc
lcall
pop
js
sub
push
add
mov
xchg
cmp
hlt
jb
jl
jns
jbe
cli
fs
dec
adc
enter
and
inc
push
or
cs
jne
mov
mov
pop
pop
xchg
cwtl
sahf
out
jne
aaa
sub
mov
jle
or
into
add
sti
nop
and
test
loope
ljmp
mov
inc
movsb
jne
adc
xchg
jg
mov
dec
pop
add
les
jnp
dec
enter
adc
shll
movsl
inc
dec
jmp
mov
daa
call
sbb
aam
test
pusha
leave
mov
imul
mov
inc
aas
nop
jg
int
or
jne
mov
push
pusha
sub
jbe
adc
fsts
sub
or
imul
sahf
adc
mov
sarb
enter
cltd
gs
mov
jp
test
in
cli
sahf
out
sbb
mov
shrb
pop
repnz
imul
sbb
mov
fisubl
mov
rcrb
imul
push
int3
out
sub
push
fsubrp
inc
cmp
js
adc
addr16
icebp
movsb
mov
hlt
jnp
add
loopne
and
in
popf
imul
push
and
cld
sbb
sbb
iret
movsl
sti
xchg
push
xor
push
mov
lea
lock
test
pushf
aas
push
stos
jb
xorl
and
mov
outsb
aas
std
mov
pushf
sbb
sub
repz
neg
xchg
adc
pop
out
inc
sub
mov
or
jp
or
fsubs
xchg
movsb
push
std
std
in
dec
flds
sub
loop
add
and
mov
shll
roll
inc
push
adc
outsl
shll
lahf
inc
in
xchg
out
mov
cmp
sti
cmp
and
and
pop
pusha
inc
dec
dec
arpl
xor
aaa
fildl
ret
sti
lods
hlt
dec
in
cwtl
subb
inc
inc
inc
and
mov
adc
bound
cmpsb
mov
sti
jns
mov
insl
xchg
cmp
jle
dec
or
test
movsl
fwait
in
fdivs
cmpsl
sti
jb
sub
int3
daa
cmpsb
int3
jecxz
xor
sbb
lds
icebp
push
xchg
pop
jmp
jne
dec
jb
loope
jle
adc
cmp
ret
sbb
out
pushf
pop
mov
inc
icebp
hlt
inc
popa
jl
jmp
hlt
ret
es
aas
rol
mov
movl
cwtl
in
sbb
cli
add
jb
xchg
faddp
aad
push
out
clc
pop
cltd
ret
fnstcw
ret
cmp
pop
cmp
inc
test
into
xor
jne
push
mov
mov
or
sub
dec
pop
sahf
in
mov
push
push
jbe
xor
jbe
cwtl
nop
ret
ret
add
loope
scas
divl
lahf
int3
sub
jns
push
es
loopne
cli
jns
cmpsb
adc
push
cli
loopne,pn
adc
clc
rcll
fldcw
test
cmc
dec
sub
mov
jmp
inc
add
push
push
mov
aaa
mov
leave
cmp
movsb
insl
fdivl
rcrb
cwtl
jmp
jb
and
cmp
mov
inc
pop
arpl
pop
addr16
ja
dec
std
jmp
xchg
dec
or
movl
adc
pusha
jge
pop
aaa
clc
pop
cmpsb
stos
insl
std
bound
mov
xchg
push
dec
sbb
xchg
icebp
jno
insl
cmp
sbb
xor
int
mov
jle
cltd
cmc
stc
or
and
dec
mov
fbld
push
push
fistl
jb
sub
in
ja
xor
add
gs
mov
fmuls
mov
xchg
out
pop
add
ficompl
push
sub
loop
out
lret
repnz
loopne
ret
fs
add
inc
insl
dec
mov
scas
jae
out
sbb
leave
add
out
sbb
arpl
lods
pop
imul
push
ja
addr16
insl
pop
or
jno
dec
pop
arpl
mov
jno
daa
ror
daa
push
aas
cmp
fldenv
lea
in
cmp
dec
fmul
cli
sub
lock
add
aaa
cs
add
shll
push
mov
aas
ja
fdivp
jmp
in
je
adc
sbb
lret
mov
or
in
rcl
mov
cmp
sbb
movsb
ds
ss
dec
and
mov
inc
mov
stc
mov
es
sahf
sub
add
aad
cwtl
popf
ret
cmpl
shll
cwtl
lahf
mov
or
int
lds
add
repz
mov
dec
sahf
mov
ss
stos
add
adc
mov
xor
leave
push
inc
aam
mov
cmp
adc
out
add
repnz
dec
enter
out
ret
adc
jl
stos
fdivrl
cmp
pushf
sbb
sub
push
cmpsl
inc
inc
insl
mov
pushf
mov
xchg
and
xor
mov
loop
cmp
test
or
pop
xchg
adc
jo,pt
lret
arpl
cmp
pop
cld
add
nop
xor
adc
scas
ret
sbb
mov
stc
into
jmp
hlt
shl
inc
xor
dec
jge
cs
mov
pop
xchg
inc
push
xchg
mov
mov
mov
cs
enter
or
mov
inc
out
mov
cltd
cli
sub
push
sbb
cli
mov
jle
ss
arpl
inc
pop
fimull
push
scas
icebp
ficoms
das
pusha
mov
stc
cmp
mov
int3
fldt
ficoml
cmp
stc
lcall
movsb
xor
mov
jns
adc
fmul
mov
push
push
ret
cmp
test
mov
shrl
nop
dec
mov
jecxz
pushf
inc
arpl
mov
dec
mov
pop
jbe
bound
cmc
movsl
dec
ficompl
xor
sub
in
jp
scas
rorb
das
xchg
mov
test
cmp
decl
aas
std
pusha
add
jno
dec
xlat
mov
pusha
sub
adc
sub
mov
movsl
push
xor
and
das
addr16
mov
stc
inc
pop
inc
sbbl
out
mov
movsl
cwtl
idiv
add
rorb
pop
adc
inc
popf
jle
rorl
jae
shll
fdivrl
lcall
fstpl
cmpsl
xchg
testb
jmp
cwtl
sbb
scas
lahf
adc
add
push
cltd
shll
scas
fldenv
sbb
dec
pushf
sbb
xorl
pusha
call
pop
test
std
into
mov
mov
pop
push
or
cltd
cmp
scas
adc
inc
fidivrs
test
xchg
loop
pushf
mov
mov
adc
and
inc
dec
out
fcomps
pop
ljmp
push
pop
movsb
orl
mov
loop
sub
xlat
fisttpl
mov
fnstcw
mov
popf
sub
inc
addl
out
cwtl
js
mov
cmp
js
or
adc
negl
ret
adc
xorl
mov
aad
es
mov
sbb
pop
push
xchg
lret
sub
mov
jmpw
mov
movsb
mov
dec
daa
cmp
insl
loop
sbb
lcall
xchg
xchg
loope
mov
pushf
inc
pop
mov
pusha
stos
cmp
jbe
lea
jo
cmc
gs
pop
addr16
cld
cmp
xchg
into
mov
popf
jl
scas
sub
pop
xchg
je
ja
push
add
jmp
popa
add
push
je
idiv
ret
test
ljmp
lock
int3
add
add
mul
push
int
scas
jbe
lds
clc
adc
or
daa
arpl
mov
fiaddl
and
enter
lea
shlb
cmpsb
inc
dec
push
jo
andl
sub
add
xchg
and
xchg
mov
mov
nop
or
sub
mov
fsubrs
sbbl
push
jb
cmp
push
add
mov
mov
dec
addr16
mov
sbb
jmp
lret
jb
xor
in
pop
mov
adc
imull
adc
jae
jb
sbb
push
pop
push
xor
loopne
pop
jp
bound
or
mov
stc
mov
mov
and
bound
in
outsb
les
jb
loopne
or
call
jnp
outsb
add
pop
sbb
sbb
scas
mov
xor
repnz
cltd
push
push
add
inc
push
and
or
xchg
sbb
les
mov
rol
stos
ffree
mov
pop
je
inc
xchg
fdivrs
mov
scas
rorb
or
and
cmc
jo
shlb
fsubrl
fidivs
jle
dec
or
sub
xchg
mov
push
sub
xor
pop
pop
mov
push
imul
cwtl
aaa
adcb
dec
jle
lods
sub
or
cmp
push
jge
testb
aas
movsl
cmp
imul
fidivrl
mov
hlt
lret
cmp
xchg
aam
fnstenv
dec
inc
enter
inc
push
fldcw
lods
mov
pop
movsl
stos
jl
popa
loope
cmp
push
mov
fisubl
fldl
push
mov
push
imul
icebp
rorl
dec
popf
mov
dec
test
jl
arpl
xor
inc
jge
push
dec
mov
or
xor
dec
mov
lods
sbb
into
ss
cmp
insb
aad
cmp
lds
jl
stos
and
orb
and
inc
stos
stos
or
lds
pop
push
push
push
mov
push
aad
je
movsb
ss
xor
sahf
xchg
rcrb
rorb
xchg
or
push
ss
dec
daa
js
adc
add
push
js
push
mov
out
push
jno
sub
lahf
xchg
out
rorb
push
push
cmp
sbb
inc
and
testl
pop
dec
cmp
push
mov
ds
xor
xor
pop
add
fmuls
gs
push
mov
push
cmp
les
cmp
mov
pop
jle
mov
in
or
out
jno
das
pop
mov
push
pushl
int
pop
xor
mov
sbb
xor
pushf
adc
repnz
inc
sbb
popf
xchg
cmp
inc
push
mov
mov
push
xchg
insb
mov
cmp
push
les
sbb
fucomip
ljmp
repnz
int
cli
mov
jge
jbe
sti
mov
decb
mov
xor
and
pop
dec
into
out
nop
aad
inc
imul
add
cmp
addr16
sbb
enter
xchg
mov
lds
sbb
jmp
add
push
in
xor
add
mov
pusha
mov
scas
mov
adc
fsubrs
insl
and
fisttps
cltd
sub
nop
data16
push
notl
js
mov
inc
test
jo
sub
ficoml
push
loopne
jne
adc
out
repz
pop
sti
mov
jbe
fildl
cwtl
jl,pn
lock
push
call
inc
push
lret
pop
shlb
outsb
push
cmp
rclb
mov
pop
movsb
add
lods
cmc
add
mov
cs
jne
ja
repnz
ljmp
push
mov
pop
call
fldl
in
loopne
fs
cmpsb
aad
mov
pop
pop
xor
and
adc
shrb
lock
cmpsb
jle
jo
push
int3
fwait
pop
mov
aad
xor
pop
fstpt
mov
std
divb
inc
jno
mov
sahf
sbb
jg
mov
adc
idiv
mov
pop
out
aad
jmp
fdivl
movsb
push
stos
cwtl
inc
call
dec
sub
out
and
fstp
or
add
or
push
lods
mov
test
and
push
jnp
aad
jno
repnz
or
nop
adc
es
imulb
xchg
cld
add
es
bound
push
add
scas
jl
xchg
add
aam
daa
lret
jmp
cmp
inc
push
out
or
shlb
cmc
daa
stc
sahf
push
adc
push
fwait
or
jp
fcom
out
inc
mov
jg
mov
imul
xor
call
push
xor
xor
outsb
sti
sbb
dec
sbb
push
add
sbb
aad
dec
inc
mov
adc
jns
lods
inc
jae
test
pushf
cwtl
or
sub
or
shlb
outsl
add
fsubrs
inc
jge
testl
xor
jle
push
mov
fwait
insl
enter
mov
sub
xchg
jno
shrb
les
adc
mov
inc
sbb
dec
addb
ficoms
bound
fidivrs
add
pop
jb
std
jbe
into
xchg
push
js
jmp
fdivrs
xchg
repz
int3
and
leave
js
fadds
inc
sti
push
rcl
push
dec
or
pop
clc
pusha
ss
fldenv
mov
inc
jne
test
into
jb
sarl
add
jmp
adc
mov
push
mov
add
jge
int3
in
mov
ljmp
dec
push
or
push
push
fistl
jnp
sbb
loopne
stc
es
xor
into
push
into
ljmp
or
jl
lahf
jp
xchg
test
cmp
pushf
push
fstl
pop
mulb
int3
xor
mov
mov
xlat
stc
je
mov
jle
cltd
pusha
push
inc
data16
mov
iret
mov
sbb
imul
repz
sbb
xor
jno
insb
pop
shl
loopne
and
inc
or
jge
inc
jmp
aas
shrb
jl
cmc
loope
jb
lahf
int3
cltd
movsl
test
pop
dec
mov
sub
in
push
pushf
test
test
mov
ss
mov
loope
hlt
mov
xchg
js
pop
inc
imul
jl
mov
xorl
movsl
inc
or
aam
jns
and
xor
divb
loopne
adc
dec
dec
dec
in
and
pop
sbb
or
push
pushf
pop
outsb
mov
push
adc
xor
jmp
sahf
xchg
xchg
daa
je
sub
ss
cmc
fldenv
xor
sub
aaa
bound
pop
test
push
loop
mov
sbb
vphadduwd
insb
and
fdivrl
cld
or
lea
mov
jecxz
jl
xchg
hlt
mov
sarl
fs
lds
mov
arpl
xchg
leave
iret
out
inc
or
je
push
cmpsl
mov
incl
mov
scas
ficompl
fisttpl
inc
jne
and
fs
pop
cmp
in
xchg
xchg
mov
mov
inc
vpcmpeqd
mov
push
or
je
dec
lret
sub
loopne
dec
push
lock
cltd
outsb
mov
lods
mov
sti
or
sub
aaa
pop
movsb
ja
arpl
pop
jne
sub
out
inc
ss
push
or
dec
sbb
and
inc
ficompl
lahf
xchg
loopne
int3
je
cld
aaa
jbe
aad
mov
ljmp
add
push
bound
push
int
fdivrs
pop
sub
jl
adcb
aas
cs
cmp
jo
or
mov
dec
daa
xchg
pushf
imulb
cmp
inc
lret
adc
movsb
loope
sti
mov
scas
adc
fwait
and
jno
arpl
sbb
insl
pop
or
jl
inc
dec
cmc
ret
dec
rol
test
xchg
push
push
dec
inc
sub
add
ds
and
jo
mov
and
pop
cmp
push
mov
pop
or
lock
mov
push
jns
dec
push
mov
nop
ret
push
inc
mov
mov
ds
xchg
ds
insb
mov
roll
or
stos
shll
mov
pop
adc
and
leave
repz
insb
jbe
inc
das
lock
sbb
cltd
xchg
shl
push
jno
pushf
inc
cmp
fwait
sahf
sub
push
icebp
push
push
dec
mov
lock
fs
xchg
jecxz
cld
rsqrtps
dec
mov
jmp
add
and
addr16
sub
out
dec
jg
loopne
xchg
push
or
rcrl
mov
out
lock
or
cmp
or
call
pop
fdivl
jae
add
add
mov
jns
dec
out
scas
insl
xchg
scas
sahf
cmp
iret
or
dec
adc
out
movsb
shr
or
std
xchg
jns
mov
push
sub
divl
scas
pop
stos
pusha
stc
sub
xchg
loope
ja
in
dec
add
int3
lret
adc
push
adc
inc
lods
jae
repnz
inc
out
sti
mov
lds
jb
mov
popf
adc
pop
sub
jge
in
dec
repz
mov
lea
mov
sbb
mov
pushf
pop
fsubl
loopne
scas
sbb
stos
cmpsl
sub
lds
or
dec
mov
lods
jae
dec
mov
pop
lods
xor
or
xor
jg
cmpsl
stc
dec
jbe
lock
pop
jno
inc
push
pop
jnp
cmpsl
jnp
xor
cmc
mov
jno
ja
mov
mov
enter
sbb
loopne
mov
es
shll
gs
mov
dec
das
pop
incl
mov
int3
mov
xor
lcall
push
gs
inc
lea
and
lcall
mov
push
add
shrb
push
mov
push
mov
push
test
dec
sub
mov
insb
cmp
pop
add
pop
insb
sahf
push
cld
data16
push
mov
js
adc
sub
xchg
pusha
jg
pusha
dec
popa
nop
cwtl
cmp
outsl
fnstcw
aas
sub
pop
popa
cmc
daa
adc
mov
stos
mov
cld
lds
mov
dec
enter
xor
push
pop
xor
pop
lods
and
push
sbb
inc
sub
add
mov
dec
push
and
push
xor
in
sbb
pop
rcrl
pop
sbb
arpl
add
popa
xor
push
popa
sarb
inc
clc
jg
pop
adc
xor
xchg
push
enter
xchg
xchg
add
xlat
jge
mov
leave
push
mov
loopne
ret
mov
or
sub
mov
inc
rorl
idiv
incb
scas
enter
insb
sub
and
pusha
lret
add
clc
popa
dec
push
ret
jecxz
jecxz
or
mov
jae
pop
jmp
xchg
aad
sub
mov
lods
xchg
add
fucomp
in
dec
aaa
pop
push
inc
adc
movsl
xchg
push
repnz
andl
xor
mov
xchg
enter
xor
insb
mov
mov
inc
shll
sbb
out
xor
pusha
outsb
pop
cld
add
dec
xchg
dec
mov
push
mov
mov
inc
add
jno
push
fnstenv
add
jbe
cmp
pop
fistpl
pushf
and
and
and
xor
or
loop
les
lcall
pop
repz
lds
jmp
loopw
jmp
sahf
rorl
std
stos
ficomps
mov
daa
xchg
sbb
gs
fsubs
add
mov
outsb
dec
inc
in
imul
xchg
jae
mov
cltd
test
mov
dec
sarl
dec
sti
lods
push
jne
mov
outsb
nop
xchg
push
fdivrp
shl
jle
mov
pop
push
test
out
cmp
lret
xor
sub
jp
test
mov
xor
stos
push
jo
aas
imull
gs
xchg
sub
mov
sbb
nop
mov
pop
jns
pop
lea
rcl
dec
loop
xchg
les
popa
xchg
sub
ja
xor
scas
adc
lcall
lods
decb
arpl
mov
jnp
and
shrb
xor
int
pop
mov
xchg
sub
sbb
enter
and
bound
inc
jnp
lods
movsb
int
push
in
mov
stos
xchg
loop
pop
ret
std
aam
xchg
xchg
int3
mov
mov
mov
jmp
jbe
mov
ja
mov
dec
lret
sub
outsl
mov
out
push
pop
cmp
pop
cmpsl
lds
adcl
lock
insb
test
aad
sbb
fsubr
test
lea
xchg
add
or
out
xor
in
mov
push
adc
rcrb
or
jno
fidivrl
push
mov
lods
and
mov
mov
aas
addl
adc
mov
mov
xchg
sub
pop
pop
test
cmpsb
shl
stc
mov
cmp
pop
adc
mov
insb
sti
inc
xchg
mov
cmc
mov
jnp
sub
lret
xchg
fwait
dec
stc
lods
mov
daa
out
jnp
adc
xor
sarl
jle
xor
nop
test
in
xor
push
pop
pop
dec
scas
sub
int
add
add
mov
les
es
or
aaa
push
ret
cmp
push
sti
push
inc
sahf
mov
adc
mov
outsb
movl
xchg
mov
jecxz
sub
xor
or
bound
daa
xchg
push
pushf
mov
mov
push
push
sbb
jg
ret
cs
inc
xchg
popf
das
sarb
pop
mov
push
cmp
arpl
js
inc
xchg
pop
adcb
xor
dec
xor
cmc
mov
mov
shll
add
and
push
and
cmpsl
add
popf
insl
jo
out
stos
je
fildll
jg
adc
test
mov
jge
pop
push
aas
pop
movsl
jnp
lds
mov
xchg
jae
sub
fcmovbe
pop
lcall
cs
xor
lods
sub
test
or
pushf
int3
leave
add
int3
dec
inc
clc
je
inc
xchg
popa
push
outsb
sbb
cmp
push
xchg
aad
out
movsb
das
cmp
xchg
in
xchg
push
es
cltd
lods
add
push
adc
pop
fmul
ja
ss
lahf
cli
enter
push
xchg
out
fdiv
inc
lret
lret
test
xlat
dec
adc
cmp
test
fiaddl
mov
and
out
fstpt
inc
dec
fcoms
mov
mov
xor
cmpsl
lahf
or
xchg
pop
pop
push
cmp
dec
flds
mov
sub
mov
aad
adc
out
push
mov
mov
mov
shl
cmp
mov
shrb
sbb
cmp
outsb
in
mov
dec
dec
sub
mov
popa
dec
sub
daa
dec
xor
std
mov
sbb
loop
push
test
pop
cwtl
inc
sahf
pop
or
stos
fsubrp
icebp
xor
jb
push
jg
scas
mov
rcll
xlat
in
es
push
add
mov
xor
movsb
rcl
loop
popf
pop
sti
andl
fildl
fdivl
dec
sbb
fsub
rcrl
mov
scas
mov
loopne
lds
jo
jbe
push
popa
sub
mov
inc
ljmp
sub
shr
and
stos
adc
mov
shlb
jge
iret
mov
sti
sarb
in
sbb
inc
cltd
jp
call
out
jp
jge
jecxz
dec
add
pop
dec
pop
cld
je
xchg
sub
fwait
xor
fmull
cmp
hlt
push
adc
fadds
sub
mov
cmp
and
dec
cmpb
stos
lods
cs
cltd
sbb
or
das
xor
inc
icebp
mov
jnp
mov
cmp
cmc
scas
cmp
xor
and
dec
lds
xor
sbb
mov
mov
test
data16
xor
ds
jmp
mov
repnz
div
cli
in
push
into
push
hlt
sbb
leave
ret
divl
push
inc
mov
dec
sahf
call
subl
inc
movsl
inc
mov
and
cmc
sti
dec
jno
std
cs
fnstcw
cmc
jle
mov
in
mov
enter
xor
fistl
int
lock
outsb
ds
insb
dec
dec
lea
jp
loope
push
loop
inc
mov
outsb
popa
pusha
push
or
ds
std
test
mov
cmp
cmpsb
stos
sbb
xchg
jo
lcall
pop
fsubrs
push
in
mov
sbb
out
stc
pop
into
mov
add
mov
add
and
lret
dec
mov
push
jp
xchg
dec
jmp
int
push
push
add
mov
fists
jg
jnp
ficomps
inc
repz
xchg
xchg
mov
xchg
jae
add
xchg
pop
test
pusha
ja
add
je
dec
jo
cmp
pop
or
mov
lods
std
imul
sbb
add
xor
cmpsb
das
jb
inc
sbb
and
xchg
movsl
fldenv
xchg
xor
data16
or
mov
ss
xchg
movsb
xchg
or
jmp
sub
jp
jp
push
into
pop
movsb
popa
add
cmp
inc
decb
or
xchg
adc
and
js
repnz
addl
cmpsb
mov
mov
xchg
xchg
and
sbb
adc
sbb
add
jno
sub
hlt
les
inc
cmp
daa
scas
mov
in
std
push
stos
dec
arpl
cmp
ror
sub
add
mov
pop
std
sbb
push
inc
icebp
rolb
jmp
stos
mov
mov
adc
xor
sbb
inc
inc
bound
mov
iret
sub
or
push
adc
js
daa
add
add
xchg
insl
stos
adc
mov
addb
fs
repz
in
cmovp
cmp
aam
mov
push
int3
xor
or
mov
insb
stos
add
ret
add
adc
rclb
mov
xor
rdpmc
add
ljmp
lret
add
xchg
mov
loop
lahf
sti
push
push
arpl
adc
not
negl
call
aaa
cli
xor
das
repz
ss
test
ja
shlb
mov
out
mov
push
pusha
mov
in
cmp
mov
jbe,pt
cltd
out
sbb
imul
pop
sbb
mov
cmpsl
cmpsb
xor
push
cmp
jp
insb
adcb
pop
dec
and
cmp
push
adc
stos
aad
jnp
xlat
test
jmp
jmp
mov
cmp
outsl
addl
push
fs
inc
adc
fcmovbe
hlt
leave
dec
sbb
scas
or
leave
fidivrs
cli
loope
fmul
mov
ljmp
or
xchg
mov
in
add
jmp
adc
fwait
xchg
aad
pop
repnz
inc
push
add
call
ja
lods
repz
shrl
inc
fcoml
out
jle
mov
sbb
pop
fnstcw
ljmp
pop
sbb
mov
fdivs
inc
push
mov
jb
xor
outsl
sahf
stos
loope
add
push
pop
lods
cmp
fdivp
mov
jle
lock
repnz
add
das
enter
call
adc
fwait
orb
mov
int
and
popa
xor
fs
pop
pop
loop
shrb
icebp
test
fs
fdivs
mov
mov
or
addb
sbb
pop
add
add
mov
push
mov
sti
adc
and
inc
fwait
outsb
dec
insl
ret
or
jne
leave
xchg
xor
add
pop
ss
movsl
stos
popf
sub
aas
xchg
mov
imul
jno
imul
jmp
out
xchg
ljmp
jbe
cwtl
lea
mov
js
cmpsb
shlb
shll
movsl
test
repz
aaa
jno
int
push
xor
adc
ret
addr16
pop
sbb
mov
lahf
fwait
test
les
pop
pop
and
jge
lcall
rclb
or
cli
xor
sub
dec
sti
and
fnsave
dec
test
adc
and
dec
jge
ficoml
mov
subb
inc
xchg
mov
sbb
inc
or
clc
es
iret
dec
out
jae
scas
mov
dec
and
addr16
popf
inc
or
jns
in
ret
sbb
out
lcall
outsb
adc
jecxz
sti
hlt
repnz
movsl
push
inc
sub
fidivs
xchg
out
lock
push
push
adc
outsl
ret
sahf
pop
pop
or
scas
sti
jnp
mov
cli
cmovp
cmp
inc
jne
add
jmp
sub
xchg
bound
aam
lcall
roll
lods
scas
js
icebp
jmp
inc
stc
ljmp
jmp
push
or
call
sbb
add
cmp
push
stos
mov
jo
jmp
dec
mov
jae
inc
cs
shll
test
movsl
movsl
loope
dec
fcompl
pop
lods
fisttps
xor
sbb
iret
hlt
push
mov
iret
ja
xor
jp
add
loopne
fimull
push
les
pop
cltd
cmc
nop
xchg
adc
jle
aas
xor
adc
adc
lods
sub
setle
lods
jae
cs
mov
iret
jg
jmp
xchg
lods
mov
jmp
jle
jae
cmovl
mov
mov
sbb
inc
sub
les
sub
mov
fwait
or
sub
subl
popa
pop
mov
jle
sub
pop
imul
pop
jno
xchg
and
insl
inc
mov
scas
adc
shlb
andl
mov
dec
scas
ret
xor
add
ret
dec
mov
cltd
xlat
sub
dec
outsb
jge
push
jmp
sahf
call
jns
xchg
mov
adc
push
scas
inc
inc
adc
push
imul
orb
mov
adc
xor
push
scas
xor
mov
lret
pop
jl
xor
into
das
mov
out
pop
push
into
scas
mov
jb
test
cmp
ficoml
jl
jp
int3
ret
sbb
add
push
xor
mov
adc
add
mov
js
cmp
into
aas
mov
in
imul
fwait
lret
lret
add
mov
in
adc
push
pop
es
imul
cwtl
fdivrs
pop
js
je
mov
btr
pop
cmpsl
lods
daa
pop
adc
sbb
scas
xor
mov
shll
test
mov
sbb
rorl
sub
xchg
cs
jg
enter
leave
cmpsl
push
pusha
in
add
sub
outsb
dec
clc
add
mov
and
jne
je
loope
jo
pushf
cmc
data16
adc
add
mov
push
sub
sub
mov
jle
cltd
in
or
add
out
das
pop
pushw
rcrl
pop
mov
pop
xor
flds
pop
sub
int
push
lock
adc
xlat
stos
xchg
push
pop
xor
fimull
xor
insb
push
aam
call
mov
in
into
cmp
and
fidivs
scas
push
scas
fldl
push
cltd
shrl
xlat
repnz
mov
xchg
inc
push
idivb
repz
out
rcrl
je
xchg
icebp
xchg
insl
add
mov
adc
inc
enter
scas
clc
sub
or
xchg
aas
sub
enter
cmp
sub
sahf
fsubp
call
arpl
out
psubsb
mov
loop
popf
sbb
fidivl
jecxz
popa
xor
popa
jnp
inc
jge
test
mov
pusha
ss
cmp
dec
repz
adc
dec
push
test
push
iret
in
not
iret
notb
pop
loop
lcall
int3
hlt
ljmp
fs
rcll
push
sti
into
cltd
jne
int3
shlb
pop
cmc
add
mov
daa
and
scas
add
xchg
push
outsb
test
fidivrl
sti
sub
mov
sub
jo
mov
bound
in
jo
cmp
dec
push
insl
dec
mov
notl
mov
and
into
inc
xor
scas
or
push
mov
push
push
cld
in
clc
loope
bnd
mov
js
and
and
fdivrp
rcrl
negb
push
fsub
sub
push
cwtl
pusha
cmpb
das
add
jae
cmp
pusha
and
or
sbb
lret
into
xor
xchg
jp
xor
fldcw
cli
es
jb
lods
add
dec
aas
push
mov
ficompl
push
lahf
pop
icebp
data16
lods
ja
or
das
aad
push
out
pop
ficoms
inc
aas
push
mov
sbb
pop
push
ror
jb
cli
fimuls
lea
inc
subl
je
push
mov
xchg
fildll
call
sbb
fwait
xchg
push
arpl
add
cmp
ficoml
mov
push
mov
loopne
pop
pop
cmp
xlat
repnz
dec
aad
mov
push
jb
outsb
insb
adc
cmpsl
xor
push
daa
aam
aaa
push
into
fisubs
sarb
jmp
int
test
leave
push
cmc
loop
xor
es
rcrl
scas
mov
sub
add
or
mov
mov
xor
mov
aas
inc
shlb
jnp
inc
js
pop
dec
xlat
xchg
stos
inc
dec
and
adc
outsl
fwait
mov
fiaddl
xchg
sub
int3
pop
das
sti
push
mov
jecxz
sub
push
in
jle
sahf
decb
push
dec
addr16
dec
out
es
fwait
icebp
adc
int3
xchg
js
push
or
hlt
adc
xor
fistl
dec
mov
jbe
and
movswl
cs
addr16
stos
mov
inc
xchg
idiv
insl
xor
mov
fnstcw
jmp
cmp
mov
fimuls
jge
push
cmc
jg
xchg
xchg
jns
mov
in
fldcw
jmp
jnp
mov
aas
test
sub
hlt
or
inc
xor
xchg
push
scas
and
test
mov
fldenv
ljmp
push
fld
cmp
mov
pusha
mov
loopne
rol
loop
lea
inc
icebp
lret
lods
cmp
das
std
movsl
cmp
stos
out
jo
cmp
xor
pop
push
adc
fimull
sahf
pop
sbb
mov
sub
shlb
ljmp
and
lahf
push
ds
inc
iret
inc
jl
pop
cmp
cmp
pop
and
jbe
xchg
jb
fs
add
push
or
pop
adc
sti
fistpll
or
call
dec
jo
bound
xchg
pop
xchg
inc
mov
cmp
sti
test
add
cwtl
push
mov
pusha
nop
mov
adc
sub
mov
hlt
fcmovnb
pop
sbb
sbb
mov
iret
clc
push
jmp
jg
cmp
sub
sub
data16
jmp
rcr
xor
add
jg
add
aaa
lret
loope
inc
sbb
clc
cmp
mov
clc
dec
and
mov
jp
pusha
shlb
sbb
mov
shl
pop
pusha
mov
movsl
sbb
mov
scas
in
jmp
test
int
xor
cmp
fimull
fisttps
xchg
aam
mov
ret
inc
lock
cs
push
popf
lcall
add
std
jmp
add
adc
movsb
jecxz
pop
outsb
dec
jno
js
mov
jge
cmp
stos
mov
xchg
cmpsl
mov
repnz
filds
add
xchg
cmp
pop
stos
ja
mov
push
cmpb
imul
stos
ret
lock
mov
mov
cld
pop
nop
pop
das
push
cld
fwait
sub
into
iret
test
push
xor
mov
leave
xchg
in
dec
test
inc
fdivrl
mov
xchg
in
pop
sbb
pop
mov
lods
cltd
sbb
lret
cmp
dec
in
lods
subb
and
pushw
xchg
stos
xor
push
mov
pushf
xor
std
fs
lock
sbb
lea
inc
aad
cs
outsb
subb
dec
pop
jae
fcmovnu
shll
mov
fldenv
into
out
dec
push
xor
inc
xor
pop
std
xchg
sti
mov
fsincos
sbb
incl
sti
imul
jbe,pt
pop
jl
movaps
out
das
cmp
lock
pushf
pushf
pop
movsb
mov
in
dec
jnp
test
in
sub
xchg
mov
ja
popf
push
fcmovnbe
or
add
xlat
xchg
movsb
ret
lds
adc
jo
out
decl
sti
mov
addl
fs
push
push
jle
inc
sti
data16
pop
lea
sbb
xchg
popf
test
hlt
leave
dec
fidivrl
dec
lods
lret
mov
jnp
xchg
cld
sbb
mov
dec
push
push
or
adc
and
push
mov
daa
pop
movsb
mov
add
sbb
jmp
or
mov
pop
fadd
je
or
mov
daa
inc
jbe
cmp
repz
cmp
lea
enter
push
cmp
fnstsw
push
or
jle
pop
adc
jge
mov
stos
out
inc
add
sub
push
mov
pop
js
jmp
mov
jne
in
pop
mov
in
inc
scas
cmp
out
add
jns
fsubs
aaa
add
lods
push
jle,pt
inc
jbe
nop
sbb
sub
movsb
pusha
jne
inc
jnp
xchg
or
mov
mov
push
fs
cmp
mov
xor
outsb
mov
cmpsb
sbb
cltd
roll
stc
cmp
cmpsl
adc
mov
cld
test
aad
insb
andb
shrl
mov
sub
push
jae
dec
inc
sbb
scas
div
xor
xchg
cmp
cmpsb
ss
pushf
dec
inc
xchg
movsb
pop
adc
setl
cmp
jmp
mov
push
sub
scas
outsl
xchg
int3
mov
lock
push
frstor
push
sbb
jp
rcll
lahf
stos
call
pop
outsb
pop
push
lds
repnz
mov
push
adc
test
xor
test
mov
sbbl
or
icebp
push
cld
fimull
cld
inc
ss
in
push
stos
out
leave
inc
pop
push
and
mov
push
lods
add
cltd
ljmp
push
mov
or
mov
out
xchg
mov
test
pop
mov
les
adc
xor
repz
jo
sarb
daa
xchg
sarb
in
push
imul
jle
jae
xor
data16
popa
jecxz
sub
xchg
or
popf
es
add
adc
fcomps
mov
pop
into
lahf
insl
mov
inc
adc
mov
inc
and
aaa
movsl
into
int
aam
add
dec
popa
pop
stos
scas
and
mov
jbe
dec
sbb
mov
add
push
int
stos
inc
daa
shlb
leave
mov
xchg
jecxz
out
cmp
mov
repnz
ds
push
jle
loopne
outsb
mov
and
call
push
mov
call
mov
lods
pop
fidivrl
clc
imul
aam
or
lret
pop
inc
jecxz
mov
jbe
fldenv
jne
mov
xlat
mov
insl
jb
dec
sub
xor
push
xchg
loop
and
xchg
mov
jno
mov
cs
pop
pop
or
mov
inc
mov
fidivs
in
push
test
mov
or
or
push
mov
ret
rcrl
cld
std
mov
mov
enter
test
lods
loop
imul
call
and
add
js
cmpsb
dec
add
mov
test
dec
enter
test
bound
jge
leave
mov
push
icebp
loope
sub
inc
jmp
and
in
push
fistpl
cmpsb
sbb
and
int
inc
xchg
xchg
xchg
sub
pop
inc
cmc
add
and
cmp
lret
push
cwtl
mov
mov
push
mov
test
icebp
scas
dec
cltd
stos
inc
sbb
clc
outsb
xor
or
jae
dec
jae
popf
mov
add
adc
jae
mov
sti
push
jno
sub
dec
loop
aaa
mov
mov
sub
mov
adc
cmp
aad
fwait
sbb
push
rorb
push
adc
loopne
pop
fnstsw
cld
shll
test
mov
in
cmp
in
daa
cld
pop
jnp
inc
sbb
dec
or
mov
jnp
outsl
add
ja
bound
adc
in
hlt
mov
sub
adc
leavew
jb
outsl
mov
scas
ss
ss
fldenv
cmc
xchg
stc
adc
xchg
push
mov
add
xchg
cwtl
add
into
inc
and
jae
imul
cmp
and
jne
jle
push
jmp
andb
ja
lock
mov
and
out
jp
pop
mov
mov
jmp
adc
pop
add
cmp
pop
dec
test
sbb
xlat
jecxz
add
clc
sub
xor
sub
push
dec
aad
mov
in
lret
and
jg
adc
push
in
mov
adc
sahf
jp
ds
mov
dec
cmpsl
lock
jle
inc
dec
dec
dec
ja
call
cwtl
shll
sbb
inc
aas
dec
add
in
add
aas
pop
addr16
std
cmp
std
movnti
jns
adc
mov
into
aas
arpl
imul
mov
out
clc
and
data16
sbb
loope
daa
out
int
xchg
stc
int3
cmc
lea
arpl
fidivl
arpl
ret
insl
leave
sahf
popa
sub
mov
popf
jo
loop
lret
int
in
je
addr16
adc
mov
stos
mov
hlt
adc
sub
in
repnz
inc
xchg
xor
loop
sbb
mov
xor
mov
ret
inc
sbb
pushf
add
sub
xchg
pusha
cmp
adc
out
and
xor
into
outsl
imul
cwtl
div
leave
mov
add
lock
sub
xchg
daa
adc
loop
outsb
xlat
stos
cmc
popa
sbb
es
jbe
push
push
inc
pop
xor
je
gs
js
cmpsl
adc
xchg
rcll
mov
lret
cli
push
jecxz
cltd
add
movb
nop
gs
cli
pop
or
cltd
xadd
jge
mov
imul
in
dec
out
jge
and
push
int3
repz
cmpsb
jg
pusha
mov
rorl
lds
xchg
xlat
loopne
inc
out
dec
pusha
fsub
cltd
clc
daa
adc
xor
xor
dec
xchg
fnstcw
repz
mov
das
ljmp
cmpsb
add
inc
or
adc
test
popl
push
out
cmp
fcmovnb
fsub
or
adc
jg
pop
adc
mov
sbb
sarb
sti
out
push
push
push
jns
ja
cs
movsb
pop
ds
push
pop
sbb
pop
mov
fsubrl
push
in
or
inc
lret
loop
out
fcoml
pop
dec
addr16
sub
pop
sahf
lods
pop
cwtl
jmp
xchg
cs
sbb
mov
jmp
add
ror
cmp
inc
cmpsl
mov
in
ror
cmpsb
add
test
aad
adc
sub
cmp
xor
push
fwait
ss
test
or
pop
test
in
cli
je
outsl
xchg
sub
and
fadd
mov
inc
mov
xlat
gs
sahf
outsl
fs
test
inc
cwtl
es
jno
cmpsl
push
mov
or
je
fstps
pop
xor
or
mov
xchg
xor
cld
sbb
in
push
inc
cli
daa
test
loope
repz
xchg
sub
push
popa
and
pop
lods
ret
jmp
insb
int
xchg
adc
jne
mov
inc
sbbl
mov
repnz
sub
jmp
sub
fildl
bts
incl
jmp
push
cmc
aaa
lret
pop
sub
push
mov
pop
stos
push
sbb
mov
lea
xor
and
cs
mov
mov
pop
insl
xchg
mov
lret
sub
adc
or
add
mov
enter
divb
stos
add
push
in
ds
or
and
xor
mov
outsl
test
repz
sti
int3
push
inc
and
add
mov
xchg
sub
les
imul
addr16
stc
cmp
xchg
ret
xchg
in
pusha
or
push
mov
aas
fwait
into
lret
dec
push
inc
cld
push
push
dec
cltd
jne
negb
dec
xchg
lods
subl
in
xor
dec
mov
not
aad
in
add
or
cwtl
jnp
pushl
aam
and
dec
mov
and
xchg
sbbl
mov
insb
mov
fdivs
out
add
mov
fsts
bound
sbb
push
bound
mov
loop
popa
ret
ljmp
xor
fmuls
mov
push
push
frstor
jno
testb
in
js
popa
adc
pop
aas
xchg
clc
jmp
mov
xor
pop
sar
and
sub
adc
or
inc
sbb
loop
jno
lods
push
leave
das
dec
dec
stos
sub
inc
sti
imul
dec
mov
pop
mov
loope
call
mov
inc
jo
or
ds
xor
xorl
rol
or
xor
fs
addl
mov
cwtl
fucomp
add
popf
fld
imul
adc
mov
fs
mov
rcrl
inc
ret
dec
inc
daa
ss
lahf
int3
or
enter
or
xor
or
dec
mov
xchg
ficomps
xor
ds
iret
inc
or
or
jae
sub
mov
mov
push
mov
pop
add
sarb
aad
in
or
add
mov
mov
adc
dec
inc
aaa
sub
mov
arpl
popa
mov
pop
in
popf
pop
add
push
sub
out
inc
aaa
mov
pop
jb
jnp
lds
add
push
push
adc
ja
and
inc
mov
sub
jae
popf
sbb
movsb
sub
test
insb
repz
in
push
jmp
inc
xor
cbtw
adc
mov
mov
adc
mov
mov
and
jns
lea
pop
dec
add
lahf
hlt
jns
dec
and
std
sbb
iret
lods
mov
hlt
pop
inc
mov
rorb
popf
adc
ds
daa
mov
dec
pushl
and
test
out
jb
out
pushf
fwait
ljmp
add
call
mov
push
push
hlt
or
cltd
pop
push
lods
mov
dec
cmp
ret
mov
inc
clc
push
outsb
lahf
jno
dec
cld
in
pusha
and
into
dec
jns
out
jp
jnp
js
or
gs
jb
xchg
pop
jno
stos
repnz
jecxz
sbb
push
mov
leave
mov
cmp
push
sbb
push
lea
fistpll
cmp
imul
mov
popa
cwtl
xchg
adc
std
imul
aaa
push
pop
sub
add
movsb
mov
je
outsb
dec
movsb
arpl
filds
fistpll
in
dec
daa
scas
push
ss
pusha
lds
mov
mov
lret
sub
push
push
cmp
idivb
push
mov
mov
adc
in
push
push
rcrb
imul
iret
sti
stc
jp
cmp
xchg
cltd
mov
test
das
xor
dec
mov
arpl
mov
orb
add
es
std
icebp
dec
mov
call
add
rclb
mov
shr
xchg
or
push
popa
xchg
lods
shll
mov
mov
es
mov
or
jp
addr16
in
js
or
pop
xor
push
cmp
cmp
jge
sub
mov
orb
mov
or
push
aaa
loop
dec
pusha
mov
pop
xchg
xor
dec
in
addr16
jp
mov
mov
fists
int
popl
popf
jmp
in
test
mov
fadds
pop
lods
pop
pop
fadds
push
push
mov
mov
jmp
sbb
popf
mov
into
and
mov
sub
aaa
outsb
push
push
pop
or
xchg
mov
cmp
or
or
add
ss
outsb
or
outsb
divb
and
repz
jg
push
int
neg
clc
add
adc
rcll
push
xchg
mov
in
pop
lock
or
push
in
dec
arpl
imul
push
sti
ja
sti
in
pop
outsl
arpl
jae
jp
outsb
mov
mov
stos
mov
in
sbb
add
out
in
sub
push
repz
dec
stc
jns
sub
adc
inc
lret
pushaw
cmp
mov
sahf
pop
fiaddl
and
lea
mov
in
or
ret
cmpl
lock
fimull
adc
push
jmp
add
xchg
sub
xchg
and
cmp
mov
out
into
or
fcom
jo
rcrb
aaa
push
std
mov
jecxz
ds
push
inc
jg
sbb
xor
subb
div
iret
cmp
inc
imul
pop
mov
cmpb
dec
mov
ret
inc
idivl
inc
push
jl
xchg
mov
push
orl
push
pop
mov
ret
mov
call
das
adc
mov
loop
sbb
fs
cmpsb
xchg
outsl
or
enter
addr16
pop
jo
inc
mov
hlt
cs
repnz
cmp
dec
pop
nop
fucomi
push
adc
movsb
cmc
outsl
xor
ret
sbb
popf
int3
pop
jge
scas
mov
xor
out
add
xchg
pop
insb
and
push
push
pushl
jns
or
pushf
push
loopne
pop
sbb
sarl
test
mov
mov
sub
enter
or
aad
inc
out
enter
or
int
adcl
and
jne
inc
and
mov
adc
std
inc
repnz
add
xchg
mov
inc
dec
mov
std
sbb
sbb
add
push
inc
ljmp
dec
testl
out
push
ja
lds
dec
or
mov
test
fldt
mov
gs
negl
lret
addr16
in
insb
fst
je
and
inc
out
push
daa
loopne
add
adc
hlt
and
jae
inc
cmpsb
cmp
pop
in
sahf
cmp
or
jb
mov
out
in
add
daa
fldl
mov
sbb
call
jp
mov
and
mov
mov
cmp
mov
cmp
sbb
je
popf
mov
mov
cmpsl
dec
push
fdivr
fidivs
sbb
fisubrs
rcrb
jns
icebp
icebp
pop
sub
add
movsl
pop
or
pop
and
mov
adc
stos
jno
in
movl
mov
popf
in
lea
in
push
mov
push
int3
imul
xchg
scas
test
scas
ds
dec
mov
push
jecxz
inc
and
out
dec
fdivr
mov
jecxz
push
or
mov
mov
test
cmp
cmp
xor
pop
pusha
stos
push
orb
jno
pop
into
xor
sbb
mov
clc
pop
mov
xchg
mov
jbe
int3
cmp
call
pop
lahf
in
sub
lock
mov
xor
xchg
loope
aas
ss
dec
mov
lea
cld
inc
xor
or
popf
jg
jns
mov
ret
nop
ss
dec
in
adc
jg
push
sti
dec
xchg
push
inc
mov
pop
sbbb
cltd
jno
sub
fwait
dec
push
cmp
jno
loopne
in
sbb
negl
inc
nop
loopne,pn
sbb
push
lret
sub
mov
faddl
jg
sbb
pop
cmp
es
movsb
js
out
in
iret
push
mov
push
sub
dec
out
addl
insb
cmpsl
jge
jg
or
inc
xor
mov
jecxz
leave
xor
or
mov
call
jb
cwtl
mov
mov
mov
sbb
mov
in
fwait
loope
mov
lods
psubd
dec
inc
fdivl
imul
aas
outsb
pop
jl
jmp
cmp
out
scas
dec
mov
mov
adc
ds
int3
nop
lods
sub
lret
lock
push
mov
dec
lcall
xchg
jle
mov
into
inc
out
push
jmp
pop
xor
leave
jp
pushf
jnp
loop
or
cwtl
inc
push
add
mov
adc
sahf
sub
jle
push
dec
add
mov
pusha
pop
xchg
sahf
mov
xchg
popa
or
call
lret
push
insb
pop
jecxz
outsl
stos
mov
lret
inc
fcmovbe
pusha
mov
mov
lahf
cltd
test
pop
xchg
pusha
xchg
ret
mov
adcl
iret
out
adc
rorl
pop
lea
sbb
push
xlat
pushf
push
pop
imul
rcrl
xchg
jp
jp
in
mov
or
mov
gs
cmp
aas
push
and
mov
xchg
mov
dec
cmc
ret
mov
xchg
icebp
pop
xchg
fstpt
or
loope
sbb
jle
mov
xor
sbb
dec
test
sti
adc
in
mov
into
lods
mov
popf
jno
les
cmpsl
insl
mov
dec
ja
xchg
or
add
xchg
bnd
lods
test
xchg
mov
lods
xor
test
mov
mov
shll
xchg
testl
xor
loopne
push
es
cmp
aam
dec
sub
ret
ljmp
or
out
and
sbb
test
adc
dec
push
mov
int3
adc
push
mov
ljmp
mov
imul
es
jae
imul
push
test
in
lods
mov
test
cmpsb
rorb
mov
xor
lock
lock
lds
sub
push
dec
movsb
dec
out
jbe
stos
mov
jl
popf
pop
dec
mov
stos
dec
jno
mov
pop
pushf
jne
shlb
xchg
fs
outsb
cld
fsubs
rcrl
mov
mov
push
out
add
outsb
iret
dec
mov
and
ret
jae
mov
loopne
dec
xor
cmp
add
lret
mov
pusha
mov
sub
xor
out
xor
stos
enter
push
je
loope
and
pop
jl
les
insl
jnp
mov
mov
rol
sub
and
out
popa
pop
push
xchg
mov
push
pop
lcall
icebp
pop
xchg
fnstsw
sti
idivl
fsub
add
in
mov
and
ret
pop
pop
dec
push
jecxz
cmp
scas
jecxz
cmpsl
dec
push
push
rcl
out
push
or
mov
push
and
xchg
inc
imul
enter
mov
popl
aas
dec
adc
pop
rcll
dec
pop
js
or
pop
cmp
in
orl
aaa
sbb
add
test
dec
xor
pop
mov
popf
mov
imul
insl
push
pop
sub
push
adc
mov
inc
lods
jne
mov
mov
dec
mov
jne
mov
xchg
pop
sbb
and
mov
or
or
push
cmp
in
inc
lcall
out
mov
out
cli
out
pop
fnsave
out
idivb
test
adc
repnz
std
aad
pop
jne
mov
jg
and
push
mov
push
mov
cmc
mov
imul
cmc
pop
jb
add
cmp
cld
pop
loop
inc
scas
leave
lea
je
insb
xchg
sarb
dec
das
adc
lret
inc
or
adc
and
xchg
mov
adc
jae
jno
fst
dec
outsl
push
jle
sbb
dec
mov
jp
adc
cmpsl
andb
je
jle
mov
sahf
or
repz
pop
imul
push
xor
pop
rcrl
idivl
mov
add
mov
lret
pop
and
mov
mov
insl
ret
sbbl
das
sub
xor
test
das
xchg
mull
movsb
cwtl
or
xchg
cli
gs
test
adc
jnp
mov
xchg
mov
loope
pop
cld
fists
sub
fstpl
sbb
out
cs
mov
stc
push
movsb
movsl
out
test
scas
xor
andl
addr16
add
les
es
sub
fstpl
inc
shlb
or
in
addb
jp
and
inc
lret
fbstp
xchg
mov
popf
gs
mov
call
cmp
sbb
je
pop
dec
jmp
adc
xor
arpl
mov
je
cmpsb
push
or
popf
xor
rorb
int
add
sbb
pop
out
loop
adc
dec
fs
pop
sub
inc
inc
insl
push
dec
mov
addr16
cld
rol
xor
jbe
xchg
ret
jnp
sub
jp
outsb
repz
jne
sti
lods
mov
popa
mov
sub
test
xchg
inc
into
dec
testb
and
loopne
inc
mov
and
sahf
cli
in
adc
push
pop
hlt
adc
mov
frstor
repz
shl
adc
or
dec
jp
stos
push
fisubrl
lret
push
add
fisttpll
aam
jne
cmp
stc
into
push
and
stos
aam
jbe
adc
sub
insl
fcomps
std
sbb
mov
andl
xchg
inc
fmulp
sub
jae
mov
imul
push
cmp
xchg
xchg
lods
imul
jmp
orl
sbbl
sahf
loop
and
adc
adc
dec
pop
aam
pop
adc
sti
mov
jb
in
out
sbb
cmp
mov
push
mov
or
push
pop
stos
stos
out
fldl
push
inc
inc
xchg
lods
int
push
xor
mov
pushf
dec
jo,pn
push
add
dec
popa
pusha
push
sub
std
test
jle
push
ret
xor
std
or
test
jbe
sub
out
lock
out
lea
cmc
mov
loopne
outsb
dec
testb
lea
retw
mov
lds
rol
adc
cs
add
lods
mov
insl
sti
jo
inc
ss
iret
fnstenv
andb
lcall
daa
clc
xor
cmpsb
add
xlat
add
ljmp
int
arpl
push
or
sub
jge
lods
push
lahf
mov
jle
scas
rcl
scas
fimull
ret
loop
push
push
out
lods
adc
lret
ss
and
ds
aad
jle
push
or
mov
mov
bound
mov
fsubrl
popf
xchg
jno
cmpsb
sub
pop
rcl
scas
adc
xchg
mov
xchg
push
dec
test
push
fs
fwait
lock
js
sbb
pushl
fiaddl
jns
xchg
std
cwtl
jbe
jbe
add
xor
mov
addr16
mov
mov
ja
xor
addb
sub
loop
addl
out
dec
insb
and
cmp
pop
jno
mov
adc
fsubs
in
mov
std
add
jp
push
jbe
or
das
sbb
and
mov
cmp
stc
vunpcklps
jne
inc
xor
daa
mov
inc
mov
adc
ja
int3
loopne
sub
adcl
js
pop
mov
jnp
fstl
loope
jno
xlat
jp
or
addr16
mov
sub
scas
cli
pop
add
pop
mov
sar
roll
mov
xchg
ss
test
scas
lret
cmp
das
xor
cmpsl
pop
cld
mov
cmc
sub
cmpsb
dec
lea
lea
cmpsl
jmp
and
or
lods
and
mov
mov
jnp
sbb
cli
pushf
cmpsl
xlat
addr16
mov
lock
popf
xchg
daa
sbb
jle
rclb
loop
adc
xchg
jbe
xor
add
lret
lods
push
pushf
mov
jb
and
pop
rol
sub
lcall
sbb
dec
test
xor
in
mov
scas
je
jnp
cs
mov
cmpl
xchg
push
popf
jae
lods
lock
inc
cmp
push
mov
repz
fisubrl
mov
hlt
into
stos
imul
cmpb
pop
mov
movsb
add
dec
fwait
xor
or
push
mov
inc
imul
xchg
jl
lret
pop
inc
jmp
outsb
aas
jbe
dec
outsb
lds
xor
movq
add
fnstenv
or
mov
sbb
push
data16
loop
dec
dec
gs
push
sub
test
cmpsb
hlt
ja
cmc
push
or
pop
adc
test
mov
push
dec
insb
adcb
fadd
pop
and
loope
push
xchg
inc
lds
and
cmp
dec
lods
sti
popf
push
stos
lahf
add
leave
in
cmp
adc
cmp
jp
xchg
sub
lods
push
sti
jnp
leave
cmp
ds
mov
jmp
push
std
jmp
xchg
cli
jge
into
into
jge
xor
push
test
xor
mov
mov
inc
inc
or
push
idivb
push
sysret
add
jl
pushw
insl
adc
cmp
sub
mov
jp
jno
push
dec
push
fdivrs
dec
out
lds
fdivp
adc
std
mov
sbb
dec
mov
jno
je
sbb
sbb
mov
icebp
mov
pop
lds
and
adc
movsl
push
test
data16
xor
pop
out
loop
testl
in
std
adc
lcall
popf
insb
sbb
inc
cmp
sbb
popa
xchg
scas
in
ljmp
daa
dec
int3
sbb
cld
push
xchg
adc
fldt
sub
add
outsl
mov
adc
xor
xor
mov
sbb
dec
mov
in
or
fisubrl
mov
sti
gs
jae
inc
sarl
cmp
mov
or
inc
arpl
hlt
ret
loope
std
ret
test
in
jp
sbb
xor
repnz
add
stc
mov
lret
shrl
cwtl
pop
push
iret
push
adc
mov
pop
jge
pop
cwtl
xchg
js
loop
cmp
dec
xchg
push
daa
mov
adc
jmp
repz
cmc
mov
xor
popf
fcomp
push
mov
rcll
inc
addr16
jb
imul
mov
pop
cmp
inc
and
popf
xchg
pop
addr16
fnstcw
xor
jg
jnp
mov
mov
fisttpl
adc
pop
lock
mov
ja
aad
dec
jl
add
xor
add
and
shr
popa
sub
lcall
scas
push
test
sub
in
movsl
imul
sti
sbb
iret
adc
int3
aaa
sahf
mov
push
or
pop
cmp
dec
cmpsb
xor
push
or
pusha
or
jne
adc
bound
aad
loope
je
icebp
pop
out
pop
xor
loopne
push
jno
daa
inc
push
jle
pop
push
dec
jbe
push
cltd
sbb
data16
xchg
xor
mov
mov
dec
mov
dec
aad
xchg
xor
push
and
xlat
popl
fisubl
loop
insl
cld
or
cmp
inc
adc
inc
ljmp
addl
mov
pop
dec
and
inc
mov
sub
pushf
clc
dec
pop
insb
je
sti
lods
cmp
mov
xor
loopne
inc
popf
mov
pushf
shll
andb
mov
into
push
jl
adc
inc
loop
ljmp
movsl
or
adc
inc
inc
pop
add
mov
scas
xor
cmp
out
sub
cmp
xchg
jmp
flds
push
data16
movsb
push
xchg
pop
xchg
je
shrb
xchg
icebp
ds
pop
add
incb
mov
jl
adc
pop
jbe
push
cwtl
xchg
loopne
orb
fdivr
loop
push
sub
je
xor
xchg
jg
lahf
jae
xorb
mov
mov
xor
fistl
push
push
clc
cltd
inc
push
sub
fisubl
lods
aad
aaa
jo
add
push
add
cmc
lea
cmp
fnsave
or
adc
push
mov
jl
movsl
cmp
fs
mov
lret
out
inc
popa
sub
pop
mov
sti
adc
add
mov
lds
test
adc
xor
bound
add
mov
mov
inc
push
sbb
pop
lcall
jg
add
adc
popa
aam
outsl
or
in
jbe
leave
jp
ret
and
sbb
add
in
sub
push
icebp
stos
mov
lods
clc
push
mov
mov
push
fistl
xchg
enter
mov
xor
iret
in
fstl
iret
cmp
and
aas
cli
or
fwait
std
iret
js
and
add
or
mov
dec
fists
xchg
push
pop
leave
inc
scas
in
loope
push
daa
in
mov
pop
popa
roll
fbld
add
jecxz
fstpl
mov
jmp
push
push
sbb
push
in
adc
cltd
mull
sub
or
subl
xor
push
data16
jmp
frstor
in
fwait
add
sbb
and
fucomp
outsb
ficoml
fimuls
jbe
sub
xorb
xchg
or
adc
popa
push
jns
mov
pop
mov
fldt
scas
dec
fadds
outsl
or
fists
ret
dec
dec
imul
fs
cld
fs
scas
cmp
mov
iret
jb
aaa
xor
mov
mov
stos
pop
mov
clc
xchg
fimull
test
imul
mov
int
mov
jb
cmpsl
cmp
call
lods
fstl
int3
movsl
sub
or
and
jl
enter
jecxz
dec
mov
xchg
dec
xchg
mov
jno
jns
repnz
mov
xchg
push
cli
jnp
jns
sbb
xor
pusha
shrl
inc
subb
cld
nop
and
clc
repnz
mov
rcr
inc
jnp
int
mov
cld
xchg
mov
add
xchg
inc
lahf
mov
push
push
add
pop
mov
testb
gs
into
jns
repnz
xlat
mov
clc
jae
lods
or
xchg
fidivs
fstl
ja
pop
jg
jle
pop
iret
lret
adc
js
lods
jg
adc
popa
clc
bnd
jge
sbb
lds
pop
cmp
imul
pop
dec
cmp
jmp
xchg
cmpsb
add
test
push
push
neg
flds
bound
add
imul
push
je
mov
test
sbb
outsl
data16
push
fists
sahf
mov
push
subl
sbb
decl
and
out
pop
dec
outsb
fwait
lock
lret
xchg
push
mov
sbb
aad
loopne
mov
xlat
lock
leave
fwait
popa
ret
in
mov
fnstenv
pop
jo
fcmovnb
mov
xchg
pushf
jbe
mov
scas
fnstenv
mov
iret
mov
jg
lret
ror
ds
scas
icebp
enter
cmpsl
inc
push
mov
sbb
adc
clc
pop
in
cmpl
imul
ret
ja
mov
or
jbe
add
xchg
pop
push
clc
daa
add
imul
jmp
lea
ret
mov
push
ds
xchg
inc
mov
mov
aaa
sub
ds
sub
push
loope
xchg
and
or
xchg
sub
stc
outsb
lcall
in
cmc
mov
push
adc
repz
mov
insl
dec
data16
js
xor
xor
xchg
fbstp
inc
rorl
clc
aad
dec
inc
adc
jmp
addps
jp
jno
jnp
dec
lret
lock
cld
das
cmpsb
sti
jne
mov
jmp
enter
adc
mov
xor
popf
outsb
mov
mov
ficoml
es
cli
daa
cwtl
mov
xchg
lds
addl
push
or
and
xor
ds
mov
scas
jl
add
hlt
jp
gs
fldl
and
xorl
dec
fimull
into
or
int
cmp
jno
jecxz
loope
mov
int3
pop
sarl
outsb
arpl
xchg
jg
or
fs
xor
je
mov
cwtl
pop
shll
sbb
push
scas
dec
xor
lret
mov
fstpl
sbb
out
clc
inc
js
add
ja
mov
imul
jp
fiadds
or
jg
pop
sbb
in
dec
and
xor
xchg
addb
loope
and
lret
mov
mov
movsb
insb
xor
jne
pop
mov
in
fxch
repz
push
mov
daa
in
add
jns
jp
lods
mov
cmp
jbe
adc
lahf
dec
jns
inc
ret
cmpsb
aad
inc
shrb
out
jbe
mov
icebp
mov
repnz
push
test
adc
pop
les
jb
pop
cmp
sbb
mov
xor
pop
jo
or
xor
cwtl
pop
orl
mov
lea
cmc
lea
and
dec
add
sbbb
jecxz
inc
inc
mov
xchg
test
cmpb
jae
scas
push
mov
lods
test
dec
popa
outsb
ficoms
cmp
cmp
and
sti
stos
mov
dec
sub
cmp
sbb
sub
xchg
dec
test
mov
loopne
xchg
stos
xchg
clc
mov
add
and
cltd
mov
inc
lcall
sbb
lcall
pop
jecxz
fiaddl
je
mov
cmp
ds
ds
mov
fisttpl
mov
inc
or
sti
nop
fcmovb
push
popf
repnz
push
cmpsl
xchg
jae
xor
ss
sub
movsb
or
repnz
cmp
sub
pop
mov
jno
outsl
pop
add
mov
cmp
cmp
and
gs
rorl
cmp
xchg
and
or
xor
in
cmp
push
imul
cmp
mov
cmpsb
and
or
add
in
add
add
push
jecxz
sub
jno
rcl
lods
in
mov
mov
push
inc
sub
xchg
subl
xchg
aam
movsl
jge
xor
push
mov
std
hlt
in
jmp
rolb
arpl
enter
dec
lods
sti
push
lock
jne
mov
dec
lods
aad
adc
out
incl
push
xchg
sub
jno
mov
mov
mov
test
and
imul
mov
pop
jecxz
mov
test
daa
in
repnz
xchg
cli
pushl
dec
xchg
push
mov
imul
cmp
jae
repnz
sbb
sbb
mov
add
sbb
inc
fildll
xor
xchg
in
out
cld
pop
scas
loop
rcll
cmp
push
cmp
jle
movsl
nop
inc
inc
mov
pop
arpl
push
sti
cmp
bound
jnp
sub
cmp
or
popf
test
enter
gs
inc
clc
push
sti
mov
mov
lcall
imul
imul
test
cmovp
mov
mov
ja
je
and
ljmp
jmp
lahf
push
jno
or
subl
push
mov
mov
imul
popf
sarl
fs
mov
dec
cmp
lcall
imul
sub
repnz
aaa
loope
mov
lods
mov
jnp,pt
mov
insl
pop
add
in
fs
fwait
leave
repnz
addr16
xchg
aam
pop
xchg
insb
cli
lcall
loopne
mov
sar
inc
jnp
adc
lret
mov
mov
adc
fs
inc
jl
cmp
ficompl
jecxz
sbb
loopne
mov
or
mov
cmp
xchg
lods
lcall
push
ss
mov
fldenv
or
bnd
shl
sub
cmc
sub
jns
test
sub
aaa
mov
out
cs
scas
jmp
movb
ss
in
pop
orl
xchg
movl
testl
aas
xor
lods
mov
mov
mov
mov
adc
es
jp
scas
std
xchg
icebp
mov
adc
js
dec
push
cmpsl
popf
icebp
scas
fdivr
ret
je
sbb
out
loope
push
repnz
dec
rorl
sahf
and
ds
push
fcoms
mov
dec
test
divl
test
add
inc
mov
fs
rdtsc
adc
and
shll
pop
jo
dec
es
xor
in
lds
shlb
mov
push
out
int
push
shlb
outsb
inc
daa
xchg
push
and
sbb
mov
popa
dec
pop
mov
dec
push
outsl
test
sbb
stc
aas
adc
jae
xchg
mov
outsl
jg
cmpsb
or
clc
cmp
ljmp
cli
mov
ret
lods
sub
cmp
stos
ljmp
pusha
mov
xor
push
ds
xor
mov
pop
jo
cmc
sub
addb
push
jl
lret
pop
add
pop
insb
pop
dec
dec
push
pop
rcrb
out
jp
jp
push
push
push
cmp
xchg
jbe
lcall
ljmp
jb
clc
shlb
popa
inc
inc
in
lret
ror
fimuls
jae
inc
sub
mov
xchg
mov
adc
in
ljmp
mov
push
mov
dec
push
mov
hlt
xlat
sub
fneni(8087
xchg
push
repz
arpl
std
add
and
jb
in
test
cli
inc
mov
daa
js
repnz
jo
xorl
sti
mov
xor
jbe
pop
add
jne
int
mov
iret
lock
sbb
pop
cmp
rcll
jl
mov
shrl
aam
mov
and
fidivrs
jne
hlt
push
inc
stos
lcall
repnz
gs
push
jne
xchg
aaa
xchg
push
dec
shrb
mov
inc
or
sub
mov
mov
mov
cmpsl
add
pop
xchg
pushf
arpl
add
adc
mov
mov
mov
in
xor
loope
fwait
mov
popf
ret
jne
cltd
outsl
pop
and
in
stos
xor
jns
or
jns
lea
ja
adc
mov
add
mov
aas
add
test
add
in
push
pop
rol
dec
mov
push
clc
enter
jb
dec
cmp
ror
inc
add
cmpsl
call
lret
int
lods
jnp
sbb
mov
imul
fisttpll
test
jb
lock
pop
push
mov
pop
shl
pop
je
ja
cmpsl
mov
cmp
adc
das
dec
pop
cmp
out
ljmp
fdivl
mov
jg
or
and
pop
xchg
ja
inc
mov
xchg
adc
cmp
push
cmc
add
cmpl
adc
xor
xchg
and
scas
nop
xchg
jno
faddl
movsb
adcl
ja
cmp
movsb
popf
fsubs
inc
sub
push
in
xchg
mov
insl
insl
adc
mov
add
xchg
xchg
lahf
cmp
pop
pop
loopne
lds
into
mov
adc
imul
test
out
push
cmpsl
and
jns
in
mov
mov
mov
push
addb
add
fcompl
leave
inc
pop
jno
std
xlat
push
and
fdivrs
sbb
or
test
insb
int
lods
add
jno
xchg
xor
dec
add
push
xchg
jne
jnp
xor
outsl
sbb
repz
ds
mov
jbe
jecxz
fadds
sbb
shll
cmp
jnp
xchg
bound
pop
aad
fdivs
hlt
xor
insb
nop
adc
xchg
rcr
movsl
mov
rcr
mov
cmp
jecxz
lret
out
mov
mov
mov
inc
je
int
mov
pop
shlb
gs
jg
clc
pop
adc
sbb
dec
cmp
arpl
xchg
out
push
push
jle
push
inc
cltd
jb
mov
hlt
repnz
loop
xchg
sbb
jnp
addr16
mov
sub
mov
stos
scas
adc
loopew
enter
pop
movsl
lret
lods
push
xchg
lahf
xor
ror
pop
je
scas
jecxz
and
pop
std
call
sub
icebp
lahf
jle
mov
jmp
mov
neg
iret
pop
imul
and
sahf
xchg
mov
lret
cld
leave
inc
push
stc
leave
adc
scas
or
out
jecxz
cld
mov
subl
dec
sbb
mov
sbb
mul
clc
into
adc
sub
sbb
inc
sub
dec
ja
pop
add
enter
lret
mov
stc
fcomps
repz
push
sahf
ficomps
sbb
mov
in
nop
lahf
and
mov
in
mov
mov
inc
push
push
jp
sbb
xchg
shr
fistpl
jg
sbb
int3
xor
sbb
in
jbe
sarb
std
fsubl
shrl
mov
mov
loopne
movsl
je
fld
movsl
aad
test
mov
andb
int
stos
shll
mov
enter
stc
mov
popf
scas
mov
imul
out
push
jb
mov
aas
inc
clc
inc
xchg
mov
test
mov
das
js
ficomps
mov
dec
insb
shll
fs
loopne
aaa
xor
int3
push
fnsave
fs
xchg
loop
loope
jg
mov
fisubrl
xlat
fcoml
pop
xchg
xor
enter
mov
cmc
and
xor
or
add
icebp
sub
inc
dec
cwtl
outsl
jmp
inc
mov
cmp
cmp
push
sbb
jecxz
xchg
xchg
pop
mov
push
inc
push
inc
stc
xchg
icebp
inc
dec
ljmp
rorl
fwait
cmp
xor
lods
cld
mov
outsb
or
lods
sti
cwtl
clc
or
das
xor
push
jns
mov
popa
test
mov
stos
mov
push
sub
or
cmpb
int
cmp
or
pop
sarl
fdivrl
test
push
cs
xor
mov
lds
shrb
sbb
push
push
icebp
xchg
outsb
loop
adcl
leave
adc
mov
repz
jns
imull
fisubs
inc
xchg
dec
xchg
call
push
int3
sbb
cmp
shrl
jns
testb
fdivl
testb
stos
in
call
push
pop
mov
push
xor
fists
ja
cltd
data16
sbb
pushf
fildll
xor
stc
mov
push
or
mov
loop
sbb
jg
ret
pop
mov
mov
loopne
cmp
stos
and
sbb
mov
leave
loopne
test
nop
push
sbb
je
sbb
aad
dec
insb
je
jmp
jge
and
fisttpl
movb
pop
shrb
jbe
ljmp
jbe
xchg
and
loopne
sbb
aad
jl
cmp
fdiv
das
shr
pop
inc
sahf
adc
jnp
loopne
cmp
fcmovnbe
inc
aad
pop
sub
pop
lds
dec
maxps
popf
push
repnz
stos
inc
addr16
cwtl
pop
lock
loopne
aaa
xor
call
sbb
loopne
xchg
cmp
push
pop
lods
mov
repnz
dec
sub
push
xchg
aam
pop
sbb
xorl
loope
lea
lods
fiaddl
inc
sbb
pop
fwait
xor
pop
add
not
fcomip
pop
in
push
lea
das
push
cld
mov
jo
xor
repz
inc
out
rorb
mov
out
dec
fcomi
and
lea
mov
outsb
imul
fdivrl
dec
out
jl
cs
imul
mov
push
repz
pop
sub
pop
loopne
icebp
popf
cmpsb
mov
clc
out
sub
mov
cli
pop
sbb
shl
sub
sbb
push
xchg
loop
and
call
and
call
cli
mov
jl
push
sub
iret
sub
fs
clc
jmp
xchg
or
push
dec
push
insb
je
xor
iret
cmpsl
imul
push
mov
add
pop
pop
inc
int3
mov
out
mov
or
inc
push
dec
mov
sub
inc
loope
cmc
cmpsl
xchg
leave
push
mov
cmp
fisubrl
arpl
xchg
roll
inc
sbb
sti
ss
nop
mov
lods
repz
xlat
push
mov
jl
and
cmp
ss
ds
in
pop
outsl
popa
mov
sub
cld
pop
imul
add
dec
test
jge
je
cmc
xor
or
add
repnz
loope
cld
dec
ss
fmull
hlt
push
add
dec
jle
push
repz
push
lods
lret
out
lea
xchg
repnz
lods
rcrb
filds
cld
mov
gs
dec
adc
out
jp
mov
push
push
data16
rolb
pop
mov
addl
inc
dec
and
mov
mov
mov
mov
mov
test
sbb
fucomip
loope
int
sub
test
and
jb
js
divps
iret
lret
out
sub
fwait
in
ljmp
sbb
sub
add
push
sarl
data16
mov
dec
and
fsubs
stos
push
or
fnsave
push
mov
daa
lahf
sahf
add
loope
je
enter
fs
test
cmp
jecxz
sbb
mov
insl
adc
clc
or
clc
xor
scas
insl
mov
dec
in
repz
sbb
xchg
jo
adc
cmpsb
orb
subb
mov
pusha
dec
test
int3
loope
pop
xor
mov
xchg
jmp
gs
lret
pop
jno
fbstp
add
int
imul
pop
sub
push
lock
sub
or
cmpsl
dec
push
mov
add
idiv
sbb
hlt
cmp
inc
dec
insl
jo
xchg
leave
jge
movsl
pop
int3
pop
scas
sti
sub
pop
xorb
push
sub
cmpsl
sub
pop
lock
lock
hlt
pop
jp
outsb
or
cmp
scas
out
aaa
or
push
pop
aam
das
mov
mov
pop
xlat
iret
imull
sbb
loop
adc
inc
and
sbb
cmp
mov
out
ret
faddl
or
sub
testl
push
cmpb
bound
loope
mov
test
inc
lods
jnp
mov
pop
lods
xor
inc
lahf
add
push
nop
mov
pop
ja
imul
jo
xchg
add
mov
and
inc
fwait
jno
and
dec
push
xlat
adc
sub
loope
imul
jle
lods
pop
jle
cli
mov
inc
pusha
xchg
mov
jmp
sub
jmp
jecxz
hlt
imul
push
pop
xchg
adc
add
shlb
subl
push
mov
xor
add
in
pop
sub
jl
adc
push
data16
push
push
jle
pop
mov
stos
cmp
pop
insl
lods
scas
mov
cltd
sub
test
or
pop
dec
in
std
inc
test
lock
sahf
loop
insl
add
pop
div
fimuls
push
or
sub
sub
imul
or
and
mov
es
sub
push
mov
mov
push
inc
add
push
ret
std
test
pop
cld
bswap
jmp
mov
add
push
mov
ret
sbb
xchg
mov
and
les
jge
in
shl
push
jbe
in
inc
fistpl
cltd
lret
in
push
xchg
or
hlt
jle
movsl
jp
mov
and
scas
xchg
pop
inc
dec
clc
nop
out
jnp
pusha
loop
iret
icebp
jne
and
es
lods
xchg
pop
sti
pop
outsb
cli
rorl
jg
jne
jne
cs
sarb
jmp
ljmp
fcoms
into
add
in
imul
lds
int
je
xadd
mov
inc
jae
ret
imul
shl
pop
hlt
xor
in
int3
fxch
dec
fwait
or
xchg
fistpll
sarb
sub
push
test
inc
dec
fcomps
xchg
jno
push
rorb
mov
mov
das
mov
and
roll
jbe
pop
jg
out
or
cmp
cmp
xor
ljmp
mov
pop
mov
jae
in
and
pop
test
loop
add
loop
popf
mov
jecxz
movsb
mov
outsl
pop
xchg
sbb
mov
adc
shlb
in
loope
push
pop
call
xchg
cmpsb
push
cs
mov
mov
push
call
sbb
pop
sti
std
out
or
subb
adc
das
pop
ljmp
je
fldl
jmp
into
xchg
icebp
in
jecxz
mov
adc
pop
imul
cmpsl
fwait
dec
js
and
nop
nop
sub
sbb
mov
or
xchg
jo
xchg
dec
sbb
jae
adc
insb
imul
hlt
popa
loopne
push
sub
aaa
in
movsb
mov
rolb
out
cmc
sub
pop
lods
xor
jg
jbe
lret
xchg
jp
cmc
push
ss
les
popf
adc
mov
xor
inc
ficoml
insl
ret
dec
mov
hlt
in
push
inc
sbb
rcrb
insl
daa
jg
sbb
filds
xchg
scas
call
xor
inc
cs
movsb
loop
mov
inc
xchg
or
jae
dec
adc
in
das
jns
or
cs
aad
mov
add
fs
fst
sub
in
pop
jp
and
outsl
pop
mov
jne
out
sub
push
mov
ror
adc
addb
int3
jmp
sub
lret
and
sub
ds
dec
bound
fs
mov
mov
int3
jl
push
outsl
inc
jmp
test
jne
add
je
inc
sub
mov
test
jecxz
sbb
jg
imul
lret
cmp
xchg
pushf
out
xchg
pop
xor
mov
nop
popf
jno
into
lods
test
cwtl
xchg
not
scas
pop
mov
repz
int3
loope
xlat
scas
adc
sbb
bound
mov
sbb
jmp
int3
ud2
fwait
add
loopne
js
bound
or
xchg
aaa
inc
bound
lods
jmp
shll
imul
shr
xchg
mov
lods
repnz
lods
dec
int
pop
mov
movsl
sub
jae
icebp
insb
xchg
jno
rcr
cs
dec
out
fmul
mov
dec
or
push
scas
fdivs
mov
aas
fucomp
mov
xor
mov
mov
aaa
in
cmp
into
outsl
scas
inc
mov
cmp
arpl
mov
mov
nop
bound
xchg
cmpsl
jmp
push
leave
push
loope
stc
pushf
dec
ret
jne
or
push
cltd
cmp
daa
out
push
xchg
cltd
lret
dec
incb
imul
scas
pmaddwd
sbb
xor
and
adc
dec
mov
push
mov
add
je
and
pop
jge
mov
jae
mov
push
dec
and
dec
aam
sbb
das
cmc
push
sahf
repz
es
cmpb
test
cmp
scas
sub
das
pop
icebp
arpl
rcrl
lea
popf
sti
lea
in
sub
popa
xchg
push
or
ret
imul
jp
and
pop
push
push
push
or
outsb
testb
mov
pop
add
mov
ja
mov
push
inc
cmp
ss
into
notb
jnp
xchg
xor
push
mov
lock
out
adc
in
lds
outsl
push
sub
aad
outsl
mov
dec
clc
out
mov
insl
out
divb
push
in
sbb
cmovg
leave
cmp
mov
mov
je
xor
add
rolb
jmp
pop
dec
jo
sbb
out
jecxz
lret
cli
jo
jp
nop
je
add
into
inc
mov
inc
mov
aad
loope
bound
aad
outsl
xchg
pusha
mov
pop
dec
arpl
loopne
jbe
xor
push
fnsave
and
in
pop
adc
cld
test
fsubrs
sbb
jmp
xchg
das
sarb
adc
xor
hlt
fldl
data16
push
in
stos
add
jmp
lcall
xor
in
flds
cli
pop
inc
push
insl
loopne
push
scas
inc
cmpsb
div
xchg
xchg
mov
inc
push
movsl
mov
jae
fadds
clc
xchg
ja
aad
add
int3
or
inc
rorb
out
mov
and
test
mov
shl
jmp
fldcw
repz
dec
add
hlt
xchg
inc
imul
mov
idivl
dec
adc
inc
sub
cli
push
or
xorl
into
frstor
dec
adc
daa
inc
jb
lds
lods
mulb
push
notb
inc
jl
leave
jmp
fsubl
pop
in
xchg
roll
push
xchg
mov
xchg
enter
pop
aad
mov
lds
sahf
dec
insb
ficomps
add
lods
xchg
in
gs
mov
inc
xchg
fisttps
xlat
dec
xchg
push
sub
lahf
imul
add
out
arpl
mov
mov
mov
dec
pop
inc
ljmp
into
inc
xlat
ret
push
into
sahf
loop
insl
cs
xor
lock
das
inc
cli
pop
pushf
loop
cmp
ss
scas
dec
jae
aam
iret
cmp
in
cmpsb
loopne
ret
loop
pusha
sub
xor
sub
cli
cltd
cmp
pop
stc
rcrb
push
imul
sub
xlat
pop
loop
adc
mov
and
pop
add
rcr
cmp
jbe
jb
and
daa
adc
rorb
xchg
stc
add
inc
aam
inc
ljmp
data16
mov
jne,pt
sub
sbb
xchg
jge
adc
mov
dec
jecxz
sub
dec
aad
cmpsl
testb
push
pushf
ds
movsl
pop
mov
test
lods
push
icebp
or
sbb
jo
cmp
inc
sub
cmp
outsb
xor
cmc
jo
xor
jns
int3
jb
addr16
gs
pop
es
xchg
fbld
mov
add
add
into
enter
andb
xlat
inc
lock
and
sbb
jne
in
ljmp
pop
dec
ds
and
fwait
xor
sbb
lods
ljmp
pop
popa
into
cmp
lds
push
dec
mov
add
mov
dec
xor
sub
jecxz
inc
andl
movsl
xor
or
stc
or
adc
addr16
add
sti
push
lods
mov
add
xor
sbb
in
rcll
cltd
gs
cmp
inc
xchg
lods
stos
cmp
arpl
jecxz
cmpsl
jecxz
pop
adc
dec
cltd
xor
xor
ss
les
lods
and
shl
int
cwtl
cmp
push
and
iret
imul
cmp
hlt
adc
add
add
sub
xchg
sub
adc
cmpsl
push
hlt
out
movsb
mov
cmp
adc
mov
mov
pushw
mov
movsb
pop
pop
xor
loop
or
sub
cmp
and
jbe
ljmp
daa
mov
outsb
aas
and
aad
jbe
imul
and
out
stos
push
sbb
sbb
int
rolb
and
xchg
and
and
xchg
xor
cmp
or
scas
pop
sti
push
iret
outsl
pop
lea
xor
mov
call
sbb
jg
mov
mov
add
jae
mov
xchg
popa
dec
mov
mov
add
xor
cmp
or
and
test
movsb
insl
stos
sbb
and
lods
sub
dec
mov
js
and
adc
insb
cmpsl
sbb
fldenv
in
fimull
test
enter
sub
jnp
bound
out
pop
adc
stos
orl
insb
test
sbb
xchg
inc
jno
inc
push
pop
sbb
dec
rcr
adc
adc
ljmp
in
cmp
mov
sbb
inc
and
into
mov
jmp
cwtl
dec
mov
dec
pop
jmp
movsb
cmp
pop
addr16
jmp
pop
cld
loopne
test
mov
mov
mov
lret
sub
adc
ja
or
and
sbb
test
jae
xor
dec
hlt
mov
push
jo
cli
xchg
or
push
aas
pop
cmp
bound
xchg
je
pop
dec
pusha
movl
sarb
addr16
mov
jge
jecxz
enter
imul
or
jecxz
shr
sub
xlat
out
or
nop
pop
adc
xchg
fisubrs
ficoms
or
repz
push
xchg
pop
icebp
bound
pop
xchg
movsb
mov
hlt
sarl
or
jle
rcll
lds
faddl
or
mov
adc
insl
pusha
mov
or
cmpsb
jne
xchg
mov
imul
push
dec
push
mov
fstpl
scas
mov
pushf
aas
add
ljmp
adc
jae
std
cli
lcall
in
rorl
lret
or
xchg
out
xchg
movsl
and
mov
pop
loop
adc
idivl
leave
xchg
pop
scas
aam
cltd
sub
outsb
fidivrs
sub
daa
dec
dec
inc
roll
add
popf
lods
std
pop
pop
cmp
movsb
aad
ficomps
cmp
cmpsl
iret
xorl
push
orb
mov
in
mov
inc
dec
pushf
pop
les
xor
mov
test
mov
jns
aam
lret
add
data16
pop
out
jle
xor
nop
jns
push
lret
xor
jns,pn
mov
int
shl
dec
inc
and
lods
imul
out
push
push
xchg
fildll
cmp
push
cmp
cmp
push
and
jbe
xchg
or
or
insl
jo
pushf
sub
insl
xchg
ret
sub
fs
jnp
xor
or
inc
sti
subl
push
ja
orb
mov
add
or
pop
sub
ret
pop
xchg
xor
in
jmp
fimuls
jo
ljmp
adc
xchg
pop
ja
es
xor
xchg
jno
add
cld
divl
pop
sub
fildl
and
stc
call
cmp
jmp
sub
mov
cld
dec
mov
mov
daa
adc
inc
or
stos
xor
popf
pop
adc
cmp
leave
or
mov
lret
aaa
adc
jge
jecxz
and
mov
add
jecxz
rcrb
stos
jbe
and
rorb
scas
fisubl
cmp
xor
gs
test
leave
roll
inc
cmp
and
shlb
or
or
lds
cwtl
pop
dec
addr16
jp
mov
pusha
cmp
jne
mov
jmp
xlat
add
or
jmp
xor
push
imul
sbb
fmul
add
out
mov
xorb
or
push
cmp
fildll
or
fsubs
xchg
sub
insb
inc
icebp
lret
cmp
movsl
jnp
gs
sub
sbb
ret
nop
mov
jno
push
jle
lock
add
imul
andl
push
push
add
pop
les
push
mov
cltd
mov
mov
pushf
sub
mov
sub
pop
adc
push
ss
test
out
shlb
shrb
and
inc
sbb
cmp
test
sbb
test
fisubrl
mov
add
mov
push
out
rorl
in
push
not
fildll
mov
push
or
ja
in
call
decb
cmp
es
cmpsb
js
and
sbb
fld1
rcll
pushf
inc
mov
mov
push
dec
shlb
mov
sahf
aam
scas
ret
push
or
inc
imul
rcr
or
xchg
fst
cli
inc
add
nop
gs
test
subb
mov
inc
dec
arpl
mov
stc
cwtl
bound
sbb
ficomps
movsl
mov
adc
and
add
push
jbe
ss
cmp
popf
pusha
mov
mov
push
xchg
pop
cmpsl
mov
sub
lock
hlt
dec
imul
js
jmp
mov
push
sub
xchg
popf
mov
xchg
jns
fs
sub
jb
push
movsb
fbld
mov
scas
and
rcll
jbe
in
jg
cmp
bound
xchg
lret
inc
loope
enter
dec
dec
sub
cmc
sub
iret
ss
push
push
cmpsl
mov
stos
daa
and
ljmp
rolb
inc
dec
shll
ficompl
pop
inc
pop
pop
mov
notb
aam
mov
popa
jno
lret
arpl
out
push
push
rol
xor
pop
stos
movsb
les
iret
scas
adc
in
je
in
xchg
adc
xchg
ja
lea
cli
push
xor
xchg
and
jbe
test
inc
aam
cmpsl
xor
dec
cmp
mov
cmpsl
dec
jecxz
sbb
and
cmp
mov
pushl
aad
cmpsb
gs
int3
bound
mov
push
pop
bnd
orl
aam
inc
jne
imul
jecxz
dec
aam
inc
pop
test
mov
sahf
pop
repz
sbb
out
xchg
popa
jb
shll
push
sbb
loop
dec
pop
xorl
cmc
push
out
sbb
sub
jge
ret
sbb
leave
movb
out
mov
and
bound
mov
inc
xchg
call
pop
scas
sub
psubusw
popf
enter
mov
mov
and
inc
xchg
and
pop
fnstcw
pop
pop
cmp
xor
lahf
ja
rcrl
cmpb
inc
mov
shlb
mov
mov
cmp
dec
and
xlat
iret
sub
loop
mov
mov
je
mov
dec
jecxz
jbe
pop
cld
popf
pop
dec
daa
aam
leave
fwait
or
out
pop
sub
adc
inc
negl
rol
push
jnp
sub
xchg
imul
out
ss
jl
xchg
push
fwait
adc
mov
pop
fwait
movsl
jae
mov
inc
fstpt
test
cwtl
xchg
movsb
xor
cmp
je
xor
jne
dec
jae
popf
shrl
movsl
lret
sub
les
and
mov
push
jge
lret
cmpb
sbb
pop
add
dec
inc
int
mov
push
das
arpl
adc
call
pop
xchg
adc
fldt
add
daa
xor
pop
sub
push
inc
lahf
add
aam
popf
dec
mov
out
rorl
mov
mov
out
jno
fdivp
or
pop
enter
outsb
add
mov
add
orb
sti
pop
xor
adc
inc
jb
rcll
out
test
push
stc
scas
lods
into
jns
repz
sub
inc
jle
push
push
nop
pop
xlat
xchg
jo
shrl
xchg
lahf
cmp
hlt
sbb
xchg
lret
and
out
mov
xchg
test
push
pop
std
inc
pusha
fildll
xchg
inc
or
ja
dec
iret
and
repz
jno
add
movsl
into
cmc
push
lahf
mov
push
cltd
gs
jb
repnz
jae
les
sub
dec
js
rolb
aas
and
negb
push
xor
lret
inc
push
push
xor
loope
in
ret
lea
sub
cmpsb
xlat
cmp
xor
mov
int3
push
xchg
pop
das
shl
in
cmp
sbb
gs
rcrb
iret
add
mov
inc
xor
cmc
add
les
rcl
dec
mov
mov
sbb
lret
pop
cmp
popa
lods
and
fldenv
dec
pop
std
push
pop
jo
push
mov
enter
cmp
and
and
jg
sbb
repz
jp
loop
push
imul
cs
pop
int
jmp
insb
jo
push
adc
or
cmp
inc
sti
dec
jmp
call
jns
ret
cmpl
scas
std
push
shlb
std
inc
adcl
sub
push
stos
popf
xchg
stc
cmp
jnp
add
sti
pop
jecxz
das
sbb
pusha
outsb
out
add
jmp
mov
mov
jmp
mov
and
mov
lahf
sbb
lods
das
xchg
bnd
lahf
in
adc
mov
cld
test
sahf
popa
lea
pop
push
aas
cld
fmul
mov
subl
adcl
jnp
aaa
xchg
add
outsl
or
sub
cmp
mov
dec
adcb
lcall
cwtl
rcr
cmp
js
mov
lahf
paddsw
idiv
idiv
cmpsb
daa
inc
int3
cmp
push
bound
or
add
cmp
mov
ret
xor
mov
sbb
in
push
fwait
cmp
pop
pop
cmp
sub
and
adc
mov
mov
inc
fnstsw
push
xchg
bound
pop
cmp
scas
xchg
sub
dec
aad
dec
cmp
fistpl
lcall
adc
dec
pop
lret
push
divb
inc
inc
adc
pop
jecxz
and
leave
xchg
mov
scas
insl
cmp
call
cld
movsl
add
movsb
cmp
jg
inc
shlb
jno
mov
sbb
and
inc
lods
and
rorl
add
outsb
xor
xor
pushf
iret
outsl
popa
in
add
inc
int3
outsl
sbb
shll
xor
inc
xor
adc
shrl
jg
mov
sub
imul
sbb
sbb
out
adc
pusha
aas
js
mov
jl
in
aam
in
repnz
sbb
fiadds
and
pop
cwtl
pop
mov
dec
hlt
movsl
sahf
jb
les
inc
cmp
mov
cmc
jp
xchg
push
jo
mov
ficompl
aam
ja
xchg
pop
and
add
enter
addr16
mov
mov
dec
add
test
pop
jne
loopne
inc
or
repnz
sub
gs
jne
aaa
loopne
add
push
fisttpl
xchg
add
xchg
cmp
mov
pushf
mov
and
sbb
icebp
in
sub
lods
jp
sbb
cmp
rorl
add
jne
mov
cld
jae
sbb
shrb
repnz
push
stc
cs
scas
cwtl
shl
jno
int3
je
xor
iret
loopne
pop
addw
inc
inc
out
mov
mov
inc
lahf
adc
daa
js
pop
scas
xor
sbb
and
xchg
pop
jle
xor
dec
loop
loopne
jl
in
sbb
pop
test
pop
incl
mov
pop
mov
rcl
pop
mov
inc
les
jo
scas
scas
push
stos
clc
xchg
pmaxub
dec
icebp
sbb
jl
cli
sub
cmp
cmpsb
adc
sbb
pop
mov
iret
pop
mov
sbb
rorb
sub
xchg
movsb
std
mov
ret
jge
enter
push
sub
mov
in
out
cld
mov
sub
ret
in
dec
or
les
out
push
push
testl
sahf
test
loope
push
cmc
or
js
jl
mov
dec
frndint
dec
and
push
mov
cltd
adc
mov
mov
jae
ss
pop
jmp
lock
push
shll
push
mov
jnp
xor
out
cmp
xchg
dec
mov
out
inc
pop
push
mov
dec
sbb
cmp
mov
mov
ds
ficoms
xchg
cmp
sti
call
mov
js
or
movsb
mov
and
push
fxch
mov
pop
sbb
outsl
cltd
movsb
dec
movb
imul
jb
add
xchg
dec
es
ljmp
lock
mov
scas
mov
inc
lahf
or
popa
repnz
lret
pusha
dec
mov
cmp
or
sub
adc
push
fwait
add
imul
das
lret
pop
adc
sub
lahf
in
js
mov
dec
xchg
out
movsb
lods
in
cli
loopne
inc
mov
mov
mov
aas
test
xor
arpl
add
fdivrs
xchg
xchg
dec
fldcw
icebp
cmp
insl
mov
jg
mov
fiadds
xchg
jge
xlat
pop
sub
sbb
jbe
sub
or
inc
push
adc
push
pop
out
or
out
xchg
xchg
and
ljmp
cmp
aaa
stos
mov
mov
dec
mov
or
imul
lock
push
out
xchg
mov
and
xlat
ss
addr16
fmuls
sbb
pushf
pushf
popf
dec
or
fdivs
sub
lret
movsb
outsb
add
aam
out
xchg
pop
mov
or
pop
sbb
test
shl
mov
push
cwtl
sbb
lret
xor
jne
dec
or
enter
or
xchg
sbb
mov
fists
int
adc
xchg
mov
shlb
icebp
push
sub
sarl
jne
or
jl
cwtl
mov
add
cmp
dec
imul
push
cmpsb
mov
sub
adc
cs
and
xor
dec
clc
push
sub
jo
sub
xchg
int3
scas
jbe,pn
ret
fidivl
sub
test
call
movsb
cs
add
mov
outsl
mov
dec
inc
cmp
jmp
mov
mov
xor
in
pop
imul
pushf
cwtl
andl
idivl
bound
cld
ja
imul
movsb
or
mov
aas
add
daa
sbb
and
ror
outsl
push
pop
push
pop
fldt
and
ds
int3
dec
bound
push
mov
jne
mov
push
adc
push
add
fbld
aaa
mov
or
xor
xor
mov
repnz
mov
sti
and
and
xchg
jne,pn
mov
mov
cmp
sbb
gs
lock
enter
add
cld
fstpl
jne
sahf
push
jge
jecxz
push
mov
jmp
mov
cmpl
or
lds
xor
clc
fs
pop
mov
adc
insb
jae
pop
mov
push
scas
insl
sbb
jne
jno
outsb
dec
cmp
cs
add
jnp
repz
je
xchg
or
lret
xchg
int3
movsb
push
jns
jge
into
xor
aas
mov
lea
lcall
push
loope
sbb
fistpl
addb
addr16
rcrb
jno
sti
dec
mov
dec
nop
cmp
pop
mov
jnp
out
and
xor
adc
pusha
notb
inc
cmpsl
inc
fwait
sub
idivb
xchg
stos
mov
fucom
xchg
cwtl
or
inc
mov
movsb
push
pop
inc
imull
fwait
jge
das
pop
add
cltd
out
pop
pushf
push
sub
jnp
mov
hlt
mov
mov
push
push
lds
dec
das
mov
push
out
pop
ds
sub
pop
fidivs
push
mov
mov
mov
scas
push
pop
push
fdivs
pop
lods
sub
push
mov
xor
push
stos
jge
jp
inc
scas
jmp
dec
ret
clc
mov
fldenv
adc
mov
stos
cmp
or
mov
fisttps
dec
xchg
rcl
cmp
adc
imul
push
push
dec
jnp
sti
cmp
daa
std
push
push
add
add
mov
sbb
inc
cmp
ljmp
jge
inc
enter
push
sbb
call
jmp
mov
data16
ret
inc
mov
daa
xor
loopne
mov
xor
jae
insl
add
mov
adc
and
pop
jno
cmp
mov
iret
fcomps
dec
scas
cmpsl
or
sub
ss
xchg
mov
pop
cmp
lahf
xchg
aad
subb
xchg
out
xlat
pop
fldl
mov
cmp
pop
push
fiaddl
ljmp
arpl
sbb
mov
mov
mov
nop
pop
inc
enter
pop
in
jbe
adc
data16
movsl
sub
fbld
cmp
pop
leave
std
call
popf
pusha
movb
test
xor
sbb
mov
pop
iret
inc
inc
xchg
call
hlt
pushf
mov
adc
inc
outsl
movsl
out
sub
push
push
jmp
pop
sar
dec
ret
or
jns
add
and
cmp
pop
mov
movl
lods
lahf
cmp
int3
jnp
or
sub
pop
sbb
add
imul
cmpsb
lods
mov
xchg
lods
inc
test
imul
mov
aad
lds
mov
clc
outsb
rolb
jecxz
xor
push
iret
xchg
rcll
mov
in
pushf
cmovge
inc
sahf
cmc
xchg
cmpb
mov
in
stc
leave
add
or
aam
push
mov
mov
push
inc
sbb
mov
fwait
and
aaa
inc
and
scas
cmp
test
ret
mov
out
dec
outsl
insb
jmp
dec
in
sbb
aaa
sbb
mov
out
stos
das
mov
inc
dec
push
jp
je
pushl
pushf
imul
outsb
mov
cs
and
cmp
outsl
stc
or
les
adc
mov
add
cwtl
push
xor
cmp
inc
jae
das
out
test
sbb
sub
inc
mov
lret
mov
sbb
cmp
jae
xor
push
push
xor
imulb
mov
mov
nop
fsubrl
sub
and
sahf
cwtl
jo
or
je
adc
cli
mov
in
cmpsl
lahf
cmp
sub
fsubs
sbb
popf
lock
fimull
pop
sbb
dec
xchg
in
mov
sub
movsl
mov
addr16
repz
stos
scas
sahf
sub
pop
mov
jge
push
cmpsl
rcll
mov
sahf
mov
clc
int3
shrl
pushf
mov
dec
cmc
cmpsl
test
xor
pop
ret
shrb
mov
pushf
and
add
sti
inc
or
in
adc
mov
jo
pop
jne
out
xchg
inc
and
sub
faddl
sbb
adc
cwtl
mov
xchg
sbb
inc
or
push
bound
xchg
xor
jae
into
sbb
orb
xor
fcmove
xor
shlb
jp
out
clc
adc
pop
pop
jmp
cmp
ror
flds
cmp
mov
stos
xchg
test
outsb
push
in
mov
push
lahf
subb
cwtl
fwait
xchg
gs
lods
adc
dec
fisubl
nop
fs
imul
sbb
cmp
in
clc
loopne
out
frstor
ficoml
inc
cwtl
sub
sub
jbe
lcall
out
gs
mov
jecxz
dec
jo
hlt
or
rclb
loope
insl
lods
daa
cmp
sbb
push
add
fstl
lahf
testb
and
sti
push
lock
js
and
cmp
mov
sbb
jo
xchg
stos
pop
mov
mov
and
inc
jae
testb
sub
je
aad
mov
add
push
clc
stc
jl
nop
xorl
out
adc
fs
mov
pop
cmc
in
push
push
lcall
sbb
push
sub
sub
and
sbb
mov
push
shrl
fs
cmpsb
mov
sub
adc
or
push
adc
outsl
or
dec
in
adc
adc
in
add
or
lahf
jecxz
push
mov
scas
adc
idiv
scas
sbb
or
or
mov
test
adcl
test
add
dec
xchg
add
es
fdiv
push
adc
shl
sub
mov
insl
push
xchg
jl
call
sbb
cmp
pop
add
and
fimuls
jno
jb
mov
shll
mov
jecxz
fs
lcall
xchg
rolb
loopne
icebp
popf
adc
test
outsl
repz
test
imul
repnz
rorb
movsb
push
add
adc
cli
mov
adc
mov
mov
push
enter
out
mov
pushf
sahf
and
mov
inc
jbe
xchg
icebp
jns
repz
pop
push
scas
arpl
and
add
stc
inc
xlat
push
ret
in
xor
jae
xorb
ljmp
ss
clc
and
push
bound
cltd
imul
mov
in
dec
push
leave
xor
sbb
adc
mov
xchg
cmp
mov
sub
ds
jl
dec
mov
pop
cli
xor
out
data16
out
je
addr16
mov
popf
mov
push
adcb
add
aam
cs
out
sub
dec
imul
sti
mov
sub
sbb
jle
mov
cmp
cli
fbstp
sbb
xchg
jno
sub
pop
mov
roll
lret
pushf
xchg
adc
cs
cmp
jo
jmp
bound
leave
xor
inc
xor
test
or
jge
push
negb
nop
xor
sub
xlat
ljmp
insb
pushf
push
int3
and
xlat
lret
into
push
push
lock
xor
movsl
ja
repz
cwtl
nop
cwtl
mov
aad
andl
sub
inc
stc
ret
fstps
sbb
pop
dec
mov
jle
pushf
add
jns
cmp
lcall
xchg
mov
loop
in
adc
mov
fs
mov
ja
mov
ds
outsl
gs
testl
iret
sti
pusha
bound
cmp
test
sbb
dec
dec
xchg
cmp
lds
jb
adc
nop
pop
mov
pop
mov
mov
out
jp
mov
or
pop
cwtl
fwait
jecxz
push
xlat
mov
lret
cmp
lret
adc
ficomps
mov
scas
roll
dec
mov
jo
popf
sbb
stc
push
cmp
pop
pusha
pop
adc
inc
les
or
jnp
push
das
add
sbbl
add
mov
adcb
je
push
jecxz
mov
xor
lsl
hlt
mov
mov
call
jno
outsb
pop
ret
stos
mov
push
cmpsb
ds
test
and
fmul
sbb
es
jecxz
pop
xchg
or
jecxz
jl
add
cld
fistl
cmp
aas
shrl
jb
sbb
arpl
testl
sub
inc
mov
xchg
xchg
push
lcall
imul
and
mov
push
movsb
dec
mov
mov
arpl
mov
mov
out
add
jle
pop
cmc
out
data16
adc
icebp
cltd
stos
mov
sub
fmul
lods
cs
cmp
ds
mov
push
idivb
push
xchg
movb
flds
cmpsl
ljmp
cli
mov
shll
das
les
insl
sub
gs
push
lret
ret
mov
hlt
jg
pop
jo
pop
mov
cmp
cmp
cwtl
dec
jmp
in
lods
mov
xor
movsb
jg
dec
ret
jge
out
gs
sbb
sub
pop
push
jg
fnsave
fcoml
and
hlt
dec
adc
into
mov
int
jb
ret
outsb
mov
in
jb
jg
scas
mov
add
adc
inc
cmp
and
aas
cmpsl
mov
and
testb
adcl
jnp
inc
sbb
aad
or
std
das
jge
sbbl
sbb
push
or
mov
add
insb
jae
sbb
and
xchg
leave
dec
sarb
loopne
adc
jp
push
mov
ss
mov
stos
sub
or
lret
lea
ret
jae
xchg
jmp
clc
jbe
or
shll
or
adc
and
icebp
pop
mov
cmpsl
arpl
jnp
inc
dec
mov
add
mov
or
xchg
mov
pop
mov
sti
jbe
jp
ljmp
jge
int3
adc
stos
daa
adc
cwtl
fildl
dec
daa
add
xor
pop
jecxz
sbb
cmp
pop
mov
xlat
lret
xlat
mov
ret
pop
mov
aaa
in
mov
or
sbb
cmpsb
mov
orb
mov
shl
dec
push
jb
and
sbb
pop
dec
push
jp
or
imul
popa
ss
lahf
jns
or
adc
insb
mov
loope
out
outsl
mov
push
mov
push
dec
xor
stos
fnsave
pusha
xorb
shll
add
leave
mov
cltd
pop
mov
mov
push
or
dec
jnp
mov
lods
jns
scas
and
scas
jno
int
outsb
jl
in
gs
iret
push
dec
cmpsb
loope
in
push
nopl
xchg
mov
jo
sub
lods
dec
lea
addr16
fcomp
loop
sar
lods
rcrl
or
scas
pusha
xchg
dec
cmpb
cwtl
jno
repz
xlat
cmp
mov
lods
mov
test
shll
mov
subb
pop
fsubrl
xor
aaa
outsl
and
punpckhwd
lea
cmc
pop
mov
jmp
cmp
jns
out
push
mov
cld
loopne
jmp
push
xor
clc
leave
and
push
pop
pop
sub
pop
or
jne
add
je
mov
sbb
inc
jmp
sahf
and
mov
jmp
fists
fwait
mov
aam
cmp
std
pop
sub
mov
shl
test
iret
lahf
pop
xor
sbb
jge
dec
ljmp
leave
push
xchg
test
and
xchg
ficoms
mov
loop
inc
add
adc
pop
jno
testb
push
ror
and
xchg
push
push
push
loope
and
jecxz
cltd
pop
dec
mov
dec
dec
ljmp
push
xor
mov
jecxz
mov
lret
ror
pushf
out
dec
je
cld
jge
fidivrs
xchg
aad
popa
ret
mov
int
mov
mov
out
and
pop
popf
mov
ficoml
xchg
jg
ja
inc
leave
out
ljmp
sub
sbb
leave
inc
add
rcrl
jmp
sub
jne
mov
push
pop
sbb
adc
bound
pusha
mov
rcll
es
and
mov
xlat
rcl
inc
rcrb
fdivrs
dec
sub
push
ss
xchg
mov
aad
cld
pop
lahf
push
mov
mov
clc
or
repz
fimuls
jmp
dec
pop
mov
pop
dec
aas
iret
in
mov
push
jmp
xchg
imul
push
sar
jle
pushf
add
out
cmpsl
hlt
mov
in
mov
and
jbe
jnp
dec
addb
push
sub
dec
push
ficomps
fs
mov
lock
lds
mov
inc
push
insl
inc
orl
fistpll
pop
fdivrl
pop
clc
jns
sbb
jnp
repnz
push
movswl
and
out
loopne
rorb
das
pop
xor
mov
popa
out
mov
xorb
stc
push
nop
sarl
cmpsb
and
hlt
pop
pop
pusha
mov
push
mov
cmp
mov
int
test
cld
dec
roll
xchg
and
and
xchg
mov
jge
nop
jns
lock
mov
in
pop
ja
sub
movl
cmc
dec
jl
mov
mov
shl
cltd
stos
mov
fst
mov
and
or
xchg
stos
and
xchg
xchg
ja
lret
pop
xor
aad
pop
out
outsb
gs
movsb
out
adc
mov
adc
pop
mov
mov
or
repz
imul
outsb
fsts
push
loope
xor
sub
in
mov
push
adc
xchg
fdivrs
popa
cmp
or
loop
lcall
and
xchg
lret
adcl
pushf
or
fisttpll
sbb
inc
push
mov
push
and
push
icebp
jbe
and
dec
into
or
pushf
dec
mov
movsl
mov
jge
popa
out
int
std
mov
adcb
or
lcall
pop
mov
rorl
dec
xchg
cld
dec
lods
jae
inc
arpl
nop
lret
or
inc
mov
pop
push
xlat
into
or
cs
push
lods
pop
push
push
imull
dec
sub
daa
stos
push
push
jl
enter
push
cwtl
inc
dec
aas
mov
decb
mov
mov
pop
push
jns
repnz
les
add
jmp
aas
adc
hlt
xor
in
jo
mov
xchg
mov
add
lret
into
aam
aas
inc
and
jmp
pop
jmp
lods
movl
adc
pusha
pop
gs
loopne
fisttps
subl
outsl
jg
arpl
adcl
jbe
adc
aad
and
mov
or
pop
jnp
in
ss
iret
out
or
sub
int
ljmp
aad
sub
shrb
mov
dec
adc
mov
jb
lahf
pop
sub
jg
cwtl
jae
fs
in
xchg
fwait
cmp
je
roll
mov
sbb
and
ret
stos
jge
push
sahf
inc
pushw
sub
mov
xchg
nopw
imul
cmp
or
ja
xchg
jb
ljmp
dec
xchg
adc
ret
mov
sbbl
in
xor
test
out
inc
sub
pop
in
xchg
jno
lret
hlt
inc
std
fstpt
adc
js
jno
adc
icebp
mov
sbb
mov
dec
pop
fcmovnbe
into
popa
nop
pushf
pop
popa
jmp
sbb
and
lods
lods
fdivs
sub
sub
out
jecxz
lock
aas
xchg
jl
push
or
add
leave
daa
sbb
shrl
outsl
int
mov
mov
inc
insb
in
repz
bound
lcall
sarb
in
xor
loope
js
sbb
aam
and
inc
push
or
mov
mov
jnp
shll
jns
inc
imul
hlt
mov
cwtl
test
and
lea
scas
outsb
adc
popf
or
dec
push
cmp
xchg
xchg
insb
push
je
js
orl
aaa
xor
jmp
push
jecxz
inc
in
and
cmp
push
adc
mov
inc
add
inc
jbe
loopne
pop
jmp
dec
xchg
js
sub
out
jp
or
or
aam
sarl
clc
xchg
sbb
lahf
xchg
xor
pushf
leave
adc
adc
cmc
mov
sbb
sbb
cmp
add
scas
xchg
aam
sarb
pop
jecxz
aam
sbb
hlt
ja
xor
clc
cmp
loope
cmp
lds
lgs
cwtl
jle
xchg
rcl
cmp
out
lock
not
pop
add
lods
mov
sub
daa
push
pop
adc
mov
adc
fldl
aas
xchg
int
lret
scas
movsl
jge
out
mov
and
dec
ret
aad
jnp
xor
cmc
cmp
test
cmp
mov
rolb
jb
insb
les
pusha
mov
dec
lock
sub
jp
xchg
jl
call
fwait
jmp
lods
add
jb
add
cli
bound
shrb
data16
hlt
shlb
add
call
cmp
xchg
cli
stos
adc
sub
pop
pushf
push
sub
mov
fs
xor
xchg
rcrl
in
shlb
cmc
and
test
ds
aas
add
je
xchg
rcl
mov
xor
push
cmp
and
mov
movb
and
jo
mov
js
scas
jl
xchg
test
push
fnstenv
out
inc
movl
cs
rolb
fwait
mov
ficomps
lods
js
push
cmp
fadds
mov
aas
mov
sub
and
and
and
fs
sarb
fimuls
pop
xor
outsl
dec
add
rcrb
sarl
add
xor
icebp
stos
out
sbbb
xor
inc
rolb
jnp
lcall
inc
pop
sahf
or
adc
and
dec
adc
in
mov
lock
jl
push
sbbl
push
ss
subb
mov
cmp
imul
mov
leavew
scas
scas
push
test
in
pop
pop
call
fs
shl
and
add
mov
out
sbb
push
dec
cltd
mov
pushf
out
mov
sub
adc
les
outsb
mov
out
push
mov
jg
pop
push
out
adc
fst
js
in
pop
ret
fsub
xchg
inc
xchg
cmp
je
loope
jns
insl
mov
lret
adc
sub
lahf
lods
dec
xchg
xor
inc
ds
in
call
cs
cld
sarl
incl
mov
pop
sbb
movsb
stos
mov
dec
xlat
sub
or
add
je
inc
ss
mov
sub
xchg
and
lret
imul
push
xchg
mov
mov
lods
and
xchg
roll
inc
jbe
shll
push
inc
pmulhuw
fimull
mov
int
mov
pop
mov
out
cld
out
out
loopne
jae
in
push
test
push
mov
movsl
inc
push
fisubl
ja
sbb
clc
test
sahf
mov
mov
gs
jne
lods
jle
test
jecxz
arpl
jae
es
or
sub
fidivrl
mov
dec
cmp
sahf
cli
mov
mov
dec
sarl
push
push
lea
orl
push
fisubrl
aad
repz
sarl
imul
iret
leave
sbb
jnp
jae
sub
inc
imul
iret
add
repnz
sub
addl
fistpl
xor
push
jmp
enter
sub
sub
out
jg
ret
cmp
hlt
pushf
bound
xor
cmpsl
test
lods
test
outsb
lock
dec
in
int
or
or
daa
jecxz
cmp
cmp
mov
lahf
fnstsw
and
in
inc
lods
push
arpl
jg
loope
dec
mov
nop
push
fcmovb
int3
sub
push
jnp
push
ds
out
jp
xchg
cmc
xchg
in
stos
orb
ss
sbb
cwtl
out
xchg
fwait
adc
test
pop
pushf
sbb
mov
cmp
add
adc
or
jb
jb
jne
mov
decb
mov
dec
shrb
lret
int3
jmp
xor
dec
cmp
out
scas
lahf
or
push
iret
ret
mov
das
aas
jae
pop
jle
movsl
jg
gs
sbb
xor
mulb
jmp
lcall
cld
int
lods
adc
es
mov
in
jnp
xor
js
cltd
dec
scas
xor
dec
adc
shrl
sub
pop
push
jae
in
in
cli
cmpsb
ficomps
mov
xor
add
adc
in
sbb
xchg
addb
jmp
testl
gs
jb
inc
jnp
jge,pn
add
rcrb
std
inc
jl
cmpsl
fcoml
or
popf
or
popf
icebp
jno
sbb
lods
scas
jns
add
loop
push
sahf
jnp
push
fildll
push
imul
sub
and
daa
dec
arpl
icebp
sbb
push
cmp
jbe
or
lcall
aaa
stc
fcmovb
dec
mov
aad
xor
pushl
dec
loopne
cmpsb
add
pusha
or
jbe
fcomps
addr16
xchg
cmp
and
push
push
cwtl
sub
mov
push
add
movsl
aaa
dec
loop
push
movsb
sti
sti
push
pop
cmp
jge
mov
lcall
jl
push
mov
jae
insb
ret
sbb
jnp
ja
out
xchg
aaa
cmpsl
ljmp
pop
add
shll
popf
mov
adc
insb
adc
and
and
lock
mov
rorb
xor
pop
stos
lds
sub
or
sub
and
dec
jb
cli
repz
repz
xchg
pop
rclb
cmp
fchs
xchg
jne
push
imul
lret
pop
sbb
dec
sub
mov
push
in
and
pushf
jl
sub
push
loope
and
cmp
sbb
ds
outsl
dec
adc
or
jmp
movsl
pop
aad
aad
pop
sbb
push
dec
push
add
sbb
mov
and
out
sub
dec
push
out
movsl
mov
mov
flds
fcoml
jo
xchg
rclb
outsb
je
dec
ss
pusha
test
mov
or
pop
push
mov
out
fbstp
cmp
test
mov
jae
add
dec
pop
mov
dec
adc
add
dec
sbb
js
cmp
aam
cli
fsubrs
adc
xchg
sahf
push
sbb
mov
or
pop
xchg
adc
mov
sub
mov
xor
in
stos
xor
arpl
add
aaa
mov
out
mov
jl
mov
xchg
push
pop
jno
fdivl
jge
mov
les
ds
adc
and
ret
xor
xlat
inc
inc
xchg
fcompl
call
pushf
cmp
push
or
call
xchg
push
jl
in
cmp
mov
movsl
orb
push
inc
xor
ljmp
xchg
push
outsl
loopne
cmc
jecxz
les
push
jecxz
fwait
aam
jmp
or
xchg
enter
das
push
mov
outsl
adc
insb
pop
enter
cmp
cmp
mov
movsb
fwait
jp
outsb
push
out
xchg
push
push
das
xor
loopne
xor
insb
inc
push
pop
stos
dec
imul
xchg
xor
jg
mov
sbb
jle
sub
add
pop
daa
adc
movsl
adc
clc
into
adc
pop
das
pop
int
scas
loope
daa
add
dec
xchg
das
jnp
sub
hlt
mov
jo
movsb
outsb
pop
xor
jo
addr16
jp
sbb
arpl
add
and
gs
lods
inc
aaa
sub
fcoml
js
les
stc
std
inc
cmpsb
push
xorl
lret
mov
pop
xor
lea
xchg
mov
add
out
xor
pop
rcll
or
pushf
pop
imul
adc
push
jae
into
mov
and
adc
data16
sbb
js
es
and
mov
lods
xchg
mov
mov
and
add
push
cld
xor
sub
data16
jl
stos
add
fdivl
inc
cmp
test
inc
sbb
mov
mov
jno
or
inc
imul
mov
push
pushf
adc
mov
and
popf
jl
stos
inc
dec
cmp
sub
lret
aam
cmp
inc
pop
shrl
fwait
cmp
pop
jge
scas
mov
leave
cwtl
adc
fdivrl
add
add
popa
add
push
sbb
lcall
adc
pop
imul
sbb
xor
jo
in
data16
mov
and
push
adc
enter
cmp
sub
mov
mov
fwait
movsb
mov
xor
push
xor
pop
divl
push
sub
or
mov
lods
hlt
cmp
out
ss
mov
nop
inc
adc
sti
pop
sti
ja
loope
xlat
pop
in
push
stos
aas
popf
lds
sbb
mov
xchg
mov
cmpsl
leave
mov
out
punpckhbw
popf
or
insl
dec
sub
call
cld
dec
or
mov
add
popa
ret
sub
test
rol
mov
pop
jmp
pop
test
enter
mov
sbbb
sbb
cmp
rorl
inc
add
pop
xor
popa
sarl
test
das
mov
mov
leave
stos
out
dec
xchg
pop
push
adc
pop
mov
lock
arpl
pusha
inc
out
lock
ret
jo
push
sbb
xchg
cmpsb
xchg
pop
lods
jnp
sub
inc
mov
arpl
pop
jg
adc
or
xchg
pop
push
daa
jg
xchg
mov
pop
push
pushf
mov
cmpl
in
or
repz
bound
xchg
cltd
sarl
addr16
fs
adc
and
jns
nop
in
mov
fs
inc
dec
aad
cmp
cmpl
add
sti
addl
xchg
or
and
int
mov
pop
repz
sub
cmpb
jp
in
clc
mov
adc
jp
mov
xchg
jo
stos
adc
loope
and
xor
jno
fsubp
mov
rorl
xchg
dec
clc
cmp
rcrb
push
bound
push
inc
mov
pop
lret
daa
xchg
aam
pop
add
loope
aaa
lods
jb
jecxz
add
and
cmp
aas
push
ds
scas
sbb
hlt
sbbl
sbb
xorb
mov
fsubl
cmp
push
pop
xor
pop
shl
test
inc
adc
pop
mov
imul
cwtl
sbbb
adc
ret
or
in
addr16
mov
rcl
or
icebp
aaa
cmp
roll
leave
add
xchg
jno
imul
sbb
fcompl
aaa
fs
inc
or
mov
xchg
jg
insl
insl
push
icebp
repnz
xchg
and
sbb
or
push
xor
ljmp
in
loopne
ret
inc
fstps
jmp
jge
dec
cmp
mov
orl
mov
lea
or
out
sbb
lea
int3
inc
mov
lds
nop
mov
or
icebp
loopne
rcll
push
or
mov
fnstenv
mov
adc
shrb
loope
adc
loop
out
rolb
jp
add
cmp
fisubs
xchg
lods
push
out
push
jmp
sbb
imul
lahf
les
lds
lret
pop
jge
inc
sub
jmp
mov
jg
xor
mov
cs
ja
adc
adc
or
stc
cmp
fstl
test
lret
insb
cmp
fidivs
xor
xchg
popf
cmp
fwait
iret
stc
mov
dec
call
into
xchg
jo
push
cli
adc
lock
aaa
push
fsts
xor
sbb
call
icebp
mov
ret
data16
enter
adc
leave
in
popf
mov
mov
push
mov
push
adc
cs
popf
push
pop
dec
adc
mov
icebp
xor
dec
ret
arpl
popl
ss
sub
das
leave
xor
dec
int
sub
lret
xchg
subl
or
hlt
das
sub
add
cmp
jmp
lea
push
pop
loope
cli
stc
lret
add
xchg
mov
js
lcall
pop
outsb
lods
movl
movsb
adcb
movsb
les
cmp
iret
inc
pop
in
and
dec
xchg
inc
cmp
push
fcoms
lret
xchg
out
cmp
lock
mov
sbb
or
dec
fbld
mov
les
jl
int3
pop
int3
push
out
aam
xchg
movsl
int3
loopne
add
imul
pushf
mov
arpl
xchg
adc
mov
mov
hlt
cmp
sbb
push
into
or
fdivl
cli
and
xlat
jecxz
adc
jmp
xor
out
xchg
pop
lds
xor
ljmp
mov
cmp
sub
pop
xor
mov
pusha
pusha
pop
fldt
mov
out
and
and
xchg
push
mov
jnp
mov
xchg
inc
fisttpll
mov
mov
test
mov
inc
sbb
ds
xor
lock
adc
decl
mov
adc
add
jge
fldenv
movsb
imul
cmp
sbb
rclb
jb
or
inc
call
out
sbb
jg
aam
je
pop
xchg
ja
popf
or
adc
push
movb
inc
jns
mov
cmp
and
std
or
aas
jecxz
dec
in
cmp
std
add
jecxz
sahf
lret
jp
outsl
cmp
jbe
scas
jo
mov
in
cvtpi2ps
fs
frstor
jo
jg
cmp
testb
push
jle
push
and
in
and
sub
fimuls
jo
mov
push
int3
into
mov
dec
cli
iret
push
sbb
fs
popa
xor
leave
sbb
les
aaa
cltd
call
xor
push
notb
xor
das
inc
inc
pop
fcoms
ds
mov
jp
push
bound
adc
sub
test
dec
cwtl
fldcw
push
push
push
or
adc
push
pop
or
lcall
std
add
dec
lahf
dec
sub
xchg
int3
test
movsb
outsb
jle
aam
test
jne
and
jmp
and
push
sbb
scas
dec
fisubs
mov
mov
shlb
movsl
adc
mov
mov
call
enter
fdiv
imul
inc
dec
and
mov
shrl
out
inc
loope
cltd
inc
jg
jecxz
inc
sarb
xor
add
pop
jnp
sahf
add
cmpsb
sub
xlat
fcomp
hlt
add
mov
jp
cmp
imul
push
test
push
dec
sub
ss
jae
and
idivl
sub
pushf
in
in
in
adc
insl
loop
jmp
add
cs
decb
sbb
cmp
pop
or
leave
mov
sarl
cli
lea
js
inc
xor
lret
ret
add
add
call
lcall
fisttpll
sub
and
and
push
dec
in
or
test
dec
jo
test
xchg
or
clc
xchg
scas
jl
xchg
in
data16
insb
ds
hlt
sub
dec
push
arpl
dec
xor
mov
aam
fs
ror
pop
test
popa
cmp
or
test
fistps
add
jnp
add
aad
rclb
out
jge
sbb
adc
in
lahf
mov
mov
dec
shl
inc
aaa
xchg
scas
xor
pop
add
jmp
or
fstl
pop
int3
jb
xchg
in
cli
pop
ss
inc
lods
aam
cld
shll
sbb
jne
addr16
data16
mov
int
cmpsb
jp
mov
loope
icebp
mov
ret
mov
add
leave
jb
insl
stc
arpl
in
js
pop
loopne
xchg
mov
movsb
cs
xchg
bound
stos
add
xchg
sbb
fimuls
insb
xlat
mov
ss
mov
es
test
imul
pop
mov
fnsave
inc
push
mov
out
call
adc
pop
and
xor
popf
xor
es
addr16
loopne
test
call
sub
jne
jno
sbb
xchg
jbe
insb
mov
je
icebp
jne
jbe
jbe
insl
xor
inc
and
add
jl
xchg
fdivrs
xor
ljmp
push
lret
mov
inc
mov
xor
shlb
push
push
adc
push
outsl
dec
push
add
inc
add
mov
push
lods
shrb
mov
lds
or
or
dec
jl
std
andb
xor
rclb
lds
add
mov
sub
adc
test
jns
sarb
es
jne
xchg
not
mov
or
mov
push
inc
mov
outsl
adc
mov
or
lahf
test
pop
loopne
cli
push
jg
out
loop
mov
int3
ret
out
push
jmp
icebp
mov
aam
lods
adc
int3
loope
xchg
xchg
shrb
jns
cwtl
fs
add
and
jge
or
out
mov
loop
cwtl
xor
inc
sbb
sbb
jg
mov
add
sti
inc
dec
shll
inc
sub
jno
add
cwtl
mov
in
clc
cwtl
mov
fistl
les
pop
int
pop
jo
cmp
jne
imul
mov
repz
lcall
adc
adc
mov
inc
adc
pop
pop
lds
ret
inc
sti
lock
sub
lea
jecxz
adc
rcll
fnstcw
in
adc
cmpsl
sbb
cmp
xor
and
inc
mov
pop
mov
sbb
or
pop
cmpsl
test
xchg
push
push
in
push
pop
push
ret
pop
subl
cmp
in
mov
mov
add
cmp
xchg
and
loopne
cmp
cmp
pop
pop
out
cmpb
pop
push
and
and
movsl
jge
sti
dec
pop
mov
int
dec
mov
xchg
mov
and
int3
jg
and
cmpsl
pop
xchg
dec
mov
int3
cmp
jns
pop
movsl
aaa
nop
pusha
adcl
cltd
cmpsl
dec
jecxz
mov
dec
sbb
test
push
imul
lret
enter
lret
cli
stos
pop
mul
sbb
cmp
pop
in
pusha
xchg
mov
cmp
movsb
pop
mov
lods
cwtl
jmp
mov
fwait
pop
loopne
xchg
stos
jo
out
add
cmpsl
jne
jg
xor
rol
rorl
jae
inc
and
lcall
or
add
rcll
pushf
aam
dec
test
pusha
or
lods
lock
xor
and
cmc
pop
divl
popa
inc
dec
adc
fucom
xor
xchg
sbbl
jmp
popf
push
mov
pop
loope
in
add
stc
dec
push
repz
mov
mov
sarl
and
add
mov
xchg
add
fdivl
add
lcall
mov
and
jecxz
outsl
dec
cwtl
cmp
ss
inc
insl
push
insb
cwtl
dec
je
mov
ficompl
lahf
sahf
mov
xor
aad
lret
push
mov
mov
fists
insb
ljmp
iret
cmp
clc
idivb
cmp
fwait
or
fcoml
mov
mov
lret
enter
lret
lret
pop
call
in
xchg
jecxz
push
jbe
divb
repz
inc
mov
dec
xlat
nop
inc
icebp
les
mov
movsl
mov
test
jg
andb
sub
movsb
repnz
loopne
outsl
push
xchg
ja
jg
subl
divl
nop
pop
xorps
adc
cli
in
push
and
hlt
push
lock
xchg
push
les
enter
or
mov
xchg
sbb
and
ja
dec
inc
add
mov
loope
pop
scas
xor
int
push
test
push
fists
std
xor
cwtl
mov
xlat
push
and
pusha
outsl
and
cld
popf
notl
jb
xor
scas
and
push
stos
out
aas
dec
scas
xchg
lock
sub
iret
mov
js
mov
subb
mov
push
xchg
fdiv
mov
push
or
std
jb
bound
mov
sbb
ljmp
aaa
jb
out
xchg
mov
or
lds
mov
pop
test
push
std
inc
add
test
divl
or
jno
stos
mov
adc
inc
sbb
test
mov
push
nop
cmp
cwtl
rorb
aad
roll
and
lock
sub
xor
cmpsl
aam
stos
testb
outsl
dec
mov
pop
dec
insb
lcall
xchg
ret
fstpl
xor
pushf
negb
inc
add
pop
fsubs
inc
jl
cmpsb
xor
xchg
ss
cmc
hlt
int3
leave
cmpl
fstps
arpl
sub
bound
xchg
dec
enter
jp
mov
ss
sbb
fisttps
xlat
cmp
clc
jle
or
pop
test
sub
or
jb
adc
lcall
mov
fidivrs
insl
movsb
arpl
icebp
mov
aad
fs
push
or
test
xchg
pop
lods
cmp
dec
dec
out
sub
ss
mov
and
test
adc
lahf
xor
adc
cmpsb
out
cli
mov
inc
jbe
and
rcr
push
jge
mov
out
loopne
fcoml
mov
imul
push
lret
cmp
mov
xchg
fistpll
jle
jmp
mov
insl
int3
jns,pt
push
lahf
xchg
fisubrl
add
bound
in
cmp
cvttps2pi
mov
xchg
or
test
test
mov
and
xchg
push
fisubl
adc
cltd
rclb
and
adc
lcall
int3
xchg
and
lds
mov
shrl
sbb
std
out
int3
popa
cmp
mov
ja
pop
mov
mov
cmp
ffree
mov
inc
or
clc
dec
mov
enter
add
pop
out
std
push
xor
xchg
test
fldenv
cli
mov
dec
and
mov
jb
pop
mov
mov
into
adc
push
mov
addl
jecxz
loop
dec
rclb
cmc
jno
in
rep
jmp
xor
mov
out
daa
into
sub
out
sti
out
mov
ret
cwtl
fdivrs
sub
dec
sbbb
xor
mov
test
push
idivl
xlat
xchg
xor
test
scas
xor
cltd
in
cltd
rcll
jp
pushf
jmp
outsl
inc
jb
sub
dec
xchg
sub
adc
stos
sahf
jge
gs
ret
push
ret
ss
inc
lsl
aaa
nop
sub
push
jmp
xlat
mov
fimuls
out
out
fisubl
and
mov
pop
jge
rcr
and
add
das
push
in
lahf
jl
stos
push
cmc
mov
mov
roll
hlt
outsb
inc
push
mov
aam
dec
xchg
jne
push
dec
mov
mov
xor
xor
inc
dec
xchg
jae
mov
dec
arpl
jge
sbb
sarb
test
scas
loopne
cmp
jle
xchg
cmpsl
sbb
and
data16
enter
fbstp
out
pusha
imul
sbb
dec
ret
cmp
inc
dec
mov
cmp
out
in
call
lret
xor
fwait
adc
loop
rorl
adc
xchg
adc
push
int
adc
dec
xlat
push
mov
daa
mov
push
daa
or
jbe
jle
mov
sbbl
int
lds
sbb
outsb
inc
jp
mov
pop
movsl
ret
mov
andl
mov
lds
cmpl
or
cmp
lods
jns
jnp
xor
cs
je
xor
mov
in
ljmp
sub
cmp
push
and
shl
pop
push
rclb
inc
pop
pop
mov
jne
test
mov
inc
xchg
ret
fcoml
pop
out
cld
daa
lret
push
cmp
xchg
sbb
mov
out
mov
mov
jno
mov
loop
push
dec
rorb
pop
pop
jo
out
jle
mov
aad
pop
icebp
es
cmp
inc
push
sub
jne
pusha
xor
mov
pop
dec
adc
loope
sbb
hlt
decl
sarb
sbb
fwait
push
shlb
mov
jbe,pt
pop
imul
ljmp
and
lock
test
mov
push
testl
in
mov
mov
insb
test
fildl
stc
fildll
dec
ja
inc
jae
jl
fistpll
popf
cltd
jno
and
cld
jmp
lods
out
cmpsb
daa
mov
cmp
dec
daa
inc
cli
sbb
gs
and
cmp
out
or
sahf
inc
fwait
adc
cmc
jle
xor
js
and
push
mov
repnz
xor
push
out
pop
push
push
call
cwtl
movsl
jmp
mov
daa
loop
notb
xchg
jmp
cmp
outsl
or
in
adc
mov
or
cld
int
in
repnz
add
das
or
pop
bound
in
inc
add
outsl
dec
ja
dec
inc
cld
pop
lods
push
mov
xchg
je
fiaddl
lock
rorl
insb
mov
dec
mov
pop
sub
xlat
and
fcompl
adc
movsb
andb
roll
stc
iret
sbb
pusha
xchg
fwait
cltd
jne
stos
aaa
jle
push
and
mov
inc
lahf
inc
push
jle
rolb
cmpsl
inc
aam
sbb
out
and
aas
fcoms
push
or
in
bound
insl
add
xor
mov
fimuls
aam
push
into
push
andl
int
punpckhbw
jae
sbb
test
pop
and
mov
mov
lods
scas
pop
pop
out
push
shlb
jmp
mov
daa
pop
ss
call
aad
xor
cmpsl
jbe
fisubrs
add
jg
vpaddusw
mov
and
inc
mov
dec
xor
xlat
push
loop
cmp
ja
inc
mov
add
adc
jnp
jae
cmpsb
cld
inc
sbb
aam
sbb
pop
outsl
push
mov
mov
insb
mov
sbb
insb
lods
add
testb
push
inc
ss
mov
pushf
decl
add
dec
aaa
nop
rorl
cld
dec
inc
pop
pop
mov
and
sub
int
push
lcall
imul
add
mov
adc
fisubrl
fistl
mov
cmpl
lea
daa
loop
mov
jecxz
leave
divl
adcl
cs
lock
stos
outsb
sbb
push
test
dec
add
sbb
ss
cld
jl
test
add
and
repnz
or
leave
repz
out
cmp
inc
shrb
loopne
add
adc
adc
ds
imul
cmp
hlt
dec
enter
ret
pop
inc
mov
pop
and
pop
jmp
andb
cmp
pop
mov
stos
int3
out
and
push
adc
ret
into
insl
cmp
roll
lds
jae
nop
xor
or
mov
inc
cld
pop
popa
and
dec
push
fldl2e
xchg
jae
mov
test
pop
cmp
ret
pusha
cmpsb
jp
adc
les
out
fldl
cmp
push
les
xchg
in
clc
add
es
fwait
or
push
or
add
dec
mov
fucomp
rcl
or
push
mov
and
or
sahf
arpl
adc
sub
inc
repnz
mov
sahf
imul
push
stos
mov
xor
scas
rorb
add
xchg
pusha
inc
mov
sbb
xchg
fucomp
outsb
fcoms
jae
loope
jb
fistps
push
sbbb
rolb
cs
loop
and
inc
iret
decl
out
std
xor
mov
sub
mov
push
rolb
popf
cmp
dec
and
jbe
xchg
xchg
cmp
in
mov
lods
pop
push
push
pop
xlat
shrb
cmp
jb
push
pop
mov
xchg
xor
andl
icebp
jnp
mov
ffree
and
sbb
xchg
rorl
ret
add
mov
mov
jb
adc
mov
fcompl
pop
pop
xchg
test
flds
jecxz
jo
test
lcall
inc
and
dec
sbb
cmp
inc
mov
lret
call
pop
pop
lcall
fmulp
jmp
add
iret
ljmp
xchg
daa
jns
test
xor
int3
jo
out
adc
mov
cmpsb
mov
outsb
addr16
out
pop
mov
repz
pop
out
mov
out
jae
cld
cmpsb
cmpsb
ljmp
andl
mov
sahf
xchg
or
jle
xchg
inc
and
jmp
ret
mov
xchg
sub
jno
dec
in
cltd
mov
fst
mov
sub
roll
add
ds
es
cmp
rclb
dec
movsb
scas
xchg
outsb
imul
addr16
in
in
fcmovnb
test
jbe
aam
sbb
fcmove
or
cmp
xchg
dec
dec
mov
cmp
jnp
adc
sub
leave
add
call
in
pop
mov
and
mov
jnp
es
addr16
and
popf
flds
push
test
mov
pop
nop
arpl
mov
test
inc
ret
cmp
data16
xchg
aaa
sbb
jl
aas
pop
movsb
pushf
nop
lahf
adc
add
adc
sub
xchg
cmp
jb
dec
pop
sbb
jle
ss
lret
jg
xlat
xorl
xor
pop
sahf
daa
mov
push
and
outsb
mov
add
mov
adc
dec
sbb
ret
cli
fdivrs
cli
je
cld
pushf
xlat
sub
aas
push
push
jmp
nop
dec
xchg
adc
mov
rcrb
cmp
dec
mov
mov
movsb
movsl
jle
mov
xor
inc
push
arpl
in
adc
fbstp
lret
adc
jo
or
cmpsb
xchg
xor
je
movsb
xchg
icebp
stc
cltd
dec
cmp
fsubrp
inc
js
test
inc
cmpsl
nop
pushf
lods
out
in
mov
xchg
jb
xor
mov
das
mov
adc
mov
mov
sahf
adc
sbb
inc
daa
mov
sub
lds
mov
and
mov
jl
mov
mov
ret
push
and
pop
jge
lods
dec
hlt
xchg
in
inc
jmp
ret
scas
mov
imul
repz
shll
icebp
xor
sbb
fisubrl
xor
lea
stc
pop
fwait
insb
xchg
fidivs
hlt
dec
jl
pop
push
jp
out
loopne
shl
in
out
or
mov
adc
xor
movsb
icebp
pop
xor
mov
xchg
mov
sub
icebp
xor
aas
push
push
popf
ljmp
and
gs
sbb
cmc
pop
or
dec
pop
mov
cwtl
leave
jo
mov
jno
sbb
xor
mov
xchg
cmpsl
insb
pusha
or
mov
ret
aad
cld
dec
mov
out
mov
in
mov
daa
stos
cmp
orb
outsb
xchg
pop
dec
mov
cltd
and
in
mov
sbb
fsubs
ljmp
jg
int
cwtl
ljmp
ret
in
aas
pop
mull
lea
or
test
xchg
test
lret
pop
xor
rclb
bound
or
inc
xor
xchg
inc
xor
mov
inc
adc
scas
and
push
fwait
insw
popa
jmp
or
dec
fwait
lret
pop
lret
jbe
sub
aaa
cmp
imul
cs
jb
and
jbe
mov
pop
mov
mov
and
push
jo
notb
or
mov
jne
fwait
ja
lds
and
and
jb
lcall
fsubs
or
push
sub
jns
xor
sbb
xchg
pop
loopne
in
pop
movsl
push
cmp
or
pop
add
nopl
inc
mov
insl
int
scas
sbb
outsb
test
lahf
sub
jg
cs
mov
clc
outsl
mov
jmp
xchg
fs
cs
xor
dec
mulb
sarl
jno
mov
jmp
mov
orb
sub
stos
xlat
jle
xchg
loop
rolb
aad
sub
addr16
jns
lret
fsubl
das
xchg
mov
inc
in
dec
outsb
stos
imul
loop
jg
in
mov
mov
pushf
or
or
or
mov
jne
mov
roll
mov
jb
dec
dec
aad
iret
and
xor
popf
faddl
loopne
adc
sarb
cmp
mov
push
out
mov
jno
imull
jecxz
out
mov
jo
cmc
add
pop
fsubrl
mov
xlat
mov
adc
cmp
adc
or
movsb
mov
pop
or
ret
in
cld
push
out
dec
addr16
mov
pop
jle
dec
mov
sti
ja
sub
aaa
jp
add
mov
push
pop
shlb
push
insb
xchg
outsl
int
jb
push
sbb
jbe
cmp
mov
jle
scas
ret
dec
shrl
adc
push
xchg
sbb
stos
es
jle
into
adc
test
mov
sti
jmp
dec
push
xchg
xchg
xor
and
int
adc
sbb
lods
xchg
popa
dec
mov
roll
inc
mov
or
rclb
lock
cltd
push
jno
fnstcw
mov
rolb
mov
sub
pop
aam
arpl
aas
or
xchg
pop
push
jne
xchg
jge
fs
sub
fxch
xchg
iret
adcl
call
fdiv
pop
mov
push
sub
mov
andb
dec
mov
repz
xor
ret
pop
pop
pushf
mov
fcomps
sbb
add
cmp
cmc
loopne
inc
aam
mov
push
ss
ficoms
inc
inc
out
push
xor
fcomip
popa
jns
jnp
adc
in
dec
lock
jns
mov
adc
adc
imul
and
vmovss
dec
mov
arpl
movsb
popa
iret
pop
test
jp
js
pop
ljmp
jb
cmp
sbb
inc
xor
push
mov
or
cmpsl
loope
daa
inc
sbb
pop
jmp
push
ret
dec
stc
pop
mov
scas
lcall
pushf
out
pop
movsb
add
add
out
negl
sbb
mov
call
lea
in
movsb
fs
test
movsl
xor
pop
jne
movb
rorl
mov
stos
push
out
pop
popf
mov
add
jbe
pop
mov
fs
data16
jmp
imul
add
out
or
pop
xchg
adc
sub
cmp
lret
hlt
lods
push
fiaddl
mov
hlt
xor
adc
in
out
rclb
xchg
pop
or
int3
sub
add
xor
mov
lcall
sbb
fwait
jno
xchg
stos
and
loopne,pt
xchg
pushf
shlb
mov
scas
fidivs
das
repnz
mov
int
test
shr
iret
jns
dec
repz
aas
dec
add
sbb
icebp
loope
lds
mov
xchg
scas
and
xor
ja
push
jnp
out
pusha
xchg
fadd
aas
xor
adc
lret
out
int3
jmp
ret
mov
xchg
cld
inc
mov
xor
mov
dec
rol
fldcw
mov
sub
inc
push
ja
xor
add
mov
lods
daa
outsl
rcrb
in
mov
scas
mov
xchg
outsb
pushf
push
mov
xchg
push
sarb
jl
bound
mov
cmp
push
aas
add
sahf
outsl
les
hlt
in
rcrb
mov
push
sbbb
dec
scas
imul
pop
push
insl
cld
pop
insl
mov
clc
dec
jg
leave
mov
pop
jno,pt
adc
mov
dec
test
mov
je
ret
out
push
iret
pop
ja
insl
imul
pop
fwait
dec
jp
adcl
pop
enter
add
inc
cmp
cmpsl
or
clc
cmpsl
loop
pop
bndstx
lret
jmp
fsubs
imul
and
jp
incb
xorb
pop
mov
mov
jo
jle
adc
out
rclb
and
inc
dec
and
mov
fstl
insb
lods
push
mov
adc
or
ja
fwait
jl
add
inc
hlt
js
xchg
lea
lcall
sahf
mov
mov
push
cltd
movsl
stos
xor
test
cmp
ss
in
push
cmpsb
mov
jae
repnz
and
inc
jne
push
jno
mov
loopne
xchg
xchg
clc
out
jnp
xor
add
insl
aaa
out
adc
stc
nop
adc
lcall
add
out
repnz
movsb
pop
in
dec
sbb
cmpsl
pop
sbbb
pop
out
icebp
imul
cltd
pop
js
sbb
mov
add
adc
stos
cmp
and
and
rcrl
and
jns
filds
or
push
in
adc
call
lret
mov
xchg
insb
ret
out
inc
ret
mov
mov
mov
imull
mov
xchg
mov
xchg
dec
icebp
cmp
hlt
mov
outsl
sahf
xor
push
add
cmpsl
movl
inc
push
std
xchg
sarl
dec
sbb
xchg
mov
orl
or
cmpsl
inc
bound
xlat
stos
out
adc
xor
test
cmp
pop
fimuls
dec
mov
add
testl
inc
dec
dec
jg
push
call
mov
imulb
lret
inc
push
in
inc
sub
jo
js
pop
sub
mov
sti
or
dec
pop
dec
insl
inc
out
inc
cmc
in
sbb
aas
popf
movsl
cli
mov
scas
dec
mov
adc
push
outsl
paddq
push
dec
push
stos
push
mov
aam
push
ja
adc
mov
lock
push
std
addb
xor
xchg
and
or
pop
fs
mov
jbe
rolb
aam
gs
push
rorb
xchg
xor
pop
mov
sti
mov
sub
inc
fistpl
ja
jl
xchg
mov
inc
and
jle
jb
stos
mov
rcl
popf
std
xor
test
jg
dec
popa
add
cld
xchg
pop
sbb
and
pop
test
data16
add
es
and
lds
inc
xor
mov
loop
fmuls
cs
push
push
ss
inc
rcrb
daa
loop
lcall
lahf
xlat
loopne
pushf
imul
test
or
stc
outsl
test
mov
in
ret
daa
mov
fstpt
push
inc
xor
mov
and
mov
cwtl
jno
fidivrs
and
popf
rorl
jmp
cmpsl
xchg
addr16
mov
xchg
push
sbb
push
aas
xor
or
sahf
movsb
cmp
imul
add
cmp
xchg
fwait
repz
pop
insb
mov
movsb
dec
or
xor
fcmovnu
sahf
push
mov
mov
data16
jnp
ja
xchg
mov
dec
int3
cmp
roll
addr16
inc
int
cmove
fisubs
out
xchg
incl
dec
mov
pop
loopne
aam
cli
sbb
insb
cwtl
out
daa
pop
icebp
int
pop
je
aas
das
xchg
cltd
mov
jne
or
jmp
cmp
icebp
push
cmp
inc
mov
pop
pop
fadds
stos
loope
cmpl
aaa
adc
xor
mov
adc
int
insb
mov
ds
test
sahf
mov
cli
mov
cmc
cs
inc
std
pushf
jl
cltd
imul
mov
push
outsl
xchg
loop
dec
iret
pop
sub
mov
adc
push
jae
inc
adc
jo
sbb
cld
mov
xchg
lea
loop
pushf
insl
frstor
pop
dec
xchg
dec
stos
es
and
xor
mov
mov
lock
adc
and
mov
sti
sbb
push
movsl
jae
in
add
xchg
and
dec
lods
adc
pop
mov
push
mov
loop
add
pop
mov
out
sub
xor
jno
rolb
push
push
push
out
testb
les
mov
js
sub
mov
std
lahf
arpl
cltd
jmp
lods
jge
mov
fwait
into
mov
dec
loope
push
lods
subb
mov
int
es
loop
ds
call
jmp
xchg
or
pop
sahf
insl
shl
shl
nop
int
and
push
test
loopne
in
cmp
loop
arpl
pop
mov
lcall
adc
xchg
mov
jmp
xor
loope
mov
or
mov
mov
mov
int3
lcall
movsb
inc
jns
lret
jecxz
dec
outsl
lock
adc
xchg
mov
xor
sbb
enter
pop
sbb
fsubrl
ljmp
jl
lahf
xchg
or
into
push
mov
sti
aam
gs
shll
push
xchg
stc
fidivs
jp
jmp
fnstcw
inc
mov
fbstp
repnz
adc
lcall
scas
push
jmp
dec
inc
mov
dec
pop
cltd
push
fwait
outsb
imul
pop
push
dec
pop
lods
ja
push
adc
push
andb
xor
aad
ficompl
sub
sub
mov
hlt
loopne
shll
xchg
mov
out
scas
mov
cmpsl
mov
jl
stos
cmp
pop
lea
xchg
rclb
movaps
mov
jl
enter
adc
inc
arpl
jns
lahf
add
add
insl
imul
sbbb
daa
nop
dec
pop
test
ret
pop
mov
pop
push
mov
lock
addr16
and
jmp
xchg
xor
bound
sbb
mov
not
xchg
add
psllw
jo
enter
movsb
dec
movsb
or
inc
adc
inc
ret
in
iret
pop
les
sub
cmpsb
push
fs
addr16
jl
mov
push
cmp
push
dec
xor
cmc
sub
shl
jno
and
call
cmc
sub
sbb
gs
dec
or
loope
cs
adc
mov
dec
idiv
insl
xchg
data16
mov
inc
scas
popf
iret
shlb
notb
and
sbb
fisubl
or
bound
icebp
dec
out
push
xchg
movsb
frstor
fwait
cmp
or
rorb
sahf
add
cmp
mov
mov
pop
xchg
gs
icebp
cmp
inc
ss
push
test
aas
adc
das
sahf
pop
outsl
lcall
inc
pop
dec
jp
xchg
inc
inc
xor
add
les
loop
xchg
sbb
out
or
std
jne
faddl
adc
sbb
dec
in
ja
cli
ds
sub
xchg
out
ds
cwtl
cwtl
mov
mov
icebp
sti
popf
lods
adc
call
aas
in
arpl
push
dec
mov
mov
sub
mov
stos
imull
dec
xchg
mov
mov
xchg
and
andb
and
rclb
jbe
imulb
mov
aaa
rcrb
inc
pop
mov
lret
or
mov
movsl
repz
sub
adc
or
add
fisubl
mov
lock
xchg
pop
repnz
mov
cld
popa
mov
pop
xlat
shlb
shll
addb
roll
fnstsw
mov
pop
loop
mov
loopne
jecxz
push
add
ret
es
fcomps
outsl
xor
xor
in
outsl
push
addb
mov
mov
fadds
out
and
xchg
rcrb
mov
dec
mov
inc
mov
int
mov
or
cmp
pop
xor
inc
les
aaa
js
xorl
rorb
iret
ror
pop
push
jne
xchg
popf
imul
adc
in
shl
pop
arpl
jo
inc
adc
push
pop
lret
mov
outsl
aaa
aad
cld
jg
pop
lock
inc
cmp
xor
mov
and
dec
movsl
lods
sbb
add
ret
mov
test
push
mov
jnp
pusha
xor
dec
sbb
sub
out
and
or
mov
stos
imul
cmp
jmp
jmp
decb
jbe
out
lcall
dec
imulb
xchg
out
dec
xorb
sub
mov
sbb
mov
fistpl
inc
leave
movsl
inc
or
js
mov
push
adc
jns
leavew
int3
idiv
xchg
mov
inc
pop
jl
jns
gs
pop
test
jno
dec
gs
out
push
xchg
mov
mov
sub
fs
push
das
jns
outsb
ljmp
sbb
pop
push
stos
mov
scas
xchg
push
imul
lea
and
and
xchg
inc
out
mov
pop
insl
cwtl
cmp
fsubrl
sub
daa
sub
sbb
fcomp
sahf
fidivl
lea
insl
xchg
dec
repz
xchg
nop
addl
cmpsb
or
jbe
push
push
movsl
in
movsb
test
and
and
jl
lahf
cli
xchg
test
pop
or
add
jne
adc
xor
test
mov
pop
fs
mov
sub
jge
mov
add
mov
dec
fidivs
jo
test
xchg
inc
dec
pop
ja
mov
xor
push
or
test
and
mov
xlat
in
aam
loopne
sub
imul
in
in
les
ja
cld
dec
mov
bound
xor
cmp
arpl
xlat
jo
pushf
bound
sbb
push
fmul
jl
jg
mov
sub
pop
and
or
inc
jge
ja
sbb
mov
outsl
jecxz
xchg
xchg
or
mov
and
jne
pop
jae
and
test
xor
jae
fstl
imul
lret
stc
add
and
js
ret
cmc
shll
pop
test
mov
pop
and
sub
pop
xor
inc
jmp
and
shr
push
aad
mov
inc
jl
negl
lahf
sub
and
inc
or
mov
xchg
lods
outsb
ret
xlat
xor
add
loopne
shl
mov
inc
xchg
mov
xchg
pop
cltd
jle
into
or
sbb
sub
or
and
cmp
fldt
testb
xor
sbb
mov
xchg
fists
mov
jbe
cwtl
inc
popf
pop
loopne
aad
iret
inc
jnp
xor
cs
mov
or
call
clc
loop
stos
cmp
xor
fdivl
cmc
faddl
xor
addr16
fsincos
sbb
sbb
jmp
dec
jns
xor
dec
push
and
rorb
xchg
mov
inc
aaa
out
cmc
movsl
mov
xchg
out
and
add
sti
pop
cmp
cwtl
cs
std
inc
lods
pop
faddl
aam
sub
lahf
fnstcw
iret
fdivrp
popl
loop
mov
cltd
mov
stc
mov
push
dec
fiadds
and
mov
int
xchg
lea
mov
mov
hlt
hlt
cli
jge
test
inc
jg
mov
adc
push
in
aad
cltd
stc
adc
test
inc
les
xchg
orl
xchg
jbe
inc
inc
xchg
dec
sahf
cmpsb
push
stc
loope
out
fcomps
push
or
bound
pop
stc
pusha
xor
mov
cli
jns
out
fists
call
xchg
sbb
cmp
mov
int3
jle,pn
daa
lea
mov
imul
ljmp
pop
pop
cmp
bound
mov
push
xchg
mov
push
sbb
lods
clc
jb
dec
jmp
jecxz
xchg
in
mov
pop
xor
lods
push
sbb
push
scas
dec
and
cmpsl
adc
hlt
imul
out
cwtl
ja
inc
xchg
ret
sub
fistpl
add
js
mov
cli
sub
push
add
add
loope
fcomps
rorl
ljmpw
ds
jle
inc
dec
imul
mov
cs
fisubrs
popf
in
fildll
in
dec
in
cmp
sbb
leave
mov
lahf
andb
dec
inc
test
push
pop
loop
mov
sub
aam
mov
mov
scas
xor
push
cmp
fcomip
bound
clc
add
sub
ret
outsl
and
test
push
cmc
jl
jle
fimuls
cmpsb
push
movsl
xor
rep
hlt
gs
pop
int3
divb
xchg
xchg
and
xchg
mov
pop
and
jo
cmp
pusha
dec
jae
mov
jb
inc
jns
movsl
les
in
jbe
in
jo
jmp
lock
repz
ljmp
aam
pop
ret
xchg
repz
cmpsb
in
pop
in
mov
xor
cmpl
mov
inc
add
je
in
mov
jne
shl
mov
leave
jbe
and
adc
repz
das
fnstenv
shlb
roll
stos
push
ret
bound
cmc
and
mov
in
sbb
inc
mov
sahf
popa
jg
push
imul
pop
dec
pop
ja
pop
loope
cmp
inc
jae
sbb
sub
cmp
fs
test
gs
aaa
pop
sub
pop
addr16
fsts
iret
rorb
xlat
fistpll
iret
add
movsb
lock
or
add
es
pusha
xor
push
add
or
popa
in
push
dec
pop
mov
push
dec
sbb
mov
aad
sub
sbb
pop
jmp
jb
sbb
data16
dec
pushf
decl
lods
push
shll
push
xchg
inc
daa
adc
xor
ja
dec
add
bound
inc
std
mov
loop
and
fwait
addr16
int3
dec
mov
push
jmp
xlat
mov
push
jg
clc
xchg
popa
mov
push
cmp
negl
mov
inc
aad
adc
fwait
inc
mov
add
sbb
seto
mov
sbb
add
mov
and
and
shl
cli
add
or
push
leave
push
divb
enter
jecxz
aam
repz
dec
gs
stc
xor
push
pop
adc
ss
cmp
mov
jnp
add
jp
bound
push
addb
xor
add
sbb
movsb
daa
jae
iret
pop
daa
jmp
pop
cwtl
imul
inc
cmp
add
addr16
pop
mov
mov
repnz
dec
and
loope
insb
dec
fcompl
loope
loope
sbbl
xor
push
out
push
test
cwtl
rcll
outsl
mov
xchg
add
dec
sub
aas
or
push
ss
inc
cmc
addb
ds
xchg
jb
rcrb
lock
dec
inc
lahf
jge
pop
lock
popa
sysret
lods
mov
sbb
jbe
ljmp
lds
pop
push
loop
mov
cmpsb
or
addr16
and
push
shrb
xor
xchg
add
jae
adc
mov
fs
ds
out
and
xchg
shlb
xor
and
scas
lret
into
mov
cmp
dec
push
xchg
sub
pop
mov
xor
sub
repz
jmp
xor
movsb
mov
call
xor
push
stc
cmp
push
adc
xchg
lea
push
mov
shlb
stc
iret
fsts
jp
jo
adc
mov
mov
sahf
and
pushf
leave
jne
xor
sub
outsl
cmc
fstp
push
add
sbbb
pop
and
mov
sub
in
or
cmp
lds
mov
out
add
inc
jb
daa
jge
push
mov
adc
xchg
test
push
pop
push
mov
js
movsb
inc
xlat
sub
cmp
inc
test
push
in
sahf
adc
out
cpuid
push
sub
insb
fidivrl
scas
inc
aas
xchg
push
cwtl
iret
xor
inc
stos
mov
cmp
movsb
andb
mov
nop
test
in
sbb
out
push
mov
xchg
lret
daa
jmp
xchg
mov
push
or
xor
sub
pop
aaa
adc
pop
jns
imul
mov
les
or
cmpsl
ja
mov
and
gs
dec
sar
pop
pop
ficompl
jbe
and
inc
cmp
sbbl
mov
shr
and
movsb
movsl
daa
loopne
je
fnstcw
fwait
sbbb
cmp
dec
pop
mov
push
notl
adc
push
inc
mov
inc
add
xchg
xor
and
fmull
lahf
sbb
xchg
mov
add
sbb
jo
cmp
add
push
in
push
push
dec
sbb
mov
ficoml
mov
int
cli
mov
mov
ss
repz
mov
hlt
add
sbb
lods
adc
sub
arpl
loopne
mov
cs
and
hlt
stc
push
xchg
mov
push
xchg
mov
scas
cmpsl
test
outsb
ss
pop
sahf
lret
imul
lcall
inc
dec
pop
mov
cltd
outsl
adc
bound
jmp
mov
jle
into
mov
push
mov
lods
pusha
push
into
push
and
imul
out
cld
lahf
or
icebp
jg
push
in
lahf
ret
loope
popf
inc
les
jl
in
sbb
push
add
cld
mov
dec
dec
repz
pop
push
xor
aaa
and
fadds
push
mov
mov
ret
loop
inc
dec
stos
jbe
mov
jne
mov
mov
push
cli
mov
orl
fwait
ds
lods
mov
xchg
xchg
pop
push
pushf
sbb
dec
fisubs
mov
push
push
cmp
pop
pop
test
xor
xorb
dec
std
fisttpl
test
adc
sub
ror
xor
test
and
mov
fst
and
fidivs
and
shr
aas
mov
jbe
sub
dec
xor
repz
dec
or
out
lea
in
mov
arpl
sarl
ret
fdivp
or
scas
jo
and
in
icebp
pushf
xchg
xchg
or
das
dec
sub
mov
or
enter
lret
mov
or
subb
into
jmp
jo
push
xchg
js
pop
inc
jle
fildl
xorl
cmp
cmp
insl
gs
push
cwtl
cmpsl
sbb
xchg
imul
push
testl
das
push
or
cld
stc
outsb
mov
scas
inc
mov
lahf
jo
repnz
lods
pop
aaa
mov
mov
cltd
mov
push
pop
loope
xchg
sub
lret
iret
dec
push
lods
sub
lods
setg
inc
negb
xor
mov
dec
sbb
jae
out
in
inc
sub
sbb
inc
mov
cmp
cmp
movlps
fs
dec
cmp
adc
add
inc
sub
or
adc
je
outsb
dec
pop
and
iret
ret
xor
jl
fdivs
out
test
add
sahf
inc
mov
dec
xchg
pop
test
testl
cmp
bound
imull
in
sbb
mov
or
std
mov
inc
in
nopl
scas
dec
and
fcomi
mov
cld
daa
sbb
ds
lock
jo
cwtl
in
sub
sub
sbb
sbb
sbb
jne
pop
adc
jl
adcb
inc
mov
ret
cmp
fnstsw
add
xchg
shlb
pop
outsl
mov
outsl
lahf
jne
int3
adc
mov
push
sbb
fnstenv
push
mov
ds
cmpb
fmull
aaa
add
fcompl
dec
and
gs
sti
push
sbb
mov
pop
movsb
mov
push
lods
cmp
xlat
xchg
stc
or
mov
les
jmp
xor
addr16
insl
pop
pop
add
rorb
mov
jp
cld
lds
movsl
push
out
mov
and
clc
roll
ss
adc
add
fmuls
or
sub
call
cmpsl
in
addr16
cwtl
inc
sbb
movsl
cwtl
dec
mov
rclb
dec
ss
fstl
in
xor
xchg
aam
dec
clc
push
push
mov
jne
insb
pop
sahf
mov
inc
xor
add
pop
mov
lds
jmp
sarb
inc
mov
pop
into
jp
xor
repnz
jb
jne
repz
fisubl
push
inc
enter
jg
inc
xor
xchg
lock
ja
lcall
popf
jg
stos
xor
xchg
add
ss
mov
push
cmpsl
mov
into
stc
jle
pusha
int
xchg
push
fcompl
gs
cmp
cwtl
xor
pop
mov
ret
xor
push
push
repnz
push
shrl
jnp
scas
dec
addr16
cmc
repz
jge
pushf
hlt
pop
xor
mov
sahf
or
int
add
jle
jge
fildl
push
xor
dec
orl
addr16
push
rcrb
test
inc
icebp
xor
or
dec
adc
sub
sbb
icebp
cld
mov
dec
push
xor
loop
adc
call
mov
pop
jo
or
inc
insb
fldcw
jb
cmpsl
ljmp
sub
pop
xchg
and
int
lcall
push
inc
loope
stos
stos
jmp
mov
cmp
gs
push
xchg
fs
xor
mov
icebp
fcmove
iret
push
mov
ret
adc
pop
jne
clc
fiadds
addr16
xor
xlat
pusha
js
lds
pop
xchg
or
fistpl
xor
jb
push
or
pop
sbb
push
sahf
jecxz
stos
lahf
jl
aam
out
mov
or
pop
xchg
rcll
xchg
push
mov
jg
inc
jns
jmp
icebp
imul
push
dec
xchg
mov
mov
imulb
jno
fsubrs
sub
ja
imul
mov
mov
arpl
push
jnp
inc
gs
lahf
stc
es
inc
test
aaa
mov
pop
lahf
jle
adc
lea
repz
inc
cmp
out
lahf
or
cmp
mov
ret
idivb
and
adc
addr16
mov
sarb
jnp
and
icebp
or
ret
ds
xor
fcoml
pop
cs
orl
cmpl
out
out
add
fistpll
dec
mov
fmulp
jmp
and
sbb
rorb
subb
mov
pop
push
jae
push
test
cmpl
data16
loop
negb
out
push
js
jns
adc
adc
pusha
or
xlat
xchg
mov
adc
mov
add
cli
out
jmp
inc
pop
jg
repnz
sub
lret
imul
aam
test
jo
mov
insb
aad
out
lcall
arpl
iret
nop
fs
loop
mov
or
rcrb
sub
shl
mov
jns
mov
sub
mov
mov
mov
sbb
mov
inc
cmp
int
and
jae
jne
xor
inc
add
das
cmp
xorb
mov
mull
rcl
sahf
mov
adc
jge
outsl
and
movsl
adc
inc
mov
jbe
pop
add
mov
jb
test
call
cmpsb
shll
mov
lret
ja
test
test
pop
pop
data16
jl
jp
push
lret
out
push
stc
outsl
int
cmpb
and
dec
js
stos
and
rorb
sbb
pop
jns
je
out
mov
stos
xchg
pop
insb
std
cmp
cmp
or
loopne
jns
xchg
call
arpl
sub
mov
or
push
in
aad
sub
les
mov
xor
fwait
xchg
xlat
outsb
sbb
dec
jae
lret
mov
or
pop
pop
inc
hlt
rorl
movsl
or
cmp
push
xlat
test
outsl
cmc
lea
mov
in
xchg
in
jae
mov
sti
roll
hlt
mov
subl
pop
sub
cmp
sbb
ljmp
jb
jns
adcl
mov
loop
shrb
mov
lods
and
mov
push
add
pop
push
das
adc
imul
mov
and
jp
repz
add
sti
lcall
jecxz
mov
mov
mov
jo
imul
add
sub
jne
sub
in
mov
pop
adc
adc
jl
mov
and
mov
and
pop
inc
xchg
xor
out
lea
mov
fwait
lods
scas
dec
out
add
lcall
mov
jmp
sti
testb
pop
push
jbe
hlt
ficomps
mov
fistpl
xchg
lds
lods
dec
or
test
out
jno
cmp
and
addr16
inc
call
add
or
nop
push
xor
cli
xchg
out
out
bound
loopne
inc
sub
leave
mov
pop
mov
mov
int
fnstcw
into
xor
inc
sahf
pushf
dec
outsb
insb
xor
push
pop
mov
mov
nop
pop
decl
stc
cmp
hlt
leave
adc
or
pushf
sub
xor
data16
or
loop
xlat
mov
movsb
or
lock
mov
in
jge
les
push
sub
jl
push
adc
pop
test
or
or
dec
mov
adc
sub
into
mov
lcall
clc
inc
imul
aas
aam
or
scas
mov
xor
add
cmp
sbbb
imul
js
mov
ss
dec
int3
aas
leave
dec
cmp
inc
incb
mov
mov
jae
pop
xchg
xlat
add
xor
adc
ljmp
sbb
pop
lret
xorb
subb
or
addr16
imul
jo
out
lret
subb
test
insl
pop
jmp
inc
cmpsl
add
imul
sbb
mov
mov
shlb
aad
insl
stos
sub
cmpl
add
xchg
mov
jge
jmp
testb
out
int
imul
iret
cmp
mov
cmpsb
bound
inc
inc
shrb
stc
pop
mov
out
inc
cmp
je
mov
cmp
das
add
adc
pop
mov
cli
sub
mov
or
cmp
js
xor
mov
ljmp
cmp
xchg
sub
sbb
lcall
or
dec
aad
out
pop
xchg
shlb
std
orb
xor
out
adc
or
lahf
jne
clc
ret
jae
sub
in
mov
bound
js
aam
xchg
and
or
inc
sbb
stos
into
roll
cmc
fstpt
insb
insb
in
pop
sub
into
jns
imul
mov
mov
dec
mov
iret
stos
push
je
add
icebp
lret
xor
cmp
mov
repz
xchg
sub
cmp
test
pop
pop
in
fdivs
fstp
shll
dec
inc
xor
jecxz
or
jp
mov
lods
sti
xor
jnp
inc
ja
gs
inc
int3
rorl
adcb
lock
aaa
ja
cmpsb
inc
push
lods
xor
ja
mov
ljmp
dec
jbe
andl
sbb
loop
dec
ja
mov
adc
cmp
lds
and
push
test
jge
pop
data16
in
dec
scas
adc
popa
rorl
in
xor
nop
mov
or
jge
inc
or
adc
xor
sub
mov
pusha
leave
add
or
xchg
mov
mov
fwait
sbb
pop
dec
ficompl
add
cwtl
sbb
jmp
imul
cmc
jmp
paddusw
test
sub
fwait
lods
and
mov
and
les
mov
jmp
or
rolb
mov
sahf
fildl
mov
mov
das
push
mov
jmp
push
lret
cmp
mov
mov
add
jecxz
xlat
add
dec
xor
jg
mov
cmp
lods
pop
ss
bound
lea
jno
pop
in
pop
adc
mov
in
jl
jbe
fsubrs
dec
jle
inc
in
mov
test
push
addr16
mov
insb
test
push
mov
out
stos
xchg
rcrl
lret
into
pop
fs
clc
inc
aas
inc
dec
or
lret
fstps
xchg
cs
in
dec
or
leave
je
xchg
in
pop
xor
ss
sub
loopne
enter
mov
cld
xor
mov
push
aad
sahf
push
js
adc
faddl
pop
movsl
xor
rolb
imul
stos
call
push
adc
aaa
sub
lea
fs
jnp
out
xchg
push
scas
xchg
xchg
add
push
mov
loope
push
xchg
sahf
dec
cltd
mov
mov
jp
iret
pinsrw
test
rorb
sahf
jle
sbb
mov
inc
in
aas
and
jl
mov
xorb
xchg
mov
mov
add
push
and
data16
push
mov
jle
std
push
jmp
int3
js
mov
or
push
jge
mov
in
lret
bound
add
and
sti
outsl
loop
ss
stc
xor
outsb
cmp
inc
stos
sub
inc
add
xor
bswap
dec
push
aas
lahf
jno
pop
std
loop
dec
test
sti
jae
fs
jnp
test
jbe
in
pop
pop
and
aaa
movsb
mov
pop
dec
inc
pushf
sbbb
imul
jne
xchg
fisttpll
and
lcall
dec
pop
push
xchg
cmc
mov
lods
xchg
int
mov
ret
dec
and
inc
sbb
cltd
adcl
lret
sbbb
add
xorb
out
incb
test
mov
cmp
cld
jne
xlat
pop
icebp
leave
rolb
inc
xchg
mov
pusha
push
sbb
cmp
js
and
ss
cmp
je
jo
cmp
inc
cmp
int
cmp
lret
insl
jg
jbe
pop
jg
adc
scas
cmp
aas
jmp
push
mov
and
scas
sbb
push
pushf
cmp
push
xor
pusha
lods
fwait
loopne
cmp
and
aaa
sub
fs
jne
xchg
sub
out
mov
push
push
test
lock
subb
ds
lret
das
mulps
pop
pop
jns
jl
es
mov
out
or
lods
int3
xor
es
dec
sbb
test
mov
sub
pop
cli
movsl
das
out
mov
mov
mov
dec
pop
xor
or
mov
fmull
scas
testb
xchg
pshufw
dec
jmp
sub
sub
ljmp
pop
adc
imul
sub
icebp
fildl
mov
aam
cmpsb
xchg
fldcw
outsl
test
pusha
lcall
mov
xchg
out
out
mov
push
arpl
lret
outsb
xchg
rolb
cld
jb
fdivrs
dec
dec
or
test
jno
pop
dec
imul
loopne
xchg
and
mov
xor
test
mov
fldt
movsb
mov
xor
dec
std
movl
jo
aaa
cmp
pop
adcl
inc
pop
and
mov
jg
cwtl
push
pop
addr16
xor
pop
clc
imul
shlb
popa
mov
mov
lods
push
jg
mov
scas
repz
and
mov
decb
jl
push
das
sete
aam
ret
or
or
bound
inc
or
imul
or
test
and
call
idivl
cmc
and
negb
stc
dec
or
sub
sub
mov
sub
jmp
mov
jge
lds
outsl
sbb
rcrb
add
cmc
adc
mov
jmp
mov
mov
and
mov
mov
xchg
int
jae
xchg
daa
imul
into
xor
jmp
data16
call
add
gs
push
inc
cmp
jg
jno
push
ja
sbb
inc
fwait
popf
idivb
andb
loope
mov
shr
sub
mov
push
pop
mov
dec
or
lods
adc
pushf
js
sub
jmp
xchg
mov
mov
mov
jle
test
add
adc
cltd
cmp
outsl
mov
mov
das
lcall
dec
fcmovb
add
dec
lods
notb
and
call
push
pop
repnz
sbb
and
lret
std
mov
cwtl
sahf
ror
mov
xchg
jo
jno
out
or
ret
pop
xor
inc
mov
mov
rcrl
cmp
icebp
lods
sbbb
roll
dec
data16
pop
jne
test
int
inc
data16
xchg
sbb
out
cmpsb
stc
adc
stos
in
fldpi
sbb
push
jp
mov
jp
and
xchg
jno
mul
push
mov
cmp
sbb
sbbl
cld
jb
pop
pop
testb
push
cli
mov
pop
test
pop
add
aad
lds
and
in
out
outsb
pop
push
imul
js
jo,pn
add
push
push
jb
jb
push
adc
cmpsb
call
les
scas
cmp
mov
mov
mov
sbb
push
movntps
mov
cmpb
out
inc
nop
add
inc
jg
orl
or
int3
jne
movsb
add
sbb
mov
jecxz
jbe
insb
shll
jns
das
inc
jo
dec
push
and
xchg
jae
movsl
filds
xor
ror
push
inc
sbb
mov
jl
lahf
insl
or
and
adc
scas
xor
dec
rolb
nop
mov
out
jns
xor
lahf
enter
adc
ds
sub
out
sbb
jle
out
xlat
icebp
in
movsb
xlat
add
loop
clc
shll
repnz
insb
add
sti
fdiv
in
or
pop
xchg
mov
nop
pop
sbb
cmc
adc
sbb
in
adc
fcomps
mov
inc
test
and
and
mov
mov
mov
pusha
and
push
mov
int3
push
popa
jbe
imul
data16
add
jge
jmp
inc
fsub
jmp
test
mov
push
aad
push
adc
imul
sbb
shlb
insl
lea
adcl
sahf
shl
jmp
clc
cwtl
jmp
ret
ret
cmp
xchg
cwtl
loope
pushf
movsb
sbb
sbb
mov
mov
xchg
dec
into
dec
lcall
pop
mov
xchg
jmp
pushf
sub
loopne
in
hlt
dec
add
jnp
es
xchg
push
loopne
ja
ficoml
addr16
shll
insl
test
sbb
and
jg
cs
inc
xor
imul
jl
xchg
jp
loope
adc
sahf
adc
sbb
mov
fld
or
les
mov
in
mov
sbb
sbb
push
mov
sbbl
xor
mov
fwait
adc
hlt
sbb
fidivrs
movsb
ljmp
loop
or
leave
mov
mov
push
lahf
mov
mov
dec
sub
pop
or
sub
pop
test
das
out
test
in
mov
add
and
pop
imul
movsb
shr
movzwl
sarb
inc
insl
dec
jg
pop
push
sub
sbb
add
lock
jl
in
divps
fwait
inc
inc
mov
pop
dec
repz
idiv
movl
cld
push
insl
push
or
mov
mov
add
push
aam
xchg
aas
mov
daa
stos
in
fnstsw
cmpsl
adc
pop
pushf
mov
adc
repnz
lds
stos
aas
pop
adc
mov
ss
xchg
jmp
xchg
adc
dec
cmpl
sahf
insb
push
push
mov
sbb
fildl
fidivs
cmp
sub
bound
jb
mov
xor
ja
pop
pop
mov
ds
sti
xchg
shrb
dec
jecxz
fdivrs
add
jmp
mov
jmp
push
int
jg
mov
adc
nop
adc
popf
xchg
pop
icebp
imul
adc
mov
fadds
dec
mov
or
mov
insl
stos
aad
insl
dec
push
pop
and
push
bound
push
push
or
divb
inc
dec
xor
in
dec
xlat
jbe
push
push
mov
jg
push
push
push
repz
cmp
out
push
aas
test
push
xchg
scas
mov
js
cwtl
xchg
adc
mov
mov
adc
jnp
pop
sbb
mov
mov
in
into
inc
mov
mov
jmp
and
jne
stos
xchg
lea
adc
imul
enter
inc
lcall
jge
cmp
cmp
cmpxchg
mov
mov
mov
mov
enter
out
adc
insb
sti
cs
cmp
sbb
lds
add
insb
popf
fmul
mov
sub
push
or
ljmp
mov
mov
xchg
xor
and
fimuls
scas
mov
fidivrl
call
push
fimull
push
mov
mov
dec
icebp
cld
inc
mov
sbb
push
push
or
das
and
add
out
lea
int3
lods
or
xlat
pusha
in
xor
out
push
ja
mulb
test
cmpsl
lock
or
xor
pusha
push
aaa
scas
or
rcl
dec
cmp
cmp
imul
repz
xor
scas
sub
out
add
fdivrl
stc
loop
push
cwtl
ret
pop
cmc
sbb
push
repz
das
stos
rorl
divb
cmp
dec
repnz
sub
out
pop
xlat
aas
stos
sbb
lea
repnz
cmp
ss
std
les
or
jno
out
popa
rcll
xchg
add
fwait
callw
cmp
leave
scas
ficoml
mov
cli
jno
sbb
sub
js
addr16
je
and
lret
pop
jle
and
stc
and
mov
mov
adc
negl
std
jb
mov
and
aas
dec
xor
mov
cmp
sahf
pop
sub
daa
sub
mov
jbe
cmp
push
dec
xor
pop
dec
mov
mov
adc
clc
dec
mov
pop
mov
leave
loope
rclb
leave
cltd
std
insb
xchg
cld
ficoml
mov
push
mov
adc
test
test
movsb
call
xor
test
xchg
adc
loopne
sbb
popf
aas
icebp
xor
insb
jle
stc
xchg
jl
jb
xchg
jne
mov
orl
std
outsb
push
lahf
out
iret
bswap
gs
loopne
add
jo
scas
lods
sub
push
fimuls
push
pushf
imul
push
popf
out
jecxz
shrb
in
das
inc
xchg
jnp
outsb
stos
pop
stos
pop
inc
mov
jmp
pop
jae
cmp
in
add
nop
call
lea
add
xchg
adc
xorl
and
xchg
fmulp
inc
ret
movb
pusha
sub
fwait
push
pop
pop
sahf
pop
sub
adc
rcrl
jbe
cmp
stc
pushf
daa
pop
sbb
add
fiadds
adc
xchg
adc
push
jae
out
aam
icebp
sub
andb
jns
jns
mov
outsl
xchg
icebp
mov
jp
out
stc
das
rorb
out
cli
and
fisttpll
testl
push
pop
mov
push
add
mov
addb
sti
xlat
dec
mov
in
xchg
aam
cmp
js
ljmp
dec
or
xor
inc
fisttpll
inc
or
scas
pop
ret
mov
xchg
cld
sbb
sub
test
mov
repnz
pop
push
mov
test
pop
insb
insl
mov
pop
add
nop
gs
pop
arpl
mov
xor
popf
shll
std
movsl
movsl
sub
mov
cmp
dec
js
iret
and
popa
and
or
test
mov
adc
in
stos
or
dec
and
ficoms
mov
std
lcall
mov
lods
clc
mov
or
mov
and
test
cwtl
push
mov
stc
sub
push
push
scas
call
and
jge
jo
imul
vcvttpd2dq
ljmp
dec
je
mov
test
rcrb
sbbl
in
pop
in
mov
sbb
adc
mov
add
dec
sub
cld
mov
xchg
out
mov
adc
xchg
mov
ficompl
push
dec
pushf
and
xchg
dec
lcall
ja
mov
add
and
sbb
call
sbb
fildl
adc
jnp
insb
insb
push
sbb
hlt
and
sub
fiaddl
pop
mov
sub
pop
lock
xor
xor
in
adc
movsb
jns
into
hlt
out
mov
lret
jo
cli
or
xor
or
xorl
popf
dec
xchg
arpl
out
sbb
cwtl
cmp
outsl
lahf
lcall
or
jno
jnp
push
mov
pop
and
ret
outsl
mov
dec
mov
mov
shlb
popf
int
mov
xlat
ret
pop
dec
jmp
xor
pop
test
shl
fdivrs
push
or
stos
xchg
inc
cmpsl
out
xor
jb
addr16
push
dec
jne
mov
out
xor
xchg
pop
mov
rcrb
inc
push
xor
leave
xchg
cld
int
and
fsubrs
andb
sbb
cmpsb
mov
loope
or
in
dec
dec
test
icebp
stos
shll
jns
adc
fisubl
clc
sbb
lahf
dec
adc
lds
imul
outsb
cmp
dec
xor
pop
jle
xor
cmp
lods
loop
mov
and
mov
mov
jno
stc
aam
add
pop
scas
out
jnp
test
popf
xchg
jb
andb
push
pop
ljmp
inc
pop
test
pop
mov
adc
xchg
movsb
dec
xchg
mov
out
inc
jge
adc
adc
sbb
sarb
out
sbb
sub
jns
hlt
loopne
pop
xchg
or
fcoms
lock
xchg
cmpsb
pop
nop
cmp
aaa
daa
stos
cmp
xlat
xorb
mov
aad
pop
adc
lods
or
xor
fsubrl
pop
xchg
andl
idiv
xlat
xor
dec
aam
mov
andl
fdivrp
xchg
dec
mov
adc
sbb
lret
fadds
loope
lock
bound
sub
adc
jne
stos
aaa
jno
lahf
jge
shlb
test
clc
jecxz
mov
lods
shll
xor
jle
std
adc
outsl
dec
pop
add
push
jb
cld
jno
mov
aaa
dec
jne,pt
sbb
xchg
cwtl
lds
sub
sub
sub
int3
arpl
std
sub
mov
mov
fs
test
pop
mull
or
test
fdiv
jne
pushf
ret
push
mov
into
aas
ja
adc
mov
pushf
cmp
push
or
inc
sbb
sahf
pop
mov
gs
pop
add
addr16
hlt
inc
xchg
mov
mov
ja
adc
adc
jecxz
fnsave
das
out
push
pop
iret
and
jno
lea
jns
cld
aaa
icebp
in
sub
mov
lea
mov
cmp
push
dec
hlt
mov
cmc
push
ss
fs
ja
outsl
imul
es
jle
das
pop
das
mov
add
mulb
xchg
sbb
fcmovnu
xor
or
mov
stc
stc
mov
jg
lret
push
cwtl
scas
and
popf
push
lods
daa
push
rol
stc
imul
in
inc
jecxz
es
or
mov
and
pusha
adc
jno
xchg
icebp
and
cmpl
pop
mov
jmp
insl
inc
negl
and
xor
lds
in
inc
and
faddl
xchg
jae
add
test
push
test
mov
add
dec
call
testb
push
hlt
and
mov
std
in
imul
shlb
jb
cmc
pusha
pop
fstpl
push
cmpsl
adc
jne
add
hlt
jb
into
cmp
add
popa
pop
and
stc
xor
mov
mov
test
push
addr16
push
mov
mov
jne
or
fucom
sbb
push
cmp
sbb
mov
lods
or
test
inc
into
fnsave
fucomp
sub
push
fidivrs
xchg
insl
loop
jecxz
dec
jmp
aas
outsl
add
in
popf
add
aas
and
loop
sub
and
faddl
fbld
pop
jns
cmp
dec
clc
in
ffree
outsb
jle
add
stc
cmpsb
and
mov
aaa
das
mov
out
pusha
adc
stc
push
clc
arpl
repz
sub
and
fistpll
je
rcrb
cld
mov
aad
push
mov
xorb
mov
shrl
dec
push
xchg
movsb
sub
pushf
div
xchg
movsl
mov
fidivl
in
jmp
dec
inc
icebp
cmpsl
clc
sub
out
mov
cmc
test
cmc
add
adc
pop
outsl
fimull
mov
test
pop
or
in
xor
jg
push
test
add
xor
pop
dec
roll
cmp
mov
jnp
fldl
xor
lock
mov
iret
mov
arpl
lods
sub
dec
add
fiadds
scas
sbb
adc
out
movsl
fistpll
jle
inc
dec
add
jle
out
sub
in
or
mov
adc
sub
ficomps
repnz
dec
mov
loopne
mov
inc
ror
xor
js
cmpl
ret
jbe
outsb
sub
ds
cmpsl
jno
adc
cmp
mov
or
daa
daa
fld
out
push
movsl
mull
pushf
push
jle
xor
jmp
mov
or
xor
cld
mov
test
sbb
push
pop
jbe
xchg
mov
mov
lahf
lea
mov
dec
lea
movsb
in
enter
sub
cmpl
mov
hlt
outsl
out
test
and
ret
mov
cmpsb
xchg
insb
inc
dec
xor
aad
stc
mov
mov
outsl
int3
xchg
dec
lods
push
dec
mov
fstl
lea
jne
jo
das
mul
repnz
lods
mov
push
arpl
inc
sbb
jb
mov
xchg
cmc
add
sub
test
icebp
repnz
movsb
negl
sub
or
lods
push
cmp
test
cmc
pop
jno
inc
insb
jbe
and
ror
inc
lret
outsl
shrb
int
jns
shlb
jecxz
dec
sbb
outsb
shlb
jne
movsb
mov
pop
push
fisubrl
xchg
mov
bswap
dec
sub
pop
out
and
popf
adc
pop
adc
mov
push
mov
arpl
mov
test
adc
pop
xchg
out
sub
sub
and
cmp
int
xchg
shl
hlt
in
pop
fsubrp
jmp
push
add
ljmp
and
sub
xchg
dec
xor
xor
icebp
out
sbb
pop
mov
mov
mov
pop
call
test
int
jb
lods
jb
add
fwait
jbe
pop
test
popa
fnstsw
fistps
add
adc
mov
sub
or
xor
aaa
sub
jnp
adc
cmp
xchg
pop
popa
pop
pop
push
jbe
jp
scas
out
or
cmpsl
clc
cltd
fs
aad
fsubs
clc
mov
addr16
clc
sbb
aaa
add
adc
dec
mov
inc
ss
jle
popf
xchg
jg
and
mov
push
lods
test
movsb
jl
mov
cmp
int
lcall
cmp
xchg
out
xor
inc
xchg
pop
hlt
in
cmp
loope
mov
loop
movsb
xor
movsb
jbe
xor
mov
hlt
pop
mov
lods
fldcw
add
icebp
pop
fldenv
mov
mov
pcmpgtd
roll
mov
sbb
jge
in
call
or
test
add
test
hlt
lods
not
jl
inc
add
dec
mov
insb
and
or
addr16
sbb
cmpb
inc
and
cli
mov
rcrl
mov
xchg
and
mov
push
mov
mov
add
pop
cmc
push
xchg
adc
mov
mov
les
and
pop
cwtl
xor
lcall
lea
je
mov
arpl
jg
nop
jp
xchg
enter
sahf
sarb
stos
fcomps
pop
repnz
and
push
cmp
shlb
xlat
add
sbb
cld
lret
vunpcklps
imul
mov
bound
insl
mov
xchg
mov
dec
fldenv
xor
xchg
inc
mov
adc
jnp
nop
popa
lcall
loopne
lods
cmpsb
aas
push
fstpt
pop
movsb
push
push
frstor
adc
fwait
push
cmp
cmp
jecxz
cmp
fldl
adc
mov
jb
xor
pusha
nop
adc
insl
in
pop
mov
cli
aam
icebp
mov
xlat
ret
and
fnsave
leave
xchg
mov
enter
popf
sarl
rclb
mov
mov
mov
cmpb
mov
mov
test
dec
orl
jae
out
cld
mov
sbb
push
cmp
fs
xchg
mov
pop
cmc
arpl
ja
sub
mov
inc
lock
sbb
sub
jecxz
inc
mov
lahf
pop
stos
dec
and
nop
or
popa
adc
or
push
xchg
hlt
xor
lahf
mov
lret
ret
xchg
add
sub
jae
lcall
outsb
cmpb
pop
sbb
fs
fneni(8087
fldl
adc
jmp
jl
xor
incl
inc
pop
or
out
mov
rclb
push
mov
incl
xorl
int3
nop
add
out
ja
insb
fstpt
push
pop
daa
jecxz
mov
jecxz
fs
hlt
ja
jmp
fdivs
jno
rol
adc
jl
orb
test
jl
int3
stos
push
imul
xchg
in
loopne
rclb
sti
gs
mov
mov
imul
mov
xor
fisttpll
ss
push
jecxz
nop
xchg
lods
mov
aas
rol
mov
pop
test
repz
insl
mov
aaa
add
rcrb
adc
xor
jae
movb
stos
xchg
jbe
xor
scas
js
dec
mov
push
dec
push
std
mov
mov
stos
mov
fidivrs
sbb
movsb
leave
mov
fcmove
xchg
push
push
pop
push
outsb
mov
mov
jne
add
jb
cmp
pop
cmc
idivb
call
cltd
ret
mov
std
pop
aas
nop
lds
ss
or
lret
cmp
or
imul
adcl
xchg
mov
or
mov
cmpl
lods
arpl
lahf
scas
jecxz
fwait
sub
pop
fld1
pop
sbb
sbb
dec
dec
push
lahf
sarb
cmp
mov
pop
or
out
fildl
lret
or
ljmp
adc
ja
sbb
xor
insb
iret
fistps
in
pop
add
mov
adc
pop
shrb
movsl
or
pop
dec
arpl
arpl
call
cmp
adc
mov
pop
test
shlb
xor
xchg
sbb
lods
and
imul
lret
pop
jmp
stc
mov
mov
sbb
pop
mov
pop
int3
push
jb
hlt
cmp
pop
rorl
and
push
lahf
decb
xor
add
pop
out
pop
movsl
mov
cmp
push
popf
xor
and
imul
mov
cmp
xchg
scas
dec
popf
push
mov
stc
push
jbe
jne
mov
xor
faddl
ljmp
adc
jmp
scas
cltd
lahf
inc
test
ss
jmp
sbb
into
shl
mull
in
movsl
cltd
and
cmp
pop
xor
js
lahf
pop
and
dec
adc
mov
out
push
and
cmp
add
mov
std
jle
mov
in
mov
push
xchg
mov
shll
fisubrl
fisttpl
out
mov
popf
jmp
pushf
jns
mov
dec
sub
lcall
loopne
test
jne
je
sub
add
lock
cmc
add
inc
cmp
add
push
fsubp
sysret
jae
lds
and
pushf
fnsave
xchg
call
xchg
sub
jo
scas
inc
subb
sbb
mov
jecxz
pop
xchg
jl
xchg
mov
xor
pop
dec
mov
adc
dec
jne
imul
lea
das
sub
adc
and
outsl
and
xor
pop
fstl
in
in
push
data16
xlat
push
decl
outsl
adc
addr16
aaa
out
sbb
xchg
mov
ljmp
sub
insl
cmp
inc
sbbb
iret
aas
sub
pop
int
inc
sub
fdivrs
mov
in
mov
lock
pop
clc
stc
mov
sti
and
imul
es
sbb
xor
dec
repnz
xchg
div
cli
lock
mov
and
jno
ss
push
scas
jbe
daa
cltd
out
jg
adc
jle
dec
rclb
ds
fidivrl
jo
xchg
into
popf
or
pop
dec
popa
push
mov
test
arpl
jge
mov
push
sbb
mov
xchg
push
stc
xchg
popa
mov
adc
pop
loop
dec
movsl
test
dec
cmpsl
mov
sub
call
push
inc
mov
ljmp
fsubs
inc
xor
push
addr16
outsl
mov
sub
jmp
adc
mov
pop
dec
pop
fsubrl
push
jle
jo
add
adc
daa
ficompl
or
aam
pop
lcall
or
jmp
popl
push
mov
inc
adc
mov
push
out
jecxz
movsb
push
fwait
insb
hlt
stos
inc
icebp
orb
negb
push
and
fildll
cltd
jae
mov
jmp
out
push
add
sub
fstl
sbb
jg
push
cli
push
mov
pop
jno
sbb
push
lcall
fisttpl
jnp
mov
fstl
push
mov
push
out
sbb
dec
in
dec
stc
add
fs
cmp
bnd
jnp
jg
pop
push
dec
and
add
ja
mov
mov
xchg
cli
mov
repz
sub
cmpsb
and
gs
inc
int
pusha
out
xor
movsb
inc
test
mov
jecxz
cmp
dec
ss
out
mov
popa
jae
mov
insl
sbb
aad
negb
dec
cwtl
sbb
adc
jmp
dec
bound
lret
lcall
mov
push
sub
pop
pop
sti
imul
push
out
add
lods
or
js
in
xor
sub
arpl
cmp
rcll
mov
jns
and
clc
sbb
test
jno
push
jae
mov
lods
pop
scas
push
or
add
or
iret
out
rol
insb
test
inc
leave
mov
dec
pop
xlat
std
pop
push
xor
mov
insb
out
pop
imul
mov
cmp
jnp,pn
push
jmp
mov
insl
popa
cmpsb
ss
xchg
push
pop
movsb
adc
sub
movsb
in
sti
lahf
fstps
test
and
xlat
jbe
data16
mov
pushf
mov
add
lahf
pop
dec
out
orl
das
adc
add
add
adc
lcall
jbe
jl
cld
movsl
insb
mov
lds
inc
jno
int
pop
gs
or
outsb
data16
mov
andb
jb
pop
insl
xchg
lods
shrl
mov
xchg
test
mov
jne
adc
pushf
jns
insb
fsub
pop
xlat
inc
pop
loopne
sbb
ss
dec
in
sarb
jp
pop
jb
sti
popa
mov
cmc
shld
iret
iret
xlat
sub
push
and
jg
fs
into
imul
imul
in
rcrl
shrl
dec
test
test
pop
inc
mov
push
inc
in
sub
aad
lock
sub
imul
mov
out
subl
arpl
xchg
xor
fs
test
mov
mov
dec
or
pop
je
inc
bound
cmc
mov
xchg
adc
loop
add
inc
lock
lock
push
mov
icebp
xlat
cmp
mov
push
xchg
xor
loopne
loop
push
stos
js
lret
repz
push
add
cmpsl
imull
lahf
repnz
xchg
mov
loope
sub
vmwrite
push
cmpsl
sbb
shrl
cmp
adcl
push
sbb
rcrl
push
test
scas
in
or
sub
dec
daa
and
and
adc
icebp
outsl
push
push
iret
stc
jae
lahf
inc
sbb
sbb
std
les
popa
pop
ret
add
jae
arpl
add
pop
idivb
addb
repnz
scas
int3
jge
xchg
and
fstpt
and
mov
jns
inc
scas
pop
scas
push
imul
push
inc
in
push
xchg
mov
sbb
xchg
outsl
into
cmp
inc
or
arpl
mov
adc
xor
add
lcall
mov
sbb
dec
mov
mov
adc
orb
popf
clc
mov
out
lods
std
dec
xchg
stos
ljmp
inc
adc
jmp
rorl
mov
cmp
into
repz
xor
xchg
jmp
push
out
ljmp
or
add
icebp
shrb
mov
mov
loope
test
mov
push
movsl
insl
adc
test
inc
sbb
cmc
mov
pop
repz
fdivrl
movsl
xlat
jl
std
ljmp
add
sub
imul
out
cmp
in
enter
push
in
imul
enter
push
jns
stc
sub
scas
bound
push
fdivp
inc
cmp
sbb
xchg
loope
dec
inc
pop
ret
xchg
or
mov
or
mov
mov
inc
cmpsl
mov
scas
fucom
es
lods
fistps
jns
aas
add
adc
mov
adc
movsl
in
or
outsb
repnz
into
xor
shl
add
xchg
and
dec
push
or
fisttps
adc
sbb
sbb
sub
out
mov
popf
dec
push
dec
push
pop
fwait
cmpl
and
add
notb
jp
lods
mov
repz
sti
pusha
mov
shrb
pop
hlt
lock
pop
cmp
repnz
inc
les
sti
mov
add
inc
mov
xchg
mov
ljmp
cmp
xchg
push
lahf
pop
xchg
je
sub
mov
fnstsw
push
add
add
sbb
ja
lods
push
inc
dec
fsts
aam
arpl
and
mov
hlt
pop
add
adc
je
sbb
push
lcall
jmp
int
lock
inc
xchg
or
pop
and
inc
popa
movsl
mov
dec
in
clc
mov
and
aad
mov
xchg
mov
rcl
and
out
lcall
lods
roll
ss
mov
xchg
dec
mov
test
push
mov
mov
mov
sbb
and
jne
aas
push
adc
or
dec
int
clc
lods
dec
ret
dec
add
dec
or
cs
jno
imul
xchg
stos
adc
pop
movsb
and
xchg
xchg
push
add
sbb
fsubr
jp
push
jge
jecxz
sbb
pop
add
arpl
scas
imull
dec
js
fdivrp
fists
outsl
int
xchg
sbb
icebp
pop
mov
cltd
idivb
inc
icebp
mov
cmp
xlat
out
jbe
mov
mov
out
bnd
jne
adc
push
ljmp
fnstsw
dec
scas
pop
imul
fdivrl
sbbb
pop
jae
movsb
xlat
cmp
sbb
sarl
jl
imul
jle
jno
and
fisubl
inc
scas
mov
cmp
lahf
sub
stos
push
movsb
in
mov
shl
test
inc
and
mov
test
pop
inc
in
jno
mov
lock
loopne
mov
stc
dec
mov
and
jp
mov
jl
mov
pop
jecxz
add
cmpsl
push
dec
mov
es
jbe
nop
shrb
mov
mov
or
adc
cld
xlat
je
mov
adc
jo
cltd
sub
cmpsb
sub
lods
xchg
addl
push
cmp
dec
arpl
cmp
adc
dec
xor
into
pop
cmpsb
pop
push
adc
xchg
xor
mov
andb
xchg
nop
rcl
fs
jmp
std
pop
aas
sub
mov
pop
or
and
cmc
jns
rep
push
inc
lds
test
ss
out
jp
jb
test
adc
stos
inc
fwait
negb
mov
stos
dec
pop
rcrb
jle
or
test
loope
lods
xchg
cld
xor
cltd
add
lcall
imul
lret
pusha
mov
push
rcl
shl
test
out
add
aad
push
sub
and
fsubrp
in
rcl
dec
pop
push
sub
mov
xchg
inc
jecxz
filds
cmp
icebp
adc
arpl
divl
in
xor
and
add
rorl
pop
int
pusha
mov
sub
dec
aaa
mov
push
inc
stos
adcb
imul
mov
mov
loope
enter
in
dec
test
xor
sbb
push
aas
verr
fsubp
movsl
pushf
testb
pop
ljmp
inc
ds
cmp
lret
cld
std
and
pop
arpl
test
mov
jecxz
mov
das
hlt
jecxz
mov
stc
mov
mov
push
or
dec
push
sarl
pop
pusha
push
dec
xchg
stos
mov
cltd
jle
fwait
adc
xor
test
aam
iret
data16
imul
mov
mov
mov
sub
idivb
pop
insl
inc
in
sub
stc
test
data16
xor
lods
jmp
jle
add
cmp
dec
xor
sti
mov
mov
stc
push
popa
imul
paddq
shl
add
cmp
mov
dec
xor
cmp
sbb
sbb
push
pop
cmp
jg
lods
sub
sub
pusha
popf
sub
std
mov
ss
popf
jb
mov
cwtl
arpl
mov
cli
pop
and
imul
jp
cmc
fildl
jns
mov
fisubrs
call
xchg
sbbb
into
cli
jnp
movhps
test
push
ja
xor
rcrb
add
cltd
mov
push
test
aad
xor
pop
cmc
push
dec
mov
add
mov
mov
ljmp
cwtl
nop
xchg
add
jle
push
xchg
pusha
mov
jnp
in
xchg
pop
ljmp
lods
jmp
adc
push
outsl
pop
mov
mov
cmp
cmpsb
out
sbb
sahf
xor
pusha
bound
inc
jbe
loop
add
cmp
leave
popa
mov
enter
adc
in
or
test
in
dec
inc
stos
sbb
sub
sbb
and
enter
clc
dec
jg
jnp
aas
into
mov
or
dec
bound
pop
jb
cmpsb
adc
sbb
jp
bound
bound
mov
jl
dec
xor
pop
test
or
out
add
pop
push
dec
jmp
pop
ljmp
cmc
lods
lahf
int
lods
cld
mov
dec
ret
lods
or
adc
cmc
out
test
pushl
add
rorl
arpl
lret
mov
fimull
aas
jecxz
push
out
mov
pop
push
xchg
enter
lods
jns
out
sub
push
sarb
movsl
push
adc
into
jne
or
dec
inc
dec
pop
sbb
mov
mov
icebp
aaa
sahf
push
les
in
pushf
xchg
mov
push
inc
push
sbb
js
mov
lahf
mov
mov
and
adc
jmp
cmpsl
pop
sub
popa
movb
pop
sub
aaa
mov
push
mov
mov
sar
fisubs
test
jnp
dec
cmp
push
sub
mov
pop
inc
aas
push
pop
rorl
mov
ficoms
jb
add
xchg
xchg
mov
hlt
mov
pop
enter
mov
push
pop
dec
push
movsl
cmpsl
jb
sbb
adc
fsubl
lret
or
xor
push
mov
jno
add
inc
and
repz
fcmove
sti
loopne
sbb
lods
and
pop
cld
adc
sub
mov
outsl
lcall
add
jl
jl
pusha
fistpll
out
adc
imul
or
sbbb
ret
adc
jmp
daa
adc
arpl
cltd
inc
jle
out
add
popa
xor
stos
mov
mov
xchg
mov
adc
call
cmpsl
aaa
std
or
push
fwait
imul
cmp
jecxz
or
dec
int3
jge
jle
shl
push
js
and
mov
inc
and
adc
bound
push
or
test
pop
pop
adc
cmovg
jmp
xor
sbb
push
int3
jae
ljmp
jl
mov
fs
jb
sbb
jp
addl
mov
stc
movsl
push
push
mov
xor
out
cmp
stos
push
jb
jl
leave
scas
cmp
in
push
ret
daa
push
es
mov
jb
jno
outsl
jl
dec
mov
cltd
push
dec
cmp
mov
cmpsb
inc
int3
mov
daa
cmp
jmp
adc
push
push
adc
sub
insb
jecxz
pop
inc
outsl
inc
cmpsb
sub
jbe
stos
lods
or
clc
shrb
and
lods
adc
push
cmp
cld
testl
arpl
aaa
ror
xchg
inc
sub
js
stos
shrb
je
outsl
les
push
add
cmp
push
inc
stc
je
mov
mov
inc
adc
adc
inc
fs
xor
cmp
and
push
inc
mov
mov
sbb
scas
xchg
dec
mov
fcmovne
mov
daa
int
orl
push
cmp
mov
cmp
jns
aam
outsb
sbb
inc
das
cmp
sbb
ds
gs
aam
mov
js
test
adc
addb
sbb
mov
lret
out
cmp
movsb
sbb
movsl
sub
shll
add
aaa
sub
je
andl
cmpsb
ficompl
lods
or
lret
faddl
leave
lods
mov
pushf
jbe
adc
adc
pop
cmp
push
rolb
cld
add
fisttpl
sbb
jo
das
or
xchg
inc
mov
rcrb
arpl
fisttpl
sbb
loope
test
aaa
aaa
and
loopne
or
jns
xor
dec
movsl
inc
std
in
lret
mov
push
push
xchg
cld
pop
cs
sub
push
jns
fs
aaa
add
dec
std
loop
pop
mov
cld
add
leave
shll
cltd
scas
cmpsl
mov
pop
in
in
xchg
lcall
adc
fldl
movsb
dec
stos
clc
sub
mov
dec
sbbb
push
and
push
mov
xor
leave
mov
inc
xchg
adc
xlat
inc
lea
mov
adc
push
cmp
ljmp
in
push
pop
leave
ljmp
popf
mul
in
lret
rol
jns
and
dec
stos
out
cld
mov
or
push
xchg
jmp
repnz
pop
addb
pushf
mov
adcb
out
popf
in
xchg
push
add
adc
incl
testl
and
js
push
out
sbb
jo
jnp,pt
imul
jnp
sbb
jl
jbe
push
adc
mov
mov
out
cmc
mov
cmp
repnz
push
push
and
repnz
dec
daa
das
cli
cld
loop
call
sbbb
jmp
inc
mov
movsb
ds
leave
stc
pop
add
mov
pop
mov
xor
repz
adc
out
lea
les
cltd
int
je
data16
bound
mov
imul
insb
dec
mov
mov
ret
and
fisttpll
es
pushf
jl
jns
loope
mov
out
scas
sub
pusha
push
xor
int
rorb
jle
mov
mov
loope
aam
dec
imul
inc
subb
popf
xor
inc
insl
ljmp
dec
push
pop
mov
jo
fs
sub
xchg
ret
xor
mov
sub
push
mov
sbb
inc
cltd
call
mov
je
cmpsb
push
gs
sbb
push
addl
enter
not
pushf
hlt
xchg
test
mov
mov
and
mov
sbbl
rclb
inc
clc
movsb
cmpsl
xchg
mov
int3
rcrl
jmp
mov
inc
sbb
lock
andl
jns
pop
gs
xchg
jmp
fdivl
das
out
jmp
cmp
sbb
out
imul
repnz
outsb
stos
std
and
dec
xchg
mov
or
dec
cltd
jno
lds
mov
mov
xor
popf
in
fistpll
in
movsbl
fs
je
mov
mov
loope
mov
les
pop
xchg
adc
and
xor
imul
dec
arpl
in
sub
data16
jecxz
cmp
pusha
push
outsl
int
mov
push
addr16
in
add
xor
and
push
or
jge
loop
aaa
push
mov
and
lock
imul
test
mov
sub
inc
adc
and
push
jp
push
rcll
xor
cmpsl
ds
jb
mov
mov
mov
pop
sub
xchg
push
aaa
das
lock
cmp
inc
out
arpl
jl
inc
ja
ss
mov
ds
fisubrs
outsb
push
int3
in
push
sub
aad
dec
ja
scas
fcomps
sbb
and
outsl
imul
outsb
jns
popf
imul
xchg
int
rcr
xchg
mov
inc
jecxz
or
xchg
dec
sahf
ret
sbb
push
cmp
shrl
jns
add
jo
in
sbb
fstp
notl
dec
idivl
lahf
out
pop
enter
inc
in
rclb
sub
arpl
inc
mov
xchg
pop
xchg
rorl
sbb
and
push
cmp
lahf
cltd
rorb
inc
add
test
sub
pop
adc
in
push
call
pop
imul
and
adc
lahf
cmc
jmp
jo
pop
xchg
ret
lahf
sbb
pusha
lcall
add
subb
in
mov
loope
cli
fildl
imul
pop
aad
bound
pop
pop
outsl
cmp
add
lock
ficomps
in
and
jg
cwtl
xchg
mov
imul
pushf
loope
jle
jle
fwait
sbb
inc
cmp
xchg
cwtl
jmp
sbb
rorb
fnstenv
mov
jns
cmp
sbb
jg
mov
int3
sbb
pop
jo
push
lahf
ds
inc
in
jle
mov
lahf
lret
pop
inc
mov
lds
adc
dec
insb
mov
push
pop
add
popa
xchg
add
and
std
call
test
or
dec
push
sbb
mov
adc
push
in
xchg
insb
arpl
in
or
inc
sbb
push
es
sub
insl
mov
xlat
fists
repz
aam
sbb
pop
rcrb
inc
cmpsl
lods
mov
pop
xor
add
cmp
enterw
cs
mov
cmp
xlat
and
pop
test
iret
push
jge
or
aam
shr
lea
cli
add
int3
shlb
loopne
out
lds
enter
es
xchg
jo
mov
push
xor
push
and
fisttpll
xchg
mov
dec
int3
mov
je
cltd
aaa
mov
xchg
ffreep
xchg
loope
imul
mov
xchg
mov
mov
out
pop
addb
out
subb
mov
lods
sti
movsl
xlat
cld
pushf
xchg
push
mov
scas
cmp
mov
cld
jo
sub
xchg
add
sbb
leave
es
ljmp
jmp
scas
pop
dec
int3
scas
pushf
test
dec
add
daa
jp
pushl
inc
sbb
repz
pop
imul
adc
enter
je
cs
push
jbe
adc
xchg
cmc
mov
mov
in
pop
push
xor
aas
inc
rep
js
dec
test
addr16
jp
push
xchg
movb
scas
fstpt
sti
pop
inc
bswap
out
jmp
jns
jne
cmp
pop
mov
adc
lret
ja
mov
add
loope
ljmp
xchg
jnp
add
pop
fstps
xchg
cltd
mov
xchg
pushf
add
push
dec
into
or
rol
int3
or
sub
cmpsb
xor
je
push
cmp
fidivrl
mov
jl
xor
pop
or
lcall
lret
push
mov
jge
dec
ja
sbb
call
push
inc
pop
rorb
cs
sub
push
inc
rorb
les
mov
arpl
test
adc
push
cli
pop
cmp
out
in
popf
ss
test
in
gs
scas
sbb
das
inc
inc
dec
add
inc
popa
xchg
fstps
inc
adc
sbb
test
push
adc
call
mov
dec
cmp
add
mov
mov
mov
iret
and
hlt
shlb
sbb
mov
test
out
xchg
in
sbb
into
pop
dec
pop
push
and
pop
iret
push
movsb
xor
sbb
xor
jecxz
adc
pop
cmp
out
adc
out
mov
ror
cmp
push
push
pop
xchg
or
repz
xor
fcom
and
sbb
adc
xor
les
xchg
jae
inc
and
xor
mov
lret
and
scas
or
sar
inc
test
lods
test
xor
out
push
fdivl
ret
aam
iret
pop
scas
jge
rclb
lods
loop
sbb
adc
mov
push
pop
pop
enter
lret
daa
sti
pop
dec
andl
mov
arpl
fmul
mov
pop
popl
dec
dec
jne
out
xchg
add
aad
mov
daa
push
cmc
and
mov
shll
cli
adcb
sbb
sub
jg
jbe
leave
cmp
mov
leave
aas
mov
pop
cld
jae
stos
push
clc
xchg
sti
jmp
cli
mov
shll
mov
jl
mov
jl
dec
repz
jno
add
stos
ficoml
xor
add
cmp
inc
insl
pop
mov
mov
lds
pop
je
xor
and
jb
ret
dec
inc
xor
adc
mov
stos
in
ficompl
add
inc
sbb
pop
in
inc
mov
push
sub
jle
popf
sub
dec
and
adc
pop
rcrb
dec
or
gs
js
xlat
xor
leave
xchg
in
sub
fidivl
pop
pop
test
jb
adc
sbb
nopl
mov
in
sbb
roll
bound
fisttpl
inc
fldl
pusha
or
adc
jecxz
insb
mov
and
loop
mov
push
shll
inc
jne
aam
jmp
xchg
add
adc
push
add
divb
xchg
xor
adc
shl
add
mov
fstl
iret
pop
jno
outsl
mov
inc
mov
pushf
ss
jmp
mov
pushf
push
pushf
lea
fdivs
inc
jge
mov
jb
fstpt
in
cwtl
xor
xor
mov
cltd
aas
and
das
sbb
out
rcrb
std
sbb
sbb
mov
shr
test
pop
clc
mov
fcmovnu
pop
test
lcall
sbb
mov
xchg
int3
pop
mov
sbb
inc
ds
pop
sarb
mov
popf
fwait
cmpsb
cmc
out
lahf
popa
out
mov
mov
imul
adc
shl
sub
mov
jnp
cltd
sub
aad
push
xor
mov
push
loope
jmp
out
jno
movsl
or
fidivrs
leavew
sub
push
lcall
push
cmp
sbb
mov
icebp
vcvtpd2psx
enter
sub
sub
cmpsl
pop
icebp
sub
aad
sub
mov
subl
fdivs
and
add
inc
nop
mov
scas
aad
shll
fdivs
pop
incl
sarl
das
mov
js
pop
popa
inc
daa
aaa
cmp
push
and
stos
shl
lods
fsubr
loope
inc
pop
fs
outsb
imul
ds
stc
sarb
rcrb
cmp
cwtl
mov
in
mov
popf
ljmp
pop
add
dec
and
data16
mov
xchg
imul
in
out
in
dec
fidivrl
repnz
mov
leave
rcrl
cs
dec
dec
mov
sti
repnz
shrb
sbbl
sub
pmuludq
inc
dec
dec
mov
rclb
or
mov
xchg
xor
pop
inc
out
mov
shll
ficomps
adc
sub
and
jo
int
scas
in
sbb
and
dec
enter
test
arpl
mov
test
insl
lret
mov
negl
inc
fnsave
push
or
dec
sub
adc
mov
stos
mov
ja
das
js
push
or
lea
inc
pop
mov
dec
inc
jmp
out
add
mov
adc
repz
cli
arpl
pop
cmpsl
fdivrs
sub
pop
ret
xor
xchg
xchg
adcl
or
cmp
aaa
or
inc
into
repz
sbb
and
ss
out
push
jo
xchg
push
sbb
sub
les
mov
gs
adc
push
pop
push
jge
lds
pop
adcl
jecxz
aaa
sahf
mov
sub
pop
lock
cli
shl
mov
lret
mov
sub
mov
jae
popf
enter
adc
inc
clc
jmp
xchg
leave
pop
push
mov
mov
xchg
sbb
addr16
and
pushf
in
je
out
das
xorb
xlat
dec
arpl
les
sub
sbb
out
int3
pop
aaa
adc
cwtl
insb
notb
jns
iret
dec
push
gs
pusha
push
cmp
mov
inc
int3
add
dec
mov
movsl
mov
push
xor
jge
inc
ficomps
add
insl
mov
icebp
mov
pop
les
mov
adc
sbb
cmpsl
int
cmc
dec
movsl
push
jg
cmpsb
outsl
out
mov
sub
test
push
jne
mov
mov
popf
sub
loope
adc
addr16
aad
pop
xchg
xchg
fprem
lea
fsub
aad
sub
gs
dec
inc
or
or
leave
cmpb
ljmp
mov
repz
mov
xor
mov
rolb
sub
mov
xor
adc
jmp
shl
add
sar
mov
bound
push
lock
paddq
mov
cmpsl
sub
repnz
test
jge
adc
cmpsl
dec
lret
pop
xor
hlt
loopne
push
fsubrl
cmp
ret
or
jns
pop
xchg
push
jg
inc
push
cmpsl
mov
xchg
nop
pop
cmp
rclb
or
and
sub
pop
pop
imul
xchg
aad
push
inc
push
mov
pusha
stos
mov
jl
pop
lods
mov
cmc
push
pop
call
cmc
addb
ret
sbb
jg
sbb
jmp
insb
imul
pop
out
cmp
push
xchg
jne
adc
aad
mov
dec
pop
or
mov
cmp
outsl
lcall
cmpsb
fstps
rcrb
fildll
lret
insl
dec
out
sbbb
movsl
mov
fucom
out
bound
enter
mov
push
mov
fbld
jmp
push
and
movsl
push
ljmp
sbb
mov
sub
lret
dec
popa
mov
pop
mov
lods
sarl
pusha
push
adc
out
xor
xor
addr16
mov
lock
mov
sub
out
mov
push
mov
addr16
test
xor
aaa
fwait
pop
pop
int3
aaa
aam
imul
xor
loop
mov
movsb
stos
frstor
jg
inc
insl
inc
xor
sub
xchg
pushf
mov
inc
mov
inc
jbe
and
lds
js
and
test
or
mov
int3
insb
xor
leave
fnstcw
jge
mov
in
andl
mov
js
mov
sbb
add
pop
mov
lods
jmp
add
pusha
rcll
xor
xchg
test
pop
andl
dec
call
adc
mov
or
push
nop
fldt
rcrb
movsl
xchg
mov
adcb
cmpsb
push
loop
mov
dec
repnz
dec
mov
or
fs
jmp
in
sub
loope
ja
inc
enter
ret
add
adc
fnsave
and
stos
std
adc
mov
idivl
sub
ss
in
pop
scas
inc
clc
add
int
cmc
loopne
cld
sbb
mov
sbb
in
cli
dec
fistps
push
imul
mov
stos
cvtdq2ps
cmp
and
adc
out
out
adc
jecxz
mov
push
jp
jle
pop
pop
cmp
sarb
mov
sub
mov
cmp
sbb
inc
fsubl
leave
test
dec
pop
push
aad
mov
sbb
cld
test
daa
sahf
xor
dec
iret
mov
mov
test
dec
push
pushf
jb
xchg
sbb
cmc
test
add
ficompl
in
dec
mov
jb
xchg
leave
loopne
and
xchg
fst
add
in
mov
push
sub
mov
test
mov
pop
inc
jnp
xchg
adc
dec
sahf
add
sub
mov
jbe
lret
dec
dec
iret
mov
xor
mov
in
add
dec
call
js
mov
and
push
fistpl
push
or
push
sub
or
iret
cmpsl
cmpsb
pushf
inc
inc
rclb
ja
imul
bound
icebp
ss
gs
pop
dec
fidivrl
popa
xchg
push
clc
mov
xor
ret
jp
push
ret
adc
pushf
push
push
loopne
xor
clc
je
sti
cmp
lods
filds
icebp
mov
imul
in
jne
cmpsl
and
cli
cmc
popf
cmp
int3
rclb
xchg
mov
repnz
sti
pop
cmp
imul
cmp
stos
cmp
iret
push
xor
test
mov
loope
mov
xor
popa
pop
jecxz
rcrl
das
xor
adc
cmp
jp
imull
inc
push
fstps
jle
xchg
mov
mov
mov
mov
sub
aad
sar
jae
mov
adc
int
mov
call
cld
test
fstps
fstpt
das
add
ds
rorl
cs
xor
stc
jge
or
jbe
xlat
sub
cmpsb
xchg
aas
mov
push
shll
insl
out
loop
push
sbb
xor
and
push
mov
popa
cmp
leave
inc
fwait
xchg
stc
mov
insb
out
daa
jp
add
and
mov
movntps
mov
cmp
cmc
mov
lods
cmp
call
cmpsl
fs
dec
sub
xchg
push
fwait
adc
inc
jae
adc
imull
mov
paddsb
xorb
std
lea
in
movsb
or
inc
aas
int3
int
mov
imul
or
enter
rcrb
sub
jmp
frstor
not
lret
dec
xchg
in
xor
mov
add
ss
xlat
cmp
xchg
imul
add
xor
mov
pop
jne
out
add
mov
inc
ret
popa
mov
cmpsb
jecxz
loope
aas
dec
pop
cmp
std
adc
cmp
sbb
mov
test
loop
aam
push
div
addr16
jle
pop
dec
insl
adc
xchg
test
shll
xchg
pop
sbb
mov
and
loopne
inc
bswap
sysret
mov
push
lods
pop
mov
pop
fisubs
fwait
aaa
cmc
pop
inc
out
js
cmp
std
and
push
leavew
pushf
mov
dec
xchg
push
adc
sub
add
popf
insb
push
dec
aam
cmp
jbe
cmc
test
movsb
fwait
bound
stos
inc
cmp
mov
fsubs
decb
loope
sbb
out
cmpsl
add
fdiv
les
inc
scas
adc
sbb
inc
imul
fnstenv
fstl
sbb
sbb
pushf
pop
gs
jle
movsl
outsl
jns
xor
jge
and
xor
push
scas
xchg
sbb
fidivl
inc
mov
cmp
nop
adcb
add
push
in
dec
mov
jns
daa
das
inc
mov
cld
sahf
jge
inc
dec
and
adc
repnz
dec
loope
outsb
shrb
adc
test
sahf
aam
in
lcall
cmp
pop
add
pop
out
inc
mov
or
dec
testb
sahf
xorl
out
mov
sbb
je
pop
cmp
cmc
lods
or
xchg
mov
lods
xor
jle
jns
jle
cmp
dec
scas
add
or
es
test
sub
sbb
fs
scas
adc
rcl
mov
push
outsb
mov
test
lods
lret
sbb
cmp
adc
aaa
rclb
addr16
add
sbb
movsb
add
sbb
out
call
mov
adc
int
jns
stos
add
xor
mov
pop
fstps
add
scas
int3
sub
dec
jno
rcpps
or
xchg
decl
inc
pop
lea
hlt
and
xor
popf
push
or
loop
aaa
movsb
sbb
out
mov
loopne
dec
cmp
or
and
scas
test
leave
sbb
inc
out
movl
jns
sub
test
push
push
push
dec
outsb
xchg
sbb
and
fisttpl
mov
mov
popa
mov
into
out
lcall
test
jmp
mov
mov
jae
mov
in
mov
inc
cmpsl
and
mov
in
jbe
cmp
jl
jnp
and
insl
negl
jbe
mov
loopne
xchg
lret
xor
hlt
lods
int3
data16
shlb
fbstp
arpl
cld
mov
icebp
or
ja
xchg
add
jns
pop
mov
int3
daa
jb
lret
sbb
loopne
lret
mov
pusha
adc
stc
insl
sub
jl
movsb
sub
mov
inc
int3
sbb
cli
xor
pop
adc
mov
mov
es
dec
mov
enter
jne
stos
fucomi
add
dec
pop
es
and
and
daa
adc
adc
xchg
adc
andl
add
mov
inc
mov
stos
in
mov
mov
clc
enter
and
lods
test
cmp
mov
mov
mov
xchg
fwait
or
xchg
lret
mov
add
jl
jnp
dec
dec
mov
inc
or
sub
ss
dec
addr16
int3
xchg
loopne
xchg
or
outsl
mov
pop
mov
leave
push
flds
mov
pop
push
mov
clc
insb
fbld
add
mov
xor
data16
rcrb
xor
or
adc
into
and
pop
aaa
mov
pop
lea
mov
jb
push
mov
jmp
push
xchg
shrb
sbb
popf
pop
mov
arpl
out
je
mov
and
mov
in
push
inc
mov
aad
out
pushf
call
sbb
in
int
add
sub
mov
and
movsl
shlb
pop
into
cwtl
lret
fnstenv
mov
pushf
add
xor
lahf
xlat
sarb
out
in
fwait
popf
and
or
cmp
mov
pop
mov
iret
mov
fsubs
rcl
jns
in
inc
sbb
imul
push
push
push
and
mov
lods
and
jmp
out
jns
sahf
pop
mov
icebp
xorb
push
cwtl
xchg
mov
dec
into
pop
add
cs
inc
es
push
lret
pop
xor
adc
bound
xor
mov
rcrl
push
cmc
clc
popa
ficompl
sbb
push
pop
into
loope
cmp
xchg
out
aas
xchg
int3
jno
pop
daa
imul
cltd
outsl
repnz
andb
xor
pop
xchg
jae
or
add
repnz
mov
inc
adc
aas
out
inc
aam
imul
mov
and
pop
out
add
movsb
adc
ja
aad
mov
push
adc
ja
pop
xlat
loope
test
add
insl
stc
xor
xlat
or
imul
inc
xchg
loope
and
xchg
ficoms
ret
lret
aaa
fcoml
dec
arpl
push
and
in
inc
repz
mov
lret
mov
mov
rcrb
mov
xchg
btr
popf
sbb
outsl
xchg
test
dec
dec
sbb
adc
pop
jns
andb
cmp
ljmp
xor
jb
out
scas
xchg
jle
adc
ret
popf
adc
es
xor
rcrl
in
adc
repnz
pop
in
imul
cmp
or
in
inc
fdiv
ret
or
push
add
inc
mov
inc
daa
xor
or
inc
popf
dec
loope
sub
pop
jno
sbb
mov
and
and
add
jae
les
out
xchg
jle
out
cmp
add
or
stos
out
repz
jmp
sub
push
aaa
mov
mulb
add
sbb
xor
aad
pop
lret
add
das
sub
shll
xchg
ss
or
cmpsb
sub
movsl
jecxz
xchg
sub
push
bound
jbe
rcll
pop
mov
mov
shlb
mov
lahf
cli
out
mov
scas
dec
xchg
push
sbb
push
jl
fnsave
popa
or
cmc
inc
xchg
sbb
fldl
hlt
cmpsb
and
push
adc
bound
xor
shrl
je
sarb
aas
lcall
xchg
sbb
sahf
ljmp
push
cli
subb
mov
clc
jb
pop
or
dec
push
pushf
and
test
sub
jmp
sar
out
inc
pop
dec
and
in
jge
ret
cmp
pop
mov
leave
in
ds
adc
inc
jb
mov
push
jbe
daa
int3
jo
mov
and
sbb
aam
jl
inc
pushf
jecxz
ficoms
fisubs
das
test
nop
es
cltd
inc
mov
add
xchg
cmp
xchg
imul
or
xchg
outsb
xor
dec
mov
int3
dec
jle
inc
cmp
dec
sbb
push
inc
mov
int
or
or
repz
and
ret
loopne
and
es
call
mov
add
pop
push
pop
js
stos
dec
mov
sub
sub
sbb
js
mov
sahf
mov
popf
aad
rclb
popa
fsubrl
xor
mov
icebp
sbb
clc
lods
cmp
cli
lods
into
add
push
nop
imul
js
add
or
and
les
aam
mov
jno
jl
pushf
jmp
add
mulb
fstps
lret
sbb
and
scas
add
pop
mov
jge
pop
pop
addr16
jae
scas
cwtl
mov
mov
jle
pusha
jge
mov
lock
mov
rcl
aam
push
rolb
sub
sub
push
adc
adc
mov
mov
rcrb
sbb
lods
jno
shlb
pop
xchg
mov
dec
xor
nop
imul
sub
das
inc
aaa
mov
mov
pop
test
push
mov
fwait
mov
mov
mov
ja
lds
xchg
add
xor
inc
jns
out
xor
rorl
cmp
cli
or
cmpsb
adc
cmpsb
pop
mov
pop
mov
dec
je
subb
jo
imul
arpl
jno
or
dec
xorb
rolb
push
adc
int3
jge
ret
fistl
cmc
sub
push
adc
arpl
int
push
mov
les
arpl
adc
mov
mov
xor
lret
and
ret
cmc
jmp
inc
push
sub
sub
push
inc
bound
rclb
dec
jnp
jmp
ficoml
pop
ret
jl
cmp
inc
dec
push
aam
cs
es
jno
jle
push
je
movsl
cmp
shlb
pop
push
rolb
xchg
lds
mov
fldt
and
dec
dec
mov
jno
aad
idivb
mov
cmpsb
sbb
popf
pop
stos
arpl
sub
adc
rorl
hlt
shrb
sub
pop
inc
loop
sbb
push
cmpb
fwait
jne
das
pop
fadd
lret
icebp
jns
mov
popa
aaa
std
mov
cli
push
sbb
push
sub
mov
hlt
sub
test
fsqrt
stos
dec
mov
cmp
sbb
sbb
stos
insl
idivl
stos
mov
movsb
mov
push
sub
push
mov
dec
pusha
enter
mov
fstl
jp
dec
in
jl
movsl
jnp
jge
xchg
jl
sbb
ljmp
sti
repz
sarb
js
cmp
xor
mulb
xor
jno
stos
inc
mov
sub
lahf
movb
push
xlat
mov
repz
xor
adcl
sub
mov
int
aaa
mov
call
push
jg
faddp
sbb
imul
jbe
or
insb
or
push
movsl
aad
test
mov
ss
mov
leave
pop
pop
or
add
and
sub
loope
movsl
ja
dec
mov
idivl
ret
in
jbe,pt
jne
dec
jmp
rclb
aaa
mov
mov
nop
mov
sub
push
jge
inc
xchg
cltd
nop
cltd
cmpsb
clc
aam
lahf
roll
sub
xchg
adc
les
xor
imul
xchg
jmp
dec
movsl
sbb
mov
ret
pop
jno
icebp
xchg
mov
nop
push
lods
lods
rcrl
inc
xor
jno
adc
mov
mov
aaa
xchg
faddl
pop
mov
test
das
in
and
xchg
pop
rol
aas
adc
addr16
and
lret
sub
repz
sbb
sti
xor
mov
pop
inc
cmp
imull
cmp
repz
lahf
call
xchg
mov
orl
adc
notb
mov
lret
and
mov
mov
gs
das
inc
push
dec
test
popa
movl
into
call
repz
mov
and
out
je
dec
ucomiss
jb
shll
in
movsb
iret
je
ss
add
jge
sbb
pushl
roll
arpl
cmpsb
popf
lods
pop
or
adc
pop
mov
xor
sbb
test
test
mov
jne
bound
mov
rolb
dec
roll
stos
insb
jno
cmpsb
push
add
test
cwtl
push
or
js
or
xor
adc
push
dec
nopl
jne
cmp
push
inc
outsb
nop
lods
out
and
push
stos
xchg
push
aas
popa
mov
jns
fildl
js
lcall
mov
out
and
cmp
jle
mov
shld
or
iret
dec
or
inc
pop
and
dec
lret
push
xchg
cltd
and
mov
sub
push
test
jne
mov
inc
popf
jns
mov
sbb
mov
push
mov
out
addr16
outsb
jmp
mov
inc
dec
inc
cltd
and
xchg
lds
sbb
out
cmpsl
ljmp
loope
jbe
dec
jne
sub
jmp
movsl
and
cmpsl
inc
jo
fiadds
sub
xchg
adc
test
sarl
cmp
mov
mov
add
mov
sbb
xchg
adc
icebp
js
sbb
push
mov
xchg
jg
testl
daa
mov
mov
and
dec
scas
iret
sbb
sbb
xchg
mov
inc
add
pop
or
int3
or
call
pop
cmpsb
cld
adc
pop
scas
repnz
les
push
inc
shl
adc
pop
mov
adc
add
cmp
mov
imul
jmp
movsl
stos
fiadds
dec
lock
cs
adc
xor
mov
aas
in
pop
fadd
or
pop
jb
daa
pop
add
filds
aaa
add
push
leave
inc
fisubrs
decl
cs
adc
sub
into
stos
scas
cmpsb
lea
arpl
outsl
mov
and
outsl
shrl
clc
add
push
or
or
adc
dec
cld
xor
push
inc
or
shll
ds
mov
pop
into
in
incb
ja
int3
rolb
inc
and
push
rcrb
das
js
outsl
lods
mov
mov
sbb
icebp
push
mov
ljmp
lret
jmp
and
into
jl
jb
sarl
pop
sbb
pop
dec
sbb
mov
lcall
push
div
lods
daa
inc
popf
icebp
scas
dec
insl
sub
sbb
negl
in
les
mov
lret
sbb
push
sub
les
fbstp
sub
or
mov
pop
repz
xlat
dec
addr16
mov
mov
dec
cmp
mov
or
cmc
push
lods
mov
call
xor
insb
call
mov
mov
adc
popa
cld
fcmovnbe
clc
mov
in
insl
or
add
pusha
xor
mov
push
es
out
xchg
test
pop
ret
mov
cli
add
inc
nop
rcll
push
aaa
jmp
cmp
jno
out
pop
xor
sub
add
sub
and
cs
sub
lahf
mov
mov
or
cli
push
xor
jb
idiv
jge
lahf
inc
pop
lret
sbb
dec
gs
lods
mov
scas
xchg
sub
jo
xchg
div
ret
and
adc
adc
add
mulb
mov
leave
push
pushf
inc
push
mov
mov
xchg
cmpsb
stos
fwait
repnz
xchg
sbb
push
inc
sub
scas
dec
or
mov
popf
dec
int3
adc
aad
dec
mov
insl
in
out
mov
ljmp
mov
into
sbb
pop
xor
gs
cmpb
fldcw
mov
mov
ret
je
mov
or
mov
xor
out
sub
mulb
mov
pop
lds
sbb
nop
xor
mov
sti
or
or
and
aaa
fisubrl
mov
xor
sbb
and
jno
mov
jno
xchg
sbb
jo
adc
out
xor
push
stos
xchg
mov
and
rcll
dec
cmp
into
test
in
js
mov
or
and
or
shlb
js
dec
push
xchg
data16
popf
and
ret
clc
mov
les
call
push
call
adc
mov
jg
out
and
test
aas
sarl
leave
xchg
out
push
add
bound
add
bound
sbb
call
cmc
ljmp
inc
push
jno
mov
and
lea
push
lock
out
js
dec
movsl
pop
popf
pop
sarb
cmp
lahf
fisttpll
sahf
push
je
das
fpatan
pop
pop
aaa
pushf
sub
dec
es
stc
add
add
push
sbb
dec
push
push
or
sbb
inc
std
adc
adc
lahf
mov
and
int3
jmp
add
enter
jmp
or
jecxz
in
call
sti
cmpsb
mov
mov
mov
aaa
push
jle
lods
xor
cmp
pop
push
out
movsb
clc
ficoml
scas
sub
fisubs
popa
lods
idiv
cmpsl
adc
mov
aaa
repz
lock
repnz
int3
sbb
sub
inc
xchg
loop
ljmp
xchg
mov
sub
pushf
es
orl
cmp
in
ss
inc
ret
imul
cmc
pop
not
mov
in
mov
jae
mov
lret
loop
push
mov
jecxz
popf
rcrb
xchg
and
mov
add
cld
insb
inc
xchg
int3
fs
js
mov
int
cli
leave
jecxz
push
push
int3
xchg
int3
pop
jl
jbe
xchg
mov
adc
pusha
outsl
mov
in
lret
lcall
inc
les
dec
insb
mov
xor
adc
dec
cmc
cmp
cmpsl
lret
jno
dec
jge
lods
mov
cltd
xchg
pop
dec
xor
icebp
push
stos
cwtl
incb
pop
aam
shlb
dec
fwait
add
push
jbe
stc
jnp
cmpl
dec
xchg
jl
out
repz
xor
xchg
stc
or
push
rcll
incl
fwait
xchg
lcall
pop
mov
xchg
xor
mov
push
mov
adc
pop
aad
add
lods
jne
inc
orb
repnz
pop
cli
daa
fnstenv
negb
test
add
lahf
lcall
les
shll
in
pop
hlt
xor
jge
out
push
fstpl
scas
les
sbb
sbb
or
and
out
push
scas
clc
xor
push
pop
lods
or
and
lods
cmp
mov
movsb
pop
imulb
addr16
das
fmul
pop
pop
mov
popf
inc
repz
mov
dec
cmpsb
mov
icebp
and
dec
xchg
dec
cld
jecxz
scas
push
xlat
pop
add
push
outsb
repnz
jae
mov
mov
cli
iret
rorl
sub
sbb
movsl
fstps
shl
push
mov
test
dec
dec
xchg
mov
cmc
mov
dec
inc
cli
mov
dec
and
lods
inc
bt
xor
dec
dec
test
pusha
xchg
push
jmp
pushf
jl
scas
stos
outsl
lcall
xchg
sbbb
cmpsb
sbb
das
mov
xor
sub
sbb
sub
push
int
out
xorl
aas
pusha
fcomps
ret
sub
inc
cmp
fildll
subb
in
sub
push
dec
cwtl
pop
or
mov
and
sub
adc
fcoms
iret
or
xchg
stos
sbb
xchg
jp
xchg
fldl
inc
dec
popa
dec
scas
inc
mov
lods
jns
fmull
lret
jl
popf
insl
adc
iret
fdivrl
in
mov
sbb
sbb
xlat
or
sti
repnz
mov
cli
in
xor
xchg
lods
in
xchg
lea
jmp
or
adc
adc
outsb
cmpsb
les
repz
sub
in
jg
sbb
call
in
aad
fsts
sub
repnz
dec
and
or
inc
ja
mov
ds
scas
mov
dec
js
popf
mov
cmc
iret
pop
pusha
cs
fdivl
cmpsl
pusha
dec
push
adc
test
mov
cmp
outsl
mov
test
mov
adc
jmp
dec
sbb
or
loop
pushl
das
push
jl
inc
scas
outsl
mov
fstpt
mov
cmpsb
sbb
jecxz
sub
cmp
jmp
fbld
adc
xlat
inc
fisubrs
pop
call
lcall
inc
cmpsl
insb
and
arpl
and
cmp
fprem
fs
data16
mov
jp
arpl
fmull
jecxz
fucomi
mov
xor
xor
loope
push
sub
iret
cmpsb
nop
addr16
in
jae
aas
stos
mov
lcall
lock
jmp
add
test
and
test
ror
cmc
bound
dec
mov
mov
pop
test
sbb
arpl
aad
dec
pop
aaa
lcall
sub
adc
push
inc
jle
imulb
pop
add
inc
xor
jge
loop
jp
xchg
fnstsw
sub
fldcw
cmp
inc
lret
hlt
movsl
jb
call
jge
or
ss
jne
push
push
pop
sbb
in
pop
clc
inc
pushl
and
mov
hlt
in
sti
pop
imul
cmc
xor
mov
jb
jecxz
in
mov
scas
stos
add
xor
push
dec
xchg
xor
test
jns
adc
xor
xchg
or
popa
in
fmuls
push
pop
and
inc
dec
dec
ret
cmp
cmc
adc
mov
repz
jg
inc
cli
xchg
mov
in
xor
or
shlb
mov
sti
jp
ja
add
mov
fstpl
jg
nop
test
xchg
mov
stos
addr16
sahf
adc
inc
mov
cmpsb
dec
movsb
mov
ret
std
iret
pusha
and
fcmove
mov
xlat
mov
clc
mov
test
in
dec
subl
mov
mov
into
mov
mov
repz
es
sbb
xorb
pop
dec
cld
sti
test
inc
push
sbb
and
xchg
int
subl
out
mov
push
negl
dec
loope
int
push
xor
jae
leave
stos
loop
jl
sbb
adc
mov
jl
mov
push
xor
ret
movsl
xlat
mov
ss
insb
push
add
out
das
push
mov
call
jl
andl
or
mov
repz
jle
and
jb
fwait
add
aam
pop
dec
mov
aas
lods
clc
scas
pop
push
loope
data16
aas
in
xchg
xchg
ret
jbe
jle
mov
mov
mov
inc
inc
bnd
xor
enter
in
stos
out
pop
xor
repnz
or
aad
or
push
xor
and
add
mov
nop
and
arpl
ret
add
inc
outsl
ror
fdiv
mov
fiadds
xor
or
mov
ss
add
adc
xor
stos
cmpsb
pop
jns
add
sahf
icebp
js
movsb
sbb
rclb
xor
lahf
test
and
dec
push
jo
dec
stos
cmp
repnz
outsl
sub
rcll
lcall
or
fwait
sbb
ficoms
inc
js
mov
dec
into
and
push
ljmp
jnp
aaa
push
push
push
adc
push
mov
push
or
lds
sbb
add
sar
push
aad
pushw
jge
loop
jne
repz
or
pop
xchg
lds
in
cmc
addr16
aad
rol
sbb
mov
pushf
pop
les
jnp
in
cmp
cmp
dec
bound
add
push
sub
mov
data16
mov
pop
xchg
pop
pop
or
loope
push
xchg
aas
mov
popf
mov
push
arpl
enter
stc
std
xchg
xchg
sti
inc
and
jle
xchg
pop
dec
mov
xchg
or
add
hlt
popa
mov
aas
out
mov
or
jp
stos
cltd
fwait
mov
jp
cmp
adc
fwait
std
out
in
push
out
mov
sarb
std
or
add
scas
add
cwtl
xor
lods
ss
addr16
sbb
out
fs
sub
sarb
mov
divl
sub
insl
pop
xor
mov
xchg
pop
xchg
mov
icebp
mov
in
dec
in
xchg
in
xchg
icebp
outsb
push
stos
ds
sub
mov
sub
mov
and
jnp
addr16
fmuls
fmuls
fwait
movsb
adc
push
imulb
mov
imul
cmpsl
test
js
pop
pop
enter
fmull
and
aaa
jge
fsubl
mov
push
xchg
mov
repz
add
xlat
xchg
pop
dec
sbb
hlt
mov
sbb
out
int3
std
shlb
jg
mov
negb
adc
jp
mov
loop
ja
or
mov
test
out
sub
arpl
inc
mov
pop
jbe
std
repz
cli
fmulp
dec
add
mov
popa
cmp
xor
adc
sub
lock
insl
sbb
pusha
insl
and
dec
pop
push
inc
pusha
ficoml
outsb
cld
fdivrs
cmp
xchg
mov
xor
outsb
call
out
inc
hlt
addl
mov
xchg
xchg
cs
data16
sub
xchg
fcoms
pop
or
jno
add
lea
out
mov
bound
test
aas
mov
push
lods
jne
mov
pop
push
cwtl
sub
ds
cmc
iret
mov
stos
dec
std
and
dec
mov
add
aaa
lea
mov
sub
jecxz
or
or
mov
sbb
cmpl
cmp
pop
mov
fmul
jle
xor
jg
sarb
iret
mov
sarl
push
jmp
popf
mov
xor
sub
andb
fsubs
pop
dec
in
xchg
test
test
cmp
push
push
add
jp
jo
jecxz
mov
in
aam
cld
jmp
xor
lcall
ficoml
mov
ror
push
js
jge
pop
repz
cld
cmp
jb
cli
sub
sti
cmpsb
mov
jmp
subb
loopne
jecxz
dec
inc
shll
push
mov
xchg
jne
dec
mov
cmpsl
in
lds
mov
pop
or
pop
mov
or
pop
push
sbb
js
xlat
das
push
fucomi
pop
popa
call
lret
sub
scas
dec
xchg
mov
fstps
or
or
fwait
inc
xlat
insb
xor
cmp
icebp
jbe
mov
fcoms
and
adcb
aaa
ret
mov
push
mov
ds
pop
xor
sub
xchg
xor
pop
push
imul
add
jmp
xchg
loopne
testl
push
push
sarb
inc
scas
cmp
push
pop
xchg
adc
sbbl
daa
divl
push
sbb
adc
or
adc
fbld
mov
mov
icebp
insl
shrb
dec
out
xor
ret
push
leave
insl
mov
push
popa
inc
popf
and
push
rclb
fwait
int
cmp
leave
inc
xchg
add
pop
bnd
dec
dec
cltd
jno
shl
jo
das
addr16
sahf
out
xchg
add
sub
data16
inc
sub
stos
adc
inc
jne
push
cmc
icebp
pop
push
std
push
in
dec
les
dec
fcoml
lods
imul
call
jno
push
sub
loope
sub
pop
cmpsl
adc
sub
adc
enter
into
daa
test
gs
outsb
aam
movsb
or
and
xchg
or
popa
fists
xchg
in
inc
jp
ljmp
mov
loope
or
nop
mov
mov
sahf
popa
fadds
mov
add
jl
popf
cs
xchg
sub
xchg
mov
cli
aad
adc
leave
jg
jne
ds
mov
or
jge
cmp
add
sub
xorl
dec
inc
rolb
sti
adc
and
dec
mov
xchg
push
sbb
mov
pop
sub
in
aad
sbb
lret
sbb
shrb
movsl
imul
sub
mov
push
rcrb
pop
mov
repnz
add
pushf
in
loopne
outsb
addl
stc
cmp
addr16
inc
scas
cmpsb
xorl
or
mov
dec
out
sub
jmp
cwtl
mov
maxps
cld
lock
sbb
xchg
repnz
push
add
lahf
stos
mov
int3
mov
jle
jl
ljmp
and
push
subb
inc
cltd
stos
inc
jns
js
scas
fcmovu
or
mov
xchg
mov
int
ja
mov
in
and
xchg
sahf
inc
mov
and
sti
int
aad
aas
add
mov
mov
mov
fs
push
inc
movb
jns
daa
in
pop
sbb
sub
pushf
test
jge
imul
ja
loop
and
jge
nop
aad
ljmp
push
inc
negl
push
xchg
fistps
int
mov
add
inc
into
pop
pop
into
fdivl
mov
push
cli
cmp
inc
push
cli
rclb
pushf
add
fcomi
dec
repnz
aad
xor
cmp
fnstcw
mov
addr16
out
pop
test
adc
loopne
cmp
roll
mov
sbb
sub
sub
arpl
mov
mov
inc
fisubs
pop
cmpsl
test
stc
imul
push
push
les
dec
sbb
fisubl
xchg
mov
and
in
sub
cld
mov
dec
ret
ret
mov
decl
movsb
mov
or
std
ds
add
iret
inc
loope
insl
rolb
xor
in
mov
in
sub
cld
jno
jl
popa
inc
iret
pop
cmp
add
hlt
or
mov
sbb
iret
push
and
lret
push
pop
jp
sub
sbb
xor
mov
and
aam
cmp
mov
hlt
inc
into
xchg
or
mov
jnp
fdiv
xchg
xchg
jne
sarb
sub
mov
cmc
cmpsb
test
fsts
in
mov
ret
mov
repz
or
insl
fstpt
pop
ret
pop
in
in
and
add
push
or
pop
imull
and
pop
jo
xchg
jno
stos
jbe
pusha
xchg
pop
cli
int3
imul
outsl
out
fucomp
jecxz
lahf
test
xor
out
xor
cs
inc
or
mov
movsb
lret
push
aaa
rcll
push
pop
outsl
or
xchg
cmp
repnz
stos
add
mov
call
cmp
xchg
dec
sub
test
jo
inc
or
lods
shll
cmpsb
jmp
insb
xchg
lds
adc
dec
imul
arpl
scas
pop
popf
fbld
jl
ret
sub
mov
mov
stos
test
pop
iret
push
dec
add
pop
aam
jge
mov
cmp
pushf
mov
mov
fisubl
pop
imul
popa
jb
mov
add
mov
adc
sbb
pop
test
cmp
std
adc
je
sbb
adc
out
clc
ljmp
jnp
xor
mov
sahf
sub
push
inc
call
add
mov
int
fcmovne
jmp
sbb
hlt
pushf
cli
and
inc
loopne
jnp
scas
ds
enter
add
jmp
jp
sub
add
xchg
add
and
and
sub
leave
pop
xor
imull
mov
ret
push
ror
fbstp
push
adcl
sbb
out
mov
lret
fs
cs
xchg
ss
or
rol
stos
jl
xchg
int
test
sbbb
movsb
inc
push
testl
cmp
mov
mov
dec
std
rcrb
sub
aam
inc
mov
sti
cmp
push
loop
add
outsb
lret
lcall
nop
inc
mov
cmp
stos
mov
or
jmp
int
and
addl
cmc
shll
pop
aaa
push
add
std
rcrb
dec
jmp
mov
aad
pop
xchg
add
and
mov
inc
and
inc
ljmp
or
mov
fsubrl
lods
mov
cmpsb
ja
mov
dec
rcr
push
orl
mov
cs
cwtl
in
xchg
int3
testl
xor
in
push
jg
addb
out
and
xchg
int3
jecxz
pop
inc
and
sti
mov
insl
ret
sub
mov
lods
pop
aad
clc
sbbb
add
xchg
test
cmp
inc
pop
jae
lods
push
jle
push
xor
sub
sbb
inc
mov
pop
pop
loope
lds
fs
xchg
pop
jae
sbb
add
push
pop
cmp
add
xor
jmp
imul
push
test
cmp
xchg
test
jo
mov
jno
jle
fimull
into
jmp
ret
scas
out
addr16
out
adc
sarb
jno
and
adc
cmovle
dec
inc
loope
cmp
lcall
mov
lea
add
mov
push
push
popf
lahf
inc
mov
cmc
push
mov
dec
sahf
cmpl
dec
sbb
push
inc
rcrb
jge
push
clc
pop
pop
ds
leave
out
push
imul
pop
scas
dec
jb
in
in
pop
dec
lea
jl
xchg
push
into
pop
mov
dec
mov
sti
insb
ss
inc
add
fdivs
fadd
fsubl
in
sub
std
testb
xlat
sti
pop
repz
test
xchg
mov
sub
testb
imul
stos
xchg
iret
in
push
xor
outsl
ljmp
mov
lods
adc
fidivs
push
shll
dec
aas
sar
call
sub
pop
xor
and
adc
pop
inc
adc
xchg
push
xorl
sub
in
mov
add
add
imul
pop
mov
popa
inc
adc
andb
addr16
repnz
cmp
jge
leave
push
in
xor
jecxz
dec
jge
mov
es
cmp
push
and
mov
mov
jmp
pusha
ljmp
scas
insb
shll
fdivp
ss
fcmovbe
test
or
dec
sub
outsl
in
lods
insl
mov
dec
cmp
xor
pushf
pop
out
xor
shl
subb
nop
fwait
repz
inc
lea
cld
clc
push
inc
dec
xchg
iret
xchg
and
cmpl
je
jb
add
jg
jl
jp
xchg
leave
adc
sbb
mov
push
adc
dec
aad
sub
inc
pop
pop
pusha
cmp
cltd
or
xchg
insl
les
stos
leave
sub
scas
push
mov
lock
sub
mov
pop
jb
add
or
push
xchg
inc
adc
fmuls
inc
mov
lcall
xchg
test
repnz
jmp
cli
test
cmpsb
bound
xor
xchg
cld
push
clc
rcrb
bound
es
jp
into
push
and
mov
cmpsb
daa
cmpsb
push
dec
add
mov
shl
add
push
repnz
mov
fimuls
jg
adc
sbb
movsl
rcrb
ja
les
insl
call
stc
push
inc
pop
shrd
stos
and
inc
addr16
mov
or
das
xchg
and
mov
dec
movsb
stc
rcrb
push
add
gs
aas
mov
imul
loopne
jne
or
outsb
lods
out
mov
jbe
jmp
mov
and
jnp
pushl
add
sbb
jbe
cmp
mov
aam
mov
push
pop
test
jbe
xchg
outsb
fsubrp
das
ret
mov
or
inc
lock
test
cwtl
cmp
or
mov
shlb
scas
mov
outsb
adc
adcb
pop
mov
out
cmp
dec
lock
testb
mov
js
std
xorl
ret
mov
lcall
in
inc
push
addr16
fnsave
stos
sub
fistpl
inc
xchg
and
sbb
clc
pop
jp
fsubl
push
out
adc
xchg
xchg
jp
fstpl
insb
adc
sub
jecxz
cmp
dec
hlt
mov
push
inc
mov
cmp
xchg
push
xchg
fdivrl
out
in
scas
pop
out
sub
jle
int3
into
stos
arpl
ds
sub
orb
leave
mov
inc
les
mov
jno
cwtl
adc
mov
jp
xchg
loope
sbb
sbb
loop
and
daa
push
push
je
lcall
cwtl
push
mov
pop
jb
lods
cli
repz
cmp
out
and
mov
mov
stc
out
push
jno
loopne
fdivs
dec
add
xchg
push
shlb
insb
mov
or
sub
icebp
leave
loope
mov
add
mov
push
popa
xchg
scas
adc
roll
push
or
test
aaa
mov
in
add
jg
decl
pop
pop
add
xor
jg
faddl
jo
rcl
scas
sub
xlat
fs
cmp
xlat
push
es
and
mov
fidivrl
mov
mov
je
mov
fbld
push
jo
loop
out
sahf
xor
mov
cmp
arpl
pop
int
xchg
sub
dec
xlat
test
aaa
push
push
cmpb
aam
sub
inc
arpl
bound
scas
inc
test
pop
inc
pop
out
fmull
lds
xchg
out
sbb
shll
inc
adc
jle
ror
lods
movsb
ret
cmp
pop
aam
mov
cmp
out
in
movsl
xchg
push
mov
mov
gs
daa
stos
mov
xchg
mov
fbstp
jnp,pt
das
lock
into
mov
sub
fiaddl
inc
ss
xorl
xor
ds
jl
adc
pop
scas
lcall
mov
shll
adc
pushf
neg
sarl
pop
xchg
in
sbb
loope
xor
xchg
insl
pop
mov
ficoml
push
mov
fdivs
icebp
adc
push
outsb
scas
data16
add
gs
jecxz
adc
pop
jne
xchg
push
lods
lret
pop
in
popf
out
xchg
lock
aad
cli
sbb
leave
sahf
xchg
jg
adc
jbe
stos
js
dec
mov
cwtl
inc
mov
outsb
pushf
xor
and
xor
adc
addr16
pop
cmp
cs
sbb
aas
subb
mov
and
add
in
mov
orl
std
divl
into
sub
mov
outsb
and
pop
repz
in
xor
xor
cltd
xchg
or
das
lods
das
je
shrl
pop
add
inc
imulb
mov
pop
iret
push
jmp
flds
push
repz
and
add
aaa
add
std
sub
orb
mov
call
mov
cmp
pop
mov
push
cmpsb
negb
sub
dec
rcl
mov
push
aad
mov
push
add
shll
xor
mov
push
in
pusha
xchg
push
fstps
mov
test
push
in
movsb
ficompl
xlat
std
push
sub
inc
loopne
pop
pop
ljmp
push
sbb
sarl
cld
shrl
or
xchg
push
arpl
js
inc
das
mov
inc
mov
ret
pop
lea
sbb
push
movsb
lahf
sahf
ret
in
out
lcall
in
test
push
adc
out
sub
sub
xchg
and
lahf
or
and
sub
xor
pop
int3
dec
scas
inc
data16
xor
mov
bound
idivb
sbb
fs
icebp
sub
dec
mov
jmp
pop
aas
jns
pusha
in
cmp
pop
loope
and
outsb
push
and
sub
mov
mov
cli
int
push
jno
cmpsl
push
jns
outsl
pop
mov
lods
sub
xor
inc
mov
cmp
lods
lret
cmp
adc
jecxz
ds
lret
mov
adc
inc
adc
lahf
sti
jno
dec
add
outsb
jne
xchg
pusha
imul
fcoml
push
inc
xchg
sub
imul
and
pushf
aas
adc
push
xor
mov
enter
inc
mov
lods
xchg
or
leave
data16
push
xchg
pop
push
fidivrl
loopne
test
inc
cld
cli
jmp
lcall
scas
pop
pop
lock
lcall
mov
repnz
iret
scas
sub
and
jl
call
iret
in
arpl
xorl
push
imul
xor
lret
xor
sbb
mov
jnp
pop
pushf
popf
pop
xchg
sbb
movsb
pop
pop
mov
std
xlat
les
ret
cwtl
mov
popa
out
dec
ljmp
sbb
xchg
sbb
sub
push
mov
dec
js
aaa
in
sub
sarb
push
sub
jp
sbb
insb
mov
adcb
mov
sbb
cmp
cmc
mov
je
mov
sbbl
sbb
pop
test
pop
mov
addr16
inc
mov
cld
xchg
adc
mov
jbe
jns
call
fmull
push
mov
xor
and
addr16
mov
loop
mov
jle
add
mov
push
xor
je
push
push
scas
enter
add
dec
cld
cmova
jp
scas
aas
clc
or
jge
inc
xor
test
aas
mov
push
jmp
out
rcrb
inc
adc
leave
inc
aaa
insb
mov
mov
sbb
pop
filds
xor
inc
cmpsb
fnstenv
mov
das
loope
insb
repz
in
xchg
xor
test
jmp
sbb
xor
lods
negb
jno
add
insl
rorb
mov
aas
mov
fwait
aaa
outsl
das
cmp
je
sbb
sub
sti
jg
cmpl
pop
ss
daa
jb
sbb
arpl
dec
pusha
adc
daa
mov
imul
enter
in
cmp
inc
xlat
xchg
int3
cmp
call
mov
int3
hlt
mov
or
xor
lret
lret
lret
loop
push
mov
pop
inc
cmp
ret
fistpl
fwait
xchg
lock
icebp
cmp
sbb
icebp
pop
je
push
stos
xlat
add
mov
jmp
xor
fstpl
insl
mov
sbb
jbe
vmwrite
ret
xchg
and
rclb
jp
rcr
icebp
aam
push
nop
sbb
dec
jp
xor
xchg
push
sub
movsl
fnsave
or
ret
out
pusha
lcall
daa
add
addb
loop
or
inc
push
inc
sub
out
mov
fnstsw
repz
ret
out
hlt
push
and
and
xchg
push
fisttps
ds
cltd
push
jp
jbe
mov
fnstenv
lcall
lcall
test
jno
pop
js
outsl
xor
jno
fdivp
inc
lcall
jecxz
dec
subl
jp
pushf
jbe
mov
loop
test
clc
xchg
adc
lods
int
xchg
outsb
leave
sub
jle
dec
movsl
in
daa
roll
jmp
mov
sbb
scas
mov
enter
xchg
pop
loope
int
dec
xor
jl
sub
rcrb
stos
mov
add
sub
sbb
adc
xor
sbb
ror
jne
jbe
out
test
sti
dec
mov
mov
hlt
out
aas
stos
cmp
insl
call
stos
mul
popa
pop
imul
leave
stc
ftst
gs
push
in
loope
test
cli
rep
jecxz
mov
jle
stos
scas
insb
pushf
mov
mov
insb
sub
outsb
in
rcl
test
fmull
andb
cmp
pusha
mov
xchg
jg
call
xchg
or
cmp
xchg
fiaddl
push
cmp
pop
cmp
cmp
insl
scas
jae
movsb
add
or
cld
dec
xchg
mov
and
imul
jbe
inc
ficoml
pop
pop
rcrl
jp
mov
lods
mov
mov
arpl
mov
out
xlat
leave
cmp
mov
pop
mov
or
jae
mov
push
dec
loop
dec
lds
pop
repnz
inc
pop
inc
mov
mov
iret
lock
jbe
inc
cmp
xor
jns
test
stos
sub
add
pop
push
add
adc
jmp
jne
sahf
xchg
pop
jmp
push
pop
fistl
sub
mov
xor
inc
jo
outsb
adc
jo
xchg
out
mov
hlt
fdivrs
repnz
cmp
out
pop
outsl
subb
fwait
sub
out
add
mov
inc
push
data16
sbb
insb
or
popf
nop
xor
push
mov
push
jno
out
dec
arpl
xor
cmp
cli
cli
add
add
mulb
fs
and
jge
dec
lret
loop
and
pop
push
iret
cld
scas
mov
cltd
jbe
out
push
adc
lret
sub
in
ja
mov
jmp
ss
rol
add
cld
mov
jg
cmpsb
popf
jnp
mov
std
or
sbb
cwtl
out
dec
push
xor
jno
inc
out
movsl
leave
rclb
xchg
aam
jns
and
or
dec
push
nop
ds
push
mov
jg
mov
jg
inc
add
mov
stos
dec
sahf
imull
ds
fcoms
push
pop
insb
nop
push
sub
les
jne
mov
push
jg
or
dec
fs
mov
cltd
fistl
mov
mov
daa
push
aas
mov
pop
cmp
pop
pop
jae
decb
into
shrb
negb
fs
mov
push
rclb
mov
std
cltd
loop
xor
dec
inc
cli
outsl
push
jno
jo
sub
push
cmp
mov
notb
xchg
sbb
pushf
pop
ljmp
idivb
lds
icebp
xchg
sbb
or
insb
movsb
imul
aam
mov
add
shrl
add
xchg
jge
xchg
xchg
inc
or
push
outsl
addr16
sub
stc
fidivs
jmp
xor
push
stos
out
lea
ret
add
fucomip
sbb
jns
stc
fmull
and
pusha
gs
std
ret
pop
subl
cmpsb
fsubl
into
adc
lock
sbbb
dec
repz
clc
cmpsb
sbb
push
dec
lods
add
push
lea
int
data16
mov
and
adc
mov
jl
test
mov
cli
test
and
mov
jne
lods
popf
mov
push
rcrl
pop
js
jnp
jg
lret
pop
sbb
mov
mov
push
sub
out
sub
addb
xor
xchg
xchg
stos
clc
hlt
or
fldcw
xchg
lea
call
add
fs
scas
jmp
dec
hlt
inc
sub
mov
xchg
inc
out
cs
sahf
push
add
aad
sarl
pusha
arpl
sub
jmp
popf
or
fs
cmp
ljmp
test
shl
xor
pop
pop
ficoml
pop
aad
out
out
fisttpll
lock
out
pand
xor
pop
mov
notl
sub
fisttpll
mov
rclb
push
sbb
mov
cs
xor
out
cmp
inc
icebp
popa
and
mov
dec
dec
push
popf
jmp
pop
repnz
cmc
fstpt
fld
in
pop
jmp
dec
in
testb
inc
sahf
dec
add
roll
or
sub
loope
dec
adc
jo
ds
mov
add
and
fisubs
shrb
in
js
hlt
aad
mov
in
mov
mov
sarl
sub
mov
arpl
cmp
push
icebp
das
dec
xchg
cltd
add
cmp
or
push
mov
lds
jp
push
bnd
inc
cwtl
dec
ss
dec
adc
pop
add
imul
iret
add
mov
pushf
enter
mov
mov
leave
sti
mov
jle
add
push
sub
stos
inc
add
sub
mov
sbb
lea
shrl
sub
insl
loop
dec
or
jge
sbb
mov
or
sbb
dec
sub
jle
mov
add
xor
adc
xchg
jne
and
inc
jge
fstl
out
cmp
ret
je
pop
or
pop
mov
popa
cmp
daa
scas
ljmp
movlps
cmp
test
jecxz
pop
pop
call
cmpsl
imul
cmp
push
push
ss
pop
pop
lahf
pop
shlb
xor
out
mov
adc
dec
pop
clts
mov
mov
mov
and
data16
and
aas
test
aad
mov
or
out
fcomip
ffree
pop
inc
daa
jmp
loopne
inc
mov
jnp
dec
bound
inc
lea
rorl
lods
shll
pop
stc
jne
add
aam
sub
popa
push
aam
call
inc
rcrb
in
arpl
dec
push
dec
pop
aad
enter
mov
sbb
scas
mov
sub
pushf
into
pop
scas
mov
adc
dec
mov
cmp
sub
sub
dec
jae
aad
mov
mov
clc
pop
ljmp
out
sub
shrl
sarl
jecxz
lcall
stc
pop
cmp
test
lea
or
or
scas
iret
loope
cmp
push
push
xchg
push
xchg
cmp
jge
add
inc
in
mov
pop
mov
and
dec
push
inc
cwtl
test
xchg
icebp
stc
mov
and
jae
mov
cmp
dec
in
pop
mov
js
arpl
xlat
sbb
mov
pop
sbb
jp
jg
mov
mov
pop
iret
pop
mov
xchg
mov
jp
clc
push
pop
push
adc
insb
sub
flds
pop
add
popf
lds
pop
cmp
add
cltd
stc
sbb
in
movsb
xor
dec
mov
sub
pop
repnz
movsb
mov
in
mov
lock
test
mov
mov
popa
mov
add
xchg
xchg
cmp
lret
mov
xlat
sarb
mov
shll
frstor
and
sbb
fisttpll
imul
leave
fidivrl
daa
xchg
or
xor
movsl
push
int3
popf
bound
mov
and
rorl
or
jmp
cwtl
into
push
sahf
xor
fcmovnb
mov
mov
cli
push
jbe
repz
iret
je
push
adcb
scas
sub
pop
fldl
mov
sbb
out
hlt
xchg
cmp
out
sahf
stos
jp
sub
jb
dec
in
push
push
sbb
sbb
ret
pop
push
adc
dec
mov
add
push
cmp
popf
inc
inc
lds
cmpsl
mov
cltd
xlat
arpl
xchg
cltd
or
jecxz
add
outsb
or
push
aad
xor
push
adc
lods
test
enter
clc
push
sub
jno
add
nop
sub
les
cli
push
outsl
movsl
lock
mov
cmp
test
in
rcrb
icebp
xchg
jle
int
push
jo
inc
xchg
cltd
adc
icebp
outsb
mov
adc
lock
xchg
sub
cmpsl
sub
mov
std
sti
mov
mov
sti
subb
insl
lock
aad
les
xor
decb
jbe
xchg
add
push
imul
mov
insl
inc
cmp
adc
mov
jecxz
or
mov
into
mov
into
mov
lcall
ss
and
int3
xor
aas
xchg
xor
push
outsb
mov
and
stos
lods
pop
cwtl
aam
push
adc
into
push
iret
out
inc
outsl
nop
inc
sub
sbb
es
pop
dec
and
add
repz
test
mov
ss
sub
add
fstl
xor
lahf
cld
or
in
cmpsb
sahf
fsub
push
call
aas
imul
lock
shrl
jns
fsubl
add
pusha
lock
andl
scas
mov
mov
lods
push
fsubl
inc
sub
mov
lea
xchg
xor
sub
mov
dec
popa
test
cmp
push
ss
and
add
mov
and
xor
lds
mov
push
cld
cld
cmc
xlat
adc
mov
shlb
aaa
flds
xchg
mov
aas
or
mov
mov
mov
pop
ss
mov
mov
inc
arpl
cmp
xor
mov
daa
xor
loopne
call
js
imul
addr16
dec
out
jl
sbb
pop
loop
add
loopne
jbe
mov
mov
loopne
movsl
jg
lock
mov
int3
ljmp
repz
lods
cmp
aaa
xchg
jge
scas
rcrl
fdivs
lcall
cld
adc
push
imul
addr16
repnz
test
inc
inc
out
dec
inc
adc
xor
hlt
add
or
pop
daa
inc
dec
cmp
push
mov
icebp
daa
xor
xor
cmp
push
and
jno
mov
clc
jl
xor
hlt
dec
jge
mov
hlt
fstl
das
leave
inc
shlb
fistpll
add
div
pop
xchg
mov
adc
icebp
sbb
push
push
xor
loopne
rcr
fwait
adc
imul
imul
in
cmp
insb
fisubrs
negw
mov
dec
push
ljmp
xlat
push
rcl
jo
push
adc
clc
add
inc
xor
iretw
es
push
jp
jbe
lahf
or
std
push
dec
cwtl
roll
sub
lea
adc
into
hlt
and
clc
cmp
test
das
sbb
mov
pop
cld
std
mov
jg
lods
dec
lret
rol
clc
inc
pop
sub
xchg
ds
lcall
push
dec
mov
loope
test
sub
mov
addr16
js
sub
push
dec
fmul
dec
xor
dec
out
stc
pop
pop
inc
fs
sbb
mov
mov
iret
nop
xor
out
xchg
push
mov
lcall
mov
stc
lds
aaa
insb
mov
pop
xor
sub
push
test
leave
mov
ret
mov
jb
push
mov
testl
inc
loopne
xor
xchg
int3
xor
inc
call
insl
jbe
shll
jl
loope
mov
hlt
and
loop
rorl
out
enter
lods
sbbl
loope
ret
sub
cmp
imul
mov
sbb
mov
add
xchg
xchg
daa
dec
popf
add
insl
lods
sbb
xor
popf
imul
mov
ds
popf
push
cmpsl
ljmp
jnp
dec
adcl
pop
dec
inc
bound
cmp
jecxz
mov
sbb
stos
aas
mov
pusha
hlt
adc
sarb
repnz
add
test
insb
cld
leave
imul
mov
xchg
jae
jmp
fldcw
test
lods
cmp
iret
inc
xor
or
fwait
test
jecxz
lret
int3
sbb
pop
mov
mov
ret
xor
dec
cltd
add
int3
adc
negb
sub
fistl
ljmp
pusha
enter
insl
outsl
xchg
adc
pop
cmpsb
in
and
add
push
add
aam
jecxz
xchg
add
push
les
mov
int
or
scas
lods
xchg
je
push
xchg
adc
adc
fwait
adc
scas
push
cs
pop
adc
dec
cli
adc
pop
test
pop
dec
xor
mov
or
xchg
adc
jae
and
out
adc
pop
pushf
xor
jp
rcl
out
ja
pop
xchg
cwtl
movsl
xchg
ja
mov
pusha
repnz
cmp
adc
les
ret
xchg
sub
cmpsl
rolb
cmp
and
test
xor
cmc
sub
jb
or
lahf
jl
jae
sbb
xchg
cli
mov
adc
shr
pop
shrb
or
xchg
mov
out
jmp
aas
or
iret
jp
fisubl
add
cli
rcrb
sbb
mov
cmc
mov
xchg
aaa
lahf
fistpl
shrb
mov
mov
and
sub
or
leave
dec
loopne
mov
xor
xchg
xor
cwtl
jo
fstpt
aad
ret
xor
cmp
out
lds
add
and
ret
push
pusha
je
jns
pop
fwait
mov
loopne
mov
xlat
push
and
jmp
test
addr16
mov
js
push
mov
fsubr
mov
lcall
inc
test
adc
mov
lahf
pop
std
mov
add
ljmp
or
in
das
adc
cmp
cmpsl
xchg
mov
ja
xchg
ja
aad
das
das
movsb
test
pop
rorl
sub
sahf
pop
sbb
fwait
push
xchg
repz
ja
std
xchg
pop
lea
mov
and
call
hlt
insl
jne
mov
mov
test
adcl
and
cmp
scas
jbe
jnp
loopne
fsub
xorl
jecxz
std
add
scas
repz
out
jmp
in
push
jmp
jns
add
mov
xor
mov
adc
out
mov
pop
mov
clc
pop
insl
mov
ret
sbb
cmpsl
ds
pop
adc
imul
lea
jo
lea
jmp
rorl
dec
cld
pop
sbb
and
fldenv
inc
adc
stc
sbb
mov
cltd
idiv
mov
pusha
fisubl
dec
cmp
pop
xchg
out
dec
add
dec
leave
cmc
cmp
push
add
xchg
sbb
sub
lret
push
insb
scas
jns
sbb
outsl
cmp
outsb
cs
andl
fmuls
lcall
sar
cwtl
out
insl
imul
xchg
rcll
sub
mov
fbld
lahf
or
ret
sbb
ja
or
nop
xchg
scas
push
or
sbb
rcrl
loope
sub
scas
push
ret
jle
cmp
aam
adc
mov
mov
pop
pop
mov
pop
add
movsl
mov
xchg
pop
leave
frstor
mov
imul
mov
sbb
orl
es
add
mov
fistl
cwtl
mov
pop
int3
lret
jb
sub
inc
pop
adc
inc
adc
inc
idivb
es
orb
lock
movsb
inc
xchg
mov
add
sbb
mov
push
pop
push
movsb
stos
push
jae
mov
jge
cld
int3
add
push
xchg
cmp
cmp
pandn
call
mov
mov
scas
int
mov
shlb
hlt
sub
inc
mov
shlb
jp
insb
jg
leave
sub
mov
int
push
movsl
jl
testl
arpl
inc
gs
jge
jae
loop
pop
inc
jmp
cwtl
test
das
xchg
jmp
inc
sbb
sbb
mov
inc
lret
es
das
dec
jb
adc
lea
cmpsl
pop
adc
daa
cld
cmc
aad
pop
fiadds
ja
pop
insb
stos
test
aam
push
js
xlat
lds
pop
jbe
mov
test
sahf
inc
inc
fstp
popf
popf
jecxz
xchg
gs
stos
xchg
sub
cmc
daa
es
adc
ljmp
inc
ret
pop
xor
mov
xchg
and
mov
mov
shrl
mov
or
adc
and
fscale
push
adc
ds
cld
fwait
push
cli
and
xor
push
cltd
out
xchg
in
test
pop
add
xor
add
aam
lods
inc
and
std
dec
push
jae
cli
adc
pop
test
ja
inc
jp
popa
xor
dec
adc
mov
dec
lock
and
xchg
repnz
jg
or
fldl
sbb
icebp
daa
dec
shlb
jl
hlt
cmpsl
mov
fisttpll
cmp
mov
insb
sbb
xchg
test
movsl
add
les
in
inc
imul
mov
and
jp
into
fcmovnu
jne
roll
pusha
pop
push
shlb
lret
and
sub
adc
fs
ficoms
enter
jb
rep
popa
popf
xor
adc
pop
lods
xlat
lock
sbb
adc
imul
ficoms
adc
sbb
ret
mov
jnp
dec
xchg
or
mov
mov
mov
inc
sbb
fiaddl
dec
ds
outsb
ficoml
loope
adc
pop
mov
popa
mov
daa
xchg
cmpsb
dec
pop
test
xor
je
mov
fisttpll
sub
movsl
xchg
js
sbb
lret
mov
jl
inc
or
lock
ja
jnp
loopne
in
jbe
or
jle
push
cmp
mov
and
inc
or
ds
push
or
mov
fs
push
and
push
xlat
push
dec
pop
xchg
mov
lahf
jg
and
pop
push
xchg
jnp
xor
lret
dec
pop
adc
sub
scas
push
jae
insb
shrl
loope
mov
cwtl
push
push
fs
mov
bound
pop
sub
cli
adc
lods
bound
dec
outsb
lahf
call
xor
jp
adc
fcmovnu
stc
fldt
stos
add
shlb
push
lret
pop
mov
call
xor
addb
insb
pop
push
cmp
fnsave
jnp
stos
js
das
mov
sub
sub
int
ret
rorl
push
ljmp
int3
and
or
push
xor
stc
das
jne
subl
push
leave
sbb
adc
ljmp
loopne
cwtl
push
jns
movsl
xor
pop
push
cli
hlt
and
fwait
mov
loopne
sti
pop
clc
inc
ja
ret
test
pop
dec
imul
jo
mov
repz
inc
adc
hlt
inc
flds
pusha
mov
jge
pop
call
cmp
xchg
add
inc
pusha
in
repnz
and
fimuls
add
inc
lret
sub
push
mov
xchg
and
cmp
or
repz
add
sbb
sbb
int
jmp
sub
sub
mov
mov
mov
pop
aad
leave
fisubl
add
dec
sarb
int
dec
push
adc
push
jl
xor
jge
test
enter
imul
ret
lea
lds
testb
adc
adc
out
cli
xchg
cmp
shll
dec
mov
and
pop
pop
sbb
hlt
xchg
dec
push
sub
cld
fcoml
pop
fidivl
or
jnp,pn
insb
inc
cmpl
stos
mov
cmp
incb
fisttps
inc
dec
data16
rcll
push
cmpsl
aad
sub
sub
sahf
rdmsr
nop
or
push
jle
test
lahf
ficompl
sbb
mov
icebp
ret
test
lock
xor
xchg
sbb
pop
push
test
jns
and
and
rcrl
adc
test
pop
fwait
push
xor
test
insb
jecxz
fstl
notb
jl
pop
pusha
xchg
xorb
ffreep
xor
or
mov
mov
jmp
shrb
outsl
aas
cld
push
jecxz
not
or
mov
loope
push
cli
push
stos
mov
mov
fnsave
mov
stos
push
mov
int
mov
fistpl
sbb
or
insb
nop
repnz
cltd
pop
movsb
and
mov
and
sbb
sbb
xor
in
xor
cmp
sub
xchg
jp
nop
mov
inc
mov
idivl
mov
cmp
dec
adc
mov
test
xlat
mov
mov
sahf
mov
add
dec
ret
incb
push
int
dec
adc
je
jecxz
pusha
xchg
test
inc
lret
jle
insb
mov
jle
leave
je
subb
imul
ds
pop
mov
fstps
xor
aas
sbb
repnz
sahf
lret
loopne
mov
mov
dec
scas
jnp
mov
cwtl
es
iret
clc
sub
mov
mov
or
or
shll
cwtl
or
int3
out
adc
lods
lahf
push
or
dec
ja
mov
push
lods
lods
stc
fwait
loop
push
pop
int3
cmc
scas
jl
mov
add
iret
mov
mov
mov
ja
add
mull
outsl
rclb
gs
mov
adc
loop
movsb
xchg
push
andb
mov
jbe
xorb
add
int3
or
pop
ljmp
scas
lods
xor
lods
mov
int3
lret
push
jmp
cwtl
outsl
inc
scas
add
in
and
xchg
xlat
sbb
xor
sbbb
leave
inc
mov
lock
lahf
mov
and
sbb
dec
pop
adc
mov
cmp
xchg
popa
test
lods
and
push
inc
stc
sbb
xchg
out
add
aaa
cs
push
fidivrl
push
cltd
out
sti
sbb
jmp
cli
jmp
pop
movsl
add
mov
and
pop
test
int
mov
or
test
imul
mov
inc
jmp
in
push
test
xchg
jp
mov
inc
loop
add
dec
test
out
dec
pop
mov
mov
out
cwtl
and
arpl
and
add
adc
mov
inc
xchg
sarl
mov
testl
push
int3
adc
sbb
mov
sub
loope
outsl
mov
cmp
aam
repz
mov
lcall
in
fadd
cmpsl
mov
push
das
cmp
mov
fidivrs
mov
dec
jge
mov
notb
rsm
push
mull
cmpsb
mov
aam
sbb
test
sbbb
arpl
pusha
rcrl
das
mov
imul
mov
push
mov
cmp
xchg
sub
into
mov
xorl
andb
push
cmp
rcrb
ds
sub
adc
sub
fwait
outsb
mov
icebp
mov
mov
out
mov
dec
xor
lods
xchg
lock
sub
gs
mov
xchg
jns
jle
xchg
ljmp
dec
fnstcw
repz
pop
mov
test
pop
push
movsb
mov
rol
je
add
inc
jo
mov
push
dec
imul
popf
out
push
fidivl
test
add
xor
movsb
xor
sub
leave
fwait
pop
in
aas
mov
and
mov
or
jns
mov
imul
mov
cmp
dec
jl
into
inc
notb
pushf
subl
retw
pusha
mov
call
sub
push
sbb
push
loopne
pop
shlb
lods
sbb
out
popf
in
das
dec
xchg
in
adc
divl
fs
frstor
out
rcl
out
jg
sub
shrl
fsubl
and
mov
dec
push
in
js
iret
dec
inc
rclb
repnz
push
hlt
repz
out
cltd
int3
test
or
hlt
aad
cltd
sbbl
in
lods
sahf
out
jns
mov
or
stc
pop
dec
push
mov
stos
sbb
jo
mov
jg
mov
call
adc
fincstp
insw
stos
mov
les
mov
jbe
jne
inc
mov
and
push
push
mov
repnz
mov
jp
shl
imul
inc
loop
fisubl
test
xor
xor
fwait
cmp
jo
outsb
repnz
sub
imul
cld
add
insl
jl
push
lds
xchg
mov
cmp
cmc
xchg
push
pop
ret
mov
inc
mov
scas
loop
stos
sbbl
sar
mov
inc
call
outsl
loopne
mov
cmpsl
xor
xor
cmp
pop
jne
push
int3
mov
push
dec
leave
adcl
push
into
leave
scas
shl
and
int3
jge
jbe
out
js
out
loope
enter
js
xchg
sub
and
cs
inc
rorl
and
outsl
xlat
or
or
jp
jne
inc
cmp
jnp
shrl
jae
add
jg
push
test
in
loop
xchg
xchg
cs
or
lret
negb
xlat
das
pop
pop
push
stos
fs
subb
out
loope
cmp
adc
les
adc
lret
test
lret
xchg
mov
pushf
push
cmpb
out
cmp
pop
cmpsb
lods
aam
stos
bound
inc
rclb
jns
lret
adc
test
and
scas
mov
iret
stos
lea
das
orb
fwait
dec
mov
outsb
int3
push
lods
cwtl
cwtl
lods
pop
or
imul
inc
in
aad
pushf
sarb
lcall
dec
dec
nop
dec
in
outsb
inc
push
jns
pusha
sbb
clc
jmp
popf
jb
jns
test
pop
sti
daa
data16
les
mov
movsb
lcall
push
ja
in
shl
pop
test
es
or
sbb
arpl
shll
leave
ljmp
ljmp
shlb
or
stos
mov
mov
xchg
call
xchg
fists
add
je
mov
inc
insl
lods
fmulp
dec
push
int
fstl
aam
fdivs
pop
sbb
dec
lods
pusha
fldl
repnz
fadds
scas
jne
inc
jnp
psubw
or
push
jne
xor
sbb
adc
fcmovne
xlat
adc
dec
loop
mov
add
fwait
outsl
sahf
jbe
fstpt
mov
xchg
mov
out
xchg
xlat
jg
mov
leave
cmpsb
lret
xor
xor
fbld
xchg
jp
loop
out
or
sub
fmull
fsubrl
mov
xchg
mov
es
dec
inc
or
mov
aam
imul
cli
mov
jno
add
adc
daa
andl
leave
pop
roll
ret
add
mov
lds
repnz
or
cmp
pop
shll
fdivs
and
mov
cmovb
mov
sub
pop
outsb
cmp
sub
imul
mov
adc
ret
jns
test
aas
cmp
push
mov
das
push
mov
lcall
jmp
into
dec
push
dec
jns
ljmp
mov
insb
adc
jle
movsl
stc
sbb
lods
imul
or
aad
int
or
inc
ret
aaa
sbb
jo
push
add
push
lahf
movsb
fnstenv
rorb
xor
xor
and
jp
jmp
in
cmpl
outsb
mov
sub
jno
negl
jns
push
pop
iret
push
lahf
dec
cmpsl
or
sub
mov
ret
adc
repz
push
mov
dec
sub
inc
sbb
mov
test
sbb
add
mov
loope
mov
pop
jae
jmp
imul
das
ficoml
sub
sarl
add
lds
add
push
dec
sub
test
dec
clc
inc
sahf
dec
mov
clc
cmp
in
xchg
add
xor
out
inc
jns
loop
pusha
addb
pop
xlat
dec
xor
test
add
pop
and
inc
fstps
or
cmp
push
xor
insb
dec
bound
add
aaa
int
clc
clc
lea
mov
push
pop
popa
sub
in
sti
loop
xchg
push
fnstsw
sbb
xchg
add
stos
cmc
push
jg
ja
popa
aaa
data16
jg
in
outsl
cmp
nop
mov
mov
mov
movsl
and
insl
dec
std
sarb
shll
fcmovnu
sbb
in
dec
andl
lods
add
push
adc
adc
add
jp
cmp
xor
andl
inc
pop
pop
scas
inc
sbb
ret
js
mov
push
fbstp
add
stos
sub
data16
push
dec
jb
push
dec
lock
jbe
pop
or
repnz
arpl
pop
jnp
incb
jnp
push
ljmp
in
repz
and
ret
fsubrl
lret
lods
hlt
negl
sbb
popf
or
add
jns
pop
stc
movsl
mov
je
flds
lret
ljmp
xor
dec
add
or
cmp
xchg
and
js
xchg
pop
repnz
mov
push
mov
or
dec
rolb
loop
imul
xor
sbb
pop
inc
outsb
pusha
aas
pop
push
cmp
push
pusha
lret
addb
cmp
out
aad
addr16
adc
insl
xor
in
jo
imul
lods
inc
jge
lcall
xor
inc
aad
inc
add
push
dec
fwait
xchg
repz
mov
iret
fs
xchg
and
push
mov
cmp
sub
xchg
fcoml
arpl
mov
xchg
pop
sbb
pop
adc
xlat
mov
fcmovnb
aas
popf
insl
inc
stc
sti
jae
cmp
and
out
dec
ljmp
stos
loop
mov
sub
add
mov
sbb
xor
cmp
movsl
ficomps
add
cmp
xchg
pop
cmp
xchg
sbb
dec
pop
push
ror
jle
ss
push
arpl
orl
sub
stos
mov
jns
sbb
or
add
jo
inc
rol
ficoml
pop
push
push
mov
sbb
push
inc
ret
or
xor
out
and
adc
jecxz
add
push
lret
xchg
lods
jecxz
inc
inc
or
ficoml
shrb
push
jl
clc
int3
dec
aas
pop
xlat
adc
mov
mov
add
nop
in
dec
movsl
xchg
outsb
out
jl
shrb
sub
insl
gs
lds
mov
cmp
xor
inc
jl
leave
imul
ficoml
jno
adc
cmp
mov
jnp
aam
jns
lahf
jge
xchg
and
and
movsl
int
cwtl
test
add
inc
mov
outsl
xchg
subl
dec
adc
out
or
test
nop
mov
lea
jae
out
cmpsl
adc
adc
pop
mov
ljmp
aas
push
test
repz
cmp
mov
inc
std
in
mov
push
pop
mov
dec
push
cld
xchg
ds
fnstenv
in
sarb
mov
mov
shlb
jge
cmp
int
mov
pop
xor
xchg
repz
lcall
loope
inc
pusha
xor
pop
popa
and
xchg
inc
add
fcomps
fldcw
out
testb
imulb
outsb
jb
sub
mov
jbe
aaa
in
lcall
fincstp
pop
mov
sub
mov
cmp
inc
das
jb
push
jae
inc
pushf
in
jmp
mov
xor
lods
cmp
jge
cltd
cmp
lahf
cmpsl
sub
xor
loop
jecxz
and
adc
mov
test
lea
mov
or
jg
xchg
lcall
xchg
cmpsb
jl
fisttpl
sbb
cmpsb
push
sub
cmp
imul
daa
pop
push
addr16
mov
mov
add
pusha
pop
pop
or
jle
xchg
adc
popf
sub
aam
add
mov
pop
xchg
repnz
mov
xchg
aaa
rclb
and
push
sbb
in
xchg
xchg
roll
and
or
lret
aas
repz
in
mov
xchg
ljmp
daa
push
lahf
push
imul
lods
ds
out
jbe
mov
xorl
cmp
int
pop
mov
mov
mov
lods
test
sub
jp
adc
jecxz
push
push
popf
mov
xlat
xchg
xor
sahf
xchg
and
xor
orl
inc
push
pushf
rorb
stos
xchg
les
jp
imul
mov
rolb
jle
out
pop
repnz
adcl
sub
push
test
inc
hlt
jb
xchg
int3
mov
adc
test
lods
adc
lods
stc
inc
mov
add
jne
gs
jecxz
push
add
push
ss
lea
xchg
jle
mov
fs
sub
ljmp
xchg
dec
mulb
jmp
pop
mov
rorb
fdivrs
sub
inc
insl
xchg
cs
loope
leave
jnp
lods
sub
or
not
popf
movl
inc
cmp
insb
mov
push
loope
push
sbb
test
jle
push
or
subb
cmp
std
cmp
mov
xor
enter
lea
xor
cmpsb
or
hlt
xchg
pop
sub
jb
xchg
cmpb
or
mov
mov
or
mov
jp
sahf
cmpsb
push
negb
dec
pop
mov
push
cmc
or
shll
cmc
inc
mulb
imul
in
lret
aam
or
add
jnp
test
loope
cmp
shll
mov
inc
lds
add
mov
sub
and
jmp
push
push
fldl
das
add
sub
cmpsl
pop
in
adc
insb
ja
inc
fsubrl
cmp
stos
mov
sbb
push
loopne
or
call
pop
mov
mov
push
push
movsb
push
sbb
dec
mov
out
ja
in
loop
sbb
jmp
mov
xchg
sub
add
xchg
inc
push
fnstenv
fcom
adc
call
jno
mov
cmp
cmp
jb
jb
xor
xchg
inc
push
andl
jl
test
mov
mov
jb
pusha
mov
loope
mov
fists
scas
push
and
mov
sub
sbb
cmp
pushf
mov
mov
hlt
lock
adc
int
dec
push
mov
mov
lds
pop
pop
mov
loop
fmul
jo
subb
movsl
shr
jnp
inc
mov
loop
aam
mov
mov
sub
aaa
outsb
call
or
xlat
jge
sahf
std
movsb
push
fsubs
add
pop
mov
lods
cwtl
outsb
cmp
push
imul
dec
scas
ljmp
jo
rcll
orl
insb
test
iret
mov
cwtl
mull
jnp
repz
jmp
add
sub
pop
ds
push
jmp
pushf
pop
push
lret
cld
push
rolb
imul
mov
rorb
lret
mov
jl
aas
xchg
cs
fwait
xchg
imul
sti
and
sub
movsl
dec
pop
lea
aam
jno
roll
mov
jne
aas
pop
xchg
adc
adc
je
mov
push
push
jmp
mov
mov
testl
pop
cs
lock
imul
fnstcw
and
push
push
cmc
shlb
nop
mov
sbb
in
inc
lods
imul
cli
neg
imul
jb
cltd
outsb
mov
dec
and
add
pop
lcall
or
xor
in
sbb
mov
aaa
mov
dec
stos
imul
stos
repz
pop
cli
and
lea
jns
outsb
or
notb
cltd
orb
int
add
iret
push
sub
and
jnp
jl
cmp
mov
sbb
jg
bound
les
push
push
xor
sub
mov
xor
jg
push
or
enter
mov
adc
mov
add
xlat
sahf
inc
aaa
mov
cld
loope
fildll
mulb
int
daa
sbb
js
jns
pop
jbe
outsl
mov
mov
mov
push
mov
xor
inc
fwait
push
mov
push
inc
mov
mov
clc
pop
iret
popf
and
mov
andl
mov
mov
cli
inc
xlat
test
cmp
pushf
iret
mov
cli
negb
pop
xor
pop
lret
sbb
notb
mov
aam
mov
cmp
adc
adc
dec
mov
jg
int3
pop
dec
dec
dec
cmp
mov
adc
jno
xor
aaa
pop
cmp
push
cwtl
stc
pop
xchg
dec
pushf
mov
sub
movsb
and
sar
and
pop
adc
lock
outsb
out
dec
mov
mov
cmp
popf
je
orb
lods
int3
mov
xor
jl
dec
fnstcw
es
xchg
or
and
mov
dec
xchg
negb
dec
pop
xchg
dec
jne
pop
adc
sub
or
dec
jne
and
sbb
xor
and
add
les
or
add
cmp
icebp
mov
dec
pop
xor
mov
mov
mov
pushf
mov
mov
adc
adc
sbb
rcll
xchg
inc
mov
shll
ljmp
and
rcl
mov
xchg
jg
stc
shrb
mov
xchg
mov
out
out
into
popf
push
or
dec
xchg
clc
jne
mov
rcrl
mov
dec
and
in
pop
lret
sbb
mov
mov
clc
outsl
clc
xchg
fidivl
add
and
or
xor
cmp
mov
test
inc
inc
pusha
push
lcall
mov
dec
out
imul
jae
testb
add
push
rcrl
shll
xchg
xchg
ljmp
sbb
mov
lods
rcrl
lahf
add
ds
mov
mov
mov
out
call
lds
orb
xchg
mov
xchg
movb
imul
adc
rcll
inc
mov
incb
cwtl
jle
lret
test
jo
aam
mov
jp
imul
mov
mov
or
in
mull
movsl
loopne
jnp
test
jmp
xor
sub
or
sbb
and
xchg
pop
cli
push
mov
xchg
mov
inc
jnp
es
jnp
mov
xor
enter
xchg
loope
movsl
cmp
dec
ss
inc
lret
inc
mov
mov
inc
bound
in
jmp
sub
out
adc
jle
fstps
int
in
imul
jae,pn
outsb
sti
and
push
out
shl
push
shrl
sub
in
adc
sub
sbb
jo
mov
les
cmp
mov
insb
rorb
ja
iret
in
scas
pop
mov
in
incl
popa
push
idiv
pushf
jne
jb
movsb
cmp
verr
cld
loope
xchg
das
jnp
jg
dec
jge
or
stc
add
lds
les
test
adc
or
pop
imul
ja
xor
dec
dec
loopne
sti
jle
mov
bound
add
sub
xor
or
repnz
mov
cmc
imul
rcrb
call
movsb
aam
inc
test
sbb
add
and
jne
cmc
mov
cmp
fnstenv
insb
cld
out
jne
sub
cwtl
insb
clc
mov
or
outsl
xor
pop
or
cmp
or
mov
lods
rcrl
rorb
push
or
mov
out
cld
inc
test
repnz
push
push
mov
pop
cmp
push
mov
notl
out
or
bnd
xchg
lods
dec
jno
fxam
shlb
rorl
pop
jnp
adcb
test
out
and
in
call
add
cmp
mov
cmpsl
xchg
rcll
push
fdivrl
mov
mov
or
mov
outsb
jge
push
call
andb
mov
sub
sti
fnstenv
out
jl
outsb
leave
mov
das
pusha
rep
stc
sub
das
icebp
es
push
enter
xor
pop
lds
bswap
lods
aas
sub
and
out
xor
cli
cmp
sub
flds
rclb
inc
mov
loope
adc
pop
inc
dec
cmp
fbstp
mov
insb
in
or
jns
mov
jnp
lock
xchg
fists
lcall
ret
mov
sbb
shll
pop
inc
pop
gs
je
mov
inc
push
stc
sub
ss
ljmp
adc
out
lods
inc
pop
pop
mov
inc
push
roll
push
je
xchg
mov
xchg
xor
add
je
dec
xchg
mov
jmp
jle
out
jbe
subb
int
add
cmpsb
cli
jp
call
mov
bound
pop
test
shll
push
lahf
jne
push
mov
jg
jne
mov
hlt
dec
mov
mov
xlat
xchg
dec
aad
imul
es
push
stos
leave
fidivrl
movsl
pop
imulb
lret
pop
jle
and
xor
push
nop
sbb
rorl
adc
gs
in
in
or
adc
in
add
cmpsb
dec
sbb
test
jb
aam
jmp
int
sbb
pop
mov
mov
mov
mov
mov
shlb
fidivrl
out
jmp
sub
sub
push
pop
jecxz
fucomp
sti
out
pop
cmp
sbb
insl
jge
or
ja
inc
jmp
xor
jp
and
rol
adc
or
into
pop
and
jno
or
in
lock
mov
adc
mov
xchg
fldcw
nop
test
fscale
cwtl
xor
mov
mov
or
push
mov
add
push
lock
jns
add
cmpsb
fidivl
mov
popa
in
mov
jg
dec
fwait
notb
daa
imul
lahf
repnz
pop
sbb
lcall
lahf
popf
lea
call
pop
in
in
jb
adc
pop
outsl
lods
xor
leave
adcl
xor
push
out
sbb
mov
add
out
shll
jbe
cwtl
cmp
xlat
negl
sbb
lret
jno
fistps
mov
cli
addr16
sbb
lahf
xchg
sbb
cmp
jns
outsl
outsb
pop
sub
jns
scas
mov
and
xchg
out
adc
push
sarb
mov
push
fs
mov
addr16
xchg
notl
pop
lds
movb
fs
lcall
adc
pop
xor
inc
cmpsl
mov
xlat
pop
int
jns
jno
cmc
outsb
mov
sbb
push
jl
jns
out
push
sti
sti
movsb
mov
in
icebp
loopne
jb
in
cmp
lret
sbb
mov
cmpsb
clc
jmp
mov
or
test
inc
push
or
xchg
leave
fs
sbb
lret
mov
pop
jbe
jo
add
shlb
int3
leave
or
inc
xor
xchg
int3
add
cli
into
js
xor
mov
iret
push
repnz
push
add
loope
mov
aad
sbb
cmpsl
xchg
pop
cld
sbb
push
pop
shl
xor
adcb
jle
mov
fisubrl
and
ret
mov
dec
leave
pop
inc
mov
aas
sbb
jecxz
dec
cltd
rorb
pop
mov
icebp
xor
jl
cmp
push
add
mov
adc
movsl
pop
cmpsb
fldenv
addr16
inc
mov
pop
jne
push
inc
ret
lcall
test
test
jmp
adc
dec
lock
es
sbb
pop
or
out
cmc
fisubrl
dec
fstpt
aam
int
dec
pushf
mov
in
sbb
jp
jb
pusha
ljmp
add
out
shll
fs
adc
and
dec
pop
sub
xchg
sarb
orl
dec
and
mov
aad
not
sbb
and
push
add
mov
add
pop
mov
lcall
mov
mov
xor
mov
dec
inc
ss
out
enter
popl
in
daa
cmc
add
mov
sbb
out
mul
cli
mov
jb
mov
into
mov
in
push
repz
outsb
add
xchg
or
mov
mov
cld
jae
xchg
mov
jge
jno
test
or
or
insl
sub
idivl
ret
popa
in
xchg
addl
dec
stos
inc
repnz
cmpsb
mov
cwtl
jle
xor
jo
arpl
push
xchg
and
xchg
xor
je
mov
rcrl
inc
sahf
test
cmp
pop
sub
xchg
out
call
push
std
ret
or
mov
rcr
sub
add
inc
jne
pop
pop
ds
fcoml
ret
fndisi(8087
push
mov
fcmovbe
inc
xor
gs
fs
into
xchg
clc
test
mov
cli
mov
add
jg
rcr
mov
mov
cmp
jp
adc
xchg
adc
mov
fs
jo
cs
call
clc
fdivs
stos
mov
dec
lock
movsb
inc
fcmovnb
pop
mov
fdivs
out
loope
movsl
push
add
loope
js
popf
je
push
fdecstp
xchg
or
test
jecxz
imul
sub
sub
mov
out
adc
jnp
repnz
sub
dec
xchg
xor
cli
fisubs
leave
mulb
lcall
cmp
stc
cmpl
call
aaa
aas
and
xor
int
cs
je
jg
iret
sbb
dec
jge
out
push
mov
lods
xchg
sbb
loopne
jge
push
lds
fistps
jmp
ds
call
xchg
out
mov
xor
inc
loop
xchg
mov
pop
push
mov
cmpl
and
pop
mov
fsubrp
jp
bound
xchg
movsl
loop
daa
add
or
mov
jg
xchg
xchg
xor
pop
and
jb
sar
xchg
sub
xor
subb
inc
shlb
daa
iret
lea
movsl
jle
test
iret
sbb
xchg
mov
and
mov
rcl
xor
ret
sub
cli
cli
jg
into
iret
nop
popf
imul
aad
cmp
and
imul
es
rcrb
inc
ds
lret
addl
mov
mov
nop
mov
into
or
popf
lret
aaa
outsb
mov
ret
es
dec
mov
ds
push
iret
adc
or
into
lea
mov
dec
xchg
daa
insl
adc
mov
mov
add
jmp
cmp
xchg
dec
bound
std
inc
outsl
pop
stos
dec
jae
fisttps
daa
shrl
pop
dec
sub
cmp
sbb
and
aad
scas
call
sub
dec
sub
incl
jmp
in
orb
jae
push
mov
aad
sbb
ljmp
lods
or
out
xchg
js
sbb
je
and
mov
or
push
sbb
aas
stos
js
ret
add
xlat
movsl
xor
xchg
jmp
popf
cmc
inc
jne
lods
cmp
jecxz
pop
stc
push
mov
daa
test
imul
xchg
push
mov
xchg
jmp
dec
push
loop
and
and
fnstcw
jg
out
sarb
sub
adc
fucomp
aam
cltd
mov
push
sub
cmp
movsb
in
aaa
nop
cmovo
and
xchg
aad
fsubl
popf
adc
dec
push
mov
decl
sub
mov
and
ror
or
inc
jle
pop
xchg
repnz
add
adc
jo
subl
push
adc
cmp
mov
jbe
jnp
jno
jne
test
cltd
test
pop
sbb
and
jae
add
add
movsl
nop
pop
outsl
dec
add
hlt
mov
daa
rcrl
jno
imull
pushf
jo
inc
jno
jge
fsubs
enter
std
xlat
ret
adc
int3
mov
daa
outsl
loopew
ja
mov
pop
push
inc
cmp
sub
repnz
daa
push
scas
dec
imul
pop
int
roll
arpl
push
xlat
rcll
rorl
sub
mov
mov
cmp
pop
push
cmp
add
gs
cmpsl
in
mov
xchg
lock
insl
test
fsubl
dec
loop
in
jae
movsl
sbb
or
outsl
jge
jle
adc
jmp
inc
stos
and
inc
rcr
cmpsb
je
lret
cli
lcall
ret
cli
pcmpeqb
fldt
test
pusha
pusha
fsts
cmp
stos
pop
out
inc
out
pop
pop
jp
cmc
lret
cltd
cwtl
and
mov
outsl
test
lahf
mulps
jecxz
testl
jae
fcoml
pop
xchg
push
dec
rcrl
xchg
nop
sbb
jecxz
adc
pop
or
neg
push
loope
cvttps2pi
xchg
mov
fdivs
xchg
push
pop
testb
nop
xchg
jne
daa
subl
in
jnp
pop
sbb
fistps
insl
mov
push
xchg
mov
lods
jne
mov
sbb
ljmp
adcb
sbb
fldenv
lods
jmp
rcll
dec
sub
cmp
rclb
popf
popw
mov
insb
sbb
xchg
sbb
fmuls
xlat
push
adc
in
mov
clc
xchg
loope
rol
adc
shlb
in
jne
sub
fildl
fstps
jns
jle
push
pop
dec
nop
jecxz
mov
pop
adc
sub
mov
pop
in
jecxz
cmpb
adc
jmp
xchg
int
mov
mov
rolb
inc
xor
mov
push
aad
push
fwait
pop
ret
jbe
outsl
mov
inc
andb
pmullw
push
push
shrl
cwtl
jns
dec
xchg
cmp
leave
aad
test
push
jecxz
xchg
or
clc
cmp
jae
jge
pop
cmp
jno
jp
add
mov
adc
push
fdiv
xchg
jl
xchg
xchg
inc
xchg
lret
dec
lahf
icebp
adc
pop
inc
fistpl
loop,pn
push
jo
ja
jne
clc
insl
nopl
sub
movsb
and
clc
fldenv
enter
mov
pop
cmpb
mull
sbb
rorl
pop
test
mov
add
pop
mov
lahf
sbbl
lock
addr16
push
xchg
mov
out
out
loope
fs
or
js
out
popf
hlt
mov
dec
cmp
xchg
orb
mov
push
std
xor
and
xchg
ds
dec
out
std
enter
mov
lret
pusha
xor
and
jo
mov
pop
push
int
int3
adc
or
aam
loope
mov
push
xor
adc
cltd
imul
daa
push
jbe
icebp
fidivrs
pop
xchg
cmpsw
xor
xor
and
cld
es
outsl
add
sbb
sahf
sub
jmp
mov
mov
and
ret
add
lcall
arpl
lods
mov
push
out
push
movsl
cs
jmp
sub
jno
cmp
shll
dec
sti
xchg
ja
inc
ret
fcompl
cmpsl
jmp
into
mov
dec
shr
jae
push
jg
mulb
push
and
xor
mov
inc
test
lret
cmpsl
rclb
imul
or
sub
shlb
pop
cs
cltd
repnz
jbe
and
dec
insb
aaa
stos
fiadds
popf
xchg
shrl
dec
mov
sub
daa
add
jo
sub
mov
aam
xchg
mov
cmpsb
jns
cmpsl
in
hlt
add
xor
mov
int3
cmp
xor
sub
cmp
sbb
jae
push
dec
adc
add
push
pop
pop
inc
out
sub
pop
mov
sbb
in
fcomps
shr
cs
je
xchg
add
mov
fidivl
sub
or
adc
test
je
sbb
pop
mov
inc
jne
sub
test
std
inc
iret
outsb
je
sub
dec
push
pop
in
shld
bound
ret
cmc
icebp
test
cmp
add
stc
sbb
insl
js
das
jge
enter
std
enter
sub
inc
ror
sub
popa
cmpsl
push
xor
xor
jb
mov
cmp
aaa
dec
mov
mov
push
xor
adc
loopne
adc
xor
add
stos
testb
fnstenv
ds
or
and
inc
lcall
xlat
add
mov
shrl
xor
pop
loope
mov
daa
not
or
push
pop
mov
mov
je
testb
inc
ret
cmpsl
xchg
dec
cmc
enter
sub
sbb
stos
ret
and
insb
sbbb
mov
sbb
leave
dec
fs
andl
xchg
dec
gs
and
aam
in
pop
insb
bound
rolb
int
std
test
jnp
rcr
adc
dec
xor
scas
mov
imull
stos
fadds
lcall
jle
iret
addr16
scas
adc
lea
in
and
pusha
add
out
lods
sahf
ljmp
sub
rorb
popa
outsb
rcrb
pop
gs
not
fidivrs
mov
jecxz
xchg
or
jo
jecxz
inc
arpl
and
mov
popf
das
sbb
arpl
dec
or
hlt
sarl
daa
lcall
inc
sub
cmc
sub
and
divb
and
adc
cmc
dec
das
push
popf
aad
mov
lock
or
test
aas
clc
mov
push
mov
cmc
movsb
inc
loop
mov
xchg
outsb
cmp
sub
inc
insb
push
jmp
nop
scas
push
adc
cmc
add
dec
and
push
sbb
loopne
mov
dec
test
vrangesd
mov
push
jnp
fs
lods
mov
pop
add
and
adc
add
loope
int
xor
push
cmp
frstor
push
lcall
sbb
mov
hlt
in
pop
lahf
addr16
pop
mov
fistpl
sahf
adc
fidivrl
scas
dec
cs
aam
int3
inc
in
fadds
lcall
cmp
data16
scas
shl
sbb
ss
aam
fnstenv
sbb
cs
xchg
push
insb
cmp
mov
stos
dec
lcall
cwtl
out
loope
mov
mov
mov
push
inc
loop
insl
push
cmp
popa
xchg
pushf
cld
xchg
cmp
idiv
xor
inc
mov
sbb
movhps
mov
pop
mov
dec
lock
dec
and
pop
sbb
adc
adc
mov
in
ja
das
pop
or
imul
lds
daa
imulb
pop
hlt
xchg
notb
push
cld
push
mov
inc
dec
es
nop
movsl
lods
jns
bnd
and
mov
sbb
insb
sub
fcmovnu
xor
add
and
lret
pop
push
dec
push
jb
push
mov
mov
and
ficoml
fcoml
int
sbb
loop
shl
add
and
sub
jns
add
js
mov
dec
mov
jmp
pop
and
aad
mov
popa
pop
sub
scas
lcall
lahf
mov
pop
loop
adcl
aam
xor
loopne
jo
shlb
mov
pop
daa
jge
dec
icebp
jg
xor
pop
jne
loopne
repz
jl
mov
cmc
scas
in
mov
and
ret
pop
mov
jbe
ljmp
test
aas
or
or
sbb
push
sarb
jno
arpl
dec
dec
push
pop
push
std
xchg
xchg
fistpl
or
cmpsb
mov
xor
and
in
mov
push
movsl
add
call
add
mov
jne
je
cmp
dec
dec
repnz
xor
cwtl
push
and
sti
pop
sub
xchg
pop
jnp
hlt
in
insb
in
ss
adc
insb
jecxz
xchg
daa
lahf
arpl
addr16
hlt
sub
mov
loop
jae
jl
xor
lock
pop
mov
mov
mov
inc
jge
push
and
jno
adc
pop
sbb
dec
mov
call
pop
fsts
data16
push
sahf
cld
jnp
loop
mov
sbb
mov
cmp
call
jmp
cld
sub
int3
and
inc
test
jp
imul
inc
fnstsw
jle
lcall
js
lret
mov
lods
daa
xchg
xor
adc
push
jne
pusha
je
sub
pusha
jmp
daa
gs
push
pop
cmpl
mov
cwtl
into
out
je
cltd
xor
cmp
nop
cmp
jp
imul
jae
and
pop
jl
scas
pop
cli
shl
int3
daa
data16
pop
adc
jo
hlt
scas
jecxz
mov
fdivl
xor
inc
leave
or
xchg
mov
push
outsl
daa
cmpsl
adc
popf
xchg
pop
cltd
adc
test
popf
rorl
jg
mov
clc
mov
sarl
and
mov
mov
mov
je
cwtl
cmp
jecxz
sahf
mov
mov
add
xor
lahf
sub
or
daa
push
add
into
fnstenv
push
lds
pop
mov
lret
dec
pop
mov
lds
mov
mov
add
lods
ds
adc
insl
movsb
xchg
push
add
repnz
jg
dec
stos
mov
mov
mov
movsb
or
ss
sti
push
mov
cmp
mov
sub
js
jmp
add
push
mov
sbb
ja
fcompl
jge
stos
add
or
inc
rcll
mov
aas
es
mov
mov
dec
callw
es
test
les
push
sub
adc
pop
dec
aam
ficoms
int3
lds
xchg
ss
mov
cmpsb
fnstenv
adc
mov
lahf
sub
movsl
hlt
andl
mov
mov
in
sbb
and
imul
cmpsl
add
int
sbb
add
inc
lcall
repnz
div
mov
inc
fsubs
dec
int3
out
xor
mov
add
aad
pushf
sahf
mov
push
mov
movd
call
cmc
adc
shrl
outsl
data16
call
outsl
xor
cwtl
popf
xchg
fbstp
out
mov
in
sbb
popf
pop
sbb
cltd
cmp
dec
idiv
pop
clc
mov
or
push
cwtl
sub
pop
inc
jp
pop
xlat
and
out
movsl
mov
negl
aas
loopne
mov
lcall
stos
fwait
jne
int3
bound
sub
mov
rcrb
add
sbb
aam
bound
or
add
data16
mov
repz
push
sbb
mov
bound
dec
mov
xor
shld
fstps
idivb
outsl
mov
mov
inc
push
sbb
sti
ret
push
je
sub
pop
inc
add
xor
mov
sub
popa
stos
jb
ret
jnp
lods
orl
push
push
bound
jle
cmp
pop
outsb
sti
insb
push
out
push
mov
adc
dec
mov
movsb
out
sbb
fadd
clc
jno
mov
or
push
inc
sub
push
lcall
outsl
cmpsl
jp
int
mov
jmp
inc
int3
je
fdivp
inc
add
jb
mov
sahf
test
lds
xor
insl
push
push
ds
add
sub
imul
arpl
push
mov
mov
mov
js
in
aas
lea
arpl
mov
out
pop
cmc
out
push
cltd
push
call
imul
rcrl
add
shll
mov
ret
les
rcll
push
and
das
adc
in
popa
dec
enter
popa
and
add
jb
or
cmp
ds
shr
test
stc
mov
mov
shld
and
sbb
mov
inc
cmp
pop
lahf
mov
divb
push
xor
mov
je
and
ljmp
out
andl
xor
pop
out
jp
arpl
fsubp
sahf
xchg
stos
xchg
je
stos
je
daa
inc
push
mov
out
outsb
sbb
sub
insl
lods
loop
adc
and
add
or
mov
xchg
dec
fimull
ror
rorb
jmp
jae
scas
sub
inc
repz
shlb
mov
cmp
and
clc
push
jge
jmp
daa
mov
out
dec
sub
push
mov
daa
or
cmp
push
sbb
hlt
cmpsb
hlt
xorl
jl
orl
movsb
jo
mov
xor
jg
cmp
loopne
dec
insl
or
push
jbe
clc
mov
dec
loopne
bound
push
and
movsl
scas
inc
insb
xchg
xchg
fldl
xchg
lret
pop
xor
aas
or
data16
mov
add
xchg
cmp
shll
scas
mov
or
std
pushl
test
jns
ret
cld
je
push
xchg
jnp
xchg
mov
xor
cmp
inc
lret
push
in
dec
cli
popf
jne
xchg
xchg
lds
sbb
cwtl
cmc
sub
stos
pop
cli
cmp
pop
jne
fcompl
and
mov
cli
int
jnp
push
pop
aam
and
dec
fdiv
imul
js
shll
xchg
xchg
aam
movsb
mov
mov
adc
inc
mov
ret
stc
mov
adc
subl
cmp
cmpl
jmp
mov
cmp
das
lock
mov
lock
cmp
xchg
stos
jae
imul
pop
hlt
lret
imul
inc
pusha
or
mov
mov
bound
dec
movsl
ds
movsl
jge
das
fidivrl
rcl
or
mov
cmp
outsl
js
faddl
ret
sarb
jle
outsl
fnsave
test
cmp
sub
jg
pop
xchg
and
inc
lcall
insl
lret
sub
sub
lods
dec
push
mov
xchg
jl
aas
mov
cmpsb
and
out
sbb
push
fiaddl
clc
dec
iret
lret
cmp
push
fisttps
scas
inc
in
jns
mov
jae
and
jb
cltd
jo
cltd
movsb
testb
add
rolb
add
and
sbb
sub
jno
xchg
dec
fwait
pop
pop
and
cmp
inc
int
and
mov
stos
jmp
cli
ljmp
push
sbb
xchg
add
sbb
jb
fcmovb
jg
iret
jl
repz
int3
decl
jl
in
lret
loop
xchg
mov
sbb
out
push
filds
imul
jp
cld
popf
add
dec
adc
xor
jb
sbb
frstor
sub
or
mov
adc
jo
and
outsl
loop
mov
and
pop
hlt
insl
std
mov
lods
gs
out
out
fmull
cmc
add
out
lret
mov
xor
loope
das
push
repnz
xor
sbb
mov
mov
jp
lds
out
sahf
jecxz
cmp
dec
dec
insl
xor
add
jo
gs
mov
hlt
push
inc
in
insb
out
ds
addr16
shll
sbb
jge
sub
mov
imul
jl
jo
pop
loop
add
sbb
inc
push
pop
mov
ljmp
shll
jo
inc
inc
fmuls
pop
dec
subl
inc
pop
imul
mov
dec
jae
rcrl
in
jle
mov
sbb
jno
pop
or
loop
stos
sub
divl
push
and
nop
mov
mov
push
fldl
pusha
sub
jne
fsts
sub
mov
loope
in
cmp
cli
daa
xchg
div
aam
adc
arpl
in
das
mov
dec
jecxz
pop
pusha
neg
mov
mov
addr16
push
shrl
push
dec
loopne
into
mov
mov
push
sbb
in
adc
push
cmp
jecxz
lods
lods
fsubrs
mov
push
push
or
fwait
bound
sti
pop
push
jmp
ds
jmp
shl
add
ret
pop
cmp
push
sahf
setae
cmpsl
fwait
stos
mov
negb
or
and
imul
imul
xchg
sbb
xor
in
enter
mov
push
fs
add
cli
sbb
jl
adc
jno
int
mov
lahf
pop
ret
ja
pop
sub
sub
sbb
adc
dec
mov
testl
pop
js
and
xchg
or
add
in
cmp
in
inc
js
push
mov
pop
sbb
mov
dec
sahf
cmp
loopne
das
push
add
aas
jbe
sti
js
and
inc
flds
push
imul
pop
enter
or
mov
bound
orb
cs
mov
push
adc
jbe
push
xchg
and
pop
imulb
xchg
repz
mov
and
cli
cmpsl
xchg
pop
xor
pop
and
xor
cld
and
int3
or
cmp
inc
dec
push
fndisi(8087
pushf
sub
stc
sub
outsb
jp
dec
push
inc
hlt
stos
jnp
out
xchg
gs
clc
out
mov
pushaw
dec
jp
dec
pop
arpl
mov
imul
cli
in
ja
mov
mov
push
jns
rcll
pop
dec
xchg
jne
sub
mov
jnp
insl
ret
inc
cmp
inc
jle
test
xchg
or
sbb
mov
sub
push
out
insl
lret
push
and
mov
cmp
sub
mov
pusha
test
rcrl
loope
add
cmp
mov
loope
cmpsl
and
les
clc
fistpl
xchg
pushf
xor
adc
xlat
add
movsb
insl
gs
sti
daa
int3
adc
aad
jl
mov
jmp
add
jns
in
add
push
mov
xchg
div
mov
dec
lret
cmpsl
jnp
bound
mov
mov
psubq
out
lcall
xorl
stos
aam
cmp
mov
fptan
sbb
out
add
in
ret
push
aam
dec
push
ss
mov
or
jnp
push
dec
xchg
pop
jl
out
or
xchg
inc
mov
popa
sahf
lcall
sub
xchg
mov
or
inc
insb
or
adc
popa
fstp
lds
jnp
mov
out
push
adc
jno
inc
neg
call
xlat
repz
jae
mov
pop
inc
pop
xor
fisttpl
daa
in
inc
xchg
movsb
pop
shr
xor
xchg
lods
insb
rcll
mov
pop
sub
mov
lock
gs
or
lahf
and
cwtl
stos
popa
ds
xor
adcb
sub
pushl
and
test
mov
mov
mov
arpl
cwtl
call
push
outsb
pushf
sub
js
sti
jl
dec
cmp
ss
insb
mov
cmpsb
add
loop
mov
lgs
jbe
cld
push
loope
sub
mov
rcrb
out
in
jno
mov
fidivs
scas
cmp
jp
cmpsb
in
ficoml
mulb
shlb
movsl
pop
push
push
push
cmp
inc
out
lret
sbb
insl
dec
insb
pop
lcall
rclb
pop
add
push
in
mov
push
in
aad
inc
test
leave
or
mov
test
inc
clc
iret
test
pop
xchg
stos
jb
in
push
imul
jmp
movsb
int3
out
push
dec
jne
jmp
push
cli
outsl
flds
leave
xchg
lret
scas
sbbb
or
mov
mov
adc
jle
mov
add
stos
pop
cmpsl
xor
repz
mov
lods
cltd
scas
aad
cmpb
stc
lret
or
hlt
jmp
enter
scas
jno
fdivr
movsl
pop
adc
pop
cmp
or
addb
test
jle
add
outsb
in
cmp
xchg
scas
test
xchg
jne
mov
lods
in
inc
xchg
out
lahf
mov
daa
popa
mov
push
adc
lret
jae
dec
lret
adc
jmp
sub
loopne
cmp
cltd
aaa
ss
faddp
in
shrl
sub
jl
inc
cmp
lahf
sub
bnd
push
shll
push
sub
push
jnp
xchg
add
shrb
fs
cld
dec
movsl
xchg
pusha
cmp
enter
sbbb
sahf
jg
sub
adc
test
iret
sar
mov
sbb
mov
jle
scas
lds
sub
fisttps
ss
and
or
enter
mov
inc
sub
repz
mov
dec
pop
imul
cmp
push
xchg
xchg
jnp
fwait
push
add
das
pushf
or
adc
jle
aaa
dec
into
mov
rclb
adc
pop
adc
pop
outsl
iret
clc
mov
lods
in
lret
jl
push
inc
rorb
mov
mov
in
fbstp
adc
dec
sbb
jo
clc
aaa
sbb
test
cmp
pop
mov
addr16
fnstcw
and
test
jge
fs
leave
pop
test
ret
pop
insl
out
pop
insb
push
inc
repz
sbb
pop
push
ds
pop
and
mov
xor
fnstenv
and
jecxz
mov
test
jno
jmp
ret
gs
xor
inc
cmp
arpl
scas
xchg
mov
mov
cmpsb
cmp
sub
inc
pop
repz
test
dec
stc
sub
daa
leave
ffree
cmp
pushf
pop
movsb
stos
es
imul
jg
inc
test
mov
and
mov
shl
jmp
int
push
jle
mov
iret
loopne
xor
sub
mov
movsb
jg
jne
mov
std
push
sbb
lret
int3
data16
pop
or
jle
ljmp
sub
ret
iret
out
push
dec
into
sub
ret
lret
jle
dec
movsb
mov
xchg
mov
daa
add
jno
jle
movsb
push
push
loop
jns
repz
or
inc
jnp
and
stc
inc
cs
fldenv
jo
mov
mov
mov
jns
sbb
mov
add
inc
pushf
aaa
or
test
cld
cmp
out
inc
xchg
pusha
je
test
or
adc
pop
push
jno
mov
cltd
hlt
movsl
pop
scas
aam
into
cmp
addr16
push
ret
mov
add
sti
fisttpl
and
fistl
fcmove
inc
mov
xchg
xor
xchg
cwtl
test
xlat
and
cmpb
and
add
mov
outsl
cli
rclb
mov
sbb
clc
lret
inc
sbb
in
movsl
and
test
jno
insl
scas
cld
faddl
pop
xchg
xchg
mov
je
mov
out
fcomps
cs
sarb
repz
aaa
cmpsb
call
rcrb
mov
sub
fdivl
sahf
add
jp
cmpsl
loopne
in
pop
mov
mov
lret
sub
sbb
aas
lods
mov
and
jae
iret
push
mov
cld
xchg
js
or
cltd
in
xor
pusha
mov
dec
jmp
je
cltd
iret
dec
cmpsl
sbb
inc
rolb
jno
aad
sbb
in
incb
sub
clc
addl
dec
xor
sarb
inc
push
sub
data16
mov
pop
es
loope
mov
sub
jg
sub
cmp
jnp
fldenv
icebp
sbb
adc
iret
mov
push
into
mov
mov
nop
pop
mov
stos
pushf
sbb
movl
mov
inc
idivl
xchg
pop
insl
mov
repz
xlat
sub
or
sub
and
dec
popf
aas
xchg
dec
dec
mov
sub
push
jecxz
imul
shlb
xor
into
xor
dec
aad
outsl
ljmp
add
jbe
call
insl
es
test
add
push
sbb
or
xchg
js
push
pop
mov
icebp
scas
push
xor
lahf
stos
sahf
insb
cmp
inc
mov
shrl
mov
int
sarl
mov
into
ljmp
lret
pusha
push
fucomip
test
cwtl
sbb
lock
adc
fimuls
sub
das
xor
mov
sub
add
imul
xchg
insb
paddd
addr16
and
repz
lret
inc
lock
shl
dec
sbb
fstl
cmc
xor
sub
rcr
and
push
jne
adc
or
xchg
push
adc
or
jle
ret
push
call
dec
push
fldcw
ds
xchg
cmp
lret
aas
test
mov
js
xchg
stos
or
fldcw
push
push
mov
jne
dec
and
cmp
lock
adc
stos
sbb
add
cmp
mov
adc
icebp
xor
cmc
inc
add
push
popa
jle
js
jbe
mov
or
and
sbb
xlat
popa
call
cmpsb
lcall
lret
aaa
pop
test
add
je
pop
aam
rolb
fcoml
imul
mov
pop
add
hlt
xchg
and
cmpsl
mov
repz
ret
pop
add
mov
bound
pop
pop
mov
jbe
data16
mov
push
push
pop
imul
dec
push
insl
cltd
jmp
adc
jae
mov
int
mov
fdivrp
and
cs
add
cs
insb
ljmp
mov
mov
mov
jne
cs
in
dec
in
lock
inc
and
xchg
mov
cwtl
lds
dec
pop
into
xor
cmp
int3
inc
and
shr
in
mov
adc
neg
movsb
mov
push
cmp
mov
inc
mov
std
enter
push
pop
dec
nop
ljmp
pushf
mov
push
mov
mov
mov
aam
aad
lret
and
stc
lahf
mov
push
test
dec
rcrl
and
and
loopne
inc
ljmp
and
mov
iret
insb
dec
xor
cmp
cwtl
sbb
test
jbe
xorb
and
dec
mov
loop
shlb
movsb
jno
mov
sub
inc
lea
mov
daa
add
xchg
out
and
cli
mov
inc
repz
ficomps
out
sahf
ss
xchg
fs
cmp
fdivl
xchg
ljmp
aas
xor
push
xor
mov
mov
in
add
dec
cmp
outsb
or
sbb
pop
rcrb
int
xchg
inc
cli
add
nop
sub
mov
cltd
sbb
xchg
push
loope
jnp
sahf
mov
pop
adc
ljmp
dec
jg
imul
pop
clc
cmp
dec
xor
fisttpl
mov
mov
adc
test
lahf
and
aam
inc
sub
sti
fwait
mov
pop
test
test
sbb
stos
add
inc
rcrb
outsb
jb
sub
mov
xor
mov
into
cmpsb
rol
hlt
int
je
adc
cmp
jp
in
sub
xchg
add
imul
rolb
imul
rcrl
ljmp
xchg
out
push
aas
push
out
pop
mov
mov
xor
cmp
repz
addr16
out
push
scas
stos
test
jecxz
jge
push
ss
das
icebp
fisubrl
and
inc
test
sub
addr16
mov
lods
in
test
dec
xor
out
aad
cmp
call
addb
pusha
ret
lret
rolb
test
in
inc
xchg
rcr
mov
dec
mov
push
mov
mov
push
xor
or
jmp
jo
outsb
ljmp
nop
insb
add
inc
std
jmp
out
js
insb
ror
out
xchg
and
aas
add
jnp
fwait
jne,pn
xchg
test
and
sbb
les
in
or
ss
jno
icebp
push
popa
mov
add
push
mov
rolb
fadd
push
lret
pushf
imul
and
movsl
cmp
mov
repnz
and
and
js
jl
fcompl
xor
fcos
ficompl
sub
mov
sub
ja
pop
mov
mov
mov
sub
je
push
jbe
add
mov
or
cmp
jae
mov
pop
in
sub
adc
sbb
inc
fdivrl
jb
addr16
and
in
daa
sub
hlt
or
jne
mov
into
jl
mov
enter
scas
jl
mov
add
dec
mov
mov
cli
stos
gs
mov
lods
test
jns
jecxz
or
dec
loope
lock
in
jl
pusha
popa
or
fistpl
adc
cwtl
inc
frstor
movsb
scas
lea
fsubs
dec
popa
and
lock
push
dec
mov
fildl
push
push
inc
push
cmp
mov
push
aam
fidivl
in
push
adc
mov
dec
fnstsw
imul
mov
popf
test
add
in
xor
push
mov
test
movsb
hlt
cmp
and
lock
add
lret
fbld
pop
test
scas
lods
imul
inc
xchg
rcll
pop
mov
xchg
push
add
pop
cmp
popa
and
loopne
ret
sbb
sub
fcoms
or
mov
push
paddw
add
pushf
push
leave
mov
lcall
stc
ljmp
lcall
test
or
faddl
mov
and
xor
psubd
movsl
sub
sbb
cmp
pop
pop
xor
addr16
fnstsw
jp
subl
xor
xchg
movsb
xchg
mov
push
das
inc
jo
ja
or
xor
jmp
sub
cmp
test
and
in
test
cmp
aad
stos
cmp
cmpsb
fistl
inc
imul
bound
ret
stc
xchg
lods
jns
xlat
pop
das
scas
ss
arpl
js
lret
mov
xchg
and
call
int3
dec
jb
jns
cltd
jns
lcall
cltd
loope
add
lock
lock
stos
stos
dec
mov
das
mov
loopne
pop
repnz
sbb
test
sub
cmp
or
dec
fiaddl
jp
outsl
lret
nop
subb
push
add
mov
movsl
hlt
xor
fbstp
or
xor
and
xchg
call
pop
push
je
cmc
lods
jl
push
iret
inc
mov
and
loop
pop
test
jle
movsb
xor
andb
jecxz
scas
mov
jno
jp
andl
dec
incb
or
cli
mov
xor
repnz
call
hlt
mov
fcos
or
mov
decb
and
xor
sti
jl
bound
or
ja
rcrb
or
add
add
or
add
xor
shlb
add
shlb
pop
inc
mov
das
mov
cwtl
jb
cmp
push
add
test
push
mov
pop
pop
gs
mov
out
adc
movsb
and
loopne
cmp
rcr
imul
mov
push
or
jmp
dec
xchg
push
push
jb
jne
enter
and
jmp
dec
nop
dec
mov
pop
les
ljmp
cmc
xchg
sbb
outsb
mov
cmp
or
ret
stc
out
in
inc
mov
test
out
adc
aas
mov
mov
hlt
dec
bnd
cltd
xchg
mov
pop
sub
test
adc
inc
adc
inc
xchg
arpl
popa
push
repz
mov
fwait
or
insb
inc
xlat
loopne
subb
mov
shlb
push
mov
adc
fs
lret
lock
insl
cmpsb
sbb
stc
jo
push
data16
aas
pop
ljmp
js
sbb
dec
push
shrl
sahf
push
cmp
aas
fldl
and
leave
cltd
sahf
sti
lods
mov
mov
push
sub
push
mov
cmp
inc
clc
push
hlt
pushf
cmp
xor
arpl
test
fmull
jmp
cmp
bnd
int3
incb
sarl
jg
add
gs
cltd
mov
inc
push
sub
out
jl
or
pop
jmp
stos
inc
or
dec
sub
enter
pusha
push
push
idivb
mov
pushl
sub
add
fwait
mov
and
test
jmp
in
adc
push
cltd
push
cld
mov
imul
js
clc
adc
jb
jmp
stc
mov
pop
inc
cmc
aad
mov
sti
nop
sub
mov
rcll
movsl
clc
int
aad
dec
mov
test
in
adc
pop
adc
clc
repz
and
and
aas
add
stos
movsl
xchg
dec
fdivl
repz
add
cld
mov
sub
inc
cmc
test
jecxz
jnp
add
lock
addb
pop
repnz
cmp
icebp
lret
mov
mov
fstpt
enter
popf
push
arpl
cli
lret
sbb
shrb
lahf
dec
and
pusha
das
in
jnp
xchg
cld
mov
mov
and
dec
lods
outsl
push
ds
cmp
sub
dec
cmp
fidivl
xchg
leave
loop
or
jo
adc
jne
lods
adc
enter
jp
sbb
push
mov
ret
and
lret
cmpsb
paddb
aad
enter
add
inc
mov
pop
sbb
sbb
stos
ljmp
inc
sbb
or
or
int3
sbb
or
stos
div
mov
add
pop
fdivs
inc
test
shlb
jge
and
jg
sub
push
add
jno
das
loopne
fsubl
sahf
jb
jle
stos
add
test
std
setnp
out
cli
xchg
mov
les
and
lcall
cs
int3
pop
cmp
pop
push
jae
mov
lods
mov
bound
cmp
cltd
repz
adc
sub
dec
cli
mov
bound
outsb
ret
sbb
fildll
test
xor
xchg
loop
pushf
jle
cmp
mov
xchg
push
pop
sub
mov
cltd
repnz
popa
loop
xorl
cmc
cmp
cmp
jae
sub
andb
sub
mov
xor
sub
mov
setge
adc
setnp
and
sar
jge
fs
dec
test
mov
mov
sub
sbb
push
mov
repz
loopne
out
out
dec
xchg
push
lock
jle
pop
insb
jl
popa
pop
or
shrb
xor
add
pop
dec
stos
fisubs
add
movlps
out
xchg
mov
inc
inc
stos
and
jge
xchg
jp
insb
xchg
mov
fistl
je
push
outsb
pop
dec
daa
cmp
xor
outsl
js
dec
mov
mov
and
stos
xchg
clc
jle
ljmp
inc
cmpsb
sarb
push
lods
stc
clc
outsl
dec
pop
mov
jg
add
mov
inc
stos
inc
scas
pop
bound
pop
loope
loop
xchg
cmp
xchg
data16
mov
sahf
aam
jg
sbb
repz
sbb
leave
loope
jno
popa
enter
cmp
sub
hlt
addr16
and
xchg
sub
jmp
mov
sub
cmpsb
shll
mov
cmpsl
jne
xchg
jp
addl
sahf
xlat
cld
mov
pusha
movsb
inc
or
xor
aam
cmp
popf
jmp
sti
push
shlb
push
sub
cltd
sbb
and
movsb
insl
in
xchg
add
lret
pusha
imull
movq
pop
call
and
adc
pop
jmp
enter
shlb
mov
push
push
insb
push
negl
mov
outsl
testl
dec
std
xchg
inc
mov
iret
inc
mov
das
lods
sahf
sbb
mov
clc
inc
stos
xchg
ret
hlt
xchg
sahf
jns
repnz
shrb
scas
rolb
lcall
cmp
cmp
cwtl
inc
cmp
repnz
dec
shrl
sarb
xlat
cmp
ds
sub
out
jns
inc
jb
mov
xchg
mull
js
stc
sbb
or
jno
fxch
sbb
in
scas
xchg
mov
add
ret
jno
insb
jp
cmp
je
jns
xchg
aaa
sub
addr16
mov
dec
inc
or
adc
or
lods
adc
pop
push
stos
xlat
jae
aas
sub
jo
mov
rolb
inc
movsl
out
adc
push
add
test
dec
mov
stc
lret
add
pushf
outsb
pmuludq
outsb
and
sub
into
insb
sub
sub
push
and
rcl
mov
inc
mov
add
imul
sub
jge
leave
lods
sub
imul
sbb
cmp
cmc
sub
pop
enter
push
or
pop
in
jmp
sbb
inc
fwait
fwait
or
adc
stos
pop
xorb
mov
adc
std
pusha
sub
stos
and
scas
pop
pop
js
lods
sbb
xor
cmp
mov
cmp
fwait
enter
cmp
add
hlt
pop
cld
insb
scas
mov
lea
sbb
sar
mov
cwtl
hlt
fwait
pop
lock
out
mov
cmp
mov
test
xor
or
into
and
xchg
sub
mov
push
dec
jne
or
mov
hlt
sub
and
imul
cs
or
into
addr16
adc
mov
pop
push
pushf
jle
roll
or
icebp
jle
pop
mov
mov
xchg
dec
outsl
pop
mov
andl
cmc
pop
push
pusha
pop
cmp
fadds
mov
hlt
cmp
into
xor
fdiv
loopne
sub
pushl
ljmp
nop
cld
pop
fildll
and
push
adc
test
add
mov
add
addr16
pop
stos
add
xchg
lods
loope
mov
fildl
outsl
cmp
sti
call
lcall
mov
pusha
dec
push
sub
cmp
lea
jp
jb
insl
hlt
in
sbb
subb
pop
int
push
cmpsl
inc
mov
dec
out
or
je
mov
xor
loop
icebp
cmp
and
data16
jb
push
rcrl
pop
xchg
xor
aas
popa
int3
repnz
pusha
test
ljmp
add
ja
mov
movsl
imul
adc
inc
cmpb
push
testl
cmpsl
dec
mov
dec
dec
add
xchg
cmp
jmp
ds
testl
push
xor
dec
cmp
cmpsl
push
lcall
arpl
push
sub
lcall
clc
pop
and
adc
insb
inc
ds
ja,pt
pop
and
daa
out
imul
push
lcall
xchg
or
call
mov
pop
in
mov
sbb
dec
jle
pop
inc
lock
mov
mov
push
jmp
lock
inc
jns
out
sbb
divl
addb
sti
jle
movsb
push
add
adc
xchg
sbbb
mov
jne
pop
mov
loopne
mov
sub
movsl
ja
ja
push
adcb
sub
daa
xor
or
and
xor
sub
ss
lods
xchg
mov
out
ret
sahf
mov
pop
xchg
pop
daa
sub
xchg
mov
jo
mov
lea
in
jnp
and
mov
cmc
mov
fs
push
xchg
or
mov
rcr
bound
mov
divb
or
dec
stc
pop
cmp
jno
scas
les
jnp
out
inc
cmp
loope
jle
sbbl
cmpsb
test
or
dec
adc
pop
pop
pusha
add
enter
insl
in
in
aas
xchg
adc
dec
stos
push
lds
sahf
stc
bound
pusha
mov
das
push
dec
jo
sarb
sub
ret
sbb
adc
loope
pop
lahf
sbb
mov
in
sub
fldenv
pop
mov
ret
loop
pop
push
xor
add
cpuid
aas
in
ja
jb
pop
cwtl
mov
xchg
xchg
int3
mov
jb
dec
test
fists
imul
and
cld
xorb
lahf
and
sub
leave
xchg
shlb
inc
cmp
xchg
dec
pop
mov
mov
inc
lods
xor
cltd
sbb
in
inc
imul
outsl
std
or
adcl
addb
xchg
aas
jno
cmc
pushf
inc
push
inc
or
pushw
call
pop
xor
pop
xchg
or
daa
ret
dec
leave
sbb
out
dec
jno
in
push
fs
sahf
fstps
jecxz
xchg
inc
jbe
movsb
or
add
xor
rol
das
mov
jno
mov
mov
pop
ret
pop
push
pop
pop
adc
fcmovne
push
sub
push
in
add
test
roll
dec
rcr
inc
fsubs
int
add
pop
jae
lock
into
adc
pushf
nop
mov
loop
sti
popa
sbb
pop
in
aad
out
or
jno
fwait
adc
fwait
dec
and
jno
pop
push
mov
add
xchg
loopne
scas
inc
xor
cmp
inc
rcrl
adc
les
dec
movsb
js
movsl
or
xorb
out
and
clc
ljmp
dec
or
adc
rcrb
sbb
push
and
inc
cmpsb
out
rcll
jle
or
add
popa
or
in
sub
mov
std
out
mov
dec
xchg
jbe
mov
aas
adc
cltd
mov
and
adc
jns
xlat
cmpl
shlb
push
and
xchg
push
jno
rol
andb
or
adc
dec
lret
addr16
cmpsb
pop
jmp
aaa
into
pop
jb
stos
and
dec
push
lcall
pop
adc
xchg
cld
adc
cli
or
pop
sahf
ja
jae
mov
mov
in
scas
adc
inc
loope
xchg
bound
add
fs
or
mov
xlat
push
jp
mov
xor
mov
mov
pop
jno
pop
into
pop
shl
cmp
sbbb
cmp
bound
imul
push
rcr
lods
roll
adc
fmuls
mov
stc
sbb
pop
inc
mov
cmp
insl
mov
nop
divb
mov
roll
cltd
adc
lea
sbb
or
or
and
cmpsl
idivl
pop
sub
shlb
cwtl
leave
mov
push
jl
inc
sahf
iret
xor
mov
sub
jnp
arpl
mov
xchg
jle
jb
fwait
bound
and
or
dec
pop
jb
repnz
mov
or
inc
nop
sub
adc
inc
popa
imul
rorb
cmp
into
pop
out
dec
pop
andb
push
and
mov
out
pop
dec
mov
inc
popa
push
xchg
and
pop
adc
scas
xchg
arpl
xchg
lods
ret
mov
push
mov
fistpl
outsl
std
test
call
xor
lret
outsl
jecxz
xor
test
sbb
xlat
imul
sub
lock
arpl
sbb
and
ss
sbbb
orb
jle
xor
mov
mov
jle
mov
add
fdivrs
xor
dec
fnsave
or
andl
je
mov
movsl
ret
sbb
test
mov
sbbl
adc
inc
push
dec
inc
dec
outsb
in
jne
insb
int
jmp
ljmp
test
mov
mov
out
mov
repnz
xor
pop
ljmp
mov
sbb
aad
shlb
dec
fstl
popf
pop
mov
sbb
cmp
in
cltd
daa
fisubs
rorb
jg
fildl
lcall
pop
je
dec
aam
xchg
setge
pop
or
dec
es
pop
jge
push
test
sbb
mov
dec
add
lahf
pop
test
cmp
mov
pushf
loopne
shl
jl
jg
pusha
icebp
mov
pop
out
hlt
int
and
aad
movsl
dec
fwait
jae
dec
push
jbe
stc
fsubr
clc
mov
push
test
xor
rcll
arpl
in
add
fsts
mov
xlat
mov
mov
xor
imul
lret
test
dec
int3
push
cmpsb
out
mov
clc
mov
mov
lret
cmpsl
xor
lahf
test
or
pop
pop
xor
out
and
pushf
sbb
inc
jge
mov
xchg
fwait
cmp
and
leave
cmp
nop
dec
sub
jle,pn
arpl
or
push
daa
xor
stc
fs
dec
test
pop
pusha
sub
sub
lods
mov
je
mov
mov
decb
or
je
jbe
movsl
movsl
decl
test
repz
add
cmp
dec
sub
in
test
push
outsl
int3
mov
jle
outsl
addl
add
cld
jae
adc
lcall
sub
sbb
cmp
lcall
popa
repz
insb
cs
int
add
sub
cwtl
movsb
push
ds
pusha
ret
add
fiaddl
xlat
xor
or
cmpl
push
scas
clc
or
cmp
into
mov
pop
lock
loopne
imul
ljmp
jno
icebp
jae
push
add
jb
pop
rorl
pop
hlt
xor
lock
jp
jg
addb
iret
push
mov
fcmovnb
les
movsl
add
xor
pop
out
inc
jle
sub
out
ret
xor
xchg
shlb
in
inc
negb
loope
std
rorb
mov
fmul
mov
xor
xchg
lea
nop
outsb
cmpb
cwtl
xchg
cmp
ficoms
popa
imul
push
fidivrl
es
and
sbb
dec
or
or
ljmp
test
daa
filds
and
pop
out
dec
xor
or
fs
mov
shrl
mov
add
inc
fists
sub
lret
ljmp
cli
and
lods
push
and
sarb
add
arpl
jnp
sbb
sub
js
cmp
and
sbb
popa
mov
in
jb
arpl
fsts
into
xlat
jmp
mov
imul
pop
in
loope
cmpsb
in
inc
imul
sbb
js
mov
inc
mov
dec
in
add
sarl
fwait
cmpsl
mov
jle
in
pop
lahf
repz
cmc
lea
pop
lods
adc
xor
dec
aad
mov
bound
dec
clc
inc
int
lcall
lea
adc
iret
mov
jo
scas
sub
jle
outsb
stos
push
or
xor
outsb
push
mov
repz
xor
sub
mov
jae
fbld
arpl
dec
lahf
aam
mov
imul
scas
addb
test
outsb
jmp
aaa
imull
adc
dec
fadds
dec
xchg
fcomip
jg
jp
cmc
sub
popf
scas
adc
jo
addl
arpl
call
push
loopne
fs
pop
insb
xor
dec
inc
xlat
nop
sbb
mov
dec
adcb
js
xchg
xor
lock
ja
daa
and
mov
cmp
mov
adc
dec
mul
in
jns
pop
movb
int3
hlt
iret
push
mov
adc
inc
shrl
sub
mov
inc
mov
pop
std
dec
sahf
or
adc
xor
inc
into
lods
pop
clc
stos
xor
ljmp
jp
imul
mov
and
and
or
lock
mov
mov
inc
xchg
andb
or
mov
mov
das
mov
adc
sub
jns
loop
subl
shll
mov
push
adc
push
outsl
fistps
pop
sahf
lods
adc
jbe
pop
fdiv
aam
adc
jcxz,pt
cmc
pushl
xlat
test
mov
movsb
cs
dec
inc
call
ret
lods
jecxz
mov
cmpb
push
rcrb
scas
or
ret
icebp
push
push
xchg
xchg
andb
es
je
cmc
in
push
or
mov
roll
into
inc
movsl
push
les
test
cmp
repnz
ret
ja
pusha
outsb
into
scas
dec
imul
ficoms
aad
out
push
mov
inc
nop
mov
mov
andl
jge
mov
and
sub
mov
dec
iret
mov
scas
cmp
rcrb
dec
push
lods
icebp
add
sbbl
in
out
in
stos
pop
in
cwtl
call
leave
not
pop
sub
cmp
or
push
xchg
push
hlt
in
cmc
pop
xchg
repz
bound
movsb
in
int3
and
inc
cmp
dec
cmpsl
es
add
daa
xchg
sbb
sub
jmp
xor
xchg
cmpsb
mov
xor
pop
imul
xlat
cs
addr16
addb
lcall
or
shll
ss
push
sub
stos
mov
dec
pop
jnp
pop
mov
sub
pop
xchg
cmpsl
fwait
xchg
cmp
jle
pop
push
arpl
and
cmc
add
loop
in
jp
and
sbb
and
adc
mov
aaa
insb
pop
xor
fcompl
int3
ljmp
mov
mov
mov
shll
dec
stos
xchg
xchg
sbb
push
lret
jmp
nop
mov
fiadds
sbb
push
or
rorl
mov
rcrb
nop
scas
xor
mov
inc
sub
lcall
jge
cmc
popa
test
div
rcl
xor
mov
loope
pop
ja
ficoms
cmp
sub
adc
mov
add
xrelease
cwtl
test
aad
fld
outsl
push
mov
or
or
pop
mov
xchg
add
mov
sub
pushf
ss
ljmp
pop
dec
js
inc
test
nop
mov
jp
inc
aad
jae
and
pushl
pop
daa
shrb
push
jge
mov
push
sbb
enter
sbb
add
inc
xchg
jns
pop
das
or
sti
test
fdivrs
pop
or
shlb
out
inc
cmp
mov
int3
jmp
jo
lds
or
dec
fs
aad
jb
adc
add
sbb
xchg
add
imul
add
jp
scas
lock
and
enter
sbb
add
das
nop
cmp
shl
fldcw
in
lcall
or
mov
inc
xor
sbb
fidivl
push
push
sub
es
xor
fwait
jecxz
add
adc
and
xor
mov
iret
and
pop
arpl
fldcw
iret
mov
std
adc
rcll
dec
cld
imul
xlat
gs
fadd
jle
sahf
mov
mov
clc
xor
sar
in
je
flds
rclb
leave
cltd
xchg
jns
mov
dec
mov
adc
pop
ja
xchg
shlb
sbb
jnp
cmp
xchg
mov
dec
rol
cmp
xor
xor
cmpsb
lcall
lea
jl
test
push
dec
pushf
sbb
movzwl
jno
cmp
jb
test
lret
mov
iret
push
jnp
and
test
sbb
add
pop
mov
iret
inc
cmp
push
xor
xchg
daa
outsl
inc
push
test
cmp
cs
inc
lea
dec
ret
int
pusha
push
and
es
jmp
sub
sarl
jecxz
pop
push
pop
mov
xor
stc
movsl
aad
frstor
push
and
bound
insl
aad
push
jb
in
imul
or
mov
movsb
pop
cmp
out
push
outsl
insl
dec
insl
push
dec
jle
and
jne
fbld
divb
cmp
pop
rcll
push
sti
add
test
ljmp
push
flds
cs
push
pop
dec
fcmovnu
push
pop
je
aad
rorl
dec
fnsave
pop
das
imul
or
or
push
test
pop
jge
jecxz
cmp
test
std
scas
daa
push
cmpsl
mov
mov
js
sbb
popf
repnz
das
push
push
leave
out
pop
xor
cwtl
lahf
ja
jns
sbb
mov
inc
sbb
push
xchg
jmp
mov
movsb
js
loop
test
out
and
xor
sub
xchg
sbb
mov
mulb
xor
mov
in
adc
add
mov
int
ds
xor
inc
arpl
pop
adc
pop
mov
fwait
je
loopne
aad
jl
popf
test
inc
call
notl
jno
mov
xlat
ret
insb
test
in
int
sbb
push
xchg
lea
aaa
cmp
mov
popf
pusha
imulb
add
cs
daa
rcr
fcmovnb
shrl
scas
sub
jecxz
sub
jb
cwtl
mov
add
mov
sbb
in
test
push
jp
push
push
add
mov
mov
jno
hlt
js
push
sub
pop
xor
loopne
or
jns
aam
loopne
pop
mov
dec
test
dec
pop
and
std
push
sahf
out
sub
lods
lahf
mov
pop
fidivrl
mov
xlat
popa
pusha
outsb
int
fildl
cmp
std
or
sahf
adc
or
cli
dec
dec
and
xor
ret
ret
fsubr
xchg
aas
adc
test
pop
mov
pop
pushf
ja
jecxz
xor
mov
pop
dec
mov
mov
jmp
lea
lods
push
sarl
sub
out
xor
mov
and
mov
mov
jb
add
xchg
cmp
insl
adc
add
shll
lock
orl
push
ja
mov
dec
pop
mov
adc
and
loop
sbb
mov
and
ja
cmpsl
jp
fcompl
adc
lods
fldenv
mov
mov
jl
jg
lds
insl
int3
xor
jmp
mov
jp
lods
mov
hlt
lea
pop
mov
les
fwait
jl
push
in
fldenv
rorl
enter
les
xchg
xchg
pop
sub
push
faddl
ret
cmp
popw
dec
in
js
jo
mov
hlt
or
mov
add
addl
stos
jmp
or
cld
lods
inc
inc
adc
or
ss
push
stos
lods
cmp
adc
push
arpl
mov
mov
fwait
push
add
pushf
pop
add
and
add
pushf
aas
adcb
out
rorl
rorb
sbb
arpl
mov
scas
popf
inc
std
xlat
xchg
add
loop
jl
cmc
push
repnz
sub
xchg
in
loope
test
shlb
mov
int3
ret
mov
mov
daa
sbb
les
in
jmp
test
pop
sbb
mov
subl
xor
lret
sahf
out
mov
dec
mov
popf
push
adc
clc
mov
mov
int3
mov
dec
pop
add
sbb
insl
insl
dec
pop
dec
mov
cmp
dec
jg
push
std
jbe
gs
add
mov
mov
mov
ds
lcall
pop
push
pop
bnd
and
mov
cwtl
add
mulb
jmp
lcall
daa
cmp
test
movsb
push
pushl
pop
insb
pushf
xchg
jo
sbb
sarl
enter
test
push
call
or
loop
mov
xor
popf
movsb
xorl
mov
scas
enter
and
sub
dec
call
movsl
mov
mov
mov
loop
mov
cmp
push
sbb
in
stos
data16
lret
roll
and
pop
adc
addr16
movsb
sub
cld
adc
push
aad
add
jge
daa
dec
imul
xchg
push
in
shrb
or
clc
je
fsubp
push
subb
lret
arpl
add
int3
gs
loop
inc
and
ret
movsl
lret
jge
adc
add
repz
stc
mov
sbb
push
adc
not
stos
dec
loop
xor
xor
mov
and
ljmp
enter
mov
pop
fsubrs
push
pop
adc
xor
jge
dec
stos
mov
push
mov
popa
mov
mov
lods
cld
and
push
loopne
xchg
mov
jmp
push
fldl
dec
cmpl
or
into
and
add
adc
push
and
xor
and
mov
adc
sbb
mov
pop
insl
xor
ljmp
add
dec
out
dec
jnp
lock
and
aad
fldt
test
lods
inc
imul
dec
jno
mov
sbb
shll
lahf
mov
lds
inc
aad
jp
mov
jmp
shll
sub
ja
dec
pop
sub
jne
push
pop
cmpsb
jmp
cli
fwait
sbb
pop
pop
jbe
cmpsl
cli
adc
outsb
fwait
xchg
or
test
inc
clc
lahf
popf
imul
movsb
mull
cmpsl
test
nop
pop
add
adcb
outsl
in
pushl
movsb
xor
loopne
pop
or
nop
pushf
xlat
inc
loopne
sbb
lea
icebp
decb
cmpsl
sbb
jle
das
inc
inc
out
arpl
outsb
push
fadd
cmp
cwtl
xorl
mov
jp
in
ja
cwtl
sti
cmpsl
addl
mov
jecxz
sbb
aam
lahf
ret
cmc
sbb
pusha
pop
jae
aam
out
push
xorb
scas
loopne
or
daa
outsl
dec
lcall
mov
das
pop
cmp
cmpsb
mov
xorl
cmp
out
mov
mov
nop
push
sbb
insb
call
mov
movsb
int
aaa
inc
adc
stos
dec
shrb
or
inc
out
and
xor
shrl
mov
stos
movl
inc
mov
add
push
and
testb
loopne
aam
lcall
jg
adc
push
push
mull
lar
fdivrl
in
rcrb
adc
mov
jne
jmp
add
in
out
stos
push
mov
fildl
int3
iret
mov
adc
cmp
mov
xchg
insl
rcr
push
inc
add
and
pop
sub
inc
adc
loop
xchg
lods
xchg
pop
cmp
add
clc
lock
repnz
xor
add
fbld
lds
lea
sbb
test
xchg
adc
out
fsubl
dec
jmp
push
testl
decb
jnp
and
pop
jg
js
aas
xchg
loopne
imul
xor
and
fimuls
xchg
mov
in
push
pop
pusha
js
add
mov
in
test
fcoms
xorl
rclb
into
mov
xor
sub
repz
cmc
pop
shll
jmp
adc
push
add
sbb
fidivs
es
xor
dec
scas
sbbl
out
push
shld
mov
mov
stc
sbb
aad
sub
ljmp
sbb
std
mov
insb
pop
aas
add
mov
fsubl
add
xchg
xor
xor
test
ds
add
pusha
ja
sahf
and
cmp
inc
in
lods
cmc
mov
sub
xor
cmp
inc
inc
add
push
rcrb
add
test
mov
inc
push
fcompl
add
cld
in
and
pop
and
xchg
sti
clc
adc
inc
push
notb
std
ja
dec
sbb
push
pop
xor
cmc
xorl
aad
mov
or
mov
push
jb
data16
and
adc
in
repnz
mov
daa
lods
mov
pop
lods
sbb
mov
sbb
popf
rorb
and
icebp
mov
xchg
jg
sbb
jbe
sahf
cmp
add
push
sbb
iret
pop
in
push
fs
mov
dec
mov
pop
sub
cmpsl
push
push
dec
push
sbb
push
or
fdivrl
cwtl
loop
arpl
xor
insl
lret
and
and
ffreep
decl
rol
je
mov
mov
add
xor
pushf
xor
mov
insb
pop
sub
shrl
sar
in
fsubr
push
icebp
xchg
push
mov
sbb
xchg
lcall
fcmovnbe
jne
mov
pop
fs
xchg
jo
mov
mov
xchg
fldlg2
shrb
mov
and
push
cli
pop
mov
jns
mov
vminss
mov
repz
xchg
sahf
je
call
rorb
int3
jle
dec
push
jle
insl
sbbl
punpckhdq
ret
pop
lahf
inc
xchg
cmpsl
jmp
xor
out
mov
add
mov
aad
push
movsb
sub
xchg
std
mov
push
mov
sti
mov
jge
push
jmp
xchg
push
or
xlat
shll
adc
xchg
sbb
sub
jecxz
cmp
jp
add
sbb
shl
out
cmpsl
pop
cld
pop
dec
loopne
ss
es
jo
pop
xorl
pusha
sub
inc
scas
sub
xor
mov
ljmp
movsb
gs
aaa
mov
and
loop
jb
adc
or
nop
cmp
cmp
cmpsb
or
cmp
leave
in
push
dec
orl
loope
sbb
mov
mov
loopne
fidivl
push
lahf
shr
popf
push
lock
jmp
call
ss
pop
cmp
or
loop
xor
lret
xlat
mov
xchg
adc
cltd
addr16
ja
pop
push
insl
cmp
nop
out
mov
xchg
sub
out
lea
xlat
add
movsb
hlt
daa
rclb
pop
xor
mov
mov
arpl
push
xor
lahf
mov
pushf
inc
lds
cltd
xor
hlt
in
sbb
cmc
mov
add
fiadds
bound
or
cld
mov
dec
pop
orl
pop
jb
dec
sbb
data16
or
punpckhbw
push
sub
mov
insl
adc
xor
jg
inc
adc
out
jle
push
inc
idivl
xor
inc
ljmp
ljmp
addr16
pop
xlat
pop
pop
push
mov
dec
mov
test
sahf
sub
int
cmp
and
or
enter
mov
push
jp
arpl
lods
cmp
inc
int3
sub
fisubrl
stos
xor
loope
imul
cld
sti
addr16
ljmp
test
xchg
fsubrs
cltd
test
pop
sbb
dec
push
xor
enter
mov
shlb
sar
movb
mov
jb
xchg
cmpsb
inc
gs
jne
lea
mov
sub
insl
dec
sbb
dec
fistps
add
sub
andl
aad
jecxz
adc
mov
pop
ds
les
cmpsb
repnz
ror
jnp
cmp
pop
shr
xchg
dec
jmp
loop
pop
mov
adc
fnstcw
push
sub
movsb
adc
dec
int
int
mov
xchg
xchg
loopne
dec
rorb
add
es
mov
popa
inc
cmp
movsb
inc
adcl
lea
xchg
lods
mov
inc
adc
fisubs
mov
aad
sbbl
dec
in
mov
mov
cli
das
or
cld
inc
cmp
push
cmpsb
ret
pop
mov
sbb
adc
sub
lahf
or
movsl
pop
pop
popa
cmc
pop
adc
test
cmc
js
lcall
ss
or
cmpsb
clc
filds
cli
jl
outsl
mov
out
test
mov
push
out
repnz
pushf
jae
enter
mov
push
dec
mov
dec
loopne
xlat
subb
sub
sbb
cmpsl
data16
negb
scas
xor
imul
push
mov
or
rcll
cmp
repz
xchg
cli
adc
sub
pop
cmp
mov
inc
clc
or
inc
test
pop
push
test
dec
fidivrs
sbb
sbb
jp
adc
pop
xchg
and
fsubl
insl
cmp
push
ja
xor
adc
adc
mov
outsb
mov
stc
idivb
loope
push
add
mov
pop
mov
cs
pushf
jecxz
jae
mov
hlt
mov
push
inc
xor
popa
adc
or
sarl
adc
ss
loope
cld
scas
mov
mov
jno
rol
lahf
int3
mov
xchg
mov
xchg
adc
fwait
lea
pop
insb
inc
popa
sbb
nop
es
fwait
jb
jp
jp
scas
scas
testb
sbb
mov
ljmp
adc
mov
inc
and
push
mov
or
add
cmp
or
sub
sbb
dec
cli
popf
popl
jge
shll
ja
and
inc
pop
pop
cmpsb
data16
std
les
xchg
shl
jo
out
inc
out
inc
ret
and
cli
cwtl
sub
or
scas
outsb
jbe
or
jecxz
cmp
rcrl
and
push
popf
jno
sub
push
adc
popa
cmpsl
adc
fistpl
dec
test
xlat
jae
jns
repnz
cmp
adc
pusha
stc
cld
das
stc
dec
cmpsl
movsl
push
fs
xchg
pop
and
pusha
lds
jmp
test
jbe
scas
push
cmp
add
in
dec
les
dec
mov
sete
insb
outsl
movsb
pusha
push
fwait
shrl
jo
sbb
bound
out
mov
xor
in
jg
cmp
and
pop
int3
aam
call
lcall
or
sub
sarl
mov
out
dec
or
fsts
lcall
cs
push
mov
sub
jmp
jnp
jnp
jnp
out
popf
in
add
lods
dec
repz
ljmp
mov
mov
out
adc
les
and
mov
scas
out
sbb
fimuls
notl
popa
jmp
and
sbb
xchg
xor
xchg
roll
mov
xchg
ja
mov
aam
int
lods
mov
jecxz
ja
popa
iret
movsl
mov
pop
lds
and
add
inc
jle
std
and
inc
cli
clc
mov
imulb
cmovnp
std
cmp
xchg
fisubl
xchg
enter
xchg
or
inc
dec
xchg
xchg
dec
inc
arpl
mov
push
cli
clc
mov
mov
out
in
lds
ljmp
ja
ds
scas
int3
mov
mov
rcr
sbb
or
jo
push
mov
stos
fdivr
call
mov
dec
mov
sub
mov
pusha
es
test
lret
pop
aas
xchg
add
xchg
lods
sub
fmull
test
test
mov
jb
xor
mov
xlat
aaa
int3
sbb
add
sub
xor
adc
fiaddl
sahf
pop
setle
sbb
sub
cmp
jg
inc
push
push
repz
jae
and
mov
mov
inc
shlb
aaa
cmp
iret
ja
popa
sub
js
outsl
fidivrs
lock
mov
imul
sbb
cmp
sub
push
mov
jno
in
inc
inc
pusha
subb
jns
xor
fs
inc
cli
jg
pusha
cli
jl
shrb
xor
ss
ja
pop
js
lcall
dec
lret
jo
dec
pop
xorl
dec
repnz
pop
and
add
jno
dec
loop
into
sub
or
aas
loope
insb
xchg
xchg
mov
jle
cs
mov
rorl
sub
mov
mov
xor
fiadds
cltd
test
mov
pushf
push
mov
dec
cltd
scas
lea
das
push
pop
lock
or
mov
out
dec
sub
push
fs
jmp
mov
stos
cmp
mov
and
inc
subb
lahf
xor
outsl
push
inc
outsl
mov
lods
stc
loopne
pop
and
addb
scas
in
add
ret
test
movsl
push
sub
mov
mov
movsl
in
or
lods
mov
test
dec
insb
idivl
pop
clc
pop
lea
fbld
pop
xchg
mov
cmp
test
mov
mov
xor
pop
jmp
mov
aam
mov
pop
fwait
sbb
xor
adc
mov
mov
fiadds
sub
adc
into
repz
out
cmp
mov
incl
jle
dec
cltd
sub
imul
jge
int3
or
xor
adc
mov
mov
mov
add
add
jg
jne
xchg
inc
pushf
ljmp
dec
or
and
fwait
out
mov
mov
icebp
push
lock
loop
pop
inc
sbb
dec
add
or
es
cmp
shlb
sub
jnp
and
test
inc
jno
dec
ja
aad
mov
xor
adcl
inc
in
jbe
or
test
aas
pop
in
sub
push
fsubl
ficoms
mov
fs
mov
xchg
out
arpl
mov
scas
pop
sbb
inc
cld
jnp
in
cltd
sub
push
mov
cmp
mov
ss
cli
mov
mov
adc
dec
addl
leave
mov
fidivs
lods
mov
adc
rcll
inc
ret
loopne
dec
pop
push
sbb
inc
aas
xchg
mov
movsb
decb
or
hlt
aad
xor
pop
or
pusha
call
jb
sub
into
xlat
push
nop
das
and
xchg
fistl
or
pop
daa
repnz
cmp
jno
push
mov
test
cmp
fwait
lcall
cmp
xor
lods
mov
fisubrl
mov
call
pop
inc
in
mov
cmp
mov
out
xchg
cwtl
repz
sbb
xor
add
mov
jge
repnz
bnd
movsb
icebp
mov
adc
pop
mov
adc
rolb
xchg
fmul
mov
or
sub
mov
mov
je
cs
and
sub
add
fidivs
lock
mov
test
imulb
ja
enter
pop
repz
mov
imul
sbb
mov
jp
and
ljmp
lock
sub
pushf
adc
popa
mov
ret
adc
jo
lods
dec
lret
mov
sbb
mov
dec
sti
pop
pop
or
jl
addr16
or
dec
fildl
loope
adc
pop
imul
push
jnp
les
pop
jge
lcall
inc
lcall
sub
mulb
adc
dec
xchg
mov
jecxz
adc
mov
hlt
outsl
inc
sahf
and
inc
jle
in
std
outsb
imul
jbe
scas
out
inc
and
jnp
out
add
sbb
mov
scas
jl
scas
mov
and
jno
push
mov
inc
sub
movsl
fsubrl
sub
sti
pop
add
mov
and
sub
inc
popa
out
jl
push
gs
lock
test
push
cmp
mov
cmp
push
jl
push
cmpl
or
enter
jge
loope
pop
xchg
push
movsl
mov
lahf
mov
lds
cmp
inc
fsub
adcl
mov
gs
cli
fstpl
dec
xchg
xor
fsubr
dec
popa
mov
pop
enter
imul
xchg
xchg
test
or
sbb
fstpl
outsb
ja
xor
pop
imul
adc
imul
popf
mov
hlt
in
stos
sub
dec
mov
dec
movsl
jp
movsl
lcall
outsl
in
push
sahf
std
imul
orl
jp
add
test
push
in
add
push
mov
cmp
mov
mov
daa
add
js
xor
fadds
nop
pop
pop
test
lret
mov
pop
jg
push
mov
dec
out
pop
jns
loope
dec
inc
and
mov
pop
loop
stc
xor
jne
jle
cmpsl
pop
pop
repnz
cmp
fdecstp
cltd
mov
push
test
cmp
pop
jne
push
or
mov
mov
inc
enter
scas
aaa
jo
xchg
fwait
movsl
add
cld
fs
cmpb
cmp
ja
jo
and
xchg
repz
loop
xchg
xor
jmp
adc
cmpsb
test
js
inc
aaa
lds
mov
push
pop
out
add
push
ret
pop
scas
inc
fisubrl
cmp
cmp
jp
fnstsw
jge
dec
inc
iret
mov
push
sbb
data16
js
sbb
das
nop
xor
fdivs
int3
add
ss
or
filds
jae
data16
and
das
sub
and
aad
and
pop
sbb
imul
pop
pmovmskb
pop
sub
fsts
jmp
insl
push
cwtl
out
loop
push
dec
repnz
xchg
inc
aaa
nop
pop
pop
sbb
sub
insl
sbb
jp
or
xor
pop
adc
jge
inc
sbb
out
andl
mov
movsb
push
sbb
jbe
in
fmuls
jge
cmc
cmp
push
ret
dec
mov
jle
rclb
insb
loope
loop
mov
push
or
pop
mov
sahf
ljmp
fsubs
stos
mov
mov
mov
int
test
jle
shll
in
jle
jg
cmc
xchg
sahf
or
sti
shll
xchg
mov
sub
or
cwtl
inc
or
das
or
cli
pop
iret
pop
mov
xor
pushf
mov
pop
scas
dec
inc
mov
outsb
popa
xchg
addl
icebp
push
loop
in
pusha
mov
fdivl
addr16
mov
xor
into
sbb
out
mov
orl
test
dec
scas
mull
dec
inc
push
pushf
shl
xor
dec
mov
sub
and
push
dec
das
lea
cmp
or
sbb
sbb
inc
xor
out
jbe
insb
lea
das
pop
into
add
jno
jge
insb
mov
movsl
pop
inc
data16
fwait
pop
push
test
inc
cld
add
mov
lods
lahf
dec
mov
pop
push
mov
inc
cwtl
pop
orb
xor
xchg
mov
xor
jmp
mov
adc
loopne
adc
imul
fcom
dec
or
sbb
and
or
xchg
jecxz
push
xchg
and
xchg
outsb
jmp
mov
sbb
fbld
sbb
cmp
lds
pop
xchg
imul
call
mov
cmp
jp
mov
pop
push
lock
iret
loop
sarb
das
add
jb
jcxz
cmc
push
pop
and
in
test
and
pop
inc
lods
cld
push
xchg
adc
mov
jo
mov
stc
jge
fs
loopne
pcmpeqd
dec
push
out
jb
xchg
shl
dec
jge
jo
scas
in
pop
adc
jmp
fdivrs
repnz
in
cmp
stos
pop
out
dec
js
int
ret
int
imul
adc
add
or
mov
sub
mov
test
insb
jo
mov
lock
in
fdivp
xchg
sub
sahf
enter
orb
xor
imul
repnz
cmp
mov
pop
mov
mov
addr16
hlt
fstpl
push
xchg
sbb
jp
ret
mov
jno
mov
jecxz
add
incb
cwtl
and
and
pushf
dec
ret
jae
gs
repnz
and
pop
das
andl
dec
sub
ljmp
sub
adc
fisttpll
sub
cltd
jbe
das
hlt
inc
dec
sbb
mov
mov
xchg
or
loopne
shrb
mov
ds
sub
pop
mov
addl
test
mov
into
xor
pop
outsb
cmp
mov
leave
dec
iret
inc
jno
das
fldln2
cmp
xor
push
add
xchg
iret
cmp
xchg
rcrb
jnp
mov
push
sub
stos
pop
sbb
add
add
idivb
mov
jns
js
pop
in
pop
xchg
std
mov
lret
lahf
add
js
aas
mov
movsb
bound
aad
push
xor
pop
add
push
xchg
fdivl
hlt
imul
push
fisubs
vmresume
das
out
call
sbb
or
adc
push
pusha
pop
icebp
lods
cltd
cmc
ret
arpl
jns
inc
insl
aaa
popf
inc
cs
mov
rorl
adc
push
in
sub
mov
icebp
fisttpl
pop
pop
mov
and
lea
loopne
out
out
and
pop
andb
je
loopne
xchg
lds
push
test
leave
add
stos
test
cmp
mov
loop
jecxz
xchg
nop
sub
pushf
jnp
ror
mov
pop
adc
mov
int
cwtl
divl
xor
mov
xchg
sbb
leave
sbb
imul
arpl
sbb
sbb
out
xor
xchg
and
pop
jb
mov
icebp
int3
add
inc
push
mov
or
sbb
add
sub
sub
cmp
popf
shrl
inc
mov
cmp
in
mov
push
loope
xchg
nop
in
sbb
cmp
inc
testb
loope
test
sbb
rcrl
cwtl
lret
or
dec
adc
dec
in
leave
shr
clc
push
dec
lahf
je
jo
mov
push
dec
stos
ljmp
js
fs
stos
and
xor
jb
mov
enter
call
pushf
stos
mov
adc
jp
pop
ret
mov
lock
lahf
push
repz
mov
imul
push
add
pop
fiaddl
jmp
push
or
loopne
adc
mov
mov
inc
mov
addr16
pop
gs
fs
scas
sbb
scas
jnp
xchg
popf
push
lcall
jo
mov
mov
adc
pop
pusha
xchg
push
data16
xchg
out
inc
push
pop
leave
out
fidivs
in
add
sbb
xchg
out
scas
xor
gs
add
test
lret
push
add
sub
test
pop
xor
movsb
repz
push
ret
gs
mov
fld
push
adcl
dec
les
adc
scas
outsb
fcomps
mov
dec
mov
repnz
aad
divb
add
pop
jl
in
icebp
sub
dec
js
xor
sbb
sbb
sbb
sbb
mov
lcall
pop
icebp
shrb
dec
das
cmp
testb
shll
out
sub
jmp
inc
and
jae
scas
mov
pop
imul
jmp
jbe
push
shrl
incb
push
out
and
dec
pop
mov
cmp
outsb
sbbl
mov
mov
call
into
and
scas
faddl
fwait
movl
add
adc
mov
jae
cs
fidivs
repnz
cmpsb
sbb
pop
cs
adc
or
mov
aad
or
cmp
dec
dec
lret
add
gs
ficoml
leave
fsubs
dec
push
inc
mov
imul
in
inc
ss
ret
repz
mov
jno
cmp
fimuls
hlt
pop
mov
dec
aad
push
push
and
lcall
jb
xchg
insb
mov
cwtl
lret
enter
rcrb
mov
inc
or
in
mov
xor
insb
ror
push
lahf
cli
pop
aaa
adc
adc
in
es
xor
ret
cmp
mov
cmp
inc
dec
daa
je
sub
inc
cmpsb
and
mov
test
int
pop
dec
imul
add
aam
adc
mov
mov
add
adc
jno
je,pn
inc
or
sbbb
iret
sub
mov
pushf
xchg
les
daa
ljmp
je
pop
ljmp
bound
stos
test
or
xor
xor
loope
test
jmp
jns
sbb
cmp
test
mov
in
inc
out
pop
imul
dec
js
dec
outsl
mov
fcom
gs
push
push
pop
jp
push
fs
cmpsl
mov
jecxz
ret
ja
gs
nop
aad
repnz
jbe
test
popf
lods
sub
xchg
and
fwait
mov
ss
imul
push
or
jp
mov
imull
mov
rcll
cmp
jmp
test
or
and
mov
scas
loope
sub
sarb
jnp
pop
push
ja
out
xchg
ret
adc
cmp
out
add
inc
mov
stos
pop
mov
rorl
aas
fwait
aad
dec
push
imul
adc
sti
leave
movsb
lahf
sub
gs
rcll
ljmp
sub
mov
int
add
xlat
sub
add
dec
xor
rorb
or
adc
testl
inc
jp
push
scas
outsl
jb
lods
lods
pop
shr
iret
pop
cli
dec
popa
fistpll
jo
mov
pushf
push
lret
popf
push
out
jge
jb
ret
jnp
xor
arpl
stos
loope
jecxz
into
sbb
sub
movsb
pop
cld
jecxz
stos
stos
dec
stos
enter
gs
adc
inc
mov
jns
pop
sahf
andl
jno
xchg
nop
adc
aas
mov
enter
subb
dec
cs
pop
call
cmpb
mov
push
or
add
mov
push
ja
jle
sbb
adc
inc
jns
subl
sti
sub
sbb
xor
add
jne
or
cwtl
adcl
cwtl
fdivrp
loope
pop
lds
test
sbb
mov
xchg
inc
dec
call
jmp
mov
flds
xlat
push
xchg
jmp
subl
cwtl
xchg
iret
dec
test
call
dec
hlt
lea
insb
int
popa
adc
cli
mov
dec
pushf
ficompl
pop
adcb
rorl
mov
lods
xor
test
mov
inc
sbb
mov
les
das
sub
cwtl
popa
xor
xor
or
jae
fdivrp
xor
inc
mov
into
data16
cltd
xchg
cmp
loope
icebp
repz
mov
mov
mov
pop
push
pushl
rolb
out
inc
jbe
mov
shl
pop
mov
into
or
gs
inc
mov
clc
inc
pushf
lret
jp
add
add
mov
stos
push
lea
sbb
and
and
popa
xor
popf
shlb
pop
sub
pop
adc
add
push
mov
lods
xor
push
ret
movsb
icebp
inc
pop
fwait
lods
mov
ret
sub
aas
jne
inc
and
mov
xchg
ret
hlt
dec
pushf
add
repnz
fbstp
sbb
in
testl
les
xchg
mov
outsl
cmp
iret
outsb
push
out
scas
bound
loop
add
mov
imulb
pop
jge
xchg
mov
sbb
int
lods
rcr
inc
xchg
enter
cmp
xor
inc
fdivrl
mov
xor
in
lds
xor
xchg
mov
ds
cmpsb
sub
pop
aaa
fiaddl
aaa
int3
xchg
and
adc
inc
push
cmp
sub
inc
pop
inc
ss
or
add
and
xorb
cld
pop
push
and
jg
test
push
imul
mov
push
rclb
sbb
fnstsw
jns
xchg
testl
pop
xchg
stos
fsubl
icebp
rcl
xor
sub
dec
cmp
fildl
cmc
mov
and
repz
mov
shlb
in
pop
sbb
mov
gs
je
sbb
adc
fisubrl
stos
std
shl
fcmovu
ficoms
movl
xchg
fisttpll
aad
sbb
and
test
xchg
add
daa
mov
ss
xlat
mov
fdivs
inc
cmp
nop
sbb
vmread
lock
mov
ljmp
dec
nop
push
adcl
push
cmp
fnstenv
outsl
outsl
adc
notb
sbb
hlt
mov
sahf
cmpsl
aad
js
adc
stos
xchg
pop
xor
sub
pushf
lahf
neg
fnstsw
je
cld
xchg
mov
loop
call
repnz
data16
repnz
jbe
push
das
mov
out
ret
insb
lret
in
rolb
outsl
xor
std
mov
pop
lods
subb
not
sbb
and
arpl
iret
dec
in
or
pop
lret
cmpsb
xlat
mov
ja
mov
mov
mov
std
mov
or
and
and
mov
sbb
add
cmp
push
mov
pusha
mov
add
adc
pop
mov
mov
pop
lret
fistps
pop
push
sbb
outsb
add
push
loope
pop
aas
imul
cmp
scas
out
mov
in
hlt
fistps
jo
ret
xor
jo
xlat
mov
sub
scas
fdivs
stos
js
sbb
shlb
pop
lods
push
push
xchg
fwait
enter
test
and
addr16
xor
rorb
sub
xor
dec
ljmp
xor
pop
and
inc
sbb
sbb
pop
es
lcall
lcall
into
mov
jno
xchg
jmp
jle
sub
aas
outsb
pop
xchg
xchg
mov
sub
mov
mov
dec
loop
std
fwait
inc
ficomps
inc
and
dec
add
xor
es
rcrl
adc
leave
popf
dec
add
xchg
sbb
mov
adc
xor
cmp
jne
insl
xchg
out
inc
aad
or
push
sbb
jne
addb
pminub
jbe
fistpl
es
xor
cmp
imul
sti
xchg
xor
adcl
push
mov
sub
or
test
mov
push
faddl
adc
les
lret
jge
jne
jg
push
sub
adc
inc
push
xchg
aas
sub
out
or
jb
aad
cld
insb
and
mov
xchg
aad
mov
cld
jmp
mov
dec
xchg
xchg
xor
sub
into
rol
xchg
fidivrs
icebp
dec
iret
add
lea
cmp
sub
sbb
fdivrp
inc
jnp
xor
out
xchg
lahf
add
jle
rolb
sub
xchg
pop
sbb
cltd
subb
outsb
clts
cwtl
push
cmpsb
jmp
insl
outsl
xchg
pop
dec
jb
loop
inc
out
hlt
dec
xor
in
adc
push
hlt
add
adc
in
int
cmpsl
ret
std
out
rcll
or
sub
xor
cmc
mov
xchg
or
cmp
mov
sub
pushf
mov
and
adc
mov
add
mov
and
push
jne
mov
cmp
mov
pop
push
jmp
mov
inc
xchg
mov
inc
lahf
pop
xchg
fidivl
clc
pop
inc
cmp
adc
push
sbb
mov
out
sub
inc
xchg
sub
xlat
mov
or
pop
lret
mov
test
mov
push
adc
incl
push
jae
push
jl
es
sti
ret
and
mov
jp
cmp
into
shrb
popf
push
arpl
fsubs
std
lret
loope
sahf
jge
mov
imul
pop
je
roll
jnp
xlat
popf
js
cmp
xlat
pop
pop
mov
jae
ja
jae
lds
dec
scas
xor
dec
shlb
arpl
jns
je
xor
repnz
sub
jo
popf
stos
insl
jne
pop
and
int3
mov
sub
ljmp
test
in
add
sub
imul
call
xor
push
cmp
jae
test
mov
outsl
jbe
mov
iret
sub
pop
xchg
insb
add
movsb
sub
cmp
or
ret
or
jp
mov
call
popf
inc
mov
mov
iret
add
into
sarb
jnp
sbb
lcall
or
rclb
jae
fdivrl
out
dec
data16
loop
cld
ja
mov
xchg
shrb
jge
movsl
pop
push
aad
cmp
test
cmpsl
adc
outsb
dec
std
adc
adc
jae
dec
fdivrp
push
cli
ljmp
pop
push
fwait
hlt
fcomps
pop
outsl
dec
mov
xchg
sub
mov
inc
les
daa
cmp
mov
push
ret
xor
pop
fwait
lret
xor
adc
hlt
xor
rcrl
mov
sub
aad
pop
scas
xorb
shrb
cmp
fidivrl
pop
push
outsb
fmull
aad
out
leave
out
mov
xchg
imul
loope
ss
or
pop
sbb
or
adc
imul
inc
movd
loopne
shrb
push
add
popf
pusha
jp
clc
or
sbb
mov
lret
outsl
les
sub
out
sbb
pop
sahf
out
aas
ret
repnz
mov
cmc
popf
rcrb
cs
mov
cmp
xlat
je
in
pop
mov
xor
cmpb
or
xchg
jns
adc
add
negb
cmp
popf
mov
lods
shl
dec
mov
data16
roll
fsub
repnz
xor
push
arpl
mov
and
adc
sbb
dec
push
fwait
js
xor
cwtl
or
inc
push
ret
ds
add
cld
loop
test
xchg
xlat
jmp
xchg
dec
add
push
and
stc
cmp
mov
push
das
insb
cmp
jae
adc
pop
outsb
mov
lahf
mov
orb
data16
mov
inc
inc
mov
test
mov
mov
loopne
push
jae
push
cmp
inc
xor
adc
je
fnsave
imul
scas
mov
fbld
sbb
xchg
ror
xor
xorb
mov
enter
push
dec
mov
adcb
push
lods
bound
push
arpl
xor
mov
xchg
pop
adc
sub
mov
mov
cmpb
inc
jecxz
xchg
and
dec
or
arpl
or
add
xlat
push
inc
pop
out
cli
outsl
cmp
int
cltd
out
jo
cli
and
pop
repnz
dec
add
out
mov
mov
xlat
mov
icebp
in
into
popa
and
loopne
pop
adc
and
inc
outsb
sbb
xor
or
mov
aad
negl
sub
add
popa
stc
jb
mov
jg
cli
repnz
mov
jl
jns
lret
xor
sti
xchg
and
xchg
lods
call
arpl
enter
xchg
imul
pop
cmp
mov
jmp
mov
mov
fs
mov
mov
add
les
aaa
pop
out
push
das
mov
xchg
adcl
xor
pop
and
loope
sub
and
mov
xchg
mov
adc
xchg
pop
cld
inc
fwait
popf
ret
sub
repnz
nop
cmp
shlb
mov
pop
jecxz
in
cmp
sub
roll
cmpsb
and
mov
inc
xor
lods
popa
pop
xlat
mov
add
insb
outsb
pop
scas
xchg
dec
lret
dec
in
mov
adc
push
jbe
and
int3
ret
insl
ds
mov
adc
adc
jg
dec
loope
pextrw
stos
push
xor
jmp
and
pop
xchg
call
lods
clc
es
sub
xor
add
push
push
pop
xor
pop
cltd
fucomi
icebp
adc
stc
mov
addl
daa
jp
sub
in
stos
add
mov
dec
mov
sti
into
mov
xorl
adc
sub
mov
push
mov
stc
ja
cmp
ret
cmp
aas
sti
dec
call
cmp
daa
or
test
lods
xor
jnp
mov
inc
push
sub
stos
xchg
sub
cmp
and
adc
push
imul
or
mov
push
jbe
dec
dec
ds
xor
adc
popl
inc
xor
dec
outsl
stos
jmp
xor
mov
mov
push
mov
mov
imul
cltd
cmp
in
cltd
push
cltd
rolb
mov
dec
sarb
cmpb
xorb
sahf
loopne
gs
mov
push
dec
lock
call
or
scas
mov
and
ljmp
xchg
mov
lea
cmp
or
adcl
pusha
jnp
pop
jbe
xchg
call
mov
popa
push
lods
pushf
mov
popf
sbb
sbb
or
outsb
cmp
mov
in
dec
bswap
jg
out
adc
add
cwtl
push
cmp
aam
fidivs
dec
clc
xor
stos
xchg
jg
divl
sbb
jae
lds
lock
test
add
sbbb
fsts
cmp
push
jle
adc
pop
xchg
sbb
jmp
gs
cltd
push
adc
test
and
jge
test
adc
sahf
movsl
xchg
js
ljmp
push
test
sub
cmpsb
jns
dec
sahf
test
les
xorb
aam
iret
push
sahf
repz
shlb
das
outsb
repnz
cmp
cmpsb
lcall
xchg
sub
sbb
lea
lods
mov
jg
das
push
xchg
cmpsl
push
xorl
outsb
and
xchg
cmpsl
insb
mov
sbb
add
ja
cmp
jno
sbb
into
call
sub
and
fwait
rcr
mov
xchg
cmp
lret
or
add
mov
jmp
dec
jns
arpl
cmp
or
bound
sarl
or
bound
test
testl
mov
insl
lods
xor
pop
inc
sbbb
cld
stos
cmpsl
mov
mov
dec
jmp
lods
dec
dec
mov
xchg
cli
sbb
je
inc
dec
and
sbb
jl
sbb
aas
push
adc
in
dec
mov
sbb
outsb
aam
push
push
jecxz
pop
sbb
lods
jne
xor
jae
push
xlat
incl
inc
push
iret
fs
pop
int
test
or
pop
orb
adc
mov
cmp
adc
jb
xor
add
enter
ds
add
and
fists
cld
adcl
sahf
push
push
popf
sbb
dec
dec
cmc
iret
fld
xchg
dec
lea
push
aam
in
mov
pushf
xchg
int3
pop
cmp
xchg
mov
nop
sub
inc
mov
insl
mov
movsb
enter
scas
inc
test
jmp
ss
xchg
mov
test
xchg
addr16
sbb
scas
pop
dec
ret
xor
popf
icebp
push
cmp
scas
sbb
sbb
adc
push
stos
cltd
sahf
fnstsw
dec
dec
inc
adc
jg
xchg
mov
aam
daa
xor
out
adc
fimuls
outsl
faddp
or
dec
xorl
dec
cmp
pop
insb
fstl
mov
fldenv
fwait
repnz
movsb
mov
inc
jns
cmpsb
cwtl
sbb
lret
inc
mov
iret
jno
sub
ficoms
cmpsb
sti
add
lods
std
jecxz
or
cwtl
mov
jae
mov
mov
lds
sarb
jno
sub
lcall
push
jl
imul
clc
pop
aaa
jp
push
pop
sarl
add
div
mov
add
cmc
mov
mov
cli
lods
push
mov
out
in
ja
out
mov
fadds
inc
cmp
jns
and
add
lret
and
lea
call
pavgw
fwait
mov
test
or
cmp
add
xchg
mov
sbb
lret
mov
out
dec
call
imul
and
cmpsl
pop
xchg
enter
sbb
out
or
mov
and
aad
cmp
pop
add
mov
or
vpsadbw
mov
jbe
insl
cwtl
pop
push
in
fs
xchg
cmp
pop
cmp
repz
jmp
push
mov
jnp
sbb
xor
push
call
xchg
mov
add
sbb
push
lahf
cmp
push
ret
loopne
and
mov
ds
inc
add
jp
out
or
dec
and
mov
bnd
aad
and
cmp
jnp
cwtl
pop
dec
aad
in
mov
mov
push
jno
jl
dec
repnz
sub
and
sbb
not
mov
or
adc
xchg
mov
adc
aas
sbb
mov
ret
add
gs
sub
cmpsl
repnz
mov
cmp
adc
xchg
mov
call
cmp
and
enter
mov
push
sahf
cmpsb
icebp
mov
sub
inc
inc
lock
or
call
jbe
and
je
jae
popf
sub
inc
leave
sbb
push
push
pop
int3
popa
sti
adc
in
loop
hlt
push
pop
inc
lods
inc
movsl
adc
lods
jne
or
es
into
lret
insl
or
pop
popf
xor
pop
aad
mov
out
push
into
je
ret
pop
nop
jae
jge
push
pop
push
mov
cltd
cmp
jae
mov
gs
jno
mov
and
pop
and
pop
lret
imul
push
adc
sub
dec
jno
test
mov
or
pushf
adc
test
test
std
jg
fs
and
iret
xchg
inc
sub
aaa
divb
sahf
es
cmpb
xorl
xchg
dec
out
adc
mov
mov
mov
jbe
insl
or
adc
xchg
mov
lahf
adc
lea
jmp
mov
fimull
mov
adc
push
pop
es
clc
jo
xchg
test
push
sbb
cmp
ficomps
and
cld
loop
in
pushf
xorb
adc
xor
sub
push
ljmp
outsl
aad
cmp
pop
mov
and
stc
stos
mov
mov
jg
mov
gs
outsb
xchg
cld
in
loop
inc
cmp
sarb
cli
mov
out
in
xchg
and
xchg
add
daa
arpl
xchg
flds
or
mov
sub
jmp
rorb
je
ja
push
xchg
xorb
outsb
push
xchg
lea
mov
clc
cs
ret
cmp
call
pop
ret
push
pop
stos
cld
mov
push
bound
push
out
iret
cmp
dec
out
mov
in
push
mov
xlat
lds
pop
push
fcomip
addr16
xor
mov
sarl
push
notl
outsb
rcll
jo
or
movsl
xor
je
jle
imul
std
add
add
test
jg
jmp
jge
mov
xor
out
jle
sti
insb
mov
mov
fistl
fdivp
mov
and
ja
xchg
push
cld
push
scas
fst
cmpsl
out
aam
dec
sbb
ret
in
int3
mov
loopne
dec
pop
mov
loopne
inc
rorb
jnp
add
cmp
loop
into
fdivrl
das
cli
gs
cmc
scas
jl
cltd
pop
sub
cmp
js
outsl
xor
rclb
pop
pop
hlt
repnz
xor
mov
xchg
mov
mov
lret
cmpl
add
cmc
mov
and
sub
push
add
mov
test
push
mov
lock
scas
fptan
cmp
jmp
sbb
cmpb
iret
in
arpl
test
test
and
mov
jo
push
lcall
fimuls
stos
push
in
aas
fdivrl
in
mov
fnsave
mov
jp
xor
loopne
and
test
xorb
mov
cmpl
push
pusha
push
jo
push
loop
dec
add
push
lods
test
dec
xor
xor
insl
jnp
mov
in
movsl
jge
data16
mov
pop
sub
cwtl
test
pop
add
sbb
scas
enter
sarb
addr16
dec
dec
movsb
xor
mov
mov
pusha
pop
pop
mov
jns
shrl
dec
mov
js
daa
leave
bound
pop
dec
addr16
in
mov
or
lock
jb
or
cld
addr16
mov
push
xor
jae
ss
xchg
add
test
icebp
push
repz
cmp
jno
int3
jae
mov
cmp
pop
test
inc
int3
sub
sub
mov
cmp
fdivp
lahf
mov
jae
andl
push
pop
mov
and
adc
int3
add
aam
xor
xor
adc
pop
repnz
aam
mov
xchg
sbb
rclb
aaa
mov
xchg
pop
add
out
cmp
mov
cmpsl
push
ljmp
xchg
lret
push
pop
jo
test
cltd
imul
pushf
jl
sbb
or
cwtl
cmp
adc
cs
in
fnstenv
and
sbb
sbb
cltd
mov
pusha
out
subb
in
in
mov
mov
ss
ljmp
popf
lds
or
call
jne
mov
push
push
jg
jno
fldl
fwait
push
nop
jecxz
fiadds
subl
outsb
mov
outsl
sbb
je
lret
addl
lret
enter
lods
rclb
dec
sbb
flds
loope
fs
es
adc
in
bound
loop
mov
clc
sbb
aad
div
movsl
aad
int
xchg
arpl
dec
push
insl
adc
hlt
shrb
cmpl
push
lds
in
mov
mov
in
subb
cmpsl
jb
andl
in
jns
enter
jle
loope
jns
xchg
or
imul
mov
subb
or
shlb
addr16
in
incb
insl
xchg
inc
in
sub
sbb
das
cli
bswap
adc
add
mov
ret
jae
cmc
inc
sti
push
movsl
leave
cli
jbe
data16
pop
mov
pop
add
dec
in
loopne
pop
cmp
out
xor
mov
cmpsl
mov
inc
negl
rorl
inc
xor
cmpsl
or
jae
sbb
add
and
cmc
pusha
jge
and
loop
mov
xchg
sbb
mov
in
xchg
mov
lahf
int3
icebp
mov
mov
daa
sub
inc
jb
sbb
pop
mov
dec
mov
add
sub
rcrl
jnp
sub
cmp
mov
imul
vpunpcklwd
mov
push
out
mov
std
dec
or
inc
insb
and
dec
cmp
adc
lods
push
add
mov
mov
xchg
pushf
sbb
lods
push
into
pop
sahf
ja
movsl
pushf
push
negb
testl
cmpsb
scas
pop
and
xchg
lods
xchg
and
push
and
lret
mov
lahf
jecxz
std
out
iret
sti
pusha
xchg
outsb
daa
jae
loopne
stc
or
cmp
mov
ret
ljmp
mov
out
call
pop
mov
or
sub
in
push
addr16
add
loope
push
xchg
adc
adc
push
int
addr16
gs
js
mov
mov
xor
or
push
aas
push
mov
and
test
sti
sarb
push
shl
xor
in
xchg
push
outsl
les
sbb
rcr
push
ffreep
mov
xor
xchg
sub
dec
insl
sub
mov
loope
or
sbb
cmp
dec
push
icebp
sarl
leave
popf
addr16
adc
jecxz
aas
add
addl
jg
lock
xchg
jmp
adc
sbbl
or
and
mov
cltd
mov
repz
adcb
loopne
out
mov
mov
jo
dec
xor
out
or
or
dec
dec
rclb
inc
pop
xor
add
push
cmp
pop
sbb
add
ss
mov
dec
and
dec
push
cmp
inc
lods
pop
and
stos
dec
movsl
sbb
or
in
mov
add
addl
out
pop
in
xor
xchg
mov
sub
add
stc
loope
icebp
insb
lock
call
aad
pop
xchg
movsl
mov
lret
popf
lret
sti
loop
out
andl
pop
in
sub
imul
dec
fs
and
cmp
movsl
fcoml
mov
ljmp
pop
imul
cld
dec
sub
rol
sub
cs
xchg
sub
xchg
fs
popf
iret
mov
das
xchg
in
ja
or
pusha
push
push
pop
mov
loopne
xchg
or
jmp
in
lods
movsb
adc
mov
gs
int
xchg
rcll
xchg
ltr
lea
xor
and
pop
fdivs
les
out
push
test
cmp
jle
ss
not
pop
mov
inc
mov
lods
cmp
popa
pop
rep
fsubrs
stc
push
imul
xor
loopne
cmpsb
ds
lret
rclb
ds
cmp
jne
sarb
jnp
imul
in
dec
mov
movsl
or
mov
std
dec
shll
fldenv
pop
and
push
lock
outsb
repnz
addr16
fists
mov
pop
test
ficoms
jmp
xchg
out
or
shll
inc
lods
divl
jp
lahf
insl
sbb
cmp
das
repnz
and
int
or
mov
cmc
addr16
mov
mov
bts
ljmp
mov
call
pop
xor
mov
sbb
ret
arpl
jl
adcl
jno
mov
movsl
dec
xor
mov
jb
dec
loope
pusha
jg
mov
jae
or
fsubrl
rcl
in
jg
add
jmp
cltd
fldlg2
push
sbb
hlt
in
cld
adc
les
adc
mov
sub
pop
inc
sysexit
push
shlb
pop
xlat
mov
jmp
enter
push
addl
xor
mov
daa
mov
xor
dec
mov
or
sub
inc
and
mov
adc
sbb
shl
mov
ret
inc
fdivs
ljmp
pushf
cltd
mov
lods
subl
and
and
adc
pusha
cmp
adc
mov
mov
roll
idivb
loope
adc
cmp
fnstenv
leave
fcmovb
xchg
mov
cmpsl
sti
xorl
nop
outsl
xchg
jno
push
inc
imul
cmpl
xlat
inc
sbb
inc
and
shll
xor
mov
mov
xlat
inc
inc
xorb
test
cmp
loop
sub
das
sub
jge
popf
cmp
imul
mov
jbe
cmpsb
mov
stos
mov
push
data16
push
add
jne
clc
and
call
repz
or
pop
stos
stc
dec
mov
sub
jge
mov
mov
sahf
jmp
xchg
pop
sahf
push
ds
fwait
in
add
int3
jl
add
and
xchg
negl
mov
push
call
je
mov
lret
xor
and
ljmp
inc
and
dec
dec
push
idivb
stos
mov
add
mov
rcr
jnp
sub
and
negl
inc
test
dec
enter
cmpsl
xor
hlt
inc
mov
sti
divb
dec
inc
in
mov
inc
mov
jl
ds
dec
rclb
sbb
out
dec
insb
loope
sti
imul
mov
cmp
frstor
inc
mov
dec
mov
scas
and
sti
in
or
mov
push
mov
adc
lret
fsubl
lods
fidivl
dec
xchg
in
arpl
cmp
cld
push
pusha
popa
inc
inc
jg
xchg
iret
xchg
and
ljmp
jp
xchg
cmp
xor
push
and
daa
pop
dec
mov
es
int3
adc
in
test
outsb
loopne
or
dec
mov
jg
insl
clts
jg
pop
jmp
mov
cmp
sbb
arpl
pop
jmp
popf
pop
cwtl
inc
sub
leave
sti
pop
cmp
das
jo
mov
cmp
daa
pop
cs
jg
fsubl
xchg
divl
jo
mov
mov
xchg
inc
shrl
xchg
mov
pop
jge
jae
loope
sub
fmuls
pop
pcmpgtd
pop
and
xchg
add
pop
push
xchg
sahf
pop
mov
push
cld
les
les
xchg
rolb
loopne
jo
std
arpl
mov
outsl
insl
cmpsl
xor
jb
pop
push
push
cs
jnp
add
pusha
pusha
sar
mov
cli
daa
ror
add
mov
sahf
fmuls
and
dec
dec
ret
xor
cmp
das
cwtl
mov
outsl
xor
pop
jb
jle,pn
lahf
scas
cmpsl
clc
adc
leave
jns
js
or
pop
mov
sahf
int3
jp
pop
test
inc
addr16
push
mov
filds
push
inc
outsb
xchg
cmpsl
rcll
dec
and
leave
movsb
sub
pop
sti
movsl
std
pop
pop
test
mov
sbb
stc
cld
aaa
das
mov
push
ficoms
aam
sub
mov
cmp
dec
dec
leave
add
adc
hlt
imul
call
lahf
mov
pop
nop
fstpt
dec
orl
lret
popf
fwait
sti
js
negb
mov
dec
push
xchg
fs
jp
ffreep
pusha
repnz
cli
popf
sbb
icebp
or
js
cld
das
cmova
push
pop
ja
cmpsb
fsubs
punpcklwd
mov
mov
xor
cmp
repnz
lret
inc
nop
inc
inc
popf
aam
in
xchg
fdivs
inc
fists
pop
loopne
pop
fwait
xchg
add
daa
push
xchg
test
sbb
and
shll
adcl
add
stos
movsb
xchg
popa
rolb
lods
cmp
sahf
add
and
mov
bnd
xchg
dec
push
out
xor
mov
in
popa
out
inc
mov
xchg
fnstcw
sub
jp
shll
sub
xchg
jge
iret
lds
and
jp
ds
into
or
inc
mov
xchg
add
jo
mov
in
loop
jne
out
rorb
stc
out
lret
push
xchg
je
mov
sbb
inc
cld
cmpsl
insb
cli
rclb
xor
cmp
inc
in
js
mov
push
push
inc
loopne
mov
sbb
fldl
pushf
fidivrl
add
sub
rclb
rcrb
shr
push
dec
cmp
inc
cmp
enter
xor
push
dec
popa
fwait
das
dec
shrl
les
push
xchg
andb
cmp
imul
addr16
jp
daa
into
jnp
in
add
jecxz
outsl
mov
mov
ljmp
xchg
jae
sub
filds
cmp
dec
dec
popa
test
dec
dec
xor
not
adc
xchg
mov
pushf
push
out
xlat
out
int
jp
pop
jecxz
sub
jno
pop
cmp
stos
lea
mov
and
mov
icebp
sti
adcb
cltd
icebp
sahf
std
aam
mov
dec
outsb
sar
mov
std
dec
inc
push
cld
push
aaa
mov
stos
lahf
mov
mov
inc
scas
xor
mov
jp
imul
ror
or
or
or
pop
leave
and
outsb
scas
jo
bound
mov
adc
or
addb
cmp
push
pop
mov
stos
cli
test
adc
sub
inc
xchg
jle
xor
pushf
push
add
lret
pop
in
jne
push
shrl
sti
mov
jl
daa
sub
sub
testl
sbb
mov
jmp
pop
movsb
int
subb
rorb
rcll
lret
fwait
pop
adc
dec
or
inc
mov
ljmp
out
push
inc
ror
sbb
xor
xchg
mov
or
and
pop
adcl
subb
in
xor
mov
and
dec
lcall
push
mov
call
fadds
and
push
xchg
stc
sub
loopne
and
cmp
pop
xchg
jle
push
jnp
sub
jno
mov
sbb
sar
fs
mov
in
test
cs
cmp
cmp
pop
test
add
out
mov
pop
pop
inc
dec
outsl
pop
sbb
mov
lock
sub
pop
lds
cmp
cmp
jb
or
addr16
ds
popl
inc
punpcklwd
cmp
pop
or
mov
push
mov
mov
clc
adc
gs
popa
bnd
cld
lock
push
int3
and
or
sbb
pop
adc
inc
roll
stc
xchg
std
orl
leave
cmp
test
push
jns
loope
repz
outsb
jge
test
xchg
push
pop
inc
fsubr
test
cmp
popf
jmp
and
ret
fstpt
test
ss
inc
mov
les
rcrb
scas
pusha
adc
hlt
push
fdivr
icebp
in
push
push
sbb
cmp
rcr
sbb
cmp
js
sub
xchg
outsb
push
and
std
or
mov
rcrl
dec
stc
mov
insb
into
sbb
pop
imul
das
push
sar
adc
push
adc
jmp
inc
sub
pushf
cmp
imul
xchg
and
or
bound
xlat
mov
in
xchg
mov
adc
loop
cli
psubusw
fwait
adc
rcrb
pushl
xor
pop
fcomip
mov
dec
adc
repnz
or
pusha
dec
sbb
mov
popf
cld
rcrl
xchg
lret
addr16
fmull
and
ret
ret
insb
sbb
push
lds
cltd
rcrl
mov
lds
es
sbb
xor
hlt
shrl
dec
in
xchg
push
mov
mov
int3
jg
push
and
out
xchg
test
cmp
sub
dec
testb
adc
jmp
int
xchg
push
loope
js
lods
and
outsl
addr16
and
test
mov
pop
pop
pop
mov
mov
dec
mov
push
test
inc
fnsave
loop
push
fidivrl
out
mov
je
in
outsl
sti
and
incb
sub
jnp
je
lods
std
cmp
inc
scas
inc
repnz
fs
in
xor
or
ds
and
jp
cmp
mov
cmp
pop
mov
pushf
lret
call
xchg
std
push
mov
leave
aas
mov
lods
cmpsb
fstpt
stos
lds
in
jns
je
arpl
test
jbe
inc
mov
inc
and
std
imul
xor
jae
push
nop
sub
mov
inc
xchg
xlat
xor
test
dec
lret
test
or
add
jb
mov
push
rorl
pop
inc
sti
lahf
int3
xor
mov
dec
repnz
push
push
cmpsb
xchg
mov
xchg
lods
inc
mov
std
mov
lret
jp
hlt
lahf
fistl
dec
loopne
pop
in
pop
mov
pushl
shl
test
in
dec
mov
xchg
jl
xor
ret
ja
aas
cmp
pop
pop
mov
mov
mov
push
push
enter
inc
ljmp
pop
mov
or
and
jnp
rorb
xchg
daa
movsb
int
repnz
jno
pop
inc
or
jge
call
sbb
idivb
out
imul
xor
sbb
aaa
inc
mov
mov
cs
add
aad
jns
sub
mov
into
js
cld
inc
std
pop
rolb
in
int3
notb
dec
pop
fildll
add
fisttps
pop
cmpsb
mov
fisubl
inc
xchg
push
cli
and
ret
sti
adc
popa
mov
mov
mov
sub
push
aam
aam
dec
bound
sbb
adc
scas
inc
dec
daa
aaa
inc
outsb
in
int3
shrl
xchg
add
andb
mov
xor
sub
ss
lret
xor
add
ret
insb
mov
scas
sub
movsb
ror
add
mov
or
push
fiaddl
mov
inc
pop
cmp
sub
pusha
fstl
xor
jg
pop
mov
in
out
repnz
inc
mov
or
cmp
xchg
clc
sbb
mov
mov
daa
adc
dec
in
xor
insb
lcall
push
rolb
movb
mov
xchg
dec
cmp
jmp
scas
mov
fmuls
loope
mov
rcrb
xor
cs
push
andb
insb
dec
ficoml
mov
xchg
jb
mov
add
cmc
notl
shl
xchg
xor
cmp
outsb
ss
in
pop
xor
iret
cmp
out
insb
mov
ds
mov
xchg
lcall
sbb
cwtl
ret
mov
cmp
popa
aam
sbb
fildll
push
mov
and
mov
cwtl
jns
mov
xchg
aad
xor
mov
mov
mov
fsubr
cltd
mov
sahf
sahf
sbb
test
add
cwtl
dec
and
enter
int
cmpsb
and
xchg
jae
repnz
test
std
xchg
cmp
lahf
iret
jbe
mov
xor
shl
mov
cmp
push
push
pusha
add
pop
pusha
and
sub
mov
fnstsw
sub
cwtl
cs
popf
jmp
mov
movsl
cmp
subb
xchg
movsl
sub
rclb
add
je
insl
int3
incl
out
icebp
cmpsb
lret
je
mov
xchg
mov
loopne
in
inc
insl
mov
mov
sbb
push
pusha
mov
imul
push
jb
stos
jecxz
cmp
mov
mov
add
cmpsl
imul
in
add
pop
pop
sbb
outsb
loop
lods
dec
mov
rorl
xor
jbe
pop
pop
aam
pop
jnp
ret
cmp
sbb
ret
adc
mov
addl
out
pop
mov
adc
test
je
xor
add
ss
push
test
enter
test
das
adc
outsl
mov
pop
xchg
mov
jmp
aad
mov
repnz
pop
arpl
imul
add
mov
scas
sub
fucom
mov
xorb
int3
out
or
js
loop
into
and
aaa
fdivrs
jbe
popa
or
push
sbb
xchg
jns
pop
stos
cmp
mov
cwtl
mov
sbb
sti
movsl
jmp
outsl
jae
mov
dec
mov
jb
pop
inc
hlt
iret
xor
mov
int
pop
es
ljmp
cmpsb
popa
and
loope
mov
mov
jno
jecxz
lret
iret
xor
pop
lds
cwtl
mov
pop
mov
dec
push
bnd
mov
scas
or
lret
push
scas
iret
cmp
fsts
mov
mov
lds
push
sbb
test
or
insl
cmp
push
lcall
aad
test
es
pop
push
fildl
ror
mov
shrb
das
and
mov
xchg
aam
call
jecxz
sahf
mov
cwtl
outsb
cwtl
adc
adc
cwtl
mov
in
add
sbb
shll
xor
out
xchg
inc
int3
ror
add
imull
subb
mov
cmc
add
sbb
push
imul
popf
cmp
jmp
lds
xchg
push
and
repz
scas
lock
pop
negl
dec
jae
or
inc
hlt
je
lods
push
cmp
cmc
dec
inc
loope
lret
mov
jmp
jbe
clc
addr16
mov
int3
xchg
ds
jmp
insl
cmpsb
out
xchg
pop
fisubrs
rcl
lahf
or
mov
rclb
test
push
adc
xchg
in
xchg
jne
push
or
stos
inc
outsl
lret
subl
jl
shlb
push
jno
sub
xor
pushf
lret
adc
and
mov
pusha
xchg
mov
mov
and
xor
push
sub
dec
pop
push
mov
outsl
push
enter
rol
dec
lret
xchg
sbb
jae
add
leave
cmp
adc
or
mov
lea
int
cld
out
loopne
leave
jno
pop
adc
pushf
outsl
xlat
adc
mov
xchg
test
push
xor
stos
pop
push
test
or
cmp
je
adc
mov
pop
ja
dec
les
insl
xchg
push
mov
and
ss
or
jmp
lret
shl
mov
ret
jbe
loop
sbb
push
push
add
or
lcall
sub
aad
imul
aas
adc
shr
push
add
sbb
push
pop
and
push
inc
mov
mov
push
cltd
mov
dec
cmp
idivl
mov
dec
cmc
mov
push
push
pop
repz
push
sub
cmp
imul
cmp
push
jp
test
push
clc
inc
fiaddl
jecxz
clc
xor
fbstp
bound
jecxz
leave
hlt
mov
pop
fisubl
fwait
andb
lods
js
or
and
sbb
pop
push
pop
test
loopne
cmp
mov
cld
xchg
pop
lcall
xchg
out
inc
aaa
mov
mov
xor
or
and
cltd
inc
xchg
imul
inc
inc
mov
sub
aaa
mov
clc
inc
push
in
adcb
lahf
cmp
loope
out
or
push
jg
pushf
add
icebp
inc
rcl
mov
inc
iret
xchg
mov
std
lret
sbb
clc
xchg
out
nop
adc
lret
dec
popa
xchg
lret
mov
sub
insl
fildl
xchg
into
dec
and
enter
adc
adc
fdivrl
mov
jp
mov
push
push
stos
push
ljmp
movsl
subb
ret
fsts
inc
enter
pop
dec
or
inc
mov
aad
arpl
push
sub
cmc
add
test
jnp
adc
into
xchg
jno
mov
inc
pushl
jge
out
inc
insb
cmp
ret
mov
pop
iret
or
pop
lret
push
xlat
and
cmp
pop
insl
jnp
int3
ljmp
call
dec
lea
insb
adc
sbb
int3
mov
xchg
data16
ret
inc
mov
aas
sub
mov
fnstcw
testl
lret
or
addl
push
insb
neg
js
fmuls
lret
dec
pop
je
pop
xchg
mov
icebp
xor
mov
or
sbb
dec
mov
add
jns
pop
scas
data16
stc
xchg
enter
xchg
outsl
mov
mov
adc
mov
sbb
scas
add
add
enter
fstpl
dec
in
loope
frstor
add
insb
lds
or
not
add
dec
sbb
push
add
cmp
inc
jns
addr16
in
out
test
flds
inc
cwtl
push
lret
lret
jb
insl
nop
push
pusha
jecxz
xchg
notl
xlat
lock
mov
adc
inc
int3
mov
test
push
lods
add
sub
fstps
pop
addr16
sti
pop
add
push
adc
loopne
cmpsb
cmp
inc
data16
jge
push
loope
cmp
dec
fwait
xchg
mov
xlat
xchg
bound
xor
scas
outsb
pop
ficoms
mov
fwait
cmp
mov
aaa
imul
or
pop
pop
adc
cmp
int3
mov
fbstp
push
xchg
adc
repz
or
xor
push
gs
inc
inc
ss
mov
rol
mov
sub
negb
xchg
stos
mov
stos
xor
pop
fs
or
fistps
aad
cwtl
std
loop
jecxz
push
sub
mov
cmc
addr16
fildl
cmp
sbb
test
dec
loop
fistl
daa
insl
jl
fistl
pop
mov
push
mov
data16
cmp
xchg
push
lds
out
lock
inc
push
sbb
mov
std
xchg
les
data16
ret
jecxz
insl
adcl
scas
inc
inc
test
repz
or
pop
shl
mov
dec
pop
leave
mulb
fiadds
fldt
pop
adc
mov
jge
loop
push
xor
aad
jne
xchg
xchg
addr16
or
rorl
cmp
cwtl
lea
push
and
cli
mov
jnp
xlat
negb
pop
push
mov
sbb
xor
mov
aas
mov
in
testl
cmc
shlb
dec
inc
cmp
jns
jae
jge
jmp
sub
pushf
inc
aam
jle
xlat
movzwl
iret
and
push
sbb
jno
sbb
bnd
aas
xchg
stc
cmp
test
cmp
into
adc
loopne
xchg
cmc
loop
sub
jns
dec
movsl
in
push
xchg
je
jbe
cmc
sbb
test
push
push
cmp
push
cmp
das
or
add
add
rcl
mov
mov
pop
jmp
mul
paddsw
pop
subb
inc
dec
notb
add
je
cs
gs
jge
sbb
icebp
test
idiv
push
or
xchg
jmp
sbb
or
arpl
loopne
es
std
xchg
pop
les
mov
cmp
or
enter
fs
lods
ja
mov
sub
es
xor
orl
int3
mov
lahf
fdivrl
push
arpl
mov
lcall
add
mov
imul
out
mov
fadds
inc
pop
and
ficoms
out
cli
loope
sahf
or
shl
and
pop
jmp
test
jge
imul
and
pop
mov
xor
lahf
in
push
xchg
or
push
lods
pop
xor
add
imul
pop
popa
loop
mov
les
mov
cltd
mov
lock
push
dec
and
sbb
xchg
stc
jbe
subb
mov
pop
popa
cli
and
in
fninit
mov
fwait
pusha
pop
cmp
cmp
je
or
push
add
or
enter
mov
and
push
mov
clc
xorb
add
lahf
ret
ss
fdivl
jecxz
jnp
mov
fisttpl
adcb
aad
js
movsb
or
ljmp
inc
and
movsb
cmp
xchg
iret
sbb
cmpb
add
cli
inc
and
mov
pop
je,pn
mov
and
mov
pop
sti
in
add
leave
and
mov
outsl
cmc
dec
test
jno
shrl
xor
fldcw
jno
and
daa
push
add
repz
fdivrl
int
lcall
mov
push
sbb
stos
adc
mov
popa
mov
fisubs
push
mov
cwtl
or
dec
loope
ljmp
add
and
stc
fdivs
and
sub
push
cmp
mov
jg
or
stos
ds
loopne
mov
add
mov
cmpsb
sbb
mov
shrl
in
pop
add
xor
arpl
dec
lret
pop
sub
mov
mov
adc
adc
enter
aam
jmp
push
repz
mov
dec
test
fildll
int3
dec
mov
out
pop
sub
cmp
and
ret
repz
aas
xchg
leave
jb
les
sub
mov
icebp
testl
aad
push
sbb
jmp
in
xlat
out
cmpsl
aaa
aas
sbb
sub
dec
dec
mov
incb
mov
and
std
ficoms
fisubs
mov
jl
pop
adc
adc
and
jmp
inc
dec
mov
mov
stc
das
dec
cmc
cld
add
add
loop
insl
iret
cmc
sub
push
mov
sbb
dec
test
test
inc
mov
in
jnp
in
push
stos
add
out
fs
std
ljmp
push
test
xchg
in
or
cmpsl
push
ret
sbb
das
dec
cmpsl
arpl
jmp
leave
vmovdqa
divb
sub
dec
nop
jp
daa
add
icebp
lods
pushf
lar
popf
push
or
dec
rorl
std
pop
xchg
out
jecxz
mov
and
pcmpgtd
dec
and
cmp
scas
pop
and
dec
xchg
enter
adc
or
cli
jl
sub
fbld
mov
loop
xchg
mov
outsb
mov
push
and
fwait
jecxz
out
xchg
insl
pushf
test
xchg
call
inc
cmp
push
sbb
jne
add
hlt
or
out
andb
mov
xchg
xor
es
call
sub
gs
cmpsl
popf
mov
jno
xchg
rcrb
aas
mov
out
adc
pop
cmc
push
or
ss
les
push
mov
out
adc
cmp
aaa
mov
imul
pushf
cmp
xchg
dec
add
mov
mov
sbb
xor
jbe
fucom
aaa
rcrb
xchg
xchg
daa
call
cmp
fsubrs
and
shrl
mov
push
cmp
rcrb
adcl
orl
out
inc
fisubs
lret
and
je
adc
aad
enter
mov
nop
jns
add
negl
mov
xchg
imul
xchg
inc
test
pop
das
or
js
inc
scas
or
or
or
shrl
testb
add
xor
xor
jb
stos
fdivl
ja
sub
fimull
jb
sub
jge
cmpsb
aaa
lahf
lea
ss
js
jne
dec
scas
test
ja
xorl
js
cs
pop
jle
cmp
xor
rcll
push
push
cli
cmp
sbb
lock
bound
std
loope
adc
mov
popf
mov
fcomi
xchg
rcrl
xchg
mov
adc
pusha
lods
adc
idiv
sub
sti
xor
fidivl
ds
push
inc
adc
aad
aas
sbb
shll
aas
je
call
movsl
inc
hlt
dec
xor
jg
fisubl
das
inc
adc
sub
sti
push
daa
rcrb
cmp
mov
cli
into
mov
sbb
je
inc
ror
and
jecxz
gs
lock
and
cld
call
call
andl
les
repz
push
mov
mov
xchg
mov
out
push
sub
push
out
mov
adc
mov
lret
les
adc
stos
sub
mov
and
pop
inc
lds
fbld
lcall
mov
xchg
adc
adc
jns
shrl
shrl
pop
lods
fldenv
shl
jae
dec
das
push
je
ja
sbb
sub
les
mov
imul
das
fldcw
sbb
ret
or
xor
push
test
js
scas
dec
lret
sub
jbe
ret
dec
xor
sarl
not
out
add
add
mov
adc
pop
test
arpl
push
pusha
lret
mov
les
xchg
pop
test
js
loop
ret
pushl
adc
pop
xchg
sub
lds
aad
or
pop
rcrb
out
mulps
enter
sbbl
inc
addr16
or
xor
arpl
loope
mov
jge
pushf
mov
inc
add
ret
lahf
jg
stos
adc
jp
cmp
stos
jmp
cmp
imul
mov
aad
push
leave
dec
mov
or
mov
test
insb
out
iret
aad
push
sti
add
int
cs
push
pop
dec
call
inc
sub
imulb
data16
out
jbe
std
jb
jns
sbbl
jl
rep
cmp
cmc
popf
call
inc
push
xchg
push
push
fdivr
jp
daa
sahf
stos
je
pushf
mov
and
mov
lret
lock
ja
cmpsb
xchg
cmp
cmp
arpl
rcll
push
js
mov
cmp
aad
arpl
ret
out
repz
and
jb
lcall
mov
mov
mov
mov
add
add
data16
adc
lcall
mov
ja
ret
imul
ljmp
fwait
sbb
mov
addr16
notl
xor
pop
push
push
dec
insl
dec
loope
test
push
int3
mov
mov
sbb
or
aad
lea
mov
sbb
hlt
pminsw
in
mov
shl
mov
jmp
sarb
cmp
movsb
xchg
fldl
inc
test
dec
popf
rcrl
daa
scas
das
lret
mov
ljmp
movb
lahf
stos
xor
xchg
inc
adc
aad
push
inc
mov
xchg
and
jmp
out
xchg
insl
xor
fidivrs
stc
inc
mov
add
add
fwait
sbb
cmp
inc
in
cmp
mov
inc
lret
je
sar
imul
shll
nop
int
pop
jae
js
pop
mov
jmp
andb
or
lods
popa
orb
xchg
sub
dec
out
js
xchg
into
test
repnz
add
das
cmc
stos
pop
inc
ss
cmpsb
rolb
ret
aaa
and
mov
cmp
cli
imul
mov
shrl
mov
mov
ss
xor
loope
out
push
shlb
sub
jecxz
lret
mov
loopne
add
lods
mov
lret
sub
scas
call
repnz
or
xchg
jl
sbb
add
incb
cli
les
push
cwtl
mov
fxch
pop
inc
sarl
mov
mov
xlat
test
sub
loopne
sbb
lods
lret
out
test
rcrl
jo
push
out
mov
outsl
rcrl
inc
icebp
adc
jnp
int3
fcomps
mov
mov
adc
or
rorb
adc
cmpsl
aad
adc
jmp
sahf
xchg
mov
mov
pop
mov
dec
sbb
push
pop
cli
xchg
insb
jno
sub
addr16
rep
pushf
enter
inc
js
aaa
lds
push
sub
mov
mov
out
mov
mov
jae
mov
add
stos
mov
or
fistpl
pusha
sub
mov
jle
mov
in
test
sub
lcall
outsl
lcall
bound
and
bound
into
daa
lods
mov
add
mov
rcr
sub
push
sbb
xchg
insl
imull
xor
iret
push
mov
xchg
mov
jnp
xchg
push
mov
shll
fs
stos
outsb
sbb
add
xor
pop
sub
inc
inc
mov
pop
mov
push
lcall
mov
add
gs
mov
push
icebp
jle
ja
mov
add
cmpsl
xorb
pushf
into
cmp
fucomip
jnp
pop
sbb
fsubs
dec
pop
jae
mov
or
dec
std
mov
loop
xchg
sti
stc
push
cli
fdivl
fcompl
fwait
jo
cmp
xchg
cmp
push
fcoms
int3
mov
ror
sbb
add
cmpsb
leave
jnp
fs
int
aaa
aam
popl
sar
mov
fnstcw
jne
mov
dec
pop
mov
out
pop
mov
xchg
stos
push
add
cltd
movsl
mov
repnz
xchg
sbb
imul
xchg
mov
pop
mov
mov
xchg
stc
mov
mov
mov
mov
fwait
inc
dec
stos
ffreep
out
outsb
rcrb
repz
sbb
dec
pop
iret
pop
and
cmc
mov
mov
outsb
andb
cld
pop
jo
imul
sub
dec
xchg
mull
cmpsl
add
shlb
jo
and
jae
leave
add
outsb
fisttpl
adc
faddl
in
scas
out
fldt
or
add
aaa
lret
cmp
imul
jmp
sub
orb
out
data16
mov
test
add
in
sbb
dec
xchg
and
lea
cli
addr16
cmp
loop
mov
int3
and
adc
loopne
rolb
xchg
sbb
in
pushf
fimull
fsubs
xchg
mov
mov
sub
mov
je
cmpsl
repnz
mov
pop
scas
cmp
add
js
mov
xlat
iret
mov
aas
rorb
out
mov
add
push
dec
push
cmp
or
dec
das
lea
mov
xchg
inc
mov
add
mov
pop
xchg
push
aas
jae
das
pop
rorl
mov
jnp
dec
pop
clc
xchg
mov
dec
dec
imul
fwait
imul
xchg
cli
jmp
xchg
cmp
xor
pop
and
loope
xchg
adc
jmp
cmp
mov
cmp
push
pop
push
mov
sbb
push
mov
idivb
popf
lahf
mov
cmp
mov
cmpsb
shl
cmp
pop
dec
sub
cmp
bound
pushf
xchg
jle
jo
inc
adc
aaa
adc
or
imul
loope,pn
mov
mov
je
add
inc
sub
adc
xor
in
lret
mov
mov
xor
sti
fs
push
shll
test
pop
outsb
fbld
je
loop
xchg
fdivl
repnz
out
stc
push
adc
jl
andl
push
mov
mov
mov
pop
fcompl
cmc
jmp
pop
or
sbb
mov
sbb
sbb
mov
mov
sub
stc
mov
loopne
adc
enter
xor
je
fcmovb
xchg
jb
insl
add
or
sbb
addr16
and
rolb
xchg
sbb
inc
sub
pusha
cmp
fcompl
pop
dec
mov
pushf
test
out
fs
pop
outsl
cmp
stc
xor
pop
push
pop
xchg
and
and
sbb
lret
adc
pop
pop
fs
addr16
xor
add
mov
xchg
leave
mov
mov
scas
ja
inc
sub
sbb
das
test
push
jns
mov
mov
aas
cmc
xchg
aaa
push
adc
inc
xchg
push
mov
mov
daa
xor
scas
mov
and
shrl
xorl
xlat
cmp
icebp
out
pop
ds
xchg
xchg
iret
mov
int3
or
add
shr
xchg
addr16
leave
xor
add
cmpsl
xlat
push
pop
pop
cli
mov
mov
mov
mov
incb
push
xor
push
push
sub
cmp
inc
xor
fs
push
mov
dec
inc
xlat
scas
dec
pusha
lahf
in
adc
pop
out
jne
mov
inc
bound
add
mov
mov
js
sub
or
mov
fidivs
scas
test
jo
mov
stc
clc
pusha
notb
std
xor
jmp
add
and
mov
pop
jno
pop
jg
jns
je
sbb
addl
scas
jo
das
mov
es
fidivl
jl
cmpsl
mov
jns
dec
fisubs
ficoml
insl
shlb
mov
dec
test
mov
arpl
cwtl
sub
adc
je
inc
stos
stos
cli
push
sub
imul
sub
fisubs
jnp
sahf
cmp
dec
jecxz
sbb
cmp
les
leave
dec
test
mov
xchg
mov
inc
and
add
cmp
jns
lods
sub
or
mov
les
adc
cmp
rolb
sub
inc
mov
sbb
jne
movsb
xor
in
outsb
out
xchg
std
imul
jecxz
pop
mov
xor
gs
push
push
or
mov
cmp
xchg
add
mov
xchg
fistps
hlt
inc
int3
xchg
jnp
pop
mov
sbb
inc
add
pop
mov
lahf
mov
mov
mov
cmpb
mov
or
mov
push
test
dec
rcr
or
xchg
and
mov
sub
and
in
test
or
cwtl
dec
sti
mov
rclb
sub
arpl
fidivl
andl
xchg
js
xor
or
lret
dec
lahf
push
jmp
pusha
or
js
mov
xchg
in
ja
rsm
and
insb
scas
mov
imul
aas
xchg
pusha
repz
add
inc
in
dec
call
mov
cltd
daa
rcrb
loop
inc
je
xchg
jl
xchg
adc
imul
insl
ja
push
jle
cs
pop
adc
lcall
nop
pop
dec
outsb
mov
jecxz
mov
sub
xchg
jb
aaa
das
rclb
aaa
dec
xchg
sbb
jne
pop
rorb
out
sub
adc
iret
adc
loope
push
lret
pusha
ror
aad
cmpsl
add
inc
imul
andb
mov
inc
cmc
lahf
inc
mov
sbb
and
xchg
and
push
aam
out
dec
dec
dec
sbb
cmp
es
sub
xchg
mov
jl
clc
push
out
ret
inc
fnstenv
xchg
lods
pop
js
mov
sbb
je
inc
and
in
loop
adc
scas
mov
lods
mov
shl
add
scas
cmpsb
or
clc
shll
xchg
ja
lock
in
pop
sub
test
test
xchg
test
or
xchg
xchg
and
sbb
in
lods
hlt
mov
movsb
mov
xchg
pop
test
jg
push
movsl
push
or
fdivrs
jb
and
push
dec
mov
jne
shl
repz
ds
add
xchg
ds
mov
push
xor
jbe
pop
inc
mov
test
sub
loop
pop
xchg
sbbl
jne
cs
xor
or
je
push
into
call
jnp
cli
arpl
fs
cs
pop
arpl
out
adc
mov
or
jne
or
in
movsb
movl
pop
outsb
push
into
loop
int3
popa
arpl
adc
mov
repz
push
jge
mov
iret
push
or
and
xor
sbb
lcall
xchg
and
jb
outsl
adc
sbb
fistpll
add
cmpb
cmpb
jne
mov
pop
mov
and
adc
cwtl
out
or
pop
pop
test
insl
inc
mov
fisttpll
icebp
or
js,pn
adc
jmp
inc
pop
inc
rorl
subl
cli
call
repz
mov
dec
adc
xchg
xchg
ficoml
cmpb
pop
dec
fldt
scas
fsubs
add
shll
sbb
inc
pop
loope
jae
cmp
in
mov
pop
xlat
das
sub
push
aaa
pushf
or
or
neg
cmp
pop
clc
shrl
notb
sub
addr16
xor
xor
lock
adc
pop
mov
mov
dec
call
jp
pop
and
or
sub
enter
mov
mov
lods
add
inc
test
jl
sub
inc
mov
dec
add
push
cmp
dec
movsb
add
dec
dec
mov
call
loop
sub
in
insb
cmp
fcmovne
and
or
push
jl
or
or
xor
bound
push
clc
sbb
jmp
stc
pop
xlat
rclb
pop
sti
mov
mov
push
xchg
jle
pop
iret
les
test
dec
add
je
insl
es
rorb
repz
into
aaa
mov
pushf
sbb
ret
test
test
push
push
inc
rcl
cmp
xor
out
sub
xchg
mov
lcall
mov
ds
cmp
push
inc
xchg
jl
inc
adc
loope
jbe
xchg
js
lret
scas
or
dec
pop
fistps
pop
fmulp
jnp
xor
or
insb
jg
xlat
ret
or
in
sub
clc
mov
daa
pop
pop
cwtl
loope
add
pusha
clc
sbb
outsb
dec
jnp
ret
and
das
es
mov
outsb
mov
lods
orb
pop
xlat
xchg
cmpl
and
push
jp
fdiv
jns
in
mov
cmp
mov
push
or
mov
add
test
xor
cmpsb
cmp
mov
in
pop
pop
gs
aam
inc
ficoms
out
rcrl
notl
inc
lds
jl
xchg
cmp
dec
adc
lret
push
xchg
test
rol
scas
sbb
xor
test
sbb
sbb
sub
sbb
sub
lock
clc
mov
ss
imulb
and
inc
bound
jp
lret
orb
dec
adc
xor
cmp
leave
fldt
add
adc
jmp
inc
xchg
cmp
add
es
aam
mov
jge
and
sub
jae
push
xchg
fmull
dec
jge
push
out
xchg
adc
lcall
rorb
and
adc
sbb
inc
sub
mov
sbb
jns
xchg
repnz
add
sub
adc
mov
add
dec
xchg
or
iret
dec
std
pop
lods
aas
sub
enter
dec
loopne
xor
inc
sub
sub
jecxz
cwtl
sahf
jge
fnstenv
cmpsl
dec
outsb
cmc
mov
mov
shll
arpl
mov
aas
stc
shlb
inc
xor
push
popl
popa
sub
jmp
cmp
xchg
ret
int
or
aaa
test
nop
sbb
imul
mov
ficoms
loop
in
pushl
cltd
pop
add
push
dec
scas
orl
mov
ljmp
push
aad
iret
or
bound
popa
jnp
jbe
mov
pop
mov
sbbl
out
lahf
xchg
repnz
test
popf
inc
mov
popf
jge
or
mov
pop
mov
int3
push
cmp
add
sub
ss
out
int
dec
cmp
inc
pop
aaa
sub
xchg
je
jnp
xchg
dec
jae
rorl
or
adc
incl
cld
ja
push
into
loop
je
sbb
stos
pop
pop
insb
sbb
xor
sahf
pop
sti
jno
mov
cli
arpl
sub
hlt
sbb
or
mov
mov
stc
in
push
fcomp
add
das
imul
jb
xchg
cmp
dec
lea
mov
repnz
mov
jne
cmp
ret
rorl
push
bnd
or
orb
pop
call
or
adc
xchg
mov
dec
xchg
jo
cmpsb
mov
jmp
adc
jg
test
push
popa
mov
xlat
push
lahf
in
push
stos
fldcw
mov
push
cli
and
pop
stc
fcoms
or
adc
fs
mov
dec
xchg
mov
mov
dec
jnp
mov
cli
jae
aam
fwait
es
adc
movsb
pop
jp
sbb
cwtl
ja
fiadds
outsl
jns
mov
pop
stos
int
mov
xor
jbe
les
jns
mov
push
ljmp
stc
inc
stos
push
push
push
xor
ss
pop
cmpsl
cmp
or
loopne
js
mov
ret
jle
out
jnp
dec
dec
sub
and
push
ficompl
out
lods
jge
int3
sbb
or
or
adc
stc
push
dec
adc
into
ja
sub
inc
add
out
ss
jne
icebp
insl
add
or
jg
jl
adcb
iret
lods
mov
xchg
leave
mov
out
ficoml
shr
scas
mov
out
add
icebp
popa
popa
setb
mov
or
aam
in
or
push
js
add
pusha
xlat
inc
jne
call
mov
mov
sbb
dec
sub
testl
ret
adc
add
cld
mov
add
leave
pop
cs
imul
stc
add
imul
out
jmp
cmpb
adc
daa
and
in
ret
jns
adc
jbe
dec
inc
sub
or
sbb
dec
pop
scas
scas
push
or
push
pop
sti
push
pop
popa
out
xor
pop
or
insl
pop
and
cs
mov
push
pop
jb
mov
test
cli
fdivrs
dec
xor
adc
in
jns
cmp
out
scas
mov
sbb
or
push
jl
sarb
mov
mov
fsubrl
mov
jmp
pusha
adcb
in
ds
mov
xchg
popa
xchg
inc
and
insl
ret
dec
inc
inc
push
fisubrs
outsl
shr
or
mov
nop
mov
jle
popf
push
fldt
sbb
push
jp
push
jl
mov
cmp
out
nop
or
jl
gs
sub
repnz
addr16
pop
dec
les
lret
pusha
outsb
dec
repnz
fidivrl
inc
dec
fistps
out
push
or
sub
push
cmpsl
gs
rol
xchg
adc
mov
push
push
fdivrs
cld
xor
mov
icebp
mov
cmp
outsb
lret
cmp
pop
adc
mov
inc
out
lahf
or
inc
jge
in
pop
mov
mov
push
jp
and
add
xor
jnp
mov
pop
ja
dec
pop
inc
stc
mov
add
loopne
loope
incb
arpl
jnp
inc
and
daa
lahf
ret
push
push
mov
cmp
jnp
fsubr
xchg
inc
add
xchg
mov
xor
fidivrs
scas
sti
cltd
fcomps
popa
out
and
inc
add
push
push
arpl
shrl
lds
or
sahf
push
inc
add
aad
clc
pop
stos
pushf
pop
mov
std
jnp
cld
lods
push
dec
mov
mov
push
pop
cmp
test
xchg
out
mov
cmpsb
loop
and
mov
dec
fildll
fildl
js
cs
jg
outsl
movzwl
pop
daa
aam
pop
jns
adc
shll
mov
ror
insb
or
imul
push
cmp
rcll
pushf
cwtl
ficompl
mov
sub
and
mov
pop
pop
rcll
add
inc
in
daa
jmp
inc
mov
in
ljmp
sbb
mov
add
push
push
xchg
sbb
bound
mov
fwait
int3
xor
nop
into
jbe
xor
xchg
vmovapd
ja
enter
xchg
xor
push
and
or
mov
jge
lcall
bound
or
jecxz
cmpl
mov
stos
or
cmpb
xchg
push
push
adc
lret
inc
push
xchg
lahf
popf
cld
sub
sub
out
dec
in
scas
jo
imul
mov
jecxz
ret
push
in
fwait
out
mov
sub
cwtl
cmp
xchg
mov
das
xchg
add
jl
inc
xlat
enter
and
mov
push
addr16
xor
adc
outsb
das
xchg
cwtl
fimuls
fs
mov
fdiv
pop
pop
lods
cmp
fs
mov
subb
fcomps
imul
aad
pop
femms
or
lea
lahf
bound
cmpsl
rclb
xchg
mov
mov
lcall
cmp
sub
mov
cmp
mov
test
mov
fcmovu
out
mov
leave
mov
rorb
push
push
int
and
push
sbb
addl
packsswb
jnp
into
in
test
lret
test
addpd
mov
add
or
hlt
clc
ss
mov
aad
sbb
sub
adc
fdivs
jbe
pusha
mov
fbld
jge
xchg
push
icebp
ret
ss
mov
push
lcall
pop
mov
fisubl
pop
push
push
fs
imul
jp
jo
cwtl
or
or
decb
jp
clc
mov
out
mov
jg
lret
pop
std
js
mov
mov
push
xor
ljmp
in
jbe
lret
sbb
not
in
movsb
xchg
rcr
and
loope
push
push
or
adc
mov
mov
sub
out
mov
inc
xchg
mov
jl
cmp
adc
and
mov
hlt
loopne
dec
insl
pop
xchg
incb
out
dec
push
fwait
or
stos
jl
sub
xchg
pushf
pop
cmpsl
sbb
push
out
faddl
pop
fdivrl
xchg
in
cmc
push
push
pop
bound
dec
jg
jle
sbb
mov
bnd
and
mov
pop
adc
fcmove
xchg
pop
push
rclb
testl
push
xchg
xchg
mov
jl
aam
icebp
and
out
push
outsl
sahf
outsb
mov
lock
test
mov
aas
xchg
repz
mov
rol
pusha
inc
lret
out
mov
jnp
jae
adc
mov
ret
hlt
out
jne
les
lcall
jmp
les
das
repnz
rclb
lds
jae
shrl
orb
jg
lods
xchg
mov
sbb
fs
roll
mov
cmp
lock
jle
aas
push
xchg
popf
adc
icebp
test
sub
ret
imul
pop
push
out
dec
cld
gs
mov
lahf
adc
push
jno
insl
sbbl
fisttpll
mov
lret
aaa
dec
mov
sbb
aaa
jmp
hlt
mov
jl
inc
or
push
and
xlat
mov
xchg
sti
xchg
popf
jge
add
inc
pop
sub
add
repnz
rdpmc
aaa
push
mov
fnsave
in
cltd
inc
xchg
fucom
and
or
jmp
test
stos
dec
cld
out
mov
ljmp
ret
pop
test
ret
pop
sbb
push
dec
rorl
das
sbb
sbb
mov
inc
sbb
mov
mov
addr16
repz
pop
sub
jno
loope
lcall
xor
xchg
mov
inc
push
adc
adc
fprem1
dec
cmpsb
arpl
imul
inc
dec
fsubrl
aam
jae
mov
mov
sarl
sub
imul
inc
ror
add
pop
inc
gs
sub
xchg
xchg
filds
cmp
scas
movsl
jns
lahf
pop
lret
ljmp
scas
cmp
les
or
jecxz
repnz
imull
adc
add
push
sub
fnstcw
push
adc
and
lcall
push
repnz
xchg
nop
and
incl
gs
repnz
in
xchg
sub
je
mov
jmp
ds
xlat
hlt
insl
mov
mov
fsubrs
and
push
in
imulb
jno
test
jmp
push
gs
or
jle
stos
aad
jne
xchg
mov
stc
fstpl
lods
cmpsb
scas
cli
cmp
inc
ja
inc
shrd
test
adc
int3
cmp
mov
xchg
adc
insl
sub
sbb
ja
stos
and
shlb
lods
ljmp
adc
sub
insb
cmp
fisubrl
pop
mov
or
mov
iret
repz
mov
popa
jle
cmp
add
dec
ffree
mov
or
cmpsl
and
pop
cwtl
dec
lock
out
and
je
or
rcl
pop
cmp
ss
add
scas
cmp
lds
fs
ds
inc
loope
mov
inc
xchg
mov
cwtl
out
in
xlat
icebp
daa
xchg
jg
int
dec
mov
inc
and
jmp
mov
aam
jns
insl
fsubrs
int
sbb
jo
jmp
xchg
pop
negl
fnsave
orl
push
mov
mov
cmpsl
jp
jmp
lea
jle
into
and
pushf
aad
es
push
ret
das
pop
mov
adc
shl
mov
or
jno
jl
movsb
add
fildl
mov
repnz
pushl
cmp
int
jecxz
mov
scas
test
adc
into
ret
xchg
jae
sti
add
xchg
orb
push
sar
add
jae
push
xchg
or
adc
mov
mov
pop
aaa
inc
popf
fs
lret
nop
inc
ljmp
aas
add
rcll
adc
mov
xchg
sub
or
arpl
push
dec
test
fwait
scas
push
outsl
xor
xchg
stos
into
cld
jl
inc
in
and
fwait
mov
enter
dec
mov
ret
fidivl
test
out
lods
push
out
jbe
adc
call
inc
bound
and
dec
or
fadds
stc
cs
xlat
xor
lods
shrb
mov
jp
mov
or
xor
or
jo
inc
rclb
mov
pop
cmp
sbb
sub
stos
rcr
or
inc
jnp
push
mov
or
out
cli
fwait
push
inc
and
in
push
pusha
add
ficompl
sbb
xchg
jno
cmp
sahf
hlt
dec
inc
dec
sub
test
dec
jb
imul
jmp
add
test
jae
test
sub
gs
movsb
sub
push
in
mov
cmp
test
outsl
das
popf
hlt
mov
mov
in
fidivrl
sub
imul
xchg
mov
cmp
fwait
and
or
mov
incb
jne
daa
add
or
jno
in
imul
hlt
cmpsb
repz
leave
or
push
mov
in
cwtl
jno
dec
and
dec
out
test
inc
push
out
mov
mov
sbb
inc
xchg
jp
mov
loope
dec
shlb
xchg
inc
std
xor
xor
clc
lea
mov
outsb
mov
xchg
clc
std
push
adc
sub
inc
mov
mov
mov
mov
lock
clc
in
xor
lods
out
xor
cmp
or
repz
jl
mov
fmul
aaa
imul
or
aaa
cmp
mov
jb
pop
int
ret
test
aad
mov
push
add
adc
outsl
dec
xor
mov
cmp
sub
out
testl
xchg
and
leave
sub
push
cmpsb
mov
mov
fs
inc
clc
mov
or
pop
divl
inc
or
ret
aas
mov
mov
int3
outsl
repnz
test
notb
mov
pop
jle
lret
mov
inc
mov
enter
ficoms
push
jns
adc
outsl
test
test
and
pop
push
inc
loope
mov
push
daa
and
sbb
sbb
popf
mov
adc
sti
cld
loope
stos
leave
add
stos
sub
in
inc
movsl
ljmp
push
daa
lea
lret
xchg
daa
sbb
mov
sbb
imul
inc
fcmovnu
push
lret
gs
dec
inc
mov
iret
push
sbb
mov
fwait
jp
faddp
jp
cmp
call
movb
dec
sub
enter
mov
lcall
nop
lcall
xor
ss
push
stos
int
fwait
out
add
mov
jbe
push
sub
cmc
sahf
push
jns
dec
jns
in
push
adc
pushf
adc
cmp
or
xor
sbb
aad
fistpl
sbb
or
lds
add
sub
dec
stc
cmp
push
outsl
adc
cmp
push
je
adcb
popa
mov
repnz
jge
dec
inc
movsb
or
pop
push
jne
mov
movl
cmp
xor
cltd
outsl
pushf
pop
or
mov
aam
mov
stos
repz
jg
iret
repnz
pop
pop
xchg
ficoml
sub
cmp
stc
sub
call
lcall
lock
ljmp
sbb
rol
loopne
jl
aaa
std
lock
leave
ljmp
inc
push
pop
mov
mov
stc
jle
xchg
out
call
jecxz
xchg
arpl
in
or
mov
xchg
fldenv
sbb
mov
enter
inc
pop
inc
cld
sbb
in
jo
dec
sub
test
aam
or
mov
shr
push
mov
test
or
jnp
jp
icebp
sub
int
test
mov
lds
mov
mov
jge
mov
lret
sbb
push
pusha
test
fists
adc
iret
add
dec
xchg
add
clc
lahf
lods
stc
movsl
outsl
jge
dec
ss
out
sbb
xor
push
hlt
mov
out
jo
shrl
mov
jecxz
repz
in
cmpsb
nop
movsl
jmp
cmp
or
dec
jecxz
lea
repnz
sub
jg
xchg
fstpt
sahf
xchg
addr16
popf
stos
scas
test
loop
mov
stc
xlat
gs
fbld
mov
dec
xchg
inc
les
push
mov
and
cmp
call
repz
int
jo
xchg
repz
jl
test
pop
dec
xor
movsl
mov
and
std
add
adc
repnz
cli
lahf
loope
push
and
inc
inc
ret
mov
ja
cmpsl
jg
mov
inc
xor
bound
push
test
jge
or
pop
jecxz
jo
in
fisttpll
lret
mov
cmp
in
dec
rorb
sub
inc
les
sub
mov
inc
mov
mov
cmc
sbb
pushf
mov
in
dec
lcall
sahf
test
scas
je
fwait
outsl
ret
pop
pop
cmc
inc
mov
dec
dec
jne
cld
cltd
cs
sbb
xchg
sbb
out
push
mov
mov
sub
outsl
test
shlb
dec
dec
fwait
pop
lcall
insl
imul
push
xchg
sub
out
or
call
jnp
scas
std
sbb
movsl
sub
xor
sub
xchg
outsb
jecxz,pn
leave
outsl
mov
add
and
ljmp
cs
pop
mov
in
call
cmp
jl
mov
mov
sub
cmp
inc
and
shrb
pop
push
mov
mov
pop
xchg
daa
and
arpl
xchg
jg
cmp
adc
daa
test
xor
popl
nop
adc
mov
pop
pop
iret
xchg
jle
xchg
loopne
sbb
mov
mov
mov
mov
xor
lods
mov
push
in
femms
mov
push
mov
loopne
pop
sub
fstpl
add
cmpsl
inc
mov
iret
cwtl
sbb
leave
jno
jecxz,pn
data16
jne
cmp
daa
jo
xor
add
cli
ficompl
xor
imul
les
jle
dec
dec
jp
or
stc
cmpsl
sti
jg
pop
ljmp
jl
pop
clc
sub
xor
dec
andb
out
sbb
sub
clc
sahf
or
jne
sbbb
out
addr16
inc
je
dec
dec
mov
or
pop
add
adc
insl
sbb
popf
gs
cwtl
xorl
movsl
push
push
das
lods
lods
pop
lret
adc
movsl
ficoms
mov
rol
test
call
icebp
xor
add
fld
test
cwtl
dec
leave
sub
pop
push
repnz
mov
stc
rcll
ljmp
cmp
cmp
std
cmp
fwait
call
xchg
repnz
lock
popa
aad
sti
jg
xchg
adc
xor
mov
xchg
xchg
test
lcall
outsb
fcmovne
cmp
js,pt
les
and
or
xchg
in
xchg
adc
pop
inc
loop
clc
lahf
es
cmpsb
aad
push
jmp
pushf
jmp
add
mov
mov
adc
xor
out
adc
daa
jo
mov
jecxz
out
mov
lcall
ss
imul
test
cmpsl
sub
sub
sahf
cmp
rclb
cmpsl
cmp
adc
add
sub
icebp
aaa
add
ja
mov
push
cwtl
sbb
xchg
data16
cmpsb
addl
push
test
mov
push
mov
dec
lcall
mov
loopne
fisubl
inc
inc
sub
dec
xchg
mov
pop
fidivrl
jmp
inc
adc
adc
mov
arpl
cs
in
and
imull
jo
lcall
mov
xor
lods
addl
pop
xchg
sub
jo
dec
mov
leave
test
popa
xchg
and
xchg
lds
je
ret
call
mov
inc
fisttpll
mov
lods
push
in
mov
scas
mov
nop
xchg
rcrl
lds
shrl
pop
cmp
ja
or
pop
std
mov
js
jp
fldt
cli
mov
sbb
push
ss
mov
jg
imul
cmp
add
push
das
cmp
loopne
enter
jle
in
imul
lahf
mov
push
jae
add
aad
imul
ja
cmp
mov
inc
in
call
call
pop
jae
or
fsub
xor
ljmp
sbb
aaa
push
repnz
mov
sbb
cltd
inc
pop
test
test
sbb
mov
pop
imul
pop
or
shrb
in
add
xchg
test
mov
sub
jnp
pusha
xor
scas
jge
ficoml
jge
xor
jmp
xor
fldenv
push
imul
lcall
mov
push
sahf
xchg
out
mov
or
pop
jne
mov
imul
aad
jmp
ljmp
mov
scas
js
imul
test
jnp
rorl
ret
daa
pusha
xor
aas
test
push
xchg
sahf
xchg
sti
jle
mov
ficoml
xchg
in
add
repnz
fwait
loope
push
and
xlat
lahf
out
xchg
dec
adc
outsl
jecxz
xchg
daa
mov
dec
es
mov
jg
or
fbstp
insl
test
divb
jnp
cmp
shll
test
call
ja
xor
int
xchg
nop
mov
loope
jb
lcall
cmp
push
mov
push
pop
pop
test
daa
hlt
and
mov
sti
inc
jnp
mov
jb
xchg
push
add
dec
shrl
push
testl
cwtl
stos
lret
test
or
lods
bound
mov
pop
xor
sbb
icebp
mov
ss
sbb
jno
je
add
cli
inc
xchg
push
pusha
gs
ljmp
xchg
js
pushf
or
cmp
shll
push
dec
push
mov
adc
sbb
mov
and
sbb
lahf
movsl
fs
or
test
es
xchg
mov
mov
aas
jg
scas
xchg
push
xlat
pop
jl
insl
ds
daa
aaa
sub
mov
jecxz
cmpb
lods
pop
repz
sub
fucomp
loope
cli
orl
movsl
test
movsb
ljmp
cmp
ljmp
mov
imul
push
dec
stc
dec
inc
xchg
jg
adc
and
and
loop
pop
jns
lds
jl
xchg
cmp
sarl
mov
dec
pusha
or
xchg
outsl
enter
push
add
dec
arpl
int3
sub
lret
fmull
mov
xchg
jbe
cmp
and
cmpsl
in
or
pop
clc
mov
roll
in
add
pop
mov
mov
or
pop
outsb
loop
xor
jg
or
mov
add
cmpb
mov
fmul
xlat
pop
or
fnstenv
sbb
sbb
dec
pushf
loope
data16
popa
sahf
ret
xlat
dec
roll
xor
fldl
lret
movsb
clc
mov
push
push
jns
xor
push
adc
cli
jecxz
xchg
negb
test
gs
outsl
rcr
xor
or
xchg
je
or
jp
inc
sbb
push
inc
gs
cmp
push
dec
mov
sub
out
fdivrs
dec
imull
mov
fldt
movsl
xlat
mov
aam
xchg
push
insb
in
outsb
pop
icebp
nop
mov
pop
stc
cli
data16
add
jle
pshufw
ja
pop
push
incb
fxch
add
push
add
test
mov
mov
xor
and
dec
es
pop
sbb
and
adc
jns
test
icebp
sub
out
sbb
bound
rolb
mov
pop
test
in
xor
xor
pop
jb
cli
in
pop
pop
jge
add
outsl
mov
fs
jp
xchg
les
cmc
aam
mov
dec
rclb
xchg
js
sbb
mov
push
scas
push
scas
sbb
pop
or
les
ja
sbb
lods
in
xchg
cmp
aaa
cwtl
in
adc
shl
orl
add
sbb
scas
in
loope
cmp
mov
xor
dec
inc
shl
and
or
add
push
sbb
or
cmpsb
sub
sub
addl
test
aad
rol
bound
xchg
ljmp
mov
daa
pop
dec
fs
in
cmp
imul
repnz
dec
mov
xor
outsl
aaa
and
inc
call
xlat
mov
popf
xor
mov
add
jae
ds
push
aas
jns
rorb
fdivp
push
mov
daa
ret
ss
push
xchg
jbe
daa
jns
ret
mov
or
cmp
test
cmp
inc
xchg
adc
dec
push
popf
imul
dec
dec
movsb
popa
push
sub
mov
xor
ret
push
jno
add
out
cmp
jno
xor
mov
sub
jb
mov
add
movl
outsl
and
sbb
push
and
test
push
and
loopne
or
stos
xchg
pop
fsubr
pushf
and
inc
jnp
lret
pop
mov
lea
popa
lret
jne
jle
hlt
stos
scas
lahf
sarl
sub
add
dec
pop
test
sub
cmp
inc
mov
test
sbb
fildl
pop
fists
sahf
inc
jge
sub
dec
test
xchg
out
in
and
xchg
leave
pop
rcrb
cmp
mov
outsb
xchg
std
mov
fdivl
stc
mov
aaa
xor
popf
dec
sbb
sub
clc
js
repnz
xor
and
add
or
mov
xor
mov
movsb
jb
bound
or
push
subl
lea
pop
inc
xor
rcrb
ja
sub
push
push
ret
cmp
mov
ret
test
and
aam
loop
adc
jecxz
sub
jp
push
push
xor
pop
xor
lea
pop
iret
rcrl
pop
xor
in
jne
clc
into
and
out
jge
jg
jg
or
cmc
jecxz
dec
adc
push
pshufw
nop
mov
mov
dec
or
cli
pop
push
mov
fwait
addr16
ja
lea
jno
lahf
mov
jae
jmp
xor
or
mov
pop
xchg
sbb
loop
nopl
test
fwait
xor
pop
push
sub
rep
mov
mov
push
subb
enter
sti
xchg
xchg
and
fs
pop
in
cli
in
rolb
mov
repnz
and
frstor
mov
mov
loope
loop
ja
ljmp
add
jbe
or
or
jp
insl
and
mov
push
call
sub
jecxz
sbb
rorl
sub
test
scas
data16
mov
lahf
cmp
adc
xchg
inc
test
inc
sub
dec
ss
inc
shl
adc
imul
cmp
xchg
scas
and
popa
mov
mov
mov
fadd
sub
xchg
sbb
mov
in
adc
cmp
add
mov
mov
test
arpl
pusha
iret
xor
mov
idiv
orl
aad
or
addr16
xor
and
das
mov
loop
js
push
daa
mov
adc
test
mov
or
sub
enter
dec
cld
add
rclb
enter
sub
shrl
bound
jl
test
sbb
xor
xchg
and
jnp
pushf
sub
int
out
sbb
sub
in
pop
pop
adc
pop
pop
jl
cmpsl
mov
mov
cmp
mov
pushf
inc
pushf
push
popa
xchg
or
push
lea
mov
fdivrl
push
jns
clc
push
lret
loopne
stc
xchg
out
sub
daa
add
inc
in
into
xor
dec
stos
jnp
push
cmp
pushf
sbb
sbb
inc
test
jl
and
jmp
jnp
xor
dec
push
mov
mov
push
fwait
popf
loopne
lods
lds
push
mov
or
repz
push
or
mov
pop
cmpb
xchg
dec
xchg
xchg
cli
out
adc
xor
mov
sar
outsb
jl,pn
xchg
xchg
fldt
pop
rolb
fs
mov
mov
imul
add
inc
xchg
sub
pop
jp
mov
icebp
lret
dec
scas
pop
xor
mov
outsl
sbb
loop
test
push
insl
push
jecxz
daa
bound
lods
test
popa
xchg
clc
ds
sub
cmc
adc
divl
mov
dec
lods
hlt
sub
dec
sub
rcrb
sbb
leave
add
rcrl
xchg
xor
fistps
jp
in
push
mov
shll
ljmp
test
sub
cmp
aad
xchg
mov
repz
dec
mov
out
aam
aam
enter
push
mov
inc
fcoms
repz
pop
sub
stos
gs
or
fwait
cwtl
dec
enter
mov
flds
hlt
loope
fcoms
mov
cwtl
in
fadds
and
jne
xchg
mov
cmpsb
adc
int3
outsb
test
es
mov
push
lcall
inc
push
cmp
std
addl
adc
cmpsb
sub
test
mov
jne
sub
addr16
and
mov
mov
int
xchg
cmp
xchg
adc
popa
jb
cld
das
lods
insl
adc
jae
or
and
adc
ret
ss
clc
or
dec
rcrl
dec
jg
ss
loopne
outsl
loop
jae
sbbb
jmp
add
mov
stos
in
inc
movsl
loop
std
jl
sbb
inc
test
push
dec
fs
in
gs
cmp
loop
pop
sbbb
fs
sub
jne
push
add
cs
inc
add
hlt
ror
movsb
mov
jmp
es
push
lret
add
out
test
cltd
cmp
hlt
loopne
je
jmp
into
scas
daa
xchg
jge
xchg
loopne
sub
and
ret
pop
pop
aaa
add
sbb
dec
mov
cwtl
mov
stos
enter
or
dec
cli
add
into
ja
add
or
lahf
adc
in
xchg
dec
jnp
fldl
dec
jns
cmpsl
adcl
xchg
jnp
rclb
mov
addr16
psllw
dec
and
loope
mov
icebp
pop
and
inc
xlat
call
mov
jge
dec
addb
adc
inc
mov
scas
push
add
push
movsb
aas
inc
into
sub
int3
mov
pop
sbb
cmpsl
or
pop
ret
test
ret
jg
clc
xchg
cmpsl
hlt
cmpsl
sbb
sub
jge
mov
addr16
test
xchg
jle
pop
loope
jo
fnstenv
add
xchg
fldenv
lock
daa
jmp
aad
cmp
dec
xchg
in
int
insb
xlat
sub
push
ret
rcrb
cmp
pop
pop
fcomp
stos
mov
out
inc
insb
push
pusha
ja
dec
add
test
jp
fs
pop
imul
dec
mov
jg
stos
jnp
rclb
inc
enter
xchg
ds
mov
mov
sarl
push
das
inc
mov
addr16
pop
jns
sub
bound
adc
pop
outsb
pop
loopne
mov
cs
cmp
js
mov
xorl
ss
sbb
cmp
std
test
xchg
test
lods
test
jecxz
mov
or
sub
in
fdiv
dec
xchg
xor
cld
jnp
lret
or
pop
inc
sbb
pop
push
shll
jo
imul
leave
adc
pop
inc
cmc
mov
into
movsl
cmp
loop
arpl
outsl
lods
pop
sbb
pop
mov
add
cs
or
out
jns
ret
xor
into
lret
add
adc
xchg
jle
add
xchg
lcall
ss
lock
sub
sahf
lds
mov
jmp
dec
cmp
jmp
in
dec
dec
xchg
jmp
sbb
stos
xchg
insb
jae
jnp
je
jg
lds
push
adcb
dec
cs
xchg
sub
jbe
dec
cltd
arpl
and
xchg
sub
jns
or
inc
inc
sbb
xchg
aas
sub
faddl
push
unpckhps
inc
adc
int
loopne
lds
push
shlb
sub
cmpsb
sahf
pop
inc
sub
jae
xchg
xor
mov
mov
fsubl
repz
stos
or
and
add
jl
dec
dec
or
and
mov
cmc
cmp
xchg
cmp
sbb
mov
mov
mov
fdivrs
outsb
xor
rorb
leave
test
push
and
fstpl
xor
cmp
push
sbb
push
icebp
jecxz
pushf
inc
dec
mov
xchg
cmp
push
nop
push
push
mov
push
loope
rcll
sub
pop
pop
adc
xchg
cmp
daa
std
inc
adc
xor
mov
das
scas
inc
sti
push
inc
insb
fisttpl
adc
shrb
add
int3
dec
dec
aad
pushf
xlat
jbe
dec
ret
cmp
cmpl
xchg
dec
inc
adc
imul
mov
or
cli
seta
cmpsl
pushf
cmc
fstpl
xor
add
xchg
or
call
pop
sbb
add
jge
loop
addr16
pop
cs
incl
jo
jg
imul
aas
jecxz
cltd
push
inc
jnp
add
in
xchg
negb
lock
icebp
mov
popf
sub
inc
xorl
dec
mov
movsb
lahf
xor
ss
push
aas
cwtl
push
cltd
js
jbe
loopne
cmp
mov
test
adc
xor
int
xchg
out
fstpl
mov
pop
mov
xchg
mov
mov
outsb
inc
xor
js
int3
inc
sub
xor
pop
fisttpl
dec
xchg
es
test
mov
push
cmp
mov
inc
or
cmp
push
das
movl
incl
cmp
aad
dec
adc
mov
lds
test
rsm
xchg
jb
push
mov
mov
push
sbb
jmp
sbb
pop
leave
jbe
ss
loopne
lahf
mov
iret
jmp
and
and
mov
cli
adc
sub
xor
fnstsw
mov
add
or
test
testb
mov
lods
jmp
mov
pop
pusha
leave
loopne
sbb
loop
add
jl
xor
jb
in
pop
in
fistl
pop
pop
scas
cmp
pop
xchg
cmpsb
stos
out
lods
popa
mov
xchg
fs
inc
gs
push
mov
mov
cmc
adc
inc
mov
mov
inc
andb
imul
xor
and
lret
lods
into
out
ss
jg
cwtl
into
pusha
cli
push
addr16
xchg
imul
pop
inc
mov
adc
or
cmpsb
pusha
out
lcall
sbb
jbe,pt
sbb
jae
iret
xor
mov
mov
mov
adc
and
mov
xchg
popa
les
push
mov
dec
jge
je
shlb
xchg
xchg
in
movsb
pop
mov
xchg
cwtl
data16
and
jg
or
cmp
es
in
mov
inc
and
pop
inc
or
xor
push
js
pop
test
xor
lcall
scas
or
enter
xchg
jne
jb
das
cmpsl
fdivrs
xor
cli
cld
jae
ja
push
or
rol
out
inc
add
lcall
loopne
and
push
cmp
jecxz
adc
popa
cmpsb
push
out
push
xchg
or
fldt
divl
xchg
push
jno
and
inc
mov
add
ja
mov
aas
mov
or
xchg
scas
into
dec
dec
sbb
dec
cmp
sti
mov
add
xchg
xor
xlat
insb
repz
sub
jge
and
mov
xchg
sbb
out
je
dec
outsb
jmp
int3
push
jne
xchg
xor
inc
leave
cmpsb
cmp
jmp
gs
fstps
lahf
test
sar
add
xor
cmp
xchg
and
push
sbb
push
das
push
data16
pop
push
jae
pop
sub
fdivs
adc
add
movsb
cltd
push
xchg
daa
sub
out
decb
movsb
leave
dec
jecxz
and
and
cmpsl
dec
adc
dec
or
sub
popf
leave
test
pushl
ret
in
sbb
cli
dec
dec
cli
or
out
jae
dec
add
jp
rolb
pop
test
xor
test
test
nop
sub
xchg
xchg
cltd
adc
xor
lret
add
sti
sbbl
pusha
add
sub
push
mov
xchg
aam
test
addr16
orb
mov
sahf
sbb
insl
and
ret
adc
mov
mov
in
ret
dec
inc
jmp
push
cmpsb
add
push
cmp
mov
insl
out
es
sbb
jo
arpl
inc
xchg
test
movsb
sbb
mov
xor
popa
lds
push
sbb
loop
lea
mov
and
and
insb
jo
dec
out
push
or
in
xchg
xor
and
sbb
push
mov
add
mov
aam
or
call
pop
pushf
into
pop
out
repz
mov
add
xor
imul
into
jp
incb
cmp
mov
add
lret
frstor
xchg
mov
repz
and
testb
aas
sti
adc
lods
pop
cmp
inc
adc
arpl
sub
shlb
jmp
pop
mov
int
and
or
dec
out
outsb
enter
test
lcall
xchg
cli
sbb
dec
pop
std
push
jo
push
daa
sub
lret
fs
out
cmp
insl
mov
jno
les
cmpsb
outsb
lahf
and
mov
cltd
mov
jb
mov
test
fistpl
xor
lret
aad
rcr
pop
xor
jb
mov
loope
or
ret
and
sti
adc
out
xlat
insb
xchg
sub
cmp
icebp
sbb
push
call
adc
lea
enter
push
cld
jne
repz
mov
add
mov
pop
lret
mov
aad
mov
xchg
lcall
ds
repnz
mov
cmp
xchg
jle
or
xor
cmp
dec
fisttpl
add
sar
pop
nop
jg
xor
jno
sarb
aad
imul
test
push
ror
and
rcll
jl
inc
mov
and
aam
jns
notb
sbb
scas
xchg
push
cmp
push
cmp
mov
push
push
push
aad
sti
dec
jbe
ret
mov
mov
out
aam
mov
pop
mov
dec
mov
js
out
xabort
in
mov
out
shlb
xchg
push
pop
cmp
push
push
arpl
sub
mov
add
xor
inc
rorl
shrl
jp
mov
repnz
jnp
or
orb
inc
push
pop
cmp
add
dec
pop
mov
and
xchg
cmpb
lods
pop
pusha
dec
cmp
stos
das
aad
pmaxub
outsl
imul
sub
xchg
inc
arpl
jnp
int
cli
sbb
xlat
mov
lahf
loope
outsb
clc
clc
push
pop
inc
jno
pop
inc
aas
sub
daa
pop
mov
dec
jg
cmp
cmp
xchg
nop
insb
mov
sti
lods
test
loopne
shrb
nop
out
mov
sub
or
daa
xor
in
fistl
pop
xor
enter
dec
mov
mov
loope
dec
jg
pop
jb
ss
jge
xor
imul
loopne
and
fmuls
mov
xchg
inc
xchg
popf
mov
cwtl
repz
sbb
data16
call
pop
out
arpl
sahf
icebp
push
aad
int3
icebp
jecxz
setb
aas
push
cwtl
out
or
andl
cmpl
daa
mov
xor
test
mov
arpl
xchg
jo
push
cltd
insl
rclb
addr16
sbb
mov
sub
xchg
rolb
subl
push
dec
repnz
sahf
repnz
and
mov
inc
lds
cmp
ret
mov
cs
push
lret
shll
fwait
xor
test
cmp
mov
xor
ret
dec
jb
jmp
repnz
add
inc
mov
jle
pop
add
inc
scas
cmpsb
xchg
fsts
push
pop
aas
lea
add
mov
mov
stos
lea
dec
movntq
mov
jmp
jge
pop
sbb
out
repnz
xor
mov
fs
icebp
hlt
bound
fdivrp
push
call
iret
adc
scas
mov
mov
sti
mov
je
mov
test
sbb
imul
add
jp
mov
dec
cmp
fmull
repz
arpl
xor
roll
jp
daa
loope,pt
push
pop
mov
shr
movups
outsl
fisubrs
loopne
lea
pop
xor
stos
mov
adc
fwait
cmpsb
ja
icebp
jne
idivl
adc
and
xchg
mov
dec
popf
mov
rcrb
shrb
push
mov
mov
ljmp
xchg
pop
and
test
out
shlb
cmpsl
leave
xlat
adc
and
xor
iret
sub
aas
jg
adc
sti
negb
xor
leave
push
je
movsl
mov
js
fsubrs
test
pop
in
inc
dec
push
test
jecxz
inc
mov
orl
jne
jecxz
adc
in
mov
rcrb
add
xchg
out
loope
ljmp
pop
jns
and
inc
mov
sub
mov
sub
pop
jg
cmp
push
enter
je
arpl
cmp
pusha
push
xchg
inc
cs
mov
and
mov
arpl
ljmp
mov
dec
mov
or
aaa
pop
push
mov
jo
inc
je
je
daa
mov
stos
roll
dec
jecxz
fs
imul
pop
mov
lods
outsb
lcall
add
sbb
daa
shll
in
arpl
mov
jl
mov
in
fwait
icebp
arpl
xor
stos
and
ss
xchg
in
aad
insb
in
sti
mov
scas
inc
or
rcll
and
outsb
inc
and
imul
test
xchg
std
icebp
jmp
fndisi(8087
inc
inc
leave
dec
add
int3
xchg
sbb
xlat
adc
push
mov
fdivrs
xor
jb
inc
mov
sbb
push
movsl
and
mov
addr16
pop
pushf
ds
subb
sub
or
ss
pop
rcr
pop
insb
adc
es
xor
sbb
xchg
out
pop
add
into
andl
fwait
aad
ljmp
cmpsl
push
sbb
jmp
mov
gs
push
pop
mov
push
das
sub
nop
xchg
movsl
mov
aam
jne
xor
in
cmp
testb
scas
movsl
cmc
shrb
mov
mov
or
mov
xchg
pusha
mov
adc
mov
cmp
iret
mov
out
out
call
xchg
mov
mov
mov
rol
popa
mov
mov
push
and
push
pop
aas
rorb
xchg
mov
in
rcrb
jmp
outsl
sub
add
and
ficoms
or
dec
and
jns
out
int3
pop
mov
lret
jecxz
mov
scas
stos
add
push
push
loopne
jno
inc
inc
and
add
lret
or
in
repz
adc
enter
lds
push
and
add
lods
test
add
cmpsb
leave
lock
xchg
outsb
mov
aad
jae
cs
mov
jmp
int
sub
sti
mov
or
cmp
and
ja
gs
xor
in
rcr
pop
mov
mov
xchg
mov
cli
mov
pop
fdivs
xor
pop
ja
add
pop
bound
cmp
push
or
cmp
push
je
pop
cwtl
int
cltd
ret
mov
fwait
cmpsl
in
or
adc
jmp
es
and
sbb
lods
sahf
jg
xor
pop
inc
divl
cmc
in
add
repnz
movsb
adc
push
pop
shrb
dec
aad
iret
mov
jle
repnz
iret
sbb
jns
lds
out
or
pop
dec
xchg
dec
notb
dec
mov
addb
sub
aad
call
fiaddl
and
inc
mov
mov
pop
fwait
cli
inc
pusha
shll
sarb
jae
jo
mov
sub
bound
jne
cmp
pop
idivb
in
push
data16
int
imul
into
ja
inc
pop
pop
ret
xchg
xchg
into
lds
repz
loope
mov
xchg
jle
xchg
bound
pop
sbb
sub
push
aaa
xor
push
sub
aas
fbld
imul
or
or
cmp
mov
cmc
mov
insl
shr
fdivs
scas
in
mov
fiadds
outsl
ljmp
movsb
sbb
jg
cld
in
cmp
les
xchg
cmp
mov
sbb
and
addr16
pop
lods
mov
mov
jbe
outsb
mov
xchg
lahf
outsl
out
or
pop
add
pushf
into
in
push
jae
add
cmp
cmovb
push
nop
dec
orb
loope
mov
lret
int
fstpl
imul
mov
fs
jbe
cmp
sti
pop
mov
mov
mov
fstpl
pop
imul
mov
pop
bound
inc
stos
mov
jb
mov
sahf
shrb
fcomps
cmp
addr16
aad
movsb
adc
or
sbb
adc
cmp
pop
dec
or
scas
mov
sub
jo
popl
xchg
inc
jp
sub
sarb
mov
mov
int3
pusha
xor
scas
dec
mov
add
jge
push
adc
inc
mov
sub
rclb
lods
shrl
lods
push
stc
outsb
lcall
push
xor
lahf
adc
lret
call
or
aad
repz
fadds
xor
aam
inc
cmp
pop
mov
lahf
sarb
sbb
mov
sbb
xlat
mov
jle
ja
andl
xor
and
or
pop
ss
movaps
ss
xchg
dec
jbe
sbb
fsubrs
testl
mov
adcl
adc
daa
cli
insb
adc
jns
cmp
or
lock
sub
int3
push
push
notl
inc
incl
sub
jne
inc
or
push
mov
aas
fisubrs
push
adc
outsb
shl
fists
add
notl
aam
pop
jne
add
rcr
rol
mov
mov
sbb
and
hlt
mov
in
xor
fistpll
adc
sahf
rorb
addr16
lahf
pop
sub
lock
sti
sub
lock
mov
idiv
add
dec
sub
and
push
cmp
mov
mov
xor
xchg
nop
call
adc
push
add
mov
adc
adcl
sahf
imul
int3
mov
pop
xchg
xchg
push
iret
leave
jmp
push
les
sti
leave
test
fstps
orb
ljmp
inc
mov
sbb
add
pop
mov
testl
fwait
scas
mov
movsl
cmp
adc
rclb
jns
cmp
sub
andl
sbb
in
jnp
enter
jle
mov
sbb
and
mov
adc
jmp
or
aas
or
cld
mov
stos
or
cs
into
lea
and
pushf
test
dec
jbe
inc
mov
bound
rcl
mov
mov
jne
inc
and
add
cmp
pop
ds
out
dec
dec
push
cmp
push
scas
push
fs
js
add
sbb
sub
ret
stos
dec
push
stc
jb
push
mov
jne
adc
enter
pop
adc
and
mov
sbbl
or
sbb
scas
or
inc
and
cmp
cmp
pop
sub
scas
lea
jnp
scas
adc
mov
outsb
add
mov
imull
fst
subb
lret
dec
js
cmpsl
in
jl
cmpb
mov
mov
dec
sub
das
test
pop
dec
mov
fiaddl
movsl
adc
test
mov
arpl
sarl
push
or
adc
add
adc
sbb
add
lock
pop
push
cmp
adc
rcrb
sbb
pop
pop
les
sbb
iret
sbb
enter
ja
inc
in
and
out
xchg
hlt
fisubl
xchg
movsl
inc
cs
insl
jae
pop
enter
jo
pusha
out
ss
fwait
cwtl
jo
iret
xlat
ret
or
mov
into
arpl
data16
xchg
mov
sahf
les
or
cmp
jl
adc
outsl
mov
adc
xchg
mov
fistpll
fldcw
dec
ret
rcl
xchg
hlt
and
pop
jb
sbbl
cltd
testb
xor
cli
ret
xor
ret
mov
je
and
outsl
sti
xor
cmc
sub
inc
jg
insl
loopne
arpl
addr16
sub
push
and
int3
out
clc
dec
mov
or
fstpl
xchg
out
xor
mov
cltd
mov
jg
dec
mov
jns
mov
jno
and
add
mov
mov
jecxz
test
sarl
jmp
mov
loopne
stos
imul
pusha
push
ret
shrl
movsb
and
imulb
loope
and
mov
push
pop
cmpsl
add
loope
jp
pop
or
lock
hlt
xchg
cmpsl
jnp
pop
sub
add
ret
mov
imul
cwtl
add
mov
xchg
pusha
sub
fnstsw
pop
nop
cmpsl
outsb
hlt
mov
sbb
xchg
pusha
orb
adc
ret
dec
cltd
stos
mov
js
rcr
xor
test
lahf
sbb
jl
push
outsb
out
push
lds
adc
dec
push
mov
fisttpll
and
xor
mov
aam
and
adc
sub
cmp
repnz
mov
pusha
test
test
punpcklwd
jge
mov
lret
adc
in
mov
pop
and
into
mov
ljmp
movsb
scas
scas
ljmp
out
xchg
mov
jecxz
sub
xor
mov
xchg
sub
ret
fidivs
push
and
push
dec
fldt
mov
cli
adc
movsb
lret
push
sahf
sub
jp
ret
movsb
es
insl
jp
ss
inc
mov
jle
and
or
rcll
pushf
jno
fidivs
adc
mov
loope
pop
xcrypt-cfb
cmpsl
gs
icebp
push
mov
nop/reserved
mov
fisubl
daa
dec
push
sbb
jle
in
lods
popa
mov
push
int
clc
xchg
pop
movsl
popl
xchg
inc
test
cmp
jnp
xor
adc
fs
sarl
aad
xchg
push
jns
subl
and
lahf
test
mov
jg
jle
lahf
push
or
pop
cs
sub
insl
pop
mov
adc
lods
sbb
in
jne
inc
es
xchg
aam
cli
jp
lret
mov
mov
les
clc
cwtl
jo
mov
sbb
adc
sub
xor
fiaddl
adc
test
jl
mov
iret
inc
in
mov
push
mov
jl
mov
imul
pop
fs
dec
in
daa
cmp
adc
adc
outsl
push
enter
sbb
shl
jge
icebp
in
mov
out
sub
sbb
mov
and
jmp
and
sub
push
cli
sarl
popa
mov
jl
dec
gs
add
enter
or
lods
pop
xchg
mov
xchg
sub
lock
test
fxch
mov
stc
mov
stc
push
ss
jo
xchg
cwtl
sahf
out
jnp
loop
gs
adc
or
iret
xchg
inc
repz
adc
lcall
push
sbb
mov
mov
shrl
dec
shll
add
leave
aam
test
and
mov
aaa
jns
pop
mov
pop
aaa
rcrl
mov
cmp
mov
nop
sub
pushf
dec
inc
jg
mov
adc
push
dec
pop
test
fwait
cs
nop
movsb
scas
xchg
mov
pop
jbe
addl
ds
pop
loope
fsubr
aad
add
mov
jnp
lea
dec
xchg
cmpsb
dec
imul
cmpsl
fxtract
dec
mov
mov
out
sahf
lret
fimull
mov
dec
jns
adc
outsl
cmp
or
jne
fcoms
and
sahf
xor
lret
add
rorb
fs
pop
ret
bound
jge
push
sub
ds
jne
in
les
jo
scas
bound
aaa
jo
lods
lcall
sahf
pop
cmpsl
call
xchg
pop
std
mov
mov
std
mov
pop
or
sub
insb
leave
lahf
aas
adc
xor
das
xchg
shrb
les
and
sub
dec
je
fbstp
jecxz
add
mov
int3
sahf
cmc
fisubrs
jo
pop
and
iret
cmp
and
jmp
adc
jecxz
cmp
dec
insb
push
xor
mov
das
loopne
jecxz
inc
test
scas
into
jb
ljmp
mov
dec
out
arpl
dec
dec
cmp
mov
mov
lcall
mov
mov
and
and
into
cwtl
sbb
rol
aad
or
jnp
or
in
testl
ja
stos
int
leave
lret
aaa
pop
arpl
mov
jbe
xchg
aas
cld
xor
aas
fsubrl
xor
scas
xor
pop
fwait
nop
jp
test
jno
sub
and
fildl
les
aam
push
mov
jbe
and
lcall
mov
xor
into
inc
mov
push
xor
in
cld
add
push
pop
xlat
shll
lea
dec
aam
fs
mov
jbe
pop
and
jle
inc
mov
or
adc
xor
leave
loop
dec
sbb
lock
mov
movsl
in
push
data16
cmp
pop
cmp
std
and
lods
mov
pop
pusha
sbb
mov
jmp
fdecstp
mov
lcall
xchg
lcall
xchg
div
sub
fstl
xchg
pop
cs
add
xor
gs
es
sub
out
xor
frstor
lret
fistl
xchg
mov
and
repz
jmp
push
scas
xor
jae
cmp
push
popf
sti
mov
ds
pop
cmp
cmp
ja
outsl
imul
push
or
ss
shlb
lret
xor
or
daa
and
cmpsl
sub
icebp
aad
or
sbb
lcall
jne
xchg
icebp
push
cs
and
into
repz
pop
mov
lock
and
mov
inc
sti
out
ss
imul
xor
lods
dec
adc
stos
clc
mov
fwait
pop
cmp
out
movsb
or
or
iret
setns
orb
cmp
push
cmpsb
scas
mov
jge
arpl
stc
call
mov
jbe
das
pop
jo
jge
sub
mov
xor
repnz
aaa
aas
and
daa
xchg
repz
ucomiss
sub
mov
idivb
dec
push
cmp
lods
mov
xor
push
dec
cmp
mov
sbb
mov
fsubs
ja
test
lods
dec
mov
cmc
adcb
sub
es
jl
mul
or
xchg
pop
fs
cld
out
inc
mov
push
stos
pop
insb
add
pop
cltd
add
xor
pop
test
stos
movsb
mov
in
push
pop
mov
mov
test
dec
cmp
clc
mov
imul
fwait
sub
ds
lods
or
icebp
push
cli
fs
add
and
ret
shl
or
sbb
pop
test
sbb
pop
pop
adc
push
ficoms
das
dec
gs
js
clc
imul
arpl
mov
mov
xchg
dec
dec
push
repnz
scas
jnp
mov
in
in
pushf
ret
test
or
adc
push
sbb
ret
mov
mov
iret
cmp
mov
arpl
adc
arpl
ds
in
dec
push
cmpsb
stc
roll
jmp
inc
lahf
fistpll
sbb
mov
push
add
mov
into
and
adc
sahf
xor
aas
divl
pop
aaa
fcoms
out
mov
das
xlat
pusha
loop
adc
inc
cmp
in
ja
popl
daa
lods
jp
scas
mov
mov
popf
and
notl
jno
and
shl
aaa
cmpsb
and
out
das
imul
movsb
cmp
lods
adc
popa
or
dec
mov
inc
fistpll
fists
push
cmpsl
andps
mov
ja
xchg
adc
push
dec
add
jnp
ja
jle
and
add
adc
loopne
mov
aad
and
jle
mov
hlt
leave
xchg
mov
xor
scas
mov
ret
addb
jnp
movsl
dec
jbe
inc
jge
pop
or
call
sarb
sbb
movsl
cwtl
popf
mov
mov
xchg
add
lahf
aas
mov
sub
in
pusha
cmc
pop
rcrb
rclb
insl
jno
sbb
dec
jg
insb
push
nop
push
jnp
push
jno
sub
xchg
imulb
push
inc
ss
in
fs
inc
outsb
inc
fnstsw
mov
sub
jno
cmp
ror
aas
dec
mov
out
stos
xor
sub
inc
aaa
test
ljmp
lahf
pushf
sub
jbe
cmpsb
cmp
enter
insb
inc
mov
cmp
mov
jbe
mov
dec
xor
mov
and
cmpsb
sbb
mov
cmp
outsb
rcrl
mov
mov
arpl
ja
or
or
cmc
and
inc
sbb
sbb
lods
movsb
sub
mov
pop
push
push
inc
insb
or
push
dec
mov
xor
int3
xchg
out
jo
push
and
xor
movsb
in
and
hlt
sub
jle
inc
aaa
mov
sti
push
mov
rcr
mov
fistl
mov
sti
xchg
dec
divl
fidivs
dec
out
ja
lock
pop
ror
mov
outsb
inc
xchg
push
aas
es
je
cld
stos
pop
jb
addr16
xor
inc
adc
push
push
js
enter
loopne
pop
inc
loopne
jge
jb
inc
sbb
xor
lods
and
mov
insb
filds
movsb
arpl
out
xchg
sbb
loopne
rol
sub
jle
fidivl
fadd
call
jno
enter
lea
mov
cltd
arpl
push
rorb
mov
and
jne
repnz
sti
xor
es
dec
sbb
cwtl
push
aaa
jmp
mov
int3
inc
rorl
jae
jno
adcl
push
lret
mov
pop
lcall
xchg
cmp
mov
mov
ret
sbb
and
or
icebp
loopne
scas
movsb
mov
loopne
ja
rolb
mov
mov
iret
and
inc
dec
mov
popa
mov
int
lods
subb
cmp
cmpl
dec
mov
out
push
adc
insb
jmp
pushl
add
imul
aaa
xchg
jno
cmp
fwait
mov
stc
aad
je
dec
push
xor
loope
dec
scas
lods
mov
shll
sub
inc
in
mov
aam
push
xchg
cmp
fbstp
push
xor
fs
dec
cli
cmp
jb
mov
adc
cmp
fidivl
iret
stc
and
fnstenv
cli
aas
pop
mov
out
mov
or
loop
xchg
inc
or
sub
gs
dec
sub
arpl
mov
mov
pushf
inc
sub
jns
das
scas
adc
fidivrs
sbb
jne
jmp
mov
mov
and
andl
mov
fidivs
xor
ljmp
stc
dec
aam
pop
xchg
sbb
push
rcl
outsb
loop
xchg
add
jmp
aad
mov
jp
rolb
imul
xchg
stos
enter
insl
xor
in
xchg
sub
sub
sbb
rorl
cmp
cmp
adc
scas
and
sub
fxrstor
insb
pop
in
ficoms
sarl
das
push
jbe
jnp
fdivs
les
in
and
cmp
rorl
jecxz
in
push
or
mov
or
mov
scas
int
sti
lock
insb
les
int3
dec
enter
cmpsl
push
xchg
pusha
jne
movsb
jle
dec
ror
or
popf
dec
stc
adc
loop
add
int3
incb
inc
and
mov
jl
jbe
jne
mov
inc
sbb
sub
or
push
test
mov
pop
xchg
cmp
add
decl
outsl
sbb
fistl
or
lea
fcmove
adc
dec
lret
and
fdivl
es
ljmp
xchg
repz
ja
cwtl
jns
inc
dec
add
cmp
pop
mov
in
xchg
push
inc
shlb
lcall
mov
mov
sbb
shl
mov
rorb
jl
and
mov
dec
sahf
icebp
sub
inc
dec
mov
and
jnp
test
jo
aaa
mov
xchg
out
prefetch
les
jmp
add
pop
xchg
inc
inc
pop
and
push
ljmp
cmp
ficomps
sub
fsts
adcb
mov
out
mov
shl
or
cwtl
dec
icebp
xchg
push
pop
inc
pop
pop
pop
ja
mov
cmp
xor
rorl
scas
push
mov
cmp
stos
pop
iret
je
fldcw
jg
xor
addr16
adc
sub
push
jmp
imul
test
adc
mov
scas
cmp
add
test
add
out
mov
mov
in
mov
cmpsb
jl
jno
sbb
stos
push
cmp
add
fists
mov
enter
nop
dec
lretw
cmp
inc
stc
cmp
jl
fidivrs
cmp
dec
pop
inc
dec
add
test
fsubl
das
aas
add
outsb
das
movsb
or
movsl
adc
jl
inc
outsl
int3
rcl
outsb
pop
pushf
aas
adc
int3
sub
ja
sbb
jecxz
mov
aad
pusha
xchg
rcrb
bound
xchg
in
js
sbb
fidivrl
lret
cmpsl
adc
mov
loopne
nop
push
aad
dec
addl
sbb
sbb
popf
cs
mov
sti
add
sbb
or
cwtl
add
fildll
sahf
xchg
out
xor
in
stos
and
rcrl
pusha
push
fidivrs
and
mov
movhps
pop
or
in
lret
push
add
orb
xchg
inc
mov
std
subb
out
mov
imul
mov
mov
jno
add
mov
mov
daa
enter
adc
mov
sbb
lock
adc
jmp
jns
mov
and
cli
popf
inc
xor
push
ds
inc
dec
pop
mov
or
bound
out
sub
pop
into
lods
in
jne
popa
sub
incl
cmpsl
dec
cmp
cmp
aad
inc
and
and
loopne
ret
mov
icebp
fnsave
out
jge
in
cli
or
add
adc
jge
insb
fcmovb
fldcw
dec
mov
or
and
incb
ret
mov
jne
add
rorl
shll
mov
gs
nop
in
sbb
xchg
mov
dec
push
jl
andb
ffreep
pop
or
fwait
in
xchg
sahf
test
cmc
add
xor
push
push
jl
mov
inc
dec
ficomps
int3
lods
xchg
jge
pop
push
lret
test
flds
lock
aas
push
xor
add
stos
dec
or
push
and
in
ds
add
push
cwtl
ja
pusha
mov
sub
cli
fincstp
jns
in
fcmovnbe
mov
addr16
mov
cld
and
out
xchg
xor
xchg
push
in
sbb
dec
pop
ret
xchg
mov
push
jo
leave
push
mov
dec
pop
dec
and
mov
cmp
cmpsl
mov
inc
stos
inc
add
out
jne
inc
popa
int
adc
aad
sub
pop
fistps
stos
lods
call
sub
repnz
jmp
mov
jns
pop
fldenv
ret
enter
inc
sarb
sti
ds
mov
push
out
fdivr
xor
testb
jno
clc
aas
cmpsb
push
or
push
sbb
jne
scas
rclb
stos
cmpsb
fsubrs
push
sub
inc
mov
mov
hlt
and
psrlq
int3
push
lods
pop
std
insl
jns
pushl
clc
and
lea
pop
pop
sbb
xor
cmpsl
lods
sti
mov
ljmp
xchg
push
xchg
or
xchg
mov
fwait
enter
jae
out
push
cwtl
ret
lods
fs
dec
js
inc
cmpsb
mov
iret
push
sub
lods
inc
sbb
movsl
and
repz
sbb
repz
sbbb
cmpsl
pop
inc
mov
fldcw
dec
shrl
inc
nop
inc
addr16
scas
pop
xor
pop
test
mov
xchg
mov
lgs
lds
out
movsl
jno
sbb
pop
repnz
dec
arpl
movsl
lret
daa
xchg
mov
pop
add
push
int3
arpl
enter
aam
fisttpl
mov
cmc
add
mov
push
pop
adc
and
movsl
dec
mov
mov
fwait
jb
mov
outsl
sbb
inc
out
jns
mov
add
data16
dec
je
fwait
es
loope
jo
sbb
pop
inc
jns
push
imul
ss
or
rcrl
pop
push
xor
out
test
and
xchg
hlt
jb
add
mov
dec
xchg
sub
imul
cmp
and
pop
cld
mulb
clc
push
xchg
fsubp
ljmp
scas
add
jnp
cmp
popf
pusha
cmpb
xor
mov
push
imul
mov
push
push
and
push
lret
add
repz
mov
add
push
aas
mov
fiadds
xchg
lahf
inc
stos
std
daa
iret
cld
and
imul
movsb
and
jne
cmp
mov
xchg
orb
fsubp
dec
xchg
adc
mov
or
push
out
dec
lods
sbb
mov
or
and
xor
cmpsl
mov
mov
jge
adc
dec
lea
jnp
jnp
clc
jmp
cmp
pop
in
imul
test
pusha
adc
enter
aaa
xchg
push
dec
sbb
pop
and
adc
loop
mov
lret
mov
mov
movl
test
xchg
jmp
repnz
repz
fistpl
mov
pop
adc
subb
popa
les
mov
fwait
add
mov
sub
mov
addb
mov
dec
xchg
pop
fucom
es
es
mov
fidivl
adc
cmp
repnz
xchg
aam
loope
leave
fnstsw
sbb
jne
mov
xorl
aas
sbb
lods
and
aas
mov
add
in
into
es
outsl
addr16
push
leave
out
insl
lahf
jp
addb
incl
inc
lret
ret
repnz
les
push
mov
xor
jle
sahf
dec
jnp
in
shlb
fistl
out
xchg
imul
jge
cld
jno
test
add
cli
pop
out
je
push
mov
test
js
pop
mov
adc
xor
jecxz
mov
addr16
jnp
dec
jno
push
mov
sbb
loope
nop
mov
jae
lret
icebp
mov
mul
mov
push
inc
addr16
dec
sub
pop
js
and
cwtl
push
lods
into
loopne
xor
mov
out
bound
sarl
js
inc
mov
rcr
outsb
aad
pop
mov
in
add
outsb
sbb
and
cmp
pop
rcll
jle
and
cmp
inc
xor
dec
add
lock
lods
sub
in
push
gs
int
push
jp
lret
mov
push
int
movsb
jno
lds
push
xchg
dec
imulb
dec
sbb
sarb
mov
push
push
dec
xor
sbb
movsb
outsb
push
inc
shlb
std
stos
stos
push
jmp
mov
jmp
pop
sbb
and
out
aad
mov
add
cmp
addl
push
popf
add
pop
loopne
lods
pop
popf
cs
jnp
push
sub
lods
out
jg
sbbb
sbb
xor
sub
mov
and
imul
aaa
ret
xchg
add
rorb
insb
clc
fcoms
push
push
fnstsw
sti
testb
jne
nop
xor
shl
repz
or
je
sub
std
push
or
das
jecxz
cmp
fmuls
mov
cld
je
fisubrs
pop
dec
pop
scas
add
cmp
and
ds
mov
aam
ss
and
mov
sahf
lods
std
das
xchg
ret
in
loopne
mov
fldt
fistpl
jge
movsb
xchg
repz
inc
leave
stc
mov
mov
push
in
stc
ret
pop
pop
add
inc
pop
sub
std
sub
ljmp
inc
push
cmpsl
mov
xchg
xchg
push
jo
sbb
cmp
popa
jmp
jmp
and
adcl
inc
sbb
lret
sbbl
mov
mov
push
clc
push
push
and
lcall
or
pop
fs
ds
out
fwait
cmp
xchg
xchg
xchg
ss
inc
flds
xchg
adc
jne
cmp
cmc
in
cmc
outsb
push
lock
adc
lea
imull
push
fcom
leave
xchg
jmp
sbb
rcrl
jae
inc
in
enter
xchg
ret
mov
fisttpl
iret
std
dec
pushf
scas
mov
xor
add
sub
push
inc
inc
sub
subl
and
mov
fisubs
pop
push
shll
dec
movsl
mov
sub
repnz
cmp
pop
push
mov
bound
jnp
test
sub
fnstsw
loop
xlat
sbb
jae
ds
mov
sbb
jg
cli
and
mov
sbb
es
mov
sub
ror
push
mov
mov
push
xchg
fwait
push
or
imul
hlt
inc
mov
cmc
cli
stos
imul
mov
dec
ret
add
test
nop
pop
sub
test
das
add
mov
mov
and
pop
cli
mov
dec
or
adc
leave
xor
xchg
mov
or
sti
add
test
sbb
xor
pop
movsb
push
call
jbe
xor
cmp
movsb
cmp
push
scas
outsl
adcl
mov
loop
cmpsl
jns
outsb
jmp
lcall
shll
xor
sbb
mov
xchg
cmc
and
jecxz
js
pop
sub
jle
cli
jb
sbb
inc
sub
cmp
sbb
mov
push
shll
imul
roll
test
mov
popa
enter
fiadds
gs
sbb
xchg
adc
adc
test
incl
adc
add
xor
divb
and
ds
cltd
xchg
mov
sub
test
dec
push
mov
inc
fwait
repnz
xchg
mov
mov
xchg
nop
and
fidivrs
aad
daa
sarb
scas
adc
sbb
jecxz
pop
or
jns,pt
divl
add
inc
jl
mov
ja
icebp
addr16
pop
jl
lret
add
dec
mov
or
ret
dec
xor
fbstp
ss
xchg
mov
adc
int
jno
add
sbb
das
fwait
push
push
sub
movsb
cmpsb
cli
out
out
lahf
lahf
mov
test
outsb
popf
shlb
out
insl
repz
out
cld
pop
stos
in
inc
adc
mov
das
push
cmp
mov
push
sub
ret
cmc
mov
sub
jno
push
xchg
int3
clc
idivb
add
push
test
add
ds
pusha
dec
mov
cld
cmc
je
xchg
push
out
aad
les
sbb
movsb
jnp
sbb
mov
xorb
and
xor
push
inc
add
lods
pop
pop
xor
lds
mov
into
or
adc
fnsave
sbb
dec
adc
push
cmp
aad
xchg
scas
inc
aas
pop
push
sub
adc
xchg
test
jge
jle
xchg
dec
jae
iret
push
mov
addr16
clc
rolb
filds
mov
adc
int3
insb
icebp
sub
out
mov
ss
fisttpl
lock
jno
jb
ret
les
insb
and
mov
or
jmp
jne
jns
xor
sbb
xor
cmpsl
fstl
jl
call
adc
inc
js
ljmp
cmc
leave
ret
divb
sahf
add
or
scas
shlb
mov
xchg
push
flds
aas
sub
lods
in
sbb
jg
sbb
lea
mov
repnz
les
push
and
fs
cmpsb
xor
and
push
aas
lea
jecxz
push
push
pop
cmpsl
enter
ljmp
inc
push
push
ficompl
movsb
and
xor
pop
pop
pop
push
jo
push
leave
jo
push
call
stc
and
mov
pop
push
loope
jge
inc
decl
push
cld
stos
push
cmc
out
mov
or
call
stc
jmp
inc
dec
pop
add
arpl
in
xor
outsl
addb
fsubp
lret
repnz
adc
test
or
xor
ss
sub
inc
dec
jo
daa
sbb
xchg
pop
and
ret
jge
in
jns
popa
and
jle
mov
jg
test
nop
sbb
inc
fnstenv
and
cs
inc
sti
push
cs
cmp
gs
and
adc
mov
insb
ret
lret
cmpsl
lods
sub
stos
push
les
sub
int
outsb
push
cmp
ffreep
jnp
inc
mov
push
out
or
mov
inc
cs
jb
xor
or
push
cmp
mov
inc
sub
push
pusha
push
call
jl
das
sbb
add
mov
or
les
pop
outsb
negb
push
pushf
cltd
shlb
das
dec
mov
cld
lret
push
jmp
sbb
sub
cmpb
push
popa
test
in
pop
jo
pop
mov
jmp
cmc
jmp
popf
mov
mov
mov
aas
pop
or
xchg
inc
mov
sarl
outsb
push
aad
sub
out
push
jecxz
add
dec
insb
sub
cmpsb
mov
or
pusha
mov
icebp
mov
inc
mov
pop
sbb
popa
pop
and
xchg
das
icebp
xor
lods
xchg
enter
enter
cwtl
mov
xor
lcall
je
iret
loopne
pop
add
or
testb
repnz
jp
and
cld
sub
lds
sub
sbb
ds
int
jmp
xor
jmp
jmp
jmp
sbb
jne
test
xlat
cmp
shll
mov
mov
insb
jle
jb
jns
ror
loopne
insb
adc
int3
loope
dec
in
mov
xchg
andl
orl
jne
cmpsl
or
adc
xor
frstor
mov
xchg
mov
or
insl
sub
push
and
sbb
pop
push
mov
lahf
ss
dec
das
cmp
sahf
mov
div
arpl
lea
call
jns
or
nop
pop
mov
dec
fistps
push
mov
stos
ljmp
icebp
adc
and
fs
dec
pop
push
insl
sti
ss
add
lahf
loop
cwtl
pop
insb
xchg
rol
bound
push
xchg
cmp
jnp
outsb
pusha
cmpsl
in
dec
mov
cmp
lods
dec
in
test
dec
scas
int
xor
mov
or
rolb
je
divb
shll
inc
mov
xor
mov
add
xchg
xchg
call
jp
mov
push
sbb
ret
cwtl
outsb
daa
pushf
mov
fildll
shl
and
inc
lds
push
in
je
mov
pop
dec
stos
inc
adc
dec
push
add
dec
in
cmc
mov
jl
inc
test
aad
fists
lock
aaa
mov
enter
jle
icebp
mov
mov
mov
out
and
mov
adc
adc
je
shlb
aam
jno
shll
xor
mov
push
push
jl
repz
addb
test
mov
xchg
js
pop
stc
fstpt
jge
aas
or
test
stos
insb
xlat
jl
or
jmp
dec
mov
stos
cmpsb
xor
jecxz
add
sub
cltd
and
pop
jbe
adc
xchg
dec
test
sbb
xchg
aam
pop
dec
rcrb
nop
sbb
dec
or
sub
mov
rcrb
scas
jge
ror
in
adc
fsts
jmp
aad
call
jge
in
fwait
lds
pop
xchg
into
add
mov
xor
add
leave
std
aaa
xchg
rclb
js
ret
sbb
mov
or
insl
cmp
add
push
dec
mov
ret
js
jns
sbb
add
mov
sub
and
mov
daa
std
and
and
pusha
das
scas
pop
add
gs
insb
fwait
subb
inc
cmp
call
dec
and
pop
and
sub
inc
mov
xchg
sub
push
sbb
aaa
loopne
mov
imul
xchg
scas
frstor
inc
push
sub
dec
jnp
loopne
shrl
nop
add
mov
sbb
shll
jns
lock
test
jne
movsl
stc
and
pop
test
idivl
push
or
je
add
scas
pop
jns
cli
xchg
or
add
out
dec
jg
lock
pop
movsb
pushf
sti
pop
shll
nop
push
cmp
mov
mov
cwtl
cmc
jae
movsb
sbb
iret
aaa
xor
pusha
rclb
movsl
mov
sar
dec
mov
pop
ret
pop
sub
jb
add
movsl
or
dec
inc
mov
ss
jge
mov
aaa
pusha
sti
stos
pop
sbb
faddl
mov
xchg
push
pop
pop
xlat
imul
xchg
cltd
aaa
stc
cmp
out
and
nop
dec
mov
lahf
inc
adc
cld
jmp
lds
push
in
xor
xchg
aaa
outsl
movsb
mov
mov
or
mov
sbb
ja
push
pop
mov
neg
jnp
shlb
xor
data16
aad
mov
jo
inc
sbb
inc
adcl
mov
lds
mov
les
loope
int3
dec
pop
push
insb
jo
sub
addr16
sarb
sbbb
xor
insb
and
xchg
nop
fcmovb
in
pusha
pop
xchg
addb
fsubl
jb
cld
ret
xor
xchg
sub
and
js
aad
mov
jb
jp
push
push
lock
cli
rclb
inc
xchg
mov
mov
push
es
xchg
sub
and
leave
imul
pop
aas
test
mov
lock
js
out
pop
xchg
sar
sub
adc
aas
je
je
inc
sbb
das
or
lock
stos
cmpsl
sahf
hlt
leave
in
fisubl
roll
xchg
arpl
or
xor
repnz
jnp
sub
mov
xlat
inc
stos
ljmp
jge
or
std
sbb
pop
mov
lods
pop
inc
sub
push
inc
jns
dec
into
push
lods
dec
add
andl
cmp
lret
lods
inc
mov
dec
loope
sbb
sbb
in
ds
add
sbb
mov
aas
xchg
jbe
gs
stc
pushf
dec
sbb
fsub
ds
test
movsb
pop
out
dec
inc
cmp
mov
pop
jo
inc
mov
sti
cmc
or
and
mov
sub
xchg
sbb
mov
push
inc
dec
pop
pop
dec
je
cmpb
and
shrl
and
dec
mov
stos
popa
jle
call
stc
xor
out
adc
sahf
js
dec
shll
cltd
add
push
add
pop
das
and
fstpt
sbb
decb
push
nop
jmp
into
fcompl
mov
xchg
test
push
cltd
clc
nop
cmp
cmp
sub
aam
sub
outsb
data16
imul
sbb
es
inc
mov
mov
stc
push
and
test
mov
cld
mov
xchg
inc
flds
rcll
jnp
imul
stos
fldenv
mov
jns
out
icebp
xor
insl
cmc
je
push
inc
inc
imul
and
pop
daa
or
shlb
leave
lods
lret
dec
inc
call
mov
add
adc
scas
loop
aad
adc
xor
ret
lods
push
cltd
mov
adc
pop
fcompl
pop
aas
or
sbb
or
adc
jne
push
dec
jo
xchg
push
sahf
sub
data16
sub
push
int
fisubrs
inc
mov
or
xor
add
ret
int
push
and
cmp
dec
faddl
call
leave
push
pop
xor
in
sbb
test
mov
add
je
frstor
std
and
xchg
iret
fisttps
mov
xchg
mov
xor
cwtl
mov
in
cmc
xor
inc
js
or
repz
ficompl
shrl
movsl
ss
ret
insl
pop
jne
js
sbb
sbb
outsb
or
test
test
mov
jl
das
scas
pop
pushf
pushf
rol
inc
xor
push
and
orl
fsubrs
int
cli
lea
jb
xchg
pop
lret
inc
imul
or
rol
rcrb
or
cmc
sbb
lods
push
adc
mov
cmpsb
movsl
add
ljmp
push
and
lcall
and
ret
sets
std
andl
dec
cmp
inc
cwtl
pop
mov
cmp
out
aas
scas
adc
mov
lods
int3
dec
ret
gs
xlat
adc
inc
push
mov
xchg
test
xchg
shrb
decl
imul
push
ja
mov
mov
inc
shl
and
pop
mov
les
xchg
insb
jne
inc
pop
push
inc
scas
pop
ds
dec
aad
pop
mov
cli
xchg
cs
out
fwait
push
or
adc
cmp
mov
jne
daa
and
add
lock
stos
pop
xchg
ret
and
addb
lret
lret
test
mov
and
shrb
dec
add
inc
jecxz
push
fisubs
ret
inc
xor
mov
jmp
shll
mov
push
mov
xor
xchg
push
leave
pop
dec
mov
xor
out
cli
loop
addr16
inc
dec
mov
or
xchg
lock
mov
cli
xor
js
ja
testb
jns
arpl
sub
xchg
mov
js
sub
push
inc
jno
int3
adc
inc
rorb
mov
out
daa
nop
add
lcall
push
inc
add
dec
adc
data16
imul
gs
dec
push
mov
add
mov
push
add
lahf
jg
xchg
xchg
lds
add
pop
push
mov
scas
xchg
mov
clc
lock
inc
mov
push
repnz
xor
mov
es
add
ret
or
add
int3
flds
into
pushf
or
cmc
rorl
add
test
push
cmp
aam
lods
imul
hlt
xchg
rcll
rcrl
push
and
mov
mov
out
and
mov
pop
gs
sahf
dec
inc
gs
pop
xchg
in
pusha
out
test
or
dec
movl
jp
mov
notl
and
jb
test
shll
lret
adc
out
pop
nop
mov
stos
mov
int3
es
rclb
inc
push
push
aam
pushf
imul
cwtl
mov
ficoms
dec
pslld
ss
lret
mov
mov
adc
test
ljmp
cmp
popa
xor
aaa
push
movsb
pop
mov
and
repz
lcall
out
rcrb
aas
cmc
jp
mov
pop
pop
mov
repz
cltd
push
dec
cmp
add
jne
add
movsb
sub
jne
shl
icebp
icebp
jmp
pusha
clc
daa
movsl
dec
or
add
mov
mov
dec
mov
sbb
cmp
sub
inc
out
and
lcall
mov
add
adcl
lahf
outsl
lcall
dec
popf
es
fildl
daa
lret
cmp
and
fistl
mov
js
fidivrs
lea
leave
jp
push
push
push
fsubl
outsb
aas
cmp
daa
lock
mov
push
mov
std
pop
ljmp
je
pop
cwtl
sti
mov
sub
push
pop
lea
lret
jb
sbb
sahf
cmpsb
bound
fcoml
lahf
mov
aas
push
aad
mov
pop
iret
mov
inc
mov
or
inc
in
ret
call
addr16
cmp
and
xchg
jne
fcmovne
ss
and
sbb
push
xchg
sub
xor
mov
push
popa
aaa
outsb
fwait
mov
les
dec
push
mov
dec
fbld
adc
insb
int3
jo
adc
popa
out
push
mov
fldpi
cmp
ret
lods
sahf
cmp
out
mov
sub
dec
out
int
sbb
fcomp
sbb
xchg
mov
stos
mov
mov
push
inc
ficompl
rcll
inc
pop
out
add
adc
xchg
je
cmp
or
mov
aad
insl
sahf
sbb
shrd
sub
lcall
int3
add
push
in
xchg
rcl
and
cmpl
stos
sti
popa
or
ret
sbb
scas
adc
js
insl
lret
cmp
xor
xchg
push
adc
push
mov
xchg
pop
pop
mov
fiadds
cld
cmpsb
xchg
js
fists
or
mov
jmp
pop
inc
sub
jp
fmuls
cmp
and
imul
ds
xlat
lret
jb
addr16
inc
mov
iret
pop
lods
xor
or
hlt
aas
insb
ja
xor
outsb
mov
insl
int
leave
pop
dec
xor
cmp
mov
pop
push
sbb
out
sbb
mov
loopne
call
cli
int3
and
sub
inc
jl
mov
pop
sbb
imul
dec
fsubr
aad
xor
das
loop
sarb
data16
testb
mov
xchg
hlt
xchg
mov
xor
scas
jecxz
add
aas
stos
mov
add
sub
add
sar
mov
lds
cmpsl
imul
push
push
cmp
pop
pop
sbb
dec
xchg
xor
mov
bnd
xor
xchg
ja
jb
push
jg
jbe
aad
pop
fimuls
lahf
pusha
fistpl
shr
dec
sbbb
subl
lret
pop
cwtl
push
mov
or
add
int
nop
or
jns
push
cmpsl
cmp
and
in
sbb
xchg
pop
sub
mov
mov
or
aad
in
pushf
mov
sbb
add
addr16
divl
outsb
inc
mov
sbb
push
shll
cmp
push
dec
les
lds
fldenv
adc
inc
in
fs
cmp
shlb
mov
out
lods
test
sbb
jg
xor
fld
sub
jecxz
and
sbb
jecxz
dec
or
insl
sub
inc
sub
sub
jbe
fiadds
mov
gs
lea
hlt
or
adcl
inc
jecxz,pn
jb
jne
xchg
dec
sub
push
aas
pushf
jmp
pop
sbbb
inc
cmpsb
mov
or
and
mov
outsl
cltd
add
inc
push
mov
mov
lods
add
and
mov
mov
les
aas
cmp
addr16
push
adc
pop
test
icebp
or
add
push
mov
fistps
push
fs
adc
push
leave
push
nop
sbb
in
movsl
add
fwait
sbb
mov
push
or
loop
mov
imul
loope
arpl
popa
pushf
adc
push
shll
mov
imul
xor
pop
das
lret
ss
ss
push
insb
ds
mov
pushf
add
sbb
enter
sbb
movsl
outsb
and
add
pusha
cli
cld
jno
jecxz
lods
leave
jmp
cmp
cmp
add
xor
stc
or
cld
stos
or
dec
subl
aad
cli
bound
jns
add
es
outsb
or
bound
sub
or
cmp
sbb
push
daa
cmp
push
push
mov
xorl
xor
adc
test
adc
mov
lock
mov
enter
add
xor
mov
pushf
and
xchg
mov
adc
cmp
daa
test
push
cs
dec
stos
xor
je
int3
xchg
sub
fldenv
mov
xchg
sub
xchg
lea
mov
cmc
mov
mov
adc
int
scas
cmpsb
push
push
in
adc
dec
mov
inc
inc
mov
inc
sbb
pop
popf
pusha
add
and
lods
mov
js
mov
int3
clc
pop
sarl
dec
sub
fwait
mov
mul
mov
sahf
inc
sub
or
lock
sbb
sbb
fs
xor
mov
leave
add
into
stos
in
out
push
icebp
mov
movsb
bound
cmp
jmp
push
iret
pop
mov
sahf
mov
push
add
inc
pop
bound
aam
fwait
scas
mov
fcmovnbe
jno
xor
imul
pop
test
mov
jmp
iret
jbe
add
scas
loope
or
ret
mov
inc
cmp
push
sub
leave
sbb
nop
cmpl
movsb
jecxz
shl
bound
fwait
mov
int3
cmpsl
push
sbb
xor
push
pop
repnz
xor
mov
jmp
and
repz
jbe
mov
xor
cmp
and
dec
inc
lcall
test
and
es
into
and
or
xchg
mov
ficompl
adc
rcl
jmp
inc
cli
xchg
hlt
jp
lods
xchg
inc
jne
or
jle
and
enter
and
call
lret
xchg
jge
mov
imul
xchg
add
sub
xchg
fisttps
pop
xchg
cli
les
lods
ud1
xchg
dec
sub
push
cld
or
cvtps2pi
mov
jae
pusha
out
or
push
sub
jle
and
std
sti
mov
push
mov
lahf
dec
xchg
bound
into
adc
in
inc
rclb
sub
or
cld
sub
test
jmp
loop
outsb
jmp
out
xor
out
arpl
mov
adc
mov
rol
ja
and
add
sbb
stos
mov
inc
jp
cli
lds
and
das
pop
fsubp
paddsb
jae
sub
xchg
rorb
sub
out
icebp
ret
pop
js
repnz
aas
sbb
imul
dec
gs
pop
fwait
repz
stc
out
or
and
aad
pop
jge
stos
dec
aam
iret
jl
loopne
movsl
sbb
fwait
xchg
push
push
ljmp
imul
aad
in
push
hlt
call
xor
leave
adc
jbe
dec
test
inc
cmp
mov
cmp
ja
les
xor
push
es
jl
movsb
add
xchg
xor
jno
pop
sub
inc
inc
pop
push
inc
stc
xchg
or
out
loope
mov
aam
sub
ds
mov
mov
lcall
mov
cmc
push
inc
mov
notl
cmp
insl
xor
add
mov
xchg
add
stos
enter
mov
out
addr16
in
cmc
jnp
pushf
inc
and
cmp
addb
and
or
repnz
jnp,pn
xchg
int3
dec
enter
cmpsb
frstor
insb
arpl
enter
add
mov
mov
xchg
leave
cmp
insb
lods
xchg
stc
stc
enter
clc
dec
dec
loopne
jnp
sbb
jmp
or
aad
fistps
dec
ret
sbb
aam
fs
fmulp
mov
bound
data16
jb
sbb
cmp
ss
leave
xchg
cmpsl
adc
fisttpl
jns
push
sub
jmp
dec
mov
lods
or
sub
fisubrl
sbb
cmpsl
xor
outsl
mov
enter
into
push
stos
imul
push
rcll
jb
cmp
pop
std
daa
or
add
insl
push
cli
in
movsl
xchg
cmp
idivb
jbe
and
aas
stc
je
pop
add
xchg
inc
mov
push
mov
das
fisttpll
mov
push
cmc
dec
jno
and
lods
adc
lahf
cmp
adc
loopne
adc
add
jne
adc
xor
ficompl
push
xlat
add
dec
dec
push
mov
mov
shl
fisubs
adc
ljmp
and
jge
sahf
cmp
loopne
pop
test
orl
mov
add
xchg
dec
inc
fisttpll
pushf
dec
dec
out
cltd
dec
and
sbb
push
mov
cmp
adc
xchg
cltd
fdivrl
cld
xchg
pop
mov
stos
push
pop
testb
inc
je
dec
jge
stos
adc
icebp
and
lret
je
and
xor
xor
push
push
js
jno
in
mov
outsl
or
int3
lret
mov
and
push
ror
popf
push
jmp
xor
add
or
aaa
add
mov
pop
pop
xchg
insl
iret
aad
or
mov
xchg
fiadds
push
add
push
call
scas
cmp
mov
mov
movsb
loopne
mov
aam
jo
fidivl
mov
inc
mov
jne
xchg
pop
xor
push
sahf
dec
and
jo
test
lods
stos
mov
adc
roll
fisttpll
inc
or
mov
pop
aas
add
fldenv
and
rolb
and
andb
es
les
lds
clc
and
pop
popf
and
out
in
pop
test
ja
sub
test
in
lahf
popf
sbb
pop
mov
test
loop
xor
push
push
notb
and
data16
imul
xor
mov
ss
adcl
push
dec
inc
ljmp
mov
mov
inc
int3
subl
popa
xchg
sbb
popa
lret
test
inc
xchg
mov
ljmp
stos
vpsubd
daa
ds
pop
and
adc
cmp
cs
insb
mov
rolb
sbb
jge
jnp
mov
bound
jns
out
xchg
out
push
clc
lock
test
repz
negb
cmp
movsl
insl
add
lcall
rclb
jg
test
inc
mov
push
cmp
push
shl
adc
adc
sub
in
jae
mov
sub
filds
sub
xor
aam
sbb
aas
out
adc
dec
xchg
bound
or
in
pushf
xchg
sarl
cmpsb
loope
sbb
aad
pop
mov
or
push
inc
data16
adc
lds
rolb
stos
and
jo
sbb
xlat
popf
incl
mov
adcb
push
fcoml
leave
add
js
xor
adc
stc
movsb
jge
je
pop
pop
das
add
out
test
cmp
test
cmpsl
cmpsl
psubq
inc
or
fisttpll
movsl
push
adc
adc
dec
pop
sbb
ljmp
add
insb
push
test
repz
push
adc
push
push
push
cmp
repnz
ds
xor
addr16
ljmp
push
jb
cmp
nop
sub
enter
mov
hlt
ret
into
in
and
rorb
adc
mov
fsubrl
arpl
sub
fcmovnbe
sub
fiadds
mov
lret
cwtl
or
add
aad
or
je
adc
xchg
sub
repnz
fidivl
sub
and
mov
cmp
jle
adc
mov
pop
inc
push
pop
imul
add
movsb
mov
sbb
add
lea
loopne
sbb
mov
ss
mov
adc
sti
sub
lods
lea
insl
sub
loopne
jne
les
gs
std
inc
jns
or
shr
pop
jge
popa
push
lea
lret
inc
fcmovbe
push
pop
stos
cs
test
sbb
mov
xor
mov
cld
roll
repnz
std
insl
and
fdivr
cwtl
jle
imul
push
dec
in
insb
jge
loop
sbb
mov
pop
cmpsb
and
pop
mov
jg
push
and
cmpsb
cmp
jp
and
dec
and
hlt
loope
ljmp
icebp
gs
aaa
mov
sub
jp
mov
sbb
pushl
xchg
push
push
xchg
cmc
in
ret
cld
dec
std
mov
loopne
cmp
mov
arpl
movsb
popa
pop
xchg
nop
popf
fcomps
jne
loopne
loope
fdivl
fdivrs
negb
cltd
cwtl
out
adc
orb
lea
cmp
test
pop
xchg
fdivl
rcll
nop
cmp
out
cmp
shrb
pop
rcrb
sub
adc
or
pusha
xor
je
pusha
sti
cmp
std
inc
shl
push
movsb
test
and
test
adc
sbb
sbb
out
cmp
mov
xchg
cmpsb
roll
add
rsqrtps
pop
std
sbb
sub
pop
add
inc
adc
lds
mov
clc
pusha
or
or
push
faddl
out
icebp
jle
fmuls
ret
sub
sub
adc
xor
pop
pop
lret
and
xor
loop
xchg
dec
and
mov
into
jne
adc
std
fnstsw
dec
inc
push
icebp
aad
and
lret
mov
sub
scas
mov
push
or
sub
cs
dec
fs
fucom
sbb
andb
test
sti
pop
fisubs
hlt
and
xlat
jp
sbbb
sub
ret
xor
sar
or
inc
pop
fdivr
fdivr
xchg
std
mov
aam
xchg
sbb
in
xchg
adc
dec
or
scas
adc
call
lcall
pop
mov
cmpsl
inc
rcr
gs
dec
xor
sbb
and
mov
push
data16
cmp
cmpsl
sub
or
adc
and
jns
pop
jg
movsb
repnz
fdivr
sbb
addl
int
in
jg
xchg
movsl
push
push
lds
repz
push
pop
jnp
cltd
dec
inc
jo
repz
inc
mov
jp
xlat
jbe
jl
push
inc
adc
mov
ret
add
adc
mov
pop
mov
jbe
dec
push
mov
outsl
movb
push
mov
aad
insb
aad
add
inc
inc
sbb
sub
lods
les
mov
repz
push
push
into
roll
stos
iret
or
inc
adc
mov
das
pop
mov
neg
mov
inc
adc
scas
lea
cltd
in
fmul
adc
into
imul
pusha
adc
mov
daa
sbb
pop
pop
adc
lcall
mov
pop
cmp
int
push
int3
popl
fistpll
cmc
rorl
mov
sub
sbb
pop
rcrl
dec
sub
xor
push
movsl
jp
adc
aaa
movsl
xor
sahf
pop
dec
xchg
mov
lret
loope
arpl
mov
pop
cli
jae
shlb
inc
icebp
ret
or
jmp
push
mov
pusha
adc
mov
dec
test
pop
arpl
daa
imul
add
imul
fsqrt
or
dec
and
add
dec
mov
jg
adc
mov
cli
pop
inc
mov
je
jno,pt
jg
mov
sub
xlat
divl
pop
and
shrb
push
jb
in
decb
adc
cmovle
dec
scas
adc
mov
decl
jecxz
lock
outsl
mov
push
iret
push
dec
cmc
sbb
sbb
addl
xlat
dec
lods
xlat
push
fistps
loope
adc
jo
repnz
fwait
push
call
xchg
sub
mov
in
into
dec
out
mov
fcompl
lret
mov
out
push
sbbl
and
mov
mov
call
fists
jo
push
jne
dec
xchg
cwtl
adc
xor
jns
xchg
inc
sub
icebp
into
loop,pt
jge
loop
daa
jns
scas
sahf
sti
xchg
jl
sub
dec
shll
xlat
ljmp
ret
ror
jno
sti
mov
scas
mov
add
sub
push
pusha
push
xor
lret
shll
dec
adc
fidivrl
adc
cs
clc
xor
sub
scas
lods
or
scas
adc
pop
add
ret
cmpsb
mov
mov
mov
jg
jne
push
mov
pop
testb
and
clc
ss
nop
jle
push
or
xor
in
or
out
in
or
adc
cs
jbe
inc
mov
xchg
fsubrl
sub
push
mov
in
leave
test
mov
sahf
outsl
call
xor
movsb
fs
bound
outsl
mov
and
loope
cmp
mov
dec
lahf
cmp
and
xchg
stos
mov
movl
shlb
in
sub
mov
dec
pop
xchg
movsb
inc
fsubs
sub
shlb
pop
mov
ja
cmp
add
out
inc
stos
adc
or
jmp
imul
mov
sub
push
arpl
lcall
ja
or
or
in
adc
imul
ret
inc
mov
fwait
clc
cmp
cmpsl
mov
leave
jbe
mov
pop
inc
mov
add
mov
or
fildl
inc
mov
dec
mov
insl
test
mov
mov
pop
mov
fdivrs
jbe
sbb
dec
mov
insl
das
xchg
push
xlat
and
repz
add
jno
sub
mov
std
mov
jne
fdivrs
out
sahf
jmp
jmp
insl
pop
andb
dec
cs
mov
bound
shll
cwtl
fnstenv
sbb
cmpsb
pop
xchg
fisttps
imul
movsb
inc
push
test
sub
pop
lds
mov
jg
aad
or
jecxz
jne
xor
fsts
xor
fsubl
lea
out
ret
flds
subb
inc
negl
ret
imul
push
bnd
mov
mov
je
repnz
cld
mov
out
dec
out
mov
sbb
dec
in
cltd
shl
iret
lcall
inc
mov
ljmp
in
mov
dec
inc
xchg
jb
shrl
lods
pop
sbbb
fstps
push
ret
or
and
mov
fcomps
add
xchg
std
test
ss
sub
xchg
addr16
pusha
mov
push
pop
loopne
fldcw
jnp
lret
mov
movsb
sub
ds
stos
mov
scas
inc
ljmp
sub
mov
hlt
outsl
iret
aaa
and
leave
jl
xchg
push
push
inc
jo
add
aam
push
mov
pushf
or
fsubrs
ficompl
pop
pop
mov
cmp
rcrb
ret
sub
pop
sbb
addl
xchg
icebp
jecxz
ljmp
or
xchg
xor
fdivrl
cli
fdivrp
cltd
mulb
pop
mov
jg
mov
out
lea
push
int3
sub
and
lods
movsl
js
movsb
call
ret
stc
jle
jae
sahf
enter
sbb
mov
repz
je
xchg
jnp
sbb
mov
in
ret
lcall
xlat
scas
xor
enter
jns
in
lods
gs
or
jne
jp
fnstsw
out
popf
add
pi2fw
clc
inc
sub
xor
cmp
addr16
cmp
mov
imul
adc
ficomps
inc
test
call
pop
or
inc
out
mov
sub
ja
fbld
add
gs
mov
rorl
cmp
out
subb
mov
push
xor
mov
adc
lods
stos
insb
aad
jl
addr16
adc
subb
adc
push
in
pusha
pop
push
rcrb
lret
cmpl
outsl
xchg
xchg
push
les
movl
jecxz
sub
or
push
sbb
ficoml
jp
test
sub
into
mov
and
xchg
jge
test
out
cmp
xor
shr
jge
aaa
rol
push
add
fidivrs
lahf
les
xor
in
sub
mov
sahf
mov
fstl
std
cmp
sub
stos
xchg
mov
loopne
call
fwait
jne
nop
mov
add
inc
and
adc
lods
jecxz
in
add
fisubl
roll
ss
jae
jl
mov
xor
cltd
lcallw
jge
push
dec
push
cmp
test
arpl
hlt
push
test
sarl
and
xor
mov
lea
push
mov
sbb
sub
dec
sahf
testl
cli
pop
jo
and
jg
pop
call
mov
xchg
push
shr
inc
inc
negl
mov
insb
pop
mov
test
mov
rcll
pop
push
jmp
sbb
decb
das
xchg
ja
or
sarb
int
cmp
test
jno
gs
ficoml
mov
in
inc
mov
mov
xchg
hlt
jae
nop
mov
enter
dec
jge
fisubs
pop
xor
mov
xchg
pop
sub
test
xor
dec
mov
pop
and
mov
pop
push
repz
sub
fimull
sub
fdivl
dec
sahf
mov
dec
jp
arpl
mov
sbb
push
sbb
dec
bound
and
inc
push
popa
enter
mov
ljmp
cli
mov
xor
call
inc
int3
sbb
push
fsubrs
lock
das
fcmovbe
sub
pop
or
sub
pop
or
loop
xchg
push
es
cmp
add
inc
das
jecxz
sbb
out
scas
jge
xchg
cli
nop
addl
sub
bnd
pop
pop
cmpsb
js
call
xor
sub
pusha
cwtl
push
cmp
test
xchg
mulb
mov
fiaddl
ret
xchg
jmp
xchg
push
pusha
inc
dec
jno
pushf
dec
imul
pop
or
lds
push
dec
and
jb
lods
fistpll
subb
dec
or
jnp
pop
int
push
dec
add
dec
cmp
pop
gs
iret
ret
loope
inc
insb
subl
hlt
out
pop
xor
cmp
and
mov
jae
cmc
sub
cli
adc
jle
xor
jmp
inc
pop
sub
outsl
les
and
test
arpl
and
inc
jne
pop
dec
and
notb
test
push
dec
cwtl
test
push
adc
leave
out
mov
dec
pusha
aad
xor
adc
sarl
test
or
sbb
test
outsb
xchg
mov
out
fisubrl
push
and
xlat
push
jae
vpsubq
iret
shlb
popf
jae
mov
or
stc
jno
insb
stos
cwtl
xor
je
or
jne
test
nop
orb
arpl
jo
lret
dec
mov
filds
lret
push
pop
andb
push
push
lods
push
mov
fisubrl
sbb
and
shlb
xlat
and
xor
pop
push
or
rorl
ja
inc
test
pusha
add
negb
out
imul
jge
sub
stc
popa
dec
enter
movsl
cmc
sub
pop
mov
jp
jne
dec
lods
mov
mov
push
testl
es
or
jnp
call
or
pop
fists
pop
aas
dec
bound
mov
sbb
movsl
inc
sbb
mov
out
cmp
jne
pusha
sub
sbb
mov
test
lahf
xor
pop
stos
outsb
cmp
arpl
lcall
repnz
movsl
add
adc
mov
jae
lods
in
cmp
xchg
and
or
pushf
jae
xchg
mov
jge
ret
in
jmp
xlat
dec
cmp
mov
in
fwait
jl
dec
cmp
xchg
xorl
mov
sub
cmp
shlb
add
les
jo
inc
and
lret
add
sti
sbb
stos
adcb
imul
push
cmpsl
pop
pushf
jnp
fsubs
jge
push
or
inc
add
into
lea
dec
jae
dec
inc
sub
jp
rorb
pushf
mov
rcll
lcall
xchg
out
cmp
cmp
mov
xor
int
mov
scas
mov
xlat
and
daa
test
inc
push
div
scas
leave
cmp
jo
scas
sbb
out
lret
mov
movsl
xor
pushl
sub
fisttpll
cmp
adc
mov
mov
loope
jmp
aas
iret
push
or
jmp
push
jle
push
pop
jg
dec
aas
xchg
sahf
pop
inc
add
dec
cwtl
xchg
out
std
add
xchg
xor
sub
adcb
xchg
fisubrl
dec
out
push
test
out
scas
mov
mov
inc
fwait
in
jnp
aaa
cmp
call
xchg
insl
daa
mov
xor
cmpsl
test
push
loop
das
mov
cmp
aas
loopne
dec
fwait
popa
icebp
fsubrl
rolb
adc
xchg
xchg
cmp
inc
adc
push
lcall
cmp
nop
jge
mov
and
or
js
movb
bound
sbbl
jl
mulb
add
xchg
jo
adc
sub
fildll
pop
and
jnp
push
push
inc
inc
pop
jg
add
xor
loopne
xchg
cmp
lods
movsl
enter
sbb
or
push
into
popf
pop
or
insb
and
ss
sbb
xor
sbb
mov
sbb
loope
fsubrs
mov
fsubrl
mov
inc
push
or
idivb
mov
lret
test
jl
pop
iret
sub
push
jl
test
cmp
pop
daa
jmp
testb
popf
add
jnp
std
jbe
push
mov
pop
aas
sbb
loop
lods
cmp
jae
xchg
mov
out
testb
jns
mov
leave
daa
add
aas
cwtl
in
daa
ret
jecxz
sbb
dec
rorl
mov
test
jno
or
cmp
pop
jle
push
push
pop
sbb
jo
xchg
icebp
adc
lret
stos
lea
jg
data16
std
aad
ret
lods
and
mov
sbb
mov
aaa
repnz
fstpl
scas
sub
push
ret
jg
hlt
cmpsl
adc
xor
fildll
movsb
xchg
xor
and
loop,pn
out
dec
jno
push
iret
push
iret
sub
negb
test
shlb
aaa
pop
mov
shlb
jmp
inc
sti
cwtl
inc
int3
sub
xchg
add
xchg
jno
mov
sbb
sbb
xchg
xchg
fiaddl
ljmp
stos
hlt
mov
rclb
xor
jl
and
mov
ds
fsubrl
lret
inc
lret
adc
ret
test
xchg
fwait
mov
jmp
mov
int
sub
push
xchg
xchg
aad
mov
out
sub
lock
push
dec
bound
mov
sbb
add
div
jb
cmpsl
xor
push
jecxz
mov
xchg
inc
mov
test
push
in
mov
cli
loope
addl
ds
mov
inc
pop
lcall
push
cli
in
adc
mov
stc
stos
sbb
cmp
mov
inc
add
idivb
in
jecxz
lds
outsb
sub
mov
or
sahf
lret
xor
mov
dec
imul
sbb
jnp
test
stos
add
pop
lods
das
xchg
xor
ss
cli
mov
sbb
push
jne
ds
xchg
ret
mov
sbb
test
mov
pop
push
imul
out
mov
xchg
loope
incl
inc
add
sub
and
jge
cltd
out
adc
addr16
lahf
dec
jmp
les
sub
mov
and
imul
popw
mov
cld
jmp
std
ret
mov
jne
movb
pop
adc
adc
jl
hlt
out
hlt
lret
ret
jo
add
mov
rorb
inc
nop
inc
or
push
cmp
cmp
cmc
aas
inc
sti
mov
icebp
mov
cli
jg
loope,pn
aad
std
cmp
push
push
aad
sub
movsb
mov
mov
loop
icebp
dec
mov
fadd
ret
xchg
sbb
inc
or
dec
popf
xchg
and
xchg
xor
rorb
rorl
lcall
addr16
jg
ds
sub
aaa
inc
ja
loop
sarb
push
and
jo
pop
mov
sbb
mov
add
hlt
inc
mov
iret
lahf
push
pop
lea
and
ds
jae
pop
enter
push
adc
and
sub
repz
push
xor
rol
sub
mov
in
xor
cltd
inc
mov
rcl
mov
xor
outsl
insl
push
or
fiadds
les
xchg
cmp
cltd
in
sbb
arpl
in
push
rorl
xor
sarb
xchg
mov
cli
in
jb
call
or
mov
clc
lahf
cmp
pop
in
cld
lods
mov
adc
lods
std
std
cmc
xchg
adc
jp
dec
in
fistpl
enter
pop
movsb
cmpsl
jge
jmp
xchg
add
enter
push
cmpsl
add
std
insb
push
adc
push
fiadds
sub
dec
xorb
and
inc
test
push
pop
mov
xchg
push
cmc
xchg
inc
push
fildl
repz
or
dec
adc
pop
jne
lods
lods
or
ret
jl
rclb
jle
outsb
and
push
test
daa
ja
rorb
das
mov
fmuls
cmpsl
xchg
or
add
and
out
dec
lods
popa
pop
rol
scas
pop
lock
lock
mov
lods
es
mov
sub
pop
aas
arpl
inc
pop
xor
push
pusha
and
pop
movsl
or
jne
pop
push
test
cmp
mov
pushf
mov
cltd
mov
in
and
mov
int
xchg
jp
sbb
sbb
hlt
jge
iret
insb
fdiv
out
mov
pushf
dec
outsb
jns
xor
out
adc
test
iret
movsb
add
repz
or
dec
outsb
mov
cmp
pop
lret
orb
adc
adc
push
es
pop
push
leave
out
pop
jle
xor
in
fldt
out
jns
js
lahf
imul
mov
sub
mov
sub
sbb
cli
xchg
push
sbb
test
icebp
xor
or
shl
inc
fcmovbe
mov
inc
and
xchg
xor
int3
xchg
int
jb
xchg
fsubl
mov
andb
adc
mov
aad
in
movl
push
jbe
dec
je
fcompl
test
xchg
xchg
je
push
rcrl
cmp
fimull
dec
js
lods
xor
test
jno
and
stc
punpckhwd
sub
mov
xchg
test
fwait
jg
fs
mov
gs
pop
fs
pop
mov
ja
mov
in
std
mov
mov
fildll
loopne
pop
or
shrb
fcoms
mov
jl
pop
shll
adc
inc
push
jmp
sbb
nop
addr16
int3
popa
jge
insb
lret
sarb
mov
sub
aas
shll
xchg
icebp
adc
ljmp
sti
xor
insl
dec
or
pop
retw
sub
ret
scas
jno
dec
lret
xchg
xor
fiaddl
mov
fcomi
sub
inc
add
dec
cmp
cmpsb
out
test
sub
adc
int3
mov
add
xor
and
push
lcall
enter
push
test
int3
shr
sbb
out
push
orl
pop
mov
mov
imul
mov
mov
in
cli
imul
xchg
and
ret
lods
adc
pushf
iret
add
ds
add
in
adc
sub
mov
and
mov
cmp
and
cmc
popa
add
mov
jmp
mov
stos
call
xchg
and
pop
lock
aad
movsb
push
mov
lret
push
sbb
subb
mov
push
push
xchg
mov
ret
aam
cmp
jbe
pushf
jmp
mov
sbb
cmc
adc
inc
test
into
cmp
adc
xchg
fcoml
cmp
xchg
or
jp
mov
imul
ljmp
ljmp
jb
lcall
add
xchg
jge
push
sub
cwtl
xor
fists
or
mov
mov
outsb
sti
and
sbb
push
leave
cmp
mov
cmp
or
xlat
and
xchg
pop
jmp
jmp
mov
push
cmp
inc
mov
insb
push
add
push
js
mov
out
fnstsw
inc
call
pusha
add
or
push
mov
ret
shll
mov
outsl
les
insl
jo
xchg
xchg
mov
insl
push
xor
jmp
dec
xchg
jno
lods
cmp
out
pop
dec
push
jnp
int3
mov
inc
xchg
lcall
mov
aaa
pop
cmp
jns
mov
test
pop
xor
fldt
dec
sbb
aas
frstor
push
sbb
or
cmpsb
xor
xchg
sub
das
cmp
inc
inc
pop
xorl
lea
sbb
or
mov
sti
movsl
inc
imul
rorl
adc
in
repz
sub
pop
sub
or
jge
in
cs
push
das
gs
cltd
clc
xchg
test
cmpsb
pushf
jae
fadds
fstpl
stc
scas
jl
inc
repz
stos
xor
and
xor
add
push
mov
xchg
add
jp
cmc
cmp
and
pop
les
xor
ljmp
inc
loop
sub
fnstcw
pop
push
data16
mov
mov
shl
loop
sub
mov
ljmp
lods
jmp
imulb
insl
and
adcl
into
adc
xor
mov
mov
mov
movsl
adc
andb
hlt
and
pop
mov
dec
xchg
out
inc
popa
lods
sbb
sti
mov
test
sbb
sub
push
jmp
jns
sub
sub
in
popa
adc
adc
arpl
daa
fcoms
hlt
ljmp
jnp
pop
nop
clc
mov
lods
subb
cmpsb
add
test
test
stos
mov
lock
pop
enter
and
fimull
rolb
sbb
and
xchg
jmp
sahf
lret
loop
test
icebp
cli
mov
ja
mov
pushf
xchg
pop
inc
and
xchg
dec
cmpsl
loope
add
int
xor
mov
push
xchg
adc
std
arpl
jne
mov
adc
jl
stc
mov
shlb
mov
pop
xchg
jge
sti
mov
jmp
or
hlt
daa
mov
sarb
push
push
or
add
mov
xchg
cmpsb
jmp
or
lds
mov
add
repnz
xor
add
xchg
std
and
jle
or
xchg
cld
out
imul
imul
dec
icebp
fstl
aaa
push
pop
into
jnp
push
sbb
cmpl
pop
notb
dec
aas
mov
and
inc
ficoml
inc
push
pushf
repnz
push
stos
cmp
daa
lcall
imul
adc
aas
enter
lea
sbb
inc
mov
push
xor
scas
fidivs
imul
cmp
jb
aaa
mov
pop
mov
push
enter
xchg
pop
pop
cmpsl
xchg
les
adc
push
add
sub
cltd
std
std
pop
add
jno
mov
aaa
dec
dec
push
lds
es
sbb
jnp
sub
xchg
ror
cltd
insl
pop
cmpb
outsb
jecxz
xor
bound
adc
popf
mov
xchg
loopne
mov
jl
xchg
or
add
dec
loope
aaa
push
mov
pop
es
scas
xchg
add
sbb
sub
sahf
jmp
xor
int3
adc
adc
dec
cmc
fwait
adc
leave
aas
or
data16
pop
inc
mov
jae
std
adc
in
jae
fsubrl
rorb
fsubrs
lcall
dec
pop
into
int
int3
xchg
pop
shl
loop
push
in
or
aaa
mov
pop
inc
cs
sub
sarl
adc
sbb
orb
es
jne
and
mov
je
lret
mov
es
push
ret
fldenv
mov
cmp
sarl
aad
or
cmp
in
push
or
add
ds
or
push
popa
and
mov
lret
mov
mov
cmp
cmp
cmpsb
add
call
sub
ret
adc
adc
movsb
cmpsb
pop
dec
sub
sub
lods
dec
cmc
rorb
xor
repnz
je
pop
jno
pop
shrl
test
xchg
cmp
sbb
push
in
stos
loopne
in
mov
sub
and
sarl
xor
in
mov
out
imul
jmp
xor
or
sub
lcall
mov
lahf
call
xchg
call
adc
fldt
pop
mov
les
sub
in
lret
lods
loopne
sbb
pop
xchg
fiaddl
dec
and
dec
jns
xor
rcrb
cwtl
jbe
inc
mov
test
out
fsubrl
roll
adc
mov
cmovo
bound
push
daa
mov
sub
xchg
sbb
test
in
and
add
cmpsb
pop
lods
mov
jge
dec
movsl
lret
xorl
sub
cmp
push
adc
mov
xchg
out
add
lret
inc
stos
fs
pushf
scas
subb
bound
repnz
adc
outsb
js
add
sbb
push
push
arpl
push
add
out
test
fstl
or
mov
in
clc
mov
mov
fwait
mov
inc
sbb
cmp
adc
mov
push
mov
cli
xor
mov
jno
in
lret
les
in
pop
dec
insb
int3
and
js
popa
popl
mov
cs
adc
rorb
xchg
mov
jecxz
xor
fmulp
xor
mov
int
mov
call
int3
pop
xor
jge
repz
movsb
push
xchg
adc
xchg
daa
pop
into
hlt
pop
hlt
jns
mov
inc
xor
gs
adc
pop
arpl
and
xor
fistps
iret
or
mov
jle
lods
cs
pop
sbb
or
mov
aaa
es
out
or
shr
adc
clc
xor
xchg
comiss
or
repz
push
addr16
das
xchg
mov
mov
ficompl
insl
inc
add
ds
or
or
mov
in
js
pusha
data16
fdivs
rcll
inc
push
push
xor
pop
pushl
jmp
pop
cld
scas
inc
mov
in
imul
mov
mov
sbb
mov
mull
bound
testb
mov
xor
subl
dec
lea
rcl
adc
push
pop
fbstp
scas
add
mov
jb
hlt
xchg
shlb
fucomi
nop
and
leave
pop
sbb
xorb
sub
clc
cld
jmp
dec
shll
aas
or
add
dec
push
stos
dec
push
sti
fstps
fimull
mov
popf
sub
popf
jo
das
daa
mov
bound
rorb
loopne
ret
out
insl
mov
sub
loopne
push
or
in
dec
sbb
inc
cmp
ficoml
add
cmp
leave
out
mov
push
xor
addr16
nop
int3
stc
sbbb
pop
je
lahf
dec
movsb
fcomip
inc
or
enter
les
inc
loopne
scas
and
popf
ds
in
movhps
cmp
push
cmp
lods
cld
movsl
mov
sub
js
dec
lahf
or
arpl
cmc
lock
lock
je
mov
aam
jae
mov
inc
xlat
adc
roll
leave
push
pop
xor
ret
and
xchg
pop
inc
and
dec
add
fistl
add
or
leave
or
xchg
pop
and
mov
fs
add
inc
gs
lret
aaa
jb
inc
mov
addr16
jns
xchg
aam
jge
jl
mov
cmpsb
stos
hlt
mov
push
aad
mov
aam
and
scas
jmp
mov
mov
mov
add
rclb
icebp
push
negb
sub
cmc
popa
mov
jne
lret
addr16
lods
xor
aam
adc
sbb
in
xchg
jl
movsl
stos
repz
sub
and
dec
add
aaa
arpl
push
add
popa
ret
fldcw
xor
or
notb
cmpsb
in
stos
mov
test
in
hlt
lds
int
mov
popf
mov
nop
dec
adc
cwtl
adc
jnp
push
add
daa
movb
ficompl
mov
adc
jle
lahf
mov
fmul
cmp
lods
pop
push
popf
lcall
or
mov
sbb
dec
dec
bound
sbb
out
xchg
cli
lret
xor
mov
xor
mov
je
sbb
icebp
cmp
je
mov
jne
sbb
inc
add
jo
mov
sbb
or
adc
pop
aas
add
movl
pop
nop
fistpll
sbb
dec
in
leave
sarl
mov
jle
popa
jb
cmp
andb
js
pop
js
or
wrmsr
arpl
xor
jl
loope
les
test
sbb
int
ja
mov
clc
in
dec
adc
shlb
enter
mov
add
pop
addr16
loop
js
outsb
mov
pop
outsb
jo
mov
clc
push
inc
push
jmp
or
xchg
rol
test
add
dec
out
inc
loop
int
pop
arpl
cmpsl
pop
push
add
or
xchg
jmp
shlb
rcrb
push
fldz
movsb
xchg
jno
mov
mov
jle
mov
adc
ds
out
pusha
mov
push
push
or
add
lods
xchg
or
or
sbb
sahf
mov
pop
xor
stos
xchg
push
cwtl
mov
push
test
xchg
push
stos
or
inc
pop
and
dec
pop
mov
nop
test
mov
clc
pop
jmp
fucomi
movsl
movsl
fldenv
adc
test
out
cmp
fsubs
call
xchg
aaa
scas
insb
adc
test
subb
rclb
fwait
lahf
aam
xchg
fs
ds
ss
mul
jno
push
and
mov
rcll
or
pop
cwtl
mov
jbe
aas
add
sub
cmp
das
pop
mov
out
mov
lods
daa
mov
testb
aam
mov
outsb
sti
and
jno
inc
test
mov
jg
inc
ss
cltd
nop
dec
sti
lea
icebp
in
mov
dec
lcall
jnp
fidivrs
xchg
adc
popf
mov
imul
in
iret
jmp
inc
jns
add
bound
in
mov
out
push
arpl
imul
cwtl
xor
add
lret
roll
lock
test
mov
and
enter
pop
hlt
mov
jle
inc
mov
aam
sbb
jns
mov
push
dec
into
pop
add
jb
cmc
mov
adc
cli
std
fldenv
das
out
int3
jns
fwait
mov
imul
pop
lods
out
sti
pop
add
inc
xchg
insb
daa
std
push
inc
imul
push
mov
jne
add
jle
mov
sarb
push
pop
push
inc
mov
lds
add
mov
pop
inc
lahf
jge
mov
jb
mov
mov
das
xor
shrb
std
inc
test
xor
arpl
es
mov
cld
jb
mov
push
out
jbe
xchg
inc
cli
fwait
add
jge
xor
and
int
outsl
xchg
xchg
inc
shrl
bswap
push
dec
mov
pop
xchg
mov
mov
stc
jmp
xchg
xchg
jae
daa
sub
dec
fcoml
pop
fcoml
pop
mov
push
test
adc
push
inc
lea
movsl
mov
dec
pushl
out
jb
imul
imul
push
pop
je
rorb
lcall
mov
xorl
xor
mov
outsl
pop
or
xchg
adc
cmp
nop
rorl
or
dec
push
clc
and
cmp
int3
push
pop
test
xor
fadds
xor
pop
mov
ds
xchg
or
addr16
inc
aaa
out
mov
jle
mov
push
sbb
cmpsb
cltd
mov
jns
mov
in
or
aam
fstl
rcll
mov
std
and
xchg
dec
popf
popf
push
jp
dec
loope
cwtl
hlt
sbb
loope
or
push
int
inc
cli
fcmovb
xchg
xor
repz
pop
and
aad
add
mov
clc
mov
in
lock
insl
fucomi
cmp
cmp
jmp
sub
decl
nop
loop
aam
dec
in
outsb
popa
inc
lret
stos
fadd
push
inc
loopne
add
aam
sub
mov
test
call
jbe
and
mov
popa
cli
in
mov
mov
rclb
int
sarl
jne
andl
add
mov
lahf
jecxz
in
mov
lods
loopne
mov
std
movsb
sbb
and
add
mov
cli
out
dec
in
pop
fmuls
loopne
sub
aad
out
bound
xchg
adc
lret
or
int
dec
mov
sbb
movsb
xchg
dec
push
aas
xchg
arpl
xchg
sti
loopne
into
out
inc
mov
inc
inc
test
mov
loopne
in
mov
jmp
add
mov
stos
and
add
sahf
xor
imul
loop
addr16
or
call
cmp
fmull
in
lret
push
es
xor
jae
fnsave
jne
ret
call
inc
jno
pop
dec
loope
pusha
jg
pushf
add
mov
stos
cli
dec
enter
int3
lcall
mov
pusha
or
movsl
rcrl
shl
das
or
and
adc
dec
dec
rcrb
test
add
std
cltd
insl
imul
es
dec
jl
adc
jns
jnp
add
push
sti
cld
inc
rorl
in
pop
faddl
sbb
sub
scas
and
push
leave
adc
push
stos
lods
inc
arpl
movsb
sbb
jae
push
sar
das
sbb
mov
pop
push
popf
imul
push
jl
and
scas
xor
mov
inc
dec
fidivrs
push
mov
arpl
adc
pop
xor
adc
cmp
inc
test
jno
push
in
add
xor
scas
xor
pop
popa
out
outsb
rcrl
or
mov
rcl
adc
adc
cmp
lcall
inc
les
pop
push
jbe
inc
xchg
xchg
dec
sub
bound
ror
hlt
cs
in
adc
mov
sbb
lcall
cld
dec
cli
rcrb
adc
xchg
xor
pop
jl
pop
sbb
ss
mov
aam
ficompl
and
xchg
jg
cltd
test
sbb
and
xor
push
lods
testb
dec
dec
push
lcall
in
jno
mov
and
data16
sub
in
inc
clc
jbe
lret
test
repnz
mov
test
jns
jne
dec
jmp
add
inc
xor
xor
cmp
jl
rorl
in
or
xor
xchg
je
jge
bound
cmp
popf
test
pop
fimuls
xchg
adc
jne
jno
add
call
xchg
inc
cmp
leave
jl
mov
adc
loope
sub
fwait
xchg
sub
push
stc
aad
mov
pop
nop
push
cmpsb
es
pop
aas
and
jnp
pop
jb
fwait
out
ljmp
xor
push
icebp
and
adc
jno
add
insl
push
push
loopne
jo
jp
xor
shl
push
push
iret
adc
int3
pop
jp
add
lods
fldenv
mov
pop
sbb
sbb
das
out
jno
and
rcrb
pop
sub
inc
adc
inc
mov
or
shlb
xlat
jecxz
push
stos
movsl
push
stos
adc
dec
push
jae
push
jg
inc
lret
push
dec
pop
push
dec
bound
pusha
sar
sbb
inc
lods
jg
pop
clc
xchg
dec
lret
sub
adc
or
popf
nop
adc
hlt
mov
lret
push
mov
daa
cmp
gs
pop
adc
inc
adc
add
popa
xor
das
xor
cwtl
mov
xchg
jp
xchg
in
adc
add
or
subl
daa
and
or
jg
push
and
lods
dec
lock
iret
dec
jmp
enter
push
insb
mov
sbb
mov
js
test
stos
sbb
mov
js
mov
xchg
sbbl
sbb
xchg
int
jb
dec
stc
cmp
in
test
xchg
cmp
pop
dec
test
rcll
inc
mov
ljmp
jb
jg
pop
rcrb
push
or
cs
push
or
nop
outsb
ret
notb
mov
stos
mov
jno
push
mov
jnp
cmp
adc
sar
jbe
sbb
inc
aad
call
nop
and
mov
cmp
push
mov
or
adc
cmpsl
mov
adc
inc
arpl
and
mov
test
push
pop
imul
stc
and
js
mov
loopne
jle
insb
leave
adc
mov
mov
dec
mov
cltd
fiadds
inc
fmull
add
ss
mov
or
lret
popa
shlb
loopnew
xlat
mov
mov
out
mov
nop
push
pop
cld
cltd
jb
sbb
push
cmp
inc
or
cld
inc
pop
fsubl
cmp
aaa
addr16
loope
callw
outsb
sub
sbb
cmp
or
nop
std
add
fsubrl
andb
lea
xor
stos
lahf
das
fld
imul
mov
jg
in
push
insb
adc
inc
inc
push
dec
jg
mov
jecxz
mov
dec
xchg
scas
dec
ja
jns
dec
cmp
and
lcall
push
mov
xor
pop
jmp
cld
and
mov
fimull
inc
adc
mov
mov
test
sbb
aad
pop
ja
jbe
movsb
shll
negl
dec
push
leave
cmp
je
mov
aad
rorl
xchg
jl
ret
cmp
add
sub
xchg
test
out
mov
cwtl
sbb
xorl
dec
inc
mov
lret
push
aas
pop
cmp
inc
jbe
push
sub
lcall
mov
mov
pushf
gs
mov
push
jb
scas
pop
pop
in
inc
push
inc
cmp
je
ret
mov
jle
push
cmp
lea
push
out
out
add
pop
cmp
or
fnsave
fcomp
mov
inc
les
jecxz
cli
xchg
xchg
lods
push
clc
cmp
cmpsl
mov
out
jns
add
mov
add
out
icebp
ja
and
lds
aaa
orl
jp
lods
stos
fisubrl
sbb
dec
xor
imul
in
push
push
faddl
push
sub
push
xchg
pop
xor
xchg
fidivl
int
cmp
dec
stc
enter
jp
jnp
xlat
cmp
mov
insb
inc
stos
lret
ret
push
add
jmp
stos
or
sub
cmp
mov
or
sarb
mov
and
sub
push
adc
cmpsl
out
mov
subb
add
pop
outsl
cltd
cmp
xchg
nopl
daa
test
xor
add
outsb
mov
daa
test
lds
and
stc
outsl
jecxz
mov
dec
es
outsb
push
sahf
pop
das
sbb
pop
jbe
sbb
xor
adc
xchg
inc
pop
xchg
mov
test
fnsave
xchg
mov
mov
std
mov
xor
lea
je
xor
les
loope
in
jle
in
cmp
lods
shll
xchg
jle
cmpsb
mov
lock
shll
push
add
pushl
mov
xor
or
push
sahf
cmp
js
sub
int
int3
fnstsw
fdivl
add
xchg
stc
adc
cwtl
fisttps
and
sub
test
pushl
mov
mov
mov
inc
pushf
xchg
sub
inc
xchg
mov
stos
sub
sahf
call
ljmp
mov
jbe,pt
and
lret
test
insl
or
sub
inc
xor
aaa
lret
add
test
shlb
adc
or
ds
sub
sti
insb
inc
inc
ja
sbb
jns
sub
mov
sub
test
loopne
mov
mov
inc
int
lret
jp
test
mov
jno
adc
sbb
or
es
fcom
mov
cmpsb
shll
jno
in
mov
in
xor
loope
rclb
jmp
or
or
xchg
cmp
sarl
jge
lret
mov
out
and
xchg
gs
xchg
std
cmp
jae
cli
mov
lods
loope
movsb
pop
mov
hlt
jbe
xchg
push
or
mov
addr16
push
aad
xchg
jb
jge
mov
in
lret
aas
jne
idivb
cmp
xchg
and
repz
cmp
xor
jp
jecxz
das
pusha
loopne
or
mov
mov
sbb
fidivl
push
cwtl
inc
adc
sbb
cmpl
dec
pop
cli
scas
xchg
mov
push
dec
pop
in
shlb
cmc
jno
xchg
adc
data16
xchg
jnp
addr16
outsl
dec
mov
imul
jb
arpl
gs
cmp
test
push
mov
sub
ds
in
adc
imulb
lcall
push
nop
and
push
cmc
dec
fstpl
test
and
adc
imul
popa
dec
cmp
inc
inc
mov
pop
sbbl
mov
add
scas
rol
dec
xlat
cltd
jmp
in
cmp
inc
loopne
fldl
hlt
sti
mov
movsl
xchg
jae
cld
shll
mov
out
shlb
push
nop
int
mov
and
sbbb
adc
mov
movl
mov
dec
leave
mov
or
unpckhps
cwtl
xchg
lss
int
mov
inc
lret
insl
lds
in
cmp
pop
roll
sub
mov
xchg
sub
adc
aad
lcall
repnz
into
fs
xchg
fs
mov
mov
roll
popf
xor
push
jge
mov
xchg
in
daa
je
mov
cmp
push
mov
jg
push
je
gs
data16
mov
or
sub
cmp
fs
cltd
jl
jge
mov
push
or
fcomps
rcll
jne
inc
insb
mov
outsl
clc
cmpsl
addb
int3
pop
sub
mov
cwtl
rclb
jg
fstps
dec
int
lods
shrb
sub
jmp
lock
jo
das
push
xchg
jecxz
adc
out
enter
jns
popa
nop
negb
mov
dec
shrl
pop
das
xor
fistpl
stos
aas
pop
cmpxchg
sub
dec
cmc
inc
nop
addr16
insb
mov
mov
movsb
cld
or
dec
mov
stc
xchg
mov
inc
dec
popa
idivb
push
jp
ss
nop
xor
mov
out
push
rcrb
pop
addr16
pop
outsl
fwait
xchg
int3
mov
and
rcrb
push
aad
pop
mov
jge
mov
sub
sarl
xor
jg
push
ljmp
negl
sub
mov
mov
sbb
aas
test
int3
and
das
cwtl
and
clc
in
mov
jecxz
mov
insb
and
mov
and
leave
and
adc
cmp
mov
loope
sbb
add
movsl
insl
mov
sbb
inc
pop
sub
shld
mov
mov
lods
mov
sti
xchg
cmp
mov
mov
sti
imul
jo
cmp
fistl
sahf
adc
outsb
loopne
pop
cmp
es
andb
xchg
arpl
adc
xor
jo
lock
jno
push
jo
repnz
scas
mov
push
cmpsl
rorl
inc
das
sub
test
mov
pop
shll
jp
repz
lea
call
pop
cmc
call
adc
rclb
sub
sbb
add
xlat
scas
addr16
pop
loope
push
mov
lods
loopne
loopne
fbld
jg
xchg
mov
aas
mov
andl
rcr
ds
mov
je
sub
ret
and
push
dec
jne
mov
and
popa
inc
repnz
xlat
or
push
insl
push
or
adcb
cli
idiv
sub
idivl
and
mov
sbb
push
rclb
out
and
ret
push
fs
mov
ljmp
xchg
push
jmp
fisubrl
dec
jl
adc
mov
push
xor
ja
cli
push
out
cmp
pop
jge
sahf
push
sahf
sub
out
or
mov
cwtd
sbbl
or
mov
int
jp
les
lahf
es
mov
pop
mov
add
fwait
cmp
in
jle
jno
aas
push
mov
andl
sbb
ja
jmp
nop
add
pop
and
push
fidivl
sbb
pop
orb
daa
cltd
pop
out
dec
mov
leave
std
mov
jae
push
mov
pop
fadds
dec
push
pop
pop
xchg
repnz
or
inc
test
clc
xlat
notb
les
mov
pop
out
loop
push
jbe
xchg
push
js
mov
push
test
aam
fisttpll
in
xor
insb
pminub
lods
cwtl
ficompl
mov
pushf
popa
movsl
addl
mov
pop
xor
loope
scas
rcrb
cltd
mov
fldcw
mov
xchg
adc
or
dec
push
push
mov
cmpsl
sub
nop
inc
sub
js
sbb
pop
pusha
lds
jne
movsb
mov
pop
xchg
xor
in
pop
and
adc
push
lret
adc
test
sbb
lret
fsubrp
and
ror
xor
cmp
lahf
testb
sub
ds
sbb
jbe
repnz
ljmp
mov
mov
repz
cmpsb
sti
mov
sub
daa
pop
movsl
jle
push
fimuls
cmp
adc
aam
insl
push
push
push
aas
mov
out
int
mov
cmp
cmc
push
outsl
insl
push
je
sbb
out
cmp
mov
out
hlt
jne
push
test
std
jp
sub
sub
je
arpl
inc
mov
lcall
outsl
xchg
mov
push
cltd
stos
mov
aam
inc
jl
mov
adc
subb
cmovle
add
lods
or
imul
negb
lret
add
or
fisubrl
push
add
and
pop
jo
jne
push
test
xchg
outsl
arpl
aad
push
stc
jmp
shlb
xor
mov
mov
dec
mov
inc
pop
xchg
add
fiaddl
mov
inc
lcall
or
inc
sbbl
or
adc
xchg
inc
sbb
mov
call
jae
add
sub
mov
cltd
dec
cmp
inc
xchg
mov
lock
cmc
mov
add
shrl
ret
adc
cmp
cwtl
test
mov
xchg
test
in
or
xchg
xor
jl
and
mov
mov
and
movsl
fchs
lea
lock
dec
dec
dec
jmp
cmp
push
mov
lods
or
movsb
hlt
pop
adc
test
mov
xor
shr
int3
dec
push
movl
cwtl
adc
mov
ja
outsl
and
mov
xchg
and
incb
pop
dec
mov
lock
mov
fcos
pop
sahf
pop
test
and
into
rorl
cmpb
sub
add
lea
jp
cmp
cmpl
sahf
adc
insl
notb
jl
xchg
sub
inc
pop
pop
add
das
int
idivb
or
add
clc
fmull
add
bound
cs
inc
push
and
adc
add
push
je
or
push
pop
jbe,pt
mov
mov
hlt
pusha
mov
jae
fimull
or
sub
jecxz
std
decb
jb
sti
shrl
sub
in
ja
aas
dec
cmpsb
xor
insl
pop
mov
pop
js
mov
push
mov
lds
xor
xchg
mov
stos
mov
mov
shl
push
mov
fnsave
and
jno
inc
lock
push
mov
add
icebp
shll
lods
rolb
inc
adc
mov
push
mov
adc
sarb
popl
xor
test
or
mov
test
push
ror
ja
aad
mov
push
cltd
mov
push
sub
out
aas
push
mov
inc
mov
jmp
aam
mov
push
loop
js
mov
xchg
insl
popa
pop
gs
fwait
and
mov
out
orb
mov
cmpsb
scas
and
jbe
cmp
stos
push
xor
sbb
adc
adc
mov
jb
add
and
andl
dec
test
repnz
gs
lret
sbb
mov
mov
inc
cmpsb
jecxz
jnp
jp
rcl
and
popf
ds
add
sbb
outsb
ficompl
test
cmpsb
dec
cmp
pop
pushf
push
lock
sbb
push
test
jnp
nop
cwtl
into
xlat
dec
adcl
aaa
test
push
test
roll
out
sbb
cmpsl
ja
add
rcll
mov
lods
jnp
jb
push
shrb
pop
xor
stc
adc
xor
out
movsl
fsubrs
sub
out
mov
jecxz
adc
pop
dec
pushf
pop
pop
test
cli
sbb
enter
ss
xor
jl
mov
cmp
pop
sub
sub
movsb
ret
outsl
push
es
pop
pop
ss
fcmovu
and
push
mov
xchg
pusha
push
sbb
sahf
xlat
pop
sbb
dec
xchg
loope
aam
dec
outsl
dec
mov
into
dec
sbb
adc
xchg
and
jne
outsb
inc
fildll
fdivl
lds
xor
mov
sbb
arpl
shlb
push
inc
scas
dec
mov
out
and
cmpsl
jns
fisubrs
in
mov
xor
push
add
jl
mov
lcall
mov
or
adc
adc
std
cmp
inc
lods
out
inc
out
cmpsl
sub
pushf
and
sarb
cmpl
test
hlt
dec
mov
jp
push
sarl
sub
popf
dec
and
mov
adc
adc
sub
aad
dec
push
icebp
sahf
iret
pusha
lock
pop
btr
mov
loopne
jne
add
push
jge
mov
ret
dec
pop
je
mov
push
sti
adc
call
insb
push
leave
jae
fs
xchg
icebp
ftst
add
xlat
cmpsb
jl
mov
sub
xchg
mov
es
mov
add
or
incl
xorl
bound
lret
js
js
arpl
es
bound
pop
in
call
add
icebp
jl
pusha
push
mov
in
cmp
inc
xor
push
mov
adc
xchg
pop
clc
adc
mov
push
cmp
or
inc
push
inc
or
inc
test
xor
shr
dec
sub
xchg
lock
iret
not
jno
push
jns
mov
pop
test
fisubrl
fstp
xor
add
adc
xor
mov
int3
imul
xlat
and
adc
push
or
jno
mov
xchg
ljmp
mov
lret
and
pop
stos
mov
jge
out
xchg
mov
mov
loopne
js
hlt
enter
test
fcomps
jl
loop
push
push
inc
mov
mov
mov
and
sub
mov
out
imul
cmp
xor
mov
xchg
cmc
xchg
lret
pop
inc
mov
or
inc
aaa
sbb
out
loopne,pt
add
adc
jno
loop
scas
nop
popa
aas
fnstcw
inc
test
or
lea
add
push
jmp
je
mov
jbe
mov
or
inc
push
ja
mov
xor
xor
shrb
shll
xorl
dec
lret
shlb
cli
add
inc
or
insb
cmc
aam
jns
mov
pop
lods
inc
cli
dec
lods
pop
xchg
pop
pop
cmp
dec
rclb
cmp
xchg
inc
xchg
dec
sub
adc
lods
leave
pop
push
scas
or
or
out
or
vlddqu
mov
fstpl
or
lcall
scas
mov
or
jl
adc
cmp
jp
adc
sub
xor
rolb
dec
mov
sub
mov
mov
pop
add
cmpsb
cld
adc
mov
sub
adc
pusha
and
jb
xchg
mov
push
mov
rcll
cmp
mul
and
jecxz
jge
out
mov
je
xchg
pop
adc
xchg
insb
sbb
into
popf
mov
out
push
mov
dec
dec
adc
dec
cwtl
jbe
push
mov
jmp
push
fidivs
mov
jmp
sbb
inc
ss
cmp
repz
js
cmp
stc
adc
push
inc
lret
xchg
jb
and
ja
je
lahf
aad
mov
mov
hlt
mov
cmp
pop
pop
and
stos
mov
adc
mulw
enter
push
shlb
add
int
cmpsb
les
ss
push
imul
jne
xlat
add
pop
sarl
adc
out
cli
xor
mov
add
repz
adc
mov
fildl
jecxz
xor
pop
loopne
jecxz
and
sub
pop
adc
dec
mov
xchg
dec
add
aaa
or
mov
and
adc
hlt
or
sbb
mov
test
sbb
clc
dec
dec
idivb
inc
repnz
inc
or
push
or
popa
push
ljmp
lret
xchg
mov
lcall
lcall
fdivrs
sahf
addb
pop
mov
and
leave
inc
xor
xor
or
push
mov
fidivrs
ret
icebp
dec
ficoml
cmp
mov
pop
cmp
sbb
pushf
dec
jmp
das
rolb
mov
repz
and
lcall
push
jge
mov
push
mov
fcoms
jle
mov
push
cld
insl
ja
fists
jle
sbbl
xchg
dec
ljmp
mov
sub
ss
xchg
cmp
adc
ja
or
inc
pop
lahf
xor
sub
push
shrl
sbb
xor
add
sahf
test
pushf
lret
add
sbb
fwait
movsl
movsb
daa
fadd
cmpsl
pop
jecxz
push
movsl
pop
push
movss
gs
push
lahf
sub
rorl
movsb
xchg
pop
nop
in
stc
sbb
pusha
call
ja
cmp
out
orl
pusha
push
mov
in
jbe
mul
add
mov
adc
jne
inc
popa
cli
inc
fdiv
pop
or
cmp
addr16
cmp
or
sub
mov
clc
jo
mov
hlt
xchg
mov
scas
dec
sub
lret
loop
sbb
int
jb
loopne
aam
mov
test
in
dec
cmc
mov
cwtl
lahf
xor
in
and
pop
cmp
shlb
push
roll
xlat
popf
pusha
fisttpll
add
push
mov
cmc
jno
cmp
sub
sub
mov
push
aaa
add
data16
mov
xchg
jnp
add
push
mov
add
pusha
stos
push
nop
push
add
push
mov
or
paddsw
sbb
dec
shr
adc
mov
enter
adc
jge
and
fsts
and
js
pop
jmp
cli
push
adc
push
mov
dec
mov
pushf
mov
stc
es
js
inc
js
addl
inc
out
mov
stc
es
test
test
mov
xchg
repnz
pop
push
mov
bound
sub
xor
xchg
cmpb
xorl
lret
shrb
mov
icebp
lea
sbb
cmp
movsb
push
sbb
push
repnz
mov
enter
cmp
orl
lods
into
test
addl
push
pop
xchg
xchg
ss
shrb
push
insl
dec
insl
pop
jno
sbb
hlt
dec
lods
aad
sbb
push
clc
dec
lock
cmp
mov
add
sbb
push
and
pop
xchg
int
shr
xor
idiv
fnstcw
bnd
enter
push
mov
cwtl
test
fsubl
orl
cmp
pop
outsl
adc
das
dec
outsb
dec
mov
cmpb
mov
or
adc
inc
lds
out
call
adc
mov
int3
push
jge
out
lret
inc
cmp
pop
inc
bound
sub
mov
sahf
bound
jg
fcmovbe
lods
outsw
sbb
rcl
pusha
or
cs
lcall
std
push
sbbb
jp
cs
testl
jno
pushf
stc
push
xor
enter
or
xchg
inc
mov
sbb
dec
or
sbb
pop
mov
imul
mov
dec
ljmp
jle
sbb
ret
fidivrs
pop
adc
and
dec
jb
addb
fcompl
xor
mov
xlat
lods
aaa
pushf
mov
adc
ljmp
lods
idivb
les
mov
bound
cltd
std
popa
je
push
xor
mov
mov
mov
and
inc
add
xor
sub
pop
mov
lret
pop
or
es
cmp
fwait
xor
dec
sarl
lahf
nop
cmp
mov
push
jmp
push
dec
es
ficoms
cmpsb
pop
fldl
mov
fbstp
hlt
pop
add
inc
shll
icebp
stc
xchg
mov
mov
stos
ja
inc
lahf
or
inc
pop
rcll
mov
adc
pop
jb
pop
test
push
and
lods
mov
pop
sbb
sub
int3
push
in
mov
push
loop
or
and
out
cli
clc
inc
incl
pushl
jne
jg
sbb
fcmovbe
xchg
or
adc
ds
insl
sbb
lahf
inc
aas
in
test
popa
xchg
sbb
add
dec
popa
stos
mov
lods
inc
int3
cli
pop
ss
mov
mov
add
pop
js
rclb
jnp
adc
dec
in
cmpsl
and
imul
pushf
ss
ret
sarb
out
out
pop
inc
cmpsl
push
or
push
lahf
out
leave
dec
pop
mov
out
shrl
mov
pop
mov
fdiv
xor
mov
xchg
sahf
pop
sbb
cmp
push
inc
subb
mov
pop
enter
shl
mov
fs
ljmp
xchg
dec
jbe
mov
inc
insb
mov
sbbb
jmp
inc
jl
sub
mov
jae
mov
mov
ja
push
dec
dec
imul
jle
jle
shll
xor
out
stc
inc
pop
test
add
mov
sub
scas
jno
xchg
ficompl
nop
loop
das
xchg
xor
cmpsl
mov
stos
dec
lcall
je
add
enter
mov
popa
xor
ds
hlt
stos
inc
xchg
add
es
mov
adc
xchg
scas
mov
inc
sub
out
daa
out
lret
mov
int3
or
xchg
xchg
and
adc
cmpsl
out
call
loop
mov
add
call
and
loope
sbb
loope
mov
mov
lea
popf
or
arpl
xor
aam
mov
outsl
scas
aaa
xor
and
mov
orb
pop
mov
jbe
loopne
aaa
and
pop
fst
stos
xor
pop
test
xorl
jo
jae
lds
adc
lock
mov
and
sbb
test
out
and
ret
pushf
adc
inc
stos
add
jb
jp
icebp
push
pop
sbb
pop
sub
cmp
xor
cltd
pushf
mov
shrl
inc
xor
in
popa
sti
cwtl
repz
dec
jne
push
sbb
icebp
sub
icebp
fisttpl
fstps
sbb
dec
jns
cmp
push
adc
bound
mov
insb
pop
ss
orb
xchg
mov
jae
mov
movsl
push
std
jae
mov
ret
repnz
daa
mov
daa
pop
mov
add
or
cmp
adc
pop
movsb
mov
enter
add
xor
inc
lods
jg
and
mov
push
sbb
pusha
call
and
inc
ret
add
cwtl
mov
mov
arpl
jge
or
add
les
test
dec
pop
pop
or
addr16
lods
scas
jo
and
mov
iret
push
ja
adc
mov
fiadds
loopne
roll
ficoml
sub
out
outsb
insb
sub
push
inc
inc
mov
ret
loopne
cmpl
mov
push
dec
jp
mov
pop
mov
dec
repnz
and
push
outsl
cmpl
sbb
int
mov
shr
lds
icebp
inc
das
xchg
test
sbb
aad
pop
call
or
movsl
mov
js
test
sbb
mov
and
je
fmulp
aas
pop
cmpsb
out
outsl
call
loopne
inc
add
jecxz
push
imul
sub
aam
pop
aas
cltd
sub
mov
mov
les
mov
adc
adc
fcmovnb
orl
fsubl
icebp
in
outsl
jae
sbb
push
xor
cwtl
jecxz
sahf
sub
rclb
ret
mov
mov
push
dec
dec
cmp
rcl
add
dec
dec
mov
cmpsb
push
ret
cs
paddsw
sub
inc
add
jmp
int3
cwtl
xbegin
jae
outsb
aas
clc
mov
inc
sarl
push
inc
mov
xlat
sbb
or
ret
shll
test
mov
stos
pop
jnp
fisubl
movsb
push
push
xor
scas
sbb
andb
lcall
xor
in
lahf
addb
testl
lret
fsubp
xchg
int3
testl
mov
imul
cmp
fldl
cmp
jno
mov
jnp
adc
sub
push
jne
std
cmpl
sub
mov
in
xor
das
pop
imul
pop
pop
out
call
sub
push
jmp
cmp
je
ror
cli
stos
pop
negb
pushf
insb
aas
mov
loop
sbb
inc
dec
sbb
jo
sub
sbb
call
leave
cmpsb
inc
push
xchg
lds
jno
fistpll
int3
ror
sahf
sub
jmpw
push
test
repz
push
pop
inc
xor
or
cmp
imul
out
inc
fs
xchg
sub
out
movb
clc
add
fcmovne
cmp
cltd
ds
int3
popa
xchg
push
dec
sbb
inc
jns
or
movsb
fdivl
imul
push
mulb
lret
testl
push
cld
leave
cwtl
cli
xchg
nop
inc
aaa
loop
test
fstps
xchg
xchg
repnz
rcl
lahf
test
mov
fdivrp
jg
imul
sub
sti
pop
insl
in
outsb
loope
repnz
cmp
inc
and
out
mov
cmp
incb
fidivs
dec
xor
sbbb
pop
incl
ret
aaa
cmp
sbb
stc
ret
xchg
xchg
adc
pop
cmpsl
add
mov
inc
xor
dec
fisubrs
jnp
add
lds
xor
lods
sub
adc
jg
cwtl
insl
cmp
push
mov
ds
inc
fistl
mov
fs
mov
add
xchg
mov
xchg
or
fs
sbb
cmpsl
lret
incl
mov
xor
pop
adc
cmpsl
movsl
pop
xor
mov
sub
jbe
pop
and
and
sbb
dec
sti
shlb
aas
sahf
or
cmc
movsb
adc
dec
out
fdivrs
cmc
mov
lahf
out
sub
sub
imul
cmp
outsb
push
lahf
addr16
inc
xchg
sbb
adc
add
ljmp
insl
pop
lods
adc
pop
sub
fsqrt
sarl
outsb
imul
cwtl
fidivrs
mov
fdivr
fdivl
jl
out
push
or
fnstcw
mov
push
push
xchg
sahf
add
pop
push
push
andb
sbb
pushf
iret
insb
dec
jl
xor
mov
xchg
jbe
jnp
loope
cmpsb
and
push
and
mov
push
in
subl
mov
ret
mov
xor
mov
add
and
hlt
xor
addr16
sub
xlat
sub
mov
iret
and
call
out
dec
xchg
fldt
pushf
push
pop
sub
mov
sbb
pop
sub
push
push
pushaw
dec
mov
mov
or
lret
movsl
adc
mov
scas
ljmp
enter
shlb
dec
gs
mov
mov
inc
icebp
jmp
xor
int
and
push
xor
dec
in
push
testl
out
fbld
mov
pop
xchg
daa
cmp
inc
mov
imul
xchg
pop
and
idivl
dec
les
push
mov
divl
loopne
jnp
fs
add
addr16
pop
jle
pop
mov
daa
testb
jge
and
adc
in
mov
hlt
stos
or
cmpb
fldl
jne
mov
pop
cwtl
jbe
imul
mov
inc
xor
add
clc
fs
add
ljmp
in
mov
enter
pop
cmpsb
xchg
ss
jo
outsb
or
sbb
mov
imul
push
jle
jmp
jo
xchg
fdivrs
aaa
sbbl
lods
lcall
push
mov
int
mov
in
popf
mov
or
cmp
shrl
nop
sub
mov
das
call
js
rcll
mov
push
xor
xor
inc
xchg
aaa
and
shll
lahf
push
mov
and
loop
pop
and
cmpsl
mov
sbb
ret
repz
shll
insb
je
push
push
and
repnz
inc
pop
test
push
dec
pop
mov
fimull
push
push
xor
jge
cli
or
inc
dec
cmp
mov
jnp
jge
or
mov
jp
mov
fs
ficoms
rclb
xor
mov
dec
jecxz
sti
loope
aas
dec
pop
sbb
jnp
or
xchg
in
cld
xor
popa
ret
pop
sar
push
mov
sahf
push
mov
pusha
dec
sarl
loopne
add
loopne
cmpsl
rorb
xchg
push
jne
inc
test
pushf
mov
ds
mov
jmp
jbe
cmc
out
or
enter
sub
stc
sbb
push
rcl
in
mov
and
lret
inc
in
mov
icebp
into
inc
aas
sub
or
stos
push
push
fcmove
mov
dec
inc
cld
or
leave
sbb
test
repz
jns
add
lret
add
push
lds
xchg
das
mov
or
subb
cmp
inc
push
cmpsb
xlat
xchg
mov
mov
gs
bound
jnp
cmpsb
lea
jo
aaa
jmp
dec
cmp
jae
fstpl
idivb
or
movsb
pushf
xchg
adc
pop
fidivl
stos
cwtl
push
mov
xor
jge
test
push
cmpsl
ljmp
mov
adc
cmp
pop
push
cmp
lea
or
sbb
fidivl
mov
and
jno
adc
ret
les
cmp
sbb
push
mulb
arpl
test
push
popa
lea
hlt
adc
pop
and
mov
xchg
fs
or
test
pcmpgtw
ret
pop
jae
add
scas
jg
and
roll
pop
rclb
jg
mov
or
ds
shlb
mov
aaa
popf
out
sbb
fwait
or
out
fmull
push
mov
adc
cmp
movsl
idivl
cmp
mov
or
test
and
xchg
adc
lret
gs
insb
cmp
dec
fs
subl
inc
push
in
ljmp
sbb
ds
popf
and
lea
cmp
add
jne
outsb
mov
xchg
inc
xchg
mov
out
lods
adc
cmp
dec
xchg
fcomps
mov
and
xchg
sub
xchg
test
sti
hlt
insl
sbb
push
cmp
fmuls
rcll
mov
sbb
push
dec
shlb
lds
sub
fmulp
into
dec
hlt
popf
inc
fsubrl
push
push
push
xchg
push
mov
jns
lods
rsqrtps
jge
test
rolb
in
mov
pop
adc
xchg
cmp
shlb
sbb
lock
cmp
dec
mov
frstor
fidivrl
leave
cwtl
jbe
inc
inc
stc
js
or
js
xlat
out
mov
dec
pop
mov
push
push
pop
fwait
xchg
stc
xchg
jmp
adc
in
int3
mov
jle
imul
cwtl
push
cmp
pop
arpl
sbb
movsl
int3
inc
inc
cmp
xchg
cmp
jmp
pop
in
mov
mov
notb
aam
add
jp
scas
mov
leave
xor
mov
pusha
repz
addr16
js
sbb
dec
iret
jp
cmc
or
flds
ss
loop
pop
cmpsb
test
xchg
mov
dec
imul
scas
repz
push
fildll
jae
mov
push
dec
xchg
aaa
stos
lahf
dec
hlt
repz
inc
es
push
sbb
loope
jg
cmp
and
sbb
int3
push
out
mov
hlt
sub
push
out
lock
sbb
stos
push
mov
repnz
sbb
sub
stc
mov
mov
mov
leave
and
mov
out
jne
lcall
jae
sub
lret
dec
and
stc
fstl
repz
mov
pop
pop
xchg
ss
js
dec
inc
jb
sti
add
fisttpll
outsl
inc
push
mov
jge
jmp
addr16
xchg
into
mov
in
dec
xlat
mov
mov
push
pop
pushf
adc
testb
jae
repnz
popa
inc
out
jb
xchg
mov
push
pop
cmp
xchg
lret
rcrl
rolb
mov
in
push
aad
cmp
xchg
in
aas
jns
lods
daa
sti
push
std
test
and
lret
and
sub
lret
pop
mov
mov
add
cltd
sbb
and
add
insb
fldt
and
cmp
pop
ret
inc
outsl
in
in
test
mov
mov
fcomi
movsb
rol
sub
popw
inc
hlt
pusha
sti
mov
shrb
call
aaa
enter
lcall
shlb
testb
je
pop
dec
mov
pop
repnz
loop
nop
pop
pop
sub
mov
jp
cs
mov
std
mov
nop
xchg
mov
iret
repz
idivl
xchg
mov
inc
push
out
cmpsb
pusha
mov
mov
and
es
xchg
cld
mov
int
icebp
in
mov
xlat
push
into
add
pop
pop
cltd
dec
fdivrl
cmp
stos
lret
xchg
loope
aad
out
push
popa
ficoms
sbb
add
test
mov
sub
aam
test
add
popf
loope
dec
lahf
or
pushf
pop
pop
sub
loope
sub
rol
jae
mov
adc
jg
adc
mov
movsb
lea
sbbl
testb
and
cmpsl
mov
out
mov
clc
arpl
jno
sub
or
lret
add
cmp
testb
dec
push
call
add
aaa
cli
dec
and
fiadds
push
out
jne
adc
sub
cmpsl
daa
and
dec
leave
add
xor
push
aaa
in
out
adc
lret
pop
or
cwtl
mov
sbb
daa
aad
es
insb
xor
add
into
adc
mov
push
popf
sub
mov
sub
cwtl
fsubrs
cmc
lret
or
xor
out
adc
or
popf
roll
pop
xchg
sbb
insb
lret
scas
out
and
jae
popa
push
or
sbb
paddq
addr16
dec
sub
leave
repnz
jp
inc
setle
sahf
fisttpl
sahf
mov
roll
addl
and
mov
into
sti
xor
lret
jo
adc
addr16
cmpb
lcall
adc
rclb
inc
sub
fists
xor
fsubs
dec
clc
outsb
jg
push
and
jbe
adc
lret
into
mov
out
jg
xchg
xor
movsb
jecxz
cld
movsl
lret
imul
xchg
mov
fwait
rolb
popa
dec
xchg
push
fucomp
pop
push
das
loope
sbb
mov
cld
inc
out
movsb
xlat
push
adc
hlt
dec
mov
pop
imul
and
mov
push
pushf
adc
and
rclb
adc
xchg
rcrl
imul
imul
xor
cmp
out
imul
nop
int3
jae
adc
mov
sbb
xchg
pop
lock
insl
sub
clc
in
cmc
push
movsb
dec
cs
adc
fs
jbe
cmpsl
dec
fsub
ds
sbb
inc
dec
mov
mov
movsl
push
ret
repnz
mov
loop
outsl
jnp
scas
mov
push
outsl
sbb
mov
xor
mov
stos
cmpl
pop
cmp
popf
inc
inc
cvtps2pd
mov
inc
xor
pop
nop
arpl
mov
inc
cs
push
sub
cmp
in
jns
xchg
cmp
jno
enter
mov
sub
cmp
stos
loop
dec
insl
bound
out
into
sub
cli
aas
or
cmp
cmp
call
jb
lea
jp
inc
nop
dec
out
jb
push
in
push
movsl
hlt
clc
adc
cmp
mov
pop
call
sub
mov
mov
xor
jp
ret
sub
scas
push
ret
inc
les
sarl
or
ficompl
adc
inc
dec
push
xchg
or
mov
push
xchg
xchg
outsb
inc
aaa
push
sub
dec
inc
adc
mov
or
pop
gs
gs
aaa
push
jnp
adc
mov
push
pop
cmp
sub
and
xchg
sbb
add
call
insl
lea
mov
xorl
mov
imul
mov
into
nop
outsl
int3
sbb
pop
setg
xchg
and
jmp
pop
es
lea
adc
jns
insb
insl
iret
rclb
pop
lods
add
popf
add
fwait
fwait
add
out
lea
pusha
xor
pop
outsl
stos
sahf
xor
fldenv
cmp
dec
mov
mov
push
lock
xlat
lahf
ficoms
fistpll
rorb
cmpsb
dec
or
cwtl
jmp
inc
scas
sub
pop
jnp
mov
cld
and
inc
mov
cmp
mov
jne
in
jmp
stos
das
outsl
rcrl
dec
xchg
cli
aam
in
sbb
pop
or
repz
insb
mov
int
inc
test
mov
sti
push
call
aaa
mov
test
notl
dec
push
out
aad
ljmp
dec
cltd
cmpb
enter
sbb
cmc
icebp
add
fnstsw
lods
fmull
jbe
in
push
and
call
jo
outsb
mov
push
or
inc
rcr
mov
xor
les
pop
mov
mov
cmp
aas
jnp
cmp
xor
push
cmovb
mov
xor
mov
imul
movsl
mov
call
incb
subb
mov
clc
pop
adc
push
out
xor
xchg
add
cld
les
lcall
push
std
mov
out
fs
pop
mov
and
jnp
push
ja
shlb
push
shr
dec
popa
mov
lea
fldcw
test
jp
enter
inc
dec
cmp
into
sub
pop
pop
lds
div
fbld
repnz
int3
or
add
sbb
into
push
repz
xor
xchg
xchg
jno
fnsave
push
pop
xchg
xchg
inc
mov
dec
in
cmp
or
aas
pop
test
lahf
sahf
in
scas
sub
push
cmp
cmp
in
xchg
dec
into
ss
lret
jg
aas
in
iret
cmp
push
xchg
mov
sbb
push
pop
mov
or
push
push
imul
inc
daa
jmp
push
pusha
pop
pop
hlt
dec
notb
push
movsb
orl
cs
sarb
aad
insl
pushf
pop
ss
ss
inc
pop
mov
dec
sbb
sub
xor
loopne
test
sbb
arpl
push
mov
nop
jns
add
sub
test
push
pop
pop
or
faddl
hlt
scas
rorl
test
cmc
mov
cmc
inc
jmp
popa
fwait
test
cmp
test
ret
and
es
push
nop
mov
cmp
ja
ljmp
fwait
xchg
pop
hlt
test
jns
xor
jae
mov
aad
data16
dec
fcom
adc
pop
push
and
lcall
in
mov
sbb
adc
xchg
xlat
mov
xchg
clc
ret
jecxz
je
cmp
push
sub
push
movsl
outsl
inc
jbe
aad
stos
movsb
mov
data16
or
jae
insl
xor
out
jns
arpl
adc
xchg
outsl
cmp
jbe
outsl
and
call
bound
or
dec
bound
pop
push
lock
out
aas
sbb
jbe
jae
sbb
shlb
and
xchg
rcrb
loop
int3
push
mov
scas
rolb
mov
mov
jne
ljmp
scas
cmp
cltd
shrl
addr16
push
fmul
lcall
inc
jmp
sbb
and
repnz
mov
jle
jge
xchg
outsl
orb
fisubrs
stos
ss
lret
jo
jbe
std
out
dec
icebp
add
repz
adc
sbb
push
jl
jb
pop
inc
cmpl
adc
in
dec
mov
xchg
xorl
xchg
push
scas
jle
xor
scas
fadd
mov
or
dec
popf
outsb
cli
movsb
call
dec
es
sti
mov
ret
pop
and
fstps
dec
jle
push
jl
fs
int3
jo
pop
pop
cwtl
sbb
or
add
mov
mov
xchg
mov
xor
push
xor
lock
add
inc
subb
mov
push
pop
xor
bound
or
orl
sbb
dec
paddusb
outsb
add
js
xor
outsb
mov
dec
mov
inc
iret
imul
add
icebp
xchg
mov
into
addl
xchg
adc
aad
rcrl
or
xor
mov
cmc
sbb
cltd
sbb
mov
cli
dec
std
sbb
div
pop
hlt
fcmovnu
sarl
jge
sub
or
popf
or
xchg
cmp
sub
test
and
cmp
mov
pop
ljmp
imul
or
jns
cmp
std
push
repz
sub
mov
xchg
xchg
call
out
ret
ds
ljmp
inc
xchg
pop
xchg
cli
dec
jge
int3
dec
inc
bnd
push
loope
stos
inc
lea
cmp
inc
pop
cmp
xor
cmp
test
xor
fisttpl
in
add
dec
mov
dec
lret
xchg
rcrb
mov
sti
movsb
jmp
push
push
into
pop
jge
or
push
sbb
add
out
and
and
pop
push
mov
inc
mov
jns
addr16
ljmp
sub
sbb
test
pop
bound
or
mov
pop
sbb
sub
mov
lock
mov
inc
xchg
ret
cmp
ja
xor
ja
and
sub
test
mov
pop
pop
nop
add
pusha
aam
inc
rol
adc
es
cmc
inc
test
adc
fadd
fmull
adc
pushf
ror
test
pop
in
lods
lret
popf
push
push
fiadds
fisubs
rcll
or
movsl
or
lret
mov
sub
pop
lock
mov
jl
mov
add
mov
or
xchg
jg
fwait
dec
inc
shrl
mov
jnp
xchg
inc
shll
cmpsl
outsb
clc
test
jp
shll
lahf
andl
sub
enter
mov
xor
sbb
ja
ds
mov
inc
int
aam
pop
jmp
int3
jns
adc
pop
arpl
ljmp
sub
cmp
scas
fbstp
push
lock
push
xchg
sbb
add
xchg
adc
iret
fwait
or
and
adc
mov
sub
adc
jecxz
je
je
or
dec
mov
adc
outsb
mov
pop
jnp
sbb
pop
test
lea
pop
ja
push
rep
sub
in
cli
mov
and
add
pop
pop
pushl
dec
and
rolb
or
push
cmpsb
xchg
das
in
mov
xchg
mov
cmpsb
cld
xlat
in
out
sbb
xchg
sahf
mov
ds
fcoms
test
fcoml
lahf
pop
adc
pop
cli
das
sbb
sbb
jne
jle
jmp
mull
jl
sub
test
ret
movsl
out
jb
and
push
sub
push
inc
shll
pop
push
popf
push
pop
lds
cmp
out
imul
mov
les
int3
sbbl
gs
aam
fcmovbe
shl
addr16
adc
jnp
fdivrl
adc
cmpsb
sub
adc
push
cmpsl
xor
ret
addr16
mov
gs
or
not
dec
mov
lcall
mov
rcr
shll
in
inc
pop
lea
cld
popa
xchg
mov
xorl
fnstenv
sbb
in
data16
in
mov
adc
pop
mov
lods
lods
test
je
rcpps
dec
fs
fistps
rep
xor
loop,pt
sti
loope
outsl
imul
mov
mov
cmpsl
pop
dec
movsl
pop
ljmp
sti
je
adc
idivl
xchg
dec
call
aaa
rorl
pop
int3
mov
xchg
stos
cmpb
adc
pop
mov
rcrb
data16
or
pop
movsl
adcl
mov
dec
add
cwtl
test
data16
inc
mov
lahf
mov
mov
daa
insb
es
sti
jno
dec
jb
add
cmp
or
test
call
mov
les
sbbl
call
push
push
mov
jmp
mov
mov
addb
push
std
mov
pop
pop
mov
inc
stos
imul
enter
sahf
jle
shlb
cwtl
int3
jl
sbb
jmp
xchg
or
pop
inc
ret
les
pop
push
hlt
sub
popl
mov
arpl
pop
jbe
xchg
xchg
andl
cmp
xlat
ljmp
push
addr16
jle
test
or
pop
gs
dec
ja
ds
mov
and
pop
cmovge
sar
jns
adc
pop
mov
inc
push
std
fdivs
cli
jo
mov
out
loop
dec
xlat
fisttpl
push
push
dec
stos
sbb
lds
and
adc
xor
mov
iret
xchg
loopne
mov
stc
aas
inc
push
js
cltd
cmpsb
xor
clc
in
das
or
fnstsw
mov
jns
xor
out
or
cld
cmpsb
jmp
fucom
neg
mov
mov
in
xchg
mov
mov
adc
lock
test
push
mov
shlb
icebp
fsubrl
cmp
out
loop
cmp
aad
aam
xchg
ret
sub
or
cmpsb
mov
stos
ja
in
and
xchg
inc
push
pop
or
pop
push
jecxz
addr16
add
mov
out
mov
inc
adc
mov
and
mov
push
jmp
push
icebp
es
ja
mov
or
jmp
dec
xor
sar
xchg
pop
jbe
roll
fisttpll
stc
push
and
xchg
xchg
ret
iret
inc
adc
cmp
out
shl
mov
mov
pusha
test
daa
mov
out
lea
ljmp
popa
sub
mov
sbb
aam
dec
fs
cmp
imul
neg
cmp
fnstsw
and
cmp
fsubrs
sub
xchg
cs
out
mov
popa
dec
ja
jle
adc
push
jl
push
inc
ljmp
jns
cmpsb
adc
xlat
pmaxub
mov
push
aad
rorb
bound
scas
jo
lods
mov
pop
call
jecxz
ss
sbb
push
test
mov
adc
roll
or
dec
mov
andl
mov
std
adc
mov
add
push
cmp
mov
stos
mov
push
sub
xorb
and
inc
inc
cmp
out
stos
sbb
mov
dec
sarb
les
xor
sti
ljmp
dec
sbb
in
mov
xchg
mov
or
adc
mov
in
std
pop
in
fwait
ds
ret
add
lods
inc
mov
es
add
or
into
mov
cmp
outsl
pushf
mov
cmp
outsl
cmpsb
test
jecxz
fwait
xor
nop
jle
lcall
arpl
add
and
jns
lret
and
jge
iret
jp
jne
std
push
dec
xor
fsubr
xchg
or
mov
inc
dec
xchg
xchg
icebp
lea
xchg
in
add
cltd
xchg
sub
pop
outsb
repz
or
mov
xchg
xchg
inc
enter
xchg
mov
inc
stos
aam
mov
adc
nop
xadd
add
mov
call
sub
mov
inc
mov
mov
sub
mov
lock
sub
or
push
push
in
movsb
sub
push
test
inc
cmp
sub
in
andb
dec
lock
fstl
loopne
ret
jb
andl
cltd
mov
ret
test
mov
mov
and
and
xor
lret
arpl
aad
xchg
dec
mov
push
cmc
xchg
arpl
inc
mov
cwtl
aaa
jmp
jns
out
pop
adc
out
xchg
ljmp
movsb
pop
in
mov
push
ss
adc
push
push
or
lods
lock
and
cmp
push
adc
pop
in
mov
data16
ficompl
loope
mov
xchg
adc
jp
sub
push
mov
iret
in
pusha
mov
mov
mov
sbb
cmp
addr16
cmc
lahf
jl
mov
adc
test
inc
sarl
add
scas
imul
out
imul
pop
xchg
jno
pop
and
lds
std
or
mov
gs
push
or
cmp
push
add
negb
sbbb
scas
or
enter
jmp
jbe
or
push
aas
ja
daa
sbb
outsl
in
mov
sub
cmp
mov
lods
leave
push
cld
sub
or
or
mov
ljmp
lret
fisubl
lret
cwtl
push
call
shl
pushf
daa
icebp
outsl
out
lock
testl
xor
adc
push
fstps
cmp
lds
pop
js
push
outsl
ds
cmpsb
adc
push
cwtl
sbb
lods
and
mov
jae
inc
xor
xchg
sub
in
pop
ret
jns
sbb
andl
dec
dec
xchg
imul
js
lock
imul
dec
loopne
or
jg
mov
mov
cmp
int3
push
mov
mov
sar
daa
data16
mov
xchg
pop
mov
lea
insl
aas
xor
jo
shl
fwait
mov
inc
mov
adc
lock
lret
pop
mov
push
das
mov
aaa
jg
inc
pop
sti
mov
aas
adc
xchg
pop
enter
scas
cmpsb
and
xchg
sbb
add
mov
and
fcoml
incl
fwait
mov
dec
push
mov
mov
dec
inc
popf
cmpsl
cmpsb
dec
sub
rorl
pop
pop
in
and
mov
push
mov
push
into
in
iret
mov
add
push
loopne
xlat
enter
orl
pop
loop
xor
push
sbb
sbb
fs
cmpsb
es
add
inc
pop
mov
int3
jmp
cmp
mov
pop
fnstcw
jns
push
or
jl
test
and
xor
mov
dec
inc
sub
gs
insl
out
dec
mov
xchg
pop
ret
xchg
jmp
into
int3
cmp
xor
push
loopne
ret
mov
lcall
mov
cmp
cltd
dec
popf
fcmovu
and
testl
xor
pop
jl
pop
jp
jae
push
enter
cs
cmp
jl
add
cmp
popa
stos
sub
mov
fisubrs
jno
xchg
mov
and
add
add
dec
scas
mov
fwait
inc
pop
push
push
lock
inc
cmpsl
jmp
jnp
inc
imulb
mov
fmull
cmc
nop
xor
shl
daa
pushf
rclb
xchg
sub
push
pusha
subl
mov
imul
aad
cmp
leave
in
adc
fidivl
mov
iret
xor
aad
cmpl
and
inc
or
cwtl
sbb
add
jle
in
js
mov
loop
cmp
inc
inc
inc
pop
sbb
or
movsb
and
jp
roll
repz
scas
inc
iret
mov
cmp
lret
popa
aaa
mov
xchg
in
mov
mov
xchg
shlb
adc
push
scas
mov
addl
fistps
add
cmp
mov
pop
dec
fs
jl
and
cmp
or
sub
ds
and
in
arpl
mov
popa
inc
gs
mov
aas
test
pop
xlat
pop
lds
cs
imul
stc
sub
jle
lods
xchg
int
push
sub
lahf
dec
iret
mov
push
push
rol
stc
rolb
or
mov
sbb
shll
inc
dec
add
jp
jmp
dec
jno
int3
orb
xchg
push
fisttpl
jmp
cmpsb
movsl
adc
jecxz
xchg
mov
cwtl
lods
xchg
inc
jb
clc
pop
int3
inc
push
push
aam
gs
lahf
jno
cmc
mov
fwait
push
aaa
mov
inc
inc
add
mov
scas
loope
sub
test
push
xor
mov
xchg
popw
dec
adc
xor
xchg
cmp
rclb
lock
and
jmp
mov
mov
js
push
sub
aam
out
je,pn
jno
xor
sbbl
pop
cld
inc
jg
push
adc
add
cmpsl
imul
fisubs
jmp
adc
cmp
stos
sbb
outsl
xchg
das
mov
or
mov
xor
jns
and
jge
or
test
inc
add
jge
ljmp
addr16
scas
push
pusha
dec
xchg
ds
sarb
lods
mov
push
test
pusha
mov
sti
mov
pop
aam
mov
cmc
fisttpll
in
movsl
cwtl
mov
cs
sub
xchg
lods
es
les
mov
repz
sub
pop
test
mov
pop
push
adc
data16
dec
out
adc
movsl
push
jle
add
lods
ljmp
fmull
das
mov
outsb
dec
and
gs
cmpl
inc
jmp
mov
xchg
xchg
xor
cmp
mov
jns
ds
xchg
fucomip
and
dec
imul
mov
push
in
add
jno
push
jnp
xchg
inc
or
movsl
icebp
jl
out
cmp
cmp
inc
and
test
ja
fwait
sub
lahf
and
mov
leave
cmp
and
pop
cli
lahf
sbb
adc
sub
dec
hlt
xchg
in
xor
add
aam
dec
or
jne
xor
cmpsl
jnp
sti
cmp
pop
loop
mov
dec
jecxz
or
mov
imul
push
lret
test
adc
mov
add
imul
dec
std
xlat
insb
int
mov
pusha
bound
arpl
in
dec
fnstenv
cmp
arpl
lahf
fcmove
sub
cmp
mov
push
dec
jne
sub
das
jg,pt
cwtl
out
ret
mov
fsubrs
test
mov
test
imul
mov
cmpl
pop
and
sub
ret
dec
xchg
lock
movsb
aam
pop
dec
cmp
scas
pushf
js
aam
add
jp
test
cs
sbb
jecxz
pop
cs
inc
subb
jmp
mov
cmpsl
ja
incb
mov
stc
sub
inc
cmp
call
mov
xor
mov
adc
inc
mov
in
mov
sbb
lods
fcompl
or
popf
nop
mov
cs
jmp
inc
pop
sbb
cmp
pop
rcrl
call
shrl
xchg
pop
inc
inc
lock
outsb
repz
sub
xlat
sarb
pop
addr16
push
push
sub
push
or
mov
pop
pop
stc
incb
xor
jno
adcl
lcall
inc
or
fdivs
aas
jge
rep
jl
jg
lcall
insb
and
cmp
bound
inc
test
jns
sub
inc
or
aas
dec
in
dec
xor
xor
push
xor
push
lds
jo
aaa
dec
bound
fildll
pop
repz
jbe
jns
cltd
xor
adc
mov
mov
lds
mov
into
jmp
in
xor
push
push
push
icebp
pop
fcmovnb
scas
icebp
cmp
aad
lds
sbb
mov
jg
jle
mov
mov
push
or
cmp
inc
enter
sbb
push
cltd
lret
mov
inc
push
ret
mulb
sbbb
fmulp
fsubrs
popf
xor
ret
inc
and
in
jle
aam
jl
fcompl
dec
insl
loop
ret
jno
insl
jg
cmpsl
inc
mov
hlt
rol
sub
test
lea
ud0
repnz
mov
add
xchg
int
scas
mov
xchg
cmp
pop
aad
addr16
mov
mov
cmp
pop
mov
cmp
outsb
pusha
jnp
inc
cltd
and
add
xor
inc
insl
mov
outsb
mov
push
das
sub
jno
and
arpl
inc
push
mov
xor
mov
loopne
mov
sbb
inc
loopne
ja
cmp
dec
push
fistpl
mov
jbe
and
sub
cmpsl
scas
xor
fs
mov
cmpsl
cmp
into
out
xor
aam
pusha
push
imul
sub
loopne
jmp
dec
ds
test
mov
out
lcall
cmpsl
xchg
icebp
roll
pop
fisttpll
pushf
sbb
xorl
mov
xor
sub
sbb
and
cmp
add
or
lcall
adcl
test
aaa
cmpl
push
mov
and
dec
cmp
in
mov
aaa
outsb
ss
in
xlat
outsb
mov
mov
out
sbb
test
pop
mov
in
mov
lahf
aad
jg
sbb
jae
adc
in
sbb
out
mov
xchg
sbb
and
mov
mov
pop
rorl
dec
mov
out
insl
xor
stos
jae
stos
out
mov
cmpsb
divb
mov
icebp
push
cmpsb
mov
xor
mov
cli
clc
jns
outsl
aad
stc
mov
int
mov
and
sub
xchg
or
inc
pop
mov
int3
pop
dec
jmp
xchg
test
movsb
lea
imul
push
xor
sbbl
xchg
cmp
cmp
loop
add
cltd
inc
mov
lret
pop
lock
shlb
loop
inc
outsl
and
loopne
pop
ss
add
jnp
add
daa
cmp
push
or
sub
xchg
adc
and
nop
aas
stos
inc
xlat
mov
pop
dec
rolb
je
xor
aas
sbb
mov
cmp
cli
loope
mov
sub
cwtl
sbb
jnp
cmp
ljmp
mov
xchg
fldl
ficoml
dec
fidivl
in
and
cmpsl
mov
popa
push
sahf
jne
pop
xchg
xchg
add
rcrb
mov
bt
push
ret
lds
adc
in
cmp
pushf
repz
loop
jmp
xchg
push
mov
jno
add
dec
fwait
test
xchg
shl
shrb
jle
lahf
repz
fcomi
sbb
out
inc
icebp
push
or
mov
dec
cs
or
sbb
adcl
or
xchg
sbb
fisubrs
dec
xchg
rclb
fldt
shlb
outsb
ret
xchg
call
ss
mov
mov
flds
push
xchg
leave
adc
xor
in
fstpt
stc
inc
dec
pusha
negl
in
cmp
vstmxcsr
lods
addl
popa
adc
js
mov
sahf
pop
add
scas
cwtl
mov
inc
add
jp
cmp
push
shr
scas
repz
sbb
cmp
fwait
and
sbbl
das
xor
ret
ret
das
push
adc
pop
and
xor
fstpt
cmp
adc
mov
mov
es
pop
jecxz
mov
fmull
mov
mov
mov
lret
adc
outsl
inc
lock
aad
js
push
mov
sbb
ja
inc
mov
repz
add
cmc
icebp
loope
jle
popf
lods
mov
xchg
ficompl
in
loope
daa
daa
inc
nop
add
in
jg
jbe
cmp
stos
aaa
jge
mov
inc
out
sahf
sub
inc
stc
fs
out
ret
xor
pop
cmc
lods
and
push
jg
push
dec
repnz
pop
mov
insl
sbb
jae
outsl
addr16
popa
sub
xor
fistps
mov
lahf
pop
mov
insb
cmpl
lock
test
dec
mov
xor
pop
inc
sub
adc
adc
mov
ja
pop
xchg
call
adc
fwait
jns
insl
inc
or
jecxz
les
loope
or
aam
decl
pop
icebp
mov
add
out
and
mov
stos
ret
call
or
push
and
into
sub
jne
sbb
idivb
aas
cmp
or
xchg
dec
imul
lret
xchg
in
rcrb
dec
repnz
push
and
aad
mov
scas
and
jb
in
hlt
arpl
ljmp
sub
cmp
adc
cwtl
push
loopne
mov
daa
fstp
mov
scas
sti
pop
loopne
mov
xor
dec
nop
cwtl
sbb
ja
mov
addr16
das
lret
addr16
loope
dec
mov
sbb
cli
aas
adc
icebp
fistl
test
ror
mov
mov
das
mov
push
roll
sub
add
gs
out
movsb
and
mov
cmp
jle
icebp
push
dec
or
cmc
cmc
lods
jo
jmp
xchg
in
fsubl
call
cs
cmp
inc
jmp
into
outsb
dec
sub
hlt
xor
jg
pop
cmp
pusha
flds
clc
xchg
movsl
cs
das
pop
out
rcr
push
push
sub
leave
inc
sbb
cmc
insl
adcl
mov
lahf
push
inc
fstps
jle
in
push
js
mov
test
adc
dec
lock
rcl
dec
inc
mov
repnz
mov
inc
fwait
mov
ret
lods
movl
inc
push
mov
sub
cmp
and
xor
and
mov
pop
mov
cwtl
jle
cmp
test
pop
icebp
jo
xor
outsb
inc
cld
pusha
aaa
stc
xlat
or
push
into
and
imul
xchg
fldcw
sub
pop
add
andb
lret
insl
pop
jg
mov
inc
push
data16
adc
adc
mov
out
push
dec
mov
data16
dec
cwtl
ds
call
and
inc
mov
fiadds
fcoml
sbb
adc
das
popf
xor
xlat
lret
sub
xchg
mov
mov
shlb
or
cmp
fnstenv
push
xchg
mov
sbb
imul
add
jne
lods
push
pop
cwtl
inc
adc
push
sbb
sbb
out
enter
or
dec
sbb
push
je
or
inc
adc
adc
sti
xchg
cltd
popa
stos
lods
sbb
or
jne
xchg
jp
fstps
jge
and
add
jb
dec
andb
mov
mov
aad
mov
cmp
aam
sti
int
andb
enter
inc
push
loope
lock
dec
mov
dec
outsl
push
roll
sar
cs
pavgw
out
cmp
adc
stc
dec
lods
xchg
clc
adcb
ja
scas
adc
xchg
data16
bound
jb
mov
mov
rorb
fcomi
les
movsb
loop
jle
cmp
fistl
or
pop
jp
lret
mov
mov
dec
fs
rcl
mov
fsub
xor
ds
mov
dec
jge
sub
jmp
test
stos
and
jne
or
xor
loop
gs
or
or
or
and
lock
mov
xchg
and
mov
pop
popa
cmpsb
or
mov
sahf
ret
ret
mov
mov
xor
aas
popf
stos
mov
jbe
cmp
mov
imul
out
test
or
and
test
adc
add
shl
add
pop
movsb
test
sub
in
mov
xlat
cmpsl
sub
cmp
xchg
and
insb
sub
in
push
adc
mov
ficompl
cmp
mov
add
pusha
scas
jmp
rcrl
and
or
insl
xor
inc
ret
int
dec
add
test
xchg
or
mov
ret
inc
mov
out
pop
fcoms
add
add
dec
push
stos
inc
cmp
xor
loop
out
push
lret
lods
mov
stos
jg
sub
add
push
and
nop
arpl
mov
mov
and
enter
pop
cmpb
loope
inc
out
nop
xchg
lods
repnz
jb
sub
ja
sub
or
ja
sub
and
dec
test
mov
or
sahf
repnz
mov
sahf
int
dec
mov
gs
lea
test
cli
sarl
mov
xor
jge
sub
repz
sub
push
xor
and
repz
and
movsl
pusha
roll
aam
push
mov
pop
push
lret
xchg
pop
aaa
gs
cs
cld
cmp
mov
adc
add
xchg
push
cli
loope
les
filds
ljmp
int3
mov
rcl
xor
sahf
test
mov
popf
cmpsb
imul
and
jo
dec
sarb
pop
adc
lcall
scas
or
jo
mov
int3
xor
repz
xchg
icebp
jmp
and
xchg
xor
cmpsb
sbb
jmp
cmpsb
push
cmp
or
cld
test
fs
sbb
sbb
fdivrs
add
mov
xor
push
push
adc
icebp
pop
jbe
dec
adc
cmp
test
jb
in
pop
cli
aaa
sub
xchg
jg
cmpsb
dec
stc
aas
mov
into
nop
jnp
cmc
pavgw
loop
mov
mov
sti
daa
ret
stc
pop
cmp
loopne
inc
pop
jmp
mov
pop
mov
xchg
rolb
cmp
aaa
mov
add
popa
dec
rolb
lcall
std
in
push
test
pop
in
sub
sub
loope
sahf
insb
sub
repnz
cmp
jne
stos
mov
dec
rorl
add
jl
jae
mov
sarb
call
inc
rclb
test
lds
jo
inc
pop
add
sarb
das
xor
rcll
out
lahf
testl
dec
push
adc
mov
mov
gs
sbb
dec
jnp
imul
sbb
and
cmp
js
adc
pushf
inc
out
mov
sbb
pop
push
inc
mov
test
xchg
addb
popa
loop
movsl
xchg
add
jbe
mov
scas
dec
outsl
mov
arpl
out
fdivl
adc
mov
clc
adc
lock
mov
es
imul
test
or
sub
mov
pop
cld
fadd
sbb
cmp
daa
or
xor
out
or
xlat
xor
das
and
xlat
push
cmc
in
mov
xchg
stos
adc
repz
pop
mov
aaa
xchg
call
jp
jecxz
or
into
dec
shlb
shr
sub
insb
mov
int
add
cli
repz
push
and
negb
xor
lret
cmp
sub
fnstenv
mov
sbb
add
aad
cmp
cwtl
jnp
xor
movl
bound
clc
fnsave
push
loop
mov
out
push
push
push
sbb
pop
jnp
xlat
cmp
dec
sub
into
inc
sti
repz
shr
bound
data16
cmc
lcall
dec
xor
cwtl
leave
pop
jbe
jge
push
and
mov
stc
cmpsl
out
aam
je
aam
out
shl
ret
repnz
dec
pop
xchg
dec
fiadds
lock
fbld
pop
pop
and
mov
or
outsl
sub
leave
roll
test
lods
dec
and
jnp
mov
mov
mov
xor
js
std
stc
fadd
inc
xchg
and
ja
ja
pop
rorl
add
rcrb
mov
pop
pop
or
imul
fnstsw
sbb
push
ror
dec
scas
in
aad
mov
scas
mov
outsl
jo
mov
adc
mov
push
inc
dec
dec
mov
stc
xlat
dec
mov
add
out
pusha
mov
js
push
pop
sbb
dec
ret
bound
xchg
fldcw
push
adc
lods
jg
in
aad
das
aaa
xchg
mov
cmp
push
cmp
adc
xchg
cmp
ficomps
and
jnp
loope
nop
xor
movsl
dec
add
push
ror
inc
cmpsb
xor
lods
shl
addl
xor
sbb
and
outsb
sub
mov
cmp
fmull
icebp
mov
fistps
dec
loopne
subl
add
test
out
sub
push
sub
enter
cli
inc
or
jae
pop
sbb
rcr
ret
xchg
mov
cmp
repz
xor
adc
pop
mov
mov
pop
loop
jbe
nop
popa
leave
les
out
mov
cmove
daa
or
in
stos
adc
aam
xchg
std
int3
or
pop
jns
fs
xchg
mov
scas
hlt
xchg
push
push
mov
pop
pop
mov
lea
fisubs
push
mov
rolb
imul
arpl
ja
jmp
mov
fwait
bound
loop
jp
cmp
mov
pop
push
jge
out
out
push
loop
je
test
imul
adc
inc
and
sti
mov
xor
fldcw
xchg
into
adc
imul
std
add
hlt
push
test
cmp
js
mov
jmp
adc
ljmp
mov
add
loopne
scas
jmp
pop
leave
fcom
cltd
push
push
adc
cmc
jmp
xor
add
out
inc
sbb
out
in
rcl
cmp
and
mov
ret
sarl
mov
lret
ss
stc
mov
bound
andl
add
insb
fdivrl
daa
xchg
xor
cmp
mov
pop
jns
out
pop
adc
sub
sti
cmp
cmp
outsb
xchg
sub
jno
xor
and
sahf
xchg
shl
jnp
in
cmp
xor
pop
ja
insl
les
pushf
sti
sbb
aas
out
into
scas
lret
imul
inc
cmp
or
add
aad
mov
lea
cld
add
aam
ret
daa
sub
pop
loop
fdivrs
mov
xor
cmp
inc
pushf
push
pop
and
hlt
jmp
insl
adcb
sbb
aam
mov
scas
xor
adc
push
hlt
test
clc
lds
sahf
hlt
push
movsl
mov
shll
xlat
and
shll
imull
sar
outsb
lods
cmp
lahf
stos
push
bound
or
mov
into
jae
iret
int
jmp
cmp
arpl
test
and
cltd
xor
pop
enter
arpl
mov
sti
enter
sbb
out
js
push
mov
je
cmp
or
add
sub
outsb
into
cld
fs
xor
push
test
cmp
mov
arpl
pop
or
fisttpl
sub
and
and
cld
add
leave
stos
movsl
sbb
jns
inc
or
pop
rol
jg
scas
mov
jecxz
aas
push
cmc
adc
aaa
jbe
dec
mov
mov
sbb
cmp
mov
push
add
stos
sarl
out
dec
pop
lods
xchg
and
sarb
pop
mov
push
iret
pop
ds
xchg
into
jae
push
hlt
fadds
push
mov
jae
mov
loop
insb
insl
dec
iret
xchg
jo
xchg
mov
bound
daa
cld
pop
movl
mov
push
pop
daa
sub
sbb
dec
hlt
shrl
test
mov
ja
dec
adc
scas
inc
adc
mov
cmp
mov
nop
stos
cmp
ljmp
sub
int3
jecxz
or
lds
fnstenv
js
mov
sub
cli
lcall
mov
jl
cmp
mov
scas
push
es
add
push
mov
stc
stos
xchg
enter
hlt
pop
rcll
jmp
fs
inc
sub
mov
sub
insb
inc
sub
loop
std
pushf
sbb
inc
inc
jns
ret
bound
loopne
rorl
xchg
popf
fldt
fidivrl
or
divl
sub
mov
xchg
sbbb
and
push
enter
aaa
add
or
in
ja
mov
sbb
push
loope
inc
mov
mov
leave
ficoms
sti
cmpl
lock
sub
mov
int3
pushf
mov
popa
pop
repz
xchg
jae
add
cmc
inc
rorl
fidivrl
jp
cmp
int3
adc
sub
jnp
fs
out
sti
outsb
pop
mov
imulb
int
mov
mov
or
push
push
adc
mov
pop
sbbl
daa
pop
rclb
xor
loopne
mov
sti
lods
push
mov
mov
adc
lea
jns
lret
cltd
cmc
push
inc
add
insb
cmc
dec
call
adc
adc
pop
test
cwtl
lcall
jae
jb
push
int
add
ljmp
pop
push
dec
gs
xchg
sti
jmp
pop
rcl
and
fs
insl
das
out
cwtl
stc
nop
lret
int
and
sbb
add
ss
add
cld
das
lea
mov
sbb
mov
scas
and
sti
sub
jg
cmpsl
sub
ja
js
movsl
stos
jg
stos
sahf
mov
andl
int
mov
lds
out
int3
cmc
fstpl
add
insb
mov
mov
je
fsubl
push
inc
xor
xlat
mov
push
jbe
sti
sti
mov
cmp
inc
aad
dec
cmp
js
sub
cmovle
adc
adc
out
enter
cmpsl
lahf
dec
inc
mov
repz
rcrl
mov
or
movsl
push
mov
out
subb
sarl
lods
pop
push
jl
out
add
test
mov
pop
jns
test
or
mov
dec
iret
or
xor
sbb
fidivrl
inc
pop
push
add
or
xor
jae
xor
popa
ljmp
test
test
out
cs
les
mov
add
lret
in
or
ds
mov
fldt
out
mov
push
mov
addr16
lock
pop
lods
push
jg
mov
push
out
pop
fcmovne
cmp
xor
je
sbb
jb
outsl
scas
adcl
mov
outsb
mov
andb
xor
inc
ds
sub
sub
fwait
sbb
or
jnp
push
mov
testb
sbb
and
push
mov
cmp
dec
sbb
or
lahf
out
push
rclb
push
dec
push
mov
sub
cmp
sar
dec
mov
out
fbstp
mov
fsub
iret
int
dec
pop
inc
xchg
test
mov
mov
int
jmp
push
jp
ret
xchg
sub
icebp
jge
fsts
jnp
sti
push
push
in
lret
std
pop
add
ficomps
lahf
data16
pop
sbb
mov
and
dec
cmp
mov
inc
lds
gs
out
jecxz
ljmp
out
mov
es
and
and
mov
mov
dec
jb
jp
push
sahf
xor
in
mov
pop
sbb
cli
iret
cs
mov
push
dec
sbb
insb
sub
mov
fisubs
sbb
fldt
cmpsl
xor
inc
add
push
lret
icebp
sarl
fwait
or
jp
xor
sti
js
jne
fidivl
enter
pusha
inc
fcoms
adc
pop
cmc
inc
inc
mov
add
rcll
repz
imul
in
scas
addr16
push
cmpsl
lock
sbb
in
jnp
das
movsl
pop
je
and
xor
pop
cmp
in
movsl
inc
outsl
mov
xchg
fdivrl
cwtl
mov
in
aaa
pop
fucomi
adc
mov
cwtl
push
mov
adc
xor
addr16
push
aad
imul
lds
cltd
sahf
dec
push
sbbb
ja
mov
jmp
arpl
add
add
int3
and
ret
test
sbb
sahf
or
in
xlat
push
arpl
lods
xchg
and
add
sbb
clc
inc
sub
mov
and
jmp
mov
idivb
or
cmp
xchg
xchg
pushf
test
scas
decb
fidivrl
jp
ljmp
mov
out
ljmp
sub
ficomps
incl
cmpsl
or
lahf
add
push
fisubs
movsl
mov
xlat
mov
dec
cld
pop
xchg
pop
into
push
sbb
sti
dec
fidivrs
adc
push
pop
rorb
pop
pop
dec
fimuls
cmp
rol
jg
arpl
push
and
sub
pushf
popa
mov
test
add
cs
inc
dec
jge
lahf
inc
pushl
mov
adc
mov
sbb
mov
mov
mov
outsb
push
orl
cmp
in
sbb
sarl
out
jae
jle
jmp
pop
minps
idivl
repnz
pop
ficoml
lcall
rorl
imul
enter
iret
xchg
mov
adc
scas
mov
xor
add
mov
int3
sbb
sbb
or
sbb
outsl
add
rcr
rcl
int3
mov
mov
jno
mov
dec
arpl
fistpl
rclb
adc
inc
mov
ror
mov
fldenv
xchg
lret
and
sbb
jnp
imul
and
add
or
push
js
aad
push
xor
shlb
bsr
lret
cmc
jbe
add
xchg
jp
and
push
and
jae
push
cmpsb
jbe
cwtl
dec
lahf
jne
dec
xlat
out
mov
stc
ficompl
sub
cmpl
and
push
out
xchg
xor
xchg
xorl
jno
out
mov
sbb
and
dec
xor
fisttps
outsl
jge
fisttpl
cltd
sub
pop
out
mov
push
jns
rcrb
lahf
pop
mov
xchg
fisubrl
scas
fists
jle
add
arpl
cmc
cs
or
lds
mov
jnp
out
xrelease
pop
dec
lret
out
sbb
ffree
stos
popa
dec
mov
insl
push
cvtpi2ps
inc
fisubrs
daa
orb
dec
mov
sub
std
jge
or
mov
je
ss
xchg
pop
mov
jl
fldcw
je
mov
pop
test
popa
inc
add
add
call
iret
fsubl
arpl
mov
cmp
mov
popf
mov
cmp
cltd
pop
cmpl
jne
and
inc
xor
jle
xchg
xor
xchg
jns
lahf
sbb
sub
jmp
pop
pop
mov
inc
sbb
jge
ret
stc
push
push
inc
frstor
stc
sub
mov
daa
mov
or
imul
std
divb
mov
dec
mov
or
loope
mov
cs
mov
ds
leave
cmpl
sub
fists
inc
inc
push
mov
mov
lea
fcomps
call
push
ss
sbb
sub
push
sub
fwait
out
inc
add
adc
pop
mov
cmp
jp
sub
mov
push
inc
push
sub
pop
jnp
dec
sbb
aaa
xchg
in
cmp
mov
mov
pop
and
xor
test
in
push
and
xchg
and
fnstsw
or
jecxz
mov
lret
push
icebp
shrl
imul
and
icebp
or
movsb
push
sarl
inc
imul
mov
in
pop
lcall
arpl
cmp
pop
movsl
lds
dec
add
hlt
pop
push
mov
push
mov
mov
enter
mov
imul
outsl
sti
cmp
cli
sub
scas
push
addr16
sbb
mov
out
in
xorb
jb
and
pop
and
insb
arpl
fs
cmpsl
cmp
cwtl
or
jecxz
in
lds
enter
jle
js
xchg
xchg
xchg
test
cmp
daa
cmp
adcb
jp
pop
mov
andb
cmp
das
dec
in
nop
cmp
mov
lret
je
clc
jnp
fistpl
and
pushf
sub
pop
xlat
mull
push
mov
insb
ret
je
int
add
jno
mov
loopne
adc
inc
jecxz
push
mov
ss
dec
cmp
xlat
jl
sub
mov
inc
sbb
cld
andb
jae
push
push
lds
mov
inc
outsl
push
inc
add
aas
inc
movsl
lret
data16
mov
imul
in
in
rcrl
lods
mov
mov
sbb
fstpt
sbb
orl
test
sub
and
adc
hlt
dec
mov
inc
enter
mov
loopne
cmp
sub
aad
sahf
test
sbb
scas
scas
aad
dec
shll
push
inc
mov
mov
or
enter
push
push
in
andl
daa
lret
std
fsub
pop
imul
dec
adcb
lods
push
int3
cmp
test
popf
shr
or
insl
loop
cmp
add
aaa
lcall
jmp
cltd
es
insb
mov
inc
mov
std
in
sbb
negb
pop
mov
mov
jnp
jl
jmp
mov
add
jo
sbb
pop
sbb
push
pop
or
lcall
popf
cmp
cmp
add
mov
dec
leave
dec
add
repz
push
dec
mov
xchg
repz
xlat
cmc
add
shll
rcrb
xchg
imul
jg
out
outsb
push
insb
sbb
lds
mov
mov
out
pop
inc
nop
insl
and
scas
loopne
into
mov
cmc
dec
aaa
cld
pop
inc
add
cmpsl
inc
push
inc
int
aam
xor
imul
inc
sub
iret
movsl
adc
pop
push
push
rorb
insl
push
mov
mov
fs
mov
add
das
adc
test
loope
adc
xchg
in
mov
popa
loop
sbb
xchg
stos
ja
movsb
xor
and
or
or
in
stos
les
roll
and
xor
dec
cmc
pusha
push
jmp
sbb
pop
out
push
call
push
daa
pop
aaa
adc
frstor
out
jg
push
es
jbe
jnp
push
push
mov
les
cmp
rcll
mov
decb
cmp
push
inc
cmp
mov
xor
fldcw
adc
rolb
adcl
into
xchg
cmc
jp
sti
push
dec
out
loop
add
dec
cmc
out
lcall
and
neg
aad
cmpsb
je
sbb
ret
jnp
cmp
js
push
and
sbb
je
and
cmp
sti
lock
jecxz
lcall
cmpsl
inc
dec
sbbl
xlat
lock
sbb
mov
movsl
inc
fwait
mov
jno
out
js
and
lret
cli
cmp
cmpsb
adc
and
popl
clc
shlb
pop
mov
aad
adc
jge
into
cmpsb
inc
cmc
sbb
xor
inc
fmuls
cmp
loope
icebp
jg
xchg
xor
jae
fdivrl
mov
out
cmp
push
push
push
mov
sub
jle
add
jbe
pop
bound
mov
cltd
jnp
lret
pop
xchg
fcomps
xchg
sti
cwtl
jge
sahf
scas
xor
loope
pop
xchg
in
fcoms
or
add
call
lock
insl
movsl
daa
xchg
loop
pop
aaa
lock
orb
mov
and
loop
mov
xchg
xchg
jmp
push
xor
push
inc
ss
out
fildll
jb
fwait
or
or
test
sti
addr16
xchg
add
and
xchg
das
xchg
cmp
loop
call
jo
ror
adc
mov
insl
out
test
dec
xchg
lock
mov
jbe
pop
mov
test
out
mov
repnz
arpl
push
pop
rcll
sbb
jno,pn
pop
mov
and
mov
pop
movsl
push
movsl
mov
cmp
jl
in
jg
add
xchg
test
cwtl
pop
dec
and
notl
ds
cltd
mov
icebp
and
adc
mov
dec
cmpsb
lea
pop
sub
mov
cltd
cwtl
les
pop
cld
scas
push
and
fucomp
gs
dec
leave
jo
xor
shll
dec
hlt
push
cmp
addb
and
mul
sbb
mov
xchg
lcall
jne
push
add
jg
xchg
filds
mov
inc
pop
mov
fiaddl
sbb
in
xchg
repnz
insl
sbb
mov
dec
mov
sub
mov
push
mov
ss
sbb
xor
pop
mov
xlat
outsb
mov
jl
mov
cmp
test
movsb
gs
stos
inc
push
imul
mov
loope
loopne
push
push
iret
adcl
adc
pushf
adc
pop
scas
jb
out
adc
sub
enter
inc
call
jl
pop
cltd
xchg
fwait
and
push
mov
fcoms
push
and
addr16
daa
ljmp
lret
int
adc
and
aam
xchg
out
icebp
xchg
cmp
div
mov
push
push
cltd
sub
in
lods
jg
mov
dec
das
mov
test
inc
lods
sub
jp
aas
cmp
cwtl
xchg
xchg
sbb
dec
insl
dec
mov
data16
mov
fdivrl
popa
fsqrt
mov
mov
pop
pop
add
pop
jbe
adc
outsl
and
push
sub
sti
xor
scas
stc
sbb
xor
mov
or
dec
in
stc
mov
mov
sahf
lcall
cmpsl
stos
add
call
or
jb
xor
dec
test
push
lret
movsb
cwtl
pop
cltd
imul
sub
push
jne
or
xor
pop
ret
cmpsl
adc
push
or
inc
xchg
lods
pop
xorl
inc
cld
sub
cmpsl
sub
bound
push
sub
insb
out
pop
pop
and
es
aam
ret
in
les
push
adc
inc
jo
adc
add
in
lods
mov
mov
add
std
mov
dec
test
pop
lods
sbb
mov
xchg
xchg
mov
shlb
sbb
test
or
lahf
adc
lock
dec
notl
mov
jle
xchg
orl
sub
dec
jmp
cmp
adc
int3
xor
in
and
push
loop
sub
lods
sub
mov
xor
and
fstpl
and
pop
hlt
popf
sbbl
add
loop
mov
pop
mov
jb
neg
pop
lea
xchg
sbb
dec
push
pop
dec
pop
sbb
sub
ds
push
out
pop
in
fadds
enter
lcall
test
daa
fcmovnu
dec
adc
fcoms
pop
pop
cmp
mov
jb
ds
sbb
mov
push
sub
push
push
add
mov
inc
divb
fsubrs
and
inc
out
clc
xchg
push
into
push
int3
fidivrs
lret
jmp
in
inc
rcr
frstor
inc
pop
lea
mov
ds
shr
ss
jnp
xchg
gs
loop
mov
lea
xlat
fstl
fstpt
les
insb
pop
dec
jecxz
ret
jecxz
and
jecxz
sbb
aad
mov
push
mov
jmp
clc
add
cmpsl
cli
pop
xor
aam
mov
popf
mov
sub
jecxz
ja
sub
iret
jns
out
xchg
daa
sbb
pusha
mov
mov
jl
cmp
gs
jno
fiadds
push
outsl
mov
cmp
insl
jae
or
add
sbb
fidivrs
or
stos
cmp
lret
jns
push
pop
imul
jbe
daa
xchg
montmul
cmpsb
inc
mov
pusha
lcall
mov
push
mov
jl
mov
jl
fistl
xor
inc
xor
adc
movsb
cmp
sahf
cld
stos
or
jne
repnz
not
mul
fisttpll
mov
mov
std
mov
loopne
enter
mov
xchg
dec
idivb
fisttpl
dec
aaa
cmpsb
stos
mov
out
cltd
ss
scas
sbb
in
xchg
dec
jg
xchg
mov
xchg
leave
pop
mov
in
lcall
aas
jae
mov
sub
mov
xchg
mov
sbbb
or
std
pop
dec
cltd
in
out
fimuls
xchg
adcb
xchg
and
mov
mov
adc
add
jo
and
out
sbb
ss
and
ret
push
mov
idivl
add
add
xor
xor
popa
insb
movsb
cmp
addr16
in
cmp
dec
jbe
push
dec
ljmp
jl
and
pusha
sbb
cmpsl
xchg
lock
jl
push
jnp
loop
mov
fistl
dec
mov
mov
push
inc
ss
mov
sub
imul
pop
repnz
push
sub
xchg
xchg
dec
push
push
sarl
adc
inc
mov
xor
movsl
out
mov
ja
jb
jg
jo
out
sbb
add
mov
cmc
int3
imul
inc
repz
xchg
das
insl
jmp
mov
jl
cmpb
je
xor
cli
sahf
int3
in
fsubl
in
push
or
imul
in
mov
into
sub
cmp
cmp
test
ss
cltd
into
inc
inc
pop
xchg
fbld
mov
fsub
mov
push
xor
pop
popa
jmp
cld
ret
ljmp
jb
push
adc
stos
das
hlt
add
pusha
jmp
adc
dec
fidivrs
test
dec
pop
lahf
ret
mov
adc
jnp
mov
clc
sbb
imul
push
test
fst
in
sub
in
mov
into
cmpl
das
ja
cltd
outsl
inc
pop
jg
xchg
xlat
ljmp
lea
pop
test
jne
js
pop
cmpsl
insl
sahf
in
xchg
and
inc
mov
dec
xor
insl
dec
and
xchg
cli
es
pop
pop
mov
adc
je
mov
mov
or
jl
xchg
mov
dec
subb
cltd
and
out
mov
jne
inc
dec
scas
xor
in
mov
push
dec
scas
out
pop
arpl
jne
cmc
dec
outsb
inc
jae
xlat
rolb
mov
cmp
pusha
ds
add
add
pop
cmp
add
shl
pushf
lds
out
testl
add
aam
push
stos
dec
cmp
adc
test
in
adc
loop
bound
pop
mov
loopne
fcoms
repnz
jnp
adc
xchg
imul
jmp
add
inc
sti
mov
cmp
call
pop
jg
shlb
sub
test
sti
aam
sbb
ja
jl
leave
sbb
jecxz
je
mov
roll
mov
adc
fdiv
xchg
scas
pop
mov
xchg
or
push
xor
sahf
imul
inc
pushf
xor
or
repz
fcmove
xor
cwtl
fldenv
hlt
xchg
aas
pop
or
push
lret
nop
xchg
cld
sbb
insb
adc
cwtl
mov
adc
push
adc
xchg
scas
jnp
cmp
jne
mov
cmp
mov
insl
js
lcall
scas
jae
cmp
mov
jnp
xor
dec
inc
jecxz
mov
repnz
pop
mov
pop
stos
dec
jmp
mov
push
lods
add
pop
xor
adc
cmpsb
loope
adc
jmp
test
and
test
outsl
pushf
cwtl
aaa
dec
inc
test
rcrb
scas
jle
adc
mov
insl
pop
test
dec
mov
pop
mov
and
mov
dec
push
shll
xor
in
jo
test
sbb
adc
jge
test
sbb
mov
push
insb
ret
and
cwtl
out
mov
addb
movsl
or
jmp
scas
frstor
push
ds
fisttpll
popa
dec
ret
jecxz
mov
sbb
frndint
outsb
repz
das
std
pop
cli
xchg
pop
bound
icebp
insb
subb
cmpsb
xrelease
dec
pop
sbb
push
pushf
popa
in
std
push
push
clc
ds
xor
sar
nop
xlat
mov
shrl
into
mov
inc
and
adc
pop
fstpt
data16
adc
in
mov
iret
mov
sub
daa
xchg
mov
das
test
cld
in
and
xchg
imul
in
mov
aam
in
and
pusha
sahf
push
int
dec
xlat
mov
dec
mov
pushf
dec
out
jmp
mov
push
inc
aaa
loope
inc
fwait
mov
shl
mov
repnz
push
inc
xor
fdivrp
les
xor
mov
adc
clc
adc
cmp
push
xor
fidivs
int3
int
mov
xor
xor
xor
push
or
or
and
mov
sub
dec
xor
das
mov
xor
mov
das
fdivrs
mov
dec
div
sub
pop
lods
lds
stos
in
push
mov
lods
add
and
fidivrs
pusha
cmp
insl
lret
fmuls
mov
mov
jmp
fwait
push
xchg
es
dec
test
push
xor
push
xchg
jbe
sbb
in
out
xlat
clc
jns
scas
mov
inc
lock
rorb
mov
adc
push
ljmp
cmp
sbb
bound
shlb
pop
inc
xlat
jo
mov
sbb
or
add
call
lods
push
popa
or
mov
bnd
ficoms
pop
in
or
sub
inc
push
lahf
and
dec
clc
idivb
jno
out
je
jo
adc
add
push
imul
push
ja
adcb
cmp
jmp
cld
xor
sarb
push
and
jmp
mov
sub
rorl
sbb
pushf
push
inc
jecxz
dec
xchg
pop
dec
xor
cmp
add
mov
cmp
cmpl
comiss
jae
xor
subb
aas
add
mov
push
or
lods
sahf
jge
pop
sarb
jecxz
test
push
pop
xor
in
mov
sbb
ljmp
mov
dec
ss
aaa
add
xchg
mov
mov
jns
ret
bound
dec
pop
jnp
rcrb
sbb
add
mov
adc
in
sbb
and
daa
jbe
xchg
ret
imul
cmc
cli
mov
gs
lret
sub
dec
rorb
inc
inc
adc
or
or
imul
sub
aaa
sahf
icebp
mov
jl
xchg
aas
lret
outsb
mov
shrl
push
or
clc
xor
js
sub
in
jecxz
pop
adc
dec
jb
movsl
inc
pusha
inc
inc
ret
push
pushf
jmp
jge
cli
cmp
fists
mov
sub
arpl
out
jmp
sbb
arpl
add
loope
out
incb
sbb
insl
xchg
mov
imul
dec
mov
mov
xchg
int3
in
lods
mov
push
mov
notb
mov
aam
dec
pop
das
or
add
hlt
or
out
add
pop
add
or
orl
inc
cmp
iret
xchg
sub
add
xchg
add
cwtl
cmp
adc
and
push
shl
filds
and
clc
iret
std
int3
fnsave
out
cltd
test
jne
xchg
mov
push
jae
sbb
jbe
testb
lock
call
lods
roll
sbb
ljmp
or
mov
ljmp
inc
test
incb
cmp
jl
outsb
fwait
xchg
mov
jmp
fistps
insl
loopne
jl
rcrb
pusha
insb
adc
mov
insl
test
jmp
sub
mov
push
and
inc
jmp
jbe
ficoml
stos
or
push
in
insb
ror
aam
icebp
mov
push
sbb
xchg
mov
lcall
xchg
aam
sub
sbb
mov
jg
sbb
rcrb
xor
mov
mov
add
or
enter
in
pop
mov
xchg
call
pop
mov
idivl
bound
neg
fldenv
negb
test
icebp
dec
andb
das
mov
mov
push
cmp
mov
mov
je
mov
cltd
popl
mov
adc
xchg
lods
or
xor
push
adc
cmp
mov
jbe
ds
mov
into
bound
and
stos
and
into
mov
addb
cmpsl
pusha
inc
push
icebp
push
in
mov
mov
xor
sub
pop
insb
push
loope
push
pop
in
pop
add
ret
adc
push
jecxz
into
pop
es
adc
mov
mov
scas
mov
inc
and
xor
push
fs
movsb
inc
nop
jo
andl
dec
mov
pop
sti
xchg
fwait
mov
sbb
pop
pop
mov
dec
jle
mov
lods
lret
ret
out
xchg
pop
fisubl
sbbb
fwait
xchg
fld
daa
jmp
mov
jae
add
mull
je
sbbb
repnz
inc
jg
xchg
mov
int3
jle
lahf
mov
shr
adc
mov
jecxz
xor
mov
sub
add
call
cmp
cltd
dec
push
enter
and
mov
lahf
adc
popf
or
inc
mov
mov
mov
adc
outsl
bswap
in
or
push
xchg
jbe
or
jmp
aaa
xchg
push
ja
inc
add
sbb
leave
jno
mov
rorl
inc
in
inc
xor
jno
mov
cmp
cmp
jne,pt
ret
inc
lcall
les
or
dec
add
xchg
pop
and
xor
jnp
fisubs
xchg
ja
xor
imul
pushf
sub
in
cmpsl
mov
sub
push
dec
xchg
pop
pop
mov
xchg
out
add
out
jge
cmpsb
mov
pop
pop
scas
xchg
js
stc
and
sbb
loop
clc
std
cwtl
js
xchg
daa
test
jmp
dec
ss
divl
jae
add
xrstor
sub
push
leave
jae
mov
push
cltd
jbe
fwait
push
cmp
mov
or
gs
cmpsb
ret
mov
push
and
and
popf
or
addr16
ja
xchg
popa
adc
mov
loop
rcrb
dec
das
adc
cmc
and
fcmovnbe
fucom
cmpsb
mov
adc
insl
sti
movsb
jb
es
xor
jb
mov
test
das
xor
pusha
sahf
lcall
jp
mov
ret
ljmp
cmp
insl
cmpl
test
addb
icebp
push
imul
or
push
out
pop
aaa
clc
lods
iret
xor
mov
lods
or
fucom
sub
sub
pop
xor
clc
pop
sbb
scas
es
pop
in
aad
push
mov
fimull
add
mov
pushf
sub
hlt
loop
mov
add
loope
push
ret
push
ret
and
sbb
daa
mov
cmpsl
out
repz
fstpl
pop
stc
je
mov
adc
in
add
std
ja
adc
fldenv
mov
out
jbe
movb
xor
test
sbb
iret
test
and
jle
std
mov
mov
mov
jl
mov
fiadds
loope
sbb
xlat
sbb
mov
cmp
shlb
push
out
pop
fcoms
inc
movsb
xorb
inc
aaa
inc
pushf
cmp
insl
push
pusha
ljmp
xchg
mov
scas
or
sbb
dec
mov
inc
iret
push
incb
jl
pop
xor
inc
jnp
lods
fs
cld
aaa
scas
ds
bound
or
jne
insb
sahf
mov
shrb
lods
xchg
xchg
clc
push
test
imul
adc
arpl
aaa
sbb
sub
std
in
sbb
sub
mov
cmp
mov
mov
add
ret
out
xchg
arpl
sbb
mov
mov
add
lock
cmpsb
clc
xchg
ja
push
mov
es
out
xor
sbb
loop
dec
arpl
add
push
insl
mov
sbb
cltd
pop
inc
sub
in
bnd
lahf
mov
pop
mov
rep
je
fsubr
enter
mov
enter
mov
jecxz
cmpsl
clc
fimull
jl
jge
imul
cmpsl
xchg
xlat
leave
out
ret
jl
imul
mov
dec
scas
jo
dec
push
sub
popf
repnz
sub
insl
inc
rcl
sbb
popf
loopne
jne
les
gs
ljmp
jmp
sbb
fcoml
sub
mov
ret
push
jle
add
xchg
adc
loop
dec
notl
decb
je
enter
mov
jecxz
gs
je
mov
adc
adc
jns
xchg
rcrl
ja
jg
mov
aaa
mov
mov
push
sbb
push
mov
popf
out
add
lahf
lcall
fsubrl
mov
sbb
add
jb
and
inc
aas
jmp
push
loope
sub
push
js
mov
mov
ss
inc
je
fnstenv
push
test
gs
cmp
pop
repnz
dec
mov
imul
jno
or
lods
pusha
pop
push
stos
cmc
es
xchg
pop
and
mov
add
add
out
ljmp
rep
push
sbb
dec
pop
popf
mov
aam
dec
shrl
fiadds
pop
jne
xchg
lahf
out
lretw
pop
add
cmpsl
inc
lock
push
fdivr
jnp
inc
out
ja
loopne
cmp
stos
jb
daa
stos
xchg
or
jno
rolb
pop
loope
loopne
push
mov
mov
inc
lcall
mov
lea
test
mov
iret
adc
mov
cmp
jbe
or
add
into
push
inc
sbb
in
out
and
pop
lahf
mov
popa
inc
pop
aam
sar
mov
imul
test
pop
dec
or
das
xchg
pop
jl
push
pusha
movsb
jmp
pop
aam
push
aam
and
xchg
out
push
movsb
jle
push
inc
loopne
loopne
push
push
jb
pop
test
add
inc
xor
aam
or
daa
inc
mov
jmp
sub
push
js
loope
push
xchg
push
push
push
inc
ret
mov
pop
and
out
xor
je
daa
into
jl
lock
mov
lea
add
xor
cltd
rorb
clc
xchg
popf
xchg
add
sub
xchg
sub
add
in
sub
cmp
mov
mov
in
jne
push
call
jne
das
subb
inc
popf
stos
test
mov
jp
hlt
mov
cwtl
push
jnp
ret
cwtl
shl
xorl
movsb
jge
bound
jecxz
dec
mov
jl
mov
pusha
je
jae
lds
cwtl
repnz
repz
jge
mov
adc
sbb
adc
leave
lahf
xor
jecxz
fcmovbe
pop
ret
jb
push
vrsqrtss
mov
xchg
inc
sub
pop
insb
js
inc
adc
push
test
and
adc
xchg
xchg
xchg
ss
push
mov
xor
lock
fnstsw
lahf
adc
sub
adc
dec
xor
mull
std
cmpsl
cmpsb
mov
add
ss
ffree
adc
jge
adc
lahf
daa
sub
jnp
cmpsb
mov
clc
mov
out
dec
mov
xlat
or
insl
lock
and
mov
cmp
push
mov
je
mov
lds
clc
mov
rorb
pusha
add
ficoms
mov
dec
mov
xor
jo
sbb
mov
xchg
mov
cld
dec
daa
cmp
shr
cmpsb
push
mov
je
xchg
dec
mov
or
imul
in
xchg
add
out
add
das
out
add
insb
lods
dec
vmovups
adc
pop
test
test
daa
out
push
je
cmc
sub
push
repz
scas
xor
cmc
fisttps
orb
or
lret
imul
lret
in
pop
std
jecxz
jb
je
xor
lods
inc
in
nop
icebp
movsb
xchg
stos
cmp
xlat
aam
inc
ret
or
fiaddl
or
fstps
cmpb
data16
dec
es
jbe
pop
add
xor
lcall
sub
xchg
pop
inc
inc
into
das
outsb
iret
sbb
int3
js
push
gs
ja
xchg
rolb
pop
ja
or
fiadds
adcl
inc
push
pop
dec
adc
pop
add
dec
ficompl
loop
adc
dec
loope
pop
mov
inc
lock
jecxz
loopne
cmpb
pop
pop
rcrb
or
js
ret
xchg
and
daa
inc
insl
mov
mov
cli
mov
mov
addr16
cmp
xchg
xchg
sar
pop
out
sub
fs
cli
pop
pop
jl
enter
dec
pop
push
jge
enter
dec
jecxz
pop
and
fimull
jecxz
pop
rorl
jecxz
jns
push
xchg
fcoml
les
push
sub
and
js
cli
adc
pusha
imul
ja
dec
outsb
sbb
adc
or
test
and
lods
aam
loope
shrb
or
add
orl
cmp
sbb
scas
clc
sub
jmp
imul
mov
add
aam
sarb
aaa
pop
outsl
repz
cli
xchg
jle
push
push
ror
cmp
jp
loop
les
fistpl
pop
lahf
dec
mov
into
popf
xchg
mov
and
outsl
push
pop
xchg
push
dec
aam
add
jecxz
mov
in
fs
cmp
lea
cli
inc
push
ljmp
pop
pop
popa
shll
ja
sub
lahf
jg
xchg
push
das
aad
cld
cmp
js
arpl
test
mov
or
int3
std
or
enter
out
mov
jle
lret
cmp
popa
daa
les
mov
jnp
dec
mov
dec
add
fs
es
movsl
xor
xchg
pop
dec
cmp
xchg
iret
icebp
testw
jp
jo
pop
shrl
scas
or
sub
xchg
sub
sub
xchg
mov
xlat
sub
addl
cmpl
adc
testl
push
push
je
push
dec
pop
jmp
call
mov
sbb
call
add
in
adc
clc
push
or
xor
mov
stc
add
ja
rcrl
sub
dec
fmuls
dec
sub
pop
out
test
pop
lahf
popf
scas
push
enter
stc
clc
or
dec
jp
in
ds
pop
hlt
dec
shrb
xor
mov
rcrb
stc
insb
pushf
imul
push
aaa
sbb
adc
pop
mov
push
mov
lods
das
pop
ss
jbe
out
in
mov
push
dec
jle
xor
iret
mov
call
stos
pop
xchg
out
jo
adc
lahf
lcall
lret
mov
push
jge
divb
cli
jo
sub
rorl
dec
sub
pusha
jmp
aaa
xchg
imul
outsl
dec
clc
push
adc
push
dec
or
mov
push
mov
ss
xchg
lret
enter
or
subl
loop
xor
push
add
and
xchg
enter
ljmp
pop
mov
add
mov
imul
push
loope
inc
mov
mov
cmp
cmp
insl
xor
push
jg
add
lahf
add
ljmp
push
sbb
mov
in
dec
into
divl
int
push
add
or
nop
add
push
jmp
mov
mov
outsb
imul
mov
in
mov
aam
pop
mov
shl
outsb
rclb
sbb
xor
inc
pop
pop
jb
setb
hlt
lahf
fwait
inc
fcmovnu
test
loop
push
dec
movsb
nop
adc
or
sbb
into
mov
pusha
daa
scas
lcall
lret
mov
out
push
lret
jns
add
cmpsb
sbb
repnz
push
test
insl
mov
pushf
lahf
or
dec
fsubrl
fwait
inc
mov
rcrb
sub
mov
adc
push
xchg
pop
ja
shl
into
pop
out
scas
clc
daa
xor
daa
or
pop
sub
push
aam
fcomip
inc
sub
mov
cmp
mov
push
imul
icebp
xchg
cmpsb
out
fmull
mov
out
lods
clc
arpl
sbb
sub
cmpsl
add
cmp
cli
in
rcrl
iret
mov
ds
mov
outsl
dec
push
cs
clc
int
mov
xlat
cmp
adc
inc
repz
les
into
dec
push
jg
inc
jp
test
ret
std
cltd
std
sbb
inc
mov
pusha
sub
mov
jno
push
adc
mov
mov
mov
sbb
push
inc
js
sarb
cmp
mov
pop
cltd
cmpsl
inc
ficoml
fldcw
out
cwtl
and
cmp
ss
and
lcall
or
and
nop
inc
test
fwait
inc
mov
addr16
dec
push
and
lret
push
fcompl
and
in
pop
sbb
hlt
jmp
pushf
mov
and
and
jle
or
movsl
iret
mov
inc
not
leave
rorl
push
repnz
add
shl
mov
jb
mov
add
mov
and
shrl
or
int3
in
sbb
push
lock
flds
daa
mov
jl
shrb
lret
iret
sbb
testl
sub
not
sub
dec
clc
gs
adc
rol
test
adc
or
adc
iret
addl
pop
leave
push
sbb
sahf
xor
push
test
stos
cmp
loop
ljmp
pop
in
and
and
jne
mov
jno
xor
test
cmpl
mov
fadd
daa
sub
call
inc
call
insl
scas
or
mov
push
xor
int
testl
bnd
xchg
lods
push
xor
inc
jmp
mov
push
aam
mov
xor
add
mov
xchg
jecxz
jbe
lret
cwtl
sahf
movsb
in
xor
xchg
fucomip
leave
adc
gs
xlat
ficoms
sbb
add
cmc
mov
or
mov
fidivrl
cmp
push
dec
sub
or
adc
out
xchg
ss
leave
es
rol
rolb
mov
cmp
ss
inc
out
lret
test
push
adc
fildl
cmp
add
pushf
push
setge
sub
pop
dec
cmpsb
dec
push
arpl
les
mull
aaa
push
or
cmp
icebp
imul
xchg
lods
add
cmp
bound
xchg
mov
adc
pop
pop
jno
sti
stos
jg
push
dec
rcll
mov
pusha
adc
sub
mov
mov
lea
xchg
fcmovbe
sub
in
pop
jae
or
inc
fdivl
rcr
mov
sub
leave
cmp
mov
lahf
mov
bound
pop
xchg
std
into
loop
sti
jl
pop
stc
push
nop
fmull
fiaddl
xlat
sbb
ss
lock
mov
and
imul
xor
jp
pop
mov
cmpsl
call
lret
popl
adc
lds
enter
sub
jnp
int3
pop
cmp
sub
stos
and
test
adcb
sub
daa
je
lods
dec
jl
cs
stc
out
xor
or
ss
bswap
adc
fistl
pop
call
sbb
mov
dec
in
jecxz
xchg
mov
rcrl
push
mov
das
in
xchg
fs
lods
lods
xor
fmul
data16
jl
aaa
aad
jle
in
cli
push
fucomp
dec
mov
fbstp
fcomps
not
pushf
rolb
popfw
add
jb
stos
daa
in
dec
lret
arpl
out
jle
push
popa
daa
dec
test
shll
lcall
andb
xchg
xor
adc
mov
mov
test
test
scas
jnp
enter
fs
mov
imul
add
imul
or
ret
sub
push
add
in
mov
inc
mov
dec
jg
dec
cmp
dec
push
dec
dec
jge
push
inc
xchg
pop
out
aas
shll
push
mov
pop
arpl
ret
xchg
add
movb
in
mov
cwtl
push
dec
or
shrb
fsubp
mov
push
outsl
dec
shl
jnp
push
les
sub
xlat
out
scas
iret
jg
pop
mov
or
mov
add
aam
sbbl
xor
xchg
and
pop
out
jl
imul
jge
pushf
adc
lds
jno
cwtl
out
sbb
movsl
int3
mov
push
adc
cs
lcall
aas
repz
cmp
push
mov
cmp
dec
fstps
ds
or
dec
sub
adc
xor
inc
fs
mov
loope
repnz
and
ficomps
sub
jle
xchg
or
and
ss
ljmp
xchg
mov
xor
sub
sub
out
nop
lret
icebp
adc
dec
mov
jb
jp
xchg
mov
lcall
or
sub
or
push
cld
pop
cltd
pop
sti
lock
push
dec
or
test
cmp
test
cltd
sbbl
mov
mov
pop
add
lret
loopne
out
mov
sar
cltd
mov
dec
xor
vpaddb
js
add
repnz
mov
xor
xchg
mov
sub
adc
cmp
add
jnp
and
popa
movsb
pop
cmp
adc
les
and
xor
int3
cld
fs
xchg
pcmpgtb
jp
cld
adc
jle
in
rorb
popa
aas
fdivp
lods
xor
cmp
shrb
in
jbe
inc
cli
cmpsl
addr16
lea
pop
xchg
addb
mov
or
or
out
mov
pusha
leave
test
xor
clc
dec
and
xchg
fsubs
movb
adc
es
add
push
inc
and
cmpsl
dec
push
push
sti
dec
out
dec
xor
mov
aaa
and
aam
pop
pop
xchg
xor
enter
lods
inc
bound
sarb
and
cmp
mov
inc
pop
xchg
add
sbb
add
ficoms
fistps
or
pop
dec
or
mov
nop
push
test
movsb
pop
sbb
scas
pop
out
stos
fcomp
jle
add
dec
jge
and
ror
pop
movsb
ds
mov
aam
push
out
addl
repz
addr16
jp
aas
cmpsb
inc
mov
push
setne
inc
mov
add
or
mov
mov
hlt
jns
daa
dec
sbb
out
outsl
mov
sahf
arpl
cmp
inc
sub
pop
mov
adc
sahf
icebp
aad
popf
das
hlt
mov
cmp
mov
xor
mov
pop
add
clc
and
fiaddl
mov
hlt
insl
push
pop
mov
sub
icebp
fsubl
jmp
ljmp
jl
jae
shrb
cmp
loope
mov
push
pusha
jbe
xchg
insl
pop
pop
out
sbb
out
cmpsb
aad
mov
aas
dec
inc
daa
inc
mov
insb
cltd
jne
mulb
adc
sub
cmp
mov
inc
cli
pop
ror
sbb
bound
dec
icebp
mov
out
lret
dec
jno
add
or
jb
jne
bound
fbld
dec
xchg
jne
push
jp
jmp
stc
pop
in
cmpsb
scas
dec
mov
dec
das
push
shll
subb
test
add
out
fs
push
mov
pop
nop
inc
sub
shll
sbb
add
fwait
scas
or
xchg
pop
fdivs
mov
popf
out
je
cmpsl
test
mov
xchg
rolb
cmpsl
lahf
jno
dec
sbb
mov
jge
int3
pop
stos
pop
outsl
push
mov
xor
outsb
mov
inc
sub
sub
inc
mov
fdivl
xchg
pop
loop
sub
adc
in
fsubs
lahf
push
stos
rolb
jle
adc
scas
jne
dec
pmulhuw
shrl
in
les
addr16
movsb
in
fs
stc
jbe
mov
mov
add
add
je,pn
loopne
xchg
repnz
mov
loop
movsl
bnd
in
mov
enter
test
sbb
out
cmp
xor
pop
add
cmp
xor
push
or
fnstsw
pop
insb
aam
sub
out
ret
xor
sub
cmp
cmpsl
inc
sbb
enter
dec
sub
je
sub
adc
negl
in
pop
jp
push
cmp
cwtl
xor
imul
dec
push
sbb
xchg
ja
push
jl
fsts
sbb
push
into
mov
jb
test
jecxz
fistl
xor
lds
pop
cs
push
push
sub
popa
loopne
daa
jp
int
lds
xchg
mov
mov
mov
in
subb
adc
in
fwait
out
xchg
dec
fnstcw
push
and
loope
sbb
pop
icebp
jmp
mov
cmp
xchg
gs
scas
adc
sub
or
adcl
jns
sbb
or
add
jle
sbb
mov
xor
mov
call
repz
mov
lds
inc
mov
pop
not
imul
adc
imul
push
lea
adc
or
lahf
ljmp
inc
push
scas
jno
sub
sub
mov
test
ftst
sbb
fldl
shrl
cmp
mov
jmp
orl
jecxz
fdivrs
call
into
pushf
out
hlt
cwtl
add
inc
inc
test
in
pop
cmp
idiv
or
jnp
pop
adc
dec
lret
or
out
sub
hlt
jae
sbb
jg
ds
test
jne
stc
addr16
add
cmpsb
push
jle
movsl
or
decl
pushf
arpl
dec
std
and
cmpl
enter
or
aad
pop
das
cld
movsl
jne
or
neg
mov
cmpsb
add
push
das
in
jne
lods
cmp
adc
in
dec
and
outsl
int3
rcr
jmp
pop
xor
mov
cmp
data16
xchg
cli
fsts
or
mov
lahf
bound
hlt
pop
in
jle
adc
pop
sub
cmp
inc
push
icebp
rdpmc
jle
or
in
and
and
pushf
aad
mov
mov
xchg
jns
jp
xchg
test
xchg
cmp
cmc
mov
movsl
mov
xchg
or
int3
push
jmp
lret
jae
pushf
rolb
roll
and
xchg
es
divb
fdivrl
iret
inc
aaa
add
insl
pop
testb
js
call
inc
ja
inc
pop
fs
mov
aaa
in
stos
hlt
add
hlt
dec
jmp
outsl
or
inc
pop
shr
into
gs
cmp
es
jp
pushf
das
lods
dec
sbb
imul
test
out
adcl
movsl
adc
or
sahf
rcll
rorl
mov
mov
cmc
or
lcall
fmull
icebp
add
jno
popa
jmp
push
loope
cmp
and
lret
mov
out
adc
push
mov
mov
shll
jnp
loopne
cld
das
ret
lret
inc
jle
sbb
lret
rorl
rcrl
dec
push
test
aad
pop
cs
cltd
ja
add
mov
cmp
mov
push
mov
inc
inc
push
cmpsb
cmpsl
mov
lcall
jge
jno
and
xchg
sbb
mov
adc
imul
lret
jmp
adc
loop
jg
sbb
nop
int
fidivs
jp
sub
and
loopne
je
sub
rcrl
or
sti
inc
in
insb
sub
push
stos
movsb
lods
movsb
inc
adc
pop
nop
xor
xchg
add
adc
xchg
insb
fmull
sub
roll
push
fcomp
and
andb
icebp
add
adc
fs
out
int3
data16
fldenv
out
mov
stos
in
push
inc
mov
xchg
daa
cs
out
loop
scas
test
divb
jae
xor
test
cmc
dec
aad
aam
fidivrl
test
cwtl
add
jb
mov
add
push
xchg
adc
inc
or
test
push
xchg
ret
wrmsr
xchg
push
fists
loopne
test
mov
test
sbb
shrl
nop
les
xor
jmp
aas
jae
lret
out
pop
rcll
dec
jno
iret
mov
rcrb
out
cmp
rcl
mov
sub
cmp
inc
jmp
mov
pop
leave
fcomi
imul
sbb
dec
pop
outsl
and
add
aam
xchg
mov
and
setnp
cmp
add
push
ja
push
jmp
sbb
sbb
movsl
and
and
pop
push
call
sti
xchg
xor
lcall
popf
ret
in
outsl
dec
jbe
add
xacquire
test
outsb
lods
sub
pop
es
aam
in
cwtl
lcall
mov
push
out
push
or
imul
idivb
and
dec
addl
lret
push
pop
sar
add
fsub
call
pushl
cs
addl
mov
dec
xchg
test
dec
iret
mov
loop
xchg
xor
pusha
xor
adc
mov
dec
mov
adc
sbb
into
ljmp
cwtl
jecxz
dec
popa
leave
push
push
gs
scas
sar
sub
mov
pop
test
lahf
jns
pop
and
lahf
fdivs
push
mov
xlat
pop
cmc
stos
jg
pop
dec
into
mov
bound
mov
gs
movsb
es
mov
out
jo
adc
or
xor
inc
in
xchg
rorb
lods
mov
inc
int
push
scas
fmull
xor
add
cmc
in
lods
sub
inc
push
imul
sbb
push
mov
cmpb
add
push
in
sub
xor
push
fbstp
push
add
ret
mov
das
fbld
mov
sbb
push
loopne
push
sbb
mov
inc
lret
int
jg
out
push
rolb
mov
jle
dec
xor
xchg
ficomps
xor
lret
mov
fbld
jmp
insl
hlt
ja
add
cwtl
fsts
push
pop
roll
pop
jle
out
lahf
xchg
jbe
lods
test
les
sub
insl
mov
je
dec
bound
dec
mov
scas
sbb
push
cmp
movsb
add
in
js
inc
or
and
add
and
pushf
jmp
lahf
sub
iret
pusha
sti
aas
mov
jle
adc
loop
sti
mov
xchg
jnp
or
scas
in
add
cmc
int3
dec
inc
mov
adc
in
popf
ss
push
mov
sahf
xor
push
mov
dec
xchg
popa
into
lea
inc
pop
das
push
daa
mov
out
mov
jp
icebp
loope
and
xor
nop
clc
jmp
add
fmul
jl
mov
ret
or
in
outsl
ret
sbb
mov
call
scas
sub
ret
iret
fidivrl
pop
shlb
or
add
and
aas
dec
mov
mov
lods
adc
dec
jno
ja
jg
daa
imul
int
mov
mov
mov
bound
jp
pushf
sbb
das
cmp
mov
mov
ss
out
mov
xor
xor
cmp
mov
or
call
lcall
xchg
in
mov
push
dec
in
fdivs
adc
cld
mov
ljmp
and
in
mov
ljmp
outsl
mov
mov
dec
test
ds
cmpsb
fildl
sbb
push
mov
sub
repnz
xchg
movsl
clc
les
icebp
lods
xor
ja
dec
inc
adc
int3
sbb
test
xchg
bound
je
mov
sti
mov
pop
popf
arpl
stos
xchg
mov
cmp
xchg
jmp
in
mov
jno
push
outsl
jmp
lock
fiadds
out
lds
test
xchg
in
add
pop
inc
adc
cmc
jns
out
sub
rol
fsubrp
sub
stos
xchg
es
xlat
fadd
jecxz
fcoms
popa
arpl
jne
mov
jae
imul
mov
jne
dec
fdivr
dec
sub
rcrb
fidivs
and
xchg
imul
mov
cmc
sbb
dec
mulb
stos
icebp
je
pusha
pushf
dec
mov
mov
imul
ss
adc
sahf
aam
rcrb
inc
dec
pusha
push
inc
stos
xchg
mov
daa
and
sahf
and
andl
fucomip
add
in
xor
adc
cmp
sub
imul
mov
add
or
xor
leave
push
jns
xor
mov
or
cmp
dec
mov
sub
xor
lret
out
dec
lock
aam
pop
jne
xchg
dec
cmp
dec
scas
inc
mov
addb
add
lea
in
pop
pop
sar
jle
sub
int
sbb
aam
iret
arpl
in
mov
outsl
cmp
and
das
xorb
adc
push
xorl
and
push
loope
sub
xor
jae
lds
shll
iret
push
pop
loope
dec
push
rorb
fstl
in
sub
sbb
iret
mov
mov
hlt
shld
xchg
lock
cmp
mov
scas
pop
movsb
sbb
cli
aam
or
inc
mov
insl
and
mov
test
test
sub
xchg
mov
xlat
mov
popf
dec
mov
dec
push
mov
lock
out
pop
push
cmp
iret
and
mov
imul
or
xor
idivb
push
xor
int3
mov
adcb
mov
cmp
jno
test
fcomps
out
xchg
cmpsl
not
mov
in
subb
and
test
adc
jmp
je
fadds
rclb
ret
mov
loopne
jmp
adc
lret
fcmovu
or
outsl
inc
sub
push
fimull
push
test
test
idivl
pop
add
adcl
js
out
or
cld
daa
popa
inc
xor
cld
cmp
daa
jl
outsb
repz
mov
subl
pop
adcl
fnstcw
int3
xchg
pop
fs
lock
xlat
imul
cwtl
shrl
fidivrs
mov
mov
rcrb
lret
fisttps
sub
imul
inc
pop
jg
add
in
std
xor
stc
mov
jp
cmpsb
push
pop
rolb
ret
imul
mov
cmp
loop
pop
xchg
mov
fimuls
test
lods
mov
dec
frstor
xchg
xor
out
dec
pop
adc
add
cmp
sbbl
xor
sub
sar
enter
xor
dec
jle
imul
int
sub
movd
lds
dec
fisubrs
pushf
sub
sub
sar
add
xchg
xor
into
xchg
pop
scas
push
push
mov
mov
mov
lcall
dec
and
inc
fsubl
or
cltd
insl
dec
insl
xchg
push
mov
dec
xchg
add
popa
xchg
add
mov
dec
fcoml
sub
push
dec
xor
ds
lcall
sbb
andb
sbb
and
xorl
cs
lods
test
sti
mov
sub
into
adc
addb
imul
pop
dec
dec
addl
xchg
jle
clc
xchg
sbb
faddl
sbb
mov
pop
ljmp
or
pushf
daa
xor
jno
dec
loopne
out
cltd
nop
insl
mov
cmp
and
xor
adc
std
aam
mov
inc
sub
sbb
pushl
jp
int
icebp
test
mov
das
int
andps
jae
xor
fdivl
lcall
gs
loope
pushf
mov
int
mov
dec
pop
xor
cld
shl
sub
psignw
and
mov
rcl
mov
lods
xor
mov
ret
push
aam
and
xor
xchg
xor
in
out
cltd
fmull
outsl
popf
repnz
insb
or
shlb
clc
xor
hlt
sub
cmpsb
pop
add
push
fs
test
inc
adc
popa
adc
jecxz
mov
cmpsl
push
in
ja
ficoms
inc
mov
into
xor
cld
shll
mov
fcompl
mov
std
inc
scas
or
jg
rcl
jecxz
cltd
jo
loope
fiadds
cmpsl
mov
ret
pop
mov
inc
jno
cmp
dec
jp
pop
loop
popa
popf
dec
rclb
outsb
xlat
mov
test
mov
pop
decb
mov
aad
add
movsl
mov
and
movsb
out
mov
pop
outsb
mov
and
rcl
jae
dec
int3
mov
dec
push
imul
into
lcall
sbb
pop
xchg
std
xor
jno
jo
insl
ss
cmpsb
xchg
les
jmp
pop
mov
xchg
out
int3
adc
sbb
dec
js
repz
out
jb
call
ds
imul
out
or
mov
or
jp
std
adc
ds
add
ret
int3
in
and
enter
arpl
push
das
idiv
aam
jl
jns
inc
outsl
repnz
mov
dec
jmp
cmp
mov
jmp
subb
adc
xor
lods
inc
in
ds
mov
pop
jne
or
fsts
cmpsb
js
dec
lods
pop
xchg
pop
data16
inc
push
mov
jnp
sarl
xchg
scas
pop
cmp
ds
adc
cli
mov
imul
sti
pop
sbb
xchg
mov
adc
cli
jbe
icebp
mov
pop
cltd
outsb
adc
xchg
mov
jecxz
xor
sar
ja
arpl
mov
cmp
add
outsb
mov
negl
lea
xchg
lret
xchg
jns
lret
jne
jp
inc
sarl
idiv
clc
jns
xlat
addl
push
dec
add
insb
lahf
adc
stc
jle
out
cmp
repz
jge
jo
and
lds
xchg
jbe
add
in
xchg
arpl
push
out
sub
push
jns
xor
push
pop
loop
pop
clc
jne
cld
aaa
test
sub
nop
shlb
mov
in
add
mov
jle
sarb
jge
stos
icebp
adc
cmpsl
sbb
mov
lret
fisubrl
addb
fwait
push
fadd
jecxz
dec
adc
sub
adc
lds
fmull
ss
and
dec
mov
xchg
and
jns
pusha
push
fbld
cmp
xlat
jnp
xchg
push
aas
and
dec
adc
popf
cmp
or
mov
xor
inc
in
adc
imul
icebp
mov
fsubs
jo
cli
ret
sbb
movsl
cltd
inc
pop
sarb
dec
adc
add
stos
sbb
lods
sbb
add
mov
xchg
addr16
cmp
lret
mov
sbb
cmpsb
or
ja
pop
jp
fimuls
and
bswap
lgs
and
mov
imul
add
push
mov
add
dec
dec
mov
andb
movsb
inc
test
jl
aam
jae
jne
gs
int3
nop
pop
ja
pushf
lock
cmp
js
int3
loope
pop
fadds
xchg
scas
adc
arpl
mov
inc
jge
inc
pop
inc
add
leave
stos
sub
insl
negl
mov
loop
pop
dec
test
dec
jae
fucom
addr16
sbb
and
or
scas
in
hlt
in
inc
or
lods
in
sub
push
popa
sbb
jne
loope
xchg
bnd
test
cmc
dec
and
leave
inc
jne
cmc
and
cmp
repnz
mov
inc
push
mov
jne
xchg
cmp
pusha
in
fstpt
dec
jnp
into
ja,pt
add
inc
push
cld
insl
cmp
fst
lock
ret
in
mov
movsb
mov
adc
in
ljmp
sub
sbb
addr16
or
repz
dec
mov
sub
aas
adc
or
push
push
popf
movsl
lds
xorb
dec
add
pop
xchg
mov
scas
outsl
lcall
mov
pop
sub
lock
or
stc
inc
inc
add
xchg
inc
movb
rolb
or
lods
xchg
adc
sahf
xchg
sbb
xchg
pop
lods
rol
sbb
sbb
sahf
popf
xchg
adc
test
jp
sub
pop
mov
lcall
push
or
and
ljmp
mov
hlt
mov
movsb
xchg
cwtl
mov
stc
sub
inc
shr
cmp
fs
push
jg
out
sbb
popa
pop
lds
cmp
testl
test
sub
and
sub
lock
je
lcall
inc
inc
jge
in
cmp
push
mov
inc
inc
adc
lock
mov
imul
and
push
fiadds
or
fiaddl
or
push
shlb
xor
xchg
or
and
dec
jmp
test
dec
mov
in
inc
mov
push
fdivrs
xor
inc
mov
mov
clc
xchg
movsl
inc
imul
addr16
imul
xor
cmpsl
in
int
pusha
pminub
cmpsl
xor
pop
scas
lret
pop
stos
or
mov
out
inc
jl
add
mov
into
pop
xchg
fwait
lods
ja
ja
adc
mov
aam
push
mov
out
or
jecxz
adc
push
aam
movsl
insl
jo
and
cmpb
push
xor
test
les
cmp
popf
mov
dec
sub
mov
fldcw
xor
xor
pop
mov
pop
inc
jnp
adc
sbb
inc
out
in
jmp
outsl
nop
push
sub
int
sub
sub
add
jecxz
inc
leave
push
push
popf
push
pop
fidivs
lret
or
movsl
or
xor
mov
pop
or
mov
pop
add
sub
fst
test
fiadds
lods
cmp
pop
inc
outsl
in
or
jae
or
bound
push
call
lds
ret
loop
nop
test
movsl
mov
scas
inc
or
ljmp
lcall
mov
in
sbb
mov
gs
in
popa
or
xchg
jb
rorl
sbb
inc
sbb
cmpsb
jbe
lods
mov
dec
cld
ds
lds
push
ss
fistl
in
jnp
and
out
sarl
mov
mov
inc
cmpsb
les
dec
lods
fiaddl
out
mov
loop
pop
sub
lock
pop
inc
leave
xor
popf
xor
imul
jmp
cmp
sub
mov
dec
mov
sub
lret
xor
mov
fwait
push
and
dec
xchg
shlb
cltd
clc
jge
xor
cmp
stc
pop
or
into
ss
imul
pop
movsl
adc
in
mov
mov
repz
push
out
pop
cs
jmp
fwait
ror
push
pop
sub
push
jle
and
mov
insl
fldl
std
mov
pop
xchg
cmp
je
inc
add
add
push
push
nop
cmp
fildl
in
add
add
mov
add
loopne
pushf
and
inc
insb
leave
daa
mov
cmp
les
mov
lock
xchg
ss
cmovae
pop
rorl
mov
neg
mov
mov
mov
jle
fwait
jbe
bound
int3
or
aas
cmp
scas
xchg
sti
daa
xor
cli
mov
xchg
add
jbe
adc
call
mov
inc
push
pop
clc
leave
cmp
movsb
pusha
push
and
mov
push
mov
mov
dec
pop
mov
pop
rcll
call
in
cltd
das
adc
testb
sbb
out
jle
cmp
push
pop
jno
int3
leave
push
es
stc
xor
push
xchg
mov
loopne
cwtl
adc
lods
mov
loop
sahf
xor
pop
lock
xor
clc
cmpsb
les
xor
ret
in
xchg
sbbl
sbb
bound
test
lds
mov
sub
lahf
mov
mov
inc
pop
xchg
jg
imul
dec
scas
scas
push
setnp
jl
imul
adc
lods
adc
stos
and
xlat
push
sub
aas
or
push
adc
mov
arpl
dec
dec
sbb
jnp
xor
enter
std
cs
mov
repz
clc
test
jl
and
jno
pop
sbb
loopne
jbe
sbb
mov
dec
shll
cwtl
and
arpl
pushf
pop
aas
inc
les
fiadds
movsl
jnp
aaa
jne
in
fldt
lcall
test
jge
cmp
in
adc
xlat
es
mov
and
dec
inc
push
jmp
cld
xor
stc
jnp
xlat
jg
lods
mov
cmpsb
imul
mov
mov
in
arpl
inc
jne
pop
popf
add
xor
imul
mov
xchg
cmp
mov
hlt
mov
daa
jbe
inc
jmp
lds
in
test
lret
cmpsl
sub
fisttpl
shlb
mov
add
xchg
pusha
and
add
and
sbb
dec
push
sub
adc
lret
cmp
movsb
adc
inc
and
mov
call
popf
add
sub
dec
mov
out
test
je
bound
cltd
xchg
fmull
es
mov
or
pop
pop
adc
mov
scas
fwait
dec
push
cmp
cltd
loop
adc
mov
sub
pop
aam
add
cmpsl
aaa
xchg
mov
inc
fists
dec
rcl
xchg
repnz
or
out
mov
stc
pop
lock
jp
push
cmp
mov
cli
or
lock
aaa
push
test
xchg
xchg
push
into
push
movsb
or
mov
inc
cld
add
loop
mov
xchg
xor
fmuls
outsl
xor
xor
lret
lahf
sarb
fst
icebp
cld
cmpsb
adc
fcoms
sub
mov
sbb
jne
dec
inc
popa
pop
adc
add
fistps
adc
xor
stos
sub
movsb
mov
mov
pop
std
jg
test
adc
repnz
mov
jmp
jne
mov
test
repnz
into
pop
pop
inc
out
cmp
pop
scas
hlt
movsl
mov
pusha
cmp
lret
sbb
hlt
and
sarl
fldcw
push
ret
mov
cmpsb
mov
jp
fsubrl
jo
dec
fdivl
lcall
push
enter
je
xor
sub
pusha
in
mov
aad
sti
jle
cmp
push
sbb
out
js
fwait
stc
push
lcall
out
hlt
cmpsb
cmc
aad
cld
and
stos
rcrl
xorl
mov
lcall
cli
les
sbb
out
out
in
push
adc
cwtl
or
push
icebp
lods
cmp
repz
leave
cmp
cwtl
cmpb
cs
rorl
gs
and
jno
outsl
addr16
fldt
insl
fsub
iret
enter
incl
out
and
or
push
push
and
push
mov
pop
mov
adc
or
jmp
dec
mov
push
xchg
pop
mov
out
adc
cmp
mov
sbbb
leave
lcall
add
ds
xchg
jmp
adc
rcr
cmp
lods
push
dec
adc
add
imul
push
jecxz
add
cmp
jg
cld
scas
add
fcomip
imulb
stos
sbb
jbe
pop
data16
insl
pushf
cmp
or
mov
sbbl
repz
js
daa
mov
loope
mov
lds
rolb
into
sub
mov
imul
jp
lret
pop
push
pop
mov
sub
xchg
std
sarb
adc
lret
popa
test
iret
fldenv
test
cs
pop
sti
dec
repnz
addr16
add
lret
mov
sbb
adc
jg
lahf
pusha
sbb
xor
outsw
addl
xchg
xchg
pop
ret
mov
movsl
jo
rclb
out
xor
jl
pop
lods
pop
cld
scas
fiaddl
dec
lock
and
gs
mov
lds
scas
jle
test
inc
imul
sahf
inc
pop
push
fldenv
jmp
pop
je
xchg
mov
aaa
mov
or
sub
movsb
or
aas
mov
scas
pop
add
add
repnz
inc
mov
adc
xchg
stc
mov
jae
xchg
sbb
test
push
lahf
jecxz
mov
jg
es
and
cmp
pusha
frstor
repnz
sub
push
mov
aad
jae
mov
test
push
pop
cmp
jl
mov
cmc
inc
lods
mov
cltd
sbb
in
sbb
lret
adc
lds
fs
inc
mov
clc
divl
ja
and
imul
icebp
out
sub
jmp
out
and
ljmp
mov
idivl
and
push
and
incb
pop
out
push
aam
pop
or
mov
dec
fimull
cmpsb
xor
jmp
out
adc
mov
lods
outsl
cmp
sbb
jb
mov
mov
cmp
into
cmp
sti
mov
sahf
xchg
add
xchg
jl
andb
enter
add
lea
push
iret
mov
and
jb
dec
ss
lret
call
pop
mov
lret
cmp
mov
push
cwtl
inc
xchg
sbbl
js
jmp
add
xchg
add
dec
and
cmp
shr
mov
xchg
in
enter
loop
aad
mov
mov
das
int
push
fistps
jge
stos
xchg
scas
aad
int
xchg
pop
out
out
sti
dec
inc
dec
sub
sahf
out
lods
cmc
jae
or
lret
mov
cmc
lods
out
xchg
inc
call
dec
in
xchg
aad
int3
xchg
popa
pop
fwait
jg
mov
and
jl
shlb
xchg
xchg
mov
add
push
outsb
dec
adc
jmp
cmp
push
xchg
mov
jle
negb
lcall
shrl
push
or
loope
imul
outsb
sbb
or
ljmp
xor
or
mov
adc
je
mov
scas
addl
testl
popa
sahf
rorl
rclb
bound
mov
int
jns
lret
jo
sub
inc
out
push
int
and
stos
stos
loop
xor
stos
and
jns
add
fdivrs
add
inc
xchg
es
mov
sub
scas
mov
pop
add
enter
adc
or
sub
cmp
pop
pop
adc
adc
lds
aad
cli
leave
test
scas
push
and
xor
pop
fldenv
push
xchg
cmpsl
push
loop
or
mov
mov
out
shl
adc
mov
inc
jp
aaa
lcall
repnz
jnp
lcall
mov
testl
or
sbb
jns
jns
xchg
cmp
or
dec
push
mov
jmp
xor
lock
cmp
xlat
stc
pop
jnp
sbb
insl
dec
pop
mov
sbb
arpl
sub
mov
call
mov
addr16
outsb
pop
xchg
and
xchg
loop
test
mov
mov
incl
xor
ret
jo
lret
dec
mov
aas
test
xorl
sub
call
cmp
jnp
lret
or
and
fcom
dec
or
lret
repz
push
mov
cmp
sub
mov
mov
jl
inc
out
xchg
jp
mov
mov
incb
mov
mov
sub
jle
push
add
filds
fcomps
mov
aam
test
rol
lock
shl
xor
out
cltd
pop
cmpsb
adc
sbb
ds
mov
les
push
lret
and
cwtl
mov
sub
loop
sub
mov
sub
add
jo
pushf
xor
sti
mov
sbbl
cmp
xor
sarl
mov
in
cmpsl
aam
paddsw
adc
sti
repnz
rcrl
lods
jle
jo
jle
test
sbb
jno
aaa
imul
sti
clc
mov
int3
push
lcall
jmp
ds
or
add
pop
xor
sub
jl
adc
arpl
and
ljmp
dec
jns
jmp
xbegin
sub
ror
add
mov
dec
xchg
pop
div
mov
fdivl
jl
aaa
adc
lret
xor
xchg
ds
stos
movsb
loope
scas
xor
js
add
outsb
das
fdivrl
shll
in
xor
addr16
ret
bound
mov
stos
sub
movsl
sarb
and
adc
push
flds
sub
imul
xor
stc
or
fdivrs
sub
fnstsw
movsb
subl
or
fmuls
jg
daa
fsubl
fnop
mov
dec
or
push
mov
shrl
push
int3
jmp
and
jmp
and
cwtl
jno
xchg
dec
adc
mov
test
subl
mov
fildl
mov
push
pop
les
adc
gs
push
dec
sbb
push
loop
mov
push
imul
add
es
sbb
mov
test
imul
mov
inc
mov
inc
lods
jmp
mov
aas
movsb
jmp
push
and
push
and
insl
mov
push
jb
sbb
xchg
cmp
imul
mov
call
imul
xchg
jle
dec
or
inc
mov
mov
mov
inc
call
dec
mov
ljmp
pop
mov
dec
std
fnstsw
inc
out
es
lret
jmp
dec
gs
lcall
sub
subl
xchg
cmp
cmp
push
pop
cmp
scas
std
sti
mov
jo
fs
xchg
cli
sahf
xor
push
inc
pusha
push
loop
push
iret
ljmp
xor
cld
cwtl
stos
aaa
inc
jl
dec
jo
sbb
insb
jns
xor
clc
nop
add
popf
pop
rcrl
sub
jnp
pop
cmp
mov
cmc
inc
leave
dec
sbb
mov
outsb
jge
or
loope
fdivrs
mov
pop
push
sbb
inc
cmpsl
out
sbb
loopne
int
xchg
icebp
test
sbb
cmc
imul
fwait
push
jbe
mov
pop
push
enter
in
in
cmp
adc
cli
lock
int
mov
inc
mov
jle
fadds
fisubrs
cli
jae
and
std
adc
or
pop
cld
xchg
sub
shrl
sbb
pop
daa
clc
pusha
jne
shlb
lret
jo
jecxz
sti
sub
jmp
cmp
in
fwait
pop
lods
cmp
scas
xchg
xchg
adc
shlb
sbb
clc
xchg
repz
push
xchg
and
int3
mov
or
rol
ss
rorb
dec
scas
pop
inc
jno
mov
pop
mov
dec
fsubr
pmovmskb
and
and
leave
repz
dec
sahf
call
loope
aaa
call
les
aas
inc
cmp
inc
pop
push
insl
dec
fwait
insl
fwait
sbb
lret
mov
int3
or
xor
xor
jmp
mov
loopne
popa
addb
push
iret
jae
sbb
pop
lods
out
sub
fistpl
push
lahf
call
mov
iret
in
cmpsb
enter
aaa
jp
jle
mov
and
call
enter
push
push
fcmovb
out
loopne
sti
imul
mov
and
gs
pusha
push
mov
adc
xor
insl
imul
push
jmp
push
test
ret
inc
adc
dec
addr16
popa
mul
sahf
mov
stos
mov
insl
loope
daa
jecxz
popf
je
fcoml
and
inc
mov
push
dec
xchg
test
jae
mov
and
push
cld
test
push
mov
std
jl
sbb
lock
sbb
and
inc
test
cmp
lcall
or
js
test
adc
and
sub
xor
fxch
sti
cmp
mov
out
ficompl
cs
fildll
or
fsubr
movsb
jbe
mov
pop
sub
mov
adc
add
inc
pop
ss
push
jge
add
into
jno
cmp
xlat
dec
pushf
loop
gs
clc
loopne
xchg
test
inc
loopne
insb
mov
fs
xchg
in
dec
jecxz
outsb
daa
mov
fisttpl
sbb
cmp
sbb
fs
jo
or
or
leave
push
addr16
add
cld
sti
lcall
ja
aaa
mov
pop
ljmp
pop
in
sarb
imul
pop
nop
dec
xor
inc
mov
or
jle
dec
aad
aam
popf
cmp
call
xchg
daa
mov
nop
shrl
jbe
scas
rcl
nop
xchg
sub
sbb
mov
in
jecxz
xor
jnp
fidivl
push
adc
jge
addr16
aad
adc
and
notl
cmc
aaa
mov
add
inc
xchg
insl
pop
popf
or
or
std
call
sub
jno
and
xor
xchg
mov
lock
jne
cvtps2pi
cmpsl
xchg
inc
test
fisttpl
test
fsubrl
jp,pn
ds
adc
cmp
fs
xorl
mov
cld
push
add
fwait
rcrb
pop
sub
mov
push
je
ss
fmuls
or
lret
sbb
es
scas
nop
xchg
sar
pop
das
sbbl
outsl
imul
cli
pop
mov
or
mov
lea
adcb
adc
dec
mov
mov
in
mov
roll
pop
dec
fists
sub
icebp
fwait
mov
add
ljmp
xor
imul
fidivs
lahf
mov
aas
mov
mov
cmp
sahf
fiaddl
insl
jg
imul
mov
imul
adc
xor
mov
pop
daa
adc
and
pop
rolb
push
push
jo
xlat
cmp
jbe
lahf
dec
addr16
lock
inc
sub
xchg
and
in
shlb
add
sbbl
add
jns
test
mov
mov
dec
test
data16
xchg
inc
cmpb
add
pop
fcompl
mov
scas
inc
add
shl
dec
cmp
psubb
fst
out
or
sub
les
roll
xchg
mov
mov
mov
mov
add
int
pop
sbb
subb
adc
pop
scas
inc
dec
mov
mov
divb
add
call
inc
sub
mov
loope
clc
loopne
ret
pop
adc
mov
xorb
dec
pop
or
inc
and
sti
push
xchg
jnp
cmp
jb
xchg
pop
xchg
cld
ret
push
addb
mov
and
push
movsb
lea
int
or
mov
pop
comiss
enter
xchg
jnp
lock
mov
fldpi
idiv
and
cmp
jg
inc
mov
mov
lret
jmp
scas
push
shrl
inc
add
inc
push
lock
or
gs
push
mov
dec
dec
ljmp
mov
sysret
out
dec
push
movsb
cmp
adcb
aas
movsl
mov
fbld
push
loopne
clc
fdiv
sub
mov
pop
push
sub
pop
ficoml
xchg
lods
lea
push
push
jl
and
pop
clc
das
jle
test
xchg
mov
push
inc
sub
lea
test
xchg
xchg
adc
daa
cmp
cmp
push
adc
loopne
call
mov
inc
stc
lock
cmpsb
iret
dec
jle
dec
xlat
ds
xor
pop
pop
mov
repz
int
gs
xchg
ret
mov
mov
xchg
lea
shlb
or
mov
and
movsb
mov
jb
jb
fimull
sub
mov
xchg
scas
repz
fcomip
arpl
loop
add
push
or
repz
mov
jp,pn
cmp
ret
and
scas
aas
adc
ss
sbbl
dec
das
jmp
mov
lahf
int3
sub
incl
inc
add
and
sbb
sti
mov
popa
faddp
jg
pop
lods
pop
sub
cmp
inc
lock
out
inc
andl
push
ss
mov
sub
stos
jecxz
cmp
mov
repz
pop
bound
mov
cmp
inc
xchg
jbe
sbb
rorl
aad
xor
jbe
lahf
mov
mov
arpl
test
push
imul
sahf
adc
xor
sbb
sbb
pop
test
lods
out
jecxz
movsl
leave
xchg
add
imul
cs
leave
notl
dec
cmp
xor
jns
jnp
ljmp
cmp
xchg
cs
pop
popa
ja
movsb
sti
jne
sub
pushf
inc
mov
mov
dec
cs
jecxz
pop
jmp
mov
cwtl
pusha
xchg
jge
inc
shrb
dec
push
mov
in
scas
imul
sub
out
or
sbb
dec
add
mov
test
imulb
xchg
sti
cmp
mov
imul
ret
cli
mov
dec
dec
fcom
test
xchg
jecxz
flds
mov
sbb
sbb
scas
je
rorb
aam
sbb
mov
ljmp
mov
and
fwait
test
mov
inc
jmp
ss
sbb
stc
push
dec
popf
sub
add
mov
lret
iret
dec
ror
xchg
xchg
xchg
sub
and
or
fmull
or
popf
std
rorb
push
lret
cmc
xor
sub
in
cmp
jo
lds
popa
popf
inc
jae
rcll
cmp
lcall
xor
xchg
jge
sahf
mov
pop
dec
xor
outsl
xchg
mov
xchg
xlat
stos
sbb
fsqrt
aas
inc
cli
nop
aas
adc
xchg
pop
add
sub
push
shlb
std
mov
jge
int
mov
push
mulb
aaa
or
mov
leave
xchg
pop
pop
cwtl
int
xchg
jne
dec
sbb
push
and
xchg
mov
out
sarl
pop
les
sbb
addr16
arpl
rolb
dec
imul
pop
sub
lcall
push
daa
mov
aad
xor
scas
dec
sbb
push
fstpt
inc
fs
jne
outsl
fs
test
data16
scas
push
jecxz
rol
stos
cmp
loopne
mov
je
out
int3
shr
and
out
out
call
cmpb
mov
cmp
int
jge
fcmovnb
test
jbe
loop
insb
gs
dec
mov
clc
jns
repz
xchg
test
int3
inc
xchg
xchg
mov
and
and
mov
into
mov
fwait
test
xorb
sub
aaa
lods
pop
pop
out
xchg
push
xor
movsl
mov
cmc
ret
xor
inc
sbb
incl
push
mov
and
mov
jns
sbb
lcall
xchg
xchg
mov
out
lgs
mov
mov
pop
inc
adc
int3
in
clc
dec
cmc
pusha
push
mov
lcall
sbb
push
insb
fisttpll
xor
mov
insb
repnz
adc
and
mov
movsl
xchg
lock
pop
cld
fiaddl
xchg
xor
movsl
shl
jbe
pop
dec
jnp
and
faddp
aam
mov
push
mov
in
ret
mov
out
rclb
sub
sub
or
sub
sub
sti
pop
jecxz,pn
mov
xor
push
cmc
loopne
in
adc
xor
mov
ror
sbb
enter
iret
cwtl
or
hlt
lods
cmpsl
adc
cmp
mov
movl
mov
les
add
scas
ud0
sub
pusha
aas
leave
push
test
mov
punpckhdq
imul
inc
xchg
lret
scas
cld
cmp
std
pop
fsubrl
jno
lcall
cpuid
out
in
lret
inc
and
and
sbb
xchg
mov
test
xor
mov
xchg
shr
or
xor
sbb
fidivl
jl
ds
fisttpll
enter
or
rcrb
jecxz
popa
mov
shr
loope
into
add
lods
mov
dec
xchg
xchg
ret
xor
ret
pop
aad
push
stc
fstp
jb
fs
popf
dec
fadd
pusha
popa
stc
imul
int3
xchg
xchg
mov
xchg
sub
movsl
and
data16
pop
jno
out
inc
aas
sbb
inc
jno
xchg
test
inc
or
adc
hlt
lcall
addr16
xchg
push
pop
and
jne
test
push
cwtl
mov
adcb
mov
cli
cmp
cmc
mov
std
daa
mov
popf
push
inc
xchg
inc
shll
cmp
or
subl
gs
out
mov
jg
and
insl
cli
cltd
ret
add
imul
jge
xchg
movsb
and
int3
scas
inc
sbb
pop
sbb
leave
lock
jecxz
mov
cmp
lods
loopne
std
ffree
into
imul
int3
lret
addl
in
mov
sbb
pop
add
dec
cmpsb
inc
inc
dec
add
arpl
mov
into
or
aam
data16
icebp
cmp
or
cli
dec
add
mov
push
sbb
out
mov
dec
inc
push
stos
arpl
xchg
lcall
lret
mov
es
imul
ffree
push
push
or
adc
imul
xchg
mov
cwtl
iret
adc
das
addr16
inc
and
arpl
adc
ficompl
orl
mov
lret
ds
testl
jns
pop
lret
xchg
test
outsb
jns
jp
and
push
jnp
jae
mov
sub
adc
xlat
and
data16
mov
sti
out
lea
out
inc
in
jmp
push
scas
push
xor
outsl
mov
mov
lock
mov
jae
movsb
fstpl
push
xchg
cli
clc
shrb
xor
mov
xchg
mov
outsb
rcrl
xor
inc
cwtl
negb
popf
and
dec
andl
cld
dec
and
test
mov
gs
stos
inc
repz
mov
xchg
inc
mov
mov
xor
lods
cmp
rorb
popf
xchg
sbb
lret
stos
mov
inc
dec
mov
ror
xorb
outsb
push
divl
or
leave
out
cmp
sbb
sub
mov
pop
out
subb
sub
mov
xor
iret
mov
pop
jno
loopne
mov
pop
iret
push
inc
inc
and
mov
arpl
push
out
mov
ror
inc
data16
sub
loope
sub
sti
loopne
or
mov
imul
dec
sbb
jb
popf
push
push
add
outsl
xor
sahf
push
jecxz
push
mov
jbe
pop
rol
imul
xchg
mov
jmp
scas
lret
inc
mov
mov
out
add
stos
mov
je
mov
push
xlat
in
dec
mov
sub
mov
jbe
and
lcall
add
mov
pop
dec
mov
in
std
mov
into
xchg
dec
loope
stos
test
icebp
xorl
inc
fsubr
and
push
xor
add
push
cmp
int
jmp
sub
rclb
sbb
sub
mov
loopne
adc
xor
dec
adc
jae
test
pop
mov
in
mov
addb
jae
cmp
xor
js
lahf
or
and
ret
nop
or
cmpsl
in
adc
loope
cmp
mov
pop
int3
les
out
and
iret
push
js
sub
xor
or
or
mov
sbb
mov
movsl
mov
aam
xlat
divb
xorl
push
cmpb
ret
sarb
mov
sub
clc
mov
mov
arpl
in
cmc
mov
cmc
fcomp
mov
xchg
jb
cmp
lret
fwait
daa
lds
dec
sbb
movsb
ret
dec
cltd
pop
xchg
std
mov
cmpsl
ss
adc
push
lods
push
test
push
aas
popw
cmpsl
or
adc
inc
lods
jo
add
adc
repz
cmp
add
or
stc
movsb
inc
cwtl
aas
es
xchg
aas
inc
adc
daa
add
js
outsl
xchg
gs
xor
das
fsubrl
pusha
clc
jmp
popf
inc
xchg
jle
xor
pusha
fsub
es
or
pop
jl
daa
fs
sbb
push
pop
rcl
push
imul
loope
in
sub
cmp
pop
repnz
pop
aaa
js
insb
sbb
in
lahf
notl
adc
sub
incb
mov
fld
fbstp
int
jmp
lahf
xor
xor
cmpsb
ja
or
xchg
ret
cmpsb
cwtl
push
adc
movsl
jo
mov
sub
icebp
loopne
orb
mov
add
fcmovb
mov
leave
add
or
dec
es
mov
aad
cmp
icebp
push
push
popf
and
fildll
fwait
push
dec
outsl
or
lods
bound
imul
sub
xchg
dec
and
cmp
shll
pop
dec
adc
xchg
je
jne
sbb
push
clc
inc
ret
push
out
add
jp
mov
sbb
fistpll
mov
and
cs
lret
mov
cwtl
std
or
hlt
push
jecxz
sub
jmp
push
and
pop
push
fldl
test
sbb
push
sub
push
je,pn
mov
mov
unpcklps
jg
mov
dec
dec
lcallw
mov
lds
lahf
jl
pop
jge
fwait
cmp
ljmp
sbb
mov
jmp
sti
test
ljmp
ja
in
ficoml
sti
in
sbb
vpsubsw
push
fsubl
in
jmp
sbb
insb
or
mov
inc
sbb
dec
fwait
xor
les
jmp
out
jl
call
add
sbb
add
loopne
jl
push
jo
add
pop
dec
pop
sub
bnd
lods
lret
push
cmc
outsb
ja
jp
loopne
sbb
adc
sub
ds
orb
movsl
xchg
shll
fisubl
ja
andb
cmpsl
fisttps
sbb
imul
pop
xor
movsl
dec
imul
sti
pop
sub
les
adc
dec
jbe
sti
ret
xor
shrl
inc
push
add
cld
jp
mov
imul
mov
xchg
xor
pushf
push
in
scas
xchg
sbb
sbb
jg
iret
repnz
lods
xchg
pop
pop
in
popl
jns
cmp
aas
stos
mov
and
push
jo
cwtl
mov
fld1
rcr
push
inc
mov
or
inc
lods
incl
mov
mov
movsl
pop
and
mov
xor
pop
dec
in
push
je
icebp
mov
mov
mov
fninit
xchg
mov
aam
dec
jp
leave
std
bound
js,pn
outsb
mov
pusha
jb
jns
movsb
out
lcall
div
mov
jae
int
dec
adc
mov
ja
test
cmp
cli
pop
iret
sbb
push
das
sahf
mov
jns
cltd
mov
mov
aas
mov
or
cs
xchg
xchg
mov
rol
xchg
mov
xchg
cwtl
add
test
popa
cwtl
mov
ds
adc
pop
inc
mov
outsb
aaa
xlat
xor
push
fwait
leave
in
nop
in
adc
inc
xchg
mov
sarb
lret
jle
popa
cld
or
and
inc
out
gs
je
inc
push
push
arpl
imul
add
pop
pop
outsb
popf
and
xchg
sub
in
add
push
adc
pop
push
mov
mov
sahf
lahf
out
dec
shlb
mov
fs
cmp
fisubrl
js
addb
or
scas
push
lds
and
sbb
or
cmpsb
mov
add
inc
sub
pop
pusha
lret
or
jnp
popa
jno
adc
popf
pop
sub
jle
push
and
fimuls
sbb
ja
div
sbbb
mov
hlt
sarl
movsb
mov
inc
arpl
stc
incb
nop
ljmp
lret
jo
mov
xlat
mov
cld
add
sti
jg
call
mov
inc
inc
pop
xchg
mov
test
je
jb
jle
int
mov
jo
out
shl
test
loope
je
shll
or
mov
add
jge
aam
jge
mov
aam
push
lcall
stc
mov
xchg
das
and
and
mov
jnp
aam
cmp
aam
xchg
loopne
or
inc
leave
xor
cmp
pop
inc
movsl
negl
cmpsl
xchg
sub
adc
mov
push
cmpl
jmp
xchg
rclb
rol
push
std
pop
sbbl
push
pop
adc
je
fnstenv
fdivl
test
test
xor
ljmp
roll
pop
dec
fmull
adc
and
pop
xor
pop
or
mov
lret
test
pop
xchg
push
aaa
test
lock
or
inc
dec
sbb
jne
outsl
cwtl
push
pop
adc
push
jnp
aas
mov
out
jle
out
dec
ret
fidivl
fldenv
mov
subb
rclb
shlb
sbb
cli
jl
pop
aad
mov
cld
pop
mov
adc
mov
inc
or
imul
xor
idivl
cmpl
cli
jno
xchg
fbstp
xchg
fcmovnb
push
cs
sbb
and
push
xor
les
mov
mov
inc
add
inc
mov
inc
jg
loop
xchg
pop
pop
andb
popf
out
aam
fs
and
daa
jg
int
lcall
in
test
mov
cs
mov
out
cmp
in
lret
divb
xchg
dec
insb
pop
cs
in
in
ficomps
jge
and
cmp
mov
cltd
mov
push
hlt
sbb
call
mov
shll
cmpsl
cmp
movsl
nop
push
sbb
loopne
addr16
fldenv
aad
mov
out
cmp
pop
pop
jmp
aam
adc
jns,pn
bound
xchg
sbb
jp
dec
stos
cld
dec
sbb
inc
imul
lret
mov
xchg
gs
mov
mov
jne
xchg
mov
fwait
psrlw
inc
insb
cwtl
jbe
std
cmpsl
popf
sbb
mov
mov
sub
clc
shlb
pop
cmpsb
mov
fstp
push
das
sub
cmp
pop
arpl
shlb
ljmp
arpl
mov
pop
mov
cld
adc
int3
cmp
fsub
jge
stos
mov
and
mov
add
and
inc
lret
adc
out
push
cli
cltd
clc
jp
pop
icebp
jecxz
test
cmp
fs
sub
dec
inc
movsl
jmp
cs
gs
xor
mov
je
jle
out
nop
mov
test
pop
pop
and
or
nop
pop
jo
ss
push
aas
add
adc
adc
jne
into
pushf
adc
ret
or
fmull
add
mov
xlat
bound
xor
shlb
mov
test
test
sbb
in
stc
dec
pop
scas
and
jns
xlat
xchg
sarb
jmp
addr16
or
jno
jp
xchg
rcll
push
xchg
add
sti
imulb
mov
mov
or
cli
into
xchg
pop
mov
inc
repz
icebp
xlat
xor
and
fidivs
push
mov
fwait
cwtl
sbb
fstpl
in
xchg
jp
ljmp
into
inc
dec
fwait
sub
pusha
mov
push
hlt
inc
test
xor
ds
pop
stc
xchg
ds
es
sbb
sub
dec
mov
cltd
jg
ret
xchg
outsl
arpl
xor
stos
vpunpckhbw
sahf
pop
jbe
mov
pop
icebp
jge
push
mov
fsubl
pop
xchg
stc
jp
adc
pusha
mov
jmp
xchg
fildll
pop
ss
xor
mov
xlat
sti
loop
jo
out
out
nop
mov
xchg
aad
cld
mov
lahf
movsl
ljmp
popf
fbld
out
cmp
shlb
jp
mov
mov
ficoml
cmp
pop
sub
mov
xor
stos
add
stc
mov
dec
sbb
out
sub
dec
ret
daa
cs
das
rdpmc
xor
lahf
mov
xor
ret
mov
xchg
dec
jmp
rorl
fwait
into
push
ret
andb
fdivrs
mov
dec
and
fbstp
addb
bound
int
cld
lret
or
sub
lahf
pop
jnp
das
jge
dec
dec
xor
icebp
repz
inc
or
imul
mov
mov
cmp
loope
mov
sbb
sbb
inc
in
out
shl
lods
ficoml
dec
or
and
push
daa
pop
into
in
icebp
inc
out
jbe
mov
outsb
push
jmp
test
mov
dec
sarb
xchg
sbb
fwait
sbb
push
fisubs
lods
push
cmp
leave
mov
fisttpll
mov
lock
int3
and
mov
dec
or
ds
es
jl
inc
ljmp
jne
push
fiaddl
mov
sbb
adc
loope
lahf
mov
das
in
dec
jno
lea
jb
lret
push
scas
les
or
jp
imul
pop
enter
push
sub
in
outsl
mov
outsl
cmp
inc
sbb
add
and
xor
push
cli
add
cmpsb
hlt
push
shll
mov
int
js
push
lods
test
inc
into
mov
sbb
push
jb
pop
xchg
bound
xchg
mov
and
mov
dec
lods
dec
mov
pop
insl
and
popf
arpl
pop
test
sbb
into
and
das
adc
cmp
xchg
sub
dec
cltd
das
pop
mov
jb
xchg
out
mov
xchg
pop
pop
pop
pop
push
mov
and
idivb
add
test
repz
mov
xor
add
jb
and
dec
xchg
cmpsb
pop
subb
mov
ffreep
jge
cmp
mov
gs
or
sti
jmp
bound
insb
xor
movsl
mov
cwtl
push
popa
add
lret
in
imull
icebp
xchg
sbb
fimuls
cmp
cmp
adc
pop
es
xorl
add
test
icebp
and
call
aaa
adc
pop
into
mov
cmpsb
test
sarl
xor
sub
popf
mov
xchg
xchg
lahf
or
imul
cmp
cmp
xchg
sub
mov
imul
mov
xlat
sbb
in
ljmp
cwtl
fmulp
je
repz
in
scas
adc
jl
fs
repnz
mov
leave
in
nop
xchg
popf
decl
adc
xchg
setno
shrb
aas
cmc
push
lods
jp
ss
out
fwait
cltd
imul
sbbb
mov
and
daa
pop
sbb
nop
out
adc
dec
sbb
pop
das
jge
pushf
inc
mov
pop
and
push
cmpb
pop
pop
lea
push
lock
scas
inc
or
push
mov
jo
add
fstps
mov
jle
pop
sbb
xchg
xor
dec
in
mov
sbb
inc
bound
shlb
cs
jmp
mov
pop
lock
dec
imul
lea
aam
dec
dec
mov
clc
push
add
inc
jae
xor
decb
pop
mov
jle
lods
lock
fdivr
sahf
ljmp
loop
and
mov
adc
and
nop
sub
addr16
iret
shrl
cltd
cmc
sbb
ror
and
mov
mulps
or
cs
aas
or
push
and
mov
out
dec
sahf
mov
pop
xchg
sbb
imul
ret
repnz
mov
pop
cmc
std
ret
or
jae
out
cltd
adc
cmp
int
movsl
cmp
xchg
fwait
cmc
add
xchg
sbb
shll
lods
imul
xor
pop
shlb
mov
xor
imul
cmp
push
mov
sbb
lret
xor
add
loop
out
and
test
rcrb
sti
pop
int3
mov
lahf
push
cmp
hlt
sti
mov
rcrb
xchg
cmpsl
icebp
or
jl
push
ret
test
inc
bound
in
rcrb
cmp
push
sbb
mov
testl
ds
jae
sub
push
mov
cmpl
daa
cmp
in
fdivs
inc
pop
in
orb
inc
mov
sub
inc
sar
ss
pushf
xor
push
leave
sti
adc
xchg
mov
jae
mov
pop
aaa
movsl
fisubl
ds
imul
stos
lock
sub
jmp
xchg
sub
int3
add
shrl
sub
test
pop
mov
das
comiss
stc
jg
inc
add
jb
aaa
dec
call
or
sub
add
sarb
aas
das
stos
test
cld
mov
sub
mov
and
add
aas
pop
jnp
push
repnz
sbb
push
or
inc
popa
cltd
mov
fs
push
inc
inc
mov
scas
in
xlat
sub
mov
fdivs
leave
jge
jns
sahf
xchg
push
out
cmpsl
repnz
xchg
sub
js
shrb
xor
ja
adc
sti
dec
daa
jmp
lods
lret
mov
dec
fisubl
cmc
fisubrs
jmp
and
loop
mov
xchg
mov
inc
test
repnz
inc
sbb
fsubrs
subb
push
fsubrs
inc
rorl
xlat
inc
ret
sti
imul
xor
xor
or
xchg
sbb
jae
xchg
imul
ret
xchg
mov
movsb
lock
mov
fbstp
vphaddubq
outsb
cmp
lret
add
daa
es
ficoms
pop
push
dec
or
jl
jl
mov
jg
dec
shrb
movsl
scas
outsl
hlt
scas
sbb
xor
and
mov
dec
ja
fwait
lds
arpl
dec
popa
and
fxch
jbe
or
cmc
repnz
lahf
cmp
mov
cmp
pop
pop
out
push
lds
xchg
ljmp
jo
cmc
dec
imul
mov
sbb
sbb
loope
xor
mov
cmc
pop
cmp
jg
imull
pushf
cmc
mov
add
clc
rorb
fwait
add
cld
jl
mov
jge
push
pop
add
push
jns
add
xor
popf
aaa
outsl
aas
sbb
dec
xlat
negl
aas
jbe
push
xchg
insb
adc
les
xor
adc
jl
xchg
daa
add
jnp,pt
mov
add
mov
mov
dec
mov
movsl
mov
mov
xchg
sub
jo
arpl
loop
in
jg
jge
lret
adc
sub
scas
loop
cltd
fldcw
mov
fcoms
aad
sbb
movsl
or
mov
pop
pop
push
pusha
stc
xchg
dec
ja
rorb
outsl
test
popa
ficompl
inc
iret
aam
pop
bound
shrl
sahf
jp
mov
clc
clc
push
das
pop
or
mov
das
adc
mov
fs
and
push
mov
xor
xor
sub
and
ljmp
adc
mov
xlat
cmp
enter
push
stos
cwtl
ss
fs
ljmp
jmp
or
adc
or
pop
xchg
imul
xor
and
and
jns
cmc
adc
sbb
out
mov
xor
stc
sub
lock
mov
sbb
adc
ret
lock
cmp
outsb
inc
mov
insl
xor
xor
fs
pop
fidivrl
sbb
mov
clc
sti
add
sub
sub
loope
mov
add
in
cmp
mov
mov
aad
mov
xor
sbb
mov
in
jle
test
movsl
sub
insb
sub
and
cmpsl
arpl
in
test
test
shlb
mov
mov
xor
mov
scas
lahf
push
fcoml
pop
or
dec
lahf
std
shlb
sbb
mov
fildl
adc
and
fcomps
dec
adc
mov
in
out
arpl
dec
mov
test
fsts
add
es
and
add
push
lods
arpl
stos
cmp
aam
dec
shlb
add
push
xor
jbe
mov
mov
fdivl
aam
cli
pop
mov
xchg
dec
ss
mov
cmp
outsb
adc
sbb
call
dec
stos
xchg
pop
fadd
inc
sbb
mov
inc
std
insl
dec
dec
add
mov
jne
xlat
adc
inc
mov
pop
bound
jae
or
mov
lret
pop
pop
xchg
cmpsl
pop
sbb
mov
sbb
and
test
idiv
ds
adc
xor
neg
fidivrl
rol
mov
mov
push
jge
inc
popl
adc
rclb
mov
inc
xor
bound
lods
in
rcl
jge
dec
daa
pop
lret
dec
insb
sub
inc
lock
imul
imul
les
fs
mov
ds
fdivl
mov
enter
dec
bound
inc
cmp
lea
loopne
adc
mov
mov
cwtl
int
fistpll
es
pushf
fdivrs
add
movsb
and
adc
cld
dec
test
and
sub
push
mov
jl
jb
mov
pop
dec
inc
cltd
jae
enter
lahf
lcall
out
push
push
mov
mov
mov
in
push
bound
jbe
push
aad
leave
and
sub
sub
jg
stos
clc
cmp
out
adcl
dec
and
ds
nop
mov
cmpsl
xchg
test
jae
push
out
jge
pop
stos
outsb
fsts
int3
ds
jg
dec
test
aad
lahf
or
int
sub
scas
jns
jmp
cmp
filds
xchg
popa
in
insl
sub
mov
cmp
and
psadbw
inc
out
mov
mov
adc
adc
subl
push
sbb
and
paddusb
push
test
cmp
arpl
mov
xchg
mov
and
pushf
mov
mov
into
sbb
rcr
dec
aas
push
and
mov
inc
dec
stos
fcoml
mov
mov
into
les
add
xorl
popf
mov
jmp
jg
sbb
movsl
push
xchg
jae
jmp
mov
sub
pop
fcmovnb
and
mov
sub
outsb
jg
adc
std
mov
sti
nop
sub
add
push
andb
fiadds
andl
outsl
lcall
aam
in
stc
pop
nop
sti
sbb
fcmovnu
bound
aam
sbb
push
testl
mov
cmp
mov
jl
jmp
mov
mov
out
xchg
mov
fistpll
lcall
jns
js
mov
push
xor
push
mov
mov
push
jecxz
mov
cld
xchg
aam
lret
pop
inc
xor
mov
ljmp
pop
cmp
inc
daa
and
pushl
xlat
insl
insb
adc
loopne
rcl
aas
mov
pop
imul
push
xor
jmp
cmpl
das
pop
lock
pmaxub
and
pop
movl
dec
pop
cmp
stos
xchg
sarb
lds
mov
fbld
jnp
sbb
inc
mov
mov
cltd
xchg
lods
mov
testl
out
xor
fs
or
daa
and
stos
xor
loop
and
js
pop
aam
mov
dec
push
arpl
es
sub
cmpsb
push
in
mov
sarl
jno
lret
mov
stc
jg
std
cld
push
imul
mov
int
loop
sti
mov
cli
enter
repnz
or
and
add
or
push
rorb
sbb
shrb
into
pushf
fcoms
in
inc
loope
xor
mov
std
push
inc
mov
in
adc
mov
and
pop
cli
mov
icebp
pop
jecxz
jp
adc
mov
hlt
cmc
xor
jbe
faddl
jle
mov
fsubp
jp
mov
pop
push
xchg
jle
lahf
popa
aas
xor
mov
fsubr
aaa
xor
xor
leave
cmp
pop
push
sub
xor
mov
pop
adc
sbb
cli
xor
xor
fwait
mov
imul
cli
lcall
sbb
push
mov
arpl
les
push
sbb
jne
out
jnp
adc
arpl
or
mov
in
jp
jns
mov
icebp
jmp
jmp
xchg
into
xchg
mov
fnstenv
rcrb
test
jmp
daa
cmp
push
mov
and
js
xchg
fst
xor
testl
lea
pop
sub
dec
fs
add
mov
mov
xchg
xchg
dec
add
in
and
insl
mov
icebp
lret
mov
dec
pop
aam
fiadds
sbb
cmp
lcall
cmp
and
add
stc
int
mov
test
xor
in
addb
xor
test
push
fcoml
iret
mov
pop
xorl
std
mov
mov
fsubrl
xchg
je
rorl
inc
ffree
lds
cmp
mov
test
test
sub
mov
pop
incl
stos
mov
add
lret
mov
stos
xchg
inc
mov
fsub
int3
mov
xchg
test
scas
dec
cwtl
xchg
dec
daa
int3
mov
jbe
bnd
sbb
in
imul
jge
call
cwtl
inc
xchg
and
mov
sbb
push
rcrl
nop
loopne
fwait
sbb
push
inc
out
lods
outsb
push
dec
mov
mov
pop
loope
cli
sahf
out
add
inc
fidivrs
flds
push
daa
pop
lods
mov
mov
jne
mov
pop
mov
dec
pop
xor
pop
roll
sbb
fldenv
cmp
test
mov
or
add
mov
jmp
mov
cmp
iret
cmc
inc
lret
push
shrb
clc
pop
cmpsl
mov
mov
aaa
sbb
enter
mov
pop
lahf
xlat
mov
mov
xchg
std
bound
push
sub
outsb
mov
pop
hlt
sub
or
out
cli
xchg
push
into
xchg
fidivrl
andb
sbb
cmpsb
push
ljmp
mov
xchg
into
hlt
push
push
pop
jae
jne
lods
aam
inc
mov
enter
mov
sbb
aas
orb
mov
hlt
cmp
mov
adc
call
outsb
jnp
xchg
and
movsb
xor
sbb
xchg
mov
iret
xor
fwait
inc
popa
mov
inc
pop
xlat
mov
add
jnp
pusha
and
shlb
and
cmp
pop
mov
mov
push
sbb
bound
add
and
pop
mov
or
add
insb
lods
fadds
out
mov
daa
jecxz
xchg
pop
popl
adc
sub
xchg
pop
jecxz
popf
xor
enter
rorb
pop
xchg
or
jge,pn
and
int3
loopne
jo
mov
jmp
dec
dec
mov
push
pop
and
and
xchg
and
and
cmp
mov
dec
mov
jg
sahf
xchg
aad
mov
pop
hlt
ret
cmpsb
inc
jmp
xchg
jno
scas
xor
mov
add
icebp
sub
outsl
frstor
xchg
lods
xor
lcall
and
sub
data16
std
add
movsl
ret
lahf
lahf
and
jns
mov
pop
pop
adc
aas
jmp
clc
mov
xchg
loopne
ss
mov
push
inc
add
cmp
js
fucomip
lods
mov
scas
pop
jno
popl
pop
xchg
mov
imul
in
dec
adc
das
dec
xor
hlt
fnstcw
addr16
sub
inc
jp
ret
sbb
aad
mov
or
mov
aad
sub
popf
and
xchg
push
hlt
lahf
stc
out
int
mov
int3
mov
xchg
cmp
js
subb
sub
daa
leave
mov
fwait
adc
mov
fmuls
je
cmc
aam
stos
adc
ja
sti
push
and
fistpll
jnp
dec
xchg
inc
jb
aam
jns
in
aas
dec
mov
mov
and
jl
fdivrs
ss
stos
jnp
call
push
les
arpl
cmpsb
adc
ds
mov
jl
aam
lock
mov
loope
test
cmp
inc
cmc
cmp
cmp
dec
cmpsb
xor
pop
pop
sub
pop
and
js
cmp
outsl
out
cltd
mov
in
scas
mov
fnsave
insb
pop
push
or
add
adc
fildl
xchg
sahf
sti
arpl
sbb
imul
dec
outsb
xchg
addb
test
addr16
mov
mov
idiv
add
pop
call
inc
idivb
lret
dec
jnp
lods
divb
shr
pusha
mov
inc
jl
movl
repz
mov
pop
mov
push
scas
mov
pop
jbe
and
fdivl
pop
adc
rolb
lret
fdivl
mov
or
mov
rol
insb
jecxz
add
clc
and
test
pop
and
push
andnps
out
sarb
and
cld
dec
fidivrs
out
xchg
fmull
out
dec
xor
scas
test
int3
repz
inc
xchg
jns
int
pusha
inc
nop
pop
ret
mov
clc
stos
lods
inc
dec
add
icebp
xor
mov
inc
aas
inc
cmp
rcrl
mov
ja
cmp
or
encls
xlat
scas
sub
or
xchg
or
pop
mov
cmc
insl
inc
push
adc
fsubs
inc
xor
cmp
add
and
das
and
insl
pop
shll
icebp
and
or
cli
push
sub
lock
push
add
je
mov
jb
inc
or
leave
or
cli
xchg
ret
je,pt
in
test
mov
jae
repnz
out
mov
sub
fisubrs
cmp
out
shrb
mov
daa
mov
mov
xchg
push
aad
push
mov
cli
add
mov
imul
ss
sub
sbb
sub
sarl
and
fbld
pop
mov
vprotb
jne
pop
or
or
loop,pt
or
sub
rorb
int
xchg
hlt
and
dec
pop
fbstp
int3
pop
pushl
pushf
lods
sub
enter
pop
xor
test
test
int
mov
xchg
jae
mov
fildl
xor
shl
out
scas
std
stos
fcomi
leave
jae
fdivs
mov
adc
xchg
and
inc
cli
cmp
push
cmp
pop
mov
jo
idivl
cmp
jge
jecxz
push
sbb
mov
xor
push
push
push
rclb
pushf
test
inc
rorb
fcomps
sarl
sti
add
mov
xchg
stc
mov
pop
sub
push
rcrb
add
xchg
inc
cmp
lahf
xor
adcb
sbb
jmp
je
mov
xchg
lret
fs
jmp
int3
lcall
popa
cld
cmc
mov
pop
pop
mov
jne
dec
mov
ret
inc
loope
pop
out
adc
ret
int3
sub
ja
sbbl
stos
dec
inc
aas
add
notl
in
jge
sub
repz
sbb
lock
sbb
xchg
ds
pop
push
cmp
es
sbb
xor
jle
or
je
mulb
mov
mov
add
cmp
int
js
jl
mov
aam
mov
mov
fmuls
pop
cmp
out
xchg
into
outsb
fxch
cli
aam
ret
mov
sti
mov
rcl
inc
ret
fiaddl
push
shlb
insl
cmpsl
pop
pop
test
lcall
movsl
jbe
sub
cmp
jmp
mov
adc
cmp
and
sbb
jae
adc
mov
icebp
inc
cmc
pushf
std
adc
jecxz
mov
mov
scas
adc
and
sbb
jp
lea
xlat
pop
fisubl
int
dec
lods
mov
out
fisubrs
sbb
inc
xor
or
jmp
and
jmp
lds
push
sub
sbb
and
insb
push
sbb
or
int
push
les
js
fildll
jl
repz
mov
aas
sub
lods
imul
mov
or
dec
jns
stc
fdivrl
push
and
mov
ds
jge
gs
jne
stos
mov
lock
stc
movsl
and
jg
xchg
and
or
lret
out
popf
jnp
dec
or
adc
sub
ds
jbe
jne
or
lock
push
int3
in
sub
out
in
mov
push
out
out
lods
clc
or
and
xlat
inc
pop
cmp
mov
dec
fmull
jo
jne
and
insb
or
rclb
lods
call
leave
inc
mov
jp
mov
cld
mov
mov
mov
mov
hlt
mov
xor
dec
in
and
or
jo
cld
in
aam
mov
jns
rol
pop
jl
xchg
xchg
push
cli
sub
xchg
pusha
dec
ja
out
or
inc
stos
or
xchg
sti
xchg
pop
adc
test
cmp
add
into
mov
lea
xor
adc
sub
xchg
hlt
outsl
push
aas
mul
and
cmp
mull
cmp
mov
inc
mov
xor
mov
sub
adc
xchg
lods
cmc
scas
icebp
mov
sub
ljmp
sub
dec
mov
xor
push
out
ljmp
xor
dec
sub
cld
cmp
push
clc
xor
jg
jmp
lret
hlt
daa
lea
repnz
jno
fmull
test
ljmp
xlat
add
sarl
and
and
stos
sahf
mov
xor
ljmp
pop
repz
hlt
and
aad
xlat
adc
jecxz
or
push
lret
mov
mov
push
sub
dec
jmp
mov
sub
pop
mov
es
pop
test
pop
jnp
aas
xchg
lds
sbb
cli
add
cmpsb
subb
jns
sbb
pmulhuw
jb
dec
sub
sbbb
cmp
pop
clc
leave
sbb
add
cmp
cmpl
mov
shrb
inc
inc
call
iret
add
shlb
mov
imul
ret
loope
fsubrs
les
inc
lret
or
lea
lods
jb
js
das
pop
imul
and
pop
aas
cmp
testb
shlb
sarl
pop
lods
sbb
mov
xchg
mov
or
movsl
push
nop
mov
sbb
xor
orb
sahf
push
sbb
in
inc
out
sub
add
add
pop
push
mov
push
sub
add
das
xor
ffreep
adc
push
mov
or
imul
lea
xchg
pop
push
mov
jg
std
les
jp
cmp
jl
dec
sbb
sub
jne
add
fwait
shlb
push
inc
xchg
xor
test
xor
xchg
das
inc
loopne
jge
dec
sub
xchg
je
repz
xchg
xchg
push
or
dec
sub
aas
and
lret
inc
xchg
out
sbb
mov
dec
adc
xchg
mov
test
outsl
iret
insl
lret
mov
xchg
cli
jno
and
sub
add
cmc
test
fistpll
cmc
enter
push
xlat
inc
negb
mov
sub
jne
and
test
test
xor
sbb
neg
stos
test
dec
xchg
in
inc
dec
mov
inc
push
or
pop
popa
and
cwtl
xchg
mov
imul
mov
dec
aam
stc
xor
sarl
mov
aaa
and
add
fiadds
incl
dec
adc
ret
jne
mov
push
and
imul
mov
jmp
pop
pushf
xchg
popf
add
push
ror
pop
jecxz
lods
and
or
add
sti
ret
fcmovnbe
cmp
add
jmp
xor
ja
inc
outsb
int
mov
nop
fsubs
push
adc
cwtl
iret
jns
dec
xchg
add
stos
jo
sbb
mov
js
and
and
test
pushf
divl
repnz
mov
movsl
je
das
daa
xor
jae
in
cmp
pop
or
push
addr16
data16
push
daa
lret
aaa
sub
jg
stos
xlat
sbb
mov
jb
loopne
fdivl
mov
faddl
adc
icebp
xchg
aam
jbe
sar
and
filds
idiv
xor
or
jge
aam
ljmp
mov
xchg
aam
sbb
mov
test
out
jp
pop
out
lods
push
or
mov
cwtl
lret
jns
hlt
out
imul
jae
push
mov
insb
xchg
in
mov
cli
inc
mov
or
mov
icebp
mov
ret
aam
jle
push
jno
sub
xchg
mov
enter
xchg
sbb
sbb
and
les
sti
dec
sub
out
fsubl
rorl
lcall
in
cmp
pop
fisttpl
xor
movsb
cmpsb
test
jb
lods
mov
mov
arpl
sub
or
enter
add
subl
add
in
shrb
or
cmp
sub
repz
pop
or
cmpsl
cwtl
mov
push
push
push
or
cli
xchg
xchg
fnsave
aad
mov
std
gs
push
pop
mov
in
and
lret
ret
inc
jno
fwait
rcr
mov
pop
cwtl
in
mov
xor
sbbl
ret
aam
dec
cmpsl
gs
scas
call
or
fmull
addr16
fs
movsb
repnz
push
lods
nop
shl
or
stos
data16
mov
insb
inc
pushf
xchg
aas
add
push
fcoms
incl
add
dec
fucomip
bound
or
mov
pop
mov
xor
fists
in
fisttpll
sbb
jge
outsl
and
sbb
aas
and
mov
das
mov
xchg
sub
add
dec
pop
and
pop
movsl
mov
insb
jle
rorl
fdivs
xlat
test
sub
dec
xor
add
mov
pushf
inc
jmp
dec
cs
mov
outsl
xlat
xor
insl
inc
mov
jnp
adc
cmpl
dec
mov
out
hlt
or
lea
stos
dec
cmp
mov
ds
cmc
add
adc
ficoms
loope
dec
mov
cwtl
aas
push
sub
mov
in
xor
mov
andb
pop
push
es
jb
popf
scas
pushf
ljmp
insl
sbbl
mov
idivb
dec
jb
jg
or
outsb
sbb
xchg
add
out
outsb
mov
lret
mov
sub
cmp
cltd
or
pop
movsb
mov
sarl
push
out
dec
loope
dec
mov
test
pop
dec
adc
push
sahf
popa
pushf
aas
aas
rorl
sub
out
test
fwait
je
jne
xor
adc
inc
and
or
test
std
arpl
push
outsl
xlat
rorb
push
leave
jmp
insl
mov
mov
sub
popf
xchg
js
jo
or
jmp
add
fsubrl
cs
pop
add
sub
adc
add
mov
pop
xor
ja
pop
movsl
push
mov
cmp
xchg
cwtl
add
xorb
or
inc
loope
push
fmuls
sub
mov
mov
sbb
dec
int
pop
cmp
mov
jmp
add
xor
push
aad
sub
pop
cwtl
and
add
hlt
and
testb
in
pop
sahf
das
imul
and
int3
xchg
jb
sbb
mov
inc
xchg
sub
in
xchg
inc
mov
mov
jl
push
push
mov
ss
outsb
mov
test
fimull
aaa
mov
pop
iret
cmpsb
in
out
mov
call
jecxz
push
aas
clc
mov
aas
jnp
pop
fldl
mov
loopne
inc
dec
push
mov
push
adc
mov
ret
cmc
jge
sub
adc
inc
adc
push
stc
push
mov
xor
cmp
fwait
in
rcrb
dec
mov
xchg
cmp
push
lahf
cmc
les
stc
mov
add
ljmp
add
lcall
popf
mov
out
cmpsb
cld
mov
clc
inc
iret
adc
push
cmpsb
jbe
push
fisubl
sbb
mov
xchg
loope
push
lods
int3
mov
lods
adc
pusha
incb
out
cwtl
shlb
test
inc
sub
cmc
mov
rolb
packssdw
loopne
push
mov
and
pop
cwtl
stc
pop
sarb
inc
repnz
xchg
push
imulb
out
cmp
ljmp
and
xlat
lcall
call
test
sub
ficoml
inc
jns
pusha
scas
lret
fidivrs
int3
jne
imul
xchg
add
jg
pusha
mov
int
test
fsubrl
lds
in
push
sti
movsl
cmp
lock
enter
jecxz
bound
shl
fs
jl
lret
jb
daa
jae
xor
in
lods
test
add
mov
cmp
lahf
stos
add
xchg
push
out
or
jl
pop
xor
js
stc
dec
ret
iret
ljmp
div
cld
mov
cmp
ds
shrl
mov
mov
mov
pop
outsl
addb
fsubrl
lea
lock
add
mov
and
ds
jb
adc
sub
mov
inc
add
and
push
into
mov
mov
jge
int
add
fdivrl
insl
xchg
loope
jmp
inc
and
rolb
xchg
stos
jl
or
sahf
or
mov
mov
js
pop
shlb
mov
cs
insl
in
cltd
dec
les
or
xchg
sbb
imul
out
hlt
mov
dec
mov
xchg
shl
push
mov
or
icebp
movl
rclb
pop
out
pop
pop
pop
mov
add
sub
imul
imul
jge
je
or
popa
shlb
jo
movsb
inc
lcall
sub
sub
gs
jl
jle
sbb
push
loope
pop
xchg
lahf
xchg
int
mov
jne
or
ror
pop
and
mov
mov
xchg
sbb
adc
jg
addb
out
inc
adc
scas
fcomps
out
dec
jb
adc
cmp
push
inc
mov
into
mov
rclb
mov
xchg
cmp
sub
icebp
inc
mov
repz
dec
notb
dec
xchg
mov
fstps
lock
jo
mull
ja
dec
cld
jb
jle
xlat
pop
pop
leave
movsb
lret
cmpsb
cltd
jnp
imul
popa
inc
pusha
dec
adc
sub
das
imul
test
push
loop
mov
push
jne
out
jg
into
ja
aad
inc
shll
sub
pop
mov
shl
inc
add
movsl
sub
push
js
lret
addr16
ret
xlat
ret
lock
mov
int
imull
push
pop
adc
add
in
shrb
xor
jmp
mov
mov
cld
stos
in
testb
mov
cmp
push
inc
leave
lods
jmp
test
ficoml
mov
add
in
lret
jle
push
sbb
pop
or
push
cs
inc
into
ret
push
adc
push
pop
pop
or
out
inc
dec
pop
js
jnp
mov
add
sub
jbe
cmp
adc
aas
adc
outsl
dec
sbb
adc
or
out
movsl
icebp
add
sub
repz
hlt
frstor
mov
mov
sbb
outsl
out
xor
jne
scas
cmpb
test
call
in
cmp
jl
in
inc
mov
or
lret
dec
xchg
pop
lahf
out
flds
aaa
out
pushf
sahf
fldl
popa
mov
jo
push
sub
in
dec
pop
cs
jb
es
or
push
xorb
mov
inc
insb
sub
or
insb
dec
and
lock
fsubl
jg
push
cmp
xchg
mov
push
aas
imul
inc
mov
dec
xchg
mov
test
push
xor
pop
inc
int3
push
inc
sar
iret
pop
dec
loopne
dec
or
daa
xchg
int3
shlb
or
and
outsb
gs
xchg
sub
pop
mov
mov
cmp
hlt
lret
sbb
lret
xchg
xchg
add
sub
adc
xchg
in
cmpsl
shlb
push
lock
xorb
mov
or
in
lcall
mov
jg
jg
xor
mov
cmp
bound
xchg
jb
lret
dec
and
jg
mov
fidivs
or
cmp
iret
lret
push
mov
pop
mov
mov
jmp
mov
sahf
mov
sbb
pop
arpl
shll
lea
adc
ja
pop
jmp
mov
fwait
push
jnp
cli
cwtl
adc
out
xchg
add
pop
and
imul
test
pop
cli
rol
popf
mov
testl
es
mov
cli
dec
adc
dec
cmp
ja
add
into
sti
jmp
inc
jge
sti
cmc
jl
xchg
iret
in
int
mov
jg
adc
push
call
pop
jnp
frstor
cmpsb
xor
jno
mov
xchg
inc
sbb
ftst
inc
sti
testl
jp
jno
sub
aas
add
xor
mov
das
mov
pusha
pop
cwtl
int
inc
sbb
jo
adc
fisubs
sub
enter
icebp
adc
xchg
jp
stos
push
imul
xor
inc
xchg
fsqrt
inc
mov
test
clc
mov
out
inc
xchg
aam
mov
int
in
test
mov
stc
dec
mov
sbb
les
lods
xchg
sbb
adc
sbb
leave
rolb
xchg
mov
fs
lret
or
cmc
jg
loop
mov
arpl
fstps
sub
mov
ja
ss
in
push
imul
repnz
pop
xchg
inc
fiadds
pop
push
js
std
cmc
jnp
fwait
daa
mov
cmp
fadds
inc
fnstcw
mov
and
pop
pop
xchg
cmp
icebp
ror
dec
jp
adc
aad
mov
lods
and
pop
sbb
sahf
mov
pusha
loope
mov
shl
and
mov
call
mov
inc
int
pop
loope
push
mov
sbb
imul
cltd
and
shrl
addb
divl
repz
popf
movsb
loope
inc
les
iret
iret
cmp
add
dec
adc
mov
lret
mov
mov
shrl
push
mov
and
sub
cmp
jae
mov
push
xchg
dec
mov
lock
pop
xor
stos
cmp
imul
ficoms
xchg
xchg
pusha
insb
xchg
faddl
js
add
sbb
dec
inc
es
push
pop
sbb
insl
hlt
mov
repz
jge
or
xor
cld
dec
mov
cmpsb
xchg
mov
push
in
mov
push
jbe
xor
pop
sub
mov
inc
outsl
pop
ss
cmpsb
in
outsb
jg
xlat
jno
ds
fucomip
lret
lock
dec
mov
inc
call
or
test
shll
xchg
inc
inc
push
push
jmp
xchg
push
cmp
leave
sub
mov
and
cmp
and
jl
mov
dec
fs
inc
mov
xchg
pusha
and
bound
adc
sub
dec
sub
je
outsb
mov
mov
hlt
lods
hlt
adc
xorb
push
sub
out
call
jmp
mov
push
repnz
in
insb
push
jnp
push
push
insl
fists
cli
and
gs
mov
inc
pop
jp
or
jecxz
push
arpl
mov
pushf
mov
out
push
inc
mov
dec
pop
mov
mov
jle
mov
mov
push
cmp
mov
cmpsl
jl
std
inc
repz
push
insl
lods
sarb
sub
scas
fstpt
les
push
cltd
mov
mov
push
jl
arpl
inc
jns
jl
mov
push
cs
fs
or
aas
test
cli
or
fadds
xchg
mull
lods
xchg
mov
aas
pop
xor
addr16
arpl
jno
ja
xchg
dec
lds
sbb
aam
adc
add
cmp
ds
push
clc
cmp
sub
cwtl
jae
mov
sbb
in
cmpsl
fsubs
pop
push
fcmovu
sub
repz
dec
xchg
jne
jns
xor
fs
mov
ret
dec
lret
and
aas
dec
repnz
mov
xor
jle
in
notb
inc
xchg
lcall
js
enter
add
xchg
flds
ret
push
incb
inc
push
insl
mov
hlt
cld
add
imul
data16
fs
sbb
jmp
fcomps
enter
int3
inc
dec
nop
das
pop
add
xchg
ja
jbe
jns
inc
add
cld
push
pop
pop
dec
js
pusha
lods
movsb
addr16
test
andl
pop
icebp
xchg
test
cmp
dec
es
xchg
pop
mov
sub
aas
xchg
mov
dec
leave
jge
sbb
inc
push
lods
push
jb
sub
adc
add
or
pushf
push
sub
in
push
inc
adc
imul
fs
mov
lret
out
icebp
lods
negl
sbb
clc
pop
lods
push
lods
and
insl
jo
push
out
push
icebp
mov
mov
lcall
and
jle
cmp
shl
sbb
lock
test
add
or
int3
fistpl
sub
scas
int3
mov
ds
push
pop
cmp
call
addr16
inc
pop
enter
cmp
and
cmp
dec
out
insl
push
jmpw
loope
sbbb
ss
jmp
ds
ret
mov
sub
test
mov
frstor
flds
mov
xor
cmp
jb
ss
or
stos
mov
push
pop
outsl
xchg
push
orl
pop
scas
decb
add
addb
xchg
outsl
push
sbb
add
mov
mov
jns
xor
int
and
push
cmpsl
lods
dec
lret
andb
mov
jl
mov
pop
outsb
fisttpll
or
xor
fstl
rol
mov
arpl
jle
gs
std
adcl
mov
movsl
and
scas
mov
out
movsl
inc
repz
xchg
dec
jno
es
pop
enter
enter
push
bts
push
notb
inc
out
mov
push
mov
and
or
sbb
mov
push
inc
clc
inc
int
adc
inc
je
gs
into
les
insb
mov
loop
xchg
cmp
sbb
test
and
mov
fsts
fwait
aaa
shr
ret
aam
fcmovne
ds
ret
arpl
cmp
lock
adc
xchg
inc
aam
adc
in
cmpsl
xchg
or
sub
lea
inc
shll
into
adc
in
xchg
mov
into
sbb
lahf
mov
or
xchg
iret
pop
pop
test
add
mov
enter
dec
test
jb
hlt
hlt
pop
pop
shrb
or
xchg
loopne
ret
icebp
aas
popf
mov
bound
imul
aas
test
inc
insb
loopne
sbb
rorb
hlt
icebp
xor
ret
mov
inc
jbe
xchg
fstps
mov
xchg
or
mov
mov
jbe
jae
inc
dec
xchg
xor
xchg
sbb
loopne
pop
pop
orb
enter
sti
xor
mov
insb
xchg
dec
xchg
or
js
not
push
subb
fsubs
mov
jle
lock
fisubs
inc
pop
movsl
in
out
dec
testl
jecxz
jno
fwait
xchg
aaa
mov
push
and
fidivl
adc
add
repz
xchg
and
pop
xchg
mov
mov
cld
shrb
icebp
out
daa
dec
stos
int3
imul
ljmp
movsl
mov
adc
iret
inc
inc
out
in
lds
mov
xor
jle
stos
testl
or
fcomps
clc
xchg
pop
cmp
subb
jno
imul
pop
pop
pop
mov
fldl
jecxz
fwait
mov
sub
and
xor
aas
test
jle
pop
lcall
and
mov
ja
xchg
iret
mov
pop
push
cmpsb
addl
mov
lret
push
dec
cmp
or
iret
pop
mov
xor
push
hlt
cmc
cmp
adc
xchg
dec
xlat
xchg
ja
pop
mov
add
nop
or
mov
and
aaa
inc
das
cmp
faddl
inc
std
fiadds
test
adc
jno
andl
add
daa
mov
adc
idivb
clc
je
cmp
repnz
sbb
lahf
push
mov
pop
repnz
insb
int
faddl
cmp
and
pop
lock
and
cmp
mov
rcl
popa
mov
fmuls
fs
pop
mov
ds
test
pop
inc
shll
cmp
lcall
loopne
xchg
jne
xchg
or
adc
dec
repnz
pusha
lods
mov
iret
push
and
jl
js
push
test
subb
cmpsl
sbb
adc
and
mov
mov
aas
pop
push
aaa
and
sar
or
push
test
iret
loope
lahf
jmp
mov
aaa
cmp
adc
mov
cmp
mov
inc
or
xor
mov
pushf
pushf
das
stc
icebp
pop
or
or
cs
cli
lret
popf
je
sbbl
cmc
mov
xchg
jo
std
test
sub
fbstp
xor
hlt
jecxz
outsl
xchg
xor
pop
push
mov
sbb
test
mov
pop
jle
arpl
cld
fcmovnb
add
xchg
xor
js
sti
in
lcall
push
pop
push
in
push
outsl
scas
mov
adc
popf
jle
dec
sub
ret
pushf
mov
clc
dec
inc
inc
notl
ja
push
int3
shll
mov
insb
pop
dec
cli
cwtl
insl
xor
dec
xlat
sub
inc
sub
push
fildll
aas
fnstcw
push
or
aad
data16
aad
popa
lods
cltd
mov
mov
lret
dec
imul
cs
xchg
pop
popa
xor
popa
in
int3
mov
add
adc
shrl
jnp
cmp
jg
mov
aad
mov
mov
int
lahf
data16
int3
sbb
mov
jae
push
lock
jmp
int3
call
dec
dec
and
mov
call
adc
subb
push
test
xor
enter
pusha
lret
xor
pusha
mov
imul
and
add
je
data16
mov
sub
mov
imul
or
inc
jo
xchg
push
and
xchg
stos
icebp
xor
mov
mov
xchg
add
jne
and
cltd
pop
jle
dec
pop
loop
arpl
nop
pop
imul
stos
sbb
insl
jns
push
mov
lcall
fdivl
popa
jb
push
jae
mov
stos
mov
minps
icebp
fidivl
xchg
push
enter
cli
loop
in
aaa
imul
mov
push
xor
daa
clc
lahf
ja
sbb
btr
sarl
push
loope
inc
mov
jl
std
inc
mov
cli
idiv
rcll
sub
fnsetpm(287
shlb
scas
push
mulb
pop
or
jne
lds
sbb
lods
pop
jo
push
jg
inc
adc
mov
fadds
mov
mov
push
outsl
sbb
push
ret
dec
cmp
pop
lods
dec
mov
dec
dec
pop
cld
into
rcrb
sbb
sub
maxps
popa
push
cmc
jge
pmulhw
push
pop
lret
jo
sbb
mov
xchg
cmpsl
stos
mov
dec
inc
xchg
mov
mov
cmpsl
ljmp
lret
imul
xor
out
aad
daa
das
xchg
pop
rolb
movsb
push
pop
out
jo
mov
jp
jo
fs
pop
mov
push
leave
inc
ja
pop
rorb
in
mov
and
mov
and
clc
cmp
lcall
pop
movsb
iret
jmp
call
cmp
xchg
cmp
orb
jae
test
cmp
pop
test
dec
out
or
shl
js
jge
hlt
ss
mov
mov
cmp
stc
dec
pop
mov
sbb
in
adc
adcl
jns
fistpll
xchg
hlt
shrl
les
mov
idiv
pop
xchg
mov
lock
stc
stos
stos
add
sub
sahf
fimull
mov
dec
ljmp
jno
jns
and
ret
cwtl
imul
out
or
stos
enter
dec
mov
jnp
cmc
fimuls
sub
inc
jg
or
bound
mov
and
mov
sarl
ror
and
push
fistl
in
xchg
cld
pop
sahf
repz
push
mov
adc
push
xor
fidivs
mov
sbb
in
xchg
add
cmp
dec
pop
push
test
mov
je
jne
inc
jns
or
gs
and
adc
inc
push
mov
xor
mov
xchg
orb
mov
stos
movsl
xchg
mov
cld
xchg
lods
loopne
insb
std
mov
sub
xchg
mov
bswap
daa
gs
push
pop
cmpsb
fwait
mov
mov
mov
sbb
fld
mov
dec
stos
jge
mov
repz
ljmp
jo
ret
je
shll
pop
sub
out
in
outsb
leave
fwait
js
push
push
cmp
add
sbb
push
iret
xchg
mov
fisttpl
sbb
les
adc
test
popa
and
xchg
arpl
add
aas
fisttpll
sbb
adc
push
in
int3
popa
pop
mov
push
out
js
shl
and
idivl
inc
xchg
stos
inc
into
mov
cwtl
insb
shrb
stos
out
xchg
mov
rclb
ds
clc
and
jmp
test
cmp
inc
push
xor
xor
sub
push
dec
mov
shll
call
rorb
pop
insl
pop
iret
dec
sbb
aad
mov
or
loopne
or
cmp
fidivs
ret
or
cwtl
xlat
pop
popa
pusha
push
dec
movsl
cmc
imul
xor
sbb
cmpsl
xorl
out
pop
inc
ss
cmp
xchg
and
outsb
or
lods
inc
arpl
sub
dec
mov
pop
push
push
adc
sbbb
out
add
pop
call
ljmp
xor
pop
divl
and
xchg
mov
dec
stos
mov
or
add
fisubrl
pop
test
sub
xchg
rcrl
mov
call
inc
mov
pop
xchg
aaa
sbb
xor
pusha
cmp
pop
ror
dec
mov
mov
inc
clc
pop
push
cmp
call
cmp
or
sub
test
call
inc
sub
jge
rorl
stc
inc
add
cmp
stos
mov
test
scas
ljmp
mov
lock
sbb
fucomi
mov
in
daa
xchg
xchg
and
test
cld
sub
add
xorl
dec
cmp
pusha
xor
addr16
mov
mov
jle
loopne
scas
sub
mov
mov
mov
outsl
pop
test
push
imul
mov
inc
lcall
xor
xor
rcrl
inc
pushf
ret
ljmp
jno
sub
jo
ljmp
es
sbb
testl
xchg
or
xchg
push
rorl
cmp
into
test
in
or
sarl
comiss
aas
mov
xor
int3
push
dec
add
popf
pusha
push
push
fnstcw
lret
push
fists
in
push
adc
inc
dec
xchg
dec
rclb
and
dec
xchg
fmull
loopne
sub
out
jns
sahf
movsl
mov
jmp
in
dec
stos
gs
dec
jp
pop
out
ljmp
dec
into
stos
pop
ret
lret
xchg
or
out
insl
or
inc
ret
fistl
int3
lcall
mov
test
xor
mov
and
inc
sbb
sbb
push
insb
xchg
push
adc
fdivs
cmp
pmaxub
ds
in
loopne
int3
jecxz
movsl
mov
and
xor
jns
xlat
lods
lcall
xchg
xchg
stos
jo
lret
mov
rcrl
ret
movsl
repz
ret
xor
out
jae
mov
pop
stc
fs
daa
repnz
rcr
lahf
fistps
mov
hlt
mov
dec
movntq
push
xchg
nop
cmp
arpl
addr16
dec
fildll
insl
test
test
push
lcall
add
fxch
jb
es
jbe
lods
stc
mov
add
xchg
icebp
addl
inc
dec
add
push
fs
out
add
shll
pop
xor
add
leave
mov
add
rcrl
mov
out
inc
xchg
or
jo
bound
out
mov
outsb
xchg
jbe
aaa
in
iret
bound
cld
xchg
pop
repz
mov
pop
mov
mov
gs
outsb
icebp
push
xor
repz
leave
es
push
push
jle
mov
filds
arpl
cld
push
jge
jne
lret
jge
xor
cmpb
andb
adc
cmp
pop
stc
mov
test
js
dec
rolb
fists
mov
lock
insl
or
pushf
or
rolb
ss
jne
popf
adc
sub
lahf
data16
pop
jmp
hlt
into
push
push
fs
mov
fnstsw
jge
cwtl
add
je
lret
outsb
pusha
lcall
pop
xlat
fwait
rcl
in
mov
cmc
xchg
pop
pusha
or
sub
out
rol
lods
push
adc
mov
xor
daa
pusha
mov
inc
cmp
inc
mov
loope
mov
xor
dec
fcmove
mov
sti
idivb
lods
lods
dec
mov
mov
sbb
xchg
popa
mov
setne
cmpsl
icebp
icebp
adc
stos
fldl
mov
lock
repz
xor
roll
in
jg
sub
rol
sub
incl
add
xor
movsl
movl
jecxz
aas
arpl
int
mov
sub
stc
cmpsl
mov
dec
inc
popf
mov
and
aam
pop
ret
sub
or
pusha
shrl
lahf
push
jae
xchg
or
stos
adc
push
sub
arpl
or
dec
cmpb
dec
xor
jl
cmp
inc
pop
mov
push
aaa
pop
leave
jmp
jns
mov
dec
ret
loop
xchg
icebp
test
clc
imul
and
ss
movsl
mov
mov
and
lahf
lea
mov
push
gs
sbb
in
xor
popf
scas
int
les
imul
pop
pop
cld
or
adc
jge
push
stos
lods
adc
lcall
sar
push
mov
xchg
daa
pop
pusha
inc
popa
aas
popf
daa
out
inc
dec
adc
fisubrs
pop
jg
stc
inc
mov
push
mov
cmp
xchg
mov
push
or
cmc
jg
xlat
nop
sub
or
movsb
push
push
mov
dec
aas
add
xchg
dec
mov
push
adc
jbe
pop
lods
lcall
push
leave
adc
icebp
dec
cld
fsubl
pop
jbe
in
je
push
sub
sub
jge
or
sbb
lret
adc
bound
stos
jae
fdivs
imul
sub
or
mov
adc
sysenter
rol
add
loope
sub
xchg
sbb
cmovnp
cmp
leave
imul
js
call
rorb
xchg
lcall
lahf
push
nop
int3
dec
in
inc
and
fiaddl
stc
mov
and
mov
sbb
push
mov
jl
mov
ja
mov
lcall
cmc
xchg
dec
mov
shrb
jne
sbb
sub
ja
clc
xchg
popf
mov
xchg
push
dec
fsubrs
or
mov
pop
or
inc
jge
arpl
hlt
imul
and
inc
clc
jo
sbb
aam
jnp
cs
and
xchg
les
push
in
arpl
dec
adc
loopne
mov
in
add
lock
cld
jbe
mov
mov
inc
clc
dec
in
xchg
cli
push
inc
mov
push
xchg
sbb
into
and
mov
mov
inc
inc
dec
iret
mov
imul
lds
inc
jle
xchg
je
push
push
lahf
out
mov
mov
inc
popa
ret
adc
ja
cmp
imul
jle
fadds
mov
push
xchg
ja
dec
jmp
mov
cld
nop
xor
frstor
lods
cmc
into
out
jle
sbb
ret
int3
inc
mov
les
mov
mov
cmpsb
mov
lods
incl
jne
pop
insl
addl
push
mov
mull
jp
rorb
test
inc
mov
lret
and
fldl
loopne
das
sahf
iret
or
arpl
jg
movsb
insb
sarb
push
lahf
mov
cmp
loope
cwtl
inc
sub
xor
cmc
ja
push
mov
mov
iret
jnp
sub
push
rorl
in
sbb
ja
sbb
adc
roll
push
mov
std
xchg
pop
and
jle
out
mov
lock
ret
mov
jle
loopne
mov
sti
pop
dec
jno
dec
pusha
xor
mov
or
inc
jle
pop
inc
mov
bound
cltd
gs
xchg
xchg
push
adc
jnp
jge
inc
aam
popa
pop
or
js
push
mov
fisttps
lret
stos
mov
xchg
mov
push
push
andl
xchg
sbb
pop
es
sarl
data16
sub
xor
xchg
fs
dec
das
je
mov
insb
ds
orl
dec
push
mov
pop
out
lahf
movsb
nop
outsb
mov
xchg
mov
cmp
jne
mov
daa
dec
mov
fistpll
and
or
bound
pusha
cs
push
add
xor
stos
pushf
xor
push
sub
fnstcw
and
nopl
notl
out
push
out
sub
pop
xlat
repz
arpl
lods
imul
dec
mov
je
clc
mov
jne
jns
push
idivl
mov
out
mov
sub
xchg
pop
cmc
jno
xabort
mov
insl
fldcw
push
in
xor
jne
cmc
xchg
inc
stos
mov
and
aad
lock
loop
push
xchg
jnp
cwtl
dec
sub
das
shlb
xchg
mov
in
ficoms
push
pop
pop
or
jnp
orb
pop
xlat
fldl
adc
mov
arpl
cltd
sbb
shr
rcrb
xor
inc
push
test
int3
mov
and
mov
xchg
pop
jne
arpl
insb
and
sub
gs
mov
pushl
mov
int
loop
push
push
adc
insb
xor
nop
rcr
push
mov
xchg
push
cmp
icebp
mov
cmpsl
sbb
jl
icebp
adc
aaa
cli
mov
push
push
pop
imul
sbb
insb
xchg
xor
int
ja
push
icebp
fisubl
daa
filds
sub
or
lret
subl
das
sbbl
or
push
mov
xchg
stos
lea
hlt
lock
lds
xlat
sahf
push
in
call
jnp
stos
sbb
sbb
add
sbb
sti
pop
lods
or
adc
mov
inc
sbb
sbb
fs
mov
or
jae
lea
sahf
pushf
jo
mov
outsl
pop
cs
mov
test
xchg
sub
in
adc
push
sub
in
loope
hlt
or
cmp
adc
std
sbb
fidivl
or
mov
mov
and
adc
jbe
xchg
pusha
push
lds
push
shr
and
in
jp
adc
xlat
sahf
push
test
lcall
lret
cmpsb
adc
mov
inc
dec
arpl
and
out
sub
fimuls
movsb
stos
in
mov
and
cmp
hlt
dec
ds
movsl
push
cmc
test
adc
inc
ret
dec
add
dec
es
cli
cmpl
dec
outsl
mov
jnp
lods
ss
sarb
lods
adc
push
xchg
adc
adc
jb
repnz
jmp
repz
sbb
daa
aaa
inc
mov
ss
mov
cmp
jmp
arpl
stc
cmpsl
aad
aas
add
xor
lock
adc
scas
sbbb
cmp
cmpsl
subl
mov
out
js
xchg
mov
lahf
sbb
mov
mov
or
xor
dec
pusha
cmpsl
popf
mov
inc
ja
xchg
rcrb
imul
mov
in
imul
inc
adc
call
dec
outsb
les
push
test
inc
inc
dec
test
rclb
in
pop
xchg
xlat
push
mov
fs
fists
int3
cld
mov
adc
or
mov
icebp
pop
loop
shrl
shrb
cmp
adc
shll
outsl
pop
sbb
in
sahf
sbb
xor
inc
fwait
and
pop
jne
xchg
sub
xlat
je
or
lods
pop
pop
ds
cmc
inc
mov
add
insl
nop
aad
jmp
xchg
jae
mov
mov
sarb
jno
jae
jecxz
or
out
pop
sbb
or
scas
mov
ljmp
in
or
loopne
enter
clc
call
cmp
and
dec
or
ja
cli
leave
sbb
lods
icebp
pop
mov
in
push
fwait
push
sub
xor
cmp
xchg
lcall
mov
jns
lods
sbb
rorl
ret
pop
xor
lret
dec
sbb
addb
adc
pop
mov
ljmp
cmc
leave
out
xor
and
in
negb
sub
or
and
test
push
dec
mulb
dec
popf
leave
das
int
sub
in
je
mov
dec
cmp
mov
ret
adc
iret
das
inc
lea
push
sub
iret
out
scas
and
xlat
and
xchg
push
sti
ja
xchg
imul
jns
rorb
idiv
test
mov
mov
mov
jecxz
lret
sbb
negl
call
icebp
mov
outsb
and
scas
xchg
xor
adc
or
sub
pop
mov
insb
stc
mov
stc
scas
sbb
lea
icebp
adc
in
ret
fmuls
or
pop
pusha
push
mov
loop
cmp
dec
addl
xorb
sbb
sub
insb
sbb
imul
push
into
xor
mov
incb
cmp
cld
test
loope
mov
mov
push
push
push
call
outsb
popf
push
sub
cltd
into
les
orb
dec
adc
in
rcpps
test
xchg
cltd
fs
movsl
test
leave
cmp
movsb
jnp
arpl
mov
adc
mov
xchg
and
int
mov
js
ljmp
in
es
and
repz
imul
lods
idivb
jns
jmp
lret
idivb
rcrl
movsl
aam
or
pop
jl
add
outsl
fiadds
xlat
shrl
iret
push
pop
es
and
or
ja
lods
adc
jl
inc
push
add
cmp
popa
and
pop
mov
sub
jbe
mov
mov
mov
push
std
sbb
rorb
in
mov
leave
or
cmpsl
jae
jle
in
cmp
inc
popf
fcmovnbe
or
in
add
loop
test
sbb
stc
pop
dec
mov
fsubrl
test
imul
lea
mov
dec
fdivrs
dec
movb
mov
fucomip
test
popa
hlt
mov
stc
jb
inc
xlat
out
xchg
arpl
aam
adc
inc
mov
or
mov
mov
push
or
push
lods
cs
mov
hlt
and
push
inc
daa
mov
insb
shll
pop
and
push
cs
xor
mov
pop
cld
mov
push
dec
cmp
mov
notl
and
fcmove
or
popf
ds
call
or
jne
outsb
jno
adc
popa
stc
jb
movsb
adc
cli
and
andb
hlt
jge
mov
mov
inc
jle
pop
mov
in
inc
aad
sub
divl
and
test
in
jno
dec
cmpsb
lods
lcall
adc
and
push
bound
push
xchg
add
sub
xchg
pusha
push
out
roll
cmp
cs
fyl2x
sub
mov
out
inc
and
popa
fmuls
lods
testb
fidivs
outsb
and
dec
pop
call
fiaddl
jmp
test
dec
movsl
aam
bound
mov
push
ffreep
scas
sub
shrl
or
sub
popa
xor
cmp
adc
or
aam
sub
test
out
or
int
ror
xor
mov
push
xor
xor
dec
stos
daa
dec
aaa
fildl
sti
dec
cltd
pop
enter
stc
outsb
movsl
jl
jmp
and
stc
mov
mov
loop
lods
jae
xchg
std
out
fistpll
into
test
fsubl
lds
popf
icebp
push
jo
xor
cwtl
int
or
sbb
inc
es
outsb
push
and
adc
insl
push
jne
mov
out
cmp
into
sbb
and
rcrl
movsb
lret
popa
callw
les
cmc
mov
mov
add
push
fbld
xchg
adc
mov
stos
fstpl
mov
shll
push
mov
push
cmpsl
ja
fs
int3
or
insl
inc
jg
cmp
mov
push
sub
sbb
jno
and
ljmp
xchg
shufps
mov
iret
push
das
sahf
adc
test
or
cwtl
jbe
cmpsb
out
xchg
mov
mov
scas
aas
loop
inc
jbe
outsb
pusha
mov
leave
sub
push
mov
in
pop
fwait
ret
push
dec
call
mov
cmpl
bound
and
andb
imul
stos
ljmp
popa
data16
sbb
pop
pop
sub
outsb
push
lret
xor
mov
add
jecxz
ja
subl
mov
push
cmc
pop
mov
mov
mov
pop
dec
mov
jb
jno
mov
aam
rcrb
jne
jae
cs
das
aam
inc
stos
inc
lret
xlat
jmp
fists
insb
sub
scas
cmp
nop
sub
add
jle
dec
sbb
call
fimuls
cmp
push
das
stos
sbb
mov
xchg
fsubrl
in
pop
repz
xchg
arpl
movsl
repnz
test
cmp
pop
leave
loopne
ret
jmp
sarl
pop
fs
notb
jne
movsl
xchg
lret
push
scas
test
xchg
cld
loopne
push
and
into
mov
inc
push
and
ja
mov
xchg
lret
push
cmpsb
aam
push
or
mov
pop
test
inc
dec
lret
ficoml
sahf
jl
rorb
loopne
cmp
ss
in
scas
cli
push
ss
shlb
scas
jecxz
in
ficomps
pop
pop
mov
fadds
adc
cmp
pusha
jecxz
inc
inc
add
mov
pop
clc
rol
movsl
daa
loopne
jne
lods
pop
mov
sbb
xchg
jno
fstpt
fisttps
notl
xchg
xlat
cwtl
jne
jbe
xchg
cmp
jns
cmpsb
inc
mov
lods
or
ret
ljmp
aas
xchg
stos
pop
or
scas
scas
jle
in
icebp
and
mov
mov
test
test
or
outsb
push
pop
or
add
and
cmp
sarb
addb
pop
std
stos
mov
in
dec
mov
push
shll
add
testl
xchg
xchg
lret
mov
lea
adc
xlat
mov
iret
push
loop
mov
lods
sbb
add
shll
and
fdivr
scas
sbb
adc
inc
repz
dec
mov
int3
jmp
out
inc
mov
fidivs
lret
push
xor
pop
sahf
push
jo
arpl
insl
xor
mov
loopne
fs
ds
stos
int
popf
inc
popa
mov
out
xchg
push
lea
cmp
testb
adc
push
fildll
pusha
es
xchg
rcrl
jb
jle
imul
xor
into
test
jp
lods
sub
bound
lods
fbld
pop
lds
fsubrs
jo
dec
cmpsb
cmp
jae
mov
das
push
xor
mov
push
or
js
test
cmp
testb
andl
add
test
push
pusha
pusha
cmp
push
or
aas
ds
gs
cmpsb
into
inc
icebp
adc
lret
xor
out
jne
daa
mov
adc
adc
push
insl
xor
inc
jae
pop
adc
sbb
and
and
mov
idiv
fstl
daa
push
andl
in
out
jle
push
mov
sbb
pop
es
push
in
push
add
std
outsb
fistl
jb
xchg
shll
add
std
jb
add
lret
mov
fnsave
int
jle
push
xor
ret
xor
into
xchg
cmp
fwait
rcrb
shlb
jecxz
mov
and
icebp
mov
sahf
and
mov
ror
jbe
inc
in
pop
mov
std
sti
cmp
lods
lea
xchg
clc
das
movb
xor
cli
xor
xor
cmp
adc
or
mov
testl
xor
adc
and
push
lock
jae
imul
cmpsb
jns
sub
add
dec
cld
mov
outsb
jge
add
mov
dec
fisttps
xchg
jmp
out
std
les
dec
mov
xchg
lret
aad
cmpl
push
aas
xor
mov
inc
sub
push
ss
fucom
pop
sub
and
stos
ds
ret
leave
mov
leave
jne
add
jg
and
cwtl
xor
and
jo
repnz
dec
out
push
push
push
mov
xlat
pop
pushf
xchg
inc
stc
cli
lahf
xor
mov
pop
out
mov
ret
in
outsb
fisubrl
jp
arpl
pop
mov
test
scas
jg
test
dec
mov
arpl
popf
pop
fmul
sahf
pop
ficoml
push
jo
into
jge
ss
pop
ds
and
sbb
mov
mov
xor
xor
outsl
inc
loope
mov
mov
loopne
dec
jp
add
lret
adc
add
fisttps
sub
push
out
and
or
add
fistpl
jb
cltd
fsubrl
scas
imul
push
lret
subb
pop
jle
mov
icebp
int
mov
and
and
dec
and
or
lcall
mov
mov
dec
inc
stc
push
pop
jae
test
inc
sbb
push
and
fwait
xchg
enter
jno
and
cs
push
out
push
ljmp
lea
dec
cli
inc
gs
dec
cmp
mov
sub
stos
mov
scas
pop
mov
data16
call
jle
cmp
mov
adc
out
in
int
adc
int3
stc
dec
das
imul
and
or
jmp
ret
jb
xchg
mov
icebp
iret
rol
in
mov
pop
out
sub
fsubr
repnz
xchg
mov
jl
add
dec
std
dec
xchg
pushf
out
xor
scas
pop
sarl
lret
mov
sbbb
xchg
shl
jne
pop
shrb
jl
dec
add
stc
pushf
mov
pop
jns
inc
in
and
inc
mov
lds
mov
dec
fisubrs
das
sbb
cld
cmp
ja
out
fisttps
or
sbb
aam
loope
test
dec
data16
and
sbb
daa
mov
mov
outsl
pop
mov
inc
cmpl
neg
loopne
jecxz
inc
pop
or
nop
xor
jbe
xchg
cmp
and
add
loope
popf
aad
fwait
jae
negl
sti
scas
xchg
imul
xor
cmp
sbb
shlb
mov
movsb
jp
mov
mov
out
mov
repz
push
jl
mov
xchg
jecxz
js
mov
mov
sbb
inc
test
hlt
ss
rolb
mov
inc
stos
sti
lahf
and
mov
sbb
arpl
rorb
lret
xchg
insb
lcall
xchg
xlat
outsb
leave
sbb
hlt
jl
sbb
leave
repnz
lods
add
xor
mov
test
sbb
jo
leave
flds
mov
fisubl
mov
sub
inc
es
mov
cltd
ret
notl
outsl
clc
call
sbb
add
sbb
mov
in
add
add
xchg
imul
mov
pop
fcomps
sub
adc
or
pop
lds
fisttpl
jle
jns
xor
cmovs
ja
xchg
xchg
sub
imull
inc
cmp
je
ret
mov
mov
dec
jmp
movsb
xchg
mov
cmp
cmp
push
cli
sub
sub
xchg
sub
inc
dec
pop
leave
and
repnz
push
push
nop
out
xor
xchg
push
sub
jns
and
stc
hlt
dec
sbb
xchg
fmulp
loope
pushf
les
movsl
outsl
arpl
or
inc
pop
rorl
mov
lahf
test
fcompl
push
out
js
je
lret
and
ljmp
ljmp
les
xor
xchg
pop
arpl
mov
jmp
arpl
xor
push
arpl
adc
cmpb
rcrb
aam
int3
cmpsl
daa
jns
jns
cwtl
xor
pop
mov
lock
cmp
stos
cmp
sub
adc
push
gs
sub
movsl
xchg
fucomip
mov
xchg
sysexit
imul
xor
das
popa
push
daa
push
je,pn
inc
sbb
gs
test
dec
and
jns
or
outsl
dec
movsb
leave
clc
add
push
inc
sub
out
cwtl
lods
jb
jns
push
cld
daa
shrb
repz
and
out
adc
and
shll
cmp
sarl
lods
adc
inc
push
ds
pop
stc
xchg
sub
mov
xor
call
test
inc
jp
pop
inc
hlt
les
jmp
inc
pop
popa
sub
fisttpll
inc
mov
xor
ds
mov
xchg
add
push
mov
stos
sbb
adc
in
sbb
pop
and
ret
testb
divl
jnp
push
lock
jle
mov
cs
and
ffree
jae
mov
jmp
jl
stos
cmpsb
pop
frstor
mov
fwait
push
fwait
add
add
jge
sub
dec
add
pop
push
mov
pop
out
adc
pop
jbe
sti
mov
cmovp
or
iret
mov
push
mov
stos
sub
lahf
or
sbb
jecxz
add
or
dec
cmp
div
rol
push
xchg
rcrl
dec
leave
loopne
jp
das
xchg
mov
inc
and
movsb
mulb
repz
push
or
sbb
fldenv
xchg
dec
push
int
add
and
cmp
pop
insl
push
test
xchg
jo
pop
loop
outsl
xchg
and
sar
test
movsl
bound
lret
and
push
inc
test
ljmp
movsl
imul
or
xchg
test
je
loope
pop
insb
fs
mov
sbb
ss
loope
push
jecxz
pop
aas
repnz
mov
push
idivb
mov
jg
jne
push
stos
shl
cmp
fwait
inc
aam
xchg
xor
mov
rorl
mov
inc
xlat
mov
cmp
stos
mov
stos
cmp
adc
test
dec
mov
loop
xor
rcrl
incl
outsb
xchg
mov
popf
rol
cmp
orl
xor
lds
sahf
popf
fstps
add
adc
lea
mov
int3
xchg
repz
iret
pusha
repnz
addl
dec
pop
push
gs
cli
dec
pop
arpl
loope
cld
pop
lret
test
cli
mov
or
jle
cwtl
daa
fndisi(8087
sbb
inc
stc
or
xchg
dec
int3
sbb
lret
cmpb
xchg
lahf
fcompl
gs
push
lods
movsb
inc
mov
adc
mov
sub
sbb
cmp
out
jl
jmp
jbe
xchg
inc
popa
xchg
push
jge
xor
fidivl
mov
cmp
js
sub
adc
jl
fsts
add
mov
pop
jno
push
jmp
jbe
dec
leave
mov
push
dec
dec
es
or
jle
addr16
adc
xor
jmp
vpacksswb
aam
ja
fwait
out
icebp
xchg
dec
mov
mov
mov
fninit
sub
mov
hlt
shlb
jno
add
rorl
pop
and
jnp
loope
lds
or
dec
sti
rcrl
insb
clc
std
lcall
dec
aas
push
mov
push
popl
pop
add
out
adc
cs
out
or
xchg
out
imul
pushl
mov
inc
je
inc
sbb
and
mov
outsb
lcall
jo
dec
jae
cmp
and
sbb
stc
pop
aad
jnp
mov
pop
mov
adc
jl
sub
pop
das
jno
out
xchg
mov
xchg
out
mov
test
jne
cmp
stos
xor
push
arpl
and
xchg
outsl
insl
aaa
mov
jmp
add
insl
imul
in
adc
and
jne
and
movsb
andb
sarb
fistl
daa
outsl
mov
adc
add
and
aad
popf
popf
mov
push
cltd
in
into
and
fadds
out
adc
jne
dec
inc
mov
and
mov
into
int3
or
or
or
hlt
inc
and
mov
inc
in
dec
and
sub
dec
and
lods
mov
add
movsl
scas
iret
stos
xorl
xchg
cmpsl
mov
or
imul
cmp
jns
lret
mov
sti
shlb
imull
mov
stos
jo
cmp
int
sahf
iret
adc
add
sbb
movsl
sarb
mov
mov
cmp
mov
xchg
mov
rorb
ficompl
or
stos
push
test
fsubrs
aam
push
aaa
lcall
cwtl
pop
imul
int3
add
xchg
jb
outsl
push
mov
push
les
dec
ret
or
and
sbb
add
mov
adc
test
fisttpll
lods
xchg
cmp
lea
iret
scas
enter
inc
jae
jbe
jecxz
fadd
test
sbb
or
cmp
aad
loope
pop
ret
sahf
add
das
and
mov
sbb
sub
fwait
mov
sahf
add
push
arpl
jno
int3
aad
shrb
and
and
push
imul
xor
aas
add
add
and
int3
push
inc
add
jnp
pop
and
popf
and
push
cmc
and
jecxz
cmp
inc
add
push
lret
and
cmc
jecxz
jle
dec
shr
mov
pop
bound
leave
mov
mov
lea
aaa
cmc
mov
lea
inc
dec
stc
sbb
xchg
daa
adc
scas
or
xchg
xchg
cmp
mov
aaa
or
adc
push
push
lds
incl
test
push
ljmp
sub
movsl
inc
adc
mov
mov
test
out
inc
and
dec
aad
sub
out
lods
arpl
adc
cmp
and
lods
mov
movsb
jbe
jne
outsb
rcrb
add
dec
jge
fdivrl
inc
bound
fldenvs
int3
ror
xchg
gs
mov
jns
out
jge
xchg
mov
nop
dec
outsl
insl
add
in
pop
fldl
xchg
call
pop
mov
cld
add
test
mov
dec
ljmp
sub
jb
rorb
mov
lahf
divb
jne
or
mov
mov
and
mov
es
adc
repz
jmp
popf
or
pop
dec
jge
into
scas
mov
ja
push
in
jg
push
into
popa
sbb
push
push
push
rcll
mov
mov
ds
insl
in
mov
rcl
mov
adc
out
sti
add
loope
inc
adc
arpl
xchg
inc
ret
xchg
mov
dec
xchg
push
lret
cli
push
xchg
jge
pop
out
fs
sbb
call
pop
adc
stos
loop
sub
leave
push
shlb
rorl
roll
push
daa
add
lock
mov
arpl
mov
sbb
dec
insb
pop
enter
orb
lods
icebp
dec
iret
ret
pop
inc
jb
add
orb
mov
xor
dec
nop
shrb
insb
inc
mov
push
and
inc
jg
or
adc
jg
or
mov
outsb
or
jnp
lea
add
out
addr16
fwait
and
test
xchg
insb
ret
mov
sbb
imul
mov
mov
sub
mov
mov
add
jmp
stc
pop
int
dec
sti
ficompl
mov
push
add
test
insb
xchg
mov
cmp
sbb
mov
cmp
push
jnp
push
add
sub
iret
pop
mov
subb
mov
pusha
outsl
push
addr16
adc
pop
movsl
lods
inc
cltd
fcomps
jo
inc
testb
sti
daa
out
mov
test
std
jns
test
arpl
rcrb
mov
in
mov
rclb
xor
sahf
out
loop
inc
mov
mov
movsb
and
adc
mov
out
add
pop
ja
mov
dec
lret
fwait
shlb
xchg
push
call
fs
sbb
out
je
out
mov
or
xchg
ret
std
es
js
leave
dec
mov
outsb
xor
pushf
add
sbb
repz
pop
sub
and
popf
sub
mov
add
or
stos
pop
or
divl
add
push
into
ds
or
and
push
mov
and
xchg
dec
ljmp
lcall
push
nop
imul
sbb
mov
inc
adc
lock
in
int
arpl
mov
fs
subb
pop
add
imul
shl
imul
mov
ret
xor
outsb
cltd
shrl
inc
ljmp
fistl
outsl
dec
mov
adc
rcrl
mov
shlb
icebp
daa
dec
mov
jp
xchg
cmp
out
or
pop
in
cmp
sbb
pop
fsubr
cmpsl
jae,pt
xchg
mov
movsl
push
mov
scas
xor
fld
ret
mov
es
add
into
xchg
rorb
xchg
inc
movsb
test
es
xchg
repz
mov
movsb
cld
jnp
sbb
cltd
loop
mov
in
insb
add
pop
nop
xchg
mov
xlat
inc
aad
mov
test
inc
mov
mov
adcl
fidivrl
dec
pop
xchg
dec
loope
pop
fmuls
scas
mov
mov
mov
and
dec
cwtl
mov
bound
enter
dec
add
mov
stos
sub
aad
int3
adc
adc
push
lods
cmc
maxps
push
imul
jbe
bound
sub
xchg
cmp
repnz
add
xorl
mov
pop
pop
push
outsl
mov
cmpsb
cmp
out
insb
pushf
mov
lcall
pop
xor
sub
loop
jb
fimull
xor
fs
notl
dec
inc
das
xor
inc
inc
das
lods
or
pop
mov
mov
ss
push
int3
das
jl
pop
pop
cmp
cmp
dec
scas
xchg
mov
inc
xchg
pop
push
xlat
negb
ret
flds
repnz
aam
sbb
cltd
inc
mov
or
lds
loop
lods
outsb
pop
addr16
jge
xor
sbb
jb
shll
xor
ja
lods
push
imul
pop
mov
clc
mov
cmp
push
inc
cmp
lcall
xchg
jno
ss
rolb
notb
xor
stc
adc
pop
cmp
enter
icebp
fisttps
xchg
xchg
mov
and
movsl
inc
fimull
adc
pop
mov
in
xchg
mov
sbb
mov
xchg
or
xchg
dec
mov
mov
mov
pop
or
or
fldl
inc
addr16
test
mov
push
or
inc
pop
mov
icebp
addl
je
jae
sbb
or
xor
je
sbb
pop
hlt
icebp
dec
xlat
push
inc
and
mov
cmp
jecxz
mov
add
push
sbb
shrb
sub
out
inc
pop
dec
or
ficomps
adc
jbe
iret
and
xlat
outsl
sti
mov
nop
ds
es
enter
outsl
movsl
lock
or
addr16
sbb
jmp
add
pop
cli
inc
mov
stos
std
repnz
adcl
add
mov
ja
adc
or
mov
sub
add
test
movsl
sbb
sahf
mov
inc
xchg
iret
push
mov
or
mov
sbb
xchg
inc
xor
or
jmp
mov
mov
cmpsl
add
mov
mov
and
mov
adcb
dec
xchg
mov
pop
int
lds
cmp
loopne
mov
mov
and
fsubrs
adcl
test
mov
xchg
out
sbb
inc
mov
sub
cltd
daa
or
mov
xor
popf
add
pushf
adc
jge
push
subb
xchg
loope
lock
mov
sahf
mov
pop
inc
in
xorb
cli
push
popa
nop
loop
fwait
jecxz
int3
lret
xchg
pop
lods
mulb
jns
in
cmc
mov
xor
es
movsl
jbe
jle
daa
mov
scas
jb
mov
adc
xchg
mov
cmp
jecxz
in
bound
je
sbb
ret
cmp
out
call
cmp
cmp
mov
adc
cmp
sub
xor
push
daa
inc
pop
mov
mov
or
ds
fmulp
pop
mov
inc
hlt
push
ret
sarb
stos
leave
das
testb
je
xchg
incb
pop
pop
dec
cltd
jns
xlat
jp
cmp
ficomps
add
arpl
outsb
xchg
push
popa
xor
mov
inc
dec
leave
ljmp
cli
mov
ja
sbb
dec
sbb
xorl
add
sbb
adc
negb
ficomps
or
sarl
sahf
repnz
adc
sbb
gs
pop
ret
out
mov
notb
mov
push
jmp
insl
ss
pop
int3
cmpsl
je
mov
lock
xor
mov
push
mov
sbb
mov
sub
jb
push
unpckhps
fnstcw
ret
sbb
mov
pop
xchg
rol
sub
jg
push
mov
mov
push
insl
cmp
sub
jno
mov
jg
scas
jp
in
adc
stos
imulb
lods
xchg
scas
jne
dec
fsubrl
jge
fsts
pop
movsb
test
sbb
push
lcall
xlat
add
xchg
mov
cld
xchg
out
popf
cs
mov
xchg
subl
ret
popf
sbb
iret
or
aaa
pushf
lcall
add
mov
aaa
outsb
popa
mov
clc
out
cli
cld
iret
xor
test
dec
xchg
filds
popa
sbb
pop
aaa
push
xchg
and
js
loop
ja
mov
mov
lret
lods
das
sti
ret
movsl
pusha
pop
hlt
pop
add
popf
xchg
and
dec
fadds
clc
cmpsl
mov
popa
popf
inc
inc
mulb
lods
dec
in
cmpsb
in
flds
sub
add
xor
or
imul
sbb
jle
leave
in
hlt
movsb
shlb
rcll
push
xchg
imul
cvtpi2ps
lret
pop
sbb
mov
mov
arpl
ljmp
push
movsb
rcl
mov
inc
mov
sbb
lret
xor
fmull
in
adcb
ret
inc
mov
inc
fdivrp
jmp
adc
dec
in
jbe
int3
mov
pop
movsl
jmp
and
mov
ret
jb
jb
xchg
xor
ss
mov
in
sub
das
pop
out
cmpb
jmp
xor
insl
xor
out
inc
add
clc
sub
and
push
int3
xchg
les
cli
popf
xchg
arpl
dec
incb
pop
push
dec
std
inc
int
sbb
loope
inc
js
js
jp
xor
sbb
dec
adcl
int3
in
push
ret
imull
cs
push
add
sub
xor
out
push
dec
pop
or
inc
jno
cld
mov
loopne
jne
pushf
rcl
push
in
xor
ret
adc
and
or
dec
mov
fldcw
loope
ficoms
adc
out
mov
sbb
or
ret
xlat
lea
mov
in
sbb
mov
xchg
in
jae
mov
mov
lret
lret
and
mov
addb
idivb
and
mov
popf
movsb
iret
sbb
push
push
std
inc
nop
lcall
daa
out
sbb
push
fidivs
jae
sub
dec
xchg
jne
ljmp
les
mov
pusha
int3
push
mov
pop
rcll
call
jecxz
mov
fs
mov
mov
mov
out
movsl
lret
nop
pusha
xor
cmpb
in
dec
and
imul
sub
or
gs
mov
scas
jb
data16
sub
in
mov
xchg
rcrl
push
jg
stc
pop
jp
jb
and
sbb
movsl
addb
or
in
pop
xlat
fbstp
dec
movsl
dec
dec
or
cmpsb
pushf
or
lahf
out
flds
cmpsb
jnp
cmp
xchg
mov
cmpsb
rcll
insl
pop
enter
pop
inc
aam
out
sbb
int
or
or
call
std
fwait
cli
dec
mov
negb
rcrl
cmp
dec
flds
push
mov
xor
sub
cmp
mov
rcrl
loope
sbb
sub
dec
in
jecxz
mov
testb
pusha
fwait
mov
shlb
lret
mov
jne
jle
test
rcr
inc
sub
and
rcl
test
mov
stc
in
stc
mov
shl
cmpb
repnz
mov
mov
inc
push
lcall
inc
frstor
jae
push
orl
or
rcll
pop
loop
add
add
lods
enter
cmp
andb
rolb
push
and
jae
pop
add
popa
xchg
or
mov
mov
js
xchg
pop
dec
add
cmpsl
fs
int3
mov
jmp
sbb
and
xchg
xlat
data16
insl
aad
ds
repnz
mov
inc
or
dec
scas
out
lock
sbbl
pop
xchg
pop
fmuls
push
sub
scas
dec
popf
inc
sub
pusha
mov
mov
fwait
push
xchg
add
inc
lods
mov
bnd
cmp
insl
xchg
addr16
cmpb
cli
cmp
pop
push
jmp
adc
jb
out
out
xor
icebp
add
out
xlat
push
imul
mov
dec
mov
shrb
push
cmp
dec
out
pop
aad
enter
jne
fs
lods
dec
xchg
mov
lcall
mov
nop
jae
or
ds
leave
push
mov
daa
cmp
jmp
scas
or
aad
std
push
xchg
les
push
nop
divl
cmpsb
sub
scas
pop
xor
dec
jge
stos
xchg
and
dec
add
flds
adc
imul
inc
cmpsb
cmc
aas
xor
add
push
fxtract
fdivrp
cld
pop
int3
lds
push
xor
icebp
loope
xor
rcrl
or
leave
loope
call
lret
sub
test
pop
push
jmp
stos
mov
mov
in
clc
mov
notb
aas
pop
push
adc
add
dec
xchg
ret
je
pushl
cmc
test
int
repnz
into
push
fwait
pop
stos
xor
mov
sarb
inc
mov
and
test
dec
cmp
add
cmpsb
add
test
cli
in
jne
jno
rcl
inc
mov
cmp
fcmovu
aaa
lret
mov
gs
or
push
mov
cmc
ret
push
insl
je
mov
shll
das
xor
int3
fwait
shlb
push
sub
jp
daa
pusha
push
inc
test
jne
in
cmp
xorl
sub
pop
and
push
jb
jno
out
out
pusha
pop
push
cmp
pop
jge
loopne
push
jb
lret
and
es
aam
or
data16
js
add
xor
daa
stc
insl
mov
xchg
scas
xchg
inc
or
enter
or
inc
in
push
mov
jnp
and
lcall
lock
mov
int3
add
stos
cltd
fwait
pop
loopne
outsl
aad
xor
ret
lods
fimull
loop
xor
ret
pop
out
rcrl
fsts
mov
adc
lock
into
push
mov
aaa
or
inc
jb
xchg
dec
jge
cmp
jno
dec
mov
js
out
dec
or
jno
push
les
jle
jecxz
mov
popa
or
imull
mov
hlt
repnz
add
inc
std
es
fists
imul
aaa
pop
xor
ret
adc
std
cli
mov
or
cmc
lahf
xor
jns
repz
xchg
aam
push
add
push
sbbb
fwait
les
js
loop
jecxz
jo
jp
jg
testb
dec
aas
fisubl
jl
test
push
mov
mov
jae
and
nop
mov
pop
sub
mov
dec
into
arpl
or
lret
aaa
adc
cmp
loope
jecxz
lods
cmp
in
xor
or
lret
bnd
jno
sub
dec
push
inc
sahf
adc
cmpsb
fwait
push
lahf
mov
shl
jb
jo
dec
cmpsb
xchg
mov
inc
iret
test
repnz
push
add
mov
movl
subb
mov
rcll
lcall
pop
adc
jmp
sub
out
in
popa
adc
mov
jmp
sti
sti
int3
daa
adc
test
and
xor
dec
fld
mov
cmp
mov
add
leave
or
cmpb
out
fs
insl
lods
adcl
lahf
iret
pop
xor
sti
cld
cmc
popa
pop
call
sbb
xchg
rol
es
into
push
or
insl
in
push
add
neg
por
push
push
dec
divb
add
popa
unpcklps
mov
jbe
xchg
lds
pop
jnp
pop
jns
pusha
movsl
add
aad
imul
mov
dec
out
mov
cmc
sub
movsb
sbb
push
sub
mov
and
ljmp
les
aad
adc
mov
lea
sbb
jno
lock
jmp
sbb
dec
cwtl
lret
movsl
int3
jnp
jge
inc
lock
lret
cld
mov
adc
mov
aas
or
in
sti
ds
lods
xchg
lods
lods
inc
sarb
cwtl
or
mov
pop
fcoms
or
cmp
push
and
shrb
enter
sub
fnstenv
into
ffreep
sbb
mov
pop
es
hlt
sub
pop
loopne
cmp
inc
cmpsl
dec
adc
cld
cmp
fldcw
fisttps
add
ror
mov
in
and
xorb
sbb
sarb
daa
pop
fwait
cld
and
push
les
push
pop
xor
cmp
and
movsb
and
rcll
in
inc
inc
mov
aad
mov
push
mov
popf
mov
and
xchg
movsb
aas
testb
pushf
mov
je
movsb
pop
add
mull
repz
mov
mov
ja
in
pop
inc
xchg
dec
jae
dec
les
pop
cmpsb
mov
cltd
jge
adc
or
dec
aas
shlb
xchg
add
fwait
pop
push
sub
stc
xchg
inc
and
push
outsb
daa
push
dec
add
les
jmp
je
cmp
xlat
mov
gs
push
lahf
jmp
out
or
cwtl
mov
add
mov
mov
sub
xchg
mov
xchg
test
lret
pop
fisubs
inc
lods
cli
add
mov
fisttpll
add
pushf
ret
inc
gs
mov
ds
and
sbb
dec
lds
jne
push
mov
daa
and
sbb
outsl
push
inc
mov
pop
rep
mov
nop
sub
pop
lret
bound
js
cltd
add
inc
push
dec
xchg
xchg
adc
sbbw
pop
pop
movsl
pop
pop
xchg
scas
movsl
jno
ja
mov
add
int
jns
push
add
and
arpl
daa
cmp
mov
cwtl
adc
das
adc
mov
or
into
jo
leave
in
push
icebp
mov
sub
fwait
dec
leave
fisttps
test
and
adc
add
nop
inc
sub
push
mov
mov
fnstsw
fstpt
std
pop
divb
pop
data16
fstpt
pop
mov
aad
fxch
insl
xchg
ror
and
mov
cmp
or
push
std
adc
add
mov
adc
mov
test
cs
subb
inc
mov
hlt
negl
or
cmpsl
adc
sti
sbb
xlat
or
js
mov
ja
and
mov
jb
add
pop
xor
aaa
pop
push
mov
mov
mov
xor
mov
fidivs
inc
mov
loop
xchg
imul
push
scas
lret
cmp
das
mov
loope
dec
mov
stos
jbe
fmuls
aas
test
daa
les
leave
push
jg
inc
ficomps
mov
push
int
in
lods
call
popa
in
pop
inc
mov
scas
lret
sub
fisubs
jle
xor
aaa
imul
jge
nop
or
movsb
push
fisttpl
pop
cld
mov
ss
fmull
scas
out
jne
loopne
rolb
mov
push
dec
mov
xchg
push
mov
lret
lcall
push
movb
enter
faddl
xor
rcl
mov
cmp
adc
aaa
imul
movsb
cltd
test
out
loope
mov
mov
fcoms
popa
loop
and
out
out
push
fbld
fs
imul
ror
pop
imul
repz
es
test
cmp
clc
loope
jns
adc
cmp
bound
push
daa
jge
jmp
into
gs
iret
cmp
pop
xchg
outsl
jae
insb
sbb
jg
cmc
mov
or
bound
sub
add
sub
xchg
popa
rcrl
sti
cmp
out
jmp
repnz
outsb
roll
cmp
pop
ljmp
inc
jecxz
xchg
fmull
xchg
adc
jmp
jns
pop
inc
nop
movsl
xor
jg
ret
sbb
mov
fsubl
das
clc
jnp
dec
add
int3
jo
adc
sub
mull
pusha
pop
and
xor
mov
inc
nop
push
jle
hlt
push
xchg
es
ror
lea
xchg
and
test
ficoms
jnp
jb
outsb
xor
lcall
fwait
aad
add
in
sub
push
pop
cmp
jle
pop
pop
imul
dec
imul
in
sahf
popa
inc
adc
stos
lds
idivl
int3
out
mov
pop
dec
subb
cmp
bound
in
jns
ret
adc
scas
pop
fstp
les
jge
mov
jnp
pop
movsl
fwait
mov
into
mov
push
xorl
jns
jmp
xchg
fimull
jle
jge
adc
jp
popa
hlt
shlb
xchg
cmp
inc
push
cmp
loopne
mov
xchg
andl
lret
jbe
addr16
insl
sbb
lret
in
inc
pop
cmc
mov
or
fdivrs
and
stos
and
pop
or
stos
pop
xchg
bound
imul
cmp
cli
or
scas
or
ljmp
mov
iret
test
daa
pop
dec
xchg
push
inc
push
insb
push
movsb
sti
jle
adc
and
dec
outsl
lcall
cmp
ljmp
rcr
jae
inc
jne
jmp
adc
xchg
lcall
mov
pop
in
fisubrs
dec
lret
jl
out
mov
fwait
int3
xlat
adc
arpl
mov
inc
jbe
add
lcall
es
lahf
ficompl
and
inc
out
dec
or
mov
je
jecxz
adc
jne
lds
daa
js
mov
pop
les
movsb
pop
stos
cmc
dec
pop
adc
shl
sbb
lods
cli
fs
xchg
leave
fidivrs
adc
sub
inc
push
jge
xor
scas
mov
lock
or
add
lahf
xor
pop
inc
and
jp
in
adc
cmc
mov
stc
lcall
aaa
lds
jle
inc
std
mov
mulb
sbb
aad
cli
mov
dec
outsb
nop
pusha
push
mov
call
and
aam
lret
data16
sbbl
inc
loop
push
sbb
push
dec
fiaddl
inc
es
arpl
ret
xor
or
call
sub
and
and
rolb
pushf
mov
lods
cmpsl
ret
rclb
lahf
in
cmpl
cmc
outsl
push
outsl
sub
aam
dec
mov
int
in
roll
out
cmpsl
in
je
or
pop
popf
das
scas
jae
xchg
push
sub
les
mov
mov
pop
mov
or
dec
repnz
clc
inc
push
gs
and
stc
les
xor
pop
push
mov
mov
pop
lds
das
int
xor
loope
lea
cmp
imul
sbb
rorb
pop
mov
repnz
ret
inc
outsl
ss
cmp
mov
dec
and
adc
in
scas
adc
inc
in
dec
push
nop
popf
mov
and
pop
and
inc
lret
cwtl
xchg
in
cld
out
rclb
stos
cmp
jb
lret
cs
das
jb
into
adc
test
adcb
insb
mov
push
stc
test
pop
fmul
icebp
mov
add
loopne
scas
adc
inc
rorb
dec
add
mov
mov
hlt
in
outsb
stos
loop
jns
xchg
cmp
cld
ret
adc
out
push
push
ja
inc
jg
mov
pop
nop
out
sub
add
repnz
dec
cld
mov
jne
pop
movsl
mov
lock
mov
in
lret
xchg
ror
int3
mov
cli
cmpsb
bnd
lods
pop
movsb
add
lret
jecxz
and
mov
cmp
mov
sarl
xor
rolb
hlt
ja
int
fisttps
adc
mov
ljmp
loope
ja
push
push
mov
jmp
idivl
push
or
jnp
test
dec
lret
pushf
jle
sarb
jbe
push
sub
push
lret
ret
mov
sub
js
add
pop
bound
mov
sub
leave
es
mov
push
nop
push
push
das
dec
arpl
cmp
jno
xor
cs
xor
sbb
mov
xchg
push
push
repnz
dec
and
pop
aad
jge
sbbb
push
shr
out
les
lds
rcll
inc
les
push
or
test
dec
cmpsb
pop
push
fs
out
outsb
cmovp
mov
pop
xchg
fisubs
cmp
mov
xchg
loopne
test
push
mov
and
nop
rcrl
mov
pop
enter
sbb
xor
cmp
adc
adc
dec
aad
mov
pop
stos
push
mov
pop
mov
leave
roll
inc
cmpsl
int
call
push
dec
cmp
cmp
jae
push
dec
jge
lret
sub
js
cmp
stos
lock
jnp
out
mov
fildll
lcall
sbb
or
scas
inc
out
mov
pusha
insb
ds
pushf
push
or
jo
mov
stos
xchg
sbbb
fwait
push
arpl
sti
mov
pop
cwtl
mov
adc
jl
mov
incl
test
nop
sub
rol
mov
or
sti
adc
rcll
cwtl
movsl
mov
fldt
xlat
add
fdivrp
sti
clc
shll
xor
xor
int3
and
dec
and
fcomip
in
jge
cmpsb
clc
jbe
mov
jmp
dec
jae
inc
cmpb
into
loope
sbbl
cli
dec
push
movsl
push
mov
adc
addr16
mov
int
cld
pop
inc
jp
inc
mov
mov
jne
xor
pop
xchg
push
jmp
adc
push
and
mov
repnz
add
cmp
push
xchg
jb
jg
push
inc
xchg
test
shr
aam
fcomps
mov
xlat
lock
push
or
jle
inc
fbld
sub
and
pop
xor
sub
ds
nop
pusha
test
int
xchg
jl
fcomip
loop
cmp
pop
dec
lods
mov
clc
xor
dec
dec
jmp
cmp
hlt
add
cmp
cmp
xchg
pop
je
mov
in
ret
mov
push
inc
mov
dec
aam
push
jl
pop
pusha
loope
dec
into
aas
jnp
xchg
enter
pop
lds
scas
cli
inc
aam
inc
sub
dec
pop
xchg
repz
inc
je
out
mov
sub
push
mov
dec
dec
out
push
inc
sub
data16
add
int
cltd
lcall
inc
sub
out
mov
sub
addl
popa
push
and
sub
sub
xor
mov
or
scas
popf
test
xorb
jb
loop
cmp
ljmp
xlat
outsb
mov
out
dec
pop
sarl
lret
inc
xchg
xor
arpl
das
xchg
and
ja
push
push
scas
ffree
add
aas
sbb
or
pop
jg
shll
jnp
add
scas
jne
push
mov
cmpsb
in
add
xor
mov
mov
jnp
pop
and
aam
pop
int
ret
sti
xchg
cs
push
cmpsb
add
shrb
stos
repz
push
sbb
push
pop
ds
push
es
adc
insl
jg
fldcw
mov
ss
pop
fmuls
icebp
xlat
pop
lahf
shr
dec
and
fdivs
mov
sbb
fcomps
jno
sbb
fsubs
enter
nop
cs
push
in
ret
inc
jmp
push
test
and
cltd
adc
ret
insb
dec
mov
add
sbb
or
cmp
popf
xor
in
xchg
scas
mov
add
ja
fists
mov
nop
ljmp
fldenv
xor
push
mov
rclb
sbb
sarb
ja
stos
jp
aas
lock
movsl
sbb
enter
pop
les
loop
cmpsb
push
pop
inc
test
sbb
xlat
push
push
mov
jae
xlat
or
sbbb
xchg
insl
fsincos
sub
xchg
mov
and
jo
les
ffreep
cmp
sub
jnp
inc
lea
ret
insl
fnsave
mov
sub
and
dec
cs
jge
mov
jmp
ja
into
pop
sub
cmpsb
ftst
mov
fcos
ror
test
imul
mov
outsb
or
neg
in
adc
rol
jbe
sub
add
data16
mov
and
jno
sub
loope
movsb
arpl
cmp
and
scas
sti
mov
pop
jb
jl
mov
loop
in
mov
and
pop
fwait
in
jle
ljmp
clc
scas
xor
lret
ljmp
dec
xor
xor
insb
dec
xchg
adc
inc
adc
sub
push
lock
mov
pop
inc
xchg
mov
jmp
lahf
add
orb
inc
xor
xor
mov
xchg
xor
mov
or
xor
or
test
cmpsl
mov
fxch
mov
adcl
pop
arpl
inc
loopne
rol
arpl
fmulp
loope
xlat
inc
movsl
cmp
das
loopne
cld
add
sarb
push
xchg
cmp
pop
sub
scas
dec
flds
jle
into
or
cmp
jp
sbb
push
adc
xchg
notb
mov
cmpsb
ret
jmp
add
push
ret
jae
jbe
mov
jle
jno
mov
push
sub
nop
divl
cltd
adc
adc
movsb
lods
scas
fistl
nop
pop
jl
mov
repz
or
push
jge
adc
lock
mov
inc
push
xlat
mov
jg
int3
push
jno
adc
rclb
repz
xor
std
sbb
aas
andl
or
int
jmp
push
jle
and
dec
imul
in
insb
testl
test
sub
sub
and
sbb
push
add
data16
test
dec
int
lock
sub
ret
add
jo
frstor
pushf
ret
add
mov
xchg
or
mov
adc
dec
pop
ds
mov
jmp
aam
test
cld
pushf
push
push
in
xchg
pop
mov
xchg
mov
ret
fstpl
mov
adc
mov
std
loope
mov
lock
xor
ret
xchg
dec
add
repnz
cmpsl
das
mov
dec
cmp
int
dec
mov
fcoms
mov
lea
stos
xchg
fisubrs
xchg
adcb
adc
stc
jp
cwtl
jg
adc
in
daa
inc
cmp
arpl
mov
es
shr
push
je
adc
jg
sub
dec
inc
insb
mov
mov
lds
pusha
loopne
inc
and
push
imul
mov
stos
push
repz
mov
jne
jnp
roll
repz
insl
lods
mov
mov
push
mov
or
sbb
daa
mov
mov
xchg
xorb
cmp
jb
push
xor
push
mov
mov
lcall
movsb
xchg
inc
nop
divl
pop
repnz
xor
dec
sub
jl
adc
test
popf
iret
inc
xchg
xchg
in
insl
sbb
mov
jmp
out
pop
jmp
stos
iret
jae
pop
les
mov
pop
jns
mov
jnp
xchg
iret
and
xchg
outsl
mov
inc
inc
push
or
xchg
lret
sub
jbe
jge
inc
push
lea
hlt
ljmp
mov
sub
push
pop
pop
sbb
lods
imul
aas
outsl
cmpsl
jle
mov
in
jmp
cmp
lcall
and
jnp
mov
and
mov
jb
cmp
cltd
pop
out
xchg
lret
bound
out
jne,pn
push
jno
clc
push
pop
scas
sub
jae
jno
jae
pop
in
aam
pop
push
push
divl
fdivrs
jp
ret
loope
mulb
pop
mov
push
ret
xchg
lock
outsb
test
int
in
jo
loope
jmp
cmc
mov
jno
cmpsl
cmpsl
sub
stos
push
sbb
and
enter
daa
lret
movb
daa
mov
int3
inc
loopne
clc
or
fwait
push
adc
push
scas
mov
sbbb
addr16
cltd
inc
daa
repz
jb
push
or
fwait
clc
shll
iret
enter
out
push
cs
repz
pusha
adc
mov
dec
mov
xor
test
leave
jl
js
out
ds
out
rclb
lock
gs
inc
sbb
mov
cwtl
pop
sub
dec
sahf
mov
cld
daa
int3
lcall
rorb
loopne
sbbb
insl
lcall
push
cmp
xor
imul
adc
jo
mov
jle
jg
fwait
daa
test
out
mov
push
push
xlat
in
dec
scas
adc
dec
cmpsl
pop
jno
and
or
adc
xchg
xchg
lcall
std
insb
rcr
lret
orb
stos
lods
and
mov
add
push
and
hlt
sub
jp
pop
aad
cmp
out
add
push
lret
pushf
sub
arpl
out
ret
orl
loopne
pop
cmpsl
mov
mov
jb
xor
adc
adc
sti
fucomip
jge
leave
adc
inc
mov
cmp
mov
xchg
inc
jecxz
jae
cmp
sbb
cmovns
popf
dec
ret
ds
enter
jae
xor
pop
sub
mov
cwtl
xchg
scas
push
jnp
dec
adc
push
xor
sbb
mov
lock
add
int3
jno
sub
mov
rcrl
outsb
pop
dec
loopne
popa
jbe
outsl
addr16
xchg
ret
rclb
aam
cltd
sbb
call
cmpsl
imul
movd
and
pop
popf
inc
and
inc
movsb
sbb
jle
movsl
mov
nop
pop
out
loopne
dec
mov
mov
jne
aad
lea
icebp
pop
test
xchg
jbe
mov
dec
sarl
pop
adc
int
xorb
cmp
pop
out
mov
pop
cmpsb
jne
mov
inc
push
lret
stos
fwait
into
jge
inc
bound
or
ljmp
cmp
inc
adc
mov
mov
outsb
inc
push
jp
xchg
push
fs
fwait
scas
sbb
inc
dec
xchg
and
jno
imul
daa
cmp
iret
aas
xchg
cmp
cmp
inc
jmp
mov
cwtl
pop
nop
data16
jno
in
mov
mov
inc
push
inc
shrb
and
or
xlat
movsb
push
sbb
imul
lea
into
outsb
push
clc
sub
shll
push
dec
sub
sbb
jge
fsubs
fisubl
add
push
jae
jnp
or
add
xor
shl
or
js
testl
mov
add
cmpb
movsl
jecxz
std
jnp
adc
pop
push
ljmp
outsl
push
int3
jg
dec
bnd
pop
retw
icebp
or
fwait
mov
xchg
pop
pusha
sti
in
std
or
push
push
mov
push
push
mov
adc
pop
add
sub
es
mov
nop
enter
popa
jecxz
cs
jnp
push
mov
lock
xor
sbb
mov
inc
fcompl
push
clc
mov
xchg
sarl
lret
cmp
sbb
pop
xor
cmp
push
out
sub
insl
in
xchg
adc
push
sub
jne
loop
js
lret
les
iret
ljmp
xchg
test
jl
xchg
pop
aad
in
push
pushf
std
call
sub
xlat
sbb
xchg
insl
mov
jo
inc
and
arpl
js
cli
scas
fwait
sub
jbe
lahf
lea
and
stos
stc
sti
pop
lods
loop
inc
adc
or
adc
leave
movsl
pop
push
sbb
mov
sub
and
sarb
in
push
xor
daa
cmc
testb
pop
xorb
negb
adc
sbb
xchg
mov
rorl
out
sahf
fcoml
rcrl
imul
sarl
mov
test
xor
fcmovnu
ljmp
jns
sti
int3
mov
dec
fnstenv
xchg
push
mov
sub
ja
jnp
pop
scas
test
test
dec
dec
and
lock
sbb
inc
mov
sub
add
jecxz
jl
xchg
fisubrl
mov
sub
loope
add
fisttps
xchg
jmp
imul
mov
popf
dec
push
jo
dec
adc
dec
fxch
jo
in
inc
jge
je
xlat
jo
and
add
xchg
sub
sub
stos
sbb
xor
inc
mov
and
sbb
popf
ret
pop
and
lds
jbe
dec
scas
jmp
leave
mov
xor
add
push
mov
push
mov
mov
pop
mov
pop
mov
ret
mov
push
mov
int3
cmp
cmpsb
mov
mov
jp
or
inc
ds
in
out
xor
sub
mov
imul
cs
mov
adcl
repz
clc
iret
ret
push
mov
gs
mov
mov
loope
xchg
stos
or
dec
jg
adc
leave
lods
add
into
fwait
xorb
jae
push
arpl
dec
xor
mov
xchg
fcmovu
cmp
and
inc
cmp
pand
lret
mov
jbe
inc
inc
outsl
push
and
scas
jecxz
bound
lock
xor
and
xchg
out
cmp
mov
frstpm(287
je
cmp
pop
daa
jmp
lret
filds
mov
jl
loop
in
pop
popa
cmpsb
cli
ljmp
lods
xchg
aam
push
out
out
mov
sbb
incb
sub
jmp
push
jno
imul
mov
mov
jecxz
mov
mov
push
dec
sub
fistpl
fimull
xchg
pop
jmp
cmp
pop
bound
xchg
inc
jmp
mov
jae
in
add
jae
aas
xlat
call
into
rclb
outsb
jle
xchg
out
out
inc
pop
fwait
movsl
aaa
jo
lret
mov
std
ret
aas
mov
leave
pop
gs
push
xlat
sbb
out
inc
fsubs
scas
aam
xor
adc
mov
scas
mov
sub
shlb
mov
out
xlat
cmpsl
lcall
mov
dec
repnz
lds
xchg
stos
and
adc
gs
sbb
push
lods
sub
mov
nop
inc
adc
rolb
push
jg
mov
xchg
rorl
sti
push
mov
mov
fistps
repnz
arpl
adc
dec
test
shrb
push
scas
add
in
adc
lods
inc
lahf
xchg
and
push
or
inc
les
lods
in
mov
test
and
fstl
in
iret
repz
cmp
aam
add
add
sbbl
sub
jnp
pop
cmp
sub
mov
ret
mov
cld
rclb
popa
imul
in
lcall
push
fimuls
in
push
stc
enter
rcrl
sbb
mov
mov
adc
xor
enter
rcr
jbe
int
cmp
lds
ret
rcrb
xor
jnp
mov
xor
sbb
push
jle
inc
jecxz
stos
push
scas
mov
mov
scas
fwait
and
jle
or
dec
mov
fs
add
mov
jne
xchg
xchg
and
stc
cmpsb
adc
cwtl
fcmove
loopne
sti
cli
inc
adc
in
mov
pop
les
xor
sti
adc
mov
push
insb
imul
mov
rcrl
inc
lcall
or
lods
jg
add
mov
ss
out
hlt
enter
cltd
mov
mov
loope
jge
mov
call
scas
imul
testb
xor
rorl
mov
dec
and
and
loopne
in
test
orb
inc
sbb
mov
xor
push
in
inc
mov
mov
xor
cltd
sub
push
cmp
imul
jle
pushf
insb
jb
xchg
pop
pop
dec
mov
xchg
dec
fs
mov
push
xor
push
adc
sbbl
xor
pop
mov
jne
addr16
or
loopne
jg
ret
int3
test
jne
out
rcll
mov
lret
shlb
lds
mov
pop
dec
imul
lods
shlb
lods
adc
push
loope
or
xchg
xchg
lds
adc
jp
repz
push
pop
xchg
insl
mov
addl
jle
dec
jl
jnp
dec
pop
lcall
mov
mov
xor
add
mov
ficoml
push
cmpsb
push
outsb
ret
es
adc
push
insl
adc
orb
xor
lcall
sbb
les
in
insb
aad
xchg
cmp
aam
hlt
aad
aas
dec
jp
fyl2xp1
loopne
leave
inc
scas
arpl
push
insb
ret
sbb
xor
add
xchg
js
xchg
dec
stos
ljmp
loope
or
test
mov
push
dec
push
inc
cs
out
sbb
cwtl
add
jns
xchg
aaa
ret
addl
es
aaa
int3
imul
dec
xchg
in
mov
adcb
adc
shll
addr16
mov
xor
pop
pop
mov
outsb
or
sbb
and
add
pop
das
lock
pushf
jne
test
pop
psubusw
scas
mov
jecxz
lcall
shrb
mov
jge
into
add
hlt
fs
inc
xor
or
lods
adc
cmp
popf
mov
and
insb
ja
loop
addb
inc
pop
pop
lods
xchg
lret
test
adc
sbb
sub
cs
pop
ljmp
sub
cmp
inc
push
mov
fs
sub
sti
jno
fstpt
cmpsl
mov
negb
lcall
aas
push
ret
dec
sahf
andb
cltd
ret
data16
lock
pop
mov
sbb
lret
cwtl
bound
pop
jne
fcmovnb
inc
push
jp
and
movsl
cwtl
shlb
sub
fdivs
outsb
xchg
cmp
aam
shll
jge
pop
pop
mov
xchg
ljmp
pop
inc
adc
movsb
push
gs
inc
sub
add
push
jae
sub
mov
popa
daa
adcb
into
inc
imul
mov
dec
jnp
push
sub
xchg
mov
jns
mov
adc
jne
test
loopne
gs
lods
dec
bound
call
sub
jl
xchg
sbb
incl
ds
fwait
mov
xor
jp
jns
sub
call
jmp
aam
dec
xchg
mov
push
dec
cmp
imul
jl
cmp
int
pop
cltd
orb
or
cmpsl
jbe
cmp
xchg
les
push
push
mov
les
push
mov
adc
sbb
rorb
pop
dec
clc
pop
pop
in
ds
jp
or
mov
inc
ss
dec
sbb
lock
xor
testb
or
fdivrl
stos
lret
pop
push
popa
ret
mov
and
adcb
pop
xchg
mov
fsubrs
insl
fidivs
dec
adc
in
imul
testb
cmp
cmc
cmp
xchg
mov
jnp
cmp
push
jb
adc
pop
push
adcl
outsb
lock
iret
test
loope
jmp
inc
dec
mov
js
inc
mov
insl
lods
or
add
fsub
inc
inc
cwtl
mov
into
jne
xchg
outsb
rorb
repnz
sbb
mov
add
por
in
xor
cmp
mov
clc
mov
imul
cs
sub
ja
dec
cmp
and
xchg
pop
xchg
inc
xor
jns
std
loop
sub
sbb
inc
lret
mov
xor
lret
cld
movsb
leave
push
nop
add
stc
xchg
jmp
icebp
pop
imul
mov
adcb
aad
cwtl
xor
push
pop
fmul
push
inc
lds
or
stos
pop
pop
movsb
lret
mov
bnd
stc
rol
mov
adc
test
ret
lea
xlat
push
cmp
je
xchg
jnp
push
lret
scas
push
test
dec
pop
pop
cmpl
sbb
xchg
in
sub
xchg
cli
or
dec
addb
cmp
push
out
jle
dec
fcompl
dec
insb
jmp
shrl
cld
fs
inc
ret
stc
or
adc
cld
fs
jg
push
cwtl
das
mov
arpl
repnz
xchg
test
xchg
mov
sub
push
push
imulb
test
lods
testb
add
jnp
adc
jnp
jg
les
add
lods
dec
rcll
hlt
push
sub
sbb
push
xchg
and
sub
mov
mov
sub
xor
icebp
jle
mov
pushf
jns
lcall
pop
adc
jae
or
shrb
enter
decl
scas
mov
repnz
mov
pop
add
ds
jecxz
iret
addb
xchg
aas
dec
sbb
out
cmp
push
pop
pop
cmp
push
dec
ja
inc
std
dec
adc
push
ret
movsb
push
mov
and
leave
mov
dec
cld
sub
push
loop
mov
out
mov
mov
ficoml
adc
cs
mov
iret
mov
arpl
mov
mov
out
adc
and
les
iret
dec
xchg
pop
lahf
dec
sarl
shlb
mov
mov
pop
push
arpl
sbbl
std
aam
mov
cmp
stc
adc
lahf
lret
orl
in
jnp
cli
adc
pop
cld
aas
sbbl
test
mov
lret
push
mov
mov
outsb
sub
rcr
jae
arpl
pop
aam
nop
popa
dec
xchg
mov
mov
fstl
mov
mov
sub
enter
pop
or
push
and
lods
mov
lds
or
ror
rcr
dec
test
adc
rcrl
pop
ss
imul
jle
add
lcall
movsb
inc
cli
movsl
dec
mov
gs
imul
pop
xchg
in
xchg
jp
icebp
ret
xor
scas
stos
mov
push
xor
jns
mov
nop
push
mov
rcll
aad
push
notb
sub
lock
push
add
or
rcll
mov
cmp
xchg
orb
inc
fld
ror
js
fbld
push
push
xchg
test
adc
leave
ja
loope
loope
pop
mov
ja
adc
jle
jge
ret
nop
out
adc
push
movsb
or
stc
shll
dec
jne
dec
aam
jne
or
pop
mov
jl
or
js
push
jge
cld
dec
xchg
int3
das
pop
push
xchg
adc
mov
cmp
fldenv
stc
out
sti
loopne
jmp
das
ja
fsub
dec
sub
dec
xchg
jle
mov
shlb
xchg
ss
les
add
dec
in
int3
inc
push
addr16
inc
jmp
in
mov
dec
fsub
repnz
add
scas
imul
out
decl
sub
shrb
enter
arpl
sub
add
rolb
nop
inc
dec
mov
add
xor
movsb
popf
jmp
add
fildll
loopne
mov
into
jne
add
sbb
data16
mov
in
adc
add
push
rorb
mov
dec
mov
mov
lret
shlb
mov
mov
mov
popa
mov
pop
push
lret
and
sub
push
xor
fwait
mov
xor
sbb
lock
xchg
or
sbb
sub
mov
sub
cltd
jno,pn
jns
or
call
sbb
push
repz
sarl
outsl
pusha
mov
add
mov
call
inc
out
mov
sbb
xlat
xchg
or
sarb
les
jl
ss
jnp
cmpsl
fwait
int
pop
mov
loopne
cltd
fsubrs
pop
pop
push
or
add
cmp
cmpsb
cld
in
xor
sub
or
push
xchg
jo
fisubrs
repz
call
push
add
mov
push
fiadds
gs
lea
push
and
test
adc
mov
jmp
mov
push
sub
mov
mov
fsubs
lret
jg
adc
or
jp
incl
sahf
incb
xchg
ja
xchg
sbb
bound
loope
and
clc
fisubrl
addr16
call
ljmp
loop
adc
pop
or
xchg
cmpsb
js
adc
call
repz
in
push
or
mov
adc
push
and
mov
lcall
mov
lock
mov
cmp
gs
sbb
xor
or
mov
pop
push
adc
in
mov
adc
push
inc
scas
xchg
ja
leave
int3
adc
cmp
ds
aam
cmp
scas
lock
mov
aam
loop
pop
push
mov
mov
push
sbb
pusha
inc
inc
push
gs
dec
jb
leave
add
ljmp
imul
and
xor
mov
mov
mov
jle
or
sub
mov
in
jge
stos
sti
movsb
sbb
out
mov
cmpsl
jbe
xchg
pop
xchg
push
lret
in
cmp
mov
inc
xchg
push
das
cmp
mov
pusha
lret
mov
push
mov
fs
sub
hlt
dec
mov
faddl
rorl
sub
cmp
sbb
cmp
lods
jo
add
mov
mov
mov
nop
and
test
rorb
int3
pop
sbb
cmc
xchg
out
mov
and
fbstp
les
mov
pusha
mov
cmc
cwtl
sub
or
inc
iret
jecxz
sub
sub
jbe
and
jle
nop
lret
test
mov
cli
xchg
inc
add
mov
lds
scas
mov
jl
and
fistpll
xorb
and
pop
jbe
inc
stos
repz
and
mov
push
in
mov
jae
not
dec
shll
les
adc
aad
inc
bound
hlt
pop
or
into
movb
mov
xor
cmp
push
je
adc
or
jecxz
sbb
and
and
pop
mov
iret
les
cs
out
or
mov
les
addb
les
or
outsl
je
dec
out
jns
vrcpss
popa
lea
sti
push
jp
es
pop
fwait
aas
or
movsb
push
mov
repz
jne
aam
jg
adc
xor
decl
or
out
push
arpl
inc
push
popf
jp
xchg
fcompl
test
sbbl
inc
cmp
mov
push
sub
cmpsl
jle
dec
rorb
or
ss
push
cvtdq2ps
xor
jne
sbb
in
push
push
and
nop
or
nop
jbe
das
sub
cmp
je
or
pop
add
mov
incl
repz
pop
pop
js
fiaddl
sahf
sbb
aaa
fxch
mov
ror
mov
mov
cltd
out
rcrb
adc
xchg
add
lahf
es
jb
mov
cmp
call
insb
ret
push
filds
lock
in
movsl
inc
sbb
jmp
mov
mov
clc
out
jmp
cmc
js
cmovg
or
in
jne
movsb
fwait
and
in
lds
xchg
xor
mov
xor
cmp
test
shl
add
int3
ds
push
loop
aas
or
cmpsl
mov
push
lock
ds
pop
int3
jg
or
sbb
add
push
cltd
loope
ret
cmp
js
ds
pop
bound
mov
data16
push
sti
push
adc
jge
shrd
stos
fistl
sub
negl
push
sub
rcl
mov
pop
pop
add
ret
pushf
mov
dec
imul
mov
inc
and
pop
push
sub
or
push
and
mov
daa
push
mov
shrb
dec
mov
xchg
jecxz
outsl
mov
hlt
loope
dec
fdivr
icebp
stos
jb
add
loope
arpl
addr16
xor
and
fcoml
aas
jo
push
mov
pop
or
cwtl
and
xor
cli
fsubp
dec
mov
mov
clc
inc
xor
cmp
dec
jno
xchg
mov
sub
fwait
popa
mov
add
popl
sbb
iret
push
aaa
shll
clc
ficompl
shlb
mov
lods
jne
sub
jg
idivl
rcrl
xchg
mov
ljmp
pusha
dec
arpl
ds
inc
lcall
imull
lds
movsl
repz
jl
xchg
dec
stos
repnz
add
mov
and
dec
push
ret
inc
popf
ffreep
inc
ficomps
out
ljmp
dec
lds
negb
dec
xorb
ja
das
out
mov
shr
push
sbb
idivl
mov
mov
jno
xchg
mov
bound
pop
fsubl
cwtl
cmp
hlt
mov
jl
lret
lds
inc
addb
int3
fcoms
push
sahf
fimuls
mov
sarb
sbb
aam
lea
pop
pop
insl
lods
test
lods
push
add
cmpsl
les
out
push
aam
xor
add
and
sbb
in
mov
xchg
rcll
jns
add
or
sbb
adc
lea
pushf
pop
mov
xor
test
dec
scas
cli
enter
mov
xor
movsl
cmp
sub
sub
mov
xchg
stc
mov
sub
dec
hlt
jmp
shrb
fistl
mov
pusha
jp
push
sbb
sub
sub
or
lods
mov
pop
ja
insb
insb
cmp
add
cli
and
pop
out
repnz
out
js
and
mov
and
lret
lret
inc
add
push
cwtl
rorb
lods
inc
sub
jl
stos
das
sub
pushf
or
inc
rol
sub
xor
orb
cli
jp
cltd
lds
stos
or
daa
mov
stos
repnz
xor
add
xlat
jne
call
gs
call
mov
iret
jo
dec
bound
inc
daa
stos
stos
movsb
movl
push
add
xor
cld
aas
inc
movsb
sub
stos
jg
lret
stos
imulb
stos
je
shl
jb
push
push
xchg
push
add
ljmp
push
cwtl
test
sub
dec
int
pushf
sbb
clc
sbb
repz
add
ficompl
fwait
cmpsl
mov
mov
push
xor
mov
lock
sti
into
out
xchg
test
or
cmc
aad
pop
icebp
pop
pop
rol
aam
jg
cmpsb
sbb
out
das
jle
enter
pop
xor
aaa
xchg
loopne
pop
sbb
add
push
icebp
mov
xchg
cli
pop
fisubs
imul
mov
mov
outsl
inc
jg
xchg
mov
push
add
sti
mov
cmp
or
jne
adc
push
ja
scas
test
sbb
lcall
or
sahf
ss
std
cwtl
out
dec
cmp
orl
aaa
loopne
add
and
movsb
push
decb
add
fcmovnb
daa
outsl
test
nop
test
aad
int
mov
cmp
es
add
aad
popf
leave
mov
inc
loopne
aas
incb
cmpb
adc
mov
insl
xchg
cld
popa
and
outsl
loop
daa
mov
sti
lea
mov
cmp
add
sub
ss
pop
sbb
xor
sbbb
cmc
add
sub
out
cmp
pop
inc
pusha
xlat
push
mov
push
mov
gs
mov
mov
nop
and
jb
sbb
dec
mov
adc
outsb
jns
test
popa
jecxz
sbbl
push
stos
mov
push
mov
adc
or
jge
mov
pop
or
adc
mov
and
outsb
mov
mov
addr16
insl
aad
ljmp
mov
add
int
add
xor
repz
mull
or
push
mov
mov
xor
mov
inc
sbb
cmp
inc
mov
mov
push
push
pushf
push
clc
je
inc
sarb
hlt
pop
mov
movsb
inc
movsb
aam
jns
mov
xchg
pop
lea
push
es
clc
pop
mov
enter
lret
dec
cmp
pop
bound
es
ss
popa
addr16
lret
mov
int3
sbb
pop
xor
xor
repnz
adc
lcall
mov
xchg
jecxz
pusha
push
scas
fsubrp
in
popf
jle
inc
push
pop
gs
pop
shlb
dec
mov
sbb
or
gs
xchg
pop
and
mov
mov
rcrb
jb
je
sub
scas
mov
mov
mov
cmp
or
jnp
shlb
cwtl
jns
js
pop
sbb
insb
inc
jg
clc
and
fisubs
stos
add
ss
push
daa
jno
xor
mov
pop
mov
inc
outsb
push
pop
jnp
popa
daa
in
fs
arpl
imul
leave
ss
cmpsb
scas
xor
cmp
push
cld
mov
fs
cmp
xchg
incb
dec
xor
movsb
xchg
dec
push
lock
xor
jge
pushf
pop
cmp
shrb
pop
add
cwtl
mov
jb
sbb
jo
cmp
mov
cmp
rcl
sbb
daa
mov
cmp
aad
add
repz
jno
push
call
aas
mov
loop
mov
cmp
adc
dec
pop
stos
mov
je
fcmovb
cmp
inc
pop
popf
dec
pop
aam
push
loopne
inc
push
pop
push
fstps
ja
outsb
jb
iret
outsb
pop
mov
mov
cmp
jle
cmp
cld
data16
mov
cmp
or
loope
mov
push
or
ficoml
cld
call
sbb
dec
dec
xor
mov
mov
mov
xor
sti
stos
push
loop
aaa
repz
adc
sub
xor
dec
push
pop
lods
jbe
fiadds
imul
inc
gs
dec
jecxz
rcrb
jp
pusha
loop
push
pop
dec
std
push
sub
mov
xlat
cmp
push
dec
sbb
arpl
jbe
daa
pop
jbe
ljmp
std
xchg
lds
decb
cmp
cmp
mov
out
adc
fcomps
loopne
mov
inc
mov
adc
mov
adc
addb
push
ficoml
sbb
in
mov
or
insb
enter
outsl
int
not
pushf
jp
jp
fs
das
xchg
sahf
mov
add
mov
dec
inc
xchg
insb
stc
fwait
xchg
movsl
mov
sbb
cmp
clc
add
aam
sub
dec
push
out
leave
pop
and
jns
incl
test
iret
lret
repz
in
cmc
mov
mov
lods
push
movsl
xor
addb
ret
xor
jbe
or
into
addb
sahf
movsl
lcall
test
imul
push
inc
ja,pn
ljmp
sub
rorb
nop
sub
loopne
aad
out
mov
je
dec
js
mov
test
and
das
dec
jmp
pop
sbb
pushf
or
push
mov
lods
dec
test
into
lock
dec
xor
lods
data16
lahf
pop
je
cmp
ficoms
sbb
lock
data16
sub
cmp
setp
out
pop
add
lods
mov
pushf
cmp
jae
gs
cmc
xor
or
scas
dec
pop
xchg
ljmp
aas
shrb
ljmp
pop
push
loope
rcrl
adc
hlt
pop
inc
jl
lahf
sub
aad
int3
or
inc
sub
cmc
in
cwtl
mov
or
negl
push
test
mov
in
in
scas
sbb
mov
addr16
shlb
sub
lock
cmp
sub
add
lods
mov
and
push
in
fsts
stc
xchg
aad
inc
adcl
push
sub
mov
andl
jg
jle
xor
mov
mov
je
inc
cmp
scas
mov
les
lret
clc
jle
test
bound
arpl
cmpb
fwait
sub
adc
or
outsl
cmovp
jmp
pushf
out
fiadds
or
or
adcb
loop
out
jno
inc
fldpi
sub
insl
jl
pop
sahf
sahf
dec
add
inc
jno
mov
adc
xor
cld
push
iret
call
mov
pminub
push
loope
mov
jge
dec
cld
adc
xchg
mov
sbb
or
mov
and
aad
outsb
sbbb
add
mov
sub
jmp
imul
jle
jmp
and
mov
sahf
cld
add
push
stc
mov
out
fildll
add
mov
sbbb
fdiv
inc
out
cli
and
and
jnp
enter
rclb
xlat
pop
mov
fs
mov
fiaddl
das
cmp
imul
pop
mov
cltd
jmp
and
fucomp
dec
push
ja
out
ror
mov
add
hlt
or
mov
add
cmp
adc
cmc
xor
push
cli
aad
cltd
cmp
mov
cmp
dec
jge
call
cltd
mov
cmpsl
sbbb
mov
adc
xchg
push
imul
mov
or
shrl
loopne
sub
je
xchg
inc
ret
incl
mov
inc
pop
arpl
loopne
inc
adc
jae
fdivrl
pop
mov
and
xchg
outsl
inc
inc
dec
mov
fnsave
fsts
sub
test
jecxz
test
insl
jle
mov
aad
sbb
cld
and
sbbb
nopl
xor
push
sarl
inc
xchg
sub
mov
ds
or
icebp
inc
jl
mov
fdivr
push
out
test
sub
dec
aad
les
xchg
add
and
pop
inc
in
or
mov
fmulp
push
xor
mov
and
iret
repz
shll
mull
cmpsb
push
or
sub
xlat
or
dec
pop
std
xchg
mov
cmc
shll
sti
stos
icebp
jg
or
xor
mov
fldcw
popa
adc
add
or
sbb
and
inc
xor
pop
xchg
gs
lcall
mov
push
or
sarb
das
out
hlt
or
das
mov
lods
jge
inc
lret
dec
bound
or
xor
cmp
lods
sbbl
stos
shll
cltd
or
mov
xor
out
ds
and
jbe
mov
inc
mov
sbb
inc
dec
jl
inc
sub
in
pusha
jge
jno
in
xchg
mov
inc
mov
jo
cmc
in
sbb
sub
cld
mov
mov
mov
pop
cli
mov
cmp
addr16
cli
sbb
dec
outsl
stos
or
iret
push
or
mov
out
mov
adc
out
ret
xchg
mov
adc
loopne
inc
loope
push
xchg
cli
mov
orb
or
xor
lahf
pop
or
push
dec
testl
jmp
in
addb
xchg
lock
mov
jnp
adc
mov
sbb
push
sbb
jb
mov
outsb
ja
mov
jns
xor
mov
adc
pop
mov
sbb
movsl
ret
add
lcall
sbb
ljmp
sub
fldenv
mov
faddp
pop
ret
xchg
ds
rcrb
fcmovne
or
fiaddl
pop
rcll
neg
repz
aad
stc
or
mov
push
or
stos
or
pop
add
xchg
adc
frstor
xor
xor
test
adc
push
fildll
sbb
mov
addb
popf
insb
xchg
adc
push
or
mov
aas
loopne
mov
clc
addl
enter
fisttps
dec
ret
aaa
fwait
sub
lods
ja
lcall
iret
xchg
add
adc
fcomp
push
dec
or
cmp
cmc
pop
jb
push
cmpl
cmc
push
movsb
and
xor
sti
test
sub
cs
ljmp
lods
in
jmp
dec
loope
adc
hlt
loop
push
cmp
test
hlt
cli
repz
xchg
or
jne
repnz
xchg
dec
lahf
int
scas
mov
sub
out
and
lret
shl
imul
sbb
ss
cmc
aas
cmpsl
addr16
jmp
push
dec
sbb
jnp
pop
pop
ret
stos
cld
xor
aam
push
inc
xchg
jnp
popf
insl
jmp
and
out
xchg
push
add
ss
clc
sbb
fldcw
xchg
mov
lahf
sub
leave
mov
fcmovb
pop
mov
push
pusha
xlat
int3
pop
fidivrl
stos
mov
rorb
aas
pop
xor
mov
scas
fmuls
rorb
je
and
sqrtps
sub
sbb
dec
xchg
and
add
in
mov
sbbb
sub
aam
jl
movaps
pusha
xchg
lds
daa
jmp
cmp
scas
adc
cmpl
jg
sbb
dec
jecxz
in
imul
and
loopne
jbe
mov
jg
push
adc
inc
mov
mov
call
sbb
out
push
ljmp
xor
or
lcall
sahf
sbb
les
ljmp
insb
stc
dec
cmpb
ret
xlat
mov
push
inc
push
mov
push
xor
and
test
add
push
sbb
jo
push
lock
js
pop
enter
sub
rolb
jno
ljmp
pop
stos
in
push
pop
sbb
sub
and
addr16
or
andl
pop
xchg
lods
fcoml
xor
pop
fiadds
dec
dec
pushf
xor
mov
fdivl
sbb
jne
adc
push
lock
out
sub
push
mov
cwtl
pop
out
aaa
addl
outsl
rolb
jle
fisttpl
je
jnp
mov
xchg
call
mov
pop
adc
sub
fmuls
pop
or
adc
fisttpl
add
lret
inc
push
jp
je
fisubrl
mov
test
xlat
add
aam
mov
iret
pop
ds
lock
scas
mov
ficoml
repz
scas
pop
add
cmp
aam
mov
aaa
mov
sub
jecxz
lret
jle
add
stc
jg
push
imul
adc
pop
loopne
ret
fisubrl
dec
xchg
sub
push
or
insl
jb
mov
ja
sub
gs
sub
fs
adc
leave
mov
mov
and
cmc
enter
jmp
pop
and
fwait
nop
sti
ficoms
inc
push
decb
mov
es
or
popf
xchg
fwait
sub
cltd
lods
mov
mov
mov
jmp
in
lods
push
xchg
or
insl
ja
out
aas
and
mov
or
and
pop
js
cltd
mov
mov
je
movsl
sbb
jge
mov
aad
loopne
and
add
jo
test
sub
aas
sbb
rorl
aaa
std
mov
push
pop
aad
adc
pusha
shll
inc
mov
xchg
mov
sahf
jb
popf
cmp
lahf
jl
fs
mov
pop
jo
mov
fbstp
roll
test
cmpsl
cs
mov
mov
out
loop
jecxz
dec
fcoml
xorb
loopne
popl
jo
pop
pop
add
mov
jecxz
in
xor
and
push
popa
push
cmp
js
jb
test
cmp
js
add
daa
or
aaa
lret
aam
pop
cmp
dec
pop
rolb
sbb
in
loopne
push
push
sub
cmp
scas
je
nop
lds
lock
sub
outsb
in
into
lret
xchg
je
jae
sbb
dec
pop
cmp
cmp
outsb
jae
adc
movb
lds
jp
icebp
inc
pop
inc
test
not
sbb
add
movsl
xchg
pop
xor
call
jg
ret
and
pop
jo
or
xchg
xor
cltd
mov
cli
mov
rcr
rclb
cli
rclb
and
loop
aas
xchg
sbb
adc
dec
adc
cld
enter
inc
push
and
inc
aad
pop
jo
sahf
orb
pop
push
xchg
inc
mov
nop
in
cmp
fstp
in
jmp
dec
pop
cs
and
cmp
pop
les
pop
stos
fcoml
or
imul
sbb
movsb
mov
inc
sbb
loop
dec
add
adc
cmpl
js
push
scas
outsl
sub
sub
in
fnstsw
stos
pop
rcll
pop
push
test
mov
xor
test
xchg
or
shrb
aas
ljmp
lret
popf
cli
fwait
jmp
jns
pop
and
push
mov
cmc
push
shlb
fistps
cmp
sbb
leave
and
cmp
cmp
push
and
inc
xchg
dec
jle
mov
scas
cwtl
sub
imul
sahf
mov
push
jge
outsb
or
inc
in
adc
dec
icebp
xchg
decb
lahf
pop
and
iret
repz
clc
lret
gs
mov
xchg
xchg
or
jbe
bound
xchg
mov
add
adc
hlt
xchg
add
sub
mov
push
sbb
pop
sub
into
push
mov
pushf
and
ja
and
sub
incl
bound
mov
bound
orb
cltd
decb
mov
imul
scas
imul
sarl
ffree
dec
imul
dec
sub
aam
cmp
leave
clc
or
cmp
cwtl
cmp
pop
or
jo
popa
sahf
scas
sbb
xlat
aam
ljmp
fucom
cltd
mov
and
inc
aaa
adc
lahf
int3
cmp
or
popa
mov
mov
sub
sub
stc
pop
xchg
sbb
pop
fnstcw
cmpsb
idivl
insw
leave
fisubl
xchg
cltd
loopne
adc
add
mov
popf
cli
daa
out
cmpsl
cmc
aam
jg
jmp
pop
jg
xchg
lret
xchg
jmp
scas
lret
mov
ror
dec
push
sbb
mov
fisttpl
lds
ds
insb
sub
xor
add
sbb
jmp
dec
sbb
repz
inc
test
and
out
outsl
out
in
out
inc
je
xchg
jmp
adc
cmc
test
shlb
and
push
cmp
adc
into
fimull
out
add
cs
xchg
adc
inc
pop
mov
xchg
or
mov
repz
imul
cmpb
jo
sbbb
movb
outsl
cmp
aas
fisubl
sbb
into
cli
sub
test
xchg
and
xchg
dec
and
fcomp
pop
adcl
rcll
push
mov
out
and
xchg
in
cmpsb
shr
fcompl
inc
or
lret
xchg
icebp
test
addr16
mov
sub
add
in
pop
sahf
pop
inc
test
sbb
lcall
sub
jge
ljmp
pop
adcb
clc
push
out
jne
sbb
jb
sub
xchg
add
loopne
int
add
add
stos
in
imul
mov
lret
call
mov
fwait
sahf
push
pop
add
aam
dec
loop
dec
and
dec
pop
xor
aam
lods
es
sahf
and
pop
jmp
mov
xor
push
hlt
in
adc
daa
dec
or
lea
cmp
push
dec
lret
ds
or
fwait
pop
pusha
and
int
jnp
xchg
dec
pop
lods
fildll
push
cmp
int3
inc
sub
pop
pop
adc
push
out
jnp
in
adc
mov
enter
sbb
lcall
int3
lcall
in
xor
mov
xchg
xchg
cwtl
in
sub
jmp
cmp
add
popf
or
adc
xorl
jp
in
adc
dec
mov
mov
and
testb
xchg
and
in
mov
jl
inc
mov
bound
in
jnp
sbb
cmp
xor
xor
mov
xchg
inc
repz
sti
push
mov
xor
and
sbb
add
out
mov
out
fidivrl
sbb
add
data16
lcall
fstl
in
add
sub
sub
pop
outsl
data16
out
xor
mov
sarb
mov
ss
mov
rorl
cmp
pop
adc
shll
call
pop
in
cmp
sub
fstpt
lock
test
mov
shlb
lods
ljmp
sbb
popf
mov
mov
out
jg
and
cmpsl
xchg
inc
add
into
popf
adc
adc
adc
stos
mov
adc
add
mov
mov
sbb
ret
in
inc
jg
and
aas
ljmp
adc
pop
jbe
cmpsl
pop
jge
dec
aaa
lds
outsb
fimuls
ret
es
xchg
mov
icebp
cmp
dec
clc
push
pop
push
mov
add
mov
call
mov
push
inc
sbb
xchg
or
ja
inc
jno
fisubl
outsl
cli
mov
and
sub
dec
jno
mov
jl
jecxz
pop
mov
in
jns
shrb
jle
pop
jae
and
repnz
cmovno
std
cmp
notl
jae
xchg
jo
shll
xor
or
pop
add
xor
iret
call
sub
and
dec
inc
ljmp
enter
je
out
mov
test
daa
add
in
mov
call
jecxz
mov
sub
jo
andl
in
xchg
pop
jns
jo
fistpll
or
dec
aad
cltd
fs
hlt
xchg
pusha
mov
fisubs
int
js
mov
xchg
or
pushf
add
pusha
and
sub
testl
aam
sbb
xchg
push
pop
xchg
lahf
push
rclb
pop
ret
jg
mov
sub
pop
mov
dec
popf
add
insb
loopne
cmp
cld
jnp
test
push
loopne
call
fsubrs
popa
repz
jnp
cltd
mov
popf
je
cmp
icebp
and
inc
aad
xchg
xor
call
pop
in
dec
lock
in
mov
jp
pop
pop
std
xchg
cs
cwtl
mov
mov
into
and
pop
add
fldt
je
dec
lods
xor
adc
cmp
or
or
jne
mov
xor
fwait
xor
je
pop
adc
dec
cmp
cli
imul
popf
jo
sbb
or
inc
or
sub
imul
bound
inc
xlat
aad
ljmp
sbb
fidivl
fwait
clc
dec
shrl
iret
push
jnp
or
push
lahf
xor
lock
xor
negl
shrb
sub
mov
loopne
ret
inc
repz
adc
rol
insl
push
dec
mov
jg
cmp
lods
or
lea
and
repnz
mov
xor
pop
aam
add
adc
insl
jno
pusha
andl
mov
test
jns
popa
andl
imul
and
pop
gs
mov
sbb
inc
mov
frstor
jae
bnd
inc
sbb
loope
inc
or
mov
outsl
insb
adc
mov
jne
sub
incb
lahf
mov
ss
push
push
sub
test
push
push
repnz
loop
add
push
scas
cmc
and
iret
aad
jg
xlat
scas
dec
ror
mov
xor
jecxz
xchg
add
push
push
aas
gs
dec
sub
push
in
cld
mov
xchg
cs
pop
femms
xchg
sbb
jne
ljmp
adc
lds
fistpl
lahf
pop
imul
js
jne
sbb
ja
and
xor
movsl
jb
mov
test
adc
sbb
mov
loop
lret
pop
cmpl
and
dec
inc
cmp
add
testb
faddl
xchg
or
dec
xchg
aas
inc
dec
dec
sbb
inc
pop
rclb
popl
cmpsb
stos
push
incl
pushf
insb
lds
das
dec
and
lods
out
adc
sub
lock
mov
pop
pop
mov
sti
call
lock
dec
out
and
sbb
add
push
push
or
mov
stos
push
data16
mov
repnz
pusha
xor
stos
in
fstpt
pop
cmp
xor
aaa
sbb
cltd
fmuls
jne
repnz
cs
sub
sub
mov
out
and
mov
mov
sub
daa
test
int3
xchg
aam
stos
popa
addr16
orb
sbb
cmp
sub
dec
negl
out
jge
cmc
ret
addr16
mov
out
bound
push
fsubrs
and
and
adc
out
mov
and
mov
push
roll
out
xchg
std
or
cmp
or
add
stos
or
add
out
adc
jae
sbb
or
les
stc
pop
xor
mov
lahf
mov
mov
aas
xchg
pop
add
dec
subl
mov
mov
mov
stos
int3
cmp
addr16
mov
fildll
sub
fisttpl
inc
cmp
push
add
mov
push
icebp
mov
lock
out
xor
mov
lea
sub
jnp
mov
rcr
enter
adc
pop
push
mov
jo
jl
lock
loope
fcomps
mov
aam
icebp
stos
push
je
jae
popf
fsubl
inc
iret
adc
jno
std
mov
sahf
jle
hlt
pop
add
pop
jnp
imul
rcll
dec
insb
mov
cwtl
cmp
rcr
cmpsb
xlat
push
pop
ss
cmp
mov
insb
lock
shrb
cmc
or
sahf
es
std
inc
mov
movsl
xchg
sub
mov
fidivl
test
inc
xor
dec
loopne
adc
lret
fwait
mov
add
jae
sub
inc
xor
mov
inc
inc
lods
push
std
or
mov
dec
cmp
or
cld
sub
test
fcomp
mov
pop
mov
loope
rcr
sbbl
cmp
sub
mov
jae
adc
loop
fcomp
lock
or
fwait
lods
mov
ds
pushf
lods
scas
inc
sbb
out
xchg
mov
aam
test
jle
insb
into
dec
mov
cmc
push
xor
push
jb
outsb
out
adc
xchg
leave
int
imul
inc
stos
or
sarb
dec
mov
mov
shr
mov
rol
movsb
out
add
subl
add
push
out
jmp
sbb
mov
jmp
orl
lahf
aam
clc
or
rcrb
fwait
pushf
inc
int
adc
push
mov
fdivr
cltd
or
stc
enter
aas
adc
pop
stos
lahf
cmp
mov
insb
xchg
push
xor
mov
je
cmp
fnstenv
fwait
jecxz
popa
ret
daa
jnp
fstpl
cmpsb
mov
outsb
iret
cld
fsubr
xor
pop
jp
dec
xlat
pop
sub
cld
mov
frstor
xchg
lcall
pop
mov
adc
sbb
push
add
mov
jecxz
movsl
xchg
xchg
rcrl
add
mov
add
pushf
adc
push
arpl
lds
movsb
mov
call
inc
jo
adc
xchg
scas
mov
or
jp
and
mov
inc
cmp
xor
mov
stos
imul
pop
push
cltd
push
scas
add
sub
pop
mov
fstl
push
add
cld
cmp
mov
fstpl
xchg
xor
cld
mulb
sbbl
and
dec
pushf
push
testb
or
cli
cmc
push
mov
test
bound
sbb
jnp
sbb
in
repnz
test
lea
pop
inc
popa
push
cmp
inc
adcb
sbb
pop
fisubrl
jge
sbb
or
mov
mov
inc
addr16
pop
jmp
iret
inc
insl
pop
xor
sbb
out
testl
stos
xchg
mov
and
adc
hlt
imul
inc
push
fnstsw
movsl
mov
pop
and
and
jae
push
and
xchg
push
mov
add
ja
mov
ds
jb
lahf
icebp
mov
shrl
es
mov
xchg
adc
pop
negb
test
jb
pushf
test
mov
mov
adc
ja
dec
mov
xchg
inc
and
sbb
stos
les
jbe
mov
mov
pop
xor
lods
sub
ds
push
pushf
out
inc
fistpll
bound
scas
mov
int3
sahf
pop
xchg
jbe
test
pop
into
adc
sub
push
cs
jecxz
gs
popa
fistl
jl
pop
jb
clc
mov
in
test
add
clc
nop
mov
adc
pop
test
dec
dec
in
cmp
adc
lock
lretw
jge
adc
shrl
push
add
dec
mov
pusha
pop
sub
cs
cld
lock
sub
mov
dec
push
jl
pop
fwait
xchg
and
les
rolb
pop
stos
shl
or
adcb
push
xlat
out
insl
dec
cmp
pop
in
pushf
mov
mov
data16
inc
mov
inc
add
popf
aad
push
push
mov
fmul
aaa
and
lcall
push
test
aam
inc
dec
sahf
insl
cld
add
popl
or
adc
xor
mov
push
add
inc
jmp
xchg
and
or
aad
add
movsb
inc
xchg
ret
in
xchg
mov
out
xor
jbe
inc
xor
outsb
mov
adc
insl
jmp
stos
push
out
rcrb
mov
rcl
or
jp
rcr
inc
aam
or
mov
shll
gs
and
push
test
jae
idivb
xchg
jae
and
push
jbe
lcall
arpl
push
rol
pop
lret
xorl
cld
and
repz
cmp
testb
dec
cmp
lret
push
sub
dec
mov
lahf
sbb
xchg
pop
push
movsl
push
cld
out
movsl
in
lcall
xchg
insl
sahf
sub
dec
adc
test
dec
fisubl
pop
outsl
stc
sahf
imul
jno
push
aad
lods
xchg
xchg
pusha
dec
xchg
clc
mov
push
jns
ljmp
cwtl
push
adc
test
neg
aas
test
dec
aas
xchg
js
pop
adc
push
jmp
in
cwtl
mov
push
dec
xchg
mov
outsl
add
pushf
jmp
sub
jmp
lds
test
ds
pop
fiadds
pop
push
in
adc
cmc
cmp
jge
iret
movsl
mov
xchg
subl
jns
into
xor
imul
lods
jno
xchg
mov
loope
xchg
and
fisubrs
lds
adc
cmpsb
out
sbbl
addr16
test
xlat
shlb
call
push
xor
add
adc
rclb
jecxz
add
and
popf
in
popa
cmp
in
hlt
sub
adcl
lds
cmpl
push
xor
sti
cltd
and
mov
cli
and
xchg
xor
sti
ss
mov
in
jg
das
lods
outsb
sub
xor
xor
ror
cmc
fdivrl
adc
filds
mov
out
cltd
adc
outsb
roll
adc
imul
mov
test
mov
xchg
inc
out
sbb
inc
mov
lods
aaa
jne
jns
push
test
aas
xrelease
adc
xchg
adc
add
data16
shlb
ret
sbb
mov
dec
push
push
push
hlt
cmp
adc
adc
cltd
add
stc
adc
push
and
stos
andnps
lods
jno
fcoms
fdivrl
mov
push
xor
xor
daa
cmp
adc
jo
inc
mov
cmpsb
orb
inc
test
push
jmp
mov
notl
in
or
movntps
test
out
inc
xlat
adc
sub
dec
jnp
lret
and
cmp
mov
movsb
fs
movsl
mov
in
ds
xchg
xchg
out
es
psrlq
adc
lret
lods
mov
loop
pop
insb
sbb
mov
adc
mov
jge
lock
mov
cmp
sbb
dec
je
test
mov
pop
dec
out
jp
jb
in
sti
push
xor
outsl
pop
xchg
mov
loope
fcomi
lret
clc
adc
lahf
pop
or
mov
jo
movsb
scas
addr16
lcall
out
mov
mov
push
out
mov
push
mov
test
add
pop
adc
pop
and
sbb
xor
flds
push
xor
in
push
cltd
out
dec
jl
mov
out
das
stos
xchg
loope
fiaddl
jmp
push
jns
cmpsb
mov
out
movsl
in
jp
pop
fimuls
lock
pop
mov
adc
popa
popa
sbbb
mov
mov
aas
fwait
jl
push
dec
and
push
jp
test
jne
sub
sub
fwait
mov
dec
sarb
xchg
insb
leave
stc
test
pusha
int
xchg
add
cmpsb
push
mov
jns
inc
mov
pop
movsl
mulb
adc
sub
jbe
fwait
pop
addb
addr16
cmp
frndint
rorb
scas
fwait
ret
xchg
sahf
aam
jg
imul
jo
mov
mov
sub
xchg
lock
iret
lcall
pop
jge
adcb
push
push
dec
cmp
or
push
sbb
xor
sub
add
hlt
inc
fistpll
fdiv
mov
dec
inc
scas
or
mov
sti
int3
test
pop
arpl
lods
subb
cmpsl
xor
push
mov
insl
popf
das
cwtl
push
dec
popf
add
push
out
nop
in
loopne
and
pop
pop
aam
andb
mov
mov
add
xchg
outsb
fs
cmp
mov
xor
pop
rolb
sub
push
jo
hlt
jl
xor
inc
mov
jg
dec
or
push
mov
push
jg
push
std
sub
imul
cmc
shrb
add
movsl
pop
mov
std
sub
xchg
shll
xor
movsb
jbe
push
jg
sbb
mov
in
mov
test
mulb
mov
mov
nop
cmp
cmpsb
ja
mov
pop
and
xchg
xor
aaa
push
mov
or
sub
in
add
sub
jbe
test
sbb
push
sbb
sbb
cmp
mov
mov
shl
mov
mov
push
out
repz
lahf
xor
dec
pop
mov
orl
lret
repnz
aaa
push
xor
xchg
data16
pop
mov
xor
flds
test
xlat
add
xlat
jge
pop
es
push
xchg
mov
xor
sahf
mov
cmp
and
dec
mov
mov
pusha
jl
cwtl
xchg
inc
inc
sti
add
cmpsb
shrl
mov
ss
sub
int3
and
pop
ss
sbb
pop
cmp
dec
fs
imul
mov
push
pop
push
lret
sub
js
mov
cmp
cmp
stc
jbe
mov
leave
loope
ret
rorl
test
push
add
jl
test
mov
mov
push
mov
jmp
mov
imul
movsl
jae
mov
push
add
mov
lahf
sub
gs
mov
dec
inc
loope
push
mov
dec
jmp
and
sbb
and
aam
xchg
adc
and
adc
pop
inc
pop
pop
cmpl
aam
mov
jecxz
insb
fcmovne
addb
or
icebp
push
cmpb
jmp
mov
pop
xchg
rcl
push
shrb
dec
adc
hlt
or
pop
jle
call
ret
mov
and
lret
cmp
push
and
sbb
xchg
xor
cltd
test
mov
jno
mov
or
and
jnp
sbb
push
mov
imul
add
push
scas
bound
movsb
mov
dec
aam
rcrb
dec
lahf
pop
outsl
movups
mov
mov
jmp
mov
pushf
xchg
sbb
mov
sbb
pop
stos
sub
inc
sbb
mov
add
gs
sarl
pop
mov
pusha
scas
je
stos
stos
fcomps
in
sar
push
cmp
add
pop
js
pop
into
es
out
mov
pop
jecxz
lcall
into
push
lret
and
test
push
scas
mov
pop
pop
dec
insb
std
pop
rcrb
loopne
rcrb
pop
xor
inc
fisubs
repz
adc
je
cli
popa
xchg
jge
pop
out
dec
fs
sbb
movsb
cmp
mov
jnp
mov
push
cld
hlt
mov
rorb
je
xchg
iret
xchg
sbb
pop
and
dec
fisubs
xor
lsl
ffreep
in
cs
lahf
movb
pushf
rcr
add
iret
iret
mov
aam
dec
faddl
xchg
stos
sti
sub
pusha
xchg
sbb
xor
lds
scas
int
dec
mov
jae
push
add
xor
in
mov
addr16
mov
repz
pop
imul
mov
daa
xlat
outsb
cltd
leave
xchg
dec
shrb
cmp
mov
sub
jge
or
lods
xchg
ret
sub
mov
or
sub
rol
jg
sbb
add
movsl
out
jne
inc
insb
call
les
loopne
pop
mov
sbb
fwait
jns
mov
imul
lcall
aam
mov
and
inc
daa
in
lods
inc
out
xchg
and
inc
clc
test
hlt
mov
jle
iret
mov
inc
jbe
fsubrp
lock
cmpsl
ret
mov
aam
mov
mov
scas
adc
lahf
repnz
movsb
dec
cmpsl
in
jmp
out
pop
cld
dec
sahf
jnp
push
mov
jno
mov
pop
add
std
push
lahf
pop
mov
sub
adc
popa
test
daa
jg
mov
mov
aam
jl
jns
insl
ficoml
lret
cmpsb
mov
push
and
icebp
lea
sbb
push
mov
pop
iret
add
xor
dec
fstl
dec
lock
pop
mov
fs
movl
out
inc
rcll
inc
fcompl
adc
push
cs
outsb
incb
ljmp
mov
sbb
dec
pusha
fildl
lds
aad
push
stc
iret
adc
or
mov
xor
add
std
lods
cmp
sbb
jle
add
pop
xchg
lds
popf
push
jbe
mov
andl
sub
shl
stc
loope
addb
xchg
jg
cmpsb
popa
sub
and
aam
pushf
jl
out
mov
pop
movsb
mov
push
test
out
lods
out
mov
xchg
dec
mov
xchg
je
jge
jle
xor
sbb
mov
mov
dec
mov
daa
aad
in
dec
aas
mov
add
add
sub
pushf
fsubrs
std
loopne
jo
out
or
mov
jecxz
push
dec
dec
stos
insl
xchg
jo
je
jmp
in
or
sbb
sahf
aad
mov
jbe
push
push
out
popf
es
mov
sbb
push
and
sahf
lahf
leave
shll
ret
xchg
inc
arpl
mov
xchg
fistl
mov
mov
repz
sbbl
sbb
jge
dec
repnz
data16
aam
lds
aam
inc
push
aad
lahf
mov
jmp
lret
ret
inc
inc
jmp
add
fldt
sub
and
popa
pop
cmp
jge
dec
lea
sub
std
cmc
xor
fbstp
xchg
rorl
icebp
out
icebp
jecxz
fsubp
add
mov
xchg
popa
inc
xchg
out
inc
fs
inc
fsub
push
mov
sub
or
cltd
adc
in
das
xor
fcmovnu
sub
lods
adc
rcrb
pop
cwtl
outsl
pop
in
pop
negl
mov
adc
mov
sahf
cmp
xchg
or
aam
jnp
xor
or
pop
jp
inc
xor
and
gs
dec
jp
std
inc
shll
and
stc
or
inc
bound
shrl
in
mov
dec
pop
adc
jmp
cmc
das
pop
add
ja
loop
andl
push
push
add
mov
xlat
in
sarl
sahf
inc
mov
ret
push
outsb
dec
scas
insl
cmp
and
popf
sub
lock
xchg
inc
insb
jb
call
mull
fists
xor
gs
lods
or
repnz
and
sbb
aam
push
pop
pop
cltd
mov
std
xadd
push
lcall
xchg
in
aas
out
jecxz
jne
fdivl
pop
xchg
out
mov
xor
inc
mov
movsl
sub
out
sbb
mov
lcall
test
ja
add
inc
xlat
call
mov
inc
dec
into
inc
and
jbe
fwait
dec
pop
not
nop
mov
iret
in
int3
lds
rcl
mov
shll
sub
sub
in
hlt
cmp
xor
pop
push
adc
pop
jecxz
out
fcomps
jbe
pop
pusha
fistpl
xchg
xchg
lahf
xor
and
gs
aas
sub
repz
stos
fsubrl
mov
enter
test
aaa
jmp
es
xchg
mov
ret
mov
lods
jmp
popf
xor
inc
jge
into
jb
int3
loopne
cs
or
mov
pop
call
mov
idivl
roll
adc
mov
xor
dec
fcoml
mov
jp
fdivrl
push
sar
jns
fildl
aaa
add
testl
mov
jbe
loope
sbbl
call
mov
ficomps
add
cmpsb
insl
fdivrp
xor
mov
cmc
xchg
cmc
and
push
dec
jle
addb
push
xchg
pop
scas
push
push
testb
cmp
adc
dec
sahf
fptan
cwtl
push
mov
lcall
or
sti
cmp
mov
add
pop
imul
stos
dec
xlat
add
or
mov
aam
dec
cmp
sbb
std
jb
dec
add
mov
xchg
jle
cwtl
mov
mov
push
fbld
mov
mov
shll
push
push
adc
loop
aas
ror
jl
xchg
mov
mov
sub
jmp
lret
or
sbb
or
push
int
push
ja
jnp
gs
imul
lock
inc
pop
sub
pop
jge
pop
mov
xlat
and
jo
dec
dec
push
or
fildl
dec
xchg
and
dec
je
stos
cli
ss
mov
or
lea
cmp
inc
mov
addr16
in
out
rcrl
cmp
mov
out
add
mov
je
je
stos
mov
mov
add
cmp
insl
xor
les
or
cld
loope
cmp
leave
jp
loop
sub
rorl
cs
repz
xchg
inc
addl
cmp
pop
movsb
ror
test
xchg
push
je
bound
and
je
xor
mov
cmp
jno
cs
mov
cmp
das
lods
icebp
or
mov
or
jmp
sub
rorl
adc
add
aas
xchg
mov
sbb
mov
outsb
fsts
cmc
mov
push
pop
bound
ja
xor
or
stos
mov
xchg
jae
call
cmp
mov
addl
inc
inc
jne
jo
cmp
pop
mov
hlt
dec
push
out
pusha
psubusb
push
out
mov
mov
cli
jp
mov
sub
push
repnz
lods
aam
sti
xor
int
jne
pop
xchg
pop
iret
xor
in
negb
shlb
cmp
aaa
sti
mov
outsl
pop
mov
into
cli
shll
in
enter
xchg
sub
addr16
xor
xchg
call
dec
clc
dec
stc
mov
lock
and
or
scas
dec
daa
gs
arpl
sub
mov
stos
dec
add
jle
dec
in
movsl
xchg
out
movb
pop
ja
fs
jmp
rcrl
movsb
into
outsb
test
mov
aas
stos
movsb
lcall
push
and
movsl
push
int
dec
call
out
rorb
sahf
jmp
out
add
push
xor
iret
mov
jp
add
call
mov
inc
or
fdivs
rcrl
fwait
adc
notb
mov
pop
repz
repnz
xchg
add
test
test
xor
lret
pushf
mov
mov
mov
sbb
or
enter
mov
sti
push
dec
icebp
add
shrl
sub
into
xchg
rolb
inc
pop
sbb
jp
js
in
mov
das
pop
xor
out
or
jae,pn
pop
mov
dec
mov
ljmp
rep
jbe
psrlw
sbb
dec
lcall
fucomp
mov
mov
lea
cltd
ret
cmp
xorb
cmp
pop
stos
pop
or
xchg
xchg
fstps
adc
or
add
fsubrs
xchg
jle
jp
cmp
je
mov
cld
inc
stos
cltd
dec
cmpsb
mov
ljmp
push
daa
xor
xchg
fld
pop
mov
mov
outsl
and
jnp
fistpll
push
fcmovb
jne
or
add
stos
pop
pop
jae
addl
je
in
push
sub
in
adc
sub
pop
add
insl
nop
loope
xor
pop
xor
int
mov
mov
mov
and
divl
lods
lret
and
mov
mov
cmc
mov
push
shrl
cmp
test
mov
icebp
push
sub
or
adc
add
bound
ret
ret
out
ret
dec
or
cld
jecxz
cmc
outsl
imul
test
pop
cmp
xor
fldenv
xchg
lods
shl
dec
jns
add
adc
sti
leave
inc
arpl
adc
aam
pushf
pop
sub
cli
clc
xchg
push
mov
nop
mov
xor
cmpsb
sbb
jbe
stos
cli
push
test
ja
jno
shrl
push
jo
mov
cmpsl
gs
lret
and
iret
push
xchg
xor
in
out
push
cmp
lods
add
xor
xor
mov
sbb
dec
and
jle
xlat
jnp
dec
sbb
mov
jns
fs
or
push
mov
or
cmc
int
jle
jb
xchg
int3
addr16
fiaddl
in
add
push
xchg
hlt
into
push
sub
movsb
or
daa
jo
add
xchg
mov
pop
jge
lds
inc
xor
sbb
lret
cmc
xchg
aaa
jl
out
mov
push
aam
rorl
repz
mov
pop
loope
pop
popa
lds
cs
leave
dec
fcompl
scas
andps
jge
jmp
test
cmpsb
aad
dec
jecxz
div
mov
or
lds
pop
mov
xchg
rolb
sub
jge
xor
mov
pop
cmp
bound
mov
or
cmpb
test
aaa
mov
mov
dec
sti
das
fisttpll
pushf
jo
sarb
pop
jb
lds
adc
mov
jle
imul
in
pop
pop
lds
test
lcall
jb
sub
fildll
inc
test
jle
out
xlat
and
sub
out
lcall
mov
and
ja
sbb
lods
int
sbb
lahf
inc
fwait
test
rep
addb
sub
test
enter
ja
jae
inc
pushf
ret
jne
cmp
test
or
pop
mov
jb
or
cmpsb
stos
mov
pusha
mov
pushf
cmp
push
or
add
loop
add
sbb
dec
std
sti
inc
push
push
add
jecxz
js
xchg
fistps
leave
and
or
inc
int
lds
inc
pop
xchg
jne
shll
insb
repnz
pusha
outsl
pop
jl
ficomps
nop
jecxz
or
cli
test
fld
in
in
mov
add
pop
add
mov
ja
mov
stos
lods
sub
pop
mov
pop
adc
je
sub
pushf
pop
inc
fs
push
dec
pop
push
dec
jne
sub
cmp
bnd
insl
add
dec
xchg
push
test
in
mov
repnz
mov
sbb
sbb
dec
sbb
or
or
ljmp
outsb
fidivrl
cmpsb
loope
mov
cmc
xchg
push
or
inc
adc
popf
movsb
mov
mov
ret
inc
mov
cmp
jecxz
inc
cmp
jo
jne
xchg
scas
adc
pop
xchg
pushf
cld
adc
adc
and
mov
lret
jae
leave
cmp
mov
fs
fs
lock
mov
jbe
add
out
cmpsb
mov
fmul
and
notl
sub
sbb
sahf
jo
sub
arpl
das
iret
pop
inc
pop
push
pop
stos
xchg
mov
add
icebp
push
imul
push
in
cs
lock
jmp
fdivs
repz
popa
data16
popf
and
out
bound
fstpl
scas
mulb
mov
adc
or
mov
fsubl
adc
aaa
mov
push
cmpl
aad
pop
in
xor
cmp
arpl
push
scas
pop
xor
mov
sbb
xor
cltd
push
shrb
xchg
pop
loop
push
test
sahf
ret
jge
sahf
lock
xchg
cmp
int3
and
jo
js
stc
pop
sbb
je
call
jmp
xor
mov
ljmp
cmp
addr16
and
in
sub
jns
jl
es
pop
xchg
in
or
push
push
scas
sbb
adc
rclb
pop
ret
xchg
add
stos
sub
out
test
mov
icebp
movsl
and
jo
notl
popf
jp
jge
repz
xchg
xchg
sbbl
add
daa
addb
push
xor
inc
cmc
cld
aaa
or
lret
andb
jecxz
inc
jecxz
push
and
inc
or
lods
add
jns
add
andb
repnz
mov
xlat
dec
fnstenv
imul
add
cltd
cld
add
adc
xchg
inc
mov
aam
mov
xlat
outsl
in
sbb
xor
shr
sub
pusha
push
ja
push
ja
mov
inc
movsl
mov
gs
sub
xor
xor
lds
add
sub
xchg
stc
popf
ljmp
xchg
mov
and
cmp
das
loop
sbbl
push
push
push
in
push
cli
je
pop
cmp
cld
lahf
icebp
mov
ficomps
jno
cmpsl
sbb
dec
aaa
sbb
js
push
push
clc
pop
aam
lea
insl
ljmp
mov
call
ret
xor
aad
cmp
sti
cs
imul
out
insb
sub
cltd
pushf
fimull
sub
lahf
adc
inc
jecxz
xchg
rcl
xchg
jle
mov
les
insl
push
or
lods
lahf
adc
hlt
add
pop
inc
loop
mov
jns
aaa
dec
dec
pushf
nop
dec
xchg
push
xor
push
add
mov
pop
insl
mov
lret
dec
out
lods
test
push
sbbl
push
ret
iret
fcompp
fnstenv
arpl
xor
out
mov
rcrb
shlb
adc
adc
ss
mov
cmp
and
shl
pop
mov
sti
jg
nopl
fisubl
sub
dec
enter
test
mov
dec
sbb
jne
je
call
scas
dec
sbb
pop
fdivrs
fiadds
movb
aam
sub
jne
dec
jmp
daa
sbb
mov
mov
scas
fildll
adc
sbb
pop
cltd
lods
aam
jb
jne
cwtl
adc
jo
jno
test
dec
jp
adc
test
movsl
filds
pop
nop
jno
cmpsb
in
push
imulb
sbb
loop
int
inc
sbb
sub
insl
inc
test
shlb
es
mov
icebp
scas
sti
rorb
in
sbb
mov
enter
ss
dec
adc
xor
cmpl
sti
in
mov
aad
and
cmp
inc
in
jo
cmp
addr16
xor
jle
int
pop
or
mov
and
jbe
lcall
cwtl
int3
push
leave
in
outsl
ret
mov
inc
mov
xor
xlat
xlat
shrb
outsl
pop
dec
insl
sub
dec
fstps
clc
jg
jmp
dec
sahf
fcoml
insl
and
out
push
xchg
xor
push
les
insl
shlb
lcall
cmp
lcall
push
ja
cmp
mov
addr16
lret
ja
test
cmc
out
mov
sbb
sub
mov
xchg
jecxz
leave
mov
cmpsl
dec
jns
inc
sub
add
daa
add
repz
and
add
cmp
push
xchg
lcall
mov
mov
push
enter
sub
loope
addr16
test
imul
xor
jl
push
pop
dec
testb
cmpsb
mov
jbe
je
in
iret
popa
lock
shll
int
arpl
push
pushf
inc
pop
push
pop
ljmp
outsl
jp
adc
mov
sub
scas
mov
dec
ljmp
xlat
scas
loop
repz
pop
adc
adc
aaa
push
stos
pop
pop
mov
pop
pop
push
scas
repnz
push
jg
sarl
repnz
or
dec
in
imul
cltd
and
and
dec
inc
cmc
scas
daa
mov
loope
xor
fucomip
stc
sti
inc
xchg
fs
cmpsb
in
mov
dec
add
addb
adc
lret
xor
jnp
add
ja
fisttpll
cli
fwait
jle
and
in
outsb
ja
mov
sahf
popa
icebp
je
cwtl
aas
ja
xchg
out
add
sbb
fidivrl
xchg
sub
push
fldcw
mov
mov
aaa
mov
push
jp
testb
lret
lret
stc
mov
mov
or
dec
mov
adc
pop
cmc
push
or
pop
mov
mov
subb
jecxz
ret
pop
jle
sbb
test
aam
das
in
imul
imul
add
pushf
ret
inc
fstl
daa
jmp
into
popf
mov
pop
dec
bound
inc
mov
adc
push
mov
mov
divb
lds
jle
dec
xchg
pop
stos
test
neg
call
lret
sbb
fistpll
xor
add
test
stos
lcall
mov
out
pop
movl
imul
adc
or
hlt
nop
mov
and
fbld
push
cmp
cwtl
mov
mov
test
mov
xor
ret
jle
lock
mov
inc
inc
jno
stos
cmp
xchg
ret
mov
mov
xor
fisubl
pop
flds
sarl
mov
popa
shlb
pop
add
bound
fidivrl
movsb
int3
sti
jnp
xchg
in
pushf
lret
xchg
cmpsl
mov
xor
in
pop
iret
cmpsl
lods
sub
test
rclb
xor
mov
and
pop
pop
or
or
jmp
out
add
lea
cmp
pop
sub
sahf
js
inc
or
jo
ss
mov
aad
or
rorl
cmpsb
sti
aam
cmc
cmp
cmp
xor
push
daa
fisttps
leave
popf
sbb
ds
jno
xor
dec
mov
jnp
cmpsl
sbb
scas
ds
mov
int
sbb
mov
int3
addr16
scas
test
adc
mov
into
clc
cli
inc
mov
mov
decl
sbb
movsb
les
and
test
in
insb
xor
xchg
addr16
aam
out
in
ds
push
mov
sbbb
and
test
ret
dec
or
xchg
ljmp
cmp
ret
xchg
mov
or
add
xlat
sub
mov
or
rcrb
jl
jae
and
fstpt
push
cld
addr16
ret
and
out
popf
out
mov
dec
mov
ficoms
xorl
movsb
inc
xchg
ret
cmp
push
sub
pop
jp
xchg
mov
loope
dec
outsl
ljmp
or
out
xor
jns
negl
cltd
mov
xchg
fcoml
lods
das
xlat
sahf
lea
fmul
or
into
cmp
popa
aaa
jmp
push
xlat
push
in
pop
push
sbb
repnz
add
sbb
ss
xchg
aam
mov
adc
cmpsl
mul
pop
add
add
mov
jp
mov
or
mov
enter
cmp
fisubs
or
inc
pop
fistpll
pop
push
dec
int
popa
std
mov
and
pop
mov
mov
jle
sub
ja
xor
imul
cmpsl
divb
out
xchg
lahf
add
dec
add
lock
sbbl
pop
or
xor
add
jae
mov
adc
enter
fsubl
cmp
sbb
ds
mov
add
pop
repz
adc
data16
pop
testl
sbb
push
rcrl
fildl
pop
dec
sbb
push
adc
sub
std
jp
arpl
and
ficoms
push
mov
in
js
xor
cmp
add
push
pop
push
sbb
cli
jge
addr16
pop
mov
dec
mov
jbe
xchg
arpl
cmp
test
xchg
mov
std
pop
out
adc
sub
pusha
add
loop
pop
popa
pop
data16
dec
gs
xor
pushf
sbb
jae
xor
mov
es
inc
stos
pusha
clc
mov
ss
or
add
sbb
mov
pop
aam
lss
shll
sub
mov
jae
insb
pop
lock
jle
jbe
mov
sbb
push
scas
sub
sti
inc
loop
lds
jbe
xor
pop
fstpt
sub
ficoms
in
adc
xchg
dec
fsts
mov
push
xor
into
rclb
mov
add
leave
cmpsb
popa
movaps
sar
or
pop
mov
ficompl
mov
pop
rcll
push
xlat
mov
sub
mov
mov
notl
jbe
xor
lret
xchg
lods
cmpsb
pop
push
cmc
cmc
insl
push
xor
arpl
xor
insb
fcompl
shrb
cmc
leave
mov
push
fidivrl
ficomps
push
leave
push
pop
or
add
inc
notl
mov
and
fisubl
mov
adc
inc
or
prefetch
or
mulb
out
cli
cmpsb
lret
fdivrl
pop
loopne
push
or
push
add
leave
fdivr
adc
repnz
incl
add
jg
loope
scas
and
outsl
fbstp
xor
sbb
fs
pop
xchg
mov
in
jp
xchg
or
pop
cmpl
mov
pop
mov
movsl
jo
pop
dec
push
ds
push
lea
subb
data16
sahf
test
test
or
cwtl
lock
lahf
call
cltd
je
pop
in
pop
dec
push
mov
lds
inc
enter
adc
sbb
mov
push
push
aad
movsl
sub
push
outsb
sbb
mov
out
or
popa
inc
sbb
push
or
xor
aas
jo
das
or
push
lods
fistl
test
js
rol
fsin
rcrb
ret
or
fcompl
push
outsl
cmp
push
xor
out
jo
test
mov
scas
mov
xchg
jbe
cmc
push
adc
fs
es
jae
out
sub
outsl
push
xchg
fwait
loopne
push
add
mov
rol
loopne
pop
daa
icebp
push
movsl
jl
out
stos
jge
xchg
and
insb
test
ja
scas
sub
aam
stc
mov
add
cmp
push
cmp
dec
ficompl
fdivrl
jns
out
mov
or
ljmp
in
mov
xorl
sub
aam
pop
jno
mov
jnp
and
scas
nop
cs
hlt
jg
push
roll
add
or
xlat
test
in
or
cli
movsb
jp
mov
scas
enter
inc
sbb
push
xor
mov
pop
lds
lcall
cmp
xchg
leave
pop
ret
xchg
jge
cmp
push
dec
push
test
mov
xchg
nop
push
xor
jl
lea
mov
out
flds
mov
outsb
cmpsl
jns,pn
aas
push
movsl
mov
dec
loopne
jmp
into
cs
scas
mov
xor
rcrl
imulb
jge
ret
mov
pop
inc
in
shr
lret
into
gs
stc
mov
pop
dec
mov
sbbl
repz
lar
jmp
mov
mov
addr16
push
fidivl
fwait
xor
push
or
pop
pop
shrl
pop
sub
pop
in
cwtl
xorl
in
mov
ljmp
popa
mov
lret
jnp
and
or
mov
inc
movsl
sti
test
int3
xchg
aaa
insb
mov
dec
inc
or
mov
inc
sub
jg
sub
dec
jl
lcall
mov
or
push
sub
enter
ret
insl
or
popa
xchg
cmp
pop
mov
rcrb
int
stos
mov
push
push
cltd
jne
sub
sub
frstor
pop
movb
xchg
ljmp
clc
mov
sbb
in
cwtl
mov
dec
xor
xchg
mov
or
andb
push
int
mov
cmp
jns
andl
mov
loopne
pusha
andb
jo
push
je
pop
out
jmp
or
outsl
jecxz
std
fistpl
jge
faddl
pop
repz
push
cli
sub
push
xchg
cld
fists
jns
in
push
pop
and
push
dec
int
xor
xchg
cmpsb
pop
mov
ds
mov
mov
stos
mov
xchg
jne
and
stc
inc
orb
in
sub
push
imul
stos
lods
mov
test
xorl
rcr
push
push
mov
leave
repnz
data16
jne
jmp
out
cmp
decb
add
inc
inc
stc
cmp
sbb
push
into
sbb
push
xor
sbb
je
jge
xor
leave
je
daa
gs
inc
add
scas
lahf
addr16
lahf
inc
jecxz
pop
push
xor
mov
pop
fstpt
rcll
pop
cmp
adc
mov
stc
dec
call
inc
xchg
std
jae
sbb
lahf
xor
pop
imul
push
daa
sub
mov
and
jb
jo
imul
pop
jb
dec
pusha
arpl
aas
insl
push
in
jns
dec
adcb
mov
loop
mov
fiaddl
mov
clc
jg
test
popa
mov
or
lods
and
dec
bound
sysexit
rcrb
cmpsl
mov
call
pop
lret
mov
dec
sbb
loopne
push
xchg
int3
adc
mov
sbb
cmpsl
mov
add
int
mov
inc
rcr
jl
and
std
int
sub
mov
fimull
sbb
cmp
push
jmp
mov
jae
les
and
lock
stos
dec
fwait
adc
test
or
arpl
mov
xchg
std
js
mov
test
jl
imul
cli
fnsave
jle
mov
inc
jmp
pop
mov
in
jecxz
add
bound
jl
dec
aas
arpl
fs
or
jnp
shrb
imul
pop
fidivrl
in
pop
pushf
mov
daa
sbb
imul
jmp
lds
fidivs
mov
in
icebp
sbb
sbb
std
fdivr
mov
jecxz
cmp
popf
dec
pop
movsl
dec
shl
fisttps
mov
pop
dec
jmp
ljmp
xor
inc
push
push
cmp
cld
imul
ja
mov
addr16
cmp
cmc
jnp
xor
lret
lods
scas
mov
lods
aas
cltd
pop
mov
clc
adc
scas
pop
and
adc
dec
mov
lahf
stos
sbb
and
pushf
lret
test
push
xchg
lret
xor
in
mov
mov
aaa
xchg
mov
loopne
mov
xor
or
testl
aad
jmp
icebp
mov
icebp
cmp
pop
test
outsb
loopne
mov
push
or
or
sbb
mov
out
insb
jno
cs
jl
in
add
pusha
add
add
fucomi
xor
shrl
clc
and
hlt
es
inc
leave
xor
pushf
loope
aaa
mov
lcall
mov
cltd
jl
xchg
jns
sahf
mov
out
iret
iret
jl
push
lods
movsb
mov
adc
sub
xchg
cmp
icebp
clc
pop
leave
push
cmp
push
adc
mov
dec
or
xchg
ret
mov
mov
pop
mov
mov
pusha
js
arpl
aam
sbb
clc
mov
xchg
jae
adc
push
fdivrs
mov
xchg
sti
aas
gs
mov
insb
mov
cmc
roll
fwait
jge
aad
mov
xor
mov
fnstsw
xor
add
bound
arpl
push
sub
add
xchg
or
popf
andb
fadds
mov
mov
inc
divb
shl
and
rcl
mov
pop
dec
popa
add
mov
idivb
xchg
sbb
rcrb
ret
sbb
stc
pop
or
dec
xchg
xchg
aam
mov
pop
enter
pusha
es
aam
scas
jnp
xchg
imul
fs
data16
mov
mov
insb
dec
test
out
fldl
cmp
pop
sbb
cmpsl
push
xor
dec
and
dec
jae
outsl
addl
or
mov
jns
add
cli
adc
inc
cs
cmc
repnz
inc
xorb
out
mov
mov
sbb
or
popf
sbb
xchg
test
or
dec
test
lods
mov
xor
push
test
xchg
mov
push
fimuls
lods
outsl
pusha
cmpsl
popa
in
pushf
jo
cmp
xchg
xchg
fcomp
and
loope
pop
xorb
jmp
mov
sbb
dec
bound
sbb
dec
cmc
call
lea
cwtl
imul
xchg
mov
dec
outsl
lea
je
or
push
mov
push
in
add
int3
inc
out
popa
cmpsb
outsb
and
jmp
dec
js
pop
es
cli
test
sbb
jle
das
mov
scas
sub
cmp
aam
ss
mov
adc
pop
inc
push
cmp
out
inc
cmp
and
icebp
and
pop
cltd
aam
mov
jg
push
imulb
mov
mov
cmp
imul
ret
xor
mov
jb
pop
iret
or
xchg
test
dec
add
cmp
adc
loop
xor
xlat
push
sbb
lods
jae
xor
sbb
push
in
add
or
inc
add
dec
lret
cmp
mov
es
hlt
stos
test
insb
adc
cmpsl
lret
rcll
mov
ja
cmp
scas
cwtl
das
addr16
mov
gs
loop
das
pop
xlat
into
sbb
imul
inc
mov
cmp
enter
sub
fidivs
lahf
pop
push
lea
ret
dec
fsubs
mov
repz
rorl
sbb
push
das
out
outsb
in
pop
in
jno
lds
pop
test
fwait
lret
out
xor
jmp
mov
bound
or
sub
test
sti
mov
inc
cmp
and
cmp
not
mov
ja
je
dec
imul
rorb
mov
out
jl
pusha
cmp
xchg
mov
loope
xlat
out
and
and
pushf
pop
enter
test
or
push
xor
xor
psubusb
punpcklwd
dec
lret
inc
mov
lods
push
out
out
ret
jmp
in
mov
aas
arpl
aad
adc
ror
push
insl
imul
lds
rcrb
fisubrl
in
pop
cmp
je
inc
fsubl
jns
out
aaa
inc
enter
imul
mov
sbb
mov
orl
push
in
xor
incb
fdivrl
lods
xor
in
test
push
movsl
xchg
adcl
pushf
mov
daa
in
push
lea
or
sub
cmc
test
mov
daa
bound
jecxz
push
cmp
in
loop
scas
in
clc
test
mov
cmp
mov
dec
fstl
xorb
xchg
jno
push
pop
loope
iret
push
aam
add
mov
xor
or
bnd
test
insl
jecxz
clc
les
sub
fldl
pop
push
mov
ss
fs
imulb
int3
dec
out
mov
xchg
nop
push
adc
leave
leave
aas
dec
scas
push
call
xor
add
pushf
aam
pushf
testb
add
jl
jb
and
sbb
jae
in
inc
sub
fsts
pushf
mov
inc
out
imul
out
adc
cmp
orl
leave
dec
insl
dec
pop
push
in
fs
jle
out
loopne
es
mov
inc
adc
lret
add
and
outsl
in
push
je
add
ss
loope
sub
arpl
sbb
sub
inc
dec
xchg
mov
scas
xchg
push
inc
bound
pushf
arpl
mov
jl
cmp
fldt
scas
sub
push
inc
mov
scas
pop
cmp
mov
hlt
shlb
arpl
inc
test
sbb
or
out
out
sbb
mov
jnp
dec
shll
std
mov
repz
xchg
pop
or
repnz
ja
jecxz
loope
lea
roll
clc
mov
cmp
sbb
mov
fdivl
sub
inc
scas
mov
inc
dec
into
sub
mov
lret
movsb
out
aam
xchg
insl
or
lcall
push
lock
dec
inc
mov
adc
sbb
sti
pop
fs
notl
bound
mov
lds
cmpsb
mov
lods
push
arpl
xchg
pop
popf
dec
pop
enter
imul
pop
jae
fcompl
ljmp
jmp
xor
dec
add
push
or
sub
xor
pop
test
inc
adc
lds
insl
stc
cmp
sub
mov
jnp
mov
xor
xchg
fs
fs
pop
pop
jno
scas
sub
ljmp
aaa
sahf
test
fdivl
cmpsb
inc
and
add
xchg
inc
hlt
sub
push
sti
mov
arpl
js
xor
jne
adc
fwait
insl
dec
mov
in
xchg
lods
adc
fmul
mov
mov
cmp
sub
daa
cs
mov
fs
mov
sbb
xor
setns
mov
xchg
mov
sub
sbb
lock
pop
xor
ret
pop
inc
das
ja
pop
sbb
add
sbb
or
jnp
je
in
inc
mov
adcl
out
jae
mov
pop
out
xchg
add
shl
jae
out
call
out
scas
cwtl
loopne
cmp
testl
cmp
cwtl
lahf
ds
adc
jnp
les
pop
or
jbe
hlt
pop
jge
sti
dec
mov
mov
inc
sahf
inc
lds
xchg
inc
and
repz
mov
sub
call
test
sbb
add
mov
jl
ret
icebp
push
inc
repz
jmp
xchg
jb
and
aas
push
lds
pop
loopne
sbb
cltd
push
subb
aad
es
out
test
loopne
xor
jge
xchg
dec
push
movsl
pop
rorl
push
push
jo
in
mov
fs
cmpsl
sbb
lcall
push
scas
mov
push
insl
lret
pop
add
jge
xor
sar
push
rcl
xor
pop
mov
hlt
ss
test
pusha
cmpsl
push
imul
jmp
dec
or
ret
test
pop
ljmp
insb
xor
fnsave
xor
xor
enter
negb
cmp
lcall
pop
cmp
gs
dec
cs
sti
adc
outsl
pusha
xchg
ja
and
mov
mov
sub
and
fstpt
adc
jbe
nop
stc
frstor
jnp
xor
into
sbb
mov
mov
cmp
push
test
cltd
inc
push
divb
arpl
divb
iret
lahf
sbb
mov
push
fstl
xor
inc
pop
scas
add
daa
sbb
imul
jno
pop
jg
xchg
mov
push
out
xor
cmp
idiv
icebp
or
iret
dec
push
dec
cmp
or
fsubp
out
shl
inc
xor
mov
push
jbe
mov
sub
sub
push
popa
out
addr16
shrl
and
sub
xor
xchg
mov
pusha
dec
mov
pusha
xor
push
in
popa
or
jl
mov
rcll
cmp
dec
xchg
push
scas
mov
mov
push
cmp
jae
ss
leave
cmp
loopne
jl
pop
mov
inc
shll
sbb
pop
jne
and
loop
test
mov
dec
dec
mov
sub
cmp
orb
mov
addr16
push
lcall
add
jae
test
mov
and
and
add
dec
icebp
movsb
pop
pop
and
in
andl
or
dec
mov
xchg
mov
xchg
xchg
mov
mov
jmp
add
mov
adc
ss
cmp
mov
mov
pop
ret
repz
cmp
mov
sub
xchg
xor
pop
or
fbstp
insb
jecxz
fadd
xor
mov
add
cmpsb
aaa
inc
cmc
mov
test
mov
sbb
or
and
jp
or
xor
loope
xchg
push
mov
inc
jmp
cld
in
sub
push
mov
and
sub
mov
mov
mov
rcrb
ret
test
sub
sub
pop
fldenv
mov
jno
ljmp
cmc
sbb
dec
push
cmpsw
in
push
pop
fnstcw
call
icebp
fidivs
xchg
and
sbb
cli
inc
adc
loop
je
idivl
pop
in
mov
popa
adcl
mov
frstor
out
sbb
dec
push
cmp
add
scas
adc
sbb
push
mov
inc
and
test
imul
lahf
sub
cwtl
inc
out
fidivrl
out
mov
insb
cmp
pusha
mov
cmpsb
mov
jmp
clc
dec
jnp
mov
mov
incl
push
mov
int
call
lods
les
jl
jns
fstps
outsb
jge
aam
mov
fsubrs
sbb
sbb
cmp
shll
jecxz
test
and
cmc
frstor
movsl
pop
insl
clc
ret
rolb
bound
test
sar
push
mov
movsb
in
in
or
push
imul
mov
pop
insb
test
xor
stos
cmp
in
jl
iret
adc
pop
test
dec
pop
and
pushf
sbb
fs
push
bound
stos
ret
aas
cmpl
sahf
mov
aad
fwait
jb
xchg
in
andb
xchg
jle
inc
jp
lahf
dec
jle
mov
mov
mov
in
cmpsb
mov
lods
sbb
aam
dec
jmp
push
stos
xor
pop
push
xor
mov
or
dec
fcomps
int
and
pop
nop
inc
aam
shr
sub
cwtl
cmp
sahf
adc
scas
dec
mov
and
popa
repnz
insb
pop
fsts
das
push
ret
xchg
call
mov
rorb
xchg
or
daa
movsb
push
imul
xchg
ds
mov
imul
or
out
push
fldcw
mov
pop
xchg
ljmp
mov
dec
test
jnp
dec
dec
sbb
dec
andl
fiadds
or
imul
outsl
push
sbb
push
cs
in
or
mov
mov
xchg
int3
xor
or
push
jo
dec
mov
xchg
out
imul
enter
push
std
cwtl
pop
xlat
xchg
cmp
aad
ljmp
fmul
cmp
adc
shll
cli
sarl
in
and
dec
xchg
inc
cmpsb
out
adc
movsb
xchg
lods
test
jl
sarb
jns
mull
and
daa
jmp
stos
push
pop
jae
inc
addr16
stos
out
mov
sahf
sahf
sub
mov
in
xor
adc
cmp
outsl
jnp
jae
xchg
imul
std
ss
push
leave
div
sbbb
sub
cmp
lock
jns
jecxz
xor
pop
add
loop
pop
or
les
scas
or
adc
lods
lds
ds
lcall
or
aas
nop
fists
mov
mov
loope
mov
ja
sbb
xchg
jns
mov
mov
mov
mov
aad
push
inc
jnp
and
test
ja
sub
shl
mov
jo
push
and
mov
inc
push
js
mov
sbbb
sbb
dec
jl
das
das
mov
jle
test
pop
cmp
insl
hlt
jbe
and
std
mov
jbe
addb
in
adc
aad
push
push
sbb
mov
es
out
test
mov
std
xorb
mov
hlt
sar
jae
sahf
cmp
dec
imul
sub
pop
mov
scas
xorb
or
jne
aam
or
xchg
add
cs
std
mov
test
xor
pusha
push
loop
adc
and
pop
sbb
mov
mov
arpl
jb
ret
aad
push
out
mov
or
rorl
jge
mov
mov
xor
movsb
ljmp
div
aad
loope
mov
xorb
cmp
insl
arpl
sar
mov
inc
loop
cld
mov
ret
xchg
dec
outsl
sarl
sbb
nop
mov
test
jne
mov
pop
aas
sbb
nop
inc
mov
outsb
daa
dec
adc
rcr
xchg
jo
adc
pop
jns
mov
mov
jl
hlt
mov
sub
mov
addl
fwait
mov
pop
and
cs
subl
out
fcoml
mov
imul
rcl
jno
dec
jl
bound
push
mov
fadds
fs
jmp
mov
pop
cmp
scas
arpl
pop
push
je
dec
xchg
repnz
push
bnd
loop
loop,pn
mov
xlat
gs
xchg
out
jae
cmp
and
vmread
cwtl
mov
in
inc
fstps
cmp
mov
lods
test
cmp
lcall
insb
push
pop
mov
mov
mov
stos
sbb
push
in
mov
push
pop
cmp
jb
mov
jge
adc
add
sub
in
xor
xlat
fs
xchg
ja
jmp
sub
dec
and
fcomps
adc
mov
mov
sub
push
es
mov
xchg
ljmp
outsl
sti
fcompl
pop
sti
loopne
or
xchg
ja
insb
notl
xchg
lods
add
fs
test
push
adc
mov
jnp
adc
cwtl
xor
mov
cmc
xchg
mov
lcall
jge
lds
mov
xchg
out
outsl
dec
add
or
adc
mov
dec
fmulp
popa
lret
subl
lret
test
xchg
add
les
imul
cmc
dec
mov
test
sarl
movsb
mov
outsb
outsl
fdiv
hlt
mov
cli
adc
dec
stos
add
add
and
sahf
pushf
mov
dec
push
mov
ret
stos
sub
inc
fidivrl
mov
aad
jge
sbb
sarb
jp
js
dec
pop
pop
js
sub
xor
stc
leave
jmp
pop
cmpsl
mov
mov
pop
xchg
inc
adc
cmp
aas
inc
adc
sub
lea
jp
outsl
imul
or
sahf
inc
outsl
dec
xchg
inc
mov
sub
add
mov
xor
es
jmp
fdivrl
test
aas
and
or
sub
lds
inc
stos
dec
int
cmp
sbb
mov
outsl
jbe
xchg
sbb
sub
scas
sub
inc
jl
dec
push
insl
mov
xchg
aaa
pop
jno
iret
sahf
inc
mov
and
stos
pop
lret
lahf
loope
out
int
out
mov
sarb
mov
pop
jns
imul
xchg
add
push
aad
xlat
cmpsb
pusha
inc
pop
adc
jns
ds
stos
sub
pop
fsubr
mov
jne
push
addl
push
jp
add
jo
jp
pop
jg
pop
shlb
ja
shlb
ss
and
jg
mov
xor
fxch
mov
fucomp
and
std
inc
mov
inc
imul
pop
dec
fdiv
insb
repz
inc
test
push
xchg
cld
xor
mov
fidivrl
stc
mov
mov
push
decb
icebp
dec
jmp
int3
scas
add
sub
and
outsl
pop
shlb
inc
push
sub
or
popl
aam
ret
inc
fnop
repnz
cltd
inc
lret
push
push
jno
push
add
sbb
lret
lcall
aad
dec
flds
sbb
lock
aad
xchg
repnz
invd
jo
mov
ret
mov
push
bound
adc
les
lret
sbb
pushf
push
sbb
cmp
xor
movsb
jb
sbb
xor
clc
outsl
aam
movl
pop
push
nop
call
xor
fldcw
add
lock
pop
sbb
fmul
test
icebp
xor
rcl
dec
out
add
repz
pop
sti
lea
scas
push
add
movsb
pop
pop
mov
lods
jbe
orb
pop
pop
and
cld
mov
xchg
mov
xor
bound
fcmovbe
mov
jp
lahf
xlat
jmp
imul
out
cld
cmp
rcrl
xor
xchg
adc
inc
arpl
adc
dec
adc
dec
mov
mov
jbe
fisttps
in
jge
rclb
fwait
shrb
xchg
icebp
push
shlb
jmp
daa
mov
movsb
xchg
shrb
push
test
fcmove
mov
mov
cmp
stos
jne
adc
int
inc
and
in
jns
dec
push
sub
dec
jne
cmpl
jns
add
in
mov
cwtl
add
jge
in
lock
fmuls
iret
pop
lea
scas
repz
ja
mov
push
xor
push
adc
jp
cmp
clc
out
iret
testl
into
gs
sarb
mov
addr16
push
adc
mov
aam
push
xchg
and
jle
aam
inc
jb
pop
mov
cmp
hlt
stos
pop
inc
inc
stos
sbb
jge
cmp
sub
shll
or
lret
int3
shll
int
and
xor
je
mov
bound
and
push
lahf
push
test
push
stos
pop
lea
xchg
jb
sub
and
and
cli
aam
aas
icebp
mov
and
imul
sbb
inc
mov
inc
orl
xor
inc
lea
pushf
lahf
aas
lret
pop
std
dec
push
xchg
push
push
xchg
cmp
or
rclb
lahf
fwait
js
icebp
push
mov
in
mov
or
cmpsl
adc
mov
mov
gs
push
cmp
cltd
dec
jg
pop
test
jg
iret
xchg
dec
mov
sub
popa
call
xchg
out
add
lea
inc
fs
in
shr
out
mov
loopne
xchg
popf
mov
outsl
mov
push
mov
outsb
in
arpl
push
test
es
mov
sbb
fldcw
cld
insb
pop
shll
adc
out
and
daa
ret
lods
inc
mov
insl
pop
outsb
hlt
in
push
mov
rcrl
ljmp
int
jo
fcomip
roll
sub
sbb
shlb
enter
lcall
add
enter
xchg
movsl
dec
pop
add
stos
imul
mov
fsubl
dec
dec
ds
inc
mov
xor
xchg
stc
xchg
adc
cmc
pop
sbb
pop
mov
clc
inc
rcrb
out
mov
sbb
adc
add
out
and
cmp
int
xor
cmp
ja
mull
and
push
xor
dec
lds
jecxz
andb
bswap
aad
adc
and
jns
adc
jno
pop
mov
mov
mov
lret
push
int
divl
lahf
jns
inc
jmp
jg
aam
mov
mov
jg
fs
leave
mov
cmpl
rcr
dec
insb
sti
xor
decl
sub
push
movb
outsl
imul
sbb
lods
or
mov
cmpsb
fs
adc
mov
negb
push
inc
rorl
push
jmp
stos
add
push
adc
outsb
or
push
and
ret
scas
xor
pushf
push
movsl
and
lahf
adc
inc
test
dec
push
idivb
incl
sub
lods
adc
je
inc
sub
sbb
stos
or
mov
xchg
loope
out
xor
out
pop
mov
mov
insb
andb
add
sbbl
dec
lods
fs
pop
popa
fs
mov
pop
adc
cld
mov
push
lods
out
push
iret
push
mov
sahf
mov
cmp
enter
push
inc
mov
mov
inc
dec
jne
pop
fnstenv
jecxz
adc
loope
lcall
mov
insl
push
inc
mov
popf
shrb
mov
movsb
aaa
and
jne
sub
in
jge
lds
out
hlt
pop
cmp
xchg
pop
dec
mov
adc
arpl
mov
or
xchg
ds
sbb
in
cmp
sub
sbb
call
popa
mov
cmc
push
dec
jb
mov
add
das
inc
mov
mov
jecxz
icebp
fidivl
aas
mov
inc
push
and
jp
jno
push
fsubrl
sub
popa
xchg
mov
dec
sbb
mov
xchg
ljmp
lods
mov
rclb
sti
push
rcrl
sbb
mov
mov
mov
mov
mov
jp
sahf
stos
imul
lock
cwtl
mov
pop
mov
sarl
push
in
frstor
sub
mov
fiadds
mov
dec
mov
out
test
lcall
rcl
jae
add
imul
stc
in
cmp
mov
push
sub
jecxz
out
js
and
fdivr
jle
lods
inc
loopne
fadds
push
popf
xchg
adc
adc
mov
sbb
pop
pop
inc
jb
xchg
loopne
shr
fwait
leave
adc
cli
in
adc
pop
inc
cld
mov
jmp
jg
mov
dec
adc
sub
rcll
addr16
xchg
mov
in
adc
enter
xchg
jg
test
xchg
adc
sti
jne
jns
aas
add
mov
jp
cmc
fdivrs
addr16
inc
sub
iret
inc
sub
lods
pop
mov
jnp
rolb
outsl
je
xlat
out
out
pop
jle
aas
sub
mov
jp
or
inc
rclb
loope
xor
mov
mov
mov
mov
fstl
sub
out
ror
sbb
inc
cmc
ds
int3
jb
fcomps
add
adc
and
mov
stos
cmp
in
aam
push
mov
in
insl
cwtl
sub
inc
fmuls
push
jo
or
mov
fsubrs
mov
or
js
inc
jbe
repz
fisttpl
cld
lcall
lret
jne
shrl
xor
jb
push
or
imul
outsl
xor
ja
int
pop
lret
roll
arpl
adc
mov
sbb
clc
push
adc
sub
ja
xchg
sahf
and
mov
mov
sahf
jmp
xchg
cltd
push
jbe
adc
pusha
repz
enter
insb
leave
imul
mov
movsl
cmp
sbb
mov
mov
push
fs
and
ss
xchg
mov
in
adc
push
daa
jp
lcall
cmpsl
bswap
pusha
lret
dec
mov
test
cmp
push
mov
push
dec
imul
insb
fsubs
imul
loop
xor
fnsave
mov
inc
mov
push
popf
and
inc
sbb
cmp
pop
push
imulb
cmp
xor
cs
jge
mov
cmp
dec
std
mov
movsl
adc
sbb
xchg
pop
out
pusha
mov
jp
or
cmpsb
or
inc
aas
add
jecxz
lods
sti
icebp
or
cmp
loopne
aaa
pop
call
xchg
jmp
cmpsl
jp
cmp
int3
insb
xor
pop
mov
sub
jo
sbbb
xor
fsubrl
ss
outsl
mov
cmp
gs
mov
xchg
adc
or
jg
inc
pusha
stc
rcr
add
lds
int3
push
pop
mov
scas
mov
and
inc
mov
mov
mov
inc
je
jecxz
movsl
outsb
fcompp
sbb
xchg
cld
out
ret
aad
stos
out
ret
js
cmp
sbb
sub
push
cltd
incl
mov
push
mov
js
gs
das
push
cmp
ds
dec
add
pop
xchg
sub
inc
fldt
outsl
or
rcl
hlt
mov
add
test
push
mov
js
xor
cmc
jl
mov
xor
int
jg
cli
rcr
mov
movsl
and
add
mov
out
dec
gs
push
aas
cmp
dec
addb
xor
lcall
out
mov
add
rcrb
lock
mov
mov
xor
and
or
push
andb
aas
sbb
pop
es
stos
je
iret
mov
pop
push
cmp
cmp
ficoml
mov
mov
lret
push
add
sub
push
cmp
mov
addr16
inc
xchg
outsb
xor
sub
ljmp
mov
cmc
or
push
mov
jno
pop
mov
icebp
mov
insl
es
push
mov
mov
jmp
or
jmp
mov
sbb
lahf
stc
jno
sbb
push
data16
mov
or
push
and
or
call
dec
ficoml
pop
orl
fmull
in
adc
xchg
xchg
fxch
lock
jo
mov
jg
addl
inc
stos
stos
in
pushaw
pop
mov
jmp
daa
outsl
lods
ljmp
sub
out
inc
mov
das
call
mov
rol
mov
pop
es
lods
repz
dec
mov
pop
arpl
cmc
sarb
sbb
lahf
cmp
sub
pop
cld
xchg
mov
dec
or
pop
negb
inc
outsb
xchg
lods
testb
lret
shr
and
fdivrl
stos
ja
int3
add
loop
or
and
arpl
jns
push
clc
repnz
arpl
xchg
test
jno
stc
mov
das
dec
xor
add
and
cmpsb
aaa
jg
mov
cmpsb
testl
in
adc
sbb
testb
or
inc
push
pushf
add
and
cmp
pop
add
push
add
or
adc
pop
aad
test
addr16
mov
cmpps
loopne
pop
mov
pop
dec
pop
mov
xchg
call
and
jb
daa
fsub
jo
jne
packuswb
jmp
aas
cmpsl
scas
repz
jmp
call
push
pop
push
pop
orb
pop
stc
ret
sarl
dec
xor
rcll
pusha
sar
mov
jae
lea
std
testl
adcb
cmp
in
movl
cmpsb
cli
pop
cltd
jae
adc
sbb
or
fs
xor
jecxz
cld
idiv
xchg
or
push
loopne
sub
cmp
pusha
out
sub
sbb
adc
push
push
jecxz
xchg
das
push
push
pop
aas
fucomip
out
aaa
dec
mov
jecxz
sub
mov
pop
push
dec
nop
rolb
xor
pop
and
jecxz
push
cwtl
add
adc
pop
aam
test
into
sahf
les
js
in
and
out
aam
es
mov
dec
inc
loopne
repz
xchg
je
int3
sbb
inc
xor
ret
xchg
xor
ret
mov
or
pop
sbb
cmp
shll
mov
cmp
xor
cmp
arpl
stos
xchg
stc
add
sbbl
cmpsb
or
pop
insb
dec
cmp
add
adc
push
jl
inc
out
ds
inc
push
push
arpl
or
test
orl
in
sub
ja
lret
cmc
push
sub
push
pop
clc
popa
lcall
mov
mov
cmp
jp
loop
and
fsts
fidivrs
mov
ljmp
jnp
mov
xlat
leave
call
pop
icebp
lods
inc
add
int3
push
cltd
inc
sbb
pop
insl
sub
ds
insl
das
dec
rclb
push
push
aam
lock
jnp
sbb
dec
fldl
aam
pop
sub
ret
xchg
mov
xor
add
mov
add
mov
cmp
and
xchg
imul
mov
js
enter
xchg
loop
cmp
icebp
sub
jae
push
ret
iret
outsl
ss
pop
dec
popa
je
stos
jp
pop
out
stos
daa
lcall
add
outsl
in
popf
lds
test
xchg
dec
adc
ror
adc
sbb
sbb
mov
popa
mov
add
xor
jl
jg
xchg
xchg
out
mov
cs
stos
jle
pop
rcrb
dec
rorb
cld
cmc
lret
cs
fidivrs
sbbb
inc
pop
mov
int3
sbb
mov
popa
xchg
movsb
xchg
cltd
pop
push
in
addl
pop
gs
popf
jno
jg
or
outsl
fcomps
fs
xchg
sbb
cmp
add
sahf
dec
aam
movsl
fdivl
push
lahf
jb
sbb
mov
mov
jno
popa
aam
int3
loop
lods
jle
movsb
sbb
xchg
je
ret
xor
mov
sub
jmp
lds
cmp
data16
iret
cmpsb
adc
mov
dec
fimuls
fiaddl
xchg
mov
push
repnz
mov
jle
pop
aam
lock
ljmp
jl
loopne
mov
arpl
and
addr16
push
in
pop
mov
inc
imul
sub
popa
xchg
and
in
sub
movsl
mov
dec
lods
hlt
cmp
subb
jne
jg
in
jp
out
pop
jmp
repnz
mov
outsb
push
and
jb
xchg
push
mov
mov
push
jg
mov
jecxz
fisubl
push
pop
mov
mov
dec
sbb
jo
cmp
jo
sbb
mov
sbb
ret
fbld
pushf
or
clc
push
jo
xlat
pop
insb
mov
lock
jb
or
bound
fs
aam
jl
add
bound
pop
cmp
cmc
mov
inc
in
pop
push
test
jo
and
inc
test
pop
pop
pop
ret
pop
roll
and
sbb
jg
sub
aaa
cli
sbb
pop
lods
cmc
cmc
andnps
xchg
xor
out
cmp
jl
xor
push
push
jnp
call
andb
std
or
push
call
call
dec
les
nop
adc
data16
mov
add
pushf
adc
inc
data16
sbb
push
into
and
int3
ja
clc
xchg
repz
insl
insl
xor
jae
or
cmp
adc
clc
jns
sbb
sti
jp
mov
and
mov
push
mov
fs
adc
aaa
and
icebp
mov
mov
or
sbbl
loope
dec
inc
fcmove
adc
jg
pop
fisttps
xor
sub
mov
inc
inc
mov
int
out
push
push
mov
mov
cmp
mov
aaa
mov
xor
str
mov
idivb
adc
es
xor
roll
dec
dec
imul
dec
imul
pop
testb
test
fwait
stc
adc
leave
xchg
fisttpll
ja
mov
ret
push
rclb
popa
das
setl
xor
inc
lods
daa
mov
stos
inc
dec
andb
xor
test
jmp
ljmp
aad
sqrtps
add
movsb
inc
mov
push
jg
ret
xchg
les
jmp
icebp
mov
nop
sub
add
je
sub
and
add
mov
inc
sti
xchg
insb
cmpsb
cmp
push
xchg
sbb
xchg
or
es
pusha
mov
jo
sbbl
fidivrs
sub
inc
push
mul
nop
xchg
mov
test
add
movsb
stos
ja
addl
out
call
les
xor
repz
or
scas
lea
repz
insb
xor
push
pop
insl
cmp
xchg
adc
push
jns
fidivrl
dec
sub
insl
loop
jns
sub
iret
icebp
xchg
or
out
out
dec
fcom
push
xlat
test
loope
mov
inc
in
sti
aam
rclb
ss
out
movsb
adc
fadd
cmp
mov
shlb
iret
cmp
stos
pop
es
out
loope
loop
lds
inc
xlat
cmp
bound
loopne
push
mul
inc
loop
mov
data16
pushf
push
notb
mov
mov
arpl
dec
movsb
push
fisttpl
movsl
jbe
sahf
stos
je
push
xchg
push
mov
xor
sub
cmp
mov
clc
and
jmp
or
push
mov
cs
sub
mov
sbb
mov
std
pusha
xor
inc
rcll
or
push
rcrb
jne
pop
jle
mov
sub
sti
push
into
mov
jnp
cs
iret
and
inc
cmp
lea
sbb
sbb
push
dec
or
lcall
add
xor
test
je
xor
iret
data16
sti
mov
adc
push
xor
mov
mov
mov
hlt
xchg
fldl
jb
pop
xchg
into
or
inc
pop
mov
xor
mov
sub
jae
jecxz
or
clc
fsubrl
movsb
xchg
sarl
xchg
push
cmpsl
jb
mov
pop
mov
or
push
cmp
rclb
sub
repnz
xchg
pop
testl
jmp
or
cmp
test
sti
mov
in
dec
jmp
sbb
mov
test
cmp
mov
add
movsb
push
push
pop
push
cmc
cli
aad
int3
lret
lds
push
aam
rcrl
sub
push
pop
jnp
jp
mov
mov
mov
lods
out
cltd
stc
xchg
insb
enter
adc
sbb
out
dec
push
push
scas
inc
jg
leave
add
repnz
lahf
or
fsub
or
inc
out
lahf
xchg
repnz
call
orb
out
add
in
push
mov
xchg
cld
and
jl
or
add
push
inc
pushf
mull
and
push
inc
pushf
inc
dec
pop
mov
rorb
xchg
add
and
imul
js
push
mov
js
push
lahf
test
cmpsl
cld
insb
inc
push
fsubr
lcall
lea
scas
add
add
aas
dec
jo
dec
lods
loop
hlt
pop
jo
pop
idivb
push
call
je
jp
pop
push
aad
rcrb
push
popf
loopne
xchg
fdivrs
sub
cli
xor
adcb
mov
leave
aam
fildll
shl
icebp
xchg
out
aad
mov
out
jg
xchg
jae
pushf
mov
jb
mov
dec
fimull
push
dec
sahf
push
psllw
out
cmp
mov
xchg
arpl
xchg
push
adc
int
es
or
out
orb
pop
cmp
dec
and
pushf
sar
test
push
inc
inc
adc
adc
je
mov
jmp
dec
dec
decl
sub
push
jo
inc
rclb
pop
loopne
shl
jg
fwait
dec
xchg
dec
push
pop
fbld
mov
xor
or
enter
adc
testl
adc
cmpsl
xor
add
shrb
adc
dec
mov
push
xor
test
rcrl
sub
add
sub
enter
repnz
and
jo
aam
cs
int3
inc
int3
sbb
aam
jo
js
and
mov
cmp
dec
or
outsb
or
xor
test
fidivrs
adc
test
pop
push
or
pop
fld
cmpsl
test
scas
push
cmp
inc
mov
xlat
cmpsl
aad
and
enter
repnz
cmpsb
push
and
mov
xorb
mov
cmp
fstps
mov
daa
xchg
mov
pop
adc
xor
jno
mov
or
sbb
inc
pop
sbb
in
iret
jo
dec
bound
and
or
pop
int
dec
rorl
in
leave
stos
scas
dec
push
xor
jne
pushf
adc
aam
addl
inc
xor
dec
xor
xorl
xchg
jl
rcrl
push
lods
arpl
hlt
ficompl
insb
outsb
mov
jae
mov
fldenv
push
addb
in
cltd
jns
fistpll
inc
adc
mov
shrl
mov
push
mov
outsl
xchg
jo
and
in
nop
and
xchg
push
jle
outsl
and
or
dec
mov
add
mov
pushf
clc
add
test
ljmp
jecxz
jnp
mov
into
xor
mull
or
mov
popa
push
adc
xchg
inc
loopne
ds
mov
pop
in
adc
sub
or
push
cmc
mov
repz
lods
andl
bound
es
out
push
mov
loop
fwait
xor
sbb
jmp
mov
loope
aas
or
xchg
xor
jge
xchg
out
movsb
jne
or
fstpt
std
mov
pop
enter
shlb
inc
sahf
jg
test
decl
pushf
sub
lds
or
mov
notl
addr16
ret
cmc
clc
push
mov
daa
outsl
cli
das
test
std
push
mov
movsb
in
xor
add
fs
push
and
std
in
xchg
insl
lds
stos
inc
es
test
adc
cmp
jge
jl
loopne
add
movsb
cmp
jg
mov
popa
stc
fisubs
aas
cmpsl
xchg
jl
pop
jb
or
sti
hlt
in
ss
pop
movsb
fstpl
ret
repnz
inc
xor
addb
xchg
mov
mov
adc
int
pop
cwtl
jno
outsb
xor
and
mov
arpl
outsl
dec
xchg
xchg
jno
jns
cli
adc
jg
dec
out
jle
push
mov
clc
bound
nop
insl
imul
popf
test
lock
push
std
inc
adc
insb
das
add
add
mov
sbb
out
adc
cmp
push
mov
enter
dec
inc
mov
call
mov
inc
ds
out
jl
adc
or
cmpl
repz
push
lods
adc
push
xor
in
lcall
icebp
ficomps
jno
xlat
xlat
jno
xchg
out
pop
pop
lcall
push
and
in
xlat
add
enter
push
leave
out
stos
negl
xlat
lds
push
fstps
in
ret
stos
sbb
int3
les
cmc
rorb
jns
xor
and
out
fdiv
inc
mov
xor
outsl
roll
and
bound
mov
lds
mov
out
enter
or
ljmp
adc
hlt
idivb
scas
jne,pn
fldenv
xor
scas
push
jb
rolb
ret
scas
decl
pop
push
cld
mov
pop
and
ret
jge
fcoms
mov
sub
add
dec
push
cmpsl
push
cli
cmp
adc
mov
sub
icebp
xor
or
xlat
das
jmp
imul
or
mov
aas
inc
in
and
ret
insb
adc
jae
ret
out
sti
cmpsb
xor
and
dec
scas
mov
adc
loopne
jno
aad
rolb
push
stos
ficoml
sub
cmp
inc
js
mov
mov
in
jp
inc
add
fs
out
and
lahf
out
sbb
add
fisubl
push
mov
cli
out
ret
daa
mov
scas
test
and
negl
xor
scas
push
push
stc
outsb
out
jae
pusha
cltd
cmp
mov
mov
add
in
rolb
mov
lods
mov
dec
shll
mov
push
sbb
es
leave
inc
sbb
jbe
test
dec
push
cmp
inc
lods
push
das
sbb
jnp
add
lock
aam
inc
int3
sub
lock
adc
test
push
lds
inc
and
push
sahf
push
popa
gs
inc
aaa
mov
dec
shlb
sub
pop
in
fisubs
fsubs
mov
mov
pop
adc
jno
add
push
push
inc
add
insl
adc
pop
mov
test
pop
dec
sbb
push
jmp
sub
es
sub
repz
and
xor
mov
or
push
adc
daa
repz
push
mov
aad
pushf
test
pop
inc
or
cmc
xchg
bound
mov
and
pop
cmp
fmul
fnstsw
push
cmp
inc
out
in
xor
out
inc
inc
push
push
jg
loop
mov
jne
popf
pop
pop
sub
push
fdivrp
or
cmpsb
pop
in
es
fld
in
cmp
arpl
out
gs
ljmp
push
inc
sbb
icebp
jge
mov
push
sti
sbb
sub
or
sbb
xchg
out
push
out
dec
xchg
jecxz
cli
int3
hlt
xchg
mov
push
or
scas
dec
push
fdivr
fcompl
jb,pt
icebp
mov
and
mov
dec
cmp
xchg
stos
mov
inc
mov
pop
fcompl
push
lock
pop
cltd
add
stos
out
push
mov
add
mov
jl
pop
lds
fimull
hlt
inc
mov
and
cld
shufps
dec
xor
fcompl
cmp
jae
xor
cmpsl
cltd
pop
cmc
sub
dec
std
or
mov
js
pop
mov
pop
flds
cmc
cmpsb
loopne
cmp
int
faddl
inc
and
outsl
jmp
jbe
clc
scas
repz
inc
stc
jne
js
mov
or
xchg
mov
push
or
out
push
arpl
mov
jecxz
sub
shrl
insb
xor
sbb
sbb
stc
pushf
cmp
fdivrs
test
jo
sbb
shr
pop
imul
stos
rcrb
push
aas
orl
inc
cmpsl
sbb
dec
sahf
ds
sub
lret
repz
pop
out
jge
incl
xchg
xor
iret
addr16
sbb
daa
add
das
popa
xchg
adc
call
mov
ss
rcll
dec
loop
nop
out
scas
ljmp
xchg
fs
bound
daa
push
subl
xchg
sbb
or
add
pop
jno
inc
in
xchg
pop
clc
mov
sbb
mov
cmp
orb
jno
stos
insl
ret
sub
push
imul
lahf
cmp
icebp
mov
xor
lcall
sbb
xchg
out
jne
shll
imul
push
fbstp
in
and
pop
lret
pusha
in
mov
out
jnp
rorb
fstp
jnp
ljmp
sarb
mov
push
xor
movsl
lcall
daa
pop
mov
mov
mov
sub
mov
mov
mov
outsl
outsb
sbb
cmpsb
xchg
adc
and
jae
inc
mov
aam
iret
xchg
xlat
dec
mov
daa
cmp
fstpl
xor
mov
adc
ljmp
lahf
repnz
lods
xor
sbb
ret
or
fmuls
cmpsb
mov
lret
mov
add
jo
inc
loop
mov
pusha
pop
pop
dec
push
bound
add
xor
movsl
dec
aad
or
xchg
in
mov
mov
inc
fwait
adc
pushf
and
int
mov
sbb
test
mov
fcompl
jb
call
inc
shll
aas
inc
xor
aas
cmp
cwtl
lcall
add
mov
xorl
call
cli
mov
in
mov
filds
inc
dec
push
jae
dec
outsb
dec
mov
and
xchg
mov
imul
movsb
lcall
cmpsl
repnz
mov
cmpsb
mov
aas
dec
sbb
test
jnp
nop
push
icebp
cvtps2pd
jo
out
cld
cmpl
jbe
lods
jne
add
xor
dec
gs
in
xlat
lods
sub
mov
fadd
pop
or
scas
push
outsl
mov
dec
and
xchg
inc
lds
orb
cmc
adc
dec
aaa
sub
hlt
xor
loope
in
mov
cmp
cmpl
mov
mov
push
jl
pop
icebp
adc
dec
call
inc
lea
test
dec
sbb
movsl
mov
push
je
ret
cmp
push
cli
inc
scas
jecxz
or
mov
movl
mov
fidivrs
adc
dec
icebp
out
jp
mov
gs
or
inc
push
add
mov
adc
cwtl
movsl
pop
inc
dec
cmpsl
cmp
mov
push
rcl
scas
es
mov
jle
mov
cmp
dec
xor
jle
test
fst
test
mov
xor
rol
test
divl
insl
lock
cmp
push
shr
jo
nop
aas
push
jne
mov
push
cmp
daa
mov
movsl
ljmp
push
aaa
arpl
aas
popf
fstl
mov
loope
incb
cmpsb
xor
mov
pusha
shl
or
or
test
adc
fildl
mov
sub
mov
xlat
btr
je
arpl
mov
in
subb
push
sbb
aam
into
bnd
pushf
mov
mov
out
js
fdivl
sub
lcall
ret
jnp
cwtl
fwait
add
jecxz
push
cmp
cmp
push
mov
pop
mov
xchg
imul
clc
adc
je
fsubrl
cwtl
push
push
push
xchg
inc
jecxz
sbb
and
adc
pop
pop
ja
adc
ret
adc
inc
push
pop
fsubrp
cmp
mov
cmp
dec
cmpsl
adc
or
aaa
push
pop
adc
mov
out
adcl
xchg
aad
fsubrl
cmp
mov
stos
bound
mov
aad
pop
jne
pushf
scas
or
and
jmp
add
push
mov
sbb
js
fst
mov
jno
in
sbb
subl
mov
xchg
push
lcall
in
xchg
leave
jle
add
popf
push
js
dec
test
stc
pop
test
mov
ret
add
xchg
xor
daa
sbb
push
leave
aad
fsubrs
mov
jl
aaa
push
xchg
cli
sbb
add
out
bound
cmp
shlb
sbb
xchg
daa
jl
sarl
xchg
push
mov
inc
pop
pop
int3
daa
js
in
insb
movsl
jne
repnz
jecxz
mov
sbb
push
push
inc
push
mov
dec
aad
cmp
mov
jp
inc
loop
dec
hlt
mov
mov
addb
mov
pusha
int3
sar
sbb
loop
ror
clc
adc
fldt
fisubs
mov
sub
cmp
popaw
lea
jle
outsl
imul
sbb
test
cwtl
sub
push
leave
cmp
inc
sbb
and
mov
push
sub
aas
jo
andb
mov
das
xlat
sahf
int3
femms
test
dec
stc
cwtl
fcompl
outsl
pop
mov
leave
hlt
jno
ret
adc
hlt
xor
call
test
les
aam
or
add
mov
movsl
add
cmp
sub
shlb
adc
imul
ret
pop
adc
mov
repz
and
int
jge
scas
leave
test
hlt
call
or
xor
mov
cltd
cmp
xchg
test
das
cmc
inc
int3
cmc
rcll
jle
or
push
push
push
ret
fisttps
in
mov
stc
clc
iret
in
cmp
adc
std
out
hlt
imul
stos
sbb
test
mov
jnp
cmp
sbb
fmul
movsl
stos
mov
push
mov
mov
shrb
inc
dec
stos
jp
mov
xorl
xchg
decl
xchg
mov
incb
loopne
jae
insb
imul
mov
in
insl
rcl
aas
scas
xchg
aad
jg
mov
sbb
mov
xchg
push
call
or
scas
mov
ds
push
andb
adc
push
cld
jno
mov
adc
cmc
lret
mov
ds
inc
push
fstl
addr16
push
pop
pop
loop,pn
xchg
push
pop
enter
push
outsl
js
nopl
dec
gs
das
xor
andb
jecxz
pop
jae
out
sub
ds
jmp
cli
push
inc
jle
sbbb
xor
mov
sahf
xor
lret
xchg
cmp
add
lock
dec
xor
cs
mov
cmp
outsl
mov
jns
and
adc
repnz
sbb
push
movsb
scas
inc
xchg
pop
or
inc
pop
push
push
push
pusha
loope
add
dec
addb
imul
mov
mov
dec
inc
sbb
rorl
xor
imul
sahf
loope
orl
insb
xchg
adc
hlt
es
and
insb
test
push
fistl
clc
jmp
repz
sub
jl
std
xor
mov
fnstsw
leave
movsb
lds
mov
fadd
pxor
add
scas
jno
mov
stc
ja
sub
add
pop
jecxz
jp
xchg
mov
xor
pop
jg
data16
arpl
sbb
lahf
jb
jmp
xchg
sbb
rclb
in
mov
or
xor
fstps
push
or
leave
mov
cltd
clc
shr
xchg
in
and
ja
arpl
sar
aaa
rolb
lret
add
mov
inc
stos
insl
sbb
es
sub
sar
test
cmpsl
sub
add
addps
mov
sub
or
in
dec
adc
in
inc
stos
shrb
loopne
mov
movsb
out
fldcw
xor
sbbb
inc
xor
test
fistl
ds
push
sub
jle
je
stc
or
nop
mov
stos
jmp
mov
sbb
xchg
ret
in
mov
mov
ds
dec
imul
and
push
imul
mov
jo
mov
test
mov
cli
js
mov
test
mov
mov
mov
mov
add
pusha
adcl
push
scas
lret
dec
dec
test
leave
mov
inc
mov
arpl
shld
jl
icebp
mov
mov
sbb
and
and
xchg
dec
enter
dec
inc
or
out
call
inc
pop
pop
xchg
push
inc
ljmp
push
in
mov
xchg
jae
sub
push
mov
js
xchg
mov
push
xor
adc
mov
push
mov
xor
popf
and
mov
mov
mov
cli
rol
shlb
out
dec
bound
jb
pop
pop
rclb
inc
movl
imul
push
in
mov
push
sarl
cmp
push
jae
sbb
rcrb
std
pop
loop
and
sub
dec
gs
xchg
push
bound
push
roll
jns
insl
les
stos
inc
iret
loopne
jge
mov
sub
pop
gs
xchg
inc
arpl
inc
cwtl
jecxz
inc
aaa
fsubs
ret
jge
popa
fiaddl
sub
pop
inc
dec
test
ja
iret
mov
jbe
pop
jg
cmpsb
mov
imulb
xor
pop
dec
out
mov
jl
ret
in
push
cmpsl
sub
insl
mov
jb
jl
das
ja
fstpt
and
mov
mov
add
add
mov
setle
sub
xor
mov
add
cld
mov
fdivp
jge
lret
push
adc
cmp
sbb
pop
outsl
sbb
daa
fwait
push
and
inc
sbbl
pusha
orb
jb
fstl
out
hlt
xor
clc
lahf
stos
push
arpl
mov
sub
pusha
pop
mov
cs
cmp
inc
mov
lret
pop
xor
cmpsb
mov
int3
lret
lea
fisttps
xlat
inc
mov
cmpb
cwtl
fmull
clc
xchg
iret
inc
ret
or
xchg
jmp
mov
shr
int
pop
or
sahf
push
movsl
stos
jnp
adc
push
fwait
pop
push
int
nop
insb
iret
out
ret
mov
cmp
jmp
test
insb
ds
xchg
fsubrs
faddl
dec
mov
test
mov
aas
add
lods
inc
cmp
xor
inc
rorl
jmp
xor
jns
cld
fsts
jmp
pop
mov
inc
inc
pop
adc
sbb
jmp
fst
cmp
lods
dec
fs
pusha
cmp
shlb
lcall
jecxz
pop
lcall
mov
in
repnz
add
repz
std
lret
mov
out
fdiv
xor
sbb
pop
push
int
mov
add
je
cs
and
dec
test
lock
sbb
js
and
inc
test
daa
jo
ret
in
loope
rorl
inc
shr
fwait
ljmp
mov
lahf
movsb
pop
sub
ja
aad
and
inc
cs
push
in
pushf
mov
jp
fidivs
add
mov
in
sbb
enter
rcr
pop
dec
andb
fldcw
xchg
dec
popf
andps
pop
arpl
push
mov
jmp
adc
jge
pop
repnz
mov
outsb
or
dec
mov
pop
cmp
js
or
dec
xor
mov
sub
sbb
shl
ret
lock
or
orb
xor
loop
mov
fbstp
and
ss
rclb
and
lcall
and
ljmp
imul
cmpsl
nop
xchg
pusha
andb
icebp
fiadds
sub
sub
fimull
inc
inc
or
and
movsl
pop
mov
sub
xchg
inc
in
pop
mov
adc
outsb
add
cmp
scas
pop
xchg
pop
pop
sub
js
jne
sub
ja
repnz
fdivr
ffree
test
jg
push
out
jle
mov
cmp
xchg
pop
subb
jl
xchg
cmpb
dec
sbb
insl
mov
into
lret
xor
cmp
fucomi
aad
xchg
rcr
loopne
mov
jae
sbb
push
sahf
icebp
jb
push
cmp
mov
js
add
jmp
sarb
bound
fildll
daa
jb
mov
adc
addr16
out
and
fstl
xchg
push
push
push
in
decl
inc
mov
push
mov
ret
add
leave
inc
es
push
popa
add
mov
jg
or
rcr
scas
cmp
add
pop
ljmp
fwait
push
sub
pop
jnp
dec
xchg
fsubp
movsl
mov
shlb
jae
add
das
xor
fldcw
sbb
in
dec
iret
jp
dec
test
sbb
mov
pop
adc
jb
jae
add
inc
ret
and
insl
mov
mov
cmpsb
push
loopne
mov
enter
arpl
dec
shrd
dec
or
addl
adc
sbb
loope
movsl
dec
xor
cmp
fldt
or
add
cmp
popf
cltd
add
push
xchg
int
repnz
push
aam
adc
or
mov
and
addr16
test
stos
dec
xchg
lahf
fiadds
das
cwtl
pop
push
iret
push
sub
je
mov
dec
adc
subl
cli
sahf
lret
fld
es
xchg
ds
movsl
mov
mov
movups
pop
ds
fwait
mov
push
js
cmp
push
pop
xor
xchg
pop
dec
dec
pushf
cwtl
data16
cwtl
test
xchg
fidivrs
das
pop
pop
sahf
pusha
sub
ds
jle
and
add
inc
jge
sbb
gs
test
cwtl
ret
ret
xchg
inc
stc
sub
pop
mov
pop
hlt
cmpsb
adc
and
sbb
push
xor
loope,pt
les
adc
cltd
mov
inc
into
add
jb
jmp
dec
inc
dec
and
push
mov
jle
pop
inc
lods
mov
dec
sbb
mov
jl
jb
hlt
adc
mov
in
dec
js
sub
add
lahf
sub
movsb
fwait
out
sbb
fisttps
jbe
inc
adc
xchg
inc
mov
cwtl
cmp
mov
pushf
test
push
mov
xlat
cltd
sub
bndldx
xorb
mov
inc
lcall
cmp
rorl
push
repnz
lahf
popf
cmpsb
push
push
shrl
imul
andb
orl
ds
cmp
mov
mov
add
fwait
jne
mov
pop
in
mov
inc
lds
int3
pusha
or
add
add
out
ja
js
jb
pop
xchg
cli
push
loopne
stc
inc
push
cmp
sahf
ret
adc
scas
shrb
dec
cmp
pandn
hlt
dec
pop
mov
cmp
jae
repnz
mov
in
mov
rcl
daa
ret
aaa
inc
push
push
sub
iret
adc
testl
int
xchg
dec
dec
arpl
int3
nop
add
mov
ds
adc
mov
sbb
das
cmp
mov
fimull
int
xlat
insl
mov
lock
add
xor
outsl
pop
jae
into
inc
mov
les
les
mov
mov
test
xor
sbbl
popf
popf
imul
imul
adc
lcall
xchg
std
mov
push
dec
xchg
int3
jno
nop
pop
out
xor
pop
mov
sbb
cmp
dec
add
xchg
testb
gs
sbb
icebp
or
add
mov
adc
mov
or
jbe
int
add
je
xor
mov
push
pop
mov
jbe
sub
and
ret
in
fsubs
jb
je
mov
daa
hlt
adc
lahf
dec
and
test
aad
and
lds
pop
test
dec
mov
mov
and
xor
jae
pop
cmp
fstl
dec
mov
pop
mov
push
aas
js
popf
push
nop
mov
jl
mov
loop
cmpb
faddl
les
push
adc
push
and
push
xchg
xchg
js
or
cmp
mov
fisubrs
inc
sub
push
xlat
adc
enter
ljmp
out
adc
dec
xchg
clc
fnstenv
pop
lret
aam
std
stos
arpl
or
call
sbbb
sahf
cltd
ja
push
cmp
imul
jb
fcoml
movsl
scas
fmull
xor
pop
pop
mov
adc
enter
mov
ss
mov
in
out
test
outsb
into
sti
lcall
jge
data16
dec
dec
jge
mov
cmp
cmp
pop
pop
les
mov
add
inc
das
ljmp
lods
sub
je
sbb
cs
inc
xchg
xchg
jle
inc
pop
inc
pop
jno
loop
push
adc
or
xchg
push
ds
push
aaa
xor
jae
pusha
movsb
mov
sbb
fsubl
dec
pcmpeqb
pop
and
je
frstor
push
mov
das
enter
inc
inc
lock
mov
mov
jmp
data16
imul
ds
mov
xlat
jp
jae
sbb
cmp
loopne
mov
movsl
dec
mov
int
and
negl
jno
sub
pop
out
pushf
inc
mov
loop
fst
cmp
pusha
outsb
sub
mov
dec
loope
in
jge
hlt
push
xchg
out
fcmovnbe
jae
fs
add
out
cs
xlat
pushf
rolb
enter
sub
fcmovnu
pop
jo
push
push
push
pop
scas
imul
sahf
jno
mov
testl
pop
les
lods
xchg
insb
aam
lods
and
icebp
mov
popl
sbb
aad
subl
xor
mov
push
mov
cmp
mov
mov
gs
sub
mov
jbe
jecxz
mov
mov
jne
sbb
push
jbe
cmp
imul
lock
scas
jmp
cmp
ljmp
es
in
xor
mov
jmp
jb
and
add
cli
movb
sahf
adc
bound
lcall
and
mov
mov
cmp
mov
pop
cs
jno
sbb
leave
sahf
test
popf
sub
popa
and
jge
insb
xor
cwtl
cmp
repnz
scas
sub
lret
push
and
imul
lahf
aad
add
pop
das
xlat
lcall
shr
mul
pushf
jl
xor
and
mov
or
movsl
fwait
shr
jl
cmp
mull
lret
mov
popa
rorb
adc
or
arpl
sar
or
cli
lds
dec
dec
jecxz
or
out
pusha
imul
push
fnstcw
test
mov
xchg
outsb
loopne
pushf
lods
mov
add
and
repnz
sub
push
lds
dec
cmpsl
outsl
jecxz
in
jle
sti
movsl
mov
pushf
mov
push
enter
stc
pop
fimuls
dec
jnp
ror
ljmp
jnp
xor
inc
or
mov
sti
push
mov
push
bound
stos
pusha
push
mov
repnz
sbb
or
inc
cmp
push
jmp
fidivs
push
loop
or
outsb
mov
adc
jecxz
adc
clc
mov
dec
add
sti
jle
leave
repnz
scas
fs
mov
mov
and
adc
xchg
push
rclb
jmp
ss
adc
pop
sbb
pop
sbb
xchg
cmp
mov
add
popa
movsb
imul
aam
or
xor
or
push
or
jecxz
shll
push
insl
imull
ds
sbb
fnstcw
stos
mov
xor
stos
outsl
xchg
in
insl
or
mov
sub
scas
inc
and
repnz
pop
jmp
cmp
incl
inc
mov
mov
test
adc
add
out
sub
in
jb
sti
add
stos
ds
fistpl
std
xor
out
add
and
xlat
sbb
xor
stos
mov
or
cmp
cmp
lods
add
into
mov
dec
js
add
inc
push
mov
sahf
sub
cwtl
adc
and
das
inc
lods
push
xchg
mov
add
out
int3
and
pop
xor
and
stos
js
push
mov
add
ror
pop
mov
sub
mov
repz
xor
add
jns
adcl
fisubs
inc
jecxz
sub
xchg
inc
insl
cwtl
arpl
lds
fistl
ss
fidivrs
insl
add
push
mov
outsl
inc
or
fcoms
stos
fs
sahf
adcl
add
mov
pop
xor
or
xchg
jg
fs
dec
test
sbbb
sbb
jo
xchg
cmp
dec
jp
mov
cmpsl
and
mov
sbb
clc
or
pop
sbb
mov
inc
inc
fwait
pop
mov
int3
stos
mov
lods
int
jmp
add
repnz
movsl
adc
scas
ljmp
inc
in
test
repz
bound
rorl
shlb
pop
ret
jae
mov
xchg
jmp
cmp
arpl
pop
fs
xor
ss
aas
xchg
scas
xchg
ljmp
js
sub
inc
xlat
mov
test
sub
bound
ret
sub
xchg
lock
incl
fcmovnu
mov
rorb
enter
dec
movsb
in
mov
jg
pop
repnz
cmpsb
jae
pop
and
fsubr
das
inc
inc
enter
inc
out
fsubs
mov
mov
mov
cmp
xor
test
nop
xorl
orb
sbb
ret
inc
cmc
jns
addr16
sbb
js
movb
sbb
test
ja
outsl
mov
pop
xchg
xchg
rcrb
mov
sarb
jecxz
leave
mov
pop
rcl
push
add
aaa
repnz
jle
movsl
fld
loopne
cmpsb
add
pop
orb
mov
dec
andb
xlat
cmpsb
or
push
sbbl
sbb
inc
addb
mov
decb
mov
cmp
cmovae
sub
mov
sahf
xchg
push
and
and
cmpsb
das
mov
or
pushf
mov
inc
cli
push
xor
fwait
idivb
aaa
xchg
stc
test
inc
add
pop
in
push
add
push
aaa
cmc
adc
arpl
sti
inc
cmp
pushf
dec
pop
into
stos
aaa
inc
fwait
es
jle
or
pop
mov
push
adc
xchg
lahf
shl
lcall
push
pop
jge
jle
mov
ret
pop
fucom
cmp
mov
pop
cmp
sbb
sar
ret
jb
push
fdivl
xor
rcl
int
icebp
jnp
sahf
push
rolb
jb
js
push
les
inc
mov
or
jns
mov
push
push
pushf
outsb
imul
inc
clc
pop
dec
lock
pop
pop
sbb
jno
into
loop
cmp
inc
stos
add
inc
lds
out
pop
jno
movl
xchg
lcall
push
xor
mov
lds
xchg
icebp
push
in
xchg
int
divl
xchg
test
stc
call
xchg
ja
adc
pop
in
lcall
nop
repz
jl
cmp
test
adc
insl
int
adc
mov
inc
lcall
mov
les
sahf
divb
outsb
xchg
sub
fcom
aam
push
fcoms
imul
in
imul
adc
mov
pop
iret
pop
xorb
or
ljmp
test
jp
sub
callw
jb
xchg
mov
pop
push
jge
xor
or
push
xchg
push
imul
push
cmpsb
inc
test
dec
imul
addr16
dec
pushl
movsl
pushf
stc
scas
xor
in
test
push
outsl
mov
or
mov
push
mov
popf
cmpsb
shlb
popf
cmpsl
jmp
das
and
cltd
stos
cld
mov
or
cmp
dec
fldl
xchg
js
inc
pop
fs
pop
add
cs
mov
or
test
cld
adc
mov
repz
push
hlt
in
loop
ljmp
imul
mov
out
outsb
cmpsl
jbe
out
xchg
cmp
repnz
ret
push
mov
push
pop
bound
sbb
fnsave
sbb
adc
and
sbb
out
loope
jns
sub
push
sbb
into
sub
shlb
adc
pop
data16
ret
lods
lods
lret
dec
ss
push
inc
jmp
lods
test
aam
clc
xor
ljmp
add
and
mov
stos
pop
sbb
dec
int
fcomps
in
pop
pop
and
mov
mov
sbb
int3
xchg
push
jp
out
adc
imul
in
adc
pushl
push
jmp
rol
pop
sub
pop
dec
pop
sub
arpl
fisttpll
pop
pop
xor
fnsave
cmpsl
or
inc
or
push
and
loopne
loop
push
mov
mov
inc
mov
jecxz
inc
push
cmp
div
or
out
pop
sub
jb
addr16
loope
mov
cmpsl
pop
ret
scas
into
dec
fildll
mov
in
into
pop
pop
cmp
and
insl
mov
aas
lcall
stc
add
cli
testl
rcl
add
pop
fwait
xchg
inc
hlt
addr16
loopne
and
nop
mov
or
test
dec
push
sbb
pop
call
lods
andl
cwtl
push
cmpsl
ss
and
fs
sbb
fwait
std
clc
add
add
je
adc
inc
pop
mov
xor
push
mov
andb
push
in
xor
lcall
and
cwtl
mov
push
repz
xchg
out
dec
pushf
jecxz
pop
sti
and
subl
xchg
jge
xchg
inc
fidivl
imul
cwtl
mov
fldt
ficoml
dec
hlt
jecxz
js
popf
lahf
jmp
sahf
movsl
jo
leave
jp
lcall
or
mov
sub
cli
addr16
push
clc
cs
and
cmp
lcall
jnp
aaa
sub
out
cli
mov
add
mov
mov
lods
inc
or
lock
addl
es
jb
lods
mov
test
fistpl
pop
sbb
sarb
push
xor
dec
and
cmpsl
jb
mov
rcrl
lcall
add
sub
pop
sub
jge
sub
scas
jle
push
sbb
sahf
clc
ljmp
or
popf
pop
icebp
jmp
inc
add
lods
mov
fsts
clc
and
pop
sub
add
push
cld
mov
sbb
cwtl
add
push
add
xor
add
or
scas
out
pop
out
xchg
cmp
pop
mov
loope
into
icebp
mov
mov
jg
stos
nop
mov
arpl
cmpl
push
inc
ret
aam
insb
xor
pop
or
roll
call
gs
xchg
mov
jl
aad
jle
or
mov
scas
sarl
or
rcll
mov
and
jne
xchg
mov
mov
outsb
and
push
pop
sbb
lods
jbe
std
mov
sub
scas
fwait
pop
lock
or
les
outsl
mov
lods
cmp
xchg
xchg
repnz
xchg
xchg
push
sbb
inc
mov
mov
and
xor
sarb
xor
jl
pop
sahf
imul
ror
xorb
in
xchg
mov
dec
fsts
test
pop
and
inc
aam
xchg
xor
dec
cwtl
mov
into
push
add
pusha
shlb
pop
xchg
outsb
jmp
lcall
test
jb
sub
arpl
pop
in
cmpb
push
test
inc
gs
shlb
mov
sub
pop
jns
in
inc
jmp
mov
repnz
sarb
xor
mov
rol
data16
lods
mov
rcr
add
add
mov
mov
fcmovb
test
xchg
cmp
jmp
mov
mov
jnp
arpl
jbe
mov
dec
or
pop
sbb
aad
lahf
mov
repz
push
push
push
fdivrl
sub
push
into
int3
daa
push
andb
pop
cmp
dec
or
enter
inc
and
aam
sub
sub
xchg
add
mov
and
pop
mov
mov
ja
pusha
aam
ret
into
addr16
push
xor
cmpsb
dec
fidivs
mov
push
lss
cli
mov
jmp
mov
test
jle
jns
cmp
add
cmpsb
mov
gs
jmp
mov
ss
jb
test
dec
repnz
push
movsl
mov
loop
mov
aam
aam
jp
adc
pop
push
or
jns
mov
pop
sub
jmp
jae
add
cmp
and
lods
mov
daa
cmp
inc
sarl
xor
lods
push
lods
imul
out
leave
shrl
xchg
xchg
sub
jge
xchg
xchg
inc
in
mov
jns
mov
sub
in
cltd
jbe
sbb
cmpsb
scas
push
in
inc
sbb
mov
pop
sarb
mov
loopne
adc
in
jle
addr16
daa
into
aas
xor
add
mov
cmpb
sub
imul
scas
mov
sahf
lods
xchg
popf
cltd
xor
inc
push
mov
and
cld
cli
stos
pop
mov
ror
in
cmp
mov
xor
add
sub
stos
cwtl
shrb
fnstcw
cltd
lock
je
inc
push
les
pop
ret
lahf
pop
xorb
xor
or
and
push
mov
adc
enter
jne
sub
or
mov
dec
jbe
adc
mov
leave
or
sbb
pop
loopne,pn
xor
popa
daa
sti
mov
push
out
cmc
aam
adc
mov
add
sahf
xor
dec
add
popf
xor
in
aam
lret
movsl
jmp
pushf
shlb
push
std
popf
jb
rcrl
into
jl
jo
addr16
sbb
add
imul
fwait
movsb
mov
jge
or
inc
push
jp
push
mov
pop
int3
add
sbb
push
out
mov
pop
jne
test
fs
pusha
cmp
outsl
test
jle
fisttpl
add
std
cmp
mov
js
call
and
ljmp
aam
pop
adc
mov
mov
sbb
add
aam
cmp
gs
jle
and
sub
push
add
sub
cmp
icebp
aad
bound
jae
icebp
shl
cmp
popf
jns
insb
add
mov
fs
sub
jnp
imul
shlb
aaa
add
and
mov
jo
movq
aam
rorl
and
fimull
xchg
hlt
pop
dec
jg
gs
popa
mov
cmpsl
xchg
mov
movsl
sbb
addb
out
add
sub
adc
fwait
and
bound
nop
adc
xchg
sbb
or
test
iret
cld
add
cmp
mov
in
pop
cmp
xor
mov
les
push
dec
sbb
test
fisubl
xor
loope
dec
ret
cli
hlt
js
div
andl
inc
insb
mov
or
push
out
lret
shl
mov
loope
fstl
outsb
movsb
pop
dec
adc
sbb
cmp
daa
ss
out
dec
gs
imul
imul
pusha
xor
inc
mov
xlat
in
dec
fildl
stc
enter
movsb
int
xchg
mov
add
imull
in
hlt
pop
scas
daa
cmpsb
cli
push
sub
mov
mov
mov
adc
in
decl
shl
adcl
test
out
or
adc
push
out
jle
dec
xor
sbb
mov
sbb
jns
int3
or
in
std
imul
aam
dec
mov
test
xor
nop
nop
je
xchg
xor
xor
insl
int
xlat
cwtl
sub
adc
ret
mov
out
insb
jg
mov
and
stc
mov
push
mov
inc
leave
fcoml
cmp
mov
loop
cld
mov
pop
nop
adc
add
js
dec
ljmp
in
sbbl
ja
fwait
sub
out
and
loop
lods
sti
adcb
aad
jg
cmp
push
pop
rorl
in
sub
inc
adc
frstor
push
push
cmp
imul
loopne
pop
in
cmp
out
mov
lods
int3
enter
sub
pushf
mov
cmp
sbb
das
jmp
mov
mov
adc
pop
je
sbb
lahf
rclb
cld
mov
int3
mov
out
mov
popf
inc
push
push
push
dec
test
xchg
xchg
testl
xchg
pop
sahf
push
mov
mov
sarb
fcmovne
xchg
adc
enter
bnd
push
cltd
add
outsl
dec
imul
lds
lcall
les
inc
fs
clc
pop
mov
fsub
loop
pop
jbe
aam
sub
adc
in
add
push
lret
push
cmp
inc
orb
insl
mov
iret
lret
cmp
adc
lods
cmp
adc
subl
sub
into
sbbl
xchg
insb
mov
push
dec
cmp
xchg
hlt
test
xchg
xchg
loop
scas
push
sub
loope
sbb
lret
lods
cmp
leave
mov
sbb
and
push
jmp
outsl
mov
fmull
stc
jmp
jne
rclb
repnz
lods
fldt
jo
aam
mov
add
xchg
ss
orl
in
pushf
pop
adc
das
push
lret
lcall
xchg
cs
mov
mov
movsl
lret
dec
test
and
mov
aaa
es
push
test
cmp
sub
lret
shld
adc
pop
xchg
in
out
pop
xchg
push
mov
ja
mov
push
fwait
cmp
mov
repz
add
jle
inc
setg
adc
jecxz
iret
and
sub
stos
mov
inc
shrl
out
in
pop
xlat
mov
repz
mov
xchg
out
aaa
mov
push
sub
movsl
push
fwait
je
sti
push
mov
inc
and
pop
xchg
push
sub
mov
fsubl
cmp
mov
int
or
repnz
pop
jno
mov
repz
ljmp
lods
sub
adc
negb
inc
lock
cmp
jo
sbb
mov
addr16
fs
push
je
xchg
jnp
popf
int
insl
jecxz
xor
pop
sbb
shll
cmp
and
jge
cmp
and
mov
sbb
xchg
jbe
test
icebp
mov
cmpsb
mov
jl
lods
lret
and
mov
scas
pop
sub
dec
sar
ja
and
cli
popa
or
and
or
inc
rorl
dec
inc
sub
pusha
cmp
inc
int3
push
pop
ss
jle
mov
imul
jmp
mov
jge
stos
xchg
mov
fucomi
nop
aaa
movsb
mov
leave
div
stc
cli
int
mov
jmp
adc
rorb
lret
outsl
mov
add
test
ja
gs
cmpsb
adc
jno
fldenv
sub
es
fidivl
nop
pop
mov
sub
dec
inc
pop
jo
cmp
loope
mov
adc
xor
ficompl
or
sahf
mov
adcl
inc
mov
cmp
test
pop
call
mov
ds
xchg
pop
fimuls
dec
and
push
fildll
pop
jg
arpl
push
fwait
sub
push
inc
pop
xchg
aaa
shll
xor
cmp
inc
loopne
test
pop
and
jp
scas
dec
cmp
sub
out
stos
add
fs
pop
add
dec
fstps
loope
xchg
popa
inc
or
mov
ret
pop
jno
sarb
mov
in
xor
enter
ljmp
cmp
ret
pop
inc
popa
arpl
mov
sbb
pop
mov
pop
push
and
ret
pop
xor
scas
push
idivl
cld
movsl
mov
leave
int
insb
loope
mov
jl
test
sbb
mov
cwtl
add
je
push
sbb
inc
or
and
daa
add
mov
addl
fldt
dec
nop
pop
jmp
dec
lret
test
jo
sbb
in
movsl
popa
mov
ret
outsl
out
jb
inc
mov
dec
movsb
mov
rcl
pop
test
push
into
jno
inc
or
and
sub
icebp
pop
push
or
sbb
pop
cmpsl
scas
mov
syscall
mov
jb
pop
out
gs
or
sbb
fincstp
lock
dec
call
je
push
push
jp
xor
jae
in
xchg
push
mov
jle
andb
test
rorl
mov
adc
xor
mov
adc
push
sub
jecxz
jb
or
fs
int
daa
jne
push
push
mov
enter
stc
sti
shlb
mov
cmpl
or
mov
xor
std
sti
jnp
mov
xorb
add
dec
sub
jne
fnstenv
push
cmpsl
sub
pop
into
mov
out
jle
jnp
and
inc
icebp
push
pop
jmp
xor
fs
ficoml
cmp
and
push
mov
das
jae
mov
mov
dec
testl
setge
fisubrl
scas
idivb
por
lret
orb
arpl
data16
dec
or
hlt
xchg
pop
in
cmc
iret
lahf
sub
cmp
movsb
fbld
ret
jb
cmp
repz
mov
inc
imul
push
repz
movsb
jecxz
out
int
loop
bound
sub
mov
and
add
mov
add
xchg
out
mov
pop
ds
clc
sbb
fcomip
push
push
test
mov
mov
in
bound
ds
jmp
jle
loope
subl
mov
sarb
pop
pop
sbb
inc
lods
xor
int3
insl
cmpl
and
pop
fiadds
ja
push
or
lds
sbb
sub
ja
push
inc
jo
pop
stos
cld
dec
das
es
xchg
sub
jns
outsl
mov
jns
rorb
das
and
add
ds
mov
cmp
push
xchg
in
xchg
lret
mov
xchg
jns
in
xchg
dec
sbb
sub
stos
lahf
repnz
mov
push
sbb
lahf
push
push
movsb
lahf
je
add
mov
add
repnz
out
fisubrl
pop
jb
push
fisubrs
push
lods
add
lock
push
loopne
mov
sbb
jne
dec
dec
xchg
dec
push
inc
or
adc
pop
push
out
mov
pop
jnp
jae
xor
icebp
cmp
pop
push
inc
mov
xchg
aaa
test
cltd
pop
adc
lret
roll
dec
insb
cmpsb
pop
inc
jge
sarb
inc
pop
cld
or
inc
enter
rcl
shlb
adc
dec
jnp
outsb
cltd
and
icebp
xchg
xor
jno
push
rclb
fsubrs
push
dec
lea
insb
sbbl
pop
inc
aaa
xor
and
mov
jns
jbe
adc
ret
and
and
mov
psrld
int
stos
shll
je
and
cmp
arpl
push
add
lret
scas
out
arpl
jle
dec
mov
mov
adc
cs
outsl
push
or
rcrb
mull
jae
mov
mov
lods
into
jmp
inc
inc
pop
hlt
pop
xor
dec
out
int3
stos
in
iret
jne
or
js
ja
inc
push
jle
sbb
fwait
mov
mov
xor
imul
sti
xor
shrb
push
jns
into
jo
cwtl
mov
dec
bound
mov
cmc
arpl
sbb
aam
adcb
sub
pop
mov
xchg
sub
inc
push
lods
dec
add
lods
pop
mov
mov
mov
pop
ljmp
stos
xchg
push
xor
ror
adc
mov
dec
lea
and
mov
int
out
pop
pop
mov
call
mov
in
xchg
js
cwtl
push
pop
or
es
push
push
dec
shll
cmp
outsl
in
fsubl
sti
in
or
out
push
dec
out
in
adc
test
das
push
hlt
push
ja
movsb
out
cmp
ja
mov
xchg
jle
push
test
aam
in
ret
shlb
sub
in
inc
enter
jnp
sub
push
sarb
movsb
pop
sbb
ja
push
aaa
push
fwait
pushf
mov
and
cld
out
add
or
sbb
sub
insl
loope
in
iret
roll
in
movsb
mov
sahf
xchg
xchg
sbb
jbe
pop
or
jg
scas
dec
loopne
lcall
test
mov
xchg
adc
sbb
push
mov
dec
mov
mov
mov
mov
shr
lods
das
mov
jmp
sbb
lcall
aam
inc
sbb
dec
cmc
fwait
ss
pushf
call
sub
push
adc
icebp
add
jg
scas
push
pop
in
pop
popf
imul
enter
mov
inc
jmp
negl
repnz
mov
inc
pop
pop
dec
lret
xor
pop
jb
xor
out
clc
sbb
ljmp
mulb
rcr
adc
test
lahf
xor
push
push
lret
fsubr
nop
dec
fidivrs
insl
add
lea
adc
jmp
orb
adc
movsl
inc
mov
out
add
and
dec
mov
ljmp
inc
arpl
adc
test
push
mov
sbbb
test
pop
iret
xchg
fiaddl
icebp
pop
frstor
mov
sbb
xchg
pop
pop
fstpl
out
pop
into
mov
add
pop
mov
mov
sbb
cltd
mov
insl
into
popf
cmpsb
incl
lods
add
aas
mov
and
push
clc
adc
imul
aas
pop
pop
push
shll
cmpsb
jmp
sub
gs
shll
stos
dec
cmp
test
inc
ffree
cmp
rcll
push
xchg
es
fwait
mov
push
imul
lock
cmc
dec
fcmovb
aas
mov
jle
jle
add
inc
push
jb
dec
scas
sub
dec
xchg
cmpsl
xor
pop
sub
push
cld
std
test
mov
adc
add
insl
outsl
addr16
sarl
cmp
mov
xchg
add
xchg
jecxz
and
and
and
push
movsl
jne
cltd
dec
call
addr16
subl
lods
addr16
nop
mov
sarb
or
sub
cwtl
clc
sahf
std
test
sub
les
aaa
bnd
mov
in
loop
mov
add
lods
and
repnz
les
or
pop
lret
ret
loope
mov
bound
pop
rcr
out
mov
addb
int
lret
js
push
jmp
lods
dec
notb
jae
cmc
inc
cmp
push
sbb
mov
out
pminub
xchg
mov
add
loopne
cmc
jecxz
mov
lods
nop
call
push
int3
mov
mov
inc
jbe
sarb
into
push
mov
aas
ret
pop
push
roll
inc
adc
push
xchg
imul
sub
xorb
rcrl
mov
mov
enter
shll
fstl
imul
in
sub
dec
sbb
cmpl
xchg
loopne
sahf
filds
mov
sti
sahf
inc
dec
mov
push
hlt
in
gs
mov
and
pop
popf
pop
sub
jo
shl
enter
inc
jle
adc
or
or
out
repz
cmp
xchg
fiaddl
sub
gs
xchg
or
sbb
pop
es
push
cmp
mov
imul
mov
sbb
xchg
mov
daa
shr
sub
xchg
xchg
jmp
jmp
add
mov
mov
or
sub
cmpl
decl
push
mov
xor
push
stc
xchg
test
push
jno
mov
inc
mov
mov
fldenv
jbe
cld
xchg
testl
nop
arpl
fadd
dec
movsl
and
cli
ljmp
pop
ficompl
scas
jp
and
xor
repnz
stos
sbb
sahf
aad
loope
sub
mov
inc
mov
xor
cld
test
testb
fs
jmp
mov
fs
les
call
and
jmp
push
dec
cmpsl
aad
cmc
lret
jecxz
mov
pop
iret
negl
pop
pop
push
inc
popf
cwtl
sbb
sbb
mov
push
mov
and
cmp
jecxz
sbb
and
test
xchg
out
or
adc
cmp
ljmp
ja
divl
inc
loopne
insb
mov
jmp
jge
jbe
xor
xchg
jp
cmpsl
lea
jle
xchg
aaa
das
stos
icebp
cmp
mov
pusha
xchg
sub
rcr
jg
aaa
cmpl
mov
int
sbb
mov
js
outsb
mov
pop
aas
sbb
jo
leave
shrb
in
adc
xchg
out
jmp
cld
mov
mov
in
aam
out
xchg
inc
jne
adc
xlat
lds
je
push
stos
jge
sbb
xchg
or
or
popf
push
and
lret
fmuls
dec
dec
lret
mov
cmp
imul
push
mov
ret
mov
xchg
inc
xchg
and
ret
inc
cld
mov
sub
imul
mov
cmpb
mov
out
ds
lret
out
fstl
push
in
xchg
mov
and
cmp
cld
ret
mov
sbb
repz
out
jb
mov
movsl
xor
dec
xor
sbb
in
bound
jecxz
fbld
xlat
rcrl
pop
mov
inc
icebp
fidivs
lods
fsubrs
arpl
in
fimuls
inc
lock
cwtl
or
ds
xchg
sbb
pop
rcll
in
cmp
ficoml
push
sbb
fs
aas
pusha
cld
addb
mov
leave
dec
bound
pusha
jl
popa
dec
inc
sbb
repnz
repz
in
aas
add
dec
iret
inc
fldenv
rclb
popf
push
shll
mov
inc
gs
test
cmp
add
es
lock
push
adc
ret
and
push
pop
mov
sub
rcrl
repz
call
pushf
add
xchg
sbb
xlat
lods
sbb
ret
jmp
mov
ds
jnp
pop
lods
jne
jo
cmp
mov
and
ret
mov
scas
mov
sbb
std
repz
mov
hlt
adc
ds
pop
insl
push
das
inc
bnd
sub
int
mov
bsf
or
push
cmp
dec
cwtl
mov
repnz
lods
into
mov
and
push
ljmp
lret
xchg
push
aaa
js
jp
push
lds
and
movl
cmpsl
dec
les
mov
xor
dec
xchg
sub
jno
andl
outsl
adc
push
sub
push
fisubl
cmp
lret
xchg
adc
add
mov
pusha
mov
stos
scas
cmc
movsl
mov
pop
ds
inc
xchg
push
inc
push
insl
sahf
stos
in
popa
fadds
movsb
rol
mov
les
jo
lea
cmp
insl
rorb
inc
enter
xor
shlb
mov
sub
mov
adc
lds
sbb
inc
lds
mov
mov
imul
mov
test
das
orb
push
leavew
icebp
sbb
icebp
mov
or
mov
ds
inc
es
inc
pushf
xchg
leave
sub
cld
fstps
mov
jno
cmp
jp
pusha
imul
lret
lea
pusha
pop
aad
inc
xor
mov
subl
mov
pop
test
adc
pop
push
cmc
imulb
es
jne
test
mov
inc
jge
jo
mov
movsl
inc
iret
out
lea
xchg
mov
mov
insl
nop
pop
lahf
aas
xor
scas
jns
mov
mov
push
pop
dec
jmp
cmp
or
clc
clc
rcr
test
bound
xchg
roll
in
int
or
mov
or
xlat
mov
mov
adc
sub
pop
xor
adc
dec
sbb
test
leave
sbb
call
mov
inc
mov
mov
fs
hlt
in
cmp
cmp
pop
or
popf
leave
call
scas
sub
dec
adc
mull
ljmp
test
jle
xor
push
iret
in
push
cld
test
inc
push
dec
add
icebp
push
pusha
cld
or
lret
aam
sbb
add
push
cld
sub
jne
jl
pushf
test
xchg
xor
lret
gs
fistpl
cmpxchg
imul
gs
ror
arpl
outsb
popa
jo
xor
insb
das
cmpsl
testb
pop
call
js
sub
or
mov
lcall
inc
insl
sbb
xchg
dec
adc
mov
aas
cli
pop
sbb
cmp
popa
lahf
mov
inc
sbb
aad
pop
inc
mov
push
mov
aaa
cmpsl
push
ffreep
fsubrp
add
scas
xchg
adc
movsb
cli
cmp
sbbl
int
cmpsl
aaa
push
add
sub
ds
inc
mov
sub
iret
xchg
jbe
movsb
pop
call
test
add
push
fisubs
and
and
pop
hlt
dec
daa
rol
loope
mov
jbe
leave
add
cltd
cwtl
xchg
hlt
sti
movsb
xor
sub
xor
jmp
inc
inc
imul
xor
add
xchg
mov
mov
in
repnz
fadds
xor
es
in
pop
xchg
add
sbb
cmp
xor
mov
dec
jle
inc
push
push
xchg
das
inc
add
fisubrl
jl
pop
mov
fbstp
arpl
or
xchg
xchg
das
cmpsl
adc
sub
lods
and
js
imul
mov
lret
loopne
add
in
out
mov
sbb
jmp
push
or
pop
jge
rorl
sbb
and
push
jne
mov
cmp
cmpsl
jnp
lahf
xor
fldt
xchg
insl
sahf
pop
cmp
mov
into
adc
xchg
loop
int
mov
movsb
xor
sbb
sbb
imul
daa
or
imul
mov
lods
andl
inc
inc
inc
push
in
adc
fdivrs
out
test
adcb
pop
add
xor
dec
push
pop
add
dec
filds
mov
pop
add
xor
or
movsb
out
lock
add
out
dec
sbb
mov
mov
das
lds
lock
fdivl
sbb
cmp
bswap
pop
sub
cmp
cwtl
data16
mov
adc
lods
fldl
jb
push
or
push
cwtl
push
pop
test
jno
repnz
adc
repz
inc
mov
and
loopne
pop
outsb
and
lcall
cld
lahf
pusha
pop
xlat
pop
cmpsb
lret
mov
scas
push
dec
inc
and
pop
sbb
mov
push
mov
jbe
jno
test
rorl
hlt
imul
xchg
stos
sub
push
and
push
icebp
rclb
push
pop
das
push
jns
scas
in
aam
mov
and
outsl
jbe
call
cmc
lret
xchg
sub
push
inc
pop
lock
xchg
out
arpl
pop
addr16
sub
outsb
cli
cs
int
inc
push
jecxz
adc
imul
jecxz
das
mov
inc
jb
add
dec
mov
pop
js
jl
inc
sub
shlb
jne
jae
mov
and
sarb
mov
incl
xchg
mov
rcll
inc
adc
pusha
mov
je
or
mov
les
cli
stc
xor
cmpsl
jmp
or
rcrl
aam
popa
lret
mov
or
rcl
or
testb
sbb
movsl
ret
mov
cmp
ror
movsb
push
rcll
inc
jb
dec
gs
fisttps
dec
pusha
jmp
enter
mov
jp
inc
mov
xchg
rorb
push
adc
imul
adcl
test
in
aas
repz
xor
std
pop
ficompl
push
sub
mov
mov
pop
inc
sbb
sub
lahf
ret
cmp
adc
xchg
add
mov
push
into
push
and
or
mov
adc
jne
add
jae
add
rcll
push
aam
or
or
aas
cltd
sbb
or
sbb
aad
ja
loope
lahf
mov
imul
push
iret
sbb
lock
xor
stc
jle
pop
push
mov
or
out
pop
and
jmp
xorl
andb
or
xor
cmp
or
cmp
push
js
pushf
popf
pop
stos
rcr
out
std
adc
out
dec
dec
jmp
ret
pop
jns
dec
pushl
dec
nop
lds
mov
ss
psrad
pop
mov
cltd
sar
push
in
pop
mov
bound
mov
mov
add
cmp
loope
mov
insb
js
lcall
or
adc
jae
pop
scas
daa
mov
sbb
dec
dec
fsub
data16
sub
xor
sub
add
push
mov
jmp
stc
mov
stc
push
mov
sbb
ret
fsubrl
add
mov
notl
xor
pop
insl
cwtl
inc
mov
fdivs
shlb
jmp
emms
inc
stc
sbb
data16
dec
insb
mov
push
xchg
and
pop
sbb
cmc
bound
add
mov
out
adc
inc
fistpll
or
cmp
cld
jmp
in
push
mov
je
or
mov
cmp
pop
push
jmp
cmpsb
mov
mov
decl
or
mov
data16
fidivs
lahf
aam
out
sub
mov
cmp
mov
jnp
mov
adc
jbe
mov
pop
xchg
sub
sub
pop
jne
stc
xorl
add
mov
scas
aam
and
in
adc
idivl
xchg
movsb
and
sub
and
bound
stos
sub
push
gs
je
mov
loopne
mov
aad
les
or
test
push
aad
push
sahf
aas
pushf
stos
sub
and
sbb
hlt
outsb
jp
sub
or
insb
outsl
shlb
enter
push
xchg
gs
pop
add
das
and
sub
mov
aaa
outsl
cmp
stos
inc
pop
mov
fdivrp
dec
test
cmp
in
aaa
cltd
jmp
jbe
fcmovb
sbb
lret
pop
mov
push
push
dec
iret
inc
mov
call
icebp
pop
push
cmpb
test
repz
and
pop
out
cmpsb
cmp
lods
incb
in
dec
mov
cs
je
xor
mov
dec
pop
insb
pop
lea
cmp
loopne
cmp
xchg
cmpsb
imul
dec
dec
mov
mov
pop
jecxz
or
cmp
push
pcmpeqd
jg
add
fidivrs
cmpsb
call
push
adc
mov
adc
stc
lea
dec
imul
mov
xor
pop
inc
mov
mov
xchg
out
dec
lock
std
fs
xlat
jb
mov
shl
adc
mov
xchg
or
cmp
das
and
out
lret
adc
or
push
and
or
cmc
adc
xor
add
jge
mov
and
xor
pop
imul
imul
xchg
push
mov
xor
xchg
aad
in
cmp
jmp
and
cmpsb
repz
subb
dec
lret
or
sub
insl
imul
sub
push
push
jp
in
pop
in
into
shlb
push
sbb
and
gs
lahf
pop
adc
mov
sub
xchg
psubsw
ljmp
xor
movsl
xchg
in
mov
shlb
movsl
cmp
stc
cmpsb
xchg
mov
adc
scas
push
and
mov
cmp
mov
jl
lahf
out
jge
repz
ret
shr
pop
stos
loope
push
mov
jbe
dec
mov
sub
hlt
sub
jno
xchg
xchg
fsub
inc
jno
xor
in
dec
xchg
inc
sbb
pop
or
xlat
push
aad
pop
nop
xor
dec
sub
aam
add
loopne
mov
roll
rcll
mov
xor
mov
cld
xor
jmp
mov
dec
frstor
fildl
xchg
mov
cmp
in
add
mov
fxch
je
inc
mov
and
sub
sbb
sub
in
cmc
push
loope
or
frstor
add
js
enter
lods
fidivrl
and
movsb
xlat
inc
mov
mov
push
addb
push
lea
loope
sbb
push
and
push
push
xchg
repnz
adc
in
push
fdivs
inc
repz
orb
mov
ljmp
push
mov
cs
push
repz
test
mov
rcll
pop
std
mov
cmpsl
cmpsl
es
sub
shrb
test
cmc
hlt
cmp
pop
test
std
xor
lahf
dec
pop
dec
add
popf
and
dec
pop
imul
rclb
mov
xchg
jno
lods
cs
movq
lret
stc
inc
ret
mov
or
sub
add
and
jle
shlb
into
and
mov
cli
cmp
notl
clc
xorb
das
push
pop
sbb
insb
lds
inc
adc
mov
cmp
and
sbb
lea
xor
cmc
xor
add
xchg
movsl
loope
fiadds
inc
lret
dec
adc
xor
cmpsb
and
push
xor
daa
shl
daa
ret
pusha
adc
mov
push
mov
repz
mov
cmp
outsb
cmp
sub
shlb
cmpl
pop
mov
out
add
sahf
inc
mov
fstpt
and
dec
jle
inc
aam
aaa
pop
sti
movl
fildl
push
mulb
lret
push
stc
jno
sbbb
hlt
js
sbb
jb
mov
jmp
arpl
inc
pop
fwait
ljmp
in
pop
repz
cmp
cli
jbe
lds
lret
rcrb
bound
pop
scas
sbb
addr16
rcrb
mov
in
inc
and
inc
cmpsl
cmp
push
icebp
sub
bound
jbe
popa
in
mov
mov
fcoms
ret
insb
fs
mov
aas
inc
mov
fcoms
xlat
inc
xchg
cwtl
add
inc
push
push
aad
fwait
adc
jle
mov
movsl
cwtl
adc
pushf
daa
jae
cmp
hlt
jmp
fdivrl
aad
orb
outsl
pop
jp
adc
lods
adc
mov
and
sbb
xchg
add
mov
stc
rorl
add
lock
leave
jo
cld
dec
movlps
retw
into
mov
dec
shrb
xor
lea
sbbl
xor
popa
mov
inc
inc
pusha
sbb
aam
nop
add
outsb
mov
xchg
arpl
push
std
push
push
mov
cli
ja
clc
repnz
xchg
stos
inc
xchg
dec
cwtl
out
sub
lret
cmp
dec
mov
jne
adc
lea
aaa
sbb
pop
scas
sbb
lcall
stos
outsl
arpl
and
aad
lret
call
sub
or
out
xor
repnz
adc
or
pop
inc
or
decl
sub
jp
popa
sub
popf
xor
sub
mov
arpl
loope
out
ret
mov
pop
fbstp
test
popf
neg
fcmovnbe
jge
vhsubps
lock
and
adc
cmp
sbb
or
add
rolb
mov
insb
lret
movsb
jmp
and
and
adcl
rcl
popf
dec
inc
or
call
arpl
in
fistl
cltd
clc
push
adc
mov
cmpsb
pop
adc
sahf
jl
pop
rorl
scas
pop
inc
stos
cltd
lock
arpl
sbb
inc
adc
nop
lods
or
mov
rorl
cltd
enter
push
fiaddl
push
add
push
ret
lods
mov
mov
xlat
jae
les
jns
stos
mov
sub
xchg
dec
or
test
and
js
xor
cli
je
and
mov
aad
mov
outsb
mull
xchg
push
jl
push
jmp
mov
sub
jne
pop
sub
push
sbb
or
jno
mov
jg
aas
xor
outsb
push
call
shl
out
sbb
call
aad
decl
xorl
mov
pop
es
iret
mov
push
and
sbb
scas
mov
fldl
shlb
stos
xor
pop
mov
mov
and
adc
adc
daa
ds
loopne
jnp
das
cmovge
bt
pop
insl
jo
std
imul
mov
orl
fldl
push
movsl
js
or
in
xchg
push
pop
push
push
ljmp
loope
xchg
jne
jnp
sub
imul
fs
pop
mov
mov
pushf
jo
or
sub
repnz
test
jmp
mov
inc
imul
mov
or
dec
sub
cmp
scas
adc
outsl
jl
bound
enter
xchg
jne
mov
mov
add
in
ret
dec
add
dec
mov
pop
mov
xor
daa
jl
push
call
jnp
jecxz
or
aas
lods
push
adc
out
or
pusha
mov
lcall
hlt
int
lahf
pop
and
lahf
pushf
push
adc
decl
fcoml
out
jecxz
inc
adc
sub
adc
out
sbb
minps
push
loope
arpl
pop
fistpll
add
inc
sbb
imul
xchg
enter
dec
out
decl
mov
test
ds
stos
inc
scas
aam
lret
cmp
shr
mov
push
mov
daa
mov
repz
imul
mov
adc
fld1
nop
dec
mov
addl
push
aad
inc
aaa
iret
push
or
imull
rclb
rclb
jmp
add
ret
scas
loopne
xor
sbb
subl
lods
jmp
xchg
jnp
mov
or
push
out
and
or
cltd
je
pcmpgtb
outsl
imul
stos
or
lea
sub
sub
sti
jno
and
out
stos
mov
pop
add
cltd
cmpl
jb
data16
or
fdivl
dec
and
cmp
or
nop
inc
sbb
mov
stos
test
pusha
lret
aaa
inc
sbb
div
sub
jno
lret
jmp
add
and
fldenv
adcl
xchg
retw
mov
add
jbe
push
mov
movsl
mov
clc
mov
inc
dec
dec
jae
clc
sbb
adc
add
xchg
int
sub
add
test
fcoms
push
repz
loopne
push
push
pop
out
cmc
xor
adc
pushf
push
les
mov
loopne
fbstp
pushw
xchg
push
stos
inc
pop
ja
lahf
pop
mov
cmp
xchg
cmc
test
dec
or
pop
xor
pop
jb
pop
lret
inc
inc
add
push
push
sbb
add
jns
cmpl
sub
jns,pn
xchg
inc
inc
insb
repz
pop
mov
mov
mov
ja
jmp
mov
mov
lret
outsl
pop
cld
clc
mov
outsb
test
mov
mov
push
int
jl
pusha
or
cmp
jne
test
inc
pop
mov
stos
adc
add
and
jl
arpl
mov
daa
rcr
cmp
jle
xor
jno
inc
cld
data16
pop
aad
xor
xchg
rcl
movsl
and
sub
inc
dec
mov
lods
scas
pop
pop
jo
xchg
mov
jge
rcrb
dec
mov
add
add
cmp
adc
es
nop
adc
repz
inc
xorb
insl
mov
sub
xchg
xchg
stc
mov
and
xor
mov
mov
and
mov
mov
imul
push
push
setne
jmp
rcl
and
aam
loop
mov
or
or
push
or
sbb
ds
ds
mov
es
sbb
mov
lods
aad
ss
sbb
clc
mov
xchg
sbb
xorb
iret
mov
rcll
lods
mov
push
andl
jecxz
clc
imul
adcb
adc
xor
sbb
gs
scas
adc
jmp
xchg
sbb
mov
jl
filds
icebp
pop
push
push
jge
in
in
test
das
shrl
std
insb
pop
cmc
jb
push
aaa
jo
sub
mov
fdivrl
jge
pop
pop
xchg
xchg
pop
push
push
lret
xchg
and
mov
stc
or
push
in
pushf
nop
sbb
aad
insb
in
mov
cmp
lea
or
push
sbb
pop
addb
cmpsl
lea
jns
and
or
idivb
xor
inc
jns
xchg
sbb
test
cmc
xchg
into
push
lock
cmp
dec
lock
and
repnz
pop
pop
lods
cmp
test
ds
mov
das
and
fsub
std
imul
shll
fdivrs
jo
in
add
or
aaa
fiaddl
xor
push
mov
addr16
clc
test
inc
outsl
pop
cwtl
adc
mov
fs
jno
pop
sub
sbb
jo
bound
xchg
and
mov
pusha
pop
push
pop
insb
sahf
in
sarl
and
out
push
mov
push
sbb
arpl
lret
cmpl
int
stos
push
neg
mov
push
aas
push
sbb
enter
fdivs
clc
iret
imul
cmp
xchg
std
xor
mov
or
aaa
jle
sarl
hlt
adc
ss
icebp
inc
adc
mov
sub
call
dec
add
jb
in
es
int
jmp
icebp
push
inc
inc
pop
mov
movsl
adc
push
mov
pop
cmpsl
scas
inc
dec
push
aas
es
popf
out
mov
shrb
push
push
test
pop
cwtl
mov
mov
dec
xorb
push
lahf
xchg
and
mov
aaa
pop
mov
ret
mov
sub
cmp
sbb
orb
stos
xchg
mov
push
inc
outsb
jp
xor
test
loop
movsl
inc
aaa
pop
pop
es
sub
inc
clc
pop
imul
shl
cwtl
bound
adc
jecxz
data16
fidivs
and
mov
mov
adc
jmp
in
pop
imul
mov
mov
gs
int3
xor
cmp
mov
jge
adc
push
imul
scas
lret
popa
mov
mov
inc
cwtl
nop
sbb
mov
nop
add
lret
repnz
mov
ljmp
adc
imulb
aam
arpl
popf
loope
ficomps
mov
test
mov
mov
fs
divb
ret
arpl
test
ret
jg
xor
jl
and
push
mov
jbe
push
aaa
aad
movsl
cmpsb
pop
inc
adc
xor
dec
add
mov
ds
push
jl
dec
not
xor
jmp
mov
dec
bound
push
inc
ficoms
sbbl
ss
and
std
scas
ror
into
xor
fldenv
dec
cmpsb
xor
mov
cmp
ss
out
je
rcll
xchg
jge
mov
mov
insl
xor
sub
ret
mov
mov
adc
or
xchg
add
mov
ficompl
repnz
mov
in
aam
scas
std
mov
stc
rorl
pop
fildl
cmp
add
ret
adc
adc
lcall
cmp
push
add
sbb
sbb
push
adc
xlat
inc
fcompl
nop
testl
div
into
das
jne
imul
jle
and
xor
sub
mov
mov
mov
dec
cltd
rolb
cs
sbb
adc
xchg
pop
push
popf
inc
xchg
mov
les
pop
mov
cmp
subl
dec
das
aaa
pop
or
call
pop
aam
mov
inc
data16
div
mov
add
and
sbb
js
xor
mov
adc
decb
out
mov
fsubp
inc
sbb
lcall
cmp
shrl
xlat
pop
mov
lahf
fmuls
cmp
ror
ret
fldenv
push
scas
sbb
xchg
mov
dec
fisttpll
jnp
cmpsl
jge
add
xchg
adc
mov
cmpsb
sbb
rcr
adc
inc
hlt
push
add
js
fcmovnbe
aad
inc
int3
dec
xor
add
or
xchg
pushf
rorb
lret
mov
enter
ljmp
push
sub
fcoml
fsubr
arpl
call
pop
adc
mov
repz
mov
stos
add
movsb
mov
sbb
daa
or
popf
aam
mov
imul
mov
mov
sub
xor
sarl
add
cmp
inc
pushf
jnp
push
jle
push
enter
ljmp
pop
je
cwtl
in
sbb
imul
ljmp
ret
sahf
xchg
sarb
lea
and
sub
jae
outsb
mov
xchg
insb
adc
adc
stos
es
jmp
inc
mov
insl
adc
stos
dec
and
std
enter
std
repz
in
sub
and
pop
iret
scas
sbbl
dec
add
fstl
xchg
mov
mov
test
call
mov
outsl
lock
sar
and
movsl
jge
pop
int3
push
push
and
push
push
pop
pop
lcall
movsl
adc
into
out
add
jne
cmp
ret
insb
cmp
cltd
aaa
push
int
jbe
and
bndldx
int
sbb
and
aad
mov
fcomps
mov
pop
pop
pushf
jmp
adc
pop
sub
jg
jecxz
lret
icebp
pop
sub
xlat
cld
sub
ja
pop
push
ret
jb
fidivs
dec
sub
filds
mov
cmpsb
rorb
mov
push
outsb
insl
loope
aam
int
popa
fsubs
loop
push
out
leave
loop
stos
cwtl
in
cmp
in
and
ret
sbb
fcoml
mov
or
and
repz
test
out
jo
xor
cwtl
sbb
xchg
inc
sahf
xor
jo
nop
adc
jle
inc
js
lret
cli
mov
inc
imul
sbb
and
sbb
and
mov
cmp
cwtl
cmp
scas
push
push
jle
addl
or
sbb
inc
jp
gs
clc
pop
stc
repz
push
xor
out
push
ret
lret
fisubrl
fmull
popa
mov
test
pop
fldenv
insb
fnstcw
sub
cmp
add
inc
lcall
cmpsl
push
mov
inc
mov
xchg
mov
shlb
imul
push
pushf
mov
jbe
roll
jns
push
lea
imull
xlat
loopne
push
mov
test
popf
jbe
cmp
movsb
sbb
clc
jae
iret
dec
fsubs
outsl
push
aas
or
jns
cmpsl
adc
mov
scas
cmpsl
mov
insl
or
push
xchg
pushf
and
cld
lea
xlat
add
scas
lods
cmp
dec
test
adc
pop
inc
adc
dec
std
or
sahf
mov
push
pop
cmp
pop
lods
shl
mov
lret
js
or
jmp
mov
dec
cmp
inc
pushl
push
out
test
das
cmpsl
pop
or
mov
push
jle
dec
aaa
xor
and
mov
stos
sbb
pop
cmpl
sub
or
rcrb
adc
loop
nop
jl
pushf
mov
or
or
das
adc
imul
jecxz
bound
out
jp
or
add
xchg
xchg
out
imul
xchg
ss
push
sub
cmp
add
divb
jmp
and
lock
insb
xor
sti
cmpsl
test
push
jg
lods
aaa
xchg
lods
dec
cli
xchg
flds
or
adc
add
push
xchg
push
mov
mov
jo
out
arpl
loope
mov
call
cli
dec
pop
cwtl
jmp
js
out
mov
dec
cld
sub
leave
jnp
pop
mov
sub
sub
xor
pop
mov
adc
sbb
rolb
dec
cmp
push
jb
dec
data16
movb
push
mov
mov
mull
jne
cmp
push
cmp
fiadds
add
dec
pusha
push
sbb
adc
and
push
rcr
test
aad
les
loopne,pt
sahf
int
push
hlt
scas
adc
or
xor
cmp
hlt
dec
sahf
adc
cmp
aad
or
push
inc
hlt
or
outsb
and
push
jno
cmc
inc
test
jb
enter
arpl
xchg
test
call
mov
mov
sbb
imul
sub
pop
inc
popa
clc
push
sbb
daa
repnz
imul
aam
and
mov
inc
nop
addr16
int3
pop
aam
enter
jbe
dec
cld
ficompl
push
addb
lods
rorl
pop
sub
sub
lea
push
xor
push
lds
loopne
mov
repz
enter
repnz
xor
jne
data16
sti
fimuls
cmp
call
push
js
cmp
xor
aam
jg
dec
cmp
cmp
pop
adc
mov
fdiv
scas
inc
mov
mov
orl
popf
xchg
and
dec
mov
fstps
filds
adc
sti
fistps
gs
sub
pop
test
pop
inc
out
xchg
into
sbb
mov
mov
adc
inc
mov
cmp
jge
jno
push
xchg
lock
imull
mov
loop
subb
cmp
inc
paddd
daa
sbb
sub
xor
fadds
sahf
mov
aam
sub
cmp
push
sbb
mov
es
push
stos
add
push
xor
lods
sub
in
jmp
add
fildll
and
push
jmp
cmc
js
fndisi(8087
pop
adc
movl
sub
dec
arpl
and
sub
cwtl
add
adcb
mov
lods
outsl
jmp
add
pop
mov
outsb
shll
push
xchg
pop
mov
arpl
mov
dec
pop
outsb
jbe
mov
daa
dec
aam
xchg
aad
push
shl
adc
push
inc
jo
jmp
jne
jno
lock
pop
adc
hlt
mov
inc
cmp
inc
lods
or
mov
hlt
movsb
inc
jl
pop
add
fidivs
and
lea
push
or
inc
adc
jo
cmp
sbb
incl
push
sbb
mov
or
repz
divb
inc
sub
imul
xor
pop
mov
call
repnz
mov
mov
lea
test
sub
incl
and
inc
adc
pop
add
adc
inc
mov
out
or
icebp
pop
lock
xchg
int3
das
dec
orb
fidivrs
loop
inc
into
xchg
mov
dec
mov
xor
ret
arpl
and
mov
sbb
pop
into
leave
inc
insb
pushf
decl
push
scas
xchg
xor
call
pop
imul
inc
dec
fstpl
repz
scas
mov
and
daa
inc
fdivl
roll
sbb
mov
xchg
ds
lcall
insb
pop
in
rorb
fnstsw
inc
nop
sub
push
pop
cmpb
xchg
mov
sbb
lock
or
enter
mov
cli
icebp
jmp
jno
clc
jbe
bound
das
jbe
mov
sub
ret
pop
das
stc
das
add
mov
or
push
add
adc
push
push
in
dec
pop
xor
loopne
xchg
dec
mov
ret
pop
sbb
sub
mov
lods
cmpsb
sbb
xor
test
cltd
add
sub
cmc
dec
adc
mov
bound
repz
sub
mov
push
sti
orl
pop
mov
sbb
je
ja
ret
nop
push
cmpsl
jecxz
in
fs
push
pusha
je
lcall
mov
cli
test
mov
cmpsb
into
in
adc
cmp
pop
pop
jo
push
mov
movsb
push
jecxz
and
adc
jmp
je
jbe
xor
insb
cmp
jmp
mov
nop
xchg
push
xchg
iret
je
lea
pop
pop
pop
fs
push
mov
mov
in
icebp
test
and
xchg
push
sahf
repz
popa
dec
outsl
gs
arpl
out
xor
cmc
gs
add
mov
fldt
or
xor
iret
adc
mov
in
mov
push
mov
sub
test
mov
enter
outsl
movsl
sub
or
xor
insl
sbb
lret
fisubs
mov
xor
insl
push
imul
and
or
mull
push
das
in
jns
cmp
mov
ret
lds
push
mov
mov
adc
arpl
cmp
mov
gs
into
mul
popf
lods
cmc
loopne
xorl
fisubrl
mov
jl
mov
xchg
xor
into
or
mov
addr16
icebp
push
clc
nop
addb
mov
push
pusha
popa
mov
xchg
and
add
test
inc
fwait
mov
bound
cmpb
dec
orb
mov
in
inc
and
fs
insb
cmp
push
and
push
mov
cld
and
jnp
sub
sbb
jg
mov
jge
push
subl
aas
popa
lret
jo
cmp
test
lock
push
fcmovne
pop
lods
int3
xor
movsl
xor
call
pop
iret
inc
mov
jg
mov
jmp
push
push
cli
push
fst
out
xor
data16
and
popf
add
mov
ret
fstpl
fwait
rcll
dec
push
pop
je
orb
dec
out
mov
jmp
fidivrl
sbb
out
out
adc
ss
dec
sarb
jns
jl
jae
lods
dec
insb
xor
mov
sbb
xor
pop
test
push
lock
or
adc
sub
push
xlat
pop
aam
lret
rclb
pusha
les
mov
pop
xor
push
pushf
lahf
addb
add
cmc
sbb
inc
scas
shll
data16
jb
adc
dec
push
and
dec
or
xchg
xorl
pop
mov
fldenv
test
add
fistpl
mull
xor
insl
ret
test
gs
mov
xchg
cmp
aaa
insb
pushf
jmp
mov
inc
gs
inc
out
je
fwait
pop
pusha
cmp
cmp
xchg
mov
fwait
rclb
fnsave
inc
xor
idivb
inc
mov
dec
lock
inc
adc
mov
ss
inc
mov
sub
or
bound
mov
sar
push
add
or
shl
mov
push
pop
jl
adc
iret
sbb
dec
call
jecxz
repz
inc
in
mov
adc
jnp
int
dec
imul
add
adc
icebp
xchg
ror
dec
cld
adc
mov
mov
and
inc
addr16
cltd
adc
jno
outsl
icebp
adc
cli
mov
fs
stc
ds
mov
cli
insl
push
sbb
test
xchg
cmp
mov
dec
rolb
jne
cmp
sub
and
sbb
cmp
pop
movsb
pusha
loopne
sub
lcall
adc
test
push
scas
pop
xlat
mov
jecxz
or
xor
dec
rorl
faddl
or
mov
sub
dec
xor
mov
dec
fstpt
shl
mov
cmp
stos
xchg
and
adc
push
shlb
cmp
xchg
out
sub
sbbl
imul
jo
push
xchg
test
popf
xchg
mov
mov
out
fiadds
stc
adc
adcb
ss
lahf
cmpsl
lret
cmp
add
jnp
ret
sahf
popf
mov
lock
dec
ror
loop
gs
pop
loop
pop
out
and
iret
leave
mov
inc
in
xor
inc
mov
fcmovnbe
clc
cmc
cli
aad
xor
and
inc
dec
mov
loopne
sub
iret
adc
fidivrl
mov
gs
ficompl
mov
jp
sbb
scas
ss
push
xor
rorb
xchg
repnz
jmp
push
movsb
dec
lods
mov
add
out
and
add
cli
cmpsb
loope
push
inc
add
pop
mov
inc
dec
fidivrl
idivb
sub
lret
xor
mov
negl
mov
push
dec
cmp
inc
je
mov
xchg
push
sbb
jg
adc
mov
movaps
lret
pop
jo
xchg
jnp
mov
inc
insb
xchg
in
or
pusha
pop
mov
and
add
mov
arpl
mov
adc
cmp
roll
inc
mov
pop
fs
pop
imul
add
sahf
sti
lea
sub
int
fwait
stc
repz
jge
aaa
adc
rolb
mov
std
push
movsl
push
cmp
ret
adc
out
sub
pop
cmp
mov
xchg
icebp
mov
movsb
jp
punpckldq
inc
cmp
mov
sbb
jns
aas
cld
addl
imul
cli
xchg
dec
mov
scas
pop
cltd
jnp
sbb
pop
ret
and
ja
pop
xor
jnp
xor
clc
mov
sar
or
insl
cltd
xchg
push
enter
ljmp
mov
push
xchg
and
loop
add
push
adc
test
lds
ds
add
movb
sbb
xlat
adc
pop
loop
push
push
and
cmc
test
arpl
repz
inc
cmpsl
cmp
jp
ds
pusha
popa
xchg
fs
mov
xchg
mov
jnp
cli
loopne
cs
and
sti
fstpl
mov
sahf
mov
mov
push
repz
push
push
out
sub
mov
dec
int3
ror
stos
das
sbb
daa
out
iret
js
jne
into
push
xchg
cli
jbe
js
pushf
dec
adc
hlt
and
addr16
inc
iret
jl
mov
call
stos
mov
aaa
adc
or
outsb
mov
sbb
es
ret
stos
aad
or
fs
mov
xor
xchg
adc
popa
fcom
pop
fs
clc
out
je
imul
jns
fidivl
fs
fucomi
and
or
or
stos
fwait
mov
cmp
insl
cmp
mov
dec
sub
xor
leave
sbb
pusha
jne
je
jb
push
pop
lds
movsl
jns
pop
loop
dec
mov
out
add
xchg
loopne
repnz
imul
int
or
ds
mov
mov
xor
mov
cmpsl
cmpsb
mov
dec
pop
push
adc
ja
je
mov
out
pop
aaa
xchg
xor
mov
sub
or
ljmp
pop
xchg
sbb
sar
cmp
shl
in
enterw
xchg
out
mov
dec
lds
or
push
adc
xbegin
pop
add
jnp
xchg
cli
daa
jecxz
sbb
fisubrs
sbb
pop
data16
xor
dec
mull
clc
jecxz
xchg
sbb
bound
popf
mov
pop
sub
pop
adc
pop
mov
push
sbb
xor
repz
dec
mov
xchg
ds
leave
xorb
sarb
or
inc
scas
insl
push
mov
mov
dec
call
adc
daa
mov
mov
adc
ds
mov
iret
xor
adc
jbe
mov
push
inc
xorb
dec
and
out
adc
xor
ja
pop
enter
jle
pop
xchg
fs
into
xchg
mov
push
pushl
ret
imul
or
xchg
je
jmp
cmp
xchg
sbb
or
aad
mov
hlt
push
add
sahf
scas
std
jae
stos
repz
inc
mov
sbb
jns
aaa
push
outsb
add
outsl
sub
mov
jb
inc
test
lret
shrb
adc
sarl
loop
js
aas
imul
outsl
in
inc
adcb
stc
sbb
int3
dec
add
pop
jne
repz
xor
mov
lods
arpl
add
outsb
push
xchg
enter
sub
mov
sbb
mov
lahf
jle
add
les
inc
sub
xor
adc
mov
cmpsb
sbb
jae
xchg
xor
adc
ja
idiv
cli
cmp
neg
in
insl
mov
fmulp
pop
mov
or
mov
sahf
sbb
cmp
add
icebp
dec
test
fnclex
sahf
mov
jle
dec
xchg
add
call
orb
add
arpl
mov
xor
and
inc
push
das
sub
or
sub
xor
stos
cld
ret
inc
xlat
jo
push
movsb
rorb
sar
inc
xchg
loopne
sbb
xor
push
popf
mov
cwtl
mov
adc
es
out
negl
out
adc
lahf
test
pop
xor
lret
pop
sahf
cmp
int3
add
mov
lock
insb
sub
pop
int3
or
sub
cs
pop
or
pop
in
and
mov
out
in
and
mov
shrl
push
pop
pop
push
xor
into
aam
popa
ficomps
mov
push
nop
push
int3
ret
roll
jp
dec
or
out
pop
faddl
insb
ret
insb
jecxz
loop
xor
mov
xlat
sarb
cmp
ret
cmc
jmp
jo
add
pop
fcomip
ret
fcoml
pop
int3
sub
jg
mov
mov
jp
cmp
addr16
lea
mov
scas
push
mov
sbb
inc
lds
xchg
decl
mul
in
sbb
movsb
cli
xchg
inc
jae
cmp
cmpsl
push
lret
repz
aaa
in
xor
iret
jnp
mov
fxch
mov
subps
mov
and
inc
push
push
and
mov
dec
mov
jo
pop
ret
pop
xlat
mov
jne
fcoml
push
pop
mov
sub
std
and
mov
sbb
lock
repnz
pop
sbbl
inc
add
ret
xchg
mov
gs
dec
sub
sbb
fbstp
jg
adc
cmp
fwait
xor
add
cs
xchg
and
insl
rcr
fisttps
int
mov
dec
adc
cmp
stc
xor
mov
mov
push
pop
loop
not
mov
inc
sbb
addb
push
jbe
mov
lret
add
lds
and
inc
lahf
push
sbb
gs
sbb
lods
fcmovb
mov
push
pop
ljmp
scas
das
mov
and
pop
push
incl
fiadds
imul
dec
es
pop
sti
into
inc
es
int
push
pop
sbb
lcall
or
mov
xor
inc
movsl
fcmove
outsl
cld
or
pop
inc
std
jl
xor
push
leave
insl
adc
mov
push
push
ds
jmp
in
jno
sahf
aad
lock
int3
lock
sub
enter
xchg
cmp
fxch
jno
shlb
and
in
push
jecxz
lret
mov
adc
imul
loope
hlt
cwtl
int
mov
out
sbb
mov
mov
push
xor
xorb
out
lret
decb
push
jmp
iret
loope
fwait
dec
lods
insl
inc
jecxz
stos
in
rcl
mov
mov
add
sbb
stos
aam
inc
sub
jecxz
js
mov
outsb
mov
ret
loope
fidivrl
in
sahf
out
fwait
sub
lods
sbb
stos
adc
fs
popl
jns
add
and
andl
psubq
imul
mov
inc
neg
sub
jns
int
add
mov
mov
cld
dec
jae
jecxz
dec
xchg
orb
lods
scas
mov
push
push
fwait
mov
cmpsl
icebp
mov
jge
adc
cmp
movsl
jns
jecxz
hlt
sub
ret
subb
sbb
movsb
sub
push
pop
xchg
pop
lahf
jns
mov
punpcklbw
imul
jnp
xchg
mov
jne
cmp
push
bound
add
pushf
lds
and
mov
add
test
pusha
mov
sbb
fnstenv
aad
sub
pop
mov
mov
add
xchg
imul
jo
inc
cs
enter
xor
test
out
fsubrs
xchg
push
jp
stos
or
cs
lock
stc
xor
in
sti
jecxz
insb
sbb
sub
les
xchg
call
das
adc
iret
jp
jb
fxch
cmp
arpl
dec
stos
popf
cmp
lcall
scas
gs
fcomps
clc
lahf
xchg
rorb
mov
xchg
push
pop
dec
sub
jle
mov
loopne
daa
cmpsb
clc
pushl
mov
das
mov
or
sbb
cltd
dec
inc
inc
push
pop
int3
jns
iret
sbb
sbb
out
mov
ja
call
jp
sub
or
add
mov
sbb
xchg
loopne
add
and
add
and
inc
and
dec
fldlg2
fwait
pop
dec
mov
sub
jne
inc
in
jp
inc
push
fiaddl
xor
dec
inc
aaa
add
lahf
cld
imul
daa
test
popf
popf
sahf
inc
cmp
mov
sti
or
hlt
lds
gs
or
rcrl
aaa
dec
outsl
mov
test
push
mov
stos
mov
and
jp
inc
xorb
stos
cmp
sti
pushf
sbb
cmp
inc
sub
test
in
mov
mov
movb
outsl
repz
push
sub
dec
idivb
sub
stos
cmpsb
test
roll
pop
inc
sub
daa
and
mov
cmp
ret
jbe
icebp
data16
ret
cmp
lea
push
xchg
inc
mov
sub
dec
shll
cmp
jne
js
xchg
mov
and
or
stc
cmpsb
push
mov
push
shl
addr16
jbe
and
loop
push
data16
aam
sbb
or
or
movsb
pop
cs
rol
inc
inc
add
add
jg
aaa
jae
jns
pop
mov
sti
sbb
mov
mov
movsl
pop
ja
push
repnz
mov
cmpsl
repz
rolb
in
xchg
fprem1
das
int3
mov
jbe
push
and
xbegin
in
inc
push
jbe
aam
testb
push
jb
push
daa
das
xlat
stos
push
dec
in
jnp
addr16
push
xlat
sbb
aad
push
add
je
push
in
cmp
loopne
paddb
lcall
add
mov
cltd
movsl
stc
mov
popf
or
aas
fistps
lock
mov
cmp
mov
mov
sub
cmp
ror
dec
push
andl
pop
xchg
pop
pop
inc
jg
sub
test
jg
sbb
xor
mov
clc
mov
xchg
ds
addb
mov
fcomps
lds
fwait
xchg
mov
cwtl
cmp
jl
jecxz
outsb
sbb
lret
mov
pop
add
add
test
push
adc
mov
out
outsb
lahf
ret
out
fcomi
pop
test
mov
in
dec
or
xor
dec
idivb
subb
or
lret
sbb
dec
cmovg
sbb
pop
mov
dec
dec
stos
mov
dec
adc
idiv
lds
dec
sbb
jg
cmc
bound
ds
xchg
dec
decb
mov
scas
sub
sti
mov
iret
pushf
lcall
jmp
sub
sbb
jle
dec
dec
inc
in
xor
in
in
scas
push
rorb
push
mov
addr16
xor
xor
mov
push
shrl
push
jmp
out
idivb
rolb
aaa
xor
fbld
inc
inc
add
int
add
push
in
adc
xchg
fstpl
mov
loope
ljmp
in
adc
cmp
test
repz
cmp
xchg
mov
mov
or
stos
jmp
jbe
xchg
imul
cmp
pop
cmc
add
arpl
loope
add
push
mov
stos
cltd
mov
push
push
dec
mov
repnz
xchg
jmp
sarb
jb
xor
mov
mov
sahf
xchg
loopne
repz
int
cmpsl
cmpb
cs
adc
jo
jbe
cmp
push
adc
xor
inc
push
inc
in
cltd
loop
lods
push
sbbb
xor
scas
ds
fisttpl
push
pop
outsl
subl
xor
xchg
ret
repz
bound
jg
sub
jno
aam
mov
sbb
pop
jo
sub
out
xor
ficoms
xor
stc
xor
iret
adcl
fbstp
pop
xor
fcomip
add
mov
ds
sub
mov
jl
sti
sbb
xchg
pop
ja
jg
imul
xor
movups
dec
jmp
das
ss
push
test
mov
dec
rorl
test
call
mov
push
xchg
adc
mov
lods
dec
dec
push
adc
pop
add
and
lret
push
imulb
and
and
and
outsb
cmp
cld
xchg
aaa
sbb
call
stc
pushf
test
mov
add
mov
or
pop
movb
cmp
jg
jne
inc
xchg
sahf
into
xor
add
xchg
dec
cli
cs
das
sarl
pusha
and
and
mov
push
push
mov
test
in
fadd
sbb
mov
rcll
and
mov
rorl
adc
ljmp
test
nop
lods
cmpsb
jae
cmc
pop
je
std
je
mov
loope
jg
ror
repz
and
xor
rorb
aaa
adc
jmp
insb
ds
aas
xchg
xchg
inc
add
mov
into
inc
mov
or
pop
add
pusha
int3
add
jmp
test
cli
lcall
mov
pop
add
pshufw
sahf
popw
push
js
jae
test
addr16
or
imul
es
shll
insb
imul
insl
xlat
inc
mov
jl
loopne
adc
inc
iret
je
inc
inc
in
push
mov
push
xor
testl
test
aam
and
push
adc
sub
push
xlat
sub
lock
iret
pusha
aas
test
dec
jns
mov
aam
and
fdivrl
jp
jb
punpcklbw
or
sti
or
jg
test
sbb
adc
sub
mov
lcall
cmp
nop
jo
mov
and
pop
or
out
fidivrs
leave
pop
test
outsl
pop
sahf
hlt
out
mov
stos
outsb
mov
rolb
fdivs
call
push
std
jnp
jmp
sarl
push
push
test
mov
push
push
sub
add
jb
push
not
sbb
inc
aam
stc
rclb
mov
push
adc
sub
cwtl
xchg
cmp
lahf
xor
fbstp
sub
cmp
bnd
xchg
mov
scas
and
lea
ja
stos
in
out
or
and
test
add
das
xchg
sbb
and
and
ja
sbb
repnz
mov
mov
xchg
sahf
mov
imul
in
dec
add
cmpl
push
cmp
jl
mov
inc
dec
mov
adc
push
push
push
jp
mov
je
adc
cmp
pusha
push
stos
jmp
inc
sub
cmp
jo
lret
sbb
jge
cmp
and
xchg
mov
mov
rorl
outsb
bound
adcl
dec
jb
stos
andl
jge
adc
or
mov
rcr
inc
mov
and
jle
xor
ss
cltd
xor
imul
mov
mov
sarb
cmpsl
inc
dec
jecxz
test
inc
mov
leave
xor
push
shlb
adc
cli
insl
jmp
test
testb
shll
test
inc
into
mov
in
mov
in
aaa
insb
adc
std
fcompl
pop
jecxz
mov
inc
scas
idivl
jbe
add
dec
lret
jp
fldt
ds
xchg
xor
shll
sbb
mov
jecxz
addb
pushf
aam
and
lea
mov
loop
or
in
cmp
jecxz
iret
xchg
add
cmp
xor
sub
mov
add
adcb
into
and
imul
lea
mov
jl
pop
pop
pop
mov
cs
inc
dec
dec
lcall
in
sbb
mov
loope
sbbb
insb
cmp
cli
sbb
int
sub
cmp
repz
test
and
adc
enter
or
aad
ja
dec
jbe
je
adc
and
xlat
jecxz
and
or
enter
inc
fisubs
popa
push
mov
popa
adc
adc
cmc
add
or
mov
aam
sub
nop
xlat
xchg
jecxz
lock
push
ss
repz
sbb
add
pushf
push
mov
mov
aaa
sbb
aam
out
jo
pop
cmp
rcr
aaa
mov
test
or
cs
pop
push
fldt
out
push
inc
xor
mov
data16
mov
sbb
xor
inc
in
xchg
in
jp
js
cltd
mov
adc
mov
xor
or
cld
mov
lds
push
dec
data16
add
add
fisttpl
movsb
jb
imul
les
push
test
sbb
mov
bound
sbbl
aam
subb
adcb
icebp
inc
xor
outsl
lret
lods
and
out
cmp
jmp
lcall
pop
popf
testl
mov
fnsave
mov
sarl
xchg
push
push
jg
aas
dec
push
aad
add
xchg
add
mov
inc
xor
addl
data16
mov
pushf
aaa
push
mov
ja
sub
jl
mov
loop
lods
inc
mov
shll
addr16
fadds
das
xchg
adc
dec
fcoml
push
dec
shll
jecxz
pop
pop
pop
mull
fildll
in
and
lcall
fdivr
aas
cmpsl
push
and
mov
sub
pop
or
xchg
out
mov
or
inc
adc
in
das
imul
mov
je
adc
in
fdivr
jo
orb
sbb
mov
aaa
xor
xchg
push
dec
adc
sbb
out
stc
insl
xchg
fmull
loopne
shll
cli
subb
fldt
or
fidivl
stos
cltd
mov
push
push
push
and
dec
stc
ljmp
ret
enter
add
cmp
cmp
adc
mov
iret
ja
call
adc
xchg
es
xor
xlat
clc
cwtl
adc
lods
call
cmpb
mov
jl
push
mov
aas
push
and
scas
sbbl
mov
jle
imul
out
inc
nop
rolb
aas
scas
sar
rclb
in
sub
mov
pusha
inc
aam
xchg
movsb
mov
mov
in
mov
les
mov
es
sbb
in
push
ja
data16
outsb
jp
dec
add
dec
push
jnp
flds
inc
jmp
sub
push
mov
insl
sbb
xor
orb
ss
dec
int3
jnp
cmp
sar
push
pop
shll
aas
leave
loope
aam
add
mov
imul
adc
aam
cmp
cmp
stos
les
dec
jne
xchg
inc
aas
aam
adc
sti
xchg
mov
push
cmp
jmp
ss
out
out
cmp
roll
lahf
cmpsl
pop
inc
xchg
xchg
in
fildl
sbb
lods
mov
adc
jp
mov
mov
in
in
lret
shrl
movsl
mov
rcl
pushf
sbb
push
ret
push
aam
sub
repnz
push
test
mov
push
shrb
mov
fiadds
pop
adcl
movb
pop
jbe
in
pop
adc
mov
pushf
xchg
mov
push
jmp
sub
jge
repnz
inc
in
push
aam
push
iret
adc
insb
rclb
xor
mov
ja
add
fisttpll
out
xchg
and
xlat
mov
mov
inc
sbb
push
dec
in
rorb
std
mov
xor
test
test
mov
mov
mov
adc
fistl
sbb
cmp
dec
mov
inc
lcall
shl
sbb
mov
cltd
mov
lock
push
lds
je
cmp
mov
mov
inc
sbbl
push
lret
lea
inc
lock
stos
xor
mov
jno
sbb
mov
aaa
pop
add
outsb
pusha
mov
fldt
mov
fidivrs
pop
pusha
cmp
js
mov
xor
sbb
cmp
insl
sbb
test
pusha
out
xchg
mov
pop
dec
aaa
bound
mov
aam
xor
insl
popa
outsl
and
test
enter
andb
push
adc
push
push
outsb
cltd
adc
in
sub
out
pop
mov
add
or
push
idiv
stos
repnz
mov
sub
push
mov
aaa
jnp
fs
shll
mov
nop
std
mov
jecxz
mov
adcl
faddl
cltd
testb
out
rep
loop
repz
jecxz
xchg
push
pushf
sub
data16
and
inc
stc
mov
mov
mov
cmpsb
std
mov
repz
and
xor
dec
popf
xlat
cs
imul
incl
cmp
xchg
cmp
mov
adc
jmp
aas
pop
sti
outsb
and
out
cs
and
lods
push
out
popa
mov
sub
mov
ret
xchg
into
dec
pop
aas
das
add
mov
inc
lds
lock
out
roll
ds
push
in
xor
jg
std
sub
pop
xadd
imul
xchg
aaa
stos
adc
addr16
popa
inc
in
mov
outsl
mov
add
jne
clc
and
mov
fistpll
xor
mov
mov
stc
mov
mull
stos
fstps
iret
sub
sbb
out
sbb
daa
and
mov
pushl
scas
lods
cmc
dec
sbbb
fbld
and
mov
jb
je
clc
pop
shlb
push
outsl
mov
adc
sbb
dec
sub
dec
mov
add
and
shrb
imul
int3
or
ja
test
sar
xchg
arpl
gs
cmp
das
mov
in
adc
icebp
push
rcll
imul
fsubs
stc
jge
mov
cmpsl
stos
jnp
push
and
dec
jbe
sbb
mov
sbb
imull
xchg
pop
scas
jo
pop
or
insl
jg
mov
cmpsb
in
cld
fwait
mov
push
xor
fmull
pop
adcl
sub
mov
xor
xchg
outsb
mov
mov
push
sbb
popa
inc
bound
xchg
sbb
sahf
ret
mov
data16
mov
jae
jns
push
sbb
add
push
xor
clc
sti
icebp
out
popf
cmp
cli
mov
and
lret
and
cmc
loop
cwtl
sti
jle
dec
std
les
add
cmc
clc
cwtl
icebp
add
push
fsub
inc
mov
inc
xchg
addb
jecxz
fnstenv
pop
fists
icebp
scas
clc
or
push
pop
push
jp
rcrb
lea
pop
stc
in
in
inc
adcb
sbb
add
or
mov
test
jg
rcrb
imul
pop
xor
pop
push
popa
jl
stc
mov
mov
jge
mov
or
push
cwtl
jnp
sbb
bound
les
push
add
int3
inc
add
pop
cmp
inc
fwait
mov
data16
fsts
pop
outsb
movsb
mov
jp
shl
mov
popa
lods
lea
in
ds
cmpb
cmp
movlps
popa
mov
aaa
movsb
shll
insb
cli
pushf
pop
mov
mov
in
pusha
sbb
push
fimull
sbb
adc
aas
sub
push
out
dec
out
les
lahf
cwtl
cld
sub
push
js
and
sbb
inc
mov
push
adc
mov
clc
xor
sub
test
mulb
cmp
ljmp
or
push
mov
mov
sub
mov
xchg
cmp
mov
xchg
push
jle
insl
cmp
lea
popa
lahf
imul
ss
mov
or
mov
xchg
in
push
test
dec
cltd
push
mov
iret
pushf
rcr
loope
jbe
movb
jecxz
or
jb
push
stc
leave
loopne
sub
mov
pop
test
movsl
notl
in
dec
add
cwtl
fwait
iret
mov
mov
dec
xor
adc
popf
xchg
pop
mov
cs
jecxz
dec
mov
push
sti
pusha
xor
jnp
sub
out
adc
xor
incb
ja
icebp
lea
in
dec
jno
xchg
sub
lret
in
push
inc
inc
addr16
pop
stc
adc
push
dec
or
mov
dec
push
or
pop
jmp
mov
sub
mov
scas
adc
add
cltd
push
sar
sbb
int
and
mov
push
mov
imull
in
test
aad
pop
xor
inc
scas
lock
fwait
les
adc
dec
jmp
pop
add
loopne
push
push
pop
aam
int
scas
out
loopne
dec
lock
jb
sbb
xor
and
test
icebp
dec
jns
lock
sbb
in
mov
bound
sti
push
les
cli
sbb
inc
xchg
cmp
mov
cli
inc
jns
push
jmp
pop
inc
fld
push
repnz
push
ret
lahf
mov
pop
cmp
or
cmpb
jmp
inc
and
roll
add
push
sbb
fucom
movsl
push
notb
xchg
out
mov
or
lret
mov
imul
dec
roll
push
mov
inc
mov
pusha
cmp
mov
hlt
and
xchg
mov
sahf
test
mov
test
in
xchg
pop
cwtl
inc
sti
enter
ja
movsb
add
roll
xor
into
jo
nop
lock
lret
adcl
and
aas
gs
add
and
adc
sub
mov
std
jle
mov
sbb
and
inc
daa
cmp
lcall
push
sbb
push
and
or
repz
and
js
sbb
pop
or
xchg
push
push
or
es
jnp
and
lahf
sahf
adc
sub
xchg
ret
xchg
adc
cltd
inc
insb
cmp
repz
test
addl
cmp
pop
cmp
push
mov
jno
add
lret
cwtl
lret
inc
cmpsl
aad
xor
mov
stc
ret
mov
ret
jp
jne
loope
or
aad
pushl
inc
add
std
mov
jne
push
cwtl
mov
sub
cltd
inc
inc
pop
imul
test
push
xchg
loop
mov
push
test
mov
cmpsl
sbb
xor
repnz
mov
lret
js
pop
fs
jae
ret
jae
cmc
outsb
test
test
pop
je
cmpsl
cld
jecxz
fisttpl
pop
xchg
fcoml
push
movsl
xor
adc
add
popf
dec
out
sub
xchg
or
mov
sbb
insl
pop
movsb
xchg
out
es
mov
ret
insl
cmp
testl
inc
xchg
cwtl
xchg
outsb
mov
pop
jle
data16
mov
test
dec
testb
fidivl
aad
sub
dec
push
jb
addr16
sti
daa
iret
cmc
ret
xchg
jns
in
out
mov
addr16
cmp
fsubrl
jmp
or
insb
pop
jo
std
xchg
fwait
pop
mov
lret
dec
jge
clc
pop
dec
mov
pop
mov
mov
add
mov
ret
test
int3
dec
inc
adc
jb
jg
push
jae
repz
sub
pop
aad
and
imul
sub
cmc
adc
jmp
inc
dec
into
mov
push
lahf
xor
out
cmp
jae
ds
push
jne
dec
push
or
fmull
jle
jns
adc
dec
sahf
dec
add
sub
fists
jle
add
push
adc
cmp
in
dec
pop
push
push
sub
fldenv
out
out
dec
fidivs
stos
and
andb
jmp
and
cmp
sub
repz
loop
mov
lods
add
mov
out
push
pop
adc
ss
or
ljmp
or
mov
movsl
int3
add
or
std
int
loopne
add
inc
xor
adc
mov
cvtps2pd
inc
inc
rcrb
aad
pop
mov
sub
pop
rcrb
mov
jmp
jp
repz
mov
or
dec
mov
ja
add
mov
aas
mov
push
mov
jl
mov
dec
imul
gs
xchg
mov
enter
pop
sti
jmp
sub
xor
outsb
xchg
cmp
push
lret
mov
pusha
push
or
out
ljmp
adc
xchg
scas
call
lahf
mov
xor
adc
dec
lret
mov
mov
shlb
insb
mov
cmp
mov
or
xor
fdiv
add
add
push
stos
lret
fisubl
jp
mov
lea
jmp
call
ret
icebp
mov
mov
cli
rorb
sub
mov
shl
jmp
pop
cltd
dec
dec
mov
dec
stos
scas
and
add
loope
stos
lods
movsb
imul
mov
cmp
lods
daa
or
mov
mov
nop
pop
add
dec
lahf
inc
xchg
push
fnstcw
fs
cmc
dec
pop
xlat
xor
lods
xor
mov
add
ret
sub
addr16
loopne
mov
xor
xchg
pusha
xchg
mov
add
add
test
pop
and
call
ss
pop
pop
and
jns
test
sub
xchg
jns
outsl
cmp
fcomps
cmp
jns
dec
inc
lock
mov
mov
ret
outsb
rcl
dec
mov
das
xchg
aaa
push
push
pop
dec
adc
mov
fidivrl
and
gs
jo
or
sar
aas
mov
mov
lahf
out
in
mov
cmc
mov
jg
clc
data16
cmp
mov
mov
and
push
les
mov
out
rep
pop
push
sbb
int3
iret
sbb
imul
sub
cmp
test
movsl
shlb
stos
xchg
shrl
dec
insb
mov
add
add
stc
mov
sti
iret
mov
outsl
inc
arpl
inc
add
mov
xchg
pusha
dec
pushf
outsl
mov
cmp
mov
sahf
mov
push
mov
jno
cwtl
jb
sub
mov
outsl
xor
in
pop
pop
jmp
jnp
sbb
adc
icebp
or
stos
daa
dec
add
adc
mov
hlt
add
lret
add
cmpsl
mov
fnstsw
rclb
jg
sbb
mov
cmp
subl
das
repz
jle
pop
leave
lds
cmp
packsswb
insb
aam
and
and
rcr
dec
outsb
mov
and
adc
mov
sti
repz
addl
dec
ja
in
loopne
cld
push
sub
jo
inc
inc
insl
push
cld
das
cld
rcll
jle
daa
or
mov
cmc
cmp
lock
shr
jecxz
bound
and
cmpsl
xor
mov
cmpsb
pop
dec
cli
pop
mov
mov
jnp
cmp
out
ljmp
sbb
arpl
idivl
or
addr16
pop
into
lea
mov
xchg
lock
push
sub
fists
mov
lret
ljmp
stc
adc
or
mov
adc
insl
add
js
js
imul
in
fisttpll
setbe
jo
dec
adc
test
pop
stos
pushf
in
cmp
mov
leave
mov
pop
icebp
popf
out
fwait
mov
push
jae
int
mov
scas
xchg
testl
fadds
pusha
adc
lods
int
jno
ret
dec
int
push
aam
enter
and
lock
call
inc
stos
lret
or
fstpl
cwtl
cmp
and
mov
xchg
mov
or
mov
rcr
sub
mov
dec
jae
jbe
outsb
inc
push
mov
pop
std
ss
test
scas
or
rorl
lea
pop
icebp
lcall
cltd
sbb
lret
lret
mov
push
out
cmp
mov
adc
ja
int
push
sub
sbb
jnp
pop
sub
pop
mov
jp
stos
inc
sbb
and
in
push
jp
xchg
and
scas
cltd
push
lret
imul
shrl
in
cli
mov
xor
in
push
aaa
jb
cwtl
movsb
xchg
movsb
and
push
rorb
pop
cmpsl
shll
and
idivl
jge
leave
pop
stc
jne
mov
mov
fldl
test
nop
out
in
stos
jle
mov
ljmp
mov
call
add
dec
jo
addr16
mov
inc
nop
mov
in
cltd
dec
jno
lahf
cmp
inc
add
lock
jge
mov
loopne
adc
cmp
repnz
mov
stc
aam
mov
xlat
cwtl
nop
jne
lcall
jo
sub
sbb
les
add
push
sar
jnp
jl
xor
sti
loopne
inc
dec
std
mov
fiadds
push
fisttps
shll
jmp
rorl
outsb
push
sbb
mov
popa
mov
jp
pop
shrl
in
add
into
sub
lods
xchg
mov
fdivs
cmp
xor
pop
testl
scas
jl
imul
jbe
daa
jnp
add
mov
fnstcw
jmp
mov
inc
cmpsb
sub
mov
xchg
sahf
mov
jge
inc
mov
bound
stc
movsl
daa
cmpsb
orl
stos
jle
and
bound
cmp
jno
push
dec
push
cld
push
dec
push
add
mov
cmp
aaa
testl
mov
inc
add
aad
mov
pop
mov
sbb
lods
dec
stos
sbb
lret
out
xor
xchg
or
outsb
pushf
inc
pop
imul
aas
jecxz
scas
loopne
add
mov
sahf
clc
stos
movsb
push
or
test
inc
lahf
push
lods
aam
leave
fwait
nop
xor
jns
pusha
pop
or
shl
inc
pop
mov
xchg
fcmovne
xchg
adc
lock
inc
inc
jae
and
push
cli
addr16
mov
jb
sbb
mov
cmpl
sbbb
movsb
jbe
ja
jno
stc
lock
pop
pop
int3
sbb
cmp
pusha
stos
cmp
xor
cmp
in
test
aaa
mov
movsl
and
push
mov
fnstcw
bound
and
scas
ss
movq
loopne
movsl
daa
mov
scas
pop
in
push
pop
shl
addb
inc
ret
std
aaa
pop
ja,pn
hlt
popa
jns
inc
lock
pop
fimull
scas
leave
jbe
jecxz
mov
int3
mov
pop
push
rcll
das
cmpb
inc
mov
iret
je
push
pop
ficompl
iret
mov
pop
fld
push
lods
dec
mov
xor
cmp
mov
cmc
loopne
push
in
mov
jecxz
fs
jns
in
and
mov
cmpsl
and
dec
xchg
insl
ret
fnsave
dec
mov
mov
adcb
fisubrl
xor
adc
stos
pop
sub
insb
adc
or
cmp
loope
push
popf
xchg
xor
pop
push
out
pop
enter
clc
scas
cmp
imul
outsb
lods
xor
mov
dec
mov
sub
cli
mov
push
stc
adc
in
jbe
cmp
hlt
scas
inc
sbb
call
xor
adc
sub
sbb
adc
aam
dec
fwait
popa
popa
cmpsl
jl
add
lds
gs
lea
hlt
pop
pop
push
stos
xchg
sti
imul
rcrb
mov
push
mov
shr
lods
push
popf
movsl
in
push
clc
pop
inc
mov
lea
dec
cmp
push
nop
clc
imul
xor
xchg
call
out
xor
adc
inc
xchg
dec
push
jns
push
int
scas
push
into
jle
insl
mov
nop
push
imulb
mov
ret
sub
mov
test
inc
and
sbb
or
lret
sbb
mov
adc
or
mov
jl
cmpsb
pop
push
int
cs
aad
cld
cmpsb
mov
push
lret
bound
decl
daa
dec
and
mov
je
adc
xor
dec
lods
fisttpll
xchg
dec
lods
cmpsb
imul
cmp
inc
cmc
jle
inc
push
xor
mov
or
mov
in
push
pusha
mov
jbe
inc
push
loope
pop
xchg
notl
dec
dec
in
sub
aas
adcl
jle
sbb
mov
stos
sarl
nop
jmp
int
jo
in
push
je
lahf
bnd
dec
lock
inc
mov
cmp
je
dec
cmpsb
test
stos
rcrb
movsb
inc
nop
rorl
push
rep
xchg
sub
into
ljmp
xchg
jb
xlat
jg
push
and
or
mov
leave
sub
loop
or
add
or
push
jae
imul
or
testl
pop
mov
cmpsb
add
fnsave
sbb
lods
jecxz
dec
in
push
into
sub
je
inc
leave
cmp
shll
inc
enter
adc
xchg
popf
pop
or
jae
lcall
or
pop
lds
mov
and
mov
jle
mov
lds
bound
jnp
mov
mov
sub
jns
jl
cli
dec
fistl
das
ret
loopne
add
add
or
xor
loopne
pop
mov
loope
out
das
pop
mov
mov
fldl
pop
test
out
fwait
scas
mov
cli
shr
or
mov
in
xchg
dec
test
aas
and
inc
and
push
mov
hlt
movsb
jge
xchg
shrl
lods
jle
flds
mov
or
and
mov
push
mov
aas
out
dec
jp
mov
add
repz
cmp
dec
insl
jnp
pop
sbb
lahf
jne
scas
cs
call
das
jge
dec
in
mov
repz
ja
lea
mov
mov
ja
lds
fldl
ror
loope
sub
cmp
mov
adc
test
sti
scas
inc
xlat
daa
enter
ljmp
arpl
shrb
shr
ds
xchg
mov
mov
add
into
sahf
fwait
cltd
loop
jbe
packuswb
xchg
cmp
repnz
jp
adc
popa
adc
lret
cld
xchg
mov
add
aas
lret
test
mov
sub
cmp
adc
mov
sbb
notb
ficompl
mov
jmp
and
jae
out
cltd
adc
dec
inc
aaa
fwait
sbb
stos
sub
pop
loop
mov
movl
push
xor
gs
mov
push
repnz
cld
sti
repz
test
imul
into
dec
fadds
pop
xchg
imul
jl
cmp
sbb
inc
aas
mov
rcrl
cmp
fs
dec
mov
cmpsl
push
popf
xchg
rol
cmpsl
imull
shll
sbb
pusha
nop
hlt
lahf
stos
xchg
rorl
jle
std
mov
mov
iret
popa
hlt
mov
rorb
stos
pop
xor
xchg
fadds
lea
pop
div
sbb
mov
lret
lahf
push
dec
pop
in
lods
out
sbb
ljmp
adc
cmpsl
repnz
jg
push
call
loopne
loope
lods
mov
int3
addl
xchg
out
lds
cltd
jns
outsb
fildll
popf
mov
hlt
imul
mov
lods
inc
mov
movsl
in
sarb
mov
or
jns
fdivrs
add
pop
lret
mov
cmp
cmc
sbb
fdivl
xchg
add
in
gs
and
enter
xor
dec
pop
lock
lahf
cmpsl
lds
icebp
stc
adc
fisubrs
jg
subb
mov
adc
adc
arpl
dec
adc
sti
push
sbb
push
int
stos
ljmp
xor
rcr
mov
neg
sahf
push
popf
aam
mov
or
mov
add
push
mov
out
inc
js
sbb
jmpw
cmp
imul
lock
push
add
outsb
mov
lret
insb
out
das
dec
xchg
jg
gs
cmp
jmp
mov
repz
fs
adc
cmc
lods
in
popf
enter
jae
mov
jne
psllq
out
mov
gs
pop
mov
cmp
subb
inc
faddp
pop
jl
mov
push
dec
ror
mov
cmp
mov
lahf
leave
xchg
dec
shl
sub
xchg
cmpb
mov
push
push
dec
xchg
sub
pop
cmpsb
pop
cmpsb
mov
aad
lret
ja
and
jge
mov
xchg
sbb
mov
pop
mov
mov
dec
dec
xchg
pop
jge
ljmp
mov
inc
les
shll
cli
repz
adc
idivb
inc
jae
orb
decw
pusha
fnstsw
iret
xchg
adc
jp
inc
sbb
rorb
aaa
xchg
loop
shrb
int
push
pushf
ja
leave
xchg
jno
adc
adc
jg
subl
or
push
lret
mov
push
inc
mov
push
bound
or
dec
xor
sub
fsubrl
ror
ds
ljmp
mov
pop
and
add
popf
imul
pop
jp
pop
mov
out
fsts
fidivl
cwtl
adc
imul
rcl
pop
xchg
stos
mov
mov
lea
imul
in
js
cmp
dec
mov
sbb
xchg
jge
mov
sbb
push
int3
fnsave
or
mov
loope
mov
adc
lea
ret
dec
movsb
leave
inc
imul
fisttpl
data16
adc
or
or
repz
push
xchg
insl
bound
fcoms
jg
jmp
mov
dec
loopne
xor
xor
mov
popa
inc
pushf
xchg
loope
inc
loopne
fs
lcall
and
insl
xchg
push
out
cmp
test
shll
popf
mov
mov
stos
into
sub
jb
fdivp
lods
mov
mov
mov
aaa
jno
dec
jg
cld
into
fstpl
xor
hlt
dec
sbb
pusha
mov
test
lret
mov
repnz
push
pop
pushf
push
scas
jb
addr16
loope
pop
xor
sub
imul
pop
mov
or
xor
mov
push
scas
dec
pop
mov
and
cli
mov
sub
mov
or
call
inc
and
rolb
loope
add
icebp
or
out
out
int3
xchg
gs
test
pop
lea
ficomps
add
or
jmp
fnstenv
imul
jge
mov
mov
mov
xorl
adc
dec
aaa
in
inc
loope
in
xchg
data16
rcrl
into
outsl
adc
dec
lret
inc
out
xchg
sahf
pop
pushf
loopne
dec
sbb
pop
test
clc
push
add
jbe
cld
mov
xchg
or
incb
call
jle
mov
jbe
mov
sarb
or
sti
in
jns
ja
mov
push
mov
popa
mov
aaa
or
mov
sub
sub
sub
push
add
test
mov
leave
stos
pop
cwtl
jge
inc
std
or
sbb
xor
sbb
jecxz
mov
shl
mov
loop
cmp
sbb
xchg
mov
pop
jl
inc
push
pop
and
enter
subl
outsb
add
mov
xchg
mov
icebp
inc
mov
bound
sub
push
pusha
jmp
xlat
fs
ret
je
lahf
shrd
sub
xor
xor
and
sub
lock
into
mov
std
and
or
ror
xor
inc
loop
and
mov
push
aas
adc
jb
pop
mov
adc
fs
adc
pop
push
cmp
or
or
addr16
cld
mov
test
cmpsl
adc
lods
sub
out
dec
decl
mov
mov
inc
sub
push
sbb
adc
sub
icebp
test
shrl
mov
aad
loop
hlt
mov
add
add
in
test
pop
gs
sbb
dec
data16
fldenv
jp
pop
jle
inc
or
fs
shrb
cmpsb
or
pusha
xor
gs
das
xor
jo
xchg
inc
lods
push
rol
int3
repz
inc
jno
push
dec
movsl
and
inc
scas
sbb
movsl
nop
inc
push
inc
cwtl
inc
mov
sti
pop
adc
inc
push
jmp
gs
xor
mov
xor
or
cmp
xchg
insb
in
jnp
mov
fimull
xor
loope
jbe
mov
out
iret
mov
add
repnz
in
cmp
push
mov
fsubrs
add
sbb
xchg
imul
mov
shll
prefetch
mov
in
sub
cld
push
pop
xchg
lahf
jge
jb
pop
push
dec
sub
aaa
push
pushf
ja
jbe
call
test
jp
jle
insb
lahf
inc
into
add
ret
mov
sub
dec
xorl
iret
iret
fimull
sub
aas
and
mov
jae
and
ret
xor
add
pop
sub
jno
cmp
lahf
adcl
jns
fwait
enter
das
mov
xchg
push
inc
mov
mov
iret
jns
pop
les
jmp
mov
in
cmp
jo
sub
add
mov
jl
sub
imul
mov
push
adc
leave
pushf
mov
int
fbstp
lret
inc
sbb
adc
push
ret
fdecstp
xchg
push
pop
sbb
insb
lock
shlb
jge
or
mov
xchg
negb
push
push
outsb
fldcw
lds
sahf
add
int3
out
pushf
jp
or
je
imul
dec
jb
or
shll
sub
adc
shrb
mov
and
push
or
inc
pop
clc
mov
jne
xchg
xchg
or
mov
sub
pop
ja
and
adc
rolb
add
jmp
repnz
lea
jmp
out
adc
dec
add
or
outsl
in
dec
data16
xor
adc
fwait
xor
mov
jge
xchg
in
sbb
repnz
cmp
sbb
mov
xor
add
int3
pop
ret
jmp
dec
push
fildl
hlt
daa
aam
scas
and
xchg
out
cmp
inc
jns
mov
loope
out
ret
inc
loope
mov
xor
pusha
scas
sub
or
fs
cld
rcl
aam
cmp
and
pop
push
outsl
mov
dec
add
or
sti
out
mov
inc
lahf
and
jb
mov
shll
enter
xchg
push
xor
shrl
inc
fmul
push
mov
push
inc
mov
jne
test
sarl
or
stos
cmp
and
adc
fdivs
mov
pop
shlb
xchg
cwtl
int
addr16
jg
mul
push
jl
mov
pop
and
orb
jae
addr16
inc
mov
sbb
ds
jb
xchg
les
dec
sub
aaa
dec
rcll
jae
sub
gs
xchg
xchg
rcl
jle
or
cli
inc
dec
sbbl
xchg
jne
cmc
in
mov
pop
cmp
xlat
rcll
call
push
and
jo
inc
lret
shrl
add
loope
sbb
xor
cmp
inc
ret
fwait
mov
stc
and
mov
pop
pop
xchg
pop
cltd
push
movsb
jae
mov
inc
xlat
fiaddl
negb
xlat
or
jmp
ret
push
mov
loopne
sahf
stos
jl
subl
push
rcr
ds
iret
cmp
into
into
and
test
aaa
sub
add
insl
mov
addr16
and
out
cmp
aas
mov
jb
jo
and
cmc
pusha
sbb
lock
mov
daa
dec
xchg
iret
push
lret
lcall
in
push
and
adcl
adc
mov
mov
rorb
push
pop
mov
loope
das
fcomp
sbb
xor
aas
sbb
stos
xchg
push
add
or
lods
int
push
enter
lret
lock
iret
push
jl
xchg
mov
sbb
aaa
pop
jb
jl
xor
mov
xchg
push
sbbl
out
and
fists
insl
lret
arpl
pop
push
lds
gs
cwtl
push
sub
ret
jg
test
sub
roll
pop
fsubr
add
xchg
imul
mov
adc
into
hlt
mov
cmp
and
sub
movsb
divb
jb
addr16
dec
add
adc
pop
jecxz
lds
nop
add
xchg
xchg
mov
int
xor
iret
stos
mov
out
popa
pop
movsb
xor
jo
and
ljmp
negb
push
pop
pusha
xor
arpl
ljmp
dec
jne
cmp
ja
jge
sub
in
jp
and
nop
fidivs
xor
insl
jno
sti
fs
pop
lods
fxch
fcompl
push
jae
in
out
and
ret
add
xor
addr16
or
mov
test
cltd
in
ret
mov
push
lock
mov
icebp
jge
push
sub
xor
pop
sti
mov
nop
insb
mov
mov
push
ret
xor
xlat
xchg
cmp
sarl
pusha
add
push
daa
arpl
int
repz
test
adc
mov
in
inc
push
cs
push
test
xchg
inc
xor
in
sub
es
popa
fld1
sub
xchg
adc
cmpsl
test
cmc
ja
test
sti
pop
in
fsubrl
mov
or
xchg
xchg
push
ret
mov
sbb
repnz
lock
push
mov
sarb
in
sub
in
pop
pop
adcb
jmp
add
mov
xlat
sarb
xchg
or
mov
add
into
lcall
in
mull
fldl
push
push
xor
add
mov
in
mov
pop
push
push
mov
pop
outsl
sbb
push
loope
add
stos
jg
arpl
mov
or
pop
sbb
ret
data16
arpl
xorb
xor
xchg
jg
insb
xchg
jb
jbe
and
insb
xor
leave
filds
jecxz
gs
mov
push
pusha
es
jno
ljmp
cmp
shr
xchg
cmp
pop
loop
hlt
dec
xchg
mov
leave
jns
ljmp
and
sub
test
sub
repz
lret
xchg
add
das
sub
mov
mov
pop
cmp
mov
pop
sbb
adc
xchg
or
sti
inc
add
lods
jecxz
add
sbb
cwtl
in
jae
dec
mov
loop
mov
repnz
dec
add
mov
xor
enter
leave
inc
cli
sti
pushf
cli
mov
add
inc
dec
add
test
push
mov
xchg
add
push
insl
movsb
cmpsb
das
adc
cmpsb
dec
cmc
hlt
mov
mov
inc
pop
mov
jp
or
dec
adc
adc
ljmp
dec
cmc
push
ret
inc
mov
inc
adc
sbb
adc
std
shlb
flds
push
icebp
mov
out
push
xchg
fsts
fldl
data16
fdivl
mov
fsubs
cli
outsb
bound
sbb
aad
push
adc
xchg
arpl
cmp
ficoml
mov
push
inc
push
or
cmp
in
push
dec
fisubrl
jns
mov
adc
dec
push
mov
test
pop
jne
imul
test
dec
imulb
push
dec
dec
mov
mov
or
mov
cmpsl
loopne
dec
dec
pop
mov
jo
xlat
mov
and
out
mov
pop
ds
flds
jb
lea
mov
fldl
movsl
add
aaa
loopne
dec
and
adc
mov
ret
bound
sbb
jb
add
add
loop
add
add
test
mov
mov
jb
jno
out
mov
xchg
pop
xchg
sbb
and
daa
mov
out
sbb
lds
lock
pusha
idivb
lcall
jae
dec
push
sbb
nop
out
or
inc
xchg
push
ss
stos
out
fists
inc
dec
mov
push
je
dec
aas
and
out
xchg
pop
repz
outsl
cmp
fs
lods
cmpsl
dec
cld
loope
xchg
mov
xchg
in
orb
adc
ja
test
out
mov
push
fcoml
repnz
fcompl
inc
mov
pop
daa
jns
inc
std
mov
mov
mov
mov
jns
inc
in
adc
enter
cmp
movsb
pop
jp
sbb
je
fwait
jae
rcr
loop
movsl
push
cld
inc
scas
das
and
pop
xchg
gs
jle
test
xor
inc
scas
pop
loope
jne
sub
stos
pop
jne
mov
and
inc
jnp
es
imul
cwtl
sbb
jg
fsubr
outsl
mov
sbb
jge
sbb
dec
cltd
push
out
cmp
notb
adc
mov
fwait
pop
gs
mov
stos
rcr
adc
pop
sbb
out
or
int3
test
lock
enter
jae
push
lods
push
scas
add
movb
xor
sbb
and
jae
fnstcw
scas
push
push
xlat
movsl
sub
or
rolb
in
testl
pop
addr16
stos
jo
xchg
push
pushf
and
pop
xor
mov
int3
repnz
xor
xor
jnp
les
cmc
dec
or
mov
mov
jecxz
repz
dec
sbb
je
in
add
inc
aas
pop
mov
cmp
adc
fucomip
push
enter
add
lock
xlat
popf
mov
cltd
xor
push
lahf
jle
adc
std
push
hlt
pop
loop
push
lods
sbb
in
add
sahf
pop
shlb
push
cmp
cs
test
rcrl
mov
test
sbb
cmpsb
rorl
cmp
scas
sub
pusha
fdiv
or
jecxz
push
or
mov
mov
daa
sti
push
cwtl
xchg
sbb
roll
inc
mov
fsubs
add
cmpsb
mov
dec
repnz
adc
mov
roll
jmp
pop
jb
and
int
fldl
xchg
sbb
mov
jl
sub
dec
fdiv
imul
cmc
fists
jle
in
mov
xor
popf
and
mov
mov
pop
cld
imul
sbb
cld
pop
add
mov
jle
pop
es
adc
inc
xchg
inc
mov
iret
push
mov
sti
cwtl
dec
mov
jecxz
xchg
push
les
scas
pop
mov
inc
mov
subl
repnz
and
mov
movsb
mov
mov
inc
mov
lcall
sub
leave
sahf
jl
inc
push
mov
push
mov
or
mov
xchg
pop
xchg
or
add
sar
cmpsb
popa
mov
pop
mov
mov
push
mov
arpl
sbb
pop
xchg
jb
xor
xor
xchg
push
repz
fdivl
pushf
pop
sbb
pop
lret
mov
orb
pop
pop
insl
adc
and
or
fcmove
js
sbb
inc
or
sti
nop
dec
mov
push
xor
nop
mov
add
leave
fists
lret
or
jnp,pn
rcll
sub
push
mov
mov
cs
xchg
xchg
inc
mov
pop
dec
icebp
clc
sub
or
mov
sub
fidivl
push
rcr
and
fnstsw
cmp
out
sub
ror
cltd
mov
test
icebp
lahf
nopl
addr16
aam
data16
cwtl
test
aaa
aad
lods
cmp
cmp
jmp
sti
in
add
jecxz
jle
int
pop
or
sbb
add
scas
lcall
daa
dec
sbb
pop
mov
xor
jae
movsb
add
sbb
inc
xchg
ficoml
mov
dec
inc
add
xor
pushf
mov
popa
push
sahf
cmpsl
rorb
xor
repnz
ds
push
dec
and
imul
push
aam
jne
cmp
mov
aaa
add
pop
aam
adc
popa
or
dec
aaa
cld
lock
je
jbe
repnz
fidivl
dec
jno
fiaddl
repnz
ficompl
jbe
jae
insl
loop
mov
or
imul
xlat
push
cmp
and
push
mov
sbb
div
cmpsl
xchg
test
lret
add
cmovns
scas
pop
lds
xchg
ds
pop
out
aaa
clc
mov
or
in
test
cld
add
rol
mov
hlt
imul
sub
pop
orb
sub
mov
mov
cmp
or
iret
lds
and
aad
mov
aas
out
and
cmpsb
insl
add
xchg
loope
lock
add
cmp
std
fidivrl
pop
pop
jmp
ljmp
jl
or
popa
xlat
xor
xchg
cs
pop
push
sbb
add
sbb
pop
jns
xlat
addb
xor
cmpsl
iret
shr
jae
loopne
outsl
scas
dec
int3
push
adc
rcll
out
mov
scas
xor
or
adc
sub
scas
lds
fs
ljmp
pop
insb
add
mov
int
loope
enter
push
sti
movq
test
cltd
dec
cs
ljmp
push
mov
lds
cmpsl
add
or
jmp
ss
or
lea
test
sub
and
xor
imull
sub
lods
repnz
xchg
push
inc
fbstp
adc
jnp
push
out
adc
mov
add
jge
adc
pop
aaa
adc
mov
faddl
test
iret
mov
pop
pop
jl
add
mov
lock
jne
and
andl
sbb
xchg
test
push
ret
xchg
lea
push
mov
jl
cmpsl
scas
jecxz
adc
dec
insb
pop
mov
test
dec
in
xor
or
xchg
mov
insl
subb
sbb
cmp
push
push
sub
mov
cwtl
adc
fnsave
repnz
mov
inc
push
jnp
and
stos
nop
in
arpl
cli
psubsb
imull
add
aaa
add
mov
icebp
mov
das
pop
adc
out
mov
cmp
cmp
mov
loope
jl
mov
fwait
aad
repz
pop
loop
xchg
dec
push
xchg
and
cmpsl
dec
dec
sarl
jne
mov
adc
add
push
add
push
cmp
xor
sar
dec
push
mov
iret
icebp
jmp
dec
mov
xor
mov
jno
ds
inc
push
ret
jo
xlat
or
xchg
inc
bound
mov
sbb
mov
or
out
cmp
push
popf
xor
inc
pop
mov
push
outsl
pop
int3
push
pop
jns
add
inc
dec
ja
inc
push
mov
and
sbb
add
inc
xor
mov
xlat
outsb
mov
add
fistps
nop
mov
inc
fdivr
and
test
mov
mov
pop
ret
add
cmp
push
outsl
mov
scas
stc
mov
ds
xchg
cwtl
push
and
addr16
nop
fwait
push
aaa
loop
out
pop
add
movsb
gs
push
loopne
pop
sbb
push
fwait
jo
push
rcll
int
xchg
push
imul
xor
pop
imul
mov
lcall
popa
and
aam
cmp
or
and
addr16
cmpsl
adc
mov
jnp
aad
mov
aad
enter
jae
pop
in
scas
jge
outsl
dec
xor
and
test
push
adc
add
pop
cmc
imul
pop
out
cli
rcll
mov
push
inc
dec
push
mov
mov
cmp
jmp
je
in
popf
pop
push
in
in
es
test
xor
mov
ja
je
daa
outsb
mov
jmp
xor
sub
aas
push
outsl
addr16
nop
iret
ja
sub
cwtl
inc
xchg
popa
add
xchg
int
cwtl
aaa
bound
icebp
dec
or
pushf
bound
mov
test
push
cltd
push
adc
loope
sbb
sar
sti
add
ret
pop
push
lods
inc
xor
stc
daa
repz
dec
adc
jle
je
mov
mov
and
lret
dec
sub
call
insb
int3
ffree
adc
scas
or
daa
int
gs
mov
inc
les
jmp
xchg
fcoml
sbb
jnp
xchg
add
xchg
push
cmp
fidivrs
mov
dec
stos
push
jl
notb
loopne
call
out
stos
push
iret
cmp
fstps
jp
out
rcl
and
mov
push
jl
mov
aaa
and
das
cs
subl
cmp
push
push
bound
jo
add
out
pop
xchg
push
push
int
xchg
in
push
ss
arpl
cwtl
in
fsubrs
hlt
inc
das
cmp
jmp
cltd
mov
dec
jo
push
loopne
jg
xor
jge
cmc
fisttpll
cmp
lods
dec
arpl
or
xchg
xor
adc
cltd
stos
jo
ja
arpl
push
or
mov
mov
js
mov
pushf
adc
inc
sbb
mov
cmc
in
sahf
push
test
imul
mov
xchg
outsl
xor
or
lahf
bound
call
fs
pop
inc
faddl
sbb
mov
repnz
jmp
dec
sahf
fwait
xchg
loopne
int
in
imul
dec
xor
and
test
fadds
or
in
clc
push
push
mov
pop
movsl
jns
jp
cmc
mov
add
out
sub
test
iret
sub
adc
dec
jno
data16
xorl
add
in
cmpsl
sbb
pop
sub
pusha
push
aaa
or
xor
dec
fsubrs
pop
adc
and
add
xor
jns
divl
mov
dec
jae
or
scas
rorl
and
aas
cmc
cs
adc
xchg
test
mov
fiadds
cwtl
mov
jecxz
aas
and
lcall
dec
pop
mov
out
arpl
enter
mov
dec
adc
lods
dec
stos
pop
pop
push
mov
jo
xchg
jne
adc
insl
shrl
mov
sub
lcall
lods
or
lret
loopne
push
push
fucomp
mov
sbb
cmp
psraw
outsl
popa
mov
dec
jge
test
inc
mov
movsb
cmp
stos
pop
inc
scas
mov
repz
lock
pushf
jnp
sub
sar
ljmp
in
lret
jp
and
pop
sub
or
add
mov
call
lods
inc
inc
ds
lahf
xchg
cmp
cmp
lahf
jb
cmp
cmc
js
test
push
leave
hlt
ja
gs
mov
jg
xchg
push
outsl
test
repnz
rolb
pop
mov
and
mov
mov
add
stos
cmp
addr16
sbb
push
sub
adc
rcr
dec
mov
adc
jae
xor
dec
add
push
ljmp
mov
ja
xchg
pop
popa
dec
mov
ret
loopne
cmp
and
stc
shl
movsb
aas
outsl
shll
cmp
xor
cmc
cmp
adc
sub
adc
pop
movsl
dec
mov
jg
lock
pop
cmp
cmc
adc
mov
clc
inc
push
jbe
js
and
push
notb
xchg
leave
int
xor
fcmovne
jne
stc
mov
inc
in
jno
mov
in
stc
sti
clc
or
call
mov
cmp
cli
in
loop
outsl
xchg
mov
adcl
lahf
call
fucompp
push
enter
sti
xor
gs
cltd
xor
clc
imul
sub
jne
mov
cmp
or
shlb
add
call
scas
lods
ret
or
lret
pop
lods
lods
clc
mov
sbb
push
clc
xor
popf
das
push
arpl
hlt
mov
mov
xchg
mov
popa
popf
icebp
cmp
jge
cld
and
mov
xchg
pushf
push
aad
ret
cmp
inc
mov
or
cmp
jl
push
sarl
insb
inc
scas
shr
bound
jg
out
hlt
cltd
fdivs
inc
mov
lds
mov
in
lods
mov
mov
dec
testb
cld
xchg
lods
jmp
inc
sub
adc
out
pop
stc
orl
test
in
clc
dec
leave
testl
xor
adc
cmpsb
jmp
mov
adc
cltd
add
rclb
lea
cmpsl
xor
jl
inc
mov
or
cmc
mov
push
outsb
aas
adc
xchg
xor
mov
aas
bound
inc
movsl
in
jbe
subl
mov
pop
movsl
aad
xchg
mov
cmpsl
aad
movsl
jg
mov
test
push
dec
dec
imul
clc
jp
add
pop
std
add
in
icebp
orb
and
and
shrl
dec
add
add
xor
mov
and
mov
xchg
lea
das
adc
ficompl
es
js
inc
daa
int
divb
stos
insb
pushf
stos
add
push
xor
adc
jecxz
ficomps
adc
xchg
add
inc
mov
arpl
pushf
jp
sub
xlat
mov
xchg
sbb
push
xchg
cld
pop
mov
pop
adc
push
cs
sub
add
and
nop
aam
mov
xor
shlb
or
xor
xchg
sbb
jmp
mov
pusha
dec
xchg
and
mov
cwtl
rcll
iret
jno
in
sub
leave
fcoml
ret
mov
mov
daa
dec
pushf
dec
lea
cmp
sbbb
push
pop
cs
cmp
mov
or
adc
aam
fwait
test
in
scas
lock
xchg
imul
test
stos
stos
dec
shrb
sub
or
mov
movsl
xor
dec
pushf
inc
in
xchg
call
xchg
aas
xor
stos
rcrb
aas
mov
sti
out
jge
out
pusha
sub
sahf
jns
cmpsb
inc
mov
sub
or
add
lret
jmp
pop
cmpsl
jno
adc
push
xchg
or
jae
popf
cmp
inc
scas
fistps
mov
ja
pop
popa
sub
mov
inc
cmp
jo
in
inc
idivb
sarb
add
outsb
mov
push
pop
mov
xchg
std
or
xchg
popf
scas
mov
jns
push
adc
mov
add
dec
popa
pop
pop
add
cmp
scas
fbstp
xor
testb
inc
mov
test
mov
pop
popa
call
mov
push
mov
jmp
dec
push
add
or
add
cwtl
xchg
sbb
lds
jno
sti
adc
push
ds
sbb
sub
aas
xor
shrl
call
lahf
int3
cmp
lahf
popa
in
cmp
dec
test
xchg
mov
inc
cmp
inc
bnd
sub
pop
dec
cmp
lods
lods
das
mov
mov
jae
mull
gs
add
cmp
mov
rcrl
aad
cmp
inc
xor
test
cli
and
sbb
cli
popa
cmpsl
pop
sub
sbb
mov
stc
mov
dec
outsl
mov
xchg
in
test
sahf
sarb
jmp
pushf
xor
int
dec
call
jecxz
outsb
cli
dec
fsubs
and
dec
popf
pop
dec
sbb
pusha
out
mov
xor
mov
sarb
popf
sbb
mov
jo
mov
mov
jmp
ljmp
pop
out
lods
add
jg
ret
aaa
shlb
in
dec
xor
nop
int
shll
scas
test
movsl
dec
fisttps
fucomip
push
xor
add
mov
stc
imul
ret
iret
dec
xor
out
or
clc
lock
xchg
mov
mov
fisttpl
lods
push
in
addr16
pop
movsl
push
xchg
fs
push
xor
lret
gs
dec
scas
rorl
addl
pushf
scas
inc
sarb
xor
pop
xchg
adc
mov
sbb
xchg
outsl
loopne
frndint
popf
int
iret
dec
cmpb
sub
xchg
adc
xlat
iret
push
bound
cwtl
outsb
adc
inc
into
ret
inc
mov
fs
adc
cmp
call
push
fs
fdivl
out
test
jnp
pop
cmp
arpl
cs
push
stos
adc
fcoms
sti
enter
push
mov
hlt
ret
repnz
jo
bound
dec
cmp
scas
adcb
nop
cmpsb
lret
lods
out
sub
rcr
mov
mov
mov
xchg
sub
xchg
mov
pop
and
and
aaa
sti
and
xchg
jnp
jge
add
cli
xchg
stc
mov
sbb
push
and
cmp
jb
mov
dec
mov
pop
pushf
ja
xchg
mov
xchg
imul
aam
inc
push
addr16
ret
arpl
outsb
fcomi
mov
mov
lds
push
hlt
mov
xchg
sbb
leave
adc
call
das
add
jne
xor
loope
adc
cmc
dec
xor
sbb
outsl
sbb
push
xorb
mov
mov
adc
out
hlt
stos
pop
loop
or
mov
movsb
dec
sti
push
imulb
inc
sbb
and
ret
sbb
push
push
fsubs
or
jb
xor
xchg
mov
nop
xchg
aad
mov
cmc
out
add
mov
daa
sbb
jle
add
call
mov
sti
mov
stc
inc
into
push
stos
aaa
into
inc
js
xchg
xor
stc
push
fsts
xchg
jns
dec
ja
repz
dec
shlb
out
je
pop
test
inc
aas
repnz
aaa
es
xchg
inc
ffreep
push
mov
mov
mov
sahf
shll
std
pop
fcoml
and
dec
cmp
int3
jp
add
rcr
and
sbb
adc
mov
cmpsb
clts
bnd
out
sub
and
lret
xchg
add
fwait
jbe
xchg
inc
popf
outsl
mov
sbb
pusha
and
adc
cs
pop
fisttpl
or
jb
mov
in
dec
pop
push
pop
or
dec
sub
cmp
mov
call
mov
sbb
jg
nop
nop
inc
mov
mov
jge
mov
fcmovb
imul
or
jl
xor
test
adc
out
data16
mov
out
cmp
sbb
and
sub
mov
pop
shlb
jge
lods
je
sahf
lock
shlb
imul
aaa
dec
inc
dec
mov
das
cmp
sbb
testl
adc
inc
xchg
xor
js
and
es
xchg
lcall
and
inc
pop
mov
movsb
negb
fstl
adc
cltd
out
mov
dec
testl
es
xchg
movsl
test
cwtl
mov
lods
out
sub
push
loop
cli
adc
fdivr
fisubrs
sti
pop
xor
ljmp
adc
cmpsl
out
inc
stc
test
inc
icebp
fs
sti
lods
xchg
push
sti
lods
pop
rclb
jnp
cmp
adc
sbb
fistpl
add
ljmp
dec
aam
enter
je
xor
sbb
push
ja
dec
pop
repz
add
pop
loopne
mov
mov
cmp
ret
negb
push
lea
push
enter
add
jb
sub
sub
push
xchg
imul
lahf
test
aad
addr16
data16
neg
mov
sub
clc
in
sahf
adc
in
mov
push
pop
rclb
mov
sub
mov
sub
mov
add
in
stc
gs
cld
les
jno
push
push
mov
fstpt
shl
fs
repnz
call
insb
add
jmp
cmp
aaa
in
mov
fsubrp
cmp
mov
sub
mov
xorl
mov
rolb
cmp
sahf
les
jno
jge
shlb
adc
inc
mov
int3
int
lret
mov
imul
pop
push
push
inc
sbb
jecxz
mov
mov
iret
push
cmpsb
andl
dec
fcomp
aaa
test
add
fdivrl
xor
inc
cmc
std
pushw
mov
ret
add
enter
mov
or
mov
movsb
jb
repz
xor
inc
adcl
pop
sti
jmp
scas
add
inc
pop
dec
pop
out
movsl
ja
subl
bound
scas
and
sub
je
int3
sahf
shll
or
mov
jbe
cmp
pusha
pop
rol
es
test
adc
sub
and
and
pop
fidivs
lret
pop
test
icebp
push
lret
sub
jmp
lods
jbe
aam
aas
cld
sub
aad
jnp
sbb
mov
sub
fwait
xchg
jle
and
and
sub
pop
fiaddl
lret
xor
insb
xchg
cmc
mov
mov
test
orl
out
push
push
mov
xor
dec
mov
mov
clc
arpl
test
pop
das
scas
cli
jne
insl
sub
or
jb
sbb
icebp
jge
es
cmp
jno
or
dec
mov
push
outsb
lods
out
fistps
mov
testl
push
out
in
nop
add
mov
add
pushf
jle
sbb
pop
pop
xor
in
sbb
jbe
mov
mov
icebp
cmp
sbb
stos
aam
push
mov
jg
pop
lahf
mov
push
mov
cmp
jg
pop
cmp
and
sub
sub
clc
cmpb
jne
cmpsl
das
push
sub
sub
fs
stos
stos
rclb
aam
xlat
push
test
lds
mov
daa
jae
add
adc
mov
adc
mov
cmp
aas
xlat
sub
mov
xchg
loopne
dec
hlt
loope,pt
adc
xchg
lock
fsubl
fcomps
enter
fwait
ret
mov
lcall
ja
adc
push
lods
sub
or
cmp
mov
mov
mov
xchg
subb
insl
add
cltd
jb
jecxz
pop
or
jbe
pop
bound
rcrl
mov
adc
ss
stos
cmpb
idivl
repz
mov
cmp
mov
insb
loop
loop
jno
jg
jl
fidivs
pop
cmp
jns
dec
out
insl
jmp
xor
sbb
mov
xor
dec
dec
sub
aam
out
mov
inc
and
add
icebp
fsubs
adc
and
push
pop
xor
pop
xor
out
aas
pushf
dec
and
in
push
and
cli
push
push
inc
mov
pop
ret
xlat
daa
adc
xchg
pushf
dec
mov
pop
xchg
pop
mov
rol
xor
xchg
xchg
and
rclb
jb
mov
jno
cmpsb
mov
pusha
mov
or
xchg
and
out
icebp
xchg
jmp
jle
add
cs
jb
sarb
fildl
rorb
pop
add
add
inc
mov
lods
dec
jno
sbb
xor
pop
lds
or
shlb
cmc
add
int
pop
push
pop
push
repz
ss
or
out
lock
pop
movsb
aad
movsb
inc
pop
xchg
xor
sbb
push
adc
pop
adc
mov
rcrl
test
push
shlb
and
inc
decb
xchg
lahf
shrb
pop
call
xchg
cld
fdivs
mov
push
out
je
mov
pop
popf
sbb
aaa
adc
fisttps
mov
or
ret
push
adc
xchg
and
push
or
cwtl
ret
movsl
and
fs
les
sub
mov
xchg
fldl
dec
loop
daa
cwtl
nop
pusha
and
das
popf
sbb
fldcw
and
mov
js
mov
ficompl
push
gs
fisubl
dec
sarl
lds
std
outsb
out
pop
push
int3
xor
pop
pop
mov
xchg
adc
icebp
add
mov
out
js
sbb
aam
push
xor
std
adc
sbb
pop
repz
stc
fcomi
add
in
outsb
call
dec
cwtl
and
fdivl
test
jmp
repz
cwtl
dec
dec
in
std
adc
jnp
adc
jno
cmc
adc
dec
xchg
dec
aas
xchg
mov
cmc
inc
or
in
jle
jno
xchg
aaa
cltd
mov
add
test
call
aas
fidivl
mov
xor
in
mov
pop
mov
mov
ljmp
subb
aam
rclb
pushf
jnp
xchg
jns
rorb
or
roll
adc
lods
mov
out
sub
or
xchg
ja
jae
mov
iret
inc
lret
fnstenv
bound
call
inc
inc
ret
dec
lcall
clc
jge
cmp
imul
mov
mov
cli
mov
push
mov
int
xlat
mov
test
ljmp
in
mov
pop
xor
test
dec
imul
dec
call
fwait
xor
xchg
xor
mov
in
adc
xor
mov
push
pusha
es
mov
adc
add
sbb
lret
mov
cmpsb
ljmp
jmp
daa
adc
jbe
or
pop
inc
xchg
cmpsl
inc
mov
stc
or
xchg
mov
inc
in
stc
jg
ret
shlb
test
movsb
or
repz
mov
pop
mov
enter
insb
jne
fisttpl
jo
xchg
cmp
or
loope
push
inc
pop
jno
cmpsb
repz
or
sub
jg
xchg
enter
jns
jle
lods
or
pusha
mov
xchg
cmp
push
dec
xchg
adc
fsubrl
xchg
mov
or
jl
and
cmp
mov
mov
push
rcll
adc
fsubrs
pop
mov
cmp
test
cmp
in
and
leave
stos
jg,pt
cli
in
mov
test
mov
dec
dec
cwtl
mov
movsl
adcl
inc
pop
in
cwtl
call
push
xchg
sbb
ljmp
mov
lcall
adc
bound
mov
int
cmpsb
nop
adc
mov
and
inc
lret
aas
jle
mov
aas
clc
mov
add
cmp
mov
mov
gs
lods
push
sbb
inc
pop
xor
mov
stos
scas
test
stos
mov
lds
lret
mov
jae
sbb
jecxz
test
mov
imul
push
roll
mov
mov
sub
pop
mov
sbb
popa
imul
stc
int
fcompl
in
pop
int
pop
add
sbb
xor
dec
das
mov
cwtl
mov
dec
lret
out
shll
mov
clc
ror
cmp
mov
xor
cmp
jnp
sarl
mov
xor
subb
xchg
mov
cmp
xlat
dec
sahf
push
and
inc
xchg
notl
gs
scas
push
mov
and
gs
jb
and
xor
push
cmp
or
sahf
lock
fwait
push
jge
fsubrs
mov
ljmp
add
sbb
ret
aaa
ret
in
xor
fldenv
mov
push
push
cmp
sub
pop
dec
mov
ret
bound
mov
inc
jecxz
pop
enter
mov
rcrl
into
pop
imul
adc
mov
pusha
stos
test
xor
lcall
ret
popa
repnz
cmp
insl
gs
dec
popa
hlt
movsb
mov
jg
push
sti
jno
inc
jbe
cwtl
outsb
fs
popa
mov
scas
inc
pusha
movsl
mov
push
pop
data16
jnp
or
add
out
mov
fisttps
mov
push
loopne
pop
push
jg
mov
jns,pn
ret
nop
lahf
gs
stos
and
in
das
sub
push
in
and
aaa
cmp
push
pop
fsub
add
inc
scas
jmp
inc
and
loop
jne
icebp
mov
loopne
xchg
add
das
aas
push
fs
lock
add
fucom
sbb
mov
clc
mov
rcrl
ds
fwait
call
mov
popf
sbb
enter
clc
inc
pop
hlt
in
imul
mov
lahf
push
mov
ljmp
mov
addb
ss
sub
inc
push
and
lahf
not
loop
ss
dec
adc
loope
je
mov
stos
push
movsl
add
sub
ja
or
jp
pusha
lods
pop
lea
std
sub
xchg
jb
add
fdivl
sbb
add
lret
mov
pop
mov
outsl
mov
or
mov
mov
lock
mov
in
mov
sbb
icebp
adc
daa
jae
ds
rolb
lret
int3
les
stc
cli
mov
jge
daa
pusha
inc
fnstsw
and
lods
inc
pop
data16
into
pop
aad
movsb
orb
imul
mov
ljmp
mov
cltd
ffree
jns
fstps
jno
cmc
jno
mov
sbbb
pusha
cmp
sahf
int3
test
cltd
aad
arpl
repnz
mov
dec
daa
push
out
enter
js
test
loop
out
sti
insl
cmc
or
jmp
add
adc
mov
sbbb
jae
fdivrl
cmp
subl
gs
jp
imul
rolb
insb
sbb
pop
out
sbb
or
pop
xor
sub
adc
dec
mov
xchg
in
xor
sbb
jb
in
xor
sti
mov
lret
push
cli
xchg
dec
in
xchg
xor
xchg
or
dec
xor
repnz
icebp
loop
push
not
push
inc
popa
and
pop
lahf
sbb
sahf
daa
test
clc
sub
mov
addr16
jae
pop
dec
sti
rcll
rcr
xor
test
lret
xor
sub
js
addb
addr16
sub
das
push
out
call
ret
stc
fs
push
cmc
aas
lock
adc
pop
fists
jno
stos
jns
dec
bound
test
pop
sub
mov
aad
and
cmp
or
adc
icebp
rorb
mov
lret
outsl
xchg
add
push
push
jae
ret
leave
adc
movsb
pop
mov
mov
mov
and
push
xor
adc
push
mov
sarl
inc
jns
ljmp
faddl
xor
insl
ret
cltd
in
add
enter
rclb
inc
jmp
repz
sbb
jp
mov
push
jb
movsb
mov
cmp
enter
js
repnz
add
xor
rclb
mull
pop
test
inc
sub
arpl
loop
cmp
jno
psrlw
mov
add
sbb
push
ss
mov
test
xor
in
pushf
daa
mov
push
addb
aas
mov
adc
jbe
lret
imul
xchg
push
add
mov
lret
sti
xor
sti
inc
mov
xchg
popa
sbb
dec
push
subl
mov
dec
push
nop
push
dec
testb
ja
adc
sarl
xchg
adc
and
call
sbb
nop
inc
aad
shrl
push
xchg
int
dec
ds
sahf
int
hlt
push
mov
jnp
mov
cwtl
jge
outsb
xchg
iret
daa
cwtl
add
jnp
outsb
mov
dec
add
push
xchg
pop
or
lcall
push
ret
hlt
mov
movsl
jmp
push
adc
les
push
std
movsl
jns
xchg
enter
push
insl
cmp
lahf
dec
pop
push
sbb
mov
sub
mov
mov
addr16
cmpsl
dec
cmpsl
outsl
xor
test
cltd
jne
daa
sub
repz
inc
jecxz
lods
hlt
cli
bound
fwait
push
sub
filds
xchg
daa
popa
das
mov
push
and
mov
fimull
xlat
divl
push
lods
cltd
lods
add
outsb
addr16
loope
mov
pop
pop
and
lock
pop
lgs
hlt
mov
cmc
ljmp
jl
cmp
push
sub
loop
and
xchg
push
js
xor
movd
fld
mov
nop
in
incb
push
ds
out
inc
gs
repnz
cmpsl
push
or
mov
add
sub
scas
jmp
jge
loopne
sbb
push
add
push
aas
dec
testl
mov
xchg
popf
cmpsl
jle
xchg
sahf
pop
lods
aaa
aam
add
mov
jae
call
mov
or
testl
mov
jbe
mov
sub
insb
scas
mov
or
lret
dec
dec
xchg
and
adc
stos
push
imul
pop
or
pusha
inc
cs
int3
xchg
mov
in
push
sbb
mov
std
mov
adc
into
ret
adc
loopne
ret
or
and
arpl
shrb
add
adc
addr16
mov
xor
mov
fnsave
movsb
into
test
or
sti
popa
rol
ret
hlt
or
sub
sbb
out
mov
mov
inc
push
mov
sub
clc
mov
cli
mov
in
lods
sbbb
sub
outsb
fwait
or
shl
nop
in
not
dec
movsb
add
cmc
jae
mov
bound
repnz
sub
sub
push
in
mov
lods
outsb
push
jmp
sub
ss
xchg
pop
mov
sbb
ficoms
movsb
push
mov
dec
fwait
pop
add
div
push
adc
push
mov
dec
pop
imul
fwait
rol
sub
adc
ljmp
push
iret
push
push
ja
dec
je
pusha
push
sbb
adc
jmp
add
mov
negb
scas
es
sub
xchg
pop
sbb
mov
in
fistpl
adc
aas
or
mov
jl
ds
dec
adc
pop
cmp
and
hlt
inc
jno
adc
mov
push
enter
test
dec
fwait
xchg
shll
jl
dec
mov
or
mov
popf
jp
mov
movsl
rcrl
xlat
push
popf
test
or
dec
sbb
in
or
and
cmc
xchg
movsb
xchg
push
les
cli
push
dec
les
add
cmp
loope
fs
cmpsl
xchg
xor
hlt
ret
out
mov
sbb
or
cmp
mov
test
or
cmp
loope
loop
mov
jbe
into
sub
data16
lahf
or
jle
cmpsb
cmc
sbb
inc
dec
sub
and
mov
out
lret
xor
ljmp
inc
gs
pop
ret
shlb
dec
cs
cwtl
lcall
inc
and
inc
jno
int3
lahf
and
lret
pop
lock
les
loope
aaa
scas
std
call
lods
sti
xor
mov
es
addr16
clc
divb
fcomps
addr16
stc
xor
gs
mov
rorl
xor
mov
sub
int3
or
popf
out
adc
sub
mov
mov
imul
pop
out
les
adc
or
xor
das
push
jo
imul
xchg
xor
and
jnp
ror
mov
aam
lcall
jmp
cld
shl
shl
xchg
push
fldcw
xchg
mov
dec
cmpsb
jne
jae
pop
into
mov
cwtl
jge
ret
lock
fldl
addb
mov
sbb
into
es
xchg
cmp
jmp
and
orb
out
pusha
loope
mov
repnz
sbb
lods
push
sub
cmp
adc
xchg
mov
adc
bound
mov
fcoms
jl
div
pop
or
add
pop
fldl
xlat
int
push
insb
ljmp
add
push
mov
jno
mov
ja
sub
cmp
lds
ret
pop
repnz
dec
insb
mov
cwtl
mov
mov
aas
mov
aas
xchg
loop
mov
lahf
jmp
pop
ret
adc
repnz
movsl
popf
cmc
inc
mov
test
sahf
jl
hlt
ljmp
mov
push
mov
xor
push
call
outsb
lret
add
jne
lods
lret
dec
lock
xchg
lods
test
xchg
les
pusha
xor
mov
and
pusha
jg
dec
push
arpl
das
out
cmp
push
fmul
fs
mov
repnz
mov
push
mov
pushf
fs
loop
lret
arpl
pop
jl
lods
ret
leave
sahf
bound
outsb
stos
jl
ja
adc
cmp
shl
repnz
push
pop
les
jg
xor
push
cmp
gs
jbe
pusha
push
dec
xor
les
inc
in
mov
icebp
or
popa
sbb
stos
shrb
push
loopne
ret
dec
nop
test
sbb
mov
ds
loop
push
outsb
sbbb
sbb
inc
adc
inc
push
cmp
and
jp
cmp
in
aad
std
inc
addr16
mov
xchg
inc
lret
into
add
in
sub
rcr
orb
adc
cmp
pop
push
xchg
clc
mov
cmp
fs
ss
popf
sbb
ds
in
sub
fstps
test
imul
push
lea
mov
dec
jecxz
jmp
mov
inc
call
out
shrl
fsubs
fwait
mov
cli
js
stc
adc
add
aam
pop
enter
test
dec
mov
cltd
loop
mov
popf
xor
sub
sub
adc
or
cmc
jmp
lea
mov
pop
leave
std
dec
fdivrl
cwtl
loope
cmp
add
fbstp
push
fcomps
jmp
cmpsl
test
xchg
into
in
sbb
movsb
xchg
jp
mov
pop
jns
mov
pop
xchg
xor
mov
cwtl
loop
add
inc
rep
mov
dec
mov
mov
sbb
jae
inc
orl
xchg
fsubp
roll
mov
dec
and
aaa
pop
dec
cmp
or
cmp
push
push
pop
movsl
rcll
adc
scas
sbb
push
sub
push
test
sub
xlat
and
sbb
in
repz
ret
or
stos
pop
sub
mov
add
add
lretw
sub
mov
pusha
std
mov
movsl
js
inc
movsl
das
mov
xor
xchg
xchg
sub
adc
cmp
and
mulb
pop
clc
dec
mov
ljmp
pop
hlt
push
sbb
dec
sub
ja
insl
or
notl
push
sub
pop
decb
sub
cmp
sbb
fildl
fwait
outsl
sbb
inc
test
mov
test
data16
fstl
and
sbb
mov
push
xchg
push
pop
rorl
lds
or
mov
hlt
cli
mov
xor
pop
shrb
sub
sbb
adc
fcmovu
arpl
pop
stos
and
jns
mov
pop
add
and
ds
push
inc
jp
adc
subb
sbbb
mov
enter
roll
mov
add
pop
jno
dec
in
inc
scas
cmpsb
dec
fidivl
test
xchg
mov
push
xchg
push
push
mov
xor
fcmove
dec
les
xor
sahf
xchg
mov
xchg
iret
mov
dec
int
and
dec
insb
inc
mov
aam
sub
loopne
push
jmp
ror
cmpsb
sbb
sub
mov
test
cmp
hlt
jns
cmp
dec
adc
lret
and
mov
adc
loopne
jne
xchg
pop
inc
fstl
ret
xchg
add
adc
insl
cmpsb
mov
lea
pop
clc
leave
pop
inc
mov
fildll
mov
pop
popf
les
pop
jbe
sub
pop
dec
mov
mov
cld
cwtl
mov
loopne
stc
cli
jecxz
hlt
stos
sub
mov
das
lds
mov
push
xchg
mov
mov
ret
or
or
mov
nop
mov
lahf
jle
lea
dec
mov
insb
adc
pop
mov
enter
insb
nop
sbb
in
xchg
jmp
mov
ret
iret
mov
ret
int3
xlat
dec
ret
sbb
test
sahf
mov
dec
xor
sub
aas
movsb
ss
mov
clc
jle
lds
push
dec
sbb
imul
push
sub
and
push
in
mov
jmp
jnp
xor
notl
sub
inc
xor
mov
inc
pop
mov
fsubrs
adc
jns
inc
pop
jno
pop
cmp
xor
pop
jbe
push
pusha
sub
jmp
lcall
cmp
add
les
mov
pop
add
or
push
clc
scas
lahf
lcall
test
xchg
push
shlb
inc
lds
inc
xchg
aam
inc
lret
sahf
aaa
jnp
dec
daa
mov
scas
mov
fs
mov
or
mov
mov
pop
or
push
shll
xor
add
xor
xor
mov
push
in
ret
jns
mov
add
push
cld
lea
dec
mov
pop
imul
push
test
jbe
sti
dec
push
pop
and
ljmp
dec
xchg
cmp
push
daa
add
jl
xor
es
add
push
cmpb
sub
xchg
add
push
mov
and
cmp
sbb
adc
xor
mov
addb
pop
and
and
inc
mov
test
aas
addr16
inc
xchg
add
sbb
movsb
lret
lahf
das
xor
out
scas
xor
mov
int3
das
decb
mov
and
fwait
aaa
or
leave
sbb
cmp
lods
lret
adc
pop
adc
int
cmp
aad
in
js
add
rolb
jb
inc
rcll
and
xchg
fldcw
pop
mov
add
lods
aaa
icebp
ja
dec
arpl
mov
cmpsb
cmpsb
les
popf
cmp
jp
pop
into
push
imul
fucomp
inc
imul
push
rep
cmc
jne
lcall
rcll
pop
mov
testl
cmp
xlat
fildll
ror
notb
stos
xchg
scas
push
push
cmp
loopne
xor
jge
mov
rcr
fisttps
test
mov
jbe
cmc
jns
scas
cli
mov
cld
add
lds
sub
in
hlt
scas
jbe
lret
call
addb
cmpsb
mov
iret
jmp
mov
and
jp
sbb
push
lcall
ret
repz
lahf
pop
jge
ret
call
scas
les
das
adc
imul
mov
xor
and
xchg
loop
adc
stc
fsubrl
xor
mov
in
cmp
ljmp
inc
imul
jb
pop
fimuls
je
fldt
push
xor
mov
xchg
cld
dec
push
sub
pop
cmp
sbb
dec
pop
mov
fidivs
fcoms
mov
xchg
imul
lahf
aad
int
push
cmp
xchg
or
stos
leave
loope
out
mov
lahf
sti
rcl
ja
dec
andl
sbb
jg
cltd
icebp
mov
inc
pop
and
sbb
adc
and
inc
aaa
imul
cs
push
adc
jle
mov
in
dec
mov
inc
aaa
and
xchg
pop
xchg
mov
add
in
pop
enter
dec
arpl
or
loop
sub
mov
iret
popa
jb
sub
addr16
cltd
add
lret
dec
xchg
popf
or
xchg
dec
andb
xchg
addr16
rolw
inc
mov
imull
in
jecxz
mov
add
xor
dec
aad
add
iret
aas
rcrb
jns
mov
sar
inc
adc
call
xchg
jo
mov
arpl
movsb
pop
jae
jbe
icebp
mov
cmp
call
leave
sbb
pop
sbb
xchg
xor
sahf
arpl
repnz
stc
push
aas
xchg
add
inc
mov
inc
aam
inc
inc
xorb
int3
std
xor
das
jb
fdivrp
cmp
icebp
jmp
mov
dec
lods
ret
sbb
bound
inc
and
xor
mov
fists
sbb
cmpsb
mov
or
in
xchg
outsl
lcall
mov
xchg
xor
scas
sbb
sbb
jecxz
les
inc
pop
leave
scas
xor
lret
fdivl
repnz
js
sbb
xor
fs
and
and
repz
push
cmpl
repnz
xchg
dec
xor
add
xchg
lret
rorb
sahf
sbb
loopne
jge
push
xor
cmp
sub
inc
sbb
inc
or
xchg
or
mov
mov
dec
jbe
addr16
aaa
push
gs
xor
scas
dec
lret
lret
jg
js
sub
pop
jae
dec
mov
xchg
push
jmp
outsl
and
les
mov
or
test
or
arpl
pop
adc
pop
stc
movsb
out
jo
and
add
ret
or
in
push
inc
mov
rclb
leave
sbb
xchg
fiadds
pop
pop
test
pop
xorl
or
add
bnd
pop
sahf
cmpsb
arpl
mov
mov
lds
pop
fs
mov
inc
iret
pop
mov
adc
mov
cmp
sti
xchg
pop
test
loop
mov
flds
jb
pop
fistps
and
mov
test
ret
mov
sbb
pop
das
mov
sbb
dec
cli
mov
mov
std
mov
add
push
add
out
inc
push
sbb
cwtl
adc
or
in
popf
fistps
sub
and
inc
dec
xor
xor
pop
jg
aad
xor
nop
repz
shl
add
inc
bound
push
or
pop
lock
cmc
sti
inc
scas
lret
or
daa
or
ret
fwait
pop
lret
push
outsb
sub
paddb
pop
adc
xor
xchg
cmp
iret
push
stos
or
dec
pop
jae
cli
lahf
cmp
pop
mov
imulb
adc
test
cmpsb
mov
add
lret
iret
push
push
sub
push
in
out
insb
mov
or
stos
xchg
mov
ja
or
jmp
test
hlt
push
mov
into
or
pop
popa
dec
xchg
rcl
loope
ret
outsb
enter
testl
neg
inc
scas
jae
dec
sbb
into
scas
es
mov
inc
outsl
mov
jns
nop
push
outsb
mov
cld
lahf
cmp
dec
sub
mov
xor
dec
cmpsl
cltd
not
out
and
ficomps
popf
adc
les
jle
data16
xor
mov
add
js
fildll
mov
add
adc
pop
and
adc
js
dec
pop
out
lds
aam
bound
adc
les
add
xor
mov
or
or
xchg
mov
cltd
xchg
or
les
xchg
jb
ss
lret
js
cltd
sahf
cmc
dec
ficoml
fidivs
sbb
push
or
add
jp
bound
gs
pop
cmp
lea
mov
xchg
sti
sub
pop
sti
jns
dec
cmp
pop
in
push
and
lret
xor
aaa
fsts
dec
dec
mov
cmp
xchg
push
xor
outsl
push
scas
sbb
pop
gs
xchg
mov
dec
or
movsl
rcrb
test
dec
or
mov
idivl
mov
or
lods
inc
sbb
popf
add
mov
outsl
dec
or
cwtl
push
inc
les
push
jae
mov
data16
or
pop
sbb
push
jbe
hlt
fsub
cld
dec
enter
dec
inc
pop
icebp
imul
inc
test
mov
es
xor
pop
nop
inc
xor
inc
dec
popf
fidivrl
fbld
mov
sbb
xchg
push
pusha
imul
push
mov
das
jae
push
ret
or
lret
add
jp
mov
mov
or
push
loopne
adc
mov
pop
push
cmpsl
pop
gs
jo
xchg
es
xor
loop
push
pop
cmpsb
pop
outsl
clc
lea
sub
xor
cltd
aaa
fdivrl
stos
fmul
arpl
xlat
scas
pushf
fcmovnb
jle
sub
out
pop
jne
xchg
int3
arpl
lds
pusha
mov
or
and
shrl
mov
push
xor
lea
jne
pop
iret
push
add
adc
xchg
mov
stc
aad
mov
mov
mov
fcomps
cmpsb
xor
mov
sbb
sbb
icebp
scas
push
in
push
mov
repz
call
insb
mov
xor
push
push
lods
lds
out
pop
mov
cmp
sub
xlat
push
mov
xor
xchg
mov
mov
sbb
shll
push
dec
mov
pop
mov
rolb
xchg
mov
push
iret
jecxz
xchg
jp
push
mov
jl
sbb
je
mov
mov
int
sbbb
jae
dec
les
mov
fldl
sbb
push
repnz
push
add
dec
mov
add
sti
sbb
mov
lds
scas
je
and
jmp
push
daa
outsb
push
mov
fisubrl
rcrb
push
mov
in
pop
popa
in
push
fnsave
jl
data16
jl
mov
cltd
stos
jnp
leave
mov
mov
insb
shlb
xchg
cwtl
mov
mov
lds
dec
pop
addr16
jle
out
mov
roll
and
outsl
inc
stc
imul
imul
dec
pushf
sub
fldl
movsb
arpl
sub
inc
cmc
add
fidivrl
push
insb
dec
xchg
inc
push
out
sbb
outsb
mov
xor
fistps
jl
cmp
lahf
push
xchg
hlt
cwtl
cmpl
xor
jl
push
and
jle
dec
lret
dec
popf
cmc
sti
in
cmpb
adc
add
cmp
add
notb
in
sahf
push
movsl
call
fcom
jns
or
mov
outsl
ss
insb
rcr
and
dec
inc
loop
mov
negl
jle
push
sbb
inc
repnz
xor
xor
inc
ljmp
rcl
testl
cmp
je
test
ret
sbb
mov
cmp
xchg
jl
push
mov
xor
xchg
pop
mov
dec
xor
xchg
pushf
pop
mov
push
dec
inc
lahf
sbb
pop
movsl
jae
jo
jle
mov
jbe
aas
cmp
pop
scas
notb
xor
mov
cmp
inc
in
test
cmpsb
push
cltd
sub
bound
daa
push
push
in
add
dec
incb
push
add
loopne
fsubr
stos
mov
lret
sahf
cltd
jbe
push
sbb
lret
popa
xlat
jbe
xchg
xor
adc
rcrl
hlt
clc
popa
jg
insl
and
mov
jnp
and
sti
push
mov
out
pop
add
sahf
imul
ret
mov
loopne
or
and
adc
les
fsts
ffreep
dec
mov
and
sbb
cmp
and
adc
and
stos
imul
test
inc
jmp
mov
add
bound
dec
lock
or
dec
sbb
xchg
mov
rcr
shlb
mov
lcall
lcall
add
popf
movsb
mov
mov
ljmp
call
jo
negl
cmpsl
das
lods
js
add
mov
faddl
ret
mov
push
xor
enter
jnp
fsubs
mov
mov
and
and
sbb
cwtl
jo
aam
sbb
xchg
test
pop
sbb
fs
dec
push
mov
sub
mov
xchg
push
inc
push
jmp
mov
fimuls
mov
shlb
scas
sti
std
adc
lret
inc
sbb
nop
jecxz
lcall
mov
mov
aad
push
push
jns
mov
sbb
out
pop
leave
sbb
add
mov
ds
dec
sub
jno
mov
iret
push
pop
adc
jnp
mov
dec
fs
scas
mov
xchg
shrb
imul
loop
shl
mov
dec
mov
lret
xchg
imul
jecxz
nop
jns
sub
outsl
jbe
cmp
cli
cmp
add
pusha
mov
das
or
push
dec
mov
mov
outsb
aaa
xchg
cmp
dec
aas
cmp
fiadds
lcall
mov
les
pushf
pop
daa
pop
pop
mov
adc
into
adc
js
rcrb
mov
add
iret
push
movsb
pop
adc
dec
pop
push
imul
sub
pop
jmp
rorl
xor
adc
fs
sahf
jg
repnz
pop
fsubp
pop
mov
jnp
fs
fisubrs
mov
mov
lea
nop
addr16
jge
das
sti
xor
add
out
xchg
out
xor
jne
cmp
int3
adcl
inc
add
imul
out
test
jno
mov
lahf
int
jno
adc
outsb
adc
cmpsl
mov
jmp
sbb
fwait
push
out
inc
icebp
rorl
push
lea
mov
xchg
lods
in
into
inc
mov
fisubs
insb
xor
adc
xor
sbb
sub
sar
notl
jb
jle
bswap
ds
leave
sbb
and
and
cmp
pop
or
mov
jg
shl
aaa
push
out
and
xchg
mov
sbb
mov
stc
sbb
lock
std
xor
lcall
mov
mov
fnstenv
mov
and
data16
push
xor
sub
les
arpl
cmc
and
fnsave
dec
loopne
scas
sub
pop
sbb
push
fimuls
cmc
cmpsl
fisubs
and
movsb
pushf
decl
test
fucompp
mov
es
out
lock
lcall
fldenv
mov
std
mov
push
lds
das
les
imul
or
dec
sub
sti
and
sub
push
std
gs
jmp
movsl
out
jle
push
adc
rol
imul
or
pop
inc
pop
mov
xorl
xchg
scas
pushf
test
mov
dec
add
shl
dec
push
insb
jl
or
sub
clc
xor
push
aaa
mov
imul
sbb
add
stc
lods
inc
aam
stos
loop
dec
outsb
mov
les
mov
adc
mov
sbb
rol
push
jnp
dec
les
aas
sbb
push
mov
movsb
shrl
and
es
movsb
aas
xchg
mov
adc
into
jle
shll
sub
sub
push
loope
jl
fisubrs
mov
dec
aad
aam
call
cmp
xor
dec
scas
add
cmp
dec
int
push
push
idiv
iret
and
adc
pop
dec
std
das
rcl
daa
mov
dec
dec
and
push
sbb
xorl
mov
inc
mov
pop
dec
mov
mov
cmp
xchg
mov
cmpsb
mov
dec
xchg
xchg
fwait
stos
mov
and
mov
pop
mov
gs
imul
add
sub
js
mov
in
jp
test
dec
stos
mov
bound
mov
rcr
pop
daa
ss
jge
jo
stos
jns
ret
mov
jns
xchg
stos
mov
nop
leave
cmpsb
push
inc
leave
jnp
xchg
adc
iret
add
and
push
js
fs
aad
push
pop
and
cmc
sbb
dec
sub
dec
pop
pop
jnp
push
jb
pusha
dec
mov
adc
adc
adc
icebp
dec
cltd
subb
push
ret
inc
sub
mov
addl
or
orl
sub
mov
arpl
imul
mov
xchg
cs
imul
mov
xlat
mov
adc
jmp
mov
mov
scas
aad
mov
jo
mov
xchg
dec
fwait
add
inc
pop
mov
push
pextrw
xor
mov
roll
stos
and
adc
pop
mov
adc
je
add
jmp
xlat
scas
int3
cmp
cmpsb
popf
and
xlat
jnp
or
mov
and
push
xchg
loop
ljmp
or
imul
in
fsts
xor
clc
pop
and
gs
or
popa
cmpsb
iret
int3
cmpsb
add
icebp
iret
lcall
mov
sub
mov
inc
sub
mov
test
jne
xor
sub
mov
ljmp
sbb
mov
mov
outsb
jno
lea
ja
pusha
mov
jle
jl
insb
push
aam
xrelease
dec
cmp
mov
and
pusha
dec
dec
xor
jmp
jnp
jp
lahf
or
sti
lock
pop
nop
xor
movsl
nop
inc
ss
xchg
mov
into
outsl
add
mov
aad
fs
pop
ds
adcb
sub
bound
or
mov
mov
loope
cmp
movsl
and
or
arpl
sbb
lahf
cmpsl
in
pop
insb
dec
xor
sbb
dec
adc
or
js
push
repz
jg
das
ljmp
clc
rorb
fadds
sahf
nop
jnp
pop
dec
mov
add
inc
mov
add
mov
push
jmp
mov
mov
test
mov
orb
jge
imul
pop
inc
jo
push
add
hlt
lods
pop
in
dec
sarl
cmc
jns
gs
cmc
and
dec
cmpsb
or
xchg
xchg
loope
movsl
adc
in
sbb
pop
fstpl
std
pop
adc
outsl
scas
push
sti
in
icebp
lahf
lcall
aam
sub
pop
push
das
out
pop
push
cmp
push
cmpsb
pop
mov
cmc
inc
mov
jne
es
stos
fwait
jb
jl
ljmp
pop
insb
xchg
out
sub
mulb
ficoml
and
sub
test
jae
xor
inc
sub
add
movsb
hlt
loop
jg
sub
fucomp
fldcw
addb
int
add
ret
cmc
xchg
or
inc
scas
iret
test
sti
fisttpl
jno
xor
jo
shld
test
mov
aaa
mov
ds
mov
maxps
gs
jmp
cld
lock
add
push
and
lock
lock
aaa
adc
pop
insb
mov
pop
fisubrs
loopne
clc
out
aas
adc
cwtl
inc
pop
scas
or
pop
rolb
add
mov
fwait
inc
jae
call
adc
jmp
sub
sub
repz
push
mov
pop
imul
popf
jle
push
pop
fstpt
and
in
and
mov
icebp
int3
cmp
popl
cmp
fwait
cs
leave
lods
cltd
mov
scas
push
or
int3
popa
out
sub
xlat
loopne
inc
mov
dec
and
shlb
out
jb
insl
mov
dec
push
mov
pop
fistps
adc
push
std
inc
inc
seto
lods
cmp
mov
outsb
std
loope
icebp
rorb
xlat
xchg
adc
movsl
out
lcall
lock
ljmp
xor
loop
mov
notb
sub
fwait
adc
pop
push
inc
outsb
std
xor
mov
jns
pop
pop
mov
mov
test
xor
into
pop
imul
fidivs
mov
mov
out
imul
jne
int3
jno
fisubrl
mov
leave
jmp
jmp
and
push
and
hlt
ja
scas
xor
xor
adc
pusha
mov
int
clc
xchg
xchg
or
jecxz
addb
mov
scas
rorb
sub
iret
leave
dec
fs
xorb
out
xor
inc
rcrb
lds
xor
inc
movsl
push
xorb
add
leave
xchg
cmp
push
sbb
adc
daa
and
xchg
adc
shl
pop
test
gs
cltd
mov
icebp
outsb
out
push
fs
jb
test
nop
insb
imul
and
jg
es
pop
adc
sbb
mov
push
cmp
mov
outsl
adc
lahf
cs
subl
xorl
xchg
mov
test
pop
lock
enter
out
sbb
xchg
push
and
sbb
popa
aaa
in
mov
mov
fdivs
push
sbb
sbbl
cli
shrb
cltd
xor
in
and
bound
sahf
nop
out
and
push
xchg
sbb
inc
and
mov
into
clc
pop
mov
pushw
je
dec
scas
jo
rclb
push
sbb
add
jmp
sti
lock
mov
adc
scas
das
pushf
mov
pop
pop
imul
mov
jmp
lret
xchg
cmc
xchg
mulb
xor
out
ror
xor
into
xchg
sub
iret
in
les
xchg
sub
jns
fadds
out
inc
and
xchg
mov
pop
loopne
jl
stos
mov
push
mov
popf
cmp
mov
out
mov
jae
icebp
push
adc
adc
in
popf
cmpsl
adc
pop
or
scas
daa
xchg
dec
pop
jne
lock
pusha
mov
mov
ja
cmp
mov
mov
shrl
arpl
fbld
sbbb
dec
sarb
ja
std
xchg
ja
hlt
divb
inc
jnp
sbb
aam
shrl
add
or
fisttps
cltd
insb
imul
icebp
push
ljmp
cmp
mov
fdivrs
test
aam
jl
addr16
pop
lock
popa
add
sbb
pop
jge
shrd
inc
inc
lret
cwtl
aad
je
daa
cmp
or
cltd
pop
mov
aas
daa
sbb
jmp
dec
mov
cmp
test
dec
cmp
ja
popf
mov
mov
jns
add
lds
imul
add
xchg
dec
mov
dec
adc
add
gs
jmp
shr
mov
xchg
popa
and
lods
push
sbb
outsb
in
mov
arpl
adc
ljmp
adc
fs
int
gs
clc
jno
xchg
ljmp
daa
mov
xchg
out
repz
fcomps
or
fst
hlt
jae
les
mov
sarl
or
hlt
mov
movd
pop
add
and
pop
cs
shlb
es
cmc
xchg
fcmovbe
cs
mov
rolb
nop
add
sar
dec
jbe
jmp
mov
clc
cmp
add
addr16
xchg
hlt
or
push
movsl
mov
add
jmp
clc
ret
add
or
add
gs
rcrl
cltd
fcmovbe
and
test
jge
repnz
clc
leave
movsl
dec
xor
repz
mov
fstps
loope
mov
cltd
in
xor
mov
mov
andl
jp
jno
and
jecxz
shll
inc
ficoml
mov
adc
sub
lods
mov
rcll
sbb
mov
inc
pop
jmp
add
xor
icebp
dec
inc
in
in
or
sbb
or
and
and
cmp
mov
push
cmp
push
icebp
push
jbe
jb
cmp
stc
xchg
imul
jb
shlb
adc
cmp
stos
inc
leave
in
dec
sub
xchg
hlt
and
pop
jnp
sahf
sub
icebp
movsl
mov
push
pop
inc
jno
cmp
sbb
cmp
pop
jno
flds
popa
xchg
jle
inc
test
call
iret
cmp
call
jns
orl
cmp
xchg
rol
repz
adc
adc
cmp
testl
addl
sub
sbb
cmp
jecxz
loopne
rcrl
ret
dec
nop
add
arpl
sbb
lea
cwtl
mov
out
int
xchg
in
inc
sub
fmul
adc
xchg
dec
std
lret
fs
xchg
shll
fisubrl
sub
jmp
pop
pop
inc
sbb
pop
mov
sub
int3
pop
enter
popa
add
pop
in
mov
mov
sbb
lahf
iret
xlat
push
mov
lret
xchg
mov
mov
stos
inc
xchg
and
gs
test
imul
les
push
into
or
and
loope
mov
ja
lcall
add
mov
cmp
ret
dec
add
ds
shl
cmp
fsubrl
cmpsb
mov
out
mov
gs
dec
or
insb
fwait
mov
pushl
test
nop
shll
xchg
icebp
jg
rorb
seto
jnp
mov
imul
sahf
add
enter
incl
lock
repz
or
add
repnz
push
cmp
inc
movsb
mov
and
jle
pop
insl
adc
ja
addr16
push
popa
pop
mov
sub
push
sbbb
in
test
lock
test
jg
fs
icebp
fdivr
imul
sbb
adc
lock
jno
and
loopne
mov
mov
cmpsl
sub
and
loope
out
rorl
loop
mov
sub
aad
xorl
cmp
push
inc
stc
sbbl
cmpsb
stos
out
push
dec
xor
push
rcrb
ja
jmp
notl
stos
icebp
cmp
lea
sbb
mov
or
mov
mov
popa
inc
xor
nop
push
push
adc
cmpsl
sahf
adc
pop
das
shl
arpl
add
inc
andb
repnz
lods
pop
fwait
jo
lea
bound
mov
mov
aam
sbb
push
and
addr16
frstor
in
pop
call
mov
in
dec
xchg
dec
insl
mov
sbb
iret
sbb
inc
fiaddl
jb
lods
mov
mov
dec
or
or
ret
jmp
pushf
fwait
push
or
sbb
cmp
mov
cwtl
sarb
ret
mov
adc
dec
test
mov
shlb
lret
shll
test
nop
xor
out
pop
sub
pop
popf
insl
mov
outsl
outsb
daa
cmp
xchg
inc
xchg
jno
push
mov
mov
test
dec
push
addr16
insl
insb
dec
xchg
sub
push
dec
cmp
inc
adcb
subl
outsb
inc
mov
dec
push
iret
cmp
fs
adc
mov
push
pop
jp
leave
xchg
lock
mov
jnp
mov
add
ja
pop
out
pop
inc
ljmp
outsl
mov
fcmovnb
add
pop
out
push
idivb
dec
dec
jne
sub
xor
pop
cmc
inc
nop
jecxz
dec
int
insl
insb
out
bound
jb
push
movsb
lcall
stos
inc
xor
sub
add
std
xor
loop
and
mov
dec
dec
dec
gs
loop
sbb
std
aas
mov
push
mov
fldcw
cmpsb
out
lods
mov
divb
int
mov
xlat
sub
sub
pop
fstpl
push
jg
jne
inc
aas
mov
and
lods
fbstp
lea
fiaddl
jecxz
sbb
pop
fidivrl
xorl
add
push
jl
arpl
add
mov
scas
in
cmp
add
inc
mov
ret
push
jne
sub
cmpsl
jge
inc
repz
ds
fcompl
ret
mov
pop
xorb
rorl
or
sub
sub
in
push
inc
andb
mov
repz
adc
test
aad
or
into
fwait
xchg
dec
sahf
pop
loope
xchg
fwait
pop
inc
out
xor
push
insl
push
sub
std
jbe
inc
stc
xchg
push
out
pop
xor
popa
cmp
xchg
push
cmpsl
aaa
andb
mov
nop
lcall
pusha
sub
xchg
das
in
ss
xchg
mov
into
mov
movsl
lcall
xchg
sbb
sbb
aad
sahf
sti
mov
jg
dec
lret
mov
adc
or
dec
push
pop
jle
and
inc
sub
jecxz
inc
outsl
xor
push
enter
lea
icebp
mov
in
cld
and
loopne
jo
fstpt
test
add
cld
ss
and
daa
orb
cmp
ret
lods
into
push
jbe
pop
popf
clc
sub
pusha
mov
xchg
inc
sti
mov
push
dec
icebp
cmp
mov
push
xor
cmpsl
mov
out
into
sbbb
inc
sbb
mov
inc
clc
test
in
shll
int3
mov
movsb
fdiv
xor
jae
in
in
dec
aas
dec
jae
mov
pushf
scas
imul
mov
in
pusha
js
loop
imul
inc
mov
lret
xchg
lds
call
xchg
clc
mov
frstor
leave
shlb
mov
ror
push
or
xchg
mov
rcll
in
mov
rclw
add
mov
pushf
iret
mov
lods
sbb
adc
insb
adc
lcall
int
imul
in
cmc
sbb
in
cltd
cltd
icebp
adc
rcrb
daa
xchg
xor
or
rorl
daa
imul
lret
mov
in
mov
stos
cmp
out
and
xchg
xchg
pop
mov
gs
repz
or
dec
mov
cld
xchg
mov
les
push
mov
and
mov
fstpt
fimuls
mov
add
jecxz
or
dec
or
adc
fcmovbe
in
cmp
andl
cmp
add
lock
cmp
push
xor
jns
adc
shr
and
cvttps2pi
loope
enter
push
inc
mov
sahf
push
jecxz
jmp
xor
hlt
cmpsl
pop
in
jae
sbb
jp
out
mov
mov
inc
xor
jmp
jnp
cmp
mov
mov
imul
ror
jecxz
xchg
push
jge
out
mov
inc
pop
out
fistps
fisubs
pop
inc
cmpsb
orb
jmp
pop
xchg
scas
inc
jg
stos
popa
sbb
mov
aaa
mov
jne
inc
pop
jecxz
lahf
mov
stc
jle
inc
jno
js
push
cmc
in
mov
sub
pop
int3
xchg
push
imul
jbe
xchg
test
mov
stc
imul
xor
cld
mov
sarb
jne
cltd
imulb
sub
jb
push
xchg
or
out
sti
mov
mov
push
test
jb
mov
cmp
add
lods
push
insb
lock
xor
mov
pop
shll
sub
mov
and
mov
pop
in
bound
sbbb
cmpsb
cli
dec
lahf
cwtl
or
test
push
shlb
ret
mov
lret
pushf
ret
aam
dec
in
js
and
sbb
into
popa
jle
xchg
mov
xchg
jbe
aas
push
adcb
data16
fldenv
insl
in
pop
int
js
jmp
pusha
sarl
bound
sbb
mov
adc
or
sbb
js
rcll
rolb
lods
jnp
es
inc
mov
aad
test
call
lret
push
sbb
and
fwait
adc
ja
lds
ja
adc
stc
enter
and
fisttpll
cmp
jp
push
mov
cmp
in
orl
adc
dec
lcall
xor
cmp
push
inc
xchg
outsl
lea
clc
repnz
out
imul
push
pcmpgtw
cltd
js
ljmp
xlat
addb
inc
lds
cwtl
popf
mov
aam
and
int
xchg
pop
lret
rcr
sbb
sti
mov
repz
dec
and
shl
add
jl
ret
sbb
lock
cmp
repnz
xchg
rorb
mov
add
lods
je
adc
cmp
aam
mov
popf
lods
test
dec
jl
cmp
pop
je
std
push
test
mov
mov
push
dec
cmp
clc
sti
aad
je
cmp
out
cbtw
or
jmp
cmpsl
pushf
cmp
into
out
and
in
call
sub
aaa
push
adc
sbb
xchg
popf
or
insl
out
insl
in
sbb
fwait
mov
fs
cli
cmpsl
dec
or
or
xor
or
insb
je
shlb
mov
mov
orl
pop
std
cmp
sub
loop
dec
cmp
dec
push
jl
cmc
lret
nop
cld
jo
mov
gs
pop
insb
xor
popf
ror
sbb
xchg
je
pop
mov
dec
jo
mov
xchg
push
cmp
jmp
xor
push
shrb
dec
js
nop
pusha
je
and
mov
outsl
jb
roll
jne
push
nop
leave
lea
mov
mov
xor
inc
mov
dec
cmp
aaa
mov
jp
pusha
mov
mov
mov
sub
shl
and
pop
shrb
jbe
ljmp
push
pop
push
shlb
movsl
test
add
mov
mov
push
shufps
mov
aad
aaa
aaa
cmc
mov
ficoml
aad
push
ss
out
xchg
mov
mov
xchg
loope
mov
sub
into
imul
stc
lret
js
loop
fmull
push
jg
pop
xchg
repz
push
not
std
test
xchg
scas
push
add
cmpsl
movsl
dec
fwait
lcall
jmp
lret
popl
sbb
daa
sbb
fwait
pop
icebp
addb
sub
and
mov
sti
mov
add
push
push
xor
fstpt
fbld
mov
test
mov
add
fisttpl
mov
inc
push
lret
mulb
clc
daa
jae
or
dec
sbb
lods
xchg
or
popf
inc
mov
inc
inc
js
push
add
repz
dec
xchg
lods
xor
mov
data16
popa
push
cwtl
iret
and
or
mov
mov
loope
es
xchg
sub
stos
sbb
cmp
mov
stc
add
arpl
fnstenv
cmp
movsb
cmp
jae
mov
fldt
mov
pop
iret
mov
jge
ds
int3
xchg
push
scas
add
mov
jecxz
add
addr16
fnsave
jno
inc
test
cmp
inc
sbb
ret
aas
and
imul
subl
xchg
testb
push
mov
cs
iret
in
rcrb
jns
sbb
ror
xchg
mov
mov
jl
shl
sbb
push
mov
pop
push
push
lea
dec
cld
pop
pop
in
imul
mov
out
push
fincstp
pop
cld
pushf
mov
nop
add
and
aas
iret
dec
pop
mov
adc
xchg
jg
or
cmpl
ljmp
inc
xchg
in
pop
mov
cmp
fsubrl
lret
pop
dec
cmp
je
xlat
iret
or
dec
adc
and
push
push
mov
mov
add
jecxz
insl
scas
dec
sbb
xor
mov
into
pop
scas
xchg
jmp
sub
iret
lret
repnz
mov
nop
insl
shl
jbe
mov
in
add
or
rcrb
cmc
sbb
ss
adc
in
dec
out
cmpsb
rcl
inc
loope
sbbl
nop
outsl
jno
call
addr16
mov
dec
jo
aad
adc
insl
lea
mov
into
jmp
push
ljmp
add
scas
das
cwtl
push
hlt
rcrb
fistl
je
add
fisubrl
inc
rorl
aam
mov
add
movl
fiaddl
movzbl
push
in
out
push
jecxz
mov
scas
jno
rcll
aas
jg
and
xor
or
data16
rcll
mov
sub
sbb
je
popl
dec
movsb
mov
jne
hlt
loop
jns
adc
jbe
das
sbb
cmpsl
pop
sti
mov
dec
ds
jle
clc
repnz
lret
out
shll
in
sub
in
or
mov
mov
cmpsl
jae
inc
jns
jp
add
pusha
fcmovnb
xor
sub
mov
lods
sbb
enter
pop
loop
loope
pop
cmp
adc
mov
fmul
adc
stc
push
cmp
inc
sarb
mov
popf
sbb
data16
cmp
or
and
ja
sti
adc
add
fcoms
lret
push
jae
cmove
jp
daa
xor
mov
test
push
stos
mov
mov
iret
mulb
insl
and
nop
xchg
repnz
jae
das
mull
fbstp
jno
movsl
pop
push
mov
pushf
inc
or
ret
jbe
scas
rol
dec
call
xor
lcall
mov
push
pop
ss
jb
aam
shll
test
cmpsl
add
push
or
stos
sub
andb
cmp
lock
popa
cmpsl
cmp
pusha
sub
arpl
dec
into
movsl
or
insl
int
adc
add
cwtl
jle
mov
popf
sbbl
mov
add
stos
call
pop
sub
insl
pop
aad
and
dec
jnp
mov
or
push
dec
pop
imul
in
mov
pop
or
add
xor
ds
les
cmp
out
xchg
dec
adc
into
cltd
or
call
orl
mov
xor
add
sbb
jnp
sahf
jbe
fwait
bound
jl
inc
xchg
data16
mov
xchg
pop
rolb
mov
pop
jo
lahf
adc
lret
xor
adc
out
mov
pusha
xor
jle
ds
dec
sub
mov
mov
cltd
adc
mov
cmp
lcall
adc
lds
sbb
add
push
cwtl
push
xchg
jb
adc
stc
xlat
in
int3
push
insl
roll
adc
fwait
mov
jl
scas
xor
xchg
sub
dec
bnd
je
out
or
jmp
and
or
add
aaa
shl
cmpsl
or
mov
mov
ficompl
scas
jne
ret
mov
dec
int3
inc
repz
or
dec
mov
jo
lcall
dec
icebp
adc
fcomp
popf
iret
xor
add
cmp
mov
xchg
and
decl
out
sub
cltd
imul
sbb
cmp
shll
adc
push
pop
imul
shl
fiaddl
xchg
lds
xchg
stos
scas
std
repnz
jne
push
push
mov
jmp
bound
mov
daa
add
inc
cmpsl
cwtl
xor
rcr
sub
jg
or
ljmp
inc
cli
adc
mov
dec
pop
adc
mov
repnz
scas
mov
sar
sti
stc
push
pop
sub
or
pop
nop
pusha
fcomi
xchg
scas
mov
mov
push
mov
pop
cmp
mov
faddp
sub
pop
pop
push
sub
or
ja
push
pop
push
dec
roll
mov
inc
sbb
mov
add
add
sub
inc
pop
dec
xchg
mov
fwait
or
ljmp
xchg
mov
adc
pop
imul
add
dec
lds
mov
pop
insl
lea
lcall
push
xor
shl
test
cld
lock
and
insl
add
sarl
ret
into
lock
or
sar
nop
push
addr16
shrl
pop
add
sub
sbb
jns
mov
dec
sub
mov
mov
inc
pop
mov
cli
cmc
or
mov
scas
push
and
push
add
sbb
xor
iret
mov
xor
int
or
imul
stos
jle
dec
ret
daa
enter
adc
dec
loop
pop
fdivl
enter
mov
push
stc
daa
and
fidivl
scas
rorl
gs
fsubr
adc
push
sbb
mov
aam
shlb
or
test
push
or
or
js
cmpsl
mov
cwtl
or
sub
cmpsb
lea
dec
es
pushf
insb
cs
push
or
xchg
and
int3
leave
mov
jg
add
arpl
jbe
mov
cltd
aaa
enter
lahf
loopne
adc
and
push
gs
mov
pop
xlat
pextrw
push
sub
es
and
testl
test
and
inc
inc
movsb
roll
repnz
daa
orl
adc
je
in
mov
adc
jp
cmp
rcll
fldcw
mov
les
leave
clc
mov
insl
rol
cmp
sbb
mov
flds
sub
gs
mov
add
and
scas
lret
pushf
adc
daa
inc
adc
or
adc
and
add
push
jnp
movsb
cld
outsb
roll
lds
cmp
dec
shl
adc
test
jno
push
xchg
std
sub
or
rclb
lds
pop
add
lcall
scas
cld
subl
and
subl
dec
and
sub
sub
sti
lcall
insb
hlt
in
and
cmp
sub
lock
add
adc
mov
popf
pop
lock
outsb
push
or
cld
inc
ljmp
fstps
cmp
lods
sbb
incl
mov
jl
sbb
addb
dec
cmpsb
sti
adc
jecxz
add
call
sbb
lods
loope
adc
aam
xor
jge
gs
adc
jle
pop
aad
in
sub
mov
fadds
sbb
ljmp
divb
xchg
or
loope
ljmp
cwtl
sbb
mov
adc
mov
dec
movsb
rcrb
adc
in
sbb
hlt
xchg
add
sti
mov
fbld
adc
cmp
sbb
adc
dec
frstor
out
sub
lods
fsubl
adc
das
xchg
mov
mov
ret
lcall
xchg
xor
cmp
mov
addr16
stos
out
or
pushf
shlb
in
out
fstp
cmpsb
mov
jno
cmp
aad
not
push
xor
lahf
jge
popa
add
mov
jmp
ret
sub
sbb
cltd
pushf
jae
call
inc
push
xor
loopne
je
sti
test
jo
jg
cli
adc
ss
cmc
mov
push
jp
or
pop
jecxz
xor
lods
imul
pop
sbb
lods
aam
mov
jno
data16
repnz
xor
lret
xchg
xchg
jne
rolb
ja
cmp
std
and
cmp
ds
aaa
cmp
clc
ss
in
mov
int
fistl
jg
aam
and
mov
mov
xor
icebp
cmc
mov
and
jne
shrl
movsb
xor
fimuls
mov
dec
cmp
cmp
jnp
mov
xrelease
xor
push
jle
aas
cmp
addr16
push
add
and
lret
sarl
insl
dec
or
icebp
mov
jp
stos
mov
push
addr16
and
test
cmp
repnz
ret
imul
pop
js
lret
clc
daa
enter
inc
dec
xor
push
in
repnz
insb
xchg
je
sub
xor
loopne
push
adc
cltd
inc
in
stos
jb
mov
sbb
dec
pop
roll
fadd
jae
pop
roll
iret
mov
cmp
sbb
popf
push
xchg
mov
sub
stos
stc
jp
or
jne
loope
dec
adcb
and
and
in
dec
xchg
cld
lret
inc
outsb
mov
dec
int3
add
in
jbe
sbb
jae
sub
mov
sbb
clc
imul
jle
iret
cmp
iret
outsl
fdivp
mov
mov
push
lahf
pushl
mov
std
divl
in
add
cwtl
sbb
test
out
stos
push
xchg
in
pop
mov
stos
leave
pop
push
adc
iret
adc
rorw
add
push
mov
scas
cmpb
pushf
sahf
test
adc
mov
ss
fildl
pusha
lret
es
dec
jp
out
repz
jno
js
les
fiaddl
out
inc
xchg
xchg
push
push
pop
adc
pop
rcrl
ja
scas
mov
test
xchg
ljmp
iret
gs
shl
add
popf
daa
js
ret
cmc
xor
mov
mov
inc
es
pop
inc
jl
aaa
push
jl
stc
ficomps
fwait
xor
dec
sahf
scas
jbe
gs
ss
adc
add
ss
test
cmpb
cld
add
inc
inc
movsb
scas
rolb
repnz
enter
out
adc
pop
adc
push
mov
cli
jno
sub
jb
inc
sbb
lea
pop
dec
popf
cmp
xchg
cmp
ss
sbb
sub
sbb
rol
mov
xchg
fstl
shl
bound
pop
xchg
out
mov
hlt
adc
pop
mov
and
fwait
cli
add
and
out
push
shr
mov
nop
jl
clc
out
mov
add
dec
sarb
fldcw
test
mov
pushf
sbb
push
in
nop
or
mov
mov
scas
push
mov
mov
insb
inc
rcr
jmp
pop
jle
fsubl
leave
cmp
dec
into
loopne
ffree
cltd
jae
sbb
lret
dec
adc
push
outsl
xchg
loopne
in
out
lock
pop
xor
pop
cmp
cld
mulb
inc
sahf
sub
and
push
xor
outsl
leave
mov
icebp
or
sub
push
psubw
out
add
jp
mov
aas
cs
xchg
jmp
mov
out
mov
jge
push
test
or
and
cmpsb
ret
dec
fadd
test
hlt
or
mov
lahf
movsb
mov
mov
enter
sbb
aas
pusha
lcall
popa
pop
push
mov
int3
ret
add
rcrl
and
mov
sbb
jl
or
rorl
aas
shlb
xor
mov
pop
jno
fwait
test
das
mov
lods
or
test
sahf
pop
or
mov
dec
iret
adc
mov
mov
in
sub
out
adcb
cmpsl
cmpsl
cmpsb
int
mov
scas
loope
and
push
xchg
in
mov
dec
shll
cmp
orl
adc
stos
push
push
push
mov
push
pop
add
adc
xchg
aas
lahf
jge
cmp
inc
out
shll
lcall
mov
cmpsb
push
and
loopne
pusha
ss
dec
call
enter
pop
adc
das
mov
aaa
pop
fdivs
ret
aaa
mov
push
push
mov
loop
mov
in
cli
ja
shl
xchg
in
fsts
leave
dec
jno
mov
adc
pop
aam
pop
leave
push
rorl
pop
mov
mov
xlat
xchg
mov
sub
add
xchg
inc
test
rcll
push
adc
cmp
dec
out
or
movsl
aas
cmp
dec
fcmovnb
mov
xchg
aad
and
sub
jmp
aas
cmp
or
lds
inc
pop
jno
jecxz
cmp
aas
icebp
test
mov
jbe
inc
mov
sbb
jecxz
test
arpl
dec
push
jg
ss
mov
sbb
mov
pop
push
fs
sti
adc
scas
lahf
push
jecxz
adc
inc
punpcklwd
dec
push
mov
shll
test
cmpsl
xchg
and
rclb
dec
int
add
mov
popa
fisubrl
cld
nop
int3
lods
jge
inc
and
xchg
sarb
adc
jmp
jae
mov
push
mov
insb
rorl
je
dec
cmpsl
call
mov
sbb
inc
inc
incl
push
push
nopl
cmp
xlat
ss
ds
mov
inc
sbb
cmpsl
shlb
js
fisubl
pop
cmpl
adc
push
scas
mov
jbe
lea
add
movsb
in
push
js
aam
aas
dec
mov
inc
loope
mov
sbb
in
mov
xor
cmp
outsl
in
ror
addr16
xor
cmp
mov
in
mov
dec
push
jle
stos
cmp
flds
imul
stos
and
jg
shl
bound
jbe
xchg
scas
mov
xchg
mov
and
mov
sbb
xor
xor
stc
or
call
lods
mov
arpl
lds
inc
mov
jnp
xchg
popa
jmp
mov
in
xchg
mov
adc
in
jb
incb
into
inc
push
sbb
cmp
pop
jp
cs
push
add
ret
loop
adc
imulb
idivl
stos
leave
loop
push
movl
adc
sahf
xor
stc
xchg
push
leave
movsl
and
mov
lea
popf
jae
es
jmp
lock
cmp
jae
cmpsl
js
sub
insl
in
jg
sahf
xchg
lods
enter
pop
jmp
push
add
sarb
add
call
jle
pavgw
arpl
loop
adc
xchg
jb
rolb
add
mov
cmp
fwait
mov
xchg
daa
and
sub
ret
and
or
stos
aad
data16
mov
daa
push
test
sarb
mov
ljmp
sub
mov
cmc
jmp
inc
test
add
pop
ret
loop
aas
out
stos
stos
adc
out
pop
ret
outsb
add
mov
adcb
mov
in
ds
sar
jb
dec
cmp
sbb
test
push
insb
shl
pop
andl
inc
dec
mov
inc
out
into
subb
ja
ljmp
mov
shlb
or
cmpsw
fs
stc
stc
orb
push
jns
inc
add
data16
mov
gs
inc
push
sub
push
mov
les
fidivl
fsubs
outsb
jo
mov
orl
push
repnz
xlat
lret
arpl
jecxz
add
lock
add
pop
jecxz
fimull
and
sti
pop
xchg
xchg
ret
mov
jp
rclb
aad
iret
mov
xchg
pop
test
inc
sbb
clc
jle
std
sub
xchg
sbb
das
mov
push
popf
adc
imul
and
sub
xchg
adc
aas
adc
mov
into
sub
sbb
cmc
in
xor
push
adc
and
movsb
lret
sub
mov
loopne
outsl
xchg
pop
imul
mov
sahf
aas
xchg
pop
xchg
xchg
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
push
inc
fsubp
cmpsl
lret
jge
mov
add
test
cmp
ja
xchg
xor
push
xor
mov
test
ficompl
push
xor
sub
das
push
jg
jbe
out
stos
fbstp
ss
cmp
negb
add
stc
sub
pop
xchg
aas
and
and
pop
add
pop
xchg
pusha
arpl
adc
out
std
mov
icebp
xor
jl
nop
ja
mov
cmpb
or
lret
jle
pop
test
jl
scas
adc
rcrl
roll
xchg
push
add
loopne
in
pop
sbb
repz
ficomps
daa
jb
cmovae
xchg
pextrw
add
inc
js
cmp
xlat
mov
in
imul
xlat
sub
outsl
fwait
xchg
movsb
repz
and
xchg
fs
and
push
pop
je
adc
rcrb
aam
inc
fcoms
stos
fdivrl
and
popf
xor
mov
into
test
dec
fisttpll
lods
push
lock
dec
pusha
aaa
sbb
mov
sub
into
jae
filds
iret
adc
out
std
add
add
lahf
cmp
jmp
out
fdivr
hlt
mov
hlt
or
push
addr16
scas
jno
jle
sbb
pop
dec
push
or
cmp
jl
mov
inc
push
dec
call
jbe
filds
cmp
lret
ljmp
mov
jbe
enter
or
test
je
add
fisttpll
lret
xor
int3
in
xor
out
xor
sub
loope
xchg
jecxz
aas
setne
ds
cmp
or
mov
and
inc
add
shll
xchg
stos
es
mov
insb
fistpll
mov
outsl
lret
push
movsb
and
mov
cmp
jo
int
xchg
out
bound
cmpsb
shrl
sbb
push
stc
dec
ret
loopne
cmpsl
call
or
cli
add
iret
pop
xor
aam
test
sahf
out
pop
popf
test
std
stos
repz
icebp
imul
xchg
mov
pop
rorl
cmpsl
cmp
xorb
repnz
mov
mov
mov
ss
pop
cs
mov
cmp
fmul
mov
push
testb
stos
or
fprem1
out
jl
aam
cmp
cmpsl
jno
add
push
sahf
dec
movsb
xor
ret
xchg
jmp
insl
push
xchg
sub
jnp
fisttpl
inc
mov
les
fwait
inc
test
jl
cmp
or
gs
mov
ja
sbb
addl
dec
sub
daa
fwait
or
pop
cmp
lret
inc
rcl
clc
out
leave
push
adc
cwtl
loopne
pop
test
pop
cmc
loopne
mov
leave
cmp
lea
movsl
out
sub
arpl
ljmp
and
push
out
sbb
aam
outsb
sti
lds
mov
jmp
rcr
faddl
out
test
mov
outsl
in
bound
ljmp
sbb
mov
in
mov
dec
aam
push
mov
aaa
mov
cs
push
push
jp
scas
sbb
add
scas
cmp
in
cmpsl
icebp
iret
lret
adc
push
sub
push
lods
stos
xor
xchg
test
lods
xor
iret
imul
sub
xlat
ja
fmuls
jbe
int3
and
inc
dec
repnz
dec
adc
sarl
or
clc
fistps
cmp
js
hlt
inc
addr16
cmp
mov
adc
mov
and
hlt
xchg
loopne
and
leave
cmp
test
push
adc
loope
xor
pop
sub
inc
repnz
in
imul
jbe
in
ds
and
jbe
cmp
fnstsw
mov
mov
dec
or
sub
nop
rolb
jno
les
dec
shl
nopl
lods
add
fistpll
cmpsb
orb
cmpsb
sub
dec
int3
xchg
mov
fiaddl
stos
jae
add
testb
pop
adc
repnz
mov
add
dec
imul
pop
dec
mov
dec
movsb
gs
nop
jnp
sahf
insl
jb
mov
xchg
push
in
das
aam
flds
es
fcoms
dec
mov
pop
mov
lcall
clc
dec
ss
pop
jnp
jp
jle
push
cwtl
es
mov
out
mov
aad
pop
std
orl
add
add
lock
jge
add
pop
es
das
xor
inc
int3
xchg
xchg
adc
or
aad
pushf
lret
and
js
nop
cwtl
inc
rclb
imul
pop
fs
push
cmpsb
sbb
popa
subb
push
inc
mov
dec
sub
fldt
jmp
bound
lea
scas
rorb
xor
lds
ror
inc
out
and
mov
nop
gs
xchg
push
mov
sbb
xchg
andb
sub
mov
and
add
test
xlat
imul
imul
inc
call
mov
jmp
push
mov
mov
jecxz
movsb
lods
in
loope
int3
clc
lock
cltd
lret
dec
bound
add
bound
cmp
dec
pop
push
or
js
lock
out
cltd
scas
mov
fdivrp
aaa
mov
lahf
xchg
mov
and
pop
cld
out
fmuls
lods
pop
mov
push
outsl
repz
add
sbb
push
pusha
sub
out
movsl
std
mov
cli
fldenv
out
ds
je
cld
lahf
xchg
push
xchg
icebp
mov
insl
push
out
jmp
rol
lods
hlt
mov
mov
mov
inc
jge
test
cmpsl
pop
pop
pop
mov
add
repnz
jp
call
mov
and
aas
xchg
or
and
inc
fcmovnbe
mov
out
idiv
test
xchg
jb
push
ljmp
rcl
mov
mov
xlat
addr16
loopne
adcl
sub
push
sbb
adc
movsb
lods
mov
stos
inc
and
mov
rcr
mov
int3
jns
pop
out
std
dec
xlat
sbb
mov
leave
sub
or
inc
inc
and
cli
jl
jmp
push
add
push
sbb
divb
dec
js
fisubs
in
push
shlb
je
xchg
or
pusha
sbb
out
xchg
je
push
cmp
nop
ficoml
jg
in
pop
push
repnz
je
sub
movl
cmc
pop
sub
dec
dec
ficomps
inc
shrl
dec
fsubl
imul
add
bound
out
xchg
xchg
mov
xchg
enter
jae
inc
out
das
ja
fistpl
push
add
mov
inc
stos
cmpsb
scas
outsl
or
sub
cmp
decl
mov
ja
dec
xor
shlb
movsl
mov
jmp
xorb
push
mov
pop
dec
dec
sbb
jmp
pop
adc
stos
xchg
pop
sahf
jl
hlt
call
insb
out
sti
inc
add
inc
push
out
xchg
add
add
add
xchg
add
inc
xchg
sub
jecxz
lret
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
xchg
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
xchg
icebp
mov
add
cmp
