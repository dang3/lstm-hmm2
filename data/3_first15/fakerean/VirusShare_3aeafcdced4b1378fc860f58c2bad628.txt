sbb
add
ss
pop
inc
arpl
daa
cltd
sbb
inc
push
dec
subl
adc
and
lret
or
push
test
jae
dec
add
xor
xor
push
out
jge
mov
and
es
call
and
dec
mov
cmp
dec
movsl
hlt
mov
or
loope
bound
movsl
xchg
mov
cmc
sbb
pop
mov
and
xor
test
push
sti
fildl
movl
rcl
push
std
shrb
pop
push
sbb
cwtl
push
jo
out
mov
clc
std
or
loop
dec
int
and
add
xchg
imul
sub
xor
in
leave
jb
xlat
fisubs
pop
sbb
data16
out
ja
adc
cmpsb
pop
stos
sbbl
mov
test
nop
lcall
sub
dec
cli
or
mov
or
jnp
or
lods
mov
sub
ss
or
adc
dec
pushf
xchg
dec
jmp
insb
dec
push
das
rorl
pop
mov
sub
cmpsl
mov
mov
test
sahf
mov
xor
push
imul
jb
cmp
outsl
lret
into
in
sti
shr
pop
aaa
mov
lds
sub
das
dec
aam
push
fisubs
mov
or
out
pop
outsl
lods
xchg
loopne
hlt
lods
lret
les
fildll
mov
rclb
sub
sbb
and
jo
push
cmp
push
mov
dec
cmp
mov
cmp
lret
adc
es
cli
cmp
fildl
pop
push
add
mov
ret
mov
cltd
cmp
scas
xlat
rcrl
in
adc
adc
xor
pop
mov
out
aam
lahf
mov
dec
fucomi
inc
xlat
jnp
xor
bound
xor
aad
pop
data16
inc
outsl
repz
cld
and
sbb
and
mov
das
and
mov
fs
inc
scas
gs
popf
cs
in
adcl
adc
scas
jbe
iret
adc
lea
jle
imul
jle
dec
mov
add
mov
ficomps
inc
mov
cmp
and
xchg
loope
inc
jo
jg
mov
jl
push
mov
add
dec
bound
adc
jns
inc
ret
dec
roll
rcrb
fmuls
cwtl
push
fistpll
outsl
loopne
in
arpl
sbb
out
add
sbb
dec
addb
je
dec
adc
aam
aaa
or
dec
cmpsb
push
cli
push
cmc
dec
mov
icebp
lods
mov
int
ret
nop
dec
mov
jnp
pushf
mov
outsl
ficomps
aad
ficomps
cli
fwait
jl
push
jecxz
lahf
icebp
add
mov
dec
cltd
ror
js
rcrl
or
dec
lcall
adc
dec
pop
sarb
sub
in
roll
rcrb
icebp
push
rcrb
push
stos
mov
xchg
in
popf
testl
int
adc
mov
push
mov
nopl
inc
fists
mov
dec
gs
adc
test
xchg
inc
xchg
out
xchg
pop
fldcw
cmp
adc
lret
loopne
aam
lods
into
jmp
mulw
jle
sub
andb
sarb
test
outsb
add
leave
outsl
icebp
and
adc
adc
insl
mov
or
cltd
call
fmull
or
nop
imul
and
jp
push
fbld
repz
or
xor
cmp
es
mov
sbb
outsl
or
fidivrl
push
dec
imul
sub
popf
cmp
dec
sub
bound
dec
push
push
je
jg
pop
xchg
cmp
inc
std
call
or
mov
push
dec
add
dec
jl
out
test
push
iret
addb
inc
cmp
sbb
pop
xchg
xor
sbb
hlt
inc
cmpsl
mov
xor
stos
xor
and
out
and
imul
mov
sub
clc
testl
cmp
push
movsb
adc
popf
push
mov
pop
mov
popa
mov
add
lcall
rcl
popa
aad
pop
lahf
insb
hlt
xlat
sbb
rcll
enter
fistl
cmpb
jg
sti
adc
pusha
pop
aaa
or
pop
cs
ror
inc
cmp
mov
mov
ja
xchg
cmp
add
and
pop
arpl
lock
add
jo
jmp
cmpsb
pop
mov
leave
cmp
mov
sub
and
or
jmp
dec
adc
insl
mov
ret
or
lods
gs
push
push
ret
lret
sub
jp
fwait
je
pop
aad
fdivp
mov
pop
add
xor
loop,pt
in
or
je
popf
jne
adc
test
imul
sub
mov
in
xlat
fcoml
int3
mov
jbe
bound
outsl
out
cli
fidivl
jmp
and
mov
sti
leave
jbe
data16
xchg
stos
jmp
mov
cmc
iret
xchg
shrb
addr16
push
stc
jno
addb
mov
mov
push
fists
pop
mov
fnstsw
filds
jo
out
test
jns
mov
pop
out
push
dec
push
and
lret
addr16
cmp
push
lea
adc
inc
cld
sub
enter
push
xchg
jecxz
pop
dec
push
adc
leave
cmp
mov
mov
add
pushf
call
pushf
inc
out
pop
or
ss
movsl
imul
push
cmpsl
xor
in
jbe
test
mov
mov
xor
adc
rolb
fstl
daa
jl
data16
xor
pop
adc
in
xchg
test
push
lret
out
scas
jae
sahf
fisubrs
in
into
fidivrs
fsubr
sbb
insb
inc
cmp
faddp
out
mov
imul
out
movsb
shrb
push
push
cld
inc
sub
in
push
pop
rcrl
or
inc
xlat
cwtl
push
shrb
cmp
jmp
loope
movsb
mov
in
ss
pushf
cwtl
inc
push
call
jnp
ret
ja
jg
imul
ret
lea
sub
add
aas
std
leave
outsb
add
gs
jl
repz
sub
test
dec
addr16
adc
mov
incb
adc
rep
in
xor
imul
mov
mov
add
in
nop
movb
adc
lahf
test
mov
xlat
mov
xchg
idivl
js
pop
pop
mov
cmp
std
sub
pop
xchg
repz
adc
shl
jp
sub
int
out
push
adc
test
mov
or
mov
dec
jmp
mov
test
loope
and
and
add
jg
jp
lret
sbb
cmp
sbb
adc
je
jne
ret
nop
fistpll
or
nop
inc
pop
jbe
ret
push
jns
js
mov
xchg
movsb
cmpsl
stc
mov
sbb
xor
dec
mov
sbb
push
stos
xchg
mov
les
dec
mov
xorl
push
stos
cmc
nop
mov
iret
pop
cld
pop
xor
sub
push
fcoml
out
lods
sub
add
mov
int3
inc
mov
push
iret
lods
test
sbb
iret
mov
ret
addl
dec
test
xor
xorb
leave
sub
dec
gs
icebp
nop
dec
xlat
sahf
fcoms
jno
add
add
and
or
and
mov
fnstcw
jb
cli
mov
aad
dec
or
adc
stos
in
cld
xor
push
outsb
mov
rcrl
mov
sbb
imul
jge,pt
xchg
aam
or
imulw
jns
sar
test
dec
jmp
dec
rorl
repz
subl
fdiv
mov
fwait
addb
stc
push
cmc
mov
mov
sub
sahf
pop
stc
mov
aaa
sub
mov
mov
and
pop
cmp
out
pushf
or
out
dec
xchg
xchg
popa
shrb
cltd
int
js
aad
daa
test
std
scas
data16
dec
pushw
dec
pop
adc
mov
movsb
sub
pop
js
mov
xor
jg
cli
lret
jge
pop
and
pop
decl
dec
sub
repz
and
das
pop
xor
mov
out
loope
push
sbb
and
leave
loop
int3
lret
repnz
sbb
push
pop
adc
xchg
clc
sub
dec
inc
jbe
cmp
dec
stc
aad
or
in
push
lahf
mov
scas
stos
cmp
jb
in
push
subl
aaa
mov
mov
lret
call
xchg
pop
fcoml
ret
ja
stc
aaa
ret
out
js
sub
jns
push
pop
lret
lret
or
hlt
faddl
pop
jge
and
sbb
les
xor
cmp
and
cmc
out
je
mov
orl
mov
cmp
rclb
mov
xchg
push
lds
mov
in
jne
xor
add
pop
add
movsl
fisubs
fiadds
jns
push
inc
xor
fstl
push
and
cld
dec
sbb
cld
and
out
mov
ds
sub
into
jl
xchg
outsl
sub
sub
push
call
cltd
int3
jle
cli
cmp
jge
or
inc
jl
jp
pop
push
loop
movsl
mov
ja
adc
jl
jl
inc
cmp
mov
push
push
mov
ret
or
inc
xor
add
arpl
xchg
inc
pusha
cmpsb
cs
pop
xor
orb
cmpb
sti
push
xor
or
cmp
ss
test
push
sbb
sub
push
icebp
mov
mov
fdivrl
stos
jmp
xchg
add
and
and
lret
xor
mov
fcomps
out
scas
dec
inc
mov
or
les
test
pop
sbbl
add
sub
xchg
stc
loopne
int
rcr
and
mov
cmp
outsb
and
xchg
cwtl
cmpsl
je
mov
cli
sarl
push
add
cmp
or
ja
scas
popf
mov
cmpsl
mov
in
add
pop
add
es
or
popf
in
inc
repnz
pop
repz
dec
icebp
in
sbb
xchg
imul
shrl
jae
jg
fildl
movsl
jmp
mov
stos
ja
mov
push
js
and
xchg
movsb
cmpsb
andb
pop
dec
out
push
clc
add
or
lds
inc
aaa
js
xchg
jns
push
ret
dec
mov
lods
mov
xchg
fimull
adc
mov
and
fildll
insw
dec
ds
mov
leave
cmp
cltd
inc
jbe
or
shl
push
sbb
dec
dec
sub
mov
mov
mov
scas
mov
mov
bound
pop
pop
and
xor
inc
xchg
fs
push
pop
cmp
xor
cld
adc
mov
mov
xchg
inc
jmp
les
lods
mov
std
sbbb
pop
fucomi
and
push
or
pop
rclb
sub
xchg
cltd
push
sub
cld
jle
retw
icebp
lods
adc
jl
jns
sbb
xchg
xor
subl
lds
xchg
inc
and
dec
xchg
push
mov
and
stc
mov
sub
mov
js
mov
mov
mov
out
sbbb
sbb
cmp
aad
mov
mov
mov
mov
rol
inc
dec
inc
sti
push
cmpsb
cli
push
lods
leave
mov
and
sbb
pop
shlb
fwait
xlat
inc
mov
cmpsb
nop
cmp
jbe
xor
xor
in
frstor
mov
stc
cmp
push
fwait
push
es
aam
pop
int3
adc
testb
cmc
xchg
or
inc
fs
jmp
stos
aas
aam
sub
push
mov
in
test
jle
ret
pop
lcall
adc
outsl
or
push
pop
popa
dec
sub
xlat
mov
or
sub
or
add
sbb
in
sbb
adcb
jne
push
add
lcall
mov
xor
enter
lods
cmp
movsl
in
mov
push
imul
sar
das
dec
loop
pop
repnz
loop
inc
jnp
lock
sarb
sbb
sub
push
pushf
push
push
dec
and
cmc
mov
loopne
xor
enter
notl
jmp
fwait
mov
aad
std
mov
cs
adc
sbb
xchg
adc
inc
fucomip
cmpsl
popf
or
jp
and
mov
pushf
leave
ficoml
sbb
xchg
insl
mov
and
fbstp
jle
pop
sub
fdiv
stos
dec
and
gs
shrl
xchg
popf
xor
push
stos
bnd
push
test
adc
int
jmp
push
sub
int3
clc
cli
cli
mulb
push
lea
pop
xlat
mov
pop
xchg
cmpsl
mov
cmpsb
daa
icebp
pop
repz
cmp
jge
push
cmpsb
xor
sarb
aaa
pop
xchg
test
pushf
outsb
ja
mov
fcmovnb
aas
jg
lahf
or
fdivr
pop
test
push
std
incl
fcomi
out
sahf
mov
or
shrl
sbb
mov
test
incl
pop
icebp
push
data16
cld
inc
mov
int3
or
adc
adc
imul
in
aas
dec
in
xor
bound
pop
divb
pop
cld
xor
xchg
xor
punpckldq
shr
insb
ret
frstor
gs
scas
mov
ds
dec
les
fstpl
jmp
inc
popa
test
and
or
mov
inc
mov
mov
mov
mov
test
jl
js
daa
inc
mov
ds
fs
in
jnp
lcall
cmc
jle
dec
arpl
imul
mov
pop
inc
loope
rcrl
inc
xchg
and
cmpsb
mov
movsb
push
inc
dec
sub
xor
lret
in
inc
fwait
sub
jmp
das
clc
hlt
pop
add
daa
mov
repz
sbb
rorb
inc
ds
mov
fisubrs
stos
add
mov
xchg
jg
sahf
dec
mov
mov
push
loop
lcall
adc
and
mov
mov
xchg
lods
xorl
pop
xor
outsb
cmp
bound
mov
xchg
jge
add
arpl
cvtps2pi
sub
mov
adc
fbstp
inc
cwtl
dec
lock
mov
cld
insl
stos
lock
inc
fidivs
sub
jo
and
lahf
xchg
sbb
insl
mov
mov
sub
inc
xlat
out
push
popf
sub
jg
and
icebp
adc
sub
mov
cmp
stos
sub
xchg
shrl
stos
cli
lods
xchg
cmp
add
adc
xor
inc
movsb
add
dec
push
test
addb
inc
cmpsl
inc
test
xchg
out
dec
loopne
jbe
sbb
dec
push
jnp
cmp
mov
pop
arpl
mov
hlt
push
jnp
jmp
mov
out
in
xlat
lcall
fdivl
push
jle
fucomp
push
mov
cli
aaa
stc
mov
jl
iret
pop
out
inc
jp
push
mov
call
ja
ja
addr16
mov
push
jne
aad
std
push
je
dec
sarb
andb
out
ss
aas
test
and
push
ror
js
cli
dec
inc
fbld
mov
cmp
mov
dec
dec
add
hlt
mov
dec
xchg
scas
sub
ss
mov
jle
inc
ja
add
cli
push
cmp
icebp
daa
jno
push
ja
test
pop
or
int3
sbb
xor
insl
out
jp
pop
cs
cs
int3
or
mov
xor
fstpl
cmp
and
sar
fldl
jl
cmc
sbb
rol
ficompl
or
cmc
lret
sub
ljmp
jo
mov
in
addr16
ja
rcll
cmpsb
inc
insb
cmp
fmull
ficomps
outsb
jp
repnz
aas
xorl
dec
push
dec
mulb
lock
xchg
xor
pushf
ss
pushf
in
ja
jnp
pop
xor
sbb
loope
xor
dec
adc
cmc
bound
xchg
push
bound
frstor
testb
cmpl
repz
mov
push
shr
xchg
jbe
push
daa
sbb
rcrb
in
repnz
jbe
pop
pop
cwtl
je
add
cmp
xchg
inc
push
cmp
daa
add
cmp
push
cmp
jns
icebp
sub
xchg
daa
xchg
cmp
arpl
notl
mov
and
mov
stos
fwait
lods
xorl
pop
pop
aas
xor
lcall
loop
adc
jb
mov
pop
add
rcrb
xchg
mov
or
lret
fs
ror
in
mov
sub
ss
adc
or
inc
pusha
push
sbb
sub
call
hlt
decb
cli
and
jmp
int3
fsubs
mov
insl
shlb
push
mov
inc
gs
pop
and
jae
sti
jmp
or
pop
push
dec
daa
enter
ds
xchg
cmp
mov
rcrl
inc
orb
stc
fisttps
dec
stos
lds
lods
inc
mov
lods
popa
cmc
sbb
insb
out
loopne
mov
jmp
mov
dec
ja
push
cmpsl
pop
insb
inc
or
cli
push
out
negl
mov
out
insl
cld
inc
adc
into
inc
imul
jae
leave
and
jb
repnz
jo
adc
into
dec
xchg
and
inc
ror
cmpsl
pop
mov
into
out
push
mov
push
lcall
mov
adc
xchg
and
popf
mov
out
jmp
in
mov
popa
insb
jp
cmp
push
xor
test
movsl
cs
pop
xchg
lea
inc
xor
jns
dec
mov
inc
movsb
clc
jg
mov
mov
pop
movsb
mov
outsl
push
dec
cmp
scas
lret
mov
and
lcall
push
dec
out
mov
inc
cld
and
pushf
out
sub
xchg
push
push
mov
jg
xchg
mov
or
mov
fwait
mov
or
lods
xchg
pop
ret
cmpsb
and
stc
hlt
mov
inc
shl
cmp
inc
ja
enter
jo
cs
jo
iret
and
enter
add
or
inc
dec
rcr
aaa
in
fs
push
hlt
outsl
mov
popa
outsb
imul
mov
mov
adcb
mov
jo
fs
testl
loop
add
ret
jg
imul
subb
sbb
or
bound
lods
and
fstpl
cmp
mov
pop
pop
jp
mov
out
js
push
sti
or
jmp
push
scas
add
dec
add
insl
pushf
mov
jne
mov
loop
mov
push
mov
loopne
cltd
iret
ret
xchg
inc
rorb
push
or
pop
loopne
rcll
fwait
push
or
mov
xchg
faddl
sbb
cmpsl
jle
push
mov
jl
jle
ss
adc
lds
and
mov
jne
int3
fldenv
xchg
js
xorl
mov
mov
icebp
or
xchg
mov
mov
cmpsl
mov
push
sbb
je
or
xchg
sub
adc
bound
dec
and
shlb
je
fadd
push
popa
dec
cmp
rorb
sbb
movsb
addb
out
push
sbb
mov
pop
sbb
xor
or
and
inc
outsb
push
in
mov
rcrb
fmuls
pusha
mov
out
stc
xor
or
or
out
push
cmp
gs
pop
sti
inc
lret
fsubrl
push
icebp
push
jo
imul
aaa
subb
out
sub
lods
mov
inc
mov
jle
jne
rcrb
fs
stc
aad
hlt
pop
sbb
mull
les
in
popf
pop
cmp
dec
push
mov
mov
adc
xor
lods
mov
stos
andb
stc
add
xchg
lods
jno
sub
call
call
and
jbe
fcmovnb
and
inc
sti
xor
xchg
push
daa
aaa
xorb
in
mov
leave
scas
mov
ljmp
and
cld
xchg
sbb
xchg
std
pop
jne
cmc
mov
stos
rcrl
scas
das
lcall
dec
adc
xchg
add
jbe
ret
and
mov
mov
loopne
sbb
or
loopne
mov
lahf
sbb
out
add
inc
xchg
in
filds
mov
imul
mov
dec
inc
sub
stos
add
sub
rorl
push
repnz
xchg
xor
int3
iret
mov
pusha
repnz
lahf
inc
jbe
push
jl
sbb
shr
and
push
pop
or
and
and
vorps
dec
jle
and
sbb
mov
push
fwait
jge
scas
inc
mov
push
push
jno
scas
stos
pop
jmp
test
outsl
sub
mov
sub
test
and
dec
es
adc
repz
les
push
push
scas
and
jno
pop
dec
insl
xor
out
movsb
cli
mov
mov
dec
rorl
push
or
lcall
lock
test
add
push
add
push
push
cmpsl
xor
fistl
imul
ss
mov
inc
mov
addr16
adc
mov
out
mov
xchg
in
pop
cwtl
pop
popf
add
movsl
push
ljmp
mov
in
push
push
dec
jl
sbb
mov
hlt
and
xchg
inc
sub
dec
out
into
pop
bound
adc
pop
push
mov
xchg
mov
xchg
and
es
sbb
lods
pcmpeqw
add
aam
and
aaa
repz
adc
shll
lea
sbb
mov
cld
lret
inc
ds
outsb
movsl
cmp
and
flds
pop
push
ret
cld
or
dec
jbe
cmp
leave
addr16
and
mov
cld
and
jl
lea
bound
cmpsb
outsl
scas
mov
or
fwait
stos
jp
les
jmp
add
repz
addr16
cmpsb
fadd
rorl
or
addr16
xlat
mov
jge
jmp
dec
in
addb
or
jns
add
lock
push
jno
jno
sbb
outsb
mov
out
sub
les
jmp
jmp
rorl
pop
aaa
enter
ds
jns
mov
testl
xchg
pop
mov
mov
inc
leave
jg
cmp
mov
and
mov
out
pop
cld
jmp
insb
jae
inc
ja
dec
pop
lds
call
shll
sub
iret
mov
stc
xchg
inc
daa
xorb
xor
subb
sub
out
loope
push
inc
shl
fsubrs
int3
dec
ds
mov
movsb
ja
out
les
jg
cmp
dec
mov
iret
and
xchg
push
popf
fistl
adc
adc
or
sub
jp
jo
push
pop
icebp
pop
rcll
test
loope
jge
lahf
es
aam
scas
inc
std
js
mov
mov
ljmp
fsubrs
stos
mov
push
dec
aaa
data16
ror
pusha
std
andl
out
cmp
std
jge
ljmp
mov
mov
cmpsb
js
rorl
mov
sahf
test
fldl
fstpt
pop
test
adc
pop
or
mov
cmc
movsb
std
movsb
insl
jge
xorl
sub
cld
movsb
into
dec
bnd
jle
jbe
nop
fwait
rol
loopne
in
push
stos
movsb
mov
repnz
sub
ret
repnz
adc
rcl
cmp
bnd
lods
add
andb
or
jg
scas
fcompl
mov
mov
pop
mov
mov
pop
xor
and
rcll
es
push
sbb
or
incl
not
sub
pop
pop
mov
shll
fwait
mov
ret
rcrl
xchg
adc
xor
or
not
and
dec
shll
ja
or
outsl
inc
cltd
movsl
and
lods
ss
leave
test
iret
paddsw
pop
repz
adc
ljmp
bound
hlt
aam
pop
in
adc
inc
mov
xor
shl
sub
lcall
into
push
out
mov
mov
jns
mov
pop
xchg
cli
dec
dec
mov
fs
nopl
pop
mov
add
loopne
pop
mov
inc
or
loope
pop
cmp
push
jne
mov
mov
xor
mov
xchg
test
xchg
add
or
xchg
mov
cmc
int
jb
stos
xchg
or
lds
push
movsl
popf
or
out
testl
sbb
pop
lock
adc
sub
xchg
push
mov
fidivrl
mov
pop
jge
xchg
out
push
add
dec
imul
mov
fisubrs
in
pop
sbb
xor
in
mov
in
xchg
les
sbb
mov
push
jae
sbb
push
outsl
sahf
jno
cbtw
pop
dec
scas
xor
test
pusha
sbb
jns
push
ret
xchg
daa
push
pop
mov
js
repnz
mov
sbb
mov
mov
sub
std
arpl
pop
adcl
mov
push
lret
iret
outsb
pop
jecxz
mov
mov
das
jae
rolb
daa
jns
pushw
sbbl
push
fs
arpl
xchg
mov
ret
push
lds
test
aam
or
out
ss
dec
sub
rolb
pushf
aas
lods
cmp
cmp
into
mov
pop
jbe
mov
push
cs
mov
inc
outsl
pop
xchg
repnz
mov
scas
mov
jp
cmp
outsl
or
gs
add
push
push
sub
fcomps
shlb
pop
movsl
repnz
ret
mov
cmpsl
dec
in
filds
in
in
adc
popl
ds
clc
cli
sti
sbb
scas
or
mov
mov
in
mov
cmpsl
jno
popf
mov
lock
inc
ljmp
and
mov
and
insl
jo
jg
mov
mov
rclb
xor
xchg
cld
add
pop
mov
ss
xchg
pop
outsl
push
sub
in
fs
push
push
insb
mov
sub
and
or
js
out
lea
cmp
dec
jg
inc
ficomps
jg
jge
xchg
adc
push
and
out
lock
mov
xlat
pushf
mov
pop
pusha
lock
mov
movsl
cs
inc
lock
or
shlb
push
aad
pusha
aam
xor
sarb
sub
and
out
adc
jo
mov
pop
cmpl
adcb
pop
icebp
sub
xchg
cmc
push
inc
fnsave
iret
jmp
dec
mul
cmp
in
sbb
sahf
adc
imul
loope
int3
mov
sbb
mov
out
xchg
dec
or
or
cmp
lea
dec
mov
push
or
jmp
cmpsb
lcall
cmp
sbb
mov
xor
sub
mov
inc
sbb
loopne
push
fists
sbb
push
pop
xor
daa
pushf
lea
inc
cltd
xor
push
pop
outsl
mov
inc
inc
xchg
pop
in
pop
dec
pop
mov
mov
dec
pop
add
in
mov
lret
orb
sbb
push
ret
mov
movsb
incb
cltd
adc
xor
adc
lods
push
mov
pop
outsb
lcall
add
push
inc
pop
mov
clc
push
xor
add
cli
inc
insl
cmp
enter
pop
int
sbb
pop
cmpsl
rcrl
scas
inc
mov
xchg
xchg
ljmp
xor
sub
xchg
fiaddl
icebp
shll
inc
ds
jmp
clc
mov
cld
inc
mov
xor
cmp
mov
push
jl
push
push
test
sahf
arpl
sarb
outsb
into
dec
adc
mov
mov
cmp
cmp
dec
in
fstpt
fwait
sbb
das
add
dec
sti
pop
mov
ret
in
jno
dec
mov
daa
clc
pop
xchg
push
and
adc
fmuls
pusha
sub
or
rcrb
lock
int
push
inc
and
mov
pop
test
pop
cmp
pop
mov
gs
xor
sub
test
xor
or
mov
mov
filds
add
mov
xchg
pop
insb
out
sub
cmpl
or
mov
jecxz
sub
pushf
pop
sahf
ja
or
sbb
testl
inc
pop
adc
xor
loop
loopne
xchg
push
outsl
dec
xor
pop
jnp
mov
dec
dec
cmpsl
fmul
lret
adc
cmp
adc
rcll
mov
in
adc
dec
cmovp
mov
xchg
es
mov
ja
inc
sbb
ss
insl
mov
pop
fbld
lock
sarb
mov
and
sbb
bnd
push
fcoml
pop
ds
xchg
inc
in
sbb
test
mov
jecxz
das
xlat
popf
and
in
inc
adc
lods
xorl
jge
sub
mov
or
or
or
pushf
xor
mov
aaa
or
push
xor
test
out
out
scas
dec
fmuls
cmpsl
subl
sbb
enter
cmpsb
mov
push
jl
jbe
add
inc
das
sub
mov
cmp
jne
fbld
outsb
idiv
sarl
mov
es
sbb
pushf
icebp
or
sub
insb
xlat
sbb
out
popf
mov
subb
fistpl
jnp
ss
cld
pand
jecxz
or
mov
xlat
into
and
inc
ret
fistpl
pop
ja
jge
push
into
or
add
inc
cmp
or
les
jne
sbbb
sti
pop
inc
add
iret
inc
adc
rol
mov
inc
dec
cmp
addr16
inc
push
mov
cld
jnp
adc
adc
pop
sahf
push
push
inc
mov
cltd
aaa
inc
mov
push
psubq
in
jmp
xorb
pushf
fwait
jmp
push
jmp
xchg
clc
imul
mov
inc
das
mov
jno
jecxz
out
mov
ljmp
aam
frstor
hlt
mov
leave
cwtl
cltd
adc
clc
xchg
lods
xor
outsl
bound
out
mov
dec
adc
add
cmpsl
pusha
pop
out
sbbl
inc
dec
or
jb
dec
shll
mov
mov
sbb
lcall
or
ss
xchg
xchg
pop
ror
out
push
shl
mov
adc
adc
repnz
fstpt
adc
or
test
test
fs
je
int
rcll
or
inc
pusha
out
ja
call
jp
imul
jno
and
adc
stc
jno
out
push
sti
mov
sub
and
aaa
das
imul
fmuls
jae
sahf
push
cli
mov
fistl
xor
aam
inc
cwtl
adc
ds
pop
lret
dec
scas
fcmovne
in
lods
loope
lret
jge
sub
orb
jecxz
aam
out
test
scas
int
in
jnp
mov
push
xchg
in
or
mov
pop
dec
ror
pop
jne
mov
popf
fisttpll
mov
pop
cmp
cmc
push
out
nop
push
dec
xor
xchg
jns
or
xor
je
jb
sub
adc
mov
or
fwait
mov
push
and
fildl
movsb
test
inc
test
inc
movsl
dec
pop
or
stc
fnstenv
hlt
inc
lcall
je
cmc
xchg
andb
push
mov
lret
xchg
add
test
mov
fs
mov
mov
nop
and
fcmovne
lahf
push
lock
and
jbe
popf
jp
das
sahf
daa
mov
lods
sub
and
aaa
push
push
in
bound
sub
insb
nopl
xor
fsubs
push
scas
cli
mov
xchg
bound
imulb
sub
jno
rcrl
stos
aam
loop
mov
push
add
cmp
inc
sar
stos
and
or
cmp
jle
and
call
nop
push
sbb
cmpsl
jle
pop
mov
mov
mov
sbb
inc
jecxz
data16
xor
sub
sbbl
mov
adc
lahf
sti
mov
xchg
cmpsb
rorl
popl
loope
add
cmp
pop
sbb
lock
jae
push
sbb
stos
xchg
push
into
inc
mov
imul
ds
pop
addr16
stos
lea
xchg
fs
xor
xor
in
ret
outsb
pushf
insb
imul
add
jo
adc
pop
adc
nop
jbe
lcall
fwait
ja
jge
stos
aad
aaa
in
fdivl
icebp
fstps
lcall
dec
jbe
sub
sub
out
les
push
int3
and
rcr
sbb
sub
addr16
xlat
mov
mov
sub
adc
push
in
clc
adc
xor
inc
out
repnz
mov
and
mov
xor
lods
adc
movsl
mov
push
out
test
lret
sti
add
dec
xlat
mov
mov
push
gs
and
cmp
int
jo
pop
dec
xor
add
xor
rcrl
iret
bswap
subb
arpl
imul
sub
push
jo
pop
ret
sbb
testl
xchg
fwait
push
rorl
dec
out
jo
fdivl
in
jb
stos
mov
mulb
adc
ss
inc
das
inc
cwtl
aad
cltd
mov
sbb
arpl
inc
or
stos
cmpsb
out
xchg
imul
sbb
rcrb
aas
jge
xchg
jbe
push
aam
dec
lods
jb
ret
mov
dec
mov
add
pusha
into
out
jecxz
push
js
stos
mov
jp
in
pop
mov
fisubrl
cmp
mov
dec
ret
sbb
shrl
dec
push
add
mov
and
xor
hlt
pop
xor
lods
loope
cmp
inc
cmp
sbb
repnz
mov
or
jecxz
imul
jb
push
repz
fsubs
push
fistl
jns
decb
xor
adc
stc
int3
mov
mov
fs
sti
mov
cmp
and
inc
mov
inc
data16
ds
ja
call
jecxz
incb
std
or
pushf
push
scas
out
and
sub
loop
mov
fwait
sarb
xor
nop
jne
jp
nop
push
out
cmp
push
mov
and
and
jbe
xlat
stos
fsubp
xchg
adc
pop
sub
fisubs
adc
iret
movsb
mov
imul
shlb
adc
inc
xor
lods
rcrb
mov
inc
lock
xor
lods
push
push
mov
lret
xchg
jp
mov
fmuls
cmpsb
ds
lods
xchg
loope
or
sbb
rcll
into
clc
aam
fisttps
into
scas
cmp
mov
into
bound
fstpl
or
cmp
dec
jns
push
int
dec
push
jge
push
scas
loopne
cmpsb
jbe
xor
aas
jl
mov
arpl
dec
push
and
add
fcom
pop
cwtl
ljmp
push
sub
xchg
xor
dec
and
arpl
adc
sbb
adc
sbb
mov
adc
or
pop
add
imul
icebp
gs
xchg
sarb
add
mov
xchg
xchg
mov
sahf
cltd
push
mov
push
andb
ret
pop
mov
in
lahf
adc
sbb
pop
std
cwtl
push
push
push
xchg
ja
lcall
sbb
outsl
cmp
mov
test
xor
cmpsb
push
outsb
negb
sti
iret
daa
or
add
movsl
sub
sub
mov
jo
mov
scas
pop
stos
push
inc
clc
sub
cmp
xor
mov
popa
jo
scas
mov
mov
fildll
outsb
push
cli
mov
adc
ja
jb
xorl
div
sti
sahf
shl
mov
popa
imulb
jge
lret
or
push
js
mov
or
std
xor
xchg
mov
push
lcall
daa
fisubrl
add
mov
mov
stos
scas
or
std
mov
mov
mov
pushf
push
sbb
sbb
sbb
or
pop
enter
scas
insb
clc
cmp
addl
mov
fistl
fucomip
test
push
jle
lea
inc
jg
arpl
or
cmp
lea
sub
mov
leave
cmp
jb
test
cld
xor
jb
std
mov
sub
cmp
add
call
call
scas
sub
idivl
and
test
aad
stos
clc
sarl
int3
addb
add
ficompl
xor
sbb
adc
pop
roll
mov
sub
mov
lock
leave
ljmp
mov
sbb
push
jb
imul
and
or
bound
shr
xchg
cmp
and
mov
addr16
sbb
mov
xor
lods
xor
add
jb
dec
and
mov
sbb
push
and
js
jb
sbb
repz
popa
mov
mov
adc
mov
lahf
stos
jne
lahf
scas
stos
or
push
lods
xchg
lcall
stc
xor
xlat
inc
or
xchg
clc
pop
dec
imul
lods
cmpb
sub
or
or
mov
jne
and
jl
test
dec
add
mov
stos
repz
in
xchg
dec
pop
dec
cs
push
push
jecxz,pt
ret
or
jl
out
das
movsl
mov
mov
lods
and
ds
jmp
shlb
lret
subl
lret
adc
jne
inc
loopne
or
mull
out
sub
cltd
enter
mov
cld
xor
mov
test
ss
jno
xor
insb
add
inc
test
dec
lods
push
les
repz
daa
xchg
xchg
cwtl
jnp
aad
ja
repz
push
stos
mov
mov
inc
addl
movsl
cmp
pop
jp
xlat
insb
xlat
push
in
cmpb
insb
mov
mov
leave
inc
jae
ret
pop
adc
out
jecxz
or
fnsave
aad
insl
push
mov
dec
adc
add
cmpsl
mov
sub
aad
fmull
pusha
daa
cmp
or
mov
cmp
imul
cwtl
test
sub
insl
popa
mov
sti
xchg
xor
mov
in
dec
push
inc
dec
sub
jo
int3
inc
mov
pop
fists
mov
inc
mov
lods
ror
sub
xor
ret
stos
cmp
shll
repnz
lds
pop
mov
test
pop
cld
push
jo
fwait
xchg
xchg
push
lret
std
and
icebp
cmp
scas
push
pop
cld
and
das
fdivrs
fucomi
and
add
mov
dec
stc
test
push
pop
add
mov
int3
sub
rcll
inc
iret
ja
ret
pop
out
push
mov
sbb
jp
scas
popf
push
push
out
loope
inc
aaa
adc
lods
dec
sub
xor
imul
ret
test
lret
imul
cmc
inc
sub
lods
jmp
ret
std
mov
push
mov
mov
insl
outsb
xchg
pop
dec
test
mov
pushf
jl
push
int3
ja
add
jecxz
call
inc
pusha
lret
lahf
or
ret
movsb
nop
fidivrl
dec
fdivl
scas
push
popa
or
mov
outsb
mov
xchg
xor
and
jne
loop
push
mov
inc
popa
and
xchg
dec
inc
out
or
scas
jp
aaa
stos
pop
in
popf
dec
loopne
filds
jnp
cmpsb
mov
xchg
nop
test
jp
xor
add
ret
cwtl
inc
sub
scas
jo
jg
shl
xor
lret
xchg
and
xchg
push
mov
les
jbe
jae
movsb
es
dec
outsl
jle
int
cmp
pushf
cmp
or
adc
xchg
ret
test
cltd
sarb
jno
shl
orb
dec
push
mov
nop
push
jo
arpl
adc
pop
mov
mov
cltd
sub
popa
hlt
in
fbstp
jmp
inc
add
js
mov
mov
or
addr16
pop
ret
enter
sbb
test
xor
push
lea
in
imul
int
mov
jmp
jmp
pusha
lret
mov
jno
mov
mov
or
sbb
and
ds
and
decl
xchg
mov
or
sbb
xchg
aaa
test
pop
fdivrl
out
and
sub
push
rcl
inc
in
loopne
int
inc
aad
mov
das
mov
xlat
cs
aam
push
repz
aas
movsb
pop
adc
imul
rcr
add
xchg
cmp
dec
add
cmp
lret
adc
pop
into
iret
test
xchg
push
push
dec
aam
adc
das
inc
cmpsb
sbb
dec
icebp
jmp
test
pop
dec
push
jmp
cmp
lahf
popf
jb
insb
xchg
jo
repz
inc
insl
std
jge
mov
pop
int
xchg
sub
or
push
jecxz
pop
mov
test
mov
inc
ljmp
inc
mov
out
dec
and
or
in
sarb
idivb
rcll
mov
or
out
mov
scas
mov
out
adc
icebp
mov
cwtl
cwtl
icebp
sub
out
jmp
jb
mov
test
nop
push
out
flds
leave
outsl
pushf
push
dec
aad
arpl
lret
mov
filds
push
scas
leave
add
or
xchg
inc
gs
mov
outsb
dec
rcrb
std
and
outsl
repz
hlt
orl
sbbb
mov
xor
mov
cli
inc
mov
xchg
add
lock
xchg
sbb
or
daa
movsl
xchg
je
adcb
fisttpl
pop
rcrl
insb
arpl
test
sbb
jmp
fwait
and
jge
inc
sub
add
les
sahf
mov
cmc
sbb
mov
xchg
dec
sbb
pushf
repnz
pop
out
sbb
lock
cmpsl
mov
xor
jmp
cmp
pop
mov
jp
mov
int3
lock
jno
mov
pop
pop
insb
mov
jne
adc
fisubl
and
aad
jo
es
bound
mov
cmpl
jp
insl
adc
fiadds
pop
mov
fbstp
cmpsb
mov
popf
outsb
inc
jmp
mov
enter
sub
lds
call
cmp
mov
ljmp
mov
popa
in
mov
scas
out
xchg
adcl
push
inc
mov
pop
fs
pop
sub
add
sub
lret
insb
cmp
rorl
andl
add
xor
xor
orl
sbb
mov
mov
jmp
xchg
fsubrs
in
mov
lret
or
dec
maxps
pop
fsubl
int
repnz
and
mov
pop
or
sbb
lds
lahf
scas
xchg
daa
and
cmp
sbb
jae
inc
adc
sub
pusha
ror
jnp
ds
shlb
lock
out
inc
xor
fnstcw
aas
aaa
ucomiss
mov
jle
add
jae
inc
stos
sub
xor
dec
jbe
movsb
scas
dec
jle
loopne
icebp
cmp
hlt
sbb
jp
into
in
adc
out
das
cmpsl
push
mov
jp
xchg
outsb
es
shrl
mov
lods
js
and
notb
cmc
xchg
dec
sbb
mov
cltd
sub
push
mov
std
movsb
daa
inc
xlat
nop
sti
xlat
das
push
jno
mov
imul
inc
inc
mov
std
addl
jne
pop
mov
imul
xchg
xor
xchg
jbe
lcall
or
and
xchg
jo
dec
mov
pushf
pop
in
repz
lcall
lods
and
jecxz
jae
loopne
fidivl
sub
outsb
xor
leave
jnp
adc
dec
lods
xor
jmp
int
cld
pop
push
sub
mov
std
or
ficoms
outsb
adc
je
and
iret
and
insl
cwtl
jae
xchg
aas
mov
push
hlt
mov
push
fadd
fisubs
aam
add
or
mov
xor
rcrb
mov
sarl
pop
push
jo
scas
mov
xor
lahf
shll
pop
xor
and
ljmp
out
lea
or
cmp
pop
pop
les
pop
push
je
jecxz
pop
mov
xor
mov
pop
dec
mov
aam
pop
scas
inc
xchg
mov
hlt
adc
clc
dec
jmp
mov
pop
add
cmp
shl
adc
pop
out
add
test
cmp
cmpsl
sbb
popa
dec
xchg
incb
pop
jno
stc
mov
sbb
xrelease
es
outsb
rolb
mov
es
dec
ds
mov
pop
jbe
rcrb
add
mov
add
cli
fsubs
negl
jl
out
xor
idiv
cmp
mov
repz
lods
pop
scas
lea
mov
mov
xchg
mov
mov
xor
sbb
insb
cmpb
les
popa
mov
in
pushf
adc
sub
fwait
jne
btc
xor
cmp
adcb
xchg
dec
ss
stos
ret
iret
mov
xlat
sub
popa
es
push
adcl
xchg
mov
insb
les
mov
pop
in
div
test
movsl
sysret
fsubrs
jp
nop
fs
lds
sahf
aaa
mov
or
mov
cwtl
xchg
in
movl
or
scas
or
pop
mov
lea
in
mulb
or
in
push
lcall
xchg
mov
inc
pop
sahf
fisttpl
and
das
mov
xlat
pushf
mov
sbb
xchg
add
pop
adc
lcall
xor
iret
mov
out
cmp
fstpt
add
jmp
or
push
shrb
sbb
xchg
aaa
sbb
xchg
xor
stos
ds
fwait
xor
sbbl
push
dec
dec
mov
xlat
push
sub
pop
mov
je
lds
in
repz
mull
inc
and
shlb
dec
incb
push
cmp
jge
cmovb
xchg
lock
stc
clc
xchg
and
mov
in
cmp
mov
jmp
pushf
addr16
movsl
loope,pt
mov
fscale
lock
ret
inc
mov
dec
cwtl
mov
stos
sbb
es
loop
repz
pop
and
or
dec
adc
cmp
pusha
jecxz
inc
fwait
push
pop
ficoml
mov
mov
testb
cmp
call
add
outsl
pop
pop
pop
mov
bound
or
adc
pop
push
mov
mov
jo
cmpb
in
jl
pop
cmp
push
push
inc
ljmp
mov
jbe
sbb
and
movsl
sti
mov
pop
sahf
out
sbb
jo
cmpsl
cmp
push
repnz
test
mov
pop
lea
ja
mov
jle
add
mov
pop
and
jle
stos
pushf
mov
lock
sub
and
xor
cmp
outsl
sub
cltd
push
jge
insl
mov
lea
movsl
push
push
stos
pop
and
lds
or
stos
inc
adc
out
adc
test
cwtl
int
shlb
pop
lret
loope
jp
or
jo
xor
xchg
rolb
xor
add
dec
sbb
or
mov
xor
pop
mov
insl
orl
jp
inc
testb
sub
cmp
and
push
aas
pop
lods
sub
movsb
insl
cli
cld
xchg
fcomps
out
add
sub
lret
stos
and
lock
push
cmp
aaa
fmul
mov
jne
push
sub
dec
inc
xlat
xlat
xor
lods
cmp
mov
sarl
jl
jmp
xlat
cltd
dec
and
movsl
cmpsl
jns
lods
jp
xchg
mov
xorb
les
dec
pop
mov
aad
fistpll
leave
or
ljmp
add
icebp
push
jne
je
shll
ret
mov
ljmp
cmp
inc
jb
xchg
xor
bound
sub
inc
inc
imul
hlt
add
xor
sti
hlt
mov
lcall
lods
lods
cmc
add
pop
test
inc
pop
cmpsb
fwait
jmp
stos
lret
cli
fildll
int
rclb
movl
cmp
dec
and
fdivl
loope
enter
adc
cltd
jo
jbe
aas
cs
jl
push
push
ja
int3
xchg
iret
fwait
movl
push
fldcw
push
sbb
into
into
lret
int
fldcw
mov
hlt
jno
lods
mov
adc
in
cmp
push
add
sub
stc
dec
cmpsl
ret
out
aaa
and
mov
xor
push
dec
pop
rcl
xor
pop
out
ljmp
sbb
mov
testb
mov
mov
hlt
sub
mov
jmp
mov
cli
push
push
test
add
and
and
stos
pop
push
nop
adc
loopne
jecxz
lods
sti
fisubrl
xchg
adc
pushf
cwtl
mov
push
cmp
insl
ljmp
roll
aam
out
mov
dec
out
dec
inc
insl
fmuls
aam
mov
xchg
jns
sub
jp
mov
push
mov
cmp
sub
push
ja
mul
fdivl
rcr
ret
arpl
ss
inc
cmp
movb
dec
cmp
sub
jl
cmpsl
dec
add
add
push
push
mov
dec
js
dec
lahf
divl
cmp
xchg
mov
jg
aad
shr
or
mov
adc
into
mov
adc
in
xlat
and
mov
out
testl
arpl
insl
pop
in
ja
and
push
test
scas
lcall
mov
mov
fldl
leave
sub
rol
rol
aad
cmp
xchg
and
lods
sub
aas
popf
mov
mov
loope
xchg
inc
jno
sub
insb
or
insl
mov
test
pop
jnp
mov
mov
mov
sub
mov
add
push
pop
mov
sbb
pop
fwait
mov
std
in
sbb
push
xlat
loop
add
fistps
sbb
popf
pusha
cld
mov
daa
mov
jne
xor
iret
cmc
mov
cmp
jne
std
and
xor
es
push
push
movsb
or
insb
sbb
aaa
data16
cmpsb
push
jb
fldl
adc
jg
and
add
int
pop
test
fsubrs
insl
insb
imul
in
xor
les
lret
add
mov
lods
dec
pop
pop
sbb
leave
lock
mov
sub
sbbl
test
test
and
scas
push
dec
lock
aad
repnz
test
std
xor
clc
mov
add
cs
xor
cmp
adc
mov
stos
xlat
popa
pop
mov
jmp
pop
outsl
call
into
sbb
pop
jp
jle
addl
fwait
push
nop
jns
jbe
and
sti
cltd
lea
jae
leave
dec
hlt
fisubrl
mov
or
divb
or
jb
mov
xchg
adcb
mov
les
iret
add
mov
and
int3
pop
es
inc
hlt
fiaddl
rol
in
add
jl
cmp
and
push
pop
cmpsl
mov
rorl
lret
cmpsl
xor
in
mov
cld
mov
cli
popa
pop
or
jecxz
das
imul
shl
outsb
cmp
movsl
ss
cmp
jle
arpl
add
jbe
lret
mov
jmp
sub
dec
cmp
pusha
fimuls
outsl
fdivp
cli
ret
scas
es
ret
insb
or
mov
dec
and
hlt
xor
pop
mov
fdiv
sbb
mov
add
loopw
iret
out
lds
lret
cmp
jo
adc
out
cld
mov
dec
clc
sti
popa
fstps
mov
pop
fiadds
lcall
cli
jmp
push
sbb
xor
cmp
cmpsb
repnz
push
cmp
mov
lea
out
fsubl
xor
ljmp
out
jp
pop
lret
stos
cs
insl
clc
xor
jae
sub
mov
jbe
inc
idiv
dec
les
mov
push
jo
fwait
jae
add
in
aam
loop
imul
and
scas
xchg
scas
ds
dec
call
push
mov
lods
jl
lcall
test
jg
adc
int3
push
rorl
rcrl
push
scas
ret
push
stc
pop
les
push
call
ds
iret
rcrl
mov
pop
jae
mov
sbb
xor
cwtl
andl
das
scas
inc
xor
out
scas
aas
sub
jle
jbe
stc
loop
aad
mov
bound
je
lcall
loope
pop
sarl
sar
mov
std
sub
das
ret
inc
jmp
ficoms
sbb
aas
movsl
sub
stos
adc
adc
xchg
fimull
dec
fldcw
lret
loop
inc
mov
mov
cmp
inc
dec
shlb
jge
xchg
sbb
mov
daa
mov
pop
int3
mov
nop
pop
icebp
jg
adc
adc
mov
addr16
push
mov
pop
cmpsl
mov
inc
sub
das
cli
pop
icebp
setbe
dec
cltd
mov
cmp
xor
cwtl
in
mov
out
add
icebp
xchg
sbb
in
push
jae
push
bnd
pop
jns
jb
stos
mov
jnp
xchg
add
or
add
sbb
nop
jge
sti
decb
dec
sahf
leave
mov
adc
push
lds
jb
sti
sahf
sub
cmp
push
lods
mov
in
cli
or
les
cs
push
add
dec
std
ja
stos
mov
fnstsw
popa
pminub
mov
lods
dec
mov
out
inc
push
xchg
and
jo
iret
out
insb
call
rep
cmp
inc
cmp
xor
pop
sub
sti
les
int
iret
out
imul
out
mov
mov
lcall
xor
sub
and
pop
jge
ret
lds
iret
in
outsl
iret
hlt
subl
xor
xor
cmp
and
cltd
jne
mov
or
dec
lcall
pop
push
loope
lock
adc
and
pop
pop
adc
cmp
xor
mov
popa
pop
jmp
clc
cwtl
lds
lock
lods
scas
aaa
nop
sub
enter
inc
jle
mov
sbb
add
xlat
inc
jmp
add
pop
lret
pop
ss
stos
mov
adc
test
xchg
aam
addr16
xchg
ljmp
adcl
jae
aam
pushf
add
pop
or
ja
adc
sbb
jo
xor
mov
fwait
xorb
sub
xchg
and
movsb
cld
sbb
daa
sbb
lahf
cld
orb
dec
sub
dec
jno
xorl
adc
inc
mov
test
mov
or
out
or
push
inc
mov
test
or
jns
adc
cwtl
cmp
dec
out
sbb
or
pop
push
pop
sbb
in
mov
push
sbb
insl
insl
clc
ljmp
pop
int
dec
mov
cmp
arpl
movsl
vunpckhps
sub
pop
inc
mov
adc
mov
mov
es
xchg
movl
push
jge
sarl
mov
popf
test
fisubl
or
or
xchg
adc
adc
inc
sub
movsb
ficoml
out
pop
mov
std
cmp
lcall
cbtw
daa
clc
inc
gs
jge
dec
or
and
roll
scas
inc
lods
jns
mov
cli
stc
es
mov
fdivrl
ljmp
loope
mov
cwtl
mov
pop
fstl
mov
cmc
fstl
cli
rcr
das
scas
out
ss
push
cmp
in
sub
jecxz
jmp
push
add
xchg
or
and
dec
fcomip
mov
jecxz
pop
push
lea
iret
into
inc
push
mov
add
inc
jp
ret
sbb
mov
mov
sahf
fs
cmc
bound
push
jl
mov
jne
pop
mov
jb
push
rcll
stc
out
mov
sub
push
std
adc
jnp
outsb
push
out
stos
xor
sbb
pop
cltd
lahf
cwtl
into
je
lds
sbb
jo
or
dec
cmp
sahf
inc
add
imull
popa
add
movsl
cmp
cmpl
push
je
movsl
bound
jp
pextrw
xor
mov
or
fcmovne
fisttps
pop
inc
hlt
push
pop
mov
pop
jbe
mov
stos
inc
pop
sbb
mov
arpl
test
sbb
sub
pop
push
cmpb
cwtl
cmp
bound
aaa
add
loop
idivl
or
jge
xor
pop
stos
sub
lret
gs
jmp
mov
cmp
pop
and
dec
mov
int3
xchg
mov
insb
dec
mov
or
pushf
out
out
inc
outsl
mov
out
or
js
add
dec
fmull
jmp
add
mov
xchg
jbe
out
inc
cmp
mov
sub
repz
push
addr16
icebp
adc
push
mov
in
mov
sahf
mov
ffreep
addb
mov
jge
mov
cmp
cmp
xchg
sbb
test
rcrb
gs
inc
repnz
mov
loope
gs
pop
iret
dec
add
sub
or
shl
xor
sub
cmp
test
dec
pop
pusha
test
repz
cmp
add
adc
cltd
rclb
mov
xlat
push
outsb
in
mov
arpl
repz
or
divl
fistpl
rcll
lods
push
frstor
int3
loopne
lret
jg
clc
aad
ret
stc
in
or
fnstsw
js
pop
jno
xchg
push
fsubrl
mov
les
adc
fimull
xchg
scas
clc
cmpsb
mov
repnz
repnz
sti
xchg
loope
loop
inc
clc
sbb
sbb
push
in
xchg
pop
sbb
popa
mov
inc
adc
in
data16
cltd
out
jle
pop
dec
test
iret
in
sti
lds
loopne
xor
icebp
leave
cmp
jmp
push
ja
sbb
add
outsb
lods
ja
jecxz
repnz
dec
mov
adc
in
push
hlt
enter
pop
dec
lds
popa
mov
call
test
mov
stos
jmp
cvttps2pi
aas
and
push
in
adc
shlb
adc
push
sub
aam
add
lret
dec
ja
jnp
insb
cmp
ss
mov
push
mov
cmc
fcmovb
jo
jecxz
mov
sbb
push
push
outsl
or
jmp
lret
xchg
in
xchg
imul
inc
inc
xchg
sbb
daa
sub
jle
sti
mov
sbb
cltd
cmp
xor
negb
jbe
fsub
push
imul
pop
xchg
filds
int3
jae
xchg
push
adc
mov
lods
addb
mov
dec
pop
mov
jb
dec
sahf
test
jp
mov
cmc
dec
dec
sbb
sbb
xchg
xor
pop
movsb
and
movsl
popf
cli
sub
xor
mov
fistpll
mov
iret
enter
mov
xchg
nop
and
aad
repnz
adc
sbb
ss
movsl
ds
data16
insb
cltd
je
mov
xchg
lea
inc
xor
lods
arpl
adc
mov
inc
mov
outsl
addr16
leave
shl
popa
data16
or
call
push
fldt
sbb
adcb
mov
outsb
orl
rolb
xchg
inc
test
jge
popa
fists
xchg
sbb
jbe
ss
pop
js
stos
ds
xchg
xor
mov
fcom
fs
call
mov
adc
repz
add
jae
inc
xchg
add
in
xchg
loopne
lcall
mov
add
push
into
aaa
ljmp
leave
cmp
or
or
pop
into
or
mov
fmuls
notb
es
adc
fldcw
ja
xchg
popf
xchg
jle
xor
push
cltd
push
into
stc
push
sub
js
xchg
rcll
aad
and
pand
test
pop
mov
push
mov
hlt
mov
sbb
pop
adc
wbinvd
jns
pop
mov
icebp
sbb
rcrl
js
and
sbb
dec
rolb
add
jle
jb
cmp
push
inc
fdivr
or
loope
jns
mov
clc
inc
in
mov
xchg
push
aam
insb
jnp
sub
dec
mov
rcll
jge
adc
xor
lods
push
mov
or
mov
cmc
ljmp
aam
lods
jmp
dec
insl
rorl
cmp
mov
pop
adc
test
fidivl
and
inc
lahf
imul
ljmp
mov
addl
jbe
push
lds
out
cmp
xor
or
adc
xor
inc
pop
ljmp
imul
mov
in
dec
mov
jno
push
xor
loope
push
dec
jecxz
std
and
push
xor
or
or
cltd
xor
jg
inc
int3
aam
repnz
inc
fidivl
inc
xchg
push
cmp
sub
pop
test
je
jp
mov
dec
shlb
jmp
xor
outsb
cmp
pop
adc
js
pop
in
popl
test
fst
push
pop
fs
cmpsb
inc
jmp
ss
jbe
adc
and
jmp
mov
mov
mov
mov
dec
cmpsl
fcompl
jecxz
scas
jg
adc
push
aas
es
mov
movsb
xor
scas
popl
les
xchg
lock
add
add
inc
push
lret
jmp
fs
rcr
icebp
mov
dec
mov
and
pop
in
insb
aas
mov
and
out
outsb
int
sar
xchg
pop
outsb
dec
lret
test
es
shlb
adc
xchg
jg
daa
inc
testb
xchg
sarb
xchg
lret
jle
xor
mov
inc
inc
jo
outsl
mov
pop
xor
dec
arpl
add
popw
js
insb
adc
cs
test
dec
and
or
pop
into
jns
stos
in
adc
jae
ljmp
orb
sub
add
dec
sub
lods
mov
lret
out
data16
scas
inc
adc
cmpsl
mov
ret
clc
outsb
or
push
test
or
popa
jl
or
mov
lea
fimull
pop
cs
inc
push
sub
loopne
sti
jmp
pop
out
outsl
mov
dec
cli
and
jo
rorl
out
mov
push
and
pop
cmp
andl
movsb
adc
cld
sbb
rorl
add
rclb
das
gs
xlat
adcl
popf
jne
jle
je
pop
and
push
xor
int
sub
sbb
loopne
jl
mov
lret
cmpsb
sbb
and
push
fwait
stc
movsb
shlb
xor
dec
push
and
out
cld
daa
stc
push
ret
mov
subb
lock
xchg
mov
and
rorl
or
mov
pop
and
mov
xchg
cmc
scas
mov
pop
pop
mov
out
lcall
lcall
lret
fwait
test
mov
cs
cwtl
lcall
gs
xor
xchg
cmp
jmp
cltd
and
aad
jle
lock
clc
shlb
fldt
add
fldenv
imul
mov
pop
jle
cs
or
nop
loopne
popf
loop
or
mov
push
lcall
cmpsb
out
xor
fbld
inc
fsubrs
mov
pop
or
xchg
cwtl
dec
pushf
xchg
out
mov
mov
jae
mov
xlat
les
stos
fwait
push
and
scas
test
mov
pop
jb
adc
jno
hlt
and
fidivs
push
out
cwtl
cmpsl
shlb
iret
or
mov
cmc
dec
sub
ret
jo
ss
push
pop
rcrl
dec
adc
xchg
and
int
daa
adc
adc
rcll
or
test
ljmp
fldcw
ljmp
cld
rcrb
push
js
jg
cmp
lock
ficoms
inc
xchg
adcl
aad
movsb
and
xchg
push
repz
ret
aam
mov
and
icebp
jmp
jmp
cld
fcoms
inc
mov
scas
cmp
arpl
mov
jnp
movsl
inc
js
inc
sbb
sub
pusha
in
jle
inc
and
stc
fistpll
rclb
adc
lds
cwtl
aad
mov
xchg
lahf
in
adc
dec
xor
fidivs
fstps
sbb
out
stos
xchg
bound
jle
test
cltd
jge
nopl
scas
rcll
xchg
data16
loopne
xor
jne
and
xchg
mov
fcomps
imul
add
jb
xor
jmp
int
and
in
popa
push
adc
enter
xchg
test
push
add
mov
sbb
iret
sub
fwait
cli
cwtl
fildll
imul
pop
pop
and
xchg
xchg
lret
push
xchg
in
fyl2x
mov
test
adc
and
jmp
aas
cmp
push
sbb
or
test
mov
popf
outsb
and
mov
clc
addb
shll
cwtl
push
ljmp
mov
adc
lcall
repnz
mov
fmuls
xchg
jb
jnp
sbb
and
mov
lds
pop
mov
popf
mov
ds
push
roll
aaa
jmp
push
inc
aaa
pushf
push
movsb
sahf
pop
adc
sub
mov
push
mov
mov
cmc
inc
das
aad
add
movsb
add
jno
sub
pop
inc
lock
sbb
loopne
cld
gs
and
arpl
rol
mov
pusha
adc
dec
mov
pop
mov
pop
sub
mov
std
xor
cmp
stos
sub
js
nop
out
fs
mov
cmp
fldenv
inc
adc
dec
sarb
push
mov
and
js
push
shl
je
or
mov
lret
cmc
sar
mov
push
ja
push
fs
loopne
repz
scas
into
mov
dec
jne
push
xor
or
mov
test
les
fsubrl
fidivs
sti
mov
jle
jmp
inc
lods
loopne
sub
xchg
retw
aam
inc
movb
roll
movsl
xlat
and
push
xor
add
addr16
sub
dec
mov
rorl
mov
pop
xor
insl
lret
loop
xor
cltd
cmp
shl
add
sub
and
adc
pop
in
xor
push
jnp
sub
ss
xlat
xor
popf
jb
jecxz
push
decl
mov
call
fbld
fisttps
fmuls
push
mov
rcll
inc
shrl
aam
in
shrl
pop
movsl
outsl
jb
mov
push
inc
stc
repnz
mov
bnd
gs
sub
lret
ret
mov
test
jmp
push
push
push
and
inc
adc
or
cld
adc
outsl
les
cs
int3
aad
jle
shrb
sti
add
fcmovu
in
jno
repnz
mov
and
je
mov
mov
dec
jbe
enter
or
ret
inc
adcl
push
inc
dec
xchg
arpl
xchg
and
dec
pop
dec
jnp
fs
xor
cmp
sbb
and
iret
lds
rcll
sbb
or
out
pop
sub
hlt
mov
cmp
movsl
jl
inc
orb
mov
ss
and
jnp
xchg
or
pop
pop
pop
ljmp
xor
fnstsw
xor
insl
in
leave
mov
and
mov
sub
aad
xor
push
add
inc
xlat
push
stos
js
cmpsb
sub
and
push
cli
outsb
daa
and
outsl
and
arpl
pop
lock
jae
nop
clc
jle
jp
stc
mov
aad
hlt
sub
add
ja
and
inc
imul
aas
xchg
call
inc
loope
in
and
add
test
mov
cmpsl
pop
sub
inc
xlat
xor
fisttpl
xchg
test
and
pop
arpl
fnstsw
push
inc
inc
sbb
push
jge
scas
jge
jnp
add
xor
sub
push
sub
adc
lea
into
iret
lahf
or
rcrb
mov
insl
outsl
jg
testl
sbb
xor
inc
xor
add
add
icebp
xchg
in
sahf
push
mov
inc
sbb
daa
pop
dec
dec
decb
jb
fs
ljmp
cmp
es
ss
out
jle
dec
jle
xchg
out
enter
xchg
xor
add
leave
jno
or
add
test
xchg
inc
loope
clc
mov
lret
xchg
jb
and
inc
sbb
sbb
in
fnstenv
fcmove
pop
add
dec
xor
push
add
adc
and
mov
dec
dec
call
aas
fistps
push
repnz
pusha
ljmp
fistps
test
sub
inc
push
pop
cltd
mov
loopne
mov
stos
xor
shll
or
inc
or
stc
xor
mov
adc
movsl
cmp
add
adc
repz
loop
es
inc
in
or
aaa
dec
mov
int3
mov
mov
xor
aas
rorl
add
lods
adc
mov
add
push
push
pop
lret
out
das
and
fisubrs
ret
call
aas
push
out
rcll
mov
mov
or
mov
adc
int3
jbe
jb
ja
inc
push
jne
mov
or
cmp
out
loope
sbb
pop
lahf
mov
test
mov
cli
jge
xchg
adc
sbb
add
lds
fisubs
fwait
loopne
mov
inc
pop
xor
sbb
cmp
and
sbb
pop
and
mov
lret
pop
mov
in
lcall
mov
inc
pop
sarl
xchg
fsubs
xchg
clc
divl
mov
xchg
mov
ds
imul
out
bound
pop
cld
divb
xchg
insb
pop
fs
jl
dec
jl
pop
push
pushf
sub
xchg
adc
std
clc
sbb
das
dec
push
div
std
inc
ljmp
imul
sahf
ja
mov
adc
sbb
inc
xor
push
in
outsl
xor
rcl
push
popf
je
mov
out
inc
int3
push
in
pop
fdivrs
pop
sub
dec
cmpsl
inc
das
xor
adc
lahf
and
pop
xchg
out
sub
mov
sub
mov
mov
jno
sub
inc
clc
stos
insl
push
and
and
mov
negb
or
leave
inc
std
mov
add
sub
pop
pop
repz
popl
xor
lahf
xchg
pcmpgtw
adc
xor
loopne
push
pop
fsubrp
pop
clc
xchg
pop
sub
aam
mov
gs
ficomps
nop
test
ja
sub
xchg
adc
mov
movsb
cmp
addb
insl
pop
mov
pop
or
mov
fsub
jne
mov
sbb
notb
int3
int3
shll
xlat
loop
repnz
aad
pop
lret
push
pusha
std
mov
cmp
imul
inc
jle
xor
lea
push
dec
outsl
and
mov
xchg
enter
add
daa
mov
clc
cmp
jo
inc
mov
mov
mov
sub
mov
lahf
insl
push
out
xchg
je
fsubs
pop
mov
je
adc
out
xchg
jmp
jnp
cmp
mov
rcl
jne
xchg
cmc
mov
sub
xor
inc
cmp
jecxz
fs
or
mov
in
jge
or
pop
clc
mov
mov
hlt
mov
pop
mov
sub
inc
fbstp
adc
inc
cmp
outsb
push
push
int
nop
xchg
aam
lock
lahf
pop
add
pushf
jl
int3
jl
lock
jl
xor
push
iret
push
add
or
cmc
fsubr
push
mov
or
stc
jb
ret
addr16
push
ret
ja
outsb
aad
and
xchg
daa
and
sbb
les
pop
jae
pop
pop
sub
cmp
loopne
subl
sub
push
cmp
pop
or
ja
jecxz
and
xchg
cltd
mov
xchg
stos
add
and
push
dec
cmc
or
cwtl
mov
loope
and
ljmp
mov
inc
xchg
lods
shrb
pop
js
pop
xchg
adc
test
cmp
mov
dec
xchg
iret
mov
or
jmp
je
rcll
dec
mov
enter
dec
sub
dec
aad
push
ja
mov
scas
std
fists
loope
in
dec
das
sub
popa
xor
out
dec
adc
lahf
dec
scas
jle
xchg
clc
outsb
sbb
jmp
cmp
push
jo
or
mov
imul
loope
scas
mov
mov
std
loop
loopne
pop
aad
notl
outsw
mov
push
adc
imul
cmp
xchg
mov
jnp
xchg
fisubl
mov
fcomps
iret
jnp
into
inc
pop
or
pop
nop
sbb
js
sbb
out
lods
in
xchg
adc
mov
cld
push
push
out
sbb
or
data16
fs
push
mov
push
in
pop
subl
adc
in
dec
sub
or
sbb
add
mov
push
mov
or
pop
notb
fwait
es
pop
dec
or
pop
sub
pushf
mov
movsl
jl
inc
xchg
and
mov
and
pop
cmp
ret
add
xor
and
cmp
adc
cmp
adc
jecxz
es
and
add
fst
xorl
push
inc
mov
mov
and
aam
inc
push
rcrb
xchg
cmp
orl
pop
es
add
popf
and
rcl
idiv
xchg
outsl
xchg
push
and
js
test
ljmp
loop
sti
stc
data16
je
cmp
sbb
adc
and
cmp
pop
push
xor
xacquire
jb
mov
ret
mov
in
sbb
add
bound
sar
loop
addl
xor
cmpsb
fidivrl
mov
jge
mov
repz
inc
es
adc
or
adc
xchg
push
xor
imul
dec
rolb
dec
lret
shl
loop
ja
ret
sub
cmpsb
movsl
cmp
dec
and
sti
and
mov
pusha
adc
hlt
cmc
inc
jecxz
mov
mov
popf
adc
pop
in
daa
insb
or
pop
in
test
mov
out
cmp
mov
xor
push
inc
repz
and
in
popf
xchg
cli
cmp
push
inc
les
mov
adc
mov
repnz
cmpsl
push
lret
in
mov
jno
popf
addr16
jns
imul
sbb
xchg
mov
mov
push
push
adc
sbb
test
clc
dec
jno
add
popf
loop
cmp
sub
pop
sub
fs
fisubrl
add
xor
sub
xchg
and
cli
movl
mov
xor
mov
jl
and
cmp
ljmp
add
cs
imul
adc
mov
aad
or
mov
enter
fisubs
xchg
jge
scas
fbstp
outsl
lock
sti
mov
inc
out
sbb
cmpsl
bound
inc
and
fildll
xor
mov
cld
shll
mov
loopne
and
dec
ss
xchg
jno
jmp
jl
mov
test
mov
std
movsw
lret
sahf
in
out
pop
icebp
xorl
pop
cmp
and
fcomip
jle
lcall
mov
inc
shrb
sub
add
fcoms
and
les
jg
and
sub
out
in
aam
ljmp
or
popf
fsubp
sbb
bnd
mov
pop
push
cmp
add
xchg
in
add
xlat
mov
add
sub
pop
ja
mov
inc
pop
xchg
adc
gs
mov
int
fistpll
into
out
or
sub
enter
in
lret
insb
ret
mov
xchg
cli
arpl
dec
sbb
mov
aad
or
mov
lret
imul
add
and
jbe
scas
or
and
sbb
xchg
pushf
test
push
sti
loop
cmc
je
jge
pop
fcmovnbe
jo
stc
imul
xchg
inc
cmp
test
mov
imul
stc
out
mov
push
xor
imull
pop
cld
xchg
mov
push
subl
ficoms
jge
sbb
es
pop
xchg
mov
dec
push
push
xchg
lahf
test
dec
loop
inc
jp
outsl
dec
mov
mov
and
adc
sbb
cld
pop
mov
sbb
dec
test
pop
cmp
xchg
dec
inc
lods
cmp
push
rclb
push
add
adc
enter
pop
xor
jo
ja
lds
mov
mov
iret
and
jmp
adc
mov
es
inc
imul
add
lcall
loope
cmp
jno
mov
xchg
or
xchg
vmovhps
bound
inc
stc
mov
inc
test
inc
mov
rcl
cld
jl
add
mov
mov
xchg
cmp
xchg
mov
mov
pop
and
inc
pop
aam
faddl
outsb
imul
test
cmp
and
in
orl
mov
inc
aam
pop
ret
orl
movsl
inc
xor
in
xchg
cmp
lahf
xchg
mov
outsl
aaa
mov
imul
test
add
into
jo
sub
out
cmp
add
out
pop
in
xchg
inc
out
mov
lret
sti
pushl
dec
in
in
sub
outsb
test
mov
jo
or
aad
mov
adc
inc
push
and
mov
loope
adc
insb
or
jle
addl
mov
shlb
sub
outsb
sbb
sub
or
add
insl
pop
test
mov
add
clc
cmp
out
stos
push
pop
sbb
je
adc
sbb
xchg
adc
sub
inc
negb
dec
jle
int3
lcall
std
ret
dec
mov
jbe
enter
add
cli
push
scas
arpl
sti
imul
movsl
pop
inc
ret
mov
aaa
pop
push
and
inc
sub
xchg
int
and
sbb
sub
rclb
icebp
ss
xorl
xchg
addr16
mov
sub
nop
pop
inc
cli
jp
les
mov
sub
std
je
icebp
out
add
dec
xorb
shl
and
mov
stos
les
or
fldl
movsb
idivb
push
cwtl
and
add
inc
jge
push
stc
mov
jle
pop
adc
or
fistps
jbe
pop
in
test
sub
sub
push
inc
pop
dec
loop
pop
cld
es
push
stc
jbe
pop
mov
movsl
inc
pop
fs
pop
and
mov
inc
fidivrs
repnz
mov
xlat
mov
adc
mov
fldt
cmpsb
fcomps
inc
push
xchg
lret
adc
dec
test
scas
push
cld
stos
sahf
push
pop
imul
sbb
adc
iret
out
jmp
sub
sbb
ja
addl
lods
push
stos
lods
sbb
in
outsl
std
cmp
rorb
push
inc
scas
orl
jl
add
outsb
dec
lret
mov
mov
imul
sbb
mov
jae
int3
sbb
addr16
lods
mov
or
test
lret
stc
in
pushf
js
leave
pop
mov
mov
sub
jmp
jmp
hlt
pop
addr16
jbe
or
pop
fcoml
cld
xor
cmc
repnz
je
jle
cmp
jge
cmp
rcrb
and
imul
mov
addr16
les
push
repz
je
ja
dec
push
and
enter
std
fs
and
lahf
lods
lcall
or
mov
inc
cli
inc
xor
and
mov
mov
xor
movsb
add
fildll
es
sub
repz
ds
adc
aad
mov
clc
lods
mov
cmp
in
outsl
pop
mov
push
mov
push
adc
sub
pop
aaa
lds
mov
or
or
push
push
fsubl
add
aam
jg
mov
inc
inc
sub
out
xor
xchg
cwtl
mov
jnp
push
rorl
cmpb
into
jge
arpl
outsl
jmp
xchg
lods
lods
nop
add
xchg
or
lahf
mov
test
scas
ret
test
shlb
jbe
outsl
mov
dec
iret
mov
cmp
sub
mov
push
decl
mov
jmp
push
push
dec
outsl
es
mov
or
repnz
dec
cmp
jge
jl
dec
loopne
and
xchg
mov
lcall
ja
in
fs
lods
std
push
jbe
xchg
ja
stos
mov
jnp
lock
and
ror
xchg
cli
les
sti
adc
out
fs
movb
and
in
je
adc
nop
push
outsb
pop
xchg
outsl
clc
setne
jo
push
roll
cmp
sub
xchg
inc
mov
xchg
jnp
cmp
mov
add
cld
mov
cmp
into
shll
xchg
sbb
xchg
pop
imul
push
adc
icebp
pop
jbe
and
rclb
cmp
aas
test
cs
sbb
xor
add
mov
popf
in
shrb
insb
mov
pop
test
and
lock
mov
aam
mov
ret
lock
and
xor
cld
dec
repnz
xor
pop
sbb
and
into
mov
fsin
and
ret
and
mov
push
jne
and
lret
jb
icebp
stos
repz
in
imul
sbb
inc
mov
cmc
mov
lret
sub
loope
stc
push
inc
sub
loop
es
iret
leave
pop
push
aas
shrl
test
rorl
adc
or
jo
mov
sub
and
cli
mov
xchg
sbb
shlb
out
cmpsb
mov
mulb
push
and
loopne
in
sbb
lds
sub
mov
jmp
fstpl
pushf
sub
jnp
movsb
test
and
push
lret
scas
sub
sbb
or
ret
push
insl
pop
cmpsb
adc
ret
jl
cmp
icebp
cmp
mov
or
sahf
mov
mov
xchg
inc
push
xchg
fisubrl
adc
test
push
enter
in
jg
xchg
mov
imul
mov
sbb
stos
dec
cli
adcb
out
repnz
fbstp
mov
inc
dec
jne
js
inc
loop
cmp
mov
xchg
adc
sub
jle
adc
lret
insl
cmp
rcrl
jae
rol
fbstp
test
jnp
mov
lods
fiadds
jbe
pop
call
loopne
jne
mov
pop
inc
sub
push
out
aad
ret
fistps
push
jae
mov
sbb
pop
xchg
or
in
lret
enter
mov
pop
jno
pop
cmpsb
adc
pop
call
lea
out
ret
jo
data16
mov
lock
in
mov
cmp
mov
lret
mov
cmp
xchg
in
pusha
mov
ret
fs
fimull
pop
xchg
cmpsl
lahf
imulb
sti
adc
xchg
push
shl
enter
adc
sub
loopne
adc
xor
xor
mov
sarb
das
adcb
jne
dec
jle
rorl
test
int3
push
es
pop
out
aaa
decl
popf
jl
adc
test
xchg
push
fs
add
push
dec
cltd
popf
popa
shll
adc
mov
cmc
xchg
ja
mov
inc
xchg
cmp
dec
dec
lods
mov
pop
fwait
push
push
test
lcall
and
js
es
mov
jo
insb
jecxz
fisubs
mov
mov
aas
ror
fsubrs
frstor
rcl
fadds
test
cwtl
mov
sub
sub
ds
out
int
sahf
scas
push
or
nop
dec
cmp
cmc
add
dec
imul
int3
add
loopne
aad
fwait
lcall
scas
inc
push
fildl
mov
push
fisubs
inc
sbb
ficompl
jge
sahf
iret
in
jmp
mov
fs
call
std
jecxz
pop
outsb
jnp
jmp
ror
leave
test
imul
add
in
scas
mov
cmp
or
roll
xor
push
xchg
scas
inc
fisubrl
cmp
inc
repnz
ret
cld
popf
jg
mov
pop
push
add
ljmp
cmpsb
in
jmp
jmp
sbb
xchg
jns
or
das
pop
push
mov
mov
lds
rclb
stc
dec
mov
dec
and
lea
fidivrl
mov
mov
in
out
xchg
int
jae
stos
fcoml
add
pop
cmpb
mov
lock
dec
outsl
push
ljmp
ljmp
jb
xor
fiaddl
stos
mov
pop
out
cmp
sbb
adc
loopne
jl
jle
fidivs
push
fiaddl
leave
xchg
push
mov
daa
pop
into
clc
mov
sbb
xor
in
insl
cli
psllq
push
stc
sbb
and
fstl
repnz
ljmp
popa
hlt
orb
hlt
divb
fsubrs
adc
push
and
outsb
insl
rcrb
mov
push
or
imul
icebp
outsl
pop
xlat
daa
xchg
mov
negl
out
stos
cmc
inc
imul
movsb
mov
out
push
xor
insb
jl
push
mov
jl
in
mov
pushl
pop
mov
inc
inc
lret
pop
aas
push
stos
movb
mov
cmc
push
adc
daa
les
or
incb
inc
lret
or
ja
stc
pop
mov
fcomi
popa
push
subb
cmp
daa
leave
arpl
test
dec
imul
push
xor
push
shrl
dec
int
mov
loopne
sub
leave
cmp
iret
test
cld
aaa
out
pop
and
stos
outsl
mov
mov
cli
repnz
fldcw
mov
or
movsb
rolb
sbb
push
shlb
ret
xor
jne
cmpsb
xor
aam
dec
xchg
add
mov
gs
sahf
inc
push
inc
out
and
or
lret
outsl
cld
cs
stos
add
mov
rorb
xor
cmp
xchg
xchg
jo
jge
push
in
jae
dec
insb
aam
out
movsl
imul
stc
xchg
nop
cmovo
inc
dec
xor
jno
and
aad
int3
jne
push
dec
mov
add
sbb
push
mov
cmp
cmp
inc
dec
loop
xchg
mov
mov
lahf
and
cmp
xchg
push
std
push
cmp
add
mov
add
mov
push
and
adc
ficomps
xchg
ja
loop
adc
mov
xor
mov
out
mov
xchg
jl
test
sub
mov
outsl
cmp
adc
lret
push
mov
bound
aam
imul
and
mov
insb
test
in
fxch
mov
sti
fidivrs
aas
popf
movsl
out
idiv
xchg
js
divb
xchg
in
cmp
int3
adc
shlb
dec
arpl
mov
shrb
cmc
push
lret
xlat
lea
lea
aaa
stc
inc
js
sub
push
loope
nop
imul
imul
aaa
cmpsl
push
push
pop
int3
and
adc
add
mov
push
sub
or
call
pop
push
inc
fbstp
pop
jecxz
push
sbb
pop
in
or
push
out
inc
arpl
int3
movsl
pop
aad
gs
imulb
nop
adc
iret
xchg
adc
push
mov
adc
lcall
mov
imul
adc
lds
adcl
sub
xor
dec
add
adc
js
imul
pushf
mov
inc
ljmp
sub
fsts
pop
xor
cmp
arpl
pushf
iret
push
or
enter
dec
dec
leave
sti
cmpsl
std
xor
cli
cs
lock
cmp
imul
fistpl
std
sub
daa
imul
push
mov
inc
dec
and
bound
aaa
cmc
xchg
fldt
or
imul
test
xlat
pop
hlt
sub
jbe
stos
mov
jo
push
push
mov
mov
shl
movd
icebp
cmpsb
fists
push
lret
adc
in
negl
fdivr
ja
mov
or
pusha
add
pop
mov
lret
push
cmp
push
adc
sbb
cmp
dec
jecxz
mov
jo
scas
jo
shlb
pop
in
inc
cmpsb
out
inc
outsl
daa
imul
vshufps
mov
push
pop
lret
xor
insb
mov
test
push
or
call
loope
inc
xchg
pop
mov
cmp
or
ret
ss
jne
dec
cmp
insl
mov
mov
xor
les
or
test
aaa
repz
addr16
lds
cltd
cs
inc
pop
inc
sbb
mov
mov
cltd
mov
inc
push
pop
inc
jle
rorl
pop
mov
and
pop
in
scas
jo
clc
and
mov
pop
cwtl
mov
cltd
jne
mul
pop
mov
pop
je
lret
sbb
incb
bound
mov
outsl
mov
xchg
add
xor
icebp
negb
jp
push
stos
mov
adcb
add
orb
fwait
in
xchg
arpl
ret
lret
xchg
mov
inc
xchg
pop
or
bound
popa
fstpl
test
lods
loope
psrlw
daa
and
jle
push
inc
sub
cmp
imul
hlt
imul
xchg
mov
xor
andl
mov
ds
mov
stos
push
and
cs
sbb
fldcw
scas
inc
in
je
mov
imul
sub
aaa
call
ds
xor
in
testb
push
adc
mov
jne
fadds
or
sub
adc
test
dec
stc
out
pop
jp
fcoms
sahf
or
mov
in
cmp
jp
mov
jb
mov
or
ror
xchg
jmp
mov
pop
jno
xchg
add
or
stc
shl
clc
inc
jns
daa
in
sub
xor
lods
out
sahf
mov
scas
orl
lods
xchg
cmp
jl
and
or
imul
arpl
loope
repz
xchg
cmp
or
xor
shll
addl
lds
adc
fs
pop
pop
pusha
sub
imul
xchg
ret
xor
out
adc
push
push
lret
in
es
lock
add
jle
or
lock
gs
mov
jno
ljmp
aam
das
xor
scas
ljmp
lcall
outsb
sbb
push
scas
frstor
cmp
mov
fcmovu
imull
jns
lds
test
lock
iretw
adc
lret
out
add
xchg
lods
xchg
or
les
push
and
shl
popl
scas
mov
push
push
addb
jb
inc
out
test
cmp
xchg
mov
xchg
ret
add
pop
sarl
mov
pop
or
xchg
jg
test
push
xor
icebp
adc
xchg
push
scas
int3
adc
xchg
sub
jge
jns
push
push
fnstenv
sti
hlt
fildl
mov
xor
dec
faddl
mov
push
mov
andnps
sbb
mov
inc
or
inc
call
ja
push
dec
jl
lods
rorb
mov
pop
ds
test
adc
mov
pop
ss
add
sti
mov
sbb
inc
dec
jns
add
repnz
inc
push
aam
xor
mov
rolb
leave
dec
sbb
cwtl
inc
xor
arpl
dec
ljmp
ljmp
xchg
or
dec
mov
sbb
push
aam
jg
adc
into
in
jl
shll
fstpt
es
and
movsl
push
cmp
call
add
xchg
aam
push
cli
loopne
test
adc
cmp
inc
sbb
pop
dec
or
ret
sbb
loopne
mov
mov
mov
inc
dec
adc
inc
fadds
mov
cmpsb
addr16
comiss
xor
dec
decb
adc
pop
loopne
dec
xlat
imul
mov
divl
push
pop
add
dec
or
fiaddl
loopne
shrl
mov
or
xchg
cmp
loope
int3
dec
fnstsw
orb
adc
sub
lret
add
pop
loope
mov
mov
in
sub
loopne
in
fisubs
pop
cmp
jne
aaa
pop
clc
ja
mov
in
cmp
leave
sti
mov
jae
xor
push
loopne
popf
gs
sub
mov
cld
addr16
push
out
jb
das
aas
movsl
pop
call
xlat
dec
and
push
fnstsw
rol
jbe
add
add
or
jge
sub
stc
ds
lds
and
jno
dec
xchg
add
pop
je
sub
fstpt
push
jl
xor
xchg
test
push
sbb
jge
in
movsb
repz
sbbl
mov
cltd
mov
push
out
test
lcall
shll
insl
mov
fwait
loopne
xchg
mov
loope
loop
rcrl
sub
mov
cwtl
lods
out
xchg
inc
dec
push
insb
daa
lret
push
xlat
cmp
xor
in
insl
sarl
xchg
cmpsl
push
scas
daa
sub
mov
mov
pop
int
xor
pop
clc
jge
inc
xor
adc
stos
js
xchg
sti
lds
cld
loope
ret
xchg
pop
dec
push
mov
aad
jle
xchg
mov
and
jle
rcll
pushl
dec
in
out
int
mov
pop
adc
inc
clc
in
call
add
xor
inc
mov
xor
xchg
leave
lods
ljmp
or
xor
jae
inc
xchg
daa
movsb
mov
fldl2t
sub
lock
xchg
repnz
int
sbb
pop
push
test
dec
dec
mov
nop
sub
dec
cmpsb
sbb
xchg
aas
hlt
sbb
lret
xor
mov
dec
xchg
pushf
pop
xor
xor
sub
mov
or
lret
lret
mov
jg
lcall
jmp
pop
jl
enter
aas
xchg
fdivl
and
shl
lea
dec
imul
xchg
in
sub
in
push
pop
jg
pop
das
pop
pop
pop
aas
jnp
cmpsb
sub
data16
fidivrl
movsl
sub
mov
add
add
dec
xrelease
ret
mov
shlb
xlat
out
pushf
fisubrs
mov
pop
and
lods
cmpsl
jnp
xchg
pop
shrb
fsubs
das
jb
nop
popf
mov
nop
push
mov
divl
repnz
addl
mov
or
mov
xor
imul
push
rclb
add
or
sbb
or
mov
cwtl
inc
ficoml
jo
les
dec
imul
incb
mov
inc
dec
pop
negb
sbb
repz
xor
test
and
cmp
adc
mov
jmp
sbb
repz
ja
inc
push
and
sbb
sbbl
ficoms
pop
idivl
inc
ret
enter
jg
ret
push
and
iret
mov
jo
xor
rcrb
js
dec
scas
daa
dec
imul
dec
jge
jno
dec
arpl
dec
sbb
dec
insl
mov
icebp
mov
add
push
shll
mov
xchg
mov
jne
mov
or
mov
in
mov
stos
sti
shl
jns
lret
or
sbb
enter
xchg
gs
lahf
test
or
xchg
mov
mov
leave
cmp
repnz
mov
mov
fnsave
adcl
rcl
jnp
dec
out
lea
rol
jne
jg
fdivrl
dec
mov
xchg
inc
loopne
outsl
push
push
faddl
lds
es
arpl
or
sub
xchg
xchg
test
call
rclb
testl
fcmovb
mov
or
mov
pop
push
dec
inc
pop
imul
pop
push
insb
cltd
shr
mov
xlat
addr16
call
into
sahf
testb
bound
mov
and
dec
jnp
rcll
sbb
lret
gs
stos
pushf
jp
fbstp
lea
imulb
jne
insb
sbb
xchg
xor
inc
xchg
out
icebp
pop
aaa
adc
movsl
pop
xor
xchg
or
pop
mov
imul
sbb
lahf
dec
icebp
push
pop
xchg
xor
arpl
or
mov
in
adc
add
rcll
div
cmc
or
lcall
push
dec
pop
loope
dec
mov
jb
inc
dec
sti
call
or
es
mov
cmp
mov
xchg
in
lret
dec
sub
dec
aam
mov
mov
xor
outsb
es
jne
xlat
pop
mov
xor
ds
and
mov
dec
pop
push
cld
push
mov
jge
cmp
lret
sbb
inc
rol
mov
or
xor
and
shlb
int3
push
dec
fs
and
call
or
imul
dec
xchg
adc
sbb
fisubl
rorl
shrl
mov
ljmp
fisttpl
mov
subb
mov
mov
xor
mov
ret
sub
fldenv
pop
push
sbb
inc
jge
push
lock
xchg
data16
dec
pop
movsl
fs
push
adc
jle
xchg
aam
pop
adc
and
cmp
sub
sbb
xchg
add
adc
mov
popa
cmp
fwait
aaa
adc
icebp
andb
pop
push
clc
scas
jmp
or
mov
jns
add
jae
sbb
jno
jp
repz
jmp
and
dec
aaa
pop
dec
cmp
rcrb
sahf
push
mov
and
mov
sti
push
dec
xor
ret
ret
jecxz
mov
and
fsts
dec
xchg
adc
stos
mov
lret
inc
add
pop
bound
test
jb
aas
in
jle
add
test
mov
nop
aad
mov
decb
push
and
sbb
in
ret
cmp
mov
pop
lock
sbb
or
and
ja
std
jl
lret
andl
pop
add
push
call
repz
inc
arpl
aas
dec
imul
mov
clc
jl
push
je
xchg
scas
and
mov
pop
aam
mov
data16
andb
xchg
nop
jo
xchg
lret
sub
lret
lret
fmul
faddp
test
hlt
cwtl
mov
push
lret
mov
repnz
or
setge
outsb
iret
pushf
inc
mov
and
fmull
mov
lret
fnsave
call
mov
adcb
pop
jmp
mov
idivl
jmp
add
mov
xchg
sbb
xchg
and
ljmp
mov
push
icebp
push
jae
inc
and
outsl
mov
pop
ret
subb
jnp
outsl
inc
mov
aam
mov
lea
mov
push
add
outsb
xchg
pusha
out
out
loop
les
lock
and
xor
or
das
fstpt
lret
rcrl
pop
cmp
sarl
push
mulb
mov
jmp
push
test
xchg
jg
rclb
js
ss
mov
sbb
mov
fcmovnb
xor
aam
std
hlt
stc
cld
into
xchg
sub
data16
lods
mov
push
stos
gs
cmpsl
mov
fbstp
cmp
or
xor
push
ljmp
sbb
in
loop
and
mov
dec
out
jno
mov
lret
inc
rolb
mov
fdivrl
cmp
add
mov
adc
inc
addr16
movsl
adc
xchg
movsl
insl
mov
jae
jg
repz
in
mov
or
addr16
xchg
push
addl
pop
or
sbb
call
jne
js
std
push
sub
jb
xor
mov
jge
test
outsl
push
enter
je
je
aam
sub
cld
jbe
xor
inc
mov
sub
cmp
not
cmp
inc
sbb
cwtl
in
add
insb
push
xchg
outsl
in
inc
mov
xchg
call
push
lcall
fmul
test
lods
jno
xchg
jp,pn
pop
mov
js
fnstenv
shrb
mov
stos
sub
lcall
out
pushf
cld
mov
dec
repz
pop
sahf
nop
repz
and
test
mov
scas
xor
pop
mov
pop
and
out
xlat
sub
mov
imul
je
mov
mov
std
cmp
lods
cmpsb
fsubs
dec
or
sbb
sarl
fwait
pop
xchg
and
stos
cmpsb
push
fsubs
loope
adc
ds
lea
xor
mov
xorl
and
inc
cwtl
call
inc
repz
pop
add
in
fimuls
sub
decb
or
pop
clc
xor
pop
test
or
repnz
outsl
xorb
imul
xor
loop
sbb
test
ss
int3
jbe
daa
inc
xor
adc
add
dec
arpl
sahf
cmpsb
cmc
lds
fcoms
sti
jns
cmc
decb
lcall
pop
add
and
xchg
cwtl
dec
inc
jge
jg
sub
xchg
lds
aaa
mov
bound
mov
push
rol
sub
xchg
cli
out
mov
add
leave
aaa
out
rcrl
or
or
cmp
imul
pop
andb
adc
imul
jno
loop
sbb
scas
mov
mov
sub
add
pop
or
and
in
push
outsl
loop
and
jmp
push
jp
mov
scas
cmpsl
int3
nop
imul
iret
ds
out
and
jge
aaa
sbbl
addl
jns
das
xor
mov
ret
push
sbb
mov
xchg
push
add
outsl
mov
cmp
lods
push
ror
or
add
outsb
call
inc
in
adc
rorb
mov
in
add
imull
push
mov
movsb
dec
dec
fcomp
mov
and
dec
repnz
jnp
push
jecxz
mov
dec
jge
popf
popf
pop
cmp
sub
movsb
ret
aad
jle
push
xchg
out
inc
in
mov
in
test
mov
xchg
dec
imulb
adc
fnstcw
ljmp
mov
adc
fs
jmp
out
mov
xchg
push
lock
adc
lea
iret
fdivs
mov
mov
add
mov
xchg
fwait
xchg
mov
lods
jns
cwtl
popl
aad
xchg
xchg
jge
push
mov
sub
xor
inc
add
xor
shll
das
jns
mov
cmp
arpl
cli
dec
ret
enter
lods
adc
jl
xchg
sbb
aas
and
jmp
ss
or
scas
push
push
jle
repz
cmp
popf
mov
cmpsl
cmp
loopne
mov
test
push
or
cmp
sub
jecxz
mov
pop
xor
lcall
fucomip
push
hlt
ljmp
imul
mov
and
sahf
es
ss
sbb
xor
mov
bound
notl
out
mov
dec
push
in
jne
pop
sti
cmp
mov
test
mov
leave
push
fldenv
cmpsl
std
fildll
sbb
stos
or
jecxz
aas
mov
push
adc
into
mov
adc
test
add
or
pop
add
gs
insb
mov
cmp
scas
cltd
ja
and
dec
adc
or
pop
das
rorb
mov
jbe
lret
mov
jge
xchg
xchg
jmp
das
xor
xor
sub
out
test
xor
bound
or
and
sahf
add
movsb
push
xchg
pop
stos
daa
or
pop
mov
mov
mov
push
ret
lods
mov
insb
ljmp
scas
inc
je
jb
test
fxch
sub
adc
cmp
pop
fmuls
ret
adc
into
push
fdivrl
push
std
sbb
mov
pop
icebp
adc
mov
mov
lret
xchg
jbe
lock
push
addr16
and
stc
jb
inc
arpl
ljmp
std
test
in
movsb
mov
das
sarl
mov
je
jg
mov
es
test
je
insl
jg
lea
add
insl
mov
arpl
inc
inc
jl
cmpsb
outsb
fildl
hlt
or
insl
lods
push
sbb
xchg
clc
and
subb
pop
int3
movb
sub
rclb
cmp
mov
aam
jbe
mul
cmpsl
orl
dec
add
adc
inc
inc
in
sarl
cld
and
imul
mov
push
cld
push
test
rcll
jp
mov
into
in
jp
pusha
add
adc
in
sbb
and
or
into
and
push
or
sub
pop
les
inc
push
dec
test
pusha
adc
clc
mov
je
lret
fs
aas
cmp
push
sub
mov
xchg
fisttpll
pop
xchg
or
filds
cwtl
das
or
pop
ja
fcmovb
xchg
imull
xchg
das
popl
adc
ror
out
mov
dec
push
mov
fwait
and
fdivrl
add
xchg
adc
push
xor
shlb
les
or
mov
in
mov
leave
add
imul
shll
xchg
sbb
inc
and
mov
push
notb
loope
popf
push
jae
xchg
pusha
ja
repz
movsl
sbb
sbb
mov
orl
cmpsl
adc
push
sbb
adc
mov
rcll
aam
xchg
outsb
mov
jecxz
and
add
repnz
mov
lahf
jmp
sarb
out
outsl
dec
mov
rorl
out
in
sub
ss
scas
adc
enter
sarl
call
push
mov
aas
andl
mov
rcl
jecxz
mov
cmp
arpl
arpl
pop
mov
sbb
xchg
xchg
es
shll
data16
orl
in
mov
scas
out
movsb
data16
add
mov
mov
fsubrs
pop
out
mov
lret
nop
pop
jge
shr
xlat
xchg
pop
jno
dec
fisubrs
cmp
mov
test
popf
jbe
int3
imul
dec
sti
jnp
adc
fsub
mov
aas
dec
hlt
arpl
mov
mov
jle
xchg
in
movsb
push
out
xlat
fs
mov
call
dec
adcb
push
jmp
mov
mov
mov
mov
outsb
pushf
test
popa
jg
fcoms
xor
xchg
lock
cmpb
dec
sbb
jp
or
fwait
stos
add
pop
inc
add
xchg
sub
fidivrl
mov
jmp
add
orb
insl
sbb
int
mov
lahf
icebp
push
call
mov
and
lret
push
push
movsl
scas
mov
call
push
sbbl
ljmp
push
jae
jo,pt
jb
es
stos
loop
adc
adcl
xchg
sbb
jp
or
mov
sub
iret
sbb
dec
fs
sbbb
push
fwait
movb
data16
movsb
or
dec
add
inc
stos
js
jns
roll
int3
std
mov
adc
out
movsl
lea
cmpsb
adc
outsl
mov
dec
cmpsb
jle
push
sbb
xor
jno
pop
push
stos
mov
sarl
test
push
mov
jge
scas
stc
rcrb
cwtl
inc
and
and
dec
rcl
lea
into
or
stos
decl
movsl
ss
mov
imul
jnp
jle
ret
ss
sub
shll
je
cld
cmpsl
out
mov
pop
push
jmp
sub
filds
push
jg
pop
pusha
add
mov
push
mov
pusha
fnstcw
cmp
or
not
sbb
pop
and
hlt
out
decb
jmp
adc
mov
test
addr16
stos
xor
adc
jbe
outsl
cmc
jle
fsubl
mov
sub
and
lods
hlt
push
stos
dec
and
clc
mov
ljmp
movsl
xchg
adc
pop
stos
std
sbb
out
cmp
pusha
and
loopne,pn
push
add
lret
xchg
inc
popa
sub
cld
std
inc
jne
jp
mov
mov
lahf
jnp
inc
or
mov
xchg
testl
test
movsb
push
push
push
loopne
aam
sarl
out
adc
push
ja
and
adc
xchg
xchg
pop
lcall
ja
popa
or
mov
adc
mov
hlt
sbb
mov
pushf
les
sbb
add
leave
out
lea
fdivrl
sti
popf
inc
sub
pop
enter
sub
scas
out
ret
pop
cmpsb
or
pop
fcmovb
sarb
lret
mov
aam
fistps
pop
push
fbstp
xor
lahf
push
jbe
and
insb
cmp
and
repnz
push
in
xor
add
cmpsb
jl
fisubs
out
pop
sbb
cmpsb
cwtl
and
aas
roll
mov
jnp
dec
xchg
out
cmp
xor
cmp
pop
adc
dec
pop
pop
sbb
sarl
pusha
push
xlat
xchg
mov
pop
inc
push
jae
mov
loope
je
inc
inc
ret
sub
and
push
adc
mov
pusha
sbb
adc
loope
inc
mov
mov
jecxz
mov
cmpsb
or
movsl
int3
mov
insb
popa
jb
sub
sub
pop
dec
xchg
adc
fists
mov
movsb
pop
sub
ret
jp
pop
mov
xor
xchg
test
fbstp
sbb
xlat
push
and
mov
xorl
filds
inc
add
sub
es
push
push
adc
mov
add
popf
inc
add
loopne
xchg
jp
adc
inc
mov
das
testl
adc
add
inc
call
lret
cmp
scas
fs
js
outsl
mov
inc
and
dec
out
cltd
lds
test
daa
jecxz
push
add
inc
add
in
dec
decl
sub
xchg
mov
cmp
jmp
jb
and
insl
pop
or
jns
jbe
cmp
sbb
and
inc
iret
cmpsl
js
mov
pop
pop
sub
out
or
lock
fcomip
inc
lock
mov
and
enter
push
pop
ror
xchg
xchg
ss
sti
jle
or
sub
push
shlb
repnz
or
jno
push
stc
sub
fs
lahf
jp
into
insb
or
mov
inc
js
aam
popa
add
or
lock
hlt
jmp
xchg
sahf
sub
bound
dec
out
add
ret
push
adcb
inc
scas
popa
sub
enter
jae
pop
xchg
mov
mov
insl
cmp
leave
cmp
or
dec
xchg
or
sbb
clc
adc
inc
fisubrl
shr
mov
and
movsl
popf
pushf
jecxz
xchg
pop
addr16
out
xchg
cwtl
xor
push
test
je
pushw
in
adcl
movsb
pushf
and
pop
je
ja
es
sub
jo
cmp
ljmp
movsb
repz
fcmovnu
mov
xor
in
xor
and
or
jp
aad
jo
cwtl
and
hlt
pusha
or
lret
mov
clc
outsl
xor
std
sub
fwait
xchg
push
and
push
pop
shr
dec
insb
pop
xchg
bound
xchg
flds
inc
jnp
insb
jo
leave
push
pop
mov
pop
hlt
inc
outsb
aad
sti
dec
icebp
xor
dec
dec
mov
jae
jnp
cmp
or
sbb
mov
or
push
das
adc
jge
cmovns
sub
out
inc
or
jge
push
stos
add
sbb
push
mov
decb
rorb
lcall
das
in
jle
aaa
cli
jl
scas
xorl
mov
rorl
aam
xor
dec
into
mov
in
ds
jg
je
adc
and
dec
cmpsb
mov
jns
push
fimuls
cmp
pusha
out
lcall
sarl
xor
insl
cmc
pop
push
push
mov
dec
add
jbe
mov
inc
sbb
cmc
leave
pop
and
popa
mov
mov
rcll
rcrb
and
jns
fsubrp
les
fmuls
mov
std
jle
jle
cmp
xor
dec
movsl
lret
popl
jb
cmpsb
subb
dec
popf
and
sub
jecxz
iret
pop
cmp
movsl
pop
adc
mov
in
dec
ljmp
and
iret
jge
push
pop
push
aad
xchg
enter
fcoml
mov
inc
ret
mov
mov
mov
gs
lods
fwait
shlb
add
mov
mov
dec
push
ss
cmp
out
sub
xor
fisttpl
pop
mov
addr16
cmp
mov
pop
jmp
sbb
stc
cmp
gs
lods
in
movsb
mov
jno
adc
cltd
mov
add
sbb
mov
mov
lret
dec
cs
and
push
pusha
fstps
mov
jl
bnd
pop
xchg
pop
mov
enter
fstpt
xor
jecxz
enter
or
adc
jnp
mov
push
ds
push
add
push
sarb
arpl
adc
push
ljmp
test
arpl
scas
int
inc
in
loope
lea
or
lock
xor
shrb
fdivrl
sarl
daa
xchg
and
ds
out
out
cmp
sbb
xor
in
push
jl
int3
adc
fisubs
and
add
ret
sub
idiv
adc
movsl
aad
int3
lcall
aas
div
add
jbe
iret
xor
repz
adc
mov
ret
pop
sub
cmp
inc
jbe
stos
out
xchg
scas
test
test
jmp
xchg
dec
mov
outsb
out
sub
push
jl
and
jle
int3
addl
and
dec
jo
mov
sti
lret
xchg
mov
cmp
cli
in
iret
stc
jl
jae
scas
popa
dec
and
cmp
adc
cltd
push
int
or
sbb
leave
test
lcall
daa
cmp
mov
les
xchg
xchg
xor
inc
fstpl
mov
movl
iret
adc
data16
int3
and
adcb
sarl
cmp
ljmp
xlat
mov
add
shrl
loop
les
cltd
leave
ds
es
out
fs
and
push
mov
shlb
and
repnz
jp
subb
push
sub
and
xchg
mov
ljmp
out
inc
mov
call
int3
mov
push
sete
jne
mov
out
test
mov
cmp
movsb
dec
xchg
insb
ds
scas
cli
aad
adc
rolb
mov
dec
imulb
loop
ret
add
mov
test
xchg
lock
xchg
fcoms
cmp
xchg
popf
sub
aad
rolb
add
adc
xor
dec
lcall
ss
mov
in
jbe
and
insb
das
push
repz
or
out
mov
dec
das
rorl
mov
inc
enter
movsl
jo
add
shr
sar
push
or
or
add
or
enter
pusha
lods
adc
mov
dec
aad
stos
mov
cmp
loope
gs
ja
jp
mov
xor
xchg
arpl
jecxz
jae
ffreep
arpl
mov
icebp
popa
stos
adc
pop
les
mov
cmp
mov
fisttpll
cli
enter
xchg
shrb
or
or
ret
xlat
stos
sub
int3
stc
and
movsl
mov
ret
ja,pn
adc
pusha
sbb
xor
ss
xor
pavgb
push
lret
fsincos
ficomps
les
xchg
test
lds
mov
stos
push
and
jl
sbb
test
mov
bound
ret
push
add
loop
push
jno
cmpsb
fwait
cmpsl
fwait
jl
jne
jp
mov
shrl
rolb
and
int3
lret
fdivrs
addr16
add
sbb
ljmp
fistl
ds
pop
mov
rcll
mov
cmp
lds
push
fdivs
rol
xchg
jbe
and
scas
push
clc
dec
jb
outsl
fwait
adc
jno
jne
rcrb
aaa
ds
int3
gs
mov
loop
mov
add
lret
xchg
cltd
lcall
and
fwait
dec
imul
gs
mov
stos
jae
inc
mov
fwait
lea
scas
or
xor
sub
push
mov
clc
mov
scas
push
scas
jecxz
js
insb
lods
mov
bound
or
push
adc
outsl
test
shll
nop
pop
inc
add
lahf
add
cmp
lds
push
in
jno
jg
and
loope
lea
xor
adc
jmp
cmpsb
std
stos
lods
add
cmp
lock
jne
ja
ds
mov
lcall
cltd
stc
xor
inc
out
jmp
std
or
xchg
pushf
out
popa
lahf
sub
pop
inc
in
out
cmp
mov
dec
scas
push
mov
cmpsl
faddl
push
xchg
pop
xchg
cmp
icebp
inc
mov
push
mov
jnp
ja
push
push
dec
jmp
sub
cltd
andl
mov
cmp
das
mov
stos
fcmovnu
loop
ret
in
ret
xchg
jns
xchg
sbb
daa
aam
adc
lock
jg
xor
or
loopne
xchg
mov
cmp
and
sub
cmp
jo
dec
test
push
and
jno
mov
cmp
insb
mov
xor
xchg
mov
ss
and
push
push
mov
adc
out
add
mov
or
fsubl
fdivs
mov
cmp
adc
adc
push
xchg
push
dec
xchg
out
pop
push
xchg
pushf
mov
stos
cmp
fidivs
jae
fcmovb
ljmp
test
push
inc
rolb
scas
jnp
mov
mov
pushf
fwait
xchg
lcall
stos
fsubrl
sub
xor
and
scas
out
ja
call
jg
mov
testl
fimull
fldenv
xor
push
cmp
mov
cmc
dec
loope
xchg
loop
imul
and
mov
dec
mov
sub
push
push
mov
inc
mov
pushf
arpl
lcall
add
xor
jge
loope
jbe
inc
sbb
sbb
mov
out
xchg
in
jle
sbb
mov
add
icebp
dec
cmp
push
pop
push
dec
daa
aas
nop
push
outsl
push
in
pop
hlt
sub
mov
cmovb
push
inc
outsb
test
ja
cmp
rcrl
int3
xor
sub
ljmp
cwtl
mov
mov
jp
xor
out
inc
jo
push
jo
movsb
adc
movsl
xchg
xor
mov
dec
mov
xchg
sbb
mov
test
jno
shll
pop
es
add
pop
dec
inc
maxps
data16
xchg
out
sub
mov
daa
add
xor
add
push
jnp
dec
lea
aam
dec
jp
pushf
pop
push
xchg
add
jmp
push
xchg
test
xchg
xchg
out
mov
mov
mov
sub
mov
scas
sbb
jo
xchg
cmp
dec
je
jmp
mov
add
arpl
in
mov
dec
push
or
inc
sbb
frstor
out
adc
aam
nop
jmp
mov
hlt
mov
pop
loop
mov
ret
ljmp
sbb
movups
xchg
sub
lcall
jmp
dec
mov
pop
inc
in
jne
push
movsl
lods
pop
ja
outsb
movsl
push
cmp
sub
fwait
in
aam
inc
mov
cmp
mov
inc
mov
iret
ss
dec
inc
scas
cmp
xchg
cmc
inc
or
jns
daa
cmp
cmp
std
or
ret
stos
gs
std
jmp
stc
pop
loopne
and
ljmp
call
movsl
in
leave
and
cmpsl
data16
inc
and
push
nop
fcom
or
xchg
xchg
ss
add
jae
mov
das
sub
jb
add
fmuls
lds
sarl
mulb
mov
lock
adc
inc
cmp
popf
xchg
cld
pop
dec
popf
fildll
fmuls
push
out
mov
jo
jmp
xlat
inc
mov
mov
les
xchg
and
divb
negb
movsb
xchg
sbb
fiadds
dec
jle
dec
jne
fisttps
dec
xchg
xor
pop
dec
dec
push
or
jl
pop
call
sub
clc
sbb
dec
sbb
cmp
cld
push
fcomps
popa
sub
rorb
cli
fists
jp
ret
mov
mov
mov
sbb
aas
sub
mov
nop
add
in
xchg
ret
push
cmp
or
imul
add
pop
dec
mov
xor
fdiv
mov
sub
xor
aam
dec
loopne
or
aad
add
aam
or
mov
xchg
pop
lods
nop
jle
in
lock
int
mov
cmpsl
je
pop
hlt
xchg
dec
xchg
fdivrs
mov
push
inc
ret
das
inc
xor
jbe
mov
mov
cwtl
fstpl
cltd
mov
push
mov
cmp
jnp
xor
mov
not
aad
movsb
jns
nop
mov
push
aaa
test
and
sub
loopne
jns
adc
loope
pop
mov
xchg
cmc
mov
sbb
cltd
clc
mov
pop
ljmp
xchg
xor
cmp
xchg
shll
nop
push
nop
lahf
test
and
mov
orl
aaa
mov
and
dec
out
push
pop
dec
dec
mov
stc
movb
mov
push
inc
ffreep
xor
jo
fadds
sub
add
cwtl
lock
iret
mov
inc
cld
sti
test
jbe
pop
add
or
fsubl
jg
jl
loopne
xchg
loopne
mov
pop
roll
in
and
xchg
imul
push
out
daa
mov
lods
lods
add
mov
push
in
mov
push
or
int
lods
aas
xchg
ror
dec
mov
mov
cmp
imul
mov
jle
pop
test
inc
adc
sub
lret
mov
mov
mov
daa
add
cmp
mov
sbb
mov
popf
add
lods
dec
push
loope
in
repz
hlt
sbbb
loop
inc
notl
fxch
mov
pop
add
cmp
fs
shrl
mov
cmc
adc
inc
mov
lret
insl
xchg
aas
xchg
sub
add
aas
mov
fstpt
lock
mov
inc
not
loope
or
xor
sub
jae
insb
outsl
test
fs
ja
pop
gs
jl
xchg
xor
cmp
lea
adc
imul
lcall
test
and
aaa
lods
mov
push
lea
rolb
clc
lods
pop
jp
fidivrs
iret
scas
out
arpl
and
pop
or
ljmp
pusha
inc
mov
push
push
jmp
sbb
cmovb
inc
data16
xlat
imul
xor
jl
mov
ljmp
xor
push
cmp
insb
outsl
inc
jge
iret
pop
sbb
sub
inc
fmuls
test
lock
js
leave
jo
int
out
popa
sbbb
adc
sub
or
bound
nop
push
test
mov
cld
mov
jecxz
loop
sbbl
not
xchg
pop
and
daa
orl
pop
aaa
aad
subb
sub
mov
sub
mov
sub
lret
ss
fwait
or
ds
popa
rcl
push
dec
in
aam
imul
dec
stos
mov
sub
aaa
jle
sbb
cmpsl
pop
fs
enter
iret
lret
cmc
mov
xor
cmpsb
insb
divb
jno
mov
push
in
mov
pop
xchg
stos
lcall
adc
jmp
cmpsl
sub
sti
mov
fldt
xor
xchg
pop
aad
sbb
dec
popf
scas
push
xchg
enter
aas
push
sahf
jl
leave
or
push
adc
pop
jo
pusha
mov
xor
or
std
xor
pop
pop
push
cmp
leave
cmp
xchg
rcrb
mov
cmp
lret
push
adc
lea
popa
iret
movsl
outsb
adc
es
cld
hlt
or
into
mov
inc
fdivrs
fcmovne
pop
lock
imul
aad
adc
jecxz
or
fmul
pop
add
or
test
xor
test
movsb
aaa
call
mov
and
lock
fdiv
cmpsb
xchg
sbb
lods
cmpsb
xchg
dec
pop
inc
cmp
bound
add
imul
repz
adc
movsl
aaa
jp
sub
mov
movsl
cmc
jnp
out
mov
or
outsl
and
rcrl
jmp
mov
pop
cltd
jmp
mov
pop
or
sbb
xor
out
daa
les
jns
lea
sahf
lahf
push
push
pusha
sahf
sbb
mov
fdivl
xchg
out
cmp
and
sbb
test
push
fmuls
aam
fsub
prefetcht0
xor
in
fsubr
mov
aas
test
xchg
mov
in
into
and
push
int
hlt
jge
jp
xor
pop
clc
hlt
cmp
addb
sbb
pop
cltd
clc
ds
cmpsb
mov
fstps
add
or
repz
push
inc
sub
fcoml
lods
sti
icebp
add
or
sbb
test
and
sub
adc
xchg
inc
sub
jae
sarb
dec
mov
add
insl
lcall
mov
xor
push
mov
addr16
cmp
cmp
addr16
insb
xor
lret
mov
pop
lods
rolb
mov
push
xor
mov
sub
out
add
lds
loop
pop
leave
aam
push
aas
hlt
dec
pop
bound
xor
int
cmp
rcrb
mov
push
loop
test
pusha
popf
inc
sbb
and
jle
ja
adc
dec
test
dec
mov
mov
xlat
andb
filds
clts
lds
ds
inc
mov
js
inc
stos
icebp
adc
cli
xchg
xor
pusha
adc
mov
add
jmp
mov
push
xlat
xchg
cltd
in
jecxz
int
ljmp
outsl
xchg
xchg
mov
pusha
push
mov
and
xor
hlt
cld
addr16
movsl
js
fsub
loopne
pop
add
cmp
jp
pop
dec
sbb
sbb
push
pop
ja
push
mov
scas
ss
mov
lods
adc
bound
adc
cltd
sub
outsb
adc
pop
cmp
out
sub
mov
hlt
divl
dec
mov
pop
repz
add
leave
int3
xchg
xchg
xchg
popa
lret
sti
in
testb
push
cli
fbstp
cld
stos
mov
jecxz
iret
adc
mov
cmpl
mov
xor
push
cli
outsl
in
jge
cmp
push
push
aad
and
jb
xor
cmp
sbb
sub
lahf
fdivs
test
pop
add
jle
push
aam
adc
pop
scas
xchg
lahf
mov
lahf
jo
sub
into
jns
fnstsw
pop
lock
xchg
adc
jne
add
mov
shll
adc
mov
inc
testl
push
out
mov
cld
push
cmp
mov
jge
cli
cwtl
inc
xor
aas
inc
xlat
inc
and
xchg
push
in
js
imul
shlb
mov
pop
sub
leave
xchg
ss
pop
xchg
push
xchg
push
mov
push
lcall
inc
jg
push
sbb
mov
push
mov
xchg
push
mov
push
in
add
stc
leave
icebp
jl
in
das
inc
shrb
jg
xor
add
movsl
repnz
rorb
je
mov
dec
lret
push
xchg
movq
mov
sub
jb
in
or
pop
pop
mov
xchg
push
clc
out
mov
adc
dec
mov
jno
das
adc
push
movsl
jae
clc
test
stc
test
or
pop
repnz
mov
sub
cmpsb
pop
sbb
push
jb
xchg
outsb
jae
ljmp
aaa
ficomps
sbb
ljmp
scas
mov
add
loopne
dec
icebp
lods
daa
dec
jae
cmp
sbb
or
in
inc
jl
call
pop
push
and
jecxz
scas
dec
and
pop
js
cmc
aas
adc
sub
call
outsb
cmp
adcl
jo
dec
outsl
and
sti
sub
rcl
movsl
mov
pop
popa
jb
push
mov
dec
test
ficoms
lds
inc
inc
jle
stc
js
loop
dec
inc
sbb
inc
push
jbe
out
unpcklps
paddusw
xchg
rorb
stc
inc
add
call
pop
adc
sarb
and
mov
pop
adc
or
lods
jg
out
mov
add
mov
rorl
mov
and
jbe
xchg
xchg
inc
daa
lcall
imul
test
cwtl
jmp
sub
adc
movsl
jnp
mov
nop
inc
xor
cwtl
push
mov
mov
cs
jbe
mov
xchg
daa
jo
sub
inc
sub
lock
cmpsb
mov
adc
insl
mov
ret
pop
pushf
bound
sub
in
push
fdiv
cmpsb
push
mov
or
repnz
mov
aad
out
repz
ja
and
sbb
jmp
pop
mov
cmp
lods
icebp
aam
loopnew
ja
outsl
or
lds
fiadds
cmc
jno
push
cmp
in
das
sbb
nop
ja
rcrb
fildll
cli
mov
mov
mov
sub
push
jge
flds
stc
in
orb
movsl
imul
clc
adc
addl
or
cmpb
insl
shlb
aas
adc
aam
mov
mov
pusha
stc
das
ds
push
adcl
imul
repz
int
shrb
gs
and
lahf
ret
mov
xor
mov
fistpll
mov
setl
repnz
cmp
push
lds
orb
xlat
mov
imul
xchg
leave
arpl
retw
jmp
inc
mov
pop
test
in
lret
in
movsb
jg
mov
cmpsb
gs
and
cmp
iret
js
add
xchg
das
loop
mov
ja
push
mov
fdivrs
pop
inc
into
rclb
sbb
jns
aaa
out
push
jl
fsubl
and
xchg
xrelease
or
or
xchg
mov
pop
and
imull
cli
xor
push
shll
es
push
add
sahf
enter
push
sbb
mov
sar
outsl
push
jge
push
sarl
mov
out
jns
and
push
das
rdpmc
add
jbe
jb
sti
cmp
pop
ljmp
mov
test
popf
iret
scas
test
add
scas
xorb
fdivrl
scas
into
out
outsb
mov
mov
out
push
das
sbb
xor
dec
pop
inc
int
aam
cmc
fnsave
fistl
ja
mov
loope
sub
sbb
mov
decl
setp
sbb
fmull
outsl
dec
push
and
rol
in
xor
hlt
loope
loopne
cmp
cmp
ret
inc
add
stos
cmpsl
mov
std
daa
orl
mov
mov
mov
pop
mov
push
dec
arpl
add
xorb
sub
sub
imul
cs
push
nop
inc
fldl
sarb
inc
in
cmp
scas
xchg
pop
outsb
sub
push
jge
addr16
dec
das
cmpl
inc
test
das
inc
std
fistpll
jo
xor
dec
push
fs
cli
pop
in
adc
shll
addb
in
cwtl
push
mov
add
lret
repz
sub
daa
hlt
out
pushf
leave
or
pushf
cli
in
xor
test
sub
stos
mov
aam
cmc
test
xor
mov
add
fsub
mov
gs
adc
and
adc
mov
pushf
inc
or
jae
mov
and
mov
loope
test
loopne
inc
cmc
xchg
cmp
pop
push
addb
sbb
lret
movsb
sub
popf
pcmpgtw
leave
pop
mov
and
dec
dec
fs
stos
jnp
je
xlat
loope
mov
out
xor
mov
mov
in
int3
sbb
and
pushfw
add
std
insl
adc
xchg
aaa
add
push
adc
int
inc
push
xor
push
sti
jno
xchg
test
scas
movsl
fildl
mov
pop
rolb
sbb
into
push
inc
test
mov
sub
mov
rcrb
mov
inc
mov
lds
int
repz
outsl
jle
jge
jae
js
mov
pop
jg
add
and
dec
mov
div
push
hlt
xor
xor
lret
inc
movsl
roll
mov
inc
push
lret
add
push
and
push
dec
pop
popa
popf
int3
inc
clc
add
out
out
cmp
subb
sub
int
jmp
dec
mov
sub
sub
xor
push
and
cmp
jle
mov
out
pop
mov
push
mov
inc
aad
stos
or
data16
push
popa
in
jae
mov
repz
add
dec
mov
jne
add
xor
cld
and
fsubrs
push
imul
adc
outsb
xchg
inc
aad
lea
movsb
sub
mov
loope
stos
outsl
or
mov
jo
pop
and
aad
rorl
mov
lock
pop
xchg
dec
ljmp
mov
pop
push
xchg
fsubrs
inc
loope
sti
dec
adc
call
inc
mov
sub
loopne
leave
lahf
cltd
pop
hlt
jg
cs
push
in
cltd
push
dec
icebp
aaa
xchg
rcrl
or
or
lea
insb
cltd
cmp
cmp
stos
out
jl
xor
adc
gs
push
mov
cli
testl
cmpsb
out
idivb
int3
mov
in
jne
cmpsl
lret
push
mov
imul
pop
dec
movsl
pop
push
xor
jmp
xlat
and
adc
jne
test
in
add
mov
pop
les
pop
dec
sub
jecxz
adc
mov
adc
adc
xchg
pusha
outsb
pop
test
loop
jns
jnp
lods
mov
repz
jno
aaa
push
inc
shl
outsl
adc
xor
std
out
sub
fs
or
out
bound
mov
pmuludq
mov
add
mov
cs
addr16
movhps
int
shlb
push
icebp
mov
sbbb
push
loopne
xor
fwait
cmp
jne
xchg
jae
packsswb
cltd
out
jp
mov
xor
cmp
and
out
pop
lret
and
std
push
repnz
cmp
inc
fsts
rcrl
sub
imul
nop
cmp
fs
sbb
inc
sub
sbb
mov
xchg
lahf
inc
mov
jbe
inc
xchg
push
pop
mov
pop
sub
leave
and
cmpsb
out
or
je
fcomps
mov
cmc
insl
aaa
cmp
jle
icebp
sti
inc
insl
jno
adc
mov
push
xchg
inc
inc
or
outsb
push
and
mov
popa
ficoms
out
aaa
rol
inc
das
sub
xor
xor
cmp
pusha
lret
loop
rcl
adc
shlb
mov
cmpsl
dec
inc
or
popa
mov
mov
sti
cmp
xor
xor
fnstsw
cmp
pop
orb
and
popf
jmp
cmpsl
outsl
hlt
outsb
dec
fcmovnbe
add
jae
adc
scas
pop
out
jno
mov
jmp
movsb
xor
ret
das
jb
std
insb
lret
xor
jo
jne
lods
imul
inc
or
in
inc
arpl
jg
nop
xor
sub
push
fisubl
push
jb
aas
cmc
mov
xchg
roll
xchg
jne
xchg
scas
cs
icebp
fxtract
clc
test
push
mov
in
mov
addr16
and
repz
lds
arpl
jo
test
adc
enter
mov
movsl
adc
in
mov
cli
test
and
sub
loopne
jg
and
imul
dec
or
dec
mov
add
incl
lret
std
jns
push
fldz
jecxz
mov
inc
or
loopne
bound
int3
push
push
mov
push
push
mov
popa
push
shrb
mov
aam
adc
inc
mov
insb
in
mov
daa
fcoml
into
xchg
sti
pop
frstor
lea
mov
pop
xchg
movsb
rorb
sub
mov
out
shrb
jmp
movsl
sbb
mov
aad
stos
sub
mov
int
shll
aam
jg
lahf
jo
pusha
inc
cmpsl
or
xchg
in
stos
gs
repnz
dec
push
push
sub
push
push
imul
mov
lret
icebp
outsb
hlt
jb
fisubrs
fisttps
lahf
cmp
test
lods
aas
subb
cmc
xor
enter
clc
inc
mov
insl
sbb
xlat
in
push
stos
sarb
mov
aaa
push
outsl
into
mov
popa
fwait
mov
add
pop
cmp
in
xchg
push
mov
int3
popf
and
sub
mov
lret
neg
out
idivb
dec
push
xchg
mov
mov
xchg
fnstenv
add
jns
fcompl
jle
xchg
mov
repnz
lds
ret
fsts
xor
jge
add
sti
test
scas
or
out
or
dec
push
enter
push
fucomip
push
adc
pop
rcrb
andb
arpl
das
popf
test
mov
icebp
xor
aam
pop
fs
and
push
jno
xor
lock
and
push
ss
or
enter
fbstp
xchg
pop
and
add
mov
push
cs
xchg
xor
mov
cltd
cmp
sub
jae
jno
sub
add
cmp
popf
jmp
push
cmc
xor
and
xchg
shrb
das
mov
addr16
inc
inc
pop
pop
xor
sbb
dec
xlat
mov
sbb
lahf
fcmovnb
sbb
jnp
inc
cmc
pop
lahf
jmp
ret
popf
pusha
cmp
out
xchg
sbb
shr
in
jmp
xor
mull
insb
xchg
scas
or
pop
lret
leave
push
test
sbb
gs
je
pop
aas
and
sbb
lock
outsl
push
mov
dec
or
mov
sub
rol
push
push
and
xor
jnp
push
add
movsl
mov
push
mov
js
aad
aam
adc
dec
pop
test
cmpl
add
out
xlat
jmp
mov
js
mov
jno
std
pusha
xorb
pushf
pop
fdivl
fidivrl
push
je
dec
add
pop
sbb
idivl
mov
call
stos
adc
ficoms
loop
jbe
dec
dec
movsb
mov
daa
stos
pop
ret
push
pop
pushl
xor
cmp
xor
aam
js
arpl
in
int3
and
sbbb
xchg
adcb
cmp
push
imul
xchg
mov
sub
mov
popf
mov
mov
mov
dec
push
lea
cmp
push
shr
jle
lock
jnp
push
or
xchg
mov
adc
pop
push
iret
push
iret
mov
cmp
jne
adc
cmp
push
push
fstps
enter
addl
sarb
lods
push
mov
pop
ffree
pop
adc
add
les
daa
mov
insl
hlt
adc
push
scas
jp
sbb
xor
sbb
add
jne
in
aas
cld
push
push
xchg
xchg
mov
int
xchg
pusha
jno
xchg
shlb
mov
adcb
sarl
pop
jg
daa
aaa
rol
jmp
push
lds
pop
jnp
mov
jle
jecxz
repnz
js
arpl
inc
lds
adc
mov
ds
sbb
or
xor
sti
pop
gs
and
push
es
xlat
push
mov
adc
pushf
mov
int3
cs
mov
je
sbb
gs
dec
mov
in
mov
insb
faddp
ret
clc
add
fistps
daa
pop
iret
ss
call
cwtl
pusha
pop
push
adc
in
outsl
jmp
mov
push
mov
pop
sub
jbe
push
in
or
push
sub
mov
mov
mov
add
xor
xchg
cli
mov
mov
mov
cld
arpl
xchg
inc
and
jecxz
cmpsl
inc
out
fcoml
jo
bound
lcall
xlat
jno
jg
test
xchg
mov
fldl
push
insb
pusha
xchg
stos
pop
in
jmp
mov
adc
rorb
popa
jge
aam
inc
in
pop
fcompl
inc
shlb
sahf
test
pop
in
cmp
ja
lods
mov
call
pushf
pop
inc
mov
and
add
es
je
jns
pop
add
cli
idivb
xchg
xor
or
nop
cmpsl
inc
fstps
adc
inc
xor
scas
push
mov
cmp
out
lret
cmp
jecxz
dec
mov
cmp
ss
cmc
xor
pop
dec
dec
dec
xchg
adc
or
jbe
sar
fldenv
push
push
or
addr16
sbb
sub
jno
mov
jge
movsb
lret
lcall
pop
push
and
hlt
sub
xchg
lea
sbb
clc
fbld
adc
mov
scas
mov
icebp
push
cmp
jl
in
mov
mov
adc
imul
push
xor
loop
sub
jne
cmpb
shlb
jmp
insl
and
push
js
mov
mov
inc
push
sbb
adc
cli
dec
mov
arpl
add
aas
cmp
pop
add
in
mov
adc
or
data16
leave
mov
adc
xchg
jne
sbb
mov
pop
sub
push
xchg
pushf
das
fucom
jae
lahf
icebp
sbb
push
push
stos
fcomps
jb
or
inc
jno
sbb
add
mov
pushf
cmpsl
lods
loope
addr16
sub
adc
mov
sbb
push
cmp
fldcw
fucomi
add
or
scas
pop
cmp
mov
add
pop
push
push
lods
mov
xchg
dec
push
in
imul
or
notb
mov
leave
dec
clc
imul
add
inc
fiadds
sbb
jge
cld
push
jmp
out
mov
hlt
out
pop
mov
push
adc
in
sub
and
pop
pextrw
mov
je
shlb
ljmp
xor
or
pop
int3
push
mov
sbb
loop
sbbb
lahf
stos
pushf
fbstp
aam
arpl
scas
lds
mov
daa
jnp
jp
xchg
mov
arpl
fldt
out
test
cmp
leave
lods
jge
push
adc
fwait
clc
cmp
fld
mov
sbb
and
adc
das
add
xchg
pop
les
pop
call
outsb
xor
or
mov
iret
movsb
jne
int3
pop
lea
push
jmp
in
arpl
pop
mov
xor
adc
adc
and
or
dec
js
push
xchg
cwtl
outsb
push
jno
cmpsb
sahf
test
add
aaa
jg
pop
dec
xor
jne
jae
xchg
das
leave
ret
sbb
mov
dec
ja
test
inc
lods
cwtl
and
push
xchg
cmp
push
pushl
jns
jp
imul
cmp
addb
mov
in
dec
pop
push
popf
scas
mov
mov
dec
jae
fcomip
fcompl
js
fisttpl
pop
push
ds
call
fnstsw
inc
mov
sbb
pop
fwait
cld
jge
xor
arpl
mov
xchg
push
sub
dec
lcall
jno
ret
lods
rol
fcoms
dec
lods
mov
outsl
pop
das
je
add
pop
add
adc
loop
cmc
cltd
add
mov
cmpsl
mov
ret
pop
in
out
add
add
out
pusha
in
dec
jle
add
mov
xlat
mov
lcall
dec
mov
adc
popf
add
mov
leave
xor
dec
mov
out
pushf
fldenv
xchg
cmc
dec
outsl
movb
in
insl
imulb
sub
adc
inc
add
das
mov
xor
xchg
adc
push
sahf
sub
mov
iret
mov
pop
cmp
mov
fistpl
ja
adc
ja
ret
or
cwtl
pop
mov
cwtl
std
fwait
dec
roll
add
test
jns
pop
les
and
idiv
aas
fwait
dec
pop
sub
jnp
out
and
stc
cmpsb
and
xor
mov
loopne
addr16
dec
call
xchg
cmp
lahf
jge
inc
fwait
lahf
add
sarb
inc
add
fcoml
rolb
lea
fs
jne
iret
hlt
clc
dec
jo
xor
xchg
sbb
outsb
sti
popa
pop
out
int
mov
push
ficoms
jae
fbld
leave
mov
fwait
cmpsb
mov
fwait
mov
andb
pop
inc
cli
or
sbb
adcb
push
jmp
and
xchg
pop
adc
hlt
adc
jmp
xlat
mov
cli
push
bound
leavew
rclb
dec
sbb
fnstenv
sarl
and
addr16
cmc
sub
mov
and
lret
cld
jae
dec
lahf
scas
add
push
and
sahf
pop
cmp
xor
dec
mov
mov
fidivrs
dec
pop
adc
lods
cmp
and
xor
mov
outsb
popa
in
dec
or
hlt
push
mulb
retw
cmpsl
sub
clc
cld
cli
stos
bound
movsb
sub
sub
xor
sbb
push
jmp
adc
mov
iret
adc
sub
jb
cli
xchg
pop
sub
cmp
aad
xchg
shrl
cmp
cmp
test
fsts
shl
dec
mov
out
push
setns
add
mov
lahf
mov
fs
sub
jb
mov
int
adc
out
cwtl
cmp
push
hlt
xchg
jecxz
adc
ficoml
jg
and
xor
fs
fucom
sbb
in
pop
pop
inc
es
and
inc
xlat
je
pop
xchg
or
and
out
mov
sub
shl
mov
out
mov
or
add
sub
js
sub
daa
dec
jg
test
xor
xchg
adc
ljmp
inc
pushf
insb
push
fsubs
mov
jp
push
into
cmpl
xchg
mov
aas
subb
pop
jnp
jl
sub
xor
incb
fdivl
scas
jb
jmp
js
xor
cmp
inc
sar
jbe
inc
cmp
jno
mov
mov
fsubs
mov
ljmp
out
pop
mov
icebp
pusha
mov
and
add
lock
mov
mov
aaa
int
notb
add
push
mov
fwait
sar
imul
adc
push
std
int
adc
js
in
mov
or
fbld
mov
jns
mov
mov
jnp
xchg
pop
loope
cmp
or
mov
and
push
pop
adc
test
out
mov
xchg
sbb
leave
pop
sub
add
daa
xor
in
inc
fmulp
jae
dec
imul
add
push
insb
out
cli
aas
cs
sub
clc
mov
rcrb
ja
jno
loope
mov
jmp
and
dec
into
sub
sar
add
and
shl
pop
out
bound
loop
arpl
test
push
clc
pop
xor
pop
jb
jmp
test
jmp
out
cmp
pushf
and
ds
cmp
into
mov
mov
imul
mov
jae
out
xor
mov
dec
push
pushf
rcll
lret
push
cmp
in
adc
and
in
mov
lods
push
out
dec
int
mov
jno
rol
pushf
sub
pop
lcall
mov
xor
addr16
test
je
dec
es
das
insb
add
pop
sbb
xchg
add
in
or
mov
test
and
pop
fdivr
mov
pusha
mov
leave
push
xchg
test
clc
in
fld
movsl
mov
int
mov
mov
mov
inc
fidivrl
loopne
dec
or
mov
lahf
je
mov
data16
jne
les
and
mov
cmp
stc
bound
xchg
lea
fcmovne
mov
jae
mov
push
or
xchg
or
jnp
push
or
add
push
add
repz
sbb
and
pusha
sub
or
mov
mul
xchg
mov
out
jnp
dec
or
mov
in
popf
xchg
mov
pop
hlt
pop
out
fcmovne
enter
jbe
leave
mov
ret
fistl
in
jbe,pn
or
ficompl
pop
jno
jmp
pop
pusha
repnz
mov
push
mov
into
lahf
mov
insl
mov
push
lahf
and
iret
or
adc
lods
lods
jo
loop
push
cmp
mov
fists
sub
ja
push
sti
rcrl
pop
mov
adc
daa
dec
or
pop
pop
stos
jne
movsb
sub
pusha
or
sbbb
repnz
sub
jo
jmp
jmp
out
movsb
mov
mov
mov
clc
dec
dec
adc
dec
cld
shll
std
inc
std
or
call
mov
jge
xchg
push
cwtl
jge
iret
movsl
nop
inc
mov
addr16
pop
mov
pushl
js
lock
push
xor
mov
jp
sub
add
fcmovnb
ret
mov
xchg
in
fcomi
repnz
xor
lock
mov
test
and
xor
xor
dec
jnp
in
pop
pushf
jmp
insl
adc
test
xor
subb
movsl
mov
inc
push
outsb
aam
ds
pop
pop
jg
dec
mov
nop
inc
test
fisubl
les
stos
push
adc
inc
xor
mov
lock
fisttps
push
pop
lret
pop
xchg
pushf
and
int3
loop
or
jle
dec
adc
repz
or
jb
ret
xlat
sbb
lahf
stc
sub
mov
or
mov
in
and
shrl
fwait
les
pusha
pusha
sahf
push
mov
loope
pushf
jno
jo
ret
mov
mov
push
jbe
sub
xorb
iret
push
push
push
push
aam
pop
lcall
mov
rcr
jne
pop
adc
push
jae
mov
mov
jmp
sub
cmp
pop
or
and
push
mov
push
add
or
mov
push
xchg
lods
dec
xchg
add
fnstsw
pop
mov
dec
das
mov
push
lea
pop
cs
mov
mov
push
fnsetpm(287
cs
mov
mov
inc
shlb
push
repz
mov
xchg
add
dec
fnsave
scas
cmp
stos
cmp
mov
mov
lea
outsl
xchg
mov
aaa
movsl
push
cwtl
cmc
insl
mov
push
xor
add
inc
adc
mov
addr16
mov
cmp
mov
and
mov
sahf
mov
adc
insl
lock
test
in
cmp
jb
in
shll
lret
lret
and
lcall
jbe
out
sbb
lods
push
inc
jno
pop
scas
jbe
jns
out
pop
adc
int
lcall
cmpsl
sub
aad
pushf
cmpb
dec
jge
xchg
inc
loop
jl
jo
adc
cs
and
dec
mov
push
or
pop
adc
int3
out
sub
lahf
mov
xor
das
fs
or
test
push
out
push
shlb
inc
sti
inc
out
push
imul
cmp
push
ret
xor
inc
pop
gs
aam
pop
cmp
fnstenv
add
loop
loope
push
mov
cmp
cmpsb
or
stos
vaddps
push
stc
insb
fcmovbe
push
pop
popa
mov
je
xchg
pop
jle
xchg
jo
out
jo
sbb
jbe
cmp
and
ret
ja
movsl
push
lret
test
hlt
jo
jecxz
aas
lret
push
fdivrl
push
cmpsl
imul
mov
bnd
insl
mov
in
daa
or
push
popa
inc
cld
aas
mov
mov
negb
nop
mov
iret
int
inc
add
and
sub
or
adc
scas
mov
mov
push
dec
xchg
jg
sbb
mov
ficomps
xchg
sahf
lods
leave
lods
dec
daa
das
sub
scas
push
testb
mov
lds
add
lea
cmp
loop
lea
fcmovu
inc
cmp
iret
sbb
xchg
stc
subl
arpl
push
gs
xor
sbb
std
in
daa
out
pushf
jl
sbb
movsw
dec
cmp
xor
pop
cmp
push
rcl
in
mov
sbb
outsb
loopne
cmp
loope
xlat
popa
mov
fs
rcr
mov
imull
sub
or
sbb
ljmp
cwtl
push
hlt
inc
xchg
repz
outsb
test
mov
repz
xchg
adc
ror
addr16
js
icebp
ret
cmc
loopne
cmpsl
enter
sbb
mov
stc
mov
jmp
xchg
nop
dec
lds
push
lret
es
pop
sub
jbe
xchg
popf
dec
pop
sbb
mov
inc
test
mov
pop
dec
mov
jns
dec
push
push
push
aaa
inc
jg,pt
in
push
daa
ret
mov
js
inc
adc
jne
fdivrs
fwait
sti
sbb
sbb
jb
mov
pop
testl
in
mov
mov
add
lods
out
mov
rcrl
test
mov
mov
pusha
push
sbb
loope
out
jbe
or
dec
pop
jne
sub
repnz
pop
mov
js
lret
mov
jnp
mov
jne
fwait
sbb
aad
or
push
push
sbb
xchg
inc
bound
mov
mov
jne
iret
bnd
or
dec
push
pop
or
in
inc
fsubl
das
test
push
xchg
jge
cltd
jge
sub
addr16
in
out
mov
ss
dec
push
jae
and
and
xor
sti
jb
inc
sub
xor
test
fcoms
imul
imul
add
decb
mov
bound
xchg
inc
dec
or
xchg
xorl
mov
cmp
ja
xor
inc
dec
rorb
enter
push
or
icebp
das
push
or
add
xchg
jo
sbb
jle
cli
int3
xchg
sub
cmpb
add
int
push
int3
ret
and
arpl
add
aaa
test
cmpsl
repnz
inc
jp
push
scas
mov
addr16
mov
or
pop
ss
shrb
xor
les
insl
pop
lret
jl
xchg
mov
daa
ret
scas
mov
cwtl
inc
inc
xchg
in
imul
sub
lret
sub
or
fiaddl
mov
pop
xchg
ret
sbb
jg
push
shll
ds
dec
mov
xor
inc
and
adc
cmp
pmuludq
lods
call
jo
lods
push
leave
es
push
mov
inc
sbb
inc
jmp
dec
nop
fldcw
decb
mov
popf
inc
psrld
lock
mov
rcrl
fnstsw
in
movb
scas
inc
xchg
inc
fcoms
in
imul
jmp
dec
mov
imul
xorl
inc
fisubs
mov
push
ja
mov
xchg
jle
mov
mov
ret
xor
add
add
push
ljmp
mov
add
fdivs
hlt
pop
cmp
or
stos
adc
arpl
cmp
loope
cli
in
lret
mov
repnz
divb
inc
mov
das
mov
ja
and
push
mov
push
jns
clc
inc
sub
lods
mov
adc
xchg
adc
jmp
pop
cltd
bound
sbb
push
adc
popf
or
add
dec
and
or
daa
sub
sub
std
hlt
and
mov
sbb
add
and
imul
lds
das
push
dec
bnd
pop
mov
mov
adc
ss
fsubl
sbb
movsb
dec
fildll
mov
jl
xlat
xchg
data16
xor
sahf
sub
inc
mov
lahf
scas
cmp
mov
arpl
push
xlat
pop
cmp
pop
lods
inc
xor
mov
rcll
ja
sub
jmp
std
ds
cmp
ljmp
cmc
test
push
ljmp
pop
addr16
pop
and
sarb
shll
popf
roll
jns
cmc
daa
orb
repz
sub
movsl
out
adc
push
jne
testl
hlt
mov
daa
push
cmp
lret
mov
bound
and
mov
sbb
loopne
jne
js
xchg
pusha
sbb
jns
nop
inc
loop
and
sbb
pop
push
out
inc
movsb
mov
outsl
clc
mov
dec
lret
cmp
les
cwtl
xor
sub
cli
dec
outsb
inc
mov
cmp
sub
idivb
lea
push
fcmovnu
cltd
and
adc
fimuls
mov
sbb
adc
enter
icebp
rcrl
mov
cmpsl
and
pop
push
iret
cmp
mov
adcb
mov
and
add
mov
cld
dec
popa
or
add
xchg
cmc
and
insb
cmp
fs
arpl
int3
cltd
insl
cmp
xchg
gs
arpl
fsubrl
scas
imul
mov
mov
jnp
jmp
mov
je
jae
fwait
xchg
cmp
out
shll
jo
jecxz
test
mov
insl
rclb
push
push
icebp
addl
or
lea
and
push
mov
addr16
pop
mov
cwtl
lock
mov
mov
dec
dec
scas
outsl
pop
int
lods
sbb
pop
int3
out
ljmp
ret
pop
add
mov
shrb
nop
pop
cmp
shll
pop
sub
add
jl
mov
mov
and
in
std
sti
insb
mov
pop
xchg
xchg
jnp
mov
cmpsb
xchg
xlat
jecxz
scas
repnz
insb
and
or
outsb
scas
cmp
and
rolb
pop
cmp
mov
cmp
mov
xor
pop
inc
xor
mov
mov
ljmp
jb
hlt
or
call
mov
addr16
jno
das
shlb
push
loopne
iret
leave
cmp
fcomp
inc
lret
repz
je
pop
push
jbe
push
add
ret
xor
test
test
add
and
adc
fnstcw
or
add
rclb
cmp
fmul
push
mov
jne
mov
cltd
aad
jbe
out
mov
push
mov
mov
fwait
add
and
pop
enter
jae
push
push
hlt
popf
data16
sbb
int3
jl
or
pop
jmp
aam
inc
mov
dec
in
fisubl
lret
push
movsl
stos
xchg
and
lock
and
loope
imul
fiaddl
cld
repnz
imul
jbe
shlb
cli
xchg
ss
jae
xchg
test
into
out
inc
aas
dec
or
push
dec
shll
jne
xchg
sbb
inc
mov
out
mov
push
jns
aad
dec
inc
arpl
jge
call
push
xlat
out
push
mov
and
cmp
dec
fidivrl
mov
cmpsl
push
push
andl
sub
inc
dec
das
movsl
add
je
pushf
mov
jp
fsubl
stos
inc
jmp
ja
pop
dec
push
mov
xchg
jle
sub
sahf
mov
sarl
pop
sti
insb
or
or
fs
jl
cmp
pop
aam
and
cld
loopne
inc
jno
je
int3
push
dec
mov
mov
lret
popa
mov
cli
sub
mov
jne
cmp
es
repnz
xchg
xchg
dec
adc
dec
pop
ds
jne
lock
fimuls
movsl
fs
push
lret
daa
inc
adc
mov
out
sub
mov
dec
or
mov
sbb
js
xchg
insb
les
lock
sarb
call
lock
push
sub
loope
test
inc
adc
xor
cmp
out
xchg
ss
dec
push
xor
aas
scas
and
cmp
movsl
nop
out
or
mov
lods
test
aad
js
or
jle
xor
mov
sub
mov
stc
add
test
mov
lods
or
inc
in
test
shlb
jecxz
xchg
test
xor
pop
sub
mov
sti
add
mov
and
out
cwtl
leave
xor
inc
push
xor
mov
shll
sbb
movsb
pop
fprem
in
std
jns
jl
cmp
dec
test
xchg
gs
inc
pop
mov
rcrb
add
dec
cmp
aaa
sub
pop
pshufw
jb
mov
mov
dec
in
iret
loop
xlat
add
sub
movsl
loope
or
xchg
or
push
sti
or
adc
pop
lcall
mov
cltd
dec
or
aam
les
jno
dec
cmp
xchg
inc
lock
ljmp
shrb
or
mov
shrb
inc
adcl
and
arpl
imul
aam
push
mov
adc
inc
insl
mov
das
rep
lcall
sub
outsl
lds
lcall
pop
pop
mov
jp
cmp
pop
pop
ret
mov
jecxz
jge
stos
insb
bound
jg
jg
dec
mov
jns
jb
pop
outsl
movsl
fildl
cmp
in
lahf
dec
adc
loopne
cmp
std
mull
inc
adc
inc
pop
sub
push
and
lock
shl
imul
les
mov
or
js
mov
or
leave
jo
mov
xor
cmp
enter
and
mov
stos
outsb
xor
dec
icebp
inc
aad
mov
jnp
fistpll
scas
loop
mov
leave
sbb
jb
xchg
ja
xchg
daa
int
and
ret
cmpsl
jle
into
add
mov
xlat
push
out
shrb
jecxz
mov
adc
fwait
jno
out
inc
dec
fs
dec
push
iret
orl
or
and
push
rcl
cli
aaa
push
and
and
and
or
xchg
ret
fs
xchg
cwtl
scas
xchg
pusha
rorl
into
sahf
xchg
mov
ljmp
mov
shl
push
push
pop
lcall
mov
sub
mov
push
imul
cmp
rol
fcmovne
inc
and
rorb
arpl
shrb
ss
inc
fxch
pop
xchg
fstp
cwtl
sbb
xor
aam
mov
cmp
ja
inc
ss
cmp
xor
dec
sbb
loope
xchg
lret
ror
mov
bound
jp
mul
mov
push
out
xchg
inc
lods
fnstenv
mov
adc
push
hlt
adc
or
pop
lcall
fs
push
xchg
fs
fiaddl
aas
pop
fimuls
out
mov
pop
xchg
cmp
xchg
dec
imul
iret
andl
xchg
pop
je
push
fstps
lds
pop
scas
xor
sub
in
das
push
dec
in
rcrb
and
mov
or
add
and
pop
test
mov
cmpsb
push
jecxz
leave
lds
sti
movsl
sub
xchg
je
push
pop
loope
and
mov
stos
das
xlat
xor
pushf
ret
jae
or
repnz
fldenv
aad
cli
jne
or
out
push
cmp
test
sub
iret
ds
push
je
fnstsw
cmp
pop
pop
je
cmp
push
movsl
cmpsl
outsb
vmovapd
data16
jo
subl
jae
ds
mov
pop
xchg
push
into
insl
dec
lcall
mov
or
sbbb
or
and
pop
sub
push
jecxz
push
bound
ret
clc
mov
cld
add
mov
cmp
lcall
jmp
mov
sub
add
xor
out
fcmovnbe
mov
xchg
mov
push
mov
in
shlb
jge
test
sahf
lea
fwait
int3
jge
pop
fnstenv
hlt
cli
xlat
fistl
or
loopne
lcall
es
lret
clc
push
sub
dec
cmpsb
sub
and
or
adc
or
or
mov
repnz
cmp
out
outsl
divb
xchg
daa
mov
iret
sub
paddusb
das
cmp
lock
mov
mov
jge
push
mov
xorl
and
mov
test
dec
xchg
sub
addr16
and
lods
ds
pop
jo
aad
or
dec
pop
pop
mov
jno
xor
fwait
jo
scas
mov
push
jne
cltd
xchg
cld
and
and
leave
jmp
jnp
movups
add
cli
std
xor
jb
xlat
fdivrl
out
dec
push
nop
fbstp
decb
or
inc
leave
mov
stos
or
add
xchg
xlat
in
sub
adc
push
mov
repnz
xchg
out
jge
loop
popf
mov
jns
xchg
ds
popa
dec
in
push
mov
pop
pusha
shr
and
mov
lcall
add
cmp
inc
push
pop
and
nop
mov
cmp
mov
and
ss
lret
xlat
clc
dec
sbb
inc
lea
cmp
dec
mov
int
jns
jmp
incl
cmpsb
or
add
xchg
out
sbb
push
mov
and
xchg
and
mov
call
pop
dec
enter
cmp
ret
jns
int
fsub
or
push
daa
lds
out
pop
stos
outsb
adc
movsl
mov
stos
mov
mov
jp
pop
lea
dec
sbb
push
loop
call
xchg
xchg
pop
mov
jle
jp
in
test
ror
hlt
cmp
add
insl
scas
mov
inc
xchg
lods
mov
sub
movsl
xchg
xor
aas
ret
icebp
sub
dec
mov
push
dec
pushf
js
adc
xchg
add
loop
int3
pop
mov
shrb
lods
cmp
iret
mov
cmpsb
pop
sub
ret
pushf
scas
daa
cmpsl
in
aas
pop
fdivs
imul
movsb
ret
icebp
ficoms
imul
xor
xchg
mov
jo
lret
test
sub
jp
lcall
jo
popa
movsl
lea
xchg
and
hlt
inc
popf
aam
notb
push
sub
push
iret
cmpsb
mov
adc
loope
pop
mov
sub
push
adc
inc
push
aas
dec
xor
cmpsb
pop
fisubrl
xchg
xchg
repz
mov
mov
cmovno
sbb
std
cmpsb
jo
push
adc
mov
mov
mov
fsubr
mov
in
lcall
pushf
pusha
ljmp
cmp
pop
dec
jbe
push
rcll
push
mov
sub
fisubrs
hlt
adc
sbb
xchg
aaa
testb
xchg
aad
std
mov
cmpsl
arpl
dec
bswap
fsubrp
cld
mov
mov
pusha
push
iret
cmpsb
cwtl
or
daa
xor
imul
jae
mov
sub
mov
adc
lcall
cmp
ds
lea
and
ror
mov
sbb
ret
jl
xorb
adc
ret
test
mov
lahf
orb
mov
dec
dec
ret
sub
or
stos
add
clc
dec
es
jl
push
sub
and
les
subb
dec
out
cmp
in
dec
fiaddl
sahf
pop
lret
int3
leave
xchg
in
jp
fimuls
lahf
and
outsb
push
in
inc
les
push
xor
push
rcll
push
out
pop
fsts
lods
shl
sarb
hlt
jne
mov
dec
push
test
cvtps2pi
and
iret
mov
push
jl
mov
in
mov
mov
ljmp
adc
outsl
dec
cmpsl
xchg
pusha
cmp
repz
outsb
das
jge
and
mov
rcrb
lret
fimull
pop
mov
add
repnz
push
test
mov
jno
xchg
shll
imul
adc
jbe
lret
sbb
xchg
sbb
inc
sub
or
lock
jno
push
push
or
jmp
mov
mov
fcomps
cmp
ss
sbb
pop
stos
lret
mov
jmp
hlt
test
mov
adcl
add
les
sbb
mov
fldenv
pop
test
lds
push
mov
ss
sbb
lods
stc
push
daa
pop
fldl
aas
add
rolb
nop
inc
dec
cwtl
jo
aaa
xchg
mov
outsb
push
sbb
cmp
mov
push
popa
xchg
popf
sub
sbb
jg
mov
push
out
pushf
clc
dec
shll
xor
mov
pop
add
sbb
jnp
outsb
sub
xchg
inc
sbb
fcmovnb
popa
outsb
pusha
ljmp
xor
shrl
cli
out
in
mov
jmp
pop
xor
lahf
xchg
ja
fisubs
push
repz
add
imul
bound
icebp
mov
outsb
mov
or
adc
add
andb
repnz
dec
notb
test
inc
mov
out
inc
into
mov
aad
mov
addr16
scas
mov
add
and
fwait
sbb
jo
lods
pop
sub
mulb
and
iret
or
or
es
fldt
stc
inc
loopne
out
out
lods
cmovs
sub
jbe
push
push
sbb
push
std
fwait
add
call
int3
test
stos
int
pop
cld
pop
adc
jo
sub
dec
add
push
dec
movsb
sbb
xor
push
adc
mov
popa
mov
inc
aam
loopne
xchg
scas
cmp
sub
add
shrb
or
int
sahf
stc
in
shl
adc
fsubrl
arpl
or
jnp
and
cmp
dec
test
mov
cmp
aad
jns
stos
push
adc
fsts
scas
jae
xor
in
pop
mov
in
mov
loopne
pusha
insl
sub
jmp
test
or
mov
inc
or
adc
insb
fwait
cwtl
lret
mov
das
cmp
scas
icebp
in
in
mov
nop
cmp
add
jnp
mov
dec
pop
cmovnp
inc
es
sti
sbb
outsb
push
xor
pop
test
pop
and
stos
test
js
or
add
inc
or
hlt
outsl
xor
mov
adc
in
aad
xor
scas
aaa
xchg
out
ds
and
mov
add
push
lret
mov
xor
push
xor
popf
aas
test
mov
ja
sbb
leave
mov
cmp
sbb
jae
movsb
jns
imul
sbb
sbb
xchg
repz
in
push
mov
mov
pop
sub
cmp
add
sbb
aas
dec
mov
xchg
ret
mov
push
jne
outsb
push
jp
xchg
dec
mov
hlt
vpavgw
mov
mov
cmp
cmp
jp
std
jo
add
xor
jb
sub
out
insl
in
and
lret
cmp
mov
dec
clc
ss
aas
leave
das
rcrb
mov
xchg
dec
call
xchg
xor
inc
mov
xor
js
icebp
push
push
js
cmc
test
pop
sahf
cmpb
sub
pop
dec
in
mov
mov
iret
xor
pusha
arpl
mov
mov
loop
cmp
cwtl
outsb
add
pop
stos
lock
lds
mov
xchg
xchg
jmp
push
push
jl
xchg
ss
xchg
adc
fwait
pop
repnz
fcomps
out
pop
dec
nop
dec
mov
rorl
xchg
or
pop
loope
cmc
mov
mov
fsubrl
stos
rcl
push
jle
and
stos
dec
cmc
xchg
dec
mov
xlat
cs
push
mov
jl
pop
mov
or
repz
fs
roll
pop
ds
push
inc
sti
adc
sbb
dec
adc
ljmp
int
in
notl
mov
scas
testb
xor
adc
xchg
icebp
cmpsl
mov
xlat
push
je
pop
add
sbb
ljmp
sub
test
lods
test
enter
lret
out
push
cmpsb
add
jmp
in
mov
push
ss
inc
bound
dec
add
pop
sbb
jns
xchg
cmp
mov
aam
pop
or
movsb
lds
pop
out
into
push
adc
pop
xchg
push
aad
cmp
jg
cli
je
pop
je
sbb
sbb
fwait
decb
xlat
sub
jmp
call
jo
mov
insl
lcall
orb
adc
adc
gs
xchg
pop
and
fisubl
jne
fsubl
push
sub
cmc
lahf
icebp
push
fistl
imul
cmp
or
into
or
pop
pusha
int
iret
iret
fstpt
jnp
fisubl
int
out
loope,pt
ds
push
xlat
and
mov
push
into
jo
mov
add
cmp
outsl
sub
mov
insb
test
or
sbbl
mov
and
ljmp
dec
cmp
test
lcall
daa
aas
addl
mov
or
movsb
fwait
lods
sti
call
call
test
mov
fyl2x
push
addr16
icebp
xor
mov
mov
test
mov
sbb
call
rcll
lock
xchg
and
jge
bound
mov
or
xchg
enter
dec
mov
test
dec
stc
pop
in
clc
mov
jae
push
popf
stc
sub
lea
cmp
jle
das
popa
loop
jb
inc
stos
lock
rcll
dec
or
push
mov
push
sub
loopne
push
mov
lahf
add
ds
cmpsl
cmp
jbe
dec
xor
les
mov
pop
add
test
lods
pop
cmc
mov
movsb
shr
mov
inc
sbb
push
scas
test
sarb
stc
lods
inc
cmp
xor
cmp
aad
fstpl
push
addb
js
inc
scas
mov
repz
cmpsb
outsl
inc
adc
les
mov
sbb
cmp
xchg
mov
incb
jmp
in
push
mov
lret
outsb
adc
push
cwtl
jg
pushf
cmp
mov
in
xchg
fwait
sti
mov
in
jns
cmp
addr16
and
cmp
enter
sbb
aad
xor
adc
or
lret
inc
sahf
push
daa
arpl
out
repz
push
mov
jp
in
stc
jl
sub
push
dec
outsl
cmp
cmpsb
push
lds
pop
rcrb
out
fsub
jno
jb
push
jns
sbb
mov
lret
orl
add
daa
sbb
push
pop
and
lods
cmc
add
pop
cwtl
rclb
jnp
xlat
pop
mov
fdivrp
and
xor
insb
jns
sbb
fcoml
sub
mov
dec
cmp
lds
or
mov
andl
push
fisubrs
int
lods
sub
adc
adc
outsl
stos
das
mov
aas
sar
jb
sbb
ja
or
or
js
push
adc
xchg
mov
xchg
in
test
stos
stos
or
mov
movsb
loopne
test
icebp
or
mov
es
int3
fmuls
pop
sarb
insb
subb
mov
shrb
test
fxch
or
adc
pop
and
movups
notl
and
fnstenv
cltd
sbb
fiadds
push
dec
sub
icebp
loopne
aad
xchg
rcrl
mov
mov
aad
dec
fwait
incl
test
adc
xchg
out
jnp
mov
cli
dec
fidivrs
push
push
inc
inc
push
call
push
arpl
pop
mov
into
loope,pn
cmpb
fcmove
aaa
ret
xor
rdmsr
mov
aaa
mov
jg
jnp
negb
into
scas
in
in
out
cs
dec
ret
xchg
or
cmpb
adc
jg
iret
cmp
jae
roll
and
adc
or
dec
fdivl
sti
ljmp
dec
jb
sbb
push
nop
cmp
pop
cmp
cli
inc
xlat
in
push
out
inc
pop
xchg
aas
mov
hlt
stos
push
stos
repnz
xor
jnp
je
cld
jns
adc
mov
clc
jge
xor
test
clc
mov
shrb
sbb
push
or
repz
push
cli
pushf
add
add
das
pop
sub
jp
out
out
jo
cwtl
xor
sub
sbb
cmc
movsb
test
les
in
ret
jne
lods
xchg
addr16
and
jo
or
enter
dec
je
adc
fidivrs
xchg
int3
adc
push
outsl
dec
jns
sub
inc
pop
cmp
mov
repnz
and
xchg
aaa
or
iret
mov
xor
iret
fisubs
test
fidivl
fs
dec
stc
dec
icebp
out
jge
jmp
adc
jl
dec
mov
adc
lods
and
and
inc
cmp
push
adc
or
rorl
jmp
or
stc
mov
jbe
pop
test
push
adc
xchg
jno
sbb
inc
or
gs
and
lock
and
jb
cld
lret
jbe
fiadds
repz
out
daa
mov
mov
inc
ja
inc
test
pop
les
lahf
push
jl
sbb
sahf
out
aam
or
icebp
int3
mov
xchg
ret
ffreep
lcall
adc
xor
js
jbe
lcall
movsl
das
xchg
mov
insl
das
iret
lea
sbb
in
outsb
lret
dec
rorl
jne
pop
pop
arpl
test
mov
and
cltd
push
fstps
cmp
and
dec
repnz
dec
mov
lea
mov
add
repz
cmpsl
shlb
repz
mov
cli
xchg
push
repnz
xor
jb
insb
iret
mov
adc
cltd
ret
sbb
imull
jmp
pop
add
sahf
std
jecxz
push
cli
mov
jmp
cmpsb
icebp
mov
jo
mov
dec
and
enter
xchg
cmp
xor
and
pop
ret
xor
add
and
mov
mov
sbb
jle
out
in
xchg
push
aas
test
pushf
insl
loop
cmp
push
xchg
dec
dec
cmp
imulb
mov
pop
inc
js
sbb
add
int3
dec
push
dec
mov
cmp
xlat
xor
sbb
lcall
cmpsl
xor
test
movsb
sbb
in
movsl
repz
mov
lods
loop
cmp
cmp
loopne
inc
adc
add
pop
pusha
sbbl
shll
sti
pop
ljmp
lahf
sbb
and
pop
push
fidivl
addr16
fcmovu
fists
outsb
shlb
mov
cmpsb
stc
mov
dec
mov
clc
add
xchg
adc
hlt
loope
mov
mov
aad
ds
popf
adc
cltd
sbb
cmpsb
lea
sbb
ds
ljmp
lcall
xor
sub
stos
test
adc
loop
pop
enter
mov
inc
mov
and
insb
in
daa
mov
mov
arpl
leave
add
dec
sti
cmp
cmpsl
adc
mov
lods
pop
jns
inc
xchg
sbb
clc
movsb
ljmp
jmp
mov
jo
mov
ss
pusha
mov
pop
movsl
mov
mov
sbb
jns
cmc
add
ljmp
pop
jmp
imul
popf
or
das
fwait
cld
cmpsb
pop
int
outsl
push
or
mov
pushf
mov
xchg
hlt
push
icebp
sub
and
je
push
stc
dec
out
aaa
ficomps
xchg
subb
push
push
inc
fstp
cmp
pop
fdivrl
cmp
xor
cs
sbb
loope
lcall
cmc
xchg
cld
mov
xor
into
data16
insl
mov
nop
pop
pop
mov
mov
jp
das
mov
mov
inc
mov
aad
xchg
rclb
pop
xchg
lret
int
jbe
mov
fidivrl
movsb
dec
push
xchg
gs
in
and
xchg
push
and
add
xchg
mov
lcall
out
xor
jg
aaa
in
push
and
shl
pop
jp
scas
es
ret
add
mov
jge
sbb
dec
daa
loopne
test
aam
scas
daa
jecxz
cwtl
sub
les
aam
or
cmpsb
cmp
mov
pop
leave
push
cmpl
nop
popf
inc
loopne
loop
inc
cmc
out
nop
push
shll
test
icebp
add
cmp
aaa
sub
inc
add
jae
mov
lods
mov
push
xor
orl
ss
pop
repz
pop
aaa
sub
inc
sbb
add
int
sub
repnz
push
icebp
fnstenv
jge
jbe
mov
jne
lret
jle
repz
or
inc
mov
imul
xchg
xchg
mov
lahf
or
notl
xchg
and
fdivl
popf
push
push
mov
into
add
pop
es
adc
stos
mov
cmp
mov
sbb
leave
mov
xlat
movsb
sbb
in
sbb
int3
lret
mov
adc
push
jmp
and
out
cmc
jns
xchg
mov
aad
loope
jp
push
test
call
cltd
jmp
xor
fwait
mov
clc
in
leave
jnp
loopne
cmp
sarb
in
mov
jbe
popa
scas
pop
movsl
sbb
cmp
pusha
jne
sbb
sub
push
imul
imul
sub
mov
and
sub
leave
and
ljmp
mov
stos
mov
cmp
mov
in
js
and
mov
mov
repnz
xchg
dec
aas
outsb
cmp
jmp
xchg
imul
inc
xor
sub
jbe
push
fdivrl
aad
xlat
xchg
add
inc
cmp
aaa
cmc
ret
inc
or
or
inc
out
push
outsl
insb
nop
cmc
fsubrs
sub
or
xor
jecxz
les
cmpsl
mov
fcoml
dec
or
mov
pop
movsb
pop
ret
or
popf
lea
imul
cmp
packsswb
outsl
jle
dec
jbe
mov
daa
das
or
cmp
addb
test
decl
sub
fldcw
fildll
scas
decl
mov
inc
jo
sub
mov
or
cltd
lcallw
push
push
leave
mov
sbb
lret
ja
fisttpl
lods
insl
add
mov
notb
addr16
repnz
vhsubps
in
mov
in
test
ja
push
jbe
xor
mov
insb
push
sub
data16
lret
xchg
into
mov
pusha
xor
bnd
out
add
shl
adc
ljmp
add
sbb
aas
outsl
in
fcoml
push
rdpmc
xchg
loopne
xchg
pop
jb
xor
les
sbb
aas
test
loop
jge
mov
insb
jmp
mov
mov
sarb
dec
sbb
xchg
pusha
fadd
sub
and
fadds
pusha
nop
add
outsl
jg
jo
loopne
movl
cmpb
cmp
rorb
gs
in
jbe
xchg
xchg
fs
add
scas
out
inc
dec
pop
add
jo
imul
xlat
pop
xchg
push
mov
psrlq
gs
fldenv
es
mov
cmc
dec
inc
popa
mov
cs
das
icebp
popf
cmp
cmp
push
mov
jmp
mov
pop
sub
test
sub
testl
sub
jle
add
pop
sahf
mov
cli
fiadds
xchg
adc
scas
and
or
cwtl
jae
dec
dec
push
mov
ret
jne
sbb
mov
fisubrs
sub
les
sub
scas
repnz
add
adc
loope
mov
or
into
push
loopne
loopne
js
dec
xchg
fdiv
icebp
ja
lahf
mov
pop
je
repnz
js
ret
xchg
outsb
xchg
jne
out
sbb
sbb
imul
out
pushf
dec
pop
jg
outsb
sbb
adc
popf
sub
push
dec
in
mov
test
sub
cmp
and
add
in
sub
cmp
jnp
mov
mov
dec
or
out
inc
insl
jae
std
mov
and
sub
roll
sub
in
mov
fst
dec
pop
lret
and
repz
lock
imul
mov
or
pop
imul
loope
pop
das
cli
cltd
dec
out
cmc
inc
negb
jno
mov
gs
and
cltd
dec
xchg
xchg
or
adc
mov
nop
mov
shrb
cmp
insb
popf
xchg
push
into
push
push
cs
inc
mov
adc
sbb
xlat
cmp
add
jno
outsb
push
inc
jb
iret
push
ds
sub
fimuls
int3
dec
mov
mov
aad
or
sbb
jae
xchg
add
fdivrl
ficoml
sub
pop
mov
cmp
xchg
shll
sub
bswap
jae
movsl
cmc
pop
sub
mov
lea
adc
rolb
push
mov
imul
fstl
loopne
jmp
test
sub
stos
clc
inc
loop
and
cwtl
movsl
sbb
jecxz
out
in
scas
aaa
mull
out
pop
sti
out
repnz
int3
push
and
jno
js
jge
ds
xor
and
push
andb
mov
mov
cmp
mov
sub
lods
add
mov
sbb
push
xor
or
sub
mov
add
enter
add
mov
popa
adc
or
fdivp
dec
aaa
inc
ret
iret
xchg
xchg
xor
insl
and
movsl
pop
icebp
bound
dec
cmp
in
push
imul
leave
jns
xor
push
aaa
inc
aaa
daa
or
mov
mov
push
sub
fisttpl
in
jno
cld
es
adc
bound
push
cmp
pop
fwait
inc
pop
ss
jg
mov
in
imul
mov
inc
jle
jp
fnstcw
cld
popa
dec
test
pop
roll
das
xor
test
sub
cmp
das
jae
pop
mov
out
cli
mov
jne
leave
leave
insb
or
data16
pop
pop
and
inc
cmpsl
jp
cmp
or
jnp
adc
ret
xlat
sbb
pop
push
push
rclb
pop
xor
cmp
cltd
fimuls
cli
sub
popf
adc
ret
push
and
mov
popa
mov
movsl
fisubs
jg
adc
sbb
sub
dec
xchg
push
jecxz
pop
orb
dec
std
cmp
jp
lds
and
push
pop
stc
sub
xchg
notb
outsl
out
iret
add
lock
mov
sti
movsl
test
xchg
es
pop
push
enter
push
mov
sbb
mov
jmp
insl
shll
xchg
test
adc
icebp
aaa
adc
and
mov
loop
pushf
scas
mov
and
xchg
je
stos
jmp
jne
repnz
leave
rcll
dec
push
int
and
adcl
jge
lods
mov
sub
jecxz
inc
insb
ljmp
shrl
insl
icebp
out
shll
jb
mov
push
xchg
fcmovnu
cmp
and
out
inc
mov
dec
in
flds
and
pop
les
in
or
shll
or
loope
lods
andb
decl
repnz
inc
jecxz
xchg
mov
orl
ret
fidivs
pop
cmc
ret
pop
mov
lea
and
mov
lds
cs
xchg
jns
bnd
aam
mov
jge
arpl
hlt
hlt
push
ret
adc
cmp
xor
ljmp
test
xchg
inc
clc
mov
in
in
into
inc
pop
ret
mov
orb
jae
addb
idiv
sbb
xor
jae
jns
or
xor
pop
andl
leave
test
sahf
sahf
jecxz
push
rol
or
lods
xor
add
xor
push
xchg
cmp
sub
les
cmp
aas
pop
es
jb
out
cmp
mov
imul
adc
icebp
fisubrs
lret
pop
sub
push
sub
jl
push
jo
pop
cmp
mov
push
shll
in
inc
mov
fidivrs
dec
repz
jl
ds
imul
outsl
btr
out
out
dec
dec
sbbb
adc
inc
test
cmpsb
pop
xor
dec
adc
jbe
call
sbb
xchg
xor
push
aas
js
nop
mov
sub
addb
jo
sarb
daa
scas
sub
test
add
sub
out
rorb
pop
xchg
enter
mov
pop
add
insl
inc
popa
inc
mov
popf
cmp
push
mov
xchg
and
xchg
test
dec
sub
mov
lds
out
imul
lcall
pop
mov
cli
add
push
divb
inc
dec
inc
movsb
jne
cmp
push
pop
sub
mov
and
fstpl
xchg
or
push
ret
das
add
rclb
stos
inc
jno
xchg
sbb
ficoml
sub
inc
and
dec
pop
lock
popa
cmp
shrb
pop
mov
mov
sbb
repnz
and
popa
in
ja
or
stos
mov
sub
mov
pop
pop
insb
lds
lods
outsl
cmp
pop
xchg
in
ja
aam
mov
mov
sub
aas
mov
mov
notb
xor
adc
or
lea
xor
movsl
loop
cmp
mov
cmp
mov
sub
pop
jbe
mov
push
out
loop
out
insb
out
pop
adc
inc
adc
xor
shll
dec
inc
xor
fisubs
outsl
mov
data16
aam
les
in
ret
pop
shr
sub
dec
fnsave
in
test
lock
dec
pop
fstpl
in
enter
scas
fbstp
mov
jmp
cmp
test
cld
subb
sbb
iret
jbe
hlt
xchg
or
andb
in
push
push
pop
into
push
lock
outsb
fcomi
inc
lock
incl
dec
cmp
add
cltd
or
nop
bound
pop
shll
out
sub
in
pop
mov
js
mov
imul
adc
dec
mov
aaa
test
sub
mov
incl
orb
out
lret
inc
gs
pusha
aad
out
jno
cmp
dec
cmp
xor
push
shlb
cmp
scas
dec
xchg
cmc
mul
mov
sarb
xor
mov
pop
jb
enter
push
pop
or
ret
repnz
aam
jb
xchg
fsub
lods
filds
or
ljmp
jg
xor
xchg
jno
mov
out
insl
and
or
into
sbb
lds
xor
subl
int
ret
mov
add
leave
adc
in
out
scas
jo
jle
adc
outsl
and
add
jo
cmp
scas
repz
and
push
jmp
pusha
jle
dec
add
jl
xchg
repnz
jne
xor
jg
ret
adc
decb
dec
jle
fstl
xchg
cmpsl
gs
shrl
nop
rcrl
dec
lods
sti
pop
add
test
inc
jle
xor
cmp
rol
bound
lods
popf
loopne
sbb
test
sbb
das
push
jp
lock
jecxz
jp,pt
xor
pusha
insb
cmc
and
addr16
divb
bound
fwait
pop
inc
xlat
mov
pop
aam
shrl
mov
xchg
inc
push
add
repz
xor
mov
pushf
or
inc
fs
and
add
pop
or
loop
mov
xchg
lods
icebp
loope
adc
push
xchg
jbe
ds
jp
dec
xor
and
hlt
adc
dec
sahf
fmuls
xor
cmp
lret
addr16
data16
jmp
pop
xor
js
in
jg
mov
and
jecxz
lahf
cmp
xchg
jns
mov
pop
and
pop
outsb
outsl
xor
or
rclb
jb
jl
mov
push
lds
and
std
je
mov
test
xchg
cli
add
cmp
test
xchg
rcrb
pop
lds
push
int3
cmp
lds
or
sub
mov
and
jecxz
push
stc
out
xor
adc
fnstsw
add
push
dec
rclb
sar
movsb
add
lret
pop
pop
jb
adc
fisttps
lods
or
pop
sub
dec
dec
data16
sbb
dec
xchg
jno
cmp
jge
jle
and
out
movsb
andb
cmp
push
mov
adc
add
push
mov
ljmp
cmc
pusha
jb
repnz
dec
and
pop
idivb
jge
into
call
pop
xchg
sub
dec
je
dec
sbb
xchg
test
fisttpll
in
loope
jo
in
popa
push
inc
sbb
rcl
rclb
inc
insl
pop
mov
push
add
mov
push
xor
or
inc
inc
stc
outsb
or
lock
dec
insl
dec
xchg
in
fcmove
add
rcl
push
repz
dec
adc
sub
shll
cmc
jge
pop
je
mov
mov
es
dec
dec
inc
fistps
inc
dec
push
or
jno
pop
xor
cmp
arpl
pop
test
jb
sub
lea
xor
pop
mov
outsb
xor
mov
scas
clc
inc
cli
imul
testb
mov
mov
shlb
or
fiaddl
and
and
cs
lret
xchg
repz
jno
int3
mov
jp
mov
pop
push
movsl
cmp
clc
sti
mov
movsl
ljmp
icebp
mov
mov
push
adc
xor
das
test
mov
push
cmp
sub
jmp
push
push
jge
mov
adc
test
xchg
icebp
js
mov
mov
imul
in
outsl
adc
push
add
or
sub
mov
pop
add
stc
mov
push
mov
pop
clc
addr16
xchg
and
xor
int3
mov
inc
sbb
sti
push
stos
stos
stc
sub
sbbl
lock
sub
ss
mov
mov
fxch
add
popa
xlat
sbb
andb
loope
daa
mov
cmp
xchg
inc
xlat
fwait
mov
push
mov
sub
and
and
adc
xor
jbe
cmp
popf
add
sahf
mov
dec
push
lret
iret
adc
repnz
imul
cltd
jb
lock
pop
push
inc
movsb
js
mov
lret
push
cmp
lahf
test
aaa
mov
push
in
push
or
push
enter
ficomps
cmpsb
inc
mov
decl
dec
mov
ja
mov
push
es
mov
imul
ds
sbb
jns
repz
push
pop
aad
lret
xchg
mov
pop
lret
mov
xchg
cmp
out
cmp
adc
jecxz
sbb
nop
jge
arpl
xor
cmpsb
or
cmpsb
out
jns
xchg
enter
lret
lods
call
jg
clc
xchg
inc
add
lret
mov
ror
idivl
imull
mov
pop
xchg
push
loop
aaa
pushf
imul
cmp
sub
loope
fs
sarb
adc
out
std
aad
in
pop
stos
lcall
jbe
sub
jne
adc
mov
push
out
pop
addl
mov
xchg
mov
push
test
scas
push
xchg
inc
ret
mov
stos
jno
xor
das
loop
lods
popa
loope
es
fdivl
pop
push
xchg
shrl
aas
into
cmovl
or
inc
mov
mov
dec
popf
roll
js
or
mov
xor
cmp
pop
in
pop
dec
ja
lahf
mov
lods
dec
int3
mov
jne
add
addr16
add
leave
insl
push
lods
das
xlat
and
sbb
xor
xchg
xchg
lds
dec
int
jge
test
adc
fisubrs
fstps
gs
leave
push
xchg
and
sub
adc
push
lahf
js
cli
fcoml
xor
lock
cltd
mov
movsb
imul
lea
lcall
imul
mov
out
out
or
xchg
xor
aas
jle
jle
lock
mov
test
xlat
xchg
pop
push
loopne
sarb
nop
mov
shr
loope
cmp
or
bsr
repz
push
pop
pop
subb
mov
dec
dec
loop
dec
push
cmpsl
mov
push
sub
lahf
xchg
mov
sbb
dec
jo
jge
jb
imulb
add
sbb
sub
notb
mov
mov
xchg
lock
mov
fstp
mov
jl
add
jo
fistl
jecxz
cmp
jnp
les
add
loopne
pop
push
addl
adc
addr16
shlb
mov
adcl
push
je
dec
stos
scas
testl
aad
pop
mov
test
or
insl
sbb
dec
xor
ret
mov
cs
cmpsl
push
call
dec
stc
jmp
pop
sbb
jno
fs
pop
cmp
jge
icebp
mov
fisttpl
adc
dec
fwait
cltd
xchg
loopne
les
pop
mov
cmp
pusha
imul
push
add
int3
je
fmuls
inc
jae
add
fisttps
mov
fdivs
fucom
mov
cmp
and
mov
push
xchg
in
pop
or
pop
ds
pushf
sub
outsb
lret
ljmp
js
jg,pn
jnp
push
test
jnp
push
or
in
dec
loope
scas
movsb
dec
mov
dec
push
int3
pop
push
xchg
mov
pop
xchg
mov
imull
adc
dec
std
fidivrs
mov
xchg
xor
call
rorb
mov
into
or
adc
mov
adc
les
push
push
sub
je,pn
aam
enter
push
insb
aas
cld
addl
cmp
mov
ret
ds
insb
aaa
mov
or
xlat
pushw
cmpsb
mov
imul
cwtl
outsb
ljmp
ficompl
or
int3
aad
inc
pop
cmp
jae
adc
add
int
jo
ss
movsb
sub
dec
push
dec
repz
or
dec
push
jmp
aam
mov
push
nop
adc
adc
dec
sbb
lret
xchg
jle
xchg
cmpsb
add
add
pop
lret
fcompl
inc
lea
adc
jb
repnz
out
aaa
mov
jle
sub
push
pop
mov
icebp
lret
push
out
shlb
popa
push
inc
xlat
xor
sbb
cltd
push
pop
ljmp
ret
lret
dec
add
inc
inc
js
fisubrl
shrb
leave
jle
sbb
test
mov
mov
adc
xchg
addr16
jo
mov
lock
add
pop
shl
cmpsb
xchg
aaa
std
or
push
mov
imulb
and
inc
imul
jne
aaa
pop
lock
xchg
and
lods
push
mov
outsb
adc
in
shr
arpl
jge
sahf
outsl
mov
dec
adc
jle
xchg
scas
lods
xchg
jle
nop
jno
mov
inc
movsl
sub
sub
test
pop
stc
lret
xchg
or
popa
dec
les
cmp
lods
lret
mov
subl
fiaddl
jbe
in
fdivs
clc
adc
ficomps
pusha
lock
lds
outsb
aaa
lret
sbbl
push
jl
nop
aas
mov
pop
iret
cmp
push
xorl
dec
mov
or
push
jnp
mov
movsl
sub
and
insb
mov
fwait
pop
jns
xchg
jecxz
int
mov
mov
adc
pop
mov
push
mov
int3
inc
or
repz
jne
mov
jnp
inc
popf
xor
hlt
dec
inc
daa
mov
clc
popa
stos
fdivl
dec
andb
push
fwait
aad
dec
movsl
mov
and
scas
loopne
daa
and
fs
jo
popf
insb
faddp
mov
int
dec
aas
sub
adc
adc
sahf
and
jp
pop
rorl
mov
sbb
outsl
mov
jle
adc
and
rcr
mov
adc
addr16
xchg
addr16
mov
xchg
out
icebp
les
mov
stos
in
nop
sbb
adc
lret
dec
sub
sarl
les
into
insb
dec
rcrb
inc
dec
pop
jg
sub
fdivrl
stos
sub
shlb
xchg
dec
fidivl
neg
cli
or
inc
sub
mov
out
fsts
fwait
int3
repnz
mov
mov
movsl
pop
dec
leave
dec
out
adc
mov
xchg
das
aad
jg
pushf
daa
jmp
imul
jge
insb
mov
pop
push
add
cmp
scas
mov
cmp
xchg
icebp
and
cmp
mov
aas
cmp
cmpsl
jb
jno
pushf
lods
test
sahf
cmpsb
sahf
push
pop
adc
jmp
fstpt
cmp
and
out
sub
dec
sahf
inc
mov
fiadds
mov
imul
jne
or
inc
mov
out
jae
jp
cmpsl
mov
push
cld
mov
cwtl
xchg
sub
fxch
les
jecxz
test
out
lds
mov
mov
mov
pushf
mov
inc
test
shll
xor
sub
insl
mov
mov
arpl
jp
pushf
shrl
jg
rcrb
insb
cmpsb
ror
adc
popa
cmp
push
or
and
fdivrl
xchg
std
aam
push
add
insb
jbe
mov
xor
loopne
std
xor
cmpsl
loope
push
sub
into
cmp
cld
loop
cmp
aas
cmc
in
in
xor
je
dec
mov
shlb
shl
in
xor
lahf
pop
or
jnp
mov
jmp
sub
dec
mov
mov
cmp
push
subl
nop
or
push
insl
rcl
mov
push
mov
out
stos
and
xlat
push
lods
mov
cmc
bnd
and
fwait
add
dec
sbb
loop
mov
sbb
dec
mov
mov
sbb
dec
sbb
mov
push
int3
xlat
cmpsl
lds
daa
adc
adc
add
repnz
mov
lcall
icebp
shrl
mov
push
and
out
jg
xchg
dec
xchg
or
mov
sti
push
xchg
xor
call
lea
push
lds
fldcw
scas
cli
jge
cs
xor
push
xor
out
adcl
xchg
pop
test
pop
push
shlb
sub
mov
cmpsb
test
test
aaa
mov
adc
adc
inc
mov
insl
push
enter
stos
and
or
addr16
xchg
push
cltd
lods
xchg
push
cmpsl
aas
or
push
inc
loopne
aas
push
add
inc
sbb
das
pop
scas
adcb
push
ds
pop
and
psllq
dec
jnp
lcall
xchg
test
mov
cltd
dec
jmp
addr16
push
movsl
incb
repnz
push
mov
mov
xor
sbb
sar
call
aas
sub
pmaxsw
add
jns
scas
jmp
nop
mov
cmp
push
lcall
pop
sub
mov
aad
ljmp
cld
cmpsl
xchg
popa
adc
je
in
xchg
cld
push
rcr
adc
mov
mov
inc
addr16
fidivrs
sub
js
cmp
jae
dec
push
out
dec
or
xchg
mov
lret
in
mov
mov
add
push
cmc
in
sbb
sub
imul
sub
and
xorb
stc
sub
inc
leave
sub
stc
addps
push
mov
jle
arpl
jp
xchg
jae
mov
mov
sbbl
ljmp
mull
xor
jnp
cmpsb
int3
test
out
jae
sub
jl
pop
into
lret
cld
lahf
mov
and
mov
insl
ss
out
adc
sahf
out
lds
pop
in
idiv
sarb
popa
outsb
push
jecxz
ret
xchg
pop
ss
or
je
mov
loopne
mov
rcrl
shrl
mov
xchg
jl
mov
jns
xchg
cmp
enter
lret
sub
xchg
daa
inc
pop
icebp
jge
xchg
cmpsl
mov
popa
clc
mov
imul
ljmp
pop
scas
adc
ss
clc
cmp
decb
add
push
mov
cmpsb
out
push
inc
pop
adc
movsb
ret
pop
in
and
jmp
jp
xchg
sahf
push
xor
push
push
mov
adc
js
adc
jl
shlb
xchg
inc
test
scas
iret
pushf
or
xchg
fldcw
jge
addr16
cmp
sub
jl
in
fwait
jb
pop
mov
sub
repz
pop
xor
cmp
mov
divb
xchg
subb
lret
xchg
mov
sti
pop
push
in
ret
test
xchg
lret
arpl
lret
rolb
inc
jb
lret
mov
pop
ljmp
test
scas
gs
imul
sbb
push
add
push
sti
push
rcll
stos
sbb
inc
cmp
imulb
dec
es
push
add
xlat
cwtl
add
xchg
inc
pavgb
mov
repz
inc
aaa
cmp
push
test
imul
jne
in
movsl
pop
mul
aaa
loop
cmp
lcall
sbb
push
fs
stos
fsts
test
inc
andl
addr16
adc
mov
and
sbb
cmp
xor
scas
sbb
out
xchg
sub
shlb
mov
repnz
jae
aam
mov
scas
pop
in
push
mov
stos
in
xchg
in
cmpsl
or
dec
lds
in
pop
popa
enter
push
dec
and
xchg
aam
mov
mov
insb
adc
inc
fisttpl
testb
aaa
cmc
cmp
sub
out
shr
rcr
loope
dec
mov
inc
in
iret
cmpb
ss
cltd
roll
jg
mov
sbb
fmuls
fs
pop
add
dec
push
sbb
in
sbb
lds
and
mov
inc
mov
mov
arpl
shl
pop
loope
in
jae
addr16
in
inc
xchg
cltd
mov
inc
push
xor
shlb
xchg
xchg
or
test
ret
jno
outsb
imull
cli
imul
jl
lea
pop
cli
shlb
mov
insl
movsl
imul
push
notl
pop
mov
aam
cmp
lret
insl
push
pop
int3
je
sbb
pop
push
mov
mov
imul
inc
cmc
mov
aaa
shll
push
dec
leave
pop
xchg
sbb
mov
xchg
test
push
mov
or
stos
mov
faddl
shr
mov
loope
push
pop
hlt
pop
add
mov
pop
rcrb
mov
jnp
orl
add
fnstenv
push
mov
test
dec
jbe
out
adc
push
mov
jns
cmp
out
ss
pop
lret
out
ss
iret
mov
fildl
in
jecxz
inc
call
sbb
sarl
fdivr
adc
mov
jecxz
mov
sbb
mov
popa
cwtl
test
movsb
xor
dec
out
push
popa
vmread
std
fldcw
mov
or
cmp
mov
sub
inc
mov
jae
stos
nop
mov
lods
jno
pop
aaa
dec
add
dec
jb
adc
push
xor
and
mov
test
in
icebp
out
cmc
dec
xor
mov
inc
sub
push
or
cmc
pop
aaa
movsl
repnz
out
push
das
imul
stos
mov
aas
cmp
mov
loopne
movsl
cmpsb
subl
fstpt
jae
in
notb
fidivl
sbb
pop
sbb
ret
cmp
fisttpl
adc
sahf
arpl
mov
lea
xlat
leave
mov
pop
movsl
imul
das
mov
sbb
pop
pop
cmpsl
mov
ret
dec
xchg
sbb
inc
push
or
dec
mov
sub
ret
mov
fs
add
push
dec
sbb
fmull
arpl
scas
sub
fists
shrl
push
xchg
imul
imul
rorb
add
lock
jecxz
dec
fwait
xor
inc
out
inc
sbb
insl
pop
dec
push
push
movsb
jle
push
mov
sbb
xor
enter
adc
jg
loop
loope
push
and
cmp
sbb
dec
push
jne
lret
rcll
dec
lcall
inc
xor
mov
cmpsb
pop
and
jno
ja
les
es
clc
lret
movsl
shr
in
xchg
lods
mov
roll
or
cmp
xor
add
mov
scas
jnp
mov
lods
cmp
push
fcompl
jle
ljmp
fs
imul
xorl
aam
xchg
inc
lock
jns
cmp
push
movsb
and
jecxz
adc
jle
pop
fisubs
dec
pop
into
jg
sbb
jns
xor
push
pop
mov
jo
dec
cmp
jno
xchg
push
jne
add
aad
dec
mov
pushf
sbbl
test
cli
mov
or
dec
dec
jne
outsl
insl
xchg
jl
pop
icebp
pop
dec
scas
and
mov
test
and
mov
cmp
mov
and
add
xabort
mov
add
daa
sarl
xchg
jecxz
pop
dec
popf
shlw
sub
xchg
mov
or
xchg
mov
jge
icebp
lret
ret
mov
add
cwtl
sub
fstpl
pop
insl
dec
pop
inc
packssdw
mov
test
cmp
mov
dec
out
push
adc
in
jecxz
icebp
sbb
fsts
and
js
push
inc
xor
or
outsb
sbb
fdivs
xor
pop
dec
mov
cmp
clc
add
call
jge
and
pop
pusha
dec
adc
aas
in
bound
loopne
insb
cmp
lret
mov
lea
sbb
dec
pusha
lods
inc
or
adcb
inc
frstor
loopne
jb
and
cwtl
pop
and
inc
sub
cmp
icebp
or
in
cltd
lods
lods
rolb
stos
mov
mov
in
adc
sbb
pop
dec
lock
iret
fcomps
div
ficomps
ror
xchg
fsubrp
pop
mov
lret
rclw
test
xlat
jmp
jmp
lods
ficomps
mov
xlat
jbe
pusha
sub
in
jb
jle
pusha
mov
test
mov
int
cltd
lods
cs
mov
lock
aaa
inc
mov
sub
lea
push
lret
gs
test
or
cld
mov
adc
xchg
jne
aad
mov
fdivl
jecxz
imul
jo
add
pushf
jb
std
in
xor
xchg
mov
add
lahf
and
insb
bound
ljmp
xor
mov
and
sbb
or
xor
or
xor
xor
dec
or
repz
stos
lock
or
cltd
xlat
xor
arpl
nop
addb
or
dec
aam
mov
mov
nop
sti
and
aaa
pop
pop
das
fistpl
fcoms
pop
std
and
das
adc
xor
bound
es
rcll
inc
jl
mov
xchg
push
outsl
div
sub
jne
fdivrl
cmp
clc
jno
or
dec
adc
repnz
sub
repnz
push
dec
push
adc
outsb
jnp
lret
test
jl
and
test
aaa
and
and
fnstcw
dec
cli
mov
dec
les
mov
sub
leave
dec
sbb
in
lock
mov
int3
xlat
movl
add
xchg
xchg
std
inc
add
and
push
std
mov
add
lea
sahf
adc
rclb
jmp
mov
dec
mov
dec
push
sub
dec
stos
scas
dec
cmpsl
add
dec
std
cmp
mov
adc
pop
and
aad
in
pop
cwtl
mov
mov
loop
pop
and
push
arpl
mov
mov
frstor
sub
push
aas
sbb
dec
adc
add
dec
push
or
inc
cmp
ficoml
pop
gs
xchg
cwtl
jno
clc
incl
enter
jnp
dec
mov
dec
jmp
enter
std
arpl
inc
inc
add
mov
cmovne
mov
fisubs
pop
data16
addr16
push
sub
stos
lret
xor
out
insb
jge
std
sbb
ja
and
lret
mov
dec
mov
aam
inc
lock
ficoml
stc
mov
push
add
imul
jl
shr
scas
push
mov
js
or
pop
nop
test
xor
sbb
pop
add
int3
push
lods
clc
cmpb
das
jle
dec
push
test
test
dec
lods
push
or
push
and
outsl
mov
or
outsb
mov
or
jne
lods
fidivl
mov
stos
jp
sbbl
adc
movsb
cmc
outsl
cmp
fxch
mov
sbb
sbb
mov
aad
fimull
movsl
mov
and
stos
pushf
xor
aas
aaa
lds
shll
dec
inc
sbb
cmp
cltd
and
mov
push
jge
stos
imul
cs
and
inc
popf
inc
pop
testb
rcll
insl
mov
sbb
jb
jp
push
leave
pop
rcrb
test
sti
scas
ret
sbb
jecxz
jmp
sub
mov
mov
lcall
and
lret
jmp
scas
adc
movsl
jp
negb
pop
mov
int3
xchg
inc
inc
ds
pop
movsb
mov
sbb
or
aaa
pop
sub
popf
shll
push
xor
shll
stos
dec
add
jmp
pushf
add
mov
out
xchg
insl
notl
and
aam
adc
and
inc
iret
roll
mov
cwtl
ja
int3
dec
arpl
cmp
cs
sahf
sbb
push
daa
lahf
iret
jmp
cltd
dec
iret
lret
movsb
push
lea
inc
movsb
sti
adc
xchg
lret
stos
call
xchg
fmull
movsl
jo
int3
mov
fwait
or
test
shlb
or
push
push
inc
das
mov
push
mov
push
mov
pop
or
xchg
or
cmc
leave
repnz
stc
stos
mov
outsb
xor
add
movsl
imull
add
or
mov
inc
xchg
xorb
mov
push
test
nop
mov
test
inc
icebp
out
enter
sub
ja
out
sub
push
jp
stos
xor
arpl
scas
inc
hlt
sub
sub
shll
fucom
xchg
fstps
cli
adc
pushf
xor
adc
inc
lock
les
sbb
adc
scas
mov
push
fmuls
shll
jmp
push
jl
arpl
test
scas
or
sub
jge
subl
xlat
test
add
jno
negl
stc
cmp
icebp
sub
pop
push
mov
or
jbe
xchg
xchg
push
pop
mov
lret
leave
push
sub
das
das
orb
or
clc
clc
push
frstor
sbb
mov
mov
ficoml
add
loop
sub
lock
repz
adc
sbb
imul
inc
add
leave
mov
inc
jge
fwait
aaa
mov
ret
jo
mov
cmp
xor
push
popa
repz
scas
and
inc
jg
insb
or
jmp
mov
icebp
cmp
xchg
sbb
mov
fstps
jg
or
aas
pop
jo
mov
shl
mov
inc
lahf
sahf
cmp
adc
lea
cmc
pop
and
mov
pop
jo
jmp
fisubrl
mov
pushf
push
or
mov
pop
cmp
jmp
inc
push
cs
gs
lahf
mov
dec
xchg
xchg
outsb
mov
mov
nop
mov
and
loop
cmp
mov
cmp
jns
and
mov
in
popf
subl
xchg
cltd
xchg
stos
bound
testb
push
in
stc
sbb
lret
icebp
mov
out
mov
mov
sub
rcr
push
xlat
and
xor
jns
sub
jl
sbb
xchg
cmp
mov
or
mov
cmp
mov
jp
divps
leave
dec
mov
frstor
pop
jno
lods
pop
into
push
and
jmp
jle
test
in
mov
xor
mov
js
dec
scas
mov
inc
lods
sahf
xchg
std
jmp
push
ror
sahf
in
adc
add
popa
mov
test
pop
push
pop
lret
fisubl
add
je
mov
lea
cmp
push
xchg
loopne
je
or
or
cli
fiaddl
xchg
pop
adc
sbb
outsb
and
leave
mov
sub
out
mov
xor
lods
sub
jbe
int3
lds
mov
dec
xchg
sub
mov
jbe
cld
inc
dec
cmp
push
mov
popa
pop
mov
addr16
ret
and
jae
ljmp
and
adc
xor
pop
mov
cmp
jns
icebp
jns
xchg
ds
jmp
dec
cmp
stos
sbbl
stc
pop
jo
in
pop
outsl
ds
js
pop
pop
cli
addl
mov
out
stos
sbb
negl
lods
cmp
fcoml
xor
xchg
mov
adc
cmp
cwtl
inc
sub
movsl
dec
popf
fxch
inc
mov
pop
mov
nop
sti
scas
aaa
sbb
cmp
out
lcall
and
mov
or
cmp
or
mov
es
into
adc
dec
push
adc
adc
sub
push
lahf
frstor
test
aaa
jp
add
outsl
and
lock
sub
mov
jb
jbe
sub
fs
pop
lock
jle
inc
insl
xor
pop
sub
push
jnp
cli
xchg
and
pmulhw
sub
adc
hlt
mov
loopne
push
cltd
mov
add
push
cltd
add
cmpsb
aad
ret
push
fld
pop
sbb
adc
stc
mov
xor
js
bound
incl
ds
not
xchg
imul
mov
push
scas
fsubr
inc
pcmpeqb
fdivrl
inc
scas
mov
fmull
pusha
cmc
sahf
sub
lock
lcall
call
jle
xchg
int3
ds
mov
imul
push
pop
push
push
cmp
and
out
cmpsl
into
xor
push
leave
movsl
mov
mov
xor
push
ljmp
imul
jne
jl
push
push
dec
repz
push
loope
lahf
mov
je
xchg
add
aam
scas
sub
outsb
ljmp
out
out
iret
rorb
push
out
loopne
cmc
pop
mov
mov
dec
cmp
xlat
and
faddl
nop
lock
inc
xchg
sbb
movl
adc
cmp
and
mov
addr16
lds
jmp
mov
rolb
rorb
hlt
add
jbe,pn
add
push
jle
push
add
cmp
xchg
dec
inc
push
gs
enter
xchg
mov
pop
aas
or
adc
ljmp
lret
js
outsb
sbb
aad
adc
addr16
orb
sbb
pop
dec
mov
pushf
add
jae
cmp
pop
mov
leave
cwtl
jl
xchg
mov
lea
pushf
and
in
sbb
mov
xchg
inc
add
enter
jl
shrb
mov
push
gs
jo
es
adc
and
fidivrs
rclb
pusha
inc
sub
push
mov
rorl
pop
pop
scas
dec
adc
jle
lock
jg
loopne
fsts
sbb
sahf
sub
pop
out
jecxz
sbb
data16
call
or
in
sub
jo
mov
lds
xor
imul
sbb
jecxz
inc
mov
xchg
jmp
cmp
dec
out
sbb
xorl
leave
and
shl
stos
dec
jo
out
and
cmp
sbb
ljmp
rorb
es
push
sbb
mov
andl
cmp
sbb
pop
shlb
or
aas
inc
icebp
ljmp
outsb
cld
imul
lods
xchg
int
jmp
cld
mov
fwait
add
call
cmp
mov
inc
fs
fdiv
and
pusha
push
pop
popf
cld
sub
cmp
inc
mov
fiaddl
mov
test
jp
dec
and
push
or
jae
in
test
push
addl
jae
shlb
sub
out
fisttps
mov
mov
popa
sbb
sbb
mov
out
sub
mov
pop
mov
lock
inc
and
jae
adc
or
cmp
stos
dec
dec
popf
stos
or
sub
loope
repz
adc
movsb
cmpsl
cmp
out
imul
add
imul
and
decl
test
out
loopne
push
orb
loope
dec
cwtl
stos
js
in
or
inc
cwtl
ds
sub
jo
cmp
mov
aad
loopne
jo
jecxz
push
mov
lret
sbb
aas
or
test
movsl
addl
movb
xlat
jg
stos
ret
mov
inc
cmp
cmpsb
and
jne
subl
mov
in
and
pop
aad
dec
mov
cmp
jl
iret
in
test
xchg
pushf
xor
andb
lods
pop
in
lea
xchg
fisubrl
and
mov
xor
mov
pushf
movsl
pop
and
hlt
aad
aad
lret
int
or
mov
lcall
or
or
push
mov
mov
sti
mov
mov
cwtl
repz
cltd
or
sbb
cld
add
xor
fstpt
adc
add
incb
lcall
cli
sub
aad
rcr
lds
cmp
icebp
mov
pop
jg
mov
out
fildll
lcall
je
mov
iret
xchg
clc
lods
fmull
out
xor
pop
arpl
outsl
icebp
std
cmc
call
mov
sbb
and
outsb
mov
add
pushf
dec
mov
inc
in
lahf
push
add
pop
lds
pop
aas
ja
push
aas
jg
dec
mov
mul
xor
inc
jle
iret
xor
das
leave
cmp
ja
adc
pusha
mov
or
ficoms
pop
mov
daa
out
fsubrs
pop
sub
outsb
jbe
sbb
aad
push
les
cld
das
in
dec
aad
out
xor
pop
pop
stc
call
jae
test
sahf
mov
xchg
hlt
gs
or
push
cwtl
mov
mov
pop
pmaxub
mov
or
and
jbe
mov
cwtl
push
pop
lret
cmpsl
shll
test
popa
lods
shl
or
pop
iret
ljmp
gs
ret
int3
pop
inc
push
leave
jge
mov
and
push
dec
dec
stc
mov
pop
rcll
insb
mov
mov
or
xchg
jae
lds
xlat
pop
rcrl
mov
mov
sbb
stos
cmp
adc
movsb
pop
pop
pop
subl
loopne
jge
fwait
lds
inc
test
cwtl
push
adc
pop
xor
cmp
fwait
test
ss
add
adc
jo
sub
add
mov
xorb
leave
lods
lahf
aas
cmp
lahf
mov
aam
faddp
jge
mov
adc
in
jp
divl
pop
mov
pop
int3
dec
push
dec
mov
dec
nop
insl
and
int
mov
jns
call
sbb
ja
mov
aaa
pop
rorb
and
xor
jle
stc
fsubrs
push
mov
push
cmpb
add
add
cmp
sub
in
aam
pop
adc
xor
pop
add
fwait
xor
jmp
inc
adc
sub
cmpb
test
lahf
sub
mov
lds
cltd
test
pusha
jp
or
or
stos
out
adc
je
xor
mov
jae
fdivrs
jns
or
jns
and
xorl
pop
mov
or
mov
inc
fadds
loop
in
mov
test
and
scas
andb
jb
movsb
jae
fiaddl
insl
mov
xor
or
pop
fs
mov
negb
mov
xchg
mov
ret
jb
lods
jns
lock
jns
jns
mov
mov
std
jg
pop
cs
xchg
pop
in
ds
cmc
pop
insl
push
jge
test
sub
rcr
mov
dec
dec
or
call
daa
sarl
shr
pop
jae
mov
and
mov
mov
in
or
les
loope
jne
bound
into
dec
or
in
int3
mov
push
push
enter
cmp
inc
clc
or
mov
jp
sub
mov
inc
mov
pop
xor
add
pop
mov
rcrl
xchg
sbb
cwtl
xchg
sub
out
dec
push
fwait
mov
push
insb
das
cltd
sbb
mov
gs
lods
push
adc
test
cld
push
jg
cmpsb
fldt
lds
mov
xor
add
xor
cwtl
imul
movnti
pop
loopne
sub
cmc
xchg
jp
and
in
jge
sub
in
mov
fistps
inc
pop
and
mov
cli
leave
cmpsb
push
pop
push
and
in
dec
repz
mov
push
adc
dec
filds
enter
push
mov
and
in
xor
mov
xchg
jp
sub
dec
xor
mov
mov
ds
add
sbb
call
rclb
mov
stos
add
xchg
cmp
subb
ds
aas
inc
imul
scas
sar
scas
inc
stc
dec
mov
jecxz
inc
idiv
lock
pop
fstpl
push
push
add
into
mov
fildll
mov
or
decb
ja
loopne
scas
push
int
aam
out
daa
push
cmp
mov
add
sub
pop
cmpl
mov
leave
dec
in
mov
clc
add
adcb
mov
fildl
inc
lods
dec
in
clc
aas
mov
and
out
fidivrl
pop
push
fs
jbe
outsl
jg
loope
repnz
cmc
and
lods
mov
js
shr
mov
pusha
add
leave
ljmp
mov
ret
pop
mov
mov
jp
mov
xchg
movsb
adc
mov
sbb
in
push
cmp
cmp
push
or
and
adc
in
push
pop
jnp
mov
mov
pusha
cmp
mov
cmc
stos
imul
testl
mov
add
and
jno
repnz
and
lock
mov
xorl
mov
int
mov
fwait
xor
jns
pop
jb
cmp
xor
lods
push
pop
leave
sbb
jmp
cmp
fldz
das
sbb
dec
adc
les
pop
lret
setge
jnp
or
mov
mov
lret
in
lret
mov
cmc
sub
filds
sbb
pop
popl
mov
mov
int3
fisubrl
iret
mov
fnstcw
or
mov
les
jmp
inc
int3
in
jae
in
dec
mov
or
mov
cmpsl
sbb
ja
push
ret
mov
cmp
add
lret
dec
cmp
mov
test
jle
insb
adc
mov
clc
push
cmp
mov
dec
js
or
pop
pop
add
in
leave
xor
cli
stos
ret
push
int
xchg
fwait
scas
fs
shrb
hlt
xchg
popa
dec
sti
in
cmp
into
pop
lcall
xor
push
pop
xchg
addr16
not
dec
pop
inc
ja
sti
xor
pop
pusha
fisubl
jle
test
and
ret
in
push
sub
mov
scas
sbb
add
dec
inc
cmp
rclb
and
cmp
add
and
or
cmc
mov
rcrb
jb
je
addl
cmp
or
mov
das
fcom
lret
addb
sub
add
and
ja
jo
orb
cmp
sti
bound
sti
sub
adc
lret
mov
pushf
xchg
es
mov
out
lds
addb
inc
dec
or
sbb
out
ret
xor
xor
jne
fstpl
out
ficoml
cwtl
mov
loop
psrad
mov
ja
imul
xchg
imul
sub
push
lahf
loop
jne
xchg
daa
loopne
and
or
push
jne
adcl
xor
aam
jb
je
aas
out
gs
inc
inc
addb
cmp
test
lods
stos
xchg
daa
repnz
cmpsl
pushf
fisubs
or
pop
mov
test
jp
dec
sub
mov
jnp
sbbb
lods
cli
leave
jo
xchg
ficoml
jp
mov
adc
bound
outsl
mov
xlat
stc
js
popa
and
cmp
jno
sub
fsub
jns
stos
jmp
das
mov
xchg
xchg
inc
fistps
fdivs
pop
jmp
or
jne
out
lahf
inc
jno
adc
pop
inc
into
aam
std
sub
repnz
xor
pop
mov
xor
adc
hlt
push
call
mov
pop
xor
mov
je
movsb
pusha
inc
pop
add
leave
jmp
push
es
pop
pushf
inc
cltd
adc
xchg
lahf
mov
xlat
dec
outsb
jns
mov
out
shll
xor
cwtl
cs
sbb
xor
push
arpl
out
fs
push
mov
insb
data16
pop
inc
int3
lret
bound
ja
loope
mov
dec
insl
ret
xchg
lahf
push
push
push
aas
sarb
jecxz
cmp
mov
dec
jg
lods
adc
inc
stc
sbb
pop
sbb
rcll
lods
or
aas
xchg
push
lock
hlt
pop
add
mov
mov
enter
dec
xchg
clc
adc
fdivrp
int
and
jbe
sub
test
xchg
popw
adc
pusha
push
hlt
in
sub
jbe
inc
stos
pop
stos
mov
mov
cmp
cmp
mov
orb
pop
adc
mov
insl
cmp
push
aad
lcall
inc
sbb
mov
mov
outsl
sub
mov
add
movsl
adc
cmpsb
out
ja
xor
inc
mov
testl
fidivs
jg
loopne
mov
clc
xor
shlb
mov
mov
ret
movsl
orl
or
fildl
add
adc
stc
int3
jg
es
mov
repz
push
sbbb
pop
adc
adc
addl
or
ja
stos
es
xchg
xchg
mov
inc
jp
jno
dec
ret
mov
dec
mov
mov
xchg
xchg
test
xchg
push
movsl
insl
xlat
mov
push
mov
and
push
jl
rcll
sub
pop
or
jbe
test
pop
test
andnps
mov
adc
mov
mov
xchg
xchg
bound
sbb
xor
add
clc
enter
push
test
imul
pop
adc
sarl
jns
cmpsb
gs
out
lahf
xchg
test
add
jno
rorb
lret
jne
stc
leave
aam
mov
out
sbb
mov
icebp
leave
fs
jge
ds
pop
adcb
sub
lret
je
inc
or
aad
mov
out
sbb
mov
shlb
imul
cmp
loope
insl
out
push
adc
jnp
adc
mov
xor
in
xor
mov
movsl
and
cmpxchg
adc
mov
outsl
rcrb
adc
sbb
pop
pushf
cmp
movsb
mov
add
std
jge
push
mov
dec
imul
xchg
pop
fsub
inc
inc
mov
xchg
inc
push
jmp
cmpsb
sub
push
pop
inc
sahf
ret
cmpsl
subl
cld
pop
dec
lock
add
movsl
xchg
dec
ret
sub
xchg
add
and
pop
sub
add
sbb
pop
bound
dec
mov
xor
jno
insb
fistl
mov
add
aas
xchg
data16
inc
add
lods
push
mov
in
popf
mov
push
mov
addr16
lods
push
leave
sarl
aam
leave
push
and
mov
out
adc
dec
xor
xor
mov
lcall
add
aaa
and
setp
and
mov
cmp
xchg
popa
iret
dec
push
push
fdivr
popa
xchg
push
sub
xchg
test
ss
cwtl
pmaxub
mov
adcb
fwait
pop
mov
dec
stos
dec
mov
fsts
jge
clc
call
loop
mov
fidivrl
mov
fwait
rcrb
aad
jl
mov
fsubrl
mov
es
sub
test
adc
subl
xorb
mov
ja
lcall
sbb
mov
mov
out
shlb
xor
mov
lahf
cmp
xor
pop
or
xchg
lods
aaa
xchg
in
movsb
je
cmp
mov
std
loop
iret
mov
adc
push
mov
mov
mov
inc
shrl
daa
sub
cs
je
fwait
ficomps
cmp
adcb
je
cmp
clc
sbb
and
push
fcmovne
cld
insb
adc
or
mov
add
xor
push
stos
xlat
outsl
sarl
mov
mov
sbb
sub
push
xor
in
dec
inc
mov
xor
sub
mov
repnz
push
imul
sub
mov
and
jae
inc
loope
xchg
pop
push
add
imul
push
stc
das
fisubrs
dec
les
sub
sub
addr16
insl
lahf
stos
out
addl
stos
hlt
dec
jnp
mov
clc
cmc
inc
mov
sbb
mov
pop
outsb
mov
loop
loop
push
mov
inc
bound
xchg
sbbb
jg
call
adc
arpl
jnp
pop
fldenv
dec
dec
pop
outsl
repnz
jae
jle
in
xchg
stos
adc
les
mov
mov
mov
adc
lods
notl
rorl
jle
daa
fsubrs
fsub
or
imul
incl
fcomi
in
fistps
sub
cmp
or
lcall
cli
lock
repz
xor
or
xor
pop
jecxz
dec
sbb
mov
gs
test
test
dec
mov
jmp
adc
cmpsl
fisttpll
dec
in
nop
in
stc
daa
in
add
pushf
xlat
pop
mov
ficomps
add
stc
pop
pop
jne
xor
rcll
inc
sub
xor
fsts
jnp
jb
mov
xor
daa
xchg
jge
sbb
mov
push
in
rclb
jp
dec
mov
sbb
mov
xchg
test
pop
arpl
add
scas
or
ss
or
lods
xchg
xchg
sti
xchg
scas
shrb
aaa
aam
cwtl
mov
loop
inc
pusha
and
or
sbb
jl
dec
pop
inc
mov
dec
or
sub
push
testl
xchg
mov
int3
pop
test
ja
or
xchg
mov
jge
test
out
lods
inc
sbb
mov
dec
jp
xchg
out
bound
fidivrs
sbb
subb
ja
pusha
mov
mov
js
imul
mov
inc
or
mov
sbb
pop
adc
or
out
lock
bound
pop
pop
and
dec
and
xor
xchg
cmpsl
add
push
stos
mov
sbb
jl
xchg
adc
test
subb
push
xor
inc
mov
mov
cmc
lea
mov
push
inc
push
and
adc
xchg
insb
andl
mov
incl
xchg
mov
test
adc
sbb
mov
mov
jae
divl
movaps
je
mov
aad
cli
mov
cld
into
loope
std
sub
and
inc
mov
cld
add
int
mov
jne
jno
jge
loop
insb
push
pop
pop
arpl
jo
add
mov
cwtl
in
jnp
add
stos
xor
xchg
jp
lds
fcoml
jbe
fs
pop
addr16
inc
push
add
cs
ret
hlt
or
sub
fwait
out
pop
sbb
out
cmc
test
inc
sti
ljmp
movsb
mov
dec
iret
and
mov
loope
fimuls
fcomps
mov
aad
cli
and
fistpl
jp
mov
sub
bound
cmp
push
mov
pop
scas
dec
add
sub
adc
mov
mov
sbb
fstps
jae
mov
repz
test
js
mov
nop
repnz
mov
js
and
std
add
std
repz
push
ja
mov
xor
mov
adc
sahf
stos
shl
mov
jg
xchg
test
mov
loop
lahf
mov
test
or
pop
mov
lds
sbb
dec
mov
in
pop
or
mov
cmc
ss
or
xchg
into
movsl
rcrb
pop
sbb
mov
in
jmp
sbb
loopne
mov
or
pop
push
bound
sub
sbb
jno
aaa
or
add
mov
movsl
lahf
adc
dec
and
jae
jnp
pop
out
setle
jp
movsl
and
xlat
mov
or
lcall
mov
sbb
enter
cmpsl
fisubrl
std
iret
repnz
repnz
push
mov
mov
or
mulb
jl
jbe
pop
cmpsb
push
xor
push
cmp
int3
stc
aaa
mov
adc
lcall
ljmp
push
les
shr
jb
jns
mov
test
cmc
or
clc
sbb
adc
pop
xchg
dec
pop
in
popa
sbb
add
pop
sbb
dec
in
jmp
xor
mov
jns
xchg
xor
push
cmpsl
and
cmp
mov
fnstsw
lea
lret
stos
adc
xor
mov
cs
mov
jo
lock
push
mov
sbb
movl
ljmp
fimull
aaa
ret
lds
inc
mov
ss
clc
or
out
dec
aam
out
out
mov
ficoms
jno
out
cmp
jo
xor
in
or
dec
mov
loope
inc
jb
cmp
pop
push
outsb
daa
test
dec
sti
je
xchg
add
ror
mov
mov
rcll
addr16
jno
icebp
sbb
push
fcoms
xchg
mov
jb
sub
inc
ljmp
or
xor
incb
push
xor
jl
push
xchg
mov
repz
push
adc
add
adc
je
movmskps
mov
aas
mov
leave
mov
cmc
jbe
push
inc
dec
xor
cmpsb
ja
pop
arpl
or
pop
cmp
cmp
and
subb
jbe
sub
mov
lods
ja
lcall
ljmp
xor
je
sbb
sub
movsb
test
xor
pop
push
leave
jecxz
push
xlat
ss
add
adc
stc
inc
jne
pop
xor
sub
dec
inc
add
mov
mov
mov
pop
sarb
sbb
pop
stos
inc
in
nop
fcmovnb
cltd
mov
pushf
or
aas
sti
outsb
or
mov
lods
push
push
lcall
imul
leave
or
movsl
push
jmp
lahf
lock
repz
js
and
sub
mov
and
mov
popa
sub
push
dec
jg
test
mov
mov
stc
out
jmp
out
or
dec
popf
in
inc
jmp
xchg
dec
leavew
or
xchg
push
pop
jmp
stos
push
insl
pushf
or
mov
popf
cmp
xor
jge
xor
test
xchg
or
adc
sbbb
pop
mov
xor
fstl
push
cltd
cmpsb
enter
pop
sub
cs
xor
cmpsl
pop
out
dec
scas
xor
xchg
or
lods
cmp
ss
fcmovne
sar
sbbl
xchg
push
je
inc
sub
pusha
jo
jae
movsl
call
bound
in
dec
shl
scas
stos
addr16
jb
and
ja
jge
fbstp
cmp
pusha
add
faddl
loope
push
lcall
xor
sub
fstl
inc
xchg
jae
aas
pushf
inc
sub
push
jp
mov
rcll
out
hlt
or
jb
mov
mov
and
sbb
dec
mov
pop
and
add
sbb
mov
cmpsl
pop
movsl
ret
pushf
data16
aam
mov
mov
xlat
add
mov
aaa
loopne
inc
adc
les
cmp
push
cmpb
fcompl
scas
mov
cld
or
mov
inc
mov
pop
leave
push
or
xor
test
xor
pop
rol
sti
popf
movsl
test
imul
pop
outsl
faddp
cmpsb
rcrl
sti
sbb
enter
mov
inc
loopne
pop
xchg
shlb
outsl
lds
cli
mov
out
and
ficoml
push
pop
nop
push
xlat
jl
push
mov
and
lds
mov
dec
jge
hlt
ret
or
ret
stos
jp
sub
inc
push
shll
xchg
mov
mov
push
ret
icebp
imul
xchg
rolb
mov
out
lods
add
mov
or
cmp
xchg
scas
hlt
lret
testl
inc
fucomip
sub
icebp
pop
xchg
cmp
mov
push
or
cmpl
arpl
aam
js
mov
push
lret
outsl
pop
add
mov
sub
jno
inc
jle
leave
clc
test
add
movb
mov
sbb
sarl
dec
arpl
push
mov
or
push
adc
pop
in
xchg
pop
mov
fnstcw
adc
ljmp
cmpsl
cmc
lcall
popa
fs
xchg
ss
xchg
inc
inc
adc
dec
add
imul
cmp
xchg
stos
hlt
dec
mov
mov
adc
jmp
fmul
push
cmpsl
cli
and
or
es
mov
mov
loopne
sarb
inc
cmp
jle
sub
adc
sub
js
mov
leave
push
shll
add
call
pushf
xchg
jae
mov
aam
sbb
movsl
dec
idivb
lea
or
lcall
xlat
bound
push
push
cwtl
insl
mov
push
int
int3
push
notl
cli
fucomp
xchg
xor
iret
pop
fs
xor
pop
in
dec
inc
mov
fdivrs
pop
fistpl
outsb
loop
outsl
js
xchg
mov
jp
or
stos
out
mov
inc
pop
arpl
xchg
cld
idivb
adcl
ss
and
jno
mov
das
fistpll
sub
mov
into
dec
ja
lcall
stc
cmp
popf
mov
pop
pop
jnp
in
cwtl
fmull
jmp
sub
cld
fldl
js
add
aas
dec
imul
or
icebp
inc
das
int3
push
inc
call
insl
pop
int
out
xorb
fs
add
xchg
adc
inc
mov
add
push
shlb
loope
sub
ss
push
enter
div
mov
cltd
xchg
icebp
xchg
xchg
sub
adc
fcoml
mov
pop
nop
cmp
fsubs
test
mov
inc
dec
pop
or
lret
mov
adcl
outsl
lret
push
sarb
ja
and
sbb
insb
jl
int3
insl
cld
dec
inc
bound
dec
adc
mov
movsl
mov
push
ljmp
mov
je
ret
aas
jge
push
scas
cs
mov
sbb
xchg
mov
pop
outsl
imul
sub
xchg
adc
mov
in
dec
imul
push
outsb
es
shll
leave
or
adc
arpl
cld
clc
inc
adc
clc
imul
or
add
cmp
sub
subb
lret
out
sbb
addr16
test
xchg
and
aaa
shl
or
lods
aam
loop
aaa
sarl
mov
ret
mov
xlat
mov
dec
bound
jmp
testb
imul
pop
adc
jle
imul
push
fcmovnb
mov
leave
sbb
repnz
enter
inc
je
bound
dec
lret
cld
lds
lods
ja
mov
das
push
test
repz
loopne
outsb
mov
clc
fisubrs
fcomps
xchg
das
push
dec
scas
mov
rorl
pop
ffree
into
mov
sub
cwtl
sub
or
jno
imul
dec
mov
sub
inc
xchg
aad
loop
cmp
push
dec
pop
test
repz
test
int3
jp
aad
loop
push
scas
repz
push
push
mov
je
push
ljmp
xchg
pop
cmp
call
lahf
test
adc
cld
xor
int3
sbb
sub
sbb
fdivr
sub
push
dec
add
mov
xchg
adc
add
pop
mov
insb
adc
mov
jb
movsb
cwtl
jg
cmp
mov
testl
or
loopne
pop
mov
aam
imul
les
incl
push
shlb
or
cld
mull
inc
subl
pop
cmp
mov
jo
aam
out
adc
jmp
movsl
xchg
mov
hlt
fdivl
push
stos
sub
xor
push
cmpsl
shll
clc
in
jecxz
das
cmp
xor
xchg
xchg
jl
in
cltd
adc
in
push
mov
fisttpl
push
ljmp
pop
outsl
inc
int
aas
lods
inc
inc
addl
test
pop
dec
pop
cltd
sbb
xchg
gs
loope
stos
push
movsb
lret
sti
mov
ret
arpl
into
mov
fsubl
adc
push
mov
jle
mov
out
scas
fcoms
pop
xor
cmp
mov
push
mov
mov
sub
dec
inc
insb
lods
mov
pcmpgtd
or
jne
xchg
jp
xchg
repz
mov
loop
in
stos
xor
cli
rorb
int3
out
repz
xchg
pop
out
inc
test
adc
cwtl
add
inc
pop
arpl
sub
loopne
js
dec
sahf
fidivrs
fs
xchg
ss
dec
sub
pop
and
add
lods
sbb
insl
fwait
xchg
jmp
pop
shll
ljmp
mov
mov
das
sub
pop
fdivrl
and
cmp
sbb
incl
xchg
xor
mov
aad
repz
mov
mov
sbb
mov
les
arpl
out
mov
lods
insl
inc
cwtl
int
pop
stos
int
add
out
and
fucomp
xlat
or
pusha
or
add
scas
rcrb
or
ljmp
in
xchg
jno
shlb
push
jecxz
scas
jmp
bnd
xchg
daa
and
daa
insl
arpl
mov
sarl
xor
test
inc
pop
repz
test
and
enter
cli
leave
jbe
xchg
enter
jge
sub
adc
sbb
sbb
xchg
cmp
sbb
jl
inc
add
mov
adc
adc
adcb
out
inc
inc
ds
pop
push
shrb
xchg
push
pop
das
sbb
mov
sub
mov
std
mov
loope
add
cmc
xor
lock
sbb
or
cmp
fistps
cwtl
out
fwait
inc
and
loope
inc
mov
inc
jo
fcomip
or
xchg
mov
mov
sahf
fcomps
arpl
jo
and
ret
cmp
add
sbb
mov
jle
jne
lods
xlat
xor
jl
ret
rclb
fwait
push
jbe
xchg
call
fwait
popa
call
je
jne
scas
pop
pop
pop
mov
das
mov
jge
push
jge
mov
jae
jmp
mov
xchg
hlt
ljmp
aas
and
outsl
xlat
jmp
mov
mov
adc
fbld
jl
adc
or
push
rol
int
aas
sbb
int
or
mov
or
jle
out
or
fwait
std
aaa
scas
mov
enter
and
sbb
movsl
je
iret
inc
in
sbb
fsubs
mov
sahf
scas
out
xor
leave
inc
mov
enter
add
mov
xchg
add
test
jg
push
int
loope
sbb
push
test
psubusb
push
insl
inc
iret
or
shll
xlat
arpl
mov
sub
icebp
or
or
jle
stos
jae
and
jno
scas
cwtl
testl
out
sub
inc
jo
xor
pop
hlt
adc
lods
repnz
movsb
ret
test
lods
push
add
nop
push
test
out
leave
add
sub
pop
and
sbb
jle
pop
ficoml
cmp
mov
bound
lods
fs
push
jae
dec
cli
xchg
cmp
aas
cmp
pop
inc
and
and
pushf
push
mov
rclb
cmpsl
jo
cmp
dec
pop
idivl
mov
sbb
push
jne
ja
push
push
out
subb
cmp
inc
test
in
loope
pop
into
repnz
into
mov
nop
lret
fidivs
scas
mov
dec
nop
pop
pop
test
cs
xchg
lods
in
cwtl
jg
mov
aas
outsb
dec
nop
ja
sbb
push
or
lea
in
ljmp
adc
lret
mov
jne
push
xchg
push
call
or
mulb
add
pop
push
jnp
test
inc
movsb
repnz
repz
or
out
pop
mov
addr16
fsubs
xchg
mov
addr16
lock
rcrl
inc
add
or
pushf
je
and
adc
aam
fsubl
add
loop
sahf
out
mov
imul
call
enter
fsub
mov
add
js
jb
jl
cmp
cmpxchg
test
icebp
cli
test
cld
into
and
popa
stos
and
rcll
mov
dec
mov
inc
sub
or
imul
insl
fisubrl
push
js
bound
jmp
xor
stos
lret
jo
or
push
and
ret
orb
mov
arpl
test
aaa
in
mov
pop
lods
fcoms
rolb
mov
dec
aas
popf
pop
out
mov
insl
sub
sub
cmp
mov
jae
and
aaa
mov
clc
in
add
arpl
xchg
push
repz
pop
aaa
call
pop
xchg
stc
pop
mov
jecxz
or
outsl
xchg
inc
pop
mov
ja
cs
pop
inc
loopne
scas
roll
ret
test
rcrb
jnp
sub
mov
push
fmuls
mov
pop
pusha
cmp
lea
in
cs
subl
into
iret
push
sub
mov
test
mov
xchg
mov
sysenter
xlat
sbb
pop
out
mov
rcr
jne
jge
test
pushf
and
jns
dec
mov
std
mov
cmp
dec
rolb
cld
add
sbb
and
xor
and
cmpb
fisttpl
xchg
pop
pop
cmp
or
jno
ja
pop
sbb
popa
nop
jno
cmp
sub
pop
mov
stos
mov
adc
scas
sahf
pop
je
mov
dec
lret
sub
fdivrs
inc
push
xchg
cmpb
adc
pop
xor
test
es
inc
jmp
lret
loope
inc
or
ret
and
outsl
dec
push
ljmp
gs
cmpsl
dec
dec
arpl
cmp
push
test
xchg
xchg
push
cs
in
cwtl
sbb
fwait
aam
sbb
repz
dec
add
adc
popf
adc
xchg
inc
insl
je
lcall
sub
popa
cld
mov
popf
imul
cli
push
les
cmpsb
loope
inc
mov
push
into
push
sbb
iret
pop
dec
pushw
mov
xchg
or
std
xchg
sub
std
pop
or
mov
faddl
out
shrb
sbb
negl
sbb
or
pusha
shlb
mov
in
mov
fisubl
aaa
or
or
jno
adc
cld
add
out
sbb
xor
mov
sub
cmp
popf
shll
mov
test
add
pop
es
mov
dec
call
sub
sarl
mov
out
les
fisubs
push
out
xor
and
insl
push
lock
adc
xor
mov
mov
je
test
inc
jecxz
and
xor
int3
xchg
pop
sub
xchg
and
fbstp
jle
imul
inc
shlb
loop
cli
movsb
bts
inc
mov
jmp
arpl
dec
jns
mov
push
and
adc
inc
pop
push
jmp
push
imul
rclb
pop
jmp
pop
imul
jb
sub
adc
cld
andl
sahf
push
push
es
xor
divb
stc
mov
mov
jne
add
pushf
xchg
and
xchg
sbb
cmpsb
loope
fwait
sub
sub
cs
push
rcll
arpl
mov
add
mov
in
cmpsb
in
outsb
mov
lock
in
stc
sti
mov
bound
inc
sti
daa
insb
sbb
add
lock
clc
mov
iret
jge
mov
cltd
pushf
xchg
cmp
mov
movsb
js
adc
xchg
lods
inc
lcall
add
insl
cltd
mov
mov
pop
ficoms
jp
faddl
push
jns
adc
shl
adc
and
pop
sub
push
push
or
fstpl
fldenv
into
mov
fadd
mov
arpl
inc
repz
sarb
movsl
inc
arpl
sub
adc
jo
jno
inc
jne
insb
push
cmp
mov
push
cmp
dec
sti
mov
sbbl
push
push
in
adc
aam
dec
pop
bound
or
xchg
repz
fcoml
mov
add
adc
adc
dec
fbstp
pop
gs
dec
pop
outsb
es
das
sahf
dec
mov
or
jle
mov
cmc
or
subb
mulb
mov
out
fsub
push
sub
out
lock
and
aam
scas
js
add
jmp
dec
cmc
test
xchg
popa
movsl
push
mov
mov
fwait
and
outsl
or
aam
cmc
push
call
jmp
inc
sbb
xchg
mov
in
rclb
mov
push
sbb
pop
add
enter
cmp
sahf
jnp
ja
test
js
pop
pop
mov
std
mov
mov
push
push
push
stos
or
mov
daa
push
xor
fisubrs
and
inc
lcall
lret
fstl
dec
orb
ljmp
sub
pop
xor
popf
jg
cli
cmp
movsb
pop
add
jge
jp
mov
pusha
test
gs
mov
rolb
aas
shr
push
and
push
dec
sub
std
movsl
xchg
mov
out
mov
jmp
popf
xchg
ficoml
cmpsb
mov
and
mov
scas
int
pop
add
loopne
je
push
rcrb
mov
pop
nop
sbb
ds
std
mov
cmpl
push
cmpsb
lods
addr16
cmp
cmpsl
gs
and
movsb
js
jno
cld
dec
sub
jge
test
xchg
cli
add
adc
sub
lea
movsl
add
mov
es
and
ret
xchg
in
cmp
cli
in
jo
insb
push
hlt
insl
adc
dec
xor
gs
aam
cli
fwait
bound
and
mov
lcall
xorb
add
popa
gs
in
loopne
adc
into
push
and
jne
ret
mov
insl
inc
outsl
into
pop
and
xor
mov
mov
mov
mov
in
xchg
jmp
dec
xchg
pop
outsl
sbb
repnz
fmull
cmp
jbe
flds
nop
outsb
and
les
addr16
negb
or
jmp
inc
mov
fcmove
dec
mov
mov
sbb
sahf
cmpsl
pop
and
faddl
int
ret
add
xor
nop
push
ss
out
data16
in
ret
into
ljmp
push
and
inc
rol
jl
out
popa
cs
stos
dec
or
sbb
popf
mov
pop
xor
pop
cltd
clc
sar
jp
jae
subb
int3
or
pop
cmp
xlat
cmp
test
dec
loopne
cli
jge
shrb
xchg
outsb
or
mov
dec
cmp
pop
xor
aad
adcl
fists
mov
mov
popa
jne
gs
in
jmp
cmc
mov
outsl
jnp
pop
push
loope
stc
cmp
in
cmpsl
mov
jns
cmp
pop
dec
or
test
idivl
xor
ds
jge
lods
mov
rorb
stc
inc
sub
fists
fiadds
push
or
dec
aad
sub
cwtl
cmp
iret
xor
push
rorb
clc
cmp
add
or
lcall
or
arpl
cmpsb
cmp
jne
loope
cmc
fwait
nop
imul
je
jnp
cwtl
mov
cwtl
outsb
daa
dec
aam
test
in
push
and
lods
jo
xor
mov
xchg
push
push
mov
dec
mov
popa
ret
cli
insl
sbb
and
fidivl
xchg
inc
mov
ja
aad
imul
shl
outsl
add
mov
loopne
mov
mov
sub
pop
test
sub
or
add
mov
xorb
push
jl
or
aaa
sahf
mov
add
stc
jle
repnz
test
aad
xchg
addl
imul
test
jo
push
rorb
pop
lret
mov
xor
aaa
mov
icebp
mov
xchg
pushf
sub
dec
xchg
sbb
dec
cltd
fadds
data16
mov
jbe
out
mov
icebp
addr16
sub
sub
and
fistps
and
pop
or
es
stos
add
hlt
fcoml
call
dec
push
leave
mov
hlt
sub
push
mov
dec
sub
ds
fs
add
in
cwtl
scas
inc
and
mov
mov
and
cli
fs
mov
cs
div
dec
lods
add
cmpsb
mov
in
push
nop
aam
insb
rcrb
push
sub
hlt
movsb
fstps
faddl
inc
in
pop
push
addb
aad
scas
ret
scas
loope
jb,pt
and
iret
sbb
cmpsl
mov
adc
cmp
jo
and
inc
xor
sbb
mov
pop
mov
mov
sub
adc
aad
rclb
inc
adc
int3
lods
shlb
hlt
jecxz
and
jmp
or
pop
cmp
sub
xchg
loope
lret
insl
mov
sbb
mov
adc
pop
add
push
jne
sub
ficompl
or
inc
cs
jle
into
jp
imul
scas
mov
dec
out
inc
pop
mov
ret
cmpb
lods
iret
and
sbb
add
sbb
pop
mov
lcall
clc
push
xchg
insb
lcall
out
mov
adc
fstps
es
lock
jae
lahf
pop
das
cmp
out
add
lods
stos
movsl
not
shl
aad
xchg
push
shlb
mov
arpl
push
movsl
push
fucomip
jl
fwait
pop
or
jmp
pop
sarb
stos
mov
cmpsl
dec
jb
jge
mov
jp
call
jo
in
pop
sbb
and
sbb
pop
add
push
and
enter
mov
inc
jg
aad
sbb
jg
push
aaa
sub
adc
es
pop
shll
mov
fistpl
mov
mov
jae
aam
jae
jae
aad
push
lds
and
fs
imull
das
mov
shlb
jmp
mov
insl
test
and
insb
sti
mov
fs
idivl
rcll
scas
cltd
add
sub
pop
sarl
subb
std
push
and
adc
repnz
ret
xlat
int
rclb
ficomps
mov
cwtl
inc
out
mov
cwtl
std
pop
mov
inc
push
mov
add
dec
push
in
mov
cwtl
call
cmp
std
add
pop
stos
jb
xor
jbe
leave
dec
lcall
loope
pusha
enter
test
jmp
imulb
call
jl
and
pop
es
aam
lods
scas
push
mov
fsubrs
mov
ret
pop
xor
push
mov
jecxz
lods
hlt
loope
les
sarb
add
ret
enter
inc
shrb
push
xor
fsubl
cmpsb
pop
addl
mov
inc
or
sbb
ja
mov
popf
cmp
movsb
and
or
add
pop
sbb
adc
fs
xchg
dec
aad
xor
aas
leave
cmp
clc
out
ret
sti
xchg
jecxz
addr16
mov
inc
jge
mov
pop
sub
out
ds
leave
jne
jp
mov
adc
std
leave
mov
movsb
push
imul
clc
fxch
stos
test
push
pushl
mov
aaa
movsl
les
fmull
insb
je
mov
fdiv
jle
rol
lret
mov
ret
jae
bound
pop
mov
jl
inc
xor
jnp
dec
adc
mov
mov
xrelease
jmp
add
mov
mov
leave
popa
adc
in
xor
dec
xchg
fldenv
mov
jle
lret
test
mov
sbb
push
idiv
mov
cmp
dec
xchg
jbe
mov
push
jp
pop
fldenv
cmp
pop
jne
leave
sub
jecxz
inc
cltd
and
xchg
adc
push
mov
out
push
call
sbb
mov
idivl
xor
mov
popl
scas
xchg
dec
dec
xor
in
xchg
out
jo
or
adc
in
lahf
data16
mov
orl
push
clc
pop
push
je
in
lahf
adc
xor
pop
sub
push
and
aad
cmp
mov
push
jbe
enter
xor
mov
cld
and
outsb
xor
out
ss
sub
push
fxch
clc
mov
push
test
test
test
xor
ljmp
test
inc
lcall
clc
imul
cmp
scas
xlat
icebp
inc
shlb
int
shlb
int3
les
and
movsb
sub
pop
or
lret
add
push
pop
loop
mov
repz
pop
clc
adc
lahf
subb
pop
sub
clc
jge
pop
pop
call
enter
and
cmp
rcr
sub
jo
aam
icebp
or
pop
add
adc
pop
xor
aam
and
pop
inc
push
xchg
mov
arpl
lds
ja
pop
push
inc
fcoml
mov
sahf
mov
fisttps
xchg
jae
push
jl
cmp
xor
lods
adc
sub
and
in
mov
pop
add
jns
cmpl
faddp
mov
mov
int3
dec
in
pop
add
daa
test
xchg
mov
mov
dec
adc
sbb
mov
fdivrp
adc
xchg
repz
xchg
bound
dec
cmp
mov
xor
dec
in
push
xchg
scas
mov
pop
mov
dec
pop
bound
in
std
into
jle
fwait
adc
pop
pop
mov
insl
push
popa
dec
loopne
out
mov
loopne
scas
pop
in
push
add
ja
std
out
sub
scas
popf
jb
lahf
sub
addr16
and
out
adc
lret
push
in
jmp
push
push
aas
testl
push
fstpt
jns
add
cmpl
jne
push
push
ljmp
or
pop
in
or
push
lret
shrb
je
mov
xlat
mov
test
cltd
lcall
cmp
mov
imul
int
iret
stos
xor
pop
imul
sbb
addr16
leave
or
mov
fdivs
mov
sti
subps
in
push
shr
pop
ficoms
mov
dec
pop
pop
test
lahf
mov
rcll
or
sub
insl
xchg
stc
mov
data16
ror
cltd
shll
xchg
or
out
insl
loopne
shrl
cmpsb
test
adcb
std
add
cwtl
shrb
pop
pop
cmp
cmpsl
add
ljmp
push
inc
mov
outsb
cmpsl
in
xorl
sub
test
jnp
call
mov
loopne
xchg
dec
ja
les
out
ret
scas
sarb
mov
xchg
add
add
repz
cmp
rorl
shrl
jo
mov
int
test
mov
adc
push
sbb
mov
ja
ljmp
pusha
arpl
ds
jno
fadds
jbe
jl
jbe
sbb
in
movsb
fwait
iret
sbb
fistps
sbb
mov
jg
movsb
mov
dec
fwait
jns
pop
push
xlat
outsl
xor
push
xchg
push
pop
stc
dec
sarb
and
xor
adc
mov
lcall
rolb
mov
or
mov
aaa
cmc
jbe
scas
lahf
dec
xchg
pushf
sub
ficompl
int
daa
xor
add
ret
out
dec
and
push
pop
out
js
push
sub
outsb
dec
leave
xchg
in
xchg
jne
sbb
mov
inc
mov
rorl
push
mov
and
sub
inc
lcall
fidivrs
mov
dec
out
out
adc
push
xchg
stos
and
dec
ljmp
test
dec
cmpsb
mov
jle
in
cmpsl
cmp
sbb
lret
and
push
lods
cwtl
mov
xor
or
lds
pop
cs
test
mov
sbb
sbb
inc
gs
xor
xor
and
orb
clc
inc
stc
or
pushf
jmp
lret
xor
jmp
xchg
sub
loop
pop
imul
xor
mov
xchg
xor
shll
test
xor
xchg
rcll
pop
or
bound
ret
sbb
push
push
aas
xchg
fsubl
in
fcompl
inc
cmp
inc
xorl
lret
shll
sub
hlt
enter
ss
addr16
outsb
push
dec
lahf
adc
xor
test
stos
and
inc
rclb
dec
fcom
out
outsl
sub
push
neg
sti
pop
dec
imul
movsl
jns
or
imul
and
mov
bound
add
outsb
jg
lock
mov
add
dec
inc
dec
xchg
adc
pop
data16
mov
fwait
sbb
mov
and
pop
fidivl
mov
cs
test
popf
push
xor
hlt
pop
jecxz
ss
out
inc
popf
negb
jae
out
scas
in
pop
sub
xchg
jb
rcrl
inc
nop
inc
sub
dec
stos
adc
imul
les
clc
roll
aaa
mov
scas
cli
push
shrb
or
and
inc
cmp
icebp
cmp
loope
cld
cmpb
xchg
push
adc
mov
mov
jge
add
pop
xor
mov
jl
jne
or
dec
outsb
cld
jnp,pn
cmpsb
fsubr
out
lahf
cmp
mov
jle
push
lahf
rorl
xchg
jnp
ret
cmpsb
sbb
ret
push
jbe
jnp
pop
mov
in
mov
and
sub
out
inc
lret
pushl
mov
sbb
mov
jb
fsts
add
out
popa
cld
pop
imul
mov
leave
jg
insl
sbb
fucomip
pop
fs
cmp
adc
push
pop
xchg
cmp
cmp
inc
mov
rorb
out
jl
dec
in
mov
mov
xor
jmp
pushw
movsb
rolb
das
mov
icebp
pop
mov
xor
sbb
jb
dec
insl
and
inc
int3
mov
jl
pop
inc
out
cmp
fldenv
lcall
or
lret
or
jge
sbb
fists
add
add
dec
cmp
xchg
outsb
cmp
cwtl
push
nop
test
jl
push
and
mov
cmp
cmp
cmpsb
dec
in
aam
popf
cmpsl
bound
mov
or
popa
into
ret
out
pop
and
ljmp
out
popa
lahf
mov
fisttpll
aam
cmpb
push
or
jmp
push
push
jo
mov
xlat
movb
out
jp
jnp
jbe
pop
dec
arpl
lock
ja
cmp
inc
push
push
inc
jl
test
xlat
pusha
add
mov
pop
aad
xchg
mov
lods
lcall
loope
jo
loopne
adc
icebp
movsl
ret
pop
test
fistpl
scas
cmc
sub
es
negb
mov
pop
jg
pop
fmul
cmpsl
outsb
xchg
push
cmp
lret
jle
mov
mov
pushf
sub
shrb
sbb
or
inc
lret
mov
mov
push
jae
sub
in
or
push
sbb
or
sub
dec
mov
clc
jle
pop
jne
dec
loop
push
jb
xor
cmp
sub
push
fs
bound
ds
imul
icebp
and
fwait
and
inc
jl
repz
push
jno
icebp
into
mov
cmpsl
sub
out
mov
push
jno
mov
fisubrs
scas
jmp
sti
push
cmc
add
jne
sar
stos
and
sti
iret
out
and
inc
inc
push
rorb
pop
or
mov
xor
lret
xchg
testl
fmuls
pop
mov
pop
les
mov
push
jmp
inc
dec
popf
sub
push
cmp
add
dec
movups
push
out
add
jle
addl
ret
push
cmpl
pop
fmull
clc
jl
test
lcall
sbb
cmp
cld
jle
pusha
mov
mov
enter
inc
dec
out
rorb
shll
sub
and
je
fistpll
pop
popf
mov
sbbl
jmp
cmpsb
imul
js
push
cli
add
iret
mulb
lcall
fs
loopne
aas
es
cwtl
into
xchg
lcall
enter
pop
sbb
mov
push
mov
xchg
mov
mov
add
lock
sub
sahf
xchg
into
mov
xchg
and
lcall
cltd
push
and
imul
inc
aad
insl
fmuls
fcom
sbb
dec
pop
mov
test
in
loopne
test
or
pop
sbb
inc
lret
imul
or
arpl
cli
and
mov
inc
les
mov
jb
and
nop
fdiv
lret
pop
mov
pop
jbe
add
popf
repnz
pop
pusha
push
std
movsb
cmpsb
std
or
scas
mov
dec
outsl
in
daa
jg
aad
push
push
push
inc
sahf
dec
enter
cwtl
inc
divps
sarb
pop
fstl
mov
xor
mov
movsb
je
movsb
cmp
loopne
dec
mov
xor
push
xchg
es
sbb
pop
pushf
mov
or
jmp
push
or
mov
popa
sub
out
push
cwtl
fcmove
pusha
push
stc
cmp
cmc
popa
mov
mov
pop
add
loope
daa
pop
in
xchg
jnp
aam
xchg
mov
push
ret
fs
mov
shlb
sti
fsubl
inc
ljmp
loopne
cs
call
pushf
test
mov
sbb
and
mov
xchg
fs
xchg
aam
outsb
sbb
dec
xchg
les
mov
adc
sarb
push
imulb
xlat
push
mov
jnp
jo
stc
cmpsb
movsb
pop
ja
jo
jmp
jp
cmp
push
ja
sbb
mov
inc
repnz
popa
mov
push
stc
or
test
inc
xchg
mov
jae
sbb
xor
popf
and
mov
or
xor
or
jno
shl
in
jmp
call
test
lcall
subb
ljmp
jo
stc
repz
adc
xchg
and
rorb
push
mov
enter
pminsw
fisubrs
or
stos
sub
push
dec
sbb
add
stos
add
cwtl
nop
iret
mov
adc
jno
adc
outsl
aam
jnp
aam
dec
jmp
scas
jae
xor
jg
ljmp
add
in
cmp
sbb
ja
inc
scas
dec
pop
ror
data16
mov
push
pop
sub
xor
pusha
cwtl
rcl
mov
lods
cmpsl
vunpckhps
cmpsl
dec
loope
je
repz
xor
out
add
dec
rol
mov
inc
test
xchg
outsb
xor
ds
xchg
and
pusha
mov
xor
mov
push
les
fnstsw
sti
fcmovne
sub
pusha
xchg
repnz
mov
sub
add
mov
rcr
sbb
stos
pop
sarb
in
push
js
or
jg
sub
frstor
sub
mov
mov
out
mov
loop
mov
test
roll
out
mov
mov
pop
dec
push
outsl
in
sti
fsts
mov
mov
fucom
insb
out
jle
jns
fisubrs
inc
pop
mov
cltd
pop
pop
in
push
loope
outsl
cld
xchg
cmp
xchg
sti
adc
adc
adc
mulb
push
lock
sub
sbb
mov
rcrb
lods
pop
cmp
pop
push
fs
xor
add
jle
movb
pop
fwait
xchg
dec
sub
dec
dec
lock
xor
mov
jg
or
call
je
fsubrs
jnp
push
xor
sub
mov
add
lea
decl
addl
mov
lret
icebp
dec
push
jge
xor
ja
ss
or
push
sahf
mov
cs
inc
mov
sbb
jnp
push
rclb
push
sub
dec
push
test
sbb
cli
pop
xchg
das
bound
cli
scas
cmp
pop
mov
mov
test
jae
fs
jne
mov
adc
jns
add
orb
mov
jnp
fmull
xchg
xor
adc
fcomps
loopne
testb
mov
add
daa
jo
adc
testl
mov
or
mov
xchg
fs
push
test
test
iret
sbb
cmp
jmp
inc
xchg
fs
sub
mov
xchg
lods
inc
inc
js
aam
xchg
mov
ficomps
xor
ret
mov
xchg
lds
sbb
aad
or
negl
insl
pop
sub
sub
cltd
add
jle
ja
aas
js
jne
cld
sbb
sbb
mov
push
loop
dec
mov
dec
ds
dec
cmp
dec
add
popf
fmull
adcl
adc
mov
jb
adc
adc
jo
push
scas
stos
push
xchg
xchg
icebp
js
fucomi
rcll
mov
jle
xchg
push
loopne
fsubrp
ficoms
xchg
stos
js
imul
clc
in
rcr
mov
pop
mov
loope
push
mov
test
outsl
pop
insb
fisubl
jge
cmp
shlb
gs
cmp
jg
cmp
mov
ret
jb
dec
mov
repz
or
mov
in
clc
lahf
mov
pop
adc
pop
bound
pushf
xchg
add
andl
clc
mov
into
dec
out
sbb
lcall
test
and
or
out
aad
pop
dec
sbb
leave
les
mov
addl
push
inc
add
pop
fisubrl
push
jno
hlt
imul
mov
dec
dec
enter
or
aam
lods
clc
mov
out
leave
es
aam
test
and
sub
inc
and
outsl
je
lret
ds
xor
lret
out
enter
dec
insb
mov
hlt
pop
add
lods
sarl
daa
push
fmul
clc
cmc
dec
out
dec
arpl
mov
adc
insl
scas
sub
adc
insl
add
sbb
mov
repz
push
rol
filds
shrl
and
std
iret
pop
xorl
pop
dec
push
cmp
and
cmp
adc
dec
mov
in
xchg
lret
xchg
mov
mov
sbb
pop
scas
pop
js
cmpsb
jl
rcll
rorl
cmp
jecxz
push
push
outsb
mov
mov
xchg
add
imulb
sbb
mov
add
sbb
in
dec
ljmp
jg
inc
ds
jp
mov
pop
mov
insb
push
stos
dec
jp
test
pushf
aad
jbe
and
clc
call
mov
adcl
push
adc
int
mov
adc
adc
xor
mov
repnz
jg
fidivrs
cwtl
or
fbld
dec
sub
ja
ret
jp
lods
mov
and
fbstp
mov
and
iret
mov
data16
lds
loopne
cmp
push
imul
loope
inc
cmp
jge
push
fnstcw
mov
lcall
ss
inc
sub
js
or
cmpsb
dec
icebp
test
repnz
pushl
mov
sub
jecxz
mov
jne
js
cmp
stos
mov
loope
sub
mov
xor
jecxz
lret
stos
dec
out
cmp
lea
cld
sti
push
scas
cmp
iret
lret
shlb
push
lods
lds
mov
mov
mov
add
fwait
sub
subl
pusha
outsl
cmp
inc
mov
push
pop
mov
into
inc
jecxz
scas
mov
stos
dec
lcall
stos
pop
arpl
icebp
fdivs
repz
ja
cs
mov
push
pop
or
fwait
iret
stos
pop
iret
pop
flds
pop
sub
and
in
ret
out
out
inc
adc
int
sub
push
notl
pusha
in
sbb
iret
pop
int
les
mov
xor
mov
and
insl
jbe
mov
mov
std
stos
insb
hlt
cmp
cmp
mov
out
cld
pop
mov
mov
int
out
jb
dec
add
xchg
fldenv
jb
out
shll
cmp
mov
aaa
addw
mov
fildll
lret
xacquire
cmpb
ss
lahf
pop
cmp
loope
xor
in
pop
in
dec
sbb
push
insl
dec
xor
add
inc
imul
notb
clc
loopne
or
push
lret
mov
xchg
jns
xchg
or
mov
dec
push
pusha
push
cld
cmc
pop
pop
shlb
movsb
pop
mov
cld
popf
pop
push
mov
in
sbb
fisubl
mov
mull
mov
clc
ljmp
pop
xchg
call
mull
pop
cmc
adc
add
sub
je
jecxz
fdivr
orb
mov
cmc
call
dec
dec
dec
cld
cltd
aaa
sub
popf
cmpb
iret
pop
xchg
mov
loope
xchg
negb
sub
mov
jno
push
sub
dec
imul
outsl
imul
cld
fs
in
lea
mov
mov
in
xlat
mov
cmpsl
es
sbb
push
adc
fmuls
sub
pop
jge
cmp
scas
fistpll
cmc
sti
sarb
sbb
sbb
xchg
ret
mov
repz
sub
dec
cwtl
cmc
aad
and
sub
es
pop
movsb
xor
arpl
out
xor
out
ret
sti
ss
jns
or
andb
filds
xlat
mov
add
and
mov
dec
add
jno
xorl
mov
push
dec
divl
sub
mov
flds
lret
mov
mov
xor
imul
outsl
test
sub
fnsave
mov
or
jmp
mov
xchg
into
cmpsb
dec
push
pop
iret
test
fwait
add
xchg
and
mov
push
push
xor
dec
insl
inc
pop
lcall
jl
arpl
outsb
jmp
and
xor
out
mov
jbe
lcall
scas
aam
pushf
or
and
jg
lret
and
shll
mov
je
sysret
mov
push
and
cmp
xchg
iret
push
ljmp
jno
and
pop
ret
insl
jmp
ret
jge
movsl
mov
pop
mov
sub
jecxz
mov
or
adc
push
test
push
out
rcr
idivl
in
insl
jbe
dec
mov
shrl
or
xchg
jo
lcall
mov
add
fsubrl
adc
in
das
mov
jnp
in
cmpl
into
repz
les
pop
add
mov
cs
enter
inc
fidivrl
push
pop
sti
sti
les
and
into
sub
mov
mov
in
sub
lret
movsl
orb
shrl
mov
mov
adc
fcom
ficoms
sti
jecxz
ss
ret
movb
loop
jg
mov
push
inc
fldenv
lock
add
push
and
push
jb
inc
insb
pop
rclb
push
push
dec
mov
leave
imul
and
in
pop
jp
gs
aas
xor
jbe
or
shll
dec
gs
sbb
mov
stc
fsubl
faddp
mov
sub
sbbl
dec
adc
mov
xor
mov
inc
sbb
sbb
mov
icebp
lret
push
sub
push
pop
cmpsl
scas
pop
out
sahf
xchg
or
aas
dec
push
aam
sub
add
sbb
mov
xchg
ss
inc
jl
xchg
lcall
fidivrs
mov
fisubrs
inc
dec
push
dec
js
or
xchg
in
and
sub
fsubl
mov
add
pop
cwtl
jb
push
test
add
mov
stos
in
push
mov
xor
loopne
xchg
das
icebp
mov
dec
in
jbe
adc
jg
stc
rcl
mov
loop
mov
mov
es
xchg
jle
cvtps2pd
dec
sbb
mulb
xor
repnz
push
mov
test
in
ret
mov
sub
adc
jg
cmc
cld
mov
or
mov
pushl
mov
clc
lods
push
add
cmp
adc
push
icebp
shrl
shrb
rcl
push
fistps
mov
jecxz
xchg
test
nop
push
pop
inc
scas
sahf
xor
cmpsb
out
cld
pop
lea
push
sub
inc
jb
dec
dec
hlt
xor
jg
addr16
jle
movsb
iret
jle
mov
xchg
mov
test
mov
jl
xchg
xchg
lock
sti
in
sub
mov
sub
or
adc
mov
sbb
repz
adc
flds
repnz
xor
jecxz
pop
dec
hlt
sub
fisubrl
stos
mov
mov
adc
adc
push
adc
mov
xor
jnp
test
cmpsl
cs
or
mov
hlt
dec
stos
fsts
int
and
test
and
clc
mov
int3
inc
cld
mov
lods
pop
imul
loopne
std
push
cwtl
cmp
xchg
shll
dec
push
mov
mov
sub
imul
or
sub
movsb
pop
sub
rcr
ret
cmp
ja
fwait
out
cmp
notl
pop
lods
rol
jmp
push
out
je
mov
adc
add
push
and
out
sub
or
movsl
fcom
sub
xlat
cmp
jp
es
add
repz
mov
mov
xchg
jmp
and
aaa
in
xlat
jbe
dec
pop
jg
lahf
rcrl
pop
or
push
mov
inc
sub
pusha
jnp
push
jbe
adc
cld
push
dec
or
out
jp
std
repnz
outsb
inc
sub
xor
enter
es
adc
mov
arpl
test
pop
xchg
add
and
adc
mov
pop
test
jbe
sbb
xchg
jns
mov
adc
cmp
outsb
ss
or
test
pop
mov
aas
enter
mov
push
adcl
cmp
jge
shrl
sub
stos
mov
loopne
push
add
sbb
scas
jge
xchg
out
shll
fistpl
out
stos
and
hlt
outsl
call
and
mov
push
add
cwtl
adc
ljmp
add
sbb
fidivs
jle
hlt
cmc
fstpl
and
sub
enter
cmp
popa
das
aas
pop
add
mov
xchg
mov
inc
cmp
push
mul
jg
xchg
dec
int
or
sbb
imull
or
fdivr
sbbb
cmp
xchg
movsl
jmp
and
fidivrs
mov
pop
into
mov
push
pop
out
lcall
scas
jecxz
mov
aam
pop
inc
or
les
fldl
int
mov
jmp
inc
and
clc
dec
les
fwait
mov
adc
in
fldz
aas
aas
pop
mov
inc
rcll
movsb
fbstp
mov
sbb
aad
adc
or
or
fsubrs
mov
out
or
adc
flds
jmp
cmpsb
push
push
xor
lahf
insb
mov
in
add
xor
fs
push
fs
stos
mov
test
mov
push
and
fcmovne
cmp
mov
jge
cmpsl
mov
fdivr
cld
ret
cld
ljmp
fisubs
add
adc
out
jns
movsl
adc
push
xor
jmp
icebp
and
cmovp
sub
inc
bnd
das
clc
adc
sahf
jb
xor
hlt
lods
stos
insb
mov
ja
adc
xor
inc
or
xchg
ret
call
jge
sbb
outsb
sub
jmp
int3
or
fsubs
lret
icebp
das
nop
imul
xor
pop
lret
cld
int
mov
roll
sbb
in
push
mov
xor
or
ficoms
fisubs
mov
jne
in
xchg
inc
add
daa
in
mov
push
fildll
clc
add
sbb
add
gs
sar
jecxz
fnstcw
stos
add
jbe
inc
popaw
or
pushf
in
mov
inc
test
inc
xor
mov
bound
xchg
cld
leave
add
cmc
aas
call
add
dec
cmc
cmpsb
sarl
into
jmp
cmpsl
xchg
shlb
es
bound
pop
ja
jle
sub
mov
mov
push
cmc
movsl
add
adc
sarb
shrl
pop
mov
adc
ret
pop
lea
int3
bound
movsl
or
movsb
sti
adcl
add
pusha
insb
xor
into
int3
jmp
fldcw
in
mov
in
jne
fidivs
inc
es
and
pop
pop
in
jl
in
xor
enter
ss
sbb
mov
add
cmpl
push
pop
pop
xchg
xor
int
dec
add
loope
adcl
imul
cmp
jns
xchg
mov
lds
sbb
loop
int
push
aad
cmp
sbb
xchg
aam
les
hlt
and
push
ja
hlt
loopne
push
test
cmp
sti
pop
mov
mov
jmp
mov
test
das
lods
lcall
mov
dec
movsl
sbb
test
aas
inc
mov
add
movsb
clc
mov
aam
jno
add
xchg
jg
xor
rcrl
add
mov
add
push
inc
stos
insb
sub
cs
int3
xor
insb
jnp
shr
mov
push
daa
ret
rcrl
out
adc
dec
pusha
ja
fadd
std
mov
mov
xor
mov
jo
sbb
add
fstp
imul
dec
mov
jecxz
xchg
lds
push
or
xchg
or
leave
movsb
mov
pop
ss
or
fs
sub
fidivl
mov
sbb
and
cmpsb
xor
jge
repz
xchg
pop
arpl
outsl
inc
xchg
mov
push
push
jns
call
inc
mov
xchg
or
mov
dec
cmp
pop
cli
or
cmpsl
cmp
or
cmp
popa
rcll
mov
sbb
dec
lds
ret
fisttpll
mov
sbb
pop
mov
mov
lock
mov
mov
out
cli
aam
insl
or
stos
dec
add
jo
prefetch
mov
repnz
fidivrl
scas
clc
mov
xchg
fs
imul
clc
mov
rcl
in
dec
lock
dec
loop
popa
inc
cmp
pop
sarb
sahf
and
sbb
stos
adc
std
jle
jb
cmpsl
mov
mov
repz
add
jo
inc
ret
mov
push
jnp
pop
mov
inc
lds
mov
fs
push
xchg
cli
fnstcw
jb
mov
lahf
mov
adc
sbb
pop
cmpl
push
pop
push
sub
cmc
outsl
mov
xchg
popa
dec
dec
jg
cs
jl
jle
out
xchg
or
rorl
arpl
mov
mov
out
push
push
pusha
push
push
adc
inc
xchg
mov
xor
pop
cs
mov
xor
xlat
repnz
hlt
cmp
xchg
jno
bound
out
xchg
repz
xchg
mov
mov
orb
or
aam
jge
add
add
ja
fwait
movsb
test
push
and
mov
push
insl
out
insb
imul
mov
mov
and
je
in
pop
call
jno
mov
cmp
jnp
aas
popa
outsl
push
repnz
repz
psraw
pop
xchg
jo
cmp
or
shrl
add
cltd
add
pop
inc
mov
cld
mov
lods
cltd
inc
jp
or
cmp
pusha
fimull
jl
mov
adc
repz
hlt
scas
jecxz
mov
sub
sbb
mov
fwait
xorb
stos
insb
ret
xor
cwtl
xor
mov
dec
scas
xor
movb
insb
out
out
xor
dec
clc
std
dec
inc
pop
sti
add
and
sti
jns
mov
lock
sub
pop
pop
jae
fdivr
into
pop
push
add
out
ds
ret
add
das
cmpsb
mov
pop
mov
outsb
mov
sub
popl
lea
loopne
sbb
fldcw
or
add
cli
pop
cmpsb
in
xchg
inc
mov
sbb
adc
cmp
cmpsl
dec
mov
sarw
push
daa
popa
mov
in
pop
shlb
mov
or
cmc
int
aaa
dec
cmp
iret
ds
out
and
leave
dec
imul
sar
inc
arpl
inc
push
loope
xchg
addr16
lods
inc
dec
mov
negb
jmp
add
inc
xchg
mov
leave
inc
aaa
dec
xor
sarl
out
lods
aaa
and
push
push
fisttpl
jecxz
xchg
mov
lret
push
ret
adc
add
jbe
popf
and
mov
lods
outsb
cmp
out
dec
jns
fwait
jp
jne
fldcw
mov
pop
scas
push
push
inc
xor
test
jo
xor
gs
test
xchg
iret
mov
lret
jnp
shl
cmpsl
ficompl
dec
mov
add
or
mov
ret
cmpsl
jbe
das
mov
adc
mov
jno
ret
xor
les
faddl
sarb
cmpsl
movl
in
cmp
mov
mov
sbb
repz
or
daa
lock
int
pop
scas
nop
cmpsb
push
sub
mov
jl
inc
mov
out
into
test
outsl
jge
jbe
mov
mov
arpl
and
or
inc
jb
mov
xor
imul
mov
mov
cmc
push
or
addb
push
hlt
dec
jp
insb
popf
and
and
stc
int
stos
jg
mov
mov
sahf
arpl
pop
inc
cmp
mov
mov
and
out
pop
jae
mov
fmulp
fdivs
cld
ss
dec
hlt
xchg
in
xlat
and
xchg
loop
pushf
loope
xor
rcrl
fs
mov
mov
mov
and
inc
sbb
or
bound
dec
jp
out
jg
push
pop
insb
cmp
scas
push
push
xor
cmp
mov
xor
pop
mov
sbb
cmp
into
cmp
popf
and
cmpsb
or
mov
mov
lock
pop
imul
imul
incb
mov
inc
int3
mov
cwtl
jbe
lock
add
rclb
jb
xchg
cltd
sbb
int3
mov
pop
ret
incl
and
xlat
and
add
sub
mov
pop
push
outsb
and
aam
adc
fwait
adc
jle
je
dec
loope
add
bound
sarb
xlat
push
aas
push
xchg
dec
popf
int
xchg
or
andb
pop
jbe
stos
push
xchg
push
dec
inc
sbb
cmp
xchg
mov
hlt
jecxz
sbb
aad
shl
jp
jecxz
pop
mov
leave
decl
addr16
sbb
push
sbb
sbb
imul
cmp
popa
mov
mov
ficomps
test
sub
cs
outsb
pushf
movsb
cmpb
loopne
loopne
jge
mov
movhps
mov
and
mov
mov
or
in
xchg
mov
xchg
aam
in
bound
mov
es
loope
int3
daa
scas
lcall
jo
arpl
push
push
sub
les
addr16
sbb
push
sub
iret
xchg
pop
adc
ret
mov
jo
xlat
or
push
iret
sub
fldt
sbb
inc
fchs
outsb
dec
pop
negl
aas
push
call
lahf
mov
and
push
dec
lods
pop
hlt
sbb
imul
inc
sbb
call
jae
shl
dec
dec
shll
cld
ja
aad
push
mov
aad
xchg
adc
sahf
bound
les
xchg
fdivr
lret
push
xor
mov
jecxz
mov
lret
xor
and
roll
mov
call
std
mov
and
and
rolb
push
dec
sahf
idivb
xor
sahf
das
pop
roll
push
in
aaa
ds
repnz
pop
mov
mov
inc
aad
pop
lea
scas
imul
int
cmp
dec
pushf
and
test
mov
cmovno
aas
mov
shll
cmp
jb
mov
mov
xchg
out
xchg
add
pop
pop
adcb
aam
mov
jae
push
call
fidivs
sbb
mov
dec
int
aas
or
sub
popf
cmp
into
cmpsl
cmpb
shlb
imul
stos
das
pop
fld
push
cld
iret
inc
cmp
cld
xor
push
add
ret
aaa
add
aad
and
data16
jle
dec
inc
pop
subl
shlb
add
pop
nop
jns
sti
xor
dec
fnstenv
out
sub
dec
arpl
and
sub
xchg
pop
aad
mov
and
jecxz
inc
pop
fadds
or
push
add
mov
dec
call
imul
xor
xchg
and
rcl
aaa
adc
loop
xor
add
inc
mov
mov
push
rorl
aam
fwait
push
push
mov
fwait
push
jecxz
xchg
jge
add
mull
loop
or
int3
stos
fimull
sub
sbb
xor
gs
out
dec
xchg
sbb
sahf
mov
dec
movb
cmp
inc
stos
clc
and
mov
xor
xor
jmp
dec
aad
mov
cmp
cmp
sbb
jge
movsb
add
push
sub
add
sahf
xchg
mov
pusha
xor
jae
test
leave
test
fimull
add
ljmp
lea
push
xor
pop
xlat
outsb
mov
mov
loope
addb
stos
lret
xchg
sbb
sub
mov
fisubrs
dec
sbb
in
inc
icebp
fs
xchg
ret
insb
movsb
add
sahf
mov
das
mov
rcr
out
es
xchg
jne
sbb
push
adc
pop
arpl
insl
test
sub
jbe
sbb
enter
push
aad
sarl
or
test
adcb
shr
bound
cmp
les
push
lds
jno
orb
inc
lret
popa
inc
test
mov
pop
jecxz
les
ja
and
insb
imull
xchg
addl
mov
jg
pop
fdiv
mov
sub
repz
incl
enter
outsl
in
cmc
subb
out
mov
jnp
test
mov
rorb
jo
out
inc
and
jecxz
popa
mov
xchg
adc
pop
into
dec
jnp
shlb
repz
les
mov
xchg
inc
test
push
daa
int
movsb
inc
stos
lods
cs
ds
mov
loopne
lods
add
mov
fs
sub
cwtd
pusha
int
and
aaa
aam
lret
mov
lret
stos
movsb
mov
repz
mov
out
jnp
dec
mov
jmp
add
repz
fs
add
rclb
sbb
xor
repz
cmp
and
push
fcmovnu
cmp
int3
push
and
int
sub
lahf
mov
push
stos
sbb
mov
and
lahf
daa
push
loopne
ljmp
pusha
lods
and
loop
mov
cwtl
fcoms
out
xor
xchg
jns
js
xchg
mov
fsub
push
stc
pop
mov
dec
cmp
xlat
push
adc
insb
lahf
into
pop
frstor
andb
sub
mov
xchg
inc
adc
sbb
or
mov
lcall
dec
sub
arpl
xchg
dec
jbe
aam
mov
or
cmpsl
dec
mov
and
xlat
negl
mov
out
cmp
ss
ds
aas
and
xchg
hlt
inc
adc
xor
mov
cmp
xchg
dec
xor
mov
push
push
fld
adc
arpl
jnp
loopne
test
mov
daa
sbb
and
stos
mov
cmp
pop
pop
imul
test
pop
pop
call
pop
or
jg
fwait
repz
ss
popa
out
push
push
sub
icebp
pop
mov
dec
daa
lret
insl
sub
dec
shll
lret
ss
cwtl
dec
cmp
dec
sub
mov
je
xchg
jge
stos
cmp
xchg
sub
mov
daa
je
inc
lret
test
insl
loope
in
sbb
aas
ljmp
scas
iret
pop
sub
call
dec
mov
xchg
out
inc
aam
xchg
cli
mov
hlt
test
cs
movsl
sbb
mov
andl
aas
rorl
jae
ret
sti
add
cli
mov
add
adcl
inc
roll
mov
xchg
mov
dec
inc
mov
in
loope
lea
addr16
or
ds
outsb
sbb
inc
push
lret
pop
inc
mov
xchg
imul
mov
push
mov
call
jg
fisttpll
jmp
cmp
fadds
jp
pushf
mov
aas
mov
shlb
fwait
in
inc
mov
stos
pushf
xlat
scas
pop
hlt
aaa
icebp
dec
sti
shl
dec
xchg
sub
icebp
xor
xchg
jge
push
push
in
pop
rclb
xchg
cmpsb
inc
sbb
rcr
into
mov
mov
mov
outsb
inc
cmp
lahf
jl
sbbl
lock
jbe
cmp
pushf
aam
mov
gs
mov
cli
and
shll
pop
jno
imul
lret
cltd
ret
movsl
xor
mov
shlb
jne
in
push
lock
push
and
push
inc
xchg
push
faddp
inc
xchg
cmpsb
jbe
loop
pop
pushf
cmp
shlb
lcall
ret
aad
pushf
and
lea
mov
andb
imul
adc
cli
sti
cwtl
xchg
xor
int
sub
add
sub
push
add
mov
repnz
adc
push
test
mov
cmp
into
xchg
stc
sbb
dec
xor
push
mov
mov
insb
cld
push
pusha
fidivrs
pop
test
aaa
jge
int
inc
sbb
jl
push
das
and
in
sub
test
dec
jbe
into
jle
sbb
ss
and
cmp
pop
mov
pop
xchg
sub
xchg
pusha
fbld
ret
outsb
cmp
popf
mov
stc
sbb
mov
loope
test
dec
enter
repz
aam
lods
fisttpl
cltd
or
push
in
push
int
imul
and
mov
popf
push
pop
mov
lea
shr
cmp
sub
clc
sahf
lahf
add
push
movsl
or
in
icebp
jge
loop
pop
fwait
dec
xor
mov
jmp
cli
push
jo
add
sbb
ret
jl
loop
jle
cmp
or
stc
pusha
mov
fwait
pop
lahf
std
mov
arpl
mov
fisubs
inc
loopne
jnp
sti
cmp
inc
mull
mov
dec
jbe
push
xor
pop
jne
sbb
pop
cmp
stos
movsl
push
fisubrl
mov
sub
push
mov
cmp
mov
push
jne
sti
inc
jns
push
xlat
pop
icebp
sub
rcr
xchg
cs
insb
in
pop
leave
xor
seto
in
lds
xchg
lret
in
sub
insl
fstp
cmp
lret
mov
jp
movsb
pop
jo
movsl
lds
jp
fmuls
andl
inc
push
clc
inc
pop
jae
fistpl
jp
popf
cld
aad
fstpt
push
dec
enter
jae
mov
and
sahf
adc
push
enter
lods
fstpt
jge
push
cmp
mov
iret
mov
mul
cmc
in
or
push
mov
in
sub
add
pop
neg
test
pop
arpl
and
roll
movsl
xchg
mov
gs
mov
jae
pop
adc
push
jge
jmp
or
cld
xchg
and
mov
fnstcw
jne
sub
cmpsl
sbb
xchg
mov
xchg
pop
lea
nop
push
fbld
push
outsb
lea
dec
push
pop
push
lods
test
sub
mov
xor
push
rorl
jecxz
cwtl
push
push
push
sbbl
sbb
test
test
xchg
mov
and
into
xchg
daa
incb
push
jecxz
and
dec
mov
inc
fdivs
shlb
push
push
das
inc
scas
inc
xchg
and
outsb
ret
imul
call
mov
mov
mov
addr16
jo
xchg
push
popf
jo
pop
test
lcall
add
mov
movsl
xorl
cmpsb
arpl
mov
into
out
jbe
add
sub
xlat
negb
mov
mov
scas
icebp
xchg
fcomi
inc
dec
xchg
ljmp
aas
adc
loope
or
loope
jns
xor
jae
outsl
mov
mov
mov
dec
pop
rclb
jge
adc
sub
pop
cmpsb
push
add
sbb
mov
pushl
mov
add
sub
jmp
arpl
add
xchg
fwait
and
push
fs
jnp
jb
inc
mov
mov
stc
out
pop
inc
mov
ret
cmpsl
jnp
pop
adc
pop
bound
cmp
outsl
fstl
stos
movsl
add
sbb
nop
ret
fisubrl
ret
xorl
xchg
in
movsb
rclb
int
aam
fwait
shrb
in
out
or
push
sbb
push
adc
dec
push
lret
xchg
mov
mov
rorl
inc
xchg
fnstsw
sub
lods
pop
pop
fstp
xchg
stc
xchg
fidivrs
jns
adc
xor
sti
xchg
mov
xor
test
xchg
repz
mov
add
arpl
mov
into
and
jecxz
xchg
lahf
dec
lret
movsl
sub
ss
cmpsb
cltd
out
cs
adc
shl
pop
cmp
fldcw
jne
call
and
call
xor
mov
cmpsl
lret
ret
or
jb
fmuls
push
or
mov
das
mov
repnz
mov
dec
daa
mov
fidivs
dec
and
and
fcoml
or
sub
xchg
sbb
cwtl
pop
ljmp
out
das
icebp
js
dec
sub
or
xchg
scas
or
ss
sbbb
xchg
inc
loope
mov
iret
push
push
je
pop
jecxz
mov
jae
and
adc
stos
add
ds
push
inc
push
test
in
adc
outsb
movsb
imul
mov
std
push
enter
jmp
outsl
stos
pop
sub
outsb
xor
inc
fildll
out
dec
in
aas
dec
jnp
into
jno
jae
leave
int3
popf
xor
inc
iret
xchg
shll
lods
outsb
dec
mov
pop
movsb
mov
movsb
ret
inc
mov
sub
cmp
fidivs
sahf
xchg
fnstenv
pop
pop
and
enter
fdivl
rorb
pop
pop
cwtl
jmp
mov
xchg
clc
incl
lds
jge
and
cmp
mov
test
cwtl
jmp
xor
jecxz
mov
cmpsl
cmpsb
jmp
mov
xor
sarb
sub
xor
sahf
shll
mov
in
jmp
pusha
lcall
test
and
ds
or
nop
xor
and
outsb
add
imul
fstpt
push
cmp
rep
cltd
mov
sbb
adc
push
ja
and
pop
leave
adc
sbb
stc
in
ret
adc
ja
cmp
xchg
mov
adc
int3
pop
sbb
out
cli
out
xchg
daa
xor
lret
mov
aam
add
fisubl
in
sub
push
pop
js
xor
aad
sub
iret
pop
cwtl
dec
mov
xchg
test
mov
push
out
rdpmc
push
int3
in
push
jecxz
outsl
clc
fcompl
xchg
and
subb
xchg
cltd
mov
add
sbb
mov
outsb
sub
in
lods
jnp
mov
inc
repz
ja
inc
adc
int3
cltd
cmpsl
push
mov
sbbl
add
xor
or
test
int3
mov
lret
enter
jbe
pop
movsl
pop
adc
push
shll
jno
jno
xor
pop
les
sahf
dec
insb
lds
push
stos
out
push
mov
inc
pop
mov
push
flds
bound
add
mov
pop
lock
cmp
cli
pop
popa
insl
cld
test
pop
test
arpl
xor
xor
jnp
movsb
add
jle
shrb
jmp
shl
rcrl
cwtl
add
inc
loope
cmpsl
mov
adc
xor
insb
lcall
hlt
cwtl
jmp
rol
pop
mov
jno
pop
add
xor
mov
aam
hlt
jbe
mov
push
inc
or
clc
push
mov
xlat
in
dec
add
sub
das
ss
sub
xchg
int3
push
mov
cli
sub
std
aam
out
push
stc
stos
cli
scas
push
add
mov
mov
jns
xchg
fwait
xchg
repnz
cltd
cmp
sub
sub
aaa
and
push
jno
das
or
pop
rorb
inc
mov
xor
xor
mov
or
add
mov
pop
out
mov
inc
mov
xor
imul
ss
std
xor
mov
loop
arpl
dec
mov
xor
adc
lea
inc
and
stos
imul
pop
jbe
sbb
xchg
jns
and
aas
repnz
rcr
sbb
int
jp
pusha
mov
sbb
xor
repnz
xchg
jp
mov
jle
xchg
sub
mov
scas
loope
dec
das
ljmp
popf
cmc
mov
inc
xchg
xchg
lea
mov
popf
xorb
ljmp
xorb
xlat
mov
and
loop
sbb
ja
xchg
fstl
xchg
fdivrl
push
test
iret
pop
xchg
mov
pushf
adc
adc
test
mov
rcl
jae
add
fisubrs
lods
bound
fcoml
and
arpl
out
mov
inc
je
mov
mov
out
pop
jnp
mov
push
mov
or
and
lret
inc
add
aad
sbb
repz
pop
cmc
fildl
xchg
sbb
insb
and
fbld
aad
ss
lods
popa
jno
push
lods
mov
stos
push
test
ror
and
ror
pop
aaa
or
pop
mov
dec
cmpsb
xchg
loopne
push
fs
test
lods
xchg
pop
mov
xor
daa
in
lea
sahf
sarb
dec
addr16
mov
outsb
dec
aad
ret
pushf
gs
jb
mov
daa
cmp
hlt
fiaddl
pop
mov
inc
arpl
jl
ljmp
ja
dec
pop
movsb
popf
pop
shll
sub
and
shlb
into
fldl
pop
mov
fisubs
push
add
push
add
jl
scas
sarl
movsl
mov
add
jb
jae
std
adc
cld
icebp
jns
fwait
push
pop
jecxz
shll
jns
enter
add
add
sbb
pop
sub
lret
fs
or
mov
or
mov
lock
stos
adc
mov
loopne
ret
insb
push
aas
xlat
fidivs
push
mov
push
icebp
fdivr
aad
and
lea
loop
jns
nop
cwtl
jne
shl
cmpsb
add
cli
cld
mov
xchg
out
pop
lret
mov
out
push
imul
addr16
pop
lods
shr
insl
mov
dec
pusha
es
popa
inc
addr16
adc
jno
outsl
loope
mov
subb
cmp
jns
movsb
mov
jo
jg
mov
inc
nop
add
pop
rolb
sbb
cmp
mov
jbe
inc
mov
cld
mov
push
cmpsb
testb
sbb
and
in
pop
int3
stos
sub
sar
ds
ret
adc
nop
xchg
cmpsb
pop
sarb
pusha
repz
mov
cld
pop
push
cld
mov
xchg
mov
dec
adc
mov
lea
mov
cltd
movsl
std
es
push
out
stos
jne
pop
xchg
xchg
fmulp
jle
ja
dec
push
mov
fsubs
and
ja
sub
sarl
ret
mov
mov
and
inc
rcrb
enter
rol
adc
xchg
jbe
fmull
rol
mov
mov
shrl
pop
xchg
and
cmp
mov
sbb
test
jno
dec
xchg
sti
leave
add
and
adc
xchg
pop
int
push
or
je
lea
mov
dec
filds
sub
enter
lret
lcall
jbe
cmp
shlb
cmp
leave
pop
out
loopne
jmp
fdivrs
sub
es
lahf
test
sbb
movsl
pop
addr16
aad
daa
or
mov
or
mov
repnz
mov
sahf
in
gs
mov
jg
sbb
xchg
sub
std
lds
xchg
inc
jmp
dec
call
movsbw
jb
dec
pop
jno
lea
std
out
jns
popf
lahf
into
jo
mov
std
mov
pusha
in
cwtl
mov
fdivrl
push
sub
jp
sbb
lock
scas
xor
sub
sbb
and
sub
dec
cs
xchg
cmpb
cmpsl
in
divb
xor
sub
fisttpll
push
jae
stos
mov
pop
push
arpl
push
mov
push
xor
xor
lods
sbb
push
ret
outsb
daa
scas
fwait
add
push
pop
pop
mov
xchg
lret
and
mov
aas
and
sub
jno
dec
fistpl
inc
xchg
mov
sti
mov
nop
pop
les
enter
dec
gs
cmpsl
scas
inc
cmp
sub
ret
into
xor
adc
cmp
mov
nop
dec
sbb
sub
sahf
fmul
iret
mov
mov
rclb
ret
enter
or
rorl
and
add
jmp
clc
daa
pop
loop
loopne
test
mov
das
cld
outsb
pop
in
ret
pop
sti
dec
aad
and
sti
mov
sbb
xor
lret
inc
jge
fisubl
iret
mov
inc
cmp
and
mov
fs
xchg
push
dec
mov
xchg
push
jg
sub
sub
cmp
scas
cmp
je
mov
pop
and
imul
test
jo
jb
jecxz
test
faddp
add
add
shlb
outsb
adc
outsl
lcall
mov
cmp
mov
jecxz,pn
jmp
jbe
adc
add
lock
jne
push
mov
loopne
adc
jb
arpl
dec
mov
sahf
mov
inc
int
xor
cli
clc
adc
sti
int3
loop
test
les
xchg
xchg
hlt
lds
scas
and
outsb
arpl
inc
iret
adc
test
mov
sbbb
aas
mov
inc
mov
ljmp
mov
rcrb
in
test
sahf
addl
xor
sub
jmp
test
ja
adc
iret
push
or
lcall
fstpl
outsl
sub
push
mov
sub
mov
pop
in
addr16
push
dec
repnz
dec
push
dec
jb
jge
jl
xor
lahf
jo
lcall
lock
push
dec
jo
sbb
push
mov
push
rorb
jecxz
test
mov
push
add
bswap
xchg
and
cmp
sbb
imul
adc
rcr
into
adc
test
mov
xlat
xchg
dec
test
mov
inc
mov
sub
mov
jae
push
daa
in
sub
ffree
lods
xlat
stos
stc
sub
inc
dec
aad
enter
xor
outsb
or
mov
pop
in
dec
pop
out
test
dec
fdivrs
inc
mov
test
push
jl
fbstp
and
call
aaa
fwait
arpl
sub
sbbl
sub
mov
lds
ds
push
in
cmpsb
xchg
mov
xchg
nop
dec
bnd
fstpt
repz
mov
and
in
daa
pop
in
out
sti
data16
xor
fldenv
lret
sbb
cmpl
outsl
push
inc
xchg
jle
pop
pop
push
loope
dec
stos
jo
adc
pop
icebp
jmp
push
icebp
dec
and
jne
xor
ljmp
add
or
in
std
add
repnz
orb
mov
fidivl
mov
subl
dec
in
pop
gs
jmp
cmpsb
dec
xor
or
sbbl
or
fsubrs
pop
stc
xlat
cmp
mov
jle
test
int
nop
jl
stos
push
inc
test
lock
dec
lock
ss
loop
fwait
push
fs
test
or
jle
push
push
outsl
jmp
sahf
fdivrl
and
pop
in
sub
add
jns
pop
pushf
xor
loope
fsubl
int
xchg
pop
mov
cmpsb
in
insb
int
repz
jnp
dec
dec
cs
in
mov
add
mov
mov
sarl
push
or
pop
push
pop
jbe
pop
mov
faddl
addr16
lret
pop
inc
push
stc
fiaddl
dec
imul
push
les
jp
mov
jecxz
outsl
nop
mov
out
scas
ret
lds
push
dec
ss
aam
popf
push
aaa
pop
jg
or
push
ret
cli
cmp
hlt
jb
push
pop
mov
add
sub
mov
xor
fsubl
mov
loope
mov
xchg
pop
jnp
andl
or
popa
pop
jnp
adc
lcall
xchg
push
rcll
mov
mov
int
hlt
cmc
adc
cmp
mov
or
xchg
xchg
push
add
push
clc
push
push
or
and
add
fildll
rolb
pop
mov
mov
inc
mov
add
imul
pop
int
movlps
mov
mov
sbb
and
jle
jmp
add
fsubr
pop
mov
jg
dec
aam
dec
mov
mov
and
sti
jp
push
fnstcw
es
or
sub
push
pop
fdivl
aad
push
pusha
add
push
mov
mov
or
sbb
decl
rorl
sbb
inc
dec
or
aaa
outsl
lods
out
std
jbe
out
inc
and
fldenv
in
fisttpll
lahf
stos
outsb
iret
clc
inc
call
cmp
xor
pop
mov
push
fdivrs
std
add
pop
scas
fisubrl
mov
sbb
insb
mov
data16
pushf
ds
je
mov
into
es
icebp
mov
mov
shr
pusha
test
divl
mov
fcoml
mov
bound
bound
test
xchg
jne
push
push
push
cld
jl
adc
pop
cmp
es
in
pop
sbb
xor
push
imul
jo
dec
sub
iret
fldl
lods
add
rcl
add
jns
ja
pushl
sbb
or
aad
icebp
jno
xchg
nop
xchg
scas
nop
jp
les
jle
cmp
repnz
mov
or
mov
jge
mov
cwtl
popa
dec
inc
dec
fsubrs
subl
pop
in
inc
cmp
add
inc
pop
jno
fmull
cmp
mov
sub
outsb
cmp
xchg
aad
stos
lods
daa
cmp
sub
cli
icebp
xor
ss
cmpb
adc
jmp
leave
and
stos
cmpl
cmp
pop
ja
and
sbb
inc
lods
insl
mov
adc
imul
popa
jle
xchg
mov
jnp
into
clc
mov
lahf
rcr
mov
mov
pop
cmp
pushf
xor
iret
out
sub
shlb
mov
dec
inc
in
out
dec
adc
jle
iret
jns
dec
cld
pop
pop
cmp
mov
lods
lds
push
mov
mov
outsl
mov
jns
dec
xchg
rol
jg
data16
or
mov
pusha
push
in
mov
es
dec
xor
cmp
xlat
jno
sbb
stc
push
jno
adc
out
sub
clc
xchg
ja
fsincos
mov
and
leave
mov
push
mov
stos
rcrl
and
popf
clc
subb
nop
in
push
popf
or
dec
ds
add
jp
sahf
mov
lcall
push
rcll
pop
jbe
fidivrl
dec
cs
rcr
sahf
fdivs
mov
arpl
dec
mov
mov
jecxz
out
pop
mov
in
push
out
xor
cmpsb
jno
insl
scas
xor
imul
andl
dec
jmp
mov
mov
xor
sub
pushf
mov
push
cmpsb
sub
adc
in
aas
out
dec
ficoms
mov
out
mov
ja
insl
insb
shl
stc
loop
inc
test
jbe
jp
pop
cmpsb
pop
stos
push
jecxz
idivl
and
lret
stos
mov
or
sub
test
jecxz
inc
sub
fdivs
inc
dec
mov
into
dec
mov
cmp
pop
mov
adc
mov
ds
cmp
and
test
pushf
ljmp
das
cld
ss
pop
lret
aaa
and
xor
mov
fisubrs
clc
data16
push
mov
or
cmp
xchg
mov
es
lahf
pop
enter
lods
gs
test
aam
mov
inc
pop
cmp
repz
add
xchg
lcall
mov
test
and
test
mov
jno
repz
push
loope
push
cltd
popf
pushf
sar
fcomps
pop
and
jle
inc
sbb
icebp
std
scas
gs
stc
cmpsb
setge
pop
nop
into
cs
pop
push
nop
pop
mov
mov
xchg
mov
call
jl
mov
ds
lock
lods
and
dec
adc
test
push
fyl2xp1
mov
mov
js
add
lahf
es
xchg
add
fyl2xp1
fs
movsb
mov
loopne
sbb
andb
imul
dec
add
mov
xor
cmpsb
and
loope
xor
jge
pop
daa
cmp
sbb
mov
mov
dec
mov
orb
lret
xor
ljmp
cmp
dec
sub
aad
les
jge
mov
mov
inc
pop
push
pop
cmc
mulb
push
lods
je
push
mov
decl
inc
sbb
sar
cmpsb
adc
mov
cmp
xchg
in
and
mov
or
xchg
gs
aaa
push
xchg
add
mov
ja
sub
lcall
cmpsb
mov
xor
outsl
outsl
fldenv
cmovne
push
sbb
cmp
push
xchg
xchg
testb
mov
xor
in
mov
std
cmp
lds
outsl
add
imul
outsl
lret
ret
insl
sub
or
xchg
push
mov
mov
xlat
jg
mov
jl
pushf
subb
add
aaa
mov
stc
movsb
pop
mov
or
aam
inc
leave
subl
mov
xchg
stos
mov
pop
pop
mov
dec
jb
idivl
push
sub
sahf
inc
enter
xor
pop
or
sub
mov
push
dec
jge
jg
paddsw
mov
loopne
test
insb
mov
adc
test
push
clc
pop
lret
fyl2x
outsb
fisttpll
test
pop
inc
and
xchg
pop
aas
jns
nop
ficompl
andb
shll
idiv
xchg
rorb
mov
es
ss
sbb
mov
daa
mov
pop
cltd
and
sbb
cmp
mov
ss
adcb
xchg
test
lea
pushf
push
adc
ja
fidivrl
lods
sub
hlt
out
sub
xchg
sbb
push
movsb
mov
adc
add
sub
out
das
xchg
inc
add
add
mov
clc
mov
add
int
int
movsb
cmp
sbb
or
mov
jmp
stos
imul
jle
pusha
out
add
lcall
scas
ss
xor
roll
pusha
cmp
and
sbb
push
rol
lcall
sub
add
xchg
js
xchg
jg
cltd
dec
mov
inc
lcall
sub
mov
dec
popa
dec
cmp
movsl
adc
imul
adc
fadds
add
jp
jns
push
insb
inc
popf
addr16
pop
jle
mov
sahf
jmp
enter
pop
out
push
push
and
jae
pop
push
lret
shrl
ret
leave
mov
push
dec
leave
cmp
cltd
cmp
cld
pop
lahf
push
mov
xor
dec
clc
dec
in
popa
sarl
mov
and
fistpl
jae
sti
stos
ljmp
xchg
sarl
in
imul
add
xor
inc
scas
addr16
orb
mov
icebp
sub
dec
bound
push
iret
xchg
es
pop
loopne,pn
bound
dec
dec
repnz
pop
and
push
outsl
ret
cmp
pop
pop
mov
push
dec
push
xchg
mov
ljmp
or
enter
popf
mov
add
sarl
xchg
fdivrp
or
fsubl
push
inc
and
pop
movsb
push
dec
pop
cmpl
and
in
xor
in
add
mov
aam
mov
sbb
xchg
inc
pop
lea
mov
cli
jg
popa
xor
jmp
sub
jecxz
pop
lea
js
js
popl
sub
lahf
cmc
xchg
scas
add
sarb
pop
jmp
lcall
test
cmpsb
adc
scas
cmpsb
mov
mov
xlat
mov
pop
and
jnp
roll
adc
fwait
sbb
jne
hlt
aaa
or
rolb
xor
jle
push
jmp
cmp
fcmovb
cmpsb
xor
cmc
pushf
pop
cmp
gs
cmp
pop
add
xchg
das
testb
les
iret
xor
sub
jl
pop
popa
mov
inc
loope
mov
clc
pop
daa
mov
add
dec
repnz
fs
lock
cmp
dec
lods
adc
lret
and
mov
and
mov
out
cmp
shrl
loop
adc
sub
cwtl
cli
loopne
ficompl
fadd
stos
push
test
outsl
lahf
sbb
iret
call
stc
jp
mov
lea
mov
push
inc
push
aaa
and
ljmp
repz
jns
jne
adc
icebp
nop
jmp
mov
es
push
xchg
xor
and
xchg
fcompl
jne
push
jne
add
pushf
fldenv
es
shlb
and
jmp
movsb
outsb
cmp
inc
jge
push
out
jns
sarl
pop
loopne
cltd
dec
xchg
pop
lds
xchg
jg
jbe
cld
xchg
outsl
mov
lds
loop
sbb
xor
sti
xchg
push
dec
test
mov
sbb
aad
ret
arpl
lret
pop
cmc
out
test
dec
ja
sbb
add
xchg
or
xor
leave
mov
mov
leave
ret
fwait
mov
das
pop
clc
dec
add
sbb
inc
decb
je
mov
cmp
ja
xchg
xchg
int3
loop
lds
aad
in
movsl
cmp
aam
cmpsl
mov
fiadds
je
fwait
mov
repnz
mov
pushf
xchg
cld
xchg
add
and
push
ret
push
fs
jp
fldl
fdivrs
mov
fstl
dec
lods
arpl
lock
lret
add
add
loopne
lock
xor
ja
or
arpl
ret
sbb
arpl
loope
adc
inc
pop
pop
sbb
es
mov
imulb
es
xchg
xor
cmpsb
test
in
icebp
in
repnz
jp
and
pop
repnz
xchg
jecxz
dec
into
push
in
xchg
sub
js
mov
jmp
fstl
je
cs
dec
fs
js
pop
mov
mov
ds
addr16
mov
sub
jecxz
dec
mov
or
addr16
cmpsb
cld
nop
movsl
add
les
push
jo
aam
or
movsb
scas
pop
push
sub
pop
xlat
mov
jmp
lcall
clc
sbb
arpl
mov
mov
jecxz
pop
sub
cmp
in
les
or
add
ds
fxch
das
sub
loope
je
out
roll
in
mov
push
pop
add
cmpl
sub
lods
push
push
jg
leave
in
inc
outsl
ret
mov
xor
mov
int
cwtl
lahf
sbb
lods
outsl
shrb
fdivs
cmpb
loopne
mov
mov
add
mov
dec
testb
nop
jmp
and
push
nop
xchg
add
aad
sti
out
adc
dec
push
fwait
and
pushf
cmp
imul
add
pop
aam
out
xchg
ret
jbe
adc
pop
xor
aas
stos
sub
sti
fisttps
fabs
repnz
aam
cmpsb
add
iret
fldenv
inc
sti
mov
fildll
and
rclb
js
pop
sub
push
adc
mov
and
outsl
jp
mov
jnp
xor
lock
scas
mov
pop
mov
stc
dec
test
lea
mov
sbb
insb
xlat
test
imul
and
jae
xor
or
jno
inc
sub
je
mov
repnz
lret
push
fidivrs
mov
repz
subl
lcall
into
mov
sbb
mov
ja
xor
mov
imul
adcl
ss
sub
pop
jns
sub
js
mov
jno
jle
int
mov
lods
int3
gs
add
shlb
cmpsl
rep
add
lret
shr
pop
xchg
mov
xor
lods
pop
loope
rcrl
shlb
or
inc
cmp
call
cmp
ret
movsl
xchg
cmpsb
shll
and
mov
mov
mov
mov
call
cmp
xchg
push
icebp
mov
cltd
sub
add
es
adcb
sahf
jle
loop
lret
inc
add
inc
mov
jnp
and
xor
sub
inc
xor
ret
jg
dec
mov
loope
jo
xor
std
mov
lds
je
rol
mov
imul
and
mov
rorl
data16
push
scas
js
testl
cmpsb
pushf
sub
repnz
or
fwait
push
push
or
push
dec
sbb
out
comiss
mov
adc
sbb
es
sub
rcrl
mov
inc
test
mov
sbb
in
mov
rcrl
pop
push
jns
cmp
mov
jge
test
mov
mov
cmc
push
push
xchg
push
clc
adc
pop
imul
add
mov
jmp
dec
jge
push
std
push
adc
dec
stos
inc
add
and
cmp
inc
fiadds
cwtl
push
dec
stc
xor
push
inc
or
lret
push
mov
add
mov
cmc
out
sbb
xchg
loopne
and
or
in
aad
jl
daa
test
xor
mov
mov
adc
ljmp
test
stos
cmpsl
inc
shll
sbb
mov
sub
mov
imul
sbb
mov
jge
push
dec
idiv
pop
loope
sbb
loopne
icebp
sub
scas
xchg
addr16
xor
push
popa
or
out
mov
insb
enter
push
sub
int
stc
adc
inc
cmc
das
js
movsl
adcl
rcll
or
ret
ja
rorb
das
mov
mov
loope
xor
cmovle
fldl
cli
fwait
and
in
popa
js
xor
leave
dec
ljmp
ret
pop
inc
test
popf
aas
addr16
or
cwtl
add
pop
mov
or
push
ret
push
repnz
push
shll
js
mov
cmp
xchg
in
andb
push
into
pop
fmull
fnop
ja
negb
xchg
imul
ret
mov
and
out
lods
sbb
and
lods
in
lahf
and
adc
ljmp
mov
cld
pop
push
cmp
jp
sub
cmp
mov
sti
adcl
jmp
pop
cld
stos
fsubl
loope
js
pop
out
push
or
cmp
cmc
test
imulb
xor
dec
inc
aaa
fistps
xchg
add
mov
xorb
aas
shlb
mov
dec
sahf
pusha
in
imul
mov
sti
jp
test
repz
jno
pop
cs
enter
nop
xor
jbe
dec
pop
in
cmp
xchg
mov
adc
out
ja
clc
loope
or
pop
mov
fimull
and
je
imull
mov
xchg
aaa
jns
test
div
pop
iret
mov
jp
cmpsl
inc
dec
pop
xor
adc
push
into
mov
hlt
add
mov
push
call
cmp
xchg
addr16
scas
mov
test
outsl
cmp
cmpsl
jb
dec
les
outsb
rorb
adc
xchg
pop
sbb
pop
push
inc
pop
jg
pop
mov
ds
mov
not
mov
push
push
sbb
dec
insl
hlt
sbbl
push
lret
imul
pop
xor
stos
lret
jmp
test
push
push
dec
test
and
mov
aad
shll
daa
in
pop
adc
xchg
andl
pop
and
lahf
pop
or
mov
sbb
sub
in
push
pop
aad
adc
in
pusha
lcall
and
jo
adc
das
sarl
nop
rcr
sahf
insb
jno
movl
iret
jne
lods
mull
cmp
jne
adc
in
inc
jecxz
sub
imul
and
push
out
mov
mov
adc
nop
test
dec
jnp
pusha
cmp
rorb
fs
add
or
jle
leave
insl
mov
or
pusha
adc
mov
dec
fs
mov
shrb
mov
mov
inc
pop
sub
jbe
ret
mov
xor
push
stos
xlat
inc
xchg
out
icebp
lds
cmpsb
sub
dec
add
pushf
sbb
mov
movsl
jecxz
jb
inc
dec
cmpsl
inc
jmp
jns
mov
rcll
mov
push
stos
test
lods
mov
in
aad
mov
test
adc
imul
insl
push
scas
sub
sub
stos
addr16
add
notb
int3
and
arpl
mov
inc
jp
inc
pop
jbe
mov
cs
cmpsl
imul
pop
mov
jno
lret
xor
scas
jl
push
lcall
or
push
insl
out
cmpsb
shl
add
out
xchg
pop
sbb
iret
or
sbb
sub
ficoml
in
mov
int
jmp
and
ljmp
mov
adc
sub
pusha
or
sub
push
loope
sub
jle
sub
push
test
arpl
out
cltd
mov
shll
mov
push
lods
dec
gs
cld
sarb
inc
mov
xor
push
bound
sub
hlt
pop
js
cs
pop
mov
aam
push
mov
push
or
insb
pusha
mov
push
inc
sub
ljmp
fimuls
jmp
stos
roll
std
sbb
outsb
out
idivl
sbb
inc
xchg
mov
cmp
mov
ljmp
mov
movsl
inc
ja
lcall
loope
adc
sub
pop
outsb
mov
pop
fdivrs
push
or
repnz
inc
pop
dec
int3
test
push
and
mov
cmp
ja
in
jbe
push
sbb
out
sub
ret
inc
cli
add
outsb
stc
mov
loop
xchg
jnp
jmp
mov
xor
ja
ja
aam
mov
or
sti
into
mov
aas
fmull
fcoml
mov
or
outsb
stos
push
xchg
out
bound
xchg
push
fisubrl
xchg
cmp
push
mov
and
xor
in
icebp
add
stos
out
xchg
adc
or
lods
scas
lods
arpl
sbb
cmc
adc
cltd
shrb
push
or
inc
std
pop
mov
inc
pop
rcrl
test
leave
dec
rcll
hlt
subb
xor
xchg
push
rcrl
in
mov
mov
xor
dec
pop
jb
or
repz
xchg
mov
in
jmp
pop
sbb
sbb
pusha
aaa
mov
adc
or
push
aam
movsb
jg
mov
cmp
push
or
pop
jg
jp
pop
lahf
pushf
sub
adc
loop
aam
xor
push
lahf
std
ret
imull
rclb
outsb
shlb
shll
xchg
or
add
out
push
dec
jp
popa
mov
cmp
mov
or
int3
mov
jl
fistpll
dec
ljmp
aam
adc
mov
mov
outsl
mov
test
mov
movsb
pop
dec
dec
shrb
in
fisubs
mov
push
into
popf
xchg
lret
negl
add
je
outsl
cmp
jecxz
mov
int
sbb
or
and
jecxz
and
xchg
mov
pop
lods
test
int
jbe
jnp
repz
or
jne
mov
pusha
arpl
in
dec
pop
dec
mov
andb
movsb
stc
sbb
pmulhw
xor
faddl
mov
ffreep
aaa
enter
enter
popf
mov
ds
lret
ja
divl
aaa
cld
xchg
fsincos
jecxz
lds
arpl
call
mov
jae
jmp
out
repnz
fsubrs
or
mov
ror
int3
jmp
cltd
pop
sub
or
cs
lods
inc
inc
lahf
es
jno
mov
stos
bound
add
mov
sub
aad
cmc
inc
cmp
test
int
repz
xor
xchg
inc
mov
xlat
xor
inc
daa
xlat
cmp
jae
jo
pusha
movsl
in
hlt
sbb
add
cmp
loop
mov
mov
jb
andb
orl
sbb
rclb
ja
orl
nop
lret
ds
xor
shrb
pop
pusha
inc
cli
mov
xchg
jbe
stos
leave
popa
xchg
les
sbb
cmp
mov
sahf
sbb
adc
loopne
leave
jmp
jg
call
fldcw
mov
ds
adc
scas
lret
fld
sbb
clc
es
decb
push
jbe
scas
jnp
push
sub
dec
in
ja
jbe
and
or
and
push
lret
mov
pop
mov
jg
lods
sahf
pop
dec
jge
xor
jmp
std
pop
push
or
sub
mov
lcall
jge
jmp
std
mov
mov
sahf
jo
sbb
jg
mov
push
adc
fmull
sub
popa
pop
jl
aad
leave
arpl
xchg
fs
or
ret
sti
mov
pop
int
sti
xor
push
adc
imulb
fsubp
sahf
notb
lds
and
or
sub
adc
cmp
cmp
mov
adc
and
daa
add
mov
int
sbb
loopne
pop
pop
cmc
cwtl
stos
movsl
push
jecxz
xor
les
or
sub
xor
mov
loope
rclb
hlt
dec
dec
scas
dec
imul
test
call
mov
push
and
cvtdq2ps
jecxz
mov
mov
mov
jp
pop
mov
push
fstps
mov
mov
push
outsl
sub
call
push
test
out
and
adc
sbb
mov
popf
xor
mov
xor
add
insb
xchg
test
in
mov
ret
inc
adc
in
jb
neg
pop
add
add
lods
sbb
or
outsb
pop
rorl
fdivrs
int3
rcrb
cwtl
adc
cwtl
cmpsb
lcall
inc
xor
push
loopne
shl
jno
xor
add
jnp
rsm
sub
push
jae
in
mov
data16
or
and
push
test
pop
jmp
or
insb
or
inc
inc
cmpsl
notb
fnstsw
leave
and
bound
push
push
shl
or
test
add
jne
popl
mov
jne
cmp
mov
cmpsl
xor
dec
enter
addr16
subb
js
sub
movzbl
mov
jle
sbb
cltd
mov
popf
lahf
inc
cmpsb
xchg
sbb
xlat
inc
push
mov
cmpsl
ljmp
imul
xchg
push
and
fisubs
leave
rcr
sbb
mov
xchg
ds
clc
leave
enter
jge,pt
dec
xor
push
pop
imul
mov
inc
mov
iret
rcrb
cmp
mov
ss
iret
pop
mov
pushf
sbb
sub
mul
ja
adc
lods
fst
lahf
lret
or
rcl
mov
sbb
xchg
adc
pop
mov
je
jo
nop
roll
or
push
sbb
fs
jae
dec
not
sbb
das
gs
pushw
mov
hlt
sbb
dec
mov
pop
jecxz
adc
rcrb
jae
bound
push
inc
mov
daa
cmp
inc
adc
push
sub
pop
xor
popf
jmp
ret
cmp
pop
xchg
sub
orl
inc
fldenv
xor
cmp
scas
shr
test
fcmovne
push
pop
adc
imul
gs
adc
sarb
add
test
inc
or
subl
mov
mov
xlat
orb
xchg
mov
insb
int
test
dec
and
xchg
push
pop
cmpsb
mov
push
mov
sub
out
iret
hlt
lds
jnp
jmp
mov
fsubrs
mov
dec
jne
push
xor
jne
fs
mov
outsb
ret
dec
mov
jecxz
mov
scas
add
dec
and
idivb
fcmovnu
sbb
sub
xchg
push
fwait
ss
mov
adc
in
clc
outsb
mov
les
outsb
mov
fs
pop
xor
std
outsb
xlat
jae
in
inc
jle
or
inc
push
pop
or
stos
pusha
jo
aad
in
mov
xor
cmp
pextrw
and
ret
or
mov
insl
sarb
dec
pop
mov
push
xor
cs
fs
and
sti
jecxz
or
or
and
jp
jmp
and
addps
sub
sbb
sbb
sub
daa
cs
test
lods
fisubl
jno
aas
pop
adc
movsl
aaa
test
rcll
mov
stc
or
push
fs
movsl
xor
idivb
aad
jmp
mov
sub
mov
jg
popa
cmpsl
mov
mov
pop
mov
inc
push
mov
popf
lret
fcmovnb
add
out
sbb
fistps
jo
and
mov
mov
js
sbb
sbb
push
lahf
mov
call
nop
cs
cmp
xorb
pop
mov
xchg
cs
sarb
xlat
loopne
dec
jno
jmp
push
arpl
inc
jle
dec
popf
cs
adc
add
ss
test
add
and
das
jo
and
jp
pushf
mov
setg
mov
lods
lds
mul
loope
inc
add
mov
push
cmovp
cmpsl
dec
mov
sbb
or
in
popf
imul
and
jg
and
push
cmpsl
aad
call
xchg
sti
jge
test
mov
ja
testl
pop
mov
aad
fadd
or
sub
adc
lock
mov
or
cmp
xor
out
sbb
fmul
mov
pop
fisttpll
cmp
pop
push
sub
jnp
dec
lea
cwtl
xorb
xchg
or
mov
push
mov
fstpl
iret
xor
imul
gs
jnp
inc
push
daa
sub
outsl
fisttpl
sarb
jg
daa
arpl
es
out
lea
dec
mov
or
loopne
xor
imul
mov
das
inc
cmp
out
imul
cs
xor
scas
ja
mov
stc
nop
pop
adc
mov
decl
sahf
ljmp
ljmp
insb
insb
pop
xor
shl
daa
sbb
adc
subb
pop
and
pop
jg
insb
dec
cltd
stos
adc
aas
sub
idivb
inc
inc
scas
ss
into
mov
push
or
arpl
inc
nop
aas
stos
jb
jg
mov
push
mov
add
lods
lcall
mov
xor
in
das
add
push
sub
in
mov
jne
xchg
jne
cmp
push
jb
mov
fstpl
sbb
xchg
or
lcall
mov
jbe
push
rcrb
adc
imul
clc
xchg
aaa
icebp
out
adc
xchg
fwait
dec
outsb
std
popf
dec
rep
jge
add
insb
mov
lea
icebp
imul
int
pop
push
cmp
sbb
gs
sarb
shll
jp
sub
cltd
sub
fisttpl
test
mov
sbb
js
jecxz
add
mov
push
ret
jbe
iret
add
stos
adc
iret
sbb
andl
and
lock
lret
fdivs
jbe
mov
sbb
jbe
movl
sbb
fimuls
xor
pop
pop
fcmovb
addr16
sbb
out
cmp
imulb
jl
push
mov
mov
lret
push
sbb
jecxz
jnp
xchg
sub
aam
push
mov
dec
inc
ljmp
inc
rolb
xchg
add
cmpsl
fwait
dec
or
xchg
sbb
test
mov
daa
jae
and
repz
dec
xchg
or
jle
sbb
fs
mov
xor
ljmp
gs
jb
mov
loopne
mov
and
sbb
sub
shll
mov
mov
lock
push
jmp
lods
fistps
test
sub
loop
sahf
incl
dec
je
pop
pop
clc
jne
dec
jae
xchg
and
xor
cmp
roll
call
xor
shlb
adc
int
dec
lods
add
mov
and
sbb
and
sahf
cmpsb
xor
sbb
xchg
fsubrs
push
dec
cmp
out
pop
sub
and
les
mov
mov
pop
cmp
push
pop
sub
jb
mov
ficomps
out
jno
pop
outsl
jne
orb
rcll
mov
pop
mov
pop
and
jg
sub
addr16
add
cld
mov
cltd
sub
mov
out
enter
imul
fildl
nop
jle
aaa
or
cmp
dec
insb
inc
iret
adc
push
and
mov
mov
inc
mov
pop
push
data16
add
dec
push
jns
xor
sub
imull
test
rep
movsb
pusha
mov
test
addb
ret
ret
push
fisubrl
ficoms
jo
mov
iret
pop
roll
pop
inc
lahf
push
pop
es
out
xlat
dec
cmpsl
rolb
int
lcall
jl
out
in
push
cmp
push
sahf
out
inc
inc
mov
fwait
loop
push
push
rcrl
pop
cmp
test
mov
add
inc
lcall
enter
mov
and
fidivs
int3
dec
lret
mov
sbb
inc
movsl
outsb
sub
mov
fsts
and
ret
add
mov
fisttps
and
mov
xchg
mov
xor
subb
add
shlb
xor
aas
and
movl
mov
mov
fwait
aas
insb
xchg
xor
int3
je
inc
cltd
insb
imul
fwait
stos
pop
cwtl
and
mov
cwtl
les
dec
sub
jl
testl
cmpsb
inc
jo
and
mov
loope
inc
cmp
lahf
shr
shll
and
sub
addr16
jbe
cld
adc
imul
out
mov
pop
lret
dec
sub
in
pop
imul
cltd
lcall
in
pop
mov
sbb
mov
cs
add
pop
shrb
sbb
jl
in
sbb
fwait
mov
add
shrb
jge
inc
into
cmp
xchg
fisubl
cmp
sbb
or
aaa
scas
xor
in
push
push
add
insl
mov
cltd
sub
mov
int
call
pop
lahf
and
pop
inc
fadds
jnp
mov
push
sbb
in
add
icebp
ljmp
jbe,pn
repz
clc
cli
sbb
lret
inc
push
mov
pop
into
aam
fs
push
mov
push
aaa
adc
enter
fistpll
in
pushf
adc
cmpsl
popa
repz
xchg
xchg
arpl
sbb
mov
fimuls
xchg
cmp
mov
rorb
aam
mov
fnsave
into
and
es
cmpsl
inc
dec
lcall
sbb
hlt
sub
xchg
push
jae
mov
mov
scas
and
adcb
jae
jecxz
fstp
gs
inc
mov
outsl
sbb
dec
sbbl
cmp
adc
loop
shlb
dec
cmpsb
push
popa
xor
jecxz
sub
jbe
xchg
filds
cld
sahf
lods
cmp
push
and
movzwl
rclb
or
sub
lea
sub
cli
cmp
pop
cltd
mov
out
ja
lods
pop
cmp
sbb
jecxz
push
mov
int
imul
jno
or
imul
xor
test
and
mov
out
adc
lret
inc
out
pop
pop
mov
jmp
xchg
cmp
push
mov
cmpsb
sbb
inc
imul
testl
mov
fwait
insb
daa
mov
adc
inc
sub
and
and
push
roll
jb
data16
jp
cmp
jg
arpl
fdiv
xor
psllq
jne
mov
movsb
bound
lds
nop
andl
js
call
jbe
cmp
out
cmpsl
les
outsl
add
dec
mov
inc
and
ljmp
fs
jae
cwtl
jae
enter
xor
mov
ret
jbe
xor
mov
jns
jmp
js
imul
shrb
daa
out
repz
xchg
das
aad
out
test
cmp
loope
push
push
cltd
in
xor
mov
add
mov
xchg
lahf
ficoms
fsubr
scas
out
push
in
mov
cwtl
jg
push
rol
mov
adc
fcmovne
jnp
add
cs
cmc
jle
and
lods
cmp
jmp
mov
cmpsb
dec
cmpsl
aam
inc
fisubrs
dec
lret
sub
mov
cmp
test
xchg
inc
jg
jg
leave
mov
insb
leave
mov
stc
xchg
aad
testl
jns
push
mov
add
cmp
add
adc
xchg
cmp
mov
sbb
fstps
jle
aad
cs
arpl
pop
mov
mov
push
loope
mov
inc
arpl
or
or
and
add
out
loope
xor
mov
stos
xchg
mulb
cmp
iret
ds
or
idivl
jecxz
mov
repnz
imul
jecxz
insb
push
inc
shrb
addr16
add
push
gs
hlt
push
inc
fadd
scas
out
xchg
in
mov
rcl
sbb
sub
mov
adcb
out
xchg
mov
push
leave
xor
dec
stc
jle
popa
mov
and
ja
lret
in
lds
f2xm1
daa
jmp
jmp
sbb
sbb
cli
ljmp
lods
xchg
icebp
out
scas
daa
fimull
aaa
push
lods
inc
pop
adc
xchg
pop
ljmp
lock
lds
jl
push
add
mov
dec
pushl
lock
cmp
xor
pusha
andl
dec
sbb
inc
shrl
shll
je
adc
je
hlt
popa
or
lods
add
test
mov
fistps
ret
jge
adc
add
and
repz
mov
in
call
repnz
and
lret
fstpl
faddl
pushf
mov
cwtl
jmp
popa
mov
mov
loope
xchg
icebp
les
fs
mov
add
mov
lret
dec
push
pop
ret
call
sub
aam
lcall
mov
cwtl
push
jl
xchg
stos
loop
scas
je
cwtl
jmp
decl
mov
rcrb
add
xor
jae
rcrb
xchg
cmovbe
std
cli
das
xchg
and
jl
imul
je
jno
mov
hlt
jge
jp
gs
push
and
test
cmp
fcmovnb
mov
xchg
pusha
fnstsw
imul
sahf
or
ds
jecxz
pushf
cmp
ret
movsl
pop
stc
fstps
lea
xchg
fwait
push
xor
cmc
inc
test
nop
imul
sahf
mov
sub
sbb
xor
push
cmp
sbb
and
mov
lret
in
jnp
mov
pop
add
cmp
sbb
adc
in
lahf
adc
xchg
xorl
pop
je
mov
add
or
jo
insb
iret
fstps
fstpt
outsb
insb
lret
mov
pop
inc
xchg
lcall
ljmp
lret
sti
int3
rorb
ja
sub
push
xor
adc
xchg
daa
and
outsb
push
xchg
dec
sbb
shlb
rolb
out
sbb
adc
or
pop
adc
rolb
in
not
loopne
and
mov
and
sbb
lods
or
add
int3
aaa
jb
shlb
cs
mov
sub
dec
dec
xchg
std
fadd
cmp
add
add
xlat
jecxz
aas
mov
ficomps
pop
cmp
mov
mov
jae
mov
push
loop
mov
or
cmpsb
jge
pusha
ja
cmp
xchg
xchg
icebp
in
mov
mov
insl
mov
sbb
mov
jp
imul
jmp
pop
pop
xchg
jp
adc
test
pop
mov
sub
pop
pop
cmp
bound
dec
add
adc
cmp
push
pushl
xor
mov
ja
iret
or
cmpsb
call
outsb
pop
jmp
xchg
dec
ljmp
imulb
aas
fistpll
push
stc
iret
sub
es
sub
inc
mov
ret
insl
xchg
clc
jo
cmp
addr16
cwtl
jecxz
lcall
push
fistpll
popf
aas
shll
lock
sarl
fwait
push
orb
lret
andl
dec
sub
lcall
xchg
or
inc
outsl
xor
sub
sub
adc
sub
insl
jnp
mov
jb
shrl
insl
sbb
out
sub
sti
cltd
popf
insb
cmp
add
or
xor
mov
add
or
cmp
shlb
xchg
insl
dec
imulb
pushf
lret
out
push
pop
aam
test
je
fimull
pop
lahf
ret
lods
shlb
mov
testb
addr16
sub
push
ja
hlt
jecxz
movsb
xor
jno
cmp
daa
xchg
and
scas
mov
cmp
idivl
lret
xor
in
add
sbbl
arpl
mov
lret
stos
jcxz
scas
fistpl
mov
xchg
mov
pop
out
sbb
lock
xchg
mov
pop
insl
insl
lods
std
mov
jg
int3
insl
mov
xor
pushf
enter
jo
stos
gs
cld
dec
add
sahf
outsl
ljmp
out
push
lahf
ljmp
or
mov
popf
xor
subl
aad
or
lret
dec
mov
xchg
sbb
bound
inc
leave
push
inc
loope
mov
sub
push
xchg
sub
rcrb
pop
leave
cmc
mov
in
adc
ret
sbb
std
popa
imul
sbbb
pop
jno
arpl
lods
dec
mov
shrl
arpl
imul
xchg
adcl
mov
call
loopne
jns
pop
mov
orl
jg
pop
test
pop
cs
adc
in
pop
jle
lock
mov
jl
dec
jg,pn
arpl
pop
cld
add
xorl
loopne
pop
int3
pop
lea
ffree
bound
xor
or
out
adc
and
lods
ret
fdiv
sbb
mov
inc
or
call
jmp
icebp
or
dec
jne
pop
xor
inc
add
stc
out
inc
push
arpl
nop
mov
test
cwtl
lds
or
outsb
mov
lods
cmp
push
aas
cld
insl
dec
cltd
call
jae
mov
pop
stc
pop
aas
mov
loop
scas
mov
popf
or
lods
cmp
mov
jl
cmpsl
lret
and
adc
and
cmpsl
push
das
sbb
fistpll
shl
repz
push
xchg
inc
out
ljmp
jecxz
pop
xchg
xchg
mov
loopne
mov
sarb
pop
and
int3
jle
les
jp
call
sahf
sub
xchg
xor
cmp
and
loopne
jb
or
xchg
fsub
aad
mov
ds
loop
aaa
stos
hlt
add
sti
nop
repnz
or
fnstsw
push
inc
rcrb
mov
sub
sbb
popa
cmc
push
inc
jns
push
pop
lock
fndisi(8087
xchg
stc
cmp
jge
fwait
mov
add
test
xor
xor
incb
sti
mov
shr
stos
inc
dec
cld
cli
fimull
sti
in
xchg
xor
push
add
pop
push
scas
in
push
dec
test
jnp
call
mov
lcall
shll
lret
imul
mov
adc
dec
pushf
adc
hlt
cwtl
js
popf
pushf
cmpl
xchg
aam
rcrb
inc
pushf
mov
ficoms
fs
lret
testl
xor
mov
jmp
adc
or
in
or
inc
movsb
movnti
mov
ja
pop
sub
push
jl
std
or
lret
cwtl
lock
mov
jb
icebp
jae
mov
lock
test
psubsb
loop
cmp
sti
cmp
jl
mov
arpl
and
jae
int
add
repz
push
mov
jne
testb
pushf
ficompl
dec
pop
loopne
pop
outsl
fninit
adc
inc
jmp
shlb
sbb
mov
je
xchg
gs
jge
sub
mov
daa
js
lret
and
dec
repz
sub
clc
add
jmp
std
test
xchg
loop
mov
adc
cmp
mov
repz
jmp
addr16
lods
call
adc
xchg
pop
mov
out
mov
mov
sub
jne
je
pop
andl
loop
mov
test
xchg
cwtl
mov
sti
inc
mov
or
cmp
jl
adc
bound
outsb
xor
or
test
cltd
je
inc
adc
lods
adc
call
dec
jge
xchg
dec
push
jae
sahf
xchg
mov
test
jl
jo
mov
push
ss
xchg
dec
mov
lods
aaa
push
test
mov
sub
jp
mov
outsl
dec
adc
test
dec
sbb
das
mov
push
or
dec
xor
sbb
xchg
mov
lret
decl
add
push
lods
es
lock
loopne
jb
mov
push
cmp
or
push
pushf
insl
sbb
xor
push
mov
arpl
push
cmp
inc
xor
jmp
test
es
shr
pop
lret
mov
fcoms
daa
in
xor
xchg
inc
mov
add
jg
sarl
std
dec
sti
pop
or
ret
add
cld
inc
sarl
mov
popf
flds
cmp
ret
ja
inc
push
adc
or
lea
push
jge
or
addr16
mov
sub
insl
jmp
inc
loope
subl
adc
clc
pop
das
mov
in
jmp
and
pop
add
adc
imul
pusha
rcl
and
sbb
data16
outsl
mov
insl
addl
pop
daa
or
arpl
mov
mov
jno
sbb
cltd
push
je
mov
jmp
clc
mov
je
cmp
shll
inc
cmpsl
push
in
mov
mov
sarb
mov
mov
cld
pop
nop
test
je
outsl
rorl
jp
jae
sbb
and
ret
fidivs
cld
mov
stos
mov
and
movsl
sub
repz
adc
push
roll
cltd
mov
xchg
jmp
and
int
daa
sbb
outsb
gs
int
mov
addr16
mov
jmp
push
xchg
mov
push
sub
leave
sahf
sbb
lock
iret
out
fisubs
jb
sahf
int3
xor
push
cmp
lahf
xor
test
dec
loope
cwtl
mov
sbbl
and
cmpsb
jb
push
hlt
sub
xchg
mov
stos
loopne
sbb
incb
fmuls
sbb
aam
call
out
jle
mov
push
mov
sbbl
cltd
scas
outsl
ja
fisttps
xor
repz
adc
stc
out
aas
cld
popa
xor
sub
and
adc
jnp
mov
or
adc
mov
jnp
inc
lds
pop
xor
cwtl
ds
mov
rcrl
or
jle
out
jno
lret
mov
cmp
or
ja
and
and
cmp
push
ss
std
cmp
je
repnz
pop
jl
or
in
jge
cmp
sub
mov
inc
sti
mov
fdivl
mov
std
pop
stos
faddl
pushf
dec
andl
mov
sbb
test
out
lods
mov
daa
mov
out
or
add
scas
leave
out
outsl
scas
or
mov
jg
shrb
sbb
push
mov
lock
pop
out
pop
jecxz
lahf
push
popf
push
cmp
dec
lret
xchg
nop
push
mov
dec
sub
pop
rolb
rcrb
je
cmp
lahf
aaa
add
xor
or
push
fxch
sub
dec
in
das
add
or
movsl
mov
xchg
xchg
inc
cmp
nop
jbe
out
fimull
pop
lcall
and
decl
out
add
cltd
aam
cli
enter
out
push
mov
push
bnd
mov
arpl
or
xor
in
lahf
filds
je
pushf
adc
cmc
getsec
rcrl
jle
jne
lret
mov
ret
jmp
cmp
data16
data16
xor
push
mov
lods
andb
loopne
mov
mov
inc
cmp
and
in
arpl
rol
add
icebp
xor
cmpsl
mov
scas
dec
or
out
lods
jae
cmpsl
jnp
repz
jp
xchg
xchg
in
sbb
aas
pop
pop
scas
and
lcall
std
mov
xchg
add
mov
icebp
adc
cmp
cmp
outsb
sbb
mov
push
mov
lock
daa
lea
dec
sbb
fstps
fstp
pop
mull
in
xor
inc
xchg
notb
xlat
jge
cmp
push
outsb
mov
gs
popa
in
and
hlt
xchg
movsl
push
outsb
sub
and
data16
dec
inc
pop
cmpsl
and
jecxz
pop
xor
cli
add
stc
lods
rcl
sub
or
aas
jecxz
or
mov
lock
push
dec
or
dec
loop
mov
sbbl
cmp
add
outsb
add
in
jl
cmpsb
push
jbe
inc
je
jo
sahf
pop
ljmp
pop
xchg
inc
pop
cmc
andb
fstps
das
lods
xchg
xor
imul
aad
sub
push
ret
fcompl
notb
xor
sarb
cmpsb
out
fcoms
fidivl
enter
jbe
dec
aad
and
cmp
and
mov
cmp
or
adc
xor
test
rcrb
icebp
jo
enter
adc
mov
jmp
and
jb
movsl
int
fcmovnb
xor
pop
cmc
or
push
jmp
or
mov
int
mov
sub
fnstcw
test
mov
jle
lods
xchg
cmp
push
or
xchg
pop
jnp
push
add
push
or
in
aaa
call
cmpsl
mov
mov
pop
cmp
int
lods
xchg
test
add
insb
or
pop
sub
mov
xchg
cli
jae
clc
push
add
movsl
stc
movsl
push
jo
xor
outsl
cmp
outsl
push
pop
cli
xchg
bound
in
in
jp
jmp
xchg
test
roll
pop
outsb
ret
loopne
push
pop
scas
js
cli
push
mov
jbe
inc
mov
es
sahf
push
repz
and
pop
inc
push
push
pop
outsb
xchg
and
cmpsl
mov
into
rcrl
insb
pop
sbb
cmp
movl
mov
xor
mov
jb
je
inc
inc
into
aas
mov
xor
xchg
xchg
sub
xchg
fld
inc
inc
ret
jne
in
adc
shrl
sub
arpl
lret
inc
daa
loope
outsl
shrb
rdtsc
loopne
jg
inc
cld
mov
lods
out
dec
in
jo
cmc
mov
insl
out
mov
iret
and
sbb
sub
adc
mov
cmpsb
test
aad
cmp
adc
jl
ds
dec
cs
xor
jno
flds
mov
sbb
scas
in
jns
lock
add
cmpsb
inc
mov
xchg
aaa
rorl
mov
adc
imulb
leave
mov
mov
inc
jne
mov
and
dec
testb
fdivl
xchg
mov
dec
icebp
mov
jnp
adc
or
or
add
lret
push
push
fsubrs
sbb
rcrb
cmc
push
mov
cltd
jns
ret
push
dec
mov
jnp
cmp
xor
ret
and
sbb
push
mov
jae
mov
out
mov
mov
dec
pusha
arpl
inc
nop
sub
stos
hlt
push
test
mov
repnz
sbb
ss
mov
and
dec
pop
xor
aas
pop
dec
inc
mov
dec
push
aas
push
jg
out
mov
cmpb
mov
or
xchg
lret
mov
in
pop
scas
mov
pop
push
jmp
xor
adc
loopne
loop
push
sub
jmp
jge
in
js
daa
adc
in
sbb
in
outsl
sti
in
aaa
or
add
ficoml
sbb
pop
mov
out
jb
nop
imul
ds
pushf
leave
test
rorb
xchg
push
pusha
jp
fisttps
inc
mov
mov
repz
dec
repz
mov
mov
mov
aam
fisttpl
stos
mov
xchg
cmpsl
int3
xor
inc
adc
push
inc
enter
aas
into
aas
cmp
mov
daa
adc
xchg
add
pop
xchg
fcomi
jae
mov
frstor
pop
ds
mov
mov
test
adc
frstor
cs
cmpsb
call
mov
adcl
push
sub
add
pcmpeqb
xlat
sarl
adc
add
mov
and
rclb
push
xchg
fiaddl
xchg
adc
mov
add
loop
xor
test
lgs
jbe
imul
sub
inc
loope
mulb
or
xchg
or
mov
sub
test
xchg
call
mov
xchg
mov
xor
mov
int
push
xor
imul
pop
test
sub
adc
mov
sub
popf
inc
gs
lds
or
push
dec
jnp
sbb
ret
xchg
test
xor
pop
mov
nop
loope
insb
mov
jnp
cmp
push
adc
cmp
dec
cmpsb
xor
in
lcall
push
into
xor
mov
sbb
cmp
xchg
and
or
jne
and
les
out
or
inc
pop
adc
popa
lock
imul
jbe
xchg
mov
xchg
push
jge
push
xchg
jno
jb
push
and
fs
popl
out
mov
jmp
push
ret
dec
loopne
inc
mov
mov
or
xchg
pushf
mov
jnp
negl
imul
sub
jbe
mov
xchg
mov
sbb
jne
jmp
lods
mov
test
lret
fisubrs
into
or
imul
mov
cmp
add
push
cmpsb
cmpsb
mov
popf
jo
adc
jnp
test
cmp
fdivrl
outsb
sti
sbb
cmpsl
push
add
lds
rcr
mov
pop
cmpb
xchg
ret
inc
inc
stc
arpl
outsb
jae
xchg
aas
out
hlt
jne
lods
cltd
test
mov
stc
mov
or
adc
sti
push
jl
bound
notl
hlt
push
lea
jnp
test
sub
or
stos
mov
jl
arpl
mov
and
pusha
or
pop
mov
jb
sub
aam
add
ja
xchg
divb
insb
mov
jb
scas
lods
leave
pop
dec
fwait
mull
ja
inc
pop
cld
jno
pop
adc
cmpsl
daa
dec
orb
lock
scas
pop
push
pop
pop
cld
imulb
cltd
or
scas
ret
nop
pop
call
or
and
test
adc
stos
popf
data16
mov
insb
sub
cmpsl
xlat
cmp
cwtl
add
ljmp
mov
sub
pusha
xchg
ret
outsl
add
pop
jl
lahf
int3
or
adc
push
in
popa
clc
mov
xchg
jb
pop
adcb
dec
in
repz
sbb
cmpsb
adc
xchg
sub
jns
in
cmp
jl
roll
stc
mov
push
pushf
cmp
std
adc
cmc
adc
dec
adc
sub
or
fmul
jle
cmp
xchg
xor
test
sub
lds
pop
or
sub
push
add
rcr
outsl
out
out
dec
pusha
adc
jp
call
idiv
int3
popf
sub
lea
jg
outsb
cmovl
aaa
and
aam
loop
push
addr16
out
pop
lods
mov
dec
jno
cmp
and
in
xor
out
andb
out
dec
or
stos
mov
addb
js
fs
jge
shll
inc
or
and
xor
adc
dec
adc
pop
sbb
cld
fisubs
rorb
fistps
sahf
inc
es
mov
and
clc
push
int
lea
jl
inc
adc
xchg
dec
mov
mov
pop
imul
xchg
mov
sbb
lea
scas
out
jge
es
sub
add
sbb
adc
pop
push
nop
dec
outsb
fs
lods
shlb
enter
js
aam
dec
dec
faddl
fwait
mov
xchg
jno
shll
cmp
loop
push
leave
pop
call
ds
sub
scas
mov
pop
cld
mov
adc
push
iret
aas
dec
inc
insl
jecxz
cwtl
pop
shlb
or
xchg
ds
push
xchg
push
or
jmp
loop
dec
in
mov
and
fsubs
enter
int3
mov
test
roll
enter
mov
imul
lret
xchg
fwait
push
sub
jp
mov
adc
sub
jne
mov
pusha
mov
sub
or
mov
je
loope
pop
popa
jbe
fisubrl
outsb
leave
jno
jo
and
dec
out
adc
add
inc
lock
out
pop
jae
popf
xorb
das
push
adc
push
jmp
scas
cmpl
push
or
push
mov
into
scas
shr
xchg
xor
sub
pop
mov
mov
je
jno
fadds
mov
push
pop
lods
mov
popf
xchg
mov
sub
jno
cmc
pusha
jo
xchg
call
jle
rol
loop
add
push
testl
inc
sbb
sbb
and
test
ljmp
or
dec
adc
andl
add
sbb
ss
out
pop
jmp
adc
xchg
cmp
jp
mov
xchg
xchg
xlat
add
push
enter
aam
add
sub
mov
cmpl
in
and
mov
mov
stc
and
daa
aam
fidivs
pop
jle
xor
mov
ljmp
lret
jecxz
mov
mull
sbb
fildll
mov
push
or
out
stos
push
push
ljmp
cmpsb
das
js
push
mov
cs
xor
scas
popf
lret
push
je
dec
xor
adc
orl
adc
cmp
jle
jns
cmp
jno
ret
cmp
xchg
sahf
dec
xchg
outsb
adc
cmp
cmp
add
orl
mov
pop
lcall
loop
int
or
mov
inc
xor
mov
fld
ror
dec
mov
cmc
orl
sub
loopne
leave
mov
cmp
loope
into
mov
pop
leave
fmull
push
clc
addl
xchg
in
mov
lcall
push
inc
adc
lahf
in
pop
adc
push
popf
xor
out
sbb
or
jb
int
fsubrl
imul
aaa
dec
cmp
insb
scas
dec
xor
inc
fnstenv
adc
and
shll
push
pop
movsl
mov
out
sbb
call
adc
popa
sub
push
push
lods
pop
and
testb
rcrb
sub
inc
inc
pop
jne
xchg
arpl
jne
fnstenv
xchg
add
xchg
lds
add
lcall
cs
mov
flds
xchg
addr16
push
xor
mov
sbb
into
xor
outsl
inc
add
in
push
pop
cld
push
sub
scas
ss
add
out
fidivrs
and
roll
cwtl
aad
fidivs
dec
shlb
pop
shrb
jb
dec
stos
sti
mov
out
mov
sbb
ret
bound
add
aam
cmpsb
mov
arpl
insb
sbb
pop
lcall
push
loope
aam
push
mov
jecxz
xor
loope
add
loopne
pop
pop
sti
movsb
or
ds
adc
mov
and
push
mov
add
mov
mov
lea
mov
add
and
cmc
or
roll
sbb
test
sub
loopne
imul
fwait
stos
popa
mov
mov
pushf
dec
adc
mov
lret
dec
lahf
cmp
es
jecxz
lahf
push
test
add
stos
add
es
xor
sbb
dec
loop
mov
mov
das
dec
ljmp
push
hlt
out
dec
mov
movl
mov
fstpt
pop
fwait
cmc
jae
add
add
jo
lcall
cmp
jne
mov
mov
scas
pop
and
cmpsl
xor
adc
ret
cs
jno
push
add
jle
std
sbb
mov
push
and
push
adc
dec
icebp
sti
dec
push
xchg
pop
mov
dec
push
aam
mov
mov
jb
push
call
add
loopne
add
dec
lea
test
add
stc
dec
xor
test
imul
push
in
pusha
jmp
adc
sbb
bound
dec
or
jmp
adc
movsl
push
push
int3
lds
sbb
in
fs
push
xor
push
fadds
ljmp
les
ja
insl
adc
arpl
addb
fwait
jmp
xor
in
mov
cmp
jge
ficompl
adc
leave
and
xchg
dec
mov
testl
das
dec
dec
and
pop
pop
les
jp
stc
mov
jecxz
inc
fstpt
stc
add
lods
cmp
int
adc
out
fstl
rcrl
or
push
pop
xor
into
jno
aas
jnp
clc
xor
shll
push
lea
in
mov
sub
and
shll
adc
movsb
mov
sbb
inc
mov
dec
jb
add
dec
aam
dec
lea
dec
repnz
and
out
inc
jnp
mov
xchg
push
sub
cmpsb
aam
pop
cs
add
scas
add
test
pop
add
sub
cld
repz
and
add
in
mov
test
inc
cltd
fcomi
into
sarb
bound
cmp
xchg
lds
sti
or
ja
adc
xor
jle
xchg
jmp
mov
mov
xchg
jb
cli
push
xchg
dec
pop
pop
fxam
and
scas
sbb
sbb
das
jnp
stos
adc
js
sub
push
cmc
ret
jge
jae
push
stc
add
mov
stos
xor
jle
xchg
sub
fbstp
dec
and
jmp
xor
cmc
cwtl
insl
in
sbb
loop
push
loop
mov
je
xchg
push
cld
cli
mov
sub
mov
ja
std
jb
sti
pop
shr
out
push
xchg
in
lahf
push
mov
ret
adc
repnz
jb
mov
xchg
xor
xor
sub
mov
gs
ljmp
mov
insl
out
iret
fbstp
test
in
jle
sub
dec
push
inc
pop
shlb
or
rolb
sbb
cmp
rclb
inc
sbb
mov
aas
adc
les
sub
pusha
push
aas
mov
out
arpl
lcall
xor
sub
lock
mov
enter
add
pop
cs
add
jns
rclb
pop
ds
adc
mov
loop
shrl
pop
inc
xor
mov
sbb
daa
cmp
in
rcr
and
fs
xchg
mov
jne
inc
dec
sbb
rcrb
add
or
cmc
add
sub
inc
pop
pop
mov
inc
xor
lcall
fnstenv
out
mov
das
test
push
dec
push
jbe
dec
add
adc
or
cmp
and
xlat
xchg
insb
jmp
mov
pop
lea
xchg
sbb
loop
fld
jnp
pop
adc
mov
sbb
jle
daa
lcall
adc
sub
push
push
add
inc
or
inc
push
shrb
push
mov
pop
push
mov
add
xchg
lock
mov
fbstp
jnp
sub
icebp
les
cli
test
mov
shrl
cld
jp
or
xor
in
pop
ja
ficoms
adcl
adc
or
sbb
push
add
or
loope
and
push
aad
inc
push
and
nop
icebp
arpl
sbb
push
out
adc
das
xlat
cmp
adc
test
stc
or
jns
test
cmc
lahf
dec
pusha
xchg
inc
dec
jl
pop
dec
andl
jne
out
test
les
aas
or
outsb
jle
mov
dec
xchg
test
in
xorb
das
dec
add
dec
push
and
dec
ficoml
and
jg
hlt
repz
mov
jmp
sub
mov
outsb
jmp
lret
xor
jge
inc
and
into
cmp
test
sbb
ret
scas
popl
push
dec
clc
sbb
cli
inc
mov
loopne
out
sub
pop
arpl
lods
ret
xor
lock
inc
jge
inc
pop
pop
sbb
mov
xlat
movsl
xor
outsl
popl
popa
mov
and
inc
test
cmp
push
cwtl
sbb
dec
jmp
fistps
sub
add
pop
inc
addr16
dec
pop
lods
mov
jg
repz
push
xchg
jnp
and
dec
ficomps
lcall
inc
adc
stc
mov
shlb
pop
pop
sub
inc
pusha
lods
pop
sub
or
mov
leave
inc
mulb
arpl
mov
cmpsl
call
push
je
mov
sbb
push
mov
jg
int
cs
cmp
rcl
std
int
mov
jo,pt
add
mov
or
pop
inc
outsb
inc
popf
inc
sbb
inc
sub
int
mulb
mov
jns
mov
ds
mov
movsb
add
mov
popf
loop
mov
call
jge
adcb
mov
clc
outsb
xchg
push
pop
gs
int3
push
adc
jo
aad
lock
test
shl
and
xor
lods
mov
cmpsl
fwait
xor
adc
gs
xchg
mov
mov
test
xchg
sub
sahf
lods
mov
stc
cmc
icebp
imul
jg
inc
or
int3
jne
test
test
ss
insb
test
int
sbb
pop
ds
stos
aam
outsl
addl
mov
inc
inc
mov
or
insl
sarl
stos
stos
leave
cmp
lret
pop
mov
jmp
mov
aad
and
lret
nop
jp
cmp
fcoml
arpl
imulb
pusha
das
pop
sti
outsl
lods
cmp
xor
push
call
rorb
mov
loope
enter
ss
int3
into
mov
xchg
mov
hlt
pop
test
in
popa
fsubrs
dec
xor
and
shlb
dec
ffree
and
jmp
fmuls
adc
sub
push
xchg
and
dec
ljmp
cmp
bound
mov
sbb
inc
imul
ror
jo
mov
mov
push
sahf
or
jae
sbb
push
dec
out
les
aaa
hlt
xchg
insb
lods
xchg
nop
insl
mov
lret
ss
out
dec
loopne
orl
jo
pushf
ds
clc
push
mov
mov
iret
into
jb
lcall
adc
sbb
jge
xchg
cmpl
jb
lds
leave
decb
fistpl
push
pusha
add
js
scas
sbb
cli
mov
gs
xchg
fs
xchg
or
ss
call
pop
ficoml
push
mov
fdivrs
xchg
push
mov
sub
test
dec
out
mov
adc
cmp
and
mov
pop
mov
dec
ret
push
popa
and
out
ds
mov
ret
cmp
pusha
dec
push
test
mov
pop
repnz
mov
sahf
out
jp
lods
popf
pop
inc
push
and
dec
repz
sbb
adc
std
jo
jb
jno
xor
sbb
sub
lret
push
push
jl
mov
xchg
test
xor
lcall
lcall
and
incb
inc
lahf
gs
xchg
sub
dec
xchg
fwait
push
and
xor
sbb
jb
aas
jns
dec
pop
and
rcrl
int
and
inc
dec
call
add
fwait
pop
cmp
pop
popa
insl
mov
sub
xlat
lahf
cmp
ret
sub
or
push
imul
arpl
push
int
jecxz
lds
mov
aaa
cmc
out
mov
and
mov
add
stos
cmp
jmp
mov
mov
jmp
popa
xor
sub
rolb
push
incl
lcall
setae
cmpsb
and
adc
inc
mov
pop
and
icebp
jmp
pop
or
dec
rcrb
dec
xchg
push
pop
inc
add
add
mov
sbb
push
jae
xchg
jl
inc
daa
inc
cld
adc
pop
or
inc
jo
sub
outsl
dec
scas
cmp
or
inc
lret
jmp
cli
dec
andb
out
int3
dec
aad
lcall
mov
into
inc
aad
inc
xor
rcrl
rcll
insb
push
mov
int
lret
push
xchg
xor
loope
negl
icebp
fldl
in
inc
out
fcoml
sub
ja
pop
mov
add
jmp
pop
rcll
rcrb
xchg
lret
mov
cmp
xorb
mov
lret
pop
cmp
and
mov
and
or
lods
push
fldt
and
test
push
insb
inc
shrl
nop
inc
testb
in
stos
mov
cs
push
addr16
cmpsl
push
sahf
lret
or
add
mov
cmp
push
xchg
mov
iret
jge
pop
cmpsb
cmp
mov
mov
mov
pop
jmp
xchg
xor
in
mov
mov
inc
jmp
xchg
push
jae
popf
mov
es
cmc
cs
xor
adc
mov
call
push
arpl
push
or
xor
push
jns
in
lret
xchg
jne
adc
adc
jns
sub
sbb
testb
wbinvd
cmpsl
insb
fisubrs
inc
outsb
pushf
in
adc
lods
pop
inc
fsubr
pop
dec
lahf
es
add
adcl
xchg
imul
outsl
ds
ja
or
lds
lret
in
mov
mov
push
shrb
lock
and
xchg
or
push
ret
out
sbb
add
in
xor
cmp
sbb
inc
es
lods
bound
orl
jle
popf
push
inc
add
adc
adcb
and
test
arpl
mov
add
dec
pop
ficomps
ret
or
cmpsb
cmc
mov
mov
cld
add
insl
jb
out
nop
arpl
ljmp
dec
inc
mov
mov
sub
out
jmp
and
sbb
shrl
addr16
aaa
cmpl
adc
fcmovnb
sbb
icebp
popl
cmp
mov
test
popf
sti
or
jge
mov
pop
mov
or
rorl
fwait
pop
and
pop
lods
adcl
aam
mov
pushf
dec
dec
push
xor
stc
push
jmp
push
fisubl
jb
sub
xorb
imul
mov
jp
out
mov
inc
gs
xor
push
xchg
jbe
push
push
scas
pop
ja
sub
xchg
js
push
ret
push
inc
fdivs
aad
mov
mov
xor
popa
shlb
addb
inc
push
pop
and
mov
push
xchg
ret
lods
fsubp
sub
leave
push
pusha
bound
pop
xor
xchg
scas
and
push
lcall
lahf
ret
fsubl
mov
dec
mov
shll
int3
cltd
nop
xchg
or
jo
jae
cmc
and
mov
scas
loop
test
jl
xor
je
mov
pop
pop
fdiv
inc
stos
subb
daa
mov
jno
mov
xchg
int
jo
xor
sbb
stos
btr
cwtl
jl
fildll
mov
and
fs
leave
inc
scas
ret
hlt
cmp
pusha
xchg
sarl
jle
sub
out
loope
shrl
lahf
cmp
fbstp
dec
push
mov
dec
push
jecxz
dec
push
dec
and
pop
out
mov
repz
mov
sbb
cmp
jmp
push
dec
xchg
clc
imul
popf
pop
loopne
push
cli
ljmp
and
inc
lahf
mov
loope
jne
inc
sub
cmpsb
adc
sub
dec
jbe
cmpsb
xchg
cli
mov
adc
inc
sti
nop
lds
adc
mov
fwait
push
jmp
adc
fs
fildl
lcall
movsb
lret
xchg
imul
and
loop
sub
arpl
scas
adc
loopne
push
arpl
jp
outsb
ret
push
iret
adc
mov
popa
cmp
jae
sub
mov
rcrb
xlat
outsl
cli
cmp
jmp
mov
xlat
js
imul
test
sub
cmovs
or
test
dec
cltd
fisubl
mov
imul
push
xor
insb
inc
push
fs
xchg
aad
mov
or
xchg
fwait
fwait
rol
inc
add
enter
rorl
mov
movsl
int
sbb
into
ss
cld
add
mov
mov
fbstp
decl
mov
icebp
mov
sbb
ja
xlat
cltd
outsb
ljmp
jp
je
dec
sub
sub
hlt
cmp
pop
and
mov
and
and
pop
mov
mov
cmp
adc
cwtl
lcall
in
and
mov
outsb
or
into
gs
sbb
in
sub
rcr
scas
jge
fisubrs
insb
jae
stos
dec
pop
loope
adcb
jne
fidivrs
sbb
js
jns
fnstsw
aas
test
push
testb
ss
or
mov
cmc
add
lret
jnp
mov
add
jl
shrb
push
mov
xor
int
dec
stos
in
pusha
inc
adc
cmpb
cmp
cmpsl
shll
pop
shlb
ficoml
fwait
repz
mov
mov
mov
sbb
inc
inc
mov
mov
es
sbb
icebp
lods
mov
sbb
push
push
iret
enter
shll
add
inc
jl
cmpsb
and
ficomps
stc
push
lock
pop
into
pop
into
xor
int3
dec
mov
fwait
pop
pop
cwtl
leave
sub
adcb
pop
dec
sahf
push
xlat
inc
std
push
fnstsw
arpl
cmp
andl
inc
enter
pop
mov
pop
loope
call
stos
fists
loope
outsb
pop
das
test
dec
loopne
jl
insb
out
and
fcmovne
outsl
cmp
popf
pop
or
sbb
dec
in
stos
scas
jb
mov
mov
js
cmp
xchg
mov
adc
cmp
cld
cs
sbb
mov
push
xchg
dec
test
cmp
cmp
icebp
addl
jne
xor
outsl
sar
ds
xor
push
cld
dec
ljmp
adc
add
aas
mov
loope
xchg
pusha
add
jle
mov
or
int
div
xchg
aad
rol
sti
push
bndstx
mov
out
add
je
sub
xchg
sub
roll
and
mov
xchg
sarb
cwtl
adc
test
push
aam
sbb
ja
scas
lahf
inc
mov
dec
pop
dec
adc
add
mov
mov
push
mov
mov
sub
test
and
mov
stos
aam
fisubl
lods
bnd
fstl
rcll
inc
mov
stc
test
and
push
and
icebp
cmp
inc
movsl
pop
xchg
or
xor
sbb
and
ret
call
xchg
pop
jne
outsl
lock
push
icebp
inc
test
aad
je
inc
negb
and
fnsave
jne
loopne
test
cmp
imul
mov
add
or
aam
cmp
inc
mov
or
dec
out
cmpsb
shl
jne
lods
dec
addr16
mov
jmp
fstl
push
test
mov
sbb
out
out
push
lods
cmp
lock
adc
sahf
insb
or
push
dec
nop
shlb
pop
cmpsb
repz
xchg
xorl
cmpsl
shrl
sub
xchg
cltd
dec
jmp
mov
mov
mov
lods
div
mov
mov
push
adc
pushf
pop
sahf
pop
sti
push
mov
jbe
rol
ret
adc
push
mov
imul
lea
aad
mov
test
pop
push
ss
into
sbb
sub
pop
lock
cld
daa
fdivrs
aas
jno
movsb
movsb
pushf
shll
leave
out
enter
adc
mov
mov
imul
push
jae
and
dec
lcall
xchg
sbb
push
ja
or
cmc
push
pushf
sahf
ss
sbb
shll
test
pushf
mov
imul
pop
adc
adc
mov
daa
dec
inc
lahf
sbbb
mov
test
adc
push
mov
inc
ret
jbe
cmc
mov
push
pop
sbb
cltd
add
push
je
lret
mov
pop
add
jno
xor
push
sub
lods
pusha
outsl
xchg
das
fidivrl
fdivrp
in
js
jecxz
bound
xor
xchg
add
in
into
inc
dec
cmp
popf
jbe
shlb
mov
data16
mov
lds
push
std
inc
ja
add
pop
xchg
out
xor
inc
cwtl
xchg
jbe
sub
pop
inc
adc
xchg
add
cmovg
inc
cmc
mov
es
iret
adc
ret
push
xor
jns
cltd
sbb
adc
sbb
scas
lret
push
mov
mov
push
sbb
notl
or
jle
rcl
jge
xchg
xchg
mulb
clc
in
scas
sub
fwait
jb
int
mov
loopne
sbb
shrl
pop
leave
sub
push
sbb
push
add
lock
fs
sub
sbb
sub
outsb
add
cmp
scas
push
jnp
stc
or
mov
push
or
push
stos
xor
pop
aam
jbe
or
xchg
fs
stos
rclb
mov
pop
and
xor
pop
xor
jo
push
xor
mov
iret
lea
aam
cltd
repnz
adc
cs
jbe
aas
std
out
arpl
add
pop
push
out
rorb
ja
add
pushf
daa
push
mov
adc
mov
call
test
jns
popf
aas
and
pushf
or
in
jne
rorl
or
mov
mov
mov
loop
fistps
cmc
popa
push
movsb
js
stos
out
jp
jnp
pusha
inc
xor
jbe
enter
pop
mov
cli
xchg
jle
push
add
sub
ret
dec
loop
stc
movsl
push
scas
insl
sahf
dec
push
jge
out
into
mov
hlt
dec
jns
cli
das
and
and
add
cli
jnp
testb
lea
jnp
icebp
movsl
mov
jge
mov
mov
sub
call
mov
xchg
push
cmp
lea
sub
aam
mov
mov
aaa
loopne
int3
sub
xlat
push
in
jecxz
pop
adc
inc
and
cmpsb
fdivl
jle
imul
mov
mov
int3
lods
leave
ljmp
xchg
and
sbb
jp
adc
add
jns
out
xor
mov
add
mov
mov
adc
cmp
insb
cmp
aas
jae
bound
mov
decl
jp
rcrl
xchg
into
xor
cmp
xlat
and
fcmovu
aas
int3
sub
cmp
mov
sub
out
ror
sbb
inc
jge
into
adc
arpl
push
enter
lods
mov
jge
dec
movsb
insb
push
lods
adc
sub
repz
hlt
mov
xchg
sub
dec
lcall
das
adc
adc
jl
jg
mov
mov
xlat
and
popa
add
xor
push
out
jl
cmp
jmp
fsubl
in
dec
insl
or
add
cmpsb
rol
lods
in
inc
fsubs
call
in
stos
pop
add
jnp
mov
or
mov
mov
inc
dec
std
and
testl
pop
sub
mov
fildl
sub
movsl
jecxz
push
leave
push
insl
data16
clc
adc
mov
cmc
test
rcrl
inc
jmp
mov
cmp
jne
test
push
cli
mov
jnp
add
stc
repz
fs
imul
insl
lret
loope
add
mov
stos
jp
and
sub
and
stos
les
je
ljmp
jbe
mov
mov
int3
and
mov
mov
xchg
fmul
mov
aaa
sbb
push
popf
cmpb
out
aad
push
lret
jnp
in
jg
jmp
pop
dec
add
sbb
fiaddl
mov
inc
mov
std
pop
inc
cmpsb
jo
sub
pop
ds
out
push
imulb
push
cmpsb
sbb
daa
es
push
out
fdivrs
mov
fisttpll
iret
fdivs
test
inc
movsl
into
pushf
mov
aam
enter
mov
bound
mov
ret
cmp
push
ja
nop
sbb
xor
mov
pop
jb
lods
inc
insl
subl
das
test
out
cwtl
orl
jb
jg
in
nop
inc
jae
repnz
out
push
rcl
rcll
inc
pop
ret
fstl
clc
scas
idivb
insl
repz
mov
mov
pop
int3
push
lods
xorb
adc
leave
fists
repnz
pop
inc
push
and
sub
cmp
mov
iret
jno
adc
lcall
sbb
enter
sbb
aaa
ja
popa
mov
movsb
add
cli
mov
movsb
jmp
jecxz
dec
mov
aam
fcoml
inc
push
jne
adcb
sbb
js
es
cmp
insl
add
das
pop
mov
push
cmp
adc
mov
ror
xor
movsl
aaa
cmc
aas
pop
out
int
add
lods
push
dec
lods
aas
into
sub
stc
iret
and
mov
xchg
and
out
ret
test
pop
scas
lock
cs
stos
lock
ja
ss
mov
lea
pop
enter
out
and
into
dec
dec
sub
jg
mov
rcll
out
xchg
jnp
xor
jb
xor
nop
jae
ret
sub
aaa
adc
inc
mov
aaa
mov
fldenv
dec
test
cmp
lret
add
mov
adc
mov
cmpsb
cld
push
fdivrl
ja
xchg
mov
xchg
adc
push
cmp
dec
jnp
add
int
push
dec
xchg
push
jb
sub
shrl
jecxz
xchg
sbb
inc
ror
mov
inc
mov
lods
mov
dec
jne
fistpl
ret
and
stos
rol
inc
into
sub
push
cmp
fdivrs
popf
jae
ljmp
add
push
cli
jp
sub
cmpsb
and
in
dec
lea
xor
and
mov
xchg
pop
sub
push
adc
xor
cmpsb
mov
and
jb
adc
xchg
jecxz
jo
stos
jae
add
imul
inc
jnp
adc
cmpsb
sub
jge
cmp
xchg
inc
repnz
out
lret
mov
outsl
hlt
mov
popf
pop
xchg
mov
lret
mov
mov
insb
sbb
out
lock
cltd
mov
jnp
cli
and
push
push
shrl
push
movups
out
and
cmp
ja
popf
fildl
or
jecxz
into
loop
inc
scas
push
inc
mov
jo
dec
sarl
add
and
jbe
and
icebp
sub
inc
aam
sbb
lock
ljmp
es
sahf
add
ret
sahf
ja
fimull
ret
mov
vmwrite
std
jecxz
mov
xchg
shr
pop
outsb
push
test
pop
iret
es
xlat
outsb
dec
push
push
mov
jbe
and
push
pop
cmpsl
inc
lret
lods
inc
dec
lahf
push
or
push
loopne
in
push
scas
sub
mov
sbb
loopne
loope
push
jnp
push
xor
sbb
inc
call
sbb
mov
jp
pop
mov
sahf
data16
jmp
aam
outsb
or
dec
jp
sbb
test
aaa
subl
pop
fimuls
cld
clc
adc
fmull
pushf
mov
mov
and
mov
cmp
into
das
jecxz
js
test
aad
shlb
lods
loop
dec
cmc
adc
rorb
movsl
scas
mov
in
cs
sarl
int3
lret
and
dec
fmuls
xchg
mov
push
mov
fistl
in
fsubrs
in
hlt
aam
add
stos
addr16
test
and
es
push
test
jge
dec
and
cmpb
or
call
je
jne
sub
into
inc
adcl
dec
fisttpll
shrb
andnps
test
mov
lock
loop
insl
xor
jmp
inc
imul
xchg
aad
pop
insb
movsb
pusha
sub
inc
aas
sub
clc
sub
decl
sbb
popf
xorl
fs
aam
mov
or
pop
pop
outsl
faddl
jbe
stos
xchg
sbb
sub
jbe
orl
xor
xchg
push
jae
push
iret
sub
xor
clc
fisubrs
pop
jae
adc
repnz
push
in
maskmovq
notl
push
or
push
and
add
pop
mov
jg
sarb
rcrl
insl
push
movsl
jmp
ljmp
jae
or
aad
shr
jbe
sbb
roll
fistpl
inc
sub
test
ret
mov
sub
aaa
mov
call
and
inc
sub
inc
and
adc
enter
pop
bound
adc
and
sub
leave
inc
lcall
xor
lahf
add
cmp
sbb
es
mov
jl
jb
mov
adc
sbb
sub
shrb
push
sbb
leave
push
std
cwtl
add
pop
nop
jge
out
push
loop
cmp
arpl
insl
fwait
loop
sbb
mov
fsub
and
jb
jno
push
or
scas
adc
jno
loopne
test
loope
imul
mov
dec
ret
leave
add
shrb
cmpb
mov
xchg
pop
cli
test
xorl
inc
adc
icebp
mov
lock
outsl
pusha
add
or
mov
aaa
push
push
les
stos
frstor
out
or
mov
insl
push
inc
test
mov
aaa
jmp
fimuls
lahf
push
jne
cmc
dec
ficoml
repnz
mov
jge
mov
jp
mov
sub
or
out
test
cld
jnp
mov
xchg
and
adc
dec
lahf
add
push
sbb
and
stos
in
movsb
jp
cwtl
lret
lea
and
sarb
push
sbb
cmp
movsl
loop
stc
adcl
out
mov
mov
aad
gs
pop
cmp
push
mov
push
push
repnz
push
mov
mov
loope
and
icebp
dec
in
dec
dec
insw
mov
mov
jl
daa
and
add
sub
mov
cmpsl
shlb
xchg
aas
or
icebp
bound
mov
push
mov
xor
rclb
adc
pop
mov
mov
es
insl
or
cmp
cmc
pop
pusha
dec
shrl
or
and
int3
aas
repz
inc
pop
mov
lahf
adc
jl
lahf
out
jg
dec
fmul
dec
mov
cmp
nop
xor
xchg
sub
loope
imul
outsb
mov
mov
loopne
inc
fidivl
mov
mov
jmp
das
test
mov
in
mov
sub
cwtl
cmp
mov
lcall
sub
push
jae
mov
push
inc
or
pop
dec
mov
cwtl
jge
xor
sub
add
stc
js
pop
icebp
push
orl
cmp
out
sbb
push
imul
and
aaa
xchg
stc
xchg
mov
xor
aas
or
mov
int
ret
test
daa
adc
fwait
rol
fsubr
fiadds
or
lahf
nop
add
mov
pop
lcall
pop
adc
popa
jmp
cltd
xor
sti
ret
repz
sub
fidivl
popa
inc
imul
xor
mov
fsubrl
pop
test
mov
cmp
insl
push
push
out
aas
sub
cwtl
xor
mov
subl
daa
jae
mov
xor
or
int
dec
jae
std
xchg
push
pop
jno
ret
mov
sarl
push
sbbb
das
rorb
push
adc
into
and
je
mov
popa
iret
imul
ds
fildll
jmp
push
cmp
xlat
ffreep
mov
fisubs
aaa
mov
jg
cmp
jo
incb
popa
jo
jp
and
inc
out
lods
jg
loope
daa
xchg
mov
pusha
dec
lods
sub
lds
fcmovu
mov
je
add
dec
mov
nop
xchg
sub
icebp
push
mov
adc
popa
jmp
mov
adcl
scas
mov
inc
jne
ret
add
mov
mov
sti
inc
test
fimuls
loop
or
xchg
jo
stc
or
roll
sti
push
mov
push
ret
das
cmp
inc
lcall
aas
or
fists
shlb
and
inc
and
xor
and
push
fcomi
roll
or
rorl
or
stc
push
adc
inc
xchg
sbb
shll
cmp
out
addr16
mov
pusha
cmp
pop
ficoms
inc
pop
lea
sub
cmpsl
add
xchg
pxor
std
insl
aad
jl
popf
scas
jge
stc
pop
push
mov
mov
fs
mov
fwait
inc
xor
cld
xchg
xorb
mov
mov
xor
mov
jmp
movsb
cs
ds
repnz
mov
push
pop
dec
inc
std
in
daa
mov
fistl
test
xor
push
or
inc
push
xor
imul
and
sub
scas
imul
mov
push
mov
out
and
mov
sbb
movsb
sub
push
call
cmpsl
dec
ror
or
xor
sbb
outsb
pop
fwait
popa
adc
dec
dec
push
popa
push
cmp
movsb
ret
push
adc
in
in
mov
jns
xor
mov
scas
ljmp
fwait
in
push
xchg
mov
add
and
cld
out
enter
rclb
push
lock
xchg
sbb
pop
cmp
lods
jp
lcall
jg
rolb
and
movsl
xchg
add
and
mov
int3
in
sti
jle
adc
testl
push
fimull
push
sub
add
mov
mov
mov
jnp
mov
jo
xor
popl
outsb
cmc
pop
dec
xchg
add
cld
loopne
lea
xchg
and
push
nop
and
mov
je
sub
mov
add
mov
xchg
or
roll
cmp
adc
sti
out
and
sbb
cmp
fnstenv
pop
mov
jl
sar
ret
mov
outsw
push
push
cli
lret
fimull
sub
shl
cld
and
out
dec
popa
xchg
dec
pop
in
test
je
mov
daa
fisubl
inc
pop
push
stos
add
inc
xchg
out
and
movsb
xlat
pusha
add
stos
and
cltd
stos
imul
mov
add
dec
iret
insl
mov
les
fdiv
out
xor
addr16
add
jns
fisubs
cmp
lcall
push
clc
insb
outsl
dec
and
lods
dec
jle
and
addl
pop
mov
inc
jle
repnz
jno
imul
jno
xchg
cmc
pop
cmp
divl
and
loope
subl
add
rcr
js
cltd
mov
jno
and
pop
sahf
mov
add
mov
cmp
jbe
xlat
pop
xor
adc
lea
jnp
push
mov
xchg
mov
jo
popf
insb
in
pop
and
mov
addr16
sub
lahf
out
xchg
mov
std
fwait
popf
pushw
mov
mov
inc
xchg
inc
daa
xor
xchg
stc
std
add
vpsubsb
iret
mov
and
in
movsl
fistpl
enter
iret
test
dec
js
mov
icebp
xchg
in
pop
xchg
sti
and
jecxz
loop
sbb
scas
inc
xlat
jnp
inc
std
xchg
mov
popa
xor
jecxz
repz
popf
in
cs
mov
sub
push
fdivrs
arpl
cmp
add
ss
popf
sbb
out
mov
loopne
leave
pop
add
testb
jle
iret
mov
popa
xchg
stos
inc
popa
push
xchg
xor
jg
jb
outsl
or
lods
adc
in
inc
mov
aaa
cmp
cmpsb
mov
iret
std
xor
jmp
pop
repz
cld
sub
xchg
mov
in
cmp
iret
jle
loope
mov
mov
rcrl
jno
adc
mov
mov
jmp
inc
mov
pusha
stos
xchg
jmp
ds
pop
mov
or
fdivs
push
mov
mov
and
hlt
inc
gs
push
in
cs
inc
pop
push
mov
scas
inc
add
fisubl
loop
pop
pop
imul
xchg
inc
into
cmp
mov
or
push
mov
push
dec
aaa
push
or
and
shlb
test
ret
rep
ret
dec
fldl
mov
push
cmp
lahf
sub
xchg
rcrb
gs
insl
mov
addr16
ret
je
lea
js
popf
out
push
xor
adcl
mov
mov
mov
jge
pop
je
scas
fs
outsl
daa
push
into
jmp
xchg
enter
xchg
xor
mov
cmp
repz
fisubl
imul
lahf
push
sbb
xorb
mov
shrb
inc
push
inc
imul
sub
cwtl
andb
test
cli
and
testl
lods
lds
jns
or
xor
dec
cmpsl
gs
std
push
add
stc
push
jns
push
or
popa
aad
adc
shlb
subb
dec
xchg
push
pop
fstpt
adcl
add
psllw
jne
push
sub
gs
push
push
mov
aaa
sbbl
mov
mov
sub
adc
adc
xchg
inc
cli
sub
dec
loop
or
into
pop
mov
je
inc
mov
lds
xor
in
sbb
lahf
mov
lret
movsl
xchg
mov
xchg
inc
outsl
cltd
adc
mov
in
mov
jbe
xchg
pusha
jmp
xor
pop
movsl
gs
lock
or
ret
dec
dec
and
aad
jmp
mov
inc
dec
jg
out
pop
push
mull
popa
mov
test
jne
test
data16
jns
rcll
adc
imul
clc
adc
sub
std
mov
mov
fwait
xor
inc
xor
and
lock
cmc
test
push
cmp
or
sbb
pop
ret
add
xchg
in
enter
stos
fiadds
lock
pop
repz
and
cld
inc
xchg
stc
sahf
add
jp
fsubl
cmp
add
jo
sbbb
push
aam
in
sub
and
ds
xchg
shrl
mov
test
dec
adc
ds
mov
mov
ret
jge
std
mov
and
adcl
test
out
fldcw
adc
mov
das
loop
jg
stos
mov
inc
scas
dec
popf
cmp
jp
pusha
bound
ret
cmp
out
hlt
push
sbb
movsb
push
cmp
or
sahf
mov
scas
mov
outsl
xor
sbb
int
fcoms
jp
into
or
pop
lods
and
push
jns
xchg
jbe
pop
sub
pop
dec
pop
and
pop
sub
adc
push
pushf
mov
ficoms
stc
xlat
std
stos
mov
adc
fcmovnbe
pusha
mov
jmp
mov
out
cmc
inc
cli
inc
stc
adc
aad
aaa
jo
mov
pushfw
scas
mov
sub
jmp
dec
inc
xchg
mov
jo
xchg
test
xor
dec
pop
push
repz
push
daa
pop
sar
sbb
mov
mov
push
es
push
mov
push
test
into
popa
dec
fisttpl
bnd
and
popa
or
lock
roll
cltd
lods
mov
cwtl
fnstsw
out
psllw
shrl
or
sbb
fldenv
fwait
scas
jl
mov
push
and
xchg
mov
xor
es
mov
adc
adc
fimull
and
push
clc
or
rol
and
stos
sub
inc
fldenv
jae
xor
mov
clc
out
xor
jle
call
fnstcw
adc
insl
nop
cmc
push
test
imul
shlb
outsb
mov
js
add
mov
jmp
popf
adc
outsb
xlat
aaa
out
xor
mov
cmp
lods
mov
jne
punpcklwd
aas
mov
push
cli
out
pop
push
push
xorb
mov
add
jmp
push
mov
mov
fs
add
sbb
aaa
aad
les
fsubrs
mov
mov
loop
bound
outsb
push
iret
pusha
subb
pop
imul
movsl
jle
or
aad
cli
pop
cmp
dec
aas
imull
jecxz
sub
mov
adc
mov
ret
clc
inc
in
mov
loopne
shll
pop
lds
jp
clc
and
cli
call
addr16
loop
push
stc
cmpsl
jb
sbb
jmp
xchg
aas
loope
sbb
pop
inc
jecxz
xchg
jno
data16
cwtl
sub
add
jbe
aam
lahf
cmp
jmp
cltd
jg
dec
push
pusha
pop
jl
or
jp
xor
movsb
lret
pop
fwait
or
inc
add
stos
lds
xchg
dec
lahf
arpl
fwait
lret
movsl
cld
pushf
lods
lods
ss
mov
mov
loope
push
movsb
repz
mov
mov
mov
rcrb
or
fstl
push
sti
subl
xorl
lret
faddp
stos
mov
inc
push
adc
fdivl
jge
cmpl
xchg
inc
das
les
jbe
mov
and
lods
andb
cmp
jae
sbb
sbb
icebp
outsb
sahf
je
inc
int3
sub
test
sub
popa
frstor
test
push
dec
adcb
pop
dec
pushf
cli
and
inc
pusha
jae
clc
mov
fmull
in
loop
inc
dec
movsb
mov
mov
fstps
inc
sbb
pop
xchg
iret
repnz
adc
fs
and
addl
sti
ret
aam
push
addr16
bound
mov
jle
mov
mov
adc
lret
sub
dec
mov
in
jge
push
shrb
xor
sbb
sub
rcrb
ss
sarb
cs
rorl
aas
clc
adcb
mov
jp
stos
sbb
cmp
mov
idivl
and
repnz
out
xlat
dec
and
adcl
mov
add
pop
xchg
scas
pop
push
scas
pushf
cmpsl
mov
rcll
fcomps
pop
into
test
mov
lahf
stc
lods
sub
icebp
mov
aad
lds
popf
rcrb
xchg
ss
push
addb
adc
aad
int3
stos
stos
je
sbb
dec
or
rcrb
mov
lahf
or
sub
dec
adc
mov
mov
adc
daa
sbb
fidivs
adc
jnp
jnp
push
hlt
xor
aad
xchg
jae
scas
pop
xchg
outsl
sbb
cmp
xchg
pop
enter
cwtl
ljmp
cld
pop
xor
clc
cs
mov
xlat
adc
and
push
ljmp
mov
add
dec
push
out
dec
leave
jbe
adc
jae
pop
aad
fmuls
idivl
dec
int
mov
jg
ss
jo
add
or
stos
fcmovnu
dec
into
sarb
aad
ljmp
xor
in
out
lret
dec
jg
arpl
fmull
mov
imul
and
std
loope
xorb
sti
mov
nop
dec
sbb
idivl
mov
fdivs
scas
pop
nop
xor
call
nop
inc
or
data16
data16
dec
inc
sahf
int3
ds
sahf
and
imul
xor
fisubrl
pop
mov
inc
lods
dec
mov
inc
aam
jg
fcmovne
call
ds
popa
lds
sbb
and
inc
xchg
negl
js
pop
insb
nop
jecxz
mov
jno
push
xchg
jmp
pop
in
cld
sub
nop
xchg
add
add
mull
addr16
sub
test
sbb
adc
mov
call
mov
mov
leave
sub
xlat
mov
data16
mov
adc
xlat
jmp
jmp
dec
mov
xchg
jecxz
pop
fdivl
sahf
out
cmpsb
std
sahf
sub
lahf
pop
pop
and
and
out
or
xor
idivl
and
jmp
cmpl
mov
int3
popf
jg
jmp
out
jecxz
cmc
sbb
out
jl
adc
and
jmp
mov
inc
movsb
lds
pop
cmp
test
mov
mov
stos
ss
pop
jae
out
add
jmp
lods
add
bound
adc
pop
lods
mov
mov
adc
xor
movsb
pop
test
jne
jl
pop
stos
iret
addr16
pop
dec
movsl
cmp
mov
imul
sub
imul
cmp
rorl
packsswb
fists
enter
sti
bound
pop
insl
and
int
xor
into
fisubl
aam
out
push
popf
push
adc
cld
jo
xlat
or
xlat
lret
icebp
ja
and
sub
test
pop
dec
mov
sbb
sbb
dec
xlat
lret
cmp
mov
insb
adc
stos
imul
std
dec
in
sar
push
call
lock
mov
jb
inc
push
orb
ss
mov
sub
sbb
push
adc
jae
dec
push
or
scas
jne
mov
xchg
pop
ficomps
mov
stos
shr
adc
inc
and
pop
fwait
imul
popf
inc
imul
xchg
sub
mov
xor
push
mov
addr16
inc
sbb
js
arpl
int3
ficompl
sub
fimuls
fcompl
push
mov
in
mov
fldt
add
movsb
enter
push
fwait
cld
inc
cwtl
movsb
mov
in
loope
and
sub
and
or
and
leave
lcall
ss
push
lods
stos
adc
fldl
jne
lahf
add
loopne
adc
popf
mov
pop
clc
testb
mov
int3
xchg
push
ret
into
lahf
xchg
sbb
sub
in
loop
adc
adc
push
stos
pop
mov
or
outsl
jb
and
fildll
mov
test
and
adc
jb
out
xchg
inc
addb
hlt
pop
rorb
ds
nop
xor
mov
cmp
mov
icebp
mov
xor
push
es
push
sbb
mov
pop
or
push
repnz
xchg
jecxz
mov
and
insb
sbb
lds
stos
xlat
leave
add
loopne
pop
or
push
pop
jbe
ret
and
xor
push
in
sub
add
sub
xchg
pop
cli
repnz
in
dec
push
shl
std
cmp
sarb
fstl
shlb
mov
mov
lcall
lret
test
lods
inc
shll
push
jb
xor
ljmp
push
shrb
sub
pop
xor
cmpsb
sti
out
inc
rcrl
add
mov
shlb
mov
jmp
cmpl
push
xor
xchg
dec
sub
push
jbe
jl
and
js
iret
mov
leave
cmpsl
jge
in
mov
jmp
out
dec
mov
lds
andl
cld
outsl
sub
and
mov
jo
add
sub
xor
ret
or
into
ret
pop
pushf
cmp
push
stos
xchg
imul
inc
pop
fmuls
xor
mov
inc
or
add
call
sub
mov
lods
xchg
aas
push
out
xlat
push
jg
cmc
js
clc
sbb
push
jl
mov
scas
xor
xchg
ja
mov
in
jmp
inc
rcl
test
outsl
or
add
data16
out
aaa
xor
aas
sti
scas
cld
fcomp
out
data16
dec
je
aad
jp
dec
add
push
mov
fucomp
test
repz
mov
pop
loope
or
gs
fsubrl
iret
pop
pusha
icebp
punpckhbw
ljmp
sub
jbe
movsl
mov
push
jns
sub
cwtl
xchg
cltd
add
jge
dec
jno
mov
dec
xchg
stos
les
sbbl
nop
loope
clc
mov
sahf
mov
movsb
add
push
gs
out
shlb
les
int3
or
lods
add
fld
out
xor
iret
ret
cwtl
and
dec
gs
les
sti
sbb
sbb
adc
mov
int3
aad
dec
fucom
xor
adc
call
ja
xor
cmpsl
sbb
dec
adcb
xor
gs
ds
test
sbb
sub
out
pop
les
cmp
das
nop
inc
test
int
jnp
or
adc
loopne
clc
jne
fdivrp
push
inc
scas
jmp
xchg
xchg
shr
bound
repz
movsb
cmpsb
popf
dec
cmpsl
orl
stc
lret
insl
roll
sbb
fst
mov
sub
xor
int
outsl
gs
and
push
sbb
pop
ds
stc
xor
inc
fs
inc
xchg
xchg
cmpsb
imul
rclb
jnp
pop
jnp
shrl
pop
loope
lods
imul
mov
into
aaa
popa
rorb
pop
xor
orb
shrb
sbb
pop
or
push
repnz
int3
in
pop
lret
inc
xor
cltd
or
xor
fistpl
dec
cmp
pop
dec
iret
aad
or
mov
leave
xor
mov
in
cmp
cmp
sub
inc
pop
push
xchg
jo
xor
jl
xor
mov
sbbb
xchg
clc
xor
fcomps
and
inc
adc
adcl
ljmp
mov
or
lods
inc
imul
ljmp
sahf
cwtl
leave
pop
push
imul
cmp
daa
icebp
xlat
fwait
mov
imul
add
mov
adc
scas
clc
std
lea
fxch
fucomi
push
xchg
arpl
jne
popf
push
gs
cld
repz
mov
cwtl
mov
daa
gs
pushf
outsl
inc
push
aam
dec
add
arpl
cmp
sub
inc
jne
out
add
int
push
jp
dec
aad
jne
andb
sbb
ss
push
sbb
xchg
jecxz
js
push
int3
pop
sub
out
stos
xchg
jmp
into
and
push
test
add
lcall
rclb
pushf
pop
lock
jns
addr16
pop
mov
movsl
ret
add
xchg
mov
bnd
loope
cmpsb
mov
int3
insl
shr
cwtl
sbb
adc
mov
mov
add
and
dec
inc
cmp
lret
sbb
push
std
imul
xchg
outsb
cld
orl
xchg
inc
mov
in
aas
scas
mov
out
pop
scas
xchg
mov
or
popa
frstor
repnz
mov
hlt
dec
daa
fucomip
arpl
dec
cmc
es
jo
or
cmp
fildll
lahf
out
xor
cld
mov
mov
stos
sbb
mov
mov
fisubrl
arpl
in
lods
mov
add
inc
scas
jge
jno
rorl
adc
adc
pusha
out
ret
xlat
inc
daa
and
je
cmp
jecxz
cwtl
cmpsb
pusha
xor
cmp
xor
inc
push
rcll
mov
dec
xchg
lret
cmp
sub
mov
push
cmp
cmp
xor
sahf
sbb
sub
out
aaa
or
idivl
dec
ret
rcl
icebp
sub
das
ret
aam
sbb
ss
movsl
insl
std
xchg
int
pop
mov
xor
inc
xchg
je
mov
adc
sbb
mov
xor
aam
inc
bound
faddp
mov
stos
pop
stos
mov
jp
or
lods
sub
in
mov
sysret
add
jmp
sub
jp
pop
mov
js
testl
mov
pop
inc
xchg
jg
cltd
decb
scas
loopne
lea
into
lock
xor
lock
xchg
jbe
push
ret
scas
mov
inc
sbb
mov
mov
bound
fsubl
mov
inc
pop
shl
cmp
sbb
pusha
xorb
adc
cwtl
lods
xor
xor
outsb
jle
stc
cltd
inc
jmp
aas
jne
mov
xchg
xchg
and
sbb
xor
ss
shlb
push
icebp
test
xchg
in
mov
inc
push
mov
mov
mov
popf
or
push
es
mov
sub
push
in
out
jl
cmp
rolb
inc
cli
and
and
outsl
mov
mov
inc
or
jne
adc
test
leave
mov
jno
enter
nop
scas
xchg
rclb
fldt
test
dec
pop
gs
cmp
and
add
test
out
jb
push
jne
xchg
stos
cld
push
roll
xlat
adc
xor
mov
rorl
addl
call
outsl
stc
inc
aad
jnp
fucomp
or
das
pop
dec
loopne
mov
cmp
xlat
pop
cmp
xor
imul
imul
fcomps
mov
inc
test
pop
pop
dec
jns
mov
sub
movsl
movsb
dec
arpl
mov
lahf
std
out
enter
icebp
inc
sub
xchg
pushf
aaa
add
mov
push
lods
push
and
jg
mov
or
pop
jge
inc
jmp
add
jle
stc
movsb
mov
jb
sti
jg
rcrl
mov
lcall
xchg
ret
in
scas
and
cmpsb
xchg
sbb
jbe
jmp
fstpl
xchg
pop
xchg
out
adc
add
sub
test
mov
fsubr
loop
shlb
or
inc
mov
jae
cmp
mov
push
and
mov
and
cli
mov
mov
dec
sbb
push
mov
test
jge
lret
mov
adc
adc
in
or
push
inc
cld
mov
mov
mov
mov
push
mov
xor
xor
mov
mov
ljmp
gs
or
and
lahf
arpl
or
jle
pusha
iret
jae
frstor
test
mov
sub
xchg
cmpsl
or
gs
mov
rol
cmp
sbb
dec
jmp
xchg
xchg
sbb
cmp
ljmp
pop
in
gs
jmp
adc
mov
ficompl
pop
fidivrs
insl
mov
xlat
fwait
adc
or
stos
jl
fldt
dec
cmp
test
test
mov
mov
imul
in
cmpsb
sti
xchg
ja
adc
ficomps
test
dec
lock
int3
mov
push
enter
jl
adc
and
or
pop
or
sbb
sbbl
and
inc
mul
inc
cwtl
mov
xchg
imul
pop
cli
lods
roll
scas
repnz
or
ret
sbb
and
in
pop
into
out
jno
sub
cmp
xchg
insb
je
and
push
mov
and
cmpsl
gs
mov
jae
fdivs
scas
cltd
mov
xor
xor
loopne
mov
xchg
cmp
stos
pop
and
int
xchg
out
mov
aam
fldcw
or
popf
je
inc
mov
and
mov
int
cmc
imul
int
add
lock
mov
or
mov
in
inc
cmp
push
fnstcw
sub
movsl
xchg
mov
push
negb
pop
dec
rclb
inc
fnstenv
push
iret
pop
pop
lea
sbb
aas
cmp
add
inc
inc
lds
sub
or
movsb
out
and
push
inc
popa
std
mov
mov
push
andb
xor
gs
mov
xorl
imul
jno
cmp
dec
cli
shrl
sbb
adcb
push
movsb
xchg
pusha
sub
scas
push
js
lahf
mov
and
sbb
push
fcom
cli
push
mov
lods
pop
xor
ljmp
inc
push
mov
push
mov
jns
nop
icebp
inc
sbb
fcmovnb
mov
lods
fistl
aad
lock
xchg
stos
es
mov
js
lret
push
inc
mov
mov
or
adc
or
pop
or
sub
mov
inc
insl
dec
xor
xchg
call
pusha
mov
add
lret
stos
jle
push
movsl
cld
cmp
inc
xchg
std
mov
dec
and
imul
dec
fnsave
dec
pop
sub
test
movsl
push
mov
cmpsb
lds
inc
or
loopne
cltd
inc
push
cmp
lret
rcll
add
fsubrl
push
adc
mov
jl
lahf
test
dec
push
ja
ja
mov
fisubs
push
jae
sahf
test
cmp
pushl
cmp
or
sbb
cltd
jp
mov
ja
std
mov
push
dec
in
icebp
arpl
mov
sub
adc
mov
and
cli
addl
sbb
cltd
lcall
enter
pop
push
dec
sub
jb
or
sub
mov
js
shrl
or
and
sbb
adc
je
sbbb
sub
mov
bound
pop
push
testb
jp
sub
mov
pop
in
mov
or
ja
incl
loope
and
add
mov
xchg
repnz
loope
fsubrl
js
pop
lcall
shll
sahf
mov
fwait
lret
jl
jmp
std
cmp
inc
inc
pop
inc
jl
dec
add
jecxz
scas
mov
mov
cwtl
mov
rcrl
sti
movsl
jbe
push
or
outsb
cmpsl
cltd
push
flds
cmp
jbe
insb
sub
and
jno
jge
in
lds
hlt
rolb
or
sub
insb
lret
scas
sbb
and
scas
test
cld
ficoml
push
dec
mov
mov
sbb
dec
adc
std
xchg
inc
icebp
mov
mov
mov
adc
aam
aas
lods
sbb
test
pusha
ficompl
dec
mov
mov
lret
out
add
icebp
test
push
sbb
fwait
jmp
xchg
jnp
push
dec
outsl
dec
mov
lods
add
punpckhbw
and
shll
mov
sbb
repz
or
out
rclb
inc
sub
nop
stos
ds
jb
sbb
loopne
sbb
dec
out
and
jne
or
cltd
test
sahf
test
test
sahf
adc
test
pop
jmp
rcrb
xor
fwait
push
mov
leave
adc
sub
out
add
dec
lods
fstpl
jmp
gs
xor
stos
dec
jb
xchg
pushf
mov
out
sub
cmp
loop
jae
inc
inc
pop
fs
lret
imul
shr
in
pop
mov
xchg
aaa
cld
dec
jo
inc
inc
push
jmp
add
xchg
loop
jnp
xor
cmp
mov
xor
dec
push
push
inc
inc
lret
loope
in
or
xchg
fimuls
mov
add
out
add
push
pop
xor
ljmp
mov
push
repnz
xchg
iret
imulb
aad
inc
jns
and
hlt
mov
neg
inc
push
mov
out
and
xchg
in
or
ss
xor
jg
out
sbb
jg
ljmp
rorb
lcall
push
loope
jg
sbb
inc
sarb
xlat
popa
push
pop
inc
mov
adc
sbb
int3
xchg
in
lahf
mov
sub
outsl
test
hlt
rclb
in
repnz
cmpsb
xor
mov
lret
insl
sub
testl
arpl
xor
cld
out
inc
in
lahf
stos
sahf
push
pop
outsb
rclb
or
imulb
addr16
jge
push
cmp
or
inc
xchg
sbb
fcoms
gs
xor
inc
ja
push
lcall
sub
or
inc
je
jmp
xor
jmp
in
dec
lret
xchg
sub
mov
les
jge
inc
fsubrl
xor
cmp
shlb
adc
add
shlb
pop
and
inc
hlt
mov
jge
rcll
add
sbb
shrl
ja
push
pop
das
mov
inc
loopne
add
arpl
loopne
jmp
pop
xchg
aaa
ret
or
xor
push
lahf
mov
shlb
mov
inc
mov
inc
xchg
push
push
jno
xchg
and
bnd
mov
aas
outsb
adc
push
cmpsb
push
sbb
pop
push
aad
das
adc
insl
cmovl
sahf
pop
faddl
sbb
icebp
xchg
sub
in
lds
cmp
or
test
mov
sbbl
mov
jl
push
imul
cmp
adc
setl
call
stos
push
out
ljmp
mov
sahf
jne
fsts
push
in
xor
sub
jae
xor
adc
int
jb
rcll
or
fcoml
inc
lea
mov
mov
ret
pop
cmpsb
jle
mov
mov
adc
xchg
scas
dec
mov
mov
jo
jne
push
addr16
stos
add
push
xchg
std
add
ficoms
int3
cmp
outsl
cmp
dec
aam
mov
dec
mov
and
sub
mov
lret
mov
or
lods
push
xchg
pop
out
ja
xchg
call
mov
inc
shrb
sarb
jne
xor
fidivrl
fstl
pop
dec
loopne
insl
cmp
adc
push
adc
test
jge
pop
and
push
test
je
sbb
bound
dec
pop
sahf
bnd
std
push
xchg
jmp
out
fidivrs
int
test
lcall
insb
fstl
lds
mov
fdivs
shll
sbbl
xchg
lods
lds
int3
stos
pop
loop
cmp
mov
sti
mov
fsts
cmpsl
subb
dec
daa
bound
add
pop
sbb
dec
lock
pop
sub
arpl
jle
int
fs
inc
dec
unpckhps
push
shrl
inc
xchg
inc
cmc
sbb
pop
cs
jo
or
decl
cli
out
dec
popl
dec
ljmp
xor
xchg
int
std
shlb
dec
jecxz
imul
out
fmulp
shr
adc
subl
pusha
or
in
lock
sub
xlat
and
lods
jne
jg
jecxz
gs
push
test
adc
mov
sti
xor
cmp
bound
je
mov
fcoms
shll
rcrl
xchg
orl
jecxz
stc
inc
cwtl
in
or
add
push
popa
xor
test
out
xchg
and
add
sahf
jb
sub
sub
jl
xor
ffree
pop
push
adc
push
es
mov
ss
pop
iret
out
addr16
jge
push
mov
ret
sub
jecxz
out
jg
int
iret
and
test
cmp
movsl
js
mov
jle
int
and
loop
pusha
jl,pt
in
lcall
jns
call
push
cmp
and
push
cmp
xor
out
mov
ljmp
js
dec
adc
outsb
out
test
clc
rcr
stc
xor
cmp
xchg
push
shlb
pop
dec
cmc
pop
jg
xorb
push
es
cmp
mov
adc
pop
in
pop
fnsave
mov
push
jecxz
xchg
adc
inc
mov
xor
int3
push
and
mov
into
cmp
xchg
sub
cmp
stos
cmp
js
push
cmc
add
insl
clc
push
fldenv
jecxz
loop
push
outsl
xor
add
inc
sbb
xlat
jmp
cltd
xor
sahf
mov
inc
lea
dec
mov
xor
pop
imul
test
push
sub
mov
ret
subl
mov
movsl
cmp
adc
dec
adc
jmp
mov
jge
scas
mov
inc
mov
mov
or
cmp
mov
cli
mov
adc
jle
sarl
in
popf
sub
push
xor
rcrl
jno
inc
mov
sbb
adc
sbb
aaa
xor
adc
cld
dec
cmpsl
in
add
stos
adc
mov
adc
icebp
shrb
sub
outsb
inc
and
pop
enter
jg
into
push
mov
testb
jb
inc
add
shrl
mov
adc
in
sti
mov
lds
sbb
bswap
scas
in
sub
cmp
jno
testl
popa
sub
lret
push
lock
mov
je
cmp
sbb
and
jp
imul
cmpsb
lods
repz
mov
stos
add
push
pop
fbld
mov
jle
pop
add
daa
push
rorb
jl
mov
push
into
je
arpl
pushf
mov
xor
aam
mov
arpl
and
idivb
popl
stc
sti
test
fistpll
add
or
push
rorb
lea
sbb
iret
inc
rorl
pop
xchg
add
sub
mov
add
lods
push
cmp
gs
add
push
imul
add
das
mov
jnp
mov
jo
xor
mov
pusha
lret
int3
add
sbb
out
cmp
lods
mov
pop
test
shll
mov
and
fsts
or
mov
xchg
add
sbb
mov
mov
out
jae
pop
mov
lahf
pop
push
adc
xchg
fst
or
pop
mov
push
pop
enter
xor
push
pop
mov
adc
fcoms
push
int
loopne
icebp
mov
lds
adc
push
fiaddl
xor
mov
dec
jae
loope
sbb
test
fsubp
sti
pop
int3
mov
dec
mov
lea
mov
lahf
lret
mov
push
cmp
icebp
lcall
jne
xor
xchg
ss
pop
in
ja
mov
jno
cmp
mov
aad
movsb
outsl
daa
mov
mov
mov
daa
mov
push
gs
lods
cmc
mov
int3
fsub
push
mov
dec
insl
cmp
sub
ss
pop
xchg
sub
sbb
cmc
mov
sbb
xor
inc
fildll
mov
fsubl
jecxz
jl
test
sbb
pop
jns
push
sub
cvtps2pd
fidivl
cli
les
jmp
enter
mov
mov
dec
mov
jnp
outsl
xchg
andl
les
jge
cmp
clc
dec
les
add
push
push
xor
idivl
popf
inc
adc
dec
je
jb
add
ss
ss
xor
lret
std
xchg
jb
imul
jecxz
stos
cmp
mov
sub
ljmp
xlat
iret
pop
rcrl
cmpsl
mov
fistl
notb
shll
sbb
mov
or
loopne
test
fnstsw
cmp
into
mov
icebp
adc
popf
jnp
rcrb
push
stc
inc
mov
xchg
cmpsb
leave
or
sarl
mov
inc
sub
int
push
pop
pushfw
popl
push
jb
xchg
pop
xchg
push
cli
fiadds
mov
and
je
inc
cmpsl
std
popf
arpl
lea
ljmp
loope
mov
aaa
repz
mov
pop
pusha
pusha
add
mov
ljmp
fcomps
mov
mov
fwait
adc
mov
xorl
outsl
test
jle
jle
adc
xchg
push
push
xor
inc
adc
outsl
sub
fstps
mov
int
dec
mov
mov
pop
xor
pushl
xor
pop
inc
xor
std
xchg
cmp
das
mov
inc
aam
jle
leave
movsb
dec
or
test
xor
lea
loopne
lods
aaa
jo
push
mov
pop
mov
xchg
dec
jp
mov
dec
ljmp
inc
push
xchg
fisubs
pop
sbb
xchg
addl
cltd
adc
inc
mov
xchg
mov
mov
jbe
std
and
push
mov
mov
push
xchg
push
outsb
popa
cmp
push
enter
pop
inc
out
in
test
sub
dec
movsl
sbb
and
mov
repz
push
aad
adc
mov
imul
sbb
pop
daa
stos
rcl
hlt
ljmp
push
sub
ret
cmpsl
sub
add
lock
gs
and
mov
cmp
fmuls
fstpl
mov
je
mov
pop
out
fstl
xchg
into
adc
xor
jnp
sbb
mov
in
fidivrs
xchg
movsl
pop
lods
push
jns
push
fwait
gs
mov
xor
add
sub
adc
inc
xchg
pop
cmp
mov
lcall
xor
adc
push
or
sbb
repnz
lcall
out
mov
adc
daa
mov
or
imul
jecxz
leave
add
data16
mov
in
mov
cmpl
rcrb
inc
lcall
push
jb
add
loop
pop
stos
mov
cmp
mov
xor
mov
insb
data16
add
ja
addr16
xlat
call
fnstcw
push
and
jge
adc
cmc
sub
rorb
scas
add
xor
xchg
pop
push
test
sub
jle
addr16
xchg
push
out
inc
lret
lret
xchg
dec
repz
jne
data16
arpl
repz
out
roll
or
jnp
mov
cltd
and
test
js
adc
jo
cmp
mov
mov
xchg
adc
jnp
xor
jbe
and
pop
lods
xchg
pop
movsl
pop
mov
push
fwait
inc
push
out
int
enter
xor
jno
push
sbb
xor
sub
fcomps
push
add
fs
iret
sub
out
jge
xchg
rcrb
mov
pop
mov
test
je
push
xchg
mov
xchg
dec
sub
push
cld
push
and
jp
test
or
lret
rcrl
lret
or
movsl
add
test
and
and
and
pop
out
sub
ja
in
sti
mov
jl
fnstcw
pop
std
les
lcall
addr16
in
xchg
clc
rcrb
popa
dec
dec
push
add
jo
push
xor
add
fstpt
push
js
mov
cmp
subb
jb
jno
push
jp
lds
mov
ror
cmpb
cld
inc
test
cmp
adc
ret
andb
lret
pop
out
inc
scas
out
cmpb
fstpt
cld
xor
popf
pop
jnp
imul
jns
push
mov
sub
mov
mov
push
mov
imul
insb
fmuls
shrl
jge
jmp
xlat
pop
xchg
scas
fidivrl
insl
rorb
and
sub
jnp
outsl
stc
or
or
adc
rorb
popl
push
les
aam
int
int3
sbb
push
sub
ja
lock
scas
movsb
les
mov
mov
mov
fldcw
cld
divb
inc
das
mov
aam
push
adc
mov
or
mov
loope
fstpt
fildl
dec
sub
fiaddl
xchg
inc
or
push
or
aam
clc
push
and
outsl
enter
test
insb
cmpsb
jp
cmpb
add
adc
je
icebp
cmp
daa
enter
popa
push
inc
xchg
mov
orl
push
pop
dec
pushf
je
jl
sbb
mov
scas
mov
mov
lret
sbb
lds
push
mov
pop
adc
mov
push
fs
sbb
in
xchg
ror
add
cmc
fisttps
adcb
adc
push
jl
arpl
lods
fwait
sub
hlt
and
sbb
ljmp
inc
repnz
out
mov
cmp
push
push
xor
loopnew
jne
outsb
imul
sub
lods
hlt
pop
bound
fidivrl
sti
inc
movsb
test
fistl
and
imul
test
ret
test
loope
mov
mov
inc
mov
xchg
dec
loope
repnz
in
bound
ret
pop
jne
lcall
mov
shl
ret
and
mov
pop
imul
idiv
ret
rcrb
notb
add
mov
cltd
sbb
xlat
psubsw
lahf
out
jns
xchg
les
shlb
jnp
mov
pop
mov
fwait
std
push
sbb
push
fwait
mov
ss
jo
aam
cmp
insl
hlt
adc
addl
lods
push
or
mov
push
inc
push
cltd
ficoml
push
inc
jecxz
mov
bt
shll
push
pop
rorl
xchg
je
shr
inc
and
sahf
inc
or
jns
push
lds
xor
lods
insb
sbb
popa
les
jecxz
add
and
xchg
sub
call
out
dec
push
push
inc
fldl
addr16
adc
les
lock
repnz
xchg
pop
cmp
out
pop
mov
adc
mov
or
sahf
add
repz
cs
lods
mov
push
xor
or
rolb
sub
stos
sbb
sbb
shrb
pop
ret
je
lcall
jae
xor
push
loopne
leave
rcll
lcall
dec
pop
mov
dec
cld
inc
fs
movsl
cltd
test
xchg
dec
ds
pop
push
addb
mov
pop
inc
cmpl
stc
mov
loope
pop
iret
add
mov
aad
gs
xchg
mov
inc
add
mov
es
xchg
sti
xchg
fwait
dec
mov
inc
loope
ds
stc
cwtd
push
shl
pop
xor
xlat
jecxz
add
sub
jmp
xchg
pop
dec
pop
sub
shlb
dec
pop
cmpsl
ficompl
pop
push
xlat
mov
sbb
arpl
stos
push
mov
sub
pop
fcoms
jnp
pop
xchg
cli
xchg
add
or
dec
pop
pop
or
sahf
fsubl
and
sbb
adc
int
xchg
mov
bound
fists
mov
test
xlat
cld
jb
add
mov
inc
mov
and
jl
inc
sub
cwtl
movsl
stos
shrl
dec
outsb
test
test
adc
xchg
das
jl
cmc
iret
push
fs
lds
cwtl
ret
sarl
push
and
xchg
xchg
fdivrl
fwait
stc
sub
aaa
fadds
mov
cmp
mov
sub
xor
sub
in
sub
mov
sub
in
das
xchg
sub
aaa
push
aas
jecxz
js
dec
mov
mov
add
sub
jae
add
pop
dec
fdivrs
cmpsl
nop
mov
and
shr
adc
adc
sbbb
cltd
mov
adc
jbe
ja
sub
xchg
stos
loop
jbe
testl
jnp
ret
lods
insb
and
mov
insl
icebp
and
or
and
fwait
xchg
mov
cwtl
sbbb
stos
cwtl
scas
mov
inc
lahf
inc
hlt
and
loopne
outsl
xor
adc
imul
xchg
mov
push
aam
cld
or
sbb
xorl
inc
in
outsl
adc
mov
and
daa
inc
popa
mov
sbb
xchg
cmpsl
notl
adcb
jae
xchg
rolb
jge
cmp
repnz
pushf
cwtl
add
ret
das
mov
and
add
push
and
fsub
cltd
rol
jns
cmp
ds
sub
xor
enter
mov
ficoms
mov
inc
sub
repz
cmp
pusha
roll
xlat
dec
jg
aas
aas
xor
mov
into
mov
fmull
fdivrs
mov
add
jg
mov
clc
stc
xlat
ret
cmp
pop
or
and
dec
clc
cmpl
les
mov
mov
xlat
sub
jns
lcall
mov
ret
gs
inc
xchg
pop
mov
bound
push
sub
lock
push
add
notl
mov
ret
pop
insl
mov
or
je
je
ud2
filds
mov
call
inc
in
aaa
and
xor
cmpsl
sbb
lock
cmc
xor
inc
rcrb
ret
xor
fists
xchg
xor
mov
mov
decl
push
mov
jp
mov
fsubl
jns,pn
mov
xchg
ljmp
jne
jbe
xor
int3
pusha
push
int
iret
jo
fs
fsubr
cld
fwait
movsl
cld
lods
jp
gs
out
faddl
ffree
lahf
out
push
pop
ror
mov
shrl
arpl
pop
clc
inc
jno
sti
aas
mov
ret
sbb
sub
sarl
in
jae
pop
inc
setbe
add
lahf
mov
movsb
and
stos
mov
pop
adc
xchg
xor
sbb
and
dec
jbe
adc
xor
xchg
sbb
push
enter
dec
mov
out
cmc
cmp
pop
ss
fdivrl
stos
and
test
enter
dec
scas
cmp
adc
jbe
xchg
cmp
clc
dec
sbb
stos
mov
push
es
jge
push
insb
jo
bnd
or
push
jle
mov
jmp
mov
ss
mov
jbe
ss
push
daa
cwtl
hlt
loop
inc
scas
push
xor
add
pusha
in
sbb
jae
std
or
icebp
xchg
dec
adc
adc
push
clc
std
test
jb
adc
push
repnz
mov
arpl
scas
inc
testl
xor
pop
loop
jl
popa
add
fimuls
jl
jnp
fistl
xchg
into
outsl
fdivrs
sbb
mov
cmpsl
mov
ror
aad
aas
xor
faddl
orb
jno
std
sbbl
push
xor
sbb
stos
dec
inc
popf
and
jno
inc
cmpsb
inc
or
push
sahf
stos
outsb
test
int
shlb
mov
pop
sub
les
test
js,pn
mov
mov
xchg
rolb
aas
in
stos
fcoml
mov
arpl
sub
jl
add
push
leave
inc
sbb
cmc
push
loop
mov
xchg
call
sub
push
insb
aaa
xchg
jmp
in
dec
xor
in
movl
adc
fadd
cmp
shlb
and
xchg
std
loop
daa
mov
out
aad
mov
movsb
xlat
dec
and
or
ja
mov
xchg
shrl
cmp
mov
adc
sub
or
pop
mov
pop
leave
nop
inc
in
pop
sub
mov
out
mov
jb
sub
arpl
inc
addb
sbb
mov
in
enter
sahf
xor
xchg
sti
out
subl
jnp
pop
stos
rcll
hlt
sub
aad
out
rol
jp
cmc
xor
xchg
mov
push
aas
xor
push
jno
cwtl
popf
adc
jmp
test
cwtl
jmp
jp
cmp
movsb
iret
sub
imul
and
dec
fcomp
fs
and
mov
push
mov
divb
das
xchg
jo
out
loopne
push
fsubs
fsubrs
adc
jb
wrmsr
cmp
aad
cmp
pop
sbb
add
mov
push
push
leave
insb
mov
xlat
inc
int3
addr16
roll
xchg
mov
xchg
and
xchg
and
push
xor
dec
lea
xchg
fwait
push
sbb
mov
or
xor
jl
and
mov
and
push
inc
mov
es
loopne
in
fcmovu
movsb
pop
je
xchg
cmp
repnz
inc
sub
test
ja
push
cli
add
or
mov
or
fwait
sub
ss
mov
pop
test
lahf
adc
in
cwtl
add
mov
mov
lods
clc
popf
mov
ret
push
outsl
xor
jge
cmp
add
inc
adc
nop
call
repz
cmp
cld
fmull
mov
adc
insb
and
imul
sub
int3
je
leave
js
jb
xchg
lcall
push
dec
mov
mov
pop
ljmpw
dec
pop
ja
in
movsb
fistpll
lds
mov
jmp
enter
std
mov
mov
js
in
jb
inc
fcmove
sbb
mov
xchg
inc
enter
pop
gs
pop
inc
loope
jmp
mov
faddl
test
mov
out
mov
bnd
popf
mov
jg
cmp
sbb
aas
in
clc
push
xchg
sub
inc
sub
repz
sti
stc
sbb
push
fisubs
jo
rol
dec
xrelease
mov
and
xor
fisttpl
mov
out
xchg
xchg
fsts
push
enter
sbb
inc
pop
out
rcl
iret
xchg
into
pop
sbb
mov
pushfw
out
mov
mov
dec
add
popa
mov
addr16
pushf
mov
mov
in
cmpsb
aam
pop
fwait
ja
cmpsb
jp
add
inc
fcomps
xchg
mov
mov
push
lds
dec
out
pop
jg
sub
jle,pt
addr16
lods
bnd
mov
outsb
cmp
sub
lret
mov
push
xor
push
mov
ljmp
insb
adc
stc
mov
into
sub
mov
push
and
adc
xor
or
cwtl
ljmp
jne
add
dec
scas
scas
popf
mov
ficoms
xor
jnp
outsl
in
mov
and
xchg
in
and
sbb
jg
add
cmp
adc
stos
shrl
sub
into
enter
push
inc
arpl
cmp
lods
adc
and
pushf
pop
aam
mov
push
paddusb
mov
call
testl
mov
pop
mov
pushf
mov
mov
push
cli
daa
movsl
sahf
in
mov
bts
cs
dec
cmp
sbb
add
adc
and
add
xchg
push
push
adc
aad
mov
aam
sub
loopne
popf
jbe
push
ljmp
sbb
lods
mov
pop
mov
adc
sarl
pop
imul
mov
xchg
ljmp
dec
lret
sbb
add
jbe
hlt
cs
enter
mov
rcrb
sub
xchg
jle
mov
pop
mov
aad
and
dec
cmp
mov
fs
test
orb
inc
mov
lret
and
push
xchg
ss
sbb
scas
push
daa
and
ds
mov
cmp
int3
aam
dec
and
pop
xor
xor
shrl
pop
notl
adc
sti
mov
mov
jge
pop
sbb
xchg
pextrw
add
cmp
arpl
jp
sarb
sbbb
xchg
iret
jp
emms
or
and
pop
jne
mov
cmpsb
mov
shl
xchg
ret
push
outsl
dec
push
cmp
xchg
test
loopne
incb
jae
xlat
test
and
mov
in
imul
fimull
mov
lods
mov
daa
dec
mov
fmull
dec
pushf
cmp
mov
icebp
std
mov
lods
iret
aam
inc
jns
popa
mov
xorb
cwtl
call
imul
sbb
dec
sbb
xchg
call
cmp
lret
icebp
pop
adc
pop
rorb
push
jle
invd
adc
xchg
sub
ljmp
xor
int3
scas
repnz
lret
xchg
mov
js
push
aam
xor
testl
movsb
popa
je
fmul
or
shrl
xor
cltd
mov
mov
adc
dec
into
roll
and
add
jp
lea
rcll
mov
inc
dec
inc
ss
push
or
pop
jne
xchg
ror
cmpsl
popf
pushf
or
sub
cld
ss
je
xchg
jns,pn
into
inc
fyl2x
mov
hlt
loop
les
shll
mov
sub
add
stc
inc
adcl
dec
xor
and
mov
ds
loope
sti
or
and
stc
push
ret
scas
imul
pop
test
cwtl
mov
mov
push
daa
push
loop
sub
pop
outsb
pop
dec
fildll
mov
sub
popa
loope
in
aam
cmp
and
mov
add
mov
jmp
cli
pop
ljmp
test
push
and
dec
iret
dec
pop
xchg
shl
out
jmp
cwtl
loopne
rcrl
mov
push
and
das
jle
lods
and
fstps
pop
loopne
add
lret
add
jl
rorl
push
mov
in
cmp
in
mov
out
sbb
into
ljmp
lock
xorl
cmc
mov
in
test
add
aas
xor
cld
sub
mov
jo
jmp
fyl2x
ret
mov
sub
cwtl
push
repnz
gs
inc
insl
add
cmc
hlt
fsubrl
mov
fldl
in
iret
push
add
and
gs
rcl
push
xlat
jg
fimull
inc
mov
rorl
aad
std
cmp
mov
fsts
cmp
mov
hlt
je
rorl
xchg
pop
xchg
mov
rcrl
sbb
mov
inc
inc
fsubrs
sub
iret
orl
lds
push
mov
pop
xchg
push
and
pop
mov
negb
xorl
mov
sbb
popf
mov
out
arpl
xlat
push
adc
xor
jnp
dec
insl
mov
loop
setle
pushf
rcll
jo
inc
fidivl
add
lea
fnstcw
fyl2xp1
sti
fwait
loopne
push
mov
loopne
xchg
movsb
push
add
dec
or
repz
nop
push
ret
mov
mov
out
ja
movsb
dec
arpl
inc
sbbb
dec
enter
cmp
xchg
ja
jo
test
push
call
mov
rcrb
and
arpl
push
in
fidivs
inc
sub
cmp
add
lcall
data16
sub
leave
dec
test
je
loopne
push
and
or
jge
sbb
inc
inc
mov
cld
test
rorb
clc
pop
les
jg
cwtl
insl
loope
mov
pop
pop
les
mov
add
pop
movsl
hlt
mov
in
mov
inc
mov
rorl
cmp
mov
push
mov
sahf
dec
rclb
push
out
aam
jp
aaa
or
std
mov
jne
in
sub
adc
pop
mov
cmp
jne
fwait
pop
pop
dec
jb
sub
aaa
dec
sub
sub
test
enter
mov
mov
push
adc
xchg
or
jmp
cs
leave
dec
orl
jns
mov
jo,pn
mov
scas
and
in
push
push
sti
lahf
dec
xlat
jbe
jge
test
pop
mov
xlat
test
push
pop
int
pop
pushf
sti
sub
and
push
hlt
mov
xor
pop
push
mov
dec
rorl
sub
inc
jne
sub
stc
flds
fbld
add
imul
xchg
jbe
ss
mov
inc
enter
pop
xor
lods
in
push
mov
incl
test
mov
in
loopne
jmp
mov
mov
sbb
cmp
into
mov
mov
sahf
test
mov
ret
dec
out
in
xchg
or
add
push
lods
mov
sub
bnd
sbb
dec
adcb
push
xchg
fnstcw
adc
sbb
ds
pop
push
mov
lock
sub
mov
inc
jne
mov
inc
push
push
mov
pop
inc
jecxz
cmc
jae
dec
lods
movsb
pop
inc
leave
les
std
fs
cs
jp
xchg
mov
daa
pop
adc
dec
pop
repz
mov
imul
mov
mov
add
rclb
add
inc
popf
insb
mov
pop
and
int3
stos
and
je
stos
and
aad
scas
nop
aad
xor
sub
lret
lods
loopne
mov
sbbb
cmpl
iret
gs
testb
imul
mov
bound
xchg
dec
aad
shl
mov
pop
cmpb
push
test
push
aad
sbb
loop
shrb
mov
mov
or
std
ret
xor
bound
inc
lods
cld
sbb
cwtl
test
add
xchg
outsl
push
mov
std
xchg
movsb
sbb
xlat
push
add
xor
add
sub
int3
cmc
mov
mov
fwait
repz
cmpsb
sub
inc
in
shlb
pushf
push
mov
arpl
scas
clc
pop
pop
bound
jae
xchg
popf
dec
pop
push
mov
insb
sahf
test
in
sbb
xor
test
pop
out
hlt
and
inc
mov
mov
daa
cmp
mov
enter
add
movsb
ljmp
pusha
stc
fst
icebp
fbld
jne
cmp
repz
xchg
lret
inc
in
sbb
pop
pop
leave
shll
repnz
push
mov
pusha
mov
xchg
jp
sbb
cmp
and
xchg
jno
daa
push
icebp
xchg
insl
pop
iret
rep
cmp
jnp
addr16
in
inc
xchg
in
sub
shll
lcall
lds
and
xchg
insb
add
jl
in
cmp
pusha
add
and
dec
pop
push
fstp
cli
imul
leave
push
notl
push
jbe
push
sbb
mov
scas
cmc
gs
mov
inc
adc
jle
sub
cmp
add
jp
ret
xlat
add
or
ljmp
push
popa
pop
xchg
dec
adc
jg
daa
dec
or
adc
add
jae
addl
mov
iret
xchg
mov
mov
test
subl
int
cmp
push
outsl
pop
push
dec
or
jns
insl
add
xchg
lods
adc
mov
mov
pop
pop
movsb
push
adc
sub
in
xchg
sub
mov
lea
inc
jne
or
ret
jmp
fistl
outsb
rcl
xchg
popa
in
ror
sbb
dec
pushf
gs
std
fbstp
jno
pop
rolb
mov
leave
test
adc
mov
lcall
imul
outsl
jle
jge
dec
cmpsb
push
mov
inc
dec
faddl
insb
clc
fdivrl
into
out
out
sbb
test
repnz
es
movsb
mov
test
sub
inc
outsb
mov
outsb
mov
jmp
mov
and
ss
pop
jl
sahf
stc
dec
adc
scas
mov
fidivrs
add
testl
xor
icebp
cmpsb
dec
popf
mov
xor
and
add
sbb
xchg
mov
dec
ss
mov
xor
inc
loop
sti
cld
jecxz
sbb
bound
loop
js
lret
sbb
sub
add
xchg
inc
cmc
mov
dec
dec
fnstsw
mov
adc
jle
ror
sub
mov
cmp
lods
dec
loopne
xchg
mov
xchg
shlb
cmc
jns
mov
cltd
ss
xor
mov
jb
out
xchg
mov
cmp
jl
and
repz
popf
push
fdivrs
stos
mov
xchg
xor
mov
sti
jnp
std
jg,pn
leave
push
jmp
add
push
leave
rcl
sbb
data16
sbb
or
movl
leave
std
popa
out
fimuls
push
jb
xor
mov
dec
mov
int3
scas
sub
xorb
popa
xor
out
rcrl
fucomp
aad
movsb
scas
arpl
ret
aas
outsb
mov
inc
clc
mov
stos
inc
orb
xor
shrb
mov
or
pop
cs
imul
mov
push
shll
cmp
ja
mov
xchg
idivb
in
xor
popf
stos
pop
xorl
lahf
mov
pop
les
and
call
iret
paddd
fwait
jp
xor
arpl
movsb
sahf
bound
pop
addr16
adc
jo
das
push
lret
dec
sbb
std
mov
jecxz
pop
inc
fdivrs
and
add
movups
iret
subl
lret
ljmp
lods
imul
pop
test
ret
sub
add
lcall
xor
loopne
lcall
cmp
in
inc
pop
jecxz
insb
inc
mov
push
mov
push
inc
sbb
xchg
mov
jo
cmp
fcoml
jo
cmp
or
movsl
pop
xchg
packssdw
stos
cmp
mov
add
sub
mov
pusha
imul
xlat
arpl
pop
mov
sbb
aam
dec
imul
es
stos
mov
scas
or
iret
aaa
xor
outsb
es
test
mov
and
pop
pushf
fstp
jae
mov
inc
pop
imul
pop
dec
or
in
inc
fisttps
add
mov
add
xor
sbb
rol
jl
mov
mov
mov
pop
mov
cwtl
xchg
mov
and
test
aad
outsl
lds
dec
pop
mov
xor
pop
daa
aam
fs
jg
jle
addl
cmp
dec
in
cmp
pmaddwd
insb
sub
adc
pushf
pop
loope
stos
push
xor
punpckldq
iret
arpl
andb
fdivrl
mov
incb
xchg
push
scas
es
ficompl
fsubrs
cwtl
out
mov
or
repnz
test
cmp
pop
ret
jp
xor
push
adc
test
cmpsl
jae
movsb
sub
mov
into
pop
xchg
mov
sub
mov
jo
push
mov
push
hlt
mov
iret
jg
fnstcw
jl
cmp
mov
mov
inc
mov
mov
xchg
pop
fcom
xor
aam
shlb
sahf
mov
adc
rcl
sub
paddb
sbb
mov
cmp
roll
add
jns
inc
xor
push
and
rol
outsb
sti
xor
mov
test
movsl
test
ret
dec
popf
dec
popa
inc
xchg
adc
sbb
enter
sub
pop
push
arpl
daa
xor
sbb
push
imul
pushl
fstpl
pop
test
and
dec
sbb
push
test
in
cli
mov
dec
and
pop
aad
sbb
push
jbe
out
out
push
rolb
inc
notl
hlt
mov
mov
pop
or
sub
sub
cmp
mov
dec
push
popf
jno
dec
mov
and
xchg
cwtl
test
mov
sti
out
sub
flds
xchg
gs
jl
push
lret
test
fisttps
add
pusha
testl
inc
shll
ds
xchg
push
mov
add
lret
inc
lods
and
sbb
loope
or
frstpm(287
jb
addr16
popf
call
cmpl
stos
xor
xchg
leave
aad
pop
mov
shlb
cmp
pop
xchg
xor
cmpsl
dec
jg
mov
ja
sbb
out
pop
cmpsl
sbb
cmp
xchg
inc
les
les
loopne
mov
ret
out
int
xor
jns
xchg
mov
cs
movsb
adc
in
aas
adc
mov
add
jae
add
jl
data16
xchg
adc
xchg
sub
flds
push
cs
dec
mov
rcrb
jmp
fldl2t
xor
cmpsb
and
jmp
xor
fs
ja
test
repnz
je
outsl
test
inc
and
data16
mov
jp
jns
imul
popf
cmp
enter
repnz
out
cmp
or
roll
aad
xchg
jnp
jno
jne
popf
xor
daa
jp
pop
pop
bound
nop
inc
leave
push
mov
inc
cmpsl
sub
in
inc
push
add
xlat
mov
cmc
lahf
negb
sub
loopne
jae
mov
loope
xchg
or
inc
ret
push
pop
bnd
inc
gs
sub
mov
add
xor
lds
mov
inc
pusha
adc
push
ljmp
mov
iret
adc
adc
add
scas
inc
sub
adc
data16
or
pop
cmp
lods
cwtl
ja
bound
adc
shl
mov
loope
and
mov
data16
enter
sar
sarl
adc
push
push
inc
roll
pushl
shl
popa
push
add
mov
lods
aas
sub
cmp
pcmpgtd
cmp
xchg
and
movsb
sbb
push
aaa
add
adc
jne
es
dec
mov
popa
jne
out
stos
bound
ds
jae
sub
adc
mov
push
cli
aam
mov
mov
and
popf
pusha
icebp
push
idivb
fbld
rcrl
adc
int3
movsb
nop
cmp
in
loopne
pop
outsb
mov
roll
scas
mov
mov
and
lods
pcmpgtw
out
jp
insb
mov
mov
lods
jmp
mov
bnd
imul
mov
ret
rcll
jnp
imul
aam
sub
xchg
lds
xchg
scas
out
jno
gs
xchg
loop
imul
les
inc
js
dec
aaa
rcr
add
mov
clc
mov
sar
inc
inc
cmpl
mov
in
stos
inc
xor
push
add
or
mov
xchg
insl
pop
cli
mov
inc
in
popf
sbb
add
xchg
inc
dec
jbe
add
sub
push
mov
lock
mov
fsts
pop
xlat
sub
cmp
adc
call
ljmp
mov
or
mov
pop
sub
dec
mov
ficoml
mov
sub
pop
or
pop
inc
xchg
sarb
jg
dec
push
leave
push
xchg
imul
dec
out
popa
cmp
inc
push
xor
jb
aas
mov
rclb
callw
int
push
nop
inc
xchg
or
shrb
int
lea
sub
sar
cmpsb
push
fs
sub
jmp
aaa
clc
push
mov
xchg
out
mov
cmc
addl
lds
lret
jns
addl
xchg
mov
xchg
jg
es
pop
pop
inc
in
xor
mov
mov
rolb
aad
scas
adc
test
jne
xor
xchg
dec
jmp
sub
and
lds
lods
out
addr16
and
cmpsl
mov
dec
ss
mov
add
mov
gs
fdivrl
push
pop
pop
push
clc
inc
push
pushf
roll
movsl
je
jecxz
movsb
dec
fldcw
and
loopne
loop
testl
inc
outsl
hlt
insb
and
xor
push
repz
loopne
inc
out
xchg
pop
clc
jae
jmp
adc
sub
pop
lods
loopne
and
outsl
mov
jmp
push
adc
int3
stc
popa
sbb
pop
pop
ret
in
nop
mov
xchg
mov
ss
add
pop
rclb
cltd
inc
testb
mov
ret
lods
pop
mov
jle
inc
aaa
xchg
jp
insl
pop
cmp
fisttpll
scas
cmp
arpl
cs
aaa
loopne
cmp
std
stos
shrb
mov
out
aam
lods
stos
je
pop
aam
dec
xchg
shll
cwtl
inc
xor
mov
fs
push
xchg
clc
adc
test
jecxz
jge
imul
lcall
lret
jecxz
dec
popf
mov
jecxz
rcrl
testl
test
aad
lock
mov
jp
pushf
jp
loopne
popa
iret
fildll
pushf
sub
jmp
aam
test
mov
jo
movsb
mov
lahf
mov
sub
mov
iret
adc
pop
es
adc
mov
bound
cli
push
cmpsb
mov
call
aaa
jo
iret
push
insl
sbb
ljmp
xchg
test
das
jae
cs
and
mov
mov
sbb
jg
sti
mov
insb
js
cmp
out
mov
inc
mov
mov
testb
cmpl
out
mov
ljmp
xor
lods
sub
ljmp
inc
jns
sub
stos
cmp
rcll
stos
js
push
mov
jg
fbld
rorb
pushf
inc
mov
sti
lcall
pop
inc
push
popa
mov
pop
insl
dec
rolb
sti
leave
ljmp
xor
imul
or
mov
bswap
mov
sbb
sub
pop
ret
cld
xlat
cs
mov
pop
inc
inc
jb
pop
loop
mov
xor
pop
lahf
dec
inc
cltd
push
pushf
sbb
stc
push
rcl
adc
adc
ror
movsb
push
pop
adc
imul
outsl
mov
adc
fidivl
or
fldl
ja
pop
adcl
push
stc
xor
push
mov
lock
dec
mov
pop
lods
lret
imul
fists
inc
lahf
inc
sbb
add
or
and
orb
push
movsl
sbb
aam
jno
cmp
outsb
mov
aam
adc
mov
or
int
lret
pushf
pusha
cmp
mov
sahf
mov
popa
xor
mov
es
xchg
jns
pop
mov
mov
cmc
sbb
lods
arpl
jle
jne
movsb
mov
lret
jcxz
addr16
mov
adc
mov
or
push
and
mov
and
jmp
mov
loop
mov
outsb
lcall
lods
cmpsl
sbb
dec
lods
and
and
xchg
mov
aas
mov
cmc
push
sub
inc
mov
pop
cmpl
mov
lods
mov
int
das
std
jmp
rorl
or
in
dec
je,pn
push
addr16
or
sti
test
inc
mulps
lods
pusha
xor
icebp
fcomp
outsl
jae
rclb
ret
aas
mov
fdivrs
lods
cmp
sbb
or
pop
push
movsl
cwtl
adcb
xor
xor
pop
flds
popa
and
enter
inc
scas
xchg
insl
cmpsb
xor
cmp
lods
popf
pusha
in
cli
ret
out
xchg
xor
jo
mov
inc
std
jle
sub
push
mov
mov
loopne
ret
sbb
sub
jns
or
std
js
in
and
jo
enter
shll
push
xchg
mov
fnstsw
pop
ret
mov
stos
push
and
int3
fldl
jp
f2xm1
jle
inc
pushl
xor
das
cli
pop
mov
out
outsb
cmpsb
pop
jnp
sbb
sti
scas
push
lret
pop
mov
nop
inc
xor
jecxz
lods
lret
out
ds
jmp
pop
add
mov
shr
movsb
sahf
jns
movsl
mov
iret
cld
cmp
scas
push
cli
push
dec
test
clc
lcall
dec
mov
add
sub
adc
repz
and
push
fbstp
adc
les
pop
test
add
inc
mov
sub
lods
stos
dec
xchg
mov
jno
cmp
scas
dec
sbbb
sbb
xor
fdivrl
lcall
push
pusha
adc
push
xchg
lods
push
inc
hlt
xor
pop
jge
push
cmp
out
sub
icebp
es
iret
dec
shr
inc
es
mov
andl
xor
adc
icebp
arpl
mov
push
nop
inc
mov
enter
iret
das
fdivs
iret
sar
mov
jnp
movsb
out
loope
sarb
push
std
pop
xor
or
dec
int
push
pop
scas
or
mov
jge
mov
fsubl
imul
fcmove
xchg
into
movsb
add
add
adc
sbb
fmuls
imul
inc
mov
push
into
jb
mov
in
addr16
stc
ffree
inc
or
or
cld
mov
sar
xchg
in
or
or
cmp
mov
and
mov
or
and
popa
push
or
mov
add
jge
sub
repnz
aam
push
adc
sub
adcl
mov
xor
addr16
sbb
lahf
sub
xor
and
jmp
and
sub
adcl
xlat
ret
sarl
cli
repz
fwait
dec
aam
mov
fsts
jmp
ja
sbb
int
mov
adc
ret
jmp
outsb
jmp
insl
andb
push
lea
xor
jns
lret
mov
pop
xor
or
add
push
daa
in
add
fdiv
and
cmp
mov
dec
scas
das
add
nop
pop
jns
fidivrl
int3
sub
rol
xor
dec
jae
add
pop
xchg
pop
pop
mov
sahf
mov
addr16
test
push
daa
aad
shrl
pop
xlat
and
push
test
jg
scas
ja
inc
dec
pop
and
rclb
xor
sub
add
aam
cmpb
sub
enter
outsl
ficomps
les
push
xchg
bound
lea
fsubr
adc
inc
xor
jno
addr16
cmp
lret
pop
xor
pop
shll
pop
aad
leave
insl
or
sysret
stos
call
adc
push
sahf
ror
std
lds
jnp
jge
adc
icebp
jno
cmp
xor
sahf
sub
aaa
xchg
push
mov
mov
scas
ret
cld
iret
aam
lds
sbb
sub
fsubrl
add
adc
jg
cmp
jbe
mov
or
mov
arpl
aas
dec
idivl
mov
mov
and
int3
popa
jbe
xchg
repnz
insl
movsl
repz
lea
in
test
or
and
sbb
and
negl
xchg
call
sbb
cmp
loop
push
xchg
cwtl
out
jo
pop
cmpsb
ljmp
jns
mov
mov
mov
popl
inc
and
and
imul
psraw
arpl
cmp
adc
dec
cmp
lret
adcl
aas
enter
xchg
xor
lods
mov
inc
jmp
pushf
nop
bound
or
sub
adc
pop
data16
xor
mov
xlat
scas
push
popa
sbb
daa
add
lds
cmp
lods
repz
push
dec
inc
repnz
cltd
int3
cmpsb
pop
fcoml
das
scas
mov
daa
fstl
inc
jge
sbb
dec
sbb
pop
adc
jmp
jae
xorb
xor
clc
int3
cmp
aad
cmp
enter
adc
dec
ret
mov
xchg
mov
gs
es
mov
mov
push
xor
clc
sbb
out
pop
jne
aad
jns
mov
cmp
in
jmp
mov
push
cmpsb
adc
sbb
jg
jp
pop
inc
sbb
gs
sbb
jb
mov
jnp
inc
jge
movsl
jg
pop
cmp
jnp
dec
not
fbstp
inc
insb
mov
pop
push
std
cmpsb
in
imul
push
push
ret
cmpsl
or
mov
sub
lock
ret
add
ret
cmp
cmpsl
imul
test
adc
cmp
mov
fisttps
and
aad
lds
push
test
inc
add
add
dec
dec
insb
sti
or
sbbb
jle
sub
dec
cmp
mov
and
cmp
sbb
pusha
add
xchg
mov
push
jns
mov
dec
imul
rcll
sbb
jmp
outsb
inc
gs
cs
cwtl
xchg
push
mov
push
inc
out
xor
xchg
arpl
icebp
out
cmp
or
ljmp
out
roll
cs
aas
jg
sahf
jb
pop
push
mov
je
xor
insl
inc
or
mov
jmp
cmc
xor
out
dec
push
lret
xor
dec
sarb
stos
leave
js
fdivl
add
in
mov
mov
fisubl
or
inc
js
jo
sub
mov
pop
push
jge
aam
mov
mov
inc
mov
mov
dec
test
push
popa
scas
add
data16
mov
adc
leave
and
leave
push
aaa
lods
sub
jge,pn
add
xchg
mov
insl
rorl
jne
loope
arpl
add
repz
shl
xor
or
lods
cltd
jno
shlb
dec
movsl
jno
pop
repnz
ficoms
outsl
loop
fs
mull
in
pop
sub
inc
pop
cmp
add
lock
in
int3
ja
xchg
sarb
push
sub
lds
xor
mov
movb
pop
add
loopne
loop
mov
mov
inc
arpl
xchg
fwait
and
lret
decl
std
imul
adc
in
fldenv
adc
inc
mov
gs
imul
mov
add
sbb
or
inc
xchg
adc
xchg
dec
and
subl
out
inc
pop
out
or
data16
pop
or
push
jle
test
repz
adc
clc
int3
pop
sub
mov
andb
jnp
inc
aam
jns
sub
and
mov
jb
popf
leave
leave
mov
cs
pop
xchg
cli
mov
cwtl
push
stos
jg
xchg
es
pop
test
sarl
push
shr
cmp
adc
jbe
sbb
call
cmp
push
insl
pop
ret
aam
jne
ret
cmpsl
adc
add
add
or
xchg
add
movsl
pushf
loope
xor
jecxz
xor
popa
mov
pop
aad
aad
adc
std
push
aad
imul
xchg
lds
mov
lret
push
test
arpl
xchg
mov
xor
lea
clc
cmp
adc
mov
mov
fnstsw
test
aaa
bound
out
sub
imul
mov
cmp
es
test
pop
lock
ds
push
or
pop
jmp
ja
insl
call
xchg
outsb
pushf
xchg
inc
push
sbb
mov
jecxz
jns
out
mov
call
ss
add
xor
cs
sbbl
mov
push
jmp
arpl
sub
xchg
scas
addr16
ret
sbb
inc
dec
ds
jmp
ja
lret
or
mov
push
movsl
xchg
stos
loopne
jle
mov
fs
inc
xchg
jb
jp
adc
repnz
out
fs
push
hlt
repz
mov
jo
jecxz
arpl
lahf
push
sub
sbb
cwtl
scas
outsl
xchg
push
inc
sbb
jb
jnp
out
mov
loop
jmp
adc
sbb
xchg
ds
jae
mov
rolb
cmp
mov
aam
aam
lahf
push
mov
xchg
jne
lret
cmpsl
mov
in
ja
xchg
adc
push
pop
cmp
roll
mov
js
inc
xcrypt-ecb
cmpsl
dec
cwtl
mov
cltd
cmp
outsl
mov
sbb
lret
mov
mov
loopne
or
add
scas
mov
clc
push
aas
loope
mov
dec
shlb
ljmp
sbb
je
mov
fdivrl
jno
out
shrl
imul
test
inc
das
cmpsb
outsb
add
jmp
dec
sub
les
fninit
sub
loop
cld
xchg
je
or
push
push
mov
dec
sub
clc
inc
repz
pop
xchg
jmp
xchg
negl
mov
sahf
mov
dec
sub
arpl
mov
lret
xchg
ficoms
cwtl
inc
lods
mov
sub
subb
or
sbb
cmp
and
cmp
dec
add
push
into
mov
inc
dec
or
jmp
mov
xchg
or
xor
sahf
stos
pop
push
xor
pop
test
mov
das
mov
pop
xchg
cld
push
imul
int3
jb
insl
add
fildl
aaa
dec
shl
filds
cmp
pop
outsb
movsb
in
push
mov
jecxz
mov
jae
call
jecxz
inc
adc
mov
loopne
shl
lods
add
pushf
push
into
and
pop
push
iret
notl
add
mov
aaa
enter
nop
lret
call
mov
inc
lods
shlb
rol
adc
clc
loopne
push
mov
xchg
enter
lods
cmp
mov
leave
roll
xor
adcl
mov
cltd
movq
stos
shll
pop
push
xor
mov
dec
lock
mov
fisubs
lret
xorb
or
sbb
cmp
stos
xchg
in
js
fcmovbe
addr16
sub
or
mov
mov
push
adc
or
ljmp
fcoml
mov
mov
loope
xchg
push
cmpsl
ss
jecxz
sbb
fists
xor
test
pushf
fmuls
push
push
pmulhw
push
jae
lret
cmp
xchg
mov
add
mov
out
outsl
mov
push
adc
sub
sbb
adc
les
insb
jae
cmpsb
jne
insb
ss
pop
cmc
dec
popf
sub
icebp
js
push
xchg
add
int3
fwait
push
adc
lahf
or
ljmp
and
mov
lods
js
push
and
sub
push
scas
and
scas
mov
repz
enter
vpaddsb
sahf
cmpsl
fcomip
push
jl
das
mov
add
inc
shr
cli
mov
pop
jo
pop
sbb
pop
or
ljmp
lahf
xchg
int3
mov
xchg
push
lahf
pop
mov
ret
pop
add
mov
mulb
lret
xchg
daa
and
sub
push
adc
and
aaa
or
xlat
cmpsl
mov
sbb
insb
add
mov
mov
fsubs
aaa
add
xchg
adc
dec
push
fwait
push
imul
cld
shrb
mov
mov
enterw
or
cvtdq2ps
xor
lcall
ror
jno
sub
add
adc
add
jmp
ljmp
cld
mov
mov
daa
sub
pop
rcr
rcr
inc
sub
mov
decl
mov
push
ret
sti
and
xchg
loope
enter
lcall
push
jns
mov
ret
or
adc
sbb
adc
addr16
dec
pop
stc
add
or
cmp
fld
fistps
insl
pop
movsb
mov
lods
xor
and
leave
or
fisttps
stos
testb
rol
jge
test
scas
pop
cwtl
and
lds
add
push
shrl
xchg
stos
iret
jae
shrl
pusha
inc
lcall
push
dec
bndldx
inc
ret
inc
cmpsl
gs
adc
fcomp
in
sar
or
test
xlat
sub
pop
sarl
lahf
subl
daa
mov
loop
jp
fsubrs
push
loope
mov
cld
lret
mov
cmp
jnp
daa
into
xchg
jmp
xchg
test
gs
cmp
mov
int
lods
cltd
xor
xor
cmp
adc
shll
inc
in
xchg
jae
xchg
incb
lret
jl
jne
push
pop
aas
mov
jno
pop
movsl
rcrl
lds
mov
adc
test
pop
fdivrs
jl
clc
mov
or
and
lret
mov
ss
out
lods
ss
js
je
jmp
movb
pop
xchg
ljmp
cld
ret
push
out
xchg
pushf
les
sbb
mov
cmp
mov
test
test
sbb
insl
outsl
jmp
or
popl
lds
mov
push
push
sub
dec
mov
shl
jb,pn
jl
loop
fsubl
cmp
mov
xor
mov
jg
or
inc
int
or
test
cmp
shrb
dec
mov
lahf
inc
jp
mov
pushf
xor
insb
sbb
cltd
in
and
ljmp
call
ja
pop
insl
std
stc
mov
shrb
jmp
cld
inc
cmc
aas
call
iret
push
jge
icebp
rcrb
xchg
adc
push
push
or
mov
les
xor
nop
cli
insl
pop
push
dec
inc
rcr
hlt
push
pop
mov
pop
add
sbb
sub
pop
adc
adc
loope
xor
mov
arpl
mov
push
mov
fs
dec
sbb
xchg
or
int
xor
sbb
lock
dec
in
push
inc
xrelease
push
cmp
mov
mov
ja
pop
je
push
out
dec
hlt
loope
ja
sahf
mov
insb
pop
js
ret
add
cmp
cmpsl
sub
outsl
pop
iret
mov
in
sub
cmpxchg
subb
lahf
mov
jecxz
in
or
test
mov
mov
fdivl
adc
or
mov
test
rcrb
and
ljmp
ss
mov
xor
ja
in
xorl
sub
jb
mov
jae
add
arpl
mov
jae
mov
inc
mov
adc
mov
add
cld
add
fwait
nop
les
or
add
js
lds
in
mov
gs
add
fincstp
cmp
adc
xchg
inc
inc
rorb
dec
add
cmpsb
xchg
mov
mov
sub
xor
popf
imul
lret
ss
and
dec
lods
add
inc
jp
les
and
aaa
cmpl
cwtl
sub
jmp
lcall
je
test
rcrl
test
fistps
sti
push
cmp
pop
mov
fiadds
jb
fs
cmp
pop
sub
mov
sbb
fwait
aas
fistpl
mov
aad
inc
fwait
leave
or
push
repz
pop
cmp
xchg
addr16
or
ss
cmp
or
ljmp
repnz
pop
pop
in
repnz
ja
push
popf
clc
jo
mov
pop
mov
sarl
ficompl
mov
sarb
mov
test
in
mov
cmp
cmp
lahf
sbb
mov
ds
outsl
dec
xor
ficoms
mov
xchg
insb
daa
sbb
inc
pop
cwtl
sbb
hlt
xchg
inc
out
mov
push
inc
push
stc
es
jmp
imul
xchg
mov
cmpsl
add
call
pop
shll
xchg
cmpsl
adc
std
test
pusha
or
xor
pop
or
fwait
jmp
mov
push
mov
inc
icebp
jg
es
idivl
pop
aas
imul
call
mov
add
jne
stos
scas
inc
lods
icebp
push
xchg
pop
xchg
or
shll
jecxz
mov
mov
adc
sbb
and
dec
and
aaa
mov
push
jo
out
jb
test
pop
jne
inc
fstpt
call
js
pop
pop
cmpsl
insl
stos
xchg
lret
or
xor
sub
or
sbb
fwait
push
and
pop
pop
repnz
xchg
lret
lret
xchg
scas
pop
jg
pop
jnp
adc
bound
clc
sahf
push
jnp
lock
ret
hlt
mov
cmpsl
leave
and
sarb
sub
outsl
pop
mov
mov
cmp
inc
dec
xor
fldl
pop
xor
loope
dec
pop
mov
lret
js
aas
adc
pop
add
psubw
jnp
daa
bnd
adc
rcll
push
fisttpl
push
out
or
rorl
lods
ret
into
addr16
xchg
cmp
cmpl
call
jbe
and
movsl
fwait
and
loop
jge
sbb
push
fs
aaa
mov
mov
adc
jl
dec
cld
mov
cmp
jl
or
jno
adc
mov
arpl
cmpxchg
jg
lret
and
addl
into
xorl
data16
rol
cmp
rcrl
dec
subb
dec
mov
lahf
xchg
xchg
std
inc
inc
push
fidivrs
into
test
push
cmp
xchg
push
xchg
cmpsb
push
xchg
mov
call
xchg
cmp
popf
mov
pop
test
scas
sub
lret
loop
push
roll
mov
mov
push
jl
das
ret
xlat
stos
ret
in
inc
ja
iret
mov
and
cmp
jno
jp
jne
cld
loop
lods
add
add
out
imul
or
cltd
out
jnp
clc
xor
insl
rcll
lods
out
cmpsl
aam
sbbb
test
imul
arpl
inc
push
mov
daa
xor
dec
dec
add
rcrb
push
dec
cmp
jge
pop
inc
mov
lahf
ret
pop
out
mov
in
push
mov
pop
mov
out
inc
outsb
sub
cmp
cs
jp
es
pop
shrb
loopne
mov
test
mov
cmp
hlt
pushf
hlt
cld
sbb
jnp
ss
mov
sbb
xchg
lret
sbb
call
add
cld
sbb
stc
arpl
icebp
push
mov
aad
jo
dec
jae
imul
into
test
lods
ljmp
rclb
pop
pusha
les
arpl
cmp
inc
push
fidivl
ret
inc
loope
add
iret
sti
mov
gs
cmpsl
cmp
ss
push
sub
mov
pushf
dec
xor
stos
mov
jmp
mov
cmpsb
cltd
push
adc
mov
cli
repnz
nopl
cmp
addr16
rolb
xchg
jae
mov
or
mov
js
mov
fimull
add
into
in
mov
dec
xor
jl
lds
loopne
fimull
mov
cs
int3
push
adc
adc
jp
les
pop
icebp
sbb
test
test
fildll
inc
hlt
fdivp
lret
pop
fidivs
and
ret
xlat
jo
cmp
mov
into
push
push
add
cmp
push
popa
into
dec
into
pop
xor
sbb
repz
repz
pop
sbb
mov
mov
je
inc
gs
bound
pop
inc
add
cmp
js
repnz
lret
rorb
lock
es
push
outsl
pushf
scas
mov
xchg
dec
or
mov
movsb
popa
nop
push
pop
push
pop
mov
aaa
mov
dec
bt
stos
lcall
jae
push
cmp
mov
mov
cmp
faddl
adc
and
mov
imul
mov
and
in
cmp
mov
push
sti
sub
xor
push
arpl
lods
fdivs
enter
cmp
mov
push
fwait
inc
push
popf
mov
iret
fimuls
cmc
gs
stos
mov
rolb
lock
xchg
jle
and
stos
ss
xchg
aaa
int
lret
pop
lods
lds
out
push
jecxz
lret
adcl
xchg
scas
ret
adc
scas
popf
xor
push
pop
cwtl
or
add
fistpll
cmp
and
pusha
iret
xor
daa
cwtl
in
mov
ss
cmpsl
mov
mov
and
mov
mov
cmpsb
inc
fdiv
xor
lcall
mov
sbb
add
mov
mov
cmp
cmpsl
das
xchg
xlat
mov
mov
lcall
mov
lock
add
or
mov
ret
add
js
pop
xlat
dec
jns
inc
push
mov
mov
jle
pop
inc
and
loope
mov
test
aas
and
cmp
cli
cmp
in
inc
outsl
add
pause
shll
rolb
cmp
jne
pop
sahf
inc
scas
lods
test
fdivrp
push
mov
inc
repz
or
cmp
imul
mov
xchg
leave
or
mov
mov
jmp
mov
sbb
mov
rolb
mov
jne
pop
in
cmp
add
mov
pop
out
fcmovu
push
xor
cmp
dec
ret
nop
xor
inc
imulb
inc
sbb
or
xor
out
insb
fimuls
test
outsb
jecxz
adc
sbbl
fmull
dec
mov
or
jg
clc
movzwl
mov
sbb
cmpsl
icebp
pusha
push
icebp
push
shr
xor
sbb
or
push
push
sbb
xchg
push
mov
push
mov
sbb
xorb
into
aad
jecxz
push
mov
ss
popa
in
mov
mov
in
andl
jg
loopne
add
or
or
out
pusha
out
out
mov
imul
cs
jbe
or
lock
push
sub
mov
jne
dec
mov
inc
ljmp
inc
mov
test
mov
adc
je
dec
or
push
push
add
in
push
xor
push
pusha
pusha
mov
aaa
inc
inc
dec
push
cli
xchg
sub
jne
jge
mov
aaa
mov
stos
mov
mov
sbb
sarl
inc
add
daa
xorb
cmp
mov
or
pop
dec
jns
sub
mov
jo
adc
push
or
push
sbb
fld
fldenv
add
movsl
iret
lods
test
daa
ds
lea
aas
jb
shrb
inc
and
xor
jnp
incl
sub
jp
addl
scas
xchg
in
mov
movsl
inc
test
mov
ffreep
and
iret
dec
or
test
aam
aam
xchg
mov
xor
int
incl
fistps
out
mov
int3
push
pop
xchg
sbb
sub
pop
popf
xor
rcl
cltd
mov
nop
ds
mov
add
pop
fimull
lahf
jns
cmp
mov
mov
cmpsb
fisttps
mov
jb
lret
or
fiadds
pop
dec
push
pop
push
and
sub
push
cmp
dec
adc
arpl
xchg
fdivl
sbb
push
add
clc
or
movsl
rolb
lea
cmp
cmc
out
jmp
stos
xchg
mov
lock
dec
loopne
sub
mov
jg
test
sbb
pop
mov
rclb
or
test
insl
inc
rcrl
int
test
push
je
mov
lret
repz
and
rcrb
jmp
enter
jecxz
lcall
es
rcll
mov
fisttpl
pop
xlat
xchg
in
jecxz
inc
loopne
and
sbb
sub
adcb
mov
xchg
push
imul
popa
pop
loopne
push
push
inc
test
sahf
test
shlb
inc
test
daa
sub
dec
pop
jns
sub
test
sub
sub
jo
xchg
cs
out
mov
test
clc
xchg
and
arpl
pop
rcl
popf
cmp
aas
xchg
and
jno
mov
aas
daa
fisttpll
nop
mov
adc
out
loopne
add
in
add
rcll
dec
jbe
int3
adc
cmpsl
rep
or
movsb
mov
or
cmpsb
fcoml
insl
and
mov
clc
insb
ret
shr
mov
fs
jno
adc
jg
or
mov
loope
scas
cli
mov
jno
leave
push
sahf
loopne
lret
mov
push
mov
stos
add
stc
imul
data16
movsb
cmp
int
and
ljmp
data16
push
pop
and
mov
fadd
xor
loop
rorl
nop
out
enter
or
in
lret
pop
fsub
add
and
outsl
sub
mov
outsb
mov
testl
loopne
adc
inc
jne
std
mov
xchg
jecxz
pcmpeqd
inc
jl
test
mov
ja
or
mov
xor
mov
dec
cwtl
lds
pop
inc
inc
xchg
mov
movsb
out
xor
xchg
push
out
pop
jle
jae
pop
aas
xorb
sub
movsl
ss
push
sahf
inc
cmpsb
sahf
pop
sbb
inc
rorl
push
ror
popa
dec
push
xlat
rolb
fsub
jl
shr
jle
lret
ljmp
lahf
cs
addl
imul
pop
cmp
gs
in
insl
aaa
cmp
movsl
movl
inc
out
push
push
mov
sbb
or
and
xchg
je
mov
xchg
push
sub
sbb
sub
shrb
and
xchg
and
out
loope
mov
or
mov
push
shlb
aas
push
cmc
or
addr16
enter
sbb
gs
orl
or
int
xchg
xchg
les
cmp
and
inc
add
or
inc
clc
mov
int
popa
add
sbb
and
fcomps
ja
fstps
push
lret
mov
fdivrp
jne
push
jne
jnp
xor
jp
lods
sahf
cmp
push
dec
and
add
xlat
push
and
jno
jbe
sub
mov
mov
push
into
pop
mov
scas
jle
sub
cmc
pop
push
test
int3
jbe
bnd
mov
xor
test
cmpsb
jecxz
inc
jns
jecxz
fimull
sbb
mov
lcall
scas
dec
pop
fs
in
xor
fsubrl
mov
in
ljmp
jbe
outsb
lahf
xchg
jg
mov
xor
jo
sub
sub
or
insb
in
pusha
pop
pop
or
dec
sub
stos
lahf
nop
cmp
in
mov
push
icebp
clc
mov
scas
out
pop
fwait
cmp
cmp
xchg
xchg
in
out
push
fldl
fidivs
ret
lock
xchg
leave
inc
idivl
adc
pop
fcmovb
xor
pop
xor
pop
adc
push
mov
adc
lods
add
jns
dec
fdivr
je
cmp
mov
jg
shl
jg
cmp
shrb
jbe
scas
cmpl
sub
adc
push
in
icebp
sbb
lahf
and
fidivs
adc
push
lea
mov
cmp
mov
mov
or
inc
sbb
and
lret
sub
leave
pop
es
ret
mov
fmul
xor
cld
cmp
iret
sti
mov
jb
xor
lds
pop
adc
movsl
sarl
icebp
dec
icebp
mov
in
js
lea
and
int3
and
cltd
add
test
ljmp
sti
dec
cmp
dec
sub
cmp
leave
stc
jno
push
xor
sbb
or
adc
popf
push
mov
push
shlb
test
lahf
ret
cwtl
es
fsts
nop
push
test
test
pop
arpl
cltd
bound
and
outsb
addr16
aas
in
push
push
aas
imul
jns
adc
xchg
push
out
pusha
out
sbb
in
dec
lock
adc
shr
inc
dec
jp
mov
inc
pop
outsl
imul
movsl
mov
mov
pusha
adc
push
jmp
pushf
repz
imul
add
and
mov
mov
nop
jmp
scas
or
ss
cld
clc
cli
lods
call
lea
fistps
mov
jecxz
loopne
or
lea
sub
and
dec
in
or
adc
cli
push
neg
mov
lret
sub
out
pop
sbb
mov
lret
in
loop
nop
or
cmpsb
inc
lds
add
mov
mov
scas
xchg
sbb
popl
dec
push
adc
and
or
pop
jbe
ret
pop
dec
arpl
add
enter
ret
int
imul
rorb
popa
out
xchg
aam
jbe
rolb
jb
fnstsw
or
mov
xor
int
ficoms
bound
lahf
out
daa
int3
prefetch
dec
les
push
aad
inc
jecxz
mov
dec
movsb
sub
mov
fnstenv
sub
push
sbb
dec
jnp
cmpl
loop
and
mov
jae
jb
push
je
adc
les
pop
sub
cs
faddl
mov
jbe
ja
mov
je
dec
xchg
ljmp
rcrb
fsubs
adc
js
mov
dec
loop
aas
test
dec
xchg
and
xchg
inc
push
out
inc
and
dec
add
mov
and
mov
push
pop
mov
insb
imul
in
sub
lahf
mov
arpl
sbb
stc
dec
aad
loopne
mov
addr16
or
sarb
movsl
rcll
sbb
imul
sbb
lea
push
cwtl
dec
test
icebp
xchg
cmpsl
test
popf
jg
jae
pop
stc
ja
cltd
mov
mov
push
int3
in
test
test
mov
mov
outsb
sub
lret
pop
lea
dec
pop
jmp
sub
aam
adc
in
and
xchg
xchg
insl
mov
dec
rorb
xchg
outsl
sbb
sub
cmp
xor
outsl
jmp
icebp
mov
imul
icebp
insb
inc
test
xchg
sahf
test
arpl
xor
out
sub
dec
lds
js
add
sub
mov
add
and
movsb
outsl
dec
std
fidivrl
cltd
imul
or
in
stos
ss
xor
jbe
push
fldenv
sbb
fldl
out
fisttps
sub
shlb
adc
andl
cmove
inc
adcb
sbb
dec
mov
sbb
xor
cmp
cmpsb
iret
jns
outsb
sbb
push
in
data16
and
aam
push
pop
push
mov
pop
iret
aad
fdivr
pinsrw
popa
ljmp
cmp
push
ds
lret
add
xchg
sub
insl
push
mov
repz
out
mov
xor
lods
imul
sub
and
or
jno
scas
dec
mul
mov
sbb
xor
iret
xchg
jbe
scas
nop
and
enter
sub
pop
and
sub
movsb
sbb
out
xchg
inc
daa
mov
in
addr16
xorl
lods
daa
popf
pop
fsts
shl
fidivrl
mov
push
fsts
in
mov
add
xchg
push
pop
mov
xchg
test
andnps
xor
pop
les
mov
mov
in
cmp
inc
ret
popl
adc
mov
test
filds
push
mov
cltd
mov
jle
push
pop
add
push
enter
mov
mov
outsb
add
cmp
push
jmp
sbb
insb
out
out
movl
cltd
lds
cwtl
xchg
cmpsl
pop
mov
jo
test
test
mov
cmp
mov
rcrb
mov
out
fistpl
mov
pop
jg
lahf
mov
sti
lret
fsubrl
sub
out
pusha
ja
cmp
outsb
xchg
ss
les
xor
in
stos
sar
dec
arpl
add
cmc
xor
pop
xchg
faddp
xor
orl
fcmovnbe
inc
es
push
and
and
push
movsl
jg,pn
inc
or
jl
minps
ds
or
inc
adc
roll
aaa
pop
movsb
and
in
xchg
jmp
jb
xchg
mov
push
mov
jecxz
rcrb
xor
out
mov
outsb
les
mov
and
push
cmp
pop
mov
push
and
push
dec
jns
sub
lahf
aaa
mov
and
gs
inc
mov
into
out
jmp
and
aam
mov
or
leave
inc
xchg
test
cmc
cli
mov
stc
dec
bound
or
mov
lods
loope
mov
inc
psllq
cmp
insl
and
and
push
ret
pop
jmp
pop
push
mov
dec
xor
test
sbb
dec
jge
out
cmpsl
mov
shr
test
pop
xor
in
dec
push
lods
mov
push
xchg
jl
lret
enter
std
sub
add
in
sahf
insl
jp
test
hlt
xor
out
jae
in
adc
mov
dec
sbb
je
cmp
scas
cmpsl
push
ret
fidivl
sub
jns
add
xor
jne
cmc
test
jnp
add
jl
mov
sarb
sarb
xor
mov
mov
outsl
sti
inc
in
inc
mov
test
jbe
popa
movsb
mov
sbb
cli
mov
jo
lock
jecxz
adc
mov
sbb
movsb
adc
enter
pop
inc
mov
popf
xchg
mov
sub
jmp
orl
ljmp
sbb
xchg
push
sahf
cmc
aam
mov
fs
mov
xchg
fmuls
sbb
sub
in
js
outsb
icebp
rcr
aam
mov
xchg
imul
fcomip
lcall
into
sub
out
lods
pop
pop
or
dec
inc
pop
mov
out
ja
mov
adc
mov
mov
inc
adc
inc
cmp
push
ja
sbb
std
insl
xchg
mov
pop
ret
and
lret
cmp
lcall
sub
inc
mov
or
dec
fidivs
leave
push
outsb
dec
rcl
pop
repz
cmp
mov
mov
fwait
es
rclb
add
sub
in
mov
mov
out
aaa
mov
mov
cmpsb
ret
add
int
and
cmp
insb
sahf
cmp
inc
cmpsl
inc
xchg
and
stos
dec
xlat
fstp
dec
or
jmp
xchg
out
mov
stc
mov
outsl
or
mov
sbb
pop
mov
daa
adc
mov
and
xchg
lock
and
cld
sub
and
mov
cs
jne
mov
mov
ficoms
negb
or
jno
pop
jno
pop
xlat
mov
lock
push
pop
shlb
sbb
jmp
les
ja
rcll
xchg
mov
loopne
sub
xchg
cmp
ds
insl
js
movsb
jle
add
mov
enter
jl
and
mov
pop
xor
sbb
jno
add
mov
cmp
dec
dec
push
outsb
sarl
sbb
addr16
pop
adc
rolb
je
xorl
push
call
inc
rcll
cwtl
jecxz
cmpb
fs
mov
fdivp
add
add
push
jl
ds
mov
jnp
add
xorb
pop
test
push
and
push
pop
jge
mov
adc
addr16
and
leave
push
mov
lods
or
fisubrl
out
lahf
mov
mov
mov
jmp
jbe
lods
pushf
cmp
push
imul
and
fwait
lods
sbb
mov
xchg
call
push
sub
or
cmpsl
sub
jb
cmpsl
fldl
inc
sub
int3
push
outsl
call
add
out
sbb
adc
jge
push
dec
test
sti
push
push
push
scas
xor
push
loop
jg
xor
jo
out
mov
cwtl
sub
or
daa
xchg
or
inc
xchg
je
js
dec
in
mov
xchg
jno
push
fs
sbb
sub
add
sbb
xchg
out
je
mov
push
aam
inc
lock
pop
test
cmpb
add
stos
jl
xchg
in
imul
push
mov
push
stc
popa
imul
push
lea
sbb
in
xchg
add
mov
cld
data16
sti
nop
inc
pop
sbb
imul
repz
or
in
mov
mov
lret
lret
and
mov
in
push
xchg
aam
lock
jmp
flds
sbb
fs
add
test
iret
in
inc
mov
push
cltd
sbb
lods
mov
sub
jle
mov
jb
int3
ret
cmp
adc
adc
movsb
sbb
out
in
fiadds
pop
out
or
pop
rolb
lret
loop
xor
ror
sbb
sbb
mov
sub
xchg
iret
stos
pushf
mov
mov
jo
mov
jecxz
mov
xor
pop
mov
std
pop
je
sbb
or
and
mov
adc
xor
add
jns
jo
sbb
imul
pop
push
push
and
mov
clc
stos
cmp
call
sub
ds
cmp
add
fimull
jns
pop
cmp
sbb
je
jmp
inc
add
pop
add
mov
pop
repnz
fyl2x
add
dec
add
pusha
lea
sbb
push
in
or
bound
sub
xorl
test
subw
xchg
mov
es
imul
xor
cmp
cmpsl
mov
das
inc
adcl
xchg
dec
pop
jp
cmc
popf
iret
sbb
mov
insb
fldcw
iret
nop
push
les
lds
fdivl
xor
js
pop
in
add
sbb
and
dec
add
jnp
xchg
cmp
sub
not
cmpsl
sub
dec
cmc
aad
xor
stos
sub
jmp
pushf
loopne
jl
pop
jl
pop
test
xchg
shrb
outsb
repz
divl
mov
xor
add
cmp
jb
ret
in
test
in
bound
dec
out
mov
ja
inc
lds
pop
xor
shlb
cmp
xor
and
outsl
adc
mov
out
mov
mov
mov
iret
pop
loopne
pop
push
fwait
shl
movntps
inc
sub
in
inc
unpckhps
jb
sti
cmp
scas
lret
mov
stos
scas
pop
in
jge
in
loope
xor
aam
dec
fcomps
xor
les
mov
push
out
inc
push
fimuls
add
fdivrl
xor
rcrl
es
xor
repnz
jb
sti
lea
pop
stc
jge
or
xorl
mov
or
sbb
mov
icebp
inc
icebp
cmpsl
in
fldcw
cld
jns
xor
cld
loopne
pop
cmc
aam
fsubrs
xchg
mov
arpl
xlat
ljmp
in
jge
mov
xor
push
sbb
pop
xlat
dec
mov
inc
mov
xor
and
jmp
enter
rorl
out
ret
inc
dec
fdivrl
inc
mov
push
push
stc
add
pusha
shrl
jmp
in
push
aas
push
adc
in
hlt
add
bound
ds
out
out
inc
in
xchg
push
ds
mov
dec
into
sub
push
rcrb
sub
dec
out
push
push
cmpb
popf
xor
mov
out
jg
test
push
xchg
in
mov
loopne
cmp
lret
push
iret
push
rcl
add
mov
xchg
inc
lods
out
dec
xchg
xchg
and
or
or
jb
mov
jnp
rcll
in
mov
sbb
jae
cmp
out
popf
xchg
xorl
fwait
leave
lahf
mov
inc
mov
test
dec
and
scas
adc
fwait
sbb
mov
stos
sbb
sub
add
sarl
sub
jecxz
clc
fnstcw
sub
inc
call
xor
mov
je
cmc
dec
cmpsl
cmpsl
test
inc
popa
cs
out
xchg
jne
ljmp
inc
add
dec
cmp
xchg
and
loop
or
sub
inc
mov
jns
mov
cltd
dec
xchg
popf
stos
jae
jmp
lock
es
xchg
lods
out
adc
mov
ds
pop
int3
movsl
push
les
out
movsl
sahf
negb
and
adc
mov
jbe
jae
scas
or
pop
fld
xchg
pushf
fiaddl
push
leave
inc
lea
nop
xlat
adc
out
cmp
lea
xchg
sub
ret
out
lea
inc
and
int3
mov
cmp
loope
mov
xchg
push
jae
push
cmp
std
fiadds
push
fs
pop
repnz
jg
mov
mov
pop
fcmovbe
lods
and
push
das
sub
sbb
dec
fdivrs
outsl
mov
hlt
scas
shrl
pop
xor
mov
jg
cmp
outsl
lds
and
add
lock
jp
xor
cmp
cmp
bound
out
dec
sbb
ljmp
sarb
nop
hlt
les
and
lahf
outsb
sahf
mov
cmpl
gs
repnz
popa
adc
or
jno
out
push
inc
sub
lock
or
imul
mov
fwait
adcb
mov
addl
xchg
pop
fwait
sub
or
mov
pop
push
lock
inc
mov
add
lds
adcl
inc
jo
add
inc
push
scas
fadds
jmp
rcrl
cmp
jns
push
imul
cmp
test
mov
loope
stos
in
xor
jno
mov
faddp
mov
push
sbb
ljmp
pop
sub
ds
mov
aas
fimuls
jne
jecxz
imul
jge
or
dec
insb
or
orl
popf
mov
push
bound
pop
and
jle
jle
mov
inc
shl
dec
stos
fimuls
out
es
xor
or
or
sbb
test
iret
mov
jb
das
push
loope
pop
sbb
add
cld
or
jo
imul
jb
sub
cmp
daa
xlat
and
cmp
push
jnp
pushf
or
and
cmp
scas
dec
adc
mov
sub
outsl
xorb
sub
pusha
les
push
lock
push
pop
aas
sbb
scas
mov
and
repz
into
pusha
lods
dec
adc
jo
hlt
ucomiss
push
adc
add
cmp
testl
xchg
push
pop
dec
jae
stos
loopne
out
jns
mov
ret
sahf
pushf
cmp
iret
iret
mov
jle
dec
sub
or
jmp
rcrb
pusha
icebp
mov
mov
hlt
mov
sbb
outsb
sub
push
outsl
jp
pop
mov
dec
repz
and
nop
push
dec
scas
jb
je
fucomip
cmp
adc
push
popa
rcl
adc
lcall
xor
push
ss
mov
mov
cli
jg
jae
fwait
data16
adc
fcoms
mov
xchg
movsb
fidivs
or
jl
scas
add
pop
stos
mov
xchg
js
loop
adc
lret
aad
cmp
push
and
call
and
pop
sbb
data16
fwait
add
jne
push
in
adc
push
and
fs
in
mov
push
stos
dec
adc
je
lods
pop
aam
in
cmpsl
repnz
sub
je
or
rorl
add
cmc
mov
insl
or
mov
cmp
pop
in
rcll
sbb
mov
orb
pop
dec
xor
imul
shll
cmp
mov
je
and
mov
jns
gs
adc
lcall
xlat
push
addps
shrb
push
mov
mov
or
inc
clc
scas
arpl
push
jl
add
add
xchg
add
pushf
dec
ds
jnp
cld
add
sub
xchg
lods
dec
jns
into
sbb
mov
aaa
mov
addb
jecxz
mov
rcr
xor
jne
aam
sbb
mov
jge
decb
dec
sarb
push
sahf
das
adcl
pop
orl
lods
out
mov
lds
mov
xchg
clc
outsb
inc
xchg
fimull
insl
daa
insb
popa
mov
rorl
sub
mov
outsl
push
push
mov
dec
rclb
or
mov
stos
int
adc
pop
mov
rcr
sub
add
das
pop
pushf
pop
mov
mov
lods
or
aas
sahf
std
repnz
lcall
shl
ret
push
sub
pop
sub
sub
mov
inc
add
outsb
pop
sahf
std
jl,pt
pop
fisttpl
and
shrb
in
test
adc
adc
incb
mov
xor
sub
jno
cmp
and
dec
cmc
enter
push
pushl
nop
inc
cmp
out
imul
ds
aam
aam
fisubs
adc
lret
jne
jge
clc
or
dec
mov
pop
mov
out
pusha
pop
out
dec
jae
mov
andl
xchg
lea
cltd
lret
or
dec
mov
push
cmp
dec
movsb
adc
mov
in
pop
sbb
notl
sbbb
clc
inc
repnz
popf
jl,pt
sub
pop
push
pushf
cmp
lods
push
sub
and
ffree
jae
sbb
and
inc
cli
inc
adc
outsl
mov
and
jae
pusha
orl
orl
das
push
mov
xor
sub
mov
inc
push
xor
out
sub
lret
cmc
shlb
inc
cmp
mov
add
cmp
hlt
push
xchg
sbb
pusha
inc
pop
inc
xchg
pusha
loope
xor
push
pushf
inc
into
sub
aam
mov
cmp
push
and
jl
mov
pushf
insb
test
lret
pop
mov
mov
sbb
iret
les
arpl
pusha
and
cmp
jb
inc
cmpl
mov
insl
mov
xor
insl
xchg
cmpsl
or
jno
jp
xchg
lods
xchg
cmpsb
mov
xchg
popa
pop
shll
pop
pop
and
fucomip
or
mov
xchg
xlat
cmp
dec
mov
outsb
sar
sti
jb
or
jb
stc
in
loope
xchg
add
rclb
loop
xor
xchg
dec
aam
mov
xor
or
adc
mov
scas
cs
cltd
icebp
shr
pop
hlt
or
imul
dec
sub
fimuls
adc
and
jge
adc
and
mov
xchg
push
loope
xchg
cmp
xchg
int
js
pop
out
insl
fiaddl
stc
pop
and
mov
repz
stos
pop
add
push
xor
sbb
xchg
add
cmpsb
bound
adc
adc
sbb
dec
pop
rcll
xchg
jns
add
xor
push
repnz
sub
cli
lret
mov
xor
xor
lret
sbb
pop
ficomps
jns
in
popf
leave
nop
fisubs
je
fsub
pop
push
mov
movsl
hlt
or
inc
pop
mov
lret
jbe
xchg
mov
mov
lret
xorb
xor
ret
jb
mov
pop
icebp
in
add
data16
xor
and
and
out
mov
jmp
icebp
dec
pop
mov
cmp
xchg
inc
cwtl
sbbb
mov
cwtl
aas
sahf
push
jne
push
popa
adc
addl
cmp
mov
mov
ds
jb
je
addb
int
test
fs
outsb
xor
inc
dec
aam
rolb
div
cld
scas
cmpsl
lock
rcl
jno
stos
mov
pop
sub
mov
dec
outsl
fdivs
rcr
into
pop
popf
cs
xchg
loope
shl
add
lret
repz
imul
sbb
test
sahf
shrb
and
shl
cmpsl
xchg
cltd
lea
sti
add
xchg
fisttpll
enter
cltd
mov
rcl
repz
push
jae
insl
imulb
test
dec
jmp
xor
mov
leave
or
cmpsl
mov
xchg
jg
adc
imul
stos
sub
pop
fsubs
mov
jmp
test
clc
bsr
imul
mov
jp
xchg
das
jnp
imul
out
jae
inc
mov
das
pusha
insl
or
adc
mov
mov
imul
test
test
adc
mov
insb
xor
mov
mov
add
je
scas
cmp
push
lds
call
rol
lret
sbb
fcoml
lret
shlb
out
mov
out
cmpsb
imul
das
hlt
divb
inc
rorb
mov
inc
pusha
cmp
mov
and
or
sbb
and
or
mov
sub
mov
push
iret
cmp
mov
mov
fstpt
in
and
shrb
rorl
dec
out
inc
test
sub
or
jecxz
mov
cmp
lea
adc
xor
insl
cmp
fidivrl
rclb
push
mov
lea
sahf
or
xchg
lds
call
mov
lahf
sbb
fsubr
out
es
jo
sti
xchg
iret
pop
pushf
sar
sub
js
fstpt
mov
jo
test
or
loop
test
pop
jmp
test
xchg
cmp
hlt
cmpsl
pop
mov
sti
imulb
movsb
cmpsl
jl
cmp
aam
mov
dec
lds
aaa
jmp
dec
xchg
xlat
stos
sti
inc
adc
jecxz
stc
dec
aam
mov
es
cmp
push
into
test
cmc
sub
fidivl
inc
adc
jmp
xchg
jnp
inc
pop
sbbl
mov
xchg
cmp
adc
xor
cmpl
inc
int3
mov
jno
out
mov
pop
rolb
int
cmp
push
xchg
xchg
mov
es
data16
mov
roll
cs
inc
dec
in
js
and
or
lds
test
loope
insb
cmp
adc
fs
add
xor
cmp
adc
add
in
inc
adc
xor
pop
push
fadds
add
popf
pop
dec
push
ss
dec
xchg
xchg
pop
sbb
aaa
push
pop
add
push
cmp
dec
dec
inc
xchg
push
sub
cmp
in
jl
orb
insb
sub
pop
inc
pop
mov
std
lcall
jo
out
adc
pop
inc
add
mov
push
mov
lods
lods
popf
add
mov
pop
loopne
pop
cmpsb
xchg
popa
add
xchg
loopne
sti
sbb
or
call
outsb
xchg
sub
or
xchg
mov
xorb
or
inc
daa
loope
adc
jo
dec
cmp
pop
ss
add
outsl
inc
pop
jg
inc
fisubl
shll
xchg
pop
add
push
xchg
add
dec
or
push
cs
dec
fidivrl
mov
test
dec
mov
push
push
jmp
inc
mov
mov
stos
daa
add
jnp
pop
pop
daa
xor
out
inc
insb
popa
popf
insb
arpl
mov
popa
orb
scas
inc
mov
cmp
aas
and
add
push
ja
mov
shlb
and
mov
dec
popf
mov
cld
es
xlat
xchg
sub
lea
mov
pop
xor
loop
bound
sbb
mov
iret
mov
adc
sub
jb
or
push
ret
and
jb
mov
xchg
or
add
outsb
pop
fcompl
ret
enter
out
outsl
mov
mulb
inc
lock
lock
ja
push
push
mov
mov
pop
mov
inc
mov
jle
shrb
and
xor
push
es
enter
pop
mov
xchg
stc
sbbb
push
loopne
add
xchg
and
cmp
ficoms
out
in
gs
aam
lret
popf
xchg
mov
orl
jp
lods
jl
sbb
adc
int3
imul
pusha
cmp
mov
xor
loope
in
mov
rol
lcall
jbe
pop
outsl
aaa
popa
and
mov
cmp
add
and
xchg
lock
adc
rcll
xchg
jb
test
stos
push
or
sahf
dec
es
sub
sub
out
fmull
and
cmc
mov
stos
push
into
mov
pop
pop
inc
mov
dec
aaa
jl
mov
add
outsb
sti
push
push
xchg
jbe
icebp
ret
arpl
scas
xor
cmpb
pop
js
mov
xor
push
std
xchg
dec
or
mov
mov
ljmp
daa
aaa
insb
fdivs
scas
arpl
ret
push
outsb
stos
movsl
xor
mov
shlb
inc
stos
repz
mul
in
mov
jb
shl
icebp
cmpsb
cmc
stc
mov
cmp
mov
imul
cmc
imul
jecxz
mov
add
push
and
cmp
xchg
fwait
pop
cli
clc
jno
jmp
cmp
or
mov
jg
or
jno
pop
es
outsb
cmpsl
and
dec
push
inc
mov
mov
and
inc
je
mov
iret
cmp
cmp
aaa
inc
test
fdivp
xchg
testl
push
daa
lock
mov
dec
arpl
sbb
pop
bound
lock
adc
gs
sbb
jbe
into
aas
dec
or
sbb
movsb
movsl
aaa
aam
enter
mov
repz
testl
sbb
sar
dec
je
int3
int
adc
mov
cmp
divl
push
int
xchg
sbb
sahf
sbb
ret
test
mov
push
xor
pop
bound
rorl
mov
outsb
push
fistps
push
out
sub
dec
rorl
and
push
movsb
movsb
inc
pusha
xchg
inc
in
lds
add
fnstsw
movsb
enter
out
and
mov
adc
ret
xor
mov
adc
mov
hlt
pop
sub
adc
mov
mov
mov
jg
sbbb
loope
inc
lods
sbb
enter
stc
xchg
or
inc
ds
pop
das
loop
inc
push
and
lods
cmp
pop
icebp
lods
arpl
mov
pop
sbb
add
push
outsl
pop
sub
cmp
movb
shr
sbb
les
gs
scas
pop
loop
or
fidivl
jmp
movsl
adc
mov
ds
dec
jecxz
loopne
sarl
adc
pop
adc
jp
popf
pop
mov
fwait
or
adc
mov
xor
xchg
add
sti
aaa
push
push
repz
jo
and
jg
or
jne
sub
mov
popf
inc
in
jp
jno
js
cwtl
or
sub
mov
lahf
push
pop
and
lahf
push
aas
jg
es
or
mov
push
arpl
and
mov
mov
pop
inc
mov
sub
jmp
inc
add
adc
inc
mov
adc
xlat
xchg
adc
mov
xchg
jp
imul
fdivs
pop
test
cmpb
sti
sub
jle
sub
imul
cmp
arpl
pop
and
mov
mov
sarl
mov
pop
cmc
xlat
pop
cmc
int
pop
inc
bound
in
mov
gs
pop
stos
or
fdivp
bound
push
sbb
jae
rol
icebp
into
pop
add
add
jmp
cwtl
inc
int
sub
lds
mov
gs
out
mov
ss
jl
iret
cli
pop
jbe
movsl
push
lret
sbb
and
xor
test
jno
inc
mov
bnd
in
mov
out
lcall
fsubrs
dec
add
ss
cmp
xchg
add
xchg
lea
ret
out
inc
mov
mov
xor
lock
in
cmp
rol
and
adc
jo
popa
fsubl
inc
icebp
adc
sbb
stc
test
xor
addr16
cltd
stos
scas
mov
adc
adc
fnstsw
sbb
imulb
fnsave
and
jle
scas
add
fldl
call
rcll
adc
test
mov
inc
inc
cmpsl
pop
sub
xor
push
push
adc
xchg
frstor
mov
inc
sbb
ljmp
iret
sbb
push
adc
aad
mov
xor
dec
repz
out
pop
xor
pop
out
popl
inc
hlt
test
jns
fsubr
sub
add
xorb
repz
in
leave
aad
jbe
add
mov
decl
and
insl
inc
fucomi
inc
xor
and
movsl
popa
jl
inc
fwait
cmc
dec
popf
mov
pop
loopne
cs
test
outsb
dec
fildl
fs
cwtl
sbb
repnz
insl
pop
ret
jl
jo
out
in
mul
sub
ljmp
gs
out
lea
aad
fcompl
xchg
sbb
rclb
fisttps
outsl
pop
adc
ret
mov
push
in
or
mulb
outsb
adc
fs
in
inc
fsubl
add
fldlg2
gs
pop
mov
pop
sub
cmp
dec
movsb
cs
addr16
push
xor
push
cmc
push
in
subb
rclb
loop
push
lret
or
aaa
sub
sbb
fiaddl
push
ss
sub
xor
xor
adc
es
xor
or
jo
insl
scas
sbbb
push
out
or
fwait
mov
addr16
lsl
cmp
adc
pop
cs
sub
mov
pushf
mov
push
inc
jns
test
dec
sarl
xchg
fbstp
jmp
jg
fimuls
xor
pop
push
jnp
jae
outsl
and
or
lret
mov
sbb
nop
popa
pop
ss
mov
fsqrt
sub
clc
std
sub
mov
sub
rcrl
dec
sub
pop
sub
xlat
xchg
adc
cltd
inc
and
cmp
movsl
push
mov
lret
xchg
cwtl
fmull
jo
fmul
loop
sahf
insl
push
and
sub
daa
dec
popa
mov
lret
int3
jbe
inc
mov
mov
stos
mov
jbe
inc
arpl
cmpsb
mov
cmp
push
in
faddl
push
scas
jl
rclb
cmp
dec
repz
shrb
test
xchg
pop
adc
mov
cmpsl
arpl
bnd
arpl
cli
js
rol
gs
out
je
ss
adc
gs
inc
repnz
inc
leave
sbb
das
movsb
cmp
xchg
fisttpll
sbb
xor
rcrb
cmpsl
jne
imul
jne
adc
jo
cmp
imul
xor
sti
std
orb
add
addb
lds
addr16
mov
xorb
imul
push
and
sbb
and
outsl
out
xor
hlt
fisubs
jb
int
or
jno
sub
push
ret
jb
adc
push
pushf
xrelease
call
or
sbb
pop
je
mov
jle
das
push
and
cmp
mov
xchg
sbb
xchg
dec
push
lret
mov
dec
jne
push
dec
fsubl
cwtl
sbb
neg
xchg
add
rcl
stos
pop
mov
pop
add
cmp
cli
pushf
pop
add
aaa
sub
xlat
xor
push
es
add
in
cmpsb
xchg
fadd
popa
movsb
sbb
and
call
pop
sarb
ret
jo
pop
sbb
cmpsb
in
xor
aad
xchg
add
imul
ljmp
jbe
mov
lds
jne
arpl
and
loope
xchg
dec
sub
inc
dec
outsl
push
popf
sub
mov
push
adc
or
popf
daa
sub
enter
xor
xchg
mov
adc
andb
xlat
cmp
ja
fildll
in
adc
loope
mov
adc
mov
cltd
mov
mov
insl
int
mov
xchg
push
cwtl
leave
add
jne
jb
lret
enter
bound
in
out
subl
push
push
mov
cmpsl
jb
xor
pop
enter
pop
add
adc
xchg
out
pop
enter
push
mov
in
xchg
outsb
ljmp
and
mov
cld
stos
dec
scas
pop
mov
testb
sbb
pop
mov
push
add
das
mov
dec
mov
inc
test
mov
sarl
mov
jns
push
mov
popf
inc
adc
push
lret
mov
cmp
movsl
pop
dec
out
push
inc
outsb
jge
dec
int3
push
sbb
mov
xlat
mov
arpl
add
ss
cmc
frstor
fldl
jl
jg
dec
inc
mov
add
test
movsb
jns
jno
pusha
mov
add
mov
xchg
dec
mov
mov
loop
dec
jns
xor
stos
sahf
mov
hlt
lods
fstpl
rcll
cwtl
pop
xor
jmp
ficompl
nop
bound
push
mov
iret
xchg
jle
xor
xchg
stos
pop
cmpsl
cli
stc
mov
insl
dec
ret
xchg
hlt
mov
in
sub
mov
sbb
dec
sbb
fsubr
test
outsl
bnd
add
mov
sub
sbbl
test
and
out
and
dec
xor
xor
fnstenv
les
sbb
dec
ds
inc
aad
push
jo
cmp
fs
stos
add
dec
push
dec
sbb
leave
enter
xor
mov
lods
lds
inc
stc
and
mov
inc
fbstp
rorb
lcall
ja
loopne
arpl
sub
shlb
sbb
sub
add
aas
fs
xchg
dec
or
xor
imul
dec
bound
mov
mov
mov
or
dec
jle
mov
mov
xchg
jo
mov
add
out
inc
je
idivl
fwait
mov
pop
daa
dec
mov
shlb
in
cmp
dec
push
fmul
xchg
push
cmp
movsb
jnp
ljmp
pop
jmp
incl
dec
test
jmp
test
dec
hlt
aas
cli
jnp,pt
jmp
xlat
pop
out
xor
arpl
jnp
xchg
dec
loop
lahf
scas
cmpsb
loop
pop
dec
inc
cs
and
pop
jne
add
xor
sti
cmp
std
jns
sub
adc
cmp
cmp
dec
call
mov
or
popf
pushf
and
inc
inc
mov
imull
aas
add
sub
xchg
sub
adc
xor
pop
imul
jo
ds
es
adc
cmp
jge
frstor
jg
inc
xchg
lods
mov
adc
mov
neg
test
or
dec
pop
daa
sbb
mov
xor
cmpsl
cs
xor
adc
push
xchg
xchg
rclb
rcl
add
push
cmp
mov
test
ss
movl
pop
dec
cmpsl
and
xchg
mov
stc
mov
push
clc
in
cmc
mov
or
rol
mov
daa
ljmp
mov
jge
stc
and
lcall
or
clc
sub
fisttpl
test
stos
loopne
inc
sbb
mov
jne
test
pop
cmp
lods
hlt
dec
popf
call
dec
mov
xor
test
stc
jl
push
xor
mov
jge
dec
sub
or
jb
sbb
call
adc
addr16
adc
sub
shll
xor
sub
and
fbstp
fcmovnb
inc
mov
jne
mov
push
cmp
lret
icebp
pop
sub
mov
test
test
adc
aad
lret
mov
xchg
arpl
cmc
push
adc
gs
sbb
dec
dec
push
inc
pop
mov
notl
scas
push
dec
mov
addl
lock
daa
dec
fists
bound
bound
add
test
ret
daa
mov
sbbl
or
mov
das
in
test
push
clc
sub
or
add
les
arpl
addr16
dec
pop
ret
ja
movsl
jbe
dec
sti
pushf
jb
push
xchg
test
mov
mov
shlb
test
ljmp
cmp
jbe
or
scas
xorb
aad
gs
or
loop
mov
ss
ja
xchg
ss
andl
xchg
inc
jno
push
cli
cmpsb
movsl
shrb
cmp
adc
and
cltd
or
fldenv
xchg
cmp
enter
mov
js
mov
push
daa
ss
imul
stos
ret
jecxz
lahf
inc
xchg
adc
adc
xor
sub
jno
pop
scas
xor
mov
xchg
sbb
jg
add
sub
mov
xor
ret
sbb
nop
frstor
scas
jmp
dec
dec
mov
xor
jbe
pop
mov
cld
je
sar
pop
loop
add
xlat
in
mov
dec
mov
shr
mov
adc
or
std
rcll
into
shll
mov
sbb
mov
scas
push
inc
test
loope
push
movsb
sbb
shlb
loopne
inc
sub
push
mov
iret
and
out
sbb
gs
mov
push
cwtl
cmp
sti
mov
push
js
lea
adc
lret
xchg
sarl
leave
sbb
add
test
inc
push
mov
stos
adcl
fistpll
enter
push
xor
sbb
mov
inc
sbb
mov
clc
dec
filds
mov
ljmp
iret
cli
sbb
xchg
mov
andb
push
mov
aam
in
adc
mov
dec
xacquire
inc
ljmp
ret
mov
lods
ffree
cmp
stos
sbb
sbb
jb
jbe
cmpsb
hlt
jbe
fidivrs
push
adc
mov
lods
clc
pop
push
int3
mov
inc
add
sub
fs
add
sub
arpl
jns
int3
add
sbb
sbb
sub
add
pusha
out
and
sbb
pop
and
pop
aad
lods
mov
aad
pop
jg
xlat
clc
testl
or
push
sarb
ss
dec
in
shrl
ds
mov
icebp
fsubs
and
mov
push
dec
fsubrl
popf
shr
imul
pop
mov
cltd
cli
push
and
daa
mov
lds
xlat
test
mov
dec
loop
lahf
dec
outsb
js
mov
popf
cmpsb
aas
jp
addr16
mov
add
pusha
scas
imul
movsl
push
mov
dec
hlt
pop
push
cltd
push
xorb
jp
nop
out
mov
cltd
scas
ja
fadds
adc
fcomps
pop
cwtl
imul
inc
in
mov
sbb
jne
jbe
xchg
sub
leave
xchg
data16
insb
pop
dec
loope
fs
pusha
push
hlt
dec
pop
lret
orl
stos
lock
iret
dec
fdivrp
js
sbb
adc
inc
or
scas
xchg
cmp
test
jns
adc
xor
addr16
push
jecxz
inc
inc
fwait
je
inc
test
dec
xchg
out
xchg
push
adc
mov
add
adc
or
xlat
jle
mov
fs
sbb
test
push
or
mov
cli
pushf
mov
insb
mov
mov
jmp
clc
lock
psllw
cmc
gs
nop
sarb
inc
sbb
xor
and
fucomp
fldl
daa
adc
pop
fstl
xor
enter
mov
adc
add
xchg
and
inc
loopne
sbbb
jp
push
sahf
mov
shr
inc
mov
push
adc
outsb
or
rcrb
mov
ret
test
rorl
stos
insl
pop
mov
sbb
push
pop
loope
cwtl
cmpsb
in
or
sbb
sbb
ret
ljmp
pushf
or
push
mov
out
inc
inc
int3
sub
xor
je,pt
lret
jmp
inc
nop
inc
mov
jle
imul
fidivrs
dec
xorb
and
cmpsb
in
into
or
sub
and
add
fisubs
les
or
xor
nop
clc
mov
push
pop
cld
les
cmp
jbe
dec
stc
fwait
push
pop
out
or
dec
mov
lods
cmp
repz
mov
sub
pusha
mov
jge
dec
lds
inc
push
repz
stos
repnz
fimull
jns
test
add
arpl
push
shll
and
les
push
cmp
xchg
push
mov
xchg
sahf
lock
inc
loop
ds
notl
mov
push
sub
fnstsw
aaa
add
pop
xchg
in
sub
mov
mov
sbb
shlb
mov
dec
pusha
adc
cld
inc
repnz
dec
sub
sbb
test
dec
mov
les
pop
mov
stos
in
shlb
adc
pop
outsl
xchg
or
aas
inc
imul
pop
pop
and
cmp
cmpsb
and
out
xchg
and
jbe
jle
loopne
add
test
mov
lcall
dec
dec
cmp
mov
sbb
mov
and
js
test
insl
xor
adc
lcall
inc
adc
mov
push
xchg
inc
outsb
stc
inc
test
xlat
mov
sbb
cmp
pop
data16
fwait
iret
fstl
cmp
movsl
dec
mov
loope
dec
adc
ja
aam
push
xor
gs
sbb
pop
or
cmp
ret
jecxz
add
mov
push
xchg
addb
pop
inc
xor
add
fadd
push
bnd
add
adc
mov
ljmp
stos
cmp
sub
das
xlat
out
cmc
popa
ret
in
sub
inc
xor
pop
sub
cs
and
adcb
push
cs
cmp
sbb
push
mov
shrb
std
ret
push
push
inc
pushf
pop
insb
mov
xchg
xor
dec
inc
ret
mov
je
xchg
imull
sub
cmp
aaa
pop
stos
mov
or
ss
mov
pop
xlat
stos
imul
mov
xor
pop
adc
jl
lret
test
xchg
xchg
out
cmp
sub
xchg
xlat
inc
in
mov
add
int
adc
loop
std
sbb
jg
pusha
xlat
push
mov
dec
xor
out
or
and
mov
jge
iret
mov
sarl
add
jmp
sti
test
cs
jl
add
mov
loope
sarb
sarl
jnp
xchg
int3
jmp
lds
sbb
imul
test
enter
jne
les
addr16
and
in
es
das
push
jg
repz
lahf
sahf
push
mov
cmc
hlt
jns
in
push
lds
scas
cmc
test
jp,pn
mov
jb
setnp
fs
imul
ret
nop
jecxz
ss
adc
inc
add
push
scas
push
sub
sbb
or
xor
add
movw
rorb
stos
sub
xchg
testb
sbb
sub
mul
cmp
fsub
pop
jp
xchg
mov
aaa
lcall
ja
iret
push
xor
dec
subb
shlb
out
lods
out
dec
cmp
outsl
mov
pop
xchg
pop
xchg
jp
lret
push
jle
push
sub
xchg
cmc
lret
int
push
in
sbb
mov
out
mov
pushl
mov
and
out
out
inc
push
loope
ds
mov
out
pusha
outsl
outsl
mov
mov
fldcw
test
das
pop
insl
dec
dec
lret
mov
mov
insl
pop
insl
dec
add
add
lret
pop
jne
push
lahf
mov
je
sbb
or
mov
push
mov
mov
loope
out
js
jg
and
hlt
jecxz
mov
idiv
out
daa
add
enter
ja
mov
iret
mov
es
inc
repnz
add
xchg
xlat
xor
imul
loopne
push
in
jge
xchg
sub
int3
cmp
xor
xchg
fwait
jge
sbb
and
in
jge
ds
das
hlt
mov
fwait
ret
fdivl
jle
bound
xchg
sbb
lods
pop
imul
xchg
cmp
les
pusha
mov
and
fs
jae
jne
imull
mov
mov
mov
mov
xchg
push
sti
xor
sub
sub
stc
push
mov
pop
pop
imul
cmp
mov
pop
cmpsb
lock
dec
fistl
mov
push
cmp
aad
push
ds
aad
xor
ret
stos
xchg
dec
mov
mov
push
jge
sub
push
js
xor
fwait
push
popa
gs
lea
cmp
xchg
xlat
andb
sub
inc
inc
mov
add
jnp
mov
dec
jmp
mov
scas
push
inc
pop
pop
stos
push
pop
sti
jmp
fsts
rcll
shl
sub
lahf
add
repnz
fwait
ret
pop
mov
adc
lahf
push
stos
xchg
jmp
sbb
or
insl
bound
adc
mov
xchg
cmp
dec
xchg
es
mov
or
xor
add
icebp
or
divl
or
xchg
inc
cs
jae
sbb
xchg
push
cmpsb
aas
mov
fs
mov
sub
inc
test
jmp
imul
xchg
sub
mov
pop
movsl
scas
ja
gs
addr16
xchg
xchg
rolb
ljmp
jno
fxch
or
jg
jmp
je
inc
push
inc
loope
cwtl
jge
inc
inc
sub
inc
mov
mov
insb
and
adc
inc
sub
inc
es
add
sbb
push
xlat
jb
or
out
mov
lds
aam
test
fcmovnu
cs
push
mov
loope
notl
mov
adc
lahf
mov
cmp
adc
and
mov
pop
pop
stos
dec
ss
gs
mov
mov
test
out
cmpl
sbb
jo
xor
mov
add
jmp
jb
push
mov
out
daa
into
mov
and
and
fwait
xor
mov
mov
stc
jmp
ja
mov
sti
fmuls
push
jbe
mov
imul
test
jne
rolb
or
repz
push
add
cld
jle
mov
sub
cmc
std
xlat
push
mov
cwtl
mov
adc
imul
adc
push
rorb
popa
sbb
negl
pop
sub
adc
and
xor
cmp
or
push
lahf
fs
in
inc
sbb
in
aad
and
shlb
sbb
test
cli
dec
addr16
fwait
test
sub
sbb
sbb
clc
push
cmpsl
jge
js
out
scas
and
mov
cmp
pop
mov
pushf
add
pop
fcmovnu
data16
jp
mov
push
stc
mov
ret
shr
pop
cs
mov
adc
fst
aam
adc
pop
push
sub
incl
sti
xlat
ffreep
push
out
adc
jnp
insl
pop
ret
xchg
lods
ret
lahf
xor
int3
mov
or
mov
decl
adc
andl
add
sub
mov
or
pop
repnz
aad
sub
dec
movsl
mov
lret
insb
pop
std
and
jnp
or
out
inc
cmp
arpl
jp
and
mov
lcall
cli
jg
and
inc
jb
jl
cmp
loop
fsubrl
add
movsb
gs
out
lds
push
leave
stc
push
xchg
mov
jge
push
and
negl
into
or
push
sub
stc
jne
gs
fcomps
xchg
pop
jg
inc
adcl
pop
pop
or
lcall
rcr
mov
lea
shrl
mov
ljmp
inc
fisubrs
pop
mov
call
cmpsb
mov
sbb
inc
mov
dec
clc
jno
ret
jmp
pop
push
bound
or
leave
xchg
pushf
pop
sti
cmp
jo
in
std
jmp
lret
xchg
cmpsb
cmp
es
xchg
inc
and
adc
aad
pushf
ficoml
out
jnp
xchg
stos
fsubs
push
leave
sbb
mov
aaa
xchg
xor
cmp
test
mov
in
adc
imul
mov
cmp
ret
push
add
xchg
pop
aam
pusha
je
and
mov
fcomps
lret
cmp
inc
sbbl
lea
lock
push
aas
pop
test
sbb
pushf
stos
fsubrl
adc
mov
test
push
adc
mov
aaa
or
jo
aam
mov
push
push
das
mov
clc
or
in
ret
lret
repz
inc
xor
push
and
ss
inc
pop
mov
pop
popa
and
insl
lret
fdivl
negl
and
loopne
or
cmpsl
int
lods
hlt
mov
ja
or
and
je
fwait
movsl
dec
lock
dec
pop
inc
dec
insl
cmpsb
sti
movsb
ja
ljmp
cmp
xchg
dec
jg
cltd
xchg
test
jno
pop
insl
sub
xchg
stos
int
lahf
insb
sti
cmp
jle
sbb
neg
cmp
sbb
outsb
fidivrs
in
fstp
mov
pop
hlt
pop
pop
lret
lret
lret
cmp
dec
cld
sbb
pop
jno
jb
cwtl
jle
and
jnp
fsubr
push
cmpsb
and
orl
fcmove
adc
lock
out
or
pop
fnstenv
push
sub
push
jl
stos
dec
pop
sbb
cmpsl
in
jge
shlb
dec
pushf
and
inc
addb
and
xchg
cmpsb
xchg
scas
pushf
icebp
cmp
adc
out
insb
mov
add
xor
mov
cltd
mov
scas
pop
cmp
pop
fnstenv
mov
test
hlt
jne
mov
outsb
adc
add
ss
push
push
xor
mov
pop
pop
add
rcrl
adc
pop
push
lret
rcl
into
or
pop
inc
jb
xchg
jg
push
mov
das
or
inc
pop
mov
or
add
ljmp
sarb
sub
in
das
cmp
shl
jb
adc
push
fst
fwait
xor
mov
jb
dec
int3
imul
or
aas
sbb
and
into
mov
in
dec
push
out
sub
mov
scas
int3
imul
icebp
cld
mov
sbb
push
mov
and
inc
hlt
insb
mov
push
xchg
leave
cld
push
lret
jg
call
enter
push
lea
nop
mov
lcall
bound
xor
adc
add
mov
lds
shl
mov
xchg
push
xor
lret
dec
sub
leave
imul
clc
sub
aad
inc
add
xchg
dec
mov
test
roll
int3
or
bound
xor
loopne
mov
subl
mov
shl
dec
aad
es
jno
sbbl
push
mov
adc
sbb
jbe
pop
lds
nop
inc
outsl
mov
xor
sub
add
sub
pop
das
push
inc
push
jbe
aam
add
aaa
and
rorb
pop
jbe
divl
enterw
icebp
mov
and
push
inc
sahf
clc
fdivrl
cltd
adc
ret
lret
add
inc
addr16
enter
lods
cmp
loopne
or
call
incb
mov
push
inc
xchg
push
jecxz
inc
insb
push
enter
lock
jg
push
out
xchg
lods
loope
add
mov
xor
or
stos
sub
jmp
cmp
clc
imul
inc
mov
and
jp
sub
dec
xor
imul
popf
das
and
jb
daa
mov
push
cmp
push
loopne
sbb
in
imul
jp
ret
aas
in
je
sub
mov
xor
dec
popf
loopne
shll
cld
jle
bound
jns
xchg
sub
xlat
call
out
es
and
sub
cli
pop
leave
jb
into
or
xor
dec
in
sub
loop
sbb
sbb
movsl
aaa
jmp
cmpsl
test
idivl
popa
int3
mov
imul
pop
dec
jmp
dec
push
lret
mov
xchg
ret
subb
sub
xor
lea
pop
push
sbb
push
in
inc
mov
mov
shlb
pop
xchg
sub
xor
ja
sbb
aad
xchg
fidivrs
push
push
or
inc
inc
stos
das
inc
mov
ret
cltd
and
or
shrb
jmp
xchg
cld
adc
push
adcb
cmp
mov
mov
cli
sbb
imul
add
xchg
inc
fidivrs
in
leave
adc
xlat
mov
or
scas
mov
add
cmc
mov
icebp
das
adc
inc
jnp
mov
xor
movsb
imul
pop
in
fldcw
cmp
add
push
rorl
xchg
sbb
xchg
iret
add
push
shrl
push
arpl
add
int3
hlt
xchg
inc
je
fwait
cmp
sub
xor
movsl
dec
jp
adc
adc
sbb
ror
inc
mov
adc
ss
les
lds
inc
xlat
xor
gs
loopne
push
pop
addr16
cmp
adc
inc
fisubrl
insb
push
ret
sbb
in
stc
stos
mov
or
sub
sub
sahf
add
lret
xchg
and
jns
clc
jecxz
inc
sbb
fs
lock
pop
mov
shl
or
mov
rorl
dec
mov
inc
pop
shll
push
xor
int3
jp
out
int
leave
mov
xchg
es
push
pop
test
lret
shrl
leave
fucomp
and
xor
jmp
imul
imul
sub
add
or
cli
outsl
test
lea
push
mov
mov
ret
movsl
imul
and
add
dec
ja
lret
inc
lods
stos
sub
iret
and
and
in
dec
ja
add
adc
pop
xchg
pop
cmp
dec
std
mov
cld
out
mov
lret
jl
jns
push
mov
cmp
ret
cli
and
test
addl
jle
data16
out
leave
adc
popf
xor
pop
adc
daa
out
jge
lea
mov
pop
or
int
fsubr
xchg
outsl
into
in
and
gs
push
sahf
lods
push
stc
popa
jo
mov
jecxz
push
push
stc
cwtl
cmpsb
xor
mov
mull
cli
xor
or
xor
jo
int
ljmp
cmpsb
scas
mov
daa
mov
imul
inc
adc
out
lea
xchg
clc
lock
or
mov
and
popa
imul
hlt
imul
push
insb
lcall
lret
stc
cmpsb
pmuludq
pop
pop
sbb
pop
adc
xchg
ja
gs
mov
out
iret
pop
jmp
lcall
mov
and
jecxz
mov
dec
sbb
cld
cltd
hlt
test
or
call
fnstcw
push
pusha
sbb
push
xchg
popl
mov
push
jnp
stos
push
cmp
lret
mov
popf
jmp
fisttpl
enter
fildl
out
iret
or
xchg
xor
shll
cmp
pusha
dec
pop
push
pop
and
fldl
add
cmc
out
cmp
insl
dec
mov
inc
ret
dec
subb
test
cmpl
lahf
cmp
inc
int
hlt
pushf
sbb
pop
pop
xchg
out
fmull
or
jne
or
jg
cld
mov
cmp
xor
imul
pushf
sub
loop
jb
mov
sub
test
cmp
into
movsl
rorl
test
sub
xchg
adc
fstpl
adc
andl
ljmp
sahf
faddl
aad
enter
in
imul
sub
insb
repnz
test
leave
dec
sahf
jae
jns
repnz
jmp
add
cmc
mov
mov
testl
loop
out
in
mov
or
dec
xor
or
or
sbb
sti
in
sub
push
rcl
dec
scas
sub
rcrb
mov
cltd
movsb
scas
rorl
xchg
mov
mov
je
fnsave
inc
ds
jbe
call
mov
and
and
dec
mov
or
cli
sahf
shrb
push
xor
mov
aad
rorb
pusha
insb
push
lcall
mov
pop
xor
push
xchg
mov
repz
xor
movsb
aas
rclb
pop
mov
pop
xchg
pop
push
inc
lahf
movsl
outsb
test
dec
push
daa
test
jne
fwait
pusha
push
fidivl
cmpsl
push
push
popf
das
aas
das
adc
or
pop
jecxz
notl
and
mov
mov
ficoms
data16
mov
shlb
add
mov
es
in
lods
push
xchg
or
cmp
out
mov
sub
sbb
mov
pop
subl
sahf
cli
lock
daa
sub
mov
push
lods
jp
fildl
push
jo
les
add
xchg
imul
test
lock
aaa
shll
lea
mov
push
add
rorb
xor
xchg
adc
call
and
test
cmpsb
xor
mov
cwtl
std
outsl
sbb
jne
mov
inc
or
jbe
outsl
push
and
stos
in
xor
cli
cmp
sti
pop
leave
sub
cmc
xchg
mov
inc
sub
jl
sbb
jb
add
enter
xchg
jmp
sahf
fsubs
shl
test
popa
mov
xchg
sbb
outsl
lods
aad
ror
add
sub
movsb
jg
jb
loop
xchg
incl
mov
je
ffree
mov
and
popa
xor
clc
gs
aad
andb
rolb
test
mov
fwait
cmp
in
mov
ficoml
shl
cmp
lods
mov
push
jmp
xchg
outsl
mov
dec
imul
pusha
mov
out
daa
scas
and
dec
sbb
sub
in
or
cltd
adc
sar
or
mov
sub
inc
or
imulb
vpcomq
jbe
add
sub
or
bound
adc
mov
fs
outsb
in
push
pop
fs
adc
call
loope
jnp
out
xchg
cwtl
sbb
add
loop
pop
lods
mov
push
lret
push
in
xchg
addr16
out
pop
sbb
inc
mull
xchg
sbb
ficoms
xor
and
lret
and
pop
stc
call
sar
sbb
or
xor
dec
sub
ss
rclb
mov
test
add
cwtl
dec
add
sbb
shrl
cli
sub
mov
repz
out
mov
xor
shll
fwait
loopne
adc
jno
fwait
push
dec
mov
pop
or
adc
inc
rcrl
jl
leave
jecxz
aas
xchg
sub
add
inc
int3
sub
loop
cmp
inc
idivl
icebp
push
aas
jecxz
mov
jmp
mov
dec
lock
nop
loop
mov
cwtl
pop
sub
pop
fisubrl
aad
cltd
jb
push
xchg
imul
in
mov
cmp
jns
or
lret
cmp
dec
mov
cltd
jnp
icebp
mov
or
add
push
push
ss
sti
test
popf
sbb
cmpb
sub
ds
xchg
mov
out
xchg
jmp
lcall
inc
jns
cmp
push
xorl
xchg
inc
fcoms
fsubl
shll
cmp
or
fisubrs
or
lds
jmp
scas
jmp
out
sbb
sbb
jo
adc
mov
sarb
daa
xor
sub
mov
xor
jbe
das
xorb
dec
pop
int3
pusha
xchg
xchg
xchg
xor
or
lahf
in
dec
xchg
mov
xor
popa
movsl
cmp
mov
pop
sbb
xor
jge
inc
jo
xchg
jno
repz
movsb
push
fcomip
mov
ret
xchg
imul
pop
jo
cmp
mov
xchg
sub
std
inc
and
xchg
jecxz
movsb
add
pop
ret
fmulp
push
adc
cmp
cmp
cmp
xchg
es
or
or
cmp
inc
sti
mov
mov
cld
lret
adc
or
inc
push
push
int
push
lods
or
iret
xor
hlt
cltd
adc
mov
movsb
or
push
push
push
out
fchs
stos
aaa
push
adc
sbb
or
mov
dec
and
repnz
mov
adc
xorl
jbe
ds
or
out
mov
mov
in
mov
mov
dec
xchg
pop
xor
ljmp
mov
push
sarl
add
pop
popa
ss
xchg
scas
in
jbe
mov
cmc
iret
inc
xor
sub
xchg
dec
pop
xchg
sbb
std
stos
pop
sbb
and
repz
lock
or
and
icebp
stc
and
fidivrl
inc
pop
dec
mov
into
lcall
sub
mov
test
jno
inc
jns
addr16
aam
mov
jb,pn
pushf
push
jmp
sti
sbb
ret
push
mov
sbb
xchg
or
shr
sbb
out
test
int3
es
pushf
jp
or
lods
pop
pop
and
leave
adc
sbb
and
popf
or
iret
iret
xor
das
add
xor
mov
push
aam
jmp
jp
pop
sub
push
sbb
add
sub
lods
xor
pop
stc
jg
xlat
pop
push
cwtl
mov
push
das
inc
aad
enter
loope
orb
xchg
inc
mov
push
dec
mov
jne
mov
pop
sbb
mov
and
pop
lret
mov
cmp
push
mov
rcr
rclb
scas
dec
fmuls
pop
jl
xlat
out
lahf
rol
in
loopne
insb
push
xchg
cmp
aad
cmp
inc
pop
fstps
imul
mov
pusha
mov
push
out
fadds
sub
ss
pop
mov
cmp
xor
add
scas
arpl
ja
popf
lahf
mov
or
xor
push
out
les
sahf
sbb
mov
jmp
jle
jns
ds
or
pushf
mov
mov
xchg
incb
andb
mov
aaa
lahf
add
mov
out
jmp
mov
and
xchg
sbb
cmpsb
mov
ret
pusha
mov
jno
push
mov
out
data16
loope
xor
mov
loopne
out
hlt
sub
popf
scas
scas
shll
cltd
pop
lods
mov
cmp
test
aaa
and
fildll
dec
pop
sub
test
adc
mov
pop
js
dec
in
mov
and
movsb
add
or
jno
cmp
mov
and
hlt
jne
sub
lahf
lods
js
jnp
and
std
ret
movsb
cmp
xchg
int
mov
sub
jbe
mov
sbb
lret
lods
jb
pushf
adc
outsl
js
test
inc
jnp
sbb
jb
jbe
xchg
int3
sarl
mov
out
xchg
cmpsl
inc
rolb
adc
mov
ljmp
int
inc
fcmovu
xor
and
push
aaa
jecxz
push
stos
lret
mov
lahf
pusha
sbb
xor
clc
movsl
xlat
adc
test
pop
add
and
lcall
sarb
or
cmp
add
rolb
jb
mov
fnstenv
gs
sarb
dec
stos
push
mov
xchg
lods
cmpsl
push
lods
out
mov
adc
outsl
mov
add
cltd
out
daa
aam
repz
pop
orl
xchg
out
fldcw
popf
lea
mov
lea
fidivs
cmp
xor
or
push
mov
imul
or
gs
inc
fdecstp
out
mov
sbbl
inc
mov
fidivrl
dec
cmp
out
btr
pop
pop
add
fiaddl
mov
and
arpl
imul
add
rcr
mov
sub
cmp
mov
sarl
xchg
sbb
mov
mov
xchg
sbb
loopne
cmp
add
xchg
pop
cmp
cmpsl
jb
repz
aaa
ret
sbb
mov
int3
into
in
push
xor
int3
jge
sarl
mov
jmp
fistl
adc
cli
push
push
mov
imul
cmpsb
adc
pop
scas
ds
lcall
push
and
loopne
fsub
pop
mov
xchg
lret
dec
dec
into
pop
outsl
push
shll
push
popf
fstl
mov
shl
js
movb
xor
loopne
mov
lds
outsb
adc
xor
pop
jmp
lcall
xor
xchg
bound
sbb
dec
pusha
mov
cli
add
sbbb
fldt
xlat
aam
in
push
hlt
mov
int
mov
push
sub
push
sub
movsb
or
xchg
icebp
or
jg
js
in
out
mov
dec
daa
in
jne
mov
inc
cltd
xchg
mov
or
icebp
jmp
repnz
ljmp
pop
out
push
das
pop
add
inc
mulb
ja
jne
push
sti
aad
cmp
jmp
dec
jbe
sbb
daa
push
pop
mov
mov
test
das
xor
ljmp
lock
incb
orb
int
psubd
mov
lret
adc
sbb
fwait
test
rorb
jecxz
mov
scas
jecxz
outsb
test
negb
cld
sub
xchg
mov
cwtd
cmp
jnp
mov
sub
inc
bound
lock
lods
cltd
add
xor
fucomp
fistpll
pop
ret
cmp
loope
dec
fidivrs
cs
repnz
cmp
pcmpgtd
imul
cmpsl
mov
rorl
lret
lret
aad
dec
inc
test
adc
aaa
les
bound
das
dec
mov
cmp
clc
push
jb
push
mov
and
into
xchg
stc
cs
loopne
xchg
dec
sbb
adc
mov
inc
mov
and
in
pop
outsl
pop
xchg
lods
pop
mov
fdivrs
mov
jle
push
movsb
xchg
adc
dec
pop
stos
testb
jae
out
leave
cmc
scas
ja
cmp
jns
dec
arpl
mov
test
cltd
mov
ljmp
and
mov
mov
inc
jecxz
clc
lock
cmpsb
out
xchg
dec
sbb
std
js
xchg
stos
loope
aad
push
pop
into
mov
and
lds
lea
fwait
jl
xchg
setg
mov
shlb
rcrl
inc
andl
cltd
sub
insl
xchg
repz
jp
cmovae
lcall
cmc
imul
inc
arpl
iret
or
notl
adc
cld
mov
push
sub
ds
dec
dec
arpl
mov
insl
cmp
imul
div
ljmp
imul
clc
push
inc
bnd
cmpsl
adc
jbe
inc
out
pushl
sbbl
out
pushf
mov
dec
and
jae
push
iret
call
mov
jl
fincstp
setg
cwtl
lea
mov
out
adc
add
adc
push
inc
gs
dec
jne
aad
or
out
outsl
add
xchg
adc
adc
xchg
iret
jecxz
sub
mov
jb
xlat
mov
jns
cmp
adc
jb
ret
pop
fwait
push
test
pushf
jmp
jne
and
pop
mov
cmpsl
lahf
xchg
arpl
xor
inc
fisttpl
pop
jle
gs
or
movsb
rcll
inc
push
fnsave
test
or
or
les
jno
lcall
cltd
dec
jp
xchg
rcrl
xor
mov
jge
orb
repz
inc
aam
lret
pusha
imul
jl
push
add
addb
loopne
xchg
and
ss
add
dec
cs
mov
fisttps
jbe
mov
push
popa
sub
mov
cmp
rorl
out
push
inc
insl
and
dec
ffreep
std
adc
addr16
fnstenv
and
and
push
aas
bound
fnsetpm(287
rcrb
shr
jbe
push
outsl
lods
sbb
test
aam
jb
adc
enter
pop
rol
insb
mov
cli
aam
imul
push
mov
mov
xor
xor
popf
dec
fdivs
imul
lret
jbe
and
shlb
int
xor
jmp
scas
cmp
das
sub
pop
jne
inc
jp
ds
inc
loope
xchg
ljmp
dec
sbb
test
jmp
das
repnz
sbb
ret
imul
xchg
jmp
leave
mov
pop
test
push
cmp
test
ja
shll
test
sbb
add
adc
sbb
das
push
rolb
je
mov
pop
push
cmc
jecxz
insl
int
or
out
push
jg
clc
clc
jl
xchg
mov
mov
xchg
into
into
stc
outsl
adc
out
dec
cmpsb
faddl
sarl
adc
inc
xor
stc
jbe
shl
sahf
xchg
add
pushf
iret
cmpsl
iret
dec
sbb
and
pop
aam
jge
adc
stos
push
and
xchg
je
fidivs
mov
xchg
cli
jns
int3
sub
inc
mov
jmp
add
jp
inc
inc
xchg
int3
mov
pop
imul
shl
lret
pop
add
loop
ja
dec
and
in
stc
pusha
test
or
fldt
rcrb
or
dec
inc
xor
inc
bound
mov
sub
jg
jp
in
cmpsb
movsb
pshufw
adc
gs
lret
mov
lret
add
mov
test
inc
and
in
adc
pop
lcall
xor
sub
andb
fstps
ja
adc
pusha
test
pop
jge
fsubs
and
cmp
ret
xchg
mov
mov
lock
push
rorl
aad
stos
stc
jb
movb
int
push
insl
fnstsw
cmp
sbb
mov
cmp
mov
add
jp
cmp
cmp
sbb
cwtl
mov
imul
jns
js
loopne
fsubrl
mov
test
stos
stc
xor
cmpl
loopne
mov
negb
or
lret
idiv
lahf
sbb
aad
and
pop
iret
mov
dec
lcall
andb
pop
push
jns
outsb
mov
das
inc
movsb
dec
lcall
shlb
cs
or
push
xor
stc
fistpll
pop
nop
cld
fstps
add
lret
cmp
and
arpl
add
or
sub
andb
les
and
aam
test
xlat
pusha
add
pusha
fsub
inc
cwtl
ds
sub
or
sbb
cmpsl
pop
gs
lret
xchg
push
imul
ss
dec
jne
dec
and
mov
repnz
xor
xchg
and
dec
test
cmp
push
hlt
dec
jbe
xchg
inc
mov
add
lock
mov
inc
rcrb
insb
sti
iret
aas
bound
sbb
shrl
sub
mov
sub
jns
stos
orb
daa
arpl
test
js
inc
xor
out
scas
ficomps
mov
imul
or
or
pop
lock
outsl
popf
aam
mov
xor
lods
adcl
aad
scas
out
std
jl
fs
add
lcall
repnz
aad
mov
out
imul
cli
sbb
push
rcrb
sti
loope
fidivl
dec
stc
arpl
mov
cwtl
inc
lcall
jg
dec
and
pop
int
pop
sbb
adc
aas
push
sbb
jb
cltd
mov
jmp
cwtl
push
and
std
cld
xchg
imul
mov
mov
lock
rorl
lahf
cli
ficompl
hlt
mov
mov
rorl
xor
push
cwtl
inc
push
out
cmpsb
and
dec
mov
dec
add
adc
jns
adc
popa
decl
pop
cltd
fbstp
mov
mov
jns
cmpsl
ja
in
data16
test
sbb
cwtl
out
rcrb
jle
mov
jo
scas
pop
ror
xor
aas
inc
mov
xchg
xchg
icebp
dec
loop
dec
hlt
xlat
adc
lods
push
in
xchg
adc
mov
mul
pusha
daa
pushf
in
lret
adc
mov
mov
and
or
lds
call
fcmovbe
and
and
jmp
movsl
sbb
dec
push
or
das
or
fcoms
cwtl
popa
xor
popa
pop
push
sarb
push
mov
jae
push
and
in
into
shlb
mov
push
cli
push
arpl
inc
in
mov
pop
test
mov
xor
aas
repnz
push
outsl
hlt
cmp
lahf
aad
xor
imul
movsb
jne
xchg
popf
add
or
pop
jp
ss
push
mov
push
sbbb
inc
mov
xchg
mov
popa
xchg
negb
push
pop
adc
cld
sbb
hlt
push
and
push
call
push
mov
call
cs
sbb
jmp
cli
sbb
dec
and
aad
lods
mov
push
sub
fstpt
mov
cmp
mulb
or
sub
xchg
testl
dec
or
stos
popf
lods
sbb
push
cmp
fsubrp
push
and
lods
xchg
inc
adcb
or
fs
push
jb
lods
adc
stc
push
rolb
imul
xchg
push
sub
or
test
clc
jge
push
xlat
cwtl
addb
add
addr16
and
sbb
mov
dec
mov
stos
lcall
movsb
ja
sbb
int3
mov
stos
aaa
mov
inc
xor
jmp
xor
repz
jmp
dec
in
cwtl
loop
call
jle
sbb
dec
test
dec
nop
mov
out
lods
pop
sub
mov
push
mov
mov
lods
jle
jns
fdiv
sub
add
xchg
adc
je
xchg
adc
pop
inc
pop
popf
xchg
testl
push
fstps
lret
vpcmpeqd
adc
cmp
push
fyl2x
jns
fbstp
mov
adc
int
jle
fdivrl
xor
lock
mov
pop
gs
bound
pop
pop
ja
lret
xor
repz
nop
loope
push
fdivrs
scas
sahf
sub
mov
mov
out
dec
mov
inc
jecxz
adc
imull
dec
ret
ret
pushf
xchg
ljmp
add
outsb
vmread
insl
incb
and
sub
and
mov
jp
outsb
sbb
pushf
popl
movsb
sub
fadds
imul
adc
dec
push
mov
out
outsl
jae
push
mov
mov
mov
mov
dec
mov
movsb
sti
pop
mov
fadds
ficomps
fsubrs
fiaddl
jb
lods
sti
dec
mov
cmpb
adc
xchg
xor
aas
mov
lods
jne
or
add
call
add
and
jb
add
cmp
insb
imul
pop
out
jbe
test
push
rorl
test
add
repz
jmp
test
inc
pop
repz
vaddss
xchg
mov
sbb
mov
xchg
xlat
add
ds
mov
scas
fidivs
inc
xchg
lret
test
xchg
test
mov
add
sub
fwait
sti
cwtl
lcall
ds
fstps
int
xchg
je,pt
sub
daa
call
cmp
dec
lret
mov
inc
mov
fsubrl
jnp
mov
push
pushf
jnp
xlat
dec
movsb
outsl
stc
mov
testb
pop
roll
cltd
mov
and
or
fstpt
dec
jns
outsb
jnp
sbb
pop
test
jecxz
mov
mov
mov
lock
mov
test
mov
pop
pop
xchg
push
jmp
daa
pop
xor
cmpsl
xchg
shrl
mov
sub
cli
fwait
jbe
inc
and
mov
pop
cmc
popf
pop
test
inc
cltd
jo
cmpsl
out
scas
add
mov
mov
cmp
sub
scas
adc
cs
mov
cmp
das
or
movsb
mov
rorb
push
xor
sub
int
jg
cmp
pop
roll
push
scas
push
aaa
pop
dec
stos
cmpsl
and
jne
dec
xor
mov
push
mov
jge
out
loope
in
int3
divl
cmp
inc
inc
and
jle
ja
pushf
hlt
in
lds
cmp
xchg
cmp
out
xor
add
pusha
jns
adc
pop
sbb
lods
out
pop
sarb
pop
ret
in
adc
ja
movsl
mov
call
mov
dec
rorb
loop
mov
xlat
xchg
push
sbb
enter
add
mov
or
in
adc
rorb
cmp
sbb
in
mov
inc
inc
push
add
test
or
dec
jmp
mov
sub
and
pop
push
cmp
in
gs
and
push
pop
lock
test
inc
mov
xor
das
push
push
sub
mov
cwtl
lock
daa
sub
cmp
mov
es
ret
cs
out
adc
sbb
xchg
mov
xor
jecxz
aad
mov
mov
nop
dec
hlt
lods
push
xor
mov
sbb
pop
add
das
or
pop
sbbl
push
fstps
push
push
int3
dec
push
sbb
cmp
je
ljmp
push
and
mov
mov
adc
xor
mov
scas
fimull
sarb
arpl
enter
push
mov
insb
jno
xchg
movsb
mov
out
jno
adc
movsl
into
sbb
mov
popf
clc
pop
outsb
js
out
jge
mov
pop
dec
jno
dec
mov
push
daa
jns
cmp
pop
repz
shll
add
cwtl
aad
aad
mov
dec
sub
push
sbb
pop
or
call
arpl
repz
mov
or
cli
retw
pop
dec
subl
imul
es
inc
sub
nop
and
mov
test
movsl
jb
mov
enter
mov
mov
push
dec
notb
xor
icebp
adc
sbb
push
test
dec
int
rcll
sarl
or
faddp
add
sub
test
scas
insb
jl
jmp
xor
lcall
sbb
iret
into
adc
test
mov
mov
arpl
mov
cltd
loope
inc
pop
pop
cmp
or
je
and
fstpt
adc
ja
out
inc
notl
aas
push
xchg
pop
out
cmp
xchg
push
add
xor
jo
fbstp
fdivl
sub
sbb
add
imul
and
notb
in
std
cmp
setge
jl
add
jg
cld
mov
mov
pop
outsb
mov
fsubrs
dec
xor
push
das
out
cmpb
xlat
push
add
nop
clc
cmpsb
sbbl
inc
stos
lcall
icebp
xor
mov
mov
incb
loope
adc
dec
lock
mov
es
xchg
scas
add
jg
xor
out
stc
jne
or
jns
mov
imul
add
push
test
mov
mov
xor
insl
xor
leave
fs
enter
dec
loope
leave
jne
sub
lahf
mov
in
xor
mov
mov
add
or
inc
add
lock
movsl
aam
cmp
incl
scas
jnp
push
out
stos
rcr
and
inc
stos
add
xlat
nop
mov
hlt
call
aam
dec
punpckhdq
cli
shrl
lea
sahf
shll
dec
jle
mov
xor
fsub
or
mov
out
xor
loopne
mov
inc
xlat
pop
pushf
mov
adc
cmp
dec
mov
xchg
cld
jno
dec
sbb
jae
je
dec
inc
ljmp
cmp
loop
out
mov
fldl
xchg
insb
jnp
sbbl
into
mov
push
add
cmp
fcomp
test
jmp
pushf
ljmp
es
pop
and
jne
and
hlt
sti
fwait
cmpl
mov
cmpsl
loope
add
jp
adcb
mov
std
adc
rcrl
push
sub
mov
decb
jo
hlt
pop
cli
mov
in
test
push
mov
je
xchg
mov
lods
movsl
mov
test
and
popa
popa
loop
loopne
out
xlat
lea
xchg
in
in
pop
js
js
push
mov
pusha
stc
push
sbb
pop
aas
xor
push
scas
imul
aad
adc
mulb
testb
push
addb
push
loope
arpl
lcall
outsb
lahf
out
jno
mov
mov
xchg
xchg
pop
add
mov
jle
jae
mov
cmpsb
push
xchg
push
out
pop
mov
xchg
icebp
and
xchg
mov
stc
mov
pusha
clc
cmpsl
test
test
icebp
dec
std
mov
pop
ret
sub
call
mov
shlb
lret
cmp
push
pop
xchg
pop
sub
add
mov
and
cmp
sahf
mov
in
mov
out
std
test
pop
cwtl
enter
out
fs
adc
aaa
xchg
aas
jae
popa
out
mov
ljmp
mov
inc
mov
or
sbb
jecxz
ret
gs
out
pop
pop
and
push
add
jl
push
mov
scas
shll
loopne
lahf
xchg
or
and
fisubrl
int3
sbb
decb
jge
pop
mov
cmp
pop
fsubrp
mov
lock
jmp
scas
std
push
xchg
es
lock
adc
jle
mov
mov
fdivrl
push
sbb
test
fs
fidivrl
cmpsl
aam
inc
push
pop
and
fnstenv
push
insl
hlt
push
cmpb
dec
ja
sbb
fnstenv
sbb
icebp
sub
add
mov
xchg
xchg
cmpsb
loopne
cmp
push
mov
xor
jle
lea
or
cwtl
stos
aad
xor
adc
mov
stc
dec
jae
fwait
xor
or
insb
adc
pop
push
sbb
in
push
xchg
and
xor
pop
sahf
andb
lret
es
mov
repnz
mov
pop
lock
das
xchg
jge
or
scas
push
adc
rcrl
add
sbb
nop
or
adc
or
pop
cwtl
pop
cltd
mov
add
inc
scas
lea
insb
pusha
push
stc
in
pop
or
mov
add
divb
test
sbb
cmp
js
sbb
xchg
jo
cld
mov
dec
comiss
or
sti
clc
or
mov
inc
xchg
imul
push
jo
or
adc
push
mov
cmpl
pop
cmpsl
sub
jg
push
push
inc
mov
dec
mov
sbb
loopne
aaa
int3
xchg
test
sub
loope
sbb
push
loop
mov
jnp
bound
cmp
jnp
push
mov
jno
and
jnp
lea
sub
out
sahf
mull
add
sub
shll
and
or
out
je
jo
imul
sbb
cmp
jnp
pop
cmp
pop
in
jmp
lret
jp
icebp
rcl
arpl
push
push
xchg
push
daa
and
mov
mov
idiv
stos
adc
xchg
clc
iret
scas
in
pop
ljmp
sahf
pop
in
adc
sbb
adc
mov
lahf
sbb
add
xchg
mov
clc
mov
xor
cmp
daa
and
ret
adc
cmp
jnp
orb
or
mov
jns
and
stc
das
repz
and
mov
ljmp
and
aam
out
jg
xchg
les
out
push
jecxz
rcrb
pushf
mov
std
inc
in
pop
jp
dec
or
lods
pop
cmp
in
movsl
jae
ret
imul
nop
mov
jb
mov
sub
inc
dec
and
cmp
cmp
iret
movsl
cmp
adc
cmpl
mov
lcall
jg
jne
scas
lret
in
jnp
mov
sbb
std
out
sub
mov
push
sbb
fs
cmpsb
popf
insb
push
pop
pop
lods
jle
aam
data16
out
aam
movsb
dec
and
ficoml
aam
jb
sub
sbb
pushl
dec
icebp
movsb
test
push
cmp
inc
movsl
or
jp
adc
lods
sub
inc
or
out
lods
or
or
and
jnp
cmc
cmp
mov
push
push
loope
add
and
sbb
xchg
xchg
and
sbb
hlt
pop
out
ds
jno
loopne
push
pop
xor
dec
dec
dec
jae
dec
lods
add
jg
xchg
test
dec
fiaddl
fcmovbe
jbe
sti
jp
and
popf
aam
cmp
ljmp
repnz
mov
pop
cmp
add
jle
mov
mov
push
inc
xchg
insl
add
mov
lods
mov
adc
pusha
adc
push
repz
out
stc
pop
shll
push
jp
sub
push
pusha
xor
fnstcw
pop
decl
rcrl
je
add
mov
icebp
ss
loopne
notl
js
pop
jno
movsb
out
cmpsb
icebp
or
loopne
push
gs
and
sbbl
rol
je
scas
or
inc
mov
adc
add
mov
jecxz
lfs
into
lods
out
jmp
jb
arpl
mov
pop
ret
clc
push
jae
mov
vpandn
add
adc
push
stos
dec
daa
push
inc
pop
jnp
scas
jge
or
sbb
mov
cmpsb
int
inc
mov
idivl
jg
in
insl
pop
insb
push
lds
adc
mov
jnp
iret
into
mov
add
cmc
dec
xlat
cmp
cmpsb
add
push
sahf
out
sbb
pop
adc
int
in
add
ds
sti
sub
jmp
cmpsl
leave
aam
mov
fiadds
sbb
sbb
movsb
cmp
dec
cwtl
jbe
mov
jp
cmp
aam
push
in
cmpsb
cmp
scas
mov
insl
out
push
adc
dec
xorl
push
inc
pop
test
imul
lds
imul
aam
fistpl
mov
push
subl
sub
addb
cmp
lds
push
stos
imul
movsl
lret
push
lock
fstpl
out
test
jp
inc
jmp
addr16
scas
inc
lea
mov
leave
in
popf
sub
mov
js
dec
jno
mov
mov
cmp
add
mov
cld
fcmovne
jo
sub
and
dec
push
xchg
arpl
inc
ret
pushf
rorb
cltd
es
xchg
into
add
loope
mov
dec
out
js
pop
filds
mov
rclb
jle
je
mov
push
xor
fcom
xor
lahf
jne
adc
sbb
cmpps
das
loopne
test
movb
setns
mov
push
or
imul
shrl
push
dec
inc
scas
jno
aam
rorb
in
ret
scas
rclb
shlb
push
push
mov
sarb
repz
popa
and
in
jl
xor
sub
add
roll
mov
push
repz
iret
pushf
adc
cmp
ret
add
imul
pop
mov
mov
sub
mov
mov
jle
jle
addr16
outsb
addr16
jmp
push
mov
aas
cld
aas
push
xchg
cmp
aad
clc
sti
or
pusha
add
mov
or
mov
inc
xchg
mov
adc
shll
push
cmc
test
pop
lcall
fidivrl
add
jecxz
adc
dec
jle
xor
sub
mov
lods
and
in
push
std
xchg
lock
sub
outsb
and
xchg
xor
xchg
andb
mov
or
sbb
jmp
scas
dec
push
movsb
push
shlb
xchg
les
xchg
fdivrl
mov
sarb
push
xor
mov
push
in
lret
xchg
push
pop
sbb
cmp
lret
fisubl
cmp
lret
jae
cmp
sbb
mov
xchg
jge
scas
lock
out
sbb
hlt
cmp
mov
hlt
aad
adc
into
push
das
dec
push
inc
adc
movsl
into
mov
ret
loopne
jge
stos
ret
fs
dec
call
jl
imul
lods
cld
and
les
dec
int3
mov
xor
cwtl
push
mov
dec
and
and
mov
repnz
cli
test
add
cmp
clc
sbb
movsb
lock
xchg
enter
dec
xor
aad
sbb
test
jno
mov
mov
fs
arpl
dec
mov
mov
cmp
sub
cmp
sahf
mov
insb
outsl
xchg
mov
mov
sub
insl
movsl
addr16
enter
cmpsl
fs
push
add
sub
lods
and
and
sub
aaa
cmp
aaa
stos
or
nop
shll
insb
test
or
inc
sub
pop
insl
xor
je
aad
sbb
movsl
and
pop
dec
subb
fists
into
mov
jb
sbb
movsb
mov
sub
loop
out
daa
aad
fbstp
loopne
inc
xor
loope
lods
mov
daa
xor
dec
dec
sti
push
shr
sub
ss
test
mov
out
push
out
xchg
shr
pop
cmp
fadds
and
fwait
mov
fsubrs
test
mov
add
xchg
lcall
lods
cmp
cmp
mov
cs
leave
adc
pop
nop
mov
std
enter
outsl
adc
rorb
rcr
mov
mov
es
pop
mov
out
aad
push
and
jmp
adc
cmp
ret
test
ret
es
outsl
or
stc
adc
testl
push
popf
pop
gs
xor
int
mov
add
cs
lahf
out
cli
jecxz
in
test
loop
ljmp
enter
or
mov
fldz
fdiv
lahf
dec
xchg
xor
das
pop
jle
dec
xchg
cmpsl
jg
dec
pop
jae
adc
movsl
rclb
cmp
mov
and
lahf
xor
mov
negb
pop
dec
pusha
and
and
or
xchg
xchg
xor
inc
jge
mov
loop
out
pop
imul
cwtl
pop
inc
xchg
push
aaa
and
mov
push
xor
cmpl
mov
pop
sub
int3
mull
testb
mov
jp
in
push
mov
xor
inc
in
arpl
loop
cwtl
cwtl
add
or
xlat
sahf
adc
add
jp
mov
mov
shr
cld
xchg
fidivrl
pop
enter
xchg
sbb
mov
xchg
mov
out
adc
add
icebp
jns
lahf
enter
inc
sbb
cmp
daa
mov
pop
inc
fstl
outsl
cmp
cmp
mov
loop
sbb
or
sahf
cli
pop
lea
push
cwtl
cmp
into
rcll
shrb
pushf
int3
mov
sbb
repz
or
andl
add
leave
xor
pop
out
add
ret
pushf
mov
shl
push
mov
test
sbb
push
or
or
negb
inc
in
sub
scas
jne
inc
mov
pop
sbb
push
mov
jae
jge
inc
mov
sub
cmpsb
jle
fs
nop
clc
push
jle
or
pop
fwait
sbb
std
inc
test
jle
and
and
pushf
xchg
popf
mov
fmul
jbe
sahf
sbb
push
in
test
nop
pop
dec
imul
es
mov
test
aaa
push
fs
lahf
out
add
aas
pop
mov
inc
add
pushf
sub
cmpsl
ret
mov
mov
cltd
out
lds
xchg
lea
mov
push
push
add
pushf
aam
insl
jge
and
push
enter
mov
inc
aaa
sub
cmp
mov
orl
mov
dec
xchg
pop
mov
push
mov
mov
inc
mov
mov
mov
mov
enter
aaa
xlat
push
xchg
aaa
add
icebp
in
fisubl
ret
inc
or
lret
jns
jle
decl
out
fs
in
xchg
jae
pop
pop
mov
or
test
divb
cli
loop
rcrb
cli
in
jle
and
mov
and
rcll
mov
add
loope
lcall
sub
je
push
jo
push
and
push
jno
jb
mov
sbb
dec
jmp
mov
pop
data16
movsb
stos
pushf
insb
nop
or
xor
cwtl
dec
mov
jecxz
xchg
lret
ds
sub
rcl
cmc
lcall
jmp
scas
fsqrt
push
pop
hlt
xlat
lret
lea
lahf
stos
leave
out
fcmovbe
adcl
or
call
jae
push
dec
in
add
js
push
dec
dec
mov
jnp
pusha
push
inc
inc
and
mov
mov
or
mov
cmp
jg
in
sub
mov
mov
push
push
pop
aad
rcrb
mov
dec
mov
pop
imul
test
push
xchg
sub
push
lds
mov
cltd
add
adc
pop
out
outsl
push
xlat
jno
into
adcb
mov
cmp
mov
aad
jmp
insb
std
aam
je
neg
xlat
popa
mov
mov
int
js
leave
stos
push
divps
xchg
sbb
in
loopne
arpl
mov
and
sbb
fsubs
push
addl
fwait
out
cmp
jno
pop
sbb
add
out
das
jmp
mov
cmpb
dec
mov
clc
out
add
in
xor
rcll
and
mov
or
jmp
pop
or
xchg
or
rolb
jbe
stos
pop
lret
and
roll
stc
lret
and
jmp
dec
insb
jecxz
adc
lcall
outsb
mov
pop
imul
jae
xchg
lods
cwtl
xchg
outsb
mov
sub
adc
andl
jmp
mov
cmp
add
push
mov
dec
add
imul
aam
inc
das
scas
lea
lock
add
sahf
out
iret
pop
mov
inc
nop
imul
je
decb
adc
lock
lahf
mov
jecxz
sbb
xor
jg
jnp
das
sbb
dec
mov
in
fstps
daa
cmp
lock
push
jnp
ljmp
sub
in
and
cld
shll
repz
sub
cmp
xor
xor
sbb
repnz
jmp
push
stc
nop
cmpsb
sbb
xchg
mov
das
cld
fidivrl
cmp
sbb
push
mov
cld
dec
cmp
cltd
push
and
mov
jmp
rcl
mov
cmp
push
in
pop
mov
or
lcall
add
inc
push
dec
pop
xchg
pop
lret
jne
xchg
mov
xor
xlat
mov
cmp
add
incl
jae
push
push
stc
inc
mov
jno
pop
and
sbb
sub
sub
push
aam
lea
out
sbb
loope
testb
test
sub
das
pushf
mov
iret
xchg
out
cmp
sub
stos
imul
mov
fisubl
mov
sub
or
nop
pushf
sub
dec
ret
add
ds
jb
lahf
stos
clc
ljmp
lods
out
mov
in
sahf
jle
imul
add
or
repnz
dec
xchg
test
testb
lcall
cmpsb
addr16
mov
inc
pop
cs
add
jbe
inc
repnz
xor
outsb
lods
data16
lret
ret
out
jge
sub
ljmp
in
cli
add
sub
idivl
orl
fstpl
scas
cli
pop
jb
pop
insl
out
loopne
inc
test
jle
idivl
lahf
jns
icebp
add
sbbb
fdivrl
fnstcw
rcll
and
int
out
add
sub
scas
testb
add
int
stos
rcrl
in
mov
jno
mov
in
mov
pop
mov
mov
xchg
mov
insb
outsl
pop
mov
push
mov
pop
rclb
mov
or
lea
cmp
in
icebp
jmp
sbb
xor
push
jns
mov
or
cmpl
popf
inc
daa
out
cmpsl
and
add
popf
movsl
adc
jae
lcall
test
mov
out
mov
imul
xchg
push
mov
fnstcw
shlb
mov
pusha
shrl
inc
cs
xchg
addb
pop
pop
popa
or
movsl
inc
mov
shl
and
cli
ljmp
int
cmp
lods
fsts
dec
ja
jmp
and
mov
mov
ret
xchg
in
repnz
int
shll
outsl
adc
mov
add
mov
cmp
nop
pop
sbb
lods
pusha
int3
in
and
inc
mov
pop
mov
fwait
mov
repnz
xchg
cli
into
inc
add
inc
stc
lods
loope
imulb
es
inc
cld
cmpsl
dec
add
inc
dec
push
imul
out
mov
pusha
xor
inc
sti
je
mov
in
int3
sbb
mov
into
mov
or
xchg
adc
add
shrb
pop
jne
jl
lock
adc
fs
lods
testb
imul
sub
pop
mov
jle
call
cmp
cvtpi2ps
cmpsl
and
cltd
inc
pop
xchg
inc
xchg
xchg
sahf
jne
adcl
stc
ljmp
sar
jle
out
subb
cmpsb
mov
sub
cmpsb
mov
leave
pop
sub
lock
xchg
ret
lds
int3
insl
add
subl
pop
sub
aaa
and
es
mov
adc
xchg
adc
lcall
cwtl
pusha
jbe
dec
das
sub
pop
mov
cmp
add
dec
loop
mov
mov
bound
mov
dec
lcall
loope
mov
loopne
js
inc
or
in
popa
cmovl
call
push
aas
mov
or
ret
add
lea
dec
scas
sbb
lret
shrb
jge
mov
inc
mov
pop
insl
stc
xchg
push
notl
jp
stc
nop
cmp
sbb
dec
jp
inc
out
inc
adc
xchg
shl
jbe
sbb
fildll
sub
fnstcw
mov
jl
fwait
dec
dec
fists
std
jnp
dec
mov
xchg
mov
ja
outsb
adc
xor
mov
repz
arpl
dec
jb
daa
lahf
cmc
sbb
adc
pop
fs
jbe
sarb
mov
inc
subl
add
cmp
rorl
fwait
mov
jnp
enter
or
popf
add
add
push
push
jnp
xor
pop
jmp
out
clc
or
pop
daa
hlt
inc
je
inc
add
std
adc
outsl
cmp
push
sti
mov
mov
js
push
jne
test
outsl
mov
cmpsl
leave
mov
repz
and
jne
lds
sub
outsb
mov
sbb
nop
add
pop
jno
cmpb
loop
push
mov
ret
dec
flds
ds
inc
jl
mov
scas
mov
in
jl
call
mov
cmpsb
fidivrl
clc
xchg
in
push
xchg
enter
sbb
jmp
add
fwait
or
pop
stos
js
cmp
xchg
sbb
dec
sbb
shll
mov
cmp
cmpl
sbb
imul
cmc
adcb
pop
jmp
cmp
lock
iret
je
mov
insb
add
stc
jg
dec
mov
xlat
lds
xchg
lcall
lock
adc
test
xchg
fsts
push
shl
movsb
mov
insb
fwait
out
aas
fwait
mov
sub
xchg
cmp
push
jns
loop
pop
sbb
call
fstl
dec
mov
cltd
jg
mov
daa
sbb
sarb
pusha
fisubs
adc
test
mov
test
dec
shll
pop
ja
push
in
push
imul
sbb
aaa
xor
addb
and
fadds
add
and
inc
push
sti
testl
mov
add
adc
jecxz
fcmovnu
sub
mov
fistpll
loope
hlt
sub
enter
scas
mov
push
incl
sub
adc
dec
shl
xor
cli
pop
fstp
lds
push
roll
add
and
push
pop
stos
mov
adc
incl
pop
icebp
xchg
sbb
inc
in
xor
aam
stos
push
movsb
sbb
pop
imul
test
jmp
fs
loop
or
adc
jnp
ret
or
inc
popa
xchg
jmp
and
repnz
roll
mov
sub
movsl
je
inc
and
sahf
xchg
inc
cli
mov
jo
pop
gs
pop
or
jp
cmc
jmp
std
mov
imul
clc
or
push
mov
mov
or
mov
dec
cmp
imul
add
push
aas
push
in
mov
cltd
xadd
iret
pop
mov
adc
jle
add
std
sub
sti
or
mov
nop
in
leave
sar
ljmp
pop
dec
arpl
fsubl
or
icebp
cmp
test
stos
and
jge
or
mov
adc
stos
test
in
adc
sub
xchg
in
jb
into
mov
push
jg
sub
fisubl
xor
dec
cmpsb
cli
xchg
sti
mov
push
mov
jae
jecxz
repnz
js
out
inc
mov
xchg
andl
mov
fsubrl
mov
sub
clc
jmp
das
mov
gs
mov
sub
inc
jne
add
inc
cmp
adc
push
pop
sbb
popf
push
sbb
test
push
or
je
out
dec
ds
aam
fwait
rolb
fistl
popa
inc
jnp
xchg
or
adcl
adc
sub
popa
out
shlb
jae
es
mov
scas
cmp
inc
lock
fiadds
popa
shll
dec
inc
fistps
push
popa
xor
sahf
ljmp
xchg
lods
adc
js
mov
sub
mov
dec
add
orl
xor
pop
out
fldl
cmc
imul
push
jbe
pop
ljmp
out
push
jae
add
out
loope
rcr
jnp
cltd
push
push
push
cmpsb
push
iret
sbbl
insb
data16
out
imul
sbb
mov
mov
adc
mov
and
jns
xor
push
xchg
fcompl
add
and
shlb
pop
aad
jno
add
or
and
jmp
cmp
popf
std
inc
cmp
outsl
sbb
mov
or
lods
sub
nop
pop
ficompl
ret
in
pop
call
mov
adc
mov
or
add
pop
xor
dec
repnz
xchg
mov
imul
fidivl
xchg
push
dec
dec
mov
dec
icebp
add
pop
daa
xchg
enter
xor
fidivrs
cmc
or
cmp
pop
xchg
pushf
push
aad
jg
sti
lcall
jmp
jns
mov
push
lds
dec
and
pop
cmpsb
repz
addr16
pop
adc
enter
loopne
sbb
cli
jb
fwait
loopne
bound
xor
jne
jno
icebp
cld
repz
and
scas
fs
jne
cmc
mov
add
push
stos
aam
popf
insb
mov
inc
and
rcl
clc
sub
into
jg
test
mov
popa
data16
fidivrl
std
sub
mov
fsts
call
ret
into
pop
sbb
rorl
cmp
cmp
jns
imul
ja
jbe
iret
and
arpl
gs
test
adc
xchg
jbe
fidivrs
inc
sub
adc
push
nop
jecxz
mov
xchg
dec
mov
ljmp
xchg
in
pop
loope
test
lret
clc
in
fsubp
movsb
mov
fisubl
mov
lret
aaa
xchg
push
testl
andl
clc
fdivrp
stos
repz
jo
aas
adc
mov
inc
pop
cld
sahf
aam
fisubl
xchg
or
inc
gs
test
mov
pop
jbe,pn
in
aad
xchg
push
loop
flds
or
inc
loope
add
sbb
imul
xchg
cltd
mov
stos
shrb
and
jnp
push
call
push
shlb
mov
in
mov
mov
in
xlat
lcall
inc
nop
dec
or
or
xor
out
xchg
jbe
loope
xchg
jb
rorb
in
inc
mov
xchg
xor
mov
enter
rcr
int
paddb
and
add
mov
xchg
adc
push
loope
dec
ret
inc
loop
dec
adc
fwait
mov
cmpsb
and
cli
dec
inc
or
push
xlat
mov
pop
in
or
nop
pop
rcll
jb
mov
fisubrl
and
ljmp
xchg
inc
loop
mov
inc
push
dec
dec
sti
add
adc
fdivs
popa
xchg
push
mulb
lret
xchg
sbb
push
jnp
mov
mov
mov
pop
add
jae
outsb
scas
test
mov
adc
lods
push
adc
loop
xchg
outsl
add
and
iret
nop
cmp
xor
sbb
xor
lods
icebp
cmpsl
add
cmc
jecxz
dec
addr16
shl
pop
andb
add
mov
pop
inc
xor
and
mov
pop
popf
mov
jle
lahf
out
xor
fstpt
int3
jno
fs
movl
mov
mov
out
aas
cmp
cli
scas
or
adc
addr16
adc
sub
cmpsl
ret
push
je
and
lds
inc
mov
xchg
jne
aad
pushf
lds
cmp
jne
je
es
jns
pop
mov
outsl
in
mov
push
xchg
mov
mov
and
mov
ljmp
ficomps
enter
cmp
xor
dec
leave
cli
sub
int
pop
repz
add
stc
idiv
shl
cltd
cld
mov
dec
xchg
test
out
jp
lock
int3
iret
leave
mov
jp
rdtsc
inc
push
sub
into
in
test
pushf
shrb
and
cmp
lahf
inc
pop
cmp
mov
mov
out
scas
xor
push
pop
pop
dec
stc
mov
pop
shl
stos
test
cmpsl
imul
inc
mov
push
and
jns
mov
mov
xor
dec
adc
pop
and
outsl
dec
xchg
ret
cli
xlat
xor
sub
xor
mov
jl
out
pop
jp
fcoml
jno
fidivs
and
xor
mov
dec
or
jg
jbe
mov
popa
xchg
pop
into
aad
aas
push
fucomi
ljmp
int3
repnz
orb
xchg
pop
cmp
pop
testl
dec
popf
movsb
call
mov
arpl
jne
shrb
pop
sub
push
repz
and
pop
push
jne
data16
sti
jbe
es
xchg
dec
lods
int
stc
mov
cli
fistps
call
int3
inc
shll
or
xor
or
loopne
jge
jge
fucomip
cmp
jge
orl
sub
add
jl
in
xor
rcr
mov
jge
mov
rolb
mov
shlb
rorl
xchg
mov
sti
mov
arpl
xchg
inc
push
xor
xchg
jl
and
rcr
cmpsb
sub
es
jp
cmp
daa
dec
iret
test
movsl
popa
fnstsw
push
ds
or
dec
sbb
pop
jno
xchg
out
lods
fwait
dec
cwtl
andb
cmova
jb
pushf
mov
adc
scas
sbb
xor
push
jle
inc
push
adc
inc
mov
xchg
lcall
dec
int
andb
pop
out
fldt
xor
pusha
hlt
mov
adc
xor
pop
jae
ja
xor
je
fs
bound
push
ud0
jns
xor
jg
fdivs
ljmp
mov
jg
mov
lahf
inc
sub
seta
lret
in
adc
addr16
inc
shrl
in
mov
sbb
mov
cwtl
addr16
fidivrs
or
and
fsubrs
dec
inc
push
pop
xchg
pop
movsb
dec
sub
cmc
jp
subl
xlat
mov
je
push
push
sbb
jbe
icebp
gs
pop
dec
jmp
popa
ljmp
jb
or
dec
subl
lds
addr16
mov
enter
jb
cltd
xlat
sbb
pop
pop
push
cmpsb
cmp
inc
mov
loope
lock
push
mov
addr16
repz
test
sub
sbb
or
out
cwtl
out
fwait
mov
push
adc
or
adc
insb
mov
sbb
sbb
and
fs
outsb
ljmp
fsubrl
cmpsb
mov
xchg
ficomps
sbb
mov
mov
jbe
clc
mov
out
add
mov
in
push
fbstp
out
and
cmp
out
dec
das
std
mov
ja
cwtl
out
cmpsb
cmp
cld
jo
add
neg
sti
test
xchg
xchg
xchg
xor
mov
aam
out
hlt
rcl
int
cmc
add
pop
mov
iret
inc
dec
inc
outsl
idivl
stos
jo
mov
inc
dec
cmp
xchg
dec
push
cli
jecxz
shrl
push
mov
pop
sbb
mov
or
loop
cmp
mov
mov
or
or
add
fwait
sti
mov
push
add
lret
inc
mov
cltd
in
adc
inc
push
leave
mov
push
mov
add
int
inc
or
dec
sub
mov
movsb
subb
cmp
jo
add
or
add
lea
mov
pop
mov
jge
and
add
es
or
hlt
push
mov
cmp
mov
sbb
stos
out
shrb
mov
inc
test
jne
imul
push
jg
sub
add
xchg
repnz
cmpsb
std
sub
jmp
int3
lods
jl
mov
xor
push
jmp
sub
push
mov
int3
cltd
add
divb
popf
xor
xor
icebp
inc
pop
in
fisttpl
lock
sub
mov
add
xchg
add
cmpsb
or
push
ja
xor
push
push
imul
outsl
pop
cmp
outsb
and
xor
cmpb
in
test
sub
push
ret
pop
adc
insb
lret
jns
ret
push
mov
ret
ljmp
xchg
cmpsb
insb
mov
test
lahf
mov
jbe
add
js
mov
or
mov
loopne
sub
lds
push
push
imul
popa
test
int3
fdivrs
and
js
call
pushf
repz
jo
in
cltd
or
arpl
shll
test
cmpsl
dec
das
mov
sub
cwtl
xchg
xchg
das
jne
dec
lcall
test
ss
or
outsb
mov
cwtl
and
cli
xor
pop
in
xor
and
xchg
pop
or
shl
sub
out
fstpt
dec
mov
and
mov
inc
sub
bound
xor
dec
hlt
cwtl
es
add
xchg
in
adc
jnp
nop
clc
addl
adc
pop
scas
push
push
push
mov
adc
mov
or
sbb
ja
je
out
pop
mov
insl
push
mov
or
mov
mov
fisubl
loope
adc
shlb
es
push
xor
cs
scas
pop
and
inc
mov
inc
ljmp
addr16
divl
clc
sarl
repz
mov
dec
mov
sub
lcall
mov
in
xchg
pop
push
mov
mov
das
cmpsb
sbb
mov
sbb
xor
fsts
pop
push
adc
stos
cmp
es
adc
scas
ret
and
mov
push
cld
inc
mov
or
jl
lods
push
mov
sub
jb
sub
jo
sub
sti
adc
xchg
mov
jl
popf
or
addr16
xchg
mov
mov
mov
cli
lods
faddp
mov
das
sbb
insl
in
into
repz
out
push
mov
repnz
jno
test
and
lods
push
lock
aam
test
push
insl
into
cmc
das
mov
fcompl
bound
mov
test
cmc
sub
cmp
jg
xchg
bound
lret
pop
xchg
adc
sbb
loope
jmp
jne
out
insl
add
popa
inc
cltd
rorb
lret
ljmp
add
xchg
adc
xor
negl
sub
pop
cmp
data16
ljmp
mov
add
xchg
sub
pop
sbb
loopne
jcxz
or
sbb
xor
jge
mov
dec
mov
imul
push
lods
gs
jecxz
test
dec
lcall
xor
sub
aas
enter
xlat
fs
daa
sub
mov
mov
imul
aad
jg
or
xor
lret
inc
sbb
inc
dec
les
out
xor
jmp
dec
sarl
jb
ljmp
push
lea
movsb
sahf
or
sub
test
lock
mov
pop
mov
xchg
inc
mov
or
fidivrl
shl
pop
pop
ja
lret
push
pusha
bound
notb
sbb
stc
ja
jg
jae
push
inc
push
mov
fsubs
jb
sar
add
out
imul
jl
add
lods
icebp
jge
subl
mov
nop
lret
add
popf
clc
and
jge
mov
jno
sti
in
loope
sti
das
cs
aam
bound
stos
out
cmp
jg
addr16
jle
cmp
lcall
popf
pop
jae
jge
int
into
xabort
in
inc
bound
push
ret
nop
das
lods
js
jl
and
enter
sub
mov
movsl
xlat
mov
mov
int3
into
stc
repnz
adc
xchg
dec
and
shll
sub
lods
out
sahf
jo
xchg
xlat
out
cmpl
cmp
and
jl
jnp
mov
sub
xor
mov
out
sub
sub
jo
andb
add
lods
mov
xor
ret
ja
in
lds
lods
roll
inc
adc
jno
sbb
out
pop
test
adc
cmp
pusha
adcb
insb
cwtl
dec
cli
call
mov
fnstenv
das
push
bound
inc
cs
lods
cld
out
out
mov
push
les
or
orl
jne
pop
jecxz
sbb
lcall
stos
jo
dec
leave
andb
jecxz
xor
dec
dec
mov
inc
cs
addr16
xchg
xchg
push
fldenv
jecxz
push
cli
incl
mull
ss
popf
jo
inc
jl
mov
repz
psubusw
call
xor
mov
cmp
roll
sub
xor
out
arpl
ror
mov
push
sub
out
pusha
jmp
lahf
inc
int
arpl
out
addb
sub
fidivrl
mov
pop
rorb
lods
push
cltd
sub
insb
inc
loope
leave
inc
les
mov
inc
fiaddl
sbb
outsb
scas
gs
das
loopne
push
xor
adc
daa
fbld
fistpl
mov
mov
push
inc
data16
cmp
adc
mov
in
mov
fldenv
xchg
pop
addr16
push
notl
mov
repnz
sar
out
pop
sbb
mov
sbb
or
or
mulb
loop
xor
mov
pusha
lock
std
seta
push
aas
ja
mov
loopne
adc
mov
cmpsl
mov
xchg
xor
cwtl
addr16
xor
dec
les
enter
mov
xor
idivb
xchg
adc
dec
cmc
cmp
adc
ja
mov
mov
xchg
mov
mov
js
out
xchg
jnp
icebp
mov
daa
in
sbb
mov
nop
add
lods
mov
mov
popa
in
dec
pop
push
pop
and
fsubs
mov
fsubrs
mov
repnz
mov
push
das
loopne
cmp
dec
and
push
sbb
mov
ret
out
fwait
rolb
sahf
cmp
sub
dec
fsubs
sbb
fstp
xor
ret
pop
outsl
mov
ror
stos
mov
xchg
test
call
inc
xor
sbb
sub
in
popf
mov
sbb
push
in
aas
xchg
insl
in
and
dec
outsl
aad
stos
ret
pop
jge
jp
iret
fcompp
xor
pop
frstor
push
cmp
into
loopne
hlt
mov
jmp
push
jl
xchg
rcll
inc
lcall
out
aas
jp
push
push
in
jmp
xchg
mov
testl
out
xchg
test
adc
imul
fwait
mov
jl
sub
pop
cwtl
js
movsb
les
mov
cmpsb
pop
cmp
imul
pop
imul
pushw
mov
imul
ret
cmp
in
jg
adc
stos
add
sbb
leave
leave
jb
push
or
lret
jg
jecxz
pop
outsb
jno
nop
jnp
or
call
das
mov
xor
test
cli
aam
aaa
xchg
sti
fldcw
sti
mov
push
sub
push
sub
add
sub
inc
sbb
xchg
xlat
dec
imul
pop
lods
ret
je
and
sti
jae
mov
test
loop
adc
stos
push
cmc
addl
imul
imul
pop
ficoms
arpl
pusha
push
mov
jl
aad
dec
rcr
repnz
push
fsubrs
pop
dec
decl
enter
mov
dec
inc
add
dec
outsb
ret
lahf
das
mov
jns
pop
xor
and
pop
or
or
bound
mov
ret
mov
xchg
ljmp
add
adcb
xchg
jb
mov
add
xor
sbb
fldcw
add
and
cld
mov
or
cld
daa
scas
adc
mov
ds
mov
rcll
dec
mov
into
stc
mov
cs
ljmp
out
jnp
iret
cmpsl
or
movsl
adc
cmp
je
sub
add
aam
dec
scas
lds
dec
cmp
fiaddl
ret
push
imul
xchg
cmp
xchg
outsb
push
lcall
popa
outsl
imul
cli
dec
scas
cli
jmp
das
scas
push
lret
adc
mov
mov
cmpsb
out
shrb
shlb
adc
mov
jge
and
jb
jnp
xor
test
fisubs
cwtl
xor
mov
pop
cmp
xchg
pop
add
jae
or
xor
sbb
icebp
adc
push
pop
pop
ficomps
adc
xlat
int
and
adc
push
les
rorl
rclb
xor
push
jns
lock
add
dec
inc
rcll
std
cmp
mov
mov
imul
xor
jo
pop
and
jp
lods
ja
add
stos
xor
jge
fucomi
cmp
sbb
cmp
add
push
jmp
mov
pop
divl
insb
inc
mov
imul
adc
sti
fsubl
jbe
outsl
add
and
mov
mov
pop
daa
xchg
cmc
aad
adc
adc
push
cmp
xchg
push
sar
insb
test
and
inc
sub
out
push
xor
nop
mov
sbb
enter
inc
push
insl
pop
sub
push
xacquire
pop
mov
sbbl
loopne
sub
sbb
xor
mov
pop
mov
pusha
sub
sub
dec
in
jb
jae
xor
mov
sahf
mov
mov
dec
leave
je
and
cmp
or
je
das
aas
fbld
cmp
fistpl
push
call
jns
in
jg
jns
ja
std
or
test
push
jge
imul
fdivl
xchg
out
imul
daa
fiaddl
sub
je
cmp
push
faddl
cli
sbb
in
jne
mov
fstpt
in
mov
idivl
lock
xor
add
push
mov
je
sub
movsb
add
sub
and
sub
mov
mov
pop
xchg
imul
ret
cmpb
in
in
add
inc
mov
adc
and
jae
sbbb
imul
mov
sbb
xor
aaa
outsl
imul
jp
js
mov
adc
mov
or
aaa
outsl
cmp
push
mov
outsb
nop
pop
pop
adc
mov
divb
sub
daa
xchg
fists
pop
lcall
enter
jns
inc
and
and
or
lods
outsl
test
stos
adc
movsb
mov
cld
xchg
or
mov
movsl
aas
xor
fcmovb
es
shr
es
lods
cmp
push
xchg
jb
movsl
dec
out
mov
adc
fsubrl
ret
jae
mov
inc
xchg
out
aad
icebp
outsl
jg
cmpsl
imul
cmpsb
jb
mov
rcll
xchg
or
cmpsl
and
dec
fimull
xchg
out
int3
inc
andb
xchg
adc
ss
gs
or
jno
push
punpckhwd
and
or
inc
addr16
lods
mov
push
es
mov
cli
idivb
pop
or
add
mov
addb
mov
push
or
jb
mov
cmc
dec
out
mov
lock
test
loopne
aad
adc
pop
pop
push
sub
xor
pop
in
insb
enter
leave
mov
rcr
add
cmp
cmp
into
sbb
mov
ljmp
dec
jo
int3
loopne
jb
stc
jnp
sbb
ljmp
xchg
mov
mov
xchg
dec
cmp
sti
lahf
clc
mov
sub
mov
sbb
pop
lods
negb
sbb
idivl
jmp
dec
adc
lock
mov
shlb
test
stos
mov
push
movsl
cs
rcrb
movsl
test
pop
xchg
mov
xlat
xor
rcrb
jae
mov
pop
mov
and
and
push
repz
call
xchg
sbb
iret
cmp
popf
mulb
jge
sahf
dec
cmc
lea
xchg
imul
in
out
cld
push
pop
mov
cld
and
add
or
pop
dec
popa
or
and
pop
cmp
or
lret
sahf
xor
rolb
or
test
jg
dec
cmpsb
inc
and
outsl
lea
mov
cmp
lahf
jle
mov
fsubr
arpl
sar
mov
xor
sub
mov
sub
arpl
mov
lds
xchg
call
mov
cmp
adc
lret
or
jge
cs
ret
xchg
adc
pop
in
pop
lea
repnz
aam
rol
xor
mov
cld
sbb
gs
cmc
iret
fcompl
insb
cmp
sbb
movsb
mov
mov
xor
and
mov
fwait
ja
lods
dec
sbb
jb
mov
mov
jecxz
inc
dec
cmpsb
add
add
cmpsb
cmp
xchg
dec
jge
push
pop
and
in
adcb
xchg
and
pop
and
add
insb
aaa
fs
imull
mov
aas
mov
cmp
push
jae
xor
jb
push
xor
jns
dec
xlat
xchg
sbb
popa
dec
push
bound
into
mov
call
movsb
sbb
dec
iret
stos
pop
lods
add
std
call
sbb
adc
mov
cmp
fldcw
in
push
push
shll
push
dec
jmp
cmp
mov
imul
add
ja
jl
test
add
and
inc
ja
xchg
mov
test
test
jl
mov
push
pmulhw
pop
sar
test
in
lcall
popf
repz
addb
shll
nop
xor
es
testb
loopne
out
cmpsl
lods
out
sbb
test
int3
call
ss
punpckhwd
add
and
jb
cltd
inc
test
and
inc
stc
jo
inc
ret
add
fwait
aaa
mov
jno
mov
add
fimull
inc
push
lret
jo
inc
cwtl
and
testb
aam
inc
xchg
jns
sbb
mov
dec
pop
es
jno
inc
jae
shll
fistpl
mov
pop
xor
out
sub
arpl
mov
jbe
cmp
stos
call
or
inc
dec
testb
int3
enter
int3
push
sbb
leave
aas
or
lea
jb
dec
sahf
cmp
shr
dec
adc
add
dec
mov
add
cmp
cmc
lret
cs
cmc
inc
sti
jmp
insb
mov
mov
add
jmp
jae
divb
jae
stos
mov
push
cmp
clc
cltd
les
cmpsl
and
mov
push
lret
in
fisubl
fisttpl
lea
arpl
cmp
incb
arpl
adc
fisubl
lock
push
push
pop
stos
xchg
push
xor
in
jns
fsts
out
xchg
std
pop
jle
jno
pop
pop
mov
xchg
or
shll
out
mov
and
mov
mov
push
mull
aam
clc
sub
aaa
and
jge
sub
ja
mov
orl
jns
in
or
jo
fsubl
lds
cmp
pop
idiv
jno
sbb
rclb
cmpsb
out
xchg
adc
or
fscale
sub
xchg
mov
pop
clc
test
push
popa
jo
aaa
add
idivb
movsb
xchg
fisubrl
add
in
sbb
push
insb
cmp
sub
inc
push
test
hlt
cltd
sub
sub
out
xor
movsl
int
out
jp
add
mov
sarl
xchg
jbe
ret
shrb
arpl
mov
pop
movsl
int
push
jp
mov
aas
adc
loopne
imul
cmp
inc
cmp
ljmp
sub
xor
cmp
push
test
and
sub
ret
add
mov
jmp
ja
cmpsb
out
int
xor
xchg
fcoml
xchg
mov
mov
and
jge
mov
mov
and
inc
repz
sbbb
lret
daa
sub
mov
dec
or
mov
mov
int
mov
or
jle
mov
cmpsl
dec
push
adc
fidivrs
sub
adc
xor
or
cmp
cmp
sbb
pushf
loop
adc
out
mov
cli
adc
rcl
in
sub
ljmp
sub
cld
cld
sbbb
pop
addb
push
ljmp
aam
pop
mov
sub
ficompl
mov
pop
jb
jl
xor
add
sbb
out
dec
add
inc
xor
addr16
popf
dec
push
mov
js
sub
mov
jg
les
or
ret
or
xchg
into
push
testl
inc
push
insb
adc
nop
divb
out
fcoms
sbb
shr
in
cmp
jmp
test
xchg
arpl
mov
inc
imul
in
or
in
pop
repnz
gs
push
and
xor
xchg
lock
aam
mov
fsts
push
xchg
xchg
aam
mov
dec
scas
mov
mov
inc
loop
cmpsb
xchg
outsb
xchg
xor
xchg
imul
sbb
dec
sub
call
add
aas
adc
cmp
mov
mov
or
xor
and
gs
stos
mov
das
nop
sbb
push
enter
enter
rcrl
repz
cmp
sbbb
orl
and
push
rol
jnp
xchg
and
jb
push
xchg
int3
dec
pop
int3
cmp
pop
push
je
mov
sbb
add
xchg
leave
out
push
out
mov
jbe
leave
xchg
pop
outsl
lahf
andb
add
xchg
mov
call
mov
or
mov
aam
jo
push
push
add
pushf
inc
repz
cltd
fisubrs
or
fldenv
addr16
rorl
or
popa
push
into
arpl
dec
jno
push
and
daa
jne
xor
popf
clc
test
xchg
aam
insb
mov
icebp
int
pop
insb
out
nop
mov
ds
pop
push
mov
and
lea
cmp
wbinvd
test
and
push
sub
test
fidivs
test
ja
fistl
xchg
jmp
xor
sbb
mov
and
adc
dec
add
mov
mov
cmp
das
mov
mov
xor
in
push
pop
shrb
into
dec
test
insb
jb
push
inc
push
jns
jmp
add
mov
cs
loope
jns
pop
arpl
and
loopne
enter
loop
cli
cmp
jmp
pop
jge
mov
mov
push
xchg
pop
dec
mov
scas
out
nop
dec
mov
or
cmpsb
rcll
popf
in
or
aam
ret
or
icebp
adcl
test
rcl
push
out
je
dec
or
ficoml
cwtl
add
mov
pop
mov
lds
cmc
add
lock
dec
movsb
rclb
movl
arpl
pop
cmpb
xor
fdivr
lods
mov
das
xchg
mov
iret
inc
and
jo
pop
mov
repz
inc
sbb
jbe
xor
loope
ficompl
mov
mov
aad
sub
cmp
popf
subl
icebp
cmp
in
mov
lds
dec
inc
pop
xor
lret
sahf
push
inc
or
movsl
pushf
cmp
or
mov
xchg
mov
xor
and
dec
loope
push
sub
loopne
mov
movsb
jle
mov
pop
js
lret
ret
mov
and
ja
jmp
mov
push
pop
add
pop
lret
sbb
add
outsb
mov
and
std
sub
sbb
test
popfw
out
pop
je
orb
dec
xor
mov
shrl
xchg
add
add
mov
cmp
das
xchg
int3
test
inc
mov
test
sbb
addr16
psraw
pop
popa
dec
add
cs
dec
loopne
adc
cmp
mov
add
add
push
fsubrl
icebp
push
sub
sub
shlb
jmp
or
sti
sub
loop
test
push
jae
mov
stc
imul
cs
jg
in
adc
inc
sbb
inc
mov
and
dec
clc
fimuls
aad
cmp
gs
mov
shlb
push
or
add
rcrl
mov
mov
nop
imul
cmpsl
pop
iret
addr16
mov
and
dec
aaa
or
mov
xchg
movsb
xor
loope
add
nop
pushf
cmp
stc
fisubrl
dec
xchg
and
sbb
lret
xor
pop
comiss
sbb
jl
pop
inc
icebp
call
loopne
jae
stos
movl
aad
into
jbe
and
cmp
mov
int
mov
or
jae
cmp
icebp
mov
aaa
cmpsb
dec
jne
push
xchg
add
and
push
jg
das
and
movsb
hlt
enter
pop
jp
jb
pop
mov
mov
mov
mov
cltd
jo
std
roll
inc
loopne
pop
cmp
pop
shrl
movsb
fldcw
inc
mov
xlat
aad
fbstp
icebp
add
bound
lods
cltd
pop
ljmp
pushf
cmp
mov
and
test
into
roll
adc
ret
out
fwait
dec
xchg
iret
daa
inc
and
stos
add
imull
jp
add
inc
stos
sbb
loop
in
mov
push
arpl
cmc
cmp
sahf
sub
pop
and
pop
xor
sub
aas
mov
xchg
leave
xor
shrl
add
add
pop
jno
pop
pop
adc
jg
cmpsl
addb
out
daa
xor
int
cmp
cwtl
xchg
xchg
mov
add
inc
lcall
cmpsl
fildll
pushf
nop
push
fnsave
mov
sti
dec
sub
mov
fs
mov
out
or
inc
ret
pop
outsb
stc
mov
jae
jmp
push
pop
inc
imul
sbb
sub
repnz
roll
popa
mov
into
inc
mov
jnp
fiadds
sbb
dec
add
inc
cmc
call
mov
lret
mov
adcb
aaa
leave
mov
lahf
jo
mov
mov
push
mov
and
and
or
andl
pop
push
test
iret
out
mov
add
pop
push
lock
mov
jno
mov
xchg
mov
cs
rol
jno
sub
jle
xor
pop
mov
test
sahf
jg
xchg
push
aas
sbb
orl
sub
into
ret
insb
push
push
xchg
push
sahf
xchg
stos
mov
ror
inc
or
pusha
jne
js
nop
jb
das
mov
xchg
lods
popf
jecxz
idiv
aad
outsl
sahf
dec
xor
or
jo
add
push
idivl
sbb
std
lock
adc
hlt
inc
pusha
mov
xchg
mov
data16
inc
mov
testl
jno
adc
jo
in
fdivl
hlt
stos
mov
sub
dec
adc
cmc
cmpsb
mov
movsl
mov
xlat
popf
pop
lcall
and
jne
mov
in
jno
adc
cs
jno
or
out
sub
clc
sbb
cmp
dec
cmp
adc
mov
out
add
pop
andb
mov
xchg
aad
mov
xor
push
pop
inc
mov
pop
test
jb
inc
mov
cmpsl
mov
mov
inc
sbb
ljmp
or
test
js
xchg
and
sbb
or
mov
pop
and
fistpll
dec
out
call
stos
insl
cmp
xor
mov
adc
testb
sbb
out
xchg
sbb
or
push
and
sub
jle
jge
daa
pop
xor
cmp
pop
sbb
push
sub
bound
jbe
push
xor
enter
xor
push
cmp
push
mov
cmp
push
xchg
mov
adcb
xchg
sub
movsl
scas
mov
test
je
repz
pop
rorb
das
cmc
inc
adc
inc
sub
adc
daa
rcll
shl
cmp
in
xchg
hlt
jle
push
repnz
jle
inc
vaddsubps
mov
sbb
jae
fbstp
daa
xchg
xor
cltd
dec
adc
stc
sub
push
aas
adc
pop
mov
sahf
mov
and
xlat
fisubrl
fwait
sub
fistps
push
cwtl
jb
xlat
jl
fists
roll
jecxz
mov
movsl
outsb
popf
push
add
xchg
icebp
cld
inc
bound
test
mov
push
fistps
xchg
mov
sub
loop
pushf
mov
sbb
pop
xchg
sub
pop
aas
out
mov
jecxz
push
out
xor
mov
cmp
imul
bound
loop
imul
out
repnz
add
outsl
repz
aaa
enter
in
jle
nop
ret
xchg
xor
adc
xchg
aad
xchg
inc
icebp
call
jo
mov
ljmp
shl
cmp
sub
cli
xchg
xor
iret
xor
push
mov
shll
inc
scas
dec
or
pusha
shrb
xchg
jl
xlat
scas
test
dec
jbe
xor
xlat
inc
adc
xchg
leave
adc
xchg
bound
test
cmpsl
jbe
ret
and
dec
mov
int
pusha
int3
jns
mov
mov
mov
loope
lock
xchg
mov
popf
push
rcll
push
cmpsb
lods
mov
dec
int3
jne
enter
arpl
push
fsts
jge
mov
mov
push
inc
ret
cs
stos
cmp
test
aas
cmpsl
out
jge
out
bound
xchg
xor
sahf
push
hlt
aam
xor
and
push
inc
dec
fcoms
xor
lea
rdpmc
cmp
pop
sub
lea
leave
xor
in
jno
or
jge
mov
mov
sahf
or
mov
dec
call
ljmp
loopne
push
lea
inc
mov
lcall
aas
fdiv
mov
jmp
pop
lret
std
std
subl
mov
fcomip
sti
cli
and
pop
mov
mov
and
pop
repnz
mov
xor
mov
fcoml
jecxz
dec
cld
sbb
xor
insl
mov
rclb
mov
sub
shlb
xor
mov
push
addps
fstpt
je
out
mov
sarl
dec
sahf
notl
std
js
add
pushf
test
enter
mov
xor
xchg
aad
jne
cltd
pusha
sub
and
js
repz
sbb
test
cmc
stos
push
and
imul
pop
lahf
add
push
mov
mov
fcmovu
add
xor
outsb
outsl
out
insb
jnp
dec
incb
adc
jae
sbb
std
iret
cld
inc
in
sahf
pop
out
jo
add
insb
popa
loope
movsl
pusha
push
into
movsl
nop
es
mov
push
push
movsl
and
jns
stos
cmpsl
mov
mov
andb
cmc
dec
sahf
fldl
fidivrl
int
adcl
jnp
jp,pt
sbb
fstpl
pusha
les
js
jge
movsb
loope
movsb
scas
mov
push
leave
mov
adc
or
adc
mov
mov
shll
in
inc
leave
imul
adc
and
push
sbb
mov
fcomi
add
sbb
sbb
nop
mov
fsubr
mov
adc
mov
inc
xchg
pop
sub
aam
xlat
jns
or
pusha
push
sti
les
insb
enter
lret
ret
orl
push
ret
inc
add
cmp
or
inc
xor
mov
ficomps
scas
bnd
leave
subl
movsb
mov
div
in
movl
xchg
out
in
lea
mov
or
xchg
mov
xchg
pop
pop
in
pop
pop
xlat
lea
cs
repz
xchg
pop
pop
int3
lahf
not
pushf
cmp
dec
stos
cltd
adc
scas
incb
sbb
daa
fstps
xchg
out
jecxz
mov
out
je
cwtd
fidivrl
jmp
xchg
jb
push
subl
xchg
popf
or
ret
mov
mov
ja
popa
scas
pop
jg
jecxz
or
or
sub
add
ss
add
inc
out
push
in
cmp
les
mov
xlat
orb
push
movsl
jge
push
add
call
add
aaa
jne
pop
cs
jo
mov
loope
clc
cld
fmul
push
ljmp
fstp
xchg
cltd
lods
jmp
cltd
repz
cmp
mov
adc
aad
popa
add
mov
lcall
cmpsb
sub
adc
fucomip
lods
aas
cmp
addl
xchg
xor
inc
dec
test
mov
out
sub
in
xlat
cmp
or
pop
cmpsb
pop
insl
icebp
pusha
sub
mov
mov
and
mov
push
inc
jnp
inc
lahf
add
sahf
push
mov
stc
shll
pushf
in
in
sub
jecxz
int3
loopne
jo
xor
sub
or
sbb
adc
pop
xor
xchg
js
bound
jb
push
sti
inc
inc
inc
jl
gs
adc
sbb
pop
xchg
subb
xor
daa
stos
les
out
cmpsb
jge
and
or
les
mov
pop
mov
andb
and
mov
sbb
fcomps
mov
and
or
in
fldl
frndint
inc
out
inc
nop
fucomip
xchg
loope
in
ficomps
ljmp
aam
bound
addr16
scas
or
adc
mov
rcrl
sub
cmp
xchg
add
lods
lock
and
push
jp
or
js
or
arpl
bound
mulb
push
xchg
dec
ja
dec
bound
push
and
outsl
jge
mov
jp
mov
shll
jns
into
sbb
mov
cli
xchg
mov
icebp
jecxz
into
aam
repnz
or
xor
sub
mov
jmp
aad
cwtl
outsb
test
push
push
lcall
inc
and
fistl
in
jg
inc
andl
into
xor
repnz
dec
sbb
jmp
xchg
inc
pop
ret
lcall
fs
shlb
hlt
scas
sub
mov
add
add
lock
add
adc
sahf
js
cwtl
shll
imul
cmp
push
mov
adc
jae
cmp
lods
enter
shlb
sti
mov
sbb
jecxz
mov
mov
test
nop
lret
lds
pushf
mov
out
leave
stos
dec
dec
cmpsb
jns
jecxz
sbb
fsubrl
sbb
bound
xorl
popa
mov
xchg
lahf
adcl
sbb
loop
sbb
cltd
mov
lret
pop
pusha
cmp
mov
imul
cmp
jbe
sub
loop
push
cmp
addb
jno
inc
sbbb
loop
mov
cmp
addl
pop
incb
aam
xchg
mov
pop
mov
sti
and
ljmp
fimuls
out
adc
aaa
pop
pop
sub
out
sbb
aam
mov
mov
mov
aas
cmp
iret
push
iret
and
mov
mov
pop
pop
ret
and
push
roll
lahf
sub
push
push
jl
outsl
call
add
push
fwait
mov
inc
dec
ret
imul
pop
call
xchg
aaa
loop
push
loopne
push
or
arpl
outsl
addr16
ja
lahf
xchg
aas
aas
xchg
adc
sbb
fwait
jmp
cwtl
mov
adc
mov
inc
jnp
imul
pop
push
std
inc
add
and
js
andb
push
in
ja
gs
jp
inc
icebp
jge
cli
mov
sub
adc
xchg
push
ljmp
test
cwtl
iret
jp
in
ror
ficomps
scas
lds
fsubrs
jbe
inc
rcll
loopne
js
andps
mov
test
aaa
sbb
xor
and
and
daa
sub
mov
out
jbe
sar
cwtl
xor
adc
lret
mov
add
xchg
ret
push
mov
or
outsl
jno
ss
and
out
arpl
sub
fsubrl
push
shlb
or
push
out
imulb
aam
lahf
sbb
push
js
repz
mov
in
adc
out
dec
inc
decb
ror
or
push
mov
or
movsl
lea
push
jbe
and
mov
mov
push
aad
in
mov
jl
mov
sbb
adc
lret
arpl
adc
push
arpl
cmpsb
pusha
pusha
or
xchg
xchg
aas
pop
bound
outsl
push
imul
mov
mov
inc
insb
jbe
int
jl
rcl
push
inc
fs
repnz
jnp
es
out
cmpsl
mov
sub
nop
testb
and
pop
roll
scas
xchg
sub
sbb
xor
arpl
out
sbb
mov
cmp
jecxz
cmp
xor
sbb
lret
bnd
mov
aaa
jbe
fst
js
xorl
mov
xlat
iret
add
adcb
xor
add
sbb
imul
push
rol
mov
pop
mov
jb
push
mov
mov
xchg
jecxz
lods
jl
cmpsl
pop
cmpsb
sbb
subl
aad
jmp
fildl
lods
inc
push
jecxz
aad
push
or
inc
scas
jl
mov
cmp
sbb
xor
div
lcall
daa
lds
scas
jno
fadd
cmp
push
test
adc
xchg
imul
jmp
inc
push
ror
movsb
stos
ret
in
fimuls
dec
movsb
subb
cmp
js
aad
inc
jno
sbb
xor
aad
or
lds
out
stc
xchg
test
jnp
push
test
test
mov
jmp
xor
or
push
adc
inc
insl
pop
cmpl
stc
mov
cmp
push
ret
cwtl
add
jp
loopne
shll
aaa
fldl
clc
mov
pushl
adc
test
in
xor
mov
decb
jmp
fs
mov
and
sub
or
ret
jne
inc
mov
xor
cs
mov
je
ss
movsb
mov
in
xchg
sahf
mov
scas
xor
push
xchg
mov
or
ljmp
ljmp
fldl
jmp
lods
test
xor
mov
jl
sub
add
xlat
xchg
add
cpuid
mov
icebp
test
xor
data16
dec
push
adc
fidivs
notl
inc
in
jns
fisttps
mov
mov
iret
pop
fistps
add
enter
jno
out
pop
mov
inc
pop
data16
pop
mov
push
fstps
jns
sbb
jge
stos
hlt
bts
lcall
add
sub
cmpsl
outsl
xchg
sub
cmp
fnstenv
inc
in
movsl
sub
xchg
pop
cltd
arpl
cs
mov
arpl
hlt
inc
adc
jns
dec
sbb
scas
lahf
jne
mov
xlat
cmp
jno
test
or
xor
push
mov
mov
or
pop
mov
in
insb
adc
jg
pop
mov
inc
sbb
push
xchg
inc
cmp
inc
sbb
bound
push
aaa
push
subb
movsl
subl
dec
adc
sbb
pop
in
jge
fiaddl
sbb
mov
ja
add
pusha
es
push
sbb
lret
sub
test
lret
js
stos
add
in
xor
in
cltd
mov
fisubs
cmp
inc
sbb
lods
lret
cld
push
and
mov
movsl
mov
mov
ret
icebp
sbb
mov
in
xchg
add
jp
mov
adc
inc
loop
dec
int3
adc
aad
adc
stc
leave
fwait
sbb
dec
push
int3
xchg
test
push
outsl
fs
or
ljmp
dec
ljmp
inc
mov
mov
lods
popf
subb
push
pop
lods
cld
negb
int
ds
jbe
in
in
and
push
shlb
mov
xor
fnstsw
pusha
repnz
sbb
dec
xchg
scas
push
xchg
or
mov
adc
xor
out
mov
or
push
out
jge
rcrl
sub
lahf
adc
lahf
adc
push
adc
adc
dec
push
loope
push
test
pop
or
aas
cmp
push
or
in
mov
lods
shrb
or
js
fdivrs
movb
int
sub
js
xchg
xor
movsl
scas
lret
fwait
xstore-rng
cmpsl
test
sub
or
add
mov
cmp
cwtl
sti
push
sbb
lcall
mov
jbe
ss
xchg
push
or
add
test
movsl
fdivs
mov
stos
mov
mull
mov
lcall
test
nop
fistps
inc
bound
aad
xchg
push
jnp
imul
inc
push
sub
jecxz
dec
addr16
dec
repnz
sbb
or
and
loop,pn
loop
js
gs
dec
mov
push
pop
push
push
xchg
dec
push
fsts
push
jge
outsb
mov
je
int3
mov
jns
out
bound
sub
fistl
mov
xchg
fdivrs
xchg
add
xchg
mov
addr16
pop
cmpsl
pop
cltd
repz
or
ds
pop
mov
add
out
repnz
ss
or
inc
adc
clc
sub
loopne
repnz
cmp
subb
dec
std
mov
rorb
xchg
jbe
pop
mov
cs
or
sti
gs
rcrl
push
in
pushf
inc
aam
repnz
div
outsb
mov
test
mov
ss
stos
loope
cli
mov
sub
pop
inc
xchg
pop
cmp
pushf
and
jb
icebp
aad
in
int
iret
faddp
jno
fimull
mov
jp
jbe
push
mov
lock
mov
and
aam
repnz
adc
insb
jmp
imul
ss
cmp
xor
icebp
lock
inc
inc
push
inc
pop
cmp
mov
ljmp
and
iret
add
jne
cltd
push
test
jmp
add
inc
jb
push
mov
imulb
fidivrs
xor
in
scas
xchg
popa
inc
in
cwtl
js
cmpsb
loopne
pop
jno
mov
jno
in
loope
mov
scas
dec
mov
aaa
and
mov
adc
lods
inc
adc
cmpsl
sbb
push
jmp
xchg
fwait
jae
lcall
mov
inc
adc
cwtl
sub
scas
or
arpl
xor
mov
sbb
ret
imul
ret
sbb
int3
mov
sti
addr16
cmp
and
sub
mov
sbb
or
jecxz
into
fsubrl
popa
add
cmp
cld
sub
rcrb
push
addr16
jno
stc
lcall
test
and
out
sub
or
push
js
addr16
cmp
jg,pt
popa
aaa
leave
sbb
lret
jbe
inc
ljmp
add
addr16
mov
xchg
test
mov
and
pop
mov
out
clc
negb
popf
mov
mov
enter
push
dec
mov
sar
add
das
or
popf
mov
mov
repz
or
jle
lret
add
xchg
jge
adc
cmpsl
mov
pop
cmpsl
inc
imul
int
jp
sti
and
dec
in
sarl
cmpsb
adc
js
test
sti
imul
movsl
icebp
jge
cmpb
sub
pop
popf
adc
jnp
sahf
mov
or
test
sub
lea
outsb
addb
mov
ficoms
fbstp
xor
aad
fidivrs
test
out
xchg
sub
mov
cmpsl
xlat
out
mov
xor
pop
sbb
pusha
push
gs
test
push
jl
rclb
or
arpl
xor
dec
movsb
repnz
setp
decl
int3
jge
stos
lods
add
adc
aaa
push
loope
clc
jae
out
or
xchg
shlb
inc
mov
enter
movsl
inc
add
mov
ljmp
cmpsl
inc
insl
jae
test
inc
scas
jmp
inc
enter
inc
push
aam
lock
mov
mov
daa
mov
ja
pop
sub
inc
jnp
int
rorl
or
addr16
dec
xchg
dec
or
cmp
std
mov
dec
cltd
into
mov
jg
scas
mov
pop
popa
jp
xor
push
cmovbe
pop
push
les
cli
fwait
cmp
jl
mov
cld
and
pop
xor
mov
mov
jle
into
inc
aad
xchg
xor
mov
sbb
push
xchg
adc
addb
mov
lret
je
sbb
sub
and
addb
int
lcall
insl
iret
mov
es
or
xchg
adc
shl
inc
mov
push
adc
inc
mov
mov
aas
dec
sbb
stc
xor
sub
and
std
xor
jp
inc
dec
std
sbb
xchg
pop
dec
xchg
out
fldenv
and
icebp
repnz
dec
cmpsb
repz
repz
shl
jmp
test
jo
out
outsb
dec
das
xchg
mov
xorb
and
dec
mov
inc
adc
xlat
or
js
mov
dec
das
pop
clc
ja
sarl
je
push
pop
enter
sbb
cmc
adc
ja
fldl
andb
lds
clc
sub
in
cmp
mov
sbb
xchg
scas
xchg
jb
add
test
and
std
lret
mov
ret
or
pop
push
test
or
ds
lret
mov
cld
adc
cmpl
dec
mov
xchg
sub
or
hlt
es
dec
jmp
lods
xchg
adc
pop
in
xchg
mov
add
idivl
mov
and
ja
xlat
add
jecxz
fidivrl
call
stos
pop
sbb
push
sti
adc
dec
mov
sbb
push
lret
jne
jne
test
pop
add
or
jge
loopne
lahf
mov
fstpt
adc
out
imul
andl
rcll
mov
cmp
and
or
lret
loopne
push
ds
jmp
push
std
lock
adcb
mov
lahf
out
xchg
in
cmp
cmp
rcrb
aaa
xor
fidivl
pop
das
aas
adc
dec
inc
mov
outsb
adc
aas
sub
push
sbb
inc
mov
clc
dec
int
fwait
dec
fxch
out
shrb
imul
mov
in
push
nop
mov
clc
xlat
jmp
frstor
fsincos
lcall
push
test
out
scas
ja
scas
jno
es
or
fisttpl
dec
jbe
cmp
pusha
pop
xchg
imul
pop
repnz
and
sti
pop
std
js
push
or
icebp
inc
gs
push
fbstp
sub
pop
jns
gs
dec
fdivp
je
daa
lret
mov
mov
inc
push
adc
xor
pushf
sahf
stos
jmp
xor
repz
cmc
pop
mov
in
and
inc
xchg
push
sub
std
js
ja
hlt
scas
sbb
clc
and
inc
mov
push
jg
push
sub
pop
inc
aaa
push
sarl
inc
pop
mov
or
jle
push
lock
or
mov
jns
inc
out
scas
das
or
mov
ficoml
dec
lret
ja
loope
mov
and
lds
ja
mov
pop
in
mov
pop
dec
dec
adc
mov
adc
mov
lcall
and
pop
gs
stc
pop
ret
aad
mov
dec
popl
push
and
xor
dec
jbe
mov
fidivl
bound
mov
std
les
and
js
jmp
aam
pop
daa
inc
xor
or
repnz
push
nop
out
inc
jno
mov
lahf
mov
push
repnz
int3
xor
mov
xor
lock
loope
in
push
addb
adc
imul
xchg
ss
les
sbb
setb
mov
icebp
dec
out
xchg
xorl
sub
jmp
inc
or
aas
movsl
and
pusha
add
jns
aas
ret
int
ret
cld
and
inc
aaa
mov
cmp
adc
mov
cmc
sti
adc
fldcw
outsb
test
xchg
enter
inc
scas
outsb
add
bnd
imulb
das
scas
fnstsw
aad
inc
sbb
mov
notl
xor
fstps
gs
jne
scas
mov
mov
jg
jnp
add
ret
pop
sub
aas
cmpsl
inc
and
add
cli
adc
scas
mov
int3
stos
dec
cwtl
popa
dec
and
bound
mov
pop
inc
and
inc
xchg
jmp
jbe
fwait
xchg
mov
inc
pop
push
xor
mov
fidivl
xorb
repnz
vshufpd
std
pop
cmp
pop
loop
mov
loop
adcl
mov
cmp
fsubrl
push
in
jmp
popa
dec
push
mov
inc
in
lret
fadd
ret
aam
jo
shl
call
jg
mov
popf
lods
emms
cmpsl
jnp
xchg
fsubl
mov
mov
mov
icebp
sub
scas
aas
mov
jmp
sub
inc
fucomip
sub
bound
lahf
fsubs
jnp
sub
push
mov
mov
push
mov
xchg
cmp
pop
loopne
lds
pop
mov
enter
push
stos
je
jo
jmp
mov
mov
push
inc
test
mov
cmp
adc
dec
loopne
je
mov
sbb
mov
ds
cmp
add
mov
xchg
leave
push
sti
repnz
add
pop
in
sub
js
aas
leave
icebp
cwtl
inc
cmp
mov
shll
or
jae
mov
pop
ljmp
pop
pusha
pop
lods
adc
pop
adc
dec
clc
and
divl
icebp
insl
out
push
push
inc
and
insl
or
inc
pop
mov
xor
clc
sbb
pop
xchg
repnz
loope
xchg
lods
xor
js
cltd
cmp
movsb
mov
and
and
pop
aam
push
aad
bound
jecxz
call
pop
testb
jb
and
inc
jnp
and
sub
fs
mov
addl
lds
add
ss
sahf
lret
mov
or
push
sub
pop
ret
or
jg
out
xchg
out
jg
xchg
in
pushf
push
sub
cwtl
cmp
pop
inc
push
jb
imulb
call
lea
scas
mov
sbbl
dec
jecxz
mov
aad
push
xchg
fidivrl
xor
pop
mov
xchg
xchg
sarl
cld
leave
pop
aas
ss
repz
out
push
cmc
xor
and
rorb
ret
scas
sbb
jb
push
push
mov
lea
stos
rcr
xchg
shll
adc
lret
ja
jmp
popa
xor
and
add
and
pop
hlt
pop
adc
shll
in
lea
jnp
aad
mov
leave
xor
sub
divb
mov
inc
scas
pop
dec
and
push
or
cwtl
jmp
out
dec
or
lret
inc
adc
add
incl
cmp
mov
dec
incl
xor
jle
xchg
mov
and
cltd
ja
test
pop
cltd
fwait
or
ror
xchg
mov
mov
and
lods
int3
cmc
and
ret
call
icebp
add
loope
fimull
xorb
sub
inc
ljmp
in
jne
insl
inc
inc
sahf
mov
sbb
or
add
ljmp
xor
int3
add
cmpsl
filds
xchg
enter
or
fs
push
cmp
aaa
hlt
inc
orb
ss
inc
add
or
scas
lock
mov
mov
add
call
jmp
add
or
mov
pop
sub
mov
inc
jecxz
pushf
outsl
and
push
popa
push
pop
in
insl
cs
mov
lods
hlt
sub
mov
enter
or
test
movsl
jno
pop
sub
scas
in
int3
jae
pusha
fsubl
sbb
dec
dec
subl
rcrb
add
mov
loope
push
scas
test
and
lea
and
pop
cs
rclb
ljmp
xchg
ss
or
es
mov
mov
out
ja
mov
inc
xor
and
lock
and
divb
stos
mov
jnp
xor
pop
stc
jle
xchg
adc
fldenv
sbb
jo
lea
pushf
inc
fmuls
movsb
jmp
je
cmc
aaa
fsubrs
cmp
fwait
pushf
jnp
push
push
xchg
int3
push
inc
fwait
adc
push
cs
push
dec
out
mov
pop
jecxz
mov
lret
scas
adc
gs
lret
adc
scas
mov
push
popa
fprem
mov
xlat
lods
jp
shrb
inc
mull
les
add
icebp
ljmp
pop
xor
ja
sub
or
lds
jo
pop
adc
stos
pop
xor
push
push
and
mov
jp
jmp
dec
adc
cmpsb
gs
inc
push
cmpsl
inc
sbb
test
out
jp
push
jmp
out
add
lock
or
in
cmpb
test
mov
mov
add
iret
pop
pop
pop
test
aas
sub
jg
push
stc
lret
add
xor
es
and
mov
ds
lret
inc
bnd
cmc
js
std
mov
xor
cmp
mov
lods
outsl
orl
leave
pop
cmpsb
push
push
add
call
bound
xchg
cmpb
andb
xor
mov
xorb
push
lds
cmc
jl
pop
loop
iret
repz
jnp
fwait
xor
mov
mov
pop
stos
push
mov
adc
adc
stc
cs
jno
adc
sbb
add
dec
cli
add
inc
push
jecxz
jbe
hlt
xchg
pop
mov
aam
pusha
lock
lcall
push
jbe
mov
dec
je
adc
xchg
inc
test
pop
lods
mov
ror
xor
xor
cmp
sub
jg
sub
push
pop
mov
push
cmp
or
ret
jecxz
and
int3
cmp
push
test
cmp
imul
lods
jne
cmp
dec
jnp
and
call
jmp
inc
stc
stos
stos
mov
je
aas
inc
test
ljmp
push
loope
pop
pop
jle
pop
or
test
outsb
inc
jmp
jecxz
jmp
mov
in
cmpl
pop
xchg
in
gs
lret
pop
mov
pop
pop
std
ljmp
push
sub
lds
cmp
xchg
mov
lods
mov
lds
pop
fisubrs
xor
and
sub
lahf
and
sbb
dec
rcrl
add
outsl
jae
mov
dec
fldcw
xor
mov
addl
and
jmp
mov
in
pop
out
call
xchg
xor
sub
movsl
add
mov
fcmovne
lret
inc
or
adcb
adc
cmc
or
inc
sti
xor
out
into
sti
or
cwtl
mov
insl
cmp
mov
or
popa
scas
nop
movl
ljmp
fcmovu
add
mov
daa
stos
adc
add
data16
jae
sti
xor
fcmovbe
stos
inc
or
and
jb
pop
aaa
sbb
add
mov
nop
repz
inc
mov
int
sbb
aad
xchg
test
ret
and
mov
rcl
outsb
adc
push
cmp
xchg
cmp
pop
jne
cmpsl
mov
leave
xor
imul
inc
int3
ss
push
and
or
inc
in
into
mov
outsb
xchg
jo
inc
cmp
dec
mov
shll
sub
and
xchg
pop
fiadds
pop
jle
int
mov
lcall
scas
pop
fnsave
scas
jo
mov
sub
xor
xchg
in
mov
xor
iret
in
jp
loopne
xlat
negb
xchg
out
push
push
sbb
xchg
and
lretw
mov
out
ret
cmpsl
mov
aad
pop
add
movsl
fcoms
cmpsb
mov
push
addr16
imul
lods
je
movsl
xor
ss
ljmp
adc
mov
shlb
test
pop
push
mov
fdivl
dec
inc
xor
mov
pop
cmpsb
movsl
cld
push
add
pop
rcrl
cmp
jecxz
sbb
addr16
outsb
jns
sbb
mov
xor
jp
and
int3
repz
stos
scas
push
cmpsl
jb
loope
pop
movsl
enter
aam
mov
ds
das
inc
mov
push
xchg
mov
cs
xor
les
xchg
popf
xor
mov
enter
rol
insb
inc
mov
sub
jmp
mov
repz
inc
or
xchg
addr16
mov
pusha
sub
sbb
mov
xor
int3
fisubs
lock
mov
pop
sub
cli
xchg
cltd
aam
mov
xchg
mov
cmp
adc
and
jle
inc
dec
push
sub
clc
sbb
sbb
lods
push
jg
loopne
ljmp
xchg
into
mov
lcall
push
ss
in
lods
outsl
flds
inc
ret
outsb
sub
mov
mov
cmp
dec
testb
mov
inc
cmp
repnz
enter
sahf
cwtl
aam
jmp
or
imul
mov
dec
int
mov
rorb
sbb
mov
mov
insb
add
cwtl
aaa
adc
inc
cli
pop
bound
sbb
insl
aas
cmpsl
pop
fmull
jae
cmp
lea
ds
adc
fs
sbb
add
in
jb
pop
repnz
cs
jno
dec
lock
and
and
nop
popa
jle
hlt
mov
stc
cmp
adc
mov
in
stos
sub
and
sahf
int3
adc
inc
aam
fimuls
sub
mov
nop
into
jne
inc
insl
movsb
nop
pop
sub
sub
sti
loope
sub
jle
sub
popf
cs
mov
xchg
pop
push
lahf
sub
pop
lret
lret
nop
jl
mov
sub
pusha
cmpb
add
and
sub
popf
shl
out
mov
pop
pusha
push
add
orb
jecxz
add
nop
and
jp
les
add
lcall
cmpsl
nop
enter
aam
lock
movsb
ss
jg
dec
xchg
loope
xlat
lds
mov
or
push
jg
clc
cwtl
repnz
jnp
lahf
push
ds
sub
dec
leave
pop
out
cld
cmp
iret
jge
fstps
mov
roll
xor
mov
aaa
push
mov
mov
mov
mov
insb
insl
scas
pop
es
inc
repz
das
pusha
sarb
sbb
mov
push
lods
mov
cmp
sahf
ds
mov
or
cmp
lret
and
lret
mov
in
mov
inc
push
mov
pop
push
mov
outsb
mov
sub
stos
lret
mov
cltd
xchg
in
decl
pop
sbb
das
jge
mov
mov
pop
push
out
dec
inc
jmp
jg
xor
dec
cmp
cltd
dec
dec
or
sbb
outsl
jg
xor
and
sbb
mov
clc
mov
inc
fdivs
hlt
cmc
cmpsl
outsb
test
pop
xchg
xchg
pop
into
out
sub
andl
sbb
jne
dec
cmpsl
sbb
inc
sti
cmp
jle
adc
out
popl
xchg
cli
xchg
cmp
loopne
mov
lret
aam
mov
push
dec
lds
mov
push
mov
mov
push
loopne
popa
cli
push
push
xchg
pop
mov
mov
sub
in
fsub
imul
loopne
sub
xchg
mov
pop
das
int3
xchg
mov
cltd
mov
mov
jp
sbb
mov
mov
jecxz
and
int
out
loopne
pushf
fs
inc
inc
or
sbb
mov
leave
dec
mov
hlt
sub
jo
jae
and
stos
mov
lret
stc
sbb
mov
pop
cwtl
jns
push
jno
push
jns
or
mov
pop
pop
rolb
push
sahf
dec
in
js
sub
add
push
bnd
cs
cmp
pop
notb
inc
insl
movsb
in
test
fdivrp
cmp
push
inc
scas
sti
ss
adc
sub
nop
adc
mov
faddp
xchg
enter
cmpsb
stc
inc
jnp
jo
or
pop
pushf
scas
adc
sbb
and
inc
rcrl
fistps
mov
xor
les
cmpsb
cmp
sub
cmp
lret
and
stos
outsb
mov
sbb
pop
push
rclb
mov
pop
pop
add
rcr
fwait
rcl
jo
ficoms
sbb
scas
xchg
aad
inc
add
add
or
popa
mov
jo
sub
pop
jns
inc
mov
dec
mov
cmp
push
mov
popa
push
sub
enter
incb
fisttpl
xor
xchg
pop
fdivs
pop
call
leave
movsl
icebp
inc
fsts
aad
fildl
ljmp
jns
mov
add
adc
sub
inc
dec
icebp
in
push
xor
mov
mov
lock
xor
sub
outsl
pop
xlat
mov
or
enter
lea
xor
push
mov
insl
pandn
mov
adc
mov
mov
mov
sgdtl
xor
shrl
mov
ds
mov
mov
imul
and
cmc
adc
movsl
mov
adc
push
push
adc
clc
fs
jo
mov
fstp
mov
lret
jno
jmp
inc
push
adc
ljmp
out
or
jns
xor
imul
xchg
in
xchg
mov
xchg
std
into
and
out
sub
dec
cltd
pop
call
mov
popa
repnz
push
pop
jnp
cld
movsl
xorl
movsb
je
jp
mov
push
stc
xor
dec
jo
in
sub
or
pop
lcall
push
subl
pop
lods
push
sti
test
jecxz
mov
mov
aam
fwait
pop
fdiv
adc
inc
cmp
cmp
dec
fldl
rcrl
adc
push
jecxz
or
test
xor
in
xor
cmp
push
nop
stc
ficompl
add
dec
popf
test
enter
mov
into
and
push
ljmp
mov
clc
test
cltd
add
mov
data16
jbe
or
jo
xchg
dec
push
jno
lock
pop
dec
or
cmc
inc
pop
icebp
fidivl
mov
sbb
aam
lcall
push
dec
aas
aas
cmc
cwtl
xchg
and
or
and
les
mov
push
loopne
int3
iret
ret
inc
mov
jl
xchg
leave
movsb
mov
mov
notb
lock
addb
fs
aam
jmp
mov
lcall
mov
or
adc
sub
mov
mov
call
sbb
mov
data16
outsb
inc
in
jmp
xlat
sti
sbb
xchg
cltd
xor
jae
fwait
add
adc
ds
out
pop
push
mov
adc
pop
rclb
rcrb
dec
in
dec
mov
mov
lret
mov
ja
adc
fbld
insl
push
sub
dec
and
lods
or
xor
xor
shll
or
movl
mov
scas
add
push
sahf
enter
fidivrl
mov
cmpsb
rcll
outsl
in
cwtl
push
and
jmp
out
movsl
xchg
mov
or
cs
pop
and
push
test
sbb
sub
sbb
call
pop
push
adc
outsb
jmp
fisubl
cld
sub
pop
imul
pop
icebp
cmc
mov
ror
mov
repnz
adc
adc
in
cmpsl
adc
jns
test
setno
aaa
adc
popf
loopne
push
adc
outsl
mov
mov
dec
jecxz
xchg
cltd
mov
into
push
dec
sahf
mov
rcll
xchg
outsl
aam
jp
in
cmp
outsb
repnz
cmp
scas
jne
inc
xor
lods
dec
cmp
xor
dec
jecxz
gs
loop
cmpsb
aad
sbb
sub
in
loop
mov
jno
icebp
sub
repnz
outsb
push
mov
jecxz
mov
pop
jb
fwait
aas
andl
pusha
fidivl
xchg
push
jo
mov
sti
loopne
sbb
lea
repz
xchg
rcrb
daa
dec
sub
daa
filds
ljmp
ss
inc
and
outsl
push
mov
fbstp
daa
push
dec
and
jmp
fs
stc
and
inc
test
lret
sub
cs
mov
rcl
outsb
addb
fwait
daa
mov
int3
mov
mov
jb
cmp
dec
dec
lds
lret
sbb
sbb
je
pop
push
scas
dec
jbe
data16
jns
cmp
mov
cmc
cmp
popa
ret
mov
xchg
cmp
repz
xchg
jmp
sbb
sbb
fisubl
push
lret
fldl
in
ljmp
pop
fnstenv
mov
lret
or
mov
popa
movsl
call
add
loopne
fiadds
mov
mov
clc
shlb
mov
or
stos
xchg
jecxz
mov
rorb
shl
clc
lahf
pop
ficoms
mov
clc
dec
pop
mov
jmp
push
jb
jp
hlt
dec
mov
rclb
mov
popf
mov
inc
popf
or
mov
inc
ja
and
in
dec
insl
int3
adc
xchg
or
push
dec
sub
pop
repnz
xorb
jno
cmp
mov
int3
lcall
loop
mov
movsb
and
lds
pop
mov
mov
inc
push
insb
push
and
sbb
push
mov
push
inc
push
jle
adc
ljmp
dec
xor
shlb
add
subb
mov
test
loopne
xor
cmp
jge
enter
gs
add
fs
add
mov
cmp
add
fs
xchg
pop
xchg
pop
or
xchg
aad
lret
mov
pop
xor
ss
int
xchg
push
push
sub
jne
pop
leave
addr16
push
and
sub
cli
daa
cmp
lods
jp
ss
testl
inc
add
out
sbb
movsl
and
fidivs
lock
cmpl
enter
inc
pusha
arpl
push
inc
cmp
add
inc
adc
pop
ja
movsb
lods
adc
pop
iret
xchg
lret
lods
xchg
jecxz
rcrl
sub
stos
jmp
ficomps
fistpl
mov
push
sub
mov
mov
test
lret
adc
pop
rcrb
mov
cmp
in
pop
out
enter
push
loope
sub
movsb
cmp
rcrb
mov
mov
fadd
lahf
sahf
inc
sbb
sbb
in
xor
mov
sbb
imul
ret
wbinvd
out
je
into
pop
mov
mov
xor
and
cmc
xchg
sbb
xchg
inc
orb
xor
mov
fs
lcall
xchg
lret
add
dec
lods
mov
push
xor
pop
add
adc
scas
jmp
cmp
adc
rcl
cmc
pop
mov
sbbb
pop
bound
hlt
sbb
stos
std
leave
adc
scas
push
mov
fwait
cmpsb
pop
sar
xchg
sub
cmp
adc
dec
movsb
neg
adc
maskmovq
hlt
push
mov
xlat
ds
jl
stos
jge
cmpb
mov
pusha
dec
xlat
and
mov
int3
jbe
dec
fsubrl
sbb
xchg
repnz
movsl
lods
adc
in
and
cld
cmc
xchg
addl
push
or
into
ret
lret
das
sbb
loope
inc
loope
lret
xchg
adc
lods
outsb
out
shlb
xorb
scas
push
cmpsb
or
mov
sub
xchg
adc
or
cmp
lods
mov
addr16
inc
cwtl
xor
add
dec
das
mov
mov
leave
mov
adc
mov
dec
in
inc
std
jge
fbld
adc
cmp
pop
fcoms
jl
cmp
xchg
ja
bnd
adc
mov
dec
in
adc
data16
cmp
or
jo
adc
loope
push
loop
cmp
jp
in
pop
pop
ja
mov
addl
inc
aad
jno
dec
cmp
dec
adc
dec
imull
xchg
xor
imul
test
clc
mov
ljmp
sbb
push
mov
pop
xor
test
inc
int
ret
mov
addr16
cs
sub
movsb
ljmp
js
or
sub
aaa
outsl
imul
xchg
push
sbb
push
stos
mov
aad
cli
and
fs
mov
sbb
mov
cmp
mov
mov
mov
out
adc
xchg
cmp
pop
fidivs
or
rcl
int3
nop
xchg
test
stos
out
out
jmp
mov
and
sbb
jge
sub
pop
and
inc
or
inc
js
popa
mov
sbb
ja
mov
cmp
mov
mov
aaa
or
scas
out
je
push
cmp
adc
mov
aad
out
lock
cmpsl
cltd
stos
movsl
and
cmp
mov
jmp
ret
dec
insb
jo
je
addr16
push
xor
addr16
fistpl
stos
inc
lret
and
pop
fistl
mov
dec
jecxz
sti
mov
addr16
pop
rcr
push
pop
mov
int3
pop
ret
stos
mov
jbe
icebp
cmc
es
gs
mov
enter
pop
adc
sbb
pop
mov
iret
push
int
inc
rcrb
mov
and
shrl
ror
test
jl
mov
xorl
mov
push
or
adc
sbb
enter
popf
div
xor
add
push
dec
sbb
lea
mov
push
and
mov
push
inc
ss
and
sbb
test
or
in
in
lret
jns
adc
stos
clc
sub
cltd
shrb
cmpsb
or
fwait
adc
in
push
orb
in
sub
xchg
jge
pop
ja
lahf
lock
scas
aam
jecxz
and
or
test
mov
stc
dec
enter
lahf
inc
int3
pop
or
in
shll
xchg
pop
inc
and
test
adc
loopne
mov
push
cmpsb
ja
lea
sub
scas
sbb
nop
adc
inc
ja
jge
jo
insb
push
sub
and
sbb
or
sbb
cmp
mov
lds
insl
adc
mov
xor
ret
out
pop
into
enter
sub
pop
add
sub
in
cli
fidivs
push
clc
push
mov
test
movsl
aaa
sbb
outsl
iret
jge
in
dec
mov
ljmp
sub
sub
cmpsb
add
stos
icebp
cmp
push
mov
lea
test
jge
push
movsl
lahf
cmpsb
xchg
fcomps
pop
stos
xor
dec
mov
add
into
movsl
fbld
add
sbb
rorl
imul
push
jno
xchg
jb
repnz
lcall
icebp
mov
mov
or
pop
sub
xor
jl
inc
in
inc
push
mov
stos
mov
fisubl
mov
dec
pushf
and
cmpsb
nop
mov
push
mov
rcrl
aad
jno
push
mov
daa
ret
pop
mov
pop
insb
cmp
lret
movsb
mov
xchg
adc
xchg
jno
stos
xchg
push
pusha
dec
or
dec
in
stc
call
insb
in
outsl
pop
jnp
dec
dec
pushf
or
and
sbb
das
imul
call
mov
pop
or
cltd
cmp
adcl
mov
or
sub
xchg
out
pusha
mov
jno
aaa
sub
outsb
adc
mov
fimull
jecxz
cmpb
sti
and
adc
test
pop
pop
les
and
xchg
jmp
dec
and
stos
jge
cs
decl
jl
insb
data16
imul
loope
push
icebp
cmpb
adc
jns
mov
mov
sub
imul
test
sub
insl
ss
cmp
mov
mov
loop
or
pop
pop
in
adc
adc
dec
jl
aaa
loopne
xlat
outsb
test
daa
outsl
sbbb
push
sbb
push
stos
ss
lods
fs
leave
mov
iret
jo
pop
stc
in
mov
popf
sbbl
lods
seta
adc
mov
mov
int3
xchg
dec
in
push
jecxz
cmpsb
insl
and
xchg
fcoml
rcrl
mov
jecxz
mov
movsl
jne,pn
sti
je
ds
mull
or
cwtl
sarl
inc
dec
mov
sbb
mov
stc
aad
imull
hlt
mov
xchg
call
xor
notb
in
or
mov
xchg
sub
pushf
imul
xchg
xchg
sbb
mov
pushl
sbb
outsl
jae
sub
movsl
add
mov
cwtl
xor
adc
cld
pop
xchg
jecxz
push
adc
mov
adc
cmp
stos
pop
push
gs
test
sbb
jmp
movsl
inc
stos
mov
dec
xchg
inc
outsl
inc
cwtl
adc
jge
xor
js
cmp
inc
jae
xchg
cmp
ffree
aaa
clc
jbe
xchg
or
and
pshufw
push
or
dec
pop
sub
cli
scas
dec
inc
xor
or
orb
add
fcoms
data16
push
mov
push
lret
inc
shr
imul
das
or
outsl
stc
cmc
mov
fistl
jae
fstl
int
insb
xchg
mov
jns
addr16
push
mov
mov
orb
fiadds
loopne
push
pop
cmc
lods
pop
sahf
jo
push
shl
mov
push
pop
loop
stos
jmp
in
outsl
mov
gs
push
cmp
pushf
lcall
inc
rclb
adc
and
xor
movsl
fcomip
dec
pop
out
jecxz
xor
cmp
xchg
rcll
testl
ret
ds
mov
js
pop
call
push
jge
leave
test
lret
fldenv
sbb
jp
push
mov
loop
or
pop
fwait
pop
pop
pop
adc
cmc
cltd
push
lods
xchg
add
je
outsl
push
leave
mov
mov
cs
ds
mov
push
lds
mov
enter
mov
cld
sbb
mov
jg
or
jmp
pop
lahf
pop
mov
loope
sbb
xchg
rcrl
mov
leave
lock
inc
stos
ja
es
adc
sub
stos
jmp
loopne
pop
sbb
jl
cmp
fdivr
dec
xor
push
sbb
insb
inc
test
mov
jp
sub
dec
add
mov
jmp
and
cs
inc
outsb
call
inc
add
inc
pop
sub
movsl
mov
loop
outsl
leave
out
in
call
movlps
dec
pop
inc
hlt
jl
aam
mov
xchg
mov
pop
repz
pop
xor
jne
cwtl
sub
push
push
sbb
xchg
cmp
fwait
xor
out
int
xor
pop
mov
in
out
cmp
daa
push
cmp
xor
div
je
mov
push
addl
fidivl
stos
ss
cmc
sbb
in
std
roll
jns
jb
cmp
xchg
xchg
mov
adc
add
adcl
leave
shrl
insb
imul
mov
push
lret
sarl
mov
and
call
fs
xor
cmpsb
push
loope
and
test
lods
jne
sahf
sahf
imul
iret
fbstp
mov
ficompl
lret
leave
push
scas
imul
cmpsl
push
adc
sbb
movsb
cltd
cld
jns
insl
fildll
pop
and
test
sbb
popf
or
pop
leave
orl
enter
int
push
js
pop
sub
stc
dec
pop
jp
ss
andl
cmp
inc
mov
xor
ds
mov
popa
xchg
lods
shl
adc
filds
mov
test
xchg
pop
pop
push
stos
adc
jg
shll
hlt
cwtl
shlb
in
jns
xor
mov
sub
dec
mov
insb
insl
ljmp
push
scas
stc
pop
cmp
mov
add
add
std
mov
mov
std
jecxz
pop
test
test
lret
mov
gs
pop
bound
in
aam
jecxz
sahf
mov
outsl
and
xor
xchg
pusha
dec
iret
in
sub
sbb
xor
inc
loop
jns
sub
fwait
ret
std
cmp
mov
fidivrl
rolb
aaa
in
test
dec
fldenv
test
in
in
movsb
ret
mov
cli
rcr
icebp
inc
jle
and
push
or
and
shll
xor
scas
inc
xlat
or
rol
das
es
rclb
lahf
mov
mov
mov
cmp
sahf
dec
jmp
sub
lcall
lea
pop
test
add
pusha
mov
add
and
dec
inc
push
sub
mov
ret
push
outsb
out
mov
cltd
inc
icebp
ljmp
sahf
jl
out
sahf
pop
insl
fdivl
ret
sbb
jmp
cmp
jg
inc
data16
add
fwait
and
adc
xchg
mov
pushf
and
insl
jmp
push
jmp
mov
es
fdivrl
add
lock
lahf
daa
cltd
in
mov
das
inc
test
jge,pn
jo
notb
jg
rclb
cmpsl
add
xchg
rcll
mov
xor
mov
outsb
pop
mov
mov
scas
xchg
xor
sbb
jg
mov
fadds
aam
or
dec
lea
add
insb
gs
and
enter
pop
adc
outsl
lods
cmpsl
shlb
stos
int
pusha
cmpsb
fnstcw
push
aam
dec
fwait
cmpsb
mov
stos
repnz
out
adc
sti
rcll
mov
mov
push
xchg
cmp
jg
shlb
xor
sahf
sbb
out
loopne
xchg
inc
mov
negb
xchg
push
outsl
mov
into
xchg
jbe
fldenv
loop
mov
or
lods
leave
cmpsl
shlb
mov
xchg
xlat
mov
lcall
insb
leave
cmp
dec
aaa
sbb
mov
jbe
data16
fwait
jne
and
into
jecxz
jg
cli
dec
dec
add
adc
popa
shll
cld
ror
test
fnstcw
adc
xor
popa
mov
mov
pop
das
add
add
out
pop
jae
hlt
movsl
jae,pn
lret
cmc
ret
sti
mov
aaa
sti
or
xlat
add
inc
pop
adc
jp
les
or
jg
and
cltd
jne
mov
loope
in
fiaddl
insb
inc
je
icebp
mov
xor
fs
xor
adcl
sbb
and
lret
or
sarb
mov
adc
push
loopne
nop
mov
push
cmp
mov
neg
or
mov
inc
xchg
repz
sti
andb
mov
add
lret
jae
push
jl
xchg
in
mov
mov
jae
mov
xchg
xor
repnz
sub
fwait
and
arpl
push
rolb
ficoml
sti
xchg
ljmp
frstor
fdivr
je
push
push
and
mov
fiadds
sahf
dec
movsl
add
cwtl
mov
std
lods
mov
test
subl
xor
jbe
inc
cmp
jne
mov
fildll
sub
mov
out
xchg
popa
mov
pop
push
pushf
lret
adc
cmp
insl
mov
pusha
xor
cmp
mov
sub
leave
inc
or
cmp
sbb
insl
sbb
mov
push
mov
sub
jb
or
lods
and
lahf
xlat
mov
adc
fs
scas
push
cmp
dec
mov
dec
mov
push
cmpsb
movsb
jns
dec
cltd
dec
xor
cltd
out
xor
test
mov
sbb
fldln2
scas
aas
data16
xchg
sbb
adc
sub
mov
bound
or
or
je
inc
outsl
mov
mov
jb
loop
jmp
jecxz
cltd
fidivrs
adc
and
lret
sbb
in
hlt
movsb
sarb
scas
adc
or
nop
mov
xchg
mov
mov
or
sbb
or
pop
call
sbb
xchg
sbb
sub
adcb
enter
cld
lea
in
outsb
cltd
mul
aaa
cwtl
push
rcr
dec
mov
mov
cmovne
pop
test
je
arpl
mov
jg,pn
pushf
mov
test
pop
push
xchg
or
out
cmp
aaa
push
jbe
mov
jnp
mov
shrl
mov
xor
dec
mov
jg
or
out
push
pop
not
nop
leave
jl
int
or
xor
cmc
in
sarb
mov
mov
xchg
pusha
add
and
push
adc
jecxz
test
mov
jb
adcb
pop
jmp
mov
sbb
into
xor
fbld
pop
aam
into
movb
jg
jle
fcompl
into
ficompl
pextrw
mov
jge
popf
leave
xor
push
test
iret
xor
mov
mov
lock
in
daa
xor
int3
fs
cmpsb
mov
inc
hlt
cmp
out
lds
loopne
sub
out
and
roll
imul
arpl
mov
das
mov
or
clc
pop
push
or
pop
stos
and
cmp
adc
ss
fiadds
push
mov
fcompl
push
sbb
mov
ficompl
jp
cmpsl
xchg
add
insb
shrl
addr16
inc
test
fisubs
and
pop
mov
aam
pop
and
rorb
orb
les
inc
out
and
jno
loop
es
mov
pusha
mov
adc
mov
test
repz
cltd
testb
lahf
outsl
mov
aad
pop
loope
popa
shrl
jns
mov
pop
int
push
fidivl
enter
iret
xchg
lret
mov
test
into
sbb
or
stos
lods
cmp
cmp
sub
std
jbe
mov
shrb
sbb
and
push
sub
pop
insl
aas
mov
or
pop
lahf
mov
dec
xchg
icebp
bound
test
ds
push
outsl
movsl
mov
and
push
sbb
orl
xchg
in
test
ja
inc
mov
xlat
sti
push
or
pop
movsl
in
or
dec
mov
mov
lea
jecxz
jnp
in
imull
rcrl
mov
mov
dec
push
fsubl
fdivrs
pushf
xchg
pop
xor
add
sti
inc
adc
jbe
mov
jge
fimuls
lods
pop
push
dec
xlat
pop
xor
daa
pop
test
imul
sbb
lock
and
adc
dec
inc
push
pop
cmp
cli
rol
pop
pop
push
call
xor
add
mov
jecxz
mov
out
xchg
add
xor
out
mov
les
inc
or
cmpsb
test
add
jne
pop
push
add
push
or
mov
xchg
xchg
enter
test
bnd
inc
cltd
add
pop
pop
jnp
sbb
cmp
cmpsl
test
xchg
aaa
pop
in
loopne
adc
xorl
scas
jg
aaa
fdivs
ljmp
and
push
pop
lds
mov
mov
inc
mov
test
bound
push
arpl
test
mov
xchg
xchg
jmp
aas
push
mov
mov
pop
int3
cwtl
icebp
int3
iret
push
inc
jne
or
inc
sbb
mov
push
in
cs
cmp
cmp
decl
dec
sub
mov
and
pop
xor
push
imul
mov
cmp
jecxz
dec
imul
pop
stos
into
sub
xchg
adc
js
mov
test
or
inc
xor
in
ds
mov
adc
dec
or
ljmp
clc
jns
scas
mov
xor
jae
cmp
sub
xor
fdivrl
aam
pop
xor
mov
jne
je
movsl
jp
movsl
lret
es
dec
cmp
mov
dec
movsb
lret
test
pusha
out
inc
js
pusha
cmp
jne
dec
out
in
lret
std
sub
sbb
jbe
add
lret
fidivs
xchg
or
lods
notl
sbb
xchg
sub
movsb
cmc
sbb
jnp
add
inc
and
xorl
push
mov
or
cmp
jmp
sub
ja
push
jle
hlt
inc
fldt
inc
iret
xchg
int3
sub
mov
xor
and
rclb
lods
mov
lret
inc
sub
dec
sub
push
repnz
hlt
not
loope
dec
call
push
outsl
mov
mov
daa
mov
enter
sbb
insb
jns
add
add
popf
xchg
inc
or
outsb
mov
movsl
aad
mov
out
fimuls
andb
mov
fldcw
xor
imul
cmp
pop
loope
cli
imul
adc
push
mov
add
icebp
call
mov
mov
mov
inc
lea
cmc
test
xchg
hlt
jge
mov
or
cmp
clc
add
add
jmp
mov
xor
or
aam
pop
mov
push
aaa
js
sub
rol
or
repz
jo
cmp
cli
int3
aam
xchg
cmp
xor
leave
xchg
pop
in
push
ja
rcrb
std
stos
popa
lods
or
cld
dec
inc
jle
rolb
pop
and
test
fwait
mov
fwait
push
lock
cmp
fsubrs
mov
repnz
xor
mov
fidivrs
xchg
rolb
fstl
ficoml
mov
mov
dec
dec
hlt
movsl
mov
push
push
sbb
or
jns
daa
cmp
mov
mov
mov
jne
popa
adc
add
lods
loope
aam
sbb
das
out
push
pop
cmc
imul
inc
mov
xchg
mov
lret
push
push
fbld
fisubrs
pop
std
mov
sbb
adc
jmp
js
jnp
sub
cltd
mov
pop
outsl
es
push
sbb
adc
xchg
pusha
scas
inc
call
ficompl
push
orb
inc
lea
adc
mov
imul
stos
jg
lods
sbb
orb
std
sbb
pop
filds
inc
inc
xchg
outsl
add
xlat
int3
dec
mov
add
clc
aam
jne
adc
repnz
pop
ja
dec
enter
sbb
mov
mov
scas
ss
sbb
push
ja
jg
stc
dec
mov
cmp
jle
int3
js
inc
lods
jecxz
xor
inc
push
dec
out
clc
sbb
inc
or
into
mov
add
adc
push
xorl
pop
pop
insl
and
mov
ror
out
jb
das
test
lds
das
mov
je
cltd
lds
hlt
test
cmp
popf
mov
dec
mov
inc
lock
testl
in
popa
mov
cmp
push
mov
call
jl
lds
dec
popa
lret
pushf
dec
xchg
xor
and
out
mov
sub
popf
xchg
dec
cs
and
adc
int
aaa
jo
scas
and
fsubl
testl
adc
pusha
or
out
out
fldenv
jb
lahf
std
out
movsl
rcrl
sub
jp
cmpsb
movsl
dec
hlt
scas
sub
push
xchg
add
jno
inc
pop
movsb
jle
not
stos
push
push
mov
fildl
add
dec
xchg
outsb
dec
ror
hlt
nop
pop
mov
jmp
and
xchg
mov
sbb
pushf
ds
dec
push
mov
js
push
and
mov
adc
mov
jle
mov
mov
cmc
js
into
mov
shl
push
mov
lret
jbe
push
int3
in
sbb
inc
mov
push
push
jnp
xlat
jg
daa
jo
arpl
cmp
pushf
adc
xchg
push
sub
mov
pushf
popa
sti
cmp
push
push
inc
cmc
mov
add
or
sub
or
sahf
nop
inc
jl
clc
add
mov
or
idiv
xor
orb
inc
pop
sarb
cmp
inc
xor
push
es
mov
xlat
push
sub
sahf
aas
daa
subl
fimuls
or
cmp
push
inc
xchg
int
cltd
lock
pop
mov
into
neg
jnp
clc
add
dec
js
push
daa
popa
lret
les
dec
out
and
push
jecxz
and
jbe
ret
adc
js
sbb
nop
push
in
mov
xor
cmp
xorl
out
or
call
push
cli
loopne
push
ret
jno
or
pop
mov
push
xchg
cmp
push
adcb
lods
das
lds
mov
scas
js
jo
imul
and
jmp
fcoml
jnp
sbb
mov
lock
mov
in
xor
call
lods
xchg
dec
xchg
jle
sar
pusha
xchg
stos
adc
sub
popa
and
pop
fmuls
lret
insl
or
sti
pushf
cli
push
sub
ja
cli
imul
out
sbb
jg
push
sahf
rcrl
sbb
xchg
fdivr
divl
stos
and
scas
pushf
mov
mov
xchg
xchg
lods
fs
les
pop
mov
jecxz
dec
push
out
sbb
inc
or
xor
rcrl
sbbb
js
arpl
add
add
out
cwtl
mov
cmpsb
push
xor
add
inc
mov
mov
or
inc
or
xlat
lcall
test
imul
je
ftst
add
jno
mov
jb
push
pushf
cmp
add
iret
popa
sub
nop
pushf
xchg
jmp
jae
dec
sahf
pop
fdivl
adc
jmp
xchg
shlb
mov
in
leave
mov
or
push
add
pop
lret
mov
clc
or
fsubl
icebp
setno
daa
imul
ret
adc
push
jnp
push
mov
fcoms
leave
xchg
mov
movsl
mov
jne
xor
push
pop
stos
mov
sbbb
in
sbb
imulb
scas
xchg
aaa
popf
das
scas
shll
pop
xor
inc
push
pusha
imul
cmpsl
std
xlat
push
lds
xchg
loopne
push
pop
incl
push
push
icebp
and
sub
xor
jne
mov
ror
sub
pop
sbb
arpl
into
rcll
test
loope
adc
jbe
iret
imul
push
and
jp
pop
mov
adc
pop
jmp
adc
pop
movsb
and
mov
dec
xchg
std
mov
call
and
mov
sti
lds
dec
cmp
push
inc
push
fisttpl
test
xchg
cmpsl
xchg
out
inc
mov
pop
jb
loope
enter
push
scas
loopne
int3
sbb
cmp
mov
pop
mov
jno
sahf
mov
pop
lea
mov
daa
xor
sbb
jae
jns
mov
insb
in
pushf
mov
fildll
jns
mov
sbb
jnp
push
adc
pop
or
rcrl
bound
pop
add
inc
sub
lahf
pop
arpl
ret
pop
pop
jl
repnz
mov
mov
and
insl
pop
clc
cmp
sbb
outsb
data16
mov
mov
shr
out
pop
and
mul
jns
aam
sahf
popf
or
sub
insb
adc
dec
add
mov
jl
cmp
dec
or
loopne
jb
idivl
lock
call
negb
jecxz
push
lea
add
mov
fdivl
das
scas
cmp
jmp
cld
lea
xorb
movb
arpl
in
adc
and
mov
loopne
dec
xchg
jge
mov
loopne
mov
mov
push
push
adc
mov
loope
nop
inc
xchg
ret
inc
sub
adc
mov
cmpl
push
pop
adc
dec
and
rcl
xchg
dec
and
mov
adc
shlb
rcrb
loop
fwait
sbb
inc
hlt
out
imul
outsb
in
push
push
test
outsl
jbe
subl
iret
je
and
xchg
imul
mulb
fsubl
loopne
adc
mov
pop
pop
add
mov
dec
dec
inc
in
pop
lods
and
push
cmp
sbb
jmp
push
mov
popf
and
dec
je
cs
sti
sub
in
in
pop
stos
insb
decl
lret
inc
or
and
fadd
add
push
fsubs
cmp
imul
pop
xor
jo
mov
jae
cmp
jne
xchg
faddp
mov
mov
adc
in
cmp
sbb
stc
ret
xchg
int3
inc
pop
dec
pop
pop
pop
xchg
jl
sbb
loop
hlt
dec
lods
lcall
xchg
stc
lods
into
loope
xchg
pusha
pxor
movsb
xlat
shl
enter
push
shl
sbb
in
fmull
or
mov
mov
fistps
sub
pop
insl
inc
sub
scas
cmp
push
mov
adcl
mov
rol
loop
jg
imul
push
loop
xor
sti
sub
mov
es
xor
call
leave
ficoms
jmp
lods
clc
mov
jmp
int3
or
xor
movsl
fists
dec
and
mov
jae
xlat
push
notl
push
in
jg
inc
je
les
fsubl
sarl
pop
ljmp
inc
cmp
lds
push
xor
into
add
cltd
xchg
adc
pop
pop
jb
insb
xchg
inc
frstor
popw
xchg
gs
outsl
enter
xchg
jp
push
adc
into
cmpsb
and
cmp
or
add
ret
cmc
jecxz
cmp
xchg
movsb
in
jns
sti
lret
outsb
jmp
adc
dec
hlt
mov
jns
xchg
add
jecxz
xor
ja
movsl
adcb
adcb
leave
pop
fadd
fnsave
call
cmp
imul
in
cli
hlt
or
mov
inc
aam
scas
pusha
ljmp
push
push
mov
fistl
dec
lds
fcompl
lea
jb,pn
xchg
mov
or
gs
lods
repz
loopne
add
pop
mov
pop
xchg
in
popl
push
addr16
xchg
pop
rorb
push
gs
cld
inc
test
stos
popa
pop
shlb
cltd
push
or
pop
cltd
inc
push
out
lahf
xchg
addl
in
std
out
pop
mov
rorl
pop
cmpb
xor
inc
sub
je
into
shl
icebp
lret
cmp
loop
mov
or
leave
sbb
mov
xor
xor
mov
sub
ljmp
lea
inc
jns
xor
les
jo
cmpsl
mov
add
jo
es
sbbl
loope
mov
test
adc
lock
repz
cs
inc
pushf
mov
addr16
addb
sahf
pop
mov
rcr
fwait
or
rcll
push
in
adc
ds
leave
push
aad
lods
ret
out
fiaddl
fstps
jmp
mov
cld
add
push
neg
jne
cs
and
js
push
mov
mov
pop
pop
aam
xchg
ret
je
xchg
lea
cmp
lahf
ljmp
xchg
sbb
mov
xchg
jnp
js
push
xchg
out
test
and
enter
clc
icebp
mov
xchg
adc
loope
test
pop
inc
shr
sbb
clc
cmpsb
dec
inc
mov
xor
enter
xchg
dec
aad
and
in
dec
js
stos
cs
ret
fwait
jns
leave
ljmp
push
in
jb
xor
cwtl
fs
sti
jae
or
cmp
cmp
or
popf
test
mov
outsl
lahf
pop
hlt
lret
pop
jg
ss
dec
insl
xor
cli
mov
shr
sahf
xchg
adc
sbb
movsl
pop
push
scas
add
scas
mov
pop
push
add
cmpsb
rolb
aaa
inc
test
mov
add
dec
inc
out
das
adcl
xlat
mov
insb
or
ret
xor
or
rol
xor
pop
es
push
leave
outsb
shlb
dec
inc
mov
rorb
out
add
cltd
adc
fstpt
out
push
mov
adc
das
sbb
mov
sbb
push
sbb
in
add
pop
sbb
cmpsl
scas
add
loop
add
dec
jne
mov
faddl
xor
cmp
dec
or
xchg
xor
popfw
xorb
jb
imul
mov
fsubs
and
test
mov
stos
dec
iret
mov
xor
lret
jmp
add
daa
aaa
rsm
push
int
mov
and
sub
mov
sbb
jno
cltd
jmp
mov
cmp
and
rcl
orl
adc
dec
jg
pop
cmc
dec
or
gs
jmp
mov
dec
insb
test
or
jo
cmp
cmp
cmp
int
enter
jg
repz
sub
sub
push
ja
outsl
cmp
je
inc
dec
pop
inc
rorl
mov
add
mov
ret
add
pusha
rorl
xor
sar
rcrb
stos
push
rcrb
push
pushf
jge
ficoms
lods
and
cmpsb
and
mov
sbb
pop
scas
fwait
sbb
and
xchg
inc
sbb
sbb
addr16
outsb
xor
mov
out
cltd
adc
or
repz
dec
std
and
xchg
shll
test
push
inc
lcall
sub
fildll
pop
cmpsl
enter
out
pop
push
sahf
xchg
add
adc
sbb
fistpll
sbb
call
movsl
sub
cmp
dec
lds
cmpsb
js
adc
pop
fldcw
rcll
mov
ret
bound
mov
arpl
inc
push
pop
sbbb
rorb
push
xor
ret
sar
nop
pop
cmp
fdivs
push
fwait
mov
pop
dec
cmp
ret
xor
rorl
jle
and
call
stos
jno
jp
cmpsb
xor
cmp
or
inc
repnz
cmp
adc
dec
stos
mov
mov
pop
xchg
cli
stos
sbb
fmuls
cld
cld
insl
hlt
popa
mov
sbbb
jle
adc
sbb
fst
pop
out
in
mov
ja
jl
addr16
or
out
add
pop
adc
mov
fnstenv
push
inc
lfs
xlat
mov
subl
test
jae
fcmovb
aas
push
mov
sti
cli
sub
loope
dec
xor
pusha
repz
movsl
mov
out
inc
hlt
or
inc
ja
ljmp
jb
leave
insb
dec
cmp
les
adc
mov
lods
inc
cld
out
popa
mov
imul
xor
lret
sub
test
je
adc
gs
mov
dec
call
in
sub
push
pop
popf
sti
mov
xchg
and
loope
push
sbb
subl
daa
lret
mov
mov
int
out
push
xor
mov
push
add
ret
mov
aam
psubq
imul
or
insb
push
pop
pop
fistpl
sbb
pop
dec
xchg
fbstp
pop
or
and
rcll
in
inc
cwtl
sub
fidivl
in
js
push
sbb
cmc
sbb
inc
pushf
jnp
xchg
loop
sbb
jns
mov
rolb
test
test
add
mov
add
mov
xchg
mov
les
out
jns
pop
pop
ror
std
xlat
cmpsl
fldl
add
out
clc
mov
adc
lret
dec
inc
in
and
out
ja
cli
test
mov
jmp
dec
mov
loopne
call
inc
mov
adc
ror
xor
pushf
push
stc
pop
call
dec
pop
mov
inc
lret
stos
jne
mov
pop
cmp
stc
das
outsb
movsl
nop
sub
test
arpl
adc
sbb
into
rcrl
mov
xchg
mov
mov
mov
mov
push
mov
push
clc
push
mov
aaa
mov
sbb
push
repz
mov
mov
clc
sbb
addr16
jmp
lods
or
jnp
fmull
push
mov
dec
dec
sahf
mov
lret
mov
xlat
jb
mov
dec
sbb
xchg
inc
fsubp
daa
dec
add
in
movsb
cmp
outsb
insl
pop
jae
out
jb
out
xchg
daa
addb
jp
decb
jns
add
cmpsb
out
push
sbb
inc
sbb
sbb
sbbl
ret
aam
orl
inc
popf
call
cmp
in
or
fcomi
mov
ret
mov
and
ret
sbb
imul
add
iret
or
lods
pop
fidivrs
in
sbb
and
cmpb
mov
fisttps
das
cld
fstps
outsl
stos
out
xchg
sub
mov
insb
adc
lea
mov
scas
add
mov
fistl
repnz
iret
sbb
xor
push
push
sbb
jge
ret
jns
cmpsl
arpl
pop
outsb
hlt
sbb
push
pop
stc
les
sti
sub
out
push
lock
std
jno
jmp
jno
push
fnstenv
mov
push
cmpsl
mov
mov
and
xor
cmc
jecxz
sbb
jnp
mov
in
push
add
icebp
inc
lahf
scas
sub
or
repz
bswap
jb
les
mov
push
fs
xor
xor
frstor
xor
cmp
push
xor
or
mov
movsl
mov
or
daa
xchg
mov
fcompl
orl
movsb
pop
lock
jle
mov
jmp
sub
push
or
ret
and
mov
xor
xor
adc
mov
dec
je
leave
or
mov
inc
lock
leave
mov
stos
int
lahf
std
mull
jno
adcl
lcall
jo
pusha
adc
push
jge
inc
jbe
inc
mov
pop
lahf
das
lds
stc
and
fmuls
mov
in
shl
push
cmpl
and
test
mov
lds
pop
movl
add
sub
mov
cmpsb
cmp
add
dec
lret
movsl
repnz
lahf
push
mov
or
mov
in
call
lods
xor
mov
cs
rolb
cmp
insb
push
lcall
sbb
push
in
daa
dec
inc
scas
or
stos
jns
loope
cmove
dec
xchg
mov
xchg
fwait
nop
out
pop
in
in
add
filds
test
jle
popl
movsl
mov
pop
add
push
jl
add
pop
push
insb
cld
or
scas
scas
in
xchg
aaa
pop
xor
sbb
or
mov
push
adc
les
fdivrs
sar
dec
cli
das
mov
shll
sub
mull
mov
jo
jl
filds
jne
mov
fmull
adc
scas
repz
push
das
push
lods
cli
sub
lea
sbb
adcb
addl
mov
push
pop
sbb
lods
xchg
cli
jge
cmpsl
pusha
ja
sbb
out
movsl
push
fabs
pop
cmp
xchg
mov
and
push
movl
outsb
adc
push
pop
xlat
cltd
mov
xchg
nop
xchg
jne
dec
pop
inc
xchg
mov
push
rolb
je
xlat
es
adc
hlt
test
aas
js
test
mov
in
enter
mov
sbb
dec
repz
jae
mov
out
imul
iret
fsincos
cli
inc
sarb
xlat
int
test
xchg
iret
cmp
loope
mov
adcb
pop
ljmp
sub
push
lods
loopne
in
mov
ret
sbb
test
add
sub
add
sub
mov
in
jne
xchg
lahf
repz
inc
jnp
outsb
and
mov
push
outsl
push
dec
cmp
xor
dec
in
mov
popa
jbe
sbb
push
lret
subb
inc
sub
decl
data16
jmp
or
lret
pop
inc
mov
sarl
sub
clc
fildl
dec
sub
push
add
xchg
and
ljmp
inc
pop
jne
jns
lret
inc
push
pop
outsl
add
ret
push
in
pop
mov
cmp
jecxz
inc
enter
testb
mov
andl
and
sbb
jge
pop
push
push
xor
pop
sbb
adc
sti
jecxz
and
in
add
mov
push
adc
arpl
jmp
insb
stc
faddl
jecxz
inc
and
roll
lods
push
movb
orl
cltd
aas
movsl
ja
dec
mov
sbb
je
js
out
jb
cmc
test
movsl
cmc
add
dec
pop
rcrl
sbb
mov
in
dec
and
sub
fs
in
inc
and
push
lds
call
mov
sahf
sbb
pop
xlat
leave
in
sub
stc
add
fstps
sbb
jge
pop
mov
cwtl
mov
mov
lds
inc
ret
adc
add
shlb
push
push
push
mov
out
movsb
sahf
inc
pop
filds
or
jne
in
sbb
nop
ds
xchg
ret
outsl
imul
adc
enter
call
fimuls
fdivl
dec
xchg
sbb
mov
aam
sbb
shl
pop
fsubs
inc
mov
adcb
notb
stos
subl
mov
add
shrb
int3
cld
or
cmpsl
jne
fs
mov
xchg
ret
cmp
sbb
push
or
mov
mov
mov
lret
arpl
loop
imul
ret
cltd
cltd
xchg
mov
push
push
out
mov
sbb
cmp
mov
pop
popf
fsubs
mov
inc
daa
inc
loop
push
imul
fisubl
add
cmp
cmp
popa
mov
cmp
popa
jle
sbb
sub
mov
enter
cli
push
dec
jecxz
in
lods
adc
imul
ja
sbb
jbe
or
in
insl
popa
xor
clc
sub
pop
cmp
cmp
aad
mov
inc
jne
sub
dec
pop
inc
fsubs
adc
xchg
and
sbb
jmp
dec
xor
mov
lods
call
or
enter
and
inc
loop
mov
pop
dec
mov
nop
sub
hlt
cmp
pop
insb
pop
sbb
xchg
lret
lea
cld
dec
mov
add
push
shll
shll
in
scas
scas
ljmp
gs
cmp
xlat
bnd
mov
lds
xchg
stos
sub
mov
repz
mov
mov
mov
ja
sbb
lcall
jle
xor
cli
lret
dec
mov
sub
mov
sbb
jo
and
mov
sahf
push
fistl
fwait
cli
aam
imul
xor
icebp
cmp
mov
pusha
into
cwtl
dec
pop
fisubs
pop
dec
jecxz
add
ljmp
pause
cs
xor
ret
out
cs
loope
cmp
jecxz
dec
std
cmp
popf
push
push
and
inc
cmp
subl
fwait
sarb
push
push
cld
jae
push
or
cmp
lcall
jl
pop
jge
aas
adc
and
nop
mov
xchg
and
xchg
mov
sahf
icebp
loopne
das
jno
clc
sub
jb
cmp
iret
adc
aaa
int
jae
dec
les
sbb
inc
out
sub
call
push
addb
stc
mov
ret
jns
repnz
mov
bound
lcall
insl
out
popl
xor
push
mov
loope
jge
bound
pop
bound
mov
imul
adc
imul
pop
fisttpl
ret
pop
cmp
jecxz
fbstp
insb
pop
jmp
sbb
adc
ret
cmp
mov
adc
sbb
imull
dec
mov
fwait
sti
dec
mov
gs
insb
xchg
lret
loope
inc
dec
dec
dec
adcl
cs
sbb
cld
es
adc
dec
mov
sti
push
lcall
cmp
xchg
jecxz
repz
push
imul
push
mov
lcall
inc
insl
xor
fs
int3
imul
jp
cs
pop
ja
xchg
push
xchg
lods
cwtl
cltd
daa
inc
mov
lret
leave
sub
cli
lahf
and
or
xor
mov
dec
hlt
arpl
and
cmovns
mov
insl
cltd
mov
out
aaa
imul
shlb
hlt
xor
push
pop
sub
add
out
popf
je
les
and
fnstsw
add
jns
decb
rcrl
mov
cltd
lret
imul
jnp
lahf
or
lcall
inc
ficoml
inc
or
dec
xor
fwait
sub
dec
dec
sub
int3
xchg
adc
sahf
imull
xchg
fisubs
enter
pop
repnz
mov
cmp
mov
shrb
imul
adc
and
dec
mov
shrb
test
jmp
dec
sbb
mov
sbb
js
xor
fidivl
mov
cmp
mov
in
pop
daa
pop
and
adc
push
imul
movsb
inc
and
loop
mov
fsubs
arpl
call
sahf
xchg
dec
xor
ds
das
gs
mov
push
clc
mov
dec
xlat
xor
mov
xchg
dec
cmp
pusha
loope
dec
jno
adc
addr16
ljmp
ret
pop
add
mov
pop
jle
rorb
fmulp
in
dec
ret
xor
not
test
lods
pop
push
aas
divl
cli
ret
mov
out
sbb
es
sub
or
jl
int3
fcomi
adc
fcmovnbe
pop
add
add
inc
and
jecxz
push
xchg
mov
xchg
inc
aad
in
loope
dec
lods
idivl
mov
inc
mov
adc
push
pop
mov
pop
rcl
dec
pop
ja
cmpsl
outsb
sub
or
mov
cmpsb
mov
jae
in
sti
push
push
cli
dec
push
loope
adc
dec
dec
out
mov
add
cld
sub
pop
lods
adc
mov
mov
into
iret
mov
ss
xchg
sub
int3
aas
xchg
or
cli
xor
jnp
mov
sti
pop
nop
mov
shlb
rcrb
rorl
push
mov
and
cmpsb
sbb
push
mov
cmp
mov
aam
outsl
adc
dec
fcmovu
mov
jbe
mov
cmp
mov
lahf
icebp
xchg
fistl
cmp
unpckhps
scas
jmp
mov
fadd
jmp
shlb
in
cmpsb
mov
cmc
in
sahf
push
loop
add
mov
sub
lret
inc
insl
repz
popa
inc
popf
js
fistpl
add
in
insb
cwtl
jmp
test
inc
ja
xor
adc
popa
gs
and
xlat
or
mov
mov
cwtl
pushf
mov
adc
jne
mov
cwtl
sbbb
adc
sbb
sub
jne
enter
dec
out
adc
pushf
rol
mov
sbb
lahf
into
add
jo
pop
sbb
call
jl
in
cmp
in
mov
jno
jle
insb
mov
aam
test
pusha
in
jg
pop
stos
or
pop
repz
adc
ja
mov
xchg
mov
sbb
cmp
sbb
dec
or
or
push
pop
hlt
or
fisttps
in
mov
mov
nop
repz
into
sbb
out
jl
test
xchg
dec
iret
mov
repz
aaa
fists
leave
jecxz
test
fcomp
add
loop
add
in
dec
mov
and
out
pop
in
adc
xlat
jl
movb
out
fistpll
popf
lods
mov
loopne
repz
adcb
sbbl
js
push
arpl
inc
xor
cli
jae
adc
push
push
out
push
loopne
imul
aam
cmp
jle
arpl
mov
cmp
add
mov
leave
in
andb
xchg
shl
jb
sarb
leave
daa
jns
subb
inc
test
aam
push
pop
pusha
jno
jle
mov
out
out
insl
aaa
and
sub
lds
and
cwtl
lods
adc
add
movsl
pushw
jg
jo
loopne
and
iret
sub
xlat
fstps
xchg
adc
stos
sub
cmpsb
ret
jp
stc
out
xchg
hlt
xor
nop
outsb
or
mov
insb
pop
fiaddl
aad
movsb
add
dec
mov
mov
lea
out
outsb
xor
into
pop
add
sbb
sar
loope
pop
lahf
stos
push
sub
inc
xor
ja
andb
mov
xor
outsb
mov
mov
dec
sbb
sar
dec
mov
and
mov
into
mov
add
clc
or
cld
ret
movsl
cwtl
cltd
mov
mov
xchg
test
jb
dec
adc
inc
hlt
push
push
cmp
ja
int
xchg
outsb
imul
add
cwtl
xor
mov
jp
cli
jmp
gs
in
jo
sub
lea
jb
or
pop
or
inc
mov
in
pop
cmp
mov
cmpsb
push
cmp
insb
addr16
inc
dec
filds
loop
mov
mov
shrl
cld
push
pushf
gs
cmp
fnsave
xchg
adc
insl
xchg
addb
shll
repnz
mov
lods
and
test
cli
sahf
pop
pop
cs
ja
rcrb
and
fimuls
adc
or
jl
ret
sbb
imulb
shrb
movsl
ds
stc
jae
xchg
xchg
jo
xchg
fbstp
mov
or
ret
ss
jne
cmp
dec
push
jae
mov
adc
popa
loop
xchg
lcall
push
inc
mov
mov
inc
xchg
addr16
pop
dec
pop
movsl
into
and
loop
icebp
subl
lods
jg
jg
icebp
les
enter
out
test
insb
add
arpl
ret
in
arpl
test
add
mov
jmp
not
cmp
dec
sbb
in
sbb
xor
xchg
sti
mov
dec
stos
sub
jmp
sub
sbbl
popa
shrd
cmc
in
lods
es
sahf
in
call
push
jmp
jbe
fbld
push
mov
shll
fdivs
jge
inc
mov
push
loopne
mov
scas
insb
outsb
rcrb
jl
mov
hlt
mov
jo
xor
cs
js
mov
scas
mov
pusha
idivb
mov
test
sahf
in
loope
imul
sub
dec
movsl
mov
sub
lods
addr16
add
mov
push
pop
out
mov
xlat
pop
xchg
add
cmp
insl
adc
aaa
into
pop
lock
and
lods
jmp
xchg
leave
dec
mov
popa
sti
icebp
ss
sub
das
lods
xlat
out
test
pop
out
sub
in
add
sbb
cmpsb
pop
push
stos
mov
nop
dec
jle,pt
push
out
mov
xchg
out
add
jle
cmp
das
pop
add
cmpsl
pushf
jns
sahf
dec
mov
rolb
dec
rcll
test
out
push
cmpsl
rclb
push
stc
mov
xchg
out
cs
mov
lods
xor
mov
frstor
push
xor
lret
rcl
dec
jno
cmp
mov
sub
loop
xchg
xchg
xor
inc
arpl
adcl
adc
add
sbb
xchg
ss
or
cmp
mov
inc
jae
mov
icebp
rcr
inc
xor
dec
add
mov
in
jbe
xchg
or
pushf
cld
sub
mov
repz
jae
cmp
sub
inc
fstpt
iret
or
inc
mov
outsb
inc
aaa
in
lods
fucomip
mov
fs
sbb
sub
mov
mov
aad
iret
ja
push
add
dec
jmp
pop
sbbl
js
xor
jne
or
xlat
shlb
mov
xor
push
faddl
not
enter
fmuls
adc
inc
sub
dec
sbb
dec
push
jecxz
xor
sbb
in
or
sub
and
pop
sub
sti
lea
or
dec
leave
mov
adc
add
lret
test
popa
push
pusha
enter
push
push
mov
imulb
and
test
arpl
pop
es
int
hlt
jnp
jp
mov
xor
pop
add
outsb
and
imul
dec
sub
jmp
adcb
xorb
add
lahf
shrl
push
xchg
insb
test
and
sub
mov
mov
fcmovne
addr16
into
loopne,pt
scas
jge
imul
push
pop
shl
xor
sbbl
es
fidivrl
mov
mov
inc
mov
mov
adc
test
fsubs
xchg
out
call
fisubrl
das
insl
out
scas
inc
inc
imul
fcmovnb
movl
jnp
inc
pusha
sbb
push
xchg
dec
ret
mulb
call
or
aas
xor
fucomp
sub
enter
pop
test
pusha
mov
push
jp
cmp
sub
cmp
xor
cmp
push
xor
test
ret
ret
and
rorl
cmp
adc
push
push
push
test
mov
push
lds
shlb
call
jge
adc
jo
mov
shlb
outsl
cmp
icebp
sub
mov
imul
xlat
lahf
jns
push
push
les
repz
cwtl
movsb
push
lret
into
and
cmp
ljmp
fidivrs
outsb
jns
into
mov
sub
mov
iret
outsb
cltd
ror
mov
add
mov
add
scas
add
cmp
lods
xlat
and
das
sbb
sub
out
lcall
repz
and
mov
cwtl
fwait
pop
inc
into
jae
xchg
cmp
out
xor
jbe
in
into
ret
call
push
pop
ss
aas
movsb
stos
mov
cmpb
jns
cmpsl
shll
or
push
and
cmp
cmpb
enter
jg
fisttps
sahf
jbe
or
ds
fcmovne
and
ss
cmc
sub
mov
jge
lock
arpl
fdivp
nop
lcall
jmp
xchg
mov
mov
outsb
mov
mov
push
mov
stc
cwtl
mov
fwait
push
icebp
mov
daa
shlb
xchg
mov
xchg
fadds
xchg
push
adc
cs
mov
push
inc
mov
hlt
push
pop
add
iret
pop
popf
lahf
lcall
inc
and
xchg
inc
fidivrs
pop
inc
pop
in
call
data16
cmp
inc
ljmp
adc
ljmp
or
sbb
mov
pop
or
dec
add
inc
mov
xor
adc
insb
mov
sbb
cmp
clc
or
in
movsb
add
pop
pusha
push
add
mov
sub
or
in
mov
dec
in
lahf
and
jp
push
mov
xchg
inc
push
adc
ret
jb
push
ffreep
push
lock
int3
movsb
or
jp
movsl
cmp
sarl
or
push
sbb
dec
pop
push
add
push
in
pushf
mov
fcmovnbe
aaa
cwtl
addr16
jae
jp
xchg
sti
cmp
arpl
sbb
add
imul
fwait
sub
xchg
cli
aas
sub
arpl
sbb
enter
das
adc
out
je
sarl
imul
imul
and
addr16
insl
mov
out
clc
sbb
or
in
mov
dec
xchg
add
dec
pop
adc
int
inc
daa
das
or
xchg
dec
xchg
adc
arpl
xor
rol
hlt
or
dec
xchg
push
stos
inc
mov
shlb
jbe
into
add
aad
adc
sbb
jb
aad
movsb
gs
xlat
fisubl
in
es
sbb
sbb
inc
mov
pop
pop
mov
fs
stc
push
adc
out
imul
dec
inc
mov
push
push
mov
jne
orb
xchg
or
ja
stos
jns
jg
out
ja
cltd
push
sarl
push
or
dec
xchg
ret
ljmp
jle
jle
inc
cmpsb
pop
sahf
movsl
mov
cmpsl
das
jle
adc
icebp
mov
inc
lea
dec
lods
pushf
cltd
es
stos
ret
xchg
mov
jg
arpl
push
and
and
mov
stc
repz
cli
or
stos
cmp
frstor
in
sub
or
or
repz
nop
pop
movsb
jb
les
loope
lret
loopne
or
sti
fmuls
push
mov
jne
sub
ljmp
add
inc
mov
sub
rorl
testb
mov
movb
dec
add
jmp
dec
xor
arpl
mov
jl
js
cwtl
dec
sbb
insb
mov
push
cmpl
fucomip
sub
out
stos
sbbl
xchg
xor
rcrb
adcb
pop
les
adc
cld
add
pop
clc
mov
mov
jg
cmp
lahf
xchg
jmp
or
push
in
inc
stos
cwtl
jae
in
mov
mov
faddl
aam
fisttpl
lahf
and
leave
dec
test
mov
inc
inc
dec
push
pop
sub
adc
mov
int
sub
adcl
xor
in
inc
aam
aad
add
mov
xor
adc
into
pop
cwtl
cmp
push
or
ss
scas
jmp
mov
jo
lds
sub
ja
jle
adc
sti
dec
bound
mov
out
rcr
dec
rorl
xorb
dec
adc
add
insl
stos
jmp
mov
cmp
add
or
cmp
jno
mov
out
mov
mov
push
and
mov
mov
dec
sar
loope
sub
mov
hlt
cmp
jle
lods
loop
jp
sarl
push
lods
dec
or
jae
lods
lret
fistps
xor
mov
add
int3
and
ret
push
pop
test
pusha
jnp
or
stos
sti
test
ss
fiadds
or
pop
aam
lock
fsubrp
testl
shrl
adc
mov
jbe
sbb
std
jl
popfw
mov
or
cmp
dec
loope
insl
fcoml
rcrl
sub
push
in
fwait
sub
sub
sahf
add
shl
ds
adc
mov
js
xchg
sub
fistpll
lds
in
aad
insl
mov
mov
shlb
orl
pop
sub
dec
xor
cmc
inc
test
aad
add
gs
xlat
xorb
cwtl
dec
aas
mov
pop
loope
ret
dec
sbbl
inc
xchg
pop
lahf
fwait
xor
out
imul
in
jns
cmp
cmp
mov
xchg
incb
insb
xor
pop
add
xchg
dec
or
push
imul
outsb
xchg
pop
call
out
adc
idiv
test
call
cwtl
push
out
sbb
sbb
mov
sbb
push
cmp
scas
xchg
sub
jmp
adc
sbb
xchg
fnstcw
mov
rorl
adc
pop
cs
test
jne
push
mov
xlat
dec
sbb
aaa
jecxz,pt
mov
loopne
data16
mov
mov
jl
sbb
out
jge
xor
fwait
mov
sub
jae
push
clc
push
fstpt
sbb
in
roll
sub
sub
roll
cmp
lahf
xchg
xor
adc
mov
idivl
push
sub
cmp
lds
out
push
fistl
push
mov
scas
cmpb
xor
data16
imul
je
and
pop
fdivl
in
or
fidivrs
fs
cs
sub
cmc
adc
in
andb
cwtl
stos
pop
popf
push
mov
mov
leave
ds
dec
das
ljmp
mov
std
mov
xor
pop
aad
popf
adc
adc
mov
iret
or
insl
addr16
sub
inc
jbe
cli
shr
mov
out
sub
or
fwait
dec
cmpsb
mov
ds
scas
xchg
dec
add
push
je
bswap
lock
aaa
pop
mov
aad
mov
stos
popf
nop
stos
lea
sub
jbe
call
pop
scas
mov
movsb
xchg
shlb
lret
fdivrs
push
jo
pop
scas
in
imul
shlb
sbb
test
leave
lods
cmp
jg
loop
jno
int3
xorb
mov
aaa
push
lods
rorl
int
and
inc
mov
cs
add
mov
cs
sti
lods
pusha
icebp
insl
xchg
mov
cld
sbb
imul
pop
mov
hlt
mov
xchg
xchg
xchg
sub
in
int
addb
jmp
push
test
mov
rcl
dec
xchg
stos
add
outsl
ljmp
and
jae
push
adc
sbb
mov
inc
stos
mov
sbb
push
mov
ss
pop
test
inc
mov
fwait
lock
xor
xchg
imul
shlb
sub
sbbl
push
mov
cmpl
mov
jg
jge
filds
gs
mov
cld
mov
pop
dec
call
enter
in
or
mov
pop
movsl
pop
repnz
aas
jp
aad
push
js
lock
pop
xchg
jmp
jnp
xlat
lret
shr
mov
testl
dec
adc
int
insb
push
fisttpl
std
push
pop
mov
xchg
popa
bound
je
xor
mov
fs
rcll
nop
cmpsl
jns
and
pop
lds
mov
xor
imul
pop
jb
shrd
ljmp
aad
push
movsl
sub
jbe
adc
mov
jle
out
popf
mov
lods
jae
pop
rcrl
in
jecxz
jge
pusha
push
notb
pcmpeqd
call
jne
cmp
mov
mov
test
ds
and
sub
inc
push
jp
flds
or
jae
mov
ffree
cmp
pop
arpl
or
inc
idivl
jp
decl
mov
adc
imul
popf
les
jb
popf
add
sub
xor
inc
add
jno,pt
xor
pushl
cmc
xchg
ss
pop
xor
pop
sub
dec
into
out
xchg
bound
xchg
cmpsb
adc
popf
shl
push
dec
xor
pop
movsl
or
mov
pop
inc
stos
add
jl
pusha
and
pop
mov
jae
add
fadds
cld
scas
sti
inc
inc
mov
mov
je
cmp
adc
jp,pn
mov
mov
divl
imul
clc
stos
xor
fldcw
ljmp
sbb
orl
sub
loopne
call
fmull
jle
pop
icebp
jns
mov
or
dec
jp
out
test
lret
mov
lret
lods
call
push
inc
nop
in
adc
pop
pop
mov
push
mov
jnp
mov
fs
aad
int3
sub
inc
adc
inc
jbe
cs
push
cwtd
pop
inc
mov
add
jae
mov
mov
add
fisubs
enter
mov
bnd
mov
imul
pop
out
inc
jge
xchg
ret
lret
pop
jl
lea
jo
pop
inc
js
adc
mov
lds
sbb
xor
rorb
addr16
mov
xchg
adc
push
xchg
repnz
push
pop
jbe
test
adc
stos
lods
imull
data16
sbb
inc
xchg
xchg
jns
shll
cmpsb
push
aaa
test
pushf
push
push
ljmp
or
mov
push
fnstsw
mov
aam
sub
xor
cli
mov
orl
dec
inc
and
xchg
sub
ja
movsb
imul
repz
lock
out
xor
scas
push
mov
mov
je
mov
mov
sub
pop
outsb
imul
aas
push
in
lea
nop
mov
sahf
cmp
xchg
add
in
sub
cli
xchg
cmp
das
out
mov
push
pop
lock
xchg
dec
sbb
sbb
push
fwait
mov
mov
pop
aas
punpckhbw
ja
jle
xor
out
fwait
mov
sarb
add
sti
fwait
pop
fiadds
pop
or
mov
lcall
adc
xor
stos
jns
incb
loopne
iret
scas
pop
rolb
int3
dec
jp
in
dec
sub
arpl
sarl
loop
pop
dec
clc
push
push
shl
and
mov
lret
arpl
jo
jecxz
push
aaa
shrl
std
les
loope
std
out
or
sti
pop
outsb
pop
sbb
sbb
pop
sub
dec
inc
mov
out
sub
push
mov
jecxz
xor
pop
shlb
push
inc
shlb
xor
movsb
mov
sar
hlt
fists
fstpl
and
out
insl
sbb
cmp
xchg
adc
sbb
dec
mov
out
mov
rorl
ret
and
into
dec
inc
mov
add
push
jmp
fucomi
mov
push
cmc
mov
and
adc
xchg
pop
fisubl
js
ficompl
inc
insl
int3
xchg
xchg
mov
movsl
push
fnsave
inc
xchg
ror
icebp
mov
int
mov
push
mov
popa
hlt
adc
sarl
ret
adc
adc
in
xor
sub
cltd
mov
push
adc
and
rorb
and
fcoml
dec
pop
test
dec
add
push
out
jmp
bswap
and
gs
jmp
enter
daa
jp
xchg
enter
jne
inc
scas
pop
mov
pop
mov
jmp
adc
adc
fisubl
push
push
lret
or
sbb
xchg
scas
lret
andb
repz
in
dec
lret
fsubl
inc
jae
lret
sub
fs
jmp
jne
or
jnp
jae
jno
adcl
aas
bound
sbb
daa
push
lret
dec
mov
push
lcall
mov
cld
faddl
sub
loop
fists
dec
ds
push
aaa
iret
push
jae
divl
test
iret
idivb
sbb
aaa
nop
lock
sti
mov
inc
hlt
in
mov
mov
ret
dec
xchg
dec
push
data16
loop
mov
xchg
into
or
push
divb
add
mov
rcrb
xlat
adc
loop
shrl
test
cwtl
call
push
add
dec
push
and
out
les
jbe
push
push
or
mov
mov
cmp
outsl
inc
mov
jb
iret
call
pop
icebp
sti
ss
xor
ret
xorb
inc
mov
lds
popa
jae
lret
es
loopne
cmpsb
movsb
pop
out
ret
bound
mov
mov
jnp
sub
fwait
dec
fisubrs
push
push
lock
sbb
icebp
inc
adc
xchg
mov
add
cmp
or
sbb
push
jo
incb
mov
shrl
inc
push
ret
cmp
cmp
mov
insb
sub
sahf
sbb
cwtl
mov
outsb
or
adc
in
dec
popa
xorb
iret
and
xchg
sarl
and
popf
dec
loope
pusha
dec
ja
insb
fdivp
test
sbb
mov
sbb
cld
pusha
cmpsl
xchg
jo
mov
insl
push
mov
orb
test
popf
enter
daa
leave
fildll
lock
mov
jb
mov
cli
pusha
std
test
cmp
mov
push
shll
mov
in
jbe
cmp
leave
inc
inc
mov
sub
ret
sub
popf
or
xchg
faddl
mov
inc
mov
arpl
push
cwtl
sub
jmp
xor
lock
mov
adc
adc
and
imul
jl
or
repnz
ja
push
lea
jmp
push
insb
jp
ss
push
test
xlat
cli
jbe
adc
shr
sbb
out
xor
or
int
fwait
cmp
hlt
or
sbbl
rcrl
ljmp
pop
or
data16
jecxz
popf
inc
mov
fnstcw
mov
and
mov
test
bound
lea
rorl
test
mov
in
inc
sbb
jp
mov
in
and
push
xchg
loop
repz
pop
pop
mov
xchg
aaa
push
jmp
int3
dec
jno
sub
xchg
xchg
gs
push
push
cld
fisubrl
push
push
add
xor
push
cmpsb
mov
jl
dec
inc
push
ficompl
sti
cmp
cmpsl
pusha
dec
pushl
js
movsl
rol
push
repz
movl
nop
mov
and
dec
imul
sahf
pushf
loope
cmp
xor
or
sbb
jcxz
inc
outsl
ret
xlat
imul
push
frstor
pusha
mov
jb
sahf
repz
stos
sub
ja
jb
and
sub
pop
jae
ret
stos
xor
cli
mov
mov
jbe
and
add
scas
push
arpl
js
fstps
sar
and
sbb
pop
xchg
lods
imul
pop
fwait
outsl
mov
ja
jno
je
fcomi
int
pop
add
add
int
mov
jno
cs
test
js
lock
jb
pop
pop
cmp
das
outsl
cmp
jg
push
mov
push
xchg
add
mov
xchg
stc
mov
mov
imul
mov
sub
jbe
fs
cmp
mov
jnp
mov
mov
sub
ljmp
and
les
andb
and
mov
fdivrs
sub
adc
leave
or
shrb
pop
lock
jmp
jmp
loop
jns
test
fs
mov
mov
sbb
mov
xchg
lret
repz
ret
pop
ljmp
mov
lods
mov
push
pusha
out
mov
std
inc
fsubrs
pop
jecxz
add
jbe
out
aaa
push
jo
ret
jmp
and
hlt
mov
add
or
inc
shlb
xor
stos
lock
out
mov
mov
imul
push
mov
push
movsl
insl
jnp
loope
push
mov
arpl
pop
ds
jae
popa
rdpmc
jle
cs
sub
pop
imul
imul
pop
jb
xor
popa
rcrb
leave
sbb
cmp
stos
push
sub
cmp
outsb
mov
iret
ret
ret
push
daa
xor
mov
xchg
fadd
cmp
lds
je
psllw
adc
fwait
out
pop
mov
sub
sub
jo
pop
lea
fildl
clc
jbe
dec
adc
dec
jo
mov
jg
jecxz
pop
fucomp
repnz
sahf
pop
loop
mov
pop
loopne
sbb
dec
push
add
int
fcmovnu
mov
shlb
add
orb
addr16
icebp
repz
lret
lods
jp
pop
roll
subl
fmuls
jns
sub
mov
sbb
jo
popa
sub
out
jecxz
js
jl
ret
popa
jno
mov
cli
repnz
call
mov
adc
dec
and
jg
or
or
inc
icebp
inc
ret
xchg
jp
fsts
xor
out
insl
jp
es
jno
cld
adc
jg
xchg
inc
sub
insl
inc
mov
inc
push
imulb
add
dec
xor
sti
push
mov
andb
ret
ficomps
push
movsl
fisubs
mov
xchg
das
inc
scas
cmc
ljmp
push
mov
xchg
fnstenv
pop
add
or
xchg
test
jno
int
or
pop
xlat
out
and
int
add
test
lea
sub
pop
iret
jge
nop
xchg
in
sbb
push
lret
lret
jge
or
dec
dec
sti
out
xor
je
lret
sti
es
test
es
mov
jo
jg
ljmp
shrb
aam
dec
lea
out
push
pushf
es
outsb
lea
add
outsl
out
mov
rorl
test
mov
sub
bound
adc
mov
rorl
test
push
and
shlb
mov
jmp
push
mov
pop
push
loopne
out
mov
cmp
dec
and
out
dec
push
lea
adc
enter
js
sub
sub
clc
push
sbb
int3
mov
mov
arpl
test
push
sahf
mov
pop
lret
adc
sbb
mov
mov
sbb
mov
out
mov
mov
pop
cmc
jmp
pop
push
pop
scas
mov
loopne
jge
loop
outsb
loopne
fdiv
xor
loope
js
xchg
cwtl
cltd
std
arpl
pop
popf
js
es
bound
in
mov
xchg
sub
out
bswap
mov
and
xor
pop
jno
xchg
sub
into
out
pop
lret
inc
push
sbbl
mov
cmp
jmp
jae
shrl
loope
mov
mov
je
dec
sbb
lods
int3
sbb
and
adc
into
mov
dec
pop
cmpsl
out
rcl
movsb
cmc
add
xchg
sti
pop
pop
popf
jb
decb
and
test
push
and
cmp
mov
pop
aas
stos
es
orl
xlat
push
cmp
scas
sub
stos
call
add
arpl
cmp
repnz
push
or
fcoms
imul
lret
jne
xor
inc
xor
dec
mov
mov
jnp
fistl
lahf
mov
aas
dec
testb
xlat
iret
sti
scas
cmp
popa
inc
flds
imul
mov
dec
dec
or
pop
pop
iret
in
lock
sbb
mov
popf
cmc
aad
jp
lret
xor
sub
dec
fstpt
cli
cld
mov
and
cmp
cmpsb
mov
adc
icebp
std
out
mov
js
mov
aad
leave
xchg
and
xchg
mov
test
arpl
pop
popa
repz
add
mov
repnz
inc
cli
xchg
jecxz
pop
sbb
push
leave
xor
mov
cmp
push
in
mov
out
push
movsl
mov
mov
into
nop
xor
jle
inc
test
jno
mov
ret
lea
cmp
in
or
ds
cmpsl
out
negb
add
sarl
testl
or
out
pop
cwtl
and
pop
mov
inc
and
pop
cmp
mov
loope
sarb
mov
jmp
pop
push
leave
jae
int
repz
shl
jecxz
shlb
sub
or
or
push
xchg
inc
or
sub
jne
mov
fldcw
xchg
cli
dec
ds
fcomp
mov
das
call
loope
adc
inc
stc
cmp
lea
int3
aaa
fmuls
mov
pop
imul
fistpll
adc
fwait
inc
ja
ret
add
cld
push
and
jl
inc
dec
bound
mov
outsb
out
push
dec
test
std
push
mov
jnp
sub
cmpsb
ret
lret
push
mov
mov
cmp
mov
xchg
add
ret
dec
mov
cmp
test
xor
call
or
mov
fwait
xchg
ljmp
cmp
ficomps
push
stos
push
icebp
js
aaa
push
aaa
pop
lret
mov
cld
mov
jp
in
fnsave
lret
and
test
xor
xor
iret
ljmp
xchg
lea
sbb
adc
mov
or
push
imulb
push
mov
es
int
jl
cmp
jae
pop
dec
jae
adc
dec
sub
adc
mov
test
repnz
stos
push
pop
fwait
push
lahf
push
pop
es
out
pushf
mov
adc
aad
xor
pushf
out
inc
push
fldl
mov
icebp
addr16
outsb
test
cld
add
xor
adc
dec
mov
pop
mov
stos
or
inc
push
inc
popf
jecxz
mov
fisttpll
inc
mov
jecxz
lock
sbb
or
inc
lock
dec
repnz
pop
jnp
and
imul
lds
ja
in
cli
push
jae
pushf
jb
push
nop
push
xchg
mov
test
pusha
pop
xchg
and
xchg
mov
add
cld
and
sbb
movsl
int
xor
dec
push
jb
repz
ds
or
addr16
xchg
lret
into
out
sbb
dec
cli
xor
fidivs
call
ss
ja
pop
pop
stos
andl
xor
mov
ss
xor
jno
shrl
and
sub
fldenv
outsb
cld
or
add
add
jge
xchg
mov
adc
mov
or
shlb
push
stc
mov
cld
sbb
cwtl
pmullw
cmp
sub
pushf
mov
cmpb
jp
dec
xchg
in
mov
das
inc
aaa
js
insb
xorl
mov
fidivs
lea
dec
sub
dec
insl
mov
lods
mov
imul
pop
inc
punpckldq
sub
xor
lock
das
jg
movsb
into
or
xor
dec
call
sub
psubusw
push
in
adc
add
stos
test
out
sub
adcb
out
jbe
gs
cltd
cmp
scas
in
mov
fsubp
repz
std
test
call
mov
mov
test
cltd
adcl
rdtsc
movsb
mov
xlat
enter
aam
xchg
adc
inc
push
test
les
fstps
popf
test
mov
pop
adc
scas
xchg
inc
sti
data16
in
les
stos
insl
test
pop
ds
insl
or
dec
inc
fs
adc
xor
mov
pop
pop
int
fimull
lods
xchg
leave
dec
int3
sahf
icebp
mov
xchg
ret
jl
sbb
and
mov
aas
xchg
mov
es
mov
test
mov
cli
fxtract
scas
jb
push
jno
les
jns
lea
mov
cmp
rolb
jnp
jl,pt
sub
push
mov
adc
pop
test
std
in
lods
dec
hlt
sbb
mov
popa
scas
or
jl
cli
or
movsb
cmp
fisubrs
mov
xchg
outsl
std
mov
ret
imull
add
jns
adc
mov
inc
jo
popf
push
sbb
dec
push
mov
rorl
sbb
add
push
xchg
xor
sub
mov
xchg
ret
imul
int3
add
cmpsb
push
daa
xor
xchg
popa
push
inc
ja
jns
jg
push
pop
insb
rol
sub
outsl
mov
faddp
gs
mov
test
gs
mov
lahf
js
int3
aam
push
ljmp
sub
clc
scas
sub
dec
xchg
aad
mov
and
mov
pop
jmp
movsb
cmp
xchg
bound
ss
dec
cltd
push
outsb
stos
mov
fdiv
lret
lcall
sahf
mov
nop
mov
js
dec
sti
cmpsb
or
inc
repnz
sbb
xor
into
iret
popf
pop
sub
mov
mov
inc
hlt
pause
dec
imul
pop
pop
mov
fwait
insb
sub
inc
jae
mov
inc
pop
pop
imul
ljmp
cltd
nop
mov
push
jns
loopne
aad
sub
pop
or
mov
lods
mov
stos
inc
push
clc
push
or
and
xor
push
test
insb
sub
add
adc
cmp
mov
add
subb
pop
subl
sbb
push
xor
push
repnz
xor
cmc
shrb
add
adc
aaa
imul
jecxz
cmpsb
test
iret
sub
shll
movsl
push
inc
pop
frstor
jl
icebp
rdpmc
enter
pop
sub
cs
je
sbb
sbb
add
push
cmp
or
out
mov
neg
popa
sbb
lock
ljmpw
pop
dec
xor
test
mov
hlt
addl
icebp
out
add
push
negl
aad
fdivr
fs
cmp
adc
in
insb
push
leave
sub
jae
inc
push
and
dec
jno
mov
push
rep
add
and
sub
jo
pop
imul
inc
mov
iret
loop
add
push
jg
ds
mov
pop
or
inc
pop
lret
dec
xor
dec
push
sbbb
push
jne
fimuls
jns
fldcw
sti
sub
or
add
sbb
loope
cli
jge
addb
aam
jmp
sub
stos
mov
iret
call
fisttps
frstor
in
xchg
out
test
add
subb
in
mov
and
adc
movsb
mov
ljmp
xor
push
arpl
inc
push
int3
shll
jo
or
jecxz
pop
in
adc
adc
es
pop
xor
popa
pop
andl
or
scas
inc
push
addr16
push
pop
in
insl
popf
movsb
mov
jg
xchg
je
pop
shrb
fidivrs
dec
adc
js
fbld
lea
ljmp
jg
jle
jge
int
sahf
nop
fsubrl
leave
rclb
mov
xor
outsl
movsl
jns
or
add
fnstcw
add
mov
sti
ficomps
pushf
fsubrl
ja
stc
repnz
or
loope
sub
mov
repnz
clc
sub
data16
add
insl
mov
les
pop
ds
shr
jo
dec
jae
dec
dec
mov
pop
cwtl
mov
daa
fchs
cmp
adc
dec
test
jbe
adc
sub
repnz
js
and
inc
adc
icebp
or
add
insl
cmpsb
mov
fildll
movsl
xchg
jle
or
aam
fsub
mov
push
lods
fwait
mov
pop
push
adc
leave
jae
ss
js
shlb
push
mov
filds
inc
shlb
subl
call
jp
scas
adcb
aam
pusha
push
add
aaa
aad
popf
inc
mov
in
repz
stos
xchg
push
pop
xchg
push
jge
adc
mov
rcrl
aas
and
stc
sub
hlt
pop
std
ss
lcall
xor
aas
dec
add
xor
dec
rolb
jl
subl
push
cmpsb
lret
add
loopne
shll
adc
adc
loope
cld
cltd
add
xchg
jmp
es
out
gs
sub
fistpl
pushf
xlat
xchg
pop
ret
mov
pop
popa
inc
test
sahf
dec
cmp
ret
rorl
repnz
inc
cli
pop
das
push
xchg
jecxz
jns
out
fnstsw
xchg
adc
pop
add
xchg
inc
xchg
push
sbb
in
idivb
lods
jge
mov
fildll
cmp
repz
fsubrl
sub
jbe
arpl
xchg
jno
jnp
sbb
pop
test
das
jno
adc
push
push
xchg
sub
jle
aad
inc
sub
lahf
cmp
fadd
pop
add
subl
test
mov
ja
sahf
add
loop
mov
arpl
out
sub
das
js
cwtl
sbb
inc
clc
cmpsl
sbb
sbb
cmp
leave
xlat
pop
cli
mov
sub
jne
mov
inc
loopne
shrb
test
cli
les
es
add
popf
dec
xor
adc
push
lock
add
mov
jmp
pop
insb
fs
loope
or
lods
es
les
mov
mov
pop
fstpl
add
push
add
bnd
pop
cli
int
cltd
mov
call
inc
inc
pop
ret
lret
test
jecxz
xchg
xor
out
inc
inc
cmp
adc
jecxz
cmc
inc
lods
pop
cmp
pop
loope
or
test
mov
and
je
shll
mov
xchg
pop
dec
mov
or
mov
add
out
cmp
pop
fstpt
push
push
ljmp
mov
push
xchg
inc
mov
jg
popa
stos
and
aam
mov
in
or
test
mov
insl
data16
dec
addl
mov
test
les
in
rorb
rorl
orl
rcl
push
jnp
add
popf
sti
jns
in
or
cmc
shrl
xchg
bound
mov
jb
lret
in
sbb
nop
and
js
mov
sub
bound
cmpsl
cmp
xchg
cmc
mov
sub
call
out
stos
add
push
sub
dec
and
nop
xchg
clc
dec
out
out
out
push
enter
xchg
mov
std
xchg
pop
sbb
je
adc
inc
ljmp
fistl
dec
mov
stc
inc
xlat
aas
aas
push
fnstsw
inc
lret
addr16
js
or
cmc
inc
cmpsl
test
and
jl
adc
aas
jne
mov
or
push
xor
and
pop
lcall
cli
lahf
sahf
jno
enter
push
mov
or
cmp
mov
in
test
adc
lcall
dec
stc
lds
cmc
into
lea
mov
ret
pop
movsl
iret
in
cltd
add
scas
mov
ja
lcall
jg
mov
fcomps
lock
sbb
rorl
mov
fisttps
xor
xorl
add
push
push
out
repz
xor
pop
lret
jnp
cmpsl
test
cmp
outsl
xorb
lods
fstps
and
in
rcrb
sub
cwtl
std
jp
pop
cmovl
mov
mov
mov
cmpsl
sbbl
rcl
sub
rcrl
out
sbb
fstl
push
push
popf
outsb
arpl
cmpsb
xchg
sbb
sbb
jae
sub
sbb
push
xchg
cmc
in
aad
and
xchg
mov
cltd
pop
ss
pop
fsubp
push
in
icebp
rclb
dec
or
fistl
sbb
xor
cltd
mov
repz
pop
xchg
movsl
div
stc
ss
add
lea
xchg
out
dec
and
mov
rcl
or
out
fwait
adc
dec
push
int3
aam
aas
or
popa
mov
sub
je
inc
mov
or
xor
jmp
inc
popa
cmp
and
insb
xor
cltd
pop
mov
int
xchg
xchg
dec
test
mov
mov
int
cmpsb
push
icebp
pop
dec
lods
int3
xlat
sub
ret
mov
cmp
loopne
xchg
inc
fnsave
addr16
orl
inc
xlat
add
cmp
nop
sti
fs
pop
push
stc
cmp
cmp
pushf
push
lods
cwtl
fmulp
ficomps
and
pop
aaa
sub
xchg
add
fwait
jl
add
or
xlat
dec
loopne
or
in
cmp
jp
cmp
enter
jo
push
sub
ljmp
lret
pop
sahf
jp
xchg
sub
loope
jg
adc
mov
jo
mov
jl
dec
fwait
dec
dec
or
xchg
and
pusha
iret
pusha
sbb
shrl
mov
cwtl
or
mov
lods
cmp
call
push
sbb
hlt
loop
xchg
stos
popa
and
popf
outsl
sub
mov
pushf
movb
test
jae
mov
xchg
cmp
repz
lea
inc
fadds
cwtl
cmc
xchg
lods
mov
mov
test
jno
push
push
popl
lds
imul
adc
ret
test
bound
test
and
lds
icebp
xor
or
cmc
mov
push
ss
dec
clc
xchg
enter
mov
jb
lock
sbb
cltd
cmc
dec
push
std
cmpsb
add
stc
into
jle
jle
or
xchg
xor
sub
pop
jns
in
mov
clc
dec
push
cmp
into
xlat
and
sarl
mov
sbb
je
lods
or
aaa
pusha
push
js
xor
dec
imul
movsl
test
dec
arpl
daa
das
and
mov
inc
sahf
sbb
testb
jns
outsb
enter
jp
add
call
dec
adc
pop
movsb
mov
loopne
mov
sahf
hlt
mov
mov
and
movsl
xchg
lds
mov
cwtl
es
scas
cmp
mov
js
mov
leave
hlt
ja
mov
stc
call
jl
ljmp
in
xchg
pop
into
mov
xchg
das
clc
xor
mov
mov
imul
mov
mov
push
jge
inc
sbb
push
test
stos
sub
sub
pop
gs
rorl
fmuls
leave
mov
jle
push
pop
jo
cmpb
adc
std
mov
xchg
inc
xchg
pop
les
in
fdivrl
sbb
push
stos
jbe
dec
ja
mov
pop
fs
add
test
dec
les
icebp
adc
xor
mov
add
push
fs
dec
test
aad
jne
je
inc
sub
push
cli
clc
pop
jge
in
call
push
cmp
pop
sbbb
dec
add
scas
jns
loop
sbb
in
jle
je
insl
dec
cmpl
addb
ffree
ljmp
add
mov
ljmp
sbb
mov
push
out
shr
mov
cmpsb
jno
ficompl
mov
pop
mov
adcb
cmp
jae
les
std
out
sbb
jg
lret
cmc
push
ret
push
pop
jg
fidivl
in
cs
cltd
jg
dec
out
inc
push
mov
ss
mov
push
inc
lds
sub
fwait
xchg
hlt
add
adc
imul
jbe
dec
dec
outsl
jl
xor
es
lods
mov
dec
lret
mov
outsb
imul
hlt
out
jns
cmp
mov
xor
mov
jmp
insb
or
mov
cmp
lock
xchg
mov
shlb
mov
ja
mov
push
mov
cmp
ja
push
adc
mov
data16
push
mov
mov
ret
in
mov
je
hlt
roll
add
mov
dec
jge
xor
cltd
add
sbb
and
dec
ljmp
lret
shll
arpl
popa
adc
adc
shll
or
imul
pop
adc
jnp
rclb
lock
gs
mulb
sbbl
loop
in
fisttpl
pop
stc
cmpb
pusha
xor
sub
rclb
dec
add
inc
lds
xchg
xor
sarb
mov
call
sub
mov
movsl
cli
xchg
lea
sub
pop
rcll
jo
cli
pop
xchg
imul
or
imul
inc
ja
lret
sub
gs
ljmp
popa
push
clc
push
mov
inc
shl
and
lahf
jne
fsubrs
mov
loope
cmp
jl
push
leave
xchg
filds
jbe
push
rcll
pop
jnp
mov
pop
xchg
scas
insl
arpl
push
ret
out
leave
lret
jnp
inc
xchg
in
mov
jbe
pop
or
test
jb
shr
cmp
cli
mov
or
repnz
cmpl
mov
sub
ja
push
repnz
loope
fsubrl
ss
xchg
inc
push
dec
in
movsb
or
pop
mov
mov
mov
inc
cmc
rclb
mov
repnz
sbb
xchg
pop
mov
xchg
lods
xchg
outsl
cmp
lcall
jl
xorb
sub
mov
es
or
jge
movsb
and
ret
push
inc
cld
cld
push
adc
lret
cmpsl
stos
push
jg
cltd
les
dec
add
sbb
bound
not
sbb
fisubrs
and
cmp
in
and
popf
out
enter
ja
xchg
xchg
pop
mov
dec
pop
outsl
xchg
cmp
adc
fmuls
xchg
or
push
aaa
inc
sbb
packsswb
xchg
add
jp
mov
cmp
dec
jp
pop
inc
mov
std
popa
insl
push
aaa
popf
out
add
sub
mov
push
aad
loope
or
aaa
pop
clc
xchg
ret
adc
lcall
xchg
add
shrl
xchg
movsl
xlat
mov
push
movsl
testl
xchg
sarb
mov
ffreep
test
push
lret
scas
je
xchg
aas
adc
adcl
shl
cmp
imul
xchg
aad
movsl
mov
mov
sbb
subl
pop
aas
lret
sarl
insb
insb
inc
cmp
fwait
mov
std
adc
daa
sub
shlb
fiaddl
and
cmpsb
jmp
test
shr
mov
pop
insb
ja
dec
aaa
lret
lds
pop
cmp
pop
fwait
aaa
jecxz
popf
out
mov
mov
loopne
aam
fisttpl
and
outsl
out
je
sbb
mov
scas
or
int
cld
js
mov
cs
sahf
xchg
or
sub
pop
pop
mov
outsl
inc
insb
push
dec
loopne
mov
adc
and
cmp
jg
jnp
xor
adc
scas
ret
xorb
mov
call
mov
push
and
mov
mov
imul
push
mov
arpl
rclb
fdivp
mov
xchg
in
ljmp
shll
add
sub
cmp
adc
jb
or
lds
fmuls
pop
cs
or
push
xchg
sbb
xchg
jle
push
cmp
shll
sub
loope
addl
in
leave
fs
incl
jge
inc
sub
push
jmp
adc
mov
imul
mov
inc
pushf
jle
outsb
push
fdivrl
stos
scas
mov
push
xlat
jo
ficompl
mov
iret
push
dec
cmp
sbb
push
mov
clc
movsl
int3
aam
lahf
xor
movsl
push
js
dec
mov
andl
sub
mov
movsb
in
xchg
adc
lret
aam
mov
subl
out
fwait
out
mov
lcall
jge
rcrl
pop
mov
or
je
rcll
lcall
or
movsl
and
int3
mov
pop
clc
mov
or
dec
inc
xchg
enter
repnz
mov
icebp
xorl
daa
xor
pusha
aas
in
dec
sub
sbb
dec
xor
imul
inc
sbb
push
sbb
pop
pop
enter
add
push
fs
inc
inc
mov
and
scas
xchg
movzbl
inc
cmp
sahf
incb
mov
shrl
dec
push
call
and
rcrl
cwtl
ljmp
popf
sbb
mov
ljmp
mov
xchg
ljmp
xlat
pop
push
daa
test
popf
inc
lea
clc
test
push
out
pusha
mov
mov
mov
lock
in
aam
push
mov
push
fidivrl
arpl
ja
inc
ret
leave
cmp
test
push
push
mov
cld
shll
adc
stos
cs
push
mov
popa
es
adc
inc
js
loope
push
out
ret
fsubs
push
cli
adc
inc
mov
push
dec
in
mov
sub
xor
aam
dec
push
mov
sub
add
jecxz
jo
add
cmp
push
hlt
jnp
sbb
mov
enter
cmp
popa
mov
loop
mov
xchg
mov
lret
jmp
mov
dec
je
adc
out
pop
dec
cmp
roll
inc
nop
and
test
fs
cmp
out
adc
or
pop
and
xlat
repz
lret
jmp
loope
xchg
jle
lahf
adc
xchg
or
push
outsl
push
jmp
enter
xor
push
movsb
scas
sahf
faddl
adc
fisttpl
mov
jne
inc
cmp
jno
fs
sbb
adc
sub
enter
out
jp
imul
mov
dec
jae
icebp
movsl
mov
sub
ficoms
ja
daa
call
inc
idiv
or
clc
jno
adc
xlat
or
lret
out
shrb
push
jbe
sub
popf
add
std
xchg
mov
cli
inc
sub
xchg
ds
ret
or
cmp
lods
inc
and
insl
fdivr
enter
sub
xor
nop
leave
mov
mov
aam
mov
sbb
adc
je
test
lock
push
or
loopne
and
lret
out
out
mov
mov
repnz
lret
movq
cmp
xor
nop
sar
mov
xor
sbb
xor
arpl
dec
xchg
clc
je
pushw
imul
push
cmc
lcall
and
cmp
add
adc
push
push
test
repz
test
addb
add
xchg
inc
nop
pop
test
mov
mov
dec
add
sahf
adc
pop
into
mov
test
jle
outsl
or
jae
mov
jb
push
jo
push
je
sub
bound
lahf
cmpsb
scas
mov
jns
sub
dec
jns
js
dec
loop
and
sbbl
add
divl
add
test
mov
je
pop
movsb
pandn
inc
sub
out
andb
imul
pop
inc
insl
iret
add
jne
push
repz
imul
test
sbb
mov
movsl
inc
dec
cltd
mov
inc
fstpt
push
inc
cmp
sahf
add
xchg
bnd
enter
add
data16
or
push
mov
adc
jne
inc
cmp
cmp
scas
out
lcall
filds
push
add
add
enter
mov
rclb
mov
mov
dec
sbb
pop
test
in
push
push
jne
jg
fs
lods
outsl
pop
jnp
dec
jno
stos
jg
aas
cwtl
cltd
rcrl
rol
mov
test
insl
mov
xchg
sbb
inc
fstp
or
sar
pop
adc
cltd
or
dec
inc
cmpsl
rcrl
fmuls
mov
mov
mov
jae
and
cld
sbb
xchg
mov
stc
xor
and
mov
shr
lret
bnd
push
pop
ja
or
sbb
mov
dec
data16
push
mov
sub
js
test
iret
mov
cmp
sbb
nop
icebp
das
stc
stc
fnsave
loopne
popa
push
sub
push
or
in
dec
inc
aam
pop
xchg
mov
adc
sub
add
int
add
loope
pop
dec
pop
push
inc
int3
mov
out
jo
jge
sub
je
inc
add
rcrb
ljmp
stos
mov
lret
movsb
add
dec
je
imul
and
cmpsl
jo
pop
pop
push
xchg
cmp
lods
xor
inc
pop
cmpsl
inc
cld
mov
notb
and
scas
dec
fnstenv
jo
sub
sub
xor
mov
test
movsb
cmc
orb
pop
mov
jmp
sub
daa
xor
mov
lret
cmpsl
and
and
jl
js
repnz
pop
cmp
icebp
call
and
jecxz,pt
fcmove
fildll
addr16
stc
adc
fidivl
ja
pop
ja
lret
mov
add
test
dec
add
out
pop
shl
xchg
out
out
aam
cmp
sahf
sti
arpl
test
insb
fucomip
sub
and
ljmp
mov
and
push
add
aas
aad
arpl
in
pop
jecxz
in
std
pushf
sbb
or
xor
xchg
sarb
je
notb
inc
movsl
mov
sti
bound
mov
push
push
adc
xor
mov
jle
inc
movsb
std
sahf
mov
lock
jmp
repnz
xchg
sbb
lods
push
push
pop
mov
dec
test
cwtl
sbb
jl
hlt
cmpsl
dec
shrl
test
outsb
dec
inc
int
push
push
dec
inc
xchg
orb
adc
outsl
fidivrl
test
or
dec
fmul
mov
std
dec
xor
push
ficoms
push
aaa
sub
xchg
add
into
fistps
jno
in
sbb
std
cmp
add
push
jl
movsb
push
fsubs
mov
or
mov
jmp
mov
fdivl
cld
scas
daa
movsl
xchg
enter
push
aas
xchg
xchg
outsl
mov
cmp
das
rolb
mov
push
dec
lcall
mov
cmc
jmp
or
icebp
add
ja
xchg
lock
popa
loop
inc
sbb
sbb
jb
jg
push
or
xchg
mov
cmp
cmc
mov
cmp
fnstsw
jle
stc
xchg
int3
jg
outsl
in
pop
mov
lahf
lock
incl
add
mov
jle
loopne
cmc
pusha
jae
push
int3
dec
mov
scas
roll
cmp
pop
push
sbb
jnp
jo
inc
rcrl
fsubp
and
shr
enter
icebp
repnz
xchg
add
shlb
jb
std
js
fldlg2
scas
fidivl
sbbl
mov
lods
lcall
mov
add
xchg
test
adc
dec
push
ja
jbe
mov
adc
adc
and
mov
in
pop
xor
mov
fisttpll
lods
or
cmpsb
add
and
mov
mov
into
xchg
ret
fisttpl
jp
add
jmp
mov
mov
fbstp
ret
xor
arpl
int3
jg
orb
xchg
in
incl
sub
push
mov
inc
xor
iret
or
subb
mov
add
add
loopne
lds
xlat
ja
inc
addb
push
movl
xchg
loope
pop
mov
mov
ret
jno
or
ficoms
test
pop
scas
fldl
or
sbbb
cmp
add
adc
jne
cmpsb
mov
in
inc
push
mov
or
dec
pop
popf
cltd
sub
adc
inc
rcrl
lock
pop
stc
mov
pop
sub
das
in
in
jge
jl
push
push
negb
sub
out
or
ret
js
ja
push
pop
mov
adc
add
cli
mov
loop
int3
jns
out
sbb
andl
jp
outsl
das
xor
add
add
adc
jo
add
lods
clc
shll
sub
xlat
rorl
aas
and
arpl
nop
shll
cmpsl
mov
sahf
jo
inc
jno
xor
popf
stos
push
jno
fucomp
mov
inc
dec
push
test
push
pop
dec
out
mov
mov
pop
cmp
std
std
push
leave
addr16
pop
and
cmp
push
xor
hlt
adc
inc
sbb
and
or
adc
shlb
sbb
imul
fistpl
test
jmp
push
or
jnp
push
push
and
mov
sbb
dec
cmp
mov
jo
xor
out
push
jge
inc
arpl
mov
xor
jp
push
psubd
jne
mov
ficoms
jnp
jns
or
mov
cli
jmp
xorb
adc
push
repz
mov
jnp
cmpsl
or
sub
push
imul
jg
mov
lcall
outsl
std
clc
daa
push
add
inc
push
movsb
inc
repnz
cmpsl
rorb
and
inc
in
xor
fsubl
lret
jne
test
aad
pop
and
mov
movsb
cwtl
mov
mov
nop
adc
inc
push
jg
mov
mov
mov
jo
mov
out
push
push
xchg
rcrl
sub
jp
imul
lahf
and
mov
add
mov
outsb
jb
jge
lods
int3
push
aaa
shl
aad
clc
push
add
inc
int
hlt
aas
inc
leave
xlat
fstpl
movb
pop
xor
in
cmpsl
repz
cwtl
xchg
lcall
lahf
mov
xchg
xor
repz
mov
addl
iret
pop
lcall
pusha
xor
cmp
lcall
cmp
and
lea
jbe
lods
loop
lods
rolb
gs
xor
mov
jns
push
loopne
adc
aam
pop
mov
lret
in
jl
inc
hlt
xchg
adc
sub
test
insl
sti
fimull
push
je
fists
inc
data16
popa
or
imul
cmpsl
and
jecxz
cmp
push
das
ret
adc
call
xchg
sbb
lret
fstp
gs
movsb
mov
jp
xchg
xchg
push
xor
rcrl
cs
fnstcw
popa
fsubrl
es
xchg
andb
jmp
jmp
jge
iret
std
dec
inc
mov
aad
and
pop
fdiv
mov
xor
sbb
mov
out
iret
mov
mov
push
imul
xchg
xchg
pushf
add
fs
inc
push
adc
lret
push
popf
and
inc
scas
jne
data16
lret
out
or
sbb
mov
ss
out
stos
aas
adc
rol
push
sub
xchg
sub
dec
ja
sbb
lea
or
loopne
adc
push
jl
fnsetpm(287
and
add
test
enter
ficomps
sbb
or
outsl
in
push
lret
jno
mov
fcoml
jno
adc
repnz
inc
incl
jns
in
mov
mov
lods
xchg
mov
and
mov
into
mov
aaa
test
cwtl
pop
mov
jae
and
cmp
fsubr
sbb
push
insb
aaa
outsb
mov
fisttpl
or
dec
inc
iret
stos
lods
inc
push
popf
pop
movsb
fwait
xchg
xor
ss
and
cmp
shl
inc
test
mov
dec
mov
fidivrs
mov
mov
and
sub
xor
mov
sti
into
shrb
mov
mov
insb
aaa
adc
testb
cmp
mov
pop
mov
xchg
dec
imul
int
xchg
adc
aad
inc
inc
aad
sub
bound
sub
mov
mov
or
stc
xchg
mov
fdivl
sbb
das
push
cs
div
or
adc
jnp
push
dec
andl
daa
lds
inc
and
pop
int3
cld
movsl
xchg
movsb
inc
ljmp
std
loopne
and
lods
daa
rol
inc
xor
test
inc
pop
out
mov
lock
mov
mov
mov
dec
popf
cmp
adc
pop
ds
xchg
and
outsl
incb
aaa
fwait
pop
jle
sub
in
movsb
mov
lods
bound
add
test
xchg
popa
jecxz
dec
les
sub
and
aas
and
cmpb
xchg
xchg
ret
mov
mov
mov
ss
bound
push
scas
mov
jmp
inc
mov
pop
pop
cmc
dec
mov
cld
into
cli
xchg
jge
lcall
lea
adc
xchg
push
test
int3
cmp
ret
xor
int
mov
sub
dec
cmpsb
stc
arpl
and
and
repz
outsb
push
adc
in
rcrb
leave
hlt
push
rcl
pop
pop
pop
test
cltd
popf
xchg
jge
push
mov
leave
or
scas
loop
xlat
fisubs
add
mov
or
sbb
mov
xchg
shr
sahf
push
xor
movsl
push
roll
pop
imulb
jne
xchg
aad
repnz
imul
pop
bound
arpl
pop
in
push
out
mov
inc
push
insb
fucomi
ficoms
dec
loope
mov
rcrb
popa
outsb
and
out
scas
out
push
lods
std
loop
leave
dec
fldenv
sub
iret
pop
and
shll
ljmp
rcll
push
stc
push
shrb
dec
daa
popa
aaa
loope
daa
adc
sbb
daa
xchg
mov
fsubrp
and
add
fwait
and
jmp
dec
scas
jbe
add
xor
xchg
clc
aas
outsb
std
inc
js
mov
lcall
dec
lods
pop
add
clc
fnstenv
rcl
in
mov
sub
push
sub
jp
sbb
inc
in
pop
add
pop
out
mov
adc
sbb
daa
pop
rcl
sahf
push
cmc
pushf
icebp
pop
negl
scas
lods
inc
out
dec
test
or
add
cmpsb
sbb
push
loope
cmp
dec
cmc
sub
iret
xchg
xor
incl
xor
mov
hlt
push
dec
iret
push
cs
lds
rol
dec
adc
or
xor
inc
out
fdiv
xor
mov
jo
fsubrs
xor
lods
push
enter
add
mov
push
pusha
jge
ror
mov
add
jno
or
inc
mov
pop
jnp
mov
dec
push
cmc
in
xor
call
add
lea
int3
and
rorl
sbb
jmp
orb
popa
and
dec
or
sub
sub
mov
mov
pusha
jae
call
mov
dec
scas
xor
and
stc
ret
shlb
push
push
xchg
pop
mov
mov
mov
adc
xchg
in
push
pushf
in
dec
mov
bound
add
mov
lock
jg
inc
or
xor
or
loope
adc
aas
jmp
testl
push
in
sti
xor
jbe
sbb
out
xor
mov
pop
adc
push
adc
fstl
pop
sbb
repz
xchg
test
dec
fldenv
mov
adc
jecxz
push
hlt
xor
aam
sbb
jecxz
in
ja
stc
adc
sahf
add
stos
pop
jg
or
lret
sbb
jno
fsub
inc
dec
pop
inc
sahf
xor
sbb
gs
mov
shlb
rolb
fwait
insl
gs
fucompp
pop
mov
enter
or
in
nop
aad
cmpsb
shll
out
loope
out
iret
decl
shrl
popf
repnz
adc
mov
mov
xchg
dec
inc
inc
add
aaa
repnz
fcompl
xlat
xchg
cmp
outsl
aas
test
mov
jbe
mov
sub
cmp
insb
xchg
std
adc
xchg
adc
push
dec
jbe
out
adc
frstor
or
dec
sar
xor
out
or
jl
ret
or
or
cli
sbb
imul
ret
mov
mov
or
mov
repnz
sbb
bnd
add
pop
in
aaa
fwait
test
outsb
pop
stos
ss
into
pop
mov
or
sar
jg
jbe
and
es
in
push
or
ds
cld
lcall
in
sub
cwtl
imul
jmp
push
mov
xchg
aam
das
lahf
dec
jmp
and
mov
push
mov
cmp
xor
jae
mov
jae
jne
xor
gs
cmp
aaa
sub
loop
rcrl
ss
xlat
adc
aaa
pop
and
inc
fs
sbb
dec
bound
test
imul
or
dec
fldl
mov
sahf
in
jp
sub
addb
lret
je
push
adc
lods
mov
jg
lahf
sbbb
fwait
and
sarl
xchg
sub
push
into
test
repz
xchg
mov
ret
push
jecxz
adc
sub
xor
and
imul
out
and
xchg
cs
popf
or
lret
fistl
sahf
xchg
add
vmovlps
mov
loop
ljmp
clc
insb
out
js
sub
push
xorb
insb
in
mov
scas
inc
mov
push
lcall
cmp
aaa
pushf
aad
jae
jecxz
rcl
push
cmp
jmp
scas
popf
int
cs
cmp
sub
lret
rcl
popa
xchg
test
inc
scas
daa
test
sub
pushf
sub
push
inc
dec
dec
sub
loope
cmp
iret
jmp
pop
and
push
lea
das
mov
sbb
adc
and
jp,pt
std
xchg
jl
stc
mov
pop
push
xchg
sbb
fs
shlb
aam
or
das
jmp
rcll
aas
outsl
sbb
fldt
fcom
xchg
xor
add
pusha
in
pop
clc
pop
lahf
dec
cmpsb
lret
adc
stos
xchg
ret
adcl
das
aad
mov
mov
xchg
inc
jmp
xlat
pop
imul
loopne
push
ret
jp
sub
xchg
sbb
inc
cwtl
mov
cmpsl
mov
adc
pushf
adc
popf
pop
adc
xor
inc
ret
xchg
out
dec
inc
in
pop
sub
pop
dec
sub
int
test
xor
xchg
addb
lret
dec
data16
cmp
push
jle
mov
iret
sub
push
xor
test
mov
pop
mov
fcmovb
and
mov
mov
ljmp
jns
pop
jne
mov
cmp
iret
test
pushf
mov
jb
rcr
mov
adc
mov
fadds
add
imul
in
push
int3
cmp
fcmovnbe
mov
xorl
pop
or
pushf
addr16
mov
xchg
enter
aad
pusha
pop
xchg
jne
mov
out
sbb
or
jle
dec
mov
push
rcrb
pop
mov
rolb
loop
dec
jbe
mov
out
pop
jnp
jecxz
aaa
sub
push
shrl
daa
loop
add
or
mov
adc
dec
cmpsl
mov
adc
mov
mov
in
int3
and
xchg
dec
push
stos
mov
int3
pop
lret
gs
fisubs
add
cmpsl
and
sbb
jnp
out
in
pop
sahf
mov
sahf
inc
ret
jb
mov
and
insl
fimuls
aam
sub
aaa
sbbb
adcl
pop
lret
jl
dec
adc
pushf
out
imul
orl
jne
or
xorb
stos
outsl
in
xchg
repnz
jmp
das
icebp
lcall
and
movsl
xchg
fisttpl
pusha
inc
or
push
test
call
bound
dec
pushfw
aam
rcr
repnz
pop
and
sahf
cwtl
pop
pop
sbb
mul
into
in
pop
mov
psubsb
inc
cmp
pop
dec
out
xchg
jbe
mov
jl
sub
or
pop
lcall
inc
xchg
jl
imul
and
push
dec
pop
inc
adc
test
push
xchg
outsb
lods
repnz
mov
mov
stos
push
sub
sub
adcb
pop
jmp
subb
in
and
and
jmp
sub
addr16
mov
sub
lret
lea
loopne
inc
sahf
xor
lahf
imul
mov
xchg
lods
mov
xor
nop
dec
and
outsl
pop
mov
into
or
cs
fs
out
iret
negl
cmp
out
js
aaa
cmp
push
fidivl
sbb
ss
adc
insb
mov
dec
cmp
dec
mov
clc
sti
mov
cmp
gs
sub
pop
mov
jae
jl
imul
push
xchg
mov
ss
sbb
mov
scas
or
std
xchg
sahf
sbb
add
das
lret
inc
dec
outsb
imul
add
sub
pop
paddusb
push
add
xor
xor
ret
cli
rcl
repnz
inc
dec
outsl
pop
fcoms
pop
sub
mov
pop
sbb
jle
ja
mov
sti
xor
xor
jns
nop
fwait
leave
cmc
orl
push
fcoml
xchg
lret
cld
inc
or
scas
xchg
push
iret
xchg
mov
inc
leave
loopne
test
or
jecxz
rep
or
mov
pop
inc
insb
popf
fldcw
fcmove
mov
xor
repnz
cltd
imul
adc
aas
aad
adc
out
mov
imul
push
dec
push
mov
rcrb
fdivrl
or
outsl
xchg
dec
dec
rorb
and
mov
fdivrl
sahf
mov
cmp
lock
jne
clc
xor
in
ret
lcall
mov
dec
push
jecxz
andl
enter
ds
outsb
cs
or
xor
inc
and
add
add
xchg
imul
mov
xor
push
fs
incl
xor
cmp
leave
cwtl
mov
hlt
test
insl
xor
mov
roll
mov
movsl
testb
cltd
sbb
divl
in
out
add
pop
cmp
jg
mov
xchg
mov
aas
mov
adc
in
and
sbb
sbb
das
jno
or
loopne
push
call
std
aam
dec
sti
xchg
aad
clc
adc
mov
in
push
pop
pop
jge
xchg
data16
rcr
pop
add
inc
ret
xchg
push
mov
adc
cmp
jnp
or
fistpll
lret
into
leave
mov
scas
pop
pusha
fwait
test
pop
pop
mov
jnp
mov
cmc
pop
std
add
aad
xorb
xchg
movsb
fidivrl
add
shr
loop
mov
inc
mov
jb
sbb
outsl
mov
pop
aam
testb
mov
mov
ja
hlt
loop
xorl
mov
mov
push
int3
in
adcl
les
out
in
xchg
xorl
xchg
push
or
int
cmp
sahf
adc
out
lret
mov
xor
insb
test
cs
push
cmpsb
cmp
mov
xchg
movsl
aad
dec
push
dec
addb
leave
xor
jg
fdivs
mov
mov
in
jno
sarb
hlt
sbbl
stos
in
shlb
xchg
xor
cld
shrl
jp
mov
mov
jae
sub
icebp
xor
and
mov
ds
ja
dec
sbb
roll
imul
jbe
jno
cmp
andb
arpl
popa
outsl
daa
out
inc
lret
cmpsb
lret
xor
inc
mov
stos
loope
gs
lock
movsb
add
pop
into
push
ret
xchg
in
or
fisttpll
insb
call
or
fildll
nop
mov
gs
mov
mov
popf
push
xor
adc
call
cwtl
or
fisttpl
stos
mov
pop
jo
imul
adc
mov
lock
mov
push
xor
andb
fdivrl
das
data16
mov
sbb
inc
cld
repnz
push
jmp
and
add
pop
mul
inc
imul
or
mov
cs
xchg
pop
fistpl
xor
add
mov
xchg
insb
xor
xchg
cmc
jbe
lcall
fs
into
add
data16
mov
jb
gs
aas
ja
movsb
jne
ja
push
jo
icebp
cwtl
xor
jge
in
jg
rcll
or
sub
ret
cld
mov
in
popf
je
cmp
mov
loop
sarb
xchg
xchg
xor
insb
mov
ja
shl
add
add
jo
fsub
les
push
int3
mov
jecxz
aas
ret
lea
mov
adc
sbb
pop
sbb
jne
popa
scas
dec
xchg
mov
mov
dec
jno
es
adc
movsb
adc
test
or
push
mov
lods
test
sti
push
jecxz
jno
cmc
xchg
aas
and
mov
ds
scas
les
js
maxps
ret
subb
pop
sbb
xchg
lcall
dec
or
dec
jp
pop
xchg
mov
adc
sub
and
out
pop
pop
xor
fisubs
std
jbe
mov
loopne
adc
rcrb
xor
rorb
imul
insb
rorl
mov
aam
scas
push
push
stc
push
xorb
and
pop
sub
jle
add
leave
lods
mov
jne
arpl
jmp
insl
cmpsl
dec
xchg
pop
jmp
pop
lock
movl
lret
cmp
icebp
jno
sub
jmp
inc
jns
adc
icebp
mov
popa
inc
dec
sbb
scas
sub
and
jo
inc
cmpsb
orl
xorb
mov
fldt
inc
mov
xchg
mov
mov
mov
loopne
sub
cs
mov
inc
cmp
xlat
dec
hlt
and
mov
psubusb
mov
data16
enter
xor
or
xchg
sub
push
sub
sub
popf
mov
push
cli
lods
test
pop
push
add
or
mov
cmp
popa
dec
test
push
xor
jmp
lock
aaa
add
push
push
mov
mov
int3
nop
jno
and
lcall
negb
loopne
test
add
sbb
jo
test
add
out
inc
testb
mov
daa
movsb
sti
sub
popf
inc
ds
mov
sub
sbb
pop
mov
cli
mov
inc
xchg
push
pop
sub
lcall
jp
lcall
fdivl
cmpsb
mov
push
ljmp
inc
out
cwtl
jle
bnd
repz
adc
imul
jge
inc
scas
movsl
out
sbb
scas
jo
in
inc
xchg
lods
ret
fstpt
cmp
ss
int
loop
push
ds
int3
push
testb
add
mov
add
inc
add
in
ljmp
stos
in
psubusb
shll
or
es
icebp
ss
sbb
jp
cmp
pop
adc
insl
arpl
inc
sbb
or
insb
in
and
and
mov
into
adc
cmp
jns
icebp
add
in
shll
loopne
xor
dec
xor
and
es
push
sbb
or
test
or
bound
sub
shrb
xchg
pop
adc
in
pop
or
lret
rcrl
sub
mov
mov
das
pop
xrelease
pop
sbb
mov
jne
testb
mov
mov
jle
cmp
cs
inc
jecxz
movsl
mov
fildll
iret
inc
cmp
push
lock
mov
cmp
fmuls
test
pop
add
mov
enter
pop
mov
mov
cld
pusha
or
sub
js
mov
ret
mov
sub
pop
nop
xchg
cmp
sub
pop
mov
test
or
sarb
xchg
js
jmp
pop
ret
push
lock
inc
rolb
mov
mov
xorl
cmp
xchg
xorl
xor
cmpsl
cmpsb
push
sbb
js
push
test
adc
jbe
into
xchg
arpl
or
out
sub
aad
sti
adc
std
mov
mov
cli
fisttpll
lret
pop
ljmp
xchg
xchg
mov
mov
out
call
fistpll
xchg
lret
out
or
movsl
dec
mov
push
sti
inc
push
mov
fs
push
orl
mov
ret
pop
ret
aam
dec
add
inc
jp
jl
lods
mov
in
add
jecxz
lods
push
out
js
dec
inc
mov
xchg
cmpsb
mov
ret
jno
test
bound
aad
adc
popf
xor
mov
std
push
jl
mov
mov
push
adc
mov
out
cmp
mov
in
in
sub
or
or
pushf
frstor
out
mov
dec
daa
lahf
push
mov
mov
mov
mov
fsubrs
movsl
cmc
lret
loopne
push
into
movsb
cmp
js
daa
lods
fidivs
cmpsb
repnz
push
ds
shrl
xchg
imulb
cmpsl
fcompl
ds
pop
sahf
jnp
test
insb
mov
std
ds
in
ss
lahf
add
cmp
fucom
insl
addr16
or
xchg
cli
adc
or
leave
pop
ljmp
xchg
sub
outsl
lds
arpl
dec
xor
cmc
lret
cld
mov
xchg
jp
jmp
sbb
push
dec
dec
and
shrb
daa
xlat
in
mov
cmp
aad
mov
repz
inc
push
xchg
cmpl
mov
cmp
out
fucom
imulb
enter
sub
gs
pop
leave
mov
jg
mov
jns
pop
inc
aas
rclb
inc
add
mov
fwait
jbe
jp
pop
xchg
mov
xor
lea
stos
jb
sub
xlat
or
repz
pop
xchg
dec
imul
add
jg
icebp
aad
xor
js
stos
lds
push
adc
loop
xlat
cmp
js
jns
xor
inc
je
mov
repz
cmp
add
jp
mov
dec
ds
sub
add
ljmp
adc
mov
pop
enter
test
adcl
jmp
out
push
xchg
insl
xchg
fcoml
into
aas
hlt
mov
gs
xlat
loopne
dec
icebp
mov
lret
mov
pop
lcall
loope
mov
adc
clc
mov
mov
jnp
mov
int3
or
ficoml
push
loopne
or
hlt
scas
in
jge
add
inc
sbb
movsb
cltd
jle,pn
call
sbb
test
repnz
mov
in
movsb
std
es
push
pop
xchg
lret
lcall
in
shrb
or
and
test
decb
arpl
out
data16
add
add
testl
sbb
insl
sbb
lahf
sub
scas
ljmp
mov
sub
cli
in
cmc
addr16
xchg
movsl
test
popf
sbb
test
int3
js
int3
sbb
lock
sbb
stos
out
inc
pushf
in
adc
lds
xlat
adc
rolb
mov
movsl
mov
dec
dec
mov
cmp
mov
iret
pop
inc
stc
jmp
cli
aad
adc
shl
fcoml
loop
and
pop
ljmp
or
cltd
jns
sbb
jmp
pop
pop
rol
xchg
stos
notl
pop
mov
lods
popf
push
outsb
xchg
push
jp
and
xchg
inc
cmp
addr16
xchg
aaa
mov
mov
fdivrp
jg
leave
loope
mov
push
rcrl
push
cmp
push
stos
aaa
or
push
fwait
add
sub
lea
popa
lret
mov
cmp
push
into
rcrb
test
sub
mov
loopne
sbb
xchg
inc
stos
jecxz
pop
fidivrs
xchg
dec
aas
pusha
pop
call
add
mov
dec
push
pop
lret
jnp
sbb
fisttpl
pop
daa
push
push
jmp
jo
mov
inc
in
jns
adc
jl
xchg
mov
in
mov
push
cmpsl
fistl
shrb
lds
mov
insl
outsb
pop
pop
add
je
mov
stos
mov
aaa
xchg
mov
aam
std
cmp
test
int
call
sbb
aas
inc
xor
or
sbb
jmp
cmp
push
mov
or
cmp
sti
cmpsl
fldl
cmp
xor
scas
xor
xchg
mov
rcrb
lods
push
cmp
sub
movb
into
les
shr
sbb
xchg
cmp
xlat
and
or
call
mov
pushf
jo
push
in
cmpsb
and
jbe
mov
sahf
dec
mov
sbb
out
dec
mov
pushf
mov
jno
lahf
sub
mov
mov
test
mov
aaa
inc
pushf
sbb
fs
imull
mov
and
add
mov
bound
fcmovu
jnp
jne
repz
out
dec
out
inc
mov
adc
pop
cmp
sbb
rol
pop
lahf
xlat
add
xchg
sub
jb
inc
or
xor
mov
imul
int
sbb
call
addr16
jle
jbe
jno
mov
adc
fs
ds
imul
xor
das
sub
pop
add
push
inc
push
in
ljmp
xor
cmp
push
cwtl
test
lock
and
loopne
mov
out
cmp
inc
lea
fsubp
or
cmp
inc
xchg
push
sbb
adc
sub
cmc
fmul
xor
cmpsb
push
push
in
stos
sub
fs
xchg
je
and
lret
sti
mov
and
data16
push
shrd
cmc
inc
hlt
stos
rol
inc
sbb
mov
fwait
enter
push
std
add
icebp
mov
xorb
in
push
lret
fwait
xchg
iret
sbb
mov
add
sub
push
add
push
gs
ficomps
mov
in
cmc
mov
shl
xchg
add
or
repz
aaa
mov
mov
dec
movsl
cmpsl
adc
mov
add
inc
mov
pusha
mov
cmp
mov
xlat
hlt
test
repz
or
add
and
dec
std
incb
jbe
adc
add
add
sub
inc
mov
mov
add
loop
aam
cwtl
stos
fstpl
in
sbb
push
jmp
sub
dec
cmp
cmp
adc
jne
xchg
daa
add
cmc
fisubl
movsl
xchg
pusha
cmp
pop
and
mov
mov
imul
cmpsb
pop
div
sbb
ss
cmp
push
fidivrl
pop
inc
es
es
rdmsr
sbb
push
push
enter
pop
notb
jae
cs
mov
std
stos
fists
cmpsb
xchg
test
xor
out
inc
mov
scas
js
aam
fwait
loope
rolb
push
call
in
xor
or
pop
xchg
fiaddl
xor
popf
cmp
ljmp
ja
je
mov
add
jle
pop
mov
mov
fs
pop
lcall
mov
sbb
outsl
adc
clc
bound
xchg
mov
xor
lock
pop
clc
xor
mov
jmp
fldt
mov
cmpsl
mov
inc
sbb
cmp
add
xor
ja,pt
mov
push
std
gs
xchg
mov
icebp
inc
dec
xorl
fdivs
push
fdivrl
addl
xor
mov
add
mov
or
dec
movsl
adc
dec
push
mov
iret
adc
pop
outsl
sbb
jo
ss
pop
mov
push
inc
xlat
aaa
incb
frstor
movsb
pushf
scas
pop
lahf
fistpl
mov
pop
inc
iret
popf
je
inc
or
sbb
cmp
insb
jg
cmp
shll
jg
jle
push
cmp
pop
and
inc
cltd
xor
sub
pop
jmp
jecxz
add
cld
gs
in
fs
nop
in
in
icebp
pop
arpl
inc
xchg
mov
push
mov
pop
sbb
inc
pop
sub
mov
add
adc
jne
fildll
push
dec
call
cmpb
and
xor
mov
popf
or
pop
pushf
fimull
lock
cwtl
fs
mov
lahf
data16
aam
xchg
mov
daa
stc
mov
xchg
loopne
inc
es
ljmp
add
icebp
jne
and
and
xchg
sub
std
fdivl
lcall
stos
push
inc
jle
ds
in
push
push
mov
mov
mov
sub
and
mov
rolb
scas
ds
aam
inc
adc
push
jae
xchg
mov
add
data16
push
jbe
mov
lea
mov
inc
mov
enter
insl
or
scas
lret
and
popa
mov
dec
mov
loop
adc
in
mov
push
movsl
fsubl
jg
popa
pop
push
lods
push
add
arpl
pop
ja,pt
sbb
scas
mov
nop
in
mov
rcll
push
pop
push
fists
dec
enter
pop
xorb
cwtl
mov
adc
movsb
jns
add
lea
inc
sbb
cwtl
imull
sahf
or
imul
stos
sahf
mov
push
lods
popa
inc
push
lret
les
mov
cmpsb
mov
cs
and
shlb
les
std
jecxz
mov
mov
mov
pop
aas
dec
jle
xchg
or
xchg
mov
ja
cmc
ret
mov
js
ret
shr
add
fisubrs
pop
fnstsw
rol
fs
out
loope
stc
in
jmp
inc
mov
stos
out
mov
rolb
popa
into
addr16
mov
xor
sbb
ret
mov
adc
or
add
adc
adc
icebp
dec
sub
and
iret
add
jl
or
cld
push
js
push
inc
fidivrs
dec
jnp
repz
icebp
shrb
scas
test
notb
and
shll
lods
jmp
pop
mov
or
sbb
mov
push
testb
push
or
pop
cmp
dec
cs
jb
test
test
jo
xor
cli
sub
mov
xlat
jne
pop
in
mov
adc
fnstsw
dec
ret
sti
add
or
and
lods
sbb
mov
jns
cmp
lret
leave
pop
imul
cwtl
inc
pop
pop
out
popa
fs
pop
gs
rorl
scas
xchg
in
std
call
stos
xchg
cli
out
arpl
jmpw
shrl
test
add
cmpsb
outsl
xchg
jns
inc
shll
aam
jo
push
pop
cmp
pop
inc
jb
out
mov
push
xchg
arpl
in
fwait
insb
into
les
cmp
test
pop
popa
jg
insl
dec
xchg
or
inc
sub
mov
nop
dec
xchg
pop
mov
ds
lret
or
sub
dec
ds
jge
mov
imulb
lcall
lea
out
cmp
and
loope
and
sti
or
push
popf
repnz
fisttps
jno
add
movsb
loope
test
fstpt
lcall
push
dec
es
jno
adc
notb
jns
sbbb
cmpl
and
lahf
push
mov
bound
xchg
xor
fs
mov
mov
push
sbb
adc
scas
push
xor
mov
sbb
test
loopne
fidivrs
call
movsl
mov
or
imul
shr
fmull
movsl
pop
outsl
ja
push
addr16
dec
mov
xor
adc
pop
xchg
mov
mov
shlb
jbe
add
pop
push
cmpsb
fcmovbe
je
and
aam
aad
in
push
jg
fdiv
inc
std
push
xor
sbb
push
adc
rcr
adc
repnz
leave
lret
adc
in
cmp
mov
or
je
insl
hlt
and
repz
push
mov
pop
int3
pop
insl
subl
adc
ret
mov
fistpll
xchg
sbb
subl
sahf
roll
loop
stos
sub
add
insl
sub
fisubrl
cmp
out
popa
jp
ret
mov
mov
add
jno
ds
int
push
push
jp
push
gs
jge
rolb
jg
xor
repnz
mov
inc
lods
ret
add
rorl
js
lret
xchg
sub
mov
lret
or
xchg
xchg
loop
sbb
loop
lods
ret
pop
fdivrs
les
lcall
and
jbe
sbb
test
mov
add
mov
lret
lahf
jl
push
es
or
add
mov
xor
sbb
jecxz
scas
test
jnp
mov
mov
test
inc
mov
mov
dec
stc
mov
mov
pop
or
cmpsb
xor
cltd
in
inc
pop
mov
or
mov
jmp
jo
push
inc
sub
inc
add
sub
jns
mov
mov
mov
pop
inc
and
mov
addr16
fldl
mov
inc
xchg
cli
mov
dec
xchg
dec
scas
scas
dec
jae
jg
add
inc
ljmp
call
xchg
push
xlat
jbe
pushf
or
and
jg
and
js
push
jl
out
std
es
add
push
jmp
loope
lcall
ret
popa
enter
xor
cmp
jne
aaa
mov
pushw
in
pop
lcall
mov
inc
frstor
ja
mov
leave
xchg
push
cmpsb
inc
shlb
stos
sti
test
jae
push
ljmp
sub
xchg
push
loop
arpl
pop
lahf
outsb
cmp
or
sub
mov
loopne
jnp
inc
pop
sub
es
jl
mov
ror
stos
add
fisubrl
push
fildll
adcb
mov
or
stc
rcrb
aam
in
in
or
insb
inc
test
push
repnz
push
jmp
inc
or
pop
in
ret
ret
xor
add
stos
ja
insb
repnz
mov
popa
push
enter
inc
ret
or
or
je
jge
xchg
sbb
xor
cmp
adc
xchg
xchg
mov
lcall
imul
mov
and
data16
imul
fcomi
xor
ljmp
ror
test
mov
dec
jg
insb
loop
cmp
add
sbb
in
hlt
push
lock
or
inc
sub
adc
or
mov
mov
sub
or
nop
xor
test
jbe
push
fldenv
add
xchg
cmp
jb
leave
test
fcoml
mov
xor
adc
std
inc
pop
mov
ds
imul
cli
or
rcrl
popf
jbe
fidivrl
repnz
mov
decl
push
pop
cmp
fldl
js
fnstenv
add
in
lds
sbb
and
push
mov
iret
fsubrl
sahf
mov
pop
shl
pop
xchg
dec
bnd
push
inc
lahf
cld
flds
jne
ljmp
push
lds
stc
sub
mov
inc
add
int3
jg
test
lret
daa
fwait
xchg
out
adc
sbb
push
jb
mov
xor
aad
dec
aas
push
mov
loope
clc
dec
cltd
fsubrs
ja
ljmp
pop
dec
adc
pop
sbb
inc
jne
out
jg
mov
jno
ljmp
and
mov
inc
mov
pop
les
mov
xchg
mov
sub
sbb
dec
scas
scas
out
andl
stos
mov
sub
add
sub
rolb
fsubrp
xor
push
pop
test
out
popa
inc
and
add
pop
out
mov
mov
xchg
xchg
xor
in
out
jle
or
push
stos
adc
cwtl
xchg
popa
mov
andb
push
jle
fcmovnu
push
mov
jne
jae
mov
ret
arpl
int
xlat
sub
lahf
lods
jp
and
das
jnp
bound
xchg
inc
cs
push
sub
stc
mov
mov
mov
idivb
cld
pop
xor
in
add
sub
push
js
cmp
or
cmpsl
mov
cltd
jmp
insl
adc
sti
add
or
xor
scas
fcom
sub
sti
out
aam
pop
mov
dec
jnp
mov
jmp
mov
inc
jg
adc
jp
push
lea
out
inc
div
xor
cli
leave
push
fmull
sti
inc
sub
sbb
clc
loop
stc
sub
adc
icebp
fidivrl
xchg
popa
pop
stc
sub
and
fwait
std
enter
sbbb
imul
inc
fsubs
add
add
daa
mov
in
fdivs
sbb
dec
sbb
sbb
and
mov
movsl
push
add
xor
mov
fnstenv
jmp
inc
movsl
imulb
nop
jns
mov
stos
dec
out
pop
dec
pop
push
push
std
jp
nop
jno
dec
add
sub
je
faddl
loop
push
test
insl
add
pop
sub
push
shlb
lds
scas
enter
cmp
imul
jb
add
sti
movsb
nop
push
adcl
jp
add
mov
aaa
les
fsubrl
or
and
ret
jecxz
out
repnz
and
aas
add
inc
push
xor
add
je
arpl
xor
mov
aam
daa
dec
hlt
and
mov
mov
repz
pop
shll
jo
inc
bound
call
sti
movsb
jmp
cld
int
movsb
int3
test
pop
mov
sbb
call
sarb
mov
dec
scas
rclb
jo
mov
lea
mov
dec
addr16
insb
iret
cmpsb
fsubrp
gs
jl
pmulhuw
int
js
dec
movsl
in
gs
aas
push
jne
lea
pop
pusha
inc
mov
push
pop
cmp
lret
push
pop
cmc
movsb
cmp
outsl
inc
jg
lock
xlat
js
xchg
cmpsb
add
idivb
and
dec
mov
jnp
pushf
dec
mov
les
scas
pushf
xchg
dec
jge
cmp
arpl
and
add
gs
lahf
jo,pt
xlat
lods
roll
popf
pop
add
fucomi
nop
fdivp
mov
addr16
pusha
cmp
jb
cmpsl
cmc
iret
mov
mov
enter
sti
fisubrl
push
mov
fsts
push
std
sahf
or
sbb
lds
mov
mov
pop
call
push
xchg
nop
jl
jle
shlb
xchg
mov
pop
hlt
mov
in
jnp
das
loope
jno
inc
push
push
out
adc
cmpsl
adc
movsl
das
and
in
inc
data16
or
or
mov
mov
mov
fcmovu
test
dec
dec
inc
cs
std
cltd
pop
or
xor
jg
pop
out
pop
fs
push
xchg
sub
push
mov
adc
sahf
sbb
rcrl
mov
repz
and
fwait
jl
test
filds
sub
or
dec
into
push
test
push
add
sti
pop
adc
jo
es
cmpb
push
sahf
aas
jp
push
add
aam
dec
fildll
scas
repz
and
test
jecxz
mov
lods
adc
adc
inc
sbb
pop
inc
adc
jb
enter
push
mov
stos
ss
push
dec
mov
fiaddl
shufps
mov
sub
mov
cmpsl
enter
int3
lock
daa
into
dec
pop
inc
mov
popf
lea
or
or
std
stc
jo
cmp
jle
sti
adc
mov
outsb
fcoms
imul
jl
sub
hlt
inc
adc
pop
mov
out
xor
xchg
and
enter
mov
xor
rolb
hlt
dec
add
fs
cmc
shll
fcmovu
rclb
pushf
sarb
mov
fldt
pop
lea
sub
fcoms
outsl
bound
push
stos
add
notb
sbb
dec
cmpsb
fmuls
xor
xor
adc
inc
jp
shlb
add
outsb
dec
iret
das
xor
inc
mov
mov
push
dec
addr16
and
jmp
nop
loope
iret
xchg
pop
repnz
push
or
stos
clc
xor
cwtl
lcall
outsl
fisubrs
fbld
sti
mov
sbb
lahf
inc
cwtl
inc
fisttpll
fistl
push
mov
push
push
es
les
xor
pop
push
aam
icebp
pop
xor
xchg
repz
aam
inc
pushf
test
xor
inc
jmp
pop
or
pushf
mov
movsl
add
pop
cmp
mov
leave
je
imul
inc
inc
dec
rclb
push
push
loopne
and
test
stos
fs
add
add
sub
mov
mov
push
mov
adc
pop
pop
fnstcw
bound
sbb
inc
repz
dec
xchg
mov
pusha
mov
xor
test
inc
add
xor
jne
sbb
mov
fisttps
movb
stos
sbb
push
out
push
in
pop
lea
xor
popf
xchg
cmp
inc
lods
cmpsl
repz
and
sub
dec
daa
xchg
rol
shll
sub
mov
sub
out
push
out
xchg
cwtl
rorb
pushl
and
mov
jmp
aaa
lds
mov
cmp
aaa
jg
cmp
pop
xor
out
pop
dec
popa
hlt
outsl
xchg
fildl
sub
cld
inc
mov
jne
mov
cmc
sub
dec
xchg
mov
in
and
gs
or
mov
cmp
push
fwait
cli
movsl
clc
xchg
or
stos
inc
mov
out
adc
mov
dec
inc
and
rcrl
je
test
push
mov
mov
cmp
stos
aam
les
out
call
adc
adc
enter
hlt
pop
jg
sbb
addr16
push
adc
je
dec
in
push
fwait
insl
inc
sti
fwait
push
xor
mov
xchg
sbb
push
jl
sub
addl
nop
push
cs
xchg
xbegin
lods
xchg
add
fstpl
push
jg
push
cmp
scas
test
pop
add
push
sub
ret
loopne
arpl
dec
insb
mov
repnz
bt
and
inc
and
testl
cmp
xchg
cmpsl
data16
sahf
xor
ret
shrb
roll
xchg
mov
jnp
fbld
shl
rolb
repz
outsb
cmp
testl
push
jb
inc
lods
sub
add
pop
scas
sbb
data16
sarb
push
in
sub
negl
cmc
mov
jno
adc
movq
or
push
lahf
mov
loope
pop
pop
mov
sbb
in
leave
fstpl
cmp
adc
aaa
dec
xor
mov
or
mov
add
mov
xor
outsl
clc
fwait
hlt
push
mov
xor
sbb
pop
pop
add
xchg
sub
int3
out
inc
mov
imul
aam
rclb
fwait
add
mov
fwait
scas
popa
testl
out
hlt
cmpsl
mov
add
js
dec
push
ffree
sub
mov
jmp
outsl
adc
lret
or
cmp
dec
ds
std
jns
push
fisttpll
mov
adc
and
ret
decb
outsb
shll
push
es
xor
adc
cwtl
jno
pop
jae
roll
cmpsb
dec
inc
les
and
mov
sbb
sbb
ret
xchg
psadbw
ret
ffree
data16
mov
inc
mov
pop
push
leave
cs
stos
into
mov
xchg
mov
xchg
push
mov
xorb
out
pop
pop
lcall
test
dec
test
repnz
or
xchg
add
xchg
sbb
jbe
adc
and
or
lods
dec
andb
xor
lret
jno
lcall
pusha
aas
push
push
nop
jmp
mov
loope
dec
sbb
adc
dec
jbe
shrl
pop
cmpsl
stos
jmp
rol
leave
mov
cmpl
fdivrl
or
pop
xor
pop
add
imul
ret
mov
in
and
cmpl
or
call
hlt
dec
fwait
xor
push
jo
sub
or
jbe
adc
fcmove
cmpsb
roll
xchg
adc
push
pop
lea
lods
pop
into
lcall
jge
fs
popa
mov
sub
sub
loop
adc
in
pop
ja
adc
loopne
loopne
test
sbb
addr16
insb
pop
test
adc
pop
add
jb
cmpsl
xor
out
lods
hlt
scas
sbb
pop
xchg
mov
je
hlt
sub
int3
mov
inc
cltd
mov
mov
jmp
popf
push
movsb
push
add
mov
gs
jns
push
hlt
das
jb
push
gs
repnz
jns
add
nop
inc
xchg
sbb
data16
cmp
sbb
dec
mov
loope
mov
push
imul
xchg
mov
mov
aad
adc
or
out
popa
xchg
test
fdivrs
insl
imull
aaa
cld
loopne
jb
add
mov
int
adc
lods
setae
pop
shlb
addr16
fistpll
movsb
and
mov
cmpsb
ficoml
jns
sbb
and
fcoms
pop
pop
mov
nop
add
repz
cwtl
xor
fs
adc
js
stos
scas
popf
dec
push
add
adc
sbbl
jnp
dec
mov
mov
or
imull
aas
hlt
test
jb
or
andb
mov
xchg
sub
movsb
mov
dec
push
mov
and
pop
popa
push
cmp
mov
cmp
fcomp
sbb
jge
dec
nop
aas
ret
and
movsb
gs
fs
mov
adc
push
add
mov
imul
mov
cmp
mov
push
mov
orl
fisubs
add
jne
loope
mov
and
or
pop
jecxz
sbb
insl
sub
add
lock
mov
sbb
pop
or
xchg
push
enter
and
pop
sbb
gs
sbb
leave
ffree
fwait
movsl
pusha
clc
jl
dec
lcall
ds
and
out
stos
pop
xchg
adc
push
xor
sub
lret
jmp
fcomi
pop
sbb
mov
dec
sub
lods
in
sub
jge
cmp
inc
cmp
jp
xchg
mov
ret
mov
xor
add
inc
adc
cli
push
jne
cmpsl
xor
iret
xchg
sbb
push
mov
fdivr
leave
aam
inc
out
std
pusha
andb
xor
and
push
and
cs
cld
xor
out
rorl
dec
outsb
lret
int3
scas
imul
mov
es
enter
sub
cmp
jae
mulb
ret
fsts
xchg
xlat
outsb
int
or
imulb
mov
inc
outsl
push
test
push
cld
mov
daa
fldcw
jle
ret
mov
lret
in
mov
push
cmc
dec
ja
in
stos
sub
or
aad
sbb
adc
movsb
pop
xor
adc
aaa
enter
sbb
xchg
mov
mov
push
je
fsubrl
dec
mov
jmp
mov
cmpsb
cmp
mov
ljmp
in
movsb
lods
aas
shlb
pop
mov
test
sarl
jno
iret
in
in
mov
je
inc
lahf
cld
push
stos
fwait
hlt
icebp
ret
xchg
adc
sub
push
lcall
fs
mov
or
push
lds
loop
push
sbb
lock
sbb
out
into
and
sub
push
mov
fnstcw
ds
mov
loopne
sub
inc
hlt
jp
pop
pop
jns
xchg
lret
mov
fyl2x
pop
cmpsb
xor
test
jge
push
sub
es
imul
xchg
popf
outsl
stc
jmp
mov
ljmp
jecxz
cs
insl
dec
push
repz
outsb
sub
sbb
jg
or
xchg
std
fwait
cmpsl
call
insb
add
jns
outsl
repnz
bound
jne
arpl
jl
cmp
jb
shr
aam
xchg
pushf
leave
jne
popa
add
mov
inc
pop
cmp
pushf
cmp
addl
out
push
loop
jmp
jecxz
int
and
out
rcrl
inc
jge
and
jge
dec
out
xchg
add
dec
mov
roll
mov
ss
arpl
mov
pop
xchg
fcmovnb
movq
cmp
push
adc
cmp
push
or
aad
sub
insb
push
leave
rcrb
fxch
nop
pop
nop
xchg
cmp
adc
gs
and
arpl
adc
mov
outsl
dec
aas
mov
mov
lds
push
sti
ret
js
push
cmc
in
lods
js
sub
out
popa
xor
pop
dec
lock
jbe
hlt
ljmp
jbe
xchg
dec
arpl
inc
imul
shl
mov
lods
sahf
test
icebp
adc
mov
dec
into
notl
ret
test
push
cld
add
filds
test
add
out
fistps
jge
mov
loopne
cmp
dec
push
ficoml
jne
pop
mov
inc
sahf
loope
push
or
stc
cmp
mov
sbbb
mov
and
pop
mov
insl
jno
add
rorl
add
sub
mov
and
inc
mov
xchg
out
xlat
jnp
fcompl
jl
jecxz
fwait
dec
shll
shll
aas
loope
outsb
notl
inc
or
pop
inc
in
lcall
jg
dec
movsl
imul
cmp
sbb
cmpsl
imul
clc
xchg
inc
movsb
push
jne
ret
mov
es
fsubrs
add
repz
mov
call
cmp
add
arpl
push
inc
addr16
sub
pushf
rorl
mov
inc
and
les
not
xchg
xlat
jnp
cwtl
inc
add
jp
inc
ret
shlb
or
jp
ret
pop
insl
xchg
out
ljmp
pop
adc
je
or
inc
lods
mov
les
push
mov
imul
pop
jns
loopne
in
fcmovnbe
push
test
loop
cmp
nop
fdivrs
insl
test
int3
xchg
mov
jns
sub
test
data16
call
dec
fsincos
xor
jecxz
loopne
in
mov
repz
test
add
and
cmp
cmp
jecxz
lcall
and
jge
and
cmp
roll
out
xor
icebp
scas
sub
xlat
jae
ss
repnz
je
fmul
sbb
es
push
push
lds
mull
xchg
lret
pop
mov
xchg
std
sahf
xor
fs
add
jae
cld
pop
out
or
xchg
sti
outsl
loopne
cmp
std
shll
bound
nop
dec
in
fcmovbe
dec
int3
sahf
fstp
and
daa
fadds
movsb
mov
js
dec
sub
inc
ret
xor
pop
jmp
xchg
pop
or
lea
fiadds
jl
addr16
pop
stos
mov
fidivrs
mov
ljmp
sbb
inc
xchg
outsb
inc
cmp
and
movsb
bound
nop
sub
xchg
or
lock
and
leave
out
pop
mov
jbe
cmp
sbbb
cmp
rcll
pop
icebp
shll
loop
cmp
xor
pop
icebp
lods
cmp
cwtl
bound
outsl
lods
sbb
imul
jg
lock
mov
cli
addl
mov
fcoml
test
adc
cmpb
fiadds
into
repz
loop
xchg
jns
sbb
mov
push
outsb
lock
outsl
dec
xchg
std
push
add
int3
push
orb
jecxz
inc
dec
rcll
ret
adcl
mov
push
icebp
nop
adc
ss
leave
adc
xchg
push
adc
clc
jo
adc
aad
and
test
mov
xchg
and
icebp
stc
cmc
sub
gs
xchg
in
mull
imul
jnp
sbb
ja
xor
push
das
cmpsb
add
test
jne
sbb
testb
mov
mov
stc
sbb
clc
sub
pusha
test
shrl
fidivrl
in
sbb
shll
add
and
pop
cmp
jns
add
pop
mov
mov
and
jmp
les
mov
jl
popl
adc
sbb
cmpsb
rcll
mov
jns
push
pop
sbb
mov
negl
insb
es
xchg
sbb
mov
xor
pop
std
push
mov
icebp
jae
adc
loop
int3
cmpsb
sub
cltd
xor
stc
mov
and
cli
outsl
ljmp
daa
inc
dec
aam
jno
mov
sbb
jnp
std
sub
arpl
imul
repnz
and
push
test
enter
xchg
cmp
std
mov
xchg
inc
mov
js
ja
mov
nop
push
test
pop
push
repnz
outsb
sbb
sbb
clc
movsb
jbe
mov
sub
popf
push
mov
icebp
dec
pop
fmull
lahf
cli
inc
mov
jp
or
rorl
cmp
adc
push
xchg
push
std
roll
in
or
pop
cmp
dec
jo
mov
push
ss
inc
jo
std
xchg
cs
in
fisttpll
aas
lds
rcr
movsb
push
shr
push
test
add
movsb
imul
roll
push
ss
mov
pop
adc
jns,pt
scas
icebp
inc
dec
popa
xchg
mov
pusha
sbb
mov
pop
dec
mov
pop
into
ja
addb
shll
daa
cmp
das
sub
jae
mov
popf
jp
inc
std
je
xchg
imul
pop
or
xadd
add
mov
int
gs
push
cwtl
rorb
or
mov
fnstenv
cli
adc
sub
repz
data16
std
push
popa
incl
mov
test
pop
push
cmpsb
notb
adc
add
jmp
adc
cmpsb
xor
test
ljmp
mov
ret
in
shrb
adc
mov
dec
mov
add
das
jl
lds
in
es
cmc
rclb
and
js
adcl
and
sub
test
dec
and
sub
ret
testl
dec
sub
pop
movsl
xchg
xchg
ds
test
movsb
or
je
das
in
in
lds
arpl
or
jae
fucomp
jg
and
gs
dec
out
inc
jbe
or
mov
arpl
flds
mov
xchg
icebp
sbb
pop
or
rcll
adc
out
jge
stos
and
mov
sbb
fs
push
das
test
mov
cmp
jp
pop
fwait
jmp
adc
fcompl
cmp
fcompl
lahf
cld
mov
negb
mov
or
fldenv
adc
out
push
bnd
decl
int3
adc
repz
ljmp
pop
jle
or
cmpsb
mov
popf
fmull
fnstenv
mov
pop
js
pusha
xchg
arpl
pushf
adc
cmp
sbb
cmpb
lods
xlat
pop
stos
mov
jae
mov
jg
or
adc
sar
rcr
mov
jno
adc
sahf
mov
xchg
ss
outsl
rorb
cmc
mov
in
or
inc
lcall
mov
pushf
cmpb
data16
adc
adc
stos
jnp
mov
daa
cmc
add
sahf
push
lret
movsb
sub
cmp
inc
loope
mov
cltd
int3
testb
mov
cmp
pop
jno
add
sbb
mov
mov
cmp
and
push
std
in
add
divb
fisttpll
aaa
imul
inc
jecxz
movsl
inc
and
adc
into
js
jecxz
cli
and
xchg
inc
stos
xor
fcmove
mov
mov
mov
ret
sti
les
mov
stos
sub
imul
daa
test
js
xchg
pop
cli
rolb
sbb
pop
leave
sbb
int
loop
cmp
dec
dec
inc
fs
loopne
xchg
add
push
pop
and
aam
ficoml
inc
fdivrs
adcb
pop
and
in
mov
sbb
adc
rorl
mov
mov
aas
rorl
mov
cs
jp
roll
stos
sbb
xchg
cmpsb
inc
pop
test
in
xor
fsubrs
mov
sub
adc
subl
repnz
and
adc
push
dec
cli
mov
sbb
scas
jae
addr16
ficompl
cltd
jecxz
movsb
push
push
stc
jge
jmp
jmp
fiadds
std
xchg
mov
cmp
and
pop
cmpb
inc
fidivrs
mov
ret
fs
scas
mov
dec
inc
movsl
cltd
mov
test
push
fdiv
mov
je
fistpl
fsubrs
xor
mov
inc
js
cmp
lods
or
negb
in
mov
loop
mov
mov
mov
sbb
stc
inc
xchg
or
daa
pop
rcrb
mov
pop
pop
icebp
iret
or
fstps
add
in
insl
in
sub
dec
xor
in
xor
orl
test
stc
pop
cs
pop
xchg
inc
mov
arpl
clc
mov
cmp
push
mov
inc
scas
add
cld
mov
fiadds
insl
add
orl
arpl
rclb
xchg
aas
aaa
jmp
or
loope
mov
push
popf
sqrtps
xlat
push
in
and
pushf
xchg
fcomip
pop
lret
and
jo
leave
cli
cmp
adc
push
movsl
movsb
loop
insb
add
outsb
xchg
and
or
xchg
dec
and
sub
add
leave
fldt
repnz
mov
and
push
call
jb
stos
dec
lds
sub
pop
adc
lret
ja
mull
hlt
shrl
and
mov
mov
mov
mov
data16
mov
lea
fsts
cmp
int3
inc
adc
and
push
or
lcall
test
sub
jle
push
out
inc
ja
sub
pop
xor
adc
psubsw
sti
inc
mov
les
xlat
inc
mov
das
jb
jmp
xor
ds
lcall
xor
sbb
test
por
sub
xorb
je
sub
pop
andb
cmpsl
add
xchg
idivl
ret
pop
inc
mov
outsl
rclb
sub
mov
in
add
inc
pop
sub
sbb
sub
mov
xor
push
mov
sarb
fnstsw
fbld
jp
cli
push
xor
nop
sbb
out
call
rolb
popf
lods
loopne
stos
sub
jl
mov
scas
nop
insl
mov
int
sahf
push
lret
mov
mov
jge
mov
inc
idiv
fists
xchg
rorl
push
jge
push
inc
cmp
rorb
in
fimull
lods
test
imul
and
xchg
ja
inc
insl
dec
push
sub
test
xchg
aas
std
rorl
stc
push
mov
aam
sbb
shlb
cmc
adc
add
xchg
faddl
mov
or
rorb
cmc
inc
insl
jo
loop
add
icebp
cltd
lahf
test
sub
or
xchg
lcall
aas
loop
clc
fistpll
jge
js
inc
jbe
cld
push
scas
adc
rorb
push
repnz
sbb
xor
or
stos
sbb
into
mov
insb
ficoms
rol
sbb
sbb
sahf
and
aam
and
and
test
dec
jmp
push
shlb
inc
inc
adc
push
ret
jmp
jb
fsubs
mov
push
sbbb
scas
push
jl
mov
mov
fistpl
mov
dec
or
mov
add
jns
mov
adc
jns
repz
pop
ret
sub
xor
jge
cmp
jb
and
jns
out
jge
lods
out
mov
push
bound
cmp
mov
jmp
out
mov
pop
and
or
pop
cmp
in
stos
stos
mov
cmpl
out
nop
pop
dec
repnz
jmp
adc
dec
jg
cmp
ret
push
mov
loop
fs
mov
ficoms
mov
mov
mov
outsl
sbbl
loope
cltd
enter
pop
ljmp
cmp
cmp
xchg
mov
repz
push
mov
inc
scas
das
out
sub
repz
fadds
movl
test
or
leave
hlt
ret
sub
xor
outsl
in
mov
aam
fstpt
testb
test
mov
pop
test
inc
jl
xchg
mov
aam
pushf
xlat
fmul
ljmp
mov
or
scas
addr16
scas
ljmp
inc
xlat
sti
xlat
shl
ljmp
gs
jae
dec
outsl
cmp
and
fsubrp
movsl
imul
rorb
pop
fsts
add
inc
decb
inc
in
shl
lret
mov
add
fiaddl
lods
out
insl
sub
outsl
mov
bswap
movsl
out
and
mov
ret
add
js
loop
les
enter
insl
or
int3
mov
mov
out
fisubl
push
js
push
rcrl
mov
jle,pt
sub
out
aad
cmp
push
jnp
loopne
movsb
shll
mov
pop
push
imul
clc
sub
dec
cmp
xor
mov
xor
in
push
cmp
xchg
pushf
mov
arpl
popf
and
dec
mov
cmpsl
inc
lea
jl
int3
or
mov
rol
pop
or
or
cmp
jno
sbb
mov
shrd
scas
es
fcoms
and
add
dec
pop
add
pop
mov
jl
scas
mov
out
and
scas
sbb
fsubrs
xchg
shll
sti
sub
inc
ret
adc
lods
in
jnp
imul
gs
sub
pop
jno
mov
js
xor
add
and
dec
dec
mov
imul
push
fmulp
ds
inc
pop
push
sub
adc
mov
mov
xor
dec
outsb
shl
testb
mov
les
xor
jbe
adc
jns
arpl
das
pop
andl
mov
lock
push
setns
push
mov
add
xor
xchg
or
sub
lea
hlt
scas
inc
mov
sub
push
cmp
inc
sbbl
or
or
sbb
loop
push
adc
jb
pusha
push
mov
lock
mov
sbb
fwait
out
push
adc
push
or
testb
mov
mov
dec
popf
cwtl
jmp
in
mov
xlat
mov
popf
stc
sub
inc
cli
dec
push
mov
stos
scas
sarb
mov
xchg
push
ret
dec
jno
fsubl
inc
jmp
lahf
sub
mov
rcr
hlt
pop
jp
popa
rcrb
aas
loope,pt
call
sbb
sub
stos
ret
lods
cmpb
lret
mulb
push
xorb
gs
push
adc
sbb
lea
mov
jp
mov
dec
gs
adc
cmc
hlt
stc
or
fcmove
hlt
movsb
pop
cmpsb
add
inc
negb
ljmp
xor
call
arpl
mov
adc
cld
push
out
xchg
bound
push
jmp
adc
pushf
xor
dec
inc
jo
pop
adc
push
dec
push
out
jo
sbb
cmp
bnd
cwtl
cmp
xor
fistps
cmp
dec
fiaddl
stc
sub
imul
inc
loopne
jmp
dec
push
sahf
and
sub
xor
rolb
int3
xchg
je
adc
inc
and
loop
decb
mov
cmc
inc
das
aaa
js
in
pop
loop
js
or
es
out
dec
dec
and
repnz
jbe
xor
stc
jl,pn
ljmp
int
flds
sub
mov
imul
inc
fadds
and
inc
inc
movsl
sub
lods
or
cld
push
sub
push
mov
mov
repz
lcall
fisttps
inc
and
push
popa
ds
xlat
xor
fsubl
dec
cmp
stc
and
add
push
movsb
orb
xchg
cmp
push
mov
imul
mov
movsb
jnp
jg,pn
inc
roll
push
cmpsb
aam
int
xchg
cs
stos
ret
jge
dec
rorl
fcoms
int3
mov
adc
xchg
xchg
sbb
ss
cmp
jns
pop
or
fidivl
bound
ds
mov
ja
mov
xchg
add
js
leave
dec
ss
cmp
sti
jbe
xchg
pop
xchg
in
insl
sti
pop
ret
inc
outsb
xor
lds
cmpsl
sub
out
jp
inc
xchg
aas
pop
or
popf
movsb
dec
add
push
test
repz
mov
cwtl
mov
loopne
or
jp
cmp
push
xchg
push
cld
shll
rorl
mov
push
bound
shlb
pop
add
sbb
repnz
incb
sbb
pop
xor
and
and
jle,pn
xchg
popa
shlb
pop
inc
and
adc
imul
ljmp
cmpsb
pop
leave
loope
mov
sbb
fs
in
mov
ljmp
rcrb
hlt
cli
mov
pop
insb
xor
inc
lods
fwait
test
data16
repz
mov
mov
sub
lcall
imul
aad
cld
pop
push
pop
push
jecxz
fcmove
leave
xor
add
fistpl
sbb
push
adc
sbb
adc
mov
sahf
rcll
push
outsb
xchg
iret
cmpl
fstpl
pop
js
icebp
jp
sbb
in
sbb
imul
jle
es
fidivs
mov
aas
mov
ljmp
mov
push
in
jno
sbb
sbb
inc
addr16
mov
xchg
dec
rol
aad
push
pop
test
or
push
cmpsl
in
sti
rcrb
stos
rcrl
pop
adc
jecxz
addl
lea
sbb
mov
and
xlat
mov
insb
and
sub
cli
stc
out
push
out
xor
insb
jg
stc
or
push
mov
xchg
inc
push
jp
imul
mov
add
ljmp
fsubs
ror
sti
addr16
fbstp
inc
mov
pop
or
out
hlt
push
test
lret
jns
cmpsb
adc
clc
adcl
shll
mov
pop
add
mov
mov
cmc
movsl
mov
push
mov
push
insl
xchg
inc
cmc
push
cmpsb
mov
inc
enter
dec
rcrb
sbb
lcall
add
jmp
mov
int3
jl
into
clc
ret
cld
xor
es
frstor
cmc
into
push
test
std
adc
xor
and
in
lcall
inc
repnz
into
hlt
jns
xchg
aad
inc
mov
scas
cmp
dec
sahf
stos
movsb
repnz
adc
xchg
stc
jnp
xor
int
mov
movl
adc
xchg
mov
sub
pop
adc
in
scas
mov
add
fldl
and
and
dec
les
ss
inc
dec
pop
movsb
mov
jae
mov
pop
and
cltd
xchg
push
cmp
or
jnp
or
mov
and
fwait
inc
imul
add
mov
sub
or
into
pop
cmpsl
sti
mov
negl
jbe
xor
sub
insl
jns
and
fwait
aas
xchg
xchg
repnz
cmp
cmp
inc
jmp
jp
loop
imul
inc
stos
inc
das
inc
sbb
repz
and
icebp
daa
and
xchg
inc
pop
div
mov
pushf
mov
jo
push
and
das
mov
mov
dec
xor
repnz
inc
jecxz,pt
adc
mov
pop
int
pop
push
pushf
push
mov
mov
sbb
rcrl
or
dec
je
mulb
sahf
xchg
into
pop
xor
add
pusha
pop
ss
dec
in
sbb
push
jbe
test
addr16
xorb
sahf
roll
push
jbe
insl
fdivrs
cwtl
cmpsb
sbb
imul
pop
push
cltd
je
daa
ret
aam
push
mov
push
xchg
lret
lods
js
adc
mov
lret
jmp
in
push
cmp
pop
sbb
imul
sarb
jae
mov
aaa
fdivrl
jge
inc
xlat
lock
addb
jb
outsl
pop
test
and
or
mov
jl
dec
repnz
xchg
or
xor
sbb
xchg
inc
cmpb
pop
aaa
adc
adc
xor
mov
pop
orb
xor
mov
dec
gs
das
inc
cmp
pop
cltd
in
mov
int
movsb
mov
pusha
xor
dec
ret
andb
fcomi
pop
inc
sub
mov
inc
pop
inc
rcll
in
pop
mov
data16
push
xchg
cmc
jno
popa
sub
xchg
shlb
lock
xor
cmp
out
ret
xor
decl
fcmovnu
push
test
addr16
jecxz
vcmpsd
mov
lods
dec
push
pop
outsb
shufps
sbb
or
sbb
sbb
sub
fisubrl
test
mov
rclb
or
mov
pop
fisttpl
scas
cmp
popa
push
pop
jmp
sbb
add
add
lods
scas
arpl
add
inc
mov
mov
push
fwait
aam
cld
movsb
sti
mov
and
adc
shl
push
test
sub
mov
jge
or
mov
sahf
out
xor
lret
notl
leave
sbb
rclb
lods
adcb
and
rcrl
roll
les
push
out
push
dec
push
jns
out
or
jg
mov
fcompl
ret
negl
rcrb
gs
mov
push
cltd
adc
dec
sub
and
xchg
fisttpll
mov
outsl
xor
mov
pop
mov
movsl
sub
dec
add
mov
sub
fcoms
and
adc
or
insb
xor
sub
out
dec
sbbb
inc
incb
xor
dec
mov
xor
outsb
mov
push
jle
fmuls
fsubrl
gs
jb
jbe
popa
xor
jnp
jl
jbe
or
sub
inc
aaa
int3
xchg
rcrb
es
roll
adc
js
pop
mov
outsl
push
lock
pushf
add
cmpb
cwtl
shll
mov
arpl
pop
fs
jmp
sti
or
cltd
sbb
call
cmc
pop
loope
dec
sbb
mov
icebp
jle
adc
sub
mov
push
insl
mov
addr16
sbb
mov
bound
popf
adc
mov
jmp
adc
push
mov
sbb
sbb
jb
xchg
pusha
jo
pop
mov
aam
push
fadds
mov
dec
push
jecxz
adc
cmp
jl
addr16
nop
decb
jp
dec
aad
xchg
jo
sbb
sub
andb
mov
xchg
movsl
push
jp
jnp
xor
std
cmpsl
cltd
outsb
cmp
sub
int
sub
cwtl
push
jae
fnstcw
out
xchg
sbb
dec
jg
xchg
data16
sbb
sahf
or
andps
inc
mov
xchg
icebp
jb
test
jecxz
add
cmp
jmp
pop
mov
dec
sub
ret
loop
sbb
jecxz
loopne
fcom
movsl
jo
mov
fcmovnb
lret
xlat
adc
mov
lea
inc
mov
stos
dec
stos
lods
fidivrs
cmp
xor
push
arpl
or
mov
in
pushf
push
mov
cmpsb
mov
push
fbld
orl
xchg
ds
add
mov
and
jns
or
cmp
mov
arpl
jb
ffree
sbbb
pop
cltd
xorb
and
out
and
push
cwtl
out
mov
repz
ret
jmp
inc
cwtl
or
add
pusha
adc
or
insl
hlt
lock
ret
adc
jmp
fimuls
daa
cmpsb
push
or
js
xchg
dec
test
xor
iret
jl
sub
push
sbb
push
out
sub
pop
adc
ja
cvtps2pd
jo
sub
divb
xor
jl
cmpsl
mov
push
inc
push
sbb
cld
sbb
ljmp
jp
push
gs
push
outsl
adc
clc
xchg
push
cltd
mov
add
hlt
adc
ljmp
mov
bound
add
addr16
add
ret
xor
add
xchg
fnstcw
inc
mov
cs
dec
idivl
sub
in
dec
xor
sahf
pop
out
fcmovb
jg
icebp
inc
mov
lcall
or
or
cmc
lock
lock
out
mov
push
adc
les
add
dec
push
jle
lret
cltd
in
loope
xchg
std
cmovl
sub
in
jb
aam
xchg
lds
push
cmpsl
pusha
inc
cltd
mov
mov
push
les
es
adc
xor
and
inc
mov
call
xchg
hlt
jns
daa
jp
and
mov
pop
mov
and
inc
shlb
pop
pop
mov
pop
mov
xor
push
cwtl
sahf
sbb
lcall
repnz
pop
insl
dec
xchg
push
add
push
fistpl
insl
add
lods
mov
shrl
pop
pop
addr16
inc
adc
push
sub
shrb
cmc
int3
mov
es
mov
test
test
push
adc
filds
dec
iret
test
jmp
shrl
pop
scas
xor
adc
pusha
xchg
jg
pusha
jg
cs
mov
sbb
mov
pop
sub
je
leave
push
mov
sbb
mov
lret
pusha
mov
out
pushf
lahf
xchg
mov
aaa
int3
adc
pop
dec
ret
gs
sar
fnstcw
and
rcrl
fsubr
and
cmp
dec
fistps
dec
sbb
adc
push
push
nop
mov
lret
aas
pop
iret
mov
outsl
mov
jl
dec
leave
aaa
popf
jecxz
cwtl
sbb
inc
add
sti
fwait
ljmp
and
inc
add
add
inc
mov
sub
pusha
es
sbb
pop
jnp
ljmp
sti
stc
out
js
mov
test
out
jbe
pop
push
dec
xchg
psrld
rcll
lods
loop
bound
out
adc
inc
fistl
movsb
insl
jge
loop
lcall
push
iret
jns
dec
cwtl
xchg
xchg
out
sti
xor
mov
ror
mov
mov
push
sbb
int
xor
ds
push
push
leave
divl
inc
in
imul
sub
xor
mov
pop
xlat
sbb
int
xor
pop
inc
negl
cld
pop
push
cmp
jl
roll
fimuls
dec
inc
push
xchg
jno
stos
mov
pop
and
cmp
dec
in
xor
movsb
sub
shrb
mov
jge
xor
icebp
cmp
add
cmp
lcall
cmp
xchg
jbe
mov
lods
push
in
das
iretw
fdivrs
lods
jl
add
movsb
int3
arpl
fstpt
loopne
test
js
notl
int
mov
aad
adc
test
or
mov
push
jns
push
cmc
cmp
xchg
and
lcall
inc
into
bound
je
jo
xor
out
sahf
lds
pushl
sbb
jmp
adc
js
int
push
xor
movsb
repnz
cmp
xor
or
xor
test
xchg
movsl
xchg
shll
out
scas
add
fidivs
outsb
push
jns
mov
sbb
fsubl
loop
lock
xchg
adc
mov
sbb
nop
sti
add
cld
sub
jne
rolb
movsb
mov
sbb
fisubrs
push
or
pushl
int3
and
push
and
jecxz
xchg
mov
add
test
ds
mov
fiadds
mov
std
fstpt
adc
dec
cmp
jl
es
jbe
xchg
mov
clc
lods
pushf
xchg
lds
pop
in
outsl
pop
nop
les
push
inc
mov
scas
pop
les
lret
and
int3
cmc
lcall
sbb
dec
insb
mov
je
inc
or
jne
rcrb
out
les
sub
shlb
jnp
gs
mov
lock
sbb
fs
clc
cltd
push
xchg
push
movsl
pop
cmpsb
ja
or
insb
or
pop
cmp
in
gs
xchg
or
ds
xor
testl
cmc
je
lock
mov
mov
fcmovu
dec
mov
dec
fisubrl
call
cmp
stos
repz
mov
mov
out
pop
add
sub
inc
ss
fwait
cmc
jle
insb
repz
jmp
mov
sub
rcrb
add
push
lahf
js
push
mov
outsl
cld
out
mov
daa
dec
xchg
insl
scas
xchg
testl
mov
xchg
repnz
sub
lods
clc
pop
iret
out
aam
das
inc
inc
xor
fsubs
and
jg
popf
jbe
and
cmp
xor
lods
out
iret
sti
cltd
sub
testb
dec
adc
popa
in
xchg
pop
pop
push
add
test
xchg
test
popa
and
sub
sbb
dec
nop
imul
neg
dec
lea
jecxz
cmpsl
test
xor
pop
dec
xor
pop
daa
int
mov
shll
and
in
or
pushf
das
push
mov
jecxz
loop
int
add
sbb
lcall
dec
test
add
jg
inc
or
fwait
aam
or
stos
fildl
clc
inc
cmp
int3
orl
out
ss
adc
dec
cli
outsl
popf
mov
movsb
subb
aaa
inc
movl
int3
jecxz
fwait
and
in
sbb
push
je
loop
inc
pop
add
aaa
dec
xor
imul
add
mov
fwait
dec
jmp
xchg
lock
fnsave
lods
repz
or
repz
pushw
into
sub
shlb
into
mov
jmp
lcall
les
or
fcoms
cmp
xor
test
les
in
test
dec
dec
jle
rorl
mov
jg
mov
sub
dec
cmpsb
jl
cli
jne
jbe
xchg
or
stc
sbb
push
fdivrp
dec
movsb
idivb
xor
ljmp
cmpsl
fldenv
pushf
push
xchg
insb
xchg
sbb
adc
repnz
adc
daa
fimuls
add
pop
inc
mov
je
call
les
push
dec
push
cmpsl
add
fldenv
mov
pushf
daa
aas
mov
push
push
dec
lahf
clc
xor
nopl
out
mov
inc
nop
mov
cli
inc
fwait
daa
push
in
std
lock
pop
inc
das
aas
and
inc
repz
adc
pop
shlb
mov
adc
add
jmp
xor
insb
sbb
lock
cmp
icebp
shlb
sub
mov
icebp
cmpsb
dec
push
adc
rorl
bound
pop
pop
fcmovne
push
add
ficompl
int3
sbb
xchg
jg
add
push
sbb
out
movsb
fmuls
and
mov
jns
es
sbb
dec
lahf
neg
fildl
lock
fsubl
mov
mov
add
lds
mov
call
dec
mov
sub
sti
lods
pop
js
std
pop
push
inc
enter
jge
pop
cmp
arpl
fbld
jg
decb
loopne
insb
shlb
cmpsl
or
xor
push
dec
test
lods
cmp
jge
adc
cli
mov
mov
in
jge
enter
push
rcrb
cmpsb
fimull
mov
scas
jle
pop
movzbl
ret
rcll
outsl
lock
sbb
cmpsb
adc
dec
add
in
xor
rcrb
cwtl
or
push
ss
add
nop
xor
sub
bound
push
cmp
xchg
insl
jbe
popa
mov
add
jl
cli
lret
jbe
dec
iret
and
and
cld
rolb
jno
out
and
dec
sub
ret
out
stos
push
mov
xor
stc
mov
jmp
mov
repz
push
xchg
shlb
lcall
add
add
cmpl
test
sub
push
aas
mov
push
and
lret
es
mov
leave
mov
dec
lret
and
cmp
adc
xor
movsl
sub
lods
pop
cltd
cwtl
jecxz
nop
and
or
fnstsw
dec
inc
adc
mov
sahf
aaa
push
push
xor
lret
test
dec
imul
mov
data16
ret
cld
fucomip
cmpsl
sbb
xor
xor
fwait
push
jg
cmp
scas
sub
push
outsb
push
sbb
push
nop
scas
popf
lock
pop
cmp
scas
out
mov
arpl
cld
jbe
shlb
pop
jmp
je
sub
mov
mov
les
and
sbb
int
imul
sahf
pop
mov
mov
adc
int3
dec
into
notb
daa
popa
push
fwait
sub
mov
push
in
mov
insl
xchg
call
stos
js
sub
adc
rorb
dec
cmc
push
inc
xchg
ljmp
lock
ss
mov
add
cmc
clc
pop
mov
and
xlat
leave
test
and
xorl
mov
push
inc
lock
lahf
pop
push
stos
call
and
sbb
cmp
inc
mov
xchg
adc
fwait
lret
mov
adc
mulb
xor
decl
adc
xchg
dec
dec
sbb
hlt
jno
mov
fwait
icebp
push
fldt
xchg
and
mov
popf
jge
push
jge
in
aam
xchg
divl
shll
push
and
popf
xchg
xor
lret
xchg
cs
leave
xor
test
ds
dec
sti
insl
xor
cli
jmp
arpl
mov
push
les
xchg
xlat
push
lods
dec
les
out
inc
divl
mov
jle
push
mov
mov
dec
arpl
int3
mov
aaa
shl
roll
mov
xor
icebp
mov
mov
jae
adc
jbe
push
fidivrs
push
cmpxchg
inc
cmpb
sahf
xchg
cltd
arpl
mov
hlt
scas
mov
mov
xor
add
add
popl
stc
cs
sbb
shll
mov
mov
insl
cmp
repz
cmpsl
inc
out
adc
out
dec
sahf
pop
aam
into
int3
in
out
and
inc
push
push
sub
stos
mov
xchg
mov
or
lahf
das
push
negb
fstp
mov
repz
mov
ds
cltd
or
cwtl
dec
popa
sti
cmp
cwtl
fsubrs
jg
pop
addr16
add
repz
xchg
jge
jns
cmp
push
push
mov
sarb
sub
mov
push
outsl
push
mov
xchg
jle
pop
cmp
jg
jo
adc
repnz
push
sbb
jno
cs
sub
loopne
cmpsb
jno
add
adc
in
xor
xlat
pop
dec
cwtl
mov
push
xchg
ficoml
adc
mov
inc
push
mov
sbb
sub
dec
aam
cltd
xlat
lfs
xorl
addl
mov
adc
lgs
aam
jl
shlb
sub
out
movsb
es
lret
adc
into
xor
push
lahf
fstl
insl
stos
rolb
jmp
adc
enter
mov
mov
rol
lret
hlt
movb
mov
xlat
shll
outsb
pop
popf
int
xor
nop
pop
cmc
std
adc
es
inc
jmp
mov
lahf
test
sahf
leave
fs
mov
mov
dec
pop
adcl
test
andl
pop
xor
hlt
adc
mov
bound
xchg
jmp
repz
cmp
popa
andb
cmc
stc
bound
repz
cmp
scas
or
push
and
cmp
inc
jg
ja
or
orl
mov
sarb
lret
push
gs
mov
and
inc
stos
cmp
push
andl
dec
jg
sub
popa
mov
not
int3
mov
loopne
xchg
fldl
ja
pop
pop
cmpb
stc
data16
popa
sbb
dec
imull
jb
or
mov
scas
negb
push
pop
mov
add
mov
fsubr
shlb
fs
xlat
lret
pop
xor
xchg
pop
dec
repz
mov
add
pusha
repnz
or
shll
mov
popf
push
sub
adc
jl
outsl
sub
test
dec
push
push
jae
cmc
xchg
push
scas
push
dec
xchg
jae
inc
mov
push
mov
xchg
repnz
sub
rol
ficoml
or
pop
lret
fwait
and
mov
lahf
out
fidivs
mov
fnsave
cld
xchg
arpl
sub
jae
jb
fnstsw
popf
inc
movsb
rclb
or
pop
lcall
out
xor
sbb
int3
sbb
cmp
sbb
outsl
sub
mov
das
ret
sbb
jbe
jecxz
inc
adc
mov
sub
icebp
pop
hlt
lcall
pusha
adc
imul
cmp
je
lret
xlat
add
movsl
aad
out
dec
std
popf
aam
mov
pushl
inc
mov
mov
js
les
jbe
mov
inc
lret
and
inc
jl
sbbl
lea
fwait
dec
into
or
call
xchg
adc
call
je
xchg
popa
mov
or
mov
ret
cwtl
xchg
mov
and
fidivrl
xor
sbb
mov
mov
scas
cmp
insl
loopne
xchg
ss
xchg
jne
in
push
xchg
cmp
std
mov
add
shl
push
cmpsl
test
and
mov
mov
std
cmc
flds
mov
inc
xor
test
dec
pop
fldt
push
pop
fadds
push
ljmp
das
pushf
scas
xor
push
pop
or
ja
pushf
mov
icebp
mov
js
cltd
jbe
pusha
mov
pop
mov
decb
inc
inc
or
pop
repnz
sbb
sti
and
pop
jo
mov
fmull
mov
sahf
movsl
je
push
aam
stc
fs
rorb
nop
mov
adc
in
movsb
aaa
dec
cmp
ja
insl
cmc
call
add
in
mov
xchg
pusha
add
fmuls
inc
xchg
lret
fcmovu
pop
ljmp
repnz
inc
aaa
xchg
adc
mov
imul
push
sti
pop
fs
hlt
loopne
mov
cmc
sub
pop
sub
ret
xchg
mov
push
dec
and
pushf
mov
jnp
imul
xor
test
or
mov
xor
cmp
xchg
jecxz
decb
aam
mov
sbb
jbe
popf
addr16
and
pop
clc
push
xchg
mov
in
mov
adc
mov
sti
hlt
or
sbb
jo
rolb
jge
test
jno
sub
mov
outsb
insl
mov
arpl
cltd
mov
push
lods
push
jnp
shlb
sbb
aad
xor
and
cmc
jne
stc
loope
bound
cwtl
xor
mov
je
push
push
sub
mov
shll
movsl
lahf
fistps
jae
push
pushf
jne
xor
data16
outsl
inc
addw
js
dec
jl
and
fisttpll
stos
pop
js
fldcw
int3
xor
mov
popf
cwtl
in
jl
fnstsw
xor
fwait
daa
pusha
int3
sti
dec
orb
popa
pop
clc
mov
or
movsb
lahf
lods
sbb
push
scas
fst
mov
mov
xchg
xchg
xchg
cmc
rcrb
jne
dec
gs
out
loope
repnz
test
add
enter
icebp
sub
mov
into
pop
push
jb
daa
mov
xor
mov
fcmovnb
fdivrl
popf
sbb
sbb
in
xchg
mov
lods
jns
cmc
fisttpl
loopne
test
jmp
jno
test
jg
mov
push
mov
scas
roll
jno
clc
clc
sbb
mov
out
bound
mov
sub
xor
ret
cmp
push
xor
and
imul
push
mov
movsl
dec
mov
pusha
inc
sbb
sbb
pop
mov
xchg
or
jmp
in
sti
mov
fisttpl
sbb
mov
mov
fdivrl
mov
sub
or
adc
test
sbb
add
das
shrb
data16
mov
mov
pop
jmp
dec
mov
ja
outsl
xor
mov
xchg
push
stos
test
mov
fisubs
and
sub
mov
add
dec
inc
sbb
sahf
pop
movsl
sub
xchg
enter
cmpsl
lock
adc
xor
mov
jb
mov
movsb
out
cld
lcall
out
xchg
addr16
cmp
add
out
pop
mov
mov
mov
xor
popf
inc
ljmp
and
lods
fs
or
hlt
repz
es
lahf
outsl
leave
insb
mov
cmp
enter
push
and
sub
mov
sbb
rcr
repz
and
mov
sub
rcll
mov
xor
jbe
call
pusha
lods
test
jp
push
mov
mov
xlat
sarb
pop
mov
outsb
inc
in
xor
adc
stc
test
dec
mov
xor
ds
adc
mov
ss
sub
inc
xchg
mov
mov
incb
loope
ss
lock
daa
aad
push
jmp
push
and
cld
cli
jo
add
pop
loope
jle
add
push
jg
pop
sbb
stc
lds
movsb
adc
add
arpl
loope
xor
in
aam
arpl
jge
imul
test
repnz
sub
add
cmp
int3
jmp
in
movsl
data16
xchg
in
sahf
jl
sbb
sub
fwait
test
dec
mov
popa
xor
xchg
sbb
stos
pop
or
sbb
cmp
pop
das
inc
mov
push
mov
mov
sbb
test
mov
das
mov
adc
cmp
fdiv
mov
bnd
inc
dec
dec
sbb
pop
imul
add
das
mov
insb
inc
xchg
jae
adc
das
inc
push
mov
call
and
ljmp
data16
sub
add
xchg
fnsave
push
shlb
adc
in
shrb
test
into
aas
pop
mov
push
adc
pop
test
sarb
adc
rolb
jmp
lahf
sub
pop
jle
dec
test
stos
pop
inc
xorb
mov
lret
xchg
mov
dec
std
lock
jo
dec
mov
sbb
jns
test
mov
add
ds
xchg
cwtl
movsl
inc
dec
scas
pop
jp
arpl
icebp
cmp
mov
mov
ss
push
inc
mov
aaa
stos
mov
add
dec
adc
jmp
xor
mov
stos
push
dec
fidivl
xor
push
adc
and
lret
sbbb
adc
lods
sbb
fcoml
clc
repz
dec
sub
and
push
inc
add
cmpsb
xchg
cwtl
or
int
push
push
sub
aaa
bound
and
sub
int
xor
pop
mov
pop
enter
loopne
rcrl
lret
popf
andl
xorb
push
pop
mov
in
call
imul
lahf
bound
jg
fists
dec
sub
and
mov
lahf
imul
push
sbb
repnz
cmpsl
test
push
imull
out
dec
nop
pop
xor
inc
add
pop
jg
pop
adc
and
shl
mov
lret
mov
fs
das
cmp
dec
xor
mov
int3
mov
into
js
mov
lds
and
ds
in
insb
mov
push
xor
leave
pop
or
cld
fcomps
inc
xor
sub
das
and
fstp
insl
xchg
popl
fdivrp
cli
out
lcall
jp
call
movsb
xlat
lods
mov
mov
add
fwait
mov
jno
adc
nop
mov
hlt
jp
ljmp
add
pop
loopne
in
iret
ret
sub
gs
popa
mov
xor
mov
pop
push
lea
mov
jle
push
mov
xchg
fwait
in
push
pop
mov
dec
pusha
test
in
inc
into
add
js
ret
adc
mov
mov
cmpsb
out
mov
mov
ljmp
mov
in
xor
cmpsb
mov
sub
dec
inc
jg
rorl
popf
iret
pop
jo
inc
mov
iret
in
push
aad
pop
repz
arpl
add
pop
pop
cli
testl
mov
js
xorb
pop
loopne
dec
push
cmp
or
idivl
fildl
sbb
add
sti
mov
sbb
xor
ds
pop
xor
icebp
call
fimull
pop
out
mov
cmp
dec
dec
mov
sbb
sti
enter
aaa
mov
sub
mov
ds
cmc
xor
dec
fidivl
enter
test
xchg
cwtl
ja
fstpl
xchg
mov
fcomp
test
mov
sbb
mov
pop
adc
pop
mov
fadds
std
lahf
test
inc
inc
mov
xchg
sbb
inc
adc
call
cmpsb
jae
imul
mov
jl
pop
shll
out
int
lcall
pop
mov
pop
fisubs
push
lea
mov
jno
inc
pop
enter
push
les
sti
and
push
loopne
mov
pop
mov
and
int3
mov
pop
aam
mov
insb
lahf
add
xor
add
jo
ljmp
pusha
cmpl
push
dec
adc
sub
or
fcomp
fs
dec
sahf
sbb
inc
mov
out
int3
clc
jns
inc
add
adc
roll
inc
mov
or
pop
push
enter
insl
cli
add
jnp
jno
pop
out
push
aaa
outsl
mov
loope
jno
mov
mov
je
adc
test
lods
xlat
sub
sbb
adc
aas
out
movhps
adc
jmp
dec
fdivrs
xchg
mov
loop
jp
arpl
dec
das
jg
add
push
mov
pusha
call
mov
fisubs
std
sbb
outsb
aaa
divb
sub
add
test
pop
inc
push
xchg
add
mov
push
cmpsb
enter
daa
aas
or
ror
mul
cmp
out
inc
inc
xor
jecxz
loop
popf
dec
xchg
mov
or
xchg
xchg
pop
mov
ret
inc
inc
shl
jp
inc
mov
ljmp
jne
sbb
pop
arpl
inc
xchg
js
jle
add
repz
in
sbb
sbb
or
pop
jle
inc
imul
aad
aaa
jmp
sbb
scas
and
adc
or
add
jmp
jmp
dec
dec
mov
jns
adc
cltd
push
or
imul
sub
inc
cli
cld
sbb
outsl
sub
sub
mov
dec
mov
int3
lcall
xor
push
test
adc
lcall
mov
push
daa
fstpl
push
mov
pushl
inc
cwtl
mov
push
pop
pusha
daa
and
pusha
lods
setns
cmpsl
xchg
mov
cmpsl
out
sub
inc
outsb
mov
bound
mov
jno
popf
xor
adc
aaa
jecxz
adc
push
lods
stos
sub
call
and
shlb
outsl
adc
mov
in
jle
xchg
aas
es
enter
in
xchg
scas
mov
aad
adc
mov
lcall
adc
xchg
sbb
pop
scas
mov
in
addr16
mov
pop
int
mov
out
mov
jg
outsl
pop
push
lods
mov
ret
cmpsl
add
jnp
sbb
sbb
jns
push
push
scas
daa
mov
xchg
and
mov
mov
sbb
jns
inc
stc
xchg
ljmp
pop
out
inc
inc
frstor
push
test
sub
sbb
mov
shll
pop
nop
pop
insb
mov
sbb
dec
jb
arpl
loope
mov
in
mov
mov
dec
sbb
sub
sahf
mov
test
adc
in
sub
jae
fldcw
shlb
stc
xor
aas
sti
sub
push
fnstcw
push
test
mov
sti
orl
or
jge
int3
inc
cmp
adc
fstpt
push
into
cwtl
mov
test
xor
sbb
das
xor
cmpsl
stos
and
fimuls
js
add
dec
xchg
xchg
jae
fs
loop
push
stc
add
mov
das
daa
push
in
jle
enter
jl
sbb
or
mov
dec
jne
mov
scas
push
clc
mov
in
and
das
push
sbb
into
jg
mov
sub
fsubs
mov
jg
dec
shrb
scas
dec
mov
add
add
test
adc
sbb
pop
mov
xor
sbb
or
scas
adc
cltd
js
mov
cmp
pushf
lret
cmc
push
xlat
dec
xchg
sub
outsl
inc
sub
xchg
lods
inc
push
jae
jne
mov
insb
jge
out
cmc
dec
jb
mov
ja
dec
pop
loopne
cmc
cmpsb
lods
ret
sbb
inc
mov
jb
mov
sub
enter
xor
or
mov
cmpb
mov
lock
out
imul
sarb
movsb
pop
push
mov
cmpsb
jns
hlt
test
pop
mov
push
pusha
in
cli
sti
mov
mov
add
aam
adc
fwait
loopne
push
xor
dec
fwait
mov
lds
adcl
repnz
pop
and
out
jno
jno
movsl
shlb
jno
cmp
aad
dec
loope
fistl
add
loope
mov
clc
cltd
insb
mov
xlat
sbb
adc
pop
aas
fisttpll
pop
int
pop
test
aam
xor
fwait
adc
in
ja
fistl
or
mov
rorl
and
sti
xlat
aas
rclb
jmp
js
mov
pop
jb
loop
xor
jb
or
lea
sarl
adc
insb
mov
jnp
test
push
jno
lods
and
or
mov
xor
push
andb
cs
fidivrl
pusha
cmpsb
test
xor
mov
jle
aaa
outsb
jno
push
jle
test
dec
pop
mov
add
ret
data16
mov
js
sub
push
adc
scas
int3
scas
jb
pop
xor
and
xchg
mov
pop
sbb
xor
hlt
mov
arpl
sub
inc
and
xchg
aad
sub
xlat
push
je
scas
sub
std
mov
dec
mov
test
jge
inc
push
stos
xchg
int
mov
cmc
loop
loop
xor
xor
jo
int
ljmp
subb
and
jp
mov
cmpsb
or
cli
jbe
push
push
fwait
jl
and
dec
mov
mov
adc
pop
jmp
lret
lods
xchg
mov
scas
data16
fsts
sbb
aam
xor
lcall
cmp
sub
push
sub
fisubrl
jb
jbe
fistpl
std
mov
xchg
cld
test
dec
mov
test
bound
and
adc
add
imul
int3
xchg
and
xchg
xchg
popa
outsb
std
add
mov
dec
add
lcall
rcll
insb
mov
push
and
xchg
in
or
sbb
jp
lods
cs
outsb
and
sub
insb
pop
call
xor
das
in
add
scas
out
mov
test
sbb
pusha
test
notb
xor
push
inc
int
fsubrs
faddp
stos
out
jbe
xor
xchg
cwtl
movsl
movsl
sub
push
out
cmp
sub
mov
and
mov
aam
aaa
mov
lret
or
dec
ljmp
and
push
outsl
gs
or
sbb
jne
pop
arpl
mov
jnp
jae
and
sub
mov
loope
pushf
roll
sub
in
mov
cwtl
mov
into
pop
js
fdivrs
mov
je
and
outsl
stc
mov
ret
push
xchg
fadds
inc
and
mov
popf
ljmp
sub
xor
data16
push
xchg
xor
jecxz
pop
add
push
sub
xchg
mov
in
jle
sbb
xor
lds
testb
cmp
lods
mov
repnz
mov
lret
sub
dec
xchg
xchg
ja
mov
or
lret
adc
testb
outsl
repnz
cli
loop
and
ret
sub
adc
and
cmp
mov
es
xor
mov
in
dec
mov
xchg
test
out
das
jp
test
push
mov
pop
in
stos
or
xor
daa
nop
or
mov
and
xchg
test
sub
xchg
fmul
cltd
sbb
leave
push
imul
cmp
inc
add
fs
fbld
clc
pushf
enter
lret
mov
clc
ss
cmp
and
adc
cmp
addr16
pop
daa
xor
ret
adc
add
fmul
mov
cmpsb
jmp
xor
adc
aad
mov
jecxz
stos
and
dec
push
insb
sub
sbb
fidivrl
pop
add
dec
lods
popf
inc
and
gs
sub
and
in
add
xchg
or
es
mov
data16
mov
cli
sbb
popf
pop
test
adc
pop
imull
outsl
and
jne
inc
add
ret
sub
mov
push
mov
xor
xor
jo
jle
jmp
or
imul
cmpsl
or
sub
or
cwtl
adc
cli
inc
add
nop
jg
jp
dec
arpl
push
xchg
ljmp
mov
movsl
jnp
mov
scas
xchg
mov
and
lds
stos
mov
or
lods
add
add
je
std
add
mov
insl
test
and
pop
dec
divb
sbb
mov
dec
fimull
mov
lock
movsl
mov
mov
xor
xor
cmpsb
fisttpll
pop
imul
mov
pop
loope
sbb
aas
push
jnp
push
mov
mov
dec
popa
or
and
out
jge
and
gs
mov
cs
jnp
outsb
fsubrl
mov
mov
call
mov
ds
xor
test
pop
jns
mov
rclb
sar
out
mov
jmp
dec
popf
es
sbb
sbb
out
loop
add
cmc
mov
cmp
aad
mov
mov
dec
rcl
loope
out
ljmp
aaa
sub
dec
jge
cmc
mov
adc
lea
neg
stos
fs
dec
pop
xchg
cmpb
mov
xorb
fwait
sbb
xchg
lret
dec
cmp
mov
lahf
cmpsl
into
test
push
stos
out
fs
shl
sub
out
sub
mov
mov
jnp
ret
sbb
push
neg
test
dec
lret
mov
dec
leave
lock
pop
sub
bound
cli
cmp
enter
notl
add
pusha
imul
repz
inc
jno
ret
stos
lea
imul
out
loopne
or
repz
sub
inc
icebp
mov
mov
jg
inc
loop
jb
jg
sbb
fsubrl
mov
xor
jge
mov
dec
incl
cmp
mov
stc
cmp
mov
data16
sub
sub
in
rcr
adc
cmp
mov
mov
arpl
xor
push
repz
stos
pop
push
sub
jb
mov
stos
add
in
add
add
xchg
sbb
adc
es
in
sub
inc
pusha
cmp
add
add
cwtl
cmp
inc
xorl
jne
jle
out
cli
lds
insb
cmpsl
xchg
lods
inc
jg
xchg
cmp
push
addl
out
push
mov
int3
fwait
and
sbb
push
cld
xchg
inc
push
sbb
sbb
add
inc
in
jmp
jb
mov
or
adc
inc
cmpsb
sti
das
adc
jno
movsb
lea
je
orps
cli
push
addr16
adc
shrb
lods
xchg
or
imul
add
je
cmpsb
mov
roll
in
xor
or
mov
arpl
xchg
jb
outsb
movsl
jg
cmpsb
lret
jb
push
jp
sub
push
mov
adc
dec
adc
add
add
test
inc
jp
cmp
lret
into
mov
push
pop
push
cmp
imull
test
and
sub
mov
pushf
jbe
jp
push
mov
mov
cmp
mov
cmpl
jmp
mov
fbld
jb
aaa
sub
mov
or
inc
into
push
mov
in
and
popa
sub
addl
cmpsb
jae
mov
fldl
xchg
cmp
mov
sub
cmp
pusha
js
popf
pmullw
mov
sbb
and
ret
sub
adcl
out
pop
gs
xchg
scas
mov
imul
es
mov
nop
jae
je
je
xor
lods
xor
xor
sbb
test
xchg
imul
fists
dec
aam
and
std
sbb
mov
icebp
cmp
out
insl
arpl
loopne
mov
out
xor
lods
fildll
out
mov
adc
jnp
or
gs
xor
cmp
out
sti
scas
inc
lahf
pushf
or
jle
mov
lret
movsb
outsl
add
sar
lds
dec
sub
fwait
dec
inc
jb
fs
push
neg
out
xor
ficomps
dec
pop
sub
inc
pop
mov
ror
mov
push
mov
cltd
sub
jno
push
jne
fistl
leave
cmp
mov
mov
push
xor
xchg
and
push
filds
das
arpl
pop
stos
or
test
xchg
addr16
mov
js
loope
mov
insb
mov
jns
fiaddl
xchg
xor
xor
ljmp
inc
lret
cmp
orb
mov
cmpsl
pop
adc
fcomp
push
pop
mov
push
sbb
and
test
cli
loop
iret
cli
arpl
lea
mov
lds
dec
jns
push
or
ljmp
jo
push
xchg
fisubl
jge
movsl
nop
clc
or
push
push
push
push
shr
push
adcl
bndldx
and
popa
bound
xchg
cmpsb
notl
mov
adc
gs
add
push
mov
xor
sbb
scas
int
xchg
iret
push
fwait
push
xor
inc
test
jg
and
pop
scas
and
xor
cmp
cld
int3
mov
push
popa
cmp
loopne
in
pop
ss
mov
dec
sub
and
and
imul
inc
aas
in
mov
movsl
xchg
inc
jbe
sbb
shlb
inc
loop
sbb
test
fisttpll
pushf
ds
arpl
adc
sbb
das
out
inc
sbb
dec
jne
ffree
lods
sbb
lret
push
les
jmp
repz
add
sarb
bound
mov
sbb
or
mov
add
call
sbb
mov
cmp
push
out
xor
adc
cmp
mov
jle
imul
inc
jo
inc
je
pop
xor
daa
jl
and
addr16
movsl
aad
cmp
push
jl
jne
push
cmpsb
sbb
mov
int
or
cmp
pop
sahf
pop
xchg
jle
int
insb
cmpsl
jl
cmp
xor
pop
repnz
xlat
mov
ds
shll
pop
iret
mov
cli
nop
cltd
jp
lea
mov
inc
jp
addr16
aas
mov
outsb
insb
cmp
lock
stc
fidivrs
add
xor
arpl
jo
cld
sub
aad
arpl
out
jp
jl
test
adc
jecxz
pop
cmp
gs
rclb
and
negb
xrelease
and
xlat
inc
cmp
or
add
sahf
test
test
test
sarl
scas
fidivrs
idiv
enter
mov
jns
xchg
test
mov
fists
mov
out
and
and
addl
add
arpl
jle
filds
jecxz
jae
imul
xchg
stos
fs
loopne
cmpsl
push
mov
test
cltd
scas
push
jb
jne
jle
imul
sub
xchg
js
stos
hlt
sti
in
loopne
fistpll
pop
lock
inc
xchg
daa
iret
pop
enter
inc
mov
pop
pusha
and
sub
and
dec
pop
pop
dec
cmp
into
xchg
outsb
xchg
cmp
xchg
xchg
enter
dec
mov
or
test
jg
test
and
pop
or
pop
sub
jbe
orl
dec
jb
xlat
xchg
testl
push
sub
mov
pop
lds
pop
out
imul
sub
adcl
mov
mov
push
and
xchg
or
out
hlt
or
iret
rcr
jnp
xchg
xchg
sbb
lods
movsl
mov
mov
or
fucomp
and
jno
test
jns
dec
std
loop
add
mov
and
icebp
in
setbe
cmc
outsb
jecxz
sub
shl
cmp
push
inc
outsl
and
nop
jnp
mov
es
in
sbb
add
push
lods
jns
rclb
jo
mov
jns
mov
cs
jl
mov
pop
inc
dec
add
fcoms
add
stc
jno
push
lcall
pop
xlat
subl
adc
dec
test
jle
cld
bound
dec
gs
mov
and
outsl
in
out
psrlq
sti
or
lea
and
sti
dec
mov
pop
sbb
push
inc
cmc
fs
xchg
sahf
int3
mov
shlb
cmpsl
adc
sub
jae
cmp
push
stos
jne
jle
jg
leave
inc
jge
out
fst
push
xchg
jae
js
repnz
mov
pushf
lods
int
pop
test
stos
enter
daa
mov
icebp
inc
stc
cltd
loop
cmpsb
nop
adc
inc
bound
and
movsb
mov
insl
xchg
mov
scas
sbb
mov
dec
mov
pop
sub
mov
out
pushf
out
push
scas
cli
sbb
cmp
jl
xchg
jo
jg
shrb
mov
pop
sbb
dec
xor
ja
std
mov
aam
test
add
adc
mov
mov
rorb
andl
cmp
lret
mov
outsl
jl
dec
pop
mov
test
cmp
ficoms
lcall
cld
pusha
adc
mov
jle
dec
fcmovnbe
popf
cmpsb
xor
int
inc
adc
lea
mov
mov
add
jmp
cs
lret
mov
sbb
push
push
mov
in
jmp
xchg
mov
mov
mov
js
or
jae
shrb
je
insb
push
mov
xchg
cmp
jecxz
lret
test
pop
fwait
adc
mov
cmp
sbb
pop
and
icebp
test
cmpsl
push
lahf
or
mov
jmp
xor
fmuls
sbb
adc
and
test
mov
fwait
jp
add
insb
xor
mov
or
adc
pop
mov
cltd
cmc
inc
push
pop
inc
lods
popa
pop
add
mov
push
lods
adc
jg
dec
pop
repnz
sub
jnp
mov
leave
mov
lds
lds
or
std
and
dec
xor
movsl
rcl
jbe
mov
or
adc
and
out
jns
andb
clc
mov
push
stos
dec
cmp
xchg
dec
fistps
leave
icebp
mov
add
inc
pop
mov
scas
dec
inc
sbb
js
pop
xorl
pop
lcall
inc
jb
add
mov
mov
decb
mov
and
sbb
pop
scas
ret
insl
subb
sbb
push
xchg
push
pop
cmp
out
rol
cmp
xorl
test
inc
mov
movsb
add
lock
push
and
sbb
into
xchg
mov
or
insl
fs
fsub
leave
push
cmp
lcall
andb
in
xchg
adc
xchg
jb
push
mov
mov
leave
movsl
pusha
sbb
std
lds
add
and
in
mov
jae
mov
orl
test
ja
lds
lcall
test
mov
jecxz
sbbl
jne
xor
scas
scas
mov
cs
inc
out
jg
jle
mov
std
xchg
lock
cltd
cmc
pop
mov
and
mov
aaa
cmpsb
out
push
lret
dec
add
dec
xchg
loopne
pop
fwait
rclb
repnz
mov
sub
jb
in
outsb
shl
sub
jb
enter
stos
pop
jmp
nop
or
jmp
sahf
add
je
daa
add
enter
jecxz
or
or
repnz
icebp
or
scas
sub
inc
adc
or
rorb
xchg
repnz
dec
popa
inc
lret
lds
cmp
lods
fs
dec
lods
in
nop
sub
cltd
das
fcoml
mov
ds
jo
scas
xchg
sbb
sbb
loopne
or
xchg
xor
sbb
cmpsl
clc
lret
cld
xchg
mov
adc
jmp
cmp
mov
test
xchg
inc
out
cld
xchg
adc
das
pop
push
add
outsb
in
xor
push
and
jg
fdivrl
and
inc
push
lea
and
ss
pop
inc
sub
push
and
mov
in
push
popf
mov
loopne
xchg
mov
cwtl
xor
into
add
imulb
jo
mov
cmp
mov
cwtl
mov
cld
dec
ja
pushf
push
sub
nop
stos
pop
cmp
outsb
adc
int
cmc
adc
add
jb
arpl
jne
and
xchg
rcrb
std
fdivs
sarl
lds
mov
test
dec
stos
and
sub
mov
sbb
jb
lret
sbb
mov
les
sub
addl
and
popf
or
inc
and
sbb
hlt
xor
insb
out
loope
and
xor
pop
xor
sbb
in
jno
and
lret
out
dec
sub
fistpll
dec
das
dec
cmp
out
push
mov
cli
push
jle
scas
je
ja
sbb
fsub
cmpsl
addr16
test
inc
dec
mov
movsb
and
fimull
movsl
mov
into
jnp
imul
and
dec
mov
pop
xchg
push
in
cmp
push
jnp
push
and
push
les
mov
push
dec
xor
push
mov
jl
std
js
adc
lea
cltd
push
test
ret
sbb
xor
xchg
rcll
out
pop
sar
sahf
scas
mov
cmpsb
and
add
out
push
cmp
adcb
sub
xchg
outsl
inc
or
mov
lcall
cmp
xchg
aaa
out
ljmp
adc
mov
jp
cmp
incl
movsb
hlt
jp
and
sub
dec
ss
idivl
std
pop
idiv
fwait
pop
xchg
insl
mov
and
leave
popa
push
ds
scas
inc
or
xchg
lds
out
xorl
inc
xor
mov
daa
fnstcw
aad
cld
mov
loop
inc
std
mov
fldcw
mov
xor
xchg
sbb
outsb
scas
shlb
fidivrl
test
or
mov
adc
and
and
mov
jle
mov
mov
imul
mov
jecxz
xorb
ss
fcoms
fcomps
sbb
push
inc
pop
ss
jns
mov
dec
pop
push
jae
mov
xor
xchg
jmp
cmpsb
push
test
mov
adc
fincstp
push
pusha
cld
mov
fimuls
aaa
mov
jo
ss
sti
popa
aas
in
push
add
enter
fadds
ljmp
push
sub
ds
jg
rcll
and
and
xor
fsubs
or
inc
aas
mov
dec
xor
pop
mov
fwait
pop
sbb
dec
mov
pop
fistl
lods
call
test
scas
sti
mov
add
xor
pop
cmp
fs
cmp
ds
aam
aaa
jns
cmpl
iret
push
add
sbb
aam
jmp
xchg
cmpsb
mov
xor
push
jmp
mov
add
pop
inc
cwtl
or
cmp
xchg
adc
xchg
in
out
imul
xchg
imul
push
push
pop
je
sub
int
mov
cmp
clc
cmp
and
fstl
mov
xor
pushf
xchg
addr16
mov
aaa
xorl
and
cmp
outsl
repz
or
cmpsl
pop
adc
les
mov
std
cmp
call
call
sbb
jl
lock
int
push
sbb
add
lahf
xchg
jne
in
push
outsl
pushf
lret
sahf
inc
subb
cs
sbb
in
and
xchg
aas
mov
and
jns
sbb
addr16
mov
pop
jp
inc
int3
cmp
cmp
mov
xor
push
xchg
lods
cmc
adc
out
xchg
or
pop
in
test
pushl
mov
movsb
jae
add
pusha
push
int3
inc
pop
adcb
mov
in
cmp
decb
out
stos
enter
test
jb
mov
sti
pop
sarl
jne
adc
stos
pop
adcl
xchg
xlat
sti
addr16
rcrl
js
repz
inc
mov
push
mov
push
inc
dec
sti
mov
or
inc
pushl
ret
mov
mov
dec
xor
ret
mov
dec
pop
insl
push
subl
jge
inc
push
add
jb
lcall
pop
cltd
das
xor
test
mov
bound
jnp
addr16
cmp
dec
loop
jae
mov
negl
xchg
lods
push
fwait
dec
inc
jmp
pop
and
imul
sti
movsl
negb
mov
int
aas
popa
ret
ljmp
or
repnz
lds
fisubrs
jl
fimuls
pop
insl
sub
imul
dec
fdivs
add
daa
xchg
scas
scas
aas
fldt
inc
into
fstpl
mov
inc
loopne
mov
outsb
int3
xchg
lret
es
sub
rcrl
fwait
xchg
mov
pop
sub
dec
push
andl
movsb
repnz
cmpsl
lret
sbb
in
push
pushl
gs
jp
mov
les
mov
popa
dec
mov
popf
popf
decb
sub
jmp
push
aam
xchg
hlt
rorb
xchg
dec
cmp
call
cmp
testb
adc
loope
shlb
mov
mov
sarb
pop
movsb
jne
mov
cmp
jno
jb
andl
mov
pop
insb
adc
mov
ret
mov
mov
pop
jbe
jo
sbb
movsb
pop
mov
jecxz
xchg
cmp
shl
mov
add
daa
test
movsb
pop
fisubs
vmulsd
xchg
stos
clc
lea
push
mov
xchg
xor
das
or
test
in
pop
repnz
pusha
repnz
ficomps
loop
jmp
jnp
xchg
jno
mov
arpl
shl
lds
pushf
adc
cs
and
mov
icebp
fcomps
sub
int
jne
outsb
push
lret
outsl
ja
int3
mov
sbb
xor
push
jecxz
or
sbbb
mov
sarb
dec
das
sti
js
popf
push
sbb
push
das
jo
and
lea
and
push
and
mov
fstps
fcoms
xorb
pop
stc
ret
mov
mov
cmp
jnp
mov
inc
pop
xorb
or
push
mov
jbe
xor
popa
enter
push
jecxz
inc
cs
aam
hlt
add
and
stos
fwait
lret
push
int
add
lea
cmpl
cmpsb
hlt
xchg
std
xor
pop
jl
dec
mov
lods
dec
pop
adc
and
fwait
add
js
mov
sub
incb
mov
mov
dec
jl
or
sub
movsl
ljmp
out
nop
sbb
mov
xchg
xlat
pop
lock
in
fnclex
ja
je
pop
movsl
and
aaa
cli
lahf
add
pop
lods
loop
in
mov
adc
cli
inc
in
pop
fld
dec
jb
loope
cmp
pop
dec
js
push
pop
sbb
xchg
lret
pop
sar
inc
cmp
leave
ds
mov
and
subl
push
jle
add
movsl
js
push
mov
stos
test
daa
xor
mov
in
jg
add
scas
sti
jmp
push
into
xchg
nop
adc
aas
dec
ret
imul
lret
inc
cltd
mov
or
mov
jl
or
pop
mov
mov
pushf
pop
lret
notl
aad
sbb
incl
jmp
mov
cmp
mov
mov
adc
mov
sarl
loope
ret
mov
mov
and
shrl
aam
push
imul
push
xchg
sbb
les
notb
push
js
jmp
int
pusha
jno
and
jne
pop
lea
fiaddl
imul
sti
pushl
and
pop
jo
xor
les
lds
cmp
or
jae
push
mov
jp
push
mov
test
adc
int
sub
mov
and
sub
mov
lds
imul
shrl
ds
stos
ret
cmp
test
and
xchg
bound
xor
sti
push
jb
sub
stc
mov
lods
ljmp
dec
ror
sub
add
xchg
mov
aaa
lods
iret
pushl
jp
inc
shrl
fwait
jb
mov
and
mov
sub
inc
and
sbb
mov
push
and
inc
mov
ret
jo
add
roll
fwait
addr16
ficomps
xchg
icebp
test
pop
idivb
aad
test
dec
roll
sub
aad
pusha
gs
imul
stc
cli
je
sub
fistl
push
faddl
xchg
pop
dec
sub
scas
mov
ss
xchg
js
daa
subl
mov
push
stos
adc
mov
mov
pop
lods
inc
sub
xor
cmpsl
aaa
addb
xor
stos
les
fcmovnu
inc
dec
inc
out
popf
iret
ss
or
push
pushl
in
mov
xor
adc
in
out
icebp
aaa
stos
pop
out
out
sbb
sahf
add
inc
xchg
lcall
adc
xchg
adc
push
aaa
push
push
leave
xor
jg
imul
pop
and
neg
mov
std
fstpt
pusha
mov
ret
aad
mov
mov
mov
dec
xchg
inc
or
addr16
pop
and
stc
sbb
xchg
xchg
xor
mov
loopne
jne
loop
mov
xor
sbb
gs
fdiv
jmp
sbb
adc
pop
dec
bound
lret
dec
pop
xor
bound
inc
and
lds
mov
mov
push
jp
dec
insl
scas
pushf
dec
sbb
scas
push
xchg
out
cmp
std
push
jbe
fwait
push
cmpb
sbb
inc
xor
lret
xchg
rcrl
aam
adc
cmp
mov
pop
fwait
sbb
int
jp
xchg
mov
inc
fadd
and
or
inc
inc
or
pop
mov
mov
rorl
divl
fs
xor
fcoml
adc
mov
add
jmp
xor
xchg
xor
mov
xchg
mov
rcll
push
sbb
sub
mov
addr16
mov
fidivl
pop
inc
ss
ficoml
sub
mov
pop
aas
jnp
lock
xchg
ja
mov
lea
xchg
inc
sub
test
insb
mov
popa
push
jae
nop
xor
inc
dec
add
pop
mov
mov
or
push
ljmp
cmp
xor
pop
xlat
xchg
je
pop
cmp
cmpsl
push
inc
dec
lds
xor
adc
bound
movl
mov
pop
or
lret
add
in
test
jno
inc
push
adc
loop
mov
push
push
dec
or
xlat
dec
adc
in
sub
cld
mov
dec
shll
mov
stos
xor
addr16
loopne
push
inc
pop
push
icebp
nop
lock
or
pushf
adc
clc
jecxz
sti
xchg
es
cmpsb
push
icebp
or
push
addr16
leave
jg
outsb
cmp
and
sub
jp
dec
imul
and
test
repz
stc
ret
movsl
add
mov
les
add
and
ret
das
mov
jle
ret
shll
lret
inc
sub
lds
add
push
mov
pop
int3
xchg
sub
clc
pop
mov
push
or
xchg
icebp
lret
jo
das
mov
icebp
xchg
or
loopne
sbb
imul
sbb
nop
mov
jge
pop
mov
ret
cmp
repnz
inc
inc
adc
lods
cmc
xchg
hlt
mov
cltd
lods
fst
cs
sub
sub
insb
cwtl
cmc
ja
arpl
sbb
ss
push
jnp
mov
data16
inc
data16
adc
inc
or
jno
sub
fildll
adc
into
js
sub
jae
jle
add
test
in
lock
clc
cmp
mov
mov
sub
inc
add
or
xor
bound
fnstenv
das
imul
sarl
cmp
dec
outsb
jl
and
jg
mov
or
mov
aad
add
jecxz
cmp
cmp
mov
lea
adc
call
fdivrs
pop
lret
mov
outsb
push
pop
test
jmp
dec
dec
loop
dec
divb
push
nop
jge
movsb
or
xchg
cmp
cwtl
mov
daa
test
les
aam
mov
bound
jl,pn
xchg
or
sbb
jmp
push
push
movsl
sbb
leave
mov
sbb
divb
pop
inc
outsl
push
jmp
js
cmp
xchg
push
mov
xchg
aad
mov
mov
pop
mov
rcll
lcall
dec
mov
dec
ja
sub
fldenv
dec
and
and
or
push
repz
cli
mov
xchg
js
inc
inc
and
les
cwtl
mov
add
cmp
cld
dec
dec
xchg
dec
adc
cmpb
fwait
test
daa
in
add
movsl
popa
xorl
addl
mov
fs
imul
sub
xchg
ljmp
or
sbb
jnp
push
cmc
push
ret
addr16
mov
test
cmc
pop
adc
lcall
lods
jno
jp
mov
jmp
inc
and
repz
ja
lcall
daa
mov
popl
jge
dec
xchg
mov
and
xor
mov
dec
loopne
pop
je
cwtl
inc
mov
push
sub
push
mov
movsl
imul
mov
mov
xchg
aad
fiaddl
pop
pop
inc
adc
inc
cmp
sahf
cmc
xchg
repnz
push
rcll
cmpsl
out
pop
lahf
jb
push
sub
inc
pop
hlt
pusha
sbb
sub
inc
inc
pop
pop
xchg
jmp
cmp
push
jecxz
pop
leave
mov
jl
add
ficoml
icebp
fisubl
jno
cs
ficoms
adc
cmp
add
xchg
jl
mov
sub
push
cmp
dec
add
xor
add
xor
lahf
xor
sbb
lock
js
les
iret
push
push
outsl
notl
shrl
xor
cmp
test
sub
ss
insl
xchg
pop
mov
xchg
jg
push
jle
test
inc
stc
mov
pusha
sub
jl
cmpsl
xchg
mov
int
xchg
outsl
mov
lods
xor
inc
and
pslld
stos
sbb
mov
mov
out
cmc
jg
sbb
scas
je
mov
call
cmp
in
loope
and
inc
pop
pusha
xchg
push
mov
icebp
and
xlat
cmp
add
cltd
stos
sbb
xchg
add
push
mov
rol
mov
pop
out
sbb
iret
xor
aad
mov
cmp
or
add
stos
mov
dec
jecxz
inc
roll
fisubl
inc
sahf
add
rcrl
cmp
add
pop
not
enter
mov
push
push
cld
dec
scas
push
sbb
ds
add
cwtl
fsubr
add
mov
fnstsw
mov
jbe
and
and
fisubrl
fbld
shlb
jle
sbb
in
mov
or
push
mov
mov
jnp
sbb
sbb
inc
scas
in
dec
pop
data16
cmp
xchg
bound
jge
fdivrs
jb
mov
loopne
repz
das
inc
lahf
inc
sbb
pop
jo
sbb
dec
in
add
xor
pop
push
adc
aad
jb
in
cmp
nop
in
push
in
adc
cmpsl
sbb
insl
cmc
dec
xchg
sbb
pop
out
lcall
gs
fsubr
ds
xchg
sub
addr16
js
xchg
add
inc
outsb
jb
orl
or
fistpl
cli
sbb
push
push
clc
fs
hlt
mov
sub
in
push
insb
dec
lods
mov
scas
aas
leave
adc
mov
fwait
adc
addr16
aad
jp
inc
insl
jo
xchg
inc
mov
adc
out
sbb
ret
test
cwtl
jb
pop
inc
push
mov
cmp
outsb
fstl
repnz
fnstcw
or
cmp
dec
in
cld
pop
fs
rcrb
pop
inc
loope
and
in
xchg
test
gs
js
adc
insl
notl
xor
push
inc
adcb
out
outsl
cld
cmc
mov
test
jb
jne
mov
push
dec
xchg
mov
jmp
jge
jno
push
cmp
add
dec
add
adc
sub
mov
pusha
outsl
xchg
fnstsw
xchg
mov
out
mov
cmp
and
cmpsb
xchg
and
lret
test
cmp
clc
mov
pop
and
adc
mov
dec
push
aam
pop
js
push
div
add
testl
inc
repz
lahf
or
mov
jb
xchg
sub
ds
xor
adc
aaa
in
cwtl
jo
jp
jae
adc
jg
mov
imul
pop
je
sub
pop
xor
insl
mulb
cld
cmp
dec
xor
out
dec
push
addr16
adc
int
mov
sub
mov
fdivrl
inc
hlt
je
ljmp
xor
mov
fs
lods
or
imul
repz
jae
mov
fldenv
movsb
xchg
mov
adc
into
jb
leave
and
lcall
data16
stos
inc
sub
fstl
ja
addl
mov
ljmp
mov
push
sarl
mov
and
adc
pminsw
fcomps
sarb
jns
push
pop
jp
mov
adc
sbb
or
inc
mov
mov
loop
push
jns
stos
mov
push
ficoms
jo
pop
sbb
cmp
push
jle
or
dec
pop
fildl
aaa
jae
in
cmp
dec
push
dec
push
cmpsb
xor
cmpsl
pop
and
jmp
mov
enter
jmp
cmpsb
shl
adc
and
pop
or
push
shrb
in
push
jge
cmpsl
aaa
rclb
xchg
pop
push
and
bound
aam
jo
leave
cmp
mov
push
lret
mov
cmpb
shrb
or
scas
xchg
jns
std
sahf
mov
fimull
add
jb
shll
sbb
aam
test
and
xrelease
pusha
out
fldenv
sbb
pop
xor
mov
lea
push
mov
sahf
or
ficoml
or
xor
sub
ret
adc
push
push
dec
adcl
sbb
and
lods
les
call
cwtl
push
sub
addr16
shl
test
jno
sbb
cmpl
jmp
cmp
jmp
loope
inc
mov
xor
inc
fucomp
addl
shl
adc
mov
in
cmpsb
push
insb
test
fdivl
sbb
add
jns
add
and
mov
or
mov
xchg
or
enter
addr16
ret
xchg
mov
mov
sub
test
leave
pop
inc
movsb
mov
inc
pop
stos
sub
or
dec
mov
loop
mov
cld
faddp
cwtl
and
shlb
sub
dec
mov
add
test
ss
adc
lock
out
sbb
call
rorb
jecxz
stos
push
dec
inc
clc
faddp
or
ja
add
inc
jge
push
fs
sub
mov
pop
add
arpl
mov
jbe
jmp
jp
adc
inc
fwait
mov
movsb
dec
insl
ja
lea
leave
add
cmp
or
jnp
mov
add
int
add
xor
sbb
jnp
mov
mov
push
pushf
mov
xor
lods
push
mov
inc
mov
test
xor
std
cmpl
or
divb
mov
dec
gs
daa
arpl
cmp
jecxz
push
stos
mov
fcomps
js
popa
pop
out
cld
or
mul
adc
push
les
adc
mov
aaa
mov
popa
cli
mov
idiv
sub
stos
adc
ffreep
mov
inc
xchg
gs
int3
dec
fldenv
dec
fnsave
xor
ud1
pop
and
rorb
xchg
pop
pop
lahf
push
cmpsl
sub
mov
jecxz
push
stc
pop
pop
sahf
filds
adc
les
lods
testb
xor
push
movsb
mov
sub
xor
filds
pop
xchg
dec
adc
pop
loop
cmp
mov
jge
lock
jo
push
jecxz
push
lahf
inc
shll
fwait
xor
push
sub
out
ja
mov
aam
or
or
and
test
jo
int3
inc
rcrl
xchg
xor
or
inc
daa
into
imul
ret
push
pop
movsl
iret
xchg
popa
cltd
push
sbb
sbbl
in
pushf
pop
rclb
in
lret
push
xchg
imul
loopne
adc
mov
fists
orb
mov
xchg
mov
jmp
mov
cs
and
mov
or
mov
fiadds
in
cltd
rorb
inc
dec
ss
push
movsb
cmc
dec
jb
mov
jp
lods
or
stos
out
sbb
orl
movsb
aam
adcl
stos
push
dec
dec
insl
out
rcrl
aam
sub
pop
adc
aad
pop
sbb
pusha
int
fmull
lcall
pop
idiv
inc
inc
mov
inc
sbb
push
mov
mov
cmpsl
mov
mov
test
and
iret
add
and
sbb
cmc
mov
das
cmpb
fadds
mov
add
push
sub
fstp
mov
or
sbb
cs
rol
push
add
and
bound
mov
jae
jp
adc
mov
mov
cmc
lea
add
push
xchg
sbb
xor
dec
stos
lret
sbb
cmp
push
adc
add
std
sub
mov
test
xchg
jnp
mov
mov
dec
lods
sub
sub
pop
adc
arpl
js
cmp
or
cmp
add
add
sub
and
cmpsb
or
jecxz
push
stc
aam
mov
mov
xchg
pop
mov
mov
jae
inc
mov
adc
clc
pop
sbbl
fsubl
mov
jae
mov
pop
mov
inc
xchg
popa
cmp
in
sbbl
rol
rcrl
fwait
cmpsb
mov
mov
mov
xchg
in
mov
push
jbe
pop
mov
mov
ss
daa
loopne
aam
xchg
aaa
aaa
shll
xor
unpckhps
lea
jp
adc
loope
clc
gs
jge
xor
test
leave
test
and
push
rcrl
jg
push
push
movl
arpl
fbld
cli
out
sbb
inc
push
orb
insb
push
cmp
data16
jae
jno
inc
jl
jno
cmp
push
inc
and
fwait
pop
imul
cmp
les
xlat
pop
sub
jge
dec
mov
xchg
fmuls
push
mov
inc
pop
dec
lods
push
push
xchg
sbb
rcll
mov
ljmp
mov
xor
sbb
repnz
test
adc
gs
aaa
xchg
and
pop
mov
das
xchg
int
leave
mov
lret
inc
mov
sar
mov
mov
test
pop
ret
imul
jnp
jae
and
repz
mov
fwait
pop
jne
jns
dec
and
test
xor
sahf
sahf
xlat
pop
mov
xchg
in
adc
mov
cwtl
and
in
mov
mov
and
js
aam
in
mov
dec
or
enter
mov
and
nop
test
sub
jp
cmc
mov
xor
inc
lock
fs
jg
out
insb
mov
pusha
iret
in
mov
pop
fldcw
nop
loopne
pop
xor
sbbb
mov
mov
in
and
mov
push
adc
pop
and
pop
mov
ljmp
aam
leave
xorb
int3
test
int
mov
dec
push
in
inc
push
cmc
sub
repnz
pusha
dec
xor
call
fcmovbe
add
mov
and
andb
addr16
mov
cmp
jg
push
mov
dec
cli
jbe
mov
jle
dec
fldl
loopw
jno
fcmovb
je
adc
cmc
iret
cli
or
jp
dec
nop
pop
mov
mov
push
push
jb
movq
pop
cld
lcall
aam
pop
mov
loope
dec
xchg
mov
dec
ja
outsb
mov
cmp
sub
push
or
ret
clc
or
nop
mov
pop
int3
icebp
xor
stos
jae
call
xor
lahf
cmp
fimull
es
jb
dec
pop
or
std
test
pop
je
les
leave
aaa
jle
fwait
adc
pop
and
mov
cli
jno
jge
mov
cmp
fxch
jle
lods
pop
xchg
or
mov
mov
mov
leave
int
push
jg
insl
mov
ret
cmpsb
fistl
sub
mov
mov
cld
mov
xchg
int
ljmp
mov
xchg
test
jl
adc
adc
jae
mov
mov
push
jno
fidivrs
sbb
insb
xorb
das
adc
lret
add
adcb
leave
dec
dec
sbb
adc
dec
push
push
lds
in
lods
sub
jno
pop
icebp
sti
jg
test
out
jg
adcb
pop
movsl
mov
icebp
repz
jge
mov
fwait
xchg
mov
lcall
xchg
jge
cmpsl
push
push
push
jmp
test
mov
test
call
add
xor
xchg
cmp
imul
int3
and
mov
sahf
xlat
std
sub
jle
xor
dec
out
jecxz
or
rcrl
lahf
js
int
int3
cmp
push
jle
loopne
ljmp
daa
sbb
bound
scas
je
jns
xchg
sbb
mov
xchg
sar
ficomps
je
dec
or
or
scas
xchg
movsl
adc
or
pop
jo
movsl
jmp
jbe
pop
pop
mov
xchg
pop
in
hlt
sub
bound
lock
and
outsb
add
nop
lret
stos
data16
lods
hlt
push
push
ljmp
rcrb
iret
ficoms
pop
and
inc
mov
jne
loopne
ja
aaa
test
sub
push
and
dec
andb
fsincos
lods
jne
mov
sbb
cli
push
pop
push
stos
pop
loop
push
scas
dec
loop
push
sbb
add
adcl
rcr
jle
and
ror
arpl
fsubrl
sahf
out
insb
add
xorl
sub
jecxz
inc
int
mov
and
xchg
out
dec
or
dec
cwtl
pop
mov
mov
insb
lds
adc
fbld
pusha
movsl
ds
dec
mov
pop
out
pop
adc
clc
inc
nop
cli
dec
xchg
nop
inc
mov
lods
int3
pushf
pop
stos
mov
aad
insb
test
or
mov
push
out
sub
ret
pop
mov
lea
in
out
push
sub
loop
popa
push
jne
jno
aam
push
test
clc
jno
out
pushf
decl
call
mov
aas
or
pusha
gs
xlat
mov
mov
repz
jmp
sbb
out
es
imul
inc
lods
pop
rcll
in
pop
adc
sbb
mov
pushf
jb
outsb
inc
mov
jae
test
outsl
mov
xchg
add
add
std
mov
cmp
jg
mov
testb
out
shll
ds
mov
adc
inc
shrl
dec
repnz
pop
jno
adc
pushf
pushf
sub
mov
lea
enter
popa
xchg
cmp
sub
mov
xchg
je
seta
jae
and
adcl
xor
out
jb
fiadds
xchg
int3
test
mov
jno
push
popf
testl
xor
xor
adc
das
mov
add
hlt
inc
hlt
pop
mov
std
lods
add
mov
sub
mov
lahf
bound
aam
outsl
jl
mov
dec
jbe
lahf
mov
fstpl
dec
pop
js
aas
xor
in
xchg
push
cltd
sbb
scas
imul
sub
and
iret
xchg
jl
ret
popa
jbe
insb
nop
js
dec
xor
std
lahf
and
imul
sahf
xlat
ja
sub
xchg
mov
jno
je
push
jno
xchg
mov
pop
inc
movsl
insl
fwait
sub
jne
xor
mov
out
mov
jecxz
es
inc
mov
mov
xchg
xor
inc
push
dec
rcrl
push
outsb
mov
imul
mov
outsl
mov
cmpsb
push
mov
lock
xchg
cmpsb
ljmp
pop
inc
pop
aas
and
push
dec
cmp
sarl
mov
ja
addr16
xchg
pop
adc
js
mov
adc
pop
push
jecxz
test
loope
inc
lods
push
daa
mov
sub
pop
mov
cld
mov
mov
mov
pop
pop
sbb
jp
xor
and
push
hlt
mov
mov
sub
ret
mov
cwtl
cli
mov
out
push
movsl
jmp
pushl
je
orb
fwait
adc
mov
xor
pusha
push
push
mov
jp
cmp
jns
pop
cwtl
in
or
les
sub
or
dec
and
lea
in
jmp
mov
adc
cld
jle
loop
inc
pushf
jbe
cmc
shrb
test
sbb
in
mov
xor
adcl
sti
mov
dec
aam
fisttps
pop
stos
pop
xchg
dec
sti
cmc
xchg
push
mov
insl
mov
popa
daa
int
clc
mov
sub
jnp
push
lock
pop
pop
rcll
mov
push
loopne
lret
aaa
clc
cmpsl
clc
ret
or
inc
adc
cmp
push
fwait
dec
xchg
sub
pop
into
and
cmp
aaa
loopne
lods
xor
and
or
stos
cli
insl
sub
aam
add
sbb
repz
cs
sahf
and
xor
movb
xor
pusha
mov
sbb
ss
push
mov
pop
int
repnz
xor
mov
fildl
sar
repnz
lahf
xchg
stos
fdiv
and
fstps
cmp
addr16
and
sbbb
xchg
jl
das
pcmpeqd
pop
lods
int3
int
js
mov
inc
and
add
loopne
sbb
movsb
scas
and
push
dec
and
mov
mov
in
mov
stos
fldcw
dec
or
xor
enter
outsb
notl
dec
xchg
insb
sub
xchg
jnp
cld
xchg
ret
jmp
mov
xchg
sub
xor
std
sub
inc
addb
loop
mov
adc
and
arpl
pop
in
popf
repnz
jbe
ljmp
or
repnz
xchg
divl
loopne
loop
or
mov
inc
cmpsl
rolb
int3
fsubrs
sub
and
sub
cmp
and
and
std
cmpb
ja
pop
mov
ret
jmp
out
mov
movsl
xor
xor
add
cltd
ja
pop
movb
or
cmp
and
movsb
in
packssdw
popl
in
mov
xchg
cld
arpl
mov
rcll
in
jg
sub
ds
push
mov
mov
cld
sub
gs
call
add
mov
sub
rclb
stc
gs
sub
push
sbb
xchg
dec
lret
aam
jmp
jle
jb
xor
loopne
insl
xor
and
decb
push
adc
pop
pop
out
repnz
fiaddl
insb
ja
pop
out
and
adc
pop
inc
mov
pop
dec
xchg
jne
test
nop
out
xchg
es
adc
lods
insb
insb
mov
push
lds
lea
jns
daa
xchg
lcall
leave
dec
or
les
or
mov
in
push
cs
popa
and
out
leave
jp
jge
frstor
popl
imull
cmpl
pop
xchg
call
pop
int
das
pusha
push
test
lock
xor
fwait
pop
ss
ljmp
pushf
imul
mov
add
xchg
and
fdivrl
icebp
xor
jbe
or
mov
pop
or
adcb
jmp
mov
xlat
or
outsb
in
leave
shlb
iret
inc
xchg
push
or
ja
xchg
scas
fs
repnz
mov
xor
xor
lods
inc
test
cmc
inc
mov
jl
fldl
push
sub
push
add
push
icebp
mov
sbb
loop
push
mov
adc
sbb
pop
insl
mov
cltd
add
push
and
cmp
mov
dec
imul
pop
addl
inc
mov
push
jnp
pop
addl
inc
sti
jg
add
xor
jno
pop
add
in
and
xor
or
pop
inc
dec
lods
mov
xchg
lahf
mov
jle
ret
nop
les
movsl
jge
and
ja
mov
inc
movsb
pop
push
or
test
push
cmp
sbb
inc
frstor
dec
js
xor
lahf
fisubrs
and
repz
push
icebp
lahf
pop
cmp
add
inc
xor
aaa
push
dec
push
jno
int
pop
adc
mov
ljmp
xor
and
pushf
sar
push
sti
das
inc
out
sub
cmp
in
pusha
xchg
adc
adc
mov
test
lret
mov
push
out
add
clc
cmpb
popa
xlat
and
imul
or
cmp
arpl
hlt
jns
daa
out
pusha
subl
cmp
sti
ror
jmp
inc
idivl
push
loope
rorb
mov
or
clc
dec
inc
sbb
daa
mov
ljmp
ja
ss
mov
shl
lods
xor
aad
push
shll
sub
dec
sbb
cmp
sqrtps
push
jge
pusha
push
adc
push
sbb
adc
jns
jl
mov
pop
sbb
or
adc
adc
lods
dec
xchg
adc
inc
and
push
sbb
push
lret
ss
lds
and
popa
scas
sub
dec
movsl
adc
mov
popl
rolb
jae
add
cmp
mov
in
roll
or
cmp
pop
sub
sbb
repnz
cmp
jno
pop
or
adc
jecxz
imul
mov
fiadds
lcall
hlt
sbb
testb
push
loop
fbstp
clc
jno
mov
fcompl
cs
mov
mov
cld
mov
mov
jge
xchg
mov
jnp
mov
push
pop
adc
inc
lds
dec
popf
push
jnp
sub
or
mov
xchg
sbbb
aam
shll
jg
sbb
sub
in
jno
and
sbb
sahf
into
cmpsb
or
ret
xchg
mov
fs
cmp
rcrl
sbb
inc
mov
and
push
imul
mov
lods
fs
push
xorb
add
loop
cmp
imul
or
push
aas
lea
pop
iret
inc
xor
add
sub
dec
cmp
xor
jge
testl
dec
dec
mov
mov
xorl
push
push
cwtl
mov
xchg
push
mov
ret
loope
mov
lea
mov
mov
ffreep
xchg
shl
mov
std
xchg
push
in
dec
xor
idivl
inc
jmp
sub
cmp
decl
rorl
push
push
decl
push
mov
stos
cmp
push
sbb
dec
movsl
jne
out
jne
lods
adc
sahf
dec
mov
loop
out
cmp
dec
lret
pusha
mov
cmp
mov
in
sahf
dec
loope
scas
adc
jb
sahf
bound
out
fstpt
adc
pop
stos
jb
adc
mov
mov
in
ret
jle
sub
sub
insl
lds
nop
imul
mov
pop
mov
shrl
es
push
push
jno
aaa
roll
out
mov
test
push
fldl
cmpsl
movsb
xor
arpl
mov
out
popa
into
es
push
mov
lds
inc
mov
fildl
or
inc
push
push
xchg
xor
sbb
jae
and
sbb
das
mov
xchg
test
push
push
or
jne
negl
pushf
mov
dec
mov
pop
jge
iret
pop
and
mov
lock
sub
pop
jbe
sub
stos
xchg
push
jno
adc
es
ficomps
and
int3
clc
jno
fsubl
nop
fdiv
mov
lds
adcb
in
dec
mov
and
cltd
jno
xorl
subb
ret
ja
into
je
les
subb
cmpsb
xrelease
push
xor
test
lret
mov
sub
scas
lock
xlat
daa
mov
xchg
or
jl
or
fsts
data16
mov
fwait
daa
std
pop
fdiv
add
and
xor
push
pusha
das
cmp
repz
jne
test
call
push
fisubl
pusha
insb
incb
insl
arpl
scas
push
iret
divl
test
sub
pop
inc
shrl
lret
cmp
mov
insb
int3
sbb
inc
mov
sti
cmp
xor
cs
test
push
add
aaa
sbb
jle
fisubrl
sbb
inc
or
mov
test
flds
subb
repnz
dec
aam
pop
push
testb
mov
sbb
in
movsb
push
xchg
jmp
imul
sub
enter
out
pop
mov
xchg
sahf
ss
push
xor
push
mov
data16
or
nop
ds
in
push
and
insb
cmc
idivb
icebp
lods
mov
hlt
repz
xor
fs
cmp
lods
dec
in
movsl
jno
and
mov
xor
add
aam
or
test
jge
rcrb
mov
inc
sbb
cmpsl
push
sbb
push
add
sahf
mov
xchg
sub
jecxz
ss
cmp
insl
cltd
mov
sub
rcr
int3
fcmovb
hlt
lds
divb
mov
mov
push
xchg
je
pop
dec
dec
add
inc
mov
mov
decb
cwtl
outsb
sub
faddl
jle
loopne
jns
rolb
xchg
testb
std
lcall
jno
add
and
js
push
das
imul
mov
sub
jmp
cli
sti
cmp
jo
inc
jge
pop
fstpl
sub
scas
leave
mov
and
inc
dec
push
movsb
gs
inc
ss
mov
jnp
and
mov
jecxz
xchg
call
sub
mov
push
dec
popf
sbbl
orl
cmpsl
or
ja
faddl
push
cs
pop
push
dec
loop
sarb
enter
xor
out
notb
dec
fldl
push
in
or
or
mov
loopne
aam
add
dec
daa
xchg
and
push
cmp
imul
mov
jae
push
and
aaa
xor
xor
test
sub
sbb
insl
out
jb
sub
testb
aad
cmp
inc
sbb
xchg
dec
push
in
es
clc
mov
mov
xchg
aam
jl
inc
lahf
aaa
cmc
dec
mov
jns
loop
xor
xchg
lret
test
aaa
mov
push
push
movzbl
das
push
in
sbb
icebp
adc
pushf
rorb
cli
iret
es
xchg
rcrl
add
inc
loope
nop
sub
push
and
cmpsl
jb
hlt
cmp
mov
fisubrs
jns
or
push
divb
mov
rorb
mov
pusha
cwtl
or
dec
jge
fistpll
jae
sub
mov
push
mov
test
push
sub
jg
imul
jecxz
cmp
cmpsl
in
or
and
push
icebp
fdivs
dec
cmp
mov
push
inc
mov
xlat
jl
je
ret
das
into
jp
hlt
push
ljmp
xchg
push
out
mov
push
fldcw
sbb
and
and
xchg
movsb
in
mov
sub
stc
inc
mov
loope
push
shlb
rorb
shrl
hlt
into
mov
imul
pop
out
adc
xor
in
dec
test
outsb
aas
sbb
push
push
daa
stos
jmp
out
popf
pop
jns
cmp
cwtl
cmc
cmpsl
push
fdivl
add
sbb
dec
xor
fistpl
ret
pop
int
jp
pop
jle
ret
mov
les
arpl
fidivrl
cld
sbbl
scas
mov
xchg
stos
fcom
sub
inc
adc
sub
lcall
pusha
and
mov
pmaxub
mov
jns
jge
adc
lret
leave
sarl
in
fisubrl
aas
pop
mov
or
jp
xlat
xchg
mov
icebp
push
outsl
pop
push
jp
aaa
lock
cs
ljmp
enter
inc
or
movsb
lock
dec
adc
sub
rcrb
lods
inc
arpl
aaa
add
dec
adc
fdivrl
bound
int3
jns
shll
out
scas
mov
sub
add
in
dec
daa
loope
std
sub
pop
inc
pop
xchg
scas
jns
jle
mov
sti
adc
add
xchg
pop
pop
dec
lcall
mov
insl
xor
fsincos
xchg
lcall
xor
xchg
int
xor
test
cmp
adc
push
mov
iret
aaa
stc
pop
test
jg
jecxz
mov
and
mov
aas
js
lock
fiadds
imul
mov
imul
adc
stos
dec
and
xlat
enter
push
or
xchg
adc
push
sbb
lods
inc
inc
jo
cmp
or
or
jnp
adc
lahf
fwait
cmp
sbb
pop
addb
in
or
adc
std
mov
arpl
mov
in
jmp
ficoms
mov
emms
mov
dec
ja
jl
stos
adc
mov
das
fstpl
ss
cli
mov
frstor
js
inc
mov
out
sbb
xor
mov
xor
jg
cmpl
loope
cmp
mov
cmc
loope
xchg
pop
popa
pushf
inc
add
js
push
and
mov
int
adc
orb
xor
adc
pop
mov
pop
adc
mov
fiaddl
mov
rcr
pusha
sbb
nop
dec
movl
data16
aas
or
mov
repz
cmc
rorb
lret
mov
cs
fwait
loop
rcll
xchg
inc
jg
cmp
jnp
stc
xchg
stos
xlat
xor
gs
sub
mov
fcoms
inc
nop
sub
outsb
stc
cmp
lods
pop
repz
int3
mov
adc
or
adc
cmc
shlb
les
dec
sub
rorb
xor
or
cmp
mov
jbe
cmp
adc
out
in
xchg
mov
pop
imul
cmp
xchg
les
pop
add
mov
dec
movsl
mov
mov
pop
in
insl
bound
push
hlt
imul
enter
nop
sub
jo
mov
into
jg
lods
fwait
push
stc
sahf
jae
push
or
or
test
insl
mov
mov
sbb
outsb
in
xchg
cltd
pop
dec
sbb
mov
mov
and
and
call
fs
cmpsb
jl
sbb
hlt
sub
pop
hlt
std
lea
pop
insb
xchg
mov
sbb
std
cmp
std
andb
lcall
mov
and
and
cmp
xor
jge
test
dec
cwtl
repnz
xchg
out
add
sti
js
cmp
cmpsb
cmc
mov
dec
push
xor
pop
or
loope
and
mov
bound
cmc
dec
pop
pop
pop
lret
stos
sub
mov
mov
leave
cltd
lret
mov
sbb
in
bound
cli
shlb
inc
pop
inc
and
aaa
ret
jae
daa
inc
push
fstpl
push
sti
push
or
push
or
lods
mov
adc
ficomps
inc
stos
dec
loop
dec
imul
pop
cmp
lock
sub
xor
js
fs
std
fsts
mov
and
push
add
mov
fs
int3
std
inc
lahf
sbb
pop
and
imul
push
inc
jmp
cltd
pop
adc
inc
fs
repnz
sub
es
arpl
jno
cmpsb
push
rcrl
pop
not
mov
mov
mov
sar
movsb
xchg
aas
add
shrl
scas
add
ds
xchg
mov
push
pusha
popf
test
inc
xchg
mov
pop
roll
or
iret
mov
add
mov
das
aas
lea
sub
pop
aam
mov
add
adc
mov
sbb
imul
add
mov
subb
clc
push
sub
mov
or
fstpl
mov
cmc
icebp
sub
xchg
lods
pop
rdpmc
divb
negl
ljmp
icebp
stos
mov
loope
mov
popf
insl
push
push
les
pop
adc
xlat
lods
test
and
dec
inc
cmpsb
mov
mov
ljmp
xchg
cli
inc
and
jb
dec
icebp
scas
ja
xchg
mov
shll
jge
mov
nop
dec
mov
pop
xor
lsl
jl
sbb
lcall
je
das
fpatan
fdivs
or
pop
lahf
fdivrs
stos
push
jg
sti
mov
adc
xchg
std
repz
inc
lret
loope
pop
int3
std
push
mov
jg
stos
sbb
push
notb
jo
sbb
bound
and
pop
ficoms
mov
push
dec
movsl
dec
icebp
and
pop
cmp
or
inc
mov
pop
xlat
jg
je
cmp
xchg
call
jmp
andl
roll
cmp
mov
loopne
aaa
movsl
loope
sub
subb
test
rol
mov
jge
mov
mov
push
ja
pop
daa
outsb
mov
jne
popa
or
rol
mov
fstl
rclb
mov
sbb
xchg
arpl
push
ret
cmpsl
int
push
loop
pop
sbb
mov
xchg
mov
adc
ret
sub
loope
sahf
or
movsb
mov
or
lahf
je
push
fcmovnb
pop
aaa
adc
mov
fidivrl
test
cmp
nop
jne
cmp
xor
dec
jle
enter
mov
xor
mulb
lods
jge
xchg
lods
rolb
add
xchg
add
sub
enter
or
ret
xchg
lahf
or
sub
repz
fildll
xor
js
jmp
into
insl
or
dec
aam
mov
cwtl
fildl
loopne
popf
and
lret
mov
mov
loope
dec
mov
fimuls
mov
cltd
sbb
negb
fstl
outsl
test
popf
idivl
push
fwait
dec
outsb
call
jg
shl
mov
fidivs
or
jno
fmull
inc
mov
daa
les
mov
sar
lds
xchg
daa
jp
cmc
int
movsl
jmp
jl
std
push
inc
std
divl
inc
cwtl
xlat
shr
cmpsb
in
imulb
xchg
cmp
std
inc
xchg
pop
pusha
imul
out
sahf
sbb
insb
adc
pop
push
xchg
xchg
ja
push
imul
fsubl
inc
jl
icebp
data16
sbb
push
jp
sbb
dec
js
fisttps
sub
xor
xchg
xchg
fcompl
mov
push
or
mov
jmp
insb
cmp
sub
cmpsb
mov
aaa
ret
fnstcw
xchg
dec
clc
push
pop
sahf
push
int
inc
das
add
fwait
xor
aaa
push
es
xchg
mov
in
mov
push
cmp
out
add
repnz
stc
xchg
insb
sbb
sbb
pop
pop
jp
jo
gs
loop
cmp
in
add
push
ficoms
aas
nop
outsb
dec
sbbb
lods
loopne
and
movsb
pop
test
popf
fimuls
mov
js
jae
inc
leave
js
mov
lods
jmp
or
sub
mov
stos
sub
push
mov
ljmp
push
subb
dec
xlat
sbb
jl
sbb
mov
mov
pusha
aam
inc
jmp
imul
inc
dec
jo
dec
aaa
xchg
mov
cmpb
lds
dec
add
cwtl
mov
sbb
prefetchwt1
data16
sarb
js
and
mov
adc
cmp
push
std
test
fimuls
mov
ret
lahf
sub
mov
mov
stos
outsl
out
ficomps
jle
aas
daa
fnstcw
mov
sbb
push
push
mov
imul
arpl
fistpl
push
into
int
jge
inc
fistpll
testb
js
testb
mov
jmp
nop
std
shrb
movsl
out
fdivrp
sahf
or
xlat
xchg
pop
push
pop
xchg
leave
add
ljmp
xlat
movsl
mov
or
mov
dec
insl
mov
pushf
pop
addr16
add
or
insl
aaa
sahf
jg
push
sahf
cwtl
repnz
add
stc
ret
popa
cmp
jns
dec
dec
cmp
lahf
out
aaa
leave
sub
mov
mov
stos
jne
sub
xchg
push
mov
sbb
push
jp
lock
aas
test
aaa
jnp
jecxz
pinsrw
int
mov
in
jo
adc
mov
aad
and
jp
xchg
clc
popa
push
lods
sbb
pop
sub
sub
jge
mov
mov
enter
sub
mov
or
cwtl
and
fdivrl
jle
cmp
and
cld
dec
inc
xlat
add
daa
test
sbb
dec
lods
sub
addr16
nop
sub
mov
test
push
jecxz
sbb
lods
test
add
push
scas
pop
and
pop
imul
mov
xchg
sahf
mov
cmp
testb
jo
pop
and
and
jnp
pop
dec
js
roll
lret
push
test
cmp
push
fisubl
jb
nop
push
aaa
xchg
push
pop
or
ljmp
push
inc
rorb
popf
xchg
mov
mov
pusha
push
xor
roll
jecxz
pop
flds
sub
popa
cmc
test
adc
insl
mov
cli
adc
dec
and
add
and
in
xor
inc
jnp
cmp
iret
pushf
mov
or
push
cmp
xor
push
fs
cmp
cmp
xchg
pop
test
loop
fisubs
mov
sub
in
pop
andl
mov
mov
fs
icebp
pop
pop
push
jns
push
dec
gs
mov
stc
push
pop
xchg
cmp
cmc
adc
adc
loop
jle
aas
insl
cmpb
cmp
popf
mov
push
jb
cmp
xchg
data16
mov
xor
mov
sub
cmp
fcom
push
push
fisubl
stos
mov
fmulp
cmp
jmp
notb
scas
jmp
and
sub
xor
xlat
xchg
adc
int3
insl
jge
jo
shlb
sbb
jge
loop
xchg
xor
jle
and
outsb
mov
lea
dec
inc
pop
cmc
outsl
adc
cmp
mov
inc
mov
int
ss
fsts
inc
shl
adc
pop
add
fs
push
jno
push
mov
mov
inc
xchg
xchg
jecxz
daa
aam
frndint
aam
lret
dec
jae
insb
pop
push
ret
lock
cmp
xchg
out
mov
loope
sbb
fcomps
mov
jmp
out
and
popa
popl
and
dec
pop
iret
in
sbb
inc
dec
mulb
xor
lret
jl
cmp
push
inc
imul
push
mov
popa
bound
loop
cld
out
mov
xchg
push
mov
pop
punpcklwd
sahf
jb
or
cmp
scas
mov
and
loope
std
inc
int
out
ret
aas
jmp
stos
push
mov
mov
popf
sub
imul
scas
dec
stc
pop
fst
test
cmovns
mov
or
loope
inc
cmpsb
xchg
movsl
push
ja
aas
xchg
icebp
jle
imul
pop
js
add
jmp
jg
fisubrl
add
xor
in
out
or
iret
jg
xchg
xchg
pop
or
jmp
es
or
cs
jmp
call
push
sbb
xchg
mov
sub
xchg
xchg
xor
mov
insl
mov
int3
pop
sub
imul
push
outsl
mov
loopne
sbbb
rclb
iret
call
xor
ds
out
mov
add
stc
adc
dec
pop
jle
mov
jp
xor
lret
stc
daa
stos
and
pop
and
cmpsl
adc
add
xchg
jge
jl
xor
mov
mov
push
mov
dec
dec
xchg
out
sbb
cmp
frstor
inc
push
mov
outsb
dec
je
mov
subl
sub
or
cltd
mov
ss
test
es
pop
jnp
jnp
mov
stos
push
movsb
cmp
icebp
arpl
mov
jge
xchg
xchg
filds
jp
in
call
ds
cmp
adc
and
je
ret
les
pop
in
sub
dec
repz
sbb
sbb
sahf
popa
aad
imul
add
jge
call
gs
pop
aas
data16
sbb
or
sbb
or
sbb
add
push
lahf
stos
and
scas
rorl
or
push
sbb
repnz
xchg
and
jl
sbb
jmp
jp
sub
sbb
in
out
adc
mov
add
subl
xchg
lods
jp
ja
mov
sbb
sbb
stc
mov
mov
out
cwtl
sub
xlat
in
aad
and
and
push
xor
mov
push
lret
inc
jl
int3
jge
mov
mov
fwait
cmpl
jo
iret
andl
into
sbb
mov
or
lock
es
fcmovbe
nop
dec
push
xchg
jmp
jns
dec
push
lret
sub
scas
pop
stos
filds
pop
dec
lea
pop
xorb
mov
cltd
push
push
call
daa
jp
jmp
xor
mov
xor
cmp
fimuls
mov
sub
jns
push
jno
in
cwtl
int
and
daa
fbld
and
push
cmc
xlat
bound
jl
cmpsb
sbb
sbb
fnstcw
sub
sbb
sbb
mov
xchg
inc
cmp
pop
sub
xor
or
sub
and
jmp
push
je
clc
mov
repz
jl
jl
xchg
jns,pn
xor
push
push
xrelease
sub
push
outsl
push
dec
push
arpl
out
addr16
mov
lods
sub
rclb
and
jno
add
stc
mov
lret
cmc
pop
ficoml
cmp
mov
lods
or
push
dec
sbb
leave
fistpl
or
int
inc
repnz
jmp
out
addr16
testl
xor
sbb
ret
adc
mov
ja
mov
mov
outsl
ficomps
cmp
xchg
add
mov
out
mov
pop
push
xchg
xorl
movsl
daa
adc
or
les
inc
add
shll
inc
cmp
push
test
mov
daa
fstpt
pop
xchg
js
jle
add
pop
int
int3
add
pushl
jae
scas
rclb
cmp
or
and
cld
lods
jae
adc
mov
dec
dec
sahf
or
pop
pushf
imul
mov
fisubl
jbe
push
stos
push
pushf
fildl
push
cltd
stos
push
loopne
xchg
fbstp
push
addr16
fs
sbb
or
jb
push
adc
add
jle
pop
push
es
sbb
imul
xchg
adc
lods
loop
sbb
shl
xchg
aaa
je
pop
xchg
movhps
lods
jo
daa
imul
fsubl
cmp
addl
addr16
out
cmpsl
mov
xor
gs
inc
pop
aam
pop
inc
sub
cmpb
mov
daa
sub
cld
les
jnp
sub
sub
mov
js
dec
pop
ja
dec
mov
std
or
lea
scas
arpl
ljmp
std
addb
clc
mov
xchg
sbb
je
or
test
cmp
mov
movsl
inc
adc
jns
insb
test
xchg
sbb
es
mov
mov
ret
pop
repnz
mov
sbb
xchg
cmc
out
pop
push
mov
cs
and
xchg
mov
adc
lea
into
pop
jno
jecxz
mov
inc
and
jns
add
cwtl
out
mov
mov
jns
cmpsb
and
into
nop
xor
mov
ret
and
aam
mov
hlt
stos
repnz
in
cmp
ret
fnstcw
andb
jb
pushl
out
xchg
scas
arpl
ret
push
xchg
test
movb
out
pop
inc
mov
stos
jnp
xchg
add
cmp
rol
push
cwtl
xchg
push
mov
pop
push
insl
sub
fucomp
mov
or
mov
or
xchg
push
mov
xor
lret
mov
xchg
test
pusha
xor
mov
cli
push
push
or
loopne
int3
xchg
jne
push
lods
mov
xor
sbb
mov
cmp
mov
mov
dec
push
addb
xchg
lret
es
in
cmp
fiaddl
inc
and
add
cltd
xor
inc
dec
int
inc
mov
std
jb
cmp
mov
add
and
lcall
or
scas
cmp
sub
dec
rclb
iret
aaa
repnz
rcl
pop
adc
frstor
stos
inc
jle
sbbl
xor
push
and
cmp
xchg
iret
inc
aad
cmp
mov
into
sub
bound
inc
push
je,pn
xchg
into
mov
fdivrl
mov
call
push
clc
xchg
xor
les
push
outsl
jae
cltd
pop
js
shll
in
mov
xchg
ret
ret
pop
pusha
clc
lret
js
adc
jmp
jbe
into
mov
xchg
jmp
add
enter
pop
xor
test
cli
pop
fisubl
or
xor
push
imul
cli
and
dec
retw
mov
xorl
gs
and
cld
sbb
pop
mov
orb
cmpsb
sub
cmp
imul
push
ljmp
int
xchg
adc
aad
adc
dec
stos
xchg
and
stos
sub
cs
fisttps
xor
push
sbb
adc
xor
or
mov
jae
push
pop
jmp
fcom
sub
std
push
data16
push
loopne
fimuls
and
pop
adc
test
cli
inc
mov
mov
notl
pop
fnsave
jp
xchg
jmp
imul
in
cwtl
push
addr16
push
cmp
loopne
mov
daa
sub
or
test
lods
ret
mov
mov
jbe
aad
and
or
add
shrb
outsb
mov
fsubs
adc
ljmp
xchg
mov
add
pop
or
sbb
mov
inc
scas
lds
xchg
push
xlat
dec
fdivrl
lds
pop
gs
and
adc
out
aam
jns
or
fmull
mov
jl
xchg
jnp
jns
adc
add
adc
mov
sti
cmp
pop
jno
mov
inc
xchg
add
adc
and
cli
fwait
adc
or
out
xchg
or
and
xlat
inc
or
inc
cmp
sti
ret
xor
aaa
hlt
pop
test
pop
adc
dec
lods
aaa
popf
jmp
test
xchg
mov
push
fnsave
js
push
outsb
jg
inc
test
and
xchg
push
lods
js
xor
jnp
xor
cltd
je
xlat
testb
sbb
into
scas
inc
sbb
adc
add
cmp
cmp
pop
cmp
pushf
roll
movsb
scas
mov
leave
cmp
dec
lahf
cmp
xchg
iret
push
popf
jno
call
loop
jbe
and
pop
mov
movsl
dec
xchg
scas
imul
add
cwtl
lods
mov
cmp
movsb
loopne
sbb
push
xchg
js
movsb
xchg
xor
hlt
jno
imul
add
repnz
mov
and
movsb
sbb
test
xchg
pop
adc
clc
xchg
adc
adc
xlat
repz
xor
and
aad
add
or
and
dec
xchg
ljmp
rcrb
sbb
loope
daa
loop
cmp
sahf
jae
rcrb
out
push
lods
xor
mov
in
test
xchg
dec
les
pop
insb
outsb
aas
lock
rorl
loope
inc
add
lock
loop
push
test
mov
popf
push
mov
into
pop
shll
int
cli
in
cmp
mov
in
xchg
pop
test
shll
dec
sub
ds
add
je
mov
fsubrl
xchg
dec
out
mov
test
shr
ds
fstpt
xor
sbb
arpl
fwait
sub
out
jle
cmp
jecxz
fwait
inc
sub
jl
lea
or
sub
jae
mov
jnp
cmp
jo
mov
shl
shrl
jg
add
fsts
insl
push
fldt
jb
lock
dec
jg
mov
cwtl
je
mov
loop
cwtl
movsl
test
sub
mov
int3
std
mov
rol
jno
sbb
lcall
or
jnp
sub
nop
cmpsb
inc
jecxz
call
clc
in
xor
stos
addb
jmp
fnstenv
fistpll
aas
and
into
cld
cld
out
pusha
stos
sub
insl
imul
xchg
bound
cli
cmc
scas
mov
rorb
dec
xchg
les
test
mov
shl
sub
pop
xchg
ss
cmpsb
mov
dec
repnz
icebp
dec
add
mov
cld
int
sbb
into
jg
pop
jo
cmp
jns
je
stos
xor
cwtl
xor
inc
jle
outsb
xchg
clc
cmpsl
shlb
sub
adc
test
dec
sbb
test
dec
sub
pop
sub
mov
xor
insl
lods
sarb
ret
push
jb
add
sbb
scas
dec
imul
cmp
cmp
xchg
adc
adc
dec
lock
cld
std
add
adc
xchg
scas
cld
mov
and
xchg
ret
enter
adc
jl
push
pop
icebp
or
push
pushf
sub
fwait
sub
xlat
in
sub
loop
sbb
xchg
iret
aad
imul
je
push
mov
insb
pop
stc
mov
enter
mov
pop
mov
pop
add
ds
xchg
sti
pop
fldcw
adc
sub
xor
nop
dec
roll
inc
sarb
adc
gs
sbb
xchg
ret
or
push
push
add
in
sti
rorl
jo
out
aas
inc
mov
je
in
lods
lahf
test
insb
add
je
xor
add
loopne,pt
lea
inc
or
inc
cmp
testb
xchg
cmp
lods
jecxz
cmp
adc
add
and
sbb
mov
mov
cltd
in
jmp
add
dec
or
je
int3
xchg
andl
mov
ja
gs
xchg
fst
aaa
push
popl
push
mov
cmp
jno
std
aad
push
scas
mov
inc
sub
xlat
add
mov
dec
push
mov
int
jmp
hlt
sub
outsl
popa
lds
jmp
test
ds
ret
ret
dec
mov
inc
std
lret
rorb
add
or
int
test
ds
std
mov
andb
and
ja
ss
cltd
cmpsb
sbbb
mov
arpl
inc
mov
push
and
call
std
mov
mov
ficoms
xor
inc
push
sbb
inc
cwtl
imul
jp
scas
fs
mov
rcrb
fcomps
xor
xor
jae
movsl
mov
stos
ss
dec
popa
dec
xchg
or
loope
cmpsb
mov
stc
push
mov
rcrb
mov
daa
movb
dec
int3
add
sbb
sub
cld
js
test
out
mov
inc
mov
je
dec
rclb
mov
shrb
rolb
aam
jle
mov
stos
dec
pusha
notb
inc
sbb
fs
lret
ret
mov
push
fimuls
aaa
cmp
jo
mov
xchg
mov
mov
shlb
dec
ljmp
cmpsb
fmull
cmp
cmpsb
xchg
shrb
sub
repnz
pop
nop
call
cmc
es
add
inc
js
movsb
inc
in
int3
xorb
test
mov
lods
mov
ret
and
daa
mov
pushf
mov
mov
cmpsl
enter
adc
or
inc
inc
xchg
gs
cld
or
cmp
in
adc
enter
jae
mov
pop
xchg
inc
enter
lods
xor
mov
jo
pop
fimuls
add
fsubp
out
or
das
dec
mov
xchg
mov
xchg
insl
out
in
dec
pop
mov
shrl
jb
andl
leave
or
imul
cmp
stc
ja
test
icebp
adc
adc
mov
icebp
push
push
push
iret
ss
out
cmpsb
cmpsl
push
pop
repnz
jno
int
inc
pusha
pop
loope
jle
dec
jp
outsl
rcll
and
test
jae
push
repnz
adcb
mov
push
addr16
inc
aam
dec
ret
int3
push
dec
push
jae
repnz
ljmp
jnp
jbe
add
pop
lea
cmpb
xchg
xcrypt-ofb
cmpsl
sub
jge
jl
aad
scas
or
cmp
mov
leave
add
jmp
cmp
cltd
and
loop
imulb
mov
mov
mov
fwait
jle
in
jns
lods
enter
xchg
xchg
inc
mov
in
mov
cmp
cs
sti
pop
adc
mov
dec
fldt
or
popa
xchg
lods
pop
mov
iret
push
inc
or
xor
lods
push
cs
ja
push
adc
movsb
loopne
xorb
or
mov
pop
je
decl
mov
xchg
pop
stos
ret
daa
mov
shr
mov
sub
xor
lods
clc
push
insb
roll
push
lods
jno
jl
arpl
xchg
lea
xor
adc
xor
adc
out
int
fisubs
nop
push
pusha
orb
push
daa
idivb
adc
pop
push
stos
cmp
aad
jno
lahf
jmp
xchg
mov
sbb
xchg
fwait
ljmp
outsl
das
aam
scas
sbb
dec
dec
jmp
add
in
xchg
pop
ret
gs
test
sbb
ja
xchg
sbb
push
jno
int3
je
aaa
daa
add
pusha
lds
or
sbb
jg
cld
push
in
call
adc
inc
sahf
jno
movsb
jne
mov
insb
or
cmpsl
inc
push
sub
sbb
mov
js
aaa
rorb
mov
lods
aas
data16
lahf
enter
pusha
xchg
cmp
jmp
add
out
xchg
mov
lret
fdivs
add
popa
enter
shrb
and
or
clc
in
addr16
cld
mov
mov
repnz
je
jno
push
sbb
pop
repnz
pushf
enter
stc
je
das
in
es
lcall
fists
ret
mov
xlat
pusha
in
mov
lock
pop
or
jl
cmp
sub
add
mov
xchg
mov
stc
imull
aam
imul
stos
push
sub
mov
ds
xchg
pop
mov
or
stos
repnz
lret
fiaddl
and
test
jl
cmpsl
scas
inc
jmp
repnz
adc
cwtl
call
lret
addb
rcl
ficoms
sub
jp
or
arpl
push
mov
xchg
mov
xlat
sbb
iret
test
cmp
inc
mov
repnz
or
xchg
xor
repnz
les
aaa
add
dec
push
mov
cmp
repz
rcll
fwait
ss
cmpsl
adc
pushf
fsubrs
xchg
imul
pop
pop
bound
std
inc
in
pop
fnstcw
mov
outsl
pop
ret
adc
sti
imul
cmp
dec
mov
xlat
js
mov
sub
gs
xor
fisttps
pop
mov
mov
cli
sti
fadds
xorl
push
and
lods
mov
and
mov
pusha
and
pop
mov
ficoml
outsl
bound
jo
js
insb
mov
lock
sub
pop
inc
mov
sub
scas
test
sbb
leave
cmp
pop
push
jmp
cs
dec
mov
scas
push
push
aas
das
in
pop
sub
cmpsb
add
jp
and
hlt
adc
fwait
lret
jmp
into
in
sub
jno
inc
adc
repnz
scas
cmp
cmpsl
arpl
or
dec
cli
stc
fcomp
enter
rclb
jle
iret
fwait
cmp
test
cmc
cmpsl
aas
test
loope
cmp
mov
je
mov
mov
inc
xchg
and
inc
add
popa
adc
add
dec
jbe
sub
enter
cmp
push
cwtl
cmp
mov
imul
and
jp
sub
lahf
cs
ljmp
xor
push
adc
pop
sbb
sbb
adc
fstp
dec
cmp
aaa
enter
lods
je
ret
lods
jno
popa
xor
inc
outsb
mov
mov
xchg
rcrb
cmpsb
in
xchg
mov
mov
mov
shll
arpl
or
mov
pop
jnp
inc
xchg
icebp
stos
jno
lcall
cli
ss
xchg
cli
sarl
neg
mov
xor
lods
mov
mov
adc
das
mov
call
xorl
jmp
notl
aam
push
adc
and
cmp
add
mov
int
jp
mov
clc
mov
je
xchg
push
data16
addr16
popa
test
pushf
xchg
lcall
and
arpl
dec
pusha
test
mov
loope
and
test
mov
int3
push
mov
xor
sub
dec
mov
test
movsl
jecxz
ret
fidivrl
sti
mov
mov
xlat
sbbb
scas
hlt
inc
pop
es
inc
mov
sub
sub
jp
xor
add
bswap
ret
adc
lret
sub
and
xchg
mov
pop
fstpt
icebp
inc
and
out
gs
pcmpeqb
or
jbe
test
jmp
inc
add
dec
stos
ret
cmc
or
jmp
cmp
mov
or
pop
ror
ret
cmp
pop
jmp
incl
std
int
cmp
int
call
lret
inc
pop
adc
xor
sub
outsl
arpl
sti
inc
decb
mov
add
adc
mov
cmp
int
mull
scas
jae
jno
lds
jcxz
cmp
out
les
nop
sub
nop
jae
mov
inc
adc
in
lods
and
adc
imul
dec
xchg
or
subb
insl
sbb
jl
or
cmpsl
inc
pop
in
dec
fsts
mov
xor
mov
addr16
call
mov
mov
sub
xor
cmp
sub
ror
hlt
stc
or
mov
xor
mov
movsb
sar
bound
mov
je
mov
aaa
aas
lret
xchg
ror
pop
loope
mov
jo
jae
rcll
inc
in
dec
push
in
xchg
push
pop
fdivp
xor
imul
fmul
cmp
jns
fimuls
pop
cs
enter
push
imul
enter
cltd
lahf
push
mov
dec
mov
mov
pmulhw
adc
adc
repnz
mov
jae
push
sbb
notl
mov
pop
mov
repz
sub
scas
mov
xchg
rclb
leave
cvttps2pi
arpl
xchg
cwtl
push
mov
inc
loopne
xchg
inc
sub
mov
rcrb
cld
lcall
or
sahf
call
mov
arpl
sbb
push
nop
lahf
mov
jo
scas
enter
out
test
xor
rclb
data16
lea
fistpll
ret
sub
sti
gs
loope
push
pop
loop
jns
xchg
ja
divl
cmc
in
ljmp
in
sbb
mov
ficoms
adc
stos
mov
fildl
mov
jecxz
jp
and
push
roll
push
xor
gs
jecxz
inc
and
push
cmp
mov
xor
repnz
adc
cmp
adc
movsl
pop
stos
pminub
stos
in
mov
mov
cli
and
aam
testl
sbb
stc
mov
stc
adc
movups
dec
int
ljmp
xadd
push
xor
jmp
xchg
xor
mov
shrl
cmpsb
push
adc
movsb
sbb
xchg
imul
pop
inc
out
sbb
addr16
insb
mov
mov
lock
xlat
adc
xor
rorl
cmp
int
enter
es
imul
sti
sub
mov
jge
pop
enter
popf
out
pop
sbbl
mov
xchg
xchg
out
je
nop
xchg
sbb
and
adc
pop
filds
jge
lds
movsb
fcoms
mov
lods
cmp
cli
jno
lock
and
cmp
jae
dec
mov
outsl
stc
leave
insb
mov
out
ret
into
jbe
fistps
push
jne
inc
mov
push
adc
pop
cld
ja
mov
or
jno
je
mov
imul
arpl
adc
adc
aam
fstps
jae
mov
cs
int3
or
sbb
incl
aas
mov
imul
xor
dec
lds
and
insl
pop
mov
inc
enter
stos
jl
or
ss
hlt
inc
inc
mov
fs
fwait
ret
mov
sub
lret
cmp
pop
clc
sbb
cmpl
int3
das
pop
popa
addr16
mov
aas
hlt
shl
jl
outsl
mov
dec
loopne
push
pop
mov
out
ljmp
aam
pop
adc
jmp
mov
rcrl
aad
cltd
enter
push
inc
fldl
je
loopne
mov
and
jo
or
lret
sbb
pop
pop
dec
mov
sahf
cmp
sbb
filds
ds
pop
xchg
xor
cli
mov
push
shl
lahf
cmp
ret
int
adc
stos
jle
lcall
push
xchg
push
les
int
and
xchg
test
jb
hlt
adc
int3
les
jmp
xchg
mov
sub
repnz
cmp
mov
scas
xchg
xchg
push
add
int3
aaa
test
outsb
popf
inc
lods
xor
and
and
out
mov
insl
popf
mov
pop
je
aam
mov
fisttpl
adc
adcb
inc
imul
fmuls
sbb
orb
jmp
idivl
out
dec
xor
xchg
jb
cmc
mov
fistl
jnp
mov
jno
jg
loopne
or
sub
xchg
lahf
pop
cmp
jb
andl
and
xchg
pop
call
inc
sti
push
jp
bound
test
arpl
gs
aad
push
adc
mov
movsb
ja
cwtl
pop
sbb
outsb
imul
cmpsl
add
xchg
cwtl
jns
xchg
sti
lcall
sub
jl
shrl
outsl
lods
mov
ss
arpl
cmpl
mov
pop
jl
repz
mov
aaa
add
aam
xchg
imul
dec
mov
daa
dec
inc
and
rol
push
addr16
push
mov
cmc
and
sub
fwait
add
push
or
fs
js
shr
fildl
push
imul
pop
add
sarb
and
call
or
aas
lock
xchg
in
lret
mov
shlb
or
add
cmp
inc
push
mov
testl
lock
ja
lcall
addr16
inc
mov
out
imul
or
or
imul
aas
mov
ficoml
dec
sti
mov
rcrb
sbb
std
mov
pop
adc
inc
int3
aad
mov
dec
xchg
and
fsubrl
js
fsts
sub
jbe
lods
jge
imul
outsl
in
test
dec
dec
pushf
lahf
mov
pop
dec
xor
rclb
mov
sub
jmp
mov
or
movsl
insb
mov
out
and
jecxz
sbb
out
imul
jbe
ljmp
enter
add
or
jge
mov
rcl
push
dec
sbb
inc
and
xchg
cmp
jp
clc
outsl
sarl
push
mov
inc
xchg
jo
and
imulb
adc
dec
scas
sbb
xor
dec
and
jae
mov
add
lods
or
push
adc
jmp
in
popf
jns
lahf
pop
lock
or
mov
pushf
sbb
mov
gs
xchg
and
lahf
popa
xor
pop
adc
imul
cli
shll
loopne
mov
es
repz
add
aaa
sbb
jae
inc
hlt
push
lret
xchg
sub
icebp
jg
push
cmp
add
cmp
cmpsl
fadds
into
hlt
inc
scas
jg
mov
repz
inc
out
sbb
pop
shl
pop
daa
leave
lcall
jmp
add
fildll
jecxz
push
icebp
cs
arpl
and
js
cmp
sahf
das
int3
pop
cmp
mov
xchg
lret
mov
dec
dec
insb
xor
clc
mov
lea
push
jmp
loop
jle
and
push
mov
cwtl
cli
fcompl
xor
pushf
outsl
inc
test
mov
test
push
sub
arpl
lret
adc
ljmp
cmp
pop
test
sti
inc
cs
pop
and
notl
adc
or
cld
cmp
cmp
icebp
mov
push
push
or
xchg
fdiv
popf
jge
ss
dec
inc
divb
jg
adc
xchg
mov
pop
daa
addr16
int3
outsl
frstor
inc
xchg
lods
std
clc
sti
sbb
cmc
add
dec
clc
sbb
mov
mov
dec
adc
ret
scas
jne
mov
jp
lret
loop
pop
or
and
cmp
push
sub
jle
adcb
pop
clc
mov
xor
hlt
sub
inc
xchg
imul
jb
adc
aas
ftst
dec
jge
in
lods
loopne
xor
rorl
out
push
repnz
cmc
cmp
je
sbb
enter
in
pop
cld
lahf
push
pop
cmp
push
push
sti
iret
sbbb
push
jno
jns
xchg
mul
dec
mov
jne
negb
xchg
xor
push
pop
xchg
insl
insl
dec
and
rcll
ficomps
loopne
push
jns
push
inc
aad
jl
add
inc
dec
jecxz
andb
das
mov
fcoms
inc
fwait
gs
imulb
xor
jp
lret
push
jne
bound
movsb
pop
or
push
fcoml
sbb
lea
insl
sub
icebp
push
stos
lock
cltd
add
or
jo
pop
push
arpl
pop
dec
xchg
roll
cmp
das
loopne
iret
push
pop
in
jo
mov
in
frstor
shll
adc
sbb
mov
decb
inc
movsb
sarl
lods
in
jle
mov
pop
pop
mov
xlat
mov
clc
es
sar
popf
xor
jmp
cmp
inc
loop
add
add
push
xor
stos
sbb
mov
lahf
xor
sbb
sub
sub
and
mov
push
xchg
push
cmp
enter
pop
push
push
aad
aam
cmp
int
jmp
test
mov
orl
sub
pop
shll
out
stc
xchg
in
repnz
jno
adc
pop
xor
jne
sti
bound
push
fwait
cmp
lret
lods
mov
ja
adc
shlb
mov
pop
scas
inc
push
jne
xlat
in
or
sbbb
sub
insb
inc
daa
lods
leave
iret
outsb
test
push
subl
inc
sbb
sub
xchg
ds
ljmp
loope
lds
ds
mov
xor
leave
je
imul
pop
jge
pushf
jno
mov
rol
sub
fucom
jl
and
into
jae
or
loop
push
insl
pop
and
sbb
inc
sahf
stc
mov
call
pop
lods
int3
cwtl
mov
add
movsb
add
enter
pop
sub
inc
or
push
push
lea
and
mov
pusha
out
mov
mov
mov
dec
inc
mov
test
mov
stos
movsl
stos
cli
jl
jg
mov
push
mov
call
es
sbb
mov
and
mov
mov
or
jne
push
mov
push
sub
lcall
adc
and
stos
lret
push
ret
jecxz
dec
repz
sar
mov
mov
dec
push
mov
test
mov
add
rol
or
jo
stc
daa
adc
fildll
rcrb
es
cmc
mov
enter
leave
je
popf
std
lahf
jno
int3
int
add
pop
or
pop
repnz
jl
pop
dec
jno
dec
and
mov
mov
ret
imul
test
out
push
stc
sbb
fs
orl
mov
jmp
xchg
lret
ret
mov
push
jmp
and
imul
daa
ja
cmpsl
les
cmc
jns
sbb
cwtl
mov
inc
mov
test
or
out
ret
and
in
movsl
xchg
int
lcall
push
in
bound
ror
loope
xor
xchg
fdiv
push
cmp
ljmp
xchg
push
call
mov
js
aaa
cwtl
lea
idivl
and
aad
addr16
shlb
stos
or
mov
nop
insb
sbb
lcall
inc
stos
in
xchg
mov
adc
mov
mov
ret
stc
jmp
push
adc
into
scas
addr16
adc
cli
andl
jae
aaa
add
lret
je
test
shrl
and
sub
sbbl
js
mov
dec
push
insb
and
dec
lret
imul
ret
andb
sbb
add
movsb
cmp
fstl
popf
push
push
lock
cmp
imul
leave
adc
pop
out
mov
dec
inc
fidivs
jbe
push
xchg
mov
sar
or
cmpsl
sub
add
movsl
int
popf
pushf
gs
clc
push
or
push
sahf
ficoml
jnp
inc
inc
push
add
bound
testb
mov
pusha
or
lret
jg
pop
rcrb
inc
sbb
fs
mov
cmpsl
test
sub
adc
mov
rcrb
jo
jno
jp
push
insb
xchg
insl
das
fs
xor
ret
push
mov
subb
xchg
xchg
leave
shlb
fistps
xlat
sbb
jbe
mov
adc
xor
mov
mov
and
cmp
frstor
fcomps
cmp
into
pop
jb
dec
lcall
outsb
push
insb
je
cwtl
lods
mov
popa
sub
jg
dec
pop
sbb
mov
xchg
adc
inc
imulb
mov
sub
mov
mov
push
test
mov
js
cmp
mov
aam
pop
push
sbb
mov
stos
xchg
mov
fistpll
into
jge
std
jnp
hlt
das
lret
lods
or
lds
insb
aaa
inc
xor
fwait
outsb
je
or
sarb
adc
aam
aad
fldl
dec
cli
mov
sbb
jb
es
pop
jnp
sub
sbb
xchg
mov
das
out
daa
add
xor
jmp
lods
xor
adcl
xor
dec
adc
cli
sti
sub
or
je
fmull
inc
sbb
adc
xor
xor
cmp
inc
test
icebp
push
jo
sbb
mov
imulb
mov
fidivrs
test
loope
rcl
decl
jae
sub
sar
add
out
push
icebp
or
scas
test
inc
pop
inc
mov
fnsave
xchg
not
pop
mov
andb
mov
jecxz
pop
cli
dec
negb
mov
inc
lcall
fs
cmc
jne
lret
popa
mov
ffree
push
inc
add
mov
imul
xor
ljmp
or
cltd
xchg
inc
sbb
mov
sbb
mov
mov
lret
jae
mov
bound
dec
dec
out
mov
add
gs
fbstp
lret
pop
xchg
cmp
int3
out
enter
test
and
addr16
jecxz
cmp
icebp
pop
idivb
into
popf
and
jl
sbb
imull
sbb
je
ret
sub
leave
xor
sbbb
jge
sbb
cmp
mov
sti
pop
or
dec
dec
or
cmp
sbb
imul
sbb
clc
inc
jmp
pop
mov
xchg
pop
jl
pop
cmp
je
mov
call
sbb
cmp
out
movsb
cmp
call
add
mov
mov
scas
adc
adc
add
mov
popf
mov
arpl
lcall
ret
fdivrl
lods
insb
mov
or
cltd
mov
lock
outsl
add
jo
jge
mov
hlt
int3
dec
cmpsl
popf
or
mov
fsubs
test
add
rcrb
or
xor
and
pusha
lret
jmp
pushf
pop
lret
dec
xchg
jae
outsl
jne
mov
push
add
fs
inc
movsb
sbb
mov
fiadds
dec
mov
cmpsl
repnz
push
les
rorl
cwtl
sub
jle
xlat
insl
push
movsl
sti
bsf
mov
push
mov
stos
add
fwait
sub
idivl
adc
mov
or
and
sbb
mov
dec
xor
ja
push
sarb
xor
xchg
adc
xor
push
divl
lahf
fildl
outsl
jo
sbb
mov
push
dec
aaa
popf
daa
mov
pop
xchg
mov
and
mov
pop
push
loope
cmp
pushf
mov
dec
cmp
xlat
adc
adc
sub
fsubl
xchg
add
lods
addr16
adc
dec
fidivl
sbb
push
jge
insl
movsb
imul
pop
lret
sti
and
js
dec
std
mov
mov
add
push
xchg
push
lahf
roll
das
rclb
lahf
dec
add
dec
ljmp
sbb
popf
fildll
push
pop
fisttps
out
imul
inc
push
dec
outsl
cmp
xchg
jnp
and
push
dec
mov
call
sbb
mov
fistl
push
pop
xlat
and
fmull
sbb
arpl
mov
std
add
loopne
aad
out
std
sbb
dec
cmpsl
xor
add
adc
cmp
loopne
cltd
jl
push
pushf
adc
mov
mov
outsl
iret
fs
flds
out
std
cmp
out
fcoms
inc
mov
lock
mov
fs
or
cmp
rcll
jae
cltd
test
jge
fwait
scas
pop
adc
add
ds
xorb
push
clc
stos
sub
inc
cld
xchg
xor
cmp
gs
je
xchg
xor
addr16
loop
inc
je
adc
js
jo
es
call
xchg
shr
iret
cld
sbb
ret
xchg
sbb
andb
addr16
jle
mov
or
insl
xchg
pusha
jbe
fstpt
inc
xchg
mov
jb
mov
int3
pop
mov
pushf
pop
loope
and
dec
or
daa
sbb
adc
jmp
jmp
pop
lret
insb
fld
nop
cmp
mov
xorb
cmpsl
ljmp
bound
dec
adc
cmpsb
lds
popf
das
int
into
pop
mov
imul
add
sbb
add
mov
imul
ror
movsl
aaa
mov
repz
out
test
imul
or
xor
cmpsl
xchg
imul
pop
push
mov
xor
and
xchg
mov
je
mov
out
adc
inc
inc
or
pop
inc
test
loop
mov
xorb
pop
scas
push
aas
cwtl
std
pop
inc
lods
js
dec
lods
cmpsb
ficoms
jmp
jg
dec
sbb
shrl
insl
es
popa
push
dec
clc
cmc
add
rorb
jae
mov
and
cltd
bswap
lcall
push
sub
cmp
cmpsb
push
test
xor
lret
dec
jns
sti
add
rcll
xchg
sbb
xchg
ja
cmp
adc
clc
fmuls
sub
jno
push
or
cmp
add
dec
cs
test
sbb
in
sbb
sarb
daa
xor
adc
and
cmpsl
loop
cmpsl
push
or
dec
add
aas
push
sbb
add
lods
jbe
jle
cltd
xchg
fisubrs
lret
cmp
jecxz
inc
nop
mov
mov
dec
inc
test
ss
imul
daa
jg
lods
jns
adc
arpl
imul
mov
dec
jne
and
rorb
inc
arpl
bound
int3
shrl
push
std
cmpsl
mov
bound
add
push
add
mov
cmp
xchg
xor
inc
sub
mov
add
push
pop
inc
test
ss
popf
adc
inc
and
cmovg
sti
adc
cwtl
movsb
inc
add
icebp
fidivl
mov
jno
mov
sub
add
test
out
mov
les
xchg
xchg
mov
dec
insb
in
and
fcoml
loope
fcompl
mov
xor
xor
fcmovbe
mov
xchg
mov
es
add
movb
mov
push
jl
cmp
adc
push
dec
jo
adc
inc
mov
sbb
adcb
pop
iret
ret
pop
fabs
xchg
mov
pop
pop
cwtl
hlt
adc
andl
and
ret
cs
ja
imul
int3
jg
add
mov
push
xchg
push
and
jo
mov
mov
fistpl
mov
inc
ss
cmpb
cs
sub
push
sbb
and
mov
aam
xor
aas
stos
lods
lock
pusha
adc
dec
ret
cmp
pop
ja
and
cs
mov
inc
aad
repnz
aam
push
ss
push
inc
imul
bnd
lahf
test
mov
xor
adc
fwait
lahf
leave
rclb
sahf
xlat
iret
call
inc
mov
repz
jecxz
or
nop
mov
cmp
fisttpll
or
xor
mov
mov
jmp
pop
inc
arpl
hlt
pop
add
ds
mov
lods
popf
dec
sub
push
mov
jb
lret
test
jns
push
and
fisubrl
cmpsl
push
popa
mov
mov
xchg
pop
xchg
rcrb
scas
out
mov
pop
fmul
test
mov
jns
mov
push
adc
adcb
push
and
add
fidivrs
inc
sub
ffreep
shlb
and
in
or
fwait
ja
mov
sub
and
mov
jecxz
lret
pop
lcall
mov
test
push
jl
int
and
scas
loopne
jo
xor
movb
outsb
mov
add
aaa
fisttps
mov
pop
sub
hlt
jbe
mov
push
stc
test
push
sub
add
cli
test
push
sbb
inc
inc
test
nop
rcrb
jbe
nop
inc
or
sub
adc
in
iret
and
and
xlat
outsl
jne
ror
gs
int3
adc
rolb
sar
stc
das
lock
jg
xor
push
inc
push
pop
xchg
sbb
aas
fstps
or
cmp
xchg
sahf
es
pop
cs
andl
fwait
xchg
cmp
xor
or
mov
lock
mov
push
dec
popa
scas
or
repnz
mov
cs
mov
mov
stos
xor
into
outsb
sub
rorl
loope
int3
in
adc
jle
sub
add
mov
roll
lcall
mov
mov
jl
adcl
mov
add
or
pop
imul
in
cld
mov
push
aaa
dec
push
inc
sar
notb
les
mov
xchg
outsl
push
sub
mov
jmp
fsubs
ret
dec
dec
mov
mov
sbb
mov
imul
xlat
xor
adc
repz
adc
test
into
mov
in
loope
cmpsl
insl
jl
mov
repnz
hlt
aaa
aaa
test
mov
and
negl
fs
sub
popa
out
loope
or
inc
lcall
mov
adc
ficomps
cmp
xchg
mov
ss
and
mov
jge
sub
mov
and
incl
lret
rclb
out
push
push
push
sbb
arpl
adc
and
and
orb
inc
mov
outsb
or
pop
js
mov
mov
insb
pop
or
pop
push
or
push
jne
jnp
sbb
xor
pop
mov
adc
subb
jp
xchg
rcrb
lea
pop
and
cmp
xchg
dec
lods
ds
lods
xor
xchg
mov
xchg
jl
xchg
bound
roll
and
jns
pop
std
xchg
jno
cltd
pop
push
add
nop
mov
icebp
push
movsb
inc
xchg
add
enter
push
xor
push
addr16
mov
aam
mov
ret
xchg
add
xor
shlb
out
or
adc
rcl
clc
jns
lret
push
sarb
push
push
ret
xchg
test
mov
pop
rcll
cwtl
stos
lea
xchg
pop
lahf
push
das
in
ja
fimull
aaa
mov
sbb
shrb
add
pop
out
adc
or
aas
shl
faddp
icebp
cmp
mov
ljmp
int
and
jmp
xor
sub
xchg
push
push
lods
cld
adc
test
insb
dec
imul
jb
or
aas
jbe
push
js
filds
out
adc
icebp
sub
jl
sbb
in
arpl
or
inc
leave
sbb
mov
mul
cs
or
iret
pushf
sbb
dec
add
jle
es
mov
push
mov
xchg
lahf
sbb
sbb
roll
pop
mov
pop
and
cmp
xor
mov
pop
inc
cmp
sub
xor
cmpsl
or
fstps
mov
adc
jmp
fidivrs
jno
aad
sub
mov
int3
insb
jo
mov
in
sahf
shll
push
rcl
jo
mulb
leave
clc
mov
pop
inc
jb
pusha
cs
gs
clc
cmpsb
mov
xor
inc
or
lret
mov
mov
inc
testb
inc
lcall
mov
orb
fisttps
xchg
pop
jp
mov
sub
out
mov
jp
out
push
add
sub
mov
dec
mov
rep
fdivl
mov
jnp
xor
mov
btc
fiadds
lock
and
rcll
lcall
sub
ss
sub
imul
xor
push
mov
jae
mov
jg
mov
sub
out
sti
enter
repnz
sti
xor
push
pop
inc
mov
out
in
cmp
inc
jge
cmc
jge
push
ljmp
out
dec
push
ret
pop
aam
push
cmp
es
pop
jne
jge
pop
sub
pop
pop
test
and
push
sarb
repnz
in
xor
ljmp
add
adc
mov
or
cwtl
outsb
lret
inc
insl
mov
addr16
sub
cmp
out
jmp
andb
xchg
and
pop
pop
cwtl
jecxz
std
sub
cltd
sbb
push
cltd
xor
aad
mov
aad
inc
mov
mov
pop
jno
push
mov
xchg
push
movsb
pop
and
mov
movsb
add
adc
sbb
test
mov
loop
ja
loopne
ja
cld
aas
and
inc
ds
sbb
movsl
adc
pusha
sub
or
outsb
mov
shrb
lods
mov
push
out
add
jno
outsl
add
xlat
xchg
sbb
fistl
and
sub
cmp
cmpsb
inc
mov
sahf
sti
xlat
xchg
jle
cmpsb
arpl
enter
fbld
or
sbb
pop
mov
fildl
pushf
addl
cmpsl
push
add
jbe
push
fsubrs
pop
mov
xor
mov
mov
mov
stc
imul
les
subb
fildl
push
bound
fisubs
cmpsl
dec
or
push
aas
das
out
dec
out
xchg
shl
imul
mov
fcomps
mov
push
stc
movsb
lcall
cmp
pop
mov
sahf
mov
xchg
adc
sub
cmpb
testb
imul
cli
adc
mov
adc
jnp
incl
sub
xor
pusha
iret
inc
or
inc
mov
mov
stos
test
mov
gs
iret
std
movsb
je
lds
jnp
push
call
pop
inc
aas
jecxz
mov
sti
cs
add
add
xchg
jp
lea
enter
rcrb
adc
mov
or
js
and
push
movsl
sbb
xor
dec
xchg
cmc
out
cmpsl
rclb
sub
addr16
xor
and
fwait
dec
jbe
ret
testl
jmp
mov
jo
clts
push
daa
popa
outsb
dec
xchg
clc
add
lock
sbbl
mov
xor
inc
jo
ret
stos
outsl
repz
pushf
ss
xlat
inc
ljmp
mov
xor
inc
sarb
inc
jecxz
mov
sbb
adc
xor
ret
dec
js
loop
shl
scas
inc
sub
fstl
mov
ds
sbb
inc
inc
jecxz
cs
arpl
xchg
cmp
mov
sbb
mov
push
push
mov
or
jecxz
xchg
xor
fnsave
orl
jl
aaa
out
shrb
ror
jp
movsl
dec
jb
xor
les
sub
mov
add
mov
inc
mov
mov
hlt
hlt
pop
xchg
leave
jmp
mov
test
and
nop
add
add
push
xor
mov
pop
push
pop
jmp
test
or
aam
mov
adc
jp
lods
lcall
add
or
xchg
shrl
push
push
or
cli
ja
fcmovu
fs
data16
pop
sub
inc
cmp
std
leave
cmp
mov
mov
xor
sbbb
and
out
or
fs
arpl
jmp
lret
xor
scas
sbb
sub
push
cs
fsincos
scas
inc
dec
and
test
mov
inc
bound
adc
push
mov
neg
cmc
daa
popa
or
cmp
mov
adc
inc
xor
lret
rcrl
pop
imul
dec
dec
sbb
mov
add
out
loopne
cmp
pop
sti
call
dec
xchg
fwait
aam
mov
icebp
dec
hlt
jge
inc
push
js
dec
pusha
iret
push
push
inc
popf
cmp
sbb
jae
cmp
cmp
je
mov
cwtl
push
pushf
cmp
cwtl
and
mov
pushf
lcall
sahf
les
lock
lods
sub
inc
inc
sub
jmp
lods
ret
push
or
pushf
sbb
jle
lock
mov
and
rcll
popa
lret
test
jge
dec
shlb
xor
and
mov
add
dec
xor
sarl
add
repnz
jecxz
sub
xor
mov
xchg
lods
pcmpeqb
and
pop
scas
mov
lret
jnp
shlb
aam
mov
lcall
movsb
adc
xor
in
das
mov
mov
cmp
sahf
mov
and
sbb
inc
nop
js
mov
adc
mov
push
fildl
lahf
test
imul
cmpsb
mov
pop
mov
lock
add
rolb
rcr
iret
int
sub
mov
xchg
xchg
sbb
xor
add
xchg
cmpsl
xchg
cmp
and
jo
divb
scas
fists
into
mov
das
sahf
ret
pop
jge
sub
pop
popa
int
jns
popf
mov
cmp
jno
iret
pop
out
add
sub
dec
sub
gs
into
in
lock
cli
insb
pop
pop
js
dec
data16
stc
lret
push
dec
pop
mov
sub
outsb
lahf
and
leave
out
js
cwtl
or
fldenv
cmp
sub
stc
sbb
jno,pn
adc
ffreep
jmp
adc
in
fnstenv
testb
xchg
int
xor
lock
adc
setno
pop
push
pushf
pop
jp
adc
pop
sbb
popa
xchg
test
das
xor
or
iret
cmpsb
fabs
rcrl
bound
xlat
xor
mov
push
das
aas
sub
fmul
sbb
cltd
enter
imul
leave
les
pop
inc
mov
mov
cmp
dec
sbb
dec
xor
sbb
xor
shlb
push
arpl
nop
in
pop
out
bound
enter
fisubrs
sub
rorl
mov
fwait
jge
or
sti
sbb
xchg
sbb
test
shlb
add
xchg
inc
sub
xchg
mov
xor
add
rclb
or
jbe
add
or
loopne
mov
dec
dec
pop
jb
sub
jne
mov
nop
fwait
jnp
leave
push
inc
mov
pop
inc
test
test
sbb
mov
and
and
in
dec
popa
mov
rclb
bound
rcrb
ret
cmc
ss
push
mov
addl
jnp
sahf
or
cli
fndisi(8087
jge
cwtl
xor
xchg
cmpsb
in
dec
dec
pop
cwtl
outsl
or
sti
sbb
in
pop
daa
stos
imul
dec
cmp
lret
fildll
or
xchg
jns
jp
push
pop
aas
mov
xchg
and
mov
mov
ret
lcall
out
loopne
and
dec
jo
mov
and
test
movups
mov
stos
dec
dec
sbb
clc
xorb
jne
pop
ds
push
pop
mov
enter
popf
sub
mov
sbb
pop
pop
pop
sub
popa
cmp
pop
jmp
aad
icebp
fmuls
pop
or
dec
cmp
aam
cmp
pop
mov
outsb
inc
sar
mov
sub
and
scas
mov
sub
and
sbb
pop
cmp
xor
mov
or
popw
test
inc
dec
pop
inc
cmp
cmp
xor
bound
and
aam
mov
lret
mov
fsubrl
jns
lods
dec
iret
mov
out
dec
outsl
lea
je
rcrl
out
repnz
es
push
jg
pushf
gs
pop
int
add
adc
cmp
cmpsl
popa
outsl
mov
push
fimull
xor
push
mov
sbb
ret
pop
xchg
mov
sbb
mov
sub
icebp
push
hlt
xor
movsl
sub
mov
jp
cmp
sti
lret
adc
add
aam
fucomip
shlb
jg
loope
gs
lods
mov
inc
imul
shufps
mov
inc
xorb
push
adc
sahf
fwait
call
dec
add
pop
mov
mov
pushf
mov
xor
ror
mov
add
adc
adc
mov
jae
jmp
enter
negb
sub
imul
push
ficomps
mull
lret
push
insl
xor
add
aam
push
xor
ds
rcll
adcb
mov
cltd
rcrb
xor
jg
jl
sub
stc
add
sub
jno
jecxz
dec
or
outsb
cmpsb
push
ret
pop
mov
jbe
addb
pop
lret
add
sti
add
mov
or
in
mov
insl
inc
mov
mov
sbb
lock
jns
adc
icebp
inc
ljmp
aas
movsb
sti
mov
push
in
and
movsb
fstps
adc
mov
pop
pop
cli
clc
pop
lcall
mov
cltd
fistpll
imul
inc
cmp
add
testb
sub
mov
sub
mov
sbb
sbbb
jae
clc
fwait
push
jge
aas
out
fcoml
lcall
adc
idiv
aad
or
nop
scas
dec
or
jecxz
mov
jnp
iret
push
fsubl
inc
cli
sbb
xor
loop
inc
sbb
push
cmp
jne
rclb
sub
mov
pop
mov
mov
lds
jge
adcl
arpl
pop
adc
lea
dec
pop
pop
call
into
inc
scas
addl
sbb
test
sbb
add
cmp
mov
test
mov
pop
mov
loope
jns
mov
ja
mov
dec
dec
sbb
ljmp
cmpb
ja
jo
cltd
cmpsl
xor
xchg
cmp
inc
jns
aam
pushf
lods
mov
inc
mov
rcrb
and
cmpsl
mov
and
jge
clc
insl
ja
push
pop
and
cmp
jge
mov
int
clc
add
sti
xchg
outsb
jno
fstpt
push
nop
inc
cmp
cmc
sbb
sbbb
sub
add
repz
or
in
int3
cmc
and
imul
adc
mov
xchg
jg
jmp
fsts
mov
fisttpll
mov
xor
and
sub
cmpsl
cmpsb
jg
xor
xchg
leave
addb
inc
testl
adc
cmc
out
fstpt
dec
xor
mov
sub
cmp
xor
pop
lahf
lea
cmp
or
insb
subl
push
jb
sbb
pusha
scas
aas
jns
cmp
insl
test
jp
jge
push
aam
repz
add
sbb
mov
mov
and
jne
test
js
fidivs
mov
cwtl
repz
dec
sub
imul
lret
pop
pop
gs
aas
addl
lds
jle
cmp
outsb
mov
insl
hlt
lods
in
cltd
xlat
aaa
cmc
jno
ficoms
push
notl
rcrl
ret
es
pop
inc
movsl
out
fistpll
stos
sub
ficoml
add
test
lock
daa
jne
add
mov
inc
inc
pop
out
mov
test
pop
dec
inc
shr
leave
cmp
int
inc
hlt
sbb
cmp
mov
fistps
adc
push
mov
dec
push
mov
scas
push
xor
lahf
or
mov
add
add
cmp
ljmp
ret
jl
imul
aas
xor
mov
push
mov
dec
pop
lods
xor
es
out
jno
mov
aad
dec
icebp
push
sbb
push
xchg
cmp
jg
inc
scas
mov
mov
movsb
mov
cmp
xrelease
loop
jae
fimull
and
ja
xchg
outsb
mull
sbb
dec
jne
notb
test
ljmp
scas
or
bound
xchg
mov
mov
repz
notl
iret
push
ret
rorb
adcb
lods
xchg
addr16
adc
inc
xlat
or
sarl
scas
or
fwait
mov
xchg
mov
xchg
int
xchg
sbb
cmp
xchg
mov
lret
xor
lods
add
fisubrl
xchg
sahf
mov
xor
jno
push
sub
pop
scas
mov
sub
pop
xor
inc
call
stc
lret
addr16
pop
outsl
mov
and
add
sub
add
call
push
in
jb
push
jecxz
xchg
ret
icebp
ss
mov
mov
rcrb
sbb
sti
imul
enter
push
cld
mov
fnstenv
mov
lods
xor
mov
sub
push
xor
inc
int3
adcl
jmp
and
mov
scas
dec
lcall
test
adc
inc
lea
xor
push
inc
pop
cmp
aam
fs
mov
call
cmp
mov
xor
mov
and
test
push
fdivs
mov
fcoms
imul
pop
popf
sub
aaa
sub
add
or
sarl
lock
cmp
or
fidivrs
dec
std
minps
lea
outsl
mov
insl
jge
push
test
jg
in
into
push
mov
rcrb
xlat
mov
sbb
jle
mov
stc
lock
xchg
fwait
scas
inc
addb
repnz
ffree
cs
sbb
div
sbb
inc
fdivrp
std
push
jge
test
in
and
in
push
aas
sbb
repnz
sub
xchg
daa
nop
in
lds
sub
cmp
enter
ja
pop
leave
outsb
loopne
sti
ds
fwait
enter
aaa
mov
jne
call
fs
cmpsb
cmp
data16
sbb
gs
inc
pop
scas
test
mov
cld
cmp
and
shrl
mov
dec
jno
in
ficoms
dec
in
cs
sbb
fwait
mov
stos
pop
or
nop
mov
mov
inc
outsb
std
lock
incb
xchg
push
mov
jg
shlb
fmuls
inc
test
arpl
mov
or
dec
mov
inc
arpl
adc
lods
adc
repnz
push
movsb
ja
xlat
aad
lods
mov
addr16
jmp
sbb
cmp
mov
inc
jae
jecxz,pt
push
add
mov
and
or
aas
cmp
jns
mov
stos
into
loop
call
std
in
sti
inc
xlat
scas
cmpsl
mov
dec
adc
inc
mov
je
jmp
inc
xchg
pop
je
dec
int
sub
cmp
iret
repnz
xchg
xchg
mov
adc
icebp
inc
push
pop
mov
addr16
mov
sbbl
inc
ficoml
test
sub
push
xchg
loopne
inc
stc
mov
loope
stc
imul
ret
ss
sub
mov
popf
in
fnstcw
addr16
fstpt
loopne
out
pushf
repz
popl
fistl
cld
inc
jo
mov
addb
mov
out
cmp
inc
sarl
lea
push
shll
and
add
sub
shlb
sub
es
enter
mov
sub
xor
fistps
ja
adc
mov
adc
dec
xor
stos
pop
popf
pop
pop
in
stos
jmp
adc
mov
cmpsb
cmp
lods
and
rcll
pop
jecxz
cltd
inc
adc
std
cmp
cld
mov
cli
out
lret
int3
jecxz
and
mov
jo
out
in
add
cmp
ja
data16
cmp
hlt
inc
xchg
std
jge
scas
sub
add
xchg
out
ret
mov
mov
cmp
inc
stos
mov
adc
inc
lret
hlt
outsb
mov
adc
hlt
icebp
repnz
pop
pop
or
scas
enter
jno
aaa
int3
or
cmpsb
dec
push
add
push
insb
adc
xor
incb
pop
cmpsb
loop
add
fucomip
dec
mov
std
outsb
movsb
mov
cmp
add
hlt
movsb
cmpb
push
loope
sbb
stos
das
lods
pop
cmpsl
lahf
into
sbb
ds
fldl
shl
and
xchg
adc
jbe
lods
mov
cmpsl
or
inc
xchg
xchg
fisubl
and
jecxz
lcall
cmp
shlb
xchg
jl
adc
push
push
cld
and
add
xlat
mov
xchg
bound
mov
cmp
stos
jo
mov
mov
out
mov
cwtl
dec
das
add
jne
pop
sti
cmc
inc
mov
ljmp
and
jne
lods
scas
dec
pop
jge
push
xor
arpl
pop
ret
fiaddl
outsl
or
mov
mov
cltd
lcall
cmc
out
mov
int3
jb
mov
push
out
fadd
bound
ljmp
or
loop
dec
iret
adc
inc
pop
cwtl
lahf
mov
lods
into
sbb
cld
test
xor
es
jnp
out
data16
jmp
jb,pn
cmp
add
jge
dec
and
xor
jae
pop
dec
cwtl
push
pusha
movsb
test
fwait
bound
push
dec
xor
xchg
mov
sbb
iret
cmp
sbb
cmc
cmp
pop
mov
mov
call
xchg
dec
addr16
lods
or
mov
in
or
loope
shll
insl
xchg
movsb
testl
xchg
sbb
lea
movsl
jb
inc
and
push
hlt
stos
mov
jl
xchg
adc
xor
inc
adc
push
fsub
inc
cmp
outsl
jnp
iret
js
sub
test
sahf
fsubl
sub
rcll
mov
mov
jbe
xchg
jo
lds
test
dec
adc
jle
addl
push
sub
add
fimuls
lret
inc
adc
jmp
sub
sub
mov
fcomi
push
inc
shl
out
jmp
mov
mov
add
int
movsl
fdiv
cmp
fbstp
jmp
clc
sbb
fisttps
xlat
pop
push
push
cltd
xchg
cmc
mov
xchg
shl
sbb
xrelease
ljmp
mov
mov
pop
xchg
cmc
jnp
outsl
lahf
mov
mov
adc
sub
test
push
mov
in
in
daa
xor
test
aam
push
test
sahf
pop
push
ljmp
daa
icebp
icebp
aaa
mov
shrl
mov
clc
jl
loop
mov
das
and
je
jmp
sti
fsubrs
mov
out
push
stos
mov
dec
mov
ret
xor
mov
mov
daa
jg
xorb
into
fistpll
jae
hlt
dec
arpl
divb
mov
pop
decl
lock
movsl
cld
insl
xchg
mov
test
pop
dec
js
pop
jl
mov
mov
daa
shll
add
pop
subl
dec
ret
add
stos
fimull
or
mov
add
ja
sub
icebp
mov
push
fs
cmpsl
fldenv
sbb
xor
pop
es
mov
push
js
bound
inc
cmp
inc
xor
repz
lds
and
das
sub
or
pop
cmp
mov
jbe
jbe
and
pop
sahf
jno
push
call
mov
sub
mov
sub
sbb
les
add
leave
incb
test
xchg
ja
out
scas
or
sub
stos
fdivr
pop
repz
testl
stos
lahf
loop
rorl
sub
fsubrs
jle
idivb
adc
outsb
pop
js
xor
pusha
ja
and
decl
in
das
cmpsl
fstl
sarb
mov
mov
rol
inc
aaa
les
mov
sahf
inc
bound
fdivrs
mov
jge
or
jne
add
sbb
push
out
lret
mov
and
incb
insl
clc
imul
cmp
idivb
dec
pop
pop
mov
push
fwait
stos
fdiv
clc
jl
jp
in
imul
out
dec
outsb
push
divb
rolb
fsubrp
cmp
iret
lock
xor
ljmp
and
ja
pusha
push
cmp
mov
movsl
or
in
xchg
imul
push
ds
dec
popf
in
andb
inc
adc
cmp
call
jns
ret
adc
dec
xchg
arpl
mov
push
popf
stc
in
pop
jge
leave
dec
hlt
cmp
mov
pop
mov
ret
mov
into
mov
sub
es
adc
xchg
mov
movl
jge
push
scas
pop
or
enter
push
js
repz
clc
cmp
jmp
mov
xor
and
add
and
lea
cld
adc
mov
dec
adc
mov
movsb
mov
sahf
adc
lds
push
dec
jae
aas
mov
push
rolb
sbb
push
cmpsl
adc
insl
lahf
dec
inc
jbe
cld
or
shll
fs
incl
lock
push
inc
dec
cmp
stc
hlt
icebp
mov
inc
pushf
fldt
inc
fiaddl
lods
or
pop
bound
insb
jl
mov
jae
ret
test
fsubrl
aam
popa
mov
sbb
adc
mov
push
in
pop
mov
sbbl
stos
pop
or
cmpsl
outsb
and
call
ds
and
es
push
mov
sbb
icebp
jae
and
mov
js
ds
dec
loope
xchg
popa
cmpsb
lock
inc
shl
pop
fmuls
jnp
insl
push
xor
ss
add
shld
popa
dec
mov
aaa
int3
out
add
cltd
mov
jae
lret
cld
xchg
popf
cwtl
enter
pop
sbb
dec
push
movsl
es
dec
bound
sub
xchg
cmpsl
jae
cld
mov
outsl
inc
adc
mov
es
push
ret
mov
into
push
push
push
adcl
push
nop
iret
mov
bound
inc
nop
into
cmp
mov
mov
or
sub
fimuls
test
loopne
ja
xchg
push
xchg
dec
je
aad
out
jle
adcl
push
rcr
lcall
addb
add
loop
scas
pop
mov
shll
mov
in
jle
movsl
test
addr16
in
loop
stos
sbb
mov
pop
add
xlat
push
movsb
cmp
cld
lahf
mov
add
sub
jo
sbb
test
test
popa
and
cltd
xor
jo
and
fcomp
dec
aam
pop
pushf
mov
out
lea
mov
or
pop
or
stc
ficomps
mov
push
scas
je
enter
pop
repz
shlb
dec
pop
cs
outsl
test
adc
roll
orl
outsl
in
sub
xor
mov
cmp
mov
popa
in
xchg
xchg
or
push
rorb
adcl
pop
in
in
adc
das
test
mov
sarb
pusha
push
icebp
jmp
push
call
xor
scas
test
lods
push
pop
xor
push
or
dec
ds
popf
mov
vpermw
and
cmp
out
add
push
gs
sbb
push
push
enter
jb
push
movsb
loope
mov
pop
dec
je
ja
sub
sub
inc
rcpps
cmp
sub
or
mov
mov
and
pop
orb
pop
inc
cmpsl
rorb
adcb
mov
inc
sbb
lahf
push
pop
and
ret
sbb
xor
scas
test
or
nop
adc
nop
cmc
fstpl
sbb
and
sub
inc
xchg
adc
or
es
rcrb
mov
shll
mov
lret
cmpsl
and
mov
push
or
sbb
lret
inc
xorb
orb
xor
inc
cmp
pop
jp
fincstp
loopne
sbb
shrl
loope
shl
cmp
sub
xchg
fimull
movsb
jg
fdivr
pusha
push
xchg
pop
lret
inc
jmp
orb
mov
push
pop
mov
dec
fisubl
xchg
xlat
inc
stc
repz
idivb
mov
testb
in
nop
pop
cld
mov
push
push
rorb
jp
mov
xor
daa
ja
loop
add
cmp
mov
aas
test
jg
pusha
insl
sbb
je
dec
push
outsb
or
push
mov
lea
inc
shl
mov
ss
jmp
jae
sbb
xchg
mov
push
xlat
stc
mov
sub
fisttpl
cmp
shll
out
test
add
push
adc
setb
push
stos
xor
stc
jne
pop
push
pusha
xor
add
push
sti
push
sbb
inc
sub
scas
enter
mov
mov
mov
out
int3
imul
cld
jmp
gs
je
sbbl
pop
fidivrl
push
aam
rolb
pushf
jl
cs
dec
js
addr16
lahf
fidivl
cmp
mov
cmp
shl
ljmp
push
stc
test
jnp
addr16
pusha
int3
aam
jecxz
out
fbstp
aas
jnp
adc
fildll
add
sysret
clts
adc
repz
sub
mov
outsb
or
pop
stos
mov
jp
lock
cmp
jmp
adc
js
mov
mov
iret
push
or
fs
into
loope
pop
mov
in
or
mov
xchg
xchg
insb
cmp
pop
sub
dec
cltd
in
mov
lahf
sbb
jp
ljmp
add
adc
add
ror
xor
add
add
mov
dec
jmp
pop
push
mov
fimull
and
adc
daa
push
lahf
repz
inc
aas
lea
insl
ret
xchg
ljmp
enter
ret
imul
jge
jge
nop
dec
imul
mov
addl
mov
cmpsl
leave
fdiv
jb
aas
fisubs
dec
mov
cmpsb
push
inc
jg
mov
pop
push
pushf
fs
jmp
jmp
aaa
shlb
dec
mov
mov
test
jb
mov
out
jmp
jmp
or
cltd
in
iret
outsl
rolb
pop
fwait
push
pusha
xchg
xor
xchg
mov
iret
lret
sti
xchg
std
dec
push
jge
or
jns
and
lock
icebp
xchg
push
icebp
bound
jl
movsl
insb
sbb
aad
pusha
jbe
push
mov
mov
in
je
rorb
jecxz
add
xlat
add
dec
cltd
adc
out
adc
dec
sti
addr16
mov
bound
jecxz
jge
mulb
sahf
sbb
loope
daa
cmp
cmpsb
sbbl
push
xor
xor
lahf
mov
fdivl
push
or
and
jl
or
mov
xor
lcall
popa
mov
loop
sahf
sbb
dec
sarl
fdivrp
or
cmpsl
cmp
inc
or
out
sti
push
std
aam
out
scas
mov
pop
in
int
push
mov
movsb
lds
je
pop
mov
xchg
dec
out
sahf
sub
rcrl
dec
pop
pop
xchg
mov
lock
cltd
pushf
mov
sub
pop
repz
mov
repz
out
repz
sub
fmuls
into
scas
xchg
dec
loope
addb
repnz
cmc
stc
xchg
and
or
push
push
mov
and
pop
in
lahf
push
pop
mov
fnstenv
mov
xchg
pusha
fcmovnb
xchg
scas
inc
dec
jbe
xchg
add
add
scas
scas
out
mov
mov
bound
ja
xlat
mov
fstp
xchg
add
jae,pt
push
out
xor
loopne
xor
pop
mov
fistpl
pushf
xor
leave
cmp
test
mov
pop
int3
push
rcr
jnp
or
inc
test
fnstcw
cmc
jno
sub
jnp
lock
cld
movsb
lock
xor
push
cs
jle
rorl
shrl
je
push
nop
jecxz
and
jbe
fwait
adc
inc
xor
or
and
push
or
and
ljmp
pushf
sahf
add
sub
in
repz
lahf
movsl
lret
or
xchg
mov
and
xchg
push
out
fimull
mov
add
inc
ja
pushf
cwtl
shll
cltd
iret
lahf
cli
sub
pop
out
out
or
cmp
xor
jae
sub
mov
fstpt
fwait
hlt
shlb
mov
push
push
cmp
clc
pusha
lds
scas
mov
cwtl
outsl
repz
inc
inc
pop
test
mov
call
or
sbb
pop
ret
iret
cmc
add
xor
std
inc
bound
lret
adc
or
pop
add
xchg
call
mov
popa
sbb
adc
cmp
mov
add
mov
aaa
inc
xchg
clc
or
mov
out
cmpsb
int
sbb
rorl
push
cwtl
jno
into
cs
inc
das
dec
js
scas
cmp
mov
test
inc
push
gs
lods
mov
mov
sub
mov
loop,pn
adc
xor
aam
mov
push
cmp
push
cmp
inc
mov
fchs
out
ficoml
std
lock
dec
loope
inc
push
push
push
or
jbe
mov
sub
cwtl
pop
cltd
pushf
adc
stos
insl
add
push
scas
mov
xchg
pop
or
jl
fisttpl
addr16
fiaddl
gs
mov
mov
fwait
adc
sub
iret
addr16
sub
xchg
test
iret
in
mov
pushf
inc
fcoml
decl
sub
cmpsl
shrb
and
inc
fnstenv
xchg
cmpsl
call
nop
shrl
stos
mov
xchg
mov
add
pop
setl
inc
into
push
push
loop
sahf
and
js
and
mov
jge
test
testl
pop
jno
jmp
mov
fildll
bound
and
pop
mov
int3
add
dec
inc
lret
outsl
jp
outsl
pop
sbb
or
mov
decl
push
and
mov
insl
ficoml
shlb
mov
push
and
mov
jl
ficoml
pusha
jp
faddp
scas
adc
jb
test
aam
call
btr
int
lods
vprotq
dec
lret
inc
sub
mov
fnsave
into
pop
xor
dec
mov
sarb
les
sbb
cmp
jb
lods
nop
mov
call
sbb
pop
popa
out
into
outsb
xrelease
pop
lock
test
movsl
pop
ljmp
push
sub
and
bound
mov
jle
aad
jecxz
arpl
imull
pop
sub
ja
and
mov
fwait
das
mov
add
jecxz
rcl
xchg
cld
add
sbb
in
je
test
xchg
out
test
and
imul
sbb
dec
or
add
inc
nop
or
jnp
lahf
mov
jl
xchg
test
sbb
jb
insl
shll
mov
inc
mov
adc
imul
hlt
pop
mov
pusha
pushf
jnp
push
idivb
icebp
insl
std
mov
out
test
mov
negl
nop
clc
cltd
push
sbb
rorl
leave
and
dec
pop
pushf
push
mov
aad
fldl2e
je
mov
stc
or
testb
lcall
jecxz
mov
sub
movl
icebp
jmp
repnz
cmp
mov
mov
and
cmp
es
pop
popa
subl
pop
mov
insl
gs
sti
pushf
mov
jg
pop
adc
push
add
orb
repnz
dec
sbb
pop
xor
jmp
push
movb
lea
out
es
mov
mov
and
inc
outsl
adc
xor
pop
or
jbe
jmp
cwtl
sub
jg
stos
inc
push
popl
nop
mov
rcrb
adc
mov
mov
sbb
ret
test
or
adc
mov
repnz
push
jnp
ss
pop
arpl
or
mov
pop
hlt
xchg
sub
dec
out
inc
inc
ljmp
dec
adc
call
stos
push
xor
mov
cmp
fxch
push
pop
lahf
test
test
push
xor
jmp
pop
cmpb
addb
fists
push
mov
pop
in
and
dec
sti
jmp
xorb
fs
cmp
shl
dec
popa
cmpsl
dec
das
pop
and
mov
loop
lret
cmc
and
mov
sub
mov
adc
into
mov
leave
adc
test
jl
sub
or
pop
rcrl
jb
push
sarl
jnp
sbb
sub
ja
comiss
rorl
and
into
fs
test
std
js
mov
and
in
jbe
shl
inc
xor
rorb
pop
or
movsb
push
lea
jg
pushl
cmp
inc
pop
hlt
lods
cmp
jle
cmp
sub
push
jne
out
lret
mov
sub
push
int
push
pop
or
jmp
lcall
cmp
repnz
imul
sub
lock
clc
and
mov
mov
ret
mov
and
push
into
sub
or
xchg
rorb
out
jo
dec
aas
ljmp
cltd
xchg
lods
adc
jnp
stos
aam
xchg
test
ljmp
add
inc
psllw
mov
insb
adc
dec
leave
cmp
xor
or
out
jbe
pop
cmpsb
clc
adc
jecxz
adc
shrb
scas
add
push
xor
pusha
sahf
out
stos
aad
push
inc
test
xor
or
sbb
adc
test
add
dec
sbb
push
adcb
fwait
xlat
or
jmp
cmc
adc
popf
test
mov
jns
cli
inc
jle
out
repz
ds
inc
sub
xchg
pushf
scas
sahf
xchg
cs
je
pop
enter
sub
jb
mov
mov
jecxz
or
inc
add
pop
fdivl
jnp
icebp
gs
sti
xchg
pop
jecxz
cmp
sub
pushf
cwtl
shl
jb
or
jnp
cmp
int
imul
or
das
test
clc
add
fcom
div
cmpsb
xchg
or
mov
or
cli
push
dec
sub
jg
and
jae
neg
sbb
movsb
pop
popf
out
pushf
mov
pop
aaa
test
jg,pn
or
push
rol
subb
pop
leave
sub
xor
push
std
jge
dec
imul
enter
cs
movsb
adc
add
ja
ljmp
adc
popa
mov
popf
inc
mov
mov
jno
add
push
repz
fistl
mull
mov
dec
aam
lods
subl
pushf
add
sub
movsb
call
xor
jne
loopne
out
adc
mov
add
push
out
xchg
test
movsb
fildl
jne
shlb
sbbl
sub
pushf
lea
and
sbb
pop
push
jle
xor
xor
rcr
mov
mov
ja
testl
pop
or
pusha
fs
repz
lahf
sbb
jbe
in
mov
mov
enter
ret
cmp
cmc
inc
inc
ror
mov
mov
jb
add
scas
push
sbb
push
mov
fidivrl
stos
in
loop
mov
cmp
ficoml
add
fldl
fstps
ds
daa
jmp
jbe
pop
jg
cmp
dec
les
sub
sbb
nop
in
xor
shrl
movsl
dec
dec
repz
pop
cmc
test
popa
xchg
movsl
js
fwait
jge
fldenv
pop
aaa
stos
pop
xor
nop
and
shl
or
out
incb
fdivl
ja
xchg
or
daa
stc
xchg
adc
sub
pop
cmp
jnp
out
inc
xorl
int3
lret
mov
das
and
into
mov
push
adc
jge
in
testb
add
sti
jp
insl
inc
inc
push
mov
mov
xchg
pop
push
lock
sbb
or
subl
xchg
arpl
test
shrb
test
add
outsl
pushf
or
xchg
test
mov
int
aad
mov
hlt
mov
dec
lret
insb
dec
fisubrs
out
ficoml
xor
hlt
pop
add
jb
punpckhbw
mov
cltd
lds
mov
rcrl
outsb
inc
push
mov
lret
jnp
daa
ja
xchg
jno
insl
or
push
pop
inc
push
shr
rorb
mov
iret
call
aas
mov
rol
sbb
mov
push
fwait
sub
daa
sub
cmp
popf
dec
pop
fsubp
jle
fwait
in
lods
jno
imul
cmp
aad
ficoms
and
pop
or
sbb
dec
repz
cmp
cld
cmc
cld
pop
cmp
mov
sbb
loope
inc
sbb
sub
inc
and
lcall
and
add
and
in
lahf
dec
loope
into
loop
push
ja
lock
faddl
loop
fistps
fcmovbe
aad
lcall
shrb
jbe
call
pop
xor
or
aas
mov
ja
js
mov
repnz
or
push
xor
pusha
add
and
sub
icebp
lock
push
cld
je
jo
adc
mov
jnp
scas
or
mov
or
push
stos
or
mov
lea
mov
movl
scas
cli
mov
mov
test
xor
dec
mov
adc
fldt
mov
mov
stos
mov
mov
dec
dec
stc
inc
shlb
or
add
inc
or
pop
testl
dec
outsb
movsb
jge
adc
pop
insb
push
mov
mov
in
into
adc
push
outsb
in
pop
and
rclb
push
insb
xchg
and
push
or
int
dec
mov
sub
daa
movsl
pop
lds
mov
sbb
dec
inc
inc
xchg
in
add
rcr
inc
inc
movsl
inc
cmpsb
pop
lahf
adc
fiadds
dec
jmp
cmp
jg
ljmp
in
mov
scas
ret
push
movsb
cmp
or
xor
or
push
mov
or
pop
rolb
jb
dec
add
xlat
nop
mov
test
stos
mov
adc
jbe
jg
fimull
subb
inc
aaa
fiadds
jns
cmpsl
cmpsl
mov
pop
test
mov
adc
sbb
push
add
xor
mov
pop
add
loope
jmp
mov
push
mov
cmpsb
xchg
movsl
fstpt
inc
and
stos
mov
ror
or
inc
aas
js
in
popa
xor
inc
dec
adc
aas
imul
jecxz
fnsave
mov
mov
test
sub
mov
mov
popa
in
lea
inc
lea
push
add
cmp
shl
and
les
or
mov
inc
shll
add
jp
or
mov
loopne
add
mov
in
fcmovnb
js
xor
and
rcr
sub
push
aad
push
rcrb
loopne
inc
test
in
bound
xor
dec
dec
sub
xor
shl
push
push
cmp
inc
repz
jb
cmp
adc
push
sbb
ficoms
shrl
jge
test
loope
rclb
imul
ret
mov
and
dec
movaps
dec
cwtl
into
test
sbb
shll
out
sbb
loope
or
sub
scas
lret
xchg
cmp
movsl
out
sti
addr16
jge
out
lock
test
maxps
cli
or
imul
loope
cmp
stc
mov
cwtl
fwait
sub
jbe
mov
xchg
lock
popf
jo
pop
jbe
mov
sub
fadds
push
mov
xchg
fwait
out
xor
dec
mov
aaa
fldenv
je
out
jb
mov
movsl
testb
test
leave
mov
ret
dec
xor
mov
ja
popa
nop
inc
jmp
repnz
gs
push
cli
cli
inc
lock
enter
xchg
and
popa
inc
and
xchg
adc
iret
cmp
bound
ja
or
xlat
mov
mov
dec
push
and
rcrb
test
mov
mov
push
and
cmp
push
hlt
adc
push
mov
pusha
sar
jl
fidivs
jmp
rcrb
mov
mov
xchg
mov
cmp
fwait
dec
aaa
pop
fwait
jmp
sub
sub
fadds
xor
mov
dec
dec
and
std
mov
jo
pop
cmp
aam
mov
xchg
dec
mov
pop
push
push
mov
jmp
pushf
cmp
out
mov
jecxz
add
xchg
outsl
jo
sbb
jmp
cmpsl
frstor
xor
test
push
dec
popa
adc
sbb
sub
xchg
jnp
inc
movsb
testl
adcb
clc
fwait
add
clc
and
cmp
pop
lods
pop
mov
repz
dec
jmp
cmp
lock
movsl
jl
inc
or
stc
xchg
test
imul
mov
out
or
dec
loopne
mov
xor
or
das
mov
cmpsl
loope
push
in
cmp
cwtl
mov
imulb
lcall
mov
loop
push
rcl
dec
or
adc
pop
in
and
ja
leave
jg
es
test
popw
mov
sets
push
jle
clc
dec
push
inc
lcall
adc
jl
fidivrl
ja
ret
loope
sbb
mov
sub
sub
xor
cmc
xlat
scas
mov
stc
push
dec
mov
cwtl
mov
rclb
jne
jp
push
and
or
jp
and
dec
pop
aas
cmp
cmpsl
lahf
cmpsb
xchg
adc
inc
lds
fstpt
rorb
cmp
push
fmulp
fnstsw
shr
push
jg
cs
adc
add
inc
jo
jp
add
divl
add
clc
paddsw
xchg
jne
pop
pop
outsl
repnz
push
call
lahf
in
pop
lods
scas
mov
shlb
aas
sub
cmc
int
mov
or
mov
jmp
lds
or
subl
call
xchg
or
pusha
std
fwait
ret
cld
xchg
aas
cmp
stc
inc
push
js
xor
sarb
xchg
jnp
mov
push
fildl
cmp
pop
pop
sub
cmp
lods
push
jecxz
sbb
fs
filds
test
enter
xor
push
pop
stos
and
sahf
das
cmp
js
je
push
and
in
and
addr16
loop
pop
add
pop
loope
sbb
ljmp
add
aam
sbb
jnp
cmp
or
icebp
mov
js
xlat
push
ret
ret
lret
mov
xor
mov
leave
jae
and
test
pop
movsb
cli
cli
sub
mov
les
lods
aad
lret
adc
jle
xor
int3
jge
xchg
mov
adc
dec
mov
push
mov
cmp
enter
js
add
repnz
mov
lods
out
adc
in
pop
loope
pop
sahf
movsb
stos
pop
dec
dec
cmp
cmp
xchg
repz
lds
orl
xchg
out
pop
mov
jmp
adc
call
and
push
bnd
or
sub
pop
push
je
pop
cmp
fsubr
dec
shrb
dec
cmp
sub
jne
sub
dec
mov
xor
out
and
ss
dec
push
sbb
adc
xchg
or
add
mov
fcom
cwtl
or
insb
das
repz
lods
add
aas
sbb
call
and
jg
aas
pop
mov
inc
xchg
pop
mov
cwtl
nop
es
mov
dec
divl
inc
xchg
arpl
fldt
cmp
cbtw
inc
xchg
cmp
stos
in
sub
add
jb
andl
or
dec
and
cmp
mov
call
daa
cld
les
pop
push
or
in
cld
sti
sub
dec
rcrl
push
mov
mov
movsl
pop
rorb
or
nop
iret
lcall
icebp
in
sub
cmp
popa
mov
dec
sbb
ljmp
insl
popa
jp
adc
jnp
ror
mov
cli
sub
in
gs
jb
xchg
ss
mov
or
ret
cld
mov
cmp
inc
cmpsl
imul
pushf
ret
inc
mov
fidivrl
jle
xor
movsl
xchg
andl
dec
jbe
adc
fcomip
dec
jecxz
jg
stc
test
inc
sbb
in
sbb
adc
frstor
fiaddl
push
fmulp
mov
push
fwait
cli
push
inc
jp
inc
lds
mov
pushf
adc
mov
pop
cld
cmp
adc
pop
les
push
pusha
mov
inc
movsl
mov
int
sbb
out
mov
nop
pop
mov
ja
stc
dec
sbb
mov
mov
sbb
push
pushl
add
ror
inc
es
adcl
xchg
xchg
ds
lea
sub
cli
jecxz
xchg
adc
cmpsl
lcall
iret
inc
pop
lret
lcall
cmp
rcrl
mov
pushf
movsl
cld
adc
mov
and
dec
push
sti
or
shrl
push
sbb
cld
adcb
mov
push
jle
daa
stos
insb
xchg
out
sbb
cltd
les
mov
mov
xchg
xchg
int3
jae
sbb
xor
mov
mov
fs
sbb
sarl
out
push
loope
sub
xchg
in
pop
clc
jle,pn
les
popa
imul
inc
and
in
or
fldl
les
sbb
add
adc
jbe
mov
imul
xchg
out
xor
add
pusha
fs
lahf
add
sub
push
push
fimull
dec
adc
out
mov
pop
sub
lods
lds
icebp
scas
or
std
xor
mov
mov
sub
or
repz
incb
push
iret
inc
mov
fdivrp
sub
outsb
or
mov
movsb
jo
cmp
aaa
push
or
pop
shlb
xor
sahf
or
popf
push
outsb
and
clc
xchg
and
in
cli
sub
ret
xor
cmpsl
adc
jge
adc
xlat
or
in
stos
push
fwait
xor
dec
mov
sbb
pusha
cmpsl
ret
fcom
shll
out
xchg
pop
jge
fbld
movsb
fisttps
mov
and
cmc
sti
pop
cmp
xchg
cmp
xchg
push
fcmovb
jge
and
pop
andb
push
cmp
jmp
sub
xor
sub
mov
pop
mov
aaa
mov
jne
lock
std
add
bound
add
imull
lock
push
jle
incl
fldcw
dec
add
sub
inc
lock
cmpl
ss
fsts
pop
adc
fcoml
out
rorb
push
leave
adc
mov
stc
stos
pop
push
outsb
add
or
dec
add
jp
shrb
dec
leave
add
or
les
orl
add
and
adc
dec
in
fs
cld
xchg
loop
enter
sbb
mov
scas
pop
insb
push
xor
in
out
hlt
sub
outsb
dec
loope
mov
shll
lock
test
inc
push
outsb
cmpsl
cmp
pop
sub
sub
mov
inc
or
adc
pusha
push
jge
aas
dec
in
mov
push
mov
mov
scas
nop
add
add
jne
and
xor
inc
pop
jmp
lods
cmpsl
sbb
add
mov
cmp
xchg
xchg
mov
sbb
sub
cmpb
fsubrs
imul
iret
test
pusha
adc
push
pushf
stos
stos
addr16
scas
jge
popa
sbb
pop
sahf
or
daa
stos
lods
js
lea
loopne
pushf
call
mov
push
lea
jae
int3
push
jecxz
jge
ljmp
scas
ficoml
add
out
jb
mov
mov
ret
das
dec
nop
push
jno
fstpt
mov
pop
test
cmp
push
jne
adc
mov
sarb
xchg
outsb
jae
sbb
cmpsb
imul
aam
xchg
add
or
jns
icebp
and
xor
ss
mov
scas
jge
and
ror
test
outsl
cwtl
inc
pop
cld
lahf
jle
es
clc
jo
inc
adc
scas
mov
jnp
loop
push
lds
data16
les
mov
jbe
out
push
scas
in
xor
cmp
mov
jmp
or
mov
cltd
rolb
jb
sub
out
lret
out
out
mov
lcall
push
sub
mov
cmp
aas
mov
sbb
mov
stos
dec
shr
sub
or
jg
in
test
mov
cmp
xor
mov
inc
sbb
mov
pushf
xchg
das
aam
adc
cmp
mov
int3
iret
jecxz
xchg
and
lret
sti
sbb
dec
and
mov
add
sbb
push
mov
mov
rcl
insl
push
mov
jmp
mov
pop
lock
shrb
pop
jp
jae
pop
xor
add
repnz
push
fnstsw
out
into
adc
add
cld
fsubs
xor
loope
pop
or
clc
ljmp
fisubs
es
lss
repz
sub
sbb
lods
in
push
cwtl
out
sbb
cwtl
adc
cmp
and
je
aad
jmp
repz
xor
pop
ss
out
xchg
pushf
inc
lahf
mov
aas
add
fstps
test
mov
xchg
lods
adc
repz
push
sub
cmp
adc
dec
add
stc
sbb
sub
loope
jb
shlb
lret
roll
pop
fcomi
jmp
mov
fwait
jne
jne
sub
mov
std
adc
clc
lret
xor
imul
inc
add
in
jb
fisubrl
iret
imul
clc
cli
lea
gs
pop
shlb
push
les
xor
sbb
fcmovbe
leave
dec
test
push
iret
pusha
and
xor
and
fcom
subb
mov
push
cmc
cmp
or
loop
add
pop
mov
jmp
lahf
pop
data16
in
jnp
bnd
mov
int
cltd
aad
adc
mov
iret
pop
mov
pop
call
pop
mov
andl
movsb
push
ss
cmpl
push
add
ds
sub
aas
int
ss
pop
lods
xor
inc
cmp
mov
arpl
out
js
cs
into
sub
stos
je
pop
mov
mov
add
cmp
push
fcmove
loopne
hlt
mov
jp
push
cs
out
notl
dec
pop
cs
addr16
mov
mov
imul
inc
ret
or
mul
rcrb
shrl
js
out
fnsave
mov
test
jecxz
rcll
jmp
lret
test
shr
xchg
push
out
insb
subb
push
add
jo
push
push
test
aaa
pop
fstps
jne
in
lods
movsb
add
lods
je
mov
insl
adc
push
int3
aas
ljmp
add
pop
or
cld
repnz
push
rolb
dec
and
add
xor
repz
adc
push
lock
movsl
sbb
movsl
dec
outsb
sahf
ds
mov
and
cwtl
sub
es
scas
sub
test
mov
push
in
ljmp
add
cmp
dec
mov
cmpsb
xor
imul
aaa
std
add
xor
adc
data16
pop
xor
test
addl
mov
mov
xor
mov
push
mov
cmpsl
cli
ss
bound
dec
stos
xchg
ret
sub
adc
subb
push
push
repnz
ret
adc
and
cwtl
aaa
xchg
add
aad
lret
out
ret
scas
movsl
in
aad
mov
stos
push
scas
inc
test
jmp
repz
lret
arpl
pop
cltd
sub
out
orl
insl
in
dec
xchg
bound
pop
std
clc
iret
or
and
pop
popa
cmp
ret
ja
jae
mov
out
ficompl
frstor
imul
adc
movsb
sbb
ret
mov
lds
mov
xchg
call
adc
or
jl
pop
pusha
adc
leave
inc
dec
jmp
xor
and
fnstsw
loop
xor
cmp
mov
xor
mov
jb
repz
std
and
repz
mov
shrl
insb
rcll
inc
imul
cmp
gs
shll
repz
sub
add
jb
clc
movsb
subb
jnp
xchg
fsts
aas
adc
jne
xchg
inc
clc
mul
sbb
das
insl
arpl
jb
push
filds
aam
outsl
push
bnd
cmpsb
sarl
xlat
sub
lcall
loopne
ljmp
je
lret
test
ja
jle
sbb
jp
test
cwtl
inc
and
aad
inc
stos
jns
lret
xor
aas
xchg
js
sub
fwait
jo
lret
into
sub
out
xchg
push
js
pusha
add
push
mov
sub
mov
stos
add
iret
into
dec
push
das
sub
mov
int3
jmp
dec
jnp
dec
cmp
dec
mov
mov
out
mov
and
push
movsb
loope
popf
rclb
pop
pop
pop
cmc
ret
mov
cld
jnp
mov
test
ljmp
fisttpl
sahf
sbb
pop
shlb
xor
mov
pop
mov
fs
dec
mov
jbe
fwait
daa
movsl
adc
int
mov
dec
scas
and
enter
cmp
imul
or
shlb
sbb
pushf
pop
sbb
imulb
dec
pop
add
pushl
pop
mulb
sbb
cmpsl
std
inc
das
nop
jae
mov
sub
jo
inc
pop
push
stos
out
dec
push
pusha
jmp
rorl
sbb
jne
ja
in
cmovbe
lahf
in
popf
les
push
inc
xor
stos
add
mov
rolb
mov
sbb
add
add
xor
outsl
out
mov
push
mov
gs
pop
sbb
mov
dec
push
cld
dec
stos
mov
add
push
test
arpl
repz
lock
jecxz
jns
cmpsb
fwait
jl
dec
aaa
pushf
dec
mov
cmp
mov
in
push
pop
out
jo
push
jo
or
ret
dec
enter
add
nop
push
push
inc
ficomps
or
pop
pusha
pop
jb
insl
mov
lods
sub
repnz
add
cld
loope
mov
inc
sub
in
sub
inc
add
cwtl
add
sbb
cmp
adc
ret
popa
add
in
jecxz
jle
stos
inc
push
lea
int
push
push
orl
filds
push
mov
sbb
cmovno
ljmp
cmp
sub
sub
shll
jb
sbb
or
or
pop
xor
mov
dec
xor
cld
mov
add
mov
or
lret
data16
jnp
je
pop
shll
xchg
push
shr
rorl
mov
or
cli
and
add
movsb
movsl
mov
mov
push
push
scas
lret
sbb
push
cmp
xor
call
sub
adc
bound
inc
inc
std
xlat
fsts
idivl
cmpsl
test
fucomip
es
pop
add
enter
fistpll
icebp
cs
sub
xchg
jmp
xchg
pushf
ret
dec
sub
jne
inc
xchg
sahf
pop
repz
xlat
add
push
or
jnp
fidivs
scas
ljmp
into
jp
pop
push
mov
mov
pop
es
cmpsl
xor
sub
or
mov
and
lret
jb
sahf
clc
pop
add
and
push
dec
xchg
mov
jge
fs
insb
cld
stos
aaa
scas
int3
mov
addb
out
int
enter
mov
call
fisubs
daa
movsb
jnp
jle
jmp
stos
gs
roll
rclb
or
cltd
data16
jno
xchg
stc
arpl
fstps
out
cltd
cld
add
test
sub
nop
xor
pop
xchg
cld
cmp
sub
filds
fidivrl
int
push
cltd
sub
xchg
jmp
sub
add
imul
cmp
pop
enter
sbb
mov
push
ret
inc
dec
lret
test
push
in
pop
cmpsl
lock
cmc
rorb
jne
popf
or
jmp
jne
jmp
mov
xor
push
aam
popf
fsubrs
mul
mov
xor
sbb
out
ficompl
scas
loop
ss
lods
js
push
test
imul
loopne
scas
add
or
cmp
add
pusha
cmp
cmp
fcomps
mov
xchg
add
cmp
sub
adc
cmpsl
mov
dec
aad
mov
sub
roll
adc
ss
mov
shrl
out
or
or
adc
jne
idiv
fsubrl
push
imul
jmp
lret
pop
dec
sub
inc
pop
xlat
jge
or
inc
add
xchg
pop
ljmp
add
mov
add
adc
icebp
imul
cmc
sar
aaa
xor
decb
or
stos
into
mov
rep
jl
xor
lock
data16
lock
arpl
pusha
dec
stc
stc
pop
sub
sbb
adc
cwtl
sbb
and
fsubrl
mov
popf
adc
out
mov
jecxz
cmp
sbb
fisubrl
fistpll
and
adc
add
pop
sbb
cmp
lods
or
mov
mov
shlb
fnstsw
sbb
push
lcall
push
loope
negl
fidivl
imul
xchg
mov
jmp
mov
mov
scas
sub
mov
sub
push
rcr
pusha
js
lahf
mov
bound
repnz
shlb
add
inc
iret
ret
xor
je
jo
xchg
rcll
and
sub
test
mov
stos
lcall
mov
dec
outsb
and
mov
lret
and
lret
cvtpi2ps
inc
push
addr16
or
xlat
std
xor
and
je
lods
add
les
or
adc
mov
test
dec
or
push
adc
mov
stos
mov
lods
inc
xor
and
addr16
cmp
and
orl
clc
or
test
mov
lcall
aas
sarb
and
push
sub
fnstenv
test
xor
icebp
mov
sti
jg
stc
mov
icebp
or
aas
push
or
or
and
testl
clc
repnz
push
push
sahf
push
js
fs
sub
cmovg
jns
rcrl
paddb
xor
shl
idivb
or
ret
gs
lcall
stc
xchg
mov
pop
mov
mov
bnd
jmp
mov
push
xchg
fcom
aas
inc
sub
jbe
js
scas
jg
rol
jmp
jne
stos
in
dec
jo
shll
jne
jbe
dec
gs
mov
aaa
aas
cs
icebp
mov
les
shll
rolb
aaa
dec
and
jo
mov
fidivrl
popa
jmp
ja
pop
add
or
sbb
gs
cmpsb
loop
fsubl
decb
or
orb
adc
jnp
mov
call
xchg
repnz
mov
sti
dec
mov
movsb
loop
xorb
mov
mov
add
mov
bound
xorb
add
pop
mov
out
sub
jbe
outsb
xor
add
lds
shlb
movsb
hlt
fs
mov
jae
ror
sub
pop
std
xchg
mov
mov
mov
out
lret
mov
fisubrl
test
repnz
insl
inc
enter
dec
sahf
jp
jne
or
mov
or
adc
inc
daa
enter
xor
pop
aam
cwtl
je
addr16
mov
sub
fdivrs
xchg
cltd
dec
add
jae
push
add
cmp
stos
or
sub
inc
fldpi
inc
xor
add
xchg
nop
sahf
imul
int3
and
mov
js
outsl
outsb
jmp
inc
push
mov
cmc
pop
jmp
xor
sti
cmc
frstor
icebp
in
xor
sbb
in
aas
pop
jne
adc
subl
movsb
mov
jne
leave
pop
sti
sahf
ljmp
arpl
movsl
aad
xor
test
cmc
in
mov
in
repz
push
sub
lock
mov
xor
inc
popf
lea
out
rcll
cmp
mov
sub
jg
imul
xchg
arpl
pop
hlt
std
andb
fwait
mov
js
sub
sub
mov
adc
jbe
imul
popa
in
push
cmc
and
out
pusha
sub
iret
adc
jb
or
daa
add
sahf
cmc
cmp
mov
mov
fucomip
adc
mov
imul
icebp
jl
sbb
inc
pop
push
mov
cmc
mov
daa
in
jb
xchg
push
in
into
fwait
leave
push
push
mov
imulb
push
mov
jl
or
push
cmpsl
out
jb
ret
xchg
into
into
mov
mov
pusha
xchg
ljmp
push
lcall
movl
xchg
add
ljmp
les
lods
cmc
xchg
xchg
insb
sub
sub
jnp
jmp
leave
shlb
mov
adc
test
gs
arpl
sub
mov
fisttps
rcrl
adc
arpl
or
lret
icebp
je
repz
hlt
sbb
bound
xchg
in
xchg
xchg
push
xorl
mov
mov
and
scas
inc
cmpl
fcomp
mov
pop
in
jb
pop
pop
and
in
out
adc
popa
stc
daa
incl
cmpl
cld
mov
xchg
jl
fs
xor
jne
sub
push
adc
sbb
xor
pop
push
mulb
into
push
cmp
inc
sahf
mov
lea
pusha
push
jb
pop
add
jp
in
stos
mov
imul
daa
xchg
shrb
push
dec
pop
add
xor
jbe
add
inc
mov
push
mov
jle
cli
add
and
jmp
and
cli
pop
pop
nop
xor
and
movsl
and
les
lret
outsb
cmp
ret
sarb
insl
sbb
jns
pusha
mov
icebp
mov
nop
mov
add
pusha
popf
ret
jp
add
push
cmp
dec
jno
xchg
xor
dec
adc
xchg
cltd
and
adc
mov
imul
ret
out
insb
push
xor
fisttpll
popa
data16
imul
push
test
push
mov
adc
aas
push
movsl
orl
lret
push
and
mov
push
rorb
add
fsubs
jae
add
push
ror
or
outsl
arpl
push
cmp
fs
lahf
and
es
and
push
and
mov
roll
daa
lcall
push
mov
int
jmp
paddb
sbb
xor
adcl
int3
leave
fsts
pop
jno
loope
push
ret
inc
xchg
sahf
xor
iret
mov
clc
or
or
ljmpw
mov
cmpsl
dec
mov
movsb
xchg
fldenv
push
sahf
sub
pop
fistpl
jle,pt
cmp
fiadds
pop
aas
jp
cmpsb
imul
fwait
cmpsb
or
add
and
popa
incb
jnp
arpl
mov
sbb
and
mov
aas
aaa
arpl
addb
lods
and
js
and
adc
jne
fisttpll
incl
jbe
inc
push
lock
dec
enter
push
lahf
mov
data16
mov
bound
lds
sbb
ja
cli
stc
mov
dec
add
addb
shr
cmp
push
data16
add
ljmp
jo
fdivr
mov
adc
cmp
call
sahf
movsb
pusha
push
mov
cld
cmp
subl
mov
mov
mov
in
aaa
sbb
dec
sbb
pop
sbb
sarl
jle
movsl
faddl
xchg
mov
imul
nop
cli
jae
jb
pop
mov
ret
or
jmp
mov
lret
lock
es
sub
adc
adc
ds
incl
mov
cli
pop
push
xor
bswap
outsb
inc
insl
jmp
shrl
mov
jmp
movb
lods
outsb
fstpl
sub
enter
les
ja
and
das
jne
jne
pop
dec
jbe
popf
rcl
iret
out
inc
push
push
das
jns
inc
mov
jnp
sub
jl
cmp
jge
repnz
int
push
mov
bound
jmp
adc
adc
mov
sub
jb
xor
add
mov
rcl
icebp
cwtl
lock
das
mov
ret
xor
fiaddl
sub
js
lret
popf
std
mov
push
jl
cltd
adc
push
mov
fcomp
repnz
enter
mov
pushf
mov
insl
loopne
lds
into
rolb
jbe
xchg
movsl
hlt
int3
ds
scas
xor
dec
in
jns
cmc
test
adc
pop
sub
aas
push
cmp
inc
adc
cmpsb
je
pop
mov
je
rcr
sbb
xchg
push
lret
and
mov
mov
pushl
pop
xor
push
out
mov
mov
xchg
xlat
sarl
icebp
fcomps
xor
xlat
shrb
iret
add
pop
into
int3
jmp
fdiv
es
push
pop
cmc
push
sub
jbe
ss
push
pop
mov
out
mov
sub
cli
and
mov
push
push
xor
add
adc
aad
inc
mov
sti
xchg
jle
daa
jae
dec
lea
mov
adc
push
loope
ja
sbb
pop
fnsave
loopne
xchg
and
adc
jae
xor
pop
mov
out
sub
inc
shr
in
and
xchg
push
inc
daa
orl
ficompl
inc
imul
mov
sbb
cmpsl
sub
push
loopne
rclb
push
push
cwtl
mov
imul
mov
cli
pop
sub
jge
iret
and
and
add
out
cwtl
push
sub
mov
add
add
loop
cmc
les
xor
mov
outsl
pop
and
mov
pop
inc
sub
push
push
lea
dec
outsl
test
leavew
mov
leave
cmp
mov
mov
fmull
xchg
xor
xchg
mov
scas
push
mov
cmp
in
xlat
adc
pushf
jg
jl
hlt
jno
cltd
push
xchg
mov
sub
cmp
pop
mov
loope
xchg
cmpsb
testb
movsb
fwait
cmp
push
insb
xchg
adc
outsl
push
test
xchg
mov
sbb
into
sub
mov
cs
fwait
orps
and
nop
xor
and
shll
popf
daa
gs
push
stos
push
repnz
and
js
cwtl
icebp
pop
mov
adc
jmp
popa
les
lcall
xchg
in
cmpsl
lcall
lods
cmp
lcall
mull
nop
lret
lcall
fsubrl
test
or
fiadds
shrb
jmp
pop
cmp
loop
jo
dec
lods
movsb
clc
mov
mov
mov
xchg
in
adc
ficompl
das
cmp
data16
fiadds
sub
jp
fdivrl
inc
mov
and
sar
movups
cmp
stos
sub
pop
mov
mov
inc
sbb
cli
aad
shrd
int
add
jl
push
sbb
pop
xchg
fs
cld
dec
and
stos
fstpl
call
imul
push
fcmove
jns
rorl
call
repz
mov
mov
xlat
ljmp
sub
mov
or
inc
lret
sahf
stos
daa
int
jle
xchg
add
xor
add
or
mov
pop
xchg
fisubrl
inc
arpl
adc
ret
jl
xor
shlb
and
xchg
rcr
imul
outsl
jbe
mov
aad
in
andb
push
push
pop
sub
sbb
cmp
push
enter
int
pop
shlb
loopne
xchg
loope
push
push
lcall
lahf
xor
lret
fsubrs
and
pop
ljmp
push
lret
fmuls
push
aas
test
bound
fmull
cmp
jl
dec
int
mov
mov
stc
push
push
lods
mov
push
popf
jle
jno
inc
push
or
xchg
sub
call
push
insl
frstor
call
push
push
lods
inc
movsw
cmc
push
cmp
mov
mov
stos
mov
jb
es
call
adc
add
lock
lea
daa
stos
fstpl
pop
pusha
not
jmp
mov
nop
shlb
pop
ret
test
in
and
mov
lods
popa
and
push
push
ljmp
inc
js
or
lret
mov
popf
test
push
arpl
outsb
xlat
popa
fs
pop
inc
pop
add
ljmp
cltd
mov
lods
pop
out
icebp
nop/reserved
inc
repz
mov
mov
xor
shll
hlt
fcompl
sbb
mov
pop
jb
add
pop
mov
fists
aas
imul
mov
dec
mov
mov
lahf
test
sub
dec
repz
dec
sub
faddl
outsb
inc
xor
xchg
test
xchg
imul
nop
jl
add
je
stos
sbb
rorl
cwtl
mov
and
test
movsb
inc
stos
xchg
lahf
pop
xor
test
mov
push
movsb
cld
dec
mov
fbld
and
bound
or
xchg
ror
push
loopne
stos
data16
arpl
sub
scas
push
sub
push
out
dec
inc
xor
xchg
sbb
faddl
dec
adc
fnstenv
sbb
lcall
mov
mov
mov
cmp
dec
lcall
sarb
js
iret
mov
push
lcall
sahf
adcl
outsb
pop
addl
out
pop
add
xor
sub
std
mov
out
adc
or
cmp
cmp
sub
imull
jge
pop
mov
adc
shl
xor
in
jecxz
stos
out
imull
sahf
sub
adc
pcmpgtb
sbb
cwtl
mov
iret
xor
icebp
cld
dec
idiv
mov
rorb
inc
lahf
test
jecxz
rcrb
mov
add
int3
insb
inc
mov
ss
cmp
adc
inc
iret
aas
cld
pop
scas
pushl
jno
lret
lret
in
sub
inc
mov
stos
movsl
cmpsl
test
xor
mov
enter
adc
push
outsl
cmp
mov
movsb
shrl
shl
cmp
loop
and
push
inc
cwtl
inc
pusha
inc
mov
fs
subb
aam
sbbl
aam
xor
cmp
aas
or
jmp
and
jnp
pop
xchg
mov
stos
mov
bound
cmpl
repnz
sub
push
imul
lret
xchg
dec
addr16
and
cmp
iret
out
inc
xor
fcmovnbe
imul
repnz
or
add
mulb
or
add
xor
cmp
mov
xor
add
xchg
push
lahf
push
jae
jne
xchg
and
pop
sub
imul
mov
mov
orl
pop
stos
mov
adc
std
out
out
in
enter
out
jl
jno
pop
push
mov
push
iret
pop
mov
push
add
test
int3
fstpl
dec
imul
lcall
das
mov
xchg
and
test
push
je
inc
sbb
sbb
add
mov
shrb
jne
adc
cs
outsb
mov
fsub
inc
js
test
shlb
arpl
dec
imul
pop
mov
int
push
repnz
adc
daa
ficoms
cmp
pop
mov
xchg
jo
inc
fdivs
pop
lods
or
lret
enter
adc
aas
push
fsubrp
sub
mov
adc
push
mov
jbe
int3
addl
xchg
jp
mov
push
mov
clc
fwait
inc
cmp
pop
pop
gs
and
sub
rolb
shrb
imul
lea
jns
jns
jae
xor
inc
xor
add
cwtl
adc
aam
xchg
xchg
push
push
cmp
pop
imul
dec
adc
fcoms
dec
or
push
push
pop
ret
les
jecxz
cwtl
sub
aas
adc
popa
inc
fcoms
outsb
jns
cmp
lds
pop
cmp
xorl
mov
imul
xchg
pop
dec
mov
stos
bound
cld
enter
pusha
in
jae
dec
ljmp
jne
fcompl
jl
je
cs
jnp
in
sbb
cld
mov
out
add
das
in
lds
mov
xchg
add
mov
dec
push
iret
inc
lds
mov
in
xchg
adc
mov
sub
adc
or
push
lahf
and
lods
jns
lods
in
pop
sbb
test
add
repnz
lods
mov
xchg
add
mov
je
xor
lods
xchg
add
add
sbb
fstps
xor
xchg
push
cltd
loop
xor
divb
aas
subb
stos
pusha
sub
data16
inc
xor
icebp
inc
fisubrl
jecxz
loopne
test
out
daa
aad
sbb
leave
cmpsl
in
lock
cmpsl
int3
cmp
sbb
add
inc
repz
js
xchg
push
inc
push
hlt
insl
push
mov
pusha
jne
or
jne
mov
shr
push
xchg
push
test
inc
cmpsl
ja
jne
dec
sub
push
fisttpl
in
sub
sbb
jne
bound
ja
les
sbb
test
adc
cmp
daa
add
outsl
movsl
mov
arpl
add
add
xchg
pop
push
les
push
push
outsb
inc
inc
rorl
inc
js
pop
pushf
xor
jge
scas
sti
rcrl
cmpsl
popa
test
leave
jp
shrl
inc
mov
push
and
test
push
mov
mov
adc
pop
aaa
mov
inc
rcrb
repnz
scas
push
cmpsl
ljmp
pop
sub
in
test
pop
sbb
or
jbe
adc
add
mov
out
call
cmp
or
and
lods
jle
and
dec
xchg
and
cld
scas
ret
push
pop
dec
cmpsb
outsb
popf
int
xchg
or
int3
cmp
and
inc
dec
ljmp
mov
int3
aad
pop
sbb
cmp
movsb
xor
fidivrs
je
push
cmp
shl
sub
push
iret
loope
push
add
popa
and
inc
sbb
jae
test
jbe
jg
push
mov
push
das
andb
sub
arpl
add
xor
jmp
sahf
dec
mov
and
mov
cmovae
sub
lods
out
cmp
lcall
rol
push
mov
gs
and
xor
bts
pop
lea
pusha
xchg
inc
cmp
xor
xor
jp
adc
insb
xor
scas
ss
xor
adcl
adc
xchg
arpl
mov
adc
add
sbb
pop
imul
shll
add
btl
and
iret
jg
cld
push
cmp
dec
fs
mov
outsl
test
mov
aaa
in
jl
leave
decl
adc
stos
and
mulb
jne
mov
fwait
cld
notb
mov
call
jg
inc
and
jnp
pop
and
mov
push
mov
adc
daa
movsb
cs
cmp
add
inc
xlat
outsb
clc
cmp
adc
push
dec
movsb
adc
sub
out
int3
xlat
sub
clc
jbe
fists
push
lcall
cltd
push
mov
movl
bound
mov
lea
xchg
leave
sbb
cmp
outsl
loop
stc
inc
mov
pop
andl
mov
int
in
jmp
or
ss
imul
lds
sahf
cwtl
fcompl
push
xor
xchg
or
push
push
popa
lret
in
inc
lret
push
repz
mov
dec
scas
arpl
addr16
push
pop
lahf
pusha
dec
cmp
loopne
out
icebp
xabort
jb
jmp
or
call
xor
les
test
js
cmpsl
clc
sbb
int
arpl
push
adc
cmp
icebp
test
pop
pop
mov
lcall
jbe
pop
adc
pop
stos
jg
lret
xor
dec
cmp
inc
inc
fidivrs
xchg
sub
jp
xor
outsl
roll
int
adc
mov
cmp
scas
or
test
dec
cmc
hlt
cmp
test
loope
jb
popa
jne
inc
xor
sbb
mov
cmpsb
add
and
pop
mov
ret
addb
mov
cmp
sub
inc
data16
ss
lds
rcrb
xchg
loopne
divb
mov
divb
dec
fcompp
cwtl
jmp
sbb
mov
sub
mov
jmp
inc
sub
mov
icebp
mov
sbb
mov
cmp
ret
int
lods
xor
and
pop
or
mov
sbb
stos
pop
pop
inc
jbe
jl
out
inc
into
push
push
jecxz
cltd
popa
push
imul
out
xchg
popf
scas
push
es
xchg
adc
je
idivl
sub
mov
sbb
imul
xchg
rolb
fisubrs
in
push
and
lret
jne
pop
nop
inc
gs
in
xchg
and
xor
mov
xlat
fstpl
pop
mov
add
shrb
iret
test
pop
leave
jmp
sbbl
int
xor
sub
sbb
mov
add
orb
in
adc
push
shlb
or
push
shll
mov
sub
xchg
mov
push
push
shrl
imul
out
adc
ja
lods
stos
xchg
jno
cmpsb
imul
push
fwait
mov
notl
mov
and
inc
mov
int3
jo
shl
sti
dec
pop
jg
mov
les
dec
daa
ret
inc
pop
popa
jae
push
push
sub
xchg
sti
idivb
std
xchg
push
xchg
fiaddl
xchg
insl
or
repnz
ret
jle
mov
push
xlat
or
inc
pop
xorl
push
in
add
ss
add
rcl
pusha
inc
notb
lret
arpl
cli
push
pop
and
add
shrl
out
loopne
cs
xor
jbe
call
cwtl
jg
fistps
int
js
js
or
dec
lods
cmp
fwait
jecxz
or
outsb
and
mov
xchg
pop
call
mov
sbb
or
dec
cmpsl
enter
fnsave
cmp
fstp
fldl
jle
cmp
add
out
dec
lea
and
int
mov
je
xchg
ja
and
mov
push
fcmovnb
ret
mov
or
cs
fs
sub
xchg
inc
les
pop
dec
int
mov
adc
pusha
bound
dec
imul
or
enter
cmp
sbb
cmpsb
xor
aas
jge
outsb
jbe
cmpl
insl
pop
rolb
or
nop
xchg
lods
fidivrs
inc
cli
xchg
and
sub
in
mov
pop
inc
mov
xchg
jnp
mov
faddl
in
sbb
fwait
mov
push
xchg
imul
out
cld
mov
pop
insl
and
fwait
repnz
nop
cmc
dec
fisttps
push
addr16
xchg
ret
sub
fs
scas
cmp
into
jne
loop
fucomip
imul
sub
call
add
mov
loop
push
xchg
push
push
cmp
gs
hlt
addr16
mov
out
jo
ficomps
out
xor
xor
adc
fnsave
mov
lcall
out
aam
add
std
inc
mov
das
pop
ret
add
fadds
jle
sub
adc
mov
mov
push
mov
mov
push
ret
cld
jne
out
movsl
stos
adc
sub
sbbb
stos
inc
int
mov
mov
ljmp
xchg
add
in
mov
fdivr
repz
lea
notb
xchg
mov
incl
and
xchg
mov
lods
out
les
push
fisubrs
pusha
mov
seto
cmpsb
push
ret
push
loopne
je
popa
mov
push
or
loope
dec
xor
inc
push
nop
push
and
push
dec
outsb
add
cmpsb
add
cmp
xchg
sahf
cmp
xor
popf
in
ja
push
jl
and
ret
aam
cld
jbe
and
fisttps
mov
cmpsl
cmp
inc
sub
or
notl
movsb
in
dec
sarb
mov
in
or
lods
add
mov
and
outsl
and
and
mov
popa
xor
insb
cs
mov
sub
sub
push
adc
and
sbb
push
js
sti
ret
cmc
xor
and
mov
insl
imul
dec
jge
addr16
outsl
jbe
xchg
xor
cli
movsl
ret
jo
inc
pushl
pop
inc
adc
adc
dec
int
mov
or
mov
sti
das
orb
testb
pop
xchg
dec
cmp
jns
xor
add
out
xor
pop
jb
addr16
sbb
addr16
jno
lock
jae
jl
mov
lds
dec
scas
out
jne
push
roll
lods
gs
pop
loop
mov
push
stos
ror
jge
push
push
hlt
xor
shll
add
inc
or
cmp
push
out
gs
cs
or
sub
push
jg
push
aad
mov
sbb
or
mov
dec
lret
data16
push
repnz
sub
mov
xchg
ffree
mov
inc
jns
jns
xlat
cli
orb
or
push
mov
mov
daa
add
popf
hlt
or
bound
mov
stos
push
les
shll
mov
jecxz
xor
cmpb
jmp
aam
adc
scas
cmp
cltd
cmp
xor
jnp
shr
enter
and
inc
add
fimull
and
lret
arpl
rorb
dec
roll
imul
js
addr16
andb
into
div
push
hlt
sub
fs
fsubs
fdivl
cmp
mov
jno
xor
jo
mov
jmp
inc
xchg
sub
scas
rclb
adc
mov
arpl
add
mull
stc
or
les
stc
aas
sub
push
cld
dec
mov
les
mov
jb
mov
sub
xor
andl
add
popf
xchg
or
xor
jp
adc
mov
mov
pop
push
scas
or
push
pushf
add
jmp
jecxz
mov
xchg
add
idiv
push
loope
aad
xchg
clc
loop
jbe
sub
pop
fistpll
jle
popa
dec
cmp
bound
test
pop
dec
ljmp
ret
jl
int3
mov
loop
add
enter
jae
scas
cmp
stos
pop
xor
lret
shrb
add
adc
jle
rcrb
or
loopne
pop
jnp
cs
pop
mov
cs
push
mov
pusha
into
in
and
jae
lret
mov
rcr
out
sub
dec
testl
arpl
cmp
add
mulb
enter
mov
sbb
or
push
or
add
mov
dec
pushf
sbb
push
cmp
sbb
xchg
orb
mov
sub
aaa
cmpsb
cltd
mov
cmp
pop
das
fwait
xchg
shlb
pusha
xchg
sbb
mov
addl
out
and
jg
movsl
addb
mov
popf
xchg
mov
imul
pop
jns
jl
inc
iret
sbb
jns
fimuls
sub
pop
test
cmc
adc
loopne
mov
sarl
in
loopne
push
adc
sbb
pop
das
jb
je
sbb
mov
loope
jecxz
inc
in
inc
push
les
sahf
lcall
cs
into
cwtl
into
sbb
leave
lock
movsb
inc
sbb
rol
fisubs
mov
int
loopne
mov
jmp
inc
or
lahf
push
jne
push
cmp
push
mov
mov
ret
loop
and
fdivrl
lahf
and
frstor
push
adc
lret
inc
push
xor
out
jnp
into
push
lret
pop
jb
inc
lea
rcrb
xchg
loopne
out
loopne
push
out
ss
test
stc
cli
mov
addr16
sbb
addr16
out
mov
and
cmp
sbb
popf
rcrl
das
fcmovb
mov
repz
and
mov
es
fnstenv
sub
cmp
insb
inc
sbb
cmp
mov
push
leave
rcll
jl,pt
cmp
bound
sbb
je
xor
push
pop
lods
js
dec
and
sub
roll
push
lahf
ds
into
das
sarl
sbb
aam
arpl
inc
lock
mov
arpl
jecxz
cmpsb
insl
arpl
aad
out
xor
or
push
cwtl
lea
xlat
sub
push
std
mov
xchg
jae
cmp
pop
aas
data16
cmp
aad
inc
mov
sub
adc
mov
add
add
in
scas
das
pop
dec
mov
ret
jb
das
xchg
pop
xor
pusha
mov
xchg
mov
add
pop
jno
repnz
andl
pop
iret
and
in
push
cld
in
pop
pushf
cld
pop
add
fstp
movsb
or
push
jns
pop
sbb
roll
sbb
cwtl
pusha
push
scas
inc
inc
aas
or
repz
dec
or
jb
add
iret
mov
jmp
incl
stos
dec
inc
imul
fimuls
xchg
fucom
xor
mov
jecxz
int
movsb
adc
push
adc
xor
sbb
or
adc
jg
shlb
loope
aas
movsl
pop
and
push
enter
jno
scas
orl
sbb
gs
popa
jecxz
int
stos
sbb
cmp
cwtl
mov
ficompl
in
or
mov
dec
mov
sub
cld
test
sbb
ja
pop
out
jo
jbe
xchg
aad
adc
pusha
mov
pop
jb
imul
in
test
sar
jns
xor
out
sub
call
ret
icebp
push
mov
pop
push
push
sbb
pop
pop
push
aaa
ret
sbb
int3
in
sbb
cmpl
scas
push
subl
xlat
mov
pop
mov
jmp
sbbb
sti
jnp
out
fldenv
ret
or
inc
adc
cld
push
stos
fwait
mov
out
dec
jns
mov
fnsave
sbb
popf
ret
cmpsb
mov
addl
sbb
aas
mov
out
testl
add
shrb
and
adc
xchg
push
mov
jg
push
and
or
movsl
addb
and
aas
pop
adc
mov
ficompl
mov
pop
xor
in
call
lods
das
cmp
jl
gs
cmp
mov
or
xchg
mov
ret
mov
inc
das
ds
xchg
outsl
ret
push
jb
xchg
jg
mov
pop
int
mov
clc
ja
iret
aas
hlt
jmp
xchg
mov
rclb
repnz
sbb
std
jo
xor
dec
xchg
push
mov
ret
push
sbb
sbb
jno
mov
in
dec
sub
or
into
and
subb
repz
jae
adc
dec
lret
sub
inc
cmpsl
sbb
mov
test
jnp
fdivl
sub
xchg
adc
push
sbb
push
das
or
bound
sbb
mov
mov
pop
mov
les
and
mov
test
test
push
push
movsb
mov
js
cmp
mov
mov
dec
adc
add
pop
out
mov
mov
aas
pusha
dec
lret
xor
jnp
iret
add
sbb
push
loopne
fsubs
leave
cwtl
mov
dec
or
rcrl
and
pop
flds
push
sti
and
stos
adc
sbbb
pop
mov
add
push
lea
xchg
dec
repz
jno
xchg
stos
into
mov
inc
mov
push
into
popa
test
mov
and
fiaddl
mov
int3
ret
xorw
negl
jne
scas
test
lcall
push
cli
int
ret
push
loope
cmp
loop
sub
push
jge
mov
jns
xor
or
out
xor
sub
sub
push
jle
mov
insb
cmpsb
insl
loopne
mov
ficoms
xor
aad
sbb
arpl
in
jo
inc
lock
add
mov
scas
fimull
jo
jecxz
repnz
push
stos
ret
lods
inc
mov
dec
fwait
dec
inc
push
pop
arpl
jns
dec
fs
test
fimull
xor
or
inc
js
xchg
cmp
xlat
and
fldl
cmp
rorb
fdivrs
xor
mov
fimull
int3
imul
sub
push
add
xorb
sbb
test
scas
ds
jmp
jne
ss
cltd
pushf
hlt
dec
or
into
xchg
rcll
int3
mov
andl
fiaddl
push
add
mov
fsubs
dec
mov
jp
sub
fs
push
push
adc
or
and
or
call
addr16
inc
lds
lea
xchg
xor
int
loop
addr16
loopne
and
js
stos
jl,pn
stos
jnp
xor
test
outsb
fisttps
stc
out
dec
push
xchg
jmp
popa
push
xchg
xor
out
jne
mov
inc
addr16
add
insb
pop
or
sbb
mov
inc
mov
add
lcall
dec
jge
scas
inc
fcoms
xchg
add
xchg
push
or
mov
pop
incb
jmp
dec
movsl
out
popa
xchg
stos
sahf
aaa
outsl
movsb
imul
cmp
mov
or
imul
jecxz
add
xchg
cmp
or
sbb
dec
fwait
push
stc
jg
ss
lcall
test
das
mov
aas
adc
mov
ljmp
fs
shll
sub
enter
push
sub
cmovno
fidivs
mov
cs
jns
add
fs
or
sub
clc
das
ljmp
sub
sbb
push
adc
out
inc
jmp
stc
and
cs
or
dec
push
gs
adc
cwtl
fildl
dec
push
mov
push
mov
pop
add
push
ss
dec
es
sahf
insl
shl
pusha
inc
jge
sub
repnz
ret
sahf
es
dec
sbb
loop
inc
decl
add
mov
or
dec
sbb
mov
in
push
cmp
decl
rcrb
adc
loopne
aad
lds
mov
clc
push
or
xchg
pushf
sbb
and
mov
jle
push
loop
mov
call
stos
and
and
xor
cmp
inc
push
outsb
xchg
pop
gs
insb
pop
mov
lock
shr
mov
mov
xor
add
fildl
add
mov
jecxz
aas
movsb
dec
lds
cmp
inc
rol
cmp
cmc
jb
mov
repz
and
mov
dec
imul
pop
and
js
cmp
cmpsl
mov
scas
add
movsb
stos
mov
les
add
mul
adc
mov
cmp
leave
push
in
stc
nop
add
inc
lods
rcrl
cmpsl
inc
rclb
cmc
addr16
inc
dec
aas
cmp
inc
jnp
push
cmc
test
insl
sbb
shl
inc
adc
ret
or
inc
in
lods
pop
sbb
fidivrs
or
jge
xchg
loop
stos
rcll
push
inc
or
mov
lret
cwtl
rorl
cltd
insb
sahf
xchg
bound
fcoml
and
rorb
outsl
fs
shll
jno
or
adc
jge
clc
cmp
lods
push
pop
movsb
test
in
jo
mov
fcomps
mov
xchg
dec
mov
mov
ss
mov
add
in
sbbb
jae
pop
push
popa
add
lcall
mov
cmpsb
add
push
sahf
sti
addr16
xchg
sub
dec
dec
push
addl
adc
stos
test
in
test
pop
xor
adc
insl
test
movsl
dec
dec
pop
push
fstl
ret
fisubrs
jno
enter
push
mov
pop
call
xchg
mov
iret
or
mov
add
rcrb
pop
fbld
add
test
insb
xorl
inc
icebp
hlt
pop
jno
dec
and
xchg
and
or
or
push
orl
out
push
inc
fdivrl
push
mov
jno
push
mov
or
cs
push
daa
sub
jge
xor
push
lret
lahf
sub
rcr
xlat
in
xchg
xchg
insb
sbb
outsl
mov
lock
push
mov
lods
and
leave
jb
add
adc
dec
dec
fdivs
xor
sbb
add
jno
mov
xor
xlat
ljmp
dec
jecxz
outsb
outsl
stc
xchg
pop
shlb
outsb
fldenv
xchg
cmp
fs
out
dec
xorl
inc
rcrl
pusha
xor
push
movsl
add
cltd
in
xchg
ficompl
xor
jp
pop
adc
ljmp
push
xor
cmovno
lods
shrb
imul
fstps
mov
das
lret
jecxz
lcall
je
cmp
sahf
xor
fbld
out
mov
addr16
or
inc
inc
inc
in
les
daa
push
inc
aas
sbb
aaa
add
cmp
jnp
jbe
stos
test
xlat
pop
mov
aas
inc
aaa
bswap
ret
out
mov
ret
es
push
jmp
test
fmull
mov
das
in
ret
xor
or
fcmovb
enter
test
mov
xor
ficoml
insb
call
out
adc
lock
ret
andb
in
insl
xchg
scas
pop
sub
mov
and
mov
aaa
mov
scas
frstor
xchg
js
mov
fldcw
xchg
mov
cltd
out
das
mov
dec
aad
dec
js,pt
adcl
mov
xchg
push
sbb
lock
sub
mov
nop
cmpsl
jns
inc
outsb
inc
imul
leave
lea
dec
rorl
dec
pop
push
cwtl
cld
sub
push
out
pop
jne
pop
sti
add
inc
ljmp
loope
ljmp
lret
mov
orl
xor
mov
pop
cld
mov
pop
jg
xchg
or
inc
ret
mov
jo
push
mov
les
pushf
sahf
ret
cmp
ds
cmpsb
sbb
jge
out
cmpsb
jbe
test
jno
in
mov
in
mov
iretw
je
sub
mov
lret
lret
lds
pop
ret
push
jecxz
inc
mov
sarl
mov
mov
xchg
sbbb
ljmp
outsb
ja
dec
imul
mov
inc
pusha
pop
jg
sub
nop
cmpsl
sbb
mov
push
cmp
or
loop
pop
mov
or
sbb
aaa
int
subb
cwtl
inc
ss
cli
ljmp
mov
add
out
dec
adc
mov
mov
addb
mov
mov
roll
icebp
fs
push
rolb
fildl
xor
cli
bnd
mov
inc
sahf
mov
icebp
sub
push
imul
xchg
adc
xchg
fsts
or
fistps
adc
or
push
daa
or
out
repz
stos
add
adc
dec
cwtl
js
hlt
jp
jmp
or
mov
xorb
call
repnz
addr16
mov
push
push
xchg
ret
jge
mov
cmc
shlb
pop
pop
cmp
ret
mov
and
lods
fs
inc
lcall
movsl
out
pop
les
mov
daa
rorb
dec
add
lahf
mov
mov
push
and
add
out
fisubs
sub
sub
das
mov
loopne
or
repnz
stc
dec
ds
les
aaa
inc
mov
mov
and
adc
sbb
hlt
pop
ret
repnz
lea
nop
mov
test
das
lea
jne
out
in
rcl
push
mov
fcomps
adc
fdivrs
sub
testb
xchg
lret
popa
and
test
shlb
fistpl
pop
add
mov
inc
pop
pop
leave
adc
sbb
lea
ljmp
mov
int
repz
and
pop
cld
and
lock
mov
or
sahf
das
mov
addr16
leave
pop
mov
nop
out
cltd
or
lret
mov
cld
shll
icebp
stos
add
int
aaa
and
jno
lcall
xchg
adc
bound
rcrl
scas
shlb
pop
jno
xchg
ljmp
loopne
jecxz
and
mov
ror
or
and
sbb
fs
mov
mov
dec
lock
push
in
or
test
lea
subl
in
cmpb
mov
cmp
adc
mov
aas
cwtl
seto
mov
and
hlt
inc
adc
push
or
loopne
imul
lds
es
out
or
pop
xchg
push
mov
xor
pushf
icebp
mov
jae
pop
ljmp
shrb
mov
mov
pop
andl
aam
fs
cmp
lcall
and
std
lods
out
addr16
loop
lea
sub
movsb
xlat
jb
pop
aas
addr16
push
pop
jno
and
push
dec
arpl
add
pop
shrb
fwait
mov
int3
out
mov
arpl
pop
jb
and
out
and
scas
in
ret
movsb
mov
adc
int
mov
push
xchg
stc
xchg
push
je
mov
dec
call
pushl
into
mov
and
popf
cmpb
push
out
mov
stc
fidivrs
ds
inc
aam
arpl
add
ja
and
mov
xchg
mov
cwtl
fsubrl
add
cmp
or
fsub
mov
jo
jae
cmpsb
and
cmp
in
mov
mov
stos
xchg
int
fisttps
mov
xor
xchg
adc
xor
mov
enter
adc
push
scas
and
inc
push
test
pop
sbb
mov
push
mov
fsubrs
pop
jne
imul
lret
pop
cmpsl
mov
stc
pop
push
les
mov
sqrtps
dec
mov
jnp
aaa
imul
dec
and
mov
and
ror
inc
aaa
cld
test
out
cltd
sbb
js
sarb
sbb
push
divl
xchg
ret
in
mov
mov
cmpsl
shlb
xchg
popf
jmp
cmp
icebp
jle
fstl
fsubr
fidivl
xchg
add
xor
dec
add
out
int
or
push
sbb
loope
jne
sbb
cmp
ja
jl
push
gs
add
ljmp
cli
dec
dec
pop
push
mov
loopne
cmp
mov
faddl
xor
add
jg
jp
rolb
xchg
imul
addb
dec
into
rcrl
mov
fiadds
test
mov
mov
int3
pop
shll
test
pop
sub
xchg
nop
rcrb
mov
mov
and
test
xor
jmp
jle
mov
cs
fnsave
mov
cli
aad
sbb
popa
lods
xor
test
aam
jbe
sbb
jnp
push
arpl
push
lret
xchg
jne
mov
pusha
rorl
sbb
out
pop
mov
push
or
pushf
movsb
mov
data16
movsb
mov
sub
sub
fidivrs
out
fwait
sti
inc
dec
inc
cmp
xor
mov
call
rcll
test
out
push
adc
gs
cmpl
mov
pusha
jl
in
xchg
xchg
subps
jns
into
mov
xchg
adc
jnp
sub
push
mulb
call
outsb
in
lret
mov
dec
fucomi
xlat
push
and
lret
pop
fistpl
inc
mov
cmp
jecxz
xchg
sub
arpl
pusha
or
clc
push
sbb
sbb
aaa
loop
add
sub
mov
push
inc
fdivrs
int
xor
dec
jmp
xor
inc
jp
ret
inc
lock
and
icebp
xor
xchg
sbb
mov
inc
hlt
push
lret
iret
rclb
push
push
mov
lcall
sub
adc
cltd
ret
mov
cmp
add
andl
dec
data16
or
call
lret
sahf
inc
pop
mov
bound
loope
adc
jg
mov
inc
nop
mov
push
xchg
lahf
pop
sub
inc
push
xchg
push
test
sbb
test
in
mov
cmpsl
pop
mov
pushf
sbb
mov
popl
outsb
iret
or
jae
add
inc
sub
in
add
leave
push
data16
xchg
addl
in
push
scas
adc
xchg
in
sbb
popf
loope
xorl
jae
adc
mov
pushf
imul
ror
inc
push
or
std
mov
repnz
sub
adc
call
ret
or
mov
mov
je
inc
xorl
mov
jbe
imul
adc
or
outsl
repz
notb
in
cld
fistl
mov
pop
getsec
daa
shr
aaa
and
sub
cltd
xor
in
jle
xchg
xchg
insl
adc
aad
lock
test
add
jmp
dec
sub
int3
in
clc
pop
and
mov
sub
xor
je
pop
fdivr
or
js
add
mov
sub
je
lock
pop
je
inc
dec
imul
stos
pop
into
xlat
aam
dec
ret
out
repz
mov
cmp
rorl
pop
pop
inc
pop
or
dec
add
inc
push
mov
lcall
fcmove
lret
jl
imulb
mov
iret
sub
pop
pop
leave
dec
inc
aad
fsub
and
popa
sahf
imul
sarb
fiaddl
out
sbb
test
daa
out
fists
sarl
cmp
mov
xchg
roll
test
push
xor
sti
inc
enter
add
inc
adc
into
jb
or
or
push
xchg
fs
dec
nop
cmpsb
sbb
sbb
jne
cmpb
or
lods
roll
rcrl
stc
stos
outsb
clc
sbb
or
sbb
push
imul
rclb
fcomps
xchg
jbe
lea
or
mov
mov
or
push
xchg
das
fs
rcr
sub
loop
jno
jb
enter
sti
push
loope
mov
pop
and
daa
and
mov
mov
rorb
gs
mov
and
test
sub
mov
mov
mov
movb
out
inc
xor
daa
xchg
push
xor
je
mov
push
enter
lock
jle
inc
cmp
call
jl
outsb
daa
jb
mov
adc
nop
ja
pop
pop
add
cmc
pop
xchg
mov
jb
movsb
in
das
xchg
enter
rorb
pop
mov
xchg
adc
sbb
xor
mov
lahf
mov
jle
or
mov
cltd
pop
inc
mov
imul
mov
pop
sahf
sbb
adc
data16
sub
xor
fldenv
fnstsw
sub
mov
inc
or
xchg
fs
mov
daa
lret
movsb
sbb
push
push
out
pop
ror
xchg
sbb
mov
xor
push
sbb
decb
mov
ja
arpl
je
pop
test
fnstcw
or
mov
fdiv
push
ljmp
mov
xor
std
mov
sub
notb
jb
mov
mov
adc
sbbl
lods
push
xor
dec
cmp
fiadds
insl
or
push
inc
popf
movsb
fisubrs
xchg
xor
mov
adc
int3
mov
jb
add
xchg
xchg
push
xor
or
cld
mov
push
pop
push
xchg
jbe
jb
sub
ret
fsubs
test
cmp
nop
mov
andl
mov
cs
leave
cld
or
mov
adc
cmp
dec
add
jnp
mov
fists
inc
push
adc
popa
enter
mov
stos
sub
mov
repnz
or
push
iret
addr16
sbb
xchg
and
leave
mov
dec
xchg
call
out
pop
jb
inc
les
jp
jg
push
shrl
popl
mov
aad
sbb
xchg
fstpl
fldenv
inc
push
pop
dec
out
mov
jg
inc
in
pop
push
sbbb
pop
icebp
je
mov
cmp
mov
mov
cmpl
cmp
outsl
cmpsb
enter
fwait
subb
pop
add
fcoml
mov
dec
xchg
es
jne
stos
xor
pop
jo
popf
mov
inc
or
fdiv
adc
arpl
pusha
push
sbbb
lods
adc
inc
sub
cld
mov
js
scas
inc
je
popf
push
jl
test
cmp
adc
jecxz
ljmp
inc
jl
and
fmulp
into
mov
sbb
lret
push
jg
sar
idivb
je
pop
test
rclb
lret
outsl
dec
lods
jo
xchg
mov
or
sub
add
ret
xor
xorl
mov
pop
scas
ret
fisttps
cli
hlt
inc
cli
and
arpl
loope
and
test
dec
xor
fldt
push
jmp
push
in
add
jne
sarl
repnz
xor
xor
xor
cld
mov
mov
push
and
lahf
sub
das
sbb
jbe
cmp
pop
movsl
mov
xchg
shrb
lret
mov
adc
xlat
call
add
jno
mov
push
jecxz
xchg
lds
dec
shll
inc
stos
ret
js
fwait
sbb
mov
aam
lcall
sti
fwait
jo
xor
inc
aaa
cmp
inc
mov
icebp
lar
es
dec
jecxz
or
cld
rcll
push
int3
cwtl
push
jle
mov
and
das
mov
adc
lods
jo
aaa
sbb
jno
call
fldl
mov
add
push
or
fmuls
and
cltd
mov
jecxz
sti
jo
rclb
and
push
lahf
dec
sub
mov
inc
jecxz
mov
insl
cmp
cli
add
mov
add
lea
cmp
gs
and
inc
dec
repz
xchg
jb
mull
or
xor
cld
lods
fiadds
lcall
adcb
cmp
cld
dec
xchg
insl
push
jbe
mov
pop
mov
loope
xchg
inc
pop
test
mov
jp
xchg
cli
lahf
dec
cli
mov
insl
add
loop
or
lea
aam
dec
test
fimuls
test
orl
enter
add
mov
jecxz
jmp
std
mov
mull
sbb
inc
ja
sbb
je
imull
sub
sub
push
test
fucomi
add
shll
int
jae
xor
fisubl
add
ljmp
and
sub
addl
jl
pop
pop
push
in
nop
inc
mov
es
cs
lea
add
push
sub
subb
xchg
or
cli
cmp
aam
sahf
jmp
jb
shlb
fcomip
rcrb
sub
clc
dec
cmp
addl
jo
mov
rcrl
adc
ss
enter
call
push
xchg
outsl
or
fdivrl
push
stos
cwtl
cmp
jp
test
mov
pop
jmp
in
bnd
cld
push
and
push
aaa
lret
xchg
xchg
dec
add
inc
idivl
outsl
inc
mov
mov
dec
mov
adc
loop
xorl
jns
imul
mov
shlb
dec
das
jmp
or
rol
or
ret
adc
xor
cmp
inc
cwtl
jge
fs
xlat
xchg
jp
jns
pop
sbb
xchg
xor
push
xchg
mov
lret
aad
dec
push
loop
dec
fistpl
lret
loope
dec
cmpsl
jge
inc
in
cmp
icebp
cmc
fists
add
inc
cwtl
stos
mov
lds
and
mov
push
cmp
xchg
or
mov
pop
mov
popa
dec
cmpb
or
popa
and
outsb
in
ds
and
adc
test
dec
jmp
pop
xchg
pop
jbe
dec
push
pop
push
jle
imulb
and
cmpsl
dec
sbb
pop
stos
sub
subb
jne
mov
mov
je
fldl
je
testb
inc
pop
lahf
out
xchg
cmp
into
add
pop
daa
sbb
fdivl
sbb
sub
xchg
cmc
leave
mov
mov
pop
jno
pop
mov
jns
stos
out
out
data16
andl
repz
out
int
xchg
pusha
cs
adc
pop
sub
stc
pop
xor
xor
xor
rcrl
fistl
fists
ret
mov
test
push
icebp
mov
sub
jp
hlt
xchg
aad
les
loopne
add
js
iret
fcmove
popf
hlt
pusha
jmp
fwait
pop
icebp
outsb
add
sbb
andl
dec
cmp
ret
mov
jle
mov
push
rcr
xor
aas
and
push
aam
insl
push
cmpl
mov
fisubrl
pop
jb
rcrl
sub
xchg
pop
in
int
loope
push
push
inc
jg
jp
mov
popa
jl
gs
je
pop
xchg
mov
xchg
mov
ffree
inc
dec
arpl
loope
mov
push
mov
fnstsw
mov
int
mov
jle
cmp
pop
mov
lret
out
push
mov
mov
aam
jo
mov
cli
nop
cwtl
xchg
adc
dec
bnd
jae
mov
push
out
outsl
insb
fcomp
out
jno
leave
cmp
lahf
mov
nop
push
xchg
adcl
je
add
cltd
cmpsl
testl
xchg
sahf
scas
jo
loopne
xchg
mov
xchg
push
mov
add
adc
pop
dec
icebp
imul
mov
push
dec
add
xor
xchg
jno
mov
cmpsl
aaa
lcall
popf
jo
jns
sub
sbb
pop
xor
pusha
sbb
pop
mov
hlt
dec
call
repz
jle
xor
inc
fwait
pop
dec
and
pop
icebp
sub
fwait
loope
and
jae
cmp
cmp
mov
push
xlat
add
inc
xchg
pop
shlb
shll
jne
mov
jo
mov
jo
add
adc
push
mov
mov
pop
push
push
dec
pop
mov
lret
lods
call
jmp
jge
jo
cmp
insl
push
jge
clc
cmc
xor
or
cmc
sbb
je
pop
rolb
insl
mov
shl
sbb
rcr
aas
negb
test
xchg
jecxz
push
in
xor
pop
mov
mov
sbb
out
cmpsb
mov
ffree
out
pop
std
cs
jmp
test
test
movsb
scas
jle
in
in
movl
dec
in
inc
cs
outsb
mov
lret
rorb
sti
dec
or
sbb
pop
pop
idiv
sub
sbb
adcl
pushl
lock
adc
cmp
adc
fildl
mov
pop
jo
out
lret
andl
leave
mov
push
jmp
lcall
out
mov
inc
mov
mov
dec
loopne
push
les
dec
mov
mov
pop
jge
and
iret
dec
push
int3
imul
movsb
pop
adc
adc
test
bound
jmp
cmc
jp
js
add
insb
sub
push
mov
cmp
into
jle
rolb
or
push
xchg
push
je
adc
adc
xchg
sarl
fldl
and
inc
lock
pop
stos
pusha
sbbl
lds
and
nop
add
leave
aaa
mov
mov
xchg
dec
fwait
xor
mov
and
and
popa
out
dec
sar
addr16
ds
push
in
test
cmpsl
cmp
xor
fisubrs
arpl
mov
das
ss
clc
jns
sub
sbb
push
pop
dec
out
and
mov
shl
pop
mov
inc
inc
pop
mov
outsl
popa
fisubrl
daa
jno
hlt
xchg
es
mov
sbb
movsl
outsl
cmc
mov
test
push
rcl
push
mov
xor
add
shlb
mov
sti
dec
int3
xor
push
add
cmp
jns
jmp
in
in
imul
ja
js
std
imul
sbb
and
push
aad
stos
mov
jns
xor
rclb
ret
adc
cmpsb
push
jbe
and
push
mov
and
mov
sub
incl
jo
pop
sub
in
aad
and
test
mov
jl
or
xchg
outsb
xchg
mov
jbe
ss
in
jbe
mov
shr
pop
popa
fldl
and
test
push
cltd
xor
and
aas
shl
xchg
jbe
stc
sbb
push
cmp
scas
and
push
cmpsl
scas
aaa
push
ret
mov
cld
add
lahf
push
movsl
pop
out
add
pop
pushf
mov
cmp
xchg
adc
mov
add
lock
ficomps
cmp
rcrb
imull
push
dec
cli
nop
ja
xorl
and
xlat
adc
xor
cltd
dec
add
pop
mov
and
add
addr16
and
or
add
jl
cmpsl
in
std
mov
and
clc
addr16
dec
add
xchg
and
jb
push
movsl
popf
xlat
push
adc
cltd
ror
jae
leave
sahf
outsl
adc
jns
shlb
arpl
jg
outsl
popf
lds
mov
inc
loope
cmc
push
fidivrl
jo
jne
add
pop
out
add
push
movsl
mov
add
jno
add
mov
lcall
div
lahf
jle
add
sti
sbb
mov
xchg
dec
add
mov
in
loopne
mov
jp
imul
jl
lods
sbb
pop
xlat
xchg
cli
movsb
inc
mov
mov
mov
scas
cltd
mov
pop
js
leave
or
mov
and
iret
mov
jne
popf
das
aam
xchg
and
add
jns
mov
cltd
ficoml
sub
dec
mov
iret
mov
push
sbb
pop
cmp
aaa
cmp
pop
aam
push
add
lock
cmpsl
xchg
dec
mov
inc
sbb
fsubrs
cmpsl
adc
mov
pop
adc
fdivrp
push
and
cld
cwtl
mov
push
mov
sbb
cmp
mov
dec
dec
fdivrl
rorb
cmp
adc
shll
cld
sub
jge
outsb
cltd
inc
push
loope
xor
adc
jecxz
cmp
adc
xchg
mov
sbb
nop
pop
mov
or
jl
cmpsl
in
rcr
push
adc
mov
cmp
jp
xchg
sub
xchg
or
jbe
jo
or
jmp
cmpsb
dec
pusha
sub
mov
ret
fs
add
sti
xlat
cs
adc
or
xlat
or
popa
fadds
imul
lret
movsb
adc
lcall
ja
jmp
or
sbb
cmp
pop
outsb
sar
xor
fstpl
fmull
lds
jnp
call
push
test
xchg
ds
mov
sub
fs
stc
sbb
mov
int3
sarl
sbb
cmpsl
pushf
add
mov
ret
out
in
cmp
movsb
pop
pop
ret
rolb
fwait
sbb
cltd
pushf
stos
fimuls
loopne
push
les
aam
outsb
dec
or
gs
xlat
pop
cmpsb
and
mov
iret
test
fdivs
and
call
mov
in
nop
js
or
int3
clc
aas
rolb
movb
push
repz
push
fdivr
repz
jo
pop
jmp
xchg
dec
cmp
outsb
sub
sbb
sbb
mov
das
aas
add
jb
dec
je
je
mov
mov
dec
ret
mov
jbe
movsb
jl
dec
pop
mov
sar
xchg
dec
nop
addr16
fists
fmull
sub
and
cmp
mov
insl
das
out
sahf
dec
add
out
push
les
mov
jbe
cwtl
sub
push
dec
adc
stos
push
jle
sub
pop
mov
dec
orl
mov
call
mov
pushl
ja
push
xchg
sub
fstl
lock
icebp
mov
mov
pop
jl
adc
push
dec
sub
outsl
adc
or
shll
in
xchg
mov
xchg
and
pop
mov
xor
movsb
loopne
mov
fbstp
pop
mov
lcall
lret
in
hlt
cmc
mov
mov
xor
mov
push
mov
lret
sarl
xor
popa
lds
lcall
dec
arpl
fistpl
dec
stc
mov
lock
imul
mov
push
mov
loope
outsl
mov
mov
lret
adc
sbb
add
mov
cwtl
ss
pop
xor
fidivrs
xor
idivb
cmp
fldcw
xor
ss
jl
rorb
nop
push
pushf
sbb
jmp
insb
jne
fildl
push
sbb
inc
imul
inc
lods
and
out
aas
xor
nop
inc
repnz
test
dec
pop
sub
pop
and
mov
repz
mov
fsubrs
mov
dec
or
push
or
push
dec
cmpsb
out
shrb
int3
mov
into
push
rol
popf
repz
jle
dec
xchg
pop
out
stos
add
cmp
out
fldl
pop
in
adc
xchg
lahf
pop
mov
mov
insl
mov
es
ljmp
sub
ljmp
or
movsl
out
push
clc
stos
lcall
mov
das
shlb
push
sub
mov
adc
sbb
cltd
mov
mov
fistpll
pop
mov
out
out
insb
fsubrl
inc
adc
ja
pop
push
outsl
int
or
mov
cmp
push
cmp
pop
push
dec
push
mov
aaa
sub
popa
rcr
pop
cltd
and
cmpsb
add
cwtl
sbb
mov
clc
lcall
cld
adc
push
mov
push
fwait
cs
test
nop
cmc
fs
shl
out
repnz
inc
repnz
fcmovnb
lods
lock
test
cmp
outsl
mov
xchg
push
xor
or
stos
dec
into
fnsave
bound
or
jnp
mov
ret
jle
cld
push
and
in
loope
sub
les
rcrl
pop
cwtl
add
sbbb
pop
jne
movsb
stc
mov
mov
jl
xchg
pop
xor
sbb
or
cmc
cli
das
xor
jnp
xchg
cmp
shl
add
les
scas
sbb
enter
push
bound
cwtl
xchg
fdivrl
rcrb
imulb
lcall
movsl
es
pop
gs
push
aad
cmp
pop
stos
les
jo
pop
push
xchg
dec
leave
out
sub
pop
scas
xor
sbb
and
dec
mov
jbe
cmpsb
or
xorl
dec
sarb
lcall
jmp
sbb
push
mov
mov
xlat
dec
fsubrl
dec
or
xor
mov
or
imul
mov
push
cmpsl
inc
add
sbb
sub
sbb
push
rcll
pop
clc
inc
jmp
insb
stos
in
mov
movsb
dec
call
arpl
cmpsb
and
out
fsubrs
stos
cld
imul
push
enter
mov
ret
cmpsb
jecxz
jo
dec
mov
dec
lret
mov
adc
popf
mov
pop
inc
xchg
cmp
mov
push
es
or
or
loopne
pop
stc
pop
and
aas
lret
and
inc
rorl
out
or
jae
push
ja
push
outsb
stc
inc
mov
dec
adc
push
fisubrl
jno
or
ficomps
cmpsl
adc
lahf
and
xor
into
in
and
dec
pop
loope
ljmp
jle
xchg
xchg
mov
out
pusha
cmp
loopne
fstps
add
fdivr
push
sarl
sub
sbb
sahf
fwait
stc
jge
movsl
push
pop
insl
mov
adc
icebp
lea
fs
xor
test
jle
adc
int3
sbb
mov
test
cmp
and
fs
cld
aam
mov
pop
dec
rcrb
push
mov
ja
lret
mov
mov
add
stc
sar
pop
inc
popf
dec
outsl
jmp
stos
in
pop
pop
rep
fistl
rorb
mov
test
mov
inc
inc
nop
stc
xor
pusha
pop
mov
cld
jp
fucom
sbb
and
push
pop
cmp
int
dec
or
inc
iret
jbe
inc
push
xorl
in
add
xor
in
or
stc
dec
add
lock
ret
dec
sbb
or
sbb
jb
enter
mov
or
loopne
jbe
mov
test
sub
ljmp
mov
movsl
popa
pop
jmp
pop
mov
xchg
mov
mov
cltd
loopne
scas
push
leave
pop
pop
fdivrl
icebp
repnz
scas
cmp
ret
ret
imul
rorl
popf
pop
scas
sahf
dec
sbb
fistps
sti
adc
mov
sti
in
outsl
rcll
mov
jo
and
ljmp
flds
inc
shr
into
inc
lods
fstpl
repz
xorb
mov
loope
cmp
push
pop
mov
arpl
mov
mov
and
repnz
cmp
dec
pop
loop
out
xor
loop
or
leave
mov
lods
js
mov
stos
dec
jmp
sub
das
mov
in
imul
or
push
pop
jbe
gs
outsb
shl
jecxz
xor
xchg
pushf
xchg
add
xor
inc
outsb
add
rorl
imul
inc
add
pop
inc
add
push
das
pop
addl
dec
add
mov
sub
cmp
mov
adc
push
in
xor
fwait
xchg
out
dec
inc
in
mov
jb
xchg
insb
rolb
enter
or
cmc
xchg
and
clc
mov
xchg
and
mov
or
mov
cmp
inc
subl
insl
jmp
adc
scas
lret
mov
ljmp
xlat
xchg
enter
xchg
xchg
repz
adc
imul
mov
cmp
pop
adc
rclb
test
adc
sub
lea
jo
dec
sbb
shrb
dec
xor
mov
pop
xchg
in
lret
jo
jp
xor
pusha
mov
sahf
inc
inc
stos
cmpb
push
movsb
mov
dec
cmp
lods
sbb
pop
jb
cmp
roll
outsl
loopne
adcb
adc
fs
push
jns
stc
leave
fidivrl
jae
and
xchg
gs
out
push
inc
inc
pusha
std
jmp
or
push
adc
lods
mov
cwtl
mov
rclb
jo
nop
lcall
sbb
inc
cmpsl
pop
lods
jb
cmp
scas
punpckldq
add
xchg
mov
movsl
add
sub
or
shr
sti
xchg
enter
ficomps
jns
shlb
inc
andl
cmp
cmpsb
ljmp
rcrb
mov
cmc
adc
idivl
inc
jmp
ja
adc
mov
and
ret
xchg
inc
add
xchg
and
aam
jle
stos
cmp
pop
out
mov
sbb
int3
adc
xchg
jae
lods
xlat
push
pop
mov
pop
subb
xchg
push
imul
xor
outsl
mov
pop
push
mov
scas
and
lea
pop
lahf
dec
or
sti
cmp
pop
cmp
dec
dec
fiaddl
subb
mov
cmc
mov
add
mov
push
adcl
data16
ss
sbb
sahf
pop
mov
cld
xchg
das
out
ds
ret
cli
push
mov
or
add
inc
aad
push
ffree
sbbb
sub
adc
and
loopne
mov
push
test
xchg
lret
imul
push
push
adc
dec
in
mov
push
cli
inc
mov
sub
and
mov
scas
ljmp
sbb
xor
rcrb
push
mov
pop
sbb
psrlq
and
mov
lods
pop
jge
loop
movsb
jp
fistps
imul
lcall
into
or
xchg
cmpsl
lods
sbb
xchg
pusha
sub
add
ds
mov
pop
jmp
xchg
iret
pushf
scas
in
cld
cmp
xchg
and
mov
push
lods
pop
lcall
fadd
lret
mov
mov
lcall
int3
xchg
or
cli
inc
and
inc
lahf
aam
inc
pop
roll
add
repnz
test
sahf
mov
push
sbb
mov
ffree
mov
mov
lds
repz
sbb
mov
mov
mov
adc
clc
fldl
out
loop
cmp
subl
adc
outsl
fsubr
cmp
adcl
push
mov
in
xor
mov
loope
ja
sarl
enter
mov
mov
adc
andb
aad
mov
stc
rorb
dec
repz
and
lock
ja
cmp
mov
dec
shll
data16
sbb
shrl
sahf
and
dec
out
sbb
jb
scas
stos
jp
lahf
fnsave
mov
outsl
movsb
adc
fwait
inc
loop
pop
adc
cli
std
ret
mov
pop
testl
nopl
mov
xchg
mov
adc
pop
jno
data16
cmpsl
rorl
js
icebp
or
jne,pt
inc
fdivr
insb
xor
xchg
cmp
lods
sub
cli
lods
stos
movswl
cmp
cmpsl
addr16
jmp
je
adc
push
test
mov
pop
clc
ss
ss
jp
out
aad
cmp
aad
mov
lock
jecxz
lahf
out
cmpsb
cmpsl
in
or
stos
pop
fsubrs
aad
xor
or
xor
rcr
sub
fldt
mov
pop
in
loopne
push
inc
and
sub
sub
push
mov
scas
loop
jmp
mov
jp
xchg
cmp
inc
xlat
out
sbb
shr
imul
loope
nop
test
fnsave
in
adc
ja
cli
ret
js
scas
sub
lds
push
mov
mov
pop
cwtl
jle
or
adc
jg
xlat
push
aaa
dec
loop
sub
rcrl
add
xor
mov
mov
outsl
sbbl
ret
sbb
xchg
lods
orl
jge
call
sub
xlat
xor
adc
daa
or
enter
push
xor
iret
pop
mov
out
fistl
rolb
sub
ja
pop
jno
orl
test
mov
mov
mov
cmpsb
mov
pop
xchg
fisubl
fstpl
pop
xchg
shrb
cld
aas
mov
xchg
in
cltd
in
jp
mov
add
es
mov
xor
push
popf
inc
cmp
scas
jmp
pusha
loopne
fdivr
gs
mov
sti
aad
xchg
jle
dec
sub
cwtl
fldt
outsb
push
pop
mov
sub
ljmp
jge
add
shr
popa
mov
sbb
adc
fistpl
and
adc
das
repz
mov
jmp
sbb
popa
push
xchg
cmpsb
sbb
sbb
subb
dec
mov
mov
enter
xchg
jb
and
push
lahf
outsl
pop
and
out
fsub
and
clc
ljmp
pop
cmc
xor
cld
test
js
shl
dec
pop
frstor
sub
jb
xchg
xchg
cmp
div
je
mov
mov
ds
xor
xor
mov
xchg
lret
sbbb
test
cmp
pop
push
cmp
outsb
lock
sahf
andb
out
shlb
and
mov
pop
rolb
shrb
out
jmp
icebp
jo
daa
fucomp
cmp
jecxz
dec
dec
aaa
mov
adcl
outsb
andb
xchg
out
std
mov
ss
outsb
pop
mov
rolb
push
decl
mov
insl
inc
cs
xchg
and
call
out
mov
sub
push
jae
adc
fcmove
shl
jno
sub
aad
cwtl
xor
push
out
sbb
int3
xchg
add
sbb
adc
add
push
cltd
call
outsl
dec
dec
shll
add
das
pop
or
imul
js
les
xchg
testl
int3
and
nop
std
inc
in
ret
pop
jno
or
xor
dec
jmp
pushl
mov
sub
cli
mov
lock
sbb
jbe
or
stos
jp
push
icebp
lret
loope
imul
cwtl
lret
push
inc
scas
in
inc
push
icebp
jl
gs
xor
add
out
lods
push
out
shl
push
and
jo
inc
fnstenv
fsubrs
je
js
sub
sbb
imul
push
repnz
pushf
xorl
sar
insl
aam
cmp
in
jge
ret
popl
sti
mov
push
lods
push
clc
cmc
cmp
mov
imul
jmp
fwait
mov
dec
fmull
lea
mov
das
mov
in
push
mov
dec
mov
je
js
jp
inc
push
pop
jge
add
in
fsubl
mov
fcom
pop
cmp
popf
in
rcll
jl
and
mov
xchg
dec
inc
sbb
xlat
and
or
mov
and
jne
mov
push
aas
mov
test
sbb
loope
enter
inc
out
xchg
fs
jne
xchg
imul
cwtl
pop
in
push
inc
jg
lahf
or
fists
aad
lods
push
lods
out
or
sbb
addr16
mov
shrl
imul
push
enter
jmp
mov
ret
mov
sbb
mov
cmp
inc
adc
pop
js
hlt
gs
inc
sbb
push
dec
mov
test
rorb
das
movsl
sub
dec
inc
add
cmp
push
lret
mov
loopne
mov
ja
mov
sbb
sbb
outsl
mov
cmp
mov
xchg
jecxz
xchg
loope
mov
push
pop
push
xchg
stos
in
fadd
test
sub
clc
out
dec
shlb
orl
pop
sbb
mov
cmpsb
hlt
mov
pop
xchg
jp
sbb
mov
xchg
pop
rep
add
ret
pop
movsb
cmp
inc
addr16
pop
add
push
pop
out
cmp
mov
xor
ds
and
pop
inc
lea
in
pop
jg
xchg
fsts
adc
test
and
sahf
pusha
out
test
cmp
inc
cmp
push
adc
icebp
xor
xchg
mov
push
test
stos
sub
inc
and
xor
cmp
cli
rolb
inc
xor
out
fnstenv
add
mov
andl
xchg
or
mov
cli
and
popa
pop
cmp
in
xchg
iret
cmp
jno,pn
push
call
popa
pop
sbb
stc
mov
and
cmpsb
sub
jnp
inc
imul
or
inc
sub
push
mov
add
cwtl
adc
xor
adc
push
xchg
add
pop
xchg
push
std
jg
push
xor
push
inc
push
push
insb
or
cmp
pop
in
lock
lods
lret
lret
dec
popf
inc
push
clc
xchg
sbb
push
cwtl
push
aas
sti
inc
mov
mov
into
push
ljmp
loop
movb
xchg
vmread
aaa
sbb
adc
mov
lods
dec
out
mov
fnsetpm(287
mov
mov
les
in
inc
sub
xor
pop
dec
mov
adc
scas
repnz
sbb
std
lock
icebp
call
dec
in
in
pop
into
lods
or
mov
sub
xchg
cmp
xchg
push
cwtl
xor
mov
inc
loope
jne
cmp
push
lock
ja
and
aad
in
in
mov
ja
cltd
mov
sub
adc
xlat
pop
add
int
test
mov
jns
repz
shrb
insl
inc
gs
push
xchg
jl
push
cmp
pop
int3
or
out
test
or
ds
jecxz,pn
inc
lds
in
gs
or
inc
pop
cmp
aad
cld
jnp
imul
cmc
mov
sahf
scas
cltd
shrl
pusha
inc
fidivl
lret
mov
mov
lahf
and
sbb
out
test
rclb
xor
pop
jge
out
clc
insl
push
lcall
out
dec
ds
mov
rcll
mov
lods
rorb
mov
mov
dec
xor
fsubp
scas
xchg
mov
inc
mov
mov
cmp
js
ret
pop
int3
and
pop
test
pop
mov
add
jb
pop
call
adc
push
arpl
mov
in
das
mov
lret
pop
jmp
inc
fwait
in
loopne
push
lret
stos
test
mov
decb
sarl
dec
jb
das
push
aam
mov
mov
mov
add
pop
icebp
lahf
ljmp
mov
icebp
les
xchg
adc
call
scas
push
in
cli
inc
outsb
test
movsl
adc
ds
inc
das
push
lcall
jbe
icebp
out
inc
pop
adc
cmc
mov
pop
adc
lds
add
push
dec
push
fimuls
out
sub
aaa
std
outsl
mov
dec
sar
imul
cmp
xchg
fbld
xchg
xchg
sbbb
adc
adc
add
call
loope
jl
int
xor
inc
pop
iret
pop
add
push
shrl
lret
popf
push
shrb
or
data16
in
es
incl
add
push
and
loop
outsl
adc
jo
jmp
cmp
mov
imul
mov
imul
outsb
js
xchg
stos
imul
loope
sub
cmc
or
in
pop
push
and
sub
ss
xlat
popf
push
pushw
std
fcoml
sub
jae
pop
mov
outsb
in
pop
adc
pop
push
out
inc
loopne
xchg
stc
pop
test
loope
cli
roll
iret
mov
loop
push
in
call
in
cld
cld
hlt
leave
mov
psrlq
ss
out
push
and
enter
lods
notb
test
mov
xchg
mov
ja
pop
es
xchg
cld
adc
nop
xchg
and
sbb
adc
frstor
and
mov
lock
sub
sbb
mov
or
cld
stos
mov
push
ljmp
mov
push
outsb
enter
cmpsl
cmp
imul
xchg
fwait
mov
push
int3
cli
jno
orb
fwait
lods
dec
dec
jno
push
test
mov
loopne
jns
test
cmp
std
mov
stc
add
xchg
insb
je
daa
and
adc
mov
mov
inc
xor
lret
in
fadds
cltd
fstpt
inc
cmpsl
mov
push
loop
lock
mov
insb
pop
iret
push
out
add
outsb
lods
mov
push
mov
push
cli
cmp
inc
push
out
jne
cmpsl
fcoml
adc
lret
movl
adc
or
test
movsl
in
popf
je
bound
jno
sub
fidivl
lock
jl
mov
fdivs
rolb
mov
sbb
cmp
cld
fsubp
xchg
push
and
ret
std
pop
scas
jno
les
dec
cmpsl
push
push
stc
jl
jbe
fstl
xor
test
bound
fcmovnbe
jmp
jle
sub
pop
mov
sti
xor
sbb
xor
mov
jae
mov
das
enter
test
push
fwait
jnp
sub
dec
add
pushf
pop
lcall
mov
xchg
test
jp
mov
outsb
push
jmp
xor
cmc
lcall
add
cld
lods
je
jo
push
pop
xor
fldcw
mov
popf
xlat
xchg
fxch
bnd
sbb
or
mov
mov
push
pop
add
add
lods
sbb
sarl
inc
cmpsl
stc
das
xchg
dec
adc
mov
xchg
cli
addr16
divb
popf
xor
lret
dec
repz
je
add
xchg
fisttpll
sub
cmpsb
dec
mov
les
mov
cltd
jae
aaa
es
push
jp
mov
inc
add
jmp
sbb
aad
xchg
mov
push
sarl
lret
inc
and
pslld
xor
test
jae
fsubr
push
gs
cmp
push
push
rol
jecxz
lea
test
cmpsb
imul
jbe
lret
aad
aam
mov
pop
ficomps
jae
mov
shll
cmpsl
xor
aas
repz
lret
insb
es
jno
mov
jne
out
jl
xchg
es
divl
ja
or
and
fidivs
mov
insl
sbb
pop
insl
stc
ror
fs
jl
inc
incl
sbb
adc
ds
out
lds
mov
xlat
jmp
sbb
push
test
movsl
jbe
sub
sub
pop
xor
cli
sbb
aad
mov
fidivrl
outsl
add
mov
fstps
and
mov
push
adc
sub
imul
push
and
mov
fcoml
push
cmp
push
inc
jge
rorl
pushf
mov
outsl
push
xchg
mov
mov
xlat
loopne
adc
adc
lods
loop
ds
bound
mov
mov
fnstcw
pop
lods
sbb
test
cld
pop
lahf
xor
cmp
jne
cltd
mov
xor
xchg
sbb
cltd
cwtl
inc
mov
adc
mov
sub
mov
jne
clc
and
cmpsb
push
stos
cmp
and
js
or
jb
dec
mov
dec
push
jns
stos
jmp
jb
mov
xor
fucomip
lods
pusha
lods
inc
and
ret
xchg
popa
xchg
xor
cmp
cwtl
mov
push
lds
mov
in
fucomip
test
inc
dec
lock
outsb
cmpsl
fildl
lret
add
inc
ficoml
dec
das
ss
arpl
add
sub
ja
or
jno
inc
dec
inc
fwait
outsb
in
out
fists
push
stos
sbb
or
or
es
inc
mov
daa
jp
mov
lock
sbb
mov
cli
mov
mov
push
fists
mov
repnz
xor
cli
cmp
mov
mov
push
xor
ds
in
jl
sbb
jb
mov
jmp
jbe
loope
scas
pop
sbb
lea
push
and
cmp
out
dec
xor
cmp
xchg
cltd
imull
std
sub
and
and
sbb
shll
ljmp
sub
mov
gs
arpl
fwait
movsb
mov
clc
sbb
into
mov
subb
stos
sbb
test
pop
lock
lea
xlat
neg
lds
int
cmpsb
aad
mov
jp
cld
loopne
cwtl
push
fsub
out
out
jbe
outsl
bound
leave
test
add
xchg
call
iret
mov
cmp
cli
jg
mov
repz
loope
je
es
imul
enter
xchg
cmp
shr
jns
jo
xchg
clc
sbb
xor
cmp
outsl
lret
cmp
fldenv
sub
loopne
pop
div
mov
fcomp
or
push
cmp
fldl
dec
inc
or
xchg
adc
jp
mov
xchg
fucompp
adc
sbb
inc
mov
mov
jmp
test
jmp
insb
lds
daa
lods
cmp
lcall
shlb
push
add
jnp
in
xlat
incl
inc
mov
sbb
push
cmpb
push
push
insb
out
fwait
out
aaa
int
shrb
jae
jle
mov
add
lock
cmp
inc
fdiv
inc
ja
outsl
sub
std
adc
cmpb
hlt
ret
adc
push
loopne
das
cmpsl
and
jno
pop
mov
or
stc
xor
ds
push
sbb
mov
pop
sub
test
pop
icebp
enter
dec
pop
dec
mov
je
dec
call
sub
je
loop
xor
inc
mov
mov
mov
adc
shl
xorb
lret
push
mov
push
jb
sub
sbb
xchg
adc
fnsave
or
out
cmp
dec
pop
xor
clc
scas
xchg
adc
sub
and
out
push
pushf
push
enter
push
xlat
pop
rcl
sbb
popf
mov
push
pusha
dec
notb
push
stos
out
mov
test
das
jne
inc
aam
mov
arpl
jo
jge
rorl
add
mov
ljmp
mov
sub
xor
inc
popf
mov
out
or
add
pop
xchg
js
in
fidivrs
dec
push
jae
loopne
icebp
adc
repnz
jg
jge
aam
dec
jmp
cltd
jno
loop
xchg
loopne
adc
in
lods
xchg
aam
mov
daa
lds
pop
cmp
jg
jo
in
jecxz
sub
inc
sbb
hlt
jle
xor
push
or
xchg
aam
cli
mov
lock
jl
divb
push
out
dec
cs
mov
sub
mov
xor
xor
aam
fnstsw
ja
xor
add
pop
xor
push
popf
inc
pushf
xor
test
mov
push
xor
dec
dec
iret
call
testl
mov
daa
cmpsb
push
in
cwtl
jno
lods
add
loopne
pop
push
cmpsl
aas
rorb
and
xchg
or
je
xor
insb
dec
sub
or
pop
pop
inc
mov
and
in
rol
jae
rorb
inc
scas
mov
mov
frstpm(287
rorb
ljmp
movsl
lea
and
fcompl
mov
pusha
lahf
mov
test
xchg
fdivs
mov
inc
and
mov
or
push
fimull
pop
pop
jmp
jmp
xchg
scas
xorl
lea
add
add
out
inc
mov
or
xchg
adcb
test
sbb
mov
cwtl
mov
rcrb
int3
and
mov
xor
cmpsb
fistpl
push
lock
xlat
jbe
jmp
add
stos
pop
pop
movsb
pushf
jbe
hlt
add
hlt
lock
in
cmp
mov
inc
ficomps
lahf
push
sub
lret
and
fdivrl
dec
pop
cwtl
fidivrs
xlat
andb
je
jb
out
imul
nop
movsb
scas
sbb
cmc
sub
test
mov
jno
jns
cmc
push
or
je
xchg
or
or
mov
ja
in
fcompl
fiaddl
movsb
ret
pop
xor
sbb
das
jecxz
out
jns
hlt
fidivs
roll
dec
test
mov
aas
cmpsl
xlat
fcoms
outsl
xchg
cmp
adc
mov
inc
and
xchg
xchg
jl
mov
sub
call
fwait
icebp
sahf
aad
lock
fidivl
loop
mov
jno
je
mov
daa
inc
mov
loope
enter
les
ljmp
hlt
rcrl
dec
in
dec
vphadduwd
hlt
pop
xor
jle
or
popf
movsb
xor
mov
push
mov
dec
ret
xchg
push
cs
out
bound
sub
imul
lcall
cld
jb
mov
icebp
or
andb
ret
addr16
push
sub
cmp
fildl
out
inc
mov
call
sub
movsb
dec
dec
push
es
adc
imul
dec
div
fwait
xor
and
pushf
rclb
add
fmuls
and
aad
enter
mov
lahf
data16
mov
sub
mov
pop
dec
in
inc
test
xchg
lds
repnz
lret
adcl
adc
lock
rcrl
test
push
sti
popa
inc
cmp
jecxz
cld
cs
cld
pop
pop
xchg
jmp
dec
mov
cmp
pop
push
and
cltd
push
adc
push
fsubr
and
repz
in
sahf
mov
sbb
out
jbe
dec
movsb
or
hlt
and
push
in
jno
cmp
ret
cmp
pop
rolb
cs
or
ret
or
lock
mov
repz
xor
mov
sub
or
xchg
xchg
addr16
xchg
push
xor
mov
xchg
cmpsb
sub
jg
outsb
pop
sti
and
aam
scas
sti
xor
data16
mov
loope
js
inc
mov
call
push
or
mov
in
decb
xor
xchg
inc
and
mov
out
shll
fs
adcl
and
leave
out
hlt
std
xchg
shl
push
jmp
adc
push
or
push
enter
fst
mov
rclb
mov
popa
push
stc
sbb
xchg
or
add
xor
mov
lcall
loopne
ror
das
jmp
aaa
inc
icebp
mov
add
pushf
cmpsb
or
imul
inc
dec
mov
xchg
sbb
icebp
push
dec
orb
push
ss
fcoml
jmp
loope
insb
movsl
hlt
js
mov
sub
fidivrl
and
inc
adc
cmp
aas
jge
les
xchg
add
dec
in
jno
or
sub
loopne
gs
pop
lods
das
push
outsb
dec
mov
adc
pop
pop
imul
adc
stc
xchg
xchg
mov
andb
jb
mov
cltd
ficomps
fwait
jmp
pop
xchg
test
mov
add
add
push
sbb
sbb
mov
insl
popf
or
dec
mov
divl
inc
and
jb
jmp
mov
cmpsl
sbb
add
mov
xchg
in
adc
mov
sbb
and
dec
dec
ljmp
mov
push
outsb
cmp
in
dec
out
rcll
xchg
add
je
mov
gs
push
pop
and
xchg
jl
mov
push
jle
stos
sbbl
xor
xchg
inc
sahf
lcall
clc
cli
mov
mov
in
fisubs
fwait
and
or
into
xchg
syscall
or
subb
stos
les
xchg
arpl
inc
sub
mov
sub
push
ds
cmp
test
and
cli
into
sub
lahf
mov
mov
out
xlat
fsubs
cmp
inc
lock
stos
cltd
sti
mov
add
jmp
cwtl
and
pop
fsub
pop
scas
out
mov
jno
add
mov
xor
xchg
lock
int3
test
inc
xchg
pop
dec
mov
lcall
sbb
xchg
or
mov
inc
iret
cmp
xchg
fcmovnb
ret
xchg
or
inc
xor
aas
jmp
clc
les
jecxz
cmp
ret
or
pop
jnp
ds
jmp
ja
leave
push
mov
rorb
and
js
dec
adc
call
mov
add
data16
mov
mov
push
in
js
lret
pop
dec
xchg
adc
jbe
add
cld
mov
xchg
pop
sub
ja
cmp
mov
add
cwtl
and
or
ds
in
and
popa
daa
ret
js
jae
jmp
adc
push
jl
sti
cmp
mov
push
sub
bound
clc
cwtl
pop
loop
push
mov
dec
rorl
arpl
test
mov
out
fiadds
shrb
push
push
mov
out
xchg
cmp
jmp
shlb
das
andl
sub
out
push
cmpsl
stos
jp
sub
insb
mov
and
fstl
inc
dec
outsl
xchg
inc
test
je
scas
icebp
inc
pop
xchg
into
rclb
insb
cmp
dec
cmp
cmp
movsb
cmp
into
addr16
jle
jmp
add
sbb
and
or
xchg
xchg
mov
xor
int3
and
push
xchg
lahf
mov
mov
sar
cmp
movsl
xor
lods
or
popa
loope
shlb
outsb
stos
mov
repnz
inc
inc
adc
sbb
jecxz
inc
cmp
mov
and
js
fs
add
jns
in
xchg
or
imull
adc
lods
dec
lds
push
rolb
arpl
sbb
inc
pop
inc
ret
lods
loopne
pop
scas
jl
pop
jle,pt
mov
frstor
enter
jg
jns
enter
aad
mov
xchg
cld
sbb
jno
push
cmpsl
pop
cmp
lock
xchg
fdivl
cmpsl
jns
inc
sti
xor
mov
and
mov
cmpsl
mov
or
shlb
fwait
jae
add
mov
out
or
leave
outsb
inc
push
loope
popa
push
cmp
in
aas
sub
jbe
xchg
xchg
mov
jnp
orl
cmp
sbb
jl
mov
pop
xchg
cmp
scas
jno
inc
mov
mov
or
into
dec
push
mov
xchg
dec
mov
aaa
mov
push
cmp
out
adc
cmc
mov
stos
fcomi
jg
pop
jo
and
adc
inc
iret
cmpsb
andb
insb
insb
lods
dec
and
pushf
pop
aas
movsl
pop
mov
loop
mov
mov
bound
jns
test
dec
insb
mov
mov
push
fstpt
mov
push
sub
insl
xchg
mov
dec
add
insb
rolb
movq
xlat
jae
sub
cmp
lcall
mov
aaa
ret
push
je
push
sbbb
mov
mov
ja
insl
fcomp
ret
outsl
sub
xchg
sub
lea
nop
or
add
adc
hlt
sar
cmp
fdivs
inc
cwtl
mov
iret
xchg
insb
test
pop
push
jo
mov
dec
jmp
xchg
push
stc
popf
scas
dec
hlt
push
negl
in
outsl
push
push
xchg
fs
outsb
add
mov
push
pop
mov
push
addr16
icebp
jae
int3
inc
shrb
cmp
mov
xor
int
xor
and
lods
or
cmp
inc
jge
movsl
call
add
popa
stc
push
pop
push
inc
mov
addr16
iret
lret
mov
sbb
xchg
cwtl
popa
scas
push
aaa
ret
jns
in
push
and
mov
ret
push
outsb
mov
fsubrs
inc
jmp
fisubrl
aas
xchg
aaa
inc
sbb
sbb
fistps
std
sbb
sub
xchg
cs
das
stc
lods
lret
dec
dec
mov
fisubs
xor
xor
pop
stc
sbb
in
mov
adc
pushl
cmp
and
or
test
jmp
hlt
dec
push
or
sub
sbb
add
in
sbb
dec
call
outsb
cmp
fsubr
mov
mov
or
lahf
cmp
push
xor
les
movsb
inc
xchg
repnz
pop
ljmp
xor
leave
dec
jecxz
lods
incl
call
xchg
es
lret
lock
in
cmp
loope
or
jb
and
cs
pop
xchg
cwtl
fcomp
clc
jnp
dec
inc
adc
pop
rol
xchg
scas
adc
aaa
mov
xorl
int
pushw
xor
insb
jno
dec
movsb
scas
gs
insl
mov
jmp
dec
pop
pushf
xchg
loopne
enter
push
sbb
lods
lret
fmull
sbb
and
mov
rclb
movsl
out
sti
testb
insl
push
ja
test
cmp
movsl
and
push
lret
aad
insb
scas
movsb
test
bound
aaa
jne
icebp
lock
fildl
or
cwtl
xchg
jne
cmc
push
jmp
shll
or
fisttpl
out
or
int
jmp
cmp
sbb
negb
andl
dec
in
push
sub
add
js
mov
push
out
sbb
mov
scas
in
shll
lahf
push
dec
adc
into
je
aam
out
loope
faddl
mov
lret
inc
ret
lret
add
add
cli
sub
cmp
xchg
loope
out
lods
mov
aaa
mov
xor
lods
sub
cwtl
cli
cmp
cmp
in
xchg
rcrb
pusha
or
dec
or
and
xor
jmp
sub
cmp
adc
mov
pop
push
dec
and
scas
mov
mov
add
cmc
bound
push
outsb
pop
mov
rcrl
jg
sbb
jg
test
data16
mov
cmp
inc
and
jge
je
rcrb
and
stos
cmpsl
cs
push
sbb
pop
or
jg
insb
xchg
pop
fisttpl
ss
jge
dec
clc
and
lds
sub
cmp
push
adc
mov
sub
ds
movsb
fdivrl
ljmp
cmp
inc
lds
jns
pop
pop
jge
mov
cwtl
mov
jno
dec
push
fadds
repz
mov
push
cld
push
pop
jb
loope
mov
sub
imul
and
jb
clc
in
dec
mov
lods
lret
outsl
xchg
loope
mov
lods
lret
lret
mov
negl
pop
bnd
cltd
xchg
test
rorb
addr16
add
adc
nop
cmp
jno
ror
push
xor
cltd
lods
mov
add
cmp
or
stos
in
dec
sub
aaa
jnp
xchg
movsl
or
push
dec
mov
stc
imul
push
jecxz
movsl
in
mov
fs
pop
stos
ret
adc
xchg
cmpsb
nop
es
fidivl
jb
fistpll
adc
jns
int
pop
mov
mov
mov
inc
cmp
mov
xor
xor
xor
lds
push
inc
cmp
out
push
outsl
or
dec
fidivl
ss
jo
iret
push
lret
sahf
test
das
add
sub
mov
in
lret
fs
mov
xchg
imul
mov
addr16
arpl
mov
jp
lcall
jae
push
xlat
pop
sbbb
push
sarl
push
movsl
call
sbb
dec
xor
cmp
imul
inc
outsb
jbe
pop
arpl
scas
mov
lret
push
xor
ret
pavgw
inc
insl
arpl
jp
mov
leave
shl
idivl
lret
cltd
test
push
loope
pop
pop
fcoms
inc
fcmovu
ret
mov
or
inc
or
pop
sahf
cmpsl
sbb
lock
fcompl
sub
push
mov
jecxz
and
js
sub
daa
mov
imul
add
mov
pop
int
jae
add
nop
out
mov
imul
mov
mov
inc
push
sub
push
loope
sub
xor
pop
rolb
sahf
in
mov
mov
lods
loope
jae
fistl
test
cli
testb
sbb
out
mov
imul
stos
xchg
sbb
pop
pushf
nop
add
adc
movsl
dec
lea
fiaddl
nop
jmp
js
bound
nop
sbb
ds
loope
mov
sahf
in
push
pop
jg
fs
stos
inc
jg
push
cmp
scas
ret
loop
sbb
test
push
lods
loope
ljmp
mov
popf
jnp
sub
pop
adc
loope
fidivrs
iret
hlt
adc
push
into
add
dec
sub
lcall
movsb
nop
imul
into
popa
lods
test
imul
decb
xchg
xor
jg
jns
repnz
das
mov
and
jns
je
xchg
clc
add
jae
xchg
ds
mov
jle
jae
out
lret
mov
ret
xchg
push
mov
loope
sbb
out
pop
jno
add
adc
scas
jge
idiv
mov
das
dec
fs
aam
push
push
push
mov
out
xlat
push
cmp
popa
push
and
leave
pusha
aad
adc
pusha
dec
inc
push
mov
shrb
mov
mov
xchg
xor
pop
out
fs
std
je
cmpsb
adc
xor
cmc
and
fnstsw
pop
ret
jp
sahf
aam
lahf
test
repz
jae
push
and
mov
inc
into
add
jg
lret
nop
fmul
mov
mov
adc
clc
sub
push
mov
cld
or
scas
xchg
xor
mov
pop
pop
or
mov
lods
mov
ret
notl
or
inc
or
add
and
jg
add
xchg
in
dec
movsb
jg
gs
push
xchg
adc
cmpsb
repnz
pop
test
mov
xchg
pop
xor
imul
add
addb
iret
in
jmp
scas
pop
lods
int3
jge
cmpl
pop
popf
mov
mov
nop
lcall
dec
int3
leave
and
fbstp
mov
lods
insl
repz
cli
out
sub
js
fistpll
mov
test
or
pop
daa
cwtl
in
int3
repnz
in
dec
stos
xor
outsl
mov
inc
push
push
xchg
stos
mov
sub
inc
clc
ljmp
and
lret
outsl
pop
fcomip
pop
pop
sarl
fs
inc
inc
inc
pop
xlat
fcmovne
sbb
lods
scas
mov
leave
mov
mov
sub
sbb
add
push
push
xor
pop
mov
jae
sbb
adc
es
sub
xchg
xlat
loop
into
mov
jnp
stc
stos
out
mov
xor
jp
push
in
fimuls
sahf
xchg
jg
das
push
add
das
mov
arpl
push
scas
adc
jge
pop
inc
ficomps
stos
negb
pop
pop
lcall
mov
fwait
dec
aas
les
arpl
out
push
mov
aam
push
mov
imul
jbe
cmp
xchg
push
xor
insl
jecxz
push
fisttps
mov
jle
ss
add
push
lahf
sbb
outsb
adc
cs
pop
ja
jbe
inc
mov
outsb
outsb
inc
jne
xchg
ficoml
jno
or
std
xor
jmp
add
sub
shlb
lods
xchg
xchg
std
pop
dec
jne
je
mov
fcomi
cli
ret
nop
pop
dec
loop
dec
dec
cwtl
pop
push
int
xor
mov
js
mov
jmp
movsb
inc
adc
cmp
or
loopne
in
int3
ret
cmp
adc
jecxz
nop
sarb
adc
loop
add
or
aam
fiaddl
fistpll
aaa
fdivs
cmp
cmp
sub
imul
mov
lds
push
adc
pop
mov
mov
out
push
aad
xchg
inc
adc
xchg
mov
mov
sbb
adc
pop
add
mov
pusha
cmpsl
out
das
mov
mov
in
int3
inc
push
mov
push
movsb
fidivrl
adc
shll
xor
jge
and
pop
jno
inc
sbb
stc
jp
and
lds
cwtl
into
lret
jns
pop
aas
mov
cltd
adcl
mov
dec
lds
dec
mov
sbb
xlat
lock
xchg
inc
jnp
nop
push
out
inc
stos
push
mov
and
pushf
loopne
lret
pop
imul
orb
push
and
cmp
inc
mov
jns
test
pop
sbb
add
je
mov
add
and
roll
pop
scas
shrb
stc
sbb
push
aam
scas
xchg
clc
cmp
sub
mov
test
fbstp
stc
and
dec
out
xchg
clc
mov
ss
mov
in
lcall
scas
inc
cmp
imul
lock
sbb
xchg
and
fisubs
fsts
mov
stos
andb
fmull
mov
jnp,pn
xor
push
push
mov
fisttps
sbb
popf
call
jl
jp
jae
ficomps
fldl
or
jo
push
ror
mov
xorb
ss
lods
push
insl
push
xor
aad
cmpsl
sub
shll
push
aad
mov
inc
cmpsb
mov
loopne
into
push
out
cmp
shll
call
sub
lock
imul
insl
fisubrs
popf
sahf
add
outsb
les
test
lock
lcall
aaa
je
sub
arpl
orl
ljmp
mov
stos
inc
sub
ret
js
scas
das
aam
mov
adcb
mov
arpl
cmp
insb
jne
pop
sti
repnz
dec
lahf
push
mov
mov
jg
pop
roll
push
popf
arpl
pop
mov
push
cltd
sbb
push
fbld
mov
xor
inc
ret
int
out
pusha
je
mov
nop
addr16
test
dec
mov
xor
lock
xchg
mov
daa
scas
inc
or
aam
jecxz
or
push
out
cmp
daa
push
pop
movl
int
dec
jbe
cltd
push
pop
pop
sar
sub
insb
jmp
in
xor
es
dec
aas
pushf
jp
ret
xchg
push
xor
insl
mov
cmpsl
cmpsb
hlt
loope
mov
fwait
mov
fisubs
outsb
sbb
ficoml
ljmp
add
dec
mov
xchg
fs
cmp
cmp
fistpll
std
stc
adc
push
call
loope
xor
or
mov
iret
ffreep
fstpt
xchg
ja
cmpsl
jg
orl
popa
gs
leave
mov
cwtl
add
lahf
add
push
in
mov
sub
shlb
pop
adc
push
jbe
lcall
push
lret
enter
sub
sahf
jne
jl
shll
fcoms
imul
scas
aas
test
mov
adc
cmp
popa
xor
cmp
fdivs
sar
mov
push
cmpsl
xchg
and
hlt
aaa
in
pop
fldl
ret
out
mov
aaa
xor
incl
push
pusha
imul
cmpsl
es
scas
in
das
add
push
icebp
ss
push
dec
iret
int
mov
rorl
sbb
jl
hlt
lea
insb
adc
mov
and
aam
scas
adc
aaa
ret
cwtl
addr16
inc
lods
cmc
out
lahf
sti
ja
divb
ljmp
mov
insb
sahf
xor
and
xchg
mov
mov
mov
icebp
or
fnstsw
xchg
out
repnz
test
data16
ret
jmp
enter
test
and
mov
adc
xor
rorb
test
loop
push
aaa
les
dec
incb
jle
mov
inc
dec
aas
dec
mov
call
sbb
cli
scas
cmp
pop
adc
das
add
inc
jbe
inc
jb
popf
cmp
cmpsb
sarl
dec
mov
mov
out
sub
fwait
shll
mov
inc
addr16
pop
jbe
movsb
mov
lds
jb
je
aas
orb
adc
fcmovu
out
dec
dec
xor
fs
jbe
pop
add
add
xchg
cmc
and
insl
pop
mov
cmpsl
xchg
lds
xchg
dec
mov
mov
adc
push
sub
imul
flds
jecxz
dec
loop
jnp
dec
test
push
xchg
mov
lcallw
add
push
push
lcall
into
jp
pop
xor
dec
or
lods
or
hlt
in
add
lret
jge
jg
adc
push
jb
xchg
xlat
dec
xorb
jb
lret
repz
adc
and
cmova
add
sub
push
dec
enter
leave
sbb
sub
jecxz
insl
out
push
sahf
adcl
mov
ds
pop
or
int3
sub
jg
je
push
ja
jne
mov
adc
je
mov
hlt
inc
push
sti
adc
pushf
or
adc
mov
dec
inc
mov
loop
cmp
add
imul
xor
pusha
xlat
lret
xor
ror
dec
aas
lods
out
dec
mov
repz
mov
sbb
xchg
popa
arpl
je
sub
insb
in
and
inc
psrad
add
leave
testb
pop
sub
jmp
mov
cmp
loopne
adc
pop
cwtl
and
xchg
mov
xchg
std
movsl
outsb
fcoms
mov
fmull
into
jl
xchg
dec
out
shll
nop
leave
mov
lret
push
test
adc
clc
jbe
pop
fdivs
mov
jecxz
or
sub
out
inc
lods
or
jb
scas
into
loope
and
test
xor
dec
popa
sbb
cmp
mov
test
out
loopne
sbb
mov
mov
sbb
adc
arpl
jne
icebp
mov
enter
bound
pop
jle
xor
xor
ret
loop
cmp
jns
neg
push
inc
shrb
test
adc
pop
pop
cmpsb
and
and
xchg
je
aad
leave
sub
dec
jle
inc
sbbl
enterw
scas
push
fwait
packssdw
xlat
data16
xchg
inc
xchg
cmp
or
pushf
cs
cmpb
leave
enter
cwtl
shr
jno
add
mov
mov
pusha
mov
enter
stos
lahf
ds
imul
sub
jne
push
lods
je
movaps
shl
mov
icebp
jmp
push
sbb
clc
mov
fsubrp
daa
test
pop
fs
sbb
lahf
pop
fistps
rcl
fdivrl
int3
push
fisttps
or
int3
jae
shrb
xor
mov
mov
gs
loop
inc
cli
and
and
lea
and
enter
loope
dec
lods
xor
lods
pop
out
mov
ds
or
adc
loope
push
clc
sbb
daa
or
xor
adc
mov
loopne
jl
rcll
stos
imul
push
or
inc
clc
xor
jno
mov
mov
arpl
mov
cmpl
mov
push
lods
es
sub
push
aam
dec
mov
inc
mov
push
inc
leave
scas
jge
or
add
adc
movsb
jmp
sbb
adc
dec
sbb
inc
sbb
std
cmp
mov
push
adc
leave
mov
inc
insl
cmp
cmpsb
pop
imul
add
and
adcl
ja
ret
pop
inc
loop
fdivs
lea
sub
test
mov
repnz
xchg
dec
sub
mov
lock
mov
pop
cli
mov
pushl
and
jo
scas
mov
stc
test
shrw
jae
fwait
scas
dec
mov
aas
adc
adc
lahf
cwtl
lock
xchg
jge
mov
mov
xchg
and
adc
flds
sbb
imul
mov
xchg
jo
mov
in
movl
stc
fsubrl
ds
in
push
test
hlt
pop
cmp
jb
test
mov
sahf
inc
stc
cmpsl
xchg
fidivrl
mov
push
xor
outsb
insl
or
sbb
in
xchg
inc
inc
mov
int3
leave
je
iret
or
adc
push
sbb
rcr
dec
pop
cmp
ds
xchg
mulb
mov
jb
aaa
cmp
iret
bound
pop
addl
mov
dec
fcom
xchg
insl
xchg
loop
xor
and
xor
pusha
push
repz
and
mov
lahf
sahf
jne
push
js
mov
aas
ljmp
and
leave
rol
push
addr16
fdivs
jecxz
icebp
dec
push
dec
push
cmp
mov
in
mov
jp
fs
into
or
xchg
push
aas
inc
inc
andb
ja
icebp
fmull
jbe
dec
lahf
ljmp
sbb
fwait
sub
jmp
fnstcw
adc
add
stos
inc
test
outsl
sub
mov
mov
imul
push
pop
inc
mov
xorb
fsubp
jge
div
xchg
fs
sbb
cmc
sarl
xor
enter
fsubl
mov
xchg
mov
add
add
sub
lea
cmp
mov
jecxz
xor
paddw
dec
adc
stos
xor
scas
call
inc
into
sti
daa
xor
or
lods
sbb
push
in
jmp
pop
sub
cmp
insb
jbe
and
sub
sub
je
fcoml
xchg
push
and
sti
imul
mov
out
idivb
sub
and
xchg
mov
cld
cmpsb
test
pop
in
in
inc
xor
scas
or
adc
push
push
loope
outsl
jns
jae
push
stos
mov
mov
mov
adc
and
push
enter
jno
xor
jae
push
pop
or
bound
lock
push
iret
jne
jns
insb
sub
dec
cmc
test
jns
hlt
mov
pop
in
pop
sub
ja
xor
clc
jbe
cltd
mov
inc
cmp
mov
xor
js
repz
jae
adc
hlt
xchg
test
mov
insl
aam
imul
mov
pushf
mov
fiaddl
push
aad
or
mov
loopne
loopne
test
test
xor
dec
cmp
rorb
add
and
adc
test
testl
jl
mov
test
sbbb
mov
cmp
sarl
pop
cmp
mov
and
jno
mov
in
frstor
adc
and
fsts
xchg
incl
lcall
ljmp
mulb
xchg
call
jp
xchg
int
sbb
jbe
push
fs
rcll
das
mov
mov
jo
clc
or
lret
cwtl
jl
add
xchg
pop
sub
stc
sbb
push
cmc
std
icebp
jb
mov
sbb
loop
mov
bound
stos
das
cld
dec
addr16
outsb
jne
movsl
vandpd
jmp
push
inc
sub
cld
das
xlat
and
out
jg
sbb
xor
mov
pop
in
lods
xchg
xchg
push
push
popf
jmp
mov
arpl
inc
push
divb
push
int3
addr16
lret
cmpl
jno
rorb
jo
iret
mov
icebp
js
mov
clc
jns
inc
jo
ja
movsl
jecxz
inc
xlat
push
call
xor
nop
andb
insl
mov
test
push
mov
mov
lds
sbb
in
pusha
or
jle
shll
rcr
shll
add
mov
cmp
mov
xor
jns
icebp
cmc
xchg
sub
xchg
mov
adc
cmp
or
inc
sbb
mov
jnp
sbb
fs
shll
out
sbb
xchg
and
pop
mov
adc
xor
push
xor
add
jge
xchg
aam
aad
bound
fcomps
leave
int3
nop
ss
and
out
cs
aas
adc
and
outsb
fsubs
or
and
jnp
xchg
ret
out
lret
cld
fistpll
stos
iret
dec
dec
in
push
push
mov
push
or
fcmovnu
inc
inc
ret
jno
lods
ja
int3
mov
mov
xchg
cmpsb
pop
sub
cmp
fstl
pop
or
out
iret
ja
mov
cmpsb
xchg
aam
mov
push
lods
cmp
movsl
mov
movsl
mov
cwtl
ljmp
and
mov
jle
jb
mov
rorb
mov
push
dec
hlt
mov
mov
mov
or
daa
shr
sub
mov
out
dec
stos
pop
mov
aad
cmpsb
test
inc
enter
jb
pop
pop
push
fidivrl
jg
mov
stc
mov
mov
mov
mov
or
cmp
scas
call
jge
xchg
ret
mov
or
cmp
cmpl
cmpsb
jp
cmovle
loopne
jno
stc
lds
pop
imul
sbb
jmp
mov
and
pop
repz
mov
in
andl
add
clc
push
push
sbb
stc
insl
dec
mov
xor
push
arpl
bound
and
lret
leave
fsts
inc
cmpsl
mov
mov
popf
mov
aas
push
mov
adc
and
xlat
jmp
call
stos
jl
xor
mov
and
dec
cltd
mov
fs
cmp
int
ljmp
sti
sub
in
cmp
repz
mov
cmc
mov
test
jo
out
dec
adc
push
jbe
movsl
sbb
in
std
les
inc
enter
cltd
pop
jg
cmp
pop
jns
add
dec
sub
cmc
jp
lahf
add
jle
and
ds
cs
sarl
xlat
insb
rcr
mov
call
mov
sub
fidivl
mov
ljmp
sbb
ficomps
dec
pop
sbb
test
dec
inc
mov
xlat
add
in
fdivl
aad
pop
dec
and
inc
and
xchg
push
lds
hlt
dec
cltd
mov
enter
test
and
pop
dec
clc
ret
sbbl
in
loope
hlt
aad
pushf
xchg
push
mov
fldenv
iret
mov
or
scas
jge
std
mov
imul
sbb
pop
ficomps
jle
push
lods
jecxz
pop
cmp
xchg
lret
lea
mov
push
lds
pusha
cmpl
or
and
enter
dec
mov
loopne
popl
pop
and
cld
inc
ret
pop
cld
push
out
adc
pop
les
xor
dec
fsubl
repnz
mov
cmp
push
xor
daa
scas
jne
push
shrb
add
movsl
ret
jo
sub
nop
ret
inc
jb
iret
cmpsl
mov
js
js
scas
push
roll
cli
jo
inc
add
jae
dec
push
pushf
mov
shll
aas
cmpsb
pop
push
ja
mov
cmp
cwtl
test
popa
rcl
xchg
xchg
inc
cs
or
push
mov
call
mov
jbe
movsb
lods
mov
test
xchg
dec
pop
cli
clc
mov
inc
cmpl
jnp
sbb
jle
xor
fs
cmp
lahf
inc
jg
pop
or
fsubrl
jb
mov
bound
sbb
xor
xchg
scas
xchg
and
dec
aad
arpl
outsl
cmp
add
call
xchg
stos
fs
sar
xor
jmp
in
mov
aas
push
in
mov
push
inc
pop
mov
xchg
popf
sub
enter
inc
dec
push
add
stc
repnz
add
into
stos
jg
lock
addr16
add
and
outsb
pop
push
repz
sahf
mov
jo
and
cmp
in
inc
jl
stc
and
push
sbb
clc
or
jo
popf
out
sbb
jge
insl
lret
scas
sbb
lods
add
cmp
inc
gs
punpckldq
ja
sarl
test
jne
push
ds
adc
cli
pop
popf
out
mov
nop
add
mov
scas
jmp
es
fwait
ret
dec
lds
sub
sub
xorb
jmp
mov
hlt
cmpsb
lahf
popf
mov
mov
lahf
mov
test
jg
xchg
jns
lock
jl
outsb
adc
repnz
std
inc
int3
lret
rcrl
jnp
repnz
nop
jo
jne
inc
push
jo
xor
jns
pop
fwait
dec
and
aaa
xor
add
sub
cmpsl
pop
mov
and
adc
sbb
inc
std
stc
add
bound
mov
movsb
imul
sbb
push
inc
or
adc
aad
jns
fbld
cmp
pop
add
scas
lock
cli
int3
or
xchg
cli
cmp
jo
mov
inc
lock
sti
loope,pn
xchg
sbb
loop
mov
fists
ret
mov
sub
flds
rorl
push
insl
push
in
lahf
movsl
dec
mov
mov
mov
lea
mov
add
sub
std
aas
scas
pushf
xor
inc
into
stos
dec
out
lods
jge
pop
shl
loope
lret
icebp
enter
jecxz
outsl
bound
inc
xor
add
leave
gs
pop
andps
mul
js
fnstsw
icebp
push
inc
mov
mulb
jne
cs
lock
dec
test
fwait
adc
dec
sub
les
incl
xor
call
scas
insb
jno
sbbl
fucomi
ljmp
mov
jo
or
mov
jecxz
dec
lods
stc
xor
nop
mov
xchg
mov
mov
cmpb
notb
and
jno
pop
mov
gs
into
pop
sbb
dec
mov
sbb
test
push
adc
data16
or
es
pop
pop
xor
inc
ds
negb
pushf
inc
inc
insb
aad
xor
popa
ljmp
push
int3
lods
sub
loopne
fnsave
or
jnp
pop
inc
enter
sub
cmpsb
and
jge
add
push
bound
pop
out
sbb
add
cli
push
imul
pop
dec
xchg
es
lods
sub
sti
push
cmc
jle
mov
aaa
jb
or
shlb
jne
xor
insb
push
xchg
addr16
fcompl
ljmp
daa
mov
push
aad
sti
jge
movsb
mov
filds
and
fsubrp
add
packsswb
ss
push
or
pop
cmp
insl
or
mov
dec
jo
jb
sti
popa
test
ret
jne
jne
outsb
mov
jl
or
adc
jb
into
clc
sub
mov
dec
andps
out
jg
add
mov
fimuls
push
negl
adc
out
pop
ljmp
stos
outsl
int3
lods
jg
scas
scas
scas
inc
adc
mov
xor
xchg
add
mov
aam
loope
inc
xchg
lret
movsl
mov
scas
mov
mov
mov
jmp
add
cld
sbb
test
pop
in
int
cmp
incb
jb
inc
push
sarl
or
into
sub
call
imul
lcall
xchg
rdpmc
add
and
jno
push
scas
jg
in
pop
aam
mov
jns
lcall
pop
sub
or
fwait
das
push
psllw
pop
and
pop
shr
xor
pop
testb
inc
xor
sub
arpl
roll
sub
lea
in
jns
aas
xor
stos
out
push
test
adc
pop
push
mov
cli
adc
fucomip
adc
inc
imul
int
leave
sub
cmp
ds
pop
cld
jmp
sbb
and
sub
cs
xchg
push
pop
cmpsb
outsb
cmpsb
dec
pop
ret
adc
imul
cmp
sbb
inc
mov
push
in
cmpl
arpl
mov
rorb
pushf
xchg
insb
shl
lods
test
mul
sahf
fsts
sbb
push
inc
push
lahf
adc
repz
add
adc
push
jo
sub
dec
int3
xchg
push
cmp
mov
sub
in
bnd
push
add
insl
fstpt
in
xlat
loop
push
mov
mov
sbb
add
xchg
push
dec
or
mov
rcll
adc
in
and
repnz
out
daa
or
jmp
out
xchg
and
lea
fnstcw
lahf
shll
xlat
test
adc
imul
adc
and
fwait
add
lret
into
jmp
sahf
xchg
jle
out
push
das
sub
dec
sub
lds
pop
fwait
rcll
data16
dec
bound
push
add
movsl
in
push
out
test
or
dec
mov
pop
sarl
cmp
push
ficoms
loop
das
fisttpl
jns
push
cmpb
cli
push
test
push
idivl
jb
ss
add
mov
pop
and
sbb
mov
scas
mov
and
and
notl
xchg
ret
push
mov
xchg
cmp
notb
mov
mov
add
add
jle
sub
sub
xchg
pushf
dec
xchg
lret
cmp
dec
stos
andl
mov
cmpsb
mov
dec
outsl
mov
pop
add
add
dec
add
mov
jae
sub
int3
pushf
jge
cld
xchg
nop
shll
iret
or
mov
das
inc
adc
inc
jmp
nop
add
enter
cmpsl
shlb
in
fdivl
xor
or
sahf
push
xchg
adc
test
push
dec
insl
and
fildl
mov
dec
cli
inc
pop
and
adc
fadds
jne
rorb
push
pop
add
mov
lcall
lret
fs
faddl
mov
sahf
push
out
push
add
jo
arpl
xor
dec
out
cli
out
imul
rcll
call
rorl
mov
jne
aad
sti
sbb
orb
fdivrp
das
push
jns
leave
out
mov
imul
jb
scas
mov
or
cmp
dec
lret
imull
sub
or
xlat
les
pop
test
dec
into
das
nop
popa
mov
out
fisubs
pop
push
mov
movsl
cli
cli
lods
and
pop
sub
cld
adc
dec
dec
call
mov
js
push
mov
and
xorl
in
adc
mov
out
dec
iret
xor
sbb
int3
out
cmp
stos
int
xchg
add
gs
xor
mov
incb
and
mov
inc
and
sbb
jge
mulb
push
sub
sub
lret
aas
push
push
les
sbb
add
daa
adc
js
aam
hlt
pop
stc
out
rorb
out
dec
test
adc
shlb
stos
mov
js
mov
stc
test
movsb
or
in
sbb
mov
jp
les
leave
ret
sub
ss
outsl
mov
aaa
rcl
sbb
sbb
inc
and
xchg
jnp
push
push
insb
in
xor
insb
push
popf
pop
call
add
jl
pop
xor
loope
push
cli
dec
mov
pop
mov
push
dec
and
fidivl
pop
mov
cmc
int3
jnp
loop
imul
inc
cmp
cli
scas
add
and
push
dec
and
cmpsb
xor
popa
push
adc
cld
fidivrs
lahf
mov
aad
stos
push
dec
repz
sbb
mov
cmp
lahf
sti
and
fstpl
shrl
nop
sub
mov
and
jle
sub
out
xor
sbb
mov
jmp
mov
and
jae
jmp
in
mov
lcall
pusha
mov
push
clc
adc
xor
test
cmpsb
fisttpll
cltd
and
fcomp
sbb
cld
es
mov
sub
fdivrs
or
sarl
dec
addr16
aam
shr
add
lds
sub
mov
mov
addr16
or
fldl
je
jle
jbe
lds
adc
pop
mov
shr
mov
lods
fistpl
iret
test
jecxz
and
adc
jp
cmc
push
pop
inc
test
mov
jb
cmpsl
pop
cwtl
or
xor
cmp
xchg
movsl
mov
aad
cmp
add
inc
cmp
lret
sub
pop
sarb
aam
jo
or
pushf
jecxz
cs
idiv
xchg
add
xor
sahf
pop
roll
cmp
or
inc
fadds
lcall
sbb
addr16
jns
dec
sbbb
lods
inc
scas
push
lahf
je
psubusw
mov
repz
or
test
call
pushf
in
adc
jno
inc
popl
jbe
test
sub
mov
fidivrs
jmp
fldt
push
push
add
xchg
dec
xor
sbb
or
mov
mov
lcall
test
jae
jne
inc
sub
shll
out
add
insb
fisubs
iret
insl
mov
outsb
jae
push
dec
mov
cmp
lcall
out
xlat
push
inc
cmp
mov
mov
sub
dec
cmpsl
notb
lods
test
mov
mov
and
mov
inc
movsb
mov
adc
mov
dec
jge
outsl
mov
mov
cltd
sbb
fwait
stos
mov
xlat
sub
sbb
test
mov
sbb
arpl
cmp
pop
fimull
cmpsl
pop
rcl
inc
mov
or
mov
xor
pop
xchg
fbld
sub
loopne
adc
cmp
je
std
shrl
pop
pushf
movsl
jne
repnz
ljmp
rcr
and
push
test
inc
sbb
or
repnz
and
outsb
push
mov
and
jp
es
div
or
movsb
aas
pop
xor
rolb
into
movsb
and
add
iret
pop
cmpsb
cld
cmp
outsb
test
cmp
popa
movsl
jbe
scas
mov
mov
out
sub
jle
xor
push
cmpsl
mov
scas
and
and
push
mov
jb
push
int3
mov
push
shrb
or
lcall
push
push
lcall
je
add
sub
sbb
stos
aam
xchg
jge
sub
xchg
sbb
push
adc
loopne
lret
dec
add
int
add
mov
stos
js
loope
bound
inc
or
jmp
or
adc
mov
mov
mov
lea
xlat
in
sub
or
cmp
push
mov
inc
push
xor
sub
inc
out
adc
or
xchg
cmp
roll
push
sub
and
jbe
divl
jg
sahf
xor
sahf
daa
roll
xchg
aad
int3
adc
lods
rorl
ljmp
enter
fcmovnbe
pop
pop
sub
int
insl
dec
xlat
mov
ss
mov
clc
ret
jne
aas
jp
pop
pop
lock
in
cmpsl
add
push
xchg
sbb
loopne
int3
lcall
xchg
rorb
cmp
inc
es
mov
andb
inc
jno
dec
in
dec
mov
mov
popf
mov
add
inc
addl
pop
xchg
jae
push
aaa
and
aaa
add
and
inc
outsl
xchg
fs
or
cmp
test
or
sbb
fdivl
add
sbb
jns
fdivl
push
jg
movsb
add
push
push
stos
jns
or
xor
repz
test
add
fstl
inc
xlat
sub
xchg
loop
pause
cmp
sub
and
data16
into
bound
mov
iret
push
jbe
adc
pop
mov
push
cmp
push
aas
in
and
mov
nop
adc
or
inc
stos
outsl
mov
cmp
iret
mov
pop
lds
xchg
push
add
inc
cwtl
ficoml
imul
adcl
ljmp
imul
fldcw
adc
mov
or
add
in
mov
sub
xor
sbb
push
mov
or
cmp
adc
add
jg
xlat
ret
mov
push
mov
xor
das
decb
ret
test
xor
pop
loop
cwtl
lods
push
sbb
push
xchg
call
lock
popf
xchg
mov
cmpsl
das
dec
nop
fwait
dec
push
mov
xchg
mov
fld
jae
and
sub
add
mov
dec
in
mov
outsb
cmpsl
es
mov
cld
lds
xor
push
mov
jbe
add
jecxz
dec
ret
rolb
mov
mov
pop
int3
xchg
clc
repnz
data16
push
in
ret
loop
xor
insl
mov
sbb
or
loop
clc
or
dec
jp
adc
mov
and
mov
mov
out
xlat
stos
inc
bound
lret
shl
fwait
dec
int
out
or
mov
mov
sub
pop
jg
or
xchg
push
dec
push
popf
push
push
notb
mov
pop
incl
mov
aaa
pop
fbstp
lock
jge
dec
jns
jne
lret
lock
xor
or
loop
sub
xchg
sub
daa
stos
gs
jge
gs
out
fisubrs
jo
movsl
outsb
mov
outsb
lcall
sub
pop
lock
adc
dec
jnp
jne
adc
push
sti
insl
jge
add
ss
jecxz
sbb
in
jp
pop
imulb
pop
adcl
scas
lahf
inc
cmp
ljmp
fldt
jg
mov
aas
mov
add
push
or
gs
gs
sbbl
mov
cmpsl
jbe
xor
mov
push
into
out
jnp
cwtl
push
pop
mov
in
xchg
movsb
sbb
fiaddl
dec
dec
jne
scas
sub
push
fldt
sbb
mov
outsl
leave
insb
lods
movsl
jge
mov
mov
movsb
and
inc
in
sti
xchg
into
ljmp
jae
sahf
ffreep
jp
data16
lods
sbb
lea
inc
push
and
push
pop
enter
mov
pusha
sub
inc
ficomps
dec
lahf
push
call
adc
mov
add
cmc
shrl
cli
dec
sbb
test
fbld
int
shl
cs
add
ret
popfw
mov
nop
lock
sahf
popf
xchg
dec
xlat
xor
sub
dec
mov
jle
aad
jle
call
daa
or
or
adc
pop
mov
out
add
pop
fs
inc
testl
or
subl
pop
dec
orb
pusha
lds
hlt
stos
sub
hlt
mov
iret
mulb
lods
das
aad
js
push
test
vshufps
dec
ljmp
xchg
jp
dec
mov
stos
or
jbe
xor
mov
sub
mov
xor
insl
and
lods
insb
sub
ret
cmpsl
aam
mov
pop
push
in
push
mov
xchg
fcmovbe
xchg
cs
data16
and
lret
push
mov
neg
push
pop
cmpsl
mov
arpl
bts
push
call
push
sub
and
cwtl
cli
push
jge
pop
scas
pusha
mov
adc
jnp
fbstp
clc
adc
adc
addl
xor
fcomps
popf
xchg
outsb
xor
pop
add
insl
fstps
xchg
dec
cli
mov
insb
mov
jmp
pop
add
mov
sahf
mov
rcrb
mov
pop
stos
adc
adc
ret
inc
sahf
jo
ret
sti
mov
bound
mov
dec
sbb
pop
mov
mov
fisttpl
lock
inc
adc
imul
cmp
jno
cmp
adc
jns
xor
jp
xchg
sub
out
mov
or
stos
jo
fstl
stc
ljmp
icebp
cmpsb
mov
shrb
push
dec
mov
out
cs
push
sbb
add
cmp
cmpsb
insb
inc
ret
mov
aaa
nop
mov
sti
push
test
push
sti
sub
cmp
scas
sarl
movsb
outsl
pop
sbb
push
push
sbb
sbb
pop
mov
rcl
jmp
adc
mov
push
pop
push
call
hlt
daa
jecxz
pop
inc
idiv
mov
and
lods
dec
push
or
push
mov
lfs
inc
inc
scas
mov
and
jns
leave
and
mov
xchg
testb
add
lea
adc
mov
mov
sbb
stos
negl
mov
scas
jmp
xor
lods
call
rcll
aam
push
push
fwait
mov
adc
stos
stc
fs
jg
das
adc
int
inc
ret
pushf
dec
orb
jge
fdivrs
pushf
call
xchg
jge
stos
jle
ret
lahf
jge
in
rcll
jns
jae
add
mov
cmpsb
jb
mov
push
jns
outsb
ds
xchg
add
ret
inc
mov
jmp
jmp
inc
xchg
cld
subl
mov
push
pop
rorb
inc
cmp
xchg
addl
dec
jecxz
popa
jmp
mov
mov
lahf
call
xchg
int3
adc
inc
daa
shrb
sbb
test
jle
cwtl
mov
sahf
jne
push
pop
xor
scas
imul
and
mov
sbb
neg
sub
pop
test
aas
xor
jmp
ret
mov
fs
add
adc
push
mov
repnz
inc
cltd
adc
inc
and
dec
and
shlb
xor
pop
fadds
cmpsl
xor
clc
aad
push
inc
add
pop
xchg
rclb
push
mov
out
into
xor
or
dec
and
dec
cld
xchg
dec
popa
test
insb
fs
in
inc
xchg
movhlps
stos
in
daa
mov
jbe
mov
arpl
aam
outsl
fs
mov
xchg
jecxz
push
repnz
fiadds
and
dec
ret
fcoml
jge
mov
xchg
sbb
mov
cmp
out
mov
outsl
xchg
mov
out
inc
es
and
arpl
pushf
sbb
xchg
pop
push
add
pusha
pop
ret
orl
dec
into
or
in
or
sahf
je
adc
ficomps
and
js
mov
stc
xchg
or
dec
add
inc
fnstenv
mov
add
outsl
call
cltd
jnp
insl
xchg
loopne
cwtl
mov
mov
fcomip
cmpb
pop
or
jl
idivl
xor
in
shlb
pop
sub
iret
mov
sub
lock
push
pop
es
jns
pop
in
or
insb
jb
sbb
mov
insb
sub
xlat
loope
dec
pop
in
mov
mov
sbb
sbb
jmp
shlb
cltd
lret
mov
out
lcall
cmp
mov
ljmp
out
mov
mov
cmp
jb
int
int3
fisubl
and
sbb
mov
in
insl
aam
adc
lock
insl
sbb
icebp
sub
or
pop
sub
aaa
iret
outsb
ficompl
sub
arpl
out
inc
int3
subl
aad
push
cltd
mov
leave
adc
jo
jp
dec
pusha
stc
rolb
hlt
jmp
xchg
lds
call
adc
xchg
das
xorl
fucom
mov
and
mov
pop
pop
mov
in
out
mov
fidivl
cwtl
and
ss
sbb
mov
mov
xchg
les
aad
jle
mull
pop
xlat
dec
aas
sbb
adc
pop
xor
add
and
xchg
push
jg
mov
pop
movsb
dec
push
iret
fbstp
cmp
aam
clc
mov
sub
mov
add
adc
add
loope
cmp
jle
dec
mov
xchg
and
lahf
xor
sbb
inc
mov
or
enter
mov
fsubrl
adcb
ja
mov
xchg
jecxz
mov
jb
rolb
or
xchg
add
adc
xor
push
enter
out
fdivr
dec
push
lds
cmc
lahf
xor
xchg
xchg
ja
mov
movsb
push
xchg
and
dec
loope
sbb
inc
sti
jecxz
jns
cs
xchg
stc
fs
xor
mov
scas
and
fwait
aam
ljmp
jno
in
ss
mov
nop
mov
call
xor
out
out
mov
mov
add
call
xchg
lock
push
dec
dec
ljmp
addl
and
mov
fbstp
pop
pop
mov
sub
jnp
incb
add
gs
inc
mov
mov
inc
xchg
mov
dec
into
xchg
out
aas
pop
pop
lcall
jl
pop
jb
push
roll
inc
pop
rcrl
adc
sbb
cmp
adc
jmp
test
cmp
dec
lock
dec
ret
mov
decb
xor
lock
pop
jge
dec
pop
xchg
cli
mov
push
call
xor
cmpsl
and
mov
xchg
add
jmp
repz
movsb
xor
repz
daa
or
js
je
mov
ret
push
jb
mov
push
jmp
and
sti
jmp
inc
jmp
pusha
inc
sbb
mov
dec
or
mov
cmpl
xchg
loopne
dec
cltd
and
pushf
imul
pop
and
or
mov
outsl
sbbl
popf
incl
mov
add
scas
jo
fs
jl
xor
sbbb
imulb
sbb
mov
add
pop
xchg
add
xchg
cltd
jl
lcall
or
xchg
jnp
jge
xor
inc
dec
sub
xchg
and
lret
cld
hlt
jmp
leave
mov
pop
jae
mov
xor
clc
dec
sahf
sarb
lcall
test
jbe
nop
pop
pop
jecxz
mov
sbb
push
out
out
mov
mov
ficoms
dec
aad
adc
push
in
mov
mov
test
test
shlb
inc
nop
cmp
or
mov
subb
or
push
loope
ror
in
imul
or
dec
fnstsw
out
jmp
pop
xorl
les
notb
lahf
ret
inc
int3
mov
jl
test
sbb
add
push
jo
mov
xchg
out
out
cmp
fidivrs
inc
adcl
jbe
inc
lock
icebp
pop
add
mov
sti
int
call
jecxz
jmp
xlat
enter
std
scas
ss
mov
andb
and
mov
in
outsl
lahf
gs
jo
push
ljmp
or
lret
xor
pop
cltd
inc
adc
cmp
xchg
pushf
stos
jnp
fmull
dec
ds
fucom
jo
mov
mov
mov
push
push
fnstcw
inc
xchg
loop
popa
and
push
test
adc
int3
stos
pop
mov
es
dec
imul
incb
loop
and
popa
jg
pop
ficompl
jge
popf
cmc
stc
or
xchg
lods
and
add
and
call
xchg
push
fdivp
lods
cmp
jg
push
stos
inc
lret
movsl
imul
add
mov
jnp
mov
ja
and
int3
sub
pop
mov
sarl
adc
in
sub
aaa
ja
and
shl
push
movsb
mov
fcompl
cmp
insb
push
rol
and
bound
int3
in
lods
and
dec
outsb
cmp
or
rorl
ret
mov
mov
inc
sbb
aad
lret
out
aam
jp
pushf
pop
fdivl
push
adc
imul
je
mov
sub
lods
shl
push
xchg
xchg
test
pop
lcall
cmp
and
jp
cmp
outsb
push
cmpsl
icebp
rcrb
es
mov
cltd
mov
push
enter
mov
mov
jl
jmp
mov
inc
xchg
clc
or
jb
push
pusha
push
push
xchg
pop
sti
test
scas
test
enter
addr16
test
push
popa
xor
mov
xchg
mov
inc
js
xor
sub
xlat
cmp
adc
or
sub
mov
icebp
imul
sbb
pusha
jne
add
jae
push
and
push
imul
push
lock
and
test
loope
cltd
push
adc
inc
jge
adc
pop
adc
jecxz
rolb
sar
fstps
es
notb
or
mov
push
fidivrs
cmpsl
cmp
lret
cmpsb
inc
je
fcom
iret
dec
insb
into
ret
stc
push
adc
lods
data16
sbb
int
inc
pop
nop
and
xchg
pop
loop
mov
in
and
mov
addb
les
stos
fsubp
inc
jg
out
fs
dec
fs
push
inc
cmpl
xor
dec
push
mov
mov
ljmp
lahf
sahf
imul
stos
mov
cmp
xchg
mov
add
xor
outsb
enter
fs
outsb
mov
cmp
repnz
fucom
xorb
or
jmp
out
or
pop
ja
ljmp
not
pop
mov
pop
cmp
mov
arpl
jl,pt
pop
loopne
sub
mov
and
std
fistpl
in
popa
adcl
loope
xchg
mov
imul
movsb
mov
push
mov
jbe
xchg
jbe
or
inc
sahf
ds
mov
aas
sti
xor
pop
adc
and
imul
imul
movsl
outsl
fidivrl
push
shll
jnp
xor
mov
arpl
ror
push
mov
loop
mov
xor
fsub
fbstp
inc
imul
xor
or
sbb
fiadds
add
fsts
inc
sahf
push
push
cld
ljmp
rclb
pushf
ds
test
mov
add
scas
inc
xor
aas
mov
cs
push
jecxz
dec
or
mov
sub
fisubl
test
push
push
inc
ljmp
dec
dec
test
das
add
and
sub
mov
pop
xorl
cmc
mov
cmp
and
mov
dec
std
clc
fidivs
fildll
cmp
je
ljmp
movsb
mov
mov
repnz
or
cs
pushf
int
add
adc
sarl
pop
mov
mov
addw
hlt
sbb
cwtl
xlat
test
jecxz
cld
adc
add
xchg
inc
out
xorl
cwtl
push
testb
jmp
into
inc
arpl
ss
scas
scas
lcall
decl
in
fcoms
add
jecxz
js
addb
outsl
sub
std
leave
imul
cmpsl
test
jne
jae
fs
dec
push
movsb
scas
fistpll
inc
pop
jge
fbld
inc
mov
inc
shl
mov
pop
sub
sbb
stos
in
dec
rcr
rcr
jnp
fldl
jb
or
cmp
shr
dec
adc
lret
sbb
mov
mov
mov
xchg
sahf
mov
mov
lock
mov
pop
mov
cwtl
xchg
test
pop
pop
cli
fwait
lahf
shll
fisubrl
sub
lds
push
and
add
cmp
aad
xchg
jo
push
lods
jne
aam
ds
loopne
xor
shll
pop
dec
inc
xchg
frstor
xchg
cs
cmovg
fwait
xchg
pop
jl
movl
mov
dec
adc
aas
push
mov
out
jo
lock
cltd
push
inc
adc
addr16
push
dec
pusha
es
insb
stos
xor
mov
mov
fnstsw
cmp
and
push
fisubl
jge
add
mov
test
rcrb
test
jge
js
xorl
mov
mov
jbe
movsl
mov
loope
ret
jno
shlb
dec
mov
mov
mov
aad
cmpb
mov
mov
lods
or
pop
xor
aad
pop
lods
sbb
mov
add
sarb
mov
mov
jnp
dec
lret
adc
enter
stc
jmp
fsts
mov
xchg
ljmp
in
jl
es
les
jae
cmp
pushf
jle
lds
sub
and
pop
mov
mov
dec
xchg
mov
add
jle
push
dec
lcall
iret
stc
push
inc
hlt
add
repnz
fs
jb
inc
stos
ds
add
add
cmc
dec
mov
lds
mov
ret
push
xor
push
stos
adc
pop
insl
adc
mov
sub
cmc
aaa
hlt
add
fiaddl
ret
xchg
std
shlb
shlb
out
add
fld
lods
pushf
sti
iret
bound
push
cmpsb
aaa
add
pushf
cmp
push
dec
lret
inc
or
mov
out
pop
cmc
imul
bound
add
jle
mov
and
cwtl
sub
mov
mov
cmp
std
add
cli
mov
xor
dec
or
dec
pop
jle
inc
sbb
adc
inc
inc
jge
inc
out
ljmp
sar
arpl
mov
lret
mov
mov
jnp
dec
sbb
push
mov
jne
repnz
call
cmpsb
cmp
scas
cmp
cmp
jg
daa
adc
sarl
fcomps
pop
scas
mov
outsl
xorl
fwait
xchg
mov
mov
cli
jae
loopne
jbe
cmpsl
ret
repz
fstps
js
or
subb
pop
and
xchg
iret
inc
push
and
cwtl
push
fildll
pop
pusha
mov
adc
mov
inc
cmp
mov
stos
arpl
addb
mov
iret
fldcw
aam
lods
pop
sub
andb
sbb
push
pushf
outsl
out
or
xor
pushf
jno
inc
test
inc
mov
lock
cli
xchg
add
and
cwtl
add
decb
ficoms
cmp
int
jecxz
and
aaa
mov
push
jmp
dec
xchg
jl
test
popf
fdivrs
sysexit
pop
idivl
fdiv
inc
adc
mov
jp
dec
inc
push
sub
mov
ss
mov
mov
push
and
addr16
and
and
lea
mov
cli
dec
dec
gs
inc
dec
add
cmp
dec
test
aam
sarb
cmc
dec
push
pop
jecxz
sub
divb
jb
mov
jge
out
jmp
cwtl
pop
outsl
push
xchg
sub
dec
jmp
loopne
sbb
inc
sahf
mov
adcl
stos
inc
out
out
jne
adc
lods
mov
ffreep
das
add
cld
jg
jecxz
mov
hlt
mov
sub
js
jo
pop
lock
ret
fdivrs
xchg
cmp
lret
mov
add
in
inc
mov
pop
push
adc
and
enter
jae
hlt
testl
inc
dec
mov
test
dec
iret
stc
mov
ret
sbb
in
shlb
sub
and
cwtl
cld
xchg
stos
xchg
fsubs
in
adc
insl
rcr
xor
cmc
inc
mov
pop
mov
xchg
cld
and
xor
add
xchg
int
sub
pop
jns
js,pt
sbb
mov
xor
jle
stos
ficomps
mov
pop
vunpcklps
and
in
or
sbb
push
xor
idivb
and
jmp
nop
notl
orb
mov
push
not
popa
xchg
sti
dec
test
fisttps
mov
imul
push
inc
xchg
jno
push
mov
or
leave
xchg
popa
aas
gs
and
adc
out
xor
cld
dec
shrb
xchg
pop
jae
mov
sub
jmp
lret
mov
das
divb
test
lods
in
pop
mov
adc
les
inc
push
insl
dec
cmp
mov
mov
scas
into
cmp
aam
sbb
cmc
inc
mov
stc
mov
mov
out
jg
or
test
shll
mov
lea
sahf
push
xor
mov
mov
cmpsl
jns
and
sti
adc
test
rcll
jp
data16
mov
arpl
push
rcll
arpl
bound
out
push
rclb
cmp
into
or
pushf
sbb
dec
sbb
xor
push
mov
insl
negl
fisttpll
sbb
jne
lods
jge
nop
jecxz
dec
xchg
sahf
into
mov
sbb
or
dec
daa
stc
and
xchg
inc
lret
cs
sub
sub
xchg
fmul
sbb
xor
pop
sub
pop
add
sbb
test
inc
scas
imul
decb
xchg
fwait
mov
leave
shufps
outsl
dec
cmp
repz
cmp
icebp
movsb
insb
inc
pop
mov
lret
cmp
mov
xor
out
or
pop
mov
sbb
push
mov
adc
mov
inc
idivl
sub
mov
or
dec
mov
aas
mov
pop
and
std
into
loopne
rolb
pop
or
lcall
ds
ds
lock
or
cmp
jmp
movsl
out
ds
or
popf
lods
into
mov
inc
cwtl
ss
cwtl
ja
push
loop
xlat
and
mov
mov
mov
or
nop
adc
sahf
fistps
leave
push
loope
push
fisttps
add
dec
orb
push
mov
cmp
repnz
test
or
imul
cmpsb
pusha
lods
daa
adc
jae
ret
jecxz
sti
cmp
xor
inc
add
pop
cmp
out
js
js
xchg
pop
add
ss
arpl
repz
push
push
rcl
scas
mov
stos
addr16
out
cltd
pop
pop
mov
shrb
pop
pop
in
fildll
inc
pop
jmp
fmull
fld1
xor
addb
stos
xor
stos
xchg
jle
das
mov
fiadds
stos
in
or
jmp
xor
test
cmp
ds
mov
lcall
xchg
add
aas
mov
bound
and
lcall
sbb
and
dec
adc
fstps
fmull
arpl
rcr
aas
jo
xchg
jo
mov
mov
cmpb
rcll
cmp
stos
mov
stos
inc
pop
mov
pop
iret
jg
mov
js
mov
xchg
pop
repnz
or
stc
lods
add
divb
dec
dec
shrb
push
mov
into
mov
in
mov
mov
test
test
lahf
push
add
pop
sbb
repnz
sub
sbb
push
push
inc
push
cmpsb
rclb
adc
pushf
clc
xor
pop
inc
mov
jle
pop
xchg
sub
xlat
ds
mov
pop
cs
rorl
rcll
xor
bound
mov
das
pop
add
aas
cs
ss
fwait
cltd
or
mov
leave
fs
inc
jmp
and
jbe
xchg
adc
enter
test
aad
mov
ret
push
add
push
xchg
fcomps
sbb
mov
dec
jmp
and
sti
pushf
push
rolb
ss
divl
repnz
push
xchg
jecxz
pop
std
dec
adc
lret
dec
aaa
sbb
aaa
cmc
mov
mov
cmp
xchg
sbb
push
pop
int
dec
cmc
lods
push
int
lahf
mov
or
adc
sbb
das
push
mov
int
filds
sub
loope
push
xlat
stos
daa
fistl
fsubs
push
dec
dec
xchg
jg
dec
jae
xor
mov
andb
out
gs
push
jae
imul
inc
mov
xchg
push
mov
adc
push
or
jbe
addr16
jnp
ret
mov
icebp
and
xchg
call
fisttps
inc
add
fiaddl
jmp
pusha
or
fsts
pop
gs
pop
fldenv
jne
ss
outsb
cmc
int3
cld
push
jg
add
mov
add
iret
mov
jp
xchg
mov
mov
sbb
mov
xor
inc
sbb
xor
cmp
and
sub
inc
mov
cmp
cmp
lret
xor
jo
pop
test
outsl
and
enter
cmp
pop
int
cld
inc
add
cs
push
sub
rclb
mov
sub
lahf
dec
icebp
xchg
and
mov
or
andb
repnz
ljmp
psubq
mov
insl
jne
popa
mov
scas
pop
mov
mov
aad
sub
call
push
xor
clc
push
jmp
pop
in
sbb
inc
je
xor
mov
idivb
sub
dec
nop
sub
sub
insb
les
xchg
mov
das
cli
repz
mov
imul
mov
imul
and
bound
icebp
adc
sarb
test
mov
data16
cmp
mov
fwait
mov
sbb
or
test
idivl
jecxz
xchg
sysenter
sub
mul
jae
inc
fldcw
dec
fadds
xor
mov
movsb
popf
in
dec
pop
mov
out
test
or
adc
arpl
jae
cmpb
dec
cltd
sbb
popf
pop
and
shlb
cmp
pop
mov
mov
rcll
fwait
mov
push
js
nop
mov
dec
and
and
test
and
ret
mov
int
pop
sub
sti
xchg
mov
mov
mov
es
jbe
aaa
pop
pop
jnp
mov
mov
jmp
or
stc
jo
push
lock
mov
int
outsb
test
mov
sub
dec
push
int
enter
pop
mov
in
inc
dec
add
dec
sbb
movb
in
push
or
push
rclb
hlt
sbb
sub
stos
movsl
xchg
ja
hlt
ss
push
mov
dec
pop
and
mov
jno
lds
jle
pop
jmp
ret
pushf
cmp
jne
pop
push
and
mov
mov
pop
iret
inc
sub
pusha
mov
or
inc
pop
mov
pop
loope
shll
pop
les
push
outsl
inc
mov
rorl
cltd
or
dec
loop
repnz
pushf
mov
sbb
out
in
dec
mov
mov
cmp
jp
sbb
pop
stos
sahf
cmp
add
insl
dec
lea
dec
mov
dec
dec
cmp
xchg
dec
out
sbb
cmp
sbb
push
push
jmp
fwait
into
sub
insb
pop
aaa
cld
push
add
xchg
push
roll
popf
addl
aas
push
add
push
repnz
cmpsl
xor
sti
jnp
pop
outsl
jl
pop
imul
shlb
and
adc
scas
jp
pop
ja
es
dec
jp
enter
jo
pop
or
iret
mov
sarb
mov
push
mov
call
mov
mov
dec
inc
in
out
out
or
mov
xchg
pop
jg
gs
and
imul
cltd
punpcklwd
aam
mov
mov
and
data16
lea
inc
fwait
int3
shlb
xlat
sbb
enter
lahf
iret
fldenv
je
adc
icebp
xchg
dec
mov
sub
mov
into
cs
dec
rcrb
add
mov
gs
inc
bound
jmp
in
inc
jno
push
pop
das
shlb
lods
repnz
xor
sbb
enter
int
or
inc
xchg
ja
xchg
pop
dec
imul
fisttpll
loope
lea
repz
xchg
lds
xor
dec
aam
dec
loope
sub
mov
imul
pop
inc
fwait
or
cmc
jecxz
std
scas
arpl
data16
mov
xor
push
aaa
jge
jp
mulb
leave
pop
mov
dec
sahf
vmread
mov
js
hlt
adc
sub
jp
add
sbb
addr16
enter
or
adc
xchg
orl
mov
jb
jmp
test
shlb
rolb
sub
or
cmpsb
push
jle
ror
xor
andb
ss
hlt
lods
popa
aam
into
stos
dec
jb
loope
loop
mov
in
sti
test
sub
cld
mov
or
sub
or
sbb
push
push
shrl
data16
pop
jp
dec
mov
pushf
shrl
mov
std
push
mov
mov
jg
jns
in
notb
cmp
add
sub
xor
minps
mov
bound
outsl
stc
sub
sub
inc
xor
xchg
dec
out
sbb
mov
sbb
sbb
cltd
cmpsl
ret
loop
jl
pushf
cmp
dec
or
sbbb
pop
lret
pop
in
in
mov
sub
arpl
movsb
arpl
arpl
jg
les
aaa
movsb
push
outsb
add
jecxz
and
jecxz
lock
jno
push
push
and
add
les
xor
popf
data16
xor
cmpsl
pop
out
jle
imull
shl
jecxz
xchg
add
add
and
imul
stos
test
ljmp
ss
mov
ja
cmpsb
dec
adc
cmp
roll
inc
iret
mov
lahf
notl
imul
mov
xchg
sahf
pop
sub
test
push
fsts
pushf
xor
inc
hlt
stc
xchg
xor
add
mov
icebp
ds
sar
test
jl
sbb
outsb
mov
stc
js
ret
decl
sub
jne
inc
or
and
sti
dec
lods
pop
sbb
jmp
xor
fldt
loopne
ret
mov
rcl
jae
add
lret
jl
shrl
xchg
jne
sahf
sbb
lret
cmp
inc
lods
hlt
dec
inc
inc
mov
sarb
add
mov
mov
loop
push
rclb
lret
jmp
sbb
movsl
add
test
and
cmp
inc
and
mov
or
xchg
cmp
fadds
mov
ja
and
sbb
repz
sbb
mov
clc
lds
popa
lods
xchg
cmpsl
jae
inc
cmpsl
sub
arpl
xlat
test
dec
orb
mov
and
cli
dec
sub
inc
call
bound
adc
push
aaa
mov
add
shrl
pop
sbb
sub
or
push
ficoml
fiaddl
xchg
fidivrl
ja
and
or
out
fisubs
stos
adc
push
or
stc
add
addr16
jle
sub
cmp
ja
push
cwtl
pop
inc
pop
rolb
testb
sbb
bound
inc
aam
pushf
cmp
fsubl
sti
repz
sti
or
push
mov
add
neg
fcomp
scas
and
repnz
sub
add
int
sbb
jno
dec
out
in
lds
and
arpl
loop
mov
cmp
mov
aaa
dec
fdiv
stos
lds
adc
hlt
xchg
mov
pop
in
pusha
xchg
je
ljmp
les
and
cld
mov
insl
mov
cmp
push
dec
pop
cmc
sbb
xchg
addr16
xchg
xor
bound
or
mov
mov
scas
ret
xor
xchg
mov
popa
fcompl
sti
js
gs
fs
xor
pop
jno
sub
stos
pusha
icebp
ret
cld
inc
vcvtss2si
outsb
aam
cs
and
out
jp
icebp
lahf
cld
inc
jp
cltd
mov
fimuls
pop
negl
xor
mov
aas
mov
mov
test
sub
adc
jecxz
jbe
repz
or
pop
pop
pop
pushf
cs
jmp
xchg
dec
mov
lahf
pop
xor
dec
xor
movsl
test
lds
into
xchg
dec
push
cmp
loope
xchg
mov
call
cmp
addr16
pusha
leavew
xchg
push
mov
mov
out
ja
shr
jl
je
xchg
hlt
mov
nop
cmpb
mov
mov
ss
xchg
fistl
xchg
adc
inc
fcomp
mov
pop
xor
scas
adc
pop
jl
fadds
jp
mov
xor
scas
negl
pop
xchg
adc
aam
xchg
test
loope,pn
psubw
cwtl
in
pop
lods
xchg
jb
cmp
bound
jo
pop
or
jne
cwtl
and
push
bound
sub
adc
or
fiaddl
jg
jbe
cltd
push
mov
mov
mov
ret
add
sti
jmp
cltd
inc
cld
imul
or
mov
cltd
popf
stos
xchg
hlt
sub
mov
cmovnp
cli
je
add
mov
push
xor
daa
dec
pop
xchg
mov
mov
xchg
adc
mov
in
cmp
inc
sbb
cli
repnz
push
arpl
mov
jge
out
adc
cmpxchg
cli
imul
dec
icebp
mov
xchg
ret
frstor
push
mov
int3
push
or
ret
aaa
jae
cs
dec
imul
jno
inc
das
xor
lret
into
fistpl
rcrb
out
nop
imul
mov
sbb
dec
ds
test
cmpsb
dec
fmulp
fimull
add
insb
sbb
orl
les
rclb
in
aaa
xchg
ds
mov
mov
push
inc
push
mov
jb
jbe
cmc
mov
push
bound
mov
lcall
test
push
mov
push
sbb
loop
mov
cld
ljmp
cli
inc
jbe
jge
dec
jmp
jecxz
data16
xchg
rcrb
aaa
clc
cs
jge
dec
int3
mov
js
push
cmpsl
push
shlb
adc
pop
aaa
inc
ss
inc
xchg
add
add
adcl
rcrb
rorb
mov
sahf
jo
mov
mov
dec
pop
inc
int3
popf
test
pop
test
dec
jle
push
and
cmpsl
xchg
fbld
pop
cwtl
push
xchg
shr
xor
push
push
icebp
fiadds
je
mov
mov
cmp
cmpsb
add
dec
scas
lret
mov
push
decb
loop
andl
mov
hlt
testb
mov
cpuid
push
ret
adc
cmp
shll
insb
dec
jge
adc
add
ffree
push
sbb
adc
cmpsl
push
adc
or
xor
pop
lret
pop
cmp
or
mov
inc
adc
xor
cs
mov
outsl
sti
loope
push
sub
fsts
or
inc
ret
aam
dec
lcall
xchg
pop
xchg
pop
imul
ds
out
xchg
and
sbbb
jno
jo
clc
cmp
sbb
arpl
push
ss
dec
sbb
test
movsb
mov
pop
cmpsb
int3
adc
test
and
sti
adc
jb
inc
add
lods
aad
fcmovbe
xchg
test
xor
push
out
xlat
lahf
outsl
les
sub
loopne
outsb
sbb
push
push
xor
sbb
xor
out
jb
ret
sbb
cld
rcrl
adc
ret
daa
sub
cld
pop
inc
mov
loop
outsb
int
jmp
add
lahf
inc
adc
fs
stc
sbb
sub
shr
cmc
call
sbb
scas
es
testl
aam
xchg
cld
cwtl
xchg
outsb
inc
xchg
sbb
insl
cmp
cmp
out
and
pop
mov
mov
int
push
mov
rol
in
fwait
dec
xor
push
xor
aam
incl
mov
xchg
add
push
jb
rcll
xchg
imul
lret
out
lea
or
xorb
mov
inc
add
bound
or
inc
cmp
lcall
aam
addr16
mov
push
mov
cmp
fidivrl
negb
enter
push
adc
ret
pop
and
lcall
sub
ljmp
pop
push
dec
xor
fidivl
push
in
xchg
fildl
fistps
xor
dec
xchg
clc
icebp
sbb
mov
inc
hlt
add
push
push
scas
push
jmp
hlt
lcall
or
and
daa
flds
test
rcrl
xchg
inc
and
xchg
push
sub
and
loopne
jmp
movsb
lods
cmpb
test
add
bound
movq
adc
add
sbb
leave
add
fiaddl
xorl
xlat
fs
shlb
popf
cwtl
mov
jmp
xor
push
int
das
jns
xchg
push
pop
push
lret
sbb
insl
scas
inc
pushf
jno
dec
mov
sub
jmp
and
add
inc
jl
jge
and
out
mov
es
loopne
or
scas
and
fsubrp
les
lea
sbb
loop
loopne
mov
and
shrb
sarb
mov
dec
sub
mov
cmpb
stos
fidivs
jecxz
pop
mov
imul
es
insl
fildll
xlat
jbe
sub
jno
pop
push
icebp
aaa
xchg
aaa
cmp
dec
mov
call
mov
jle
addb
or
les
pop
sub
and
mov
dec
repnz
inc
xchg
stos
or
xor
into
dec
and
sbb
stc
fxtract
xchg
insl
pop
lcall
pop
jg
inc
scas
stc
hlt
push
mov
add
ret
cmp
pushw
pop
or
push
xchg
push
out
pop
inc
sahf
shl
xchg
fcoms
xchg
cmp
sarl
cmpsl
mov
hlt
popf
dec
add
xchg
mov
xor
push
icebp
clc
scas
add
cmp
xor
imul
mov
add
add
imul
leave
jp
movsb
loop
push
sbbb
lods
pop
int3
fldcw
xchg
mov
mov
cli
stos
aam
jmp
out
shl
shrb
dec
mov
inc
into
ficompl
mov
jbe
jb
test
out
inc
insl
mov
mov
jecxz
adc
inc
leave
lds
mov
std
js
pop
ljmp
cmp
nop
push
push
adc
sti
cwtl
fdiv
pop
mov
punpcklbw
arpl
inc
pop
mov
movntq
test
cmp
pop
lods
lret
pushf
fists
xor
test
rclb
inc
add
mov
jg
push
jle
mov
xchg
shll
popa
divb
scas
or
fs
mov
dec
orl
pop
cs
addr16
jo
jno
jns
push
xchg
loopne
or
and
push
mov
fstps
mov
mov
aad
push
and
xchg
or
mov
call
mov
push
pop
jecxz
imul
or
pop
gs
cltd
mov
aam
push
iret
js
lods
xchg
or
mov
mov
clc
inc
sbb
pop
lret
and
fidivrs
mov
outsl
jo
pop
xlat
pop
dec
sub
pop
pop
fistpl
daa
notb
xchg
mov
es
push
in
cmc
mov
mov
fwait
orl
cmp
add
dec
test
mov
insl
and
inc
aam
stos
lret
sbb
push
mov
push
stos
jmp
fstp
test
ljmp
or
movsl
pop
add
jle
mov
mov
jns
cwtl
fildl
dec
push
inc
push
incl
dec
subb
roll
sarl
test
ja
imul
pop
hlt
test
fidivrl
mov
jae
inc
loopne
mov
out
movsl
cmp
and
rolb
stos
imul
mov
mov
movsl
push
add
mov
scas
lock
stos
sub
or
mov
jge
icebp
add
popa
ljmp
mov
repz
sub
xor
pusha
test
fidivl
fisubl
shr
pop
sbb
add
test
and
xor
aam
outsb
fcmovne
lret
xor
jp
ds
aaa
ljmp
out
dec
dec
and
jo
imul
outsl
pop
xchg
dec
mov
outsl
lahf
xor
inc
int3
aaa
lea
shrb
fsubrs
daa
mov
ds
in
lret
jne
push
std
or
xchg
mov
stos
ljmp
jecxz
jg
mov
xchg
and
sarl
mov
jne
push
xchg
sub
out
and
pop
pop
in
xchg
sub
xchg
xlat
jecxz
xchg
cvtps2pi
jg
or
aas
clc
xor
sbbb
inc
xchg
jle,pt
cmp
pusha
adc
jge
dec
js
popf
push
mov
outsb
loopne
pop
mov
int3
inc
lock
jle
dec
jo
push
test
testl
pop
gs
mov
idivl
outsl
addr16
std
jp
jg
int3
sub
jo
rolb
and
lods
je
xchg
loop
arpl
out
stos
lock
sbb
push
pop
jl
mov
popf
lcall
aam
xor
jp
sub
pop
mov
fistps
insl
xor
fadd
fsub
pop
dec
jmp
mov
mov
add
jne
or
inc
adc
pop
sbb
shl
add
cld
cmp
popf
push
fcomps
adc
fmul
nop
jae
inc
loope
rcll
pop
sbb
repz
mov
inc
inc
pushf
jnp
fsts
pop
mov
jno
in
add
sub
subb
mov
arpl
inc
pop
push
fisubrl
mov
sti
imul
xor
insl
jle
jae
mov
jo
test
sbb
stos
repnz
jle
sbb
mov
jge
inc
adc
mov
mov
in
mov
dec
mov
pop
cs
out
add
xor
ljmp
jns
out
xorb
xchg
mov
dec
ficoml
adc
xchg
inc
mov
dec
in
cmp
push
and
and
mov
jl
out
cmc
call
pop
mov
icebp
lahf
dec
ret
cmp
xchg
sub
mov
jne
xor
mov
cmp
xlat
xchg
mov
les
roll
addr16
js
rcrl
mov
leave
mov
xor
out
or
sub
mov
inc
cmp
jge
add
out
pushf
addb
push
mov
idiv
addr16
faddp
mov
xor
sahf
mov
in
mov
repz
insb
jmp
jns
jae
addr16
mov
pusha
bndldx
and
mov
sub
push
xchg
adc
nop
pop
jne
xor
aas
xor
dec
mov
mov
shlb
lret
lret
or
push
jae
fnstenv
pop
scas
fcompl
add
pop
fisubl
cmp
dec
cmp
adc
movsb
adc
insl
jnp
mov
int3
je
mov
shll
cmp
add
xor
or
mov
inc
push
push
xor
pusha
add
scas
mov
test
cmp
adc
movsb
sub
mov
shl
clc
push
xor
js
call
xor
inc
fcomp
cmp
or
out
cltd
in
add
hlt
adc
sub
xchg
inc
xorl
clc
das
sub
jne
out
ja
les
add
int
sti
loop
push
jl
xchg
jno
sbb
stos
inc
outsb
repz
push
xor
cmp
ljmp
jae
popa
or
aad
fsubl
cmp
daa
pop
dec
push
jae
js
xchg
pop
mov
fadd
cwtl
mov
jnp
dec
or
pop
mov
cmp
pop
and
or
fs
xchg
outsl
push
or
flds
popa
test
push
enter
jne
test
push
test
sahf
ret
mov
repz
insb
jns
cwtl
scas
int3
jns
fisubl
push
sbb
push
fbstp
xchg
xlat
cmp
arpl
outsl
pop
nop
int
ds
ja
mov
iret
xor
sbbl
imul
xchg
daa
push
jl
in
ffree
mov
push
cwtl
jle
mov
mov
aaa
push
imull
cs
add
mov
idivb
cld
loopne
sbb
cwtl
ds
mov
xor
inc
mov
out
push
test
std
prefetcht1
inc
repnz
sbb
pop
cltd
mov
jnp
adc
orl
mov
lea
sbb
cmp
cmpsl
sbb
push
pop
fidivl
dec
push
stc
loopne
inc
push
push
fucomp
shlb
pop
cmp
jae
and
jle
fucom
pop
je
mov
dec
push
dec
bound
shrb
pop
mov
cmp
sbb
in
sbb
pusha
ds
cs
and
mov
mov
out
arpl
sub
pushf
pop
nop
jmp
insb
mov
sbb
pop
lret
scas
in
loopne
out
adc
inc
pushf
or
sub
daa
cmp
mov
mov
mov
test
aam
cmp
sub
mov
sbb
testb
cli
and
cmp
nop
push
movsb
cmp
cmc
xchg
mov
jo
std
daa
fcoml
sbb
pusha
shr
imul
test
test
xchg
mov
jge
call
lods
call
push
leave
pop
in
or
popa
lds
in
push
xchg
mov
sub
imul
mov
add
pop
jg
pop
inc
pop
mov
dec
outsb
into
iret
jl
jne
jmp
lea
and
out
scas
xchg
push
cmp
mov
pop
lds
in
lret
test
lods
rcrl
push
fdivrs
int3
iret
gs
push
xchg
mov
scas
mov
pop
popf
lods
je
data16
push
out
popf
push
jmp
mov
mov
lret
insl
shl
les
inc
sub
or
push
stos
addl
out
mov
test
cmp
orb
sbb
je
loop
sbb
sub
pop
sub
cltd
mov
xor
push
arpl
dec
and
shlb
fisttpll
mov
outsb
cld
adc
jmp
in
pop
pop
add
lret
lods
int3
adc
and
adc
mov
xlat
rcll
sub
das
sbb
nop
mov
push
pusha
call
pushf
test
in
les
pop
sub
sbb
dec
scas
lods
shld
mov
shlb
cs
adc
out
pop
or
mov
mov
sbbb
pop
jl
mov
rorb
iret
dec
int
bswap
insl
aam
fwait
mov
dec
std
cmp
inc
orl
cltd
jne
call
inc
arpl
test
lret
in
xchg
sbb
aam
and
jne
bound
jb
dec
pop
mov
cmpsl
xor
sub
mov
shl
insl
or
jp
mov
add
xchg
xlat
cmc
insb
jbe
out
xchg
sbb
int
adc
scas
inc
inc
cmp
aad
and
mov
or
pop
jge
in
inc
negb
adc
cmp
and
sbb
les
cld
push
push
test
xchg
and
add
or
in
in
pop
shlb
and
mov
add
mov
orb
dec
add
mov
cmpsl
cmp
jns
leave
inc
sbb
push
test
icebp
xchg
test
lods
into
mov
or
xor
shrl
xchg
cmp
sahf
jb
jns
mov
mov
arpl
xlat
pop
push
mov
xlat
push
mov
stc
xchg
sub
sbb
pop
icebp
iret
mov
jne
lods
ja
stc
jmp
arpl
rol
mov
sbb
frstor
and
mov
jno
mov
pop
mov
push
shlb
pop
test
rcrl
mov
adc
dec
jb
int
pusha
std
and
outsl
mov
adc
ds
mov
xchg
and
pop
outsl
sbb
movb
call
pusha
int3
popf
lock
jl
das
nop
jmp
mov
scas
shl
jo
and
lcall
sahf
clc
or
dec
orl
sbb
adc
andb
mov
xor
push
adc
call
mov
je
mov
cli
sti
add
push
in
adc
stos
add
arpl
xchg
xor
jo
cmpsb
ret
fninit
xchg
cltd
imul
mov
inc
dec
divb
cli
jmp
or
push
out
je
sub
xchg
pop
cmp
mov
push
pop
insb
mov
mov
xor
test
cwtl
mov
movsb
mov
sbb
mov
jl
sbb
dec
cli
rclb
mov
jmp
pop
lret
mov
inc
loopne
repz
aaa
push
shlb
hlt
das
popf
test
lret
xlat
cmpsb
jo
movsb
dec
sbb
pop
sbb
lahf
cmp
sub
push
lock
mov
dec
fucomp
jle
je
xor
in
enter
fs
subl
ret
and
loope
adc
ja
lret
adc
pop
and
test
dec
push
or
or
sbb
xchg
fstps
scas
or
nop
cmp
lret
in
scas
xor
cmpsb
in
int
xchg
hlt
dec
pop
test
repnz
aam
pop
enter
pop
inc
clc
xor
mov
int
in
daa
aas
mov
push
xchg
cmp
add
icebp
popf
cmp
mov
test
fs
adc
fisttpl
inc
push
xchg
aam
loope
pushf
dec
pop
dec
cmp
xor
nop
fistpll
ret
bound
out
cld
frstor
fildl
push
sbb
or
in
in
sub
sub
lret
sahf
repnz
loopne
lds
insl
dec
icebp
test
and
mov
inc
addl
push
mov
mov
lods
cmp
fucompp
pop
insb
mov
jbe
adc
stos
repnz
clc
mov
xor
daa
out
xchg
mov
pop
fsts
mov
mov
lcall
mov
imul
loopne
inc
imul
jae
inc
out
imul
xchg
push
push
adc
out
adc
cmp
mov
xchg
pusha
jae
loop
lds
xor
adc
sbb
adc
mov
scas
sub
insl
inc
push
or
stos
pop
add
cwtl
pop
mov
or
mov
andl
push
mov
daa
or
fists
stc
mov
and
push
inc
add
aam
sub
or
in
ret
mov
sahf
jl
mov
xor
xchg
inc
jno
adc
inc
aas
xchg
adc
adc
cmpsl
mov
sub
add
jl
out
fdivp
mov
push
xor
mov
test
adc
cmpsl
or
dec
ljmp
xor
xchg
sahf
fidivrs
ljmp
int3
push
xchg
sub
pop
push
dec
das
test
cli
adc
inc
stc
inc
fcom
cmp
mov
scas
or
inc
in
xor
mov
or
sbbb
aaa
ja
cmp
mov
data16
bound
daa
pop
jne
dec
push
into
jnp
xlat
popa
cmp
pop
gs
lds
pop
or
mov
ret
cmp
xor
mov
xchg
mov
adc
inc
adc
pop
xor
mov
std
enter
fistl
ret
sbb
jo
push
rcll
inc
pop
push
sub
pop
jl
mov
xchg
insl
jecxz
bound
mov
dec
rcl
loop
mov
push
mov
add
mov
pop
inc
push
push
xchg
mov
jbe
pop
push
or
in
dec
cmpsb
dec
sbb
adc
xlat
inc
and
aaa
or
dec
sub
mov
jno
test
cwtl
mov
add
adc
mov
xchg
andl
ret
mov
in
insb
and
adc
push
mov
out
xorb
es
stc
add
mov
mov
aas
ljmp
call
lods
dec
push
pop
cld
xchg
xor
imulb
and
mov
mov
jae
sbb
outsl
lcall
adc
mov
jno
mov
jecxz
repnz
mov
push
xor
std
outsl
adc
test
inc
xor
sarb
jbe
mov
std
and
pop
outsl
rcrb
loop
in
push
es
xlat
push
lea
jle
sarl
jl
xor
stos
cmp
push
xchg
gs
dec
push
aaa
hlt
cld
mov
mov
lret
outsb
aad
xor
inc
mov
mov
sarl
nop
jmp
enter
cli
xchg
sub
mov
nop
iret
xchg
cmp
mov
push
movsb
and
loopne
lods
jp
fldl
mov
jo
icebp
mov
mov
mov
pushf
frstor
test
insb
adc
lea
and
add
add
xchg
push
aas
push
sub
je
jmp
fdivrp
lods
mov
in
pop
mov
push
inc
xor
orl
pop
dec
cltd
pop
fsubs
test
pop
adc
mov
dec
aad
and
cmpb
outsb
mov
aam
fwait
xchg
dec
outsl
sub
pushf
xor
cmp
lret
divl
lret
sarb
cmp
mov
jl
fists
push
push
aaa
imul
addl
or
pop
inc
mov
push
cmpb
add
fidivrl
cltd
bound
inc
pop
sub
or
adc
or
sahf
xchg
ficoml
xor
add
jno
mov
jne
leave
pusha
push
sbb
es
add
aad
nop
test
cmp
cmp
fildl
cmp
jle
mov
jbe
mov
adc
repnz
add
inc
mov
pop
pop
and
mov
mov
push
xchg
xor
mov
sbb
cmpsb
or
enter
outsb
aas
imul
and
add
inc
stos
mov
pop
mov
icebp
cld
or
or
bound
cmp
stc
cwtl
mov
inc
iret
cmp
xchg
and
nop
sbb
sarb
loopne
mov
pop
shlb
mov
pop
push
cwtl
shlb
mov
push
out
lods
test
push
movb
mov
call
add
mov
frstor
pop
lret
adc
jp
push
sahf
pop
out
cmp
jbe
or
pop
add
addr16
push
sub
lea
pop
sbb
push
jo
pop
jmp
or
mov
rcr
cltd
scas
popf
ret
fucomp
push
jae
sbb
enter
insb
es
rcr
mov
mov
xor
mov
mov
scas
enter
out
inc
xchg
mov
data16
js
jl
dec
push
pop
jae
fwait
pop
sahf
mov
inc
push
mov
cmp
mov
out
nop
pop
scas
xchg
out
mov
xchg
mov
mov
loopne
inc
add
sbb
xor
out
or
add
mov
loop
xchg
jecxz
ss
daa
ja
xchg
scas
jmp
negb
shrl
jmp
mov
inc
sbb
xchg
mov
mov
xchg
xchg
daa
loopne
popa
scas
push
sbb
adc
inc
movsl
lret
dec
icebp
cmpsb
outsl
cli
push
cmp
mov
aaa
mov
test
sbb
repz
mov
push
cmp
int3
mov
sub
inc
pop
gs
and
lcall
lods
cmc
pop
inc
rcll
fnstcw
jmp
jnp
push
add
inc
cmpsl
add
pop
xchg
js
loopne
in
repnz
popa
mov
push
movsb
or
adc
xor
ffreep
imul
dec
dec
and
test
inc
mov
pop
sub
mov
les
push
movsb
add
push
mov
pop
add
add
into
leave
add
dec
inc
int3
outsb
stos
sub
in
fists
xor
and
iret
xor
inc
fadds
xchg
pop
mov
addr16
mov
push
dec
scas
cltd
popa
sbb
add
lds
ficomps
cmpsl
or
outsl
iret
std
mov
cmpsb
mov
scas
outsb
in
jne
dec
xchg
adcl
sahf
add
mov
and
pushf
dec
cmp
pop
es
push
sub
jl
and
xchg
inc
push
cmpb
fsts
xor
outsb
xlat
aaa
je
mov
and
mov
xchg
test
aad
jns
sub
orl
add
jae
lds
pop
xchg
scas
push
hlt
mov
ds
mov
jne
test
cli
dec
popf
in
dec
jbe
dec
xor
pop
testb
in
sti
xchg
xor
jne
xchg
sbb
add
or
mov
out
xchg
dec
sbb
ret
mov
mov
shrl
lea
js
dec
mov
aas
decb
cmp
orb
cmpb
sysret
xor
cmp
mov
jb
ret
nop
jle
push
daa
shlb
sahf
testb
aas
scas
pop
push
xor
out
xchg
test
push
mov
jmp
xchg
rcrl
xchg
adc
jl
outsb
add
add
cmp
je
mov
xchg
push
cmp
insb
lds
jae
pop
fs
push
xor
fdiv
mov
lahf
stos
xchg
iret
mov
add
jmp
int
dec
sub
pop
push
sbb
je
xor
outsb
pop
mov
sbb
in
outsl
mov
xchg
dec
rcrl
xchg
lret
out
mov
and
push
cmp
jns
call
pop
es
or
les
gs
and
jns
dec
lcall
cmp
xlat
pop
mov
or
push
dec
cmp
test
scas
ds
and
loope
test
lcall
mov
js
cmpl
jg
dec
and
repnz
out
pusha
adc
ds
mov
dec
push
mov
xchg
fnstcw
insb
xorl
sti
or
incb
sahf
jle
add
xlat
mov
nop
inc
xchg
inc
rcr
mov
movsb
and
les
xchg
arpl
inc
popf
mov
shrb
jno
outsl
xchg
pop
xor
popa
adcb
xor
das
and
dec
dec
xchg
lods
repz
cmp
fst
bound
or
mov
outsb
pop
mov
adc
js
or
pop
fldenv
cmp
jg
dec
push
inc
add
pop
popf
jno
xchg
jl
js
sahf
add
leave
out
adc
in
shll
aas
mov
and
cmp
leave
inc
cltd
fsubrl
push
rorl
pop
mov
aam
push
dec
loopne
rcll
aam
shll
scas
fnstcw
loop
adc
mov
clc
push
rcrb
loopne
sub
fldcw
daa
and
rcrl
gs
pusha
sbb
add
sbb
aaa
mov
mov
loope
cwtl
mov
inc
outsl
mov
pusha
icebp
push
adc
fildll
clc
sub
mov
adc
mov
fstpt
icebp
mov
js
xchg
pop
xchg
imull
push
enter
or
jne
bound
loopne
loope
aaa
push
or
add
xchg
xchg
out
ja
fcmovnu
daa
push
lret
nop
xchg
repnz
stc
insb
jg
cmc
pop
in
xor
in
xchg
mov
lret
mov
adc
push
xchg
jbe
dec
jmp
les
mov
aam
push
mov
sbb
ficompl
inc
cmpl
mov
stc
decb
aam
mov
outsb
jb
pop
aad
push
jo
jl
js
pop
mov
lahf
vmovq
jnp
daa
xchg
in
int3
sbbb
or
xchg
inc
and
addr16
and
add
xchg
cmpsb
and
pop
testl
jle
loopne
arpl
mov
add
shl
shll
add
loop
xor
fmull
mov
lret
and
jle
std
or
lods
int
movsl
xor
push
push
hlt
push
out
sbb
cmpsb
int
test
loop
xchg
jmp
jmp
std
or
and
sarb
dec
pop
add
sub
add
adcl
shlb
int3
insb
xchg
or
insl
loop
jbe
test
mov
lcall
mov
mov
xchg
das
call
popa
dec
clc
xchg
jp
push
stos
cmp
mov
lea
sub
outsb
fists
xor
cmp
push
cmpps
and
jb
pushf
inc
inc
in
cltd
jp
sbb
mov
in
in
and
mov
or
mov
cmp
dec
rorl
sub
addb
outsb
sti
push
cmp
mov
mov
cmp
outsl
shlb
pop
in
sbb
pop
jecxz
mov
sub
fists
aaa
mov
dec
sbb
dec
lret
loope
mov
or
call
fadd
sbb
ret
sub
mov
jl
xchg
sub
jmp
lret
pop
pusha
push
notb
data16
pop
mov
lock
dec
or
mov
xor
jb
lock
mov
adc
aad
insb
sub
sub
hlt
repz
and
pop
cmp
aam
push
push
inc
lcall
mov
aad
leave
orl
push
iret
loope
les
adc
out
je
dec
adc
mov
cwtl
mov
add
cmp
dec
bnd
mov
mov
popf
dec
leave
pop
and
dec
cmp
lods
mov
cli
sub
lods
in
movsb
cs
lods
arpl
add
fistps
mov
rcrl
or
jne
xchg
sbb
ss
jo
fidivs
pop
lret
jl
xchg
leave
scas
aad
or
psllw
or
pop
jno
pusha
push
push
mov
mov
pop
add
xchg
mov
stos
ss
into
repnz
mov
mov
ljmp
and
movsl
hlt
jnp
sbb
stos
push
testb
shrb
ljmp
xor
lea
shlb
pop
pushf
pop
dec
ds
sti
xchg
xor
and
mov
or
add
dec
lods
sti
push
fadds
hlt
pop
das
push
sbb
por
pushf
or
xor
adc
repz
lock
out
push
mov
xchg
rcr
popa
xchg
pop
jge
orb
cpuid
xchg
mov
cmpsb
inc
sub
sbb
push
in
pop
pusha
dec
dec
and
daa
daa
fisubl
and
mov
jmp
inc
xor
out
jne
stos
sbb
mov
push
fiaddl
cwtl
fwait
lds
lret
mov
arpl
lods
movsb
mov
mov
mov
fbld
push
loope
jne
stos
jecxz
call
pop
rcrl
ja
jno
aaa
adc
sub
and
cmp
lds
cmpl
iret
cmp
rolb
jbe
jo
pop
rolb
lds
cwtl
test
mov
int3
out
sbb
leave
xchg
jmp
and
gs
ret
popf
jg,pn
je
int
sbb
jmp
in
sahf
pop
cmpsb
add
hlt
ret
mov
or
cwtl
cmp
out
fstpl
sbb
adc
gs
mov
mov
cld
sbb
loope
ja
test
lcall
sbb
and
out
insb
xor
popa
scas
adc
pop
inc
loop
push
testb
xor
orl
jp
lds
scas
mov
push
outsl
scas
lahf
inc
xor
into
xchg
inc
xchg
jmp
sarl
mov
nop
movsl
mov
xchg
movsb
outsb
notl
push
xor
and
push
test
in
pop
sbb
call
aaa
aad
fwait
xchg
mov
test
pop
mov
jb
inc
sbb
xchg
rcrb
push
pop
imull
push
jno
les
pop
cmpsb
mov
jg
loop
lea
das
add
push
jg
outsb
rcrl
fidivrs
mov
ret
cmp
jge
mov
mov
test
hlt
js
inc
das
dec
repz
adc
push
xchg
pop
mov
dec
cmp
and
popf
leave
sub
sub
or
lods
loopne
mov
ds
jns
sub
fwait
sbb
pop
mov
hlt
mov
cwtl
lcall
pop
mov
mov
add
stos
clc
inc
notb
ret
push
mov
pop
test
push
jb
aas
jmp
out
stos
ja
and
fimuls
iret
or
lds
mov
fdivl
mov
lret
cs
pop
lods
scas
fwait
xor
or
test
data16
sub
push
jno
lods
add
daa
fmuls
push
imul
into
inc
in
int
jno
cmc
inc
adc
xchg
and
movsl
push
or
in
mov
pop
sub
pop
push
enter
push
stos
pusha
xor
cmp
inc
and
mov
mov
gs
sub
movsb
mov
leave
push
jne
sbb
mov
mov
mov
xor
mov
inc
push
xchg
adc
add
jnp
das
jns
test
lods
xchg
sub
test
call
insb
addr16
rcl
inc
jae
jbe
call
cmp
loop
movsb
lcall
daa
iret
add
dec
gs
aad
lcall
addr16
and
mov
dec
movsb
pop
ror
fldenv
jbe
aad
xor
jb
outsl
xlat
and
jg
mov
sub
mov
cmp
pop
sub
mov
mov
pop
int
in
pop
push
mov
cli
fwait
lret
mov
pusha
xchg
xchg
dec
test
in
lret
test
ss
mov
pop
jecxz
sahf
push
hlt
cmp
inc
in
add
sarl
rcrb
pop
add
push
and
inc
xchg
dec
cmp
jge
adc
imul
xorb
mov
xchg
shrb
mov
pop
enter
aaa
push
push
mov
out
fidivs
iret
dec
jmp
rol
mov
xlat
and
jmp
test
addr16
fisubl
jo
lret
push
inc
int
loop
sarl
bnd
cmc
shll
mov
cmp
mov
in
mov
stos
jns
push
dec
andb
mov
cli
jecxz
adc
pusha
add
fs
xor
ret
add
mov
cmp
cmp
or
pop
push
or
lcall
cmp
fsts
add
cmp
cmpsl
js
or
jp
fisttps
daa
sub
inc
clc
js
outsl
sbb
xchg
in
fcoml
sub
fstps
cmpsl
mov
repz
cmp
jg
or
ret
test
popa
xor
je
push
testb
push
pop
sbb
inc
cwtl
das
xorb
sub
adc
or
repnz
mov
lock
fnstcw
sbb
out
jns
dec
xor
mov
jbe
pop
pop
lahf
push
inc
lret
sti
testb
cmp
adc
add
out
xchg
inc
dec
inc
push
pop
cmp
inc
jb
jge
mov
mov
jne
es
jno
dec
fisttpll
out
scas
cmp
mov
cs
sbb
adc
loopne
rep
xchg
nop
jno
adc
pop
mov
jg
jle
jmp
xchg
jecxz
mov
pop
add
in
push
pop
rclb
shll
jns
push
shr
push
jge
dec
data16
fisttpll
pop
add
pop
rcrb
mov
mov
and
cmp
imul
sbb
xchg
xor
std
xor
into
xchg
xor
xor
aad
loop
push
cmp
ds
orb
mov
and
out
jle
xor
dec
or
mov
cmpsl
cli
add
loopne
test
imul
push
mov
cmc
in
out
loop
idivl
fisubs
mov
ret
inc
lods
pop
mov
hlt
push
aam
js
stos
out
mov
mov
repz
out
sub
popa
xchg
mov
push
gs
flds
cmpb
mov
ffree
sbb
rcll
push
mov
mov
mov
ds
jg
pop
ja
mov
iret
jb
add
dec
sbb
pop
or
push
dec
cmpsl
xchg
jecxz
iret
outsb
sub
adc
or
mov
decl
xlat
pop
cmp
int3
dec
mov
sub
bound
addl
or
push
ja
aam
cmpsb
popf
lret
inc
int
lret
dec
jg
push
and
int
push
jge
les
sti
repnz
fildll
loope
stc
je
insb
cmp
lea
mov
or
jmp
mov
sbb
idivb
out
push
jg
xchg
jmp
cli
data16
mov
push
aas
inc
jle
pop
jns
and
cmpsb
cmp
es
cmp
faddl
sub
lret
cmp
pusha
movsb
xor
fmull
aaa
cmp
loopne
adc
nop
xchg
sbb
out
adc
inc
mov
sub
ljmp
mov
out
outsl
adc
int3
das
hlt
mov
sar
cs
mov
add
mov
mov
arpl
sub
data16
outsb
xor
xchg
imul
lds
jg
or
sti
imul
pop
subl
mov
ret
adc
incl
scas
in
inc
je
xor
test
popf
mov
jmp
sbb
mov
aam
sbb
xor
scas
sbb
mov
jl
xchg
add
pushf
mov
repz
fsub
jl
sub
xchg
xlat
jg
cs
arpl
xor
fisubl
int
rorb
mov
jg
sbb
loopne
xor
adc
sub
push
jmpw
out
jae
adc
cmpsl
mov
mov
xchg
dec
sti
dec
cmc
test
jne
xchg
pushf
xchg
or
mov
dec
jp
pusha
and
fdiv
inc
xlat
and
in
pop
push
fdivrs
jecxz
repnz
fwait
xlat
cld
xchg
sub
mov
xchg
jbe
add
and
je
cmc
add
dec
xor
and
cld
inc
jge
push
adc
test
ss
xor
mov
imull
dec
xchg
mov
mov
adc
push
mov
push
jecxz
fiaddl
int3
pop
jecxz
sub
out
pop
lahf
leave
ror
cmpb
fsts
aaa
xor
inc
cmp
cltd
insl
movsl
ret
bound
pop
or
xor
xor
cmpsl
push
mov
adc
icebp
cmpsl
repz
pop
out
pop
out
jp
fbstp
or
cmp
push
out
fcmovu
out
xchg
xchg
dec
data16
lcall
jno
clc
fnsave
add
scas
and
dec
stos
push
js
xlat
ds
out
lods
cmp
testb
fwait
pusha
push
ficomps
call
mov
push
loop
xor
ljmp
jo
push
adc
jno
mov
addr16
cmp
mov
lock
out
push
bswap
and
test
sub
shrb
mov
repnz
sbb
adc
xchg
adc
sbb
mov
mov
mov
jo
pop
mov
in
inc
or
lods
lock
mov
push
xchg
lret
sub
xchg
int
jb
out
daa
int
sbb
pop
push
in
xor
fstpt
mov
mov
xchg
and
cs
sub
mov
xchg
jle
push
or
outsb
push
test
pop
out
cmp
jnp
cs
loope
adc
mov
xchg
pop
pop
pop
jmp
adc
in
xchg
pop
call
addr16
mov
or
loop
jle
cmpl
add
jg
xor
mov
jnp
dec
mov
dec
sub
rcrb
dec
push
lret
xor
pop
jnp
stos
flds
stos
cld
xor
cmp
into
outsl
shl
adc
dec
outsl
cli
pop
jno
pop
pop
pop
jne
popf
jo
lods
sbb
bound
sub
arpl
repz
pop
movsl
imul
mov
dec
sub
repnz
test
lret
push
push
jno
orl
insl
jbe
cmc
fsubp
out
cmp
cmp
repnz
jne
fmuls
jbe
sub
adc
in
mov
jge
jmp
xchg
mov
pop
cmp
or
imul
sub
and
fstpl
mov
xchg
cmpsl
dec
mov
in
xor
js
cmp
inc
mov
sbb
adc
bt
imul
hlt
les
test
and
in
jne
pop
jbe
push
xor
adc
call
mov
repnz
test
pop
ret
rolb
cmp
mov
mov
enter
fwait
push
cmp
lret
mov
stos
cmpsl
movsb
test
fildll
addr16
jmp
dec
sarb
push
test
das
mov
jl
loop
pop
jge
jmp
push
ds
ljmp
dec
movsl
addr16
push
movsb
adc
and
pop
jae
jo
inc
popf
mov
lock
jg
cmp
xor
fidivrs
int
pop
pop
add
subl
mov
mov
adc
aad
lock
push
cltd
xchg
hlt
push
jmp
notl
inc
mov
lcall
addb
sti
jns
sub
jae
jne
and
cmp
enter
xchg
jecxz
add
cmp
or
lds
sub
xor
loope
int3
out
or
cmp
stc
leave
je
mov
mov
lds
xchg
jge
pop
jne
repnz
or
lcall
int
call
xor
movsl
push
and
jnp
inc
inc
das
adc
cmpsb
mov
and
jno
jg
pop
and
fs
sahf
pop
pop
xor
sub
push
fsubs
jne
lods
dec
xchg
lahf
adc
push
and
jo
cwtl
and
add
nop
addr16
mov
rolb
es
loope
xchg
jl
das
adc
cmp
in
cs
add
clc
in
int
xlat
xchg
xchg
mov
fcompl
das
mov
pusha
dec
adcb
push
enter
stos
imul
inc
mov
mov
out
cmc
xchg
pop
daa
sub
jl
sub
adc
or
clc
push
int
scas
and
dec
sub
mov
mov
push
std
jecxz
mov
mov
jp
scas
ret
push
popa
in
push
and
mov
and
lret
mov
xchg
and
jo
pop
dec
dec
push
sarl
mov
mov
add
xor
fcompl
ret
xchg
and
movsl
out
ljmp
mov
ficomps
daa
aaa
inc
mov
sbb
sub
dec
mov
std
xchg
adc
and
sub
leave
out
test
pop
lahf
sub
stos
aas
lea
and
popa
pop
in
loopne
or
jle
subb
or
test
mul
cmpsb
std
loop
and
and
mov
sub
adc
adc
sub
sub
int3
cmc
xor
mov
fisubl
lcall
and
test
andl
mov
ljmp
aad
and
adc
mov
mov
inc
and
addr16
inc
roll
jne
add
sahf
aas
fdivrl
sbb
xchg
add
lods
mov
sub
out
ja
repnz
mov
call
or
lret
mov
arpl
std
adc
rcl
outsb
push
lock
mov
xchg
pop
add
mov
pusha
adc
add
mov
adc
out
cmp
and
pop
cmp
and
mov
pop
mov
and
mull
aas
sub
adc
sbb
fdivrp
jecxz
mov
lods
mov
mov
and
lret
adc
int
fsubr
add
xchg
adc
add
lea
pushf
adc
cwtl
inc
dec
xor
xchg
pushf
iret
push
mov
das
dec
popl
stos
les
dec
xlat
xchg
loope
add
out
popf
sub
push
outsb
rcrl
jmp
cmp
jae
sub
sub
jne
stc
xorb
rorb
rcrb
mov
dec
enter
mov
lods
push
xchg
roll
in
xchg
stos
inc
arpl
sub
roll
sahf
pop
enter
jecxz
rorl
addr16
sub
jmp
icebp
inc
daa
xlat
mov
pop
clc
inc
mov
icebp
pand
fs
cmp
adc
jl
rcrb
stos
std
je
rolb
stc
or
adc
stos
sti
mov
test
xlat
push
inc
in
imul
mov
negb
loop
pushw
rclb
subl
mov
pop
aaa
mov
mov
stos
rclb
inc
jmp
xor
mov
repnz
in
outsb
rol
in
cwtl
rol
inc
loopne
adc
and
imul
aam
sahf
icebp
das
push
sub
fdivs
dec
jle
ljmp
es
imul
xor
ljmp
std
pop
cltd
fidivrl
in
andl
movsl
ljmp
jb
cli
sbb
subb
push
outsl
adc
xor
pop
push
xlat
imul
xor
xchg
imul
mov
popa
mov
sub
loopne
pop
out
jmp
stos
sbb
leave
mov
adc
in
pop
cwtl
mov
push
aas
lds
jl
sbb
mov
pusha
jl
add
pop
nop
push
push
outsl
and
dec
xchg
lret
jne
mov
mov
push
mov
pop
imul
jns
lods
push
nop
xchg
lock
dec
sbb
and
je
lea
lock
enter
adc
push
cli
sbb
jg
je
mov
sbb
jl
les
leave
aas
mov
cmc
sbb
imul
xor
inc
cmp
sub
xchg
pusha
jnp
xchg
sub
lcall
mov
mov
mov
popa
push
sub
mov
outsb
inc
lahf
popf
inc
ret
leave
bswap
lods
xor
or
xchg
mov
popf
lahf
aas
lret
and
es
cmp
xor
fsubrp
mov
pop
rcrb
mov
cld
add
pop
jp
ss
xor
push
scas
sbb
cli
imul
dec
xlat
ja
adc
xor
jle
js
ja
xor
jae
jl
hlt
cmpsb
pop
sti
ficoml
inc
addb
mov
sub
mov
lods
xchg
in
outsb
dec
hlt
fdivrs
rol
movsb
addl
cwtl
sub
inc
jae
dec
test
add
popf
aad
xchg
cmp
or
repnz
xchg
je
daa
lods
cmp
add
xchg
mov
dec
xor
adc
push
ficomps
scas
cmpb
loop
sub
mov
es
jne
adc
out
test
push
and
cltd
sti
xor
or
and
aas
push
mov
dec
fwait
ja
cmc
mov
lret
test
insb
push
xchg
lcall
addb
adc
ret
enter
repz
jne
imul
lahf
in
dec
shrb
cmpsb
in
mov
lahf
addr16
loope
and
rolb
pushw
stc
or
jne
cmp
ret
xchg
int
cmp
loopne
cs
out
aaa
cmp
scas
negl
inc
mov
arpl
and
jns
or
push
pop
mov
xor
imul
in
in
in
jecxz
fidivs
in
enter
sub
push
sub
pop
lds
or
sub
sar
fldcw
fnstsw
fisubl
mov
pop
push
in
dec
lahf
mov
test
xor
int
fistl
pop
idivb
mov
cmpb
outsl
sti
xor
pop
push
xor
xchg
hlt
icebp
or
inc
sub
adc
popf
xor
mov
push
jbe
dec
mov
out
jns
mov
clc
pop
repnz
imul
addl
inc
dec
and
ffreep
mov
faddl
nop
dec
and
inc
push
arpl
dec
nop
out
mov
loope
jae
or
cmp
jae
dec
xchg
int
pop
cmp
mov
inc
lea
in
adc
cld
add
cwtl
xor
push
xor
out
pop
push
out
fidivs
outsb
aam
jbe
pop
xchg
add
jl
mov
fdivl
push
push
stos
push
jp
cmpsb
pop
outsb
xchg
add
bts
pop
adc
adc
mov
pop
into
subl
les
imul
outsb
into
cwtl
sarl
jns
cmc
loop
xchg
aaa
iret
cmp
cwtl
lcall
and
gs
add
push
dec
in
sub
and
popa
xchg
sub
xchg
xchg
push
push
ficompl
or
add
dec
cmp
andl
icebp
sub
int3
iret
pop
lahf
lret
add
dec
adc
jecxz
jp
call
rcrl
dec
dec
xchg
mov
push
cmpsb
fnsave
fidivrs
test
pop
push
scas
sbb
or
sub
mov
pop
lcall
popa
sub
fwait
fwait
sbb
inc
mov
sahf
inc
mov
add
iret
hlt
lods
sbb
or
pop
es
addl
inc
out
cmp
hlt
adc
orl
add
mov
mov
push
xchg
or
outsl
dec
cli
xchg
icebp
dec
sarb
cmp
push
mov
mov
and
jb
jge
xchg
push
sbb
pop
sub
jg
dec
cmp
adc
dec
and
jle
mov
les
in
lret
inc
fstpl
inc
xor
stos
xor
popf
push
or
xor
inc
fildll
mov
jl
xchg
dec
jmp
sbbb
xor
nop
jbe
inc
in
sub
sbb
mov
hlt
iret
in
sub
mov
jo
xlat
mov
mov
mov
hlt
pop
mov
sbb
pushf
cli
or
imul
and
xchg
inc
inc
push
jo
cmp
filds
loop
aas
mov
leave
fcoms
loopw
xor
cmp
cmp
daa
sbbl
pop
dec
loope
push
mov
lods
lods
out
lea
push
inc
mov
jmp
jae
mov
cmp
jle
mov
ficoms
xor
mov
addr16
mov
mov
stos
dec
jo
dec
hlt
sbb
stc
push
cld
pusha
push
mov
push
jbe
mov
jmp
mov
xchg
mov
jne
outsl
rorl
adc
lea
in
pop
imul
les
popa
test
push
inc
or
pop
mov
push
xchg
dec
icebp
in
mov
pop
out
push
rcr
inc
push
push
add
sbb
nop
dec
sub
testb
insb
rclb
add
bound
sarl
dec
dec
cmp
ror
dec
inc
mov
fxch
jno
hlt
loopne
mov
xor
popf
or
lods
jp
in
and
loopew
sti
scas
daa
enter
pushf
adc
hlt
cmp
lret
sub
rcrb
xchg
pop
jecxz
lret
loope
repz
sub
stos
lret
idivb
test
sub
jmp
dec
dec
fisttpl
pop
pop
push
xchg
and
cmp
and
jmp
inc
mov
in
push
and
and
sbb
pop
popa
cmp
dec
cs
xor
xchg
sub
adcb
cmc
stos
xchg
cmp
push
outsl
mov
mov
popa
jno
push
in
and
push
dec
lock
or
out
dec
and
rorb
sbb
inc
push
jg
es
jl
mov
insl
das
into
popa
repz
testb
arpl
rolb
rcl
in
rcll
leave
jecxz
xorb
fldcw
dec
stc
inc
sbb
stos
repnz
xchg
int3
test
mov
mov
mov
out
enter
sahf
add
or
or
orb
cmp
mov
in
push
xchg
test
dec
and
mov
js
xchg
ds
test
push
and
cltd
xchg
pop
int3
jns
repz
xor
or
cmp
push
subl
mov
inc
mov
xor
mov
cltd
add
jo
inc
testl
xchg
add
rcl
fcompl
add
push
dec
xchg
and
dec
mov
adc
dec
dec
cld
fstpl
lcall
arpl
ljmp
push
jecxz
stos
popf
xchg
aad
add
mov
cld
mov
mov
mov
test
out
lea
push
mov
in
nop
movsb
sub
shl
xchg
and
cmp
push
dec
outsl
xor
push
adc
push
cmp
mov
cmp
ds
stos
call
sbb
mov
je
push
jg
ret
inc
pop
aam
mov
adc
sub
std
test
sbbl
ret
xlat
outsl
decl
adcl
jnp
mov
loop
mov
and
push
mov
fcoml
sbb
and
mov
aaa
sbb
adcl
xor
sub
xchg
sub
push
cmp
xchg
insb
xor
add
or
sub
fldcw
sbb
insl
into
scas
mov
sti
xor
xchg
mov
xchg
aaa
push
loopne
mov
sub
or
mov
mov
mov
inc
mov
mov
lock
push
add
fisubrl
cld
pop
sahf
imul
call
cmp
into
pop
sbb
sbb
xchg
dec
mov
mov
pop
xchg
int
rorl
inc
stos
insl
repz
js
lea
jnp
pop
lret
hlt
mov
mul
cs
xchg
fwait
out
add
ret
or
loop
or
call
cli
push
sub
out
repnz
ss
xchg
ret
lret
sbb
sti
add
cmp
fbld
pusha
xor
sbb
sbb
fnstsw
stc
sbbb
call
jecxz
xchg
mov
and
testl
ffreep
int
push
testl
mov
leave
fnstenv
inc
jle
add
dec
or
mov
faddp
scas
ret
push
std
and
testl
sti
inc
in
lock
imull
xchg
aam
nop
rcrb
push
sarb
sti
mov
pop
xor
xchg
dec
add
lods
testb
iret
pop
popf
ljmp
xchg
addr16
insl
call
cmp
mov
xor
cmp
fnsave
lea
jle
push
testb
xor
leave
mov
jns
mov
fwait
fs
dec
fildll
xchg
sub
cld
inc
xor
pop
scas
adc
sti
jbe
popf
aaa
lock
fs
or
or
inc
lods
jns
mov
cmpsb
jmp
sub
lods
ss
push
xchg
sbbb
mov
mov
ja
jae
fists
sub
sub
orl
and
xlat
sbb
adcl
fidivl
stc
out
pop
lods
test
push
insl
mov
data16
stos
adc
lds
xchg
cli
loope
fidivrs
dec
mov
iret
xor
inc
xchg
lret
fldcw
jl
add
sub
ficoml
arpl
hlt
dec
pop
mov
jno
add
outsb
movsb
dec
loopnew
mov
sbb
push
push
xchg
in
sbb
ds
aad
sub
cld
outsb
jg
mov
jl
dec
pop
push
inc
mov
jle
and
cltd
mov
inc
add
movsl
cmp
xchg
sbb
js
pop
outsb
jbe
push
jnp
pop
sub
rcrb
imul
cmc
shr
or
in
dec
mov
out
jnp
sub
sub
pop
js
xchg
ret
xlat
mov
push
dec
or
out
add
test
add
mov
test
xchg
inc
dec
sarl
add
addr16
mov
mov
sbb
jae
adc
shrb
scas
jne
sarb
call
push
and
inc
enter
into
add
lock
pop
lcall
or
or
rcll
ljmp
hlt
sub
scas
fildl
ds
mov
outsl
rorb
insl
inc
jl
or
jg
test
dec
jae
xor
pop
jne
mov
cmp
push
xchg
and
aam
into
jmp
sbb
repz
jecxz
loop
mov
cmp
out
test
mov
pop
push
mov
sub
cmp
jl
adc
jno
jae
lret
data16
aam
lret
jnp
dec
cli
push
add
shrl
inc
cmc
push
cmpsl
push
out
and
fidivl
xchg
cmp
sbb
popa
push
insb
jmp
addl
jbe
lds
shll
jg
adc
jmp
movsl
mov
jb
inc
aam
inc
mov
lds
cmp
xchg
pop
or
shrb
adc
movsb
iret
jge
jae
jns
je
test
mov
repz
adc
sbb
sbb
es
call
add
mov
cmpsl
daa
cmpl
jecxz
int3
jecxz
xlat
sbb
popa
mov
xor
mov
mov
adc
push
in
adc
jb
stc
push
mov
ds
in
fildl
add
into
cmpsb
rcrb
clc
or
add
push
lahf
out
inc
cmp
xchg
and
pop
ja
bound
push
or
mov
cwtl
dec
ret
in
cmp
popa
nop
xor
mov
loop
ficoms
push
jbe
decl
movsl
dec
mov
push
sahf
das
ficoml
faddl
xchg
nop
pop
xrelease
testb
xlat
jg
rcrb
insl
push
jmp
out
sti
mov
adc
inc
loop
xor
adc
xchg
movsb
dec
mov
pop
mov
xchg
sub
jg
xor
pop
test
push
ljmp
shll
push
and
xchg
int
xor
frstor
and
add
adc
push
adc
and
sub
fsubrl
addb
xchg
sub
pop
dec
nop
adc
inc
ljmp
xchg
mov
ja
into
popa
pop
insl
cmc
mov
dec
cmp
nop/reserved
mov
cmp
aas
mov
sub
stos
xor
mov
sub
push
ss
punpckhdq
loop
into
pushf
pop
icebp
sarl
es
cmp
fisubs
jnp
pop
push
dec
add
cmp
mov
repnz
cmp
fstps
push
pusha
shrl
cmp
sbb
hlt
imul
and
inc
fmull
jo,pt
cmpsl
lahf
add
je
pop
add
sub
jp
sbb
movsb
cld
and
les
data16
mov
pop
sub
loope
bnd
mov
adc
bound
xor
les
ds
jae
sbb
sub
push
outsb
movsb
mov
jmp
cld
push
jns
test
inc
jg
push
xchg
ds
and
pop
lcall
fists
xor
rorl
loope
pop
push
mov
movsb
loop
jmp
jns
bound
and
xchg
cmpsb
mov
mov
popl
jnp
aas
adc
mov
jnp
lock
cwtl
inc
dec
es
cmp
fucomi
sbb
int
xor
nop
sbb
fs
inc
and
aad
and
xlat
xor
cmpsb
xchg
fnstenv
mov
push
jns
mov
shll
xchg
lahf
testb
out
xchg
popa
add
add
repz
ret
or
mov
stos
push
xchg
lret
jno
addr16
xor
stos
and
cmp
lret
fisttpl
jns
cmpsl
jne
mov
cmp
jno
xchg
xlat
cltd
sbb
or
adc
adc
mov
rcrb
sbb
xor
mov
jae
loop
sub
ja
xor
cld
arpl
in
rclb
xor
adc
cmc
inc
stos
sarl
xor
outsl
xchg
jnp
sbb
nop
xchg
pushf
call
jg
jno
push
jno
jno
in
popa
mov
mov
mov
jmp
and
mov
iret
cmc
fisttpll
mov
pop
sub
push
xchg
insl
rorb
andb
push
into
inc
push
mov
jno
xor
fxch
stos
les
mov
sbb
mov
sti
fldl
pop
cmpsl
es
jle
or
and
push
and
out
xchg
mov
outsl
sbb
sbb
int
enter
inc
iret
pop
push
or
loope
adc
inc
push
adcb
lea
jne
dec
jbe
stos
lret
push
mov
pop
mov
push
push
pop
xor
mov
test
shll
insb
inc
sub
or
test
xchg
in
dec
inc
das
sub
fdivl
pop
push
clc
sbb
sbb
xchg
push
xchg
sbb
jl
testb
lods
cli
jno
cmp
mov
call
outsl
es
pop
pop
imull
push
push
jle
popf
jmp
pop
aas
add
xor
mov
add
xor
sbb
add
mov
push
sbb
mov
cmp
push
inc
cmp
fwait
sub
in
shl
pop
or
shl
cmp
lock
stos
xor
in
lods
mov
aaa
pop
mov
push
cmp
outsb
adc
add
gs
mov
fwait
arpl
pop
lods
lcall
mov
jmp
fwait
popf
jle
ss
sub
xor
sbb
enter
adc
push
jbe
mov
or
out
pop
repz
xor
inc
loope
call
mov
inc
cmpsl
mov
xchg
pop
frstor
pop
out
ja
dec
mov
add
imulb
mov
subl
push
punpckldq
adc
les
xchg
xchg
sbb
imul
fwait
and
mov
mov
lahf
mov
scas
pop
int3
stc
js
and
movsb
enter
nop
stos
push
adc
mov
push
jmp
mov
cs
ret
out
jp
imul
arpl
cmpsb
gs
fbstp
les
sar
aam
fs
push
mov
xchg
inc
std
testb
mov
add
insl
imul
fbld
lcall
loopne
ds
jmp
rcl
dec
or
add
and
stos
fdivl
jne
mov
sub
jmp
pop
into
push
out
sbb
sbb
pop
adc
xlat
stos
push
and
movsb
insb
pop
in
lods
add
popa
test
addr16
cmp
stc
sub
push
les
mov
subb
xchg
ds
add
cltd
orb
data16
int3
push
sub
fstpl
adc
or
pop
jecxz
jl
or
outsl
jp
movsl
pop
dec
repnz
lods
insl
cmpsb
iret
movsl
push
xchg
mov
and
fbstp
out
int
imul
xor
and
call
test
cmpsl
jae
inc
ret
dec
aad
dec
adc
cmp
jmp
xchg
push
dec
je
push
fdivs
jbe
cltd
iret
xor
and
icebp
jp
pop
call
call
rcl
dec
sub
cmpsb
cs
push
mov
aaa
int
stc
dec
stos
cmp
outsl
or
jb
std
rolb
jo
cmc
mov
enter
and
sti
mov
push
fildl
push
scas
cmp
inc
inc
in
pop
cmp
rcr
in
mov
inc
rcrb
pusha
icebp
mov
add
leave
cmp
dec
dec
lahf
pop
and
stos
xor
sti
outsl
testb
mov
into
add
enter
mov
jne
jmp
xlat
and
cmp
push
lea
push
ret
jecxz
je
insl
add
or
or
mov
in
gs
and
pop
mov
jno
enter
int3
adc
sahf
outsl
mov
shlb
lahf
and
adc
ret
icebp
scas
lods
pop
movsb
lock
bound
and
data16
push
roll
dec
cmp
scas
jns
clc
lcall
std
inc
cmp
jne
mov
xlat
test
and
mov
popa
mov
mov
xor
push
ss
cwtl
out
and
les
icebp
push
pusha
push
mov
sbb
test
jnp
xor
test
shll
outsl
imull
pop
stos
mov
ror
sbb
mov
jns
rol
rcr
lret
xor
sbb
dec
xchg
aad
pop
cmp
rorb
cmpsb
adc
je
push
cmp
jae
repnz
test
test
cmp
adc
test
sbb
inc
movsb
jnp
adc
cmp
lahf
sti
nop
mov
mov
sub
pop
pushf
pop
sbb
pop
pushf
cmp
push
sahf
mov
sbb
xchg
shlb
pop
cld
add
popf
movsl
arpl
jbe
filds
mov
scas
cmpsb
jb
adcb
notb
cli
push
sbbl
pop
jae
mov
jecxz
clc
in
mov
add
jo
xchg
xchg
mov
adc
jns
or
sbb
mov
or
and
in
push
leave
jge
into
push
mov
adc
ss
or
push
push
cld
inc
push
pusha
stos
dec
aas
xchg
cmp
inc
pop
filds
inc
add
ffreep
orb
bound
sti
mov
xor
sahf
stc
imul
lret
mov
addl
sti
xor
sub
mov
lcall
vpcmpeqw
mov
fcomp
pop
loopne
cmp
and
push
pop
std
inc
or
push
stc
nop
mov
fdivs
add
lods
and
and
inc
ds
out
jl
ret
ret
fnstcw
sbb
xor
inc
shrl
lock
sub
or
mov
adc
or
rcl
popa
jo
pop
and
add
add
push
paddusw
in
iret
sbb
adc
sbb
add
sub
loop
sbb
xorl
pop
fcoml
hlt
lahf
push
arpl
ret
mov
sbb
cld
ret
les
loop
or
iret
xor
out
xor
cltd
and
movsl
bound
sbb
xor
ljmp
xchg
fwait
cmpsl
inc
mov
les
inc
and
fsubl
adc
push
fcmovu
adc
push
or
push
xchg
scas
cmp
sbb
cmp
icebp
ficoms
xor
sbb
dec
adc
aam
cmp
or
mov
pop
stos
in
pushf
fwait
lcall
lock
lds
jp
ret
inc
pop
sbb
ds
lods
inc
cli
vsqrtps
adc
aad
push
adc
push
sarl
in
loope
pop
bound
mov
mov
jmp
sub
add
pop
inc
fstl
xor
cli
and
int3
add
cwtl
lret
aas
xor
sub
jg
jmp
in
popa
xor
dec
sub
int3
cld
hlt
cmpsl
push
jecxz
jnp
mov
and
ret
mov
iret
imulb
fs
add
sti
fnstcw
popa
inc
cli
or
pop
cmpb
and
xchg
jns
popa
cmp
mov
inc
pop
lcall
xor
mov
lahf
aaa
push
cld
test
lret
jge
add
stos
out
arpl
incb
dec
popf
adcb
or
mov
dec
inc
data16
pop
sub
push
jle
add
xchg
xchg
xor
xchg
sbb
xchg
enter
jl
or
imul
andb
ret
nop
dec
mov
fmulp
jle
xchg
sbb
inc
sub
xchg
pop
sahf
fxch
push
or
lret
mov
jle
js
adc
outsl
and
aas
lods
clc
arpl
xor
mov
cmpsl
xchg
fstl
pop
rorb
ret
adc
daa
xor
pop
push
in
popa
cmc
adc
xchg
xchg
test
dec
test
pop
or
xchg
enter
in
xchg
int3
loop
jbe
push
mov
das
lea
xor
dec
int
aaa
mov
fwait
inc
xchg
cmpsl
imul
stos
sub
outsl
divb
lea
mov
dec
adc
fdivs
xlat
jmp
jg
sbb
sbb
rol
icebp
shrl
stos
jno
test
enter
pop
iret
push
std
test
lock
inc
fdivrl
sub
or
scas
mov
call
in
sbb
dec
leave
xor
fs
or
adcl
jnp
ja
xor
sub
push
jmp
inc
xor
mov
mov
push
cmpsb
mov
fbld
and
jecxz
adc
loopne
cs
jmp
movsl
dec
fwait
cli
cmpsl
scas
scas
loopne
imul
loope
push
nop
ret
or
in
cli
sbb
mov
int
stos
mov
mov
test
sub
jp
movsb
mov
pop
xor
jl
popf
in
imul
adc
negb
or
xor
jg
pop
adc
clc
bound
loop
cld
int3
sub
std
mov
rorl
xchg
cmpsl
aam
inc
adc
mov
pop
int3
pop
jae
xchg
lock
out
iret
insb
dec
test
adc
dec
lcall
xchg
daa
dec
aam
pop
push
jecxz
lret
out
push
push
rolb
imul
in
adc
jge
out
inc
sbb
mov
mov
fcoms
subb
call
out
mov
adc
push
daa
mov
in
mov
mov
inc
test
sti
jnp
movsb
dec
jnp
ret
cmp
xchg
and
lods
dec
aad
add
stc
pop
out
mov
or
xor
sbb
inc
lods
adc
inc
fstp
mov
mov
mov
dec
inc
add
push
jns
dec
lret
inc
jp
inc
mov
inc
jns
int3
enter
popf
hlt
je
inc
incl
cwtl
mov
iret
sub
sub
mov
jo
push
xchg
lahf
fisttps
dec
inc
jnp
scas
dec
push
aaa
mov
push
pusha
outsl
dec
push
loop
insb
pop
cmp
test
sbb
and
aad
xchg
add
ja
inc
cmp
arpl
dec
push
xor
cwtl
sbb
dec
xlat
cld
test
xchg
lea
leave
sbb
aad
ror
ret
push
and
and
leave
and
mov
push
stos
in
lods
rclb
and
or
cmc
iret
insb
movsl
dec
notl
iret
ret
lods
sub
lret
jle
lret
cmp
js
pop
repnz
dec
sti
dec
dec
inc
sbb
sahf
jp
mov
adc
lahf
push
pop
lcall
add
fs
and
xor
sub
addr16
push
dec
fmuls
rorl
mov
mov
sub
xor
xor
cmp
cmp
add
adc
add
xchg
push
jbe
adc
push
pop
jge
xchg
sbb
mov
mov
cmp
jl
call
arpl
inc
es
enter
xor
inc
cmc
fidivrl
rcrb
inc
jo
hlt
mov
xor
test
xchg
or
fisttps
out
push
jg
loope
and
out
dec
stos
ret
mov
clc
push
ret
fmuls
insl
lock
popa
or
sbb
sbb
lahf
mov
subl
out
mov
scas
shrb
add
fisttpl
dec
aam
gs
fldenv
push
stos
ss
popa
aaa
gs
xchg
add
xchg
adc
sub
mov
mov
xchg
add
xchg
popf
xchg
fcmovnu
inc
rcrb
sbb
clc
js
mov
mov
je
mov
push
and
adc
pop
repnz
hlt
les
fadd
cmp
sbb
leave
xor
mov
pop
inc
repz
pop
lret
mov
sub
int
out
push
mov
loop
popf
sbb
dec
arpl
push
mov
popa
orb
bound
leave
mov
or
ljmp
aas
out
jle
les
cmpsl
pop
pop
repz
xchg
fprem1
xchg
cli
xor
mov
mov
cmp
xchg
es
ss
adc
push
gs
loope
xchg
xchg
arpl
inc
sbb
fisubl
in
mov
jae
or
push
jbe
push
mov
es
jle
jl
loopne
out
mov
ja
dec
push
das
shll
sahf
in
sbb
popa
mov
dec
arpl
rcl
xchg
and
rorl
out
das
aad
cmp
into
cmp
and
inc
push
mov
loope,pn
fidivl
cmc
xorl
adc
cmp
xchg
jl
mov
adc
push
fs
sbb
add
sbb
inc
ds
insb
lahf
and
stos
mov
push
mov
loope
pusha
lahf
push
leave
dec
arpl
pop
sbb
popa
adc
inc
imul
xchg
inc
inc
mov
xchg
ja
jmp
add
dec
mov
mov
lahf
rorb
xchg
jmp
adc
out
and
ret
jl
mov
sub
add
movsl
sub
ret
push
sbb
or
popf
or
mov
xchg
shlb
xchg
out
fwait
mov
je
push
pusha
fsqrt
pop
xor
mov
cmp
int
sbb
imul
sahf
mov
push
jae
loop
loope
push
mov
test
sbb
adc
and
shl
aam
es
push
aad
mov
sub
or
xchg
sbb
enter
mov
movsl
adc
mov
add
fldl
sbb
fdivrp
pop
and
or
lods
adc
push
jg
xor
nop
in
xor
jecxz
je
andl
cwtl
cs
adcl
nop
lahf
scas
push
cmpsl
xor
adc
mov
mov
leave
dec
inc
xor
sub
je
ficoml
clc
push
push
mov
mov
cld
les
jb
insb
movl
xor
movsl
mov
ljmp
loop
std
lock
pop
mov
shlb
cmp
sbb
dec
inc
lea
ljmp
imul
adc
movsb
jge
xchg
adc
pop
bound
jl
movsl
lods
arpl
mov
filds
dec
jno
xor
mov
sub
inc
push
subl
mov
mull
push
sub
xchg
rcll
andb
mov
lods
mov
lcall
out
and
sbb
jo
sub
in
pop
push
or
lahf
imul
in
push
adc
es
scas
dec
or
adc
and
out
sub
inc
xchg
mov
mov
pop
sub
and
lock
clc
std
sbb
sub
insb
dec
pop
push
mov
sub
mov
sbb
sti
and
rolb
jmp
dec
pop
xlat
in
push
fbstp
xor
xchg
cmp
sub
lcall
jle
xchg
push
adc
xor
ss
xorb
das
mov
adc
jb
adc
jae
imul
push
rcll
or
icebp
add
jmp
mov
pop
lret
mov
loopne
mov
or
jb
int3
jp
js
add
mov
pop
xchg
js
jle
push
dec
cmp
out
insl
adc
jb
testl
pop
mov
mov
add
sub
mov
xchg
lcall
push
xor
repz
cmp
cli
jp
lcall
stos
xchg
mov
or
stc
imul
shrl
rol
pop
jne
scas
ja
or
mov
fsubs
cld
sbb
inc
cmp
pop
and
sti
adc
daa
fldt
add
adc
cmpsl
and
roll
lods
adc
sbb
shrl
mov
sub
push
ja
inc
in
sbb
cmp
out
jo
mov
ljmp
inc
pushf
mov
pop
ss
in
scas
pop
push
mov
cmp
or
mov
cwtl
fadd
jmp
add
mov
std
cmc
add
dec
imul
dec
inc
adc
mov
pop
test
mov
icebp
imul
jb
fistpl
repz
mov
ds
test
cmp
xchg
dec
pop
cwtl
incb
ret
scas
dec
push
jns
xchg
inc
lret
and
inc
cmpsl
jge
dec
mov
enter
out
pop
jne
inc
cmp
fs
mov
jno
jecxz
ja
xchg
out
sarl
loope
cmp
fisubl
xchg
mov
mov
scas
cltd
pop
mov
and
out
imul
repnz
sub
bnd
jbe
push
fildl
mov
fcom
call
sub
inc
pushf
dec
mov
add
pop
inc
daa
sbb
xchg
pop
or
sbb
dec
xchg
xor
addr16
push
cmpsl
mov
jg
out
xor
add
sahf
scas
inc
mov
or
or
out
in
dec
push
jbe
mov
add
ret
jns
daa
test
je
sub
sub
in
mov
dec
clc
mov
addl
lock
fstps
or
mov
lcall
fldt
adc
xor
ljmp
fiadds
dec
insb
inc
mov
xor
mov
mov
push
or
jmp
sbb
std
cltd
sbb
mov
jnp
int3
lret
mov
cmpb
in
lds
rorl
cmp
dec
push
and
fdivr
fildll
andl
and
xchg
leave
mov
fimuls
mov
pop
add
into
inc
aas
ljmp
jo
xchg
std
add
push
das
call
inc
fldl
es
sub
pop
and
enter
decl
in
xchg
ret
in
push
stos
cmpsb
cli
mov
sti
mov
fidivs
cld
cmpb
and
mov
popf
imul
inc
loopne
fdivrs
xor
add
xchg
inc
or
fiadds
pop
mov
pop
mov
jbe
push
sahf
jge
icebp
mov
jns
shrb
pushf
jg
std
lahf
cmp
ja
lahf
cmc
xchg
pop
test
dec
outsb
sub
sbb
test
and
cmpb
lock
cmp
arpl
cltd
sub
rclb
js
in
push
nop
aam
xchg
xor
dec
es
clc
pusha
xchg
call
xchg
das
sub
pop
daa
jle
scas
scas
inc
fsts
xchg
jp
jle
lcall
sahf
push
xchg
stos
sub
pushl
mov
xorb
and
lea
dec
and
insb
out
in
pop
push
dec
lds
ljmp
xchg
and
dec
mov
jecxz
push
xchg
mov
jns,pt
ja
pusha
subl
and
mov
out
ror
adc
mov
mov
and
sbb
imul
cwtl
shl
mov
mov
sub
dec
pop
cli
mov
jns
mov
mov
subps
sbb
cltd
jnp
imul
cld
jnp
cld
xchg
ret
or
idivl
sub
xor
pop
insl
mov
push
push
test
sti
dec
mov
and
mov
nop
les
push
mov
std
clc
xchg
mov
sti
add
mov
insb
mov
lock
sti
or
adc
pop
test
mov
xor
add
imul
adc
loopne
sti
sbb
orb
int
inc
cli
jge
jge
or
in
cmpsb
call
push
lods
sbb
insl
pop
xor
and
bnd
popa
and
mov
aam
xchg
aas
jb
scas
out
aas
and
les
repnz
arpl
lret
cmp
xor
cmp
mov
mov
inc
cltd
gs
xchg
cld
dec
test
js
sub
mov
shrb
es
inc
cmp
repnz
test
mov
aaa
inc
inc
inc
leave
out
or
push
in
or
sarb
mov
mov
pop
jnp
pop
repz
and
or
lods
scas
adc
in
xchg
call
mov
jne
ds
and
icebp
push
cmp
popa
xlat
and
and
sub
jmp
jo
mov
fldl
mov
sub
push
repnz
fsts
lea
jl
xchg
mov
inc
xchg
fbstp
in
xlat
or
sbb
lods
lret
or
imul
add
fwait
movl
jmp
sbb
sti
push
fdivl
xchg
jbe
mov
pusha
cmp
movsl
lea
pushf
xchg
and
xchg
adc
fistpl
sahf
xchg
call
test
in
inc
out
imul
cmp
or
xlat
xchg
nop
mov
add
dec
repz
loop
scas
xchg
adc
push
imul
mov
sbb
test
jge
add
hlt
imulb
popa
pop
ja
out
cli
call
mov
push
ljmp
sbb
dec
lahf
outsb
lcall
add
jl
flds
shll
xchg
lds
and
xchg
xchg
js
popa
leave
jne
and
notb
stos
jp
xchg
sbb
jecxz
push
mov
add
add
scas
mov
mov
jmp
jno
pcmpgtb
push
jbe
es
mov
dec
add
aas
popf
push
cmpsb
push
rorb
imul
xor
test
mov
sbb
xor
mov
cltd
sarl
icebp
loop
stos
lea
dec
push
xorl
inc
dec
adc
jne
les
add
stc
or
mov
pushf
ds
mov
xorb
stc
mov
mov
gs
or
mov
and
mov
sti
push
inc
and
or
pop
popf
jbe
jne
popf
les
movsb
add
flds
sahf
repnz
lock
jmp
lds
gs
xchg
dec
test
pop
aaa
dec
hlt
mov
sub
cld
stos
jne
mov
cmpsb
js
sti
inc
filds
mov
push
adc
fcmovnb
dec
cmpsl
pusha
pop
push
sub
dec
pushf
pop
repz
fdivs
xchg
lods
aas
pop
mov
jge
outsb
mov
decl
mov
lcall
xor
mov
jno
loope
and
mov
mov
das
repnz
add
pushf
das
cwtl
inc
lods
out
sahf
icebp
shl
add
cmpsb
aad
pop
out
int
sbb
xorb
lods
jne
pop
pop
insl
in
lds
jo
pushf
test
jge
and
mov
push
add
and
sub
cli
fisubl
sub
mov
insb
mov
xchg
stos
in
repnz
xor
repnz
roll
dec
sub
jae
sub
out
add
fs
pmaddwd
jno
jecxz
js
mov
fnstenv
sub
or
loopne
mov
std
fildll
ret
rorb
pop
adc
stos
push
sahf
dec
hlt
cmp
push
sub
sub
fwait
push
jge
fdivrl
aam
dec
sti
push
ds
jmp
push
sub
jecxz
push
add
fildl
andl
inc
shr
sub
pop
push
fsub
xchg
lods
insb
and
push
mov
aas
dec
sbb
lea
xor
data16
or
sub
sub
lahf
in
mov
cwtl
xor
jne
and
lret
adc
cmpsl
and
xor
out
sub
and
inc
rcrl
pop
inc
inc
paddsb
pop
mov
hlt
rorl
pop
lods
in
pop
cmpsl
adc
std
add
insl
outsl
cli
push
jno
and
push
mov
movsb
mov
test
add
cltd
xor
or
cmp
cmp
xchg
lods
adcl
orl
ss
xchg
idivl
cmp
push
mov
std
pop
jae
xor
xchg
xchg
loopne
mov
push
dec
fwait
into
xor
xor
jp
shlb
push
js
push
sub
pop
imul
mov
aad
repz
fmulp
idiv
pop
pop
shll
jmp
ret
dec
inc
or
push
shr
stos
mov
push
pop
dec
sti
and
lahf
scas
les
or
add
test
add
jne
fisttps
repz
push
loopne,pt
scas
mov
xchg
push
sub
stos
and
pop
cmc
test
nop
repz
sbb
jl
lds
cmp
movsb
cmpsl
frstor
mov
pop
pop
push
sub
jl
bound
lods
jle
inc
and
xchg
mov
fistl
mov
pop
sub
xchg
push
leave
out
loope
fs
jo
push
dec
data16
ficomps
lods
inc
add
mov
push
push
test
pop
ljmp
push
ss
push
rorb
addr16
pushf
cmp
jb
out
adcl
inc
mov
push
add
popf
test
pushf
dec
int
fidivrl
jo
mov
jg
orb
test
xor
rorl
sar
fdiv
jo
aas
mov
adc
testb
fnstcw
mov
into
adc
push
das
sub
mov
mov
inc
pop
xorb
inc
movsl
xchg
lock
xchg
lret
and
lahf
sarl
mov
cld
inc
imul
call
insb
xchg
ret
mov
push
inc
mov
mov
or
fmuls
outsl
es
imul
les
xchg
cwtl
sub
mov
dec
sub
mov
mov
xor
jne
pop
inc
push
or
dec
addr16
cmp
fs
iret
or
lcall
stc
xor
rcrl
xor
pop
xlat
cmp
push
imul
shl
xchg
mov
repz
cmpl
inc
insb
and
stos
out
clc
xor
push
test
mov
xchg
mov
push
dec
stos
addr16
in
add
popf
pop
jnp
and
mov
xchg
fsubrs
cli
das
jno
cmp
loopne
clc
push
pop
outsl
bnd
pop
out
sbb
fcmovne
pop
mov
jno
test
insb
js
cli
test
out
ljmp
adc
ret
and
push
shr
adc
test
mov
or
sbb
mov
push
leave
fcoml
xchg
and
inc
lods
mov
push
sbb
cmp
cltd
jge
outsb
jl
mov
outsl
xor
dec
cmc
rcrl
xor
movsl
cli
ss
or
mov
jno
xor
add
and
fimull
popf
ret
pop
clc
xchg
sbb
jecxz
mov
imul
rcrl
inc
xchg
mov
add
inc
pushf
rorl
jo
and
hlt
arpl
push
sarb
fcomps
dec
sub
mov
pop
sub
mov
xlat
xor
adc
pop
push
loope
cld
or
add
cmp
outsl
and
and
cmpsl
cld
andl
and
movsl
or
stos
pop
dec
push
lahf
dec
sbb
inc
bound
mov
fiadds
jge
bound
sti
push
and
xchg
and
dec
xchg
adc
and
das
rorl
in
xchg
iret
rcrb
jle
pop
dec
sbb
mov
test
jle
lahf
dec
pushf
int3
clc
clc
xlat
out
lock
sbb
inc
das
inc
cmp
and
out
xchg
lret
popf
add
push
dec
dec
mov
push
sti
mov
test
mov
dec
jmp
or
pop
fs
enter
jne
mov
lret
dec
add
dec
aad
hlt
rorl
cs
and
or
jecxz
aam
xor
adc
mov
pop
fidivl
mov
mov
icebp
cwtl
pop
cmp
cwtl
jnp
jo
cmp
mov
hlt
mov
pop
push
pop
rorl
fdivs
push
jns
lret
add
cwtl
xchg
test
fs
mov
add
adc
dec
adc
sub
mov
cmp
xor
cwtl
outsl
mov
loopne
popa
pop
shr
add
rcl
sub
iret
sub
jp
lret
cmp
nop
sub
dec
popa
jp
aaa
sub
movsb
insl
push
or
mov
cmp
xor
cli
jns
cmp
pop
xchg
in
fcmovbe
bound
insl
jecxz
shll
cmpsb
pop
sbb
cwtl
xchg
push
mov
push
orl
enter
lcall
push
xor
xchg
xchg
mov
push
dec
pop
pop
pop
lret
subl
aas
orl
sti
lods
xlat
push
ja
ds
xor
push
addr16
mov
aaa
jo
jb
inc
mov
cmpsb
push
xchg
loopne
pushf
inc
push
xchg
dec
adc
pop
jge
mov
dec
xchg
sbb
movsl
mov
mov
sub
sub
mov
jb
mov
adc
pop
sbb
adc
fiaddl
pop
aad
fsubrs
pop
cwtl
aad
mov
push
cld
scas
call
and
cmp
mov
mov
mov
and
lcall
fs
and
imul
jle
inc
mov
ja
adc
inc
clc
inc
imul
push
jle
sbb
pusha
or
jg
mov
int
stos
mov
xor
mov
scas
imul
mov
push
xchg
stos
ljmp
pop
xlat
mov
icebp
or
lret
sbb
test
popa
repnz
jecxz
jmp
pop
ljmp
adc
sbb
lock
dec
icebp
lods
inc
iret
cmp
dec
lret
mov
decb
adc
pop
dec
mov
mov
or
jne
push
fcoml
cmp
mov
push
sub
loope
fstl
push
test
popa
xchg
dec
shlb
push
dec
test
aad
mov
push
inc
call
inc
xchg
arpl
adc
aaa
je
dec
fisubrl
mov
je
mov
loope
aad
sbb
jns
icebp
scas
cli
mov
fcompl
cs
and
dec
inc
mov
rolb
in
or
cltd
jge
add
xor
push
daa
jl
fsts
fisubl
fiaddl
hlt
loope
stos
mov
mov
mov
mov
mov
sbb
jb
arpl
and
xchg
ljmp
aaa
repz
test
sbb
divl
pop
cmp
add
xlat
icebp
aaa
pop
inc
mov
xchg
mov
insl
pop
insl
daa
pusha
mov
mov
in
fwait
jno
test
test
pusha
add
jno
rorb
ror
mov
mov
fs
mov
cmpl
cli
or
xchg
mov
fldcw
inc
pushf
jge
comiss
ljmp
pop
test
negl
test
add
cld
aas
popa
test
jbe
lret
ja
or
mov
pop
stc
xor
push
lods
rcr
cmp
sbb
daa
popa
xchg
mov
cltd
xorb
dec
es
adc
lahf
or
int
dec
mov
inc
test
xchg
push
movsb
xchg
jb
cmpsl
scas
or
fstpt
sarl
aam
inc
das
into
add
dec
push
xor
outsb
and
lods
pushf
mov
sbb
xor
ja
in
dec
je
divl
mov
adc
dec
fists
inc
shll
in
nop
dec
cmp
mov
adc
fcmovnbe
jecxz
sbb
addr16
cmp
sbb
dec
cld
data16
jne
mov
jecxz
movsl
or
add
ljmp
xor
sub
jnp
mov
lea
rol
ljmp
out
fisttpll
add
push
mov
fstpt
popa
out
call
std
in
testl
mov
add
pusha
fisubrl
mov
lods
out
mov
dec
jne
ret
jns
xchg
testb
adc
movsl
or
lods
and
ret
cmp
xchg
inc
xor
mov
push
push
hlt
adc
mov
popf
or
lret
jno
or
cmp
sub
pop
xchg
jbe
outsb
push
mov
jle
cli
inc
xor
repz
ja
or
ret
jmp
add
cmp
cmp
sbb
cmpsb
cs
std
lcall
enter
out
mov
cmp
cmp
mov
stos
outsl
aas
sbb
ja
mov
mov
and
pop
iretw
inc
mov
xchg
test
jnp
cmp
xor
pop
dec
aad
pop
mov
mov
add
insl
jns
mov
sub
mov
enter
test
sarl
and
sbb
in
scas
jbe
out
inc
inc
stos
xchg
push
mov
xorl
lret
mov
aas
fisubs
enter
sub
xchg
jmp
mov
js
in
in
push
or
scas
in
jo
inc
in
push
in
and
pop
add
outsb
jle
jb
xlat
mov
aas
mov
inc
push
call
add
mov
or
mov
push
jmp
rol
mov
jg
rorl
sub
mov
pop
fldcw
test
fcoms
xchg
mov
dec
pop
fisubrs
imul
lock
add
inc
mov
loopne
in
sub
lcall
push
pushf
jmp
incb
xor
xchg
push
sub
popf
outsb
rorb
and
test
lret
roll
dec
sbb
xchg
sbb
movsl
push
cmp
mov
inc
xchg
loopne,pn
les
xchg
sbb
mov
lods
push
cmpsl
adc
mov
jnp
sub
xor
in
and
mov
push
and
lret
fs
jle
cmp
icebp
aam
jmp
iret
and
cmp
in
mov
push
sbb
out
scas
mov
cwtl
sbb
stc
push
repz
jle
shlb
pushf
add
testb
std
jl
add
mov
cmpsb
rcll
sbb
sbb
addr16
add
repnz
arpl
test
bound
ds
push
jbe
mov
mov
ror
push
sub
add
or
movsl
cmp
sarb
jo
sarl
pop
in
rorb
sub
sbb
test
mul
lea
jmp
cmpsb
mov
push
lret
inc
test
fiadds
jo
jno
mov
addr16
movsb
rol
xchg
fiadds
and
lret
js
mov
and
imul
push
fucomi
add
fdivrs
je
pop
add
adc
je
pushf
add
sti
push
dec
pop
inc
incl
pop
pop
lock
dec
cwtl
or
ss
jo
pop
pop
rclb
stc
mov
in
std
jo
outsb
imul
cmc
daa
xchg
insl
jo
push
cmp
mov
or
das
add
jns
push
cmp
or
test
sarb
jns
and
pusha
loope
lods
inc
cmp
pop
or
sub
jmp
aam
call
ja
jbe
test
push
adc
mov
sbb
mov
dec
loopne
and
jge
dec
in
or
or
mov
roll
or
mov
idiv
fs
mov
pop
cmp
xlat
pop
pop
bound
mov
mov
into
xchg
in
lods
into
inc
rcrb
aas
divl
adc
sbb
fidivrs
cs
push
pushf
sub
xchg
jae
mov
out
mov
test
fnop
daa
cld
stos
mov
or
pop
xor
xchg
insl
xchg
inc
xor
lahf
xchg
ljmp
addr16
loopne
test
cmc
jne
mov
aas
ret
seto
or
in
nop
jmp
enter
and
and
pusha
cwtl
or
dec
add
ds
cmp
in
mov
lret
fdivs
pop
push
mov
pop
mov
dec
add
shll
and
push
xchg
xchg
mov
add
scas
mov
iret
loope
dec
cwtl
mov
lcall
sbb
sbb
test
push
aaa
repz
xor
scas
cmp
add
test
pop
ret
push
sbb
and
push
push
lret
inc
outsl
push
sub
gs
lcall
je
mov
jl
cmp
xchg
mov
inc
fsubrs
lds
ljmp
adc
push
out
xchg
negb
push
and
icebp
test
xchg
lock
jmp
mov
sub
icebp
pop
mov
and
and
dec
bound
ss
out
icebp
inc
aas
inc
add
dec
xor
icebp
cmpsb
mov
push
bnd
mov
sti
jg
mov
jle
inc
popa
or
les
call
mov
add
out
es
imul
aam
fbstp
andb
cmp
fistl
subl
xor
cmp
jae
pop
imul
out
jl
inc
xchg
mov
dec
adc
and
lcall
jns
mov
mov
xchg
push
clc
ljmp
add
dec
sub
popf
lock
pop
lock
dec
jne
inc
mov
mov
xor
mov
clc
xor
lret
in
adc
add
in
je
mov
ds
fs
xor
dec
in
xorl
data16
shl
scas
mov
mov
pop
test
fs
out
popa
pop
nop
in
dec
sub
mov
les
fisttpl
shl
js
insb
and
jecxz
in
cmp
divl
and
mov
jecxz
inc
adc
inc
add
xor
call
sahf
cmpsb
mov
mov
negb
fisubrs
fcomps
mov
imul
dec
test
sub
push
push
mov
mov
jecxz
push
addr16
fildll
jl
aaa
rcll
daa
or
popa
inc
sbb
push
adc
shlb
je
xor
dec
ret
std
xor
xor
repz
insb
nop
adc
call
inc
movsb
push
add
decl
daa
pop
adc
test
jecxz
mov
repz
aad
mov
repz
movsb
pop
jg
dec
add
and
or
inc
lcall
push
push
jp
add
jbe
jecxz
and
mov
out
pmulhuw
xchg
fimuls
inc
scas
test
xor
ficompl
cmc
ljmp
mov
test
mov
mov
lret
mov
insb
sbb
divb
orb
xor
pop
mov
sbb
jnp
xchg
push
cmpsl
stos
push
mov
push
out
jo
imul
addr16
mov
pop
sub
pop
mov
mov
aam
add
xchg
stc
adc
loop
ja
into
mov
ret
sbb
in
sbb
fstpl
push
lea
rolb
adc
in
clc
xor
sbb
mov
ss
lahf
wbinvd
mov
add
test
sub
jp
pop
push
mov
scas
bound
jp
mov
iret
out
divb
jg
jbe
jl
adc
in
xchg
ljmp
fcmovu
ret
inc
add
sbb
push
cmpsl
jl,pt
rorl
mov
cmovnp
cmp
or
jb
xchg
lods
push
jb
icebp
xchg
in
jmp
jg
jmp
int
mov
mov
sahf
mov
sub
stos
inc
testl
xchg
imul
mov
int
lods
push
sub
rcl
adc
dec
sbb
test
xchg
sub
test
in
mov
jmp
xor
lahf
imul
bound
addr16
es
sbb
add
dec
xor
mov
mov
shll
or
movsl
mov
imul
jb
popa
into
push
clc
inc
cld
jns
mov
outsb
lock
test
inc
idivl
xor
add
iret
loope
sub
jecxz
dec
xchg
push
and
or
dec
scas
lret
mov
jecxz
icebp
stc
add
loop
xlat
mov
imul
and
mov
repz
lods
mov
cs
inc
jbe
sub
xchg
call
mov
jecxz
inc
and
sbb
dec
in
and
and
push
push
out
inc
push
je
push
stos
xor
sarl
push
ds
dec
adc
jg
pop
inc
pop
aad
test
and
xor
jg
pop
pop
dec
movb
inc
aam
or
jmp
scas
test
xlat
in
adc
shll
rclb
lock
sahf
loopne
fmulp
lcall
xlat
insl
inc
push
out
cmpsb
into
pop
in
lods
cmpsl
idivl
mov
dec
or
mov
js
mov
cli
inc
mov
sub
cmp
sub
leave
push
sub
jo
add
push
mov
adc
xor
shl
daa
or
out
les
pop
lret
mov
aaa
push
xor
addr16
pop
adc
mov
test
popa
arpl
mov
dec
insb
aam
cld
jecxz
jae
adc
popa
fiaddl
mov
mov
ja
pop
sub
add
xor
lock
test
mov
call
ret
jno
pop
inc
mov
movsb
mov
cmp
sub
push
std
xor
mov
frstor
inc
adc
or
gs
outsb
and
pop
test
cmp
or
push
sarl
dec
sbb
adc
push
bnd
xchg
or
or
xchg
pop
rol
jae
movsl
int3
add
xor
rcll
cwtl
imul
movsl
lock
xor
inc
xorb
insl
push
mov
std
adc
imul
inc
sti
jp
xchg
pop
jne
push
inc
icebp
dec
adc
mov
xor
pop
mov
jp
shl
mov
mov
mov
fnstsw
out
jnp
das
test
dec
pop
imul
mov
fisubrl
sub
adc
mov
incl
outsb
test
inc
adc
xor
push
adc
and
je
inc
cwtl
mov
pop
push
movsb
inc
push
rolb
add
mov
xchg
aas
stc
mov
int
add
jl
sub
sbb
adc
inc
aas
cld
sti
shl
movsl
xchg
mov
push
inc
pop
jne
stos
pop
add
inc
out
enter
sub
mov
sbb
sub
cmp
pop
sub
push
insb
out
mov
inc
cmp
add
sbbl
sub
lods
sub
jmp
inc
rcrl
add
in
xchg
jge
lahf
mov
cmp
arpl
gs
xchg
and
inc
add
fsts
adc
scas
movsb
jbe
jle
push
fistl
cmpsl
or
pop
aad
loopne,pn
or
mov
sub
lret
repz
outsb
call
add
xchg
cmp
cmpsl
sub
push
icebp
push
scas
adc
int3
xor
cmp
cmp
testb
int3
mov
arpl
add
pop
cmp
xor
sbb
cmc
mov
jno
dec
out
popa
and
or
jo
shll
xor
lea
mov
push
and
out
mov
pop
lcall
cmp
sub
jnp
clc
mov
pop
mov
inc
or
mov
adc
adc
mov
mov
rolb
lret
cmp
adc
add
iret
fldenv
stos
ljmp
dec
jl
jne
pop
jnp
inc
pop
jbe
leave
jmp
mov
imul
idivb
aam
xchg
xor
jle
test
push
stos
xor
add
loope
dec
inc
pushf
test
arpl
arpl
cmpsb
dec
sbb
shlb
mov
movl
icebp
outsl
stos
rdmsr
ds
push
inc
cmpsl
pop
mov
adc
xchg
inc
les
cmp
loope
insl
ret
or
pop
push
mov
inc
fbld
add
pop
sbbb
in
outsl
pusha
lahf
loop
mov
sti
jmp
lods
lahf
sbb
jg
popf
in
inc
jo
cmp
icebp
push
mov
rcrb
mov
fwait
in
fdivp
adc
stos
enter
imul
xor
test
pop
sbb
jp
inc
cmp
cmp
repnz
and
add
rorl
insl
mov
gs
mov
pop
loope
dec
push
pop
mov
aam
pop
lcall
jbe
mov
xor
mov
xor
movsl
adc
test
xor
out
push
sub
sub
dec
jle
mov
sub
es
jmp
sarb
jmp
daa
cmp
mov
ja
adc
sets
dec
out
aam
jae
jno
popf
fisttps
push
ljmp
lds
cmpsl
mov
mov
push
popa
or
fsubl
pop
mov
out
lahf
dec
out
dec
lret
adc
js
jne
sub
mov
jmp
inc
push
out
xor
or
xchg
add
outsl
push
test
rcrl
jmp
push
cmp
lcall
test
pop
xor
fdiv
adc
mov
jl
mov
mov
outsl
xchg
inc
sub
sbb
cmp
dec
enter
pop
jge
xchg
inc
push
mov
mov
fs
cmpsb
xchg
sub
out
or
repnz
mov
std
pop
movsb
cmpsb
jl
sti
in
xchg
pop
mov
cmp
cmp
notl
in
jl
ret
rorb
pause
pusha
add
mov
mov
sbb
cmp
xchg
pop
mov
jb
lock
mov
scas
nopl
push
sbb
mov
sahf
mov
sbbb
mov
sub
jns
subb
inc
mov
add
adc
push
pop
dec
rolb
push
push
jns
fwait
dec
aas
lea
mov
fisttpll
jne
movsb
dec
jp
std
inc
and
cmpsb
inc
lods
mov
orl
leave
pop
shrl
call
outsl
bound
mov
lock
mov
hlt
sub
push
add
cs
js
xlat
fs
push
add
pop
pop
pop
and
jnp
out
inc
icebp
add
pop
fstpt
mov
sub
outsl
mov
in
jp
shl
les
push
das
arpl
sbb
push
call
stc
js
insb
cmp
mov
pop
mov
mov
enter
dec
pusha
mov
jl
popf
add
mov
cmp
xchg
divb
jne
mov
sub
icebp
xchg
inc
mull
cmp
inc
xor
cli
stos
insl
das
cli
mov
mov
cmc
orl
xor
icebp
mov
fildl
fstpl
or
pop
cmp
out
jno
adc
adc
cmp
xor
mov
js
pop
enter
xchg
mov
xor
dec
call
repz
cwtl
int
pop
cwtl
inc
test
pop
cmpsb
aaa
jns
sub
inc
aad
or
xor
mov
stc
enter
lahf
cwtl
sbb
mov
in
cld
dec
xor
mov
add
fsubrl
ficomps
sbb
test
pusha
mov
ja
or
dec
bound
jnp
daa
cmovp
in
sarb
scas
loop
add
ret
aad
adc
stc
xlat
test
icebp
es
adc
add
jp
mov
mov
pop
inc
loope
iret
out
mov
or
mov
mov
mov
sub
rorl
adc
inc
pushf
jns
sahf
cmp
cmp
fcmovu
lret
mov
or
std
cld
or
call
adc
pop
push
outsl
sbb
sbb
add
jo
dec
lock
cmp
xchg
cmp
adc
fnstenv
je
inc
sti
fs
sub
mov
dec
imul
test
xchg
lret
inc
lods
mov
js
xchg
xor
adc
aas
sub
mov
xchg
or
lods
imul
cmpsb
clc
sub
push
sub
jb
mov
dec
loope
cwtl
mov
shlb
mov
stos
xchg
movsl
cmpl
push
and
jge
mov
add
test
aas
pop
add
stos
xchg
cmpsl
cmp
inc
scas
pop
int
xchg
rclb
in
sbb
xor
sbbb
jae
or
loope
mov
pushf
in
lods
xor
add
test
lret
push
ljmp
rclb
aaa
imul
in
dec
cltd
xchg
push
call
fs
addb
fwait
push
div
fsubrp
xchg
sub
or
or
js
xor
dec
mov
nop
jno
mov
mov
mov
pop
pop
mov
dec
inc
inc
jl
movsl
xchg
sbb
mov
inc
and
xor
push
inc
aaa
mov
lret
add
ror
data16
xor
lods
aas
jge
out
xchg
iret
fisubs
xchg
lds
xlat
nop
jnp
dec
push
or
enter
sub
sub
lret
aad
xchg
mov
xor
sbb
insb
fidivrs
mov
daa
pop
test
mov
mov
sub
ljmp
xlat
sti
movsl
dec
mov
jnp
xchg
xchg
jbe
movl
inc
push
mov
sbb
enter
pop
sbb
cmpsl
cmp
dec
insb
mov
int
pop
mov
out
mov
movsl
dec
xchg
jnp
rol
bound
daa
jno
out
dec
out
jne
adc
daa
add
loope
pop
sahf
xor
pushf
add
xchg
mov
enter
shlb
add
sub
imul
lret
divl
pop
push
addr16
in
scas
test
and
push
fiadds
imul
movsb
cld
mov
dec
clc
icebp
ja
mov
enter
mov
rol
cmp
mov
and
sbb
dec
aaa
roll
add
arpl
push
in
data16
out
and
out
and
xor
xchg
and
pop
sub
pop
out
cmpsb
repnz
loope
pop
test
xor
xor
div
nop
and
pop
in
push
in
mov
dec
xchg
out
add
inc
in
aas
mov
sahf
les
dec
push
imul
scas
and
add
sbb
pushf
test
out
out
scas
mov
add
xchg
ds
das
adc
lahf
fwait
xchg
out
mov
ror
jne
xchg
daa
mov
pop
inc
or
mov
lcall
or
and
adc
rorb
mov
add
or
das
sub
pop
mov
adc
scas
adc
dec
dec
jp
addr16
imul
sbb
push
or
int3
dec
lods
xchg
mov
xchg
pop
xlat
push
cld
push
lea
and
aaa
add
push
ds
cmp
and
jne
fimuls
stc
in
lods
xchg
cmp
jae
xchg
aaa
xor
fistl
pop
push
push
data16
dec
testb
into
pusha
rcrl
dec
xchg
mov
adc
aaa
shlb
xor
movsb
dec
mov
mov
or
je
popf
push
js
in
aas
sarb
lds
insl
stc
fsubp
loopne
push
mov
mov
outsb
aam
cli
mov
push
lret
mov
je
mov
xor
std
add
and
mov
aam
push
cmpsb
add
clc
aaa
mov
mov
lahf
lock
stos
sbb
mov
or
pop
fists
out
cmp
xchg
mov
stos
inc
inc
or
jb
mov
je
dec
adc
add
xor
add
ljmp
dec
jns
add
xor
or
pop
loope
mov
dec
imulb
jmp
mov
cwtl
jge
xchg
dec
loopne
mov
je
cld
inc
pop
jnp
mov
sbb
pop
inc
adc
pop
adc
push
lret
fisubs
jae
enter
push
sbb
xchg
adc
and
and
dec
xchg
sub
adc
notl
stc
or
mov
or
push
push
addr16
jb
fadds
je
jl
repz
test
push
aaa
xchg
sbb
mov
or
dec
stos
aam
mov
test
std
enter
repnz
cmp
push
bound
aas
pop
mov
push
mov
push
cmp
pop
test
rcll
jmp
cwtl
xorb
jecxz
mov
push
std
jbe
or
mov
ss
test
mov
push
xor
jle
jnp
cmp
mov
pop
mov
das
mov
jae
iret
pushf
or
mov
adc
mov
inc
outsb
int
push
rcl
jne
jp
mov
test
fsub
sub
xchg
adcl
jne
jl
push
sbb
cmp
subb
das
mov
imul
call
mov
movsl
xchg
dec
mov
xchg
hlt
cmpsl
out
push
xchg
shrl
push
into
and
dec
outsl
bound
scas
or
mov
pop
sbb
push
scas
dec
insl
mov
mov
test
or
sbb
pop
jmp
fistps
cmp
in
dec
cmp
rcrl
jg
mov
fimuls
loopne
dec
sbb
xchg
lock
shl
imul
dec
leave
mov
dec
negb
add
dec
cwtl
mov
mov
pop
xchg
mov
lods
out
cmpsb
dec
pop
daa
call
xchg
xchg
xchg
mov
sbb
jge
pusha
cltd
in
sbb
adc
bound
sbb
sub
pop
cmpsl
sbb
jns
nop
xchg
and
jbe
mov
aam
mov
sub
std
mov
icebp
aaa
les
push
dec
hlt
pop
sub
decl
cli
clc
movsb
daa
push
filds
and
movb
ret
adcl
jno
pop
mov
push
mov
adc
sub
cld
jo
vpmaxub
bound
cmpsb
aaa
and
ficoml
daa
shll
pop
xor
outsl
andl
and
inc
popf
and
call
mov
call
mov
lcall
cmp
hlt
dec
dec
pop
sub
mov
push
popa
dec
sbb
test
mov
lea
inc
pop
xrelease
add
adc
aad
cmp
in
fbstp
andl
mov
xlat
outsb
fnstsw
jno
cld
mov
pusha
xor
pushf
lods
xor
xor
repnz
sti
stos
ljmp
dec
or
mov
stc
loopne
inc
leave
fnstsw
into
lea
in
stc
sbb
pop
dec
jecxz
push
mov
fs
bound
mov
pop
adc
xchg
push
fwait
xchg
stos
popa
mov
inc
scas
lret
cmpsl
cmpsl
jg
fwait
and
dec
andb
jb
aad
ljmp
mov
nop
iret
mov
cmp
adc
aaa
aam
push
addr16
xorb
pop
xchg
sub
push
adc
popa
pop
rcll
cltd
cltd
pushf
pushf
cmc
fdivrl
push
sti
mov
ss
in
jp
insb
lea
lahf
ss
jo
pusha
stos
push
jg
fdivl
push
mov
push
outsl
mov
pushf
pop
add
dec
lcall
pop
push
pop
scas
push
mov
mov
cmp
roll
mov
add
mov
jecxz
sbb
xor
rcl
dec
fucom
xchg
clc
jnp
mov
cmpsl
sarb
cmc
pop
popf
xchg
mov
ret
or
mov
shll
in
loop
adc
movsb
scas
int3
xor
ret
inc
cltd
mov
sti
lret
movsb
aas
and
je
insb
lods
loop
sarl
inc
popl
fidivl
test
out
out
ss
jb
and
cs
push
xchg
les
pop
jp
mov
jle
cmp
cmpsb
aam
sub
and
js
ret
push
sbbl
inc
repz
repnz
mov
mov
pop
inc
fdivl
mov
or
fwait
cmp
loopne
adc
xchg
and
add
pusha
add
aam
dec
lahf
js
dec
or
es
xchg
mov
pop
jl
lret
dec
out
andl
pop
pushf
int
inc
shl
out
in
idivb
repnz
lea
jne
inc
adc
or
imul
xchg
fldt
pop
enter
sbbl
mov
and
inc
xor
and
add
adcb
iret
div
rcll
iret
lss
shr
sub
mov
xchg
inc
jmp
push
repz
addr16
sbb
aam
pop
addr16
jmp
or
push
data16
fadd
jnp
outsl
fcomps
repnz
mov
lret
pop
fldt
push
leave
aad
mov
outsb
jo
lods
out
push
cs
aaa
test
add
daa
cmpsb
int
out
jg
and
or
xor
movsl
mov
nop
test
xchg
adc
pop
mov
sbbb
sbb
es
in
xchg
fisttpll
jl
cmc
push
jno
inc
loop
xchg
fwait
sarb
insb
ljmp
sbb
xchg
stos
mov
inc
rolb
sbb
cmp
out
sbb
lret
xor
cmp
mov
mov
stos
xchg
int
mov
cmp
pop
sbb
xchg
sbb
xor
or
addr16
and
dec
inc
xor
jmp
fistl
or
fcmovnb
imul
and
pusha
xor
pop
add
ficoms
notl
inc
jl
push
rcrb
mov
gs
addr16
std
sbb
xchg
pop
xchg
jne
sbb
and
cmc
daa
test
and
xor
cmp
dec
push
jbe
aam
push
inc
and
fadd
leave
add
adc
jle
xchg
fneni(8087
ss
adc
lcall
adc
in
pop
dec
mov
adc
mov
popf
push
sti
cmp
jae
stos
shlb
adc
lahf
aam
xchg
movsb
inc
aam
lahf
add
addl
sahf
mov
xlat
les
loop
push
jmp
mov
ret
push
cli
jbe
jmp
mov
icebp
inc
sub
mov
adc
ret
scas
aad
rorb
dec
imul
rclb
mov
stos
popf
in
in
dec
add
mov
xchg
sbb
mov
mov
jbe
jg
mov
pause
movsb
xor
cli
jns
inc
movsb
mov
mov
imul
pop
cmp
and
xor
int3
sbb
xchg
ret
stos
mov
mov
imul
pop
xchg
cs
stos
ss
adc
or
push
adc
dec
inc
shlb
dec
lock
in
test
jp
xor
inc
jno
cmp
push
or
inc
dec
mulb
jno
mov
mov
inc
ret
insl
mov
jne
xchg
jl
cmpsb
enter
fsubrs
push
fdivrl
add
lahf
int3
stc
lret
std
aas
inc
aam
add
push
xor
outsb
mov
in
imul
cmp
adcb
repnz
cmp
pop
mov
pop
ds
inc
or
into
je
imul
cmp
inc
add
mov
filds
or
repnz
das
cmp
cmc
fbstp
out
mov
lds
mov
xor
xlat
xchg
add
jl
xchg
test
pop
add
sbb
jl
xor
push
mov
jle
in
adc
sub
xchg
push
call
xor
addr16
in
sub
movsl
lret
or
sahf
ljmp
aaa
adc
jmp
pop
loop
scas
out
mulb
aaa
imul
lds
fwait
adc
pop
xor
dec
mov
iret
xor
scas
mov
out
and
xchg
push
xchg
add
iret
pushl
shll
xor
jl
ljmp
test
cmp
cld
adc
mov
jb
xchg
and
sbb
or
call
push
or
int3
clc
cltd
mov
push
into
cmp
insb
push
mov
and
sti
aam
mov
stc
jle
call
imul
sbb
movsb
test
je
add
cmp
pop
sbb
scas
or
xchg
loope
in
test
inc
or
pop
sbb
cmpsl
ja
iret
mov
pop
into
subl
sarl
jns
jbe
js
jno
mov
sub
ljmp
or
inc
xor
arpl
xor
mov
adc
xchg
xor
int
dec
xor
in
repz
sbb
cmp
js
adc
in
loopne
hlt
dec
pop
movsl
fbstp
push
adc
cwtl
js
jno
add
cmp
stos
mov
cwtl
mov
sbb
push
lods
sub
cwtl
cld
fidivs
adc
movsb
cmpsl
adc
xchg
jle
mov
mov
or
mov
filds
aam
jo
push
test
pusha
cld
sub
xchg
fs
lcall
hlt
aam
shll
push
sub
ja
dec
add
push
push
push
nop
insb
fistpll
insl
jecxz
stos
sbb
enter
xchg
cmp
fs
repz
xor
pop
jmp
cltd
jns
lods
test
sti
arpl
cmpsb
push
sub
out
mov
or
jg
inc
test
ror
rol
rcrl
or
mov
push
lods
stos
ret
adc
mov
or
rcr
xor
xchg
or
jl
hlt
mov
ss
jle
mov
les
push
stos
add
pop
es
daa
inc
xor
mov
or
les
push
call
pop
lret
xor
shrl
mov
xchg
cmpsb
sbb
dec
push
stos
int
add
jp
push
add
and
cli
lea
inc
jb
mov
sbbl
rclb
dec
insb
sahf
bound
and
add
jbe
xor
es
pop
arpl
adc
mov
and
cmp
pusha
pusha
ja
sbb
les
cmp
adc
xor
sbb
dec
cmp
out
mov
xor
aad
adc
insl
and
push
fdiv
cmp
add
mov
jnp
xchg
addr16
mov
mov
sbb
jne
mov
jmp
sbb
jp
popa
sbb
pushf
xchg
rol
rorl
cmp
or
xor
mov
filds
pushf
movsl
fldcw
orb
dec
addr16
int3
and
push
and
push
shll
pop
add
mov
cmp
aam
push
push
mov
shlb
testb
sbb
pushf
in
jnp
or
fadd
jo
shll
mov
loopne
aas
cmc
adc
jns
fistl
insb
pushf
repz
mov
hlt
xchg
pop
cmp
ljmp
add
or
and
bound
or
pushf
pop
roll
scas
sbb
faddl
sbbl
dec
insb
hlt
pop
cmp
aam
fidivl
add
movsb
mov
adcb
lock
ret
jno
cmp
pop
fildll
call
pop
test
hlt
pop
out
div
popf
pop
testl
imull
sub
and
jb
mov
cmpsl
xor
xor
xchg
leave
in
mov
call
cld
xchg
pop
jo
std
pop
lods
jb
push
adc
pop
scas
mov
in
std
gs
outsl
inc
imul
cmp
mov
xlat
mov
fmull
dec
aam
pop
in
dec
icebp
notb
mov
push
sbb
sbb
icebp
movsb
jl
mov
shr
je
mov
pop
push
out
ljmp
xor
mov
lcall
mov
and
jb
sar
test
ljmp
jno
and
xchg
pop
push
nop
sarl
sbb
scas
cs
or
mov
aaa
faddl
and
mov
std
xor
add
push
scas
jecxz
mov
pushf
clc
imul
jl
out
pop
out
sti
mov
mov
pop
in
dec
fwait
jae
push
lods
movsb
jns
jge
int
jo
adc
sub
clc
inc
stos
pop
push
push
mov
and
call
xchg
repz
shlb
fcomps
or
scas
std
mov
mov
call
push
stc
push
arpl
add
sbb
cli
sub
adc
cmp
data16
testl
or
pop
sbb
adc
cwtl
ss
jg
lea
in
icebp
pop
shlb
lret
sbb
mov
sbb
sbb
dec
shrb
mov
mov
xchg
cmpsl
push
ret
cmc
out
sub
sub
imul
cmp
push
in
dec
nop
mov
div
pop
int3
arpl
ds
push
cmpsl
sub
mov
push
mov
mov
jno
sub
jne
pusha
mov
iret
bound
or
pop
push
sbb
adc
pop
xchg
mov
iret
insl
push
in
push
mov
lods
movsl
mov
aam
fdivl
aad
rolb
xchg
lds
pop
jmp
mov
cmp
addr16
xor
and
jmp
mov
out
mov
dec
push
lahf
scas
push
sub
fnstcw
adc
mov
xchg
lea
or
test
aas
pop
push
fucompp
sbb
mov
adc
mov
cmp
jmp
sub
cwtl
mov
out
pop
test
sbb
data16
mov
dec
push
pop
or
dec
std
clc
outsl
xor
cmp
mov
aas
std
dec
mov
and
mov
sbb
movsb
cmp
inc
xor
dec
and
fistps
mov
dec
push
pop
and
in
inc
out
push
inc
gs
fwait
pop
mov
es
cmp
rclb
outsl
jp
cmc
adc
pop
sub
movsb
cs
dec
scas
popa
scas
std
out
mov
in
sbb
sti
fisttpll
adc
and
mov
and
pusha
dec
je
mov
jnp
ljmp
or
cwtl
aaa
xor
xchg
cmp
jge
aam
pop
movsl
mov
jb
jle
cltd
bound
add
cmpsb
cmp
mov
xlat
xor
xchg
sub
mov
pop
test
cmp
and
push
mov
inc
mov
inc
pop
rcll
daa
dec
inc
xchg
insl
or
outsl
dec
cmpsl
hlt
sarl
mov
dec
xor
rclb
rorl
shrl
mov
arpl
cli
add
sbb
fidivrs
inc
mov
ljmp
mov
faddp
lahf
imul
cld
xor
in
inc
in
dec
lds
or
pushf
push
xchg
xchg
lret
adc
push
sbb
cmp
addr16
push
aaa
loopne
cld
mov
inc
in
dec
xchg
xchg
mov
lcall
fsubs
jg
mov
icebp
dec
repz
rol
or
daa
cmc
and
and
lods
inc
mov
and
repnz
test
sbb
cs
loopne
repz
or
divb
xchg
call
adc
push
xor
jnp
mov
inc
enter
pop
jg
sub
fnstenv
and
adc
out
enter
fucomp
stos
pop
cmp
stos
mov
ss
adc
addr16
stc
xchg
pop
dec
fs
mov
imul
jo
mov
imul
jbe
lds
lea
cli
mov
mov
scas
mov
imul
jp
outsl
pop
mov
xor
xor
push
xchg
imul
stc
adc
inc
push
xor
jns
adc
aaa
shlb
aam
mov
subb
outsb
sub
sub
sbb
inc
arpl
and
rcrb
adc
cltd
adc
mov
cmp
loop
sub
jge
sahf
mov
mov
mov
out
push
fstl
mov
jno
orb
dec
fildl
push
push
jmp
test
filds
out
js
cmp
clc
shrb
repz
out
mov
add
cltd
repnz
pop
adc
aas
fstpt
sub
sbb
pop
add
repz
adc
xchg
cmpsl
dec
mov
pusha
lahf
adc
and
fwait
sbb
mov
and
insl
add
adc
test
sbb
sub
pop
imul
push
mov
cmpsb
and
ds
dec
lea
ja
mov
lods
cmpsb
jmp
movsb
jl
test
xlat
xchg
lret
sub
popa
or
add
xlat
out
push
sub
xchg
cmpsl
dec
clc
xlat
inc
add
cmpsl
fs
cltd
jne
xchg
scas
dec
int
call
or
sbb
cmp
jno
jl
movsb
fisttps
aam
and
fbstp
adc
addr16
mov
mov
mov
mov
test
jo
ds
mov
gs
scas
sbb
int3
dec
stos
or
mov
and
mov
dec
mov
sahf
cmp
cli
repnz
mov
test
mov
mov
call
inc
pop
addr16
shll
push
pushf
ds
sub
data16
inc
into
and
or
lods
push
xchg
jbe
mov
mov
jno
xchg
je
adc
icebp
and
dec
jg
out
icebp
testl
jl
sti
adc
inc
cmc
mov
mov
mov
mov
sbb
inc
jmp
push
cmp
sbb
inc
inc
cmp
aaa
jbe
bound
enter
fs
fcmovbe
addr16
push
sub
rol
push
mov
int
dec
cmpsl
out
adc
cmpsb
out
shrl
push
fdivp
pop
dec
cmp
push
inc
into
lock
in
push
push
test
cmpsb
push
popf
addr16
or
pusha
adc
mov
xchg
cmp
mov
mov
and
push
adc
mov
sbb
stos
int
scas
imul
or
cmp
pop
xor
fucomi
test
xor
lods
cltd
loope
aad
sbb
aas
cmp
std
xorb
lret
insl
outsl
mov
xchg
mov
insl
bswap
call
and
sub
xchg
stos
je
lret
dec
jb
and
mov
fldenv
rorb
xchg
scas
jo
test
sub
lea
or
cld
das
aaa
cwtl
adc
and
mov
sub
mov
dec
and
adc
andb
cmp
sub
es
ds
xchg
push
xchg
repnz
loop
nop
mov
xor
xchg
enter
pop
fs
add
sysret
in
sbb
and
xchg
loopne
fwait
neg
enter
sahf
cmp
jnp
fidivs
incb
dec
aam
push
mov
pusha
xchg
scas
scas
mov
das
and
btrl
cs
and
add
and
sbb
xorl
sbb
mov
sbb
pop
push
and
dec
cmp
jmp
adc
sbb
pop
pop
fcoms
mov
jns
outsl
arpl
leave
sub
not
or
sub
ljmp
xchg
cwtl
int3
jle
incl
fsubs
lods
popa
pop
mov
popl
dec
loope
mov
mov
loop
ja
int
scas
xor
scas
pop
bnd
or
mov
xor
in
xchg
push
leave
sub
push
inc
pop
sbb
incb
pop
shr
adc
add
cmp
mov
pushf
cmpsb
ret
cmp
cmc
dec
mov
ljmp
adc
mov
dec
cmpsl
mov
xchg
mov
mov
sbb
mov
ds
gs
mov
push
mov
fstpl
inc
or
push
and
int3
mov
jns
add
notb
cld
sbb
scas
dec
lea
add
jno
add
jo
push
mov
sub
mov
loopne
xor
test
mov
lods
mov
jmp
cltd
cmc
sbb
fdivrl
popa
in
dec
sarb
sub
xchg
lea
add
jae
or
push
inc
fs
jge
call
repz
es
adc
mov
loope
in
outsb
lcall
dec
iret
popa
push
inc
xchg
fdivl
sar
or
mov
jb
fsub
cs
push
cs
push
push
lahf
cli
sub
test
adc
mov
ret
leave
mov
mov
rcl
push
mulb
lock
std
xchg
lahf
icebp
push
popa
push
shrl
pop
push
stc
xlat
fwait
jg
adc
ret
rorl
mov
pop
fimuls
ljmp
dec
lcall
nop
jecxz
mov
scas
cmpsb
sahf
inc
mov
push
es
mov
and
adc
jnp
cmp
movsb
add
add
xor
push
jg
int3
punpckhdq
insb
ss
xchg
sub
iret
mov
leave
outsl
inc
inc
xchg
idivl
xchg
imul
cs
ja
movsb
sbb
daa
add
movsl
out
mov
xchg
lock
enter
mov
inc
push
adc
mov
fbstp
mull
or
adc
pusha
jae
les
ds
and
mov
xchg
das
int3
and
decl
dec
jp
mov
xchg
jbe
js
sbb
ret
lods
shrb
inc
sub
in
sub
fstpt
sarl
outsb
push
es
and
xor
dec
fists
pop
arpl
and
imulb
mov
ficoms
movsl
or
adc
lds
test
fidivs
dec
lcall
fs
int
and
inc
adc
es
pop
pop
push
cmpsl
sarb
sbb
adc
stos
test
lods
sub
out
and
lcall
xchg
pusha
push
outsb
jne
push
hlt
mov
xchg
iret
mov
notl
arpl
fisubrl
out
xchg
cmp
popf
fwait
mov
rcll
cmp
or
jg
das
mov
inc
icebp
add
lret
lahf
inc
mov
mov
cltd
cltd
mov
mov
insl
lret
cmp
addl
cmp
addr16
arpl
outsb
mov
clc
repnz
add
fsubs
outsl
lret
sbb
mov
cld
int3
sbbb
loop
fldcw
sub
mov
adc
mov
ljmp
push
inc
dec
and
jnp
pusha
scas
jns
outsl
pusha
cmpsb
push
cmpsb
sub
fldcw
pop
js
loopne
mov
adc
or
inc
fcoms
adc
sub
movsl
inc
hlt
mov
and
lds
data16
xor
and
or
inc
adcb
ret
pop
lea
adc
and
inc
mov
ljmp
push
dec
ret
xchg
aas
xor
xchg
dec
lcall
mov
cwtl
mov
out
xchg
stos
adc
sti
stos
sub
dec
addb
daa
pop
ret
into
jno
add
adc
xchg
leave
mov
insl
ret
sti
hlt
int3
adc
clc
in
rclb
inc
mov
stos
cmp
adc
in
jmp
push
mov
sub
out
lahf
iret
sub
mov
bound
lret
dec
cmp
push
mov
or
or
inc
pop
stc
or
adc
add
jno
adc
scas
push
test
adc
stos
and
adc
daa
out
aas
push
add
dec
test
repz
sbb
pop
into
es
inc
lock
sub
jp
inc
vmptrld
ror
fwait
jo
push
add
loope
sub
jl
and
xchg
dec
scas
jb
les
scas
sub
sbb
scas
sbb
pop
dec
dec
mov
ja
loop
or
xchg
push
sub
jl
mov
push
inc
mov
test
or
xor
icebp
inc
push
ret
pop
dec
rcrl
movsl
sub
sub
decb
jno
vmwrite
lret
scas
jbe
icebp
pop
sahf
sub
xchg
cld
xor
loopne
test
push
decb
push
push
xor
jge
std
hlt
ret
fs
imul
xor
sar
mov
adcb
nop
pop
out
mov
clc
rsm
dec
mov
sbb
jbe
test
call
dec
jae
xchg
popa
push
pop
adc
in
ror
or
mov
adc
pop
test
jle
cli
xchg
sahf
cmp
sti
adc
std
clc
jmp
rcr
stos
pop
cmp
sbb
sti
lret
outsl
or
stos
popa
bound
jne
or
lods
movsl
mov
pop
or
lcall
inc
mov
fadd
mov
add
pop
cli
and
pop
dec
stos
bound
or
push
fimuls
pause
sbb
outsb
test
mov
pop
mov
jecxz
adc
push
fnstenv
mov
xchg
hlt
ret
or
mov
pop
sti
pop
int
hlt
pop
cmc
mov
lods
or
lea
testb
sti
repz
iret
js
into
int
push
jg
push
or
jle
clc
std
stos
arpl
fnsave
scas
ljmp
in
pop
inc
les
in
fst
mov
out
push
sbb
repnz
and
mov
scas
sub
mov
inc
add
push
mov
sub
rorb
mov
shll
or
inc
ja
push
dec
shrb
mov
scas
insb
repz
fs
pop
sarl
dec
loopne
jle
in
dec
mov
mov
xlat
scas
mov
mov
scas
pop
sahf
scas
or
out
jl
frstor
dec
cs
mov
es
and
mov
fdivrs
mov
adc
cmc
shlb
adcl
or
sbb
cmp
imull
pop
shl
inc
xchg
pop
cmp
rcrb
push
or
lea
arpl
int
jmp
mov
cmpsb
or
cwtl
sub
data16
js
jmp
cmp
mov
cmp
inc
iret
sbb
cltd
cli
test
pop
add
dec
xchg
shll
adc
add
cmp
lret
sahf
movsb
scas
adc
and
call
mov
loope
mov
push
pop
stc
in
or
push
mov
cmp
cltd
shlb
push
mov
xchg
cs
arpl
sub
jmp
sbb
sbb
jge
fiadds
mov
inc
shlb
push
imul
orb
jmp
jmp
xor
enter
mov
negl
scas
addr16
mov
data16
das
ja
cs
push
mov
lcall
xor
pop
lock
push
cmp
or
add
or
xchg
lret
mov
jb
aad
jnp
es
jge
sbb
ficoms
loope
adc
addl
push
mov
add
dec
xchg
jp
push
ss
fcmovbe
test
sub
mov
mov
leave
pop
mov
add
adc
sbb
push
mov
pop
fsubl
push
aaa
xchg
jg
inc
fcmovu
jp
int
mov
inc
mov
mov
aad
jae
jb
xor
jl
es
insl
xchg
ret
pop
push
xchg
push
push
fsts
cltd
mov
jns
pusha
pop
int3
aaa
fcoms
and
sbb
jecxz
dec
addr16
out
adc
mov
mov
add
es
testl
shr
int3
add
ss
sbbl
xor
and
and
subps
fidivrs
sub
inc
jns
jns
pop
mov
stos
mov
add
daa
xor
fistpll
cwtl
sbb
jmp
in
stos
inc
cmpsl
lods
xchg
sbb
cmpl
xchg
mov
dec
pop
and
fdivl
insb
stos
outsb
and
ficomps
dec
jbe
and
mov
jl
push
into
scas
push
dec
mov
jmp
cmpsl
mov
pusha
xchg
push
cltd
outsb
imul
or
xchg
mov
icebp
in
out
push
pop
push
shrl
pop
mov
outsl
mov
cmpsb
pop
jno
xchg
rcrb
inc
jg
dec
push
shll
sub
repnz
imul
and
rolb
mov
mov
lock
mov
lret
call
mov
lahf
add
sub
dec
test
daa
insb
xchg
and
fcmovu
mov
test
xchg
sub
pop
xchg
fistpll
xor
rorb
ja
sub
sub
nop
xchg
hlt
mov
sub
cld
loope
adc
lret
mov
push
mov
push
cmpsl
sbb
fldt
mov
loope
xor
cmp
test
lods
cmpsl
or
dec
sbb
aas
repz
pop
pop
into
icebp
cld
push
mov
dec
mov
xchg
fwait
lret
xor
cmp
cltd
adc
test
into
mov
pop
mov
sub
jmp
movsl
mov
pushf
fists
dec
jl
push
mov
add
dec
imul
stos
inc
ljmp
sahf
xchg
arpl
and
push
lods
xchg
stc
in
lret
pop
int
jno
or
fs
cmc
xchg
shr
mov
push
push
test
fs
sahf
inc
ljmp
cltd
xchg
dec
lods
frstor
fldl
je
ljmp
movsl
push
loop
int3
addr16
mov
into
lods
inc
ds
jmp
inc
in
dec
jnp
sbb
iret
jmp
movb
fnsave
sub
or
ss
or
cmp
inc
xor
mov
sub
sarb
jbe
cmpsl
and
das
push
cmp
pushl
inc
subb
pop
adc
sub
sti
cmp
pop
push
mov
jecxz
xor
test
lahf
mov
cld
push
pop
faddp
lahf
je
hlt
mov
fwait
sub
imul
add
adc
inc
gs
shrb
test
fnsave
adc
jecxz
sbb
push
das
out
fs
aas
fsubs
div
jnp
lods
mov
imul
gs
push
dec
jle
nop
scas
imul
push
adc
cmp
in
stos
cmp
imul
daa
pop
and
scas
shlb
les
call
jno
sahf
jl
push
cmc
fidivl
cmp
shlb
stos
inc
xchg
dec
and
sbb
pop
ljmp
ds
and
jecxz
push
cltd
fcmovbe
fadds
mov
xor
mov
adc
push
xor
ljmp
test
jecxz
enter
and
punpckldq
ja
cld
iret
sub
or
jmp
in
push
cmpsb
popf
and
push
push
add
adc
cs
or
xchg
loop
add
add
pop
into
ljmp
inc
mov
push
testl
jmp
imull
inc
sub
cmp
incb
xlat
cs
sbb
clc
mov
mov
test
xchg
jne
push
and
lahf
test
std
adc
xchg
mov
ss
pop
dec
jge
or
dec
insl
mov
out
ss
or
jbe
and
push
or
sub
int
aas
cmp
xchg
call
push
cmpsb
bound
sarb
sbb
and
cli
pop
ljmp
add
inc
movsl
push
mov
add
push
pop
or
ret
iret
mov
int3
adc
xchg
sub
push
inc
enter
sbb
sbb
je
les
add
repnz
cmp
push
aad
adc
mov
mov
and
inc
sub
jmp
idivb
mov
and
dec
popa
stos
xchg
xor
sub
mov
add
and
outsb
adc
or
movb
or
or
inc
cmp
adc
fcmovne
jmp
loopne
scas
pop
out
push
ljmp
ljmp
mov
arpl
imul
sub
xchg
daa
int
adc
mov
ret
addr16
ret
add
xchg
shr
mov
in
add
lahf
enter
push
cwtl
jae
fldlg2
mov
hlt
add
clc
or
clc
push
lret
push
aad
stos
push
jne
and
das
scas
lea
sti
mov
movsb
pop
and
psubsb
decl
push
mov
xor
jmp
pop
mov
push
lods
repnz
xchg
jecxz
ret
dec
mov
fwait
mov
inc
insl
in
pop
inc
outsb
lods
sub
daa
or
dec
sbb
or
nop
mov
push
les
jge
jns
nop
xor
ret
rcrb
jns
insl
mov
cmpsl
adc
jp
and
xor
xor
xor
add
movsl
or
push
dec
add
push
test
cli
mov
sub
ljmp
xchg
sub
mov
jae
xchg
push
pop
ljmp
push
fistpll
cmpsl
icebp
adc
sub
out
xchg
adc
stos
lods
test
out
nop
mov
xchg
sbb
dec
int3
pop
jecxz
xchg
bound
jnp
push
cbtw
in
int
movsb
int3
ret
inc
psrlw
or
lods
fildll
enter
outsl
lahf
push
push
sti
xchg
sbb
shlb
push
add
sahf
cmp
test
jb
cmp
inc
scas
inc
sub
aaa
inc
jb
cmp
test
inc
fbld
scas
cs
cmp
popa
fbld
cltd
jne
loopne
xchg
adc
adc
inc
mov
inc
movsl
testl
xlat
sub
negl
sbb
stos
pop
dec
or
sub
jmp
cmp
mov
sti
out
sti
xor
rorb
sub
sbb
and
jne
stos
jo
push
mov
xchg
aad
in
sub
cmpsl
push
loope
xchg
mov
inc
outsl
sub
pop
push
pusha
aam
mov
nop
lret
and
sti
push
lds
scas
outsl
outsl
int3
xchg
and
cli
outsl
xchg
push
add
mov
popa
sbb
sub
mov
sahf
pusha
inc
sub
aaa
mov
lret
arpl
loope
gs
sbb
pop
in
mov
adc
stos
addl
jg
int3
xchg
push
clc
in
jmp
sbb
xor
sarb
lret
in
pop
outsb
push
pop
lods
mov
shll
inc
inc
jg
das
cmp
inc
sbb
jb,pn
fxch
adc
pop
cltd
mov
push
fisubrs
pop
loopne
ljmp
ljmp
ss
cld
mov
scas
or
inc
shrl
arpl
insb
paddd
or
push
add
sahf
lret
dec
jno
ja
push
aas
mov
scas
xor
lds
mov
or
add
outsl
sbb
mov
mov
pusha
jle
push
inc
push
xchg
dec
sti
popaw
mov
xchg
pop
out
dec
pop
pop
push
lcall
pop
push
iret
in
push
mov
clc
pop
mov
ja
jno
fildl
xchg
sti
lds
jo
inc
les
test
jne
pusha
les
dec
lcall
daa
into
fwait
pop
pop
rcll
push
cmp
push
dec
nop
xor
push
outsb
dec
jl
loope
inc
mov
movsb
cmp
and
stc
std
or
orb
jbe
xor
jp
nop
scas
ljmp
cli
mov
xchg
fcmovne
mov
adc
loopne
faddp
sbb
mov
or
and
test
clc
aas
mov
jmp
jb
fimuls
lcall
cmpsl
loopne
fldenv
call
rorb
loope
decl
mov
cli
pop
outsb
cmp
add
and
mov
into
inc
in
pushf
mov
das
and
pushf
push
jae
aam
lret
jl
mov
sbb
cmp
add
adc
xor
xchg
rorl
std
push
aaa
repnz
mov
ja
js
orl
testb
iret
add
and
rorb
sub
aaa
xlat
in
jo
lods
or
icebp
mov
mov
je
add
outsb
add
sbb
in
add
cmpsl
sub
mov
js
add
fiaddl
sbb
lahf
jg
je
int
push
fwait
push
loope
inc
sub
jns
pusha
xor
insb
mov
fldt
shlb
jle
in
lock
inc
test
mov
dec
loope
leave
pop
cli
dec
push
pop
mov
sub
sbb
dec
mov
sub
dec
adc
stos
js
pusha
mov
pop
popf
cmpsl
fsub
jg
cmovb
xor
pop
jbe
fcmovbe
pop
pop
add
mov
rol
lods
sti
mov
rcrl
mov
xor
add
jnp
fcomp
push
pop
and
jl
or
xor
cmp
xor
add
fnstsw
scas
in
adc
dec
xchg
jmp
xor
mov
dec
or
imul
addr16
lahf
shl
lea
mov
shrb
mov
orl
lret
mov
dec
js
push
imul
sub
stos
mov
fistpll
outsb
inc
or
test
sbb
xchg
jnp
mov
bound
nop
mov
fwait
sbb
stos
push
pop
jnp
out
cmp
push
mov
add
dec
in
sub
xchg
mov
push
dec
ja
pop
jae
arpl
xlat
shrl
sub
dec
clc
pop
jmp
and
add
decl
mov
ss
mov
jno
shr
xlat
jle
into
dec
fisubrs
xchg
mov
js
flds
cmp
push
sub
dec
in
push
mov
call
xor
cmp
push
cs
pop
push
push
push
push
mov
jne
lahf
stos
or
add
jae
inc
cmc
stos
pop
int
jg
ss
cwtl
dec
cmp
adc
dec
outsb
jmp
xchg
andl
cmc
sahf
mov
ljmp
rcr
xor
mov
out
push
pushf
fisubrl
jns
and
xor
dec
push
loopne
loope
ljmp
sub
out
int3
popf
and
adcb
adcb
movsl
xor
ret
shrb
fisttps
dec
jb
arpl
jmp
addr16
dec
scas
outsl
lock
test
adc
leave
aas
ds
xchg
push
push
mov
inc
adcl
jmp
mov
in
jbe
pop
mov
mov
lods
push
add
pop
std
fs
cmp
test
sbb
aad
xchg
and
arpl
outsl
xor
rcrl
addr16
in
pop
loop
add
or
rcrl
jl
adc
loop
push
mov
mov
push
push
sbb
lock
xor
loope
aaa
leave
sbb
aad
imul
nop
mov
test
mov
mov
xor
cli
aam
iret
imul
mov
pop
mov
shrb
or
adc
scas
repz
ljmp
addl
arpl
or
dec
cmp
xor
lahf
cmp
int3
add
lret
add
mov
adc
pop
push
inc
aad
stos
sbb
jge
jecxz
fcmovnb
sti
jbe
fdivs
sub
mov
xor
push
and
in
fstpl
xor
inc
fbstp
cld
xchg
in
cld
ret
fsubs
pushl
pop
pop
lret
jo
push
in
add
das
xchg
and
rclb
nop
mov
out
push
lahf
sbb
dec
push
push
dec
mov
mov
mov
testl
scas
mov
repz
sub
test
cmp
inc
xor
xlat
mov
lods
push
insb
aas
and
sbb
cwtl
xchg
leave
mov
mov
adc
xchg
mov
adc
pop
add
lahf
cmpsb
lret
icebp
subb
pusha
and
cmpsl
subl
pop
mov
push
mov
xor
xlat
negb
mov
jne,pt
enter
or
mov
pusha
out
imul
stc
cmp
or
mov
xor
xor
pop
sub
adc
fdiv
insb
jae
pusha
cmp
sbb
dec
dec
cmc
inc
mov
out
cli
aaa
jl
inc
cmp
and
push
adcl
pop
shrl
pop
push
imul
inc
adc
mov
fld
cmp
scas
pop
fimull
js
aad
jo
xchg
out
fists
popf
int3
insl
ret
mov
clc
push
lcall
enter
inc
push
scas
fdivs
int3
adc
sub
xor
adc
enter
out
jbe
shll
inc
push
mov
xchg
mov
xchg
aaa
jl
fwait
rcr
mov
out
sub
cmovl
push
mov
add
idiv
test
mov
pop
or
lods
lea
pop
arpl
imul
test
sub
jp
divl
fcmovu
aaa
sbb
add
lret
cmp
add
je
imul
jns
dec
jbe
iret
or
mov
pop
movsb
add
pop
mov
push
xlat
imul
inc
mov
add
sbb
mov
or
mov
or
adc
js
and
cmp
cbtw
loop
out
push
lea
pusha
shrl
add
and
hlt
in
lods
not
sbb
sub
dec
ljmp
ljmp
pushl
cmpsb
push
in
push
lret
dec
pop
cmpsb
add
push
sbb
or
sbbb
or
or
cld
in
push
fbstp
lods
cmp
or
inc
scas
test
imul
ss
sbb
call
push
or
fldcw
sub
mov
mov
pop
and
ret
xchg
xlat
aaa
pop
push
lcall
xlat
jge
cmp
push
add
xchg
jno
test
cwtl
pop
out
aaa
rclb
cli
dec
or
outsl
or
in
adc
mov
pop
mov
loop
mov
mov
int3
dec
je
repnz
xchg
or
int3
jl
mov
pop
add
adc
inc
adc
mov
jmp
pop
mov
mov
jl
enter
inc
mov
lret
xor
pushf
out
xorl
sbb
lret
mov
sub
in
push
adc
mov
movsb
mov
fs
ljmp
sbb
xchg
jg
jge
icebp
int
or
or
cmp
ss
cmp
movsb
out
sbb
push
cli
orb
shrb
out
cmp
mov
and
or
clc
jge
sar
xor
jecxz
outsl
and
shll
sub
outsb
shlb
das
xor
and
in
outsl
lods
iret
int3
sub
aad
sbb
jge
inc
in
mov
pop
in
xor
aas
xchg
push
pop
in
aaa
add
hlt
test
dec
sub
mov
add
inc
enter
inc
mov
loope
hlt
pop
clc
sbb
pop
cmp
leave
fsubs
push
xor
cmpb
movsb
pusha
add
test
lret
cmp
sub
repnz
mov
imul
outsl
sbb
jg
test
jmp
adc
clc
adc
sub
and
jns
pop
jb
lods
popf
inc
cmp
repz
jle
jle
jae
into
lods
sub
jnp
mov
repz
lahf
pop
jge
xor
mov
andl
out
jno
cli
xor
or
insl
cltd
pop
movsl
lods
fsts
lock
aaa
out
decl
xchg
repnz
repz
rep
je
xor
fists
dec
daa
lahf
jmp
jmp
movsb
fstpl
jno
movsl
fildll
addb
pop
arpl
add
inc
sub
jae
testb
cmpsb
push
orb
cmpsb
mov
popa
out
clc
mov
test
lahf
gs
inc
dec
adc
int3
ds
arpl
xchg
sbb
cmp
adc
test
push
cmpsl
jno
adc
std
inc
inc
aaa
aaa
pushf
aas
mov
or
mov
in
push
xchg
dec
add
out
pop
sahf
adc
jg
out
test
jmp
xor
jmp
mov
push
xor
add
or
sbbb
es
je
mov
sbb
mov
jo
xchg
xorb
jno
mov
jb
aaa
imul
dec
inc
fsubrl
movsl
cs
xor
mov
loop
inc
push
dec
mov
jbe
dec
add
xchg
add
jne
fwait
cmpsl
inc
dec
aam
lods
aad
ret
outsb
or
sbb
mov
imul
shlb
jle
sub
popa
inc
jbe
or
popa
pop
ret
dec
xchg
scas
sub
mov
outsl
testb
arpl
mov
jnp
hlt
fisttps
je
add
sbbl
ret
mov
inc
outsb
outsb
mov
cmc
or
pop
xchg
adc
mov
push
call
jne
ja
mov
fmul
or
cmp
test
in
lock
aas
sub
xchg
push
pop
sbb
subl
pusha
adc
or
dec
adc
xchg
stc
mov
pop
sti
mov
int
cli
mov
add
into
jle
jo
loope
pop
lods
mov
fidivrs
insb
aaa
std
jg
pop
in
scas
jl
mov
movsl
or
xchg
sti
mov
push
jo
imul
jns
stos
andb
sub
ljmp
xlat
jne
push
inc
push
mov
inc
xor
cli
fisubl
pop
std
outsl
movsl
movsl
cmpl
push
and
xor
in
scas
pop
mulb
dec
pop
shlb
nop
and
movsb
add
mov
rol
fmulp
orl
push
push
test
adc
imul
orl
pushf
aaa
mov
mov
xchg
jg
int3
rorl
loop
lcall
sbb
insl
mov
fildl
lock
mov
fcmovb
test
jo
lds
sbb
push
repnz
sarb
xchg
push
push
addb
xchg
or
pop
in
dec
dec
leave
xor
dec
negb
cltd
mov
pop
mov
ja
sbb
mov
sbb
cmp
mov
and
mov
sbb
xchg
in
xchg
xchg
les
out
lods
pop
ret
clc
out
ss
popf
mov
jg
inc
mov
je
aad
loope
dec
sub
dec
imul
dec
and
mov
mov
sub
mov
aam
cmc
mov
mov
repnz
pop
mov
shll
cld
pop
cmp
pop
loope
dec
cmp
jno
jo
xor
fmull
mov
aam
mov
pop
sbb
jle
jg
cltd
dec
pop
test
outsb
add
add
xchg
push
mov
add
test
lcall
push
into
xchg
jle
dec
mov
xor
push
adc
mov
inc
xchg
mov
or
iret
lods
and
sub
lea
fisttps
jbe
lahf
mov
xchg
mov
add
jns
sahf
lock
insb
adc
mov
inc
pop
out
call
mov
cltd
push
push
roll
jle
mov
rcl
cmpb
dec
jl
inc
enter
jge
std
and
js
jbe
jno
imul
outsb
push
mov
mov
push
sbb
in
inc
rol
test
shlb
jb
lahf
mov
ds
bndldx
mov
cmpsb
dec
dec
ljmp
push
adc
ja
icebp
fldenv
pop
sahf
sbb
mov
fucomip
bound
jg
jg
loop
aas
push
and
pusha
mov
and
or
or
faddl
rcl
dec
inc
in
mov
and
and
repnz
lret
dec
pushf
and
clc
add
cmpsl
mov
sub
xor
pushf
clc
test
mov
bound
cmp
and
jbe
movsl
mov
scas
mov
xlat
rcll
pop
pop
orb
in
sbb
sub
pop
mov
pop
fldt
or
xchg
push
add
lock
setne
pop
jmp
je
shrb
ss
into
int
xor
adc
sub
lcall
int3
jp
std
jge
js
xchg
rcrb
cmp
aaa
movb
test
or
fucomp
adc
aad
fnsave
arpl
add
jg
mov
fistpll
or
loope
push
pop
push
jle
enter
loope
sbb
sub
lcall
and
or
popf
mov
dec
inc
xchg
mov
out
add
push
ja
jl
jo
push
xchg
rcrl
cmp
add
jns
and
inc
repz
insl
adc
orb
shll
sub
xchg
cmp
je
push
repz
add
std
cld
lret
push
sbb
jge
push
mov
adc
push
sbb
mov
xchg
xchg
mov
adc
mov
mov
fwait
sahf
vcvtps2pd
iret
imul
xor
mov
add
push
fbld
mov
hlt
push
std
adc
stos
dec
cmp
les
negl
popa
cltd
pop
jmp
popa
sub
cmpb
mov
out
cwtl
es
scas
into
outsl
push
in
mov
loopne
jo
roll
mov
xchg
outsb
inc
fs
scas
inc
xchg
mov
sub
xor
stos
nop
xor
scas
sbb
outsb
outsl
adc
fidivl
cmc
es
cmp
mov
test
dec
xchg
sbb
add
push
push
std
arpl
lcall
inc
ja
movsb
sbb
pop
lcall
fistpl
add
or
xlat
cmpsl
push
adc
push
mov
test
mov
imul
jecxz
lock
addr16
and
cli
mov
mov
mov
jno
xchg
adc
push
movsb
push
inc
push
lods
cmp
cli
inc
loop
mov
aas
repz
dec
xor
lahf
add
mov
mov
lahf
cmp
lahf
idivb
push
sbb
iret
or
mov
shrl
dec
dec
out
or
cwtl
xchg
popf
mov
push
inc
mov
cmp
xchg
scas
andb
leave
sbbl
dec
js
aad
push
jnp
fists
pop
ficompl
jg
push
stos
xor
fistl
dec
mov
xor
fisttpll
dec
and
add
cwtl
test
je
clc
cltd
std
xchg
iret
ret
lcall
xchg
notb
mov
pop
fwait
mov
lahf
sbb
mov
fpatan
sub
pop
and
stc
adc
test
pop
push
push
push
mov
push
repnz
fidivl
ret
ret
out
lods
in
pop
and
push
cmp
mov
das
fstps
sub
fucomip
shrb
lds
dec
mov
jb
das
and
xor
test
or
js
jle
cmpsb
push
sub
mov
xchg
into
or
icebp
sbb
and
jb
das
loopne,pn
push
pop
cltd
add
inc
lret
sub
std
mov
lock
sub
jecxz
popf
idivl
inc
pop
dec
xchg
xor
in
pop
aaa
push
lahf
xlat
ljmp
fisttpll
jb
push
test
or
imul
sbb
adc
mov
xchg
or
inc
pop
andb
push
in
add
xor
push
sahf
dec
enter
subb
scas
mov
cmp
push
shlb
jge
dec
push
mov
sbb
call
cltd
jae
mov
test
xchg
out
inc
cmpsl
in
dec
lock
jge
fadds
fisubl
sub
add
dec
pop
icebp
xor
aaa
orb
xchg
aaa
mov
pop
cltd
sbb
movsl
call
mov
fldenv
jmp
inc
outsl
xchg
and
mov
mov
inc
push
leave
lahf
sub
clc
xchg
mov
cltd
pop
sti
or
xor
sbb
in
loopne
sub
adc
insl
xchg
in
dec
ja
mov
je
repnz
lret
sarl
mov
popf
movsl
mov
sub
fwait
shlb
jb
xchg
jg
xorl
xor
popa
sbb
xchg
cmpsb
xchg
sbbb
ss
add
xchg
ss
daa
jns
stos
cmp
dec
mov
or
or
jne
pop
and
mov
loope
push
test
repnz
push
lret
xchg
imul
sarl
mov
xchg
ret
mov
mov
mov
shll
jg
or
fldcw
push
pop
fbstp
adc
call
inc
lcall
js
cmp
sbb
rclb
or
inc
lret
mov
inc
lcall
sub
mov
adc
mov
or
orb
pop
fcomps
psubb
or
sub
mov
add
popf
fs
cs
lahf
xchg
rcrl
cwtl
mov
shlb
rcr
std
les
cs
lea
fnstsw
xor
pop
and
lret
in
pop
add
dec
rcl
lahf
fadds
fcmovnbe
mov
sbb
cmpb
dec
cwtl
jge
push
das
push
outsl
xor
and
sub
cld
push
mov
stos
stc
fwait
iret
jb
pop
std
cmp
jae
mul
push
stos
adc
bound
jne
lock
pminub
xchg
enter
cmp
fistpll
lds
dec
mov
lahf
dec
xor
jae
popf
jo
cwtl
les
xchg
xor
xlat
and
push
inc
dec
push
jp
arpl
adc
sarb
jl
add
enter
in
mov
pop
jge
add
cmpsb
les
pop
dec
dec
and
xor
sub
or
cltd
lds
aam
or
jnp
mov
pop
popa
push
xor
insb
add
call
daa
sbb
ffreep
or
insl
sarb
pusha
xchg
aaa
dec
lret
pop
loope
test
mov
imul
insl
pusha
arpl
dec
jmp
mov
mov
or
inc
cld
std
pop
xorb
sub
data16
fistpll
loop
out
fs
je
sbb
cltd
mov
sub
hlt
xchg
movsb
gs
sub
aam
fists
sbb
add
push
in
test
pop
sti
mov
aas
cmp
adc
fsubl
or
mov
filds
cwtl
enter
dec
jo
sbb
test
test
fildll
fsubrs
divb
mov
push
js
push
mov
mov
iret
dec
ret
lcall
and
fcompl
fisttpl
scas
or
dec
out
inc
xchg
in
dec
push
xchg
jmp
mov
ss
popf
pop
xchg
push
xlat
insl
cmp
xchg
xorl
mov
lcall
cli
add
or
push
setne
pushf
pop
xchg
fs
pop
jns
and
lock
xor
std
add
lret
push
xchg
sbbb
aam
ja
sarb
dec
es
pop
sub
outsl
xchg
jo
inc
mov
jle
xchg
mov
pop
xchg
mov
sub
aam
push
adc
sahf
lret
fsub
sub
jmp
mov
leave
lcall
cmpsb
pop
sbb
outsb
inc
adc
mov
adc
cmpsb
scas
std
lods
fidivs
jge
gs
push
lret
add
xchg
scas
cltd
mov
lret
lea
mov
fisubl
stos
inc
jne
cs
cmc
popa
jns
js
push
jbe
fmulp
loopne
es
ret
cltd
scas
in
xchg
push
hlt
or
mov
popf
in
mov
out
rol
lahf
and
and
rorb
mov
icebp
andl
inc
mov
add
ss
js
insl
scas
js
mov
pop
jg
sbb
dec
scas
xor
stc
insb
pop
sub
aad
jnp
xchg
xchg
mov
jo
lcall
xchg
xor
pusha
dec
mov
and
fldl
mov
ficoms
pop
pop
and
push
dec
dec
xor
nop
pop
flds
hlt
push
in
jle
andl
mov
mov
pop
in
ret
subb
push
lahf
inc
jo
xorb
mov
lods
aas
iret
sub
cmpsl
dec
std
das
stc
test
push
cld
mov
mov
out
adc
mov
jb
jnp
data16
sub
mov
sub
jo
jecxz
cmp
xor
ss
mov
out
hlt
sahf
in
pop
mov
dec
aad
pushf
pop
add
xchg
mov
cmp
pop
lock
sbbl
add
push
dec
in
fs
and
imul
mov
push
addr16
sahf
pop
outsb
add
test
xchg
push
lock
mov
int3
in
xor
fldt
in
cmc
xchg
fs
adc
cmp
adc
mov
mov
jecxz
fldcw
push
in
outsb
fnstenv
lock
lock
sti
push
sbb
repz
test
xlat
inc
ret
lods
pop
pop
int3
leave
ret
dec
push
cmpsb
mov
or
inc
ljmp
pop
adc
jmp
inc
push
ret
add
popf
mov
insl
shr
out
cli
fyl2x
in
pop
jnp
out
sbb
movsl
out
mov
ror
mov
xchg
sbb
and
out
xchg
cltd
andb
in
movsb
sti
xchg
and
rcll
push
int
mov
xchg
cmp
jnp
mov
lahf
orb
mov
popf
add
and
cmp
imul
mov
test
jne
repnz
mov
pop
lods
mov
cwtl
imul
fsubr
adc
frstor
sbb
test
cltd
pushf
jae
nop
mov
aad
cmp
aaa
call
in
test
xchg
xor
notb
loopne
jge
and
roll
pop
add
xor
cmp
shr
mov
test
jecxz
loopne
add
into
mov
int3
adc
movsl
sub
xlat
outsl
aam
fmull
mov
pop
jno
imulb
dec
add
cmp
sub
jl
or
iret
fistps
lea
dec
icebp
mov
insl
stos
cmp
lock
lods
and
cmpsl
xor
dec
dec
pop
repnz
jno
cwtl
insl
outsl
mov
addl
daa
cs
xor
je
andb
add
aad
insl
mov
jge
push
mov
dec
xchg
inc
cwtl
jb
mov
je
xchg
mov
lret
cld
pop
rorl
adc
cmp
xchg
and
fucomp
cmp
popf
sub
xor
jecxz
test
cs
cmp
jle
pop
cs
std
outsl
out
fwait
in
cwtl
push
popf
mov
enter
mov
shlb
lcall
jp
out
cmp
lock
cmp
mov
and
fcmovb
adc
adc
test
mov
int
fidivrl
fwait
or
ss
in
mov
mov
daa
pop
push
mov
sbb
pop
push
sbbb
jle
loop
mov
ds
sbb
aam
imul
fcompl
cmp
lcall
pop
jmp
int3
loope
mov
mov
test
call
icebp
hlt
jbe
jbe
push
das
jb
mul
push
add
pop
pusha
add
ret
lahf
push
and
gs
xor
adc
xor
dec
iret
pop
add
dec
mov
xor
dec
fs
fnsave
sti
adc
pop
test
dec
dec
mulb
sub
into
stc
negb
cmp
ret
into
jnp
sub
add
fldt
icebp
mov
pop
jns
xchg
xor
adc
adc
mov
lods
aam
cmp
adc
scas
dec
adc
fisttpll
imul
jecxz
int3
mov
inc
sbb
or
xorb
stos
ret
loop
test
jle
add
mov
popf
test
pop
rorl
mov
cmpsb
ds
xor
xor
jmp
xchg
cmc
pop
mov
pop
jb
xchg
ss
xchg
jbe
mov
sarb
mov
in
and
mov
test
inc
test
in
sbb
scas
add
inc
adc
xchg
and
or
ljmp
popa
pop
inc
jg
mov
adc
cwtl
inc
sub
pusha
add
in
sub
dec
outsb
aad
loopne
data16
xchg
xorb
lods
push
and
mov
call
gs
xchg
out
sub
sahf
jmp
in
repz
add
rorb
std
mov
fisubl
ljmp
mov
sub
xchg
insl
xchg
je
pop
popf
call
loop
lcall
push
decb
iret
xchg
xchg
or
push
dec
jle
xor
add
shrb
stos
xor
pop
adc
dec
lret
cld
test
mov
inc
hlt
std
sub
xor
lahf
lcall
xlat
in
cmpsb
push
sbbb
lea
xor
addr16
dec
sti
xchg
hlt
jmp
out
subl
mov
pop
sbb
jns
xor
mov
push
mov
inc
push
mull
jae
mov
or
push
out
fistps
pop
popl
adc
adc
js
inc
push
pop
lret
xchg
mov
out
lcall
in
fs
lret
cmpsl
vpunpckhqdq
pop
out
cmp
loop
clc
mov
ret
lock
jecxz
jl
es
lea
xchg
repnz
mov
sub
and
and
mov
xor
icebp
and
lret
xchg
jl
movsb
jle
mov
xor
adc
pop
cmp
pop
pop
scas
dec
or
inc
shll
xor
lcall
fs
push
adc
aaa
popa
lock
mov
shr
or
or
repnz
pop
dec
ficomps
test
xchg
pop
fisubs
sub
ficompl
jb
fs
pop
stos
test
jg
mov
jle
lret
inc
pusha
int
xchg
sbb
loopne
into
adc
xchg
sbb
mov
sti
std
sbb
jno
mov
sub
ret
sarb
cmp
int3
and
pop
mov
xor
ret
test
sub
pop
sub
mov
push
roll
ss
jno
xor
xchg
dec
push
pop
or
test
sub
cmp
jno
je
divl
imul
cmp
aam
imul
and
das
mov
clc
and
and
jb
aas
pop
xchg
add
fs
jmp
imul
push
jg
xlat
std
rep
mov
push
jo
cmpsb
jns
subb
leave
into
in
lods
lret
lods
jl
test
cmpsl
lcall
loopne
sbb
fiadds
fdivr
xor
adc
jnp
jecxz
fwait
xlat
js
jg
rol
lret
and
adc
xor
cmpsl
test
ljmp
inc
movsb
rorb
xchg
pop
xchg
mov
aad
ljmp
icebp
sub
mov
cltd
rorl
mov
cmpsb
adc
insl
stos
loopne
not
adc
lret
and
inc
xor
push
sub
push
daa
adc
inc
inc
dec
movups
rolb
int
cmp
cld
adc
mov
mov
add
cmp
lahf
nop
cmp
cmpb
cwtl
or
dec
gs
cmc
and
lcall
xchg
mov
cmp
mov
pop
wrmsr
xor
dec
cmpsl
xchg
popa
fbld
scas
mov
xchg
mov
pop
jmp
sbb
xchg
lahf
lcall
mov
xchg
les
inc
inc
nop
loope
or
in
lods
adc
xchg
lahf
xor
in
fisubrs
iret
das
outsl
mov
rep
pop
outsb
testl
data16
lret
mov
pop
cli
push
adc
or
sbb
outsl
out
push
push
arpl
call
insb
outsb
cmp
insb
sub
pop
sub
das
jge
ljmp
push
leave
mov
cmp
push
into
inc
int3
push
and
enter
shrb
fldl
fisubs
or
push
xorl
or
divw
nop
movsl
daa
push
xchg
push
popf
pop
pop
int3
sbb
movsb
sub
mov
xchg
jecxz
jnp
shl
mov
fldl
cmpsl
outsb
imul
int
inc
pushl
lock
xor
inc
sub
out
push
lods
ja
add
cmc
cmp
sbb
mov
aam
sahf
mov
cmp
sub
popa
lret
call
scas
jbe
xchg
cld
pop
sub
and
subb
and
push
adc
adcb
cmp
shl
pop
sub
xchg
sti
pop
clc
xor
fsts
xchg
shrl
jae
pop
lods
sbb
test
mov
out
insl
cs
aam
in
mov
pop
js
ja
jecxz
xor
inc
pop
cmp
repnz
fldl
loopne
cmpsl
leave
mov
add
into
popf
and
sbb
ficompl
pop
loope
aas
test
cmp
fldenv
jle
pushw
sbb
pop
loopne
cli
xchg
mov
call
and
mov
mov
in
mov
lods
pop
in
es
inc
js
lret
shrb
xor
pop
and
test
aaa
add
loope
in
call
inc
in
add
jno
xchg
or
push
mov
clc
or
pop
inc
sub
push
dec
test
sbb
loope
or
mov
shlb
fldcw
fbstp
inc
loopne
bound
lods
je
jno
loopne
add
shl
aaa
jmp
out
pop
jmp
sbb
jbe
cmp
sub
xchg
sub
pop
push
adc
mov
fwait
lods
sahf
mov
lcall
fistpl
fcmove
lods
mov
xchg
pop
jb
int3
fcmovnbe
mov
jne
js
mov
cmp
sub
push
jp
and
and
insb
into
cmp
jmp
jmp
imul
loopne
je
lret
xchg
in
pop
add
pop
iret
insl
popa
lret
aad
ret
xlat
cmp
dec
enter
stc
jge
das
popaw
push
jb
loopne
pushf
fcompl
xchg
push
ror
mov
test
xchg
pop
rcr
clc
sbb
pop
pop
xchg
pslld
int3
jl
jmp
test
lret
sub
jns
xchg
push
js
push
ret
and
fdivr
cmp
sub
jmp
dec
movsb
lods
scas
insb
sti
jne
cli
push
stc
jae
mov
call
jne
push
sbb
and
cmp
std
push
rclb
push
push
insb
xchg
sbb
jmp
inc
dec
cmp
aad
sub
mov
daa
cwtl
mov
mov
ljmp
fldl
in
into
mov
mov
sbb
stos
jb
mov
and
aam
arpl
lods
stc
stos
lret
in
xchg
adc
outsl
jge
sbb
loop
adcl
test
mov
pop
iret
push
mov
cltd
out
and
roll
fcmovbe
jnp
mov
or
enter
push
inc
roll
stos
insl
leave
mov
sbb
jo
adc
test
xor
and
cmpsl
pusha
or
insb
cmpsl
pop
xlat
lock
sub
ja
fnstcw
pop
cmc
and
test
add
inc
std
ss
push
push
test
mov
add
aad
in
aas
ljmp
inc
push
rclb
cwtl
and
and
lods
cmp
test
stc
adc
or
daa
jo
xchg
lods
or
shll
pop
idiv
nop
psubw
mov
xchg
mov
shrl
mov
sub
daa
lahf
aad
mov
test
sahf
jae
and
insb
inc
xor
cmp
nop
daa
xor
and
flds
cmp
xchg
cltd
mov
push
insb
insl
sbb
mov
push
xorb
fiaddl
mov
mul
dec
dec
scas
out
jg
cmp
xchg
lods
jle
mov
lods
ficomps
inc
hlt
jne
stos
roll
loop
jp
sbb
push
xchg
pop
sub
gs
es
xchg
out
pop
dec
out
popa
fildll
es
adc
pop
mov
loope
dec
clc
xor
ljmp
adc
pop
jle
mov
mov
filds
hlt
lds
repz
lods
push
std
bound
ret
shlb
mov
jg
out
jmp
idivl
aam
mov
ret
popf
adc
test
or
insb
dec
xchg
mov
jo
inc
and
stc
shlb
cmpsb
push
push
cmp
jne
cmp
mov
push
adc
sbb
adc
in
js
imul
jne
scas
adc
rol
push
and
pop
ror
xor
add
xchg
jecxz
pop
mov
int3
shll
dec
icebp
xchg
sub
inc
cmp
nop
push
and
xchg
jb
xchg
je
cs
cltd
mov
popf
sub
add
xchg
and
das
jmp
andb
aas
cli
outsl
jge
scas
loope
cwtl
jle,pt
xor
add
fcoml
lock
sbb
dec
ret
or
in
mov
jecxz
add
imul
cltd
xchg
insl
inc
cmp
or
mov
jbe
out
and
push
xlat
jbe
fs
mov
rcl
mov
sub
ret
fdivrs
jg
dec
stos
pop
mov
jmp
inc
pop
std
mov
test
int3
cmpsl
mov
subps
cmp
stos
push
or
cmpsb
xlat
push
std
out
imul
mov
int3
in
mov
notb
test
mov
sub
pusha
addr16
push
mov
xor
pop
or
mov
cmpsl
cld
cmpsb
loop
sbb
push
cmp
dec
imul
and
xchg
aad
lea
cmpsl
movsl
xor
mov
outsb
or
push
xchg
pop
ret
imul
xchg
inc
xchg
and
imul
mov
pop
inc
jg
adc
and
xchg
adc
mov
cmpb
int3
ja
dec
sti
sbb
outsb
mov
shlb
cmp
dec
aam
aas
adc
sub
out
sub
filds
sub
jle
ret
adc
mov
loopne
xlat
lods
imul
adc
or
sbb
hlt
loop
sub
add
stos
xor
sub
imul
jns
and
pop
mov
and
jnp
xor
lcall
jp
push
push
cmpsb
xchg
in
enter
vmwrite
lea
aaa
jns
roll
outsb
mov
sbb
mov
int
outsb
pushf
push
movb
outsl
mov
sub
xchg
or
sbb
les
in
das
in
in
mov
movb
rcrb
fs
add
stos
dec
repnz
and
and
mov
je
pop
popa
pop
and
dec
cli
je
push
rclb
pop
cmp
mov
enter
sub
aad
jb
ficoml
iret
cs
xor
pop
jg
lcall
pop
decb
push
or
insl
ds
std
dec
cwtl
cmpsl
in
push
xchg
dec
adc
leave
push
pop
push
fisttpll
dec
inc
iret
dec
daa
dec
jg
mov
adc
nop
and
rclb
jl
sbb
jp
out
rclb
add
movb
sub
sahf
shl
scas
pop
lret
push
inc
jae
sub
cmpsb
test
pop
or
cwtl
cmpsl
cltd
imul
fnsave
xor
mov
lea
cmc
dec
sub
nop
mov
in
jns
jg
xchg
bound
mov
lcall
imul
nop
sarb
push
dec
mov
jnp
in
nop
xchg
test
dec
cmp
stos
dec
sub
xchg
lret
stc
inc
stos
pop
scas
les
jl
pop
jecxz
stos
inc
cwtl
lretw
dec
adc
mov
or
pop
aam
dec
hlt
adc
pop
arpl
inc
add
inc
mov
add
lcall
scas
dec
mov
rclb
dec
sbb
xchg
inc
mov
sbb
or
mov
xor
dec
mov
mov
cwtl
xlat
inc
arpl
pop
xor
or
imul
les
std
rcrb
cld
or
and
sub
loope
pop
movsl
inc
pop
fwait
dec
test
cmp
sbb
or
fcomps
loop
jecxz
fidivl
and
jno
push
and
daa
add
ficoms
out
in
mov
inc
inc
adc
jp
cli
cmp
sub
push
jne
mov
fsub
sub
xchg
pop
movsl
lea
mov
bound
sahf
push
std
mov
fmul
add
enter
addr16
and
push
xchg
cmpsl
lea
cltd
ficoml
stos
jmp
xchg
adc
fs
jnp
rclb
fwait
jae
or
imull
in
in
xchg
int
jbe
bound
inc
or
arpl
repz
and
fldcw
or
out
dec
add
pop
sub
div
or
jge
hlt
mov
push
loopne
add
inc
loop
cli
andl
pushf
inc
mov
fsubl
xlat
int3
loop
dec
enter
and
mov
inc
inc
daa
dec
iret
fstps
lods
outsb
sahf
sbb
popa
test
cmpb
xchg
jns
mov
sbb
xchg
mov
cmp
push
push
dec
test
sahf
lods
ds
add
inc
dec
daa
sbb
pop
movsl
fistps
cltd
das
mov
or
dec
lret
ret
push
aad
mov
push
jo
popa
popa
repz
imul
push
mov
add
dec
in
fimuls
int3
sbb
ja
sbb
hlt
cmp
out
sub
out
insb
dec
adc
popa
inc
mov
pop
ret
mov
mov
cltd
pop
test
popl
pop
pop
mov
jns
pop
shlb
pop
jbe
mov
icebp
je
fsubrl
cmp
aad
ja
dec
xchg
out
rorb
cli
inc
sub
popa
xor
test
test
pop
cwtl
xor
or
cmp
in
and
test
or
iret
lods
std
xchg
cli
sbb
pop
mov
xchg
cmp
enter
mov
incl
shlb
divl
cmovb
pop
mov
in
jp
inc
xchg
inc
cmp
lods
loope
repz
mov
dec
loope
push
outsb
scas
out
test
or
bound
js
fdivr
aaa
pusha
xchg
adc
push
dec
les
out
and
inc
ss
es
push
xchg
push
jmp
and
addr16
mov
aad
mov
sarl
out
call
xchg
or
and
mov
sub
mov
mov
push
mov
jp
pop
add
loope
lods
xchg
inc
iret
dec
cmp
aaa
jo
and
arpl
test
xchg
xchg
pop
adc
mov
jmp
jecxz
cmpsb
xor
xor
mov
out
inc
jmp
push
cmpsl
mov
jl
stos
idivl
fsubrs
stc
test
lods
jle
out
lret
f2xm1
push
mov
in
xchg
inc
mov
cmp
loope
push
iret
lods
dec
lret
mov
or
or
out
ja
mov
pop
jle
cmpsb
je
pop
fcomps
jne
add
int3
iret
stos
into
jg
or
cmc
dec
push
push
xchg
sbb
int3
out
clc
movsb
pop
insb
xor
sbb
sub
dec
loope
fs
std
cld
repz
outsb
std
nop
mov
jne
adc
xlat
xchg
in
push
insl
cmpsl
aad
add
lcall
lods
fs
cmp
push
add
mov
mov
insl
sbb
mov
push
xor
ja
xchg
fdivrl
pusha
rcrl
loop
or
mov
mov
jne
mov
or
jmp
mov
loop
test
fisubrl
mov
loopne
inc
fbstp
js
divl
fcoml
sub
inc
shl
ret
pop
lods
xchg
and
xchg
pop
enter
fsub
mov
pop
fldt
gs
movsl
dec
inc
cwtl
cmc
jg
cmp
jns
lahf
movsb
dec
pushf
pop
test
sub
mov
pop
das
in
mov
inc
imull
push
nop
cmp
in
stos
push
insl
std
push
jle,pn
sub
jo
addl
dec
sub
cli
adcb
dec
jnp
addl
pop
roll
mov
adc
add
mov
sub
jno
sbb
nop
inc
dec
push
mov
pop
test
imul
div
stos
xchg
test
adc
inc
add
fidivrs
lods
jno
daa
fsubrl
pop
jne
add
push
sahf
push
jl
xchg
fsubl
or
jns
inc
adc
inc
add
int3
out
dec
rcrb
leave
jecxz
cltd
out
jmp
repnz
int
jae
cld
mov
decb
leave
outsb
fs
gs
xor
negb
js
in
stos
fs
in
sbb
idivb
mov
inc
or
mov
mov
push
call
lahf
mov
jb
ret
bound
inc
cs
inc
jmp
addl
mov
scas
dec
push
mov
and
mov
dec
cmpsb
outsl
lret
add
jns
out
mov
gs
nop
rcrl
subb
loope
flds
rolb
mov
mov
xor
jecxz
and
mov
das
add
push
out
xchg
rcll
ret
cli
test
cmp
fimull
pop
pop
shll
sahf
and
faddl
xchg
iret
cmp
xchg
jp
in
mov
mov
aaa
lods
stos
ret
xchg
mov
mov
mov
pop
pop
ljmp
pop
cmp
xor
lret
or
pop
dec
das
dec
stc
sub
add
adc
sub
pop
mov
cmp
pop
nop
testb
fiaddl
or
pushf
test
xchg
mov
sbb
or
out
mov
iret
lds
lret
das
push
lds
inc
ljmp
psadbw
fistpll
subb
je
xor
dec
and
cmpsl
sub
loopne
orb
push
stc
push
and
in
xchg
inc
xlat
push
cmp
and
shll
adc
movsl
out
fbld
and
jmp
dec
movsl
jne
adc
mov
mov
or
out
xor
push
push
js
xchg
mov
mov
cld
andb
pop
dec
adc
xchg
mov
xor
pop
in
sbb
inc
or
cwtl
loope
ret
out
fcmove
jmp
loopne
xchg
mov
cmp
cmpsb
outsb
fiadds
mov
out
aas
fs
and
adc
fmul
jo
idivl
cmc
out
jecxz
stos
lret
mov
pop
jmp
test
std
sub
cmp
int3
pop
out
loop
mov
and
mov
rcll
jb
fstpl
mov
js
xor
data16
dec
add
mov
jo
loop
sbb
xchg
loop
stc
ret
add
rcrb
push
stos
and
aas
mov
es
lahf
adc
jp
out
fwait
nop
aas
lret
lock
xchg
imul
xchg
inc
mov
jge
gs
mov
pop
pop
dec
dec
rcll
xchg
add
popf
cmp
ja
fwait
or
cli
xor
inc
pop
orl
pop
mov
popa
inc
arpl
mov
add
push
sbb
test
mov
rcl
jnp
popa
rcll
push
push
xor
addr16
adc
data16
and
gs
ret
adc
outsl
std
aam
sbb
scas
xor
cltd
out
pop
add
mov
in
ljmp
cs
pop
sbb
cld
dec
xchg
push
pop
xchg
adc
ret
sub
xor
loop
pop
xor
cmc
popf
mov
mov
jbe
xor
int
mov
add
dec
cmpsb
mov
cmp
scas
mov
sbb
test
icebp
inc
jg
jge
pop
pop
mov
jmp
jo
scas
jb
lods
cli
sbb
xchg
or
mov
cmc
subb
adc
and
xor
fistpl
fwait
arpl
mov
scas
adc
out
test
jnp
aad
cwtl
jne
sar
jp
dec
inc
in
push
jg
and
ljmp
aaa
pop
pop
xchg
sarb
dec
lods
mov
arpl
into
imul
sub
test
into
adc
mov
push
push
adc
and
int3
je
iret
ja
loope
jp
cmp
lret
jb
or
and
xor
decb
or
pushf
loope
dec
imul
jnp
xlat
gs
push
dec
pop
mov
mov
cltd
in
lahf
fisubrl
fadds
sarl
incl
lahf
shlb
push
xlat
sub
xor
aas
bound
xor
push
jb
mov
jo
jbe
sub
mov
das
cld
arpl
pop
xor
in
imulb
and
in
mov
arpl
aaa
mov
movsb
jns
sbb
repnz
mov
mov
adcb
mov
shlb
les
pop
int3
mov
xchg
pop
cld
xchg
lods
fwait
dec
add
inc
int
loop
lds
test
test
and
add
pop
insl
push
fmull
mov
xor
xor
ds
fiadds
mov
out
inc
add
lahf
decl
and
aas
fcoml
xor
inc
cmc
push
inc
addr16
and
cmpsb
loop
lret
lods
stos
negl
cmp
and
fs
mov
jmp
sbb
out
iret
and
test
das
dec
sub
jb
ja
dec
and
dec
fcompl
into
ret
cld
mov
mov
cs
jle
loope
gs
or
sbb
std
je
test
movsb
xor
mov
cmp
test
pop
adc
mov
mov
out
pop
es
lods
ss
mov
dec
sub
rorb
cld
mov
in
push
rol
and
clc
lahf
aam
mov
fstpt
imul
insl
pop
pusha
xbegin
hlt
js
inc
fstpt
xor
pop
cmp
das
lahf
and
mov
popf
jecxz
mulb
cwtl
leave
jmp
dec
pusha
xchg
in
jp
mov
cmpb
and
push
stos
or
imul
lods
into
lcall
mov
lret
inc
and
push
out
jmp
out
subl
xchg
sub
and
hlt
lret
dec
or
rcrl
pop
xor
lds
mov
ficoml
cmp
lret
pop
cli
jo
xchg
push
or
push
push
mov
in
aas
lret
jb
mov
dec
hlt
aam
cli
dec
cwtl
xchg
xor
add
lret
sbb
and
ret
or
negl
or
ja
pop
mov
and
add
cmpsl
in
dec
das
xor
sti
mov
mov
add
popa
dec
adc
mov
test
icebp
cmp
mov
aas
lods
movsb
enter
sub
das
pop
hlt
out
cmp
test
xor
add
pop
shrl
lods
mov
jno
movsl
gs
call
cmp
sbb
fisttpl
push
dec
popf
sub
lods
jle
push
dec
mov
sub
stos
jb
insl
rclb
mov
pusha
mov
sbb
sub
add
mov
inc
mov
mov
popa
leave
outsl
loope
jnp
lcall
fwait
mov
dec
ss
sbb
mov
ljmp
bnd
push
aam
push
sti
hlt
sbb
inc
lods
movsb
repz
dec
cli
int
insl
sarb
mov
xchg
and
inc
out
insl
xchg
jnp
xchg
mov
jp
loopne
mov
mov
fsubrl
in
or
jl
mov
and
mov
addl
pop
inc
or
ret
mov
popa
cmp
push
xor
stos
inc
add
mov
enter
leave
jecxz
scas
out
testl
ret
sub
adc
rcrb
mov
out
jnp
dec
inc
fldenv
mov
xor
push
nop
jmp
sbb
adc
js
repnz
out
sub
rolb
cmp
xchg
pop
jmp
push
xorb
dec
dec
ret
ret
jge
leave
mov
adc
dec
mov
into
sar
cmp
add
and
scas
or
movsb
movsb
push
decl
popa
and
jb
arpl
out
dec
jne
js
movsb
cmc
out
xchg
pushf
or
test
lods
scas
loopne
imul
arpl
cli
dec
xor
in
cmp
movsl
xor
or
iret
pop
mov
pop
subb
adc
jae
test
xor
cld
rclb
fcmovnb
rorl
jb
fistl
jle
loop
sbb
test
add
lret
shlb
xchg
cmpsb
or
jne
xchg
add
push
lds
xchg
jnp
jno
pushf
cmpsl
adc
filds
lret
xchg
cmpsl
call
in
push
inc
lret
jae
sbb
lret
imul
int
addr16
inc
push
jns
lods
xchg
hlt
mov
in
inc
xchg
inc
dec
mov
and
leave
clc
push
push
mov
sarl
mov
add
xchg
or
pushf
lods
hlt
cld
push
hlt
lds
jnp
add
nop
lock
mov
mov
enter
fisubrl
shrl
cmp
fcmovnu
popa
push
push
sub
dec
lods
cld
cwtl
movsb
push
daa
lods
adc
ret
icebp
insl
dec
imul
aaa
xor
dec
sbb
inc
mov
mov
pop
and
dec
and
loope
push
sub
mov
add
mov
push
jnp
in
loop
inc
jmp
pusha
ret
pop
dec
mov
test
or
not
jnp,pn
xor
and
daa
insl
jbe
stc
pop
push
ja
and
dec
add
imul
mov
cmp
mov
sbb
push
int
lcall
insb
lret
dec
ds
repnz
adc
dec
xor
add
and
mov
cwtl
enter
in
xor
lods
sbb
in
loopne
jge
iret
fwait
movsl
fwait
fwait
mov
and
stc
stc
cmp
dec
in
dec
out
int3
cmp
leave
xlat
sub
mov
push
loope
pop
imul
inc
sbb
sbb
adc
mov
ds
jns
jecxz
sbb
and
adc
fidivs
repz
xchg
dec
xlat
icebp
sub
inc
lahf
into
push
imul
adc
cmp
xor
nop
xor
xchg
inc
enter
and
sbb
orb
add
cs
jg
jp
mov
xor
ret
ret
out
sbb
mov
test
jne
pop
icebp
jae
inc
lret
dec
out
add
lods
shlb
add
jno
pusha
fidivl
and
stos
cld
push
jb
cli
pusha
xchg
and
adc
inc
insl
sbb
mov
xor
pop
jp
inc
fimull
add
sbb
cmp
leave
roll
lcall
mov
je
inc
dec
fiaddl
add
ds
mov
add
nop
jbe
jae
scas
stos
roll
jns
jg
jbe
mov
pusha
push
or
xor
hlt
fcom
ret
shrl
pop
in
lock
jns
leave
cmpsb
cmp
aas
sub
andb
fdiv
push
push
mov
lret
xchg
rolb
into
stc
movsb
js
cmp
std
sbb
jecxz
or
sub
jmp
and
xchg
into
cwtl
mov
jmp
jecxz
call
inc
inc
inc
jecxz
insb
push
rcrb
inc
rcrl
jno
cmpsl
push
mov
aas
test
and
insb
add
sbb
test
jle
rorl
shlb
mov
add
mov
paddd
push
pop
test
mov
push
cmpsl
ljmp
mov
fisttpll
jmp
push
in
xchg
xor
add
pop
addr16
int3
pushf
ljmp
dec
jmp
repnz
out
mov
cmpb
dec
sbb
sbbb
add
and
sbb
sbb
push
call
ds
mov
cmp
test
dec
lcall
sub
lods
cmc
xorl
xchg
shll
or
dec
clc
sbb
adc
ja
xlat
fimuls
loop
or
mov
popf
les
sub
iret
mov
xor
pop
fs
mov
xchg
hlt
dec
cwtl
popa
aas
int3
idivl
inc
push
stos
addl
fsubs
mov
push
dec
in
stos
mov
leave
xor
inc
stc
push
inc
out
fcomp
loop
push
rcll
pop
dec
jge
pusha
lret
lret
lret
sbb
lret
sarb
scas
xor
push
fsts
pop
pop
xchg
ljmp
or
mov
fcmovu
or
cli
popa
stos
js
pop
movsb
les
mov
mov
push
mov
test
in
xchg
dec
mov
pop
lock
add
sub
fstpt
inc
data16
pop
jns
flds
add
sub
push
je
nop
push
test
mov
les
lea
mov
ds
inc
jge
add
bound
jbe
inc
cs
and
and
mov
sahf
into
xor
add
xchg
sub
inc
outsl
ret
scas
int3
sbb
push
out
fdivp
mov
mov
fsub
aad
addb
dec
je
push
repnz
add
fcom
jns
test
sbb
outsl
dec
bound
jnp
fsubl
int
ljmp
shrl
ss
adc
add
mov
sbb
loope
jae
jns
repnz
call
sub
lods
sbb
dec
cmpsb
sub
call
dec
cld
mov
mov
adc
sbb
lahf
add
bound
icebp
out
test
xchg
mov
cltd
push
xchg
dec
insb
lods
ret
lods
lds
inc
push
push
hlt
fidivs
jb
add
stos
pop
stos
stos
dec
sub
xor
push
jmp
idivl
pop
dec
andl
fisttpll
sbb
enter
sub
sti
insb
mov
arpl
mov
pop
mov
in
pop
clc
xor
out
sub
sbb
dec
or
cmpsb
sub
add
lods
loope
leave
adc
lcall
pop
pop
jmp
mov
push
mov
push
std
push
mov
test
rcll
inc
add
mov
cmpsl
push
fcmovnu
xchg
and
mov
jg
push
out
mov
out
out
js
ja
jnp
clc
sbb
cli
adcb
das
js
popf
popf
lahf
rcll
ret
je
jp
data16
call
dec
or
movsb
leave
in
daa
cwtl
or
sti
ret
xlat
xlat
fcoms
cmc
cs
mov
xchg
mov
push
push
xor
inc
push
fstpt
lock
xlat
stos
push
sbb
mov
sub
jl
or
pop
cmc
fcomps
popa
mov
xchg
mov
test
movsb
and
das
pop
xchg
or
sbb
xor
mov
aaa
outsl
ja
mov
out
dec
xlat
sub
adc
stos
popa
mov
jb
xchg
outsb
xlat
mov
call
ret
sarb
dec
cmpsl
jae
fadd
xor
cs
sti
push
adc
dec
cmp
cmpl
jl
push
push
adc
clc
or
pop
ret
jle
dec
into
movsl
xchg
ljmp
in
adc
inc
and
loopne
dec
mov
aad
pop
jbe
nop
scas
adc
dec
sbb
test
pushf
and
fadd
sbb
cmp
daa
sbb
jl
xor
fld1
test
mov
jg
and
xor
and
inc
lahf
nop
outsl
outsb
out
enter
inc
jle
icebp
mov
xchg
adc
and
imul
mov
xchg
into
pop
pusha
shll
imul
xor
daa
adc
daa
or
sbb
ret
inc
dec
mov
pop
mov
movsl
orl
out
pop
and
ja
xchg
xor
outsl
je
jnp
cmp
rorb
ljmp
mov
out
hlt
jg
bound
xor
test
mov
aad
dec
adc
inc
cmpsl
mov
lcall
sbb
in
addb
es
fstpt
sub
imul
sub
ss
mov
adc
addr16
mov
adc
aad
xchg
imul
cmp
in
imull
testl
test
jg
ret
xchg
ss
ljmp
xchg
mov
xchg
cmc
pop
cmc
mov
cs
inc
ja
imul
aas
jp
call
jg
shr
jge
cmc
sbb
adcl
lds
jecxz
inc
mov
aaa
sub
std
ds
add
adc
mov
sbbb
mov
xlat
dec
mov
add
pop
pop
mov
xchg
xchg
xor
pushf
insb
or
idivb
xchg
jbe
fcmovbe
xchg
and
shl
xor
cmp
ja
adc
xchg
xchg
jmp
sbb
jl
sub
aam
outsl
mov
mov
repz
jae
xorb
insl
lret
inc
xchg
das
clc
dec
xlat
push
popa
aam
xor
jo
mov
mov
lea
pop
scas
mull
pop
lock
in
mov
push
pushf
sbb
imul
sub
lea
arpl
pop
pop
or
negb
jecxz
sub
mov
cmp
cmc
or
push
movb
mov
nop
mov
sbb
cmpsl
xor
jle
and
hlt
push
repnz
and
imul
enter
test
push
pop
sub
or
sarb
jge
jno
cmp
and
dec
sub
insb
sarb
fbld
ret
mov
lock
mov
xlat
pop
das
faddl
xor
aad
sbb
inc
mov
pop
xor
in
pop
cmpsb
addr16
lds
jnp
dec
clc
cmp
cs
and
sub
stos
repz
in
inc
and
cmp
sbb
push
add
push
and
mov
movsb
mov
xor
xor
push
mov
aas
dec
cltd
inc
ljmp
test
push
push
jno
jne
push
clc
mov
into
insb
ss
jns
outsb
mov
in
pop
pop
adc
fldl
rorb
dec
and
xor
ja
cmp
jecxz
pop
xchg
out
dec
popf
jmp
add
popa
cmp
and
incl
and
jge
xchg
std
movsb
in
lret
adc
mov
dec
xchg
repz
push
mov
jb
inc
pushl
int
dec
or
insl
adc
cli
sbb
xor
push
shll
push
cmpsl
or
movsl
sub
mov
xor
inc
insl
aam
xchg
cmp
movsl
mov
loope
jno
das
stos
aas
loope
lcall
pop
inc
out
dec
lock
in
jl
dec
jge
cmc
xchg
xor
outsl
push
lock
popf
dec
add
and
insb
in
mov
jp
scas
cld
and
mov
mov
repnz
add
add
ljmp
mov
fucomip
ret
pop
xchg
lods
add
xlat
push
mov
pop
xchg
dec
inc
cltd
jle
jae
ret
mov
fadds
lock
push
cmpsl
xlat
mov
push
and
sbb
in
pushf
out
int3
inc
nop
and
jbe
addb
cltd
xchg
test
adc
push
insb
mov
push
add
jecxz
imul
xor
add
xor
push
jne
push
jns
mov
rcrb
mov
cmp
push
mov
pop
xchg
lea
jb
pushf
movsb
adc
inc
in
shl
push
push
popa
aaa
jnp
jg
xchg
xor
das
fwait
test
es
xchg
imul
cmp
scas
pushf
xor
adc
scas
test
aam
adc
push
sub
repnz
dec
pop
push
mov
mov
popa
insl
cmp
jmp
jge
pop
jns
leave
sub
repnz
inc
push
std
jge
pop
xor
outsl
out
movl
dec
xchg
adc
mov
dec
inc
js
fimull
imul
das
aam
sub
dec
cwtl
inc
insb
movsl
adc
xor
les
dec
data16
stc
jmp
lahf
push
inc
cld
test
mov
sarb
repz
push
cmpb
adc
jns
imul
sbb
jnp
mov
cmp
cs
mov
aaa
push
mov
popa
repz
iret
dec
lods
ds
inc
fstp
xchg
outsb
sbb
scas
xor
mov
and
xor
stos
cltd
sbb
add
popa
jg
jo
mov
or
sub
pop
test
sub
mov
or
push
negl
fs
or
fisubl
outsb
add
ja
scas
add
loope
jecxz
call
hlt
dec
mov
mov
shrl
loope
or
ds
ds
adc
in
jno
mov
fcomps
xchg
scas
movsb
pop
lret
xchg
pusha
popf
test
adc
and
shll
in
test
add
xor
jle
aas
mov
or
mov
jle
orb
pop
dec
nop
aam
cld
pop
call
jle
icebp
inc
dec
loopne
pop
cmp
or
rorb
int3
ss
dec
jge
call
pop
orl
inc
inc
jno
das
js
xor
and
jp
sub
ss
les
pop
or
pop
xor
jno
popa
scas
cmc
daa
jg
adc
pop
sub
push
mov
dec
insb
and
aas
ret
clc
adc
js
sbb
jnp
fwait
aam
xor
fstpl
sti
fcompl
push
mov
fmuls
ret
inc
push
pusha
pop
mov
fwait
inc
xor
leave
push
push
jbe
push
ret
push
dec
xchg
mov
add
ds
out
jbe
daa
cmp
push
cmp
shlb
aas
shrl
pop
inc
push
test
xor
mov
les
mov
adc
xor
pop
stos
cmp
dec
jge
pop
xchg
in
mov
aad
add
cli
dec
stc
jbe
movsl
les
xchg
fs
loop
inc
test
xchg
stc
arpl
insl
xchg
inc
dec
jnp
decb
pop
leave
push
xor
mov
stos
and
call
sub
cmp
or
hlt
fmull
es
fwait
ret
and
xchg
rcr
jecxz
std
fs
insl
pushf
push
push
inc
pushl
push
stc
daa
or
stos
mov
stos
adc
pop
add
and
in
fsubl
imul
rclb
push
leave
pop
gs
cmp
mov
fnstsw
jo
and
scas
je
dec
lcall
pop
hlt
fcomps
jnp
fldt
push
xor
roll
sbb
rcll
mov
imul
in
loopne
push
push
cmp
dec
sbb
std
je
jnp
mov
and
mov
ret
cmp
xorb
movsb
add
std
add
cmpsb
test
pushf
outsl
lods
lahf
je
xchg
stos
clc
jne
sbb
loop
out
leave
push
mov
push
mov
enter
jae
cmp
cmpsb
shrl
cmpsl
not
cmp
inc
mov
insb
das
fsincos
cli
int
and
pop
ds
rcrb
out
outsb
xchg
and
mov
aas
jbe
js,pt
cld
in
lods
ljmp
repz
outsb
push
es
int
aaa
es
jl
adc
ljmpw
inc
jmp
lods
inc
mov
mov
lahf
rolb
movsb
aad
bnd
pop
jo
jg
mov
enter
shrl
mov
inc
ja
jecxz
and
push
testb
adc
mov
mov
xchg
pop
jno
stc
mov
ja
pop
push
stos
fcoms
xor
fxch
mov
push
movsb
or
mov
dec
sahf
jge
addr16
sbb
xor
ljmp
es
cmpsl
jp
lret
arpl
or
sub
scas
xchg
mov
inc
xchg
adc
mov
mov
in
push
cs
orl
xor
inc
daa
je
cld
sub
push
jae
ret
popf
and
mov
xor
cmpsl
bnd
shll
mov
or
repz
arpl
hlt
inc
mov
lods
mov
mov
subl
jg
cs
sub
sbb
mov
ja
imul
lret
jg
or
cmc
pop
cmpsl
stos
addl
sbb
lcall
or
loopne
add
lods
popf
mov
cmpl
mov
pop
in
lret
jo
repz
cmp
adc
pop
or
scas
ss
mov
repnz
sbb
mov
jmp
or
loope
out
into
or
sahf
clc
scas
loope
xchg
mov
mov
movsb
mov
pusha
mov
mov
idivl
lods
pop
hlt
std
in
aam
cs
test
and
icebp
cs
push
cmp
xchg
cmp
mov
shll
add
sub
inc
push
pop
fstl
push
stc
aas
insb
ret
mov
scas
adc
call
inc
push
test
sub
inc
pusha
test
cmpsl
test
cld
jg
repz
push
cmc
jnp
xor
leave
cmp
movsb
lret
cmpsl
mov
jl
shlb
mov
mov
push
movsb
rcll
mov
jae
mov
and
cwtl
fbld
or
out
pop
jbe
sub
int
mov
pushf
rcrl
xor
js
xchg
idivl
enter
add
loopne
or
adcb
dec
push
or
lret
in
adc
jno
popa
divl
mov
bound
out
shll
pop
scas
inc
push
das
inc
pop
dec
or
lahf
rclb
or
rcll
ljmp
nop
mov
xchg
shll
cmc
or
movsb
dec
dec
push
mov
pushf
pop
in
fisubrl
loop
and
push
jle
xor
jno
and
jge
push
cmp
pop
add
mov
push
jg
jmp
mov
xchg
and
hlt
lret
adc
xchg
in
push
je
pop
lea
xchg
mov
sub
pop
cwtl
stos
xchg
fiaddl
xchg
loop
push
into
int
mov
pop
mov
int3
cwtl
test
adc
inc
scas
lock
push
sub
gs
je
subb
sub
data16
xor
sbb
in
lds
shrl
adc
pop
mov
pusha
add
pop
dec
aam
pop
inc
mov
jle
shrl
outsl
mov
push
bound
mov
push
push
mov
addr16
xor
jge
leave
push
out
jmp
or
insb
mov
jne
aad
and
fidivl
and
stc
inc
aam
fisttpll
mov
loope
int3
shll
mov
xor
data16
in
lds
push
cwtl
or
jmp
stos
lcall
push
sar
or
jle
mov
cmp
dec
repnz
stos
rcll
inc
sbb
or
xchg
movsbl
in
shll
mov
test
and
jne
stos
and
push
mov
mov
pop
push
fsubs
sub
mov
xchg
iret
and
loopne
mov
loope
ja
push
mov
stos
mov
sbbb
xchg
repz
addr16
aas
sub
pusha
loop
bound
xlat
cmp
xor
push
dec
repnz
push
movb
in
hlt
adc
push
mov
mov
push
push
jl
clc
out
in
push
in
mov
mov
mov
clc
scas
add
xchg
inc
inc
push
pop
pop
jo
mov
inc
dec
lahf
cmpsl
or
loopne
jae
mov
mov
pop
das
cmpsl
cmpsb
or
xchg
test
or
push
add
rcrb
scas
xchg
mov
mov
cmp
ret
outsb
lret
mov
push
pop
pop
mov
daa
sub
aaa
daa
inc
shlb
push
mov
aad
sbb
pop
inc
movsb
int
fistpll
outsb
test
push
insl
sahf
fidivrs
dec
add
push
repnz
cmpsl
popf
lcall
loop
inc
pushf
sti
cmp
cmp
cmpsb
out
pop
mov
xchg
adc
inc
add
int
mov
pop
mov
call
pop
mov
push
push
push
nop
sbb
xchg
jg
ret
loop
or
pop
xchg
xchg
insl
dec
fnstcw
ss
dec
xchg
movsb
and
sti
mov
outsb
in
addb
js
stos
jns
mov
rcr
jg
iret
hlt
mov
outsb
into
jl
sbb
jb
lods
inc
adc
add
stos
mov
sub
mov
sub
mov
aaa
cmp
nop
movsl
sub
stos
pop
je
test
jne
in
sbb
mov
lock
and
inc
pop
test
dec
and
add
test
scas
ret
and
jbe
mov
test
jge
mov
xchg
pop
jne
mov
dec
jl
mov
pop
rclb
fiaddl
xor
mov
pop
jne,pn
xlat
loope
mov
mov
pop
pop
sub
sub
cmp
cmp
movl
push
inc
adc
scas
cmp
or
sti
jae
xor
and
enter
pop
or
pop
std
add
sbb
testb
pop
cmpsb
les
call
lock
pop
add
pop
fs
nop
insb
insl
std
mov
cmc
cli
inc
dec
sub
lcall
push
int
adc
adc
test
adc
mov
mov
sbb
cmc
scas
pop
scas
cli
sbb
insl
loope
lea
sti
out
loopne
test
into
outsl
jns
adc
jge
daa
jno
stos
mov
paddd
shr
imul
arpl
sbb
lods
lret
ss
or
add
cmp
je
xor
mov
enter
ljmp
xchg
pop
cltd
mov
and
in
dec
xor
inc
sbb
sub
sbb
dec
cwtl
rcr
xchg
mov
add
movsb
in
inc
es
dec
mov
js
sbb
or
outsl
jns
setp
xor
push
cmpsl
pop
pop
fwait
and
xor
frstor
aad
outsl
rcll
notb
xchg
imul
lret
stc
mov
cmp
jnp
mov
pop
lret
mov
mov
inc
packuswb
cmpl
push
add
mull
dec
call
test
sub
inc
push
cmp
ret
sub
push
sbb
testb
clc
es
popf
sbb
lcall
sbb
aas
push
nop
bound
popa
xor
loop
sbb
call
xor
ljmp
xlat
test
inc
test
sub
or
scas
dec
in
mov
pusha
int
push
adc
sbb
ror
fcomps
fimuls
popl
mov
push
cmc
jp
lods
xchg
fdivp
mov
mov
inc
sub
mov
xorl
cmp
mov
sbb
iret
out
test
pop
or
dec
mulb
adc
dec
adc
enter
in
push
lods
jae
sub
scas
xchg
inc
outsb
ffree
xor
jecxz
add
ror
cmp
inc
pop
pop
jnp
aaa
xlat
xchg
daa
fwait
jg
dec
inc
jne
sti
cmp
stos
test
push
mov
adc
aas
jns
mov
mov
mov
xchg
xor
cld
push
clc
mov
xor
add
addr16
adc
inc
cmc
or
mov
or
or
into
stc
cmp
pusha
gs
icebp
inc
outsb
jns
sub
pop
dec
xchg
cmpxchg
rorl
notb
jb
insb
push
adc
sti
xchg
ja
clc
or
insb
dec
push
lock
or
mov
cmp
push
or
adc
hlt
dec
inc
fwait
pop
bound
adc
call
nop
jl
push
into
clc
outsl
dec
lods
xchg
mov
cld
imul
je
arpl
mov
mov
push
mov
xor
int3
dec
hlt
dec
dec
or
in
insb
mov
les
loopne
jle
popa
ja
loopne
pop
in
inc
xchg
xchg
jne
popa
xor
push
cwtl
addb
push
in
shll
dec
xchg
inc
push
sub
xor
mov
out
xchg
sub
leave
nop
push
fldcw
test
and
clc
fcmovne
icebp
xchg
pop
enter
and
adc
out
shll
fwait
xchg
sarl
fsubrl
dec
push
ficompl
xlat
call
test
data16
cmpsb
outsl
mov
lods
lods
fnclex
dec
stos
andb
mov
sub
inc
hlt
mov
mov
stos
jmp
push
cmc
xor
sarl
inc
xor
mov
insl
rol
mov
movsb
fst
scas
call
mov
jg
adc
cli
sbb
xor
fstpl
dec
cmpl
jo
push
sti
sub
and
scas
out
inc
fimuls
cmpsl
sub
inc
pop
repz
ret
jne
mov
ret
mov
dec
mov
stos
mov
in
test
stos
ljmp
push
std
lcall
mov
cmpsl
add
push
test
inc
jmp
mov
mov
lcall
std
dec
add
aaa
lcall
or
mov
push
fstpt
test
pop
fs
push
xor
adc
mov
cmpsl
add
adc
bound
adc
cmp
scas
or
xchg
add
jp
mov
push
std
jp
jle
stos
adc
test
pop
imull
fmull
iret
pop
dec
xchg
pop
ss
imul
es
jo
lret
or
mov
call
mov
mov
xchg
jnp
push
sti
mov
mov
test
ljmp
mov
ror
cmp
cmc
ret
pop
rorl
mov
push
pusha
inc
pop
inc
cwtl
mov
push
ljmp
sbb
sub
out
popa
dec
cld
mov
lahf
mov
in
insl
ljmp
test
jmp
adcb
xor
ret
int
and
xchg
loopne
in
insb
pop
out
push
incl
adc
in
mov
cmp
ret
jmp
icebp
xchg
rol
sub
mov
xchg
xchg
xor
call
adc
std
xor
call
mov
xor
sbb
cmp
cmp
mov
sbb
pop
sbb
push
je
mov
ret
pop
jb
in
test
sub
and
cmp
imul
mov
push
popf
fcompl
lret
daa
xchg
add
xor
cmp
adc
mov
out
mov
gs
dec
adc
movl
outsb
and
mov
sbb
sbb
es
lret
adc
das
aaa
dec
add
sti
mov
aas
or
test
mov
shr
repz
out
lds
and
lods
push
test
push
jo
mov
mov
ss
loopne
cltd
pop
arpl
inc
cmp
ret
push
test
or
enter
pop
int
lds
inc
ret
fs
push
jne
or
rcrl
cmp
call
sub
aad
iret
movsb
mov
fldt
clc
mov
fisubl
repnz
outsl
into
jbe
inc
mov
mov
mov
or
mov
pop
das
and
inc
jno
pop
mov
stos
rcrl
push
add
mov
cltd
scas
push
fimuls
shl
cmc
push
push
xchg
lods
out
sbb
outsl
fsubl
jle
pop
xor
jl
lea
sahf
ljmp
sub
das
dec
cld
mov
imul
mov
and
push
mov
into
mov
cmp
fldl
outsl
in
test
into
dec
inc
push
mov
jmp
aam
xor
sbb
cmp
adc
inc
in
hlt
mov
adc
mov
jnp
arpl
push
jne
rolb
sbb
push
push
fs
arpl
test
add
jmp
add
mov
fxch
ret
dec
push
pop
xor
lods
and
fs
xor
enter
pop
stos
leave
outsl
jo
ja
cwtl
nop
jmp
jmp
push
dec
sbb
sub
adc
int
push
or
in
dec
adc
push
mov
std
cmpsl
stos
mov
mov
scas
pop
push
push
cld
add
and
jae
sbb
xchg
popa
xor
sub
jecxz
and
out
iret
adc
jno
xlat
lea
sbb
bound
pusha
sti
mov
jb
inc
sub
or
fs
stos
movsb
fs
mov
xchg
mov
fsts
sahf
mov
or
mov
dec
sub
inc
out
enter
mov
outsl
jae
xor
sub
push
lret
stos
je
outsl
adc
xor
pop
push
js
jnp
push
add
lock
outsl
orl
scas
jae
cmp
inc
mov
lods
push
dec
push
ret
mov
push
dec
loopew
int
stc
mulb
and
lds
sub
or
jb
fnstsw
pop
xor
mov
leave
xor
ds
sbbl
adc
imul
push
inc
testb
aaa
mov
sbb
pop
mov
mov
fstps
xor
inc
rol
mov
xor
js
mulb
test
and
int3
inc
pop
inc
pop
dec
out
push
arpl
jbe
sti
aam
mov
shl
in
shrb
rcrl
pop
mov
lds
in
lds
push
in
push
cmp
cmp
call
dec
mov
mov
push
cs
inc
xor
push
adc
test
enter
sub
xchg
mov
bound
in
jg
cmp
fdiv
lret
sub
cmpsb
loop
lret
leave
inc
inc
clc
les
negb
clc
pop
push
pop
popa
and
sub
fcoms
inc
inc
in
mov
ss
imul
pop
cmpsb
std
cltd
out
xor
xor
push
loop
pop
pusha
shl
pop
cmp
xor
aas
cltd
sbb
push
cltd
inc
jg
mov
pop
inc
push
test
lods
push
fisubrl
sbb
jmp
and
cmp
rcl
or
lahf
pop
lds
les
stc
mov
add
scas
cmp
negb
cwtl
jmp
fcoms
inc
dec
int3
inc
push
xchg
inc
imul
cmp
jecxz
ret
mov
sbb
sbb
test
sahf
repz
xchg
orb
fdivl
push
fcmovb
dec
xchg
fsubs
inc
cmpsl
or
shrl
in
leave
push
pop
push
xchg
xor
movsb
dec
jmp
adc
dec
pushf
lea
pop
loopne
jns
mov
push
jno
adc
xchg
mov
pop
xchg
mov
sub
mov
xor
clc
das
cmpsl
fisttpl
inc
push
push
ljmp
lods
icebp
imul
xchg
test
out
movsl
push
cmp
sub
add
mov
movsl
add
add
lret
aam
mov
and
mov
push
imul
xchg
mov
fcomps
pop
bnd
cmp
out
lret
imul
stos
daa
cmp
cmp
mov
xchg
cmp
jecxz
inc
inc
test
sub
sub
roll
icebp
adc
xor
mov
into
xorl
or
loopne
mov
adc
jle
and
mov
dec
test
fwait
cmpsb
mov
popf
movsl
jmp
xchg
adc
push
jnp
mov
clc
cmp
xor
push
add
adc
inc
xchg
pop
hlt
jmp
and
cwtl
push
pop
das
sub
sarl
les
add
cmpsb
sub
push
repnz
push
or
push
cmpsl
adc
cmpsb
xor
cmp
push
shrd
pop
xor
fcoml
mov
imul
cmp
mov
lcall
mov
sbb
mov
mov
push
cmp
stos
std
and
stc
and
and
sbb
jnp
loopne
xlat
std
aas
mov
fwait
cmp
and
inc
pop
cmc
pop
sub
xorl
dec
rep
xchg
jmp
leave
push
jb
notl
enter
xchg
ds
cmp
or
in
test
sub
lock
test
pop
jmp
mov
push
cld
push
fisubrl
aas
out
shlb
pop
stos
push
and
mov
jle
imul
or
xchg
xadd
adc
stos
iret
es
pop
or
and
mov
ret
add
push
jbe
cmp
insb
push
xlat
test
mov
xchg
inc
std
testl
and
mov
push
test
pop
pop
mov
loopne
imul
sbb
adc
cmp
push
inc
das
into
sbb
push
pop
inc
addr16
xchg
cli
cmpsb
jb
mov
jl
jg
mov
inc
mov
shlb
xchg
mov
rolb
jno
mov
sbb
xor
mov
dec
dec
inc
ja
jae
lea
popa
xor
out
add
repnz
cmp
shl
push
cmp
orl
ljmp
nop
xor
adc
inc
out
loope
pushf
ja
out
cltd
adc
and
sahf
shll
pop
dec
dec
ss
mov
sbb
push
cmp
mov
hlt
xor
cmpsb
pusha
mov
or
aad
insl
in
in
aam
push
mov
or
sub
shrl
loope
pop
fs
or
jmp
sub
in
ljmp
cmp
insb
push
aas
and
lret
in
jo
cmp
xchg
test
lret
cmp
shll
aam
sti
fistl
dec
cltd
shll
imul
dec
xchg
xchg
sbb
push
pop
push
das
out
lret
mov
int3
lock
push
andb
pop
or
jne
dec
fdivrl
rorl
and
lret
dec
adcb
mov
lock
test
ret
jo
jne
or
adc
mov
icebp
and
or
push
xor
adc
imul
fwait
mov
or
sub
or
mov
cmp
xor
pop
adc
out
cmpl
loope
lock
jmp
ja
lds
pusha
addr16
fwait
arpl
sub
imul
iret
rcll
repnz
inc
test
jnp
mov
xor
or
xlat
loop
pop
ret
push
subl
mov
stos
pop
pcmpeqw
and
cmp
jne
xchg
std
cwtl
xchg
repz
jge
out
pop
jns
xchg
push
pop
add
jecxz
push
call
pop
std
mov
cwtl
arpl
mov
fs
fisubs
lods
mov
xchg
inc
stc
aas
push
lods
xchg
dec
ja
cli
mov
repnz
sub
push
push
in
lods
stos
jge
sbb
addr16
mov
pop
add
outsb
aam
clc
cwtl
pop
test
xchg
pop
dec
jns
lret
xor
xchg
dec
sarb
insl
sbb
push
int3
adc
clc
cmp
fcomip
sahf
xchg
pop
or
jns
imul
push
jbe
fidivs
stc
xor
fcomps
dec
incl
mov
xchg
fldt
mov
cmp
lods
jns
lea
mov
iret
dec
adc
aad
pushf
sahf
nop
mov
int
xlat
fsubs
adc
icebp
fsubs
push
mov
in
ret
outsl
test
jg
xor
cmp
ret
xchg
and
xor
dec
push
inc
nop
adc
push
fnstsw
sbb
mov
push
ja
push
int3
ret
cmc
sub
fwait
cs
jae
frstor
jmp
clc
jne
and
mov
mov
push
jge
sahf
loopne
out
mov
subb
repnz
inc
add
iret
aas
cmp
lock
jns
out
sub
pushf
rcrb
inc
insl
es
xor
cmc
fucomi
lock
jge
icebp
ret
insl
cmpsb
mov
dec
movsb
loope
ss
movl
or
jae
push
mov
in
enter
es
pop
inc
shrl
test
dec
cmp
imul
push
add
shrl
js
fbstp
mov
jbe
xor
ljmp
push
pop
or
jb
sub
lcall
dec
jb
dec
icebp
cld
mov
lret
icebp
jle
and
mov
outsl
mov
and
repnz
push
mov
sub
jge
xchg
xlat
pop
jle
sahf
repz
fldz
cmp
inc
fdivrl
xchg
lds
xchg
mov
cmp
pop
inc
pusha
mov
pop
inc
insl
sbb
add
inc
ss
sbb
fmul
insb
ret
xchg
call
mov
sub
in
jno
jb
jp
dec
mov
shlb
outsl
es
add
cld
push
sbb
xchg
add
mov
or
cltd
aad
add
jle
push
sub
mov
sbb
xchg
mov
popf
sub
pusha
jp
lods
sahf
mov
mov
and
ja
dec
pop
jecxz
lcall
push
pop
sti
pop
or
std
and
shr
inc
jp
or
dec
xor
inc
sub
or
mov
cs
sbb
push
or
pop
int
pop
lcall
subb
ret
call
iret
xchg
repnz
and
jae
mov
mov
test
aad
es
xor
xchg
ret
cli
lret
and
call
mov
xchg
outsl
lahf
push
jno
jp
mov
loop
pop
add
test
mov
pusha
ja
push
mov
inc
in
xor
pop
xchg
sub
test
fldt
sbb
fld1
xorl
ja
push
or
cli
xchg
into
xchg
jmp
xor
loopne
mov
out
not
and
push
loopne
or
movsb
outsl
and
xchg
stc
add
cmpsb
in
xchg
jle
jb
das
fmul
inc
xchg
mov
int3
or
mov
fsubl
stc
jle
jno
xlat
push
arpl
push
cs
cmp
outsl
push
pop
loope
nop
jae
sub
push
inc
shll
mov
adc
or
or
mov
mov
xlat
push
daa
inc
mov
cwtl
repnz
pop
pushf
mov
das
icebp
ss
loopne
stos
mov
push
xor
mov
jle
pop
adc
adc
and
sbb
negl
sarl
and
out
pop
cltd
xor
icebp
leave
xchg
add
movsb
or
dec
inc
or
sbb
mov
in
pop
lcall
fimull
jge
cmp
andl
sbb
std
cli
xor
addl
int3
orb
xor
ret
sbb
and
in
cmpsb
jp
call
rcr
pop
fxch
or
and
addr16
in
push
and
adc
rcll
cmp
sahf
xchg
mov
push
cmc
ss
lock
es
fs
push
cmp
or
bndldx
fisttps
fcoml
popf
cmp
xor
inc
add
and
fs
inc
pop
les
imull
leave
fistps
xor
jle
push
shrb
clc
mov
sub
mov
xor
es
xor
mov
ficoms
sbb
xchg
jle
cmp
xchg
outsb
mov
fisubrl
cmp
mov
dec
loop
push
mov
mov
jle
cmp
dec
add
ret
in
inc
dec
jne
inc
sbb
xor
xor
sub
cmp
add
jae
inc
jp
data16
repnz
les
xor
popf
pop
pop
push
xor
xchg
and
pop
and
jmp
cmpsl
mov
jbe
jecxz
mov
call
in
inc
out
loope
jle
cmp
push
repnz
int
popa
js
pop
jmp
cmp
test
imul
addr16
in
std
nop
js
pop
inc
dec
mov
movsb
mov
arpl
mov
xchg
jb
stos
aam
hlt
fsubs
popa
jb
push
in
jge
cmpsl
push
jle
dec
cli
inc
jns
fidivl
push
sbb
arpl
inc
div
mov
sbb
clc
enter
arpl
xorb
sti
jns
jmp
sarl
mov
gs
sub
cli
or
xor
and
and
stos
push
push
ljmp
test
sbb
aam
lea
add
mov
xchg
in
aad
aaa
xchg
lea
in
mov
popf
les
pop
out
fs
or
int
or
jo
sbbl
mov
add
mov
incb
mov
xchg
popa
lock
dec
cmp
insl
adc
fists
sbb
push
loope
pushf
sbbb
push
xor
into
pop
arpl
pop
std
sbb
xchg
scas
cmp
dec
fwait
mov
or
inc
jne
jl
sbbb
adc
inc
je
rcrb
xchg
lahf
test
cmp
rorl
push
sbb
lahf
adcl
and
repnz
repz
adc
pop
neg
pop
lea
les
pop
int3
clc
xchg
shl
aam
aaa
cmc
sub
jne
nop
mov
fstpt
aas
cli
mov
aaa
gs
nop
and
mov
icebp
arpl
push
or
test
pop
test
mov
rcrb
sbbb
push
inc
mov
ret
sti
stos
stos
inc
fcoml
cmpsl
adc
mov
sarb
add
adc
mov
lock
mov
in
mov
xchg
xlat
insb
cmc
jmp
push
lods
sbb
les
jp
jns
testb
add
dec
and
insb
cmp
fsubrs
cmpsl
mov
mov
cmp
and
mov
sbb
mov
or
xor
xor
imul
ss
js
dec
test
pop
imul
rclb
mov
ror
je
dec
pushl
jp
or
stos
cwtl
and
add
pop
nop
fisttpl
jecxz
repnz
movsb
lods
push
fistpl
cmpsb
ds
ret
cmpsb
shll
js
cld
push
mov
add
add
push
lcall
lea
mov
mov
aam
inc
pop
hlt
inc
ds
inc
pop
loop
mov
lcall
jo
xor
jge
xchg
xchg
cmpsb
lret
leave
outsl
and
mov
jle
and
sub
out
mov
sub
dec
jmp
push
sbb
mov
lret
mov
mov
adc
mov
pop
jb
sahf
mov
clc
inc
repz
jo
out
pop
pop
pop
cmpsb
imul
xchg
repz
fdivr
add
ljmp
hlt
int3
out
or
jb
sub
shrb
in
pop
into
xor
lods
fiadds
fnstcw
fcomip
outsl
add
push
scas
adc
loope
enter
mov
rorb
xor
movsl
and
jns
je
outsb
pop
lods
mov
fidivs
mov
add
shlw
mov
inc
pop
xor
mov
pop
pop
mov
mov
mov
push
cmp
fs
test
add
aam
movsb
jge
mov
inc
ds
out
xchg
add
fmul
notl
int3
fmulp
sbb
xor
ret
xchg
clc
sbb
mov
jne
mov
mov
fcomps
cld
aam
xor
add
mov
fwait
xor
cli
xor
add
inc
and
idivb
adc
pop
mov
push
sahf
push
scas
lock
loopne
dec
sub
lock
cmp
scas
xchg
pushf
rolb
and
cmpsl
or
sti
cmp
insb
mov
pop
xchg
sub
xchg
dec
in
sub
leave
outsl
cmp
icebp
shrl
push
jg
or
adc
fnstcw
popf
push
inc
loopne
dec
negl
xchg
ret
std
xor
xor
outsb
xchg
add
hlt
pop
testb
fwait
subl
imul
in
stc
sbbl
mov
sbb
pop
jne
pop
fists
and
in
inc
mov
sti
cltd
fcoml
add
jle
adc
pop
cltd
adc
adc
out
cmp
outsl
gs
dec
call
dec
stos
xor
adc
and
xor
sbb
jo
cmc
add
cli
fs
pop
xor
adc
pusha
pop
das
aam
jmp
lods
or
incl
adc
xchg
hlt
pusha
and
insb
je
push
and
ficoml
testb
or
and
in
push
mov
sarl
mov
push
mov
test
pop
loop
xor
adc
push
adc
inc
dec
adc
iret
jmp
lahf
add
leave
mov
inc
mov
rcl
out
pop
push
sti
fs
inc
inc
cmpsb
sub
push
leave
sbbl
test
fstps
push
pop
xchg
push
push
and
dec
outsl
xchg
mov
lods
loope
mov
add
mov
scas
cmc
lahf
icebp
lea
clc
sbb
jb
movsb
insl
jae
lock
jl
cmp
testb
lar
scas
jle
mov
add
ljmp
cmpb
in
xchg
pop
mov
ds
rcrl
jnp
aam
sbb
and
push
mov
push
mov
in
stos
repz
scas
adc
sbb
mov
movsb
out
cmp
ficoml
mov
add
pop
test
jmp
mov
cmpsb
push
popl
mov
mov
fnstcw
mov
xor
xor
mov
jo
popa
mov
add
scas
push
sub
cmp
aas
lcall
movsl
fcoml
pushf
add
adc
jb
mov
aas
mov
popl
jl
aad
test
lret
lods
jle
iret
jge
pusha
or
rorl
pop
pop
pop
jmp
sub
dec
adc
lods
das
dec
movsl
adc
dec
fmul
loop
movsb
loop
xor
jge
add
popa
or
mov
imul
mov
aas
add
mov
out
jecxz
les
scas
inc
cwtl
mov
jl
sbb
lea
adcb
pop
loope
jecxz
sarl
mov
dec
pop
cmpsl
cmp
sub
adc
lods
jp
xchg
pushf
or
pop
jl
lods
xor
rcll
inc
cmp
cmp
xchg
jecxz
mov
jno
addr16
sbb
jno
loop
into
xchg
jg
jp
outsl
cmp
xchg
or
mov
xor
dec
fiadds
out
rcrl
sub
cmpb
mov
test
jp
jne
imul
cli
enter
jl
enter
lret
jb
insb
cmp
pop
pop
jae
mov
pusha
lahf
sti
push
shrb
ljmp
daa
inc
ds
sub
or
mov
jb
xchg
hlt
out
pushf
inc
test
jg
push
loop
add
xchg
xchg
xor
mov
mov
cwtl
jg
xchg
push
mov
xchg
jns
pop
sub
sbb
lcall
shll
sub
mov
in
pushf
fcoml
dec
mov
xchg
xor
push
lret
neg
lret
sub
out
push
test
mov
addr16
in
int3
xchg
add
outsl
imul
mov
pop
pusha
loop
sub
pop
enter
cmpb
lods
dec
sahf
inc
lahf
std
dec
xchg
in
add
shr
jle
clc
xor
repz
jmp
lret
sub
inc
pop
mov
push
jge
les
lret
and
out
sti
jmp
push
inc
inc
or
movsb
loope
out
jle
out
inc
int3
mov
scas
jns
inc
lods
cmp
out
mov
xlat
jge
xchg
outsl
daa
leave
inc
lret
push
or
cmpsb
js
mov
adc
mov
sti
pop
cmpsb
shl
outsb
xchg
inc
pop
lret
sub
rcll
sub
mov
jg
aas
hlt
xchg
hlt
in
pop
mov
sahf
push
daa
dec
jo
mov
ljmp
sti
jmp
out
fwait
push
icebp
mov
loope
or
int
cmp
xchg
or
mov
imul
inc
shll
mov
ljmp
add
cli
sub
sub
mov
jne
cltd
loopne
movsb
mov
sub
mov
pop
mov
mov
jno
xor
popf
mov
sarb
stos
mov
dec
bound
test
sbb
fdivrl
add
or
adc
and
mov
push
pop
sub
add
std
and
pop
das
xchg
movsl
jecxz
jl
xchg
dec
jno
xchg
mov
adc
lds
mov
inc
pop
jb
pop
adc
roll
mov
push
out
inc
addr16
outsb
stc
shrd
and
push
stc
mov
sub
jno
in
or
sti
jl
xchg
int
push
mov
pop
jle,pt
push
lahf
adc
sub
jmp
test
mov
xor
outsb
xchg
mov
xor
inc
pusha
lahf
xor
mov
scas
outsl
movsl
dec
js
and
stos
mov
sub
lds
loopne
cmc
faddl
pop
adc
pusha
into
loope
mov
push
leave
or
xchg
inc
mov
scas
sbb
stos
iret
dec
shrb
ja
mov
push
push
dec
lock
test
hlt
mov
pop
fdiv
push
sbb
push
cmp
mov
sbb
jbe
inc
and
aad
pop
icebp
pop
mov
std
sbb
aas
xchg
mov
sub
popf
add
mov
inc
pushf
and
icebp
push
cmp
xchg
leave
insb
fcmovb
inc
and
and
and
movsl
std
into
add
imul
mov
cmp
pop
loop
es
ds
movsl
lods
icebp
mov
test
cli
in
and
stos
xor
aas
ljmp
cmpsb
sub
mov
pop
jp
or
jmp
inc
mov
test
shl
jb
push
stos
mov
jge
cmp
pop
test
movb
adc
pop
push
out
cmpsl
push
bound
xor
andb
cmp
mov
cmpsb
fcompl
pop
xchg
mov
push
aam
icebp
mov
jecxz
mov
dec
inc
xor
outsb
jb
and
sub
push
jl
pusha
push
jmp
lahf
adc
scas
add
sbb
pusha
shrb
idivb
aam
xchg
push
fprem
imul
jg
inc
shlb
jns
int
leave
pop
jnp
negb
add
fsubr
and
gs
icebp
repz
out
xchg
sarl
imull
out
inc
xorl
hlt
adc
sub
sub
repz
xor
leave
call
pop
hlt
ljmp
dec
sbb
stos
in
pop
inc
mov
or
push
subl
cmp
xor
je
out
lea
mov
mov
lock
sbb
mov
pusha
xchg
into
hlt
movsb
lea
test
jbe
xchg
in
jae
pop
fidivl
sbb
sbb
dec
sub
mov
dec
fwait
mov
iret
push
add
fisubs
or
xchg
lret
ljmp
jo
ss
arpl
gs
out
mov
stos
cmp
push
mov
jno
and
jno
xchg
mov
adc
jns
mov
or
and
push
popl
cmp
push
sahf
je
or
ret
mov
sbb
test
mov
repnz
mov
and
and
cmc
jecxz
pusha
imul
push
sub
sbb
sarb
inc
pop
stos
cmp
mov
test
movsb
in
xchg
sub
jns
hlt
test
push
into
cmp
pop
fsubrl
aam
jmp
mov
jnp
nop
aam
jb
jmp
push
adc
jo
out
sbb
gs
or
ja
out
out
into
icebp
mov
scas
andb
cwtl
lret
add
cmc
push
cltd
cmpsb
arpl
and
jns
out
fs
push
dec
mov
ret
or
cltd
jae
dec
add
js
xchg
das
repnz
and
push
mov
add
daa
and
jo
iret
repz
cmp
mov
sahf
loopne
mov
push
sbb
xor
dec
push
push
shll
xchg
adc
fbld
cmp
in
arpl
cwtl
outsb
push
inc
mov
cmp
dec
xchg
aam
sbb
clc
nop
popa
test
hlt
sbb
mov
dec
push
popa
cmp
dec
nop
pop
jne
dec
out
push
int
adc
inc
gs
negl
xor
and
pop
repz
or
mov
subb
aad
push
in
loope
pusha
inc
xchg
mov
sub
push
les
ds
xor
push
out
xor
or
mov
int
bound
in
data16
mov
mov
xor
out
int3
repnz
cltd
dec
pushf
push
enter
sub
adc
aam
iret
cmpsl
shlb
mov
xchg
shll
add
and
sbb
movsl
mov
imul
out
loop
push
mov
sub
cmp
scas
insl
jle
inc
std
and
aam
and
mov
pusha
push
ficompl
lock
cmp
dec
xlat
mov
shr
icebp
mov
mov
xor
int
std
xor
outsb
aad
les
fwait
ja
fdivrl
dec
jecxz
push
ret
jmp
leave
outsb
mov
jo
dec
xchg
cld
xchg
jb
dec
mov
and
mov
xor
jp
mov
mov
stos
cmp
pop
mov
call
pop
dec
lds
mov
insb
pop
cmpsl
cwtl
pop
or
mov
or
bound
push
xchg
xor
xor
and
testb
jnp
jl
fidivrl
mov
sti
ja
popf
shrb
mov
adc
outsb
xor
cmp
mov
call
mov
jg
push
sahf
push
aas
cmp
in
je
jle
nop
push
imul
cmp
cli
es
cltd
jle
das
cld
mov
in
jge
inc
flds
outsb
andb
repz
cmp
sbbb
lret
fnstenv
out
cmp
xlat
or
xor
add
andb
pop
out
in
adc
lock
rcll
xchg
cmp
int
dec
shlb
inc
sub
scas
cli
jae
out
jg
pusha
mov
mov
sbb
cmp
icebp
test
fnstcw
mov
ja
mov
sbb
stos
jns
sub
in
pop
nop
mov
xchg
push
mov
jp
inc
lock
addr16
push
push
inc
stos
in
fwait
sub
sub
cmp
xor
sub
ret
pop
sahf
mov
ror
jb
call
in
add
sub
or
add
mov
xchg
into
lock
xchg
imul
pop
aaa
sub
inc
decl
not
outsl
mov
mov
jbe
addr16
push
add
mov
sub
mov
dec
push
xchg
pushf
or
dec
xor
dec
imul
jbe
movsb
or
xchg
lods
data16
scas
xchg
sub
rcrl
jne
outsl
aam
pop
imul
je
mov
dec
cmpsl
xchg
test
outsb
int
inc
test
jle
ret
mov
popf
mov
insb
std
mov
xor
movsb
aas
loopne
sbb
mov
xor
bound
jae
aas
stc
rolb
push
mov
mov
mov
pop
mov
pop
mov
jl
icebp
pop
pop
mov
hlt
scas
sbb
jns
adc
sbb
and
or
add
imul
push
mov
loope
outsl
inc
dec
sub
xchg
jb
cmp
pop
push
jl
mov
or
jl
fwait
pop
cmp
leave
rcll
cmp
pop
mov
arpl
inc
stos
mov
push
mov
jg
aas
in
ss
cmpl
outsl
cmp
or
aaa
mov
gs
fnstenv
sbb
dec
xchg
cmpsb
mov
inc
sub
xchg
enter
jne
test
shrb
cmc
dec
rol
xchg
pop
loop
jge
adc
test
int3
adc
cmp
xchg
adc
jne
es
mov
lret
pushf
adc
lods
loopne
mov
and
in
imul
imul
mov
cmp
cwtl
dec
push
sub
idivb
inc
sarl
sbb
call
jmp
out
sbb
daa
imul
out
sub
or
notl
bound
dec
xorb
xchg
fildll
adc
and
lret
or
subb
ret
and
xor
sbb
ret
jg
movsl
mov
fildl
xchg
jne
pop
xlat
pushf
dec
ja
add
sbb
or
cld
sub
inc
fs
jle
xor
test
jge
sbb
pop
lahf
cmp
sbb
dec
aam
mov
cld
pop
fists
pop
iret
fsubs
dec
fcmovbe
fdivr
pop
std
inc
movsl
pop
mov
jmp
inc
inc
jmp
les
fildll
cmp
repz
xlat
dec
fisttpl
xor
xchg
fstl
fistl
inc
dec
sarl
jne
lds
inc
jns
lds
scas
cltd
sbb
adc
mov
pop
repz
add
mov
mov
mov
test
int3
and
shll
es
dec
jns
pop
and
jle
in
or
movb
jnp
les
pop
mov
push
sbb
scas
rorb
pop
cmp
andb
or
scas
loopne
repz
repz
jecxz
addb
adc
ss
jmp
loopne
in
jne
les
pop
mov
and
push
sti
lods
das
pop
push
mov
cli
cmpsl
or
call
sbb
mov
push
jmp
mov
int3
clc
mov
lods
jb
ss
sti
popl
je
sbb
mov
fistpl
sahf
xor
nop
arpl
push
test
mov
call
dec
push
sahf
test
les
pop
inc
enter
add
jo
in
sub
push
nop
xchg
inc
nop
sub
dec
add
mov
hlt
and
or
pop
mov
dec
sub
out
inc
sbb
fstp
jns
xor
popf
hlt
test
inc
push
out
add
mov
out
mov
xchg
and
scas
js
mov
cmp
inc
push
mov
fisttpl
xor
dec
mov
leave
lret
movsl
dec
dec
into
je
insb
mov
or
ficoms
push
in
mov
jb
adc
in
pop
mov
push
imul
scas
sbb
sub
cs
dec
insl
jmp
push
fdivs
xor
aad
jge
in
lock
jle
aam
xchg
aad
pop
mov
pop
push
adc
jne
lds
add
imul
ds
push
jmp
loop
out
out
sbb
push
mov
push
lret
js
cmpsb
cmp
mov
stos
inc
push
mov
les
and
xor
jmp
cs
lods
mov
dec
mov
mov
cli
pushf
cmp
out
rcll
sbbb
jno
push
dec
in
int3
sbb
jle
mov
push
xchg
adc
push
mov
test
inc
call
lret
pop
mov
dec
les
clc
cmp
push
loopne
and
int
arpl
or
push
out
sbb
pop
push
shrb
rorl
push
xchg
arpl
mov
push
mov
aaa
pop
ja
mov
fsubrs
lcall
lret
dec
cmp
mov
add
ljmp
dec
push
jne
testb
outsl
lock
das
pop
mov
jge
add
lret
mov
inc
pop
cmpsl
inc
aas
dec
mov
in
adcl
out
inc
test
xchg
mov
cmp
fisttps
pop
loop
adc
xchg
loope
xor
add
sub
adc
xor
or
jecxz
cltd
cmpsl
aaa
mov
outsl
dec
test
fsubp
out
mov
mov
and
jle
test
mov
dec
xlat
outsb
outsb
ret
aam
shlb
push
out
call
mov
aad
dec
add
pop
arpl
jnp
mov
lock
push
icebp
jnp
ret
xchg
jne
mov
aam
out
jp
repnz
sub
lcall
es
add
cld
stc
push
js
xor
cmp
pop
sbb
std
js
in
addr16
insl
mov
cmc
xchg
pop
dec
inc
mov
xchg
loope
push
xorb
pop
test
cmp
aas
test
fisubrl
pusha
imul
imul
xchg
add
inc
push
xor
dec
popa
xor
pop
je
mov
out
fs
add
ja
mov
pusha
xchg
js
stos
push
add
adc
fwait
lds
dec
mov
loope
push
ss
fiadds
das
aad
pop
push
rcll
xor
push
pop
int
scas
lret
push
popf
mov
inc
aad
adcb
cmpsb
stos
xchg
adc
ret
jb
add
xchg
xor
inc
mov
aaa
idiv
cmp
idivl
jl
jne
sbb
jno
fidivl
les
outsl
inc
sub
mov
in
pop
lds
test
shrl
inc
inc
push
sahf
cmp
sbb
cmp
cmp
pop
pop
push
mov
mov
sbb
jge
dec
inc
call
outsb
fisubrs
push
aas
xor
xchg
dec
clc
sub
push
lods
cli
xchg
inc
test
scas
data16
and
mov
movsl
cmp
sbb
inc
jecxz
fnstsw
sbb
cltd
pop
movsl
out
cmp
popa
xchg
imul
and
aaa
pushf
testb
or
dec
rorl
jb
lea
xchg
nop
imul
and
add
jae
or
sub
fisubrs
jmp
cmp
mov
sbb
lds
pop
jle
jle
inc
add
sub
jl
lods
jl
add
mov
mov
and
cmp
imul
sbb
cmp
push
clc
push
or
push
mov
ret
mov
pop
jb
nop
xor
xor
jbe
dec
leave
xchg
ret
jg
dec
and
mov
push
jo
mov
call
stos
cmp
sub
repz
rclb
dec
mov
jg
mov
pusha
xchg
inc
aas
loop
pushf
loopne
push
fs
inc
push
mov
jns
pop
sbb
push
imulb
sbb
push
sbb
mov
add
pop
xor
lds
push
out
and
aas
xchg
and
sbb
mov
mov
cmp
sbb
push
ret
push
sbb
mov
dec
loop
pop
js
push
xorb
sub
lods
imul
movntq
in
and
jb
shrl
sub
sarb
mov
xchg
je
shlb
add
and
lret
mov
pop
aaa
mov
sub
jmp
fs
add
dec
cltd
mov
sbb
test
mov
pushl
mov
add
xlat
add
xchg
sub
add
cmp
mov
movsl
push
fs
je
je
aad
cmpsb
jns
imul
clc
scas
xor
lods
add
out
adc
int
cwtl
push
inc
pop
jae
push
xor
mov
leave
push
add
pop
jle
enter
push
into
rorl
and
js
movsl
and
push
jns
pop
adc
adc
xchg
dec
mov
shrb
mov
rclb
aaa
popl
mov
xor
xchg
decb
test
push
adc
rclb
lahf
mov
aam
push
xchg
mov
mov
mov
sub
adc
test
imul
mov
xor
adc
bound
jno
rorl
sti
repnz
mov
leave
mov
pop
mov
into
inc
mov
jne
pop
mov
imul
popa
sti
jle,pn
pop
vmovapd
and
dec
repnz
jne
insl
pop
repz
stos
js
adc
dec
lods
shr
int3
aam
mov
and
sub
loop
pop
pop
mov
sub
popa
sub
pusha
push
xchg
push
sbb
and
mov
push
sti
pop
mov
mov
data16
adc
push
inc
pop
pop
icebp
mov
ja
pop
lahf
adc
sbb
sub
sub
jnp
jmp
roll
dec
adc
mov
lahf
fmuls
inc
call
fimull
mov
data16
dec
push
inc
dec
lock
push
loopne
adc
cld
adc
xchg
negl
and
jb
movsb
jnp
testl
gs
mov
arpl
loop
mov
jno
faddl
lahf
sbb
loop
stos
xor
jmp
push
lds
mov
mov
jmp
and
jmp
sub
add
sbbl
jmp
rcl
xchg
push
pushf
mov
lods
xchg
or
mov
adc
adc
mov
sub
and
push
rcrl
sub
or
pop
xchg
out
inc
mov
and
test
ret
pop
mov
loopne
ljmp
and
fists
sbb
das
pushf
xor
cmpb
leave
int
or
pushf
jl
jo
inc
imul
sahf
js
pop
push
adc
lods
dec
jo
add
pop
and
stos
sahf
mov
and
jae
mov
sub
sub
loope
lahf
mov
movsl
or
daa
pop
ds
inc
in
mov
scas
dec
xor
mov
pop
lock
pop
sbb
rorb
push
adc
inc
jg
push
xlat
test
add
int
jae
scas
cmp
sarb
lcall
ss
or
dec
stos
ret
inc
jmp
scas
mov
out
sub
adc
lcall
lds
call
fdivr
jmp
leave
sbb
xchg
into
mov
fwait
stc
jle
add
inc
out
dec
fisttps
mov
or
xor
mov
or
mov
cld
add
neg
scas
fistpll
ds
into
mov
test
sub
mov
and
or
inc
imul
and
jl
mov
inc
lret
jbe
stc
or
push
movsl
xchg
mov
movsl
push
jnp
dec
mov
aas
push
mov
push
push
push
lds
fcoml
outsb
repnz
xorb
repnz
jns
into
dec
inc
dec
imul
sarb
insl
xchg
xor
jnp
sbb
call
aad
dec
or
out
jl
cltd
cmc
or
sbb
arpl
sbb
push
mov
cmp
mov
fldln2
jno
sub
cwtl
loop
ljmp
adc
mov
cmova
je
sbb
mov
outsl
outsl
pop
or
pop
dec
aaa
xor
faddl
into
sti
sub
mov
daa
int
dec
xor
push
mulb
loop
mov
push
testb
inc
lea
mov
pop
and
adc
sbb
mov
cmpl
mov
add
shl
es
add
lods
rcll
aad
cld
imul
aaa
adc
ss
shld
xchg
je
or
lahf
sub
mov
je
nop
sub
dec
and
cwtl
cmp
adc
scas
repz
jne
into
push
aad
mov
aam
jmp
es
fcompl
or
sahf
shl
push
push
fs
daa
xlat
iret
mov
int3
pop
pop
or
mov
push
xchg
iret
sarl
push
add
mov
mov
fwait
sub
mov
mov
scas
push
mov
ljmp
ja
xlat
insl
arpl
loope
jb
or
dec
jo
xchg
push
and
arpl
pop
add
and
sub
loope
cltd
mov
out
out
outsl
pop
push
rcll
mov
dec
jp
rol
aam
xor
imul
fiadds
mov
adc
aaa
sbb
adc
xchg
lds
pop
imul
pop
cmc
inc
adc
lret
or
pop
jns
popf
jecxz
inc
sti
rorb
jle
pusha
jo
xchg
add
mov
in
out
inc
test
jne
popa
dec
test
sahf
stos
sbb
xchg
out
pop
and
mov
push
mov
daa
sub
cmp
cmpsb
push
push
pop
pop
mov
into
loope
mov
push
fmulp
mov
push
push
mov
loope
cli
stos
data16
adc
push
stos
shrl
sub
jne
jns
test
cwtl
int3
push
mov
dec
adc
in
push
aad
push
push
fs
push
or
mov
ss
cmpsl
dec
mov
mov
arpl
mov
out
push
dec
xchg
addr16
imul
movsb
aam
push
dec
orl
and
mov
inc
mov
and
fs
jmp
jp
mov
mov
mov
xor
enter
xchg
jo
test
push
lds
pop
pop
xor
jp
daa
or
ds
out
cmp
or
lea
lods
xor
repnz
ljmp
mov
sbb
fistps
xor
daa
in
test
dec
mov
repnz
movsl
dec
or
push
nop
inc
or
sub
cmp
push
jno
push
push
push
and
push
cld
leave
lock
loopne
clc
gs
mov
lea
fisubl
xchg
lcall
push
sub
or
mov
push
sub
mov
int3
mov
jle
xchg
add
add
cmp
and
gs
mov
es
jmp
push
mov
mov
mov
fisubrl
jge
dec
cld
sub
sbb
test
scas
leave
rcr
test
ret
or
sub
xor
inc
xlat
decb
jae
pop
movsl
xor
cmpsb
mov
xchg
out
lret
push
es
xchg
cmc
sbb
ficomps
push
out
and
sbb
pop
or
fistps
aam
sbb
jle
inc
xor
jg
mov
sub
pusha
add
movsl
push
add
xor
test
ja
pop
into
and
mov
stc
mov
adcl
int3
out
pop
or
cld
je
push
push
jg
dec
out
out
hlt
xor
test
xorl
jno
push
mov
cmp
outsl
shll
push
and
mov
dec
adc
imul
fldt
orb
lods
and
lret
mov
pop
pushf
lds
lds
inc
ror
dec
out
cmpb
das
lods
insb
add
or
pushf
push
jmp
rorl
inc
imul
pop
loopne
repnz
ss
int3
addb
mov
int
sbb
pushf
xchg
ffreep
stos
pop
scas
daa
popl
adc
mov
adc
mov
cmp
pop
hlt
ficompl
jno
frstor
adc
mov
das
pop
popa
std
xor
jns
and
fbstp
hlt
xchg
pop
and
mov
pop
das
xor
sub
popf
inc
xchg
daa
add
mov
cmp
push
sbb
outsl
in
pop
iret
mov
not
fcoml
rcr
out
int
push
movsl
mov
push
mov
cmp
outsl
subl
xor
jg
mov
cmp
pushf
cmp
aas
aad
xchg
sbb
imul
inc
fsubrs
cld
jne
data16
mov
sub
rorb
in
je
gs
mov
scas
fiadds
or
ret
scas
lods
outsl
in
sti
sub
push
add
je
and
mov
xor
inc
shrb
mov
ret
mov
arpl
or
aam
inc
out
dec
jbe
test
pop
add
cwtl
adc
in
pushf
daa
xchg
push
dec
and
lret
fadds
scas
fs
jle
or
notb
or
jb
mov
outsl
jnp
fnstenv
dec
inc
loop
add
inc
mov
mov
push
mov
adc
add
xchg
loop
sbb
rclb
loop
push
movsl
loope
mov
aas
inc
daa
arpl
js
or
cmpl
lods
inc
sub
xchg
mov
dec
adc
and
cmpsb
xor
jg
test
mov
jge
cmpsl
stos
cs
inc
and
mov
lods
iret
fnstsw
pop
jl
push
andb
cld
xor
adc
loop
and
xor
lods
pop
cmp
pop
in
pop
clc
mov
push
scas
mov
or
xchg
arpl
out
testb
inc
add
push
scas
xchg
sarb
fwait
stos
cmpsl
cmpsb
shrl
imul
cmp
pop
pop
mov
push
daa
mov
mov
mov
wrmsr
out
add
adc
fs
movb
pop
cmp
in
out
push
sbb
jge
mov
add
fs
shlb
ljmp
push
xchg
ret
pop
cmpb
stos
shlb
loopne
cmp
mov
xchg
sub
xchg
mov
ret
xor
call
mov
sub
jns
aas
aad
lcall
lret
mov
daa
dec
sub
add
pop
xchg
jecxz
dec
and
dec
sarb
das
pop
and
adc
in
cmp
test
cmp
cli
adc
xchg
rcl
dec
aaa
es
lock
pushf
mov
add
fistpl
lar
mov
lods
call
inc
cs
lcall
push
sbb
mov
popf
ret
jp
jns
mov
bound
sbb
sbb
sub
shr
mov
inc
sub
icebp
pop
jle
dec
dec
repz
js
stc
in
sub
inc
in
outsl
jnp
fcoml
pop
into
lret
add
out
hlt
arpl
adc
std
sub
xchg
ljmp
lods
cmpsb
mov
sbbb
inc
inc
jmp
dec
cmp
mov
xorb
scas
pop
mov
inc
mov
mov
sub
in
mov
bound
sbb
jno
aaa
jo
or
rorb
mov
in
or
xchg
es
mov
loopne
push
jp
sbb
in
push
add
int3
lods
and
fwait
xor
inc
mov
out
xchg
in
test
test
jge
cli
push
pop
mov
add
push
out
daa
in
hlt
fstl
push
sti
xchg
push
roll
fstpt
cmpl
lcall
nop
adc
pusha
out
sub
jle
adc
inc
fucomp
xchg
std
and
lret
mov
pop
mov
inc
ss
inc
mov
xchg
pusha
adc
outsb
cwtl
mov
sti
push
jle
arpl
pop
dec
dec
add
data16
inc
sbb
mov
bound
mov
sbb
gs
rcr
pop
mov
pusha
popa
xchg
adc
lea
movsb
rcrl
into
cmp
andb
inc
jnp
pop
mov
jo
cli
cltd
cmpsb
daa
mov
rcrl
mov
mov
cs
push
fldl
popa
es
cmp
and
aas
cmp
insb
pop
out
sbb
push
lea
push
lahf
cwtl
aam
push
sub
outsb
cmp
jne
nop
aas
out
ljmp
add
les
imul
add
inc
xchg
rorb
stc
sub
stos
iret
push
in
insl
jmp
cmp
and
jl
sti
push
and
jge
add
repz
sub
push
jmp
inc
pop
jmp
mov
pushf
jne
rorl
aam
lret
pusha
mov
hlt
fisubs
xor
inc
mov
jo
gs
js
ja
repnz
popa
fisubs
repz
faddl
pop
add
pusha
cld
push
clc
adc
insl
cwtl
pop
jg
inc
imul
pop
xor
jno
or
mov
fld
pop
mov
sar
dec
add
push
add
push
mov
xchg
sarb
and
pop
stos
popf
int
jae
call
shrl
jecxz
inc
jle
lock
scas
cmpsb
lret
push
sbb
fldcw
adc
int
push
neg
push
clc
jne
gs
imul
push
cmp
mov
or
cmp
inc
pop
jmp
jge
cmp
stos
andl
inc
rolb
push
test
push
or
push
rcrb
inc
cmpsl
and
push
test
repnz
outsb
outsb
sub
cmc
loop
fldt
xor
adc
add
mov
dec
add
mov
xchg
das
sbb
test
call
ficompl
push
xor
pop
repz
pop
add
movsl
or
addr16
shlb
out
or
sbb
cmp
js
push
pop
lods
out
pop
es
mov
cwtl
in
and
test
cmc
scas
leave
sub
outsl
cmp
test
jmp
add
fmull
inc
test
dec
pop
icebp
mov
mov
or
pop
outsb
xchg
cmp
pop
cli
js
mov
gs
imul
es
push
lahf
in
mov
jo
scas
testb
ficompl
mov
inc
jecxz
ds
jle
fwait
mov
xor
pop
mov
mov
and
insb
push
mov
inc
xchg
push
mov
fcoms
popf
scas
or
stos
adc
fucomip
cwtl
add
ja
push
mov
xor
pop
into
xchg
xchg
dec
and
jge
mov
sbb
iret
arpl
cwtl
jmp
test
lret
std
cmp
mov
sti
cmpsb
sub
dec
inc
arpl
ret
sahf
dec
movsl
lds
push
lds
sbb
xchg
sub
cwtl
sub
mov
mov
adc
in
rorl
sub
test
imul
push
ret
cmpsl
leave
fwait
orl
ss
test
inc
xchg
sbb
xor
rorl
stc
jnp
adc
mov
xor
xchg
fs
and
lret
adc
loop
lea
xchg
movsl
mov
fadd
shrb
lods
insb
or
pop
out
push
inc
jns
pop
or
pop
rcrl
push
add
pusha
pushf
sbbl
repnz
pusha
and
xor
push
push
lods
xchg
jb
sub
scas
hlt
add
mov
movsb
cmpb
push
pushf
out
push
adc
add
or
lds
jp
jg
jmp
stos
push
mov
aam
addr16
testb
pop
lcall
mov
lods
jp
mov
aaa
pop
daa
out
lods
shll
or
add
xchg
andb
pop
push
out
dec
insb
xor
iret
aaa
pop
mov
pop
cmp
inc
icebp
jg
jmp
inc
addb
xchg
jno
aad
mov
pop
cmpsl
dec
cmp
add
sahf
push
pop
add
xchg
lock
and
loope
sarb
lahf
adc
mov
xchg
shll
mov
jmp
push
rclb
fsubl
jle
pushf
mov
fisubl
or
dec
mov
fldcw
inc
adc
or
sub
xchg
push
stos
out
mov
pop
stos
inc
sbb
push
in
out
push
enter
jno
mov
push
call
mov
xchg
push
outsl
iret
adc
sbb
xor
push
imul
cmp
mov
mov
pop
popf
sub
mov
mov
xchg
inc
pop
aaa
xchg
mov
fcompl
adc
ds
mov
push
mov
jecxz
jle
lret
xorb
insl
sbb
add
out
ljmp
mov
movsb
dec
std
fcoms
out
mov
lods
xor
pop
jns
rorl
xchg
ret
xor
loop
pop
sub
ret
fnstcw
inc
xorl
xchg
stos
insl
push
sub
mov
decl
sbb
add
cs
mov
add
int
xlat
out
scas
ret
sarb
and
adc
pop
icebp
push
shl
or
cmp
adc
out
mov
jnp
dec
add
inc
lods
in
nop
daa
dec
sbb
aad
inc
adc
or
xor
pushf
testb
pop
or
aaa
sub
into
fsubs
xchg
add
and
cli
xchg
or
rcr
mov
add
sbb
ja
xchg
std
and
jge
repnz
das
outsl
int
pushf
jo
sbb
ja
push
stos
lods
dec
es
inc
test
push
mov
out
and
inc
push
cmp
pushf
xchg
aad
mov
popf
jmp
mov
mov
sbbb
loop
js
lcall
aas
fwait
mov
ja
push
test
mov
adc
push
inc
scas
dec
pop
xchg
mov
xchg
lcall
inc
and
test
aam
sbb
fwait
jle
dec
push
and
xor
mov
rcr
pop
or
pop
popf
fcompl
fxch
in
sub
movsl
je
mov
jl
gs
sub
adc
push
repnz
sbb
xchg
push
cwtl
cmp
mov
sub
cmp
xchg
dec
dec
adc
test
xchg
jg
jecxz
mov
inc
mov
sub
ljmp
adcl
sbb
xchg
pop
repz
add
fnstenv
fistl
sbb
leave
test
push
lea
enter
stos
xlat
ret
hlt
fmul
push
test
fmul
test
mov
fsubs
pop
jp
dec
mov
scas
adc
cmp
cmpsb
push
jmp
xor
jae
jmp
int3
ret
jp
xchg
sub
gs
pop
and
inc
in
loope
pop
data16
lods
je
mov
xor
lahf
mov
bswap
test
mov
inc
dec
sbb
dec
scas
into
rcrb
sahf
cmpsl
xor
pop
lods
mov
lret
inc
ljmp
gs
dec
sbb
or
test
sbb
fisubl
jl
rcll
add
out
shlb
fwait
mov
xchg
cmp
mov
fdivp
xor
and
xchg
movsl
in
xchg
sahf
fs
or
mov
or
std
in
push
loopne
pop
or
add
ljmp
js
jo
dec
daa
movsl
or
fwait
cld
xchg
mov
jb
and
fs
sbb
mov
add
dec
dec
cwtl
cmpsl
xor
arpl
xchg
divb
sub
add
out
xor
lods
cli
xlat
dec
outsl
sub
ljmp
jns
mov
dec
add
aad
xchg
jle
loopne
fstpt
decb
push
mov
xchg
pop
in
sahf
imul
adc
test
and
mov
jmp
test
cmpsb
hlt
rcr
mov
test
or
push
jae,pt
mov
xor
fcompl
loope
loope
lods
sbb
shll
test
adc
inc
iret
cltd
clc
inc
pushf
je
repz
pop
rcrl
and
cli
out
push
mov
cmpsb
insl
insl
mov
xchg
dec
jno
pop
mov
shlb
and
xchg
stos
sbb
daa
inc
inc
and
mov
fsubrs
outsl
inc
dec
adc
push
cmovg
sbb
adc
pop
mov
dec
frstor
jns
mov
mov
mov
and
mov
loopne
leave
cmp
inc
lock
subb
rcrl
cmp
dec
dec
test
ficompl
lret
pop
repz
push
push
xchg
rolb
add
push
jecxz
sbb
cmp
cmp
or
mov
lret
jne
cld
dec
inc
jno
push
cmpsl
jne
fxch
leave
jge
fistpll
in
test
cmpsl
lea
jne
xlat
insl
lock
jno
into
repnz
push
cs
push
addr16
or
lock
jecxz
fidivs
xor
xchg
sahf
mov
inc
incl
cmp
insl
pop
arpl
fists
push
fistps
push
cmp
sbb
hlt
sbb
fs
sub
cmp
clc
sarb
pop
sub
insl
lods
das
xchg
sbb
movsl
stos
sub
lahf
mov
push
add
rorl
xchg
les
pop
rcrl
pusha
das
add
inc
push
jmp
cld
fs
popf
dec
sti
leave
push
pop
addl
shrb
push
adc
in
loopne
sub
daa
idiv
cmpsl
sar
in
stos
aam
ss
adc
je
lds
test
dec
repnz
fcompl
sbb
add
dec
lods
push
jno
push
sti
fsubs
ljmpw
mov
loopne
in
mov
xchg
mov
in
pop
lahf
jge
icebp
pop
pop
mov
aas
dec
lds
or
ja,pt
inc
mov
lret
out
std
shll
mov
dec
in
popaw
nop
gs
iret
jge
fiaddl
sahf
mull
aas
mov
pushf
jp
push
mov
sti
xchg
in
push
ficompl
pop
inc
lock
xchg
xor
jmp
shll
xchg
repnz
push
cmp
rcr
rorb
pop
sbb
cltd
mov
stos
adc
je
test
in
xchg
repz
adc
enter
pop
xor
mov
and
lcall
outsl
fninit
insb
fldcw
int
inc
add
fsubs
outsb
mov
cmp
mov
dec
cmp
adc
sbb
call
in
cmpsb
fbstp
mov
and
cltd
push
cwtl
pop
mov
jmp
or
into
push
sub
rcrb
sbb
mov
ret
mov
int
mov
rorb
shrl
repnz
dec
add
mov
insb
fimuls
in
pop
jnp
adc
pop
in
cwtl
inc
test
shlb
adc
jbe
adc
cwtl
pop
dec
xchg
dec
in
jle
push
test
in
sub
in
adc
sbb
subb
outsl
ljmp
scas
cli
popf
xor
xchg
fisttps
xor
daa
mov
xchg
lods
push
xor
icebp
dec
lds
dec
outsw
pop
xchg
mov
nop
push
xor
lea
cmp
push
enter
fistl
inc
andl
out
std
loop
out
sbb
mov
xor
jae
xchg
stos
leave
mov
ret
ret
dec
sub
sti
test
and
gs
pop
mov
pop
cmpsb
jecxz
sbb
loope
insl
cltd
pop
lods
fwait
jle
add
adc
jle
or
cmp
or
leave
je
ror
jl
lock
lock
cmp
iret
das
cmp
stos
xor
push
cmp
cmp
in
xor
inc
ret
add
inc
add
add
xchg
movsb
push
lret
out
ds
pop
movsl
call
outsb
lods
xor
mov
inc
sub
mov
or
mov
xchg
pop
fwait
and
push
popa
test
ja
cwtl
std
cmpsb
adc
mov
lock
adc
fldt
dec
sub
aad
sbb
and
out
mov
dec
cmp
ss
lods
cs
scas
sbb
aas
insl
push
pop
stos
fldl
jge
in
dec
push
inc
mov
sub
mov
je
scas
iret
push
lods
mov
lcall
clc
sbb
clc
mov
adc
mov
or
dec
xor
xor
xchg
mov
aad
pop
fwait
add
call
ljmp
pusha
push
sti
push
and
sbbl
fldl
daa
sub
xor
aaa
fdivrp
add
sub
jbe
and
in
ss
push
imul
mov
xchg
push
mov
inc
or
adc
mov
fs
stos
dec
add
insb
stos
es
mov
ds
out
jmp
cmp
or
jecxz
mov
add
fst
ljmp
jg
aad
push
cmp
inc
and
inc
lds
outsl
aad
sub
cmp
or
cmp
inc
js
scas
stc
push
dec
sub
mov
jnp
stos
sarb
iret
in
pusha
inc
imul
pop
dec
pop
inc
sub
mov
jmp
in
mov
sbb
sbb
cld
inc
addb
shrb
xchg
and
mov
and
xchg
jge
cs
pusha
mov
int3
test
xor
add
dec
nop
out
mov
push
sbb
pushf
lods
int3
push
sbb
loop
inc
xor
xchg
inc
insl
lods
rclb
in
add
mov
outsl
sub
test
pop
push
pop
jmp
jo
cmc
mov
and
cli
mov
icebp
pop
cmpsl
mov
mov
mov
or
jnp
xchg
mov
push
add
and
rcl
arpl
mov
push
fildll
sub
lds
push
sub
stos
call
sub
sbb
mov
loopne
jg
and
mov
roll
mov
and
inc
cld
and
into
daa
pop
inc
sub
mov
and
mov
jae
sahf
dec
daa
push
mov
sbb
cmpsl
stc
stos
ja
dec
cltd
out
bnd
jp
xchg
lret
xor
push
push
mov
jg
int
icebp
push
inc
mov
int
loopne
cmp
icebp
push
jne
cmp
add
insl
push
xchg
xor
mov
jnp
jb
jnp
movsl
aaa
jne
lcall
scas
arpl
movl
test
mov
and
pop
psllw
inc
jmp
call
int3
push
xchg
outsl
arpl
fistps
pop
loopne
pop
imulb
shlb
add
fmull
mov
fxch
rolb
add
jae
popf
frstor
sbb
hlt
mov
inc
xchg
aaa
pop
stc
lcall
add
xchg
movsl
int3
sahf
movsl
cmpsl
js
and
xchg
pop
aam
scas
xchg
fisubs
mov
adc
dec
sub
in
orl
jl
adc
shr
inc
inc
lock
jmp
aas
jnp
fldcw
or
dec
addl
aam
jne
xor
mov
jo
jecxz
pop
add
inc
or
and
shlb
push
outsl
mov
cmp
call
fnsave
out
jmp
mov
xor
js
pop
movsb
movsb
imul
push
adc
push
in
cmp
jae
add
rol
arpl
pop
push
rclb
mov
daa
pusha
xor
hlt
xchg
mov
pushl
imul
cli
jmp
std
cld
call
popa
cs
sbb
pusha
inc
arpl
mov
movntq
push
dec
mov
mov
xchg
std
mov
cld
push
xor
fstpt
xchg
nop
dec
pop
das
test
or
sub
xchg
push
cmp
push
mov
inc
repnz
xchg
or
inc
jbe
je
imul
inc
sbb
lcall
lods
test
out
in
scas
aas
ljmp
inc
popf
cmpsl
out
jmp
movsl
lods
cmpsb
rol
sahf
pop
negl
test
xor
shlb
mov
mov
mov
mov
mov
add
sbb
shlb
inc
inc
es
movsl
xor
and
std
enter
pop
js
sub
push
rcl
push
lds
mov
sub
dec
jmp
scas
rcll
mov
mov
push
add
flds
cwtl
inc
sub
cltd
scas
ja
jmp
mov
shlb
and
nop
test
pop
call
lods
cli
lret
fisubs
add
adc
mov
lret
pop
lods
fcmovu
jg
cmp
sbb
mov
std
fisttpl
das
je
push
ds
and
cltd
cmp
repz
cmp
push
je
andb
scas
les
jmp
clc
fstp
int
adc
xor
jae
push
shrl
mov
call
cmc
mov
shll
out
jmp
cmp
fwait
in
fdivrl
inc
mov
daa
cmp
addl
push
xchg
dec
xchg
cmp
mov
imul
adc
mov
je
add
repnz
jne
push
jno
scas
pop
fst
cpuid
aad
insb
imul
cli
cs
data16
popa
insl
rorb
and
push
imul
xchg
stos
push
mov
in
fsubrl
xor
fsubr
inc
inc
cmp
adc
cld
mov
xchg
jae,pt
jg
ja
or
and
lods
adc
xchg
push
mov
xor
cmp
xchg
lret
pop
rol
call
push
push
int
or
jo
jnp
pop
stos
mov
adc
cmc
mov
int3
mov
dec
add
add
inc
adc
jmp
jge
pushf
mov
xor
mov
movsb
lretw
dec
xor
aaa
push
js
dec
inc
inc
gs
and
jecxz
test
clc
pop
mov
ja
add
xor
fnsave
mov
mov
loopne
arpl
ret
pop
add
mov
xor
fldt
jne
aaa
leave
pop
mov
clc
and
in
aad
aaa
and
add
mov
mov
ds
push
mov
int3
inc
sbb
push
push
jb
push
jbe
ja
jp
test
je
xorl
cmp
lret
xor
out
in
aaa
dec
sti
push
sbb
lods
adc
mov
jnp
shlb
addr16
dec
add
lret
shrb
iret
iret
daa
loop
adc
out
jno
dec
popa
into
add
lahf
add
or
and
inc
insl
inc
insb
sahf
sub
dec
inc
jl
or
sub
lods
icebp
stc
mov
scas
cmp
mov
dec
loope
outsl
in
std
subl
popa
out
jmp
test
mov
ja
push
push
mov
sub
mov
xor
enter
jle
cmp
aas
sub
shrb
test
or
push
jne
xchg
popf
cmpsb
xchg
mov
in
outsl
or
cmp
rclb
push
lods
jg
sbb
into
sbb
mov
pop
leave
pop
pusha
xchg
fstps
mov
movsl
pushf
lods
fsubs
mov
or
clc
xor
cmp
mov
cmp
and
add
clc
fstps
xor
lret
lret
int3
inc
dec
pop
std
loop
scas
ds
or
add
mov
push
outsb
mov
mulb
lds
aam
adc
jns
mov
xor
clc
or
push
cmp
push
push
jle
and
mov
repnz
and
loope
or
xchg
ljmp
sbb
out
leave
push
arpl
out
adc
dec
inc
fiaddl
pop
xorb
sub
xor
ss
fistl
push
roll
sarl
cmc
lea
sbb
in
and
and
jb
xchg
mov
pop
popf
adc
xor
and
sarb
in
int
adc
lds
mov
adc
sub
lret
lea
gs
mov
cmpsl
mov
inc
lods
add
sub
test
outsb
adc
xor
cmp
scas
pop
iret
mov
mov
jmp
dec
or
icebp
jo
jle
dec
fs
jl
dec
sbb
stos
shll
inc
les
add
inc
mov
loopne
pop
add
scas
addr16
outsb
or
loopne
xor
rorl
adc
or
shl
inc
test
mov
adc
jno
je
out
mov
adc
loope
aam
jge
jnp
jns
mov
rclb
in
xchg
in
iret
repnz
inc
fidivl
cmp
sub
or
xchg
inc
mov
xchg
lahf
rol
repnz
sbb
lret
mov
mov
xlat
xchg
test
enter
das
adc
movsl
andl
shr
ljmp
test
mov
icebp
adc
in
sarl
out
clc
mull
add
mov
fiadds
fs
inc
jp
in
pop
test
sub
jmp
jb
mov
scas
pop
cld
movsb
dec
aam
jns
lea
stos
xchg
stc
pop
push
jb
hlt
xchg
xor
pop
sbb
rorb
sbb
cmpsb
lods
xor
test
aam
cs
jb
loop
gs
sbb
adc
cmp
xlat
sub
out
jmp
mov
sti
movsb
nop
adc
jae
mov
or
inc
add
dec
mov
push
mov
pop
pop
jmp
cmp
or
mov
dec
rcr
test
sbb
xchg
mov
sbb
dec
pop
stos
pop
jp
ret
repnz
in
shl
pop
loope
xlat
sti
cmp
and
cmp
sbb
aaa
push
jle
pop
testl
cmp
shr
shrb
xchg
cmp
aaa
jno
lds
pop
std
adc
cmpsl
aam
cmp
aad
fidivrl
sub
mov
pop
sub
push
decb
popf
jno
xchg
xchg
sub
ja
pop
fcoms
imul
mov
fisttpll
addr16
pushf
icebp
mov
mov
sti
movsl
leave
mov
jno
sub
fisttps
xor
dec
sub
inc
invd
cltd
push
cli
and
icebp
outsl
stos
stos
push
out
ljmp
ret
dec
push
aas
push
stos
adc
mov
jbe
sub
stos
fcomps
orb
aam
ret
stos
cmpsb
lcall
inc
sub
int3
repnz
daa
add
sbb
inc
lods
fstpl
data16
jnp
loop
push
clc
pop
loop
jb
adc
mov
out
pop
xor
idivl
and
mov
popa
mov
test
xchg
cltd
jmp
aam
adc
js
push
sub
iret
daa
in
adc
push
or
mov
stc
sbb
and
and
jne
scas
les
xor
cmp
scas
dec
aad
aam
ja
sarl
popa
bound
in
push
and
inc
cmp
les
adc
std
mov
ljmp
jo
int3
pop
int
dec
xor
cmp
inc
add
dec
add
pop
faddl
pop
mov
loope
push
aaa
in
sub
hlt
ret
rolb
insb
jne
lods
fisubrs
xchg
mov
leave
fdivrl
inc
jo
and
adc
sbb
push
shl
jb
push
and
fisubs
fldt
mov
or
dec
int3
pop
sbb
mov
cmpl
in
shlb
mov
jnp
aaa
lcall
mov
sbb
jecxz
test
pop
pop
sysret
je
fisubl
mov
stos
insb
mov
cltd
adc
in
xchg
inc
adc
les
mov
pop
data16
cmpsl
sub
or
add
nop
addr16
inc
jns
nop
or
in
les
xacquire
sbb
jbe
pop
bt
cmp
loope
and
dec
sbb
sti
jmp
add
cmp
les
mov
push
mov
movsl
adcb
sarb
rcll
es
in
jecxz
cmp
xchg
mov
add
lret
popf
add
icebp
adc
in
hlt
repnz
lret
cmp
pop
adc
jg
jle
aas
xor
mov
outsb
jp
pop
sbb
sbb
jns
xchg
out
sarb
scas
sbb
out
xchg
test
sbb
inc
pop
std
roll
fistps
push
xchg
leave
sub
dec
bnd
push
cld
lahf
test
xchg
adc
or
sbb
pusha
xor
mov
mov
rcr
outsl
imul
sbb
sahf
jo
mov
xchg
lods
lods
inc
call
mov
arpl
adc
jmp
dec
call
jbe
cmp
sbb
fdivrs
jecxz
movsb
inc
xor
cwtl
sbb
sahf
outsb
xchg
fs
mov
xchg
mov
inc
out
cltd
dec
fwait
addr16
xor
push
push
jns
pusha
int3
dec
in
xor
lock
mov
jmp
or
aaa
lods
das
cld
push
push
iret
jmp
push
out
push
sub
test
xchg
clc
scas
test
dec
xchg
xchg
icebp
rol
add
jnp
incl
mov
or
fnstenv
and
popa
bound
push
shl
jl
sub
pop
jmp
lcall
cs
loope
pop
mov
cmpsb
repnz
xchg
scas
dec
cmp
mov
out
sub
int
push
icebp
mov
fwait
pop
out
mov
test
nop
ds
sbb
test
out
jb
rcll
sarl
cwtl
xchg
add
jno
mov
in
inc
jge
pop
mov
mov
pusha
cltd
sahf
hlt
dec
mov
movsl
rcll
add
dec
mov
iret
les
cltd
test
loop
add
pop
cld
arpl
add
mov
test
sub
mov
fistl
or
outsl
xchg
add
mov
popf
shlb
insl
mov
in
call
fisubs
out
cld
inc
push
mov
in
xor
pop
xlat
sbb
push
cmp
cmc
pop
cmpsb
sbb
cmc
adc
jae
dec
lods
sub
mov
bound
lock
push
inc
sub
mov
clc
pop
push
cs
sub
test
je
cmc
jbe
xor
clc
frstor
cmpsl
push
push
pop
inc
inc
sahf
pop
lods
jge
or
xor
cs
adc
mov
ret
std
lods
in
jae
gs
cli
or
cmpb
add
sbb
rcrb
test
mov
push
and
mov
and
sub
leave
fcompl
test
dec
fcoml
add
inc
and
lcall
ficomps
inc
mov
arpl
add
jb
cltd
jne
aad
sbb
inc
xchg
pop
push
push
add
aam
xchg
ror
leave
cltd
pop
cmpsb
ret
mov
out
fistpll
mov
sarl
leave
push
sbb
push
xlat
cmp
cmp
push
andl
and
das
fcos
adc
ret
es
cli
aas
lahf
testl
pusha
sbb
adc
daa
cmpsb
inc
fs
das
mov
rcrb
or
loope
push
cmp
xchg
arpl
inc
pop
lahf
gs
dec
lea
loopne
std
fistpll
xchg
sbb
icebp
in
fldcw
xor
pusha
push
mov
mov
cmp
dec
cltd
jge
xor
cltd
mov
mov
stos
in
and
inc
data16
test
das
popf
jp
xchg
push
pusha
nop
shl
sarb
insl
push
xchg
mov
testb
cmp
aaa
ds
in
jp
sub
dec
pop
jne
mov
push
notb
and
call
cltd
mov
pop
mov
in
cmp
incb
fistpl
mul
mov
aad
lahf
or
jns
insb
iret
imul
inc
sti
sbb
je
push
icebp
lods
ret
jbe
pusha
enter
iret
rcll
push
scas
mov
fisttpll
jno
pop
fildll
das
dec
mov
fsts
popf
add
lds
aaa
mov
aas
cmp
es
dec
sub
stos
dec
adc
or
mov
imul
test
pop
cld
testl
mov
int3
std
nop
adc
add
or
cmp
movsb
jmp
xor
cmpsb
pop
mov
mov
iret
les
or
nopl
andl
add
pop
pop
fmull
dec
push
insb
jge
aas
test
mov
icebp
adc
shr
test
sub
rcll
cmp
sub
fidivrs
push
xchg
fwait
loopne
adc
fwait
and
mov
dec
daa
jge
mov
test
movsl
ljmp
fistpll
pusha
out
or
imul
cs
aad
pop
movb
imul
mov
jae
test
andl
roll
rolb
or
mov
jecxz
xor
test
pop
fmuls
jge
int
in
mov
cli
inc
xchg
add
mov
pop
cmp
jmp
jle
je
cmp
pusha
push
or
mov
jns
xchg
int
into
mov
or
xchg
scas
cmpsl
and
fisubs
mov
add
movsb
loop
jge
jle
cltd
cmp
push
mov
nop
aam
mov
nop
mov
je
syscall
and
cltd
jns
jbe
push
cmp
dec
push
push
sbb
lret
repnz
dec
xor
xor
sahf
xchg
and
lds
rclb
cmp
les
mov
insb
mov
lock
inc
mov
addr16
lret
fs
jmp
loopne
sbb
adc
mov
cmp
mov
hlt
je
imul
insl
fs
pop
outsl
mov
mov
or
icebp
adc
cmp
jp
xlat
or
stos
cmp
xor
and
mov
test
sub
inc
pop
xchg
push
in
mov
movsl
cmp
cmpsl
dec
xchg
test
mov
sahf
ret
pusha
jno
mov
push
int3
mov
mov
rolb
hlt
cld
xchg
cmp
xchg
mov
jmp
dec
in
mov
idivb
mov
cmp
inc
pop
dec
ja
test
cmp
lock
test
sahf
shlb
add
cmp
sahf
or
aaa
inc
add
enter
pop
out
cmp
xor
pop
mov
aas
sbb
cmp
iret
fwait
scas
mov
inc
push
push
dec
jne
iret
inc
jae
cmpsb
loopne
pop
imul
mov
out
rcll
les
inc
leave
mov
popa
int3
lock
fildl
push
mov
cwtl
outsl
cmpsl
stc
xlat
pop
and
dec
add
cmp
inc
and
mov
xor
std
scas
ja
add
cltd
fmull
in
jns
data16
add
sbb
fcom
mov
lods
add
jecxz
bound
xor
call
sub
jl
fs
pop
xchg
mov
popf
or
adc
fs
add
xlat
and
cli
dec
sar
xchg
cmpsb
adc
push
add
jmp
cmp
int
jl
fisttpll
pop
xor
ss
sbb
pop
cmp
cltd
loop
and
and
push
sub
pop
or
ret
jno
scas
andb
clc
xor
lea
imul
enter
outsl
idiv
pop
movb
mov
fwait
inc
in
lock
psrld
pop
mov
movsl
ljmp
mov
xor
leave
outsl
push
int3
mov
aad
cmp
or
adc
mov
push
ljmp
pop
cld
inc
ret
sbb
outsb
cltd
xchg
and
imull
inc
inc
shrb
nop
jg
adc
mov
test
mov
in
sti
lea
inc
sub
mov
or
ljmp
ret
inc
mov
lods
ds
pop
dec
pop
add
mov
xchg
dec
mov
push
decl
int3
cltd
xor
mov
mov
sbb
sbb
cwtl
in
push
add
enter
xchg
insl
or
popf
inc
sub
aaa
pop
rolb
cld
or
cmp
inc
jl
jno
jo
dec
icebp
sub
xor
cwtl
mov
pop
not
lret
adc
inc
xlat
sbb
jl
addb
cmp
insb
mov
and
adc
xor
cmp
ja
in
pop
in
imul
repz
shll
pop
adc
dec
flds
in
js
pop
gs
ficompl
std
add
push
rcrl
cmp
mov
inc
mov
int3
pop
sub
mov
add
rorb
idivl
or
call
mov
dec
adc
test
sbb
scas
neg
jno
mov
inc
mov
sbb
cmp
bound
nop
sbb
pusha
lret
pop
push
std
jmp
in
add
push
mov
ds
jnp
imul
mov
pop
inc
pop
dec
cmpsb
mov
imul
jnp
cmpl
or
arpl
js
scas
inc
add
mov
pusha
cltd
or
leave
dec
out
dec
push
sbb
jl
scas
or
cmp
dec
icebp
roll
push
xor
das
fwait
and
fbstp
scas
pop
repnz
xchg
cmp
dec
mov
lahf
subb
cld
inc
clc
out
jns
cmp
inc
dec
lods
jmp
aas
lods
pusha
imul
push
repnz
add
daa
xchg
in
sbb
jnp
mov
out
aas
dec
jns
pop
mov
lock
mov
ror
and
sub
mov
fists
lods
xchg
loop
inc
xchg
in
mov
jb
mov
mov
dec
adc
push
xchg
jnp
imul
scas
out
sub
adcb
cmpsb
sbbl
lods
aas
jg
jle
or
outsl
jns
je
fiaddl
cmpsb
cmp
out
sub
ret
ja
mov
xrelease
popf
sti
xchg
xchg
insl
hlt
insb
add
clc
sbb
fucomi
sub
xchg
imul
cmp
cmp
lods
pop
das
pop
aam
loopne
xor
fistpll
dec
push
sbb
aaa
icebp
dec
ljmp
imul
xchg
adc
mov
loope
push
in
ja
lods
fldcw
mov
inc
mov
mov
xor
mov
sub
jbe
adc
fistl
jnp
or
popa
inc
call
xchg
cltd
neg
dec
inc
lret
inc
add
das
sbb
pop
push
std
jbe
push
mov
cmp
cmp
sbb
insl
adc
test
push
pop
push
push
js
mull
lret
shlb
movsl
inc
in
rorb
rorl
add
xchg
sbb
lods
fnstenv
jp
lods
cwtl
insb
lret
pop
testl
repnz
in
in
pop
lret
jns
adc
xchg
xor
cs
test
scas
out
push
ds
roll
jae
lret
dec
xor
pop
mov
loop
cwtl
push
push
and
mov
and
lock
repz
mov
mov
sbb
jg
loop
jp
jge
je
mov
shrl
push
popa
int3
imul
jns
cs
sti
jecxz
dec
mov
bound
mov
or
sub
rcrb
push
leave
mov
dec
sahf
xchg
push
pushf
inc
push
xchg
sbb
jbe
jecxz
inc
fldl
dec
sub
push
into
outsb
les
in
sub
and
push
dec
inc
xor
adc
lret
or
shll
pop
jno
lret
pusha
or
sbb
pop
xorl
out
fidivs
jno
test
cs
movsb
add
shl
outsl
push
sar
jno
dec
jo
bound
xor
sub
icebp
push
adc
push
push
insb
rcrb
scas
dec
adc
aaa
push
not
mov
ss
int3
push
insl
push
jno
jbe
test
or
cwtd
pop
push
fwait
imul
xchg
es
xchg
iret
pop
or
xlat
pusha
mov
jl
xor
inc
rcl
mov
stc
mov
out
dec
adc
andb
aad
push
imul
aad
push
inc
adc
nop
mov
jecxz
pushw
mov
jge
jmp
sub
mov
xchg
add
rorl
cmp
cmc
icebp
insl
push
xchg
xchg
popa
test
ljmp
push
mov
xor
mov
inc
inc
subb
fadd
subb
insl
pop
icebp
sub
jne
orb
sbb
push
xchg
push
sub
dec
loope
adc
jecxz
jo
xchg
mov
jle
jno
cmp
mov
pop
adc
fildll
add
call
pop
sbb
shll
add
test
leave
inc
mull
ret
cltd
cmp
fbld
cmp
xor
stos
push
sarb
mov
lahf
xchg
mov
arpl
xor
push
popa
push
xchg
pop
mov
in
stos
lret
icebp
add
or
mov
mov
in
call
mov
jle
aas
lcall
pushf
mov
call
cwtl
ja
mov
loope
or
mov
add
push
bound
jg
pusha
iret
daa
in
es
adc
push
inc
dec
out
std
and
pop
mov
fistl
lods
nop
sub
cmp
out
into
inc
int
mov
pop
push
jb
and
lret
add
vpunpckhbw
movsb
in
int
imul
sbb
mov
xor
pcmpeqd
jns
and
xchg
jo
xor
add
pop
fcomps
leave
sub
mov
lcall
test
jbe
lea
and
mov
dec
cmpl
xchg
dec
sbb
ljmp
sub
scas
mov
fisubrs
mov
movsb
fcmovbe
imul
or
pop
dec
fwait
leave
ds
rorb
inc
mov
stc
data16
mov
js
gs
rcrb
pop
aaa
adc
scas
xchg
cld
dec
xor
sbb
jno
dec
out
cmp
jl
mov
popf
adc
shl
lods
orl
sbb
mov
pushf
push
pop
psubb
aas
imul
sbb
aam
sub
pop
popl
dec
movsb
gs
jo
sub
cmpsb
out
xchg
mov
adcl
mov
pop
lods
int
addb
inc
inc
fimull
xchg
sub
mov
insb
xchg
mov
sti
sub
lods
xchg
xchg
pop
movsl
fcmovnu
and
mov
xor
mov
and
es
ljmp
adc
adc
mov
arpl
jnp
push
jmp
push
fstpt
mov
ret
hlt
repnz
in
cli
mov
mov
jl
lds
pop
rcrl
inc
imul
push
cmp
xchg
cld
sbb
dec
ja
cwtl
xor
mov
sbb
nop
loop
js
ja
mov
pop
mov
mov
subb
push
add
mov
loop
sahf
dec
mov
jg
lock
and
sti
add
pusha
dec
aaa
dec
push
iret
lahf
push
or
mov
popa
jle
add
mov
nop
or
in
push
ds
jg
mov
out
push
daa
cmpsl
aam
push
movsb
inc
stos
dec
cmp
add
jns
dec
mov
jbe
jg
call
outsl
pop
cmp
das
fisubl
fstl
icebp
int
test
push
and
lods
dec
pop
fldcw
ror
out
dec
jb
fistpl
call
pop
icebp
dec
mov
ds
ja
scas
or
mov
push
cmp
cltd
popf
clc
add
outsb
push
test
sbb
mov
cmpsb
xchg
fisttpll
mov
jecxz
mov
jno
shrb
loopne
push
sub
stos
xchg
inc
jg
and
insl
fadds
jmp
sub
rcll
inc
push
ds
fs
leave
lea
add
repz
lret
xlat
aam
mov
aam
out
inc
lret
lcall
lea
inc
jns
fcmovne
xchg
fldcw
icebp
rolb
loope
adc
aam
push
sbb
sbb
inc
jp
sub
aam
or
pop
test
xor
dec
out
mov
ret
mov
xchg
xchg
or
xchg
xchg
mov
push
add
mov
add
lods
jecxz
ret
addr16
jbe
insb
cwtl
sub
rolb
mov
sub
dec
test
adc
in
jge
push
sub
stc
sub
mov
push
loope
sbb
in
mov
cmp
movsl
push
mov
jmp
out
pop
xor
jb
repz
jmp
sub
adc
lods
shlb
mov
arpl
adc
das
pop
cmp
mov
mov
and
outsb
push
jge
sub
adc
add
and
test
cltd
int
xchg
sar
pop
cmpsb
sbb
in
mov
call
sbb
nop
xor
iret
repz
mov
inc
lcall
test
hlt
daa
push
mov
xchg
mov
xchg
fstps
sbb
int3
test
mov
jge
xor
mull
adc
cld
icebp
lcall
add
jmp
cmp
fbstp
and
mov
jp
loope
sub
add
and
test
xor
imul
bound
outsl
fwait
mov
rcrb
rcll
insl
shll
adc
psrad
fldt
or
ret
xchg
aaa
mov
call
pop
inc
idiv
push
jnp
mov
enter
xchg
scas
add
in
dec
and
cld
sub
movsb
inc
into
icebp
test
popa
fisttpll
pop
hlt
in
insb
fs
pop
xchg
outsl
fstl
test
mov
pop
xchg
cmp
lock
leave
adc
jnp
call
fdivl
mov
jg
push
ja
xchg
push
jne
hlt
dec
dec
out
add
push
std
in
decb
test
andb
scas
in
cltd
sti
sub
test
hlt
inc
mov
cmpsb
xor
cld
js
test
cld
test
scas
cld
addps
pop
lods
push
test
inc
icebp
aaa
pop
inc
jne
jae
aas
cmp
daa
scas
xchg
add
inc
lea
mov
adc
repz
mov
push
outsb
or
rorl
xor
lret
xor
movsl
and
mov
jns
jns
inc
insb
add
push
xchg
inc
fcmovnbe
out
pop
mov
repnz
loope
jae
stos
push
push
sbb
int3
dec
cmpl
push
push
andb
ja
subl
icebp
dec
enter
xor
cmpsl
push
ljmp
ss
cmp
cmp
sbbl
cwtl
jae
cmc
mov
xchg
xchg
sbb
stc
fld
mov
jno
nop
aam
cmp
jb
jae
pop
and
popa
stc
mov
jl
sbb
mov
mov
out
sbbl
add
mov
push
mov
sub
inc
cltd
add
test
xchg
sarl
mov
out
sub
in
xor
jp
fsubrl
lcall
sub
mov
inc
xor
movsb
mov
aam
call
sbb
je
std
mov
enter
test
cmc
iret
nop
incb
mov
sub
jae
pop
pop
ja
add
hlt
ret
hlt
inc
and
mov
pop
aas
out
rorl
cwtl
and
lea
mov
cltd
mov
call
js
or
mov
aaa
enter
xchg
test
mov
push
add
fs
inc
out
and
lods
xor
cmp
out
inc
mov
mov
mov
loop
popa
out
mov
xor
enter
sbb
testl
stc
stos
cmp
fxtract
and
or
sub
push
cmp
xchg
and
sbb
or
add
and
inc
aad
xchg
das
clc
aas
xor
inc
subb
pop
mov
sub
ret
jns
sbb
xchg
bound
lods
mov
jb
xchg
mov
ss
add
hlt
icebp
movsl
or
mov
mov
lods
cmp
rorb
and
pushl
in
out
mov
jbe
push
mov
lahf
fidivrs
xchg
or
neg
or
push
cmc
popa
xor
mov
das
cwtl
inc
js
mov
xchg
push
lock
sbb
jg
fiaddl
pop
adc
cmp
push
push
adc
call
and
test
loop
and
out
or
mov
or
push
jns
icebp
int3
test
or
sar
sbb
stc
inc
ljmp
subb
add
jnp
cmc
js
pop
cmpl
mov
hlt
fcmovnb
inc
in
cmp
cli
add
in
xorl
mov
cmc
sti
out
mov
scas
jmp
addr16
dec
push
pop
cmp
je
hlt
dec
jle
popa
mov
shll
cmp
jns
mov
xor
shrb
xchg
cld
xor
xchg
ret
sbb
pop
cld
xor
test
sub
das
ret
call
int
sub
and
pop
into
cmp
popa
fiadds
scas
jg
lods
push
ret
or
add
and
jle
xchg
cmp
fnstenv
pop
insb
js
nop
fnstsw
dec
sar
orb
mov
mov
push
div
push
popw
aas
mov
add
xchg
adc
cmp
call
cld
mov
add
or
push
cmp
jge
repz
imul
in
sub
mov
ret
push
dec
mov
inc
mov
mov
jb
outsb
rcrl
inc
pusha
test
sub
xor
arpl
ret
and
sbb
mov
dec
pop
rcrb
fnstenv
xor
jae
test
mov
xchg
sub
test
push
lahf
int3
popa
clc
mov
pop
adc
xor
xchg
dec
lods
fcompl
pushf
test
int
pop
les
jns
inc
hlt
leave
xchg
jle
pusha
test
push
cmp
cmpsb
inc
fsub
mov
and
jle
jl
push
xlat
loopne
dec
dec
repz
jp
push
dec
pop
jo
bound
pop
sub
aad
stos
adc
ss
pop
xchg
cmp
pop
push
mov
lea
adc
push
xchg
lret
or
out
xchg
mov
jmp
jo
in
jno
adc
scas
adc
adc
aas
imul
movb
sub
sti
push
mov
jecxz
cmc
lret
fbld
inc
mov
jbe
jecxz
cli
fnstcw
cmp
cmp
xchg
cmp
int
sub
mov
jbe
out
loope
arpl
out
xor
arpl
outsb
int
mov
out
xchg
lock
adc
inc
andl
pop
mov
mov
or
sub
ljmp
add
add
adc
push
mov
movsl
cmp
push
mov
pop
cmpsl
xchg
mov
add
xchg
imul
dec
adc
xor
in
push
push
movsl
xlat
mov
dec
sub
jecxz
adc
xlat
lds
jb
jbe
outsb
adc
movsl
aas
xchg
mov
nop
push
cmp
jb
jbe
stos
dec
insl
inc
jno
int3
daa
aaa
std
xor
fsub
cmp
loopne
ss
add
push
movsb
sbb
mov
fldt
sbb
or
lods
daa
rolb
or
leave
rolb
in
pop
xor
sbb
jge
cmpsb
out
outsl
xchg
aas
mov
pop
lods
in
jbe
xor
jno
xor
ljmp
out
in
jecxz
fsub
cltd
cmp
test
nop
cmp
aam
xchg
cmpsb
repnz
jb
sub
jb
shll
cmp
lea
fucomi
and
out
push
push
ret
fnsave
cwtl
out
cmpsb
jl
mov
jb
movsb
sarb
js
ljmp
imul
push
enter
cli
cmpsb
outsb
mov
nop
xor
popa
pop
mov
adc
jmp
loop
movsb
cmp
stc
mov
jne
mov
and
cli
or
lret
push
xchg
sbb
jo
add
mov
pushl
iret
jnp
enter
test
and
mov
ds
lods
fldl
movsl
or
bndstx
jae
and
sub
ja
dec
jp
pop
test
push
scas
ret
pop
fidivs
clc
jle
jb
mov
test
jns
xchg
fldenv
cmc
xchg
sub
push
out
push
push
mov
aas
mov
push
mov
and
iret
call
lds
mov
js
xchg
fmuls
daa
sti
cmp
ret
dec
cmp
repz
or
cwtl
pop
outsl
int3
jns
sub
fldcw
xchg
xchg
mov
jne
popa
xor
jge
stos
test
or
test
jmp
mov
or
adcl
sbbb
add
or
out
or
dec
je
jno
push
dec
jl
into
cmp
addl
pop
xchg
mov
mov
jg
cmp
mov
xchg
int
inc
ret
jg
sub
shlb
add
lret
mov
or
add
outsl
dec
mov
pusha
lret
mov
sbb
mov
mov
das
gs
lea
sti
dec
cmpsl
or
jecxz
add
aas
mov
cmpb
add
mov
mov
sbb
xor
cs
jns
and
mov
cmp
out
popf
scas
ffreep
movl
das
mov
pop
xchg
std
ja
je
jmp
push
mov
fcmovnu
sub
mov
roll
gs
add
int3
fsin
cld
cltd
pop
adc
xor
and
lods
adc
add
iret
divb
pop
adc
aad
arpl
adc
inc
fwait
imul
fcoml
call
in
outsl
pop
xlat
mov
lret
xlat
imul
mov
imul
lret
fnclex
xor
xor
jle
addr16
mov
test
jo
fidivl
shr
adc
mov
cmp
push
xchg
test
push
fwait
inc
dec
xchg
cmc
jl
cs
lret
push
mov
add
xchg
and
cmp
cli
mulb
leave
lds
push
stos
insl
pop
js
add
ret
inc
aas
mov
and
ret
add
cmp
xor
jb
pop
and
lock
out
pop
dec
mov
inc
jae
or
fwait
lods
cltd
mov
fdivl
idiv
pop
incl
test
jmp
dec
pop
push
aam
sahf
rcrb
insl
push
dec
arpl
xor
dec
mov
push
add
add
std
adc
dec
loop
idivb
xor
mov
sbb
mov
push
test
rcl
mov
add
pop
arpl
bound
test
movsb
clc
xor
sarb
jae
mov
mull
in
pusha
loope
test
jnp
jns
xchg
xchg
jne
pop
lea
imul
out
pusha
hlt
sbb
out
sbb
mov
cmp
add
rcr
imul
fcoms
push
inc
xor
sub
dec
shll
movsl
std
fistl
add
shrl
push
adc
jbe
pop
sti
mov
fwait
dec
xchg
inc
fdivrs
mov
fnsave
fsubs
sbb
repnz
daa
inc
adc
inc
xor
cld
mov
fucomi
pop
xchg
lods
sti
or
sbb
inc
xchg
jns
popf
out
or
arpl
test
sub
xchg
mov
pop
stos
icebp
sar
push
pop
hlt
sub
push
and
rcrl
mov
adc
xchg
adc
es
inc
mov
cmp
cs
xchg
fmul
adc
xlat
sub
cmp
xorl
mov
pop
lret
aam
pop
pop
repz
xchg
add
test
and
aas
jae
adc
outsb
fiaddl
addr16
rclb
cmpsb
fdivrl
loope
adc
repnz
leave
jg
mov
outsb
jge
inc
stos
pop
xor
sub
push
sarb
xor
sbb
adc
aad
cwtl
dec
jmp
or
ret
xchg
test
stos
outsl
and
pop
xor
pop
test
lea
mov
mov
sahf
leave
int
cmp
test
outsl
pop
cmp
push
in
fiadds
cmp
mov
sub
lahf
lret
pshufw
dec
push
adc
sarl
push
fcomi
loop
lock
fcoms
fwait
add
shrl
push
fstpl
pop
popa
icebp
sarl
es
stos
or
cli
shrb
movsl
dec
sbb
mov
xchg
xor
xchg
mov
adc
dec
push
adc
xchg
dec
mov
push
rcll
daa
push
pop
mov
xchg
adc
loope
cmpb
movsl
daa
add
or
insl
jl
push
fisttps
push
jge
stos
movsl
movsb
aas
and
dec
aad
mov
lcall
mov
xorl
into
jl
or
fbstp
mov
aas
mov
movsl
pop
jnp
lcall
shlb
subb
bound
xchg
mov
push
xchg
push
xchg
frstor
hlt
mov
and
adc
arpl
mov
movsl
testb
xlat
mov
lock
aas
pop
test
les
fiadds
addr16
insl
jle
fisubrs
mov
mov
jnp
ret
dec
enter
popa
adc
pop
inc
arpl
mov
jbe
rclb
and
mov
mov
test
xor
ja
outsb
dec
jmp
xor
loope
mov
femms
cltd
push
jecxz
scas
sub
cli
mov
lret
pop
das
xchg
repnz
enter
xor
xchg
shl
mov
sbb
push
sbb
push
aad
incb
fstps
jns
out
or
cltd
xchg
sbb
jnp
xchg
pop
in
idivb
jnp
mov
je
xchg
push
or
adc
scas
iretw
iret
sub
sub
jecxz
mov
jmp
sub
inc
sahf
in
dec
cmp
and
cwtl
jb
xlat
insb
lret
popa
mov
adc
bound
sbb
fs
inc
adc
popf
movsl
sub
xchg
jg
cli
mov
push
movsb
or
jns
das
push
sbb
out
xchg
fidivrl
cmp
or
mov
dec
rcrb
mov
cltd
bound
jp
xchg
gs
test
outsb
sbb
je
jp
mov
xchg
push
shll
pop
shrl
in
repnz
stos
pop
movsl
sub
dec
jno
int3
fcmovbe
cmp
pop
mov
inc
movsb
push
or
xchg
addb
jmp
stos
ficoms
leave
adc
hlt
daa
jmp
jne
icebp
shlb
xor
ss
mov
mov
adc
adc
jae
dec
cmp
mov
es
bound
shlb
cmc
lret
jmp
or
sbb
dec
sub
push
call
mov
inc
inc
sarb
int
std
adc
dec
mov
pop
push
testl
lods
lock
fs
xchg
icebp
imul
outsb
add
mov
fdivrs
push
rcll
hlt
inc
arpl
adc
mov
sbb
je
push
jge
dec
mov
push
add
add
sarl
inc
cmp
es
cli
pop
push
mov
insb
sub
pusha
inc
and
aas
int3
mov
xchg
jne
jge
out
dec
and
lods
push
roll
js
cmc
cmp
sbb
xlat
and
cmp
jle
push
jno
icebp
dec
adcl
ret
sub
shr
jb
cld
movsb
jmp
ljmp
scas
lret
scas
lods
repz
dec
mull
ret
adcl
jge
notl
xchg
push
add
sbb
push
test
push
test
divb
dec
loop
cmp
pusha
movsl
mov
xor
jmp
jecxz
add
les
cmpsb
pop
shl
xlat
mov
xlat
sub
mov
cmp
movsl
in
lahf
adc
cmc
mov
out
add
add
mov
pop
jno
popa
xchg
incl
jge
jecxz,pt
xor
or
lock
mov
jnp
jae
jmp
scas
test
cmpl
shl
mov
test
add
filds
or
in
std
xor
lods
sbb
pop
sti
arpl
and
out
jecxz
imul
mov
in
jmp
pop
rcll
xor
and
cli
inc
lahf
movsl
ds
sbb
mov
push
dec
mov
sub
pop
bound
roll
scas
fbstp
mov
fiaddl
mov
jp
clc
lds
xlat
push
xchg
movsb
mov
adc
xor
push
push
subb
lds
jecxz
and
xchg
mov
mov
js
jno
sbb
pop
sub
sub
sbb
ficompl
dec
test
xchg
push
inc
fwait
sahf
inc
mov
aam
xchg
pop
jge
fcoms
mov
shl
and
dec
enter
test
mov
xlat
jae
dec
pop
ds
movsl
sti
xor
test
mov
dec
jnp
cltd
push
mov
sub
pushf
andb
adc
pop
aaa
daa
mov
xor
jae
pop
out
lahf
push
jl
jnp
out
cmc
push
subl
adc
into
xchg
movq
dec
jno
mov
xorb
mov
xchg
imul
inc
sbb
sbb
ljmp
jnp
inc
fldenv
sarb
add
jne
jge
ljmp
jae
idivb
ret
insl
sub
push
call
push
xchg
push
scas
mov
adc
out
outsb
inc
jo
fdiv
popa
cmpsl
stc
cmpsl
sub
mov
mov
shll
rcr
cmp
or
arpl
dec
jge
xchg
add
xor
lret
jb
bound
sub
lock
fmull
pop
fbld
dec
fwait
out
lahf
dec
outsb
rolb
ret
pop
cwtl
jmp
imul
xorl
pop
cmp
and
xchg
dec
mov
mov
out
pop
inc
in
popa
je
iret
dec
xchg
js
outsl
in
adc
mov
sahf
sub
jge
add
or
into
stos
jg
and
pusha
cmp
in
les
mov
or
pop
clc
insl
and
es
test
sub
push
aad
xchg
outsl
mov
xor
rorl
jle
inc
mov
lahf
out
stos
pop
rcrl
decl
mov
xchg
lret
pop
test
sub
repnz
jbe
sbb
outsb
outsl
es
loopne
inc
mov
lret
outsl
test
insb
inc
xchg
outsb
cmp
imul
xchg
and
in
sbb
gs
or
pop
fnsave
dec
jmp
push
aad
sub
lock
jb
or
mov
and
fxch
push
pop
rorb
sbb
insb
mov
dec
jno
push
lds
fmuls
aaa
out
rcrl
aas
fiaddl
adc
repz
stc
data16
popf
repz
sahf
rcrb
push
cltd
out
inc
dec
dec
leave
xor
xorl
lahf
or
mov
fidivrs
leave
js
adc
sub
fimull
jne
stos
add
mov
adc
add
xor
icebp
jmp
rolb
leave
loope
aad
xchg
mov
xor
fs
inc
push
fsts
in
xor
push
jp
ljmp
adc
jo
int3
arpl
imul
add
add
cltd
jns
dec
lahf
pop
ljmp
sub
jecxz
in
or
cltd
aad
mov
and
or
pop
cli
xor
fisubl
mov
fnstcw
or
rcrb
push
je
lods
mov
mov
inc
test
imul
push
addb
push
and
jl
mov
mov
push
and
les
icebp
sbb
mov
inc
xor
jg,pt
xor
mov
dec
insl
push
xor
lock
jmp
imul
or
hlt
inc
inc
xor
loop
cli
pop
gs
repnz
jecxz
mov
insb
leave
jnp
dec
sbbl
mov
lcall
aaa
sti
outsl
adc
fcomip
mov
out
pop
cmc
lods
xor
xchg
stos
mov
cmp
push
mov
sub
lea
dec
dec
pushf
inc
xchg
xchg
cmp
faddl
jb
xor
leave
fcoms
xchg
imul
cmc
cmpsb
divl
add
ljmp
adc
insb
sbb
pop
dec
cmp
mov
fists
mov
sarb
adc
nop
xchg
adc
push
sbb
dec
jl
cmp
arpl
aam
fmull
daa
xchg
loopne
repnz
dec
inc
hlt
lea
in
xchg
push
sbbb
or
jb
jl
notb
sti
hlt
mov
ljmp
dec
push
loop
xchg
imul
movsl
inc
aad
stc
cmc
cli
into
mov
repz
movsl
notl
mov
adc
cmpsl
or
and
mov
mov
push
movsl
fisubrl
xor
inc
test
notl
jmp
scas
inc
rorb
cmp
adc
push
repnz
jo
std
int3
jnp
push
jmp
sub
jmp
mov
push
push
addw
inc
mov
pusha
fs
mov
dec
pop
mov
add
negb
test
sbb
jg
inc
mov
jge
jne
std
test
jb
cld
push
cs
loopne
jecxz
jg
xchg
movsl
jno
pop
lret
and
push
popf
lcall
iret
shlb
push
dec
lcall
xchg
iret
dec
inc
add
xor
ss
sbb
push
scas
stos
pop
mov
adc
adcl
rol
sti
ss
nop
movsl
jge
xor
add
aad
stos
fiadds
das
fsubrl
mov
push
cld
aad
test
pushl
bound
xorl
imul
xchg
movsb
imul
arpl
push
xor
sbb
adc
ljmp
lock
pop
dec
mov
jmp
fdivrs
test
sub
mov
in
push
xchg
push
mov
sub
fildl
insl
and
pop
cltd
jo
jge
addr16
and
lods
add
xor
sub
sub
add
mov
cwtl
pusha
orb
adc
insb
js
rcl
xchg
popf
sub
dec
push
hlt
loopne
mov
insl
movsb
push
dec
or
mov
insb
bound
iret
and
sub
mov
scas
stc
cwtl
mov
andb
mov
mov
lret
cmp
ret
push
jmp
and
jmp
shrb
movb
xorl
shl
adc
ficompl
xchg
adc
push
ret
jmp
pop
fdivrs
xchg
ja
dec
fucomi
scas
daa
fs
xchg
dec
stos
ss
xchg
mov
fisttpll
fldl
or
out
sub
je
and
push
test
xchg
cmp
push
add
xor
test
andb
adc
nop
mov
int
lahf
jno
pop
fadds
les
cwtl
arpl
adc
pusha
pop
sub
js
cmp
cmpsl
outsb
js
pusha
mov
dec
fcmovnu
push
cmp
repnz
ljmp
mov
jno
sbb
lods
fucomp
and
repnz
mov
pop
aad
adc
das
repnz
dec
outsl
mov
inc
inc
leave
adc
negb
and
inc
xchg
notl
mov
mov
out
inc
and
insb
mov
cmp
lds
inc
pop
adc
jecxz
mov
fstl
aad
push
jl
sub
cwtl
add
push
orl
out
lods
mov
push
test
ljmp
arpl
pop
cmp
les
je
jno
arpl
adc
stos
les
lret
jp
add
pop
push
inc
fnsave
xlat
fildl
add
aad
xchg
push
mov
or
pop
mov
in
sub
sub
inc
test
insl
mov
push
mov
aad
sti
pop
aas
jno
mov
xchg
mov
icebp
fstps
sbb
adc
xchg
or
lret
fildl
call
jge
xlat
mov
mov
xchg
fwait
mov
cmpsl
jl
lods
mov
mov
mov
xor
cltd
cmpsb
dec
cmp
cmpsb
aad
arpl
vmovq
and
pusha
inc
inc
sbb
add
dec
adc
and
cltd
rol
fwait
das
push
out
jge
frstor
jnp
popf
add
outsb
stc
outsl
iret
ss
cmpsb
rcl
nop
call
jo
sbb
stos
push
add
fsubs
std
out
mov
popa
pop
fiadds
arpl
jmp
push
je
jecxz
sub
xchg
sahf
repnz
std
popa
stos
cmp
movb
inc
dec
dec
mov
out
lds
lods
xchg
dec
xchg
and
lret
pop
movsb
add
rorb
xor
adc
in
xchg
mov
mov
les
int
push
cmp
mov
out
aad
and
dec
out
roll
sahf
cmp
pop
and
ds
xchg
pusha
fs
in
xor
jne
or
outsl
mov
cmc
lret
mov
insb
enter
insb
or
loop
sbb
inc
dec
je
or
dec
or
sbb
add
cmpsl
mov
xor
pop
test
dec
test
mov
adc
xchg
jns
out
xor
cmp
stos
dec
call
loopne
pop
outsl
loop
and
add
cmp
inc
pop
pop
mov
lcall
mov
and
out
sbb
dec
dec
adcb
cs
mov
aas
mov
cli
inc
mov
push
xchg
data16
nop
jp
jle
js
aaa
mov
inc
mov
aam
fistps
mov
ja
jge
clc
scas
rcr
mov
rorb
popa
add
cld
add
mov
ficomps
sub
outsl
mov
sbb
xor
xchg
stos
push
and
mov
insb
insb
lret
fstpl
inc
and
cmp
inc
add
dec
or
sub
insb
xchg
jecxz
adc
movsb
jbe
cmpsb
xchg
jns
sbb
jne
shlb
ljmp
imul
leave
pop
inc
je
andb
test
fsubs
popa
call
popf
jmp
lcall
lret
pushf
scas
cmp
fsubs
lock
pop
adc
cld
inc
inc
sbb
imul
lods
and
pop
pusha
sbb
test
pop
fsub
lea
cltd
popf
shl
mov
inc
push
loope
xchg
push
mov
mov
mov
out
shl
mov
push
push
xchg
mov
test
and
or
int
std
inc
sub
mov
xchg
add
decl
or
sahf
jmp
das
pusha
sub
popf
cli
cltd
jp
loopne
add
je
data16
cmpb
nop
add
mov
pop
sbb
xchg
adc
mov
add
push
xchg
pop
sbb
mov
and
fsubrl
dec
and
xor
or
xor
mov
pop
push
nop
popa
out
shrl
xchg
and
stos
or
jne
into
or
gs
mov
fdivl
sub
dec
repz
pop
adc
push
fistpl
jb
out
in
ret
repz
insl
movsb
fwait
or
push
and
pop
in
outsb
in
push
leave
pop
or
in
push
dec
push
lods
jns
mov
lds
std
adc
jle
int
jne
sbb
and
dec
xchg
in
sti
xrelease
sub
pop
ret
pop
in
in
into
mov
add
popf
scas
pop
cmpsl
imul
xlat
jns
stos
inc
push
adc
adc
cmp
lock
xor
and
xor
in
jae
hlt
mov
addps
push
jo
or
or
mov
ja
dec
sbb
adc
aaa
pop
jp
dec
lret
cmpsl
inc
int3
mov
test
push
iret
icebp
pop
mov
fisttpll
iret
or
mov
mov
addr16
mov
push
mov
test
adc
cmp
mov
or
outsb
sub
xchg
jnp
inc
and
or
nop
jno
clc
add
fidivrl
ret
cwtl
test
adc
les
sbb
mov
call
mov
lcall
popf
cmpsl
add
scas
lahf
into
ror
sbb
pop
push
add
pop
cmp
lret
out
cmpsb
mov
stos
addr16
and
or
jae
jge
mov
rcrl
push
loope
push
test
add
inc
nop
cld
fisttps
xor
loopne
insb
adc
mov
mov
popf
push
andb
add
rcl
aaa
scas
adc
packuswb
add
jge
adc
mov
ret
and
sbb
pop
and
data16
or
or
insl
ret
xchg
mov
xchg
out
mov
add
dec
xor
sbb
call
fsubrl
es
mov
adc
fs
mov
out
inc
mov
iret
outsl
and
xor
and
icebp
mov
movb
pop
test
int3
or
sub
xor
lock
popf
popf
fdivs
xchg
cltd
lds
dec
es
pop
mov
int
cmc
mov
mov
fcmovne
mov
jno
mov
inc
mov
sub
xor
pop
repnz
lock
dec
imul
or
sbb
mov
daa
jo
int3
adc
arpl
mov
xchg
pop
idiv
jbe
fsts
or
outsl
fildll
and
push
popf
add
and
inc
jns
inc
popa
shl
les
dec
leave
xchg
jle
sahf
xor
rorl
stos
mov
cli
je
jne
dec
jmp
xor
mov
test
fbld
rolb
ror
lods
sbb
push
cmp
adcl
inc
push
cwtl
mov
subb
lock
cli
out
push
leave
mov
and
mov
gs
push
mov
repnz
enter
popf
inc
gs
sub
jl
pop
leave
enter
lahf
or
gs
add
orb
out
icebp
dec
sub
and
or
pop
sbb
lret
repz
sub
pop
nop
flds
iret
xchg
or
mov
popf
je
in
sbb
adc
and
mov
jmp
test
inc
push
xor
ljmp
lcall
test
dec
or
leave
cmp
push
insl
imulb
jecxz
sti
es
sbb
es
ja
inc
fimull
xor
mov
and
push
cmpsb
inc
and
pushf
inc
clc
ficoms
inc
test
data16
sub
mov
sbb
xor
cwtl
les
add
lahf
or
rclb
sbbb
imul
xor
lahf
data16
pusha
cmp
add
inc
mov
inc
mov
stos
fsubrs
push
xchg
ljmp
xchg
loop
mov
push
jmp
sti
in
push
jp
sbb
xchg
mov
xchg
sub
push
les
pop
cmpsl
aad
int
or
bound
loopne
xchg
arpl
xchg
jg
pop
mov
mov
mov
aas
sub
inc
insb
aas
sub
dec
adcl
mov
fwait
pop
in
pop
sub
shr
stos
sbb
mov
mov
xor
push
push
pusha
add
mov
insl
ret
or
mov
jb
push
ret
sub
in
pop
lret
cs
imul
int3
cmp
sbb
shl
add
shlb
lcall
cmp
pop
repnz
pop
gs
jmp
jbe
cmp
jmp
test
jge
mov
je
or
filds
lcall
xchg
fldt
and
sub
enter
pop
notb
movsl
es
cmp
or
cmp
lods
mov
pushf
aas
stc
in
loope
dec
ljmp
loopne
les
out
push
xchg
orb
inc
or
cld
inc
fucomp
stc
dec
outsb
cmpsb
sub
inc
push
shll
mov
adc
mov
sqrtps
pop
stos
nop
push
adc
mov
inc
cmpsl
push
ja
in
enter
imul
mov
xchg
add
mov
das
or
mov
fcomps
xor
add
std
inc
add
jno
mov
mov
jns
jo
imul
pushw
mov
sub
lds
xlat
out
icebp
or
lcall
inc
subb
jae
stos
test
dec
jns
int3
adcb
leave
jle
shlb
in
cli
test
lret
push
fbstp
mov
push
sbb
jae
negb
js
outsl
js
movsb
pop
mov
int
cmpsl
dec
push
leave
arpl
mov
cmp
dec
xlat
xorl
ror
xor
cmp
mov
loope
jnp
ficoml
mov
adcb
negl
shl
or
das
das
aam
sti
enter
mov
sub
dec
dec
mov
ljmp
lret
outsl
fimuls
xlat
movsb
rcrb
xor
cld
jecxz
out
sub
movsl
shrl
sub
jns
outsb
rolb
mov
mov
mov
std
inc
jge
mov
mov
xchg
cmpsl
les
cmp
xchg
inc
pop
mov
outsl
xchg
push
dec
cmp
shr
pop
lret
cltd
dec
in
sahf
cli
iret
repnz
in
inc
je
xchg
cmp
pusha
sbb
je
mov
pusha
dec
das
fstl
pop
pop
flds
xor
mov
push
mov
and
rolb
out
jecxz
xlat
repz
or
aas
ret
add
jle
gs
pop
cld
or
and
cs
xchg
outsb
inc
loop
jae
inc
ret
xor
adc
nop
and
fwait
scas
pop
xor
hlt
neg
and
sub
aam
lods
pop
adc
dec
adc
out
dec
aam
scas
cmp
jmp
xchg
jae
add
jge
cmovle
ficoms
mov
xchg
dec
cmp
lahf
repz
out
int
add
xor
daa
mov
faddl
jle
arpl
add
dec
cmpsl
adc
sub
or
dec
jb
and
outsb
shl
jg
inc
pusha
sub
ljmp
rcrl
jno
xor
and
xor
push
jp
cmp
popa
jo
shll
inc
rcr
jl
jnp
inc
sbb
xor
jb
roll
movsb
arpl
mov
or
mov
addl
mov
pop
push
fneni(8087
pushf
xlat
pop
test
popa
fildl
popa
test
out
pop
lahf
lock
ss
stos
in
loope
rolb
int3
jecxz
movsl
mov
mov
and
adc
jno
out
add
mov
dec
cs
add
cmp
mov
outsb
dec
push
pop
add
and
mov
roll
pop
sub
in
mov
fwait
or
test
push
pushf
push
addr16
mov
test
gs
adcb
adc
mov
int
and
xor
rcrl
mov
ja
push
lret
dec
mov
adc
sub
insb
dec
add
inc
mov
cmpsl
xchg
fnstsw
in
push
jecxz
pop
mov
ficoml
repz
jns
test
jmp
ja
leave
lea
dec
add
or
or
pop
add
push
jl
sbb
xchg
sbb
or
adc
inc
ss
inc
xchg
fnstenv
imul
sbb
insb
add
sub
movsl
out
inc
jecxz
in
ret
mov
jmp
xchg
lret
push
orb
mov
mov
jecxz
sub
cmp
dec
pop
mov
popa
and
stos
pop
mov
jecxz
mov
data16
inc
ret
push
jge
mov
lods
sti
rclb
xor
jmp
xor
ret
div
dec
repnz
mov
and
push
lods
jae
inc
mov
xor
subl
pop
push
xlat
xor
adc
jle
call
mov
inc
pushf
fistpl
push
aam
lods
test
cmp
sbb
jne
jmp
mov
mov
out
dec
xor
push
jmp
je
jle
rol
push
in
xchg
xlat
lcall
jne
cmp
and
and
fcompl
rol
push
fadds
pop
xor
out
test
bound
pop
mov
fildll
jmp
test
or
ret
aaa
xchg
repz
mov
jge
or
les
fwait
iret
aam
les
adc
or
fdivs
repnz
jo
pop
sbb
or
sbb
je
sbb
fisubl
add
out
addr16
iret
mov
in
mov
mov
inc
push
inc
gs
fiaddl
iret
cwtl
cmpsb
movsl
inc
xor
inc
cmp
loop
and
xor
andl
shl
xchg
push
repz
les
call
adcl
dec
outsb
into
adc
mov
filds
pop
push
pop
insb
lea
mov
repnz
xchg
adc
leave
jae
lds
in
les
rcr
bound
push
fsubp
and
dec
adc
push
test
xor
ss
or
stos
shl
fidivl
pop
aam
fnstenv
xor
in
mov
repnz
in
int3
clc
add
ret
inc
dec
adc
sahf
cmp
pop
xchg
stos
xchg
and
dec
sbb
and
jne
repz
test
imul
jl
push
pop
and
stc
lret
lahf
and
mov
cmp
inc
or
sub
pop
jmp
pop
pop
jg
xor
iret
mov
xor
adc
out
fldl
stos
jb
jnp
loop
xor
xorb
lods
movsb
addl
nop
push
cmp
inc
cwtl
jmp
imul
or
jmp
jb
addb
mov
mov
mov
jb
lahf
mov
ret
in
imul
ds
pop
mov
mov
xchg
out
xor
test
repnz
stos
lds
xor
cli
dec
imul
bound
enter
dec
sbb
xchg
sub
push
cmpsb
or
push
imul
dec
pop
test
xchg
xlat
pop
xlat
das
leave
stos
sbb
in
insl
push
jg
and
sahf
mov
jp
pop
cmp
mov
or
add
mov
je
sbb
cmp
dec
xor
push
arpl
icebp
call
mov
jp
imul
sar
int
cli
js
add
adc
fdivrs
cmpsl
test
cwtl
mov
jno
adc
test
mov
xor
scas
add
in
xchg
pusha
jmp
lock
xchg
xchg
xchg
adc
sub
mov
dec
jae
sbb
jnp
mov
jne
loop
cltd
mov
pop
xlat
std
cmp
cmp
pop
mov
mov
bound
jo
cwtl
fldl
jno
ds
dec
and
cmpl
or
or
xor
sub
es
pop
sti
jno
mov
mov
mov
mov
sub
xchg
dec
xchg
xlat
fidivrs
aad
ss
nop
sbb
xor
inc
out
sbb
xchg
mov
fdivs
int3
cmpsl
orb
gs
ljmp
roll
sbb
or
pop
test
scas
out
inc
xchg
or
mov
shl
movsl
enter
lret
movsl
mov
jne
mov
mov
jg
dec
imul
into
inc
mov
pop
add
imull
mov
xor
in
test
push
push
xchg
mov
lock
repnz
push
inc
push
outsl
dec
mov
push
loopne
int
inc
adc
jbe
or
xor
hlt
lds
lods
mov
in
mov
movb
mov
mov
sbb
xchg
adc
sub
mov
out
test
push
gs
inc
andl
movsl
cmpsb
dec
jns
sub
jbe
movl
jne
mov
xor
jp
fs
or
or
inc
in
pop
sbb
arpl
cmpsb
out
pop
jle
xchg
mov
sub
out
and
rcr
repnz
call
or
cmp
outsb
ret
or
shr
push
out
fcomps
xchg
test
std
pushf
and
or
sbb
rcr
addl
mov
lea
push
scas
cmp
fists
and
das
xchg
jo
mov
add
xor
clc
pop
adc
cmp
lret
test
nop
out
dec
fwait
shr
adc
mov
sbb
jmp
loop
sbbb
cwtl
pop
add
cltd
scas
dec
dec
mov
int
pop
jne
flds
test
mov
out
out
mov
mov
add
inc
fisubrl
and
add
lahf
pop
outsb
das
loopne
inc
pop
push
cmp
mov
scas
adc
pushf
xchg
dec
xlat
inc
bound
mov
in
mov
and
lods
divb
sbb
outsl
enter
into
mov
mov
pushf
dec
out
dec
scas
adc
repz
incb
lock
fcmovnb
jp
xchg
cmp
and
xchg
rclb
add
rol
daa
push
adc
rol
out
mov
out
mov
push
ja
xor
dec
pop
jne
je
push
rcr
cmp
cmc
test
out
lods
adc
lds
push
cmp
hlt
sub
push
dec
push
lods
xchg
or
mov
jl
cmp
jmp
and
jge
cmpsb
insb
sti
add
mov
sbb
mov
cmp
dec
cmc
cmpl
xchg
test
push
xchg
pop
popf
mov
jno
sbb
xchg
out
mov
sub
mov
popf
std
rcrl
push
stc
popf
lock
push
mov
lds
cmp
stc
and
lods
mov
pop
pop
int
mov
sub
rorl
mov
ficoml
lock
pop
das
jnp
lret
daa
gs
cmpsl
fsubl
sub
lret
pop
js
gs
fimull
fcomip
rcr
call
inc
adc
fisubl
bound
push
cmp
mov
push
imul
dec
jne
mov
mov
or
out
push
shr
jle
jle
push
aaa
rcr
pop
push
imul
jge
add
std
or
xchg
jp
xchg
scas
push
in
out
and
dec
stos
lcall
sarl
ljmp
xor
out
leave
out
repnz
dec
lods
aad
outsl
test
test
call
push
jae
dec
in
xor
pop
add
mov
mov
cmpsl
fnstenv
lock
push
add
iret
pop
mov
in
push
lahf
dec
pop
adc
cmp
jp
leave
mov
insb
shlb
sub
in
add
mov
add
push
stos
add
jae
sub
add
gs
sub
xor
stos
jg
stos
xor
decl
cmp
sbb
sub
xor
pop
mov
aad
test
cmp
and
pop
cltd
inc
mov
lahf
pop
mov
int3
scas
mov
fdiv
and
jo
or
pop
mov
mov
xchg
mov
pop
mov
idivb
aad
imul
loope
mov
mov
rsm
ficompl
add
jl
lea
jnp
mov
and
and
stc
je
xchg
or
jb
adc
add
imul
sbb
imul
adc
pop
daa
inc
xor
push
xchg
outsl
into
and
or
pop
xor
xor
jge
jne
shlb
push
jp
cmp
pop
or
dec
out
jno
stos
shrl
cmpl
fidivl
int
dec
adc
inc
leave
aas
aas
repnz
hlt
cli
cmpsl
sahf
mov
out
outsl
or
cmp
or
adcb
divb
ds
daa
sub
divb
jg
xchg
data16
push
sahf
sbb
fadds
and
adc
sbb
cmpsl
add
test
mov
or
inc
mov
icebp
aam
add
repz
mov
lods
dec
jb
lret
jb
cmp
pop
push
les
jecxz
inc
dec
jbe
notl
adcl
into
dec
inc
sbb
and
lods
sbb
nop
les
jb
shll
push
xlat
pop
dec
add
sbb
mov
sti
xchg
jmp
or
arpl
or
xchg
jno
aaa
arpl
pop
add
test
mov
xor
xchg
mov
iret
lret
loope
stc
mov
mov
andb
pop
cmp
mov
js
jp
rolb
fcoml
mov
call
mov
jbe
ja
or
test
or
insl
dec
pop
sbb
movsb
ljmp
lock
fildll
sub
pop
pop
cmpsb
cmpb
sbb
cmp
sub
insb
adc
inc
leave
xchg
cmp
pushl
mov
adc
mov
pop
je
out
pop
mov
sbb
push
cmp
aaa
shrl
mov
jmp
enter
mov
nop
jge
in
stos
mov
push
pop
cmpb
aad
sbb
xorl
nop
loop
ret
js
push
test
test
pusha
pushf
divb
aas
xchg
inc
mov
or
mov
pop
inc
sbb
mov
inc
or
pusha
ds
jo
fcmovne
xor
mov
sti
push
pusha
repnz
xchg
ja
roll
adc
mov
push
adc
ret
dec
xchg
mov
cmc
lds
das
add
mov
ja
and
das
enter
jnp
or
lea
js
xchg
popf
subl
xlat
loopne
sbbl
dec
ja
jmp
std
into
outsb
sub
stc
sub
jns
xor
loope
clc
arpl
lcall
jnp
mov
insl
jecxz
stc
pop
xchg
xor
lds
cmpsl
cmpsl
mov
mov
notl
add
pusha
mov
int
stc
push
push
mov
outsb
lds
pop
cmpsl
repz
mov
loope
or
pop
push
jo
jne
cmc
ret
mov
roll
insl
sti
fsubrl
push
pop
outsl
out
xchg
xchg
cmc
out
js
psraw
aad
imul
or
int3
sbb
cld
and
repnz
jnp
mov
bound
dec
sti
addl
push
mov
dec
js
or
jo
enter
loope
mov
inc
inc
mov
pop
jecxz
cmp
mov
test
mov
lods
mov
sbb
sbb
jno
sbb
adc
push
fsubrl
xchg
arpl
sub
pop
mov
jmp
outsb
cmp
dec
fs
out
scas
gs
mov
push
test
in
push
fbstp
push
push
ficomps
dec
hlt
test
in
and
mov
sbb
push
jge,pn
aaa
xchg
sbb
sub
xchg
cmc
xor
lret
out
enter
jae
fs
rolb
test
cmpsl
iret
shll
ds
pop
xor
in
add
rcrb
fwait
jecxz
rcrb
cwtl
jge
inc
sub
in
rcl
arpl
mov
mov
and
cli
icebp
in
push
jle
sbb
xlat
push
xor
sbb
sbb
pop
in
lods
xchg
mov
cmp
jns
or
pop
mov
jecxz
adc
iret
cwtl
mov
xor
mov
shrd
xor
ret
mov
dec
mov
ss
sub
loop
jb
lods
out
xchg
outsb
jecxz
jmp
ficoms
fstpt
or
cmc
call
mov
idivb
dec
ret
push
sbb
or
jno
mov
mov
dec
cld
mov
pop
notl
jle
mov
arpl
fs
nop
xchg
sub
faddl
lods
mov
mov
and
and
pop
mov
out
pop
push
jmp
inc
cmovne
dec
adc
inc
enter
fists
push
movsb
dec
or
repnz
hlt
das
aad
bnd
outsl
mov
insb
xor
int
lods
mov
hlt
enter
notl
addr16
cltd
and
jmp
xchg
push
cmpsb
cmc
or
loop
pop
push
js
pop
xor
dec
punpcklbw
enter
les
inc
and
inc
pop
nop
and
sar
out
and
aas
rorb
lahf
inc
in
sub
fsubs
or
es
les
loop
notl
jmp
cli
je
mov
inc
jl
jno
shll
sbb
push
lcall
mov
mov
lock
xor
ret
fidivrs
or
sub
push
cmp
sahf
inc
push
or
repz
dec
and
push
lahf
push
push
inc
jo
and
xchg
jns,pt
pop
jae
outsb
inc
gs
notl
negl
xchg
mov
fucom
jo
jnp
lret
inc
scas
es
sub
xor
push
outsl
mov
lods
shufps
inc
inc
cs
std
nop
push
xchg
xchg
sti
mov
icebp
sub
les
dec
adc
aam
xchg
mov
leave
lock
ret
shll
hlt
xor
imul
pop
faddl
push
pop
fldenv
jp
mov
popf
es
mov
mov
xor
aam
push
inc
sbb
ret
mov
movsl
ljmp
xchg
xlat
cmc
and
lret
mov
int3
mov
jo
sbb
inc
ret
jb
push
std
bound
arpl
ljmp
int3
jno
push
int
andb
mov
in
mov
loop
out
or
sub
stos
ret
mov
ja
stos
mov
clc
xchg
pop
lcall
sub
clc
test
call
in
test
sbb
sahf
scas
fstl
pop
lret
rorl
test
cwtl
cmp
and
std
jno
fsubr
mov
cmp
mov
or
aad
dec
push
iret
xchg
movsl
std
mov
bound
addr16
xlat
pop
subl
cmp
imul
xchg
fiaddl
push
mov
das
jno
push
xorb
cmp
or
jp
cwtl
sub
pop
adc
push
ret
xchg
xchg
loopne
xchg
sub
pop
inc
pop
push
adc
idiv
sbb
cmpsl
dec
and
ret
jae
rorb
add
jns
dec
lods
xchg
or
nop
into
fbld
fcmovu
stos
stos
aam
sarb
icebp
add
cli
ss
out
xor
xlat
xor
sbb
bound
into
cmpsb
push
and
and
cltd
jbe
jle
cmpsb
sahf
push
lahf
stc
adc
fsubl
push
les
inc
mov
out
punpcklwd
jb
fs
cs
adc
out
in
jge
inc
lock
shr
daa
sub
pushf
jle
loopne
in
jle
mov
outsl
xor
adc
rcll
or
pop
jp
cmp
loope
std
sub
bnd
ss
test
lahf
lods
mov
mov
mov
push
sub
in
ss
push
pop
inc
out
sub
push
sbb
cmp
mov
aaa
clc
sub
mov
or
or
dec
mov
rcr
lea
jne
push
sbb
mov
pop
jns
dec
fldl
mov
or
sbb
shll
pop
xor
jmp
or
pop
add
stos
mov
stc
fists
test
in
aad
repnz
je
push
fwait
push
push
mov
adc
add
mov
arpl
adc
jg
stos
icebp
push
mov
idivl
sbb
push
push
mov
push
or
lods
jg
mov
lock
dec
mov
cmp
rorb
ja
xlat
xlat
mov
into
cmp
test
push
xchg
mov
movsl
xor
call
addb
push
mov
sub
repnz
and
jp
mov
pop
test
test
std
pop
cli
jp
lods
push
mov
mov
mov
jle
iret
sarl
inc
jb
loop
ljmp
mov
xchg
nop
adc
lods
and
mov
ja
int3
sbb
adc
js
in
out
cmp
jb
sbbl
mov
test
xor
enter
xlat
lcall
movzwl
shlb
pop
movsl
xchg
and
mov
aam
iret
es
fsubl
int
or
push
push
test
xor
add
sar
jae
dec
jns
les
movsl
rolb
cmp
mov
imul
cld
lret
pop
mov
scas
je
push
mov
mov
adc
pop
js
push
mov
dec
xorb
pop
leave
xor
jne
bnd
xor
mov
xor
insl
lods
mov
popf
lcall
ficompl
add
mov
jns
sahf
es
adc
std
mov
mov
inc
sahf
cmp
je
adc
in
and
sbb
push
cmp
mov
add
and
jecxz
imul
mov
jecxz
or
or
jg
lcall
xchg
popa
cmp
incb
cmp
movl
sub
jno
rorl
adc
movsb
xchg
sti
add
and
and
or
leave
negl
aam
mov
test
pop
mov
vpxor
out
pop
cltd
scas
fldl
int3
sub
gs
repz
sbb
mov
mov
adc
ret
lret
and
arpl
aas
cwtl
cld
mov
sbb
lea
fs
scas
rcl
xchg
mov
pop
aad
insl
adc
inc
daa
inc
test
ficoml
hlt
ljmp
fdivrs
adc
fxch
dec
sbb
loope
cmpb
sbb
sti
mov
sub
or
icebp
lds
jo
outsb
add
xchg
testb
das
jl
dec
cli
es
sub
sbb
add
add
or
jp
cmp
and
in
pusha
jge
lret
mov
aas
jno
call
outsb
xorl
jae
inc
mov
mov
shld
xorl
fldl
xor
loop
das
or
mov
push
add
aam
xchg
xor
scas
xchg
push
lods
es
jb
cmp
xchg
js
inc
test
das
rcl
or
xchg
into
xor
shlb
movsb
jl
dec
push
or
and
repnz
lcall
dec
pusha
lcall
clc
pop
jno
ds
cmc
pop
fwait
jne
insb
dec
mov
mov
scas
cmpb
aas
movsl
mov
jmp
sarb
sarb
in
outsb
mov
xorl
push
mov
call
jns
leave
mov
mov
ret
mov
jbe
test
pop
push
mov
shlb
outsl
adc
jnp
push
shll
fdivrs
cli
iret
call
mov
stos
dec
push
int3
scas
imul
jns
jle
in
push
std
mov
jmp
fldt
dec
and
icebp
pop
hlt
cs
cmp
mov
jno
hlt
imul
dec
repnz
gs
add
les
pop
test
scas
mov
push
int
xchg
sbb
test
add
pushf
pop
out
push
movsl
sub
xchg
dec
cld
xchg
mov
aaa
in
add
outsb
repnz
test
into
push
mov
sub
pop
movsb
cld
mov
imul
fcoml
rolb
adc
leave
lea
cmp
jp
jp
inc
or
sbb
int3
sti
sbb
shlb
sub
cwtl
xor
ret
movsb
pop
inc
stos
push
fnstsw
push
lea
imul
jo
std
xor
cmp
or
daa
inc
fs
push
inc
repnz
arpl
subb
xlat
gs
pop
push
mov
fisubl
js
pop
popf
push
xchg
xchg
addr16
jge
hlt
push
pop
sbb
mov
addr16
xchg
dec
xchg
popa
sub
mov
gs
into
scas
lods
dec
aad
pop
xchg
lods
push
sub
int3
pop
rclb
pop
xor
lock
or
mov
nop
shr
mov
in
or
push
cmp
icebp
scas
loope
incb
je
sbb
and
or
jle
xchg
repz
mov
jle
xchg
jg
adc
or
mov
and
mov
stos
popl
add
xor
movsb
aad
jnp
scas
imul
stos
push
mov
and
sbb
push
test
popa
mov
insl
push
xor
dec
adc
mov
ja
and
mov
cmc
and
fmull
dec
sbbb
sbb
and
adc
xor
pop
mov
repnz
loop
test
push
and
iret
and
inc
pop
add
fwait
das
andb
in
sbb
shlb
or
mov
lret
xor
nop
jbe
xchg
and
mov
xlat
mov
hlt
ja
push
jae
fidivl
inc
es
ficoml
add
js
add
data16
cmp
std
aas
mov
mov
aas
pop
mov
or
or
orps
cmc
sub
inc
and
fnstcw
pop
dec
xchg
pop
aas
repz
movsb
popf
dec
mov
add
jl
aas
aaa
mov
jge
mov
jecxz
jecxz
xchg
cwtl
pop
jg
scas
cmp
ljmp
xchg
lcall
add
in
xor
jg
xchg
jns
pushfw
jo
daa
dec
fbld
xchg
cmc
addb
mov
call
movsl
fdivrs
mov
push
jmp
push
ja
es
push
sbb
and
loopne
pop
xchg
lods
test
mov
adc
xchg
mov
fwait
pushf
xor
mov
hlt
add
and
or
and
imul
fnstcw
sub
ret
sbb
dec
rcrl
fcmove
sbb
out
dec
lahf
mov
mov
into
in
scas
push
xchg
popa
fstps
pop
mov
ss
gs
xlat
ds
in
adc
xchg
inc
push
inc
int
cmp
call
mov
enter
shll
aad
inc
dec
xchg
xlat
mov
std
icebp
pop
lret
jne
lret
xor
into
cltd
cmp
daa
xchg
xor
xor
in
mov
mov
ja
mov
adc
inc
test
filds
mov
cmp
sub
aaa
movb
or
add
lods
add
mov
sub
lcall
lods
dec
push
or
mov
add
inc
and
jecxz
inc
mov
imul
in
xchg
test
xchg
sub
lock
pop
xor
fistpll
in
insl
pop
pop
and
xor
cmc
inc
cmp
es
aad
mov
loopne
cmp
dec
mov
and
add
jecxz
fcoml
mov
orb
adc
xor
mov
pop
testl
repnz
int3
fimuls
xor
es
inc
in
jnp
test
scas
push
jp
fsub
into
pop
inc
mov
subb
xor
rorl
popf
imul
push
pop
add
les
out
sbb
pop
js
mov
std
notl
aad
pop
cmp
adc
push
sbb
out
xchg
mov
hlt
mov
jecxz
movsb
mov
mov
sbb
jb
mov
cmpl
push
aam
xchg
fs
dec
aaa
xchg
mov
inc
call
adc
imul
jae
or
test
pop
pop
push
pop
adc
inc
push
sbb
xlat
mov
xlat
test
inc
in
bound
pushl
push
sub
scas
jecxz
jge
cmpb
pop
cmp
cmp
jl
inc
push
les
jecxz
in
cwtl
scas
fnstcw
pop
xchg
or
adc
ret
jbe
xor
les
or
hlt
mov
out
dec
jmp
push
and
push
cmc
or
lods
pop
dec
fcompl
in
cmpsl
fs
add
push
cmp
rcl
dec
daa
mov
xor
dec
shr
in
sbb
movl
lahf
xorb
insl
cltd
fsubrs
cltd
rcll
daa
andl
es
or
inc
mov
mov
and
cmp
xor
jl
test
test
pop
xor
les
jnp
jecxz
and
je
test
dec
out
js
test
fsubl
test
sbb
pop
in
mov
xchg
das
arpl
cmp
mov
mov
pop
ret
or
ficomps
sub
push
pop
daa
inc
int
xchg
mov
jnp
ficompl
adc
notl
jmp
sbb
in
scas
test
mov
aad
mov
outsl
sbb
lock
outsl
pop
fnstcw
push
adc
iret
xchg
in
sub
lods
mov
cmpsl
lods
inc
lea
adc
jbe
stos
mov
dec
mov
push
xchg
mov
pusha
aam
ja
inc
cmp
es
jg
mov
pop
jmp
xchg
jb
movsb
adc
jg
icebp
shl
test
jae
scas
push
pop
sub
mov
or
ja
inc
sahf
push
inc
fcomp
fdivl
lahf
insb
fdivs
pop
lea
ret
loop
push
adc
fsubrs
inc
push
dec
cmp
jmp
lret
jno
test
xor
mov
pop
aaa
mov
push
jge
pop
add
ficoml
aas
cmc
sbb
mov
xor
into
sbb
cli
dec
pop
or
cli
in
in
out
jae
je
rorl
cmp
sbbl
pop
movsb
push
popa
add
add
das
jge
outsl
out
jno
jmp
andb
jp
xchg
in
leave
sub
mov
insb
cs
pushf
in
xchg
mov
xchg
jo
mov
and
clc
dec
cmpsl
mov
jnp
cmpsb
int
cmp
or
push
xchg
inc
cs
mov
adc
dec
push
cmp
into
sbb
cmc
add
adcl
dec
jae
adc
es
cltd
xchg
or
daa
dec
adc
decb
dec
fwait
roll
and
cmpsb
bound
sbb
mov
ljmp
lcall
mov
xchg
lods
std
inc
shlb
pop
aas
in
jp
cmpsl
sub
addr16
rcll
mov
addr16
cmp
mov
lahf
adc
jns
test
dec
ret
add
dec
jae
mov
cld
jb
pop
cmp
mov
inc
push
mov
out
in
adc
mov
mov
test
into
cmpsl
lods
push
inc
stc
mov
lea
cmp
inc
insl
dec
ret
push
lea
das
inc
call
mov
dec
xchg
jmp
cmp
rcrl
xchg
sub
jmp
test
lcall
push
mov
test
lcall
enter
cld
mov
std
add
das
hlt
lret
mov
insb
add
sbb
fidivl
and
pop
das
mov
popa
ret
mov
cmp
leave
mov
mov
pop
hlt
pop
mov
dec
sub
hlt
mov
cmc
adc
outsl
push
inc
or
dec
call
mov
frstor
mov
mov
rcr
inc
fdivl
int3
xor
and
outsb
jnp
fs
jecxz
hlt
cmp
jl
call
lahf
jp
sub
icebp
in
and
repz
jo
lret
xor
mov
insb
scas
idivl
add
xchg
movsb
lcall
in
pop
pop
es
gs
fcoms
fwait
test
cwtl
dec
dec
inc
or
inc
inc
add
bound
adc
mov
shlb
mov
loopne
vmovmskps
inc
test
arpl
stc
sbb
cmc
loopne
mov
shrb
mov
xchg
ret
test
xchg
std
pop
aad
stos
aas
sbb
dec
and
jg
pop
roll
xlat
xor
lea
popa
fldt
add
push
xchg
jp
adc
jbe
insl
popa
jmp
xchg
jecxz
jnp
es
inc
add
push
xor
push
cmpl
inc
enter
sbb
fiaddl
aas
orb
mov
dec
xchg
enter
outsl
cs
and
sbb
inc
push
add
sti
das
pop
inc
out
out
mov
insl
and
test
push
stc
aaa
pop
scas
mov
mov
aaa
cmc
add
xchg
inc
insl
mov
mov
sbb
in
or
push
cmpl
pop
push
push
popa
leave
lods
pushf
aam
cs
imul
push
pop
push
push
inc
or
sbbl
int
testl
or
cld
cmp
sahf
inc
xchg
dec
cmp
lods
mov
adc
test
cli
into
sub
inc
ret
bnd
pop
xchg
xchg
pushf
aam
or
sbb
fdivs
sti
inc
or
insb
pop
ljmp
pop
fdivrs
pop
std
adc
inc
xchg
mov
add
adcl
pop
push
xlat
fs
out
aad
pop
stos
jbe
sub
mov
stc
mov
cmc
pop
jle
scas
and
hlt
sbb
mov
fwait
imul
sub
xor
and
sbb
popa
les
ss
mov
inc
inc
or
int
xor
mov
xchg
leave
mov
icebp
out
lea
or
mov
jge
fimull
adc
mov
jl
pop
test
fcmovu
dec
mov
push
xor
jno
es
adc
dec
xor
push
hlt
imul
jne
test
fs
inc
stos
gs
mov
mov
sahf
out
cli
pop
cmp
adc
add
xor
adc
mov
pop
test
xchg
jns
dec
div
pop
dec
ljmp
adc
or
dec
dec
adc
in
mov
mov
cmpsb
lret
cli
pop
dec
mov
ja
mov
orb
xchg
leave
clc
rorl
dec
cmp
rcll
adcb
test
cmp
mov
jge
clc
insl
push
adc
sbb
fsubp
in
popa
mov
out
sub
pop
jl
push
push
into
popa
movsb
insb
or
xchg
rcrb
call
sub
popa
and
mov
lods
sbb
sahf
repz
ja
fcmovnu
jmp
cmp
ss
cltd
cmc
cmpsb
sti
in
adc
cmp
push
je
fsts
push
jo
mov
mov
inc
lea
mov
sub
push
aas
mov
aas
xchg
sbb
mov
das
rcr
xchg
mov
jb
mov
int3
push
sti
mov
in
mov
loopne
pop
inc
pop
pop
lcall
icebp
push
dec
ljmp
int
xchg
ja
fcoml
pop
jne
test
mov
rorl
jecxz
cltd
imul
into
pop
dec
icebp
mov
mov
mov
cld
sahf
mov
hlt
outsl
or
dec
les
enter
push
mov
cmp
loop
jmp
mov
jbe
mov
mov
sub
mov
pop
cmc
pop
cld
inc
int
pop
aas
mov
mov
xchg
mov
leave
movsl
dec
inc
mov
int
ss
in
inc
jl
imul
gs
cli
xchg
lret
add
imul
or
or
sub
stc
dec
mov
pop
sbb
push
dec
jg
mov
int3
and
fnstcw
pop
fucomp
add
add
dec
shll
fsubl
inc
popf
pop
dec
les
jge
cmp
icebp
mov
js
and
jbe
int3
lods
std
test
jecxz
push
jg
in
aas
sti
xor
pop
scas
out
mov
test
in
and
out
int
sarb
push
lret
mov
lahf
sbb
push
inc
data16
cltd
sahf
pop
icebp
mov
add
bound
or
cmp
xor
pop
jns
cld
mov
imul
and
mov
in
outsl
pop
push
add
aas
int3
jmp
movsbl
cs
adc
std
push
cmp
inc
pop
lea
mov
cmc
lea
scas
int3
lds
cld
dec
in
cmp
pmaxub
icebp
push
cld
cmp
sbb
ret
or
out
mov
imul
cmp
cvttps2pi
das
mov
xor
mov
jne
mov
and
lcall
rcr
shll
xlat
sbb
imul
rol
fstl
adc
ror
repnz
inc
adc
push
and
fnsave
mov
fsubrs
mov
icebp
add
shrb
jecxz
sbb
lret
mov
add
int
mov
shll
push
dec
into
shrb
popa
mov
jns
imul
bnd
in
or
dec
xor
rcrb
cmp
stc
loope
mov
or
or
pop
mov
pop
movsb
in
and
mov
imul
clc
lcall
cs
fwait
inc
out
popa
loop
in
lret
jle
nop
jp
call
sub
and
mov
int
leave
xor
movsb
or
je
pop
int
int3
mov
in
xor
or
cmc
dec
push
sub
mov
cmp
dec
sti
inc
mov
loopne
fsub
gs
push
daa
cwtl
insb
jo
das
rcrb
ds
xchg
add
cmp
jne
pop
push
dec
and
call
mov
sbb
inc
xchg
push
scas
or
into
aas
aad
ja
xor
cmp
dec
xchg
adc
scas
jle
out
sbbb
mov
dec
outsl
cmpl
sbb
mov
imul
xor
or
mov
pop
mov
pop
or
adc
xorb
out
mov
push
or
push
icebp
out
pop
dec
repnz
lea
test
ret
push
add
and
cmpsl
push
je
sub
jecxz
ret
dec
jecxz
or
dec
xchg
and
dec
push
fs
lret
inc
stos
mov
sbbl
fst
dec
fcmovnu
xchg
mov
and
add
je
lods
mov
mov
dec
mov
add
ror
dec
pop
or
sub
fists
cmc
or
dec
mov
insb
lcall
sahf
mov
out
imul
lcall
pusha
dec
leave
xchg
in
int3
jno
ss
xor
fwait
adc
loope
insb
xchg
mov
xor
mov
daa
pop
adc
add
add
je
clc
je
dec
repz
arpl
ret
jns
mov
adc
test
loope
mov
ljmp
sub
pop
popa
mov
adc
adc
and
shr
or
enter
xchg
sbb
fcmovnb
clc
imul
push
dec
cmp
pop
jae
rol
hlt
ja
sbb
fildll
jo
daa
cmp
mov
pop
or
push
pop
jle
jno
pusha
lret
sbb
lea
ja
or
in
popf
add
jnp
xchg
push
cltd
rorl
push
add
rcrb
mov
mov
fwait
push
add
push
jae
push
mov
cmpsb
lret
pop
movsb
push
or
sub
xchg
outsb
out
aaa
scas
mov
into
movsl
leave
cmc
pop
push
in
xorb
lcall
lods
jp
popa
and
notl
idivb
aaa
jbe
mov
cltd
sahf
shrb
pusha
mov
xchg
inc
pop
xchg
int
inc
add
imul
int3
xchg
rorl
das
mov
arpl
jmp
inc
insl
int3
xor
ret
or
mov
aas
or
mov
cmp
dec
imul
and
xchg
cmp
push
cmp
insl
jecxz
adc
sbb
pushf
mov
das
or
stc
lahf
mov
jae
jns
mov
mov
movsb
sti
adc
push
ficoms
mov
sub
pop
lock
push
dec
cli
inc
js
cltd
adc
or
sahf
in
ss
inc
xor
jge
dec
mov
xchg
iret
inc
pop
shl
xor
in
repnz
adcl
add
inc
cmp
or
cmp
shr
lods
cmp
lds
or
in
mov
mov
add
pop
xor
in
pop
adc
fldz
cwtl
popf
cmc
and
cmpsb
pop
push
sahf
fs
lret
cmp
hlt
inc
xchg
sbb
or
mov
data16
push
test
lea
cld
pusha
cld
je
mov
aas
fmul
test
mov
test
mov
insl
pop
mov
sbb
and
jecxz
and
ljmp
imulb
decb
adc
xor
push
dec
jns
in
pop
add
pop
nop
jb
or
sar
cmc
ret
mov
les
popf
xlat
xor
mov
in
pop
aas
add
pop
add
add
rorl
cmp
sti
outsb
mov
dec
adc
add
aas
add
lods
int3
sub
nop
pop
mov
stc
or
lret
scas
push
pop
in
jo
add
mov
push
fists
cmpsl
cmpsl
jmp
loopne
and
sub
sahf
test
sbb
int3
outsl
dec
outsb
jge
mov
in
in
scas
daa
lods
add
mov
pushf
pop
les
jge
adc
push
decb
jbe
stc
xchg
pop
pushf
enter
addr16
repz
and
or
xchg
cltd
cmp
arpl
xchg
inc
icebp
movsb
test
ljmp
ja
dec
dec
stos
imul
out
xchg
movsl
sahf
mov
sbb
adc
push
aad
rclb
dec
adc
in
enter
jne
jle
and
in
lahf
pop
mov
mov
lods
add
in
sub
loop
subl
cmp
orb
inc
or
adc
in
push
or
cmpsl
dec
ja
arpl
ja
inc
pop
ret
call
subl
and
and
str
subb
das
pop
ret
pop
dec
mov
xlat
std
mov
adc
popa
inc
fcmove
cmp
add
add
and
pop
imul
jb
mov
sti
movsb
jne
adc
cmp
cli
push
or
in
cld
inc
cmpsl
test
mov
mov
outsb
aas
mov
fidivs
mul
push
mov
jns
lods
cmp
adc
pop
fisttpl
out
mov
popa
jb
adcb
mov
sarb
pusha
jl
je
lcall
mull
sbb
inc
pop
inc
jge
mov
lods
cmp
cltd
jp
mov
adc
cmp
mov
mov
add
push
incl
inc
push
mov
push
mov
mov
push
add
jae
out
lods
stc
cmp
loopne
pop
push
mov
sbb
xchg
bound
jnp
ret
jne
pop
xchg
in
scas
and
fnsave
mov
data16
daa
loopne
mov
jne
shl
pop
cli
jo
or
incb
mov
daa
mov
and
xchg
pop
fstpl
mov
in
mov
mov
mov
in
les
mov
nop
and
pop
jbe
repnz
sub
pop
inc
cmc
add
jbe
or
sub
sub
rcll
xchg
xor
das
adcl
scas
cli
inc
in
ja
xlat
xor
ret
loopne
sbb
mov
cmpsb
jge
inc
xor
adc
mov
ret
cwtl
jae
aaa
push
mov
sub
or
lret
fildll
xchg
sbb
mov
fcomi
mov
sbb
mov
mov
sub
and
call
inc
mov
movsb
outsb
dec
cs
xor
push
or
inc
popa
test
daa
iret
xchg
hlt
test
mov
jns
stos
scas
outsb
sahf
andl
lock
mov
mov
sub
jl
cmp
sub
and
insl
or
jge
lods
lock
xorl
push
push
push
mov
adc
mov
lds
jge
ret
sbb
mov
adc
xchg
cmp
jno
mov
fbld
or
es
fsubl
push
loopne
test
cld
fisttps
testb
rolb
ds
mov
notb
dec
lcall
sub
aad
pop
jmp
and
push
inc
lock
mov
pop
adc
cmp
fiadds
aaa
mov
push
insl
adc
mov
or
jo
inc
push
cmp
and
out
imul
fldt
or
inc
pop
mov
es
cmpsl
cmpsb
sbb
jle
xsha1
cmpsb
dec
and
mov
insl
insl
or
push
or
loop
ret
or
jbe
stos
sub
mov
push
ja
imul
or
lock
pop
jbe
dec
inc
sbb
mov
jb
mov
xchg
jmp
push
add
and
fsubs
fadds
adc
testb
mov
clc
sub
pop
or
sti
inc
jg
ds
ja
pop
outsl
pop
sub
mov
out
movsl
inc
stos
add
in
pop
xchg
stos
int
loopne
rol
jbe
lods
cld
sbb
cwtl
call
outsl
cld
ljmp
or
pop
or
pusha
mov
mov
xor
xlat
enter
pop
jmp
xor
into
scas
xchg
xchg
pop
aad
xchg
test
mov
xor
addr16
mov
insl
dec
hlt
pop
push
mov
push
jns
push
sub
inc
leave
xchg
dec
loopne
mov
daa
jbe
pop
push
sbbb
mov
or
sub
cmp
dec
dec
adc
imulb
sahf
mov
out
std
cs
sub
jl
jae
es
xchg
pop
nop
mov
xor
movsl
pusha
jle
dec
stos
cs
popf
imul
je
add
jmp
orl
and
lcall
mov
jle
xor
bound
out
and
orl
lock
roll
mov
fs
aad
in
repnz
xor
add
out
inc
in
outsl
movsb
rcrl
xchg
adc
ret
andl
or
xlat
loopne
lahf
icebp
loopne
push
movsb
pushf
out
aas
or
add
dec
fwait
icebp
xor
fistpl
xor
enter
jo
push
push
test
jae
movsb
jb
icebp
cmpl
ds
mov
fldt
lret
mov
push
pusha
or
or
dec
add
xor
fdivl
add
adcl
push
rorl
cmp
outsl
rolb
lahf
mov
call
adc
add
lods
pop
out
lods
push
sti
ret
loop
push
iret
int3
pushf
insb
mov
movsb
mov
dec
add
fwait
jno
push
lds
mov
lods
hlt
adc
mov
jg
test
and
xor
mov
leave
loop
popf
stos
adc
pop
clc
mov
jmp
out
je
rcr
rcrl
sbb
sub
pop
sub
adc
mov
jp
int
popw
dec
or
adc
mov
call
scas
fsubrs
sub
dec
in
cli
shrl
sbb
mov
mov
sti
sarl
jno
sbb
ja
loop
pop
sub
push
mov
xor
test
insb
xor
jno
cmp
js
je
adc
mov
enter
lret
pop
push
lret
xor
or
sbb
push
dec
gs
pusha
cltd
mov
jno
stos
fistpl
adc
mov
jo
sbb
lahf
in
fstpl
shll
lret
pop
mov
sti
sub
fbld
mov
lret
sarl
daa
cmp
or
sbb
push
pop
mov
sub
stos
fwait
cmpl
sbbb
leave
je
mov
adc
je
sub
sbb
cld
pop
aam
enter
xchg
pop
adc
inc
or
das
pop
pushf
inc
pusha
mov
mov
test
add
push
sarb
mov
xlat
push
insb
jge
push
out
ret
mov
sub
xchg
aad
xchg
inc
xlat
test
rcr
repnz
mov
add
xor
fistpl
push
push
mov
ja
scas
addl
sbb
fidivs
rclb
ljmp
cli
enter
out
addr16
test
movsb
aas
pop
jbe
gs
adc
stc
mov
es
inc
push
jno
call
fistps
or
jp
fdivrs
inc
icebp
cmpsl
dec
pop
mov
sbb
dec
xchg
inc
shl
ja
lret
jbe
pop
xchg
ret
pop
shr
and
cmp
xchg
xor
sbb
sbb
xchg
arpl
stos
push
out
loop
cs
stos
push
xlat
out
xor
mov
pop
adc
daa
sub
and
pop
add
repnz
out
outsb
fcomip
mov
das
dec
or
push
mov
and
push
or
or
adc
repnz
cmc
fisubl
aaa
mov
fstps
sti
imul
xlat
xor
cld
pop
xchg
js
lock
test
pop
mov
sub
push
popf
push
jge
js
clc
sahf
mov
hlt
push
push
test
sbb
mov
fcoml
mov
loopne
adc
rorb
pop
aas
xchg
js
jmp
insl
test
push
dec
cli
dec
es
push
sub
jg
jnp
ret
fstl
lret
dec
hlt
loopne
mov
mov
cld
dec
add
jp
xchg
rcl
and
and
popf
ret
stos
jnp
in
inc
das
icebp
jle
repz
pop
lock
xchg
or
mov
lcall
in
sbb
add
xchg
cmp
in
adcl
addl
and
fcomp
hlt
mov
and
lods
mov
xor
movsb
lcall
fidivs
pushf
test
or
jnp
and
dec
ret
cmc
adc
dec
cmovl
popf
pop
jmp
cli
mov
xchg
popa
pop
add
stos
mov
ljmp
sub
faddl
mov
js
xchg
sbb
jbe
out
xor
movsb
cmpsl
aaa
xchg
cmc
xor
mov
xchg
dec
and
call
test
push
loop
movsb
mov
push
add
outsb
cmp
je
push
xchg
in
popa
pop
aam
and
lods
in
aaa
scas
andb
xchg
pop
loope
xor
daa
in
pusha
dec
jmp
leave
pushf
lock
into
xorb
rorb
sbb
scas
aad
mov
inc
fs
or
ficoms
lds
pop
lret
popf
cmpsl
mov
lahf
jle
cltd
mov
mov
push
or
and
push
stos
mov
adc
pop
xchg
cmp
mov
xlat
sti
adcl
adc
mov
stos
in
orl
dec
jg
repnz
and
mov
or
pop
mov
cmc
in
mov
cli
inc
sbb
sti
xchg
push
push
adc
cmc
dec
dec
movsl
sub
push
loopne
lea
cltd
mov
push
sub
dec
mov
emms
loopne
js
cli
adc
pop
xchg
xor
fstl
scas
popa
jp
adc
ja
mov
notb
test
adc
lahf
push
adc
and
push
jb
push
jge
out
loop
sbb
lcall
lahf
jecxz
jle
mov
xor
nop
out
ffreep
sarb
jmp
outsl
xor
xor
push
push
mov
sti
xchg
mov
subb
mov
and
test
out
adc
adc
jmp
xor
cmc
test
lret
dec
idivl
push
mov
sbb
pop
aas
pop
loope
leave
or
pop
popa
mov
cld
pop
sub
gs
leave
push
sbb
mov
pop
adc
lret
pop
jno
fcmovb
pop
out
iret
in
or
pop
loopne
mov
divb
xchg
clc
push
jl
stc
and
clc
or
pop
mov
minps
sub
js
cmp
or
add
sbb
dec
pop
xchg
imul
sbb
dec
push
jne
sbb
and
mov
dec
iret
push
cmp
jmp
popf
jnp
in
pop
or
lret
jbe
roll
fadds
and
mov
mov
push
mov
out
out
mov
mov
add
add
iret
pop
incb
or
pusha
jns
insl
push
pop
mov
and
icebp
loope
xor
test
fwait
pop
iret
inc
imul
ss
jnp
xor
add
push
xchg
insl
sub
je
es
push
ret
jp
imul
dec
sub
mov
pop
dec
mov
and
fwait
scas
hlt
fstpl
xchg
loop
mov
insl
add
and
sbb
sbb
pop
test
jp
jge
orl
xlat
cmp
popf
mov
pop
mov
jmp
jg
jge
push
ss
jb
inc
mov
sbb
and
shr
push
sub
cmpsb
adc
dec
add
ret
pop
lcall
sbb
ljmp
push
push
test
push
test
mov
mov
dec
push
dec
fnsave
adc
cli
xchg
inc
scas
cmp
lock
mov
push
daa
out
pop
mov
xor
xchg
stos
ds
pop
js
add
mov
jbe
daa
xor
cmp
sti
sub
xchg
int
xchg
mov
inc
movb
push
mov
xchg
pop
mov
sti
loope
lret
xchg
inc
jle
cmp
sub
out
movsb
add
movsl
adc
xlat
jmp
inc
int3
subl
jne
mov
mov
mov
insb
jo
or
sbb
mov
fdivl
xchg
xor
data16
out
outsl
test
daa
push
mov
mov
pop
cltd
cmp
jns
xor
push
or
repz
ret
push
outsl
xchg
fwait
pop
mov
icebp
dec
sub
push
ss
push
sub
xor
out
or
cli
pusha
xchg
pop
incl
cmp
addl
dec
scas
clc
lcall
or
ret
sbb
push
or
lcall
fcomps
shlb
in
or
jae
cmc
push
shlb
test
mov
enter
aas
cmpb
pop
mulb
pop
xor
subl
ret
sbb
cmp
xor
mov
add
hlt
jno
cwtl
ret
scas
scas
bound
lea
mov
adc
mov
movsb
xor
mov
mov
jmp
test
xor
pop
pop
push
insb
aaa
js
adc
push
jo
pop
push
pop
pop
dec
lcall
sub
push
clc
scas
int3
mov
mov
roll
pop
adc
dec
rcl
mov
mov
cwtl
mov
call
stc
icebp
dec
ds
or
push
or
xchg
push
and
push
jbe
ss
clc
push
and
test
je
inc
cwtl
inc
xchg
clc
xlat
movsb
loop
sub
call
mov
jnp
aas
mov
mov
fdivrl
movsl
aaa
inc
push
or
sub
mov
cmpsl
xor
stos
jmp
repnz
cld
pop
bound
stc
std
adc
jb
ss
pop
push
add
call
and
pop
dec
pop
ret
push
inc
out
cs
scas
mov
sub
fadds
std
mov
ljmp
mov
ficoml
mov
pop
push
sub
jne
lea
or
and
mov
ss
mov
mov
insb
xor
popf
ret
ds
call
stos
enter
mov
fnstenv
dec
lret
lea
inc
rcl
aas
dec
iret
pop
sbbb
insb
mov
jno
pop
push
scas
cwtl
mov
xor
shl
mov
inc
xchg
inc
stos
lods
sub
jge
fildll
xchg
repnz
and
mov
mov
mov
jnp
dec
dec
in
dec
lret
mov
dec
jge
xchg
push
sbb
scas
mov
xor
push
mov
out
mov
js
cli
pushf
push
ljmp
int3
shl
shrl
add
xor
xor
pop
int
or
testb
mov
insl
sbb
les
mov
loope
lret
xchg
insl
cmp
loope
add
xchg
push
pusha
aas
mov
pusha
mov
and
pop
loope
pusha
push
lcall
rcrb
jns
fisttpll
arpl
xor
ss
test
and
jp
lods
mov
fistps
inc
mov
scas
das
test
frstor
repnz
jge
jb
cmp
call
push
outsb
mov
nop
movsl
repnz
mov
mov
pushf
mov
cwtl
push
dec
loopne
movsl
sub
inc
dec
pmulhw
or
ljmp
nop
mov
pop
test
xrelease
sub
mov
rcl
sarb
add
in
add
stc
mov
scas
push
int3
cs
pop
pop
mov
xor
add
fadds
and
xchg
mov
or
xchg
cmp
cli
shlb
add
pop
out
mov
data16
mov
lcall
adc
sub
into
add
mov
inc
mov
mov
sub
outsl
mov
sbb
pop
cmp
test
imul
js
pop
jmp
clc
fwait
pop
jge
xor
in
popf
xchg
outsl
arpl
shr
scas
sbb
adc
xchg
les
jnp
movsl
add
pushf
jge
out
sub
mov
mov
rclb
push
and
shlb
fcoms
jae
jae
sub
mov
shlb
dec
xchg
mov
push
cmp
mov
addl
jne
adc
inc
cmp
xchg
ret
mov
mov
imul
mov
xor
xchg
loop
xor
repnz
fisttpll
shr
mov
lret
xor
icebp
repz
lds
pop
jecxz
pusha
mov
loop
fsubs
jle
xor
jecxz
xchg
jmp
push
shlb
ja
fidivrl
jle
pusha
push
dec
and
mov
cmp
sbb
pop
cltd
lahf
mov
xchg
sbb
inc
arpl
popa
pop
into
fsts
add
les
mov
cmpsb
test
mov
add
hlt
incl
jge
imul
jns
or
push
push
outsb
jecxz
xchg
lods
fs
sub
in
dec
sahf
cmpsb
dec
dec
test
jnp
push
mov
pop
stos
lods
shrb
mov
pushl
mov
pop
int
ljmp
hlt
sub
andb
cmc
cltd
mov
add
add
data16
andl
fildll
sbb
rolb
or
daa
shrl
pushf
movsb
ljmp
mov
pop
jne
xlat
clc
aas
or
or
fmull
sahf
sub
fwait
mov
pop
dec
xor
inc
gs
fists
arpl
or
call
out
sub
cmp
add
pop
cld
pop
xchg
cmp
ja
ret
cwtl
mov
mov
jecxz
cld
fs
cmc
adc
cmp
push
fdivl
das
mov
ror
xchg
dec
ret
stos
xchg
icebp
or
push
inc
lock
mov
out
in
fiaddl
or
mov
adc
sarb
and
push
inc
adc
pop
insb
pop
push
ljmp
push
jae
in
jne
xchg
iret
iret
popa
mov
inc
mov
daa
xchg
dec
inc
mov
inc
pop
mov
add
fcomps
es
dec
out
sub
jae
popf
inc
fistpll
hlt
mov
aam
xchg
and
xor
pop
push
jecxz
add
push
xor
sbb
or
cmpsb
cmp
cmp
rcr
xor
js
or
int3
xor
jecxz
pop
push
mov
in
icebp
fistpll
sub
pop
pushl
xabort
das
xchg
fstps
aad
inc
xor
jecxz
push
cmp
mov
cmovno
add
sub
or
enter
mov
lea
sbb
push
mov
sbb
rorl
mov
int3
mov
aam
push
insb
cmp
dec
pop
pop
shr
lds
jbe
inc
jo
test
fwait
sub
out
pop
mov
shrb
mov
hlt
leave
js
aad
xchg
lcall
cmp
lock
aaa
lret
hlt
into
xchg
jge
imul
cld
mov
push
mov
es
cmp
mov
sbb
dec
mov
mov
xchg
out
addr16
inc
dec
jmp
jge
outsl
ljmp
xor
pop
pusha
push
popf
xchg
lock
mov
lea
ror
sar
xchg
xor
clc
ret
rcll
pslld
or
pop
dec
sub
mov
test
cld
les
pop
movsl
scas
in
pop
pop
cmpsl
lret
daa
push
out
or
jns
sub
stc
fidivl
hlt
bound
push
call
jl
cmp
imul
jmp
xchg
adc
test
mov
xor
sub
xchg
and
inc
pop
jb
negl
or
les
mov
je
stos
decl
jne
sub
imul
ficoms
xchg
sbb
es
ret
xchg
xchg
pop
std
aas
inc
lahf
mov
xchg
sub
push
test
add
dec
arpl
push
and
into
cwtl
outsb
jnp
ds
int
mov
cmp
pusha
push
stc
pop
cmc
adc
aam
dec
mov
call
mov
daa
repnz
neg
outsl
out
cwtl
jae
add
sub
push
loopne
jmp
filds
int3
mov
jge
test
repz
push
iret
into
fmul
out
dec
add
loopne
rcll
leave
sub
hlt
and
pop
push
pop
sbbl
jmp
dec
dec
js
xchg
fstps
jo
insb
in
test
push
outsl
sbb
popf
decl
stc
mov
mov
mov
stos
inc
in
fs
scas
movsb
sti
leave
cmpsl
loope
ret
mov
adc
inc
sbb
add
std
push
out
inc
sarl
imul
sub
sub
inc
cmpsb
pmovmskb
fcomps
and
push
incl
mov
imul
xor
xor
inc
xchg
or
stos
jmp
int3
add
sub
and
std
subb
cmp
ficoms
gs
push
call
adc
repz
mov
pop
test
les
insb
pushf
inc
movsl
lahf
mov
arpl
mov
xor
push
mov
pushf
fwait
jecxz
test
mov
ds
jle
xchg
idivb
arpl
push
loopne
int3
fcompl
cmc
lret
dec
test
xchg
stos
loop
fsub
aad
push
mov
pop
popf
imul
adc
mov
imul
mov
lock
jns
jb,pt
imulb
aad
mov
mov
or
push
cwtl
cwtl
loop
push
mov
xor
or
repz
aaa
pop
loopne
insb
cmc
mov
sub
bnd
enter
aam
dec
inc
mov
pop
and
ljmp
ja
cs
icebp
sbb
aam
hlt
mov
fildll
pop
xchg
int
ret
shl
imul
dec
in
insb
pusha
movsl
popl
shrb
out
dec
in
sti
cmp
push
xchg
xor
mov
sub
push
imul
mov
cmp
cmp
dec
iret
push
xor
lds
mov
loop
jp
cwtl
sub
sub
das
push
cmpsb
int3
adc
cs
stc
or
mov
push
insb
add
pshufw
xor
in
push
hlt
mov
xor
idiv
icebp
cs
jecxz
push
xchg
imul
lret
add
xor
cmp
sbb
jne
add
data16
cld
lock
pop
fsubr
lods
out
addr16
dec
orb
pop
insb
xlat
pusha
jae
out
cld
inc
inc
lock
pmulhw
lds
addr16
mov
xchg
mov
sub
iret
lock
cli
gs
sbb
inc
mov
sub
mov
outsl
push
xchg
jl
rol
popf
iret
ss
pusha
inc
lahf
mov
jmp
and
imul
fstpl
jecxz
das
fs
sub
jmp
dec
dec
adc
in
add
insb
xlat
xchg
sub
jmp
fwait
cltd
movsb
scas
ljmp
dec
dec
inc
xor
pop
fiadds
pop
loopne
or
shr
pop
mov
xor
movsb
stos
gs
imul
dec
push
dec
dec
and
sbb
sbb
cltd
lea
sub
aam
lock
pop
lret
out
ret
push
push
call
xlat
out
push
sbb
scas
cmp
pop
and
adc
cltd
pop
fptan
cld
mov
mov
cld
mov
outsb
call
push
jno
sbb
fisubs
or
es
jmp
jge
pop
cmp
pop
out
push
imulb
jbe
or
mov
adc
push
inc
add
pop
test
andb
push
pushf
std
cltd
cmp
insb
jno
or
jl
shl
push
jecxz
mov
xchg
inc
mov
xchg
sub
repz
andb
shrb
dec
lahf
mov
pop
ss
inc
loop
or
mov
mov
and
cld
mov
jl
outsl
push
movsl
inc
dec
insl
lahf
dec
ljmp
xchg
sbbl
ficoml
aad
dec
call
push
fisubl
mov
mov
push
mov
or
imulb
stos
inc
push
or
or
out
fyl2x
inc
cmpb
aas
imul
repz
or
addr16
lcall
xchg
push
sbbb
into
mov
push
xor
int3
aas
push
inc
cmpsl
andb
jge
and
rclb
lods
inc
adc
dec
sub
stos
movups
int
fs
lea
scas
clc
jae
mov
and
sarl
fisubrl
mov
movsl
mov
iret
das
push
lcall
jle
jnp
fdivp
loop
in
dec
cli
and
pop
shlb
dec
es
cld
fld
push
push
fcmovnbe
inc
pop
xchg
lahf
pop
imul
lods
and
int
ss
nop
inc
inc
mov
inc
push
lret
aaa
adc
arpl
mov
push
sub
jno
clc
xchg
cli
xlat
sub
cmp
pop
adc
out
sbb
add
cmc
lods
daa
nop
daa
sahf
lock
scas
adc
fistps
add
or
inc
xor
and
sub
add
popa
push
dec
cld
jg
sarb
jle
aam
dec
inc
mov
out
fnsave
push
jle
xor
hlt
fadds
ret
or
mov
pushf
loopne
dec
popa
push
adc
aas
icebp
in
imul
imul
cmovs
push
inc
sbb
jbe
cmp
jae
cli
test
sti
xchg
xchg
xchg
pop
sahf
jno
ss
test
pop
jae
fistps
sub
push
add
sub
push
sub
loope
sbb
jmp
mov
mov
sbb
mov
cld
mov
fmuls
aas
je
loop
outsb
movsl
andb
int3
mov
add
or
lods
and
fisubrl
mov
stos
fwait
mov
cmpsb
sbb
cmp
xor
les
or
std
add
cmp
lods
xor
lret
stos
clc
into
xor
push
xchg
jge
mov
mov
aam
and
adc
jg
adc
arpl
dec
test
add
fwait
xor
sub
inc
adc
out
clc
fdivr
xchg
inc
subb
ffree
sbb
aaa
lock
fdiv
mov
cli
in
pop
data16
outsb
scas
fildll
rcrb
jmp
mov
dec
push
enter
jno
inc
inc
call
insb
in
lret
jl
movsb
cmpsl
push
inc
sub
lret
imull
imul
push
cwtl
jl
pop
iret
aad
idiv
cwtl
test
mov
lahf
jge
int
mov
and
test
pop
and
cld
xchg
dec
sbb
pop
or
lods
std
ds
sahf
xchg
xchg
cltd
xor
add
add
int3
cmp
or
mov
jne
movsb
jno
loopne
jno
cld
cmp
push
sub
jl
leave
leave
aam
por
pop
dec
sbb
mov
dec
lea
cmc
push
and
aad
cmc
xchg
cwtl
sbb
insb
mov
jle
mov
andl
fidivrl
or
push
mov
mov
in
mov
inc
adc
imul
pop
jp
cmc
lea
loopne
ljmp
jnp
xchg
inc
cltd
pop
shlb
fmuls
pop
jmp
add
push
inc
and
decb
sahf
xchg
arpl
push
push
aad
inc
test
mov
roll
fcmovne
push
mov
and
adc
jmp
lods
mov
adc
mov
inc
imul
dec
pop
add
adc
inc
jbe
and
or
mov
sub
and
lret
movsl
add
repz
mov
aas
push
xor
xchg
fcomps
lods
mov
xor
lds
push
or
nop
cmp
adc
jo
inc
cmp
sub
fs
lods
sbb
adc
xchg
jmp
pushf
scas
mov
add
mov
mov
cmp
jb
ljmp
push
cmp
push
test
push
pop
pop
addr16
xchg
and
data16
pop
adcl
cmpps
das
ret
mov
add
fdivrs
add
push
rcrb
cltd
fmul
push
pop
and
adc
repnz
fldt
and
bound
mov
std
inc
mov
xor
rcrl
xchg
mov
mov
cmovnp
xchg
loope
cmp
cmpsl
dec
into
pop
cmp
sub
and
push
adc
iret
jl
pop
add
in
xchg
mov
adc
fwait
or
jge,pt
mov
or
es
jnp
test
inc
push
inc
data16
sbb
icebp
sbb
je
pusha
jb
and
leave
jo
nop
incl
out
dec
add
pmullw
xchg
fidivl
ret
dec
sbb
mov
and
jmp
jae
cmp
sbb
mov
add
mov
sar
xorb
pop
bound
or
sbbb
icebp
sbb
jbe
lds
enter
cmp
lret
cmp
mov
jae
andl
lds
outsb
stos
inc
jo
push
jge
jae
inc
or
xadd
loop
jle
bound
cmpl
jns
adc
ljmp
imul
push
push
jo
js
scas
add
popa
jg
mov
in
icebp
jns
addb
ja
faddl
sbb
sbb
adc
inc
cwtl
iret
cld
bnd
jecxz
push
repz
adc
scas
dec
inc
iret
mov
sub
xlat
fildl
fbstp
mov
and
or
push
dec
sbb
enter
daa
dec
xchg
mov
shrb
mov
xchg
ret
jns
pop
adc
xchg
mov
shl
push
out
xchg
arpl
test
clc
sbb
inc
or
dec
mov
xlat
mov
lret
lcall
push
lea
je
loopne
mov
push
inc
and
or
pop
mov
loop
js
into
sub
pop
xchg
lahf
das
mov
nop
cmp
or
clc
fisubrs
pop
nop
inc
aas
and
pop
outsb
pop
test
cmp
aam
mov
stos
test
xor
andl
jp
stos
dec
jle
mov
sub
pop
fisttpll
sarb
fisubs
mov
stc
fwait
push
sbb
pop
fcmovnb
jecxz
rol
stos
bound
xchg
test
or
pop
add
cmp
cli
inc
jmp
fistpll
inc
mov
imul
jne
inc
fimuls
insb
test
adc
jnp
stc
sub
rcll
fsts
dec
les
daa
shr
adc
loope
in
mov
mov
ja
pop
xchg
jecxz
adc
cmpsb
pop
gs
adc
pop
cwtl
dec
and
xchg
adc
std
imul
insl
lock
loopne
push
cltd
in
push
aad
xchg
inc
pusha
mov
les
icebp
mov
xchg
hlt
ljmp
or
or
mov
or
cmc
adc
jmp
push
cmc
cltd
push
jl
loop
jmp
xchg
fistl
mov
cltd
outsl
adc
rcrb
cli
push
out
push
andl
icebp
fsts
sahf
or
inc
mull
dec
loop
lods
xor
and
shrl
imul
mov
push
lret
cmp
dec
push
sub
movzbl
imul
dec
cmpsb
int3
je
rolb
jno
cmp
or
xchg
gs
sub
lods
add
cs
fidivrl
movsl
out
imul
sbb
inc
push
pop
mov
add
inc
push
movsl
cli
sbb
aas
sbb
pusha
cmp
aaa
out
push
sbb
or
adc
daa
cltd
jg
movl
push
adc
and
cs
std
mov
loop
sahf
cwtl
ljmp
mov
inc
add
push
fadds
inc
sbbl
mov
xlat
pop
cmp
insb
pushf
repnz
out
xchg
aas
pop
mov
mov
outsb
push
rep
or
test
push
in
xchg
loopne
fstps
cld
jp
ret
fmuls
dec
in
scas
inc
std
loop
jge
psubb
sti
pushf
adc
sbb
aaa
shrl
fnsave
shl
pop
pop
fstpt
shll
push
fdivp
cld
or
jg
mov
dec
mov
push
sahf
dec
test
jmp
sbb
adc
fs
shl
mov
lret
adc
cmp
sub
pop
mov
clc
movsb
mov
and
cld
mov
je
mov
imul
insl
lahf
pusha
xor
rorl
mov
jge
popf
jmp
movsl
jo
adc
add
jmp
lret
dec
outsb
cmc
and
mov
pushf
sub
stos
fwait
sbb
and
xchg
out
jg
jno
movzbl
xchg
sub
mov
mov
loopne
adc
or
jae
cmp
and
repnz
test
mov
add
mov
out
das
es
js
loop
loopne
stc
in
dec
iret
jmp
loop
fmul
lods
cli
push
lods
mov
cmp
push
push
ror
inc
lret
sahf
rorb
lea
ret
mov
pop
addb
popa
xor
inc
inc
ja
pop
jmp
xchg
or
fs
scas
sub
out
xchg
cmpsb
jmp
pop
jmp
inc
jne
and
mull
repz
mov
add
gs
jmp
jle
insb
dec
mov
xlat
hlt
sbb
jp
jmp
stc
into
js
enter
int3
cmp
pop
or
out
jmp
and
ret
push
jo
xchg
push
pop
inc
rorl
push
mov
inc
dec
arpl
push
das
and
inc
pop
xchg
addl
mov
xor
insl
push
insb
mov
pop
push
push
mov
push
int3
lret
insl
add
sti
push
insb
or
xchg
leave
cmp
lods
mov
in
push
pop
mov
mov
mov
in
add
es
ret
xchg
pop
xchg
inc
jmp
outsb
mov
and
jnp
pop
add
leave
mov
add
int3
repnz
fbstp
lahf
das
inc
mov
mov
lahf
pop
xchg
mov
add
fldenv
ret
dec
cmpw
push
pop
ja
pop
jg
pop
add
or
rcr
imul
out
jnp
push
jmp
imul
mov
and
out
sub
adc
mov
jmp
mov
sbb
lock
aaa
xchg
jbe
scas
into
pop
jle
fldl
test
mov
jmp
mov
dec
shlb
mov
push
sub
shlb
pop
xchg
pushf
and
xor
pop
shrb
or
pop
or
addl
cmp
cmp
sub
sbb
cltd
ficompl
jmp
sub
add
shlb
pop
hlt
test
jno
cwtl
xor
pusha
or
out
orl
lock
mov
pop
sqrtps
add
dec
pop
dec
aad
aas
and
jl
fwait
inc
mov
adc
je
inc
je
lods
and
push
add
pop
push
inc
inc
pop
xor
adc
xchg
push
push
push
mov
pop
sbb
mov
xchg
push
adc
lods
inc
add
inc
cmp
push
or
sahf
add
jo
mov
pop
mov
push
into
xor
or
ror
outsl
inc
rcll
push
sub
mov
push
pop
hlt
insb
mov
jecxz
cmp
loope
mov
iret
enter
inc
int3
mov
movsl
xlat
cli
adc
and
dec
jno
jmp
pop
adc
test
sarb
push
out
nop
dec
push
inc
addb
outsl
pop
jle
shll
push
shl
sbb
xor
setb
add
aam
aad
mov
repnz
test
add
lret
ja
movsb
inc
mov
sti
dec
rcrb
out
jbe
or
inc
and
jle
orl
jbe
mov
cwtl
in
lret
pop
sbbb
xchg
mov
ja
iret
sub
xor
mov
enter
add
mov
and
adc
dec
lcall
test
xchg
jae
lret
movsl
xchg
test
push
mov
scas
jmp
cmp
mov
push
inc
jo
in
adc
inc
sub
mov
cli
sahf
mov
jne
rolb
daa
jge
ret
sub
das
adc
push
fwait
xorl
into
je
movsb
push
sub
push
and
adc
pushl
das
cmp
push
out
xor
adc
cld
subb
in
push
jmp
mov
negl
js
xor
iret
sbb
hlt
add
and
and
imul
mov
addb
xor
dec
lahf
cs
dec
and
stos
insl
xor
aaa
stos
adc
fnstsw
icebp
cmpsl
icebp
cld
test
loope
mov
adc
mov
loop
stos
mov
xor
lret
dec
jnp
cmpl
rol
scas
dec
push
je
mov
dec
movsl
lea
adc
mov
cmp
jb
int3
and
addl
xchg
jo
sub
xor
les
jo
insl
mov
jmp
or
sbb
imull
or
popf
inc
xor
lds
fst
sub
xor
sahf
add
xchg
mov
shlb
push
mov
insl
fcom
mov
dec
in
or
sahf
inc
popa
push
idivl
test
ret
mov
int3
cmp
sub
sbb
push
ret
and
add
mov
inc
mov
in
shll
pusha
or
fs
dec
pop
std
loope
push
cmp
test
out
lcall
pop
test
aas
push
mov
rcrl
aam
jecxz
ljmp
pop
inc
push
addr16
push
mov
add
jle
or
jne
cmp
inc
jp
xor
ss
pop
divl
ljmp
or
fsubr
test
xchg
fisubs
push
push
cmp
loop
fldenv
pop
xchg
cmp
pop
rcll
lds
sbb
pop
lcall
xor
sub
mov
rorl
and
lahf
aad
xchg
mov
mov
or
jo
jo
test
aaa
sub
roll
sub
dec
jnp
out
mov
push
pop
cmpsl
mov
inc
or
insb
xchg
jno
arpl
mov
xchg
mov
mov
mov
rcrb
movsl
xlat
push
cltd
pop
out
les
push
and
mulb
adc
sub
cltd
push
mov
sub
jle
push
pop
out
repnz
lock
sub
pop
cmp
loope
nop
xor
cwtl
dec
iret
add
dec
mov
aad
cmp
in
jno
notl
mov
or
xchg
or
les
add
ret
jb
arpl
xchg
rclb
sub
movsl
mov
insl
addl
fldcw
mov
jmp
inc
stc
sarb
sti
popf
mov
pushf
notb
jecxz
lret
std
mov
mov
mov
dec
lea
in
inc
jae
popf
and
subl
sahf
adc
sub
xor
fldenv
out
test
add
cmc
daa
pusha
lahf
dec
sub
out
fs
or
cmp
mov
xor
loope
mull
cltd
xor
add
cmp
pushf
mov
bound
sbb
xchg
pusha
jns
fsubr
pop
sbb
je
gs
lret
or
sub
mov
jmp
fs
loope
scas
sbb
cmpsl
out
cmpsb
push
or
jp
jae
dec
clc
sti
adc
aam
inc
test
test
cmpsb
out
jg
pop
pop
mov
jae
jg
and
fists
jne
adc
test
fs
inc
dec
ret
jl
cli
xchg
repz
inc
adc
pop
out
mov
inc
loope
ffreep
mov
icebp
out
stc
jg
jno
ror
addr16
aad
xchg
cmpsl
mov
jecxz
push
test
and
out
loop
imul
inc
xlat
mov
lret
pop
sbb
scas
fsubrl
icebp
js
jecxz
mov
es
aas
pop
mov
notl
and
stos
jns
mov
aad
mov
cmpsl
push
mov
in
mov
subl
pop
mov
scas
imul
aad
cmpsb
pushf
popf
pop
or
pop
mov
cmp
andb
adcb
lods
push
cli
enter
cld
or
and
aaa
in
ljmp
add
jns
es
mov
iret
xchg
and
jno
in
jae
push
insl
inc
jecxz
pop
rclb
mov
gs
insl
insb
cmpb
or
popf
pusha
and
shl
rcll
cmp
cmp
lea
jb
insb
mov
cwtl
xor
jns
imul
jbe
js
push
test
fldcw
loope
jnp
pop
sti
sahf
or
xchg
jns
jb
xor
cmp
mov
mov
clc
add
cmp
rorl
je
scas
jecxz
or
mov
or
gs
add
insl
lock
insl
pop
lret
jle
shll
lock
dec
arpl
mov
mov
pop
mov
and
repz
lea
mov
mov
lret
pop
and
sti
sub
aam
dec
push
in
ljmp
repz
push
aad
or
div
add
jmp
neg
arpl
cwtl
pop
in
cs
js
ljmp
xor
std
or
imul
dec
aaa
je
and
data16
mov
xchg
mov
xchg
cmp
enter
jle
pop
inc
jae
subl
pop
xchg
shlb
inc
mov
adc
mov
lret
stos
fldl
jmp
int3
mov
sbb
fdivl
test
lds
xor
or
mov
pop
add
arpl
inc
sub
cmp
add
sbb
inc
pop
mov
jno
ljmp
sbb
dec
xchg
stos
mov
dec
test
sbb
cltd
mov
add
dec
arpl
add
addb
or
inc
orb
xchg
enter
add
sahf
call
sbb
and
mov
or
pop
scas
dec
inc
or
mov
xchg
gs
addr16
pushf
mov
rcll
orb
cmp
rcl
mov
adc
xlat
mov
ss
xor
leave
jne
mov
xor
jp
bound
jl
push
gs
jle
pushf
ja
mov
and
inc
or
adc
jp
mov
xchg
pop
mov
push
addr16
pop
aas
call
roll
loopne
mov
mov
mov
jbe
sbb
rorl
mov
call
enter
jb
mov
jae
add
dec
aas
xchg
xlat
popa
ds
add
sub
pop
adc
jne
jno
scas
shrl
adc
mov
jno
sub
jmp
sahf
add
push
adc
jno
cmp
pop
mov
repz
leave
mov
sar
test
push
inc
in
cmp
or
fimull
dec
push
pushf
sub
in
push
stos
push
pop
lock
adc
xchg
cmpsb
div
rcl
xor
inc
mov
adc
das
fwait
imulb
aam
cwtl
push
sbb
out
mov
stos
sti
fisubrs
fildll
push
and
sub
es
cs
loopne
adc
inc
xchg
mov
push
test
sbb
pusha
lods
push
dec
cli
mov
inc
sbb
sub
jg
push
insb
jb
cwtl
and
repz
icebp
in
push
cmp
movsl
ljmp
xchg
loope
pop
out
dec
bnd
and
xor
popa
push
jnp
or
or
popf
rcr
popa
bound
push
pop
adc
inc
hlt
xchg
push
mov
adc
dec
mov
inc
push
mov
loope
mov
mov
cmp
inc
mov
test
jp
rclb
and
xor
dec
cmp
shrb
inc
shrb
fstpl
dec
push
roll
and
iret
ret
jne
fisubl
mov
mov
xchg
hlt
orb
push
jbe
jne
push
xchg
push
scas
enter
aam
dec
cmpsb
or
add
mov
sar
sbb
lods
loopne
mov
popa
je
pop
fwait
enter
xorb
fwait
rorl
nop
mov
xchg
cmp
call
iret
in
call
mov
add
inc
jle
mov
push
pop
add
and
sbb
jno
and
adc
fstpl
inc
jle
dec
add
xchg
data16
ja
repnz
rcr
xchg
pop
daa
sbb
push
dec
and
xchg
mov
mov
mov
jmp
cmp
pop
add
add
sbb
call
push
push
and
jnp
outsb
pusha
daa
test
aad
dec
mov
mov
lea
pop
call
daa
pop
pop
lret
call
lods
jb
cmp
lods
jo
scas
cmp
fcoms
jnp
or
cmp
cmc
push
xchg
enter
sahf
jge
cmpsl
mov
les
dec
inc
push
mov
les
fdivs
mov
mov
rorb
shr
push
sbb
fsubr
mov
lret
test
xor
jae
adc
cli
sub
fwait
test
dec
hlt
pop
jno
inc
xchg
ss
jb
sbb
dec
in
or
push
mov
mov
into
addr16
std
mov
or
hlt
fstpl
push
jb
add
push
xor
loopne
in
movsl
add
jle
loope
orl
pop
sub
cwtl
jge
stc
icebp
bound
sbb
inc
fildll
mov
sub
es
pop
cmp
push
adc
insb
test
imul
dec
pop
test
xchg
call
inc
jecxz
icebp
push
lds
shrl
ja
daa
insb
ss
enter
das
js
cmpsb
ss
leave
shrl
cmp
lret
arpl
jge
stc
addr16
add
neg
xchg
call
xlat
jl
insb
pop
inc
xor
mov
ss
sub
inc
inc
scas
insl
jbe
push
dec
out
adc
lcall
dec
or
push
mov
pop
mov
outsb
and
fsub
rcr
jns
insl
add
lods
adc
dec
in
xchg
xchg
xor
in
std
mov
loopne
outsb
mov
jns
mov
je
cltd
or
test
lods
les
dec
cmp
testb
xor
loopnew
mov
adc
aad
pop
lock
scas
cltd
sub
sbb
dec
push
lahf
fimuls
lds
and
mov
ret
dec
out
sbbb
lret
mov
add
xchg
xchg
sub
fmul
inc
and
bound
outsl
ret
call
push
add
or
fidivrl
dec
test
test
lods
movsb
sub
pop
imul
pop
sti
fs
xchg
mov
push
pop
xchg
sti
lahf
add
mov
push
push
pop
dec
pushf
xor
xchg
xor
cmp
ja
xchg
lret
cmp
mov
mov
in
addr16
mov
pop
push
mov
adc
mov
xor
into
sbb
adc
inc
stos
mov
fscale
sub
pop
fs
les
inc
inc
jae
leave
push
dec
xchg
mov
push
jle
adc
and
add
sbb
pop
js
sub
je
std
mov
mov
mov
or
stc
fmull
popf
int3
in
out
cmp
popa
push
movsl
popa
jne
sub
fnstcw
cmc
add
scas
fstpl
xchg
mov
adc
add
andps
stc
xor
int
fcoml
aad
loope
and
inc
fwait
jge
test
and
das
ror
inc
mov
lds
jle
mov
sbb
adc
adcb
es
bound
inc
adc
jns
sub
push
jne
xchg
sahf
es
lcall
loopne
jae
adc
pop
test
jae
or
jb
aad
testl
dec
lds
lcall
test
xchg
fcmovnb
lods
stos
int
mov
lods
orl
mov
jae
outsb
push
repnz
add
inc
sub
in
in
xchg
dec
xchg
sbb
xor
xor
loopne
into
pop
xchg
jns
notb
stc
and
inc
cwtl
cmp
jns
pusha
pusha
sub
add
into
rorl
xchg
inc
out
roll
sub
jnp
fisttps
mov
xor
lret
ds
jle
add
cmpsb
xor
jge
and
imul
jmp
dec
mov
lret
jmp
sbb
aam
jecxz
cmp
out
mov
xor
dec
dec
cmpsb
xor
inc
dec
cmp
mov
mov
push
and
addr16
jmp
mov
xchg
xor
xchg
mov
mov
pop
xchg
sub
jle
in
gs
negb
lretw
adc
rorb
push
cmpsb
push
xchg
out
dec
jo
mov
mov
or
rclb
nop
add
push
push
outsb
xor
or
call
enter
xchg
mov
mov
push
mov
rcl
lea
adc
dec
lods
fsubl
das
je
pop
nop
jle
jmp
leave
xorb
stos
push
push
movsb
cli
dec
push
inc
fucompp
mov
sub
je
and
loopne
lock
sarl
aaa
lret
imul
js
rcll
ljmp
sbb
cmp
mov
cmp
xchg
hlt
dec
xlat
ret
or
out
loopne
fs
push
jnp
and
pop
dec
xchg
pop
pop
cmp
je
movsb
aam
adc
test
and
lods
xchg
cld
divl
xor
xchg
mov
out
into
test
std
or
ret
sub
sar
imul
jns
xor
outsb
repnz
cmp
mov
ljmp
and
out
call
clc
and
xorl
fmul
mov
notl
out
push
pop
ljmp
lods
push
jnp
je
loop
xchg
sbb
xchg
mov
mov
loope
xor
cmp
flds
jle
cwtl
cs
out
and
dec
pop
jb
aaa
enter
xchg
mov
mov
arpl
test
shlb
scas
jae
jb
inc
popa
test
cli
ret
fldenv
imul
xchg
mov
ja
pop
xor
out
push
arpl
mov
sbb
fistl
das
scas
mov
aad
sub
pop
push
jae
adc
int
imul
es
add
mov
cmp
je
cs
push
mov
loop
std
jne
inc
pop
js
idiv
adcb
jo
cli
jno
cmpsl
xchg
pop
push
pop
and
sub
add
insb
into
adc
sub
mov
dec
in
hlt
jae
and
cli
pop
sbb
repnz
xor
mov
cmpsl
icebp
mov
dec
dec
loop
xchg
mov
adc
jne
cmp
sbb
mov
lea
or
sub
ja
test
popf
int
dec
ret
mov
jg
sub
stc
pop
pop
and
aas
sub
ret
aad
ja
lea
xor
test
mov
ret
mov
repnz
mov
inc
jae
repz
jecxz
adc
pop
jo
sub
je
daa
or
fwait
mov
add
mov
shrl
stos
into
scas
and
mov
out
cmpsb
mov
jle
add
mov
icebp
insl
xchg
aas
ja
movsl
stc
ror
subl
movsl
pop
pop
dec
adc
sbb
sti
push
jb
stos
insb
cmpsb
cmpsl
imul
in
pop
or
and
sub
popa
inc
mov
mov
fisttps
mov
aaa
mov
jae
jmp
addr16
pop
and
xchg
dec
fs
out
imul
iret
dec
shrb
cmp
push
cltd
shrb
test
inc
arpl
cmp
int3
cltd
mov
fwait
outsl
mov
pop
adc
push
or
cmp
dec
cmpl
ret
sbb
loop
sbbl
les
test
int
mov
add
dec
push
sbb
jae
adc
mov
pop
pop
mov
scas
insb
xor
gs
ret
sti
mov
imul
mov
cmp
push
dec
push
add
cmp
xchg
fistpll
imul
cwtl
insb
sbb
push
cmp
test
xor
int3
push
sbb
push
add
scas
push
xchg
xchg
pop
xor
push
in
stos
flds
cmpsb
ret
ja
sbb
push
ret
arpl
mov
inc
mov
jns
loopne
push
inc
sbb
aas
in
fcomip
mov
push
faddp
mov
mov
jo
into
inc
sbb
mov
xor
pop
jmp
cmp
imul
mov
jmp
sbb
add
mov
mov
or
xor
je
sub
test
mov
push
arpl
fcmovu
push
adc
inc
hlt
sbb
out
jl
lret
push
popa
mov
jns
add
lea
lcall
mov
dec
daa
lea
movsb
mov
pushf
imul
adc
test
pop
inc
and
xchg
add
out
push
mov
loopne
jecxz
cwtd
mov
cmp
addr16
and
sbb
jg
fwait
out
pop
rcr
jmp
shrb
loopne
mov
loop
jge
cltd
adc
xor
loopne
call
or
lock
leave
hlt
jns
pop
mov
aam
jmp
clc
mov
adc
xchg
and
call
and
sti
out
push
push
lods
fwait
repz
jle
mov
mov
and
inc
jge
inc
jo
xchg
mov
or
push
lods
pop
inc
mov
xlat
add
data16
fstpt
mov
cs
fildl
push
fwait
out
mov
add
sub
inc
enter
dec
mov
adc
xchg
aad
adc
mov
test
sarl
out
mov
lods
push
xchg
lock
mov
jg
mov
rcr
imul
cmpsb
push
pushf
mov
in
loopne
jne
mov
pop
cltd
jp
mov
push
and
inc
arpl
fcomi
into
and
cltd
or
xchg
pusha
cltd
cli
rol
aam
push
sbb
pop
imull
and
lret
push
xchg
lods
inc
mov
xchg
leave
sub
pop
cmp
or
mov
lahf
cmpsl
aam
pop
cli
jmp
int
fidivs
or
test
vaddpd
sbbb
out
ja
and
sbb
mov
in
push
mul
mov
push
cmp
jnp
repz
or
mov
ret
push
xorb
adc
aaa
pusha
push
ljmp
mov
idivl
rolb
push
add
into
call
movsb
jecxz
imul
xchg
xchg
pop
xchg
or
fidivl
test
cmp
cmp
inc
inc
ljmp
es
test
loope
mov
js
add
or
jno
sti
add
ss
dec
stc
or
or
mov
jge
and
fwait
mov
jbe
loop
mov
add
xor
hlt
mull
lock
and
incl
adc
testb
inc
adc
jl
jb
cmp
xchg
movsb
dec
leave
out
fwait
out
pop
xchg
cmp
int3
cmc
les
loopne
sti
sub
loop
dec
inc
adc
in
loope
add
pop
test
adc
rorl
inc
and
adc
or
rorl
xchg
push
outsb
aas
pop
push
jp
xlat
add
fsubs
mov
pop
lock
lahf
push
insb
xor
pop
cmp
push
adc
dec
rcll
pop
imul
push
out
repz
mov
inc
sbb
pop
lsl
adc
sub
add
in
sub
jle
and
int3
lea
pusha
fidivl
out
mov
xchg
adc
sub
in
aas
adc
push
xchg
xor
mov
mov
push
xchg
mov
sub
mov
cltd
ret
mov
and
dec
inc
stos
inc
ljmp
lds
xor
repz
loope
insl
jae
inc
fildl
dec
inc
gs
push
cmovae
scas
test
aas
and
adc
add
test
mov
pop
xor
cmp
and
mov
mov
inc
in
or
dec
dec
lds
mov
inc
mov
test
fsts
and
pop
loopne
cmpsl
jmp
dec
dec
popa
push
cltd
sbb
aaa
cmpsb
jno
mov
xor
pusha
xor
xchg
sbb
jo
push
inc
dec
movsl
mov
xor
dec
cmpsb
inc
sub
cld
imul
push
push
mov
jg
jl
sbb
cltd
pusha
movsb
inc
sub
or
mov
mov
xchg
or
adc
sub
nop
jno,pn
or
jns
inc
daa
int3
inc
xor
or
xchg
and
ljmp
jo
loope
mov
int
mov
mov
lock
ja
mov
outsl
lahf
xchg
cmc
jp
inc
and
or
inc
push
sbb
nop
inc
xor
ret
xor
jge
or
stos
pushf
xchg
pusha
xchg
mov
lock
cmovo
js
shll
lahf
sbb
xor
and
fnclex
leave
addr16
jle
add
cmp
in
and
xchg
stos
ss
mov
push
push
loope
cmc
roll
sbb
dec
add
das
inc
loop
dec
mov
data16
inc
ss
inc
mov
add
ljmp
sbb
mov
cmp
jns
sbb
stos
and
inc
mov
ret
bound
xchg
jl
add
sub
aaa
mov
push
lea
mov
jne
sub
push
test
out
mov
test
dec
lahf
dec
mov
add
cmp
sub
js
rorb
dec
popf
mull
or
outsl
sbb
pop
mov
push
xchg
pusha
jns
fs
fiaddl
sbb
inc
rolb
and
dec
fsubrl
inc
cmp
imul
push
das
jg
dec
jge
mov
test
pop
imul
rcr
adc
scas
paddw
loop
sbb
int3
or
mov
or
shl
mov
pop
mov
pop
aam
ja
sub
sub
adc
mov
test
xor
sbb
ret
xlat
dec
inc
sbb
ret
cld
mov
add
push
adc
inc
jmp
lahf
sub
and
or
dec
outsb
and
adc
and
xor
test
and
mov
sbb
lds
mov
sbb
sbb
jb
shll
and
outsb
in
cmpsl
idivl
mov
stc
cli
dec
and
push
cmp
insl
lods
lods
movsl
outsl
cmp
push
jmp
push
adc
dec
stos
das
data16
clc
sub
and
outsb
push
fcoml
ljmp
inc
mov
xlat
push
sbb
pop
je
mov
dec
pop
push
lret
stos
xor
cs
aam
in
roll
stos
xchg
inc
pop
mov
hlt
jo
ret
cmp
lds
adc
jae
inc
sbb
adc
xchg
and
jo
push
dec
pop
sarb
sbb
xor
sti
push
stos
sub
add
test
test
mov
sbb
shrl
addr16
mov
or
sub
fdivl
inc
cwtl
jns
adc
add
and
pop
mov
sahf
sti
lret
into
in
sub
xchg
jae
gs
stc
push
pusha
mov
fsubr
inc
and
xor
cs
push
mov
movsb
std
imul
jne
clc
lock
cmp
and
ficompl
add
push
sub
nop
das
mov
sbb
fiadds
fnstcw
lahf
dec
cmp
cmc
sub
pop
lret
push
mov
xor
addl
cmc
sbb
inc
rcrl
aam
and
fs
clc
xor
out
push
pop
dec
pop
jle
bound
outsl
xlat
in
cltd
pushf
fsubrs
insl
mov
scas
xchg
mul
inc
mov
mov
das
push
movsb
jl
pop
mov
push
mov
out
iret
adc
sbb
insl
test
jmp
aad
pop
inc
mov
sbb
clc
add
stos
jae
js
std
sub
mov
sbb
jmp
jne
pop
repz
lcall
mov
and
es
mov
cmpsl
les
sub
sub
mov
mov
lretw
xchg
lds
mov
ja
subl
xorl
das
jg
dec
xchg
add
cmp
rorl
xchg
dec
clc
push
mov
sbb
dec
clc
fstpl
roll
xchg
loop
xor
mov
icebp
movsb
test
xor
out
push
xchg
std
dec
xor
nop
movsb
push
dec
les
faddp
jno
mov
adc
rclb
cmpsb
pop
popf
push
pop
lea
mov
rsm
adc
xchg
fistps
mov
mov
adc
jo
fstpt
test
pop
scas
popf
pop
fnsave
fwait
and
clc
add
cli
cld
mov
out
add
insl
cmp
arpl
ja
pushf
dec
mov
cmp
adc
stos
pusha
fmull
sar
jb
or
and
xchg
mov
sti
mov
xchg
in
and
adc
xchg
push
daa
pop
pushf
sub
add
inc
mov
cmpsl
clc
iret
shr
mov
or
jp
neg
mov
mov
int
push
or
inc
push
cmpsb
lret
inc
jns
pop
xchg
and
and
jno
call
jmp
and
pop
dec
fmuls
mov
sub
mov
pop
pushf
pop
cmp
add
inc
lcall
jmp
and
push
outsl
lret
aam
and
and
push
inc
fldenv
adc
cmp
fiadds
xor
cli
mov
mov
hlt
adc
ja
or
add
add
jns
push
adc
aas
push
rclb
xor
inc
inc
imul
mov
jmp
pop
fdivl
adc
addr16
add
das
jle
scas
and
adc
jecxz
mov
sbb
std
pop
sub
adc
imul
push
pop
jle
add
mov
mov
pop
lcall
adc
repnz
push
jge
jg
sub
xchg
mov
cmpsb
or
jae
stc
gs
cmp
daa
test
imul
jle
xor
push
xorl
mov
aad
sti
inc
dec
ret
incl
mov
imul
or
loope
insl
jae
sbb
xchg
sti
outsl
dec
mov
ss
out
test
pop
das
inc
push
in
push
add
push
adc
sbb
je
cwtl
hlt
ljmp
lock
fmull
xchg
dec
pop
jo
lret
xchg
adc
mov
into
sub
or
or
push
dec
adc
jg
xchg
je
mov
out
push
aam
mov
xor
test
lods
dec
jle
mov
lods
and
mov
in
cmp
pop
xor
loopne
out
iret
lds
popa
and
mov
lret
std
and
cmp
cwtl
test
dec
jge
dec
xchg
dec
xchg
out
xlat
cmpsl
rolb
xchg
mov
cmc
ja
cld
outsl
call
jb
dec
addb
cli
sbb
mov
mov
xor
sub
mov
adc
jle
xchg
sbb
and
and
std
test
xchg
sbb
inc
adc
lahf
add
mov
jbe
in
lods
ljmp
decl
dec
popf
inc
push
pop
xchg
inc
rcrl
scas
push
into
xchg
mov
push
mov
inc
push
cmp
cltd
fidivrs
cmp
scas
in
mov
fistl
iret
orb
mov
into
push
shlb
notl
insl
jb
sub
mov
mov
das
jge
and
xor
lret
mov
push
and
mov
js
fstp
outsb
push
data16
mov
cmp
inc
mov
pushf
pop
inc
pop
out
pop
loopne
add
mov
xor
fiadds
outsb
or
xchg
push
cs
push
gs
test
xor
sub
roll
xor
dec
sbb
xchg
sub
fistpl
enter
loopne
stos
sub
movsl
lds
lret
shr
inc
imul
dec
ret
lods
mov
sbb
mov
mov
and
lahf
lock
pushf
add
mov
outsl
inc
xchg
jmp
insb
and
dec
fdivrs
andl
jo
popl
adc
int3
mov
push
xchg
popa
adc
mov
push
jns
xchg
adc
gs
cmp
adc
fldenv
xchg
out
mov
xor
and
inc
mov
xchg
or
leave
int
xchg
push
add
insl
push
sbb
mov
addb
jge
cli
and
call
leave
hlt
pop
inc
aas
pop
sub
ficomps
jmp
cmpsl
aam
mov
inc
imul
xlat
leave
imul
pusha
stos
das
push
int
and
cmpsb
lcall
das
sub
cmpsl
mov
xor
push
cmc
mov
jbe
fcomps
insb
orb
popf
xor
or
gs
fmulp
mov
mov
cmc
stc
mov
mov
stos
bound
das
sbb
mov
mov
jns
adc
outsl
mov
outsl
sarl
data16
mov
cli
js
addr16
mov
mov
loopne
addr16
jns
inc
aam
subb
pop
sbb
sub
mov
add
xor
fsubs
loop
ljmp
cli
in
xor
push
loop
lahf
jmp
es
lock
lods
pop
or
mov
in
imul
cmp
lret
adc
inc
push
adc
inc
mov
ja
push
fiadds
jl
sbb
loopne
or
out
xor
jmp
push
pusha
popf
je
jo
imul
out
cwtl
pop
test
sbb
rcrl
mov
bound
cli
ret
data16
dec
js
pop
lret
cltd
dec
push
push
jle
arpl
sbb
jmp
cmc
xor
sub
add
sahf
sbb
pop
fidivrs
in
arpl
in
fs
mov
mov
mov
in
adc
mov
out
hlt
xor
or
inc
jp
push
lret
outsl
jb
xchg
jg
mov
sub
cmp
cwtl
daa
popa
jecxz
mov
push
xor
jecxz
clc
xchg
repnz
xor
or
das
stos
push
in
and
xchg
add
stos
jns
jle
push
dec
pusha
cmp
mov
mov
or
cmp
inc
cmp
xchg
pop
mov
xor
mov
dec
dec
xlat
test
pusha
jns
adc
jns
lods
out
xchg
mov
leave
push
jae
jb
mov
loope
fsubr
fdivrs
test
mov
call
lods
fisubrl
lret
sahf
ds
or
dec
fadd
sub
idiv
dec
fdivl
inc
cwtl
push
adc
xchg
mov
mov
arpl
and
scas
out
sbb
inc
ret
out
jl
and
jge
jl,pt
cltd
out
sub
xor
cwtl
and
fnstsw
jle
sbb
ds
sbb
scas
sbb
xor
mov
sub
add
xchg
rorl
inc
andb
push
mov
xchg
enter
inc
xchg
scas
fadd
hlt
push
jge
ficompl
jns
in
in
iret
pop
ret
push
lds
xor
cmpsl
shlb
negl
add
sbb
mov
test
arpl
aaa
xchg
cmc
inc
mov
jecxz
pop
or
jecxz
arpl
ss
andl
repnz
sub
comiss
or
inc
mov
jo
sub
daa
cmpl
xchg
scas
adc
and
pushf
or
pop
insl
movsl
cmp
mov
fdivrl
gs
cmp
ljmp
or
sub
xchg
cwtl
cmp
sub
sahf
add
inc
dec
pop
push
push
push
jne
out
pcmpeqb
movl
push
test
sbb
subl
cld
ret
mov
lea
sbb
or
mov
pop
cmp
mov
call
stos
movsb
cmpb
xor
popf
and
cmp
lahf
mov
or
int3
jo
lds
sub
pop
popfw
pop
imul
sub
pushl
dec
adc
cmp
fdivrs
dec
jb
cmp
insb
jmp
xchg
fildl
mov
inc
xchg
cli
sti
add
mov
fiaddl
aas
add
dec
sbb
sub
sub
dec
mov
or
test
test
cmp
fadds
xor
mov
mov
aam
scas
pusha
testl
dec
xor
xchg
dec
cli
outsb
loopne
movl
inc
push
mov
ljmp
into
jmp
push
daa
fwait
les
insb
cmp
dec
lahf
je
ficoml
into
mov
lcall
or
fstl
adc
adc
cmpb
xchg
ss
and
das
pop
cwtl
shl
sbb
and
inc
or
rcl
xchg
cmp
in
mov
fnstcw
in
or
je
adc
rcll
adc
jnp
push
mov
and
and
add
imul
sbb
cmp
xchg
insl
jge
lods
xorl
xor
cld
add
cmpb
imul
in
ret
imul
jmp
xlat
xlat
xchg
xor
mov
iret
imul
mov
arpl
or
jmp
jl
lock
stc
pop
sub
xor
sub
pop
push
mov
push
outsb
mov
orl
cli
call
add
sbb
add
ficoms
lret
stc
adc
mov
jno
lods
dec
or
call
sub
mov
call
jae
add
in
xchg
mov
shlb
add
into
mov
sarl
lods
jp
pop
cmpl
roll
cli
sbb
lock
insl
inc
sbb
cmc
add
push
mov
cmp
mov
rep
insb
mov
in
je
addr16
pop
xchg
cli
adc
jno
rcl
or
inc
insb
loopne
and
xor
sbb
xor
ds
dec
jge
dec
imul
lock
sub
inc
stc
inc
movsb
cmp
enter
adc
mov
dec
in
inc
les
and
mov
orb
dec
push
fldcw
dec
ret
test
sahf
repnz
pop
jge
lahf
sarl
mov
or
les
lahf
clc
fsubr
sub
adc
in
rcrl
jno
fwait
bound
int
xchg
shll
push
mov
add
pop
arpl
pop
jb
sbb
sbb
arpl
inc
xchg
push
mulb
or
mov
jno
lods
adc
or
xlat
xchg
dec
stos
loopne
ds
data16
add
inc
jae
sub
jecxz
cmp
faddl
shlb
push
jmp
xor
loopne
inc
adc
arpl
pop
je
push
adc
cltd
jl
test
push
fisttpl
mov
cmp
push
xor
insl
adc
f2xm1
mov
inc
push
inc
or
mov
fbstp
push
xchg
jno
out
stos
mov
in
and
sti
dec
repz
cltd
and
lods
jnp
adc
repz
jecxz
fcmovnu
add
pop
sar
jle
and
cmp
addb
sub
ss
popa
pop
xchg
fcoml
xchg
cltd
call
cld
in
insb
mov
popa
xor
dec
dec
xlat
addr16
inc
inc
xchg
outsl
mov
imul
ljmp
mov
aad
lods
xchg
cmpsb
jge
ds
dec
ja
inc
mov
adc
test
test
aam
mov
mov
dec
test
fs
arpl
push
or
and
out
cltd
and
fs
je
inc
mov
push
stc
sbb
test
jmpw
sub
mov
lea
scas
rcrl
es
daa
dec
xchg
iret
nop
mov
cli
mov
mov
push
pop
ret
pop
int
cmpsb
cmc
dec
pop
xchg
cli
or
aas
dec
dec
mov
notl
fwait
mov
lods
aaa
insb
jno
push
sub
and
push
cmp
mov
inc
lods
mov
out
mov
push
in
aam
mov
lods
cld
test
xor
or
mov
rolb
inc
int
in
js
pushf
nop
movsl
pop
fdivp
jo
divl
shlb
dec
stos
mov
adc
inc
dec
mov
sub
out
add
popf
lahf
mov
push
mov
push
cltd
push
rorb
fs
xor
sbb
mov
lea
or
dec
je
lds
lret
xchg
les
cmp
and
stc
jmp
cvtpi2ps
stos
ss
test
and
jmp
cltd
push
adc
imul
sti
fwait
xchg
xor
test
xchg
xor
jno
jae
shl
sbb
aam
jge
add
mov
fisttpl
ror
mov
lcall
cli
pop
hlt
xor
adc
cmpsl
test
mov
pop
gs
jnp
xchg
clc
divl
dec
mov
pop
and
mov
cmp
pop
hlt
jo
sub
pushf
test
mov
loope
mov
mov
movsb
sarb
jns
sbb
pop
lahf
lahf
loop
adc
add
cmp
lods
cmpsb
cmpsl
and
dec
cld
push
fcmovne
stos
js
sti
sbb
pop
or
cmc
jmp
out
mov
addr16
in
ljmp
sub
negl
js
or
sub
pop
cmc
in
fildll
nop
add
jne
sbbl
mov
lds
xchg
daa
in
stos
shl
inc
fs
xchg
mov
push
mov
les
xchg
push
sub
stos
loope
sub
pop
js
sbb
shll
push
jge
cltd
lods
dec
into
push
mov
push
dec
ja
pushl
shr
dec
std
mov
adc
sbb
inc
and
xchg
jns
ja
mov
icebp
cltd
pop
clc
cmp
and
pop
popl
movl
sub
pop
sub
inc
mov
cld
xor
xor
mov
mov
dec
shll
push
test
test
out
fisubrs
jns
push
mov
xor
jmp
pop
das
rcll
mov
inc
subb
mov
iret
cmp
imul
rcrl
xor
adcb
mov
add
dec
xchg
xor
cmpsl
in
jae
mov
push
jae
sbb
loopne
in
fmulp
sbb
mov
in
imul
xchg
and
mov
insb
pop
xchg
dec
cmp
sbb
dec
mov
aad
insb
add
stos
add
dec
push
cmp
jno
cli
xchg
sub
adc
xchg
xor
mov
pusha
cmp
lahf
xchg
test
dec
sbb
push
popl
inc
xor
push
inc
adc
push
out
jo
xchg
mov
jnp
mov
or
insl
in
jo
adcl
testl
lahf
repz
xor
and
inc
push
pusha
mov
je
xchg
enter
pusha
mov
cmp
pop
out
or
xor
xchg
scas
dec
jmp
stos
sbb
cmp
mov
push
adc
mov
mov
lods
test
push
shlb
test
in
cmpsl
stc
fiaddl
fwait
inc
popf
cltd
mov
in
mov
sti
pop
mov
mov
das
adc
sbb
pop
out
rcll
lods
ja
clc
cmp
xchg
xor
mov
int3
pushf
shlb
sbb
push
shrl
stos
pop
add
adc
xor
int3
pop
sbb
pop
je
iret
xchg
aas
or
jne
xor
pop
mov
rcr
xor
push
sub
sar
and
push
loopne
jge
jns
out
in
pop
jmp
jo
into
push
divl
scas
jb
out
aad
mov
popa
sbb
xchg
xor
jae
out
aad
fadd
jecxz
xor
lea
aam
cmpb
ret
fisttps
push
cmpsb
sbb
incb
mov
aas
rcll
lea
push
dec
stos
cmc
sbb
les
shlb
sahf
sbbl
xchg
inc
jo
xchg
aad
adc
cmpsb
outsb
les
popa
cmpb
xor
leave
push
in
mov
or
and
test
push
push
jae
push
adc
dec
popf
ret
pop
pop
sbb
cs
jmp
cmp
xor
aad
sbb
clc
cmp
les
jns
push
add
sbb
mov
xor
dec
lahf
pop
push
mov
sbb
jb
testb
hlt
add
inc
inc
add
push
stos
loope
fsubrp
pushl
push
enter
popa
mov
push
add
insb
inc
mov
lahf
ret
pop
push
xchg
jge
cwtl
add
pop
xor
fnsave
decb
xchg
xor
inc
popa
sbb
in
cmpl
lods
test
xchg
stos
test
out
outsl
outsb
ds
out
sub
int
loope
jbe
mov
lcall
push
clc
jle
les
and
addl
jg,pt
subl
pusha
hlt
outsl
pop
xor
add
negb
das
loope
and
or
adc
gs
insl
pushf
gs
imul
mov
xchg
stos
int3
je
fwait
or
add
jle
dec
and
testl
cmp
push
int
jnp
ja
pop
mov
ret
daa
cli
xchg
int3
push
sbb
fadds
push
cmp
clc
daa
mov
dec
stos
in
inc
sub
scas
dec
addr16
sbb
inc
xchg
jecxz
hlt
mov
xor
mov
sbb
js
and
in
sahf
ljmp
lahf
jno
ja
mov
cld
push
or
lds
inc
popa
sub
adc
sub
push
popf
sbb
add
adc
add
mov
outsl
das
scas
add
dec
mov
call
xorl
push
icebp
sbbl
push
push
or
ret
enter
jmp
nop
xlat
push
in
ds
neg
jo
movsl
js
repnz
enter
in
insb
loop
mov
rclb
and
xor
mov
hlt
dec
faddp
inc
mov
pop
mov
outsb
mov
in
enter
and
jge
imul
adc
xchg
jmp
mov
sar
push
fdiv
mov
xchg
jl
pusha
inc
xor
push
add
ret
imul
jae
stos
jnp
pop
jae
daa
sub
xchg
decb
lahf
xor
ss
int
cmc
repnz
ss
nop
sub
pop
pop
fcoms
sahf
dec
hlt
bound
loop
sub
mov
aaa
cmpsb
xchg
jno
adc
fistpl
cmc
jge
mov
pop
mov
inc
mov
lcall
adc
idivl
or
imul
xlat
scas
cli
sbbl
nop
lods
push
nop
insb
mov
push
adc
stos
jecxz
xor
mov
fcomi
ja
add
fisubl
jb
and
xchg
and
add
filds
add
jo
daa
movsb
repz
xchg
jl
enter
fstps
mov
out
std
aas
daa
mov
movsb
xchg
push
add
test
add
fs
cmc
xchg
or
bound
adc
xor
into
sahf
ds
jmp
cli
adc
cmp
jmp
fs
aaa
sub
ds
sbb
lcall
insb
call
repnz
cmp
lcall
clc
push
dec
mov
pop
popa
sets
jbe
push
lcall
jmp
jae
repz
mov
push
hlt
dec
scas
jae
sub
push
xor
repz
inc
das
add
in
clc
dec
iret
ficomps
push
pop
jle
mov
push
mov
in
mov
push
sub
dec
push
les
mov
fidivrs
fwait
push
inc
scas
test
pop
enter
xchg
jg
xchg
add
and
sbb
inc
mov
sbbb
mov
iret
pop
mov
add
sbb
sub
rcrl
les
outsl
int3
or
sbbb
fiadds
sarb
sbb
inc
mov
hlt
ret
pop
int
sub
sub
ror
xchg
push
xchg
data16
dec
ret
into
and
mov
mov
int3
or
cwtl
scas
shll
clc
dec
call
cmp
popf
out
pop
push
lahf
aad
push
dec
pop
ja
fisubrs
jle
push
pop
adc
pop
push
xor
push
hlt
pop
repz
lds
add
es
jg
xor
imul
es
loop
cmc
adc
ret
fs
test
stc
stos
adc
nop
inc
into
pop
iret
push
cs
aad
in
and
jecxz
in
sar
mov
pop
pop
pop
outsl
imul
aaa
imul
cmpsb
pop
loope
outsb
and
jns
lods
cmpsb
push
call
mov
outsl
ja
dec
scas
mov
pop
and
rcrb
mov
rcrl
cmp
subl
or
sbb
add
nop
lret
add
movsl
adc
icebp
mov
adc
cwtl
sbb
sub
xlat
inc
inc
fstpl
inc
and
sbb
std
int3
lret
xor
int
xchg
fisubrs
pusha
rolb
sbb
push
in
gs
je
mov
sahf
sub
sbb
pop
add
fcomps
cmp
cwtl
popa
and
cmp
adc
outsb
xchg
lret
jmp
mov
and
sbb
mov
fnsave
pop
movsb
xor
sub
or
xchg
push
je
mov
loop
mov
xchg
cwtl
sub
jl
add
xorl
mov
xor
outsl
sets
in
rorl
cmp
push
push
cli
inc
or
add
lds
sub
insl
add
push
sbbl
leave
pop
mov
or
push
mov
in
rorb
mov
fstpt
xor
xchg
push
dec
lock
sahf
cmpsl
inc
adc
jo
out
jp
cmpb
fstpl
cs
lods
adc
jp
fnstenv
xor
out
pop
cmp
movsl
xor
cmc
fistpll
fwait
cli
shlb
ljmp
mov
lods
jae
push
mov
aam
or
icebp
mov
pop
int3
mov
movsl
popa
jae
mov
mov
call
fstps
pushf
sbb
inc
daa
fucomi
sub
or
mov
mov
testl
add
or
xor
mov
es
pop
sub
sbb
jbe
outsb
dec
xchg
mov
int3
ja
fdivrs
sub
mov
or
push
mov
xor
mov
sbb
test
aad
mov
sarl
hlt
and
push
mov
dec
add
xor
repnz
adc
mov
mov
in
mov
cmc
cmp
pop
lea
stos
sbb
sbb
pop
or
ret
fmulp
dec
xchg
shll
push
sbb
xchg
add
bound
loopne
cbtw
fimull
add
movsl
shll
fstps
ds
cmp
mov
pop
shl
lret
inc
fs
dec
mov
dec
pop
cmp
xchg
push
leave
imul
loopne
aad
adc
jle
inc
repnz
sub
mov
dec
xlat
daa
cmc
xor
fdivs
jmp
mov
mov
or
and
adc
lods
stos
shlb
mov
scas
adc
jmp
xchg
test
fisubrl
sbb
cmp
add
test
sub
in
outsb
push
lret
pop
lods
mov
mov
ja
pop
sub
pushf
add
icebp
xchg
pop
stos
js
sti
mov
and
sub
add
sub
imul
mov
pop
rolb
add
out
mov
mov
sub
cmp
je
vmovdqu
popf
aad
and
mov
pop
jecxz
mov
mov
jge
fistps
pop
popf
roll
mov
mov
mov
in
adc
mov
push
test
in
adc
rclb
mov
push
xchg
cli
xlat
outsl
mov
int
mov
fsubl
jae
xchg
aam
inc
sbb
pusha
cld
adc
loop
lcall
rcll
rcll
or
lahf
scas
xor
push
jae
xor
inc
add
lds
sbb
stos
out
into
mov
sbb
adc
pop
enter
push
lds
sbb
jecxz
dec
jge
add
xlat
jo
testb
pop
lahf
xchg
pop
fstpl
mov
lret
sub
xlat
pop
jl
xchg
jns
mov
in
push
imul
adc
inc
sub
mov
mov
push
mov
push
call
call
mov
inc
xchg
mov
inc
sub
rorl
pop
sub
dec
xchg
ror
adc
cwtl
dec
lock
test
aas
cli
or
ficompl
lret
cmc
out
inc
iret
movsb
xchg
sbb
push
xor
test
jp
cmp
push
loopne
jnp
fcmovnu
cmp
mov
sub
xchg
cs
popa
test
fistl
push
sbb
addb
mov
decl
xchg
xlat
push
lods
and
mov
scas
outsb
cld
dec
out
jmp
xor
pop
cs
push
lahf
lods
or
std
push
and
imul
arpl
pop
sahf
mov
test
push
adc
cmp
loop
xchg
sbb
out
mov
or
cltd
lods
andb
mov
stc
insl
xchg
push
das
pushf
mov
mov
xchg
cwtl
es
xor
stos
lahf
movsb
pop
sub
mov
add
sub
in
jbe
fsubl
cs
mov
sbbl
cli
pop
xchg
addps
rcrb
adc
daa
and
leave
iret
push
ficomps
rcrb
repz
or
xlat
pop
test
fsubs
and
push
lret
pushf
push
push
jp
mov
daa
lds
cmp
repnz
pop
mov
jns
stos
mov
add
mov
jne
dec
adc
lock
lret
out
sbb
jne
pop
xchg
pop
es
dec
ds
shlb
and
sbb
fadds
xchg
dec
add
pop
in
push
and
inc
mov
stc
mov
push
jecxz
fstl
sub
dec
ljmp
and
imul
xchg
orl
sarb
pop
fmuls
bound
lock
arpl
xchg
dec
inc
add
add
mov
mov
jb
sarb
mov
pusha
jge
sbb
mov
dec
imul
push
outsl
and
add
cmpsb
ss
repnz
or
sub
scas
xor
jns
xchg
sbb
pop
inc
jg
push
xchg
mov
dec
roll
add
mov
fisubrs
mov
mov
insl
lods
insl
jb
lods
aas
jg
call
inc
lock
push
adc
sub
mov
shr
mov
xor
mov
push
fisttpll
mov
hlt
cmp
lea
bound
dec
lock
ficomps
iret
clc
popl
or
push
and
aam
xchg
cmp
mov
test
inc
repz
mov
cmp
xor
xchg
inc
push
loopne
or
jge
cmp
fwait
dec
sbb
cmp
sahf
jne
jo
pop
push
xchg
and
dec
in
push
shl
mov
sahf
jbe
pop
push
aad
ret
leave
mov
mov
xchg
stos
cwtl
adc
adc
ret
adc
add
into
and
popa
test
rorb
hlt
dec
shll
jo
sbb
xacquire
fildl
insl
sbb
mov
cwtl
pop
mov
ss
ret
jns
sub
add
add
stos
pop
lock
repnz
movsl
push
and
je
arpl
mov
ret
daa
or
outsl
and
cmp
enter
sub
jnp
mov
sub
xor
pop
fimuls
cmp
inc
cbtw
das
cwtl
std
add
pop
inc
xchg
sbb
mov
xchg
in
repnz
sete
cmp
mov
mov
jl
push
jb
and
mov
pop
dec
jge
stos
test
adc
fwait
sub
pop
adc
incl
scas
jge
or
popf
daa
shrb
mov
not
jl
push
jmp
fcmovne
or
jno
insl
out
loop
mov
inc
jg
outsl
test
or
mov
pushf
add
stos
daa
mov
push
cmp
mov
lret
sub
call
cmpsl
or
iret
jbe
mov
add
sbbb
add
mov
cmpsl
ss
imul
daa
jns
and
dec
imul
in
std
mov
ja
pusha
mov
pop
fcmovbe
sub
movsb
push
es
cs
aam
cmp
fisttpl
aas
in
imul
ret
insb
pop
ja
mov
add
or
pop
adc
xorl
add
lret
pop
push
jmp
addb
aaa
mov
je
push
dec
or
push
push
mov
jo
outsb
add
sub
popa
push
push
mov
call
cmp
inc
notl
cmc
cli
loope
leave
vfrczsd
mov
and
movsb
sbb
sbb
mov
int3
lods
dec
cld
call
dec
jns
int
sub
pop
jmp
sub
sub
cmp
pop
mov
rorl
mov
push
sbb
imul
push
in
dec
push
sar
push
dec
aam
jno
or
jbe
fisubrl
sbb
dec
jne
enter
mov
pushf
shlb
xor
sbb
push
sub
jae
jmp
mov
scas
movsl
frstor
sbb
hlt
shrb
cli
pop
pop
mov
inc
xor
mov
imul
in
daa
repz
cmpsl
fcoms
mov
loopne
fwait
call
sahf
and
jg
je
outsb
movsl
mov
add
inc
fucomi
in
xlat
bound
xor
les
scas
test
movsl
arpl
loope
scas
jae
pusha
call
and
test
loop
pushf
xor
sub
mov
mov
jbe
cmp
pusha
inc
lret
test
push
ss
cmp
cwtl
orb
std
pop
pop
push
sub
dec
orl
adc
mov
addr16
xor
pop
mov
mov
jmp
ficoml
push
add
in
xchg
sub
jno
pop
aam
data16
cmpb
ss
sub
in
cmc
icebp
sub
sbb
xorb
cmp
stos
jmp
xchg
insb
inc
xchg
push
aam
out
and
je
sahf
call
movsb
pop
sarl
cli
mov
and
fdivr
inc
mov
aad
test
xchg
aaa
cmp
cmp
insl
fcoms
mov
loope
sub
movsb
js
fstp
cld
or
lds
xchg
xchg
fisubrs
fisubrs
int
or
adc
jp
rorl
push
push
jl
mov
sahf
andb
cmp
int3
mov
outsb
xor
loope
jge
add
mov
sub
push
lahf
add
dec
outsb
in
fistpll
imul
xor
fwait
scas
or
xchg
add
push
sub
mov
cmp
add
inc
and
inc
or
ds
bnd
pop
aaa
sub
lock
mov
int
add
dec
and
shlb
sub
pop
and
lret
rorl
pop
sbb
enter
into
icebp
dec
dec
jge
inc
outsl
roll
dec
jo
in
mov
ret
mov
xchg
mov
dec
into
into
and
idivl
neg
ficoms
lcall
jmp
scas
inc
enter
sub
dec
pop
mov
pushf
or
loopne
stos
fmull
sbbl
jbe
add
xchg
inc
mov
repz
incb
mov
push
adc
cmp
jge
cltd
inc
mov
repz
jns
fildll
mov
xor
xor
push
or
push
adc
cmpsl
out
imul
out
jnp
inc
push
or
out
xlat
mov
adc
push
mov
pop
and
imul
xor
lods
adc
pop
dec
bound
jno
cmpsl
mov
test
mov
aam
faddl
fbstp
call
and
mov
int3
movsl
mov
add
test
mov
dec
adc
jno
push
xchg
aas
cmc
repnz
lahf
sbb
mov
aas
push
lcall
addb
lret
orb
pop
inc
mov
push
pop
ja
mov
sbb
insb
out
addr16
pop
fwait
notl
jno
scas
mov
out
inc
push
xchg
fabs
sbb
push
lods
pop
rclb
adc
xor
pop
cmp
rcll
shl
fsts
cmp
push
les
lret
push
add
in
shll
jno
or
ss
jne
ret
pop
and
adc
out
sub
dec
lds
sarl
mov
popf
fdivrs
jecxz
add
inc
push
dec
ret
insb
fs
jne
pop
data16
out
jp
jne
popa
push
cmc
sub
rcll
lcall
fxch
movsb
xor
xlat
mov
inc
divl
cmp
cmpsl
jno
jg
xchg
xor
lcall
stos
test
lds
mov
stc
aam
ss
inc
lods
fnstcw
add
adc
scas
jp
and
xor
rcrb
popf
mov
ds
mov
xchg
ljmp
jl
clc
hlt
adc
cmpsl
int
pop
mov
push
mov
scas
jne
pusha
scas
fwait
dec
pop
js
xchg
mov
aam
dec
push
testl
js
sub
add
mov
and
enter
fsubrs
cmp
pushf
inc
into
cmp
imul
gs
jge
in
xchg
mov
xlat
cli
add
mov
and
addr16
into
or
out
fiaddl
sub
sub
out
aaa
clc
mov
fdiv
lret
fwait
add
mov
dec
movsb
push
xor
xchg
insl
jmp
push
hlt
or
pop
xchg
mov
cli
shrl
xchg
push
sarl
sbb
jmp
leave
mov
adc
mov
int
icebp
arpl
test
jae
rol
push
or
xorl
xor
daa
mov
mov
imul
xchg
push
jae
mov
lea
or
cs
jg
loope
aas
dec
loopne
roll
fisttpl
pushf
ds
mov
pop
roll
inc
or
test
mov
fldenv
mov
add
inc
mov
lret
sti
insb
mov
scas
fsubrl
inc
dec
mov
dec
mov
mov
stos
decb
call
faddl
adc
jp
mov
xor
cli
popa
push
xor
lret
cmpsl
or
jne
jo
mov
popa
xor
addl
fsubl
jmp
or
shrb
outsl
sub
xchg
sahf
sub
int3
lcall
add
orb
repz
dec
ja,pt
mov
push
sbb
aad
or
jl
mov
sub
mov
in
pusha
mov
add
sbb
mov
pop
pop
jnp
mov
aad
fistpll
mov
adc
lea
add
pop
es
xchg
mov
jns
xchg
test
mov
or
push
fwait
into
mov
outsl
xlat
sub
and
xor
xchg
add
push
clc
inc
push
mov
sbb
pop
cmp
sbb
xor
fld
out
sti
int3
cli
sbb
pop
orl
mov
and
mov
gs
add
jecxz
or
mov
imul
ficompl
mov
ja
xchg
sbb
push
inc
jg
clc
les
pop
inc
in
mov
sub
jge
inc
cmp
or
dec
inc
xor
dec
dec
and
sbb
lcall
sub
jmp
lds
lret
testb
cld
sbb
cmp
mov
rolb
icebp
addr16
cmp
xchg
test
add
ret
mov
cwtl
xor
push
sahf
shll
sarl
sahf
jle
xor
dec
mov
xchg
adc
int3
decb
mov
pop
pop
in
cmc
adc
sbb
add
in
fwait
mov
xor
pop
movsb
outsb
mov
mov
roll
and
jmp
fdivs
cmpsl
rorl
mov
rcl
cmp
ret
divb
cmpsb
mov
cwtl
popf
cmp
in
sbb
mov
imul
mov
jle
std
aaa
repnz
sub
in
push
fmull
and
jno
push
xchg
mov
loopne
iret
ret
cmp
rorb
mov
lcall
add
shlb
out
sarl
jmp
inc
adc
xchg
mov
mov
xlat
push
adc
pop
mov
jno
lds
and
push
xor
add
nop
mov
mov
fstl
push
lahf
push
das
aaa
shrl
lret
nop
push
inc
test
inc
adc
rolb
dec
insb
jne
outsb
mov
xchg
mov
add
mov
add
lods
inc
xchg
jbe
mov
xor
lret
lds
push
xor
sub
mov
adc
scas
xor
mov
int3
mov
mov
lcall
sbb
orb
cld
jnp
les
int
or
lea
mov
mov
adc
mov
out
and
repz
fmuls
cmp
lcall
mov
inc
scas
idivl
cmpsb
cmp
mov
lock
cmp
fwait
rcl
and
and
or
fildl
stos
mov
ret
or
test
ja
push
popa
xlat
rcll
inc
pusha
jp
nop
cld
mov
pop
insb
mov
lcall
xchg
fldl
xchg
int
push
inc
xor
stc
test
sbbb
inc
xor
pop
ljmp
and
mov
movsl
jle
push
mov
push
pop
push
test
outsb
scas
or
and
fs
stc
jl
addl
xchg
inc
push
inc
addb
mov
dec
popl
inc
push
pop
xchg
mov
push
xorb
dec
cwtl
sub
leave
mov
mov
mov
hlt
pop
sbb
xchg
mov
xchg
call
mov
sbb
stos
adc
jnp
aam
dec
xchg
pop
sbb
jns
adc
push
rolb
jg
jl
mov
jp
pop
loop
rcrb
mov
icebp
adc
mov
sbb
cli
push
popf
outsb
inc
or
fimuls
popf
push
call
cmpl
gs
leave
mov
sub
adc
sbb
inc
ds
test
fsubrl
out
jbe
scas
gs
les
xlat
xlat
mov
mov
push
push
xchg
test
out
insl
xorl
cmpsl
push
xor
xchg
ljmp
and
xor
cli
xlat
or
sub
in
sub
dec
aas
ret
mov
xchg
mov
movd
bnd
mov
sbb
push
ljmp
xchg
xchg
jne
es
push
sbb
xor
jmp
pop
and
inc
xchg
xor
or
adc
pop
aam
pushf
adcl
stmxcsr
xor
jno
jbe
xchg
jg
cwtl
sti
fiaddl
scas
scas
jge
inc
jmp
mov
xchg
or
inc
imul
jle
xchg
sbb
iret
pop
lock
xlat
mov
repz
mov
rcll
mov
ljmp
movsl
add
int3
jge
inc
into
add
cmovb
mov
lcall
inc
rorl
ficoms
fmull
sub
xchg
rclb
push
mov
dec
sub
dec
movl
sahf
fs
dec
jl
xchg
inc
loope
test
sti
dec
imul
mov
jbe
sbb
mov
push
add
xor
cmpsl
mov
push
cltd
push
mov
pushf
or
push
dec
pop
in
mov
push
icebp
pop
scas
xlat
push
inc
dec
inc
push
xchg
in
pop
and
das
and
cwtl
sub
es
mov
fs
sbb
sarb
push
fwait
adc
fisubrl
mov
sub
dec
pushf
fdivl
mov
inc
fwait
pushf
jmp
sub
push
xlat
mov
push
insb
jge
aad
xchg
dec
je
mov
mov
fdiv
add
push
mov
mov
pop
pop
cld
cmpsb
in
xchg
cmp
idiv
xor
sbb
mov
pop
pop
sbb
sub
sarl
jp
test
movsb
xchg
add
lea
and
mov
xor
loopne
push
jmp
out
xor
or
movsb
adc
mov
xchg
int
fidivl
xor
into
getsec
dec
shr
cwtl
xchg
lea
lretw
or
enter
fbld
loop
mov
jno
fcoms
stos
roll
push
iret
mov
xlat
dec
mov
push
push
jo
fcmovbe
sbb
das
das
hlt
mov
xchg
cmp
enter
push
sub
mov
and
insl
sbb
lods
inc
loopne
jl
cmp
and
xchg
push
jmp
mov
xchg
pop
push
push
movsb
scas
or
imul
fsubp
sbb
mov
mov
dec
jecxz
adc
push
dec
and
rsm
pop
xchg
or
shlb
ret
cmp
pop
jmp
add
pminub
cmpsl
xor
adc
mov
xor
mov
ds
sub
lds
pusha
xchg
xor
sbb
xchg
jp
ficoms
or
sbb
add
mov
pop
xchg
in
pushl
pusha
ror
xor
sub
xchg
sahf
sub
mov
dec
test
fstl
push
pushf
daa
orps
jmp
adc
imulb
push
sbb
lea
sub
inc
jecxz
jl
mov
xchg
popf
jb
imul
sbb
or
xor
sbb
jno
int3
adc
mov
les
aam
xchg
lds
add
push
stos
imul
andl
arpl
xchg
int3
mov
repz
sbb
es
sub
pop
insb
sbb
hlt
ja
mov
pop
mov
mov
jmp
mov
popa
scas
push
test
loop
sahf
fsubrl
je
add
les
push
lea
mov
or
pop
pop
inc
fsubl
xor
popf
pusha
cli
mov
adc
sti
and
lret
or
test
test
jle
inc
pop
outsl
xor
dec
fimuls
sbb
inc
or
or
jecxz
pop
xchg
mov
lahf
jb
sar
call
sbb
cmp
arpl
cmp
sbbl
iret
xlat
addb
jnp
add
adc
ja
hlt
jae
subb
sub
mov
mov
or
fwait
sbb
xor
mov
mov
adc
jns
dec
lea
inc
sub
push
sub
imul
cmp
pop
mov
and
dec
xchg
ffreep
fidivrs
test
sub
sub
jle
adc
sbb
pop
sarl
lds
out
xchg
and
mov
pop
popa
outsl
dec
xlat
mov
xor
loopne
cmp
test
mov
sarl
test
xchg
add
lcall
lods
or
inc
jbe
push
sbb
iret
roll
push
mov
cmpsb
les
lcall
rorl
push
mov
and
sti
sbb
sub
xchg
mov
add
pop
shll
jl
mov
adc
fistps
and
ds
lahf
adc
mov
pushf
mov
adc
inc
test
jnp
sti
int3
inc
shlb
dec
cltd
ds
inc
or
adc
push
jge
mov
push
dec
ljmp
popa
enter
int3
xchg
movsb
mov
xlat
mov
cld
push
aas
sbb
fcmovbe
pushf
sarb
mov
add
cs
push
into
int
fcmove
sub
dec
fstpl
daa
push
shrl
mov
pushf
sbbb
mov
mov
push
xchg
or
jge
adcl
or
cmpsl
pop
pop
fstp
mov
aaa
fadds
mov
into
or
enter
push
shlb
hlt
enter
mov
xchg
inc
mov
cmpsb
mov
and
jno
fucom
adc
leave
sbb
add
push
cmp
adc
jle
push
push
jmp
adc
lahf
je
jg
nop
lods
dec
test
or
xor
je
daa
ss
sbb
add
scas
mov
lcall
dec
jg
xchg
cmp
fdivs
dec
loopne
sub
mov
mov
adc
out
xor
add
adcb
sbb
push
aam
fwait
push
and
inc
ret
xor
lods
cld
mov
push
xor
inc
cmp
fcmovu
shr
pusha
aaa
sub
mov
pop
loopne
pop
in
push
fldenv
aam
add
std
insb
or
jmp
call
addr16
dec
adc
jmp
rcl
xchg
mov
xchg
ss
mov
push
outsb
iret
cmp
jns
xlat
xchg
repz
push
jno
adc
repnz
or
dec
and
imul
lds
stc
push
push
mov
fs
hlt
adc
pop
dec
mov
test
bound
or
mov
cmp
dec
or
movsl
and
pop
mov
and
mov
std
repz
scas
xchg
test
push
call
sub
in
or
bound
repz
test
mov
mov
add
outsb
enter
iret
pop
test
jge
ja
rclb
mov
mov
sbb
les
sbb
mov
jno
sub
pushf
pop
lds
add
scas
xchg
xor
sub
insl
aam
clc
inc
shlb
aam
insl
daa
cwtl
inc
mov
sbb
cltd
aas
inc
rol
adc
mov
je
mov
xchg
mov
lds
pop
ljmp
out
mov
loop
ljmp
pop
fs
mov
xchg
data16
fisttps
cmp
sbb
xchg
xor
xchg
dec
dec
ret
stc
sbb
add
cs
repnz
or
mov
cmp
cmp
out
mov
insl
add
adc
pop
mov
mov
inc
adc
mov
mov
adc
mov
scas
addl
xor
cmp
inc
dec
push
lcall
mov
jp
xor
iret
frstor
adc
jb
sub
jbe
fcompl
xor
gs
test
popa
dec
and
cmpsl
xchg
es
lods
pop
outsb
imul
jp
loop
popf
mov
inc
fmuls
xchg
andb
add
dec
pop
or
dec
test
es
imul
iret
jnp
nop
bound
lods
iret
fsubl
push
outsl
sahf
mov
adc
pop
pop
inc
test
fldenv
clc
dec
pop
jns
les
imulb
jle
jmp
imul
adc
cmpsl
call
jbe
fists
jnp
jge
dec
cmpsb
fildl
push
sarl
cli
mov
adc
inc
orl
enter
sbb
jg
negb
pop
icebp
sbb
adc
cltd
in
sub
fyl2xp1
mov
bound
xchg
xchg
popa
imul
shrl
sti
inc
fs
jmp
dec
je
sahf
add
outsb
pop
loop
idivb
add
xor
out
and
inc
int
and
cmpsb
dec
lret
or
fwait
pusha
pusha
in
and
inc
inc
lcall
cmp
loope
cmp
out
and
adc
sub
cli
lods
lods
xor
test
inc
xchg
test
cmpsb
mov
cmp
subb
lds
sar
inc
dec
in
cli
jno
sbb
mov
cmpxchg
enter
lret
push
fsubrs
lret
xchg
sti
jno
mov
adc
pop
sbb
mov
or
flds
sbb
cmp
mov
es
movsb
nop
fstpl
clc
and
push
shll
and
addr16
mov
or
or
sub
dec
clc
xchg
int3
xor
faddp
test
pushf
rcll
pop
mov
pop
mov
movsb
lods
cmp
sbb
xchg
int
sub
sti
mov
xor
mov
mov
loopne
test
sub
fists
fprem1
in
cld
dec
inc
ljmp
shrl
push
fstps
dec
and
xor
xor
es
insb
test
or
je
mov
or
mov
xor
pop
fstpl
lods
adc
pop
test
pop
push
jb
movsb
add
rorb
push
js
stc
lcall
lods
cli
inc
out
test
dec
jb
cltd
mov
call
aaa
cs
lock
in
push
push
dec
mov
cld
sarl
fists
out
bound
push
loopne
bound
adc
ficomps
cld
pop
mov
xchg
nop
cltd
mov
add
jb
je
int3
cwtl
das
or
mov
dec
and
icebp
pop
dec
in
mov
xchg
pop
imul
movsl
or
xchg
push
stos
outsl
xchg
jg
lods
mov
in
les
out
pushf
std
jecxz
stc
cmpsb
mov
ret
push
jge
pop
ret
pop
stc
mov
addr16
mov
repnz
push
xor
and
bound
fnstenv
repz
mov
dec
push
push
sub
and
cmp
dec
fiaddl
sbb
push
lcall
xorb
add
imul
es
dec
lahf
pushf
outsb
xchg
scas
mov
cltd
push
push
cltd
and
push
add
mov
filds
scas
outsl
ja
pop
dec
xchg
outsb
arpl
pop
enter
pop
aaa
xchg
in
xor
mov
dec
sbb
xchg
and
adc
mov
insb
sbb
inc
and
jmp
and
xor
sbb
lahf
addb
repz
add
out
insl
sbb
out
jge
movsb
push
pop
pushl
sub
in
jge
fistps
ss
std
jl
repz
call
fstpl
scas
gs
cli
pop
in
nop
cmc
into
push
push
movd
xor
push
mov
or
pop
cmpb
test
iret
je
jp
mov
icebp
bnd
scas
sub
jp
or
icebp
jge
fstpt
inc
dec
aaa
sti
xor
into
add
mov
xchg
push
movsb
cmpsb
xchg
cmpsb
sub
jge
mov
inc
and
enter
je
ss
or
fcmovne
ds
shl
mov
loopne
or
pop
in
mov
push
mov
mov
in
stos
leave
sub
ret
idivl
lds
xor
aaa
mov
popa
adc
cmc
or
div
jb
cltd
movsl
aad
addb
xor
stc
iret
xchg
loop
sub
test
and
fimull
adc
out
popf
into
or
xlat
stos
cmp
cli
gs
test
adc
mov
ja
mov
sub
xor
fsubrl
inc
xchg
pop
pop
mov
mov
add
loop,pn
adc
cmp
push
cmpsl
mov
and
sbb
sarl
mov
aaa
mov
pop
push
mov
ja
jb
pop
out
cmpsl
scas
in
lcall
mov
mov
jns
lret
mov
lock
add
mov
mov
lock
cmpsb
popf
push
dec
popa
dec
push
std
test
jmp
popa
dec
xlat
and
or
mov
push
or
out
js
out
bound
sbb
push
sub
jbe
leave
xor
add
pop
push
xchg
into
cmp
push
clc
or
roll
addr16
lret
xor
push
pop
pop
fidivrs
sub
rclb
in
mov
push
shrb
sbb
mov
add
and
jae
stc
rcll
rcrl
les
xchg
mov
jp
pusha
mov
leave
xchg
cmp
lret
test
dec
hlt
push
pop
mov
cli
mov
imul
lds
int3
pop
and
out
das
lea
or
adc
popa
shlb
inc
nop
dec
mov
push
pusha
test
pop
lret
andl
orl
fisubs
dec
add
icebp
jge
shlb
cmp
cmpsb
pop
aas
pushf
loopne
jp
mov
sti
add
xor
gs
lahf
sbb
sbb
or
sahf
fistpl
aaa
inc
sub
xorl
push
sbb
sbb
call
jmp
mov
call
leave
arpl
cmp
insl
repnz
clc
cs
adc
mov
pop
push
jg
add
xchg
xchg
in
push
inc
scas
lret
mov
in
cwtl
mov
dec
mov
test
test
icebp
fildl
pop
sub
add
mov
arpl
call
dec
xlat
inc
mov
daa
popf
pop
cmc
gs
jl
or
sub
xlat
lret
int
inc
push
in
dec
dec
sub
dec
rclb
ret
xor
jbe
cmp
inc
dec
push
fistl
in
nop
dec
idivl
les
pop
jmp
and
ret
add
jp
lret
xorb
xchg
les
sahf
pop
test
or
iret
in
dec
adc
jl
stos
push
aam
out
sbb
mov
mov
add
cmp
adc
xor
xlat
stos
inc
dec
fwait
jno
cmp
int3
or
repnz
stos
mov
mov
mov
push
adc
ret
dec
jb
mov
mov
sbb
call
mov
mov
or
icebp
es
mov
pop
and
movl
jno
mov
aaa
icebp
mov
jecxz
out
cmpsl
int3
call
fmull
inc
test
inc
push
in
mov
sub
mov
mov
out
mov
push
je
xor
insb
xchg
push
sub
or
xor
push
push
jg
ret
jge
insl
fs
xchg
out
sub
and
fwait
mov
pop
or
inc
push
out
mov
call
xor
add
mov
cmp
pop
imul
push
and
push
xchg
cmpsb
ja
lret
add
js
aad
or
adc
mulb
xor
mov
icebp
in
popf
inc
push
lret
roll
rorb
ja
pop
jmp
ret
jmp
sub
mov
aas
or
test
mov
cmp
or
ret
xchg
mov
jo
orb
adc
sti
cs
xchg
and
cmc
pop
enter
or
jne
pop
shll
inc
jmp
add
pop
ja
xchg
xchg
outsl
and
xor
leave
test
dec
pop
fnstcw
lret
mov
xchg
xlat
pusha
fwait
xor
lret
jbe
adc
jmp
pop
scas
decl
push
push
cli
lds
dec
inc
or
push
mov
out
cmp
insb
fisttpll
mov
sti
push
inc
push
pop
push
sub
mov
mov
in
mov
or
ljmp
mov
out
push
inc
in
into
mov
add
push
and
push
xchg
lcall
nop
iret
insl
jl
xchg
cld
test
adc
and
mov
mov
sti
sub
fwait
or
or
in
dec
cmp
inc
imul
or
mov
mov
dec
arpl
fcompl
push
dec
push
jl
aam
push
scas
mov
xchg
inc
mov
and
pushl
mov
rcll
pop
sub
rolb
jge
xor
fldenv
fsubrs
divb
push
sahf
jg
adc
or
into
mov
pop
call
mov
addb
mov
ret
cmp
loop
sbb
mov
pop
adc
jecxz
mov
push
xor
clc
fwait
jg
sahf
outsl
pop
lea
ds
push
push
pop
movsl
mov
dec
leave
mov
daa
and
ret
gs
jl
adc
sti
xor
jae
lds
mov
push
mov
mov
hlt
popf
sti
repnz
add
jge
xchg
out
int3
cmc
mov
xchg
repnz
loope
iret
lahf
pop
xchg
xchg
and
mov
pmulhw
loope
xchg
filds
sbb
mov
sbb
fcomps
jecxz
rol
or
or
mov
aam
rolb
dec
adc
push
insb
insl
jge
idivl
je
inc
xchg
xchg
mov
pop
and
js
mov
xor
mov
sarb
xor
mov
fcoms
dec
mov
pusha
test
mov
inc
outsl
jge
fs
mov
and
sti
stc
lods
jecxz
sub
ja
std
ss
movsb
scas
mov
mov
mov
out
sbb
int3
iret
and
xor
jmp
pop
stos
inc
adc
cmp
mov
jnp
dec
scas
sti
int3
mov
les
adc
jnp
sbb
xchg
mov
inc
mov
xor
xchg
jmp
lods
fisttpl
fs
add
fidivrs
data16
push
fdivs
jecxz
mov
test
in
jge
mov
out
jecxz
sbb
fldcw
subb
inc
clc
cmp
int3
jle
jbe
adc
push
int
gs
fcoml
push
cld
test
mov
or
mov
mov
or
xchg
cmpsb
sbb
pop
push
test
test
jp
pop
mov
test
sub
rcll
adc
pop
dec
ss
sub
xor
cmpsl
mov
outsl
cs
inc
cld
inc
shrl
clc
mov
sub
popf
sub
pushf
lock
insl
lret
mov
mov
cmpsl
movl
insl
lods
xor
xor
das
sbb
jmp
xchg
andl
add
std
jns
jmp
inc
in
pop
bound
mov
sub
xlat
pop
aad
add
loop
fdivrp
jbe
jp
dec
cmp
sub
dec
lods
out
loopne
test
mov
jmp
repnz
dec
lcall
mov
pop
jne
dec
out
jp
push
jp
stos
data16
adc
test
insb
rorb
les
dec
push
js
shrl
push
sub
sbb
xchg
fbstp
pop
mov
movsl
xor
sbb
dec
xor
in
fistpll
sbb
ret
xor
das
push
inc
jge
xchg
test
jno
int
xchg
lock
and
dec
sub
adc
add
jne
add
sti
adc
int3
rorl
insl
arpl
hlt
or
fwait
mov
sbb
push
sarl
pop
xchg
sbb
mov
out
jg
imul
push
ljmp
cmp
scas
mov
sub
pop
dec
xchg
cmpsl
cld
push
fisubl
sti
push
mov
inc
adc
icebp
mov
mov
and
push
cmp
das
ds
and
jno
sub
test
jnp
jecxz
and
cmp
jns
add
loopne
stc
imul
xchg
add
mov
cwtl
xchg
sub
mov
scas
shlb
mov
inc
sahf
pop
mov
loopne
test
push
loopne,pt
xchg
inc
mov
push
lahf
adc
inc
out
push
sqrtps
scas
fdivrl
fsubr
in
out
int
ret
sahf
lahf
push
pop
mov
scas
test
scas
add
dec
pop
test
loopne
xlat
jmp
sbb
lds
push
imul
ret
fadds
bound
cmp
inc
les
insl
loop
pop
sbb
fwait
jg
sub
mov
jg
xchg
dec
cs
mov
mov
aaa
pop
dec
adc
stos
ret
adc
or
sbb
ret
mov
or
xchg
dec
mov
lcall
fdiv
loopne
pop
sarl
cmpsl
push
xchg
add
pop
dec
mov
cmp
stos
out
push
and
and
mulb
pusha
jmp
adc
mov
sbb
sbb
inc
inc
jns
and
fisubl
cmp
mov
mov
out
push
lret
movsl
sbb
lea
scas
xor
outsl
xchg
sub
push
add
test
popa
ficomps
out
inc
and
mov
cmp
xor
or
or
mov
cltd
mov
fstps
cmp
mov
insl
jne
or
std
cmp
pop
iret
cwtl
mov
pop
cmp
imul
xchg
ds
cmpl
adc
or
or
mov
div
mov
inc
filds
out
pop
aaa
pop
mov
scas
in
sub
push
jle
ljmp
xchg
in
push
cmp
sahf
popf
testl
aaa
cmp
mov
in
push
ret
scas
push
jmp
je
je
jno
ss
jmp
mov
ret
mov
jmp
call
mov
and
ja
scas
movsl
mov
rclb
int3
outsb
push
xchg
or
addr16
xor
fidivs
aam
test
mov
scas
cld
xchg
scas
and
xor
sbb
xor
mov
inc
push
loopne
push
jae
xchg
imul
add
repnz
movsl
sbb
fs
mov
jle
fidivrs
jne
aas
lret
lea
and
xor
pop
dec
push
jne
jne
xor
insb
imul
roll
adc
push
mov
sbb
repz
cmc
fs
enter
xor
not
imul
xchg
rcrl
lds
fsubrl
cmpsl
mov
subb
mov
stos
xchg
inc
jecxz
cmpsl
shl
sbb
mov
pusha
notb
mov
push
insb
fistpl
into
cmpps
add
inc
mov
loope
stos
jne
cmc
movsl
aas
dec
test
and
and
mov
mov
dec
mov
or
mov
in
and
aam
cmpsb
sub
jecxz
cmp
lret
mov
cltd
cltd
mov
pop
call
push
mov
mov
les
sahf
cltd
dec
aad
push
int
lcall
push
dec
bnd
das
mov
repnz
mov
mov
fildl
jg
mov
rcll
fsubl
fldcw
push
and
scas
xchg
lods
jp
fcmove
data16
dec
mov
fisubl
xchg
jbe
dec
mov
mov
adc
nop
fucomip
push
ljmp
filds
push
test
fucomi
mov
test
mov
jne
jnp
jg
and
lahf
push
stc
push
std
jns
xor
lds
push
xchg
popa
movsb
pop
imul
mov
repz
loopne
lock
test
add
int
pop
jb
fnstsw
mov
inc
mov
mov
push
or
and
xchg
lret
pop
repnz
cld
gs
mov
jecxz
adcl
roll
pop
add
xor
adc
jl
fwait
pop
stos
faddl
jmp
mov
ss
jnp
push
popf
adc
leave
xchg
pop
xchg
add
jl
testb
out
pop
addr16
divb
aad
sbb
push
inc
jne
or
xor
outsb
cmp
fs
mov
mov
xchg
mov
jno
mov
mov
punpcklbw
pop
ss
inc
inc
cmp
idivl
leave
cmpsl
aaa
clc
pop
push
sar
xchg
push
jo
xchg
lret
xor
inc
test
lea
stos
cmp
cmpsl
dec
ja
call
cmp
inc
sbbl
sbb
mov
mov
or
jg
cs
aas
xor
xchg
test
rolb
push
lock
mov
push
adc
shll
mov
mov
cmp
ret
lock
sub
push
hlt
jmp
cltd
popf
arpl
push
sub
out
addb
lods
data16
fimuls
imul
in
sub
out
dec
sbb
push
sahf
fprem
mov
push
lret
bound
or
or
and
xor
and
int
lods
cmc
cld
in
ss
pop
lds
stos
xchg
xor
sbb
icebp
and
xor
repnz
das
xchg
ljmp
fwait
push
pushf
and
mov
mov
pop
movsb
into
neg
outsb
pushf
stos
mov
push
cs
push
inc
in
out
mov
pushf
mov
jae
lahf
xlat
cld
lds
push
mov
ret
repnz
mov
xchg
inc
repnz
out
das
adcl
mov
push
mov
lret
into
enter
hlt
testb
and
or
dec
out
call
insb
aam
cwtl
and
push
out
popf
ret
fwait
inc
ss
pop
xor
mov
insl
or
inc
mov
int
cltd
inc
push
push
into
mov
loope,pt
mov
loop,pn
push
mov
stos
push
add
add
ss
xor
test
int
mov
and
je
add
pop
push
test
fcmovnu
ljmp
cmp
sub
sub
sbb
xor
mov
popf
pop
mov
lahf
outsb
les
stc
inc
shrl
enter
test
pop
dec
cmpsb
add
and
pop
test
testl
nop
fbstp
insl
mov
cld
jp
mov
daa
adc
fwait
inc
outsl
push
hlt
add
je
sub
cs
push
push
rorl
mov
mov
or
lods
data16
dec
popa
xorb
in
movsl
mov
mov
adc
sub
xor
test
cmp
test
sbb
mov
les
jl
hlt
sbb
push
es
jnp
mov
cld
jg
leave
pop
pop
xor
mov
lods
jnp
cmp
xchg
inc
sbb
les
pop
inc
inc
add
and
add
jns
dec
jbe
jmp
and
jge
sub
lahf
scas
test
fsubrs
sub
or
sub
xor
push
add
pop
std
adc
enter
add
lahf
xchg
dec
add
mov
jb
pop
inc
cmp
mov
fidivrs
loop
clc
out
dec
jmp
incl
mov
sub
sbb
call
stc
cmpsb
and
das
pusha
xor
lret
lods
bound
push
inc
loopne
pop
mov
push
mov
ficomps
cwtl
push
fptan
inc
pop
cmc
jo
dec
or
add
clc
popf
jae
sbb
xchg
popf
popf
jnp
loope
mov
stc
sub
sbb
jge
mull
cmp
mov
inc
add
test
outsb
push
test
and
fildl
or
bound
jb
clc
pop
movsl
xor
push
sub
daa
cld
mov
pop
jno
or
sub
sub
or
test
inc
sub
daa
mov
movb
and
mov
jge
in
mov
sti
push
sub
icebp
push
fcmovnbe
xorb
sub
insl
push
popf
cltd
pop
sbb
sbb
jb
les
shlb
jg
xor
mov
push
add
mov
sub
and
shl
mov
jmp
mov
sub
and
adc
jge
ficompl
mov
xor
rolb
mov
or
int3
loopne
push
mov
cltd
xor
xchg
mov
mov
imul
call
test
call
jmp
cli
push
jne
add
xlat
loopne
cltd
sub
lcall
cmp
movsb
adc
pusha
cmp
filds
stos
xorl
cs
sbb
mov
flds
ljmp
add
mov
mov
icebp
or
test
fsubrs
cwtl
dec
mov
mov
aad
mov
sub
cmp
adc
jmp
scas
lcall
movsb
dec
decl
cs
xchg
out
std
mov
mov
adc
adcl
nop
loop
mov
mov
iret
jne
xor
out
inc
jecxz
inc
lock
iret
sbb
mov
test
add
add
hlt
cld
test
push
daa
sbb
push
dec
out
addl
xchg
adc
pop
xchg
or
inc
xchg
imul
dec
xchg
pop
jle
jge
in
sahf
mov
adc
fwait
cmp
insl
inc
sahf
mov
push
dec
dec
imul
mov
cld
inc
pop
sub
mov
das
add
pop
cmpsb
orl
add
jno
add
add
fidivl
cmp
loopne
mov
test
popa
scas
mov
push
or
aam
lahf
jns
out
mov
cs
dec
cld
into
and
add
and
sbb
xor
xchg
cmp
mov
dec
jne
push
loopne
in
enter
inc
orl
cmp
stos
fdivrl
sub
add
jno
inc
mov
imul
cwtl
adc
sahf
jno
cmp
fnstsw
testb
movsb
fildl
stos
insl
lret
gs
sub
jg
push
lret
push
popf
mov
cmp
sbb
cs
shr
insl
scas
popa
push
addr16
ret
or
cmp
mov
int
addr16
gs
data16
ret
sbb
fucom
ljmp
adc
lods
jp
sub
aam
cmpb
dec
xchg
lcall
mov
dec
out
xchg
pop
faddl
outsb
xor
xchg
push
loop
mov
aaa
lcall
mov
xchg
jne
jecxz
add
mov
imul
mov
lods
in
leave
outsb
pop
clc
subb
lods
cmc
xor
sub
mov
push
xor
sbb
dec
mov
mov
and
sub
fisttpll
jecxz
ds
cmp
push
leave
jp
sub
mov
pop
sar
cmpsl
dec
cmp
or
in
call
lret
aas
sti
test
sahf
sbb
pop
gs
dec
lahf
lds
cltd
sbb
cmpsl
mov
pop
push
jp
mov
sub
jmp
pop
out
and
jmp
movsb
test
out
lret
aad
pop
add
ret
insb
aad
cltd
and
xchg
mov
adc
jp
jae
push
xor
add
movsw
cmp
out
xchg
jbe
fadd
ja
sub
lret
jge
mulb
test
lds
add
cmp
jecxz
adc
mov
push
mov
aaa
jmp
mov
dec
push
sub
inc
jb
mov
cmp
sbb
mov
sbb
push
mov
pop
mov
aas
sahf
fnstenv
in
orb
mov
and
xchg
jbe
dec
add
xlat
repnz
aaa
std
xor
in
repnz
arpl
sbb
inc
add
fsubs
pusha
scas
inc
int3
pop
add
xchg
fisttpll
or
adc
cmp
push
lds
xchg
test
lret
add
add
shlb
dec
lods
lds
out
or
js
jo
gs
movsb
pop
push
lock
aam
stos
sti
bound
rorb
leave
aaa
call
enter
jbe
sbb
mov
inc
lds
fs
or
popa
fisubs
mov
mov
lcall
sbb
ljmp
pop
or
mov
cmp
fnstsw
stos
movsl
cwtl
push
in
in
mov
mov
into
cmpb
fwait
lahf
mov
lcall
shl
xchg
mov
in
dec
mov
les
fdivl
jns
cmp
aam
cltd
imul
mov
lahf
cmp
outsb
movsl
fnstenv
rolb
or
cmp
fcompl
out
mov
mov
testb
shlb
adc
xchg
mov
cmpsl
sbb
stos
ljmp
mov
jmp
rorl
cmp
test
sub
mov
sub
movsl
sub
pop
xchg
inc
enter
gs
push
jecxz
in
lcall
mov
lea
mov
enter
xlat
jp
inc
mov
xchg
cltd
outsl
jbe
test
sbb
mov
lods
imul
cmp
and
sub
push
aad
adc
sub
nop
test
into
dec
pop
jbe
insl
push
aaa
push
imull
addr16
mov
jae
inc
xor
adc
test
repz
jbe
sbb
fucom
insb
ljmp
les
sarl
xlat
xchg
push
mov
mov
lea
sub
or
test
testl
in
xchg
mov
adc
fildll
jg
push
aaa
xchg
xchg
ficoml
mov
nop
std
insl
xchg
cmpsb
loop
fisttps
pop
mov
out
outsl
sbb
dec
jne
mov
shl
mov
fistpll
or
sbb
cmp
fidivrs
aad
int3
cs
stos
sbb
inc
sarl
aas
lahf
out
cwtl
push
je
jl
mov
aas
or
pop
push
adc
out
sbb
adc
lahf
gs
xor
ret
dec
sbb
xchg
sub
sbb
or
mov
or
xchg
cli
outsb
dec
dec
jmp
lock
xchg
repnz
pop
sub
mov
sbb
adc
inc
mov
jp
sub
adc
pop
je
xchg
ljmp
fisttps
out
mov
decb
xchg
sahf
xchg
pop
int
xchg
nop
fsubs
rorb
sub
in
add
aam
or
sbb
mov
es
cmp
xchg
cmp
jns
ds
dec
mov
rorb
mov
addr16
sbbb
dec
pop
outsb
mov
addr16
xor
imul
leave
stos
xchg
or
hlt
mov
adc
rcrl
mov
andl
pop
gs
or
aas
in
mov
xorb
test
cmpl
mov
jmp
mov
bnd
lahf
jne
nop
mov
ret
adc
xchg
movsb
outsl
movsl
aas
mov
xchg
cmp
xor
push
scas
lret
jmp
xchg
popa
add
cld
ror
lds
lods
popf
ja
iret
mov
in
push
into
popf
and
cmp
in
xlat
test
push
ret
cmp
int
dec
pushf
cli
lock
repz
add
mov
mov
mov
cmc
add
push
sbb
adc
cs
mov
dec
mov
sub
es
cmpsb
dec
lcall
sbb
faddp
adc
in
adc
jp
dec
push
movb
sbb
icebp
adc
mov
mov
pop
ljmp
inc
and
or
add
cmp
fwait
pop
js
cmp
cmp
inc
ja
pop
arpl
inc
cmc
int
out
cli
fimull
mov
rcrl
sahf
push
push
xchg
mov
xorb
daa
cmp
mov
sub
mov
jbe
mov
imul
adc
dec
jne
rcr
pop
jnp
push
jmp
cli
xchg
mov
jne
hlt
cmp
mov
adc
xlat
das
add
out
pop
repz
mov
out
cld
xchg
mov
test
adc
mov
dec
and
xchg
xchg
mov
fidivs
and
scas
ret
add
fadds
lock
or
xor
pop
mov
add
xor
mov
add
dec
or
std
xchg
mov
out
cmp
movsl
cmpb
sarl
pop
jno
mov
mov
sbb
sbb
faddl
push
movsl
and
nop
mulb
mov
and
or
popa
shl
adc
in
mov
lock
call
jecxz
add
hlt
inc
xchg
cmp
test
fprem1
ret
popa
enter
lret
push
mov
jge
lret
xchg
jge
repnz
daa
pop
mov
imul
sub
iret
add
mov
jge
mov
aaa
pop
sbb
xor
jl
aad
sbb
orl
insl
movsb
and
mov
jge
mov
js
sbb
cwtl
xchg
call
pop
push
fistpll
ds
xor
sti
pop
cld
icebp
add
stc
enter
add
fcompl
cwtl
dec
insl
loope
mov
or
dec
adc
pop
in
add
sahf
fcmovu
mov
sub
out
adc
jl
pop
pushf
scas
call
int
out
pop
mov
int3
mov
xor
adc
cmp
mov
jae
cmc
or
dec
mov
jecxz
into
push
jecxz
jns
hlt
shlb
sub
je
push
pop
xor
mov
sbb
cmp
sub
dec
jl
sbb
fbstp
enter
pop
jp
in
out
aaa
adc
jmp
mov
xchg
inc
mov
sarb
fmull
or
xor
repz
ljmp
add
sub
fwait
je
inc
or
das
popf
outsl
pop
mov
pop
lea
and
adc
icebp
xchg
lods
cmp
std
test
pop
shrb
dec
lea
ljmp
outsl
cwtl
clc
adc
jbe,pn
icebp
pop
jbe
adc
ror
in
or
iret
mov
cmp
pop
xchg
mov
pusha
sub
and
aaa
jo
mov
push
mov
insl
cmpsb
mov
test
cmp
dec
sahf
ret
lret
fwait
add
xor
stc
xchg
outsl
imul
insb
popa
es
outsb
rcl
data16
in
insb
fdivr
add
push
out
popa
mov
dec
xchg
shlb
nop
dec
jno
shll
push
xchg
je
xor
and
and
addr16
add
les
into
mov
aaa
xor
adc
xor
jmp
jge
mov
cmp
sti
fisubs
mov
icebp
dec
cwtl
cmpsb
mov
dec
xchg
lcall
rcrb
inc
das
jne
and
xchg
scas
jle
adc
out
mov
ss
popa
sbb
pop
sub
or
sub
imul
dec
movsb
and
sub
mov
popf
push
cmp
mov
sbb
sub
test
hlt
cld
rcll
int3
scas
loope
mov
out
pop
sub
outsb
sti
aas
mov
sbb
jne
or
cmc
mov
cmp
cmp
popf
clc
xorl
adc
push
dec
dec
orb
xchg
push
inc
fisubl
cld
fdiv
cmc
and
xchg
leave
push
cmp
xorb
push
sub
inc
inc
push
test
sbb
pop
adc
push
sti
mov
pop
push
push
cld
in
xor
xor
jne
outsb
test
add
mov
fiadds
sbb
mov
imul
shlb
or
addr16
fdiv
bnd
mov
sub
jl
mov
push
sahf
cmp
mov
xlat
into
push
pop
pop
dec
je
cmp
push
cmp
fs
xchg
mov
jb
push
gs
adc
and
shlb
sbb
push
xchg
mov
int
aas
popa
mov
es
movsb
sbb
shlb
lock
hlt
lret
leave
sub
stc
sti
outsb
div
ja
lret
aas
mov
add
cmpsb
inc
cmpl
mov
and
xchg
sub
dec
cmc
cltd
xchg
aam
push
dec
push
orb
mov
sarl
jns
xchg
stc
shlb
insl
ljmp
mov
xchg
push
sbb
dec
pop
stc
inc
setl
cmp
stos
aad
cmpsb
push
jns
or
in
xorl
jbe
xchg
pop
ljmp
pusha
jns
sti
sahf
jl
cmp
sarb
lret
ja
dec
rcrl
inc
xor
or
ror
inc
dec
push
jmp
mov
jae
pop
add
repnz
jle
sbb
pop
and
mov
imul
xchg
mov
movsl
and
mov
xor
fdivl
test
sbb
dec
mov
bnd
cmpsb
int
pop
cmpl
push
xlat
xor
ja
or
mov
or
sbb
inc
mov
fs
jne
mov
inc
shll
jecxz
je
jecxz
popf
push
and
test
aam
sub
fisubrs
jg
xorl
mov
inc
fwait
add
mov
push
mov
push
clc
loope
add
xchg
leave
shll
sbb
divps
jecxz
arpl
mov
cs
fisttpll
sbb
adc
mov
lods
repz
sub
push
adc
or
lods
scas
cmp
stos
sub
in
stc
xor
pop
fisttps
jecxz
shll
jno
mov
mov
xchg
inc
pop
dec
add
popa
mov
sti
mov
adc
cltd
mov
jns
mov
adc
push
xchg
repz
cwtl
adc
lods
xor
add
cmpsb
add
adc
sar
dec
add
sub
sbb
xor
adc
pop
mov
and
jae
xor
scas
add
xchg
cmp
cmp
lcall
push
rolb
in
push
sub
dec
dec
std
stc
in
jae
adc
cmp
in
push
adc
jle
lods
jns
int3
adc
sbb
sub
xor
popa
mov
jle
mov
add
sub
dec
and
outsb
xchg
retw
xor
adc
inc
imul
mov
xchg
shrb
cmpsb
and
inc
in
sub
mov
or
sub
int
imul
push
rcl
jnp
test
int3
imul
jae
shlb
movsl
popa
sbbl
notl
xchg
subl
xlat
push
bound
enter
push
repnz
dec
outsl
inc
sub
nop
dec
subb
add
loop
pop
sub
aaa
cmpl
das
xor
mov
cmp
inc
movsb
sarb
sti
sbb
fcmovnbe
iret
adc
stos
push
adc
sub
decb
stos
add
cli
loopew,pt
sub
inc
bound
dec
cli
jp
je
orl
push
dec
xchg
cli
ja
inc
and
bound
jbe
pop
hlt
ljmp
or
outsb
xchg
xor
or
bound
cmp
push
jmp
lea
or
arpl
push
outsl
dec
or
leave
stos
jmp
pusha
add
das
out
pop
stos
sbb
cs
rcrl
add
dec
imul
mov
mov
aam
imul
and
fidivrl
stos
call
stos
sub
push
in
mov
out
pop
mov
or
les
xchg
in
mov
js
adc
mov
cmp
add
add
jp
or
movsb
addr16
adc
adc
fucomp
pushf
mov
popa
cltd
cmp
rorb
push
cwtl
mov
addr16
sub
and
adc
scas
adc
xor
popf
adc
stos
mov
xor
mov
sub
sahf
cli
movsl
lea
stos
aaa
inc
ja
xchg
add
sub
mov
lods
call
lea
ljmp
popa
aad
add
push
mov
aad
sarl
cmpsl
jecxz
fwait
inc
inc
andl
out
sub
aad
movsb
sahf
hlt
iret
gs
xchg
xor
add
pushf
jno
push
sub
stc
push
loop
scas
out
add
ret
add
inc
leave
sub
call
int3
hlt
push
inc
sar
test
int3
enter
pushf
jbe
out
add
js
jbe
dec
cld
mov
sbb
jle
rclb
mov
and
ljmp
xor
cmp
or
out
push
xchg
jmp
mov
jo
xchg
xchg
cmp
addb
and
mov
stc
inc
mov
push
xor
mov
xchg
xchg
or
fdivl
or
add
jnp
insl
cli
out
nop
jne
mov
es
or
fmull
lods
call
fstpl
lods
in
je
xchg
std
sub
int
bnd
mov
mov
push
dec
mov
test
sub
test
into
pop
fwait
scas
dec
adc
out
pop
dec
add
pushl
and
neg
sbb
or
push
lds
mov
mov
xchg
loop
cmpsl
cwtl
cmpsl
pushf
jae
mov
dec
lods
push
cmp
ds
add
inc
outsb
jp
xor
stos
mov
or
fcoms
pop
stc
pop
cltd
xchg
jne
sub
test
xchg
bound
mov
gs
fndisi(8087
fsts
into
mov
xlat
or
xchg
push
cli
mov
adc
lret
xchg
outsl
lret
dec
fisubrs
test
aad
fnstcw
je
push
jmp
sbb
xor
subb
pusha
popf
xchg
imul
push
popf
shrl
xchg
jp
sub
cmp
fisubs
stos
push
add
cmc
cmp
aad
pop
mov
repnz
add
lds
or
push
fwait
stos
xor
pop
mov
pop
ror
arpl
mov
mov
arpl
push
add
dec
add
adc
sub
idivb
fiadds
xor
movsb
fistpll
sbb
dec
pop
inc
rolb
push
ja
ds
in
shl
jp
mov
aam
xchg
and
and
and
ja
into
aaa
and
stos
mov
or
ret
cmpsb
aad
ljmp
cmove
cmp
pop
push
mov
popa
imull
sahf
je
adc
out
pop
dec
sbb
in
insl
pop
out
sub
fisubs
jecxz
xchg
mov
rorb
das
cwtl
addl
add
je
mov
out
pop
push
jmp
push
lods
lcall
or
inc
jb
dec
xchg
inc
xor
adc
push
mov
call
lcall
mov
sbb
out
sbb
xchg
es
inc
or
fs
divl
in
orl
sbb
cld
add
lret
push
int
mov
jo
shrl
jne
dec
inc
jmp
dec
and
in
pop
lods
mov
xor
adc
imul
jns
repz
pop
ret
and
adcb
repz
push
add
not
adc
hlt
pop
xor
or
or
sub
vcomiss
dec
fstps
inc
push
ficoml
push
sbb
insb
fs
jnp
iret
mov
sbbl
jge
jp
jno
outsl
lcall
ds
and
push
jae
push
iret
jle
rorl
adc
lret
xor
push
xchg
adc
enter
cmp
mov
pop
push
xor
lret
movsb
pop
les
xchg
jle
pop
stos
jge
gs
mov
pop
adc
cmp
xchg
adc
arpl
mov
mov
add
out
loop
mov
add
fs
inc
mov
dec
dec
mov
lcall
pushf
add
jp
test
pop
gs
push
mov
dec
cltd
pop
push
mov
push
xor
loope
bound
xchg
mov
xchg
add
sbb
out
sahf
incb
add
sbb
push
inc
mov
aam
ds
sub
popa
stc
xlat
sbb
lret
enter
pop
push
adc
fsubrs
call
lds
cmpsb
popa
and
iret
xchg
sbb
in
jmp
shr
lds
fwait
jnp
lahf
mov
cmp
mov
and
pop
jne
cmp
cmovo
in
das
clc
gs
or
out
mov
pushf
dec
nop
sub
xchg
jmp
mov
fimuls
cld
repz
arpl
jb
push
adc
test
lods
mov
pop
inc
dec
push
dec
pop
inc
and
das
lods
lret
sbb
idivl
es
cmp
sub
dec
sub
cmp
addr16
push
mov
pop
mov
xchg
xchg
movswl
enter
jg
inc
jmp
sub
insb
jb
insb
sub
shll
aaa
je
or
jle
add
pop
repnz
push
fucomp
data16
mov
lock
push
mov
mov
pop
lret
jle
dec
adc
std
pop
mov
or
ret
sysenter
xchg
inc
and
jno
lods
es
adc
push
out
mov
pop
mov
pop
es
insb
ss
cmp
stos
mov
js
mov
arpl
mov
push
inc
loope
xchg
push
add
jge
mov
addr16
imul
sub
cmp
sub
jecxz
lret
push
test
jl
sub
sub
inc
sub
push
fidivrl
aam
xlat
xchg
aad
cltd
daa
stos
lds
sub
mov
daa
scas
fdivr
jp
cmp
mov
or
pusha
inc
and
jno
icebp
dec
adc
gs
xor
scas
int
rolb
insb
pushf
pusha
lahf
loope
mov
mov
movsb
dec
mov
stos
or
js
pop
hlt
lds
stos
repz
enter
dec
mov
ficomps
mov
sub
fldcw
ret
inc
ror
pop
fisubs
dec
icebp
xchg
xlat
bound
iret
xchg
push
sub
out
loop
repnz
or
enter
insb
cwtl
xor
inc
xlat
xchg
shll
in
add
and
in
jmp
insl
lods
cmp
sahf
popl
inc
xchg
repnz
cmp
xor
ficomps
lods
repnz
sbb
push
loopne
and
cmp
mov
xor
fisubrs
xchg
aam
xchg
jg
pop
jo
movl
or
fisttpl
out
sahf
dec
or
pop
popf
jbe
inc
je
scas
mov
fists
sbb
iret
adc
xchg
stos
pop
gs
xchg
or
lret
and
sahf
leave
iret
xor
dec
nop
cmp
jl
inc
dec
lahf
push
sub
sbb
jne
mov
rorl
lahf
push
jmp
arpl
or
out
fisubrl
and
clc
rcll
aad
int
xchg
pop
mov
repnz
push
jns
push
std
out
ss
lods
jge
inc
sub
test
fmulp
adc
xor
clc
xchg
jecxz
dec
sbb
push
mov
dec
stos
jle
dec
movsl
addr16
fists
dec
xlat
mov
or
pusha
sarl
popf
jg
sbb
fdivs
sbb
sahf
inc
enter
sub
jns
xor
sub
ds
push
orl
mov
mov
std
inc
dec
push
ss
pop
or
and
push
push
jno
pop
mov
lcall
call
or
adc
loope
jg
fcompl
jb
enter
repz
mov
je
inc
sbb
pop
pop
cmp
mov
adc
mov
xorl
pop
add
sbb
sbb
addr16
push
dec
add
adc
mov
xchg
mov
push
mov
sub
mov
cld
shlb
jne
cmc
dec
mov
cmp
out
adc
in
aas
lret
divl
jmp
inc
in
xchg
ficomps
je
jmp
scas
and
lods
and
dec
imul
dec
xor
mov
and
adc
mov
push
sub
stc
iret
fwait
sbb
and
xchg
mov
mov
xchg
jmp
lock
lods
jg
out
addr16
js
lods
stc
dec
mov
sbb
cmp
add
inc
pop
push
in
adc
lods
jge
mov
mov
ds
ret
lcall
xchg
cmp
pop
ja
xchg
sti
mov
nop
sbb
cld
sti
pop
xcrypt-ctr
cmpsl
fidivrl
mov
js
fldenv
adc
mov
push
sub
add
lret
mov
sbb
imul
xchg
push
ret
jbe
sub
jge
test
push
les
and
cld
cmc
xchg
lret
sarl
push
xor
adc
arpl
cmp
fstl
xor
jae
sahf
sub
scas
mov
jae
arpl
adc
xor
xchg
cltd
test
in
nop
scas
jl
and
in
dec
scas
add
xor
das
sbb
push
les
pop
cmp
add
fisttpll
out
mov
xorl
ss
out
xchg
cmpsl
adc
xor
mov
add
cs
pop
sub
inc
mov
mov
add
jl
repz
icebp
outsb
sbb
jp
daa
add
into
push
insl
adc
in
dec
clc
inc
rorl
xor
fnsave
icebp
xchg
adc
fdivs
test
xlat
inc
xchg
cwtl
dec
fldt
into
cmpsb
das
mov
jne
iret
cmpsl
xlat
cwtl
insb
popa
lahf
xor
shrl
mov
jns
fwait
mov
pop
push
fscale
or
xor
loop
mov
xchg
insb
int
pusha
ljmp
test
outsb
mov
pop
dec
pop
shrl
jne
sub
jp
xchg
lcall
ret
mov
cmp
mov
push
mov
jecxz
stc
xlat
cltd
mov
cmpb
dec
dec
inc
pop
inc
dec
and
dec
fmull
fwait
cmpsb
test
repnz
push
das
push
jmp
repnz
pop
stos
cwtl
shll
test
subb
mov
pop
and
push
out
stos
sub
lods
xchg
adc
cltd
rorb
adc
imul
push
adc
mov
mov
orb
daa
je
push
mov
fcomi
cmp
test
in
popa
pop
mov
xchg
push
xlat
and
mov
fs
in
aam
lret
xlat
push
sti
mov
dec
hlt
sbb
divl
inc
mov
nop
mov
sbb
dec
in
scas
scas
shll
js
sarb
out
fnstcw
mov
outsb
pop
cmpb
clc
jnp
mov
dec
fistpll
test
pop
clc
cli
cltd
shll
jl
and
xchg
das
push
or
lds
and
jecxz
pop
jnp
cltd
xor
xchg
xchg
cmpsl
clc
into
and
and
pop
rcll
wbinvd
leave
pop
repnz
mov
std
jno
mov
mov
adc
sub
xlat
cwtl
out
js
push
addl
pop
dec
loope
stos
fdiv
imul
repnz
sbb
pop
mov
xor
lods
lock
xlat
loope
xchg
adc
sahf
cs
mov
pop
cmpsl
pusha
aaa
daa
sub
push
xorb
shlb
and
mov
or
cmc
or
and
sbb
and
xchg
add
dec
xlat
cmp
negl
xor
call
push
ds
lock
sbb
es
test
pop
cmpsl
test
jb
mov
xchg
rcrb
mov
mov
push
sbb
adc
iret
mov
fstpl
push
cmpsb
and
fldcw
xchg
inc
add
in
call
call
out
xchg
call
out
ja
inc
mov
sub
sti
popa
std
mov
in
push
testb
out
jecxz
jmp
int
fcoms
loopne
sub
pop
aas
push
dec
mov
cmp
add
or
add
rcpps
or
inc
and
jno
xchg
std
mov
and
icebp
inc
aaa
imul
add
lock
negl
pop
xchg
sti
add
fs
mov
xchg
cmp
cmp
push
lods
fdivr
add
addr16
imul
inc
xor
out
fldcw
sarb
ljmp
pusha
insl
xchg
jo
sbb
cmp
mov
mov
mov
push
bound
ja
fs
jp
push
stos
sahf
loope
xchg
js
pop
adc
lret
dec
popf
pop
mov
add
xchg
dec
int
mov
add
movsl
xchg
cmp
pop
push
test
repz
and
lock
imull
adc
scas
mov
repz
xor
sti
xor
test
cltd
rorb
pop
and
sub
jne
decb
mov
pusha
or
sbb
sub
or
cmc
push
fnstenv
xchg
mov
push
std
aas
push
cmp
repnz
fnstenv
jp
jno
push
jle
add
stos
pop
dec
add
and
mov
movsb
fidivrs
jg
fiadds
imul
ds
xchg
movsb
sub
adc
push
loope
ss
ljmp
das
nop
out
mov
shr
fildll
ss
std
xchg
cmp
repz
aad
addr16
and
pop
lcall
sub
push
cmpsb
adc
adc
push
and
cwtl
cmovbe
int
add
mov
jb
cwtl
sbb
cli
ja
mov
enter
cmp
daa
rolb
cmpsb
adc
push
shll
mov
sub
fs
sbb
andl
lret
lret
sahf
dec
leave
inc
aad
and
pop
loopne
and
inc
cld
or
xor
std
int3
mov
jecxz
fwait
dec
ljmp
pop
mov
pop
jg
jne
pop
movsb
pop
vxorps
cwtl
or
shlb
push
push
mov
ss
fwait
ljmp
inc
xor
jecxz
hlt
mov
nop
push
and
inc
add
jg
insb
cltd
std
mov
popf
push
lret
pop
outsl
sbb
mov
testb
pusha
cmpsb
popa
cmp
repnz
jae
test
mov
fsubp
push
nop
sbb
cmp
mov
mov
add
shll
mov
notl
sbb
decb
in
loop
arpl
repz
jnp
es
in
mov
dec
inc
aam
jmp
inc
sbb
sub
or
cmpsl
and
pop
mov
sbb
cmp
and
xchg
adc
jo
mov
push
stos
leave
xlat
repz
xor
bound
insl
inc
icebp
pop
sub
ret
dec
mov
pop
sbb
mov
fstpl
arpl
mov
test
fadd
add
in
hlt
jp
repz
push
out
mov
stos
inc
mov
push
fcoml
popf
push
add
div
fcmovb
push
mov
xchg
mov
pop
pop
cli
add
sbb
aas
popa
sbb
cmc
rorb
cld
jne
cwtl
pop
mov
mov
cmc
push
repnz
jb
sbb
mov
add
jle
dec
fsubr
out
movsl
test
xchg
icebp
movsb
iret
dec
inc
inc
test
jmp
sahf
mov
aas
mov
iret
sbb
mov
lods
lock
daa
pusha
hlt
adc
fistpl
push
std
pop
dec
ror
add
lahf
mov
add
mov
aad
bound
inc
mov
jb
stos
pop
out
sbb
gs
or
sti
add
xor
into
inc
jno
ret
mov
mov
dec
jp
icebp
fisubl
sti
adc
imul
cmpsb
cwtl
stos
out
pop
mov
sbb
push
mov
jle
insb
mov
push
mov
inc
sbb
test
cld
pop
pop
or
inc
inc
xor
jbe
insl
test
stos
fdivrs
push
dec
out
pop
sub
std
or
jae
test
in
pop
cltd
pop
pop
mov
in
in
mov
mov
pop
outsb
add
imul
jmp
pushf
in
or
loope
xchg
es
pop
jle
or
fidivl
mov
lock
push
push
push
xchg
cmp
sub
imul
aas
jns
adc
daa
repnz
mov
fsubrs
mov
cmpsl
and
mov
cltd
aad
jmp
lock
insl
loope
or
cmp
movsb
cld
loopne
aad
in
es
sbb
sub
jecxz
mov
icebp
loope
push
inc
mov
fwait
xor
shlb
rcr
mov
es
orb
adc
mov
or
pop
rcr
lock
ja
daa
scas
pop
mov
imul
stos
pushf
sarl
ljmp
fwait
and
notb
scas
xor
xchg
push
push
mov
inc
mov
pop
lods
neg
sub
into
sti
cmp
jge
mov
push
inc
pop
popa
mov
and
int3
bound
das
sbb
mov
stc
divl
sbb
xchg
daa
or
es
push
add
sbb
xor
and
hlt
mulb
test
movsl
push
xor
imul
loop
adc
fstl
ljmp
addr16
sbbb
jmp
pop
adc
fadds
push
xchg
ljmp
fs
cld
mov
mov
sbb
push
js
call
repnz
or
idivl
stc
sbb
and
pop
dec
xor
sbb
push
fbstp
inc
mov
orb
in
je
outsl
dec
loope
mov
or
fdivl
arpl
push
int3
fwait
mov
and
pop
ret
adc
fcomps
andb
ljmp
push
inc
mov
lahf
jmp
xchg
pop
dec
push
sbb
lods
adc
ss
sbb
pop
ss
xchg
shll
paddsw
fadd
sahf
dec
stc
jo
aaa
adc
push
cmc
je
mov
push
xlat
mov
push
divb
adc
dec
xchg
add
fisttps
lea
pop
sti
lahf
lret
mov
sub
inc
add
sbb
es
idivl
ret
lods
repnz
les
gs
mov
jl
imul
cltd
sub
jbe
mov
mov
fmul
jmp
out
push
ret
pop
int
in
jl
sub
mulb
adc
cs
loope
add
add
test
shl
mov
xor
push
xor
int
add
loop
fsubr
in
repz
rorb
jno
lret
jno
mov
and
iret
mov
cmpsb
xchg
imul
mov
call
popf
cmp
fisubrl
jecxz
pusha
mov
push
stc
roll
fistpll
adc
mov
cmp
mov
jnp
mov
jns
test
mov
ret
cld
test
sarl
sar
es
cmp
pushf
sbb
and
cli
cmp
in
mov
addr16
hlt
dec
mov
lea
push
pop
in
xor
xchg
sub
jl
fnstenv
shlb
dec
addr16
sbb
pop
xchg
sarl
fwait
int3
cmp
enter
fdivrs
cli
cli
cmp
mov
add
push
jo
pop
bound
cmpsl
push
push
mov
mov
adc
je
push
sbb
roll
sarb
pop
adcb
push
dec
cld
popa
dec
jg
or
addl
sub
test
and
mov
xchg
sbb
cwtl
or
push
and
lods
popf
scas
hlt
repz
xor
std
fwait
and
xchg
inc
je
lods
std
enter
cltd
les
pop
jb
mov
pop
mov
cli
pushf
mov
repz
add
out
cs
sub
push
shlb
in
es
or
mov
cwtl
idivl
out
int
sub
pop
addr16
ret
repz
hlt
xchg
outsb
movsb
aad
lret
pop
and
fs
mull
jne
push
push
gs
fwait
pushf
cmpsl
lcall
pusha
popa
sub
push
in
sbb
out
in
jecxz
arpl
addl
and
mov
pusha
and
mov
insl
popa
jecxz
jo
in
jle
xchg
fisubrl
xchg
push
cmpsl
mov
fisubrs
mov
sub
inc
mov
loopne
sbb
xchg
adc
sbbl
xchg
jbe
mov
int
dec
adc
or
clc
adc
mov
std
loopne
sub
clc
mov
jae
cmp
adc
and
dec
test
nop
test
dec
icebp
fcoms
jge
shr
cld
or
dec
std
mov
xor
sub
add
nop
imul
orl
mov
and
mov
idivl
mov
jbe
xchg
je
sbb
outsl
fdivrs
mov
mov
dec
sub
cmp
fildl
in
push
xor
jns
mov
add
test
ljmp
adc
lahf
in
inc
add
shll
dec
inc
cwtl
int
aas
dec
lods
fcoml
pop
adc
call
dec
fisttpll
loope
xchg
testb
hlt
iret
lock
insl
popa
fcom
out
jb
sahf
jno
cltd
inc
jle
movhps
adc
xor
pop
loope
iret
dec
daa
aad
leave
imul
adc
loop
pop
adc
das
fisttpll
xchg
lods
cld
jno
xchg
enter
inc
push
xchg
mov
xchg
lahf
ficompl
sub
cmp
in
pop
call
mov
fistps
jg
lret
loope
xchg
xchg
fstpt
xchg
jmp
push
iret
rclb
dec
mov
sub
ds
add
and
fstpl
push
dec
push
xor
je
loop
jl
loop
cmp
mov
dec
xor
adc
fidivrs
xchg
iret
push
ljmp
push
gs
js
int
xor
cmp
gs
out
nop
push
push
mov
pop
jmp
cmp
sahf
mov
mov
test
pusha
adc
rep
cmc
jnp
ret
sbb
fiadds
dec
mov
ljmp
loopne
stc
enter
mov
push
loop
add
pop
jmp
int
test
mov
bound
jns
cmpl
and
push
gs
dec
xchg
mov
sub
in
cwtl
std
insb
movsl
add
lcall
push
and
push
mov
cmpsl
jo
ret
mov
js
push
cmp
mov
xchg
sbb
push
adc
push
nop
xchg
ud1
dec
icebp
ja
ljmp
and
push
xor
push
js
mov
xchg
jbe
pop
add
adc
sbb
adc
push
lea
movsl
cltd
push
test
clc
push
dec
ss
cmpsl
js
bound
sub
jns
gs
xchg
jg
out
lock
adc
adc
push
cmpsl
and
ret
mov
das
mov
out
cli
sbb
push
xchg
sub
pop
orb
xor
insb
es
aam
xor
hlt
frstor
arpl
inc
faddl
ficoml
push
nop
pop
faddl
or
pop
push
repz
pop
in
sub
hlt
push
adc
es
test
push
insb
pop
jns
push
cmp
mov
xlat
push
stc
add
add
les
jg,pt
sbb
push
jecxz
mov
movsl
add
pop
call
sub
das
pop
cld
pop
insb
xchg
lret
in
and
inc
fists
sbb
test
test
shlb
std
xchg
pop
mov
sub
inc
cmp
xor
lods
in
and
xchg
fadds
ja
push
es
enter
mov
xchg
negb
and
subps
xor
rclb
popa
test
pop
cmp
sub
mov
out
mov
mov
out
jmp
sarb
jp
aaa
arpl
mov
cli
or
rcr
stc
or
jp
push
sub
mov
in
stc
add
jle
sub
and
lods
cmp
enter
fcompl
xor
cmp
xor
scas
int3
into
fildll
out
or
xchg
mov
jns
and
or
cmp
adc
xor
testl
scas
imul
sbb
stos
jmp
js
decl
mov
cmp
push
hlt
adc
xor
pop
wrmsr
leave
mov
lret
dec
pop
and
sub
sub
bound
outsl
push
jns
xchg
mov
jb
mov
dec
ljmp
repnz
sti
dec
xchg
sahf
mov
stos
lea
inc
sub
aad
ja
and
xor
mov
sub
xor
add
int
fisubrs
out
ja
sub
mov
push
jns
cmpsb
push
enter
jb
adc
lcall
insb
dec
dec
rcll
mov
cld
sbb
mov
mov
add
add
jp
or
jge
imul
es
int3
adcl
and
xor
pop
test
cmp
sti
neg
push
mov
mov
pop
push
mov
dec
or
insb
cld
into
ds
loop
les
add
out
and
xchg
xchg
sbb
xchg
clc
leave
sub
xchg
adc
sub
push
jno
push
sbb
inc
or
cmp
test
mov
cli
dec
out
movsb
mov
fxch
mov
loop
pop
repnz
pop
mov
test
std
shlb
xchg
cmp
notb
std
push
jl
cmpsl
mov
hlt
push
pop
jmp
dec
push
clc
inc
jecxz
imul
icebp
cmpl
jecxz
fisubrs
in
ds
mov
loope
movb
xchg
mov
add
push
xchg
lret
inc
es
jns
mov
add
bound
dec
popa
cmpl
jle
push
xor
es
mov
cmpsl
pop
cmpsl
sbb
jbe
sbb
fwait
push
cmp
jle
sahf
push
outsl
and
inc
hlt
mov
ss
ret
psadbw
bound
push
fadds
gs
loop
xor
mov
push
sbb
jle
inc
mov
int3
rcll
fistps
lcall
js
int3
lea
test
stc
xchg
sub
mov
ficoms
add
and
pushf
add
inc
clc
push
mov
inc
sbb
jno
orb
sbb
pop
mov
addr16
push
pusha
mov
jp
jg
jns
xor
dec
in
test
stc
push
push
cmpsl
shrb
cmp
xor
out
aad
int
fadds
dec
jnp
cmpsb
push
pusha
inc
fmull
mov
test
mov
or
dec
mov
js
xlat
mov
rolb
inc
adcl
lret
mov
sbb
mov
outsb
iret
jae
sub
jno
insb
fildl
nop
jb
lods
test
jnp
jb
adc
sbb
dec
sbb
push
xchg
dec
call
lods
jl
sub
jne
add
loope
mov
inc
pusha
iret
mov
adc
cld
adc
imulw
adc
fsubs
int3
xchg
icebp
add
xor
mov
and
pop
in
les
out
inc
add
loop
push
inc
scas
bound
test
arpl
add
or
jbe
ljmp
in
xchg
movsb
xchg
jp
cmp
sahf
adc
add
dec
pushf
mov
pop
out
adc
lds
pop
daa
dec
xchg
push
inc
test
cmp
adc
mov
sbb
push
lods
bt
aad
xchg
xor
sub
mov
sbb
jecxz
push
push
xorb
push
pop
movsl
xor
mov
lcall
sbb
pusha
and
cmp
fs
loope
cmp
jp
je
clc
jo
push
mov
add
pop
std
push
mov
jnp
fmul
lock
enter
test
aaa
cmp
ret
loop
popa
rcl
popf
lret
inc
imul
in
cmp
inc
cmpsb
enter
inc
inc
add
mov
jmp
or
mov
mov
cli
fsts
and
push
cmp
stc
inc
jmp
in
movsb
sbb
popa
fs
pop
cmpsl
aam
jb
fisubrs
mov
cmpsl
dec
addr16
leave
mov
test
mov
addr16
push
jecxz
aaa
push
lods
popa
push
pop
push
mov
jg
arpl
sub
mov
pop
jle
fidivs
sbb
jl
out
sbb
push
xor
dec
mov
jbe
pop
mov
jno
jp
xchg
mov
icebp
testb
xor
xchg
test
lret
sti
cs
stc
mov
pop
xor
out
test
repnz
ret
xor
mul
pop
out
mov
cmpsl
or
stc
leave
push
xor
pop
push
push
pop
fwait
psrad
mov
xlat
dec
loope
lret
divl
clc
xor
or
call
sub
cmpsl
mov
mov
sbb
xchg
cmc
pop
enter
xor
xor
nop
push
lcall
dec
xchg
ljmp
or
xchg
xchg
inc
rcrl
aam
shl
add
mov
loop
push
cli
sbb
ret
andl
jns
mov
push
mov
andl
adc
adc
cmp
mov
arpl
popf
test
or
out
jns
or
loope
jecxz
insl
push
sub
or
inc
dec
andl
mov
daa
xor
add
pop
push
pop
les
jns
fldcw
mov
repz
lds
xor
out
orb
add
arpl
fucomi
push
and
xchg
sub
loop
hlt
mov
jo
fbstp
lahf
std
subl
push
pop
xchg
cs
mov
repz
enter
sti
cwtl
lock
xchg
pop
add
pop
mov
roll
push
jl
aas
imul
xor
enter
inc
push
push
lret
mov
pop
cwtl
mov
inc
addr16
push
loope
lcall
stc
inc
xchg
scas
pop
mov
aad
jl
sbb
sbb
dec
xor
sbb
inc
dec
jmp
lock
mov
fisubs
sbb
mov
sub
or
mov
and
pop
fld1
lock
add
mov
push
sbb
add
in
mov
insl
imul
pop
mov
xchg
push
bound
out
dec
out
mov
stc
fcmovu
aam
pushf
insb
fsubrl
mov
pop
sbb
xchg
shl
cwtl
mov
rolb
push
xor
push
aas
mov
fldl
pop
xor
std
ljmp
mov
add
lea
mov
stc
push
repnz
ficoml
cltd
mov
add
mov
push
insl
inc
lcall
aad
jno
or
push
dec
jl
sub
mov
mov
mov
push
test
aas
lods
scas
cmpsb
mov
jno
test
jmp
in
cmpsb
stc
out
dec
in
shrb
aaa
xchg
cmp
test
xor
adc
push
adc
cmp
stos
es
scas
lods
pop
cld
ljmp
imul
inc
gs
mov
aas
outsl
add
mov
jmp
xchg
scas
jnp
ret
mov
ljmp
ss
sbb
push
call
sub
ret
shll
sub
push
pop
jne
insb
insb
les
cmp
rcll
sub
sbb
pop
arpl
rorl
lret
js
push
ja
or
mov
pop
mov
jbe
xorb
dec
rcrb
adc
mov
inc
std
orl
sbb
mov
ss
push
xchg
ror
xchg
insb
xor
mov
in
adc
aaa
mov
test
push
pop
imul
insb
sbb
push
sbb
imull
leave
aas
dec
mov
cli
dec
cmp
lods
sbb
es
push
imul
inc
pop
cmovbe
loope
xchg
or
leave
mov
push
sub
popf
test
pop
push
fstpt
jmp
lods
pop
cmc
mov
iret
fsubrs
sbb
rorl
mov
sbb
sysexit
mov
xor
xchg
mov
xlat
jae
and
mov
cmp
sub
pushf
aam
push
clc
pushf
enter
das
sbb
mov
mov
test
and
fwait
add
cmp
and
jbe
popf
lods
inc
dec
int3
and
adc
adc
push
repz
mov
xchg
mov
push
aam
pop
data16
out
push
scas
sub
es
inc
test
dec
adc
ss
mov
fbld
dec
leave
xchg
out
clc
and
loop
es
push
adc
lretw
es
mov
jp
out
aas
mov
sbb
cmp
in
mov
jmp
inc
test
jbe
or
lcall
out
sbb
sub
inc
enter
mov
fdivrl
mov
adc
dec
shrb
stos
out
jnp
or
jmp
repnz
out
out
stos
xor
mov
leave
out
ret
arpl
inc
scas
call
sti
stc
xchg
int3
mov
or
out
iret
dec
aas
insb
push
pop
sbb
scas
push
popf
push
xchg
and
jge
or
sbb
add
dec
sub
jne
es
lods
shll
inc
insl
cmpsb
xchg
push
out
mov
das
adc
sbb
repz
jge
dec
xor
insb
xor
add
ret
adc
xchg
pop
decb
xchg
repz
xor
lret
mov
dec
test
dec
imul
stos
das
js
call
push
push
xchg
mov
nop
or
jno
lods
addl
push
jnp
xchg
and
or
xchg
xchg
mov
loope
fisttpll
cwtl
xlat
repz
pop
inc
test
test
xor
lcall
cmp
inc
adcb
sub
movsl
jb
inc
adc
shl
xor
xchg
stos
push
xor
mov
jge
xchg
jle
nop
inc
ret
cmp
jmp
mov
scas
es
loope
addl
scas
ds
jl
mov
sub
xchg
jno
adc
sub
cmpsb
add
pop
ja
push
sub
loope
jae
stos
sbb
push
xor
cs
nop
fisttpl
jl
shl
mov
xor
xor
xor
pop
pushf
pop
push
lcall
adc
mov
ss
jge
test
push
mov
sarl
fs
sbb
fisubrl
lods
or
cmp
jo
dec
dec
das
aam
pop
lret
mov
inc
jbe
mov
jp
xchg
enter
and
testl
cltd
movsl
pop
lahf
das
dec
popa
fisttpll
enter
dec
loop
cmp
mov
fwait
xor
bound
int
dec
dec
dec
out
xchg
scas
add
xor
xchg
lahf
js
test
rcrb
sbb
cmp
sbb
popf
cltd
sbb
stos
stc
pop
mov
icebp
mov
mov
cmp
stc
ja
xor
push
inc
cld
mov
outsl
inc
push
dec
shll
xchg
sti
popa
xorl
push
addr16
inc
or
cltd
jle
in
dec
popf
inc
jo
je
aas
orl
dec
out
dec
cmp
ja
icebp
shll
cmpsb
dec
mov
push
or
add
mov
jge
jno
iret
adc
mov
mov
mov
jmp
cmp
sbb
not
mov
cmp
xchg
push
inc
ja
sbb
xor
std
cmp
xchg
std
arpl
lcall
in
orl
fucomp
cmp
fmuls
or
mov
jns
xor
jno,pt
sbb
mov
je
rol
in
filds
lret
in
movsl
fs
mov
addr16
call
mov
pop
adc
movsl
jl
in
stos
imul
sarb
les
insl
mov
test
push
fwait
jb
jle
xor
push
adc
xchg
orb
pop
dec
aam
mov
jle
sub
mov
out
cmp
mov
fwait
pop
mov
daa
movsb
fimuls
mov
cmc
fisubrs
roll
loope
push
adc
or
and
mov
cmp
dec
xor
inc
jl
pop
fldcw
out
int
or
dec
jge
lcall
and
inc
bound
or
inc
test
adc
add
add
popa
dec
bound
movsl
lcall
pop
cmpsl
inc
popa
arpl
xchg
push
xor
in
scas
loopne
cmp
push
rorb
adc
movsb
popf
xchg
mov
mov
int
pop
out
xor
shll
adc
outsl
hlt
icebp
and
shl
pop
sbb
inc
mov
dec
repz
sbb
cmpsl
popf
mov
cmp
out
pop
or
cmp
fildl
stos
or
mov
sbb
subl
cmp
es
sbb
jns
inc
mov
int
jecxz
mov
add
lock
and
mov
push
jns
lock
lock
fstpl
inc
lcall
and
lods
mov
adc
mov
inc
jecxz
shrl
jbe
or
negl
mov
sub
imul
loop
pop
js
and
jns
inc
mov
sarb
std
push
ret
cmp
or
and
ja
addr16
insl
dec
cmp
popf
xor
mov
mov
jnp
inc
jp
stos
lods
in
sbb
push
inc
in
jge
bound
enter
mov
mov
lods
ds
mov
add
out
fwait
into
jmp
or
in
push
rcll
lret
push
ret
add
lea
dec
and
mov
adc
fwait
ror
in
rcl
xor
int3
push
test
jp
into
xor
xchg
lods
roll
scas
rolb
test
mov
mov
and
mov
out
add
mov
lods
std
rorl
stc
jae
fdivrl
pop
fsts
loopne
daa
mov
jmp
pop
dec
lahf
add
add
or
mov
rorl
or
jno
pushf
push
xor
pop
pop
repnz
add
cmp
jecxz
test
pop
sti
ljmp
stos
pop
notb
loop
jp
xchg
fwait
push
mov
push
mov
add
inc
int
and
xchg
ds
out
movsl
repnz
jnp
nop
sbb
lock
lcall
and
push
jl
adc
in
or
ja
test
mov
cmp
ds
fldt
inc
cmp
xchg
add
mov
test
xchg
adc
jo
cmpsb
dec
fisubrl
in
dec
pop
and
stc
in
push
sbb
frstor
jle
loope
dec
aas
pusha
repnz
mov
jge
or
lods
imul
xor
aas
inc
aaa
imul
pop
mov
andl
pushf
sahf
clc
lock
pop
push
dec
pop
or
inc
mov
cld
dec
pusha
lahf
mov
pop
push
repnz
mov
and
add
xchg
in
ret
add
test
movb
call
push
dec
cmp
xchg
xchg
mov
push
pushf
faddp
je
dec
add
fidivrs
insb
cmp
or
popa
imul
dec
xor
pop
sbb
hlt
test
neg
xor
hlt
mov
cmc
ret
pop
mov
enter
push
xchg
add
dec
lods
loope
mov
cmp
lea
adc
mov
jecxz
and
sbbb
jl
imul
adc
jb
mov
in
out
mov
mov
sub
shll
jp
stos
sbb
icebp
lcall
mov
or
test
out
pop
push
aaa
lret
mov
aam
mov
test
jle
inc
clc
rcr
lcall
movhps
in
out
leave
test
mov
push
xor
mov
mov
ret
bound
dec
sbb
es
out
mov
nop
data16
jne
test
and
xchg
aam
out
adc
sub
les
push
popf
testl
lcall
pusha
mov
mov
mov
andl
jo
adc
cmp
jo
lea
fisubs
xchg
sahf
or
adcb
inc
fistpl
sbb
mov
mov
xor
pop
sti
out
jns
xlat
inc
mov
mov
cmp
xor
scas
mov
sbb
xchg
ds
in
es
lea
adc
enter
mov
mov
shl
test
mov
xor
cli
repz
jmp
out
xor
pop
cmc
inc
cmp
adc
fsubp
and
mov
dec
jnp
sbbb
mov
fwait
mov
jmp
rorl
mov
xchg
cli
mov
mov
sarl
xchg
xor
xchg
and
adc
stos
out
dec
sub
pop
fnstenv
mov
cs
xor
inc
cmp
xchg
push
scas
sbb
mov
fucomip
jbe
add
sbb
jecxz
xchg
pop
xor
std
mov
adc
and
push
jmp
rcrb
jae
jle
les
inc
test
ss
popf
cmp
pusha
mulb
dec
or
cld
sub
ds
outsl
pop
inc
adc
decl
fildll
mov
imul
ret
orb
movsl
jge
adc
mov
mov
andl
aad
and
es
out
pop
cmp
cmc
rorl
lahf
mov
in
push
les
fdivrl
cltd
push
pop
shlb
mov
xor
jne
cmp
in
fistpll
out
xlat
or
fucomip
aaa
test
outsb
bound
xchg
xor
dec
daa
cltd
adc
ljmp
dec
push
movsb
or
nop
fmuls
movsl
mov
jb
mov
mov
ja
inc
sti
scas
dec
es
gs
xlat
cltd
mov
dec
nop
mov
or
inc
pusha
in
sbb
scas
arpl
push
or
stos
rolb
jp
xchg
push
scas
add
mov
loopne
dec
neg
or
inc
and
mov
loopne
dec
notb
sar
pop
add
rcll
or
cwtl
cmpb
pop
lret
xchg
xor
ret
mov
inc
aaa
jno
dec
loop
pop
ds
mov
js
mov
sub
in
push
insb
int3
js
push
addl
in
or
icebp
xchg
adc
test
sub
pop
xchg
das
push
scas
insb
fldt
pop
jbe
outsb
aam
negb
xor
dec
xchg
push
ss
ja
int
and
push
out
add
test
xchg
sub
cmp
insb
add
and
dec
mov
add
dec
push
pop
xchg
into
pop
mov
in
cmp
mov
add
scas
jae
or
lods
jge
jo
mov
xor
test
fcomps
hlt
mov
icebp
sub
mov
loope
test
mov
popa
push
jns
dec
sub
dec
mov
cwtl
dec
fdivs
lcall
int
pusha
xchg
xor
dec
cmc
pop
jmp
push
ror
xor
call
pop
push
mov
xor
xchg
jecxz
lahf
inc
mov
rorb
cmpsl
sub
pop
repz
daa
mov
pop
dec
in
sbb
aaa
aaa
and
add
rorb
scas
inc
pop
sbb
or
sbb
inc
into
add
icebp
ja
mov
repnz
gs
das
or
mov
icebp
cvttps2pi
adc
and
test
in
insb
lahf
cmp
push
je
or
aad
mov
adc
pop
fcmovb
out
pop
xchg
cld
es
leave
ljmp
mov
sub
mov
out
leave
push
or
in
inc
ret
push
xlat
lahf
fdivl
es
add
repnz
sub
in
jno
jmp
aam
sahf
mov
icebp
and
lods
pop
out
cmp
cmp
mov
mov
jp
push
xchg
adc
push
jne
mov
lods
pop
ljmp
and
call
adc
cmp
push
in
adcl
mov
adc
push
inc
xchg
mov
xchg
es
pop
lahf
jp
or
cmp
cwtl
push
pusha
sti
and
and
ja
call
inc
das
dec
bound
or
adc
dec
jns
jns
or
and
push
mov
bound
or
cmpsl
push
jae
daa
mov
push
imulb
movsl
lret
std
mov
mov
fwait
pop
lahf
pop
xor
ljmp
dec
jnp
push
mov
inc
xchg
fsubrs
or
adc
mov
sbb
nop
ret
mov
std
cmpsb
in
pusha
ljmp
sbb
es
jle
imul
jne
cltd
int
scas
fwait
mov
push
test
pop
cmpsl
js
movsl
dec
push
adc
ss
addr16
sahf
xor
mov
shl
in
rol
popf
or
int3
push
aaa
or
stos
push
sub
test
and
in
lret
sbb
fidivrl
shl
xchg
sub
ror
cmpb
pop
adc
repz
gs
ljmp
lea
je
outsb
xchg
mov
inc
add
popf
dec
arpl
cmp
pop
inc
xor
scas
notb
adc
lea
adc
mov
push
cwtl
loop
lret
insl
andb
and
mov
into
sbb
push
shrl
insl
cmc
icebp
mov
ret
insb
rcrl
test
shrb
loope
movsl
mov
hlt
sti
jge
mov
pop
dec
test
lods
or
aam
inc
int3
imul
mov
mov
push
sub
push
arpl
push
jno
mov
dec
ja
int3
loop
and
push
adc
jnp
in
jle
pop
aad
xchg
pop
xlat
mov
popf
or
fld
std
fisttpl
add
pop
dec
sub
push
clc
cmp
out
stc
inc
dec
cmp
daa
and
adc
and
test
arpl
cwtl
add
pop
mov
jecxz
sahf
pop
out
push
decb
les
and
inc
clc
pop
sub
inc
aad
pop
jp
pop
adcl
cmp
fisttps
push
mov
cmp
fldcw
nop
dec
add
stos
in
jmp
xchg
sub
out
das
sub
sub
or
lods
stos
mov
mov
leave
xchg
or
mov
popa
rol
mov
or
pop
loopne
das
push
cmp
mov
mov
jp
insl
or
xchg
cmp
aaa
xchg
mov
dec
inc
mov
dec
fstl
cmp
repz
ret
ja
test
push
nop
shl
gs
jl
andl
xchg
and
sti
adc
jns
int
adc
cwtl
cltd
cltd
call
repnz
into
push
loop
adc
xor
lahf
subb
dec
test
mov
adc
test
cmp
xchg
xor
je
int3
icebp
cmp
int
or
jne
fs
mov
divb
mov
je
rcr
inc
lods
in
mov
stos
xor
add
cmpsl
sarl
mov
cli
add
out
cltd
insl
mov
push
std
or
mov
xor
inc
ljmp
jne
inc
adc
push
aas
stos
in
scas
inc
push
adc
mov
xor
jge
cmc
ds
mov
inc
xor
adc
and
mov
cld
inc
fnstenv
ret
cmc
cli
scas
add
in
in
jle
and
aam
jno
clc
jmp
loope
test
fcompl
aam
fistps
xchg
call
dec
in
xchg
scas
adc
cmc
bound
fsubs
aam
mov
fisttps
loope
out
js
pusha
imul
mov
clc
gs
repnz
lods
push
xor
clc
adc
loope
imul
inc
fwait
xchg
jns
insb
mov
imul
in
icebp
shlb
jns
fcompl
mov
repz
call
xor
cmp
ret
adc
and
out
sbb
aad
negb
or
aaa
lods
icebp
or
cmp
repnz
xchg
inc
dec
enter
fwait
or
outsl
or
subl
or
pop
clc
jecxz
lea
stos
jne
sub
xor
lret
cmp
in
sti
inc
ds
jmp
pop
sbb
jnp
out
je
inc
std
adc
or
fisubl
lahf
inc
mov
xchg
scas
sub
xor
mov
mov
cs
sub
sti
inc
cmp
jmp
jb
jnp
jge
rcrl
fst
hlt
loop
sub
cmp
shr
mov
outsb
mov
push
pop
and
adc
mov
loope
cmp
push
ss
mov
fsubs
add
sub
push
dec
arpl
mov
sti
pusha
imul
cmp
gs
add
adc
popa
sbb
dec
sbb
and
scas
sbb
inc
aas
imul
sahf
lret
mov
add
scas
insb
mov
scas
push
and
jae
rorb
aas
mov
mov
gs
cmp
sbb
cs
or
add
fisubrl
insl
dec
fiaddl
bnd
cmovae
pusha
sub
mov
xor
sub
mov
cltd
sahf
jnp
add
shll
fisubs
inc
xchg
sbb
sub
ja
icebp
mov
push
mov
jmp
mov
or
dec
inc
jae
pop
inc
sbb
or
cmp
loopne
jp
mov
orl
out
insb
movsl
jnp
lret
or
adc
cmp
push
jno
push
gs
aam
adc
hlt
xor
push
jle
sub
and
jae
aam
test
dec
mov
mov
fincstp
mov
arpl
loop
jnp
cmp
out
loop
cmpsb
cmpb
popf
outsb
test
out
or
mov
stos
sbb
jecxz
jno
push
lock
scas
adc
lea
push
push
aam
jecxz
pop
outsb
rorb
movsb
push
push
sub
mov
add
lcall
pop
fdivp
xor
dec
repnz
sbb
xchg
pushf
fcmovbe
and
mov
xor
or
mov
hlt
dec
cli
int3
mov
sahf
fmulp
lods
subl
shll
sub
xchg
and
mov
mov
xchg
and
stos
insl
scas
loopne
xchg
std
cltd
fisttpl
lock
shlb
mov
mov
aam
inc
jg
lret
sti
push
das
push
dec
adc
mov
xor
inc
imul
andl
cmp
aaa
dec
push
sbb
in
adc
in
addl
jns
adc
stos
jns
insl
lret
cwtl
push
mov
jge
inc
mov
jnp
cs
inc
mov
inc
adc
or
shl
sarl
lea
xlat
add
xor
cmp
push
lods
xchg
fsubl
loope
rorb
das
test
insl
jne
cltd
pop
sbbl
dec
loop
push
dec
data16
mov
bound
test
xor
mov
push
imul
movsb
imul
mov
xor
jbe
xchg
push
shrl
adc
pop
add
jb
cmpsl
fdivrs
es
sbb
sub
testb
mov
pop
lret
mov
hlt
aam
dec
lds
gs
jo
mov
dec
xlat
push
inc
xchg
rcl
mov
les
movsb
sbb
js
jecxz
xchg
push
into
mov
imul
or
xchg
dec
dec
inc
xchg
fdivrl
movsb
adc
xchg
or
sbbl
add
call
movsb
pop
jno
gs
mov
lcall
ds
add
leave
data16
pop
addr16
cmp
loope
and
jle
aad
jo
out
push
jecxz
inc
in
dec
repnz
xchg
sti
or
cmpsl
mov
or
aas
bound
test
stos
ret
add
mov
repz
mov
test
adc
aas
xchg
xchg
sbb
jecxz
adc
mov
shlb
jp
outsb
js
rolb
and
adc
clc
or
xchg
xor
sbb
or
xor
dec
mov
fs
inc
rcrb
lret
xchg
test
cmp
and
jp
loope
mov
mov
rcl
cs
fiadds
push
and
and
pushf
sub
rcr
and
js
int
subb
les
dec
dec
push
aad
or
ss
mov
cmc
iret
cmovo
das
test
mov
in
push
inc
movsl
repz
push
adc
pop
sbb
aad
jae
push
pushf
jp
movsb
mov
pop
or
mov
pusha
add
nop
and
mov
fistl
jo
push
lods
imul
add
cmpl
cs
mov
das
in
dec
popf
jle
daa
test
popf
jecxz
lret
pop
cmpsb
fimuls
mov
adc
arpl
inc
mov
adc
mov
jecxz
and
xchg
or
mov
xchg
dec
int
ljmp
pop
outsl
clc
cli
push
into
sbb
push
or
push
push
mov
dec
int3
orl
imul
mov
sarb
sbb
dec
fsubl
iret
imul
scas
sahf
push
dec
jb
aaa
leave
jmp
popa
adc
mov
add
or
lret
sbb
int3
jle
aaa
sub
je
add
mov
or
adc
mov
insl
icebp
pop
sub
pop
jl
loopne
lods
mov
mov
enter
fs
lcall
xchg
test
popl
push
jne
mov
add
cltd
push
inc
push
or
test
add
dec
mov
ds
std
jge
mov
rcrb
popf
lahf
imul
jb
or
arpl
in
insl
xor
or
adc
bound
jg
dec
mov
xchg
mov
dec
mov
mov
lods
pop
mov
xchg
mov
lret
out
mov
dec
push
xor
xlat
jo
out
sub
xchg
inc
jb
push
lock
icebp
rclb
and
dec
out
aam
mov
push
and
xor
mov
neg
jmp
mulb
ja
addl
pop
lret
inc
cmpsb
int3
mov
dec
adc
jbe
xor
movl
cwtl
repnz
add
xor
out
add
ljmp
sti
mov
sahf
sbb
aam
lock
or
repnz
insb
and
mov
pop
dec
adc
test
mov
bound
pop
adc
cmp
mov
ja
popa
add
dec
inc
fs
mov
jp
dec
mov
cmc
mov
adc
shrl
push
testb
repz
mov
stc
jl
cmp
cld
outsb
jle
js
fsubl
jns
movsb
nop
sub
push
xchg
mov
stos
dec
sbb
cmp
cltd
mov
mov
fs
loopne
je
fidivrl
arpl
dec
stos
or
call
xchg
xor
push
in
xorl
addl
pop
es
mov
jae
sub
out
add
sbb
mov
aad
stc
mov
adc
xchg
xor
out
ja
cmp
das
lock
cmp
push
adc
pop
jp
add
inc
lcall
pop
lods
cmpsl
ror
add
adc
sub
mov
icebp
mov
mov
cli
fsubl
push
mov
push
dec
int
leave
popf
lcall
xchg
mov
or
dec
add
bnd
mov
xor
xchg
mov
pusha
lcall
outsl
std
xor
addb
add
mov
jno
pushf
hlt
pop
dec
mov
aad
insb
mov
jnp
sub
push
mov
mov
test
sub
clc
jl
sub
cmc
pop
outsb
loop
pop
cli
in
or
mov
jne
dec
push
lret
xor
into
add
pop
fcoms
cmpsl
cld
sbb
jns
std
fwait
js
adcb
jl
jmp
stos
nop
rolb
push
das
pop
inc
outsl
pop
aad
sahf
lods
stc
movsl
arpl
or
ficompl
push
scas
outsb
xchg
push
shl
mov
mov
adc
ret
orl
inc
es
in
pop
inc
and
cmp
ja
stos
repnz
lock
jb
test
dec
inc
lock
pop
std
es
xlat
sub
test
mov
cmpsl
popf
mov
test
leave
or
sbb
in
rcrb
push
mov
adc
mov
xor
dec
loop
push
xchg
mov
pop
xor
mov
add
loope
ja
mov
add
popf
das
outsb
loope
cmp
fdivrs
adcb
vpaddd
pop
jbe
and
cwtl
icebp
add
sub
inc
pop
outsb
xchg
test
repz
out
add
pop
jo
shlb
adc
mov
repz
and
out
jno
imul
jp
mov
push
out
mov
and
shll
je
fidivs
fisubl
and
imul
and
jae
mov
aam
rclb
add
fcmovbe
add
sbb
je
sahf
mov
and
aad
or
popf
pop
cmp
adc
test
nop
fstl
js
je
fcoml
pop
mov
repz
insl
cmp
ljmp
sbb
adc
mov
mov
jl
jb
lret
imul
clc
xor
cs
arpl
sub
lds
add
sub
dec
xor
xor
lods
push
je
stc
cwtl
test
in
and
fnstcw
rorb
rcr
pop
clc
cmpsl
ret
je
mov
sub
sti
xor
push
sbb
push
add
xchg
idivl
mov
stos
sub
les
and
ret
push
lcall
dec
outsb
mov
call
fldenv
int
popa
or
dec
iret
push
loope
lcall
das
pop
inc
mov
stos
cwtl
pop
mov
ret
out
push
adc
adc
jle
xlat
repz
xor
mov
sti
add
add
lock
mov
mov
scas
aas
inc
outsb
cmpsl
iret
dec
mov
mov
and
movsl
and
cmp
xchg
gs
push
aaa
stos
cs
sub
xor
push
mov
je
dec
inc
rcl
adc
or
lahf
negb
lods
orb
js
int3
cmp
jge
push
les
jbe
mov
loop
cmpsl
je
mov
inc
or
sete
push
or
sub
cmp
pop
dec
pop
mov
push
sbb
stc
insb
push
lahf
inc
sub
push
cmp
ss
je
jnp
mov
jmp
mov
add
out
push
mov
jns
push
dec
enter
xchg
outsb
bound
addb
test
out
out
mov
jle
push
arpl
push
pop
sub
movsb
pop
push
xchg
cld
sbb
mov
sbb
jnp
add
ret
jp
cmpb
movsb
mov
pop
cli
lahf
stc
mov
jp
or
jp
xchg
pop
cmp
jbe
mov
insl
aas
fs
jns
repz
call
dec
sub
into
jno
aam
push
popa
dec
fsub
outsb
and
add
or
inc
jge
and
xchg
adc
push
dec
adc
inc
aas
scas
ljmp
inc
leave
inc
jg
jp
and
shll
jecxz
push
test
dec
cmp
ficoml
jae
arpl
icebp
cld
jns
dec
mov
mov
jne
pmaxsw
add
push
lods
lds
ds
lods
lahf
and
movsb
pusha
push
lods
dec
sbb
fldcw
sbb
cmpsl
leave
adcl
insl
sbb
fcmovne
scas
xor
mov
aaa
or
and
lea
mov
dec
mov
fisttpl
push
stc
or
or
push
push
mov
cmp
stos
loope
loopne
adc
gs
mov
loop
add
or
inc
orl
jecxz
mov
insb
add
sub
xchg
mov
pop
xor
or
setne
jecxz
xor
das
sub
cwtl
dec
xchg
inc
stos
arpl
bound
sahf
cmp
pop
sbb
pop
leave
xor
lds
fsubrs
jge
dec
or
push
cmpsb
insb
orl
pop
fwait
out
outsb
aam
inc
adc
icebp
fiadds
mov
sti
jb
cmp
pop
mov
push
sahf
xchg
adc
aad
xor
lcall
outsl
add
stos
loopne
push
push
ds
das
inc
lcall
jg
jns
jmp
popa
inc
cmc
test
cli
shrb
jmp
pop
push
out
cmp
lds
xor
inc
adc
fcomps
and
int3
ds
cmp
pop
clc
dec
lea
mov
inc
nop
repz
lea
push
shlb
outsl
or
out
sub
adc
fprem
jle
int3
outsb
ljmp
pop
rorl
sbb
ja
daa
sub
push
lds
mov
rcrl
out
dec
pop
mov
loopne
mov
xor
std
stos
mov
cmp
jae
mov
loopne
hlt
sbb
test
jns
das
insb
mov
into
push
sahf
jnp
in
adc
jb
stc
cli
iret
dec
pop
pop
aas
hlt
jcxz
bound
xchg
mov
dec
arpl
xchg
lods
std
or
xlat
inc
lds
out
mov
nop
movsb
mov
mov
dec
jne
sbb
shlb
jmp
mov
pushf
jbe
push
mov
cli
jecxz
insb
xchg
insl
fsubl
insb
ss
sbb
push
int3
dec
bound
xor
out
test
and
and
test
push
and
push
leave
enter
cmp
arpl
testb
xlat
mov
sysenter
fs
js
in
xlat
xchg
dec
and
loopne
les
imul
shll
scas
jg
adc
es
and
push
fistl
push
insl
stos
jl
and
inc
or
fnstcw
icebp
mov
mov
jecxz
pop
mov
gs
xor
mov
pop
mov
pop
mov
xlat
sbb
jo
outsl
pushf
movsl
inc
inc
mov
pop
das
adc
add
push
xor
dec
bound
ljmp
mov
xchg
xchg
sub
dec
dec
or
mov
cmpsl
pop
inc
aas
xor
lcall
ljmp
sbb
pop
cmpsl
jmp
xchg
ret
jl
push
add
mov
cmp
sbb
rol
add
and
daa
or
or
cli
dec
sbb
mov
les
xchg
movsb
mov
clc
es
cwtl
mov
mov
es
lcall
mov
xchg
sbbb
xor
popf
cmp
jp
lods
mov
push
mov
repnz
ret
jne
xlat
fwait
insb
ret
pusha
test
lcall
lds
fisttps
notl
loope
fnstcw
imul
pushf
and
xchg
add
jmp
xor
push
jne
adc
inc
xchg
adc
jmp
cmp
xlat
out
mull
and
nop
pop
andb
push
out
xor
xor
xor
std
and
sbb
insb
les
je
lcall
and
cmpsl
xor
aaa
push
movsb
mov
or
push
sub
cld
negb
mov
xchg
test
pop
mov
ss
and
nop
shll
inc
jecxz
dec
fucomi
scas
sti
add
std
xor
pop
and
xorb
mov
cmp
lods
scas
loopne
mov
scas
fnstsw
dec
and
bound
or
fwait
rolb
adc
push
cmpsb
pop
rol
lcall
sub
pop
sub
mov
pop
int
mov
pop
mov
in
sbb
mov
jl
xlat
adc
jno
pop
imul
popa
jecxz
mov
adc
fwait
jecxz
iret
lret
xchg
cmpsb
out
mov
out
shll
adc
mov
je
sahf
lcall
sub
test
jbe
out
movsl
test
stos
sbb
sbb
js
jp
stos
push
insl
dec
mov
pop
cs
and
stos
jp
cs
inc
cmpl
pop
stos
int
mov
dec
push
int3
shl
int
mov
inc
jae
sti
dec
xor
clc
cmp
loop
sub
xor
js
push
iret
cmp
flds
add
xorl
stos
je
mov
mov
jmp
and
jbe
fwait
pop
test
std
xchg
fbstp
dec
fisubl
insl
push
cwtl
xor
stc
stc
and
xor
scas
call
test
fistl
dec
jne
mov
roll
popf
cmp
test
je
ret
push
lods
mov
sbb
cmp
int3
inc
add
stos
xor
out
movsl
scas
and
mov
scas
pop
dec
out
mov
mov
int3
jp
sbb
xchg
outsb
subb
lods
shll
xor
and
int
pop
push
stos
push
lret
and
in
and
popf
jg
scas
sahf
mov
mov
jne
enter
ffree
mov
insl
add
in
lret
sarb
jle
push
push
xchg
mov
inc
sub
ret
add
lods
pop
mov
add
cwtl
jl
dec
cmp
cmp
lock
enter
or
bswap
add
sub
adc
sbbb
push
lock
mov
imul
adc
xor
mov
pop
mov
test
mov
shr
addb
and
movl
popl
stos
repnz
idiv
jns
cmp
addr16
sbb
xor
out
das
lock
aad
adc
xchg
mov
pop
pop
add
enter
pop
adc
mov
xchg
push
inc
ret
add
mov
bound
loope
sbb
xchg
xchg
xchg
and
in
cmp
mov
mov
jo
xor
pop
xchg
les
xchg
and
in
mov
dec
jmp
in
loop
mov
aaa
jmp
pusha
stos
sbb
out
or
lcall
repnz
push
lock
in
push
mov
mov
adc
xlat
adc
movsl
nop
sbb
int3
out
std
orb
std
aad
pop
pusha
mov
enter
stos
shr
adc
ret
outsl
adc
fldcw
jns
pop
aas
xor
repz
addr16
and
and
mov
jno
sbb
mov
mov
push
in
inc
call
sbb
dec
in
sbb
sbb
cmp
call
adcl
inc
shrb
push
loope
fists
out
vmovups
leave
dec
xchg
int3
sub
jge
test
add
mov
jbe
movsl
and
fcomps
shlb
idivb
fistpl
test
loop
jle
jp
mov
and
icebp
rolb
lcall
rorb
in
cmpsl
add
dec
push
addr16
jecxz
cmpsl
ljmp
mov
add
lock
mov
pop
testl
or
push
xchg
aam
sub
mov
inc
cmc
rcll
pop
mov
lahf
xchg
fistl
fsubs
mov
call
push
mov
ret
inc
cmp
lret
xor
xor
and
lret
inc
and
xchg
pop
jg
xor
movsb
mov
mov
fisubs
ljmp
lret
sub
dec
push
fimuls
add
insl
dec
in
stos
xlat
ja
or
cs
inc
add
inc
ret
xchg
add
mov
outsb
jle
iret
mov
pushf
push
mov
xchg
xor
push
jecxz
inc
out
je
push
jecxz
sub
push
inc
scas
int3
xorb
ss
push
adc
sarb
gs
insl
push
outsl
add
popl
sub
sub
mov
mov
icebp
stc
fisubs
cld
push
mov
sbb
or
cmp
sub
cmp
sbb
adcl
andl
jle
mov
pop
inc
mov
je
and
je
out
insl
cmpsb
scas
int3
repz
mov
idivl
pop
cmp
adc
fldl
pop
inc
dec
xor
jle
jle
in
jae
xchg
mov
std
sub
mov
mov
sbb
jmp
cli
loop
inc
stc
std
pop
add
aas
sub
xchg
sbb
rolb
imul
xchg
aaa
iret
mov
and
in
and
mov
test
adc
lock
mov
mov
cwtl
aad
loope
push
cmp
inc
inc
movsl
clc
mov
and
pop
and
mov
push
hlt
mov
dec
mov
sahf
jb
mov
or
dec
xor
pop
or
mov
cmp
mov
test
cwtl
push
sub
icebp
xchg
sbb
loope
mov
push
mov
psubsb
mov
lret
das
mov
movsb
cwtl
mov
and
jp
shr
xorl
enter
dec
pop
push
push
mov
rol
adc
repnz
push
ss
sub
jmp
pop
dec
sarb
and
sub
mov
inc
xchg
jmp
xor
mov
jecxz
and
ds
bound
js
add
testl
add
xchg
aam
fimull
mov
out
andb
mov
mov
mov
sbb
mov
mov
mov
mov
sbb
iret
out
aas
inc
pop
adc
fnstsw
xchg
jo
pop
lcall
adc
dec
cmc
ss
xor
cli
xor
inc
scas
pusha
loope
add
out
mov
push
jb
adc
and
jmp
int3
dec
outsl
pusha
aad
xchg
jge
pop
jle
pop
cmp
cmpsb
imul
test
pop
adcl
scas
repz
insb
test
jb
mov
sbb
sbb
cwtl
int
jl
sbb
xor
or
lds
popf
xor
stos
cmp
pop
add
into
inc
mov
inc
stos
mov
xor
inc
pop
pop
mov
fidivs
xchg
sbb
sahf
inc
pop
in
in
push
fdivrl
adc
fcom
jne
aam
imul
insb
inc
mov
subb
push
mov
push
dec
js
je
add
cmp
out
xchg
adcb
xchg
cmp
adc
mov
clc
or
inc
lea
lds
mov
gs
daa
inc
fmul
pop
xchg
pop
mov
cld
mov
jmp
stos
cld
xor
xchg
scas
jns
jb
push
cmc
ficoml
ret
push
sub
push
xchg
int
mov
repz
sar
int
and
std
lods
sarl
shl
out
fiaddl
jg
mov
rcr
gs
jle
dec
test
push
out
inc
dec
pusha
pop
cmp
addr16
ret
jp
or
pop
adc
cmpsl
movl
inc
cld
test
nop
mov
and
mov
pop
je
cmp
in
int
ljmp
and
lahf
test
fidivl
mov
clc
roll
inc
xchg
mov
jne
cmpb
fsubrl
repz
movsb
daa
mov
ss
hlt
bnd
sub
or
js
out
sahf
inc
data16
ss
inc
sub
js
xor
xchg
add
jae
xchg
mov
push
fildl
pop
iret
mov
xor
icebp
popa
sub
popf
pop
lahf
jecxz
addb
cltd
or
test
push
test
bound
out
rorl
jne
xorb
addl
push
push
push
dec
xchg
fists
sbb
mov
and
mov
xor
sbb
in
fs
mov
xchg
mov
inc
movb
mov
clc
xor
outsl
sub
and
dec
xchg
add
dec
outsb
sti
stos
jo
sbb
xor
pop
push
push
loop
pusha
mov
pop
inc
or
push
push
cli
sahf
dec
lds
mov
xor
cmpsl
jmp
adc
mov
sbb
int3
fisubrs
ret
inc
stos
addl
inc
scas
cmc
mov
test
jno
enter
idivb
shl
pop
cwtl
xchg
stos
es
inc
gs
mov
sahf
outsb
rorl
nop
lds
ds
xchg
pop
movsl
xchg
mov
lea
and
push
mov
call
pop
ret
pop
ljmp
add
jg
mov
mov
sbb
or
dec
out
arpl
dec
push
lds
mov
test
popf
arpl
mov
repz
xor
lcall
inc
mov
mov
int
mov
fimull
pop
out
js
adc
insb
out
bound
cmp
je
ss
mov
and
movsl
pop
popa
add
cvtpi2ps
cs
jecxz
pop
adc
cld
mov
cmp
inc
repnz
jmp
xchg
das
and
xchg
xchg
pop
rclb
xor
hlt
add
cmp
or
pop
sahf
jb
push
rcr
pop
mov
test
mov
xchg
xchg
mov
je
js
jns
mov
jle
stc
or
mov
pop
pop
dec
jne
lcall
push
mov
sahf
xchg
es
leave
mov
jecxz
lock
ret
shlb
adcl
loop
aad
jns
cmp
inc
push
loopne
xor
pop
sub
jnp
ljmp
push
sub
mov
cmp
dec
push
jae
push
es
mov
dec
jnp
jno
sbb
push
sbbb
xor
cmp
pop
and
mov
cmpsb
mov
adcl
mov
sbb
pop
fsubs
ljmp
fcomps
sub
repz
mov
inc
push
bound
push
vcvtsd2ss
sub
or
addr16
hlt
aam
stos
adc
sub
lahf
cwtl
sbb
rolb
xor
fsubr
jge
lahf
sub
cmp
fwait
cmp
int
cmp
dec
test
pop
rcrb
arpl
out
mov
adc
lret
pop
into
jno
js
dec
pop
fldcw
lret
cmp
push
pop
movsb
jne
fstl
rcl
mov
inc
repnz
mov
int
xor
jg
nop
mov
xor
cld
or
sub
movsb
sbb
jecxz
ret
lea
lret
lea
cwtl
aaa
push
dec
cmp
subl
clc
mov
add
jbe
pop
xor
mov
xchg
mov
ljmp
cltd
leave
xchg
popf
test
loop
jge
adc
pushf
ret
and
lods
xor
outsl
mov
jecxz
push
lret
mov
jb
xor
mov
lret
xor
out
in
mov
mov
mov
fldt
aas
not
jg
fwait
cli
jns
hlt
cmc
xchg
bound
test
jmp
jo
lods
jmp
jns
daa
out
sbb
push
pop
xorl
and
sbb
or
lds
dec
pop
xchg
sbb
mov
pop
orl
jp
push
adc
lods
movsl
fs
or
or
mov
test
mov
jno
inc
push
and
mov
mov
adc
jbe
in
cmpsl
mov
xor
outsl
sub
pop
lods
push
mov
lods
add
push
int
mov
push
leave
fcomp
mov
in
dec
lret
fldl
or
mov
jbe
dec
inc
fdiv
mov
fwait
xor
std
and
outsb
andl
unpckhps
jge
mov
popa
push
push
jae
adc
out
addr16
fwait
addr16
xchg
pusha
mov
fwait
mov
xchg
mov
cmpsl
push
mov
push
push
mov
inc
movsl
xor
ss
test
mov
jno
testb
pop
cwtl
gs
mov
push
push
nop
dec
or
or
arpl
adc
leave
shlb
jb
inc
pop
mov
jb
add
cmp
xorb
nop
fstps
xchg
div
xchg
mov
pop
mov
inc
add
in
js
movb
stos
mov
xchg
sti
add
orb
jmp
into
xor
sti
mov
out
mov
mov
dec
sub
pop
mov
ret
cmpsb
bnd
cld
cmp
push
lret
cltd
and
mov
mov
sti
mov
push
aaa
sbb
cltd
in
xchg
push
mov
jo
mov
mov
imul
jnp
dec
mov
popf
push
adc
ficoml
mov
cmp
cmpsb
lret
movsl
pop
test
sbb
xchg
add
iret
xchg
jns
inc
pop
inc
pushf
sub
pop
mov
xor
shlb
or
movswl
xchg
or
in
out
mov
ret
pop
cmp
jbe
fstpt
jp
sarl
in
icebp
mov
xchg
mov
add
loope
bound
cltd
xor
cmp
add
fidivrl
popa
xlat
push
loop
xchg
fistpl
cmc
int3
es
mov
addr16
mov
ds
mov
test
pop
out
sub
cmc
inc
xor
sub
ret
rcr
xchg
xchg
dec
cli
mov
inc
jnp
ss
pop
sub
cmpsl
movsb
scas
pusha
js
or
pushf
and
sarl
mov
rol
mov
rcrl
iret
pop
in
pop
test
jnp
dec
pop
xor
adcb
push
cmp
xor
adc
jp
out
mov
xor
sub
jl
lahf
sub
ret
ret
inc
mov
adc
icebp
adc
inc
mov
sbbl
mov
adc
dec
cmp
lods
jge
jbe
or
movl
scas
mov
int3
xor
jp
out
popa
int3
mov
fcoms
jl
xchg
das
xor
fsubp
popf
mov
xchg
or
and
xor
mov
int3
ss
aam
mov
jp
inc
icebp
xor
pusha
or
rolb
dec
mov
mov
aad
lods
dec
sub
sbb
aaa
mov
ja
repz
popf
lret
xchg
lret
es
pop
or
in
cmp
gs
xor
fsubs
outsb
decb
ror
or
dec
sbb
into
aaa
cltd
cltd
push
data16
pop
inc
adc
sub
into
out
out
cmc
add
cwtl
mov
dec
cmpsb
add
inc
fiaddl
push
push
push
fdivs
push
dec
cmp
mov
cmpsl
pop
cli
in
jns
pushf
cmp
popa
idivb
xor
mov
pop
in
sub
and
adc
add
or
call
push
sub
ficoml
push
cmp
dec
fs
aam
data16
push
and
scas
andb
lcall
sub
jns
cmpb
jg
push
icebp
lret
xchg
jl
push
xchg
sub
pop
negl
cmp
dec
mov
or
outsl
lret
in
mov
dec
cmp
mov
inc
sbb
jmp
test
cld
movsl
adc
jo
insb
es
push
add
mov
xor
push
clc
sbb
push
repz
bound
insl
bnd
sub
xchg
ja
iret
sbb
and
fmul
xor
cmp
aad
dec
dec
jns
add
xor
jp
pop
add
xlat
or
notl
loop,pt
imul
inc
aam
cmpsb
push
scas
ret
and
cmpsl
mov
int
jp
or
sbbl
sbb
or
imulb
insb
push
bound
add
popf
repnz
and
ret
jb
xchg
sub
ja
adc
adc
and
xchg
jle
addr16
jecxz
ret
sbb
out
imul
dec
cld
mov
sbb
jbe
mov
xabort
push
div
xor
orb
mov
adc
and
iret
inc
orl
mov
jge
dec
cmpsl
or
push
jecxz
in
mov
gs
mov
nop
pop
int
sbb
xchg
mov
xlat
mov
dec
fwait
int3
pop
js
out
mov
mov
fs
popf
das
fcomp
cli
mov
xor
fildll
push
mov
jle
sti
add
out
mov
xlat
cmp
mov
mov
cs
imul
push
jg
cltd
es
rcrb
and
mov
cmp
insb
rorb
stos
push
or
mov
shrl
dec
loopne
mov
add
jbe
cmpsb
adcb
sub
jno
push
addr16
in
repnz
cmp
xchg
jmp
lods
inc
sub
movsl
xchg
pop
inc
mov
loope
push
gs
in
xchg
imul
out
sub
mov
jp
scas
inc
or
inc
sbb
lahf
cltd
ret
test
and
pop
sub
sub
cmpsl
adc
enter
stos
mov
outsb
leave
dec
push
jns
iret
cmpsl
mov
sbb
aam
dec
cmc
cs
dec
jp
sub
fmuls
cli
test
and
mov
insb
fisttpll
jno
data16
mov
cwtl
mov
sahf
mov
insb
stos
pop
jp
notl
sbbl
inc
xor
xchg
je
jnp
repnz
insb
xor
in
adc
add
pop
and
pop
arpl
mov
pop
sarb
lods
jmp
mov
dec
xchg
jle
ja
pop
int
lock
mov
mov
pusha
ret
shr
lods
add
loopne
mov
push
je
popf
ret
je
popf
mov
inc
sti
xchg
out
ret
inc
je
sbb
nop
inc
lock
insl
mov
pop
xchg
mov
loopne
adc
pop
dec
cmp
cs
and
xchg
xchg
xchg
mov
inc
xchg
add
or
jns
cmp
mov
pop
pop
insb
xorl
pop
out
dec
xchg
test
mov
fisubs
sar
aaa
icebp
add
lea
adc
xor
pop
outsl
mov
push
and
int3
gs
test
lcall
ljmp
cmp
aas
into
popa
je
insb
mov
push
mov
movsl
subb
imul
sbb
int3
xchg
lea
pop
mov
mov
lcall
insb
mov
lret
jecxz
outsl
push
sti
test
inc
sti
lcall
sub
pusha
cmp
dec
mov
pop
add
loop
adc
jge
ljmp
inc
jecxz
pop
insb
and
call
or
adc
roll
divl
mov
jno
xor
popf
jle
pop
shrb
or
in
push
pushf
push
pop
inc
rorl
push
adc
data16
lret
dec
xchg
xchg
fs
outsb
sub
leave
mov
and
daa
push
dec
lods
mov
and
sbb
and
mov
lret
push
mov
in
add
cltd
fsub
sub
jecxz
out
push
lahf
mov
pusha
test
add
mov
fdivrs
sub
es
jae
lret
leave
rcr
sbb
mov
cmp
imul
stc
inc
ja
sub
ss
sti
inc
add
xchg
lock
loopne
and
pop
inc
cmp
inc
fstl
lret
push
popa
adc
push
xchg
mov
sub
mov
subb
fmull
jb
fistps
add
add
mov
adc
or
out
xchg
jecxz
sbb
test
mov
and
push
dec
dec
mov
sbb
imul
xchg
xor
mov
outsb
imul
push
fcoml
test
out
test
lds
mov
xchg
jp
mov
pop
jge
lahf
inc
add
mov
nop
stc
rcrb
push
xchg
cmp
repz
out
inc
inc
jns
and
icebp
xchg
push
lcall
hlt
add
andl
aaa
stos
sub
insl
divb
popf
pushf
mov
push
popf
mov
popa
lock
imul
test
cmp
nop
fcmove
xor
inc
sbb
dec
pop
mov
loope
inc
add
fadds
scas
lcall
sbb
mov
mov
and
into
hlt
push
sahf
je
mov
sbb
pop
lcall
push
and
dec
in
call
pop
push
pop
xchg
mov
icebp
or
imul
bound
sbb
lds
ffree
mov
dec
fs
cli
inc
fs
pop
sub
fadd
mov
dec
and
hlt
adc
movsl
xor
and
lods
xor
pop
inc
add
arpl
in
adc
xor
dec
gs
fninit
negl
pop
mov
repz
sbb
testl
int
cmp
int
adc
int3
clc
ljmp
mov
mov
rcll
insl
xlat
sub
ljmp
add
imul
daa
jae
add
mov
sbb
xor
mov
jno
fildll
js
ja
inc
or
test
mov
cs
sti
out
xor
pop
xor
xchg
xchg
jo
fcompl
push
pop
int3
shrl
cld
mov
adc
rcrl
adc
cmp
or
adcb
loope
jae
ret
pop
add
and
lods
and
or
and
mov
sbb
cltd
dec
adc
mov
push
xchg
inc
fucomi
into
jle
std
js
out
push
xor
mov
int
int3
int
sbb
movsb
jo
pusha
pop
cmc
mov
leave
add
mov
lret
and
lcall
nop
popa
jnp
dec
and
in
push
lret
cltd
arpl
cmp
sti
adc
cs
sbb
iret
inc
fimull
cmp
pop
fldt
and
lret
ja
xchg
aas
sub
adc
mov
daa
mov
pop
fnsave
fsubr
popf
sub
pop
je
inc
dec
popa
cmp
loop
adc
loop
lds
xorl
cmp
xorl
xchg
jge
jg
shrl
mov
and
in
push
push
and
dec
lahf
sub
sahf
fwait
mull
jo
inc
jbe
lods
inc
js
stos
popa
push
pop
jmp
movsb
jle
mov
ret
sub
sub
mov
dec
test
test
cmp
sbb
and
fbstp
scas
sbb
pop
mov
sub
push
andnps
add
decl
push
insb
dec
and
mov
aad
inc
mov
mov
pop
lcall
mov
mov
cmp
and
fisubl
in
testb
inc
jbe
in
xor
into
not
sbb
data16
cmpsb
sbb
sbb
loop
int3
std
imulb
inc
je
mov
mov
cli
fcompl
cmpsl
sbb
adcb
hlt
pop
mov
ja
mov
data16
jb
sbb
test
in
sbb
ljmp
or
das
fwait
in
loop
fwait
std
inc
clc
jns
and
xor
in
filds
jnp
rcrl
scas
jb
repz
fnstsw
rorl
push
clc
aas
fadds
inc
pusha
fnstsw
pop
cli
xchg
cmpsb
mov
jo
ret
and
xlat
mov
shll
shrl
sbb
jle
pop
pop
cld
hlt
xor
fiadds
or
mov
push
and
push
fdivl
scas
inc
push
mov
sub
icebp
mov
jecxz
insb
mov
aad
lock
aas
jnp
add
mov
enter
std
iret
mov
or
dec
jne
neg
enter
mov
les
lahf
cli
sub
sbb
dec
outsl
test
jns
cli
test
adc
cmp
sar
dec
sbb
int3
push
inc
mov
sahf
fisubrs
nop
push
mov
stc
jbe
int
in
cmp
push
xor
and
jle
loop
inc
rorl
outsl
jne
or
movsl
pop
cmp
inc
mov
add
pop
cmp
jnp
cmp
sar
shlb
cli
sbb
lock
jmp
xor
or
leave
cld
div
or
cwtl
scas
cmpl
out
inc
int
outsb
lret
sub
xor
jns
jbe
int
lret
push
cmc
mov
jg
jno
push
or
jae
adc
jns
stos
outsl
cwtl
push
pop
push
jo
pop
lods
sub
xchg
or
mov
lds
and
imul
subl
jno
rorl
fnstsw
test
enter
out
add
mov
call
push
jo
loopne
sbb
inc
stos
fdivrl
fdivs
pusha
dec
test
mov
mov
mov
pop
push
sbb
xor
cmp
leave
push
dec
mov
mov
pop
mov
lret
dec
mov
jne
test
or
inc
stc
jne
xor
or
cmp
push
std
xor
pop
shl
dec
xchg
adc
arpl
xor
push
into
test
push
mov
leave
jg
sbb
mov
adc
push
mov
xor
stos
lock
cmp
pop
cmp
outsb
sbb
lock
into
iret
jle,pn
mov
xor
loope
ja
and
pop
mull
lret
subl
pop
xchg
es
lret
xorb
insb
arpl
cmp
cli
loopne,pn
xchg
jbe
pop
xor
xchg
dec
mov
rclb
aad
dec
out
xlat
mov
mov
mov
jno
aas
cmp
push
xchg
lret
cmpsl
cwtl
inc
push
xor
push
cmpsl
insl
test
and
pushf
jl
mov
lea
mov
or
lods
in
dec
jnp
insb
stos
leave
jbe
xor
ss
mov
in
lahf
sbb
cmpsb
and
cltd
cli
and
cld
mov
mov
pop
jg
aas
dec
icebp
cmp
call
js
dec
cld
stos
pop
dec
mov
mov
jne
jecxz
stos
pop
push
jae
cld
pushf
insl
cs
cmp
and
fs
sub
dec
inc
cs
fisubs
mov
xor
cmpsb
mov
in
cmc
inc
jae
mov
or
xchg
std
lea
roll
dec
xor
sub
hlt
dec
nop
lahf
imul
leave
mov
xchg
push
in
lahf
mov
adc
in
loope
lcall
insl
mov
push
or
fwait
cwtl
in
les
cmp
dec
nop
xor
aad
jl
roll
test
xor
lret
cmp
dec
in
xchg
shl
clc
scas
iret
push
push
and
lea
test
mov
icebp
jecxz
cmc
mov
pop
push
jns
loope
ret
ds
gs
cmp
cmp
jb
sbb
push
decl
lret
dec
repz
popf
xor
cli
jns
inc
outsb
pop
shl
sahf
jb
aaa
movsb
fwait
dec
mov
push
pop
or
xchg
mov
call
mov
add
mov
dec
and
sub
cmp
repnz
scas
leave
in
mov
iret
nop
lds
fiaddl
sub
and
jl
lds
aas
jp
stc
lahf
mov
imul
clc
mov
add
and
cmp
sbb
ja
jl
add
repz
les
sbb
inc
aas
adc
mov
xor
push
iret
jb
fcomp
in
stos
xor
xchg
jnp
xchg
dec
add
jbe
xor
dec
and
stc
sbb
sbb
loopne
adc
mov
push
rcrl
push
dec
or
jmp
jne
arpl
popf
out
popa
cmc
repnz
test
cmp
test
pop
add
dec
and
mov
cmp
mov
xlat
and
mov
push
mov
int3
outsl
popa
add
mov
pop
xlat
nop
enter
xchg
sbb
cs
xor
push
mov
push
xchg
out
mov
sti
dec
jno
adc
mov
push
lock
fs
dec
inc
es
and
daa
popf
jns
jecxz
cltd
movb
pop
ficoms
cmp
push
fbstp
sbb
les
jnp
cmp
enter
outsl
faddl
aam
dec
mov
hlt
add
xor
push
fistl
out
stc
ja
cmpsb
jmp
mov
std
test
andb
push
push
insb
lahf
es
push
icebp
out
inc
push
nop
out
push
cmpsl
mov
mov
aam
lret
clc
cmp
scas
and
sub
jb
jle
ret
mov
cmp
stc
mov
mov
iret
lea
aam
xchg
stos
inc
mov
dec
or
call
or
ficomps
aaa
and
add
sub
rcrb
fwait
jnp
iret
cltd
dec
mov
popa
mov
fnstenv
xor
aad
push
out
sarl
sub
jl
fdivs
call
dec
sar
dec
outsb
je
les
mov
in
scas
cmp
inc
or
nop
or
jbe
sarl
dec
sub
stc
inc
or
push
inc
pop
std
fwait
call
iret
dec
in
xchg
icebp
in
push
ja
loope
ret
or
inc
cmp
pop
mov
and
insl
jno
cmp
xor
xchg
xchg
adc
push
xchg
lret
cmp
ret
cmp
sub
sarl
mov
subl
cmc
push
lea
jecxz
ss
scas
jecxz
cmp
cmpsb
cwtl
push
xor
sbb
mov
fcmovnu
xlat
loopne
outsl
xchg
jg
in
add
repnz
mulb
insb
mov
repnz
pop
cmp
fs
in
sti
lea
jg
pop
or
pop
and
fs
lahf
jg
sahf
adc
inc
les
jmp
push
test
or
ret
dec
push
sar
jge
sub
mov
jo
dec
les
mov
push
lods
int
in
clc
je
push
jmp
and
xor
sub
into
add
mov
loop
or
rcl
rcl
cli
movsl
rorl
and
aaa
das
test
stc
call
sti
jo
and
scas
popa
shl
out
fnstenv
pop
sahf
jp
ret
dec
xchg
xor
jmp
add
rclb
notb
les
mov
shlb
lea
aad
or
test
mov
out
jmp
lret
jnp
xchg
insb
call
pushf
lods
adc
and
in
test
xchg
mov
lea
mulb
bound
xor
push
pushf
nop
mov
pop
in
mov
cltd
rol
out
std
or
mov
sete
icebp
jmp
push
sahf
mull
jb
jns
inc
push
fisttps
pop
inc
lahf
cmp
push
sti
mov
fwait
nop
outsl
inc
testb
in
lret
jl
adc
mov
mov
popa
loopne
push
dec
aad
shll
pop
cmp
sbb
lcall
mov
mov
and
xchg
add
sti
xchg
mov
adc
repz
and
sub
test
mov
sbb
and
xor
mov
sbb
inc
push
xchg
or
xor
test
std
inc
inc
mov
push
test
xchg
sub
stos
andb
and
mov
rorb
sbb
idivb
int3
loopne
icebp
negl
movsb
scas
pop
rcr
shrb
xchg
ret
mov
mov
add
pop
stos
dec
cmc
lock
scas
je
xchg
out
loopne
int3
filds
dec
mov
into
xchg
in
jmp
aad
dec
xchg
out
push
dec
iret
lret
out
push
xchg
cmp
dec
jmp
jae
mov
sarl
psubq
inc
mov
scas
dec
mov
push
add
or
leave
push
out
sub
adc
in
and
nop
call
dec
jmp
xor
popf
fimull
fs
inc
pop
ds
or
ret
mov
xor
mov
fildll
xchg
cmp
in
jbe
mov
in
lret
out
mov
pop
jbe
inc
dec
lcall
lahf
dec
or
outsb
push
xor
daa
insl
mov
jle
lods
outsl
sahf
addl
stos
mov
dec
xor
xchg
lock
test
ss
or
push
iret
pop
test
jp
mov
pop
or
addb
push
xchg
inc
push
jne
mov
outsl
and
int3
pop
les
stos
cmpl
test
cmp
aam
bound
xchg
lods
divb
das
xorl
xor
jge
add
inc
dec
in
mov
rcll
mov
inc
mov
imul
pop
lcall
push
std
insl
adc
or
inc
pop
das
mov
xorl
into
cs
xchg
jge
jb
cmp
dec
arpl
test
lods
mov
add
xchg
mov
xchg
out
stos
out
gs
xchg
mov
popf
adc
sub
daa
shr
push
je
outsl
mov
jl
mov
jge
xor
mov
sbbl
xor
ret
imul
test
sbb
xor
mov
xor
and
sbb
jle
pop
addb
and
jnp
and
mov
adc
jne
jl
push
decl
fldenv
shll
or
jp
les
imul
pop
jecxz
shrb
cmc
inc
in
lods
or
inc
loope
stc
cmpsb
jae
inc
xchg
pop
xchg
movsl
mov
cli
xor
xor
jns
push
or
mov
xor
sbb
jae
enter
push
push
pop
mov
fcoms
inc
cmp
rolb
mov
cmpsl
push
cmc
test
xor
mov
mov
and
test
mov
jge
sahf
jne
xor
stos
lods
in
or
and
dec
or
jb
adc
mov
cli
out
and
divb
lods
fs
lea
movsl
mov
out
mov
nop
nop
cmpsl
jecxz
adc
int3
jp
pop
inc
pop
mov
jl
inc
ljmp
sub
cmp
dec
mov
std
sahf
dec
int3
jne
mov
lret
dec
push
mov
add
push
or
dec
mov
jo
inc
mov
pop
stos
jbe
shll
dec
mov
or
cld
xlat
jg
into
movsb
xchg
in
bound
mov
bound
lds
insl
dec
int3
pop
test
xchg
dec
jnp
push
sbb
sub
insl
mov
inc
shlb
cmpsl
or
xor
divl
and
ret
scas
lahf
jle
pop
in
lock
xor
pop
adc
pusha
testl
data16
jmp
push
xchg
loope
mov
mul
or
xchg
stos
sub
add
inc
movsl
arpl
xor
pop
ficoms
cmpb
pop
sbb
mov
fisttpl
adc
inc
sbb
xchg
or
inc
daa
cmc
pop
inc
cld
repz
adc
das
jl
or
imul
pop
sub
lcall
jmp
pop
aam
and
fidivrl
pushf
in
movsl
lret
mov
mov
adc
and
mov
and
popf
cmpsl
cli
mov
mov
xchg
mov
mov
and
cwtl
mov
inc
cmpsb
divb
pop
sbb
mov
add
mov
pop
xchg
mov
dec
and
push
jno
fwait
aad
mov
mov
sub
xchg
pop
rcrl
xor
mov
xchg
fiaddl
inc
shrl
xchg
mov
jecxz
in
fnstenv
push
xchg
fs
xor
into
jb
mov
cmc
clc
aas
mov
and
adc
ret
add
add
lock
xchg
popa
in
dec
cmp
shr
ret
les
adc
push
movsl
dec
and
lods
lods
out
loope
sbb
sbb
add
lea
sbb
jle
jecxz
xchg
lds
test
sub
cmpl
push
ljmp
lea
adc
or
dec
faddl
je
or
xchg
cmp
jecxz
cltd
and
into
clc
movsl
lock
ds
inc
out
mov
inc
cmpsl
mov
sbb
icebp
sub
push
test
popf
jg
idivb
nop
in
inc
xor
stos
into
xchg
xchg
dec
sbb
mov
das
fwait
sbb
mov
imul
out
out
mov
inc
push
hlt
add
jae
xchg
inc
cli
jbe
adc
push
mov
stos
push
icebp
adc
add
dec
sahf
lock
dec
sbb
lret
sbb
and
arpl
int
cmp
fdivr
in
dec
es
xchg
xorb
mov
js
dec
push
add
lock
jge
in
pop
pusha
rcl
push
push
sub
iret
je
ss
cmp
mov
lahf
cmpsb
and
dec
pop
sub
pop
jecxz
mov
inc
push
arpl
dec
dec
insl
in
repnz
push
rolb
test
mov
mov
mov
mov
jnp
sti
aaa
push
cmp
sti
into
cmpl
pop
sbb
cmc
jl
mov
push
enter
cli
mov
cmp
add
insb
lret
dec
outsb
movsb
sub
sahf
and
dec
jno
push
and
arpl
aam
or
int
punpckhbw
mov
mov
jns
clc
pop
pop
test
mov
mov
xchg
loope
js
push
sbb
sbb
cld
mov
inc
inc
rclb
xor
mov
xorb
or
inc
stos
les
mov
insb
xor
push
das
and
mov
nop
xchg
push
out
cli
roll
and
or
add
stos
and
dec
dec
push
add
push
or
jne
mov
inc
mov
pop
in
jnp
int
sub
push
adc
loop
std
xchg
jle
mov
mov
subl
dec
xor
js
add
inc
dec
cmp
cltd
pop
sahf
iret
jle
pop
cmpsl
shll
sub
ret
inc
add
rclb
cmp
cmp
lret
push
ror
xchg
mov
xchg
jmp
pop
inc
mov
mov
lea
dec
jae
rclb
xchg
add
adc
sub
hlt
movsl
jle
inc
jne
fistl
mov
push
inc
add
adc
push
bound
cmp
add
cmp
daa
pop
push
lods
xor
imul
insb
mov
in
cmp
arpl
pop
insl
sbb
loope
cmpsl
push
add
test
repz
dec
test
repnz
movsb
inc
and
mov
shll
lahf
movsl
das
cmp
jae
mov
adc
mov
push
lods
lock
scas
jno
mov
xor
addb
popf
cmpsl
popf
out
or
sub
sbb
out
cli
in
pop
pop
adc
imul
sub
jle
aaa
in
je
lret
or
jne
or
and
adc
movsl
sub
dec
mov
pop
inc
pop
mov
aas
cld
or
mov
out
push
mov
scas
fdiv
addl
aad
lcall
cwtl
mov
out
mov
packssdw
adc
mov
ret
pop
push
inc
aaa
scas
jecxz
and
sub
sti
out
test
pop
add
and
das
and
sbb
jb
adc
iret
aas
mov
ret
sub
add
jns
dec
outsl
das
mov
incl
or
push
xor
dec
mov
xchg
jg
mov
imul
mov
sub
stc
add
sub
mov
add
call
mov
mov
add
rorb
xchg
aam
mov
leave
cli
and
or
xchg
jle
and
inc
cmpsl
repnz
add
push
test
cmpsl
stos
or
mov
add
es
aam
sub
jno
cwtl
mov
out
mov
enter
cmp
pop
scas
outsl
and
and
push
mov
push
inc
lahf
icebp
rclb
imul
and
cmc
inc
or
loope
fsubp
cld
push
ffree
leave
ljmp
fdivr
outsb
jg
outsb
mov
xlat
jge
in
sub
hlt
sbb
cmpsl
jmp
jl
lock
mov
aad
mov
push
push
mov
jno
movsb
pop
cmp
idivb
lods
jno
pop
add
xor
rorl
push
pop
push
test
and
data16
mov
inc
jmp
cli
int3
rcll
jae
aas
lret
fwait
mov
arpl
pop
sbb
jns
iret
xchg
mov
andl
push
gs
mov
adc
dec
xor
test
mulb
sbb
sti
sbb
add
jb
sub
sub
push
shrd
fmulp
addl
xor
mov
ljmp
les
shl
dec
scas
lock
frstor
lock
sub
testl
int3
stos
sarb
jb
cmpsb
clc
add
movsb
mov
xchg
or
jg
subl
fxch
cmp
stos
adc
inc
xchg
push
xlat
insl
fcmovbe
push
add
out
and
clc
fldcw
mov
jbe
loop
xchg
jbe,pt
ret
mov
adc
dec
cmp
clc
xchg
inc
jmp
or
jb
outsl
xchg
mov
jmp
nop
call
adc
shlb
addr16
xor
sub
inc
fisttps
aas
cwtd
xchg
aad
clc
sti
aaa
jo
in
jne
lds
out
sub
adc
and
push
dec
jle
pop
daa
clc
xorb
sub
divl
mov
movsb
cmc
xchg
ljmp
add
add
popa
imul
into
sbb
fmuls
pop
xor
enter
sarb
mov
lods
jmp
and
xchg
outsl
je
call
or
loop
addr16
jno
cmpsl
mov
subl
push
test
cmpsb
or
add
xchg
int
scas
mov
mov
es
loope
or
xchg
scas
and
int
faddl
mov
jl
bound
lock
jmp
cmp
ss
movups
or
scas
sbb
cmp
pusha
add
and
js
jns
dec
add
ja
call
jl
sbbl
sub
out
lods
sbb
addr16
test
jmp
and
mov
jge
dec
cwtl
ret
xlat
leave
rcrb
or
pop
icebp
pop
inc
in
pop
inc
enterw
cld
pop
jno
pop
jg
cmp
push
loop
xchg
sarb
pop
xchg
cmp
stos
xlat
mov
repnz
push
inc
sbb
bound
mov
sbb
bound
push
pop
adc
inc
sbb
mov
push
cmpsb
mov
dec
inc
roll
or
adc
jae
mov
shrb
push
xchg
clc
add
loope
lret
pop
pop
pop
testl
fcompl
push
push
jns
out
and
test
fstps
dec
or
fnstenv
sub
push
adc
dec
pushf
lea
or
in
xor
push
pushl
jbe
mov
imul
lret
loop
mov
jl
insb
out
mov
lahf
in
push
cmp
cmp
mov
add
mov
pop
mov
mov
ret
scas
fiaddl
dec
pushf
mov
xor
out
dec
in
insb
ja
mov
cmp
add
imulb
repnz
jle
and
fcompl
rorl
mov
sbb
orb
outsl
jg
fdiv
pop
inc
cmp
cmp
fs
std
or
fdivrl
lret
push
adc
sub
aam
movaps
inc
xor
scas
push
subl
push
pop
mov
mov
lahf
fiadds
xchg
loopne
sub
nop
es
or
dec
rclb
lods
xlat
cwtl
out
mov
scas
add
pop
or
add
mov
mov
adc
xchg
push
jg
inc
and
movsl
test
movsb
xchg
sbb
clc
and
and
cmp
pop
cmpl
gs
add
xchg
ret
imul
pop
jbe
cs
sub
sahf
lods
loopne
pop
imul
cmp
pop
cltd
and
shll
in
mov
ljmp
inc
mov
data16
ret
outsb
outsb
cmp
fcompl
movsb
fiadds
stc
popf
ds
mov
clc
and
xchg
cwtl
xchg
push
sub
cmp
dec
lds
sbb
out
add
cwtl
push
ljmp
adc
in
lods
daa
data16
mov
dec
or
inc
xor
adc
sub
dec
mov
lret
cmpsl
loop
outsl
pop
or
sbb
and
in
push
aam
lods
and
and
mov
in
ret
or
rcr
cmpsl
cwtl
adc
xchg
inc
je
les
sti
sub
and
sbb
scas
fcomps
push
roll
push
icebp
jge
cmp
pop
dec
cltd
mov
push
clc
daa
and
addr16
inc
cwtl
fisubrs
out
aaa
fcmovb
push
push
pop
loope
push
clc
out
test
push
adc
imul
icebp
out
cmpsl
add
bound
pop
sub
push
lcall
stos
pop
fstpt
add
imul
fstps
call
push
mov
rorl
in
dec
gs
jbe
pop
push
jae
and
rcrl
add
sbb
lret
shll
in
mov
sbb
imul
icebp
xchg
sub
je
add
jne
jae
jg
enter
fisubs
shrb
imul
or
test
sbb
xchg
xchg
nop
les
sub
push
fdivl
lret
fstpt
into
push
mov
hlt
testb
add
sbb
mov
shl
fistps
nop
lock
fs
sbb
cltd
adc
aad
imul
pop
into
jbe
dec
sbb
roll
mov
addb
xchg
xchg
dec
out
sbb
inc
jo
ret
pop
jne
loopne
js
dec
adc
jmp
inc
fstpt
adc
pop
and
movswl
or
push
mov
inc
pop
stos
popf
divb
popf
pop
mov
aaa
pop
aaa
adc
add
inc
idivb
std
mov
lcall
stos
in
mov
xchg
push
xor
sub
sub
mov
dec
dec
clc
cmp
cltd
push
pop
push
mov
push
push
lds
adc
dec
jae
icebp
xchg
dec
add
xor
mov
dec
jge
test
mov
mov
into
fnstenv
stos
push
xchg
cmp
mov
push
fnsave
or
es
adc
jmp
adc
xchg
in
sub
lcall
rcl
lahf
daa
shlb
add
xor
test
xor
out
out
pop
push
or
icebp
pop
jno
xchg
sbb
pop
call
or
mov
inc
loopne
clc
repnz
lahf
fs
jl
test
sbb
adc
lods
and
jge
leave
mov
mov
clc
cld
cltd
dec
adc
repnz
into
lods
ficoml
add
xor
je
fildl
insl
mov
call
mov
insb
aaa
cmp
jmp
adc
fs
pop
imul
or
rcrl
lcall
add
or
pop
mov
test
arpl
movl
add
sti
hlt
sti
in
das
adc
pop
jae
pop
or
lret
mov
push
daa
daa
pop
sbb
lock
test
popf
mov
pushf
out
adc
jle
daa
adc
xor
sti
aam
add
sbb
scas
jbe
sbb
adc
fwait
cmpsl
rclb
and
mov
fsubs
sbb
movsb
cmc
xor
mov
int3
jbe
and
sub
mov
ljmp
adc
js
mov
scas
mov
test
movsb
jge
adc
add
xchg
cmp
mov
xchg
fisttps
test
mov
insb
addr16
xchg
stos
and
and
rcl
loopne
push
ret
sti
sbb
xchg
adc
icebp
adc
push
mov
push
das
push
rcll
scas
lods
inc
shl
sbbl
inc
data16
adc
in
xchg
or
jo
adc
fldenv
mov
lods
dec
fisttpl
inc
test
outsl
fcmove
ss
in
adc
cmp
push
fidivl
pop
js
insl
test
mov
lds
addb
fwait
iret
loope
adc
fstpt
mov
jle
insl
imul
out
test
pop
ja
adc
cltd
icebp
jne
dec
in
mov
mov
xorb
lret
adc
sbb
sbb
sub
sub
adc
popf
jbe
mov
push
mov
sub
sub
jmp
lods
icebp
push
lds
loopne
pop
ss
shl
adc
ja
loope
and
mov
and
jmp
jbe
push
dec
and
jns
add
mov
lret
cmc
inc
cmp
jae
inc
jle
or
aas
adc
inc
movsl
jmp
int
push
rcll
subl
xor
insb
int
leave
enter
pop
cmp
jge
imul
mov
sbb
enter
fsubr
and
repz
push
jae
fcoms
lcall
mov
pushf
jo
sbb
fwait
in
adcl
mov
mov
gs
push
incl
lahf
and
inc
out
dec
leave
jmp
sub
add
xchg
lods
jl
aad
dec
mov
xchg
in
fbld
mov
je
xchg
add
push
jae
je
pop
mov
mov
mov
ja
insl
jo
push
aam
inc
popf
cmp
addr16
lods
aad
xchg
pusha
in
dec
fs
js
imulb
jmp
add
pop
mov
ret
ja
mov
int3
push
aad
xor
inc
inc
push
fcmovb
inc
ja
cwtl
clc
cmp
mov
stc
clc
bound
ss
add
js
mov
lods
mov
mov
pop
pop
iret
std
inc
hlt
pop
xor
scas
adc
push
sbb
mov
mov
inc
jae
pushf
push
mov
cwtl
fcom
inc
je
add
sub
jg
cmc
int
movb
xor
movsb
pop
cltd
pop
ss
dec
dec
loop
or
push
or
push
xchg
jb
shlb
adc
scas
fmul
outsl
push
out
out
clc
xor
mov
cmpsl
test
dec
jbe
jo
and
cli
pop
pop
push
imul
xchg
cmp
cmpsb
xchg
insb
movsl
jne
inc
aad
pop
call
pop
cmp
jecxz
nop
fbstp
out
jmp
dec
xchg
or
cmpsb
sbb
fs
xor
sub
sahf
inc
xchg
adc
pop
out
repz
test
dec
pop
les
sbb
mov
push
or
addr16
or
and
adc
sti
out
inc
cmp
push
mov
adc
mov
out
imul
cs
xchg
dec
xor
ret
cmpb
push
and
data16
pop
cmp
push
addl
pushf
insb
sub
dec
repnz
insl
negb
into
call
imul
push
test
add
arpl
inc
imul
xchg
movsl
cmp
popf
jne
mov
and
loope
xor
lods
add
add
jnp
out
or
inc
push
jo
imul
sahf
mov
inc
xchg
jecxz
outsb
stos
inc
xchg
aaa
jmp
jns
icebp
mov
fstp
inc
or
popa
cmp
lods
int
mov
mov
jmp
stc
jl
cmp
xor
or
mov
cmpsb
movsb
mov
xlat
cwtl
fsubl
push
xchg
xor
and
pop
subl
cmp
mov
mov
sub
es
es
push
push
xchg
mov
and
fisubrs
adc
dec
in
push
mov
sbb
int3
inc
mov
loope
or
pop
aam
and
lcall
jmp
sbb
out
leave
add
ds
dec
rcl
icebp
xchg
cld
pop
jl
inc
jmp
jp
sub
mov
sub
lock
stos
adc
pop
push
lods
adc
adc
mov
test
jg
jns
lock
out
test
aam
xchg
push
dec
lods
fcmovu
fstpl
mov
aam
xchg
bound
inc
sarl
mov
outsb
mov
or
mov
jg
dec
test
lods
js
je
sbb
dec
xor
fsubs
pop
into
jmp
and
pusha
xchg
or
enter
inc
test
mov
pop
jno
data16
and
shrl
fidivl
fnstcw
lock
rcl
xchg
inc
jbe
jae
jmp
cmpb
dec
out
xchg
sub
fidivs
jle
inc
mov
dec
loop
dec
idivb
fwait
jp
and
rorl
insl
or
jae
out
into
mov
dec
xchg
lret
mov
aad
aad
mov
or
inc
sub
loopne
push
adc
mov
jb
inc
das
repz
clc
fsub
lret
shll
lcall
fs
mov
cmp
in
cmp
push
xchg
or
mov
dec
push
dec
outsl
sbb
mov
insb
btc
imul
mov
add
test
cmc
sbb
sub
inc
add
cs
jmp
mov
loope
in
sbb
inc
mov
jl
popf
push
test
xchg
jno
mov
mov
shll
xor
lret
pop
push
pop
mov
xchg
pop
xor
out
mov
jns
fucomi
popf
les
inc
mov
mov
mov
stos
pop
out
dec
push
movsl
pusha
mov
and
add
cmp
fcmovnb
cltd
xor
mov
orb
add
test
sub
inc
dec
flds
ret
sbb
or
adc
mov
in
aad
xor
shrl
int
push
jo
out
into
and
jle
adc
jns
repnz
sub
xlat
test
cmp
mov
lret
lock
pop
shlb
cmp
dec
mov
pop
push
int
mov
jmp
in
xchg
xchg
nop
cmp
addr16
mov
xchg
inc
sbb
and
inc
insb
imull
pop
push
fstpl
test
sub
adcl
mov
add
xor
das
push
mov
jae
int
and
inc
lret
mov
sub
or
push
cmpsb
inc
fildll
dec
dec
lock
jns
ja
mov
sbb
lret
je
pop
cmpb
mov
pop
fsubr
jmp
jns
cmp
add
ljmp
shlb
out
daa
cmpsb
sahf
gs
pushf
nop
sub
popa
fistps
addr16
jp
push
pop
mov
pop
mov
adc
adc
add
cmp
inc
fiadds
outsb
int
sub
cmp
pop
jmp
sub
add
stos
lock
xlat
xor
inc
les
pushf
jg
mov
bound
test
dec
sub
rol
jge
jle
adc
mov
adc
xchg
sbb
fwait
sub
cmp
sub
and
ret
adc
add
dec
cmpsb
test
stc
dec
cmp
fidivrl
jge
mov
pop
sbb
jmp
popw
mov
push
jno
xchg
outsl
xor
cmpsb
cmp
add
into
lods
data16
xchg
dec
repz
lods
js
test
jns
xchg
rcl
lret
push
mov
scas
dec
loopne
xor
cld
fisubrl
lock
push
ret
js
and
repnz
ret
pop
lods
les
pop
jb
mov
cwtl
jmp
sub
lret
mov
jecxz
jno
test
sti
push
cli
sub
jg
mov
fwait
arpl
fdivl
add
addr16
dec
pop
les
jmp
cmpsl
mov
je
cmpsb
imul
and
frstor
xchg
push
xchg
aam
xchg
push
addl
cmp
xchg
jle
jge
cmp
aas
lock
out
pop
fidivs
mov
fidivs
repz
je
call
adc
pop
rcrl
inc
call
shlb
fldcw
pusha
add
mov
insb
iret
push
xchg
xchg
jp
cmp
test
stc
shll
push
sahf
imul
mov
fsts
xchg
in
mov
jne
dec
je
xorl
jno
mov
sbb
dec
push
jns
add
mov
in
or
and
out
jbe
and
cmpsb
and
fisttpll
dec
push
cltd
or
aas
push
aas
popf
out
loop
lods
fdivr
jnp
mov
xchg
enter
xlat
lods
xchg
mov
sti
leave
or
xor
mov
pop
movsb
hlt
jb
imul
icebp
out
pop
cmpl
jo
enter
insl
dec
aam
clc
ljmp
imul
add
pop
inc
adc
lret
outsb
jle
xchg
dec
mov
or
inc
aad
adc
jp
aaa
cld
lock
clc
or
js
pop
cmp
push
dec
ret
mov
es
inc
or
daa
shl
pop
jae
fwait
jno
mov
inc
or
arpl
push
mov
adc
ret
dec
xchg
add
inc
repz
cmpb
popa
jp
mov
aad
sbb
clc
into
mov
ret
jp
inc
mov
mov
mov
mov
and
out
push
xchg
lret
jecxz
sbb
stos
mov
imul
jnp
pusha
push
jecxz
xchg
les
pop
and
out
pop
jp
into
popw
lret
lahf
fisubrs
adc
or
xor
push
xchg
mov
cmpsl
mov
or
pop
xchg
jb
les
inc
repz
mov
aam
ljmp
pop
xor
popa
mov
xor
pop
stos
pop
add
cmc
in
stos
or
cmp
jecxz
inc
push
outsl
adc
mov
fcmovb
dec
repz
ljmp
cwtl
ret
movl
xor
sbbb
push
sahf
or
mov
test
sbb
orb
push
jge
adc
xor
mov
addr16
mov
imul
push
cmp
adc
inc
push
arpl
aaa
push
mov
cmp
les
and
inc
mov
stc
adc
mov
push
mov
popf
lret
and
push
aam
inc
les
mov
sbb
aam
lret
cmp
mov
inc
out
fcomps
scas
jbe
sub
stc
out
sub
adcl
leave
jns
jb
int
and
fwait
jmp
lods
push
out
mov
mov
push
xor
les
jo
mov
cmpsb
cli
inc
scas
fdivrl
stos
mov
lock
mov
xchg
rorb
fldt
into
mov
scas
movsl
das
out
addl
cwtl
aas
or
push
push
dec
adc
scas
ss
mov
pop
adc
cmp
mov
cmc
jp
mov
sbb
test
lret
int
xchg
xchg
idivb
push
mov
push
popf
mov
into
xchg
in
pop
dec
jnp
dec
pop
inc
mov
cli
mov
fists
aam
adc
or
push
ret
fisttps
subl
xchg
lret
inc
inc
popa
sbb
adc
loope
jno
loopne
inc
sub
aas
popf
fbstp
jns
ret
and
cmp
cmc
jge
lret
mov
adc
cmp
sub
pop
test
mov
push
mov
pop
mov
sub
mov
mov
je
add
shlb
stos
lcall
push
imul
dec
int
xchg
add
int
jmp
pop
mov
sub
lock
jnp
pop
fs
xlat
out
add
loop
loope
xlat
jl
mov
mov
lock
dec
lds
rcl
mov
sbb
lret
mov
cwtl
mov
adc
pop
and
lea
test
enter
pushf
dec
or
fisubrl
call
aas
inc
das
xbegin
add
enter
sbb
int3
leave
fadd
pop
lods
es
lret
hlt
lahf
adc
push
dec
mov
int
pop
jae
popf
push
ret
pop
cwtl
and
lods
mov
adc
in
mov
insb
pop
cwtl
and
stos
pop
or
scas
inc
and
xor
into
rorb
mov
add
jbe
sbb
push
hlt
adc
fdivrs
popa
xchg
sub
test
add
push
das
xor
lret
sub
add
mov
movb
sub
xchg
rcrb
cmp
data16
xchg
roll
sub
bound
in
dec
cli
or
push
xor
xor
pop
pop
xchg
dec
cmpsl
dec
mov
or
mov
add
bound
pushf
popf
clc
sti
hlt
into
pop
loope
pusha
sbb
sti
sbb
cltd
rclb
jmp
sbb
ret
je
int3
mov
mov
mov
inc
xchg
cmp
jecxz
cmp
jp
xor
fsub
cmp
or
push
or
inc
mov
mov
inc
outsl
push
sahf
call
insb
ss
sub
sbb
cmp
or
in
std
sub
out
nop
inc
cld
cltd
mov
inc
filds
add
lret
shlb
add
cwtl
cmc
lcall
mov
inc
shrl
cmp
push
push
inc
mov
aaa
pop
std
data16
aaa
rorl
stc
inc
cmpsl
pop
mov
stos
fucomip
push
addr16
push
call
fimull
hlt
inc
imul
adc
adc
pushf
add
add
sbb
mov
ljmp
pop
jmp
dec
inc
inc
lahf
pop
mov
or
in
icebp
pusha
and
inc
xor
rcrl
in
outsb
repz
and
sub
fisttps
bound
or
add
xor
les
sahf
stos
jno
xchg
mov
mov
lcall
fstl
cmp
jae
movsl
adc
lods
iret
mov
xlat
gs
jmp
movsb
mov
das
test
dec
sbb
std
push
push
xor
dec
jo
adc
mov
leave
xlat
and
add
cmp
movl
dec
inc
loop
test
push
call
lcall
stc
sbb
xchg
xchg
mov
jbe
xchg
bnd
movsl
lock
sahf
or
push
bound
js
inc
push
xchg
and
push
mov
hlt
daa
inc
sub
add
lahf
xchg
sub
mov
xlat
sar
dec
xlat
xchg
mulb
xor
and
cld
add
daa
push
roll
and
lret
xorb
xor
inc
or
mov
fs
es
add
lcall
push
mov
inc
jle
pop
jbe
gs
mov
pop
test
dec
enter
add
sbb
inc
fcmovu
cmp
jb
pop
cltd
filds
xor
aad
cmp
inc
or
mov
test
xlat
xchg
inc
xchg
adc
aad
push
dec
std
scas
mov
cmpsl
loope
clc
test
mov
push
ja
xor
arpl
enter
cmp
push
mov
lock
fisttpl
dec
mov
ja
mov
cli
lea
ds
in
mov
addr16
daa
cmp
inc
xchg
cmp
add
cmpsb
adc
dec
leave
add
in
int3
pop
pushf
lock
mov
push
sub
data16
adcl
loopne
mov
jge
pushf
mov
cmpsl
xchg
mov
sbb
pop
mov
xchg
insl
incb
repz
mov
lock
push
stos
stos
cmp
sbb
xchg
sbbb
pop
addr16
mov
and
lods
outsl
inc
out
clc
jb
cmp
pop
das
repnz
lods
and
loop
in
rorl
dec
pop
jno
test
cmp
adc
lcall
and
rcrl
stos
cmpsb
scas
adc
add
mov
and
dec
je
loope
mov
jp
push
dec
cmp
push
cmp
sub
hlt
dec
out
lods
leave
xchg
call
rorl
mov
out
mov
sbb
cmpsl
or
in
decl
fcmovu
adc
lock
or
fs
and
mov
inc
xchg
mov
shl
push
pop
dec
cmpsb
dec
orl
cmp
cld
in
out
mov
xor
jle
cmp
insl
sbbb
add
xor
insb
dec
and
mov
fidivrs
mov
test
aad
cmp
cmp
ss
loopne
popa
push
ss
push
mov
sahf
push
jno
pushf
arpl
fidivs
jle
sar
test
push
std
sub
and
addb
pusha
loopne
sub
mov
imul
sub
loope
mov
jmp
dec
cld
stos
test
in
jbe
fdivr
das
xor
imul
adc
push
or
out
mov
gs
scas
in
das
movsl
aam
and
out
add
sub
aad
insl
and
pushf
xchg
aaa
gs
add
lds
mov
dec
push
jp
mov
popl
fdivl
jle
popa
aam
push
and
cmpsb
jbe
jge
iret
or
lea
vphsubwd
adc
in
jnp
jp
sub
xor
sahf
pushf
mov
dec
loopne
stos
adc
lea
js
aaa
cli
jecxz
stc
mov
mov
out
jl
cmp
cli
or
pop
cmp
push
ret
inc
test
outsl
mov
mov
test
rclb
pop
inc
nop
and
imul
stc
loop
enter
sub
pop
aam
inc
in
std
inc
fs
js
stos
test
imul
cmpsl
lods
cmp
idivb
and
adc
ret
test
jb
sbb
out
cmp
or
aam
lret
dec
jb
sti
xchg
jl
mov
dec
data16
or
fmul
stos
xlat
dec
jmp
ficompl
hlt
test
imul
popa
fwait
jp
lds
cmp
xor
sbb
mov
popf
out
inc
mov
ja
cmp
in
lods
xor
ffreep
cld
or
mov
lods
xor
mov
adc
shlb
scas
xlat
fsub
movsb
loopne
int
dec
sbb
ret
sbb
pop
mov
out
xor
mov
and
and
and
iret
cld
das
not
push
inc
jp
insb
cmp
into
xor
lgs
mov
movsl
inc
sub
push
lcall
pop
mov
stc
imul
ret
inc
jl
int3
jno
mov
mov
fistpl
adc
xor
xchg
mov
cltd
sub
xchg
out
scas
xlat
js
or
pop
sub
xor
push
ljmpw
mov
mov
aas
add
lahf
lret
xchg
stos
imul
js
clc
cs
push
sbb
pop
out
push
cwtl
push
jnp
push
add
cmpsb
shll
xchg
xchg
pop
dec
add
out
dec
add
orb
repnz
jecxz
jae
jmp
dec
aad
push
jo
adc
cwtl
or
cmp
sahf
adc
mov
jg
sub
ficoms
out
mov
loope
jns
bound
arpl
and
fmull
out
push
push
adc
fcompl
das
das
lds
mov
cli
test
out
jp
inc
mov
push
test
repz
stos
inc
push
js
pushw
sub
es
ret
and
loope
imul
push
lcall
cmp
pop
test
fistpll
pop
stos
mov
adc
mov
inc
xchg
pop
xchg
and
stos
sarb
imul
addb
xchg
mov
pop
pusha
in
bound
mov
add
je
jp
sar
in
aaa
mov
jno
daa
lods
pusha
adc
push
mov
repz
jb
pop
adc
mov
xchg
xor
adc
xchg
or
jns
push
jle
add
sbb
int3
and
cltd
jl
ret
dec
test
mov
test
loope
mov
dec
insl
popa
flds
mov
add
dec
pushf
push
filds
mov
aas
aad
out
dec
mov
movsb
dec
addb
lret
xchg
and
int
xor
loopne
pusha
dec
subb
mov
test
insb
cld
daa
mov
mov
or
cmp
xchg
cwtl
hlt
xchg
lock
dec
outsb
out
mov
lds
fistps
fdivs
popf
pop
loope
xchg
pop
scas
cmp
cmp
add
fwait
adc
mov
bound
aas
setae
insl
fnstenv
icebp
mov
pop
in
repnz
enter
jmp
stos
mov
xchg
rolb
push
mov
sbb
daa
ret
mov
test
inc
fcompl
adc
and
sbb
sub
xchg
xor
imul
int3
lea
aam
adc
push
loop
sahf
jle
outsb
adc
add
pop
outsb
lret
clc
mov
and
fistpl
std
lea
sbb
lret
in
push
xchg
nop
ljmp
jo
icebp
add
ljmp
mov
mov
jns
xlat
or
jns
and
arpl
aas
fs
repz
popa
or
push
scas
dec
inc
into
int
jmp
xor
xor
sub
xchg
mov
jp
ljmp
inc
and
mov
lret
sub
sub
rcll
jae
lock
subl
adc
cmp
mov
pop
push
or
addr16
pop
jb
js
jp
das
push
clc
lret
cwtl
test
jge
mov
shll
je
dec
pop
mov
xchg
xor
mov
or
aas
add
mov
arpl
or
sbb
mov
test
test
es
ret
bound
pop
lds
call
mov
aaa
ljmp
cmpsb
xchg
pop
test
jae
sbb
lock
daa
mov
hlt
popf
sbb
mov
jae
sub
or
je
xlat
imul
lock
rolb
cmc
mov
fistps
cwtl
mov
js
fmull
pop
lret
xchg
rcr
mov
pop
daa
push
pop
adc
inc
sub
push
xchg
popa
insb
in
xchg
test
pop
inc
in
lret
xchg
scas
xlat
pusha
das
loop
pop
xchg
xlat
sahf
jg
mov
inc
xchg
ljmp
pushf
jnp
adc
dec
fisubs
inc
subl
dec
jbe
jp
cmp
mov
das
push
cmp
cmc
into
mov
stc
pop
jns
lret
aaa
jbe
adc
pop
rolb
pushf
sbbb
dec
jns
pushl
mov
addr16
sub
adc
dec
xchg
and
adc
or
mov
mov
mov
pop
fidivl
add
movsl
scas
adc
rclb
add
or
mov
in
leave
add
iret
add
add
inc
sbb
mov
repz
or
cmp
adc
jl
mov
or
bound
mov
leave
jns
mov
lods
neg
adc
ret
mov
lcall
adcb
or
adc
aas
lea
es
filds
mov
mov
clc
cmp
shrb
sub
or
es
outsb
push
cltd
popa
cmpsb
iret
movsb
lahf
lret
cs
or
insb
out
test
mov
sub
pop
shll
jecxz
or
dec
push
shlb
adc
xchg
mov
mov
push
in
in
insl
mov
mov
dec
in
jbe
mov
add
xor
cmpsl
aas
fld
test
daa
mov
xor
hlt
ficompl
mov
sub
cltd
icebp
pop
sbb
bound
mov
jne
out
push
inc
pop
out
mov
push
push
inc
incl
add
lret
xor
sti
xor
jns
fisttpl
insb
jp
and
sub
fisubl
push
jg
repz
loopne
or
mov
mov
shrl
jno
xchg
cmovne
sti
sub
add
test
sbb
or
push
icebp
aaa
mov
ret
or
jge
fdivl
inc
lock
loope
inc
jbe
dec
data16
mov
js
sub
mov
jle
and
mov
mov
inc
addr16
mov
outsb
rol
cmp
jne
mov
in
push
and
jle
xor
pop
pop
std
mov
or
ret
scas
push
mov
daa
mov
cmpsb
pop
or
push
push
iret
inc
ja
out
aam
push
mov
inc
add
frstor
sub
add
push
push
adc
mov
inc
jb
xchg
movsb
xchg
orl
cmp
pop
mov
sarb
loopne
mov
or
add
jmp
mov
pushf
mov
jbe
xor
pop
add
xorl
loopne
dec
xchg
scas
shlb
mov
popa
sbb
fs
mov
sahf
xor
cmp
jns
add
sahf
mov
xchg
and
xchg
imul
fmull
mov
xchg
jge
lret
jge
cmp
dec
sub
or
aas
or
xchg
insl
mov
ror
sub
ja
popl
cmpsl
mov
jne
cmp
sbb
sahf
add
cmp
lods
xchg
cmp
call
sbb
in
sub
sbb
and
inc
fst
out
stos
pop
test
shrl
mov
mov
or
push
xchg
push
loope
int
dec
sub
add
mov
sub
and
dec
cmp
out
mov
out
sub
and
repnz
ficoml
dec
mov
jg
pop
cmp
mov
fisttps
pop
stos
push
lea
sbb
mov
mov
loop
pop
shl
mov
cmpsl
sahf
cltd
aam
mov
or
mov
hlt
xchg
inc
xor
sahf
leave
mov
lock
lock
into
adc
xor
popa
dec
xchg
lds
fsub
shl
out
adc
lret
dec
and
mov
push
aam
add
cmpsb
aad
test
dec
push
in
cli
add
insl
ljmp
pusha
push
push
popf
fwait
outsl
fbld
xor
push
aam
mov
xchg
push
out
fsubrs
shr
rcl
out
iret
xchg
or
cmp
adc
shlb
pop
dec
cs
in
mov
jmp
xor
icebp
test
cmpsl
stc
jecxz
imul
testb
fcompl
inc
or
or
or
pop
sub
mov
mov
test
jl
xor
pop
pusha
cmp
int
lcall
ljmp
lods
aas
pop
dec
dec
lock
aaa
cs
outsb
adc
pusha
push
scas
mov
lret
shll
fdivrs
pop
out
pop
or
or
cmp
mov
and
add
sub
jns
xchg
push
into
push
pop
xor
push
std
cltd
sarb
mov
or
adc
in
cmpsb
xor
ja
pusha
dec
loop
ljmp
inc
popa
xchg
imul
cmp
cltd
ja
xchg
popa
ljmp
jg
mov
shrl
mulb
pop
add
jl
jg
sbb
fwait
and
cmpb
mul
shll
cwtl
jo
dec
les
out
push
or
ret
adc
dec
push
in
inc
dec
adc
nop
mov
std
negb
pop
add
test
rorb
xor
rclb
sbb
lret
sbb
pusha
ss
ret
test
sbb
push
cmp
in
or
dec
adc
add
stc
push
mov
xchg
fidivrs
pop
mov
fdivp
mov
xor
mov
jb
fnstcw
stos
inc
dec
sub
sar
add
addr16
mov
sub
push
orb
cli
sbb
bound
jl
sbb
inc
es
es
inc
sbb
test
mov
sbb
rorl
xchg
pop
add
inc
lret
stc
add
bound
sahf
cli
xor
jno
in
mov
push
mov
mov
enter
clc
push
push
jns
push
aas
xchg
out
push
push
dec
dec
sbb
out
iret
add
mov
call
das
inc
shrl
movsb
subl
sub
ret
sub
jne
popa
out
lcall
mov
and
mov
jae
cmp
pop
stos
adc
pop
jle
mov
mul
fistl
pusha
movsb
mov
and
or
cwtl
sbb
nop
jmp
aam
push
push
mov
push
xor
cmp
outsb
jnp
sbb
pop
mov
and
adc
pop
lcall
or
ret
xor
scas
movsb
cmp
xchg
pop
add
sahf
scas
jecxz
test
xor
sub
cmp
inc
dec
and
jl
pop
daa
jbe
insb
xchg
pop
adc
arpl
mov
mull
push
scas
pop
cmp
jae
push
shll
fbld
hlt
mov
test
push
inc
and
sbb
out
out
enter
add
sbb
jecxz
pop
lods
ja
and
repz
or
ret
pop
mov
decb
and
icebp
pop
rorb
mov
sub
inc
jmp
inc
xchg
pushf
mov
lock
push
mov
adc
mov
sub
sub
and
jmp
clc
sub
rcll
mov
adc
insb
xor
jle
push
aas
sub
adc
pop
push
test
add
lods
rcrl
xchg
fiadds
push
and
adc
cwtl
std
out
and
sub
mov
inc
pusha
jb
ficompl
fdivl
lret
xchg
cmp
mov
mov
mov
iret
xchg
xchg
or
cmp
fcmovbe
sub
div
inc
mov
fisttpl
decb
or
in
popa
fs
push
ret
sub
mov
fnstsw
sti
or
sahf
cld
les
lahf
arpl
or
loop
js,pn
pop
jecxz
int3
xor
aaa
ds
sub
xchg
rcll
faddl
pushf
stos
out
sbb
in
mov
rclb
jmp
sub
lcall
add
inc
call
inc
out
dec
dec
dec
or
dec
popa
jne
sbb
jne
cmp
loop
or
push
call
or
sbb
mov
fsubl
mov
adc
jno
ljmp
mov
dec
pop
mov
fs
js
push
push
js
sbb
adc
cld
mov
mov
inc
loope
jb
or
cli
imul
cmp
sub
jnp
nop
jnp
popf
add
imul
cmp
das
xor
test
mov
mov
fwait
push
addr16
insl
mov
imul
pop
dec
or
sbbl
les
leave
inc
mov
faddl
push
mov
adc
add
sarl
iret
in
test
xchg
inc
push
or
test
push
dec
lcall
pushf
push
mov
shll
mov
movsb
int3
ja
je
xchg
lret
into
and
sub
adc
stc
sub
add
cwtl
sbb
jne
icebp
fisubrs
into
cwtl
mov
gs
inc
pop
jo
mov
scas
mov
lods
mov
cmp
add
adc
xchg
inc
push
mov
jo
cltd
or
js
popf
sahf
mov
mov
cltd
dec
insl
js
mov
fs
je
mov
push
mov
xchg
dec
out
xchg
jecxz
lret
xchg
insl
nop
nop
enter
mov
cmc
sub
mov
cmc
insb
cmpsb
push
xchg
and
push
arpl
arpl
sub
mov
mov
outsb
and
in
mov
push
nop
rolb
xchg
or
pop
jg
sbb
out
inc
cmp
in
orl
les
pop
add
jl
loope
pushf
sarb
add
popa
cmovg
rorl
inc
sbb
cmp
test
insl
repz
scas
aaa
out
sahf
arpl
addr16
int
stos
mov
fildl
sub
mov
xchg
jl
adc
jg
ficomps
inc
mov
cmp
dec
add
popf
ja
inc
dec
jl
cld
ljmp
inc
shll
aaa
lahf
sub
cmpsb
adcb
stc
and
out
movsb
pop
outsb
lret
sub
inc
enter
scas
push
xor
je
push
sbbl
int3
je
jecxz
jb
push
and
push
mov
dec
push
mov
neg
stos
push
aam
js
test
loop
xor
add
cld
cli
fildll
subb
mov
push
lcall
aas
pusha
ds
andb
dec
add
pop
xor
pop
repz
dec
subl
cmp
arpl
add
adc
adc
cmp
push
sbb
inc
mov
jns
out
jae
shll
shlb
push
xor
sub
push
mov
add
mov
jo
dec
or
xlat
pop
outsl
sub
dec
xchg
xchg
xchg
xor
jnp
push
mov
sub
xchg
push
mov
sub
jle
xor
aam
dec
je
pop
xor
lock
add
jmp
ss
or
in
rolb
ret
lcall
mov
mov
mov
dec
mov
je
lods
js
mov
mov
push
insl
xchg
add
add
pop
or
cmp
out
out
movsl
bound
and
scas
call
rclb
cltd
insb
in
xchg
cltd
xchg
scas
push
add
add
cs
add
cmp
add
arpl
push
dec
and
mov
add
rcl
iret
enter
mov
movsb
cwtl
cmp
lret
setl
cmpsl
jnp
push
jb
repnz
test
inc
shll
push
xorl
outsb
arpl
jne
repnz
add
jle
jecxz
add
lret
pop
jns
mov
lds
pop
in
movsb
mov
push
lds
aas
cmp
jmp
popa
ror
mulb
xchg
aas
dec
lcall
xor
and
or
jne
cmp
and
ret
test
push
shrl
orl
scas
add
loopne
std
lods
push
ss
ret
mov
insl
pushf
pop
outsl
cwtl
cmp
inc
or
mov
xchg
sub
cmp
push
fiaddl
fistl
or
out
cltd
xor
sub
inc
cmp
pop
dec
pop
or
popa
xchg
iret
out
xor
sub
mov
jmp
push
dec
rolb
mov
in
adc
sub
aaa
adc
jmp
jmp
cmp
outsl
xchg
jmp
and
mov
in
lret
and
xor
dec
inc
insl
and
adc
lahf
out
cli
inc
test
call
out
cld
adc
xchg
insb
dec
sub
xchg
in
jmp
pop
cld
adc
mov
mov
mov
jae
shll
hlt
xor
add
push
cmp
sbb
jns
icebp
roll
loop
lret
inc
cmp
shlb
scas
cld
js
lds
pop
shll
scas
in
outsb
or
jno
xchg
loopne
hlt
mov
out
sbb
mov
sbbb
adcb
popf
xor
daa
cld
cmp
push
and
jb
jp
jns
insl
dec
push
jecxz
in
sub
mov
mov
jnp
pop
push
jnp
stos
je
movsb
jo
adc
xchg
sbb
xchg
shr
inc
pop
pop
hlt
inc
pop
add
pop
push
add
or
fnstcw
sub
and
aam
mov
mov
jae
sub
mov
jp
sub
pop
xor
jns
jecxz
jne
test
loop
xchg
outsb
mov
outsl
jne
repnz
mov
ret
cmp
lds
cmpsl
notl
das
push
loop
push
aas
test
mov
mov
mov
xlat
in
jne
les
jecxz
arpl
hlt
lret
mov
cli
dec
or
sarl
imul
out
aas
jne
jge
xor
xchg
scas
int3
std
add
sbb
push
sbb
xorb
idivl
es
inc
xor
add
mov
out
or
cmp
fst
mov
mov
repz
mov
add
ljmp
in
push
fisttpl
adc
and
test
or
aaa
xchg
mov
rcrb
jno
and
push
sub
popa
sarb
in
in
insl
pusha
js
ds
xor
add
sbb
les
orb
les
cmp
pusha
xchg
insl
inc
sbb
mov
sub
shll
movsb
xor
mov
mov
jne
rorb
pop
mov
mul
jg
addr16
mov
push
shll
daa
mov
sub
in
imul
sub
sbb
cmc
push
push
test
xor
cs
jb
ret
and
mov
imul
out
scas
gs
subl
aaa
das
xor
outsb
cltd
mov
into
jbe
sub
or
adc
mov
push
jge
shl
stc
and
roll
mov
sbb
mov
pop
pop
xlat
mov
push
fistps
inc
outsb
inc
test
xor
addr16
mov
jb
push
imul
and
imul
lahf
mov
addb
add
mov
and
dec
lcall
scas
loopne
dec
bound
adc
push
jle
test
cmp
cmc
arpl
push
js
push
enter
pop
dec
xor
out
sub
mov
aas
jecxz
hlt
xchg
pusha
xchg
inc
orl
sub
fmul
aas
push
inc
adc
sbb
sbb
outsl
ds
fs
dec
mov
out
jp
mov
push
and
popa
jmp
into
xorb
sbbl
mov
fsubrl
loopne
and
clc
repz
push
adc
adc
push
stos
mov
xor
sub
xor
scas
mov
clc
arpl
sahf
stos
or
add
cltd
in
stos
mov
sahf
lret
mov
or
movsb
shr
sahf
sahf
jnp
fcmovnu
mov
enter
mov
cmpsb
imul
mov
mov
rcrl
or
xchg
sbb
insl
xor
inc
jno
xchg
pop
inc
mov
mov
cli
or
mov
imul
ljmp
aam
out
inc
in
and
xor
pop
mov
shrl
jb
gs
test
aam
fsts
fldenv
jo
out
lds
mov
cld
fbstp
sub
cmp
loop
mull
xlat
es
scas
lock
xchg
aad
jno
lahf
xchg
mov
outsb
stos
test
cmp
sub
inc
addr16
pop
jns
sbb
inc
mov
pop
adc
mov
or
jmp
out
xor
xchg
rcl
sbb
cmp
inc
mov
call
outsl
test
push
jmp
xchg
or
mov
in
add
pop
or
das
fsub
gs
and
xchg
push
aas
lods
ljmp
xchg
cld
cmpsb
loope
mul
sbb
scas
gs
push
lcall
xor
sti
inc
fldl2t
arpl
jge
fwait
dec
neg
pop
jl
cwtl
push
jne
lahf
cmp
test
jecxz
pushfw
leave
jbe
pusha
xchg
cmpb
jne
lock
into
int3
push
insl
pop
stos
cs
inc
sbb
cli
nop
sbb
movsl
pop
das
fcomi
test
lods
movsb
ffree
jge
in
mov
adc
aam
sarl
lock
stc
imul
jg
dec
mov
outsl
mov
cmpsb
dec
fistpl
sub
mov
sbb
lcall
lods
cmpsb
pop
hlt
and
cmp
adc
icebp
leave
lahf
lret
stc
popf
scas
cld
pop
pop
xchg
push
ret
pop
addr16
loope
inc
ljmp
push
int3
gs
mov
ss
fisubrl
fstsw
jo
dec
mov
inc
sbb
push
xor
inc
outsb
push
lahf
adc
loopne
cmc
jmp
arpl
xchg
outsb
out
and
mov
lds
mov
into
in
ds
mov
daa
not
xchg
mov
pop
fildll
inc
adcb
cmp
mov
movsl
inc
negb
push
sub
cs
push
push
inc
pop
fsubl
rcrb
mov
pushf
mov
sahf
pop
xor
pop
je
mov
push
cmpl
lahf
xor
mov
fildl
cmp
jbe
imul
dec
mov
adc
aaa
xchg
addr16
mov
notb
andl
fwait
andl
cld
jl
sbb
imul
icebp
jne
pushf
xchg
xchg
cltd
xor
in
mov
xor
push
pop
jno
lret
dec
fnsave
std
aad
test
pop
icebp
stos
jno
insl
das
vmovd
jns
inc
inc
ds
add
mov
scas
mov
mov
mov
mov
mov
outsb
sbb
fsts
adc
ss
add
xchg
jmp
mov
jne
mov
or
jae
mov
jecxz
sahf
xlat
xchg
push
jne
push
fmuls
xor
add
jmp
dec
subb
mov
notl
jg
cmp
cmp
pop
sub
adc
cmp
mov
mov
outsl
ror
xor
scas
mov
push
jmp
out
pop
in
int
cmpsl
popl
imul
pop
clc
pop
stos
or
sbb
nop
shlb
fcom
xchg
adc
jl
addl
pop
mov
dec
adc
popf
hlt
adc
arpl
adcb
popf
mov
and
mov
sbb
sub
mov
iret
aas
inc
jp
sub
lret
js
leave
insb
jno
js
notb
add
sub
xlat
std
pushf
cmpsl
fcmovb
lods
loop
popf
imul
enter
call
xchg
insb
or
bound
adc
dec
lods
mov
adc
push
mov
inc
sub
loop
add
lods
daa
jns
add
mov
out
inc
cmc
mov
les
lods
std
or
cltd
add
cmp
js
xchg
mov
pop
dec
mov
or
and
fldenv
mov
xchg
dec
ljmp
push
adc
inc
sbb
in
paddsw
cmp
test
dec
cs
mov
imul
dec
daa
jo
push
or
scas
es
push
jge
pop
xlat
subb
mov
aam
test
in
lret
sbb
int
inc
and
in
add
outsl
push
add
sbb
jno
xor
jns
fnstcw
idivb
push
mov
incl
test
mov
fisubrs
cmpsl
sub
movsb
pop
add
jle
add
pushf
pusha
popf
psubsb
add
or
mov
cltd
adc
adc
loope
sbb
or
push
xchg
adc
rolb
dec
mov
subb
sbb
mov
pop
or
inc
div
pop
rcrl
inc
xchg
add
repnz
xchg
aaa
jo
mov
iret
js
inc
pop
xchg
popa
cmp
cs
sbb
mov
imul
push
arpl
push
pop
popa
push
insl
das
xor
push
adc
les
in
test
push
mov
pop
loop
xor
and
cs
std
sbb
movsl
bound
cmp
adcb
or
add
jmp
fists
and
jbe
xor
repz
imul
pop
pop
rcll
int3
aad
inc
out
jmp
insb
nop
insb
lods
inc
jge
inc
stc
mov
test
roll
into
fiaddl
xor
icebp
aam
lcall
and
mov
mov
loop
jle
adc
loopne
je
mov
or
sbb
scas
fucompp
insb
arpl
add
outsb
xchg
mov
in
enter
xor
cmp
pop
cmpsb
jns
xlat
cld
and
mov
int3
arpl
enter
pop
jno
dec
dec
or
pop
jg
push
aam
xor
rolb
shrl
aad
adc
pop
fnsave
enter
adc
jge
mov
insb
jno
jno
mov
mov
cmpsl
mov
call
pop
mov
nop
scas
adc
fiadds
jl
mov
xchg
nop
mov
pushf
pop
xor
jp
ds
jp
jno
ret
out
cwtl
push
sub
add
and
enter
mull
mov
lea
sbb
xchg
mov
mov
andl
or
add
lods
push
in
ja
adc
jo
sbb
add
mov
cs
hlt
jmp
and
sbb
xchg
push
push
add
push
xor
sub
rol
fisttpl
mov
add
ljmp
iret
out
sbb
in
clc
or
xor
xor
addr16
mov
add
insb
popa
push
fptan
sub
outsl
mov
push
movsb
dec
nop
push
mov
sahf
adc
add
cmpsb
int
aas
xchg
mov
jle
dec
push
adc
pop
xchg
fdecstp
dec
pop
mov
cmp
fcompl
mov
mov
jne
outsl
popf
pop
shlb
fisttpll
lret
cmp
imul
and
lahf
inc
pop
sbb
ljmp
push
pop
cli
dec
scas
push
ds
sti
push
mov
out
lock
dec
and
mov
shrb
loop
add
add
push
in
ss
mov
push
xchg
lret
test
lods
fistpll
pop
out
lret
sahf
inc
inc
or
sbb
fwait
xchg
cli
cs
push
sub
pusha
or
pop
jnp
push
fsubrs
or
mov
push
stos
sub
ficoms
scas
and
mov
cmp
nop
mov
sub
out
out
ret
and
xchg
xchg
xor
dec
int
iret
add
sbbl
test
gs
pop
pushf
pop
lods
in
outsl
outsl
movsb
fnstsw
add
jo
lds
movsl
aaa
cmpsb
fsubrs
and
std
test
and
lock
stos
add
add
pop
dec
fildll
outsb
xor
flds
and
inc
pop
jb
loope
push
bswap
fxch
das
cmp
test
add
add
push
cmpsl
into
ss
iret
test
popa
cmp
sbb
add
stc
add
filds
pop
jmp
sbb
into
jo
inc
pop
fwait
div
sbb
add
push
imul
scas
int
in
jg
rcll
mov
ret
scas
mov
sbb
stos
and
sub
mov
and
fcoml
sub
fwait
fs
inc
ja
movsl
ja
xchg
test
xor
adc
sub
mov
ret
sbb
iret
push
xor
movb
or
or
call
outsl
shrl
pop
jne
outsb
and
lcall
push
push
in
mov
fisubl
mov
lock
mov
test
dec
insl
mov
and
stos
mov
scas
std
imul
sti
jge
xor
lock
daa
repnz
and
mulb
dec
add
and
mov
mov
movsl
dec
mov
mov
dec
pop
pusha
jge
jle
or
dec
pop
popa
xor
mov
test
mov
loope
inc
les
add
cmp
mov
or
repnz
fnstenv
dec
scas
cmp
xorb
mov
jo
xchg
rol
sti
xor
lock
dec
mov
ficompl
inc
into
push
in
lret
add
in
add
iret
and
dec
and
rclb
rorb
fsubl
push
outsl
in
rorl
testl
icebp
in
movsb
xor
ja
lock
mov
cmp
xchg
gs
leave
push
sub
mov
sub
sub
push
push
leave
sbb
or
js
shlb
jbe
rorl
call
dec
push
and
addb
push
mov
inc
lret
adc
push
les
xchg
scas
xorl
add
jnp
cmc
pop
mov
fiaddl
fs
sub
cmp
idivl
fbstp
xchg
andb
cltd
jl
inc
mov
sbb
mov
dec
out
ss
or
inc
fnstcw
test
fdivp
mov
cmpl
fwait
xchg
lret
dec
push
jg
xchg
mov
mov
mov
scas
and
mov
push
mov
jns
call
popf
mov
sarl
mov
sub
sbb
jge
push
insl
cltd
cmpsb
test
xchg
out
mov
pop
in
scas
mov
rcll
sub
in
sub
jno
mov
daa
paddq
sub
and
int
rcr
push
push
pop
repz
mov
xchg
pop
in
adc
mov
bound
jne
lods
imul
jno
xor
imul
fimuls
mov
fucomp
mov
stos
push
shr
imul
fs
sti
incl
adc
pop
or
sar
cmp
insb
sub
xchg
jle
pushf
out
daa
dec
lds
fcoml
xor
rcll
mov
inc
loope
sbb
and
jl
push
addr16
arpl
outsb
mov
push
movb
dec
or
cmp
or
cmpsb
dec
cltd
jge
push
daa
fxch
cmp
mov
test
pop
ds
mov
inc
xchg
xchg
adc
sbb
je
sbb
and
and
test
inc
test
mov
arpl
lods
movsl
test
and
and
sbb
jne
in
out
rorb
rcll
cltd
or
cmp
inc
lret
xor
jne
fwait
out
xor
add
mov
sbb
xchg
iret
inc
sbb
adcl
clc
test
push
dec
jno
push
mov
mov
imul
inc
push
lea
lahf
xor
adc
cltd
mov
xlat
inc
cmp
ljmp
xor
shll
addr16
in
mov
push
adc
sbb
mov
push
insl
fiaddl
add
mov
pop
ja
lahf
jecxz
push
inc
adc
cmp
xchg
dec
add
jl
outsb
add
mov
data16
cmp
xchg
xadd
aaa
js
xchg
dec
sub
sbb
or
add
adc
pop
iret
insl
bound
jp
mov
mov
mov
dec
repnz
les
and
sbb
mov
push
add
pop
mov
sbb
xor
out
das
sub
addr16
dec
dec
or
dec
push
adc
roll
rcll
push
shrb
mov
lods
jl
lcall
push
pusha
scas
sbb
dec
call
lods
dec
adc
ret
dec
cmp
inc
pop
jnp
nop
sub
dec
jnp
es
rcrl
fsubrs
lret
push
int
mov
les
icebp
cmc
pop
push
mov
cmp
xchg
or
loopne
lds
sub
repnz
xchg
and
jmp
sbb
push
outsb
mov
ljmp
cmpsl
jo
in
cmp
lret
ret
inc
xor
outsb
xchg
and
mov
sub
sbb
cmp
pusha
lret
daa
fs
push
or
lods
jmp
testl
scas
xchg
jg
sbb
mov
scas
jo
mov
sub
pop
sbbb
jno
pop
or
and
xchg
push
loop
inc
mov
push
ljmp
mov
push
and
sub
mov
pop
and
jno
xchg
cmc
push
sub
arpl
pop
iret
jle
in
repnz
cmp
enter
shll
negb
fistpl
jmp
xchg
mov
mov
mov
mov
mov
test
sarl
mov
mov
fsubrs
mov
push
popa
sbb
out
push
jmp
adc
mov
xchg
js
sbb
jae
repz
fiadds
adc
data16
lods
iret
fisttps
pusha
xor
leave
outsl
scas
cmp
outsl
call
mov
add
push
pushf
jge
cmp
idiv
cmp
sub
cvttps2pi
mov
mov
jno,pn
arpl
or
pop
xlat
dec
mov
or
loop
negl
outsl
cwtl
cmp
and
mull
insl
push
mov
pop
jns
outsb
insb
dec
mov
popf
pop
movsb
icebp
out
lds
xchg
fwait
adc
cmc
push
fs
imul
ja
push
out
jp
in
dec
pop
jmp
iret
xlat
cmp
adc
jo
iret
push
arpl
push
ljmp
sub
fidivl
repnz
or
lahf
lods
mov
dec
inc
out
arpl
jp
push
jl
rorl
xchg
inc
push
addr16
dec
ja
inc
or
fwait
mov
pop
addr16
hlt
jbe
jne
and
ret
daa
push
out
into
dec
cmpl
cli
sbb
clc
std
mov
push
mov
and
dec
inc
rorl
jnp
pusha
xchg
cltd
mov
test
cmp
repz
mov
and
and
cmp
xlat
fstl
bound
push
dec
data16
imul
movsl
into
pop
cltd
int
loopne
and
loope
inc
push
mov
sbb
pushf
int
aas
push
loop
je
push
and
stos
sub
ss
cmp
adc
pop
movsl
sbb
dec
out
mov
sub
mov
imul
or
mov
pop
xorb
int
or
test
cmp
je
sti
test
and
dec
loope
lret
pop
pop
push
jnp
xor
imul
jecxz
pop
xchg
lods
mov
ja
xchg
jae
xchg
lret
int
and
xchg
inc
hlt
inc
pop
jl
imul
push
pinsrw
data16
mov
sub
xchg
lea
pop
loop
cld
xor
call
jb
call
mov
mov
jge
mov
aaa
es
stos
out
lret
dec
push
lret
out
mov
add
daa
cmp
push
jge
add
add
adc
and
in
js
ret
push
mov
cmp
dec
in
lods
push
xchg
imul
mov
mov
cmp
enter
stos
push
not
sahf
dec
jge
popw
nop
mov
test
test
add
addb
mov
fs
sub
jecxz
cld
daa
adc
test
or
iret
loope
jb
mov
mov
daa
jmp
addr16
fwait
clc
aaa
push
das
xor
push
inc
in
arpl
inc
mov
in
jg
das
out
imul
cwtl
mov
fwait
mov
aad
popa
mov
sbb
sub
dec
cmpsl
lods
nop
dec
xchg
inc
jb
pop
xor
test
fistpll
lcall
outsl
xor
out
dec
add
fldenv
jmp
pushf
xchg
inc
cmp
inc
call
repnz
das
nop
mov
inc
adc
mov
adc
mov
mov
inc
add
sub
push
pushf
inc
stc
inc
adc
push
fistps
fnstcw
lds
inc
dec
fildl
in
loopne
aaa
mov
mov
out
mov
push
dec
les
mov
mov
cli
and
ss
pop
xor
push
loope
divb
mov
mov
fistpl
dec
pop
adc
jb
adc
xchg
pushl
adc
outsl
and
cmp
je
loop
clc
mov
push
jmp
clc
mulb
or
std
xchg
sub
int3
push
mov
test
jp
imul
inc
test
popf
sub
stc
out
pop
sbb
jp
shlb
aas
xor
jae
ret
fmuls
mov
dec
lcall
mov
jge
jbe,pn
scas
sbb
test
cmp
xchg
clc
ja
push
dec
shlb
xlat
aas
sbb
push
sub
arpl
mov
scas
and
arpl
and
fsubs
mov
lret
loope
inc
xlat
xorl
in
sbb
or
cmp
jno
lahf
mov
andb
push
inc
mov
fimuls
dec
xlat
inc
inc
pop
jne
fsubl
lea
pop
fstpt
jg
test
int3
test
mov
insl
in
pop
xor
shrl
sub
vmulpd
sub
adc
and
sbb
fistpll
cmp
jp
cmp
sbb
pusha
jnp
add
jns
jb
cmp
pusha
adc
ljmp
fidivl
sbb
rolb
mov
mov
xor
mov
ret
sub
scas
xorb
aas
push
ss
aad
xchg
pop
subl
stos
fcom
pop
addr16
ds
packsswb
testb
xlat
pop
popa
ja
adc
add
pusha
fcomip
xor
sahf
cli
mov
sub
and
or
std
push
jge
fwait
push
cmp
mov
dec
out
lcall
jne
jnp
and
test
sub
nop
rcrl
gs
mov
out
mov
int
enter
mov
call
inc
test
xchg
pop
cmp
fldl
jg
push
lcall
scas
pop
or
and
mov
cmp
outsb
push
sbb
adc
ret
push
lret
pop
into
pop
stc
out
in
pop
xor
fistpll
mov
shll
loopne
popf
mov
fmull
imul
mov
xor
in
jno
in
test
movsb
jle
push
int
jno
ficoms
pop
dec
test
mov
arpl
ret
inc
mov
fiadds
mov
test
js
sub
aas
push
pop
sbb
push
fnstcw
ljmp
adc
loope
lods
popa
cmp
rcrb
fwait
insl
rcll
push
mov
aam
sbb
outsl
xchg
push
sarl
cmp
or
rolb
sbb
fsubs
lock
pusha
or
mov
ss
mov
vmwrite
icebp
scas
inc
rcrl
mov
xor
xchg
fcomip
orb
dec
in
add
int
dec
or
inc
cltd
cmpsl
andb
cmp
ret
cltd
fldenv
out
cli
pop
mov
jns
fwait
dec
add
cmc
xchg
jae
out
in
out
mov
shlb
xchg
pop
mov
insl
fcoms
pop
aaa
push
mov
dec
cmp
jnp
stos
mov
lds
ljmp
mov
stos
movsl
jmp
mov
mov
mov
push
mov
in
inc
scas
xchg
cmp
ja
inc
pop
dec
push
jne
leave
xchg
push
in
jmp
jmp
fs
inc
aad
loope
xor
fwait
lret
loope
inc
enter
jb
cmp
jle
je
xor
ljmp
pop
mov
inc
cwtl
pop
mov
fisttps
fs
stos
mov
fs
int
icebp
inc
jle
lret
std
and
cld
add
enter
sbb
push
psubd
orl
mov
add
sub
je
pop
mov
add
sub
sbb
jge
pop
scas
jp
call
dec
arpl
cmp
mov
incb
push
sub
loopne
and
outsl
mov
shl
push
in
cvtps2pd
outsl
into
rclb
mov
sbb
sahf
out
mov
pop
lret
sbb
ret
nop
aad
imul
pop
adc
lods
loop
cmp
cltd
pop
pop
sub
xchg
cmp
sub
pop
xchg
lods
sbb
leave
xchg
orl
cmp
inc
les
sub
enter
xlat
adc
mov
repz
adc
out
jbe
ror
sbb
jl
sub
cltd
xor
rcrl
xor
in
cmpl
into
dec
pop
and
cld
fst
mov
push
leave
popf
loopne
sbb
mov
sub
pop
das
cli
lea
inc
inc
mov
and
mov
or
jo
jno
jne
sbb
mov
pop
sahf
cmp
pusha
or
sub
imul
aaa
sub
loopne
xor
xorb
and
dec
dec
sub
push
or
sbbb
inc
xor
dec
jmp
add
lds
and
sbb
inc
xchg
sub
loop
mov
jb
mov
adc
fistps
xchg
pusha
pop
mov
cs
sbb
lahf
fstp
fdiv
adc
pop
test
and
or
jb
pop
sti
scas
mov
xchg
pusha
shrb
push
movsb
xor
dec
pop
loop
cmp
int
push
add
pop
js
dec
sub
shrb
lea
movsb
les
push
pushf
lcall
xor
xchg
mov
xor
test
cmp
xchg
out
mov
xchg
and
jns
mov
jnp
xchg
fimull
into
jno
mov
and
dec
dec
inc
cltd
xlat
loop
adc
cld
inc
xor
mov
cld
sub
lods
loopne
push
mov
fcmovu
mov
inc
outsl
nop
outsl
out
insb
fnsave
mov
jbe
lea
and
das
stc
mov
js
aam
arpl
rcrb
mov
cmp
adc
stos
sbb
dec
les
jg
and
fisubl
nop
rclb
lock
andl
ds
movsl
pop
lret
inc
mov
xlat
cltd
cmp
add
xor
sub
xchg
out
mov
add
jl
repnz
or
mov
popa
aas
push
sarl
into
test
div
pop
jge
fcomps
push
mov
sbb
imul
sbb
xchg
add
xchg
push
or
push
sub
lahf
jae
sbb
push
int
loopne
add
negl
in
jae,pn
movsl
leave
push
dec
lret
adc
je
sub
push
shlb
xchg
rorb
cmp
lds
pop
inc
adc
mov
lods
push
cld
cltd
xor
xchg
les
mov
inc
jp
add
or
gs
imul
jge
jne
cmp
icebp
loopne
xor
add
cmp
fbstp
and
jle
mov
int3
mov
mov
and
imul
sbb
andl
ss
dec
pop
sub
shll
cli
or
in
mov
push
sub
cmc
sub
pop
shrb
push
clc
repnz
fcmovnbe
or
and
mov
movsl
fiaddl
in
rol
xchg
cmc
mull
daa
cmp
lock
jne
lret
cmp
lods
pop
xor
sbbl
out
mov
inc
inc
pop
aad
xor
repz
adc
sub
cmp
adc
sub
daa
adc
js
pop
jo
lods
xchg
inc
aad
shrb
mov
push
dec
mov
sub
inc
sub
ss
test
je
clc
xchg
jg
insb
adc
jmp
test
repz
xchg
mov
mov
adc
adc
into
add
fwait
cld
pop
pop
cmp
lds
mov
sub
mov
movsl
adc
xor
pop
divl
xor
test
in
popf
lock
lcall
dec
pop
imul
scas
sbb
xor
sbb
fidivrs
sbb
fdiv
clc
jle
lock
push
jns
call
cmp
pop
xchg
jp
add
add
xor
mov
dec
sbb
push
pop
xchg
sbb
jl
push
fisttpll
push
mov
loop
or
xchg
add
inc
shl
mov
adc
sub
fbld
xor
mov
paddusw
mov
push
ja
pop
sti
mov
fnstenv
stos
sbb
cltd
mov
data16
add
sbb
ja
das
push
mov
dec
lret
aam
mov
cltd
mov
scas
adc
xchg
ret
mov
cwtl
in
push
idivl
xor
test
sarl
push
scas
pop
daa
stos
lods
ficomps
test
inc
popa
testl
pusha
imul
test
pop
das
std
sbb
mov
daa
pop
mov
dec
adc
lcall
cmp
sbb
jae
jge
pushf
pop
lods
lock
mov
sub
lahf
push
in
sub
cmpsb
int
xchg
pushf
jmp
adc
xchg
cltd
insb
addr16
or
mov
pop
jl
loope
mov
ss
dec
lods
pop
pushf
push
inc
aam
push
sbb
mov
sub
sbb
mov
popa
stos
ljmp
addr16
std
pop
adc
cmc
test
divps
addr16
add
add
repnz
xor
dec
inc
ss
outsb
sub
decl
mov
adc
cmp
call
jg
mov
sbb
lcall
aad
test
and
test
sub
ficomps
outsl
pmuludq
sub
lods
addr16
fiaddl
cmp
mov
je
jo
sub
cmc
stc
pop
jnp
mov
lcall
icebp
clc
les
mov
imul
jo
call
sub
mov
xchg
out
mov
push
das
les
fcmove
pop
call
out
leave
js
dec
push
outsb
fwait
or
test
sahf
xchg
adc
inc
adc
out
or
cmc
les
shl
sub
add
or
adc
xor
adc
out
sbb
or
fistpll
jb
mov
dec
cmp
dec
icebp
mov
hlt
lods
ret
pop
popa
repz
pop
dec
mov
or
fsubrs
sar
cwtl
mov
cld
repz
cmp
aas
mov
mov
int3
cld
or
push
fwait
lea
loope
adc
insb
push
cmp
pushf
insb
scas
xchg
jmp
or
inc
pop
rcll
out
lret
inc
call
sub
xor
cmp
xor
frstor
arpl
or
popf
addr16
or
rcrl
fstl
test
xchg
fs
mov
sub
xor
lods
mov
js
sarb
xchg
push
stc
out
shrb
inc
xchg
out
int
cmpsl
xor
cmp
xor
mov
sub
push
mov
adc
inc
andl
xor
je
sub
push
sub
cmp
or
cli
xchg
mov
mov
pop
mov
inc
das
xlat
hlt
arpl
fbld
data16
add
jl
lret
dec
pop
mov
insl
add
lahf
add
pop
push
push
jle
dec
sub
push
inc
cli
sbb
mov
push
rcrl
pop
lret
js
or
fnop
sub
pop
pusha
jns
add
or
inc
inc
and
data16
fildl
xchg
in
push
cmp
iret
jne
mov
mov
mov
push
test
outsl
inc
mov
pop
cli
js
ja
sahf
pop
andl
pop
shll
xor
inc
fs
stc
loope
adc
dec
ret
jmp
jmp
xchg
pop
and
pop
or
pop
push
insb
fchs
idivb
fstpt
sti
inc
icebp
fadd
pop
mov
push
pop
cmpsl
mov
inc
stos
inc
jmp
loop
js
or
outsb
pusha
shlb
fildl
fldt
es
adc
mov
xchg
lcall
das
lret
push
cmpsl
cmpl
push
cmc
call
dec
add
jno
dec
mov
mov
lret
iret
inc
aas
mov
push
xchg
add
jnp
movsb
rcrb
adc
inc
movsb
fimull
test
lods
ss
mov
in
mov
xor
mulb
movsl
cmp
sbb
int3
pop
outsl
movsl
mov
mov
xchg
outsb
data16
push
shlb
and
rcl
mov
jp
je
ret
leave
xchg
jg
cmp
iret
loop
mov
and
call
loop
test
or
lock
xor
rorl
jbe
cmc
jle
xlat
xor
jge
aas
iret
mov
jecxz
jbe
inc
push
inc
sti
sub
mov
sbb
and
sub
cmpsb
scas
imul
dec
and
pushf
mov
dec
fs
addl
and
js
into
mov
push
out
xchg
jge
jne
xorb
mov
mov
mov
push
jne
bound
jbe
pop
je
pop
xor
bound
mov
mov
inc
xor
sbb
push
pop
pop
pop
jo
cmp
out
sbb
jge
mov
mov
jbe
push
call
data16
inc
insl
outsl
jg
in
push
mov
jb
dec
lock
or
dec
mov
frstor
lea
and
push
aad
inc
jae
mov
insb
add
mov
fstps
jmp
fadds
out
scas
cwtl
popa
and
dec
add
mov
out
jbe
add
imul
mov
cmpb
push
fstpt
enter
xchg
mov
jb
jne
leave
cld
jmp
mov
xchg
lret
scas
sbb
out
mov
dec
loopne
xchg
mov
out
leave
sub
jl
jmp
push
jae
in
lea
and
add
and
inc
pop
flds
stc
jg
data16
jle
cwtl
lret
nop
push
xchg
cmp
jg
mov
jns
fistps
out
je
fistpll
into
adc
xchg
adc
mov
fcoml
and
test
jno
je
push
push
cmpsb
outsl
lds
dec
mov
mov
ljmp
out
mov
mov
les
pop
lea
pop
aas
jle
mov
rorb
ret
ret
out
adc
mov
lcall
mov
mov
lods
fsts
lahf
pop
pop
cli
pop
lret
les
pavgb
adc
jne
mov
cli
or
or
jl
fimull
jp
cld
cmpsl
adc
push
mov
js
jb
add
shll
cmpsl
ret
nop
lods
mov
sub
pop
mov
jmp
push
lock
sbb
or
out
test
fcmovne
add
lock
push
daa
mov
bswap
mov
out
fwait
test
int3
hlt
dec
fstps
daa
das
push
adc
xchg
mov
sub
adc
push
adc
cmp
ret
pop
mov
pop
inc
jge
adc
push
push
flds
sub
mov
xlat
pushf
sbb
push
pop
xchg
xlat
push
out
lods
cmp
adc
push
dec
shl
insb
xchg
jae
pop
or
and
outsb
idivl
push
js
push
push
das
cmp
cmp
dec
adc
js
push
dec
test
adc
lea
add
mov
les
mov
ja
fcompl
mov
insl
adc
test
dec
xchg
and
int3
cmp
sbb
inc
xor
pop
int3
xor
push
mov
jecxz
sbb
inc
pop
loope
aas
stos
in
arpl
mov
sub
xor
fwait
movsl
and
mov
push
push
orb
gs
mov
mov
cmp
jge
adc
sbb
je
clc
xchg
test
inc
leave
xor
adc
imul
push
xor
hlt
push
pusha
sbb
sahf
jp
data16
and
adc
inc
add
imul
add
lds
cmp
dec
cs
mov
test
xchg
mov
adc
mov
jbe
inc
nop
xchg
add
mov
insb
loopne
movsb
sbb
cmp
jns
jb
adc
rolb
and
add
adc
pop
jg
ficoml
xchg
call
subb
xor
xor
pop
ja
movsb
inc
mov
inc
cmp
add
sub
dec
stos
arpl
cmp
js
cmp
xchg
mov
clc
mov
inc
sub
dec
and
cmc
pop
inc
or
mov
add
cmc
adc
adc
loop
pop
leave
push
ds
ret
pop
dec
dec
test
cmp
mov
or
cmpsb
pop
pop
mov
pop
daa
jne
fstpt
ds
mov
sub
out
xor
stos
lea
xchg
mov
jno
dec
repnz
sub
pop
int3
test
mov
out
inc
in
jecxz
add
das
mov
and
aaa
pushf
mov
int
sbb
adc
jp
adc
sub
in
subb
imul
dec
or
cmp
xchg
cltd
hlt
sub
aam
sub
push
xor
jecxz
pop
mov
cmp
add
test
imul
ja
daa
pop
or
mov
orb
inc
xchg
sub
sbb
aas
sti
lods
pop
sbb
int
int
jmp
fwait
stc
mov
cmc
stc
cmp
movsb
push
xchg
aas
add
mov
shll
and
mov
stos
jmp
fildl
sbb
sbb
imul
shll
stc
mov
add
and
push
xor
xchg
lcall
fsubrs
cmp
ret
aas
aam
repz
dec
aaa
je
xor
rcrl
pop
mov
adc
lret
push
sbb
pop
cmp
mov
gs
mov
cmpsl
in
cld
mov
std
out
in
js
fisttpll
ja
jg
imul
add
test
inc
or
sbb
inc
and
les
jae
or
inc
dec
mov
sub
push
cmp
xlat
mov
and
add
jb
pop
push
cmp
lods
adc
mov
mov
jae
stos
fs
sbb
pop
mov
unpckhps
adc
pusha
call
cmp
fwait
adc
cld
iret
or
mov
sti
add
mov
pop
cmpsb
je
jp
cmpsb
mov
shlb
mov
adc
mov
cwtl
testb
push
std
ja
gs
mov
mov
loopne
xor
jle
call
leave
in
cmp
mov
dec
adc
out
mov
pusha
sub
adc
pushl
fisttpll
lahf
test
mov
daa
cltd
daa
and
cld
stos
or
jle
out
push
ret
ljmp
ljmp
adc
outsb
sub
pop
cltd
aas
ljmp
pushf
inc
fs
mov
out
aas
or
push
sub
pop
xor
mov
add
movsl
xchg
mov
xor
iret
xchg
outsb
lock
inc
sahf
aas
pushf
push
xor
pop
cmp
aad
mov
ret
xor
aam
or
arpl
divb
push
pop
test
mov
mov
data16
loopne
pop
stc
sti
push
add
adc
xor
push
ss
xchg
lds
arpl
sti
arpl
mov
mov
mov
into
cmp
jae
stos
popa
jo
sbb
pop
xchg
jnp
ljmp
push
lock
xchg
push
and
out
insl
adc
add
push
decl
js
repnz
pop
push
outsl
mov
push
jp
mov
fbld
mov
cmp
jmp
int3
xlat
fisttpl
push
inc
out
ss
pop
cltd
sub
add
dec
outsl
mov
sbb
fldt
je
in
clc
jl
and
outsb
inc
mov
mov
xor
sti
and
insb
ss
cmc
test
out
and
add
adc
shl
mov
push
cmp
imul
mov
sti
pop
and
mov
cli
scas
or
insb
mov
cs
ja
les
mov
dec
ret
add
push
jae
cmpsb
imul
cmpsl
pop
clc
sbb
inc
out
sti
psubd
arpl
out
xchg
sub
push
push
adc
lods
or
adc
push
enter
iret
out
sbb
ljmp
iret
mov
and
dec
push
lods
xchg
sbb
gs
mov
jne
int3
lret
insb
scas
jo
pop
lea
push
xchg
dec
je
mov
pop
dec
cld
push
and
inc
in
stos
aad
mov
pop
pop
add
xchg
xor
jbe
inc
or
test
fadds
lods
pop
adc
sbb
pop
repnz
outsl
fmuls
js
and
or
test
daa
push
fstp
adc
enter
dec
loopne,pn
push
lds
ds
or
push
gs
xchg
inc
fnstcw
inc
push
xlat
push
sarb
sub
pusha
sbbb
fucom
add
sub
cli
ret
mov
pop
mov
rcl
push
lret
pop
mov
mov
imul
cs
xlat
aaa
in
ja
xor
lahf
and
and
jmp
dec
lea
inc
cmp
adc
and
mov
subb
mov
dec
mov
mov
dec
int
nop
inc
pop
inc
mov
xor
or
mov
jg
mov
fisubrl
sti
sub
push
mov
mov
out
ljmp
fildl
icebp
ss
es
pop
adcl
pop
aaa
lock
aaa
cld
sbb
push
and
das
std
mov
mulb
shlb
out
add
sti
push
shrl
adc
in
popa
out
fimull
lock
dec
mov
lods
imul
jae
outsb
add
xor
or
into
imul
sub
arpl
mov
pop
bound
mov
and
jb
push
push
xor
test
mov
rcrl
mov
pop
movl
mov
sub
lahf
xor
mov
push
and
inc
pop
mov
loop
sbb
loope
fistps
pop
xchg
mov
repnz
add
repnz
mov
stos
out
mov
inc
mov
jmp
divb
add
add
or
mov
jmp
add
pop
das
pop
int
scas
lock
scas
add
arpl
adc
fnsave
gs
das
lock
cld
outsb
push
push
push
add
jg
inc
nop
out
sbb
mov
xor
insl
js
sbb
lahf
enter
je
scas
sbb
push
inc
mov
and
mov
pop
xor
lock
pop
mov
and
aaa
mov
cmc
ficomps
test
je
add
dec
adc
lods
dec
lea
sub
xchg
push
pop
clc
pop
pop
or
and
ja
jg
pop
pop
loop
or
into
jp
addr16
cmp
das
aam
mov
enter
sbb
cmp
mov
cmp
arpl
sti
jno
mov
pop
aad
repnz
test
adc
ret
mov
pop
mov
push
xchg
and
out
insb
repnz
sbb
cli
xor
stos
and
fidivrs
addr16
cwtl
test
fnstenv
bound
push
inc
stos
sbb
push
imul
andb
mov
aad
into
mov
cmpsb
stos
xchg
and
push
jns
jne
inc
outsl
mov
aad
in
xlat
gs
and
cltd
test
mov
add
cmp
int3
adc
jns
in
jp
pushf
jno
stos
popf
dec
les
inc
test
out
dec
stos
call
inc
je
xor
lods
int
add
dec
sub
sub
and
and
fdivr
jno
out
aaa
lret
sub
repz
lret
cmp
jle
xchg
inc
sub
ss
and
stc
fwait
in
pusha
inc
sub
test
cmc
aad
les
int3
sbb
mov
movsl
mov
add
outsb
arpl
adc
imul
dec
pushf
out
jno
cli
or
lods
xchg
push
cmp
mov
mov
js
jl
push
xor
sbb
rcll
and
or
sahf
clc
inc
mov
js
add
out
in
pushl
movsb
and
leave
aas
mov
lock
mov
popf
xor
mov
jb
inc
pop
roll
mov
idiv
mov
jbe
adc
xchg
lods
mov
inc
and
ret
sbb
adc
lret
cmp
push
in
loope
push
mov
push
xchg
mov
adc
into
xchg
pushf
mov
fs
lahf
fisttps
out
and
mov
andb
add
sbb
push
nop
jae
std
mov
dec
sbb
fistl
pop
mov
sahf
scas
xchg
std
popf
dec
lret
test
pop
std
or
adc
dec
ret
jno
xor
aam
inc
iret
frstor
inc
aas
icebp
xor
jbe
mov
sbb
fcompl
push
xchg
movsb
mov
adc
jnp
fstps
int3
scas
rcrl
dec
push
mov
jmp
ja
add
xchg
aad
les
xor
pop
push
bound
jle
push
mov
addr16
int3
shll
xchg
call
xchg
mov
ja
xchg
adc
add
or
dec
lret
pop
mov
cmpsl
test
out
jle
jecxz
lods
jl
push
ja
shll
mov
adcl
je
jecxz
pop
cmc
das
cmp
cmc
pushf
push
xchg
inc
test
pushf
ja
leave
pop
jbe
adcb
mov
dec
xor
mov
add
dec
cmpsl
cltd
mov
lret
cld
jne
sahf
lock
dec
xor
and
inc
ja
and
mov
add
jnp
test
pusha
push
xor
sub
jb
dec
iret
imul
sub
jnp
cmp
cmp
frstor
jecxz
popf
jns
or
pusha
scas
and
fwait
movsl
adc
push
push
pop
sbb
shl
mov
fdiv
xchg
enter
int
cmp
mov
out
xor
aas
test
loope
and
rorl
xor
jne
pop
mov
and
dec
mov
je
lcall
addb
lret
adc
sahf
leave
cmp
pop
int3
int
aam
dec
push
jmp
pushf
push
xor
jmp
jb
jge
inc
pop
mov
mov
add
sub
mov
sbb
pop
sti
sbb
stc
test
sbb
pusha
push
or
jnp
sbb
xor
js
adc
mov
or
mov
popl
pcmpgtb
cmp
cmp
add
divl
std
cltd
out
push
ds
jle
sub
hlt
outsl
lret
adc
pop
sbb
push
mov
stos
cltd
rclb
sbb
out
repz
test
inc
loopne
les
outsl
insb
sti
mov
mov
fisubrl
lock
lcall
adc
aad
cmp
loope
jno
dec
stos
stc
fsts
ret
pop
faddl
in
push
scas
mov
cwtl
scas
sub
jb
fisubrs
cmpsb
int3
jb
out
ret
js
cltd
stos
xor
cli
pusha
mov
adc
stos
cmp
or
ficompl
out
sbb
xchg
test
sub
shll
sahf
in
xchg
pop
js
out
icebp
xchg
ljmp
lea
push
pop
jns
push
das
fs
sub
push
lds
daa
lods
push
ret
push
mov
test
pop
jo
sahf
mov
cmp
jne
das
push
leave
push
ss
sbb
cmpl
xor
or
leave
js
clc
add
pop
popl
push
mov
pop
mov
addb
ret
or
insb
repnz
dec
loope
call
adc
lcall
cmpsl
imul
jmp
test
push
inc
je
ljmp
push
pop
cmpsb
nop
or
mov
inc
int
and
pushf
pop
xor
out
js
ss
jns
add
inc
jmp
ds
sbb
ret
sbb
xor
ss
jp
inc
lret
out
imul
scas
test
bound
mov
scas
mov
mov
inc
pushf
bound
test
pop
cmp
dec
pop
mov
int3
push
test
dec
jo
mov
pop
add
fs
push
shll
mov
adc
sub
pop
insb
mov
ret
outsb
xchg
push
cmpsl
movsb
and
cmp
nop
subl
mov
ret
test
ret
cmpsb
pop
sar
hlt
scas
clc
push
ljmp
lds
mov
mov
pushl
and
cwtl
inc
mov
xor
add
cld
xor
mov
clc
stc
fwait
mov
loope
test
rcrb
into
mov
mov
into
rcll
and
leave
xchg
dec
jmp
lahf
add
in
jge
inc
ret
stos
test
gs
inc
ficompl
mov
dec
xchg
jne
lds
test
loope
into
out
loopne
inc
mov
pop
cmp
pop
stos
adc
rcrl
push
test
inc
out
pop
out
or
jp
dec
in
xor
ds
mov
dec
cltd
fidivrl
lods
sti
out
pop
sub
out
sbb
pop
sarl
add
popf
inc
or
cwtl
xor
xchg
fmul
inc
andl
ja
sbb
xchg
inc
sbb
pop
inc
imul
out
xchg
pop
movsl
lds
ret
in
or
add
sbb
inc
jnp
mov
add
loope
sub
inc
and
jl
dec
mov
push
movsb
ret
lahf
jl
dec
icebp
and
shlb
sub
ljmp
xchg
or
dec
cs
dec
mov
push
xchg
loopne
subl
inc
cmp
fimull
icebp
andb
test
pop
dec
lods
push
int
in
inc
test
jno
ficoms
xchg
scas
lea
imul
or
mov
adc
es
jmp
sbb
jp
testl
iret
loop
and
xor
pushf
mov
je
lds
lcall
dec
outsl
xor
and
sub
mov
lock
jmp
adc
cmp
ds
fwait
and
add
push
ret
mov
or
adc
or
js
loop
mov
sbb
testb
pop
rol
outsl
stos
sbb
dec
sub
jo
cmp
mov
mov
loopne
gs
or
fnstcw
lret
mov
enter
jno
mov
sbb
jnp
sti
mov
add
sbb
sub
out
das
xor
push
adc
inc
lock
push
xchg
adc
and
popl
mov
inc
leave
mov
stos
jne
outsb
test
cs
or
out
jb
pop
scas
and
cmp
loope
ds
addr16
jl
inc
push
out
cwtl
xchg
or
stc
fstp
pushf
ficoms
inc
or
dec
lret
out
push
inc
or
mov
int3
jmp
mov
add
xchg
sub
rcrb
and
jg
mov
sbb
mov
xchg
mov
jg
lcall
outsb
call
and
pop
xchg
xchg
dec
mov
jae
ffree
iret
rorl
adc
pushf
dec
mov
pop
adc
sub
cmp
aam
adc
dec
stos
mov
cmp
dec
dec
xor
dec
iret
cmpsb
sub
xchg
pop
push
pop
daa
and
xor
loop
push
and
lods
mov
inc
mov
enter
dec
jb
or
pop
sahf
and
sbb
or
sbb
xlat
daa
mov
jae
jo
xchg
sbb
pop
adc
jns
mov
adc
subl
pushl
jp
out
push
cmc
scas
push
or
mov
cmp
cli
daa
sbb
fcomi
lods
sahf
sub
dec
ficoml
mov
out
pop
mov
or
out
aad
jno
and
push
xchg
aad
add
push
nop
push
mov
push
mov
ss
mov
jge
shl
hlt
stc
int3
roll
xor
xchg
or
mov
rcrb
int
jo
pop
daa
pusha
adc
or
mov
pop
xchg
aaa
mov
out
cld
ud0
popa
xchg
scas
mov
mov
ret
punpckhbw
adc
pop
sbb
mov
adc
jnp
cmc
int3
xor
jnp
clc
rep
sbb
mov
sarb
test
loopne
pop
jae
push
jb
and
es
scas
jo
fldl
pop
inc
jge
scas
fisttps
dec
mov
and
icebp
std
ljmp
loopne
mov
jno
out
outsl
jge
jmp
out
ds
repnz
repz
or
int
stos
imul
lds
ljmp
and
sub
fcomip
xor
jmp
shl
shlb
jmp
imulb
push
es
adc
add
jno
sub
jge
sahf
mov
mov
aaa
aad
jae
fiadds
loop
popa
xchg
pop
outsl
std
and
mov
sbb
in
adc
mov
jne
addr16
sub
xchg
and
inc
pop
and
dec
call
aam
inc
pop
lods
out
js
lahf
daa
or
dec
cmp
push
je
mov
mov
and
mov
adc
in
pop
out
dec
pushf
nop
inc
xchg
repnz
mov
cld
inc
lea
mov
mov
in
out
lcall
sub
pusha
adc
cli
pop
insl
dec
xchg
add
lock
out
lret
pop
pop
test
dec
lret
jnp
xorb
imul
call
push
push
cmpsb
sub
fwait
cmp
cmp
pop
push
ss
and
jecxz
repnz
popa
mov
ja
lods
mov
sub
fbstp
mov
and
adc
call
cmp
mov
sbb
les
outsl
mov
xor
inc
test
jp
pop
aam
dec
sub
orl
sbb
popa
lret
cmc
sub
push
push
push
es
jge
out
rol
push
stc
xchg
popa
mov
orb
loop
out
mov
sbb
xchg
mov
mov
push
or
mov
xchg
jne
push
int3
sti
pusha
pop
dec
cmc
xchg
xor
mov
jns
mov
xchg
test
pop
add
cmp
dec
xor
sahf
xchg
hlt
inc
cmp
je
sahf
cltd
inc
pop
nop
sub
and
sub
fadds
and
int
scas
daa
arpl
mov
pop
xchg
movsb
xchg
mov
outsl
fbld
dec
aas
out
rcrl
inc
call
mov
push
mov
dec
jne
sub
or
pusha
imul
int3
jbe
imul
and
test
add
xchg
stos
les
mov
pop
adc
aad
inc
leave
push
lret
xchg
dec
jmp
push
in
pop
out
repz
popf
and
adc
test
jmp
loopne
in
pop
sub
imul
xor
xchg
mov
fdivr
fs
inc
mov
adc
shlb
sub
push
jecxz
cld
dec
ret
adc
pop
inc
or
test
es
mov
pop
pusha
fs
xchg
lea
fstps
cmc
sub
sbb
xor
push
arpl
push
sbb
rorl
cli
addr16
scas
decb
mov
xor
push
add
or
loop
add
dec
fnstsw
loop
shrl
repnz
xchg
fcoml
xchg
and
adc
push
popa
sub
leave
imul
imul
add
fisttpll
and
add
cmp
adc
iret
cltd
cmp
sbb
add
dec
pushf
adc
push
ja
adc
out
aaa
lret
in
cmpsb
push
int3
fwait
pop
incb
je
das
inc
xor
push
xor
add
in
aam
adc
dec
push
and
mov
xchg
flds
sbb
clc
test
cmp
xlat
int
push
dec
aam
sar
mov
fldenv
andb
mov
jne
sahf
mov
popf
pop
stos
jbe
out
or
pop
mov
popl
pop
jns
iret
pop
push
pop
and
cmp
mov
cltd
push
ds
xor
push
sbbb
mov
inc
jns
push
sbb
lock
sub
clts
out
sbb
dec
outsb
or
fwait
jns
mov
dec
and
sbb
jmp
ja
push
in
lods
popf
lret
mov
sbb
sti
imul
cmp
sti
lock
xor
cwtl
jg
pop
lahf
insb
push
das
cmp
std
sub
push
insb
pop
scas
xchg
enter
cmpb
in
cmp
sbbl
xchg
and
and
xor
addb
sbb
inc
daa
cmp
int3
cmp
decl
lret
inc
js,pn
lcall
dec
lea
jg
cli
fs
fisttps
lcall
mov
into
rcll
xchg
sbb
mov
cltd
les
enter
scas
cmpsl
push
mov
scas
push
xchg
icebp
insb
push
sbb
mov
sbb
lahf
jle
outsl
fbld
leave
pop
mov
dec
pusha
fstl
fdivl
popa
add
popf
in
add
jno
mov
push
ss
int3
mov
sub
xchg
div
clc
fcos
int
cltd
adcb
out
jmp
add
pop
inc
adc
or
xor
dec
aaa
inc
pop
jnp
or
ljmp
add
paddb
add
cmp
mov
test
subb
push
outsb
sub
or
ret
sbb
dec
push
jg
jns
push
imul
jg
les
adc
fwait
sbb
jo
pop
mov
out
call
or
daa
addr16
or
mov
mov
out
mov
jno
cwtl
cmpsb
inc
cmp
sub
in
popf
jb
jae
cmp
fmull
pop
call
adc
push
dec
mov
mov
dec
lret
ret
jns
and
into
shll
cwtl
mov
lds
outsb
or
pop
sub
adc
imul
lea
inc
jecxz
adc
inc
push
pop
inc
loopne
adc
or
sahf
sub
pop
mov
pop
aas
push
shlb
lcall
mov
or
imul
sbb
dec
adc
mov
pop
xchg
ret
push
sbb
mov
add
leave
gs
es
popf
movsb
jae
or
gs
sahf
aam
xchg
cmpsb
in
lods
data16
adc
mov
in
movsb
pop
imul
shl
mov
jmp
mov
add
jmp
sub
and
pop
aam
pop
mov
or
dec
popa
cmc
mov
gs
clc
dec
hlt
lret
out
in
popf
cmpsl
sbb
dec
adc
call
push
dec
sbb
dec
sub
xor
fbld
aas
lcall
icebp
push
fistpl
lcall
testl
or
cmc
and
cmp
mov
jmp
inc
xor
push
lcall
xchg
lret
pop
adc
pop
lods
sbb
sbb
roll
pop
stos
mov
das
hlt
repz
dec
leave
es
loop
stos
pusha
andb
les
or
dec
repz
jb
enter
sarl
jecxz
lahf
xorl
cld
cmp
cs
inc
cmpsb
lea
aam
enter
arpl
adc
sbb
jbe
test
xchg
dec
mov
push
sbb
dec
xchg
cmp
loop
subb
sub
sub
clc
jns
mov
push
ljmp
icebp
por
cltd
scas
int
and
mov
mov
cld
mov
inc
xchg
call
dec
dec
cmp
mov
clc
in
ss
and
stos
lahf
fucomi
scas
dec
pop
xor
or
cltd
jg
in
dec
into
mov
push
fistpl
sar
out
mov
add
adc
dec
loope
and
clc
out
scas
imul
lret
shrb
jle
cltd
movsl
pop
pop
lods
daa
mov
addr16
adc
fdivl
inc
pushf
test
dec
xchg
xchg
mov
fldcw
leave
sub
ss
mov
ret
insb
jmp
push
sub
dec
push
inc
or
xchg
adc
neg
fs
in
cwtl
or
fwait
arpl
xor
scas
ljmp
fcompl
xchg
push
push
jg
pop
in
ret
adc
ret
out
fcoms
xor
shlb
mov
mov
jl
lock
pop
push
jns
pop
mov
pop
adc
sbb
fsubrl
sbb
sbb
push
clc
sub
mov
xor
out
jl
aad
xlat
mov
mov
sarb
lcall
lea
mov
cmpsb
roll
dec
push
orl
popa
repnz
aas
jbe
gs
ljmp
inc
in
jo
fdivs
push
sti
sub
fistps
fisubrl
cmp
inc
enter
popf
sti
cmpsl
mov
aam
push
add
mov
mov
popa
fdiv
mov
mov
and
pushf
leave
fdivs
cwtl
and
aam
pop
sti
out
sbb
inc
mov
imul
fidivrs
sub
clc
rclb
or
jge
or
pop
and
and
daa
addr16
xchg
js
push
popl
inc
pop
and
and
xchg
push
add
mov
cmp
iret
jle
push
loopne
sbbb
ret
aad
nop
outsb
jbe
out
stos
insl
and
inc
or
popf
mov
add
pop
dec
mov
cltd
jae
mov
xchg
pop
daa
dec
sbb
mov
mov
insl
xor
jno
adc
add
andl
mov
push
mov
pop
add
xor
loop
aam
ja
inc
lods
es
sbb
mov
sub
cmp
enter
xchg
mov
dec
out
pop
jmp
pusha
or
push
adc
jae
add
in
in
xchg
mov
mov
jo
jo
mov
mov
movl
xor
je
movsl
stos
in
mov
and
arpl
out
in
pushf
mov
dec
movsb
xchg
hlt
pop
add
mov
mov
xor
mov
sub
mov
stos
mov
cli
or
jns
into
xchg
sbb
loope
mov
xchg
jbe
daa
sbb
push
arpl
ret
mov
or
inc
rcr
das
cmp
incl
push
mov
aaa
xchg
mov
jnp
in
sbb
cmc
repnz
mov
out
fsubs
testl
xor
aaa
test
outsl
or
jno
mov
or
mov
call
inc
push
push
negb
aaa
cmp
adc
push
je
dec
pop
stos
add
dec
out
std
push
cmp
push
mov
fistpll
dec
jecxz
push
popf
cltd
test
jno
pop
push
dec
xor
ss
and
imul
or
mov
out
mov
mov
xchg
lahf
lret
push
lret
mov
fsubl
mov
pop
pop
dec
mov
mov
rcrl
les
xor
dec
pop
or
rcll
jne
cs
fcmovbe
popf
addb
dec
mov
das
cmp
pushf
jmp
pop
jb
mov
mov
xor
inc
out
push
mov
pop
dec
insb
lcall
test
inc
jecxz
cmp
xchg
das
or
aaa
xchg
inc
sbb
add
rcll
jns
add
imul
ret
fcompl
in
mov
ret
rorl
pop
loop
or
xchg
repz
pusha
pushf
test
adc
push
je
and
cmp
sub
insl
mov
xor
arpl
add
mov
or
push
mov
jecxz
iret
pop
push
andl
mov
adc
mov
push
cmp
idivl
pop
pop
mov
fisttpll
jne
enter
mov
mov
pusha
mov
cmp
test
jp
or
mov
in
pop
lret
sub
js
ret
gs
sbb
push
push
lea
pop
ja
pusha
cmp
xorb
mov
std
in
test
test
out
push
subl
cmp
shrb
cld
inc
inc
push
ljmp
repz
iret
jns
add
mov
and
dec
cmp
push
mov
push
pop
mov
mov
je
mov
jmp
or
repnz
stc
push
ss
xlat
dec
mov
mov
int3
jmp
inc
jae
stos
ret
inc
jecxz
stc
sub
xor
repz
in
mov
jb
xchg
mov
aam
mov
add
pop
ret
adc
rclb
adc
call
lcall
xor
mov
fs
add
sub
pop
gs
xorb
mov
ret
cmp
sub
repz
or
in
int
sbb
divl
add
mov
mov
fs
andl
lcall
mov
mov
sub
cs
out
pop
les
xchg
pusha
insb
rclb
shl
iret
pop
and
jge
jo
fcomp
cmpsb
sti
sti
fs
dec
int3
std
test
jge
ss
mov
loope
aad
sub
aas
pop
js
and
daa
cmp
lcall
shll
push
xor
lods
lea
dec
sub
or
adc
inc
dec
pop
ret
xchg
jbe
and
aam
push
mov
or
in
dec
ret
dec
mov
pop
test
cmp
xor
sub
push
sbb
cmp
or
dec
mov
gs
jmp
aad
sub
jg
or
enter
int3
data16
add
jb
testb
xchg
cmpsl
jb
sub
ds
adc
sbb
pop
jl
xor
dec
movsl
sarl
cltd
and
mov
jns
or
outsb
orl
dec
movsb
cmp
insl
imul
lret
sub
xchg
mov
test
gs
push
pop
adc
or
xor
aad
mov
mov
push
xchg
push
or
mov
int3
sti
cs
or
cli
adc
imul
repz
daa
pop
cmc
out
xor
popf
adc
push
into
adc
xchg
cmp
xchg
pop
and
test
out
push
mov
cmp
aad
aam
pop
jp
push
pop
pop
dec
xchg
xor
adc
mov
xor
push
clc
stc
cmpsl
pcmpeqw
mov
test
sub
cld
add
fidivrl
mov
adc
mov
scas
lahf
dec
mulb
push
inc
dec
and
mov
jo
shrl
insl
cmpsl
bound
dec
lahf
dec
test
inc
push
rcll
fwait
jp
cmp
stc
shll
cmc
cmpsb
icebp
push
fsubr
loopne
or
in
sahf
mov
inc
movsl
fildll
sarb
cmp
insb
pop
rcrl
jno
fsubr
mov
pop
mov
pop
sbb
adc
dec
insb
or
mov
sti
fistps
mov
inc
pop
pop
sub
in
sbb
sub
inc
jns
fildl
mov
rcll
mov
adc
inc
pushf
xor
inc
xchg
fwait
add
jmp
dec
xor
and
mov
paddq
mov
hlt
mov
sbbl
jns
insb
inc
int3
imul
inc
adc
mov
mov
cmp
xor
daa
inc
mov
lmsw
xchg
shll
sbb
mov
jne
jb
cmp
imul
sbb
dec
xchg
out
xchg
pushf
out
push
sarb
jno
aas
sti
rcl
and
xchg
out
add
or
pop
adc
cwtl
cltd
dec
jge
stos
cmp
pushf
xchg
fimuls
mov
jbe
adc
insl
in
fstp
mov
sub
mov
int
pop
arpl
mov
insl
gs
sub
push
movsb
cmc
cmp
lret
xchg
push
aam
xor
pop
shr
sub
dec
ss
insl
cmc
frstor
xchg
jb
mov
push
pop
xchg
les
lcall
es
mov
mov
push
fs
mov
mov
dec
and
add
fstpl
jl
aam
jbe
repz
pop
out
xchg
fcmovu
sbb
aad
and
aam
xchg
inc
cmc
dec
pop
inc
mov
xchg
mov
jae
mov
dec
or
xchg
or
mov
cmp
arpl
mov
flds
sbb
imul
sub
daa
sbb
jp
aad
mov
mov
mov
loop
inc
popf
lea
lret
push
cmp
iret
mov
jecxz
add
ret
adc
fsubr
mov
pop
xor
daa
add
pop
xchg
cmp
into
push
outsl
lock
insl
adc
mov
xchg
fldl
mov
cwtl
inc
cmpsb
mov
and
bound
cmp
rorb
inc
insb
fsubs
dec
pop
sub
pop
mov
fsubs
sbb
cli
rclb
test
adc
adc
out
jle
add
movsb
imul
jmp
or
inc
imul
fidivl
mov
dec
xchg
push
test
mov
jnp
addr16
ss
push
dec
sub
xor
fwait
je
call
dec
inc
lds
cmpsl
add
popf
push
in
sbb
mov
scas
leave
sarb
cmp
pop
test
ss
cmp
sub
in
or
xor
push
nop
ja
outsb
adc
outsb
push
insl
push
mov
and
imul
insl
lret
jecxz
stos
daa
mov
cmp
sbb
mov
or
xchg
mov
jno
out
pop
stos
lds
adc
fucom
mov
jne
fistpll
out
mov
icebp
ret
mov
in
adc
jae
ljmp
or
push
push
clc
repnz
xchg
cmp
data16
adc
dec
xchg
mov
mov
jle
sbb
mov
adc
xchg
sub
push
xor
adc
dec
pop
mov
test
xor
jmp
dec
je
rcrb
out
adc
mov
adc
nop
data16
mov
aam
mulb
loope
xchg
cmp
cmp
sbb
or
cs
mov
inc
repnz
test
fbstp
or
or
add
imul
mov
mov
sar
je
mov
nop
in
dec
and
stc
jno
sub
cmp
addr16
insl
cmpsl
mov
popa
dec
cmp
test
push
outsb
mov
in
sti
sub
dec
mov
add
xchg
inc
iret
push
or
in
jp
adc
shll
int3
push
cltd
xor
arpl
repz
movsb
push
and
into
insl
lock
rorl
sbb
jl
mov
das
lret
imul
insb
sub
imul
push
mov
cltd
xchg
sub
jg
dec
pop
notl
cmpsl
insb
lahf
mov
das
out
insl
mov
in
dec
movsl
or
pop
movsl
mov
ret
aad
repz
aam
ljmp
xor
adc
mov
mov
cmp
or
jl
cwtl
dec
jge
mov
ss
fdivrl
in
cmp
cs
xor
sbb
mov
popa
loope
mov
loope
inc
and
xor
xor
xor
scas
or
dec
or
test
andl
xor
dec
jns
jne
call
incl
push
stos
mov
inc
mov
filds
push
sbb
xchg
test
std
lods
jae
stc
mov
inc
sub
cltd
and
test
pop
mov
inc
or
inc
mov
cld
mov
jo
mov
push
out
mov
add
xlat
stc
jle
mov
jmp
cmpsl
sbb
icebp
lret
into
orb
scas
int
cmp
add
xor
inc
out
xchg
pop
in
aas
dec
jno
push
ret
xor
lods
movsb
ret
dec
jle
xor
xor
mov
movsl
jl
insb
inc
lock
scas
lods
add
cmpb
and
or
lret
push
sub
insl
pop
hlt
shlb
lock
fmull
xchg
pop
les
xlat
gs
loope
fdivs
lea
addr16
sub
mov
out
push
sub
add
sub
inc
pop
int
or
leave
inc
sub
cmp
xor
cmp
outsb
mov
stos
mov
pop
pop
xchg
sahf
in
adc
adc
pop
pop
mov
hlt
mov
jb
sbb
mov
xor
loop
sbb
cmp
xor
aaa
jo
inc
mov
lock
mov
push
xor
clc
sar
rcrl
pop
mulps
mov
fs
mov
imul
popa
xchg
push
mov
sub
rorb
stos
dec
mov
xor
and
lret
lods
sub
stc
test
xchg
les
fdivl
pop
and
mov
daa
push
inc
incb
cld
dec
xchg
cld
fcomip
sbb
jg
jno
jle
sbb
mov
mov
adc
lock
xchg
andl
xchg
inc
lret
in
pushf
sbb
insb
inc
mov
xchg
pop
loopne
xor
ss
es
jp
shlb
and
lahf
call
ror
aad
xlat
xchg
mov
mov
testb
shrb
testl
mov
call
jle
push
les
pop
in
adc
fbld
sbb
rorb
lcall
popf
icebp
fistpl
daa
jg
xchg
xlat
xchg
fisubs
sbb
xor
inc
aad
mov
sbb
ret
push
in
sub
mov
jo
arpl
test
test
movsb
pop
pop
jns
mov
inc
sub
mov
in
pop
fs
bound
inc
int
dec
ds
jb
inc
arpl
shr
adc
inc
pop
insl
pusha
fbstp
les
inc
rolb
fimuls
dec
jmp
dec
jns,pt
mov
add
fldenv
clc
sbb
mov
jbe
sbb
subb
popa
popf
or
cwtl
xchg
inc
push
or
dec
aad
ss
cmp
inc
les
lods
loop
decl
jne
insl
mov
rorb
mov
and
cmp
std
leave
push
in
adc
out
out
xchg
out
mov
push
dec
cld
icebp
lahf
xor
cmp
fisubrl
sub
cmpb
adc
or
and
imul
dec
inc
ret
sub
add
loopne
xchg
dec
push
xchg
mov
inc
pop
jmp
lds
je
xchg
jnp
nop
mov
fisubrl
in
xchg
dec
cld
inc
loope
in
cmp
pop
xor
jnp
inc
fwait
jb
mov
or
adc
neg
push
frstor
mov
aad
loope
jnp
idivl
out
movsb
inc
fistl
mov
pop
or
mov
mov
cmpsl
clc
jle
cmp
cmpsb
sub
jbe
mov
add
xchg
xchg
and
or
sbb
mov
xor
jnp
sub
cltd
scas
in
pop
test
pop
stc
pusha
or
inc
cmp
lds
lods
loopw
xor
sbb
fdivl
jl
mov
call
ljmp
and
mov
jo
popf
sbb
cmp
rclb
lea
adc
cmpsl
dec
outsb
int
sub
xor
xor
xchg
cli
das
lahf
outsb
push
mov
or
addb
push
ss
dec
xchg
lods
imul
stos
xlat
mov
pop
jp
fs
daa
push
cld
inc
push
mov
xchg
outsb
imul
rclb
sub
dec
and
fs
xor
add
bound
xor
push
mov
adc
insl
xlat
dec
cs
jg
es
addb
or
mov
push
cltd
adc
jne
imul
js
cltd
and
push
out
aas
inc
es
aad
push
sub
mov
cmp
mov
pop
fstps
mov
jl
adc
pop
mov
inc
xchg
pop
xor
in
fildl
mov
dec
negb
inc
loopne
pop
lahf
jnp
inc
and
jno
jmp
aaa
outsb
rcll
inc
daa
mov
sbb
adc
into
imul
insl
cmp
jno
sahf
add
stos
out
pop
dec
push
hlt
sub
push
dec
roll
ja
shrl
clc
mov
popa
sub
roll
ljmp
cwtl
sbb
out
neg
pop
add
ss
cmpsl
xor
jo
iret
rep
pop
push
mov
push
xor
ret
test
fsubs
pushl
sbb
arpl
sbb
movsl
inc
std
lea
pop
sbb
incb
mov
and
pop
popf
xor
jne
lcall
sub
pop
popl
mov
pushf
or
xchg
dec
and
push
or
mov
xor
stos
or
insl
inc
es
or
sub
sub
movsb
mov
leave
pop
outsb
jae
jp
lods
xchg
or
cmp
bound
jae
ficoms
pop
andb
dec
sub
pop
jmp
cmp
lret
and
cmp
sbb
idivb
sub
insb
cmpsl
sub
cmpsb
shlb
sbb
clc
pop
or
jmp
sti
movsb
or
int
jno
repz
call
lret
lods
pop
leave
sahf
mov
xor
sub
add
mov
in
ja
jg
lret
jecxz
repnz
test
push
and
cmp
push
pusha
or
mov
sarl
sti
jno
mov
out
mov
popf
popf
into
js
jae
and
lds
inc
dec
and
jg
cmpsl
je
sti
push
ds
push
xchg
pop
fdivl
icebp
jno
mov
mov
add
jp
jecxz
rcrb
inc
cmpsb
imul
pop
mov
mov
dec
js
dec
shrl
jmp
push
js
and
and
out
std
push
adc
arpl
mov
mov
xor
mov
xchg
sub
pop
pop
leave
pop
sti
popf
or
lret
xlat
icebp
mov
mov
aam
dec
fstps
inc
daa
mov
movsb
in
lret
xchg
and
sti
mov
lcall
jl
fbld
cmp
scas
cltd
test
gs
es
jge
nop
cmpl
inc
jbe
scas
and
mov
mov
inc
xchg
ljmp
jbe
or
jmp
in
xchg
inc
stc
mov
xor
stos
push
jne
fcoml
cmpsb
jne
xchg
push
cmp
push
xchg
in
push
loop
xor
mov
cwtl
insl
lret
xchg
lea
in
sub
xor
pop
outsb
sbb
cli
mov
loope
test
dec
push
aam
inc
pop
jbe
and
out
stos
push
inc
clc
dec
pop
out
or
push
inc
sbb
ficompl
push
ret
rorb
or
adc
dec
popf
movb
leave
scas
push
imul
and
rorl
push
ja
xchg
lret
xor
cmp
xchg
movsb
fcompl
xor
push
mov
mov
iret
jl
add
sti
cmp
jg
test
xchg
cmp
scas
or
xchg
or
and
mov
jns
in
jg
xor
lea
mov
pop
xchg
std
test
xchg
push
rolb
js
push
mov
adc
jge
loopne
cmpsb
fdivr
xlat
insl
sbb
ret
jno
lods
fcmovnu
clc
jecxz
ror
inc
outsl
loopne
sub
pop
xchg
mov
push
in
pop
cmp
jbe
fwait
sbb
outsb
mov
sub
jle
sbb
ss
jl
lahf
loop
leave
cmc
gs
jge
pop
lods
icebp
repnz
mov
ret
jge
out
es
pop
hlt
cmp
inc
push
fadd
xlat
mov
push
push
das
clc
call
cmp
mov
aam
xor
xor
inc
adc
fcompl
insb
pop
inc
push
fistps
stos
mov
sub
punpcklwd
or
xchg
push
loopne
dec
cltd
cwtl
mov
pusha
inc
sbb
pop
rorb
repz
insl
adc
int3
jp
jge
sahf
scas
adc
je
and
fmulp
int3
pop
jae
repnz
jle
mov
or
mov
add
je
lea
jno
sahf
mov
icebp
mov
pop
pop
inc
sbb
fs
cmp
push
xorb
mov
pushf
sbb
test
mov
add
int3
cwtl
mov
sbb
or
xchg
dec
and
mov
or
push
ljmp
cmp
mov
add
jns
orl
pop
dec
cmp
and
mov
push
adc
jge
or
xchg
dec
push
jg
rcll
int
sub
sti
ljmp
and
outsb
rclb
mov
mov
and
mov
out
les
pushf
mov
xor
sub
xchg
pusha
and
mov
mov
imul
push
pop
cmpb
cmp
sahf
aam
jl
mov
rcr
insl
rolb
mov
test
call
dec
push
rcrb
fwait
movsb
push
das
test
pop
xor
ret
cmp
scas
sub
rorb
jge
push
repz
mov
mov
jl
pop
sti
aad
mov
shlb
sbb
mov
outsl
pop
enter
lahf
clc
dec
xor
data16
repnz
testl
mov
ret
lds
jb
cmp
sbb
les
dec
mov
arpl
int
add
cmpsb
iret
adc
stc
pop
clc
pushf
leave
ja
mov
cmp
std
or
jle
cmp
pop
shl
stos
jno
test
aam
mov
sbb
into
stos
sbb
rorb
lea
out
aaa
push
mov
xchg
dec
push
sbb
xor
test
cld
aaa
repz
ret
stos
and
dec
mov
lds
data16
xchg
rcrl
adc
xlat
xor
adcb
out
dec
jns
subb
xchg
lods
nop
mov
add
cmpb
push
aas
cld
sub
popf
mov
dec
push
and
dec
pop
stc
testb
roll
sbb
scas
bound
pop
aaa
fildl
sub
mov
dec
es
and
pop
push
adc
ds
push
call
push
push
enter
cwtl
push
xchg
mov
dec
aam
and
test
test
adc
dec
pushf
adc
les
or
imul
fs
cmp
mov
and
sub
lahf
add
adc
and
dec
inc
pop
xchg
icebp
inc
inc
ds
jg
add
stos
dec
stos
mov
or
jns
sub
outsb
aad
mov
fisubrs
aaa
out
dec
pusha
sub
cmpsb
and
mov
mov
xor
pop
adc
out
mov
stos
and
mov
dec
loope
subb
mov
xor
mov
pushf
or
xor
and
cmc
and
xor
sbb
push
sub
jns
and
cmp
inc
lds
mov
jl
test
add
fcompl
jmp
movsl
fnsave
or
or
fiadds
out
mov
into
loopne
fisttpll
ret
push
lret
int3
xchg
pop
aad
pop
arpl
push
pop
icebp
sub
out
ja
and
add
push
adc
push
in
fisttpll
and
inc
pusha
lcall
int
adc
jbe
enter
es
xchg
insb
mov
mov
sub
gs
cld
lret
outsb
inc
arpl
pop
data16
xchg
cmc
fisubrs
ds
lea
arpl
jmp
lea
pushf
ret
push
cmpsb
test
insb
adc
out
pop
xor
mov
adcl
arpl
push
or
and
aaa
xchg
in
aaa
addr16
ss
loopne
flds
fucom
xchg
or
adc
hlt
rcr
dec
enter
pusha
pop
int3
sahf
and
sbbb
je
xor
sbb
xchg
and
hlt
mov
or
pop
or
and
sub
jecxz
clc
or
sbbl
pop
dec
push
aad
add
pop
pop
push
sbb
mov
data16
cmpsb
jmp
dec
lods
or
mov
gs
adc
loop,pt
sub
push
sbb
mov
sbb
filds
pop
bound
sbb
or
jl
push
mov
leave
popf
popa
lods
pop
shll
ret
cmp
sbb
loop
xor
inc
dec
mov
divl
orl
xorb
outsb
xlat
jecxz
loopne
dec
or
mov
and
xchg
xchg
out
pop
jb
ss
enter
or
mov
inc
das
push
sbb
push
mov
lcall
pop
and
xor
mov
cmp
mov
lret
mov
sub
cs
outsl
xorl
and
or
cmp
mov
xor
xor
inc
popa
cmp
inc
inc
sti
sub
stos
mov
push
mov
jge
push
int3
fwait
sub
fnstsw
xchg
mov
scas
insb
dec
arpl
and
mov
xchg
and
pop
hlt
in
pop
out
and
adc
pop
arpl
jge
out
mov
xor
shlb
loopne
adc
xchg
cli
cmp
jo
cmp
xor
dec
lahf
dec
out
rcr
mov
and
imul
xor
daa
mov
xchg
ds
inc
clc
push
dec
repz
iret
pop
ljmp
xchg
push
popa
lea
inc
mov
lods
pop
cmpsl
push
cs
jg
or
in
push
jg
or
test
ffreep
loope
int
pcmpeqd
jbe
and
stos
mov
in
repz
dec
cli
mov
int
adc
adc
sbb
rolb
in
popa
test
mov
jecxz
or
push
leave
mov
push
jns
cmpb
stos
imul
pop
out
pop
pushf
cmc
mov
test
mov
cld
push
ret
cmp
push
jno
mov
lret
lcall
push
imul
xchg
rol
out
mov
sbb
scas
test
jmp
sub
imul
sbbl
fdivl
or
lods
add
mov
jno
jp
cmp
and
sub
aas
rorl
inc
negb
roll
mov
adc
pop
popf
mov
gs
sbb
cmc
dec
js
push
xor
jno
or
lock
cmp
cmpsb
cli
pop
adc
mov
sub
xor
and
and
stc
rolb
test
jo
and
mov
ds
xor
sbb
fldt
or
hlt
scas
push
ljmp
out
and
mov
cli
pop
sbb
cmpsb
loopne
std
imul
fcomps
pop
cltd
sbb
push
and
mov
dec
ret
in
jno
shrl
sbb
mov
push
mov
mov
out
lods
sbb
or
out
movsb
mov
pop
and
loop
ret
mov
inc
mov
in
mov
or
pop
add
into
sub
mov
adc
call
in
outsb
lds
call
lret
js
bound
rorb
mov
xchg
orl
test
adc
cmp
in
mov
jmp
insl
sbb
jmp
jbe
mov
lahf
adc
dec
out
mov
pusha
inc
pop
and
add
lret
push
mov
rorl
mov
sub
add
repz
jns
mov
and
xor
adc
jbe
dec
out
inc
lock
cwtl
sub
les
gs
add
jge
nop
mov
xor
xor
mov
das
mov
push
pop
dec
add
inc
dec
in
mov
push
shr
loop
dec
push
xchg
dec
and
test
adc
xor
adc
enter
imul
aam
lret
push
mov
pushf
xor
jne
out
adc
faddl
xchg
push
jne
xchg
mov
adc
and
pushf
int3
xlat
sub
xor
add
cmpl
in
push
sub
sti
fs
sahf
cmpsb
jecxz
xchg
dec
call
adc
mov
imul
pop
mov
sbb
mov
cwtl
mov
and
xor
orl
sti
lds
jb
sbb
call
and
xor
pop
or
dec
pop
in
jo
xchg
cwtl
ss
inc
loopne
cmc
gs
inc
cltd
push
xchg
push
rorl
xchg
sub
test
sub
fcmovnu
aam
mov
or
cmp
aam
fldt
push
icebp
mov
ljmp
fsub
sub
rolb
pop
inc
es
xor
sbb
xchg
rcrl
dec
notl
sbb
mov
xor
das
in
xchg
sub
jb
arpl
int
xor
test
shlb
rcrl
mov
leave
and
push
lret
push
adc
adc
push
push
stc
jl
loope
aaa
and
xlat
mov
push
push
lea
fistps
pop
sub
jg
mov
stc
fwait
push
inc
jne
jne
mov
enter
out
push
mov
daa
call
mov
lock
cmp
popa
inc
mov
sbb
sub
or
scas
outsb
dec
jo
jge
pop
adc
in
pop
lahf
pop
inc
movb
lea
sub
cwtl
inc
dec
cltd
xchg
pop
mov
push
mov
insl
pop
testl
jns
mov
mov
cmp
pop
cld
mov
xor
or
lahf
scas
mov
or
fwait
sti
arpl
call
pop
push
iret
mov
add
or
add
fiaddl
jae
fs
ret
rclb
popa
std
xor
sbb
cltd
aam
jne
mov
pop
icebp
push
jge
mov
insl
inc
add
or
and
rcll
jnp
jae
fsts
stos
xor
or
push
mov
sub
icebp
sub
xchg
and
jecxz
aad
imul
or
sub
dec
dec
jle
xchg
in
add
xor
mov
jnp
xchg
outsb
mov
mov
xchg
sub
int
xor
mov
jge
xchg
sub
lret
push
enter
mov
mov
mov
sahf
pop
xchg
sbb
fstpl
in
and
sbb
test
mov
mov
xchg
cmp
cmovae
dec
aad
jl
xchg
call
xor
add
scas
aas
js
stc
cmp
sbb
sarb
icebp
cmp
mov
leave
mov
out
ret
daa
je
add
mov
and
pop
sti
in
test
inc
cmp
dec
jne
test
fisubs
sub
inc
and
mov
mov
cld
arpl
jle
and
jne
add
clc
push
hlt
xor
call
lret
cmp
pop
outsb
mov
sbb
cld
push
rcll
in
jnp,pt
or
gs
es
mov
in
ja
je
sbb
insb
ja
es
sbb
add
loopne
repnz
fldcw
pop
scas
jb
mov
test
or
xor
idiv
lcall
popf
jp
aad
mov
jns
pop
pusha
mov
aaa
rorb
sub
mov
and
ret
imul
xor
sbb
inc
sti
jbe
cld
pop
dec
aaa
push
gs
push
fstpt
mov
test
rclb
inc
aam
xor
jle
test
sti
and
int3
rcrb
ja
ret
cmpl
lock
out
daa
mov
out
jno
cs
xchg
pop
into
mov
int
adc
xor
ret
sahf
xchg
aam
sub
into
lcall
in
lea
jmp
cmpsl
xchg
test
push
scas
dec
xlat
sti
daa
fistl
inc
inc
sub
jge
mov
jge
pop
shr
frstor
or
xor
mov
sub
loopne
ja
iret
jno
cmp
sti
lods
push
cmp
and
sbb
js
mov
and
addr16
xchg
mov
jne
mov
mov
jmp
and
fadds
js
shrb
pop
out
daa
mov
push
call
mov
xor
add
and
fs
dec
repnz
outsw
aad
xchg
sub
jge
jge
push
pop
mov
and
imul
sahf
arpl
push
cmpsb
lret
aam
dec
push
mov
sbb
in
insb
cmp
fsubp
lock
repz
mov
jnp
push
sbb
aam
add
mov
adc
sbb
lds
push
or
dec
loop
sub
mov
or
jge
in
shrb
pop
jo
mov
cmp
mov
adc
sbb
sub
fbstp
scas
xchg
jmp
xchg
lret
mov
mov
pop
andnps
dec
cltd
testb
in
imul
mov
loop
stos
dec
aad
out
mov
push
mov
mov
lods
sbb
repz
xchg
shll
push
xor
mov
sbb
stc
ret
lds
in
out
cmp
gs
xor
mov
xor
dec
fwait
cld
les
loopne
sbb
inc
mov
and
mov
lcall
xchg
mov
inc
push
loop
addl
xchg
jle
xchg
decb
cmc
arpl
mov
in
fucomi
xchg
push
pop
sti
cmp
imul
movsb
loopne
push
push
xchg
pop
pop
sbb
xchg
mov
mov
imul
and
outsl
call
jle
dec
mov
mov
add
shrb
aam
lcall
lea
or
xchg
cmp
insl
jp
inc
pop
dec
inc
addl
cmp
repz
mov
sub
cmp
sub
outsb
aad
mov
adc
ljmp
and
xor
xor
ds
sub
sub
and
shl
adc
sbbb
xchg
shlb
jg
cmc
in
test
fisubrs
mov
test
hlt
inc
cmpsb
xchg
fnsave
fwait
aas
add
addr16
subb
shll
cmp
imul
jne
in
lret
sti
xchg
out
dec
pushf
add
and
xorl
and
sbb
loopne
shlb
mov
sti
xor
imul
jns
push
rcrl
mov
cmpsl
subl
aaa
into
mov
lcall
cltd
inc
out
movsl
xor
sub
add
mov
mov
out
inc
jns,pt
lds
les
and
into
and
adc
daa
sub
jne
mov
loopne
xor
mov
insl
dec
jb
jg
mov
jecxz
test
push
add
mov
cmp
fucomip
mov
pusha
jo
or
and
popa
push
outsb
mov
pop
xchg
scas
pop
clc
mov
into
sbb
mov
test
jno
dec
out
daa
and
ss
or
sbb
sbb
fxch
ja
sub
pop
fnsave
cltd
repz
jnp
mov
mov
out
dec
loope
pusha
rclb
and
inc
lcall
test
scas
fbld
loopne
xchg
mov
mov
cltd
mov
push
push
xor
mov
bound
int3
pop
lods
lods
ret
sub
lcall
test
xchg
mov
inc
roll
sub
mov
je
cmc
dec
call
pop
fldcw
lds
int
pop
out
and
dec
icebp
dec
jl
adc
mov
mov
inc
xor
fisubl
or
push
pop
pop
pop
idiv
cmp
xchg
gs
sbb
jp
shll
orl
lret
xor
aaa
dec
invd
jp
pushf
sub
lret
scas
or
sub
sti
mov
xchg
push
mov
jmp
cmp
jmp
fldt
lret
std
mov
and
arpl
lock
push
addr16
lret
pop
stc
xorl
popf
mov
pop
inc
cmc
popf
cmpsb
push
cs
push
cltd
dec
out
mov
lds
mov
pop
aam
inc
jge
icebp
adc
shll
call
ds
xchg
mov
xor
ja
or
insl
inc
fwait
mov
dec
cwtl
mov
leave
sbb
mov
loop
scas
jno
sub
adc
or
xchg
fs
pop
push
dec
mov
jmp
ret
push
ds
call
push
xor
cs
jmp
in
aad
mov
cwtl
repz
into
push
jmp
je
inc
dec
lahf
insb
dec
mov
sbb
add
mov
jecxz
data16
rcr
xlat
sbb
das
neg
insb
pop
mov
test
int3
out
cmp
xchg
dec
imul
out
sub
rclb
dec
mov
mov
inc
scas
je
mov
jl
in
jmp
xor
mov
mov
inc
dec
mov
jo
fwait
icebp
push
push
shrb
lds
insb
cwtl
jmp
sarl
outsb
add
sub
bound
mov
and
add
xor
out
dec
sti
pop
iret
movsl
push
and
scas
ret
cmc
pop
jp
xchg
in
pop
neg
imul
imul
in
aas
testl
orl
sub
pop
cwtl
repz
xchg
cmp
out
jecxz
dec
mov
push
adc
sarb
in
cmpsl
loop
aas
pop
mov
cmp
cmpl
sbb
xchg
nop
cld
push
mov
mov
jmp
mov
cld
sbb
sub
mov
mov
cltd
add
fidivs
pusha
iret
lds
xchg
sbb
push
push
jge
nop
mov
cmc
jp
cli
mov
mov
aam
test
inc
adc
je
pusha
mov
daa
cmp
push
sbb
and
in
adc
stos
pusha
dec
enter
in
mov
cmp
adc
adc
pop
xchg
mov
push
mov
sti
sub
mov
xchg
sub
mov
jne
int
dec
arpl
push
sub
ja
inc
lea
adc
sarl
jne
or
cmpb
jmp
jle
in
jge
inc
push
inc
mov
sub
xlat
lret
inc
rcrb
lds
cmp
jae
dec
jg
inc
mov
and
mov
insl
sub
out
in
jo
push
mov
adc
jle
mov
in
jle
clc
arpl
ret
sahf
imul
jg
in
adc
pop
loope
mov
pop
aam
sub
out
cmp
xor
push
jl
mov
mov
cmp
int3
adc
lahf
or
push
cli
lds
movsl
mov
test
and
mov
iret
addr16
int3
jle
jno
pusha
lods
repz
mov
cmp
adc
repnz
shll
daa
adc
int
fcomi
enter
and
sub
dec
rol
ljmp
roll
cmpb
add
dec
dec
pop
push
mov
test
inc
cltd
mov
ret
xchg
xchg
lea
les
inc
stos
dec
int
mov
mov
andl
ds
lds
lret
jbe
pop
insl
out
test
cmp
lods
cmp
outsl
xchg
sbb
lcall
adc
push
and
adc
mov
push
daa
xorb
iret
or
mov
in
into
mov
push
fwait
ljmp
pop
mov
lret
paddsb
jb
xchg
popa
addr16
push
fdiv
and
mov
pop
fcmovnu
push
sub
sbb
std
xchg
xchg
adc
xchg
stos
cli
aaa
outsb
arpl
inc
jecxz
pop
xchg
pop
fcompl
mov
xchg
hlt
mov
sbb
dec
inc
loope
mov
or
adc
mov
adc
stos
jmp
and
aas
pop
jns
mov
mov
dec
das
and
mov
jge
loopne
pop
xor
sbb
sbb
test
repz
pop
lsl
clc
int3
int3
and
sti
or
xor
xchg
xor
inc
cs
mov
packuswb
ror
leave
cmp
fdivs
daa
mov
clc
inc
xchg
xchg
jecxz
cmp
add
mov
pop
push
sti
lods
inc
testl
shrb
ja
push
bound
aad
int3
inc
dec
data16
dec
mov
mulb
push
outsl
aad
xchg
shrb
out
fwait
jp
inc
pop
sti
jle
and
pop
sbb
sahf
sbb
lods
cmp
in
and
xlat
bound
das
imul
fs
cwtl
aam
push
pusha
scas
das
adcl
and
jmp
xchg
dec
sarb
or
cs
repz
mov
cltd
dec
imul
sbb
test
cmp
mov
jecxz
ja
ds
loope
mov
or
dec
or
jno
shrb
stos
dec
mov
stos
cmp
push
cmpl
daa
les
arpl
hlt
jmp
xchg
leave
sahf
imul
push
xchg
cmc
mov
bound
push
in
lock
jno
ss
add
sbb
stos
sbb
loopne
enter
mov
stos
sub
jmp
pop
pop
push
jg
sub
js
dec
xor
ret
js
outsl
fnstcw
inc
dec
sbb
aas
and
mov
test
mov
rcrb
mov
sbb
push
sub
jp
loope
xor
lcall
insb
lods
mov
mov
jno
fs
inc
fucomi
clc
outsl
inc
pop
stos
push
cmp
stos
and
insb
xchg
testb
rolb
mov
jo
call
imul
mov
shufps
jmp
inc
pop
out
lods
ret
sbb
insb
mov
shlb
fdivp
xchg
and
jne
std
mov
js
or
xchg
clc
and
fstpt
test
mov
mov
rcrl
mov
fstps
adc
jl
decb
dec
inc
push
repz
fidivs
cwtl
insb
mov
mov
inc
movsb
or
inc
int
into
add
cmc
xchg
rorl
sarl
jbe
orl
pop
mov
call
insl
fiadds
lret
lock
jb
gs
into
movsb
ficompl
add
test
cmpsl
cmp
lret
stc
sub
enter
mov
jg
sub
sub
repz
jge
aas
fdivl
xchg
cmp
xlat
and
xchg
hlt
cmp
dec
daa
in
sbb
xchg
bound
movsb
mov
enter
fists
call
test
aaa
push
dec
and
cmp
mov
aad
jb
divl
adcb
enter
inc
jbe
dec
out
xor
mov
push
stos
push
call
test
sub
cwtl
sbb
cmc
shr
clc
xchg
in
lahf
and
mov
sub
std
xchg
data16
push
ja
and
sub
or
jb
sar
shrd
cmp
add
fldenv
out
jns
outsl
jle
mov
dec
arpl
mov
call
mov
and
adc
test
mov
cmp
dec
or
mov
insl
jmp
and
data16
fwait
outsl
test
mov
adc
xchg
pop
xor
sahf
lea
lcall
jnp
lahf
mov
push
addr16
push
sub
stc
out
sub
clc
lods
push
mov
cwtl
jbe
loop
pop
jb
push
and
adc
pop
andl
add
or
xchg
sti
jg
mov
hlt
and
cltd
push
bsr
das
mov
lods
test
push
adc
loopne
sbb
cmp
stos
push
lods
in
mov
dec
aam
iret
xor
adc
out
jns
sub
xchg
arpl
dec
fildl
ljmp
mov
xchg
stos
or
mov
aas
pop
sub
popa
xorb
sbb
sbb
and
test
sbb
in
jmp
mov
in
out
mov
xor
cmp
jnp
aad
imul
fstl
dec
jns
imul
mov
mov
cwtl
aad
iret
aam
dec
xchg
inc
pop
dec
scas
and
rcrb
fildl
jge
jecxz
out
mov
or
sub
pushl
xor
arpl
test
dec
jns
jmp
movsb
and
jo
dec
jae
fwait
jb
popf
push
push
clc
lock
add
mov
fistps
sbb
pop
les
dec
sub
inc
mov
rcll
bound
repnz
fldcw
adcl
pop
dec
shl
pusha
movsb
out
cli
scas
xchg
xor
cmp
insl
push
xchg
xor
cmp
adc
movsl
outsb
sub
pop
shll
lcall
pop
mov
and
je
jmp
and
out
or
cwtl
jl
cmp
inc
addb
jns
inc
fmul
leave
cltd
outsl
mov
pop
inc
movsb
add
jge,pn
xchg
jb
out
je
shrl
xchg
rol
mov
jmp
aaa
inc
sub
cli
fists
call
pop
push
pop
jle
lods
jnp
pop
mov
mov
es
les
fcmovnbe
push
into
imul
mov
dec
push
xor
out
cli
xor
popf
xor
add
loopne
shlb
jnp
ja
ljmp
mov
pop
jg
jge
out
test
mov
out
pop
jo
dec
dec
repz
jp
clc
xlat
clc
faddl
pop
cwtl
and
jmp
sbb
out
jne
pop
jp
adc
xchg
mov
test
cmp
sub
fsubrs
xchg
mov
bound
mov
stc
mov
lds
loope
dec
das
pop
cmpsl
jg
xchg
loopne
iret
sti
pop
out
push
mov
mov
imull
mov
and
les
sub
cmp
in
jns
push
icebp
popl
xlat
xor
push
in
mov
iret
jb
push
sbb
xchg
push
sbb
repz
lret
insl
cmc
cmpsb
pop
imul
mov
dec
dec
out
adc
jns
sahf
fmuls
jmp
shll
test
jno
and
cmpsl
es
xor
jnp
mov
dec
imul
adc
cltd
sub
cwtl
adc
adc
arpl
xchg
insl
pop
adc
adc
rcll
xchg
mov
ss
ds
xchg
mov
imull
aad
and
rorb
js
in
pmuludq
stc
popf
jbe
xor
and
loopne
lock
dec
insb
shlb
ficomps
pop
or
data16
push
hlt
dec
imul
adc
imull
sbb
mov
mov
mov
mov
xorb
pop
out
push
fisttpll
bound
sbb
mov
rorl
push
and
nop
mov
rol
sbbl
push
scas
fcoml
aad
push
paddd
dec
sbb
rclb
mov
negl
mov
push
pop
xchg
insl
loop
pop
movsl
pop
je
adc
test
fsubp
popf
rcrl
xchg
jns
jnp
stos
sbb
push
jno
jne
jne
loopne
je
in
sub
jmp
mov
sbb
dec
push
pop
dec
das
js
loop
insl
ds
mov
xor
bound
jb
add
xor
or
inc
inc
test
imul
ret
sbb
sub
cmp
cmc
subb
cwtl
aas
sub
inc
jbe
outsb
fisubrs
ss
xchg
jns
inc
and
inc
jp
xor
fidivrl
popa
pop
mov
mov
xchg
push
movsb
add
add
call
cmp
inc
xchg
mov
hlt
inc
dec
jmp
inc
enter
ljmp
mov
adc
in
pop
adcl
lods
inc
sub
push
mov
sbb
clc
mov
lock
xchg
sarb
adc
jecxz
dec
add
push
dec
test
in
aaa
dec
dec
add
pop
mov
add
inc
xor
xchg
dec
lahf
popl
mov
icebp
cs
in
pop
inc
cmpsb
mov
subl
or
stc
xor
aad
addb
scas
cltd
lcall
push
inc
mov
insb
cltd
mov
add
pushf
cmc
jno
dec
hlt
int3
aad
xchg
lret
sub
fbld
cmc
xchg
jge
xchg
pop
gs
and
cmp
loopne
or
data16
test
mov
scas
fndisi(8087
ss
adc
mov
and
sub
out
add
fcomip
cmp
notb
sbb
cmp
scas
fmul
push
push
and
out
fcoms
mov
jge
scas
or
sub
icebp
sub
xor
in
dec
cwtl
sub
sbb
adc
sbb
push
xchg
gs
pop
mov
inc
sbb
adc
mov
jbe
adc
mov
fistpll
xchg
fdivp
or
int
repz
pop
lret
fbld
adc
pop
pop
jns
jae
adc
fisttps
scas
cmp
xchg
aas
cmp
jg
inc
mov
out
dec
mov
mov
mov
fwait
mov
pop
jnp
sub
dec
test
mov
lahf
test
mov
mov
aad
cltd
pop
sbb
jno
movl
sbb
mov
cmp
or
pop
fwait
jno
inc
jae
mov
or
jmp
cmpsb
in
stos
sbbb
add
push
jnp
loop
mov
out
dec
test
pop
xchg
jle
loopne
jnp
pop
stos
lcall
lods
dec
adc
pushf
and
inc
repz
mov
cmpsb
mov
cmp
loope
das
icebp
lahf
mov
xchg
add
and
je
add
cmpsb
in
sub
jg
jmp
add
pop
push
or
sub
xor
pop
push
fidivs
and
sbb
shll
push
imul
cmp
jg
sahf
je
bound
cltd
mov
std
and
sbb
out
lds
or
cmp
mov
sbb
xchg
leave
sub
sub
inc
lcall
jbe
mov
aad
leave
pop
mov
neg
insl
mov
xor
inc
and
push
jl
jg
and
sarl
cmp
sub
push
add
icebp
les
adc
mov
sub
sbb
sub
scas
imul
or
pushf
mov
or
mov
pushf
imul
cmp
aaa
sub
test
mov
das
imul
fldt
pop
push
ret
mov
popa
les
subl
push
dec
xchg
mov
cli
mov
fcompl
push
xor
xor
repz
sbb
inc
daa
ljmp
or
stos
shlb
popa
sbb
aaa
out
and
lea
pop
ret
cmp
mov
bnd
nop
mov
pop
cmp
and
cmp
mov
shl
sar
and
sub
lcall
addl
cmp
pop
dec
push
mov
pop
lret
loopne
jp
mov
push
or
inc
and
pop
sub
mov
mov
nop
dec
popf
sub
jp
mov
mov
mov
jns
gs
mov
cmc
mov
loop
stc
ficoms
xchg
sbb
mov
xchg
mov
inc
aam
push
mov
addb
pusha
das
mov
sbb
mov
out
lea
inc
cmpl
mov
shrl
shll
pop
shlb
jmp
inc
cld
imul
jae
inc
add
pop
fcmovnbe
bound
mov
sbbb
jo
enter
xchg
add
adc
movl
roll
inc
pop
jns,pn
push
push
lock
int3
xlat
rcll
fstp
rolb
pop
inc
pop
jbe
push
cmp
pushl
leave
jle
xor
xor
xor
bound
punpckhdq
scas
xchg
or
loope
stos
jge
iret
inc
in
enter
out
xchg
push
xchg
jo
inc
fs
mov
cld
mov
outsb
subb
daa
pop
add
cmc
cmp
insb
adc
dec
pusha
adc
jl
mov
jbe
push
cld
lret
xor
subb
pop
push
das
fcompl
push
add
data16
testl
sub
mov
dec
insb
cs
sub
insl
sbb
mov
mov
dec
int
xchg
mov
cltd
push
fldt
stos
xor
out
inc
push
adc
inc
and
push
mov
mov
mov
inc
jg
cs
adc
jno
lock
mov
pushf
and
add
or
cltd
mov
fwait
dec
pop
iret
xor
xchg
mov
or
mov
repnz
aad
fnstsw
sahf
jle
test
fstps
pop
lcall
in
sub
xchg
pusha
jno
dec
test
in
mov
jl
jae
mov
imul
pop
nop
dec
daa
leave
mov
add
jne
into
sub
cltd
test
jbe
jnp
negl
cmp
cltd
or
sbb
or
jecxz
outsb
shl
push
push
aas
xor
dec
cs
out
stos
pop
orb
pusha
mov
stos
pop
mov
sub
jae
ljmp
adc
jb
out
fdivr
adc
inc
sarl
xchg
jnp
outsl
mov
ja
push
pop
pop
popa
adc
repz
jecxz
rol
cli
push
or
jae
mov
xchg
in
mov
xchg
adc
fwait
lret
andl
sti
push
jle
ljmp
cmc
sti
decb
loopne
mov
gs
enter
xlat
jo
inc
inc
push
cmp
mov
popa
dec
and
mov
popa
shrl
lret
mov
test
ja
aam
leave
mov
add
adc
mov
jb
scas
test
loop
add
push
xchg
in
ja
inc
out
clc
jg
fbstp
sbb
pop
cld
into
sti
out
mov
in
movsb
cmp
and
es
loope
iret
or
mov
xchg
pop
fwait
xor
add
xor
pop
in
ret
fldt
andb
and
loope
repnz
and
mov
mov
das
dec
mov
lret
loopne
cwtl
movsl
negl
scas
fwait
ret
add
push
jno
push
icebp
ret
pop
cltd
scas
shlb
mov
je
icebp
and
fisubrs
loop
jns
out
popf
add
cwtl
test
out
mov
test
pop
das
push
xchg
enter
mov
icebp
test
jns
add
add
or
sahf
mov
aam
stos
outsb
ret
push
dec
adc
cwtl
cmpsl
mov
inc
xor
push
push
cmp
out
call
or
adc
push
mov
stos
jmp
aaa
jae
jp
or
sarl
aad
mov
sub
xchg
js
add
repnz
test
adc
push
sub
jbe
jl
into
jecxz
jne
aaa
mov
push
nop
ret
repz
icebp
pop
arpl
xchg
mov
or
cmpsl
xor
stos
out
daa
out
mov
in
pushw
out
pop
push
cmpsb
outsl
fsubs
cmp
sub
movsb
jno
or
sbb
cmp
loope
out
int
das
repnz
daa
das
cmp
jl
shll
pop
push
push
outsb
sbb
add
into
bound
cmp
jecxz
icebp
outsl
mov
shlb
mov
add
js
jmp
test
int3
dec
aas
daa
add
lret
lods
push
or
cmpsl
iret
test
inc
xorl
aaa
push
mov
mov
lods
xchg
sub
aam
out
lret
movsl
sbb
mov
faddp
xchg
imul
xchg
es
mov
or
cmp
les
hlt
das
daa
cwtl
rorb
stos
leave
rcll
xor
sbb
les
mov
pop
cmpsb
mov
mov
adc
dec
sbb
and
rcl
push
sub
mov
push
lods
adc
and
sub
xor
xchg
imul
addr16
mov
insl
sahf
adc
mul
inc
sub
clc
mov
jmp
sbb
jecxz
vsubsd
stos
stc
pop
push
clc
cmp
inc
in
xchg
fadds
mov
push
inc
mov
dec
movsl
mov
dec
lret
es
jge
pop
les
mov
and
sub
inc
mov
push
data16
out
lret
xchg
inc
fidivrl
scas
xchg
cmp
jno
and
rclb
insl
ja
pop
popf
mov
jns
xor
and
lret
daa
inc
xor
mov
cld
loope
or
popf
sub
dec
ss
mov
js
pop
xor
in
ja
dec
mov
xchg
pop
les
or
clc
or
pop
data16
clc
dec
or
insl
call
sub
xor
mov
std
mov
jecxz
sub
push
xor
fld
aaa
pop
outsl
stc
sub
mov
mov
in
pushf
test
mov
pop
jl
inc
shlb
addr16
test
dec
popf
xchg
jp
mov
sub
mov
dec
xchg
loopne
jae
add
pop
jle
daa
fsubrl
stc
popa
or
and
dec
mov
push
cli
stos
adc
add
loope
test
ljmp
bound
and
pushf
or
dec
test
mov
lea
and
pop
scas
popf
mov
jno
pop
stc
fcmovnb
xlat
stc
in
and
fildll
movsb
out
nop
and
stos
mov
jg
daa
mov
sub
adc
xchg
jecxz
sbb
and
and
pop
cmp
mov
lea
test
clc
imul
cli
or
add
xchg
sahf
mov
cmp
or
inc
fiadds
jnp
movsb
inc
jmp
in
lods
dec
idivb
mov
stos
push
popf
mov
leave
ret
in
cwtl
pop
les
jnp
mov
mov
inc
leave
add
xlat
out
push
imul
push
ljmp
loope
lcall
dec
add
test
xor
adc
sub
in
pop
lods
in
add
ret
bound
jb
popa
imul
pop
insb
shlb
enter
and
mov
aam
mov
mov
stos
pop
or
inc
cwtl
sub
dec
push
jb
jnp
ret
lahf
movsl
or
jmp
xorb
cli
add
and
mov
scas
and
mov
out
jbe
or
lods
pusha
or
out
ljmp
xchg
pop
cltd
and
fdivr
fmul
mov
loopne
sbb
sbb
push
std
stc
xchg
mov
mov
jmp
mov
js
mov
mov
addr16
xlat
imul
jmp
and
out
lret
add
cmp
ljmp
push
dec
mov
movsl
adc
addr16
fmuls
repz
aad
cmc
mov
in
sahf
push
xor
int
sbb
mov
add
ja
mov
loopne
fdivrl
cmpsl
mov
inc
pop
nop
inc
daa
pop
icebp
pop
lds
xchg
das
ljmp
cmp
add
rorl
dec
dec
pop
adcl
adc
into
pusha
cli
sarb
cmp
inc
std
std
jecxz
aam
push
decl
addb
cmc
ljmp
nop
rcrl
xor
dec
xchg
jae
sti
bound
scas
leave
in
flds
sub
mov
je
mov
mulb
out
mov
imul
add
xchg
jb
add
cmp
mov
adc
inc
cmp
in
push
dec
sbb
xchg
jl
xorb
mov
jl
fisubrs
dec
cwtl
cmpsl
cmpsb
mov
test
cmp
sbb
jmp
lahf
jb
sub
mov
push
xchg
mov
push
cmp
inc
jecxz
lahf
std
sbb
addr16
or
push
xor
pop
in
insl
ja
mov
out
das
xchg
ja
rcr
cli
jo
shlb
imul
in
icebp
jecxz
sub
mov
mov
or
mov
hlt
jne
push
fisttpll
mov
mov
sub
out
mov
xchg
ja
gs
gs
pop
rolb
in
fisttps
push
xchg
push
cltd
or
dec
stc
int3
je
cld
jae
dec
adc
jnp
mov
aad
out
outsb
xlat
inc
fstps
arpl
clc
sarb
insl
pop
data16
sub
mov
leave
push
fwait
mov
rol
clc
popa
fnsave
cmp
add
jbe
and
cmc
mov
inc
sahf
in
inc
inc
sahf
dec
mov
jnp
jno
in
adcb
call
insb
push
mov
push
ret
out
dec
mov
fsubr
or
notl
lahf
or
enter
icebp
pop
or
cli
in
push
fucomp
dec
mov
insb
ds
jb
sahf
lahf
pushf
and
rclb
in
enter
push
sub
push
mov
daa
inc
add
jae
nop
cmp
mov
add
aaa
aaa
lods
inc
loopne
xchg
cmp
jb
mov
pop
inc
sarb
pop
push
in
pusha
jnp
movsb
pusha
icebp
push
loope
inc
movsl
test
push
lahf
out
or
and
dec
pop
cmp
pushf
fbld
push
mov
decl
and
hlt
into
pop
mov
add
popa
lret
mov
xchg
pop
cs
mov
cmp
imul
lock
aaa
loopne
pop
shrb
int3
mov
mov
stos
jbe
mov
xchg
jmp
lods
shlb
push
fs
lods
sbb
jbe
inc
pop
push
ss
adc
xor
gs
dec
cmp
loopne
jmp
cmp
jo
rorb
pop
and
jae
fs
jmp
stc
js
pop
cli
into
dec
push
cmp
lcall
leave
jge
leave
jle
ljmp
fcoms
mov
xlat
adc
and
and
jge
stc
aam
pop
movsl
jecxz
ss
xchg
inc
dec
or
orb
mov
mov
es
add
pop
sbb
cltd
testb
jle
roll
adc
stos
pop
loopne
mov
lcall
mov
xor
flds
mov
movsl
xor
in
das
cmp
adc
jecxz
outsl
inc
ror
stc
repnz
or
test
data16
fldenv
push
lret
jmp
dec
mov
adcl
or
and
or
push
pop
xor
xor
xchg
mov
pusha
and
cmp
repnz
mov
push
push
popa
push
imul
int3
ret
push
ret
pushf
mov
cli
out
xchg
mov
icebp
and
stos
push
scas
sbb
xor
cmp
in
into
jo
inc
insl
jo
popf
xor
sbb
scas
adc
jb
rcll
ret
inc
sahf
in
xor
push
fnstenv
rclb
shrb
int
push
jle
mov
jns
mov
mov
sub
pop
cmpsl
jo
xchg
in
and
pushw
xchg
cmp
cmpsb
sub
cltd
lods
push
mov
jp
outsl
ss
clc
sub
mov
test
fwait
sub
add
mov
ret
std
dec
loop
iret
inc
aas
insl
dec
cli
mov
adc
push
insl
jb
shl
pop
shrb
push
cld
gs
xchg
fs
jo
push
jge
xor
adcl
mov
sub
fisttps
repz
inc
sbb
mov
ret
jo
movsb
out
jmp
or
push
out
dec
adc
pop
cltd
clc
and
sub
sbb
mov
rcl
dec
pop
mov
pop
js
mov
push
and
pop
jg
jno
es
xor
inc
stos
jne
and
test
jmp
lahf
dec
push
cmp
push
fwait
or
mov
adc
nop
dec
sbb
notb
in
or
cmp
add
jb
lahf
push
faddp
mov
xchg
xlat
jp
inc
aaa
mov
call
sub
pop
and
add
int
push
test
lahf
ret
es
loope
mov
out
cmp
mov
aad
adc
and
mov
aad
pushf
jne
lret
add
es
push
std
dec
cmpsb
fldcw
mov
adc
fnop
add
cmp
fsts
sbb
mov
enter
pop
and
gs
inc
ret
into
dec
mov
cwtl
mov
mov
dec
and
push
jo
push
mov
jmp
rep
pop
mov
jae
ds
es
stos
out
roll
and
fcoms
sbb
xchg
fdiv
les
sub
cmp
popf
inc
cltd
aaa
pop
add
adc
ljmp
cmpsb
imul
out
sub
cmpb
adc
adc
aad
add
cld
insb
test
xchg
sub
xlat
and
test
sahf
std
sbb
out
mov
insb
adc
jp
popf
outsb
xorl
inc
std
gs
push
sub
dec
sti
cmp
cmp
xchg
pop
inc
fwait
push
inc
jl
inc
mov
inc
inc
mov
repz
rorl
and
sbb
cli
in
rcll
into
xchg
hlt
xor
cmp
fdivrs
in
imul
inc
addl
adc
mov
push
jo
jo
test
insb
cld
sub
jecxz
push
push
jbe
pop
push
in
xchg
es
pop
push
fucomi
push
and
int3
pop
jl
sub
pop
movb
mov
test
mov
cmc
pushf
out
mov
sbb
je
xor
test
scas
adc
pushf
push
subb
repz
in
test
push
decb
lcall
jne
pop
jae
outsb
lods
and
push
leave
jo
mov
jmp
adc
scas
in
jo
jl
mov
xchg
mov
data16
jbe
adc
cmpsl
pusha
mov
fstpl
flds
jo
ficompl
push
dec
jl
mov
fldpi
js
mov
sbb
cltd
jae
lcall
pop
or
xlat
sub
fidivrl
inc
lods
das
xchg
ds
shrb
xchg
ret
push
xor
mov
lret
adc
add
movsb
jno
mov
scas
aaa
jp
lock
push
adc
add
cmp
mov
in
shlb
sahf
xchg
jl
mov
xor
lahf
sub
lret
jo
sti
mov
lea
mov
sbb
mov
cmpsb
fstpt
repnz
xlat
out
jmp
cli
dec
jb
in
and
cld
out
enter
xor
imul
xor
lret
inc
xchg
push
inc
scas
rorb
fld
jne
sahf
jecxz
ss
mulb
shlb
fdivrl
lock
insl
popf
enter
xchg
adc
sahf
xor
lods
jae
in
pop
ja
or
inc
mov
mov
in
jb
or
ljmp
xlat
mov
push
in
sbb
jo
leave
out
sub
jno
jle
jmp
inc
lods
pop
femms
adc
out
xchg
sbb
sbb
push
push
popf
pop
push
dec
clc
mov
push
icebp
pop
mov
enter
push
es
clc
xchg
push
push
test
sbb
add
sub
jle
mov
aas
mov
mov
or
or
push
and
out
cmc
into
lea
jae
and
roll
jo
and
add
cmp
or
clc
sti
cmp
inc
add
in
dec
add
cmp
ret
cmp
mov
movsb
enter
xor
xor
scas
rcrl
cltd
mov
in
xorb
loop
hlt
fdiv
dec
int3
pusha
fdivr
cmpsl
add
or
add
cmc
inc
push
and
out
test
loope
xor
iret
jne
sub
jp
sub
gs
xor
scas
and
push
push
adc
ficompl
push
push
ja
popa
hlt
mov
mov
cmp
movsl
add
out
je
repz
cmp
mov
sub
shrl
sub
aaa
inc
add
push
std
shr
cmp
scas
sbb
test
sub
test
jp
test
push
sub
dec
pop
leavew
inc
adc
mov
outsb
ret
and
iret
sahf
xchg
popf
push
insb
aam
and
sub
hlt
in
int
xchg
jo
mov
sub
out
das
sbbb
ret
arpl
add
sbb
pop
out
and
bnd
sbb
loop
insb
jl
push
xchg
dec
in
lret
repnz
dec
dec
aas
mov
movsl
lds
jne
cli
les
sbb
enter
shl
push
call
cmc
ret
decb
push
frstor
inc
insb
lret
js
xchg
mov
add
pushf
fadd
bound
sbb
lea
and
or
push
sti
in
push
push
xchg
jbe
insl
inc
aad
or
pushf
sbb
int
dec
call
clc
test
jb
add
in
mov
or
data16
and
into
push
fs
fiaddl
sbb
les
lods
cmp
mov
fcoml
hlt
movsl
sub
xor
push
mov
mov
loope
inc
add
push
movsl
jne
add
js
movsl
adc
cltd
mov
add
outsl
sbb
les
mov
cs
dec
fstps
lods
cmp
mov
in
jmp
ret
jo
leave
mov
aas
popf
sbb
add
movsw
sub
sbb
popa
sbb
xor
rorl
leave
stos
fmuls
insb
pop
loop
cli
ret
xor
dec
lock
sbb
cltd
hlt
int3
les
rorl
subb
push
sbb
pop
xchg
dec
pusha
cwtl
xor
xor
popa
inc
daa
cmp
bound
mov
je
inc
xlat
sbb
ss
fwait
xor
dec
pop
cmp
jg
cmp
mov
cltd
ljmp
mov
jg
in
sub
out
mov
daa
bound
loop
call
out
push
adc
sbb
xchg
sub
cltd
out
cld
cmpsl
pop
subl
nop
sarb
fisttpll
ds
and
mov
and
pusha
dec
xor
cmp
pop
push
shl
aaa
and
xchg
imul
scas
xchg
fsubp
stc
aaa
data16
xchg
aam
mov
dec
pop
faddl
push
and
in
negb
nop
inc
mov
insl
adc
mov
push
cmp
cld
pop
sbb
mov
out
dec
push
arpl
or
push
jne
das
stc
mov
push
out
out
adc
add
mov
aam
fsubs
add
mov
popa
loopne
ss
aaa
xchg
int
leave
xchg
insl
hlt
repnz
sti
jnp
out
pop
push
or
imull
int
shl
leave
dec
cli
fwait
into
sub
popf
notl
out
ds
add
cmove
pop
imul
addr16
xchg
outsb
xor
es
push
jae
loop
xchg
adc
push
pop
jl
insb
pop
mov
or
fs
jns
cmp
add
dec
shr
pop
repnz
loop
idivl
mov
jno
in
data16
mov
ficompl
inc
xlat
mov
push
mov
fwait
mov
xchg
test
adc
cmp
insl
inc
imul
movsb
movsl
push
xchg
jne
sub
add
cs
lods
dec
add
sbbb
cli
cli
inc
cmp
and
or
incb
imul
scas
addr16
mov
sub
in
ficomps
stc
insb
loop
sbb
or
adc
xchg
xor
repz
jbe
xlat
and
cmp
repnz
pop
fcoml
mov
push
ss
sbb
clc
out
ja
ja
insl
test
movsb
push
dec
imul
psubq
icebp
push
xchg
dec
fildl
fdivrl
iret
jle
setae
call
andb
cli
test
dec
sbb
jmp
ss
andb
outsl
sbb
aas
inc
loop
scas
push
or
daa
push
fidivs
loope
hlt
sub
dec
inc
fs
lods
stos
mov
xor
push
pavgw
cmp
stc
or
cltd
mov
bound
cwtl
pop
addr16
mov
sar
rcrl
pop
subl
aad
mov
pop
in
fbstp
mov
cmp
add
push
and
outsb
push
cmc
sub
mov
aam
test
push
xchg
stc
jbe
ljmp
dec
ljmp
add
jne
fnstsw
cmpsl
gs
incb
pop
ljmp
xchg
fldenv
movsl
sarb
pop
dec
jg
push
or
je
sub
cwtl
fwait
es
dec
jb
call
repz
lds
lret
fnsave
stos
in
decl
adc
mov
imul
pop
popa
inc
and
xchg
les
mov
mov
mov
push
popa
adc
enter
mov
mov
pop
adc
jnp
sbb
or
je
jb
aad
cmp
in
repz
jne
aad
mov
enter
mov
or
popf
sbb
fwait
insb
scas
movsl
push
xor
fsubrs
lcall
push
xchg
data16
xchg
das
or
adc
pop
xchg
es
push
fs
in
pop
mov
faddl
cmp
js
mov
xchg
aaa
int3
cwtl
into
xor
out
jg
push
stos
add
vmwrite
push
xchg
fwait
push
and
scas
mov
sub
inc
inc
add
mov
xor
inc
xlat
mov
or
lahf
iret
mov
mov
push
stc
push
jns
adc
ret
pop
cmpsl
cmp
fcmovnu
cli
pop
mov
adc
xor
aad
cmc
sarb
insb
pop
stos
cvtdq2ps
jae
loopne
outsb
xor
cmp
test
adc
mov
sub
add
cmpsb
mov
adc
adc
xchg
dec
testb
mov
mov
add
add
int
jle
sub
shll
pop
mov
jle
cli
leave
test
inc
ja
call
xchg
repz
insb
add
mov
xor
ficompl
jnp
sbb
lea
in
mov
cmp
sbb
in
fsubs
stos
lock
adc
shr
jge
out
cmp
or
cmp
cmp
call
jbe
xor
sbb
add
daa
subb
mov
or
ds
leave
cmp
inc
cmpsl
sbb
ficoml
jl
push
cmpsl
ds
sub
and
sub
sarl
lahf
mov
sub
jmp
test
ds
add
jno
rcrl
sbb
lret
cmp
clc
repz
ret
lret
imul
or
xlat
aad
pop
cmpsl
pop
std
lds
jmp
dec
lahf
scas
shlb
lea
sbbb
lcall
sub
iret
jns
cmp
dec
pop
jae
cmp
loopne
sub
fbld
or
test
adc
inc
ret
jmp
dec
movsl
popa
out
cli
insl
shrl
test
mov
dec
dec
xchg
push
xchg
adc
add
test
neg
fwait
xor
sub
mov
lock
inc
cltd
pop
push
addr16
push
popa
mov
and
rol
mov
mov
mov
scas
adc
aam
addl
push
xchg
lds
jg
cli
int
jnp
notb
mov
add
xor
jg,pt
inc
call
cmp
or
jns
xchg
push
jbe
shl
add
pop
cltd
add
cmp
fldl
mov
cwtl
insb
mov
cmpl
push
jl
enter
in
test
push
xor
mov
xor
imul
pop
int3
scas
pop
bound
aaa
les
xor
jmp
pop
pop
iret
mov
cltd
push
sbb
aas
in
adc
cltd
mov
or
push
xchg
xchg
push
inc
inc
mulb
fstpt
adc
mov
inc
lret
and
mov
xchg
dec
lds
test
and
cltd
push
dec
in
pop
fcoml
jns
jb
sub
xchg
insb
mov
dec
fiadds
dec
push
push
mov
out
dec
pusha
loope
outsb
gs
add
mov
mov
dec
stc
push
xor
and
ds
pusha
or
sub
test
sti
leave
pop
insb
movsb
mov
xor
mov
pusha
mov
insl
xchg
je
adc
loope
mov
mov
int3
dec
pop
cmpsl
aad
and
pop
sahf
or
and
in
call
fs
push
pop
xchg
cmp
test
xorl
lea
loopne
stos
ds
push
pop
leave
daa
mov
in
les
sbbl
mov
daa
cmp
add
gs
ss
sti
pop
jb
jnp
adc
les
popa
mov
cmp
sbb
daa
fnsave
mov
lret
pop
rorl
inc
push
jae
std
jbe
sub
stc
jle
xchg
ljmp
mov
and
xorl
mov
dec
sub
test
dec
or
test
movsb
rcl
xor
pushf
jno
outsb
movsl
mov
and
filds
cltd
xchg
das
lret
icebp
call
jmp
ret
test
shr
pop
fstl
stc
pop
call
out
pop
arpl
daa
in
fsubrs
xchg
test
insl
loopne
popa
mov
sub
xchg
push
inc
imul
or
ret
mov
pop
frstpm(287
in
cmp
and
mov
pop
cmpsb
cs
jge
lock
push
mov
icebp
push
icebp
lret
fwait
dec
pop
shrl
jns
mov
std
inc
pop
mov
dec
jp
cwtl
stos
xor
inc
rorl
mov
push
xchg
cld
sbb
adc
int3
mov
jp
call
dec
loope
test
pusha
nop
or
scas
dec
push
iret
imul
popf
imulb
call
dec
fcmove
sbb
dec
inc
cld
or
add
xchg
fwait
lcall
pushf
clc
stos
es
aas
hlt
xchg
cs
lcall
insl
cld
out
shrb
dec
aad
in
mov
call
cmpsl
xorl
push
ret
bound
sti
fadds
pop
fadd
fsubs
lea
roll
push
mov
nop
adc
push
repnz
xchg
int3
or
jg
pop
mov
pushf
sub
bound
lahf
cwtl
jle
pusha
mov
jo
pushf
repnz
pop
jae
or
xchg
push
push
or
mov
fwait
cmp
in
and
jecxz
xchg
movsb
cmp
push
fstps
fwait
ds
pop
pop
sarb
mov
push
cmp
and
dec
sub
xchg
dec
bound
jmp
outsl
adc
dec
push
sbb
ja
fdivr
lret
mov
add
in
or
and
push
pop
fimuls
fyl2xp1
lahf
stos
dec
ds
push
cmp
inc
xor
dec
or
cwtl
add
add
sahf
fnstenv
cwtl
and
adc
fldl
es
jnp
fisubrs
pop
dec
sub
xor
sbb
int3
out
in
fsubs
inc
add
and
movsl
es
fucom
jbe
movb
jmp
rcrb
or
dec
xor
stos
pop
imul
loop
push
lds
and
fdivrl
repz
adc
or
cmpsl
xchg
sahf
jns
mov
mov
xchg
jle
inc
xchg
dec
rcr
and
aaa
in
lds
mov
call
roll
test
hlt
pop
lahf
fcomi
js
insb
jp
mov
mov
mov
scas
stos
or
lods
jo
movsb
pop
jno
mov
inc
lods
cltd
test
cmp
xchg
gs
cmp
mov
xlat
sub
iret
pop
addr16
xchg
lds
mov
pop
xor
and
or
in
xchg
fcompp
daa
xor
stc
stos
test
lods
rcrl
lahf
cmpsl
pop
lahf
imull
jmp
adcl
fsubl
dec
test
xor
mov
push
inc
insb
leave
adc
je
xor
xchg
mov
inc
push
repnz
mov
test
test
cltd
nop
sti
arpl
pop
mov
mov
inc
loop
ret
add
sbb
cltd
les
inc
inc
push
divb
inc
imulb
lret
push
mov
lahf
idivl
xor
sbb
lahf
pop
xor
popa
aad
mov
xchg
popl
pop
rcll
and
roll
faddl
cmpsl
call
push
xchg
adc
or
stc
shll
les
sub
ljmp
rclb
mov
ss
shll
dec
into
scas
adc
xchg
mov
sbb
dec
cltd
jbe
mov
xor
sarb
inc
mov
in
push
fimull
and
fisttpl
push
cmc
mov
pop
enter
sbb
push
sbb
cmpsl
push
cld
shrb
fucom
stc
sbb
cmp
xor
inc
xlat
mov
push
movsl
ds
stc
cmpsb
repz
pop
addb
inc
cmp
cli
xchg
je
gs
mov
adc
nop
testb
dec
icebp
repz
cmp
fidivl
adc
lock
pusha
js
outsb
iret
xlat
push
sub
jb
add
mov
push
mov
pop
cmp
inc
cltd
xchg
jl
lods
mov
lods
mov
pusha
xchg
mov
int
push
or
lret
out
lea
sub
xchg
imul
test
imul
and
out
push
fistl
fisubs
les
or
insl
pop
jne
mov
leave
sbb
ret
add
inc
loopne
insl
rcpps
stos
xor
adc
mov
cli
sub
insb
in
mov
sbb
adc
mov
push
push
stos
cld
push
fwait
pop
sub
or
mov
add
adc
mov
pop
pop
stc
lcall
movq
and
jle
std
push
mov
sub
xchg
aam
sbb
xchg
mov
inc
pop
pop
sbb
roll
je
pop
adc
push
lds
jne
add
bound
inc
xchg
mov
jl
mov
push
sub
and
fistl
sbb
stos
cmp
lcall
xchg
push
push
fs
mov
and
call
adc
jb
jmp
cmp
out
jbe
pop
icebp
lock
xchg
or
mov
push
sbb
outsl
push
lods
mov
aaa
jp
mov
movsb
sar
jno
pushf
mov
movsl
cmp
jnp
insl
scas
insl
iret
ja
jecxz
shll
lea
imul
movsl
xchg
call
orb
xor
dec
and
loopne
lea
fiadds
mov
loopne,pt
into
xchg
inc
negb
popf
inc
insb
nop
lretw
das
mov
popa
fildll
jo
mov
test
fldenv
loop
inc
add
lahf
xchg
push
popl
and
mov
sbb
pop
push
cmp
clc
and
adc
jb
cli
ret
cmpl
lret
sbb
arpl
mov
scas
mov
push
and
dec
jno
add
nop
aam
fistl
mov
dec
aaa
pop
aas
les
sarb
pop
and
jge
inc
cmpsl
scas
or
adc
jmp
mov
cmp
and
jnp
fsubrs
fst
outsb
push
cmp
in
push
and
xor
inc
mov
xchg
jb
pop
jecxz
fcomps
xor
add
lcall
pop
mov
ret
pushf
inc
mov
push
mov
out
bnd
adc
insb
dec
or
xor
mov
mov
push
test
push
les
jl
xor
adc
add
jne
shrl
iret
scas
test
mov
mov
lock
dec
push
inc
mov
rdmsr
loop
xchg
mov
dec
out
xchg
das
xchg
xchg
mov
std
or
outsl
xor
xor
sbb
out
push
mov
and
sub
push
jl
mov
cli
pop
jl
inc
js
jne
roll
or
push
push
fimull
lods
daa
mov
into
test
lds
mov
fnstcw
addl
mov
pushw
js
fimull
arpl
fldenv
and
push
adc
xor
movsl
mov
cmp
sub
xchg
add
inc
and
or
jno
and
sbb
and
movsb
loop
ljmp
fists
add
and
imul
mov
mov
cmp
cmp
cmp
and
push
mov
and
and
popf
sub
cs
mov
cli
and
jbe
xor
aam
stos
int
sub
pop
pop
xchg
or
and
add
xchg
mov
nop
jbe
stos
push
outsb
mulb
out
inc
stos
mov
or
jecxz
lods
aad
shl
sub
mov
shll
pop
mov
mov
insl
je
and
dec
cmp
rcrb
push
xchg
pop
pop
imul
inc
cmpsl
je
and
sub
pop
inc
dec
iret
sub
mov
lods
cli
out
scas
rol
sub
push
fstps
add
mov
adc
sub
jecxz
aaa
lock
ja
test
andb
mov
in
push
push
movsb
roll
or
aaa
jmp
mov
adc
jne
mov
repnz
lcall
jge
push
pusha
sub
xchg
gs
mov
adc
mov
sbb
adc
scas
ss
add
leave
pop
mov
pop
fcomps
xchg
loop
scas
scas
mov
mov
out
inc
xor
jl
mov
lods
xchg
jecxz
cmpb
cmp
ret
icebp
push
cmp
popf
fistpll
lea
mov
out
es
jnp
imul
or
jmp
push
call
xchg
or
dec
adc
into
pop
mov
cmp
js
dec
nop
adc
jns
fidivl
dec
sub
pop
int3
in
mov
enter
jmp
scas
cwtl
movb
repz
xor
add
add
xchg
inc
jae
add
movsl
cmc
mov
out
mov
aam
sbb
cmp
fs
stc
cmp
push
aam
xchg
pop
or
in
inc
in
and
fisubl
jb
push
fs
lahf
mov
fidivs
dec
popa
push
popf
sbb
lret
sbb
jb
or
add
xor
sub
sub
jae
pop
fnstcw
popa
test
aaa
addr16
jecxz
call
xchg
xchg
out
push
lds
clc
mov
into
int3
xchg
push
aaa
and
or
cmp
repnz
adc
push
push
aam
cltd
aas
add
int
mov
lock
jge
xor
out
outsb
test
xor
out
xchg
sub
mov
lcall
insb
dec
sub
pushl
and
jno
adc
mov
sbb
int3
out
xor
scas
push
xchg
dec
or
push
outsb
add
mov
icebp
cwtl
arpl
inc
xchg
pop
fmul
scas
popa
add
ss
repz
pop
add
cmp
push
jecxz
rcrb
shlb
scas
popa
jge
or
mull
sub
push
scas
cmpsl
cmpsl
fdivl
jb
push
test
aas
push
adc
js
cmp
lock
mov
lcall
add
inc
or
push
dec
xchg
mov
mov
cmp
movsl
shrl
xchg
sarl
mov
call
mov
jg
scas
fdivrs
adc
and
sbb
adc
sub
adc
adc
test
xor
inc
xchg
sbb
mov
fnsave
xchg
ffreep
mov
idivb
and
repnz
out
mov
adc
std
repnz
aam
je
sbb
and
sub
daa
fidivrs
adc
fs
shl
pop
inc
push
mov
mov
mov
lods
jo
popf
xchg
movsb
mov
gs
cli
aad
mov
xor
cmp
cmp
out
nop
std
pop
adc
add
notb
cmp
sbb
fcomi
test
lods
das
jecxz
mov
jbe
loope
lods
mov
out
mov
jne
imul
cmp
sub
xor
push
sarl
xor
mov
xchg
dec
aam
pop
dec
imul
fmulp
sbb
in
pop
data16
cmp
lods
imul
cmpsb
lods
pop
fs
stos
lock
sbb
cli
mov
hlt
imul
arpl
gs
dec
mov
mov
enter
test
fnstenv
bnd
and
add
mov
icebp
shll
hlt
mov
inc
loop
in
sbb
and
sub
mov
xor
push
shlb
adc
test
sarb
and
addl
or
add
push
push
ds
fdivrl
pop
sub
mov
outsl
sti
cwtl
sub
push
loope
aad
jo
jge
aam
mov
or
xor
adc
iret
orb
pop
xchg
pop
adc
lea
rcrl
cld
fstpt
push
out
inc
or
jg
inc
and
mov
sarl
pop
add
pop
outsl
hlt
pop
inc
and
scas
mov
adc
add
ret
addl
xlat
icebp
inc
and
jg
add
adc
lods
mov
sub
loopne
jge
icebp
int
fiaddl
push
loop
mov
outsl
lcall
cmpsl
mov
inc
pushf
jge
mov
adc
xchg
and
mov
mov
mov
push
jle
mov
xor
pop
adc
sahf
xchg
jmp
xchg
not
test
lahf
push
popf
movsb
rolb
push
mov
movsb
ds
call
lret
jmp
xchg
push
clc
xchg
and
cmc
test
pop
or
mov
leave
test
xor
testl
push
push
xor
fisubrl
push
ds
xor
xor
pop
dec
pop
push
add
ret
mov
sbb
cmpsb
addb
es
cmc
pop
jle
jns
mov
outsl
push
jecxz
and
cmc
test
les
or
enter
fnstenv
pushf
sbb
xchg
dec
adc
and
shll
outsl
xor
dec
cwtl
mov
or
ret
mov
pusha
xchg
xor
mov
addl
ss
mov
mov
xchg
mov
mov
jl
test
sbb
cmc
loopne
dec
sub
jle
push
adc
add
dec
dec
or
dec
mov
mov
sub
push
inc
push
jl
xchg
out
cmp
and
es
mov
jecxz
popf
scas
sbb
incl
frstor
pop
or
repnz
scas
add
in
cmp
pop
inc
mov
xchg
cmpsb
loope
xor
sub
enter
cld
adc
pop
fcmove
pop
cmp
cli
pushf
or
mov
pop
dec
stos
pop
sub
fs
add
mov
in
dec
and
pop
adc
cld
push
push
mov
clc
jns
stos
cmp
xor
add
gs
push
jae
dec
std
push
icebp
or
pop
les
xchg
lea
leave
xor
mov
stc
push
out
addr16
inc
js
pop
fwait
xchg
sub
add
jl
andb
mov
testb
adc
xchg
sbb
stc
mov
test
test
and
mov
xchg
and
add
sbb
mov
mov
jo
xor
roll
jl
imul
fsubs
rorb
mov
loope
out
outsb
xchg
adc
jmp
lret
or
sub
mov
or
sbb
jle
ds
outsl
sbb
popl
xchg
enter
sahf
popf
mov
jp
mov
bound
mov
bound
outsb
push
loopne
mov
es
sbbb
or
js
rorl
mov
xor
push
xchg
test
push
push
out
xor
shl
les
or
rcr
cmp
xchg
lahf
pop
jmp
or
loopne
pop
push
sahf
inc
rcrb
and
cmp
scas
loopne
repz
clc
add
stos
jbe
rcr
sub
cmp
lret
fistl
lock
pushf
aad
sbb
push
insb
fimull
addb
movl
popa
cmp
scas
cmp
pop
cmp
in
enter
fldenv
dec
cmpsb
pushf
das
ret
or
inc
xchg
test
jns
ret
subb
idivb
mov
pop
xor
notb
imul
leave
add
jmp
repz
push
or
loop
push
mov
aas
pop
mov
or
fimuls
ja
addr16
mov
icebp
mov
pop
arpl
test
cmpsb
dec
mov
cmpsb
imul
cltd
jno
jae
inc
lods
xchg
lock
mov
push
push
xchg
insb
xchg
inc
sar
jae
pop
xchg
scas
xorl
jge
test
jle
push
fwait
xor
loopne
xchg
push
dec
int3
repz
sub
daa
push
loop
jmp
xchg
popl
fwait
adc
dec
adc
shr
inc
aad
iret
sbb
mov
mov
pop
adc
mov
adc
push
imul
shll
mov
xchg
bound
push
es
lcall
sti
cmpsl
js
outsl
inc
mov
cmc
addr16
xlat
leave
js
cmp
jb
adc
xlat
adc
dec
add
inc
push
movsb
jle
in
cld
sub
xlat
jo
pop
stos
movsb
pusha
out
xchg
mov
mov
in
or
add
lahf
mov
repz
fstpt
mov
adc
outsb
clc
jo
and
push
xchg
or
in
jo
push
mov
lahf
adc
repz
in
stc
sbb
andb
xchg
or
mov
sbb
and
pop
js
cmp
add
out
xchg
rclb
cwtl
add
inc
ret
xor
push
xor
add
sbb
cmp
in
xchg
inc
aaa
xor
mov
push
loop
mov
push
ss
sub
mov
ret
xchg
jge
xor
lods
mov
fildll
popf
adc
sbb
dec
das
cltd
pop
notl
pushf
push
cs
ds
xor
mov
lea
push
cmp
movsb
sbbb
int3
cmp
sbb
sub
in
dec
mov
mov
dec
xchg
sub
xor
scas
daa
push
stos
fimull
cli
pop
xchg
xchg
cmp
inc
lret
call
xlat
inc
xchg
mov
pop
call
jno
jge
push
rcrl
fisttpl
mov
pop
sbb
adc
mov
xor
fistps
or
cmpsb
into
pop
pop
pop
inc
sub
cli
ficoms
cmp
into
lock
adc
test
mov
pop
cmp
cmp
test
mov
ja
xchg
mov
in
cli
insb
sahf
jl
pop
and
cmpsl
sbb
jecxz
push
mov
int3
ss
std
push
add
adc
sbb
cmp
lahf
stos
mov
mull
push
xchg
mov
xor
lcall
cmc
inc
test
push
ret
sbb
adc
rolb
sbb
or
enter
dec
xchg
add
scas
xchg
imull
push
cs
lcall
push
into
repnz
icebp
aam
iret
js
inc
test
mov
lea
pop
pop
les
iret
stc
sbbl
outsb
or
imulb
into
aaa
jl
jle
stos
rorl
insb
aaa
cmp
sbb
xchg
adc
jne
repnz
add
mov
leave
mov
stos
jmp
daa
mov
arpl
mov
cwtl
repz
or
or
sbb
pop
xor
ret
dec
ljmp
xor
cmp
push
dec
mov
cmp
push
push
add
test
aad
sub
xchg
daa
adc
sub
sbb
xchg
lds
mov
xchg
cmp
pop
loop
aad
xor
lahf
incl
adc
pop
test
jne
daa
mov
push
insb
insb
jle
fisttpl
ror
adc
push
imul
fnsave
aad
jbe
mov
je
in
lcall
sbb
sbb
fisttpll
enter
push
sbbl
test
dec
rcrl
xchg
mov
es
xor
flds
icebp
add
js
aad
push
xor
into
and
orl
sbb
es
and
shlb
xchg
xchg
jle
and
lods
xchg
idivl
jle
xor
pop
lock
test
xchg
mov
xor
mov
adc
fdivl
lods
lahf
std
sbb
mov
fadd
nop
cli
cmpl
push
mov
movsb
pop
je
push
cmc
in
sub
lcall
in
push
push
comiss
outsb
dec
sbb
cwtl
ja
lds
std
in
pop
pusha
xchg
stos
inc
inc
or
mov
mov
adc
push
push
jl
pop
ja
cwtl
out
cmpl
sbb
inc
outsl
push
mov
hlt
out
stos
push
cmp
xchg
and
sti
xchg
xchg
xor
inc
js
xchg
push
or
cli
mov
in
xorl
adc
sub
cmp
sub
mov
push
sbb
ljmp
addb
sbb
pop
jmp
jno
test
pop
ljmpw
in
xor
jno
push
xchg
jae
inc
mov
lea
mov
iret
in
std
lea
rcll
icebp
xchg
ret
xor
cs
cmpsb
add
das
lods
and
adc
imul
xchg
and
aam
pop
cmp
xchg
cmovo
xor
sti
insl
lret
xor
push
fdivs
leave
dec
push
shlb
lahf
iret
gs
push
jmp
mov
pop
mov
add
ficomps
xor
pop
dec
je
dec
xor
jecxz
dec
pop
cmc
dec
mov
xchg
xchg
jne
inc
adc
sbb
stos
mov
dec
repz
inc
jnp
pop
pop
mov
cltd
push
loope
stos
lret
push
in
jmp
inc
push
mov
dec
jl
xchg
xor
rcrl
cwtl
add
sbb
leave
or
inc
shrb
mov
dec
jmp
inc
mov
cmp
mov
and
cmp
pop
pop
jo
sbb
shlb
sbb
nop
and
ljmp
loope
push
dec
lret
adc
out
mov
ret
cwtl
fisubrs
xor
test
or
sbbb
movsl
xchg
lahf
add
cmpsl
test
lcall
pop
loop
and
sub
call
cmpsb
adc
dec
xor
iret
insb
fwait
insb
daa
jne
pop
imul
jb
pop
pusha
insb
or
push
outsl
and
sarl
sar
aas
and
ds
scas
cmpsl
lcall
sbb
fs
out
jae
sub
shlb
mov
add
inc
data16
push
movl
repnz
jnp
jno
ficompl
je
data16
jle
cld
nop
iret
fwait
scas
cmp
sbb
jae
push
fbstp
in
mov
jmp
popf
mov
add
scas
mov
add
sub
insl
pop
js
imul
mov
mov
or
xchg
scas
loopne
dec
insb
pop
loop
and
aam
fwait
add
or
inc
shlb
gs
cmp
loopne
popf
cwtl
int3
cmp
add
ljmp
int
into
xlat
pop
mov
inc
inc
and
mov
mov
and
inc
mov
adc
hlt
test
push
pushf
arpl
or
testl
sub
aad
in
hlt
pminsw
shl
ljmp
arpl
test
pushf
xchg
ret
fldt
lcall
xchg
dec
insl
lods
push
sbb
and
xchg
pop
sbb
xor
popa
and
adc
hlt
enter
lret
loop
mov
fstpl
mov
xchg
push
lods
popf
cmp
bound
sbb
pop
pop
out
cmp
es
outsl
jae
outsl
pop
inc
add
or
jmp
outsb
push
fwait
je
insb
mov
fmuls
xor
and
pushl
push
insb
sahf
sbb
jb
repz
icebp
repnz
outsl
mov
fiaddl
movsb
jo
call
add
pop
add
mov
adcb
aas
push
pusha
jge
ljmp
xchg
xchg
lret
rcrb
sub
fs
out
lcall
prefetcht1
fcoms
xor
xchg
popf
iret
sub
and
adc
and
inc
aaa
loopne
fcomip
push
xchg
add
add
mov
jp
fsubr
mov
popa
fstl
loop
sbb
scas
pusha
add
sbb
icebp
fwait
ret
scas
les
pop
dec
fmull
dec
mov
data16
fistpl
and
daa
ss
xchg
mov
scas
imul
xor
jge
inc
int3
adc
in
push
xor
push
push
in
faddl
fucom
js
fidivrl
hlt
fucomi
leave
sub
xchg
fdivs
or
loope
inc
fmul
leave
sbb
sub
movsb
into
jno
mul
shlb
repz
mov
out
clc
jl
push
lock
xchg
pop
mov
jl
jne
pop
icebp
and
dec
scas
cmpl
mov
mov
cmp
rorb
add
xor
xchg
inc
lock
pop
fsubrl
aaa
aad
cmp
xlat
fwait
add
mov
inc
push
sub
cmp
sub
cmp
pop
arpl
scas
lea
lahf
rolb
and
sahf
fldl
sub
sub
xor
imul
test
test
mov
dec
mov
fs
push
push
outsb
and
aaa
or
ja
dec
push
cs
inc
pop
dec
inc
mov
hlt
push
addb
ljmp
dec
jb
test
call
je
mov
pop
add
add
sbb
testl
jnp
shl
movsl
pop
or
call
inc
add
mov
pop
cwtl
cmp
aad
sbb
loop
pop
sbb
jnp
dec
fs
jo
fstpt
pushf
and
pop
in
and
inc
add
icebp
pop
bswap
addr16
and
and
stos
repz
xchg
lock
int3
and
jb
lret
cld
xor
loope
mov
cmp
xor
mov
and
ret
and
mov
mov
ficompl
outsl
aaa
mov
jo
cli
or
int
fmull
mov
mov
fldlg2
cmp
js
idivl
repz
orl
jo
jae
mov
jb
mov
jae
push
jg
movsl
loope
imul
and
mov
inc
jne
mov
mov
mov
jno
xor
jne
mov
test
xchg
mov
lcall
xchg
leave
sbb
lds
pop
adc
jp
mov
add
scas
popa
inc
mov
int
or
inc
lods
ss
xor
clc
mov
dec
mov
cs
loope
xchg
mov
dec
ret
mov
lock
sub
into
call
mov
inc
lds
lcall
ror
inc
mov
dec
xor
mov
cmp
and
cmp
pop
pushf
mov
mov
push
xor
push
rorl
hlt
cltd
add
testb
int
push
cmp
sub
sub
mov
fcmovbe
ret
ret
ljmp
pop
jne
and
push
aas
xchg
mov
jle
mov
mov
repnz
inc
push
fcmove
mov
es
or
and
adc
in
push
fdivs
jecxz
pop
cs
icebp
push
push
notl
sbb
inc
jmp
sbb
jb
mov
gs
mov
jmp
sbb
les
rcrb
mov
into
ljmp
or
pop
loop
or
outsb
push
mov
sub
gs
push
jbe
push
in
add
adc
sub
pop
and
and
fnstsw
pop
mov
and
cmp
push
jb
int
sahf
xchg
mov
fldt
ljmp
adc
xor
dec
xchg
fcomps
adc
adc
in
cli
push
insl
pusha
jl
out
fcomps
sub
push
sub
adc
and
mov
testb
jo
push
fisttpll
sub
repnz
repz
push
sbb
fcoms
xchg
push
nop
cmpsb
adc
and
aas
mov
stc
mov
lcall
mov
in
sub
pop
gs
out
movsb
scas
hlt
mov
xlat
clc
jg
data16
cmp
ficomps
xor
push
mov
loope
pop
sub
adc
bswap
mov
pushw
jg
inc
rcl
add
xor
into
and
call
sub
mov
add
loop
jno
dec
cli
mov
adc
inc
mov
push
cmc
sub
xor
lcall
jg
lcall
and
imul
mov
mov
fmull
in
insb
sbbl
cmp
lret
sbb
ljmp
push
xchg
add
in
inc
mov
jbe
pop
pop
mov
mov
repnz
inc
xor
out
in
mov
cmp
sbb
aaa
jle
fisubrs
icebp
inc
push
rcll
outsl
adc
js
xor
scas
pop
push
xchg
add
mov
sete
lock
xchg
sbb
fdivrs
mov
xchg
enter
jnp
int3
in
orl
les
and
inc
push
shll
inc
and
lods
pop
add
adc
xchg
mov
aaa
cmp
xor
cmp
test
test
repnz
or
sub
inc
insb
out
stc
xor
lods
jo
hlt
cmp
mov
int3
fiaddl
push
orl
inc
or
jnp
push
or
pop
sbb
imul
js
sti
inc
fcmovu
lahf
or
cmp
mov
jne
adc
dec
cmp
aad
ss
repz
idivl
jge
inc
outsb
aas
push
inc
sbb
fists
mov
push
mov
movsb
loopne
addr16
test
xor
cmp
lea
daa
rcrl
fistps
pslld
icebp
or
push
pop
scas
ret
push
leave
dec
cwtl
cmp
xchg
inc
insb
jae
popa
mulb
sub
jg
aas
lahf
std
sti
jle
sub
imul
cmp
xor
sbb
mov
shrb
test
lret
or
cmp
pusha
push
rcrl
int3
repz
push
cmp
push
and
js
test
cwtl
in
mov
pop
push
jae
cmp
mov
inc
jecxz
jbe
idivb
cli
lret
sbb
xchg
mov
es
mov
mov
or
ds
mov
cmp
jge
aaa
daa
sub
lods
push
jl
inc
icebp
imul
cmp
sub
in
inc
dec
lock
bswap
out
inc
insl
and
pop
sahf
cmpsb
mov
push
out
aad
add
jb
and
dec
ljmp
les
inc
mov
scas
pop
sarb
dec
jnp
mov
adc
pop
pop
jp
mov
js
jne
pop
imul
stc
mov
test
out
mov
cwtl
call
dec
sarl
je
pop
cli
cmpsb
xor
xchg
mov
mov
jnp
and
push
or
sbb
inc
xor
andb
frstor
pop
bound
push
sbb
les
imul
cld
imul
jno
into
pop
or
jle
lret
cmpsl
callw
pop
pop
jae
jecxz
xchg
mov
mov
xor
out
int3
jb
insb
clc
pop
lahf
loop
and
mov
sub
lea
dec
lods
dec
and
sbb
sbb
shlb
sbb
subl
push
or
imul
cmpsb
lock
pop
push
cld
in
mov
jno
out
inc
repnz
mov
mov
mov
mov
adc
out
mov
xchg
cmp
pop
sbb
xor
add
jbe
cltd
xchg
dec
add
mov
in
inc
inc
sub
push
sbbb
and
repnz
mov
xchg
mov
sub
jle
fbstp
push
mov
daa
pop
push
mov
jp
rolb
stos
pop
and
sahf
test
in
ret
mov
lods
cmp
call
incl
aaa
mov
adc
xor
add
mov
aam
and
xchg
popa
test
pop
xor
mov
fwait
pushf
pop
stc
mov
ljmp
int
arpl
ss
fs
aad
iret
jg
movsl
inc
push
push
mov
ds
sbb
dec
mov
mov
cmpsl
push
or
jg
rorl
xchg
dec
in
nop
jl
adc
sti
out
cmp
adc
jo
push
cwtl
mov
mov
dec
fsub
adc
xor
dec
mov
or
mov
cmp
mov
fnstenv
cwtl
je
jns
loop
out
lds
pop
scas
ja
inc
adc
mov
add
and
add
fnsave
jae
add
orb
mov
dec
test
jg
stos
es
dec
mov
jge
mov
mov
mov
aas
cmp
or
xor
dec
or
lret
xor
push
dec
stos
daa
call
out
jns
out
outsb
mov
fildl
jns
les
in
inc
lcall
inc
sub
jne
fnstsw
push
push
in
std
mov
cs
shlb
aaa
pop
int
mov
and
sub
mov
inc
sti
inc
sub
jnp
lea
sub
pop
das
push
cmpsb
cmp
into
aam
sub
mov
and
xchg
scas
and
xchg
stc
adc
mov
cwtl
test
mov
or
cld
inc
ds
rolb
sub
cmp
aad
or
ljmp
pop
test
inc
pop
addr16
shlb
mov
pop
inc
push
jno
xchg
mov
loope
subb
push
pop
jnp,pt
repz
cmp
pop
cmpb
cld
mov
imul
sub
push
mov
das
pop
decb
sbb
mov
sub
sbb
or
fsubl
sub
jecxz
mov
add
cmp
sub
sub
inc
xchg
mov
stos
movsl
push
fucomi
sbb
and
cmp
aam
into
adc
jno
cltd
mov
cli
and
popa
pop
xchg
nop
cltd
mov
jne
inc
andb
mov
ja
in
aaa
sbb
jb,pt
scas
mov
push
mov
sarb
in
and
inc
cmp
cmpsb
dec
mov
cwtl
lock
mov
jns
lret
stc
ljmp
aam
sbb
add
pop
push
sub
loop
vaddss
mov
ret
xor
and
add
sbb
sar
push
dec
lods
or
test
test
mov
aas
test
xchg
jg
test
rorb
or
or
scas
test
icebp
ficoml
pusha
clc
or
adc
and
lock
sub
mov
dec
sar
mov
adc
pop
add
and
scas
ljmp
scas
dec
out
mov
rorl
in
cmpsl
lods
xchg
mov
fimuls
and
in
sub
xlat
mov
sbb
add
je
pop
mov
xor
xor
dec
mov
scas
cmp
and
into
jno
dec
aaa
xor
lock
pop
sbb
cs
push
ret
shrl
dec
scas
insl
in
mov
cmc
int3
pop
aas
dec
lcall
dec
mov
cmpl
pusha
pop
push
or
ljmp
jmp
mov
lahf
inc
jmp
movsl
inc
push
sub
aad
imul
mov
dec
outsl
push
movsl
mov
jae
fisttpll
rorl
dec
fisttps
jl
dec
push
push
push
rcll
dec
cmp
stos
pop
mov
les
or
clc
pusha
xor
loope
ds
add
mov
jg
jae
imul
fstpt
nop
in
lods
test
cli
xchg
add
dec
hlt
idivb
jnp
push
loop
inc
cmpsl
mov
aad
jp
mov
add
push
jge
aaa
test
movsb
mov
inc
stc
les
inc
popf
mov
fldl
fwait
int
inc
xchg
icebp
aaa
icebp
dec
cmc
xor
es
pop
mov
xchg
and
sbb
xchg
negl
xchg
add
jb
xchg
int3
pop
sbb
out
dec
imul
jmp
aas
fimull
sahf
cmp
std
pop
mov
ficoms
mov
and
rcrb
dec
ror
scas
xor
xchg
es
xchg
out
mov
iret
sar
arpl
mov
fldcw
test
push
sub
jl
inc
stos
sbb
add
mov
fisubrs
pushf
shr
cld
xchg
mov
push
mov
imul
pop
lret
cmp
sbb
in
popaw
push
fsts
xorl
push
into
sbb
xorl
jp
jae
push
ret
mov
mov
cld
or
inc
rorl
cmp
rolb
loopne
cli
wbinvd
testb
daa
jmp
jle
mov
xor
mov
mov
sbb
pusha
into
and
sbb
mov
test
mov
orl
push
adc
sub
icebp
dec
test
jne
pop
stos
cwtl
or
cltd
sbb
rcrl
mov
daa
and
mov
dec
je
mov
sbb
cmp
mov
sub
push
sub
mov
movsl
adc
mov
adc
xchg
xchg
mov
sbb
cmp
pop
push
and
inc
mov
xorl
jo
or
in
lret
sub
iret
adc
mov
xlat
xchg
notb
jmp
jns
mov
cwtl
add
icebp
adc
jle
mov
sub
and
rclb
fbstp
scas
lods
cmp
xchg
or
and
punpckldq
cmp
js
pop
movl
push
pop
cli
add
and
push
mov
sbb
add
enter
stos
lahf
mov
push
dec
adc
push
js
frstor
aaa
fcompl
sar
pushf
jb
cld
push
mov
dec
mov
jl
jle
sbb
push
mov
testb
cmpsl
mov
xor
in
loope
mov
sub
nop
mov
cmpl
mov
out
dec
in
jnp
cmp
cli
mov
int
gs
pop
ds
btc
mov
push
cmc
lahf
mov
dec
lret
lods
sbb
sub
or
test
loope
jecxz
cmp
jno
cmp
sbb
mov
mov
dec
frstor
dec
cmpl
pop
pop
xor
mov
push
add
ss
in
fs
mov
dec
lods
mov
sbb
push
imul
jge
xor
rolb
and
and
sti
iret
push
frstor
xchg
or
and
and
test
jle
pushf
ja
xchg
and
sbb
xor
loopne
jne
inc
movsb
and
xor
aad
ds
out
testl
lods
adc
mov
outsl
jg
sbb
sbb
push
sub
arpl
xor
test
lret
push
popf
shll
dec
repnz
cmc
cmc
push
aam
stos
mov
stc
popf
int
je
mov
jecxz
jp
fwait
adc
mov
xchg
lret
cli
push
push
push
jno
pop
push
push
sub
xchg
sub
mov
sub
add
rolb
sbbl
adc
scas
and
sbb
sbb
repz
bound
jo
fcompl
adc
popa
cmp
ja
sub
jae
mov
arpl
sub
lcall
mov
je
sbb
and
int3
dec
cmp
jecxz
mov
sbb
test
xor
outsb
inc
stc
mov
jp
and
out
mov
pop
sub
fsubs
mov
scas
stos
arpl
lahf
push
les
mov
int
pushf
stos
iret
pop
and
in
inc
xorb
push
out
mov
xlat
decl
std
push
inc
into
mov
push
js
mov
or
mov
movsl
lods
inc
scas
mov
test
dec
insl
daa
inc
movsb
pop
jns
lea
jmp
sbb
pop
mov
leave
cmp
cmp
lods
das
mov
stos
das
xchg
test
sbb
push
adc
decl
mov
addr16
adc
or
hlt
fldcw
dec
ret
jns
dec
add
lods
mov
cmp
mov
or
repnz
ret
cs
jbe
out
mov
call
and
mov
cld
or
pop
and
cwtl
pop
sbb
pop
rorb
popf
push
or
xchg
out
ss
test
and
xor
cmp
inc
mov
into
or
push
dec
lahf
adc
fcmovnbe
hlt
ljmp
mov
fildll
movsb
push
or
stos
jo
pusha
enter
lods
out
cmp
cs
and
jecxz
rorb
push
imul
repz
shlb
loop
sub
jbe
inc
cmp
mov
inc
jb
mov
and
mov
dec
movsl
or
sub
xchg
sti
int
les
pop
sahf
ret
push
xor
xor
pop
bound
scas
mov
jnp
in
aas
pop
jle
arpl
mov
roll
jae
fidivrs
ss
dec
fisubrl
lcall
jnp
jmp
jae
jmp
pop
stos
jbe
bound
mov
inc
sbb
mov
das
mov
mov
mov
xor
mov
sti
xchg
and
movsb
adc
and
push
shll
fmulp
sbb
rcll
leave
bnd
ja
in
iret
fwait
loop
scas
inc
andb
mov
sti
cmp
call
mov
sub
pop
jl
push
mov
out
push
jmp
jmp
addr16
jb
call
ja
loopne
pop
stc
loope
insl
in
sub
and
ds
jb
jno
mov
xchg
adc
je
leave
mov
fwait
jnp
mov
cmpsb
test
lock
xor
and
jne
fistps
ds
or
into
insl
mov
scas
xor
in
adc
loope
out
outsl
aaa
add
pushf
ja
ss
inc
jg
cmpsl
nop
imul
out
jo
lock
and
mov
dec
fsubs
rcrl
pop
inc
adc
cmpsb
push
mov
dec
sti
push
in
loopne
fcmovu
ljmp
subl
sub
sub
jae
mov
scas
jnp
mov
insl
push
sub
add
out
daa
mov
jge
cli
add
mov
test
mov
in
adc
aas
mov
out
fldt
insl
popa
cli
jge
loope
xchg
or
xor
pop
and
dec
aaa
popf
bound
std
iret
and
mov
push
inc
insb
jle
adc
adcl
ror
insb
ja
mov
out
or
push
mov
cs
in
aad
adc
xchg
or
cmpsl
push
pop
out
loop
dec
push
in
pop
lahf
arpl
sub
jge
je
xchg
outsl
in
loope
xchg
mov
in
and
add
ret
jnp
mov
pcmpgtb
sub
outsb
movsl
push
pusha
jmp
aas
aad
mov
dec
hlt
jmp
mov
add
clc
lods
pop
les
push
lgdtl
js
out
xchg
inc
adc
and
repz
stos
jle
xchg
div
push
in
pop
pushf
jge
flds
pop
push
cwtl
push
fildl
enter
inc
incl
inc
sbbl
inc
repnz
pop
fdivrs
or
xchg
int3
mov
insl
iret
cwtl
dec
je
push
and
jmp
cmp
lods
leave
push
mov
lods
push
cmpsb
sub
jae
xor
in
mov
leave
iret
test
sbb
ljmp
or
jl
rcll
jl,pn
and
outsb
data16
add
pusha
cmp
sbbb
jno
jge
add
shll
push
jmp
cmp
adc
xor
ret
cltd
and
inc
cs
repz
jg
stos
push
push
popa
test
push
notb
testl
push
mov
outsl
or
xor
pop
adc
lcall
inc
pop
inc
pop
sub
sub
das
cmpsb
xor
xchg
insl
stc
iret
out
fsubr
fucom
fcomi
sub
stc
xchg
dec
xor
inc
rol
sub
or
lods
add
or
scas
xchg
lods
mov
cmpsl
inc
xor
fsub
push
push
movb
jge
icebp
push
cmp
mov
cltd
cwtl
lret
out
sub
push
rcl
cs
xchg
or
ret
lds
pop
pop
addr16
or
cs
xor
imul
sub
xchg
pushf
dec
lea
fdiv
adc
mov
xchg
sbb
or
mov
in
mov
adc
jnp
ror
jno
xchg
pop
out
stc
push
arpl
popf
inc
aam
mov
cld
jb
and
add
adc
cmpsl
mov
pop
sbb
repnz
lcall
push
xchg
sub
cs
mov
pop
lahf
adc
hlt
sbb
out
dec
aaa
cmp
ja
sbb
xor
out
roll
addl
sbb
mov
xchg
pop
mov
mov
mov
jp
dec
pop
mov
rcll
push
scas
jl
inc
imul
jle
jl
xor
jns
lds
jl
xchg
inc
adc
cmp
dec
daa
mov
mov
add
int
repnz
cmp
mov
fnstsw
xor
xor
adc
into
ret
mov
cmp
cmp
inc
aaa
dec
inc
mov
inc
fs
dec
pop
cltd
loop
sbb
lahf
in
add
pop
stos
imul
jp
add
clc
sbb
std
cmp
and
outsb
pop
fnsave
xchg
out
mov
popa
add
repz
pop
mov
jmp
int3
aam
lret
rol
mov
rclb
ret
dec
out
fisttpll
enter
jl
movsb
stc
ror
xchg
pop
pop
loopne
push
cli
push
jae,pt
in
sub
adc
push
jmp
xchg
iret
pushf
sub
out
add
inc
lret
sbb
sbb
gs
sub
mov
pop
test
imul
mull
adc
inc
mov
lcall
xor
jae
test
and
cwtl
dec
pop
test
xchg
sbb
pushf
inc
jo
jb
nop
mov
fcompl
xchg
cmpsl
subb
outsb
jne
cmc
dec
sub
lods
in
shlb
sub
sti
lods
outsl
add
pop
sub
js
push
pop
mov
pusha
shll
stos
das
inc
mov
repnz
dec
sbb
mov
xor
adc
ss
jne
sbb
add
xchg
sub
inc
lret
orb
lret
sbb
sub
xchg
inc
nop
cmpb
lods
das
mov
push
stos
pop
cmp
xor
sahf
or
ds
aad
enter
lahf
mull
and
lea
enter
ljmp
push
sub
ss
jne
or
fildll
pusha
test
test
dec
out
testb
inc
imul
sub
rorl
bound
push
dec
iret
cmp
enter
dec
aad
stc
or
adc
loop
mov
lods
jnp
adc
pop
jbe
pop
aam
mov
out
arpl
inc
hlt
add
icebp
mov
enter
xor
cs
rclb
pop
jg
push
jb
outsl
hlt
dec
stos
sar
lods
jo
std
dec
add
push
ret
lret
arpl
nop
enter
cld
cmp
cltd
push
sbb
push
adcb
and
jo
lret
sti
cmp
hlt
lock
adc
cmc
inc
arpl
aad
cs
std
mov
shr
push
jge
popf
cmp
and
leave
jl
mov
in
leave
dec
pop
mov
es
lock
popf
pop
loop
test
sub
mov
cmpsl
or
push
sbb
movsl
xchg
sbb
jnp
mov
pop
sbb
sbb
xor
arpl
dec
mov
pop
push
cs
adcb
cmp
insb
notl
mov
loope
fwait
sub
fs
mov
aam
mov
jl
lea
pop
jae
jmp
fwait
and
push
sub
mov
adc
repz
mov
cmpl
ja
pop
mov
adc
jns
mov
add
imul
lods
in
rcrl
mov
mov
add
imul
dec
mov
add
out
mov
jl
add
adc
add
fnsave
mov
ja
push
mov
loop
push
rclb
sub
mov
lods
mov
pop
xchg
rclb
add
call
xchg
cmp
sbb
push
push
or
inc
sbb
adcb
imul
mov
cltd
aad
cmp
jne
cmpsb
iret
pop
out
dec
inc
nop
es
leave
dec
xor
hlt
adc
ror
jge
lahf
mov
sahf
push
inc
aam
icebp
cmp
pop
cwtl
mov
mov
int
fmull
jbe
push
outsb
int3
pop
ret
clc
mov
repnz
insb
imul
and
push
xor
lods
mov
inc
jb
sahf
pop
daa
add
scas
test
jl
cmp
sub
dec
xorl
sub
pop
lea
adcb
xchg
pop
lcall
sub
mov
test
mov
repz
cmp
push
jbe
adc
jns
in
std
and
rcrl
push
ljmp
pop
push
mov
pop
xor
pop
xor
pop
jp
notl
scas
mov
add
call
xchg
push
call
add
xchg
gs
xchg
cmp
push
ret
int
xor
in
mov
aas
sti
and
cltd
int3
xchg
clc
mov
cs
int3
and
jg
sbb
stos
adc
sahf
std
sti
fdivrp
xchg
add
aaa
mov
out
push
cmp
loop
push
and
jbe
push
pop
mov
enter
pop
addr16
out
dec
sub
ficoml
in
mov
insl
fucomi
sub
dec
lret
jae
mov
cwtl
cltd
cmc
subb
pusha
lds
sbb
stos
jbe
pop
pop
test
push
add
repz
je
mov
cld
mov
jg
pusha
push
push
jno
xchg
ret
aas
test
ds
dec
cwtl
jmp
lds
cs
loope
xchg
jle
imul
call
lret
test
lret
imul
std
aad
sub
pop
push
push
aas
push
pop
adc
xor
xchg
fisubrl
lods
cltd
mov
push
push
enter
pop
stos
rolb
nop
jbe
add
cmp
cmp
pop
add
adcl
sti
loope
mov
xor
xchg
add
mov
sti
lods
cmpsb
insl
or
dec
mov
dec
out
xor
iret
xor
and
scas
gs
les
jae
sub
mov
enter
pusha
lock
jno
add
cmpsl
stos
popf
cmp
gs
dec
xchg
das
add
iret
out
or
push
pop
lds
and
hlt
pushf
xor
or
stos
leave
pusha
push
fnsave
pop
dec
mov
adc
fbld
imul
push
xchg
pushf
mov
pop
scas
adc
shl
mov
pop
cmp
mov
cwtl
in
ds
sbb
cltd
orb
push
mov
adc
jo
imul
dec
add
ss
inc
mov
std
shrl
ss
lods
data16
push
or
sbb
jo
rcrl
or
stos
push
aad
aaa
test
movsb
mov
jo
dec
jne
sub
fld
push
lahf
xor
xor
arpl
sbb
jp
jg
inc
cmp
jl
push
xchg
adc
fcmovbe
dec
inc
fldt
mov
sub
rorb
or
orb
inc
and
popa
out
cmp
add
adc
int
xchg
lahf
pop
jb
mov
sub
add
jae
xlat
push
ljmp
shll
sar
push
fs
insl
sbb
das
sbb
or
rcl
shrb
loopne
inc
es
mov
push
out
rorl
jae
xchg
mov
outsl
pop
cltd
fstpl
movsl
lret
stos
icebp
ljmp
insb
inc
call
stc
fldl
ret
pop
in
movsl
mov
sub
mov
adc
icebp
js
jle
int3
add
cli
push
push
loop
lret
repnz
fcoml
and
int
ret
rolb
out
add
out
pop
sub
sub
jb
ret
stos
into
mov
shlb
jmpw
cmp
sub
jg
lods
push
add
stc
cwtl
and
cmc
and
scas
push
fisubl
mov
roll
jmp
fsubs
push
jle
lods
lcall
or
add
jmp
xchg
lds
pop
add
inc
push
and
pop
out
push
ret
xchg
and
cld
add
cltd
loop
jl
mov
pushf
mov
fldcw
mov
pop
mov
or
icebp
jmp
mov
test
jns
aaa
cmp
lock
xlat
pop
test
rclb
fistpl
adc
xchg
aas
out
and
dec
pushf
cmp
aaa
pusha
shrl
cmp
xor
inc
xchg
cld
sbb
mov
std
and
shl
pop
xor
push
xor
int3
mov
xor
lahf
movsl
xchg
mov
jecxz
hlt
outsl
pusha
stos
or
mov
sarl
inc
cwtl
testb
ds
adc
mov
jno
push
jno
ljmp
mov
or
pop
adc
add
jg
pop
dec
pusha
cld
jg
add
movsl
ficompl
cmp
popa
jns
xor
pushf
mov
add
cmp
xor
repz
xchg
or
push
popf
jge
jo
mov
rcrb
subl
jbe
xor
imul
jae
mov
sbb
or
lods
xchg
mov
loope
stc
sbb
mov
cli
jb
fdivrp
sub
sub
ss
int
lret
mov
lods
insb
dec
int
adc
out
cmpsl
xchg
clc
xlat
mov
out
aam
lret
cld
pop
call
je
cmpsl
sub
sbb
rcl
adc
imul
lret
jge
out
jp
push
push
fcomps
mov
inc
cmp
push
dec
jae
xor
stos
sbb
jecxz
leave
jge
bound
out
mov
sbb
xchg
xorb
pushl
stc
test
ret
test
loope
or
sbb
and
push
pop
or
push
pop
inc
mov
repnz
rclb
out
inc
mov
sub
pop
scas
or
lods
pop
cmp
shlb
sub
jo
testb
fwait
mov
outsb
hlt
in
adc
xor
repz
xchg
jno
add
and
jne
pop
notb
test
pop
dec
std
hlt
jns
repz
ret
ljmp
add
stc
outsb
out
dec
cmp
push
or
cli
pop
negl
inc
adcl
addr16
in
xlat
and
stc
lea
loopne
cltd
out
pop
popf
xchg
arpl
jae
mov
jo
es
inc
enter
loope
aaa
xor
cmp
mov
push
imul
sbb
in
mov
in
das
cmc
xor
addr16
fadd
inc
xor
jmp
adc
outsb
or
jb
shlb
mov
sti
mov
adc
xorb
in
ficoml
lret
cltd
rol
xor
lret
fnstcw
mov
add
fnstenv
add
cmpsl
fstps
out
dec
cmp
outsl
pop
pop
sbb
enter
mov
xlat
adc
cli
xchg
xor
jp
dec
imul
mov
fstpt
jb
mov
jb
stos
jge
inc
mov
clc
arpl
sbb
cmp
sub
ljmp
stos
cld
ljmp
in
jns
push
inc
inc
in
daa
or
dec
pushf
sbb
pop
jl
xchg
inc
mov
mov
cmp
popa
idiv
mov
ja
xor
push
movsl
movsb
or
repnz
cmp
xchg
hlt
sub
jle
test
cli
sub
and
pop
and
imul
inc
sub
add
fsubl
pop
push
jmp
dec
xchg
and
jb
adc
dec
jb
aas
loope
stc
add
hlt
dec
pop
mov
cs
test
mov
in
rorl
test
adc
inc
dec
cmpsl
shlb
jl
push
xchg
xor
ja
jne
jp
rorl
add
and
mov
jne
in
test
jmp
mov
int3
cmpsl
inc
movsb
xor
cmpsb
lods
cmp
mov
pop
insb
mov
faddp
leave
dec
fisubl
and
pop
fbstp
call
ljmp
xor
loope
sbb
outsb
hlt
aam
and
cmp
add
push
dec
inc
mov
xchg
sbb
ret
lret
inc
fbstp
mov
mov
mov
stos
push
fadds
jnp
int
add
mov
les
into
and
mov
fsubr
xor
insl
aaa
loopne
dec
jb
mov
xlat
cwtl
mov
or
sub
faddl
popa
sub
shll
sub
iret
movsl
dec
dec
push
xor
jg
adc
add
push
adc
test
inc
pop
enter
dec
xor
sarb
xchg
or
sbbl
negl
jle
jl
aad
stos
jl
pop
inc
push
push
leave
dec
rol
test
dec
cmp
jnp
imulb
fs
sti
cmpsb
test
cmpsb
cmp
push
pop
fists
and
lret
xchg
jne
insb
mov
data16
dec
leave
pop
aad
or
mov
jne
mov
dec
test
js
xchg
mov
mov
push
shll
cmp
ficoml
and
pop
test
push
cmpsb
push
call
fimuls
sub
mov
into
add
mov
shll
cmpsl
loop
fnop
aam
add
mull
movb
mov
push
arpl
xor
inc
pushf
outsb
rcrl
xor
call
inc
gs
int3
incl
adc
jge
cmc
repz
jo
je
pop
inc
xchg
push
stos
add
pop
std
lds
jne
mov
xor
pop
xor
pop
jle
dec
cmp
call
pop
inc
cmp
xchg
pop
push
mull
out
dec
push
inc
mov
xlat
cmp
mov
push
hlt
loope
sahf
xchg
cmpsl
not
xor
dec
insl
mov
lds
adc
jmp
jge
xor
fstp
xor
stc
lods
sub
jb
adc
sbb
xchg
int
mov
test
and
mul
jno
mov
push
or
mov
cmpsb
daa
cld
push
jmp
or
filds
xor
stc
mov
sahf
dec
mov
lahf
mov
push
xchg
dec
hlt
lcall
outsb
mov
cs
sbb
adc
inc
out
inc
lahf
fdivs
push
sbb
and
push
cmp
mov
inc
cmp
pop
test
in
popa
aaa
adc
lret
fdecstp
mov
jmp
jnp
or
sbb
or
iret
sbb
addb
jmp
lock
fbld
cmp
lret
push
cmp
test
int3
inc
bound
popf
cltd
data16
cmp
jbe
and
or
add
movsb
jmp
push
loope
push
imul
loopne
orl
jecxz
sub
mov
sub
call
iret
or
mov
cmpsb
arpl
insl
jnp
dec
push
sub
scas
mov
and
adc
ror
fdivrs
cmpsl
mov
loopne
ja
mov
les
xor
inc
in
jge
cmp
xchg
cmpsl
nop
movsb
test
sahf
jo
jl
cmp
cmp
in
mov
push
sbb
sbb
mov
fmulp
das
mov
or
ret
roll
rorl
push
adc
inc
jae
outsl
xor
pop
or
icebp
rcrb
and
stos
in
jmp
inc
icebp
push
sbb
push
xchg
sbb
hlt
jne
out
cmpsb
jno
push
iret
mov
xor
test
jno
mov
adc
xor
push
dec
sub
jno
pop
ds
sar
push
cltd
fcoms
std
mov
std
inc
push
cmp
mov
jg
add
test
test
popa
jp
sub
dec
mov
ss
mov
add
xor
xor
mov
pop
jl
xchg
lds
dec
call
ret
cli
es
jb
xorb
lahf
imul
adc
cmp
mov
fmull
push
test
xorb
cwtl
add
pop
inc
mov
push
mov
ret
test
and
push
xchg
push
movb
mov
mov
push
outsb
aad
push
ret
das
stc
cli
aas
pop
mov
mov
sbb
insb
cli
or
sarl
les
inc
xchg
inc
mov
mull
mov
push
mov
xchg
mov
jne
fmulp
jecxz
xchg
pop
mov
sub
cmovs
pop
jae
stos
out
inc
jecxz
jge
lret
lock
out
std
push
fstpl
xchg
jl
mov
mov
mov
inc
push
outsb
out
dec
mov
push
pop
into
cltd
sahf
movb
lret
decl
inc
mov
cmpsb
sub
fisttpll
cmpsb
mov
outsb
cmpsb
inc
sub
js
notl
cmpsb
cli
mov
inc
repnz
jmp
loope
xchg
flds
jg,pt
out
cli
daa
sbb
xlat
mov
xchg
fwait
jp
and
rclb
jge
std
adc
push
mov
fcmove
sub
lahf
shll
add
mov
dec
test
mov
ret
sahf
push
in
pusha
cmp
scas
pop
sbb
cltd
aam
push
pop
dec
stos
jae
insl
xlat
fwait
rcrl
outsb
adc
rcll
xor
adc
jno
lods
fmull
mov
fwait
mov
stos
mov
fldenv
aam
xchg
in
and
rclb
mov
in
inc
ret
sub
and
pushf
aaa
stos
mov
push
xchg
xchg
enter
cltd
movl
add
dec
or
pop
adc
stc
test
mov
pop
fxch
push
add
hlt
push
cmpsl
insb
push
out
sbb
sahf
and
and
call
jl
xchg
gs
pop
xchg
mov
popf
test
scas
mov
mov
popf
das
mull
push
cld
adcl
insb
pop
js
test
inc
out
in
pop
mov
subl
and
icebp
mov
iret
arpl
or
pushf
ret
out
pop
sahf
cld
push
lock
inc
or
mov
add
loopne
int3
out
pop
mov
sub
adc
outsl
jb
int3
jae
or
lcall
cwtl
push
push
mov
jmp
fwait
jle
or
into
sub
incl
out
xchg
jb
sub
mov
cmpsb
outsl
pop
xor
push
jb
fidivs
addb
xor
push
cmp
in
push
or
mov
mov
js
or
or
mov
ljmp
adc
subb
stos
pop
in
shll
nop
mov
xchg
cmp
mov
enter
jecxz
hlt
jae
call
out
push
xchg
clc
loope
mov
xchg
fistpl
sbb
sub
mov
mov
out
rcll
pop
std
inc
ljmp
test
xor
les
push
rclb
fldl
jmp
push
adc
pop
ds
movsl
xchg
inc
iret
cli
xchg
repz
fcompl
fsub
xor
mov
and
push
stos
jle
imul
push
shlb
cmp
aas
cld
jecxz
push
repnz
mov
cltd
push
fdivrl
enter
pop
mov
jnp
or
notl
jnp
loop
jnp
je
int3
dec
icebp
nop
les
insb
or
cwtl
jno
jb
dec
mov
mov
pop
xlat
xorb
jno
xchg
std
push
sbb
mov
and
jbe
imul
lcall
jp
gs
push
scas
cwtl
subb
imul
adc
mov
inc
add
jne
mov
sti
cmp
or
pop
inc
xor
std
mov
out
mov
gs
sub
sub
ret
mov
imul
jbe
mov
rolb
lea
pop
push
in
fidivrl
pop
in
popf
cmpsb
bnd
lahf
lea
sahf
sarl
lock
push
stos
leave
sarl
or
mov
shlb
icebp
xchg
jae
pop
xor
dec
imull
sub
cmpsb
aaa
adc
roll
cwtl
mov
outsb
add
aad
hlt
lods
pop
outsw
clc
lods
sbb
fwait
roll
xorb
ljmp
stc
xor
jp
push
pop
nop
imul
jmp
inc
je
lret
dec
mov
repnz
ret
fwait
inc
mov
add
int3
fsubl
ljmp
loop
xor
mov
xchg
scas
lock
dec
pushf
sub
xor
or
inc
add
push
cmp
mov
dec
mov
ds
and
sub
xchg
sub
xchg
cmpsl
xor
shr
ss
lret
pop
jo
inc
mov
loope
sub
scas
lea
push
sbb
mov
mov
sub
rcll
rorl
ja
roll
cwtl
mov
mov
xor
add
lds
sbb
mull
stos
mov
jns
int
mov
and
maxps
ret
xchg
divl
add
adc
pop
cmp
lods
and
add
mov
adc
fstps
out
adc
js
mov
shr
push
ret
pop
flds
ja
rolb
in
lcall
or
fsubr
inc
data16
daa
sti
shl
add
mov
inc
cmp
iret
outsb
mov
push
and
sub
jnp
pop
sbb
xchg
inc
fiadds
out
sub
pop
inc
mov
jmp
sar
dec
xchg
push
in
push
iret
int3
sub
xchg
jmp
dec
pop
sbbl
in
pop
cmp
inc
divb
hlt
jmp
testb
mov
jne
xchg
pop
mov
xchg
push
inc
addr16
sbb
xchg
test
jne
xlat
cs
push
dec
rolb
dec
aad
mov
pop
arpl
mov
out
fiadds
inc
fwait
mov
and
jns
pop
movsb
scas
mov
mov
sti
push
mov
nop
es
retw
cld
jecxz
mov
inc
mov
cmpl
inc
dec
repnz
dec
push
mov
mov
lock
dec
push
jno
addr16
scas
test
imulb
mov
lds
hlt
jmp
aad
mov
mov
mov
es
dec
jns
pop
dec
sub
add
pusha
mov
jecxz
inc
push
mov
dec
sti
es
popa
push
or
add
loope
iret
jae
das
sbb
pop
test
jo
pop
cmpsb
sub
imul
push
jl
xchg
pushf
gs
test
push
adc
mov
test
mov
lods
iret
ja
and
or
ficoms
mov
and
sub
mov
adc
lods
pushf
push
lods
mov
insl
add
es
jp
xchg
or
lods
push
lock
clc
ljmp
push
dec
test
cmovb
or
fwait
loope
out
repnz
iret
mov
dec
dec
in
pop
int3
ror
out
mov
cltd
movsl
mov
cmpb
cmp
int3
ds
jae
jmp
mov
xchg
sbb
or
adc
xor
sbb
xorb
xchg
lret
xchg
mov
ja
pop
out
jmp
call
push
add
xor
test
popf
in
dec
das
test
sbb
push
mov
loope
sub
jmp
and
inc
test
lds
jno
enter
sub
movsl
test
mov
mov
jb
or
cmp
lds
inc
das
pop
fisttps
inc
loop
shll
rol
scas
push
or
cmpsl
popf
popf
out
clc
das
aad
rorb
mov
xor
out
rcrb
cmp
imul
adc
call
inc
sub
sub
ficomps
mov
ret
test
aaa
inc
cmpsl
sub
outsl
pop
ljmp
adc
mov
mov
or
es
push
std
cmp
testl
insl
xor
divl
adc
adc
cs
popf
or
mov
adc
push
mov
lret
inc
mov
daa
mov
subb
jbe,pt
cltd
fucomip
xor
test
sbbl
pop
sub
push
add
mov
loopne
arpl
mov
xor
jp
into
sbb
jns
sub
cmp
add
xor
fs
aaa
stc
push
loopne
testb
lcall
pop
push
test
jnp
mov
inc
rorb
cmp
arpl
mov
mov
and
pop
or
jnp
cmp
hlt
retw
sbb
ret
or
fcoml
adc
in
sub
adc
imul
mov
fildl
xor
arpl
aaa
enter
add
fisttpll
pop
stos
xor
data16
clc
sub
pop
adc
scas
sub
ret
adc
movsb
push
add
pop
adc
lret
sub
in
shrl
pop
pop
fwait
gs
pushl
adc
fldt
decl
jne
test
lock
pushf
ljmp
test
sti
imul
push
fisubs
ljmp
mov
stc
dec
dec
enter
scas
jno
pusha
inc
add
push
sub
jbe
or
aad
cmp
or
and
addb
mov
out
orl
inc
loope
xchg
dec
push
inc
or
add
mov
jge
cmp
fisubrl
jb
bound
dec
xor
rcll
xor
push
ffreep
xchg
adc
pop
or
or
cmp
outsl
sbbl
cmp
pop
dec
pop
xchg
pop
jp
and
aad
inc
mov
out
pop
jnp
into
jno
lock
mov
movsb
rorl
inc
pop
shlb
movsb
out
push
dec
dec
movsl
xchg
or
sub
sbb
mov
mov
adc
jge
adc
jne
push
mov
mov
xchg
addr16
cmp
cmp
sub
ljmp
mov
add
pop
test
sub
xchg
jno
lods
mov
scas
inc
push
xlat
popa
sbb
les
or
mov
push
dec
call
iret
xor
clc
push
xorb
andb
les
lods
jns
mov
test
sub
test
lea
jle
ds
cmc
and
inc
dec
or
fldcw
stos
movsl
inc
xchg
in
xchg
jp
mov
movsb
mov
push
cmpsl
xor
test
adc
fmull
mov
ficoml
rorl
adcl
push
imul
mov
cli
fsubrl
mov
popf
dec
xchg
xor
cmp
clc
mov
mov
call
movsb
inc
fisubs
mov
loopne
push
push
fstpl
into
ret
push
repnz
pushf
cld
push
adc
out
mov
mov
xchg
mov
or
pop
test
in
notb
aad
std
inc
xor
jl
xchg
repz
inc
pop
jle
insb
inc
jecxz
add
xor
test
iret
mov
int
jp
out
mov
arpl
cmc
test
sub
xor
insl
dec
aas
out
push
nop
aam
pop
xor
pusha
or
cmp
call
stos
sub
pop
out
xor
pop
leave
int3
enter
pop
in
pusha
idivb
gs
sahf
jae
cmpsb
xor
ds
data16
mov
mov
mov
mov
clc
or
movsl
repnz
leave
and
sahf
mov
pusha
fwait
push
fyl2xp1
ss
shll
jecxz
cmp
imul
addb
cld
aaa
push
mov
mov
push
scas
xlat
cmpsl
nop
cmp
pop
scas
adc
jo
lahf
ja
imul
insl
mov
call
addr16
scas
xor
add
scas
ja
or
mov
fldcw
lret
add
mov
cmp
test
push
imul
inc
repnz
sarl
movsb
adc
pop
fisubrs
jg
pop
addr16
mov
sbbb
push
stos
mov
popf
std
jo
aad
or
fucomp
gs
out
das
sub
insb
adc
sbb
add
or
and
sub
loope
fisttpl
cvtdq2ps
adc
pop
mov
inc
pop
mov
into
sub
test
jo
mov
adc
jle
lcall
je,pn
lret
icebp
loop
mov
push
and
xor
ret
xlat
test
aas
int3
xchg
sub
inc
dec
cmp
add
dec
mull
dec
xchg
es
xchg
outsb
fisttpl
cmp
xor
jno
sub
push
push
hlt
push
je
popa
and
xorb
xchg
inc
xor
or
out
adc
mov
sbb
mov
gs
and
jp
mov
dec
push
popl
push
outsl
sbb
mov
xchg
ret
pop
push
gs
mov
fadds
pop
test
inc
rorb
outsb
mov
push
mov
dec
inc
addr16
movsb
push
fistpl
neg
sub
pop
das
andl
cmp
jae
imul
call
scas
out
cwtl
popa
ljmp
mov
and
jnp
lods
test
idivb
mov
loop
movsl
push
test
and
or
out
in
call
push
pop
lahf
add
or
jbe
lret
scas
adc
inc
subl
ljmp
test
loopne
cmp
jmp
jg,pn
xor
fwait
enter
cld
mov
idivb
mov
push
frstor
push
mov
xor
adc
pop
push
pop
push
jecxz
sub
cmp
aas
mov
pusha
mov
dec
je
fadds
dec
aaa
mov
pop
push
xchg
cs
test
dec
shrb
mov
cld
and
inc
les
iret
cltd
gs
out
mov
jle
mov
xchg
lret
adcb
cmc
fnstsw
and
dec
rolb
sbb
test
enter
loope
sbb
ja
mov
rol
adc
out
loop
pop
sbb
jge
push
sbbb
dec
outsl
decl
fistl
fucom
subb
js
push
cmc
cmp
std
loop
movsb
inc
pop
pusha
dec
mov
orb
test
mov
mov
shrl
dec
je
mov
xor
mov
adc
pop
mov
mov
lea
mov
imul
xchg
js
cld
or
arpl
mov
push
test
jno
or
das
mov
es
out
mov
push
test
incl
fdivr
mov
cmc
cmpsb
push
addr16
or
lods
cwtl
roll
mov
and
aad
addr16
mov
js
sbb
jge
js
pop
mov
stos
push
lds
xchg
add
inc
daa
clc
adc
or
lea
mov
pop
push
and
xor
add
inc
xchg
shll
jns
pop
sti
mov
out
inc
jbe
xchg
mov
adc
scas
add
mov
adc
mov
daa
cld
int
cmp
cmp
jg
xor
in
adc
pop
sub
cmp
push
enter
rcr
in
xor
cmp
divl
imul
rcll
and
mov
mov
sbb
cmpsl
enter
dec
test
stc
mov
jno
lahf
icebp
imul
push
adc
inc
cmpsb
in
lahf
and
rcr
int3
mov
xor
add
or
cmp
dec
cmpsw
jmp
sahf
and
mov
cmp
dec
sub
daa
cld
not
cmp
int
dec
mov
test
jle
xor
dec
adc
fidivs
fldcw
in
add
in
dec
sbb
sti
inc
dec
les
cmpsb
stos
jl
ret
shll
fwait
adc
pop
push
imul
aaa
pop
aaa
pushl
xor
mov
scas
cli
lret
mulb
mov
xchg
bound
mov
nop
adc
sbb
fstpt
shlb
mov
pop
ljmp
mov
clc
or
mov
jle
dec
xchg
add
jne
cli
push
loop
lods
clc
mov
nop
mov
xor
ret
stos
popf
mov
insl
xchg
mov
stc
cmp
daa
stos
push
rclb
jno
push
lahf
js
pop
imul
push
push
aas
mov
fisttps
jns
lret
jno
scas
inc
inc
test
addb
shll
xor
xchg
and
dec
cli
fldcw
fninit
mov
push
sti
repnz
xor
mov
stos
push
add
sub
cltd
cmp
xchg
aad
mov
les
mov
cld
push
sub
cwtl
sbb
rcr
movsb
jnp
jp
inc
pop
sahf
out
xor
push
test
add
xchg
pop
dec
lods
xchg
jno
test
cmp
and
cmpsb
inc
mov
xchg
fucomp
mov
or
or
cld
xchg
popa
arpl
mov
xchg
mov
std
out
in
pop
leave
sub
xor
pop
movsb
dec
cmp
mov
jo
cld
xchg
pop
pop
inc
push
leave
xor
dec
mov
pop
xchg
mov
std
xor
xorb
and
dec
out
push
jle
adc
jle
adc
sbb
loop
jnp
mov
lahf
mov
in
adc
xchg
popf
mov
pop
xchg
sub
sub
push
cltd
mov
das
sarl
cmp
push
cmpsb
cwtl
xchg
jb
push
pop
xor
pop
movsl
dec
mull
lea
pushf
aaa
outsl
xor
cmp
addl
add
pop
sub
mov
add
in
sub
scas
sarl
adc
sub
subb
cmp
divl
rol
fxam
cmc
push
jl
dec
leave
xchg
mov
adc
loope
jl
or
hlt
stos
enter
pusha
sbb
in
out
mov
ficomps
enter
add
rcl
push
outsb
dec
add
sbb
sub
xchg
mov
sbb
daa
mov
add
mov
xchg
outsb
sbb
js
dec
adc
ja
mov
gs
mov
mov
iret
fmuls
ja
mov
pop
cmp
or
xchg
mov
push
add
icebp
push
cmpsb
ss
jmp
push
push
out
jae
jg
ja
dec
hlt
inc
add
fwait
jnp
mov
jmp
adc
dec
sbb
inc
pop
outsb
inc
stos
sarl
sbb
adc
jno
push
ret
cmp
sahf
jle
lret
mov
jnp
or
or
and
pop
mov
adc
js
clc
aas
sbb
cltd
xchg
cmp
sbb
add
push
push
cmp
cmp
cld
add
adc
mov
push
cmp
pop
mov
inc
sub
mov
cmp
cmp
inc
andl
stos
scas
pop
test
sub
sbb
stos
dec
stc
pop
mov
add
mov
add
xchg
adc
jae
into
xlat
mov
orb
dec
enter
push
sub
and
pmuludq
scas
xchg
adc
cmp
fs
out
mov
js
rorb
push
pop
and
ljmp
adc
mov
cmp
dec
xchg
insb
sbb
adc
fwait
and
pop
and
popl
jg
shlb
adc
orb
or
sbb
js
xlat
push
aad
les
adc
mov
and
aas
into
loop
shll
dec
mov
mov
insl
clc
insb
sti
loop
push
or
std
or
iret
in
xor
jp
mov
fimuls
outsl
mov
xchg
loopne
out
addr16
mov
dec
aam
pop
frstor
decb
gs
ficoms
cmpsb
dec
pop
mov
test
lock
lods
inc
repz
movb
push
mov
dec
dec
repz
pcmpeqd
fsubrl
dec
dec
pop
sahf
stos
push
aaa
das
add
pop
rorl
pusha
cmpsb
stc
fildll
mov
jne
stos
loope
dec
adc
adc
push
add
scas
mov
into
or
cwtl
dec
sti
divb
jo
stos
push
movsl
sbb
int3
add
and
mov
addr16
cmp
movsl
into
ljmp
nop
lds
aam
xchg
push
jge
pop
arpl
mov
push
les
aam
rol
in
imul
lret
mov
push
pop
xor
out
lods
aaa
daa
mov
sub
loop
outsb
or
mov
push
rcrl
inc
mov
add
cmp
mov
jnp
rolb
xchg
jno
inc
sub
mov
gs
sub
mov
inc
pop
cmp
fstpt
dec
xchg
push
popf
in
cmp
rolb
movsb
jle
cmp
dec
call
sarb
dec
iret
jne
mov
mov
lahf
por
es
sti
fldenv
push
mov
cmp
cmpsb
mov
sbb
pusha
lea
shr
adc
test
xchg
sub
lret
fdivs
sub
sub
dec
pusha
nop
mov
adc
xchg
dec
xor
mov
cmp
jo
in
call
int
data16
mov
je
ja
pop
in
or
mov
popa
adcl
adcl
into
into
jmp
fisttpll
pop
out
mov
adc
lock
and
mov
or
xchg
or
cmpsb
xlat
or
inc
sbb
jmp
cwtl
daa
push
jle
add
mov
inc
jo
daa
cs
xchg
jmp
cmp
dec
pop
push
aas
or
addl
xor
mov
dec
in
xor
sbb
pusha
arpl
scas
fnstcw
test
popa
sbb
cmpsb
and
dec
or
mov
bound
test
cmp
jb
pop
shr
fsubl
icebp
test
sar
jge
mov
je
out
fcomps
cmp
lds
sbb
pop
mov
pop
bound
lahf
gs
jp
cmpsl
imul
xchg
mov
pop
or
pushf
stos
aaa
fnstsw
jle
std
enter
push
inc
shlb
aas
outsl
repnz
rcrl
outsl
lods
hlt
in
inc
sub
aaa
pop
imul
fnsave
mov
enter
mov
xchg
mov
adc
dec
jmp
mov
sbb
adc
xchg
lds
pop
sub
jne
jnp
jge
lahf
pop
andl
inc
push
or
cmc
sti
and
insl
mov
out
mov
subb
inc
fmul
and
mov
shlb
xchg
aaa
xor
ds
adc
and
cmp
je
pop
in
pusha
sub
dec
xchg
les
clc
inc
stc
fsts
or
mov
inc
mov
leave
and
xchg
lock
cmpsl
sub
xor
pop
loope
lods
int
inc
mov
repnz
pop
or
xorb
rorl
mov
and
mov
loopne
cmpsb
inc
xor
aas
xchg
mov
push
fucom
jns
scas
fwait
and
push
movsb
add
lods
mov
popf
mov
mov
or
mov
int3
jg
fstl
shll
adc
dec
cmp
dec
pusha
shll
pop
repnz
and
pop
sub
jns
loopne
jmp
pop
js
jecxz
pop
inc
and
mov
mov
pusha
scas
mov
sub
iret
arpl
cmp
mov
adc
es
xor
fwait
in
aaa
lret
pop
or
fstpl
sbb
xchg
mov
test
fst
xchg
insb
jb
test
or
add
mov
lea
mov
ja
es
hlt
clc
xor
cmc
mov
xchg
xor
roll
xchg
mov
add
idivl
cmp
add
into
ret
jae
sub
cmpsl
shrb
dec
out
mov
inc
adcb
jae
dec
cmp
mov
mov
gs
repz
adcl
add
jmp
pusha
pop
cmp
pop
mov
aaa
ds
inc
popf
fisttps
dec
sub
push
xchg
cld
mov
pop
sub
scas
sbb
shll
cmc
lcall
fdivrl
out
jg
imul
mov
sbb
cld
std
pushf
pop
push
sbb
or
adc
or
xor
adc
pop
sub
cmp
pushf
fsts
sub
sub
jmp
in
mov
sub
sar
mov
sub
cld
decb
pop
decl
add
push
enter
in
fistps
iret
xor
mov
mov
mov
mov
push
push
lcall
ficompl
mov
mov
mov
shrb
mov
inc
pop
sbb
push
fbld
push
mov
xlat
pop
mov
cmp
cld
mov
add
pop
fs
mov
pop
pop
inc
dec
pushf
cmp
les
ja
js
jmp
mov
cmp
push
jmp
sbb
adc
jg
popa
test
jg
add
xor
in
push
fistpll
jae
outsb
mov
data16
dec
insl
movb
inc
pop
jmp
adc
notl
or
test
test
cmp
in
repnz
pop
js
or
xchg
mov
mov
add
pop
imul
sub
dec
movsb
mov
jo
push
dec
jge
cli
clc
mov
xchg
push
xchg
and
andl
sbb
pop
aam
bound
sbb
and
nop
out
jecxz
iret
mov
jae
int
in
arpl
jge
in
xchg
je
xchg
pop
jle
les
negl
cmp
cmp
outsb
inc
adc
push
dec
fwait
test
dec
mov
pop
je
test
dec
and
insb
sbb
into
cmc
sub
pop
pop
test
ficomps
cmp
clc
jnp
mov
pop
lret
inc
mov
inc
std
sbb
cmp
mov
and
jne
pushf
fcomi
mov
jns
gs
into
sub
cmpsb
fwait
dec
xorb
mov
or
mov
or
pop
inc
mov
sub
push
adc
and
lods
jno
cmp
push
aad
dec
insl
cwtl
arpl
daa
sub
xor
scas
jb
xor
divl
outsl
push
andl
orl
push
mov
jbe
loopne
cltd
cli
inc
icebp
ficomps
ds
sbb
lret
je
jb
and
xor
ret
adc
jp
rcrb
sbb
mov
inc
xor
mov
xor
pop
sub
movsl
out
aam
js
xchg
pop
jbe
and
adc
and
rcrb
out
pop
inc
or
xchg
mov
inc
or
fadds
sub
push
repnz
cmp
movb
inc
ret
jne
ljmp
testl
mov
fwait
andl
pop
enter
add
repz
bound
incb
push
ds
int3
fldt
mov
jle
lcall
icebp
push
flds
or
push
leave
push
dec
sti
push
aaa
sub
dec
call
icebp
mov
lcall
aam
inc
mov
mov
cld
mov
jae
xchg
mov
and
or
jmp
cmpsl
dec
push
add
out
and
lcall
mov
js
std
add
sub
jg
adc
bound
jns
sbb
les
shll
cs
push
mov
jbe
insl
inc
lahf
sahf
mov
or
sub
jne
cmp
and
fdivrp
subl
rcl
cld
jmp
cmp
ss
xchg
fbstp
mov
add
cld
sbb
orb
pop
sub
inc
cmp
aas
lcall
sti
das
pop
push
leave
adc
js
dec
mov
cli
aaa
and
jne
insl
xchg
idiv
jno
hlt
push
dec
mov
imul
xor
or
in
and
shr
fwait
mov
or
les
mov
dec
jmp
add
inc
pop
dec
xor
cmp
andb
les
pop
ljmp
push
popf
ret
nop
add
xchg
cwtl
jg
dec
dec
push
or
fisubrs
pop
cmp
dec
sub
add
mov
mov
in
shll
adcb
in
mov
in
mov
xchg
cmp
aas
and
push
pushf
stos
lock
fidivs
mov
in
or
int
iret
mov
imul
xlat
aas
loopne
jo
or
test
or
in
adc
mov
jns
push
adc
adc
fldenv
shrb
jne
mov
stc
lods
pop
push
call
cmp
sbb
mov
mov
xchg
cmp
and
ret
xchg
jno
out
cmpsl
pop
fsubr
ja
stc
int3
mov
push
push
in
pushf
and
pop
outsb
pop
mov
jp
fidivl
fimull
mov
fcomps
lods
test
aas
dec
loopne
adc
push
xchg
ficoml
adc
push
loop
or
xchg
mov
shll
cmc
sub
int
push
into
lret
mov
sbb
lods
iret
cld
xor
xlat
je
mov
push
jecxz
cmp
fadd
mov
xchg
xor
dec
xor
clc
or
lea
xor
sub
rorb
add
mov
mov
mov
adc
and
scas
pop
adc
sbb
insl
sub
idivl
in
int
jmp
lods
xlat
outsb
cwtl
or
xor
xchg
mov
cmp
pop
bound
out
jno
push
imul
pop
out
fnsave
insb
fisubl
cmp
out
sbb
pushf
icebp
mov
cmp
inc
in
push
and
adc
data16
xchg
mov
pop
jne
daa
iret
out
stc
jecxz
xchg
inc
jmp
push
subl
inc
add
repz
shl
fmuls
mov
mov
std
leave
adc
data16
add
out
push
cld
loop
mov
cmp
lret
adc
xor
and
inc
mov
daa
dec
shlb
mov
rorb
lock
js
sahf
lods
outsl
jg
xchg
das
or
add
mov
xor
pop
icebp
xorb
outsl
sahf
lretw
jle
xchg
mov
jle
leave
dec
jl
pop
mov
sub
sub
mov
or
jno
cpuid
add
nop
jns
and
mov
in
mov
pop
inc
das
add
mov
and
cmpsb
xchg
mov
mov
aas
in
mov
ljmp
add
clc
call
stos
test
pop
call
lahf
jge,pn
jae
mov
push
fidivl
add
xchg
pushf
mov
push
in
fsub
pop
pop
jns
mov
sahf
test
aam
mov
mov
ret
mov
sti
mov
and
rcr
cmp
mov
cltd
bound
mov
mov
jp
xor
in
add
out
adc
mov
xlat
inc
fisubl
mov
jmp
xchg
cli
pop
sub
aaa
add
mov
and
int3
pop
sti
ret
frstor
movsb
xchg
int3
xchg
push
mov
cwtl
adc
pop
scas
and
mov
test
jmp
outsb
xor
sbb
xor
sbb
xor
insb
push
fidivs
xor
xchg
call
cmp
fwait
pop
sbb
sub
in
in
jo
push
call
sbb
cs
mov
mov
jnp
xorb
push
jno
mov
lcall
cmp
adc
push
daa
lahf
lret
sub
dec
pop
sarb
data16
mov
jecxz
loopne
or
jmp
and
add
ret
jp
mov
test
adc
mov
cltd
lret
cmp
dec
jp
add
outsb
cmp
sti
inc
iret
lds
shl
enter
in
pop
sbb
pop
pop
jge
and
jge
fwait
frstor
sub
push
mov
jp
adc
lods
inc
scas
mov
das
add
gs
and
pop
mov
imul
les
mov
mov
dec
sub
fsubs
inc
inc
jge
je
gs
loop
jae
stos
ucomiss
xchg
add
ret
std
iret
pop
cltd
fs
cli
lods
cld
jge
pop
fsubl
aam
cli
sub
insl
jno
enter
ss
test
add
push
and
aaa
adc
pusha
xchg
cmpsl
test
mov
mov
xlat
adc
pop
in
inc
icebp
xor
fnsave
in
dec
pop
dec
out
imul
adc
clc
pop
out
daa
into
adc
push
jae
mov
push
push
or
mov
mov
icebp
in
xchg
mov
sbb
mov
jne
adcl
outsb
out
and
scas
test
mov
sub
or
lcall
push
stos
into
pop
dec
enter
lods
sub
xchg
inc
mov
test
mov
mov
jp
push
and
pushf
call
mov
xchg
outsb
ss
pop
loope
inc
sahf
sub
push
or
stos
push
xor
or
jns
or
add
jb
rol
iret
xchg
jo
dec
loopne
std
xor
xor
enter
xor
hlt
out
or
push
or
mov
outsl
cwtl
push
call
repnz
dec
andb
xor
hlt
cmpsb
ret
mov
sub
push
mov
sub
and
cmp
jb
xlat
xor
mov
sub
jle
shl
dec
pop
lea
loope
push
push
sarl
call
and
imul
mov
dec
aad
cmpsl
xchg
mov
jne
add
jnp
xchg
adc
pop
cmp
and
and
sub
pop
or
cltd
sub
dec
iretw
iret
aaa
sbb
mov
gs
or
das
push
hlt
adc
add
add
dec
xor
je
mov
push
add
cmpsl
sbb
or
xor
add
repnz
add
inc
imul
mov
cmpsl
xchg
subl
sar
inc
int3
mov
and
stos
push
fnstsw
xchg
ds
mov
or
outsl
sub
dec
pop
dec
xchg
std
stc
jb
das
pop
dec
pushf
mulb
clc
push
push
pop
fwait
inc
dec
xor
out
nop
movaps
sub
mov
call
icebp
fs
jno
fistl
movsb
loope
shll
js
xor
fwait
mov
mov
cltd
fsubr
and
inc
jmp
lcall
mov
mov
int
leave
test
pusha
movsb
dec
jmp
add
in
mov
jmp
pop
cld
cmpsl
pop
and
dec
fnsave
push
cmp
out
mov
cmp
jmp
mov
mov
sub
in
push
pop
dec
add
fwait
xor
cmp
nop
fsubl
test
rorb
in
test
sub
dec
sahf
inc
mov
inc
pop
enter
outsb
iret
mov
pop
dec
sbb
mov
bnd
dec
pushl
aaa
test
adc
unpckhps
cmp
int
jl
movsl
es
jo
xchg
int
jge
imul
dec
pop
push
push
or
and
loop
pop
push
mov
push
pop
dec
das
jg
inc
int3
cmp
mov
push
sbb
fdivrs
stos
push
mov
push
rcll
clc
cmp
sti
ss
jns
sbb
enter
int
cmp
push
or
jmp
xchg
gs
lods
das
movl
mov
add
mov
addr16
sub
and
lahf
or
scas
ds
push
add
jmp
roll
inc
xor
pushf
gs
push
cld
sarb
cld
pop
or
rcl
lcall
xchg
or
dec
push
dec
push
add
or
mov
pop
popf
dec
lods
sub
in
mov
std
fadds
sub
stos
cmp
cmp
loope
idiv
movsb
adc
lock
adc
daa
cltd
daa
xchg
lods
or
pop
test
decl
ljmp
repz
decl
pop
mov
flds
incl
jbe
cwtl
mov
sarb
aas
inc
out
outsb
lock
test
xchg
jecxz
xchg
in
je,pn
loopne
and
pop
dec
hlt
push
jne
lret
xchg
aaa
mov
inc
add
outsb
push
out
mov
jnp
mov
xor
dec
notb
shlb
cmp
pop
aaa
push
jae
xlat
popa
mov
adc
test
mov
cmp
test
iret
loopne
cld
xchg
sub
lret
ret
ds
cmp
xorb
ror
aas
dec
xchg
fcompl
loope,pt
aad
or
add
mov
out
adc
push
sbb
insl
xor
jp
scas
pushl
rep
imul
mov
popf
pop
out
mov
push
push
sbb
add
aad
cmp
arpl
out
dec
lea
pop
inc
addr16
ljmp
hlt
je
inc
int
or
cmp
mov
imul
cmpl
imul
lock
out
movsb
cld
xchg
enter
mov
into
push
push
push
cwtl
loopne
in
sub
push
mov
or
in
sub
arpl
fdivrp
iret
pop
pop
mov
jmp
fldl
mov
jmp
xchg
sub
adc
xlat
push
leave
popa
xor
push
mov
xchg
idivb
aad
and
sub
mov
inc
push
sub
cmp
pushl
cmp
lret
sbb
push
ljmp
xchg
push
fs
dec
push
or
movsb
or
out
sbbb
add
nop
push
push
sub
lds
fistl
pop
nop
jp
push
shll
xchg
and
test
pop
push
xor
lea
enter
cwtl
testb
xchg
decb
clc
out
mov
or
movsb
xchg
jbe
das
cmc
cmp
or
jnp
cwtl
push
data16
mov
mov
add
dec
pop
push
das
and
jae
sti
mov
xchg
pop
dec
xor
jp
mov
cmp
sbbl
lock
in
and
add
fabs
or
sub
mov
aaa
dec
into
add
inc
mov
clc
sbb
push
dec
loope
jmp
popf
in
daa
ljmp
xor
daa
xchg
xor
or
or
std
mov
adc
ficoms
and
adc
in
sub
test
inc
dec
loop
mov
push
xchg
out
dec
scas
push
mov
test
rcl
xchg
pushf
jno
sbb
xchg
fdivp
scas
call
mov
push
push
pop
sbb
mov
shll
mov
cmp
sbb
fnstsw
andb
test
push
outsb
mov
mov
or
cmpsb
pop
lret
aad
fs
addr16
jo
push
sbb
push
push
ds
adc
push
push
fists
sarl
popf
ret
jle
xor
or
push
jg
sub
xchg
or
nop
in
xor
cmpsl
int3
cmp
push
movsl
push
inc
in
lcall
push
movsl
mov
xorb
xchg
lret
loop
in
mov
mov
jp
ds
inc
ja
mov
popf
ret
adc
imul
jae
xchg
add
cmc
lds
inc
fcoms
or
ret
lret
shrl
sbb
inc
rcrb
in
cli
je
push
and
int3
aas
push
aas
xor
mov
cmp
and
dec
and
xor
ja
sub
outsb
bound
cmpsb
push
xchg
ror
pop
sti
jmp
or
orb
mov
movsl
push
push
or
cs
sbb
sub
inc
movsl
scas
repnz
pop
loope
cmp
jmp
cld
sbb
dec
cmpsl
lret
xchg
mov
xchg
popa
xchg
nop
cmp
cld
ljmp
imul
jae
mov
or
xchg
out
dec
push
int
sub
in
xor
enter
mov
rol
cmc
cs
xchg
mov
outsb
out
shlb
dec
inc
push
leave
cmp
scas
fsubl
dec
in
sbb
xchg
adc
mov
cmp
mov
iret
push
pop
pop
daa
test
sarl
mov
mov
push
pop
push
in
dec
sbbb
pop
pushl
popf
pop
dec
jo
pop
and
jmp
fadd
das
xchg
ss
cwtl
lcall
lock
and
dec
fwait
jmp
fadd
nop
mov
sub
jl
scas
dec
xchg
push
movsb
or
lret
push
loopne
pop
mov
mov
fstps
xor
cmpsl
daa
xchg
add
arpl
jmp
jge
jge
popa
cmp
dec
cmp
cmc
push
inc
arpl
cmovns
dec
push
mov
pop
jo
xor
ret
mov
incl
push
jb
add
rcl
jp
jecxz
mov
push
add
push
cmc
mov
inc
sbb
push
and
dec
roll
std
ljmp
fstpl
shll
xchg
fwait
ret
mov
fwait
test
dec
out
in
adc
xor
stc
aaa
add
dec
and
mov
inc
aaa
cltd
xchg
and
fists
subb
je
ret
push
inc
das
imul
xor
add
jmp
fsub
mov
sub
mov
aam
mov
jne
dec
push
xchg
int3
cltd
in
jbe
rolb
xor
inc
insl
xchg
fdiv
icebp
clc
mov
ds
push
mov
xchg
leave
push
mov
push
into
pop
aaa
pop
xchg
jl
sub
ror
repnz
jmp
push
sbb
insl
jne
push
fs
dec
repz
mov
mov
in
sti
stos
xor
xchg
je
stc
sub
adc
and
mov
pop
inc
in
mov
imul
sti
push
xchg
xchg
movl
xor
mov
sub
icebp
xor
and
sti
inc
shll
scas
cmc
xorl
dec
dec
test
and
in
push
out
call
fdivrs
mov
fcomp
sub
and
pop
dec
scas
stos
and
sbb
push
adc
mov
and
dec
mov
hlt
mov
outsb
push
push
sbb
fmull
js
les
loop
and
jl
imul
dec
fidivrs
jg
shr
clc
bound
ljmp
add
lock
or
push
and
mov
inc
push
cwtl
or
sub
stos
push
cmp
mov
in
loope
je
jns
adc
sti
test
negl
sbb
xchg
stos
int
fstps
jp
sub
mov
push
lods
push
repnz
lcall
loop
push
aad
int
mov
icebp
inc
mov
xor
or
jb
call
stc
pop
icebp
ljmp
daa
inc
data16
ret
or
ret
outsl
pop
jae
jno
bound
or
and
in
or
or
mov
in
stc
outsb
subl
push
scas
rclb
decb
test
popa
push
cwtl
aaa
sbb
xchg
dec
sub
push
stc
stos
gs
out
popa
inc
sub
mov
into
idivl
dec
outsl
pushf
and
jo
fcmovu
repz
mov
stc
rorb
adc
stc
jbe
test
xchg
in
push
cli
push
cmovbe
mov
popa
xchg
cli
sbb
lods
jp
push
mov
xchg
dec
js
imul
sbb
jge
pop
imulb
and
push
nop
lahf
fwait
mov
cmp
popa
add
out
mov
cmc
bswap
psubsb
repnz
mov
js
add
adc
inc
inc
mov
inc
nop
adc
test
push
or
je
mov
dec
adc
loope
xchg
mov
xor
inc
ljmp
inc
aaa
mov
out
and
jnp
push
mov
adcb
subb
pop
nop
and
int3
std
push
jbe
repz
adc
xor
mov
inc
mov
test
outsb
xchg
push
out
jnp
fistps
out
pop
movsl
into
pop
mov
imul
loope
lock
pop
mov
stos
in
lds
arpl
cmp
push
leave
inc
lds
mov
sub
xor
mov
stc
pop
mov
fidivrl
sub
pushf
sbb
sub
fcoml
jle
stc
sahf
push
sub
inc
cltd
cmp
fsincos
dec
push
inc
xor
dec
daa
jae
lret
mov
xchg
mov
aam
xchg
cmpsb
add
in
repz
hlt
pop
adc
aaa
sarl
scas
jnp
lahf
in
cwtl
imul
clc
notb
pop
roll
pop
push
pushf
cmp
mov
sub
push
subb
out
mov
clc
push
lret
xor
xor
xor
xlat
sbb
movsb
mov
mov
sbb
dec
sub
xchg
js
jns
xor
rcll
cwtl
cmpsb
lock
pop
enter
mov
aad
data16
mov
jbe
jns
out
push
jns
inc
xor
hlt
sub
dec
std
jle
test
scas
or
imul
sar
xchg
mov
fisubs
in
xchg
gs
out
movsb
out
mov
cs
mov
aad
ret
nop
cmp
inc
xchg
mov
pop
add
movsl
out
pop
cld
push
jae
out
fildll
cmpsb
imul
out
nop
ss
les
pushf
mov
push
cmp
adc
xchg
lcall
cli
sbb
and
jl
add
loope
push
pop
push
lea
aaa
add
loopne
aam
nop
adc
jno
inc
mov
fiadds
or
pushf
inc
xchg
repnz
sahf
ja
mov
test
lock
cmp
cmp
fsubs
add
divl
negb
les
sbb
sbb
cmc
add
imul
adc
imul
in
push
mov
and
daa
fcmovnu
xchg
nop
sbb
std
frstor
or
fdivs
daa
xchg
mov
cmp
outsb
mov
lret
and
inc
xor
push
js
and
fisubl
daa
xor
in
mov
clc
xchg
sbb
cmpsb
jmp
push
lret
or
dec
into
ss
pop
fs
fst
push
or
dec
int
jnp,pn
inc
mov
rcrl
xchg
add
movsl
xchg
dec
ret
push
decl
gs
test
cmpsl
imul
int3
orl
mov
in
xor
lret
inc
or
ficoms
cmpsb
dec
jge
jmp
mov
jmp
mov
in
test
adc
pop
mov
hlt
adc
sub
test
test
in
fdivs
mov
iret
mov
lret
pop
xchg
push
sbb
and
das
inc
dec
push
scas
repnz
sbb
cmpl
mulb
xchg
ljmp
push
cli
or
sub
lret
test
jecxz
push
das
mov
adc
jmp
scas
pushw
xor
cmp
or
subl
out
iret
fmull
jle
into
popf
mov
push
in
repz
fisubs
add
in
cmc
lret
cld
stos
std
outsl
xchg
adc
testl
mov
xchg
imul
in
adc
or
sub
jl
ret
jecxz
fiaddl
pop
inc
mov
loopne
jne
mov
jle
sti
imul
xchg
into
xchg
arpl
xlat
mov
dec
stos
xor
imul
add
aam
jg
pop
pushf
mov
and
shlb
adc
push
push
jmp
jns
sub
push
pop
and
repnz
fbstp
jnp
jb
pop
dec
cmc
xchg
lahf
add
testb
xor
jmp
sub
cmc
or
adc
and
cwtl
adc
xor
push
popf
aas
aad
popa
jmp
xchg
xor
and
cmp
mov
aad
jno
or
adc
lock
stos
imul
fs
sub
cld
dec
int3
or
mov
inc
int
sbb
jno
mov
addb
inc
dec
leave
aas
mov
pusha
cmpsb
les
cmp
mov
mov
xchg
ja
fldl
dec
push
mov
rclb
xchg
pop
rcrl
popa
mov
rcrl
mov
cmpsl
dec
les
inc
data16
scas
sti
insb
repnz
jbe
bound
mov
pop
js
out
loope
push
lock
lock
cmp
cli
lcall
push
leave
push
daa
jae
adc
shll
enter
ljmp
jb,pn
cltd
mov
mov
or
sbb
or
imul
xchg
shll
btr
addr16
mov
dec
mov
xchg
mov
stos
sbb
pop
hlt
sbb
inc
mov
out
or
xor
ljmp
cmp
mov
cmpsl
or
jg
nop
and
pop
icebp
sbb
lret
jnp
push
push
data16
clc
test
cs
popf
stos
clc
in
pusha
inc
loopne
add
xchg
mov
insl
jmp
movsl
int
xor
test
jmp
es
dec
cltd
pusha
out
fsubl
push
jns
andl
imul
data16
mov
lds
test
push
cmpb
inc
sahf
or
pmaxsw
pop
mov
inc
dec
mov
xchg
imul
jb
decl
and
xchg
add
jle
jmp
xchg
lret
lcall
cmp
scas
sub
cmp
cmp
cmp
int
mov
in
fsubp
aam
mov
mul
or
inc
roll
add
adc
adc
adc
out
cmp
inc
or
test
icebp
lcall
lcall
mov
add
inc
pop
shrl
jnp
pusha
fimuls
stc
popf
pop
cmp
divb
sub
cmc
push
xchg
in
ljmp
sahf
dec
adc
dec
hlt
sub
fwait
sub
lea
inc
movsl
cli
leave
imul
push
sub
sbb
das
or
popa
mov
pop
mov
sbb
push
in
jg
and
and
enter
mov
test
add
mov
xor
loopne
pop
xchg
or
or
lahf
in
mov
inc
aaa
dec
sahf
cld
orb
arpl
or
or
dec
cmp
sbb
lahf
stos
dec
subl
dec
ficoml
mov
mov
out
push
pop
add
push
rclb
adc
stos
push
stc
popa
lahf
ret
jg
outsl
dec
hlt
in
stos
pushf
cmp
push
cwtl
shl
push
ss
icebp
inc
pop
fs
adc
nop
test
cmpsl
mov
xor
xchg
out
mov
icebp
xor
push
imul
jae
adc
in
negb
push
add
adc
int
inc
dec
lahf
mov
or
mov
ss
incl
arpl
lcall
rcr
adc
lcall
sub
icebp
or
cli
scas
rolb
mov
cmp
jb
inc
xchg
or
mov
sub
sbb
mov
pop
cmc
ficomps
ret
sti
aad
jb
lret
mov
in
adc
push
divb
xlat
cld
or
push
jno
fnstcw
std
arpl
in
push
iret
out
fs
inc
stc
sbb
mov
cltd
mov
sub
pop
mov
mov
jmp
mov
and
aas
in
mov
pop
inc
or
les
loope
test
add
jnp
mov
or
outsl
mov
add
xor
pmuludq
std
xchg
pop
out
stos
jl
test
xchg
add
add
clc
dec
push
mov
bswap
mov
push
jno
les
and
ror
ficompl
push
cmp
push
loopne
das
adc
mov
mov
dec
in
sbb
out
push
cmp
adc
or
fidivl
das
push
pop
pop
mov
scas
xor
cmp
lahf
jno
pop
daa
jbe
xor
push
inc
pop
inc
outsb
inc
cmp
mov
fwait
mov
cltd
lahf
dec
pop
loop
imul
xor
jl
loopne
jge
jmp
mov
add
sbb
mov
jns
pop
js
fdivrl
xchg
pop
mov
scas
xchg
mov
push
dec
or
into
aam
cmp
jb
xor
push
jb
or
adcl
push
mov
bound
cmpsl
and
jge
stos
mov
test
xchg
rorl
nop
dec
sub
shl
movsb
push
fsubrl
int
adc
mov
xchg
and
jge
inc
fsubrp
jl
shrb
or
jbe
loop
push
push
icebp
mov
jne
mov
filds
js
popa
mov
mulb
sub
add
mov
xor
div
in
xor
pop
dec
pop
repz
push
gs
xorl
adc
cmp
in
dec
int3
aaa
cmpl
repz
mov
lcall
negl
mov
add
aas
or
ljmp
mov
dec
add
mov
int
jg
push
aaa
jnp
adc
lret
xchg
xor
push
sub
in
mov
das
mov
iret
pop
pop
push
js
cmp
cld
mov
xor
cmpsl
scas
out
clc
dec
fs
xchg
or
cs
xor
aas
mov
into
rclb
pop
shl
out
movsb
ret
mov
push
fstps
xorl
outsb
sbb
fdivr
iret
sub
int3
xchg
movq
gs
mov
nop
ljmp
push
sbb
data16
inc
std
inc
mov
push
fcmovu
pop
cmp
lods
xchg
mov
mov
es
xor
xor
rcrl
sbb
xchg
hlt
rolb
xor
dec
pop
and
mov
jg
xchg
push
or
pushf
incl
ss
mov
and
xchg
pop
pusha
sub
insb
sti
cmpsb
daa
inc
sbb
fcomps
pop
test
sbb
jl
rcll
mov
and
mov
loop
pop
ljmp
mov
and
sub
jne
fstpl
inc
cs
cs
stos
in
clc
dec
xor
rclb
cld
cmp
and
adc
int3
cmp
jbe
lods
addw
sub
xchg
jp
lahf
or
repnz
dec
inc
jne
push
or
out
std
enter
inc
div
add
outsb
test
inc
in
pop
cltd
lcall
jl
mov
daa
sub
xchg
mulb
arpl
fs
stos
and
sub
push
dec
cmpsl
dec
js
add
sbb
fldt
enter
pop
enter
iret
cmpsb
mov
sub
cs
or
and
jbe
lcall
gs
test
jae
dec
mov
lcall
test
push
push
fnsave
adc
mov
jp
in
jo
cmpsl
test
adc
jle
imul
sar
mov
xchg
jmp
ljmp
es
and
jo
push
fs
lret
int
pop
xchg
movsl
mov
stc
fcmove
pop
mov
scas
mov
mov
dec
std
hlt
bswap
fadd
jns
push
dec
jns
sahf
shr
lret
or
or
out
pop
loopne
scas
mov
mov
xor
out
xchg
cmp
daa
mov
push
cmp
adc
ret
inc
add
fists
gs
aas
sub
mov
dec
or
mov
arpl
idiv
cld
jnp
inc
jae
mov
adc
scas
cmpsb
push
ss
xchg
repnz
ret
or
jno
int3
testl
insb
movsb
xor
test
stos
or
int3
divb
loop
test
mov
mov
jae
mov
call
sub
stc
mov
js
lahf
mov
enter
aad
jecxz
push
mov
push
loop
insb
sub
dec
popf
or
inc
pop
mov
sbb
imul
jl
sbb
add
negl
or
mov
dec
js
xor
das
in
mov
xor
mov
stos
inc
in
ljmp
mov
mov
adc
xlat
push
mov
jg
jbe
jbe
loope
mov
mov
cmc
sbb
inc
aad
lcall
test
outsb
es
lcall
pushf
jge,pn
and
addr16
cmp
jnp
push
ss
stos
int
jle
add
pusha
or
aas
sbb
rol
or
cli
xchg
push
or
push
sahf
rcrb
adc
pop
roll
push
imul
mov
add
inc
xor
dec
cltd
aad
adc
cmp
ss
xchg
xorb
inc
gs
sub
xchg
sub
add
cld
pop
jbe
xchg
and
inc
stos
sub
arpl
inc
xchg
inc
sub
test
inc
cltd
push
lea
ja
lds
rcrb
mov
inc
hlt
mov
or
stos
in
stos
inc
add
jb
mov
les
out
push
popa
test
insb
int
imulb
cmp
int3
mov
push
movsl
and
mov
loop
lock
sub
repz
imul
outsl
cmp
push
fsub
dec
mov
inc
push
xor
sub
and
inc
std
aam
mov
pop
in
jge
imul
rorb
push
or
mov
faddl
aas
pushf
imul
mov
inc
xor
jmp
cmp
js
sub
xor
dec
ds
lahf
insl
pop
aam
add
xorl
mov
das
addr16
dec
daa
mov
in
in
cltd
int
aaa
fs
js
pop
out
mov
inc
xor
xor
pop
subb
fwait
sub
pop
inc
or
push
pop
dec
ret
pop
mov
das
js
lcall
ret
xor
negl
jne
lret
adc
das
cmp
clc
cmp
test
sti
ljmp
mov
out
fldl
imul
bound
jno
insb
stc
cmp
cmpsl
mov
ficoms
adc
sbb
popf
jecxz
shr
sbb
sbbl
movsb
popa
push
leave
fdivr
dec
mov
sub
jnp
aaa
pop
mov
andl
mov
push
sub
iret
in
pop
sbb
add
or
inc
push
mov
stos
rorb
stos
cmp
push
push
xlat
and
pop
xchg
aaa
out
mov
leave
pop
mov
shll
orb
call
mov
cmpsl
jg
lods
jae
imul
cs
ret
pop
mov
sbb
xchg
xor
or
jle
test
inc
cmp
or
xor
xchg
pop
or
xchg
rclb
xchg
dec
cltd
outsl
pop
leave
movsl
mov
dec
arpl
roll
jmp
dec
repz
outsl
cmpsb
sbbl
pop
push
addl
dec
cmp
jne
cld
jne
in
pop
rep
test
js
lahf
or
test
inc
xor
rcr
mov
loop
fiadds
jae
dec
fbstp
rcll
fmuls
inc
ficompl
mov
es
rolb
mov
xor
test
jo
xchg
mov
outsl
test
popa
loop
out
mov
ljmp
sub
pop
xor
inc
sub
and
pop
push
sub
sub
fcom
cmpsl
aas
dec
movsb
mov
push
xor
push
mov
out
push
ret
fldt
jle
mov
add
jne
aam
push
push
xorb
push
cmp
arpl
out
lea
shrl
jmp
adcb
lock
test
in
cmpsb
mov
cmp
sbb
inc
mov
sbb
mov
and
lret
bswap
call
rorb
cmpsb
xor
dec
int3
dec
sbb
mov
mov
rcrl
mov
ret
pop
leave
cmp
int
add
mov
push
xor
inc
faddl
mov
inc
mov
fnstsw
dec
movsb
adc
cmp
cltd
xor
sbb
clc
mov
test
js
xchg
add
mov
xlat
add
push
inc
cmovbe
jno
cld
in
sub
mov
test
or
loopne
mov
push
and
pop
pop
sbb
movsl
das
jbe
adc
fadd
imul
sub
and
andb
sbb
mov
mov
repz
xor
fdivr
mov
add
or
rolb
flds
and
shll
mov
cmp
outsb
adc
int
jmp
jns
rclb
or
xadd
jmp
or
adc
out
add
cs
xchg
insb
stos
mov
js
sbb
jne
lods
xlat
pop
cld
jg
pop
xor
pop
test
inc
mov
xor
adc
in
lods
mov
cmc
sti
cwtl
sub
js
mov
bound
mov
pop
das
pusha
arpl
insl
fs
inc
call
dec
xchg
addr16
dec
in
cmp
mov
stc
adc
push
adc
and
xchg
inc
std
adc
jo
fwait
mov
mov
or
xor
inc
negb
sbb
cmp
js
and
push
shrl
xchg
sub
push
sub
xchg
adc
jmp
mov
dec
dec
test
add
add
cs
sbb
stos
arpl
xorb
cld
insl
xchg
pop
push
dec
in
mov
jecxz
dec
jb
add
sub
or
pop
test
sub
mov
and
into
pop
inc
sub
mov
sbb
inc
and
out
jecxz
arpl
lds
lods
out
adc
or
pop
ss
jle
lcall
sbb
arpl
imul
or
lods
pusha
icebp
or
sbb
icebp
aaa
xchg
pop
gs
mov
dec
cmpsl
cltd
sub
dec
lret
adc
shrl
mov
sbb
push
jae
adc
test
icebp
mov
addr16
nop
lahf
jae
imul
or
les
ds
inc
stc
push
loop
push
das
xchg
stos
mov
sub
jnp
aaa
cmp
loope
jp
mov
push
sub
mov
cld
sbb
xchg
pop
pop
rcr
addb
jb
rorb
sbb
sbb
or
rclb
sti
mov
jecxz
mov
lea
xor
mov
cld
mov
mov
pusha
push
cwtl
addl
cmp
popa
mov
test
dec
dec
push
xchg
dec
orb
rcrb
cld
mov
test
popf
lock
mov
mov
out
or
addl
lcall
sti
pusha
orl
insl
sub
push
pop
js
cmp
add
cltd
negl
mov
leave
sbb
aaa
out
push
fisttpl
pop
hlt
aam
call
adc
and
adc
sub
jbe
pop
pop
dec
sub
adc
push
jb
inc
jl
cmp
inc
xchg
popf
adc
clc
mov
rolb
xchg
xchg
xchg
dec
into
test
scas
xor
notb
pop
cli
sub
jnp
shrb
cmpsl
dec
stos
xchg
mov
icebp
rcrb
dec
loope
mov
push
pop
xchg
lret
movsl
lods
aam
lock
mov
lods
mov
dec
sub
testl
ljmp
les
jle
je
pop
ds
lret
insl
jno
lret
mov
jl
inc
test
dec
add
aas
dec
sbb
sbb
cmpsb
movsb
adc
arpl
ret
outsb
mov
add
or
push
mov
mov
hlt
test
push
call
out
mov
stos
or
cwtl
inc
stc
leave
rcrb
cwtl
aad
cmp
cmp
push
sub
repz
or
hlt
pop
add
xor
out
inc
pop
dec
sbb
add
dec
add
outsb
sti
lods
gs
stos
or
ja
xor
out
imul
jbe
insb
adc
sbbb
pushf
icebp
dec
cmp
pop
jnp
je,pt
and
inc
dec
cmp
and
leave
clc
cmp
mov
mov
rolb
xor
in
pop
popa
push
imul
mov
fwait
or
cltd
jno
fistps
lea
out
xlat
sbb
mov
out
sub
cltd
jo
in
add
iret
xchg
cmp
dec
jne
mov
test
adc
or
mov
sarb
addr16
lahf
data16
data16
push
shrl
andl
jb
sbb
or
add
sahf
insb
cltd
shl
cmpsl
inc
dec
test
mov
mov
xchg
jge
les
adc
push
lret
cmp
push
filds
pop
cmp
and
sub
pop
js
push
sbb
ss
and
in
paddq
mov
xchg
bnd
test
dec
loope
loop
data16
test
xchg
jmp
jo
push
lods
or
push
inc
sub
mov
dec
insb
sti
jl
mov
dec
pop
std
jmp
mov
fstpt
xlat
jno
mov
and
push
mov
xor
sub
out
pop
xchg
es
ret
ret
fnstcw
neg
or
push
xor
das
cmpl
push
push
cmp
test
bound
addr16
adcl
testl
out
sbb
and
fmull
mov
mov
jp
imul
shrl
cmp
sbb
fdivrs
and
jno
popa
jg
stos
repnz
lahf
lods
inc
repnz
mulb
jo
jle
shl
cltd
cmpsl
and
psllq
xchg
adc
aas
test
push
and
push
testl
dec
jbe
lret
loope
fucom
mov
add
ficoml
sbb
xorl
cmc
bound
jno
dec
jle
fsubs
scas
lahf
push
dec
lret
filds
aam
stos
jmp
in
sub
es
mov
out
xchg
pusha
les
clc
adc
sub
adc
fistpl
push
mov
cmp
imulb
fs
out
rcll
arpl
rol
hlt
movsl
or
sub
jnp
incl
cs
cmp
pop
insb
out
push
push
dec
popf
cs
or
xchg
pop
sahf
adc
xlat
dec
inc
xor
pop
lcall
adcl
sbb
in
fists
sbb
dec
mov
add
mov
cltd
das
pop
mov
pop
lods
lds
inc
cmp
test
cwtl
lcall
aad
mov
dec
jp
sub
xor
ljmp
pop
mov
push
pop
aam
xchg
or
addr16
pop
mov
pop
mov
scas
cli
mov
mov
xor
aaa
subb
adc
jmp
das
test
lahf
sub
xchg
jbe
dec
xor
sbb
test
pop
jno
mov
popa
mov
aas
mov
mov
out
xchg
mov
xchg
lcall
outsb
xor
lahf
and
cwtl
shlb
movsb
sub
cmp
mov
mov
jbe
sbb
pop
and
insl
out
jle
jae
sbb
mov
fdivrp
cwtl
inc
xor
ror
xchg
or
fdiv
rcl
imul
xchg
lret
add
ljmp
jnp
push
inc
pusha
xor
mov
stos
ss
or
xchg
jno
pop
push
sbb
mov
sub
in
aas
sahf
sbb
pop
sub
push
orl
add
add
jo
arpl
ljmp
inc
and
enterw
add
jg
test
and
cmpsb
mov
sbb
cmpsl
lcall
mov
xchg
les
clc
inc
jp
fsubl
ret
sbb
ret
adc
rcrb
or
adc
cs
lock
maskmovq
notl
mov
lods
and
scas
push
add
rcll
mov
test
dec
jbe
adc
adc
movsb
movsb
out
sbbl
pop
push
js
or
mov
test
cmpsb
icebp
insb
mov
imul
es
mov
cmpb
add
mov
stc
out
sti
rcll
ja
push
sbb
mov
add
xchg
cli
jecxz
imul
add
lock
loop
ja
lahf
pop
xlat
sbb
inc
aad
out
addb
xchg
pop
cs
xorl
jb
test
xchg
fbld
jecxz
xor
pop
push
bound
xor
jbe
xchg
loope
scas
jne
loope
sub
clc
leave
xchg
fwait
and
cmp
jle,pn
adc
mov
inc
test
int
inc
stc
loop
fidivs
popf
and
shrl
push
int
lds
loopne
add
push
push
pop
dec
mov
mov
pop
pop
bound
cmp
out
ret
roll
inc
push
xchg
cmp
fcmovb
aad
inc
addr16
hlt
pop
and
movl
adc
sub
popa
sub
cltd
stos
push
pop
inc
mov
lods
adc
sub
add
mov
mov
mov
enter
stc
in
mov
mov
ds
dec
hlt
test
mov
in
faddl
cmp
std
xchg
or
test
movsl
lds
nop
sti
push
cmp
adc
pop
adc
loop
cmp
clc
mov
lock
xorl
jg
xor
xchg
push
scas
jnp
lods
lods
jge
xor
addr16
jg
das
inc
add
ds
icebp
shll
movsb
lcall
iretw
sbbb
mov
mov
insl
xor
out
aam
std
mov
call
push
shl
jg
sub
or
push
pop
fisttps
loope
nop
bound
lcall
sti
mov
push
lret
dec
fsubr
fdivp
pop
decl
push
pop
pusha
clc
adc
xchg
pop
mov
ds
xor
cmp
pop
mov
iret
dec
mov
inc
add
mov
int3
icebp
jecxz
popf
jns
pop
mov
push
out
xchg
mov
scas
adc
fisubrs
jne
ds
stc
push
fistpl
int
mov
loop
mov
sub
push
popf
fcmovnbe
dec
sbb
jmp
out
fsubr
test
aam
xchg
add
out
push
lret
xor
xchg
and
push
xchg
sub
sbb
data16
xchg
hlt
cld
push
mov
sbbl
scas
xchg
pushf
mov
xchg
mov
aam
mov
xor
push
loopne
popa
pop
std
add
stos
pop
popa
test
push
or
sbb
stc
nop
cli
pop
cmpsb
jo
mov
in
mov
mov
mov
jmp
cmp
inc
sti
push
jnp
mov
fs
mov
jp
out
sub
mov
cld
insl
std
xchg
popf
outsb
pusha
clc
aaa
scas
cld
add
adc
stc
cwtl
lcall
mov
jo
aas
div
xchg
mov
pop
or
pop
dec
lods
xchg
sbb
orl
mov
or
add
xor
nop
lods
fnstsw
xor
iret
mov
mov
cmp
mov
outsb
or
loopne
stc
ja,pn
repnz
push
fdivr
in
sub
fdivl
out
pop
mov
ljmp
inc
out
xchg
dec
aaa
cmpsb
test
mov
cs
leave
jb
aam
mov
xor
fldl
mov
jp
add
push
lea
insl
aas
sbb
pop
jp
mov
push
add
add
ds
adc
subb
inc
daa
dec
stos
dec
jno
pop
aam
in
popf
rcrb
push
pop
jns
in
les
mov
in
pop
lcall
adc
mov
ret
cmp
fwait
push
adc
imul
cld
xchg
ljmp
push
subl
loope
mov
out
pop
rolb
jne
mov
mov
add
test
jne
cld
mov
jae
jnp
pop
push
adc
fdivs
mov
lods
and
push
adc
test
rol
sbbl
lahf
fs
pop
pop
pop
in
add
mov
sub
repnz
add
mov
pop
mov
pop
xor
xor
inc
or
lea
add
or
std
je
mov
inc
jl
mov
orl
mov
and
inc
adc
test
mov
std
or
xchg
mov
jo
imul
fisubrs
add
xor
pop
je
mov
loope
loope
push
push
xor
daa
sahf
xchg
cmp
andl
add
mov
pop
jecxz
cmpl
aam
and
xlat
xchg
cmp
jge
dec
test
dec
cmpsl
push
jnp
pop
lahf
or
cmp
mov
iret
dec
and
or
nop
imul
js
lods
sub
jns
mov
pop
lods
sahf
sbb
cmpsl
dec
shrb
jbe
add
xchg
mov
cmp
ret
and
sub
and
dec
xchg
mov
mov
lock
and
xchg
ss
lahf
lods
pop
mov
xor
lds
inc
sahf
sbb
mov
jns
cmp
sbb
push
mov
adcl
loopne
push
xchg
ds
cs
shlb
and
jnp
push
pop
xor
lea
insb
lea
cmp
adc
cmp
int
sbb
adc
xor
rol
out
pop
inc
stos
add
call
add
mov
shl
push
lea
or
mov
repz
inc
in
jns
fs
test
lds
add
sbb
mov
roll
in
or
outsl
clc
pop
cmp
mov
xchg
js
or
icebp
dec
or
xchg
xchg
fdivrp
and
dec
aam
into
ret
lcall
movsb
jne
test
clc
call
mov
sub
rorb
push
cmp
es
and
shrl
subl
leave
das
gs
mov
xchg
jbe
add
push
es
fisubl
jo
lods
xorb
arpl
jnp
cltd
cmp
mul
shrl
push
push
cltd
dec
movsl
hlt
push
pop
jl
cmpsb
aaa
adc
popa
test
mov
jg
or
into
sub
dec
push
mov
dec
mov
cmp
add
out
mov
fistl
shrl
cmp
fidivs
bound
lret
xchg
xchg
inc
jb
dec
lock
fsts
sub
jecxz
sub
lods
or
lcall
xor
movsl
jns
shlb
jbe
arpl
sti
pop
mov
cmp
lahf
add
or
ret
push
inc
or
mov
cmpsl
push
push
stos
xchg
push
jo
pop
out
dec
mov
dec
int3
ljmp
rcl
subl
shlb
and
insb
mov
inc
nop
jbe
addr16
inc
add
ret
xchg
stc
cmpsb
lahf
inc
dec
dec
ffree
jnp
jg
addr16
shll
jns
sbb
lock
insb
sahf
test
repz
or
cwtl
ret
stc
jl
jo
cmp
mov
mov
mov
mov
hlt
push
and
loopne
cmp
dec
leave
or
inc
xchg
jmp
pop
jg
cli
gs
loop
xchg
dec
ret
nop
js
fwait
sahf
push
push
lahf
or
pop
sbb
push
push
mov
mov
mov
in
das
mov
enter
mov
aam
push
jp
sub
sarb
inc
ss
iret
out
sbb
insl
push
mov
mov
xchg
mov
xor
adc
leave
inc
mov
adc
mov
pop
mov
enter
mov
mov
pushf
insb
mov
xchg
mov
out
insb
jg
fisttpll
addr16
loope
push
and
popf
mov
mov
mov
aaa
xlat
in
jo
mov
leave
mov
hlt
mov
push
sub
icebp
pop
in
es
xchg
xor
pop
jl
add
test
jb
dec
das
inc
add
aas
nop
mov
push
fnop
mov
sub
aaa
lret
mov
jge
xchg
mov
lock
or
inc
jbe
push
pop
out
ljmp
aad
lea
xchg
push
jp
jge
cmp
sub
jecxz
call
loope
xchg
or
cmpsb
mov
repz
or
insb
push
jp
xchg
jbe
in
cmp
or
outsb
loope
and
cmp
rclb
iret
or
nop
mov
fcompp
xchg
cmp
mov
out
in
mov
out
mov
jo
popf
enter
neg
imul
or
test
das
pop
xor
ja
aaa
jg
jbe
add
sbb
push
push
jp
dec
push
or
mov
dec
push
cmp
cmpsl
cmpsl
int
jb
insb
mov
pop
les
mov
jl
addl
popa
mov
int3
lahf
fstpl
pop
sub
sbb
daa
popa
fcoml
out
jne
scas
push
sub
mov
mov
dec
std
jge
xchg
out
push
xchg
jle
jp
rcrl
pop
jmp
fwait
push
scas
out
sbb
leave
xor
stos
aam
ss
dec
mov
mov
mov
add
adc
xchg
in
or
lret
jmp
jns
inc
add
rclb
cmp
sbb
lahf
popa
repz
mov
stos
and
pop
aas
test
sbb
jmp
sub
jl
loopne
dec
adc
inc
cld
push
int3
mov
push
fdivl
mov
adc
loopne
jb
pusha
push
mov
jnp
ds
ljmp
loop
mov
aam
ficompl
pop
xorb
cmp
aaa
mov
arpl
das
mov
pusha
jg
jne
mov
int
dec
sbb
dec
inc
aas
jmp
arpl
jle
and
test
dec
paddusw
xor
lods
scas
sub
sbb
adc
jns
insb
cmpb
fsubs
mov
xchg
fldt
sbb
cmp
pop
xorl
int3
pusha
xchg
orl
fsts
and
mov
fldl
imul
push
popf
push
and
mov
out
sbb
mov
repnz
repnz
mov
push
lods
fwait
mov
lods
add
xor
mov
into
std
jbe
dec
pop
jb
out
daa
jne
add
pop
xor
xchg
in
push
jnp
cmp
push
dec
sbb
sbb
fcomp
inc
in
xlat
cltd
insb
cli
dec
cmp
inc
std
mov
push
or
pop
dec
fdivr
mov
subb
nop
test
pop
loopne
mov
mov
aad
inc
cli
iret
es
inc
ss
jbe
aas
gs
push
cltd
adc
pop
lea
mov
mov
dec
adc
push
and
mov
or
test
mov
es
sub
stc
mov
jle
arpl
imul
loop
hlt
mov
dec
fiadds
pop
scas
ss
push
outsl
fldl
mov
jle
inc
fisubl
xchg
sub
divl
jmp
xchg
mov
push
mov
pushf
lret
mov
pop
out
inc
or
aam
xchg
stos
push
sbb
daa
and
xchg
imull
dec
leave
jp
inc
fistpll
test
and
xchg
in
pushf
test
loope
daa
and
push
jge
sahf
sub
ds
mov
add
in
mov
test
mov
pop
pushf
xor
push
pushf
mov
test
sbb
imul
movsl
daa
clc
imul
mov
pop
fmul
dec
scas
pop
mov
cmpsb
lds
xlat
and
and
in
add
add
or
xor
inc
adc
sbbl
add
sbb
aam
xor
jo
mov
sahf
jle
outsl
sub
dec
dec
lock
rolb
insl
jmp
push
mov
idivb
add
dec
lret
mov
imulb
dec
test
add
and
mov
pop
lret
and
jns
jns
insb
xchg
ficompl
pop
add
arpl
push
enter
sahf
in
pop
mov
inc
popf
fst
ret
or
movsl
or
or
sbb
mov
fsts
stc
mov
pop
xchg
popa
rcrl
sbb
jb
fdivs
repnz
int
push
lods
ja
shr
hlt
adc
imul
mov
test
pop
and
popf
cmpsb
mov
sub
push
lock
das
sti
or
out
xlat
in
or
out
jmp
rcrb
push
js
sub
cmp
xor
mov
or
mov
das
push
das
mov
movsl
lret
stos
sub
loope
cli
aad
pop
sbb
pop
mov
and
fbstp
push
jne
rcll
pushf
cli
xor
fiaddl
lahf
add
mov
mov
lock
xor
fisubrs
jle
sbbl
movb
cmpsb
pushf
inc
imul
test
push
shl
mov
sbb
jmp
pop
mov
ds
std
jno
sub
js
in
and
test
add
ss
sti
je
mov
addr16
pop
cmp
dec
pushf
pop
ja
repz
lret
mov
call
mov
mov
dec
addb
dec
or
rcll
popa
fists
aam
fists
ds
cmp
xchg
mov
icebp
dec
repz
outsb
imul
inc
mov
cmpsl
stos
cmpsb
adc
and
xchg
ficoms
stos
push
mov
sub
push
sbb
shll
daa
xchg
fwait
jp
out
jae
lea
xchg
dec
insb
sub
imul
lcall
stc
fsub
stc
or
test
stc
xor
lret
or
fstps
cmpsl
leave
scas
test
shrb
inc
fcoms
cld
mov
pop
sbb
gs
aad
lods
adc
sub
sbb
and
add
xor
mov
inc
sub
sbb
and
loopne
dec
push
lret
sub
pop
leave
adc
loopne
pop
cmp
frstor
inc
stc
fcom
out
jp
ret
jne
das
jmp
roll
sub
pop
imul
adc
hlt
mov
jmp
mov
mov
js
iret
xor
andb
sbb
orb
sysenter
insl
jae
or
ficoml
mov
cmp
icebp
mov
loopne
lock
clc
and
add
movsb
inc
out
inc
andb
fdivp
mov
outsb
int
ficoms
add
mov
aad
add
lea
andb
std
dec
and
popa
repz
jnp
xchg
lea
lock
pop
fnstcw
xor
jge
icebp
iret
xchg
xor
lretw
mov
xor
xchg
out
in
add
lss
out
lret
fsubl
jnp
push
jle
mov
push
repnz
iret
decl
jge
and
int
xor
popl
mov
xor
sti
inc
sbb
cmp
or
add
shl
out
xchg
mov
mov
pusha
and
sbb
mov
or
push
cwtl
mov
fists
data16
jge
je
pusha
push
stos
push
cltd
lods
in
enter
sub
dec
add
xchg
cmp
mov
mov
xchg
push
add
imul
imul
cwtl
jl
xchg
dec
adc
ljmp
stos
jg
or
nop
mov
jne
and
aad
cmp
push
push
popf
adc
xchg
rcl
or
or
out
fwait
int3
scas
lcall
xor
popa
lahf
pop
xlat
sub
sbb
fldt
sub
scas
mov
mov
push
dec
pop
ljmp
xchg
lds
sbb
add
aad
mov
mov
sbb
bound
aaa
cmp
arpl
push
jns
pop
outsb
notb
into
jge
out
out
outsb
test
into
mov
jg
loope
mov
test
add
pop
shlb
stc
addr16
sti
stos
mov
ss
daa
cmp
dec
sbb
or
jb
ljmp
paddsb
lods
add
loope
pop
sar
test
cmp
aad
adc
cmp
pop
mov
sbb
dec
jg
mov
aas
mov
ja
or
ret
push
mov
jge
mov
mov
or
pop
in
shlb
leave
in
roll
std
pop
out
call
cli
mov
pop
pushf
dec
sub
loop
cmpsb
ss
popf
pop
mov
cmp
aad
mov
xor
mov
outsl
xchg
sub
push
sbb
repnz
pop
sbb
sub
mov
push
rorl
adc
lret
outsb
push
add
adc
sub
sub
push
shll
dec
or
dec
into
xor
sub
outsb
mov
shrl
es
fisubs
andb
jg
out
push
stos
adc
insl
push
xor
add
xchg
je
add
aaa
push
lea
jge
cmpsb
mov
rcl
hlt
out
jmp
outsb
sti
adc
movsl
sub
cld
and
sbb
sbb
sub
cmp
insb
mov
jp
mov
data16
adc
mov
fistps
xor
xchg
js
stos
cmp
add
imul
sbb
or
add
stc
cmc
test
inc
push
enter
xor
imul
in
push
xchg
pushf
mov
xor
aad
inc
mov
xchg
les
xchg
js
or
dec
dec
std
xlat
adc
pop
adc
aaa
add
jbe
push
in
pop
das
fs
adc
int
popa
or
fsts
hlt
test
scas
aad
cmp
hlt
push
xchg
mov
loopne
ret
inc
std
stos
insb
adc
outsb
add
daa
lea
int
loope
jb
or
xchg
cs
mov
and
cmp
sar
fsubrs
lret
cwtl
or
and
adc
ret
mov
inc
mov
or
inc
push
sbb
pop
clc
fs
lahf
pop
mov
dec
popa
and
cmpsl
and
hlt
mov
pop
xchg
loopne
pop
mov
cmp
fwait
pop
les
filds
call
mov
lock
jl
dec
sbb
loope
test
adc
and
sub
push
es
adc
pop
sub
leave
xlat
mov
dec
repz
sbbl
hlt
cmp
sub
int3
dec
pop
cs
sbb
pop
jo
movsb
dec
or
mov
jbe
or
xor
add
ret
jae
push
inc
and
jns
sti
mov
stos
inc
neg
arpl
sbb
loope
inc
xchg
or
lods
or
lahf
aam
cmpb
sbb
mov
stc
cld
ror
mov
in
lock
faddl
out
and
lret
movsl
mov
sub
cmp
hlt
in
pop
sti
sahf
mov
mov
lods
cwtl
movsl
or
lret
cmp
mov
stos
xor
lock
mov
rclb
repz
in
xor
dec
cmp
insb
add
mov
arpl
shlb
xlat
mov
mov
shl
adc
sbb
fiaddl
mov
xor
inc
stc
mov
in
mulb
dec
into
or
sub
cltd
add
and
inc
jo
mov
aam
pop
xor
pop
test
sbb
mov
lock
push
scas
xchg
jbe
sbb
stc
cwtl
shll
call
inc
and
arpl
in
xor
mov
push
test
dec
add
test
into
bound
fidivs
jnp
mov
jle
mov
in
ret
adc
pop
adc
xchg
push
loop
ds
sub
nop
sbb
xor
mov
jl
mov
jae
add
shlb
inc
or
fidivrs
inc
jl
pushf
inc
cmp
jno
and
sti
sbb
sti
addr16
xchg
rcll
inc
sbb
andb
out
cmpsl
push
sbb
insb
fcmovnu
stos
mov
pushf
push
xchg
popf
jge
add
ret
bound
push
cmp
mov
dec
xchg
aas
xchg
out
pop
mov
lock
idivl
ror
mov
push
push
outsb
pop
mov
inc
sbb
enter
imul
je
mov
cwtl
imul
out
push
push
hlt
jae
sub
int3
jns
adc
jo
mov
dec
les
sbb
sub
ficoml
loope
add
sub
cld
jae
pop
ror
jbe
sbb
fimull
adc
cltd
or
push
pop
sbb
out
iret
adc
sub
mov
scas
jno
mov
mov
pop
adc
test
scas
dec
lret
sbb
add
xchg
fstps
jnp
nop
jg
xchg
inc
pop
in
fsubrp
sub
xlat
dec
xor
hlt
jo
lock
rclb
and
and
cmpsl
xor
sbb
mov
and
cltd
ret
sbb
xor
fwait
adc
decb
cmpsl
pop
leave
iret
sbb
push
cwtl
into
in
push
imul
push
notl
leave
mov
neg
ljmp
add
outsb
add
popf
loop
push
adc
nop
push
es
dec
enter
lahf
pop
mov
nop
sub
push
adc
push
test
jmp
adc
xor
mov
fisubrl
lcall
ret
xor
mov
dec
mov
arpl
lahf
fstps
inc
jbe
pop
xchg
neg
fxrstor
hlt
fsubs
xchg
add
fiadds
or
or
adc
arpl
daa
add
jmp
js
adc
je
or
jmp
mov
sarl
or
add
mov
cmp
push
mov
fdiv
pop
sbb
jmp
data16
ret
popa
adc
ds
mov
jg
out
sub
sbb
dec
and
xchg
out
sbb
sbb
pop
pop
icebp
scas
cmp
cmp
xor
dec
dec
iret
jno
pop
mov
je
fdivrp
push
call
or
mov
sbb
jo
add
and
mov
fwait
inc
dec
pop
jne
test
ljmp
jnp
add
push
or
sub
jae
add
pop
movsb
stc
or
mov
outsl
clc
push
popf
scas
and
and
js
mov
xor
rolb
inc
lods
movsb
test
int
sub
sbb
test
jnp
push
lret
cmp
jg
aas
lahf
xor
scas
push
jmp
add
mov
xor
push
jne
std
fwait
pop
notl
orb
dec
pop
cltd
cmp
data16
aad
jp
sbb
xchg
stos
or
cmp
ja
push
push
push
jecxz
das
mov
mov
inc
push
xor
xor
inc
int
dec
push
mov
inc
pop
sub
jle
or
addr16
dec
imul
xor
popf
ljmp
xor
repz
in
add
cmp
rcrb
mov
cmpl
out
les
stos
mov
call
mov
lds
push
sbb
roll
xorl
scas
inc
push
je
cltd
clc
cmp
lods
xchg
pop
imul
popf
dec
mov
jno
bound
xor
movsl
dec
sbb
xor
stos
inc
int3
push
fstps
mov
cwtl
and
xchg
dec
clc
fisubrs
mov
scas
shl
mov
call
or
add
sbb
imul
repz
popa
or
lods
leave
jle
jg
mov
jnp
jge
dec
push
xchg
fs
lods
mov
dec
inc
repz
orl
add
jb
loopne
pop
adc
adc
sub
ja
mov
ja
mov
ss
enter
mov
idiv
jle
jne
cwtl
out
push
mov
jns
push
lods
mov
adc
outsl
in
lods
jle
and
xchg
fs
in
ret
lods
fdivs
mov
sbb
enter
mov
stos
sbb
lock
inc
ljmp
fdivrs
arpl
xor
pop
push
int3
pushf
cli
jg
xor
xchg
bound
sub
das
jle
inc
cltd
repz
cmc
pop
jno
addb
mov
and
insl
xchg
outsb
sti
outsb
mov
rcrl
mov
lcall
lods
inc
ficompl
and
or
shll
les
leave
add
jns
scas
call
fimull
jge
clc
cmp
aad
rclb
pop
pop
shrl
aaa
je
cmpb
adc
sbb
test
out
ret
cld
es
mov
imul
cld
pop
mov
jbe
or
push
je
rolb
pop
jge
fdivr
and
out
or
mov
push
sahf
out
mov
aam
aam
test
mov
test
xor
out
pop
divl
xlat
mov
cltd
pop
pop
xor
iret
jb
mov
rol
sub
jns
adc
rorl
stos
xchg
movl
mov
aad
sub
mov
scas
pop
push
data16
lds
insl
sub
cmp
mov
ss
push
int
xchg
in
fidivrl
inc
push
pop
mov
jns
cmovp
int3
in
xor
inc
sti
cmp
in
jno
mov
push
mov
les
repz
fistps
pusha
mov
pop
jno
test
int3
jmp
jg
sahf
outsb
les
inc
iret
int
mov
rcr
or
ja
fbstp
jae
push
rcrb
in
clc
push
lods
sub
and
or
int3
inc
notb
push
shrd
out
pop
fs
cmc
push
pop
xor
sbb
iret
popw
pop
cli
mov
mov
xor
lods
adc
push
jg,pn
or
push
sbb
cmp
add
repnz
push
dec
adc
jo
fcmovbe
das
cltd
sub
stos
shlb
popa
cmp
test
cmp
sti
lret
mov
xor
or
and
ss
mov
movsb
lds
jg
mov
mov
std
xor
popa
rorb
or
js
dec
insl
mov
or
lret
rorl
jne
add
and
test
add
mov
push
jo
push
mov
daa
fstpt
scas
mov
or
jmp
int3
xchg
jmp
sahf
aam
mov
es
lock
mov
dec
pop
mov
adc
and
jae
movsb
pop
inc
adc
mov
push
je
repz
inc
jle
push
sub
lea
jle
sbbl
jecxz
lock
negl
sbb
inc
ficoms
cmp
adc
or
adc
xchg
cmp
push
jae
leave
cld
jl
scas
dec
cmpsb
push
int3
cmpsb
dec
xchg
loopne
push
dec
roll
aas
orps
sahf
int3
fsubl
leave
or
cmp
nop
mov
pop
xlat
cs
in
dec
lcall
xchg
xchg
js
xor
push
lcall
scas
lock
pop
cmp
jmp
adc
adc
scas
xchg
xor
pop
add
movsb
push
pop
inc
loop
daa
in
xchg
popf
xchg
mov
movsl
jno
mov
movsl
shrb
xchg
enter
push
sbb
and
lret
pop
fisubs
sub
ret
imul
mov
cwtl
scas
out
in
mov
adc
push
mov
mov
repnz
jp
rorl
lock
inc
add
pop
or
push
loope
loope
inc
push
pushw
sub
mov
sub
pushf
push
xor
lret
clc
ret
std
jecxz
notb
jg
movsl
sub
cmpxchg
and
ret
insl
pop
sti
add
jecxz
add
xorl
push
sahf
stos
xlat
and
lahf
xor
add
mull
aaa
mov
sbb
mov
outsb
mov
fsubrl
or
xor
fisttps
inc
imul
jno
aad
cwtl
push
fisubl
int
and
dec
adc
imul
test
mov
add
nop
adc
add
lock
mov
cmpsl
jnp
mov
or
cmp
sbb
in
pop
sub
nop
out
jecxz
rorl
gs
dec
mov
jle
inc
fdivrl
mov
pop
addr16
adc
ss
daa
out
outsl
fcomps
je
rcr
jae
pop
jp
sub
lahf
test
or
scas
push
sarl
mov
lret
adc
or
arpl
loop
xchg
dec
lahf
repz
pop
fstl
xchg
shll
mov
mov
push
dec
mov
imul
inc
adc
out
push
fmull
shl
ret
sahf
mov
test
xchg
out
iret
lcall
sub
adcb
push
out
jl
pop
fstpt
sbb
xor
add
push
mov
mov
orb
jge
insl
mov
pop
enter
bound
nop
adc
icebp
ja
inc
and
es
inc
scas
outsb
hlt
cmp
jge
jbe
sub
es
push
sub
push
jne
sar
add
inc
dec
add
test
arpl
mov
mov
jge
aad
jp
push
add
inc
popf
or
jg
xor
scas
mov
fstl
pushf
sbb
mov
mov
out
push
inc
mov
andb
inc
inc
leave
dec
negl
pushf
jb
testb
ds
ljmp
mov
addr16
cmp
clc
insb
pop
frstor
inc
int3
cld
dec
fsubrs
aaa
out
xchg
es
jne
divb
icebp
call
inc
xchg
test
fimuls
cmpsl
cmp
std
jg
fsubrl
add
out
mov
movsl
jle
sub
jecxz
and
lahf
shll
cltd
inc
pop
adc
xchg
xchg
push
xor
data16
pop
xchg
push
adc
lret
insl
aam
xlat
jbe
leave
bound
push
nop
movsl
shrl
cmp
and
push
jl
and
stc
aas
mov
test
imul
mov
scas
pusha
cmpsb
xchg
cwtl
push
jb
fwait
mov
pop
int3
fcompl
pop
lock
ljmp
mov
mov
stc
cmp
dec
add
push
insl
dec
xlat
xor
and
pop
lods
sti
dec
add
fimull
ja
pop
adc
push
xchg
rclb
scas
sahf
mov
push
scas
ret
sti
in
jge
cmp
sbb
jno
in
dec
jle
pushf
subl
fnstsw
sub
mov
dec
lock
xor
dec
imull
test
push
in
adc
lods
rcrb
ret
add
pop
ss
fcmovnbe
pop
lds
push
lods
adc
imul
xor
mov
imul
sar
sbb
cmpl
jle
test
inc
cmp
scas
dec
mov
pop
lcall
lea
mov
in
xor
push
xor
shlb
add
js
or
cmpsb
fistl
or
add
std
imul
cmpsl
test
and
lock
jmp
add
fucom
in
pop
int
inc
fcmovnb
insl
add
add
enter
lea
rcr
in
lcall
lcall
scas
jle
and
pop
xchg
shl
lds
sbb
xor
lahf
roll
int
xchg
mov
sbb
movsl
jno
sbb
outsl
fsubrl
push
dec
mov
sbbl
shr
cltd
xor
adcl
fildl
subl
ret
sbbb
je
push
jmp
into
and
repnz
test
mov
mov
dec
sti
popa
out
and
sub
inc
dec
lods
icebp
xchg
jo
mov
data16
and
into
xchg
gs
outsb
mov
cmpsb
int
dec
mov
fistps
pop
arpl
xchg
and
mov
imul
mov
jae
imul
xor
jne
loope
mov
xchg
inc
jae
test
lret
push
xor
adc
jmp
mov
sub
mov
mov
test
out
popf
dec
std
xchg
scas
mov
fimuls
xor
add
stos
pop
ljmp
pop
dec
cmpsl
xor
fmuls
pop
adc
shlb
pop
dec
fbstp
mov
mov
add
fmuls
or
push
xchg
inc
or
testl
fidivl
sbb
pop
mov
enter
aaa
shll
out
test
insl
mov
lret
pop
xchg
mov
insl
fld
adc
rol
scas
iret
jno
push
pushf
cltd
sub
test
popa
ret
push
mov
daa
sahf
and
repnz
sub
aad
and
movsl
daa
insb
aam
clc
sub
in
xor
dec
sub
call
in
cmp
test
sti
cmc
ljmp
fnsave
add
out
repnz
dec
add
push
or
cs
sbb
enter
mov
in
cmp
xor
fisttpll
or
sbb
es
idivb
aad
out
mov
mov
fnstcw
mov
es
mov
movsl
dec
xchg
mov
sub
cmp
xchg
cmp
imul
xor
test
jl
xchg
xor
bound
std
xchg
inc
lret
mov
or
mov
lahf
fmuls
xor
cmp
or
iret
dec
scas
mov
out
xor
popa
leave
lods
orb
fists
pop
dec
xor
stos
fwait
gs
pushf
dec
add
jmp
mov
sub
rcrb
pop
xlat
roll
mov
jmp
sbb
add
js
outsb
add
sub
enter
arpl
ret
pop
in
push
in
sbb
pop
dec
push
sbb
dec
mov
inc
and
ret
xor
push
loop
divb
xchg
jae
jp
rcrl
loop
lods
xchg
test
imul
mov
flds
cld
jne
mov
dec
orb
je
add
pop
xchg
mov
imul
outsb
fistps
xchg
rcll
std
fisubrl
and
js
mov
in
in
fisubrs
and
sub
add
xchg
shll
jbe
cwtl
cmc
jo
clc
sbb
push
dec
inc
xlat
or
out
inc
add
dec
cli
popf
adc
dec
xlat
mov
cmp
xor
mov
daa
mov
into
mov
icebp
adc
in
insb
loopne
out
int3
das
ficompl
in
int3
subb
test
sub
imul
sahf
jne
inc
mov
ss
stos
fwait
cmp
inc
pop
mov
jns
inc
loope
dec
xchg
xchg
mov
push
lods
inc
add
adc
adc
push
adc
sub
or
dec
mov
and
or
push
xor
jne
mov
imul
imul
fidivs
mov
jecxz
jno
cmp
jge
ljmp
stos
add
int3
out
cmc
xchg
jecxz
pop
xchg
or
jo
movsl
pop
cmp
pop
mov
dec
fisubrs
cmpsl
leave
subb
aad
fistps
movsl
mov
mov
aam
jl
xchg
or
sub
idivb
fsubr
cmp
and
sbb
roll
stos
test
xor
sbb
cmpsb
es
cmp
bound
in
std
shll
jle
ret
sbb
jp
xchg
jb
lret
xchg
sub
mov
movsb
jge
sub
xor
xchg
movsl
in
and
lret
int
lret
insl
sub
dec
sbbb
jo
ljmp
push
mov
das
dec
sbb
cwtl
xchg
and
dec
push
sbb
pop
jl
aad
mov
test
and
add
sbb
dec
xorb
pop
outsl
jne
add
sbb
push
xchg
pop
notb
xchg
xor
push
push
outsb
mov
lret
mov
inc
iret
sti
mov
inc
fidivrl
mov
or
hlt
jle
ret
xchg
add
mov
dec
cs
gs
lahf
adc
push
lods
scas
xor
xchg
xchg
mov
fs
call
and
sbb
mov
ljmp
inc
in
xchg
and
sbb
mov
scas
das
pushl
lcall
xor
iret
mov
jbe
jno
xor
rcrb
mov
scas
push
hlt
sbb
aam
dec
mov
pop
xchg
jge
jnp
add
pusha
aad
xchg
dec
rclb
jg
out
stc
out
minps
sti
aam
gs
testb
repz
xor
push
outsb
mov
xchg
loopne
in
xor
popa
mov
in
pop
jge
js
jl
loopne
mov
jo
out
push
leave
loopne
lds
sub
dec
es
faddl
add
testb
sbb
cli
xor
hlt
cmp
inc
cmp
add
add
sub
icebp
push
push
dec
mov
ja
adc
insl
push
enter
pop
sub
out
in
cld
lods
jg
jnp
jmp
dec
cmpsl
xchg
xorl
push
adc
mov
add
jne
test
outsb
in
add
jb
lds
sahf
leave
jae
mov
pop
testb
lret
fidivrl
lods
mov
inc
and
fwait
xchg
sub
push
fimuls
dec
or
jp
sub
scas
int3
inc
lods
in
fnstsw
cmc
or
inc
mov
xor
lret
and
dec
ljmp
lret
sbb
mov
push
call
or
loopne
mov
lock
mov
pop
sub
push
push
xor
hlt
ret
jg
test
pop
shll
lods
ljmp
fidivs
pushf
push
outsb
and
sub
lcall
dec
in
sub
fxch
mov
test
daa
inc
add
loopne
addl
test
lods
xor
testl
cld
ret
insl
mov
leave
fisttpll
push
xor
inc
test
sbb
mov
gs
sub
xchg
push
adc
iret
xor
pop
mov
mov
loopne
pop
or
fwait
inc
push
sbb
out
cmp
addr16
stc
psubb
mov
mov
xor
call
sub
int
xchg
push
lods
push
add
mov
mov
out
jg
shl
int3
out
cltd
and
data16
or
add
mov
xlat
repz
xchg
aaa
sub
xchg
fnsave
rcrl
adc
iret
loop
xchg
and
faddl
mov
xor
dec
push
loope
adc
cmp
imul
out
lret
and
dec
movsl
dec
jns
sub
data16
imul
push
jo
inc
mov
sbb
cmp
jp
push
fisubrl
cwtl
pop
sub
fisubrs
dec
xor
inc
lret
pop
xchg
cmpsl
sbb
sub
stc
mov
lods
mov
inc
in
mov
xor
es
inc
mov
jb
mov
add
sub
add
dec
mov
ja
mov
adc
shll
cmp
test
in
test
add
inc
push
in
sbb
sarl
sbb
inc
dec
and
pop
inc
inc
xor
imul
lods
loopne
add
jp
cs
dec
jbe
lods
movsl
stos
icebp
popa
scas
jg
push
repnz
and
arpl
addl
pusha
rcll
mov
jecxz
scas
out
fs
pushf
aas
add
inc
cltd
xchg
insb
insl
xchg
push
cli
mov
xchg
pop
les
mov
push
lcall
adc
fistl
pop
mov
sbb
lret
pop
outsb
lcall
sarl
jne
outsl
fcmovnb
ret
jle
dec
xor
sbb
into
cmpsb
or
mov
clc
inc
dec
pop
push
in
test
int3
movsb
sbb
or
pop
cwtl
push
inc
pop
cmpsl
lcall
cmp
sub
or
shr
push
dec
mov
xchg
pop
ret
pop
ljmp
jns
mov
out
enter
mov
and
or
jb
cwtl
push
fninit
pop
jge
or
ret
lods
cmp
scas
adc
and
clc
add
sub
sub
nop
sbb
push
adc
sti
mov
scas
and
or
push
rcll
mov
jp
lcall
inc
ret
jecxz
popf
int3
out
es
inc
inc
lock
cli
push
mov
xchg
xor
stc
sarb
out
lea
push
xor
or
sbb
jno
ret
cmp
sub
ret
push
fwait
jne
pop
out
in
push
fimull
and
call
loope
repnz
popa
cmp
push
pop
setle
je
out
arpl
fst
jecxz
js
and
dec
in
jo
outsl
rclb
shlb
mov
lea
inc
imul
daa
xor
xchg
insl
std
sbbb
cmpsl
je
fs
mov
test
and
mov
ror
pop
dec
pusha
jecxz
enter
mov
ds
repz
jo
push
sub
inc
xor
mov
cmpsl
mov
loop
xchg
sbb
repnz
or
pop
ljmp
mov
xchg
jb
inc
xor
out
xor
jne
xchg
xorb
out
mov
jne
pop
inc
sbb
jle
lret
cmp
or
mov
cs
data16
mov
fnsave
cwtl
dec
fcomp
sti
mov
jb
lcall
pop
lds
nop
sarb
fsubrp
and
test
mov
xchg
nop
jmp
mov
push
call
dec
fwait
jg
or
out
cmpsb
hlt
dec
out
sub
xor
sbb
lock
test
lret
xor
mov
jbe
scas
jns
mov
jge
mov
inc
nop
shlb
insl
dec
dec
stos
fdivs
dec
cmp
mov
pop
rcl
add
ret
and
std
mov
paddsw
pop
int3
mov
outsl
fisubrs
das
mov
cmpsb
fnstcw
jmp
iret
lds
inc
lret
add
or
addr16
rcrb
lahf
cmp
or
xor
sar
inc
int
aas
sbb
mov
aaa
lcall
jle
jns
daa
inc
jg
repz
out
int
insl
fmull
mov
test
and
imul
movsb
push
dec
out
jmp
mov
inc
xchg
xlat
enter
pop
es
inc
lods
nop
std
mov
xor
in
sub
and
sub
icebp
mov
xchg
stc
ja
lods
mov
pop
fs
in
ljmp
jae
scas
call
jmp
adc
and
push
pusha
or
stos
in
jecxz
push
popa
cltd
push
ds
leave
ljmp
add
popa
cmpb
cltd
and
lahf
rorl
jae
rcrb
push
sub
xorl
fucomi
loope
jecxz
ljmp
and
or
mov
pop
xchg
and
cltd
repnz
cli
sbbl
fildl
sub
inc
mov
mov
outsb
or
push
mov
cs
mov
mov
sbb
jnp
dec
test
outsb
mov
push
pop
mov
pop
in
imul
jo
and
sub
dec
cmp
and
pop
in
inc
es
jl
shl
mov
cmp
nop
or
cmc
xor
jo
lcall
dec
mov
sub
jp
mov
out
pusha
pop
xchg
out
loope
jp
pop
push
mov
sub
icebp
inc
xchg
mov
dec
mov
dec
adc
add
mov
mov
jne
scas
jae
cmpl
and
sahf
popf
mov
cmpb
dec
pop
mov
xor
xlat
cmove
push
adc
pop
push
fwait
pushf
repnz
push
add
dec
stos
sar
push
mov
fmull
adc
add
lahf
imul
scas
mov
loop
mov
loope
push
fxtract
lods
pop
xor
mov
ja
xchg
or
and
fwait
mov
push
test
popa
lret
leave
out
cmp
mov
mov
fisubrs
lret
or
mov
scas
daa
repz
in
mov
dec
inc
mov
pop
sbb
popf
scas
inc
xchg
jecxz
pop
push
mov
mov
cmp
mov
xchg
xchg
inc
popf
jb
pop
lea
inc
int3
insb
fldl
jns
sub
insb
inc
imul
dec
fdivrs
cltd
mov
sub
shll
int
cmp
adc
pushf
mov
mov
sahf
idivb
pop
mov
notb
repnz
sbb
cmp
jnp
iret
jl
int3
lret
xor
jae
adc
lea
loopne
xchg
js
test
dec
dec
fdivr
mov
adc
cli
mov
mov
int
pop
addr16
cmpsl
aad
xor
xchg
pop
and
inc
push
xor
scas
in
and
jmp
and
fucomp
lock
xor
mov
jl
push
add
or
mov
fsubs
sbb
or
ja
mov
dec
ds
fstps
scas
pop
inc
hlt
cmp
push
daa
cwtl
and
cs
pop
das
fists
sub
fstl
lcall
arpl
mov
int
sbb
cmp
push
out
in
cmp
jmp
mov
mov
or
ja
divb
xlat
and
xor
js
add
mov
ljmp
jle
lods
xchg
test
repnz
test
xchg
xor
mov
pop
mov
aaa
xor
daa
scas
jg
imul
aam
mov
in
lods
subl
jl
loopne
add
clc
sbbl
sub
hlt
xor
or
pop
dec
or
jecxz
inc
std
adc
inc
xchg
inc
rorl
and
cmp
insb
paddsw
outsb
int3
mov
movsl
add
cmp
push
mov
stos
mov
fimull
cmpsb
push
mov
cmpsl
out
out
outsb
inc
js
xor
mov
xor
mov
gs
adc
xchg
jb
test
clc
pusha
test
push
test
dec
xor
mov
push
pop
test
lret
test
adc
icebp
xor
test
add
lcall
arpl
mov
adc
das
cwtl
xchg
push
cmp
lods
pushl
out
add
nop
pushf
mov
xchg
lds
push
mov
inc
push
mov
pop
data16
fldenv
mov
push
xor
sahf
xor
xchg
fwait
rcr
xlat
mov
int
or
fildl
xor
xor
test
cmp
or
adcb
sbb
push
and
push
and
jg
cmp
mov
jmp
fdivr
imul
out
sbb
mov
xchg
popf
inc
xor
mov
jnp
xor
inc
fsubrs
cmp
dec
test
xchg
jg
pop
cmp
inc
dec
mov
mov
mov
orl
push
leave
mov
fsubr
or
in
mov
andb
daa
fistpl
data16
sbb
mov
mov
sbb
lea
mov
dec
and
mov
out
mov
aad
sbb
inc
ja
dec
mov
and
das
fnstcw
sbb
test
pop
pop
sub
push
aas
lcall
cs
mov
js
leave
mov
inc
jg
and
in
xor
rcll
xor
call
cmpl
or
fcom
cwtl
cmp
mov
xorb
ljmp
cmp
mov
add
cmp
test
int3
ss
pop
adc
daa
and
sub
adc
sub
push
scas
adc
sub
arpl
mov
push
ret
nop
dec
daa
jecxz
fldl
xorb
scas
pop
aas
inc
cmp
mull
cli
sub
lcall
in
cmp
rcr
ret
cltd
fistpl
std
out
pop
lods
aam
mov
test
loop
mov
add
rcrl
mov
push
or
xchg
mov
mov
jnp
xor
arpl
or
cld
xlat
addr16
divl
xor
cld
outsb
xchg
mov
pop
mov
sbbb
jns
in
aam
lret
rolb
push
pop
or
mov
sarl
xchg
decb
or
mov
pop
xlat
lock
decl
jle
jb
sar
pop
test
mov
popa
ret
mov
push
rcr
inc
sub
std
fs
movsl
sub
pop
or
mov
pop
lods
jns
pop
incb
lahf
into
int3
faddl
mov
mov
pop
xchg
in
mov
push
psubd
add
arpl
shll
cltd
aas
xor
in
xor
xor
jl
and
mov
lods
insl
dec
add
mov
and
xor
outsb
mov
loope
or
mov
xor
pushf
cmp
rorb
cli
cmp
je
out
ret
aam
icebp
adc
decb
lods
pop
aam
popf
lods
adc
cwtl
xor
add
mov
sbb
push
sub
lret
dec
shl
xchg
pop
xlat
or
int3
xchg
inc
ret
cmp
fimuls
outsb
scas
mov
and
or
int3
popf
cmpsb
mov
mov
rcll
jne
out
loopne
pop
aas
test
add
fidivrs
nop
sub
inc
ljmp
add
movsb
jl
dec
jmp
mov
sub
push
add
sbb
fimull
cmc
adcl
lock
pop
out
daa
xor
lret
jl
orl
loop
fsubp
xor
pusha
hlt
jbe
movsb
push
xor
sub
inc
movsl
cltd
jb
ss
int
sbb
sub
jae
jmp
inc
hlt
xor
das
jno
mov
in
rorb
loop
fistpll
xor
inc
dec
fmull
pop
in
das
mov
std
adc
mov
jmp
cmp
inc
sbb
mov
repnz
pop
decb
jnp
xchg
sbb
ficompl
pop
fldenv
je
sub
mov
ja
inc
pop
lds
pop
sbb
lret
xchg
cmc
pop
test
dec
es
mov
add
adc
popa
int3
cmp
stos
int3
xchg
out
test
mov
leave
fsubr
jb
push
test
adcb
test
adc
jo
pop
cmp
scas
loope
or
cmp
add
push
jg
repnz
pop
adc
in
ja
add
sti
mov
ds
popaw
ljmp
xchg
xor
dec
fcmovbe
mov
popa
jb
jne
jne
xchg
dec
pop
cmp
sub
test
sbbb
jp
mov
sbb
xchg
test
shll
and
inc
cmovp
inc
test
shrb
xor
ja
dec
mov
sub
push
mov
cmpsl
cmpsl
push
mov
cmpsb
jle
mov
xchg
fisttpl
sarb
stos
lds
mov
aad
ret
cmpsb
ja
mov
add
mov
sub
out
push
add
daa
hlt
jl
fimull
push
push
sub
add
shl
loopne
loopne
mov
gs
lea
divl
and
rorl
rorl
test
daa
adc
imul
into
stc
cmp
sub
xor
ficoms
cwtl
rorb
mov
andb
mov
iret
pop
aad
in
dec
ret
sub
stc
les
mov
jge
add
dec
in
icebp
fsts
fsubrs
xchg
js
jns
dec
dec
and
lock
dec
rcrl
cmp
ret
dec
dec
call
orl
mov
mov
and
and
and
jmp
sahf
int3
add
imulb
and
pop
shlb
stos
rorl
js
jb
ljmp
bts
pop
inc
lret
cmpsb
pop
mov
pop
cmp
xor
das
loop
and
xor
jnp
aam
sbb
lods
pop
into
and
imul
popl
es
xlat
repz
mov
push
shr
mov
cmp
dec
xchg
addr16
lahf
sub
pop
push
js
mov
mov
popf
cmp
or
mov
mull
sahf
push
mov
loopne
dec
xchg
add
sahf
or
loop
push
jb
jmp
cmpsl
push
dec
push
adc
test
sbb
repz
push
es
das
filds
mov
jno
xchg
add
jp
sub
mov
iret
mov
sbb
out
mov
pop
nop
or
nop
mov
in
mov
fsubrp
lock
sub
lods
xchg
xchg
add
sahf
int3
jle
out
test
insb
lea
int
jmp
push
mov
push
add
popa
pop
rclb
jne
and
push
xchg
cmp
cmp
in
add
popf
rcrl
int3
mov
les
stc
and
scas
out
add
scas
ja
movsb
or
dec
adc
lods
movsl
or
pop
jne
aas
adc
sub
cmp
jbe
jle
jb
in
sub
loopne
dec
pop
ret
and
adc
sub
lods
divl
mov
xchg
rclb
xor
xor
inc
addl
test
xor
xchg
js
pop
jb
repnz
cltd
shr
hlt
lods
cmp
jg
out
data16
sub
fsubs
mov
add
loop
pop
and
sbb
mov
dec
pop
rolb
popa
xchg
inc
jns
xor
inc
cltd
int3
std
push
test
push
pop
or
mov
jno
sub
and
pop
roll
arpl
xchg
jg
inc
outsl
sub
add
test
mov
imul
imul
pusha
mov
bound
jge
out
lret
push
xchg
stos
mov
add
call
inc
les
out
jns
mov
rol
scas
cmpsl
push
push
mov
arpl
imull
enter
or
xchg
loop
jno
ret
cmp
jmp
push
fwait
aas
mov
inc
ja
shll
bound
mov
mov
test
jnp
stos
push
fdivrs
sub
adc
sub
into
and
add
push
xchg
fstl
shlb
lods
lods
pop
cmc
adc
mov
ds
add
cli
inc
xor
pop
ffree
rorl
jge
outsl
sahf
clc
in
jl
jae
sti
mov
into
xor
stc
dec
fcmovnb
lea
dec
adc
divb
ret
fiadds
ja
jae
sar
mov
fidivrl
sub
call
scas
jb
movb
imul
mov
shrl
jne
fdivrs
icebp
insb
cmp
jecxz
cmp
sub
popf
dec
jecxz
push
iret
pushf
push
scas
subl
dec
ret
fcompl
addr16
arpl
mov
and
mov
scas
jne
jns
push
cmpsb
sti
loop
xor
xlat
sub
jae
mov
mov
push
ret
in
push
fs
ficoml
fmull
sahf
mov
enter
lret
test
imul
xor
adcl
repnz
xchg
adc
adc
mov
push
add
xor
inc
pop
rclb
jmp
fidivl
popf
and
lcall
shlb
addr16
pushf
lods
pop
rcrl
mov
sti
inc
pop
je
lret
or
or
or
and
fdivr
in
mov
nop
jle
repz
push
lret
push
push
andl
fmuls
push
mov
fdiv
int
pop
inc
insl
xchg
fstp
movsb
xchg
mov
loopne
scas
inc
lods
jae
adc
fidivrl
in
filds
mov
cmp
inc
ss
adc
mov
sub
and
cltd
jbe
js
faddl
xor
in
call
ds
and
mov
cmp
scas
aad
mov
loopne
bound
cmpsb
xchg
rol
cwtl
xchg
sub
xorb
enter
mov
notl
loopne
es
cltd
inc
mov
pop
dec
aaa
sub
dec
loopne
mov
push
rcrb
movsl
jmp
call
cli
sbb
mov
jae
faddl
dec
ret
jge
add
cmp
push
cs
push
mov
dec
dec
sbb
xor
xchg
arpl
ja
sub
mov
push
lods
add
stos
sub
inc
repz
decl
mov
sbb
fidivl
add
inc
aam
xor
push
jle
fcmovb
stos
movsl
outsb
push
pushf
repz
pop
sbb
jno
or
inc
push
jne
mov
hlt
jg
das
xor
lret
loop
jbe
or
test
mov
mov
call
aaa
jne
mov
scas
mov
data16
sti
xchg
mov
add
and
sbb
fwait
popf
or
push
in
enter
iret
and
iret
ds
mov
xchg
jge
sub
or
rcr
cmpsb
mov
test
pop
cmp
mov
fwait
mov
cs
mov
adc
add
movsl
in
push
and
repz
stc
mov
es
lds
xor
icebp
dec
xchg
lods
test
and
lods
inc
push
cmp
push
and
fisubrl
and
jl
jb
lret
stc
sub
in
mov
add
push
adc
mov
pusha
cmp
cmp
lcall
pop
loope
or
pusha
and
dec
pop
pop
cli
push
and
xchg
xchg
mov
ljmp
and
or
test
jns
cmp
inc
cmc
cmp
paddb
jb
sbb
insb
test
add
lret
or
xor
jmp
mov
inc
or
das
int3
jae
pop
gs
das
adc
fs
xchg
jp
adc
sbb
mov
inc
mov
pushf
xchg
aad
scas
xchg
mov
fmuls
test
jmp
sti
xchg
adc
subb
sahf
or
insl
fcomi
adc
and
fildll
xchg
das
ljmp
inc
leave
scas
repz
test
das
sarl
int
aad
mov
mov
adc
mov
dec
mov
fdivl
push
inc
ja
mov
pop
es
adc
aam
pop
adc
fs
pop
jbe
mov
mov
imul
cwtl
pop
xchg
push
cmp
adc
loop
add
aad
movsl
repz
push
negb
mov
cli
imul
cmp
divb
ljmp
xchg
andl
ds
icebp
fiaddl
in
push
test
fnsave
xor
adc
mov
or
sub
xchg
pop
lea
push
cs
rcr
add
lahf
movsl
add
cltd
xchg
ret
inc
jno
pop
ret
pusha
rcll
dec
enter
jl
inc
cmp
cmp
sbb
ret
sub
clc
fucomp
test
cltd
and
mulw
out
popa
inc
push
push
shr
mov
pop
loop
ss
adc
jl
jecxz
dec
fdivr
pop
inc
or
pop
insl
lcall
pop
pop
sub
pop
pop
xor
mov
pop
cld
aas
push
ret
arpl
mov
pop
test
insl
ret
je
jle
mov
inc
ret
sub
jg
lea
push
hlt
into
ficoms
push
cmpl
mov
bnd
cs
and
push
dec
mov
add
decl
pop
sbb
add
dec
shll
cmpsb
aam
pop
jmp
ljmp
push
push
stos
cmp
mov
jo
leave
xchg
and
and
popf
add
jp
or
mov
mov
mov
dec
cld
push
cmp
fcomps
sub
out
je
addr16
enter
mov
xchg
aad
adc
inc
dec
hlt
sbb
pusha
pop
cmp
or
inc
mov
lds
incl
sbb
or
xchg
icebp
test
dec
jns
xchg
enter
ja
or
pop
sub
dec
adc
stc
addr16
inc
int
jl
scas
inc
rorl
cwtl
inc
ljmp
icebp
ja
shl
push
push
pop
sub
imul
jmp
sub
push
or
loopne
out
xchg
outsl
dec
stos
jne
mov
jb
sub
inc
xchg
aam
faddp
frstor
fcoms
add
ds
inc
test
fsts
xlat
or
popf
loope
sbb
in
outsb
mov
insl
cli
adc
dec
or
jmp
dec
fldcw
movsl
movsb
dec
or
lds
std
das
int
jno
into
push
cltd
pop
or
dec
sbb
or
cmp
mov
jne
jo
jecxz
repnz
sti
jae
lods
dec
bound
inc
stos
pop
ret
inc
rorb
test
negl
inc
ja
cmpl
aad
mov
jge
xchg
std
dec
cwtl
xor
leave
xor
ret
sbb
out
test
int3
or
add
xor
mov
pop
in
stc
mov
xchg
in
dec
mulb
loopne
sti
outsb
rcrb
mov
lret
mov
and
add
cld
jge
arpl
icebp
inc
bound
test
jmp
das
aaa
push
loop
mov
pop
cmc
jg
rcrl
cmpsb
mov
lahf
out
mov
movsl
imul
mov
mov
cmp
bound
push
mov
mov
in
and
sbb
aad
sbb
in
cmp
lret
inc
add
jns
fwait
lea
scas
adcb
and
jmp
out
mov
xor
jb
fxch
jge
ds
inc
sbb
ja
cmp
and
sti
les
adc
add
mov
insl
jbe
aad
dec
outsl
add
repz
je
mov
movsb
inc
add
mov
sahf
insl
dec
ds
adc
popf
mov
and
jno
call
fs
arpl
rcr
out
dec
rorb
loop
adc
jge
and
sbb
pop
or
mov
push
or
mov
bound
push
sbb
mov
jno
adc
fistps
test
aad
add
cmc
adcb
loop
rcr
fstl
frstor
and
inc
out
jnp
dec
add
sbb
xor
lods
arpl
clc
int3
dec
into
cs
or
ret
mov
sbb
fs
faddp
xchg
inc
rorb
ss
aad
sub
mov
jmp
mov
fst
xchg
inc
pop
sbb
daa
sbb
push
nop
jg
push
outsb
ja
out
mov
popf
adc
jmp
mov
leave
lcall
out
inc
mov
fisttps
mov
inc
repnz
sub
ret
and
xor
lcall
daa
or
sbb
mov
push
sahf
popf
mov
sbb
popa
and
out
sbb
xchg
sub
ret
dec
daa
out
inc
scas
fstpt
mov
rcrb
popf
dec
lods
popa
mov
xor
insb
test
into
mov
jno
mov
sbb
jl
mov
cmc
sbb
subl
pop
out
sbb
popa
mov
cmp
pop
lods
int
inc
mov
xor
mov
stos
or
mov
icebp
xor
iret
aas
mov
jno
cmp
in
daa
call
jno
lds
mov
test
insb
sbb
scas
fnsave
cmp
cld
mov
ret
call
lahf
mov
pop
arpl
call
and
bound
lea
or
stos
pop
lods
in
das
adc
mov
std
lcall
rorb
mov
and
add
pusha
cmc
mov
fdivrl
jne
dec
cmp
scas
inc
pop
jge
add
lods
lods
mov
gs
xchg
shrl
jo
inc
pop
sub
push
mov
inc
cmp
adc
filds
movsl
loope
aad
sbb
repz
dec
adc
mov
push
jne
scas
pop
fcoml
jns
inc
xor
push
push
jb
and
inc
xor
stos
mov
jnp
xchg
jo
fwait
int
ja
in
add
inc
cmp
xchg
dec
mov
imul
popf
in
data16
ds
das
jnp
mov
mov
lock
sbb
fnsave
jbe
in
adc
xchg
vpsllq
and
xor
lret
push
stos
inc
xchg
sub
push
div
stos
push
nop
clc
es
mov
mov
inc
xchg
add
pop
imul
mov
bound
sbb
pop
sub
sar
repz
cmp
mov
daa
xor
cs
fs
sub
mov
xchg
jmp
lsl
js
inc
fidivrs
push
mov
movsb
pop
mov
imul
ljmp
cmpsl
cmp
inc
mov
sub
js
test
jl
push
repnz
inc
dec
jne
sub
lcall
jmp
push
inc
shll
andl
dec
add
mov
clc
sbb
int
inc
pop
push
xchg
add
or
push
push
fs
iret
adc
out
xlat
cmpsl
push
dec
aad
xlat
mov
pcmpgtb
mov
imul
push
inc
xchg
mov
add
test
or
jmp
mov
cmp
push
insl
pop
std
dec
loop
stos
push
mov
roll
pop
xor
testb
inc
scas
test
outsb
incl
xor
dec
icebp
or
xor
mov
addr16
ss
xchg
adc
push
inc
push
ja
xchg
inc
lds
inc
lock
dec
sbb
cmp
inc
clc
daa
out
jl
jae
inc
mov
mov
jne
int
add
sub
pusha
mov
outsl
add
std
cmpsl
jmp
fidivl
inc
stos
lea
cld
push
mov
or
out
hlt
loope
les
ja
push
out
mov
in
orb
sbb
popa
adc
xor
cmp
cmpsb
and
add
js
xor
hlt
xor
push
out
data16
adc
repz
ret
inc
jmp
call
js
sbb
jno
inc
and
popa
ret
cmpsl
lret
sub
and
mov
mov
cmpsb
data16
or
cli
clc
or
in
dec
in
test
imul
jnp
inc
xor
scas
mov
sub
add
mov
shl
mov
mov
stc
push
ret
rcrb
jge
xchg
repnz
xor
push
js
imul
xor
or
mov
les
jo
rcll
fistl
pop
ror
ds
sbb
movsl
or
ljmp
push
xchg
add
je
negl
cmp
dec
inc
sti
out
fs
push
push
jecxz
jp
and
lret
ret
add
cli
mov
movsb
xlat
out
inc
and
out
test
and
jne
fsubs
movsb
mov
test
out
add
lock
std
dec
cli
shl
rorl
push
cmp
scas
pcmpeqd
xor
xor
es
aad
jb
fistpll
mov
xchg
gs
adc
cs
and
jnp
iret
sti
addl
mov
test
out
mov
mov
insb
mov
pop
sti
and
mov
iret
or
test
loope
aad
adc
pslld
loope
rclb
jmp
in
adc
inc
sub
cmp
into
lea
mov
and
out
fcompl
shll
in
negl
in
scas
call
jno
or
ljmp
rcl
insl
mov
sub
or
mov
mov
dec
jns
sbb
adc
xlat
cld
sahf
xchg
fnstenv
mov
shll
xor
jnp
xchg
pop
enter
jnp
cmc
scas
or
mov
xor
or
mov
mov
add
lock
ljmp
add
jmp
xlat
xchg
xor
test
mov
leave
xchg
pop
or
adc
mov
mov
idivb
lods
clc
push
mov
ss
in
and
add
xor
xlat
imul
mov
js
stos
inc
lods
leave
sbb
cltd
ret
imul
call
out
pusha
movsl
js
test
sub
paddd
cs
test
testl
loopne
in
outsl
mov
ret
xchg
das
js
pop
and
push
inc
out
jb
je
jnp
in
movsb
jo
les
sbb
mov
je
es
sbb
push
sub
fbstp
cld
pusha
fsubs
lahf
ficoms
ja
enter
and
sub
sbb
cmp
in
pop
sub
add
in
and
lret
mull
loopne
rolb
clc
dec
push
js
xor
mov
mov
push
aad
lret
jbe
ss
jmp
cmp
mov
push
sub
and
and
dec
sub
aas
shrl
aaa
js
hlt
xchg
sbb
mov
push
xchg
test
sub
movsl
xchg
fcmovnbe
jbe
cmp
ret
mov
repnz
leave
cmpl
lahf
and
repnz
setae
lods
dec
pushf
add
xor
pop
ret
mov
cmp
lahf
xor
sbb
and
dec
push
mov
into
out
int
xlat
xchg
xor
in
inc
mov
dec
push
jp
leave
mov
sbb
idiv
fwait
out
xor
imul
sub
bound
cli
pop
sub
adc
pop
insb
scas
mov
pop
xchg
in
cwtl
inc
push
adc
or
aaa
xlat
ljmp
xlat
insb
dec
orl
nop
mov
cld
inc
arpl
les
pop
sti
mov
jbe
fsts
mov
push
inc
mov
shrl
xchg
test
dec
or
negb
inc
aam
test
in
pop
pop
mov
mov
sub
mov
mov
pop
ss
dec
fcompp
mov
adc
es
mov
pop
lods
popa
and
rorl
std
pop
adc
shrb
lcall
int
add
jne
mov
pop
add
sub
sbbl
mov
nop
shrl
mov
push
mov
sahf
pushf
shl
loope
jne
push
add
jo
ss
jbe
dec
xchg
push
pop
icebp
mov
jne
jns
int
subb
hlt
bound
adc
pop
adc
xor
test
jno
pop
mov
push
push
mov
sbb
cmc
dec
adc
jno
out
mov
dec
stos
movsb
fdivrs
loop
les
or
jp
ds
sbb
int3
cmp
sti
jnp
sahf
cmpsl
xor
pushf
insb
outsb
mov
inc
xchg
inc
sti
mov
bound
add
outsb
lods
xchg
lahf
inc
lock
push
jg
xor
jg
cmc
mov
xchg
subps
iret
popf
mov
in
sub
sub
push
rcr
mov
sahf
pop
lods
add
aas
jp
movsl
sub
dec
stos
sub
dec
push
push
stc
cwtl
mov
mov
rcrl
add
jns
je
add
bound
mov
adc
pavgw
xor
pop
dec
sub
cmc
hlt
cltd
aad
xlat
ljmp
adc
ss
xchg
enter
lods
sbb
mov
hlt
add
movsb
cmp
aaa
xchg
ss
fildl
xor
sti
pop
aaa
fisubrs
jge
lds
or
movsl
daa
push
jmp
rcrl
cmp
pop
inc
cmpsl
mov
sub
movsl
fs
movb
out
bound
or
in
cmpsb
in
and
int
lods
addb
inc
xchg
rcrb
xchg
rclb
jnp
aas
das
fs
cmp
sub
das
xchg
inc
xor
dec
out
jecxz
in
btcl
cwtl
repnz
cmp
out
lahf
vmovntps
or
mov
cmpsl
cmc
orl
repnz
inc
adc
push
das
sahf
sarb
les
dec
aam
fs
jnp
pop
xchg
cld
mov
call
ds
int
in
sbbb
test
xchg
int3
and
lods
xor
inc
cli
xchg
insl
mov
lret
xlat
sub
fists
sti
ret
outsb
cmc
scas
jae
stos
jle
loopne
add
iret
subb
repz
and
cmp
ror
push
daa
jle
mov
pop
imul
hlt
mov
scas
dec
cld
movsl
mov
xor
rorb
mov
and
in
jl
xchg
mov
js
mov
pop
das
out
cld
int3
mov
out
sub
dec
fcoml
fisttpl
xlat
mov
and
stos
std
loope
scas
fwait
jo
cmp
loope
out
inc
and
fwait
jbe
jl
mov
inc
enter
sbb
mov
rcll
pop
xchg
xor
push
add
cli
push
xchg
imul
je
dec
fisttps
and
stc
ret
imul
ds
aas
cwtl
sub
add
stos
jmp
mov
mov
fisubs
in
je
outsb
xchg
pop
jmp
sub
popa
sub
mov
mov
jo
inc
push
dec
pop
sub
pop
outsb
push
cwtl
test
mov
inc
gs
out
dec
and
pop
xchg
pop
movsb
or
inc
fs
scas
lock
fabs
mov
pop
sub
rcr
cmpsl
mov
mov
daa
jg
xlat
cmpsb
jle
xorl
stc
sub
inc
or
mov
mov
out
lret
pop
push
mov
xchg
mov
jo
mov
outsb
push
je
cmp
xchg
jne
subb
inc
adc
jne
pop
rcll
das
imul
cmc
stos
mov
inc
and
push
enter
jnp
push
lret
cmp
fisubrs
icebp
sbb
xchg
push
mov
ljmp
ja
movsb
imull
mov
lock
roll
jmpw
lods
xchg
mov
or
ror
lahf
mov
sub
sbb
inc
adc
test
shll
andb
pop
inc
xor
or
mov
ret
push
inc
mov
test
ror
sbb
sbb
cmc
mov
pop
inc
ss
add
and
sbb
and
inc
xchg
insb
jb
cmp
cmc
in
mov
shlb
pop
fiadds
test
xor
cli
xor
sub
pop
xor
cmpsb
xorb
or
imul
fbld
jmp
mov
dec
jmp
fadd
pop
push
or
arpl
mov
sahf
jmp
xlat
inc
or
xchg
mov
imul
imul
jo
imul
mov
pop
jnp
xchg
repnz
mov
xchg
ret
sub
dec
sub
std
mov
cmp
jns
test
cmp
pop
loopne
shrb
jmp
sub
inc
std
xor
mov
les
sbb
dec
fldl
pop
icebp
iret
bound
mov
es
leave
push
bound
pop
dec
scas
hlt
push
cld
shrl
adc
pop
jl
push
and
xor
mov
jns
mov
mov
mov
icebp
stc
inc
or
or
outsl
dec
mov
pushf
xchg
rcr
inc
aas
int
sbb
sti
nop
xor
or
push
into
cmp
movsb
jge
or
xor
add
xor
mov
mov
aaa
insb
mov
adc
xchg
outsl
cmp
scas
lahf
cmp
aad
lcall
mov
push
pop
rcrb
jp
ljmp
add
rcr
xchg
mov
cmp
incb
mov
sub
je
sahf
mov
mov
sub
sub
push
mov
xchg
inc
call
mov
dec
stc
jae
inc
ljmp
aas
push
in
dec
ret
into
cmp
mov
imul
in
js
pushf
loope
test
mov
ret
cmpsb
lods
add
mov
outsl
dec
ja
imul
call
mov
das
pop
or
in
sub
fdivr
push
adc
fistps
divb
push
js
xchg
cmc
mov
add
jb
sti
xor
call
or
xor
and
lods
sbb
mov
fidivs
add
scas
mov
insb
cmpsl
cwtl
das
pop
push
pop
sbb
push
stos
roll
pop
imul
call
adc
mov
scas
mov
shlb
lods
add
lods
and
arpl
int3
mov
pusha
aaa
repnz
xchg
adcl
arpl
pop
pop
mov
cmpsb
cmp
and
iret
sbb
lods
lds
mov
jno
icebp
cltd
popa
mov
mov
or
mov
add
jno
mov
out
das
es
cltd
aam
add
xor
add
out
push
sbb
and
mov
adc
arpl
popa
popf
push
adc
cli
shll
ljmp
dec
cli
lds
mov
sub
movsb
pusha
fisubs
jae
xlat
hlt
inc
shlb
jle
adc
xchg
std
sub
bound
clc
mov
dec
jg
xchg
mov
mov
inc
add
mov
in
xor
outsl
loop
add
mov
dec
mov
das
dec
push
add
cmc
aam
adc
pusha
aas
jbe
repz
inc
outsb
fwait
dec
or
fwait
pop
aaa
jo
sahf
mov
aas
das
and
push
insb
mov
popa
xchg
divb
mov
mov
fdivs
mov
ds
add
test
dec
pop
sub
jnp
rsm
int3
loope
ja
jle
pop
mov
sub
inc
test
hlt
faddl
mov
mov
xor
adc
int
pop
jge
idivb
stos
mov
pop
fwait
sbb
jle
fldenv
rcll
shlb
xor
mov
inc
sub
mov
dec
cmp
arpl
cs
mov
fcoms
xchg
shlb
shl
xor
inc
das
mov
les
mov
dec
in
bound
xor
fsubrs
gs
cmp
adc
dec
xor
xchg
lea
nop
push
jmp
je
fdivl
mov
push
fcomps
mov
imul
pop
mov
and
push
xlat
push
adc
mov
add
jns
mov
mov
dec
js
adc
sub
repnz
jo
sub
arpl
outsb
push
sbb
fdivs
testl
mov
loop
int3
cmp
jecxz
mov
dec
lea
xchg
stos
and
mov
and
push
dec
dec
fucom
pop
pop
gs
or
cmpsb
push
enter
iret
aam
pusha
in
pop
xor
loopne
xor
cmp
icebp
xchg
sarb
fs
dec
or
andb
js
mov
inc
fmuls
mov
cwtl
add
subb
jae
and
ficoms
cmp
xor
in
aaa
xchg
bound
lods
addb
add
popa
data16
mov
ljmp
mov
cmp
jg
sbb
loope
add
lahf
into
inc
inc
sub
mov
push
mov
mov
jno
cmc
xor
add
pop
div
iret
xchg
sbb
jnp
pop
movsb
ds
jbe
dec
jecxz
push
cs
jp
sbb
push
rcrb
add
cmp
sbb
jne
pop
xchg
inc
fsts
cmp
jg
xor
subb
in
mov
pusha
lret
mov
movsb
cltd
or
xchg
adc
shlb
mov
shrl
orb
add
test
insb
xchg
jnp
sbb
add
cmp
lods
aas
push
lea
notb
cmc
lahf
ja
mov
add
mov
rclb
jo
ss
mov
mov
jmp
repnz
arpl
ljmp
xor
imul
lea
mov
lock
arpl
xor
sub
mov
popf
shr
cld
sub
mov
jp
pushf
lcall
outsb
in
fbld
lahf
jmp
and
xchg
call
les
inc
xor
sub
cmc
aaa
out
in
call
xchg
repnz
or
add
mov
hlt
mov
push
sbb
out
jge
pop
mov
pop
dec
cltd
xor
and
andl
flds
cmp
cmp
shl
sbb
mov
cmc
bound
pop
adc
or
push
shll
inc
adc
cwtl
daa
xchg
or
clc
cmp
add
mov
jmp
jecxz
aam
stos
push
jmp
mov
lods
insb
js
sub
lretw
inc
andl
jne
xor
pmullw
push
addl
and
fldl
sti
ja
mov
sbb
dec
adc
and
pop
ret
ja
add
rcll
xchg
mov
outsl
add
jecxz
jns
cmpsb
dec
repnz
jg
bnd
repz
cld
int
or
cmp
test
jmp
mov
sbb
jp
push
sti
xchg
out
in
lods
or
into
mov
add
mov
cs
sub
popa
gs
in
cwtl
jae
and
pop
or
je
or
mov
mov
push
rcrb
xchg
mov
sbb
loop
in
cmp
pop
icebp
clc
xor
jbe
movntps
and
mov
aam
popf
mov
xchg
mov
shlb
loop
pop
mov
adc
stos
lret
sub
pop
pop
test
sub
cli
addl
int3
movsb
add
push
arpl
jmp
dec
loopne
sahf
mov
push
arpl
lods
xchg
mov
dec
jl
ljmp
in
xor
daa
paddb
cmc
aad
lcall
lahf
inc
mov
inc
hlt
es
inc
in
jp
sahf
dec
or
imul
xor
lcall
aad
push
stos
pop
or
imul
inc
mov
sub
sbb
enter
xchg
popf
enter
out
gs
je
ds
inc
int3
aam
adc
inc
push
ret
mov
rcll
in
push
leave
jb
xchg
adc
popa
scas
idivb
ret
sar
shll
ss
ret
jp
in
cwtl
lret
ja
mov
test
mov
add
mov
out
repnz
push
ds
dec
loop
fstpt
out
sbb
cmp
pop
sbb
sbb
xchg
mov
mov
xor
js
repnz
call
sete
mov
mov
xchg
mov
cmc
lock
neg
or
gs
jnp
das
inc
add
arpl
inc
sbb
add
sub
push
adc
adc
or
fldl
scas
jnp
cmpsl
add
sahf
xor
shll
cmp
repnz
pop
das
bound
int
xor
ljmp
and
push
fnstsw
sub
std
ret
and
pop
pusha
add
pop
out
loopne
imul
or
push
imul
xchg
or
fcmovbe
inc
scas
inc
sahf
mov
sbbl
and
xor
cmp
jbe
xchg
test
lret
bound
cltd
add
jnp
jbe
test
rcr
and
xchg
add
fdivl
pop
aam
and
jae
jno
inc
xchg
mov
xchg
out
orl
fwait
push
mov
xor
mov
dec
int
rcrb
test
sbb
insl
loop
nop
test
inc
bound
push
cmp
ljmp
fdivl
pop
adc
in
hlt
pop
mov
and
icebp
rolb
mov
mov
mov
lea
cmp
gs
push
scas
fstl
movsl
inc
fdivs
popa
cmc
dec
jae
repz
cltd
popa
and
jle
test
aaa
pusha
sbb
mov
jae
sbb
jmp
inc
enter
pop
add
jne
mov
push
xor
icebp
jmp
mov
push
js
std
jb
inc
xchg
pop
mov
int3
cltd
mov
lret
jnp
dec
fiaddl
mov
pop
es
xchg
mov
jecxz
push
aaa
leave
jae
adc
or
push
dec
out
popa
jecxz
xchg
xchg
or
adc
outsl
in
and
inc
jl
mov
rcrl
fwait
xchg
xor
orb
push
sbb
or
cmpsb
xchg
andb
adc
inc
ljmp
into
rcl
fiadds
push
idiv
inc
xor
sub
mov
decl
pusha
lret
xor
pop
mov
jb
mov
lret
push
mov
adc
movsl
test
sbb
mov
mov
adc
or
out
mov
stos
stos
mov
and
in
movsl
jb
aas
ret
adc
repz
mov
ffreep
cltd
jle
aad
mov
adc
jmp
mov
xchg
cli
test
lret
enter
cltd
stos
ficomps
jno,pt
jne
cmp
fwait
mov
sti
sub
sahf
jp
inc
pusha
test
in
dec
mov
mov
daa
cmp
cmpsb
sub
repnz
pop
dec
dec
pop
jbe
sar
mov
cmp
rcrb
orl
fnstcw
lds
or
pop
std
fisttpll
hlt
enter
pop
sub
fs
or
and
add
lea
repz
and
sbb
fadds
sbb
mul
push
and
out
test
leave
jmp
inc
lea
add
aaa
arpl
imul
ds
fwait
in
flds
aad
xchg
cmpsb
fnsave
fcoml
mov
pop
insl
mov
push
or
movsl
arpl
lret
push
jne
and
inc
push
lret
in
xchg
mov
sbb
sbb
push
addr16
pop
int
leave
in
mov
sbb
inc
xor
inc
or
cmpb
or
mov
lret
int3
mov
nop
sahf
out
hlt
sar
outsl
icebp
pop
fnsave
sbb
sbb
leave
mov
cwtl
test
sub
fsubr
movsl
dec
loope
dec
jge
pop
das
mov
add
mov
mov
je
lds
pop
mov
aad
shl
das
insb
outsl
jge
dec
clc
push
mov
push
jge
xlat
cli
insb
inc
scas
adc
aam
fidivrs
or
lcall
enterw
in
jne
mov
pop
lea
jo
pop
div
stc
jo
popf
jmp
fbstp
jns
adc
fdivrs
es
insl
jg
pop
and
out
loopne
dec
add
lret
pop
jns
insl
xchg
mov
movsl
inc
scas
mov
pop
addl
jg
je
inc
pushl
cmp
add
movsb
push
pop
sub
scas
and
fsts
xor
faddp
dec
mov
push
adc
ljmp
popa
outsb
fldenv
stos
xchg
cld
or
int
sbb
push
jecxz
xor
cld
mov
cwtl
int3
clc
push
push
pop
mov
stos
sbb
sbb
and
sub
cmp
xorb
xchg
fidivs
sti
loope
xor
push
fadd
dec
sub
xchg
jle
testb
jnp
inc
add
and
xor
iret
push
mov
repz
jmp
push
shrl
cmp
stos
adc
sub
xchg
inc
hlt
pusha
dec
cs
aad
aaa
fucomi
push
insb
icebp
xor
pop
mov
pop
add
xchg
lods
sub
lods
mov
test
push
fistps
inc
inc
imul
add
or
das
jns
sbb
sarb
test
fucomp
push
adc
mov
in
pop
stos
lret
sub
test
sbb
mov
fs
dec
mov
sahf
jle
push
scas
cmp
xchg
jle
aas
aam
dec
cmp
jg
sub
dec
or
loop
cmp
adc
shl
daa
sub
cld
ja
std
inc
data16
pushf
mov
add
cmpsl
add
mov
and
rcrb
xchg
mov
mov
xchg
out
ret
and
or
xor
lret
fildll
sbb
push
cwtl
sbb
in
out
mov
jae
fsubrl
in
dec
push
adc
stos
rol
loopne
mov
cli
dec
pop
int
xor
mov
sub
xchg
dec
into
sti
cmpsl
jnp
aam
or
mov
adc
add
sub
pop
mov
inc
add
mov
push
xchg
or
pop
lret
aas
sarb
out
mov
fs
leave
dec
mov
jmp
hlt
cmpsl
jb
mov
outsb
xlat
sbb
dec
xor
loop
rcll
mov
nop
push
lods
xor
fisttpl
pop
lock
paddq
lds
or
fsincos
jne
cwtl
sub
sub
mov
push
sub
cmp
push
daa
push
in
and
gs
xor
shll
sarb
and
adc
outsb
xchg
mov
addr16
fwait
push
mov
fsubrl
xor
add
fwait
and
ja
inc
loope
arpl
mov
pop
test
movsb
dec
or
inc
in
pop
addr16
lds
inc
xor
adc
jno
sahf
in
ja
fisttps
sti
out
sbb
xor
dec
out
lcall
stc
sbb
cmp
scas
outsb
in
dec
add
mov
pop
add
cmp
daa
or
dec
mov
pop
push
and
testb
aaa
sbb
jbe
jge
jg
aad
cmp
xchg
jb
adc
or
mov
outsb
pop
in
movsl
bsf
repz
jo
call
jmp
repnz
popf
dec
stos
stos
mov
test
mov
addr16
in
pop
dec
and
mov
inc
clc
inc
adc
push
loop
adc
jbe
xchg
cmp
lret
pop
int3
add
lea
cltd
jecxz
push
imul
incl
stc
cmc
jnp
test
sahf
mov
aaa
inc
cld
jnp
in
clc
xor
xor
imul
cli
iret
mov
mov
xlat
sub
pop
cmp
cmpb
adc
shrb
popa
xchg
cmpsl
jl
in
inc
mov
or
xor
fnstcw
adcb
paddsw
add
lcall
or
mov
and
adc
fsubrl
mov
in
mov
cmp
iret
fucomip
aad
jle
push
rcrl
or
add
sub
fcmovne
add
xchg
sti
test
in
popa
jbe
lock
mov
mov
mov
mov
push
push
out
inc
mov
dec
sub
push
sbb
jp
cwtl
inc
xchg
xor
xchg
jno
in
out
int3
js
mov
xchg
mov
adc
mov
inc
out
jae
mov
out
out
push
cmp
xchg
mov
gs
aas
call
std
hlt
jmp
pop
xor
pushf
sahf
fisubrs
inc
idivb
inc
outsb
xor
fidivrl
sub
dec
xlat
add
cld
ret
loope
out
lahf
sub
mov
mov
sbb
mov
push
cld
add
or
sbb
cmp
out
movsl
push
xor
cmp
or
xor
mov
ror
orb
mov
pop
inc
pop
mov
mov
inc
movsl
mov
lahf
mov
sub
mov
fisubs
sbb
pop
stos
mov
lea
sahf
icebp
ficompl
fildll
pop
stc
jo
jmp
rorl
call
xor
push
push
je
popa
test
inc
enter
adc
daa
das
xchg
mov
inc
addr16
mov
xor
jno
cmpsl
adc
imul
push
das
add
add
sub
inc
pusha
inc
xor
and
xlat
outsl
jle
mov
int3
xor
idiv
jge
icebp
xchg
pop
leave
hlt
insb
or
ja
lahf
add
testb
jp
jge
lea
add
sub
dec
pop
mov
fmul
sub
jmp
xchg
cmpsb
andl
enter
in
adc
sub
cmp
out
dec
mov
sbb
and
xor
push
sti
test
push
scas
shlb
xor
push
repnz
mov
xlat
pop
pop
lods
insb
or
adc
xchg
movsb
fs
ds
addr16
jne
push
cmp
mov
push
pusha
cmp
and
jmp
jno
mov
and
or
rclb
cmp
scas
pop
push
pop
fcomip
mov
pop
xchg
jnp
mov
jns
dec
or
add
fildl
or
jae
in
and
lea
push
lcall
lret
xchg
mov
xor
stos
and
cmpsb
in
sar
popl
lods
adc
inc
pop
and
xlat
rorl
jns
push
xor
or
mov
daa
mov
add
hlt
lret
fiadds
inc
sbb
pop
loopne
mov
cmpsl
dec
mov
sub
jnp
in
icebp
xchg
sub
dec
xchg
inc
push
or
mov
pop
mov
inc
fwait
out
dec
mov
andl
ret
sahf
fs
push
mov
inc
aaa
popa
xor
dec
dec
sahf
mov
mov
insb
pushf
shl
xor
jmp
mov
lods
adc
insb
xor
loopne
mov
inc
dec
stos
xchg
stos
call
mov
or
mov
xor
inc
push
es
sub
dec
pop
fcoml
sahf
push
fs
jmp
mov
ret
push
ljmp
mov
and
dec
neg
and
or
push
push
jge
inc
xor
mov
es
sub
int
sahf
ss
lret
sbb
and
int3
mov
das
stos
enter
adc
mov
call
cmp
pop
pop
cltd
inc
lret
push
jmp
mov
rcl
lret
stos
leave
movsl
jno
hlt
jb
mov
stos
lcall
jmp
insb
or
xor
imul
push
fsts
push
xor
or
xchg
mov
out
rorl
dec
std
adc
pause
imul
out
movsb
lea
mov
xlat
add
xchg
test
orb
mov
and
and
xor
and
mov
or
leave
outsb
pop
out
xchg
adc
mov
scas
xchg
jge
movsb
inc
clc
pop
push
out
xor
bnd
jl
mov
pop
ret
or
aaa
sub
mov
or
lahf
mov
js
and
cs
shrb
mov
sub
clc
add
and
pop
cmp
sbb
clc
cld
js
inc
or
pop
fistpll
push
mov
and
ds
jo
add
sahf
pushf
mul
adc
sbb
andb
dec
inc
sbb
or
shll
imul
sti
mov
push
mov
sbb
adc
aam
out
dec
push
cld
iret
enter
xchg
push
rclb
pop
or
repz
in
sbb
adc
xchg
fbld
fnstsw
mov
and
mov
dec
mov
push
jecxz
or
popa
xor
adc
mov
test
lcall
jns
mov
mov
stc
jl
scas
lret
xor
and
jmp
jge
arpl
cmp
sbbb
and
inc
xchg
shrl
pop
sub
cmp
sbb
xor
add
cmp
add
cmc
ss
xor
popf
repnz
ret
movsl
mov
sbb
adc
out
fs
jb
popa
xchg
mov
insl
jb
hlt
xchg
jno
in
repnz
mov
ljmp
ret
loope
or
shll
clc
loopne
pop
es
insb
jecxz
cmp
pop
movl
sbb
stos
mov
xchg
xor
jb
fistpl
mov
pusha
sub
mov
fists
sarl
out
stos
sbb
sub
jnp
jle
rorb
dec
push
insb
incb
call
push
add
cmpsb
jb
mov
in
aad
mov
repz
push
mov
mov
lret
xor
ja
sbb
fwait
aas
mov
addr16
das
cmp
or
inc
add
push
daa
arpl
test
mov
ljmp
dec
add
and
mov
xchg
loop
xchg
dec
cmp
ret
push
mov
sbb
adc
pop
fnstcw
mov
push
xor
std
cmp
mov
mov
mov
jne
pushl
xor
lahf
or
mov
data16
call
shll
push
mov
fcmovnu
jno
adcl
aam
xlat
sub
mov
xlat
scas
cmp
test
popa
pusha
jnp
jno
xchg
jo
cltd
in
bound
loope
call
insl
loop
mov
aam
lahf
loope
xor
aaa
test
sub
out
or
dec
insb
imul
push
mov
ret
enter
mov
shlw
insb
insb
call
lock
add
fildll
xor
cmpsl
pop
ss
cltd
pop
in
lea
fldenv
cmp
push
push
adc
xchg
dec
andb
push
clc
add
gs
sub
sbb
lahf
xor
or
push
add
aad
rol
adc
ds
pop
movsb
movsb
mov
add
sub
les
pop
scas
rcll
fimull
xorl
adc
nop
mov
in
xor
out
pop
dec
mov
pop
call
fxch
adc
or
push
push
test
ljmp
dec
sbb
fcomi
sub
inc
ret
loope
jmp
packsswb
cld
addr16
jne
aam
pusha
std
ret
orb
lock
stc
dec
or
jecxz
lods
loope
test
test
pop
and
xor
inc
dec
mov
adc
idivb
mov
outsb
add
mov
lahf
nop
scas
cmpsl
xchg
push
shlb
add
jp
stc
pop
pop
inc
out
in
and
into
mov
les
pop
push
mov
aam
addl
xchg
xor
push
xor
sbb
std
push
outsb
dec
cmp
movsl
ss
loopne
pop
sbb
testb
rclb
movsb
es
cmp
stos
xor
adc
mov
aad
add
cs
cmp
or
fmuls
or
dec
xchg
and
repz
cmpsb
outsb
add
daa
mov
mov
hlt
cs
stos
outsb
cld
clc
cli
xchg
stos
dec
inc
inc
sub
add
or
pop
lods
nop
out
stos
cld
xor
sbb
insl
pop
sub
mov
cmp
mov
mov
in
xor
lods
push
fs
add
cmc
adc
cmp
enter
xchg
jmp
xchg
insb
sarb
jb
sub
and
push
psubsw
bound
and
pusha
aas
inc
inc
cmp
std
jl
mov
hlt
lret
mov
scas
andl
into
or
mov
dec
mov
jge
std
mov
mov
mov
outsb
jbe
mov
mov
movsl
pop
push
cmpsb
xor
mov
jnp
cmp
lcall
xchg
lcall
inc
mov
mov
cmp
push
es
shlb
cltd
loop
mov
test
lret
and
arpl
or
xor
notb
inc
out
loopne
pop
shrb
icebp
andb
repz
mov
push
daa
aaa
xchg
inc
mov
pop
or
movsl
dec
lock
jp
and
pop
inc
bound
cmpsb
mov
jo
std
push
ret
mov
mov
and
jb
jle
push
cmp
je
mov
stc
daa
in
lret
xlat
sub
aaa
repz
inc
aas
je
adc
add
and
cmpsl
mov
and
es
cltd
xor
dec
jle
add
push
cmp
enter
xchg
insl
stc
jge
ficomps
mov
outsl
out
gs
or
test
in
enter
sub
sar
add
out
je
loop
shrl
shlb
popf
push
nop
mov
sub
inc
xorl
xchg
imul
cmp
push
hlt
add
and
push
push
mov
cld
sbb
dec
adc
sbb
into
or
jnp
mov
fcompl
add
insb
xor
and
pop
fstl
ret
jnp
jmp
jne
mov
cli
mov
in
or
jo
inc
stos
daa
int
in
cwtl
mov
pusha
mov
pop
jns
mov
push
repnz
gs
daa
jmp
xchg
mov
mov
pop
orl
or
xor
mov
mov
stos
lods
insb
cmp
test
add
repnz
es
push
loope
movsl
popf
cmp
inc
cs
das
or
inc
adcb
hlt
push
pop
daa
repz
jp
addl
or
cmc
out
adc
dec
stos
pop
push
gs
in
rorb
inc
mov
mov
or
xor
in
mov
cmpsb
ja
fildll
sar
rcr
sbb
push
aas
lock
jge
xor
ds
cmp
fmuls
xor
cmpsl
loop
test
aaa
dec
ljmp
push
ror
mov
xchg
sbb
fidivrs
jns
mov
fmul
aad
ljmp
inc
arpl
mov
push
mov
xor
imulb
movsl
pop
leave
push
out
xchg
cmp
mov
mov
js
jg
push
or
call
or
aam
lret
fnstenv
stos
or
das
ds
bound
scas
enter
pop
dec
loopne
sbb
mov
push
adcb
fiadds
sub
bndstx
popf
lcall
sub
aaa
sbb
mov
movsl
aas
mov
js
cmc
jb
shll
inc
ja
or
addb
cmc
cmp
insl
nop
pop
ret
xlat
and
shll
lret
lock
ja
xchg
lds
jns
loop
pop
jecxz
cwtl
inc
xchg
lds
inc
or
add
scas
pop
daa
push
mov
mov
fsts
xor
mov
test
addr16
pop
ficomps
clc
cltd
test
fwait
jp
fisttps
test
xor
test
adc
je
dec
pop
mov
inc
xor
jle
add
popf
fists
cld
xor
lods
add
mov
out
and
les
mov
cmp
sub
pop
enter
push
mov
cmp
cltd
mov
loop
les
lcall
lahf
mov
push
sarl
sub
sub
adc
les
into
add
inc
and
xchg
inc
cmp
mov
test
mov
lcall
cmp
sub
lcall
add
jne
js
xor
test
mov
ljmp
je
push
push
cli
mov
mov
cmp
and
loope
enter
gs
dec
xchg
add
daa
cmpsl
sub
rorb
mov
adc
imul
pushf
ficompl
pushf
xor
mov
mov
loopne
jnp
or
repnz
cmp
dec
xor
xchg
ret
aas
mov
jns,pn
insl
mov
or
sti
psubsw
xchg
push
pop
pop
pusha
mov
mov
xor
flds
hlt
testb
mov
lds
adc
xor
xor
and
jnp
int
or
jmp
gs
sub
mov
das
into
adc
xchg
sub
lcall
clc
gs
stc
loop
mov
jp
cmp
cld
ror
jbe
movsl
scas
ret
in
or
cmp
out
jl
lcall
inc
mov
push
fldcw
jne
mov
add
jns
mov
subl
das
pop
add
ret
xor
jbe
das
add
add
rclb
push
pop
sbb
pop
and
push
jo
mov
inc
mov
inc
and
xchg
xor
inc
rolb
arpl
cmp
cli
int3
fsub
mov
lahf
call
movsb
sbb
xchg
shlb
push
shr
popf
adc
xchg
mov
push
ret
mov
int3
push
test
cmp
jo
movsb
in
and
fidivrs
sbb
shlb
sub
lcall
stc
js
loop
xchg
icebp
cmp
push
inc
add
jns
push
adc
movsb
pop
in
push
sub
cpuid
and
cmpb
cli
mov
popf
sub
push
adc
jecxz
int
lods
fadd
and
add
pop
cmp
mov
in
or
dec
xor
adc
mov
sub
xchg
test
add
xor
scas
cli
dec
mov
push
sahf
mov
or
xor
or
adc
popf
xchg
stc
adcb
push
push
sbb
pushf
jnp
push
or
inc
lock
or
push
inc
add
das
cli
pop
xor
out
cmpsb
push
push
cld
test
lods
sub
push
jae
mov
sahf
rcl
jg
mov
add
mov
sti
add
or
pop
ljmp
ljmp
sub
aad
xchg
inc
scas
shrl
pop
lods
mov
and
fst
lret
xor
ja
and
aam
mov
imul
scas
lret
sub
daa
dec
outsb
in
pop
iret
fsubs
adc
cmp
sarl
xchg
data16
jne
ficoms
mov
lods
xor
cmpsl
test
mov
xorl
rcl
pop
enter
push
mov
lea
gs
push
ja
stos
in
test
into
out
outsl
bnd
bound
out
add
shr
movsb
push
mov
mov
cmp
xor
xor
testl
sbb
mov
jecxz
push
dec
cmp
jbe
mov
icebp
cmc
fildl
mov
sar
inc
push
jae
ljmp
filds
clc
imul
xor
sbb
mov
push
lds
loopne
daa
cmc
cs
inc
or
ret
and
aam
das
sub
bound
popa
hlt
notl
hlt
aad
call
aas
pop
pop
popf
xlat
push
add
sbb
aaa
jmp
lahf
jl
sti
mov
cmp
lret
mov
or
into
push
dec
add
jp
repz
in
add
pop
cmp
sahf
pop
in
xor
iret
or
stc
icebp
sbb
dec
popf
jecxz
add
lea
xchg
sub
out
fsub
outsb
lcall
adc
in
mov
clc
and
lock
hlt
das
lods
and
adc
lret
push
cmp
sub
jecxz
or
mov
cmp
lea
ret
cmpsb
fisubrs
fwait
xlat
sahf
dec
test
jb
sbb
out
push
xor
aam
aad
push
mov
out
xorl
insl
cmp
pop
mov
sub
data16
into
push
add
lret
insb
aaa
jecxz
add
sahf
and
sti
ds
mov
add
ljmp
je
test
in
jno
mov
push
mov
inc
aaa
jbe
mov
fdiv
jmp
mov
push
leave
sti
pop
inc
mov
rol
stos
aam
rclb
int
pop
frstor
pop
test
pop
lret
popa
imul
scas
jae
mov
cmp
push
lahf
inc
mov
subl
cmpl
fstpt
push
or
push
xchg
adc
test
cld
pop
nop
pop
fcmovbe
xor
orl
jae
aad
outsb
cmp
mov
into
pop
inc
sub
push
xor
sti
adc
into
xchg
fcoml
pop
daa
xchg
mov
iret
std
inc
push
das
shlb
movsl
mov
cmpsb
dec
out
add
idivb
icebp
test
mov
xor
in
pop
lcall
ffree
rcl
movsl
mov
cld
fstpl
outsl
sbb
jl
ja
or
and
and
pop
in
jge
adc
adc
cli
insb
add
aad
js
xchg
movsl
out
rorb
scas
xor
jnp
test
lret
mov
xlat
pop
mov
push
push
outsl
cwtl
int
push
mov
mov
pop
or
jl
scas
xor
mov
fcoml
jg
cmp
fwait
push
es
inc
cs
ret
add
lods
lret
iret
rorl
sbb
insw
or
lods
test
add
push
insb
aas
xor
mov
mov
dec
into
cmp
mov
sub
add
push
xchg
mov
aad
push
xchg
xchg
push
ret
pop
out
sbb
aas
adc
es
adc
xchg
xchg
sub
pop
jo
ret
jecxz
xchg
mov
xor
push
repnz
lock
add
jno
das
push
or
jmpw
sub
cmp
negl
ret
lds
cmp
sub
shrl
xchg
pop
lret
sti
lcall
test
mov
xor
nop
test
inc
or
out
icebp
jge
sarl
or
and
cmp
cs
sub
test
push
out
jnp
jbe
sahf
into
mov
pop
fidivrs
icebp
mov
insl
cmp
es
test
and
lock
mov
jns
xchg
xchg
ret
ret
sub
in
out
movsb
cwtl
push
adc
imul
lcall
cs
dec
lret
pop
daa
dec
adc
xchg
cmp
sarw
cmp
mov
cmp
ljmp
cmp
jecxz
aam
pop
lods
gs
shl
sarb
in
dec
cli
adc
mov
leave
js
aam
cld
cwtl
fsubr
lea
jle
pusha
sbb
lea
mov
imul
jge
dec
push
and
ds
in
enter
pop
cmp
in
mov
cli
enter
test
pushf
adc
xlat
adcb
sti
jbe
or
pop
push
xchg
push
aaa
pop
cmpsl
inc
dec
aas
loope
mov
ds
mov
sbb
inc
data16
rcrb
out
mov
add
hlt
adcb
mov
sub
xor
mov
pop
add
in
mov
dec
repnz
lods
ret
popa
pop
ss
jp
cli
mov
enter
cmp
fidivrl
pop
ss
push
pop
lret
sbb
and
lret
mov
vshufps
xor
repz
sub
pusha
sti
in
add
test
test
add
mov
add
dec
adc
addr16
mov
xor
or
cmpsl
clc
pop
mov
inc
sub
push
popa
jo
faddp
and
call
pushw
mov
xor
cwtl
fcoml
mov
jg
pop
xchg
jns
inc
dec
xor
mov
shrl
sub
push
pop
dec
in
jge
xlat
and
repnz
bts
inc
pop
push
pusha
pop
cmp
cmp
dec
ds
and
jge
sar
pushf
and
adcb
fstps
leave
mov
popf
pushf
pop
iret
ja
enter
testb
adc
jno
push
sahf
cltd
bound
push
lret
dec
aas
es
cmp
or
inc
repnz
mov
ficompl
cmp
add
add
pusha
ljmp
movsb
sbb
scas
pop
cmp
jno
lods
insb
mov
xlat
sbb
test
sub
jae
push
sbb
lds
shll
pop
pop
lret
aaa
and
js
test
mov
pop
imul
dec
sbb
sti
pop
aam
repnz
clc
push
push
jecxz
fldenv
lea
ds
jle
or
popa
inc
add
sub
sbb
or
sahf
dec
inc
lret
pusha
pop
shlb
mov
repz
sbb
out
dec
mov
stos
jg
cmc
xchg
stc
cmp
mov
push
mov
testb
clc
jns
dec
stos
addb
inc
xor
and
push
or
scas
pop
pop
sub
lret
mov
sbb
inc
pushf
repz
fdivp
mov
addr16
ret
xchg
shll
pop
xor
dec
pop
ret
in
roll
movsb
hlt
popf
arpl
add
add
fistl
inc
mov
aad
in
xchg
call
mov
popf
and
mov
push
mov
jne
xor
mov
sbb
mov
dec
or
mov
dec
xlat
mov
push
add
pop
call
push
scas
mov
add
or
mov
jge
mov
jle
inc
mov
push
fdivrl
jge
xor
push
cmp
jecxz
mov
inc
sbb
xchg
jne
loope,pt
rcll
bound
pop
lahf
cs
movsb
ja
pop
xor
sub
dec
enter
xchg
push
push
sbb
test
test
xchg
aad
jg
push
mov
incb
xchg
adc
mov
xor
int3
imul
arpl
jp
mov
jno
or
pop
jge
rcrl
fildl
jo
pushf
adcl
ja
jne
cmpl
xchg
lds
outsb
cmp
adc
sbb
sbb
mov
sub
nop
popf
loope
out
fs
int
push
adc
mov
adc
hlt
push
and
add
sbb
stc
int
push
mov
mov
sbb
mov
push
js
in
negb
in
adc
or
mov
jae
sub
pop
cmpsl
jg
lods
mov
add
gs
sub
outsb
insb
xchg
loope
inc
pusha
mov
frstor
cmpsl
xor
xchg
cmpb
adc
int
sahf
idivb
fisubs
jecxz
pop
mov
and
dec
aam
aaa
test
int
push
mov
int3
mov
cmpsl
int3
and
push
cmc
out
adc
xor
xchg
pop
push
arpl
cmp
adcb
xor
in
or
sbb
xchg
mov
jp
xor
lahf
shrb
or
popa
xchg
roll
add
outsl
into
lret
jmp
dec
sahf
mov
insl
xchg
xor
cld
aaa
hlt
pop
xor
jns
xchg
or
iret
daa
insl
mov
sbbb
int3
sub
jns
fstpl
test
js
inc
xchg
jp
dec
cmp
or
sahf
pop
inc
push
loop
mov
pop
pop
xor
pop
add
mov
sub
mov
in
out
sahf
pop
cmp
into
pop
adc
mulb
sahf
jle
aad
into
fwait
subb
or
dec
cmc
jg
scas
jno
ljmp
lods
mov
sub
xor
adc
movsb
push
sbb
xchg
sub
and
xchg
cmp
mov
lods
subb
mov
aas
loopne
push
cmpsl
dec
iret
daa
nop
sbb
cwtl
loopne
cmp
sbbb
jo
sti
xchg
aaa
sbb
out
popa
jmp
sbb
or
mov
jg
add
push
ret
icebp
mov
popf
imul
or
adc
dec
idivl
stc
xor
ret
inc
test
pushf
jnp
es
dec
inc
inc
mov
cli
pop
cs
ja
sub
sbb
or
and
push
sbb
push
iret
arpl
inc
push
nop
pop
mov
aad
enter
sbb
pop
mov
sti
pop
pop
stos
cmpsb
jecxz
mov
fcmovne
mov
ret
clc
cmpb
aad
push
jae
in
lcall
aas
aaa
sbb
mov
add
roll
cmp
sub
subl
pop
cli
sarb
dec
rorl
mov
cld
mov
push
add
push
mov
int
xor
dec
sbb
push
push
outsl
cmp
jae
mov
fsubr
popf
int
cmp
notl
stos
jl
repz
jo
jmp
jp
in
jle
sub
mov
mov
pop
fdivrs
fdivl
adc
cmc
xchg
or
and
xorb
adc
xchg
push
pop
insl
cmp
mov
inc
fidivrs
dec
rolb
push
sti
push
sub
add
aam
add
imul
jecxz
movsl
xchg
push
jmp
push
xlat
mov
ss
mov
push
cmp
cwtl
mov
mov
insb
out
mov
push
adcb
icebp
pop
pop
lea
inc
jp
add
sbb
pusha
sub
daa
xor
jbe
lret
fcmove
ljmp
jnp
cld
jbe
xchg
or
dec
lahf
sbb
dec
dec
lret
mov
cli
mov
les
je
xchg
jae
jmp
add
mov
inc
pop
xchg
aaa
sub
sbb
out
jp
mov
adc
sysret
cmpsb
dec
mov
sub
inc
cmp
sbb
fwait
jae
xor
mov
mov
gs
je
push
xor
push
sub
mov
inc
adc
dec
jo
stos
push
inc
dec
and
aaa
or
filds
in
xor
jne
std
icebp
mov
pusha
pcmpgtb
in
fnsave
pop
rcl
xchg
mov
jne
xor
cmp
add
fidivrl
ret
pop
xorl
pop
sahf
mov
clc
adc
and
or
jne
push
inc
sarb
test
in
iret
sub
leave
dec
or
push
xchg
push
insl
pushf
leave
orl
int
mov
sub
and
xchg
rorb
xchg
shrl
hlt
je
xchg
jno
mov
jecxz
pop
daa
lea
cmp
xchg
mov
xchg
mov
pop
mov
adcb
adc
scas
in
push
lret
pop
mov
rclb
je
cld
sbb
xor
and
icebp
xor
lea
imul
dec
adc
cmpb
jecxz
jmp
cmp
arpl
jno
add
xor
out
fiaddl
ror
add
rol
ljmp
mov
mov
cwtl
outsl
push
rclb
loop
imul
daa
xor
mov
sub
xchg
mov
adc
sbb
add
fiaddl
rorl
es
xlat
adc
pop
xchg
push
add
cmpsb
iret
inc
hlt
cmpb
testb
add
rorl
repnz
jo
mov
js
ficomps
dec
cmp
lcall
sahf
mov
aam
cmp
dec
push
mov
push
xchg
dec
jb
or
mov
cld
sarb
in
bound
loop
sti
cmp
into
rcll
icebp
in
das
adc
sub
fwait
pop
bnd
xor
inc
outsb
out
mov
clc
xchg
mov
rclb
pop
icebp
ljmp
and
ss
bound
xchg
add
cmpsb
pop
push
pop
clc
xlat
fdivrs
jg
and
les
xlat
test
mov
mov
mov
mov
mov
lods
jno
cs
test
sbb
aas
cmpb
sub
roll
cwtl
mov
out
out
xchg
imul
scas
xor
mov
movsb
xchg
iret
sub
mov
cld
mov
or
sbb
cmpsb
in
adc
and
inc
dec
leave
push
fwait
and
sti
cld
jl
mov
jb
insl
fidivs
insl
pushf
in
clc
sbb
sub
loope
jne
sbb
pushl
adc
jns
stos
jecxz
test
or
pcmpgtw
insb
fcompl
xchg
out
out
pop
sub
push
xor
pop
lret
mov
add
adc
push
push
mov
int
cld
pop
jle
addr16
pop
push
movsl
add
bound
sar
std
mov
mov
inc
xchg
mov
cmp
ja
cmp
and
jecxz
mov
mov
jbe
and
test
scas
mov
push
les
sbb
call
pop
jp
xor
sbb
dec
mov
into
xor
cld
cmp
jb
mov
xchg
cmc
movsb
gs
adc
hlt
adc
jae
stos
nop
xchg
dec
and
or
pop
outsb
push
pop
clc
sub
lret
lahf
jne
xor
sub
mov
mov
mov
sbb
lock
xchg
les
ret
ret
imul
add
dec
jbe
mov
jns
cmpsl
call
xchg
cmpsl
scas
mov
sub
jecxz
aas
mov
mov
pop
enter
cmp
lahf
sub
insb
loope
loopne
xor
fidivl
inc
push
add
stc
stos
mov
seto
push
cmp
adc
mov
or
ss
mov
adc
aaa
jns
sti
push
popa
pop
mov
insl
pop
adc
inc
lret
into
sbb
pop
dec
xchg
xorb
adc
mov
jb
testl
inc
xchg
jg
out
imulb
cwtl
jmp
je
popf
and
test
mov
add
arpl
sub
dec
lcall
data16
daa
stos
insb
inc
movsb
hlt
clc
pusha
mov
mov
adc
sahf
dec
ret
pop
inc
add
fstl
adc
outsl
jnp
mov
test
mov
xchg
pop
xor
sbb
addr16
sti
movsb
or
xchg
rcrl
js
dec
mov
mov
rorb
add
data16
jmp
mov
push
mov
pop
popf
pop
int3
lods
cld
repz
nop
fcomps
lea
in
scas
xchg
mov
cmp
mov
pop
push
push
xor
xor
jo
in
mov
sbb
sub
dec
cli
sub
cmpsl
outsl
push
movsb
int3
jmp
mov
cltd
jmp
mov
shrl
incb
mov
outsl
mov
dec
adc
or
enter
daa
dec
out
dec
xor
sbb
mov
lcall
hlt
sbb
aas
leave
push
sub
in
out
mov
arpl
outsl
aad
fucomp
xlat
mov
dec
jb
push
sub
jbe
xchg
sbb
in
cmp
lock
lcall
and
push
jmp
in
ja
mov
xchg
test
mov
push
xchg
scas
out
loope
mov
xorl
and
mov
adc
aas
loopne
movsl
mov
ret
lock
dec
cmp
xor
lahf
or
mov
pop
xor
adc
popf
lock
and
dec
pop
iret
pusha
cmp
loopne
xchg
xor
inc
jae
sbb
lahf
fstpt
dec
fisttpl
loop
fnstsw
push
or
repz
int
bound
mov
daa
inc
mov
inc
andl
pop
mov
mov
dec
cmpsb
aam
insb
and
cli
mov
test
mov
jno
cmpsb
imul
fdiv
lods
popf
sub
das
adc
pop
pop
jl
pusha
sub
xchg
push
daa
fmuls
popa
nop
stos
aad
outsb
out
pop
xchg
mov
pop
xchg
xchg
cld
pop
push
addb
mov
sub
dec
inc
adc
cmc
lahf
js
inc
push
xchg
dec
scas
jg
std
and
repnz
out
cs
cmp
cmpsl
add
inc
jmp
and
adc
inc
mov
mov
cli
cmp
fistpl
fisubl
add
jae
adc
fbld
xchg
or
mov
es
repz
jno
push
mov
std
stos
xor
frstor
inc
in
cmp
push
shlb
add
push
ljmp
adc
sbbb
jge
sub
lret
inc
inc
jns
pop
icebp
cli
movsl
int
jns
stos
xchg
adc
lock
mov
sbb
sbbl
lahf
push
out
adc
cli
clc
mov
sbb
js
loope
lods
pop
hlt
stos
mov
sbb
and
das
call
mov
repz
or
mov
xor
fdivrl
jae
inc
ret
push
outsl
push
mov
cmp
inc
test
mov
cmpsb
sub
cli
xor
inc
pop
mov
mov
movsb
pop
aas
xor
lcall
ja
inc
sbb
and
out
cld
mov
mov
xchg
push
inc
in
inc
popa
pop
lret
scas
fidivl
aad
pop
out
or
loope
testl
into
out
jecxz
mov
aas
pop
pavgb
je
push
sub
mov
inc
loop
fs
ljmp
test
mov
and
dec
cli
cld
test
lock
nop
push
xlat
fisubrs
mov
sub
jo
jns
imul
les
inc
adc
insl
add
pop
cmp
movsl
clc
dec
sbbb
inc
mov
mov
pop
pop
dec
mov
jnp
pop
movsl
cs
ret
loop
inc
loop
aas
je
sbb
push
arpl
movsl
sub
addr16
jns
jns
test
push
pop
xor
cmp
lcall
call
arpl
pusha
mov
orb
xchg
xchg
mov
mov
sbb
jne
sbb
movsb
or
mov
mov
pusha
add
adc
iret
cli
in
jecxz
mov
sti
daa
push
dec
mov
xor
pop
inc
add
call
mov
cld
aam
or
pop
jmp
sbb
dec
les
popf
popf
cmp
pop
and
shll
mov
xchg
div
dec
jmp
mov
shll
movsl
inc
push
mov
cmp
jne
mov
and
js
xlat
lea
sbbb
inc
mov
inc
or
mov
cmp
push
dec
movsb
xchg
mov
and
cltd
test
add
pop
mov
cmp
sarb
inc
mov
lock
add
movsb
icebp
xor
cmp
xchg
sub
cltd
xchg
xorl
sub
jo
xchg
mov
scas
xchg
sarb
inc
loop
mov
cmpb
lods
hlt
jo
cmpsb
xchg
xchg
loope
arpl
jg
outsb
jle
test
xchg
inc
sbb
jo
mov
mov
pop
popa
test
jno
out
cmp
sbb
adc
stc
sub
movsl
outsb
add
popf
scas
xchg
scas
mov
les
ja
adc
inc
pop
push
fisubrs
sub
push
insb
into
sar
fisttpll
push
scas
mov
xor
inc
add
push
out
inc
mov
jno
arpl
inc
mov
xor
cmp
ljmp
notl
lock
pushf
das
push
sbb
push
and
outsl
test
jns
mov
mov
stos
es
fdivl
or
mov
adc
test
lcall
sqrtps
push
mov
sbb
stos
jge
pop
mov
pop
xchg
xchg
pop
js
repnz
loopne
scas
jns
mov
and
aaa
jns
cmp
sbb
out
sbb
xor
mov
into
pop
stc
mov
mov
sub
ficoms
es
pop
xor
mov
lahf
add
fbld
enter
int3
incl
or
adc
test
xchg
movb
pop
jno
pop
lea
popf
addr16
xchg
imul
in
inc
sub
imul
js
jbe
mov
lcall
jns
les
fimuls
sbb
push
mov
jb
adc
pop
jo
mov
add
push
icebp
adc
jp
jmp
call
dec
or
clc
push
push
ret
jne
hlt
incl
jae
mov
test
cmpsb
jno
shl
xchg
cwtl
cs
cltd
dec
stc
xchg
adc
sahf
and
rorl
movsl
dec
push
jecxz
cld
pop
push
fsubrl
mov
pushl
mov
mov
mov
mov
cwtl
and
rcrb
je
test
cmpsb
movsb
xor
jae
and
mov
notb
insb
sub
jns,pn
fwait
xor
mov
and
ret
in
ror
test
xchg
rcrb
or
cmpsl
popa
cmc
sbb
push
inc
test
lret
jl
xchg
mov
inc
jns
sub
jge
cmp
ret
and
loop
sub
add
fists
mov
xchg
push
xchg
jno
sti
inc
enter
pop
cmp
lahf
subl
scas
sub
mov
loope
dec
pop
dec
shrb
mov
jg
and
xlat
add
lods
push
pop
mov
scas
aam
data16
stc
fs
imul
mov
mov
dec
mov
mov
add
mov
int3
int3
add
mov
cmc
aaa
dec
scas
fbstp
popa
push
push
idiv
js
inc
push
fwait
cmc
arpl
push
icebp
lods
out
cwtl
sbb
imul
imul
pop
sbb
mov
xor
dec
adc
fistpll
or
inc
jne
outsb
xor
mov
xchg
iret
mov
xchg
xor
popf
push
popf
and
out
mov
or
clc
bound
xchg
sahf
aam
imul
mov
addl
por
js
push
adc
cli
cmp
mov
add
loop
inc
lods
cwtl
inc
loop
push
cld
arpl
fwait
pop
mov
daa
popa
test
or
cmp
sub
sub
or
stos
ret
fldt
xchg
inc
sub
ret
push
mov
scas
push
mov
adcb
not
cmc
inc
cwtl
cwtl
fstl
subb
into
xchg
push
inc
test
jmp
dec
inc
jno
xchg
pop
ds
or
dec
xchg
das
fldt
or
sub
ret
decb
movsb
insb
add
insl
sbb
js
das
scas
sbbl
clc
psrlw
stos
sbb
xor
jne
out
in
xchg
sbb
add
sahf
popf
fnstenv
cmp
popa
js
add
jmp
or
sub
push
mov
mov
xorl
pop
mov
addl
insl
lods
mov
sub
in
mov
or
pop
lds
ret
sbb
lret
lods
push
jne
out
jne
fistpl
ret
push
enter
mov
push
scas
push
out
das
and
enter
xor
sbb
stos
xor
stc
nop
xchg
lea
stc
cli
dec
out
sbb
aas
out
cmp
aaa
outsl
mov
and
dec
pop
xchg
jb
repz
lcall
pop
repnz
xlat
jecxz
dec
mov
stos
mov
mov
dec
out
faddl
loope
js
mov
pop
mov
subb
jns
and
dec
popl
addr16
mov
mov
imul
pop
xor
scas
cmpsl
push
js
push
xor
mov
push
and
cli
and
jl
vmwrite
push
ret
mov
aas
repnz
les
rclb
rolb
mov
mov
add
or
imul
pop
insb
xorl
add
push
out
out
jp
mov
push
mov
pushf
xor
test
adc
enter
stos
add
xchg
xchg
cmc
xor
xchg
push
hlt
push
mov
lods
test
cmpl
mov
or
ljmp
scas
flds
sub
dec
cmp
push
cmc
jp
inc
aaa
sbb
sbb
repnz
jns
movl
dec
ds
and
adc
inc
clc
hlt
daa
jp
adc
out
push
sbb
pop
push
mov
cltd
call
fcmovnb
jbe
pop
mov
adc
inc
lods
int
or
xchg
std
add
mov
xchg
push
sbb
xor
es
xchg
in
mov
sub
sub
daa
mov
pop
xchg
icebp
rorl
jno
loop
cmp
cmpb
enter
mov
popf
cmp
sub
fildll
mov
jo
or
mov
aaa
xchg
imul
fisttps
pop
xchg
xor
ret
cmpsl
aaa
mov
sbb
mov
inc
or
jmp
aad
lea
mov
dec
push
filds
xor
push
ljmp
ret
xchg
movsl
lahf
jle
jnp
insb
nop
pop
sub
pushw
imul
idivb
jl
movsb
inc
jmp
int3
idivb
in
sub
cmpb
jp
pop
ss
cmpb
jb
repnz
ss
push
xor
mov
sub
cmp
mov
mov
mov
popl
push
jns
adc
ret
push
jg
xlat
icebp
testl
xor
or
sub
mov
jl
fdiv
cmpsl
les
psllq
in
mov
out
not
lcall
into
iret
cmp
scas
idivb
arpl
bound
fdivs
cmc
popa
mov
xor
and
insb
inc
xchg
out
dec
rorb
push
mov
in
movsb
pop
loop
imul
cld
js
rcll
mov
mov
mov
adc
lock
out
pop
and
outsl
out
ja
dec
mov
pop
pusha
push
and
js
inc
adc
and
movsb
xchg
push
cmpsb
xor
in
mov
lcall
add
lds
add
add
outsl
stos
sbb
je
mov
cmp
nop
ja
pop
fs
fdivl
adc
mov
mov
xor
mov
mov
pop
push
inc
jbe
push
xor
imul
pusha
xor
inc
pop
idivb
sbb
subl
into
out
cld
cmp
bswap
xchg
test
inc
and
test
scas
inc
mov
adc
cmp
mov
mov
clc
pop
subl
mov
add
mov
mov
dec
inc
push
adc
lods
addb
fiaddl
inc
lds
xor
movsb
in
inc
or
push
outsl
ds
es
add
sbb
lret
mov
iret
lcall
xor
mov
dec
add
or
insl
jg
sbb
fistps
jae
xor
int3
xchg
push
xchg
mov
icebp
xchg
mov
jle
movsb
fldt
clc
xor
fldenv
add
rol
test
xchg
popa
mov
leave
daa
push
lret
out
mov
stos
xor
pop
xlat
iret
inc
push
leave
ss
mov
pop
push
fcomps
push
jne
pop
and
adc
xor
ljmp
inc
dec
cmp
enter
or
aad
or
push
cmp
pop
and
xchg
cmp
lea
push
jns
jge
outsb
test
inc
dec
push
cltd
xchg
dec
scas
jb
lret
cmpsl
inc
push
cmp
xor
fyl2x
mov
pop
mov
and
jecxz
aad
fildl
and
jno
hlt
rcrb
mov
jns
dec
aaa
mov
jbe
pop
push
and
push
cltd
fsin
mov
adc
dec
in
aam
stc
jecxz
dec
add
imul
jp
pop
xchg
hlt
dec
mov
stos
lea
inc
xchg
adc
stos
lret
out
jb
dec
mov
sahf
add
add
xchg
mov
mov
inc
or
aad
pop
cmpsl
mov
aad
push
fdivs
add
test
je
xchg
jg
arpl
sub
add
ljmp
shrl
mov
popa
push
loopne
adc
fstpl
fsubrl
pop
and
cmpsl
cli
mov
cmp
fs
inc
adc
and
mov
jl
fnstsw
roll
clc
mov
pop
jle
mov
cmpsb
and
mov
and
out
inc
loop
add
fimull
bnd
xchg
pop
je
test
out
cmp
sub
shlb
shll
pop
xchg
stos
xlat
icebp
inc
shl
sub
pop
cmp
push
or
cmp
or
cld
popa
xchg
mov
add
cmc
xchg
inc
xor
dec
insl
inc
dec
inc
test
faddl
aaa
push
sbb
sbb
pusha
notl
in
aas
filds
or
arpl
push
insb
sub
lods
or
rclb
fistpll
xor
cmp
sbb
adc
lock
cmpsl
sbb
add
adcb
das
movsb
ret
gs
inc
ss
cmp
les
out
je
add
mov
stc
test
inc
inc
pop
call
mov
push
ja
daa
jnp
inc
fnstcw
or
ret
lret
ret
inc
xor
loop
mov
lahf
dec
dec
int3
push
hlt
fsubrp
pop
ljmp
std
outsl
sub
jg
loopne
pushf
pop
and
int
stc
inc
xor
push
sbb
lahf
cld
scas
adc
pop
out
fucomp
xor
push
adc
add
stc
jne
mov
ja
fnstsw
dec
jmp
sbb
sub
nop
inc
cli
arpl
xchg
rorl
cltd
jecxz
cmp
iret
mov
jmp
outsl
mov
sub
xor
mov
sub
adc
scas
sbb
adc
pushf
jge
popf
jno
or
inc
xor
out
loop
inc
ss
dec
fwait
mov
repnz
adc
add
sbb
jg
xor
in
or
imul
cmp
and
daa
push
mov
lea
ds
repnz
mov
adc
fnstsw
jmp
sbb
dec
adc
inc
mov
dec
ds
iret
stc
sub
adc
xor
paddsb
push
add
inc
outsl
add
push
shr
subl
mov
mov
insl
stc
ljmp
aaa
jnp
test
dec
inc
xor
xchg
cli
je
insl
mov
cltd
jl
imul
or
push
push
gs
jge
cmpsl
jo
jb
push
push
xor
sub
dec
roll
and
nop
loop
fmulp
add
lds
sbb
mov
cmp
sub
cmp
cwtl
mov
lods
push
in
test
xor
sarl
mov
bnd
adc
outsb
add
sbb
and
cli
aam
stos
push
sub
lcall
cltd
pop
std
repnz
leave
inc
shl
pop
test
aaa
xchg
enter
jns
test
jg
dec
sbb
int
les
xchg
jp
fistl
mov
sti
not
roll
rclb
mov
cmp
mov
pop
call
and
or
inc
and
sbb
add
add
cs
test
add
push
inc
aas
and
cmp
mov
xchg
add
add
aad
xlat
subb
mov
nop
rorl
ds
aad
sbbl
fsubrs
lock
jmp
fwait
pushf
mov
add
insb
je
sub
sahf
out
mov
das
add
mov
push
dec
push
xor
mov
stc
rcl
out
jno
lret
mov
maskmovq
mull
or
scas
aad
fldl
lahf
lret
pop
mov
fs
sahf
cmpsl
dec
xchg
pop
jbe
jge
inc
popl
jp
rcrl
cld
inc
sti
insl
jno
mov
fidivrs
out
lods
aad
jb
insl
imul
adc
jge
pop
je
jno
mov
lock
into
mov
xchg
mov
push
cmp
movsb
out
cld
test
mov
pusha
sbb
hlt
cwtl
or
scas
orb
add
mov
ret
push
lods
jge
jae
mov
sbb
push
ja
mov
mov
pushf
movsb
and
pop
pop
push
fisubs
add
cmp
loop
push
test
add
pop
mov
fisubs
imul
cmp
or
popf
sti
dec
addr16
pop
mov
popa
cmp
or
jo
pop
cmp
push
ja
sbb
mov
sbb
push
mov
lcall
or
and
sbb
and
testb
jle
xor
cltd
xor
shll
jb
cmpsb
mov
xchg
hlt
adc
dec
jecxz
ret
or
out
test
cmp
push
iret
pop
adc
mov
sbb
mov
loope
adc
scas
out
test
insb
sub
cwtl
mov
sahf
or
es
jbe
jns
cli
or
test
stos
cmc
mov
pop
mov
add
pop
push
aas
leave
push
jle
fwait
jecxz
sarl
int
mov
jnp
test
xchg
and
pop
adc
adc
jecxz
int3
push
mov
jae
or
lods
push
clc
and
or
xor
lock
fsubp
pop
movsb
dec
mov
xchg
int3
sub
sbb
dec
add
idivl
xlat
gs
cs
in
xchg
sub
or
jge
test
push
ss
mov
cmpsb
push
pop
pop
inc
adc
pop
jl
ret
pop
jg
mov
mov
in
cmp
test
nop
rorl
lock
inc
stos
lock
sub
cmc
xchg
out
aas
andb
dec
clc
jnp
xchg
lea
pop
inc
mov
push
push
aas
negl
mov
pusha
lcall
dec
mov
mov
and
sub
sub
or
cmc
mov
cmp
sahf
ja
xor
xor
sub
cmp
cwtl
int3
scas
jnp
repz
pusha
mov
sahf
dec
test
loop
mov
mov
mov
add
and
dec
and
jp
shrl
sarl
ret
pusha
bound
sbb
add
sub
in
mov
repz
lea
mov
fcmovnu
sub
push
ds
fstpl
leave
or
sub
dec
repnz
jb
leave
sahf
mov
xor
ljmp
pop
adc
adcl
xchg
pop
push
adcb
inc
jne
in
lret
decb
lret
xor
sub
ret
sbb
jb
cmp
int3
cltd
lahf
xchg
inc
jl
cmp
imul
dec
sti
sbb
xchg
enter
imul
clc
insl
xchg
lods
cli
dec
xchg
jle
fwait
add
cmp
jle
push
das
repnz
jmp
test
dec
mov
out
mov
insb
cmp
inc
cmp
aaa
pop
mov
das
lret
and
test
ljmp
pop
xor
or
push
cmpsl
sarl
ljmp
and
sbbb
fistpl
fsubrl
mov
movsl
xor
add
jns
pop
adc
sbb
fs
movsl
stos
jmp
scas
loopne
inc
iret
jg
mov
jne
ror
dec
adc
fs
sahf
adc
push
insl
popf
push
add
sbb
add
mov
mov
pop
inc
push
adc
push
xchg
inc
jnp
cmp
jecxz
nop
inc
sbb
xor
inc
orb
rcrl
popf
into
push
jg
in
dec
jg
pusha
data16
mov
out
enter
lds
cli
scas
fcom
test
pop
rcrl
fsubrp
mov
pop
mov
outsb
mov
aam
pop
ret
arpl
sub
shrl
cmpsl
dec
jb
aad
lea
add
mov
scas
cmpsb
adc
outsl
push
push
in
pop
mov
sub
jecxz
adc
jno
add
test
cld
mov
in
pop
bound
mov
nop
mov
sti
pop
sub
adc
loop
push
pop
add
pop
cmpsb
cmp
leave
mov
mov
cld
sbb
test
out
shrl
sub
inc
popl
cltd
mov
sbb
movsb
push
inc
scas
cltd
push
sarb
xchg
jmp
loope
rol
jne
push
imul
jo
mov
sub
cli
imul
jl
aad
cwtl
fcmovb
jb
inc
enter
cld
adc
add
inc
sbb
out
cmp
and
sbb
add
hlt
adc
or
sbb
jl
in
jp
ret
int
stos
leave
cli
scas
in
movsl
fcoml
xchg
xchg
cmp
pop
lret
lods
mov
push
jbe
fldcw
mov
icebp
mov
dec
daa
and
sub
sub
int
dec
imul
std
push
push
jb
fwait
imul
ret
jo
into
cs
les
mov
mov
jns
pop
cmc
in
daa
pop
adc
pusha
xor
dec
or
sarl
nop
adc
mov
leave
outsl
fisubl
movsl
popa
push
test
stc
push
jb
test
dec
xor
dec
leave
or
inc
ret
out
call
pop
mov
fcmovnbe
pop
imul
mov
test
loope
fldenv
pop
jl
jno
or
jge
mov
add
mov
push
in
enter
lea
push
loopne
xchg
pushf
arpl
inc
jle
leave
adc
or
inc
mov
dec
adc
add
mov
dec
rcr
clc
dec
xchg
outsb
adc
cmp
jmp
mov
pop
xchg
sbb
sub
daa
xchg
lcall
jl
jo
pop
sbb
sbb
inc
pop
roll
pop
push
insl
insl
or
dec
cmp
mov
int
fcompl
xorb
xchg
ss
loope
sbb
orl
test
scas
scas
mov
push
pop
adc
mov
sub
push
es
outsl
insl
dec
mov
out
cmp
movsb
stos
adc
adc
lods
sbb
cmp
inc
add
lcall
push
aad
push
movsb
sub
dec
enter
add
inc
popf
lcall
sarb
sbb
ret
mov
jnp
pop
cld
and
bound
jnp
dec
inc
ret
mov
mov
enter
sub
mov
jg
leave
sub
push
popf
add
push
aaa
jecxz
cmc
mov
lahf
in
fwait
inc
lret
test
or
fs
ror
cmpsl
inc
pop
fs
and
sub
imull
aad
adc
sub
mov
stos
or
sbb
mov
int3
jne
imul
into
orl
dec
mov
pop
ds
jl
jecxz
cmpsl
mov
cs
test
shl
shrb
repnz
repnz
or
adc
je
pop
inc
pop
lcall
aas
call
xorl
outsl
xchg
bound
cmp
jbe
imul
or
icebp
in
inc
lret
aaa
dec
cmpsl
push
add
test
scas
xchg
xchg
mov
pop
sub
push
mov
js
xor
ret
and
mov
test
xor
dec
mov
negl
testl
lods
add
xor
mov
pop
mov
sbb
mov
mov
push
cwtl
in
cmpsl
push
pop
inc
shlb
lods
adcl
jge
frstor
rol
cmp
and
mov
jmp
mov
movsl
fsubr
insb
mov
push
outsb
jle
in
push
adcb
fneni(8087
sbb
es
jl
mov
pushf
rclb
sahf
add
sub
push
rcl
mov
dec
push
das
and
repz
in
aam
mov
add
cmp
out
or
jae
out
jp
mov
test
and
pop
jge
out
xor
lret
je
arpl
shll
dec
scas
mov
add
int3
aad
push
loop
jp
test
mov
or
mov
ja
hlt
mov
test
mov
mov
fsubr
or
inc
test
arpl
mov
cmp
mov
jns
pop
push
push
pop
test
scas
xorb
movsl
stos
fs
test
dec
add
test
jmp
ja
mov
sub
cmpsb
pusha
sbb
mov
and
sbb
add
dec
push
test
divb
scas
repnz
lods
push
sub
call
setl
mov
data16
loope
xchg
je
mov
mov
push
xchg
and
dec
adc
roll
mov
int
in
pop
cmp
cmp
jnp
fstpt
mov
mov
mov
imul
adc
jecxz
movsl
cmp
dec
sbb
push
popf
cmpl
mov
xorl
std
sub
cs
sub
mov
imulb
lret
xchg
lods
xlat
popa
fcompl
sub
push
xlat
add
pop
pop
xor
loop
sub
nop
or
xlat
xchg
push
jmp
cmc
mov
out
shlb
xchg
inc
and
sub
xor
aas
stos
sahf
imul
mov
mov
sub
mov
sahf
ret
mov
cmc
in
imul
push
jg
jbe
pop
adc
sub
jnp
mov
pop
pop
loope
jo
jbe
xor
push
js
jb
jo
mov
mov
sbb
mov
cmpsb
insl
cltd
clc
test
je
andb
sub
pop
dec
mov
dec
call
fs
xor
in
sub
es
dec
pop
push
imul
popa
adc
pop
out
xchg
jle
mov
faddl
jo
jg
pop
mov
mov
mov
leave
mov
mov
push
sub
pop
jne
xchg
imul
jmp
mov
cli
cmp
pop
subb
inc
inc
xchg
jle
in
inc
sahf
xor
cmpsl
cltd
lahf
push
sub
pminsw
arpl
inc
jle
fldt
inc
aam
xor
push
mov
dec
jae
cmp
lods
dec
lock
loopne
sub
dec
leave
and
movsb
js
sub
push
jne
mov
in
test
loop
mov
jno
fmuls
ja
loopne
jmp
cs
mov
insb
adc
lods
push
xchg
push
push
xor
fiaddl
mov
push
addb
imul
lret
hlt
fldl
sub
dec
mov
xlat
popf
fisubs
loopne
push
fildl
cmpsl
ficompl
jg
sub
jecxz
lahf
sbb
fcmovnb
sbb
inc
or
stos
fs
dec
sub
or
shll
insb
pop
pop
pop
pop
jno
pop
loope
jnp
jno
push
xchg
test
addl
lds
push
add
inc
rorl
inc
stc
or
movsb
std
test
cmpsl
test
sub
mov
pop
adc
pop
xor
inc
mov
pusha
rol
pop
jl
insl
inc
push
jmp
dec
mov
scas
add
leave
jmp
pop
sbb
push
cmpsl
and
rorb
int
insb
jp
push
mov
push
xor
daa
xor
mov
lahf
xor
testl
or
subl
enter
call
xor
sub
aaa
push
stc
sub
adc
sub
in
mov
fmulp
jge
pushf
gs
gs
icebp
out
sub
scas
popa
dec
mov
insl
push
gs
jge
push
mov
jne
add
aad
out
fsubrs
aaa
lods
sub
jge
jle
lods
cmp
sar
and
nop
pushf
or
pusha
mov
inc
add
std
mov
push
test
or
push
jecxz
xor
cmp
fidivrs
pop
pop
adc
sub
dec
push
out
sbb
or
fldl
dec
dec
insb
int
mov
jmp
popl
jno
fimuls
and
bound
scas
int
mov
xor
mov
pop
fildl
pop
insl
icebp
test
xchg
pop
daa
test
mov
pop
jns
sub
cmp
aam
dec
mov
pop
jne
out
pop
xchg
sub
call
in
insl
cmpsb
test
add
icebp
jp
sarl
loop
cmp
push
movsl
xor
or
gs
aaa
out
cmpb
fmull
out
push
push
cli
mov
xchg
sbb
mov
lret
mov
adc
sbb
into
push
pushf
es
push
adc
cmp
push
into
sbb
stos
aam
jp
inc
data16
repz
lock
pop
mov
aas
inc
repnz
imul
mov
enter
push
outsl
aas
xchg
xchg
mov
sbb
lcall
jp
and
imul
aas
gs
es
fistl
lea
push
in
daa
push
xchg
dec
mov
and
and
enter
xor
or
fisubs
cmpsl
sbb
out
mov
fwait
jg
cmp
dec
jnp
mov
imul
imul
aad
dec
jns
and
and
lret
pop
rol
emms
inc
lods
cmp
inc
mov
cmp
or
aad
sbb
pop
sbb
cli
data16
dec
fs
sub
lahf
stc
loope
sbb
stos
pop
xor
cwtl
imul
add
popa
imul
adc
fldenv
mov
cs
shll
xor
scas
outsb
push
nop
pusha
out
cs
movsb
lret
flds
or
push
add
call
imull
push
scas
lret
lret
xchg
out
inc
rcrb
test
lahf
nop
filds
dec
mov
dec
pop
fisubrs
movsb
sbb
cwtl
outsb
adc
jge
iret
mov
scas
mov
and
cmp
push
rcrb
mov
outsl
test
add
cld
xchg
adc
adc
scas
addl
lea
addr16
shlb
pop
jmp
dec
pop
xacquire
test
es
cmp
push
int3
sub
or
subl
int3
mov
inc
dec
lea
jmp
xchg
mov
bnd
cmp
adc
mov
and
ja
xor
mov
inc
sub
pop
cmpsl
jbe
fiaddl
xchg
stos
aam
sub
add
and
int3
call
in
sbb
xchg
xchg
jbe
sahf
lret
cmp
ja
outsb
out
and
or
icebp
data16
fwait
sbb
and
imul
repnz
mov
xchg
mov
xor
mov
cmp
push
pop
pop
xor
enter
sub
mov
popa
and
cwtl
rcrl
mov
ja
push
cmp
loopne
mov
push
inc
loope
jmp
xchg
fdivr
stos
jge
mull
pop
popa
divl
jecxz
push
sbb
repnz
mov
test
pop
dec
dec
movsl
push
adc
bnd
sub
dec
lcall
and
pop
push
nop
lock
mov
xchg
mov
fldt
mov
arpl
aas
mov
xor
jno
add
adc
push
das
fsubr
dec
dec
xchg
mov
cmpl
push
pop
add
mov
pop
daa
ret
lock
ds
or
sti
fidivrs
xor
in
sub
bswap
mov
cs
lret
or
repnz
loopne
arpl
jno
pusha
xor
xor
jp
ja
hlt
add
mov
in
out
dec
xchg
test
lret
fstl
in
or
pop
arpl
mov
lcall
xor
aas
pop
cmpsb
mov
ss
nop
loop
data16
push
ss
scas
add
ret
sbb
push
imul
add
adc
add
push
popa
mov
test
and
xchg
adc
sub
movsl
lcall
dec
push
push
inc
sbb
cmc
push
mov
aam
scas
adc
movsb
inc
push
roll
jb
outsl
sbb
jb
push
cmp
inc
xor
adc
or
seta
mov
mov
or
add
and
dec
ljmp
movsb
pusha
sahf
jns
xor
and
sbb
sbb
loop
or
jmp
sbb
insb
add
icebp
jnp
leave
add
icebp
pushf
jnp
xorl
inc
push
int3
sub
push
fs
lds
sub
mov
insb
sbb
xor
ret
pop
stc
pop
data16
inc
cltd
mov
nop
sub
daa
fdivrs
pop
and
pop
xchg
insb
xor
xor
fs
and
sbb
sub
cmp
mov
int3
aad
ret
inc
mov
adc
mov
mov
pusha
insl
pop
pop
imul
icebp
adc
enter
cwtl
fwait
je
cmc
popa
push
dec
std
and
mov
jecxz
loope
stos
mov
cmp
mov
mov
pop
add
mov
push
test
add
jmp
ret
xor
lods
push
mov
inc
push
repnz
fnstenv
shlb
decb
mov
notb
push
scas
mov
jbe
mov
rorl
mov
outsb
testl
and
call
dec
xchg
mov
clc
add
in
mov
in
push
bound
pop
lahf
ss
push
xor
lahf
pop
mov
lods
shll
push
ss
jb
pop
and
repz
xchg
sbb
add
and
adc
sahf
adc
add
xchg
mov
cmp
call
dec
cmp
ret
js
ficompl
push
aam
lods
jmp
icebp
in
hlt
fnsave
es
sar
xor
and
cmp
idivl
xor
push
push
dec
lcall
mov
inc
cmp
test
cmp
or
pop
inc
add
dec
pushf
jb
sahf
test
jge
cmp
inc
repnz
aas
or
fmuls
ljmp
aam
lret
orb
out
fcomps
test
sbb
clc
jge
enter
imul
inc
popl
and
fidivl
mov
mov
mov
pop
aad
jb
les
sbb
into
jp
xchg
out
pop
push
xor
ds
ljmp
or
mov
push
in
xchg
std
dec
xor
popf
jge
popa
fwait
in
pop
shl
fbld
pop
add
jge
shll
fldenv
es
addl
aad
pop
int3
cld
lret
fmulp
shrb
xor
mov
mov
nop
out
add
or
or
sahf
int3
rcrb
pop
pop
leave
mov
test
and
or
std
hlt
cmc
push
lret
jnp
mov
lods
sahf
fwait
pop
ret
out
pop
out
loopne
xor
lock
xorl
mov
stos
mov
push
int
ss
push
mov
mov
cltd
addb
or
pop
adc
inc
and
cmp
inc
sahf
xchg
sbb
pop
lock
or
inc
jl
cmpsb
loop
pop
adc
cmp
and
testb
sbb
add
adc
jp
gs
lret
cld
std
push
inc
jbe
shrb
fs
sub
inc
jnp
dec
popa
sbb
mov
fucomi
jmp
sub
xor
add
pusha
lret
xlat
outsb
mov
mov
push
jg
add
arpl
sbb
loopne
fs
lret
xor
cwtl
sub
outsb
ret
ficoml
sub
and
pop
or
sbb
ljmp
cmp
sbb
fisttpl
xor
mov
mov
movsb
lock
repz
out
mov
mov
xor
mov
push
sub
lock
mov
sbb
mov
cmp
xor
mov
testb
arpl
lds
cli
mov
dec
out
mov
outsb
dec
cmc
lea
sbb
loopne
or
scas
inc
mov
mov
or
je
dec
icebp
dec
xchg
mov
mov
ds
mov
mov
or
cmp
aas
dec
dec
sbb
ret
cmpsl
sbb
cmp
imul
scas
addl
mov
aad
pusha
aas
jb
loope
mov
inc
dec
fs
les
jno
push
aas
sub
and
gs
xlat
stos
lods
mov
xchg
sub
jo
stos
fxtract
andl
dec
push
sub
shr
pop
adc
lcall
ljmp
dec
pop
dec
cmp
dec
xchg
out
flds
xchg
lret
mov
mov
pop
dec
xlat
enter
test
push
dec
outsb
pop
push
jae
jne
cmp
les
and
adc
mov
or
das
inc
cmp
jmp
fldt
push
lods
nop
fimuls
scas
jb
mov
inc
adc
cmc
int
cmpsl
jmp
lret
fs
push
shlb
inc
lcall
mov
clc
adc
sahf
adc
ret
rolb
enter
andl
cmc
inc
cmp
aas
or
xor
sub
dec
add
sahf
adc
movsl
dec
cmp
notl
add
cmp
jp
or
vpmaddwd
sbb
jae
and
lret
fsubrl
movsl
scas
lahf
adc
cli
pusha
mov
mov
fidivrl
lods
lea
idivb
or
sti
out
adc
and
lcall
repz
mov
push
shll
sbb
rcl
xlat
cld
dec
sub
cli
ficomps
cmp
jle
xor
sti
call
imul
fdivrs
sub
addr16
insl
ss
cmpsb
mov
into
or
pop
push
jns
mov
sub
sub
xor
rorb
jb
or
mov
push
fistpl
mov
aam
test
roll
and
aam
mov
add
fstpl
int
jnp
not
sub
push
pop
gs
push
mov
js
test
stc
lcall
roll
xchg
aam
jle
sbb
push
push
push
xor
xchg
jne
push
fwait
popa
shlb
pop
cmp
rclb
mov
mov
in
loopne
iret
movsl
jmp
adc
xor
cmp
sbb
clc
sub
imul
inc
push
add
outsl
imul
adc
cmpsb
push
push
push
test
xor
into
loop
and
jecxz
lock
aaa
xor
sbb
icebp
inc
mov
rcl
jecxz
dec
fcomp
aad
cmp
dec
xchg
cmp
mov
adc
xchg
jg
leave
std
iret
mov
sbb
test
orb
mov
pop
es
jae
pop
outsb
mull
movsb
pop
jnp
xchg
xor
cmp
in
cmp
inc
xchg
jo
mov
inc
hlt
or
clc
pop
ss
mov
mov
mov
pushf
daa
cwtl
decb
pushf
sarb
xor
lods
sub
mov
sub
cwtl
arpl
test
into
in
out
push
dec
mov
push
ljmp
mov
fcomps
in
sbb
inc
mov
inc
cmpsb
in
dec
jle
rolb
jmp
sub
mov
pop
dec
jns
push
jbe
incl
ret
ret
and
and
mov
adc
jo
jle
mov
aad
aas
fwait
add
adc
xor
in
sbb
mov
aaa
pop
in
jg
jo
lds
fcoml
pop
js
xor
jl
sbbb
cmp
jge
pop
pusha
dec
mov
mov
fiadds
push
cmp
push
sub
cmp
pushf
out
call
pop
sub
sbb
dec
rcll
cmp
push
push
lret
push
cmp
jg
shlb
out
jb
ljmp
int3
sbb
fisubl
inc
or
or
inc
add
test
inc
imul
insb
cli
shll
push
inc
pop
out
push
cld
test
outsl
fnstenv
arpl
push
xlat
xchg
dec
mov
inc
shlb
addr16
daa
and
jb
cld
icebp
ret
insb
mov
test
mov
add
inc
mov
inc
inc
shlb
adc
cld
into
faddl
movl
in
insl
push
cmc
dec
mov
cs
cmpsl
pushf
fwait
or
loope
and
lsl
rol
mov
push
mov
bnd
leave
enter
jb
rolb
popa
dec
mov
imul
xchg
gs
pop
jecxz
mov
je
mov
sbb
stc
xchg
aad
jmp
mov
xchg
push
clc
xchg
imul
sarb
fwait
xlat
mov
pop
xor
add
and
aas
mov
bound
pop
cmpsb
addr16
xchg
jg
mov
inc
jp
arpl
or
imul
out
adc
orb
cmp
mov
loopne
and
push
or
and
stos
int
inc
nop
push
popf
xor
out
sbb
cmpsl
pop
jno
fidivs
hlt
aad
sub
xlat
xabort
mov
cmc
push
stos
mov
daa
push
repnz
and
sbbl
jne
outsl
test
push
nop
mov
sub
in
fimuls
jecxz
cwtl
les
mov
inc
or
lret
jo
lea
lods
push
pop
jle
mov
cltd
shl
mov
push
sub
dec
lods
aam
xchg
push
out
lahf
fistl
jge
cmp
mov
push
mov
inc
dec
push
push
movsl
jno
or
sub
out
lods
aam
cmp
subb
push
jnp
clc
filds
adc
xlat
mov
adc
cmpsl
and
pop
xchg
sbb
stos
jl
out
jbe
jne
outsl
jg
mov
mov
decb
xor
mov
shlb
xchg
jno
cltd
sti
cld
add
pop
loope
out
test
les
repnz
data16
jp
std
lea
lea
incl
repz
lods
cwtl
dec
iret
mov
dec
dec
jbe
push
jp
dec
enter
push
js
pop
push
rcrl
pop
jp
leave
fisttps
es
jp
fwait
mov
stos
add
dec
sbb
and
fs
jg
loop
sub
out
inc
cmpsb
mov
pop
xchg
test
sbb
ret
nop
stos
std
pop
mov
pop
lret
mov
and
and
cmpsl
fcoml
decb
ret
jne
jmp
dec
lea
push
jmp
fimull
nop
js
sub
inc
js
insl
je
cmpsl
pop
popa
adc
push
movsl
fimull
xchg
mov
cmpb
pop
dec
or
or
push
xchg
xor
xor
mov
sahf
aaa
and
dec
int
pop
jg
xchg
clc
pop
insl
lea
sub
icebp
in
fldt
sahf
lret
fs
sbb
and
jo
mov
push
imul
add
divb
pop
repz
gs
insb
sbb
jo
aad
pop
sub
cmp
and
iret
or
icebp
add
mov
test
xchg
lock
outsb
sti
lcall
das
mov
mov
sub
mov
ljmp
pop
dec
sbb
movsb
lock
call
mov
mov
je
cmp
mov
xchg
outsl
lret
jg
ja
lock
dec
xchg
or
cmc
cli
cltd
fidivrl
push
add
ja
add
jmp
mov
pop
adc
sub
mov
push
jne
out
mov
clc
push
pop
out
mov
int3
scas
dec
in
popf
out
lahf
mov
push
or
negb
stos
pop
dec
imulb
cs
or
dec
cltd
cmp
mov
adcb
lret
mov
testl
adc
push
fistpll
cwtl
cwtl
insl
out
jmp
daa
nop
rcll
push
cld
push
out
ficomps
or
jnp
jbe,pn
gs
lret
loop
cwtl
ljmp
mov
fs
enter
xor
insb
jmp
sahf
nop
or
sbb
or
ret
pushf
xor
push
mov
int
shll
test
push
es
mov
cmp
dec
mov
and
pusha
xor
fistpll
jge
call
xchg
popa
loopne
out
sub
sahf
ja
repz
sbb
pop
and
xchg
and
xchg
sub
or
dec
push
cltd
and
enter
sbb
imul
out
push
sub
fistpll
inc
pop
push
cmc
fsub
dec
push
aam
sti
out
nop
push
pop
pop
pop
sub
popa
xor
incl
pop
fwait
pop
xchg
xchg
or
jne
out
or
pusha
adc
pusha
sbb
mov
dec
scas
pop
imul
sahf
insl
mov
pop
arpl
add
add
scas
jbe
lret
push
xchg
xchg
mov
xchg
pop
mov
ljmp
jb
adc
out
mov
xor
fiaddl
push
push
std
pop
adc
dec
jae
daa
les
pop
mov
or
pop
scas
inc
adc
xchg
mov
popf
std
sbb
or
imul
and
shl
push
cmp
enter
mov
and
je
sub
std
stos
inc
int
mov
lahf
lods
dec
mov
xchg
dec
movsb
in
inc
inc
int
or
insl
inc
lock
mov
aam
sahf
mov
pop
fldl
cwtl
stos
cmp
sub
mov
pop
xor
arpl
inc
mov
and
push
mov
adc
arpl
ret
imul
mov
push
pop
ret
leave
cltd
mov
push
add
xlat
aad
xchg
dec
rol
mov
or
arpl
cld
mov
jmp
jle
mov
mov
test
sub
cmp
int
fildll
xchg
das
shr
jmp
pop
or
mov
pop
adc
push
xchg
or
ret
nop
fistl
xor
int
cltd
sti
fildl
mov
push
lods
fs
inc
and
pop
jo
push
cli
rol
not
add
out
call
ja
insl
or
add
sub
fs
jmp
inc
mov
cmpb
cmpsb
mov
stos
cmp
mov
xor
pop
out
outsl
nop
or
pop
dec
lods
mov
mov
adc
pop
and
dec
fisttpll
jae
jg
lcall
mov
dec
push
aaa
pop
aam
adc
and
in
mov
add
inc
int3
sbb
xor
rorl
lock
lea
mov
pop
jbe
mov
out
ret
imul
test
dec
xchg
and
js
icebp
and
jno
pop
pop
call
xorb
int
aam
js
pop
scas
dec
pop
fmul
push
push
sbb
imul
mov
sub
add
movsw
xchg
lods
jp
in
mov
jle
pop
in
cmc
stos
int3
or
sbb
push
jb
push
sub
aad
pop
jl
mov
jae
jl
mov
movsb
mov
and
jmp
in
pop
fs
repz
cmp
jg
mov
dec
insb
ficomps
std
iret
dec
jmp
adc
fsub
lcall
adc
adc
mov
mov
aas
or
sbb
not
xor
fdivrs
stos
mov
xor
dec
fcoml
and
or
hlt
test
ficoms
mov
sub
test
stos
cmc
outsb
sub
ret
sbb
push
into
mov
aad
sarl
insb
adc
lahf
inc
bound
and
xchg
jge
push
and
mov
out
jge
sar
sub
sti
and
lahf
ret
inc
and
push
adc
dec
dec
jp
imul
lret
fnsave
cmp
add
ja
adc
and
scas
xchg
sbb
cmp
jl
fdivs
test
nop
add
mov
jge
mov
addl
mov
adcl
cmp
dec
out
lret
call
outsb
fcomps
lahf
inc
repz
adc
inc
sbb
imul
movb
adc
outsb
fisubs
and
enter
mov
cltd
and
mov
fimuls
enter
lret
cmp
cmpsl
daa
addr16
xor
aaa
int
xor
out
cltd
push
mov
xor
push
mov
aam
inc
pop
cs
cmp
xor
test
adc
fisubrs
sbb
inc
jle
and
cs
ret
fldl
clc
lret
or
out
arpl
lret
ss
mov
lcall
fwait
xchg
aam
dec
test
clc
lahf
sbb
xchg
xchg
out
xor
mov
data16
aaa
stos
imul
add
mov
or
pop
nop
jl
pop
shlb
imul
arpl
add
ds
jo
std
adc
jns
mov
gs
call
cli
fcmovnb
loop
movsb
fwait
cmp
mov
jmp
pop
or
xchg
push
push
sub
jl
sub
out
jecxz
test
mov
jmp
pop
je
cmc
sbb
add
clc
lock
xor
mov
mov
cs
fcmovbe
in
enter
sarb
gs
or
or
shlb
pop
pop
or
fnstsw
fmull
call
fsts
sbb
jp
mov
pusha
or
jg
jns
sub
jae
inc
sbb
mov
lahf
push
inc
mov
repz
shl
insb
add
dec
or
in
mov
xchg
outsl
or
lods
inc
scas
cltd
cmp
xchg
dec
insl
pop
or
mov
inc
enter
jge
pop
inc
aaa
mov
push
aaa
test
sbb
mov
xchg
jle
jb
scas
sbb
mov
dec
sub
out
jmp
and
or
jle
adcl
cmpl
mov
adc
lret
jo
sub
in
shrl
cmp
int
lcall
das
jle
dec
scas
mov
outsl
fldenv
mov
mov
mov
or
in
jmp
hlt
push
and
xor
inc
popf
popf
shlb
outsb
pop
aad
es
mov
mov
lds
adc
push
adc
fwait
inc
es
pop
shrb
and
std
das
pop
push
mov
imul
and
jmp
mov
mov
icebp
cmp
ret
jae
sub
stc
mov
push
jg
jl
mov
mov
cmp
push
xchg
das
repnz
adc
iret
adc
pop
mov
sub
lea
jbe
mov
aam
sub
mov
and
dec
iret
and
cmpsl
lret
adc
adc
cmpsb
inc
pop
lea
mov
and
cmp
out
stos
test
lret
cmpsb
and
mov
adc
dec
xchg
mov
mov
jl
outsb
mov
or
ds
in
cwtl
mov
jnp
scas
pop
pusha
pop
pushf
rol
lret
jmp
or
sbb
data16
sahf
int
nop
movsl
fs
jae
out
xor
and
jns
sub
pushf
jae
adc
inc
mov
mov
jle
jb
or
mov
cltd
and
push
popf
mov
loop
mov
cmp
std
xchg
cmpsl
xchg
rorl
scas
out
add
jle
lds
push
mov
lret
xchg
and
or
or
jbe
flds
jne
rcll
loope
adc
mov
dec
mov
and
xchg
dec
bnd
sbb
sbb
test
out
in
or
imul
loop
popf
into
mov
repz
pop
or
aam
mov
push
cmp
mov
mov
pop
mov
mulb
imul
mov
sub
mov
cs
cmc
negl
xor
cmc
add
xor
push
insb
jnp
movsb
adc
je
cld
repz
fsubs
stos
ret
sub
arpl
mov
xchg
dec
add
xchg
jbe
or
stos
loopne
xchg
movsb
aas
int3
push
mov
stos
sahf
cwtl
jo
and
inc
out
push
inc
and
out
es
js
imul
or
das
mov
mov
dec
sbb
add
cmp
or
push
scas
adc
data16
popl
test
pop
or
jl
cmp
test
sar
sbb
popa
sub
push
arpl
add
lock
into
fwait
jo
pop
fildll
ret
inc
mov
dec
mov
mov
push
imul
mov
nop
int3
add
cmovne
or
daa
pusha
out
jmp
subl
mov
adc
fwait
sub
and
sub
movsb
js
xchg
push
imul
mov
push
arpl
popa
sbb
pop
inc
xchg
jno
mov
cmp
adc
xor
out
jp
and
xchg
fildll
rcrl
inc
js
dec
or
cltd
or
shrl
insb
cmpsl
icebp
sbb
or
xor
sbb
rep
stos
inc
dec
cmp
addr16
data16
clc
add
ss
negl
or
jle
pushf
push
in
cmp
and
shlb
pop
xchg
sub
adc
cmc
xor
outsb
cwtl
test
inc
into
pop
push
sub
pop
xchg
ja
lds
push
mov
mov
arpl
mov
sub
rcrl
and
xchg
imul
pop
xlat
jp
dec
dec
adc
or
int3
clc
repnz
fs
inc
int
ficoml
mov
aaa
mov
push
jbe
jne
fstpl
dec
insb
addr16
lret
dec
lea
and
add
sub
mov
daa
dec
sub
jnp
jle
repz
jbe
int
inc
jae
test
dec
call
and
lret
push
and
lret
and
inc
xorl
jbe
std
popf
push
fxam
loop
sbbb
dec
data16
jnp
sbb
jmp
mov
imull
xor
clc
iret
dec
gs
es
fimuls
sub
mov
ds
jl
loop
fucom
rorl
fidivs
xchg
aas
jns
jae
test
mov
sbb
in
inc
incb
andl
mov
mull
test
std
xchg
sbb
pop
cltd
in
jle
mov
in
jae
and
push
sbb
sarb
sbb
push
popa
movl
es
adc
mov
xchg
ret
stc
ja
sbb
add
sbb
ljmp
mov
stos
sahf
ja
pusha
mov
cmp
adc
aam
aad
movsb
dec
test
stos
push
push
test
xor
int3
adc
mov
test
pusha
sti
pop
push
pusha
mov
dec
jg
pop
sti
aam
ss
sbb
movsl
aaa
scas
call
mov
sbb
mov
es
pop
dec
stc
jmp
jnp
xlat
mov
jae
fidivl
and
xchg
filds
add
sbb
divb
iret
inc
out
fadds
mov
mov
nop
aaa
out
into
mov
imul
jae
mov
mov
xchg
daa
inc
push
icebp
stc
cmc
dec
pop
sub
out
sub
pop
in
jb
xchg
mov
movsl
pusha
cli
mov
xchg
rolb
lahf
or
fmuls
out
pop
pop
or
mov
sarb
daa
std
mov
lahf
cmc
mov
jmp
pop
sbb
dec
jmp
cmpsl
adc
test
mov
rep
ret
loop,pn
test
and
loop
inc
xorb
fisubl
prefetcht1
cmp
jae
mov
das
cmp
cmp
mov
adc
call
out
inc
int3
inc
or
adc
dec
pop
pop
xor
add
inc
loopne
dec
test
mov
inc
pop
iret
repnz
mov
jno
icebp
jp
call
insw
das
test
mov
or
addr16
mov
repnz
lds
aam
xor
popa
xor
xlat
jnp
mov
pop
int
pop
sbb
loope
or
xchg
pop
adc
lods
inc
or
out
test
cmc
nop
out
and
cmpsb
xor
push
shl
sarb
sti
mov
mov
add
mov
cmc
subl
test
es
popa
jl
mov
jmp
jne
and
dec
xchg
dec
xchg
xor
mov
mov
int
mov
add
mov
mov
test
into
mov
cld
mov
mov
js
in
mov
mov
clc
out
test
sub
and
or
fstp
push
in
xchg
mov
xchg
adc
enter
jmp
cs
xchg
insl
int
ds
iret
fsts
stos
dec
into
xchg
push
mov
rcrl
xchg
and
dec
xor
mov
cmp
jne
orl
xchg
adc
push
iret
inc
jl
imul
xchg
push
fs
jo
xchg
insb
mov
test
mov
sub
nop
push
inc
mov
lods
dec
inc
dec
arpl
sar
sbb
mov
movsl
pop
adc
scas
and
add
arpl
cmpsl
sbb
adc
and
jl
cmp
and
out
and
sub
mov
pop
js
dec
rorb
popa
int3
jne
stos
add
xchg
ss
fidivrl
sbb
and
lahf
es
test
cld
popa
xor
dec
stos
inc
fwait
outsb
cmp
es
fidivrs
mov
js
fists
loop
je
push
cli
cs
test
and
mov
pop
sahf
lds
inc
mov
add
mov
push
mov
cmpb
pop
inc
xor
dec
dec
fwait
xchg
mov
inc
icebp
test
lret
bound
out
cmp
js
inc
push
dec
jbe
cli
push
xchg
rolb
pushf
movl
out
add
mov
ljmp
int3
aad
data16
shl
fs
sahf
mov
sbb
negl
mov
inc
sub
or
movsl
loopne
aam
push
xor
out
cltd
add
dec
pop
testb
out
in
mov
push
mov
jmp
mov
pushf
aaa
pop
dec
inc
adc
scas
in
mov
idivl
mov
aam
jge
int
shll
mull
in
std
push
mov
aam
popl
sbb
scas
pop
jge
imul
jp
push
movsl
mov
in
or
aad
dec
bound
mov
in
sub
xor
enter
cmc
aaa
dec
cmp
sti
gs
mov
pop
es
stc
adc
test
cmp
mov
push
lret
pushl
cld
and
aam
dec
popa
dec
imul
gs
mov
mov
jecxz
fsubs
xor
sbb
rclb
mov
fnstenv
addr16
cwtl
pop
or
fdivrl
add
cmp
repz
fmuls
mov
ret
dec
push
pop
sub
inc
pop
xchg
aas
lock
mov
in
cli
dec
stos
shlb
movsl
fstps
repnz
js
cmp
addb
fistpll
jbe
push
ret
inc
cmp
fiaddl
sbb
and
mov
out
push
and
mov
dec
mov
sbb
pop
les
add
jmp
inc
pop
or
out
pop
mov
loop
iret
xchg
add
pop
inc
iret
lods
aad
shr
lret
cld
out
out
aas
xchg
adc
jae
pushf
add
lahf
clc
and
repz
lea
pop
imul
push
hlt
repnz
mov
arpl
push
sbb
push
and
add
dec
xchg
xchg
push
insb
push
out
cltd
sbb
sbb
mov
pop
cmpsl
adc
outsl
or
add
test
mov
dec
xchg
and
jo
add
popf
sub
xchg
lahf
push
xchg
out
pop
push
add
ja
jo
into
pop
int3
pop
test
leave
inc
bound
arpl
fidivl
imul
xor
stc
int3
jno
xchg
add
adc
mov
fcmovnbe
mov
dec
push
lcall
sti
sti
pop
push
inc
xchg
stos
push
add
xor
hlt
ds
out
pop
lret
cmc
or
pop
adc
loopne
push
aas
popa
mov
stos
iret
mov
test
fdivl
fimuls
mov
cmpsb
pop
std
pop
testl
pusha
lret
shrb
repz
add
inc
ss
sti
in
out
scas
pop
shr
xchg
mov
daa
push
or
push
xchg
xchg
mov
subb
push
mov
mov
daa
mov
cmp
fildll
lcall
ret
pusha
imul
mov
test
ret
jns
pusha
daa
pop
movsb
jmp
xchg
fldcw
and
arpl
je
sahf
push
popl
add
int
movsl
jnp
adc
dec
cltd
aad
in
dec
xchg
add
adc
mov
test
xchg
push
movzwl
adc
lret
sbb
fs
pop
pop
bound
mov
imulb
pop
sahf
shlb
and
repnz
mov
iret
xchg
xor
fmuls
sbb
add
test
scas
and
cli
xlat
cmpsb
lods
xchg
call
mov
push
pop
fsubs
mov
sub
or
filds
push
enter
in
in
mov
inc
lahf
xchg
ror
mov
mov
fcompl
lahf
push
sub
mov
out
push
jno
or
lcall
pusha
fs
mov
adc
leave
data16
mov
and
push
sbb
subb
fwait
arpl
or
adcl
cmpb
es
fstpt
push
inc
adc
mov
cmpsl
iret
pushf
rcrl
gs
jp
mov
insb
in
jp
adc
clc
jae
push
mov
inc
test
push
lahf
enter
insb
pop
movsb
testl
jp
mov
jp
and
bswap
sbb
mov
jmp
call
and
fs
and
int3
or
outsb
push
sub
cmpsl
cld
imul
fwait
jae
add
pusha
in
in
addl
xchg
fldenv
pop
js
test
jbe
adc
push
xchg
push
ror
push
repnz
scas
lods
sbb
sbb
ljmp
fcmovbe
sbb
cwtl
out
xchg
or
mov
cmpsb
dec
cltd
jo
lcall
fbld
outsl
mov
xchg
sub
popf
daa
fldl
incb
inc
jae
push
jno
jno
sbb
jl
bound
imul
xchg
nop
clc
outsl
add
jg
imul
mov
imul
fucomi
sbb
iret
cwtl
xchg
and
jae
jecxz
or
mov
roll
out
xor
mov
xchg
xor
outsb
test
fsubrp
mov
cli
add
sbbb
xchg
mov
aad
gs
cmp
rol
mov
xchg
pop
add
loopne
sbb
sbb
cli
mov
xlat
sbb
push
or
push
adc
cmp
cmp
test
jnp
mov
push
and
iret
jns
xorb
xor
push
icebp
sbb
cmp
insl
jge
int
xchg
insb
insb
lcall
inc
in
xor
pushl
add
jmp
adc
cmp
dec
ljmp
movsl
movsb
jmp
das
cmp
cwtl
cmp
jp
scas
fmuls
scas
lgs
adc
sbb
ret
icebp
mov
scas
push
jbe
dec
add
je
jecxz
outsb
loop
cmc
xor
or
and
mov
movsb
mov
mov
sbbb
pop
andb
call
adc
shrb
lea
jmp
stos
jl
sub
mov
push
jl
lods
repnz
lret
push
or
cld
lods
cltd
sub
push
mov
leave
push
jns
stc
jne
mov
cld
aaa
mov
out
cs
loope
jnp
jbe
sub
inc
mov
pusha
mov
add
pop
movsl
int3
cmp
and
dec
aad
ja
pop
fwait
cmpl
jb
lcall
mov
jge
dec
mov
dec
jl
jnp
jmp
push
xor
insl
test
add
adc
popl
sarl
sbbb
movsl
fsts
and
cmp
sarl
lret
push
cld
jmp
lret
in
cmp
or
data16
xlat
sub
cmp
lret
jl
jmp
push
mov
jo
repnz
scas
pop
jns
jge
mov
pusha
les
jae
jl
mov
mov
add
daa
jo
mov
mov
sbb
dec
jl
cmp
into
gs
and
dec
insl
daa
cmp
or
jge
mov
and
and
push
push
mov
mov
lds
decl
fdivrs
mov
testb
stos
cmp
pop
cmp
enter
and
mov
lcall
mov
and
ja
cwtl
sub
jo
outsb
and
add
imul
push
pop
xchg
shrb
jp
mov
add
xchg
fsubl
add
jae
call
dec
outsl
scas
cmc
movsl
jecxz,pt
test
push
or
jo
sub
add
js
sub
stos
nop
adc
lock
insb
loop
into
xor
dec
into
outsb
pusha
add
jmp
nop
sbbb
xchg
xor
cltd
push
out
jae
sub
mov
bound
nop
inc
call
xchg
xor
jl
cmpsl
gs
shlb
repz
jl
cli
xchg
jbe
test
mov
sbb
inc
pop
pusha
sahf
aas
in
dec
fnsave
sub
subl
push
inc
dec
push
add
push
pop
xlat
aaa
cmp
imul
inc
ja
xlat
loope
inc
pop
add
pop
ja
xchg
stos
jge
jae
sbb
aam
dec
shlb
in
mov
cmp
xchg
insb
fisttpll
cs
lret
cmpsl
and
aam
insb
lods
or
pop
pop
dec
cmp
push
push
ficoml
ret
mov
ljmp
aas
div
or
jae
enter
pop
mov
orl
pop
mov
btr
stos
daa
scas
adc
cmp
lahf
out
or
fucomip
ret
xor
mov
mov
mov
inc
leave
ds
xchg
and
xchg
repz
movsl
pop
in
hlt
dec
jno
fisubrs
jns
ret
or
popa
test
loop
aad
ljmp
into
sbb
fists
xchg
pop
cmova
repz
xor
call
and
sub
cmp
xor
loopne
dec
xchg
inc
popa
dec
or
out
mov
roll
popa
icebp
sbb
or
pop
xchg
sbb
mov
mov
int
pop
jo
sub
movsb
jle
inc
dec
and
popf
clc
jno
xlat
fidivl
aad
jle
push
xlat
and
ss
or
mov
pusha
mov
imul
cmp
or
aad
cmp
mov
das
sub
adc
fmuls
cli
mov
push
xchg
or
cmpsl
fadds
lret
jge
push
cmpsb
bound
test
push
push
push
inc
cltd
xor
adc
jg
shlb
inc
iret
push
cmp
cmp
ljmp
lods
cs
cli
lock
lods
adc
and
sub
mov
aam
int3
inc
sub
push
mov
scas
aad
call
jmp
call
cwtl
jge
shlb
xchg
fs
dec
fimuls
inc
lcall
mov
loop
and
mov
idivl
fsub
fldl
jne
jns
bswap
or
sub
cmc
movsb
out
and
adc
cmc
and
std
imul
xchg
cmpsb
insb
jno
add
cmc
push
mov
mov
xchg
mov
sti
enter
or
jg
rcrl
loopne
das
mov
lock
shlb
push
aas
in
dec
jb
punpckldq
test
inc
add
mov
add
pop
stos
in
cwtl
ds
pusha
shlb
sbb
in
or
insb
pop
imul
xlat
inc
cmp
leave
xor
out
test
pop
jne
mov
mov
sbb
roll
mov
dec
sub
push
add
cmpsb
cmpsb
mov
adc
nop
jns
push
lahf
imull
add
add
pop
jmp
ljmp
and
pop
and
popf
pop
loopne
mov
adc
pop
jno
jae
pop
data16
add
dec
pop
sub
jl
jl
sbb
mov
push
xchg
lock
test
or
mov
mov
adc
mov
int3
xchg
inc
cld
and
xor
cmp
ficoms
or
jns
pushf
sub
and
xor
sahf
cmp
sub
pushl
jbe
cmp
and
mov
fisubrs
jbe
mov
dec
dec
enter
or
cmpsl
pop
sbb
shrl
lea
push
outsb
scas
dec
fldenv
icebp
repnz
loopne
rolb
das
adc
mov
ds
lods
sbb
das
and
xchg
mov
adc
cmpsl
adc
inc
push
test
lahf
mov
cmpsl
call
and
xor
pop
pushf
push
xchg
rclb
outsb
inc
inc
lret
pop
mov
sahf
test
decl
or
lcall
dec
addr16
fistps
xor
roll
mov
push
roll
cmc
ja
in
test
pop
je
ret
pxor
out
rorb
in
push
mov
mov
pushf
and
flds
xchg
daa
inc
cmpsb
call
pop
jecxz
addl
mov
seto
xor
sti
xor
mov
mov
jbe
mov
jb
and
and
insl
mov
sbb
jle
out
in
fucomp
std
sbb
scas
push
add
sub
or
stos
pop
push
ja
sarb
dec
hlt
inc
xchg
add
push
sbb
and
aam
hlt
popf
imul
mov
std
cmpsb
inc
sbb
je
mov
lods
mov
in
inc
es
out
mov
mov
outsl
pop
xchg
ret
xchg
in
add
mov
xchg
aaa
pushf
inc
mov
daa
xchg
xor
std
std
lret
mov
jl
inc
aam
mov
sti
mov
sbb
mov
ljmp
stos
aam
fildl
dec
pop
mov
test
lret
adc
sbb
negb
jno
pop
pop
add
sbbl
fwait
and
or
repnz
mov
les
sbb
add
popa
insb
sub
sbb
test
mov
aad
and
pop
push
xor
dec
or
mov
jne
das
push
add
clc
add
test
push
add
addr16
jo
testb
xor
mov
pop
mov
push
pop
outsb
add
adc
push
cmp
pushf
xor
or
add
push
dec
and
shlb
adc
rolb
push
and
mov
mov
loopne
mov
ljmp
in
mov
lahf
cmp
cltd
xchg
and
jne
push
add
lds
adc
divb
cwtl
cmpsl
inc
push
insl
adc
scas
loop
push
xchg
jle
jne
and
fcomi
movsl
or
mov
pop
enter
movsl
mov
ret
orb
test
sub
aaa
cmp
mov
sbb
lods
or
push
ss
add
push
nop
xchg
and
sbb
pop
addl
loop
loop
push
ret
ret
inc
enter
sbb
ficomps
inc
xor
dec
int3
push
mov
inc
fidivrs
jmp
push
mov
fwait
nop
lods
mov
dec
mov
add
push
icebp
mov
and
cltd
and
mov
sahf
cld
jp
sbb
arpl
stos
ss
adc
xor
cmpl
xorl
in
cwtl
mov
cld
mov
jmp
mov
push
dec
dec
mov
dec
testb
jnp
incb
lret
jge
pop
mov
dec
and
fsubs
addr16
xchg
jbe
es
sub
std
repz
push
hlt
push
xor
jo
push
lock
push
shlb
loop
xchg
jo
in
rcl
xchg
fnsave
cld
lock
and
ret
out
cmp
ja
out
lret
in
sahf
sub
fstps
sti
adc
imul
in
add
lock
jle
add
pop
inc
clc
jecxz
add
mov
jae
hlt
je
mov
mov
and
addr16
mov
sub
and
xchg
or
add
mov
push
jmp
xor
and
xor
sub
nop
adc
xor
scas
test
sub
or
mov
or
pop
jb
lcall
push
mov
jge
sub
ret
sbb
ret
fildll
fistpll
aaa
and
xor
mov
scas
lcall
add
ljmp
movsb
cmp
into
test
daa
sub
stc
nop
into
or
mul
jg
addr16
fcoms
dec
pop
push
in
aaa
cmpsl
dec
and
mov
shl
cmc
inc
mov
push
mov
ds
int
stos
jle
aas
imul
mov
dec
stos
and
pop
popf
mov
dec
pop
ljmp
add
lods
out
jmp
loop
ss
stc
shrl
in
inc
xchg
mov
lcall
sbbb
jl
nop
sbb
and
out
arpl
jp
mov
insl
ret
lods
push
fs
jp
fdivrs
sbb
ljmp
cmpsl
fcom
mov
cld
pop
pushf
sti
sbb
and
mov
inc
or
and
mov
shlb
add
inc
inc
outsl
sbb
push
mov
andb
aam
xor
jno
sub
push
pop
lret
mov
loop
in
xchg
add
out
cmp
jle
mov
sbb
stos
repz
inc
lods
mov
pop
jp
leave
add
mov
outsb
nop
xor
cmc
pop
cltd
jns
xchg
xchg
pushf
push
mov
inc
ljmp
das
movsb
push
xor
stos
in
push
dec
in
lcall
and
push
mov
lahf
fcoms
pusha
xchg
xorb
repnz
andb
cmp
fsubrp
or
push
cli
pop
add
dec
pop
push
int3
jg
es
push
fcmovb
xor
xchg
cmpsl
insw
adc
pusha
in
inc
xorb
insl
lret
enter
push
xchg
movsl
cmp
mov
or
sub
cmp
mov
or
aas
jnp
sbb
push
test
lahf
loope
cmp
and
mov
jo
pop
stc
xor
orl
lahf
jne
mov
xor
aad
dec
dec
orl
pop
data16
jno
imul
stos
sbb
cwtl
iret
dec
cmpsb
imul
int3
cmp
scas
pop
ret
sub
int3
jecxz
leave
scas
cmpsb
xchg
jg
sub
mov
mov
in
mov
or
loopne
xchg
bound
add
mov
inc
jb
enter
ret
int
std
fldenv
out
or
or
push
sub
rcrl
sub
or
inc
rcrl
push
shrb
inc
mov
shlb
rolb
xchg
inc
pop
jne
add
xchg
imul
mov
sbb
jl
jmp
dec
cld
cmp
test
cwtl
cwtl
movsb
clc
clc
notb
int
andb
mov
mov
sub
mov
aam
cmp
sti
and
enter
ficomps
out
push
inc
insb
cli
adc
pusha
stos
cmp
mov
inc
add
push
mov
aas
fwait
test
ds
icebp
mov
inc
mov
inc
push
in
into
mov
imul
dec
push
divb
shll
loope
addr16
int
push
ljmp
pop
jg
dec
or
shrb
pop
popa
and
test
cld
jno
cli
fmuls
push
inc
mov
fwait
out
imul
jo
mul
jo
push
mov
cltd
mov
adcb
outsl
in
in
pop
push
into
fimuls
ret
or
bound
jbe
and
push
shll
test
fs
cs
icebp
bound
pushl
imul
roll
mov
mov
rclb
sub
add
xor
inc
int3
sub
inc
shlb
cmpsl
and
pusha
dec
and
cmc
mov
sub
pop
adc
inc
lods
ret
push
pushf
imul
hlt
sub
xchg
jbe
sub
inc
sbb
je
ret
std
in
push
push
and
int
xor
cwtl
mov
fdiv
movsb
sub
dec
in
xor
push
pop
into
adc
add
inc
sarb
mov
and
xor
stc
jge
mov
imul
jg
push
aam
jp
mov
aad
ds
sub
add
jmp
dec
fstl
es
pop
call
pop
xor
pop
lods
nop
fdivs
das
and
adc
sbb
mov
mov
cmp
movsl
incl
inc
das
jbe
outsl
sbb
ss
push
pop
pop
cmp
outsl
je
jb
test
jecxz
pop
addr16
popa
fsubp
sahf
sbb
les
mov
nop
mov
sbb
ror
std
jmp
mov
xchg
lret
int3
jmp
push
in
mov
xor
jns
addr16
cltd
mov
movsl
jmp
aam
pop
pop
adc
mov
mov
adc
and
in
int3
jle
cli
xchg
fstps
scas
jmp
adc
mov
xchg
pop
cwtl
inc
pop
push
push
int3
mov
add
or
ret
pop
xor
cmp
movsl
std
sahf
cmc
js
int
cli
push
sub
scas
adc
lods
scas
add
or
gs
aas
mov
xchg
ss
mov
push
mov
pop
enterw
in
cmpsl
mov
pop
jb
mov
in
aas
xchg
cmp
lods
das
js
and
mov
jbe
mov
or
add
pushf
jns
adc
cli
roll
popa
test
adc
pop
fiadds
mov
mov
sub
dec
add
cld
mov
ljmp
push
ljmp
mov
shlb
dec
xor
jns
sub
sbbb
xor
es
mov
loope
and
pop
pop
pop
ficomps
je
insb
in
mov
enter
add
mov
and
inc
jo
jnp
mov
lea
clc
shrl
mov
jns
jl
xor
hlt
js
jns
cmc
out
xor
mov
sahf
shll
mov
jmp
aad
outsb
add
cmp
testl
lret
fimuls
pop
mov
and
shrb
fwait
jp
jmp
sbb
sub
ss
in
mov
leave
cli
fs
imul
add
sbb
mov
icebp
add
arpl
mov
clc
out
cli
and
mov
sbb
mov
mov
fs
mov
jnp
mov
fcoms
cld
cltd
mov
sti
push
shll
sbb
xor
cwtl
lahf
xchg
pop
stc
sbb
pop
movsl
scas
outsb
and
inc
dec
loop
lret
cs
cmpsl
out
ds
mov
and
in
insl
xchg
shrb
jge
or
xor
inc
sub
int
in
inc
push
imul
mov
xchg
jmp
scas
jae
or
fs
idivb
ja
jns
xlat
pop
add
bound
ss
sbb
sbbl
pop
fidivl
cmp
cwtl
sub
push
jmp
aad
std
insb
push
cli
dec
sub
nop
sub
lods
ja
xchg
cli
ja
xlat
mov
pop
jle
mov
pop
rolb
js
ljmp
test
fnstsw
jns
mov
pop
aas
lds
mov
movsl
gs
xchg
xchg
inc
and
ds
lds
or
dec
lods
mov
mov
into
in
push
nop
pop
or
je
sub
sar
adc
out
jle
jg
mov
jl
pop
js
push
jecxz
xlat
pop
pusha
dec
ljmp
dec
repnz
pop
loopne
push
loope
es
mov
std
out
add
pop
sub
mov
adc
jo
pop
fwait
cltd
xchg
cmp
mov
ja
cmpsl
jecxz
and
cwtl
scas
loope
mov
mov
icebp
idivb
mov
fisttps
shll
push
fisubl
mov
dec
divl
mov
mov
ret
arpl
repnz
sub
mov
ret
lahf
xor
and
pop
xchg
mov
mov
sub
jmpw
lcall
inc
sub
sbb
sub
das
clc
jnp
inc
xor
xor
xlat
mov
push
adc
fsts
stos
shl
mov
pop
inc
insb
mov
adc
ja
out
insl
mov
movb
xchg
fcmovne
jg
enter
sbb
xor
push
fidivrl
fisubs
sub
jo
popf
sti
in
ds
xchg
insl
jle
jne
xchg
xlat
shlb
inc
insl
sbb
inc
and
clc
lock
dec
int3
xchg
mov
imul
dec
mov
cmp
dec
xlat
imul
xor
mov
mov
mov
pop
xor
pop
push
mov
ret
mov
push
cmp
jl
aas
in
test
cmpsb
and
movsl
dec
movsl
cs
jne
mov
in
sub
enter
jg
int3
mov
sub
jbe
inc
rcrl
clc
cs
or
mov
jne
ja
jae
inc
xchg
clc
xchg
orb
cld
jns
xor
dec
adc
mov
jo
xchg
mov
dec
xor
xchg
test
cmpsb
test
or
fidivl
cmp
cmp
push
inc
fiadds
xor
adc
push
mov
or
sbb
loope
pop
rorl
iret
movsb
mov
mov
cmp
jae
popa
test
pusha
jae
pop
push
mov
mov
inc
lods
push
popa
pop
cli
add
cmp
stc
mov
pop
and
daa
movl
int
mov
ja
cmp
cmp
sarl
insb
decb
lds
jecxz
cltd
inc
sahf
fwait
push
subb
sbb
inc
inc
push
pop
mov
push
movsb
pop
lock
addl
push
sahf
fiadds
aas
push
addl
pop
stos
pop
std
mov
mov
push
add
movsl
mov
xor
out
sbbb
add
int
into
sarl
add
loope
or
jmp
xor
es
xchg
fs
les
lret
out
mov
push
dec
mov
sti
push
sbb
cltd
pop
shrl
rolb
xchg
jecxz
mov
ljmp
shlb
iret
int
bound
cmc
fstpt
push
dec
imul
or
scas
sti
push
inc
sub
xchg
in
push
push
dec
mov
hlt
mov
scas
test
clc
push
mov
icebp
insl
insl
cmpsb
movl
inc
adc
mov
enter
jo
jmp
test
scas
jge
icebp
stos
add
jbe
cmpsl
cli
adc
mov
sbb
rcll
or
cmc
in
repz
std
lods
movsl
pop
fxch
notl
add
ret
out
adc
fildll
dec
sbb
pop
lcall
push
mov
jge
cltd
dec
mov
xor
jb
pusha
cmc
lock
mov
and
adc
stos
movsl
xchg
xchg
cmp
adcb
pop
shll
jnp
inc
insb
mov
fstpt
aad
mov
xchg
or
ret
aad
xor
enter
lods
shr
xor
js
pusha
adc
fwait
popf
adc
xadd
faddl
mov
sbb
fmul
pop
jle
pop
jno
idivl
pop
ret
imul
iret
jbe
popa
mov
add
loopne
pop
push
push
jle
push
and
movsb
jmp
nop
mov
inc
jb
test
inc
sub
hlt
jl
fbld
ds
mov
test
jle
sarb
inc
fs
or
pushf
js
adc
dec
pop
fisubrl
sbb
adc
mov
in
push
cmpsb
lock
in
lahf
dec
js
mov
push
jmp
lret
push
jle
jl
outsb
or
mov
sbb
cld
clc
minps
out
stos
int3
cmc
sbb
inc
lahf
push
lea
lock
pop
outsl
pop
loopne
jle
add
and
xlat
mov
jmp
dec
fsubl
rcll
xchg
adc
push
arpl
cltd
dec
fisttpl
inc
shlb
mov
mov
lret
cwtl
sahf
jge
out
rcrl
out
mulb
loope
inc
add
pusha
add
cmp
xchg
test
jle
mov
pop
dec
mov
scas
xor
ja
mov
jnp
jecxz
sub
xchg
ja
add
and
imul
out
sbb
xlat
div
aam
jo
mov
stc
mov
cmc
mov
enter
int
dec
pushf
out
sub
loop
fdivrl
adc
insb
ret
or
mov
hlt
adc
test
insb
pusha
out
ljmp
xchg
pop
jbe
outsl
cmc
sub
insl
lea
add
mov
sbb
dec
add
or
and
mov
jp
jbe
not
xor
repnz
adc
dec
fdiv
pop
dec
arpl
or
movsb
mov
lret
lret
sub
push
mov
test
insb
mov
push
test
mov
xor
arpl
cmp
xor
xor
loopne
xor
mov
mov
or
pop
ret
jle
sbbb
and
pop
mov
hlt
aad
push
hlt
cmp
icebp
inc
add
sub
cmp
ds
mov
shrl
js
sbb
push
jecxz
dec
jno
jae
xchg
xchg
rcr
jle
adc
mov
outsb
pop
adc
push
ja
or
daa
shr
jnp
das
data16
js
xlat
mov
sub
outsb
add
fsubl
cld
subb
adc
rcrl
xor
xor
cwtl
js
imul
mov
inc
clc
xchg
stos
or
inc
jne
cwtl
jnp
imul
dec
fsubrp
je
shll
push
dec
lcall
jo
arpl
jb
rolb
fldt
lods
outsl
popa
shrl
das
inc
mov
sti
ret
stos
jp
in
stos
jbe
jbe
xchg
rorb
mov
into
fdiv
inc
xchg
pop
dec
rcll
ret
in
inc
push
cmp
dec
in
xor
subb
sub
lea
out
mov
mov
sbb
sbb
enter
out
mov
enter
mov
sbb
jge
add
cli
or
push
mov
dec
sub
jle
xchg
ds
or
fistpl
movsb
add
test
int3
dec
das
mov
stos
fisubl
or
push
test
add
rcr
jns
imul
mov
xchg
ret
mov
into
out
sub
xchg
pop
pop
xchg
hlt
mov
call
dec
mov
lret
inc
jecxz,pn
pop
jae
jns
jno
aaa
pusha
sbb
mov
lock
jns
loop
pop
cmp
sub
pushf
dec
pop
jno
push
mov
into
dec
in
mov
mov
xchg
mov
mov
jecxz
sub
adc
fldcw
in
sbb
shrl
and
push
je
push
xor
in
jmp
pop
or
cld
sbb
mov
inc
inc
push
insb
pop
mov
pusha
sbb
icebp
xlat
xor
or
lods
xorl
fdivs
out
pop
repz
out
xor
gs
push
fwait
sbb
pop
pop
outsb
std
mov
push
push
or
inc
push
mov
les
nop
jb
xchg
mov
add
shl
lods
imul
cmp
in
inc
decl
jb
lea
sahf
adc
repnz
sbbl
mov
and
cmp
movsl
lods
ja
imul
test
inc
push
inc
pop
mov
xor
and
sub
xchg
jns
repnz
bound
mov
adc
xor
inc
sbb
lock
inc
add
push
jg
insl
sbb
add
gs
pop
inc
cli
out
pusha
outsl
stos
and
push
mov
xlat
je
adc
push
dec
lds
dec
iret
sbb
mov
jle
or
test
stos
int3
dec
cmp
and
icebp
push
je
jge
fs
xchg
enter
das
dec
aas
rcll
dec
sub
shlb
xchg
outsl
dec
test
pop
andl
mov
jnp
jo
push
vmovq
inc
lods
fcoms
push
into
pop
rolb
rol
sub
aas
ret
cmc
dec
mov
test
call
loopne
and
popl
stc
pop
mov
out
outsb
adc
mov
gs
dec
mov
ljmp
dec
js
sbb
sbb
ljmp
or
in
adc
adc
iret
int
data16
test
or
jne
jecxz
mov
imul
sbb
adcl
roll
push
iret
push
int3
jno
cmp
mov
rorl
pop
test
mov
sti
push
mov
stos
pop
out
std
sbb
mov
push
subb
imul
jo
cmpsl
inc
xchg
jne
ljmp
sti
mov
imul
ror
cmp
in
inc
sbb
mov
jae
test
lds
jl
dec
push
mov
dec
sarl
add
adc
ds
repz
xor
inc
in
lret
mov
inc
add
pusha
xchg
cmp
mov
mov
push
mov
xorb
jge
dec
in
mov
push
add
ficoml
test
mov
mov
ja
add
dec
push
add
sbb
out
stc
adc
andb
and
mov
sbb
add
jno
cli
mov
add
push
shll
cmp
rol
gs
fwait
ret
adc
pop
xchg
add
jecxz
pop
popa
sbb
movsb
out
in
std
lock
ja
mov
jae
cmp
adc
cmp
fistpl
mov
mov
loope
mov
sahf
adc
movsb
divps
jns
mov
sti
fisubrs
insl
push
dec
dec
ja
les
push
pop
and
int3
sbb
jle
out
mov
inc
push
xor
pushf
cmp
lahf
lret
into
mov
in
les
lds
iret
cltd
clc
inc
push
dec
es
xchg
movsb
lods
pop
xchg
cwtl
and
sbb
pop
xchg
cld
in
outsb
test
push
xchg
scas
cmp
push
lods
addl
mov
aam
aas
jne
popf
addb
lock
cmp
cmp
inc
mov
nop
fistl
and
xor
ljmp
imul
add
cld
mov
dec
jecxz
fldt
and
sbb
or
fwait
cmp
or
jge
xchg
pop
jno
and
daa
andl
hlt
cs
mov
js
dec
mov
in
xor
aam
lahf
mov
insb
push
out
add
cmp
adc
mov
jo
mov
mov
out
and
rorb
cwtl
enter
cli
xor
cmp
fxch
jmp
cmp
adc
jnp
jecxz
test
movsl
xorl
and
imul
je
arpl
stos
xchg
mov
out
jne
pop
or
mov
movsl
sub
add
pop
push
insl
xor
sub
ja
arpl
mov
push
dec
lret
sub
mov
cli
add
xchg
daa
loope
mov
inc
int3
cmp
es
push
loopne
xor
rclb
jne
cmp
andb
adc
iret
pop
cli
nop
cmpsb
fwait
mov
incb
mov
adcl
dec
loopne
pop
test
jmp
push
popa
push
enter
xchg
pop
inc
mov
pop
mov
jo
in
jne
cmp
enter
adc
sbb
loope
add
mov
adc
mov
adc
cmpsl
rcl
test
mov
and
cltd
fstpt
hlt
stos
or
push
out
pop
scas
jbe
in
ja
out
adc
sti
add
out
and
sbb
jmp
mov
lods
aaa
adc
pushf
push
enter
add
in
movsl
sub
mov
jno
in
roll
repz
scas
lret
pop
mov
push
insl
add
push
int
scas
dec
adc
shll
andb
mov
pop
jno
lahf
in
call
mov
pop
cmp
lods
fdivrl
int3
and
mov
adc
mov
out
rolb
not
push
and
pop
mov
ljmp
jo
aam
fstp
mov
xchg
cmp
jp
fwait
outsb
and
mul
loopne
xor
aaa
cmpsb
jne
mov
dec
addr16
lock
xchg
lods
mov
and
cld
sbb
gs
cmp
push
out
lcall
int3
pop
fistl
push
cwtl
sbb
addr16
cmp
pop
mul
mov
inc
xchg
jp
sar
mov
xchg
int3
pop
fiaddl
lcall
iret
icebp
mov
dec
sub
sbbb
and
outsl
fnstcw
push
rcrl
movsb
adc
mov
jne
mov
iret
popa
mov
jge
push
dec
jle
xor
dec
or
mov
xchg
add
lret
fistl
out
inc
sarb
int3
adc
fldl
xor
dec
test
int3
das
pop
pop
jne
jg
mov
mov
mov
pop
inc
cmc
xchg
mov
push
mov
or
dec
adc
into
lods
aas
mov
stos
inc
sti
mov
loop
lods
push
dec
mov
pop
sub
shr
call
incb
outsl
push
rcrl
daa
push
int3
dec
loope
mov
push
and
lret
or
pop
xchg
ja
imul
mov
adc
jle
push
ret
mov
in
and
mov
movsb
cmp
lds
add
fildll
push
or
xorb
adc
out
or
shlb
cmpsb
push
sbb
into
repz
enter
pop
inc
pop
ret
fcoms
sub
mov
dec
lahf
cwtl
roll
push
xlat
jns
xchg
adc
xor
mov
popf
fs
sbb
or
push
in
cwtl
fisttps
inc
xchg
jmp
adc
js
clc
out
aas
mov
imul
imul
xorl
or
push
call
pop
xor
dec
fldenv
and
shrb
xchg
inc
cmpl
sub
out
fldl
aam
mov
xchg
incl
and
ret
add
adc
ljmp
lds
iret
in
xor
or
xor
cli
pop
xchg
pushf
or
sbb
mov
cmpsb
cmpsl
push
popf
push
imul
into
leave
mov
mov
ja
stos
or
icebp
es
out
pusha
pop
addr16
popa
in
adc
cmp
cli
pop
lret
fldl
adc
add
fimull
cltd
dec
xchg
gs
sub
iret
xchg
test
int
iret
ds
inc
dec
lods
inc
push
idiv
push
mov
inc
mov
add
fwait
loop
adc
gs
fisttpl
pop
pop
xchg
jb
aas
mov
dec
jno
jmp
and
mov
iret
adc
push
xor
and
jge
fxch
and
ds
call
testl
mov
call
mov
fidivs
mov
test
or
leave
stos
xchg
or
sbb
mov
xor
movsb
push
scas
bnd
push
inc
pop
in
xchg
lods
mov
dec
adc
mov
dec
fisubl
sti
mov
push
dec
mov
fsts
mov
dec
add
jecxz
cmp
bound
add
lea
ljmp
fiadds
mov
adc
pop
and
rorl
xorl
add
cmpb
push
adc
jle
cmp
data16
xchg
cs
adc
loope
sti
int
in
jne
pop
test
jle
jmp
push
add
pop
inc
repnz
add
popf
inc
xor
pusha
fwait
add
into
nop
popa
mov
scas
inc
outsl
inc
lret
lock
shll
dec
jnp
int3
movsl
mov
enter
pop
shrl
scas
loop
pop
inc
loope
insb
dec
in
ds
sub
push
add
jns
mov
in
jo
mov
rcrb
pop
mov
jno
mov
pop
and
cld
or
inc
fnstenv
xchg
es
jmp
int
xor
ds
jmp
cmp
xor
jo
lock
sbb
sub
lock
mov
out
stc
nop
aas
sti
aad
sbb
fiaddl
shl
daa
xlat
jns
jle
outsl
xchg
sub
push
dec
pop
repnz
int
xchg
push
stos
int
cmc
mov
loope
lretw
or
xorb
aas
jmp
call
repnz
ja
xor
push
xchg
sbb
gs
insl
cmp
test
adc
mov
testb
add
lds
and
cli
sbb
je,pn
mov
cmp
ffree
ss
inc
xadd
dec
test
sbb
in
repz
lea
loope
mov
cmp
and
std
push
sub
das
arpl
dec
adc
data16
pop
cmp
in
and
inc
mov
rolb
repz
or
es
fisubrs
sbb
test
mov
roll
jl
test
out
add
jnp
cwtl
add
or
mov
sbb
xor
int3
fisubrl
and
cmp
imul
pop
inc
ret
mov
mov
and
mov
cmp
cmpsb
outsb
xorl
ljmp
dec
xchg
sbbb
add
enter
outsb
fwait
jge
pop
movsb
mov
aam
mov
or
push
scas
scas
sbb
cmp
jne
outsb
cmp
mov
mov
lret
ljmp
push
fbstp
ret
sub
adc
outsb
lods
jns
pop
ret
cs
rolb
pslld
hlt
push
adc
push
icebp
int
xor
push
scas
xchg
es
movsb
dec
add
sub
out
je
mov
aad
notb
and
fwait
push
int
iret
in
mov
ret
xor
fiaddl
inc
push
inc
xor
or
xchg
lret
adc
scas
xchg
xlat
jns
outsl
push
dec
mov
dec
inc
jnp
scas
loopne
add
sahf
test
rcll
mov
movsl
or
and
or
pop
repz
sarl
lahf
adc
adc
mov
sbb
aam
mov
dec
sbb
mov
js
lods
xor
andl
cli
adc
mov
pop
inc
fwait
pop
outsb
out
ss
jp
jne
arpl
outsl
xor
fidivrs
cmpsl
punpckhwd
xchg
push
pop
push
pushf
or
sti
aas
daa
insl
in
popa
mov
popa
outsl
cmp
fdivrs
xchg
mov
push
push
jmp
adc
pop
lods
mov
mov
mov
jns
inc
pop
push
scas
stc
sar
jae
mov
hlt
sbb
in
je
sub
xor
mov
cld
loopne
fbstp
cmp
cmp
cld
stos
pop
hlt
sub
rclb
jg
add
cmp
cmp
lret
cmovno
in
scas
jmp
dec
inc
xor
mov
iret
jo
or
jge
repz
in
adc
xchg
cmpsb
or
js
mov
rolb
pop
insb
stc
add
fmull
sub
jns
mov
popl
jmp
push
mov
xor
rcl
loopne
daa
cld
fcoms
cmp
mov
mov
inc
xchg
ja
fadds
mov
adc
fcoml
lahf
push
xchg
pop
fidivl
or
lret
cmpsl
insb
ret
pop
pop
popf
stos
mov
mov
sub
xchg
mov
lds
movsl
gs
shl
cs
mov
pop
lods
mov
mov
test
scas
add
or
add
sub
outsb
xchg
in
dec
mov
inc
jl
push
add
sbb
hlt
lods
cwtl
and
and
and
xchg
mov
push
cwtl
xchg
mov
xor
push
es
arpl
mov
xor
out
xor
imul
insb
cmp
iret
movsl
test
inc
nop
jno
movsl
notl
cmp
lods
mov
pop
aas
pop
sub
cmc
add
lods
cmc
sahf
movsb
cmpsl
iret
cli
jb
std
mov
std
xor
inc
xor
mov
fmulp
pop
mov
gs
xlat
pop
jecxz
dec
xor
xor
pop
mov
lods
hlt
push
xor
cli
or
sub
dec
test
loopne
xlat
add
xchg
fcomps
mov
nop
pop
sbb
fmull
push
fidivl
sahf
fists
xchg
ret
push
and
mov
adc
outsb
sub
inc
jmp
lock
push
sub
mov
shll
mov
loopne
sub
cli
out
push
jae
xchg
dec
xchg
sahf
scas
int
nop
pushf
adc
xchg
push
pop
mov
mov
ja
std
mov
cltd
subl
mov
sbb
shll
mov
lock
and
adc
test
cmp
dec
cltd
jg
push
add
int
dec
sub
fnstenv
pusha
push
fdivp
mov
jge
aas
xor
mov
lods
xor
push
cmp
or
inc
pusha
cmpsl
jo
mov
negl
adc
stos
sbb
mov
mov
test
jae
mov
xlat
cli
sub
les
or
repz
xchg
mov
push
jle
sub
test
lret
aad
dec
jb
lds
rcrl
dec
pop
incl
push
cld
leave
mov
les
pop
int
int3
push
imul
popa
rcrb
popf
and
inc
sbb
push
mov
xchg
dec
mov
aaa
ret
negl
popa
xchg
test
shll
repnz
mov
aas
mov
sbb
scas
xchg
jnp
sbb
icebp
gs
or
xchg
push
or
popl
push
pop
dec
or
adc
xchg
int
jle
mov
xor
push
cmp
cwtl
insl
std
inc
cmp
jbe
inc
xor
adc
push
pop
lods
js
call
ret
loop
cmc
jp
add
adc
sahf
int3
inc
xlat
xchg
rorb
mov
repnz
pop
adc
cmp
std
mov
mov
shlb
mov
mov
lods
jl
cmp
scas
mov
pop
jb
pop
je
xor
das
push
jns
dec
push
ja
lock
sbbl
mov
inc
stos
push
leave
call
mov
cmc
mov
cltd
js
hlt
cmp
rolb
xchg
popa
icebp
cli
xchg
and
aad
add
mov
push
sub
mov
sub
gs
jno
cmpb
cmpsl
adc
aam
in
ds
daa
cmpsl
insl
faddl
aam
outsb
cmpsb
xor
decl
aad
test
faddp
push
scas
inc
js
aas
push
jg
xlat
iret
pop
adcb
inc
ja
cmc
popa
push
mov
push
jnp
sti
mov
sbb
test
scas
and
sbb
data16
adc
add
cmp
adc
into
add
mov
pop
cmp
jns
mov
ret
mov
emms
mov
xchg
fistpll
pop
pop
test
lret
inc
mov
imul
arpl
jnp
test
inc
pop
loopne
fldcw
stos
cmp
loop
and
xchg
add
ds
pandn
nop
enter
and
pop
xor
pcmpgtb
movsl
add
mov
sbb
dec
push
jns
push
loopne
inc
outsb
sub
mov
pop
add
prefetcht1
ja
adc
sub
stos
dec
dec
aaa
mov
and
adc
mov
and
xchg
inc
shrb
and
add
cld
dec
lret
xor
rep
push
and
and
inc
dec
mulb
test
repnz
clc
nopl
fcmove
test
lret
pop
inc
xchg
push
movl
imul
sbb
icebp
jl
cltd
pop
js
gs
outsb
add
sti
leave
jno
movsl
sbb
icebp
call
sbb
mov
cmpsl
pop
clc
xor
mov
pop
testl
inc
sbb
sbbl
lock
xor
jmp
mov
mov
rorb
and
lret
iret
push
dec
mov
arpl
adc
push
lods
mov
movsb
push
mov
addr16
jecxz
out
jne
aad
sar
stos
shrb
shrb
lret
sub
dec
push
add
mov
jmp
movsl
in
pop
pop
jnp
int
fisubs
stos
add
sbb
fcom
xchg
pop
inc
push
es
cmp
loope
xchg
lret
xchg
mov
add
mov
popa
xchg
jge
sub
sbb
mov
cmp
mov
jns
movsl
sbb
xchg
outsl
xchg
push
mov
into
test
mov
inc
popa
mov
lcall
fs
aaa
sub
testb
sbb
imul
nop
repnz
mov
dec
xor
inc
pop
xor
push
sub
xchg
enter
testl
leave
inc
sti
pop
popf
loopne
adc
inc
mov
sbb
fwait
and
mov
mov
fidivrl
ror
insb
aad
sarl
xchg
fxtract
rorb
jno
icebp
jecxz
dec
sbb
fwait
rorb
ucomiss
in
cmp
xorb
in
icebp
es
push
dec
shl
enter
loopne
js
mov
jp
mov
jl
xchg
push
fidivs
sar
jb
lret
std
jbe
push
jg
or
mov
pop
pushf
je
mov
add
xor
lods
jbe
insb
sbb
mov
cmpsl
push
jp
push
mov
push
mov
es
pusha
add
or
adc
inc
adc
std
mov
inc
addr16
dec
out
mov
sarl
jmp
addr16
outsb
pop
and
xchg
sbb
sub
jmp
dec
mov
jnp
leave
and
popa
mov
out
jbe
push
xchg
pop
int
lock
es
outsl
loopne
lea
cmp
mov
cmc
sbb
repnz
or
jmp
mov
lds
or
sbbb
icebp
test
cli
xor
adcb
inc
pop
lock
rcll
out
aas
pop
jmp
fdivs
mov
les
addr16
icebp
adc
add
hlt
mov
sub
outsb
xlat
dec
loop
call
mov
shlb
cltd
mov
jae
sbb
aas
mov
in
xor
test
rcl
ss
ret
loop
lcall
prefetch
arpl
sbb
add
mov
lods
aam
mov
inc
push
xor
mov
iret
ja
testb
movsl
xor
push
xchg
cmp
int
sahf
cmp
test
add
cmpsl
sbb
mov
lret
fwait
pop
mov
push
inc
clc
add
jne
jg
lahf
ret
gs
xchg
icebp
sub
cmp
out
fwait
xchg
out
or
hlt
cmp
fsubr
movsl
repnz
xorb
jnp
negl
xchg
fsubl
pop
sti
out
cmp
das
scas
pusha
fbld
push
jns
insb
xor
addr16
ljmp
popa
add
and
mov
fsubrs
lret
aaa
outsl
xchg
or
push
fs
repz
xlat
fidivrl
sarb
nop
jo
push
cmp
fbstp
shlb
sahf
dec
movsl
pop
jl
jno
mov
xlat
mov
popa
sub
sub
stc
cld
adc
cmp
mov
add
dec
sub
into
cli
fiadds
test
leave
test
cmp
je
cmp
dec
mov
adc
arpl
push
sbb
or
rcr
mov
je
out
lea
push
mov
xchg
or
popf
in
xchg
pop
outsb
cltd
ja
push
pop
sub
testb
fidivrs
xor
xor
out
jg
aad
pop
mov
xor
push
pushl
lock
jecxz
cmp
xchg
flds
mov
fidivs
ljmp
roll
mov
imul
push
xor
jecxz
shlb
out
push
jne
dec
mov
andb
iret
mov
mov
pop
test
adc
sub
and
lods
mov
cmp
inc
scas
aad
lahf
aas
sbb
arpl
xchg
data16
imul
std
xor
js
sbb
xchg
out
jns
xchg
repnz
mov
push
xchg
and
add
iret
fdivrl
and
into
outsb
adc
push
daa
out
ja
ds
movsb
inc
push
sbb
xchg
pop
loop
sub
ret
mov
dec
xchg
cmpsb
test
popf
insl
mov
in
xchg
aad
pop
fnstsw
mov
sub
cmpsl
jae,pn
xor
xchg
movb
xchg
or
xchg
mov
and
mov
test
xchg
cmp
jg
add
push
hlt
adc
cwtl
mov
xchg
out
sbb
sbb
mov
mov
mov
aaa
subb
sub
xchg
xchg
jnp
test
adc
and
cmp
mov
movsb
cs
repz
ret
xlat
pop
mov
ds
mov
hlt
jmp
pop
sub
enter
xchg
lds
lret
sbb
fwait
sbb
jecxz
ljmp
sbb
pop
sub
cmp
xor
movsb
adc
pusha
les
call
test
cmpsl
cmp
in
inc
inc
test
sub
and
jb
test
mov
cmp
and
inc
xchg
imul
fcmovnu
xor
inc
add
lds
push
jmp
lcall
mov
sahf
mov
push
incl
sahf
cltd
push
adcb
mov
lret
clc
sbb
push
inc
das
mov
lods
xlat
and
out
dec
in
repnz
loopne
roll
mov
enter
nop
popa
push
ds
cld
shll
add
and
and
mov
mov
push
or
push
push
pop
lcall
jne
mov
pushf
orl
js
mov
faddl
or
and
das
test
adc
setno
inc
mov
repnz
aaa
xchg
aam
lds
ficoml
jne
mov
sbb
inc
data16
repnz
insb
sbb
in
adc
sar
shl
xor
xchg
xchg
pop
and
insl
mov
sbb
cmp
add
mov
mov
cmc
out
jns
int
push
fimull
cltd
mov
or
call
imul
or
pop
lods
fcompl
sbb
fmull
adc
std
jae
imul
dec
fwait
add
out
lods
leave
pop
fidivrl
mov
cmc
mov
sub
fstps
sub
cmp
stos
push
mov
icebp
cwtl
divb
sbb
iret
mov
inc
sub
mov
and
cmp
out
adc
sub
mov
stc
dec
jae
mov
inc
stos
or
movsl
mov
call
mov
cmpsl
sbb
in
imul
xchg
sub
mov
cmpsb
ficoms
rcr
repz
xor
testb
xchg
sub
inc
cmp
aaa
adc
repnz
push
cmpsl
xchg
sbb
loope
mov
enter
adc
pop
pop
daa
sub
xor
iret
xchg
xor
adc
insb
mov
lcall
ret
inc
add
mov
stos
pusha
insb
popa
out
xor
pop
fs
pop
cmp
fwait
es
mov
int3
jno
sub
daa
xchg
mov
push
jecxz
sar
pop
iret
lock
adc
outsl
cmpsl
insb
test
ss
mov
fdivs
scas
pop
repnz
push
and
int
adc
adc
or
fisttpll
pop
and
pop
mulb
clc
pop
sub
arpl
and
arpl
ja
xchg
mov
cmp
movsl
add
lahf
mov
mov
fcompl
push
push
imull
ds
in
push
dec
jge
orb
inc
mov
add
mov
in
in
movsb
inc
xchg
sti
cmp
add
gs
mov
into
out
jae
mov
in
and
jbe
jle
push
nop
sub
inc
in
data16
push
adc
cmpsl
f2xm1
add
and
and
fs
test
xchg
lret
imul
pop
punpckldq
mov
stc
cmp
hlt
dec
fcmovbe
jns
lret
out
sub
mov
add
gs
jae
mov
jmp
shll
dec
and
outsb
or
outsb
and
xlat
clc
and
xor
clc
mov
adc
jle
xlat
sub
imul
addr16
sub
xorl
push
popa
or
cwtl
jg
nop
xor
iret
loopne
push
dec
int3
jb
sbb
rol
test
or
jns
into
push
cwtl
icebp
loop
jne
jne
push
aad
inc
fwait
xchg
fsubrs
nop
sbb
push
pop
mov
mov
scas
pop
inc
sub
or
add
cmpsl
fistps
or
shlb
mov
sysenter
ficoms
out
mov
adc
imul
shrl
sub
push
jecxz
mov
xchg
push
sub
jl
hlt
add
xor
ror
cmc
mov
imul
in
xor
xchg
inc
rorb
int
adc
test
cmp
popf
sar
xlat
push
out
pop
in
loope
jle
in
add
daa
sbb
lds
dec
push
cmp
lea
fcomps
sub
add
in
sub
dec
dec
pop
out
cmc
jmp
or
int3
or
sar
adc
mov
out
hlt
mov
push
popf
or
fdivr
push
fistpl
leave
cmp
shlb
mov
cmpl
in
es
mov
xchg
mov
xlat
and
and
and
or
sub
les
nop
ljmp
push
andl
jbe
jp
int3
loop
or
adc
xchg
push
push
psadbw
mov
test
or
scas
out
jecxz
jns
movsl
rcr
mov
cmc
sar
call
mov
pushf
outsl
testb
pop
ficoms
pop
ljmp
pop
pop
lcall
xchg
mov
add
jb
push
cli
lock
sub
cwtl
jmp
sbb
mov
xor
or
out
jmp
loope
shll
xchg
dec
in
cmp
in
loop
mov
movsl
cs
mov
ss
or
test
sarl
sbb
cli
sti
iret
mov
mov
mov
cld
jp
cwtl
adc
and
and
sbb
inc
adc
sti
ret
pushf
sub
lods
pop
cmp
lret
repnz
push
inc
push
mov
jbe
push
jae
jae
dec
ret
and
es
and
leave
sub
xor
ljmp
xchg
test
jg
jecxz
add
cmpsb
shl
sbb
cmpsb
jbe
push
mov
jl
dec
ret
dec
cli
push
lret
cmp
into
shrb
cmp
test
jg
into
imul
pop
in
sub
in
add
repz
stos
dec
sub
adc
or
push
pushf
mov
scas
jp
arpl
inc
in
jns
jmp
fwait
iret
mov
out
mov
into
sbb
inc
adc
and
pop
sarb
insl
cld
pop
dec
push
insb
shl
imul
push
xlat
ljmp
das
push
popf
outsl
cld
js
pop
inc
imul
push
xchg
mov
lret
adc
lret
sahf
xchg
test
mov
pop
pusha
xchg
push
inc
mov
xchg
pop
lret
inc
test
mov
mov
nop
hlt
fidivrl
loope
in
mov
lock
arpl
xchg
pop
stc
imul
test
jecxz
shrb
push
daa
pop
push
mov
fsts
test
mov
out
add
mov
stos
mov
push
rcrl
mov
mov
mov
adc
cmp
inc
pop
lea
sub
inc
or
sahf
decl
dec
and
clc
jge
loope
movsl
jge
inc
push
ret
sub
nop
mov
xchg
icebp
push
sub
jmp
clc
add
push
loop
fsubrs
enter
and
movb
pop
call
insb
loope
imul
mov
test
ret
mov
dec
fwait
mov
add
int3
pushf
cmpsb
pop
fcmovne
lea
push
adc
popa
push
jecxz
sahf
mov
stc
sub
dec
andb
adc
stos
sbb
addr16
gs
inc
sub
and
rcl
jae
xor
lcall
pop
inc
testl
push
mov
mov
mov
xlat
push
in
aas
xlat
push
in
cmp
mov
jae
inc
lahf
arpl
mov
xchg
jnp
fadds
inc
iret
imul
in
inc
outsb
je
mov
enter
or
shll
sbb
or
ds
icebp
inc
sbb
js
js
jae
jne
arpl
push
jnp
push
sti
icebp
fs
outsb
adc
pop
testl
in
dec
add
nop
or
rclb
xor
cltd
or
dec
popf
imul
lock
cld
push
jnp
lret
sbb
out
shrb
rep
aad
push
lret
push
mov
enter
gs
sarb
imul
rcrb
xchg
and
add
mov
mov
repz
loope
jle
addl
clc
lcall
ret
pop
pusha
ret
jno
or
in
push
frstor
sub
jle
jle
bound
mov
and
lret
or
mov
inc
mov
mov
loope
or
test
sub
xor
pop
shl
xchg
push
fscale
ss
loop
test
or
iret
ljmp
pop
inc
mov
mov
loop
pop
lea
push
mov
lea
add
daa
lock
jecxz
pop
jns
leave
jmp
mov
aam
jnp
in
sub
mov
lea
pushf
shlb
dec
pop
repnz
ss
jo
xor
inc
add
mov
fcoml
sub
cmp
lods
xchg
iret
pop
cmp
and
ret
dec
push
fistpll
mov
xor
stc
loopne
pop
push
mov
inc
lea
adc
movsl
cli
add
mov
and
out
cmp
pop
ret
ret
cld
std
cmp
dec
aaa
mov
xchg
stc
or
mov
fwait
jecxz
pop
pop
mov
addl
xchg
sbb
push
mov
shlb
ja,pn
xchg
repnz
mov
bound
lret
mov
clc
neg
loop
sbb
mov
push
inc
mov
faddp
int3
or
cmpsl
repnz
outsb
pop
lea
lcall
xchg
js
arpl
call
jge
movsb
cmp
fs
jbe
sub
mov
shrl
ret
mov
xor
adc
insl
int3
sbb
push
adc
in
out
aam
xchg
daa
test
mov
popf
push
shl
and
cmpsb
adc
pop
jg
jmp
and
pop
loope
dec
int
lahf
cmp
and
dec
pushf
cmp
lods
xchg
mov
pusha
and
addr16
mov
ss
pop
push
cmp
inc
pusha
fucomp
push
xchg
ret
pop
cmp
rolb
adc
push
pop
mov
rol
ffreep
jnp
xchg
ds
jg
pop
dec
shrl
out
lods
or
and
loope
push
sub
adc
adc
cwtl
push
mov
in
test
and
in
in
sub
int
arpl
bound
push
enter
mov
scas
push
lods
add
inc
lret
arpl
xor
jae
dec
aas
inc
jno
push
je
movl
pop
nop
jns
cmp
rcrb
jbe
adc
jecxz
add
pushf
shl
gs
push
or
je
arpl
cli
add
pop
loopne
xchg
dec
cmc
xor
jns
xor
inc
ds
xor
hlt
mov
cmp
mov
inc
push
lods
insb
pop
dec
push
adc
sbb
popf
pop
lea
inc
loop
imul
outsb
pop
inc
dec
or
movl
sub
adc
inc
enter
xor
mov
dec
jecxz
shrb
mov
imul
out
fwait
jp
adc
xchg
sbb
adc
sahf
shlb
adc
cmp
mov
xor
inc
shll
adc
repnz
cli
push
or
jmp
mov
and
pop
ret
mov
subb
stos
lods
dec
movl
push
push
cs
and
cmp
jle
push
ds
dec
leave
mov
lahf
imul
or
push
sbb
orb
xor
mov
loope
sub
ret
repz
cmpsb
or
ret
and
sbb
imul
or
inc
and
push
clc
jmp
and
and
je
add
cltd
in
jno
mov
inc
sub
lret
lret
lods
fists
jle
mov
sbb
jb
outsl
jnp
outsl
loope
rolb
push
mov
jp
mov
and
lcall
lret
icebp
aaa
xchg
jb
sbb
ficoml
sti
lea
pop
cmpb
adc
cmpsb
sahf
or
dec
dec
push
sbb
into
sub
mov
push
repnz
xor
xor
ljmp
bound
pop
and
jo
sbb
add
pop
lret
inc
mov
aaa
and
mov
out
movsb
mov
ds
pop
fstps
jne
testl
imull
mov
outsl
pop
and
mov
pop
in
pop
dec
jae
dec
jge
repz
stos
jecxz
sti
pop
mov
inc
jl
add
and
daa
dec
bound
setb
xchg
xor
push
mov
mov
add
xchg
lret
ret
dec
ret
xchg
in
imul
mov
cmpsb
mov
pop
mov
out
test
push
add
scas
mov
mov
or
daa
int
cmp
scas
add
adc
push
lods
or
cmpl
or
cmp
and
jnp
shrb
scas
push
adc
je
popf
outsb
mov
jb
lea
mov
xchg
mov
and
xchg
mov
inc
cmp
sbb
into
add
and
popf
jg
out
xchg
jge
loope
jo
xlat
pop
neg
dec
pop
jo
and
xor
sub
aas
xor
out
push
filds
imul
je
push
outsl
xlat
push
ja
inc
loopne
mov
jp,pt
test
xchg
add
dec
pop
and
cmpsb
test
popf
out
leave
leave
in
fndisi(8087
pushf
sub
and
pop
jo
push
das
addr16
in
loop
or
push
fcomip
stos
shl
pop
cmp
and
or
lods
into
stos
adc
clc
xchg
pop
jbe
fimuls
mov
ljmp
lcall
jle
out
lods
jg
sbb
inc
pusha
adc
xlat
das
lock
adc
mov
mov
push
in
mov
and
adc
or
loopne
adc
cmp
or
mov
or
sbb
pop
add
cltd
mov
and
or
dec
or
mov
jmp
adc
adc
aam
push
push
push
mov
popa
xchg
adc
notb
cmp
out
stos
pop
inc
ret
hlt
jbe
cs
pop
into
jle
mov
cmc
sub
jno
jl
aad
inc
push
jp
icebp
jge
pushf
push
adc
outsb
les
test
sbb
fld
push
xor
mov
jmp
jle
in
data16
test
mov
xchg
inc
loope
sbb
add
jo
pushf
dec
pop
pop
add
mov
in
mul
cmp
clc
imul
inc
sub
xchg
imul
adc
push
push
push
push
mov
xchg
adc
mov
aam
fstps
lods
jnp
pop
cmp
mov
outsb
dec
scas
push
dec
push
cmpsb
sub
loope
or
mov
jecxz
dec
sub
add
mov
cmp
pushl
xchg
sub
pop
inc
push
jl
xchg
std
jnp
pop
ja
rcl
cmp
int3
in
jp
and
test
loopne
lahf
xchg
lret
inc
int3
mov
rcrl
jl
jne
sub
cmp
adc
inc
xor
pop
inc
add
xchg
sub
xchg
lods
sub
xchg
loope
pop
scas
sub
insl
push
xor
filds
shll
sbb
in
jne
cmpsl
sbb
cmpsl
cmp
insl
or
outsl
pop
ja
mov
loope
jg
pushf
xor
addl
push
fucomi
add
jge
push
adc
rorb
fs
push
pop
sub
adc
outsl
mov
jle
out
nopl
lret
ret
sbb
repz
sub
cmovbe
pop
xchg
cmp
inc
inc
in
rol
sbb
sbb
std
imul
pop
mov
xor
and
out
xchg
jle
mov
fldln2
xor
mov
and
cmpl
adc
add
jb
mov
add
pop
divl
add
mov
das
dec
cmp
dec
cltd
pop
outsl
faddl
loopne
mov
pop
mov
jg
ja
leave
mov
add
repz
mov
fwait
sbb
or
hlt
in
cmp
aaa
add
stos
fsub
cmpsb
xor
pop
sub
fistps
aaa
push
popf
arpl
ljmp
addr16
or
loope
add
repnz
xor
dec
aad
push
and
icebp
aad
mov
inc
addl
dec
mov
adc
xchg
aaa
std
dec
ret
jb
test
pop
mov
fstpt
int
sub
loope
mov
nop
mov
imulb
insl
stos
hlt
pushf
add
bound
pusha
inc
pop
xchg
add
jmp
stos
test
xchg
pop
and
pop
in
xchg
jb
daa
mov
call
mov
shrl
xchg
fucomip
xchg
cmp
mov
ret
sti
sub
hlt
sbb
or
scas
fmull
lods
fidivrl
pusha
inc
je
test
sti
jge
test
sub
mov
xor
fmuls
fisubl
pop
adc
inc
push
inc
lods
jae
cmp
aad
jg
mov
jmp
test
icebp
add
jle
jmp
arpl
fnstsw
pop
test
mov
lret
call
dec
jne
aam
adc
cmp
mov
aam
cmp
into
cltd
scas
fldenv
js
mov
popf
sti
sbb
inc
dec
jle
rcr
pop
jne
mov
push
stc
or
enter
jmp
ret
push
sbb
mov
xor
fcmovbe
inc
inc
dec
xchg
or
mov
js
lock
es
adc
faddl
pop
stc
rep
push
xor
orl
das
push
lret
inc
mov
cmp
aaa
xchg
aaa
loop
push
fbstp
dec
jb
mov
aam
hlt
mov
lret
pop
and
les
dec
push
bound
push
xor
xchg
in
jp
mov
cld
jno
dec
lret
cmc
mov
jno
repnz
outsl
int
cld
sub
lods
mov
and
clc
or
push
ret
scas
jecxz
enter
ret
test
stc
outsb
sub
mov
mov
daa
push
outsl
xchg
xchg
lret
decb
lret
cli
mov
out
lea
push
mov
mov
push
push
std
push
pop
xchg
cwtl
sti
daa
sarl
add
sub
stc
cmp
adc
add
ret
or
sete
cwtl
adc
sub
in
and
jmp
dec
sbb
scas
iretw
fwait
sub
push
add
popf
jae
fsubl
push
out
ja
mov
cmp
enter
sbb
sbb
mov
cmp
jnp
adc
lcall
fmul
shlb
or
dec
mov
hlt
adc
bound
rol
movsl
inc
outsl
shrb
push
fstps
or
js
frstor
gs
lods
inc
adc
mov
aam
mov
in
mov
jecxz
add
or
sarl
jnp
es
out
mov
leave
push
sub
lock
nop
das
js
out
pop
and
imulb
scas
mov
das
inc
data16
dec
fs
test
fdivs
test
cs
xchg
or
and
pusha
xor
leave
lock
movsb
in
pop
adc
jecxz
cmc
mov
cmpb
mov
mov
movsl
data16
std
xchg
mov
pop
push
cwtl
les
push
push
push
je
arpl
add
stc
neg
idivb
loope
xchg
push
xchg
mov
mov
mov
imul
or
aas
das
adc
stc
adc
insb
cmp
movsb
xchg
aaa
inc
and
repz
and
iret
inc
cmpsb
icebp
out
iret
push
mov
popf
add
cld
dec
out
xchg
cmp
push
pop
rorb
repnz
movsb
xchg
mov
or
arpl
movsl
push
add
pop
les
mov
cmp
or
mov
push
pop
dec
jae
mov
mov
adc
or
mov
das
push
fstl
mov
stc
ja
je
sub
mov
xor
cli
sbb
push
xchg
mov
ret
or
pmulhw
ljmp
adc
sbb
nop
add
ja
stc
cwtl
notl
fwait
pop
mov
data16
loop
insl
sti
ret
mulb
and
jae
push
in
adc
xor
rolb
out
mov
or
lcall
les
loope
dec
loopne
jnp
adc
fisubl
ret
push
ss
ret
test
fldenv
and
je
cmp
pop
jp
cld
sbb
mov
mov
pop
jg
push
or
out
push
xor
mov
sahf
test
push
mov
loopne
ficomps
ds
or
sbb
mov
push
loopne
js
aaa
nop
ss
or
enter
icebp
pop
incb
shll
push
std
dec
dec
inc
jp
mov
or
notb
ja,pn
gs
mov
add
inc
push
cld
mov
and
fs
aad
jno
pusha
jae
adc
jmp
adc
lahf
and
sbb
sarl
stos
aad
and
inc
pop
mov
out
push
aam
std
jo
test
jns
clc
or
pop
mov
cmp
mov
or
mov
and
pop
test
pop
adcl
scas
push
cmp
loopne
jecxz
mov
jb
out
fiadds
addr16
push
xor
aas
notl
dec
sbb
inc
sub
outsb
xchg
pusha
add
pop
mov
stc
push
mov
cmpsl
push
mov
mov
outsl
pop
fsubl
scas
test
into
and
lahf
dec
lock
push
cltd
sahf
popf
or
fisttps
jnp
mov
out
push
mov
pop
scas
test
scas
inc
enter
push
adc
int3
xor
pop
adc
inc
cmp
dec
popf
imul
out
xor
dec
rcrb
int
xchg
mov
or
lcall
adc
fstpl
jno
icebp
call
ret
push
xchg
jnp
in
jnp
lret
cs
add
in
stc
jno
add
mov
roll
loopne
scas
jge
dec
adc
js
call
popl
smsw
add
imul
test
push
push
push
push
jb
xchg
sub
dec
mov
xchg
cltd
in
mov
sbb
das
xor
push
pop
or
dec
cltd
outsb
movl
fistpll
jmp
or
imul
ret
dec
inc
sub
stos
lcall
outsl
aad
icebp
push
and
or
lea
xchg
divl
jno
loope
mov
fildl
dec
fldenv
push
push
cld
cmp
cld
lock
fsubl
data16
add
into
int
mov
add
lret
mov
xor
push
movsb
insb
push
pusha
insl
xor
inc
push
inc
sbb
sub
sti
ds
mov
mov
pop
mov
hlt
cmp
push
je
push
xchg
dec
decl
dec
adc
lret
lods
hlt
gs
lcall
dec
add
xlat
les
lods
cmpsl
mov
in
into
pop
das
lcall
leave
sbb
into
mov
cmp
push
test
or
and
dec
lret
push
pusha
adc
into
and
std
xchg
cmp
pop
add
xchg
xlat
hlt
fiaddl
repnz
mov
inc
sbb
push
cmp
icebp
mov
or
xchg
push
das
pop
pushf
sub
outsl
sbb
pushf
push
xor
insb
push
jne
movsl
test
push
outsb
add
mov
aam
dec
inc
adc
push
mov
push
mov
daa
pop
mov
test
jo
mov
mov
fisubrs
mov
adc
mov
fadds
in
dec
movsl
push
enter
rcr
ljmp
jno
hlt
mov
call
jle
lret
mov
add
test
sub
test
or
int
das
pop
or
aaa
inc
inc
out
pop
cmp
dec
mov
add
jns,pn
xlat
push
adc
inc
dec
mov
mov
push
jb
fidivl
lods
push
div
ds
sbb
cmp
ds
sub
push
mov
mov
xor
cmp
pop
jecxz
fiaddl
push
movsb
pop
popf
call
mov
movsb
or
xchg
shll
arpl
fisubs
add
rorl
pusha
cwtl
out
in
inc
cli
mov
xor
test
out
pop
call
sub
xor
jbe
imul
and
in
and
mov
mov
mov
cmp
loope
inc
mov
pop
das
fists
inc
arpl
icebp
push
icebp
rcll
adc
pop
sbb
daa
jae
in
nop
and
mov
jl
sti
sbb
cwtl
mov
fcmovne
fdivl
adc
scas
cmpsl
jp
cmpsb
xchg
stos
les
sti
adc
xorb
aas
or
xor
sti
and
and
push
outsl
mov
test
repz
xchg
repz
xor
ja
adc
add
stc
sub
jg
mov
sbb
bt
out
icebp
hlt
xchg
dec
int
lods
out
and
in
inc
xor
adc
xchg
sbb
or
add
mov
adc
push
popf
xor
dec
aas
cltd
ret
xchg
dec
sbb
repnz
push
adc
mov
shl
push
jge
leave
push
jg
pop
jne
idivb
pushf
test
sub
jbe
mov
sbb
push
sub
cmp
scas
jmp
insl
mov
mov
mov
mov
insb
and
jns
insl
cmpsl
add
cmpb
out
and
push
inc
and
out
cltd
jne
dec
pop
jmp
inc
jmp
jo
shrl
pushf
mov
mov
mov
add
call
mov
or
je
or
push
mov
and
mov
pop
filds
aad
lds
push
mov
xor
shll
sahf
adc
adc
stos
test
ja
setle
mov
jp
or
pop
inc
aam
insl
iret
push
xor
cltd
mov
xorl
fisttpll
mov
or
pop
lcall
jno
or
scas
push
xor
arpl
lods
push
inc
jnp
push
daa
inc
fisubrs
cmp
popl
pop
dec
fidivrl
mov
js
add
jecxz
or
xlat
push
pop
repz
sub
shl
int
flds
lret
mov
int3
out
adc
adcl
out
or
outsb
repz
xor
loope
dec
inc
xor
test
bound
dec
and
inc
adc
fwait
xchg
dec
adc
pop
pop
mov
enter
loopne
lods
in
xchg
outsl
call
adc
push
adc
ficompl
jne
into
fnstsw
and
pop
scas
cld
mov
sbb
and
inc
mov
loop
jo
mov
adc
and
outsb
sarl
popf
cmp
in
and
icebp
lahf
stos
add
adc
in
insb
xor
add
sub
push
clc
dec
loope
shrb
fldenv
mov
es
lea
lock
out
pop
punpcklwd
mov
gs
dec
cs
stc
push
movsb
lcall
fldl
pop
mov
jo
pop
ret
enter
loop
cmpl
mov
mov
jo
repnz
dec
dec
sub
cmp
mov
stc
lret
sti
sub
int3
xor
inc
cmpsl
ljmp
inc
leave
xchg
xor
pop
cmp
enter
mov
pop
cmp
xchg
sbb
push
dec
and
sbbb
popf
jl
push
leave
cmp
addr16
push
xor
or
aad
ss
gs
test
jb
mov
xchg
lock
cwtl
shll
stos
enter
repnz
data16
jecxz
push
outsl
jmp
push
mov
inc
neg
fnstsw
xchg
cltd
aaa
pop
int3
sbb
mov
inc
repz
clc
push
ds
das
neg
addr16
aaa
adc
fdivs
adc
test
fcmovu
punpcklwd
popa
xor
aam
mov
outsb
es
stos
mov
jp
mov
and
lods
jns
sbb
cs
int
xchg
mov
mov
dec
stos
loope
sub
jb
adc
pop
adc
in
cmp
mov
hlt
cld
enter
inc
inc
pop
and
lret
lods
push
mov
test
sbb
jle
jno
fs
mov
std
icebp
inc
dec
and
xchg
jne
dec
lret
jge
fs
pushf
dec
movsb
je
stos
cltd
mov
out
mov
ss
mov
popf
jnp
addl
push
pop
pop
shll
or
popa
sbb
sbb
cmp
jl
imul
cmpb
into
xchg
fwait
leave
push
or
push
sarb
push
mov
cmpsb
jne
mov
sti
mov
dec
rcrb
outsb
movsl
or
jb
pop
insb
stc
push
into
lret
out
not
push
fldcw
ljmp
jl
dec
inc
push
and
cmp
sub
ljmp
xchg
adc
dec
je
inc
clc
outsl
hlt
scas
loop
mov
cltd
aam
inc
mov
bound
adc
mov
xchg
lods
imul
inc
pop
mov
scas
mov
jbe
xchg
hlt
xchg
add
adc
pop
push
adc
jnp
push
push
mov
stos
cs
js
lret
lods
mov
test
addr16
popa
aam
xor
cmp
fcmovnb
fs
imul
push
into
roll
jo
lcall
sub
stos
mov
scas
adcl
jbe
jge
nop
push
cmp
jb
stc
xchg
and
fbld
push
sbb
sub
push
icebp
inc
test
mov
add
shrl
dec
outsl
and
aas
lods
adc
or
lods
xchg
leave
out
inc
or
pop
repz
push
fidivl
arpl
insl
test
mov
into
jecxz
addb
xor
and
dec
mov
mov
inc
fnstcw
cmp
je
je
enter
add
bound
push
js
mov
mov
dec
cmp
sub
sbb
icebp
ljmp
aad
adc
add
test
stc
leave
sbb
push
shrb
pop
jmp
jp
inc
mov
mov
add
cmpb
push
into
and
inc
and
sbb
fstps
cmp
xchg
fwait
xchg
xor
xchg
lahf
or
pop
pop
xchg
popf
mov
push
ljmp
popf
add
sbb
jns
pop
insb
add
data16
ror
mov
xchg
lea
ds
lahf
xchg
movsl
lret
dec
cli
xchg
lcall
int3
and
icebp
push
pop
test
jbe
push
mov
lret
pop
mov
push
mov
pop
pop
mov
inc
popf
xor
loop
in
std
jbe
jp
test
and
ljmpw
jb
gs
lret
mov
push
ret
outsb
cli
inc
inc
rsqrtps
and
insl
sbb
mov
test
mov
test
xchg
cmpl
xchg
mov
mov
lods
movsb
xorl
mov
cmp
fcoms
test
mov
addl
sub
mov
popa
jmp
mov
and
orl
cltd
or
push
mov
xor
out
jno
sub
test
jns
in
lret
fcmove
ss
cmp
rolb
icebp
cli
sarl
add
lret
or
fldt
loope
pop
cmpsb
mov
jmp
sbb
addl
push
imul
mov
jb
sub
fcoms
mov
push
in
cwtl
int3
mov
inc
jmp
mov
lret
test
pop
movl
mov
sub
icebp
pop
add
xchg
sbb
lods
sub
hlt
call
out
mov
movsb
push
scas
pusha
test
sti
push
sub
sbb
push
in
movsb
jns
and
fstpl
dec
out
push
inc
test
repnz
mov
dec
add
inc
sub
out
in
lock
or
hlt
add
push
mov
aas
iret
divl
imull
mov
cld
push
mov
cmpsb
mov
jmp
ret
mov
adc
adcb
jbe
mov
xchg
in
movsb
in
mov
cli
imul
xchg
and
mov
sub
in
xchg
cli
or
sub
hlt
pop
add
lret
pop
and
xchg
inc
dec
xchg
adc
cs
pop
stc
mov
mov
add
ds
push
inc
jbe
ds
dec
dec
aad
add
out
pavgw
mov
xchg
cwtl
push
jbe
das
sub
sub
imul
and
push
lret
mov
sti
inc
popa
mov
cmp
call
mov
xchg
les
int3
fimull
subb
push
rolb
pop
dec
aad
aas
sub
outsb
sub
cwtl
push
push
jbe
xchg
stc
cmp
fwait
and
mov
fildl
xchg
mov
xor
lds
mov
pusha
iret
scas
xchg
push
mov
xor
inc
mov
jmp
push
ss
movsl
mov
xchg
mov
incl
xchg
mov
inc
mov
cld
arpl
adc
sbb
add
iret
mov
mov
imul
and
push
icebp
and
jle
push
mov
mov
and
xchg
inc
inc
pop
xchg
ds
mov
xchg
cmpsl
jge
jl
mov
mov
xor
mov
lret
jge
cmpsl
enter
jge
or
pop
add
out
pop
jmp
dec
push
int
xchg
fistpll
xchg
aas
daa
out
inc
jae
dec
push
push
push
aad
mov
add
and
sarb
pop
pop
mov
in
mov
or
mov
popf
hlt
das
out
dec
mov
jbe
dec
inc
sbb
fs
or
ja
pop
pop
lods
lret
or
inc
cmc
out
adc
notl
nop
lidtl
xchg
push
stos
dec
icebp
mov
cltd
jmp
mov
dec
loopne
or
and
add
adc
sbb
cmp
xchg
pop
dec
sahf
repz
and
out
jmp
fwait
sbbb
mov
sbb
pop
sub
dec
arpl
jno
fdivl
outsl
scas
add
mov
dec
divl
mov
mov
inc
sbb
in
outsb
mov
daa
mov
sti
aad
inc
aas
int3
test
ds
mov
xchg
and
js
outsb
mov
push
lock
xchg
inc
xor
and
test
add
enter
sbb
push
sbb
in
xchg
push
jmp
mov
push
and
adc
sub
pusha
stos
sub
test
nop
hlt
loope
and
push
mov
adc
idiv
push
cmc
dec
loopne
out
push
or
out
add
jo
mov
xor
and
fbstp
outsb
push
sbb
mov
cmp
ss
arpl
je
and
mov
outsb
leave
jo
test
in
std
aad
fs
jo
dec
cmp
scas
ja
jae
adc
aaa
outsl
jmp
ret
xchg
outsb
dec
mov
loope
lds
dec
xchg
cmp
aam
cmp
pop
xchg
and
test
adc
les
jmp
xchg
push
push
push
clc
sahf
sbb
sti
push
and
dec
sti
shll
xchg
int
neg
sub
outsl
shl
mov
leave
mov
xchg
adc
xchg
mov
aaa
sub
stos
enter
test
fadds
shrl
mov
mov
mov
dec
mov
aas
push
imul
outsl
adc
dec
movsb
sbb
popf
movsbl
fs
xchg
push
and
inc
aaa
sbb
sar
test
jo
imul
sub
hlt
clc
int
dec
inc
sub
jno
inc
cmpsb
jnp
int
fmull
cmpsb
mov
rorl
loop
ja
imul
fisttpl
jecxz
outsb
out
xchg
or
mov
test
mov
lods
and
lcall
cmp
cmc
mov
and
icebp
xchg
inc
and
ljmp
xor
jno
lock
sbb
leave
jbe
and
jne
je
out
sub
jbe
lret
or
mov
inc
int3
scas
das
js
jno
aas
and
cld
jnp
shrb
mov
mov
je
sbb
pop
stos
adc
fs
call
lods
xchg
push
out
xchg
add
out
ret
mov
ds
pop
gs
int3
fsubrs
ret
and
cwtl
jae
xchg
mov
mov
call
gs
ljmp
hlt
or
xchg
fdivl
mov
pop
sub
or
hlt
sub
ret
cmp
cmp
fdivs
mov
xchg
xchg
inc
fsub
push
xor
adc
mov
lret
xlat
jbe
lds
arpl
test
into
push
push
add
adc
fdivrl
mov
jp
shll
lcall
inc
jne
push
repnz
pop
icebp
jl
aad
loope
in
and
negb
pusha
xor
dec
xchg
sbb
call
mov
test
popa
hlt
outsb
push
cltd
sbb
xchg
sub
sarb
mov
jmp
aam
xor
xor
jl
dec
push
or
lahf
add
dec
xchg
scas
cmp
jg
or
imul
push
pop
imul
xchg
es
push
inc
pop
xchg
xchg
rorb
inc
xor
pop
insb
nop
xchg
xor
sub
mov
adc
sbb
leave
push
cmpsb
rclb
or
mov
bound
hlt
inc
lcall
out
xchg
cwtl
cs
ljmp
jmp
adc
push
popf
mov
mov
shll
fiadds
pop
daa
mov
nop
or
repz
jno
jmp
lahf
std
mov
fsubrp
mov
shll
xchg
push
inc
push
mov
or
ds
lahf
mov
mov
out
lods
in
icebp
data16
cld
mov
jmp
adc
jle
mov
pop
comiss
jne
dec
jmp
lea
cmp
aam
mov
cwtl
push
jmp
push
push
lcall
mov
mov
sub
decl
movsl
jns
cmp
sub
xor
inc
mov
or
inc
or
je
hlt
fistl
dec
loope
push
icebp
mov
aad
lcall
or
push
cmpsb
sahf
jo
or
xchg
mov
push
pop
sbb
dec
add
int
sbbb
push
and
popa
mov
aas
dec
leave
inc
pop
jl
and
push
ret
xchg
je
ljmp
pop
imul
jmp
jbe
repnz
in
repnz
divl
call
xor
notl
pop
loopne
dec
lret
popw
das
test
sbb
leave
mov
ja
and
in
mov
xchg
cwtl
dec
inc
cmp
repz
aad
clc
adc
cmpsl
rclb
or
test
add
int3
orb
fbstp
sub
adc
loope
fbstp
adc
dec
pop
popa
mov
xor
sar
imulb
imul
mov
addl
das
or
xchg
push
push
das
push
dec
and
mov
fisttps
pushf
dec
push
outsb
testl
xchg
bound
data16
push
outsl
aaa
test
adc
shll
jge
sub
lret
insl
imul
push
lret
fstpt
inc
push
xor
pop
out
cmpsb
int
inc
pop
pop
pop
clc
adc
enter
or
xor
bound
sbbl
shll
jge
mov
outsb
in
cmp
mul
push
cmc
pop
cmp
pop
inc
adc
dec
sbb
in
test
hlt
scas
inc
ret
scas
data16
mov
push
fneni(8087
sub
popf
xchg
add
arpl
xchg
xor
test
outsb
sub
dec
cmp
inc
inc
xchg
mov
fsubrl
sbb
cmpsl
and
orb
out
les
repz
sub
or
popa
stos
and
scas
dec
jge
lret
popf
mov
in
mov
mov
addb
mov
sub
cli
pop
sbb
insl
lea
repnz
push
rcll
mov
xlat
xor
xchg
jae
loopne
xchg
pop
aas
jmp
cmp
std
sub
iret
pop
mov
sub
add
loop
pop
rol
je
sub
pop
cs
jnp
push
xorl
roll
pop
xor
les
inc
je
sub
push
imul
movsl
xor
inc
dec
bound
jns
push
or
fisubrs
pushf
mov
dec
cmp
sub
imul
cwtl
and
fwait
popa
xchg
bound
lods
ds
imul
inc
add
or
mov
loope
sub
pop
or
xchg
cli
js
iret
xlat
fs
pop
sbb
or
cwtl
and
jg
test
xchg
cmp
adc
jle
cmp
xchg
stc
jns
hlt
sbb
jns
mov
jne
jo
lods
ficoms
fadds
pusha
mov
adc
sahf
mov
cmp
shll
fwait
nop
fwait
dec
xlat
mov
test
test
jb
mov
and
mov
xchg
hlt
or
and
les
arpl
jo
sbb
cltd
sbb
and
pop
mov
jecxz
xor
lea
mov
lods
mov
inc
jne
xchg
lds
mov
xchg
cmpsb
cs
pop
jl
push
adc
int
in
add
lea
std
jnp
cwtl
in
int
paddd
enter
jb
mov
xor
cmp
ljmp
sub
inc
and
notl
xor
fidivrl
cld
dec
arpl
aas
mov
adc
outsl
fimuls
jbe
mov
aad
enter
and
testl
sub
xchg
or
std
rcl
push
aaa
xor
fsubrp
cmpb
jg
and
lock
push
and
add
pop
mov
shrl
lcall
push
ret
popf
sub
pusha
loop
aad
mov
mov
call
lock
mov
aam
ss
fwait
outsl
cmp
addr16
cmpsb
test
jmp
sub
test
push
sbb
andb
bt
mov
repz
test
xor
aam
mov
lcall
stos
sub
std
into
iret
jl
imul
movsl
mov
or
inc
scas
sub
sub
in
and
mov
sub
orl
icebp
pop
popf
cld
iret
xlat
and
jo
jle
aaa
in
xchg
out
movsb
and
inc
push
jge
repnz
aad
es
fcmovnu
xlat
sahf
push
adc
stos
data16
add
cli
mov
adc
or
scas
sbb
scas
cmp
dec
inc
add
pushf
scas
repz
fisubrs
mov
int
jae
sbb
sbb
out
enter
dec
lcall
sub
gs
pop
sbb
ss
dec
mov
and
loope
int
les
sbb
mov
mov
inc
or
pop
icebp
aam
mov
ret
outsb
jns
or
sub
les
jns
adc
out
pop
pop
ljmp
sti
xchg
push
cmp
sbb
in
adc
xchg
inc
jmp
xchg
sub
psubsw
mov
inc
outsl
pop
and
cmp
mov
int
cmp
push
idivb
add
fdivrl
test
xor
rclb
rclb
push
dec
mov
fisttps
push
jne
xchg
inc
push
or
pop
lcall
imul
jae
xor
es
and
shl
rep
push
fsubl
cltd
pop
inc
pusha
jge
mov
movsb
sub
add
arpl
std
roll
cld
jns
sarl
leave
js
mov
mov
cmpl
xchg
aam
pop
es
add
dec
or
sahf
dec
in
js
pop
lret
test
and
jmp
and
cmp
xor
or
mov
cld
xchg
out
jmp
cld
clc
pop
data16
in
xchg
mov
addr16
jne
je
insl
sub
fistpll
pop
xor
pop
cmove
or
fstpl
lcall
mov
pusha
loop
mov
mov
xor
pop
push
push
pop
shrl
xlat
cmc
mov
shll
aad
or
test
in
loop
inc
sub
sbb
scas
out
xchg
cmp
test
aad
ss
xchg
aad
xchg
std
and
and
mov
ljmp
adc
lahf
mov
test
das
sub
push
and
cs
push
dec
inc
pusha
xchg
repnz
arpl
sub
push
mov
sub
rcrb
push
pop
sub
mov
shrb
mov
dec
adc
inc
outsl
aaa
jnp
leave
insb
out
cmp
xchg
ss
mov
jne
je
mov
dec
push
repz
into
icebp
xor
popf
mov
push
mov
clc
xor
loope
adc
int3
aam
lea
std
push
and
outsb
sub
mov
jmp
push
adc
fsubrs
shlb
hlt
or
push
outsl
mov
out
aaa
adc
cmp
call
dec
test
in
insl
int
ror
rcl
repnz
je
dec
popa
cmpsb
xchg
inc
sub
out
cmp
pop
shl
jl
or
cmp
scas
adc
pop
js
adc
popl
xor
jle
sbbl
daa
hlt
mov
lahf
sub
sahf
push
push
out
pop
add
add
cmp
nop
mov
inc
aam
mov
nop
fisttpll
shll
push
pop
lods
xor
loop
push
or
xchg
jg
dec
mov
dec
jae
std
mov
push
sub
loopne
dec
sti
xchg
inc
repnz
inc
repz
dec
xchg
out
and
or
setae
push
setb
inc
fbstp
mov
mov
mov
xchg
in
cmovns
jecxz
rcr
xor
or
shrb
js
out
push
xor
cmp
add
leave
jmp
inc
sarb
int
out
inc
fmull
outsb
xchg
jl
lock
cwtl
test
add
push
ret
cli
enter
add
jnp
push
push
adc
lcall
les
fucom
in
fucom
je
lcall
jmp
outsb
mov
inc
dec
movsl
pop
testb
push
jle
shrl
mov
aam
adc
clc
ljmp
push
jae
scas
stos
pop
add
mov
dec
push
nop
push
xchg
shlb
mov
mov
add
sub
adcl
mov
cmp
test
test
dec
jbe
std
push
adc
adc
jae
pop
jmp
adc
negb
pop
test
xor
push
or
mov
pop
popf
pop
pop
movsl
jne
int
popa
int
add
fidivl
js
cmp
jl
insb
xor
dec
mov
jb
aam
in
mov
bound
and
stc
adc
mov
mov
ljmp
es
jo
pop
lock
xchg
cmp
mov
sbb
arpl
lret
cmp
or
test
dec
push
inc
mov
push
and
xor
insl
cld
pop
mov
outsb
sbb
jmp
mov
rcrl
cmp
fists
test
ljmp
lret
cld
xchg
arpl
adc
dec
mov
inc
mov
xchg
cmp
aaa
mov
jns
xor
mov
enter
int
jecxz
sub
ss
cpuid
jecxz
hlt
jne
popa
sar
dec
aas
aam
jmp
mov
jp
lret
popa
hlt
pop
es
divb
lea
out
lcall
sbb
sahf
insl
xchg
mov
in
inc
jno
icebp
pop
xor
cmpsb
sbbb
aaa
in
xchg
cmc
push
dec
jne
lret
adc
mov
sub
dec
ja
out
jne
clc
pop
lods
inc
stos
nop
lret
jle
roll
int
sbb
fcomip
push
icebp
adc
mov
inc
daa
add
cs
stos
xor
sub
das
stc
stc
mov
fisubrl
or
mov
add
pop
jmp
push
sbb
cmp
mov
jbe
mov
aad
adc
mov
adc
cmpsb
out
ret
push
sbb
je
inc
push
adc
jo
jae
rclb
out
dec
xchg
or
outsb
mov
outsb
nop
xor
cltd
imull
jne
test
aaa
xor
imul
inc
and
xchg
mov
mov
inc
sub
xor
adc
pop
inc
fwait
popa
stc
or
into
add
jle
dec
pop
dec
push
xchg
xorl
into
loope
cmpsl
hlt
push
mov
inc
cmp
arpl
xchg
mov
push
fstps
icebp
fwait
test
cs
fnstenv
push
or
mov
cmp
mov
sub
and
or
push
inc
clc
mov
xchg
adc
sbb
add
dec
mov
inc
xchg
cmpsb
mov
outsb
js
lcall
adc
pop
mov
xlat
fwait
xlat
push
in
xchg
in
xlat
jp
pop
pop
lock
sub
lods
xchg
jnp
cmp
jne
pusha
inc
mov
idiv
or
flds
clc
pop
and
inc
jmp
bound
push
add
mov
xchg
mov
clc
or
shlb
adc
sbb
xchg
fstpt
ljmp
push
enter
dec
pusha
scas
es
inc
xchg
jle
sbb
fwait
sarl
sarb
imul
lahf
dec
fiaddl
xchg
arpl
xor
sahf
hlt
out
lock
gs
add
pop
adcl
loopne
icebp
flds
mov
push
insb
das
rcrb
cmp
aas
iret
jns
inc
pop
ljmp
cmp
and
push
mov
jne
jle
fld1
addr16
mov
imulb
lret
notb
popa
scas
aaa
test
aad
push
push
test
inc
pop
insl
ljmp
or
lret
cmc
xchg
test
jmp
pop
jmp
adc
xchg
adc
js
inc
cli
mov
cwtl
add
aam
test
push
data16
sbb
add
push
mov
out
push
cmpsl
ftst
into
int3
mov
sbb
ret
iret
vpsubsb
or
sub
inc
or
xchg
and
les
sub
xchg
add
jo
xchg
imul
mov
mov
inc
add
mov
sub
lret
mov
aad
dec
or
les
sub
lret
pop
sbb
test
and
rcrl
mov
movsb
cmp
and
cld
mov
repz
xor
pop
lds
aaa
int3
jle
jp
mov
sbb
lahf
bound
lock
leave
sbb
imul
add
outsb
mov
scas
adc
push
addr16
lcall
rcll
inc
imul
aad
outsb
cli
pop
shl
push
jo
out
mov
mov
inc
mov
and
mov
les
icebp
cwtl
insl
jmp
call
mov
addr16
sub
sbb
add
cs
test
inc
filds
mov
jecxz
cmp
cmp
cli
pop
fstl
movb
arpl
adc
fsts
cli
jecxz
lea
jp
pop
loop
xchg
sbb
scas
cli
mov
jecxz
movb
lods
jecxz
push
cmp
sub
dec
cltd
dec
pusha
pushf
ror
push
add
fdivl
and
popa
adc
pop
mov
mov
mov
mov
inc
js
jecxz
sub
stos
pop
jle
iret
xor
mov
stos
adc
cs
popf
pushf
or
cmpsb
aas
push
outsl
jae
pop
fucomi
pusha
inc
add
fldt
fisttpll
add
adc
ljmp
cs
mov
lods
ret
mov
xchg
loopne
xor
cmpsl
shlb
adc
push
xchg
andl
xchg
test
lret
out
mov
jno
dec
aaa
and
sahf
cmp
ret
push
mov
imul
mov
sar
inc
test
cmp
mov
leave
mov
push
mov
daa
dec
and
movsl
adc
adc
sbb
outsl
sahf
test
mov
sub
sbb
cmp
push
xchg
mov
jle
int
imul
insl
iret
pop
int3
and
cs
jmp
cmp
lahf
pop
fnstcw
xor
imul
es
mov
rcr
sbb
xchg
push
or
ds
mov
outsl
add
dec
mov
cmp
lock
lods
fsubs
clc
out
cld
mov
cmp
roll
jg
dec
sbb
add
push
data16
dec
mov
nop
lds
orl
cmp
insl
or
xchg
pushf
mov
mov
int
mov
or
mov
cmp
and
pop
lea
loope
loope
mov
sub
push
sarb
jl
mov
mov
sbb
daa
cmp
add
les
adc
sub
pop
sbb
outsl
mov
pop
pop
rcll
in
push
mov
mov
pop
cltd
push
fsubrs
or
push
lret
aaa
jne
xor
std
mov
std
inc
xchg
js
into
fdivp
js
ljmp
lods
xchg
dec
stc
and
inc
stc
mov
inc
inc
outsl
mov
push
repz
out
sub
roll
xchg
pop
cmp
pop
loope
fs
push
sub
leave
out
insl
sbb
test
subb
cwtl
imul
out
mov
lods
sbb
imul
mov
add
cli
pop
jae
and
js
js
cmp
mov
jo
and
icebp
fwait
pop
testb
int3
xchg
mov
push
add
push
cs
jbe
jge
pop
add
stos
repnz
repnz
fildll
or
mov
sub
ret
addr16
repnz
stc
bound
sbb
and
and
pusha
push
and
arpl
out
adc
sub
xchg
cs
xlat
scas
mov
outsl
jge
adc
mov
call
outsl
push
add
fsubp
inc
push
nop
push
or
icebp
xchg
push
inc
clc
out
call
inc
sub
fdivl
pop
insb
push
add
mov
cmpsb
adc
cmp
pop
inc
sub
jo
imul
and
std
shl
inc
aaa
mov
cmp
mov
test
test
lcall
shrl
dec
cmp
mov
sti
call
mov
bound
xlat
dec
dec
fbstp
ds
adc
stc
mov
xchg
dec
pop
mov
jnp
enter
xlat
or
add
movsl
sub
in
mov
xor
nop
stos
fbld
jnp
jne
js
test
das
xor
sbb
xchg
vmovq
shl
ret
out
std
dec
push
popa
rorl
rol
jmp
sahf
frstor
sbb
mov
cli
fisttps
std
or
ret
lret
dec
mov
pop
adc
popa
daa
outsb
mov
lock
orl
xchg
mov
fisttpll
and
mov
lcall
jnp
mov
orl
out
sti
in
xchg
stos
ja
es
push
cmpb
mov
xor
lods
pop
mov
xchg
cmpsl
inc
mov
add
add
cmp
popa
sbb
out
lcall
ds
imul
inc
inc
pop
jae
xor
add
daa
int
scas
int3
xor
int3
test
out
ret
insb
pop
dec
rorl
jbe
shlb
cmp
outsb
mov
mov
mov
subb
mov
mov
sbb
dec
or
int
test
shr
jb
mov
in
mov
xchg
pop
cmpsb
arpl
shr
cmp
push
adc
insl
gs
fidivrs
andb
js
pop
stos
daa
call
insb
ss
enter
pushf
out
add
mov
addb
or
adcl
xchg
ret
sbb
push
push
and
add
mov
mov
repnz
outsl
repz
cmp
mov
sti
dec
jmp
lock
and
popf
lds
sahf
mov
sbb
nop
push
and
cltd
lock
mov
mov
out
add
xor
cmpsb
adc
mov
or
aad
sub
sahf
inc
insl
cmp
jmp
push
xor
fidivs
xchg
pop
mov
daa
inc
fsubrp
outsl
push
dec
aaa
cmp
push
push
popa
dec
sbb
jle
sub
loopne
idivl
cli
int
push
mov
fmulp
sahf
or
movsb
pop
dec
push
jecxz
inc
xlat
push
xor
ds
xor
popa
in
push
xchg
iret
add
fwait
cmp
jmp
nop
pop
mov
cli
and
sbb
or
ljmp
and
push
adc
push
das
dec
repz
xchg
jg
cmpsl
nop
aad
xor
subb
inc
cs
mov
mov
les
adc
das
out
pop
test
push
into
jnp
test
xor
sub
and
pop
into
adc
mov
iret
aas
pop
or
rolb
add
sub
push
sbb
adc
or
xchg
sub
cmp
fsubs
call
ja
and
adc
mov
hlt
fdivrs
pop
dec
cmp
sti
rcr
xchg
dec
cmp
sbb
cmp
cli
mov
mov
push
jbe
sar
test
fdivrs
fimuls
mov
aad
rorl
jmp
shll
lods
inc
out
test
cmp
and
adc
sub
adc
arpl
loope
rcll
int3
jmp
mov
stc
dec
dec
scas
test
in
and
shlb
fldl
jae
lea
ffree
push
or
xlat
iret
aaa
inc
lds
mov
or
mov
negl
mov
push
xchg
jns
jne
add
pusha
lods
fs
xchg
icebp
es
scas
nop
jg
ja
and
lock
or
sti
les
mov
fsub
lods
lods
pop
add
sub
cmpsl
inc
sarb
repz
xor
sbbb
mov
out
lcall
int
jge
xchg
xchg
cli
inc
cmp
mov
inc
repz
mov
mov
sahf
xor
add
test
pop
fldt
ret
cmp
imul
pusha
xchg
mov
or
andl
shl
inc
push
cmp
scas
pop
cli
movsl
movsb
adc
push
sub
push
jb
insb
or
xchg
addr16
sahf
rclb
sbb
push
popf
sbb
clc
adcl
push
xorb
xchg
mov
sub
inc
dec
jle
inc
movsl
cmp
andb
or
and
mov
mov
jo
mov
xchg
mov
dec
jae
je
xchg
jb
mov
mov
aam
in
sbb
and
rclb
xlat
jb
or
inc
lods
in
dec
inc
mov
jl
mov
shrl
rcrl
inc
mov
leave
inc
sahf
aad
iret
test
mov
ss
sbb
lcall
xchg
sub
iret
jo
sbb
adc
cmp
jo
ljmp
mov
call
dec
jmp
sahf
pop
in
jno
out
int3
sub
das
and
sbb
sub
xchg
fsubs
lds
scas
xchg
pop
adc
or
iret
and
mov
dec
push
hlt
mov
pushf
cmpsb
cmp
cmp
rolb
sub
jecxz
mov
mov
aas
std
imul
mov
cmp
pop
lret
rorl
xor
push
push
xor
ds
icebp
mov
lods
adc
inc
or
jmp
hlt
sub
xor
pop
cltd
insl
loop
mov
mov
inc
aam
xchg
je
decb
push
jbe
lret
xchg
inc
out
push
xchg
jge
dec
icebp
dec
lds
stos
rcrb
hlt
das
decl
cmp
dec
sbb
mov
sub
dec
jno
cmp
pop
xor
test
mov
ds
add
and
pushf
pusha
xchg
pop
das
xchg
imul
es
cmc
jno
lret
jae
sub
lcall
mov
push
and
and
adc
mov
cmc
sahf
cmpsl
fildll
xchg
in
xor
loopne
xchg
and
incb
inc
aas
fnstsw
out
inc
cmc
sbb
jl
push
sahf
nop
add
sub
dec
or
sub
pop
jae
vmwrite
mov
adc
sub
scas
insb
jp
cld
in
jp
lahf
pusha
push
xor
hlt
dec
imul
pop
dec
in
scas
insb
js
add
inc
out
push
out
push
stos
push
or
decb
xorb
icebp
jmp
adc
mov
mov
mov
mov
ljmp
loopne
std
add
sti
repz
sbb
mov
mov
mov
add
sbb
cmp
movsb
mov
dec
cmp
pop
ffreep
fstps
or
lret
pop
add
out
bound
mov
movsl
mov
add
arpl
in
and
mov
test
outsb
hlt
push
fsubrs
dec
cmp
jo
ds
mov
jb
repz
cmp
sti
stos
inc
out
add
jmp
pop
cmp
xchg
inc
test
cs
bnd
out
int3
bound
movsl
popf
sbb
clc
jmp
or
out
sbbl
xlat
ljmp
aas
dec
push
inc
push
insl
icebp
inc
and
ljmp
lahf
dec
inc
pop
loope
dec
out
fmuls
aam
inc
pop
mov
adc
sti
mov
jno
push
inc
test
or
pop
mov
mov
push
and
pushf
cwtl
jae
jbe
mov
cli
test
data16
lahf
cmp
repnz
test
movsl
icebp
lds
xor
xchg
mov
call
push
popf
jp
cli
push
out
aad
pop
mov
cwtl
je
mov
cwtl
mulb
ljmp
dec
inc
adc
test
jnp
cltd
popf
js
int3
fprem
push
or
lock
decb
roll
sbb
ds
sub
mov
lods
adc
pcmpeqw
dec
or
add
aad
jns
mov
subb
adc
ret
and
faddl
xchg
sub
and
pop
jne
push
cli
xchg
loop
stos
test
lods
adc
mov
sub
add
inc
inc
out
mov
in
and
sbb
inc
inc
inc
cmpsb
add
int3
test
les
add
lret
pop
les
imul
push
pop
cltd
mov
stc
repz
xchg
push
cs
pop
pusha
les
mov
mov
xor
or
sbb
cwtl
shrb
mov
popf
nop
push
loopne
loop
ss
data16
es
cmp
into
out
dec
sub
push
pusha
lahf
pop
lods
add
mov
ds
mov
mov
rcrb
ret
daa
mov
cli
or
xchg
mov
mov
adc
movsl
xlat
pop
jmp
inc
call
mov
push
mov
xchg
adc
dec
add
jae
js
adc
pop
xchg
lret
test
pop
and
push
sub
dec
xchg
cmpsl
or
sbbb
cmp
mov
test
into
mov
call
repnz
xchg
cmp
mov
mov
add
adc
dec
ljmp
orb
xchg
loopne
rcll
cmp
out
lahf
sarl
les
cmp
pop
cld
scas
rcrb
mov
cmc
lret
mov
cmpsb
loopne
mov
xchg
ja
call
jp
subb
jae
xchg
shll
dec
sub
out
sti
fsubs
pusha
lea
aam
test
sub
xchg
cmp
and
iret
lods
aas
xchg
xor
xchg
imul
mov
pop
data16
notl
mov
or
call
or
mov
add
popa
lret
push
mulb
cmp
push
mov
ss
push
lods
mov
test
ss
test
jmp
push
xor
jp
mov
fisttpll
nop
inc
fucompp
adc
int3
xor
pop
fmulp
jmp
pop
xchg
cmc
add
outsb
aad
pop
jno
nop
push
outsb
insl
add
sahf
dec
fldenv
mov
add
cmp
out
mov
push
sbb
cli
push
stos
lret
iret
mov
add
cmpsl
xor
push
sbb
inc
fs
push
loope
cli
mov
fdivrp
and
mov
or
jb
testl
in
clc
icebp
arpl
cltd
adc
or
pop
push
jbe
xlat
bnd
pop
pop
gs
adc
mov
push
pop
lret
hlt
or
imul
xchg
sbb
fs
out
ja
xor
fwait
push
rorb
adc
popa
inc
mov
inc
xchg
add
adc
out
push
orl
mov
pop
mov
lret
and
loopne
mov
mov
sbb
jns
lods
pop
push
and
ljmp
dec
outsl
scas
movsb
jmp
push
jb
fsubp
insb
xor
ljmp
pop
adc
mov
dec
movsl
sub
pop
lods
and
mov
int
pusha
xchg
and
adcb
pusha
mov
sarb
incb
or
test
in
mov
jne,pt
pop
mov
into
faddl
add
pop
lret
test
mov
jecxz
les
xor
adc
into
sbb
lahf
mov
inc
mov
test
stos
shrl
or
cmp
and
dec
repz
outsb
in
mov
adc
cmpsb
sbb
and
into
lret
xchg
jb
inc
iret
mov
aaa
sbb
cmp
ret
and
mov
dec
mov
shlb
push
jns
frstor
inc
dec
sbb
lret
jg
push
cwtl
jno
out
xchg
pusha
je
xor
and
les
addr16
mov
mov
inc
push
mov
mov
xchg
push
inc
cmp
fcmovu
test
insl
xor
mov
jecxz
xor
xchg
jne
add
add
fdivl
mov
in
mov
push
mov
add
dec
mov
sub
xor
jb
jp
sbb
jo
xchg
rcr
cmc
sbb
insl
inc
jb
pop
rcrb
dec
aad
bswap
sub
and
add
adc
icebp
mov
cmp
cltd
jae
adc
dec
cmc
mov
mov
sbb
jbe
jg
mov
xchg
xor
sbb
imul
mov
mov
sbb
cmpsl
xchg
out
dec
and
idivb
call
sub
or
and
sbb
cli
cmpsl
cmc
stos
fwait
or
popa
sbb
sub
mov
xchg
dec
daa
outsl
cmp
mov
dec
into
push
sub
lods
jle
inc
add
pop
aad
popf
icebp
mov
mov
insb
js
sbb
pushf
xchg
in
js
repz
push
push
je
hlt
scas
add
jb
mov
cmp
xchg
push
mov
mov
inc
adc
sbb
roll
ja
sub
inc
cmp
pop
jo
stos
and
inc
add
mov
jne
fists
push
subb
imul
stc
fnstenv
jne
divb
data16
xchg
clc
mov
addr16
cs
pop
out
outsb
pop
add
xchg
popf
loope
xchg
fmul
adc
or
and
inc
xchg
jl
int
imul
dec
sub
iret
mov
ljmp
push
push
lcall
enter
mov
mov
out
pop
daa
aad
dec
adc
inc
scas
dec
mov
loope
ljmp
ret
sahf
ds
flds
loope
out
mov
dec
xlat
adc
push
jne
mov
push
push
lret
repnz
mov
test
or
cmp
stc
jge
outsb
pushf
inc
or
addr16
jae
mov
add
movsl
stos
testl
pop
jmp
adc
lods
xchg
xlat
sub
push
xor
popa
xchg
mov
jae
jge
inc
and
fldl
cmp
pop
andl
aad
xchg
mov
cmpsb
les
mov
jbe
std
scas
push
sbb
ja
add
push
xchg
mov
jbe
es
nop
lcall
into
xor
aas
push
aaa
fcomps
mov
xor
pop
outsb
pusha
xor
sub
int3
lds
pop
lret
out
mov
and
add
mov
mov
or
scas
movsl
pusha
push
push
loope
sub
cmp
sbb
mov
ret
call
ret
sub
je
push
push
scas
xor
jb
lods
cmpsb
ds
mov
lods
sbb
jo
loope
aad
dec
xchg
aaa
pop
and
sbb
sub
cmp
sub
stos
shr
pop
jo
outsb
shl
mov
push
sbbb
inc
push
fwait
cmpsb
xor
ljmp
rolb
insl
aaa
pop
mov
movsb
arpl
push
pop
ja
push
mov
fdiv
mov
loopne
clc
mov
adc
addl
xchg
repz
stc
test
test
jg
shl
or
mov
fistps
cmp
sahf
ja
inc
ficoms
into
fsts
mov
mov
lds
sub
mull
mov
mull
pop
inc
imul
xor
aad
ss
jns
jb,pn
mov
je
repnz
xchg
mov
iret
out
lcall
pop
xchg
mov
std
mov
lods
mov
stos
cmpsl
jl
mov
sbb
mov
loopne
cmp
cmp
jo
cwtl
out
leave
pop
imul
inc
adc
js
pop
adc
dec
nop
ljmp
gs
dec
popa
cmp
test
incl
mov
stos
ja
or
clc
loopne
push
push
or
and
popf
inc
jae
jmp
ja
es
mov
adc
movsb
pop
pop
ficomps
inc
xchg
jne
cmpsb
clc
aas
xchg
push
push
or
iret
jle
int3
and
sub
or
mov
jecxz
push
test
scas
jl
mov
pushf
mov
mov
jecxz
dec
adc
cmp
jp
enter
inc
fadds
inc
mov
sbb
push
not
icebp
push
stc
ljmp
out
in
inc
xchg
leave
insl
jo
adc
cmpsb
fistps
jl
imul
mov
fs
xor
icebp
sahf
ficoms
je
orb
xchg
sub
shll
and
idivb
daa
into
popf
aaa
fwait
call
daa
inc
mov
xor
mov
jecxz
fisubs
ret
inc
dec
sub
lock
sub
fptan
pop
dec
aas
and
pop
xor
addr16
mov
aad
in
das
repz
sub
xchg
enter
mov
mov
in
mov
fildl
aam
or
mov
rorl
iret
sbb
xchg
cmp
or
add
lret
or
xchg
mov
test
mov
ljmp
cmpsb
sbb
roll
movl
cmp
pop
jg
sbb
xor
js
icebp
loope
stos
jae
ds
shl
push
cs
jnp
jmp
dec
dec
in
popa
test
test
push
ds
dec
sahf
push
pop
ljmp
insb
jmp
xor
adc
fldl
imul
jecxz
adc
adc
xor
repnz
xchg
fdivs
in
leave
push
xor
fmull
cld
cmpsl
mov
int3
stos
cwtl
adc
ja
pop
in
shl
mov
cld
test
dec
jne
sub
mov
gs
ja
pusha
xchg
cld
pop
nop
push
fiaddl
sarl
mov
and
fsubrs
adc
out
mov
mov
fiaddl
test
mov
add
clc
mov
and
cmp
dec
dec
push
add
out
mov
cmpsb
fisttpl
sub
inc
mov
data16
aad
pop
imul
and
xchg
mov
push
lea
je
int3
cs
cmp
std
daa
fcomps
lock
popa
cmpl
xor
jmp
xor
in
or
bound
cmp
clc
aam
fs
cmp
lahf
aad
mov
in
bound
aad
adc
add
cli
cmpsb
rorl
jb
daa
mov
mov
xchg
lock
adc
out
ds
push
pusha
push
insl
mov
add
inc
xor
xor
xorl
int
popf
daa
repnz
push
mov
cmp
mov
mov
dec
in
push
sahf
push
cmpsb
push
push
lock
dec
call
dec
push
adc
rcrb
loope
add
bound
out
add
sbb
aam
fs
das
in
push
adc
idivb
push
xchg
lods
iret
fwait
stos
pop
or
int
xchg
rclb
and
adc
cmpb
cmpsb
pop
aad
jecxz
cld
sti
jle
lret
pop
xchg
imul
in
push
jge
mov
cs
into
ljmp
ja
mov
and
icebp
leave
cltd
mov
fistpl
xchg
sbb
and
push
cli
icebp
inc
lds
inc
daa
pushf
imul
daa
xchg
ljmp
cltd
inc
add
cmp
or
jne
mov
and
push
ds
mov
push
ret
jmp
inc
adc
pop
loope
shlb
cmp
negb
popa
test
int
ret
dec
daa
fistps
pop
jae
ret
in
mov
xor
ja
repnz
mov
popa
push
hlt
adc
cmp
inc
lods
dec
jg
addr16
or
push
cmpsl
push
push
shl
lock
es
xchg
rcrl
sbb
cmpsl
fprem1
pop
push
es
jg
ret
pop
push
jmp
inc
dec
or
mov
xchg
icebp
outsb
mov
add
cld
dec
sahf
cmpl
add
or
adc
dec
mov
fs
and
std
add
aad
cmp
fwait
jae
inc
cwtl
jmp
push
xorb
cli
xchg
pop
lret
push
add
arpl
popf
xor
iret
je
testl
lret
xor
xlat
xchg
jl
loop
inc
insl
xchg
dec
jno
push
fisubl
add
mov
jbe
imul
mov
ja
movsb
pop
bound
adc
inc
int
fimull
lcall
pop
mov
outsb
jmp
repz
jo
pop
lcall
push
xchg
inc
addr16
sbb
or
ds
pop
xlat
ret
std
jl
sbb
cld
xor
out
ja
call
sahf
rcrb
outsb
rclb
mov
test
jg
hlt
nop
mov
dec
mov
shll
jecxz
shrb
arpl
dec
stos
cmp
mov
cmp
or
push
sti
les
imul
ljmp
and
outsb
insb
sbb
mov
and
ljmp
dec
jo
into
roll
xchg
add
aam
ret
xor
movsl
cs
dec
fidivl
fwait
insb
jb
out
add
imul
pop
add
fcompl
scas
mov
outsl
xor
xor
cmpsl
rcll
and
mov
out
sub
testl
gs
mov
inc
test
sbb
hlt
ror
addr16
adc
cmpsl
in
or
ljmp
dec
adc
repnz
inc
xor
dec
pop
dec
jg
adc
movsl
das
aam
cmp
sbb
xor
ds
and
adc
jecxz
push
mov
loopne
adc
inc
pop
dec
cmp
mov
xor
das
out
in
jmp
pop
dec
aam
push
mov
subl
add
negl
inc
setno
mov
enter
jmp
packssdw
adc
jmp
jnp
ss
sub
cmp
fwait
or
test
add
adc
mov
clc
sub
out
addr16
add
inc
js
xorb
das
test
lds
mov
cmp
pop
icebp
cmp
sub
out
das
pusha
clc
test
or
mov
bound
cwtl
insb
xchg
push
cld
mov
clc
js
or
xchg
out
and
sbb
les
movsl
fnstsw
iret
push
das
mov
arpl
ret
push
lock
stos
cwtl
jno
fwait
jb
jb
xor
jae
leave
lret
fdiv
rol
ds
aas
fdivs
xchg
and
jbe
fstps
adc
add
adc
jmp
push
call
arpl
pop
in
test
add
mov
aad
testl
daa
adc
and
sub
push
push
mov
jb
flds
inc
sub
lret
dec
lcall
lcall
and
dec
in
ja
insl
mov
sbb
roll
push
jge
jae
fxch
dec
daa
lods
jnp
ds
enter
pop
jle
xor
sarb
sub
mov
cmp
add
inc
jg
je
sbb
fcoml
pop
mov
bound
bound
daa
in
clc
and
sbb
ljmp
xchg
mov
in
je
push
push
leave
mov
mov
daa
inc
and
or
and
leave
fnsave
add
push
cli
mov
iret
ja
xlat
inc
out
sub
jge
pop
test
mov
xor
ljmp
push
jnp
aaa
xor
test
push
out
mov
out
movsb
aam
mull
jmp
std
pop
xlat
adc
sub
pop
repnz
cli
push
mov
mov
push
movsl
mov
mov
cmp
loope
dec
repnz
cmp
pop
ficoml
dec
cltd
gs
inc
sub
bound
out
push
pop
addr16
cmp
mov
push
add
lock
outsb
pusha
scas
sbb
pop
mov
lock
mov
shll
shll
or
dec
push
call
repnz
pop
movsb
addr16
mov
movsb
scas
out
aas
mov
cmp
dec
or
cmp
add
cs
mov
adc
adc
lahf
mov
into
add
or
xor
jmp
test
fnstcw
das
cmpsb
test
js
ret
push
dec
pop
lods
sti
cmpsl
add
or
mov
test
iret
mov
or
pop
mov
jle
pop
mov
xchg
test
xchg
xor
sub
movsb
push
xchg
jecxz
xchg
lahf
inc
mov
mov
mov
mov
xchg
icebp
xor
jmp
adc
in
test
aam
clc
stos
mov
fwait
inc
or
push
push
inc
xchg
sti
cmc
jbe
mov
fdivl
mov
int
sarl
stos
inc
fwait
lahf
enter
push
pop
gs
adcb
test
dec
adc
add
ljmp
jecxz
push
mov
aaa
ja
sti
sub
mov
xchg
enter
or
push
addl
negb
mov
jmp
inc
fcmovb
jle
and
mov
mov
jo
sbb
mov
jae
cli
sub
rcrb
fisubrs
es
or
jb
roll
push
outsb
sti
loop
repnz
or
cmp
dec
sti
pop
fcmovne
push
imul
ljmp
pushf
and
push
cmpsl
pop
aam
jmp
pop
leave
mov
enter
in
cs
fadd
int
add
jns
enter
and
test
and
push
cmp
inc
out
nop
popa
jns
push
mov
and
decb
xchg
aaa
sbb
out
xorb
add
rorl
clc
fwait
xchg
aaa
std
aam
test
and
mov
cld
xor
cltd
scas
dec
jno
dec
mov
mov
insl
int
jnp
xor
aad
dec
and
sbb
or
mov
mov
lods
sbbl
loope
inc
mov
hlt
andl
pop
lahf
push
mov
inc
and
lods
cli
inc
arpl
aas
cli
add
bound
in
repz
jne
dec
cmp
push
daa
incb
testb
push
sub
mov
lock
adc
or
adc
js
or
aad
movsl
xor
popf
add
imul
rorl
je
add
ljmp
dec
dec
sbb
mov
jecxz
fidivl
add
loop
fildll
or
fwait
mov
xchg
sahf
popl
push
xchg
addl
push
mov
push
imulb
adc
jnp
jle
jae
call
jbe
outsb
sub
adc
insb
mov
jno
sbb
dec
jge
fucom
mov
xor
or
cmpsb
int3
jne
jp
push
test
loop
lea
add
insb
push
push
mov
add
insl
adc
add
shlb
inc
jl
test
fldt
lods
decl
mov
out
push
adcl
mov
add
fs
cs
fst
or
mov
dec
andb
cmpsb
sbb
mov
inc
mov
adc
inc
dec
repz
loopew
lods
mov
add
jbe
mov
jle
data16
test
nop
lahf
add
inc
inc
jo
cmp
in
testl
sti
ljmp
or
inc
inc
test
add
jecxz
push
int
or
mov
xchg
mov
movsl
in
dec
loope
pusha
test
or
imul
xchg
mov
in
arpl
push
mov
gs
jle
dec
pop
subl
sub
test
enter
push
xchg
jmp
dec
pop
mov
push
or
or
fsubrl
sub
jg
inc
xchg
mov
lahf
pop
dec
xor
loop
inc
jo
pop
insl
enter
jl
sub
jnp,pn
cmpsb
insl
jo
pop
xor
or
and
dec
frstor
sub
xor
inc
loope
dec
inc
adc
cld
pusha
mov
cmp
dec
xchg
orb
and
call
push
sub
ror
pop
in
ss
repz
divb
xor
outsl
inc
jnp
add
and
inc
pop
out
push
add
mov
inc
movsl
outsl
mov
int3
je
ljmp
push
je
jg
and
xlat
push
aam
sbb
xor
outsl
inc
lret
or
pop
sbb
xor
sti
testl
mov
mov
shll
shl
or
leave
or
xor
mov
and
into
les
jo
mov
xchg
out
subl
je
or
fcom
lret
and
mov
cmp
cmp
into
cmp
xor
mov
xchg
shl
xor
shlb
sbb
or
dec
call
shll
mov
pop
push
sbb
push
pop
adc
push
pushf
in
or
sbb
sti
pop
lret
mov
xchg
cmpsl
adc
xchg
jnp
inc
xchg
push
fsub
xlat
jne
push
call
fisubrl
mov
inc
aas
cmp
ljmp
jp
std
pop
jb
cltd
divl
mov
in
std
das
mov
xchg
adc
cld
shr
in
cmp
scas
add
mov
nop
jmp
push
movsb
mov
mov
shll
and
lock
ret
mov
mov
jle
insl
push
nop
mov
push
dec
add
mov
push
push
jnp
nop
mov
repz
cmp
in
lret
sbb
xchg
xchg
sbb
fbld
cld
inc
add
mull
cwtl
cmc
dec
add
push
adc
fdivp
js
adcb
lret
movsl
mov
addr16
lcall
cmp
cmc
stc
cmpsl
lret
rcrb
call
xchg
jmp
cmpb
inc
mov
rclb
pop
testb
imulb
or
decb
movsb
das
xchg
sub
push
add
stos
fldt
mov
aas
or
fs
and
cmpsb
sbb
mov
and
call
pusha
push
inc
sbb
out
call
mov
int3
aas
mov
jae
dec
pop
xorl
in
push
sahf
push
pop
dec
mov
or
jge
in
rorb
fcoms
sarl
loopne
cld
xchg
cmp
and
out
cmp
push
adc
mov
mov
mov
orb
lret
cld
jge
addl
int3
pop
stos
cwtl
loope
pop
add
xchg
lret
iret
push
push
xchg
inc
repnz
stos
or
in
xchg
fdivrs
pushf
dec
es
pop
push
adc
adc
inc
incl
push
push
and
mov
div
inc
clc
pop
jno
mov
mov
fsubrl
and
bound
out
popf
cmp
test
idiv
pushw
nop
xlat
mov
aaa
or
add
sti
popf
popa
mov
adc
inc
icebp
shl
xlat
jecxz
mov
dec
insl
pop
insl
push
roll
enter
stos
fs
xor
in
ljmp
loope
cli
movsl
lea
leave
sub
cwtl
mov
ds
mov
pop
xchg
jnp
mov
mov
mov
icebp
ljmp
dec
mov
pop
das
and
test
sti
decb
orb
test
out
mov
cltd
jl
sub
pop
jp
lock
pop
add
int3
jle
out
mov
repnz
xchg
loopne
lock
and
in
insb
aad
lods
fsub
rcl
out
fldenv
scas
fadd
leave
mov
cmc
push
lret
sbb
add
rcrl
xchg
xstore-rng
cmpsl
test
int
push
loope
pop
adc
imul
and
push
add
sub
out
ljmp
lret
imulb
rcl
adc
mov
add
push
xchg
and
xor
adcb
adc
push
adc
or
aaa
mov
inc
or
push
mov
das
je
scas
dec
inc
push
dec
lret
lret
mov
or
sahf
cmc
inc
xor
jge
ljmp
cli
inc
dec
jne
jbe
or
dec
pop
pop
imul
stc
in
push
push
test
mov
jl
cs
cld
out
jb
mov
pop
loopne
gs
cmp
ret
pop
lahf
and
mov
sbb
inc
loope
jbe
cwtl
cmpb
mov
sbb
xor
cld
pop
mov
pop
orb
insb
xchg
arpl
fisttpll
stos
push
in
insl
xchg
mov
rcl
xor
ja
xchg
out
bound
ja
pushf
repnz
mov
and
sbb
test
repnz
testb
stos
mov
jl
mov
popf
or
out
in
bound
mov
sub
add
sub
js
mov
cmp
aad
xchg
and
mov
add
cli
out
out
sbb
sub
add
aad
arpl
and
aaa
add
dec
xchg
or
jmp
push
sar
cmc
lods
dec
mov
xor
mov
fwait
ja
add
ret
lret
push
xchg
sub
ss
adc
inc
push
jmp
ficomps
mov
les
mov
fs
test
cmp
movsl
ror
or
cltd
test
clc
jb
mov
add
cld
and
cs
roll
mov
sub
mov
mov
mov
enter
jp
addr16
and
pop
xchg
lret
or
lret
or
int3
sbb
data16
pop
add
gs
mov
xlat
out
movl
popa
mov
mov
iret
inc
dec
xor
jno
push
mov
jle
jb
std
pop
dec
fucomi
scas
xor
lds
out
and
push
fisttpl
rol
aas
gs
dec
sub
pop
iret
sar
xchg
in
xor
aad
or
fs
ret
fwait
aaa
xor
int
add
sub
and
out
daa
rcr
aas
fimuls
push
out
or
dec
imul
cmp
mov
adc
ljmp
negl
cmpsb
inc
stos
les
xchg
shll
cmp
and
stos
cmp
mov
add
pop
pushf
mov
bnd
inc
sti
pusha
sbb
pusha
pushf
jnp
rolb
xor
mov
faddl
push
or
pop
inc
insb
cmc
loop
or
xchg
adc
or
into
daa
cmpsl
icebp
jl
fstps
inc
cmp
repz
arpl
lock
lea
jo
ja
jbe
push
out
cmpsl
mov
jne
lret
rolb
imul
imul
in
push
insb
fsubl
sbbb
stos
xor
jns
cmovg
jb
or
xchg
add
ss
mov
mov
push
adc
test
aas
pop
jb
jns
test
orl
mov
movsb
and
cli
scas
jne
aas
lret
dec
aas
testb
or
incb
push
mov
and
les
filds
sub
out
roll
jae
adc
test
imul
pop
shlb
sub
in
ret
dec
push
cmp
ja
bound
test
mov
push
mov
xchg
jecxz
mov
xchg
push
pop
test
push
add
in
fisubs
jns
lahf
outsb
mov
fldl2e
fs
or
push
aad
or
js
loopne
iret
iret
outsb
insb
aaa
jp
dec
test
xchg
out
jmp
push
arpl
mov
scas
scas
ret
jg
or
pop
jb
push
loop
add
cmpsl
push
or
enter
push
xchg
dec
mov
mov
outsl
mov
out
ds
pop
rclb
dec
mov
jl
dec
fnstsw
outsl
pop
in
add
jp
dec
jbe
rcl
enter
call
and
xor
pushf
jg
fldt
sbb
aaa
and
fisttpll
or
inc
xchg
js
cwtl
ss
pop
cmpb
push
lahf
lds
xchg
in
stos
pop
push
pop
dec
push
pop
mov
aas
mov
rorl
and
dec
iret
icebp
loopne
sbb
jne
enter
es
pop
dec
xor
jmp
inc
fisubs
xchg
fadds
jl
pop
incb
arpl
iret
addb
cli
nop
jns
push
jg
mov
pop
cltd
mov
mov
ds
pop
out
pop
sbb
mov
jge
aad
out
sbb
adc
xlat
push
je
cltd
xor
outsl
ss
add
fidivrs
ror
test
fcompl
mov
ljmp
repnz
sub
xor
ret
sub
sbb
add
daa
dec
mov
cwtl
stc
lds
xchg
addb
shll
lcall
movsl
out
mov
icebp
push
or
sbb
into
xchg
adc
push
or
push
sbb
push
gs
hlt
sbb
pop
mov
pop
fstpl
sub
jno
call
jne
test
jecxz
or
mov
xor
dec
lcall
out
xor
leave
cli
cmp
fs
xor
fmulp
insl
ljmp
dec
fsubr
and
mov
lret
sbb
push
mov
aaa
aad
movsb
mov
pop
in
dec
jmp
repnz
sahf
and
lods
int3
aaa
mov
jno
scas
push
call
insl
jle
dec
ja
divb
cld
nop
ja
dec
in
dec
andb
das
push
or
gs
jmp
push
out
cmpsb
int
sbb
ja,pt
inc
cltd
sbb
inc
out
arpl
ljmp
push
inc
loop
sub
leave
sbb
mov
jbe
push
lock
and
jae
adc
mov
sub
mov
call
in
adc
loope
mov
mov
cmp
stos
aam
push
mov
add
clc
loope
mov
lock
cmp
mov
xlat
dec
out
push
fisttpll
xchg
mov
dec
jno
mov
mov
lret
add
ret
xor
pop
adc
repnz
ja
mov
out
push
mov
and
sbb
push
das
add
jns
adc
cmp
and
icebp
mov
pop
mov
aas
sarl
cltd
mov
outsl
imul
sti
test
stc
xchg
mov
out
popa
mov
imulb
mov
mov
adc
cmp
add
lods
xchg
mov
js
loope
jb
sbb
jbe
sbb
cmpsb
sbb
cld
mov
movsl
mov
pop
xchg
inc
cmp
aad
inc
xor
mov
fdivl
and
loopne
into
or
add
out
jns
fs
mov
adc
insb
scas
daa
mov
jge
jge
lods
xor
sub
nop
out
std
push
adc
mov
roll
aam
inc
mov
cmp
jne
push
mov
xchg
stos
mov
xchg
fstpl
jae
mov
imul
iret
inc
fstps
sub
roll
and
xorb
cli
shll
add
daa
push
push
nop
pop
and
mov
fsubrs
shll
movsb
jle
pop
imul
fs
mov
inc
xchg
das
popf
sti
jns
lods
je
mov
cmp
stos
lret
jbe
stos
xchg
mov
rclb
pop
gs
jne
push
ffreep
gs
outsl
hlt
sub
xor
and
loopne
rolb
or
sub
es
jmp
mov
testb
cli
cmc
dec
aam
push
adc
pop
sub
out
ja
aaa
gs
jl
push
out
sbb
aaa
movsl
cmp
pop
pusha
in
into
int3
jnp
lods
inc
imul
cmp
mov
lcall
mov
jecxz
mov
xchg
pop
xlat
lcall
jno
imul
enter
sahf
xchg
movsl
std
jbe
fdivp
lods
push
mov
daa
lea
daa
enter
sub
jg
inc
inc
push
adc
xor
sub
and
xlat
clc
sbb
test
dec
sub
out
mov
sub
scas
scas
cmp
and
cmp
mov
ret
add
sub
dec
inc
jb
pushf
jp
packsswb
xchg
ss
inc
sbb
cmp
jno
xor
dec
shlb
imul
adcl
sub
dec
aaa
shlb
add
add
pop
jle
dec
or
cmpsl
pop
je
shrb
or
mov
inc
pop
fistpll
mov
fs
cmp
into
jne
push
popa
icebp
pop
gs
cmpsb
test
int3
ja
imul
adc
xchg
imul
push
loope
movsl
push
lret
sub
push
cs
loop
cld
sbbl
and
shlb
divl
sti
cmc
cmp
xor
leave
in
mov
pop
and
push
mov
pop
stos
out
xchg
sub
or
lret
idivb
xchg
mov
mov
sbb
adc
cmp
inc
pop
sbb
scas
mov
sahf
jp
mov
enter
daa
into
popf
ja
cmp
adc
sub
shll
jge
pop
mov
pop
xorb
pop
scas
lds
addr16
jo
mov
dec
inc
lods
insb
fucomp
daa
add
mov
sbb
lods
and
out
in
das
ja
ret
addr16
test
out
and
cmp
mov
lea
push
nop
cmc
pushf
insb
test
xchg
insl
jno
push
andl
cmp
fstl
push
adc
mov
dec
and
or
int3
xchg
insb
push
aaa
lret
stos
jge
pop
mov
lea
xchg
aaa
mov
push
repnz
mov
in
sbb
or
mov
and
out
inc
inc
jne
pusha
cld
mov
mov
es
outsb
sub
cli
add
pop
and
jg
leave
mov
ja
in
in
mov
adc
aaa
sub
mov
mov
jl
and
jp
das
inc
lock
test
jnp
lcall
sub
mov
jns
push
ret
mov
xchg
sbb
ret
das
mov
imulb
inc
rcrb
mov
in
rcll
xor
pop
cld
fmull
xorb
jmp
xchg
xor
push
js
pop
test
jnp
in
push
cmp
xor
pop
xchg
imul
imul
mov
jl
sti
bound
or
push
mov
fcoml
pop
jg
cmpsl
push
lods
add
add
ljmp
and
sub
push
mov
fsubl
push
xchg
scas
leave
lret
dec
shrl
inc
xor
aad
or
add
dec
xchg
cld
pop
add
data16
out
pop
int
push
orb
inc
mov
testl
push
ss
ja
xlat
out
mov
sarb
pop
jns
mov
sahf
mov
repnz
add
xchg
push
inc
inc
sbb
push
jmp
push
test
dec
pop
xchg
pop
or
fwait
jmp
xchg
pop
sub
push
outsb
js
fistpll
mov
pop
mov
add
cmp
es
scas
cmc
adc
std
repnz
decb
cmpsl
sub
inc
cmpsl
jg
push
add
push
out
pop
bound
lret
push
jle
sarl
out
nop
stc
leave
add
lahf
hlt
or
jmp
scas
mov
or
leave
push
aam
icebp
pop
add
add
lods
xchg
mov
mov
xchg
fdivs
mov
and
hlt
adc
mov
push
js
daa
inc
pop
fidivs
dec
cld
adc
std
inc
pop
jle
or
pop
and
dec
inc
pop
pushw
sub
aam
mov
dec
or
aaa
xchg
jnp
mov
subl
inc
pop
enter
test
adc
sub
lods
into
les
mov
pop
ficoml
jo
ljmp
inc
xchg
mov
xor
icebp
pushf
sbb
mov
insb
popl
icebp
jbe
xchg
mov
lret
mov
scas
xor
mov
cmp
jne
xchg
mov
xor
bound
dec
mov
loop
popa
xchg
inc
inc
repz
clc
lods
pop
or
fistps
and
ja
xor
arpl
das
fs
pop
mov
push
or
pop
xlat
add
sub
dec
inc
dec
loop
adc
pusha
popl
test
in
jmp
pushf
test
std
in
les
xor
and
xchg
popa
mov
add
push
lock
mov
lock
mov
jl
popa
push
in
xchg
mov
fmul
shrl
inc
push
shrb
xor
pusha
je
cmc
mulb
shll
xor
mov
sti
jo
aaa
aad
jle
pop
xchg
mov
je
and
fsubrl
mov
sarl
in
and
inc
cmpsl
je
mov
jg
mov
scas
pushf
repz
div
stc
add
sbb
sbb
mov
jp
and
popf
insb
in
mov
cli
nop
scas
int3
addr16
roll
into
jno
jo
jg
add
pop
xchg
xchg
adc
cmp
mov
jle
add
cmpsb
or
xchg
push
loope
dec
pop
push
jne
insb
clc
cmp
movsb
jbe
jbe
sub
inc
sti
add
call
call
sub
shl
arpl
mov
pop
loop
out
outsb
xor
stos
test
ja
mov
xchg
pop
lods
dec
or
or
dec
shrb
aas
jno
rorb
sub
lock
push
mov
fists
or
fs
addb
xchg
loope
mov
lret
jne
out
jne
push
cltd
adc
pop
sbb
sbb
ret
xchg
jmp
sub
mov
pop
dec
scas
data16
xor
pop
outsl
pop
imul
or
xor
mov
test
xchg
gs
arpl
mov
out
fdivl
jge
pop
dec
lcall
mov
lods
xchg
decb
push
cmc
xor
test
repnz
loop
dec
mov
loop
jae
mov
sub
je
and
mov
std
push
cmpl
mov
add
or
mov
xchg
inc
stos
sbb
fistps
adc
add
pusha
jecxz
aaa
xchg
int
xor
lods
pop
or
adc
ret
inc
les
adc
loop
lret
fdivrl
inc
cltd
jnp
add
decl
shrl
adc
xchg
cmp
sbb
scas
sub
jbe
dec
outsl
aad
ret
scas
fwait
and
jnp
scas
push
or
movsl
or
mov
jo
ret
dec
outsl
adc
sub
in
addb
sbb
int
push
mov
or
nop
sahf
mov
int3
insl
push
subb
sbb
cmc
filds
shlb
test
and
push
xchg
repnz
fsub
insb
mov
adc
cmp
sub
repz
push
xchg
sahf
sbb
icebp
dec
or
xchg
and
enter
inc
and
fsts
imul
and
daa
mov
out
mov
or
inc
adc
imul
flds
leave
cli
mov
test
imul
cs
xchg
lcall
idiv
mov
mov
testl
popa
sub
les
scas
mov
aaa
pop
mov
iret
es
dec
mov
mov
jp
out
mov
push
or
popf
cmc
pop
jb
push
add
lret
jl
sbb
movsb
lds
rorl
and
testb
negb
jp
ldmxcsr
mov
mov
dec
fs
enter
sbb
aaa
push
push
inc
push
cmp
das
inc
cmpsb
jp
dec
fsubl
je
sbb
add
notb
xchg
lock
pop
jnp
and
or
cmc
xor
hlt
sub
dec
push
jns
cmp
pushf
adcl
mov
mov
cmpsl
push
imul
out
mov
jmp
cmp
insb
mov
xchg
sub
cmc
rcrb
out
movsb
shl
sbb
aas
lahf
mov
bound
test
pop
rclb
mov
repz
ljmp
cmp
cwtl
jg
sub
aas
xchg
jge
fnsetpm(287
sahf
sbb
push
jbe
ret
xchg
out
insl
and
into
dec
pop
pop
mov
push
push
jge
pop
fistps
stos
mov
pop
and
pushf
dec
insl
daa
mov
ret
pop
in
mov
and
mov
fs
cltd
das
jge
pushf
faddp
pop
jge
movsl
fstpt
and
mov
jae
sub
fwait
aaa
cli
adc
xchg
xchg
dec
sub
jnp
int
ret
jmp
sub
mov
flds
xor
fistl
test
or
andb
std
out
lret
cmp
or
mov
lcall
out
sub
cwtl
addr16
popa
xchg
frstor
mov
js
push
fimull
aaa
dec
and
or
mov
pop
or
into
xor
cmp
cmp
cmp
cmp
inc
cs
jns
pop
xor
inc
push
or
fidivs
ljmp
fs
mov
and
and
or
jb
int3
xchg
lret
shlb
xor
aas
jnp
popf
mov
addr16
test
cli
call
lock
inc
jle
out
mov
pop
dec
xchg
mov
pop
mov
call
rorb
adc
out
jne
ja
ljmp
jg
push
jno
mov
popa
xchg
pop
das
lds
pusha
cmpsb
xor
idiv
cltd
movsb
adcl
jno
out
gs
jge
add
in
jecxz
dec
adc
push
repnz
and
aaa
out
xchg
inc
dec
sahf
cmp
push
inc
addr16
xor
neg
lret
adc
add
push
shll
cmp
cmpsl
adc
ret
cltd
or
pop
push
aaa
jle
mov
sbb
pop
addl
je
pop
out
adc
mov
stos
mov
cld
push
add
in
enter
and
dec
dec
clc
adc
add
insb
push
clc
lock
test
or
sub
pusha
pop
lea
stc
rcrl
or
in
in
test
pushf
sub
inc
xchg
pop
nop
cs
pop
mov
jnp
mov
movsl
push
xor
pop
idiv
mov
mov
or
in
addr16
jecxz
lea
add
sub
data16
xchg
add
fmulp
repnz
outsb
rolb
mov
je
add
arpl
fs
cmp
push
in
mov
int
les
mov
sbb
pop
xchg
repnz
inc
cmp
outsb
xchg
adc
shll
loop
mov
pop
fwait
mov
push
in
inc
mov
ss
push
loop
pcmpgtb
lods
jo
jae
jl
loop
outsl
add
adc
insl
ljmp
aaa
stos
sbb
push
xor
fldenv
rcrb
fiaddl
dec
dec
pop
loopne
xor
dec
rorb
xor
mov
rcr
out
jge
notl
int
insl
arpl
in
call
adc
aam
dec
mov
xor
cltd
cltd
repnz
in
add
cld
cmp
cli
lahf
cs
adcl
popa
mov
cwtl
shr
mov
mov
pop
push
mov
pop
mov
push
daa
call
mov
lods
cli
jb
dec
and
gs
push
dec
stos
scas
popf
jo
pop
cmp
mov
jg
cmpsl
push
xlat
testb
jnp
or
inc
or
idivb
mov
decb
lea
mov
test
mov
sub
mov
adc
mov
cld
pusha
xor
jp
lods
push
fwait
mov
sahf
int3
iretw
inc
imul
push
aaa
add
push
and
push
cmp
negb
sbb
add
lods
xchg
sahf
mov
mov
mov
repnz
test
mov
mov
movsb
subb
inc
and
or
leave
mov
pop
out
repz
xor
sti
insl
aam
pop
loopne
jno
call
sub
adc
mov
pop
cmp
popa
pop
xchg
lcall
lret
mov
add
mov
inc
or
inc
jno
stos
pushf
add
or
lea
sbb
cmp
xor
dec
lods
rcrb
jae
xor
int
dec
pop
xor
clc
jmp
add
sbb
sahf
in
in
fsts
into
ror
push
push
cmp
cmp
lds
ficoms
push
adcl
bound
mov
and
xchg
aas
cmpb
or
fimuls
xchg
jb
dec
mov
jge
or
inc
cmp
rcrb
hlt
mov
loopne
xor
dec
ss
repz
mov
pushl
jg
stos
nop
ja
out
mov
call
lahf
inc
jle
test
inc
pop
and
fsubr
jo
mov
jle
lods
lds
sbb
data16
addr16
movsl
fildll
daa
imul
je
imul
jns
test
fcomi
rorl
test
push
sti
out
mov
fcoml
divb
movl
popa
mov
fdivp
push
sahf
pop
jns
out
movsl
jmp
pop
pop
mov
loop
pop
aas
sub
lahf
xchg
push
add
cmpl
out
adc
lret
cmp
push
cltd
je
shll
jmp
addb
pushf
imul
call
lea
inc
xchg
xor
push
mov
and
sub
repnz
and
pusha
hlt
cmc
push
cmp
or
inc
jae
shlb
mov
and
fcmovnu
int3
sub
and
cmp
jge
add
mov
mov
loopne
push
xchg
jbe
dec
or
insl
in
xor
or
mov
adc
adc
xor
pop
pop
pop
pop
lea
sub
fdivs
xchg
clc
test
fimuls
xor
cmp
mov
mov
fldcw
add
xor
mov
scas
repnz
push
imul
mov
dec
inc
sbb
pushf
xchg
push
pop
xor
roll
loopne
sbb
adc
mov
and
cmp
jnp
lods
mov
in
xor
bnd
frstor
daa
je
pop
lods
jns
sbb
insl
mov
loop
ret
lcall
sti
dec
cmp
cld
adc
call
leave
inc
out
xchg
js
jbe
mov
cmp
repnz
ret
pop
or
lock
dec
dec
and
in
lea
ss
mulb
popa
in
lods
rcll
add
and
movsb
pushl
pushf
xor
icebp
hlt
nop
mov
jno
add
sub
sub
xlat
repnz
sar
das
xor
or
xor
shl
push
repnz
repnz
ja
jae
daa
loop
push
cmp
mov
subb
xchg
sbb
pop
push
adc
dec
fcoms
dec
decl
pop
icebp
cmp
pop
leave
or
ds
xor
jno
mov
pop
insl
scas
dec
bound
lret
js
lds
pop
cmc
rorb
mov
mov
mulb
dec
mov
incl
nop
movsb
pop
mov
dec
mov
stos
fidivrl
rorl
mov
rorb
pop
add
or
hlt
mov
loope
imul
xchg
jge
mov
cmp
test
add
xchg
adc
add
repnz
aad
pop
jo
int
test
cmp
mov
jb
ret
inc
mov
test
out
sbb
xor
or
insb
les
jl
subl
icebp
mov
cmc
ds
not
adc
pushf
fistpll
inc
mov
imul
aad
mov
mov
fdiv
mov
sahf
rcrb
imul
fdivrs
cmpl
les
shll
aaa
aam
sub
mov
mov
jno
ret
xchg
mov
pop
mov
mov
arpl
or
mov
sbb
dec
and
push
popf
enter
cmp
sub
adc
flds
cmp
mov
lea
push
dec
pop
cmpsb
xchg
int3
ja
nop
mov
sbb
in
ficomps
cmp
es
dec
add
dec
cli
inc
ret
dec
js
out
jg
xor
xchg
cld
ret
ds
cmpb
mov
iret
xlat
xchg
sub
add
dec
pop
ret
frstor
cmp
and
pop
fisttpll
rcr
sbb
mov
out
mov
jbe
jns
nop
xor
iret
mov
aam
rcrb
or
stos
ficomps
jbe
xchg
mov
rol
dec
and
mov
pushf
xor
fcomps
jl
out
jmp
jnp
jno
xchg
sub
sti
shlb
dec
cmp
mov
xor
sub
mov
sub
xchg
pop
mov
mov
lock
mov
jne
jg
sub
xor
clc
rcll
adc
jmp
mov
jl
sub
into
mulb
aas
mov
cmp
dec
add
cs
data16
out
dec
aam
jno
fdivl
adc
adc
jl
les
pop
int
jne
mov
pop
xorl
cmpsl
aaa
sub
sbb
jecxz
mov
cltd
popf
faddl
sub
lods
int
xchg
jnp
and
std
pop
lds
in
push
pop
adc
test
push
xchg
arpl
lock
popa
pop
xchg
mov
in
fdivrl
imul
and
cmp
and
dec
dec
inc
pop
das
or
or
mov
jge
imul
jno
cmpsl
jne
jb
mov
inc
pop
xor
mov
imul
sub
fildl
xchg
imul
xchg
sbb
xchg
aas
dec
jns
leave
mov
lret
adc
cmp
ret
xor
outsb
push
dec
and
into
mov
pop
mov
mov
iret
sub
mov
inc
cmp
mov
out
orb
insl
fcomps
or
pop
mov
or
push
test
jbe
scas
mov
pop
inc
jno,pn
ret
or
mov
xchg
xchg
mov
int
sahf
mov
dec
testb
pop
jbe
cmpsb
lock
stos
jmp
shrb
jno
test
mov
decl
xchg
inc
cli
mov
push
iret
sub
sub
dec
cmp
mov
and
inc
dec
sub
repz
mov
mov
xchg
cld
std
mov
inc
mov
bound
lds
adc
or
adc
xor
xchg
shlb
add
jl
addl
addr16
mov
sub
jb
repz
dec
call
clc
cld
xchg
fists
pop
movsb
shrb
xor
adc
jmp
es
imul
dec
mov
xchg
daa
xor
jle
mov
loop
add
adc
jbe
adc
jns
shll
aad
dec
in
into
dec
xor
jae
cmc
push
jge
xor
or
into
loope
jp
pop
stc
cmp
je
test
leave
mov
mov
int
bound
cmp
and
lret
fldcw
js
cmp
popf
xor
inc
push
mov
or
dec
sbb
idivl
mov
popf
movsb
int
xor
movsb
push
cmpsb
lcall
addb
xor
sahf
js
aad
inc
sar
fsub
sub
xor
or
pop
jmp
mov
daa
dec
mov
sar
pop
adc
fdivrl
or
mov
jecxz
call
and
adc
int3
arpl
je
push
mov
mov
je
in
lahf
pop
scas
dec
mov
mov
sbb
jp
inc
sti
xchg
adc
push
out
inc
jge
or
mov
clc
jbe
dec
mov
mov
nop
sub
push
pop
nop
jmp
nop
mov
mov
ficompl
mov
and
pop
mov
xor
push
decl
fwait
in
cwtl
jp
pop
iret
mov
mov
sbb
jmp
ffree
je
call
mov
cmp
add
out
add
aas
repnz
in
shlb
jge
mov
fstl
jecxz
js
pop
fistl
add
adc
push
sbb
fldcw
inc
shr
loopne,pt
cmpsl
arpl
lods
inc
inc
add
mov
mov
pop
bound
into
movsb
pop
pop
mov
stos
out
push
imul
movsl
fimuls
pop
push
ret
negb
popa
je
and
out
inc
sbb
ds
dec
xchg
lock
decb
xchg
jle
int
lret
cmpsb
fisubs
inc
popf
or
pusha
dec
jnp
cmp
push
sbb
das
aas
int
addr16
mov
aam
testl
inc
jle
loop
outsl
adc
mov
das
ja
push
aam
push
xor
xchg
pop
or
push
sbb
lock
push
data16
cmp
shlb
xchg
mov
jge
movsl
mov
fsts
cmpl
testb
mov
mov
add
popf
and
ljmp
nop
jp
je
loop
mov
std
jg
pop
or
cmp
int3
sub
cmp
pop
lea
sub
jb
mov
push
jns
mov
fcoml
push
call
push
stc
icebp
cmpsl
cmp
data16
push
aaa
push
push
cmp
xor
add
insl
fidivs
sbb
sub
lock
push
out
cmp
jnp
sahf
adc
out
arpl
dec
mov
push
sbb
testl
lea
incl
push
xor
lock
push
lods
pop
outsl
xchg
mov
adc
rcr
gs
mov
sub
dec
jp
sub
adc
call
or
fistpll
add
mov
int3
outsl
dec
fs
testb
test
jb
imul
mov
and
xor
gs
cld
jge
mov
cs
iret
adc
ret
ret
lea
pop
or
aaa
sub
sbb
dec
pop
inc
cmp
xchg
add
jns
mov
scas
in
mov
xchg
adc
push
push
ret
push
pop
inc
or
rclb
ret
aaa
pop
add
iret
fidivl
sub
xor
clc
dec
lock
sbb
je
dec
mov
fucom
and
xchg
push
jg
je
test
dec
addr16
sarb
mov
scas
xchg
lret
pop
mov
nop
ret
ror
ficompl
add
cmpsl
pop
mov
insl
enter
or
mov
pop
push
xchg
cmp
push
aam
add
lea
and
xchg
and
mov
rorl
cs
fidivrs
rcrl
fwait
in
mov
or
cld
enter
adc
inc
push
mov
pop
shr
aad
movsb
mov
mov
loope
mov
or
out
adc
mov
movsb
ds
inc
push
jnp
shl
sub
sbb
arpl
shlb
scas
dec
testl
jg
lahf
pop
cmc
sub
cmp
aas
loop
lret
inc
in
mov
stc
push
pop
mov
rorl
and
push
pop
jecxz
icebp
jle
push
add
pop
mov
xor
jle
sbb
scas
sub
dec
insl
pop
xor
pop
mov
jge
sbb
call
fimuls
push
jge
push
cmp
sub
mov
xchg
and
arpl
push
sarl
cmp
dec
mov
mov
in
lods
cs
push
in
mov
cmpb
sti
repnz
call
pop
jle
cltd
cmp
xchg
or
sbb
cli
or
push
popa
push
repnz
test
mov
in
lcall
jns
add
aad
icebp
mov
lahf
lods
jne
mov
outsb
dec
cwtl
xchg
scas
pop
cmp
fwait
out
loope
lock
xchg
fwait
push
sbb
cmp
stc
hlt
cmpsl
mov
int3
push
cmp
aaa
roll
sbb
jg
xor
sti
cs
xor
gs
mov
outsl
loopne
inc
inc
in
jp
cmp
hlt
ja
testl
mov
lcall
and
adc
sub
or
fnstenv
adc
sbb
dec
mov
call
sbbl
lret
inc
movsl
icebp
stos
fists
jge
imul
js
sbbl
mov
cs
xchg
cmp
mov
mov
enter
add
mov
add
outsb
pushf
cmpsb
inc
int3
mov
xor
dec
xorb
in
adc
or
xor
fisttps
mov
mov
cld
and
mov
push
cmpsb
pop
sarl
cld
and
sbb
test
adcl
adc
scas
imul
cli
adc
lods
and
movsb
jnp
add
orl
dec
stos
sahf
sbb
inc
xchg
jne
decl
incb
pop
push
push
int
jno
das
cwtl
sub
jns
cs
inc
sub
insb
fstpl
fsubs
sub
mov
fldcw
cmp
adc
jo
hlt
pushl
mov
adc
in
xchg
adc
cmpsb
xchg
xchg
adc
mov
movsl
sti
add
jno
mov
fadd
sbb
cmpsl
js
mov
sbb
jnp
adc
orl
pop
popf
shlb
jp
mov
out
cmpsb
sub
push
mov
xlat
or
xlat
rol
or
int3
call
mov
rcrl
shr
loopne
out
aad
dec
inc
inc
cltd
icebp
sub
divl
xchg
cli
mov
in
cwtl
lods
popf
jecxz
enter
mov
cmp
xor
add
movsb
adc
je
stos
pop
adc
in
jg
sbb
lret
jns
lea
jne
shlb
je
stos
xor
sti
adc
inc
inc
mov
dec
xchg
nop
into
test
dec
fwait
pop
jmp
dec
pop
xlat
add
call
xchg
fcmovnu
lahf
cmpsl
dec
nop
dec
icebp
sbb
push
js
rclb
leave
js
out
ret
cmpsl
mov
cmpsl
clc
shlb
in
dec
mov
movlps
xor
cmpsb
inc
inc
dec
in
push
add
clc
sbb
adc
cmp
cs
mov
jge
out
shrl
daa
or
inc
ret
inc
fwait
int
lret
add
stc
sbb
push
pusha
fs
std
inc
mov
lcall
mov
xchg
push
sub
push
icebp
pushf
cmpsl
push
inc
mov
sub
loop
ret
mov
xor
push
paddusb
lret
pop
push
sbb
or
fdivl
and
mov
jo
cmpsl
addr16
inc
pusha
loopne
mov
cmpsl
mov
jnp
fmul
cmp
pop
bound
pushf
push
push
mov
popw
rcr
mov
mov
cmp
mov
in
ljmp
adc
jle
dec
push
push
mov
xor
daa
xor
testb
mov
dec
pop
dec
in
les
or
inc
scas
inc
sbb
mov
insl
push
adc
gs
stc
mov
stos
mov
aas
in
fstl
xor
jo
push
stos
cs
jo
dec
out
pop
xor
and
nop
fs
mov
das
mov
rorl
mov
and
fistpll
out
dec
inc
push
es
addr16
repz
repnz
xor
lods
or
push
out
mov
mov
hlt
imul
adc
pop
fwait
sbb
push
xlat
movsl
hlt
jo
sub
adc
loope
int
cwtl
xor
mov
inc
dec
clc
sar
scas
jp
adcl
add
out
mov
out
pop
cltd
push
dec
inc
mov
mov
or
pushf
test
pop
and
ret
ljmp
dec
movsb
push
push
add
fnsave
aad
ret
jbe
movsl
mov
push
fwait
hlt
dec
in
sbb
cwtl
imul
pusha
add
cwtl
xchg
xchg
cmp
mov
out
push
leave
sti
adc
sub
add
jno
shlb
mov
mov
int
xchg
sahf
mov
cmp
pop
xchg
pop
add
mul
sbb
ss
or
and
nop
shll
inc
sbb
xchg
inc
mov
rep
adc
mov
jge
cwtl
push
mov
add
shll
sahf
jle
jecxz
xchg
std
movsb
mov
and
adc
mov
lods
in
inc
scas
outsl
mov
sub
outsb
movsb
adc
xchg
test
xor
fsubs
popf
xor
mov
rcrb
xor
in
pop
sahf
add
ror
rorb
inc
popf
jl
daa
ss
pop
mov
fimuls
sbb
lods
jb
xor
fdivl
mov
mov
stc
pop
jge
cmp
aad
out
xchg
push
repnz
decb
out
cmc
imull
inc
xor
sbb
mov
mov
mov
scas
leave
cmp
sbbl
movsl
scas
dec
std
or
fldenv
iret
movsb
jno
fsubl
xchg
push
lods
pop
push
leave
pop
and
push
inc
addr16
adc
cmc
popa
jnp
stos
ja
call
jecxz
nop
mov
mov
pop
mov
cmp
fdivrs
lods
dec
sbb
or
ja
shl
push
mov
bound
gs
adc
out
jle
or
mov
clc
or
movsb
pushf
add
adc
adc
push
or
push
pop
inc
aam
in
sub
in
in
sub
and
mov
test
sub
rcll
and
insl
mov
repz
inc
inc
cwtl
bound
add
mov
pop
pusha
xorl
xchg
pop
fwait
dec
xchg
shlb
ljmp
adc
imul
push
jl
lock
lcall
inc
lock
je
mov
pop
loope
cmpsl
jns
les
cmp
sbb
movsb
out
arpl
rcrb
sub
xchg
cmp
addr16
inc
out
movsb
stos
test
inc
xchg
das
aad
dec
and
lret
bnd
add
dec
or
sahf
mov
in
fisubl
xorb
repz
push
mov
fsts
addr16
mov
sbb
pop
mov
and
and
shlb
xchg
ret
xorb
stos
outsl
out
sbb
int3
inc
addr16
sub
dec
iret
movsb
pop
int
fnstsw
xor
test
pop
cmp
bound
jo
mov
xor
mov
add
ret
push
mov
dec
clc
jge
jnp
dec
xlat
pop
mov
mov
jo
inc
sbb
mov
inc
or
ds
notl
rclb
adc
pop
mov
jecxz
mov
jns
cmp
aam
or
das
repnz
jne
je
ja
lret
lods
pushf
cmp
cmp
and
mov
lcall
jno
pop
fwait
or
xchg
aad
jl
push
ljmp
addr16
mov
dec
icebp
lahf
mov
loop
lds
out
mov
push
dec
lret
lea
ficompl
push
sbb
call
or
popf
add
bound
lret
cltd
dec
repz
lcall
pop
xorb
jnp
repnz
mov
push
mov
cld
test
cmp
daa
daa
out
ret
mov
enter
dec
fnstsw
je
lret
popf
xlat
push
icebp
sub
lds
cmp
adc
lds
repz
jp
decl
stc
cmpsl
ljmp
lahf
lcall
sbb
popf
mov
and
xchg
inc
data16
in
cmp
mov
push
mov
xor
mov
sbb
cwtl
jo
mov
dec
add
clc
or
add
inc
fsubr
jne
mov
mov
xor
xchg
insl
push
das
lock
mov
mov
rolb
dec
push
push
and
cs
pop
adc
adc
iret
sbb
fisubl
and
fidivrl
dec
jb
faddl
ret
in
aas
lea
inc
aas
cmc
push
mov
pop
jb
cmc
out
sbb
insb
incb
test
jl
mov
fdivs
or
and
push
cwtl
ret
lret
lock
je
cmc
imul
js
nop
push
out
std
fidivrs
rorb
and
out
fistl
xchg
xor
inc
or
or
subl
rorb
sub
jge
jle
xchg
pop
in
add
stc
sub
mov
imulb
flds
lret
int3
mov
addr16
out
pop
sarl
and
and
pusha
push
sbb
out
dec
sub
jmp
fbstp
add
pop
mov
add
pop
jbe
imul
and
dec
ja
ss
mov
dec
cmp
jp
sbb
mov
cmpsb
fdivrs
rcll
in
insl
mov
jge
mov
mov
push
in
xchg
mov
push
jmp
mov
push
cmp
mov
add
filds
dec
enter
cmp
inc
and
jae
es
inc
test
loopne
in
mov
shlb
jno
test
push
inc
in
or
xchg
stos
inc
outsb
dec
xchg
movsb
jmp
dec
imull
in
pop
aam
int
sbbb
mov
or
je
xor
imul
xchg
mov
mov
and
inc
data16
test
mov
push
or
ficoms
xchg
cltd
in
add
push
das
imul
sub
sarb
push
jno
std
fists
insb
dec
fs
or
xchg
lahf
adc
pop
push
sub
xchg
or
das
ret
add
mov
push
dec
pop
leave
sbb
outsl
aam
jg
bnd
and
sbb
rcrl
add
adc
mov
scas
pop
xchg
pop
aaa
je
xlat
xlat
mov
jl
lahf
mov
shll
es
cmpsl
xlat
add
cmc
jne
lahf
mov
es
and
scas
hlt
subl
dec
jg
mov
fwait
xor
les
fsubrp
or
decl
in
xchg
and
lret
cltd
dec
clc
fwait
cwtd
out
mov
rcrl
ljmp
cmp
int3
sub
sti
sbb
js
mov
pop
sbb
add
mov
jno
and
mov
out
or
pop
and
and
pop
das
or
add
push
mov
popf
fistpll
jno
sub
dec
push
pop
popf
push
jp
iret
je
xchg
pop
fisubrl
leave
jge
out
dec
adc
push
jmp
jg
test
pop
fstpl
xchg
lret
insl
ret
adc
adc
jl
push
lret
fcomp
ficoms
mov
push
mov
mov
fdiv
fcomps
push
or
cs
push
mov
xchg
push
or
lods
aam
outsw
sub
lods
stc
cmp
pop
out
xchg
cmc
sahf
mov
mov
xchg
mov
adc
outsb
inc
jle
int
enter
pop
jmp
sbb
addr16
mov
nop
pop
shl
enter
ss
push
mov
mov
adc
cmp
in
test
sti
mov
bound
test
xor
dec
out
nop
clc
movsl
adc
das
mov
es
or
movsl
and
cmp
addr16
movsl
lret
mov
loope
ret
lret
xor
and
shrl
into
sbb
aaa
pop
call
sahf
lods
sub
out
cmpsl
enter
inc
xchg
xor
fdivs
sbb
xor
mov
fsubrs
inc
push
fidivl
testb
test
jne
inc
mov
aad
and
cmp
scas
cmp
in
imulb
push
xor
dec
in
sub
push
add
ret
dec
and
xchg
stc
jmp
dec
sarb
lods
cmp
inc
movsb
cmp
int
mov
add
pop
xlat
dec
dec
add
push
sbb
mov
inc
xchg
rcrl
cmp
cmp
shll
or
into
sbb
dec
fs
fdivrl
in
bound
cmp
aam
cld
xor
sub
dec
push
aas
idivb
adc
add
add
add
shrl
mov
sti
or
stos
jmp
shlb
mov
jmp
mov
movsl
rorb
das
jl
pop
pop
inc
aaa
jo
add
sbb
and
test
inc
in
inc
mov
jns
daa
nop
loop
gs
cmp
fildll
mov
cltd
jg
sub
mov
cltd
add
rolb
fs
js
lods
es
repnz
jl
cmpb
imul
push
adc
in
inc
cmpsb
scas
flds
cmp
mov
fwait
fwait
xor
stc
jbe
stos
xor
icebp
movsl
aaa
xchg
pop
push
rcrb
pop
push
xchg
cli
add
pop
mov
mov
clc
push
in
mov
aad
lret
scas
pop
mov
mov
sub
pop
out
and
test
aas
test
push
push
lcall
fsubrl
rorl
push
aaa
stos
xchg
rcrl
dec
cmpl
cmp
push
mov
cmp
out
adc
inc
pop
cmpsb
sub
push
pop
pushf
dec
out
and
aad
iret
fisttps
ret
addb
mov
cmpsl
or
movsl
or
shlb
leave
inc
ret
ljmp
jbe
pop
push
cmpsb
or
mov
fidivrl
in
inc
dec
repnz
in
gs
sub
cmpsl
pusha
lahf
pop
inc
test
or
adc
mov
mov
sbb
pusha
jbe
les
push
dec
data16
add
aaa
and
dec
testl
mov
daa
mov
xchg
mov
cld
add
inc
push
pop
les
jmp
add
popf
push
jl
xorb
das
add
inc
outsb
xor
stos
xchg
adc
lahf
or
lds
add
mov
push
mov
das
add
dec
popa
inc
scas
rol
cmpb
outsl
sbb
xlat
dec
sub
sub
dec
adc
jno
leave
mov
pop
gs
pop
and
cmpsb
and
lods
mov
push
sbb
inc
jmp
fwait
mov
outsl
jno
out
sub
mov
adc
sub
pop
cmpsb
pop
dec
mov
jl
mov
xchg
adc
cmp
les
and
adc
scas
ljmp
mov
pop
test
jo
int3
mov
xchg
push
ja
shrl
rcll
jge
xchg
jmp
test
test
adc
mov
adcb
sub
call
or
andl
dec
xchg
out
dec
push
ds
add
jmp
cmc
rolb
stc
pop
call
or
pop
jae
popa
ljmp
outsl
mov
ret
push
in
mov
sahf
push
daa
ficomps
test
stos
mov
stos
fwait
sbb
fwait
mov
pop
outsb
sub
lret
inc
xchg
dec
jno
pavgb
mov
fst
jno
imul
fdivl
push
xor
cwtl
mov
or
es
xor
addr16
and
xchg
or
pop
jecxz
daa
mov
test
jbe
sbb
lahf
orb
push
movsb
or
mov
jp
add
xor
insl
bound
fidivrs
cmp
aas
dec
aaa
roll
push
pop
ljmp
mov
inc
in
push
jge
cltd
mov
stos
push
clc
aad
pop
and
stos
jo
pop
mov
in
sbb
dec
mov
inc
cmpsl
int
in
pop
movsl
add
cmp
dec
into
hlt
cmp
mov
je
xorb
dec
outsl
or
loope
pop
pop
adc
sar
push
cmc
ss
lcall
push
daa
repz
sbb
notb
sub
sub
or
dec
cmp
mov
add
sqrtps
mov
jbe
je
pushf
popa
mov
sbb
test
shr
push
rolb
cmp
sbb
stc
or
sti
cmpsb
jecxz
fdivr
stc
int3
arpl
push
mov
mov
fisttpll
imul
imul
and
test
or
mov
push
mov
xchg
inc
out
sub
mov
mov
out
mov
ficoml
cmp
jo
cmp
arpl
ja
and
xor
hlt
push
sahf
mov
insl
cld
stos
mov
test
stos
movsl
pusha
adc
jg
cld
rcll
nop
cwtl
into
and
and
push
add
lcall
sub
into
scas
ljmp
fsub
cmp
insl
cmp
mov
mov
aaa
mov
xchg
or
pusha
jmp
push
in
push
addr16
and
repz
xchg
out
cld
cmp
pop
push
addr16
mov
add
sub
mov
leave
or
add
mov
cltd
pusha
shll
repnz
mov
and
lods
out
mov
push
lcall
adc
push
ficomps
xor
mov
shrl
and
popa
inc
loop
jg
add
pop
ss
pop
xchg
bound
outsl
mov
int3
popa
fldl
out
push
in
cmp
xor
or
push
lock
mov
in
xor
inc
add
xchg
pop
scas
mov
cmp
or
xchg
pop
cmp
es
sbb
inc
clc
repnz
test
imul
push
inc
inc
mov
pop
pushf
loopne
iret
cld
push
pop
push
mov
xor
sahf
mov
mov
packuswb
mov
cwtl
adc
dec
add
ret
sbb
sarl
shl
lods
lcall
outsl
popa
mov
outsb
hlt
pop
das
outsl
cmp
scas
mov
sub
dec
addl
sar
pop
lret
je,pt
scas
lret
or
jecxz
jo
cmpsb
adc
push
addr16
imul
stos
sbb
lods
cli
xchg
mov
aas
push
push
icebp
gs
mov
cmp
imul
pusha
xchg
and
pop
xchg
mov
stos
popa
mov
scas
scas
xchg
push
cmpsl
hlt
shrl
loopne
hlt
insl
repz
subb
imul
adc
adc
mov
dec
addr16
lods
lret
pop
cs
into
fs
cmc
pushf
pop
sub
push
pop
cmpsl
lds
incl
pushf
add
fwait
jp
nop
mov
sbb
jp
or
adc
aaa
lock
test
push
es
jbe
cwtl
xchg
stos
roll
dec
clc
or
cmp
push
mov
push
inc
test
iret
mov
fdivl
push
pop
outsl
cmp
and
movsb
push
push
mov
jns
lock
jge
icebp
inc
cmp
xchg
sbb
loope
in
and
cld
and
or
divb
xor
pop
push
loop
push
daa
cld
pop
loope
jecxz
sub
mov
inc
scas
sbb
nop
int3
xchg
repz
cld
pop
in
xor
add
incb
fmuls
mov
outsb
pop
and
and
in
add
iret
outsb
loop
mov
dec
pop
mov
pop
push
out
inc
fsubrs
xchg
jnp
pop
dec
inc
sti
imul
mov
scas
in
icebp
out
mov
fistpll
dec
iret
clc
test
xchg
pop
pop
push
scas
mov
push
arpl
lahf
inc
mov
repnz
scas
sbb
movsb
mov
cmpsb
inc
and
sbb
scas
xchg
imul
mov
enter
mov
pop
adc
je
mov
inc
repz
and
dec
and
pop
dec
pop
orl
in
dec
fs
push
sbb
out
and
data16
fwait
addr16
dec
mov
cs
xorb
cmpsb
negl
mov
loope
add
xor
pop
or
stos
cmp
pop
xor
sbb
push
jg
ja
movzwl
xor
push
iret
add
or
popf
and
add
cli
xor
in
adc
int
leave
inc
nop
pop
cltd
out
inc
mov
ljmp
pop
jge
mov
cmp
xor
sub
sbb
leave
test
lahf
jmp
and
and
lret
filds
fiaddl
lds
xchg
pop
push
ja
arpl
add
jle
nop
cmpsb
lods
jo
imul
adc
pop
push
outsl
shr
jl
mov
lods
inc
xchg
inc
aad
cmp
insb
lret
lret
sub
rol
dec
mov
dec
dec
push
mov
mov
insb
xor
and
ret
pop
dec
addl
dec
insl
jg
dec
lock
push
arpl
sbb
popf
lods
jge
dec
cmpsb
out
sbb
dec
or
sbb
fists
xchg
sahf
mov
dec
fsubrs
and
push
ffree
test
and
sub
sbb
addb
push
pushf
cmpsb
ret
stos
popf
lahf
mov
lds
mov
cmp
cmp
imul
jbe
cmp
rcrl
xor
in
data16
sbb
and
into
cld
and
lock
fwait
adc
or
mov
lret
xchg
popf
mov
xor
adc
jno
add
daa
push
sub
mov
movb
inc
push
pop
iret
jmp
mov
xor
push
enter
sub
je
enter
cmp
sub
jle
pop
movsl
dec
mov
or
out
pop
xchg
les
dec
push
pop
nop
push
fs
dec
cmpb
pop
into
mov
mov
sbb
int
movsl
test
std
flds
xchg
mov
popa
test
pop
popa
lret
pop
dec
and
fwait
test
mov
add
cmp
push
xlat
mov
adc
cli
pop
pop
aad
les
sub
cmc
sahf
testb
pop
aas
je
or
push
sti
jmp
out
fildll
rcr
dec
cmp
repnz
pop
push
lods
in
je
ds
imull
jle
dec
fistl
dec
pop
pushf
xchg
mov
xor
pop
xchg
outsb
sti
scas
inc
test
pop
fmul
jmp
add
xchg
adc
xchg
sbb
pop
sbb
cmpl
loope
jmp
int
mov
shl
inc
sti
sbb
push
adc
inc
into
loopne
lahf
loope
push
ret
jle
testb
mov
faddp
or
mov
stc
and
cwtl
sub
aas
fistps
hlt
xchg
dec
xor
nop
out
adc
scas
pop
aad
sbb
insb
loopne
lock
sbb
int3
lods
test
push
inc
pushf
adcl
mov
mov
cmp
pop
outsb
adc
lods
mov
hlt
xchg
movsb
xor
xor
sub
or
sbb
icebp
leave
and
inc
repz
test
xor
mov
pushf
pop
dec
lods
inc
je
pop
mov
sub
lret
jbe
hlt
jge
and
cmp
mov
outsl
jbe
cmp
rcrb
mov
xchg
mov
icebp
pop
cvtps2pi
cli
fwait
inc
mov
xor
test
addr16
inc
jo
fimuls
ficompl
mov
xchg
dec
cmp
stc
pop
data16
cmp
push
aam
pop
icebp
hlt
js
jecxz
adc
inc
les
ljmp
xchg
mov
pusha
cmp
sbb
int3
mov
js
xchg
es
aaa
lock
push
pop
pop
lahf
jge
rclb
dec
cmpsb
or
jle
dec
pop
pop
xchg
adcl
das
insb
cmp
jbe
fiaddl
add
mov
and
inc
push
xchg
push
ror
ss
xchg
popa
xchg
jae
dec
out
negb
mov
cmpsl
insb
nop
dec
cmp
push
xlat
add
and
adc
add
push
and
aaa
in
push
inc
xchg
and
sbb
jnp,pn
adc
pop
das
mov
push
pop
clc
out
fs
loopne
mov
into
mov
cmp
mov
cmp
sbb
sbbl
jge
fwait
jmp
inc
test
pop
seta
dec
xchg
dec
mov
mulb
fxch
cmp
cmp
mov
jge
xchg
rolb
jecxz
daa
cmp
rcrl
and
jg
fs
ss
das
das
cmc
les
das
pop
movsb
xchg
sbb
xlat
mov
fsubrl
push
push
mov
pop
push
inc
dec
shlb
pop
sub
std
jmp
cmp
mov
loop
push
push
shl
int
daa
adc
or
mov
pop
arpl
mov
popf
sar
divb
ret
cmpsl
aaa
mov
and
jno
shl
clc
pop
ret
cmpsl
jb
mov
jecxz
imul
cmp
fnstenv
xchg
lret
loopne
pusha
in
xchg
jmp
outsb
jg
inc
jle
mov
adc
bound
inc
out
or
mov
add
sub
fwait
xchg
out
pop
push
clc
add
push
cmp
add
pop
and
fnsave
push
mov
dec
cmp
jns
add
mov
fs
xchg
testb
fidivl
pop
out
add
enter
idiv
sbbb
orb
add
jo
pop
test
adc
test
sbb
aaa
cmpsl
xchg
mov
cmp
push
push
fiadds
nop
dec
or
clc
sti
sbb
push
das
insl
dec
call
pop
xchg
sbbl
dec
leave
cltd
mov
push
mov
jge
xchg
fisttps
cmp
dec
pop
stos
lret
push
or
jbe
fadd
adcl
or
lock
and
mov
mov
les
in
mov
insb
in
sub
mov
mov
mov
mov
inc
dec
fs
sub
push
shrb
call
xchg
push
jle
mov
sub
loopne
in
mov
aas
mov
and
cs
ljmp
xchg
sub
movsl
xor
fs
jge
lahf
lahf
adc
rcll
cmp
inc
scas
pop
in
ljmp
pop
xor
ds
and
inc
decb
mov
sbb
test
add
inc
fidivrs
aaa
and
out
stos
bound
mov
cmp
mov
sub
xor
pop
pop
hlt
jne
mov
push
out
and
js
iret
pop
jo
push
xchg
push
sub
mov
xor
adc
or
jl
int
and
mov
sub
lods
dec
adc
inc
lahf
sbb
xchg
pop
mulb
movsb
jl
xchg
cli
stc
sub
jle
iret
jecxz
mov
test
xchg
mov
cli
mov
iret
push
movsl
mov
mov
fdivs
add
and
mov
mul
or
adc
out
dec
xor
movsb
push
lahf
insl
scas
add
pop
cmpsl
dec
pop
inc
ret
ror
inc
pop
dec
ret
daa
mov
test
xchg
shlb
mov
mov
push
mov
les
out
lods
dec
sti
fidivrl
rcrb
and
movsl
sbb
sahf
jmp
jae
ljmp
cmpsb
aad
cltd
movsb
outsb
push
mov
pusha
mov
or
push
cld
jb
cmp
arpl
jg
cmp
movsb
jne
bound
jns
and
pushf
iret
daa
cmp
jecxz
lret
xor
mov
push
lea
shrd
add
lcall
imul
push
mov
push
mov
mov
and
mov
mov
adc
mov
mov
xor
cmp
imul
lds
or
mov
mull
mov
loop
pop
xchg
push
add
push
imul
repnz
iret
scas
clc
mov
test
test
movntq
stc
jnp
pop
ret
enter
bound
dec
xor
movsb
mov
jb
scas
cwtl
mov
out
push
test
fxch
dec
add
mov
hlt
xor
and
sub
push
and
fstpt
mov
aaa
mov
sub
cmpb
and
push
rcrl
scas
lock
adc
sbb
insb
dec
sub
pop
push
push
inc
and
jnp
sub
add
add
sub
loope
push
jmp
mov
ret
mov
xor
mov
ss
fmull
push
fwait
jns
push
loopne
ret
nop
push
mov
mov
adc
mov
imul
fbstp
icebp
fimull
mov
pop
int
sar
inc
mov
sub
adc
adcl
in
mov
jnp
lock
out
negb
pop
inc
xor
lcall
mov
aad
add
mov
dec
xor
push
cmpsl
xchg
in
pop
inc
dec
stos
cmp
lret
or
sahf
rclb
and
mov
fld
out
outsb
insb
leave
loopne
xor
outsb
cltd
and
das
and
jge
aad
xlat
add
xchg
and
int
es
insb
addl
xor
stc
frstor
icebp
push
cmc
repnz
push
ds
xor
xchg
stos
inc
stos
push
sub
shrb
pop
test
js
cmp
xlat
out
idivb
xchg
ss
cmp
mov
dec
lods
mov
xchg
add
lds
imul
in
ljmp
enter
or
es
add
cli
sub
pushf
fimuls
mov
stos
jmp
dec
and
or
subl
mov
sub
arpl
mov
jns
cmp
inc
inc
ss
xor
jp,pt
sbb
cmp
sub
xchg
mov
ds
insb
enter
lret
scas
daa
into
mov
fdivl
addr16
outsb
and
push
fimull
jle
int3
scas
mov
sub
adc
inc
fcompl
push
rol
push
sarl
pcmpeqd
lods
shrb
add
mov
ds
sbb
push
mov
fiaddl
into
push
aam
jp
movhlps
add
pop
icebp
adc
outsl
shrl
sarl
dec
ret
xor
dec
push
and
mov
cmpsb
outsb
jg
add
mov
jge
jne
inc
into
jecxz
shlb
pop
inc
mov
mov
in
mov
repz
push
cwtl
shl
out
ljmp
test
push
sub
imul
xor
xchg
fbld
fwait
cmp
test
test
fs
mov
inc
dec
inc
mov
ret
mov
cmovl
sub
jmp
scas
dec
adc
adc
enter
dec
mov
and
and
sub
jns
xor
sbb
fisubs
cmpsl
leave
popf
jmp
enter
ds
jle
test
mov
push
mov
or
aam
icebp
cmp
push
add
fistl
out
jns
xor
arpl
sub
push
imul
dec
pusha
ja
dec
dec
lds
mov
add
inc
out
inc
xlat
sarb
jg
std
inc
and
jge
stc
add
jae
test
push
dec
scas
xor
push
shl
int3
jno
jne
test
hlt
or
idivl
movsl
jbe
dec
roll
fdivrs
call
sbb
shlb
and
jns
jne
xchg
xor
add
sub
mov
mov
add
lods
ljmp
jne
inc
dec
jne
aaa
sub
xchg
insl
daa
cmpsb
xchg
aam
les
imul
mov
or
mov
sub
sar
and
push
shrl
scas
roll
loope
jns
jle
add
inc
xchg
out
fmul
xor
ss
inc
mov
pop
pusha
cmpb
scas
sub
push
pop
jno
pop
cmp
das
repnz
das
jo
pop
push
mov
pop
fs
sbb
dec
dec
test
xchg
push
enter
fwait
mov
leave
push
out
mov
jl
lods
scas
sbb
call
adc
mov
mov
movsb
sbb
mov
daa
jb
lods
lods
faddl
push
pop
out
pop
mov
push
add
mov
addr16
add
adc
pop
xor
lret
sub
in
add
push
adc
mov
enter
xor
jmp
fisttpl
mov
sti
adc
js
lret
xor
dec
subb
arpl
mov
fs
jno
or
mov
or
pop
xchg
jb
xor
lcall
pop
es
stos
push
or
pop
cs
push
inc
leave
pop
push
dec
inc
or
fstl
rcrb
aad
aam
lea
out
pop
outsb
adc
sbb
mov
xor
or
cld
ja
bnd
sbb
into
or
dec
jecxz
rcl
sbb
lcall
xchg
into
sbb
mov
push
mulb
je
repz
out
ja
call
das
pop
cmp
push
jl
and
cmp
dec
cmp
cmp
imul
icebp
sbb
andl
jp
int
fsubrp
shll
jle
mov
rolb
scas
mov
push
test
stos
cld
and
mov
std
aas
mov
jmp
mov
arpl
outsb
jno
sbb
fiadds
jae
xor
mov
int
iret
je
push
pop
std
lds
subl
dec
pop
sbb
int
or
sub
cmpsb
or
movb
xor
out
cmpsl
test
xchg
popa
mov
daa
int
or
cld
jne
pop
jae
pop
cmpsb
sub
ret
xchg
aam
mov
jmp
xor
jecxz
xchg
mov
dec
notl
addr16
mov
arpl
sub
outsl
push
int
mov
sahf
gs
xor
xchg
test
int3
adc
scas
lret
mov
ret
fcomps
jne
ficomps
jge
cmp
adc
cmp
inc
shll
xlat
pusha
inc
stos
daa
mov
adc
push
jo
cmp
xchg
mov
testl
add
push
lea
add
mov
mov
push
int3
dec
mov
adc
mov
out
test
mov
pop
lret
sbb
inc
xchg
cmpb
movsb
mov
out
imul
add
sti
mov
lock
inc
hlt
fwait
mov
call
fcompl
jo
dec
mov
repz
inc
inc
fwait
dec
inc
jno
scas
mov
mov
xchg
push
adc
iret
sub
cmpb
and
cld
mov
cmc
ljmp
les
add
sub
icebp
cmp
xor
or
jo
daa
xchg
rclb
stos
dec
ret
lods
aaa
sub
pop
fildl
stc
shrb
fs
mov
loope
jecxz
and
sbb
test
xor
push
jns
leave
cmc
sbb
movsl
jg
add
nop
stc
int
test
sbb
ret
pop
pop
xchg
xor
aaa
test
dec
movsl
mov
cmc
lods
dec
or
sbbl
insl
test
ret
shll
outsb
or
hlt
mov
lds
jns
lea
dec
xor
sbb
and
lea
dec
insb
sbb
arpl
imul
cli
adc
aas
iret
sub
xor
jmp
jp
push
mov
xor
inc
sub
fistl
dec
in
les
insl
xor
add
jae
mov
mov
cmp
mov
repz
sbb
sbb
adc
sbb
insb
test
loope
loopne
jmp
mov
adcl
xchg
in
ss
leave
call
es
jge
pop
adc
enter
movsb
sub
rcrl
iret
movsb
imul
sbb
clc
int3
mov
scas
jno
fcompl
sub
sub
jp
nop
sbb
hlt
loopne
or
aaa
push
mov
mov
or
iret
or
adc
call
pop
shrl
ljmp
push
jl
cmpsb
cmp
fistps
xchg
outsl
movsb
sub
push
bound
cs
mov
pop
xchg
jb
add
or
dec
cmpsb
sahf
outsb
adc
bound
sub
push
shl
and
push
ss
daa
popf
sbb
xchg
sub
fistl
sub
lds
paddsb
cmp
adc
or
add
add
mov
xor
pusha
ret
ror
cwtl
adc
xor
roll
divl
jae
test
add
insb
lea
pop
mov
sbb
adc
dec
out
jnp
push
sbb
inc
dec
pop
dec
fscale
in
adc
xchg
repnz
add
mov
dec
inc
ljmp
das
cmpsb
jl
ficomps
xchg
out
mov
bound
mov
mov
out
cmp
or
jno
add
jno
jle
in
and
cmp
jb
fs
mov
aad
flds
hlt
loop
das
imul
cmp
pop
fldl
xor
or
int
lcall
pop
gs
mov
out
xchg
mov
inc
negb
xchg
test
mov
lea
xchg
fwait
mov
push
cmpsl
sub
mov
jb
outsl
add
sbb
xchg
push
scas
jl
xchg
testb
xchg
mov
mov
pop
xor
testl
push
sub
pop
mov
mov
jo
shlb
pop
clc
add
pusha
nop
pop
xlat
shr
imul
mov
out
addr16
jae
fbld
popa
mov
ret
je
lret
xor
fbld
das
icebp
stos
negb
insb
dec
pop
les
inc
mov
dec
push
lea
push
dec
push
add
inc
cmp
sub
cmp
dec
push
clc
loopne
sbb
push
test
mov
dec
lcall
icebp
ficompl
sarl
movsl
cmpsl
aad
lds
cmp
ds
pop
or
fisubrl
mull
cmp
or
or
or
mov
dec
shlb
xor
jp
ret
mov
mov
pop
jmp
jp
mov
lret
sahf
imul
jg
xchg
out
push
in
cmp
rclb
shrb
fisubrs
pop
or
pop
lods
ljmp
inc
mov
icebp
dec
cmp
add
dec
roll
mov
call
xchg
add
and
add
mov
cmp
mov
add
mov
lret
add
jg
jecxz
lods
arpl
cmc
mov
cmp
or
inc
mov
xlat
in
mov
sbb
xor
cmpsl
outsb
ja
hlt
mov
inc
and
pop
call
notb
push
mov
jge
mov
lret
mull
cs
push
xchg
insb
scas
rcl
js
adc
fisubrl
cmp
push
sbb
jnp
test
inc
fildll
stos
lahf
orb
sbb
lods
mul
and
idivb
xchg
in
je
divl
mov
inc
mov
or
int3
ljmp
add
mov
jmp
cld
outsl
fnsave
iret
aam
js
mov
pop
mov
out
push
jnp
and
lcall
sahf
addr16
fstps
andl
stos
test
fdivrs
add
pop
pminub
sub
or
pushf
leave
push
add
or
or
lods
jae
xchg
mov
adc
inc
ja
mov
stos
add
and
cltd
push
je
mov
daa
sbb
imulb
jmp
adcl
pop
jbe
inc
or
cmp
jns
fdivrl
xchg
jbe
inc
dec
xchg
mov
das
mov
inc
jno
lods
shll
inc
lret
xchg
jo
xor
sbb
sub
jb
int
mov
bound
pop
or
pop
out
add
sar
icebp
lds
les
addl
nop
add
loopne
sahf
aas
pusha
adc
sbb
lret
and
in
aas
push
cmp
push
mov
cld
scas
out
clc
mov
sbb
movsl
lret
arpl
gs
sahf
loop
lock
js
jae
in
out
add
ds
mov
push
inc
xchg
lahf
push
lret
inc
insl
and
cmpsb
mov
mov
jp
adc
outsb
sti
shll
clc
cmp
add
jns
xchg
cmpl
stc
or
xchg
popf
pop
sahf
mov
out
lods
lret
push
jae
scas
shl
mov
shlb
lret
adc
sub
sub
fistpll
lar
push
lock
lahf
fildl
add
lock
aam
or
xchg
das
jg
nop
jp
stos
pop
aas
jns
sbb
or
pop
aaa
rorl
fimull
cmp
push
in
dec
cli
repnz
in
cltd
add
cmp
and
jbe
cmovs
outsb
push
push
insb
adc
sub
mov
xchg
dec
adc
ds
add
inc
mov
pusha
fcomip
cltd
in
add
andb
jnp
mov
mov
imul
mov
mov
iret
fdivr
xor
sub
hlt
dec
and
and
and
inc
sub
pushl
cli
mov
or
fists
inc
dec
add
cmpsb
popf
inc
mov
les
sbb
test
pop
imul
stc
das
xor
popl
push
jns
lea
inc
pop
test
mov
shr
sub
inc
xchg
cmp
push
filds
add
jns
inc
das
in
sbb
in
mov
lods
sbb
cwtl
xlat
mov
jbe
jecxz
mov
sub
xchg
pop
xor
mov
sbbl
and
or
insb
aam
rep
iret
push
mov
mul
dec
sbb
jb
jmp
adc
mov
or
or
xchg
xorl
cmp
in
stos
jbe
sub
cli
movsb
int
add
mov
add
pop
jae
inc
sub
pop
movsl
rclb
cmc
xor
mov
inc
sbb
xchg
cld
aad
gs
inc
ds
les
sti
test
outsl
addb
aad
ss
cmp
add
fisubl
xor
mov
xor
pop
stos
mov
add
fstps
outsb
mov
push
mov
les
jg
xchg
inc
inc
dec
scas
fistps
jo
lret
shlb
inc
stos
shlb
mov
mov
cs
push
dec
jmp
mov
mov
pop
xor
int3
sahf
sub
mov
mov
sahf
loope
adc
xchg
adcb
stc
or
adc
sbb
mov
aam
jge
pushf
inc
xchg
test
ret
cwtl
les
cmp
mov
cmp
repz
stos
inc
jmp
mull
pop
jnp
inc
inc
push
jg
dec
push
int
pop
sbb
push
std
mov
jl
sti
inc
mov
push
xor
dec
xor
jp
fldl
cmp
idivb
shl
arpl
add
jns
mov
fwait
sub
aas
and
daa
xor
lea
fildl
sbb
pop
xchg
rorb
data16
lods
mov
xchg
xorb
int
add
xor
nop
adcb
pushf
sti
xor
xchg
cmp
lret
and
in
pop
fwait
sub
rorl
aas
mov
lret
shll
mull
xchg
pop
movsb
xlat
pop
loope
dec
sub
inc
lret
mov
pop
or
add
sub
sti
enter
xchg
dec
xchg
in
sbb
jecxz
fildl
leave
xorb
notb
notl
insl
lret
push
mov
or
fsubl
xor
aaa
imul
jl
pop
and
sarl
lcall
hlt
sahf
or
movsb
pop
sub
cmp
test
ficomps
cli
xor
xor
xor
sub
icebp
pop
jmp
fistpl
enter
inc
add
insb
cmp
leave
cld
xor
cld
xchg
test
pop
shl
cmp
mov
pop
ret
sub
adcb
jno
mov
sub
add
inc
mov
jmp
js
ror
cmc
cs
xor
xor
mov
ljmp
adc
mov
ss
xor
mov
scas
inc
fisubrl
ds
stos
dec
out
fwait
enter
or
cmp
push
inc
add
mov
and
sbb
jne
add
push
loopne
dec
pop
movsl
xchg
fldenv
aad
add
inc
hlt
inc
push
inc
add
mov
sbb
mov
cmp
inc
dec
pop
repnz
adcb
pop
paddq
inc
mov
sbb
stc
dec
imul
call
sub
clc
cld
push
push
fsubs
xor
fs
sbb
mov
loop
inc
mov
jno
jne
pop
or
sbb
cli
mov
jnp
iret
push
jmp
or
je
or
xchg
popa
stc
fbld
sbb
out
sbb
addr16
int
loop
or
stc
jae
cmp
mov
fldenv
jae
test
fwait
cltd
push
xchg
arpl
add
xor
mov
movsb
mov
fwait
aad
mov
mov
pusha
imul
fs
test
push
pop
mov
cmpb
nop
sbbl
sub
xor
xchg
and
sbb
notl
lock
lcall
loop
inc
mov
fidivl
add
fcmovne
xchg
gs
xlat
je
inc
mov
add
lds
or
test
lock
mov
ljmp
cmc
mov
sbb
mov
xor
push
int3
dec
repz
jmp
popf
mov
xor
mov
sub
adc
movsb
push
jl
gs
das
cmp
imul
imul
adc
xchg
movsb
push
fwait
push
in
sbb
subl
popa
mov
pop
push
pop
faddl
pop
je
mov
push
notb
andb
enter
xor
and
imul
push
or
scas
add
sbb
jns
into
ret
fldl
das
int3
sti
popf
mov
fbld
into
dec
inc
or
inc
sbb
es
arpl
fistl
push
mov
or
loop
icebp
into
jns
in
cs
mov
in
push
push
mov
fidivrl
sbb
dec
and
pop
fwait
lcall
test
sbb
cmc
test
mov
push
loopne
push
or
aam
iret
popa
enter
sbb
mov
cmp
inc
push
movsl
pusha
push
loope
xor
repz
enter
mov
or
dec
add
or
sbb
in
sahf
stos
sub
das
aad
push
pop
xchg
das
add
hlt
sub
mov
dec
jecxz
in
push
push
scas
iret
push
test
sbb
aaa
mov
mov
push
lahf
fildll
fstpl
jnp
adc
addr16
xor
ja
cmp
mov
mov
adc
mov
mov
cmp
cwtl
add
push
push
movsb
sub
xor
adc
dec
scas
mov
lods
fsubr
push
repz
or
fadds
jae
xor
inc
dec
rcrl
xchg
mov
je
in
es
or
outsl
mov
sbb
std
scas
adc
stc
dec
and
mov
mov
mov
loope
pop
fsts
or
inc
pushf
push
jg
xchg
lret
add
push
dec
jp
adc
or
aad
loope
mov
lods
push
sbb
cmpsb
dec
and
add
xor
mov
test
mov
rcrl
mov
bound
sbb
pop
adcb
in
cs
into
std
pusha
push
mov
cwtl
nop
test
xchg
jno
pop
shll
mov
mov
adc
push
fisubl
movsl
js
insl
or
and
sti
sbbb
cmp
sbb
push
add
or
cmc
dec
shrb
psrld
fldenv
jb
adc
cltd
repnz
rclb
into
xchg
mov
sub
into
mov
daa
ljmp
cltd
jecxz
in
out
decl
leave
in
jp
sub
div
or
jg
insb
sub
xor
cmpsb
mov
mov
xchg
pop
inc
insl
popa
ds
inc
dec
cmp
add
sbbl
mov
xchg
xchg
sti
test
dec
in
xchg
filds
sbb
jmp
lret
sarl
imul
ljmp
repz
fs
mov
std
jle
xchg
aas
jb
les
rol
mov
inc
adc
addr16
ds
pop
ds
stos
jp
ljmp
fnsave
push
aam
cld
pop
push
call
shll
pop
cltd
mov
and
push
mov
imul
das
subl
pop
mov
ja
shll
cmp
jns
cmpsl
mov
ret
sbb
es
add
sub
and
xchg
adc
stc
mov
cltd
and
add
cmc
imul
cmp
test
mov
jle
enter
add
shrl
add
sahf
pop
out
cmp
pop
xchg
push
add
test
xchg
adc
xchg
push
xchg
add
cmpsb
icebp
pop
push
mov
add
in
sbb
push
mov
cmp
clc
stc
adc
lock
mov
adc
jo
adc
and
xchg
cli
push
in
add
negb
popa
fwait
cmp
add
cmp
out
popf
mov
ss
dec
sub
adcl
ja
mov
ds
inc
adc
in
or
orb
lods
lds
mov
add
insl
aaa
loope
sbb
sub
cmpsb
adc
lret
fs
jae
cmpsb
lret
mov
adc
cmp
les
sub
pop
lods
insb
cmp
mov
ja
xor
sbb
xor
sub
in
cmpsl
scas
xor
cs
push
leave
fisttps
inc
mov
mov
adc
movsl
stos
roll
fisubs
pop
popa
in
jne
sub
ljmp
out
cltd
xor
daa
pushf
push
dec
insl
dec
mov
fdivl
ret
jmp
adc
cmp
movsl
cld
int
enter
mov
loopne
mov
add
insl
push
stc
push
lds
inc
ret
std
hlt
fsubrl
xchg
lock
js
jnp
mov
addr16
xchg
jp
fildl
mov
push
rcr
add
xchg
adc
push
and
test
cli
subb
adc
adc
adcl
and
insl
push
push
fsubs
xchg
out
add
ret
push
jns
enter
adc
mov
dec
jl
xchg
lahf
testl
mov
push
das
fcomps
and
xorb
pushf
mov
sbb
mov
ja
push
repz
orb
dec
dec
mov
fsts
push
and
push
clc
in
sub
dec
jl
mulb
mov
and
mov
inc
mov
jb
add
adc
push
js
pop
out
push
outsb
mov
mov
hlt
bound
sub
pushf
dec
adc
or
test
subb
pop
mov
decl
mov
push
mov
cmpsl
clc
jecxz
mov
add
lods
fcoml
xchg
xor
inc
imul
jmp
push
push
sub
std
pop
icebp
imul
pushf
mov
test
pop
aas
lock
sub
mov
out
or
push
mov
pusha
shr
test
adc
pop
or
pushf
xor
pushf
pusha
xor
dec
adc
stos
jo
sarb
cld
xchg
push
adcb
cmpsl
xchg
push
xchg
adc
jb
daa
sbb
push
fwait
mov
jmp
mov
sahf
ror
jbe
push
sub
push
sbb
sub
mov
pop
es
sbb
neg
jge
push
mov
mov
daa
pop
sbb
cmp
cmpb
lahf
aas
push
mov
pusha
push
mov
adc
xor
sbb
mov
jl
and
ja
outsb
in
push
jno
fcomps
inc
pop
in
pop
mov
and
imul
cli
std
leave
and
enter
sbb
pushf
popf
scas
scas
cmp
pusha
push
dec
test
inc
lahf
or
into
imul
ljmp
in
stos
out
add
test
sbb
cmpsl
lret
outsb
jns
movsb
dec
clc
lds
push
movsl
out
scas
pop
pop
pop
hlt
movsl
mov
repz
cmp
adc
fistpll
ja
mov
xchg
pop
dec
mov
and
sub
or
xchg
sbb
divl
sbb
ds
push
mov
jmp
sbb
sti
push
push
jnp
cmp
push
outsb
cmp
inc
mov
sbb
add
shll
mov
lret
dec
or
dec
fisttps
clc
cltd
sbb
pop
movsl
ds
inc
xchg
add
imul
or
addl
jl
xchg
push
push
popfw
ret
lret
pop
xor
and
mov
fmuls
je
aam
fwait
mov
push
dec
jno
and
imul
aad
dec
rolb
lea
push
cwtl
aam
loope
sub
cmpsl
push
push
in
cmp
cltd
adc
scas
pop
gs
loope
sbb
popa
xchg
pop
les
xchg
cmpsl
jae
call
clc
push
jecxz
add
repnz
cs
ret
icebp
enter
lods
ret
imul
mov
and
xchg
jb
mov
mov
jecxz
js
fisubl
scas
add
or
sub
call
adc
inc
xlat
inc
pop
jae
and
rcrl
sub
lods
in
xchg
fildll
sahf
cld
xchg
imul
das
xchg
fdivs
sti
aaa
fldl
in
add
mov
std
push
xlat
jmp
xor
add
gs
sub
imul
cmp
add
cli
pop
mov
fiaddl
stc
push
dec
test
addr16
inc
pop
adc
push
es
test
repnz
aaa
add
lods
sub
pop
pop
out
mov
sub
xchg
fcoml
lods
int
mov
in
sub
mov
or
mov
movsl
insl
outsb
jo
push
fdivrs
push
jmp
pushfw
test
mov
fadd
sbb
mov
sbb
inc
inc
jnp
mov
adc
std
cmpsl
adc
cltd
bound
push
pop
mov
cmp
stos
leave
cs
mov
mov
xor
sub
pop
add
xchg
jnp
add
icebp
jle
jge
xchg
adc
mov
test
push
paddb
mov
jecxz
out
pop
xor
xchg
dec
push
nopl
test
mov
and
lods
lock
adc
cmp
jb
ffree
jns
inc
sbb
out
ds
fsubp
mov
je
scas
jp
lcall
icebp
cmp
xchg
mov
push
sti
test
ret
test
add
imulb
shlb
das
scas
scas
std
jl
fucomi
jns
cs
sbb
xor
cmp
shlb
inc
aaa
xchg
adc
push
lds
pop
ds
popa
outsl
and
imul
rcrl
repz
and
lret
sti
inc
pop
in
xorl
test
cmp
outsb
pop
cmp
lds
in
sub
sarl
ljmp
mov
fs
sub
and
dec
xchg
nop
adc
js
fdivs
iret
lcall
outsb
inc
sbb
sahf
test
incb
orb
add
mov
std
xor
out
out
cwtl
push
pop
adc
iret
subl
push
pop
jae
in
cmp
fcmove
dec
aad
adc
scas
mov
jmp
jmp
mov
insb
test
sbb
mov
dec
rcrl
popa
pop
jl
cmp
lods
mov
pushf
push
inc
test
ss
loope
jo
adc
jp
mov
mov
jg
in
movl
pop
xor
mov
fld
sub
fs
mov
psllw
iret
push
in
cmp
lret
movsb
movsl
sub
mov
cmp
sbb
test
bound
xor
xor
or
cmp
inc
push
mov
pop
out
js
aam
push
imul
push
out
xchg
push
pop
sbb
stc
cli
inc
mov
imul
pop
dec
or
dec
repz
movsl
mov
rcll
jb
sbb
jp
ret
sbb
inc
mov
cmp
aad
scas
out
das
mov
test
lcall
pop
shr
cmp
out
mov
xor
mov
sbb
pop
cwtl
lods
das
pop
hlt
jecxz
insl
jno
jge
pusha
out
in
ret
sbb
fs
push
in
popf
dec
aas
pop
lret
fbld
pushf
mov
xchg
push
fcomps
jg
fwait
aad
cmp
mov
dec
test
loope
test
push
adc
andb
fwait
jae
add
xchg
aas
sbb
int
fs
movsl
sub
xor
lds
negb
ror
push
cmp
enter
mov
jnp
ficoml
jecxz
int3
inc
out
or
or
jnp
xchg
push
push
jns
cmp
xor
cmp
jp
repnz
fcomps
popa
lods
cmp
les
test
or
sbb
xchg
fs
leave
inc
pop
ss
idivb
xchg
jae
and
lock
inc
lcall
jb
lret
out
sbb
in
jne
in
push
test
insb
push
inc
adc
jo
jb
rclb
arpl
sub
imul
push
mov
lcall
icebp
cmp
arpl
in
loop
dec
cld
ljmp
sub
push
add
xlat
lret
cmp
sti
pop
mov
mov
jae
ficoms
mov
add
push
push
lods
das
xor
aam
scas
sbb
dec
out
or
pop
push
loopne
mov
dec
ret
fistl
inc
xchg
sub
dec
sub
filds
xchg
xchg
xchg
mov
inc
sahf
cmp
xchg
lods
test
cmp
out
roll
mov
dec
cmp
ror
jno
sub
mov
hlt
int
call
test
jp
pop
adc
loope
shll
dec
mov
jle
cmp
adc
jne
cmp
xchg
fistl
xlat
push
add
hlt
movsl
int
adc
pushf
inc
sbb
adc
into
addr16
cld
xor
imul
shl
mov
scas
xchg
les
sbb
sub
movsl
imul
in
stc
andb
dec
jmp
ds
mov
pushf
orb
ret
dec
dec
ret
mov
cmp
stos
out
dec
mov
mov
or
subb
call
dec
pop
es
pushf
sbb
lret
adc
jle
jno
mov
xchg
andl
and
inc
leave
test
inc
xor
subb
sub
lods
cwtl
out
add
cmc
out
cmp
pop
lret
adc
cs
xorl
or
pop
inc
push
mov
mov
mov
pushl
fstps
push
jno
xor
in
lods
inc
inc
rcll
inc
movl
sahf
and
daa
ss
icebp
nop
jnp
cmc
int
lea
js
xchg
popf
repz
fiadds
out
mov
fwait
sbb
mov
push
pushf
imul
mov
push
mov
iret
sbb
sbb
insl
mov
or
nop
mov
xor
leave
sbb
rolb
test
xor
and
inc
add
dec
push
lret
rcll
sbb
incb
sbb
enter
and
inc
add
adc
xchg
mov
into
shl
pop
dec
mov
inc
sbb
mov
sub
sti
mov
mov
cmp
out
data16
and
mov
sti
push
mov
sub
lret
mov
movsb
push
clc
rorl
loop
jl
inc
gs
into
push
sub
arpl
sbb
imul
pusha
stc
movsb
fisttps
jb
dec
popf
pop
insb
jne
js
push
jo
out
and
subl
pop
inc
out
jne
mul
fwait
in
ret
lcall
std
sub
mov
scas
mov
sub
lods
call
push
enter
outsb
dec
adc
lret
or
jnp
dec
dec
int
jae
inc
cld
sbb
mov
inc
xor
clc
dec
mov
pusha
dec
sahf
clc
bound
push
movsb
inc
adc
sahf
pop
daa
jecxz
pop
adc
fdivrs
push
adc
jl
sarl
call
out
mul
add
cmc
adc
rsm
aam
sbb
pop
std
sub
sbb
enter
js
add
lret
sub
cmp
shlb
in
mov
mov
cltd
int
pop
sbb
movsl
sti
mov
or
dec
test
mov
cmpsl
jp
insl
dec
sub
cli
dec
fwait
adc
repnz
into
sbb
dec
scas
cmpsl
pop
mov
arpl
lods
fisttpll
fcomip
mov
js
insb
shl
mov
mov
or
jg
lds
pop
imul
pusha
inc
jns
add
xor
jo
cmp
cmpsl
jecxz
sti
iret
ljmp
movsl
clc
std
or
jle
add
lods
add
fildl
jne
cmp
dec
out
pop
push
pop
popf
push
cmpsl
pop
jne
inc
int3
std
push
testl
lds
sub
sbb
sbb
pop
jnp
xchg
jb
dec
ljmp
enter
push
pop
repz
jo
kxorb
jge
xor
lret
scas
lods
jae
push
sub
jne
mov
imulb
jae
out
push
lea
fxch
insb
xchg
rorl
mov
jmp
cmpsb
in
sub
adc
pop
hlt
adcb
lret
test
jmp
loopne
addl
outsl
adc
jg
dec
std
and
cld
jg
ret
addr16
mov
jle
inc
mull
ljmp
or
jge
dec
add
sbb
mov
pop
xlat
out
rorl
mov
push
inc
inc
pop
cmpsb
cltd
dec
aad
aas
or
add
jmp
sbb
sub
out
sub
inc
mov
in
jmp
arpl
nop
lahf
gs
insb
shlb
push
ret
xor
test
jg
sbb
mov
in
xchg
xchg
testl
test
js
aam
loop
mov
out
dec
push
icebp
mov
or
out
pop
arpl
or
rorb
mov
ja
fs
push
sbb
sub
sarb
push
cmp
imul
notb
pop
inc
mov
push
sub
lods
outsb
or
fmul
xchg
inc
enter
jmp
les
faddl
in
inc
call
or
mov
sub
mov
repnz
jmp
je
jb
je
les
xlat
xor
push
lahf
fcompl
test
pop
mov
push
push
jo
jp
sub
push
xor
dec
dec
pop
mov
sbb
jge
scas
mov
mov
pop
mov
push
mov
mov
or
add
pop
push
add
xor
fists
out
sti
in
mov
xchg
fstl
cmp
inc
push
jmp
mov
outsb
pop
xchg
and
add
hlt
push
jb
or
xchg
pop
icebp
dec
jle
cmp
in
push
repnz
or
in
ds
stos
pop
pop
mov
inc
andb
mov
pusha
rcl
sbb
pop
and
cli
push
or
popa
adc
lods
mov
mov
jl
gs
add
mov
mov
ljmp
push
jg
scas
pop
add
insl
dec
aad
stos
mov
ret
shrl
dec
icebp
dec
push
insl
lods
mov
mov
in
add
mov
push
jge
adcl
js
std
mov
mov
test
ret
rcr
sub
jb
xorb
jmp
cmp
xchg
jle
add
es
fwait
and
dec
loopne
hlt
mov
xchg
jnp
scas
lods
test
xchg
lret
mov
or
jb
js
into
sbb
out
loopne
mov
inc
push
jb
and
int3
cmpsb
lret
or
out
fcomip
js
subb
in
xlat
out
sbb
push
fildl
push
out
shr
cmp
test
and
mov
das
nop
lods
insl
push
sti
fistps
into
sbb
sbb
bnd
test
jmp
rcrl
xorl
sarb
loopne
pushf
sbb
dec
pop
pushf
push
clc
jl
hlt
push
inc
dec
jle
gs
xchg
mov
dec
push
arpl
out
fwait
add
inc
aam
push
dec
out
jo
adc
cwtl
xchg
inc
shlb
xor
xchg
insl
pop
inc
out
fldenv
cwtl
cmpsl
dec
push
pushf
jb
add
insl
xor
inc
jp
mov
pop
pop
cmp
gs
arpl
xchg
mov
lret
jno
pop
lea
jge
inc
inc
mov
insb
xor
xlat
movsb
pop
and
xchg
shl
test
int
and
int3
in
fnstenv
dec
add
mov
hlt
shll
push
jge
fisubl
in
mov
and
aas
cmpsb
inc
imul
xlat
pop
int3
or
test
or
push
andl
dec
mov
jns
icebp
mov
cltd
fsubr
in
dec
js
lock
mov
rclb
shrl
loopne
jg
test
out
push
mov
in
out
or
add
pop
mov
nop
dec
pop
lret
xor
push
push
cld
fwait
adc
cwtl
andl
loop
pop
testl
cmpsl
push
or
xor
ds
sbbb
sbbl
and
mov
and
cmp
cmp
and
in
and
inc
xchg
inc
adc
ja
popa
orl
and
cwtl
xchg
sbb
aad
mov
sbb
out
jecxz
ror
sahf
mov
mov
push
sub
mov
cmpsb
or
scas
pop
xor
insl
xor
mov
push
fcmovu
enter
decb
icebp
fdivl
pop
data16
in
jne
out
xchg
add
mov
inc
xchg
mov
lds
xchg
sub
mov
mov
nop
add
mov
insb
or
ficomps
jecxz
in
movsb
push
jle
push
mov
xlat
push
dec
leave
call
jae
mov
xchg
std
mov
adcl
ret
push
jecxz
dec
xlat
dec
jge
out
fisttps
inc
outsb
push
or
test
jb
stos
and
test
aam
cwtl
sti
repz
sbb
sbb
mov
or
movsl
int3
scas
repz
std
inc
push
mov
adc
syscall
xor
push
xchg
andb
xor
hlt
hlt
inc
add
imul
mov
shl
pop
cmp
loop
mov
cmc
pusha
iret
adc
and
jns
xchg
int3
jne
inc
xchg
in
clc
js
das
mov
loope
jmp
mov
or
in
mov
mov
lds
and
stos
insb
xlat
adc
sarb
repnz
cmpsb
test
mov
jno
addb
clc
icebp
xchg
jecxz
xchg
mov
lahf
or
pop
jne
push
in
repz
es
aad
les
xchg
dec
mov
push
cmp
fs
jmp
call
adc
dec
jecxz
shll
out
xlat
xor
sbb
dec
and
shll
pop
call
mov
cmpsb
inc
add
cmp
in
insb
push
push
dec
call
test
sub
and
dec
loop
cmp
test
jecxz
cltd
cli
cmp
lahf
fisttpl
test
outsl
push
aad
push
shr
mov
xchg
xchg
inc
shlb
xor
mov
in
jae
dec
repz
xor
push
fsubr
icebp
cmc
fisubs
arpl
mov
roll
outsb
push
push
sub
pop
int
in
stos
adc
xor
inc
xchg
popa
test
and
scas
push
mov
dec
xor
int
cmp
cltd
add
inc
ja
adc
pop
bound
adc
mov
inc
ret
inc
xchg
mov
sub
lea
or
std
pop
push
cld
int3
mov
or
outsb
gs
push
repnz
jmp
or
pop
pop
test
or
outsl
incb
inc
or
add
aas
stos
test
xor
mov
xchg
das
add
jo
xchg
xchg
les
loope
mov
fsubl
fiadds
adc
or
add
shld
mov
stos
push
pushf
and
dec
gs
in
mov
cmpsl
jecxz
cli
push
fucomp
jecxz
mov
cltd
sbb
mov
push
les
add
push
les
xchg
clc
pushf
pop
pop
xor
adc
jne
xchg
out
dec
or
out
lret
add
je
mov
sbb
fnsave
dec
sub
cli
dec
pop
test
sub
push
xor
cmp
push
inc
jno
shlb
popa
push
jp
sar
pop
mov
int3
out
xor
mov
lock
addr16
movsl
inc
ror
cmp
dec
mov
or
or
js
jle
jne
add
cmp
test
mov
xor
sbb
idivb
and
int3
mov
mov
pop
mov
and
xlat
mov
xchg
add
rcrl
aad
and
sub
adc
mov
stc
dec
xchg
inc
fstps
dec
dec
pop
icebp
sarb
pop
jmp
lret
mov
xor
das
dec
int3
fst
shll
insl
adc
jno
decb
push
mov
int3
iret
sub
negl
lea
push
mov
icebp
sahf
xor
xchg
push
stos
adc
cld
or
rorl
lahf
mov
ljmp
daa
pop
jns
mov
pusha
cltd
repz
inc
test
inc
jmp
add
bound
push
hlt
sbb
mov
push
and
jg
sub
cmp
fimull
punpckhbw
ja
jb
xchg
sahf
push
push
push
cs
xchg
out
jmp
aad
das
jecxz
add
test
xor
push
ret
xor
int
cmp
pop
bswap
mov
lock
ret
xchg
pop
imul
and
out
sahf
aad
sahf
or
in
fwait
jl
xorb
mov
xchg
lret
addr16
aad
ret
push
push
jo
mov
dec
mov
jmp
je
sar
pop
lcall
pop
out
lret
mov
pop
subb
or
movsb
or
stos
int3
pop
int
clc
aad
xor
jge
stos
xchg
mov
insl
add
rclb
clc
nop
xchg
sub
sub
mov
dec
jg
push
jbe
in
xchg
mov
jo
jmp
adc
add
ret
jb
out
aam
jle
and
int
cld
stos
xor
movsb
pop
cmp
add
and
loope
and
lods
add
es
test
mov
and
inc
call
inc
add
test
test
repnz
dec
jge
aam
ljmp
push
push
inc
movsl
sbb
addr16
jnp
fwait
jmp
mov
or
popa
inc
fmuls
xchg
mov
mov
sub
rolb
inc
jbe
push
ds
lods
mov
and
add
es
xor
arpl
pop
jmp
push
mov
xchg
popa
jle
sbb
mov
popa
adcl
pop
call
je
test
adcb
adc
sbb
or
dec
pop
in
add
addl
iret
dec
adc
cmc
mov
push
rcl
adc
push
loop
data16
aad
adc
inc
bound
mull
push
jle
out
xchg
pop
lock
jns
push
adc
movsl
cli
daa
cmpsb
nop
dec
and
xchg
pop
lds
push
lret
int3
xor
push
daa
leave
sub
insb
pop
sub
mov
pop
xor
jb
ret
fs
icebp
mov
sub
in
lea
sbb
sbb
inc
aaa
jp
sub
xchg
adc
push
push
fsubrl
xor
adc
shrl
shlb
or
lret
je
js
inc
adc
adc
jecxz
sti
push
inc
mov
dec
xor
or
fwait
dec
jmp
div
es
jo
fmul
adc
and
sbb
hlt
js
loope
imul
and
inc
sbb
shl
pushf
in
sub
sub
lds
inc
pop
xchg
je
inc
sbb
das
xchg
fsub
sbb
xchg
mov
adc
fcmovne
sarl
mov
jbe
test
xchg
mov
stos
shrl
jg
cmpsb
sbb
sub
jb
sub
push
mov
ja
cmp
sbbl
inc
jecxz
xchg
mov
mov
enter
call
fs
and
xor
jnp
dec
stc
jne
jl
loope
leave
daa
lea
sbb
xor
cmp
bnd
add
inc
clc
test
jecxz
movb
inc
rorb
mov
inc
xor
adc
loop
jnp
cmp
insb
jg
lods
jg
scas
shrb
add
scas
lahf
dec
mov
ds
xor
test
fidivl
in
jnp
jne
je
cmp
jmp
push
imul
xchg
repz
cmp
jae
and
xor
iret
pusha
stos
scas
les
pop
xor
aas
inc
fcom
shl
jae
mov
pop
inc
int3
xchg
inc
and
outsb
or
jnp
lods
xchg
aaa
jl
outsb
aam
fstps
mov
push
inc
iret
repnz
inc
cld
fdivp
push
jo
push
icebp
jo
mov
inc
imul
fwait
outsb
mov
push
icebp
xchg
push
cmc
dec
je
fld
stos
fnstcw
and
dec
dec
cmp
pop
dec
pop
les
shll
push
push
hlt
or
cmpb
rorb
jp
sub
lods
mov
mov
fmull
pop
cmc
pop
daa
xchg
mov
es
adc
jmp
sbb
xor
adc
adc
cmp
pop
rorb
fdivp
mov
ja
dec
cmp
jo
mov
fdivl
xchg
into
push
js
movsl
add
push
pop
data16
pop
inc
inc
pusha
cwtl
or
vmovss
adc
mov
jl
lahf
lods
repz
leave
xchg
arpl
add
pop
roll
jl
mov
cld
js
mov
inc
in
lods
adc
mov
subl
dec
mov
call
push
inc
aaa
inc
sar
or
cmp
push
mov
pop
stc
fldl
es
mov
pushf
push
cmp
frstor
sbb
ja
les
int
and
cmp
js
jmp
into
or
rcll
cltd
push
cmp
sbb
mov
mov
sahf
push
int
add
cs
pop
push
repz
test
sarl
dec
cs
fimull
sub
jecxz
xchg
and
push
xchg
cmp
pop
xchg
jns
xchg
mov
daa
mov
mov
push
pop
push
test
clc
mov
repnz
mov
mov
pushf
std
sub
add
or
sbb
rorb
jo
sbb
push
lret
bound
mov
cmp
xchg
mov
mov
fadds
mov
adc
xchg
mov
push
cmpl
push
cmp
fidivrs
pusha
mov
test
xor
dec
dec
push
pop
lcall
pop
mov
add
int
std
xor
insb
fstl
data16
popf
insb
xor
mov
pop
in
mov
test
in
push
add
mov
sbb
cmp
nopl
and
sbb
mov
adc
xor
xor
lea
cmpl
pop
cmp
loop
jl
add
insb
pop
and
lea
test
test
sbb
pop
lods
fisubrl
cmp
sbb
fwait
sub
inc
out
sbb
test
mov
ss
pop
or
shl
cmp
jg
jno
lret
cs
pop
loope
clc
fldenv
lea
mov
repnz
sarl
push
mov
cmp
push
stos
mov
out
mov
idivb
mov
xchg
mov
push
or
out
cmp
push
loop
lds
cmp
fimuls
mov
pop
imul
mov
call
les
mov
adc
mov
ret
xchg
sub
jno
mov
lea
mov
ret
jb
push
pop
out
xchg
sub
cwtl
in
jecxz
jne
push
and
cwtl
xchg
pushf
xchg
std
xchg
test
cmp
adc
fsubs
mov
and
adc
enter
jo
inc
xchg
aas
loopne
int
cmp
pop
cmp
lods
jno
cmp
jl
outsl
test
popa
adc
or
outsl
test
sub
pop
jmp
out
data16
push
xchg
pop
data16
test
popa
sahf
stc
and
pop
dec
sti
jae
sub
test
shr
sub
int3
add
aam
lcall
leave
stos
mov
push
ret
lret
fistl
test
push
data16
xor
outsl
and
jmp
mov
sub
xor
fistpll
and
cmp
mov
test
adc
fnstcw
repnz
mov
jp
cmp
mov
jae
cmp
push
ret
lret
int
add
sub
sub
cmp
shlb
xchg
jnp
jnp
jge
adcb
mov
sub
shll
mov
push
mov
adc
out
mov
xchg
push
or
adc
pop
sub
mov
mov
repnz
sub
mov
mov
stc
sarb
cmp
ljmp
clc
sbb
fnclex
mov
repnz
xor
and
fsts
movsl
es
fnstsw
fstpl
int3
std
das
jl
add
mov
ja
and
scas
bound
mov
out
test
lods
or
sub
or
sbb
mov
cmp
mov
lcall
xor
add
sahf
dec
add
mov
push
les
pusha
icebp
stos
xor
adc
add
rcrb
bound
call
mov
pop
mov
pop
divl
push
sbb
cmp
dec
inc
lods
mov
jl
loop
cmc
xchg
hlt
mov
push
jmp
aam
pop
pushf
inc
scas
or
dec
scas
inc
push
mov
daa
jnp
adc
rclb
mov
fistpl
pop
dec
repz
hlt
xor
push
sub
pop
jge
sbb
shlb
mov
fisttps
pop
mov
fwait
pop
xchg
cmp
adc
lods
mov
scas
sbb
sbb
out
inc
jo
xchg
dec
sbb
mov
add
or
sub
xor
mov
mov
test
fs
mov
or
aas
fsubs
repz
push
daa
inc
jp
nop
jle
pop
mov
inc
push
and
xchg
ljmp
sahf
mov
loope
dec
cld
push
jno
lods
fistpl
sahf
pop
daa
push
das
add
pop
pop
sarl
popf
fsubl
iret
mov
sti
dec
aas
add
cwtl
mov
sbb
sub
xor
mov
jo
je
ja
cmp
sarb
movsb
add
in
jl
dec
mov
dec
jecxz
and
in
ss
adc
fisubrl
pusha
mov
xor
push
cmp
and
into
nop
pop
xlat
push
stc
aad
jnp
dec
jl
xchg
jg
dec
jge
or
sub
movsb
shlb
out
lcall
xchg
jnp
sub
mov
xchg
jmp
in
adc
push
imul
lods
xchg
add
sti
sub
cwtl
push
mov
dec
enter
inc
pop
lods
daa
sbb
sbb
daa
cmp
mov
sub
jg
lds
in
out
push
push
mov
xchg
rorb
xchg
xchg
test
std
mov
mov
fisubrs
lock
push
in
mov
mov
into
mov
cmpl
mov
imul
sahf
outsl
cmpb
sbb
and
xchg
iret
lock
mov
dec
add
xor
imul
cwtl
mov
cli
jl
sub
aam
adc
or
and
enter
jecxz
push
sahf
hlt
or
imul
lds
scas
or
push
js
adc
adc
fcmovnb
adc
mov
aaa
imul
rol
in
jmp
push
mov
repz
std
and
ja
xchg
div
jp
jns
dec
cs
cmp
rcll
daa
mov
pusha
jmp
addr16
loopne
pop
fstpt
shl
cmc
lds
lret
out
mov
xor
bound
mov
lock
mov
imul
imul
popa
bound
add
xchg
fisubrs
mov
push
xlat
lcall
xchg
dec
push
or
imul
mov
jp
arpl
popa
mov
adc
sbb
inc
imull
xor
mov
lcall
ret
jb
cs
push
loopne
mov
arpl
xchg
xor
lret
popf
scas
mov
pop
sti
fs
jb
jg
and
lea
ret
ljmp
ljmp
int
cmp
iret
mov
mov
mov
or
aaa
cmpsb
xor
call
add
fistpll
mov
or
adc
pop
adc
pop
mov
inc
clc
orl
ficoml
std
pop
sbb
je
dec
xor
mov
int
sbb
aad
dec
jecxz
dec
push
add
repnz
dec
pop
sahf
xchg
jnp
movsl
adc
in
xchg
cmpsl
lock
movsb
daa
adc
mov
in
fs
push
xor
pop
int
inc
stos
mov
pop
mov
mov
jo
pop
fs
daa
dec
out
lret
xorl
pop
xchg
jg
in
sbb
inc
in
shlb
xor
mov
decl
mov
insl
outsb
push
movsl
mov
ficoms
mov
sti
cltd
insl
add
jnp
mov
sub
mov
adc
push
lds
std
sbb
mov
lea
clc
les
and
sub
jle
negl
cmpb
fwait
xlat
mov
dec
call
dec
xor
popa
sbb
xorb
ds
pop
into
sbb
lods
mov
adc
inc
shl
fcomip
js
inc
leave
adc
popf
mov
cmp
lds
jmp
or
movsb
xor
mov
dec
daa
inc
sub
push
xchg
or
mov
pushf
pop
mov
icebp
enter
xor
mov
daa
enter
mov
daa
dec
adc
jae
dec
clc
sti
adc
inc
jp
icebp
jg
pusha
pop
push
cwtl
icebp
ret
mov
push
cs
pop
xor
push
outsb
add
dec
mov
sti
test
int3
loope
or
ds
rcl
jmp
imul
and
sub
mov
pop
insb
mov
cmp
les
add
lods
popf
adc
hlt
xchg
pop
jns
imul
inc
jge
movsl
xchg
arpl
mov
dec
adc
mov
mov
lea
jge
jnp
lods
adc
jge
out
xor
loop
dec
jb,pn
aad
and
js
cs
adc
lret
lret
xchg
movsb
xchg
xchg
jo
inc
xor
enter
or
pop
mov
notb
jecxz
xchg
xchg
sarl
cmp
mov
ret
test
ficoml
std
test
mov
arpl
inc
add
loop
stos
sbb
bound
mov
jle
mov
hlt
fdivrp
into
fnstsw
scas
fidivl
mov
mov
push
imul
outsl
scas
fs
mov
std
cmpsl
inc
cwtl
xchg
xchg
mov
inc
pop
es
jno
dec
add
mov
adc
sub
dec
dec
push
int3
orb
xor
rcl
push
arpl
fstl
pop
push
lock
addr16
shrl
je
or
sbb
jge
cld
lds
inc
sbb
adc
pop
push
into
ja
sbb
imulb
sbb
pop
rorl
inc
lods
dec
jge
cld
mov
mov
dec
sub
rorl
sub
in
mov
cli
popf
insb
mov
arpl
dec
shrb
inc
jge
les
lahf
daa
and
cmp
int3
pop
stc
add
repnz
push
jbe
jbe
ret
adc
xchg
jl
mov
add
pop
outsb
push
lock
lods
in
mov
aad
addr16
mov
jmp
xor
xor
aam
insl
jp
ret
mov
imulb
or
cmp
jbe
jp
fcompl
cmp
iret
push
dec
jmp
mov
cmc
cmp
add
hlt
test
lods
sbb
jmp
sbb
and
call
mov
pop
mov
mov
cwtl
cmp
cmp
cli
lret
push
inc
pop
leave
flds
aad
jo
push
inc
lds
and
mov
xor
jge
call
sarb
aas
int
mov
inc
adc
repz
repz
mov
dec
popf
sti
cld
std
add
add
shll
shll
and
add
das
pop
dec
insl
loope
fsub
lods
inc
and
ret
pop
and
mov
dec
loop
cmp
pop
xchg
not
sbb
popf
inc
das
pop
in
mov
stos
stos
rol
push
or
adc
mov
into
lock
pop
add
mov
or
dec
faddl
in
push
fnstsw
sbb
cmpsb
inc
movb
adcl
int3
xchg
jle
addl
jg
mov
dec
call
jge
pop
mov
and
int
jnp
cltd
xor
push
sbb
and
dec
xchg
lret
cmpsb
pop
jo
dec
ret
idivb
fsubl
leave
sub
and
xchg
imul
cmp
fwait
les
mov
nop
clc
lock
pop
std
ljmp
mov
ss
ja
mov
or
sar
xchg
lahf
sub
stos
cltd
push
popa
push
jmp
jnp
mov
push
inc
and
cmpsl
dec
clc
pop
stc
jnp
xor
pop
fs
sbb
cmc
aam
jmp
sahf
fisubrs
cli
shrl
xor
dec
das
jmp
rclb
dec
shlb
xchg
mov
sbb
adc
jae
mov
aas
aam
xchg
pusha
mov
mov
pop
pusha
lcall
mov
adc
ret
mov
jb
mov
popa
dec
aaa
sub
push
out
lock
decl
lds
lret
push
ljmp
daa
or
pop
gs
mov
cltd
mov
push
je
lcall
jecxz
or
jp
cmp
mov
enter
push
dec
ret
mov
loop
xor
mov
ds
inc
inc
cmp
mov
push
jnp
xor
mov
lods
hlt
pop
test
ret
into
ret
lods
fisttpll
jmp
or
aaa
xchg
mov
pop
fwait
shl
and
dec
cmp
test
mov
icebp
mov
xchg
jae
orl
lcall
movsl
xchg
addr16
call
mov
jle
sub
out
sub
add
fcomps
xchg
lret
movl
inc
push
cs
xchg
xor
sub
loope
addr16
lret
and
imull
out
popa
pop
jecxz
rorl
les
ret
ret
add
sub
adc
outsb
mov
mov
popa
cli
shl
adc
pushf
xchg
push
xorl
push
movsl
xchg
mov
sbb
in
sub
mov
xor
mov
push
cmc
std
push
mov
xchg
out
dec
pop
in
cwtl
pop
int
imul
in
sub
sbb
mov
out
imul
push
inc
dec
movsl
scas
jns
cwtl
mov
pop
jb
arpl
movsl
out
sahf
inc
inc
in
lea
sub
inc
or
js
xor
mov
mov
cld
cmp
jo
jecxz
ss
ret
xchg
cltd
xor
in
testb
xchg
mov
inc
push
xor
mov
lret
cmp
push
clc
add
jb
mov
sbb
int3
sub
push
xlat
stos
pop
ret
push
aad
scas
mov
aaa
jecxz
adc
dec
add
mov
mov
adcb
jl
ja
cmc
iret
sarb
js
lds
jl
or
ljmp
or
mov
or
jmp
mov
mov
rcrb
push
sbb
sub
mov
push
std
mov
clc
iret
push
or
inc
add
in
out
and
notl
or
xchg
jae
cmp
xchg
sbb
into
repz
sahf
jge
clc
das
test
pop
inc
cmp
in
dec
sbb
add
mov
les
jp
jecxz
pusha
cmp
mov
mov
imul
adc
repnz
or
xorb
aaa
inc
jg
sub
cld
nop
mov
and
jnp
sub
cmp
push
pop
jge
xor
mov
js
gs
jns
push
cmp
jae
mov
sbb
and
std
inc
or
cmp
xchg
sub
pop
fisubs
adc
lods
or
stc
cwtl
lret
mov
sub
testb
fcmovnbe
cmp
pop
mov
ja
fwait
dec
stos
push
addr16
pop
les
rorb
or
sbb
and
pop
dec
cmp
insb
negb
fcomi
inc
xchg
fimull
popf
pop
js
imull
add
push
sbb
aam
mov
adc
daa
xor
mov
sub
jle
fbstp
push
push
xor
xor
xchg
mov
adc
fscale
ret
inc
lds
mov
outsb
inc
xlat
test
and
sub
cmp
fsincos
out
pop
mov
sbbl
xor
faddl
and
mov
out
cmp
sti
int
and
or
jns
fisttpl
mov
sub
fistps
scas
push
mov
aas
jl
das
ljmp
sub
push
sub
pop
push
daa
out
mov
jp
push
lock
in
jbe
jg
dec
dec
mov
adc
xor
xor
xor
xor
pop
xchg
shrl
xor
icebp
mov
mov
mov
fucomi
xor
popa
or
push
jne
adc
imul
or
dec
jno
out
int3
xchg
pop
out
repz
pop
dec
jne
mov
cmpsl
dec
mov
xchg
lret
pushf
aad
sti
loope
outsb
out
rcll
add
pushf
pop
xchg
sub
leave
mov
jle
xor
xchg
xchg
jmp
jmp
jecxz
arpl
mov
jo
lods
ds
push
adc
aas
pop
inc
mov
xchg
sbb
or
fwait
rcr
lods
clc
jle
push
cwtl
les
ds
subb
jns
jle
mov
arpl
xor
sbb
mov
sub
inc
or
push
rorl
sbb
aam
cmc
ljmp
out
push
loop
jb
sbb
pop
mov
jl
in
xchg
movsb
sbb
stos
das
dec
jnp
sub
mov
adc
pop
sub
lret
and
cmpsl
add
ss
lahf
xor
fbstp
fwait
bound
cli
jecxz
lcall
push
outsl
adc
sahf
cmp
out
push
or
orb
notl
mov
dec
lret
and
cwtl
xor
aaa
out
hlt
dec
jle
into
popf
xor
mov
clc
negl
sub
xor
inc
mov
xlat
sbbb
loopne
mov
and
jp,pt
xchg
sub
insl
xchg
cmc
add
pop
or
push
addr16
pushf
in
cwtl
pushf
mov
cmp
daa
out
xchg
mov
ja
into
cmp
ret
or
cmpb
mov
push
mul
xor
lret
mov
push
clc
inc
dec
ds
pop
mov
and
mov
fcmovne
fmul
xchg
f2xm1
test
jno
xor
sub
push
insl
xchg
push
rclb
or
mov
fld
cmp
test
out
cmc
enter
mov
je
xchg
adc
pop
xchg
in
mov
lcall
mov
pop
pop
lods
adc
shrb
dec
push
xor
sti
imul
sahf
pop
fwait
bound
xchg
stos
jg
or
jp
xor
xchg
xchg
xor
or
cli
call
jo
leave
aaa
stc
or
push
imul
adc
lahf
cwtl
imul
stc
dec
ret
cmp
mov
in
fs
fmull
out
jge
mov
mov
dec
dec
lods
callw
mov
outsb
pop
ja
aas
aas
dec
lods
lret
add
and
cmp
sub
jae
movsb
imulb
pop
push
lods
adcl
sub
mov
sbb
mov
adc
fwait
repz
dec
lret
imul
fbstp
daa
jne
lods
lret
pop
je
outsl
jne
mov
cmp
jo
xor
xor
xor
sub
cmp
and
dec
fstpt
stos
add
and
pushf
xor
movsl
leave
fcoml
test
jns
mov
adcb
mov
aas
arpl
sbb
test
mov
mov
mov
shlb
into
pop
inc
inc
ljmp
cmp
cmpsb
addl
add
daa
lahf
aaa
ds
shlb
mov
mov
insb
inc
or
jg
sub
xchg
lods
cwtl
cmp
mov
mov
and
pop
pop
fistps
add
test
dec
mov
sarb
cli
xchg
xchg
mov
int
not
aaa
sti
jne
mov
push
mov
leave
in
sub
jmp
roll
push
imul
fnstenv
xor
push
sbb
dec
jne
mov
adc
xchg
sub
pop
mov
addr16
enter
lret
mov
aas
mov
mov
and
cmp
pushf
xor
loope
mov
stos
jg
sbb
sub
int
pop
cmp
mov
xlat
xchg
or
push
push
xchg
addr16
daa
cs
dec
add
cmp
sbb
cmp
dec
ljmp
test
mov
into
jmp
int
les
into
add
jne
mov
js
xchg
lods
mov
loopne
or
mov
jmp
or
jne
xor
mov
int3
inc
stos
sub
ljmp
jp
add
mov
mov
sbb
add
mov
movsb
sbb
ror
pop
std
inc
in
add
pop
or
out
mov
stc
adc
out
repnz
or
inc
or
filds
mov
jns
push
and
enter
fs
push
pusha
mov
pop
shl
sbb
loop
xchg
mov
cmp
loope
push
jp
mov
xchg
movsb
movsl
sub
xor
mov
aas
aam
dec
jae
loop
sub
xchg
sahf
cwtl
xchg
in
int
ficomps
sbb
adc
sub
cmp
push
add
xor
adc
clc
rcl
push
icebp
call
push
jb
mov
adc
jo
sbb
cli
or
xchg
jmp
mov
sbb
fsubr
insb
insb
cli
mov
mov
xor
out
cmp
mov
loop
dec
test
nop
inc
aaa
and
sub
lods
xchg
outsl
xlat
or
pushf
sbb
in
pop
add
addl
xchg
push
test
jns
lods
xchg
pop
sub
popa
scas
enter
aaa
notb
or
lahf
dec
adcb
insb
cs
sub
shrb
add
mov
mov
jnp
cmpsl
cmp
stc
cld
push
mov
jbe
jbe
cmp
js
rcrl
sub
xor
mov
stos
jb
push
in
inc
iret
cs
orl
cvtps2pd
sbb
mov
stc
mov
ds
mov
mov
pushf
outsb
or
mov
popf
test
sub
hlt
add
mov
jge
mov
fdivs
fists
sub
or
scas
fwait
sbb
xchg
fcomip
lds
std
jg
rolb
bound
mov
push
addr16
aas
inc
fcomp
mov
xchg
popf
outsb
jb
out
push
mov
xchg
fildll
roll
or
xor
sbb
sub
iret
sub
adc
bound
jge
sbb
push
mov
mov
add
dec
adc
aam
arpl
dec
push
pop
inc
xor
xlat
inc
je
fmul
xlat
int3
mov
shll
es
and
pop
daa
dec
sbb
lahf
inc
scas
cmp
int3
mov
pop
sub
imulb
push
hlt
mov
add
push
je
push
pusha
mov
xor
dec
mov
test
cld
in
cmpsl
push
fstpl
mov
mov
pop
mov
push
std
push
add
shl
xor
inc
in
pop
imul
cmc
sbb
loopne
mov
cmpsb
sar
pop
and
pop
add
push
shl
sbb
push
test
shll
je
add
xor
jp
mov
dec
test
xor
cmpsl
xchg
or
add
stos
mov
add
in
pop
addb
and
mov
push
cmpsb
add
jp
imul
xlat
int3
popa
jge
outsl
or
cmc
jae
ja
sbb
xchg
jne
sbb
lods
inc
pop
or
add
pushf
stos
sti
shr
cmpsb
mov
loope
fwait
rolb
jae
adc
ficoms
jno
mov
push
js
sar
js
fmull
rcrb
push
pop
in
mov
jnp
cltd
mov
fildll
jle
pop
mov
mov
push
jmp
js
movsl
cmp
or
and
jmp
testb
mov
imul
rorl
push
and
sub
cmp
push
mov
je
mov
mov
adc
cmp
in
mov
and
pop
cld
insl
inc
pop
mov
sbb
pop
or
ds
ret
dec
imul
pop
push
ficoms
lods
loopne
int
out
push
push
idiv
jo
shl
lock
loopne
mov
push
sets
rcrl
xchg
fucomp
sub
lret
dec
pop
xchg
xlat
arpl
or
jns
rcrl
mov
decl
add
aad
add
into
push
xlat
pop
mov
jl
lret
dec
xor
or
mov
xor
scas
decb
js
in
loope
test
fimuls
jns
cmpb
popf
popf
inc
add
lret
push
fistps
outsb
enter
jl
push
mov
outsl
pusha
push
iret
mov
cmpsl
and
add
and
pop
sbb
loop
push
sub
cmc
sbb
ja
imul
rol
jnp
xorb
add
jl
pop
cmpsb
insl
mov
pop
gs
ds
out
into
jae
sub
scas
sbb
xchg
add
rorb
stos
sbb
das
popf
mov
hlt
sbb
shlb
jae
popf
ds
imul
xor
aad
xchg
lcall
pop
pop
pop
fcomip
add
sbb
jns
ljmp
xlat
les
dec
lods
inc
je
addr16
add
into
push
out
inc
int3
iret
sub
lods
jecxz
jmp
push
cmc
hlt
cld
inc
pop
push
out
movsl
fst
fstps
push
js
inc
adc
adcl
int3
jge
stos
mov
sub
and
jle
jmp
sub
lcall
push
in
push
aas
jecxz
or
cwtl
mov
ja
mov
sti
ret
sahf
ljmp
cmp
lods
mov
add
sub
push
mov
test
rorb
xchg
test
add
cltd
mov
je
test
lahf
push
inc
pop
dec
xchg
xlat
inc
aaa
and
sub
adc
scas
mov
imul
aam
xor
ds
arpl
lods
jmp
sub
adc
fstl
test
push
mov
pop
mov
dec
scas
mov
mov
mov
mov
mov
cmp
mov
aas
xchg
pop
sub
cmp
pop
push
adc
lds
push
out
jnp
aam
mov
adc
inc
xchg
iret
popf
add
repz
inc
out
push
movsb
les
mov
pop
xor
jecxz
test
icebp
cmp
cltd
or
inc
pop
sub
shl
adc
insb
mov
test
stos
in
lret
adc
aam
inc
dec
ficoml
clc
cmp
movsl
add
and
dec
stc
popf
aas
out
cmp
iret
iret
fs
jecxz
and
xor
pop
ljmp
adc
pushf
lcall
push
xchg
push
es
dec
dec
xor
adc
enter
pushf
rcrl
mov
pushf
fadds
les
push
adc
movsl
sbb
mov
das
rcrl
mov
dec
push
cmp
xor
cs
push
stos
popf
cld
xor
call
cwtl
add
cmpb
aam
xchg
push
mov
dec
in
sahf
xchg
ljmp
test
repz
adc
outsl
fidivl
xchg
push
fcoms
mov
lods
pop
sbb
mov
xchg
and
jb
scas
es
mov
hlt
ss
inc
mov
movsb
inc
outsb
adc
lods
fisttpll
shlb
xor
outsb
xor
or
lret
sub
and
push
insb
add
push
test
in
mov
pop
xchg
das
icebp
or
shll
pop
add
fstps
jecxz
cmpsl
mov
dec
enter
daa
jl
subl
inc
enter
sbb
xchg
or
imul
test
mov
sarb
xchg
jns
aam
mov
dec
hlt
xchg
and
fmul
or
lock
dec
xchg
mov
rol
jnp
fwait
push
ret
cmp
dec
shl
cld
sub
dec
inc
sub
in
pop
fs
push
pop
mov
fnsave
inc
push
cltd
jp
push
gs
ret
jns
out
sub
jecxz
pop
pop
repnz
aad
adc
pushf
fistpl
cmp
out
cmpl
std
ret
inc
mov
mov
test
cmp
pushf
inc
or
add
lret
sbb
jb
pushl
test
mov
sub
fcoml
cmp
in
testl
xchg
xor
nop
and
mov
fbld
mov
mov
xchg
mov
sub
ja
jne
mov
iret
cwtl
mov
test
es
jne
faddl
inc
test
gs
aam
inc
shlb
lock
xchg
add
icebp
shr
test
xchg
call
aad
mov
popa
fisttpl
sti
roll
pop
psrad
xor
popf
cmpsb
andl
out
shlb
xor
sub
adc
xchg
inc
adc
lret
ret
pop
clc
xchg
orl
mov
cltd
jmp
add
or
push
inc
and
fildl
gs
test
les
clc
sub
fwait
shll
and
sarl
ret
test
sbb
sub
sub
or
notb
pop
add
rcrb
and
push
cmpsb
mov
scas
cmp
imul
xchg
cmpsb
mov
xor
out
mov
ss
cmp
mov
pop
push
inc
scas
pop
cmp
adc
arpl
sti
dec
xor
mov
rorb
js
pushf
dec
mov
mov
frstor
ret
xor
test
jno
fisttpll
xchg
es
xchg
test
fildll
lahf
imul
into
pusha
mov
push
cld
jl
sbb
mov
jnp
hlt
lea
ret
mov
pop
xor
idivl
or
jae
in
imul
jmp
inc
mov
test
lods
jecxz
or
lahf
cs
push
daa
add
roll
dec
add
sbb
js
ja
mov
push
cmc
insb
sbb
sub
dec
xchg
cld
jno
lret
sub
fadds
and
leave
shll
std
xor
add
aad
movsl
xor
pop
add
stos
lock
hlt
and
cltd
mov
shlb
out
dec
mov
outsb
mov
outsl
pop
jg
push
stos
sbb
icebp
sub
fimull
add
repnz
stos
outsl
gs
fiadds
cli
daa
sbb
xorb
inc
and
inc
movsl
outsl
pop
cli
mov
sub
sub
add
xchg
jle
addr16
or
mov
out
aaa
sub
andl
inc
and
sbbl
or
lret
test
fstps
adc
lods
adc
int3
fimull
xor
mov
add
negl
pop
js
jmp
into
and
cmp
pop
mov
fisttps
sbb
data16
das
lahf
mov
iret
cmp
and
nop
jbe
mov
add
lds
fcmovu
fmull
and
mov
pushf
fisttpl
imul
stos
adc
cmp
mov
pop
cli
xchg
mov
lret
mov
sbb
push
mov
xchg
pushf
sbb
cmc
cmp
inc
shlb
mov
lods
mov
divl
pop
lcall
out
lods
aam
sbb
popf
cmp
cmp
cmpsl
xor
mov
and
daa
fstpl
jbe
out
cwtl
pop
pop
nop
push
sbb
dec
bound
and
sub
xchg
stc
test
int
in
add
xchg
out
mov
dec
aas
cmp
adc
push
imul
loope
adc
pop
lds
mov
aad
sub
sbb
mov
popf
aaa
cs
loopne
or
xor
mov
scas
adc
addr16
ja
mov
cli
out
je
inc
outsl
aas
xchg
inc
enter
sarb
cltd
mov
testl
adc
cli
call
push
jns
imull
jne
popa
sub
mov
add
dec
and
jbe
into
nop
int
pop
sbb
inc
lret
cmp
popf
jmp
xor
test
mov
sbb
sbb
dec
push
out
xor
xchg
jmp
inc
imul
mov
addr16
and
jae
test
lret
cld
cmp
adc
jmp
pop
jo
jle
sti
sti
or
bound
mov
pushf
xchg
loopne
gs
int3
cs
xchg
lret
les
fs
cltd
xchg
fsubl
push
lcall
je
mov
lea
push
clc
loope
xor
and
and
xchg
test
dec
out
mov
cmp
lock
add
fs
push
repz
cld
jno
in
arpl
ss
cmp
divl
lahf
adc
sub
clc
pop
pop
inc
inc
mov
test
push
lods
adc
pop
divb
ljmp
cltd
mov
mov
mov
ss
mov
pop
or
adc
ja
mov
mov
arpl
adc
sahf
insl
jae
lock
mov
jns
int3
xor
shr
or
fisttps
cmc
cmc
sbb
pop
push
fldcw
andl
push
push
call
movsb
mov
aad
ljmp
data16
mulb
fisubrs
and
fldcw
arpl
sahf
lret
xor
into
cld
scas
pop
add
shlb
pop
out
ret
and
jge
fincstp
adc
iret
jecxz
test
ja
sub
loop
xor
or
jae
sahf
push
andb
mov
mov
push
inc
and
xor
clc
repnz
in
push
ret
mov
ljmp
rclb
or
enter
icebp
int
xchg
lret
inc
cltd
mov
clc
mov
ret
sbb
outsl
test
sbb
mov
or
xchg
xchg
xor
imul
and
xchg
sbb
popf
pusha
or
popa
fmull
add
je
scas
aas
call
pop
mov
mov
pushf
mov
sub
shrb
repnz
stc
jnp
inc
mov
mov
ds
popf
stos
fsubp
test
fs
xor
scas
push
dec
daa
jle
sbb
jae
and
dec
lahf
push
mov
jne
repz
iret
out
test
or
gs
pop
mov
in
clc
loopne
push
outsb
mov
test
push
jno
add
fwait
pop
mov
and
cltd
inc
fistpll
pop
jp
jecxz
fiadds
xchg
scas
pop
adc
xchg
or
push
call
arpl
pop
fmull
mov
jne
inc
mov
lret
push
cs
pop
inc
mov
or
mov
nop
call
jns
in
cmp
lds
and
into
mov
inc
repz
movsl
ds
xor
inc
and
cmpsb
cmp
daa
jg
jge
cld
das
outsl
cmp
inc
lods
jge
and
push
inc
xor
sbb
pushf
jo
ljmp
adc
shl
rorb
ret
mov
dec
inc
inc
fiadds
in
stc
std
jl
mov
data16
cmp
dec
ljmp
xlat
adc
push
cmpb
adc
mov
jbe
mov
sub
test
push
cwtl
push
loopne
lods
xchg
xchg
adc
mov
dec
std
int
enter
cmp
xchg
lret
pop
mov
test
inc
mov
dec
mov
pushf
jg
dec
cs
into
fdivl
inc
push
popa
insl
mov
cmc
add
ror
cltd
and
pop
test
pop
rcl
and
into
dec
pop
mov
div
movsl
adc
mov
mov
dec
sbb
jl
jp
mov
sbb
out
lock
inc
aaa
and
out
fs
mov
in
ljmp
cwtl
push
or
mov
jl
xchg
jmp
inc
jns
stc
jecxz
out
inc
fisubl
mov
rcrl
push
xor
xor
jmp
xor
mov
sbb
mov
jmp
mov
and
xchg
add
xchg
and
cmp
sub
cmp
es
inc
das
mov
push
inc
jp
mov
add
xor
insl
adc
das
js
pop
int3
push
andl
and
mov
mov
jp
lods
cmp
scas
les
cmp
jae
inc
stos
mov
movswl
out
pop
fwait
cmpb
push
dec
lock
jmp
and
pusha
jg
test
mov
cmpxchg
cmp
in
orb
adc
rorb
pop
xor
inc
mov
shr
rcr
mov
test
out
cltd
push
inc
jbe
jo
sti
xor
repz
gs
aam
xor
mov
mov
adc
pop
movsl
out
xchg
xchg
cmpsl
insb
sarb
int
mov
inc
push
mov
shlb
aaa
jns
or
jns
fsts
int3
and
jg
xchg
adc
dec
mov
mov
arpl
mov
shll
and
call
mov
push
fdivr
mov
mov
or
adc
fidivs
and
push
mov
mov
out
dec
jmp
push
pop
cmp
sbb
lea
mov
pop
cmpsl
mov
push
loope
cmp
pusha
cmp
xchg
jb
sti
inc
sub
xchg
push
clc
mov
cmp
sbb
jl
imul
leave
mov
push
push
mov
mov
iret
inc
movsb
out
fwait
mov
xor
mov
iret
faddl
push
pop
in
pop
mov
shlb
nop
out
push
sbb
push
ret
push
out
sar
mov
or
out
jmp
ljmp
cmp
movsb
into
insl
imul
jae
sahf
push
pop
iret
les
mov
out
nop
mov
add
loope
sbbl
aas
xlat
test
das
inc
mov
lds
lods
movsl
sub
jge
dec
mov
mov
scas
push
add
xor
mov
testb
js
insl
nop
cmp
mov
daa
lahf
sub
mov
nop
xchg
out
push
mov
out
int
cmp
pop
inc
repz
inc
mov
mov
inc
jb
fstpt
scas
jmp
xor
pop
push
sub
ljmp
lock
scas
mov
mov
adc
out
jg
filds
dec
jb
inc
cmp
in
xor
push
push
mov
jno
mov
push
xor
inc
mov
sub
jmp
es
and
sub
and
fs
jl
dec
push
mov
sbb
jecxz
jb
dec
ret
cmp
ret
jecxz
test
cmp
gs
call
repnz
mov
scas
repnz
test
insb
stos
pop
pop
ja
mov
push
pusha
ljmp
or
jp
inc
push
pop
pop
jno
lret
scas
stos
jbe
xchg
divb
jmp
addr16
xor
or
fnstenv
je,pn
xor
and
mov
mov
mov
sbb
cld
imul
sbb
add
aad
js
mov
cld
jbe
xchg
xchg
push
ss
inc
inc
shlb
out
push
int
pop
or
test
mov
mov
mov
test
pushf
test
in
lods
dec
sti
test
rolb
sahf
push
aad
mov
or
ret
inc
xor
lret
mov
repnz
push
setno
int3
cmpsl
or
das
adc
push
ret
andl
add
imul
daa
popa
loop
ror
cmp
loop
mov
sbb
adc
cwtl
iret
inc
icebp
inc
or
idivb
mov
in
mov
or
pop
and
scas
push
sbb
aam
in
outsl
mov
mov
pop
test
call
dec
mov
push
mov
loope
idiv
jns
add
cmovne
pop
dec
popa
das
adc
testb
lahf
xlat
mov
popa
and
mov
add
sahf
and
mov
fwait
nop
pop
cmp
call
cmp
mov
mov
adc
das
fildl
adc
movsb
pop
and
pop
popf
inc
lods
mov
notb
inc
jnp
mov
jnp
out
in
sahf
lahf
dec
and
or
sub
testb
fidivrs
gs
fstl
pop
xchg
pop
jecxz
stc
imul
movsl
fwait
cmp
dec
call
rol
in
mov
stos
xchg
and
pop
lods
mov
pop
xchg
cmp
or
fcoml
jmp
popf
mov
xchg
mov
pop
subb
mov
sarb
mov
mov
add
sbb
jle
xchg
fbstp
lahf
or
pop
and
cmpsl
in
mov
push
push
sbb
mov
and
cmp
in
jmp
int
test
fisttpll
mov
fnsave
mov
int
adc
and
ds
loop
sahf
push
addr16
or
lahf
cmpl
sbb
push
call
lret
dec
stos
jmp
movsl
xor
in
adc
inc
out
jl
pmaxub
gs
pmuludq
pop
lcall
add
jno
jne
xor
lods
mov
nop
ljmp
adc
icebp
in
inc
adcb
dec
cmpsl
int
lahf
insb
aam
in
in
hlt
lds
fsubrp
and
popf
sbb
mov
fsave
mov
mov
out
stos
cmp
sub
cmp
and
hlt
aad
shrl
ds
fisttpll
lret
mov
cmp
inc
add
loopne
pop
loope,pn
pop
or
inc
sbb
push
dec
adc
dec
pop
push
jmp
pusha
inc
and
jl
dec
mov
out
dec
push
lods
pop
jle
sub
pop
mov
sbb
inc
int
mov
pop
imul
sarb
jb
push
cwtl
xor
das
and
inc
push
mov
cld
jle
outsl
cwtl
iret
or
dec
mov
jns
inc
mov
push
daa
mov
xor
xchg
pop
insl
int3
xor
dec
pushf
pop
clc
dec
jae
pop
adc
mov
movsb
and
xor
testl
pop
xor
mov
lock
rolb
push
push
or
leave
push
pop
lods
imul
fiaddl
mov
test
clc
mov
in
in
dec
lock
lcall
enter
jb
ljmp
pop
jmp
mov
sar
nop
adc
lods
out
xorl
lahf
xor
ljmp
nop
cwtl
mov
add
pop
mov
jne
test
iret
popa
push
mov
aaa
jecxz
into
jnp
jns,pt
call
cli
pop
out
ljmp
or
aam
sub
mov
and
movsl
test
ficomps
fs
xchg
shrl
sahf
cmp
mov
aam
out
or
stos
addr16
cmp
inc
adc
push
int3
movsb
in
int3
sub
out
sbb
mov
inc
imull
dec
xor
ja
mov
xor
push
filds
clc
and
aaa
inc
sub
ljmp
ret
push
cmc
xor
cmp
pop
xchg
cwtl
mov
test
daa
call
dec
or
adc
cmc
fnstcw
subl
jae
mov
and
test
inc
in
push
pop
xchg
xor
xlat
int
cwtl
xor
loop
sarl
movsb
ljmp
clc
add
xor
fnstcw
aad
xchg
daa
inc
push
loop
xor
scas
jno
lds
jb
enter
jle
movsb
push
xchg
sbb
in
sbb
push
ret
addr16
cmp
adc
or
cwtl
out
lret
lods
mov
hlt
aad
pop
js
xchg
mov
add
repnz
clc
lock
jnp
ljmp
push
pop
cmp
out
in
sub
push
lahf
insl
out
test
xor
jl
sub
or
cmpsb
inc
je
js
push
fcom
mov
sub
test
outsb
cs
dec
push
adc
jmp
in
ja
ftst
cmp
or
jo
mov
jnp
xor
dec
adc
and
mov
sbb
xchg
sub
lds
or
out
fwait
and
adc
sub
cmp
xchg
mov
jns
aas
cmp
xlat
mov
cs
decl
in
stos
pop
push
push
addr16
cmp
mov
mov
add
sarl
cmp
stos
xor
sbb
repz
add
test
loope
popl
adc
ret
mov
cmp
lods
es
test
jmp
or
mov
add
xor
ret
ljmp
mov
cmpsl
shrb
mov
and
or
pop
adc
dec
fdivrs
adc
hlt
lock
setg
or
xor
pop
push
test
cmpsb
mull
movl
mov
mov
iret
pop
arpl
cmp
push
xor
mov
mov
aad
jecxz
scas
cmp
icebp
add
dec
les
fldcw
mov
lahf
mov
pop
mov
mov
adc
fdivrl
mov
jge
add
xchg
aaa
mov
ss
mov
leave
mov
xchg
add
outsl
mov
mov
sub
stos
pop
sub
out
out
mov
mov
inc
movsb
adc
ret
or
mov
pop
fmull
xchg
test
pop
dec
inc
outsb
jecxz
sub
pop
ja
or
jbe
sahf
mov
mov
mov
mov
mov
dec
add
mov
add
lret
lahf
jbe
cmp
rorl
xchg
and
rorl
enter
adc
jecxz
add
add
ds
sbb
call
cwtl
xchg
iret
dec
inc
cwtl
xor
push
sbbb
mov
fdiv
jb
psubb
push
sbb
jge
lcall
and
fistl
cmp
lahf
ljmp
cmc
nop
inc
jle
xchg
jge
jb
icebp
xorb
xchg
lock
scas
pop
xor
rcrb
add
add
inc
std
and
jle
mov
xchg
pop
sub
mov
lock
ret
les
fstps
int
test
inc
xchg
in
test
fsubr
adc
jne
mov
mov
mulb
pop
repnz
arpl
or
push
stc
mov
sub
pop
repnz
push
xchg
mov
xchg
mov
ret
push
pop
jp
cmp
sbbb
jnp
cmc
out
sbb
or
lds
nop
mov
and
pop
inc
sbb
in
mov
mov
nop
mov
pusha
lcall
shlb
add
stos
dec
rcl
push
xchg
stos
xor
int3
mov
es
sub
into
pop
dec
stc
inc
sbb
sub
xchg
and
shl
cmc
out
out
out
pop
hlt
add
xchg
cmp
add
inc
mov
stos
movsl
sbb
mov
xchg
cmpsl
adc
or
sahf
mov
mov
ja
adc
and
loope
mov
rdmsr
ds
test
pop
pusha
in
jns
cmp
aad
inc
jbe
rolb
insb
iret
stos
jnp
mov
aad
fwait
test
js
mov
fidivl
adc
fstl
xchg
add
jge
cmp
push
mov
xchg
xor
jns
scas
sbb
mov
mov
les
lahf
aad
jg
mov
shrl
mov
loopne
and
cmp
addr16
in
cmp
int
nop
push
jne
pop
inc
dec
xchg
dec
clc
sbb
lods
push
lds
add
fdiv
cwtl
and
aam
scas
adc
mov
lods
dec
mov
mov
sbb
adc
cmp
aaa
ds
add
sahf
in
jb
test
inc
data16
ja
fbld
dec
sbb
vpor
mov
xchg
and
pop
sbb
xor
sarb
cmp
mov
icebp
mov
cmp
mov
divb
mov
scas
mov
bound
int
jne
in
imul
mov
adc
insl
cmp
xor
sbb
jno
sub
repz
jns
push
roll
mov
mov
push
int
outsb
jmp
pop
push
and
ss
inc
mov
pop
add
ret
sti
sub
mov
stc
mov
ja
xrelease
insb
pop
push
sbb
dec
test
movsl
mov
adc
mov
inc
lahf
pop
outsb
cmp
mov
jp
stos
scas
loope
aaa
push
inc
int
roll
sbb
mov
xchg
xorl
sub
insb
insl
outsb
pusha
in
push
xchg
add
pop
sub
in
or
fbstp
das
je
cli
sbb
ja
cld
icebp
je
lods
or
icebp
sub
inc
pusha
jl
mov
or
cmp
sbb
out
scas
push
popf
add
xchg
dec
push
jl
mov
hlt
into
push
nop
or
dec
and
dec
ja
push
and
inc
imul
imul
dec
imul
lret
aaa
xor
mov
and
popl
cmpsb
dec
ficoml
pop
xor
les
clc
mov
jle
cltd
mov
inc
pop
xchg
mov
mov
nop
jnp
ljmp
and
shrb
xchg
shrl
call
js
cmpb
out
and
jno
inc
popf
sti
lcall
scas
dec
ds
repnz
sbb
mov
sbb
xor
movsl
xlat
push
or
shlb
add
xor
or
and
xor
mov
xlat
int
mov
test
pop
shlb
repnz
cs
data16
inc
sub
pop
dec
mov
lock
into
mov
stos
adc
mov
sbb
cmp
jmp
mov
xor
out
mov
imull
in
sti
loope
push
lret
sbb
pop
mov
fildll
mov
or
dec
lds
outsl
movsb
mov
add
and
pop
es
out
in
pop
cmp
adc
int3
fidivrs
ret
xorl
mov
in
in
sbb
int3
push
movsb
ljmp
out
test
cmpsl
fwait
in
jns
mov
popf
or
cltd
and
cld
and
xchg
aam
mov
mov
mov
out
jbe
mov
ss
cmp
mov
fisttpl
mov
pop
and
pop
inc
popf
cmp
out
xchg
push
jecxz
xor
into
ficoml
mov
aas
mov
pop
js
dec
fimuls
push
lcall
mov
xchg
mov
cmpsl
mov
adc
mov
and
pop
xor
mov
and
jl
into
adc
es
or
stos
cmp
out
shll
jge
dec
mov
testl
mov
adc
sub
popf
pop
push
addb
xor
mov
rorl
stos
aam
push
dec
insb
in
sbb
and
xor
daa
repz
arpl
in
imul
cmp
int3
movsb
mov
repz
jae
addr16
imul
lds
movsl
xchg
add
add
rcrb
int
adc
movsl
jno
sbb
or
ja
sbb
incl
xor
and
cs
movsl
mov
xor
cmp
test
lret
iret
pop
push
es
fldenv
jbe
repz
stos
push
xchg
pop
or
rcrl
push
ss
movb
dec
stc
sub
fidivs
bound
inc
pop
test
jb
idivb
jnp
int
mov
jp
pop
cltd
dec
jl
movl
lret
pop
pop
hlt
out
sarb
dec
sbb
mov
push
sub
cmovno
mov
xchg
mov
or
mov
add
stos
mov
daa
and
pop
lods
mov
jge
mov
pop
dec
xlat
cmp
pmuludq
int
ret
ret
rcrb
mov
xchg
clc
pop
xchg
nop
enter
test
test
shlb
xor
iret
std
std
out
cwtl
jbe,pn
fs
loopne
mov
push
bound
mov
scas
mov
iret
ret
inc
sub
mov
jmp
ja
addr16
loop
repz
aas
or
push
cmp
xchg
popa
pop
sahf
lea
std
jne
mov
ret
cmp
pop
sarb
xchg
add
aad
inc
ja
jnp
pop
lock
int3
cmp
dec
hlt
faddp
push
in
dec
xor
dec
inc
mov
lods
loope
std
test
and
push
call
push
jl
outsl
add
inc
xchg
addb
mov
cmp
adc
add
pop
dec
popa
add
mov
push
rclb
and
aas
push
sbb
xor
jmp
imulb
subl
out
sbb
lret
out
and
sub
mov
xor
push
fwait
dec
inc
cmpsl
vmovdqa
or
and
xorl
sub
xchg
add
xchg
push
pop
push
movsb
jle,pn
sbb
xchg
sahf
push
repnz
sbb
xchg
int3
push
mov
enter
xlat
in
mov
cmp
dec
out
vmwrite
add
push
scas
sbb
mov
cmp
loop
or
jnp
js
dec
cmp
push
push
movsl
inc
lahf
xchg
mov
inc
dec
es
and
push
fdivp
and
repnz
out
mov
push
xchg
cmp
clc
movsb
dec
and
test
mov
push
outsb
cmp
and
lods
into
imul
int3
xchg
add
mov
aad
sbb
pop
xor
xor
test
mov
jns
jno
mov
pop
or
jae
ds
shlb
hlt
out
mov
loopne
rorl
rorb
enter
fidivrl
mov
lea
xchg
cmpsl
mov
sahf
mov
xchg
pop
mov
andb
ljmp
dec
jmp
pushf
cmp
xor
cltd
mov
push
mov
jp
xchg
mov
sub
out
std
out
push
sub
shl
testl
mov
jle
nop
cmp
rolb
inc
push
enter
test
into
add
les
push
nop
jbe
jno
movsl
into
les
mov
js
shr
mov
jp
xchg
push
lods
sbbl
adc
dec
repnz
mov
mov
sub
mov
ljmp
cld
int
xchg
into
jg
jbe
lods
pop
in
or
cwtl
out
ja
decl
lock
sarl
das
mov
mov
iret
mov
mov
outsb
xlat
ficoms
xchg
stos
pop
lret
fcoms
push
in
les
clc
mov
inc
cld
jp
jp
xor
push
lret
lock
sahf
mov
fsubrs
popf
and
or
ja
add
in
fcmovnbe
sub
loope
leave
imul
xchg
gs
js
aad
aaa
test
outsl
sub
fildl
cs
pop
int3
movsl
xchg
ljmp
xor
das
jne
mov
inc
inc
adcb
sarb
or
test
movsl
xchg
mov
subl
sti
and
fdivrs
push
pusha
sub
push
mov
stc
add
and
mov
aad
mov
test
lods
loopne
mov
xchg
inc
pop
popf
test
pop
lret
mov
xchg
mov
xor
aas
jecxz
cmp
or
ret
in
add
and
shll
mov
mov
pop
pop
sub
mov
mov
inc
fcomi
pop
and
add
stos
jne
mov
movsl
adcl
add
clc
xchg
test
mov
push
shrl
push
jne
mov
sub
mov
and
notl
fstpl
mov
push
fs
mov
mov
and
pop
ljmp
pop
and
scas
hlt
inc
pop
inc
jge
push
out
pop
xor
mov
not
cmc
pop
pop
je
or
xlat
add
pop
add
out
ja
arpl
mov
dec
fwait
jb
or
pusha
lock
int3
dec
ficompl
sbb
iret
movsl
ret
in
cld
sub
ret
ds
mov
jae
or
shlb
fbld
aad
adc
cld
mov
xor
jge
stos
stos
push
es
sub
out
xchg
push
and
test
arpl
mov
xchg
mov
ret
sbb
jae
inc
adc
add
jl
cld
out
mov
jmp
movsb
subb
neg
xor
enter
test
jge
push
cltd
rcl
add
in
rorb
nop
push
inc
cmc
add
movsl
mov
jmp
mov
addr16
ja
movsl
lock
in
ficoms
mov
in
mov
inc
adc
aas
xchg
pop
ss
iret
hlt
or
aad
sub
sub
or
lahf
sbb
into
mov
inc
pop
les
dec
mov
sbb
mov
pop
sbb
xor
cmp
shll
cmc
adc
std
mov
xchg
mov
add
fstps
xchg
or
mov
mov
sbb
inc
dec
popf
or
adc
pop
add
je
repnz
fisttps
test
lods
sti
fistpll
push
push
test
push
repz
std
std
jge
add
lock
xchg
cltd
push
push
cmp
lret
push
jno
mov
mov
jl
xor
ja
loopew
int
std
cli
xchg
in
insb
pop
add
sarl
fimull
xchg
mov
and
jp
insb
or
in
jmp
and
ret
pop
fnsave
jo
inc
jne
or
xchg
xlat
or
stos
or
sub
inc
jae
adc
adc
out
outsl
xchg
aas
into
loope
push
and
xchg
subl
pop
mov
add
jns
cmpsb
adc
add
xchg
inc
dec
push
pop
test
push
xor
sbbl
push
daa
or
inc
push
pop
jne
jle
mov
hlt
sub
lea
pop
add
fisubl
add
aam
pop
dec
adc
dec
sbb
push
scas
xchg
insb
cmp
push
loop
stos
shrl
push
xchg
xlat
cmp
pop
cli
xchg
test
test
jno
cli
push
sahf
mov
mov
loopne
cmp
lret
fidivrl
pop
pop
jbe
mov
fdivl
rorb
mov
mov
testl
dec
popf
xchg
cld
xor
xchg
test
cmp
aas
push
aam
inc
pop
push
cld
arpl
xchg
scas
ds
insb
shll
sub
fnsave
adc
mov
mov
fidivrs
les
xchg
mov
add
sbb
fldcw
mov
adc
shll
cs
out
in
sbb
dec
loope
shlb
and
xchg
adc
repz
test
roll
add
xor
xchg
adc
mov
icebp
push
popa
cwtl
push
mov
pop
data16
fadds
int3
stc
mov
fbstp
call
fs
hlt
andb
inc
lfs
ret
push
movsl
pop
ljmp
sbbl
xchg
imul
mov
sub
sbb
and
xor
inc
sub
stos
mov
jp
sbb
icebp
sbb
mov
daa
pop
mov
jae
out
repz
sub
ret
pop
sbb
mov
aad
aas
adc
xchg
popf
sub
call
push
icebp
cmp
or
xchg
inc
fstps
jne
and
jbe
stc
sub
ret
xchg
in
mov
loop
inc
inc
cmp
icebp
sbb
popl
dec
or
mov
mov
les
sarb
xchg
aad
jge
arpl
shrb
daa
divb
push
pusha
into
ss
cld
addl
test
push
insl
mov
adc
scas
cs
jae
push
loope
clc
cld
movsb
je
dec
or
sbb
push
sub
call
fdiv
sbb
inc
sbb
jmp
dec
je
aaa
jo
andl
sbb
scas
inc
ret
adc
pusha
lods
leave
add
inc
into
stc
int
pop
incl
jae
out
insb
push
jg
or
fistl
imul
cld
add
add
sbb
sbb
jl
nop
call
push
xchg
add
repnz
pop
ret
lret
mov
xchg
cld
popa
mov
lock
repnz
das
fistpl
in
or
mov
or
imul
out
cmc
in
icebp
test
das
mov
pop
rcll
jbe
mov
jmp
dec
orb
dec
paddd
jecxz
push
cmp
sbb
adc
pusha
es
out
pop
add
jbe
xchg
stc
jl
jns
out
xchg
xor
adc
out
jle
xchg
and
cltd
scas
loop
inc
push
out
into
std
sub
sub
cmc
pop
xor
add
bound
jb
aad
pop
pop
fildll
cmp
sbb
and
js
inc
gs
add
in
icebp
pop
mov
add
fs
jne
sahf
outsb
lea
jecxz
jl
out
mov
push
ljmp
xor
cs
test
jno
adc
sub
sub
push
jmp
decl
test
out
mov
shll
add
mov
stos
mov
jl
jns
dec
mov
cmp
mov
pushf
mov
jmp
push
idiv
ljmp
inc
cli
or
icebp
push
mov
sbb
inc
mov
jae
scas
jg
fwait
jbe
inc
in
add
inc
xchg
dec
dec
sti
xchg
lds
lret
je
xchg
jne
bound
pop
dec
mov
mov
fldenv
std
mov
xlat
mov
aas
nop
mov
ret
inc
das
lret
mov
mov
jg
dec
jo
leave
jl
xor
and
push
mov
xlat
mov
sahf
push
dec
into
aad
lea
jae
and
out
inc
xchg
popa
lods
xlat
jno
push
pop
ret
and
inc
leave
mov
aaa
cmp
jo
mov
loope
or
mov
inc
mov
xchg
enter
ja
adc
lods
lret
xor
jecxz
jle
pop
sub
add
arpl
jge
sub
js
es
and
xchg
push
cs
lcall
nop
jnp
xor
sbb
cmpsl
test
cmp
add
pop
faddp
push
adc
mov
lret
fisttpl
jl
and
in
nop
notb
insl
mov
push
mov
negl
xor
mov
repz
sarb
insl
int
xchg
jge
icebp
outsl
stc
addr16
dec
out
lds
js
ja
mov
nop
imul
mov
or
loope
mov
fistl
xchg
test
push
sbb
jo
in
mov
mov
mov
dec
fwait
dec
loope
jmp
sti
mov
repnz
lods
dec
lods
xchg
aaa
inc
mov
mov
in
mov
xchg
cmpsl
fisttps
shlb
clc
std
mov
jbe
fisttps
or
xor
jg
xor
xchg
inc
dec
lods
repz
loop
fcoml
adc
pop
jns
dec
push
sarb
arpl
outsb
jo
out
cli
scas
sub
andl
lret
ljmp
ret
in
sub
movsb
in
push
rorl
ja
imul
or
pusha
mov
imul
fs
mov
xchg
inc
dec
mov
jl
stos
int3
jmp
cld
outsb
ficoms
movsb
sti
aam
mov
ss
leave
cwtl
dec
and
jne
movsl
push
in
jnp
aas
out
out
push
add
mov
sub
ficoml
arpl
dec
xchg
and
out
and
push
negl
mov
cld
dec
push
addr16
sbb
cmp
stos
or
and
clc
pop
add
cmc
xor
rorl
pop
popl
aam
add
lock
cmp
mov
rcl
dec
mov
das
pop
pop
dec
pop
out
loop
jl
mov
icebp
cmp
das
stos
fwait
adc
push
xor
inc
xor
into
in
mov
icebp
mov
lea
mov
push
jl
and
mov
push
jnp
fwait
xor
loop
jge
push
mov
mov
inc
fcmovbe
dec
mov
push
pusha
push
inc
ljmp
shlb
xchg
sarb
jne
jb
cmpsl
mov
jbe
mov
jbe
hlt
push
pusha
xchg
gs
inc
push
xchg
adc
dec
mov
int3
jge
or
dec
mov
cmp
clc
test
das
jns
dec
dec
xchg
add
pop
sbb
jns
or
xchg
into
pop
pop
fwait
out
aam
std
repz
xchg
and
insb
sahf
mov
sbb
lret
adc
imulb
cli
repz
inc
lcall
clc
andl
test
aad
xorb
mov
das
push
ja
pop
leave
jo
popa
cmp
adc
xorb
loop
mov
std
inc
jg
out
xchg
ja
mov
cmpsb
or
adc
or
aam
jae
sti
inc
out
and
out
ret
pop
test
xor
xchg
or
mov
jnp
shrb
in
lahf
pop
insl
sub
inc
loopne
push
divl
hlt
xchg
mov
test
fistpll
aam
test
push
xchg
cmp
bound
rol
jecxz
add
adc
ret
dec
clc
aaa
insl
sti
mov
dec
stos
push
jnp
addl
sub
push
dec
in
ret
lahf
scas
stos
and
pop
xchg
shlb
testb
add
cmpl
ds
add
fdivp
and
and
mov
js
arpl
subl
ljmp
dec
out
rep
test
cli
inc
jne
or
icebp
mov
xor
movsl
push
std
dec
stos
adc
mov
sbbl
fisttpl
call
movsb
inc
in
dec
stos
enter
sub
lea
jno
add
xor
sbb
outsl
jae
lahf
mov
mov
push
add
loope
xor
xorl
data16
sbb
push
out
mov
jno
xchg
imul
daa
ja
push
mov
repz
adc
and
mov
fistl
hlt
sbb
mov
call
cmc
inc
sub
imul
imul
sbb
jp
daa
adc
cwtl
inc
cmp
insl
push
xchg
enter
loope
push
jmp
dec
imul
push
mov
sub
lds
int3
cmp
fistpl
mov
and
mov
rorl
mov
repnz
ja
sub
rclb
xchg
push
sbb
mov
push
xor
jl
cmp
insl
add
mov
leave
cs
pop
imul
cli
adc
jnp
iret
inc
dec
ret
jne
pushf
jle
sbb
jecxz
xchg
data16
push
mov
leave
andb
mulps
xor
scas
jl
pop
mov
sbb
fmulp
jmp
cwtl
push
shll
push
push
je
call
mov
call
mov
ds
and
cmp
rclb
insl
cmp
sbb
cmp
jl
lret
lods
stos
sti
jne
adc
push
fsubs
les
fucomp
or
push
aad
repz
fstl
mov
pop
push
pop
negb
xchg
adc
push
fidivrs
sub
popa
mov
inc
cmpsb
push
popa
xchg
ss
int3
lahf
or
jb
aaa
push
ja
mov
sbb
xor
cmp
repnz
lahf
daa
popa
sub
mov
test
pusha
pop
push
jne
icebp
scas
cs
add
or
ud1
lods
mov
test
fwait
mov
cs
fwait
test
inc
mov
arpl
daa
sub
pop
sbb
fwait
mov
testb
int3
xchg
rcrl
push
inc
cltd
out
xor
movsb
xor
sar
ss
in
das
adc
adc
cmc
int3
push
jmp
ret
jne
pop
fsubr
aaa
bound
pop
sub
cltd
push
cwtl
lcall
test
and
dec
adc
lcall
sbb
jge
adc
jg
mov
test
repnz
sub
andb
or
je
or
mov
sbb
sarl
inc
push
loope
in
scas
in
lcall
xchg
sub
outsb
ret
movsb
adc
jmp
sub
sbb
sbb
xchg
lahf
nop
les
cmp
aam
int
push
pop
mov
jae
jmp
mov
dec
push
push
scas
mov
movsl
mov
adc
inc
xorb
cmp
imul
pop
mov
mov
rcll
mov
cmc
push
stos
in
shlb
sub
ljmp
insl
sbb
lahf
xchg
push
mov
stos
add
sarb
insl
xchg
add
scas
add
adc
mov
insl
or
outsl
ljmp
cmpsb
lahf
imul
xor
nop
sub
mov
aad
inc
inc
imul
push
dec
test
inc
aad
repz
jmpw
sahf
jp
sub
adc
mov
test
pop
jnp
popa
ret
into
aas
icebp
into
repz
dec
dec
stc
mov
inc
std
and
and
mov
jno
xor
or
mov
cmpsb
or
lret
stc
sahf
mov
movsb
leave
lcall
icebp
push
or
shlb
jg
or
jge
xchg
rcr
mov
cmpsb
in
out
jbe
sbb
mov
outsl
push
mov
sbb
cmp
leave
enter
mov
dec
std
push
adc
lods
cmp
sahf
push
mov
xor
sub
and
shl
pushf
push
pop
or
addl
ds
mov
ljmp
xor
push
mov
cmpsl
fisubs
push
popa
dec
rclb
mov
icebp
mov
je
cs
pop
rcr
adcb
cld
inc
adc
adc
shrb
sub
rcll
mov
sub
or
les
aas
push
notb
subb
sbb
or
fiadds
push
inc
gs
mov
bound
adc
push
aam
bound
in
std
arpl
ficoml
push
dec
cwtl
pop
decl
xchg
pop
xor
enter
sti
in
les
lahf
pop
add
repnz
in
add
and
imul
out
fwait
mov
outsb
jnp
sbb
pop
jp
pushf
or
xchg
cli
nop
adc
repz
dec
jb
jbe
fidivrl
pop
aas
or
inc
das
xor
push
enter
fsubp
lods
or
add
push
fsubrs
shll
mov
testb
shlb
mov
subb
addb
sahf
iret
jno
shll
add
inc
mov
dec
aam
push
push
clc
cld
sbb
loop
jno
incl
jne
out
mov
sbb
outsl
out
andl
lods
sub
adc
xchg
xchg
dec
cli
push
push
enter
fildll
cld
push
loop
cmp
or
sbb
out
outsb
sahf
das
mov
mov
in
out
loopne
lret
xlat
cltd
cmp
dec
or
sub
stos
or
push
sub
nopl
pop
mov
iret
negl
loope
ds
repz
rorl
fs
les
loope
mov
push
cltd
es
movsl
or
xchg
or
int
cmp
pop
dec
test
stc
sbb
inc
sar
xor
mov
mov
cmc
lods
push
jl
insl
pop
lods
adc
xor
fildll
mov
push
repz
mov
mov
roll
test
fld
and
shlb
adc
cmp
int3
jno
dec
cmpl
insb
pop
out
pop
push
or
pusha
xchg
divl
jno
xchg
xlat
pcmpeqw
in
xchg
xchg
dec
loope
push
pushf
push
je
pop
sbb
mov
es
inc
cmpsb
sub
jl
sbb
pop
sbb
into
and
jno
jg
dec
sbb
sub
mov
push
mov
sub
das
cmp
lahf
je
pop
push
push
cmp
sub
and
dec
int
mov
ss
ss
fwait
xchg
sbb
dec
mov
out
cmp
jne
mov
adc
repnz
stc
xchg
lods
mov
jecxz
dec
sub
imul
dec
xor
repnz
jo
xchg
and
test
enter
and
or
pop
mov
mov
mov
xchg
pop
rolb
xchg
push
push
push
mov
xchg
loop
es
xor
mov
fdivrs
jecxz
repz
push
adc
mov
std
cmp
xor
and
mov
sbb
js
insl
or
insb
cmp
sub
or
push
mov
std
inc
out
push
mov
stos
mov
mov
daa
cli
mov
lds
sub
pop
jecxz
mov
clc
push
fldl
mov
push
inc
int3
das
xor
mov
sbb
lret
adc
mov
or
ret
cltd
cmp
push
stc
push
dec
mov
pop
mov
push
cmpsl
xor
es
mov
push
bound
xor
iret
pop
in
pop
in
mov
sbb
and
xor
xchg
ds
lcall
push
dec
iret
mov
mov
mov
pop
pop
mov
cld
andl
stc
lods
or
pop
dec
adc
orb
adc
icebp
inc
xor
xchg
xchg
xchg
je
hlt
mov
in
push
pop
or
aam
testb
out
dec
mov
lret
or
fldt
orl
lss
add
or
xor
daa
int
adc
ja
test
mov
jo
shlb
jnp
js
xor
lahf
cmp
test
icebp
push
in
into
sbb
rcrb
inc
sbb
lods
sub
and
sub
xchg
fwait
add
addb
cli
pop
jbe
arpl
cmpsl
dec
loopne
sti
jnp
xor
iret
idivb
mov
pop
into
mov
out
int
popf
pop
ljmp
out
mov
jo
subl
outsb
imul
call
or
stos
les
mov
and
mov
in
jp
enter
iret
jmp
cmp
cltd
mov
or
pop
popf
push
jge
ret
int
pop
into
in
leave
lret
lcall
ja
jge
fidivl
sub
fiadds
outsb
jmp
cli
cmp
xor
pop
xor
or
mov
movsb
les
jmp
xchg
add
hlt
frstpm(287
in
movsb
or
mov
sub
inc
push
gs
and
in
push
jl
lock
fstpt
inc
inc
inc
cmp
je
and
ret
inc
pushf
mov
ret
add
cmp
loop
iret
or
pop
mov
outsb
fs
neg
xchg
test
cmp
push
mov
mov
out
jl
fwait
shrl
sub
jg
fldenv
jnp
aad
pop
sbb
and
mov
mov
adc
adc
sarl
mov
push
popf
data16
stos
jle
fcom
aam
xchg
test
mov
jnp
out
lahf
xchg
adc
inc
inc
sbb
mov
mov
sub
pop
ds
mov
lar
pop
inc
insl
xor
outsb
jmp
mov
mov
ss
aam
jecxz
clc
jo
cmp
std
add
sbb
cmpsb
add
mov
ds
mov
aad
push
nop
mov
std
xor
adc
mov
or
adc
mov
dec
addr16
out
xlat
ss
movsb
std
in
scas
stos
andb
inc
mov
sbb
out
lret
push
loope
testl
outsl
mov
stc
xchg
lcall
insl
mov
mov
add
jle
jg
insl
mov
stos
mov
sahf
dec
xor
lds
jg
hlt
lock
dec
mov
jg
inc
fildl
cwtl
mov
and
inc
out
arpl
inc
mov
popf
inc
dec
and
test
jno
shrb
push
xchg
jbe
add
push
adc
stc
data16
testb
jge
dec
sbbb
loopne
mov
push
into
loope
and
mov
jb
je
adc
push
or
outsl
xchg
lock
lock
jle
ud1
imulb
jle
inc
rcll
movsl
pop
cmp
lods
adc
pop
addl
cmc
xchg
jno
int
cld
add
lcall
inc
mov
testb
into
pop
pop
aaa
cltd
cwtl
adc
xor
mov
pop
add
sbb
inc
mov
sbb
out
aas
sti
leave
dec
and
sbbb
shll
pop
inc
and
dec
and
mov
add
popf
dec
daa
cld
pushf
test
xchg
mov
cmp
lds
sbbb
sub
adc
inc
fstl
icebp
in
data16
test
xchg
push
fwait
mov
xchg
dec
mov
cs
mov
in
jbe
fisubrl
aad
cmp
dec
mov
in
sub
ja
fnstcw
mov
xchg
pop
ror
fsts
rolb
mov
scas
push
adc
push
push
ret
or
xor
or
std
les
sbb
int
shl
mov
mov
lcall
movsb
faddl
pop
loop
inc
addr16
push
mov
rcl
adc
mov
inc
sti
sbb
mov
jl
xor
cmp
ljmp
mov
jo
jle
pop
rcr
sub
rorb
ficompl
loope
jnp
mov
out
add
dec
ljmp
outsb
xchg
cmp
cmp
into
aaa
mov
jns
es
xor
loop
push
pop
push
mov
rclb
and
fsubr
pop
dec
fnstcw
sub
xlat
xlat
dec
movsb
cmp
cmp
cli
xor
loope
mov
dec
push
fsubr
fs
int
inc
stc
mov
xor
adc
pop
push
pop
and
and
arpl
shlb
nop
add
jmp
fcoml
mov
mov
scas
cmp
bound
push
movsl
mov
pushl
xor
mov
ss
xchg
ret
xchg
sbb
les
dec
outsl
loop
sbb
out
xchg
orl
or
jb
sarb
sub
xchg
add
add
inc
mov
lret
push
jb
incl
mov
jp
inc
scas
lret
sub
scas
out
test
clc
xchg
add
jmp
pop
sahf
lahf
shlb
mov
ds
xchg
ffreep
fcompl
sbb
cltd
mov
insb
iret
les
push
xchg
ljmp
aad
addr16
aam
je
dec
xchg
push
xchg
popa
or
rorb
push
sarl
psubb
cltd
stos
xchg
sub
ljmp
sahf
adc
ficompl
test
clc
andl
test
int
mov
jo
hlt
or
push
push
insb
clc
js
pop
push
out
push
dec
lret
mov
es
adc
jp
pop
js
ljmp
inc
int
es
lea
sbb
fsubl
ret
cld
pop
lret
and
xor
jge
fcoml
cmpsb
test
sbb
test
int3
leave
popf
data16
xorl
fcomp
dec
mov
daa
dec
sub
push
fidivrs
insb
fadd
mov
adc
pop
or
mov
jnp
rcrl
mov
addr16
xor
outsb
enter
int
push
cmp
lods
imul
cmp
mov
xchg
pop
mov
dec
cmp
add
jecxz
push
and
xchg
mov
push
sub
or
pop
mov
scas
pop
ror
mov
xor
mov
and
sub
ljmp
popa
pusha
xor
lock
incl
push
or
aam
mov
lret
jl
stc
adc
push
sarb
insb
ret
imul
arpl
cmp
push
adc
push
jae
imul
es
adc
fstpl
mov
dec
setbe
aaa
aaa
js
mov
mov
inc
addl
aad
cmpb
push
sub
les
cmp
and
les
mov
lock
cmpsl
and
xchg
jns
clc
repnz
das
lods
jecxz
pushf
and
mov
stos
sbb
sbb
orb
cwtl
ffreep
pop
ret
leave
or
pop
pop
xchg
or
adc
jnp
sahf
mov
pop
call
pop
lahf
lds
hlt
les
test
rorl
sub
sub
adc
outsb
inc
test
arpl
xchg
sub
das
icebp
mov
mov
dec
sub
cmpl
aaa
sub
pop
hlt
arpl
xchg
shlb
or
into
xchg
lods
lods
xchg
push
push
cwtl
jecxz
pop
hlt
pop
cs
inc
testb
ret
cmp
sub
jo
mov
and
lods
jne
cmp
mov
lahf
push
sbb
ss
lock
pop
test
fstps
int3
shll
or
jmp
jle
out
lahf
push
loopne
lret
pop
mov
sbb
dec
movsb
test
js
dec
push
fs
loopne
outsb
add
jecxz
jge
jae
cmp
cld
jp
sahf
lods
mov
dec
xlat
cmc
stos
dec
ret
dec
jne
mov
inc
mov
leave
pop
fisubl
push
cmpsb
or
lret
out
sub
sub
movsb
fdivrl
or
pop
fnsave
sbb
xor
inc
mov
nop
push
sarb
shlb
stc
inc
or
adc
xchg
mov
shlb
test
sbb
xchg
cli
test
push
test
pushf
sahf
jb
test
inc
sub
mov
push
aad
out
xorb
cmp
adc
pop
pop
adc
mov
xchg
mov
cmp
xor
out
adc
adc
adcb
outsl
enter
movsb
mov
xchg
stos
popa
nop
movsb
jl
xor
pop
push
insb
rcrl
movl
xchg
sbb
fmuls
dec
or
jns
jns
pop
or
fnstenv
sub
repz
fcomps
gs
in
cmpsb
inc
sbb
sub
fmull
into
adc
es
outsb
xor
in
xchg
aad
push
pop
popf
rolb
mov
jge
rcrl
pop
push
add
push
lahf
fnstsw
add
xchg
mov
insb
mov
mov
sbb
jo
stos
xor
cmp
insl
cs
sub
repnz
mov
xchg
sarl
cs
imul
nop
test
or
xchg
jae
lock
mov
jo
adc
std
rcrb
mov
loop
call
fimuls
cmp
mov
das
pop
imul
pop
dec
rcll
jbe
inc
cmpsb
adc
mov
xor
adc
xor
jge
and
push
daa
adc
enter
sub
out
fwait
mov
xorl
xlat
ja
pop
shlb
add
cmp
ja
push
test
push
aas
lock
pop
jns
mov
and
pop
adc
pop
xchg
ds
loopne
int3
ljmp
and
popf
js
adc
jne
in
mov
bnd
dec
adc
inc
mov
ljmp
dec
pop
in
push
pop
dec
shrl
outsb
popf
pop
enter
pop
inc
loope
test
out
mov
imul
popa
jae
mov
testl
popf
cs
mov
fildl
jo
or
pop
aad
adc
imul
or
cmp
mov
fisttps
pop
incl
or
int
mov
xorl
push
mov
push
out
inc
sub
jb
iret
mov
pusha
xchg
push
add
xchg
hlt
push
in
adc
popf
dec
hlt
mov
ja
sbb
leave
push
clc
mov
loopne
cmpsb
rcrb
push
mov
ret
gs
push
jnp
inc
cmc
mov
and
jbe
mov
push
push
adc
insl
fisttpll
lods
add
add
or
sbb
pushf
mov
jle
cmpsb
cwtl
aas
mov
dec
idivb
push
adc
lock
cltd
das
jmp
inc
xorl
jmp
or
das
test
mov
pop
je
clc
xchg
jnp
pop
test
jp
lahf
stc
out
inc
sbb
cmp
jno
rorl
aas
addb
sub
sbb
mov
repnz
das
insl
mov
out
mov
rcrl
pop
ret
and
mov
divb
aad
repz
dec
in
test
out
lahf
mov
jge
push
inc
pop
xor
into
sub
ja
sbb
mov
pusha
xchg
inc
and
cmc
and
pop
popf
lods
xor
push
jmp
xchg
in
adc
or
xor
mov
mov
sbb
movsl
pop
cmp
movsb
push
lahf
xlat
lret
xchg
mov
sti
mov
in
shr
lds
fistps
int
seto
push
out
das
std
pop
dec
scas
dec
scas
arpl
in
jg
lahf
mov
int3
xor
int3
cmpsb
xchg
adc
pusha
aad
jne
pop
loop
lods
stos
dec
pushf
mov
andb
cmp
mov
inc
sub
insl
icebp
xchg
dec
mov
xchg
gs
rol
mov
into
cmp
add
ret
iret
cli
insb
mov
push
adc
pusha
test
cmp
push
and
cmp
movsb
mov
and
lahf
daa
push
jg
ss
pop
cmp
mov
and
out
xchg
sub
xor
cwtl
fwait
or
cmpsl
shrl
imul
xchg
sbb
mov
push
mov
jp
aas
pop
and
cltd
fiaddl
pop
scas
in
sbb
ja
jns
cmp
ljmp
arpl
xchg
fiaddl
hlt
push
cmp
sbb
or
pop
arpl
xor
ja
std
stos
shr
popa
std
bsr
lret
loop
imull
cmc
sarb
pop
aaa
inc
mov
dec
cmp
popa
add
cmp
xchg
xor
pusha
jns
jb
push
rorl
xor
mov
sub
jae
xlat
es
mov
jns
or
mov
mov
jp
test
ret
mov
clc
pop
dec
das
mov
dec
or
push
sbb
popa
cmc
lds
adc
jne
stos
adc
sub
mov
lods
inc
stos
jne
pop
lret
test
dec
mov
cld
ja
xchg
mov
mov
mov
call
jmp
inc
mov
int
inc
lret
testb
hlt
movsl
out
sbb
mov
mov
imul
jns
call
pop
xchg
sbb
mov
aas
in
jg
mov
stc
jg
pop
daa
inc
cmpsl
dec
push
adc
movsb
and
jae
push
sbb
mov
dec
cmp
lahf
xor
push
jp
adc
gs
ljmp
sbb
retw
lea
add
mov
cltd
std
push
imul
sbbb
lock
loop
inc
mov
xor
test
ja
cmc
test
xchg
mov
arpl
js
mov
mov
arpl
bound
xchg
xor
and
pop
pop
nop
bound
outsb
sbb
ja
mov
lret
gs
sub
dec
sbb
xchg
mov
mov
and
jg
imul
lea
arpl
jl
popa
lds
in
adc
aaa
xchg
dec
in
jge
jle
punpcklbw
popf
stos
lock
mov
daa
pop
sub
test
pop
jmp
mov
stos
cltd
xor
imul
jns
and
push
add
xor
scas
or
mov
and
bound
nop
push
fstpl
testl
push
push
lods
fldcw
stc
fnsave
scas
xor
fcoml
and
mov
inc
mov
or
cmpsl
mov
cs
mov
pushf
fcompl
push
popa
cmpsb
imul
mov
sbb
sbb
cmp
lods
mov
fcom
fstl
and
jno
cmpsl
popf
xchg
add
test
lret
int3
cmc
sub
mov
lahf
js
popf
pop
and
call
mov
das
nop
jle
int3
js
mov
push
call
xchg
adc
xlat
push
pop
xchg
pop
mov
jae
push
dec
adc
aad
outsb
inc
popl
inc
lds
jns
xor
sub
dec
int
adc
fwait
addl
adc
cmp
mov
adc
mov
fsts
ret
jp
dec
xchg
orb
or
insb
pop
xchg
div
not
cmp
enter
lea
ss
xchg
ret
mov
loop
lods
cwtl
mov
sbb
dec
inc
adc
out
lods
pop
sar
movl
cs
jb
cmpsl
push
push
ficomps
out
inc
push
adc
or
mov
sbb
scas
fstl
dec
xor
pushf
cld
sbbb
jmp
rorl
inc
int3
mov
inc
jg
fildll
std
pop
add
mov
daa
dec
aas
in
jns
pop
cmp
lds
add
adc
cs
jnp
outsb
scas
cmp
dec
test
jp
jmp
jnp
pop
lods
jge
adc
jae
adc
xchg
mov
leave
pop
or
enter
and
add
jmp
jg
je
ficoms
sbb
xchg
xchg
loop
ss
mov
pop
movsl
push
pop
jle
inc
jb
in
sar
out
mov
gs
loope
stos
rcrb
adc
rorb
stos
ljmp
push
adc
cmp
into
sarb
dec
mov
and
and
scas
push
fidivrl
mov
sbb
dec
adc
comiss
ror
cmp
pop
clc
ljmp
lock
std
push
push
push
mov
xor
sub
lret
out
lret
jne
lock
pop
or
cmp
hlt
clc
fidivrl
hlt
add
rol
test
int
movl
cmpb
lea
in
divb
cmp
test
jne
sbb
arpl
cmpsb
addr16
lods
fcom
movsl
das
inc
lds
sbb
repnz
xor
jle
rorl
xchg
addl
lret
mov
orb
stc
xor
stos
scas
push
inc
inc
imul
lea
cmc
cs
pop
and
adc
push
xor
pop
xor
jbe
stos
xor
out
cmp
cmp
mov
movsb
out
test
movsb
xchg
bound
add
js
jne
jecxz
push
imul
push
push
clc
sahf
into
in
dec
fcmovnu
add
jo
insb
push
lea
aaa
out
or
sub
cmp
inc
orl
leave
dec
jmp
sti
push
pop
dec
aas
test
inc
cltd
int
orb
je
imul
cld
jne
pushf
sub
imul
push
xor
out
in
xchg
fwait
cmp
mov
call
pop
or
add
fs
dec
pop
pop
test
fcomi
clc
addb
pop
cli
imul
mov
sub
cmp
enter
or
cmp
cltd
fsub
ds
fisubrl
clc
scas
stos
rcrb
stos
add
mov
push
aad
or
adc
leave
std
lds
jns
mov
mov
sbbl
into
sbb
fwait
mov
mov
bound
scas
hlt
lea
enter
pop
xchg
xchg
mov
jmp
notb
pop
sub
xchg
ja
jmp
test
in
push
mov
fnstsw
test
mov
pop
das
push
cmc
mov
outsb
es
rorb
mov
add
pop
in
das
add
or
repz
fistpl
pop
inc
leave
pop
das
adc
in
pop
xchg
in
movsl
mov
out
pop
adcl
adcl
mov
adc
rolb
aam
movsb
ljmp
sbb
lahf
cmc
lret
jle
inc
push
and
xchg
cmp
mov
xor
cwtl
mov
mov
lds
or
add
push
mov
push
xchg
push
inc
stc
out
jmp
sbb
push
mov
mov
enter
xchg
push
sbb
and
inc
pop
stos
lret
push
fldl2t
xor
ffree
xor
mov
mov
lahf
pop
mov
or
std
xchg
sti
fnop
imul
xor
cmp
imul
iret
jle
mov
mov
dec
or
inc
pop
adcl
cmpsl
movsl
add
iret
addr16
or
cmp
outsb
jnp
or
loopne
rclb
enter
add
sbb
sub
and
shl
pop
orl
jmp
popa
js
add
bound
test
add
rolb
and
push
inc
repz
inc
or
add
xor
imul
cmc
movsl
jp
lcall
aam
and
in
mov
jl
inc
jmp
test
xorl
test
add
dec
mov
lret
pop
fcompl
int3
shlb
adc
aaa
clc
mov
je
fsubs
inc
shll
sub
sub
mov
mov
mov
sub
and
push
xor
popf
and
fldt
jecxz
ss
or
movsb
lret
notl
sbb
and
stos
sarl
imul
fs
rcrb
rcl
cs
nop
mov
cmc
dec
lods
jp
mov
lret
mov
jp
scas
mov
mov
lods
pop
dec
roll
adc
adc
std
push
mov
cwtl
mov
xchg
cmp
add
lock
adcl
or
add
idivb
xor
inc
cli
sbb
pushf
stc
cmp
cmp
jl
fldt
and
sub
cmpsb
in
cmp
repz
push
test
int3
imul
int3
dec
in
pop
pop
or
xchg
pop
test
lcall
cmp
ja
mov
aas
add
xchg
lds
inc
and
xchg
jle
icebp
dec
xor
hlt
mov
xchg
jo
xor
idivb
add
push
int3
jle
ret
push
sub
xchg
push
fisttpl
mov
pop
inc
repnz
sbb
xchg
sahf
call
gs
in
add
adc
cmp
sub
lret
and
pop
push
test
je
stc
lret
call
cmpsl
cmpsl
out
sbb
outsl
cmp
fwait
inc
xor
pop
shr
and
jne
mov
imul
jp
pop
inc
sbbl
and
xchg
lea
enter
jnp
aad
lcall
leave
arpl
fmull
in
inc
push
mov
roll
nop
pop
sub
and
inc
clc
push
out
or
lret
cs
and
and
orl
pop
xlat
and
fstl
popa
dec
sbb
mov
xor
xchg
cli
jle
mov
test
mov
push
jnp
inc
and
lret
sub
xchg
aad
sbb
jmp
add
lods
adc
iret
fwait
imul
cli
adc
dec
dec
sbb
arpl
sbb
shrb
imul
test
jns
pop
lods
movsl
pop
or
sub
jb
cwtl
jae
shll
inc
add
jge
popa
cmpsb
or
cmp
orb
fwait
outsb
std
jmp
loopne
lcall
and
in
mov
lcall
mov
mov
les
or
into
add
sub
xlat
rolb
dec
orl
orl
push
popf
in
insb
test
sub
jae
or
rolb
clc
popf
test
ret
rcrb
nop
mov
jnp
xor
pop
test
aas
bound
aaa
jns
dec
sbb
test
jg
fcomip
adc
or
scas
lahf
jbe
ret
call
mov
add
xchg
sub
cmp
xor
fs
mov
add
jb
repz
and
out
adc
cmp
repnz
mov
inc
add
cmp
sbb
pusha
add
adc
cmpsb
mov
mov
jbe
lret
push
adc
xchg
xchg
xchg
and
and
and
testl
xor
xlat
cmp
adc
sub
movsl
mov
int3
aas
inc
cmp
mov
add
cmp
pop
xchg
jbe
add
insb
pushf
addr16
in
test
inc
push
leave
inc
jmp
mov
std
fidivl
jb
jge
push
fsubrl
sub
aam
repz
adc
cmp
int
cmp
fs
mov
test
pop
pop
testl
and
xlat
sub
lea
mov
lods
push
fisubrl
sahf
pop
stc
xor
xchg
sub
mov
jle
push
fidivl
cmp
adc
outsl
pop
cmpsl
ljmp
shrl
lds
mov
out
xchg
xchg
bnd
dec
movsl
hlt
addl
xor
add
sbb
push
jl
pop
loop
ret
loop
out
xchg
call
sub
rcl
mov
xor
rcl
call
aaa
sub
xchg
into
push
sti
pushl
ja
adc
aad
aaa
adc
adc
cli
mov
in
imul
push
fidivs
aaa
test
add
fyl2xp1
push
push
pop
fmul
gs
push
mov
lret
popa
sbb
ficompl
fisttpl
lods
jo
or
inc
push
cmp
fstl
mov
call
mov
dec
rorl
add
popa
test
xor
cwtl
or
xor
jl
ret
in
pop
test
cs
adc
add
orl
shl
and
sbb
add
in
pop
add
push
out
out
lret
jg
sub
mov
nop
jae
mov
lea
push
imul
or
movsl
xchg
cmp
test
jmp
or
inc
ret
into
cmp
jno
daa
leave
sbb
repnz
lret
arpl
dec
push
cmp
add
jecxz
adc
fiaddl
fcomps
mov
sub
outsb
hlt
push
loopne
lods
xor
cmpsl
xchg
mov
xor
dec
pop
push
ljmp
push
sub
loop
xchg
push
add
shrb
xchg
add
ret
inc
sbb
mov
jns
int3
jmp
fldenv
pop
jg
xor
add
adc
hlt
leave
pop
sub
pop
icebp
fcmove
add
push
jnp
push
add
mov
stos
adc
ret
js
leave
repnz
popa
or
js
cmp
and
frstor
loope
push
xorb
movsl
mov
mov
xchg
push
xor
cmp
pushf
stc
cld
lock
pop
cwtl
xor
mov
mov
pop
jns
addps
jmp
rclb
cld
gs
rcrb
leave
outsl
jne
mov
jns
or
fsubl
jecxz
mov
cmp
clc
jg
add
push
bound
sbb
inc
stc
into
cmp
in
or
daa
jp
cmc
ror
popf
inc
pop
inc
mov
lds
pop
xchg
out
or
mov
subb
in
mov
or
add
cmpl
xchg
insl
mov
lds
pop
cmp
dec
gs
xor
movsb
lock
loop
rclb
cmpsl
add
testl
sbbl
inc
cltd
arpl
pop
pop
push
jno
mov
hlt
in
push
sub
pop
addb
ja
cmp
dec
loopne
cld
mov
flds
pusha
jbe
sub
test
stos
out
leave
push
mov
out
push
inc
add
repnz
lret
jp
fcmovb
fsubrs
enter
repz
int3
and
aaa
pop
cltd
mov
outsb
xchg
pop
daa
lods
jg
leave
xor
test
mov
mov
mov
adc
sbb
lahf
mov
or
imul
sbb
sub
cmp
add
sbb
movsl
and
sbb
loope
enter
es
jb
arpl
lods
cwtl
jb
xchg
adc
hlt
push
ret
sub
cltd
and
dec
push
xchg
call
xchg
stos
imul
out
mulb
int
jge
pop
int3
xor
jl
pop
mov
or
outsl
xchg
popf
decb
mov
insb
sahf
jmp
cmpsb
adc
ffreep
xlat
mov
lahf
dec
orb
mov
inc
call
in
push
insb
cmp
fisubl
push
repnz
jo
xor
lcall
xchg
cmp
xchg
xchg
lcall
xchg
test
push
popa
adc
enter
or
jg
out
sahf
cli
outsb
imul
inc
lret
inc
or
add
pop
mov
mov
in
jne
mull
in
jb
pop
movsl
inc
imul
test
pop
pop
and
mov
into
clc
in
cmp
sub
and
or
push
jne
inc
jge
mov
or
mov
fcompl
ret
xor
mov
adc
lods
fwait
dec
inc
add
push
mov
out
or
out
and
ja
sub
fnstenv
popa
cmp
mov
rclb
loopne
jg
daa
jecxz
test
gs
push
adc
jecxz
mov
dec
je
sub
sbbl
or
pop
mov
scas
mov
mov
shlb
push
xor
cltd
sbb
inc
ljmp
sbb
adc
xchg
test
dec
pop
cmpsb
out
xchg
mov
nop
ror
pop
outsb
stc
in
xor
cmp
push
inc
test
jnp
stc
mov
xchg
jl
jnp
std
iret
push
sub
or
adc
pop
imul
mov
jo
out
mov
pushf
jcxz
cwtl
sbb
pusha
pop
in
cmp
fwait
push
mov
fs
call
lret
in
jbe
aam
ret
xorb
add
enter
push
mov
inc
xchg
lods
push
mov
lods
and
inc
stc
xchg
pop
xchg
lea
push
test
inc
fsubl
test
imul
pop
or
pop
dec
dec
outsl
or
cmp
adc
in
lods
cmp
std
xlat
mov
push
pusha
stc
imul
les
xor
pushf
pop
leave
lea
addr16
mov
xor
movsb
mov
push
int3
jbe
stos
push
jle
push
mov
xor
insl
mov
adc
lahf
push
jne
sbb
ja
and
loope
xchg
scas
clc
jp
imul
aad
dec
test
mov
test
hlt
clc
add
push
xor
and
jmp
lahf
jo
test
cmp
xor
push
imul
cld
mov
notl
sbb
inc
jl
fs
or
in
dec
js
xchg
dec
push
push
or
pop
sub
jg
insb
shrl
ljmp
and
loopne
rorb
mov
cmp
jle
aad
lret
stos
sub
jnp
popa
jmp
pop
idiv
sbb
push
add
and
or
lds
mov
ja
loope
loop
xchg
mov
cmpl
push
scas
mov
cmp
or
xchg
xchg
dec
cmp
rcll
rolb
cmp
push
xchg
and
pop
pop
pop
mov
lret
adc
imulb
and
cmp
xchg
sti
xchg
fsubr
cs
repz
xor
adc
lcall
adc
scas
roll
and
or
pop
adc
aam
add
in
lods
leave
fldenv
mov
jg
pop
loop
loop
std
or
jge
add
cmpsl
adc
mov
or
imul
cmc
jnp
int3
or
inc
scas
dec
out
add
and
jge
inc
call
xor
jb
xor
mov
enter
sbb
cltd
xchg
xor
push
adcb
loop
in
xor
xchg
adc
add
out
mov
and
mov
jl
inc
mov
orl
js
jmp
mov
in
sahf
js
cmp
dec
cmp
ljmp
dec
adc
add
arpl
dec
inc
xlat
jne
sbb
out
xor
lahf
push
jbe
daa
fcoml
cmpsl
sub
jl
leave
mov
outsl
fiadds
rol
std
in
or
int3
inc
add
fprem1
shrl
out
repnz
sbb
sub
sbb
stc
std
push
add
lock
lret
add
stos
cmc
outsl
xchg
xchg
xchg
pop
mov
orl
fcmovu
cmp
lods
js
cmp
mov
and
fdivs
aaa
mov
or
jno
repnz
cli
xchg
bound
mov
mov
sub
fildll
clc
movsb
movsb
mov
xchg
test
popf
mov
mov
dec
inc
test
jno
in
pushf
push
popf
mov
mov
mov
movsl
xchg
out
push
lods
icebp
daa
pop
sti
mov
inc
sbb
mov
cmp
sarb
jl
xor
jecxz
stos
int
mov
push
aam
inc
xor
mov
and
ret
mov
xchg
inc
aam
mov
pop
ds
and
sahf
imul
pop
adc
jb
pop
and
xchg
pop
push
faddl
cmpsl
inc
fxtract
aam
mov
jns
add
jle
loope
rolb
lahf
sarl
out
jb
movsl
das
repz
inc
ja
xchg
movaps
sub
dec
addr16
movsb
test
hlt
push
mov
leave
test
rolb
xchg
lods
scas
lret
cmp
jo
imul
mov
inc
mov
push
pop
xor
sahf
popf
out
stos
cmp
out
cmp
pop
rclb
push
cs
ret
arpl
sbb
into
stos
mov
jno
mov
fs
testb
cmp
inc
inc
sub
jae
into
sub
mov
xlat
int3
outsb
mov
add
and
inc
imul
movsl
add
inc
jno
pusha
outsb
jl
call
xchg
xchg
inc
cmpsl
xor
xchg
jns
or
pop
push
sahf
and
loope
sahf
mov
xchg
add
sub
rcrb
xor
mov
fsubl
inc
rcrl
cs
into
in
dec
fwait
mov
loopne
stos
jg
fstpt
int3
pop
shll
and
lret
ja
sbb
xchg
bswap
out
popa
or
jp
jmp
inc
mov
out
sbb
pop
mov
outsl
into
lods
shll
or
addr16
push
inc
and
adc
sub
pop
popa
mov
lods
sub
sub
mov
mov
lcall
fsubrp
mov
add
sub
push
push
int
imul
mov
lahf
jb
fcompl
adc
dec
sahf
shlb
add
lcall
cmp
mov
iret
mov
imull
mov
xchg
fbld
cli
imul
cmpsb
inc
pop
popa
add
push
or
mov
int3
cs
dec
stos
jmp
scas
push
shlb
sti
fiaddl
xor
sub
xchg
push
ljmp
lock
in
popa
mov
inc
jnp
jae
ja
inc
dec
bound
cmp
mov
cmp
in
fs
mov
out
or
mov
push
cwtl
rcr
xchg
in
mov
or
sub
lret
mov
xor
inc
xor
adc
cwtl
pushf
scas
cmp
fdiv
outsl
rclb
outsl
dec
pop
outsl
mov
jno
push
sti
inc
lret
adcl
dec
xchg
dec
add
xchg
cmp
addl
pop
lods
inc
bnd
lock
sbb
int3
aaa
scas
xor
jp
xor
cmp
cmp
shr
clc
out
stos
xor
int3
adc
inc
adc
push
fstpl
shl
and
adc
gs
cmp
jp
mov
inc
popf
in
adc
mov
arpl
lea
test
adc
mov
gs
mov
jle
cmp
and
hlt
or
cmc
fucom
mov
mov
xor
lret
or
call
fs
mov
lods
inc
inc
jle
push
sbb
push
mov
add
cld
lcall
xor
in
push
lret
test
lret
lods
dec
xchg
mov
mov
pop
jmp
jae
into
mov
and
sub
jle
ljmp
sub
mov
sub
jae
ja
sbb
adc
sti
mov
imul
mov
push
or
fs
xlat
xchg
jp
decb
cltd
mov
push
popf
sbb
loopne
fs
daa
push
pop
push
or
sub
push
inc
inc
mov
and
je
mov
jb
out
pop
ljmp
xor
addr16
rolb
hlt
es
rcrl
shlb
leave
call
out
mov
pop
pusha
bt
push
je
cwtl
or
hlt
into
scas
mov
xchg
loope
mov
sahf
scas
dec
test
das
and
mov
shll
sahf
lahf
push
add
mov
jecxz
and
sbb
inc
jb
les
outsb
jmp
lea
rclb
fistpl
test
mov
adc
mov
xor
leave
jmp
hlt
lret
test
add
int
idiv
sbb
mov
aad
pop
push
jmp
movsb
bswap
arpl
mov
add
out
pop
daa
dec
xor
push
adcb
popf
and
mov
push
cmp
lret
std
adc
fldcw
js
mov
out
rcr
push
push
stos
xchg
shrl
jmp
les
cmpsl
ljmp
test
pusha
popf
xlat
push
or
iret
nop
inc
stc
lock
jl
call
sub
data16
cmp
shl
add
xor
stos
cmp
xor
lea
movsl
or
cld
sbb
lods
pusha
lcall
dec
push
sbb
movsl
dec
adc
add
mov
sbbl
sub
dec
fstpt
ljmp
xchg
std
movsb
and
mov
and
xlat
adc
mov
fs
outsb
jb
fstl
or
ret
loop
sbb
in
sahf
adc
fldl
jg
cltd
pop
or
outsb
dec
clc
sbb
sub
push
xchg
lods
movsb
cmovs
push
popf
cli
je
xchg
xchg
lret
xor
aam
in
or
movsl
xchg
sub
inc
jl
adc
lahf
pop
aam
outsl
mov
negb
xchg
dec
dec
pop
mov
xchg
popa
or
push
xor
sbb
mov
add
and
dec
outsb
dec
sub
sbb
rorl
cmp
mov
pop
outsl
sbb
mov
repz
pop
or
iret
xchg
in
dec
rclb
test
cmp
push
xor
lock
repnz
push
jb
add
iret
imul
lods
xchg
push
add
or
int
and
stc
and
dec
mov
enter
mov
xor
mov
add
ss
push
xchg
fdivrs
dec
clc
dec
testl
lret
scas
stos
imul
dec
sub
out
jb
jbe
shll
stc
pop
mov
or
jmp
ja
jns
or
fcmovne
fsubrs
push
shr
push
int
add
or
xlat
cltd
adc
leave
cmp
das
fcomps
pop
xchg
inc
inc
into
sbb
xchg
lahf
ljmp
xchg
sti
xor
jne
mov
cmp
fisubrl
movsb
gs
xor
jo
sahf
insb
mov
pop
pop
xchg
call
mov
sub
and
push
add
or
cli
aas
ss
xlat
xchg
xchg
divb
inc
jge
sbb
loopne
add
jmp
jge
call
sbb
jmp
lret
stos
flds
add
sbb
aas
je
mov
dec
mov
movsb
inc
or
imulb
sub
push
aam
sbb
mov
das
mov
fcoms
ja
pop
rcll
lock
mov
outsl
lods
mov
and
sbb
rep
frstor
push
push
mov
sbb
ja
inc
in
lcall
adc
incb
scas
call
cmpsl
mov
sub
ret
mov
add
jmp
and
pop
dec
cmp
xor
popa
mov
dec
es
fdivs
sub
jle
and
sub
xlat
push
insl
cmovo
mov
pop
ja
add
xchg
xor
fwait
es
mov
testl
pop
hlt
dec
je
in
pop
adc
in
fbld
ret
outsl
imul
dec
xchg
aam
pop
cmp
xor
sub
or
out
push
stc
inc
in
push
stos
outsl
stos
cmp
adc
inc
sbb
mov
ljmp
repz
dec
xchg
sbb
push
lea
and
mov
pop
les
rcrl
mov
push
xchg
dec
in
lock
or
or
sbb
adc
jecxz
xchg
dec
add
sarl
sub
pop
xor
dec
es
push
mov
mov
lods
cmp
fsubrl
mov
mov
pop
inc
inc
outsl
outsb
loop
cmpsb
sbb
nop
adc
and
sub
cld
cmpsb
stos
mov
ljmp
bndstx
ljmp
test
mov
pop
iret
fnstenv
jno
add
mov
or
mov
inc
testl
inc
imul
mov
jne
dec
mov
add
or
into
fmul
mov
pop
repnz
or
cwtl
adc
jnp
jl
leave
lret
adc
sbb
pushf
aas
sbb
stos
mov
dec
daa
aaa
mov
je
cmpl
inc
pop
insl
jns
enter
xor
pop
push
sbb
out
pop
pop
daa
and
xor
sbb
dec
ss
mov
in
and
adc
daa
push
pop
jno
sbb
cld
or
sarl
sub
pop
sbb
or
sub
fs
push
sub
je
xor
lods
bound
std
cmpsb
imul
adc
cltd
popa
and
mov
outsb
lds
dec
xchg
add
cmc
mov
int3
test
mov
daa
fwait
inc
insb
int
lock
das
xor
bound
sbb
pop
mov
es
xchg
ret
inc
sub
jecxz
jb
sti
cmp
call
in
cmp
test
inc
xchg
xchg
lret
dec
daa
ss
mov
pop
adc
xorl
mov
in
jecxz
jne
insb
adc
or
mov
cltd
dec
sub
inc
sub
mov
cmp
xor
inc
jmp
es
cwtl
pop
xchg
inc
and
add
pop
jnp
mov
or
cs
pop
insb
es
pop
in
divl
lods
xchg
pop
call
xchg
or
push
push
cmp
sbb
nop
loop
jp
adc
jge
and
lods
fimuls
pop
dec
cmp
into
rcr
outsl
and
lods
xor
mov
dec
dec
ss
and
rcrl
cmp
mov
repnz
hlt
dec
scas
into
outsl
or
push
fucom
xbegin
enter
mov
ret
inc
fdivrs
pop
add
add
add
dec
fnstcw
mov
jbe
pop
adc
xor
pop
xchg
sub
add
scas
and
xor
inc
fmull
push
pop
dec
xchg
out
enter
push
out
idivl
js
push
fs
adcb
rclb
mov
stos
xor
lds
lret
or
mov
sub
fbld
ds
test
xor
mov
mov
jo
jle
divb
jge
mov
outsb
sbb
dec
js
cmp
ror
xor
cmp
push
lods
repz
gs
cmp
mov
dec
lods
call
shlb
pop
test
inc
dec
mov
xlat
cmpsl
jae
fisttps
out
inc
inc
aas
mov
dec
add
sub
add
outsl
popf
inc
or
in
mov
jle
popl
dec
nop
cmp
pop
and
xlat
dec
mov
or
addr16
jns
adc
addl
mov
xor
inc
adc
pop
mov
cmp
insb
pop
mov
lods
cmp
aas
dec
ja
nop
js
in
scas
test
addr16
rorb
loopne
test
loopne
movsl
pop
push
icebp
sbb
and
imul
test
popa
pushf
cmp
mov
jno
inc
xor
xchg
mov
lret
and
scas
and
pop
add
mov
add
mov
pop
mov
adc
xor
sti
mov
ss
sub
mov
cmp
shll
dec
scas
add
xor
popf
movsb
mov
pop
adc
gs
or
push
sub
push
int3
push
sbb
in
xor
mov
cwtl
push
ja
lcall
jae
xor
add
mov
in
shlb
pop
enter
sub
sbb
and
push
nop
and
mov
stos
inc
sbb
test
scas
shrl
cs
in
inc
sti
mov
pop
jl
inc
pop
mov
fst
lahf
or
mov
imul
sbb
mov
popf
dec
lock
pop
gs
rorb
sti
xor
fimull
xor
push
aad
xor
mov
cmpl
mov
dec
fsubs
adc
mov
das
inc
fstps
popa
dec
gs
pop
lds
sbb
xor
xchg
jl
pop
mov
loopne
aad
and
jg
xchg
test
insl
orb
xor
out
jns
sahf
and
leave
mov
sub
pop
sarl
xchg
mov
cld
in
cs
loop
mov
jl
call
lock
jle
mov
push
adc
and
cmp
jne
or
dec
dec
sbb
xchg
xchg
or
sub
xor
bound
dec
test
das
call
jns
inc
popa
addr16
movsl
add
inc
in
pop
dec
test
ss
loopne
ficoms
jg
xchg
add
jl
jnp
inc
pop
xchg
push
sub
pushf
movsl
rolb
shrl
bnd
stos
push
pop
ljmp
sbb
xor
mov
std
dec
or
mov
jno
sub
outsb
sahf
bnd
stc
sub
lods
movsb
mov
dec
out
call
fmul
stos
movl
dec
jle
push
lds
int
aaa
jmp
outsb
jmp
ds
ss
sbb
aam
test
movsl
cmp
test
loopne
mov
stos
push
fwait
aam
mov
jp
mov
movsl
subl
xchg
addr16
sbb
mov
loop
lahf
sub
or
sbb
xchg
pop
lcall
fs
es
cli
scas
mov
enter
stos
lock
fadds
cmp
fcoms
iret
int3
xor
jns
call
or
adc
push
aas
enter
and
xchg
lods
jo
xchg
add
jne
mov
push
fmull
aas
fdivs
stos
inc
pusha
push
nop
outsl
cltd
std
jo
and
xor
mov
cli
icebp
mov
imull
pop
addr16
andb
cld
adc
adc
mov
jg
ljmp
mov
insl
inc
ds
and
xchg
xlat
popa
pop
in
dec
call
xchg
mov
aaa
test
popf
in
arpl
jecxz
cmpsl
xor
jnp
mov
pusha
xchg
pusha
xchg
pop
pop
stc
xchg
adcb
inc
add
xlat
js
aas
mov
sub
mov
repz
xchg
push
or
sbbb
sbb
push
inc
sbb
cmpsl
out
cmpl
test
push
inc
sbb
xchg
sbb
out
cmc
mov
lds
mov
jns
mov
mov
lahf
adc
loopne
jg
ret
mov
ret
sbb
jle
cmpsl
adc
jo
sub
out
fdivs
pop
and
and
push
adc
push
dec
aaa
int3
mov
out
stos
dec
and
and
xor
or
xor
sub
out
inc
mov
cmc
add
mov
mov
xor
insb
push
pop
xchg
pushf
out
out
xorb
push
fistl
icebp
inc
in
je
pusha
pusha
and
inc
sub
popf
jmp
out
movsb
cmp
cmp
test
adc
mov
ss
xor
lret
arpl
test
int3
push
rolb
loop
mov
or
pop
dec
mov
pusha
mov
and
mov
out
js
xchg
add
scas
outsb
mov
stos
loope
test
ror
jmp
pop
pop
rolb
imul
mov
push
mov
pop
sbb
push
adc
mov
adc
mov
push
mov
add
or
sahf
push
outsb
xor
or
xchg
dec
les
pop
mov
into
scas
in
test
cmp
sub
inc
sub
adc
mov
int
sub
jg
jg
cmp
push
fnstenv
loop
popf
jecxz
cmp
adc
sub
and
jo
frstor
xchg
aad
cmp
mov
fists
xchg
push
into
packuswb
adc
dec
dec
and
movsl
and
jecxz
push
mov
cwtl
mov
push
shl
aaa
and
pusha
imull
xchg
fiadds
scas
notl
outsl
nop
popf
icebp
mov
dec
dec
daa
pop
or
or
test
mov
inc
push
sbb
js
dec
ret
frstor
movsl
add
mov
ds
int
or
lea
lea
fdivl
jo
out
incb
pusha
or
xor
cmc
jb
call
outsb
out
sbb
imul
push
push
and
mov
rcll
fidivrl
daa
lahf
in
mov
add
lods
mov
mov
xor
ds
mov
shl
jb
fcoml
add
faddl
cmc
mov
test
push
lcall
adc
jle
xchg
stc
sbb
dec
dec
scas
xor
jp
mov
mov
popa
mov
mov
pop
inc
or
int3
mov
mov
fidivrs
popa
mov
adc
add
call
mov
aaa
stc
mov
test
jge
aad
mov
push
mov
inc
fiadds
aam
ds
aaa
pop
sub
push
mov
into
das
push
pushf
pop
and
shl
inc
call
ret
push
jg
mov
cltd
insl
decb
movsl
out
rolb
or
xor
mov
sahf
sub
mov
lahf
lock
lea
xor
sbb
dec
sbb
jp
popa
int3
mov
sub
mov
xchg
and
mov
lcall
repz
rcrb
or
mov
or
pop
adc
fnstcw
leave
mov
mov
pop
stos
movsl
scas
fdivs
int3
iret
jmp
adc
and
inc
les
shl
js
mov
pop
fsubr
std
sub
jg
mov
int
dec
sbb
xchg
shll
std
mov
dec
test
dec
sbb
mov
repz
mov
add
xor
adc
mov
clc
xchg
andb
inc
je
xchg
inc
sbb
aam
imul
mov
cmp
mov
testl
add
dec
inc
push
aad
js
jmp
leave
cli
lret
je
ret
ljmp
popa
popa
jl
int
jo
jns
adc
ja
shl
and
dec
push
or
and
and
test
scas
std
rorl
shr
xor
pop
push
push
pop
xor
dec
inc
int3
inc
inc
jns
mov
rol
cmp
mov
andl
jge
lods
mov
or
in
cli
aas
adc
xchg
in
sub
into
ljmp
and
test
out
in
fidivl
pop
and
into
sub
inc
xchg
lahf
cltd
fdivrs
into
xor
xor
int3
hlt
filds
and
mov
in
ret
jnp
add
mov
dec
mov
lret
mov
mov
jecxz
mov
in
inc
cmp
sbb
aad
jmp
leave
lret
das
adc
mov
push
jae
les
div
mov
inc
repnz
xor
out
sub
sbb
dec
in
mov
and
sbb
rorb
mov
adc
push
dec
push
scas
mov
and
push
inc
and
jmp
push
outsb
push
pop
popa
sahf
cli
adc
aad
out
inc
xor
and
int3
dec
push
cmp
es
cmpsl
add
inc
popf
dec
pusha
aaa
jecxz
push
fbstp
mov
mov
sti
shrb
and
mov
jb
out
and
addb
mov
mov
cmp
movsb
sbb
nop
mov
int3
loope
stos
std
jno
ja
ja
pop
sahf
xchg
dec
and
scas
ljmp
xchg
lret
adc
mov
add
mov
cmp
clc
xchg
or
and
mov
faddl
je
cmp
shrl
sub
mov
shr
daa
push
out
aas
dec
inc
pop
shlb
and
or
enter
push
mov
and
xchg
lods
jo
xlat
and
nop
movsl
xchg
insl
nop
stos
stos
flds
jp
mov
js
loop
sub
and
pop
push
lods
xor
mov
inc
push
push
sbb
xor
gs
lahf
jno
test
jns
cltd
mov
adc
in
das
inc
pushf
andl
sub
xor
and
pop
mov
dec
imul
imul
pop
push
dec
mov
sub
dec
mov
pop
mov
pop
jbe
dec
dec
add
add
cmc
and
jl
jnp
dec
stos
add
pop
dec
jmp
movsl
pushf
jbe
insl
sub
les
test
or
add
push
add
in
sbb
cld
hlt
shll
push
fildll
jno
sahf
clc
adc
add
lcall
inc
xchg
pop
xchg
js
sub
stos
int
jg
popl
mov
adc
lret
orl
out
cmpsb
stc
pop
jns
cmc
jmp
sub
mov
add
dec
cmp
pop
fldt
sub
jne
push
or
or
jl
fsts
sub
iret
xlat
push
stos
mov
mov
fsubl
les
mov
xchg
jge
leave
jmp
and
xor
fildl
adc
sub
mov
nop
aas
mov
outsb
int3
sti
in
fucom
mov
pop
movsb
xlat
cs
enter
icebp
xchg
mov
dec
shl
add
in
ret
dec
adc
sub
popf
jo
leave
movsb
jmp
orb
cmpl
cmp
jns
ljmp
rcll
xchg
mov
xchg
inc
and
jne
sbb
push
mov
scas
imulb
and
popa
mov
cmp
mov
dec
jmp
add
imul
and
or
or
pop
stos
lock
sub
in
cmc
jo
push
rclb
mov
inc
mov
inc
idivl
adc
movsb
int3
cmp
sti
dec
scas
bound
shll
es
jo
loope
movsb
add
pop
loope
sub
pop
cmpsb
add
cmp
push
or
mov
mov
mov
dec
mov
lds
mov
or
cmp
mov
mov
daa
mov
xor
and
xchg
sbb
fnstsw
shrb
sub
cmp
ficoms
cltd
ds
dec
xor
mov
jmp
mov
and
int3
out
xchg
imul
xor
outsb
mov
out
jmp
sbb
and
or
pop
pop
hlt
rcll
jbe
movswl
and
xorl
lcall
jnp
sbb
aas
out
ret
orb
mulb
pop
out
in
mov
scas
out
mov
fldcw
sub
cld
int
pusha
xor
fs
mov
inc
lcall
mov
loope
xor
inc
ror
adc
xorl
lea
sub
jne
adc
sahf
push
cld
mov
lock
xchg
stc
cmp
repz
imul
rcll
pushf
mov
cmp
xchg
xchg
data16
lock
lods
andb
fs
mov
into
sbb
aas
push
dec
xlat
jns
and
popa
mov
push
dec
dec
out
nop
xchg
inc
mov
pop
inc
xor
repz
jl
jg
mov
lock
fcmovbe
les
jbe
xchg
jecxz
test
or
xor
mov
or
out
dec
xor
lds
pusha
push
mov
pop
call
stc
ja
divl
outsl
jns
and
lds
addr16
jmp
mov
push
cmp
scas
adc
cmp
or
xor
push
sub
jmp
pop
testb
orb
out
mov
icebp
icebp
int
lods
inc
sub
jp
push
icebp
push
fwait
cmp
aam
daa
cmp
inc
jle
sub
mov
dec
jmp
das
inc
jae
adc
movsl
jmp
bound
cmpsb
fs
mov
mov
jl
js
movsl
mov
mov
mov
and
insl
adc
mov
mov
int3
xor
fldt
in
inc
movsl
pop
xchg
mov
push
mov
out
fs
and
stos
data16
dec
cwtl
push
inc
lret
gs
clc
jmp
xor
lret
push
cmp
insb
mov
push
in
or
add
aad
dec
adc
pop
rolb
add
pusha
jno
fs
xchg
clc
and
in
jne
aaa
mov
pop
and
test
aas
mov
int
dec
ret
test
mov
inc
mov
pop
sbb
mov
cli
dec
push
dec
cmp
gs
mov
imulb
orb
in
sub
ja
lea
sbb
mov
lock
cmp
inc
sets
enter
aas
fwait
cwtl
notb
and
jge
cmp
repnz
cs
mov
roll
mov
add
jno
push
mov
icebp
lahf
mov
pop
adc
mov
lods
je
push
mov
lret
inc
cli
mov
shll
int3
xor
test
inc
mov
jmp
stc
sbb
jns
xchg
sahf
imul
outsb
incl
cld
mov
stc
cs
lea
mov
out
adc
stc
imul
inc
xlat
pop
and
adc
sbb
mov
mov
je
or
xchg
lock
sbb
inc
ds
dec
fmul
out
in
in
and
and
mov
pop
dec
insl
and
aaa
inc
test
aas
jecxz
mov
lret
mov
ror
cmp
push
mov
sbb
dec
pushf
and
nop
or
xchg
sti
js
les
fisttpl
and
clc
jg
push
scas
xor
stc
inc
sbb
push
dec
dec
mov
aaa
cmc
int3
cmp
ret
dec
jmp
mov
cmp
imul
popf
xor
pop
js
jb
mov
out
add
xchg
in
pushf
inc
lahf
enter
sub
lods
push
ljmp
fsubrl
pop
in
sub
jns
sbb
push
hlt
mov
dec
inc
shl
add
sbb
xchg
outsl
xor
push
xor
mov
int3
xlat
mov
cmp
push
or
roll
adc
jbe
or
test
lcall
cmc
mov
mov
inc
incb
das
adc
xchg
cmpsl
or
xchg
and
lods
repz
sub
sbb
fidivrl
mul
mov
int
fistps
dec
loopne
mov
mov
jne
adc
lret
pop
call
and
xchg
ja
lcall
jne
movsb
jg
xchg
aas
push
push
ret
push
jle
fcomp
data16
pop
lahf
dec
sbb
stos
pop
adc
mov
repz
cmp
push
repnz
jecxz
lock
test
mov
cmp
fs
adc
ret
sbb
lds
orl
mov
push
cmp
jnp
mov
pusha
sbb
adc
outsb
jle
fwait
or
or
das
fwait
movsl
jg
fdiv
cmp
xchg
pop
repz
std
js
ljmp
xor
dec
nop
sub
cld
ljmp
rorl
cmp
xorb
lcall
stos
xor
jns
jnp
or
add
stc
mov
out
aas
jecxz
div
cmpsb
icebp
movl
xchg
pop
jle
fsubs
les
lahf
gs
ret
ficoml
lods
shll
call
in
sbb
cmp
mov
pop
aaa
jp
fldl
ficomps
xchg
ret
sahf
pop
dec
add
sti
jbe
jne
ljmp
xchg
repnz
sub
push
xchg
mov
int3
test
push
movq
xchg
add
cwtl
call
xchg
out
mov
jb
jbe
pushf
gs
mov
or
adc
rcrb
xor
cmp
and
shrb
mov
push
xor
jno
pop
ss
inc
cs
dec
jl
cmp
and
jmp
or
mov
lods
mov
or
adc
mov
xor
dec
sub
stos
into
in
inc
stc
das
pop
fwait
sti
mov
cmp
xor
dec
jo
xlat
mov
lods
xlat
movsb
shr
ret
cmp
insl
xchg
cltd
push
and
jg
fisttps
xchg
dec
cltd
test
daa
xor
js
and
xchg
xchg
inc
sbb
adc
test
aas
in
xchg
xor
and
outsl
mov
jl
jle
cmpsb
adc
or
jmp
jle
fmul
lret
out
sbb
arpl
inc
xchg
insb
inc
xchg
bound
negl
cmp
jl
or
mov
sbbl
sub
pop
jp
pop
sarb
xor
dec
adc
jmp
loopne
lcall
leave
jmp
and
xchg
xchg
lods
xor
jne
loope
adc
cmp
cmpsl
mov
sub
sbb
shll
inc
and
sbb
ja
jp
sub
pop
cmpsl
ficomps
push
mov
push
fwait
push
inc
xor
or
loop
mov
mov
jecxz
lcall
fst
sub
insb
movsb
cltd
add
mov
inc
or
fwait
lret
sbb
ret
fstps
shl
cmpsb
sti
push
jbe
jne
mov
gs
shl
pop
vpaddusw
adc
cmc
in
ds
arpl
call
out
mov
jae
mov
fdivs
lcall
dec
jns
fwait
mov
adc
mov
jno
fcmovu
push
pop
in
lret
scas
pop
jl
in
movsb
xor
sahf
clts
lret
and
push
out
push
out
enter
pop
scas
dec
mov
mov
inc
cmc
jae
shr
xlat
mov
mov
push
jo
xchg
xchg
int3
mov
jmp
push
push
lret
cs
stos
mov
arpl
cmc
mov
jbe
adc
inc
jne
jmp
push
mov
fidivs
iret
cli
inc
sbb
jl
push
repz
pop
pop
loop
cltd
cmpsb
push
push
inc
cli
cmpsl
enter
fcomi
xchg
cltd
jno
stc
aas
ljmp
or
jmp
imulb
fdiv
lahf
repnz
and
inc
rol
mov
in
xchg
fcmovnu
add
pop
adc
int
mov
insb
inc
pushf
dec
mov
je
xor
jbe
lods
pop
pushf
add
mov
sbb
std
push
or
shlb
xor
cwtl
sbb
outsb
lods
fidivl
fdivrl
addr16
int3
inc
add
xchg
aad
ficoml
and
lock
mov
ds
jo
rcrb
push
jns
jge
cmp
das
ja
call
lods
inc
cmp
sub
in
ret
sbb
cmp
adc
xor
xchg
imul
or
icebp
fists
mov
sbb
push
mov
xchg
cli
pusha
pop
pushf
xchg
or
lods
popf
xor
xchg
fstpl
mov
xchg
repnz
add
mov
push
xor
pop
sti
dec
shll
lahf
iret
add
mov
shlb
and
mov
mov
push
popf
movsl
fwait
loope
mov
sahf
xchg
scas
pop
fimuls
jg
aad
adc
shl
lahf
mov
repz
dec
orl
dec
dec
cmp
xor
push
loopne
dec
or
push
scas
lcall
inc
inc
lahf
lahf
adc
jecxz
push
lcall
inc
pop
mov
cmp
cmp
jmp
jae
adcb
cmpsb
push
dec
call
sbb
arpl
mov
int
sbb
push
sbb
cmpsl
cs
adc
pop
cmp
movl
ljmp
xchg
mov
mov
cli
movsb
add
cmp
mov
push
movsl
icebp
cmp
or
xlat
push
fcomps
out
gs
or
fsts
pop
enter
mov
jae
or
mov
xchg
push
or
fistl
data16
add
sti
sbb
fcmovu
jae
adc
cli
push
mov
inc
fstpl
pop
xor
add
ds
mov
jns
cmp
xchg
iret
sbb
mov
add
fadds
pop
mov
popa
xchg
das
shr
je
int3
in
insb
inc
lea
xorb
push
enter
fcomip
data16
sbb
andb
call
pop
jmp
cmp
jae
adc
xchg
shll
jmp
stos
fs
dec
sub
fbstp
adc
filds
andb
xchg
adc
mov
lret
jns
orl
push
jmp
adc
int3
dec
mul
scas
daa
enter
xor
cmc
fcoms
hlt
pop
mov
das
jbe
enter
scas
jecxz
mov
jge
mov
or
push
inc
leave
mov
push
mov
fs
in
comiss
cli
int
and
adc
nop
mov
lds
jno
jp
ja
and
add
and
mov
mov
pop
fwait
testb
mov
dec
rol
dec
lock
add
outsb
fists
test
adc
jp
push
dec
push
fdivr
inc
sti
les
cmp
rclb
xor
out
add
and
cmpsl
pop
mov
clc
andl
inc
lret
ds
sbb
rcll
out
xlat
cwtl
adc
mov
lahf
jle
add
push
cwtl
pop
adc
outsl
or
dec
ss
das
jno
shr
dec
jp
fldpi
ret
add
lcall
dec
hlt
mov
lret
imul
ds
test
and
cld
adc
jecxz
push
fs
inc
outsl
sbb
mov
cmp
xor
mov
pushf
shl
xchg
stos
inc
ss
scas
std
popf
xchg
adc
iret
adc
lock
jae
ljmp
insl
inc
inc
incb
imul
push
repnz
and
mov
inc
mov
add
pop
fsubs
je
leave
pop
insb
imul
mov
hlt
out
aad
movsl
or
mov
jp
sub
cwtl
dec
outsl
pop
sub
fnstsw
push
inc
out
mov
cmp
push
push
dec
add
mov
repz
leave
jge
and
adc
sbb
and
xor
loop
inc
out
movsb
outsl
mov
cmp
ficoms
clc
inc
push
stos
cmpsl
imul
je
mov
mov
push
shll
movb
jecxz
xchg
push
pop
inc
sbb
pop
jmp
jp
inc
jnp
jg
dec
movsl
mov
icebp
movsb
jl
jmp
push
xchg
push
rorb
and
mov
add
or
dec
pop
popa
fbstp
jb
push
mov
lods
test
pop
roll
inc
lds
insb
mov
jnp
rclb
sarl
jmp
stos
int
repnz
xor
std
push
xchg
rorb
push
sub
sub
or
mov
pop
data16
pop
pop
daa
mov
addr16
and
inc
pop
push
loope
sbb
add
test
arpl
sarb
push
adc
inc
dec
cs
sbb
mov
xor
enter
incb
pop
int
xchg
repnz
mov
bound
sahf
jnp
test
dec
sbb
fnstsw
jno
xchg
jns
mov
adc
push
sti
cs
mov
lock
iret
mov
jae
push
cmp
mov
pop
jmp
jnp
xor
cwtl
fistpll
hlt
fwait
push
js
push
push
imul
lods
mov
iret
adc
inc
adc
frstor
cmp
add
xor
ret
or
or
testl
dec
pop
pop
fs
maxps
xchg
jne
je
lcall
and
xor
sub
sbb
stos
jno
jge
loopne
rorl
jge
fwait
mov
inc
push
pop
jns
mov
xchg
mov
in
aad
mov
ljmp
jae
xchg
sbb
shll
test
out
pop
add
xlat
lods
fisubl
cmp
int3
xchg
mov
call
inc
rol
int
inc
xchg
push
sahf
mov
xlat
test
mov
or
daa
sub
fwait
jecxz
es
popl
and
push
cs
sub
decb
mov
pushf
push
pushl
cmpsl
add
fstl
or
int3
jge
lods
ret
pop
dec
lahf
add
sbb
mov
je
iret
mov
mov
imul
mov
psubw
shl
adc
push
sbb
jp
dec
push
std
lods
test
ja
addl
mov
jl
mov
loope
xchg
jp
lock
cmpsb
fwait
inc
and
jb
push
push
stc
mov
jne
insb
mov
push
add
sub
push
in
lea
repnz
cmp
or
mulb
and
push
test
jle
shll
mov
inc
movsb
mov
pop
addr16
push
fcmovb
adc
cltd
fmuls
movsl
push
xor
jne
int
testb
dec
lock
pusha
in
xor
sbb
inc
shl
fiadds
sub
jle
lock
cs
mov
scas
cmc
in
jmp
ret
or
hlt
mov
pop
pop
sub
add
mov
or
adc
xor
shlb
pop
enter
sub
scas
add
ljmp
cmpsl
mov
rcl
jns
jne
stc
cs
cld
and
mov
add
adc
adc
sub
sub
rorl
xor
inc
or
test
and
xorb
ljmp
jl
push
stos
rorl
dec
adcl
jae
movb
hlt
sbb
mov
int3
aam
ret
mov
or
pop
xor
repz
sub
sbb
xchg
mov
mov
mov
sub
aas
popa
adc
loop
and
test
hlt
add
shll
pop
inc
divl
mov
addr16
push
or
xchg
mov
and
test
inc
cli
xchg
hlt
inc
mov
sahf
dec
insl
lahf
loop
rolb
addr16
aaa
cltd
das
mov
cmp
movsl
ss
cli
mov
mov
xchg
cmp
mov
imul
cld
xor
cli
out
xchg
or
jae
popf
outsl
dec
rcl
pusha
sub
sub
fcmovnb
scas
mov
enter
dec
lods
rclb
inc
mov
xchg
pop
es
stos
fldl
xchg
mov
dec
xchg
mov
mov
imul
dec
lret
fadds
pop
imul
test
xchg
mov
sahf
sbb
call
jno
repnz
in
lds
mov
stos
mov
sub
or
and
mov
push
push
addr16
pushf
pop
sub
fistps
in
xor
push
sub
push
xor
iret
iret
cmp
mov
sub
lds
add
ds
inc
jno
push
loop
std
imul
mov
or
and
xor
nop
add
or
mov
iret
sub
cmp
mov
cwtl
mull
adc
xor
push
lret
sub
repz
pop
icebp
movsb
pushf
mov
mov
and
inc
xchg
mov
jp
movsb
dec
adc
das
xor
push
xchg
arpl
es
cmp
sub
js
sbb
mov
cmpsb
int3
out
adc
sbb
out
push
pop
jnp
pop
das
shrl
cmc
push
mov
xor
push
clc
xor
cmp
or
ficomps
scas
adc
mov
xchg
xor
push
subb
pop
imul
orl
pop
pop
jp
fnstcw
fimull
or
popf
inc
jo
ss
and
out
jle
js
lods
sbb
movsb
or
in
and
scas
ficompl
scas
push
xchg
nop
loopne
mov
loopne
popa
xchg
dec
adc
bound
imul
xchg
stc
popf
xchg
or
adc
fstpl
inc
in
push
divb
in
jae
stos
call
popa
mov
icebp
imulb
adc
ficoms
mov
jecxz
test
popf
mov
adc
and
rcll
movsw
mov
scas
mov
mov
mov
cmpsb
es
sub
mov
inc
xor
jecxz
cmpsb
jne
and
cld
mov
jge
out
pop
xchg
push
cltd
out
and
push
cmp
mov
pop
inc
mov
xchg
mov
rcl
stc
clc
scas
enter
leave
xchg
andl
hlt
lock
push
out
repnz
imul
sub
push
scas
rcrb
add
pusha
lods
adc
cmp
mov
enter
pop
ficoms
cld
ljmp
pop
mov
inc
rcll
inc
push
or
xchg
jb
pop
adc
add
int3
pop
daa
adc
mov
push
mov
push
jb
test
jge
pop
lret
out
push
mul
stc
mov
les
pop
jb
dec
jle
ja
push
pop
daa
jle
sahf
daa
shrl
rcrb
sub
push
inc
shrl
adc
cmp
push
int
stc
inc
sub
or
sahf
or
das
jmp
pop
cmp
repnz
inc
out
mov
sbb
xor
adcl
sbb
shrb
jns
xor
pop
xlat
mov
enter
or
daa
sub
imull
scas
inc
jne
xor
clc
add
imul
jp
adc
cmp
pop
movl
jae
out
sbb
push
mov
aad
adc
adc
sbbb
sub
jno
insb
sahf
push
fdivrs
dec
mov
sahf
pushf
in
jge
inc
fwait
lcall
push
cmp
inc
or
in
mov
add
icebp
icebp
dec
and
fadds
jp
mov
pop
mov
dec
fadd
stos
mov
movsl
inc
cmp
pop
push
cmp
icebp
lock
jecxz
jns
hlt
loopne
call
mov
rolb
cltd
lfs
adc
add
rcrb
in
aas
aaa
dec
cltd
fdivrl
mov
clc
pushf
rolb
push
fistpll
hlt
inc
xchg
mov
cmp
sub
xchg
xor
or
icebp
push
inc
test
mov
les
imul
imul
dec
mov
arpl
xchg
je
or
dec
iret
out
dec
jno
cmpsb
jp
fwait
inc
push
cmp
adc
adc
xchg
cwtl
fnsave
fcmovu
jno
das
cmp
inc
lds
mov
fiadds
mov
icebp
rcr
movsl
add
xor
aas
mov
add
cwtl
pop
lods
divb
sub
pop
das
xchg
mov
push
inc
add
popf
imul
cmc
mov
stc
pushf
std
sti
jne
xchg
mov
sub
arpl
stc
and
dec
fs
insl
insb
pop
mov
rcll
pop
inc
jno
sbb
inc
nop
xor
push
nop
jp
into
sub
dec
jle
into
lahf
out
aaa
rcrb
imul
push
adc
inc
mov
inc
sub
or
add
sbb
inc
pop
scas
cli
dec
xor
add
sahf
cmp
pop
popa
push
cli
icebp
test
inc
pop
push
adc
es
iret
jl
add
jbe
dec
add
pop
hlt
add
cmp
aas
lahf
into
test
push
fst
or
insl
jle
jge
and
jl
fldl
cmp
pop
imul
rcrl
leave
mov
cmp
dec
adc
in
addl
xchg
and
mov
pop
call
sbb
stos
imul
cmpsb
out
pop
scas
xor
sti
add
test
maskmovq
imull
and
jb
fcoms
pop
mov
sub
adc
push
push
pusha
mov
cltd
or
stos
and
repnz
mov
pop
jmp
cmp
pop
fstpl
mov
inc
mov
stos
sbb
sbb
rorb
adc
adc
cmp
rorb
xchg
dec
mov
in
cmp
lea
sbb
and
mov
in
push
xchg
pushf
inc
pop
sbb
pusha
mov
push
adc
stos
adc
lret
pop
mov
repnz
push
repz
dec
jle
fmull
dec
cmp
cs
adc
xlat
ss
cmpl
outsb
lret
push
mov
adc
ja
iret
sbb
js
inc
es
sbb
inc
cmp
daa
ret
xor
lods
jge
lods
fwait
sub
mov
mov
push
ffreep
test
mov
xchg
inc
scas
jns,pt
out
jne
xorb
es
rol
fisttpl
inc
js
fistpll
jb
sub
adc
pop
add
fwait
mov
pop
xor
inc
in
dec
and
mov
mov
pop
xor
fbstp
or
push
sub
push
neg
cli
fcoms
sub
das
xor
add
mov
mov
adc
ret
push
dec
mov
sbb
and
into
mov
testl
xchg
jns
mov
testb
enter
std
int
dec
push
rcrb
pop
repz
xor
decl
pop
lret
push
mov
fld
sub
jl
sbb
inc
or
fstpl
cmp
shlb
shlb
cmp
sbb
insl
add
fnclex
ja
cwtl
inc
rorb
in
lret
mov
iret
and
xchg
add
cmp
js
add
rep
popa
in
jecxz
add
and
aad
pop
fwait
iret
ret
lock
dec
je
jb
mov
les
inc
movsl
adc
sub
pop
mov
std
or
lahf
fsub
mov
movl
pop
out
and
sub
or
pop
adc
mov
pop
jb
adc
ss
mov
dec
test
pop
mov
jecxz
rolb
dec
pop
std
cld
in
hlt
mov
mov
jmp
loopne
xchg
adc
mov
lods
shlb
pop
outsb
js
imul
mov
or
push
not
fwait
add
imul
and
scas
pop
cmp
mov
mov
xchg
fldcw
jne
loop
fcmovnu
in
dec
adc
jo
pop
aaa
or
sbb
mov
inc
adc
lret
das
sbb
ret
aas
add
sub
insl
in
and
sbbl
pop
xchg
dec
jmp
add
lea
not
and
dec
inc
lock
and
mov
push
sbb
sbb
imul
call
pop
in
mov
gs
ss
lcall
mov
jne
add
flds
je
dec
inc
mov
mov
cmp
adc
mov
or
xor
out
filds
push
frstor
or
xchg
jp
dec
adc
insb
insl
mov
push
enter
xchg
cwtl
aaa
pandn
ret
fists
sbb
and
cmp
jae
ret
inc
dec
push
jg
dec
test
outsl
pop
fwait
mov
push
mov
mov
daa
fldl
ret
cmp
xchg
testb
orb
daa
xchg
xchg
sbb
popa
addr16
das
xor
pop
movsb
push
jbe
mov
filds
les
out
push
cmp
push
mov
loope
loop
int3
orb
js
mov
lret
subl
mov
imul
insl
int
repnz
mov
cmp
or
mov
in
mov
stos
xchg
aam
and
inc
orb
inc
push
fstl
loopne
mov
pop
mov
loopne
push
arpl
pop
sub
mov
jecxz
sarb
ret
dec
aam
dec
jns
and
in
pusha
cmp
jecxz
lods
xchg
and
loop
mov
mov
mov
jmp
xlat
loopne
jbe
mov
pop
xor
dec
inc
add
mov
cwtl
mov
adc
xor
fbstp
lds
cmp
and
sarb
mov
sbb
das
or
sarl
les
in
push
hlt
loop
sub
lds
xchg
ror
adc
xchg
mov
xchg
jne
das
xchg
sub
out
pop
xchg
scas
sbb
lret
ret
mov
lods
add
gs
sbb
stc
lret
ja
imul
mov
fcos
or
int3
push
dec
cmp
cmp
dec
sub
dec
mov
ss
and
in
arpl
add
arpl
dec
or
jmp
cmp
or
scas
movsl
out
aas
cmp
int
add
aad
iret
pop
out
cmp
fists
xchg
sbb
push
push
fistps
in
mov
dec
aam
inc
push
nop
push
fidivl
bound
outsl
addl
dec
pushf
fnstenv
outsb
xchg
fisubrs
xchg
dec
popf
lea
push
aaa
sub
sub
jp
shr
and
stos
enter
outsb
add
xor
out
mov
push
sbb
mov
pop
cwtl
add
adc
mov
adc
cmp
mov
cmc
adc
dec
pusha
out
push
jns,pn
outsl
or
pop
xchg
xchg
fiadds
sbbb
pop
in
push
ret
icebp
leave
mov
imul
dec
fisttps
xchg
call
rolb
and
lahf
xchg
push
shl
into
sarl
sub
scas
dec
push
ds
mov
push
inc
sub
pop
xor
loop
mov
cmpl
int3
inc
mov
adc
rorb
sub
ja
rcrb
out
roll
mov
lock
xchg
mov
xchg
inc
cmc
add
inc
jecxz
pop
imul
das
and
je
jg
faddp
push
loopne
mov
pop
ret
mov
sub
popf
pop
popa
push
add
divb
jb
repnz
sbb
nop
inc
adc
sub
sbb
insw
xchg
dec
fdivs
mul
xor
or
cmp
cmp
mov
pushf
ja
xchg
cmp
cmpsb
xor
sub
pop
pushf
add
xchg
fdivs
daa
inc
insb
pop
mov
mov
mov
in
push
sub
int
cld
aas
jp
or
jne
test
fdivs
mov
lret
adc
push
add
mov
inc
jae
fsubr
jae
ja
cs
test
lods
shlb
mov
addb
aad
adc
aad
push
gs
push
cmc
mov
insb
inc
fisubrs
subb
outsb
and
mov
insb
mov
lret
xchg
idivl
cmpsb
movsb
sub
pop
add
add
out
jno
add
mov
xchg
mov
dec
inc
add
jns
mov
xchg
sub
xchg
push
mov
leave
jmp
repz
insb
add
pop
scas
data16
sbb
and
inc
out
dec
push
cpuid
call
pop
lock
cmp
cltd
mov
and
mov
jmp
mov
pushf
in
sub
jle
aam
out
cmpsl
pop
inc
popa
loopne
pushf
mov
adc
jbe
out
xlat
mov
addb
test
dec
pop
pop
sbb
mov
add
push
jne
mov
sub
test
cmpsl
and
mov
mov
test
push
or
mov
dec
mov
pop
and
mov
loopne
stos
jge
xor
cmp
daa
stos
xor
mov
bound
cltd
add
das
pop
add
sub
sbb
add
je,pt
sbb
pop
pop
xchg
daa
testl
xchg
fs
insb
cld
dec
xchg
aam
daa
mov
popa
xor
pop
xchg
fwait
cmpsb
loope
in
test
shlb
pop
dec
jp
push
cwtl
testb
mov
divl
daa
ret
mov
dec
lods
sarl
sahf
adc
inc
dec
add
mov
mov
sub
test
mov
inc
mov
call
popa
cmp
dec
jbe
fs
int3
xor
mov
in
lods
and
mov
sub
je
push
stos
and
xor
shll
pop
add
sub
jne
test
or
shrb
vmread
aaa
scas
mov
jmp
pop
repnz
adc
lock
std
cmc
in
jge
dec
cwtl
mov
push
cmp
fisttpl
jmp
loope
out
bound
cmp
xchg
lahf
test
lods
ror
sahf
mov
and
addr16
enter
stos
movsb
fistpll
mov
subb
std
loopne
cmp
nop
cmp
in
push
add
push
nop
pushf
cmp
xchg
jns
pop
inc
xchg
stos
cmpsl
cmpsl
xchg
nop
test
call
sub
adc
lret
loop
pop
push
dec
add
jbe
pop
popf
mov
and
data16
dec
in
adc
mov
cmp
push
xchg
inc
mov
jle
lret
pop
cltd
mov
inc
cmp
rclb
jmp
fwait
emms
push
inc
xchg
roll
and
sub
leave
cli
xchg
cmc
xor
mov
call
and
outsl
cmp
je,pt
pop
rcrl
stc
loopne
or
xor
add
iret
mov
mov
mov
cmp
scas
mov
lahf
cli
inc
push
in
mov
fucomi
xchg
fadd
test
jmp
and
cmp
test
push
sbb
fnstenv
add
sbb
push
push
push
mov
adc
fcmovnbe
int
or
je
leave
aam
cli
dec
out
xchg
adc
and
sub
enter
inc
in
add
inc
add
mov
push
xchg
out
push
ja
or
lods
stos
xchg
add
je
js
jo
outsb
lock
inc
cs
pop
popa
pop
pushf
shrb
addr16
lahf
jmp
addr16
leave
movsl
xor
ret
or
sahf
gs
call
jle
add
cld
repnz
inc
inc
divb
add
shrb
xor
mov
inc
fldenv
andl
cs
addb
lods
arpl
xor
decb
fsubr
loopne
test
out
ret
in
outsb
test
popf
insl
cmc
shr
in
sbb
or
fwait
subb
out
xchg
lea
sysexit
push
es
stc
cmp
cmp
movsb
cmp
xor
push
jbe
and
push
pop
jns
test
sbb
fwait
test
scas
cltd
out
dec
mov
ret
jp
cmpsb
push
cmp
ja
add
xchg
pop
sub
sub
loopne
pop
push
cs
adc
movb
mov
testb
push
inc
cmpsb
sbb
xor
xchg
add
or
andl
cmp
scas
nop
scas
lock
sti
mov
or
fmuls
loopne
out
mov
inc
out
xor
pop
insl
imul
out
rcll
push
cmp
cmp
push
int
push
andl
les
fiadds
jp
sar
xor
xor
cmp
bound
fcoms
mov
xchg
mov
push
or
out
fbstp
inc
fmull
jecxz,pn
nop
pop
add
jns
enter
test
scas
repnz
adc
xor
xor
jb
fdivp
push
stos
sub
cwtl
movsb
rolb
lcall
push
rcrb
insb
pop
sbb
in
out
inc
sbb
mov
scas
mov
inc
rclb
cmp
ljmp
adcb
lahf
jl
inc
dec
or
in
fistpl
ret
mov
aaa
push
je
stos
adc
push
inc
test
into
movsb
cld
aad
adc
cld
mov
pop
and
cmp
mov
mov
out
push
dec
loopne
cmp
xor
xor
xor
fdivr
fwait
sti
data16
js
pop
mov
inc
out
fldt
dec
inc
or
xchg
mov
dec
jecxz
mov
xchg
dec
sub
jle
cmp
clc
sub
lcall
push
rcrl
mov
shl
or
scas
push
mov
and
clc
xchg
xor
mov
xor
jne
clc
sub
hlt
sbb
jnp
orl
sti
gs
cmp
mov
int
sbb
in
std
or
jmp
lahf
icebp
out
add
outsl
shr
jge
lcall
or
sbb
mov
xor
js
sbb
scas
aam
fimuls
popa
lock
popf
clc
fbstp
jo
jp
fmul
jmp
add
jp
xchg
int3
adc
cs
push
push
pushf
bound
mov
xor
test
sti
hlt
add
rclb
shll
sahf
cld
pop
sbb
mov
loop
mov
rolb
and
inc
add
push
mov
sbb
aam
cmp
fisttpl
mov
xchg
enter
inc
xlat
mov
pop
test
int
pop
sub
call
or
repnz
test
ja
push
push
dec
cmp
pushf
testb
frstor
add
push
adc
jns
xor
add
iret
mov
lcall
test
scas
out
cwtl
mov
imul
push
enter
mov
dec
xor
mov
jmp
inc
sahf
pop
add
push
and
jo
mov
and
add
mov
push
xor
pushf
aad
insl
cmc
mov
lods
jmp
mov
xchg
pop
adc
movsb
popf
iret
cltd
mov
aam
pop
jle
lcall
mov
jnp
stos
scas
mov
aam
cmp
cld
sub
inc
mov
pusha
inc
adc
addr16
jnp
fisttpl
fscale
adc
cmp
ror
test
jns
mov
adc
bsf
pushf
pop
jno
fmuls
jnp
or
daa
in
sbbl
or
cmpb
shll
inc
cmp
mov
int
or
cmpsl
mov
lods
and
push
cmpsb
cmpsl
dec
inc
add
clc
sbb
xor
xchg
jb
aad
mov
and
xor
push
adc
pop
mov
cmpsl
inc
rcll
jmp
mov
sub
cld
sub
int3
scas
push
test
jle
out
inc
mov
clc
sub
pop
rorl
in
mov
mov
xorb
fbstp
add
mov
sti
fcmove
mov
sbb
xchg
or
and
sbbl
vpmadcsswd
repz
les
je
sub
push
adc
cmp
push
dec
fnstenv
mov
lret
or
shrd
in
loope
xchg
push
jle
add
cld
es
in
into
outsb
inc
inc
shl
mov
pop
pop
arpl
add
test
in
inc
xor
xchg
push
jg
lds
mov
and
fisubs
adc
xor
lock
sar
orb
aam
call
mov
and
dec
inc
add
cld
nop
jne
sbb
xor
cli
adc
jle
mov
mov
call
out
push
insb
bound
mov
aaa
or
mov
cmp
arpl
cmpsb
rorl
les
das
and
push
out
xchg
mov
mov
xchg
inc
jae
jecxz
jae
push
mov
imulb
pop
test
fsubr
ret
xor
push
push
mov
ss
int
inc
adcl
cmp
les
mov
xchg
jne
mov
sti
sub
fisttpl
leave
push
mov
js
imul
mov
lea
test
jmp
jae
xchg
loop
loop
loopne
aas
push
mov
mov
mov
mov
shrl
movl
stos
shl
mov
clc
rolb
fimuls
lret
icebp
adc
and
sbb
int3
imul
fdivrs
mov
push
cmp
or
inc
les
push
add
xlat
mov
lods
test
cmp
ljmp
jl
pop
fmul
add
push
mov
inc
add
push
push
pop
lcall
icebp
mov
inc
inc
and
lods
test
xchg
add
jns
push
inc
and
rol
ja
std
out
pop
fcompl
iret
push
or
iret
in
mov
xor
dec
push
sub
adc
iret
adc
jb
push
adc
and
cli
sub
xchg
fdivrs
dec
push
jecxz
gs
sbb
jo
lret
lcall
inc
pop
rcr
mov
popl
xor
jmp
cwtl
mov
inc
mov
je
stc
sbb
leave
pop
sbb
xor
push
or
sub
xchg
test
or
jge
mov
sub
sarl
cmp
sbb
cmp
inc
xchg
sub
bound
sbb
dec
xchg
mov
orb
add
daa
sub
das
jns
repnz
jo
push
mov
outsb
xchg
dec
pop
sub
cmc
cmpl
push
clc
adc
adc
movsb
adc
mov
daa
xchg
jnp
int3
or
movsl
jbe
and
mov
nop
leave
jns
adc
mov
xchg
cmp
cmpsl
xchg
shlb
and
popa
icebp
mov
mov
icebp
js
test
mov
sub
jno
ljmp
lcall
stc
out
inc
in
jmp
pop
enter
leave
add
into
dec
jnp
inc
fistps
mov
test
test
adc
out
xor
test
xchg
push
dec
mov
mov
cmp
mov
inc
int
push
xchg
cmc
frstor
sbb
mov
cmpsl
std
dec
aam
mov
sub
stos
pop
test
and
aaa
imulb
fcomi
jg
push
mulb
pop
pusha
gs
stos
mov
jmp
jb
xchg
jno
mov
mov
jp
jb
sbb
dec
js
push
sahf
iret
mull
jae
sbb
mov
imul
insb
mov
cmp
jo
mov
adc
movsb
sarb
pop
insl
mov
insl
mov
scas
shll
ret
jno
aad
out
dec
dec
jb
inc
mov
mov
inc
mov
sbb
jp
sbb
mov
cmp
nop
or
sub
jne
cmc
rorb
lea
xchg
loop
cmp
stos
mov
fwait
mov
jno
sbb
imul
iret
movsb
xor
scas
insl
jo
ss
shlb
push
in
aad
sbb
mov
inc
bound
ds
nop
dec
shrl
fisubs
pop
dec
pop
hlt
xchg
lret
push
push
and
cmp
push
pop
imul
je
popa
ret
cmp
in
inc
repz
and
jmp
xchg
out
mov
repz
push
xchg
popa
hlt
push
filds
xchg
jmp
pop
xchg
test
add
or
es
and
jp
mov
push
xor
cmp
xchg
mov
hlt
movsl
and
shrb
scas
sbb
jb
pop
inc
lahf
ljmp
leave
loope
mov
and
js
dec
jbe
and
in
inc
cmp
push
push
push
sbb
add
mov
sub
xlat
pushf
addr16
sarl
jne
mov
repz
jle
jge
inc
dec
lds
inc
cltd
pop
mov
cmp
jno
popf
cmp
add
icebp
mov
or
push
or
mov
xor
nop
lret
pop
mov
fildll
cwtl
addl
outsl
movsl
lods
add
in
shl
std
mov
inc
mov
mov
jns
push
cmpsb
loope
js
inc
into
xchg
insl
pop
inc
lret
aas
cmp
cmp
sub
mov
aaa
cmp
clc
add
into
inc
inc
jae
mov
pusha
in
xchg
and
pop
imul
cli
mulb
cmp
xchg
inc
ljmp
cli
divb
aad
jns
push
mov
add
loop
mov
leave
cld
push
inc
jnp
ret
push
call
inc
pop
pop
and
xchg
mov
lods
std
andb
mov
scas
popf
int
nop
aad
push
rcll
mov
cmp
test
push
and
jp
mov
pop
js
xchg
inc
stos
in
cmpsl
movb
jns
jecxz
sub
pop
je
out
jo
jbe
mov
mov
in
sbb
and
jne
adc
sbb
cmp
loope
insl
add
scas
aas
push
imul
adc
clc
xor
mov
xchg
jg
adc
fmuls
int3
sub
mov
fcmovne
xor
fdivp
js
lds
in
adc
orb
dec
ds
imul
mov
fsubrl
clc
or
fsubrl
inc
daa
loop
jae
ss
loop
dec
mov
sahf
ss
test
cmp
mov
dec
aaa
and
mov
adcb
jbe
bound
les
je
lods
lret
outsl
lock
cli
cmp
add
or
decb
xchg
into
in
call
adc
loop
or
adc
pop
or
shll
cli
mov
cmpxchg
ret
xlat
or
insl
jne
xchg
adc
jne
shrb
fstl
sub
pop
mov
xor
popf
out
pop
addr16
cwtl
mov
lret
sbb
or
aam
ror
mov
xlat
and
ja
dec
mov
rorb
cmp
inc
cmp
push
imul
mov
sbb
cmp
rcll
or
dec
jmp
pop
mov
std
add
pop
out
ljmp
test
cmp
xor
mov
mov
ss
lods
data16
jle
xor
pop
jno
mov
out
dec
out
movl
test
xor
mov
push
out
cwtl
sarb
cmp
ljmp
popf
cli
clts
and
or
data16
lock
mul
and
adc
jno
inc
pop
ja
movsl
dec
add
mov
sbb
int
xchg
dec
or
std
out
inc
or
sahf
faddl
pop
test
pop
jnp
add
mov
dec
repz
stc
sbb
je
int
inc
adc
cltd
mov
in
and
cmp
mov
add
movsl
push
xor
pop
ds
or
shlb
add
inc
mov
shll
leave
mov
fstpt
and
clc
movsl
jne
pop
cmp
in
negl
pop
mov
xchg
lods
test
cld
mov
or
mov
dec
add
pop
jno
scas
fists
ds
sub
inc
int
ror
arpl
pop
jb
enter
out
xchg
test
mov
stos
jno
and
cmp
jp
push
leave
pop
and
mov
jecxz
xchg
std
ja
test
dec
xchg
adc
into
addr16
xor
dec
pcmpeqw
movsl
push
push
xchg
cmp
icebp
and
xchg
xor
pop
mov
fmull
push
test
push
icebp
shrl
outsl
fdivs
sti
imul
push
inc
push
hlt
mov
pop
and
mov
fnstsw
cmpsl
jns
add
xor
nop
adc
test
fisttps
in
push
dec
fisubrs
test
jb
inc
xor
fadds
inc
adc
lret
mov
cmp
inc
push
loope
inc
aad
cmp
push
mov
aas
adc
mov
push
sub
loop
out
push
xchg
loope
jo
lahf
aad
cmp
jne
xor
mov
js
mov
or
fldt
adc
je
cmpsb
je
pop
das
cld
scas
xor
inc
ss
test
popa
inc
mov
sahf
mov
arpl
in
aas
mov
aaa
lds
hlt
mov
aaa
popa
jp
inc
pop
fnstcw
adc
inc
push
or
jg
inc
jp
lret
ja
inc
jae
stos
scas
mov
shl
in
add
stos
bswap
pusha
movsl
scas
aam
int3
movsb
popf
fnstsw
inc
xchg
push
add
pushf
and
jecxz
and
xchg
or
inc
or
mov
push
sub
push
mov
popf
pop
fsubp
lods
xlat
aam
mov
je
sub
mov
andb
sbb
test
cwtl
inc
cmc
dec
mov
out
shll
insb
leave
push
repz
push
pop
xchg
jns
das
xchg
jg
hlt
or
jae
add
xchg
cltd
in
sub
out
imul
nop
dec
insl
xchg
stos
or
out
shrb
and
out
cs
divl
adc
mov
and
mov
add
and
in
push
push
mov
jp
in
adc
and
cmpsl
cmpsl
mov
inc
mov
je
int
out
out
test
jle
mov
cmpsl
jge
movsl
jb
pop
and
andl
outsb
push
fsubs
lods
pop
sub
pop
arpl
call
ret
xchg
cmp
cmpsl
mov
pop
sbb
adc
lea
popf
jb
enter
int3
xchg
sub
xor
or
dec
icebp
repz
jp
jle
jecxz
fildl
inc
bound
inc
ds
sub
mov
lcall
inc
adc
test
and
pop
sub
add
mov
mul
mov
movsl
mov
mov
fs
mov
out
mov
jne
pop
xchg
push
xor
sbb
std
dec
movb
std
ss
insl
jp
insl
int3
lahf
repnz
repnz
jb
jl
lods
xchg
in
xchg
sbb
outsb
mov
pop
pop
in
neg
popf
int3
jmp
sub
xlat
insb
lcall
nop
mov
sub
sbb
gs
inc
test
push
push
cmp
mov
cmp
pop
add
lea
sbb
rorl
enter
and
sahf
hlt
sub
movsl
or
stos
enter
int
xchg
mov
adc
call
test
push
mov
xchg
or
and
sub
movsl
cmp
lret
push
shl
lret
and
loopne
push
push
jl
xorb
popf
mov
mov
gs
std
into
dec
add
jo
fs
aad
movsl
jns
in
lret
sbbb
or
jno
mov
test
lret
sub
arpl
aas
aas
ret
cmp
pop
push
icebp
aaa
lret
rolb
fimuls
aad
fsubrp
out
adc
push
dec
pop
mov
adc
jnp
nop
dec
bound
in
hlt
add
pop
mulb
mov
in
outsw
mov
lock
adc
ss
lcall
fldt
jbe
adc
aaa
call
or
push
jmp
jmp
int3
fdivl
mov
jmp
mov
inc
aam
popa
cmpsb
movb
pop
sub
xor
pop
scas
or
add
lcall
pop
mov
daa
adc
pop
sti
xor
xor
imul
in
aad
cltd
mov
xor
inc
cmp
outsl
and
push
xor
sub
sbb
mov
aaa
pop
aas
mov
mov
sub
jle
ja
lds
cwtl
cli
fwait
mov
test
fidivrs
or
ljmp
push
mov
push
cmp
sub
pop
int3
lods
pusha
mov
pop
xor
fucomi
jo
jbe
or
fstps
xchg
mov
into
adc
sub
adc
xchg
sti
dec
and
popf
aas
call
test
dec
cmp
fdivs
notl
lods
scas
sbb
insl
sti
lds
mov
imul
adc
inc
jns
jmp
into
cmp
jle
sahf
popa
mov
adc
sahf
mov
out
xchg
mov
popf
cli
pop
sub
mov
sbb
ret
lret
pop
int3
int3
shlb
xor
mov
adc
test
div
cwtl
mov
pop
xchg
inc
mov
xor
mov
out
cmp
push
inc
mov
cmp
push
movsb
xor
adcl
clc
or
inc
mov
xchg
ss
inc
add
cmpsl
and
test
pop
ja
popf
in
pushf
jp
or
push
je
xor
dec
inc
cmpsl
lds
jmp
cld
movsb
add
xchg
jecxz
repz
inc
sub
orb
push
ja
lahf
out
xorl
pop
jne
jns
mov
cmp
cmc
cld
inc
pushf
leave
lods
insb
aas
bound
dec
push
add
ret
sub
inc
adc
dec
add
shll
std
mov
inc
adc
push
or
fidivl
insl
mov
outsl
pop
dec
cmc
xlat
and
sbb
mov
pusha
out
idivl
sub
fildll
pop
out
dec
and
jecxz
shlb
mov
cmp
mov
mov
mov
xchg
pop
cmpl
jo
jb
or
sub
jle
pop
sub
setns
repz
iret
leave
daa
in
fisttpll
or
loop
stos
sarb
or
cmp
mov
xorb
int
pusha
les
sbb
mov
push
pop
xor
icebp
sub
iret
dec
pushf
inc
and
lret
inc
outsb
jl
es
pop
movsl
dec
add
push
cltd
pop
add
nop
dec
aam
imul
xor
inc
mov
mov
jp
inc
testb
mov
dec
xchg
mov
call
mul
mov
pusha
mov
js
and
xchg
jo
cld
mov
fs
and
stos
aaa
scas
jmp
pop
pop
pop
inc
pop
add
dec
daa
pop
pop
int
xor
cmp
ror
rorl
inc
jns
xchg
or
test
movsl
xchg
fadds
xchg
inc
into
dec
xor
loope
subl
jg
out
dec
std
jmp
mov
xchg
jb
sbb
lcall
inc
cs
stc
add
xor
iret
cmp
xor
int
sbbb
and
jp
xchg
adc
xlat
jp
and
add
xchg
push
dec
adc
mov
xchg
loop
imul
dec
out
lods
or
scas
fildl
pop
test
loope
adc
cmp
jmp
sbb
pop
mov
sub
scas
adc
xchg
or
jnp,pt
rol
xchg
adc
jne
add
adc
xor
jns
popf
dec
dec
es
int3
sbb
into
out
js
cmc
aas
add
adc
dec
jb
lods
bound
push
fs
sub
fstpl
out
aad
jbe
mov
pop
or
inc
cmp
fbld
popa
pusha
and
jb
add
stc
dec
and
xorb
push
xor
sub
sub
xor
les
adc
bnd
cli
lcall
cwtl
sbb
push
xchg
and
pop
and
sahf
jae
std
orb
sbb
stc
test
and
xor
push
jmp
sarb
mov
push
xchg
cmp
lcall
jle
mov
cmp
leave
ret
test
pop
cmpsl
jno
jnp
lea
cmp
adc
faddl
mov
dec
mov
clc
push
jmp
mov
lock
mov
stc
jg
inc
negl
inc
pop
movsb
or
fs
xchg
in
mov
daa
into
leave
stos
pop
cwtl
lea
loopne
sub
push
dec
scas
cmpsl
or
shrb
in
xor
cli
push
xchg
or
sarb
sti
xchg
xor
ljmp
sbb
mov
lahf
cmp
push
adc
and
pop
mull
into
sahf
mov
add
xchg
lods
testb
xor
mov
aad
jmp
push
mov
std
loopne
cmp
add
dec
dec
xchg
xlat
push
test
add
lret
aas
shr
xor
push
or
pop
aad
mov
add
and
jno
mov
sti
adcb
push
loope
arpl
and
jge
mov
cs
mull
shrb
jmp
push
scas
or
aad
jge
mov
mov
mov
ss
les
jg
or
adc
test
jb
sub
stc
inc
xchg
stos
sub
out
stos
push
shrb
mov
inc
xchg
or
outsb
lock
xchg
stos
push
pop
xchg
pushf
rcrl
add
imul
xchg
sbb
pop
cmp
add
lcall
enter
and
mov
jp
fwait
add
dec
xor
leave
testl
mov
add
das
jb
in
pop
pop
hlt
sbb
fwait
shlb
sub
outsb
sbb
in
and
movsb
aad
push
lock
dec
sbb
fcomps
lret
mov
clc
sbb
mov
push
jl
jo
adc
inc
add
in
push
xchg
ja
or
fidivrl
aam
xchg
lea
pop
fs
jp
out
lods
fadds
pushf
outsl
push
cltd
push
mov
jo
iret
jecxz
mov
lcall
mov
ror
fwait
inc
std
lret
imul
dec
cmpsl
ljmp
push
dec
hlt
scas
popf
int3
out
mov
adc
jmp
xchg
adcl
sub
xlat
lret
pop
shll
negb
ret
cltd
mov
cmp
cmp
push
mov
xchg
xor
inc
sbb
dec
cmpsb
adc
sub
loop
xchg
jno
and
decl
sbb
gs
add
cli
sbb
outsb
pushf
dec
addl
fisttpll
push
in
sbb
sub
adc
pop
int3
sub
sbb
out
add
jg
or
mov
cmp
push
and
leave
mov
clc
test
adc
loopne
push
mov
jp
cmp
pop
sbbb
js
mov
sub
cmp
aad
xor
xchg
inc
or
int3
add
sbb
cli
mov
mov
xchg
fcoml
xorl
outsl
pop
das
sahf
aas
xor
sbb
rcrb
aad
xchg
cwtl
js
push
mulb
inc
adc
mov
icebp
addr16
loop
sbb
push
cwtl
pop
and
adcl
repz
cli
cmp
cmp
xchg
sbb
pushf
stc
and
arpl
icebp
repnz
mov
sbb
push
mov
sti
jns
add
ret
jp
movsl
scas
adc
stos
repz
or
mov
push
pop
add
insl
adc
add
push
pushf
xor
call
in
mov
and
xor
loope
mov
mov
sbb
stos
in
fmulp
sti
mov
test
cmp
fcoml
lods
jae
dec
mov
mov
out
xor
adc
adc
or
mov
mov
pop
fldl
fisttpll
cwtl
pop
mov
sub
addr16
and
dec
add
das
data16
or
movsl
loope
lods
shll
push
pop
lea
sbb
pushf
sti
xchg
call
int
jecxz
loopne
pop
add
data16
dec
movsb
iret
sub
and
lret
mov
ret
gs
xor
mov
sub
pop
lds
je
popa
cmp
mov
sbb
in
sbb
cmp
mov
lock
add
mov
pop
jo
push
shll
test
jns
add
out
mov
inc
rorl
push
out
mov
push
stos
sub
pop
cmp
outsb
xchg
jb
sub
push
daa
lods
push
jmp
movsb
xchg
rcl
popf
sti
sahf
inc
mov
lea
mov
add
imul
inc
or
adc
mov
scas
mov
sub
shlb
call
mov
lods
inc
cmpsb
repz
enter
dec
or
cmp
std
xor
xor
and
int
push
pop
push
mov
dec
and
inc
xchg
das
js
lea
jle
cmpsl
ds
mov
fs
aad
sub
out
mov
fdivr
incb
xchg
inc
add
or
sbbl
pop
mov
into
sub
push
lcall
loop
aas
cmp
adc
sarl
push
ja
add
mov
push
push
cmpsb
sub
fildl
or
mov
mov
add
rcrl
mov
xchg
inc
dec
shrl
mov
je
and
push
cltd
sahf
ds
xor
movsl
mov
mov
and
gs
jns
cmc
popa
inc
test
aaa
mov
mov
fsubp
xchg
pusha
push
dec
lods
cltd
aaa
pop
out
pop
pushf
xchg
pop
inc
shlb
sub
lock
mov
mov
test
fwait
pop
push
icebp
fsts
mov
arpl
repnz
into
jmp
in
outsb
leave
jle
scas
sti
xchg
xchg
cmp
lret
jo
push
shl
and
movsl
sub
leave
cmp
push
sbb
sbb
ret
mov
jae
mov
std
pushf
ficompl
mov
lahf
mov
ja
pop
js
test
jno
sub
rorl
cmp
inc
test
je
fiaddl
cmp
insb
mov
mov
js
bound
adc
pop
jp
lds
xchg
mov
add
xchg
ja
pop
dec
or
popf
clc
lret
hlt
dec
mov
nop
xor
sub
inc
push
imulb
mov
dec
bound
fisubl
mov
mov
scas
cmpsl
pop
mov
ljmp
ss
sub
mov
scas
test
mov
dec
in
mov
fdivp
stc
xchg
into
xchg
mov
push
add
imul
xchg
test
sbb
in
shll
outsl
jb
leave
loope
dec
shll
lcall
push
or
int3
mov
out
sub
cmc
dec
insl
addr16
cmpsl
mov
mov
mov
mov
jnp
decl
cmp
jne
xor
jno
iret
addl
add
add
inc
sti
in
dec
or
popf
test
xchg
pop
test
mov
subb
push
pop
mov
mov
jb
loop
sbb
loope
add
mov
adc
pop
lahf
mov
rclb
push
xor
incb
mov
or
and
sbb
jle
pop
lock
xor
sbb
jle
mov
fldenv
aam
sbb
or
fisttps
xlat
movsl
adc
call
mov
mov
jmp
mov
loopne
rol
jle
push
xor
rcrl
xchg
lret
idivb
sub
ret
mov
jle
pop
push
sbb
dec
sti
xchg
adc
pusha
scas
dec
jl
pop
adc
xor
mov
mov
icebp
push
aad
inc
cmp
arpl
xchg
unpckhps
movsl
inc
cs
sub
adc
lret
adc
xchg
fcmove
jmp
mov
insb
scas
mov
das
notb
in
es
xchg
and
and
cmp
ret
add
rcrl
and
mov
inc
and
xor
inc
push
fs
fcmovbe
add
andl
shlb
push
lcall
iret
mov
inc
stc
push
arpl
xchg
sub
inc
mov
mov
iret
cmc
mov
sbb
and
pusha
push
or
mov
xor
push
push
pop
popf
repz
pop
push
sub
out
sub
mov
push
rcrb
xlat
imul
pop
cwtl
jmp
lcall
pusha
add
add
mov
sti
mov
jl
sbbb
mov
mov
mov
cmp
xor
daa
lods
mov
cmpsb
outsl
ss
mov
sbb
test
pop
aaa
shll
jns
aas
xor
cmp
add
repnz
imul
enter
inc
xor
jp
sbb
out
rcl
add
cmp
dec
adc
sub
pop
mov
mov
dec
lret
dec
push
js
and
call
push
xchg
add
pop
sub
or
jo
sbb
ret
sbb
push
xchg
lds
inc
sbb
stos
test
sub
fdivs
sub
pop
leave
bound
cmp
idiv
scas
mov
mov
int3
fwait
daa
icebp
mov
stos
xchg
leave
xchg
push
stc
xor
ljmp
call
das
test
pop
std
lahf
push
aad
hlt
and
pop
mov
out
pop
mov
push
mov
into
not
cmp
ret
lret
sbb
xor
fs
sub
dec
lcall
xor
out
ja
ficomps
imul
fcmovnb
jg
dec
cmp
and
test
dec
sub
nop
fidivs
add
jecxz
mov
push
out
cs
mulb
insb
mov
mov
jecxz
gs
js
andb
dec
out
fldcw
loope
pop
jns
xchg
ja
xlat
pop
scas
inc
cmp
mov
inc
adc
sub
stos
pop
and
mov
sub
push
fstpl
sub
cmpsl
std
shr
xor
or
cmp
dec
add
test
xchg
fidivs
xor
xchg
out
pop
testl
roll
call
mov
test
aas
ret
and
popf
mov
or
mov
xlat
iret
cmp
mov
pop
gs
mov
inc
mov
hlt
out
sbb
imul
and
sub
pop
fnstsw
movsl
ret
xchg
fs
jns
push
fwait
adc
pop
js
orb
jbe
int3
jg
pop
push
push
dec
insb
shll
out
sbb
jae
ljmp
fcmovbe
sti
lret
jp
sahf
shrb
imul
sbb
xchg
lret
fsubs
sub
mov
add
add
movsb
mov
sbb
lock
xor
sub
xor
jae
mov
cs
subb
popa
dec
sbb
inc
jmp
and
dec
cld
scas
pop
scas
xchg
adc
dec
xor
sahf
xchg
push
stc
loope
popf
scas
cmpsb
out
push
fsubr
add
lcall
xor
dec
lahf
stc
or
adc
push
fldt
lock
sarb
fbstp
and
push
movsl
mov
mov
fldcw
enter
bound
mov
stos
or
fnsave
cmp
nop
jno
mov
inc
mov
ror
imul
mov
movl
lods
adc
stc
or
insl
fdivs
stc
mov
xchg
sub
dec
out
cmpsb
test
dec
cmpl
jmp
mov
dec
sbb
insl
xchg
scas
jns
insb
sbb
push
pushf
cmp
movsl
xor
enter
jmp
cld
and
cs
pop
mov
xchg
jns
and
push
sbb
jg
popa
lods
daa
push
jbe
ret
mov
cltd
cmpsb
inc
push
cmpl
into
addb
jge
mov
mov
leave
dec
shrl
ficoml
xchg
decb
jp
subl
in
lods
mov
mov
push
dec
fwait
mov
cmp
test
fsubrs
or
out
sub
hlt
jbe
xchg
pop
or
ret
adc
sbb
cmc
sbb
sbb
int3
push
push
call
add
lods
pop
dec
cmpsb
pop
inc
inc
mov
xor
mov
or
mov
lcall
mov
daa
jno
jo
aad
cld
mov
sub
notb
insb
fs
lea
fistpll
mov
mov
test
inc
mov
jae
mov
ss
ja
xchg
push
xchg
rcrb
ds
leave
xchg
cmovnp
popf
rorb
xor
das
add
int
mov
pop
xchg
addr16
xchg
cmpsl
xchg
sub
mov
sub
mov
fstps
xrelease
inc
aaa
enter
fmulp
add
shrb
add
fildl
insl
arpl
sbb
je
dec
cmp
cwtl
ficompl
arpl
arpl
jne
pop
lret
cmp
push
pop
fnsetpm(287
mov
mov
cmp
fdivl
out
mov
push
lock
imul
mov
mov
xchg
fldt
bound
mov
or
out
das
ds
pusha
pop
jno
aam
in
dec
lods
xchg
push
clc
out
mov
add
or
cltd
or
popf
jecxz
mov
mov
leave
xchg
cmp
jle
pop
sbb
xor
sbb
mov
ret
movsb
mov
leave
cmp
fiadds
mov
inc
mov
xchg
dec
out
out
or
adc
adc
aaa
insb
jbe
pop
sub
dec
dec
pushf
mov
adc
je
xchg
das
push
adc
roll
ds
clc
mov
shrl
mov
hlt
jne
push
xor
xlat
ret
and
xor
loop
mov
fsubp
xlat
push
rep
adc
dec
push
dec
sarl
mov
lret
das
cmpsb
ds
inc
fcomps
and
xchg
mull
in
fidivrl
nop
fwait
js
and
loope
scas
add
popf
jp
imul
jecxz
jbe
cmpsl
filds
jge
mov
test
test
jle
in
loopne
inc
iret
imul
jg
sub
stos
stos
pop
addl
mov
aas
outsb
outsl
js
mov
jno
mov
popf
outsb
hlt
cmc
push
fstps
mov
loopne
cmpsb
clc
jmp
xchg
xchg
decl
push
xorb
test
out
fmull
fnstenv
loopne
mov
xor
clc
inc
mov
test
js
loope
into
sub
push
ret
jbe
xor
adc
mov
cmc
adc
sbb
push
push
mov
sub
fnstenv
jp
dec
loop
jae
in
jecxz
and
pop
sbb
sets
btr
jae
add
outsl
mov
ficoms
mov
inc
das
pop
inc
xor
mov
adc
cmp
addl
mov
call
jo
push
cwtl
aas
fistl
insb
ror
sub
aam
xchg
mov
mov
cmc
pop
cmpsl
bound
shr
lea
shl
cwtl
pushf
or
or
addl
sbb
rcl
fsubs
pop
fwait
imul
adc
sar
enter
popa
cmp
adc
inc
lcall
xchg
call
call
sti
fdiv
adc
out
ja
jb
and
and
mov
lret
add
pop
pop
pop
sub
cmp
pop
repz
lods
nop
jl
cmc
sub
xchg
and
pop
ss
push
sub
fisubl
fsts
fistps
xchg
mov
push
ficoms
scas
add
call
jae
mulb
test
and
ret
inc
push
in
in
out
les
add
into
popa
or
and
mov
fistl
addr16
inc
cmpl
popf
pop
fcoms
add
es
push
inc
test
std
int
int3
add
jno
xor
sub
es
popa
dec
cld
fcom
lock
pop
push
sub
pop
or
stc
mov
xchg
xchg
mov
dec
test
pop
push
cwtl
sarl
dec
mov
std
jmp
mov
xor
loope
ficomps
out
and
mov
push
shrl
sahf
pop
jmp
stos
sbb
lods
addr16
xor
dec
mov
stc
inc
je
aad
leave
and
sub
ds
imul
lea
lods
sub
clc
aas
jnp
es
lret
cwtl
sahf
dec
push
sbb
jo
cli
mov
and
popf
iret
ret
sti
std
sub
mov
ja
mov
out
cmp
adc
sub
out
fs
mov
scas
and
das
scas
pop
imul
jmp
jg
sbb
pusha
push
pop
dec
notb
mov
xchg
ret
jecxz
call
push
call
lock
sti
adc
jg
test
insb
mov
iret
and
stc
lret
jo
adc
int3
sub
cmp
jnp
dec
pop
and
cmp
insb
test
lea
aad
or
and
push
mov
and
fldenv
add
subl
pop
xor
scas
popa
test
xchg
pushf
dec
popa
movsb
in
push
jbe
fbld
loop
shl
or
and
cs
in
test
jns
cli
pop
inc
sub
in
adc
push
mov
xlat
sbb
push
and
stc
push
sbb
inc
mov
lods
shll
jle
pop
aad
test
mov
sbb
aad
scas
std
lock
xchg
mov
mov
das
lea
out
lock
das
fwait
leave
push
jge
cmpsl
enter
cwtl
in
testb
mov
push
mov
imul
mov
and
mov
adc
push
mov
shl
loopne
add
or
jle
mov
mov
push
or
stc
sahf
xchg
imul
mov
testl
mov
and
pop
xor
dec
and
das
xchg
rolb
mov
sbb
pusha
data16
mov
dec
xor
leave
mov
jbe
and
addr16
pop
in
insl
loope
cltd
das
xchg
sbb
lods
xchg
ljmp
sarl
inc
push
jecxz
clc
addl
testb
lret
jbe
out
and
test
rcll
cmp
sar
jmp
mulb
nop
shrb
ss
stc
mov
cmp
insl
mov
sarl
mov
or
xor
xor
je
rcll
or
aas
xchg
push
cmpl
aaa
loope
sbb
add
leave
cmp
int3
repnz
mov
mov
leave
ja
js
decb
jbe
push
out
inc
dec
fnsave
add
pop
or
imul
pusha
je
lret
sbb
sub
pop
sbb
sbb
mov
mov
dec
jle
pop
inc
iret
jg
dec
cs
std
mov
jl
adcb
mov
xchg
in
dec
movsb
sbb
add
testl
scas
lods
stos
pop
add
pop
sbb
push
jb
loop
cmp
imul
int
stos
add
xchg
lret
mov
out
stos
mov
mov
or
mov
push
repnz
sub
gs
fisubl
rorl
shll
js
jns
aad
inc
mov
pop
pop
dec
mov
mov
xor
xor
xchg
rcll
xor
cmp
test
and
mov
mov
in
add
and
xor
lods
lret
sub
cmpsb
cli
in
sub
sbb
out
scas
test
pop
outsb
imul
jp
jbe
jne
je
and
add
ds
ret
cmpsb
movsb
jl
cmp
into
sub
pusha
push
lret
cmpsl
fistl
or
or
cmpsl
and
aas
lret
inc
cmp
xchg
sbb
in
icebp
adc
nop
ficompl
dec
jecxz
push
clc
sub
in
outsl
xor
sarl
dec
pushf
xchg
push
add
jo
inc
ja
fldcw
sbb
pop
jmp
mov
push
mov
jno
cld
adc
mov
xor
sub
shl
icebp
mull
mov
jle
outsl
sti
push
hlt
nop
ds
fstpl
cmp
mov
sti
clc
sub
mov
inc
pop
lock
push
mov
inc
xchg
sbb
outsb
insl
pop
pop
xor
jg
popa
pop
or
add
inc
outsl
adc
jne
lods
mov
sub
push
sub
lret
mov
int3
dec
adc
out
test
cmp
loope
cwtl
mov
lea
jnp
jl
dec
sub
in
xor
mov
add
ret
jo
loop
mov
test
ds
pop
outsl
xchg
and
xchg
mov
loopne
outsb
lret
lea
jns
cmpsl
pop
test
ficompl
xor
lods
xor
xchg
lret
jmp
add
xchg
cltd
cli
jmp
mov
adc
mov
movsl
ss
add
mov
cmpsb
repz
mov
inc
inc
aad
inc
mov
mov
in
js
and
iret
std
lret
out
or
mov
sar
roll
ret
sbb
addr16
xor
jno
clc
lret
or
or
jg
jge
ljmp
adc
sbb
fisubl
fsubp
ds
js
cmp
mov
out
xchg
mov
mov
and
cmpsb
sub
scas
dec
ss
aas
dec
mov
orb
cmp
cmpsl
dec
pusha
mov
idivl
push
xchg
fisttpll
div
jno
mov
in
mov
outsb
bound
ret
rorl
add
shlb
les
sub
outsl
dec
xchg
cmpsl
lret
mov
or
das
or
jecxz
rol
sbb
ret
add
push
jp
leave
cmp
je
pop
or
cmpsb
push
add
test
pop
test
insb
adc
sbb
cmpsb
lea
mov
dec
fstl
and
push
lock
jmp
jo
inc
cmp
sbb
les
mov
xor
jb
dec
pop
dec
add
insb
icebp
push
adc
pop
icebp
aam
outsl
cmpsl
or
sti
fidivrs
adc
out
stos
inc
push
xor
lock
mov
inc
inc
add
sbb
dec
pop
loop
enter
clc
sub
mov
dec
pusha
inc
pusha
and
add
mov
outsl
adc
popa
inc
jae
jecxz
jge
mov
imul
mov
popa
inc
dec
sub
pop
outsl
cmpsb
adc
mov
mov
adc
xchg
sub
sbbb
repnz
cmp
fs
jge
pop
and
sub
mov
lods
add
xchg
rcl
stos
or
pop
movsl
cmp
arpl
mov
aam
sub
testb
jno
sbb
pop
filds
push
xchg
add
lahf
push
add
data16
push
mov
or
lahf
ds
or
pop
push
mov
xchg
scas
pop
mov
sub
sarl
test
xor
xlat
mov
in
jecxz
dec
lea
aas
cmpsb
enter
mov
movsb
pushf
sub
sahf
ja
sbb
lds
add
daa
jns
es
out
mov
cmp
out
xchg
mov
jae
pop
xor
mov
pushf
push
adc
push
lods
scas
push
add
pop
test
push
xor
iret
aaa
mov
shll
gs
adc
jo
inc
test
fstpl
rcl
lcall
dec
dec
ljmp
jecxz
fmuls
mov
orl
negb
push
adc
sbbb
pushl
int
xlat
jb
adc
mov
inc
and
imul
jle
xchg
mov
or
xchg
inc
cmp
enter
adc
pusha
dec
mov
outsl
mov
pmaxsw
push
pushf
jecxz
mov
jecxz
test
lahf
jmp
xchg
adc
test
push
inc
mov
mov
mov
add
or
cmp
imul
psadbw
jno
ds
sbb
xchg
and
xor
stos
jbe
fdivl
or
adc
pop
jo
mov
shlb
adcb
popa
mov
insb
aas
or
clc
bndstx
ror
mov
ds
or
test
iret
lock
std
jg
jb
push
inc
dec
jb
sub
out
mov
push
ljmp
mov
cli
repnz
fisubrs
xchg
ret
mov
out
imul
pop
sbb
mov
jno
mov
mov
subl
fdivs
push
shl
mov
shr
fs
lock
lahf
jbe
sbb
mov
repz
data16
in
or
daa
arpl
pop
insb
mov
and
and
iret
mov
shr
dec
ljmp
mov
shll
xchg
int
das
outsb
adc
outsb
jns
arpl
mov
adc
fldcw
xlat
repnz
jne
cmp
cli
inc
insl
fildll
xchg
insl
popa
cmc
lret
pop
jb
mov
mov
repnz
adcb
insl
into
sbb
lods
xchg
loopne
and
mov
mov
jno
mul
arpl
sbbl
std
jmp
bound
fstl
mov
ret
stos
xchg
lods
mov
sub
mov
jge
clc
mov
adc
and
mov
mov
jno
divl
lret
sub
add
stos
out
jnp
xchg
lret
test
ljmp
xlat
sub
ss
push
fsub
fdivp
jge
push
sbb
in
imul
cltd
jnp
mov
push
mulb
fs
mov
sub
out
and
sbb
mov
and
imul
es
mov
jbe
pop
and
push
push
pop
in
movsb
xchg
adc
into
mov
loop
cmp
xchg
sbbl
test
lret
mov
bound
pop
in
and
lods
cmp
imul
xor
cld
ljmp
push
sbb
xchg
fbstp
popf
es
jne
push
lret
xlat
imul
mov
test
cld
cld
scas
cmp
mov
jb
and
dec
xchg
hlt
push
daa
push
or
fiadds
ret
add
jno
mov
rcrl
mov
iret
es
sub
mov
add
fcom
pop
cmpsb
ret
sub
mov
dec
ds
push
push
xor
stc
ljmp
in
ja
test
insl
fcom
jne
nop
lcall
movsl
ljmp
sub
call
mov
lcall
into
sarb
or
movsb
inc
sbb
add
in
cmp
and
jecxz
lea
mov
inc
pop
loope
mov
decb
mov
ds
loop
or
adcl
adc
insb
leave
xlat
dec
sbb
push
sub
xchg
pop
fucomi
addr16
std
xor
jle
lds
into
or
pop
xchg
mov
ds
pop
xchg
xor
sahf
pop
push
es
in
ja
cmp
or
mov
mov
xor
sbb
fbld
mov
push
jno
fsubrs
mov
js
inc
enter
ret
and
outsb
mov
dec
xchg
xchg
cld
das
cmpsb
mov
es
loopne
js
pop
hlt
and
mov
aas
jp
ljmp
sar
sbb
das
xlat
in
iret
add
out
ja
adc
add
push
test
jae
cmpsl
arpl
lea
jge
sub
sub
bound
push
xchg
jns
loop
stos
and
jle
adc
xor
std
cltd
loop
pop
sbb
cli
add
fdivl
or
aas
sbb
fucomp
inc
or
dec
cmp
push
adc
mov
in
test
sbb
jp
jecxz
cmp
adc
ss
mov
push
pop
mov
adc
sbb
adc
adc
rclb
test
adc
movsl
fiadds
les
mov
ror
mov
jmp
mov
cmp
mov
imul
ret
cmp
and
mov
push
lods
xchg
ret
mov
cmp
faddl
jno
inc
xor
sub
mov
and
adc
popa
push
push
pcmpeqb
xchg
cmp
add
stc
leave
sbb
jmp
orl
mov
int
xor
lods
test
cmpsb
repz
out
mov
stc
cltd
adc
inc
mov
mov
mov
push
pop
sti
mov
inc
lds
mov
push
les
imul
xor
hlt
ret
nop
and
rcl
lret
mov
notb
jge
popa
ret
int
pop
notb
bound
cld
and
jb
sbb
test
add
int
fs
inc
jo
push
arpl
mov
sahf
adc
loope
test
xlat
bound
mov
add
adcb
or
fcomps
outsl
movsl
push
or
stc
shl
out
adc
popf
push
out
outsl
loop
cmpl
jg
xor
mov
stos
movswl
pushf
loope
cli
icebp
rol
xchg
or
aad
and
fbstp
cmp
fxch
popf
out
in
in
mov
lods
cmpsl
repz
mov
jmp
mov
or
repnz
mov
int3
pop
and
xor
mov
stos
movsb
pop
sbbb
jae
scas
subl
jmp
adc
lods
push
mov
popa
mov
jae
pop
mov
add
lods
dec
and
or
mov
in
pushf
mov
xchg
out
aaa
subb
movsb
jl
inc
cmc
inc
cs
jge
fsubrl
cmp
lret
lahf
push
pop
push
fnstenv
cmp
imul
mov
fdiv
loope
pop
pushl
jle
call
push
cmp
and
push
sarl
mov
dec
or
dec
pop
hlt
lret
mov
icebp
mov
in
push
rcl
movsl
cmp
jnp
inc
sub
dec
mov
push
lret
mov
sbb
xor
ret
add
push
test
xor
xchg
jb
fs
cmpsl
or
push
adc
jnp,pt
jecxz
push
andl
movsl
shlb
sbb
lret
adc
sub
out
mov
stc
jmp
dec
sbb
pop
shl
mov
jle
or
or
push
in
stos
xor
sbb
lret
idivb
into
or
jnp
sbb
sbb
pushf
js
out
jnp
mov
leave
mov
ficompl
stc
and
or
cmp
daa
sbb
int
jb
push
fs
insl
ljmp
cld
cmpsb
and
mov
xchg
lahf
cmc
xor
ja
mov
push
ret
out
lret
jmp
loop
lahf
sub
pop
adc
jns
stos
cmpl
mov
pop
shl
inc
imul
ds
test
pop
lret
and
sahf
push
jp
fisubl
inc
bound
xor
sub
iret
hlt
cmc
push
pop
dec
sarb
xchg
xor
rcrl
mov
mov
in
mov
pop
fnstenv
jmp
or
lds
xchg
lcall
into
bound
mov
xchg
jecxz
mov
jae
sub
fwait
loopne
jmp
ds
xchg
xor
imul
icebp
or
cmp
push
in
and
lea
push
mov
xchg
mov
in
fs
and
xchg
inc
js
out
sahf
ret
ret
int3
jo
cli
cld
lods
push
and
std
dec
repnz
insb
in
add
pushf
dec
xchg
divb
test
xor
mov
test
sbb
das
xchg
mov
arpl
dec
add
lea
jae
inc
mov
add
jmp
shll
pop
lret
lock
popa
push
push
sbb
int3
cwtl
add
jge
mov
xchg
and
ja
mov
js
arpl
and
inc
out
into
xor
cli
xor
mov
inc
mov
test
cmp
stc
mov
lcall
test
pop
cmp
xchg
dec
and
cmp
mov
ficomps
push
cmpl
arpl
movsb
jg
cltd
inc
xchg
xchg
xchg
stos
inc
bt
lea
jnp
lret
insl
pop
fiadds
push
inc
or
and
xchg
lods
scas
scas
mov
in
jno
sbb
rcrl
call
je
clc
outsl
xchg
xchg
and
mulb
les
dec
data16
fsubrl
div
xor
aad
ljmp
jnp
insb
leave
add
or
lds
rcl
xchg
bound
aam
lahf
je
enter
repz
mov
fisttps
js
jnp
jbe
enter
stos
decb
out
jne
mov
les
imul
cmp
push
cmp
xadd
mov
pop
xchg
mov
cmp
cmpsb
dec
fistpl
pushf
mov
xor
test
dec
pop
aas
inc
arpl
std
fbstp
xorb
faddp
fdivrs
xor
pop
jns
sub
loop
push
rorb
shrl
xchg
push
shrl
xor
add
pop
pop
mov
mov
dec
push
movsl
cmp
mov
cmp
faddp
inc
cmp
aaa
sbb
dec
aaa
fwait
inc
outsl
fstpl
imul
cmp
js
mov
adc
cli
sarb
popl
cmpsl
scas
xchg
xchg
test
out
jmp
lods
dec
push
repz
mov
pop
mov
aam
arpl
or
inc
fisubrs
mov
outsb
pop
jg
lahf
neg
sub
inc
inc
cmpb
inc
lret
enter
jnp
sbb
insl
cmp
dec
push
mov
outsl
addb
xchg
das
addr16
mov
adc
add
push
push
add
in
pushl
in
mov
cltd
hlt
or
cmpsl
jnp
mov
scas
hlt
rcl
ja
or
push
aaa
jle
ss
scas
adc
lods
ljmp
int3
out
enter
adc
call
xchg
lea
inc
loopne
scas
sbb
xor
fwait
xor
fadd
in
pop
or
mov
xchg
mov
xor
cmp
les
inc
cmpsb
inc
mov
lds
stc
pop
loopne
mov
cmp
add
fcoml
outsl
mov
roll
or
pop
sbb
sbb
in
xor
xchg
mov
in
scas
push
fisubl
jl
incb
adc
std
nop
jae
xchg
lods
xor
xlat
xchg
mov
les
inc
push
into
fisttpll
repz
test
adc
sbb
ror
cwtl
movsb
lods
repnz
js
lods
dec
cmp
pop
adc
push
ret
push
xor
pop
sub
imul
fiadds
iret
xor
jo
push
mov
js
xor
lods
cmp
xchg
mov
mov
addl
and
sarb
shll
std
outsl
xchg
pop
je
xchg
pusha
add
push
fdivs
mov
nop
or
daa
orl
out
ljmp
xor
or
dec
sub
lea
push
mov
mov
out
and
js
dec
movsb
adc
mov
fists
into
mov
push
shrb
dec
jbe
add
insb
ljmp
inc
lahf
xchg
and
insl
js
loop,pn
enter
push
inc
push
push
sub
or
roll
and
pop
add
push
sbb
mov
scas
popl
daa
inc
and
jo
inc
sbbl
lahf
addl
int
mov
dec
aas
inc
push
dec
and
ds
out
addb
dec
jo
push
jns
xchg
sti
mov
mov
jno
outsl
sub
and
pop
pushf
cmc
xchg
dec
daa
cmp
jno
fildl
and
cmc
jo
rcrb
inc
fwait
push
ljmp
and
mov
negb
sub
jmp
loopne
push
in
jg
cwtl
hlt
insl
pop
call
cmp
incb
leave
fwait
xchg
cwtl
arpl
dec
pop
mov
scas
mov
les
loop
movb
shlb
testb
lret
push
mov
aam
push
add
aad
lahf
jp
mov
fsubrl
add
mov
inc
into
jmp
ret
aam
test
dec
lahf
inc
jge
or
cwtl
addr16
xor
and
out
xor
dec
out
and
test
mov
repz
sub
jns
adc
cmp
jp
stc
leave
push
loope
sbb
and
dec
adcl
lcall
fldl
sbb
jbe
dec
and
dec
sbb
jmp
out
clc
mull
xor
pop
sub
fldenv
push
sub
jmp
mov
addb
xchg
jg
outsb
mov
outsb
add
adc
fisttpll
in
mov
jnp
mov
mov
ja
pop
bound
icebp
add
pop
test
gs
add
adc
int3
sbb
xor
fnsave
sub
jge
enter
ret
inc
jp
push
shlb
test
pushf
cwtl
cmp
icebp
shll
mov
out
ds
and
sub
sub
mov
movsl
dec
mov
popf
clc
or
jp
add
adc
cmpsl
cmp
fisubl
orb
cli
test
xchg
cld
mov
clc
in
lds
jb
incb
into
out
xchg
pop
sub
pextrw
pop
dec
iret
mov
mov
xchg
jl
mov
cmpsl
test
mov
repz
outsb
jle
mov
enter
sbb
sti
enter
push
ljmp
dec
lret
out
push
imul
lcall
xor
les
testl
jns
dec
dec
dec
sahf
repnz
orb
adc
cmp
dec
add
inc
imul
xor
pusha
into
hlt
in
es
sahf
pop
mov
inc
or
inc
add
in
gs
cli
dec
sub
sbb
cwtl
mov
jg
add
push
fucom
push
imull
cmp
mov
jecxz
pop
out
jne
loope
fcomip
sbb
enter
pop
mov
cwtl
jae
sub
mov
data16
jg
mov
xchg
lret
ds
pop
imul
mov
push
mov
xchg
repz
add
fsts
jnp
nop
and
outsl
sub
lcall
cmc
popf
aam
xchg
add
and
pop
pop
push
movsb
lahf
and
ret
lcall
insb
inc
inc
repnz
pop
or
cs
shll
jb
jae
xchg
in
xor
rcrl
out
sbb
shl
out
call
cld
push
dec
jge
loop
pop
dec
out
rcll
sbb
mov
pusha
adc
cmp
mov
ja
test
push
dec
mov
inc
sbb
movsb
pop
sub
pusha
scas
dec
xor
out
daa
cli
sbb
fstpl
popa
les
adc
aaa
mov
orl
or
add
mov
lods
cmp
pushf
gs
jp
mov
int3
sub
mov
mov
mov
mov
jnp
movl
pop
stos
je
jmp
int
ret
adc
in
dec
mov
icebp
add
sbb
lcall
mov
inc
mul
jecxz
test
mov
stc
mov
jmp
call
rcll
push
jg
inc
pop
xor
fmuls
cmpsb
cmp
cmp
out
lret
ret
push
imul
push
jae
xlat
xchg
jl
mov
and
ret
dec
jb
and
cli
std
cmp
shl
sub
inc
sub
add
mov
popa
in
nop
and
dec
dec
inc
sub
pop
popa
jb
daa
out
or
lods
lock
inc
sub
lock
and
jae
aam
or
add
popa
xchg
jo
rorb
roll
inc
fbstp
jno
imul
dec
cmp
mov
incb
pop
loopne
fwait
mov
std
push
mov
lods
mov
sbb
cmp
adc
daa
push
lret
mov
ja
add
dec
dec
ss
push
cs
rcrb
mov
xor
mov
cmp
push
fcoms
or
movsl
add
dec
popf
mov
mov
sbb
cmp
xchg
bound
mov
add
popw
pop
jns
movsl
mov
push
inc
mov
popa
add
ds
sbb
fidivl
and
sbb
rolb
push
lea
shrb
pop
ret
push
adc
add
mov
dec
call
fstpl
out
andl
inc
pop
dec
xor
rolb
dec
imul
out
push
pop
test
es
cmp
loop
cli
out
ret
push
out
and
stos
sbb
dec
aam
adcb
push
and
es
mov
outsl
mov
push
jecxz
test
icebp
and
mov
test
add
and
mov
jp
pop
xchg
mov
jae
xor
pop
pop
adc
xor
cmpsb
into
cmp
and
sbb
popf
loop
mov
aam
and
xchg
out
sti
mov
or
and
jmp
mov
mov
sub
and
cltd
adc
xor
cmp
mov
leave
lods
cmc
pop
mov
mov
cld
cwtl
popf
lea
inc
popf
je
add
outsb
addl
jp
sti
inc
pop
scas
xor
cmp
scas
mov
and
xlat
adc
in
movsb
xlat
scas
mov
dec
cmp
fildl
aad
cmp
and
out
mov
add
pop
cmpsl
push
out
shr
cmp
cmpsb
rcrl
mov
jo
jle
out
popf
insb
sti
jmp
cmp
fwait
into
sbb
sarl
mov
sahf
xlat
jle
call
addr16
cli
popa
pop
sbb
jb
pop
add
dec
sub
and
in
cmp
cmp
aaa
in
dec
add
mov
mov
cmp
std
mov
inc
jmp
adc
inc
test
mov
negb
call
jns
mov
push
mov
rolb
cmp
mov
jnp
les
icebp
fsubrs
cmpsl
mov
pop
add
push
incl
sbb
sub
ljmp
sub
shll
pop
lahf
dec
jne
scas
cli
or
stos
lods
sub
mov
xorb
and
dec
xchg
loopne
add
mov
das
mov
adc
push
out
out
sbb
sbb
paddb
iret
mov
jecxz
arpl
push
mov
sbb
and
adc
mov
jg
clc
push
xor
jmp
iret
test
inc
adc
call
sub
push
inc
mov
mov
test
ror
cs
icebp
ljmp
ret
int3
adc
inc
inc
shlb
sub
jne
dec
push
cwtl
mov
xchg
xchg
loop
ret
inc
rolw
mov
subl
decl
inc
mov
lock
popa
mov
or
insb
xchg
fimuls
inc
das
mov
ret
scas
dec
addr16
dec
add
bound
add
in
pop
xor
mov
lea
or
push
sub
mov
stos
test
movsb
mov
ds
pop
rorl
lods
and
lret
in
xchg
aas
dec
pop
icebp
jmp
dec
outsb
loope
aaa
mov
scas
mov
adc
fnstsw
dec
mov
cmp
aaa
ret
out
dec
ss
push
out
fs
subb
adc
es
inc
pmulhw
fsubr
fwait
add
jp
cmpsb
aaa
es
push
mov
adc
sbb
sub
pop
out
xorl
mov
sbb
fiaddl
xchg
add
negb
bound
pop
test
pop
push
jbe
ret
nop
mov
test
and
cmp
jge
ret
inc
add
test
shrb
xorl
cwtl
fdivrl
loopne
movsb
ds
fsubr
xchg
stc
pop
xchg
mov
sub
dec
lods
mov
outsl
jb
add
cwtl
out
or
add
popf
daa
mov
lods
arpl
cmc
push
out
bound
lods
sub
bound
mov
mov
out
or
mov
add
repz
mov
dec
pop
divb
ficoms
pop
and
and
fwait
sub
sub
mov
int3
adc
insl
sbb
mov
sub
ss
fwait
inc
in
xchg
jmp
cmp
dec
ljmp
dec
popa
dec
sahf
adc
mov
or
cmp
push
mov
sbb
xor
inc
lahf
inc
addr16
rcrb
add
push
mov
sub
xlat
mov
push
test
in
push
cmp
jbe
mov
adc
xchg
xchg
negb
aaa
cmpsl
or
int
push
sbb
jnp
and
inc
sub
fwait
movd
mov
addr16
xchg
cmc
lods
mov
jno
or
std
xor
repnz
adc
xchg
das
js
inc
or
dec
inc
mov
scas
and
ss
and
int3
pop
lcall
into
add
add
insl
xor
jg
mov
or
dec
adc
popa
or
sub
iret
test
ror
add
orl
neg
add
pushl
insb
mov
xor
das
test
sbb
inc
pop
idivl
ljmpw
mov
xor
aad
fs
jmp
xchg
mov
sarb
cmp
jns
pop
insl
inc
push
test
insl
scas
push
arpl
and
shll
inc
push
add
or
adc
push
xchg
ror
dec
add
cli
jo
jbe
in
into
mov
arpl
bound
filds
ret
jno
sti
pop
fidivrl
lcall
les
mov
sub
dec
cmpsb
xor
mov
jbe
rcl
pop
out
shrl
dec
and
jne
imul
and
and
mov
pusha
lahf
popa
outsb
adc
jno
mov
out
dec
cli
les
clc
add
cld
jns
and
push
outsl
jbe
cmpsl
test
ds
push
add
lea
mov
add
rcl
icebp
fwait
xchg
mov
pop
aad
pop
and
loopne
std
testl
lret
lds
add
cmp
lods
or
pop
inc
push
mov
dec
daa
pop
mov
sbb
jecxz
xchg
in
ficompl
pusha
cmp
sbb
jbe
popf
xor
mov
inc
test
jge
lret
lea
and
pushf
or
lcall
adc
stos
cmp
stos
jno
adc
xor
rorb
pop
imul
add
stc
jb
inc
outsl
mov
fdivs
fidivl
adc
shl
xchg
dec
adc
loop
inc
cmpsb
xchg
iret
test
jno
mov
movl
mov
out
jno
sub
int
and
ja
sbb
ja
orl
push
push
push
push
stos
fnstenv
or
ret
sub
subl
sbb
in
xchg
push
lods
outsl
imulb
lds
push
roll
cmp
and
inc
inc
dec
mov
popa
iret
cmp
stos
gs
or
in
cmpxchg
cmp
pushf
jo
add
test
inc
cmp
dec
cmpsl
jle
adc
jmp
and
loop
jg
push
inc
mov
leave
push
push
push
jmp
pop
rcll
sbbl
pushf
adc
daa
lock
repz
push
sub
inc
scas
jo
shll
int3
push
adc
jo
mov
cmp
jmp
adc
cwtl
cmpl
cmpsl
fcompl
dec
or
xor
adc
int
inc
pop
adcb
adc
jne
xor
cmp
loopne
cld
push
aam
int3
aas
pop
cmpl
insb
push
movb
cmc
pusha
inc
cmp
cmp
or
jmp
aaa
push
cmp
stos
xchg
addr16
add
daa
out
and
rclb
add
sbb
xchg
push
mov
add
cmp
pop
dec
pop
ja
lea
fisubrl
lcall
outsl
or
xchg
out
imulb
cmc
aad
sub
gs
jecxz
js
cs
js
ret
stos
aad
repnz
jno
aas
ret
mov
adc
pop
adc
scas
pop
dec
xchg
jb
push
xor
leave
fisubs
push
clc
cwtl
scas
stos
inc
aaa
push
pop
iret
mov
jne
shl
jg
popa
in
out
lret
test
cmp
xchg
stos
pop
and
in
lods
mov
cltd
xor
lret
cmp
leave
mov
xor
xlat
xor
iret
pop
shlb
mov
in
stos
shrb
sub
inc
int3
mov
inc
insb
stos
insl
std
push
mov
testb
xor
imul
and
push
push
or
lock
cmpsl
stos
jp
cwtl
fcmovne
ret
push
cmp
outsl
int3
lret
or
stos
xor
lea
sbb
push
hlt
aaa
fstl
mov
push
imul
mov
flds
jae
xchg
pop
dec
int
sbb
scas
inc
jbe
popf
inc
pop
xchg
lods
mov
xchg
fnstsw
jg
push
xchg
add
lret
mov
sub
pop
mov
jmp
sbb
push
sub
mov
add
cwtl
pusha
cs
pop
xor
bound
mov
dec
xor
jae
inc
mov
dec
ret
pusha
sbb
push
cmc
neg
daa
mov
sub
inc
movsb
sub
xchg
xchg
insl
pop
or
sahf
pop
out
repz
dec
adc
push
push
roll
mov
into
add
xor
mov
push
pop
repnz
inc
mov
push
jle
inc
orl
xchg
iret
pop
ja
xchg
icebp
pop
insl
sbb
fadd
js
sub
pop
push
pushf
cmp
fs
add
adc
cli
repz
in
movsb
mov
sbb
mov
mov
cld
and
mov
xor
sub
sbb
or
jmp
xchg
sbb
xor
jne
xorb
sti
hlt
sahf
rcll
add
loope
test
std
xor
outsl
xor
cmp
xchg
push
popa
jno
mov
dec
repnz
ja
in
mov
cmpsb
dec
cmova
les
test
leave
addr16
scas
fldz
mov
jns
xor
xchg
add
xchg
dec
xchg
fdivl
ja
rolb
jle
and
movsb
movsl
addr16
jae
inc
mov
pushf
sub
mov
andb
fcompp
sti
in
xchg
xchg
ljmp
and
out
mov
mov
subl
out
aad
andb
divl
lret
mov
xor
lock
stc
in
out
mov
xchg
ss
mov
pop
lahf
pop
and
lahf
cmp
pop
and
sub
out
dec
les
mov
movsb
xor
cmp
mov
push
fcompl
fmull
lock
les
jae
inc
add
adc
pushf
jo
test
adc
adc
and
ret
push
lret
in
dec
lds
jg
sub
scas
sbb
iret
adc
xchg
shll
pop
sbb
scas
inc
out
sbb
fs
xor
lods
jae
pop
addr16
or
shl
call
mov
stos
rorb
arpl
cmp
add
fistps
mov
out
dec
cmp
and
es
out
push
lods
jno
pop
xchg
xchg
dec
mov
repnz
jle
pop
inc
inc
add
repnz
jle
lods
jns
in
loop
pop
mov
add
sub
dec
std
fnstenv
pushf
xchg
mov
mov
cmpsb
pop
pop
std
clc
push
aad
jb
fsts
xor
out
xlat
insb
in
and
fwait
ss
ljmp
sub
imul
inc
xor
mov
sbb
fs
je
lods
or
in
and
popf
sub
shll
std
sub
mov
enter
cmp
push
lds
movups
add
test
or
mov
xor
mov
fimull
sbb
loope
jne
xor
sub
mov
jne
mov
cmpl
lret
cltd
pop
push
lcall
int
jecxz
jg
movsb
jns
push
cmp
or
inc
fcomps
inc
adc
sub
daa
jmp
add
mov
popa
lods
push
add
mov
lcall
mov
sub
add
iret
shlb
and
or
insb
leave
inc
cld
push
jl
repz
into
das
mov
cmp
mov
lea
push
push
lock
popf
cmp
jle
stos
pop
test
jl
xchg
fists
movsl
popa
sbb
fnstcw
mov
je
in
outsl
mov
sbb
adc
leave
pusha
sti
ret
fs
in
imul
jecxz
sbb
jb
pushf
rorb
leave
and
cld
adc
test
adc
outsl
jmp
inc
dec
jmp
inc
testl
pop
imul
mov
xor
and
sub
out
xchg
stc
ret
dec
cmp
mov
pop
mov
jmp
cmp
mov
rcl
fnstcw
xchg
stos
aas
push
scas
sbb
push
insb
addr16
fwait
jge
ret
pop
lcall
repz
cmpsb
sbb
cmpl
scas
js
pop
dec
leave
inc
push
push
jecxz
into
dec
es
dec
lahf
cmp
xchg
mov
addb
lock
in
mov
aaa
sahf
stos
mov
or
mov
lods
jmp
inc
pop
stos
aaa
push
ret
xor
ds
inc
sbbl
add
repz
lahf
mov
pop
or
sbb
cmp
mov
push
jne
bnd
xchg
mov
push
or
mov
xor
rorl
inc
xchg
shlw
je
dec
dec
fimull
or
les
rcl
pusha
ret
sbb
xchg
aas
inc
mov
cmp
mov
fiaddl
or
repz
ret
and
adc
iret
shl
mov
lcall
mov
fwait
pop
mov
es
daa
cmp
repnz
sahf
cmp
jp
lahf
adc
adc
xor
cwtl
jae
jno
js
sub
lods
repnz
movl
popf
lds
pusha
jns
and
dec
pop
mov
xchg
cmpsb
mov
mov
test
stos
cld
je
mov
sbb
ds
movsb
or
pop
mov
testl
mov
je
push
out
test
dec
test
daa
sbb
adc
mov
dec
pop
ret
lcall
inc
ds
push
or
out
nop
in
xlat
repz
rorl
cltd
push
in
xor
js
add
out
fdivrs
ss
mov
push
jbe
inc
mov
movsl
push
or
jmp
dec
scas
jecxz
xor
fcoml
aas
addl
mov
orl
push
fdivs
fists
jmp
andb
sub
gs
sub
enter
xor
mov
jl
pop
mov
sub
cmp
daa
lods
cld
in
add
pop
or
in
cmc
sahf
mov
je
lods
xor
test
or
sbb
sti
push
cmp
test
jbe
testl
jae
test
shl
cmpsb
ret
call
adc
cwtl
xchg
mov
mov
loopne
sbb
loop
sbb
mov
sub
pop
xor
ja
ret
ret
lret
testb
scas
xchg
mov
or
adc
das
cmpsb
push
dec
das
hlt
add
push
jg
mov
mov
pop
test
lret
aad
movsl
pop
mov
and
lods
xor
xor
adc
lea
jp
cmp
xchg
xchg
hlt
nop
mov
jnp
call
and
inc
mov
insb
inc
pop
rolb
jno
inc
mov
adc
pop
mov
add
jns
xlat
xchg
push
push
out
daa
into
and
dec
fisubs
out
imul
and
inc
xchg
dec
pop
cmpsb
pop
cmpsb
fisttps
lcall
dec
xor
jg
andb
sub
mov
pop
mov
dec
push
ffreep
cwtl
sbb
mov
push
cmp
lock
sub
daa
sbb
or
and
inc
sbb
jle
pop
pop
lods
pop
mov
pop
mov
adc
add
lds
lcall
mov
stos
test
sbb
shl
aas
xor
pop
pushfw
xchg
lods
pop
adcb
push
rolb
pusha
dec
xchg
out
dec
cs
cmc
sub
inc
jmp
pop
jno
out
cmpsl
mov
movsl
add
mov
sti
ss
jmp
sti
push
jo,pn
dec
cli
in
adc
mov
in
subl
adc
push
add
dec
inc
icebp
fstpl
cld
cmc
or
nop
mov
fbld
xchg
cmp
push
jl
in
aas
mov
and
test
aam
push
push
jg
aad
xor
push
ljmp
cmp
testb
es
dec
or
jnp
adc
adc
bound
mov
insb
test
repz
and
pop
mov
mov
addr16
filds
add
xor
data16
repnz
jl
push
cmpl
or
movsb
adc
cld
repnz
popa
ss
jg
rolb
jmp
stc
mov
mov
movsl
lcall
aam
mov
popa
push
add
push
mov
aas
pop
jecxz
push
sub
mov
cwtl
push
inc
sub
sub
inc
std
movsl
dec
es
imul
mov
shlb
dec
dec
rclb
neg
repz
hlt
les
out
sub
sub
leave
out
jb
sbb
xchg
aad
es
scas
bound
mov
pop
push
pop
mov
rcrb
sub
mov
xor
mov
mov
inc
imul
lahf
or
inc
push
out
mov
je
mov
pushf
ljmp
jg
xor
aad
inc
jg
lock
pop
test
pop
fisttps
or
add
sub
ret
mov
cmp
add
loope
nop
adc
cli
push
loopne
es
sahf
inc
out
andb
add
stc
fdivr
out
mov
shll
fldenv
add
add
in
or
lahf
ss
xchg
dec
xchg
jo
pushl
and
stos
xchg
lcall
mov
shlb
in
fistpl
por
jbe
in
pop
imul
pusha
pop
cmp
test
in
jmp
jecxz
popa
jp
mov
mov
mov
xorl
cmpsb
js
out
lret
jl
jl
sub
push
subl
scas
sbb
mov
cmp
mov
loop
sub
xchg
pop
push
pushf
test
push
inc
lds
ret
dec
addl
into
iret
cmpsl
mov
pop
push
and
imull
inc
ds
adc
xchg
mov
les
jle
mov
xrelease
movsb
arpl
aaa
test
enter
stc
add
adc
mov
cli
inc
lea
push
jmp
dec
fwait
test
imul
mov
xchg
mov
shll
or
out
add
xchg
cmp
daa
mov
aaa
mul
es
fildll
or
pop
ret
outsb
in
cmpsl
xlat
pop
push
jbe
lods
xlat
loope
cs
stc
push
mov
je
int
adc
jae
fiaddl
dec
pop
inc
ret
icebp
dec
fmul
adc
shll
popa
sub
cmc
fwait
and
sbb
pop
mov
sub
dec
sbb
dec
and
mov
repz
adc
pop
iret
jo
mov
jno
jne
push
mov
cmp
mov
or
in
mov
inc
fldcw
xor
jnp
adc
enter
xchg
invlpg
in
jo
sbb
xorl
xchg
arpl
jbe
xchg
pushf
data16
fistl
inc
incl
lods
mov
mov
cmp
push
lret
out
mov
fisubrl
add
or
repz
leave
mov
add
inc
negb
push
or
pop
adcl
outsb
mov
lods
xchg
inc
pop
or
fidivrl
xchg
sbb
cmp
jl
xor
push
aas
data16
adc
test
jns
in
stos
mov
ret
pop
popa
xor
loope
aaa
idiv
cmp
nop
cmp
insb
pop
push
adc
mov
cltd
mov
call
loope
pop
inc
pop
and
add
or
ror
imul
adc
lcall
add
and
lods
jnp
clc
inc
dec
bound
adc
fstp
fs
and
add
inc
aam
mov
sbbb
xchg
dec
das
aas
push
mov
in
mov
sbb
xor
pop
imul
hlt
aam
mov
int
sbb
mov
xor
pop
xor
shll
add
ja
outsl
pop
mov
add
cld
ffree
sub
cmpl
mov
sbb
pop
sbb
cld
fwait
add
xchg
xchg
jno
loopne
popf
inc
dec
std
ja
mov
dec
hlt
out
xchg
sbb
stc
or
pop
mov
repz
mov
aam
outsb
or
mov
fldcw
fwait
clc
dec
sub
iret
add
in
imul
push
xchg
inc
outsb
mov
xchg
lea
inc
jp
dec
push
and
xchg
pop
not
mov
add
mov
ds
fcmove
out
mov
inc
add
or
pusha
aas
push
into
out
pop
jecxz
pop
pop
mov
push
popf
mov
sbb
xor
pop
push
xor
xchg
enter
add
sub
es
or
dec
lock
mov
sub
cld
iret
push
pop
mov
jle
lahf
cs
dec
xor
pop
gs
pusha
aas
add
lahf
outsl
mov
loope
cld
in
lods
fsubp
mov
gs
adc
das
pop
mov
jecxz
inc
dec
fs
popa
pop
add
pop
push
mov
xor
enter
nop
mov
mov
adc
jge
push
dec
push
adc
lock
in
xchg
test
int3
cmc
js
shrl
add
addb
test
push
and
jb
or
out
and
sub
nop
lods
mov
push
add
in
mov
xlat
jmp
cmp
mov
mov
and
adc
xlat
cmp
fidivs
mov
dec
dec
cmp
addl
lcall
fs
int3
lret
push
dec
dec
jns
xchg
dec
lret
inc
dec
mov
icebp
inc
cmc
test
push
movsl
xlat
push
sub
loopne
test
in
cmp
test
mov
fistl
add
lldt
xor
inc
fcoms
ljmp
cs
jo
inc
out
pop
mov
inc
cmp
push
pop
xor
insl
daa
and
cmp
insl
lcall
adc
out
pop
or
sub
cli
mov
mov
xor
mov
rorb
jns
push
dec
xchg
adc
pop
shrl
in
cmp
cmp
ss
insl
mov
mov
dec
dec
push
out
pop
clc
inc
aaa
dec
in
fcompl
adc
jbe
mov
xor
outsb
ffree
adc
add
add
mov
in
out
cli
mov
into
pop
pushf
mov
cltd
cmp
dec
pop
sbb
shll
in
pop
in
sub
pop
or
stos
xor
icebp
ror
or
push
mov
in
daa
addb
dec
fs
and
or
js
push
mov
jne
mov
ljmp
mov
xlat
mov
pop
mov
xor
pop
inc
std
fmull
cwtl
cmpsb
shrl
mov
lret
out
pop
or
mov
out
cmpsb
stos
mov
add
pushf
loopne
xor
xchg
aad
mov
sub
cmp
mov
bound
das
xchg
neg
dec
sbb
pop
movsl
aam
ret
cmp
xchg
add
mov
in
jae
xor
mov
xchg
mov
loope
cs
cmp
add
xchg
leave
pushf
sbb
cmp
arpl
dec
sbb
sbb
ret
or
pop
hlt
dec
movsb
pop
sti
and
mov
inc
sub
cmp
mov
das
aaa
out
dec
shrl
and
lods
mov
jmp
mov
testl
mov
aaa
and
xchg
xchg
jl
add
sahf
pop
cld
push
andb
cmp
pop
std
pop
movsb
shrl
xor
mov
push
ret
lea
es
adc
mov
dec
xchg
or
dec
stos
pusha
pop
push
jl
xchg
cld
xlat
jne
xor
inc
movnti
pop
sete
cs
xor
daa
inc
rcll
test
mov
cli
ficoml
fmuls
sub
test
add
je
cli
mov
loop
adc
cmp
add
rcr
in
in
jo
mov
and
inc
xchg
xchg
cmp
cmp
and
mov
mov
stc
rcl
bound
add
add
jle
div
mov
bound
jo
mov
ds
mov
ror
and
cwtl
pop
jge
addr16
and
sub
fstps
cli
sub
inc
nop
jp
sub
pop
jb
mov
mov
cld
je
test
stos
bswap
imul
push
fs
jl
popl
repz
shl
sbbb
ljmp
sti
add
icebp
mov
add
xor
mov
or
adc
mov
cmp
and
cmc
jo
enter
arpl
adc
add
xor
jne
add
lahf
daa
aad
jmp
and
xchg
push
clc
mov
insl
stos
jne
jl
je
or
jno
movsb
lea
xchg
clc
lret
lahf
andl
mov
scas
inc
into
jg
push
js
and
xor
and
lahf
insl
hlt
push
sub
push
xor
adc
pop
and
mov
in
aaa
pop
idiv
lret
or
jb
cmp
jnp
and
stos
stos
clc
jmp
stos
outsl
decl
test
sahf
js
outsw
xchg
adc
jl
outsb
xchg
push
sahf
popf
fwait
xor
xchg
mov
aam
sub
add
dec
add
lods
loop
int3
movsb
push
cs
in
pop
imul
out
jne
stc
push
and
xchg
stos
sbb
xchg
jmp
add
mov
push
ss
mov
daa
mov
pop
mov
sbb
xor
add
mov
sbb
cs
scas
pop
adc
add
sub
out
notl
and
lods
insb
clc
push
repz
push
icebp
pop
aaa
mov
cmp
push
je
pop
test
and
in
or
mov
mov
imul
mov
xorl
imul
sub
les
shrb
test
lret
mov
xchg
cmp
aaa
sub
mov
inc
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
shrb
adc
push
cmp
dec
lods
pushf
jne
jns
jg
cmp
setle
int3
lods
jno
mov
pop
push
jbe
aaa
jns
or
dec
push
cli
sub
mov
and
mov
lret
add
insl
in
mov
sbbb
sar
fdivrp
xchg
movsb
pop
jno
xchg
or
push
inc
xor
cs
push
icebp
cmpsb
ljmp
mov
ficomps
inc
lea
or
sub
mov
xlat
jnp
ja
pop
sbb
rclb
mov
pop
hlt
xchg
mov
aas
fsubs
ja
js
outsb
es
popf
shrb
jg
fwait
mov
bound
clc
dec
cmp
test
inc
jnp
mov
loopne
cmp
jmp
pusha
fisttps
out
add
fisubs
bnd
mov
jae
js
jg
mov
std
push
sub
mov
in
sahf
inc
repnz
in
pop
jae
mov
adc
mov
in
xchg
pop
jno
iret
out
icebp
adc
stos
cmp
add
subl
sub
mov
jmp
pop
fldl
pusha
cmpsb
xor
clc
je
pop
adc
in
sbb
xchg
xchg
jl
pop
clc
ds
add
add
add
xchg
add
inc
xchg
ret
sbb
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cmp
mov
add
