not
lea
not
mov
lea
neg
mov
mov
xor
mov
mov
shr
jmp
neg
lea
xchg
lea
mov
xor
mov
and
push
call
push
mov
jmp
add
mov
neg
mov
xor
mov
shl
jmp
mov
mov
rdtsc
push
lea
xchg
neg
pop
ror
xchg
jmp
mov
lea
xor
lea
movl
adc
jmp
mov
mov
neg
rcr
lea
jmp
leave
call
call
lea
xchg
mov
call
call
mov
adc
shl
shl
not
mov
rcl
ret
rcr
jmp
adc
add
lea
pop
lea
adc
cmp
je
xchg
not
xor
lea
jmp
neg
shr
mov
neg
lea
push
push
pushl
pushl
call
adc
not
neg
xchg
jmp
cmp
je
rol
xor
rcl
mov
xchg
lea
ror
rol
mov
lea
jmp
mov
mov
xor
lea
lea
mov
jmp
ror
cmp
jb
mov
mov
lea
xchg
mov
mov
xor
rol
xor
xor
jmp
mov
mov
lea
xor
add
push
call
adc
not
neg
jmp
mov
mov
shl
neg
mov
add
lea
rcr
xor
push
add
jmp
add
rcr
decl
jne
lea
rcr
neg
not
xor
xchg
mov
jmp
neg
mov
popl
mov
rcl
xor
neg
mov
add
lea
xor
adc
neg
jmp
push
mov
sub
push
push
push
jmp
xor
adc
ror
adc
mov
xor
mov
xor
mov
shr
xor
xor
jmp
xchg
mov
neg
lea
pop
pop
pop
jmp
xor
xor
rcr
rcl
lea
shl
lea
mov
jmp
not
and
lea
neg
push
xor
xor
jmp
mov
movl
adc
mov
lea
xor
not
xor
jmp
shl
rcl
xor
adc
mov
mov
xor
xor
jmp
xor
xor
ror
lea
mov
jmp
and
xor
lea
shrl
mov
mov
shr
mov
jmp
pop
pop
jo
sub
cwtl
pushf
nop
ljmp
and
in
push
lret
sub
shlb
mov
add
mov
ret
xchg
cli
jp
mov
add
test
pop
int
mov
scas
repz
pushf
jne
push
xor
inc
out
mov
or
jmp
xchg
imul
sti
nop
aam
xchg
or
mov
jo
hlt
and
jb
scas
ss
pop
std
idivl
mov
lock
mov
cmc
pop
mov
mov
in
lock
cli
mov
and
adc
cmp
repnz
lods
cmp
prefetch
cli
fisttps
sbb
dec
or
divl
aam
insb
jnp
sbbl
add
jp
jo
jge
int
sbbl
mov
mov
mov
out
lea
jbe
jae
ror
push
sahf
cmp
xchg
sti
outsb
cmpsb
cli
js
addr16
jge
or
lret
push
xchg
dec
mov
ror
js
pop
jg
jge
push
dec
iret
add
jae
mov
stc
push
addr16
pop
icebp
scas
jge
push
ret
sti
add
xor
sbb
xor
pop
mov
mov
pop
out
xchg
xchg
or
sti
jmp
iret
jo
shlb
or
sti
enter
xchg
or
xor
rcrb
xor
ss
pop
popl
or
les
pop
mov
testb
jae
bound
dec
popf
sbb
aas
popf
sbb
cmp
mov
and
sbb
push
xor
cmpsb
jge
push
mov
inc
push
mov
test
xchg
aas
sub
pop
mov
aas
mov
add
aas
xchg
mov
cmc
ret
imul
lods
xor
lret
xchg
xor
cmp
in
leave
pop
out
hlt
add
dec
ret
sarb
add
xor
imul
or
push
out
arpl
and
mov
xor
aas
mov
mov
mov
xchg
add
aas
mov
ret
xchg
cmp
movb
mov
in
inc
and
fsubl
add
pop
insb
loope
mov
mov
xchg
clc
inc
jle
pop
stos
xor
dec
js
popf
shr
mov
mov
inc
xor
inc
clc
mov
add
cmp
mov
xchg
add
aas
imul
xchg
and
imul
pop
sarb
mov
aas
xchg
jmp
sarb
fnstcw
jbe
out
and
mov
leave
mov
es
jp
mov
cmp
mov
ret
mov
cld
xchg
aaa
cs
addr16
test
sub
dec
lret
aaa
cmp
push
cmp
jo
or
jmp
aas
movb
and
ret
or
loopne
in
loop
jbe
or
add
sub
stc
test
loopne
sub
dec
jmp
aas
movb
pop
push
or
adc
aam
xchg
test
or
add
aas
sti
add
mov
inc
sti
lahf
dec
les
stos
dec
push
ds
mov
adc
lock
popa
sub
push
push
adcb
cld
cmc
lret
sub
pop
rcl
or
cmp
pop
dec
xor
lret
inc
loop
imul
or
push
out
arpl
xor
jp
es
cmp
xchg
lds
into
dec
inc
call
aas
inc
das
les
inc
loopne
jg
in
movb
pop
filds
mov
sti
mov
add
aas
push
mov
scas
dec
in
icebp
iret
jmp
sarl
imul
inc
loopne
mov
add
adc
lock
mov
xchg
sti
jg
cld
add
cld
push
pop
filds
imul
cmp
filds
xor
loop
cld
push
push
filds
push
xchg
dec
jp
or
xor
dec
xchg
cmp
nop
push
or
inc
imul
aaa
les
loopne
xchg
jmp
ret
fstpt
xchg
push
mov
cmp
aas
jecxz
cli
imul
imul
dec
fcoml
push
mov
jb
shlb
lock
cmp
rcrb
adc
or
scas
add
mov
bound
fdivl
jno
out
jno
hlt
mov
sbb
popf
aaa
lds
mov
or
decb
divl
rol
testl
lock
mov
adc
lret
sub
jbe
cmp
or
fwait
lahf
pop
arpl
out
loope
shlb
adc
pop
rorb
aas
movb
pop
dec
cwtl
pusha
aas
movb
into
mov
imul
jae
mov
cmp
jmp
mov
mov
dec
mov
sbb
mov
adc
int
xchg
cmp
into
add
dec
fimull
iret
fnstenv
cmp
or
push
cmp
imulb
jle
sarb
dec
aam
andb
sub
mov
adc
aaa
xchg
outsl
mov
add
aas
movb
dec
stc
mov
aas
movb
add
jle
mov
pop
arpl
into
rorb
fsub
scas
dec
pop
imul
divb
sbb
or
aas
pop
fcomp
sub
inc
aas
movb
mov
std
repz
cmc
dec
mov
movb
popa
dec
mov
aas
movb
dec
into
mov
inc
push
mov
xor
cmp
imul
out
mov
lods
imul
movb
imul
add
mov
mov
movb
cmp
or
lret
dec
shrl
jecxz
into
arpl
dec
into
cld
xor
call
loopne
dec
inc
in
mov
packssdw
mov
dec
rorl
lret
dec
pop
enter
imul
lret
add
loopne
imul
or
pop
jb
pop
mov
les
rorl
ficoml
pop
fimuls
loop
mov
pop
out
add
and
sub
jae
xchg
lock
xchg
push
mov
and
clc
mov
sbbb
out
push
pop
add
mov
push
xor
xor
or
or
add
aaa
mov
jmp
jne
pop
add
dec
add
xor
add
cmp
cmp
mov
cwtl
stc
xchg
aas
inc
ja
shr
imul
inc
or
sub
sub
cmp
aaa
icebp
xor
push
xlat
shl
ss
sub
xchg
leave
pusha
daa
rcll
fisttps
lods
xor
adc
scas
pushf
cmpsl
and
imul
arpl
adc
and
or
mov
cmpsl
jno
in
fists
loopne
or
rclb
pop
inc
cmp
sub
in
xchg
cmpsb
mov
das
xlat
sbb
cmc
xchg
push
jne
sub
pop
out
aas
enter
xchg
push
fistpll
mov
cmc
push
sti
call
je
cmp
sub
push
addr16
pop
stos
and
insb
es
pop
out
out
xor
sub
or
jl
xlat
ljmp
jnp
ret
ds
in
xor
cld
cmp
mov
mov
das
in
cmpsl
cmpl
sub
sub
ljmp
pop
outsb
add
mov
pshufw
sti
aaa
xchg
outsb
mov
insl
xchg
scas
xchg
insl
pusha
adc
popa
out
mov
push
lock
ret
mov
fiadds
sarb
test
pop
fs
ret
scas
pop
xchg
jmp
jle
clc
jae
xchg
orb
sub
stos
push
mov
adcb
addl
xor
aam
out
mov
sbb
xor
insb
int3
dec
rcll
sbb
and
or
movsl
jo
adc
pop
mov
adc
stc
out
imul
rclb
ret
and
xchg
dec
adcb
xchg
pop
sbb
mov
fwait
mov
and
leave
cmp
sahf
scas
je
out
subb
mov
ds
je
ret
repz
mov
ret
in
and
jg
mov
pushl
cli
in
push
cmpsl
mov
mov
push
stos
lock
sbb
scas
bound
push
mov
scas
jmp
mov
push
xor
aam
jo
xchg
pop
jmp
daa
mov
cld
lds
inc
js
push
xchg
jo
dec
out
dec
lret
and
xorl
jnp
aaa
mov
outsl
outsb
js
and
sahf
jno
push
xchg
pop
lods
mov
pop
ret
ja
inc
sub
sti
push
xor
adc
sub
daa
push
out
mull
addr16
mov
xchg
jecxz
leave
ret
add
push
flds
xor
scas
ljmp
mov
int3
mov
cmp
daa
movsb
xor
cmc
lahf
jg
add
or
jns
pop
ss
stos
sub
aaa
push
sbb
mov
testl
add
loop
pop
jns
ja
clc
add
pop
out
rcl
dec
aaa
sub
inc
add
xchg
push
pop
je
mov
scas
bswap
loopne
int3
pop
or
movsl
in
sbb
xchg
dec
cmc
inc
movsb
movsl
mov
insb
jae
or
push
inc
andl
lods
push
push
mov
sub
mov
sbb
and
add
pop
push
insb
cs
dec
mov
xchg
push
movsb
xchg
sub
mov
xor
or
lds
cltd
xlat
sub
outsl
inc
roll
imul
mov
xchg
xor
insb
xchg
aam
out
orb
or
push
push
cmpb
and
pop
dec
dec
and
mov
scas
or
imul
fdivrs
jge
cs
mov
bswap
ret
in
jg
add
add
cmc
fnsetpm(287
lret
xor
mov
enter
out
leave
cli
pop
jg
pop
inc
mov
sub
pop
sbb
sti
fsin
leave
and
out
out
rcr
rclb
mov
cmp
pop
fdivrs
aaa
test
sarb
jg
jae
or
out
das
psraw
out
pop
out
and
pop
push
and
or
cmp
sub
movsb
adc
rorl
pop
jo
pop
dec
call
sbb
bound
cmp
add
push
clc
dec
les
popa
loopne
cli
sar
popf
sub
movb
mov
mov
xor
out
jne
shrl
xchg
sbb
jecxz
test
in
loopne
inc
jmp
and
into
mov
rol
stc
mul
leave
xor
inc
or
adc
incl
fprem1
xchg
mov
sub
loop
xchg
jae
sbb
add
bound
xor
sbb
jb
push
cmp
mov
ffreep
or
ljmp
mov
xchg
add
mov
in
addb
xlat
pop
ret
outsl
cmp
dec
aam
out
popf
out
insb
and
outsb
push
or
push
jmp
ss
imul
jne
adc
in
out
sbb
loopne
and
sub
shrb
cmpsb
lret
daa
ds
adc
xor
lret
std
or
mov
inc
lea
or
shrb
gs
mov
js
mov
pushf
fidivl
pusha
add
lret
or
into
fdivrp
mov
and
mov
cld
sbb
sar
cmp
fs
sub
es
push
add
pusha
imul
adc
mov
loopne
mov
in
add
inc
fcoms
into
subb
dec
je
sbb
jle
jns
pushf
clc
clc
rcl
mov
cli
call
stc
ret
mov
fs
mov
mov
repz
xor
jl
movsb
es
hlt
sbb
add
dec
out
xor
cmc
and
mov
push
popa
inc
inc
imull
mov
in
add
or
scas
aad
out
pop
imul
outsl
xchg
aaa
or
xorl
int3
xor
mov
shlb
lock
inc
cld
xchg
sub
aam
negb
mov
scas
xor
add
add
jo
bound
add
mov
add
je
jp
sbb
fcomp
mov
add
call
cld
mov
test
pop
cmp
mov
xchg
iret
jp
into
push
imul
xchg
popa
inc
orb
inc
mov
mov
test
xchg
arpl
clc
jge
add
jne
loope
and
and
cmp
mov
push
or
loop
sbb
lret
mov
adc
outsl
mov
ljmp
leave
and
sqrtps
sub
push
lcall
dec
xor
xchg
ror
repnz
scas
in
loop
in
or
mov
cmp
dec
int3
lds
push
fimuls
cmpsl
iret
cltd
int3
jmp
ja
and
fistpl
xchg
addb
icebp
xchg
mov
sti
out
lods
mov
push
jo
and
xor
adc
out
out
mov
inc
lret
inc
out
xchg
dec
pop
and
and
push
imul
aaa
jg
sbb
sarb
cmp
clc
cmpb
pop
sbb
pop
sub
xchg
imul
mov
cmp
sbb
call
lods
inc
or
push
mov
ret
dec
mov
scas
stos
cmc
mov
scas
sti
mov
push
pusha
aam
addl
mov
fstps
fsubl
xlat
lret
in
cmp
or
add
out
xorl
mov
and
mov
xadd
mov
sub
cmp
push
in
ljmp
xchg
sub
cmp
hlt
mov
jg
ja
hlt
xchg
sahf
fsubrl
xorb
stc
xor
pop
xlat
fsubs
sub
cli
mov
xchg
imul
sbb
mov
or
xchg
insl
scas
cs
sub
add
out
std
lret
push
aam
and
loop
sub
subl
lds
xlat
ret
xor
scas
ret
mov
jns
aam
fs
dec
mov
add
sub
fisubrl
pop
push
or
fwait
xor
nop
cmp
sbb
scas
jp
mov
dec
jge
push
adc
pop
mov
insb
fimuls
mov
loopne
loopne
pop
addr16
shld
dec
nop
xor
jae
sarb
sarl
std
jecxz
mov
das
xchg
sbb
loop
push
mov
inc
scas
std
cltd
mov
mov
pop
repnz
out
sbb
testl
lds
push
xor
out
out
int3
ss
push
cmp
data16
addr16
out
push
jmp
cmc
push
ret
mov
fmulp
xor
inc
addb
ds
cmp
cmp
jne
in
stos
cld
shrb
jmp
or
mov
and
aas
insl
jg
arpl
dec
adc
movsb
push
and
sub
gs
add
xchg
and
push
popw
inc
loopne
in
mov
dec
cmpsl
orb
ljmp
loope
inc
out
shrl
arpl
cmpsl
sub
test
push
push
xchg
jae
sub
pop
and
pop
dec
jle
das
fsin
push
jbe
fwait
add
mov
cmp
inc
int3
xchg
xchg
fsub
sub
mov
sbb
add
pop
mov
insb
fsubr
test
add
mov
insl
lret
fildl
adc
jge
loope
mov
idivb
movsb
or
inc
mov
mov
sub
xor
jg
dec
sbb
ja
mov
inc
daa
sbb
ds
fdivrl
dec
iret
mov
lods
out
adc
enter
lea
xlat
in
push
ja
xor
jno
sub
dec
shll
stc
sub
aam
ret
adc
imul
scas
sbb
aaa
mov
sub
sbb
fists
cmp
in
jmp
mov
adc
xchg
cmp
jnp
test
jns
into
lds
jno
outsb
sti
mov
insb
xor
stc
pop
inc
dec
loop
call
xchg
pop
jne
imul
fstpl
mov
mov
add
and
in
and
jge
stos
out
subb
and
push
pop
xorb
out
sub
stos
sbb
sbb
aas
hlt
inc
imul
add
pop
insb
fcmove
imul
xchg
stos
cmpsl
mov
sub
lret
and
or
sub
aam
sub
mov
xchg
push
jnp
jo
sub
iret
mov
leave
andl
push
jne
adc
push
pop
and
and
sbb
ljmp
sub
movsb
add
shr
fwait
testb
fimuls
daa
jge
push
sbb
cmp
ljmp
add
or
adc
sbb
add
fistl
mov
mov
mov
jnp
ljmp
rcll
cmpsl
mov
idivb
js
ja
in
xchg
and
xlat
dec
imull
inc
sbb
pop
xor
shl
lcall
inc
cmp
mov
mov
push
inc
js
push
into
es
mov
int
xlat
outsl
xchg
inc
sahf
imul
sub
adc
or
push
mov
add
sub
mov
sub
lds
xchg
add
dec
int
les
mov
jo
loop
ljmp
sub
jg
rcll
adc
add
sbb
xor
xchg
mov
or
jo
xor
sahf
sbb
mov
push
or
pop
sbb
pop
xchg
mov
xlat
cmpsb
pop
pop
push
inc
lret
lds
push
mov
adc
in
in
cmp
cld
into
jnp
xor
jo
pop
add
mov
add
add
xor
push
xchg
dec
les
sar
subb
push
mov
jge
std
rcll
insl
aam
sbb
adc
ljmp
xchg
test
pop
dec
test
std
inc
rorl
lock
dec
adc
sbb
cmpl
push
mov
lods
call
addr16
pop
je
push
mov
enter
and
push
fcomi
push
ljmp
push
add
and
add
dec
add
dec
sbb
pop
out
sbb
jne
fisubl
xor
test
jb
fcmovb
sti
or
push
add
pop
fidivs
dec
test
inc
aaa
adc
cmc
sbb
xchg
pop
icebp
add
repnz
in
out
pop
add
inc
dec
fxch
jne
mov
jo
mov
fwait
movsb
xor
sbb
mov
or
sbb
dec
imul
mov
jb
pop
xor
xchg
xchg
out
imul
xchg
mov
roll
mov
sahf
mov
dec
rol
mov
sub
add
xchg
jo
push
sub
jp
jnp
iret
ret
sub
icebp
adc
push
xchg
sub
ds
xchg
ss
inc
sub
add
aam
mov
fs
push
push
or
and
loopne
iret
shrb
xchg
sub
outsl
les
xchg
daa
iret
pop
sub
jecxz
xchg
aad
mov
add
jmp
clc
and
and
mull
stc
cs
aad
lock
add
cmp
jmp
sub
jbe
inc
inc
inc
jge
adc
jb
out
pop
fisubs
imul
cmpsl
or
fisubrl
and
stos
mov
xchg
or
xchg
icebp
daa
mov
push
jno
jecxz
int
xchg
pop
loope
pop
sub
adc
xchg
xor
sahf
jg
mov
fiadds
popa
pop
cmp
sbb
push
in
iret
add
inc
aaa
dec
pop
lret
adc
hlt
fldenv
push
and
sub
pop
gs
jns
sti
div
adcb
mov
cmp
mov
sbb
popa
sbb
jbe
or
adc
xor
fdivr
ljmp
jbe
insl
lods
push
lret
aaa
cli
jmp
test
ret
sub
cmpsl
cs
imul
in
es
mov
mov
pop
jecxz
fistl
xlat
xor
pop
mov
xor
xor
inc
xor
push
inc
lods
push
and
ret
xchg
mov
mov
mov
xchg
sub
adc
dec
push
testb
aam
pop
xor
push
jle
add
sub
popf
rep
xor
xor
adc
stos
sub
adc
outsb
jecxz
adc
mov
and
std
xor
stc
out
loopne
jg
jbe
sahf
mov
or
dec
sahf
pop
in
xor
mov
fistps
dec
in
loop
dec
popa
mov
in
lods
jmp
loop
and
xchg
popf
push
cmpsl
fidivrs
call
rcrl
int3
and
sub
arpl
out
flds
aas
jne
cmp
jae
sub
test
push
enter
fildl
lret
fstl
test
mov
into
push
lahf
cmp
mov
sbb
xchg
add
and
jbe
or
jns
cs
push
test
mov
pop
dec
xchg
leave
ja
cli
fbstp
push
movsb
jmp
mul
pop
mov
sub
add
jg
and
outsl
sahf
es
imul
and
call
push
repnz
and
es
enter
cmc
rorl
test
inc
sbb
jnp
lret
in
inc
aad
arpl
inc
in
dec
mov
sbb
inc
frstor
scas
mov
test
xchg
push
dec
xchg
jb
xchg
adc
dec
dec
negl
adc
xchg
and
sub
adc
jno
adc
xchg
xchg
cmpl
sahf
lds
shll
push
mov
dec
xchg
jns
test
mov
in
lds
loope
test
dec
xchg
cmp
cmp
bnd
dec
inc
clc
hlt
xchg
jbe
fsts
es
cmc
push
icebp
inc
mov
rcl
jb
outsb
jle
stos
or
daa
add
mov
and
mov
daa
adc
std
add
mov
clc
mov
mov
sub
mov
cmpsb
das
adc
icebp
andb
xchg
mov
push
es
push
mov
movsl
jp
lret
adc
lds
rcll
arpl
call
xlat
test
inc
scas
js
pop
lds
mov
mov
xor
mov
add
push
mov
aam
pop
xchg
mov
and
fldenv
sub
pop
adc
fcmovbe
out
push
ficompl
call
push
arpl
xchg
sub
in
mov
int3
roll
inc
testl
call
stc
mov
stc
cmc
sahf
test
mov
inc
and
mov
inc
fwait
cmovno
adc
orb
sahf
xchg
mov
push
push
les
scas
mov
jae
fdivl
or
shll
xchg
aas
mov
mov
sub
push
adc
xor
inc
arpl
les
scas
dec
or
les
or
das
add
enter
jp
jnp
sub
rcrb
daa
je
aad
pop
pop
movsl
sbb
jb
cmpsl
cmp
add
dec
fistpl
dec
int
test
fcmovnb
mov
push
jg
je
pop
je
cld
mov
icebp
jbe
jo
cmp
dec
mov
std
xor
cmp
add
sub
mov
aad
popl
adc
and
imul
mov
pop
mov
adc
xchg
cmp
ja
inc
jmp
mov
loop
lods
in
mov
in
and
mov
rol
xor
mov
sub
add
insl
xor
mov
lret
xor
jg
test
or
push
mov
out
test
add
or
hlt
adc
sete
mov
mov
bound
out
cvtps2pi
cmp
in
in
add
fadds
push
fsubs
mov
lret
fcomp
call
jge
or
cmp
xlat
std
imul
pop
add
push
out
mov
insb
mov
xlat
movntq
out
mov
cmp
sub
mov
imul
inc
call
insl
push
add
out
xchg
pop
nop
sbb
dec
mov
mov
call
bound
outsl
shl
frstor
lock
pusha
ret
mov
inc
ja
sahf
leave
or
jmp
lret
daa
js
pop
or
mov
fistps
shlb
and
ljmp
out
push
out
cmc
addr16
movsb
mov
movl
or
mov
repz
hlt
leave
sub
lock
push
jbe
mov
into
xchg
divb
sbb
imul
jmp
mov
xor
add
xchg
repz
out
sbb
jl
test
clc
push
lds
mov
rorl
fisttpl
mov
sbb
jp
xor
pop
enter
repz
sbb
mov
fildll
dec
push
in
sti
and
sahf
push
cld
cs
aam
adc
or
or
mov
sub
cltd
mov
xor
icebp
loope
inc
loopne
scas
mov
aad
pop
lret
add
push
or
out
out
mov
int3
push
cld
rcrb
gs
lds
pop
jmp
es
out
ljmp
imul
pop
mov
pop
das
fstpt
scas
das
rolb
xchg
xor
scas
jmp
xor
call
xchg
push
inc
cli
std
pop
mov
mov
shl
insl
outsl
hlt
sub
xor
int3
aaa
mov
adc
ret
mov
add
dec
ss
pop
scas
push
and
iret
aad
jmp
dec
inc
loope
out
ljmp
addb
lret
lods
mov
cld
push
add
je
push
cmpsb
leave
in
mov
adc
cltd
inc
in
leave
daa
cmp
push
adc
push
mov
mov
setbe
loopne
out
xchg
cmc
add
inc
lods
imul
xchg
mov
cmp
sub
lds
pusha
mov
mov
jecxz
testl
mov
pop
divb
xor
and
cmp
test
jbe
adc
cmp
jno
push
cmp
in
mov
push
inc
std
repnz
pop
mov
leave
adc
push
out
jne
mov
addb
repnz
add
jno
push
mov
xor
and
push
mov
mov
mov
and
push
outsl
test
imul
enter
mulb
es
or
testb
pop
sbb
adc
out
sub
sbbb
lea
arpl
imul
mov
bound
ljmp
arpl
mov
mov
mov
jbe
pop
and
in
cs
xchg
and
ljmp
sub
push
and
mov
aam
or
cmc
xchg
jle
call
jmp
frstor
pop
sbb
popa
int
push
pushf
into
data16
adc
outsb
fs
xor
scas
bound
cmp
scas
nop
out
add
xchg
adc
loope
adc
xchg
in
fcmove
aaa
out
arpl
nop
push
mov
aad
ja
dec
push
sbb
lock
xor
cmp
xor
adc
bnd
xlat
sar
sub
lock
inc
stc
aas
loopne
mov
xor
pushf
mov
dec
in
clc
arpl
mov
movsl
fadd
cmp
int3
lds
mov
test
sarb
fbld
and
call
ja
mov
mov
cwtl
adc
jo
cmp
xor
jns
pop
jae
adc
add
adc
pop
rorl
in
mov
add
xlat
loope
push
test
mov
cmp
mov
sub
push
dec
jmp
je
and
mov
sub
push
dec
ss
inc
test
jmp
loop
jo
add
aaa
stos
mov
sub
pusha
cmpl
jecxz
imul
fwait
mov
dec
std
imul
xchg
add
xchg
mov
dec
in
loop
loopne
lods
and
orl
mov
xchg
gs
fdivrs
int
or
jmp
div
cwtl
incl
cmp
ja
mov
cmp
dec
test
sub
dec
loope
mov
loop
enter
fs
pop
jns
jp
adcb
adc
mov
jle
mov
or
mov
ss
aad
adc
xchg
idivl
xchg
push
dec
xchg
mov
xor
sbb
cmp
jg
lret
adc
sbb
inc
xchg
mov
adc
pop
xchg
xor
mov
mov
cld
fmull
scas
shlb
hlt
jnp
adc
aam
les
inc
shrb
sahf
rol
iret
lds
sti
shlb
mov
andb
inc
clc
out
pop
mov
push
es
pop
or
das
mov
jl
jg
pop
push
bound
xchg
insb
shrl
test
mov
test
es
rol
jge
les
iret
lret
out
push
ds
ret
decl
fstpt
into
in
push
es
arpl
hlt
cmp
jnp
and
std
and
sbbb
push
bnd
stos
sub
dec
mov
mov
push
xchg
repz
shr
pop
and
ret
jle
shlb
cltd
pop
ror
pop
in
imul
dec
enter
enter
inc
push
out
mov
test
int3
cltd
addr16
fisubl
jge
mov
cwtl
out
and
call
mov
pop
sbb
hlt
fcomps
int3
ja
sub
or
xor
xchg
add
insl
div
sbb
movsb
fisttpl
mov
cli
push
push
sbb
enter
repz
push
fisubs
out
mov
pop
inc
push
mov
in
in
call
std
xchg
shr
loop
cmpsb
sub
shlb
cmpl
cmp
push
loop
test
lahf
sbb
pop
lock
fs
push
xchg
mov
jmp
inc
push
into
stos
mov
orb
shll
mov
xchg
add
sub
mov
and
mov
and
inc
imul
mov
push
hlt
jnp
mov
int3
pop
fildll
scas
stos
stos
aas
addr16
sub
fstpl
inc
mov
lahf
fidivl
es
mov
pusha
add
dec
sbb
fs
sti
cwtl
push
fdivrs
arpl
jmp
lock
and
mov
cmp
lret
mov
andb
cs
push
ds
dec
xchg
add
out
cmp
inc
jo
inc
aas
rcrb
lar
inc
add
jl
jae
test
inc
sub
mov
jge
push
movl
es
add
leave
xchg
mov
and
aas
arpl
dec
outsb
test
out
ret
loopne
pop
jg
loopne
int
jmp
jle
and
xchg
cmp
loope
jg
xchg
push
sbb
lahf
push
shr
aas
xor
movsl
jmp
hlt
or
leave
dec
lcall
add
out
add
add
xor
out
lahf
fnstsw
inc
jg
setne
cmovnp
add
ss
lea
push
add
leave
dec
add
pushf
movsl
adc
arpl
pusha
out
pop
imul
xor
out
cmp
test
mov
insl
cmpsb
add
mov
mov
or
lods
sub
nop
mov
add
andb
loope
adc
push
add
ret
sub
jl
mov
rolb
imul
pop
loope
add
out
mov
cs
ss
inc
sbb
mov
mov
inc
imul
les
icebp
loopne
cmp
das
pop
cmp
xor
scas
add
sbb
adc
add
mov
adc
xchg
rclb
cs
mov
xchg
push
mov
int3
adc
cmp
xor
loope
mov
mov
cmp
add
cmp
add
cmp
mov
inc
and
sub
mov
mov
mov
push
pop
push
push
mov
imul
cmp
pop
jo
pop
out
push
push
cmp
ds
and
cld
sbb
movsb
cmp
fnstenv
and
jae
leave
push
sbb
mov
pop
lret
cmpsl
cmp
enter
rclb
cld
orl
xchg
push
pop
rolb
insl
fxch
outsl
cmp
es
push
daa
pop
lret
fcomi
fimull
inc
out
jle
das
ss
mov
les
out
stos
add
mov
repz
in
lods
orl
jbe
pop
mov
mov
sbb
orb
xor
mov
cltd
ljmp
decl
push
fdivrs
add
or
lahf
into
stc
xor
shlb
mov
fs
lcall
fistpll
pop
lods
jo
shll
outsb
cmp
add
aaa
xchg
ss
sub
mov
test
add
add
xchg
dec
shrl
addl
adc
test
cmp
sub
adc
shl
sub
aam
out
test
fdivrl
mov
nop
add
aam
mov
dec
xchg
cmp
jmp
sbb
mov
pop
mov
aas
xor
xchg
sub
sbbb
int3
cld
xchg
cs
sbbl
stos
lds
push
push
loop
cmc
sbb
push
pop
mov
mov
ljmp
std
shll
push
and
adc
addr16
mov
mov
clc
pop
cmp
adc
pusha
iret
mov
mov
add
lds
cmp
or
jg
call
insb
insb
mov
xor
jmp
push
pop
sbb
stos
in
outsl
fdivl
or
in
or
test
std
push
leave
pop
mov
cmp
cmp
dec
cli
movsl
xchg
enter
das
push
adc
push
ds
fs
test
and
mul
and
jge
inc
sub
rolb
shll
aad
loope
adc
sbb
pop
repz
rorl
lock
xor
jg
in
push
call
and
int
in
xor
mov
mov
and
mov
and
lds
xchg
js
jne
lret
xchg
xchg
add
loopne
mov
sub
mov
jno
subb
push
xor
lret
dec
shlb
mov
mov
pop
out
ss
test
dec
mov
pusha
cs
jno
jmp
push
pushf
ret
pop
enter
inc
cmp
mov
cmpsl
dec
mov
adc
mov
cwtl
pop
sbb
iret
mov
popa
sti
daa
mov
iret
ficoms
insl
leave
mov
out
xchg
push
ljmp
stos
ss
jns
test
lret
std
dec
add
sub
push
jno
loope
jae
mov
in
fcmovb
xor
xchg
xchg
dec
dec
add
sub
cmp
nop
lcall
sub
jle
mov
loope
sbb
or
push
push
out
sub
add
ja
lret
lcall
call
sahf
arpl
add
add
pop
cmc
add
dec
xor
ret
in
jns
mov
xor
cld
push
hlt
xlat
aam
loope
fiaddl
mov
pop
ljmp
adc
cmpsb
cmp
das
insl
xor
xor
cmp
sub
jbe
pop
push
mov
xor
in
es
push
add
sbb
add
and
pop
outsl
push
mov
sub
jecxz
test
mov
sbb
imul
sbb
push
into
pop
daa
jle
or
xor
xor
fs
jae
and
inc
das
fs
lret
xchg
mov
outsl
mov
mov
xor
push
rcr
dec
adc
rclb
cmp
into
mov
mov
add
push
push
data16
inc
xor
inc
scas
pop
out
das
fs
dec
cltd
popf
xchg
dec
mov
inc
lea
and
ret
outsb
lret
xchg
mov
cld
lods
pop
or
std
sub
push
cs
iret
test
mov
dec
jle
push
add
mov
lahf
lods
jmp
scas
inc
jge
std
or
cmp
nop
aaa
jmp
dec
mov
cmpsb
sahf
loope
adc
lds
or
rcl
mov
dec
pop
mov
xchg
imul
std
xchg
pop
sbb
xchg
adc
lea
sarl
pop
repnz
xor
mov
dec
push
or
xor
sbb
pop
pusha
push
das
mov
xor
js
pop
stc
cwtl
xchg
inc
add
pop
ret
and
out
xlat
lock
imul
arpl
push
inc
pop
test
sub
inc
lock
push
divl
outsb
enter
insl
imul
popa
pop
sbb
mov
pop
out
sub
pop
xor
stc
repz
lock
lds
mov
das
ret
jno
and
test
aas
inc
sbb
cmp
out
dec
jmp
or
nop
and
adc
jne
push
test
xchg
pop
dec
pop
cmpsl
xchg
jmp
icebp
aad
arpl
jnp
pop
dec
rcrl
jl
repnz
test
pop
std
push
adc
xchg
gs
jae
sub
add
repz
sub
test
xchg
pop
inc
fstl
cmpsl
in
imul
sub
mov
inc
shlb
cmp
out
insl
mov
rorb
cmp
inc
lret
xchg
push
arpl
ret
jmp
arpl
add
xchg
add
mov
pop
imul
cmc
cs
xchg
call
inc
xchg
cld
sbb
push
das
dec
push
inc
mov
xlat
paddb
jmp
int3
ljmp
in
call
test
mov
imul
inc
into
shlb
fistpll
sti
jo
popw
sub
mov
rorl
addr16
xchg
sahf
and
push
outsl
ss
or
dec
jl
loope
lods
jo
mov
cmp
mov
push
xchg
inc
pop
scas
je
or
xor
lcallw
mov
rorb
lods
dec
jnp
repz
xchg
lea
inc
adcb
and
lods
popf
xor
decb
xor
fdivl
jmp
hlt
fidivl
jbe
fsubrs
xlat
or
adc
fs
and
les
xor
sbb
push
jmp
pop
inc
arpl
out
iret
outsl
mov
dec
mov
lea
shlb
call
xchg
jno
aam
ljmp
dec
dec
sbb
out
mov
pop
js
insb
gs
into
or
pop
aad
mov
dec
xchg
xor
add
push
ss
sub
mov
fidivs
cmp
cmp
add
das
lret
inc
ret
outsl
into
test
sbb
inc
adc
cmpxchg
cmpsl
jb
out
xchg
setnp
or
rorl
xchg
les
add
invd
or
sbb
mov
ret
mov
fdivs
inc
adcl
outsl
lock
leave
mov
shrb
sub
push
ret
jp
das
mov
or
addr16
jmp
les
rcll
ror
aam
iret
adc
inc
push
pop
mov
test
add
inc
fsubrs
xchg
arpl
mov
dec
inc
mov
add
in
push
add
mov
xor
xchg
inc
adc
push
sub
adc
call
out
adc
das
fimull
vmwrite
repnz
lock
aaa
mov
mov
mov
mov
mov
mov
mov
mov
dec
loopne
sub
cld
out
mov
aad
xor
sbb
xor
and
sarl
mov
pop
sub
mov
xchg
mov
ja
dec
out
arpl
xor
sub
and
imul
popa
add
ret
inc
inc
repnz
mov
imul
mov
jnp
add
dec
adc
cmp
sub
pop
fstpl
cmp
roll
divl
movsl
lret
push
mov
insb
and
fwait
aam
imul
ss
sub
xor
mov
sub
push
mov
jns
inc
push
jbe
jmp
or
fbstp
push
sbb
ja
in
add
xchg
inc
std
push
stos
in
fimull
xchg
loopne
loope
cmp
lret
leave
mov
pop
or
adc
and
test
jg
outsb
mov
sarl
ret
inc
sub
std
adc
inc
rcl
mov
push
inc
imul
in
mov
push
push
shrb
clc
ret
xor
das
push
test
fimuls
stos
gs
inc
xor
sar
and
test
test
cmp
mov
adc
jge
xchg
push
pop
jmp
cwtl
jns
lret
outsb
stc
jg
lahf
jne
repnz
xchg
je
and
ficompl
push
pusha
insb
ss
cmpsb
imul
sbb
testl
sbb
adc
jno
push
pop
xlat
sbb
mov
call
cmp
rolb
lcall
dec
sub
repz
add
mov
add
mov
add
add
mov
sbb
cmp
adc
or
ss
or
cmp
jp
and
ret
push
pop
dec
ss
ljmp
pop
movb
addb
sub
push
icebp
invd
and
xchg
lea
sbb
arpl
es
xor
stos
adc
int
loop
push
shrb
shrl
pop
das
idivb
ret
in
inc
push
jecxz
xor
stc
call
push
push
mov
shlb
roll
push
pop
sub
push
and
xchg
insl
rolb
mov
mov
inc
inc
xor
sub
jne
xchg
dec
in
push
jno
sbb
scas
cmpsl
sub
xor
or
icebp
lahf
roll
in
and
add
jl
and
mov
rorl
dec
mov
mov
fildll
add
fsubrl
les
pop
scas
jno
mov
push
sbbl
inc
mov
jne
and
xchg
outsl
aaa
mov
icebp
xlat
pop
ss
ljmp
and
jbe
dec
xchg
cmpsb
cmp
sbb
andl
repnz
xchg
lea
cmpsb
out
das
jecxz
or
mov
xor
fcoms
fstpt
ja
xchg
jl
out
cs
sub
sbb
nop
daa
jb
xchg
add
lret
mov
adc
ss
mov
imul
push
adc
mov
inc
sbb
push
mov
xlat
outsl
cmp
or
mov
das
rorb
jmp
in
mov
mov
sub
imul
test
in
xlat
push
bound
adc
test
ficomps
out
in
notl
je
or
movsl
push
int
int
xchg
jae
das
jbe
lods
push
aaa
sarb
push
cli
xchg
push
or
jle
push
in
adc
fsubp
nop
addb
and
les
testl
sarb
cmp
mov
xchg
or
or
sarl
mov
adc
dec
sbb
adc
rolb
xchg
xor
xor
pop
filds
loope
cmp
das
fadd
jecxz
enter
out
xchg
leave
inc
xor
scas
pusha
sbb
adc
cld
gs
inc
jmp
push
xor
or
jle
sbb
or
mov
out
and
inc
clc
cvtps2pi
inc
jge
test
pop
xorb
jge
outsl
inc
mov
je
test
or
mov
popf
shlb
aas
insb
daa
mov
sbb
xchg
in
shlb
or
sub
xor
popf
push
lret
push
shrb
arpl
jmp
cs
jge
or
scas
ss
or
jae
out
sub
std
cs
je
xchg
add
xchg
jp
push
ret
aad
das
leave
mov
mov
mov
mov
out
sbb
stos
lret
add
pop
inc
inc
test
inc
jae
es
or
or
popa
cmp
lds
jne
enter
or
push
xchg
fistpl
mov
pop
jnp
pop
pushf
mov
outsl
out
test
sub
sub
sbb
jne
out
mov
pop
inc
repz
faddl
incb
xchg
cmpsl
dec
shlb
cmp
cmpsl
sbb
andb
xchg
add
cmp
lret
inc
sub
inc
pinsrw
mov
xor
mov
stos
jmp
sahf
add
push
mov
xlat
test
loop
pop
pop
leave
repz
mov
out
and
xchg
gs
lods
and
movsl
movsl
adc
pop
sbb
in
aaa
sub
add
mov
leave
pop
cmp
mov
inc
or
stos
xor
push
add
mov
scas
xor
bound
je
cs
ficompl
xchg
sbb
adc
sbb
outsl
mov
dec
jmp
jmp
inc
loop
lahf
sub
pop
mov
cmp
mov
std
daa
imul
xchg
and
stc
nop
sti
dec
xchg
xchg
iret
sub
jle
repz
adc
jge
cmp
aaa
stos
jmp
ret
cwtl
idiv
ja
popa
repz
cmp
movsl
xchg
dec
add
adc
push
dec
lcall
inc
in
movsl
sub
enter
or
mov
inc
cmp
shll
jns
xlat
xchg
hlt
mov
xchg
pop
inc
rclb
mov
xchg
rol
gs
lahf
test
inc
push
cmpsb
fnstsw
repnz
jl
pop
add
xor
aaa
dec
push
fbld
out
fdivr
shl
xchg
arpl
push
leave
imul
add
mov
jbe
imul
mov
jnp
mov
adc
repz
sahf
mov
sub
fcmovnu
mov
cmp
mov
shrb
mov
fwait
jecxz
xchg
fnstcw
rcr
bound
rcll
subb
sahf
lea
fwait
inc
mov
imul
aam
insl
inc
movsl
sub
pop
push
sub
adc
cld
addr16
adc
lock
jmp
rolb
into
dec
sub
add
adc
outsl
out
dec
loop
and
mov
mov
cmp
push
mov
pushf
cli
sub
rclb
imul
fldl2t
inc
xchg
xor
sbb
mov
fwait
cmp
scas
jns
xchg
xor
arpl
sub
sub
aaa
xor
sbb
sub
outsl
fs
leave
stc
xor
stos
mov
adc
out
pop
fsubr
sahf
aam
inc
lods
or
inc
call
ret
jl
loopne
leave
into
std
int3
mov
ds
in
cs
popf
out
rclb
adc
in
mulb
or
push
cmp
jo
mov
push
out
int3
or
push
imul
xchg
xlat
xchg
add
data16
cmp
rolb
mov
outsl
inc
mov
in
pop
sbb
adc
lds
cmpsb
dec
fisubrl
xor
pop
or
das
shrl
aad
jmp
cli
xor
dec
pop
cld
add
cmpsl
cmp
pop
clc
rorl
js
ffreep
cs
jmp
cld
fst
cltd
mov
popf
push
rcrl
add
push
xor
jnp
lock
es
movsl
mov
shll
ja
mov
out
mov
in
movsl
scas
sbbl
push
ja
sbb
mov
test
imul
int
lods
dec
stos
xchg
adc
incl
roll
xchg
cmp
les
inc
call
cltd
add
push
inc
jmp
xchg
ret
sub
cmc
mov
ret
jge
mov
push
stc
sub
enter
orb
dec
pop
loope
fcmovnbe
jge
es
jecxz
adc
test
cmp
cmpsb
jle
mov
popa
jp
xchg
push
mov
cs
push
jns
mov
aaa
es
rep
pop
sub
into
inc
lock
orb
es
scas
sti
inc
rorb
popa
xchg
ja
mov
sub
stos
mov
mov
jns
cld
push
adc
xor
popf
jp
out
mov
mov
inc
dec
popf
aam
cmp
imul
push
les
mov
lods
add
stos
sbb
andb
add
sbb
adc
cmp
mov
arpl
fwait
cmc
aam
dec
xchg
push
shrb
clc
sub
rcr
push
gs
movsb
inc
popf
add
sar
rclb
and
popf
imul
cmp
lret
imul
cmc
cmp
int
int
sbb
shl
out
push
lds
mov
mov
out
push
mov
outsb
shlb
mov
add
dec
adcb
xlat
outsl
pop
cmp
rcr
stos
xchg
out
mov
repz
ss
jecxz
adc
movsb
cmp
fisubrl
ret
mov
addl
sbb
outsb
aas
mov
ret
out
mov
out
mov
adc
lods
jno
mov
enter
push
jl
jno
fdivrl
imul
stc
cmp
cmc
ret
xor
push
hlt
shrb
popf
dec
push
fimull
or
iret
inc
data16
loop
push
push
movsb
push
stos
adc
addb
jo
arpl
ds
inc
adc
pop
and
mov
icebp
test
test
mov
push
xor
sbb
cs
push
repz
fsubs
shll
lds
adc
out
mov
mov
cld
add
mov
popa
gs
mov
mov
xchg
mov
lret
test
jecxz
sahf
add
cmpsl
cltd
ljmp
imul
mov
fiaddl
jecxz
lahf
ret
mov
sbbb
sbb
xchg
jae
lds
or
or
pushf
js
cs
aam
mov
loop
imulb
mull
pushf
stc
inc
add
jo
adc
les
faddl
ja
xorl
mov
inc
sar
test
xlat
bound
nop
adc
and
xchg
loopne
adc
aam
add
sub
xor
cmp
push
adc
sbb
adc
xchg
clc
lock
iret
sbb
jnp
xor
popf
sbb
xor
cmp
scas
adc
push
loop
fdivs
les
pop
push
add
or
jne
fs
xor
inc
push
push
inc
xor
aas
mov
data16
xor
xchg
ficoml
iret
into
fwait
int3
mov
jmp
nop
push
jl
adc
inc
sbb
sbbb
mov
mov
repz
sbb
xor
or
cld
sbb
std
leave
adc
and
or
clc
int
stos
sbb
clc
divl
jmp
lods
lods
cmp
dec
inc
jg
pop
add
sahf
dec
mov
mov
andb
std
sbb
fldl
aam
mov
push
dec
je
jbe
in
jne
loop
push
mov
mov
cmp
int3
add
push
or
pop
fiadds
sbb
imul
sub
rolb
cmp
dec
aam
jmp
xor
inc
jl
pop
xchg
stos
mov
add
sbb
mov
std
sbb
jp
lahf
shrl
test
movsl
sbb
loop
xlat
mov
mov
in
jmp
iret
dec
xchg
xchg
lods
sbb
push
fsub
dec
lds
dec
les
movsb
xchg
es
lods
inc
movsl
xchg
nop
dec
mov
pop
xchg
push
insl
lea
aad
pop
pop
cwtl
mov
out
jl
lods
or
cmc
inc
rclb
jl
mov
loope
orl
mov
stos
mov
pop
inc
ds
jge
ja
push
mov
mov
push
js
cs
mov
lock
mov
sbb
push
out
les
jo
into
dec
arpl
loope
frndint
and
std
hlt
mov
pop
xorb
gs
sahf
cmc
adc
lds
jecxz
sub
dec
xor
push
adc
xor
add
scas
xlat
cs
jl
pushf
pop
pop
aaa
cmpsb
lret
and
stos
jl
mov
jne
out
scas
addr16
test
or
repz
ds
sub
cmp
sub
mov
int
cmp
pop
lahf
dec
jle
pusha
int
inc
inc
mov
rclb
or
pop
and
inc
adc
icebp
hlt
clc
sub
xor
cmpsl
or
pop
xchg
popa
movsb
int
ds
mov
mov
out
mov
hlt
aam
cld
pusha
or
and
mov
or
movsl
mov
data16
cmp
pop
les
or
lahf
jge
rcl
jecxz
and
pusha
popa
mov
mov
out
clc
add
jne
repz
int
adc
cmp
push
aam
fcompl
xor
mov
out
sub
mov
loop
pop
in
fmuls
dec
sub
add
xchg
imulb
je
lds
sub
ljmp
inc
mov
outsl
push
and
adc
cmpsb
inc
push
push
xchg
jo
mov
mov
mov
cld
push
mov
call
xchg
inc
dec
or
and
or
inc
out
xchg
jg
add
out
mov
adc
test
adc
popa
mov
or
sub
pusha
mov
arpl
mov
ret
lret
mov
push
outsb
je
icebp
pop
jg
cmp
fsubl
adc
ds
stos
repnz
cmc
scas
inc
and
sbb
mov
test
add
cli
or
add
cli
pmaxub
clc
push
fimuls
clc
or
fisubrs
sbb
shll
int
cmpsb
push
call
xlat
jp
les
xor
lock
call
imul
ljmp
sbb
repnz
inc
pop
mov
loopne
ds
or
push
jo
push
imul
xor
adc
lock
xchg
push
jmp
mov
adc
leave
outsl
adc
arpl
xorl
jno
out
sub
ret
inc
inc
pop
xlat
inc
dec
xchg
mov
cmpsb
add
inc
int3
jmp
pop
sub
or
xchg
in
popf
arpl
push
mov
pmaddwd
repnz
aam
ss
iret
insl
xor
jge
int3
adc
cltd
push
fisubrs
sti
mov
push
xor
ret
sub
sbb
fdivrl
aaa
bound
test
pop
sub
sbb
mov
std
fs
repnz
inc
dec
push
insb
mov
test
ds
daa
pushf
aaa
inc
push
pop
fisubs
dec
loop
or
outsb
inc
sbb
push
pop
jge
cmp
push
in
jmp
push
dec
inc
in
xchg
mov
sbb
sahf
cmp
sahf
xchg
pop
pop
xor
popf
bound
xor
aam
je
xlat
cmpb
pop
add
scas
sub
leave
jmp
movsl
rcr
repz
lret
rclb
int3
shr
popf
cs
push
adc
stos
inc
insl
add
lock
aam
out
xlat
add
sahf
mov
jne
cmpsl
les
cmp
aam
push
rorb
add
cmp
push
push
mov
mov
inc
orl
fdivl
mov
mov
mov
mov
cs
pop
test
iret
mov
lods
mov
rclb
mov
push
dec
jg
test
jae
jns
stos
pop
test
and
and
jbe
ret
dec
xchg
roll
sahf
movsl
mov
or
mov
xchg
inc
sbb
repz
and
xlat
enter
add
jnp
xchg
loop
mov
fnstcw
into
add
mov
fnstcw
add
xlat
jns
repnz
and
sub
sar
inc
loope
mov
ja
add
scas
daa
outsb
push
imul
cmp
cmpsb
imulb
sub
scas
mov
push
scas
cmp
mov
test
add
push
imul
scas
push
adc
xor
rorb
mov
dec
inc
fcomi
push
sarb
stc
fdivr
orl
jecxz
hlt
inc
movl
sbb
push
adc
mov
sub
inc
je
cmp
jge
adc
loope
dec
sbb
push
mov
ljmp
adc
push
jnp
inc
xchg
movsb
sahf
jnp
imul
scas
adc
add
icebp
mov
subb
jle
mov
adc
int
stc
in
push
pop
call
iret
push
jns
lret
mov
in
jecxz
cmp
iret
push
icebp
leave
out
cmp
mov
cli
sbb
sub
sub
dec
iret
xchg
shr
rcll
or
call
mov
stos
jmp
jmp
cmp
jnp
sub
cmp
and
lods
sbb
sub
loope
out
arpl
testl
cmpb
popa
cltd
adc
jb
cs
inc
add
out
lret
jle
sub
pop
pop
mov
repz
cld
out
adc
cmc
xchg
addr16
or
and
fnstcw
pusha
inc
mov
cmp
jp
nop
xchg
data16
leave
adc
jbe
xor
ljmp
outsl
mov
insl
pop
mov
pop
xchg
fcom
inc
leave
ret
std
mov
xor
pop
sbb
nop
aad
popa
fstpl
adc
sahf
out
mov
inc
jg
jbe
aad
int
jno
btr
sbb
into
es
jnp
dec
lret
outsb
iret
adc
push
cltd
mov
ja
xchg
test
ss
aad
cmp
in
xlat
int3
jno
sub
aad
push
daa
aam
xchg
add
test
cwtl
into
xor
cmp
push
cmp
repz
xor
rcll
add
aas
pop
fistl
pop
mov
mov
out
sti
inc
add
adc
adc
incb
cmp
mov
loopne
cmc
fcom
mov
pusha
inc
sub
inc
adc
hlt
cmp
or
subb
cs
bound
mov
xchg
jmp
mov
push
xchg
mov
or
pop
inc
jo
sub
push
repz
dec
mov
lea
push
xor
cmp
lahf
dec
add
dec
fwait
xchg
into
inc
add
pop
adc
shlb
shll
xchg
in
mov
orb
rorb
pop
pop
sbb
scas
stos
sub
adc
mov
push
jb
dec
inc
push
jl
repnz
jmp
ljmp
sbb
clc
insb
das
xor
mov
jp
jmp
cmp
in
sub
call
imul
imul
es
adc
mov
adc
outsl
les
clc
xlat
lret
sub
inc
cmc
push
filds
flds
mov
xchg
arpl
loop
xchg
ficoms
loopne
std
add
shl
dec
sub
call
sub
mov
mov
adc
mov
adc
add
out
sbb
call
sbb
pop
mov
mov
dec
int
fdivl
cwtl
outsl
adc
mov
sub
test
mov
imul
or
xchg
and
mov
mov
fs
loope
out
inc
lods
lahf
enter
jbe
test
lret
adc
push
pusha
out
in
shl
js
mov
cmp
in
movsl
daa
scas
jp
jg
js
fstp
sbb
mov
data16
mov
pushf
in
xadd
in
mov
sbb
scas
aad
arpl
inc
or
mov
dec
xor
loope
outsb
add
pushf
cmp
and
xchg
repz
movsb
mov
ja
ds
xor
insb
or
mov
test
icebp
sahf
test
dec
gs
inc
mov
pop
or
loope
bound
daa
push
adc
rcrb
aam
add
lret
lcall
push
bound
push
mov
cmc
sub
or
ds
mov
and
stos
bound
shrb
jg
nop
push
sbb
inc
mov
adc
jmp
xchg
push
ret
call
adc
xchg
in
ror
mov
data16
sti
xchg
sbb
xor
mov
xcrypt-cfb
cmpsl
popa
roll
jmp
adc
jle
out
add
push
or
aad
popf
jae
mov
adc
lret
mov
int3
adc
jo
dec
mov
mov
fisubrl
jo
scas
arpl
sub
xchg
mov
movsl
mov
data16
xor
scas
dec
int
mov
dec
inc
sti
aaa
cs
pop
pusha
or
or
cld
jp
adc
push
fmul
add
xchg
faddp
xchg
ljmp
movsl
fldcw
sub
hlt
xchg
xor
xchg
adc
addr16
xor
xchg
cmp
aad
outsl
sbb
mov
je
dec
xchg
xchg
mov
xlat
push
rclb
jl
push
sbb
add
inc
adc
jbe
sub
and
shlb
inc
push
xchg
jno
rol
push
aad
pop
or
or
sar
fistpl
xchg
lods
shr
and
dec
test
ss
arpl
loop
decb
sbb
hlt
jbe
stc
cmpsb
mov
out
out
cmp
push
mov
dec
cs
in
push
add
test
xor
pop
and
rclb
push
xchg
xchg
test
leave
dec
outsl
sbb
push
mov
loope
mov
add
and
lret
daa
ss
cmp
add
xor
add
sub
add
mov
mov
ds
adc
dec
leave
mov
mov
stc
cmp
in
into
jg
mov
gs
push
or
push
fwait
sti
cmp
mov
mov
lret
outsl
fmuls
xor
adc
addr16
hlt
fisubs
cmpsl
pop
ja
push
test
mov
sbb
xlat
stos
stc
mov
out
jmp
es
or
jecxz
mov
and
push
sub
mov
pop
push
mov
add
push
mov
scas
les
rorb
aas
imul
out
or
lock
jle
and
mov
loope
or
stos
arpl
fucomp
fsubrl
fisttps
fwait
mulb
and
jmp
adc
imul
out
mov
add
cmp
sbb
jno
shll
sub
imul
movsl
nop
push
fistl
xchg
sub
clc
add
pop
adc
sbb
jnp
ret
fwait
cld
inc
sub
leave
sbb
mov
das
aaa
jmp
mov
std
pop
into
roll
or
das
inc
shl
popa
addr16
sub
adc
adc
sub
aaa
push
les
outsb
cmp
pop
push
dec
jne
js
pop
mov
stc
ja
pop
movsb
roll
inc
jge
addr16
fistpl
icebp
icebp
xor
out
bound
add
insb
inc
insb
mov
dec
iret
bound
iret
mov
sbb
roll
shlb
les
pusha
stc
push
jecxz
xchg
out
les
dec
inc
pop
cmp
pusha
pusha
outsl
xor
cmp
lods
into
pop
imul
or
mov
gs
fs
cmp
lods
sti
mov
out
and
sarl
sbb
aas
roll
or
mov
sub
push
fistps
arpl
xchg
adc
inc
jmp
cmp
jecxz
out
repnz
cmp
imul
popf
lahf
shl
lret
or
add
dec
inc
or
pushf
mov
adc
or
daa
out
mov
xchg
xchg
ljmp
filds
fdivl
gs
cmpsl
loop
pop
jae
and
inc
mov
dec
out
and
cmp
mov
icebp
and
testb
xor
cmp
dec
orl
lcall
je
sub
les
fnsave
sahf
test
inc
fcomip
inc
dec
jno
mov
lret
jg
push
outsb
test
cs
xchg
mov
jecxz
mov
das
pop
mov
xorb
rol
negl
das
and
cld
sbb
movsb
es
and
adc
jne,pn
xchg
enter
aas
and
jmp
xchg
test
add
inc
sub
lods
outsb
shl
into
add
faddl
sub
inc
pusha
push
repnz
add
rcrl
sbbb
dec
inc
int3
jp
xor
mov
imul
shrl
mov
xchg
aaa
cmp
bound
mov
mov
push
mov
push
in
mov
lret
ret
cmp
dec
xchg
orl
mov
jbe
aam
add
and
cmp
xor
ja
daa
leave
mov
cs
push
lds
and
inc
es
jmp
add
aaa
in
add
addr16
xor
jo
jl
cli
jle
imul
lea
scas
xchg
xchg
mov
arpl
jp
out
movsl
sti
sbb
pop
xchg
xor
in
jno
ss
cld
aas
dec
ret
mov
dec
push
leave
mov
inc
dec
push
fildl
lret
push
out
loope
fwait
test
xchg
inc
insl
and
ljmp
pop
inc
cwtl
aad
adc
popf
xor
jg
int3
inc
sbb
mov
shll
icebp
xchg
push
jg
jle
mov
jecxz
aas
movsb
dec
leave
in
imul
xor
pop
test
clc
aam
xor
pop
std
cs
fs
add
mov
and
xor
js
or
cmp
loope
lahf
mov
or
gs
lcall
fldenv
xchg
hlt
dec
jb
add
dec
daa
xchg
adc
push
jnp
dec
out
mov
cmpsl
mov
jbe
scas
ljmp
sub
jmp
push
call
pcmpeqw
ss
jg
sbb
test
idivl
inc
dec
sub
inc
fdivp
insb
in
sbb
pop
pop
pop
or
xchg
jne
hlt
sbb
sub
pop
pusha
cmc
test
lock
xchg
aaa
gs
xor
mov
cmc
test
sub
andl
push
mov
inc
adc
rclb
imul
sbb
pop
xlat
movsb
mov
dec
daa
int
xor
push
inc
or
lahf
lret
pop
push
pop
fcmovu
push
mov
dec
ja
les
arpl
in
subb
fwait
enter
inc
in
cmp
add
inc
test
sti
insb
xchg
pop
cmpsb
mov
mov
push
repnz
imul
pop
xchg
inc
cmp
in
fsubrl
jbe
lock
push
mov
leave
xchg
xchg
and
inc
inc
xor
add
repnz
or
ret
jno
test
je
cld
shll
clc
xor
mov
cmp
mov
mov
jge
mov
mov
xor
popf
or
ret
sarl
stos
mov
and
shl
xchg
popa
mov
mov
outsl
arpl
jnp
sti
jb
inc
ret
push
xor
dec
imull
inc
setbe
sbb
jecxz
jnp
mov
or
cmp
or
popl
out
in
mov
xor
fmul
dec
cmc
lahf
dec
call
lret
mov
in
or
cmp
imul
imul
fidivs
xchg
loop
rclb
test
test
mov
inc
sbb
sbb
cmp
sti
mov
pushf
shlb
and
in
jg
outsb
out
out
pusha
lret
int
std
iret
out
push
inc
or
adcl
aam
lods
aad
push
test
arpl
mov
aas
jle
lcall
sbb
mov
out
mov
lret
rorl
aas
iret
sbb
push
lds
mov
pop
dec
push
mov
adc
test
adc
mull
daa
or
ret
in
in
sbb
pop
out
arpl
clc
mov
mov
das
repz
inc
adc
sbb
or
mov
jns
lret
es
inc
add
mov
call
imul
mov
fdivrs
movsb
ret
xchg
cmpsb
push
and
cs
and
insl
loop
jnp
nop
ss
cmc
cmp
in
mov
das
hlt
xlat
ja
insl
mov
or
jge
add
and
and
ficompl
mov
add
add
scas
push
cmpsl
mov
in
mov
mov
lahf
repnz
mov
mov
push
mov
imul
or
popl
pop
stc
das
pop
out
fnstcw
jg
adc
loopne
stos
popa
repz
xchg
pop
aam
mov
lods
add
popf
dec
add
insl
push
cld
jnp
leave
ret
imul
loope
xchg
fcoms
mov
push
or
dec
push
ds
and
adc
xor
cmp
inc
shll
push
ret
cmp
mov
aaa
pop
popa
add
jmp
fidivs
fadd
inc
xor
aad
push
loop
cmp
ss
dec
lock
jl
out
into
cmp
dec
jnp
mov
rorl
mov
pop
pusha
int3
lea
or
jmp
lcall
pop
ret
rclb
xor
clc
or
int3
mov
and
add
and
into
sahf
xor
fmuls
fdivs
jo
decb
fldt
mov
jnp
xlat
jmp
cmp
hlt
pop
add
sub
or
mov
mov
sub
sarb
sti
mov
movl
fwait
lea
push
loop
notl
shll
iret
sbb
sbb
insb
test
lcall
testb
cmpsl
adc
jnp
jo
pop
stos
sub
test
add
and
pop
cmpsl
mov
jle
rorl
or
jbe
bound
mov
das
jle
int3
mov
mov
xor
push
and
orl
sahf
xor
loopne
int
pop
or
inc
adc
cmpb
test
scas
or
cmp
push
fwait
jo
xchg
mov
pop
je
insb
mov
inc
cmp
mov
pop
jecxz
jno
xchg
cmpsl
xchg
in
jno
push
lahf
add
mov
fldcw
dec
and
mov
pop
nop
mov
outsl
ret
push
push
sub
pop
xchg
call
outsl
dec
inc
lods
sbb
out
dec
xchg
fdivl
stos
sub
clc
in
adc
or
fcoms
mov
cmp
and
lea
and
sbb
mov
fnstenv
fimull
outsb
js
jae
sbb
xchg
icebp
push
testl
outsb
jl
pop
inc
add
pop
lret
adc
test
cmpsl
fdivs
ficompl
loope
sub
and
leave
mov
iret
sub
xchg
hlt
push
movsb
xchg
fcompl
jge
test
jge
ret
repnz
pusha
xchg
mov
jecxz
xchg
cmpsb
into
xlat
cld
out
dec
inc
sub
push
xchg
and
and
out
dec
jbe
dec
and
cmpsl
fwait
in
jno
push
fwait
add
mov
add
mov
fnstcw
mov
lret
nop
fldt
pop
xorb
push
sub
dec
xchg
ja
inc
cld
jg
inc
fcompl
xchg
aam
mul
int3
dec
out
cmp
and
lea
fwait
dec
in
or
ret
pop
cmp
scas
ss
or
jno,pn
push
es
cmp
sbb
sub
and
xchg
sti
std
fists
mov
push
sbb
xchg
dec
mull
inc
dec
pop
cmp
push
lea
mov
xchg
mov
flds
ja
js
and
cmpsb
jno
push
sahf
pop
mov
adcl
jnp
inc
xchg
add
cmp
or
rcrb
xchg
enter
rorb
clc
and
lea
aaa
push
pop
push
cs
outsb
pop
cmp
lea
fisttpl
jecxz
jecxz
fcmovnu
jmp
shrl
or
sub
jp
pop
push
push
push
jl
sbbl
xchg
mov
mov
out
dec
stos
cmp
pop
in
jno
push
push
add
mov
fnstenv
inc
outsb
js
and
scas
dec
aam
imulb
adc
enter
shl
out
dec
shlb
in
scas
into
lret
in
xlat
sbb
movsb
sti
fxch
outsb
js
and
scas
and
add
sbb
push
adc
xor
push
fcoml
sub
ljmp
inc
sbb
xchg
jl
pop
out
dec
push
cmp
lea
inc
push
jnp
dec
mov
fsts
imul
and
fistl
pop
test
addl
pop
and
xchg
ud0
cld
pop
imul
or
call
daa
push
pop
sub
aas
paddb
dec
inc
in
dec
and
add
xchg
lret
push
cld
xlat
dec
inc
or
and
cmp
cmp
and
lea
clc
in
jno
push
mov
mov
fsts
data16
lret
je
push
outsb
lock
cld
mov
mov
out
dec
stos
cmp
pop
in
jno
push
push
add
mov
and
jno
push
negb
int3
mov
sub
sbb
sub
and
xchg
sub
adc
xor
call
cs
push
mov
out
dec
cmp
lea
jecxz
fldt
adc
xor
add
push
jp
pop
mov
mov
mov
pushf
sub
aaa
xchg
nop
loopne
into
adc
out
les
cmpsb
mov
mov
mov
cld
xor
inc
add
loop
jo
mov
test
adcl
sbb
or
pop
sbb
mov
mov
stc
mov
cmpsb
xchg
push
rol
out
cli
or
addl
lcall
or
cmc
xchg
in
je
popa
ds
inc
cmp
sbb
add
call
shlb
les
cmp
insb
inc
mov
pop
stc
pushaw
mov
dec
rolb
push
fsubrs
dec
sarl
dec
addr16
mov
xchg
jb
dec
lock
cmp
cs
sbb
fcmovu
pusha
lea
xchg
xchg
add
mov
mov
jge
push
ss
test
push
fstl
clc
fcompl
dec
sbb
cli
das
movsb
dec
out
or
iret
push
or
xor
stc
std
insb
xchg
lock
jne
push
and
stos
icebp
xlat
dec
pop
es
mov
clc
inc
push
lret
sbbb
xchg
lods
loopne
pop
lea
leave
sti
loope
jno
pop
cld
pop
adc
mov
xchg
int3
scas
fcmovbe
xor
xor
sbb
lods
into
or
movsl
addr16
loop
dec
cmpsb
jo
push
cltd
out
push
fcmovne
cmp
xchg
call
daa
mov
out
aaa
dec
mov
movsl
ja
dec
mov
add
sti
fwait
or
jge
dec
fcomip
or
xchg
roll
enter
adc
adc
and
and
dec
jmp
pop
sbb
push
adc
xor
push
mov
jg
inc
or
into
push
icebp
add
mov
fxch
outsb
js
and
scas
aas
lret
sbb
cmp
pop
push
mov
pop
add
push
loopne
out
fcos
in
xlat
dec
inc
or
xchg
or
sub
or
and
lea
in
push
xlat
add
mov
fld1
fcmovu
outsb
js
and
scas
sbb
jno
push
sbb
and
push
shrb
and
xchg
stc
inc
cld
testl
sub
or
sub
and
cmpsl
mov
mov
mov
mov
mov
outsb
js
and
jge
pop
fstpt
pop
push
jns
inc
mov
mov
sub
jmp
sbb
xchg
dec
imull
dec
dec
push
lea
lods
push
xchg
add
mov
fldcw
pop
and
pop
lret
jl
pop
jno
push
pop
pop
pusha
mov
add
push
subb
and
cld
mov
inc
imul
out
dec
dec
cmp
mov
cmpsl
dec
in
jno
push
ja
dec
mov
jnp
js
and
fstpt
pop
xorb
pusha
sub
xchg
pop
jmp
dec
pop
sbb
push
xchg
cmp
lock
xor
dec
lock
inc
mov
dec
xor
add
sub
cltd
jg
dec
arpl
scas
aas
popa
out
push
or
add
sub
or
stos
aaa
int
shr
sbb
cmc
daa
out
jecxz
push
sub
shrb
jecxz
out
xchg
mov
fildll
add
jbe
sub
icebp
jecxz
inc
pusha
shl
jmp
sbb
call
shlb
repz
add
lcall
lret
insb
mov
xchg
pop
cmp
ficompl
adc
inc
mov
push
add
gs
dec
xchg
xor
mov
lret
mov
cs
mov
mov
mov
pop
cmpsl
inc
pop
mov
add
or
inc
xchg
pop
and
inc
cmp
lds
add
mov
xchg
int
int
dec
inc
in
jg
inc
lock
lret
and
pop
jo
push
fisubs
jle
rcl
test
jo
dec
jne
pop
pop
icebp
cmp
xchg
adc
add
test
inc
leave
jo
dec
scas
jle
cmp
sub
jns
data16
jp
fdivr
out
ljmp
imul
jae
push
notl
jno
push
loope
jb
cwtl
ds
leave
and
add
mov
es
out
test
jle
jo
arpl
mov
sub
xlat
or
xchg
lahf
pushf
cs
cwtl
pop
and
inc
loope
test
mov
shl
lahf
fcoms
stos
ret
cmp
inc
test
cltd
jae
call
mov
call
mov
mov
push
mov
notl
aad
mul
xor
dec
mov
jb
cmc
fisttps
fadds
mov
sahf
outsl
jl
mov
jle
inc
sahf
pop
push
aam
pop
dec
jp
xchg
testl
dec
stos
scas
es
mov
xlat
addr16
les
movsl
jnp
jne
or
push
xchg
dec
push
mov
daa
mov
test
test
into
mov
push
call
mov
loopne
stc
xchg
inc
inc
jb
test
mov
mov
stos
fiaddl
fdivp
fwait
iret
fists
jo
adc
loopne
outsl
adc
jb
sti
lods
loop
cmp
jb
or
dec
stc
mov
sti
shll
inc
jnp
xorl
pop
push
jbe
mov
or
vpmacssdqh
out
in
gs
cmc
lret
jl
jo
push
cmp
inc
add
ja
rorb
jl
loope
out
mov
jecxz
out
add
test
xchg
or
mov
aam
mov
xchg
movsb
fistl
cmpsl
lret
push
xchg
pop
ret
outsl
mov
subl
movsl
stos
es
adcl
scas
ljmp
mov
inc
pop
push
sbb
cmpsl
cwtl
outsl
sub
nop
out
jbe
leave
add
into
movsl
sbb
xchg
movsl
nop
jecxz
rcll
cwtl
ret
inc
xorl
js
sbb
std
mov
ja
shlb
sub
imul
nop
sti
lcall
mov
xchg
push
mov
lret
pop
push
push
shll
xor
bound
fadds
fcoml
mov
popa
fisttps
jecxz
xchg
mov
out
loopne
push
inc
jae
xchg
adc
cli
dec
pusha
mov
push
popl
push
xchg
dec
std
cvttps2pi
xlat
add
sub
push
sub
pop
ljmpw
aad
jbe
loop
mov
sub
lret
adc
out
mov
insl
jmp
scas
sarb
les
inc
inc
pop
ljmp
mov
adc
aaa
in
lcall
sbb
pop
jno
dec
pushf
ljmp
sub
jnp
or
aam
les
xchg
shll
dec
adc
jae
fdivl
add
dec
rcll
push
stos
rcrl
add
dec
adc
cs
and
loop
bnd
outsl
ljmp
repnz
push
ret
dec
inc
sarb
int
inc
and
icebp
xor
in
stos
mov
subb
xor
mov
push
loop
xchg
mov
dec
dec
data16
pop
mov
mov
dec
xor
hlt
xchg
outsl
mov
int
xchg
or
inc
mov
es
dec
mov
test
mov
sub
ss
mov
xchg
cmp
testl
and
test
scas
into
or
in
dec
aaa
out
lahf
aaa
xor
daa
iret
xor
pop
loop
test
addr16
std
jmp
inc
mov
xorb
pop
icebp
and
jbe
adc
iret
pop
push
push
inc
fdivrs
mov
jb
js
or
loop
imul
xlat
jo
push
popf
fldcw
xchg
ljmp
sbb
scas
mov
aam
subb
mov
push
mov
fdivrl
mov
jae
pop
push
or
mov
jne
add
pusha
out
enter
mov
xchg
mov
faddl
jbe
das
out
arpl
pop
mov
pop
das
dec
push
dec
aaa
ja
loop
aad
add
mov
mov
dec
test
ja
mov
mov
cmc
ds
pop
imul
mov
adc
test
mov
sahf
nop
push
pushf
loope
xchg
les
sti
inc
in
push
adc
jo
xor
popf
pop
inc
dec
out
or
pop
adc
loope
iret
sbb
cld
cs
clc
or
out
sbb
faddp
loop
xchg
jbe
jne
scas
or
fs
mov
adc
dec
dec
pop
mov
mov
lahf
push
cmp
addr16
sub
int3
dec
clc
inc
mov
leave
sarb
dec
out
jecxz
lock
shrb
push
je
and
mov
inc
add
cld
outsb
je
gs
pop
cwtl
jl
xchg
prefetch
test
sub
inc
pop
icebp
mov
and
or
ja
scas
sbb
pop
mov
sub
xor
shrl
ljmp
lret
loop
mov
popf
mov
mov
or
mov
add
push
adc
nop
das
push
xchg
aam
call
push
ja
fists
mov
adc
cmc
cmc
sbb
cmp
add
sti
sar
rol
insb
hlt
jl
in
and
pop
and
push
into
sub
pop
fsubl
pop
adc
adc
or
mov
adc
sbb
in
add
jns
and
jns
cli
out
iret
bound
addr16
cmp
lea
in
cmp
dec
ljmp
lods
stos
pop
jo
xchg
push
test
fwait
loope
adc
xor
outsb
xor
pusha
xlat
nop
dec
loop
imul
lret
das
adc
mov
dec
or
dec
mov
test
or
push
push
inc
xchg
ficomps
pushf
xchg
enter
jo
fisubs
aaa
int3
jns
jae
sbb
in
aam
call
xchg
jg
mov
aam
inc
mov
mov
ljmp
out
iret
jg
mov
adc
add
lahf
ja
xor
mov
mov
out
dec
lock
sub
jg
push
daa
test
mov
jmp
rcll
sub
dec
sub
lret
mov
sub
sub
loop
xor
call
lds
cmp
ret
fs
icebp
fdivrl
fimull
inc
enter
push
scas
iret
outsl
sub
gs
jb
sarl
cmpsl
call
mov
bound
or
mov
jmp
cmc
jb
rcr
inc
cld
das
and
adc
jmp
mov
mov
cmpsl
rorl
push
sub
xor
icebp
sbb
pusha
movsb
inc
pop
xchg
addr16
sub
sub
ljmp
push
add
daa
mov
gs
mov
pop
mul
push
jb
pop
push
nop
mov
dec
inc
dec
les
mov
cmp
or
adc
jnp
add
or
jecxz
in
lret
leave
inc
or
mov
and
sar
fsub
in
enter
cmp
push
xorb
scas
mov
and
fldcw
push
push
es
clc
dec
sti
movsb
inc
jp
pop
push
or
sbbl
cmp
xor
les
iret
lock
dec
fadds
clc
pop
or
pop
leave
xchg
adcb
ss
popa
jb
jmp
inc
in
loop
dec
mov
push
sub
icebp
mov
cmp
jecxz
xchg
jg
cmp
or
cmp
jbe
jl
mov
lcall
jne
push
inc
xchg
insl
int
insl
jo
mov
pop
loope
popa
adc
xchg
inc
push
inc
call
pusha
pop
scas
call
cmp
mov
xor
sub
mov
cld
jno
pop
ss
push
xor
inc
enter
cld
jno
mov
nop
add
into
push
leave
xchg
das
leave
add
testb
lds
xchg
lds
pop
movsb
xor
mov
insb
xchg
xchg
stos
cmpsl
leave
mov
scas
in
fldl
aaa
sahf
out
out
das
jge
mov
lret
mov
mov
aas
mov
decl
push
mov
sqrtps
ret
sbb
sahf
repz
push
inc
lea
cwtl
mov
dec
nop
or
sub
inc
in
jbe
mov
adc
adc
pushf
mov
pop
or
pop
dec
lret
shr
mov
pop
jnp
add
xor
les
or
pop
enter
add
cs
test
into
adc
pop
mov
mov
rorl
aam
imul
inc
xor
lret
inc
scas
push
ficoms
inc
pop
cmp
sbb
dec
dec
test
pop
or
mov
mov
pushf
out
sbb
sub
ret
xor
sbb
xchg
popa
add
daa
sarb
fistps
jg
mov
shrb
pop
ret
lahf
xchg
fstpt
cmpb
outsl
out
cmc
mov
ret
and
stc
cmp
jno
sahf
add
mov
loope
fsubrl
fcoml
loop
push
cmp
daa
adc
push
mov
les
xor
addr16
push
and
outsl
pop
lret
icebp
adc
mov
cmp
jo
cmp
sub
xchg
push
xchg
or
andb
sub
xor
repz
ss
inc
ja
hlt
mov
int3
stos
repz
cli
ja
xor
dec
mov
lcall
mov
mov
jnp
ss
dec
pop
xchg
pop
stos
xor
cltd
xchg
inc
js
test
mov
pop
push
dec
ret
and
shl
jge,pn
mov
mov
jno
dec
push
movsb
xchg
fs
mov
in
out
mov
mov
or
inc
and
imul
lock
dec
arpl
sub
mov
mov
xchg
aaa
gs
cmp
inc
xor
xorl
hlt
jae
push
sar
ss
imul
out
pop
xchg
push
pop
insb
xchg
inc
and
adc
sti
std
mov
or
or
ds
jle
int3
dec
sbb
iret
xor
es
mov
icebp
shlb
mov
lret
mov
pop
adc
clc
sbb
xchg
jns
push
out
dec
or
pop
dec
sub
stos
repnz
mov
pop
pop
jo
mov
test
dec
pop
dec
add
push
je
xchg
push
aam
cli
jg
shll
adc
in
repz
cmp
xlat
inc
or
cmp
dec
int
fiaddl
add
out
nop
scas
add
addr16
lds
push
xchg
and
ret
add
std
mov
inc
loope
jge
or
jae
mov
cmp
js
xlat
pop
sub
pop
fcoml
mov
push
popf
test
fnstenv
xlat
insb
jp
sub
in
add
jne
push
repz
xor
cmp
cld
lock
lds
push
cmp
inc
loope
iret
pop
test
loope
push
cmp
adc
fsub
adc
incb
call
outsl
sti
mov
jmp
loope
cmpsl
call
pusha
xor
pop
arpl
loop
xor
xor
sarl
dec
pushf
loop
insb
inc
repz
inc
dec
push
or
jns
clc
mov
jae
xchg
sbb
and
testb
jnp
pop
jbe
loope
jl
mov
subl
xchg
add
hlt
mov
or
movsl
push
into
cld
sub
push
push
push
adc
scas
das
cmp
test
sub
mov
xor
add
dec
loopne,pn
sti
xlat
outsl
repz
in
loopne
or
aad
sbbb
push
xor
adc
and
lret
sti
pop
movsl
and
or
pop
inc
adc
movsl
pop
int3
pop
in
clc
dec
sbb
jns
cmp
hlt
cmp
sahf
das
mov
insl
mov
xor
test
jl
pop
mov
stc
rclb
or
lock
shl
adc
xchg
xchg
xchg
in
jmp
mov
xor
scas
lea
fwait
sub
shlb
xor
xor
mov
nop
lcall
push
pop
js
cmp
cmp
dec
sbb
and
push
cmp
mov
mov
icebp
jnp
and
mov
mov
sub
out
popl
or
lret
stos
pushf
pop
cld
inc
xchg
bound
fwait
call
pop
rclb
rcll
dec
sarb
mov
inc
push
cmp
inc
cmp
xor
popa
clc
sub
js
fistps
std
jmp
into
cld
cmp
xchg
mov
scas
jge
mov
fs
in
and
dec
lds
xchg
inc
xor
shll
insb
pop
into
push
mov
dec
daa
jge
push
fwait
outsl
in
fisubrs
push
pop
repnz
mov
mov
inc
mov
out
dec
notb
jle
xchg
scas
clc
outsb
leave
cmpb
jno
sbb
xor
jno
jl
je
adc
push
in
xchg
stc
push
jg
mov
mov
xor
mov
int3
xor
in
add
mov
jne
pop
icebp
dec
push
xchg
xchg
pop
sbb
add
jle
test
xchg
cmc
imul
aam
or
inc
sbb
pushf
xor
mov
stos
into
dec
stos
mov
push
add
jo
pop
push
pop
addr16
push
loop
lods
rclb
lret
sub
mov
dec
push
mov
mov
push
popf
xchg
aas
test
imull
inc
inc
jle
inc
ds
scas
push
imul
test
xor
pop
jg
bnd
mov
adc
mov
clc
and
stos
pop
stos
bound
mov
lahf
dec
sbb
fiaddl
mov
hlt
cmp
imul
cmc
or
jbe
adc
ss
inc
jecxz
test
xor
std
xor
aam
or
in
dec
xor
int3
inc
adc
push
rcll
orl
add
int
lea
pop
into
cld
int
cmp
cmpsb
in
fistl
pop
add
scas
not
cmp
jmp
repnz
inc
fs
call
sbb
adc
outsl
call
adc
pop
int
shll
das
fistl
mov
jl
pop
sub
and
add
pop
imul
std
cli
fs
aad
das
in
imul
mov
sbb
adc
out
rcll
cmpsb
sbb
aaa
xor
dec
mov
add
ja
iret
test
cmpsl
xchg
cmp
mov
push
cmp
addr16
pop
ret
push
pop
cmp
jbe
psubusw
dec
sub
sbb
int3
insl
or
lds
fcmovb
insb
inc
insb
sub
int3
cmp
and
sub
call
sub
add
jg
fstpl
jmp
pop
xchg
subb
clc
jle
stc
shl
std
repnz
in
push
out
rclb
adc
and
mov
mov
adc
jmp
insb
in
dec
ret
ja
xchg
cld
push
ret
aam
stos
cmp
mov
xchg
pop
fcmovb
jbe
xor
xchg
mov
in
xor
into
cmp
out
loopne
jl
call
ds
out
into
pop
mov
test
sti
aam
lret
cmpsb
or
jns
testl
data16
xor
pop
shlb
data16
dec
movsl
and
mov
cld
mov
xor
push
xchg
adc
mov
js
fsubrl
push
dec
sub
popf
ss
and
dec
test
mov
mov
or
adc
std
int3
sub
loope
cwtl
push
sub
cmp
ljmp
pop
mov
push
xchg
scas
pop
xchg
in
adc
and
or
lods
push
int
sub
sbb
dec
cmpb
imul
and
sbb
scas
or
stos
sbb
mov
sbb
dec
inc
inc
fnsave
js
ja
sbb
pop
arpl
lea
fcomps
push
jne
test
jle
sbb
loop
fstpt
lds
jp
std
test
xchg
arpl
inc
popf
push
stos
outsl
push
jne
inc
cmp
xor
in
or
mov
bound
out
pop
scas
xchg
mov
dec
mov
push
inc
jb
jae
inc
daa
outsl
cwtl
push
adc
mov
lahf
mov
outsb
test
jge
xchg
les
lds
sbb
ds
cmp
movsb
arpl
xchg
jno
rorl
inc
orb
cli
mov
lods
in
nop
icebp
dec
bswap
jmp
mov
lods
call
cmp
dec
daa
add
xor
ds
adc
fldenv
fs
mov
push
add
loopne
xor
or
iret
sub
js
nop
cli
outsl
out
mov
add
jl
sbb
fs
orb
jle
jb
sub
movsl
add
cmp
fistl
in
xchg
imul
xchg
add
jnp
adc
dec
orb
inc
mov
in
cmp
aaa
movsl
and
stos
dec
dec
xchg
cltd
cmp
push
fisubrs
or
mov
sub
notb
mov
test
pop
pop
xchg
push
movb
sbb
test
int
mov
push
cmp
and
cmp
and
imul
insb
leave
mov
lret
in
sub
mov
shrl
daa
mov
xchg
dec
lock
dec
push
out
sub
jecxz
test
mov
ds
orl
in
hlt
mov
sub
adc
mov
ss
inc
sarl
cs
cld
popa
and
jmp
pop
pop
cwtl
mov
push
push
add
in
adc
sarb
lcall
mov
iret
dec
sbb
es
sbb
hlt
lcall
aad
push
adc
inc
pop
add
int3
mov
push
add
insl
iret
frstor
mov
clc
popa
and
sub
cmp
ficoml
mov
mov
pop
jg
call
lds
adc
in
or
add
aaa
cmp
xchg
mov
sub
ds
mov
shrl
fimuls
xorb
or
sub
lds
cmp
daa
jne
mov
pusha
dec
push
or
std
int
or
adc
jbe
cld
jb
out
jmp
push
lcall
adc
fdivrs
int
cmp
imul
ret
xchg
movsl
in
jecxz
addb
sub
inc
push
or
pop
adc
into
cmp
mov
pop
xchg
or
xchg
insl
mov
xchg
das
iret
adc
pop
sub
fildll
cmpsb
and
insb
xchg
push
psubd
inc
outsl
repz
repz
adc
call
imul
out
mov
sbb
mov
xchg
mov
mov
lret
jae
sub
mov
fucomi
cmc
repz
sbb
or
fwait
jl
pop
pop
adc
imul
or
ss
adc
roll
or
xchg
pop
cmp
sbbl
ja
aad
out
lret
test
cmpsl
add
shl
cmp
aas
dec
repnz
push
dec
mov
push
pushf
mov
sbb
ljmp
fcom
inc
xchg
mov
js
ja
rorb
movsl
sar
lret
loop
sbbb
cmc
or
mov
mov
fscale
mov
mov
dec
fucomp
jmp
cwtl
cmc
jp
aam
mov
mov
ret
mov
mov
dec
xor
lock
movsb
mov
xchg
mov
ret
mov
lret
pop
lock
out
mov
and
inc
or
or
mov
and
push
xor
jecxz
push
sub
mov
jo
ljmp
jmp
cmp
push
or
jle
add
xchg
mov
mov
mov
push
xchg
add
ss
mov
jl
fists
inc
das
ret
jge
dec
add
arpl
rcr
inc
mov
leave
mov
push
add
lcall
gs
rcrl
xor
icebp
pop
sub
sbb
nop
popf
repnz
fisttpl
les
add
sbb
inc
and
sub
cmp
cmp
xlat
dec
dec
dec
test
mov
daa
jmp
lahf
jg
add
xlat
mov
xor
dec
push
push
jbe
movsl
movsb
sub
call
je
in
ds
in
mov
roll
mov
pop
jge
push
inc
sbb
add
ds
or
cmp
sahf
jne
loop
jns
inc
ret
push
dec
not
rcr
cmpsb
aas
popf
jecxz
adc
jmp
dec
cmp
inc
bound
mov
pushf
pop
ds
outsl
mov
rorb
not
xor
inc
sub
mov
pop
ja
jns
popa
ja
pop
and
lret
cld
cmp
ljmp
aam
aaa
mov
pop
and
inc
shr
imul
fwait
push
icebp
fnsave
mov
adc
or
mov
jbe
push
fsubp
xchg
jns
cmp
jmp
scas
je
mov
in
push
jo
test
lods
cmpsb
aaa
shr
into
sub
jg
dec
int3
mov
ja
jmp
leave
xor
imulb
je
lock
xor
add
xchg
bound
jnp
int
jg,pt
pop
clc
or
add
lock
push
cli
gs
xor
sub
hlt
outsb
ja
in
insl
mov
jg
jecxz
mov
adc
mov
push
daa
inc
lret
adc
cmp
mov
mov
cld
nop
mov
test
incl
in
hlt
jo
frstor
lret
movsb
lea
and
mov
enter
xor
fdivrl
js
in
jnp
scas
dec
leave
push
repnz
cmp
sbb
stc
push
fmuls
ret
outsl
xchg
cmc
sub
adc
mov
es
mov
pop
aam
nop
loop
shl
pop
ljmp
xor
and
es
jle
sbb
andb
cmp
xchg
mov
lds
jge
inc
cmp
stos
into
jmp
call
push
push
dec
in
fisubl
je
cmpb
bound
sbb
mov
sub
sbb
push
jb
inc
outsl
mov
sahf
mov
mov
pop
aas
ds
insl
inc
lds
push
in
in
ds
or
inc
out
inc
fiaddl
mov
dec
cmp
cmp
or
scas
push
cmp
xor
loope
pushf
shlb
cmp
lds
cmp
sub
add
clc
inc
mov
and
dec
lds
add
repnz
nop
or
fcmovb
or
xchg
add
test
push
jae
addr16
pusha
loope
sbb
nop
pop
in
iret
shlb
xlat
jno
iret
imul
push
in
inc
and
or
shlb
jne
add
inc
fnstcw
inc
popa
cmpb
jne
add
mov
test
andl
aas
push
dec
bndldx
int3
nop
mov
adc
mov
rolb
sbb
lret
push
in
push
dec
cmp
xor
sbb
scas
sub
push
pop
lret
and
hlt
sub
or
repz
sub
stc
shr
mov
jp
aas
and
mov
dec
jmp
imul
adc
sub
stos
arpl
adc
mov
daa
jnp
mov
fimuls
push
push
xlat
inc
add
dec
cmpsb
push
ljmp
repnz
test
sarb
and
sbb
and
repnz
jo
and
xchg
sub
int3
pop
fdivrl
add
ss
or
rcll
sahf
mov
and
movsb
push
mov
fiaddl
or
sbb
loop
add
inc
shll
pop
cmp
sub
andb
and
mov
jae
aas
das
fcmovb
int3
jo
xor
lds
fnstcw
sub
aad
or
dec
call
jbe
je
in
or
inc
scas
inc
stc
mov
aad
sub
mov
jg
or
xor
adc
shl
ss
and
popa
add
inc
idivb
popf
not
aad
aas
loope
push
jb
or
jmp
jns
insb
test
test
lds
xchg
clc
xlat
imul
cli
and
cmp
pushf
imul
mov
mov
jmp
mov
rclb
test
out
cmp
inc
out
fcmovnbe
push
mov
lods
stos
out
add
bound
mov
adc
push
in
sub
rolb
popw
scas
aam
in
daa
mov
popf
pushf
hlt
aaa
push
jnp
jnp
dec
push
mov
mov
sbb
mov
xor
int
push
mov
test
sbbb
hlt
xor
outsb
shlb
and
mov
mov
jg
imul
je
call
sbb
dec
adc
fldl
xor
fsubl
push
orps
dec
sbb
flds
imul
sbb
jae
jnp
adc
or
mov
movsb
jne
aad
shr
out
inc
push
mov
and
cmp
leave
xchg
cmp
pop
rolb
push
in
cmpsl
pop
aas
jg
je
mov
fiaddl
scas
or
lock
in
and
jecxz
push
adc
aad
int3
rorb
add
dec
scas
or
out
enter
sbb
lods
pusha
rorb
jno
jb
add
lea
mov
stos
mov
cld
cmp
aam
je
and
js
es
jmp
mull
and
cmp
rcl
push
jb
gs
call
jmp
sbb
rcrl
add
inc
sbb
out
and
pop
jp
sub
xor
ret
lds
js
jecxz
pop
adc
xor
push
pop
rcrb
adc
bound
cmp
cmp
xlat
pusha
rclb
mov
adc
cli
push
std
sbb
mov
mov
je
outsl
loopne
xchg
pop
mov
xor
daa
stos
cmp
clc
inc
cmp
rorl
sub
add
arpl
hlt
xor
and
test
cmpsb
sub
into
stos
pop
fbstp
cmp
mov
stc
loop
xor
adc
xchg
in
jns
add
sbb
dec
in
mov
dec
scas
lea
popa
subl
jae
jnp
shlb
push
xor
sub
jecxz
inc
pusha
jbe
mov
xlat
aam
sbb
imul
jl
jmp
pop
cs
aaa
xor
jb
lds
mov
xor
hlt
aaa
adc
jge
or
push
cmp
cli
push
add
inc
ljmp
out
popf
rclb
adc
filds
sub
dec
xchg
or
insb
xchg
mov
shrb
dec
jnp
inc
cmp
pop
inc
xor
xchg
in
sub
xor
jmp
in
pushf
test
iret
mov
sub
xor
xor
lds
insl
adc
out
lock
add
sub
sbb
dec
fidivs
pushf
in
fisttpl
pop
std
adc
push
ficoml
mov
cmpsb
sbb
mov
adc
ret
mov
fs
or
sarl
popa
xchg
arpl
subb
sbb
hlt
cli
js
or
scas
cmp
addb
or
aad
and
sub
and
fdivrp
xchg
test
daa
xchg
sbb
aaa
ss
lret
sub
cmp
jnp
cs
adc
call
sub
rorb
or
adc
pop
aad
add
or
add
stos
xchg
push
jge
test
mov
lds
cwtl
pop
and
jnp
fimuls
je
cmp
gs
test
test
mov
mov
cmp
js
test
xor
inc
mov
ret
shll
cmp
sbb
mov
push
mov
sub
cld
clc
dec
or
imul
mov
pop
mov
mov
adc
inc
pop
test
jmp
je
ja
lahf
pop
sub
mov
mov
mov
mov
repz
sar
mov
bound
xchg
decl
ret
sbb
repnz
loopne
pop
and
push
cmp
cmp
mov
xor
sbb
in
jge
and
sbb
mov
or
lods
ljmp
sub
mov
lahf
or
xchg
mov
jmp
int
sbb
mov
test
stos
add
cmp
scas
mov
cltd
sbb
arpl
pop
movsl
stc
mov
cmpsb
lret
adcl
fisubrs
mov
or
sahf
jl
jmp
cli
push
xchg
adc
lret
and
mov
popa
jecxz
push
dec
scas
icebp
cmc
leave
xchg
test
rclb
pop
jbe
cld
call
cmpsb
mov
shrb
jmp
fnsave
dec
jl
jp
xor
cmc
dec
aaa
call
add
popf
sti
inc
les
es
test
sub
loopne
mov
iret
jmp
inc
aas
lahf
jle
out
scas
pop
push
out
dec
aad
push
pushf
mov
test
pop
daa
mov
inc
int3
negl
xchg
jl
es
loope,pn
pop
sub
and
lcall
fistps
mov
scas
test
mov
jmp
jle
popf
jbe,pn
xor
pop
ljmp
das
cld
fs
mov
cmp
sub
outsl
sbb
mov
or
mov
cmp
or
inc
push
xchg
out
and
xchg
cmpsl
jg
inc
adc
sub
out
ds
or
sbb
add
and
jmp
outsb
rolb
mov
shr
jl
jl
outsl
pop
lock
inc
sub
cltd
imul
pop
leave
mov
mov
fisttps
dec
sub
gs
sbb
pop
loopne
jne
push
jae
adc
mov
test
rcll
mov
mov
mov
ret
xor
xchg
add
out
test
ds
daa
loop
cmp
test
scas
gs
fnsetpm(287
mov
andl
or
mov
adc
fadd
push
or
xchg
mov
pop
ficompl
xor
dec
repnz
adc
jg
aaa
aaa
mov
push
pop
push
sbb
xchg
sbb
test
sbb
mov
xchg
or
mov
pushaw
add
cs
mov
test
mov
inc
add
fucom
jb
aas
adc
call
out
roll
pusha
sbb
call
clc
or
cmpb
mov
sub
dec
int3
push
fsubrl
repnz
xchg
sub
dec
out
stos
call
inc
xorb
cmp
cmp
test
or
out
decl
mov
push
and
sbb
mov
cmp
and
into
cmp
popa
aam
push
sub
mov
shrl
xchg
sub
clc
cltd
cs
aam
leave
repnz
test
or
cmpsb
subb
sbb
or
in
cwtl
sbb
stc
enter
mov
js
fists
jbe
test
adc
mov
jl
scas
pop
dec
jno
dec
xor
cmp
xchg
and
ds
aaa
add
jnp
movsb
scas
cltd
push
mov
jecxz
andl
es
call
dec
sub
push
jo
stos
dec
jno
mov
daa
pop
data16
popf
das
cld
sti
fs
lds
stc
pop
sbb
fildll
in
jbe
inc
dec
popf
xor
cmp
inc
and
jbe
jns
inc
cwtl
das
mov
lahf
jle
inc
push
mov
add
xchg
add
enter
mov
jbe
fsubs
mov
inc
mov
mov
test
sahf
mov
shll
cmc
movsl
pop
inc
nop
call
jae
outsl
inc
ficoml
loopew
std
cmp
xor
xchg
shrb
xchg
cs
jmp
aaa
andl
inc
jbe
add
jns
sub
ficoml
scas
lret
or
lea
or
sub
and
xchg
js
cmc
ljmp
lea
cmpl
or
js
sti
stos
and
lods
sti
xchg
dec
add
imulb
jns
mov
lods
sub
push
js
mov
pop
ficomps
dec
sbb
jae
insl
pop
sti
arpl
scas
stos
mov
push
inc
xor
jl
dec
outsl
and
out
outsl
gs
pop
xchg
inc
adc
sbb
call
cmp
or
mov
int3
call
sti
je
cmp
jmp
or
test
pop
push
dec
add
lret
jmp
xchg
dec
push
scas
jmp
clc
add
loopne
lcall
movsb
mov
pop
adc
sbb
mov
das
es
out
nop
mov
jle
dec
or
jb
sub
outsl
lret
mov
dec
sub
dec
stc
xor
or
pop
les
inc
pop
out
inc
cmpsl
fisttpll
inc
das
sar
cmp
xor
in
sarb
sbb
sub
mov
xchg
les
testb
jno
mov
sub
mov
or
insb
shll
loop
mov
cmp
inc
mov
push
xor
ja
mov
adc
js
les
xchg
pop
mov
push
xchg
hlt
mov
push
xchg
js
adc
push
inc
adc
push
stc
sbb
and
pusha
ret
inc
stc
sub
cld
bound
sti
push
sbbl
xchg
psrad
and
and
lods
das
fimuls
mov
inc
nop
out
pop
add
sub
outsl
mov
dec
add
repnz
mov
inc
mov
dec
pop
cld
enter
adc
das
mov
xor
sub
xor
fwait
test
ret
rorl
cwtl
call
cwtl
jae
jmp
shrl
mov
push
mov
shlb
sub
inc
out
cmp
push
push
push
test
cmpsl
dec
out
lret
adc
push
jmp
test
push
mov
out
dec
sbb
in
imul
cli
mov
mov
dec
xchg
cmp
out
call
shrb
pop
xchg
cmp
push
std
lea
rorb
lea
out
je
xchg
inc
orb
lods
jp
inc
mov
sub
dec
mov
shll
push
std
out
mov
inc
pop
push
add
movsb
movsb
jmp
jne
lds
movsb
mov
test
or
mov
dec
and
pop
out
sub
out
lock
sub
and
push
fisubrl
daa
inc
cmp
lock
jbe
inc
aas
add
aam
pop
xchg
pop
sti
pop
push
sbb
mov
push
xor
stc
stos
jmp
mov
jg
inc
inc
xchg
xchg
or
loopne
imul
xor
in
xchg
rol
push
nop
fs
push
mov
mov
fcmovnu
mov
mov
add
sahf
shll
test
add
push
imul
out
adc
mov
mov
lret
mov
jmp
int3
mov
outsl
add
aad
xlat
pop
repz
decb
cmp
fnstsw
mov
dec
movsb
mov
mov
jbe
jg
pusha
lahf
sbb
sub
rorl
add
cmc
ror
lds
enter
and
sahf
jnp
daa
mov
icebp
or
shlb
popa
cmp
pop
mov
mov
loope
out
pop
cmp
psllq
mov
das
push
mov
adc
and
lahf
pushf
xor
adc
repz
push
dec
jecxz
sbb
aam
je
dec
mov
cmc
mov
das
repnz
mov
test
jecxz
push
jmp
xor
adc
and
ror
rorl
pop
imul
or
leave
es
mov
outsl
sub
mov
fistpll
cmp
lret
jae
mov
inc
mov
in
sub
xchg
or
in
jl
out
add
or
movb
mov
fucomp
int3
ds
sbb
std
shll
cli
call
or
daa
xchg
xchg
xorl
in
cs
add
push
xor
data16
jmp
test
cmp
jg
insb
adc
and
test
add
les
xchg
push
adc
fcmovnb
out
lret
sbb
sbb
push
insb
test
iret
dec
mov
pop
fidivs
inc
std
lret
xlat
inc
repz
dec
pop
mov
cmovp
loope
xchg
adc
mov
stos
mov
xchg
int3
sbb
pop
int
fstpl
cli
inc
icebp
jge
push
dec
push
cs
dec
pop
inc
jno
popf
and
test
cmp
inc
jl
in
mov
pop
pop
sub
subl
mov
lock
in
ret
push
hlt
loopew
xchg
mov
mov
xor
mov
fcmovnbe
xor
enter
sub
mov
out
push
mov
bswap
fsubrl
mov
xchg
in
test
push
or
jns
inc
jecxz
imul
cli
outsl
das
lahf
jbe
push
insb
fldl
jnp
loop,pt
mov
popa
test
mov
insb
cmp
or
movsb
stos
lret
into
jbe
movsl
adc
xchg
sahf
adc
jg
adc
xchg
and
in
sub
comiss
gs
xchg
enter
xor
or
mov
mov
ret
dec
loope
into
xor
call
lods
fldt
pop
sbb
dec
push
mov
cmp
dec
leave
jmp
daa
pop
mov
and
ljmp
mov
aaa
notb
xor
iret
push
xchg
jl
push
mov
test
lret
xchg
xchg
jns
xchg
dec
clc
bound
mov
push
sub
lods
sbb
mov
push
bound
mov
jae
inc
das
imulb
sbb
insl
xor
mov
ret
hlt
push
je
add
push
sbb
and
sahf
incb
in
jl
cmc
pop
mov
xchg
addr16
push
ss
sbb
fs
mov
cmp
jo
pushf
xor
jb
xchg
pop
cs
imul
pushf
movsl
inc
adc
fidivrs
rol
mov
xchg
movsb
pop
divb
mov
leave
fadd
out
mov
aaa
sbb
adc
push
and
jmp
stc
in
xorb
hlt
mov
lods
daa
test
sub
adcl
mov
sbb
pop
xor
xor
inc
addr16
orb
cmp
adc
pop
pop
and
int
or
lea
fidivs
cmp
in
ret
iret
inc
jmp
aam
negb
hlt
call
jo
dec
inc
pop
inc
mov
inc
xlat
out
sbb
jmp
aaa
xchg
sbb
xlat
lret
pop
ljmp
out
rorl
in
mov
lret
or
xor
mov
das
jecxz
nopl
pop
call
sub
pop
sarb
jno
test
or
cld
lret
pushf
and
sti
les
mov
imull
jle
mov
imul
insb
jp
popf
scas
jl
xor
pop
stos
call
iret
jecxz
dec
lret
cli
fbstp
xchg
pop
jbe
jmp
mov
add
outsb
imul
push
mov
sbb
sti
add
lds
inc
mov
mov
push
xor
push
mov
jmp
shll
testb
mov
push
imul
cmpsb
and
jle
int
jg
push
insb
mov
dec
inc
mov
push
push
leave
dec
push
call
ret
std
mov
shrl
cmpsl
rclb
das
out
xor
jle
fs
out
add
cltd
adc
cmp
jmp
shl
pop
jmp
pop
and
mov
adc
mov
insb
xchg
mov
xchg
xchg
cmc
inc
daa
sub
popa
ljmp
aad
ljmp
fcmovnb
pop
mov
dec
gs
lods
pop
cmp
mov
jg
cld
inc
and
mov
ret
inc
mov
outsb
fstps
hlt
and
scas
cwtl
lret
lods
ja
es
xchg
or
icebp
dec
leave
clc
iret
mov
pop
inc
jmp
sbbl
sub
cmpsl
adc
divl
int3
pop
adc
ljmp
repz
sbb
push
ret
inc
iret
bound
pop
jp
divb
lcall
xor
xchg
lret
lods
add
mov
pop
int3
xchg
rolb
push
test
scas
add
cld
mov
push
ljmp
inc
mov
or
test
mov
mov
mov
jmp
sbb
pop
sbb
mov
mov
das
adc
es
movsb
and
mov
pop
cvtdq2ps
push
sarl
add
stc
hlt
inc
out
std
gs
push
imul
repnz
push
xor
and
cli
sti
das
dec
pop
push
into
cmc
pop
pop
push
js
xchg
out
fdivr
aaa
push
lock
inc
inc
pushf
adc
popa
bound
cwtl
lods
adc
les
cs
adc
sti
xor
sub
mov
jnp
pop
test
push
add
shrb
add
add
movsl
adc
xlat
loop
je
xchg
jl
push
pop
push
mov
jecxz
mov
xchg
jmp
into
mov
dec
in
shlb
add
out
js
adc
sub
je
stos
jbe
jmp
pop
lea
add
jnp
or
mov
std
jle
ljmp
stos
orb
popf
or
imul
jno
cli
hlt
adc
scas
mov
rcrb
and
pop
pusha
add
inc
call
cmp
stos
pop
xchg
int
iret
dec
xchg
xor
jmp
sub
fyl2x
add
pusha
push
fimull
mov
inc
xor
or
cmp
fldl
dec
fidivrl
sbb
inc
test
mov
aam
aam
addr16
stos
jmp
xchg
adc
adc
mov
mov
imul
sub
ret
pop
repnz
jle
jb
aam
dec
insb
lods
mov
scas
pop
and
ret
fs
xor
lods
pop
xchg
xchg
push
dec
in
sub
mov
sub
inc
mov
lret
jg
xchg
shr
jno
das
inc
mov
mov
daa
in
inc
inc
mov
push
or
or
gs
xor
scas
jb
loopne
test
out
push
scas
jb
in
sarl
ljmp
mov
aad
test
jp
shld
xor
fadds
cmp
stc
test
xor
xchg
lahf
inc
mov
sub
loope
scas
mov
jmp
mov
and
mov
xlat
fsubl
imul
add
xlat
jo
and
ja
jecxz
inc
daa
jbe
scas
push
lock
sti
dec
ficomps
repz
push
jbe
lret
xchg
push
jl
or
inc
faddp
mov
test
pop
aaa
pop
inc
das
xchg
loope
xor
aam
clc
mov
lds
mov
dec
insl
or
pop
and
scas
fcmovbe
sar
loopne
jl
aad
jg
xchg
and
scas
pop
push
sbb
pandn
jnp
add
pop
fsubrl
cs
imulb
jle
dec
lods
into
or
mov
xlat
mov
mov
cmpsb
or
hlt
pop
inc
xor
out
mov
lea
lahf
cmpb
xlat
repz
sub
daa
pop
pop
mov
jle
xorl
sub
adc
mov
sub
xor
in
add
addl
mov
xor
jmp
pop
xchg
mov
sbb
lods
add
das
mov
les
dec
cmpsl
add
inc
icebp
in
movsb
stc
mov
scas
push
repnz
push
pop
and
xchg
in
mov
das
je
dec
inc
in
cld
xlat
and
jl
push
dec
sbb
cld
mov
lret
push
rol
xor
push
jge
sub
add
std
cmp
inc
and
int3
out
lods
push
fnsave
xor
jmp
cmp
jne
sbb
jmp
sbbl
pop
jb,pn
mov
mov
cld
out
mov
sub
dec
repnz
ja
jo
xor
sbb
add
gs
push
push
jl
push
enter
cli
in
roll
das
int3
shlb
push
insb
cmp
sahf
flds
mov
pushf
aad
jmp
test
loop
or
out
sub
sub
repz
cmp
loope
mov
pop
mov
jbe
xor
push
imul
pop
inc
js
sbb
pop
pushl
fldt
pushf
jae
dec
lods
pop
push
jecxz
fsts
jp
fmuls
clc
daa
repnz
dec
mov
cmp
popa
notb
leave
xchg
pop
lret
jne
jmp
adc
rorl
adc
leave
das
dec
or
adc
mov
call
pop
dec
adc
fucomp
dec
xor
adc
push
insb
std
das
in
rclb
mov
les
push
ljmp
and
imul
in
fdivr
adc
das
mov
mov
enter
fildl
dec
sub
popa
repnz
addr16
sub
fs
push
lcall
mov
and
and
pop
xchg
imul
mov
lret
jl
inc
pop
xor
mov
mov
jge
mov
inc
dec
test
sbb
mov
in
icebp
push
aas
flds
sub
xor
js
ss
pop
inc
adc
aam
mov
jnp
adcb
rolb
cmp
add
cmp
or
das
enter
push
out
push
jg
stos
sarb
shll
or
popl
dec
push
push
sbb
js
pop
xor
jmp
daa
xchg
xor
mov
sub
aam
and
xchg
jo
pop
mov
push
cmp
sbb
xchg
popa
inc
mov
mov
xchg
xor
cmc
movsl
add
sbb
pushf
lret
and
mov
mov
sub
push
insl
mov
xchg
jne
out
mov
dec
not
addr16
imul
adc
pop
adcl
add
not
ljmp
xchg
or
outsb
mov
sub
mov
inc
inc
inc
push
enter
pushf
lcall
lcall
sbb
adc
les
insb
mov
inc
sub
out
push
xchg
cmpsl
je
sub
push
dec
inc
or
mov
movb
daa
push
dec
inc
pop
add
imul
ja
adcl
push
fnsave
cld
sti
test
sbb
inc
and
mov
jne
adc
dec
in
push
sub
or
loop
dec
jns
divb
addb
loop
aas
ja
roll
jne
ds
std
popf
sar
leave
mov
out
dec
inc
stos
daa
sub
in
into
adc
shll
or
ss
insl
xchg
rclb
repnz
mov
push
inc
mov
je
std
and
add
lret
inc
jmp
push
das
stos
jle
pop
inc
cmovbe
sbb
mov
push
sbb
and
mov
push
aaa
ret
mov
movsl
incb
fbstp
cwtl
jnp
pop
dec
sbb
add
jnp
or
fwait
mov
cld
jecxz
mov
xchg
mov
and
lods
cmpsb
or
mov
test
inc
cmp
lahf
ret
jns
mov
or
cmc
leave
push
and
cmp
dec
movsl
shll
cmp
sub
jge
mov
cs
lds
je
in
xor
repz
loope
add
mov
push
add
pop
cmp
loope
jp
pushf
xchg
or
loop
fistpl
int3
popa
dec
pop
jns
inc
jbe
adc
vmwrite
sub
leave
xor
jl
jmp
lahf
xchg
mov
xchg
push
push
adcl
clc
fbstp
add
xor
sbb
or
dec
mov
xlat
jne
je
inc
ja
aas
sub
dec
xchg
repz
sbb
stos
leave
mov
push
mov
adc
ret
dec
lret
jge
pop
stc
sub
rcl
into
mov
cmpsb
inc
or
pop
mov
dec
movsb
jbe
jbe
out
pop
lods
in
aam
or
jb,pn
aam
iret
aam
inc
lret
sbb
mov
out
xchg
das
or
addb
jge
jbe
and
shll
or
jns
enter
int3
xor
rorl
icebp
lods
pop
lds
stos
or
inc
mov
dec
jno
mov
sbb
dec
jp
push
dec
adc
cmpsl
mov
ss
adc
inc
int3
jne
cli
cwtl
jp
shlb
sbb
jbe
orb
or
mov
bound
xchg
icebp
inc
cmc
or
loopne
push
pop
dec
stos
aad
push
jno
adc
jo
aam
icebp
inc
aam
movsb
mov
mov
cmp
ret
andb
loop
xor
pop
ret
pop
xchg
jmp
mov
ja
inc
repz
outsb
lock
into
aas
lock
mov
mov
mul
nopl
stos
mov
jmp
js
or
into
sarb
mov
movsb
jecxz
cmp
sub
or
imul
mov
es
sbb
in
test
test
jne
inc
sbb
insb
mov
lods
lcall
mov
jo
sub
adc
inc
adc
rcl
mov
xchg
dec
and
aad
mov
mov
and
mov
aam
fwait
in
or
in
aaa
sub
ja
lock
popa
dec
inc
and
cmp
sti
fwait
jae
pop
sbb
push
cmpsb
je
mov
or
jmp
mov
xlat
bt
mov
or
ficoms
inc
in
out
dec
add
inc
dec
sbb
xor
mov
mov
cmc
popf
sub
inc
test
sbb
ja
mov
push
mov
lods
mov
add
mov
mov
xchg
enter
dec
bound
inc
cmp
jge
rorl
and
out
jl
scas
popa
inc
adc
cmp
lds
arpl
or
dec
jmp
rcrl
sahf
lahf
mov
adc
test
sti
bound
addb
pop
mov
adc
mov
push
jl
ret
mov
push
jmp
mov
push
jl
cs
rcrl
inc
in
cmp
mov
jge
lcall
and
lock
xlat
fstpl
movsl
lret
call
xchg
cs
lahf
and
xchg
aam
jns
xor
js
mov
aaa
testl
pop
add
bound
jge
jo
dec
data16
jns
shl
pushf
pop
jno
xchg
jge
or
push
dec
adc
add
cmc
mov
movsb
les
lret
dec
sbb
out
mov
movsb
jnp
inc
fs
ss
jl
push
mov
nop
xorl
movsb
movl
xchg
and
lds
inc
stc
ljmp
pop
lea
mov
cmp
out
dec
add
cmp
lds
aam
call
or
stos
jae
aad
mov
xor
rclb
lods
pop
mov
mov
rcrb
dec
stos
ljmp
dec
lock
jecxz
cmp
mov
and
push
adc
add
stc
dec
and
lcall
mov
or
je
xor
jnp
add
stos
out
aaa
push
bound
cld
sbb
out
testb
scas
lret
inc
xor
mov
les
mov
fdivrs
jb
cmp
cli
xor
clc
aaa
lea
add
push
mov
rcl
or
or
lcall
outsl
dec
jo
ds
mov
add
sbb
cmp
into
rcrl
fdivp
int3
pop
mov
sub
dec
pushw
pop
xor
jmp
fcompl
mov
jecxz
cmc
dec
outsb
loope
ret
xor
dec
sub
inc
lock
mov
xchg
dec
movsb
cmpsl
mov
in
lods
jb
mov
mov
sbb
ljmp
into
mov
push
setl
test
add
push
cwtl
or
aad
inc
mov
je
ret
into
hlt
mov
sub
or
rcrb
inc
ret
mov
jae
mov
ret
pop
mov
repz
inc
fwait
sub
jle
adc
or
cmp
int
test
decl
lds
dec
loopne
inc
pop
fldl
or
inc
push
add
cmp
repnz
popf
adc
mov
pop
mov
or
xor
sub
pop
dec
jmp
inc
les
adc
mov
add
jp,pt
loop
cs
xchg
mov
dec
jne
dec
daa
add
or
out
cmp
mov
jns
out
xchg
jbe
insb
hlt
or
xor
pop
xlat
lods
ficomps
and
cmpsb
mov
cmp
mov
sub
mov
lock
mov
cmp
test
jnp
frstor
push
cmp
pop
mov
sahf
and
scas
fimull
dec
cs
jbe
mov
pop
xchg
call
sub
into
fdivrs
jnp
dec
mov
cmp
popa
call
jecxz
aaa
ret
mov
add
adc
imulb
pop
push
orb
jnp
pop
inc
cs
xchg
adc
enter
int
jle
call
add
sbb
cwtl
jnp
popa
shrl
xchg
sarl
gs
js
or
mov
xchg
push
leave
xchg
sbb
push
or
lret
not
push
inc
inc
repz
push
jae
mov
mov
xor
je
js
and
das
pop
lret
and
fimuls
lock
lret
xchg
pop
push
inc
adc
test
xchg
jecxz
inc
cmc
divb
imul
adc
xchg
movsb
xchg
call
adc
sbb
xor
dec
mov
addr16
mov
and
daa
dec
fistpll
inc
lcall
shrb
or
aaa
add
xor
inc
out
lods
cli
and
jb
xorl
jg
push
loop
rcr
mov
popf
out
cld
imul
dec
pop
and
xlat
adc
rorb
mov
cwtl
adc
ljmp
or
andb
pop
and
psrad
idivb
sub
leave
pop
mov
or
mov
shll
cmp
aad
int
ret
enter
out
fnstsw
das
sti
ret
mov
out
adc
ljmp
shlb
lret
hlt
pop
int
sti
test
mov
shll
es
pop
mov
xor
cs
lret
test
gs
je
movsb
ret
inc
cmp
inc
pop
jle
outsb
dec
xchg
adc
pop
sbb
and
mov
pop
js
adc
lock
sbb
pop
pop
jge
or
rcll
es
out
fsubrl
pusha
add
and
pop
popa
jb
adc
enter
mov
test
mov
cmp
dec
daa
rcl
ret
xor
push
loopne
test
dec
mov
mov
out
push
pop
mov
fs
mov
or
xchg
push
or
fists
gs
and
xchg
ja
add
cmp
jmp
sub
pop
je
push
mov
imul
pop
sub
shr
daa
push
adc
or
lahf
pop
or
xor
push
sarl
test
aad
fcmovne
mov
inc
bnd
lods
cld
inc
adc
imul
ret
xchg
rolb
push
cmp
les
lret
inc
or
inc
vmovntps
hlt
add
jns
fdivrl
mov
ljmp
movb
cmp
mov
xor
cmp
sub
mov
ret
jno
adc
inc
shlb
cmp
js
jns
std
leave
ljmp
push
or
push
inc
in
loop
scas
sub
xchg
pusha
pusha
xorl
mov
jne
push
inc
jg
cltd
scas
outsb
hlt
sub
insl
fdiv
and
adc
les
or
adc
and
movsb
std
sub
in
outsb
mov
sahf
mov
cld
push
adc
dec
call
mov
mov
jo
lret
jae
mov
push
adc
push
mov
xor
push
aaa
nop
shr
or
mov
ljmp
cmp
sbb
insb
lret
mov
outsl
jl
or
repz
cwtl
xchg
ljmp
ja
dec
jo
adc
push
cmp
fdivrl
add
jmp
out
mov
in
xor
pop
scas
and
push
shlb
int3
mov
aas
std
iret
lock
mov
ret
out
or
jmp
dec
fwait
add
stos
insb
sub
shrl
cmp
mov
repz
test
fld1
out
ds
jp
mov
adc
pushf
adc
sarl
imul
adc
dec
pop
adc
xchg
fildll
mov
test
add
mov
push
and
pop
adc
rcrb
jle
and
cmp
sbb
jmp
out
jnp
push
ljmp
cmp
out
shll
dec
mov
repnz
inc
adc
cli
dec
out
xchg
cmpb
push
jmp
push
test
scas
xchg
sarl
mov
mov
adc
test
inc
inc
dec
lock
mov
fiaddl
out
insb
sbb
cmp
push
mov
mov
and
fwait
dec
js
movsb
or
inc
dec
daa
not
pop
out
call
adc
xor
fnstenv
cmp
adcl
ret
cmp
pop
xor
jno
popa
xchg
sti
pop
frstor
mov
aaa
dec
jl
pop
add
ret
mov
lods
movsb
mov
test
mov
cli
cmp
dec
inc
aaa
clc
mov
mov
pop
sub
test
pop
jle
jmp
inc
das
lea
lret
dec
inc
inc
jmp
cmp
sahf
adc
or
xchg
add
fldcw
xchg
aam
shll
orb
xor
mov
pop
push
andb
pop
pop
scas
daa
imul
push
pop
arpl
add
xor
or
lcall
js
stc
xchg
lret
test
hlt
cmp
sar
sbb
mov
adc
sbb
push
xlat
inc
gs
je
pop
in
mov
clc
insl
arpl
outsl
push
xchg
mov
xor
jmp
adc
andb
popf
sbb
jbe
sbb
jecxz
enter
cli
jmp
add
cmp
adc
inc
cmp
xchg
and
out
outsl
add
scas
ret
jbe
adc
les
and
je
cmpsb
pop
lret
aad
loop
xchg
in
icebp
aas
idivb
cmc
mov
sub
xchg
in
sbbl
xchg
lahf
outsl
loop
ss
hlt
aaa
inc
inc
sti
inc
adcl
sarl
inc
dec
loopne
fwait
rorl
sbb
rcll
sbb
popf
insl
sub
sti
jo
in
cmp
adc
and
dec
xchg
and
andl
out
dec
pop
jno
psubw
fiaddl
scas
cmp
mov
push
pop
ret
in
test
mov
sbb
shlb
aam
cmp
add
xchg
imul
aam
mov
out
pushf
mov
add
jp
adc
lcall
jp
lahf
aaa
or
loopne
sbb
mov
push
jge
mov
in
jle
push
push
jecxz
ret
jmp
insl
dec
sbb
cmc
adc
adc
icebp
mov
movsb
das
stc
test
jbe
mov
xor
pushf
roll
aaa
repnz
ror
ds
ret
shrl
or
out
mov
popf
stos
xlat
and
push
xor
mov
lods
sbbb
ljmp
shrb
mov
mov
mov
push
imul
cmp
dec
fnstenv
rcl
lahf
fdivr
test
outsb
sub
jmp
rol
mov
daa
lret
jl
cltd
aas
sub
mov
idivl
imul
and
cs
or
xorl
js
jnp
jp
and
icebp
ja
sub
dec
mov
or
ja
jmp
cmp
xchg
dec
ja
pop
popf
js
sub
xor
sbb
aad
adc
sub
add
jge
xchg
jecxz
dec
mov
cs
mov
sub
sbb
cmp
es
cltd
cmp
out
out
fbstp
cmp
arpl
scas
shl
push
add
xor
xchg
sbb
test
add
andb
scas
adc
pop
aam
loope
push
lcall
test
ss
ret
clc
mov
iret
cmp
bound
jl
fistpl
scas
pop
and
cmp
push
or
lcall
std
dec
push
sbb
xchg
dec
jge
xchg
cmpsl
sbb
cmp
or
out
cmp
or
cwtl
sub
pop
icebp
cmc
out
xchg
out
std
inc
dec
adc
mov
xor
jno
pop
insb
stc
test
pusha
mov
sub
fsubrs
imul
mov
lock
fsubrs
push
aaa
lock
aas
adc
icebp
in
lret
stc
xchg
xorl
jns
xchg
les
repnz
sbb
jmp
pop
lret
mov
nop
pushf
sub
push
stos
sub
je
dec
xlat
xchg
lds
xor
mov
test
sti
rcr
xchg
fnstsw
es
fmul
mov
xlat
xor
or
aad
pop
js
into
pusha
jb
xchg
scas
outsl
sub
adc
int3
sub
sti
addr16
cmc
mov
adc
add
sbb
jae
imul
pop
add
inc
leave
mov
int3
sub
mov
sub
jmp
push
int3
inc
outsb
aas
push
call
pop
and
mov
test
mov
fiaddl
push
addr16
fildl
imul
lock
fdivs
aad
lret
jmp
int3
xchg
loop
xlat
mov
sub
mov
push
push
out
adcl
test
shrb
and
adc
dec
movsb
sahf
aas
loopne
lcall
cld
jno
pop
xor
inc
hlt
sub
sbb
leave
stos
pop
or
xchg
sub
pop
loope
cli
lods
movsl
imul
push
and
xor
ja
insl
sub
dec
or
inc
pop
call
repz
pxor
or
or
dec
adc
push
inc
pop
clc
or
mov
sbb
mov
into
out
xor
xchg
rcrl
lret
sbb
or
mov
inc
rclb
imul
ljmp
adc
movsb
xchg
jno
jg
test
dec
add
xchg
nop
test
outsl
les
aas
push
out
xchg
pusha
cmp
jl
lcall
mov
or
sub
pop
xchg
fdivrp
insl
ljmp
ret
jge
xor
ret
sub
adc
cli
adc
imul
cmp
xor
mov
or
mov
inc
dec
mov
sbb
loop
cmpsb
aam
add
cmp
push
adc
pop
jno
pop
popa
mov
lea
cmpsl
out
lret
rol
lods
push
push
enter
dec
cwtl
cld
jnp
lods
mov
push
in
mov
mov
and
xor
xor
fdiv
lahf
sub
ljmp
repnz
cmp
adc
std
inc
inc
call
mov
pop
pop
std
xlat
sbb
insl
fs
mov
es
mov
xchg
gs
aaa
xchg
setne
stos
ljmp
ret
insl
jl
cmp
mov
inc
mov
repnz
cld
pop
out
arpl
jge
lods
sbb
cmp
stos
in
mov
ficoms
stos
out
dec
cmp
insb
push
jg
scas
adc
mov
cmp
xlat
xchg
ja
int
movl
push
lret
shrb
jle
pop
mov
insl
xchg
es
scas
repnz
int3
mov
xchg
ljmp
ja
lock
test
fbstp
out
jecxz
into
fstl
add
cmp
or
jg
mov
aam
mov
sbbb
popa
cli
sbb
inc
adc
in
imul
add
sub
enter
cld
push
and
xor
jge
nop
stos
xchg
push
jl
push
in
xchg
pop
push
out
mov
aam
and
add
into
sahf
fsubl
push
push
popl
mov
shlb
ret
into
mov
jg
mov
mov
ss
pop
stos
in
pop
add
lea
aaa
popl
mov
add
int
sub
cmc
mov
in
jbe
pushl
mov
pop
mov
into
cwtl
xchg
or
inc
fdiv
aad
add
add
lret
lds
sbb
xlat
mov
daa
ljmp
mov
sbb
mov
pop
hlt
mov
dec
test
dec
out
add
test
adc
orl
mov
sbb
fs
sysenter
adc
sbb
repz
or
ja
mov
push
push
out
jno
out
mov
nop
scas
pop
sub
lret
adc
iret
jnp
filds
rcrb
es
cmp
repnz
push
mov
rcll
imul
push
jmp
in
jae
pop
out
mov
and
in
movsb
sbb
aam
flds
aam
jns
adc
rol
movsb
psrad
inc
daa
subb
cltd
stos
inc
les
rorb
mov
inc
ja
pop
fcompl
pusha
xor
into
mov
in
cltd
fsubp
repnz
sbb
inc
aaa
cld
dec
ljmp
cmpsb
adc
xchg
lahf
fs
sub
je
fsubrp
imul
mov
mov
pop
cmp
xor
sbb
xor
jmp
inc
call
cmpsb
loop
repnz
sub
aam
jns
push
adc
ficomps
je
mov
cwtl
dec
aaa
pop
fs
incb
mov
inc
jno
mov
aad
cmc
roll
gs
and
jecxz
adc
push
sar
lret
push
sbb
mov
cmp
fst
out
mov
mov
enter
pushl
fimuls
movsb
xchg
xchg
mov
stos
jge
addr16
jle
imul
nop
das
jmp
xchg
jnp
and
mov
call
iret
lock
das
ret
adc
out
sbb
out
icebp
ret
xor
lock
cli
mov
test
xadd
push
mov
das
scas
and
inc
andb
cli
sarl
mov
shrb
add
scas
rcrl
sbb
mov
jg
shl
mov
cmp
in
pop
js
lea
and
or
ljmp
sub
pusha
ss
call
clc
outsl
jmp
push
or
jno
in
insl
shlb
movsl
sbb
in
fcmovbe
mov
ja
xchg
push
out
xchg
sub
dec
mov
jle
test
xchg
shlb
mov
dec
push
dec
stos
ja
fldenv
mov
sub
push
or
int
rcll
gs
mov
add
xorb
push
sbb
mov
add
loop
dec
add
in
push
xlat
inc
fcmovb
imul
dec
mov
push
push
je
mov
inc
xchg
mov
fs
sub
jg
lds
add
std
dec
das
dec
inc
sbb
sbb
sbb
subl
sub
cmp
pop
ds
mov
and
mov
inc
xchg
lock
fst
mov
sub
mov
arpl
adc
cmp
scas
std
aaa
cmp
xchg
stos
dec
add
mov
sub
cmp
mov
pop
jo
adc
add
test
dec
or
push
and
shll
xor
xchg
test
or
push
sar
adc
lret
int
jo
xchg
and
fisubl
hlt
scas
lret
in
fcmovne
jno
fimull
xchg
mov
rorb
mov
repz
dec
mov
and
lods
sti
rcrl
pop
mov
aam
sbb
scas
cmp
imul
push
rol
inc
mov
inc
inc
rcrb
mov
mov
scas
dec
inc
movsb
dec
hlt
cld
jge
and
orl
mov
mov
inc
stc
push
pop
mov
out
call
pop
mov
stos
and
in
stc
xchg
lret
jge
and
jbe
dec
jnp
and
jb
hlt
jnp
mov
data16
and
scas
lret
pop
pop
sub
and
xchg
push
push
daa
sahf
cmp
into
data16
jne
jge
and
scas
push
movsb
add
rep
cs
iret
stc
mov
ret
cmp
and
add
stos
std
test
mov
dec
xchg
lea
cmpsl
pop
int3
mov
test
xchg
jp
xor
mov
xchg
into
inc
test
lret
dec
movsb
popf
lods
das
stos
shll
adc
add
or
lcall
jl
jae
jbe
jg
inc
test
xchg
insl
fadds
cld
icebp
paddq
test
mov
fisubs
lret
inc
xchg
sub
mov
mov
pop
sti
lahf
and
xchg
cmp
mov
mov
xor
xchg
add
inc
fwait
mov
cld
shlb
ljmp
dec
iret
and
ss
pop
pop
xchg
outsb
mov
xchg
fildll
ss
jg
or
subb
icebp
sti
push
or
and
mov
in
lea
out
iret
incl
and
jnp
sahf
rcrb
sub
es
adc
arpl
call
xchg
adc
push
pushf
std
cmpsl
adc
imul
lock
rol
sbb
mov
mov
imul
test
ret
pop
mov
cmpsb
rclb
cmpsb
and
adc
jns
sub
pop
add
test
jle
sahf
jl
sub
int
or
in
lcall
jnp
dec
jecxz
sub
mov
arpl
jp
cli
daa
lret
jmp
sub
push
inc
addr16
mov
addr16
inc
cld
sub
push
mov
fcmovbe
mov
lret
dec
inc
mov
push
repnz
daa
iret
sbb
shrl
imul
ret
cmp
push
xor
stos
pop
popa
jns
push
mov
pop
jge
sbb
cmc
outsb
fsubs
cwtl
js
icebp
push
add
push
fnstsw
xor
imul
xor
jns
repnz
xor
test
stos
xor
pop
jg
jge
clc
fnstsw
lcall
and
sbb
test
inc
adcl
ja
mov
or
ja
fistps
pusha
mov
mov
mov
push
jge
lea
movsl
imul
inc
in
test
mov
add
pop
dec
fisttps
jae
jg
mulb
push
iret
lret
sbbb
ret
lret
xchg
xchg
mov
pop
xorb
xchg
push
leave
ja
addr16
gs
sbb
mov
cmp
sbb
jb
xor
mov
push
adc
int3
and
fisubs
push
jns
sub
xor
clc
mov
div
jbe,pt
adc
mov
addb
out
sbb
dec
xchg
push
and
in
repz
mov
jge
loop
leave
xchg
cmp
adc
dec
sub
iret
aaa
loope
aaa
out
inc
sbb
or
cs
pop
lock
hlt
mov
arpl
sti
cltd
ljmp
xor
pop
repz
push
push
or
fisttpl
cmp
ds
in
sub
ret
mov
mov
lods
ret
ret
cmc
push
push
jns
mulb
add
pop
mov
dec
xchg
add
or
xor
cmp
mov
push
lods
inc
pop
push
jne
es
shlb
or
pop
dec
pop
and
push
cmp
test
movsb
sbb
cmpl
xchg
xor
jge
push
lret
clc
ret
or
das
add
into
sbb
jmp
daa
je
push
mov
scas
pop
mov
pop
mov
xlat
out
lret
push
fldl
or
jp
in
inc
clc
icebp
incl
or
mov
ret
cmp
mov
out
xchg
sbb
xor
outsl
cmpsb
inc
imul
and
cmpsb
fbld
loop
pop
xor
fadds
jbe
sub
fidivrs
mov
mov
aad
cmpsb
jge
sub
data16
nop
sti
scas
scas
cmp
lock
jecxz
xchg
sub
les
and
xchg
jle
sti
push
std
hlt
sahf
xchg
mov
mov
adc
jb
lods
xchg
adc
in
or
jecxz
aaa
xlat
aas
hlt
mov
sbb
xchg
mov
jns
mov
repz
push
popa
aam
cmp
or
rol
sub
or
mov
imul
xchg
jae
pusha
mov
pop
adc
sbb
loopne
jo
int
xchg
sti
negl
inc
mov
sbb
mov
hlt
adc
sbb
inc
in
popf
adc
pop
pop
add
out
dec
mov
test
mov
icebp
stos
adc
jno
sub
cs
sub
cs
movb
scas
pop
rorl
call
aam
add
or
pop
pop
pop
out
nop
jns
or
pop
jecxz
sub
adc
xchg
arpl
push
out
mov
loop
movsl
ss
sbb
lret
mov
and
lds
mov
jecxz
sbb
roll
jl
mov
arpl
lcall
sbb
rcll
mov
xor
sub
test
cwtl
movsl
mov
ret
jmp
xor
hlt
adc
shl
ds
sub
jmp
cmp
addr16
inc
or
ds
test
push
jne
test
dec
xchg
adc
dec
xor
movsl
aam
ja
sbb
sbb
dec
dec
sahf
out
lea
cmp
inc
rorl
cmpsl
mov
clc
mov
sub
pusha
jbe
mov
dec
inc
loope
ds
lret
dec
insl
mov
mov
or
dec
adc
aaa
pop
and
adc
pop
mov
js
out
int3
push
pop
jne
and
mov
pop
push
cmpsb
out
inc
shl
add
push
and
mov
sub
xlat
call
push
fidivrl
out
pop
inc
loopne
mov
adc
sbb
std
fwait
repnz
jmp
clc
arpl
fsts
xchg
xor
pop
xlat
mov
aam
mov
xchg
xor
and
lahf
push
mov
cs
repz
lret
mov
xor
cwtl
and
repz
pop
aam
into
xchg
sbb
roll
gs
and
xor
rcrb
ja
mov
sub
lret
in
add
int
mov
adc
add
mov
test
int3
icebp
addr16
shll
cmc
mov
les
cmp
mov
dec
mov
xchg
fstl
scas
fiadds
sub
mov
xlat
out
sbb
test
shrl
mov
mov
in
push
test
arpl
lods
psadbw
lret
jmp
pop
xor
mov
xchg
mov
pop
mov
imul
xlat
and
jae
inc
xor
fst
test
ljmp
adc
stc
xchg
pushw
loope
push
das
xchg
repnz
mov
add
aam
and
mov
cli
mov
imulb
adc
aaa
inc
add
into
sahf
adc
or
daa
cmp
cmp
jno
insb
fs
loop
negl
mov
inc
hlt
mov
or
cmp
cltd
sbb
add
stc
add
in
ret
fistl
add
aaa
std
xor
push
adc
xchg
out
mov
call
daa
push
test
lods
adc
cs
jae
das
enter
mov
je
aaa
test
xchg
fcmovne
mov
lods
icebp
mov
xor
aaa
xor
adc
add
sub
sub
test
add
dec
mov
cli
rorb
fndisi(8087
fisttps
subl
and
mov
push
mov
add
pop
lods
loope
xchg
jg
mov
xlat
push
jae
xchg
add
sub
movsl
mov
mov
psadbw
jecxz
ljmp
or
popf
xlat
inc
stc
cmc
roll
pop
xor
jne
fists
lods
nop
dec
in
or
gs
mov
jl
sub
xchg
push
inc
out
adc
sbb
xchg
adc
aaa
leave
mov
xchg
daa
mov
or
mov
inc
sub
and
jge
push
shl
pop
xor
jnp
and
xor
clc
loopne
mov
aaa
and
xor
jbe
jnp
shlb
fcmovnbe
mov
repnz
jbe
shll
or
add
sbb
xchg
mov
jno
dec
pop
hlt
mov
or
call
push
cmp
stos
mov
push
je
pop
add
mov
inc
xchg
lods
or
lock
insb
or
mov
sbb
mov
push
sti
sub
call
pop
stos
mov
fsts
or
insl
rcrl
jl
icebp
nop
aas
insl
std
in
cld
push
sbb
add
leave
test
mov
bound
mov
jae
pop
mov
rolb
dec
jge
and
adc
in
test
jns
sub
and
cmp
push
imul
pop
jns
mov
sahf
loope
jo
lock
das
inc
push
push
jmp
mov
rclb
mov
or
mov
pushf
loop
adc
xchg
gs
sbb
das
jg
imul
add
push
leave
jl
cld
jb
pop
xor
push
rorl
rorl
dec
cli
addr16
or
mov
movsl
hlt
icebp
mov
pushf
inc
gs
lea
sub
ss
lea
test
xchg
loopne
idivl
fistl
js
adc
and
mov
mov
ds
mov
mov
jmp
movsl
int
add
and
xchg
push
test
xor
adc
adc
sub
xor
aaa
cld
xchg
and
push
out
xchg
popf
sub
sub
mov
imul
data16
mov
add
mov
xor
hlt
sub
call
inc
and
daa
sti
repz
sbb
xor
or
iret
loope
sahf
leave
cmc
jae
lret
lds
pop
sti
out
mov
in
add
and
dec
clc
out
andb
jmp
push
or
scas
or
add
adc
sub
lret
push
into
fs
push
pop
stc
mov
insl
and
jnp
out
mov
filds
mov
das
or
in
xchg
arpl
xlat
push
push
mov
lock
cmp
push
jne
cpuid
inc
xor
push
ss
dec
xchg
andb
push
mov
adc
cmp
loop
sub
push
sub
pop
inc
push
sti
cmp
sti
cmp
pop
shrl
loopne
aas
rcll
cmp
addb
mov
push
leave
ret
inc
lock
subl
sub
shrl
add
mov
test
jge
lock
cli
into
sub
cmp
sub
call
in
arpl
icebp
xchg
lret
lock
fwait
sub
cld
dec
xor
or
scas
daa
sub
aad
cli
xchg
aaa
mov
andl
push
push
aam
mov
data16
sub
mov
movsb
je
imul
pop
packsswb
scas
divl
jbe
repz
xchg
adc
mov
ds
lahf
dec
in
call
push
sbb
xor
aaa
or
xchg
sbb
fcmovbe
pop
dec
xor
inc
aam
btr
mov
adc
rcll
testl
inc
cli
pop
ljmp
adc
push
insl
push
mov
sbb
lods
mov
push
pushf
lock
jne
test
push
or
push
and
inc
mov
pop
in
cmp
sub
lods
repnz
adc
push
mov
stos
ja
fwait
popa
rcrb
out
dec
leave
xchg
cmp
sub
xor
cmp
cmpsl
mov
pop
mov
pslld
fists
fidivl
andb
punpckhwd
xchg
lret
adc
mov
popa
mov
sub
xor
lret
notb
mov
in
movsb
xchg
jo
aaa
sub
ret
lret
dec
pop
andb
adc
je
inc
in
hlt
sbb
ja
xchg
and
repnz
and
cmp
sbb
rcr
jmp
inc
and
sbbl
mov
popa
cmp
cs
ss
ljmp
std
sahf
ja
xor
cld
cmp
mov
cmp
pusha
insb
sbb
out
xchg
addb
dec
int
cmp
jne
adc
ljmp
pop
inc
in
mov
jno
mov
sbb
pop
xor
add
movsb
fstp
mov
int3
insb
mov
xchg
pop
mov
mov
in
or
jae
lcall
xchg
jmp
xchg
loop
jb
mov
mov
insb
sub
lret
cmc
insb
and
cmp
call
jl
jmp
adc
mov
pop
out
fwait
mov
dec
ds
adc
es
gs
daa
inc
jo
pop
repnz
cmpb
enter
or
leave
bound
movsl
daa
outsb
sbb
daa
inc
cmp
pushf
leave
push
or
sbb
xchg
aad
jge
scas
test
cmp
adc
xor
or
mov
add
sbb
or
in
pop
sub
aas
pop
jg
das
jo
jno
fimuls
loope
or
xor
add
out
sub
inc
pop
push
insl
push
or
mov
pop
dec
pop
dec
je
stos
xchg
dec
repz
ret
push
cwtl
inc
fstps
es
ret
pusha
xchg
push
mov
xlat
push
lret
mov
outsb
stc
pop
push
dec
call
add
inc
jmp
mov
jns
cli
push
stos
lds
inc
cld
jns
push
je
inc
aaa
ja
ret
stc
push
adc
cmp
sub
inc
and
das
inc
daa
push
repnz
fs
push
mov
mov
and
add
mov
and
inc
cmpsb
cmpps
mov
xor
out
rol
xorb
testb
imul
aaa
pop
nop
adc
mov
jb
out
mov
cmpsb
cs
jae
out
insl
out
mov
insb
mov
inc
test
fdiv
icebp
xor
pop
gs
popl
jnp
and
negl
movl
jge
jmp
rorb
sub
mov
ljmp
add
add
sbb
call
ss
xchg
nop
xchg
repz
fildl
add
sti
sbb
cmp
mov
and
jno
lret
int
in
and
or
sub
stc
cmp
insb
iret
or
ficompl
dec
dec
pushf
scas
aam
dec
fdivr
mov
pushf
aam
xor
lea
ss
push
dec
ds
and
outsl
fnstsw
xchg
xor
inc
sub
rolb
cltd
gs
fisttpll
ret
adc
xchg
adc
aad
and
fildll
orb
xlat
out
cmpsb
jno
cli
je
xor
mov
imul
push
ds
push
fldenv
cli
or
cmpsl
fsubrp
pop
aad
add
mov
mov
inc
mov
xchg
dec
sahf
aad
mov
adc
xchg
pop
mov
cmp
push
in
imul
mov
xor
int
jmp
in
ficoml
pusha
and
iret
dec
jno
xchg
movsb
loope
test
movl
lea
jl
mov
das
cmp
xor
adc
xlat
push
jmp
sub
int
scas
jg
in
sbb
les
add
jle
int3
das
cmpsl
xlat
jecxz
inc
sub
pop
push
and
dec
ds
inc
xchg
mov
shlb
lock
sub
into
ficomps
rolb
mov
adc
sub
rcl
mov
cli
pop
cs
push
aam
and
ds
in
pop
dec
jne
mov
jns
pop
sbb
mov
pop
lcall
enter
imul
jmp
dec
jo
jbe
push
imul
ss
cmp
rorb
mov
sbb
jb
lds
iret
shrl
rol
fsts
jp
shlb
shl
push
test
imul
iret
mov
cmpsb
mov
pop
adcb
or
stos
hlt
push
int3
or
testb
aaa
nop
lahf
stos
mov
jne
sub
or
dec
cmp
leave
insl
cld
repz
cwtl
sbb
adc
sub
movsl
test
call
leave
js,pt
and
xchg
or
iret
or
in
out
jns
hlt
mov
std
jg
xchg
sbb
adc
clc
repz
mov
mov
inc
cmc
aam
or
cwtl
sbb
repnz
and
clc
int3
inc
or
add
jo
jp
insb
pop
pop
push
clc
int3
fisttps
mov
in
movsb
push
inc
mov
sbb
stc
pop
pop
pop
insb
xchg
out
mov
or
fisubrl
inc
dec
rcrl
adc
xor
aam
aad
adc
sbb
jnp
mov
and
cmc
leave
or
invd
sbb
shll
adc
and
cmc
popa
addr16
sbb
shlb
add
aam
outsb
jae
adc
mov
xchg
clc
xlat
mov
repz
inc
sbb
jge
lcall
sbb
fists
aad
sub
in
cmc
mov
push
std
mov
mov
je
xchg
fstl
ret
jecxz
into
lea
jnp
ffreep
xor
push
repnz
jmp
insl
loop
test
push
mov
lret
push
iret
cmp
rcrl
nop
stos
inc
les
xchg
das
or
sti
or
cs
movsl
dec
mov
mov
jecxz
jp
imul
xchg
sub
xchg
xor
cld
sub
insb
add
ret
icebp
cmc
push
cld
insl
and
sub
sbb
loope
daa
sbb
out
jle
push
add
pop
int
inc
mov
test
push
fildll
fisubrl
std
pop
insb
shlb
and
add
imull
iret
pop
sbb
dec
jmp
push
ret
xor
out
and
out
adc
in
call
dec
repnz
pandn
out
movsl
ret
push
mov
pop
mov
shrb
stc
aad
cltd
js
stos
inc
outsb
mov
loopne
ret
inc
jmp
outsl
mov
jnp
out
xor
jne
pop
jecxz
dec
out
pop
adc
pop
adc
daa
test
inc
addr16
repnz
push
xchg
cmp
mov
das
rolb
push
mov
lock
test
aad
gs
int
dec
call
les
push
xor
or
mov
pop
push
in
negl
mov
std
imul
int
loop
lret
sbb
adcl
mov
test
adc
cmp
movsb
adc
inc
push
mov
dec
dec
dec
out
sbb
adc
xchg
sbb
addr16
clc
je
mov
xchg
add
mov
push
adc
push
jl
mov
adc
push
jg
es
cs
dec
push
pop
xchg
xor
mov
push
hlt
inc
inc
push
stos
adc
adc
divb
rcrb
inc
sarl
pop
repnz
loop
test
gs
icebp
nop
out
sbb
mov
or
movsb
int
rcl
in
stos
xor
pop
cmp
mov
jae
and
dec
dec
dec
outsl
clc
in
std
enter
rcl
insb
xchg
cmpsl
clc
insb
dec
pop
loop
mov
fcmove
mov
push
pusha
scas
inc
call
inc
xchg
test
fdivrs
jne
inc
fadds
add
movsb
lcall
jns
xor
mov
pop
xor
sub
lcall
mov
into
pop
iret
shll
push
out
ret
pop
out
add
sbb
iret
js
xchg
mov
push
in
sub
pop
pop
dec
ficoml
ss
repz
out
pop
sub
and
cmp
xchg
ffree
leave
adc
dec
or
mov
filds
xor
xchg
jnp
lret
add
in
push
bound
insl
or
data16
cs
hlt
scas
hlt
sbb
fisubrs
daa
in
and
pcmpeqd
mov
xchg
sbb
mov
int3
jne
dec
mov
ss
push
sbb
push
mov
stos
dec
mov
mov
adc
push
fs
js
iret
movsl
ret
aad
mov
adc
dec
into
adc
in
movsb
leave
repnz
jbe
pop
repnz
loop
test
push
lods
stos
rcll
pop
inc
push
push
push
and
sbb
jbe
xchg
inc
push
inc
aaa
sub
sbb
lret
repnz
dec
push
dec
dec
and
fmulp
jae
or
jns
sbb
aam
insb
decl
out
addb
mov
cmpl
xchg
insl
mov
cli
cwtl
jb
push
sahf
push
jge
loopne
pop
les
lret
sbb
push
inc
cmpsb
das
sub
imul
jecxz
shll
mov
ret
cmp
and
dec
or
sub
insl
cmp
mov
mov
dec
and
cs
xchg
ret
es
xor
sbb
cmpsb
shlb
in
push
daa
test
roll
scas
sahf
and
cwtl
rcl
movsb
pop
sub
out
jne
ja
ja
and
lret
and
enter
adc
add
inc
sub
sbb
sbb
jmp
jg
lods
sub
icebp
xchg
push
mov
scas
fidivl
sbb
pop
pop
mov
test
jge
cwtl
clc
data16
dec
xlat
mov
jno
sbb
mov
in
add
notb
or
mov
subl
mov
mov
lcall
rorb
mov
mov
push
lods
leave
xchg
push
imul
and
jnp
pushf
mov
imul
pop
add
jge
test
cmpsl
sub
in
lret
hlt
fdivl
nop
cmp
pmaxub
jge
xor
cmp
xchg
sub
jae
add
shl
and
pop
mov
fmull
dec
cld
aaa
mov
xchg
mov
loop
jbe
pop
rolb
xchg
sbb
lahf
out
inc
pop
enter
in
test
fs
or
cmp
add
push
xchg
pop
jmp
lahf
jae
push
jg
aaa
outsb
adc
push
mov
dec
popa
fisttpl
nop
xchg
loopne
hlt
jecxz
pop
leave
cwtl
aaa
mov
cmpsl
sti
pop
or
push
mov
or
xchg
push
xor
in
push
cmp
fs
sub
fildll
inc
cmp
or
rcr
insb
mov
cld
mov
in
or
mov
lret
cmp
pop
jg
fyl2x
and
movsb
xor
mov
push
cmp
xchg
or
sbb
cmc
clc
fsts
and
push
sbb
mov
xor
inc
dec
or
xchg
or
inc
add
xor
js
outsl
jge
inc
fsubrl
scas
push
fimuls
out
iret
inc
pop
fisttpll
repnz
ljmp
cmp
xlat
ljmp
fists
push
jmp
mov
lret
je
fwait
daa
mov
sbb
adc
and
sub
add
daa
sub
and
movsb
lret
and
lret
ds
add
enter
xorb
xchg
inc
push
arpl
call
jno
mov
inc
iret
rcll
and
xor
add
cmp
mov
cmpsb
ret
pop
sub
mov
mov
cmp
lret
stc
jmp
xor
mov
iret
fdivp
gs
ja
xchg
mov
xchg
dec
jb
pop
cld
outsl
int3
xchg
arpl
fsubrl
jg
jo
and
outsb
jno
cmp
push
daa
repnz
dec
mov
test
cmc
inc
mov
popf
and
add
sbb
sub
lods
pop
aaa
iret
clc
sub
inc
mov
mov
rdtsc
out
mov
ljmp
sbb
andl
fwait
sarl
push
adc
mov
fs
fists
shll
rcll
in
inc
or
cs
ss
jecxz
jge
add
aas
push
dec
jmp
cmp
cmp
decl
fbstp
out
ja
sub
out
decl
test
push
lods
jb
cmp
out
jmp
out
daa
fiadds
pop
add
lock
sti
mov
sti
lods
mov
sti
xor
scas
ret
inc
ds
dec
add
adcb
mov
adc
mov
filds
es
add
pusha
hlt
sub
ja
xchg
or
mov
insb
cmp
pop
out
cli
sbb
add
xor
xchg
add
mov
scas
ljmp
aaa
push
xor
xchg
pop
ret
inc
lods
push
out
and
cmpsl
daa
addr16
test
nop
adc
and
add
or
sti
pushw
das
rolb
js
mov
pusha
mov
lock
insb
mov
push
es
ret
add
loop
ret
outsb
je
insl
sbb
mov
push
xchg
inc
jmp
lret
les
xor
sbbl
fists
addr16
mov
andb
push
fisttps
push
ret
push
bound
and
mov
push
jno
mov
and
pop
mov
lcall
sbb
add
insl
xor
add
fistl
std
lea
test
push
stos
popf
std
imul
jo
push
push
nop
xchg
aam
cmc
incl
lods
ret
dec
sbb
sti
pop
mov
fwait
dec
jae
cli
jnp
scas
pusha
xchg
jmp
dec
lcall
sub
cmpsb
imul
xlat
mov
adc
pop
out
nop
pop
ret
mov
cmp
cmp
sub
adc
fstpt
or
mov
xchg
mov
mov
add
dec
mov
rorl
ret
add
jmp
inc
adc
mov
push
loope
imul
and
lretw
cmp
test
in
xor
rolb
pop
mov
and
push
jl
xchg
addr16
popf
dec
pop
cmp
push
lahf
pop
notl
or
mov
fmull
outsl
fnsave
mov
into
xchg
jge
xchg
ljmp
imul
sub
inc
jge
dec
iret
lret
data16
or
pop
push
repz
fucomip
fidivrl
in
xchg
pop
inc
mov
mov
lret
mov
fidivrl
daa
jno
and
pop
nop
mov
cmp
dec
mov
dec
dec
xor
test
repz
mov
and
imul
cmp
test
inc
notl
mov
jno
xchg
shrl
add
pop
jnp
and
pop
inc
and
ret
inc
inc
jg
jne
pop
push
dec
jmp
push
imul
scas
xor
std
pop
imul
jmp
xor
xlat
dec
rorb
fistps
enter
stc
imul
jno
push
and
cli
push
xorl
das
and
cmp
push
jmp
xor
sbb
jg
push
jns
lahf
push
or
stos
imul
dec
int3
xchg
shrb
pop
imul
adc
adc
shrl
pop
and
push
mov
dec
negl
and
scas
iret
mov
sbb
ljmp
loopne
ja
mov
call
in
gs
cmpsl
jo
xor
enter
mov
mov
adc
pop
roll
add
mov
mov
add
cmp
xchg
inc
in
sbb
push
test
sbb
xor
xor
mov
cmp
mov
jmp
arpl
pusha
out
subb
xor
fs
add
cs
in
mov
into
jo
sub
cmp
add
test
push
outsb
in
and
sub
add
xchg
cmpsl
scas
push
inc
dec
push
xor
xchg
xchg
pop
cmpsl
adc
dec
daa
xor
sub
jmp
mov
mov
lods
idiv
inc
push
push
add
or
ficompl
sarb
cltd
clc
add
push
jp
out
push
and
sub
sbb
and
jp
sbb
cmp
adc
jbe
push
in
xchg
xchg
movl
arpl
call
mov
mov
jns
cmp
lock
mov
xchg
adc
sbb
push
xlat
fwait
test
xor
push
in
or
sti
scas
das
addr16
sub
cs
sbbb
cmp
adc
addl
bound
sahf
mov
ret
jbe
mov
inc
pop
in
gs
cmpsb
enter
lahf
push
xchg
inc
out
iret
sbb
sbb
icebp
cmpsl
mov
xchg
in
enter
pop
dec
imul
mov
xor
xchg
and
xor
xchg
je
mov
lods
adc
inc
and
lds
popf
jo
aas
mov
clc
adc
pop
repz
cli
sub
test
stos
pop
lds
sahf
ja
mull
imul
ja
test
push
dec
add
ret
hlt
leave
jnp
ljmp
leave
add
popf
icebp
call
mov
mov
mov
int3
mov
movsl
jo
jl
push
xlat
jmp
push
sti
sbb
xchg
inc
or
iret
add
fadd
xchg
jb
js
push
push
inc
stos
std
xlat
lods
xor
add
sbb
xchg
lret
cmp
mov
sbb
dec
inc
or
fiaddl
idiv
pop
mov
cmp
fbstp
repz
xor
mov
fwait
and
lock
loope
daa
xor
scas
dec
mov
test
jecxz
sbb
in
lret
xchg
icebp
sub
movsl
psrlq
lret
faddl
pop
dec
jae
arpl
int3
dec
push
add
and
fcompl
je
enter
mov
pop
pop
adc
jne
add
or
sbb
add
in
rclb
movsb
imul
and
pop
mov
insb
andb
pop
xchg
jo
cmpsb
mov
add
jle
xor
cmpsb
xchg
insl
jg
les
subl
lcall
push
ret
and
in
int
mov
cmp
add
repnz
int3
fucomi
lock
int
cmp
cmp
xor
cmp
nop
fcom
adc
daa
test
and
fcmovnbe
roll
lret
jo
dec
jge
lods
es
std
pusha
mov
xchg
push
out
fdivrs
inc
cmpsl
sbb
push
fisubl
popf
shl
xchg
or
sbb
xor
pop
daa
add
fs
jecxz
roll
add
xor
out
cs
les
cmp
in
xor
inc
push
xor
popf
out
loop
push
mov
sub
push
dec
cmp
icebp
loopne
push
repz
xor
bound
inc
sbb
xchg
mov
add
in
and
aaa
ja
ficoml
pop
pop
call
sbb
dec
movsb
repnz
out
daa
and
mov
adc
adcb
mov
adc
mov
out
imul
mov
sub
out
icebp
inc
xchg
pushf
cld
xchg
pop
call
jp
sub
adc
and
and
enter
in
xchg
addb
in
orb
aas
roll
xchg
push
mov
daa
ja
dec
rsm
sbb
mov
call
in
pop
ds
std
push
xor
sbb
aad
sbbl
notl
fcmovnb
in
mov
out
add
fwait
and
ret
popf
je
out
or
je
stos
and
xor
sub
data16
jmp
pop
sbb
subb
add
pop
jnp
test
pop
insb
and
lds
insb
out
xchg
aas
mov
jns
dec
sbb
mov
test
jmp
imul
push
mov
fadd
aam
or
mov
mov
iret
iret
negl
push
sub
or
gs
xor
jl
or
leave
adc
cmpsb
inc
sub
adc
movsl
add
jp
out
lret
sti
mov
jo
test
xchg
push
cmp
jmp
incl
in
std
xchg
cmpsl
push
dec
jns
pop
sbb
bound
push
push
std
mov
test
arpl
shll
lahf
mov
movsb
shlb
xor
loop
test
push
push
es
adc
mov
filds
mov
push
pop
shll
ja
ss
inc
dec
testl
lds
sbb
movsb
subb
add
push
mov
sub
fdivs
iret
and
pop
sbb
push
pushw
ds
cmp
popa
int
sbb
add
or
jb
std
adc
inc
pop
inc
jecxz
pop
stos
cs
add
mov
pop
pop
fbld
mov
pop
repnz
mov
in
arpl
mov
clc
jle
xchg
sub
jge
mov
adc
xchg
sub
pop
mov
or
inc
mov
or
ficoml
mov
in
pushf
adc
pop
inc
pop
lea
scas
sarl
out
ljmp
sarb
mov
mov
out
jle
in
or
sbb
jns
imul
cmp
out
cli
jmp
ss
daa
insl
fisubs
fdivl
xchg
jge
or
bound
and
jge
or
jb
daa
jge
or
jbe
enter
sub
jl
or
sub
sub
lea
or
sub
pop
sub
push
pop
lea
xlat
aad
enter
inc
or
data16
adc
jno
repnz
jl
or
mov
jo
xchg
or
adc
sbb
shlb
or
push
jmp
and
lret
jl
or
jmp
and
jg
or
dec
jmp
es
and
jg
or
iret
out
jnp
icebp
push
adc
cltd
cmpsl
xchg
sbb
mov
test
nop
jo
xchg
mov
insb
sbb
push
sti
ret
and
out
mov
sub
subb
xchg
pop
xchg
mov
adc
adc
insb
lcall
and
jno
or
push
in
push
mov
and
mov
out
push
inc
cmc
mov
jo
fiadds
ds
sbb
push
xchg
call
ja
imul
out
or
lds
call
aas
cmpsb
leave
cmp
ret
aam
nop
aam
mov
into
movlps
add
shrd
aam
or
or
adc
pop
push
pop
inc
xor
into
iret
lea
mov
les
orb
mov
add
mov
imul
enter
jl
roll
sbb
stos
movsb
pop
scas
iret
mov
sti
lock
sub
and
cmpsl
cmp
lock
ss
lds
ret
xchg
pushf
clc
rorb
lahf
pop
hlt
clc
je
fs
ficompl
data16
dec
pop
push
push
push
push
xchg
add
roll
je
jo
lods
jge
cld
mov
sti
push
scas
sti
jg
inc
xchg
aaa
jge
dec
jno
pop
push
xchg
imul
mov
mov
adc
xlat
inc
arpl
je
cmp
orb
xchg
xchg
leave
jl
adc
adc
cld
sbb
push
sbb
inc
inc
loop
stos
loope
scas
out
stos
push
push
das
add
idivl
test
xchg
hlt
push
in
rcll
pop
ljmp
push
rorl
out
dec
mov
mov
inc
jp
pop
push
bound
nop
cmp
pop
push
sub
and
mov
inc
pop
stos
addr16
cmpsl
dec
xchg
je
mov
mov
loope
push
cmp
xlat
popf
scas
inc
insb
inc
mov
push
sbb
xchg
icebp
inc
inc
and
and
adc
push
mov
shll
inc
sub
inc
aam
mov
lods
mov
or
pusha
mov
xlat
lahf
mov
nop
gs
jp
outsb
jmp
iret
arpl
sbb
dec
in
jl
sub
and
pop
xchg
bound
push
mov
rcrb
jecxz
test
mov
or
arpl
and
inc
rclb
popa
pop
and
mov
or
addl
xchg
adc
sub
dec
cltd
push
stos
aad
push
nop
fwait
cld
pusha
dec
int
mov
xchg
mov
fldt
into
mov
adc
pop
xchg
fadds
xor
xor
inc
mov
fdivrs
sahf
sbb
outsl
cld
sbb
xor
jns
xchg
push
pop
mov
jbe
xchg
sub
mov
test
test
loope
jp
lahf
sub
popa
sbb
sub
in
pushf
push
cmp
flds
mov
and
int3
dec
shlb
mov
push
mov
push
scas
pop
andb
enter
mov
imul
pushf
sbb
add
addr16
call
loope
inc
inc
ss
jecxz
cld
scas
dec
and
xor
jae
fdivrs
data16
cmp
subl
movsb
inc
repnz
and
push
sub
lret
add
aam
imul
sub
outsl
adc
paddd
sbb
adc
mov
aam
mov
push
nop
mov
mov
xor
sub
rcrb
repnz
pop
stc
xchg
mov
sbb
rolb
xchg
cmpsl
xor
pop
shlb
xchg
imul
jecxz
xchg
lods
mov
xor
xor
mov
jbe
dec
or
fisttps
in
cmp
mov
leave
adc
cli
mov
outsb
lods
mov
pop
push
pop
popf
addr16
jne
hlt
and
and
pop
dec
les
mov
lds
cmc
hlt
add
test
out
lcall
nop
data16
add
test
insl
std
push
in
mov
inc
mov
das
or
arpl
pop
jecxz
adc
dec
das
daa
lret
push
mov
mov
sbb
cmc
jbe
testl
pop
aad
imul
ss
icebp
inc
inc
aam
push
xor
test
xchg
and
shr
bound
xor
mov
pop
fidivrl
sub
and
addr16
jg
sbbl
pop
sbb
inc
das
ret
ret
mov
cmovg
hlt
mov
lret
add
inc
push
sbb
fstps
and
mov
xchg
aas
outsl
xlat
daa
xchg
adc
mov
loopne
lock
ljmp
test
test
inc
cwtl
iret
nop
mov
fistps
dec
ficoms
pop
dec
dec
sub
adc
mov
in
inc
rolb
lds
push
inc
shlb
insl
push
out
xor
popa
jp
mov
mov
test
shlb
xlat
xchg
cld
fs
cld
hlt
pop
xchg
cmp
xchg
imul
xor
notb
dec
pop
mov
fildll
aas
fbstp
push
push
sarb
mov
xchg
inc
xchg
xor
enter
enter
mov
fistl
mov
hlt
cmp
push
leave
sahf
pop
pop
cli
jecxz
jne
jge
mov
out
xchg
insl
fwait
inc
jns
and
fsubs
mov
push
les
rcl
adc
pop
test
cmp
lds
inc
in
or
jecxz
negb
and
cltd
cltd
lahf
rcrl
scas
roll
mov
js
std
jae
insb
dec
enter
add
cltd
inc
cmp
mov
push
sbb
mov
lahf
in
fs
push
lock
sbb
ss
test
call
cmp
fadd
add
pop
scas
frstor
push
mov
fnstsw
mov
lahf
es
rcrl
jbe
dec
sub
sbb
jge
xchg
call
call
xor
cs
dec
outsl
mov
sbb
fidivs
ljmp
mov
mov
pop
mov
sbb
imul
mov
xchg
out
add
jno
sub
add
xor
xchg
jns
test
adc
mov
imul
jo
xchg
sub
mov
jns
negb
mov
sub
outsl
aaa
jge
dec
aad
inc
mov
push
sbb
add
shlb
pop
or
dec
les
xor
mov
pusha
add
add
sbb
shlb
cld
and
ja
jge
aam
push
sub
xlat
scas
and
scas
fdivrl
inc
mov
push
pop
mov
out
jne
test
mov
jbe
push
pop
scas
push
in
xchg
xchg
std
xchg
out
clc
ja
jge
mov
repnz
inc
aaa
jecxz
add
decl
mov
pop
enter
add
pop
ss
mov
sub
pop
popa
adcl
sub
xchg
xor
lock
dec
mov
push
test
mov
jecxz
ret
inc
fldl
cmpl
ja
data16
sbb
imul
cs
mov
xor
sti
out
jmp
mov
sbb
lret
shll
aas
popa
std
mov
cmpsb
loop
stos
dec
cmpb
in
addb
sti
incl
sbb
jg
add
in
add
loopw
inc
dec
jns
sub
out
mov
dec
adc
setp
add
push
shlb
pop
cmp
sar
jb
sar
mov
out
mov
js
fs
popf
outsl
stos
xor
popa
std
pop
not
adc
out
xchg
fwait
jb
test
xor
mov
daa
ret
cs
bound
inc
xor
xor
insb
in
jbe
shr
sahf
pop
out
dec
faddl
out
xchg
roll
shll
xchg
dec
mov
and
xchg
pop
pop
jle
mov
popf
add
lods
ret
fwait
dec
ljmp
cltd
dec
jl
adc
orl
ljmp
test
mov
or
or
dec
ret
jbe
test
fsubrs
mov
adc
lods
xchg
jnp
orb
jae
cli
mov
into
pushf
cmc
lret
ret
jbe
xchg
mov
sub
sub
or
mov
push
and
addr16
js
jno
push
lret
daa
mov
jnp
sub
pop
dec
sbb
push
xor
insb
fmull
xlat
in
inc
andb
add
adc
pop
push
mov
push
adc
stc
int
mov
into
mov
fnstenv
iret
sbb
stc
sub
sub
into
jmp
xor
cli
call
cmpsl
mov
in
xchg
pop
lds
inc
sbb
aam
push
notb
sbb
cmp
inc
or
int
outsl
dec
add
inc
das
cld
lret
ja
mov
sbbb
push
lds
mov
sbb
aas
outsl
in
or
mov
mov
movsl
loope
dec
adc
addr16
repnz
in
jb
fwait
or
push
cmp
jge
fldlg2
cmp
jg
dec
pop
cmpsb
out
or
xor
sub
cmp
push
sbb
mov
sbb
out
or
ljmp
mov
in
sub
mov
sub
popa
sub
adc
jbe
cli
cvtps2pi
xchg
in
pop
test
adc
jnp
dec
jle
xchg
pop
imul
push
cmp
or
mov
rorb
xchg
mov
mov
cwtl
xchg
cmp
jmp
movsb
addb
add
pop
popf
mov
or
adc
xchg
xlat
popl
pop
ja
inc
add
jo
je
xchg
mov
mov
insl
pop
and
cmp
and
pop
pop
scas
push
addr16
xor
cmpps
inc
scas
std
mov
repnz
in
push
mov
cmc
jp
outsl
mov
test
out
test
lods
inc
dec
xchg
in
push
mov
and
mov
movd
fcmovnb
xchg
add
jnp
repz
xchg
icebp
inc
jmp
movsl
inc
sbb
sbb
add
in
mov
sahf
pusha
aam
mov
leave
jo
stc
jle
adc
inc
hlt
xchg
cltd
inc
xchg
push
cmp
mov
loop
loop
test
push
pop
ret
jg
mov
adc
jg
les
movsb
icebp
jno
xor
or
movsb
jg
cmp
inc
adc
mov
insb
sbb
jns
movsb
mov
ljmp
fxtract
icebp
mov
fstpl
movsb
lcall
mov
and
inc
sub
xchg
daa
mov
mov
add
leave
jmp
or
pop
xor
dec
ja
lea
dec
fwait
mov
in
and
in
or
es
xchg
mov
lahf
movnti
arpl
fnstsw
push
stc
pusha
lahf
pop
aam
out
pop
addr16
jl
sbb
lea
jge
rol
xor
xor
sbb
std
mov
xor
adc
dec
mov
and
mov
test
rclb
inc
loop
imul
test
pop
dec
in
cmpsl
mov
in
in
test
add
jle
add
mov
push
adc
mov
orl
sbbb
fstpl
out
ret
ss
mov
sub
sbb
int3
cltd
testb
mov
xchg
mov
in
je
push
mov
inc
popa
jle
orl
cmp
sar
shlb
mov
push
mov
inc
into
add
and
mov
imul
xchg
cmp
dec
xchg
jecxz
fwait
pop
adc
cmp
push
jp
lock
addr16
pusha
mov
mov
insl
inc
shll
aad
adcb
int
adc
cmp
cld
mov
cmp
es
add
pop
xchg
xchg
arpl
xchg
rcrl
adc
pop
lods
and
movsb
xchg
xchg
push
out
adc
out
and
inc
std
notl
lret
xchg
dec
outsl
sbb
mov
cmp
es
leave
movsb
or
mov
clc
pop
pop
ja
xor
mov
test
push
ljmp
out
mov
inc
call
mov
fwait
mov
lcall
adc
or
sbb
fdivrl
xlat
inc
and
add
pop
into
int3
movsl
mov
insw
lock
or
ret
mov
pop
hlt
sbb
sbb
and
lret
xlat
pop
adc
inc
out
jbe
outsl
jecxz
xor
jmp
push
in
mov
jle
mov
mov
inc
outsl
xchg
popa
mov
dec
insl
sub
test
in
rcrl
xor
mov
xchg
ljmp
enter
or
mov
test
mov
sbb
je
out
rep
jnp
mov
arpl
mov
repz
loop
dec
je
insb
incl
inc
rolb
adc
cmp
out
and
les
in
cmp
push
mov
sub
inc
mul
loopne
pop
imul
pop
cwtl
xchg
leave
rol
or
and
sbb
pop
xorl
into
fnsave
mov
int
cmp
xor
xlat
mov
je
push
add
fistps
sbb
addr16
in
imul
femms
repnz
sbb
ret
cli
inc
add
dec
pop
das
or
add
xor
ret
push
jmp
sbb
or
xchg
or
xchg
xchg
out
and
imul
into
push
mov
mov
std
in
mov
xchg
lahf
mov
cld
cld
jo
lods
mov
pop
ret
nop
repnz
and
jmp
aam
xchg
int3
arpl
loop
and
rorb
add
xlat
bound
stos
mov
inc
cmp
mov
inc
jmp
mov
adc
dec
adc
cmc
mov
mov
test
inc
push
lret
add
stos
roll
out
fs
aam
js
push
popa
das
and
sbb
cmpsb
sub
push
inc
rcl
jns
enter
mov
mov
test
movsb
pop
mov
push
mul
ficomps
cli
pusha
cld
jmp
push
cmc
push
scas
lea
pushf
xchg
mov
std
cmp
xchg
mov
pop
out
lahf
not
icebp
ljmp
rolb
ljmp
and
cmp
cmpsb
aam
mov
out
mov
xor
sbb
jl
mov
xchg
repz
pop
decb
mov
rcrb
xor
jmp
je
mov
loop
jbe
ljmp
mov
dec
cli
aam
jae
mov
xchg
scas
lcall
jbe
add
out
stos
shll
lds
sbb
pop
repz
data16
nop
xor
dec
movsb
sbb
xor
inc
jbe
push
dec
les
xchg
leave
pop
insb
outsl
aaa
gs
mov
subb
xchg
or
sbb
gs
jp
or
enter
adc
inc
mov
fs
sar
xchg
jno
mov
cld
jne
aaa
jnp
incb
aaa
dec
jae
xor
ret
mov
out
jle
adc
test
lock
mov
add
add
mov
roll
inc
arpl
popa
cld
inc
hlt
dec
aad
add
ds
aad
jno
in
add
das
jle
aam
adc
push
sub
adc
cmp
in
push
mov
xor
je
jp
or
or
in
ljmp
call
sub
and
dec
sahf
je
aam
xor
and
ds
add
mov
pop
sti
movsl
fidivs
mov
mov
cmc
cmpsb
jb
adc
xor
dec
or
in
and
add
mov
mov
or
je
inc
push
dec
mov
cld
orb
lock
sub
push
adc
scas
daa
jge
in
sarl
arpl
gs
lock
xchg
aad
dec
inc
imul
or
inc
insl
push
or
xlat
mov
cltd
mov
mov
dec
push
and
xorb
iret
fistps
xchg
xchg
aaa
es
ret
xchg
fildl
imul
mov
and
xor
test
gs
mov
rcrl
ljmp
cli
pusha
inc
scas
lret
test
lods
insb
jo
push
or
ja
dec
out
test
and
add
jbe
ds
lods
lds
xacquire
scas
sub
cld
aad
add
lock
stos
fcomi
aaa
in
out
jge
jecxz
nop
and
arpl
andl
shrb
ret
rorl
xchg
push
jbe
mov
into
std
orl
push
rclb
pop
les
inc
test
jp
sub
popf
mov
xchg
test
lret
stos
ficoms
arpl
xor
loop
enter
mov
xor
mov
mov
jg
ret
iret
jge
push
out
pop
scas
out
cmp
stc
lea
jle
arpl
jmp
aaa
lret
fs
sub
jns
loopne
stos
sti
inc
mov
out
or
inc
adc
add
stc
mov
dec
dec
pushf
cmpsb
mov
adc
nop
gs
cwtl
fdivrs
sti
cltd
dec
dec
aad
cmovbe
jae
inc
dec
mov
fldcw
sbb
cld
xchg
adc
push
inc
dec
loope
sbb
iret
add
fidivl
out
rcrb
test
daa
add
loop
adc
negb
ss
hlt
xor
lds
mov
or
in
xchg
test
push
push
lods
fs
add
xor
cmp
xchg
mov
or
add
pop
cmp
fistps
jne
cli
push
and
lods
xor
sub
lahf
lret
adc
insl
push
sbb
gs
cmp
ret
subl
repz
pop
mov
inc
xor
jp
int3
and
or
jne
ret
iret
mov
rorb
mull
cmp
jge
add
mov
push
fwait
xor
jl
aad
movsb
lret
clc
xchg
add
lahf
xchg
ja
jle
adc
jge
xlat
jo
test
jo
rcll
outsl
mov
mov
imul
jnp
or
or
rcrb
inc
outsl
mov
cmp
mov
xchg
lret
imul
xor
mov
sub
dec
dec
in
dec
pop
lock
dec
enter
cmp
aam
int3
adc
jl
push
cs
xorb
orb
std
or
adc
aaa
jae
lods
frstor
insl
stos
mov
aas
sub
aam
mov
fwait
pushf
fstpt
mov
idivl
xor
test
iret
dec
push
push
mov
or
inc
push
cmp
pop
jo
xor
fwait
je
push
cmp
icebp
sub
mov
jne
cli
jo
sahf
movsb
pop
pop
push
addr16
popa
in
mov
cmp
out
xacquire
jecxz
sahf
adc
imul
or
aad
dec
inc
scas
int
and
jae
out
scas
pop
stc
add
jae
xchg
fadds
scas
dec
pop
hlt
outsl
ja
test
push
icebp
rclb
insl
out
xchg
sti
mov
and
and
push
adc
outsl
mov
aad
jmp
arpl
xchg
inc
outsl
sbb
out
cmp
mov
pop
xchg
xchg
cmc
lret
mov
cmp
sti
scas
pop
popf
xchg
std
pop
sbb
dec
sub
push
ret
add
jnp
push
jg
lret
xor
test
xchg
xlat
sti
mov
test
pushf
mov
or
test
lock
rcrb
push
xchg
int
jle
sbb
adc
adc
xchg
mov
and
repz
dec
lods
inc
inc
add
or
mov
cld
orb
es
adc
enter
ret
testl
repnz
repnz
fcomi
xlat
cmpsb
sbb
mov
es
xchg
jno
dec
sarb
dec
xchg
mull
xchg
into
push
cmpsl
jmp
mov
test
xchg
ret
mov
lret
lock
xchg
movsb
pop
outsb
cmpsb
scas
jmp
sahf
pop
or
inc
stc
or
xorl
test
movsb
sub
jno
aam
jg
rorb
fs
into
jne
cmp
xchg
je
mov
sub
shll
or
aad
leave
xor
jnp
int
lret
push
out
mov
fs
mov
iret
mov
or
mov
pusha
jg
and
push
pop
rorb
or
negl
push
test
insl
and
sub
bound
or
sub
jo
cmpsl
xchg
adc
in
test
cld
xchg
sbb
jbe
xchg
dec
xor
mov
mov
das
inc
pop
xchg
sbb
mov
repnz
and
ds
pop
sarl
mov
mov
cmc
lods
das
pop
roll
aam
sub
mov
popa
adc
repnz
jne
mov
movsb
lods
repnz
in
dec
rcr
sub
je
fidivs
hlt
mov
mov
loope
fwait
mov
pushf
mov
ljmp
ljmp
mov
adc
cli
sbb
out
out
mov
scas
outsb
mov
adc
test
aam
in
stos
divl
inc
xor
or
lods
or
push
cld
fucompp
cmp
cmp
repnz
in
in
test
and
cmp
xchg
push
dec
xor
test
rcl
popf
cmp
jp
fidivrs
cmp
ss
in
mov
pop
xlat
add
nop
loop
inc
xchg
mov
das
pop
mov
xor
out
jle
shll
lock
dec
ljmp
jnp
push
or
test
divl
out
sub
cli
inc
cld
rcr
mov
add
test
icebp
jp
sti
lods
ret
outsb
adc
sub
push
cmp
xor
add
mov
mov
adc
sbb
into
inc
sbb
and
dec
push
xor
inc
fxtract
dec
adc
ds
adc
gs
loop
sbb
into
fisubs
mov
inc
dec
mov
ficoms
movsb
mov
in
in
lock
and
fbstp
jp
je
mov
pop
inc
or
lods
mov
xchg
aaa
fisubrl
mov
in
and
js
push
mov
dec
mov
mov
push
jmp
inc
aam
fisubrl
scas
xchg
rorb
adc
rolb
ds
rorl
in
fisttpll
shl
inc
xchg
sub
push
and
adc
loop
jecxz
mov
jo
mov
xlat
mov
clc
pushf
and
repnz
jnp
outsl
xchg
mov
xchg
pop
loop
shrl
std
fstpl
ja
mov
xchg
and
add
xor
lahf
mov
dec
pop
dec
shrb
or
clc
cmp
mov
clc
adc
cmp
sub
lret
xchg
test
xor
xchg
lret
pop
mov
addb
mov
fdivrs
and
sub
jno
push
inc
sbb
cmp
adcb
mov
xor
sub
adc
sub
fmuls
rclb
adc
sahf
sbb
push
ret
xchg
sub
sahf
lods
iret
call
cmc
shr
mov
mov
or
testb
orb
mov
or
inc
xor
outsl
push
sub
fwait
add
orl
sbb
mov
xor
push
into
cmp
xor
push
fisttpll
sbb
imul
mov
sarb
call
or
sub
lahf
das
and
popf
sahf
and
outsl
fimull
data16
subl
lock
cmc
mov
mov
rcrb
jo
cmp
pop
ret
out
push
arpl
inc
imul
xor
mov
dec
push
popf
mov
in
je
cmpsl
jp
mov
stos
xchg
mov
cs
lret
ss
push
leave
in
add
fsubrs
cmp
jno
xor
xchg
fsubl
and
subl
popa
mov
inc
daa
push
and
sbb
int3
mov
mov
push
decb
and
out
or
pop
dec
mov
aam
movsl
stc
mov
das
loope
add
outsl
repz
fmull
repz
cmp
call
xchg
push
jnp
xchg
push
sti
loop
mov
mov
arpl
or
push
gs
jmp
xlat
das
aaa
mov
test
addr16
leave
xchg
and
cmp
add
xchg
cmpxchg
inc
pop
jle
fisttpl
push
aas
decl
mov
and
mov
pop
fstp
leave
dec
mov
mov
sbb
movsb
cmp
outsb
mov
mov
sub
cmpsl
mov
out
imul
mov
ljmp
in
into
cli
inc
mov
inc
fimuls
cli
pusha
fiadds
push
faddl
fbstp
fisttpll
dec
jne
cmp
push
pop
fwait
jbe
xchg
add
xchg
mov
add
inc
mov
enter
in
leave
add
enter
cmp
mov
mov
xchg
std
pop
mov
icebp
aam
push
xchg
out
sbb
decb
les
adc
jnp
inc
out
fldcw
or
adc
jmp
sub
cltd
lret
pusha
sbb
pmullw
cmpsb
mov
retw
sbb
sar
adc
and
push
lock
xor
call
cld
leave
jno
cmp
cmp
push
pop
ss
daa
dec
repnz
cwtl
enter
popa
dec
or
call
lahf
add
mov
add
pushf
add
xor
pop
jmp
das
sub
loop
pusha
in
arpl
imul
scas
xchg
jmp
pop
movsb
enter
add
add
push
inc
jne
vmread
sbb
sbb
jno
xchg
lahf
aaa
sbb
imul
cmp
inc
lock
mov
cmp
out
into
push
adc
dec
adc
pop
inc
in
aam
pop
push
mov
push
scas
loope
scas
push
cmp
or
mov
add
dec
test
pop
popa
mov
mov
or
dec
inc
or
dec
mov
stos
mov
arpl
leave
js
mov
rolb
roll
scas
ss
inc
sbb
or
pusha
mov
mov
lahf
mov
cmp
daa
dec
out
jge
cmpsl
lret
ja
jl
test
mov
scas
lret
jl
jne
rcrb
inc
out
add
push
sahf
pop
fcmovnb
lock
xor
inc
iret
lea
fcomps
and
shl
mov
xor
mov
push
cmpsb
ret
cmp
cmp
inc
ds
addr16
dec
mov
xor
addr16
std
lret
xor
cmp
enter
xchg
pop
loopne
adc
sub
loope
fs
sahf
xchg
jle
bound
sbb
inc
repz
sbb
mov
or
inc
cmp
cmp
ljmp
repz
sub
xchg
dec
mov
pop
jg
mov
cli
push
hlt
mov
ljmp
inc
pusha
lds
push
hlt
xchg
sbb
enter
mov
fwait
cmp
stos
mov
inc
test
mov
push
stc
xchg
aad
or
push
dec
das
outsl
mov
sbb
sarb
add
sub
and
dec
int3
or
enter
bound
ss
mov
xor
xlat
xor
pop
stos
adc
cld
ss
xor
in
jl
xchg
out
dec
int
mov
in
les
push
mov
mov
push
out
mov
jg
add
pop
das
imul
roll
push
dec
test
push
enter
fwait
inc
xchg
imulb
repnz
dec
dec
dec
iret
popf
inc
or
cs
shll
jmp
rolb
cmp
loope
push
das
jle
and
add
in
into
outsl
fucomp
jo
cld
mov
cmp
les
mov
inc
mov
or
mov
mov
loopne
aas
ja
jbe
rolb
xchg
in
fdivrs
repnz
mov
jns
mov
aas
imul
jecxz
fwait
jg
mov
jge
sub
das
sub
add
lds
test
mov
sub
cmpsb
sub
cld
nop
inc
mov
mov
push
ljmp
ljmp
cmp
adc
or
out
fucomi
stos
push
into
shlb
repz
inc
cmpsl
shl
shll
aad
cli
stc
fstl
xorl
mov
stos
shr
cli
xlat
clc
test
sub
mov
leave
aam
cmpsl
lahf
push
call
cld
bound
loop
ret
rcll
jb
ss
pop
xchg
test
or
cmp
push
std
push
lcall
pop
popa
dec
fstps
cmp
sbb
popa
fnstsw
dec
and
roll
pop
jbe
jecxz
ds
xlat
hlt
and
add
adc
aam
fs
ror
cmp
int
and
xor
les
xchg
nop
fsubrs
shll
cmp
lahf
xchg
or
cltd
fsubp
out
or
pushf
je
cltd
or
lock
pop
ljmp
lret
dec
in
push
and
hlt
sbb
push
cltd
sbb
cltd
mov
cmp
mov
ds
push
cmpsb
imul
push
jmp
sbb
and
ja
aam
and
ss
int
sbb
jbe
ret
dec
adc
jno
inc
aaa
ror
or
ret
sahf
cmp
fst
repz
mull
mov
dec
lock
xor
inc
inc
add
jecxz
fimull
adc
fdivr
xchg
fisttpl
cwtl
ss
mov
cmp
ja
cmp
sub
push
js
and
mov
ds
ret
or
dec
mov
ss
shrl
incb
mov
outsl
repnz
mov
dec
into
cli
mov
pusha
cld
movsl
out
nop
hlt
inc
dec
out
sti
loopne
clc
sbb
mov
pop
and
mov
push
es
pusha
mov
es
and
inc
jmp
dec
jge
mov
cmp
push
sbbb
cmp
jne
sub
sub
daa
sbb
aaa
leave
ss
xchg
fnstenv
sub
fdivrp
out
ret
jmp
sbb
subb
jmp
sbb
mov
cmpsl
loop
or
jne
jle
jae
gs
das
mov
aad
call
shl
repz
movsb
mov
movsb
dec
leave
mov
arpl
or
mov
or
icebp
push
sub
aam
inc
out
mov
repz
rclb
cmpsl
pop
fcmovbe
fldcw
lret
mov
cmp
popf
push
sbb
jno
nop
xor
mov
lea
fcoml
daa
pop
call
jae
add
inc
sub
lods
adc
addr16
jns
lock
dec
mov
fxch
sbb
aam
les
fmuls
sub
and
rcr
jno
lea
jge,pn
and
das
inc
bound
cmpsb
xchg
ret
loopne
xorb
in
cmp
inc
mov
jecxz
pusha
hlt
lds
jg
mov
inc
aad
mov
or
stos
outsl
mov
iret
mov
push
xchg
pop
xchg
push
nop
nopl
sub
jmp
mov
arpl
outsb
xor
and
cli
das
jge
mov
ja
mov
dec
lods
out
lcall
loop
test
addr16
mov
mov
jne
dec
call
aad
inc
lret
add
insl
cli
out
xlat
inc
outsl
jge
push
popf
add
mov
mov
adc
mull
cli
pop
push
mov
dec
push
out
cmp
bnd
aad
aaa
jne
hlt
jno,pt
icebp
adc
pop
xchg
mov
mov
push
xchg
aaa
xor
fwait
adc
lret
dec
sbb
mov
jbe
inc
jp
lcall
adc
in
jb
lret
ret
daa
outsb
fdivrl
insb
fisubrl
pop
adc
cmp
jne
add
cwtl
cmp
cwtl
int
mov
aas
inc
xchg
jecxz
aas
scas
mov
adc
in
cwtd
pop
leave
mov
and
sbb
xlat
cmpsl
lock
inc
stos
mov
lock
jo
lds
xchg
aaa
iret
inc
in
mov
insl
loope
pop
movsb
adc
mov
mov
inc
xorl
dec
sbb
shll
inc
cld
mov
stc
aad
adc
shlb
or
lret
mov
sarb
fwait
test
cs
iret
sbb
iret
repz
or
dec
popf
movsl
out
cmc
sbb
ret
add
push
into
std
ret
popa
add
inc
inc
mov
arpl
jns
test
mov
dec
rorb
invd
adc
std
insl
scas
fmull
rcl
lret
imul
mov
ret
out
mov
adcl
mov
mov
xchg
xchg
les
ret
pop
iret
mov
loope
dec
loopne
adc
jns
std
xlat
daa
in
mov
es
push
mov
xchg
es
xchg
shlb
or
test
test
mov
xchg
cmp
pop
fisttps
test
jne
jo
push
sbb
repz
push
push
mov
icebp
mov
rcpps
xchg
xor
xor
push
fwait
dec
sbbl
jecxz
xchg
inc
mov
dec
pop
xchg
data16
cmp
xchg
lock
dec
jge
push
call
sub
int
jmp
leave
clc
sub
stos
in
mov
je
ret
cmp
rorb
insb
scas
andb
ret
insl
lock
or
adc
xchg
xor
das
mov
test
subb
out
mov
xor
xor
xor
xchg
dec
shll
lcall
jnp
cmp
sbb
adc
bound
cltd
sub
and
fildll
push
mov
cmc
mov
add
in
aas
mov
jecxz
fnstenv
call
mov
mov
call
sbb
jo
imul
xchg
aaa
xlat
addr16
xchg
mov
xlat
and
or
sbb
popf
in
sub
sub
dec
ja
sbb
jge
ja
mov
jmp
iret
mov
jle
mov
imul
inc
sbb
and
int
mov
stos
mov
push
jb
rcr
loop
jp
movsb
movsb
push
push
push
adc
je
push
pop
mov
scas
lahf
push
pop
xchg
repz
enter
mov
gs
sbb
test
test
loopne
aaa
cli
adc
cmpsb
loope
mov
dec
fisubrs
lret
inc
push
dec
lret
daa
xor
xor
xor
adc
mov
jp
rcr
dec
jae
pop
xchg
notl
jae
lds
push
mov
mov
xchg
xchg
ret
cwtl
jae
cmp
mov
or
adc
jno
xor
ja
fistpll
icebp
dec
mov
dec
pop
testl
repz
popa
pop
pop
sarl
pop
call
and
jnp
cmp
push
adc
xchg
enter
cwtl
lods
pop
or
lcall
mov
and
xchg
and
shl
add
adc
insb
into
arpl
xchg
add
in
or
shrb
sti
sbb
imul
sbb
mov
je
cmp
mov
scas
sub
xchg
sub
test
cmp
adc
push
out
cltd
sub
std
push
or
dec
mov
popf
sub
imul
das
lret
stos
sub
scas
aaa
iret
sub
adc
int3
leave
insb
cmc
out
xchg
add
es
rorl
cmc
imul
sub
add
and
bswap
add
repnz
iret
push
hlt
inc
das
fucomip
fld
popf
ret
xor
sbb
rorl
fcmovnb
ja
iret
mov
jle
xorb
push
add
movl
out
into
adc
pushf
rol
sub
add
xor
popa
mov
xchg
imull
fcmovnu
movsb
and
lcall
adc
jae
jp
std
les
xorb
adc
aad
and
cmp
mov
adc
adc
cmp
scas
dec
adc
mov
sti
fcompl
pop
sbb
out
ja
pop
xor
add
dec
dec
jecxz
and
imul
push
jle
cmp
inc
int3
repz
divb
out
je
xor
dec
pop
cmpsb
jno
movb
adc
or
xchg
shll
lret
sti
cmpl
mov
jae
and
sbb
out
dec
fsubrl
mov
jecxz
fucomip
sbb
jg
adc
out
hlt
dec
call
xchg
cmp
loope
decl
jo
cli
ds
into
cmp
and
addr16
nop
or
xor
jecxz
jb
or
push
aad
out
xor
insb
test
adc
cmpsl
or
mov
les
or
sbb
mov
repz
jno
rcrl
fmull
lods
lds
push
add
decb
jns
sub
pushf
movsb
sub
daa
lods
jnp
cli
outsb
imul
dec
imul
mov
sbb
jp
clc
jp
repz
xchg
inc
popa
out
or
imul
mov
ret
pop
push
inc
jl
cmp
sub
ret
imul
xchg
icebp
lcall
sbbb
lods
sahf
cmp
out
and
std
sbb
push
jnp
pop
sbb
and
test
loop
jmp
pop
sbb
xorb
out
jne
xchg
pusha
cmp
pop
xchg
stos
lahf
bound
pushf
shl
lods
pop
testb
jae
jecxz
inc
div
icebp
xor
addr16
orl
sub
sbb
iret
int3
and
dec
mov
dec
orl
dec
clc
ret
mov
sbb
jo
jnp
mov
adc
or
mov
sub
mov
or
push
fnstsw
jl
clc
addr16
or
sarl
push
jge
lahf
pop
mov
mov
clc
insb
in
adc
xor
lret
test
push
enter
in
test
stos
sbb
fidivl
ret
pop
mov
xor
imul
mov
mov
pop
pusha
sub
out
sub
inc
mov
paddw
aam
int3
mov
leave
xor
or
scas
in
and
scas
pop
adc
pusha
push
rcrb
and
loopne
add
inc
je
sub
mov
pop
mov
fcomps
mov
bound
push
ja
mov
lcall
cli
scas
add
scas
pop
scas
and
xor
iret
es
push
imul
and
sub
mov
push
cs
sub
imul
into
je
pop
mov
fstpt
xchg
sub
fldcw
push
push
lahf
xor
xchg
jae
lret
sbbb
popf
pop
xorb
pop
pusha
mov
adcl
pop
call
and
mov
cmp
aaa
cli
add
insb
push
test
pop
xchg
xchg
out
das
and
dec
adc
jo
insb
and
dec
enter
mov
mov
fidivrs
add
ret
dec
lret
adc
sbb
add
fidivs
mov
push
xchg
inc
mov
or
clc
adc
out
shr
jns
pop
aam
jg
sub
orb
jmp
push
or
movsl
add
sub
notb
fdivrs
das
aam
mov
jns
jnp
xor
xor
and
mov
pop
or
popf
jae
mov
stos
dec
jbe
mov
popa
mov
add
inc
out
mov
jo
andl
mov
xor
ljmp
push
scas
cmpsl
imul
mov
aaa
and
jge
ret
rorl
js
outsb
popa
push
cmpsb
shrb
push
adc
ror
pop
push
sbb
movsb
xlat
stc
rcpps
sub
lea
shl
add
cld
aas
rcrb
fdivl
lock
int3
xor
adc
xor
sbb
mov
stos
xchg
jmp
orl
sub
xchg
loop
pushf
ret
scas
out
ret
insb
push
int3
lea
push
push
sti
hlt
cmp
mov
daa
push
add
mov
cmp
pusha
fwait
ret
adc
push
imul
je
dec
jecxz
call
jecxz
ret
jbe
jp
ja
push
pop
data16
test
pop
or
scas
xor
jg
les
add
and
inc
jae
test
out
push
das
lock
sbb
stc
and
lret
movsb
xchg
jle
loop
lret
mov
jns
push
inc
test
aad
ret
mov
int3
cs
cmp
dec
cmp
fs
daa
mov
pop
ds
mov
or
pop
mov
in
dec
mov
sahf
imul
dec
jae
mov
outsb
lea
rcrl
xor
mov
cmp
pop
rcrl
xchg
jns
pop
or
pop
sub
js
mov
enter
insb
ja
jnp
jmp
loopne
xchg
rcrb
pop
lahf
mov
or
hlt
and
pop
mov
xorb
addr16
aas
adc
push
push
lret
xor
mov
adc
mov
pop
push
cmp
insl
mov
pop
lods
inc
cmp
shl
aaa
xlat
mov
gs
adc
and
sub
inc
sti
xor
xor
pop
dec
dec
or
jmp
sub
add
jg
pop
xchg
inc
sbb
push
jmp
inc
fstpl
push
push
xor
add
xchg
cmp
repz
sbb
jno
add
cmp
xor
jae
sub
push
mov
xlat
add
fnstenv
rorb
ja
fdivrs
shr
sbb
adc
notb
sbb
mov
aaa
or
les
test
test
cmp
or
push
out
jmp
outsl
jae
xor
popf
ds
cmc
std
mov
in
into
call
pusha
jnp
lock
cmp
addr16
mov
adc
jmp
notl
sbb
mov
jmp
out
sub
and
pushf
loope
pop
sbb
sbb
cmp
into
mov
mul
sbb
hlt
jmp
push
or
aam
rorb
or
adc
pop
imul
mov
pop
movsb
les
out
cmp
pop
sub
iret
adc
jns
xor
sbb
ss
lods
cmp
push
das
sub
push
mov
out
xchg
pop
fsubrl
vandps
xchg
push
push
nop
pop
bound
out
repz
icebp
fs
leave
shlb
push
mov
dec
or
adc
pop
jg
gs
popa
mov
push
pop
push
dec
push
fildl
mov
icebp
lods
pop
cmp
pop
or
push
lods
es
in
leave
xchg
ret
cltd
out
xchg
in
ret
das
lods
pop
dec
lret
mov
imull
cmpsl
add
sbb
ja
sbb
in
jb
repnz
dec
shll
ljmp
lods
data16
ljmp
pop
jbe
push
pop
jge
inc
ds
xchg
cmp
ds
cs
sub
mov
addr16
or
js
movsb
pusha
dec
cmp
sbb
xor
call
mov
cmp
movsb
pushf
cmovs
and
jb
shrb
xchg
testl
dec
cmpsl
js
rolb
or
popa
scas
pop
out
pop
dec
loop
test
movsl
fimuls
nop
int3
jmp
inc
aam
adc
pop
rorb
add
jb
mov
inc
xor
add
cmp
inc
insl
andb
push
pusha
stc
andb
ds
sbb
jno
push
xchg
in
xlat
sub
sub
xorl
xor
ret
mov
xchg
mov
aas
jmp
and
xchg
sbb
sbb
jp
test
xchg
leave
adc
or
sbb
dec
knotw
stc
sbb
mov
cmp
mov
jge
ja
pop
movl
movsb
clc
and
imul
pusha
push
mov
sub
test
int
cmp
mov
mov
push
ret
adc
cmp
rol
hlt
icebp
icebp
xchg
sub
in
repnz
inc
shr
xchg
adc
push
out
mov
cs
lret
mov
jae
imul
cmpb
mov
xchg
stc
cmp
and
ja
xchg
or
into
dec
ret
fimuls
sahf
addb
or
lock
cmc
fimuls
mov
push
cmp
sbb
push
int3
stc
ret
jae
mov
sub
imul
sbbl
icebp
outsl
out
lret
dec
shrb
je
filds
test
aas
xchg
addb
push
jb
jmp
mov
sub
push
rcl
cwtl
mov
stc
mov
pop
dec
or
adc
in
add
cld
and
icebp
cmp
pop
and
into
inc
pop
roll
pop
test
test
and
and
xor
inc
in
mov
mov
scas
sub
mov
adc
jns
test
lea
pop
sub
insl
arpl
into
movsl
or
mov
test
mov
je
call
sete
aaa
bound
icebp
push
jns
mov
insl
cmp
hlt
mov
in
jbe
jae
icebp
push
loopne
mov
dec
dec
jnp
push
int3
mov
sub
xor
fcomip
outsb
shll
xlat
inc
fdivrs
push
mov
mov
jnp
or
sub
xorl
test
stos
add
callw
imul
mov
nop
cmp
xor
addb
ds
loope
cmc
sub
test
clc
mov
repz
cli
xor
lcall
push
dec
mov
into
push
in
push
mov
movsb
dec
sub
cmpsb
or
adc
aam
mov
scas
call
jp
xchg
leave
mov
testb
pop
rcrb
ja
mov
loop
in
aad
xlat
lock
aam
xor
into
out
or
lods
test
ret
or
lret
sub
mov
xor
sub
jno
bound
xchg
stos
gs
or
into
rep
fsubrs
inc
orb
cmp
sub
testl
pop
popf
xor
aaa
push
mov
or
jmp
mov
insb
movsb
add
sbb
lcall
lock
sub
call
sub
push
ja
lock
cld
cltd
data16
mov
in
sti
fistl
enter
xchg
ret
xchg
fcmovnb
jmp
scas
sub
cmc
xlat
movsl
pop
fcomi
es
ja
lods
dec
daa
hlt
outsl
mov
fs
inc
xor
hlt
jmp
dec
pop
clc
insb
jge
shlb
cmp
xchg
aad
decb
mov
mov
mov
movsb
aam
sub
xor
mov
pop
out
ror
outsb
add
sbb
out
cmc
jnp
xor
dec
pop
aas
icebp
add
lock
jb
adc
pop
call
xor
sub
adc
and
shrl
hlt
lret
push
aam
ss
scas
iret
fidivl
jb
popa
push
mov
ret
and
or
mov
cmp
int3
and
cmp
push
mov
add
sub
out
rol
mov
jns
xor
movsb
in
sbb
fnstenv
movsl
ljmp
jne
aaa
pop
shlb
and
cwtl
push
add
pop
lcall
repnz
aas
scas
xchg
sub
push
jno
xchg
inc
sbb
push
or
das
enter
mov
fistps
fidivrs
mov
push
push
cmp
aaa
insl
out
add
daa
ret
pop
nop
sahf
mov
jb
stc
sarl
or
cmp
sbb
jp
jne
lret
sbb
inc
adc
add
mov
aaa
aam
out
and
xor
or
jmp
pop
cmp
das
aam
jecxz
repnz
aam
shrb
scas
iret
mov
mov
and
sub
push
sbbb
push
call
push
mov
movsb
aam
dec
rolb
and
cmp
push
daa
icebp
dec
lods
mov
sub
sbb
or
ljmp
add
arpl
jle
shlb
addr16
lods
push
cmp
fstpt
cmpsb
fsubrs
mov
rcr
cmc
xor
jp
cltd
popl
les
sbb
ja
add
xchg
cmp
test
sub
jmp
cmp
loope
push
enter
repnz
sub
inc
add
or
adc
cltd
mov
sub
loope
xor
push
ss
test
lret
cmp
andl
inc
jne
data16
out
loopne
or
mov
out
stos
sti
neg
loope
inc
js
add
mov
movl
cmpsl
jge
sti
cmp
ss
mov
mov
mov
test
pop
sbb
daa
out
adc
fld
and
inc
andl
cwtl
int
repz
dec
sbb
cmp
jge
mov
int3
int3
sbb
pause
jp
add
int3
subl
and
insb
mov
mov
jne
pushf
jl
fadd
pop
xchg
cmpsl
leave
stc
rclb
dec
xor
cmp
inc
jle
jmp
shll
add
mov
popa
dec
inc
pop
jae
jo
sar
popf
out
cltd
sbb
mov
popf
mov
scas
pop
inc
jbe
fidivrs
jne
xor
sbbb
xchg
adc
aaa
pop
mov
pop
loope
mov
imul
insb
imul
mov
add
add
or
push
hlt
mov
cmpsl
pop
sahf
inc
mov
mov
xor
test
dec
out
out
or
inc
push
jmp
xchg
push
mov
iret
sbb
lret
scas
jecxz
ret
mov
mov
and
adc
loop
orb
lahf
sbb
popf
sahf
out
push
imul
mov
dec
cs
sbb
daa
data16
sub
aaa
loop
aaa
ds
sti
mov
inc
pop
stos
cwtl
bound
arpl
ret
test
mov
shlb
mov
jmp
add
ret
aaa
xchg
xor
xchg
scas
jmp
std
fsubs
xchg
push
mov
inc
stc
mov
cmc
inc
lret
and
pushf
mov
loop
call
lods
aaa
push
iret
int
pop
push
sbb
adc
lret
lock
dec
push
xchg
lahf
mov
xor
lea
inc
jnp
cwtl
mov
jno
addr16
mov
daa
push
push
in
dec
add
and
sbb
pop
mov
stos
mov
adc
mov
ret
cmp
lods
mov
pushf
out
iret
cli
std
hlt
gs
cld
sbb
imul
jl
pop
lahf
loope
sub
mov
jno
lahf
cmp
sbb
cmp
adc
inc
ja
push
insb
jg
test
add
pop
sar
xchg
shrb
jp
leave
cmp
jns
into
repnz
jns
mov
cs
ret
pop
aaa
push
xor
js
in
cmc
out
dec
negl
popa
cmpsb
jle
jns
sbb
pop
sub
xor
cmp
adc
inc
adc
cmp
in
and
xchg
xchg
iret
lret
cld
xchg
mov
push
js
aad
add
xchg
addr16
insb
mov
sub
inc
lods
js
rcll
fwait
ret
lea
push
sub
lds
in
lds
or
and
mov
mov
fsts
push
pop
and
lds
push
or
inc
cmpsb
test
and
cmp
lods
cs
mull
mov
add
sbb
xor
and
shlb
dec
sbb
mull
and
jne
xchg
in
call
push
add
xor
sahf
push
ret
mov
imul
mov
xlat
repz
jno
lea
test
dec
decl
mov
push
movsl
jge
addr16
and
test
inc
ret
js
js
or
add
jmp
pusha
adcb
push
jbe
xchg
xchg
sbb
fadds
xchg
sub
sbb
das
adc
rcrb
sub
iret
jmp
xchg
push
mov
push
jne
ret
fsubp
lds
scas
or
popf
pop
cmp
xchg
rcrl
frstor
dec
pusha
enterw
mov
insl
out
shll
xchg
xchg
leave
mov
mov
imul
dec
inc
loope
jb
adc
or
out
out
sbb
cmp
faddl
mov
xchg
out
fistpll
pop
jmp
add
jle
std
or
jbe
mov
sub
ret
mov
mov
mov
shlb
mov
fld
sbb
dec
in
shrb
or
ss
out
in
shr
xchg
jo
mov
add
lcall
cmp
push
sbb
cli
and
mov
dec
mov
mov
or
push
out
out
mov
aam
dec
adc
adc
leave
test
emms
popa
fwait
insl
adc
into
jne
call
mov
test
xlat
lock
pushfw
pop
or
les
out
mov
and
repnz
test
pop
fs
pushf
jb
fldl2e
push
xor
in
and
loope
std
pop
push
dec
cmp
xlat
movl
jl
mov
pop
jmp
pusha
xchg
mov
add
aam
out
aas
xchg
rorb
pop
xor
pop
sbb
in
jns
mov
xor
fidivrs
scas
xchg
lds
lods
sub
je
les
jecxz
xchg
ret
push
mov
je
mov
loope
cmp
cmp
in
gs
ds
lock
add
sub
xchg
xchg
sub
sub
loope
adc
cli
loop
rol
sbb
jmp
sub
xlat
push
es
mov
test
ret
rcrl
lcall
je
in
ficomps
push
addr16
es
xchg
sti
into
push
mov
pop
push
and
pop
or
fnstsw
out
jp
adc
xchg
cmp
sub
pusha
mov
int3
outsl
pop
dec
ret
jmp
push
cli
mov
jo
xor
sbb
cmp
xor
mov
jbe
mov
out
nop
push
inc
sub
mov
call
xchg
or
les
enter
or
mov
arpl
outsl
addl
or
cltd
push
xchg
pop
cmc
mov
push
mov
pop
addr16
insl
xor
aam
in
add
xchg
xchg
or
leave
sub
icebp
mov
jecxz
inc
cltd
rorl
idivl
adc
xchg
dec
xchg
sahf
lds
cmp
jge
xchg
add
or
fildl
inc
jle
imul
loopne
add
shlb
pop
cld
arpl
mov
pop
and
sbb
out
sti
in
scas
fwait
loope
push
dec
mov
dec
mov
ljmp
stc
nop
mov
inc
idivl
ljmp
std
pop
cld
sbb
in
jns
xor
fistl
sbb
pop
cmpsl
or
stos
jns
fs
cltd
cli
aad
cmp
popa
sbb
fsubrl
xchg
je
mov
mov
inc
inc
dec
push
add
dec
pop
pop
pop
pop
orb
fs
ret
pop
imul
sbb
loop
cs
das
fcomps
mov
and
out
rcrb
mov
dec
inc
cld
add
insb
adc
or
push
movsb
shr
popa
mov
mov
cmpsl
jl
sbb
xor
stc
in
mov
jg
dec
shll
cs
fnstenv
push
mov
fistps
push
and
es
cmp
fdivp
adc
mov
pop
js
xor
cmp
sub
jmp
dec
es
incl
inc
in
ds
xor
roll
js
pop
jnp
pop
add
push
ljmp
push
fists
dec
xchg
cmp
repz
mov
inc
jmp
xor
es
sarl
sub
dec
testb
dec
repz
pop
popa
mov
int3
sbb
xor
movsb
xchg
shlb
shlb
inc
xchg
pop
jl
inc
ret
push
lahf
fcoms
and
cmp
leave
xor
dec
int
daa
xchg
mov
jns
icebp
fmull
xchg
out
jne
sub
aad
and
movsl
sub
scas
sbb
pop
and
adc
aam
out
xchg
pop
and
int3
sahf
jno
mov
fildll
pusha
in
aad
jo
out
gs
inc
and
fisubrl
in
xlat
inc
xchg
lahf
movsl
into
out
xlat
xchg
leave
sub
loop
add
aaa
mov
or
mov
mov
dec
or
jecxz
test
xor
ja
icebp
xor
sub
testl
sub
sbbb
jno
icebp
sub
add
lods
inc
mov
sbb
sub
mov
pop
xchg
jp
push
into
cs
fists
pop
and
mov
cs
into
sbb
inc
push
sbb
pushf
ss
xchg
stos
cld
mov
in
sbb
xlat
dec
cmp
xor
dec
adc
jge
inc
repnz
shll
push
insl
adc
or
sub
cmp
iret
xchg
pop
sahf
cmpsb
mov
cld
rcll
xor
movsb
jne
fcomps
lret
pop
sti
stos
cmpsl
sub
pusha
pop
shrl
adc
es
cmpsl
ror
bound
pop
data16
les
pop
mul
push
or
loop
mov
fstpl
clc
xor
or
and
lcall
fs
mov
adc
sbb
pop
mov
icebp
shl
rorb
adc
aam
jae
jae
dec
lret
cltd
fisttps
les
js
jmp
pop
bound
imul
mov
jb
nop
cmp
ljmp
filds
scas
adc
sbb
mov
stc
xchg
and
stos
xlat
fadd
or
outsb
aad
mov
or
aad
xor
lret
and
loopne
add
les
sub
push
push
mov
push
rcrb
pop
or
mov
sub
jno
ljmp
xor
mov
das
loopne
push
mov
dec
and
sub
and
mov
ljmp
sbb
xor
mov
clc
xor
adc
sub
test
push
adc
fisubrs
hlt
lret
add
dec
hlt
cmp
push
mov
adc
jecxz
loop
loope
arpl
cld
into
dec
pop
stos
adc
repnz
mov
and
adc
pop
cmp
lret
dec
fs
sub
int
mov
js
push
gs
mov
pop
xchg
sub
lahf
rcrl
js
mov
jmp
jae
test
ss
adc
pop
imul
ss
mov
inc
mov
cmc
test
sub
scas
rorl
jge
addb
imul
lods
fldl2t
dec
jns
filds
add
rcl
dec
xor
movsb
push
adc
mov
es
data16
das
je
stc
inc
sub
mov
nop
inc
outsb
daa
int
out
mov
es
xor
xor
ds
pop
sub
pusha
int3
rolb
or
aam
jbe
sbb
cld
dec
int3
lret
ljmp
mov
and
lret
sti
add
jle
mov
inc
jno
pop
sbb
aaa
add
xchg
jne
insb
dec
out
out
ja
sbbb
pop
fmuls
aaa
dec
push
sti
xor
lds
mov
cmpsb
dec
dec
sarb
js
dec
loop
or
push
pop
jo
jle
dec
into
push
jae
push
xor
and
and
pop
dec
xchg
mov
mov
subb
rorl
push
pop
into
lock
dec
daa
lock
dec
jecxz
fcom
daa
mov
pop
pop
inc
adc
inc
outsl
push
lods
faddl
pop
rolb
jmp
ret
enter
fcmove
mov
jae
mov
ja
dec
push
fsubr
cli
and
xchg
je
sti
mov
les
out
adc
out
daa
es
xor
jne
lahf
add
js
and
mov
loopne
or
xchg
push
aad
int
xchg
call
es
and
and
inc
mov
xchg
xchg
scas
sub
xor
jbe
lahf
test
push
iret
call
or
aaa
jmp
in
mov
push
ljmp
add
add
dec
pop
cmpsb
adc
cs
in
push
lret
jnp
shlb
scas
push
test
pop
dec
fmul
xchg
pop
add
adc
ds
adc
inc
mov
inc
aad
lods
mov
test
stc
fwait
es
xchg
xor
popl
jns
mov
daa
aas
add
int
inc
xorl
daa
mov
sbb
sub
jl
xchg
insb
inc
push
test
dec
out
inc
call
pop
sbb
and
inc
or
gs
stos
es
mov
and
jae
ret
div
mov
pushf
sahf
mov
sbb
sti
or
inc
mov
cli
jb
popa
aam
jbe
jmp
jecxz
mov
cmpsl
or
inc
sub
inc
addr16
fcoms
fs
mov
mov
xchg
popa
jo
ja
xchg
push
xchg
mov
inc
divb
shll
dec
jecxz
lds
cmpsl
jae
pushf
fdivrl
mov
stos
icebp
cmp
leave
cwtl
test
test
inc
icebp
test
mov
sub
xor
divb
pusha
mov
das
aam
mov
fwait
clc
mov
clc
pop
pop
popf
and
out
bound
ja
push
push
bsf
aas
jns
dec
xor
icebp
inc
dec
jne
dec
dec
es
fwait
sbb
rorl
push
sbb
sahf
data16
jg
test
push
jne
mov
mov
add
nop
jp
nop
mov
mov
out
jmp
addr16
and
mov
ja
xchg
xchg
data16
xlat
pop
push
addr16
or
fiadds
xlat
mov
xor
test
jmp
aam
nop
mov
rorb
imul
lcall
pop
push
jo
or
mov
imul
mov
mov
or
inc
sub
fs
stos
loop
or
insb
push
lret
push
mov
das
xor
push
call
push
or
sbb
jl
inc
arpl
iret
sub
ljmp
enter
jbe
fdivrs
adc
imul
std
adc
mov
sub
jmp
movsl
aaa
gs
aas
xor
inc
add
leave
ja
pop
jbe
and
pop
or
pop
add
inc
loopne
xor
pop
jp
ss
pop
cwtl
cli
add
out
addr16
pop
mov
xchg
jno
and
rorb
mov
pop
adc
int3
in
popf
sub
rcll
xor
pop
mov
aam
or
div
jmp
fldenv
cmp
lret
xor
push
enter
xchg
mov
or
sarl
add
insb
fcmovu
sahf
xchg
mov
mov
test
mov
enter
aas
adc
xor
pushl
sub
push
insl
aad
out
mov
sahf
sub
in
lds
rolb
sub
testl
movsb
pop
dec
adc
ret
sbb
daa
push
callw
inc
inc
xor
dec
jo
out
arpl
pop
mov
stos
mov
jmp
cmc
mov
ljmp
dec
add
ds
mov
inc
daa
xchg
xchg
scas
dec
ljmpw
bound
fisttpl
cld
ja
push
add
jle
push
jmp
enter
mov
adc
inc
adc
add
or
ljmp
or
push
mov
or
dec
scas
lahf
pushf
call
pusha
fadds
jbe
pusha
lret
lcall
sub
sub
movb
xchg
and
outsl
jne
decb
xor
or
scas
or
sub
fsub
aad
call
or
mov
mov
pop
fldt
mov
call
inc
les
sub
in
dec
out
arpl
movsb
out
test
movsl
popa
or
nop
xor
sbb
mov
pop
fidivl
jp
push
in
fimuls
icebp
pop
inc
adc
pusha
pop
cld
testl
fwait
or
pusha
hlt
inc
cmpsb
enter
mov
sahf
dec
push
ficoms
aad
fsin
sub
add
or
les
mov
test
jl
pop
inc
push
rol
enter
fsubrl
lret
aam
pop
cmp
ja
fidivs
adc
sti
into
cld
outsb
dec
jecxz
daa
mov
mov
mov
sub
out
xor
ss
lds
pop
fs
cmp
gs
rep
movsb
cmc
add
jl
or
outsb
imul
test
scas
in
popa
jnp
fs
sbb
shlb
xor
repz
jge
shlb
adc
and
push
xchg
mov
mov
divb
push
shlb
push
or
jno
repnz
mov
sbb
and
jmp
mov
mov
inc
or
adc
add
mov
cltd
add
mov
mov
jo
or
dec
test
cwtl
lods
and
jp
jns
shlb
aaa
incb
fdivrl
fisttpl
int
sbb
jne
adc
sahf
xchg
pop
not
sub
xchg
sub
loope
das
sbb
xchg
movsb
sub
fldt
jbe
insb
rcr
jp
mov
std
dec
mov
shll
aaa
shll
shll
mov
call
cld
stos
pop
and
sbb
test
or
out
adc
shrl
jo
aaa
cltd
enter
bound
add
mov
push
fwait
sahf
mov
stos
xor
pop
enter
fisttpl
setl
roll
cmovne
leave
and
push
scas
jb
push
mov
insb
out
and
ret
fiaddl
sub
dec
shrb
fadd
test
and
call
test
cs
aad
and
mov
cmpsl
fisubrl
ss
lahf
jle
les
das
fisubl
out
mov
push
bound
pop
adc
inc
arpl
idivb
jnp
dec
dec
movsb
imul
outsl
loopne
mov
addr16
sarb
jg
pop
adcb
clc
mov
lret
mov
cmp
xchg
mov
es
jae
pop
mov
sub
cmp
lcall
adc
out
push
clc
repnz
mov
repnz
lock
mov
call
movsb
sub
push
in
je
push
pusha
inc
out
sub
sbb
mov
xor
jb
lret
push
and
std
movsl
in
in
loopne
int3
adc
inc
push
pop
shr
daa
in
mov
push
mov
out
sub
lods
enter
ja
scas
outsl
loop
insb
push
xor
mov
cmp
jl
js
rdmsr
push
lahf
ss
push
lcall
aaa
movsl
dec
sbb
ss
dec
lock
adc
xchg
sub
adc
pop
ret
faddl
mov
mov
int3
fwait
ret
inc
sub
and
mov
jl
xchg
mov
sub
test
xor
xchg
bound
loop
jno
fs
leave
and
cmpsl
jo
dec
push
adc
into
push
call
mov
sub
sub
outsl
adc
cmp
scas
outsl
pusha
je
repz
pop
ss
xor
mov
bnd
movsb
jae
nop
jae
push
push
jno
lods
das
sub
js
mov
fisubs
mov
adc
sahf
insl
out
cs
nop
aad
push
or
lds
out
jl
add
lock
push
into
push
outsl
sub
sub
xlat
push
repz
cmp
mov
lods
jl
pop
sbb
mov
jns
stos
inc
jnp
and
fldl
sbb
dec
mov
inc
sbb
mov
dec
aad
pusha
cwtl
pushf
and
ret
jbe
push
test
test
mov
jp
loopne
adc
insl
testb
mov
shrb
addr16
ret
adcb
add
inc
or
push
lds
cmp
xor
dec
cld
outsl
dec
adc
inc
in
fnsave
outsb
sarl
xor
mov
pushl
mov
inc
sbbl
dec
add
jg
jp
mov
ss
jge
xor
out
push
adc
cli
popf
out
mov
fisubrl
sti
mov
pop
jge
push
push
outsb
xchg
xchg
nop
fmul
ljmp
cltd
stos
add
fsubrl
aam
testb
mov
push
outsl
decb
cs
jb
xchg
cmp
mov
gs
rcpps
shl
sti
jno
int
loope
xchg
lods
mov
cltd
negb
or
xor
daa
adc
scas
ss
xlat
push
add
jbe
fwait
roll
leave
ss
mov
inc
pop
mov
mov
out
test
mov
lds
push
and
orb
shr
or
push
cmp
mov
inc
rcll
pusha
ret
ror
imul
xchg
ret
push
adc
test
std
inc
aam
ret
or
sub
leave
iret
sbb
ljmp
scas
out
ret
iret
cmp
pop
mov
aaa
mov
out
loope
cwtl
or
pop
ljmp
fidivl
movlps
das
jno
inc
int3
fdivrp
lods
ret
cld
cmpsb
xorb
fdivl
dec
inc
mov
bound
cmp
and
and
jl
adc
addb
rorb
push
push
pop
cs
in
fldenv
dec
mov
cmpsb
xchg
push
stos
notb
jo
pop
xor
sbb
cwtl
sub
pop
test
add
call
dec
adc
rolb
pop
adc
into
imul
pop
and
fldl
comiss
sub
jb
push
xor
ret
or
scas
inc
loop
xchg
getsec
inc
mov
repz
jle
mov
pop
push
cmp
data16
ja
mov
xlat
aaa
fimull
aam
enter
mov
in
jecxz
or
leave
jne
sbb
out
or
sub
xor
sarb
sbb
push
mov
mov
je
aad
fst
cmp
mov
stc
repnz
push
leave
neg
iret
jge
roll
adc
mov
jge
xlat
out
adc
nop
xor
loop
lret
aas
adc
lea
mov
fldl
mov
add
mov
adc
cmpsb
mov
pop
add
adc
adc
jb
pusha
push
lods
mov
mov
rolb
mov
jmp
xchg
push
sbb
lcall
and
xchg
and
xchg
mov
jae
dec
fldenv
fbld
xor
adc
testl
das
call
and
pop
ret
mov
divl
fisttps
cmc
inc
js
xlat
call
xchg
loope
int3
jo
and
mov
jge
out
call
insl
enter
lret
lock
imul
int3
add
inc
outsl
cs
arpl
repnz
pop
sub
cs
push
xlat
fistpl
adc
stos
neg
mov
or
inc
in
jne
lret
call
aaa
stos
int3
jae
push
andl
add
subl
jecxz
pop
ds
das
loop
sahf
in
imul
in
xor
test
sub
scas
mov
gs
push
mov
call
mov
xchg
or
loop
or
mov
les
das
jmp
addr16
in
mov
xchg
lret
or
ss
daa
xchg
negb
out
dec
into
sub
xchg
xor
loop
add
sbb
jecxz
in
jmp
dec
arpl
adc
roll
call
jmp
fadds
mov
movsl
add
addr16
xchg
lods
xchg
adc
lods
int
sub
lea
fwait
and
sbb
cmp
dec
repz
mov
test
jb
cmp
or
lds
pop
imul
cld
add
xchg
mov
or
push
lods
mov
das
push
push
or
test
xchg
xchg
imul
in
lahf
inc
out
cmp
adc
std
sbb
mov
je
cmc
lods
stos
test
shrl
cld
cmc
add
pop
inc
lret
mov
aaa
jp
loope
push
pop
dec
fnstcw
sub
push
mov
pusha
pushf
dec
addb
test
jbe
das
rclb
cmc
mov
mov
mov
stc
jge
fcoml
or
xchg
xor
or
jecxz
lock
aaa
std
imul
das
push
mov
cmc
bound
cwtl
jo
push
xor
mov
das
sub
mov
add
pusha
push
mov
or
ss
inc
pusha
jmp
sbb
push
js
and
mov
das
mov
stc
repnz
adc
xchg
imul
int3
mov
cli
or
mov
aad
or
jmp
push
inc
cmp
adc
mov
sub
and
stos
movsl
pusha
push
mov
cmp
in
or
int
out
sti
fmul
shrb
cmp
cwtl
push
arpl
mov
cmp
mov
pop
ror
roll
jmp
rorb
pop
xor
jmp
popf
xchg
lret
mov
mov
pop
aaa
adc
jg
and
inc
mov
push
inc
aad
out
popa
aad
cmc
xor
daa
fldl
loope
testb
push
dec
jmp
jp
je
out
pmaddwd
insl
lods
hlt
negl
adc
sbb
popf
and
pop
les
lret
es
push
xchg
push
sbb
inc
mov
imul
xchg
out
in
pop
in
leave
scas
call
cmp
loopne
mov
push
lss
lds
xchg
push
test
lock
hlt
dec
leave
and
push
jg
imul
xchg
sar
ljmp
push
dec
adc
cmp
xlat
mov
push
add
mov
test
jae
pop
outsl
icebp
xor
xchg
inc
arpl
xor
cmpsb
mov
inc
push
mov
push
je
andb
jg
sub
jb
add
mov
sub
rcrl
std
add
maskmovq
divl
push
inc
and
out
cmp
ljmp
in
jmp
aaa
inc
jb
shr
sub
addr16
dec
js
mov
bound
cld
xchg
xchg
and
das
xor
mov
in
or
jmp
xlat
or
pop
inc
ret
in
addr16
cmpsl
sub
in
es
test
jp
sub
mov
lods
incb
xor
xor
mov
shrl
cmp
cmp
mov
sub
and
sahf
pop
rol
sbb
jo
add
lods
lret
xor
xchg
imul
cmp
int
mov
xchg
in
or
cmc
jno
stos
cmp
lea
in
xchg
int
dec
cmp
sbb
dec
jle
dec
push
cmpsl
in
outsl
loop
jl
sub
shlb
and
jo
leave
xor
mov
movsl
es
adc
shrb
cmp
lods
cli
mov
shl
xlat
or
jecxz
sub
lret
jmp
aaa
dec
jo
inc
out
mov
mov
mov
mov
sahf
addr16
pushw
or
mov
fsubl
inc
ds
repnz
add
in
fidivrl
cmp
fwait
and
and
gs
cmc
or
push
and
push
mov
das
dec
fs
xchg
test
ja
lock
scas
add
pushf
shll
push
jg
add
imull
fdivs
push
out
adc
xor
lret
in
adc
out
adc
ja
xchg
test
dec
mov
fwait
test
mov
sub
stos
leave
add
or
xor
pop
pop
dec
sarb
in
or
xchg
aam
or
adc
les
inc
sbb
and
bound
fs
mov
rorl
push
fldt
or
mov
fcmovne
aam
mov
sbb
hlt
cmp
shrl
dec
xchg
push
jmp
push
rcrb
add
add
dec
xlat
test
clc
test
and
cltd
lods
insb
roll
and
call
aas
dec
adc
jecxz
jb
inc
mov
rcrb
sub
cmp
and
sub
adc
data16
out
dec
test
in
jnp,pt
movsb
hlt
dec
lods
sub
mov
test
push
and
in
call
pop
adc
dec
stc
xlat
and
jne
mov
hlt
mov
push
add
inc
cltd
inc
popf
mov
inc
or
sub
add
mov
ret
call
popl
mov
in
hlt
and
adc
in
test
sub
xor
popf
pop
cmpsl
aas
je
addr16
les
mov
mov
jbe
imul
adc
mov
fbstp
popl
jle
fadds
je
sub
hlt
rclb
shll
sbb
jno
fadd
inc
xchg
xchg
mov
ja
and
and
mov
adc
daa
int3
ja
cmp
das
aam
mov
fadd
sarl
jp
lods
xchg
out
sbb
leave
loope
mov
cmp
mov
inc
sbb
fisubrl
dec
sahf
stos
xchg
push
cmp
mov
sub
lcall
bnd
test
iret
adc
push
loope
xchg
xchg
mov
mov
outsl
pop
inc
xchg
jno
clc
dec
into
popa
fwait
jge
sub
xorb
sarb
fldcw
jle
cmp
mov
dec
or
jnp
inc
aam
icebp
cmp
test
mov
std
mov
popa
jg
stos
repnz
xchg
pop
add
cmp
push
xor
and
sti
push
je
and
dec
push
dec
mov
or
adc
jg
fdivrp
push
push
call
and
mov
rcr
fwait
xchg
addl
sub
movntq
les
push
pop
cmpsl
clc
jmp
and
jbe
or
fldt
pop
fs
xchg
dec
fsubl
aaa
and
mov
in
int
dec
dec
mov
into
stos
xlat
sub
mov
dec
push
hlt
cltd
cmpsl
clc
cmp
call
push
mov
lods
pop
lea
loopne
cmp
test
mov
dec
int3
js
jle
inc
nop
lret
push
xchg
repz
aad
loope
mov
push
das
lret
dec
in
and
mov
cmpsb
rcl
sub
xchg
cmpsb
nop
rorb
xlat
lea
and
inc
les
loope
cwtl
rcl
gs
dec
icebp
xor
inc
jp
xchg
hlt
mov
mov
mov
mov
lea
xchg
ljmp
rcrb
jb
cmc
test
mov
jge
imul
pop
cmp
mov
in
clc
adc
add
bswap
sbb
inc
mov
sbbl
cmp
push
leave
mov
inc
push
jl
cmp
mov
aaa
inc
pop
loop
mov
inc
xlat
rol
xchg
dec
sti
int
je
jecxz
push
out
sbb
ret
xchg
mov
pusha
mov
lret
aaa
or
pushl
cmp
sti
push
inc
fisubl
adc
sub
lods
jmp
out
adc
adc
sbb
jo
jns
xor
pop
mov
and
mov
insb
loopne
jg
push
fnstenv
add
mov
jo
and
je
cwtl
mov
sbb
sbb
sbb
jecxz
fstl
dec
xchg
add
das
add
arpl
xor
pop
jmp
popf
inc
out
pushf
loop
imul
loope
jo
and
mov
clc
cmp
insl
mov
mov
out
aam
xor
mov
fdivl
xor
inc
bound
aas
jmp
jbe
andl
add
call
push
push
cwtl
inc
sub
jge
push
movq
mov
lcall
xor
add
jle
dec
jo
je
inc
inc
pop
pop
pushf
aaa
sbb
mov
ljmp
and
jo
xor
subb
popa
inc
out
pushf
arpl
lahf
dec
test
out
test
shlb
ja
xor
add
pushf
jmp
xchg
imul
ret
loopne
sub
psrld
sub
imul
jmp
mov
lods
sahf
test
in
mov
rcl
int
xor
jno
clc
fnstcw
stc
mov
inc
jne
xlat
and
or
adc
lcall
mov
sub
out
sub
or
mov
xchg
cmp
sub
ja
pusha
push
push
xchg
pop
xchg
sbb
mov
inc
mov
or
mov
ss
adc
aam
jmp
push
push
int3
mov
jnp
jno
lods
and
hlt
sub
mov
fbstp
aas
js
and
int
mov
aam
jo
adc
roll
sti
or
mov
mov
mov
stc
mov
std
adc
cs
je
sbb
sub
mov
imul
cmp
shrb
mov
gs
xchg
cwtl
jle
push
in
mov
jb
xchg
xchg
cmpsl
inc
dec
loop
stos
jge
adc
loopne
nop
push
ds
inc
les
sbb
cli
mov
mov
dec
cmpsl
push
cmpsb
or
fdivl
mov
notl
mov
inc
xor
sub
mov
add
push
xchg
and
lods
test
out
and
mov
mov
inc
ss
sahf
hlt
cmpsl
jmp
and
jg
clc
std
adc
ret
addr16
xchg
repnz
fsub
loop
mov
mov
push
int3
pop
mov
push
cmp
sub
xchg
pop
inc
inc
sbb
in
mov
mov
mov
lcall
lret
xor
adc
loop
pop
negb
push
mov
push
mov
pop
repnz
adc
push
pop
jno
scas
ret
ret
jne
and
inc
inc
cld
repnz
das
clc
sub
mov
sbb
test
add
jo
dec
cmpsb
and
out
pop
lods
roll
dec
sbb
comiss
leave
mov
pop
jle
sub
jg
mov
outsl
or
cmp
jge
fimull
fwait
and
cmc
adc
xorb
adc
icebp
add
mov
int
add
int
push
mov
sub
movsl
sahf
sbb
adcl
ud0
out
sbb
iret
sub
popf
fimuls
mov
pop
mov
xor
add
cmp
or
pop
lods
dec
out
mov
lcall
push
sub
sbb
arpl
ret
pop
sbb
mov
dec
push
push
cmc
lret
mov
sbb
push
aam
or
adc
or
inc
or
jp
sub
shll
cmp
andl
ficoms
dec
cli
inc
mov
ret
fdiv
shrl
lea
bound
enter
stos
fsubrl
xor
cmpsb
hlt
sub
sub
xchg
cmp
rorb
scas
push
or
push
inc
es
dec
mov
cmp
pop
cwtl
add
pop
push
inc
cmp
cmp
loope
js
xchg
or
mov
jg
dec
jge
fisttps
mov
test
insb
scas
ljmp
lret
jge
inc
leave
out
adc
xchg
jge
lretw
and
jmp
lahf
push
xchg
push
fs
insb
cs
xorb
int3
sbb
shll
sti
pop
sub
stos
jns
retw
lods
in
sti
jmp
outsl
pusha
clc
pusha
rclb
lods
jl
ljmp
ret
or
mov
xchg
stc
rorl
out
jmp
in
into
rcrl
and
rcrl
stos
adc
push
dec
xchg
ret
das
jmp
call
mov
daa
lahf
pop
aad
fdivrl
lcall
stc
cs
push
aam
or
cwtl
xor
pop
mov
call
cmpsl
pop
out
jno
inc
rclb
cmp
sbb
adc
lea
ret
jnp
mov
cmp
idivl
dec
popa
pop
sub
inc
inc
rcrb
cmp
das
push
pop
scas
mov
cs
cli
adc
push
push
dec
out
push
test
pop
push
jg
mov
mov
cmc
mov
outsl
cmp
daa
gs
pop
in
fldt
jne
mov
in
jno
mov
dec
pop
or
mov
pop
imul
fildl
popf
xchg
inc
cmp
ret
out
out
xor
lret
xlat
out
add
sbb
or
lret
insl
and
jecxz
out
enter
fwait
ret
cli
ljmp
in
enter
sbb
rcl
and
cmp
and
das
or
mov
scas
jmp
or
sbb
cli
and
fcomps
sub
pushf
push
cmpsl
or
aad
lock
or
je
ret
out
jmp
into
pop
dec
scas
das
xlat
lock
xchg
in
and
sarb
add
icebp
sub
lods
fs
push
push
sub
out
dec
mov
cmpsb
pushf
flds
aad
div
rcrl
nopl
or
pop
and
jns
mov
shrb
movsb
jb
scas
dec
icebp
leave
es
popa
ret
and
cmp
repz
ds
popf
pop
xor
lcall
imul
sbb
xor
jmp
loope
jo
lock
call
xchg
std
adc
stc
cs
sbb
jnp
pop
lcall
push
add
cmp
xlat
negl
add
cs
add
jbe
fcmovnu
jmp
movsl
mov
negb
lcall
inc
mull
pop
mov
or
shrb
jmp
sbb
cmc
aam
adc
cwtl
sahf
sbb
lds
jmp
push
cmp
iret
jo
sub
lcall
lock
mov
lcall
iret
xchg
add
int
iret
faddl
les
xchg
pop
or
das
add
inc
popf
fcompl
sub
pop
mov
mov
xchg
rorb
or
sarl
adc
ss
movsb
in
push
adc
xor
gs
add
xchg
cwtl
mov
mov
inc
mov
sub
clc
outsb
pusha
ss
adc
addr16
pushf
adc
aas
jge
push
cmp
aam
xchg
pop
lret
xchg
sbb
jge
pop
popa
adc
cs
dec
in
mov
or
sti
inc
push
jl
add
stos
lock
adc
jmp
and
or
mov
cmp
sub
ljmp
cli
xchg
ljmp
sub
pop
ljmp
add
xorl
out
push
lcall
xchg
ss
and
or
out
pop
scas
push
dec
sub
ljmp
cmp
mov
mov
outsl
clc
insl
ror
insb
adc
pop
push
mul
add
loope
xchg
notl
cmpsl
push
loopne
mov
aam
sahf
pop
fidivl
mov
push
push
push
jmp
xchg
cmp
mov
mov
and
aad
dec
inc
lahf
jecxz
outsl
mov
cmp
mov
xchg
adc
stos
mul
push
andl
outsl
iret
xor
sbb
dec
push
stos
fdivl
mov
leave
xor
stos
test
ljmp
js
out
repz
mov
lea
sbb
dec
pop
mov
adc
adc
popa
movsb
push
mov
jo
mov
cmpsl
clc
in
xlat
xorb
test
inc
adc
jl
mov
push
xchg
mov
jmp
cmpsb
stos
out
rorl
sbb
mov
mov
inc
mov
and
lock
or
mov
pop
pop
cltd
imul
jae
subl
jnp
fs
sub
push
mov
sbb
adc
int3
jg
aas
inc
cwtl
fdivrs
or
add
pop
cmpsl
cwtl
mov
cmp
dec
arpl
cltd
fsubl
mov
daa
outsb
mov
mov
mov
push
sub
aaa
jns
xchg
out
jno
sbb
test
pop
or
jnp
jb
lret
rcrl
aam
inc
jns
and
cmp
dec
pop
mov
xchg
repnz
push
sets
out
mov
mov
push
fsubrs
ljmp
lods
mov
orl
push
cmp
call
sbb
out
xor
push
aas
into
pop
xchg
lcall
mov
ljmp
aaa
popa
insb
fwait
sbb
jg
in
push
test
andl
xor
dec
hlt
cld
daa
xchg
mov
mov
jmp
in
int
mov
dec
insb
out
xchg
adc
push
sub
int
mov
jae
les
xlat
adc
in
or
xchg
insl
sub
pop
into
popw
xor
mov
dec
test
ror
dec
addb
add
sbb
xor
push
adc
push
xor
es
lcall
pusha
xlat
rclb
adc
jnp
xchg
push
jge
mov
mov
inc
xchg
xrelease
mov
scas
std
daa
loope
mov
cltd
sarb
push
lahf
or
adc
cmp
es
mov
mov
iret
add
push
into
jge
xor
cmp
mov
dec
loope
cmc
inc
mov
adc
dec
sub
cmc
bound
into
mulb
cli
outsl
ljmp
lcall
adcb
push
fcmovnb
cld
and
test
cmpl
shll
lcall
xchg
es
xchg
pop
addr16
push
sbb
jp
pop
jp
and
lds
mov
cmpsl
out
ret
pop
mov
into
pop
cltd
in
xor
xlat
or
push
dec
std
mov
mov
aam
adc
inc
and
repnz
fnstenv
lcall
jp
push
sarl
popf
inc
push
and
aam
fcmovu
testl
test
loop
pop
les
jb
in
sarl
out
ror
mov
jns
rcrb
divps
jno
push
scas
pop
data16
xor
adc
fisubs
gs
aaa
mov
lret
sbbl
cmp
inc
call
mov
jmp
loope
jle
adc
pop
or
not
hlt
mov
jns
pushl
in
cs
pop
or
mov
scas
aaa
mov
or
inc
mov
or
dec
mov
xor
lock
mov
ja
sub
sbb
lock
or
dec
pop
mov
pop
std
int3
int
adc
ss
pop
cld
movsl
xchg
dec
xor
add
test
scas
cld
and
mov
pmaddwd
sbb
dec
jmp
fsubr
mov
sub
movsb
ret
out
push
mov
add
nop
xor
or
lea
test
jns
in
inc
fwait
lcall
add
sbb
rcl
js
mov
pop
pop
fxch
xchg
sub
stos
outsb
fstpt
mov
sbb
jae
xlat
inc
inc
movsb
gs
call
fwait
scas
ja
sbb
and
fidivl
out
jne
cli
dec
fisttps
sbb
les
push
stos
stos
jne
icebp
in
pop
inc
je
push
aaa
push
js
add
lods
or
sub
mov
outsb
outsl
mov
ja
leave
cli
arpl
add
sbb
outsl
sub
setge
rclb
das
out
mov
jmp
addr16
inc
xchg
xor
mov
sub
insl
jle
jecxz
aad
sarl
sbb
adc
ja
es
outsl
pop
pop
push
push
lock
ja
je
add
ljmp
and
jbe
sub
push
sub
dec
adc
pop
mov
icebp
roll
arpl
out
jo
in
add
and
pop
daa
jecxz
jae
test
jecxz
mov
push
jmp
call
cwtl
test
mov
push
push
sub
rcll
out
rcll
jecxz
test
sub
xor
mov
dec
fistps
pop
dec
mov
shll
inc
mov
push
sub
fwait
inc
jecxz
jle
xlat
dec
int3
dec
sbb
mov
sahf
cs
sbb
iret
ljmp
in
adc
sub
pop
pop
jl
decl
cmp
arpl
and
xchg
adc
shlb
faddl
shll
xor
lods
xor
pop
outsb
inc
adc
loop
popa
pusha
sbb
push
xor
cld
in
sti
test
sub
je
push
scas
aam
repnz
jp
loope
xor
add
cltd
mov
sub
aam
sbb
mov
sbb
push
pop
adc
insb
dec
pop
frstor
sbb
lret
push
ss
iret
stc
and
sub
aam
les
test
mov
vpmacsdqh
in
fucomip
enter
add
incl
icebp
cmp
cmp
and
scas
out
mov
sbb
sbb
jns
pop
or
jb
push
inc
sub
hlt
inc
mov
or
insl
das
mov
xor
jmp
or
stc
addb
insl
fdivs
in
jno
movsl
xlat
sbb
lret
push
jae
push
leave
insb
pop
push
loopne
mov
movsb
ljmp
aam
sbb
sub
mov
mov
xor
popa
pop
ret
cli
xor
mov
inc
or
inc
pop
mov
xchg
lea
mov
out
adc
imul
or
dec
xlat
sbbl
sub
sahf
pop
popa
mov
xor
sbb
or
lea
mov
aam
shl
sbb
sti
push
iret
and
inc
lret
lahf
rcrl
xor
mov
cmp
mov
mov
shrb
pop
adc
mov
lret
cs
repz
out
push
jae
data16
mov
inc
lock
push
fbstp
jecxz
xchg
pop
mov
aam
mov
xor
popa
daa
or
cld
mov
rcll
xlat
scas
dec
jle
pop
xor
push
sbb
fdivp
ret
xchg
and
lret
cld
and
stos
push
add
sbb
xor
mov
sub
xor
out
xor
push
mov
or
ja
stc
adcl
repnz
push
sarb
jmp
mov
jmp
fwait
scas
sbb
jns
rcl
fs
or
aam
push
xchg
mov
loopne
inc
mov
mov
out
xchg
ret
pop
or
stos
mov
int3
mov
adc
jg
adc
push
or
add
aad
loopne
mov
and
cmp
sbb
xlat
adc
and
lea
push
jp
jp
add
xchg
inc
dec
xchg
das
pop
lods
mov
jp
scas
sub
or
call
add
hlt
roll
pop
adcb
icebp
js
bound
xchg
push
adc
mov
xor
xchg
sbb
cmp
inc
lock
push
mov
lods
addb
mov
xchg
pop
out
pcmpgtw
int3
mov
and
push
outsl
fistpl
mov
and
mov
negl
push
leave
das
jle
xor
xchg
int
push
xor
loopne
data16
jge
sub
jae
add
and
inc
je
ljmp
les
shll
jmp
scas
pop
shrb
mov
cli
inc
add
xlat
ret
loop
movsl
addr16
and
inc
ret
or
add
jmp
push
aam
jns
ficoml
in
hlt
sti
loop
lret
or
out
icebp
mov
movsb
xchg
xchg
jle
insb
out
js
rolb
ljmp
xor
dec
popf
xor
cmp
xchg
mov
pop
xor
sbbw
inc
aas
add
add
and
cmpsl
and
in
fnstenv
inc
fs
sub
pop
mov
cs
lahf
addl
lcall
fadd
xor
sub
adc
leave
cmp
or
adc
jle
xor
jl
jmp
movsb
and
xorb
xor
lret
shr
inc
adc
in
lods
dec
sub
xchg
adc
mov
outsb
ret
xchg
out
or
pop
and
cmc
fwait
xchg
nop
enter
sbb
or
orb
fisttpl
lock
sub
aaa
ds
xor
outsb
mov
push
or
add
das
stos
add
outsl
cld
popf
push
sbb
dec
xor
add
mov
out
shrl
repnz
gs
loopne
mov
ds
mov
pop
lret
jl
and
or
cmp
popa
cmp
push
pop
inc
pop
pushf
sbb
repnz
stc
lds
fstpl
hlt
mov
testl
cwtl
sahf
enter
inc
pop
mov
rorb
icebp
iret
adc
adc
leave
adc
mov
cmp
push
pop
xlat
push
sbb
scas
jg
sbb
push
out
nop
xor
push
hlt
mov
dec
je
and
mov
mov
mov
mov
dec
lahf
jmp
in
rorl
xchg
pop
popa
inc
sbb
jno
cmc
add
adc
je
lret
sub
call
cmp
popa
adc
add
mov
into
ja
orb
rcpps
sti
or
xor
adc
cmp
mov
into
xchg
or
rcll
mov
adc
pusha
add
mov
add
adc
jno
adc
notb
adc
iret
xor
loop
xchg
mov
sub
int
clc
cli
push
inc
adc
jae
ret
stc
ljmp
adc
icebp
iret
cmpsb
jmp
sbb
rcll
cmp
mov
jg
lea
pop
int3
imul
adc
hlt
add
xor
call
mov
pop
mov
or
adc
mov
mov
loopne
les
dec
pop
pop
stc
aaa
xchg
cmp
shll
mov
push
into
cmp
andb
fimuls
cmp
repnz
xchg
mov
adc
sbb
jbe
ret
rcl
inc
out
or
pop
fld
and
adcb
inc
es
les
jg
dec
add
mov
jl
fisubrs
xor
pop
aaa
push
jmp
inc
aam
imul
pop
xor
jmp
out
adcb
sbb
rclb
call
test
push
jge
xor
jbe
adc
inc
cs
pop
arpl
negl
loopne
int3
mov
push
lds
cwtl
pop
adc
mov
in
outsl
int3
jmp
out
xor
push
dec
pop
rcll
aaa
pop
jmp
push
jb
sbb
inc
movsb
jl
sub
push
and
insl
jl
call
lds
and
and
sbb
out
pop
mov
mov
loop
in
das
push
rorb
int
cmpb
adc
shll
call
push
push
push
sub
adc
cmp
xor
sbb
jo
mov
jne
hlt
pop
cwtl
jbe
movsl
fdivrp
jle
sub
jmp
sbb
in
es
dec
xlat
xor
mov
inc
sub
or
test
pop
movsb
test
pop
in
rolb
xor
loop
jge
adc
mov
int
mov
js
loop
push
in
shlb
sbb
xchg
aaa
xor
mov
pop
inc
jnp
inc
shlb
movsl
mov
repnz
pop
adc
push
test
mov
cmp
mov
cmc
adcb
and
push
mov
mov
sbb
xchg
sub
xchg
push
jecxz
rol
fists
in
stos
mov
mov
out
mov
jno
aaa
jmp
xchg
sub
ja
push
bound
mov
xchg
mov
stos
inc
add
dec
into
xchg
xchg
sahf
ss
jecxz
push
adc
inc
add
les
notl
pop
std
addr16
sarb
or
mov
add
xchg
push
jae
sarl
rcrl
jno
aam
out
stc
lds
xlat
xchg
pop
mov
push
ds
mov
push
xchg
push
mov
and
push
idivl
mov
stos
push
imul
mov
sahf
dec
cmp
aas
add
mov
adc
xchg
push
mov
adc
adc
jns
pop
loop
mov
sbbl
adc
imul
pop
lcall
add
mov
pop
decb
leave
pusha
pslld
xchg
jo
push
stc
in
movsl
out
pop
hlt
fidivrs
push
fmul
dec
incb
pop
divl
inc
mov
add
cmpsb
jnp
mov
pop
pusha
stc
adc
icebp
movsb
fsub
data16
sarb
sbb
fs
popa
xchg
adc
cmpsl
jmp
gs
scas
stc
jns
xor
cmpsb
xor
sub
mov
adc
repz
or
ja
cli
testl
cmp
imul
stos
ss
cmp
data16
es
cmp
cld
rcrl
add
aam
in
cld
ret
inc
dec
push
jnp
and
or
adc
mov
jmp
mov
inc
in
adc
push
int3
repz
or
cld
and
jle
or
xor
jge
jg
jmp
out
popf
xchg
adc
and
js
int3
pop
adc
inc
sbb
inc
pop
fstl
or
mov
adc
inc
dec
mov
xchg
je
mov
fildl
sub
and
mov
ss
adc
xchg
outsl
jmp
cmpsb
lds
aaa
imul
lret
pop
jle
jl
hlt
dec
pop
cld
push
sbb
dec
test
add
mov
add
xor
lss
xor
mov
outsb
xchg
mov
mov
mov
outsl
jb
mov
es
mov
sbb
push
out
xchg
mov
mov
jge
arpl
or
dec
call
mov
jb
adc
push
pop
inc
dec
push
aaa
out
inc
rolb
aam
out
popa
dec
cmpsl
cmpsb
jge
nop
hlt
mov
mov
inc
mov
inc
push
adc
ret
rorl
leave
dec
arpl
mov
std
shlb
inc
xlat
or
fcmovu
ja
sahf
sub
mov
bound
popf
lret
mov
mov
aaa
jo
into
mov
mov
push
loop
inc
sub
mov
out
loope
push
push
push
mov
mov
dec
out
jg
sbb
hlt
dec
sbb
xlat
pop
movb
dec
sub
bnd
in
out
imul
jge
aaa
shl
or
lods
out
xor
pusha
stc
pop
pop
cmpsb
xor
inc
mov
xor
movsb
lcall
es
or
dec
test
sub
nop
pop
stos
mov
mov
rorb
test
jp
and
lock
push
addr16
xor
iret
jb
sbb
mov
fcoms
push
cmpsl
ss
sub
out
and
movsb
out
sbb
xchg
dec
lds
fidivrs
xor
xorl
test
jo
repnz
dec
test
orb
je
fs
mov
int
loope
inc
sti
loope
adc
jno
les
gs
fistps
scas
mov
inc
pop
cwtl
stos
in
lret
movsb
call
test
xor
stc
test
xchg
es
int3
lcall
or
pop
add
dec
cli
mov
test
loop
xchg
xor
je
xchg
or
xchg
xchg
les
lods
shlb
push
jmp
push
rorl
add
pop
outsb
mov
std
xor
xchg
dec
jl
aam
push
lods
adc
mov
push
jb
out
inc
js
xchg
sbbb
loope
lret
push
mov
adc
out
adc
xor
lock
in
ss
cmp
xchg
pop
push
popf
insl
aad
lock
cli
mov
mov
daa
cmp
jecxz
xor
dec
aaa
pushf
daa
jmp
sbb
xlat
in
add
lods
cs
adc
ljmp
add
leave
das
dec
loope
cltd
xlat
adc
jmp
shll
ss
pop
imull
inc
push
dec
inc
inc
ljmp
notb
insb
mov
cwtl
ds
dec
je
mov
pusha
add
inc
xchg
and
push
mov
push
lret
hlt
adc
repnz
mov
push
repnz
push
cmp
pop
call
pop
fimuls
lock
mov
test
in
inc
testl
xchg
mov
rcl
jbe
sub
fucomi
mov
jns
push
nop
cltd
aam
jbe
rorl
adc
sbb
and
mov
pop
in
lods
dec
out
pop
arpl
insl
scas
aam
mov
push
pop
mov
lods
push
gs
cltd
sbb
lcall
pop
daa
rclb
imul
mov
jne
mov
push
ret
in
jmp
xlat
adc
int3
insl
orb
pop
mov
or
scas
dec
lods
ret
sub
lock
cmp
mov
jle
call
push
and
push
jns
and
cmp
imul
dec
push
mov
pop
jbe
in
jl
jns
sahf
xchg
in
cld
ja
scas
push
movsl
rcl
ja
in
iret
leave
xchg
enter
aas
enter
test
imul
sbb
ja
shrd
std
jno
sbb
jecxz
jbe
dec
mov
inc
movsb
sbb
pop
mov
mov
lock
mull
xchg
xchg
rclb
sarb
std
pop
in
divl
dec
pop
cmp
xchg
push
cmpsl
out
cmp
aaa
adc
cltd
xchg
div
sub
icebp
xor
pop
call
out
adc
pop
xor
rorb
mov
addr16
mov
xchg
push
std
je
adc
dec
cmp
les
jecxz
sbb
enter
dec
orb
test
cmp
dec
fildl
push
insl
jmp
movl
and
xchg
dec
xchg
sbb
adc
xchg
dec
and
cmp
or
xchg
adc
je
push
rcll
lret
or
lods
add
or
imul
repnz
xor
sub
loope
repnz
xor
push
outsl
pop
sub
add
js
pop
mov
push
xchg
and
ds
shlb
call
out
sub
xor
mov
in
addr16
sub
jp
sbb
inc
lds
loop
cmp
jge
push
rep
in
sub
stos
arpl
mov
pop
add
jbe
and
aam
push
out
add
xor
mov
les
dec
sarb
addr16
or
adc
js
jbe
ljmp
clc
ret
xchg
jge
and
and
push
pop
js
ss
shrb
xchg
and
cli
out
inc
out
xchg
lret
sahf
pop
fisubrl
or
bound
repnz
aad
and
fwait
or
fiaddl
cli
add
jmp
addr16
pop
push
add
in
jecxz
push
inc
clc
test
pop
dec
cmp
sbb
pcmpgtw
sbb
jge
ret
xchg
sub
dec
pop
pop
mov
mov
scas
into
xchg
or
imul
pushf
clc
jmp
popf
ret
cmpsl
notl
lcall
ds
lock
neg
out
jg
cmpsb
cmpsl
mov
mov
jne
test
bound
jae
cmpsl
rcl
lahf
inc
xchg
adc
and
or
dec
jo
aam
pop
inc
jl
sbb
xchg
in
adc
gs
xchg
imulb
out
movsb
mov
mov
dec
int3
mov
ds
mov
ficoml
test
int
in
xchg
add
aam
sbb
je
in
andb
mov
fsub
insl
js
or
xchg
pop
jne
ja
cmp
insb
push
xor
movsl
imul
sbb
or
dec
imulb
adc
mov
pushl
push
sbb
les
xor
outsl
pop
push
lods
aaa
mov
scas
pop
jmp
add
dec
mov
das
xorb
xchg
push
roll
pop
sbb
mov
inc
in
lcall
aad
testb
arpl
inc
push
xor
sbb
stos
and
add
loop
mov
jl
push
adc
mov
jle
or
pushf
pop
pop
add
icebp
hlt
inc
jecxz
es
add
mov
ds
pop
addr16
mov
and
and
mov
js
cli
setbe
jge
loop
and
xor
or
dec
pop
xchg
aas
popf
dec
scas
xor
out
pop
jge
movl
xchg
rorb
sahf
test
xor
ss
add
xchg
out
fcom
scas
loopne
scas
jb
icebp
ja
inc
jle
inc
ret
jne
je
jmp
out
or
or
daa
test
lods
fs
mov
out
mov
xor
ds
jmp
cltd
imul
fidivrs
xor
jecxz
in
lret
ffreep
mov
das
ss
notb
cmp
or
out
adc
mov
jg
or
inc
dec
cmp
push
rcrl
jmp
jmp
push
cmpsb
xchg
cltd
jae
push
sub
adc
push
jbe
cmp
andl
and
mov
lcall
cmp
jnp
adc
dec
inc
ret
test
jmp
popa
lds
clc
fildl
iret
imul
xchg
pop
scas
mov
lahf
jae
fidivs
sbb
std
or
xchg
mov
js
dec
pop
test
popa
enter
jg
cltd
dec
xchg
cmp
or
sti
dec
fistl
insl
mov
rolb
out
scas
xchg
sub
aad
adc
arpl
adc
cld
pop
xor
jp
push
or
push
fistl
sbb
insl
cli
ficoml
nop
hlt
mov
mov
dec
jg
fldt
sbb
mov
enter
xchg
sbb
cmp
fildll
xchg
test
adc
out
mov
repnz
addb
push
subb
push
shll
repz
sub
stos
fwait
out
or
jae
fisubl
jecxz
xor
into
out
push
adc
adc
adc
push
pushf
movsl
lahf
mov
add
sbb
daa
popf
xor
in
sub
sbb
arpl
outsb
mov
jle
leave
sub
in
sub
jno
outsb
outsb
lods
inc
pop
daa
push
hlt
test
inc
inc
shlb
clc
jecxz
in
adc
icebp
xchg
test
imul
cld
mov
inc
les
pop
out
or
aas
push
testl
dec
pop
sbb
sub
jg
xchg
call
cld
inc
arpl
lcall
js
jbe
into
xchg
mov
xchg
jo
adc
sub
call
hlt
test
xchg
sbb
push
push
mulb
lret
push
push
lret
out
sub
mov
lret
mov
dec
fbstp
iret
outsl
mov
adc
or
subl
mov
insl
ss
pop
pop
fstpt
iret
fisubl
cs
imul
lret
dec
stos
dec
inc
mov
mov
inc
mov
aam
push
dec
arpl
or
mov
cmp
sbb
mov
add
ffree
leave
jne
in
mov
insl
sbb
fisubrl
in
test
mov
sub
sahf
data16
sbb
mov
gs
call
xchg
ret
dec
popf
mov
lret
insl
jmp
addb
iret
jg
and
mov
mov
lods
repnz
sarb
xlat
mov
inc
cli
rol
mov
pop
jbe
js
pop
dec
adc
or
icebp
sbb
sub
cmp
ljmp
jo
cmc
test
orl
mov
enter
movsb
push
cmp
sub
loop
mov
pushl
cld
clc
cmc
mov
scas
dec
incl
out
in
push
into
add
inc
clc
test
rcll
in
popa
push
stos
mov
xor
and
stos
aad
xchg
adc
js
mov
aam
fdivl
jnp
inc
xor
mov
pusha
adc
icebp
cmc
mov
rcrl
loop
xor
mov
xor
ret
fwait
sahf
xor
cmp
pop
pop
rcr
sahf
int3
sub
cmp
notrack
mov
xor
push
xchg
sub
add
in
sub
xlat
mov
stos
dec
push
xchg
mov
fisubrs
xorl
dec
jo
rclb
mov
adcl
lods
cmp
pushf
mov
sbb
repnz
xor
in
jns
iret
ja
sub
push
cs
dec
pop
and
jg
loope
add
dec
and
jne
dec
pop
int
dec
mov
test
dec
inc
mov
jne
std
aad
jl
push
out
fistl
xor
push
test
test
or
sub
pop
jae
jbe
mov
filds
push
scas
inc
imul
sub
mov
pop
or
jp
mov
mov
out
scas
inc
aam
cmp
adc
xchg
mov
scas
je
fwait
mov
test
aad
movsl
pop
mov
sub
insb
sub
leave
mov
aaa
dec
or
loop
xchg
std
mov
movsl
push
roll
pop
and
sub
push
fisttps
rcl
push
aaa
cmp
data16
pop
lods
into
jno
ljmp
into
das
dec
inc
icebp
cs
adc
bound
sub
or
call
xor
xor
mov
or
add
dec
divps
xchg
hlt
shlb
call
repz
in
andb
cld
push
rol
test
cltd
push
lea
je
mov
loop
test
push
test
cmpb
sbb
and
push
cwtl
imul
inc
jmp
in
push
jns
add
cld
out
push
shlb
xor
xchg
in
test
pop
jp
ja
bound
iret
shl
ja
fiadds
cli
ss
cmp
push
sbb
loop
mov
fiaddl
push
add
mov
test
adc
arpl
int3
mov
scas
clc
stos
mov
gs
mov
dec
add
mov
sbb
jmp
mov
adcl
call
enter
aad
pmaxub
cs
imul
scas
addr16
pop
mov
cmp
in
lods
jno
push
stos
pop
lea
aam
fstl
ljmp
xchg
sti
jns
xor
and
jecxz
sub
pop
mov
dec
mov
in
xchg
jmp
dec
andb
sub
mov
orb
and
cmpsb
sub
xchg
jbe
xor
rolb
insl
rorb
xchg
jle
or
test
repnz
push
lea
sti
lea
push
and
lock
and
sub
test
movl
mov
ljmp
pop
std
mov
xchg
pushf
sbb
repnz
cmpsl
repz
clc
movsl
lods
bound
xor
sbb
sti
inc
sub
mov
cmpb
testl
mov
sub
imul
mov
mov
cmp
cmc
inc
das
inc
mov
lock
aam
mov
lods
mov
inc
adc
mov
cmpsb
adcb
clc
inc
inc
les
das
lret
pop
stos
mov
cmp
loop
or
shl
movsl
repz
cmpsl
and
daa
inc
cli
shrl
fwait
mov
push
pop
pop
cwtl
jno
repnz
test
lock
cmp
mov
cmp
adc
push
in
std
dec
push
cld
sbb
lret
iret
mov
nop
adc
sbb
add
jo
je
add
mov
insl
sbb
iret
and
dec
arpl
pop
je
push
xchg
dec
and
lahf
add
fsubrp
lret
arpl
mov
xor
popa
outsb
pop
test
inc
paddd
mov
rsqrtps
sahf
dec
repnz
fdivl
loope
shlb
lds
subb
rorl
orb
ljmp
push
add
inc
stos
iret
sub
mov
pop
je
daa
ret
lods
sub
add
cli
xor
enter
cli
loop
sub
xchg
enter
push
adc
divb
push
mov
xchg
jns
enter
daa
pusha
in
je
inc
ret
push
jns
push
sti
mov
into
jecxz
in
int
push
lret
xor
xor
jg
rolb
fbld
popa
dec
jno
jmp
out
scas
mov
arpl
mov
push
pop
insl
cmp
dec
or
mov
ljmp
jecxz
inc
stos
int3
sbbb
ret
fists
inc
in
scas
pop
jb
fisubl
scas
xor
scas
and
imul
cld
xchg
push
inc
jb
ret
test
ret
fisttpll
call
push
jp
hlt
test
out
lods
test
jbe
mov
jne
test
lahf
out
xchg
mov
fstpt
nop
sbb
push
fsubrl
out
pop
jp
mov
test
icebp
aas
push
or
dec
in
push
inc
lods
mov
mov
insl
movsl
addr16
xlat
imul
stos
addr16
aaa
ss
sub
out
and
aam
sub
sbb
cld
add
cwtl
roll
sahf
xchg
out
jo
pop
push
sub
icebp
sti
jl
dec
jnp
movsl
inc
sbb
jle
out
jno
push
mov
push
pop
js
sbb
cmp
scas
mov
mov
mull
mov
or
pop
xor
movsb
jl
xor
div
out
stc
mov
xor
inc
les
mov
fs
jne
push
xchg
cmc
aas
ret
repz
fcomip
adc
jo
jmp
fwait
inc
iret
rclb
and
les
cs
bound
pop
pushf
jmp
fdivrp
xchg
lcall
in
scas
dec
mov
sub
add
gs
cltd
jnp
xchg
lret
idivb
and
arpl
jae
xor
fistpl
mov
pop
pop
lea
push
push
addl
mov
jge
imull
inc
in
adc
pop
push
in
xchg
inc
nop
ljmp
gs
adc
scas
push
xor
push
jno
mov
pop
push
rcll
inc
je
xchg
cld
jo
or
scas
jge,pt
push
in
fdivl
mov
cmp
lret
std
jb
out
sub
push
outsl
mov
inc
icebp
lods
jb
outsl
cmp
push
push
test
ljmp
mov
aam
sbb
jb
fsubl
and
mov
sbb
jnp
xchg
cs
adc
add
xchg
inc
stos
push
mov
fs
xchg
gs
into
xchg
ret
xchg
and
lahf
mov
fs
ja
scas
adc
scas
push
push
add
das
test
fcmovbe
inc
cmp
js
fs
into
add
adc
add
adc
scas
cmp
je
jg
cmc
inc
lock
inc
std
movsl
or
test
movsl
divb
mov
adc
add
stos
xchg
pop
out
inc
pop
jae
xchg
add
inc
xchg
rorb
mov
sbb
or
insl
inc
xlat
mov
nop
cmp
inc
pop
lcall
js
mov
dec
jnp
xchg
or
pop
mov
xchg
xchg
xor
es
outsl
shll
lea
dec
jge
and
in
clc
sub
inc
sar
cmp
mov
hlt
mov
fbstp
mov
shlb
push
aaa
push
in
jg
jae
js
cwtl
jno
and
mov
adc
stos
cmp
ret
or
fidivl
xchg
pop
pop
lret
ja
inc
sarb
std
dec
test
add
cmp
and
dec
sbb
das
sub
mov
out
mull
cmp
and
pmaddwd
xlat
lahf
sbb
dec
pop
push
sbb
cmc
pop
mov
pop
jge
sahf
mov
insb
subb
jecxz
push
inc
test
es
psubsb
daa
aas
mov
xor
jle
mov
insb
nop
add
in
and
js
pop
jnp
shlb
mov
inc
adc
test
mov
push
daa
push
pop
pop
loop
outsl
jnp
fisubs
pop
dec
loope
out
aam
mov
mov
adc
in
pop
arpl
mov
xor
xlat
cmp
xchg
mov
ret
mov
into
std
push
dec
stos
sub
xchg
outsl
jle
add
sub
loopne
jmp
and
mov
lock
xlat
jb
adc
jnp
test
adc
mov
repz
outsb
xchg
xchg
mov
testb
cltd
stos
sbb
std
and
sbbb
xchg
js
add
adc
ss
lret
cli
cmpsb
mov
int3
inc
push
and
lods
ret
addl
jg
cld
rolb
insl
inc
movsb
cltd
test
add
jle
xchg
das
cmp
mov
mulb
test
jnp
pop
cmpsl
mov
inc
jp
jns
cltd
mov
insb
jl
cmp
testb
and
pop
and
jl
sbb
gs
mov
mov
jl
ret
dec
js
clc
pop
mov
push
pop
mov
nop
lahf
aaa
mov
mov
push
loope
jl
sbb
pop
and
pop
lsl
call
mov
adc
push
sbb
xor
int
fistl
mov
pop
imul
mov
jb
push
sbb
imul
mov
cmc
cltd
dec
mov
lcall
pop
mov
adc
test
mov
in
icebp
fsubrl
icebp
adc
sub
jne
pop
or
push
xchg
lock
inc
shl
lret
mov
lcall
push
outsb
lcall
test
mov
sub
push
popf
popf
adc
aad
notl
add
stos
ret
insb
push
js
jo
es
or
popa
lock
dec
inc
rolb
and
push
test
cli
mov
lcall
outsb
dec
jne
jge
cwtl
jno
xchg
jmp
add
inc
cmp
mov
movsl
xor
mov
clc
jecxz
pusha
inc
outsl
rcll
lea
imul
inc
and
and
adc
insl
les
aaa
out
adc
adc
and
lods
pushf
mov
call
dec
lahf
or
loopne
adc
xchg
andl
std
data16
popa
aad
icebp
ja
adc
xchg
sbb
xor
mov
ljmp
ljmp
add
mov
shlb
into
std
fidivs
pop
add
cld
out
sti
push
xor
fwait
dec
lret
push
addr16
ja
mov
inc
inc
inc
inc
fisubrs
pop
pop
mov
push
push
ror
pop
sub
cmpsb
pop
loope
sahf
insb
movsb
adc
out
out
jne
pusha
hlt
js
or
mov
sahf
fadds
aam
icebp
lahf
out
or
jle
push
or
rol
in
in
add
inc
xchg
cld
cmpsl
arpl
stc
sahf
and
jge
scas
xor
sub
fiadds
rorl
test
jle
jbe
mov
cmpsl
and
mov
nop
mov
in
push
jne
mov
repz
lods
or
mov
xchg
sub
adc
or
lret
mov
fsubrl
ret
mov
in
xchg
jmp
ret
jge
push
sub
xchg
jg
jo
fisubrs
fwait
aam
xchg
cltd
repz
enter
dec
aaa
dec
cmovno
xor
xchg
or
cs
test
rclb
rclb
or
add
mov
mov
les
lret
and
ljmp
test
cmp
aaa
repnz
or
add
push
mov
pusha
ja
push
push
xlat
test
in
shll
bound
or
addr16
or
ret
in
adcl
inc
jmp
sub
call
sub
jle
shll
movsb
test
sbb
sub
repnz
movsb
scas
fcoml
stos
jne
mov
inc
inc
movsb
inc
adc
xchg
pushf
jg
jmp
ret
dec
pop
in
push
fbld
push
xchg
push
movb
insb
imul
mov
xchg
mov
sub
test
rorb
push
mov
lret
jmp
push
test
cmovle
rorb
and
push
sbb
sahf
scas
mov
mov
sbb
arpl
out
jno
push
cld
mov
or
xchg
xchg
int3
push
call
xor
mov
dec
rcrb
xchg
iret
arpl
mov
out
inc
cmp
pop
sahf
inc
mov
test
inc
push
ds
lahf
sbb
inc
std
insb
arpl
lods
lods
inc
pop
jge
xlat
sahf
and
add
fs
ret
jmp
adc
popa
shl
stc
in
xlat
and
and
and
mov
loope
not
mov
cmp
jmp
lds
inc
sub
aaa
fwait
sub
decl
fildll
xor
or
mov
push
lret
inc
add
jno
pop
jmp
nop
mov
mov
ds
cmp
mov
add
fidivrs
or
scas
repz
mov
lret
xor
sbb
mov
mov
sub
lret
mov
lods
sub
lcall
adc
xchg
sub
cltd
xor
clc
dec
loop
out
sarl
int
xchg
dec
or
push
test
jbe
pop
cmp
les
sti
aad
movsl
sbb
jbe
push
jl
clc
imulb
arpl
push
shrb
cmc
dec
fwait
or
adcb
cmp
andb
out
and
mov
jg
jge
and
push
or
lds
mov
dec
testl
movsl
xor
xor
or
mov
mov
mov
leave
int3
mov
adcb
inc
sub
sbb
mov
mov
arpl
bound
or
scas
push
cmp
aam
clc
dec
xlat
push
mov
out
mov
mov
cmp
mov
dec
mov
daa
test
sbb
xchg
sub
cmp
dec
mov
mov
xchg
cld
xchg
mov
or
xchg
push
pop
push
pop
xor
mov
cmpl
dec
dec
bound
inc
and
cmpsl
cmpsl
in
jno
push
popl
mov
fnstcw
mov
lret
mov
scas
jno
push
cmpsb
pop
mov
xchg
out
mov
clc
inc
jae
movsl
mov
pop
int
or
mov
jne
adc
sub
adc
movsl
aaa
mov
jb
cmovo
xchg
sub
leave
jl
jg
jne
imul
mov
mov
mov
mov
test
orb
addr16
sti
push
call
notl
cmp
in
jno
push
pop
add
mov
fldenv
inc
outsb
js
and
fildl
pop
test
orl
jae
dec
xchg
jno
dec
cld
cmovs
hlt
xchg
shl
repnz
dec
lock
and
lea
clc
in
jno
push
cmp
add
mov
fstps
daa
outsb
js
and
scas
loope
enter
lret
pop
int3
mov
cs
adc
sub
and
xchg
sub
dec
inc
cmc
sbb
xchg
div
fsubp
stc
dec
fdivrl
sti
and
lea
and
and
push
add
mov
fnstcw
fiaddl
call
fcmovne
jno
push
lret
pop
out
mov
or
iret
cmp
adc
xor
adc
enter
dec
outsl
xor
cmc
ret
dec
push
call
adc
pop
push
repz
arpl
jg
xchg
dec
insl
cvtpi2ps
dec
and
int
jbe
test
add
xor
or
loop
pop
add
jmp
jmp
in
mov
jp
xchg
cmp
ret
adc
in
push
ficoms
xor
insl
inc
pop
pushf
mov
fcmovbe
and
movsb
mov
int3
jle
sbb
call
jecxz
pop
add
xchg
loope
pop
iret
fcmovne
jecxz
or
into
stos
insl
fwait
fwait
mov
fldcw
xchg
mov
das
adc
aaa
mov
icebp
mov
ds
adc
mov
cmp
in
and
sahf
mov
xchg
sub
daa
mov
dec
cwtl
sbb
jge
loopne
cmp
fidivs
add
mov
sbb
xchg
es
pop
dec
and
out
fisttpl
cmp
mov
dec
and
sub
rcrl
lret
loop
sbb
push
inc
call
in
lea
mov
mov
jecxz
pop
fbstp
fdivrs
xchg
les
mov
outsl
in
je
mov
or
push
xchg
fistl
lcall
push
test
sbb
jne
rcrl
xorl
ret
pop
mov
mov
sub
scas
mov
rorb
mov
dec
test
cmp
push
jle
jne
cmp
mov
xor
mov
inc
lahf
jnp
lret
xlat
lahf
xor
xor
mov
xchg
mov
adc
adc
adc
xor
aaa
ret
or
pop
push
fstps
push
inc
adc
mull
ljmp
aam
jae
xchg
jmp
xchg
push
subb
dec
outsl
aam
stos
sarl
mov
data16
mov
test
sbb
imul
jb
movsb
mov
jns,pn
xchg
adcb
mov
inc
shll
add
movsb
outsl
cmp
add
jnp
ljmp
push
or
inc
push
dec
mov
jnp
jle
xor
xor
movsb
fisubl
shrl
xchg
xorps
pop
int
roll
xchg
pop
mov
adc
js
cmpsb
repnz
dec
pop
adc
out
dec
adc
pop
inc
je
jmp
into
clc
xchg
shr
adc
jbe
jecxz
cmp
pushf
stos
pop
iret
pop
jecxz
sbb
and
add
ds
in
and
leave
xchg
or
inc
ret
adcl
xchg
cmpsl
cmpl
test
iret
movsb
pop
and
xchg
pop
xchg
je
mov
push
sbb
pop
jecxz
adc
xchg
test
or
dec
int3
test
or
sub
cmp
test
aad
inc
pop
into
mov
inc
cmpsl
xchg
push
cli
or
mov
outsl
pop
mov
aad
xchg
dec
cmp
cmp
push
scas
pop
sub
iret
lds
out
ds
nop
out
fs
cmp
dec
sahf
loope
hlt
loop
and
outsl
movsl
mov
sbb
jae
ja
lods
fs
lods
push
dec
cmc
test
push
add
mov
push
lret
cltd
pop
xor
mov
dec
sub
ja
cmp
adc
push
and
jnp
stos
pop
leave
mov
pushf
icebp
push
inc
jecxz
xor
scas
pushf
dec
fdivl
or
aam
outsb
in
fprem1
das
mov
adc
fisubl
outsl
pop
jecxz
mov
xchg
cmp
inc
pop
aaa
mov
dec
test
mov
pushf
sub
iret
cmc
enter
lret
jp
inc
mov
repnz
fsubp
xchg
fcomi
andl
sbb
mov
aad
fdiv
sub
push
fbstp
push
out
js
aad
jno
into
and
int
xchg
mov
bound
int
es
lods
fwait
xchg
lahf
xlat
stc
aam
mov
test
leave
pop
popa
jae
rclb
pop
and
pop
jp
call
sets
repz
mov
add
iret
loop
cs
mov
pop
ss
pop
jbe
jb
lahf
or
fnstsw
cmp
xchg
stos
movsl
sbb
sbb
stc
mov
mov
pop
cmp
sahf
sub
mov
les
test
ret
outsl
jno
jecxz
lcall
xor
jae
pop
dec
xchg
mov
popf
repnz
cli
call
inc
notb
jne
loope
push
mov
xchg
pop
push
bound
mov
push
push
jno
push
xchg
sbbb
jge
jns
push
ja
adc
adc
inc
adc
out
test
fcomps
hlt
mov
adc
xchg
jbe
xchg
inc
or
loopne
pop
pop
rcl
jmp
xchg
jmp
outsl
mov
jle
mov
cld
rep
sbb
jg
xorb
mov
les
pop
cltd
fidivs
mov
dec
hlt
icebp
mov
xor
cmp
pop
dec
stos
rcrl
xchg
decl
mov
rclb
push
ret
fimuls
sti
mov
stc
mov
lods
lock
push
movsl
int
jo
fmull
xchg
or
adc
sbb
and
inc
jecxz
loop
sub
test
ret
mov
lods
clc
mov
fcomip
jmp
cmp
ss
adcl
or
notl
dec
and
push
adc
outsb
das
push
fstpt
dec
jns
add
sbb
adc
pop
je
mov
mov
pop
push
jns
iret
testl
outsb
stc
push
cmp
bound
rcr
std
adc
rolb
test
std
mov
test
fidivs
aaa
cmpsb
xlat
mov
adc
inc
mov
mov
dec
push
sub
es
cmp
xlat
adc
pop
xlat
inc
sub
mov
scas
mov
cmpsl
pop
fdivrp
scas
cld
mov
jb
add
rcl
repz
dec
mov
cmp
fs
pop
lods
fisttps
xchg
adc
int
hlt
jg
mov
cs
les
pop
mov
mov
mov
loope
push
sarb
ss
std
jp
cmp
cmp
push
dec
xor
inc
fnstsw
mov
addr16
dec
and
aaa
xlat
inc
inc
push
jecxz
stos
xchg
jp
xlat
decl
and
mov
mov
push
shl
loope
leave
xchg
add
test
inc
fdivs
sub
cwtl
mov
add
sub
stos
xchg
bound
cmc
sub
dec
les
mull
inc
int
or
in
test
xchg
cmpsl
fsubl
lahf
add
mov
push
test
arpl
dec
mov
xchg
call
mov
lcall
inc
xor
rorb
hlt
fdivs
mov
ja
mov
daa
fmull
dec
or
add
xor
pop
daa
push
add
pop
cmp
rol
push
jmp
cmp
and
cmp
pop
mov
inc
push
jns
and
scas
rorb
cmp
into
sbb
cmpsb
mov
inc
les
pop
jno
mov
fsubrs
cmpl
pop
xchg
popf
sub
sbbb
aas
add
ss
jnp
bound
jl
rorl
ficoml
mov
arpl
shl
and
dec
imul
jecxz
xor
or
scas
aam
hlt
aam
jne
js
data16
rolb
cmp
lods
adc
mov
push
inc
loop
repz
push
rclb
adc
lds
popf
sbb
pop
ja
xchg
push
aad
xchg
xchg
sbb
jge
lea
xchg
xor
or
insl
lods
icebp
jecxz
lods
dec
mov
sub
or
mov
lahf
enter
inc
gs
iret
aas
and
stc
daa
out
sub
aas
jge
hlt
andb
pop
dec
adc
push
add
loope
loope
adc
xor
test
fidivrl
rcrb
xor
xorb
push
cmp
les
add
mov
jge
in
jecxz
pop
pop
dec
cmp
pusha
out
fs
into
shrl
inc
push
inc
and
int
xchg
xor
imul
les
psraw
pushf
pop
xchg
js
mov
mov
mov
mov
cli
and
outsb
pushf
jle
dec
and
mov
out
mov
sbb
fwait
xor
add
scas
aam
stos
shrb
adc
adc
fsubs
es
and
push
or
js
lds
in
cmpsl
stos
pop
out
dec
sbb
adc
adc
mov
mov
mov
mov
xchg
or
dec
in
out
add
adc
mov
ljmp
push
xchg
nop
cmpsb
inc
mov
xor
int
repnz
jmp
mov
fs
xor
push
mov
jae
adc
push
js
shl
xchg
xchg
fs
xchg
push
push
pop
or
xlat
scas
ret
loop
popf
push
push
jae
cmpsl
cld
and
mov
fs
inc
cmp
mov
das
fwait
and
loopne
mov
outsb
bound
xchg
jecxz
push
test
jmp
pop
push
push
shrl
mov
inc
sub
and
in
dec
or
scas
mov
push
adc
or
mov
cltd
or
pop
jo
jo
pop
aas
testb
mov
cmp
adc
repnz
and
pop
inc
sbb
pop
and
sub
cmc
push
mov
shrb
cmp
pushf
aaa
mov
fbstp
repz
dec
and
mov
mov
fwait
outsl
and
lret
sbb
loope
and
jge
mov
cmp
subb
repnz
cmp
cmpsl
roll
xchg
add
out
adc
cmp
mov
clc
mov
das
iret
mov
insl
sbb
inc
lret
mov
lods
adc
fs
sti
in
push
xor
loope
xchg
adc
jmp
mov
mov
lahf
pop
sbb
adc
lret
sbb
jp
jnp
mov
sar
fcmovb
xchg
mov
shrb
add
test
mov
test
mov
imul
mov
xchg
roll
stos
les
into
jge
rolb
bswap
xor
test
call
jmp
mov
or
jb
xchg
cmc
je
imul
mov
pop
stos
xor
push
sbb
jge
ds
in
cli
pushf
cmp
popa
call
jge
leave
adc
cli
or
loope
test
push
cmp
into
lods
push
nop
xlat
sbb
jnp
jne
add
or
out
push
cmp
pop
icebp
mov
jle
rep
mov
add
jge
enter
pop
and
inc
shlb
mov
das
jo
movsb
xor
test
adc
mov
add
and
mov
repnz
lcall
mov
movl
xor
rcl
stos
ret
outsb
jnp
mov
je
sbb
inc
movsb
mov
loope
arpl
inc
es
loop
mov
inc
adc
dec
sbb
add
jmp
push
outsl
stos
sbb
jle
adc
sbb
inc
mov
sbb
cmc
cwtl
repnz
sub
push
push
lret
cmp
mov
adc
sbb
mov
jb
xor
mov
rorl
push
icebp
or
cmp
or
sbb
mov
scas
push
sbb
jns
inc
in
sub
push
add
ss
inc
jns
insb
pushf
nop
loop
js
dec
sahf
pop
jge
call
test
mov
push
push
int
fiadds
adc
bnd
mov
dec
jbe
jge
and
out
sbb
rcll
xchg
aad
adc
cmp
cmp
xchg
fnstenv
into
fsubrp
adc
nop
hlt
mov
lret
push
mov
fists
cmp
xchg
add
loope
adc
pop
lret
sub
cli
clc
test
sbb
jo
test
cmp
or
adc
cwtl
push
pop
mov
xor
les
mov
push
je
lret
cmp
xchg
sub
cwtl
or
scas
cld
mov
scas
fdivs
clc
jge
push
lock
mov
xchg
adc
inc
decl
cmp
ja
lea
iret
ljmp
cmp
mov
sub
adc
sbb
push
lods
fldt
pop
rcll
enter
pop
pop
pop
insl
xchg
loope
lods
scas
loop
pushf
push
or
dec
mov
jle
cwtl
xor
out
into
les
mov
imul
push
shlb
cmp
cmpsb
sub
lds
in
nop
mov
adc
xchg
adc
into
mov
mov
add
mov
iret
mov
jb
in
cmc
fcoml
mov
xor
mov
rol
addr16
pop
ret
push
sub
sbb
push
stos
mov
sbb
mov
leave
jp
fdivrl
xlat
imul
fisubrs
in
lds
imul
iret
cmp
dec
data16
xchg
sbb
push
iret
imul
fs
jne
call
insb
aaa
cltd
dec
sub
stos
mov
adc
outsb
push
sbb
sub
push
loop
dec
cltd
xchg
inc
test
testl
sbb
inc
pop
inc
imul
mov
and
aaa
int
jl
add
fs
jge
mov
roll
pushf
lock
jae
inc
xchg
or
and
scas
add
test
fidivrs
cmp
push
mov
inc
mov
ljmp
call
jl
xor
pushf
lds
fcmovbe
jg
rol
mov
scas
outsb
sbb
sbb
loope
cs
movsb
cmc
mov
cmpsb
dec
adc
mov
shlb
xchg
jnp
add
inc
gs
lods
aaa
enter
in
push
aad
hlt
dec
pop
je
mov
dec
add
add
jo
movsl
iret
or
pop
xor
adc
dec
call
pop
dec
and
shlb
hlt
mov
and
sub
jge
adc
out
xor
pop
into
mov
test
jle
scas
dec
icebp
stos
insl
adc
pop
mov
sub
mov
adc
sti
in
mov
je
push
insb
sbb
xchg
cmp
cwtl
fiaddl
cs
jbe
mov
enter
cltd
test
xchg
into
jne
lret
out
in
sarb
mov
sarl
aaa
cs
stos
sbb
in
push
lods
popf
into
dec
mov
pop
sub
mov
jg
and
rcl
jmp
fwait
jecxz
push
xor
cmpsl
pop
cmp
dec
stos
rorb
xchg
xlat
and
or
es
movsl
mov
outsb
xchg
aaa
xchg
xor
aaa
sub
sub
push
daa
ljmp
xchg
push
cmc
xchg
lods
sbb
adc
cmc
cltd
es
lret
out
sub
jg
mov
cwtl
pop
adc
cs
in
fs
mov
push
add
mov
push
xchg
dec
sti
cs
cli
and
dec
and
and
xchg
loope
dec
and
pop
sub
xor
mov
in
sub
ret
cmp
daa
jle
jbe
jno
push
push
xchg
dec
iret
das
aad
jecxz
xchg
call
mov
cld
add
push
xor
push
movsl
iret
adc
xchg
xchg
lods
mov
out
xchg
sub
push
in
and
pop
mov
and
nop
xchg
pop
sti
jl
adc
pusha
mov
lds
aas
les
mov
test
out
in
sub
jecxz
jge
jmp
popa
xchg
iret
fmul
into
lds
int
dec
adc
mov
cs
adc
sbb
bound
int
sbb
xchg
or
mov
dec
xchg
je
cmp
jecxz
loopne
add
dec
pop
ja
pushf
popa
popa
jns
scas
or
out
cmpsb
pop
or
or
mov
push
or
cli
inc
xor
out
ds
icebp
js
je
das
jmp
or
and
or
fstps
push
test
in
testb
sbb
jne
aad
add
sbb
das
pop
pop
das
adc
adc
and
fcoms
cmp
popa
hlt
js
leave
inc
sbb
mov
mov
inc
fildl
loop
pop
sbb
nopl
xchg
cmp
ret
xchg
test
add
ret
mov
aam
mov
xor
adc
loope
outsb
pop
cmpsb
aam
loopne
mov
aaa
ret
fwait
xor
or
out
push
rorl
mov
push
push
or
dec
popa
push
divb
out
dec
imulb
js
negb
cld
jmp
adc
inc
pop
mov
mov
fisttpll
cli
and
ja
addr16
ret
push
ret
call
pop
sti
and
push
pop
ljmp
mov
inc
ljmp
adc
testl
clc
pop
push
out
fsub
pop
xor
sub
xor
mov
lret
pop
popf
neg
mov
xor
add
add
fldcw
jb
mov
ret
jle
mov
xchg
rol
pushf
inc
lret
mov
or
leave
cwtl
jae
jl
lock
movsl
movsb
bound
es
adc
pop
lods
lock
dec
je
xlat
mov
es
insb
push
out
cmp
daa
pop
jle
psubd
sbb
dec
lret
ja
mov
cmp
mov
dec
or
adc
in
loop
ja
xchg
jae
jbe
add
mov
mov
jl
out
cltd
mov
insb
jno
mov
inc
or
add
jecxz
push
nop
out
iret
mov
or
mov
push
inc
pop
pop
push
jmp
adc
add
ds
dec
lret
aas
push
imul
xor
negb
and
jne
mov
or
int
adc
and
or
inc
pusha
sbb
stos
or
mov
in
gs
dec
sar
cmp
jle
sbb
dec
jle
lret
lds
mov
leave
test
push
push
cmp
jae
xor
push
add
lods
jo
sarb
shrl
aaa
aas
add
addl
rcll
xchg
mov
and
lds
sbb
imul
sub
adc
push
add
sbb
mov
inc
adc
sti
add
leave
shlb
pop
inc
into
stos
mov
outsb
rorb
fs
ret
test
xchg
std
and
fstl
negb
cmpsl
out
xor
mov
and
test
into
xchg
or
fwait
xchg
jo
lcall
jne
into
jbe
sarb
xchg
push
repnz
mov
jecxz
test
cmp
das
popa
in
lret
add
int
in
xor
clc
inc
sbb
repnz
push
inc
iret
repz
fcoml
cs
mov
hlt
mov
arpl
mov
shll
push
rolb
sbb
jge
adc
jo
xor
ret
inc
mov
jge
aam
dec
push
sbb
fmul
adc
push
xlat
les
mov
mov
mov
mov
loope
add
mov
and
repz
enter
rcrb
js
inc
add
bound
repnz
jle
xchg
aaa
jmp
lret
fs
sub
stos
cmpsl
rcrl
in
sub
dec
mov
ret
js
mov
lahf
arpl
sbb
aam
pop
cmp
and
and
lret
inc
add
fiaddl
sub
sbbl
out
add
sbb
out
cmp
mov
xchg
aaa
inc
push
int
iret
cmp
pop
cmp
jge
repnz
xlat
and
rorl
bound
aam
and
push
push
icebp
and
mov
jl
pop
pop
das
jbe
xchg
inc
call
nopl
jle
mov
ds
xor
sti
sbb
cmp
adc
mov
fidivl
pop
push
daa
fimuls
addb
sti
iret
mov
roll
lds
mov
rclb
jp
sbb
mov
inc
lret
aam
cmp
andl
nop
push
and
aam
jnp
call
daa
xor
arpl
inc
imul
rcrb
mov
cmp
gs
jnp
inc
orl
push
stos
ds
push
fisttps
inc
sub
addr16
scas
push
repnz
inc
dec
ret
sbbb
out
in
mov
mov
lcall
jae
insb
push
jp
adc
fincstp
pop
xor
pop
mov
shll
push
push
pop
int
repnz
mov
test
jbe
movsb
add
push
and
js
fisubrl
push
push
push
inc
dec
movl
lahf
push
push
test
fs
cmp
or
das
sti
inc
andl
push
in
mov
into
mov
xor
imul
ficoml
inc
insl
pop
xchg
and
rclb
push
mov
or
inc
stos
inc
mov
movsl
stos
cs
pop
mov
lods
out
rcrb
daa
mov
or
xor
nop
lds
xchg
jnp
bound
insb
and
adc
and
mov
ljmp
and
fisttps
add
sti
call
imul
in
pop
lds
mov
add
iret
push
lret
movsl
mov
xor
test
scas
jns
mov
fcoml
icebp
dec
lret
divb
inc
movsb
add
rcrb
lret
cmp
jno
jno
sub
sub
stos
fdivr
xchg
das
xor
imul
mov
stc
imul
sbb
cmp
loope
inc
das
pop
lds
sbbb
or
lea
outsl
cmc
cmp
loope
push
fisubl
pusha
push
xchg
fcoms
leave
movsl
test
mov
or
loope
in
lcall
push
xchg
aas
lods
jbe
xlat
push
inc
push
enter
push
sbb
jns
das
outsl
xlat
lret
aam
pop
int3
jl
push
inc
daa
mov
movsl
or
icebp
test
ret
lcall
out
test
ds
shrb
jno
adc
hlt
ret
jmpw
shll
or
dec
sbb
mov
mov
pusha
xchg
shlb
sub
je
pop
out
mov
lahf
daa
imul
push
pop
add
shl
lock
je
xor
add
dec
mov
sub
inc
mov
cmpsl
je
outsb
andb
xor
pop
fstps
mov
inc
pop
push
add
test
loopne
mov
repnz
sahf
scas
xor
add
and
ja
scas
pop
das
outsb
xor
jecxz
sbb
sbb
mov
xor
mov
sar
stos
testb
aam
rep
or
jb
sub
pop
in
aas
jne
mov
lock
mov
cmp
cmp
cli
cmp
push
inc
mov
sub
stc
cmp
fcomi
inc
cmp
dec
das
push
out
and
jl
push
jb
test
add
mov
xchg
enter
daa
mov
pop
shl
mov
in
push
decl
nop
mov
in
sbb
xchg
jae
cs
ret
lret
repz
and
pushf
mov
dec
cmp
pop
mov
jg
or
imul
mov
lret
dec
imul
enter
jge
cmp
jg
ror
push
push
gs
xchg
in
lock
xor
add
addb
and
out
out
pop
cmp
inc
sub
loopne
sar
adc
mov
or
pop
fnsetpm(287
je
movsb
outsl
and
sbb
icebp
push
xchg
shlb
inc
ja
dec
mov
mov
mov
out
ret
push
adcl
aad
pop
xchg
inc
push
lret
ret
inc
add
jmp
and
inc
jge
inc
js
sub
and
xchg
pop
rclb
sbb
inc
nop
xchg
aas
dec
imul
xchg
adc
sub
shll
jo
adc
mov
jge
push
jns,pn
ljmp
adc
adcl
adc
or
icebp
mov
cmpsb
sbb
inc
xor
sub
fwait
lods
sub
in
sub
punpcklbw
push
mov
cmp
pop
sub
pop
ds
loop
mov
xor
xor
jl
sbb
add
insb
cmpsb
into
repz
das
fwait
dec
in
pop
sbb
rcrl
mov
fwait
stos
ja
inc
dec
lret
adc
jae
cmpsb
and
aaa
cld
sbb
jnp
iret
out
xlat
or
jnp
cmc
cltd
push
mov
sub
xor
shl
frstor
mov
clc
out
or
adc
cs
sbb
push
aam
ss
and
pop
dec
mov
and
cmc
xor
and
mov
mov
jp
outsb
xchg
jmp
out
call
xchg
lock
cmpsl
mov
mov
mov
arpl
mov
sub
nop
cmp
shr
sti
xor
sub
out
sub
xlat
jmp
push
out
shrb
jp
push
push
repnz
mov
inc
test
in
sbb
ss
scas
pop
pop
mov
xchg
enter
shr
imul
mov
xchg
or
shrl
mov
adc
inc
xorb
inc
aad
sbb
mov
jl
jecxz
negl
adc
push
lahf
xor
dec
rorb
cmp
ret
sub
ja
jmp
cs
imul
push
xlat
daa
xchg
cmp
and
jecxz
or
cli
dec
ret
ret
xchg
icebp
mov
rolb
aad
test
mov
decl
push
push
mov
jne
sub
mov
inc
mov
pop
sbb
dec
xchg
pop
mov
shlb
rclb
loope
push
add
lcall
sub
mov
test
out
cmpb
lcall
cmpsb
cmp
or
xorb
sub
es
outsl
adc
inc
cld
add
mov
xor
test
pop
mov
xchg
sbb
popf
andb
mov
repnz
cwtl
enter
or
dec
repz
daa
outsb
icebp
mov
orl
mull
orl
cld
data16
shlb
jb
cmp
ljmp
jnp
and
cmp
in
pop
pop
in
adc
cmp
sbb
xchg
rcrl
cli
shlb
dec
mov
ficompl
add
xchg
ja
inc
dec
mov
and
fcoms
enter
test
xchg
mov
mov
inc
fmull
cmp
mov
pop
xor
pop
xchg
in
les
jbe
cmc
pop
push
cli
push
cmpsb
sbb
imul
pop
mov
enter
add
mov
loopne
pop
jns
imul
rcll
ficomps
mov
jbe
mov
add
jg
sub
sub
fcmovbe
pop
das
inc
sti
or
fwait
pop
stos
stos
sub
push
dec
lret
mov
xchg
loopne
cmp
jmp
stos
xchg
jne
out
loope
xchg
jp
pop
mov
sub
les
dec
popa
jp
aad
mulb
sbb
test
inc
add
das
adcb
scas
add
xchg
xchg
mov
push
ljmp
mov
xchg
and
cmpsb
add
xchg
rcr
fcompl
ja
or
cli
repz
ja
pusha
arpl
test
les
clc
lock
jbe
in
imul
lahf
std
cmp
mov
pop
frstor
inc
cmpsl
dec
push
movsb
add
dec
stos
sbb
and
ret
cmp
adc
ret
and
inc
pop
fcmovb
mov
sbb
loope
sbb
add
jl
mov
xchg
xchg
addr16
sti
rcrl
test
je
in
out
aaa
and
ljmp
arpl
add
inc
xchg
enter
lds
and
clc
inc
push
mov
and
inc
and
mov
inc
test
adc
cmp
xlat
inc
sbbl
mov
dec
dec
jno
decb
dec
dec
push
addb
adc
bound
ror
shll
pusha
jg
shl
lds
orb
mov
mov
jb,pn
insl
pop
inc
jp
dec
inc
xchg
fisttps
out
dec
jo
mov
sbb
mov
inc
in
xor
add
xchg
mov
mov
loopne
std
in
lea
int3
mov
mov
nop
push
lods
lahf
call
cmc
inc
pop
into
inc
ljmp
sbb
bound
stos
xchg
shlb
xorl
dec
mov
inc
and
push
cmp
fsubl
xor
pop
shrl
and
push
call
rolb
in
test
mov
cli
cmpsl
add
push
xchg
push
dec
cli
pushf
das
xchg
out
mov
aaa
cltd
fiadds
xchg
test
mov
aas
push
imul
call
pop
xchg
std
sub
scas
fimuls
insl
repz
imul
xchg
push
test
mov
lahf
addl
arpl
jbe
pop
iret
jo
push
repz
stos
mov
mov
cli
mov
mov
mov
outsl
xchg
push
lcall
or
pop
nop
insb
mov
mov
rolb
shrb
xchg
mov
sar
cs
lods
lret
roll
xor
scas
mov
popf
add
mov
xchg
pop
pop
and
call
sbb
addr16
aaa
pop
inc
add
inc
stos
pushf
mov
sarb
je
scas
ret
into
ja
jae
or
jmp
subl
lds
lods
lret
cs
gs
fwait
movsl
dec
movsb
or
gs
inc
shll
out
inc
and
imul
jge
popa
fistps
cmpsl
inc
dec
adc
mov
and
int3
cmc
xchg
ja
and
ljmp
dec
inc
rcl
lea
ss
xlat
xor
setno
fmuls
mov
test
fbld
scas
outsl
dec
add
xchg
and
mov
mov
mov
pop
es
je
int3
das
cmp
dec
adc
dec
inc
cmp
pop
xchg
jne
int3
idivb
fnsave
lods
jle
xor
xchg
enter
cltd
aaa
fldt
pop
aas
and
mov
jb
lea
mov
jmp
cmp
mov
loope
xchg
jbe
mov
rcll
mov
inc
pusha
jne
aaa
test
xchg
adc
xchg
mov
adc
mov
fbld
aaa
insb
jbe
pop
insb
enter
pushf
dec
std
insl
dec
inc
movsl
lods
or
insb
jnp
inc
sub
es
imul
mov
data16
mov
addr16
test
inc
mov
adc
gs
jne
mov
cmpsb
adc
lods
cli
arpl
push
push
fwait
mov
sarb
xor
mov
pop
mov
mov
fists
cmpsl
div
inc
jne
out
scas
out
mov
and
push
outsb
jge
sub
sbb
jae
inc
dec
adc
dec
mov
into
leave
adc
jno
insb
xchg
insl
and
jecxz
nop
insb
aam
movsl
pop
pushl
mov
es
test
ficoml
jae
test
jo
dec
jne
inc
imul
outsl
mov
or
and
lcall
cmp
push
mov
and
stos
in
inc
add
clc
pop
aam
xchg
jl
out
inc
popa
inc
movhps
inc
movsl
divl
lods
pop
mov
enter
mov
lods
fs
fwait
xchg
inc
addl
jg
mov
cmp
or
or
cmp
jl
call
mov
or
cmp
pop
pop
jmp
sarl
mov
sub
cmpsl
bound
cs
push
jl
mov
inc
cs
pop
dec
je
sbb
push
sbb
jbe
stc
inc
and
aam
push
xchg
cmp
jmp
imul
lds
movsl
out
into
or
jp
ss
sbbb
rcrb
lahf
les
cltd
adc
icebp
cmp
inc
aas
dec
mov
inc
push
in
jmp
dec
pushf
mov
pop
addr16
ja
mov
mulb
push
jle
loop
stos
lock
ret
mov
leave
cmp
sub
aam
outsl
lret
cmc
sbb
out
shll
push
les
mov
fsubl
dec
fcmovbe
lret
dec
jmp
jmp
sub
pop
sbb
cmp
stc
dec
pop
pop
mov
xchg
jae
clc
int
das
sub
push
maxps
xchg
sbb
push
dec
test
dec
test
xchg
cs
in
jecxz
cld
adc
xchg
pop
addr16
push
stc
pusha
stos
fucomp
push
jmp
out
stos
mov
shrl
negb
subl
mov
lds
add
cltd
out
lods
mov
cli
pop
cli
inc
cmp
hlt
arpl
adc
inc
inc
cli
jne
xorb
lret
adc
dec
push
cs
push
test
mov
push
test
sub
sub
daa
dec
push
out
pop
into
inc
fcmovbe
mov
cmp
jbe
movsl
inc
push
xchg
or
push
jp
pop
push
pop
adc
sub
and
andl
push
out
xchg
int3
movsb
iret
and
movsl
je
sbb
pop
shlb
xchg
sub
sbb
shlb
ds
daa
aam
adc
scas
cmc
dec
sarl
dec
push
dec
xor
pop
jno
dec
or
fdivrs
cltd
cmp
sbb
and
mov
imul
xor
add
mov
sbb
cltd
js
add
xchg
hlt
cwtl
cltd
and
faddl
jb
adc
aaa
push
xchg
in
aam
les
cmpsl
or
sbb
andl
mov
call
adc
inc
dec
mov
test
xchg
into
mov
inc
bound
call
mov
push
sub
mov
cmp
repnz
into
xor
xor
mov
out
xchg
in
jecxz,pt
pop
scas
ficompl
pop
out
and
sti
push
sub
inc
pop
adc
iret
adc
sub
jo
insl
sahf
es
xlat
data16
dec
cwtl
sbb
daa
inc
divb
pushf
loopne
sar
push
push
mov
stos
int
leave
cmpl
popl
jmp
inc
lock
jne
add
adc
cmp
jno
cmpl
das
into
cwtl
sarb
insl
sbb
inc
lods
jo
test
enter
sarb
enter
not
int3
inc
insb
sbb
and
inc
roll
sbb
mov
arpl
jle
clc
ret
mov
dec
ds
dec
out
xlat
jecxz
jnp
fldl
iret
sbbb
inc
mov
mov
inc
out
lods
dec
aad
sti
idivb
xchg
xchg
mov
push
mov
out
push
mov
arpl
enter
push
push
test
and
adc
std
cmp
daa
stc
add
dec
jge
cmpsb
iret
jmp
les
jle
dec
mov
cltd
aad
pop
stos
lods
xchg
inc
jle
adc
js
stos
testb
test
mov
pushw
imul
mov
inc
mov
aaa
xorb
cmp
in
xchg
rcrb
xor
push
into
mov
add
js
pop
dec
cmp
movl
lret
jo
ret
jnp,pn
sbb
adc
mov
pushw
outsl
in
shll
pusha
iret
add
push
jne
mov
mov
das
mov
out
mov
push
jmp
mov
mov
pop
pop
adc
decb
xchg
mov
es
adc
aam
add
nop
push
push
popf
stos
mov
int3
lret
and
xchg
push
insb
cmpsb
stc
ja
mov
adc
shl
and
mov
mov
xor
xor
sbb
mov
push
mov
add
iret
pop
pop
mov
cmp
add
pusha
xchg
jns
push
std
cs
dec
bound
mov
ljmp
lahf
or
mov
xor
mov
add
lock
mov
adc
lret
mov
inc
sbb
cmp
lea
shll
sub
dec
loop
scas
in
cmp
inc
push
sbb
mov
fdivs
repnz
mov
fistps
and
daa
push
pop
or
fdivrl
sahf
pop
fstl
sbbl
addb
or
xchg
push
add
aad
addr16
push
adc
cld
sbb
aam
sbb
sbbb
sub
pop
sub
cmp
sub
loop
insl
std
scas
pop
in
dec
add
repz
jns
data16
sub
and
jnp
std
jp
inc
nop
pop
sub
fisubs
cmp
pop
outsb
adcb
cmpsb
and
pop
or
dec
repz
push
cmp
scas
mov
inc
cwtl
jno
rcrb
and
sub
mov
mov
add
or
repnz
mov
or
imul
or
pop
or
mov
pop
push
mov
int3
push
mov
xor
out
lock
mov
leave
sub
xor
sub
lret
jecxz
sub
or
and
xor
adc
dec
scas
fst
xchg
aaa
mov
inc
xor
je
jle
xlat
orl
xor
mov
sbb
enter
xchg
daa
insb
adcl
jmp
xlat
push
cwtl
adc
jbe
and
cs
or
jb
hlt
not
icebp
andb
cmp
inc
cmp
in
sbb
stos
ss
mov
leave
xchg
jb
or
cmp
or
cmpsb
ja
inc
dec
jecxz
mov
xchg
clc
int
pop
nop
in
jb
lahf
dec
mov
pusha
aad
jno
cmp
adc
rcr
jp
mov
and
cmp
cs
pop
flds
das
sbb
push
xchg
mov
dec
test
addr16
adc
and
sbbl
shll
push
pop
std
out
out
loop
adc
imul
pop
jmp
or
das
ret
sbb
mov
adc
pop
fwait
or
sub
mov
jecxz
fmull
push
jae
ja
cmp
push
mov
pop
inc
je
or
adc
mov
dec
aas
jb
inc
enter
sbb
dec
adc
scas
xor
sub
mov
xor
addb
xchg
call
jecxz
pushf
imul
sub
in
jb
adc
cmp
jmp
rcrl
and
add
aas
lret
mov
insl
adc
push
repnz
sub
das
mov
gs
inc
xor
push
inc
into
sub
mov
lea
cli
fldt
or
jl
dec
xchg
and
pop
pop
out
aaa
sbb
xor
shr
xchg
ja
out
imul
out
push
adc
stos
aas
imul
scas
popf
mulps
imul
lcall
jbe
push
pop
push
mov
out
aam
mov
aas
or
jns
sahf
sub
inc
xor
sti
mov
mov
adc
push
add
les
add
or
lsl
jecxz
sub
movsb
or
mov
xchg
mov
sub
pop
xlat
jl
cmp
mov
mov
lahf
or
je
rorl
lcall
test
push
sbb
les
lcall
jle
xchg
push
xlat
sub
and
fwait
pushf
sbb
xlat
loopne
imul
jl
xchg
in
lods
popl
test
mov
add
pop
jne
popf
mov
lahf
xchg
push
loope
and
jno
in
adc
mov
jb
add
sub
test
push
lret
nop
popf
call
sarb
xor
test
lcall
imul
aaa
xor
sub
fldl
sub
outsb
sbbb
mov
xchg
out
rorb
iret
cmc
fcoms
jns
xor
rclb
in
iret
push
pop
popf
rcll
pusha
les
dec
leave
stos
cltd
cmp
arpl
mov
push
cmp
push
into
stos
fistps
push
leave
lret
add
sub
dec
fldenv
movl
movsl
adc
imul
sbb
fstps
inc
out
push
push
jp
mov
adc
add
test
out
testb
dec
imul
or
add
clc
pop
mov
xor
inc
enter
popf
icebp
loopne
jle
sub
stc
mov
mov
sbb
incb
mov
mov
xchg
pop
lds
mov
xchg
into
inc
out
add
sbb
pop
adc
test
mov
lea
adc
ds
mov
adc
xchg
mov
aaa
lret
inc
sub
mov
out
mov
inc
into
jbe
xchg
and
fnstenv
push
push
sbb
iret
dec
aam
lcall
aam
dec
inc
scas
popa
jecxz
add
cld
inc
iret
push
repz
cmpsb
and
adc
ret
cmc
pop
cs
push
frstor
scas
mov
jne
shll
push
mov
aaa
arpl
jp
sub
out
cli
cmp
or
loope
cmp
inc
mov
mov
inc
cmp
jno
push
leave
aam
lods
out
push
mov
loope
clc
dec
repnz
js
inc
loopne
xchg
sub
pop
mov
xor
movsb
fisttpl
aaa
movsb
inc
fidivl
mov
es
mov
repnz
cmpsl
jge
mov
imul
inc
aas
inc
inc
jl
cltd
sbb
gs
andb
sbb
jle
adc
add
jbe
sub
or
flds
xchg
jle
test
adc
fnsave
in
jge
and
push
or
clc
xchg
xchg
pop
dec
and
mov
add
jno
dec
dec
aam
pop
sub
sti
cmp
mov
pop
lea
enter
movsl
or
pop
add
mov
test
cwtl
sbbb
mov
dec
repz
andl
and
sbb
mov
leave
and
movb
lock
inc
out
enter
iret
sbb
add
addr16
mov
data16
jb
lods
push
leave
adc
lea
fimuls
mov
and
sti
repz
pop
fs
adc
rcrb
clc
cmpsb
mov
pop
into
push
push
test
rep
iret
pushf
adc
stos
push
scas
mov
test
aaa
xor
fstpl
xchg
xor
add
and
scas
sub
stos
orl
mov
arpl
and
out
in
test
dec
ljmp
test
xchg
jg
imul
scas
pop
cmp
arpl
mov
mov
mov
daa
mov
fisubrs
push
setge
sbb
xor
popf
je
mov
out
cmp
es
jae
stos
mov
sbb
insl
addl
rolb
cmp
data16
mov
sti
loopne
adc
add
rcl
arpl
xor
ds
adc
push
and
mov
push
xchg
cmp
push
ja
lcall
mov
fildl
adc
fisubrs
aam
mov
xor
jecxz
pop
call
cli
into
rdmsr
std
mov
stos
nop
test
int3
pop
pusha
pop
addr16
sti
addl
mov
mov
mov
fwait
mov
push
push
adc
pushf
cli
adc
bound
mov
cmpsl
or
add
dec
jne
xchg
sti
mov
scas
mov
movsb
sub
orl
mov
sub
pop
xchg
mov
xlat
and
adc
movsl
iret
in
in
jo
rolb
icebp
cltd
inc
call
or
inc
xchg
call
loop
adc
cmp
test
ret
jmp
jg
mov
mov
stc
fistpll
and
and
and
cmc
or
dec
add
push
jmp
notb
jne
insl
xor
iret
sub
inc
xchg
mov
cmp
test
repz
dec
or
bound
push
test
inc
rcrl
je
mov
inc
cmp
aaa
in
mov
adc
inc
or
addb
dec
movsb
adc
subl
xor
imul
and
push
insl
pop
sbb
lret
mov
xor
sbb
xchg
nop
push
cld
fnsave
int3
out
jecxz
ret
das
dec
xchg
loopne
ret
sub
or
ljmp
stc
xchg
push
add
pop
cmp
xchg
xor
popa
out
ret
sub
push
add
pop
inc
jo
xchg
mov
cmp
pop
and
loopne
mov
cmpsb
enter
cmp
fildll
mov
pop
int
jbe
test
sbb
dec
ljmp
dec
insb
adc
mov
enter
outsl
sbb
test
inc
fs
and
xchg
movsl
ret
ret
jl
mov
cmp
scas
sub
and
and
sbb
sub
mov
or
gs
mov
out
mov
fs
sbb
sbb
mov
pop
dec
popf
jmp
lahf
and
mov
push
mov
push
jg
push
mov
mov
call
insb
push
hlt
mov
or
inc
push
aad
out
lods
mov
jae
das
lds
mulb
aam
and
inc
les
lcall
out
add
in
sub
xchg
pop
sbb
ja
mov
mov
fisttps
mov
cs
inc
sahf
das
inc
push
inc
adc
mov
and
jp
sub
xor
push
cmp
ss
outsb
not
and
imul
movsl
aad
mov
imul
xchg
addr16
mov
std
pop
inc
xor
insl
rorb
or
out
and
jmp
dec
lds
mov
adcl
imul
cli
ret
repnz
sub
addr16
or
popl
lea
fucomp
into
mov
sbb
mov
pop
xchg
or
inc
out
adc
mov
cwtl
push
sti
add
shlb
imulb
testl
mov
xchg
ja
insl
cltd
ja
std
loop
in
xchg
mov
insl
test
mov
mov
test
adc
es
xor
mov
mov
jae
sub
fcoms
or
cld
dec
data16
or
in
push
out
xorb
gs
add
ret
push
lock
data16
jg
mov
fistl
adc
gs
push
scas
jl
imul
fimuls
mov
mov
clc
ret
iret
xchg
fists
dec
fisubl
xchg
sbb
jbe
leave
mov
push
inc
out
mov
jecxz
jg
orb
xchg
cmpsl
push
lahf
outsl
cld
es
jnp
call
cmp
into
pop
add
repnz
rorl
scas
lret
xchg
or
fdivrl
enter
mov
ljmp
push
loop
stc
dec
mov
cmpl
sti
test
pusha
dec
gs
les
sbb
andb
jg
mov
in
xlat
inc
xor
pushf
test
insl
sub
lea
out
ret
mov
mov
lods
pop
xchg
push
scas
push
addl
pop
cmp
xchg
int3
and
sahf
incl
jnp
mov
push
sbb
inc
pop
fistpl
iret
cmp
lret
sbb
mov
push
xchg
jecxz
lret
loop
jecxz
or
enter
call
lock
push
shrl
mov
fs
es
push
xor
and
adc
jne
ret
lds
iret
mov
pop
xchg
test
jecxz
imul
and
sub
sub
cld
lds
imul
cmp
add
movsb
cmp
outsl
outsb
adc
xor
es
das
pop
rorb
insl
popf
or
dec
and
cli
xchg
sub
hlt
mov
int
mov
xor
cmp
mov
jno
push
daa
movsb
pop
mov
pop
jle
clc
inc
and
cltd
gs
pop
add
or
add
push
dec
mov
xchg
xchg
enter
mov
jne
mulb
xchg
mov
loopne
mov
icebp
mov
cmp
jecxz
data16
roll
lods
sahf
or
ss
pop
sti
mov
pushf
stc
addr16
sbb
xlat
ret
xor
sub
psrad
sti
push
push
ja
ljmp
add
adcb
inc
and
jl
repz
jge
lock
xchg
push
call
mov
mov
jno
popa
int3
jmp
movsb
rolb
ds
xlat
enter
or
leave
repz
or
popa
jge
inc
shlb
lcall
add
out
mov
shl
pushf
and
push
cld
mov
sub
ss
sti
or
mov
sarb
cmp
push
xor
and
mov
or
ret
cmp
xchg
dec
ret
inc
mov
jb
into
sahf
adcb
xor
notb
push
std
sahf
jb
dec
cmp
in
push
ja
or
cs
repz
mov
cli
fnstenv
into
sub
std
xor
jb
add
out
adc
test
mov
lret
push
rcrl
into
sub
add
into
jne
mov
icebp
xchg
sub
pop
hlt
fcompl
sbb
into
xchg
xchg
xor
dec
divl
jmp
jnp
dec
add
jecxz
inc
clc
mov
and
dec
inc
movsb
std
test
xor
mov
jg
push
bound
add
push
cmp
jns
mov
rorb
dec
mov
and
push
jp
sbb
out
jbe
stc
ljmp
pop
mov
movsl
xlat
push
jp
push
add
cmp
fcmovnbe
sub
out
mov
dec
hlt
sub
daa
test
leave
pop
xor
adc
push
insl
jb
jmp
js
leave
mov
idivl
inc
aam
fsubrs
test
test
jp
mov
push
jbe
mov
sbb
mov
adc
sarb
cmp
xor
mov
add
push
pop
push
mov
mov
iret
or
or
inc
cmp
idivl
mov
lret
ret
loopne
mov
xchg
lods
sub
xorb
lret
movsb
jnp
imul
jnp
or
cmp
mov
xlat
or
and
sub
push
mov
repz
mov
fsubrs
fstps
ret
das
aam
das
pop
add
out
dec
or
xor
or
mov
xchg
add
clc
jne
jmp
movsb
daa
test
push
sti
ds
push
jo
add
adc
jle
aam
mov
jg
sbb
push
sub
mov
ja
and
or
add
ret
and
mov
sti
dec
pop
or
adc
fistps
pop
mov
out
mov
mov
or
mov
jne
sbb
push
dec
jo
pop
xchg
sbb
aaa
inc
xchg
push
movsbl
xchg
mov
inc
xchg
mov
add
arpl
xchg
cmp
call
shll
dec
adc
loopne
arpl
xor
and
imul
call
test
dec
std
xor
lahf
xchg
mov
mov
xchg
jo
push
or
pop
in
aam
xchg
das
lahf
xchg
push
mov
dec
mov
or
add
dec
scas
ja
sbb
jb
or
fstpt
sub
roll
dec
bound
inc
fnstcw
or
push
ret
hlt
jge
dec
push
sbb
notb
mov
adc
mov
xor
aas
xor
pushl
push
out
mov
push
fsubl
in
inc
mov
jae
insl
inc
lahf
ffree
cld
in
sbb
pop
sahf
cmc
inc
and
mov
cmpsb
adc
sbb
out
ds
inc
dec
das
inc
inc
push
sbb
dec
std
repnz
mov
lahf
and
pop
iret
push
les
xchg
xlat
fwait
xchg
clc
push
cmp
dec
call
or
adc
test
mov
inc
jmp
out
hlt
lods
adc
sbb
imul
add
sbb
dec
in
and
add
adc
jns
aad
jecxz
xlat
orl
into
sbb
mov
xchg
clc
xchg
ftst
push
and
pushf
inc
sbb
mov
aad
jl
xchg
stc
push
idivb
or
shrl
mov
jp
aam
inc
push
imul
mov
mov
cmp
push
dec
call
lret
xchg
jle
subb
xor
add
push
mov
jbe
xchg
dec
movl
mov
xchg
cmp
jp
or
ja
repz
fcmovnbe
sbb
adc
inc
jo
push
and
fcmovbe
dec
sarl
and
rorl
sbb
push
mov
sarb
xchg
lock
dec
fwait
rolb
xlat
xor
mov
inc
cmpl
fiadds
nopl
pop
xor
ret
addb
sub
adc
jmp
outsl
mov
jbe
aaa
cmp
lods
daa
or
jp
call
aaa
lret
insl
inc
orl
ljmp
lahf
jbe
mull
push
lret
push
mov
cmp
or
movntq
mov
inc
enter
or
mov
push
xchg
sbb
fldl
cli
mov
inc
jmp
ljmp
mov
gs
and
push
dec
pop
mov
xor
sbb
cmp
dec
lahf
cltd
lret
or
in
imul
jl
xor
testl
fdivrp
jb
fisubrs
push
jg
jg
sub
scas
test
xchg
sti
sahf
mov
push
pushf
popf
or
dec
xor
jnp
add
jne
push
comiss
mov
aad
adc
and
and
popa
cmp
cmp
and
out
fists
push
fists
aad
cmp
repnz
mov
cmp
xor
popaw
cwtl
test
lock
add
mov
stos
fists
in
xor
cmp
aaa
xor
divb
mov
bound
cmpsb
outsl
scas
and
jmp
pop
stos
out
imul
in
mov
fmuls
lcall
mov
mov
rcll
and
push
arpl
fwait
lret
xor
add
cmpsl
mov
lret
cmp
fwait
jno
fwait
xchg
sbb
ret
jno
rclb
push
loope
pop
lock
adc
and
or
mov
jo
xchg
rcl
sbb
xor
xchg
jnp
mov
push
movsl
insb
lock
popf
jbe
mov
dec
ret
mov
push
lahf
dec
popf
outsb
xchg
and
jp
cmp
jl
cmpsb
sbb
jg
lock
inc
das
ret
fsubl
notb
clc
mov
daa
inc
incb
mov
cmp
mov
sahf
mov
sub
mov
xchg
faddl
lahf
out
pop
xchg
inc
add
xchg
scas
pop
sbb
dec
pop
stc
pop
xchg
jae
repnz
bound
icebp
mov
sti
jmp
call
sub
lret
and
idivl
vmovntps
lods
dec
aaa
imul
adc
sub
push
xchg
test
pushl
aam
aaa
mov
and
cltd
or
shl
dec
mov
sti
mov
imul
arpl
in
in
in
lds
mov
outsb
das
stc
punpckhwd
not
jl
fldenv
pop
mov
mov
push
jbe
out
push
into
cmp
mov
gs
or
mov
jecxz
xor
subb
add
xchg
cld
mov
and
loopne
js
xor
nop
in
jl
or
movsl
lret
aam
inc
and
out
loope
sub
lcall
es
mov
cli
out
bound
pop
inc
popf
out
std
cmp
adc
movsb
insb
jbe
mov
jbe
cli
or
mov
addb
sti
sub
jmp
lret
adc
repz
jne
mov
inc
out
push
mov
add
imul
sbb
inc
jecxz
adc
sbbb
and
cli
pop
jbe
sub
cmp
shll
jbe
or
roll
xor
push
or
and
test
int
cmp
cwtl
pop
mov
fucomp
clc
xchg
lret
into
jbe
std
and
gs
adc
adc
sub
fisttpll
pop
jmp
cmp
push
jns
rorb
bnd
scas
fs
push
xchg
es
outsl
clc
leave
sti
cs
mov
xor
addr16
inc
mov
mov
add
roll
mov
leave
roll
and
jmp
jle
and
sub
dec
sbb
faddl
adc
ja
jecxz
cmpb
call
inc
sub
jecxz
dec
les
push
in
mov
mov
push
int
dec
mov
cld
lcall
out
or
mov
xor
out
pop
cmp
inc
loope
push
adc
sbbb
xchg
daa
xchg
or
scas
scas
out
je
pusha
dec
dec
jp
jno
pusha
jnp
sbb
shll
pop
push
outsb
pop
test
pop
in
dec
arpl
pop
icebp
sbb
pop
hlt
outsl
pop
jle
sub
mov
daa
fiaddl
lods
daa
dec
pushf
mov
pusha
out
xlat
adc
aam
xchg
rolb
or
push
pop
pop
or
adc
jbe
or
in
je
xlat
push
sti
dec
or
mov
push
sbb
or
in
rolb
incl
push
sub
test
fnstenv
sbb
sarb
aas
je
test
lods
push
out
pop
je
mov
jp
int
xor
push
mov
in
or
sub
fcmove
push
mov
sahf
xor
or
xor
scas
xor
popf
mov
in
cs
jmp
mov
add
lods
push
fdivrl
int3
fcompl
call
xchg
adc
jmp
push
int3
mov
mov
pop
fldcw
out
into
sub
fstpt
push
xchg
in
add
jne
negl
cwtl
pop
cmpsb
adc
stos
jmp
jp
push
orb
mov
add
fs
push
int
dec
jae
or
divl
mov
xlat
add
lods
add
cmc
inc
inc
dec
sub
aaa
mov
fwait
stos
int
and
aas
and
mov
scas
les
andl
sub
dec
cmpsl
pop
loop
xchg
mov
lock
ret
test
jp
push
andb
sar
std
insb
add
sub
dec
adc
scas
xor
xlat
mov
jg
push
lcall
push
lcall
scas
sti
dec
cli
pop
cmc
inc
es
mov
aaa
adc
in
stos
adc
repnz
mov
rcr
loop
cs
xor
gs
sarl
sbb
cmp
inc
ds
and
aaa
and
sub
mov
bound
mov
adc
enter
ffree
clc
mov
repz
sub
and
pushf
cmp
adc
and
mov
push
test
je
sbb
cli
adc
mov
into
dec
dec
jle
test
and
dec
dec
push
dec
dec
dec
xor
test
test
jno
push
in
imul
push
popf
jmp
fnstenv
inc
inc
cmp
cwtl
or
mov
xchg
scas
sub
ss
cmpsb
enter
stos
sbb
mov
cmpsb
insb
cmp
jle
mov
call
xchg
iret
dec
mov
mov
xchg
xchg
sub
mov
or
push
cs
imul
and
iret
pop
mov
mov
adc
in
inc
ret
mov
sbbb
gs
les
nop
hlt
ds
mov
call
jo
push
adc
mov
pop
subb
mov
mov
jns
xor
or
pop
aam
lock
or
call
imul
dec
es
cmc
jge
jmp
jmp
scas
int3
push
cmc
adc
or
push
stos
mulb
mov
push
int3
mov
iret
or
adc
jnp
adc
in
cmc
mov
push
xor
inc
and
pushf
sbb
lea
ret
mov
fwait
jno
inc
repz
xor
xor
pop
inc
mov
jg
adc
mov
orb
xlat
fstp
mov
push
inc
pop
or
mov
ret
dec
mov
insl
xchg
cmp
test
adc
or
shr
xlat
sbb
inc
or
push
imul
mov
pop
sbb
fistpl
lahf
jo
mov
loop
push
je
lea
jbe
adc
pushf
dec
or
out
cmc
push
mov
and
test
xlat
js
and
lock
out
cli
cmp
ja
dec
mov
addr16
pop
dec
xchg
mov
inc
subl
push
xchg
adc
mov
subb
scas
and
lahf
out
jne
std
cmc
mov
jge
sub
sbb
lods
scas
data16
xor
insb
cli
xchg
push
xchg
cs
add
adc
or
push
sub
and
push
push
std
iret
ficompl
insb
mov
lahf
inc
push
pop
pop
cld
xchg
test
cltd
mov
inc
sbb
jmp
push
ss
sub
jp
hlt
je
mov
aam
popl
fldenv
and
and
popf
push
push
dec
test
mov
loop
mov
or
jns
lret
cld
push
out
or
inc
xlat
pop
cmp
mov
int
dec
adc
mov
cmp
pop
jp
aaa
leave
hlt
rcrb
xlat
jae
xchg
push
lret
mov
mov
xchg
push
mov
sub
test
sbb
loopne
mov
inc
fisttps
adc
sub
jns
and
jg
lds
mov
push
aad
mov
cld
sbb
neg
mov
mov
mov
je
out
dec
js
xchg
incl
jl
call
ss
adc
push
inc
add
int3
push
test
lret
ss
aaa
adcb
iret
bound
xchg
add
mov
rol
lret
cmpsb
lods
push
out
aam
xor
jb
push
add
popa
mov
in
pop
insb
ss
outsb
sbb
scas
cmpsl
xor
aad
test
lds
push
mov
shll
lret
mov
shll
push
xchg
mov
hlt
fucomi
rcrl
xchg
push
or
shlb
lock
or
ficompl
xchg
stc
mov
ret
aad
outsl
sbb
cs
mov
lock
or
mov
pop
arpl
rclb
shll
lea
outsb
lea
mov
mov
mov
jmp
sbb
xor
mov
jnp
dec
fldl
mov
clc
jge
aam
testb
push
and
int
pop
arpl
shll
sarl
sub
push
call
xchg
lahf
pushf
mov
js
inc
lret
rcr
xchg
test
insl
jo
daa
push
inc
popa
adc
add
leave
lcall
cmpl
sub
out
adc
and
ljmp
push
and
dec
and
in
inc
mov
cmp
lods
push
pop
loopne
cs
hlt
mov
lea
dec
pop
jo
and
or
pop
pop
xchg
xchg
test
scas
ret
rolb
xchg
sub
leave
subb
sub
sub
adc
or
xchg
aaa
in
clc
xchg
js
adc
sub
dec
movsb
imul
hlt
jbe
push
repz
xchg
inc
fxch
or
xchg
and
mov
and
pop
arpl
jge
sahf
in
push
pop
xchg
bswap
lods
cmpsb
mov
stc
rolb
das
xchg
xor
ds
popa
inc
mov
in
sbb
pop
jnp
mov
daa
mov
pop
data16
js
xchg
in
mov
repnz
out
mov
arpl
scas
lahf
dec
hlt
sub
call
jecxz
mov
and
and
in
mov
pop
repnz
jge
ja
sbb
dec
mov
sub
lcall
iret
divb
adc
cmpsb
dec
xlat
mov
xor
sbbl
addl
cld
lcall
cmc
gs
adc
stc
pop
push
dec
mov
mov
je
fcoml
sub
in
enter
divb
push
iret
xchg
mov
or
lret
incb
mov
mov
jne
dec
shlb
sub
mov
imul
das
dec
in
pop
fnsave
test
pop
push
int
fists
and
mov
in
mov
movl
popf
pop
sahf
pop
sub
pop
add
xor
xor
adc
lahf
jnp
xchg
outsb
fndisi(8087
mov
adcb
jl
inc
repz
cmp
jmp
jl
mov
jbe
adc
jle
insb
xor
test
out
decl
aad
cmp
jo
push
les
add
out
das
ss
and
sbb
mov
in
cli
mov
pop
fwait
add
das
or
ljmp
fidivl
pop
xor
jnp
jmp
es
test
int
mov
jbe
cvttps2pi
adc
adc
cmp
fdivp
shrb
sbb
jp
aam
pop
xchg
or
jns
xor
iret
inc
and
cwtl
fs
jnp
test
leave
inc
xchg
scas
mov
out
xchg
push
test
icebp
and
mov
imul
sbb
xchg
cmp
or
stos
mov
xor
insb
mov
fs
push
test
adc
jle
in
inc
imul
movl
xchg
mov
pop
xchg
mov
push
out
bound
jae
xlat
insl
push
push
push
test
jo
xchg
out
sub
jae
mov
jmp
mov
sbb
pusha
and
mov
not
orl
ret
xor
lret
jle
aas
or
mov
dec
adc
loopne
enter
mov
test
popf
rolb
out
xchg
cwtl
rol
xchg
aad
lods
inc
cmp
push
adc
xor
jnp
pop
js
jns
dec
adcl
sub
test
lret
in
mov
mov
cmpsb
insb
sbb
daa
lret
sbb
aam
and
inc
addr16
ret
data16
sub
inc
inc
ss
cmp
rorb
mov
jne,pn
lahf
ds
cld
jge
les
imul
lret
push
dec
xor
es
xor
mov
push
or
add
mov
add
jp
fs
mov
leave
or
and
or
lret
push
jne
lea
js
adc
and
mov
jmp
daa
mov
aaa
enter
popa
imul
fists
pop
or
lds
sub
seto
jge
call
dec
aad
and
das
shll
out
repz
sbb
ljmp
push
ror
enter
nop
hlt
bound
clc
arpl
mov
dec
daa
xchg
mov
and
mov
das
js
test
sbb
push
movsl
jmp
data16
sar
mov
add
repz
jmp
daa
mov
scas
xor
lret
push
mov
fistps
or
call
imul
push
cmpsb
jnp
pop
pop
cmp
mov
pop
mov
aad
pop
in
jbe
rcr
cmc
aaa
mov
sbb
push
iret
shll
test
mov
iret
jecxz
movsb
adc
cmp
gs
mov
inc
nop
notl
dec
xchg
rorb
mov
shll
jp
imul
xchg
sbb
push
lahf
or
sub
stos
jne
cli
push
sbb
mov
mov
inc
mov
or
xchg
or
push
pop
test
test
push
xchg
add
cld
adc
xchg
jp
sti
sub
ja
and
repnz
cli
incl
vmovss
clc
inc
dec
addr16
lret
push
es
ja
adc
aam
cmp
dec
test
mov
rcrl
out
push
aad
test
mov
sbb
mov
cmc
dec
fmull
int3
and
mov
cmp
or
les
call
add
pop
data16
push
pop
jo
mov
rcr
aad
sbb
mov
ja
je
xor
xor
or
push
cmp
scas
in
sub
push
and
inc
and
out
jo
imul
xchg
adc
cmp
xor
mov
stos
mov
cwtl
std
ss
mov
popa
push
xchg
daa
jno
sarb
lock
dec
mov
mov
test
ds
mov
sbb
imul
sbb
add
imul
mov
cmpsb
xchg
punpckhdq
insb
leave
popf
mov
pshufw
or
arpl
data16
sub
and
repnz
xlat
andb
or
dec
imul
aad
adc
nop
jmp
jmp
jg
ljmp
mov
data16
aad
push
or
and
and
inc
cli
call
jno
push
mov
mov
sub
lret
sbb
subb
arpl
ja
push
dec
adc
xchg
loope
jno
pop
sbb
sti
mov
scas
add
sub
adc
gs
es
push
cwtl
aad
cmp
jae
aas
repz
mov
mov
sbb
jbe
jbe
jge
mov
test
mov
ds
imul
add
mov
pusha
mov
xchg
push
enter
movsb
in
or
add
pop
stc
mov
mov
add
mov
jbe
fdivr
mov
sub
xchg
inc
in
mov
push
sbb
fimull
test
mov
ja
jle
jge
mov
jnp
push
stc
xor
mov
idivb
sbb
negl
cmpsl
sbb
clc
into
jne
pop
outsb
mov
inc
push
sub
xchg
hlt
sbb
adcb
cmp
repz
jns
and
inc
sub
push
call
testb
fnstsw
in
movsl
lock
in
icebp
ffreep
adc
pop
out
jge
xorl
mov
sbb
fmulp
fldenv
xchg
inc
mov
test
sub
mov
and
fcompl
jmp
loop
pop
sti
rolb
js
jp
and
ljmp
lea
aas
cmpl
fisubrl
ret
mov
mov
into
out
subb
inc
hlt
hlt
mov
inc
sbb
sti
or
pop
push
adc
enter
adc
sub
lcall
lds
mov
test
outsl
push
mov
mov
xor
push
jmp
adc
pop
call
push
call
ret
aam
fmul
xor
test
mov
dec
mov
push
sbb
out
fcmovb
jo
jo
jp
xchg
push
ds
aam
outsl
xchg
xchg
fs
in
dec
jae
adc
mov
repnz
adc
and
aaa
fisttpl
xor
add
add
repz
and
fimuls
push
push
inc
insb
sub
mov
push
repz
test
lcall
jge
enter
mov
insl
jmp
enter
rcrl
enter
out
std
push
sbb
push
xchg
mov
jbe
or
shll
pop
add
push
jno
jb
outsb
inc
xor
mov
xchg
ret
stc
sahf
adc
in
je
push
adc
mov
icebp
push
movsl
mov
fwait
sbb
out
xchg
add
ds
mov
sbbl
pop
add
ror
shll
dec
rcll
roll
jae
int3
clc
jecxz
lahf
sbb
scas
in
lret
das
fistpll
ficoml
ss
lods
jge
mov
pushl
cmpsb
pusha
fsubr
and
sub
and
loope
mov
dec
or
mov
icebp
lret
pusha
add
data16
add
ret
mov
pop
sti
movzwl
mov
int3
cmp
mov
in
add
jl
shlb
xchg
jle
jmp
sbb
fiaddl
xchg
shlb
stos
pop
sbb
xlat
mov
mov
lret
outsl
test
mov
imul
jne
ss
and
adc
and
sub
in
cmc
repnz
repz
out
pop
imul
aaa
sub
xlat
push
lret
fisttpl
sbb
rcrl
pop
or
je
cmp
popl
cld
fnstcw
xlat
cmc
pop
jno
push
stos
hlt
in
inc
mov
add
ja
negb
movsb
mov
inc
inc
ss
insl
mov
scas
adc
xor
mov
mov
enter
inc
lahf
stc
pop
push
ds
out
clc
xchg
push
addr16
inc
std
dec
das
popf
data16
call
cmp
bound
push
and
js
scas
ljmp
mov
mov
jno
and
sub
test
ds
mov
mov
andl
icebp
pop
loop
mov
mov
lds
mov
push
mov
mov
jle
fcmovnbe
arpl
ljmp
mov
repz
mov
ret
popa
loope
movsb
cli
shlb
push
insl
rcr
insb
mov
sbb
cltd
mov
mov
jno
stc
rcrb
sub
jge
shrb
je,pt
mov
inc
in
mov
dec
cs
or
lret
mov
in
imul
ror
out
lds
xchg
movsb
lahf
jmp
or
inc
cmp
adc
imul
push
xchg
cwtl
jbe
pop
insl
adc
pop
or
out
adc
loopne
lods
add
sbb
inc
push
cmc
ret
sbb
sub
xchg
cmp
push
xor
mov
fcoms
popf
stos
xchg
jmp
cli
xchg
je
cld
in
cmpsl
dec
jecxz
lds
icebp
push
mov
push
jecxz
lods
test
push
clc
cmpb
imul
jbe
out
mov
mov
shll
xor
outsb
hlt
fucom
test
xchg
mulb
lock
ljmp
cli
pop
add
lcall
sarl
ss
sar
shl
or
pop
jg
loop
mov
filds
loope
add
es
jns
inc
jo
addb
popf
push
lods
cmp
pushf
or
adc
mov
add
cmpsb
inc
test
jnp
pusha
mov
mov
popf
mov
sti
xchg
sbb
fwait
and
jl
add
and
and
inc
mov
rcll
sbb
xor
push
std
pusha
and
and
lret
std
adc
ret
jecxz
adc
cs
fs
dec
cmp
cmp
mov
sti
adc
stc
mov
xchg
js
sub
xor
test
sbb
or
ficomps
loopne
mov
xchg
hlt
sbb
scas
jno
ss
mov
xchg
push
das
dec
cli
imul
inc
fisubrs
inc
stc
or
das
ds
dec
inc
pop
jge
clc
lock
jno
call
jle
pop
enter
loope
xor
mov
mov
and
mov
and
js
mov
sbb
adc
lock
jno
repnz
fs
in
nop
jmp
push
shrb
adc
cmp
mov
cmp
cmp
outsl
rolb
in
idivb
popf
inc
pop
sbb
test
lret
push
cs
adc
loope
push
out
adc
inc
mov
push
stc
add
mov
repz
mov
repz
ret
mov
mov
xchg
add
pop
xchg
sub
out
testb
jle
call
push
test
lea
jge
lods
mov
mov
sti
vmwrite
xlat
clc
pop
pop
xchg
ds
jge
aam
aaa
ja
pop
mov
aaa
ret
repz
aaa
cmp
imul
sbb
pop
insl
outsl
mov
mov
cli
lock
xlat
ja
jbe
clc
xor
vmovd
sub
xor
xor
mov
xchg
repnz
xor
or
mov
lods
arpl
add
cmp
push
push
cmp
daa
mov
jo
in
lret
aaa
insl
sahf
fbld
les
jo
pop
push
fdivl
imul
mov
inc
inc
into
jmp
mov
sub
lods
cmpsl
jmp
xchg
das
out
loop
inc
ret
sub
ja
sti
xor
jb
adc
shlb
icebp
pop
rol
movsl
sub
mov
dec
outsl
cmpsl
sbb
pop
sti
or
cmp
scas
lcall
jp
stos
jecxz
clc
xchg
dec
cmpsb
mull
inc
adc
sub
mov
or
rcl
lret
and
and
xor
add
mov
jge
or
push
xor
les
lahf
xchg
das
js
xor
in
add
ja
pop
mov
adc
mov
dec
call
and
jne
lds
or
push
stos
or
jecxz
push
inc
mov
dec
shll
test
aam
fimull
sub
inc
inc
xchg
rolb
mov
cltd
jge
js
sbb
mov
mov
jns
sbb
inc
pop
repnz
decb
and
jmp
outsl
lahf
jno
push
or
mov
sbb
aaa
fldl
adc
ret
data16
popa
mov
sub
or
sbb
adc
and
movsl
jne
int
je
ffreep
loop
ficompl
adc
mov
test
push
repnz
or
cmpsb
testb
mov
dec
clc
stos
cwtl
mov
and
fidivl
add
cmp
aaa
jecxz
loope
jecxz
mov
out
push
lock
popf
repnz
out
add
dec
xchg
das
push
js
adc
daa
loop
int3
lea
out
fisubrl
ss
decb
jae
mov
xchg
and
test
frstor
fnsave
mov
fists
xor
nop
gs
add
lods
or
jl,pt
jo
mov
popf
rorb
je
rorb
xorb
adc
mov
out
js
adc
push
in
push
push
aaa
lods
mov
sub
sub
cltd
and
or
jle
jae
sub
dec
lds
std
lret
cmp
imul
outsb
add
ds
ja
cmpsb
outsb
dec
sahf
sbb
sub
inc
je
cwtl
data16
fwait
int3
pop
in
dec
push
jge
mov
stos
aaa
lret
jne
aam
outsb
lods
add
mov
jno
xchg
int
aam
stc
test
sahf
xorl
xor
sahf
sbb
mov
in
jmp
xchg
jae
in
sub
adc
or
cli
dec
imulb
or
add
jg
cltd
push
inc
loope
jmp
dec
test
dec
test
pop
sahf
shll
or
es
add
push
or
imul
and
push
adc
sti
mov
pop
sub
cli
nop
mov
out
popf
xor
push
adc
add
adc
clc
nop
mov
xchg
sub
cmpsb
cmp
mull
or
pushf
loopne
jl
jecxz
mov
loop
test
or
xchg
out
push
jbe
rorl
sub
dec
mov
out
xor
sti
jne
or
cwtl
in
dec
adc
adc
std
mov
mov
push
loope
imul
mov
push
das
loope
cwtl
cmp
mov
sub
adc
ret
inc
adcb
mov
xor
jae
pusha
pop
mov
arpl
cltd
or
mov
aam
or
ja
pop
xchg
jle
hlt
push
insl
cmp
cs
jnp
mov
mov
jno
in
mov
test
repz
pop
cs
add
mov
rclb
xchg
cld
mov
push
mov
shrl
pop
pop
scas
psubsw
mov
fstp
ja
jnp
stos
clc
je
jmp
add
ret
test
data16
ret
fldt
sbb
or
call
clc
xor
hlt
in
test
lods
bound
js
xor
mov
xor
and
into
dec
addl
and
xchg
pop
inc
mov
call
or
cmp
in
in
jnp
or
or
xchg
lods
fildll
add
push
cmpsb
fidivl
cwtl
xchg
sbb
add
ds
jecxz
in
mov
mov
mov
gs
dec
xchg
cmpl
mov
push
cld
out
mov
mov
jb
add
stc
dec
mov
and
and
pop
insb
enter
aam
iret
adc
stos
test
stc
int3
es
lds
test
or
pop
jg
aad
rclb
pop
mov
jl
xchg
pop
adc
fstpt
jle
xchg
pop
scas
lret
sub
fs
aas
out
xlat
cmp
addb
xchg
nop
mov
out
sbb
inc
mov
push
popa
xchg
imul
cs
jmp
sbbb
pop
cmp
stos
mov
inc
repnz
sub
mov
dec
sbb
cmpsb
test
int
or
pop
dec
mov
pop
nop
inc
into
cld
repz
repz
divl
pusha
pop
fldt
inc
push
ret
sbb
add
xchg
into
idivl
iret
mov
inc
mov
loope
in
repz
mov
and
pop
idivl
incl
mov
out
sub
jp
cmp
sub
adc
fmul
fstpl
andb
jbe
mov
in
in
lret
loope
or
data16
mov
jo
repz
jg
cli
mov
test
xor
stc
fdivrs
adc
jmp
add
pop
push
mov
dec
inc
cwtl
icebp
repz
sub
jnp
popa
xor
pop
lods
cwtl
sub
inc
xchg
in
rcr
scas
rclb
and
daa
or
pop
push
or
inc
and
push
push
out
mov
pop
sbb
xchg
pop
push
inc
sbb
mov
cmp
jnp
jmp
mov
pushf
mov
call
xchg
cli
addr16
xor
push
inc
lea
sub
insl
xor
daa
or
xor
jne
enter
fcmovu
inc
imul
adc
enter
imul
push
cltd
xor
outsl
cmp
lret
sar
fisubrs
mov
cmpsl
inc
inc
shlb
xchg
nop
xchg
popa
xchg
in
inc
inc
hlt
mov
push
addr16
fs
jg
lods
je
shlb
test
out
or
push
or
sbb
ja
pop
cmc
adc
mov
into
pop
incb
addr16
adc
les
aas
jmp
jl
shlb
loope
push
lcall
xchg
push
arpl
sub
mov
jle
scas
rcrb
adc
xor
int
mov
cmp
xor
inc
pop
or
and
sbb
add
or
dec
sbb
sbb
insb
imul
xchg
jmp
aam
and
sub
pop
xlat
mov
call
jb
mov
arpl
enter
xchg
fcomps
dec
jae
mov
sbb
pop
lar
pusha
xor
xchg
aam
stos
mov
mov
jle
jmp
pusha
push
inc
repnz
daa
adc
aaa
ja
in
sub
sbb
jecxz
inc
js
xor
lds
daa
das
arpl
shrl
popa
fisubrl
mov
add
dec
jecxz
iret
mov
xor
adc
xchg
push
je
xor
mov
or
mov
dec
xor
jl
les
xchg
faddp
int3
jo
in
andb
cmp
jnp
inc
adc
pop
xchg
dec
in
jae
pop
mov
je
in
in
jbe
xlat
enter
out
stos
add
in
out
scas
cmp
jno
mov
jp
mov
aam
push
mov
dec
call
fnsave
lock
fisubl
addr16
pusha
jne
sbb
fs
xor
jg
xchg
out
jno
ljmp
push
jge
rcrb
shl
sbb
lock
test
jno
mov
pop
jnp
lock
mov
lea
inc
or
jge
and
les
or
xlat
mov
mov
sub
jle
je
dec
subb
and
nop
lahf
dec
sub
mov
div
xor
mov
mov
and
aaa
adc
push
xor
mov
inc
std
adc
or
loopne
loope
xchg
test
cs
mov
shlb
and
fidivrs
mov
pop
mov
push
sub
sbb
test
mov
jg
and
les
cmpsb
popa
sbb
lret
mov
sub
cmp
out
fbld
imulb
and
mov
push
hlt
addb
push
jne
sbb
mov
sub
xlat
scas
cltd
jns
mov
rcrb
jb
cwtl
sub
or
dec
mov
cmp
lahf
out
sti
fsubs
add
aam
xchg
push
sahf
movsb
sti
inc
js
or
mov
dec
popf
rcll
xchg
xchg
push
ret
sub
sahf
cmp
xchg
and
pop
sbb
das
movsb
inc
xchg
out
popf
add
std
mov
popa
lds
fwait
jmp
add
imul
in
ds
lods
into
xor
push
cmp
clc
add
mov
dec
je
loopne
push
dec
popf
cld
mov
aam
xchg
sbb
fs
test
pop
cld
pusha
aam
repz
stos
sbb
mov
popa
movsb
pop
or
imul
loope
jb
dec
imul
jmp
cmpsb
mov
mov
mov
das
push
nop
js
test
pop
bound
mov
jmp
sbb
cli
push
or
hlt
mov
sahf
outsl
xchg
or
ret
xchg
ljmp
dec
insl
enter
int
shlb
mov
xchg
test
stc
sub
mov
jo
push
mov
aaa
lods
sbb
inc
aam
pop
jnp
je
orb
mov
sbb
dec
mov
mov
fdivl
push
jle
imul
sub
ret
nop
cmpsb
adc
fs
and
jmp
bound
arpl
lret
mov
in
add
mov
xor
sbb
add
jo
sbb
clc
sbbb
dec
dec
jne
dec
lret
xchg
adc
iret
out
arpl
jl
test
cmp
popf
add
or
stos
arpl
lock
aad
sub
dec
xorl
movsl
lds
sahf
adc
scas
or
cwtl
or
ss
dec
loope
cmp
cmp
dec
in
nop
inc
mov
mov
popf
scas
inc
notb
mov
dec
mov
in
call
daa
loopne
sarl
xchg
lock
out
xor
jne
into
mov
lret
cs
pxor
jmp
inc
aaa
sub
cmc
leave
addl
mov
fsubs
ds
incl
push
cmp
sub
stc
out
repnz
jg
sbbl
xchg
inc
or
call
xchg
test
fwait
xor
mov
sbb
xchg
adc
or
sub
mov
subl
pop
mov
sub
mov
dec
add
fwait
cmp
and
pmaxub
in
sub
call
or
pop
jnp
jne
mov
and
fs
ljmp
pop
shll
pop
xchg
cmp
cmp
push
add
xor
adc
jp
push
fs
leave
cmpsb
mov
mov
xlat
mov
sub
rcr
pop
mov
stos
test
adc
into
test
xor
popa
and
lods
inc
jae
xor
iret
cwtl
jne
bound
js
lds
and
inc
pusha
push
push
xchg
add
lret
mov
scas
and
movsb
mov
pop
fsubs
sub
pop
add
adc
dec
or
adc
mov
lods
adcl
jg
fmull
shl
or
xor
jns
test
cli
mov
scas
scas
insb
xor
imul
inc
stc
cli
jl
loope
jecxz
hlt
aam
pop
cwtl
lea
scas
cs
push
mov
sub
sub
jl
into
xchg
inc
adc
cmpsl
cmpsl
push
dec
out
cli
jge
subl
cmpsl
or
add
inc
jo
stos
cmp
std
out
hlt
jae
adc
outsl
repnz
sub
movsl
pop
jnp
popa
pop
es
pop
test
testl
shrb
shlb
pop
cmp
cmc
add
aam
mov
pop
in
out
mov
xchg
ret
cmp
repnz
cwtl
and
mov
dec
pop
inc
xor
pushf
aam
pusha
jb
inc
outsl
andb
xchg
aas
stos
pop
and
rcl
in
inc
jbe
mov
imul
mov
insl
or
cmpsl
inc
inc
add
xor
jb
mov
xorl
or
jecxz
push
aaa
cmp
call
int
movb
popf
into
jl
xchg
sbb
cmpsl
jle
pushf
sub
dec
pop
adc
int
outsl
cmp
mov
pop
add
je
sti
fwait
sbb
jno
aaa
push
lahf
iret
orl
push
sbb
lcall
push
add
outsl
inc
pop
add
in
jb
jle
addr16
rclb
loope
xchg
shll
xchg
inc
repz
ljmp
adc
adc
xchg
ja
lret
pushf
push
dec
xchg
out
xchg
loope
ficomps
jmp
jbe
xchg
jmp
fidivrl
cmp
push
push
xor
dec
push
sbb
cvtps2pd
fsubr
dec
add
lahf
ss
rorb
subl
fldenv
ja
xchg
dec
js
mov
or
test
stos
lea
iret
jmp
mov
or
test
popf
xor
jecxz
push
pop
or
aas
cmpsl
adc
mov
lret
ret
andb
sub
mov
sahf
add
inc
dec
sbb
es
dec
dec
xchg
mov
mov
adc
inc
imul
aam
mov
outsl
push
sub
dec
add
push
cltd
sarb
add
pop
out
sub
inc
sti
cwtl
mov
adc
mov
das
xchg
in
enter
repnz
push
push
cmp
loope
sbb
cld
push
cld
mov
mov
loopne
int
xchg
insb
scas
gs
stos
and
cld
in
into
pop
gs
xor
dec
sub
jmp
cmp
loop
inc
nop
in
mov
ja
sti
test
mov
cmp
mov
cwtl
and
flds
leave
std
aas
sbb
push
xor
sub
sbb
push
imul
xchg
jmp
std
scas
loopne
divl
lret
sbb
dec
pop
scas
and
popf
sti
push
in
shr
cmp
testl
rol
cwtl
mov
cmp
mov
test
jl
fwait
orb
icebp
cmp
push
fcomps
imul
xlat
aas
fsubrs
xchg
sbb
dec
fstpt
dec
add
fistps
mov
mov
push
cmpsb
enter
cs
push
scas
pop
jne
sbb
push
jne
cld
gs
cmp
jne
orb
dec
add
pop
negl
leave
fcomip
pop
outsb
mov
pop
iret
imul
outsl
clc
jnp
push
xchg
hlt
stos
int3
fildll
mov
sbb
rcrb
mov
inc
lods
loopne
xchg
push
orl
cltd
pushw
push
push
std
xchg
aaa
mov
push
push
inc
mov
pop
push
popf
lods
rolb
push
adc
hlt
loope
jbe
push
sbb
cmp
fcompl
ja
roll
mov
sti
je
sub
aad
jbe
aaa
fdivs
sub
ret
loopne
sbbl
sbb
cli
add
xchg
cs
xor
add
inc
ret
cld
xor
jge
cmpsl
ja
mov
mov
push
adc
xlat
frstor
xchg
in
lret
sub
imul
inc
push
jmp
out
inc
in
stc
adc
xlat
or
pop
lret
mov
es
inc
lret
ja
addr16
jp
fcmovbe
xchg
push
iret
cvtps2pi
jmp
cmc
lahf
push
sub
pop
shr
call
lods
scas
xor
inc
jp
ja
lret
push
pop
xchg
stos
ret
mov
mov
add
lods
movb
iret
jbe
cmc
xorb
xor
push
out
sub
insb
das
pop
cmp
inc
pushf
xor
jecxz
xchg
inc
xor
std
sub
sahf
aam
mov
jmp
shlb
stos
mov
sub
lea
dec
ja
adc
out
jne
dec
push
nop
cmp
insb
mov
call
xchg
pop
mov
stc
mov
call
movsl
push
xchg
arpl
popf
and
adc
out
addr16
stc
sub
imul
pusha
lret
push
jle
jnp
mov
cli
loopne
xchg
aad
cs
imul
rorb
mov
jle
or
lds
hlt
cli
mov
mov
pop
lock
movsb
aaa
in
bnd
adc
jb
rcl
mov
sub
push
fsubp
mov
adc
popf
inc
adc
lret
in
adc
imul
outsb
mov
jae
sbb
imul
mov
call
stc
iret
fists
cmpsb
jecxz
xor
pusha
mov
jmp
mov
je
les
subl
mov
ja
lcall
and
fildll
xlat
in
repz
mov
mov
into
sub
enter
mov
mov
cmp
jecxz
mov
or
jle
test
stc
push
sarl
out
dec
popa
pop
mov
dec
jno
jmp
sti
adc
rol
or
cmp
push
test
pop
push
cwtl
sbb
mov
mov
imul
ljmp
and
sbb
add
jbe
int3
add
cld
jmp
scas
rclb
jb
and
sbbb
jl
inc
cld
dec
popa
pop
fwait
jnp
jbe
enter
dec
jge
adc
push
movsb
lods
ss
inc
insl
cmp
sarl
mov
sub
mov
shll
xor
loop
jnp
mov
pop
enter
loope
jle
push
xchg
sbb
bound
xor
inc
clc
loop
mov
out
fcos
in
mov
daa
pmaddwd
in
decb
pop
es
sarl
dec
lret
cmpsb
or
int3
add
dec
sbb
lods
and
shrb
fcmovb
mov
mov
xor
jmp
mov
sbb
mov
jae,pn
pushf
fidivs
pop
gs
dec
int3
sub
cmp
dec
movsb
lahf
xchg
dec
rcll
push
mov
dec
pop
xchg
mov
mov
adc
add
iret
xor
out
or
or
imul
rcrl
mov
jo
cs
add
push
push
mov
dec
pop
aas
dec
test
sub
ds
call
ret
lcall
dec
add
test
dec
lcall
push
xchg
imul
orb
andl
jl
cmp
mov
call
jno
add
loope
pop
jns
dec
mov
popf
addl
imul
and
mov
sub
scas
daa
es
div
dec
adc
dec
popf
cld
cmp
pushf
push
cmp
xchg
adc
mov
out
mov
icebp
adc
adc
das
divb
addr16
inc
hlt
outsl
das
xor
inc
in
cmc
les
xchg
pop
inc
out
mov
in
outsb
or
ja
mov
adc
imul
add
mov
in
cs
xchg
mov
pop
xchg
fxch
xor
scas
movb
pop
lret
xchg
imul
cmp
inc
or
es
int
lea
lret
push
push
rcrl
mov
jmp
pop
data16
xchg
loope
xor
ret
jmp
mov
xchg
loope,pt
in
pop
orl
mov
ljmp
cmp
xor
rcrl
pop
cmc
adc
jg,pn
cld
das
aad
mov
bswap
cwtl
stos
test
jmp
or
cmp
sbb
sub
adc
push
jmp
sahf
pop
add
and
or
cmp
mov
pop
lahf
mov
pop
in
sub
daa
adc
cs
mov
out
and
add
jnp
mov
mov
mov
lret
leave
add
scas
mov
sub
scas
push
int3
scas
dec
push
inc
or
fs
leave
push
andb
out
int
jl
mov
pop
xchg
sti
or
push
add
fildl
push
lahf
mov
mov
sarl
dec
in
jo
aad
pop
xchg
dec
loope
icebp
sub
fisttpl
xchg
cmp
repz
mov
sbb
inc
push
repnz
or
adc
jmp
cmpsl
test
es
es
mov
insl
repz
in
inc
leave
dec
pop
cld
test
and
adc
fldcw
adc
repnz
into
sbb
cmpsl
mov
mov
test
jmp
mov
imul
ficompl
pop
enter
jno
adc
cmpb
push
imul
or
repz
hlt
xor
popa
or
xor
pop
cli
jno
inc
inc
psubq
mov
sarl
sub
sub
mov
loope
push
cld
mov
xchg
fwait
into
pop
scas
cmp
sbbl
jne
call
inc
mov
dec
xor
dec
and
adc
out
xchg
addr16
push
push
mov
mov
push
xchg
aaa
ja
es
icebp
pushf
fisubrl
dec
mov
iret
aaa
push
js
pop
les
xchg
lret
shrb
scas
mov
adc
mov
enter
movsb
pop
loop
lods
ds
out
call
into
bound
lret
jb
and
pop
sbb
xor
popa
jge
test
or
stos
xchg
or
ljmp
push
aaa
insl
js
or
sub
xor
cld
mov
sti
imul
mov
aaa
mov
enter
ja
fidivrs
sti
out
mov
ds
push
sub
jnp
jp
cmp
mul
cmp
imul
sbb
sar
subb
mov
in
test
jp
cwtl
pop
fidivrs
jmp
add
xor
xchg
xchg
mov
add
icebp
hlt
cmpsb
mov
mov
inc
fs
mov
pop
xchg
mov
lcall
enter
inc
mov
and
mov
sbb
push
into
sub
cli
dec
or
pop
add
fnstenv
inc
shlb
lret
cmp
pop
shll
xchg
inc
test
xchg
or
jnp
pusha
cmp
imul
xchg
xor
dec
and
outsb
xchg
mov
nop
xor
mov
repz
mov
iret
cltd
mov
sbb
mov
mov
gs
je
jmp
movsb
adc
int3
scas
shll
or
fcomps
adc
pop
mov
mov
xchg
cmpsb
addr16
icebp
pop
dec
addr16
movsb
outsl
rorl
ja
jns
and
dec
popa
insb
push
push
sbb
fwait
ret
mov
add
clc
mov
pop
sbb
aas
es
adc
mov
xor
xor
daa
sbb
sti
out
push
shll
sub
cmc
mov
repnz
push
pop
pop
mov
mov
or
loope
xchg
dec
stc
bound
inc
dec
icebp
dec
aad
sub
add
and
idivl
pop
mov
push
test
xchg
cmpsl
xlat
cmp
iret
dec
inc
pushw
cli
or
clc
add
jg
arpl
pop
inc
inc
movsb
sbb
mov
sub
lret
test
jge
je
sbb
lret
lock
mov
icebp
addr16
push
outsb
sbb
in
jo
dec
arpl
into
out
jge
jge
fisttps
mov
pop
push
lahf
movsb
dec
in
fnstenv
lcall
scas
mov
adc
dec
andl
fldt
mulb
push
jnp
and
cmc
fimuls
fs
and
mov
ret
jo
dec
addr16
cmovle
icebp
mov
add
inc
cs
push
jnp
and
push
or
in
sub
dec
mov
jno
jbe,pn
mov
mov
jg
cmpb
inc
call
push
repnz
mov
inc
adc
adc
aaa
loop
sub
cmp
rcl
shrl
and
ret
mov
testl
push
mov
add
cld
lods
inc
pop
add
or
das
lods
stc
jp
mov
icebp
lea
pop
std
mov
mov
cmp
jbe
adc
test
mov
sbb
xchg
jne
cmpsl
jge
cld
push
xor
sub
out
adc
repnz
mov
mov
push
inc
ds
inc
mov
or
mov
mov
xchg
nop
pop
cmpsl
dec
add
outsl
aaa
cwtl
dec
dec
aas
or
mov
ja
pop
dec
push
dec
enter
fbld
out
mov
test
out
jp
imul
pushl
cmp
scas
lods
xchg
xchg
and
lods
dec
inc
out
or
mov
pop
out
or
dec
mov
scas
scas
adc
push
sbbl
ret
cli
mov
addb
dec
es
divl
dec
jle
jge
pop
pop
xchg
ljmp
push
jno
pusha
fisttpl
pop
jp
jo
and
outsb
inc
mov
jge
lcall
outsl
ret
sub
xchg
xor
ljmp
mov
out
jns
push
and
xchg
fsubrp
bnd
xlat
cmp
cs
test
scas
shl
inc
enter
mov
stos
lret
and
into
pop
mov
fs
jns
sbb
dec
mov
add
jecxz
loop
adc
popa
add
mov
push
jle
sarb
lods
jno
mov
mov
inc
xchg
mov
shlb
sub
jp
std
cmc
dec
xor
sbb
pop
mov
mov
adc
les
icebp
sub
jb
and
test
or
xor
jl
das
inc
jmp
pusha
test
into
fs
mov
das
clc
das
inc
ds
or
imul
je
adc
pop
stos
int
loopne
xchg
out
and
lods
lods
add
mov
lods
das
cmp
inc
ss
mov
imul
push
dec
dec
stos
jmp
xlat
ret
int
add
mov
das
mov
mov
jg
imul
inc
mov
push
pop
xor
or
sbb
sti
test
dec
xchg
xchg
sub
jnp
out
xlat
mov
cld
dec
pop
lods
aam
rep
lcall
adc
jge
and
cmpsb
es
pop
jp
dec
mov
and
fdivrl
out
sbb
xchg
lods
out
push
push
movsl
xchg
mov
jbe
sub
jo
mov
jno
imul
mov
incl
or
pop
int
hlt
xchg
fsubl
push
inc
mov
mov
rorb
or
clc
or
movsb
dec
movsl
and
jb
mov
push
inc
add
mov
hlt
jmp
js,pn
inc
out
mov
mov
jle
mov
jb
and
adc
mov
xchg
out
cmpsl
rolb
push
in
lock
das
addb
xor
xchg
imul
xor
push
dec
add
adc
mov
add
test
jecxz
dec
xlat
lock
inc
imul
jecxz
das
int
divb
daa
orl
aas
stc
cmp
in
mov
idivb
inc
nop
ss
into
arpl
sub
pop
mov
jg
shll
repnz
inc
sbbb
inc
pop
fadd
sub
jbe
pop
popf
and
add
adc
sub
out
movsb
cmp
add
das
into
mov
push
push
lret
inc
out
pop
leave
xchg
mov
inc
fs
movsb
lret
adc
sbb
mov
xor
jp
out
add
mov
aam
cld
xor
xchg
or
pop
mov
add
push
ljmp
sarb
adc
insb
push
cmpsl
mov
xchg
mov
loop
mov
ret
in
dec
nop
mov
mov
es
xchg
ret
dec
ss
ret
fisttpll
xchg
add
cmp
jmp
and
shrb
adc
push
enter
or
std
and
aad
xchg
add
xchg
adc
call
pop
scas
xor
or
addr16
repnz
add
or
mov
inc
jle
pop
mov
push
or
aas
add
fidivrl
or
aam
mov
imul
cs
clc
addb
testb
das
loop
out
push
mov
jp
add
push
xor
xor
aam
and
xor
aam
jmp
jg
xor
and
dec
loop
cmp
mov
jns
aam
in
add
add
jp
mov
jb
lahf
pop
into
and
ret
imulb
mov
pop
imul
jmp
jns
or
sahf
mov
pop
stos
inc
cs
into
js
shll
adc
repnz
jp
andb
inc
sbb
ret
fs
cld
xchg
xchg
pop
lcall
dec
pop
sbb
mov
ret
sar
mov
mov
push
inc
xchg
xchg
in
imul
and
sbb
loop
inc
hlt
fwait
pop
push
jae
test
cld
jno
into
add
clc
test
in
jno
sbb
inc
fisttps
lahf
fsubl
out
shrl
rorb
test
arpl
aam
insl
xor
idivb
andb
pop
cltd
js
lods
dec
adc
pop
fdivrs
idivl
shrb
roll
stos
push
sub
sbb
jmp
pusha
cmp
mov
dec
add
sub
imul
jbe
xor
pop
lret
leave
pop
push
fcompl
scas
mov
shlb
xor
jecxz
daa
mov
mov
sarb
lock
adc
add
imul
jo
mov
xor
lods
lret
jle
dec
push
push
out
mov
insl
shlb
sbb
push
leave
stc
cli
call
inc
xor
add
or
and
pop
push
daa
sarb
inc
pop
xchg
or
mov
jo
mov
cmc
xchg
dec
xor
jp
jle
xchg
ss
mov
push
pop
sub
jle
mov
repz
scas
out
cld
add
and
rolb
stos
shll
or
adc
add
std
mov
mov
and
push
dec
lret
jle
enter
jns
sbb
test
inc
or
sub
xor
in
sti
pusha
push
stos
xlat
xor
xlat
xor
icebp
push
add
stos
xor
adc
mov
pop
xchg
push
ss
mov
mov
leave
jo
ds
mov
dec
push
push
insl
jne
ljmp
mov
lods
jp
jmp
add
scas
sti
in
popa
push
add
data16
outsl
sbb
sbb
outsb
sbb
std
jl
jmp
mov
popf
push
mov
mov
jns
into
ficoml
in
mov
mov
inc
insl
adc
xchg
jmp
mov
add
pusha
push
push
adc
xor
cmp
bnd
mov
or
mov
scas
out
mov
enter
add
stc
scas
ficoml
fs
mov
orl
aam
add
out
enter
xchg
je
loopne
or
sbb
jb
mov
push
insl
jne
ret
sub
add
call
sub
rorl
test
jae
cli
add
or
sbb
jmp
shlb
cwtl
andb
lret
adc
xor
mov
jb
int3
add
adc
insb
jmp
daa
mov
dec
sarb
adc
cmp
xor
pop
xchg
jmp
testb
sub
pusha
mov
jge
out
sub
fdivrl
mov
pop
or
divb
hlt
push
push
mov
leave
test
jne
adc
hlt
xadd
arpl
popa
inc
mov
lahf
push
shll
xor
notl
xlat
aaa
lock
push
bnd
mov
in
xor
jae
imulb
inc
push
icebp
add
jecxz
and
pop
shlb
dec
outsb
mov
outsl
into
inc
arpl
nop
xor
dec
pushf
cs
sub
sbb
mov
and
incb
sbb
and
sbb
mov
sti
ja
rcl
fisubs
push
sbb
adc
adc
ret
in
testb
jno
es
dec
jb
mov
dec
xchg
je
mov
xor
push
xor
pop
dec
pop
dec
insb
shl
dec
mov
xor
pusha
inc
mov
loop
shrl
mov
sub
mov
scas
dec
adc
addb
or
shll
adc
jp
outsb
test
dec
psrld
sbb
xchg
fistpl
mov
sub
mov
fmull
loop
adc
dec
dec
and
add
pop
sahf
xor
je
sub
inc
cmpsl
xchg
into
test
daa
pop
pop
push
lret
aaa
jg
xchg
aaa
ret
mov
aam
jo
add
rcl
xlat
sbb
andl
and
es
mov
cmp
sub
lcall
push
lock
sub
jmp
shr
dec
leave
adcb
mov
pusha
push
rorb
cli
and
xor
and
fwait
loop
movsl
mov
jecxz
xchg
fisubrs
mov
jbe
or
or
adc
and
sar
loop
or
xor
push
aam
dec
push
push
adc
imulb
fadd
mov
or
pop
adc
sub
push
or
insb
and
lea
aam
fwait
jbe
adc
sub
cmp
mov
icebp
jl
jnp
andb
clc
fcmovb
fidivs
test
and
int3
std
xor
push
out
and
xchg
cmp
mov
ss
pop
dec
sbb
cmp
add
popf
push
or
sub
inc
dec
in
loop
rolb
cwtl
inc
jae
push
or
mul
out
push
xor
cmp
imul
add
je
dec
lods
inc
cmpsl
imul
sbb
les
addr16
outsl
mov
bound
push
xchg
jno
adc
jnp
leave
test
jmp
and
push
sbb
out
mov
cmp
fcompl
fildl
aam
lahf
daa
adc
cmpsl
mov
clc
and
sbb
ja
mov
cld
in
add
jmp
pop
scas
repnz
sub
mov
push
movb
pop
ljmp
movsl
dec
roll
xchg
xchg
sub
data16
std
xchg
xchg
bound
ljmp
iret
lds
mov
sbb
lahf
popf
and
sub
std
ffree
test
lods
jmp
or
pushf
mov
fisttpl
dec
das
adc
mov
inc
mov
mov
repz
loopne
pusha
loope
push
mov
icebp
clc
add
cltd
fxch
sti
cltd
jmp
dec
adc
int
dec
pop
and
cmp
mov
sbb
sahf
jecxz
pop
jge
jae
xor
xchg
sbb
mov
sub
orb
in
add
or
jg
pop
push
or
xchg
rcrl
lock
adcb
or
aam
test
sbb
int
cmp
sbb
inc
movsb
lea
push
jmp
lcall
and
shrl
mov
addl
mov
jbe
lcall
xorb
mov
mov
in
mov
out
dec
shlb
mov
aaa
sti
sub
xlat
dec
push
imul
jle
push
lcall
pop
mov
jmp
shl
shlb
cmp
in
or
out
or
mov
xchg
adc
add
xchg
lahf
fists
ljmp
dec
or
insl
xchg
jno
inc
pmulhuw
xchg
mov
or
or
cld
pop
or
es
daa
xchg
testb
mov
jp
je
pop
mov
mov
push
cs
xchg
leave
fs
cli
jbe
and
data16
dec
aad
in
add
xor
xlat
es
clc
outsb
cmc
sub
push
xchg
or
jecxz
xchg
xchg
inc
aam
inc
sbb
lods
push
ljmp
into
mov
fsubl
popf
adc
jp
fistpl
enter
jo
sub
or
addb
mov
push
pop
lcall
or
jmp
add
repz
jl
or
add
cmp
call
repz
scas
mov
cmpsb
mov
jae
enter
xchg
fwait
mov
cmp
adc
orb
pop
xor
adc
stos
sub
push
xor
jns
lret
mov
pop
jecxz
dec
pop
fld
lds
jp
sbb
and
andb
pop
data16
es
outsl
cwtl
add
and
dec
ret
ret
es
or
push
jecxz
jle
fiadds
push
stc
pop
neg
sbb
mov
sbb
cmpsb
sbb
pop
push
cmp
andb
sbb
cld
sbb
pusha
or
sbb
pop
add
mov
fdivrs
std
add
dec
jp
cmp
push
mov
pusha
xor
movsl
sub
fcmovnb
mov
jae
aad
cmpsl
adc
push
pop
mov
jmp
lock
subl
gs
ja
lock
dec
clc
xchg
sub
mov
decb
js
xor
mov
les
int
out
xlat
dec
pop
aad
jmp
push
inc
test
add
add
out
adc
mov
arpl
jle
pop
leave
mov
cltd
mov
mov
sarl
sub
mov
mov
add
outsl
xchg
cmp
xor
fs
je
mov
lret
adc
mov
faddp
stos
je
dec
nop
adc
sub
xchg
add
mov
mov
mov
add
inc
jmp
into
ss
loope
mov
xchg
or
movntq
test
mov
mov
out
adc
mov
sbbb
test
ljmp
fwait
sbb
xchg
inc
or
cmp
cs
sbb
aaa
popa
imul
add
sbb
mov
outsb
js
mov
add
je
pop
cmp
lcall
sbb
pop
dec
pop
in
jge
add
dec
js
jno
push
jo
testb
dec
daa
sub
mov
cmp
stos
sbb
push
dec
outsb
jecxz
push
cmpsl
out
cvtps2pd
push
jp
mov
das
pop
jle
and
aam
out
xchg
pop
mov
imul
pop
adc
testb
test
dec
in
mov
pop
ds
lret
call
repz
int3
rep
les
jl
bound
inc
shrb
xchg
cs
mov
mov
xlat
and
sbb
mov
or
stos
das
insl
inc
pop
nop
mov
sbb
xchg
xchg
shrl
dec
aas
jg
mov
jl
orb
lret
jnp
outsl
fstps
xchg
nop
add
pushf
out
xchg
jmp
xchg
xchg
cmpxchg
bound
mov
adc
nop
jne
aas
subb
leave
xchg
icebp
cld
mov
or
cmp
inc
and
adc
ja
int3
in
push
dec
and
pop
cmp
sbb
movsb
mov
mov
mov
arpl
cmp
aaa
lock
mov
xor
pop
out
jl
pop
pop
mov
xchg
mov
js
inc
jae
sub
jo
std
hlt
ror
cli
cmp
ret
and
shl
flds
pop
push
xor
mov
jb
pop
in
dec
fcmovnbe
xchg
mov
add
pusha
and
push
sar
test
aam
mov
xchg
sarb
push
ror
repnz
lods
jo
leave
sbb
cmpb
cld
icebp
sbb
icebp
jg
xor
call
and
jne
jbe
xchg
push
fdivrs
or
sahf
pop
jg
pushf
cmp
mov
pop
mov
adc
ret
es
mov
cs
dec
inc
sub
test
jb
add
dec
ja
fwait
in
xchg
jge
outsb
mov
sub
incb
mov
std
mov
fsts
adc
popf
decb
mov
mov
mov
cmp
cmp
jecxz
les
sti
or
sbb
jge
mov
es
rcrl
lea
pop
shlb
adc
and
fdivrs
sbb
sbb
add
mulb
aas
xchg
mov
int3
jne
mov
icebp
cwtl
in
jns
mov
pop
cmp
sbb
shr
push
dec
mov
sub
pop
jb
pop
lods
and
adc
sbb
mov
jg
mov
push
pop
mov
and
dec
xor
mov
cmp
and
sbb
repz
inc
mov
mov
in
jg
dec
stos
mov
inc
scas
loop
pop
roll
inc
ljmp
inc
int3
pushf
sbb
addl
lds
or
xchg
push
sbb
das
int3
sbb
jge
mov
jno
sub
stos
sub
push
lret
es
fsub
mov
rcrb
adc
pop
sarl
mov
fwait
sbb
mov
orb
sbb
or
add
inc
lock
loope,pn
mov
jecxz
jns
cmp
test
jo
faddp
stos
adc
js
mov
mov
mov
pop
loop
addb
das
xchg
xor
lahf
cltd
shlb
sbb
jne
cmp
cli
cmp
sbb
or
or
sahf
inc
icebp
mov
das
cli
add
add
pushf
sbb
sbb
out
adc
lret
mov
es
aam
rclb
xor
inc
pushf
sbb
inc
push
push
xor
lock
mov
out
cmp
push
push
inc
in
mov
movsl
sub
pop
mov
movsl
and
insl
test
mov
xchg
dec
ret
or
aas
aad
call
inc
push
mov
fcompl
push
add
scas
pop
xor
int3
es
in
pavgb
vpand
leave
orb
test
adc
adc
pushl
lods
push
pop
sbb
orb
xchg
test
icebp
add
adc
add
add
jne
dec
cs
loope
dec
or
mov
mov
divl
aam
arpl
mov
movsb
sbb
cmpsl
dec
sbb
fisubrs
mov
jno
cmp
sbbl
xchg
std
mov
xor
je
out
xlat
jge
daa
lods
sbb
add
lock
je
sbb
mov
ds
std
push
sub
cmp
sub
jg
inc
pop
mov
jb
sub
test
mov
and
adc
cwtl
outsl
test
hlt
scas
gs
mov
mov
mov
sbb
movsb
fmulp
call
cmpsl
fldl
push
jmp
popa
out
xchg
xor
lds
daa
xor
mov
pop
test
xor
or
fs
stos
aam
mov
sub
jecxz
cmp
inc
enter
ds
inc
mov
les
mov
std
dec
jae
sbb
adc
ja
inc
call
and
fldl
push
outsb
imul
jno
adc
push
sub
loope
jns
add
jo
jb
js
jle
dec
les
les
add
lea
push
cmc
mov
mov
pop
out
jp
aad
int3
adc
push
add
arpl
rolb
or
pop
int3
xor
push
pop
fdivs
mov
inc
mov
adc
dec
scas
dec
fidivl
inc
cmp
lahf
xor
cmpsl
cli
cwtl
xor
scas
sbb
ds
aaa
pop
fdiv
xchg
loope
int3
jbe
or
push
jb
fwait
jg
adc
add
sub
mov
mov
or
mov
and
jnp
or
pavgw
shlb
mov
cmp
cmp
cld
fbld
jmp
xchg
inc
lret
or
add
mov
arpl
xor
sub
ret
jp
repz
shl
and
jge
cmc
ficompl
and
aaa
data16
mov
add
outsb
jg
and
inc
leave
or
arpl
ret
lods
das
jne
sub
dec
dec
faddl
test
nop
mov
mov
jp
mov
cmpl
aaa
scas
xchg
jae
test
sahf
and
or
fisubl
sub
xlat
and
adc
pop
adc
push
lock
std
cmp
jp
xchg
aam
ret
andl
addr16
std
add
push
dec
mov
sbb
mov
rcll
mov
scas
add
or
hlt
mov
movsb
jnp
fildll
iret
std
pop
arpl
jle
inc
sti
or
js
fscale
mov
push
pminsw
or
cs
xchg
imul
test
mov
ds
ja
lret
cmp
fsts
dec
jmp
inc
pop
xchg
std
or
or
add
outsl
mov
call
sub
xchg
jne
or
xlat
lds
loopne
cmp
mov
cmp
sbb
pop
adc
sbb
leave
test
sub
dec
in
jp
pop
sbb
adc
mov
push
jg
nop
push
lods
cld
loop
mov
and
sbbb
lret
add
aam
ret
add
cmp
iret
add
xor
int
mov
mov
mov
xor
orl
out
das
iretw
jle
std
lock
fnstcw
xchg
lods
sahf
inc
add
lret
xor
xchg
add
jo
andb
stc
jno
mov
inc
aam
daa
push
push
inc
cmp
fisubrs
push
or
add
testl
jb
xor
idivl
add
adc
arpl
sbb
rol
cmp
lds
imul
movsb
sub
imul
push
sbb
jne
xor
andl
ja
arpl
addr16
into
inc
push
stos
xchg
rol
mov
mov
push
ret
pop
arpl
maskmovq
divl
daa
adc
shl
fstl
mov
adc
add
sbb
mov
push
rorb
xor
pop
mov
mov
stos
aaa
orb
in
cmp
jae
inc
xor
test
clc
rcl
push
add
mov
cmp
lea
mov
inc
scas
xlat
loopne
out
dec
add
mov
dec
adc
loope
outsb
lods
xchg
xorl
les
adc
test
inc
mov
in
inc
in
cmc
ds
dec
push
aas
pop
mov
ret
mov
jmp
les
cmc
or
or
notb
lea
fsincos
add
popfw
xchg
push
mov
sbb
push
test
xchg
xlat
mov
int
cs
jecxz
jno
mov
aas
pop
cmp
insb
mov
mov
sbb
icebp
or
jge
sub
push
insb
sbb
cmpsb
mov
or
inc
fildl
or
pop
push
arpl
in
arpl
testl
dec
hlt
adc
pop
or
jecxz
mov
mov
cld
xadd
sbb
call
mov
jmp
push
or
adc
xchg
scas
js
cmp
mov
stos
cli
and
stc
sub
ss
es
inc
dec
cmp
inc
daa
inc
in
enter
sub
dec
cmpsb
push
out
jns,pn
sub
and
roll
add
jge
das
mov
pop
xchg
incb
aam
mov
popa
cmp
nop
inc
repz
xor
das
cmpsb
je
xchg
push
ficompl
rclb
xchg
jge
jmp
mov
pusha
sar
cmp
fwait
sarb
or
jno
in
icebp
ffree
push
inc
xchg
pop
outsb
mov
sbb
test
rorl
xchg
call
push
fbld
and
test
adc
or
cld
mov
cmp
in
push
ss
insl
inc
rorb
sbb
pop
sbb
sahf
cmp
pop
sbb
adc
adc
mov
sub
jmp
pop
outsl
mul
popf
das
int3
fwait
out
outsl
rorl
jne
add
push
aas
notl
xor
and
outsb
cmc
pushf
fdiv
mov
xchg
in
ret
ljmp
or
daa
in
das
pop
enter
fwait
popf
cwtl
pop
push
pusha
ffree
cmpsl
stc
pop
loop
push
enter
rclb
iret
mov
out
dec
sbb
clc
inc
popf
ja
sbbl
push
mov
jne
inc
in
push
jl
sbb
lock
jmp
xchg
xchg
iret
imull
pop
adc
add
sub
leave
and
jae
inc
iret
in
push
mov
sub
mov
pop
xor
pop
sbb
xor
sar
xor
jge
imul
aam
pop
aam
or
push
je
pop
arpl
jne
aaa
dec
xor
imul
lret
push
and
and
push
test
or
es
xor
stos
jmp
popa
fldcw
std
insl
leave
sbb
bound
mov
mov
mov
mov
or
mov
inc
cmpsb
cmpsl
push
dec
push
ret
and
mov
mov
or
and
cs
dec
jne
xchg
xchg
rcrb
mov
out
jo
sar
clc
lea
inc
lds
or
shrl
or
shlb
clc
adcb
dec
add
sub
out
inc
xchg
sbb
cmp
mov
es
repz
xchg
push
bound
jg
mov
mov
or
pop
adc
aas
jle
xor
xlat
adc
xor
subb
jmp
mov
mov
sub
ljmp
pop
call
pop
pop
pop
ret
dec
enter
fnstenv
scas
insb
dec
dec
inc
jne
out
jno
aaa
or
ss
lcall
in
sti
lds
xor
push
and
dec
hlt
sahf
mov
out
push
scas
lods
mov
lahf
push
fucomp
aad
jne
sahf
lods
insl
test
adc
mov
or
xchg
dec
mull
xor
fstps
mov
cwtl
bound
aad
lods
fisubrl
sbb
xchg
push
mov
lret
cmp
xchg
mov
mov
andl
and
pop
std
outsb
divl
adc
jb
mov
xchg
insb
or
push
jg
cld
gs
mov
cmp
inc
inc
out
mov
fldl
gs
dec
testb
jmp
test
lret
push
lret
lahf
clc
cmp
les
mov
inc
dec
popa
je
jmp
xor
mov
test
insl
insl
sub
addr16
inc
cmp
into
mov
fwait
sub
mov
hlt
xchg
int3
push
dec
in
inc
or
mov
mov
inc
aad
popf
dec
testl
movsb
cmc
mov
leave
and
stos
jns
xchg
leave
mov
cmpsl
nop
xlat
in
sbb
mov
into
mov
fxtract
out
cld
dec
xchg
adc
into
push
inc
push
xchg
ret
jg
mov
xor
or
je
mov
and
sbb
lret
or
sbb
sahf
shll
dec
jecxz
iret
sbb
mov
insb
push
push
movsb
dec
and
ret
pushf
dec
subb
xor
pushf
and
dec
dec
sub
std
repz
fsubrl
adc
jae
xor
push
pusha
mov
sub
out
es
test
lods
shll
pop
dec
ret
fwait
jle
test
lds
mov
push
aam
je
les
in
jecxz
out
in
hlt
mul
pop
fmull
push
push
lcall
mov
icebp
in
xlat
cmc
adcb
out
pop
jge
fnstenv
mov
inc
jae
add
pushf
addb
sbb
adc
ror
cmp
mov
sub
mov
jg
mov
xor
mov
call
daa
add
sti
fmull
in
push
pushf
div
inc
rorb
std
xor
das
out
mov
sbb
aaa
leave
aam
or
xchg
xchg
sub
and
aaa
jmp
imul
cmp
sbb
jl
mov
mov
or
arpl
sub
jbe
rep
stos
mov
mov
data16
mov
xor
xor
xchg
xchg
mov
sub
cmp
stos
add
add
leave
out
mov
hlt
dec
xchg
in
stos
mov
lods
cmp
adc
incl
push
out
stos
sbb
cli
stos
mov
cmpl
shrb
sub
mov
or
inc
loope
or
es
mov
bnd
and
add
stos
cmp
dec
out
cwtl
ret
lods
es
sub
adc
inc
sub
fbld
push
cmp
sti
call
sbb
mov
and
xor
sbb
jns
call
out
mov
mov
fidivrs
fdivl
inc
adc
loop
fisubrl
js
or
xchg
in
adcb
push
jle
mov
sti
or
xchg
sahf
jne
sbb
dec
in
les
dec
movsb
rcr
and
les
mov
movsl
cltd
and
pcmpgtd
xlat
jnp
inc
and
rcl
test
jmp
cmp
dec
fsubr
clc
add
mov
push
ljmp
xor
pop
fildll
into
inc
mov
pop
inc
aam
je
popf
scas
mov
jmp
loopne
in
or
or
mov
and
jae
test
xchg
inc
sub
mulb
inc
pop
sbb
into
and
std
or
and
pop
and
add
dec
repz
push
out
xchg
jmp
orb
xchg
fadds
push
push
in
insl
sbb
mov
cmp
inc
xchg
adcb
sub
jmp
stc
xchg
adc
add
xchg
mov
ret
sbb
push
adc
add
sbb
and
aam
hlt
xlat
mov
jns
sub
or
cmp
dec
push
mov
and
sbb
sub
push
fdivs
jns
mov
jns
inc
fcomi
mov
mov
mov
or
push
out
aad
pop
out
push
movsl
mov
aad
dec
inc
ret
aas
call
shrl
ret
adc
push
xchg
jl
add
dec
cli
faddp
rolb
fnsave
xor
test
aam
loop
pop
mov
ljmp
cmp
mov
imul
xorb
add
mov
cmp
scas
iret
and
jns
push
movl
les
inc
nop
push
push
imul
adc
fadds
leave
leave
add
inc
xor
add
aam
sub
pop
sbb
lods
loope
iret
outsb
sbb
mov
cmp
mov
sub
dec
ja
fnstsw
int
xchg
jne
daa
aad
ja
mov
das
dec
sarl
fcompl
xchg
imul
leave
pop
aam
aaa
jo
mov
ljmp
jae
push
inc
lds
pop
cld
lods
shlb
mov
xchg
dec
je
xchg
push
sbb
or
ret
fmulp
int3
popa
dec
push
sahf
jmp
mov
cmp
es
sub
inc
or
push
jno
inc
and
inc
pushf
test
mov
xchg
sbbb
jae
cmp
mov
sahf
adc
repz
in
inc
xchg
sbbb
out
adc
pop
shrl
mov
les
ror
out
popa
inc
arpl
mov
xlat
outsl
cmp
ds
imul
cmp
dec
int3
ds
add
stc
add
shl
jmp
rcll
xchg
and
add
std
adc
ds
push
jb
cmp
jg
push
mov
sbb
mov
insl
push
out
xchg
test
faddl
jmp
sahf
mov
inc
xchg
sbb
xchg
ret
popf
jecxz
add
in
inc
pop
popf
pop
pop
lret
rolb
loop
inc
lea
pop
pop
jo
pop
xchg
loop
fstpt
fiaddl
jo
subl
aam
jb
fiaddl
js
lret
int3
cmpsb
shl
in
mov
xchg
fdiv
cmp
mov
imul
mov
push
aaa
imul
and
push
adc
jno
dec
mov
push
jno
sti
rclb
push
inc
repz
cmp
mov
arpl
mov
mov
ds
push
ret
lea
ret
rolb
dec
cli
test
pushf
cmp
aam
pop
cs
stos
lcall
sbb
loope
pushf
xor
or
das
or
adc
inc
idivl
mov
popa
in
mov
push
mov
orl
cmp
repnz
mov
push
xor
sbb
enter
ljmp
push
jle
lods
sub
sbbb
sbb
sub
push
lret
cmpsb
push
adc
add
adc
jle
add
pop
test
hlt
jb
sub
repz
sbb
in
mov
sub
sub
mov
cmpsl
loopne
fsubl
hlt
out
jbe
cmp
cmp
xor
sbb
add
mov
dec
ret
into
sbb
dec
mov
dec
mov
jl
cmp
js
bnd
sbb
out
mov
jp
pop
cs
aaa
adc
sub
inc
stc
and
xchg
xlat
ret
jmp
xlat
push
adc
or
icebp
adc
push
push
mov
fldcw
stc
sub
dec
jl
pop
sarb
sub
sub
in
imul
and
dec
push
mov
mov
pop
push
test
hlt
lcall
fmul
daa
push
sbb
xchg
xchg
aaa
xchg
mov
cmp
test
sar
push
mov
sbb
les
push
test
and
mov
mov
cld
rep
push
xchg
imul
pshufw
repz
mov
jbe
popa
es
je
jmp
addr16
mov
inc
jbe
or
push
das
inc
out
cmp
lods
pop
mov
fs
mov
icebp
pop
shrb
les
lret
les
jge
icebp
mov
rolb
xlat
inc
out
imul
hlt
mov
pop
jb
mov
fwait
sbb
aaa
mov
inc
sbbb
orl
ficompl
mov
xor
ljmp
addr16
fiaddl
mov
hlt
xchg
mov
out
push
scas
dec
push
inc
jecxz
mov
mov
les
fwait
into
jnp
vpunpckhqdq
rorb
or
xchg
cs
jo
adc
pop
sbb
cmp
cld
pop
jp
std
or
lock
and
out
cld
jmp
loope
clc
xchg
mov
xchg
sahf
subl
dec
ret
fwait
dec
cmp
mov
mov
cmp
insb
scas
fsts
test
push
adc
xlat
clc
popf
lea
mov
stos
negb
imul
inc
aas
imul
mov
andl
cmpsl
sub
or
std
push
xchg
js
add
test
into
inc
cmp
in
mov
outsb
ss
in
or
pushf
movsb
xor
es
cmp
cmpsl
rcrb
mov
and
mov
add
sub
cmc
sbbl
add
out
pushf
stos
lods
pop
xchg
clc
pop
or
cmpsb
aad
push
movsl
int
fsub
ficoms
loope
jecxz
nop
ja
add
mov
ror
mov
ds
xor
push
xor
push
ret
xor
mov
pop
sahf
mov
and
xchg
aas
mov
cmp
push
push
xchg
mov
clc
mov
into
rolb
jge
andb
mov
scas
push
xchg
mov
lods
jle
dec
cwtl
or
push
iret
pop
insl
mov
idivl
pop
and
lcall
fdivl
lds
jmp
sub
mov
cli
iret
shlb
mov
cbtw
dec
rcll
jg
sub
out
mov
mov
call
dec
imul
cmp
mov
cmpsb
hlt
data16
andb
imul
or
lds
movsl
jmp
inc
out
jg
test
mov
or
incl
or
cmp
ret
push
push
loop
inc
iret
lods
xchg
add
pop
pop
adc
push
mov
push
int
mov
or
sub
cmp
idiv
daa
and
mov
pop
mov
iret
push
vpshufhw
and
imul
inc
xor
das
push
xor
inc
or
mov
out
popf
xor
sbb
ret
jl
cmp
adc
pop
ret
ja
mov
es
std
fwait
test
add
xchg
xchg
sub
fildl
movsb
sbbb
cmpsb
pushf
fwait
sub
imul
adc
inc
xlat
xlat
sub
hlt
dec
ret
inc
test
lcall
rcrl
imul
jns
cs
xchg
arpl
lods
xor
fiadds
push
aad
mov
mov
sbb
xchg
mov
stos
sbb
out
cmc
shr
dec
mov
stc
cmpsb
xchg
push
dec
bound
xor
mov
mov
sti
and
jecxz
in
inc
inc
scas
jno
cmpsb
or
loop
push
pop
mov
mov
aas
stos
ljmp
push
mov
test
gs
cmp
leave
ret
dec
mov
sarl
in
pop
cmp
push
shrl
cmpsl
insb
repz
je
rorb
daa
testb
std
int
inc
neg
xchg
cmp
jg
jb
jae
pop
mov
mov
call
std
push
lret
mov
fs
mov
sbbl
rcrl
andb
xlat
test
add
xchg
mov
inc
push
or
je
jl
pop
sub
cwtl
inc
adc
xchg
sahf
lea
sub
pop
js
mov
sub
mov
mov
rclb
das
jns
push
jecxz
cmpsb
sub
setnp
push
or
adc
mov
cmpb
hlt
mov
ja
ret
ret
add
clc
int
sbb
cld
mov
mov
imull
das
sbb
mov
mov
push
bound
add
sub
mov
fidivl
or
js
sbb
call
outsb
rcrb
mov
dec
pop
cmpsl
in
dec
sti
push
push
adc
aas
mov
push
fidivs
mov
orb
sub
dec
cltd
inc
mov
je
xchg
xchg
push
adc
cmp
mov
add
fcmovnu
test
loope
xchg
sti
sarb
mov
arpl
xbegin
daa
lods
and
inc
outsb
scas
pop
pop
jns
gs
jo
ljmp
leave
or
cmp
mov
fadds
xchg
loopne
cmpsl
jg
sbb
rep
jno
dec
pop
scas
leave
add
cmp
jne
inc
repnz
data16
sarb
addr16
out
mov
sub
notb
or
das
push
dec
xor
pop
xor
aad
sbb
xchg
insl
xchg
jno
and
xlat
nop
sti
aaa
add
out
jno
out
mov
sbb
add
sub
pop
lds
push
adc
mov
mov
dec
inc
xchg
mov
inc
loope
xlat
add
test
and
js
push
sub
stc
movsl
in
inc
push
push
push
call
mov
adc
inc
push
mov
adc
in
mov
lods
jns
test
std
xor
or
leave
push
xor
jl
cwtl
aam
dec
mov
in
adc
nop
jo
mov
adc
fdivs
and
fisttpll
loope
out
inc
pop
stos
sub
jne
jle
and
mov
ret
xor
fsubl
cmc
roll
xlat
scas
sub
xchg
mov
icebp
sub
sub
cmp
mov
mov
or
dec
lds
cmpsl
popf
fwait
mov
pop
stos
pop
mov
out
outsb
cltd
or
and
cltd
aaa
insl
je
xor
inc
in
call
out
push
pop
mov
jge
mov
mov
inc
pop
jge
inc
pushf
push
test
test
jp
xchg
ret
mov
mul
cmpsb
pop
jb
adc
sub
mov
jo
std
leave
popf
inc
scas
ljmp
stc
sub
repnz
int
mov
pushw
push
pushl
in
jmp
scas
stc
stc
jmp
dec
adc
aad
jo
out
pop
jl
mov
push
push
ficomps
push
xlat
ja
add
addps
pop
cltd
dec
in
mov
jbe
cmp
sbb
arpl
and
loop
sbb
add
imul
mov
rcll
adc
rcrl
cmpsb
push
aam
mov
fnsave
insl
dec
mov
xor
or
lods
subl
xor
or
sub
bound
idiv
rcrb
in
enter
adc
push
pusha
push
sarl
mov
je
ljmp
fidivrl
addb
call
cmp
shlb
scas
fbstp
push
mov
mov
add
aas
jge
mov
das
mov
xor
dec
cltd
in
sbb
sti
icebp
in
push
ret
loop
mov
ds
movsb
dec
jle
daa
std
int3
in
add
insl
fyl2x
cmp
int
xchg
cmp
mov
cmp
ret
fmulp
dec
sub
fnclex
sbb
das
xchg
loope
mov
jecxz
ret
sub
xchg
sub
dec
std
inc
jae
mov
insl
imul
adc
and
push
stos
pop
inc
mov
sub
mov
mov
cmp
stos
in
lea
pusha
xchg
fnsave
shll
sub
pusha
pop
pusha
addr16
out
push
imul
hlt
cmpl
outsb
pop
cmpsl
ficomps
test
adc
rolb
dec
jne
cmp
sbb
xchg
xor
pushf
xor
add
mov
jne
mov
stos
popf
jb
mov
sbbb
lret
push
jae
ss
xor
sub
or
scas
ljmp
add
stos
mov
xchg
addr16
mov
gs
jnp
test
push
dec
cmpsl
negl
out
pop
es
cld
cmpsl
int3
or
fbld
cli
fcomp
pop
nop
imul
arpl
fwait
adc
or
mov
sub
xor
push
mov
das
pop
ret
mov
lds
in
mov
mov
in
pop
inc
mov
jl
addr16
jbe
push
jl
in
push
mov
push
das
shl
mov
add
dec
push
loope
mov
loope,pn
cmpsb
pusha
push
orb
sub
mov
push
inc
mov
sbb
out
fwait
aam
jle
xor
xchg
scas
mov
inc
pop
jmp
mov
lcall
dec
or
pop
add
mov
fdivrs
adc
cld
jge
sar
lret
pop
pop
das
pop
mov
ret
push
pop
movsl
jecxz
fcomi
test
js
sub
fnstenv
filds
pop
push
cmpsl
xchg
lea
into
out
jbe
lods
or
mov
int
cmp
movsl
les
nop
movzbl
mov
in
mov
ja
fwait
arpl
scas
push
cld
aaa
outsb
mov
jns
pusha
iret
mov
jecxz
repnz
xor
sbb
test
push
and
jns,pt
or
outsl
ljmp
mov
add
xlat
fmuls
sub
dec
gs
mov
sbb
sub
adc
mov
clc
test
ret
pop
icebp
dec
rcll
inc
sub
ret
jns
test
ja
sub
out
call
insl
aad
in
int3
and
in
mov
adc
loope
and
xor
mov
aam
jg
xlat
inc
movb
mov
lret
dec
push
and
dec
adc
fdivl
pop
jae
cs
push
cmp
mov
mov
ss
add
or
lcall
xchg
or
adc
movb
jg
nop
push
movsl
out
cmp
std
dec
or
out
out
or
aam
fucomi
add
cmp
popa
mov
imul
into
jmp
mov
data16
add
sub
mov
pop
mov
roll
notl
cmp
dec
out
dec
xchg
jae
push
xor
sbb
sub
movsb
dec
adc
and
loop
sbb
mov
push
lret
xlat
enter
aam
push
fistpll
in
dec
xchg
nop
jge
mov
xchg
scas
dec
or
mov
lret
adc
pop
rorl
or
add
int
lcall
push
pop
imul
dec
dec
gs
mov
dec
jge
nop
das
outsl
add
aam
jne
dec
stc
rcrb
mov
jp
leave
jnp
push
divb
cmpl
out
out
dec
ror
rorl
sub
in
lret
dec
es
scas
rcll
lahf
xor
pop
adc
into
sub
mulb
stos
pop
jb
xlat
xor
ja
testb
stc
pop
pop
sbb
pop
ret
mov
bound
in
cmp
repnz
repz
mov
xlat
lea
inc
aam
xchg
xchg
fisubs
pop
sbb
cmp
sub
ret
adc
fidivs
add
and
mov
or
cmpsl
add
sbb
test
xchg
shll
sub
sahf
adc
xchg
mov
mov
xchg
mov
jmp
dec
mov
mov
jns
push
pop
jns
bound
add
lret
in
das
or
pop
mov
out
loop
sarl
pop
aad
sbb
shlb
pushf
rcl
adc
push
ljmp
pop
jmp
xor
jo
imul
cmp
daa
adc
cli
cs
das
fwait
adc
in
sub
mov
mov
popf
pop
push
or
imul
ljmp
jbe
sarb
inc
mov
sub
dec
adc
cmp
inc
add
push
test
mov
or
and
frstor
dec
xchg
xor
imul
xor
lahf
adcl
add
cmp
adc
movsl
hlt
negl
adc
xor
xchg
out
push
arpl
popa
arpl
mov
sbb
jo
sub
dec
movl
cmpsb
mov
inc
pusha
leave
xchg
divl
in
repnz
lods
lcall
mov
mov
in
lret
push
xchg
mov
xchg
hlt
mov
xor
inc
xchg
adc
mov
lds
lock
push
mov
xorl
fmul
sub
mov
cmpsl
call
mov
mov
xor
mov
enter
fwait
imul
shrl
jae
ss
pop
sub
outsl
call
imul
cld
insb
jle
sbb
nop
pop
push
jge
cwtl
ret
xchg
pop
mov
xlat
push
dec
fistl
jb
inc
jl
push
push
jbe
dec
cmpsl
movsb
ja
mov
xchg
inc
mov
sahf
movb
lods
adcb
jl
sbb
pop
mov
push
repz
pop
pop
subl
xchg
sbb
cmp
mov
xor
leave
inc
push
xor
cmp
data16
ljmp
push
mov
cmpsb
lods
clc
inc
ret
jno
adc
popf
nop
inc
push
push
dec
jne
push
inc
jae
sub
aam
jge
aaa
ds
jne
mov
je
xchg
cli
mov
xchg
jge
pushf
jb
jp
lea
sbb
mov
push
iret
xchg
nop
int
and
pop
ss
test
mov
jo
mov
mov
js
test
pop
jl
je
push
test
leave
inc
pushf
call
adc
lcall
sbb
dec
pushf
insb
enter
sbb
add
leave
sbb
mov
ja
adc
xchg
mov
arpl
push
lret
jae
jb
dec
fsts
mov
adc
mov
sub
mov
mov
xchg
sbb
xchg
xor
addr16
mov
xchg
sub
insb
push
clc
aam
mov
or
sbb
adc
push
in
negl
movsl
or
fdiv
add
dec
jle
jbe
aaa
jb
sahf
xchg
pop
mov
popl
inc
ret
je
jns
lods
ret
sub
fnstcw
movsb
push
mov
in
repz
jb
push
das
dec
ja
out
adc
push
fmul
sub
sub
cmp
adc
sub
cmp
aam
or
or
loopne
scas
ret
sbb
pop
push
xchg
dec
popf
out
or
mov
dec
pop
push
push
or
push
jae
add
adc
mov
xchg
dec
orl
mov
orb
test
dec
mov
mov
int3
nop
cwtl
sub
adc
ret
mov
jne
les
xchg
pop
lret
lea
ljmp
lods
sbb
jg
das
adc
iret
out
pop
fwait
xchg
pusha
stc
mov
cmp
in
push
jp
mov
dec
push
imul
pop
gs
fst
cli
push
sub
pop
pop
cmpsl
jl
bound
in
add
lret
xchg
nop
push
outsl
dec
mov
mov
into
xchg
lret
cmpsb
movsb
mov
or
push
sbb
inc
hlt
ja
fbstp
rcrb
mov
scas
in
rclb
js
dec
xchg
push
dec
mov
test
mov
lea
mov
out
adc
testl
pop
or
cmpsl
adc
ljmp
les
cmp
push
out
ja
jge
xchg
cwtl
leave
pushl
inc
rcll
xchg
outsb
lea
mov
loope
stos
icebp
repz
sbb
pushf
mov
in
lea
mov
xchg
fsubrs
shlb
sbb
mov
es
pop
pushf
ja
sbb
sub
and
mov
cmpsb
out
ret
lea
sbb
ljmp
xor
cli
mov
in
mov
cltd
ja
push
mov
xchg
dec
aam
mov
or
enter
in
mov
push
stos
js
xor
stc
jecxz
dec
not
push
test
sub
out
movsb
pop
fisubs
dec
hlt
sbb
data16
rolb
jmp
into
add
sarb
daa
push
sar
mov
push
movsb
cs
sbb
add
and
mov
call
movl
xchg
dec
ljmp
stos
jae
pop
dec
push
dec
xchg
push
fisubl
aaa
mov
add
push
push
push
into
jo
mov
popa
fsubrl
add
imul
cwtl
cmp
xchg
jge
dec
fsubs
xchg
insb
nop
aaa
inc
bt
mov
pop
xchg
outsb
add
lds
mov
rcr
nop
xchg
mov
int3
jmp
xchg
mov
jae
sbb
xchg
push
sahf
sub
loope
leave
mov
iret
fldt
insb
xchg
xor
insl
seto
lock
push
sbb
sub
aas
cmpsb
xchg
dec
fucomip
mov
mov
push
adc
negl
negb
stos
es
pop
lods
shr
pushf
call
xchg
les
out
pushf
mov
push
lcall
mov
fadds
out
ja
data16
inc
inc
addr16
mov
mov
rorb
mov
jnp
cmpsb
pop
icebp
roll
xorl
inc
add
rcrb
fists
inc
push
xchg
je
divl
lds
adc
enter
add
and
dec
iret
mov
jmp
cmpsl
cmp
mov
jb
data16
sbbb
insl
jg
adc
mov
scas
ds
xor
movsl
jg
xchg
les
dec
adc
sahf
scas
lock
push
test
push
push
ret
push
lret
push
jo
out
add
xchg
ret
jbe
cmp
and
lods
push
mov
inc
mov
lods
jle
add
push
sahf
xor
pop
sub
cltd
movsb
pop
xor
outsb
test
in
pop
shrb
into
daa
icebp
cmp
adc
jle
pusha
lods
push
push
ss
popa
lret
mov
lret
adc
hlt
ret
loopne
mov
cmp
xor
mov
or
mov
mov
lods
push
xchg
pusha
ret
xchg
aaa
bound
inc
xchg
in
hlt
out
rolb
dec
out
mov
and
mov
mov
shr
pop
lds
dec
scas
mov
je
sub
jae
inc
ljmp
jmp
add
sahf
lret
or
idivl
int3
inc
movsb
jae
outsb
mov
mov
mov
daa
dec
mov
lea
sar
push
arpl
jl
mov
notl
es
pop
and
mov
or
sub
xchg
test
or
shr
enter
push
cmp
xchg
pop
push
cltd
out
fidivl
mov
sbb
loopne
fldl
lods
xor
cmpsl
test
imul
cld
in
ret
rclb
fsubs
xchg
scas
push
imul
in
cmp
roll
lods
adc
sub
and
dec
rorb
mov
xchg
outsl
sub
push
xchg
jo
in
cmpsl
xlat
or
xchg
sti
xchg
ret
mov
push
insb
arpl
inc
xchg
sti
lods
and
ret
cli
je
stos
dec
mov
lods
addr16
add
orb
and
inc
mov
pop
lret
imul
fwait
insb
pop
js
mov
scas
mov
jmp
cmp
dec
pop
idiv
jecxz
push
and
jne
jnp
js
push
jg
and
cmp
fsubrl
or
insb
sbb
cmp
mov
roll
inc
dec
cwtl
imul
lods
jl
add
pop
in
or
jns
inc
mov
add
aam
into
dec
clc
test
xchg
mov
fs
jno
sub
out
cmp
jbe
outsl
call
fistpll
adc
dec
lret
adc
jmp
or
test
test
lcall
jns
loope
movsl
pop
adc
mov
ss
xchg
pop
inc
fbld
jb
bound
loop
sub
or
jmp
dec
mov
and
jmp
ljmp
cmp
sbb
xchg
mov
xchg
cmp
scas
xor
and
mov
cmpsl
pushf
or
lods
movsb
cmpsl
out
adc
repz
cmpsl
sub
and
or
pop
mov
mov
pop
scas
lock
lret
mov
inc
rolb
mov
push
mov
sub
in
test
out
in
jne
dec
imul
mov
pusha
fidivrs
subb
xchg
jl
fs
popl
inc
jnp
xchg
js
mov
mov
sbb
sub
scas
popa
shlb
cmpsb
dec
mov
lret
das
push
jmp
push
aas
adc
dec
popf
add
outsb
fists
xor
mov
icebp
aas
out
test
xchg
shl
and
shrb
bound
pusha
sbb
cmp
pop
xor
pop
rcll
sbb
xchg
sti
into
popl
adc
ror
gs
out
lcall
mov
inc
aaa
out
mov
jg
sbb
jge
rcrb
repz
jge
or
call
pop
fwait
lods
sub
iret
jg
xchg
testb
jnp
movsl
in
outsl
or
jae
cmpsl
setge
inc
cmp
dec
test
and
push
shrb
dec
add
dec
icebp
js
sub
xor
push
ficompl
arpl
outsl
movsb
out
mov
inc
cmp
mov
cmp
bound
push
outsb
popf
jmp
aad
adc
pop
les
cwtl
mov
adcb
mov
in
into
adc
xor
stos
xchg
andl
lea
push
test
jp
xor
push
out
sbb
test
lahf
dec
in
pop
fbstp
or
jae
shlb
daa
jbe
sbb
pop
xchg
dec
sub
roll
insb
jecxz
addr16
stos
lcall
mov
movsb
xchg
outsb
test
xchg
sbb
jno
xchg
or
repz
lahf
pop
js
pop
fldl
jge
fcoml
or
xchg
lods
sti
mov
jbe
popf
or
push
pop
hlt
xlat
sbb
loope
mov
in
test
or
sbb
ret
stos
xor
mov
je
ljmp
push
mov
xchg
jge
gs
and
test
and
in
cmpsl
and
int
add
lds
adc
jg
inc
cmp
xor
dec
mov
loopne
mov
add
and
pop
jecxz
push
add
pop
xlat
or
push
inc
sub
insb
and
out
sub
repz
or
jb
jnp
cmp
xchg
push
adc
mov
cmpb
jo
push
stos
push
cltd
sbb
sub
pop
orl
mov
jns
adc
jns
fidivl
fdivl
loope
test
inc
lds
and
fs
iret
jmp
and
das
testb
push
rcrl
enter
imul
fs
insl
mov
xchg
stos
xchg
mov
fs
cmc
ret
or
outsl
ja
mov
push
test
xchg
gs
repnz
mov
rcrb
repnz
in
mov
push
push
divb
out
packssdw
sti
ret
push
cmp
cld
cmp
inc
ljmp
cltd
shll
xchg
jnp
dec
pop
mov
or
mov
cli
sti
sub
filds
xchg
push
mov
mov
loop
push
dec
call
adc
out
mov
sub
das
jl
mov
or
xchg
lea
lret
mov
sub
mov
ljmp
or
adc
push
lds
jg
ret
addl
js
xchg
das
adc
dec
mov
loopne
dec
negl
outsl
jo
out
pusha
push
mov
push
lea
sub
mov
fidivl
scas
mov
jp
data16
int3
push
mov
pushf
gs
add
add
jecxz
ja
push
pop
imul
insl
cmp
mov
sarl
out
add
and
adc
dec
pop
push
xor
iret
divl
in
divb
loope
fwait
call
mov
insl
sbb
pop
clc
into
xor
or
scas
iret
out
repz
popa
popl
sbb
jp
xor
insb
ss
fmull
into
dec
pop
pop
ja
fstps
or
pop
mov
sbb
aaa
iret
jnp
loopne
inc
leave
dec
push
div
cmp
out
test
loop
sbb
lahf
bound
dec
insl
inc
das
fbld
stc
dec
arpl
mov
fs
add
test
cmp
cmp
inc
movsb
mov
scas
out
fisubs
adc
lds
repz
data16
mov
cmc
cmc
dec
mov
lret
cmp
mov
arpl
push
mov
call
push
repnz
push
stos
loop
scas
add
aam
xchg
inc
dec
add
bound
push
push
lods
push
lret
lret
enter
lock
imulb
cwtl
movzbl
cmpl
mov
mov
scas
jp
sti
iret
stos
push
xor
adc
test
daa
push
sbb
dec
xchg
repnz
shll
mov
aaa
pop
and
aaa
imul
push
aam
test
xlat
adc
shlb
jg
mov
out
or
xchg
rorb
aas
nop
lods
xchg
aam
into
addr16
sahf
dec
mov
cmp
stc
stos
pop
pop
cltd
outsl
pop
pop
pushf
bound
lods
or
sub
jle
xchg
push
sbb
adc
mov
xor
lahf
iret
data16
push
mov
push
xchg
xchg
jae
out
dec
xchg
cmpsl
dec
inc
sbb
cmp
loop
add
sbbb
adc
jae
jnp
fildll
or
pop
arpl
cmp
pop
sub
in
fld
sbb
cmp
ljmp
xor
dec
jae
xchg
jo
sahf
push
out
adc
mov
or
mov
lds
andl
sub
mov
mov
jae
gs
pop
rorl
cmp
icebp
sti
call
aam
les
shrb
ret
shll
and
loope
sub
shll
jmp
and
mov
rcl
leave
mov
jo
push
dec
testb
add
bound
inc
aad
sbb
xor
stc
inc
and
adc
scas
out
sarb
rcl
add
into
xor
jo
xchg
test
pop
std
mov
pop
jnp
mov
imul
in
adc
fdivl
aam
fldcw
dec
cmp
lret
jns
push
mov
fisubl
push
nop
xchg
ja
lods
outsb
mov
test
cmpsb
jbe
mov
mov
pop
mov
dec
repz
insl
mov
lret
or
or
push
sbb
adc
testl
and
into
jnp
cwtl
inc
lret
mov
jecxz
or
dec
mov
scas
push
call
sub
fcomip
sub
or
sub
mov
rclb
sub
test
xchg
lahf
lret
cmp
dec
pop
jl
jb
loope
jl
dec
loop
dec
pushf
adc
or
shll
pop
adc
mov
scas
in
fwait
fwait
dec
and
loop
xchg
dec
incl
cmp
aas
pop
ret
xchg
fldcw
ja
ror
les
push
fs
adc
jne
icebp
push
cmp
popa
jecxz
cmp
outsl
mov
out
fadds
sbb
das
lods
inc
lcall
add
mov
add
mov
outsl
xchg
jae
test
andl
or
dec
aaa
int
sub
lods
push
lret
mov
sbb
push
fdivl
and
pop
addr16
inc
xor
fistpl
out
scas
mov
inc
xlat
mull
and
sbb
repnz
cmpsl
and
loope
mov
ljmp
inc
mov
mov
insb
xchg
js
and
xchg
mov
sbb
mov
mov
call
and
xor
cmp
mov
sbb
pop
xchg
repnz
and
sbb
dec
iret
pop
push
pop
xchg
idivl
push
mov
adcl
mov
das
loope
ficoms
pop
and
ret
test
or
in
or
in
les
add
iret
sbb
jg
cmpsl
imul
inc
push
cmpsb
jmp
inc
into
lods
push
xor
push
addr16
sub
cmpsb
dec
arpl
add
and
arpl
shrb
mov
cmpsl
orb
adcl
mov
mov
xor
push
push
push
push
xchg
jne
sbb
push
cli
mov
mov
ljmp
lret
fisubs
cmp
push
xchg
mov
into
test
add
movsl
adc
inc
mov
inc
or
test
xor
or
push
jmp
movsb
cmp
ror
leave
clc
jl
inc
call
in
aam
jns
adc
jae
clc
cmp
test
test
or
mov
shll
stos
int3
or
sub
cld
mov
pop
pop
sub
xchg
lock
in
or
inc
push
mov
cli
inc
inc
into
sahf
arpl
mov
cmp
adc
jbe
push
ror
call
xchg
xchg
or
pop
xor
jbe
fs
push
lcall
add
adcb
sub
sbb
xchg
cmpsl
pop
cmp
cmp
cltd
es
imul
cld
icebp
dec
repnz
adc
push
sbb
cwtl
ss
dec
dec
mov
shl
pop
loop
data16
sub
aad
imul
notl
inc
lock
xlat
test
and
mov
out
popf
rcll
sub
mov
push
add
and
icebp
add
in
shlb
clc
inc
lcall
sbb
jae
jnp
push
enter
jecxz
mov
lds
mov
rorl
mov
fdivr
xchg
lock
push
rorl
pop
sub
fcom
mov
sahf
xchg
incl
jp
xor
stos
test
ret
inc
push
lret
loope
xchg
and
call
ret
movsl
stos
loop
jecxz
or
rcrl
lret
and
jo
jb
ror
push
notl
fistl
adc
stc
inc
rcll
int3
popf
outsl
mov
ljmp
mov
push
cmc
push
mulb
aaa
iret
mov
sti
pusha
jnp
addr16
pushf
xor
into
mov
xchg
lcall
repnz
jl
cmp
mov
mov
shll
pop
xchg
cmp
xlat
push
sahf
xor
mov
mov
xor
lock
mov
aad
or
dec
mov
ljmp
adc
adc
xor
decb
cs
inc
push
pusha
mov
xchg
push
add
or
out
jnp
adc
inc
outsl
xchg
add
lcall
push
dec
xchg
push
jl
aaa
or
int
outsb
push
xor
cmp
leave
mov
cmp
and
andl
adc
jl
sti
cmpsl
add
sub
inc
hlt
adc
mov
shlb
cld
mov
pop
lcall
movsb
jbe
in
sbb
test
cmp
and
insb
jbe
mov
cld
dec
push
pop
push
fcomps
and
push
ror
cmp
xchg
sahf
xor
mov
into
xor
aas
sub
out
adc
sub
sbb
les
loopne
inc
sbb
inc
enter
mov
mov
mov
dec
push
and
adc
inc
in
jb
xor
adc
int
cmp
out
shrb
and
imul
or
roll
adc
ss
es
adc
aam
xor
xchg
pop
cmp
adc
add
push
aas
pop
adc
mov
loop
lret
sbbb
dec
insl
shlb
arpl
pop
xchg
test
mov
adcb
ljmp
test
ljmp
dec
mov
xchg
jp
in
mov
mov
clc
cmp
and
xchg
xchg
movsb
push
jmp
rep
aad
adc
xor
push
outsb
ret
mov
or
fmull
mov
movmskps
insb
jg
and
xchg
jne
push
add
mov
fcmovb
cmp
pusha
mov
pushf
xchg
sub
and
sub
cmc
aaa
mov
mov
pop
or
mov
inc
repnz
cmp
or
sbbb
mov
cmp
lahf
scas
mov
mov
or
adcb
insb
sbbb
aam
or
sub
push
mov
cltd
cmp
sti
aaa
jmp
pop
scas
rorl
and
jnp
aam
xchg
mov
sbb
push
mov
jb
imulb
adc
insl
int3
clc
stos
adc
lret
adc
test
cmp
cmp
jae
les
adc
xor
insb
inc
inc
mov
js
jns
dec
or
push
add
cmp
inc
dec
jo
and
inc
pop
bnd
xor
repnz
xor
ja
push
push
jno
jb
pop
ja
jp
dec
mov
pushl
pop
xchg
jecxz
imul
add
pop
pop
addr16
xchg
insb
ljmp
loopne
daa
lcall
mov
mov
cmpb
inc
cld
dec
adc
int
inc
loop
sub
inc
cmp
xchg
addr16
cs
dec
push
xlat
xchg
mov
pop
imul
xor
inc
or
arpl
imul
xor
xchg
pop
pop
xlat
sahf
fisttpll
mov
lret
cmpsb
push
xor
lds
xor
mov
lcall
adc
cli
negl
lea
ljmp
fdivrl
movsb
pop
insb
lcall
mov
aas
xor
lock
jns
ljmp
pop
or
sub
lods
ja
pop
pop
and
pop
scas
xchg
adc
mov
xchg
add
jbe
ret
jb
jl
ljmp
or
ss
jmp
stc
cmc
gs
mov
int
mov
std
mov
lea
scas
hlt
fadds
std
mov
sub
push
sbb
fldt
imul
mov
xchg
lock
jg
mov
in
out
or
xchg
test
mov
adc
lods
into
or
mov
jno
scas
or
or
outsl
les
inc
push
loop
jmp
aaa
sbb
adc
shlb
jae
imul
dec
xchg
pop
std
je
mov
pop
mov
xor
inc
rcrl
jae
xor
call
das
pop
imull
clc
adc
imul
dec
dec
add
mov
sub
pop
or
imul
xor
cmp
inc
add
pop
addb
inc
or
push
jbe
addr16
sar
insl
gs
mov
fldz
jle
scas
sub
mov
mov
jp
xchg
leave
ja
sbb
jg
scas
testl
ja
add
idivb
pushf
sbb
pop
scas
in
ret
jp
testb
lods
inc
jo
loop
and
imull
mov
xchg
xchg
cmpsb
loop
adc
fstl
jecxz
push
rcrl
pop
stos
fwait
or
into
arpl
sbb
in
fistl
pop
pop
pop
adc
jmp
add
cld
sub
das
mov
lret
test
sbb
dec
and
dec
cmpsl
and
dec
loop
sbb
push
gs
loopne
dec
xchg
cmp
xor
rolb
js
xor
mov
fdivl
cmpsl
pushf
cld
stos
popa
ss
fcmovu
push
movsl
inc
push
pushf
push
cmpsl
lods
adc
xlat
push
dec
sbb
xchg
inc
mov
imul
daa
mov
out
or
enter
pop
cli
sbbl
roll
adc
mov
out
pop
mov
jnp
in
shll
pop
push
pop
push
cmp
xchg
ja
mov
or
add
push
call
pop
fstps
dec
xchg
xchg
push
push
push
in
fimuls
and
fwait
cmpsl
cmc
sbb
and
and
xchg
dec
subl
pop
mov
mov
sub
insb
js
iret
test
enter
pop
push
xchg
inc
jecxz
popf
xor
or
jae
in
insl
hlt
cmp
lahf
jns
dec
insb
fisttps
ds
xchg
fcmovnu
pop
push
mov
call
pushf
hlt
add
push
mov
cmp
pop
xorb
sbb
mov
mov
loop
sbb
ljmp
inc
mov
ljmp
cmp
ljmp
fs
daa
pop
movl
jge
add
pop
xchg
add
gs
pushf
or
jns
loope
pop
lret
lahf
sub
jge
lock
aam
ljmp
or
mov
sbbb
mov
xchg
fs
xchg
fadds
jg
xchg
test
rolb
or
jp
inc
cs
insl
sub
push
loope
fsubs
cmp
cmp
testb
into
lods
mov
inc
mov
mov
xor
sub
adc
mov
loope
push
adcl
pop
test
out
iret
mov
mov
rolb
arpl
mov
sub
bound
xchg
les
cmp
pop
jno
cli
cmpb
incb
iret
sahf
xchg
popa
xchg
movsl
xchg
sub
jmp
mov
sbb
movsl
and
mov
addr16
inc
movsb
sbb
std
mov
jmp
nop
ss
xor
adcb
arpl
cmpsl
inc
mov
int
call
xor
mov
insb
push
movsb
mov
pop
push
and
add
xor
mov
fwait
out
subb
or
push
icebp
xchg
adc
mov
aaa
mov
pop
aaa
cld
adc
add
push
ds
cmpsb
add
imul
sarb
mov
dec
hlt
mov
aaa
jno
mov
shrl
enter
popf
xchg
jecxz
cld
add
iret
adc
push
in
repz
xlat
add
add
jne
cmc
fldt
xchg
sub
notl
mov
fidivrl
ja
in
mov
out
popa
mov
std
mov
das
loopne
test
jmp
movsb
jl
out
jmp
ja
push
xchg
ja
or
xlat
inc
mov
jno
sahf
subl
lret
pop
pushf
mov
xchg
xchg
imul
rcll
jo
add
in
sub
pop
and
push
rcrl
add
or
daa
push
mov
cmpsb
dec
inc
mov
mov
mov
xchg
xchg
cmpsb
ret
je
adc
arpl
sub
push
fs
test
push
mov
addl
and
pop
cltd
mov
inc
shll
lock
push
adc
daa
setbe
inc
sub
popa
sahf
cmp
repz
ja
repz
pushfw
pop
push
lods
faddl
mov
insb
in
test
imul
add
push
mov
ret
push
jge
inc
pop
jecxz
push
popf
arpl
movsb
sbb
adc
outsl
ret
pop
loope
call
loopne
xchg
scas
shlb
insl
cmp
sub
and
mov
loop
cmp
jo
packssdw
incl
xor
and
imul
lahf
inc
aas
movsb
or
lods
cmp
jecxz
sti
sbb
repnz
jge
push
inc
jle
insb
cmp
adc
mov
jae
scas
jle
jns
dec
mov
insl
sbb
pop
iret
cs
loop
lret
shr
lds
dec
cmpsb
and
push
push
inc
add
aam
scas
jp
inc
aam
arpl
sub
aaa
ja
imul
pop
mov
inc
mov
fscale
adc
xor
mov
xchg
inc
popa
cmc
push
push
and
subb
mov
jge
stc
imul
jl
mov
cmp
in
test
stos
cmpsb
and
icebp
sti
dec
insb
and
movsb
jae
out
mov
pop
inc
out
ds
adc
sub
enter
sarl
cmp
loopne
pop
xchg
call
dec
jmp
lret
inc
aam
mov
call
mov
cs
add
in
ret
jg
mov
pop
loop
pop
mov
in
xchg
clc
or
add
add
ja
inc
lods
into
testb
sub
inc
and
outsl
int3
mov
repnz
mov
outsb
mov
leave
out
into
mov
fwait
adc
es
cs
scas
je
add
push
addr16
je
xchg
xchg
scas
shr
pop
adc
dec
lods
mov
cmp
fstps
jbe
adc
fstl
adc
cli
mov
jnp
shll
nop
dec
and
mov
in
mov
mov
and
rorb
xor
mov
jns
shll
repz
jg
cld
jp
and
cmc
aas
xchg
jo
popf
mov
lock
inc
inc
fs
lea
and
into
stos
lcall
cmovbe
and
sub
pop
mov
inc
push
mov
or
xor
xor
in
sub
test
mov
push
and
jmp
xchg
xchg
inc
std
pop
sub
cmpsb
mov
int3
jo
fdivl
pop
inc
xchg
push
and
lahf
iret
and
loop
dec
lods
jnp
out
into
or
aam
mov
hlt
mov
or
cmp
call
jno
cmp
je
jecxz
ret
movl
inc
mov
inc
mov
xor
arpl
lea
ds
mov
mov
pushf
sub
aaa
jae
lret
stc
sbb
dec
xrelease
push
jmp
dec
sbb
jns
dec
mov
and
and
out
xchg
rcrb
out
lret
fistpl
call
mov
dec
add
ss
push
das
xor
push
and
or
icebp
sub
in
xor
pop
add
mov
mov
neg
add
sahf
sub
jnp
ret
outsb
pop
xchg
sub
jecxz
adc
sbb
cmpl
iret
xchg
std
add
mov
mov
loopne
pop
mov
adc
and
insl
out
jnp
mov
ja
mov
cmp
or
mov
ret
cmp
sub
shl
push
loope
jo
adc
ficomps
cli
in
dec
ja
es
and
insb
scas
lds
insb
aad
lret
and
shll
mov
in
sbb
fs
and
loop
cmpsl
aaa
mov
std
xor
mov
ret
packssdw
daa
rcrl
and
mov
pop
andl
repnz
sub
adc
or
outsl
ret
pop
add
push
or
jle
xor
pop
xchg
xchg
and
xchg
jne
shlb
orw
pop
sbb
push
cmpl
jg
popf
outsb
mov
or
jns
clc
or
mov
cmpsb
ds
push
mov
mov
repz
ficoml
insb
inc
dec
sbb
push
rorb
and
dec
pop
xor
push
pop
gs
xchg
or
cmp
repz
outsb
pop
jmp
popa
cs
xor
xor
mov
ljmp
cld
test
pop
mov
sub
xor
fs
into
mov
enter
sbb
shrl
jle
mov
jmp
mov
out
aaa
fiadds
fstl
bound
mov
bound
hlt
jbe
push
lock
push
pop
or
adc
inc
inc
jno
dec
test
dec
test
jns
ret
shl
sbb
mov
and
jbe
pop
rolb
pop
leave
mov
add
and
inc
lret
sahf
push
push
pop
xchg
in
jbe
insl
pusha
loope
aaa
loope
push
push
or
test
xorb
xor
or
xchg
popf
fsubrl
and
cwtl
dec
or
pusha
mov
in
cmp
xchg
dec
sbb
or
scas
test
pop
scas
or
jne
fidivrs
scas
fisttps
in
inc
cmpsb
xor
sbb
insl
add
inc
adc
jns
xor
inc
fwait
ljmp
bound
pusha
fimull
jo
cmpsb
sub
cmpsb
mov
push
cli
sbb
fbstp
ret
push
pop
scas
daa
call
dec
shlb
nop
xor
js
mov
mov
fs
add
jle
cltd
ljmp
push
inc
lret
push
jp
add
sub
jp
scas
or
adc
xchg
int
mov
xor
cld
xchg
mov
aam
hlt
adc
xchg
mov
mov
dec
lcall
fsubs
call
movsb
pop
sub
jge
popa
adcb
pop
mov
mov
inc
push
mov
cmpb
sbb
incl
and
mull
int3
jp
divb
sahf
les
std
loop
jmp
fwait
rclb
push
in
jno
dec
adc
stos
push
xchg
int
aam
jmp
or
lahf
jecxz
ret
lret
lcall
cltd
and
lock
sahf
jle
or
mov
mov
jle
lahf
data16
arpl
mov
dec
xchg
mov
lods
lret
or
sbbb
arpl
aaa
and
xlat
loop
adc
das
mov
fmuls
add
cs
and
ljmp
scas
xor
xchg
add
sub
lods
shl
sbb
inc
in
dec
mov
es
add
mov
xchg
scas
push
outsb
inc
cmp
out
pop
scas
ja
in
mov
dec
sti
out
dec
ljmp
dec
pop
aaa
mov
inc
rclb
fsub
push
pop
dec
add
int3
les
orb
je
data16
jno
shll
or
loopne
fidivs
mov
inc
shlb
xchg
add
lret
adc
cmp
push
int
leave
loope
push
cli
in
sbb
mov
fcmovu
and
mov
mov
je
sbb
pop
adc
and
iret
adc
std
xchg
movsb
sarl
mov
rorl
sahf
cmp
sub
push
jge
pop
sbb
sbb
leave
les
xor
arpl
data16
sbbl
ja
or
bound
fcmovbe
mov
lods
aad
jge
fwait
sahf
xlat
addr16
cmp
sub
imul
xchg
popa
fisttpl
jns
xchg
or
mov
in
sti
sub
inc
repnz
adcb
cmp
jae
inc
mov
clc
mov
xor
daa
cli
push
xor
mov
jp
mov
pushf
xor
xor
pop
in
int
or
mov
lods
add
jmp
sti
out
pop
notl
icebp
cs
mov
adc
insl
cltd
push
in
int3
dec
xor
into
add
jb
sub
insl
or
dec
ljmp
cs
push
hlt
lret
shlb
xor
push
addr16
imul
mov
fmull
movsb
adc
cmp
cmpsl
mov
inc
ja
inc
aam
dec
sbb
mov
xchg
leave
mov
cmp
gs
lret
ja
pop
lret
sbb
pop
or
fdivr
lahf
sahf
mov
and
adc
repnz
cmp
nop
mov
mov
or
jns
jg
lods
loope
push
or
insl
sbb
cmpsl
sub
pop
leave
or
lods
add
xchg
jl
xlat
clc
shl
les
in
push
or
push
jmp
push
mov
movsl
mov
dec
test
mov
pop
inc
dec
lods
jmp
std
dec
sub
sub
call
push
addb
daa
lret
jmp
inc
cmp
mov
inc
jno
adcl
mov
repnz
std
adc
mov
repnz
push
sbb
xchg
sbb
fisttpl
cmpsl
jbe
add
xchg
fdivl
das
in
bound
pop
in
ds
cmp
rcrb
sub
ret
dec
aam
test
adc
xchg
int
mov
pop
ljmp
xlat
cmp
arpl
dec
sbb
and
push
xchg
sbb
or
cmp
mov
ret
xor
jno
pop
inc
shr
loopne
dec
mov
outsl
das
inc
xor
xor
jge
imul
std
in
lret
sbb
enter
mov
mov
inc
divl
clc
pop
push
push
push
out
call
das
js
das
popa
int3
mov
setne
icebp
jae
ds
test
sub
and
pusha
mov
mov
dec
nop
dec
pushf
jmp
pop
or
pop
dec
sub
sub
and
call
rcl
gs
je
mov
inc
pushf
push
sbb
scas
das
aas
call
push
add
arpl
out
jge
vmovshdup
adc
dec
or
mov
test
mov
adc
xchg
in
push
cmpsb
hlt
pop
fs
mov
imul
jmp
addr16
jl,pt
inc
and
add
jns
push
ret
ljmp
lds
insl
mov
jle
push
mov
jl
mov
in
dec
push
push
push
icebp
xchg
add
sub
adc
or
lret
and
push
sub
test
loope
pop
fdivr
dec
sbb
repnz
cmpsl
neg
enter
jne
gs
loopne
das
sti
mov
out
fwait
pop
xchg
and
shl
or
sub
fwait
rcll
mov
mov
test
or
mov
lods
imul
mov
adc
mov
sub
jno
lret
rcl
lock
orb
jecxz
cmpsb
fidivrl
pushf
ja
inc
jb
push
test
jl
xchg
repz
pushaw
pushf
push
dec
in
dec
test
stos
push
out
rorb
adc
loope
xchg
nop
xchg
and
mov
lds
sbb
imul
leave
fstpt
mov
and
mov
xchg
adc
jmp
xchg
shrl
cs
pop
mov
mov
movl
sbb
push
or
and
fs
inc
hlt
sbb
lds
jae
aas
mov
insl
adc
mov
mov
aam
sahf
add
jbe
fwait
and
pop
mov
mov
cmp
and
xchg
lahf
xor
and
insl
mov
sub
jne
dec
sub
clc
and
push
mov
and
cli
bound
test
push
fnsave
jmp
fucomi
aas
xchg
cmp
pop
xchg
in
ror
jbe
sub
push
jns
mov
fcmovnb
popaw
lods
mov
daa
and
sub
fdiv
int
test
jnp
lret
sbb
imull
mov
scas
jge
lods
cmp
sbb
and
repnz
comiss
je
and
stos
popf
scas
xchg
dec
aad
adc
je
aaa
cli
loope
popl
pop
in
inc
nop
lods
pop
mov
sbb
mov
pop
lret
out
adc
and
mov
cmp
inc
mov
mov
cs
loop
xor
stc
xchg
daa
popa
jae
ja
pop
inc
dec
xor
shll
jge
mov
in
push
testb
dec
pusha
dec
mov
push
mov
data16
ficoml
rep
das
push
cs
add
ds
data16
test
out
pop
jg
pushf
ljmp
out
popa
xor
xchg
mov
out
mov
and
lret
sti
push
in
pop
stos
daa
add
add
test
fdivs
call
jg
popf
mov
xor
lret
push
inc
mov
outsb
push
adc
mov
into
ja
sub
sbb
and
or
xchg
sub
addr16
xor
daa
mov
xor
adc
xchg
mov
jle
push
in
sti
es
movsb
sbb
aad
dec
mov
xor
or
mov
pmulhuw
clc
data16
inc
cltd
sub
fwait
cs
jne
arpl
daa
jno
add
out
aad
push
imull
hlt
jbe
or
adcb
mov
mov
in
lock
push
push
jb
mov
pusha
dec
inc
test
mov
in
xor
jo
cmp
push
push
jg
mov
add
test
stos
inc
adc
pop
cmp
insl
lds
cmp
and
sbb
cmp
add
aam
cmp
mov
dec
mov
icebp
fidivl
inc
cmp
or
pop
cld
lds
or
into
out
pusha
add
push
enter
cli
pop
cmc
and
faddl
mov
sahf
ja
pop
sub
fisubs
pop
add
stos
psrad
push
sahf
sahf
mov
mov
adc
loop
in
xchg
les
nop
testb
shlb
push
sbb
fimuls
imul
mov
xor
sub
inc
aad
ret
xchg
lahf
mov
jne
out
pusha
andl
sub
mov
sbbb
jbe
sbb
xchg
push
nop
bnd
dec
icebp
mov
pusha
or
inc
testl
jae
decb
sbbl
or
adc
lcall
and
loope
shlb
dec
stos
dec
fs
leave
std
sbb
je
lock
es
outsb
orb
dec
shlb
shl
lods
xchg
orb
adc
jne
out
imul
dec
cs
xorb
test
aaa
adc
mov
jge
push
mov
xadd
sbb
inc
scas
xor
call
shlb
jmp
dec
es
rcr
dec
aaa
or
out
ljmp
stos
icebp
arpl
sbb
imul
je
fcomps
xchg
xor
cmp
imull
mov
mov
xlat
cmpsb
xlat
jge
and
stc
mov
inc
adcb
inc
cli
push
cmp
stos
pop
and
iret
stos
ficoms
stos
dec
sbb
fstpl
sub
enter
mull
jno
shr
testl
data16
fimuls
sub
inc
out
sub
call
loope
xchg
push
jo
mov
and
jo
pop
scas
or
inc
or
or
divl
imul
mov
push
inc
negb
adc
xor
imul
fxch
xchg
sub
nop
out
int
and
data16
push
fimull
pop
ljmp
mov
push
sbb
hlt
pusha
les
test
mov
mov
ret
mov
xor
nop
nop
push
mov
test
out
jne
and
xchg
cwtl
sbb
lock
adc
sar
dec
jbe
pop
or
mov
mov
fmull
adc
leave
mov
cwtl
rcr
data16
dec
pop
push
pop
pop
adc
test
xchg
or
and
inc
mov
ljmp
andb
rolb
out
jmp
cmp
mov
stos
cmp
frstor
xor
cli
in
sub
adc
ret
dec
dec
push
hlt
insb
outsl
lret
fs
sbb
stos
aad
jl
adc
sarb
pop
bound
cmp
adc
dec
xchg
inc
push
std
dec
pop
out
mov
fwait
shrl
xchg
push
dec
mov
jmp
out
pop
push
ret
aas
xor
push
data16
xchg
mov
je
jae
xchg
sub
push
adc
jne
push
aam
sub
inc
cmpsl
pop
mov
imul
or
ljmp
push
add
lods
stos
sbb
stc
jmp
fcoms
js
mov
jo
popa
clc
mov
or
add
mov
push
lret
mov
mov
push
jge
ret
jbe
and
inc
pop
push
sbb
stos
sbb
ret
adc
xchg
and
rcll
xchg
or
lahf
sub
dec
jnp
cmpsl
outsb
into
int3
out
cli
aad
add
lods
and
sti
adc
fiadds
fwait
cli
xor
adc
dec
push
cmc
leave
xchg
jno
xorl
push
mov
test
fadds
pop
test
sub
mov
out
mov
dec
xor
pop
sti
mov
imul
inc
mov
mov
fisubs
outsl
cmpsb
mov
push
pop
and
jbe
fstpt
sub
pop
xor
or
mov
fstpt
test
out
fstl
xor
rclb
add
mov
or
mov
ret
outsl
xchg
and
iret
or
das
aam
xchg
push
in
or
rorl
xchg
dec
add
lea
lods
in
orb
ljmp
inc
adc
lods
xchg
cmp
xchg
mov
cmp
add
mov
xchg
push
mov
mov
xchg
mov
adc
mov
or
cltd
mov
ret
adc
fptan
inc
push
loopne
inc
dec
in
fdivs
cltd
out
loope
pop
jp
sahf
mov
call
aas
push
inc
sbb
dec
jl
es
jmp
cli
pop
push
add
or
dec
lahf
test
test
push
mov
rorl
mov
and
mov
out
push
jp
push
pop
mov
push
push
iret
adc
dec
aam
sbb
cs
and
out
mov
bound
repz
push
inc
es
and
xchg
je
movsl
inc
cmp
popa
sbb
shrl
imulb
fadds
pop
in
dec
iret
sbbl
push
sti
out
stc
and
ficomps
sub
repnz
cmc
jno
pushl
sbb
bound
push
andl
lea
xlat
sub
mov
pop
gs
mov
xchg
mov
inc
lcall
mov
mov
shrl
fisubl
ljmp
inc
adc
jnp
test
push
pop
xorl
in
fwait
adc
sbbb
xchg
insl
cmc
xlat
arpl
xor
cmp
xchg
fdivl
pop
aam
into
out
mov
into
mov
into
lods
aas
fs
adc
shl
cmp
add
jo
ss
mov
mov
lret
xchg
das
cld
inc
sub
jno
xchg
and
lock
cmpsl
adc
cmp
jo
pop
jg
xchg
pusha
inc
push
mov
je
cwtl
es
xchg
into
sbb
cmp
fldenv
mov
frstor
mov
mov
repz
movl
mov
in
sub
lds
cmp
sbb
cld
in
mov
sbb
jecxz
ret
mov
nop
lods
fwait
jo
xchg
adc
xchg
xchg
pop
push
pop
adc
ret
les
fbld
pop
adc
or
clc
js
push
pusha
cwtl
xchg
cwtl
cwtl
pop
ja
pop
cmp
loope
or
cmpsb
inc
cmp
test
inc
jnp
test
incl
mov
dec
xchg
mov
add
xchg
aam
push
loop
ss
repnz
dec
int3
mov
bound
mov
jl
push
mov
jge
inc
stc
jg
lahf
xor
dec
movsl
nop
and
adc
push
adc
outsl
jbe
mov
mov
dec
rcrl
mov
add
dec
imul
nop
sub
pop
movsb
into
pop
idivl
jmp
das
sti
jnp
scas
mov
push
in
mov
dec
subl
pop
pusha
test
dec
lcall
jno
nop
lcall
xorb
inc
mov
aaa
mov
aam
and
js
pop
push
mov
xor
and
dec
sbb
je
idiv
nop
push
xchg
ret
mov
in
popf
push
jl
sahf
stos
push
ljmp
and
xor
lcall
call
std
jle
and
mov
cld
xor
jmp
fiaddl
outsl
iret
dec
cli
dec
inc
sarb
mov
xlat
xchg
mov
sbb
je
jne
loopne
mov
push
shrl
and
scas
mov
and
xor
xchg
dec
xchg
push
fdiv
jns
xchg
popf
repz
rclb
addr16
int3
sti
adc
fs
push
mov
or
inc
mov
imul
mov
jnp
pop
jmp
sub
sbb
inc
xor
in
lahf
add
sub
imul
sub
shlb
push
into
mov
push
jmp
outsl
scas
cmc
xor
insl
test
xchg
daa
sahf
or
bound
popl
icebp
lret
repz
pop
mov
fsubrl
mov
xchg
inc
cmp
cmp
push
xor
jl
jbe
and
adc
add
in
icebp
adc
adc
dec
pop
insl
adc
push
rolb
stc
iret
sub
es
aam
adc
jp
dec
int3
mov
mov
aaa
rcll
fcomps
test
mov
and
cmp
in
dec
sbb
loopne
imul
sar
inc
cltd
addr16
mov
sbb
repz
lret
push
pop
lcall
loop
test
mov
nop
mov
add
repz
add
arpl
test
out
icebp
mov
cmp
xlat
repnz
xchg
jbe
mov
in
in
cmc
mov
jle
or
pop
pop
sub
xchg
rcll
jnp
aaa
push
xchg
cmp
dec
cmp
pushf
hlt
call
add
or
lret
cmp
inc
push
pop
imul
xchg
push
jo
sbb
pusha
push
push
arpl
xchg
jmp
sti
jnp
sarb
cld
iret
les
ret
inc
ja
pop
and
and
and
xor
leave
xchg
jno
jns
inc
into
movsl
leave
xor
inc
push
scas
shll
xchg
enter
cmp
cmp
and
sbb
cmc
xlat
sub
mov
int
sbb
sbb
cmp
pop
push
into
stos
sbb
shrb
mov
sti
fwait
sub
aam
xchg
imul
sbb
sarb
sbb
dec
adc
sub
jnp
out
push
xor
jb
sbb
in
inc
insb
pop
sub
scas
movsb
bound
int
xor
mov
or
iret
gs
dec
sahf
pop
mov
cmpsl
push
lret
popa
mov
roll
inc
jecxz
bnd
pusha
sbb
mov
inc
dec
scas
lock
les
push
ds
bound
xchg
stos
mov
push
loopne
shrb
cwtl
mov
loope
test
mov
outsb
into
into
mov
jo
mov
ljmp
mov
push
push
inc
push
inc
iret
xlat
pop
stos
inc
dec
das
cmpsl
mov
nop
aaa
pop
enter
pop
pop
repnz
call
adc
push
sub
xor
adc
inc
jmp
mov
dec
bound
mov
mov
sub
sbb
in
loope
xlat
cmp
out
rclb
iret
movl
or
sub
adc
aas
adc
sub
hlt
outsl
push
mov
mov
insl
xchg
fnsave
iret
jecxz
sub
jl
mov
dec
push
mov
sub
mov
adc
xlat
hlt
mov
insb
repnz
or
cmp
sahf
clc
push
das
sti
std
cs
lahf
in
sub
lds
and
jle
imul
das
jbe
lret
out
fnsave
inc
pop
and
jecxz
sahf
sub
aas
scas
push
popa
sub
mov
jp
in
xchg
imul
jmp
repnz
inc
adc
sub
loope
jnp
nop
mov
cmp
or
sub
mov
add
cmp
jnp
icebp
mov
jmp
loop
mov
xchg
adc
and
fdivrs
inc
out
out
mov
movsl
sbb
mov
in
icebp
xchg
pop
ja
les
pop
xchg
lret
pop
lods
push
or
inc
mov
stc
test
sub
les
aad
push
loope
inc
outsl
sbb
popf
fsubs
jp
aas
insl
js
outsb
rcrb
iret
xchg
subl
push
sbb
xor
inc
daa
adc
sbb
push
test
adc
mov
int
xchg
xchg
mov
out
shll
fdiv
mov
xchg
jmp
lea
mov
jnp
sub
mov
scas
fwait
and
sbb
xor
fmuls
je
mov
in
add
pop
arpl
pop
cmp
mov
fsubrs
nop
dec
mov
xor
in
ret
or
xlat
rcll
push
shlb
popa
aad
push
cwtl
or
imul
push
lcall
adc
scas
mov
jns
cli
adc
jmp
xor
pop
push
sub
cli
add
scas
cmpsl
stos
movsb
dec
mov
dec
repz
jecxz
mov
mov
push
dec
sti
sbb
mov
push
xor
mov
pusha
xor
lods
mov
fcmovnb
jno
sbb
lds
pop
out
ret
mov
ret
mov
orb
out
sub
sub
out
inc
mov
into
lds
popa
bound
push
inc
xchg
mov
fidivs
push
fstl
pop
fsub
inc
or
dec
mov
mov
dec
inc
cmpb
icebp
in
or
test
cmp
cmp
jl
dec
sbb
push
je
or
mov
adc
push
ds
jmp
push
std
xor
push
dec
cmp
cld
repz
jmp
push
std
pop
xchg
and
or
insl
jp
pop
sub
cmp
fmul
movsl
test
add
and
sbb
pop
cs
je
aas
into
fnsave
inc
sbb
jmp
in
jecxz
lret
mov
out
xor
outsl
cmpsl
jge
jae
loopne
pop
in
jb
insb
add
out
or
xchg
xchg
jb
xor
aad
or
mov
sub
inc
add
pusha
xchg
jmp
jnp
jo
jl
pop
mov
jle
scas
loopne
pop
rcl
xchg
ret
testb
push
out
mov
stos
cli
sbb
xchg
bound
das
fidivrl
jge
cmp
xor
pop
jno
leave
mov
adc
jmp
or
lret
pop
mov
pop
add
addr16
adc
xchg
dec
add
lods
das
addr16
imul
les
jmp
xorl
mov
bound
in
pop
jb
mov
rclb
cmp
pusha
jp
jle
mov
mov
in
movsb
or
adc
arpl
adc
cmp
pop
jmp
cmp
fucom
das
ret
pop
pop
xchg
ret
add
aad
inc
mov
inc
iret
ss
movsl
mov
in
xchg
rolw
icebp
mov
mov
lds
push
cmc
xchg
pop
add
ret
and
mov
stos
mov
ret
sub
jae
mov
mov
pop
fcmove
in
cmp
xchg
xor
testb
ret
jno
sub
stc
aas
subb
pop
cli
es
fcompl
adc
and
je
xlat
js
scas
jmp
jnp
push
fcmovnu
lods
push
mov
test
repz
jge
adc
mov
sbb
xchg
aas
and
xchg
incl
and
dec
xor
sbb
cmp
addr16
xchg
inc
push
ds
dec
ret
cmp
dec
pusha
sbb
cmpsl
arpl
cmpsl
pusha
enter
test
loop
pmuludq
sub
adcb
repnz
cmp
aas
sub
in
adc
adc
mov
pusha
cs
push
call
in
pop
stos
mov
stos
dec
dec
mov
push
gs
push
fisubl
call
stos
or
xchg
dec
sbb
mov
loop,pn
insb
pop
or
sub
adc
cli
jo
pop
add
cs
repnz
xlat
loope
and
and
or
or
push
enter
cmp
rsqrtps
in
imul
in
pushf
lock
jge
movlps
int
data16
pop
sbbb
push
lret
lret
xlat
pop
dec
ret
xchg
stos
push
out
xchg
xchg
cmp
jnp
push
arpl
and
ret
in
cmp
fstl
shll
insl
imul
sqrtps
or
cld
std
sarl
or
aas
rorb
mov
xor
pop
jl
addl
jnp
mov
aaa
adc
jae
arpl
mov
movsl
shll
xor
imul
mov
inc
pop
ds
outsl
adc
fcompl
add
push
sub
adc
xchg
std
adcb
mov
xchg
or
bnd
mov
loop
sub
stc
cld
mov
inc
jbe
and
sub
shrl
push
mull
fs
and
cmp
sbbb
loop
xchg
aaa
cmpsl
sbb
jmp
inc
jnp
in
xor
clc
shl
mov
fcoml
pushf
insb
repz
rcl
aaa
jl
out
xchg
cmp
pop
hlt
add
ret
push
std
scas
cmpsb
add
sarb
shrl
ds
mov
clc
adcb
add
jbe
mov
xchg
bound
pop
dec
clc
sub
pop
mov
push
mov
mov
mov
out
mov
dec
fldenv
pushf
lcall
popf
or
mov
mov
xchg
or
stc
arpl
and
js
arpl
stc
orb
xlat
jg
jl
push
mov
sbb
movl
mov
incb
add
jbe
pop
jne
inc
sub
mov
dec
mov
push
inc
flds
notb
outsb
lahf
jl
es
adc
xchg
jno
lds
cwtl
gs
jo
and
je
sub
xor
pop
sbb
pop
movb
dec
in
sbb
cmp
pop
adc
dec
mov
cld
or
dec
fiadds
in
shlb
push
jb
mov
push
inc
mov
sahf
adc
push
cmp
dec
push
jecxz
cmp
mov
xchg
xor
mov
cli
jge
mov
adc
lods
mov
leave
hlt
xor
daa
jmp
leave
xchg
mov
dec
sti
int3
gs
cmp
scas
mov
jns
sahf
pop
sbb
fcmove
jb
movsl
test
loope
imul
xor
into
ljmp
in
dec
ljmp
xor
mov
testb
xchg
ret
aas
cltd
dec
mov
xlat
or
sub
jns
mov
addr16
loop
clc
cwtl
sub
sub
lods
das
mov
push
and
adc
jno
xor
jle
enter
cmp
sub
push
jp
ds
mulb
cltd
in
cwtl
lods
dec
out
push
les
mov
sub
leave
clc
sbb
mov
mul
jnp
wbinvd
jge
mov
jnp
in
cmp
add
dec
mov
cmpsb
aad
out
cmc
ror
mov
and
cld
or
inc
jne
sbb
inc
fisttpl
jns
in
add
pcmpgtd
fcoms
sbb
inc
out
lods
mov
ja
iret
call
inc
adc
xchg
cltd
adc
cli
jae
loope
jns
int3
pushf
out
jb
inc
mov
ds
push
rcrl
cmp
insb
xor
mov
adc
add
cmc
push
mov
jmp
push
cmp
ljmp
les
mov
lea
shrl
ss
xchg
sub
mov
leave
or
xchg
shll
dec
push
inc
fisubrl
pop
or
xor
xchg
test
dec
adc
or
shl
lods
jb
aaa
insb
inc
test
in
popa
inc
movsl
rolb
sahf
inc
pushf
cmc
mov
xchg
ret
ds
je
lods
lea
add
mov
push
inc
aaa
mov
xor
mov
mov
dec
sti
xlat
add
adc
sub
xchg
flds
fcomps
and
test
adc
popl
bnd
sbb
aas
mov
bound
xchg
lds
push
push
test
push
mov
int3
pop
loope
ret
insl
inc
and
test
cmpsl
pop
and
addr16
int
sub
out
jmp
notl
jne
dec
test
bound
cmp
rcr
movsl
fdivl
leave
icebp
xor
mov
jl
sbb
jg
cmp
scas
jne
push
mov
jecxz
aad
jg
jmp
aam
sub
cmp
mov
mov
cltd
dec
fcmovb
inc
xor
cmp
xor
out
inc
lds
sbb
je
into
jecxz
daa
jo
push
sub
pushf
mov
inc
rol
ljmp
inc
in
int3
cmpsb
in
iret
cltd
ret
cs
jo
jb
add
xor
inc
push
push
sbb
es
dec
lods
dec
pop
or
push
mov
xlat
jg
fimull
aaa
add
mov
xchg
xlat
push
mov
mov
mov
je
xor
ljmp
inc
and
pop
xor
xor
lahf
xchg
flds
rcrl
in
mov
aam
xchg
mov
rorb
dec
lds
jne
and
ret
cmpsl
loopne
lcall
push
lret
ret
movsb
jns
mov
sarl
xor
pop
mov
push
dec
dec
out
jge
jmp
push
mov
xor
test
div
popf
mov
xchg
pop
movb
pop
out
dec
lahf
sub
orb
and
ds
pop
into
sbb
adc
mov
div
ljmp
repz
iret
lcall
shl
adc
fwait
mov
stos
shll
ljmp
xlat
pop
ret
cwtl
or
pop
mov
jb
dec
add
or
lds
jg
stos
repnz
mov
sub
scas
or
in
dec
cli
xchg
pop
insl
ja
mov
mov
mov
nop
lods
rcrl
rolb
inc
or
leave
cmpsb
pop
mov
mov
ret
sub
and
das
cmp
add
dec
into
scas
push
shlb
xchg
inc
dec
sbb
pop
scas
enter
cmpsb
mov
outsb
ret
test
into
fmuls
push
push
aas
adc
dec
fwait
cmp
pop
mov
fs
or
mov
addb
jg
sbb
imul
mov
dec
push
mov
dec
addr16
dec
adcl
sbb
enter
les
rorb
sub
push
jmp
sbb
out
ret
lahf
xchg
bswap
mov
in
sarb
xor
call
int3
shlb
pusha
aad
and
rcrl
mov
out
inc
dec
pushf
imul
mov
in
aad
push
xchg
ja
jge
loopne
mov
pop
jae
call
sti
addr16
arpl
repz
pop
sbbb
popl
movsb
movsb
jg
jl
stos
and
adc
xlat
sbb
aam
xchg
sub
add
lea
adc
adc
inc
cld
adc
jo
sbb
jo
adc
out
sbb
stc
mov
imul
inc
mov
mov
mov
push
inc
cmp
cmp
pop
lods
jecxz
dec
scas
gs
sub
mov
mov
repz
jecxz
xchg
add
inc
outsl
repz
mov
pop
mov
nop
jl
fadd
mov
gs
fildll
jp
outsb
daa
or
ret
popf
movsl
and
cli
xchg
xor
lods
mov
mov
cmp
mov
mov
faddl
xchg
adc
fistpl
shr
jp
xlat
jge
xchg
lret
jno
dec
fcompl
int3
inc
or
aam
and
lds
outsb
loopne
fdivl
sbb
xor
loopne
jns
push
sbb
std
adc
inc
sbb
sub
pop
sbb
std
sbb
add
cmp
or
test
mov
leave
xchg
pop
inc
or
adc
arpl
push
mov
mov
lock
jb
std
stos
andb
lret
push
jp
lcall
jnp
rol
test
lcall
cmp
in
xchg
test
jg
push
sub
inc
lods
imul
cmp
rcrb
mov
xor
movsb
xchg
adc
rclb
mov
ss
push
movsl
cs
dec
adc
inc
push
js
xchg
inc
cmp
les
lea
test
inc
dec
sahf
jmp
inc
aad
bound
sub
filds
std
int
cmp
mov
jg
add
jns,pt
out
lods
push
in
fsubrl
push
mov
nop
gs
repz
add
or
fdivl
loop
in
pop
in
sbb
dec
aam
ret
outsl
push
daa
ud1
subb
es
mov
jp
aaa
stc
clc
mov
arpl
push
hlt
xchg
andb
in
xchg
leave
pop
gs
popa
loop
jns
or
xlat
xchg
inc
lock
xchg
pop
fcoml
xchg
aas
mov
mov
fistps
loope
stos
cmp
fstpl
mov
add
mov
sbb
and
add
daa
lahf
mov
cmp
notl
mov
xchg
mov
and
adc
rorl
notb
out
jbe
and
adc
add
pop
test
xchg
adc
fldenv
sub
fadds
mov
rorb
dec
pop
inc
push
add
jle
or
pop
shrl
or
outsl
fidivl
mov
push
das
es
or
je
js
pusha
in
jmp
imul
je
mov
ljmp
xlat
sti
mov
push
mov
xor
cwtl
xchg
insb
sahf
lock
sub
lods
adc
sub
jg
jle
inc
ja
decb
mov
xchg
into
pop
xor
sbb
loop
inc
mov
leave
and
cmpl
inc
jne
ret
negb
push
sahf
jle
adc
pop
aaa
mov
adcb
sbbl
xor
jl
xchg
add
inc
dec
push
rcr
inc
jge
or
push
jnp
pop
push
out
out
les
mov
add
push
mov
leave
mov
ja
movsl
cmp
sbbl
jbe
sub
aam
jnp
mov
sub
cmp
and
nop
addr16
or
cmp
push
jp
mov
mov
inc
xchg
cmp
inc
push
jle
rorl
ss
inc
mov
roll
clc
flds
or
pusha
sbb
stc
leave
sbb
in
sbb
mov
cwtl
inc
sub
and
sub
or
out
loope
xchg
ret
testb
push
sub
call
xor
jmp
mov
sub
sbb
adc
aaa
jbe
mov
xchg
ljmp
add
mov
shr
sbb
push
pop
sub
sarl
jae
ret
and
and
mov
gs
ds
mov
sbb
call
cld
jo
xchg
mov
pop
mov
mov
inc
push
sahf
inc
sub
and
rcll
stos
inc
adc
dec
adc
out
cmc
jbe
push
push
enter
iret
call
out
jnp
push
loop
or
cmp
fwait
andps
xor
loop
in
jecxz
sub
mov
notb
stos
ljmp
mov
jl
call
add
lret
jne
mov
xchg
repz
or
orb
pop
inc
adc
xchg
lods
ja
sbb
adc
jno
in
mov
or
movsb
out
jnp
xchg
or
adc
loopne
daa
mov
xchg
lea
scas
repz
mov
lahf
hlt
getsec
jno
or
jmp
out
call
out
inc
inc
mov
icebp
fdivl
cmpsl
jg
mov
addr16
fsubrl
sub
sbb
mov
stos
jmp
or
adc
divl
push
add
and
lea
push
mov
jmp
arpl
dec
mov
cs
push
sbb
pushf
mov
jp
sub
lock
stos
jmp
out
jbe
mov
arpl
test
cmpl
pop
pop
xlat
je
mov
mov
jbe
push
xchg
or
jg
repz
popf
mov
jecxz
inc
inc
mov
sub
xor
repz
stos
add
popf
movsb
aaa
push
out
scas
sub
jbe
pusha
scas
ficoms
repnz
add
movsl
arpl
dec
sub
scas
in
and
lret
pop
out
cld
ja
lcall
xor
shl
xchg
call
das
inc
sti
out
subb
mov
dec
and
mov
mov
cs
mov
mov
ja
in
mov
loopne
std
aad
jecxz
xchg
mov
loope
das
into
jle
mov
sarl
mov
ja
cmp
add
int3
cmp
test
mov
jmp
cmpsb
adc
xchg
rorl
pop
pop
ret
cmp
in
pop
xchg
add
out
je
lret
mov
sub
movsb
or
xor
jae
mov
inc
lcall
enter
aaa
mov
dec
andl
and
mov
jns
mov
int
mov
sbb
mov
shll
ficoml
jns
lods
cltd
nop
into
mov
lea
mov
xchg
cs
dec
mov
aam
sub
out
xchg
cltd
sti
dec
ds
addl
pop
push
inc
jmp
and
arpl
hlt
sub
jmp
inc
rcll
and
sbbl
mov
icebp
pop
fisubrl
repz
out
lret
ret
aam
mov
push
and
enter
lcall
sbb
aaa
adc
fwait
int3
push
fsubr
lahf
pop
imul
sub
mov
sub
xchg
push
in
rcr
ret
push
pushf
fcmovne
or
lods
push
fidivrs
jp
add
and
cld
repz
sub
out
inc
jg
in
pushf
lds
adc
jno
dec
daa
jbe
adc
ret
or
lret
imul
out
cs
mov
dec
orb
popf
push
sub
push
cmp
mov
fsubl
and
mov
cmpsl
and
jo
popa
mov
pusha
xor
inc
push
mov
dec
xchg
inc
xchg
cmp
jmp
imul
lahf
mov
cs
lock
dec
sbb
xchg
adc
mov
cs
xchg
lock
nop
pop
cmp
sub
add
addr16
xorl
sub
in
jg
fcmovne
popf
mov
mov
xor
or
popa
mov
add
xchg
pop
add
mov
sub
into
lret
rcrb
arpl
sub
pop
ss
cmp
out
and
mov
xchg
add
xchg
jmp
mov
inc
dec
into
mov
dec
popf
and
subl
inc
jae
push
adc
jmp
or
xor
inc
sub
xchg
jp
add
stos
mov
orb
sti
xchg
jbe
cmp
shll
inc
insl
in
cmp
arpl
leave
mov
cmp
mov
jp
or
sub
mov
xor
add
pusha
aam
xchg
mov
pop
mov
les
inc
pop
inc
mov
int3
mov
mov
js
bound
je
xchg
mov
ja
pop
nop
and
test
and
lret
out
cmp
cmc
fnstcw
lock
aas
sbb
push
lock
rcll
xchg
pusha
cmp
dec
repz
ja
xor
dec
pop
out
jns
sub
sub
hlt
xor
jb
out
mov
sbb
mov
in
xor
add
jg
xchg
mov
sub
mov
dec
mov
jnp
and
movsl
add
rcll
cmp
mov
test
xor
ret
adc
loop
pop
xor
inc
and
cmpl
int3
mov
inc
mov
scas
sbb
dec
popl
mov
pop
mov
jmp
and
jle
addb
or
lds
test
mov
inc
lret
push
sub
testb
add
pop
xchg
xadd
mov
xor
aas
xor
adc
mov
in
or
or
stos
ret
jae
push
aaa
adc
movsb
mov
xorb
or
rol
jnp
push
orb
out
stos
adc
cmpsb
loop
repnz
push
lahf
jge
lret
fdivs
jmp
les
jmp
xor
aam
mov
jg
arpl
add
cmc
xchg
pop
orl
mov
xor
stc
xchg
leave
or
outsb
add
idivl
lock
mov
xor
popa
push
sbb
aaa
les
idiv
add
cld
push
xchg
xor
or
jle
shll
outsl
call
notl
rcrb
or
pop
sub
lods
aaa
sub
aaa
mov
pop
push
xchg
pop
add
pop
pop
fldl
mov
mov
mov
addr16
dec
mov
xor
cld
cwtl
mov
push
fbld
add
in
xchg
jnp
pop
xor
adc
pop
push
push
and
ja
cli
xchg
jle
repnz
pop
sbb
and
add
in
xor
out
outsl
adc
rcrl
and
ret
inc
mov
xor
jno
mov
push
xchg
popa
in
mov
adc
adc
rclb
xor
adc
roll
adc
adc
testl
adc
adc
jbe
sbb
pop
stos
inc
mov
mov
push
in
roll
push
pop
inc
cld
and
arpl
iret
xchg
push
dec
fs
or
adc
int3
jnp
insl
mov
lret
push
xchg
jne
cmpsb
dec
outsl
sbb
std
inc
xchg
inc
cmpsb
xchg
mov
fcoms
test
ret
inc
mov
fscale
mov
push
push
ja
roll
les
idivl
sub
sbb
sub
mov
jmp
cld
mov
inc
sti
sbb
jp
lahf
jecxz
lahf
ss
sub
div
push
mov
push
loop
es
fildll
ss
cld
cmp
mov
scas
add
push
fwait
cmp
jl
mov
xor
sbb
sbb
popf
in
push
sbb
rorl
bound
mov
xchg
jno
lahf
incb
mov
and
push
cmp
hlt
xor
dec
rorb
jbe
xchg
jmp
push
adc
dec
arpl
repz
sbb
push
lret
mov
cltd
in
outsl
add
stos
js
cmp
sub
sub
arpl
sub
les
adcl
mov
aas
xchg
stos
lds
mov
or
xor
cmc
cmp
rcll
addb
cltd
or
into
je
cmpsl
inc
push
adcl
add
sub
cld
inc
repz
add
divl
cmp
inc
cltd
popa
popf
repnz
test
nop
lods
inc
lea
push
push
mov
ljmp
sub
test
adc
inc
and
sahf
xor
add
sub
lock
xchg
sbb
fld
push
dec
dec
in
xor
cmp
out
sarl
orb
test
ror
hlt
subb
lods
sbb
ljmp
fistps
and
adc
aas
mov
add
adc
dec
adc
inc
lock
movsb
xor
out
xchg
call
mov
cmpsl
lods
lret
jecxz
jl
push
jmp
cmp
sub
pop
test
push
mov
pop
mov
pop
jl
loop
ds
clc
andb
push
jge
jmp
xor
and
adc
les
lea
adc
adc
jnp
jmp
lds
data16
imul
imul
xchg
xor
pop
enter
and
ret
mov
or
jae
and
icebp
outsl
push
push
test
mov
mov
daa
cmc
add
inc
pop
pop
mov
pop
jne
pop
in
xor
cmp
sbb
std
outsb
dec
dec
cmp
mov
jno
mov
mov
cmpsb
sub
loope
fidivrs
fistpll
mov
fdivrs
sbb
xlat
lock
dec
jmp
inc
cmpsl
inc
and
cmp
cmc
inc
std
xor
mov
jge
jnp
icebp
sti
das
sub
pop
aaa
arpl
push
fldl
jbe
sub
cmpsb
cmp
sbb
cli
cwtl
xchg
sub
adc
or
jecxz
cs
mov
sbb
and
cmc
cmp
cmpsl
or
or
xchg
and
adc
out
push
cwtl
and
cmpl
sbb
cmp
lea
dec
lods
jno
scas
dec
loop
mov
mov
lods
cltd
sub
cld
push
faddl
xchg
icebp
mov
or
and
jmp
xchg
xor
mov
repz
pop
insb
ret
xor
sar
sbb
or
push
inc
cmp
pop
ret
push
ds
orl
mov
sub
pop
loop
xchg
adc
jns
ficompl
jnp
push
int3
stc
mov
push
in
xchg
lahf
call
mov
dec
push
push
xor
retw
shlb
sbb
xchg
adc
mov
hlt
jmp
or
mov
sbb
sahf
mov
cmp
and
in
adc
sbb
xor
jl
scas
lea
sub
in
repz
xchg
fidivrl
sbbl
cs
in
jecxz
cld
aaa
popf
cmp
pslld
xchg
sbbb
xchg
mov
ljmp
cmp
movsl
sub
xchg
push
cmpxchg
jge
pop
mov
push
and
pop
jge
xor
mov
cli
push
or
lock
lret
or
sbb
mov
fbstp
xchg
mov
jns
jge
add
fisttpll
ret
cmpb
cmp
push
dec
pop
push
sbbl
xchg
mov
icebp
or
sti
out
jno
sbb
pop
psubb
cld
js
cmp
pop
gs
mov
push
mov
in
repnz
ret
lret
or
test
xlat
inc
scas
arpl
mov
xlat
das
xchg
stos
mov
mov
sub
aad
lahf
sub
fidivrs
imulb
add
scas
lret
mov
cmp
push
fisttps
xchg
les
insl
cmc
mov
push
mov
pop
cs
push
in
ljmp
test
xlat
test
and
sti
sbb
pop
or
lods
sbb
sub
push
adc
cmpsb
fs
add
data16
mov
cmp
or
movsl
cmc
mov
int3
sti
fs
ret
int3
out
xchg
jg
les
cmpb
jae
ja
dec
cmpsb
or
push
inc
fcmovnbe
jmp
sbb
pop
or
mov
mov
inc
xorl
int3
xor
sarl
call
sbb
cs
add
cmp
sti
jo
movsb
jle
pop
or
jl
mov
jg
jbe
ret
push
shlb
mov
sub
scas
mov
and
cmpsb
mov
comiss
mov
add
out
gs
dec
xchg
nop
adc
pop
mov
mov
stc
aam
lods
leave
mov
lock
xor
sti
add
sbb
fcoms
push
test
movb
push
mov
xlat
popf
fs
push
mulb
imul
mov
imul
lret
fdivr
dec
iret
imul
fdivrl
and
jb
jecxz
sahf
adc
pop
andl
push
rcrb
adc
fucomip
aas
xor
ret
out
dec
push
mov
push
pop
insb
sti
popf
repz
bound
movsl
out
jmp
or
iret
add
sbb
je
xchg
sbbl
mov
repz
loopne
gs
adc
adc
mov
movsb
outsb
dec
push
xor
or
push
ret
xchg
daa
fimull
jbe,pt
push
in
shll
in
cmpsb
push
cs
mov
shll
sbbb
lcall
rcrb
inc
lret
and
ja
cmovs
testl
mov
lods
frstor
cwtl
inc
mov
idiv
test
dec
je
ja
dec
mov
pop
lret
cltd
das
pop
and
xchg
jbe
es
sbb
push
movsb
shlb
and
icebp
loope
or
sub
pop
sbb
push
loope
mov
sbb
push
shlb
mov
cmpsl
xor
inc
lock
ja
push
inc
outsl
sub
ss
mov
call
sahf
jo
stc
daa
int3
sub
jmp
fsubs
or
dec
xchg
ss
shll
xor
movsl
add
out
hlt
ss
bound
xor
loop
sbb
mov
movsl
and
pop
cmp
pop
pop
add
dec
daa
inc
jl
push
push
pop
mov
loopne
ret
pop
cwtl
mov
sub
mov
or
jae
addr16
pop
cwtl
mov
int3
cld
incl
je
rcll
push
in
sub
add
nop
movsl
dec
cmp
sub
mov
mov
dec
hlt
cmp
or
inc
pusha
dec
xor
iret
cmc
jne
je
inc
mov
notb
adc
jle
ret
xchg
int
shl
stos
insl
pop
ficoms
ret
jle
fcmovnbe
jno
mov
out
xchg
shlb
popf
lahf
aaa
dec
xchg
cltd
inc
aam
fistpll
sbb
lock
and
imul
fcomps
pop
mov
adc
fstpl
push
push
cmp
sbb
pop
xlat
inc
ss
jp
fistpl
mov
jnp
jecxz
pop
mull
xor
into
adc
inc
mov
loop
push
imul
jae,pt
mov
jge
jecxz
test
fs
push
fisubrl
add
push
nop
shll
pop
jnp
jle
push
lret
xchg
mov
rorl
cwtl
push
pop
dec
and
insb
nop
lcall
bound
cwtl
arpl
in
jno,pt
ds
scas
lret
xor
fs
in
dec
jae
sbbb
addl
ret
inc
jmp
push
addb
int
repz
adc
loope
rol
or
xchg
dec
aam
rorb
mov
out
mov
mov
and
and
jae
inc
fmul
push
xchg
or
sub
lret
pandn
insl
cwtl
hlt
icebp
call
outsl
lea
xchg
jl
dec
or
sub
je
iret
call
dec
enter
dec
pushl
xor
cmp
imul
mull
xor
dec
imul
aaa
inc
sub
and
nop
sti
adc
sarb
es
cmp
add
mov
in
sbb
xchg
addb
cmp
aas
and
lea
xchg
pop
sub
shrb
cmc
fcmove
scas
pusha
jo
jmp
insb
mov
mov
inc
cmp
lret
daa
dec
jle
inc
mov
test
jp
mov
push
and
js
fs
lock
dec
test
mov
in
push
pusha
push
mov
jae
inc
adc
subl
test
out
mov
nop
clc
popa
das
add
mov
sbb
fildll
mov
js
pop
addl
leave
inc
sub
sbb
rcll
cmc
push
stos
jno
mov
out
pop
hlt
insl
xlat
flds
into
push
gs
sub
jge
and
gs
mov
push
adc
cmp
loope
in
and
cmp
mov
sbb
and
les
stos
cs
dec
iret
ja
dec
pop
ficoml
iret
xchg
jb
repnz
call
mov
jne
xchg
push
mov
mov
sti
fcmovu
or
jno
jns
lret
push
test
mov
sti
and
fadd
daa
into
mov
push
inc
rcrb
xor
add
stos
jb
loopne
or
inc
insb
jae
jno
addr16
aad
xchg
cmpsl
fwait
pop
cmc
ds
sub
adc
nop
mov
mov
add
jno
cmp
test
imul
scas
sub
in
rolb
fisttps
push
mov
jmp
jns
nop
jmp
xchg
ds
inc
pop
sbbb
mov
test
std
add
or
addr16
pop
sub
mov
fstpl
cld
pop
adc
aaa
add
hlt
push
xchg
jmp
fildl
ret
xchg
stc
push
and
fsub
je
pcmpgtb
ljmp
imul
push
sti
mov
mov
xchg
dec
aam
xor
pop
and
cmp
rcll
outsl
test
divb
or
jg
out
test
aaa
scas
adc
mov
cmp
daa
cld
mov
andb
add
push
pop
icebp
mov
xchg
xchg
push
ds
mov
imul
imul
les
movsb
nop
cmc
ficoms
pop
mov
sbb
xlat
aas
sbb
jg
jno
rorl
jecxz
fcoml
mov
pop
test
and
jle
adc
inc
leave
std
addl
add
jbe
dec
mov
jmp
mov
push
aaa
lods
jg
lar
out
ret
mov
bound
add
out
push
scas
adc
lods
ds
jmp
repz
dec
mov
adc
pop
adc
jmp
or
fs
stc
lea
mov
pop
repnz
cmpsl
jno
pop
ljmp
cli
jp
stos
xor
aaa
dec
xor
cmp
push
jmp
cmp
daa
fdivs
mov
dec
cmpsb
cmpb
xor
pop
jle
xchg
nop
and
mov
mov
das
push
xor
aaa
lret
faddp
add
push
mov
mov
cmp
mov
push
fsubrs
je
mov
cmp
sub
mov
movsl
add
lock
lahf
or
stos
lret
mov
mov
push
mov
jmp
leave
sarb
adc
jecxz
call
pop
fwait
mov
jl
loopne
es
dec
movsb
aaa
mov
in
adc
rolb
xlat
pop
mov
and
sti
and
mov
adc
or
lods
rolb
inc
cmpsb
stc
ja
inc
jo
les
jle
mov
adc
xchg
mov
jnp
inc
ljmp
cli
jmp
and
jnp
das
jo
imulb
cmpsl
je
and
jbe
xchg
ror
sbb
adc
jo
ja
sti
ds
int3
pop
pop
or
out
push
jns
jecxz
jnp
fildl
addb
cmc
add
sbb
xchg
lock
adcl
jmp
movsb
rcrb
mov
daa
xchg
and
adc
mov
xchg
mov
pop
dec
sub
mov
push
into
xor
outsb
xor
rolb
out
xor
loop
xor
stos
outsl
iret
mov
xor
ret
xchg
xor
aad
decl
mov
inc
test
and
stos
push
ret
out
add
pop
mov
inc
lret
stos
and
stc
pusha
mov
movb
mov
adcb
arpl
xchg
sti
mov
ds
outsb
test
imul
cmp
hlt
jmp
test
sub
pop
pop
fmuls
iret
sbb
addr16
fcoms
roll
cmp
clc
xchg
mov
pop
std
adc
cmpsl
dec
mov
lock
mov
mov
enter
insl
loopne
or
inc
adcl
sbb
rorb
leave
stos
sub
inc
dec
sbbl
sbb
imul
add
shrl
out
nop
push
inc
fwait
pushf
mov
sub
pushf
ljmp
notl
jne
sbb
les
fs
repz
and
xor
xlat
mov
pop
adc
inc
cs
push
mov
es
leave
mov
xchg
jno
dec
popa
mov
arpl
pop
pop
sti
cmp
inc
stos
lret
mov
mov
adc
mov
mov
jecxz
std
xor
shrb
sub
sub
dec
sub
push
bound
jns
fstl
scas
jnp
or
into
add
cmp
mov
bound
xchg
jecxz
or
test
lods
fwait
adc
lods
arpl
aad
inc
cmp
inc
push
jae
mov
inc
pushf
ja
cmp
mov
push
call
cmp
sbb
popf
mov
sti
sahf
cs
sarb
or
popa
adc
inc
xor
xor
xor
bound
dec
xor
ljmp
and
mov
push
mov
out
dec
sub
test
pop
or
adc
loope
cmp
sub
sub
lret
add
cmpsb
test
xchg
mov
mov
mov
dec
lea
xor
leave
xchg
xchg
test
shrb
in
inc
lods
mov
add
lods
into
pusha
push
test
sub
push
fwait
adc
icebp
in
addb
xchg
xor
cs
rorb
sbbl
in
adc
push
aam
loop
test
mov
xchg
or
push
jp
push
adc
outsl
call
ljmp
pop
mov
es
cli
sub
inc
popf
rcrl
xor
js
fidivl
loope
repz
jp
movsb
sub
sub
jns
jl
repnz
xchg
cs
mov
jle
lahf
repz
repz
ficoml
jmp
xchg
adc
push
movsb
iret
jle
pop
sarb
sarb
add
mov
cwtl
mov
adc
add
cwtl
pusha
je
shlb
mull
pusha
lahf
pusha
push
and
sub
cmpsl
dec
xor
pop
sbb
divl
sbb
mov
jecxz
sub
push
push
xor
mov
psrad
pop
mov
in
fisubrs
loope
or
lods
movsl
fcoml
testb
mov
ja
fs
push
xchg
and
rcl
mov
or
scas
fwait
mov
ljmp
into
mov
mov
into
cmp
adc
jnp
jo
ret
xchg
or
rcl
fisubrs
push
rcrb
lock
jnp
inc
cmpsb
jo
int3
xchg
inc
subl
fs
pop
mov
aad
xchg
fwait
push
cltd
ret
pop
jo
or
pop
sub
mov
pop
sahf
repnz
jp
in
mov
jne
xor
cmp
and
rolb
jmp
inc
enter
dec
mov
pop
jo
pusha
xchg
pop
cmp
mov
adc
rclb
pop
int
push
mov
mov
sub
adc
lahf
imul
mov
sbb
popf
add
aam
mov
subb
xlat
fldenv
sahf
daa
adc
loopne
inc
push
sbb
jecxz
mov
fstp
pop
pop
scas
xchg
les
xchg
cwtl
adc
sub
sti
pusha
ret
xor
lret
clc
jg
dec
pop
adc
pop
shll
mov
mov
mov
or
xlat
fadd
sahf
sti
adc
sub
daa
mov
mov
cwtl
dec
aam
leave
cmp
mov
pop
in
xchg
mov
mov
xlat
sbb
mov
dec
inc
jnp
movsb
mov
sub
mov
call
pusha
mov
dec
adc
cltd
in
xor
in
mov
cltd
fmul
js
and
dec
adc
jno
xchg
jge
int
das
ja
xchg
pop
xchg
mov
mov
and
mov
jg
sbb
out
dec
aam
mov
jno
or
fisubs
pop
sub
mov
mov
mov
adc
les
shrl
adc
or
adc
mov
lret
inc
push
cs
xlat
mov
jb
int
sbb
sbb
dec
add
icebp
ret
fisubrl
mov
repz
push
push
sub
stos
data16
sbb
out
adc
mov
mov
sub
jns
dec
sbb
xchg
add
or
adc
sub
loop
pop
dec
sbb
out
ja
divl
xchg
cmc
outsl
cmp
mov
lea
test
push
sub
xor
jmp
hlt
sbbl
je
and
add
popa
mov
add
rcrl
jo
cs
inc
or
popf
flds
nop
pop
cmp
fs
xchg
in
xlat
sbb
das
lret
sbb
inc
jle
roll
sarb
ss
add
pushf
insl
dec
inc
fdivs
adc
imul
pop
test
fstpt
pushf
cmp
pop
xor
sbb
sbb
daa
jo
push
rolb
shlb
sbb
out
mov
into
aam
ljmp
inc
divb
stc
repz
sub
cmp
notl
imul
jecxz
adc
mov
mov
nop
adc
pushw
lods
cmp
popa
orl
xor
jno
and
cmp
sbbl
add
push
mov
mov
and
inc
or
sbb
jbe
sbb
das
jbe
lock
sbb
stc
stos
fadds
insl
jnp
ljmp
rclb
test
ljmp
xor
and
push
int3
into
shl
stos
cmp
jb
sbb
push
xor
push
and
loope
lcall
or
jp
sub
sub
inc
push
std
adc
pop
popaw
jl
dec
les
xchg
mov
sbb
mov
bnd
in
arpl
lods
ret
stos
cmp
cld
clc
pop
or
mov
jg
or
cmpl
addb
pop
cld
lret
andb
imull
dec
int
gs
cwtl
repnz
imul
aam
js
les
popf
mov
jmp
cli
shll
sub
stos
aaa
pusha
mov
push
jne
shrl
adcl
lods
lods
aaa
test
add
in
dec
movsb
cld
sub
lods
sbb
sahf
in
insl
or
dec
mov
dec
lea
inc
xchg
adc
add
xchg
dec
mov
inc
dec
push
jle
add
repnz
jmp
sbb
adc
pop
mov
in
inc
dec
pop
pop
and
je
mov
mov
addr16
sbb
out
movsl
mov
addr16
dec
and
cmp
jb
jo
pusha
aas
mov
rcl
mov
add
ljmp
adc
push
inc
fmul
pop
mov
call
aad
mov
dec
rorb
mov
rol
add
and
ffreep
mov
mov
pop
testl
pushf
test
or
ds
mov
ljmp
or
push
pushf
fmull
enter
andl
mov
mov
gs
cltd
imul
adc
and
rclb
jmp
subl
cli
cli
rclb
xor
jg
xchg
jae
mov
mov
jl
mov
fldt
ljmp
cld
dec
aam
adc
ljmp
pop
lods
ror
mov
test
xchg
sub
loop
in
addr16
rcrb
out
xchg
movsb
pop
out
movsb
dec
scas
jnp
cmpsl
loopne
pop
pop
mov
loop
dec
cmp
push
mov
jbe
jb
inc
dec
xchg
sbb
or
push
adc
in
or
sbb
inc
test
or
jns
fildl
or
adc
jb
imul
out
cmc
adc
bound
jge
or
xlat
push
mov
dec
ret
iret
pop
xchg
insb
in
pop
addb
test
push
addl
sti
loopne
sbb
out
mov
int
popf
scas
mov
pop
inc
xor
adc
mov
jp
sti
ret
out
mov
adc
push
das
mov
test
jmp
fidivs
ja
das
bound
cmpsb
out
icebp
dec
push
or
jbe
adc
stos
popa
sub
cwtl
shrb
xchg
cmp
inc
xchg
jecxz
fdivl
das
jl
push
out
jbe
cmpsb
mov
cmp
jno
std
pop
out
scas
adc
jns
xlat
popa
mov
subb
sbb
test
cmpsl
lock
loope
push
fisubl
or
inc
loop
in
adc
ror
mov
push
lods
stos
fadds
push
mov
mov
mov
inc
nop
pop
dec
outsl
mov
dec
incl
pop
jecxz
jnp
mov
push
mov
sub
rcrl
jo
fiadds
xor
call
cmp
iret
daa
cmp
fidivs
or
repnz
je
add
dec
inc
insl
pop
pop
cmp
test
cwtl
mov
mov
es
cmpsl
shrb
outsl
movsb
insb
repz
sbb
jle
jecxz
fstpl
pop
movsb
mov
add
pusha
xchg
fs
sub
scas
outsb
push
mov
sbb
inc
divl
mov
enter
lret
test
and
mov
inc
stos
rcll
push
out
push
adc
insl
jp
stos
xor
cli
push
sbb
dec
test
insl
lods
mov
or
xchg
test
bound
push
push
mov
mov
cmp
or
pusha
pop
and
xor
addr16
dec
mov
mov
roll
push
sbb
xchg
xchg
loopne
xchg
stos
lds
mov
jne
out
mov
push
jge
push
mov
cmp
fwait
pop
cmp
push
push
shl
inc
jmp
in
sahf
push
je
cmp
mov
add
stos
mov
jg
push
lock
sub
sti
add
fwait
jp
xchg
mov
lea
roll
dec
fdivrs
popf
das
push
sarl
das
xchg
iret
xchg
pop
fisttps
xchg
mov
divl
into
pop
popa
aad
mov
testl
mov
sbb
repz
inc
inc
incl
clc
mov
cmpsb
cmp
test
add
push
addb
movsl
jge
and
mov
adc
bound
mov
test
or
jno
push
jge
xchg
cmpsb
js
adc
fnstsw
pop
sub
ja
arpl
cli
faddl
dec
pop
repz
mov
aaa
call
adc
xor
movsl
pop
iret
andl
inc
xor
je
repnz
sub
jne
pusha
jle
sbb
inc
es
or
ret
mov
test
adc
daa
shll
inc
out
xor
fucomp
cld
mov
fcoms
test
mov
and
pop
out
hlt
clc
lock
clc
jne
fadds
dec
repz
jbe
int
in
or
test
bound
lret
jp
inc
push
pop
push
jecxz
mov
into
out
or
mov
mov
jmp
nop
pop
int3
shr
cltd
imul
dec
sub
call
sub
les
sbb
cwtl
jecxz
pop
mov
mov
roll
enter
xorb
mov
aam
push
jmp
neg
fidivl
xor
jecxz
jecxz
enter
cwtl
mov
movzwl
es
mov
inc
lea
sti
sbb
xchg
cli
mov
test
mov
pop
es
inc
mov
cmc
leave
lods
add
shrb
xchg
pop
in
sub
xlat
jmp
out
xchg
mov
add
mov
xchg
dec
and
mov
mov
xor
subps
mov
shlb
sbb
xor
addr16
inc
call
mov
mov
inc
mov
mov
imul
sub
roll
divl
push
cwtl
aam
xchg
pop
pop
clc
lds
push
sub
inc
ds
sub
bound
dec
or
repnz
enter
jl
mov
xor
mov
jmp
pop
imul
data16
insb
lcall
cmpsl
sbb
shll
dec
pop
inc
sub
pop
cmp
cld
sbb
adc
sbb
inc
cmpsl
jle
clc
lcall
mov
in
cmp
mov
fiadds
stos
adc
adc
out
clc
push
push
cltd
pop
stc
shlb
xor
je
fs
and
sub
pushf
arpl
jns
test
mov
outsl
loope
mov
sbb
imul
pop
std
xchg
push
shrb
js
enter
mov
dec
rorl
inc
in
dec
shlb
add
fsubl
arpl
fdivs
sbb
sbb
outsb
adcb
jg
insl
xchg
cmp
adc
andl
cwtl
into
sub
cmp
movsb
cmpsb
lret
sub
stos
jecxz
lods
jo
lock
xchg
cmc
subb
and
xchg
mov
dec
jge
jns
or
out
lcall
lods
outsb
inc
cltd
aam
or
imul
cmp
lret
xor
dec
push
pop
and
hlt
pusha
iret
lea
lret
mov
call
pop
into
push
jg
jo
insb
xor
pop
stos
imul
das
jb
sub
sub
pop
popa
fwait
shrb
scas
mov
fsubs
lock
pop
int
pop
and
dec
or
or
aaa
stos
icebp
in
mov
push
je
insb
mov
sub
add
inc
ja
or
ja
and
imul
pop
dec
adc
lods
mov
addr16
ret
push
nop
int3
mov
cmpsb
fcoms
mov
mov
jnp
mov
ss
call
shll
add
imull
jbe
xorl
add
dec
fs
and
hlt
sahf
fcomps
jmp
ljmp
adc
addr16
sub
test
cmp
push
mov
out
sbb
movsl
sbb
aaa
pop
loop
inc
lret
sbb
cltd
jge
jbe
cmp
movsl
dec
mov
push
sub
mov
imul
sub
aam
ja
pop
or
mov
mov
sar
push
xlat
mov
sbb
mov
andnps
pushf
inc
and
cmp
repnz
fmull
jmp
js
pop
sbb
fiaddl
xchg
inc
sub
dec
iret
push
or
shl
popa
leave
xchg
shl
mov
xchg
imul
adcb
xlat
out
cmc
out
outsl
pop
leave
daa
cmp
bnd
inc
or
push
jbe
xchg
lods
dec
mov
adc
call
das
fnstsw
mov
or
call
inc
pop
and
ja
movsl
data16
pop
sbb
ja
dec
jne
dec
push
pushf
adc
out
mov
push
lods
add
inc
sbb
hlt
lcall
jno
adc
inc
jnp
or
mov
dec
test
popl
jbe
imul
out
inc
mov
gs
filds
inc
fsubrl
lock
gs
xchg
int3
repnz
fwait
into
pushf
mov
mov
add
imul
mov
sahf
inc
xchg
daa
jg
rorb
pop
xor
xlat
aad
pop
ret
sub
mov
pop
jmp
pop
sarl
push
mov
jnp
orl
cwtl
or
pop
shlb
sbb
xchg
push
jns
xchg
cwtl
icebp
adc
popf
or
mov
bound
mov
mov
sub
das
pop
mov
push
jae
in
lret
das
into
or
aaa
sarb
fnstenv
xor
je
xchg
xor
inc
pop
xor
dec
cmp
repz
push
call
xor
xchg
pop
shrl
mov
es
cmp
ret
push
mov
push
gs
xor
test
cmp
push
mov
out
push
orl
je
cmp
stos
shr
sub
out
loop
or
test
push
or
loop
sub
out
jo
adc
mov
aas
sub
imul
xchg
lods
mov
sub
sub
cmc
lret
lret
ret
xchg
data16
mov
div
and
pop
pop
inc
insb
scas
loop
pop
nop
stc
xorb
cs
pushf
popa
push
cwtl
stos
inc
cmp
in
push
icebp
pop
and
ret
inc
push
push
in
sbb
mov
or
dec
std
or
dec
jecxz
rcrl
cld
stc
push
arpl
das
stc
ds
xchg
out
ror
xchg
dec
push
adc
mov
adcl
push
push
add
cmpps
sbb
dec
adc
data16
in
mov
cmp
or
push
jmp
inc
leave
xchg
pop
pop
lret
or
push
fmull
sbb
jl
mov
fisubrl
clc
pop
jg
ljmp
inc
sbbl
jbe
push
mov
push
repz
push
mov
xlat
pop
test
mov
mov
addr16
mov
and
sub
fsubs
nop
aad
add
test
ret
jb
push
in
mov
add
inc
cmp
in
aam
push
inc
mov
sub
pop
insl
or
aad
repnz
cmp
mov
hlt
cld
push
jmp
adc
xchg
pusha
mov
fisttps
push
push
mov
stos
fildll
lret
out
add
inc
jmp
shll
mov
mov
shll
mov
sbb
lods
sbb
dec
and
pop
js
lea
mov
lret
pusha
inc
and
iret
inc
jno
xor
lahf
fs
sti
sub
ja
sub
xor
dec
testl
xor
rol
or
adc
inc
add
mov
into
pushf
sbb
rclb
sar
mov
mov
pushf
pop
imul
in
decl
or
shl
inc
dec
adc
ja
pop
xor
sbb
push
adc
mov
sub
inc
clc
sub
aas
or
sbb
pop
cmp
mov
add
je
stos
or
jg
xchg
push
xor
adc
fwait
and
fs
push
fs
mov
push
push
aad
jge
ss
xchg
call
inc
or
scas
dec
test
lret
call
les
test
repnz
push
pusha
adc
dec
dec
dec
bound
sub
or
pop
add
aad
dec
les
shlb
adc
xchg
scas
inc
lea
or
lcall
aam
xor
push
stos
dec
dec
in
popf
out
test
mov
dec
repnz
std
call
das
popa
shll
andl
xchg
ljmp
stc
jg
rcrl
xor
xchg
into
dec
xchg
pop
and
xor
in
into
adc
fldt
xlat
movsl
mov
inc
mov
mov
roll
repz
cmc
js
aad
scas
shl
push
lods
inc
xchg
lods
pop
xchg
lret
sbb
mov
mov
movsb
leave
adc
jmp
aad
icebp
movsb
lret
sub
jb
adc
xlat
xor
cli
sbb
push
ds
push
stc
pop
movsb
and
ret
add
hlt
lock
dec
jo
push
rcrl
mov
mov
call
jo
ds
in
mov
in
ljmp
lcall
lahf
andl
mov
add
mov
cmovo
fisubs
cltd
xchg
fldenv
test
jno
sub
ret
jge
xchg
jo
and
jecxz
sub
lcall
add
xchg
xchg
lock
out
lcall
inc
mov
jl
scas
xor
jecxz
xor
jnp
idivb
dec
mov
enter
not
aaa
es
jmp
lret
mov
les
cmp
mov
and
mov
sbb
rorb
scas
int
in
aam
sbb
inc
jl
or
test
push
sbb
mov
push
rcrl
mov
divl
add
cwtl
loope
mov
mov
outsl
xchg
imul
ficompl
mov
inc
jae
gs
icebp
mov
and
jl
mov
hlt
mov
sarl
mov
andl
rcrl
fildl
xchg
adc
out
mov
not
cwtl
xlat
mov
cs
push
std
test
loopne
mov
pusha
cmpl
jg
or
cmp
jl
out
mov
mov
rcr
sbb
dec
cmp
les
or
and
xor
push
cltd
xchg
sub
loop
inc
mov
je
pop
or
imul
mov
xchg
and
inc
push
cmp
and
add
jb
pop
bound
ds
jg
in
mov
aaa
cld
aam
push
in
sarl
add
shlb
shrb
mov
leave
pop
cmpsb
ficompl
je
xchg
mov
div
std
int
fsubrs
mov
xor
mov
pop
mov
inc
jno
mov
cmp
pop
pop
mov
mov
scas
pop
sub
jo
ljmp
test
push
or
insb
push
test
inc
push
pop
push
dec
lret
loope
jg
jl
les
idiv
imul
jg
dec
hlt
call
roll
or
shlb
sub
lock
sbb
jp
fcmovbe
xchg
push
ror
mov
mov
push
or
mov
cmp
and
mov
lods
js
push
add
les
mov
push
jb
les
xchg
push
in
add
fidivs
lea
in
cmp
imul
rorb
ror
push
ret
inc
into
xlat
aad
jne
push
push
adc
xchg
sbb
shlb
insl
pop
sbb
pop
ret
inc
clc
shl
pop
call
mov
decl
jnp
jecxz
test
xchg
out
or
fldl
sbb
adc
mov
mov
call
shrl
lcall
aad
popf
mov
repz
mov
sbbb
inc
je
es
or
fwait
daa
xchg
xchg
fwait
je
cmp
repz
cmp
inc
inc
push
shrb
jnp
pushl
and
sti
xlat
sti
icebp
shr
add
cmpsl
mov
mov
fisubrl
pop
sbb
bound
add
sub
hlt
or
mov
pop
xchg
into
loop
mov
inc
fcomi
insb
scas
sub
xchg
cltd
ret
sarl
xor
sub
bound
or
xchg
jno
xor
or
cmp
fsubl
stc
inc
repz
inc
mov
xor
iret
mov
imul
inc
inc
jb
sbb
dec
cld
or
jg
stc
push
jns
or
fstl
fcomip
out
jns
lret
push
iret
out
mov
stos
cmpsb
not
loop
push
or
scas
sbb
into
mov
cmpb
adc
jmp
loop
mov
orb
xor
rol
mov
sbb
dec
sti
in
popa
test
inc
negl
ffreep
xor
xchg
push
sbb
movsl
xchg
stos
mov
pop
clc
pushf
push
and
xchg
jns
cmp
out
sub
lret
jmp
mov
or
adc
icebp
iret
mov
in
shr
mov
mov
mov
push
divl
pop
add
movsb
jae
jnp
dec
mov
push
mov
jp
in
fidivs
xchg
das
int
cmp
iret
sub
dec
adc
jns
xor
pop
lods
cmpsl
sbb
aam
ja
mov
js
cmp
or
dec
mov
push
xchg
aas
into
adc
pop
mov
and
or
dec
lahf
xchg
mov
fwait
jmp
inc
xchg
mov
cmpsb
enter
in
or
lahf
push
add
jo
ljmp
jg
xchg
sbb
js
push
out
or
pop
into
and
pop
pop
mov
cmp
sahf
push
clc
cs
jecxz
ss
xchg
cmc
cmp
inc
pop
mov
mov
into
addl
mov
cld
add
cs
jno
xchg
cld
and
cmp
cmp
inc
mov
pause
ds
ljmp
pop
and
inc
aad
xchg
xchg
mov
push
bound
shrl
sub
adc
cs
mov
data16
lods
je
lock
mov
aaa
repnz
push
or
and
sub
out
leave
mov
sahf
es
push
jmp
push
popa
dec
stos
sahf
sub
sbb
jmp
fisubrl
cmp
imulb
mov
inc
lret
push
aad
aad
xor
push
jle
mov
fbstp
sub
xchg
and
mov
dec
out
push
ljmp
and
loope
imul
int
bound
incl
jb
inc
push
and
adc
imulb
in
mov
lock
mov
sbb
scas
mov
mov
inc
jo
and
xor
pop
cmp
push
or
mov
sub
mov
push
push
out
or
xchg
subl
data16
sub
in
testl
pop
inc
cmc
in
pop
pop
sbb
into
int
or
and
or
mov
repnz
cwtl
jge
insl
shrl
mov
into
jo
stos
sub
lret
xchg
dec
int
push
clc
inc
int3
adc
or
and
sub
out
push
je
push
xchg
pop
mov
mov
add
jmp
lea
push
rol
cmp
push
push
xchg
in
in
out
xlat
popf
adc
sbb
pusha
lock
scas
aaa
jno
xlat
and
cmp
inc
mov
jb
dec
scas
cltd
gs
lods
add
dec
es
mov
sti
repz
mov
call
ljmp
pop
adc
mov
cmp
or
insb
push
frstor
lds
jp
paddq
subb
adc
xchg
lods
fdivrs
mov
xor
sbb
inc
mov
inc
lds
mov
cmp
ror
push
arpl
cmp
pop
shlb
mov
hlt
inc
repnz
pop
dec
ja
pop
incl
popa
and
sbbl
or
mov
push
test
dec
xchg
fidivrs
mov
xchg
fcoml
mov
out
inc
xor
mov
sbb
gs
mulb
push
lock
dec
lock
dec
mov
lret
xchg
and
adcb
mov
jecxz
push
inc
cmpsl
and
nop
or
sarb
inc
push
aas
sub
lcall
or
cmp
andb
and
xor
cld
in
dec
aam
mov
sub
test
fisubs
shrb
adc
mov
sub
push
and
adc
inc
mov
add
inc
mov
out
pop
xor
pop
jle
pop
inc
ret
addb
pop
nop
xchg
call
jp
inc
mov
out
jae
lret
mov
lock
dec
push
adc
clc
sar
test
das
bound
in
cmp
es
cwtl
pusha
dec
pop
xlat
and
mov
pop
inc
arpl
into
sbb
lahf
je
sub
mul
mov
mov
adc
lret
add
imul
push
cs
sub
or
pop
jle
call
negl
in
jge
scas
pandn
mov
mov
das
mov
mov
jg
push
mov
dec
sbb
into
inc
and
data16
adc
sbb
lahf
lds
lea
or
push
ret
subb
das
xor
inc
ja
cmpsb
shl
roll
out
jmp
sbb
mov
or
lret
shlb
and
jg
jmp
arpl
arpl
outsb
mov
subb
add
add
adc
gs
pusha
mov
inc
pop
cmp
test
ret
test
andl
and
lea
shrl
shll
pop
push
popl
stos
adc
add
imul
sbb
imul
scas
xchg
pop
daa
test
aad
mov
xor
sub
icebp
dec
fisubs
ljmp
ja
xchg
cs
xorb
jge
mov
les
out
pop
ja
inc
adc
jns
mov
inc
pop
dec
ja
xor
fwait
jae
repnz
adc
ss
push
inc
sbb
cmpb
mov
mov
out
mov
cltd
xor
daa
dec
cwtl
ret
daa
lock
out
and
stos
adc
in
sbb
push
push
pop
sub
xchg
xor
into
test
push
sub
das
das
fwait
test
adc
mov
adc
divb
adc
decb
mov
scas
sub
adcb
push
pop
mov
pushf
xchg
test
adc
pop
cs
shr
rcr
iret
cltd
fimull
lock
lds
icebp
adc
ret
jmp
leave
loopne
pop
leave
sbb
clc
je
dec
stos
adc
jle
fs
push
adc
mov
adc
rclb
sub
push
je
lods
pop
scas
aas
hlt
inc
push
rcr
mov
rorl
sub
xchg
sub
xchg
mov
addr16
int
lods
rcrb
and
inc
hlt
pop
out
mov
imul
push
ds
pop
rclb
inc
fiaddl
mov
or
pop
out
test
out
sub
les
loopne
mov
test
mov
push
push
jecxz
aad
pop
outsb
bndstx
outsl
mov
das
lcall
and
das
mov
mov
repz
mov
mov
mov
push
lods
xchg
out
outsl
sbb
adc
mov
cltd
leave
mov
sbb
inc
inc
loop
inc
jmp
push
mov
into
dec
hlt
outsb
and
enter
call
push
mov
pop
sub
jnp
sbb
dec
xor
fsubrp
dec
shrl
lock
subb
push
aas
or
cmpb
mov
setno
mov
ret
mov
data16
jge
jle
inc
mov
es
pop
mov
add
cld
gs
add
pop
pushf
push
sbb
mov
cmpsb
jno
arpl
push
add
push
dec
fiadds
mov
adc
sbb
scas
mov
inc
je
leave
insb
popf
sub
mov
js
testl
dec
gs
and
add
or
jo
in
movsl
scas
in
std
stos
add
mov
fwait
subb
and
sbb
pop
cmpsl
cmp
movsb
out
out
add
add
setge
lock
mov
fwait
cli
loop
jbe
insl
jns
pop
ds
movsb
not
dec
in
sarl
andb
aam
cmpl
dec
cmp
sbb
mov
fcmove
pop
xchg
sti
cli
jo
shl
add
outsb
xor
lret
xchg
pop
daa
ljmp
cmpsb
mov
xchg
inc
cltd
add
mov
sub
jp
lret
in
lahf
adc
out
aaa
js
jo
dec
aad
mov
xchg
bound
push
add
adc
cmp
push
ja
or
mov
inc
jo,pt
mov
pop
sbb
sarb
je
sbb
push
add
mov
sarb
sub
inc
push
call
leave
shlb
xchg
fs
icebp
push
dec
loope
test
push
or
mov
outsb
jge
int3
lock
cmp
mov
insb
outsl
aaa
mov
arpl
jnp
xchg
in
lock
mul
subl
mov
mov
pop
jo
mov
xor
lock
subb
pop
push
call
push
rorl
aas
inc
and
out
hlt
adc
test
repz
dec
out
dec
movsb
ds
aaa
mov
test
out
xchg
testb
mov
sbb
lods
xchg
sbb
xchg
pop
dec
pop
pop
sbbl
pop
xchg
and
inc
js
xor
push
arpl
and
cld
sbb
call
cmp
js
testb
push
cmp
mov
pop
sbb
inc
cmp
xchg
test
xorb
in
cmpsl
sti
mov
repnz
dec
push
jb
mov
add
mov
lret
push
xor
addr16
sarl
or
sub
cmp
in
shrl
push
rcl
push
add
jg
mov
std
iret
adc
sub
sbb
out
aam
aad
pop
sub
xor
add
test
push
incb
lods
pop
call
ret
sbb
jge
mov
push
loope
jbe
cli
and
andl
mov
sbb
jecxz
ljmp
out
out
xorb
push
fdivl
pop
imul
aas
cmp
popa
jns
xchg
cli
nop
jmp
aam
ljmp
adc
icebp
pop
loop
mov
or
xchg
popf
shll
jmp
inc
nop
dec
xor
cmp
mov
stos
std
xchg
aas
jo
adc
push
imul
cld
je
pop
out
ljmp
add
stos
nop
inc
shl
lock
xchg
rorl
pop
mov
popa
ja
sub
outsl
pushf
mov
cli
jno
clc
das
mov
inc
mov
stos
test
mov
adc
and
mov
dec
mov
fwait
sub
dec
popl
push
pop
aam
adcl
xor
push
pop
cld
push
into
xlat
mov
mov
rcl
dec
jns
mov
push
call
pop
adc
xor
mov
push
dec
and
pop
pushf
dec
pop
sbb
adc
nop
enter
add
cltd
cs
adc
push
lods
outsl
insl
rcrb
pop
enter
cmp
jmp
or
dec
mov
testb
dec
in
push
repnz
or
pop
jns
push
jae
stos
mov
mulb
mov
shlb
aam
xchg
incb
mov
sub
push
pop
xchg
les
and
push
push
orb
shlb
stos
es
hlt
daa
test
lcall
push
lcall
mov
mov
clc
aad
sti
shrb
es
stos
inc
les
mov
lds
sbb
mov
xchg
loope
lods
fiaddl
sbb
out
add
push
sub
xchg
xor
mov
cmp
jns
xor
add
jae
pop
mov
xor
decb
das
pop
inc
repnz
in
je
mov
imul
pop
fadd
pop
inc
fadd
mov
hlt
jmp
outsb
add
cs
mov
mov
cmpsb
leave
imul
jmp
mov
filds
cld
scas
mov
mov
cmp
scas
sbb
mov
push
and
xorl
mov
stc
hlt
scas
push
leave
insb
out
imul
lock
xlat
xlat
call
push
push
adc
dec
dec
nop
mov
addr16
insb
jbe
aad
bound
xchg
fs
sub
and
ja
jge
jl
and
scas
push
mov
mov
fwait
inc
out
cs
dec
push
cmp
adc
negl
pop
push
aaa
mov
xlat
cmp
xchg
mov
mov
pop
push
ret
inc
aam
out
pop
imul
into
cmp
jae
ja
pop
pop
es
inc
mov
cmpsb
mov
pop
inc
xchg
andl
pop
bound
lock
mov
add
jae
push
lods
jae
adc
mov
jns
movsb
sub
adc
mov
adc
rcll
sahf
aas
sub
mov
cmc
mov
push
sub
in
inc
sub
pop
jns
movsb
mov
xor
xchg
sti
mov
fwait
rcrb
stc
outsb
adc
fwait
xchg
fwait
pop
out
jg
ds
inc
pop
push
adc
lock
mull
cmpsb
lds
mov
xlat
pop
repnz
xchg
out
daa
ss
push
cwtl
popa
pop
inc
repnz
jb
or
in
dec
jmp
mull
sahf
sbb
jns
into
adc
inc
add
xchg
into
das
or
cmp
push
pop
enter
je
mov
mov
pop
pop
jns
mov
mov
cmp
in
sub
xchg
push
mov
call
insl
sbb
pop
out
shlb
inc
push
shlb
scas
orl
insl
inc
add
ja
je
sub
pushf
je
push
scas
dec
ret
jp
pop
inc
xor
fldt
xchg
xchg
dec
in
insb
xchg
dec
pop
mov
lahf
js
sahf
sub
test
in
sahf
xor
faddp
adc
mov
subb
in
sub
xchg
enter
xor
jge
pushf
aaa
lret
jmp
insb
mov
xor
test
aad
sub
adc
fwait
pop
jge
das
out
ret
mov
js
outsl
sbb
mov
mov
jg
sbb
je
push
push
dec
mov
les
fbstp
pop
testl
jns
lcall
jae
mov
cmp
xchg
dec
mov
ss
sbb
xchg
hlt
sbb
hlt
mov
out
sbbl
sub
ljmp
add
jns
rolb
adc
inc
sub
das
sbb
push
andl
iret
mov
adc
bswap
addr16
sarl
aas
out
push
add
adc
sbb
out
jbe
mov
cmpsl
or
push
out
xchg
fs
push
es
out
bound
pop
fdivr
daa
clc
lret
pop
fstpt
and
push
imul
int3
mov
xchg
jns
and
iret
daa
scas
nop
cmp
mov
ja
pop
sbbb
push
movb
arpl
add
pushf
test
mov
clc
mov
sub
test
add
add
mov
adc
cwtl
je
out
stos
sbb
cltd
adc
xchg
divb
cmp
inc
clc
fcmove
mov
xor
inc
in
ljmp
movsl
mov
ss
mov
mov
call
in
lret
pop
and
out
out
in
aad
push
fidivl
test
mov
add
adcb
rorb
push
cmpl
test
inc
movsl
cmp
movsb
sbb
xor
push
punpcklbw
movsl
lds
xor
mov
xor
dec
dec
cld
rcll
push
sbbl
ret
outsb
arpl
jae
xchg
lea
sub
cmpl
nop
lahf
mov
rol
cmpsb
pop
mov
cld
es
dec
jge
push
and
xchg
jne
ljmp
lea
aam
mov
movsl
in
or
loop
mov
pushf
int
je
scas
into
lahf
out
adc
fildll
inc
das
xchg
add
mov
jo
fsubrs
shr
sbb
sahf
dec
adc
mov
lock
pop
int3
outsl
scas
push
cli
mov
stos
or
add
addr16
clc
xorb
in
pop
pop
jecxz
mov
cli
wbinvd
dec
nop
ret
inc
and
bnd
cld
sub
mov
mov
aaa
adc
jmp
adcl
call
or
arpl
rcll
out
leave
loop
cmp
adcl
inc
cmp
mov
pop
cmp
ret
push
stc
mov
jno
add
aaa
push
clc
adc
leave
mov
lcallw
jns
add
cmp
movsb
add
in
dec
or
sub
les
xlat
dec
ljmp
cmp
scas
icebp
and
dec
clc
scas
sahf
mov
mov
leave
xchg
sbb
xchg
ds
mov
sub
sbb
call
push
stos
js
xchg
mov
aas
dec
scas
shl
add
xchg
xlat
xor
ja
or
lea
ficoml
xchg
inc
xchg
pop
jo
push
in
aaa
xchg
arpl
push
xor
test
mov
sbbb
push
fcoms
and
push
stos
out
fisttpl
jnp
repz
jae
call
fwait
or
out
push
dec
add
fwait
ss
inc
mov
mull
jae
adc
jns
mov
daa
inc
aas
repz
int3
push
ja
sub
add
cs
mov
les
jbe
xchg
xchg
loop
imul
fiadds
mov
bound
sbb
dec
cmpsb
pop
scas
and
sub
inc
mov
and
bnd
pop
lahf
mov
xchg
adc
inc
movsb
ss
aas
jb
test
mov
notb
and
popa
test
inc
stos
add
in
pop
ds
or
out
bound
fnstsw
ljmp
mov
jmp
addr16
jle
inc
push
jmp
scas
cli
push
mov
call
and
jnp
bswap
xchg
pusha
mov
out
add
lret
xchg
test
scas
iret
iret
ret
or
mov
push
mov
pop
loop
rorl
adc
std
jnp
xor
ljmp
mov
xchg
adcl
bound
in
jo
xor
cmp
in
outsb
repz
cmpsl
jecxz
push
pop
jecxz
xchg
push
or
testl
leave
and
inc
xor
sbb
repz
sub
aaa
movsb
mov
xchg
mov
push
push
js
and
ja
jecxz
lds
or
in
leave
mov
testl
jbe
sub
push
xlat
test
xchg
cmp
jle
mov
inc
loop
stc
subl
dec
xchg
in
sbbb
mov
jmp
push
jbe
or
push
push
js
and
and
jno
cli
and
jb
mov
in
pop
mov
fcmove
imul
scas
push
mov
inc
out
xchg
orl
loopne
shlb
cs
sbb
xor
inc
inc
or
int3
clc
or
mov
push
mov
jle
inc
sti
in
dec
and
mov
dec
hlt
xor
sub
jo
out
mov
sti
data16
fisubs
dec
sbb
xchg
and
xor
popa
or
jns
jb
sub
mov
roll
ud2
inc
mov
adcb
jg
inc
ret
call
shrl
xchg
lods
inc
arpl
test
xrelease
inc
lcall
cmpsb
and
insl
push
inc
inc
test
enter
mov
dec
out
ljmp
in
insb
lods
xchg
xchg
mov
dec
mov
pop
clc
sbb
adc
hlt
ret
push
incl
xor
hlt
rclb
dec
mov
jo
sub
sar
lods
lock
pop
out
repnz
xor
iret
lcall
aaa
sub
pop
sbb
xchg
add
xchg
and
jne
scas
inc
or
sarb
mul
int
inc
lds
sbb
mov
xchg
xchg
cmp
xchg
dec
lcall
nop
or
xlat
rclb
test
into
mov
push
inc
pop
cmp
icebp
sub
nop
sti
adc
popa
xchg
adc
int
cmp
sub
xchg
inc
dec
pop
pushf
add
ds
push
jp
out
popa
mov
push
sti
sub
xor
aad
rorl
adc
addr16
xor
pop
xor
insl
inc
fisubs
es
xor
int3
aaa
or
lods
call
add
scas
addr16
inc
or
out
cmp
bound
ret
jl
orl
in
in
ret
push
pusha
test
sbb
popf
repz
push
inc
movsl
sub
ficompl
pushf
lds
inc
jge
mov
cmp
lods
inc
mov
mov
fidivl
popa
push
das
std
push
aad
icebp
inc
or
dec
mov
int
jle
std
mov
fldl
and
imul
test
xchg
stos
insl
or
cmpsl
test
jge
pop
push
call
int
inc
mov
adc
adc
adc
jb
std
push
mov
addr16
mov
sbb
and
mov
lds
fidivrl
je
push
fsts
or
ret
pop
add
pusha
inc
mov
xchg
xor
out
cmp
cli
lahf
jb
into
nop
je
xor
dec
sbb
hlt
mov
addr16
cmc
pop
insb
xchg
xchg
mov
popa
ss
divl
movsl
repz
scas
sub
or
push
or
adcl
pop
les
sub
sahf
sub
jg
or
cld
fidivrl
dec
pop
js
adc
test
or
jmp
std
jne
or
push
and
add
mov
out
cmp
jae
sub
data16
jmp
inc
js
stos
ljmp
push
cltd
mov
negb
push
dec
test
rol
nop
movsb
ss
mov
xchg
sbb
mov
cmp
jbe
roll
inc
daa
cmc
jg
call
xchg
js
mov
jne
lret
push
fcomps
and
jo
and
inc
push
xchg
push
test
xchg
hlt
or
stc
inc
addr16
pop
lods
sbb
xor
out
mov
xchg
xchg
aaa
cltd
cmp
pshufw
outsl
mov
std
xchg
cmc
fsubl
cmovbe
pushl
cld
pop
mov
lea
add
insl
std
push
and
pop
dec
or
inc
ja
dec
stos
repnz
cli
pop
inc
or
cmp
sub
inc
xchg
mov
or
and
dec
and
sbb
lahf
mov
inc
daa
xor
sbb
push
mov
lds
pop
sub
cmp
jns
mov
fistpl
mov
sbb
mov
xchg
out
roll
or
add
mov
mov
and
test
pop
xorb
or
shll
mov
sbb
je
je
xchg
ret
sbbb
mov
sub
mov
scas
rcrl
sub
push
pslld
in
je
outsl
jl
out
sbb
lret
mov
inc
rolb
icebp
add
pop
sub
add
nop
mov
jne
dec
test
xchg
adc
pop
nop
out
dec
adc
dec
sub
or
shrl
repz
dec
sbb
aad
movsb
cld
outsb
xor
xor
cmpsb
bound
fistpl
icebp
xor
rcl
push
icebp
xor
or
divb
jl
mov
in
push
ret
pop
popa
mov
mov
inc
mov
in
adc
dec
push
jbe
call
cmp
jp
push
sub
lea
aas
imul
add
dec
xlat
dec
loope
call
iret
ljmp
xor
jmp
mov
pop
push
loopne
adc
shll
xchg
test
mov
push
mov
jne
sbbb
cltd
dec
subb
xchg
push
call
xchg
xchg
lods
sub
imul
lds
push
in
lret
jbe
adcb
xor
or
in
ret
dec
daa
and
shlb
cmp
mov
add
out
sti
stc
mov
inc
xor
adc
inc
int3
punpcklbw
mov
and
cmp
shlb
daa
inc
loope
sarb
sub
inc
xchg
into
mov
jge
cmp
icebp
shlb
push
or
lods
cmpsb
test
mov
lods
setne
lret
dec
outsl
inc
imul
or
xchg
aad
cwtl
mov
mov
push
or
out
insl
cmovge
pop
or
test
mov
lret
shl
faddl
mov
insb
or
dec
inc
xor
xor
les
lret
movzbl
loop
adc
lods
sub
sub
mov
outsl
insl
mov
movl
mov
out
test
pop
sarl
mov
in
stos
dec
pop
pop
mov
subb
and
ret
gs
loopne
sub
hlt
out
adc
xor
imul
and
adc
sub
jp
aad
lock
inc
dec
nop
arpl
nop
jbe,pn
lods
lods
sti
jne
or
insl
cmpsl
xlat
jb
inc
sbb
bound
hlt
add
jo
rep
dec
int
bound
hlt
adc
sbb
shll
sub
mov
mov
add
xor
pop
imul
push
loope
pop
ja
jp
cmp
mov
add
dec
pop
out
add
outsb
insb
ss
cmpsl
cli
and
int3
or
pop
shlb
push
jge
or
add
test
fcompl
sub
daa
std
inc
int3
push
or
or
dec
pop
mov
push
sbb
adc
sbb
jns
mov
fildl
inc
aaa
push
ds
roll
loopne
mov
cs
stos
push
mov
xor
movsl
in
sub
add
nop
jecxz,pt
push
jnp
inc
mov
dec
ljmp
dec
add
lret
pop
stos
shlb
rorb
jecxz
inc
xor
faddl
cmc
fimuls
mov
scas
jl
notb
lods
mov
icebp
stos
mov
pop
inc
gs
pop
test
sub
or
inc
loope
xor
ss
xchg
fsubrl
in
xchg
mulb
mov
movsb
cmp
ljmp
xchg
cmp
xor
jle
lret
jge
idivl
mov
fisubrs
jo
push
sbb
mov
in
xor
shrl
dec
subb
mov
jl
in
stos
ret
inc
inc
mov
xor
das
repz
sbb
xor
sbb
inc
aas
pop
test
and
inc
mov
out
mov
push
ret
cmp
pop
ret
add
shll
test
scas
lock
pop
xor
imul
sub
mov
jne
cmpsb
inc
push
pop
push
loop
stos
dec
negl
movsl
lret
scas
dec
imul
adc
mov
lea
or
mov
add
or
inc
fiaddl
jbe
push
add
xchg
pop
mov
adc
and
cmp
dec
loope
sahf
jl
dec
dec
push
lea
pop
jmp
inc
out
dec
or
and
fwait
mov
ret
vmread
adc
lea
add
lahf
loopne
shlb
popa
or
pushf
push
or
mov
ret
fbstp
lahf
mov
jbe
aas
push
or
pop
pop
call
inc
nop
or
fstpl
mov
pop
in
dec
std
sub
cmp
das
cltd
int3
jl
ret
cli
pushf
inc
adc
out
outsb
aaa
and
stos
pop
jnp
cmp
mov
xchg
int3
mov
pop
inc
sbb
mov
popf
dec
ljmp
mov
bnd
test
add
jbe
mov
sbb
mov
cmp
cmp
fldl
mov
in
andb
mov
addb
test
pushf
enter
repz
outsb
repz
inc
pop
sti
loop
jo
push
mov
lods
iret
xchg
pop
and
or
jg
mov
mov
pop
wbinvd
sub
mov
or
mov
in
and
push
inc
cmp
add
jbe
and
aaa
movsb
hlt
inc
aaa
in
xor
enter
push
add
and
clc
out
mov
movsb
mov
pop
lods
xchg
mov
mov
sbb
fs
mov
jnp
add
fadd
ss
jno
jae
repnz
sbb
and
add
jg
lcall
stc
lods
outsl
add
test
pop
sahf
jno
push
sub
sbb
push
arpl
jg
add
push
ljmp
mov
mov
fiadds
mov
fisttpl
adc
fwait
pop
out
es
adc
test
and
mov
cs
cld
fcomp
push
out
pop
push
sub
add
dec
xchg
pop
fcoml
fistl
enter
insl
aas
xchg
imul
insl
mov
xchg
adc
imull
rcrl
jge
out
addr16
xor
adc
je
test
inc
sub
addl
mov
pop
testl
pop
mov
jge
loope
daa
enter
in
nop
int3
stos
cmpsl
sub
xchg
stc
push
fldenv
lret
mov
ljmp
movsb
js
cmp
std
in
adc
mov
jae
pop
scas
adc
and
push
or
in
stos
inc
inc
and
and
cmpsl
cmp
cmp
mov
xor
test
ror
rolb
cs
pusha
mov
xor
enter
in
rcl
cmp
sub
cmpsl
aaa
pop
add
sub
pop
mov
push
push
push
jmp
fstpt
push
lock
cmp
cmp
cmp
ss
push
push
loope
cmp
cli
or
jmp
sbb
push
popa
int
cwtl
xor
cmpsl
ret
xlat
icebp
popa
or
jg
leave
es
shll
ljmp
repnz
or
mov
loope
imul
and
jle
nop
shrl
mov
jae
inc
insb
test
fmuls
mov
ret
imul
icebp
mov
stos
rorb
mov
mov
add
leave
adc
repz
and
sbb
and
cmp
fwait
adc
adc
ljmp
call
lock
call
inc
cmp
sub
jecxz
jo
dec
inc
das
push
sub
sub
jl
sub
lahf
bound
insb
loop
pusha
test
pop
cli
adc
push
cmp
cmp
jmp
jmp
inc
cmp
sbb
jno
inc
sbb
mov
mov
jbe
jg
int
call
in
and
out
xorl
lret
and
add
icebp
fsts
sahf
push
xor
scas
mov
and
psraw
mov
aas
das
mov
xchg
inc
fmull
testb
sub
movl
repz
xchg
push
gs
mov
jns
pusha
call
jae
js
lahf
aaa
mov
orb
aaa
gs
pusha
popf
ds
shll
das
jecxz
ret
js
jg
dec
sub
xchg
into
add
add
aaa
fcomi
mov
pushf
sbb
std
pop
pop
or
pushf
imul
push
int3
xor
inc
pop
test
loope
int3
pop
aam
mov
adc
pop
add
fildl
cmpsl
loop
fdivr
jmp
loop
loop
jmp
cmp
out
xchg
sub
sub
push
push
test
xchg
or
icebp
or
mov
mov
jg,pt
pop
xor
inc
pop
push
arpl
addl
mov
mov
aam
mov
mov
lret
push
cltd
lcall
into
adc
test
dec
cmp
pop
cli
cli
movsl
aaa
dec
mov
sub
push
mov
jnp,pn
es
bound
loope
sub
cmp
adc
xchg
sahf
mov
mov
mov
cwtl
jno
je
push
insb
xchg
mov
mov
dec
rcrb
xchg
jnp
sbbb
jmp
mov
jg
push
mov
push
ficomps
push
xchg
fisubrs
sub
in
icebp
xchg
loope
cmc
cmp
daa
and
add
lret
pop
jp
push
xor
aad
sub
sub
jge
test
lock
rolb
pop
jecxz
xor
in
push
dec
pop
stc
in
push
or
lcall
mov
fldt
jns
rcr
lods
loope
pop
pop
push
add
inc
xchg
shl
dec
adc
lods
idivb
cld
mov
add
adc
xor
xor
push
call
pop
ds
ja
xor
or
jge
adc
push
orl
loopne
ds
jmp
xor
loope
ffree
stos
dec
and
test
jle
ret
inc
jne
lds
push
jno
leave
push
aam
push
cmp
cwtl
test
je
out
add
jb
pushf
jp
scas
int3
dec
or
rorl
add
popa
push
push
mov
mov
mov
fcmove
sub
mov
test
jmp
iret
lods
push
iret
pop
das
xchg
and
into
xor
cltd
iret
ja
jne
lret
and
and
cmp
mov
mov
xchg
pusha
dec
jmp
jb
push
pop
fldt
add
jp
aas
leave
inc
data16
or
fwait
lods
addr16
std
sbb
out
das
xor
out
test
sbb
cmp
mov
ret
lcallw
sub
cmp
pushf
je
pop
push
mov
aam
je
pusha
xor
dec
ljmp
jge
bnd
or
cmc
sti
divb
or
fsubs
lock
popa
out
rcrl
divb
inc
ret
enter
push
ja
cld
pop
nop
dec
add
or
jbe
mov
mov
sahf
jecxz
jge
inc
lds
sub
es
mov
call
add
fidivrs
leave
leave
lea
pop
mov
jns
and
cltd
popf
popf
leave
mov
mov
decb
add
xchg
sub
pop
or
fistps
xor
inc
ficomps
shlb
scas
push
out
scas
inc
jae
and
outsb
ret
cmp
in
push
lcall
push
push
jecxz
adc
arpl
stos
push
jge
hlt
xchg
xchg
adc
pop
xchg
fucomi
aad
mov
test
push
mov
xchg
xchg
or
int
xchg
mov
mov
scas
xchg
push
in
xlat
jecxz
sbbb
jns
in
imul
xchg
push
sub
ret
push
mov
fs
push
inc
sub
jne
sbb
or
xor
inc
and
and
mov
sahf
or
sub
add
fimuls
loop
subl
jle
add
clc
movsb
push
cmp
test
rcrb
or
pop
mov
ljmp
pop
push
jecxz
sbb
in
add
jge
inc
jno
mov
jl
clc
test
mov
or
shll
lods
mov
push
jecxz
dec
fs
repz
pop
lds
jae
sub
repz
xchg
pop
jmp
popa
cmp
xchg
mov
mov
dec
dec
mov
pop
push
mov
je
js
push
repz
popf
into
mov
or
jno
shlb
mov
fdivrl
shl
add
lock
out
cmpsb
xor
jb
lds
test
fnsave
inc
mov
ds
ret
dec
std
leave
jp
in
cmp
out
popa
subl
or
test
fwait
cmp
scas
push
jp
scas
push
imul
test
mov
xlat
stc
xchg
mov
int
adc
sbb
sti
and
inc
in
push
movzbl
mov
mov
mov
mov
insb
jmp
mov
popf
mov
push
in
and
sbb
std
mov
leave
sti
xchg
in
or
adc
dec
adc
das
aaa
in
mov
inc
push
pop
dec
repnz
mov
out
mov
dec
xchg
add
ljmp
into
xor
outsl
shlb
std
mov
jg
jne
xchg
or
test
pop
fstpt
push
xchg
lods
pop
jmp
mov
sbb
dec
rcll
mov
xor
jp
and
test
movsb
insl
push
push
ja
mov
jl
subb
jnp
popa
lret
push
es
lock
insl
mov
enter
subl
fstpl
pop
inc
loope
jecxz
and
and
xchg
push
mov
movswl
cmp
stos
xchg
mov
sarb
aaa
and
inc
adc
xchg
mov
adc
sbb
xor
mov
cmp
push
gs
imul
cmpb
scas
inc
rclb
out
imulb
xchg
imul
inc
jge
and
ret
xlat
je
xchg
es
test
fnstsw
shrl
inc
mov
fstps
fs
out
mov
push
stos
mov
call
adc
sbb
cwtl
jle
and
mov
test
push
std
push
jge
mov
pop
addr16
sub
xorb
movsl
mov
sub
subl
aas
mov
in
pusha
popf
cs
push
rcrl
lret
or
sbb
xor
adc
das
jle
jle
aaa
adc
inc
lret
sbb
into
push
dec
jl
data16
sub
cmpsl
xor
bound
iret
shll
hlt
daa
das
into
sbb
psrad
sbb
cmp
xlat
add
push
das
add
lock
decb
mov
mov
shlb
mov
jmp
pop
lret
mov
push
push
xchg
outsl
loop
lods
addr16
stos
aam
jmp
pop
mov
mov
ljmp
stos
bound
in
mov
push
fwait
bound
sub
cmp
pop
jmp
int
xor
inc
inc
push
lods
cltd
int
lret
jge
push
jns
lret
sub
cmpsl
test
or
push
pop
or
pop
sbb
inc
xchg
out
sahf
fldl
sub
sbb
call
lret
cmpsb
call
or
lcall
mov
xlat
testl
and
add
push
add
push
sub
out
movsl
cmp
jmp
lea
and
xchg
add
inc
cmp
xor
inc
or
and
imul
jae
repz
and
leave
lret
mov
ror
cs
add
cs
addl
xlat
xchg
fsubrs
fucom
cmc
pop
inc
es
arpl
sub
idiv
xor
ficomps
aaa
adc
mov
in
mov
fidivrl
xchg
sub
ds
sbb
add
push
test
sbb
outsb
pop
cmpsb
das
out
addr16
jecxz
inc
bound
cwtl
popa
and
jmp
jecxz
mov
add
es
cld
or
out
mov
sbb
inc
push
sbb
mov
jmp
in
xor
xlat
cltd
lods
inc
push
xlat
ds
gs
rcrl
cmp
sub
leave
stc
ja
in
sub
rcrb
mov
dec
jge
pop
jge
xchg
mov
mov
aam
out
add
popa
push
fstpt
jecxz
mov
arpl
mov
clc
call
sub
or
push
jg
movsb
aad
je
cs
cwtl
imul
rcr
or
ss
jne
popa
adc
inc
push
lret
xor
xchg
loope
or
mov
xchg
sub
dec
dec
mov
shl
pop
mov
test
rcpps
test
out
sub
sarl
adc
push
push
in
pop
js
or
lahf
push
movsl
sbb
and
lcall
jb,pt
push
fidivrs
push
jbe
mov
std
icebp
jl
add
movsb
fbstp
fmuls
jb
inc
ficompl
aam
daa
add
dec
jl
and
int
xchg
lods
out
mov
das
jg
sub
ss
rcl
std
lcall
jecxz
adc
add
xchg
mov
fistl
xchg
shll
pop
dec
bound
movsl
lds
data16
mov
mov
jmp
rcrl
movsl
or
aas
push
xchg
jne
cmpps
pop
in
aaa
inc
add
stc
in
dec
or
push
pop
test
mov
adc
adc
or
mov
scas
int
mov
cmpb
and
out
inc
xchg
or
sub
inc
xchg
orb
stc
lds
pop
push
push
les
dec
xchg
testl
js
jns
idivb
mov
jne
dec
jle
sti
mov
inc
and
outsb
out
call
jb
insl
jmp
jo
jmp
into
mov
call
cmp
pushf
add
jp
push
movsb
jg
icebp
sahf
test
fiadds
jnp
or
in
xor
xchg
pusha
xlat
jns,pt
dec
in
adc
mov
jl
add
jo
mov
testb
mov
inc
push
rolb
or
sub
out
adc
cmp
push
flds
add
jmp
mov
enter
inc
xchg
or
xor
leave
sbbb
stc
subb
ret
lods
xchg
dec
and
mov
jp
fwait
xchg
arpl
and
add
sti
inc
mov
pop
aad
mov
divb
jb
pop
xchg
xor
inc
push
lret
inc
scas
jge
mov
call
hlt
neg
adc
inc
fdivs
stos
push
jge
cmp
xor
cld
pop
and
sub
testl
inc
push
or
mov
inc
pop
cld
dec
out
popa
ret
das
das
lsl
xchg
xchg
lods
setle
mov
cmp
mov
cmp
inc
mov
xchg
inc
addb
mov
ss
and
mov
inc
pop
sbb
jl
leave
enter
mov
mov
cs
cmpsb
jge
cmp
aam
adc
pop
xchg
shll
lds
and
negb
pop
cs
sahf
cmc
mov
adc
rcl
loope
test
movsb
push
stc
adc
sbb
jns
inc
lret
mov
sub
js
xor
lret
call
movsl
mov
push
mov
sbb
mov
repnz
popa
mov
std
jae
ds
ret
sahf
and
xchg
or
es
inc
scas
dec
sbb
decb
push
inc
xchg
add
dec
sbb
push
es
test
cli
mov
out
or
popf
push
or
leave
test
mov
int3
xchg
loopne
sub
sarb
cmp
ljmp
inc
jecxz
inc
cmpsb
or
cmp
cmpsl
in
xchg
icebp
inc
je
shrb
mov
xor
mov
pop
out
push
dec
pop
adcb
mov
test
jp
inc
ss
jnp
cmpsb
out
cltd
iret
out
hlt
inc
dec
enter
pop
jno
dec
pop
cmc
push
inc
into
xlat
cmpsl
dec
popf
and
cmp
outsb
mov
cmp
adc
jo
xchg
xor
xorl
insl
dec
lret
add
push
jo
inc
jns
dec
mov
ss
pop
mov
leave
xchg
add
dec
sbb
aaa
sub
dec
mov
sbb
rorb
or
in
cmpb
js
in
sbb
scas
dec
pop
rcpps
outsl
dec
push
lock
mov
dec
lock
push
repnz
mov
in
push
sbb
jns
fsubrp
mov
or
shr
loop
mov
push
or
sahf
je
inc
in
jmp
sarl
push
das
mov
sbb
inc
mov
es
ret
ret
leave
repz
jp
addb
js
aam
pop
gs
into
ret
add
dec
cmc
xchg
pop
adc
xor
sbb
loop
js
clc
cs
ficoml
inc
inc
and
sub
add
aad
mov
lcall
cmp
adc
sub
lods
mov
cs
sub
lds
js
dec
mov
mov
in
sbbl
push
popa
mov
mov
inc
inc
sub
adc
jle
pop
mov
ljmp
pop
and
rorb
jo
jecxz
sub
mov
test
cmp
call
xlat
mov
push
sub
lret
xor
fcoml
xchg
mov
or
cwtl
xchg
decb
insl
jns
push
dec
xor
jmp
xor
divl
rorl
cmp
push
jbe
movsb
jmp
pop
int3
sbbb
adc
hlt
les
orl
in
scas
push
dec
xchg
popf
stos
cld
xorb
add
decb
push
cli
cmc
lock
test
mov
shll
cld
call
mov
push
in
stc
mov
push
sti
jbe
xchg
adc
cs
cmc
push
std
adc
imul
shrl
negb
sbb
mov
and
and
ret
sub
lods
mov
mov
sub
xchg
pop
int
mov
out
pop
repz
push
aam
fistl
mov
stos
out
push
repnz
mov
in
mov
repnz
xchg
mov
arpl
xor
ja
insl
mov
out
negb
gs
test
sbb
xor
inc
cmpsb
jge
or
scas
dec
xchg
push
call
dec
xchg
add
cmc
mov
jmp
nop
xor
test
sub
test
mov
mov
cmp
andb
and
and
out
sbb
pop
cmp
cli
cmp
clc
xor
fildll
push
xchg
rcrl
push
call
scas
xrelease
idiv
insb
xor
xor
mov
adc
jge
mulb
aas
out
lret
sti
rorl
cmp
mov
pop
mov
xchg
loop
push
aam
sub
stos
adc
out
xchg
dec
test
cmp
sbb
cmc
xor
std
ret
pop
repz
adc
insl
call
xchg
ss
idivl
aas
lcall
cltd
inc
xlat
cmp
mov
aam
into
jnp
sarb
jp
pop
inc
jecxz
inc
fstps
add
sbb
mov
mov
andb
xchg
push
sbb
popa
and
sub
in
sbb
dec
jb
lods
inc
popf
push
push
push
fwait
repnz
arpl
add
and
jg
adc
dec
push
nop
push
inc
pop
mov
inc
adc
test
mov
xor
xorb
in
xor
mov
sub
pop
iret
aam
fstp
jl
jbe
stos
push
hlt
or
pop
mov
outsl
mov
popa
iret
in
mov
add
cs
xor
lret
fwait
push
mov
rclb
out
pop
in
lock
jbe
sahf
push
in
or
mov
std
or
jle
testl
sub
inc
lcall
add
jecxz
in
or
and
cltd
mov
mov
add
pop
cs
mov
test
pop
imul
adc
sbb
mov
mov
sbb
stos
cmp
sub
lods
nop
jnp
orb
push
mov
out
loopne
sub
push
sarl
pop
push
push
push
pop
fistpl
or
adc
pop
jnp
xorl
push
clc
icebp
repnz
xor
sbb
mov
mov
lret
es
adc
mov
movsb
cwtl
es
and
adc
cmp
fs
xor
cmp
mov
pop
xor
dec
xchg
repnz
ret
jl
mov
sub
jo
and
jp
sub
dec
popf
xlat
sbb
in
ret
or
cmpl
adc
fwait
mov
cmp
sti
xor
sub
xor
into
icebp
mov
ds
pusha
fstpt
pop
loope
push
les
out
push
sbb
fucomp
addb
xchg
shl
push
adc
adc
out
cwtl
orps
lea
mov
sbb
shl
jb
jp
mov
ja
push
xorb
pop
xor
sub
push
push
sbb
push
xor
stos
mov
push
repz
outsb
mov
out
dec
fldcw
loope
addr16
testb
nop
in
sub
mov
pop
jae
mov
clc
adc
repz
enter
sti
mov
bound
dec
mov
loop
inc
flds
ja
dec
xorps
cmp
mov
push
jg
out
cmp
nop
inc
mov
or
pusha
pop
inc
scas
loop
sbb
lret
jp
ds
cvtdq2ps
int
xchg
fucomip
push
shlb
out
jp
xchg
in
in
push
jg
leave
pop
loope
ss
inc
cwtl
std
and
mov
in
cmp
aas
dec
lds
popf
cmp
jl
pushf
jmp
push
push
movsb
pop
sbb
xchg
es
test
xchg
jno
loope
mov
pop
cld
hlt
je
mov
popf
loop
cmp
mov
pop
mov
fyl2x
out
hlt
add
mov
mov
aaa
cld
movsl
nop
xchg
inc
cmp
xor
test
dec
xor
out
xor
imul
cld
sbb
out
inc
xchg
inc
aas
icebp
mov
and
cmpsb
pop
mov
xlat
icebp
arpl
fcmovnb
inc
push
nop
enter
dec
jnp
dec
les
lods
test
lods
out
inc
loope
ds
mov
js
push
jb
mov
lods
test
pavgw
and
sbb
ja
in
aad
add
jbe
inc
dec
mov
cld
mov
test
adc
addr16
sbb
out
adc
in
sbb
je
stc
outsl
cmp
bound
mov
out
lea
or
lahf
jmp
or
in
or
and
lret
into
sbb
adc
mov
xchg
pop
aas
xor
jecxz
adc
leave
sub
icebp
adc
jno
aad
call
je
inc
loope
or
outsl
icebp
sarl
sti
adc
ds
mov
dec
popf
dec
and
push
adc
test
in
push
arpl
pop
dec
push
cs
ljmp
lcall
out
clc
pushf
adc
inc
jae
dec
out
or
in
ja
xor
icebp
jl
aad
movsl
clc
pop
inc
push
jge
add
cmp
inc
scas
dec
add
mov
int
mov
aaa
test
leave
call
or
stc
addl
xorl
sub
xchg
bound
sub
jo
xchg
loopne
push
int
aaa
mov
inc
jbe
ds
icebp
dec
imul
sbb
inc
stc
jmp
std
dec
inc
rcll
cmp
jmp
xorl
xchg
dec
jnp
mov
dec
aas
mov
nop
push
mov
pop
push
stc
adc
inc
and
or
movntq
cmpb
cmp
addl
cvtps2pd
in
xchg
scas
push
mov
inc
nop
popf
shlb
jmp
mov
jg
mov
sti
mov
inc
loopne
ds
ds
mov
popf
cltd
pushl
fistps
adc
sbbl
push
rclb
shrl
jno
jg
cli
mov
out
adc
mov
inc
sahf
mov
add
adc
add
into
cmp
add
inc
sub
ret
mov
lds
ret
push
aam
pushf
jne
xchg
cmp
movsb
mov
jmp
pop
mov
or
int
enter
jno
mov
xor
adc
mov
outsl
std
sbbb
ja
sub
mov
mov
imull
sbb
or
mov
out
sbb
dec
xor
jbe
dec
mov
dec
into
cmp
fidivl
lret
xchg
mov
test
and
lret
cli
aam
push
neg
insl
sbb
mov
jne
cmpsl
ss
ds
sbb
popa
add
js
jo
mov
loopne
test
xchg
lods
rcl
cs
jge
adc
rol
mov
mov
call
cmp
sbb
mov
push
or
adc
bound
je
gs
adc
clc
mov
movsb
repnz
dec
popf
stos
dec
xor
jp
cli
das
mov
sahf
stos
shr
push
pop
add
out
das
movups
out
dec
xor
clc
popa
xor
out
add
in
push
add
mov
out
es
mov
std
enter
dec
xchg
mov
aam
lret
cmp
push
repnz
mov
push
bound
call
lods
pop
sarl
shl
mov
push
xchg
fwait
cmc
cld
and
pop
push
or
cmp
int
loope
add
lds
xor
movsb
adc
arpl
adc
mov
ret
and
dec
sbb
push
popf
scas
inc
cmp
xor
repz
jno
loop
mov
mov
xlat
mov
mov
rcll
jb
push
mov
or
stos
adc
adc
popa
and
les
sti
ret
cmc
rclb
test
push
xchg
xor
inc
adc
pop
lret
aaa
ds
xchg
mov
rclb
gs
fildll
sbb
mov
jnp
das
pusha
mov
leave
es
test
sub
fdivrl
movsb
or
fwait
scas
fistps
jns
lcall
movsb
push
dec
sub
push
into
inc
xchg
push
jno
push
lcall
inc
sub
adc
or
test
out
lods
sub
jo
jnp
mov
pop
fdivs
fldl
xor
and
jg
pop
roll
hlt
lahf
insb
xchg
or
arpl
ja
lock
sub
pop
or
dec
int
xor
fldt
lret
push
cmp
movsb
dec
imul
cmp
bound
cmp
sub
push
jmp
or
mov
pop
lods
adc
xor
adc
xor
ja
xor
sub
ret
fwait
dec
xor
xchg
lret
push
jbe
imul
adc
push
pushf
leave
lock
cmp
and
jno
jmp
call
jp
ret
adc
and
cmp
scas
jne
mov
ficompl
jle
std
mov
mov
xchg
ss
cmp
mov
pop
inc
fisttps
jb
xor
mov
jns
aas
jge
mov
mov
pop
mov
pop
xor
mov
ja
pushf
or
lcall
and
cmc
push
jnp
add
xchg
sub
pop
leave
flds
or
and
mov
jbe
jmp
aam
das
or
cmpsb
es
loop
int3
and
sub
inc
push
lods
push
hlt
pusha
dec
sahf
icebp
daa
mov
xor
popa
mov
cmp
sub
std
jecxz
jmp
ja
test
xchg
aad
cmpb
aad
add
loop
mov
push
sbb
mov
cmp
mov
addr16
divb
mov
popa
jp
push
fadds
xchg
imul
cmp
aam
inc
sbb
outsl
or
or
sti
aaa
sbb
idivb
xchg
sbb
dec
and
sbbb
add
aam
jp
int
jmp
xchg
push
xorl
lds
cmp
addb
sbb
lds
push
addb
cmpsb
loope
sbb
jge
rcl
sub
or
jl
push
and
fwait
in
mov
push
mov
lret
icebp
rcrl
jmp
outsl
jo
data16
mov
mov
add
sbb
sbb
imul
push
lds
dec
ffree
cmp
mov
jbe
mov
push
mull
fucomi
mov
mov
mov
call
movsl
pop
and
fmulp
and
add
mov
shlb
inc
xlat
addr16
fs
out
sbb
mov
lret
inc
push
jle
aad
mov
sbb
stos
pushf
fwait
cmp
cmp
add
rcrl
nop
xor
in
cmpsl
sbb
sbb
and
push
sbb
push
xlat
push
mov
ret
loopnew
lods
push
in
mov
pop
adcl
daa
mov
cmp
cs
xor
out
movsb
push
bound
aad
xchg
hlt
test
pusha
and
mov
cmpsl
inc
fstl
rolb
cmpsb
mov
scas
xor
lret
cmp
aam
push
mov
lahf
mov
dec
fs
sub
xchg
push
add
in
jle
loope
andb
mov
test
pop
inc
sbb
xchg
adc
insb
or
cmovno
sub
out
adc
andl
mov
push
xchg
movsb
ret
insl
mov
rolb
mov
pop
ret
mov
daa
lcall
jae
xor
cltd
ror
xlat
insl
out
rolb
bound
inc
ss
shlb
jbe
xorb
mov
in
cli
in
addl
scas
push
imul
js
fcoml
std
je
xchg
mov
pusha
adcb
sub
in
add
je
lahf
mov
dec
loopne
mov
iret
std
data16
push
xchg
dec
shll
ljmp
leave
dec
daa
mov
jbe
inc
in
add
adc
into
jmp
jmp
adc
mov
insl
xacquire
inc
cli
out
cmp
or
mov
or
ja
ficompl
jb
popf
fs
psubusb
daa
cli
sarl
mov
mov
inc
xchg
das
imul
repnz
jbe
jg
ss
mov
push
jge
push
les
inc
xor
pop
inc
pushf
mov
pop
mov
sbb
stos
or
mov
in
jae
in
cmp
sbb
mov
mov
mov
enter
call
popf
xor
xchg
lcall
xor
loop
push
in
out
iret
movsb
out
repnz
xchg
mull
inc
stc
dec
fsubl
push
pop
mov
cmp
out
mov
loop
movb
pop
or
sub
sbb
adc
call
std
ja
lock
jnp
call
mov
int
pop
lock
aam
int3
pusha
inc
xorl
rcr
jg
sub
sub
insb
outsb
push
push
ret
jns
or
mov
lret
sti
popa
andl
mov
push
icebp
cmpsl
gs
mov
jnp
sbb
pop
lds
hlt
xchg
cltd
out
ss
int3
xchg
pop
sbb
xchg
test
jo
xor
xor
mov
arpl
and
in
inc
leave
dec
jg
jecxz
int
dec
mov
xchg
xchg
out
js
push
shr
add
fsubrl
and
stos
gs
sub
in
pop
push
fimuls
sbb
xchg
pop
jge
add
pop
jl
or
mov
stos
sub
ficomps
rolb
std
add
and
mov
mov
inc
add
movsb
xchg
sbb
lds
jle
or
ficompl
jl
ljmp
xor
adc
xchg
lods
lds
jmp
mov
inc
add
in
dec
dec
movsl
inc
aam
ljmp
shl
and
mov
sbb
adc
xor
jae
inc
fcoms
cmp
xchg
mov
push
fisubrs
xor
jbe
mov
mov
jne
scas
inc
sbb
ret
sub
cli
sub
jbe
or
out
sbb
xor
dec
pusha
test
insb
pop
cmp
lea
test
dec
pusha
cli
sub
lret
icebp
ret
xchg
sarb
push
mov
roll
jbe
jbe
and
xchg
les
adc
cmp
decb
mov
mov
sbb
push
std
stc
adc
mov
sub
push
repnz
lock
adc
loop
cld
mov
push
and
and
mov
test
xor
mov
xlat
or
cmp
div
inc
xor
mov
xor
jae
mov
out
add
rcrb
sub
lahf
fldt
jmp
cmc
dec
or
mov
lcall
xor
jl
mov
out
jmp
xor
pop
jmp
sub
mov
cmp
lock
or
loope
push
mov
lock
mov
push
jns,pn
or
iret
fisubrs
or
push
iret
pop
ss
es
stos
and
push
stos
repnz
push
xlat
lods
shrl
ja
mov
push
sub
mov
filds
push
and
jae
dec
push
ss
adc
sub
pop
out
popa
test
pop
add
pop
push
cmp
psrlw
jp
ja
jns
mov
dec
test
mov
pop
or
pop
aad
imul
or
sub
call
sub
sbb
lret
es
or
aaa
xchg
jno
sbb
dec
stos
fwait
or
adc
in
mov
les
add
push
jge
mov
push
xchg
lahf
outsl
loope
in
out
sbb
dec
mov
cwtl
aam
mov
cmp
test
sub
addr16
into
mov
rcrl
jp
sub
xchg
mov
cmc
stos
je
push
or
ret
mov
inc
inc
in
cmpsl
and
mov
jno
push
push
repz
out
pop
jo
or
lret
subb
inc
adc
fisubrl
in
movsb
xorb
sub
fldt
sbb
push
xchg
sbb
jecxz
mov
sbb
push
xlat
pop
in
cmp
call
mov
adc
add
aaa
xchg
loope
push
in
mov
shrl
fsubrs
clc
ds
dec
mov
cmpsb
sahf
cmp
clc
sub
shlb
push
int
xor
and
jp
sbb
cli
add
push
cmp
negl
dec
or
xchg
cmp
dec
ret
aam
test
leave
fcomps
dec
or
dec
mov
push
jnp
fildll
mov
or
and
push
aad
daa
das
jno
xchg
pop
outsl
ljmp
leave
mov
in
jge
das
popa
pushf
les
mov
cld
rorl
in
das
sbb
mov
lods
and
sbb
imul
sub
or
lods
add
xchg
imul
jp
mov
push
in
lods
sbb
inc
xor
arpl
js
mov
in
sub
aaa
aad
push
mov
ret
xchg
inc
mov
lret
sbb
daa
jmp
dec
adc
jge
sub
shr
sbb
sahf
lcall
dec
mov
jnp
sahf
mov
jae
cld
lcall
or
fstpt
cmc
dec
adc
imul
xchg
or
or
in
shlb
push
adc
pop
test
mov
call
cs
and
xor
repz
adc
push
xor
repz
jmp
sub
xlat
js
aaa
mov
mov
cmpsl
jb
jae
lods
int
in
jb
mov
pusha
cwtl
leave
mov
lret
sahf
mov
cmp
or
mov
cmp
pop
sarb
rcrl
pop
addr16
cmp
jb
es
xor
dec
sahf
mov
ds
fcmove
mov
sar
cmpb
or
lcall
aam
lret
test
push
pop
jle
das
pop
cmp
inc
mov
mov
outsb
rorb
push
rcr
push
loopne
jmp
decb
in
loopne
imulb
xchg
push
mov
cmovbe
lea
rcrb
fwait
push
out
cmp
mov
hlt
leave
pop
mov
xor
movsl
fdivl
xor
inc
movsb
ret
cmp
sti
out
iret
bswap
mov
or
xor
xchg
cwtl
repnz
aaa
stc
push
test
jg
sbb
orb
in
popa
jbe
iret
pop
aas
inc
xor
call
test
mov
out
push
scas
dec
sbb
xlat
adc
jmp
xchg
or
and
aad
mov
mov
push
dec
movsb
cs
icebp
and
addl
push
jae
jb
cs
stos
push
jb
popa
out
inc
lret
xor
test
repnz
add
push
cmp
mov
rorl
inc
add
lds
mov
mov
sbb
add
inc
jg
icebp
dec
lret
js
imul
and
mov
add
mov
inc
pop
mov
mov
sti
out
pop
loop
cmp
sbb
mov
xor
adc
mov
dec
inc
in
sub
inc
movsb
mul
aam
xchg
std
movsl
xor
insl
icebp
and
das
std
out
sbb
dec
jbe
cld
pop
clc
push
adc
aam
iret
jmp
and
daa
sub
pop
cmp
in
int
cmc
aaa
loope
jo
clc
dec
xor
pop
push
xor
mov
orl
xchg
stos
cmp
scas
das
dec
sti
les
xorb
das
jbe
in
shrb
sub
mov
int
xor
sahf
xor
fstps
leave
repz
mov
call
or
mov
aaa
jmp
add
or
notl
xor
in
push
jno
jmp
inc
fmull
push
imul
xchg
dec
das
mov
cmpsb
lea
jmp
mov
push
stos
sbb
and
inc
mov
inc
xchg
insl
sbb
in
lock
sub
push
imul
add
xor
cmpsb
pop
outsl
std
adc
mov
inc
sub
insb
dec
inc
sbb
mov
leave
xchg
mov
cmp
shrl
into
xchg
mov
cmp
call
ret
shlb
data16
and
or
pop
sub
sbb
jmp
es
push
fists
negl
xchg
mov
notl
pushf
lock
xlat
rol
jmp
iret
leave
xchg
xchg
sub
or
jno
in
sub
cwtl
call
sbb
add
loop,pn
lds
and
sbb
loope
mov
roll
scas
xchg
sub
lea
jns
fmul
mul
inc
xor
add
imul
pop
stos
push
test
xlat
pusha
ret
mov
fiaddl
ljmp
dec
inc
popa
cli
bswap
or
sub
sbb
mov
daa
and
add
push
inc
movsl
in
adc
lods
sub
int
out
inc
sbb
call
jmp
mov
std
hlt
insb
repz
inc
xchg
pop
xchg
insl
jmp
xorb
xor
addb
lea
lock
lds
imul
inc
jl
ss
xchg
cmp
cmpsl
or
sbb
stos
iret
rorl
push
jge
push
icebp
push
fstl
shlb
lods
inc
adc
xchg
aaa
mov
jle
aaa
pushf
inc
clc
mov
dec
xchg
jnp
jge
loopne
pxor
icebp
sub
dec
scas
pop
rclb
push
iret
sti
std
push
mov
inc
or
imul
gs
fstpl
add
push
sbb
sar
push
ja
shr
js
fiadds
push
cmp
in
addr16
pop
mov
sbb
mov
jle
aaa
lahf
mov
sub
cmp
mov
das
cmc
xor
out
lcall
mov
dec
push
add
cmpsb
xchg
in
fildll
rcll
mov
lret
lret
fcomi
arpl
sti
jl
fcom
lock
in
pushf
mov
rclb
outsl
lock
dec
outsl
lock
xlat
inc
pop
dec
not
notb
stos
inc
pop
jecxz
pop
es
cwtl
pop
or
adc
xchg
xchg
nop
cmp
inc
stos
add
mov
sti
les
imul
aaa
jecxz
lahf
and
test
jae
and
pop
push
push
insl
rcrl
sbb
clc
add
and
add
shll
out
in
pop
insl
scas
jns
pushf
mov
insl
insl
nop
add
and
xlat
hlt
int3
mov
lods
stos
xchg
jecxz
cmp
xchg
sub
in
subl
and
lahf
and
mov
test
or
mov
cmpsb
push
jl
test
xchg
stos
bound
shlb
sub
mov
int
out
mov
and
jno
inc
sarb
in
rorb
mov
pop
fmul
xchg
scas
push
into
lea
cmpsb
xor
xchg
sbb
mov
in
xchg
inc
fmull
imul
lret
push
out
or
fmul
leave
insb
mov
aam
mov
mov
stc
add
out
lret
scas
push
into
fnstcw
scas
imul
out
adc
imul
inc
out
outsb
and
xor
push
mov
jnp
out
sbb
or
in
dec
jg
scas
sub
popf
push
mulb
mov
outsl
jo,pt
subb
xor
jmp
jo
pop
sti
pop
sbb
adc
mov
pop
or
lret
out
loop
lea
loopne
rcll
push
popf
mov
mov
mov
add
inc
push
lea
adc
pop
ret
push
push
loope
adc
mov
packuswb
xchg
ds
data16
and
inc
sbb
pop
cltd
cmp
loope
ja
inc
cmpsb
andl
popf
jle
mov
das
jecxz
cmc
add
mov
adc
stos
inc
int3
out
sbb
jae
or
insb
pop
lds
ja
sub
pop
mov
incb
daa
push
repz
lret
mov
adc
sbb
push
add
ret
lcall
lds
add
pop
mov
sub
out
adc
sbb
inc
sbb
sub
cmc
pop
dec
inc
nop
adc
adc
enter
in
daa
jl
xor
in
icebp
into
ret
aaa
int
nop
call
cmp
arpl
dec
jmp
scas
push
or
lret
stos
cmp
mov
push
sarl
mov
inc
into
jnp
hlt
outsl
movswl
shrb
out
sub
push
jecxz
sub
dec
inc
push
rolb
sbbb
test
jmp
adc
lret
ds
push
push
out
sub
pop
leave
filds
or
imul
cmpl
fnstcw
sbb
mov
scas
xchg
out
xor
ds
gs
mov
ja
sub
add
dec
out
clc
jmp
sbb
pusha
sahf
jbe
mov
outsl
nop
ficoml
sbb
add
add
cs
stos
push
scas
in
stc
divl
cs
pop
dec
mov
mov
iret
or
popf
mov
test
xchg
inc
mov
inc
rcrl
fistps
ret
insl
ret
xor
ss
push
cmpsb
or
sub
adc
stos
adc
inc
imul
cmp
push
cmp
adc
arpl
test
test
xor
or
pop
mov
cltd
shll
cmp
and
or
and
jns
sub
ret
dec
loope
shld
or
sarl
xor
icebp
adc
pop
mov
pop
xor
adc
flds
inc
lret
inc
loope
test
daa
test
push
dec
lret
mov
push
cmp
mov
cmp
sub
sub
pop
push
mov
ds
jne
jae
jnp
pop
int
ror
hlt
sub
adc
aaa
xor
jns
jnp
cmc
cmpsb
inc
vpsrad
cmp
loopne
cltd
cmpsb
clc
mov
stos
das
or
mov
add
pop
pop
xchg
movb
roll
push
cwtl
dec
scas
pop
lods
cmpsb
push
sbb
inc
jns
push
mov
mov
andl
and
or
sub
push
loop
shlb
fcmove
lcall
add
negl
push
das
mov
mov
sub
inc
pop
fdivr
cld
stos
test
pop
cmp
xlat
loop
push
mov
adc
xor
aas
jns
add
fdiv
lock
mov
fcmovne
jmp
rorl
sti
jmp
mov
je
dec
pop
pop
jg
pop
jg,pt
pop
js
add
sub
sub
les
fsubs
in
fsubs
in
fsubs
in
fcomps
in
fcomps
in
fcomps
in
fcoms
out
sarl
das
in
or
das
out
or
das
icebp
or
das
repz
sub
mov
cmp
aas
lret
sbb
aas
les
cmp
jb
iret
arpl
and
add
andb
scas
iret
iret
ret
inc
inc
jnp
aaa
mov
sub
test
stc
pop
ss
movntq
jmp
cmp
xor
lret
xchg
ret
add
xchg
mov
xor
mov
add
addr16
popf
hlt
jno
dec
add
or
cltd
cs
cmp
iretw
mov
scas
in
jb
pop
nop
shlb
ja
incl
dec
dec
das
outsl
xlat
pop
stos
iret
pop
mov
fmuls
mov
fistps
add
jmp
push
mov
lcall
mov
jne
mov
inc
jo
or
xor
lock
fnstsw
in
es
and
ljmp
hlt
mov
pop
push
mov
mov
xchg
xor
into
sbb
scas
push
icebp
in
and
jnp
ljmp
ret
cmp
jae
xor
fsts
or
sahf
push
mov
fists
inc
adc
cwtl
in
fwait
ja
mov
lcall
out
pop
add
out
lahf
mov
cmpsl
stc
inc
mov
or
pop
mov
test
pushf
and
outsb
nop
imul
mov
mov
pop
aaa
mov
mov
in
inc
xchg
ljmp
and
or
gs
mov
mov
pop
mov
aaa
in
cmp
dec
sub
mov
xchg
insl
or
js
cs
or
add
pop
dec
or
xor
bswap
ss
outsb
movsb
fnstenv
add
dec
pushf
leave
test
dec
popa
test
push
or
inc
test
insb
sar
push
jnp
divb
andl
jmp
jl
jecxz
pop
inc
jp
movsl
fs
cmp
xor
data16
push
sbb
jnp
add
mov
or
jp
jmp
mov
lahf
lret
gs
shlb
insl
xor
xor
xor
or
mov
mov
shlb
out
jp
fs
sbb
enter
lret
push
cmp
xor
inc
hlt
dec
ds
das
pop
push
rolb
or
push
mov
cmp
push
adc
test
movsb
hlt
int3
jb
mov
lcall
out
test
jbe
adc
jle
adc
lahf
push
aas
jp
es
sbb
pop
lahf
dec
pop
mov
mov
cmp
mov
test
sti
jo
xchg
push
inc
pop
fdivrl
jp
popa
imull
mov
out
nop
mov
push
push
clc
insl
hlt
pop
mov
sub
js
inc
push
or
movsb
add
rcr
xchg
mov
push
push
andb
jmp
mov
ret
xor
mov
loope
push
push
fadds
imulb
push
fiadds
stos
inc
adc
loop
jl
sbb
pop
jae
mov
iret
adc
xchg
mov
xchg
sbb
sbb
jb
mov
pop
cmp
cmp
dec
pop
movsl
inc
sti
pop
jo
cmp
adc
sub
test
out
loope
ret
add
add
sub
jne
jno
inc
andb
out
mov
faddl
xor
into
pop
in
ds
icebp
mov
sbb
inc
out
popl
fildl
leave
cmp
add
cmp
add
cmp
add
cs
cmp
inc
cmpsl
jecxz
mov
dec
ret
loope
jmp
rol
repz
repnz
and
add
clc
ljmp
aam
test
cwtl
cli
mov
rcrl
mov
cltd
pop
lock
pop
lock
pop
jle
mov
scas
xchg
fisttps
stc
mov
ret
int
les
mov
jg
or
jbe
xor
sbb
cs
loop
in
adc
jle
xor
jb
icebp
fistpll
jg
ret
push
dec
sbb
out
or
fistpl
xor
and
sbb
fsts
cli
jno
inc
sbb
mov
and
or
lea
call
dec
jle
add
lcall
jecxz
and
pop
mov
push
xchg
inc
pop
ja
xor
ss
mov
jnp
push
out
sarb
ljmp
jge
rclb
pop
into
and
or
lock
push
jecxz
aaa
sbb
mov
sbb
movsl
or
mov
and
ss
mov
cmpsb
or
mov
out
xlat
data16
rclb
je
or
imul
ficomps
cmc
cmp
lret
cmovo
inc
daa
pop
xchg
shrb
xchg
pop
loop
push
pushf
lea
xor
xor
sub
push
mov
pop
push
mov
xchg
push
jp
sahf
or
shrl
sub
out
xchg
jecxz
aad
cmpsb
and
sti
xchg
pop
mov
fbstp
orl
adc
jp
inc
es
xor
sti
repz
inc
sbb
adc
popl
xor
pop
lcall
sti
push
xor
xor
dec
sbb
movsl
cmp
sti
sub
lcall
mov
jb
cmpsb
fistpll
dec
call
addr16
sbb
inc
sbb
and
cmpsl
mov
cmp
stos
ljmp
sub
testb
iret
aaa
lods
mov
push
inc
fstpl
je
lret
push
imul
aad
imul
mov
adc
jae
pop
out
push
pop
std
imul
push
xor
inc
enter
jp
outsb
cmc
ss
sub
push
loopne
cwtl
es
sub
repnz
lock
loop
insb
js
inc
push
xor
imul
or
mov
push
jns
je
add
mov
stos
out
mov
and
fisubl
cmpb
inc
mov
cmp
jbe
mov
mov
mulb
in
movsl
sti
shrl
xchg
jle
xor
mov
inc
mov
sti
sub
fldenv
stos
repnz
es
mov
pop
movsl
jl
pop
sbb
dec
or
arpl
and
inc
in
add
mov
fisttpl
xchg
fnstcw
inc
mov
imul
mov
add
mov
jmp
or
and
ret
and
or
dec
pop
mov
pop
xchg
fpatan
inc
xchg
std
cmc
lock
in
push
test
in
mov
lret
adc
popf
mov
adc
pop
scas
xor
das
das
icebp
ds
xlat
cmp
std
rol
cmp
or
and
dec
or
filds
lret
jmp
jbe
push
mov
sbb
insl
scas
pop
and
jb
scas
adc
idivl
sub
pop
add
in
mov
push
xchg
sarb
cwtl
roll
or
pusha
ret
aaa
cmp
shll
cmpb
dec
call
jb
inc
mov
push
xor
incb
xchg
cmpsb
and
jne
cmpsl
or
call
cmp
pop
inc
aam
into
stos
xor
add
jl
push
mov
inc
sbb
xchg
std
xor
push
movsb
or
outsl
les
aam
test
popa
cmp
xchg
mov
popa
or
adc
por
xchg
pop
dec
rcr
xchg
adcb
int3
dec
ss
fxch
sar
adc
dec
and
mov
clc
adc
lock
fwait
imul
jb
clc
out
aaa
loope
pop
xchg
pop
into
mov
jg
jae
inc
mov
cltd
and
xchg
pop
mov
mulb
addl
sti
cmpl
in
adc
rolb
xchg
xchg
les
fwait
daa
xchg
mov
or
data16
das
fistpll
addr16
cmp
arpl
push
and
xor
cs
sub
and
mov
popf
inc
add
mov
cli
repz
sbb
iret
iret
outsl
jecxz
nop
or
ret
popf
sub
mov
mov
cmp
dec
in
adc
test
mov
push
mov
mov
fwait
aaa
add
sbb
in
adc
in
stos
or
insb
out
in
pop
cmp
ret
lods
adc
scas
leave
mov
mov
inc
add
push
repz
adc
mov
add
aad
aad
pop
test
icebp
insl
dec
sti
mov
pop
xor
jnp
fsts
popf
int
mov
jg
fs
mov
popa
mov
xor
jmp
mov
mov
sbb
ffree
out
inc
dec
jmp
or
rcll
mov
inc
xchg
dec
hlt
jbe
cmp
je
ret
daa
cmp
cmp
pusha
cmp
pop
mov
bound
xorb
push
adc
cmp
add
daa
xchg
jne
ljmp
dec
aas
mov
rcrb
clc
and
xor
sub
ljmp
mov
aaa
inc
shrb
xorl
addl
aam
lods
push
and
adc
into
fcmovnu
jns
into
mov
ja
pushf
sti
pop
fcompl
xchg
leave
xchg
sbb
sub
push
sbb
push
insb
cmp
adc
or
out
in
dec
dec
mov
inc
push
xchg
iret
jne
sub
daa
push
mov
xchg
mov
pop
pop
mov
and
sub
loop
in
lods
movsl
test
xchg
mov
or
out
mov
sub
sbb
pop
xor
lea
push
or
cmp
sub
mov
movsl
es
inc
lret
or
inc
xchg
adc
iret
cmp
test
jbe
js
mov
and
daa
out
popf
movsl
fldcw
push
shlb
movsb
mov
out
and
pop
push
shlb
adcl
scas
mov
stos
jl
xchg
adc
fimuls
fwait
sub
xchg
push
xchg
in
sbb
and
push
scas
mov
push
sub
cli
cmpsl
test
adc
mov
mov
pop
sbb
loope
sarl
or
clc
adc
sub
push
push
int3
incl
xchg
push
pushf
xchg
int
and
js
aas
cmp
enter
call
hlt
sub
pop
nop
fucomip
push
loopne,pn
sar
xlat
pushf
mov
dec
ret
inc
cmc
mov
ret
insl
insb
mov
jo
pushf
jle
and
decb
rolb
push
ret
aaa
xchg
sarl
fcomps
hlt
jl
inc
lods
int
rcl
cmpsb
pop
mov
out
mov
jae
pop
pop
ret
out
scas
fwait
outsl
dec
and
cld
daa
pop
lret
loope
ret
insl
andb
les
add
outsb
push
mov
sub
cmp
xchg
and
xchg
ret
shrl
and
cmp
jbe
aas
mov
pop
hlt
adc
out
out
xchg
pop
or
mov
testl
enter
loop
test
xchg
cmp
ljmp
stc
sub
gs
imul
push
jno
cmp
jns
mov
lahf
mov
out
mov
xor
dec
push
out
dec
pop
sub
cs
mov
mov
cmp
xchg
popf
sub
loope
mov
cs
sbbb
jns
or
jmp
aas
cmp
imul
push
adc
sub
lret
and
xchg
and
rorl
fucomi
in
dec
push
lock
mov
adc
xor
sub
mov
adc
mov
lods
je
stos
cli
mov
imul
subb
and
push
inc
ret
shr
icebp
mov
pop
lock
stc
mov
clc
andb
lds
das
add
mov
insb
mov
shrb
pop
or
call
cmovl
dec
repz
xchg
and
out
pop
pop
mov
cmp
adc
pop
nop
ret
into
mov
push
dec
cmc
mov
ja
push
sbb
rcl
daa
outsl
dec
cmp
add
sub
lds
push
or
pop
or
imul
xchg
or
andb
or
pop
xchg
leave
add
xorb
imul
and
fadd
adc
dec
out
pop
cmp
out
in
adc
jae
mov
aam
mov
xor
ret
out
mov
push
sbb
add
jmp
orl
xlat
aad
cmpsl
in
pusha
call
dec
mov
enter
int
popf
jbe
mov
js
mov
sti
push
test
mov
and
add
add
pop
cltd
scas
mov
mov
mov
fistl
mov
push
stos
push
or
and
xorb
pop
xor
add
sbb
stos
cs
lret
into
sarb
push
aam
jp
or
cmp
iret
out
or
sub
jo
add
mov
and
mov
xor
sbb
ljmp
dec
rorl
nop
mov
clc
jmp
inc
pop
lcall
out
ljmp
lret
outsb
ror
arpl
rorl
imul
fldenv
mov
xor
adc
jmp
lret
scas
xchg
stos
inc
sbb
in
and
inc
or
shl
mov
fwait
push
int3
daa
jl
call
dec
jp
jmp
push
cmp
sub
sbb
cld
pushf
in
ja
loopne
aam
sub
or
cld
cwtl
addb
and
repz
dec
push
inc
or
and
aas
fldl
sahf
adc
mov
or
add
lods
or
scas
push
sub
cli
sbb
inc
add
mov
es
and
mov
cmp
jp
je
cmp
sarb
pop
and
pop
cs
ret
in
test
cmp
rcr
pushf
xor
xchg
mov
mov
pop
rol
mov
psubd
xchg
repnz
das
cli
dec
mov
xor
aas
ret
sbb
in
pushf
pop
dec
push
in
repnz
or
inc
mov
enter
adc
lods
lea
mov
negb
push
sbb
lcall
mov
lret
sti
dec
jmp
fwait
icebp
xlat
pop
jo
mov
dec
xor
cmc
jp
dec
adc
mov
jns
xchg
push
or
jns
add
gs
cmc
jno
cmc
shr
mov
cli
cmp
or
sbb
add
outsb
fwait
lods
pop
in
xlat
sarl
inc
rorb
mov
dec
cmp
xlat
insl
mov
mov
jecxz
lock
mov
repnz
fs
ret
fistps
aam
pop
out
add
in
inc
lods
jle
sub
sub
xchg
add
sub
lock
add
pop
out
fwait
lret
scas
mov
lcall
dec
mov
cmp
popf
imul
mulb
jle
xchg
rorl
push
xor
fs
jg
xchg
cmp
call
imul
icebp
andl
or
cmp
pop
xchg
inc
pop
pop
inc
bound
sbb
fsubrl
sub
and
ds
sbb
and
lds
xor
mov
sbb
xlat
pop
imul
int
dec
mov
jl
mov
cmp
mov
and
or
pop
pop
mov
xorl
xchg
xchg
cli
out
mov
or
add
add
xchg
mov
cmp
jp
ret
rcrl
jbe
push
cmp
dec
sbb
insl
loopne
test
and
mov
or
test
sub
aas
xor
push
into
add
icebp
ja
mov
sti
insb
dec
aaa
int
inc
pop
ret
push
lods
insl
dec
push
push
mov
xchg
add
inc
mov
clc
mov
cltd
pusha
das
cs
xchg
mov
inc
or
xlat
jmp
and
arpl
gs
mov
mov
subl
sti
pand
xor
loopne
adc
bound
mov
fnstsw
popf
fsts
repnz
cmp
pop
jae
and
cmp
sbb
sub
in
sbb
inc
mov
pop
jmp
inc
movsl
sub
negl
cmp
out
iret
adc
jno
fidivrs
rolb
lods
sti
mov
or
dec
mov
lods
push
adc
push
mov
dec
xchg
mov
mov
xchg
mov
xor
inc
into
subl
mov
es
pop
or
loopne
fisttpl
mov
mov
jmp
leave
jbe
add
xchg
shlb
sub
cmp
in
sbb
dec
repz
test
lods
icebp
inc
sbb
lea
movsb
dec
dec
fdivrp
mov
sbb
inc
mov
xorl
scas
mov
pop
xor
mov
sub
sub
pop
out
imul
ss
lret
cli
lods
add
mov
cli
cmp
test
repnz
jg
repz
mov
leave
sbb
decb
sbb
int
jae
dec
mov
jmp
and
inc
shl
mov
scas
imul
das
jnp
fcmovb
xlat
repnz
ficompl
aas
adc
pop
lret
jno
sahf
add
xchg
add
cld
sub
inc
push
in
enter
mov
mov
mov
rorb
cs
shrb
lea
xchg
xor
or
mov
xchg
data16
cs
add
sbb
ja
jmp
ret
fiadds
or
call
add
cmp
ret
and
push
adc
lods
insb
mov
ja
dec
cmp
pop
movsl
fninit
push
inc
jg
push
cltd
fcmove
daa
mov
jb
push
sub
adc
sbb
out
jae
ss
scas
xchg
mov
stos
push
adc
push
cmp
divl
xchg
lahf
out
cwtl
lods
adc
mov
jg
cmp
sbb
test
jge
pop
sbb
aaa
icebp
out
decb
xor
or
mov
mov
cltd
in
jne
mov
jo
addr16
cld
cs
add
and
pop
stc
sahf
out
hlt
jl
push
push
push
mov
stc
push
add
imul
xchg
jbe
jp
pusha
ss
mov
pop
lret
mov
jne
add
sub
dec
ljmp
or
sub
dec
mov
mov
cmp
loope
outsl
hlt
aam
dec
xor
les
in
std
dec
jmp
lea
addr16
sub
sub
aaa
pop
adc
mov
jbe
inc
jecxz
call
sub
and
cs
add
sbb
mov
inc
pop
sbb
and
pop
adc
shr
data16
xchg
adc
push
clc
pop
leave
movswl
loop
jmp
pop
xchg
addb
and
push
add
xchg
inc
cmpb
fstps
pusha
inc
ret
dec
sbb
test
jno
cmp
in
lds
call
inc
sub
or
repnz
sbb
mov
jns
xchg
jae
std
mov
mov
shrl
sub
xlat
pusha
out
mov
push
sbb
push
xchg
mov
outsl
xchg
cwtl
loop
call
xor
pop
fs
cmpsb
stos
push
adc
xchg
mov
cmp
dec
inc
mov
scas
push
lods
and
fdivr
loop
and
in
jg
xchg
stos
xor
mov
xchg
addr16
jns
sub
jecxz
scas
sbb
daa
sahf
in
cmpsl
sbb
repz
out
adc
or
adc
or
sbb
aad
test
gs
ss
js
and
xchg
xchg
pop
mov
out
stc
pop
push
xchg
ret
push
shlb
xor
jns
mov
jg
cmp
fstpl
lret
mov
fs
mov
mov
rolb
jge
sarl
or
mov
ja
pop
xor
mov
aas
sbb
cmp
mov
add
adc
ret
adc
sub
mov
fxch
outsl
inc
imul
shl
mov
pop
pop
cmpsb
fsub
add
jge
mov
push
lock
iret
xor
lret
divb
call
imul
jge
leave
jmp
xchg
das
and
aaa
jb
xlat
push
jle
test
cltd
cmp
push
jecxz
sarb
push
cmpsb
push
mov
mov
push
je
dec
and
xor
mov
push
and
mov
jb
cwtl
addr16
mov
loope
imul
je
ficompl
push
sbb
dec
data16
or
mov
test
inc
sub
jbe
xchg
addl
xlat
mov
xor
es
cmp
mov
ucomiss
dec
dec
leave
and
cld
testb
push
sub
jo
pop
lods
ret
mov
push
js
cmp
sub
xor
jae
out
jmp
clc
cmp
pop
decl
xor
stc
outsl
clc
push
xor
sub
mov
sarl
jg
push
fnstcw
xor
ja
adc
and
scas
int3
push
xchg
cltd
mov
mov
scas
sbb
jnp
mov
shr
push
je
mov
xor
fidivrs
or
pop
and
and
imul
xlat
ss
inc
xor
mov
and
dec
xor
sarl
sbb
cmp
shlb
xor
aad
cmp
jge
mov
sub
or
sub
addl
mov
test
inc
add
pop
imul
add
dec
push
in
rcrl
imul
push
push
jge
mov
clc
stos
mov
out
enter
js
cmp
xchg
and
or
lock
ss
jns
aad
fbstp
pop
pusha
iret
sub
divps
test
shrl
cmp
pop
mov
xlat
pop
aaa
sub
pop
insl
lods
aaa
mov
jp
rclb
cltd
cmp
push
add
jnp
mov
sub
std
es
fwait
mov
mov
sub
mov
push
out
rolb
fs
cmc
daa
adc
loope
fxch
dec
pushf
mov
inc
xor
les
cli
xchg
daa
mov
popa
cli
lock
inc
scas
cli
jbe
sbb
adc
mov
je
int
lock
mov
jb
sbb
sub
imul
sub
jb
and
mov
out
repnz
lods
insl
ja
sub
and
xchg
lods
mov
movsb
fmull
lret
stos
mov
and
xchg
test
and
popl
cmpsb
aad
sub
mov
jmp
fdivrp
repz
addr16
push
in
idivb
pop
ret
daa
xchg
inc
mov
jp
loopne
out
xor
popf
popa
push
in
movsb
pop
mov
or
xor
test
sbb
pop
mov
adc
rolb
jecxz
add
jecxz
add
jmp
das
inc
sub
sub
pusha
or
mov
jl
pop
loop
mov
leave
push
dec
lret
inc
scas
jns
adc
and
pop
enter
mov
test
idivb
add
lahf
cltd
or
cltd
popl
xor
add
ret
popa
jbe
fs
jne
mov
xor
divl
scas
pop
ss
cltd
pop
mov
pop
outsl
sbb
mov
std
lds
adc
jmp
addr16
jno
std
xchg
push
les
call
xchg
fnsave
std
jg
fdivr
mull
lds
cmpsb
xor
adc
dec
or
push
and
aam
lret
roll
aam
jp
jb
cwtl
sti
js
int
movsb
scas
cmp
jo
and
xchg
mov
ret
clc
pop
inc
push
or
fstpt
mov
adc
in
vpminub
and
jg
mov
test
xchg
inc
inc
rcrl
xor
aam
cmp
mov
decb
in
nop
xor
pop
dec
in
enter
adc
dec
insb
jb
sbb
mov
xchg
fwait
add
xchg
dec
cmpsb
jb
add
add
xor
jns
xchg
mov
xlat
or
movb
outsl
rolb
adc
push
ficomps
mov
jns
cmp
push
mov
jge
pop
mov
adc
in
dec
inc
mov
cmp
jl
xchg
out
sti
mov
push
xchg
pop
popa
jnp
push
call
sti
sbb
loop
mov
sahf
fldl
inc
mov
jl
push
fidivl
cmpsb
jle
cmp
stc
sub
mov
scas
mov
decb
xorl
sti
cmp
outsb
fwait
jmp
ja
call
lahf
stos
adc
xchg
inc
mov
xchg
xor
or
xor
popl
ret
jnp
rol
dec
in
ret
imul
or
cmp
lret
jl
lds
mov
lods
mov
xchg
mov
sbb
or
dec
popf
aaa
divl
xor
ficoms
lock
lds
mov
cmp
cld
in
xchg
imul
std
jnp
and
inc
pop
ja
jl
inc
out
inc
push
jne
aad
sbb
cld
add
xchg
daa
inc
xor
adc
sbb
adc
cwtl
adc
cli
mov
loop
pop
xor
out
mov
ret
incb
cmpsb
and
daa
mov
xor
ja
and
enter
jo
dec
addr16
sahf
inc
push
mov
mov
stc
xchg
ljmp
cmovb
push
shlb
repz
sub
ret
call
pop
dec
hlt
mov
inc
cmpsl
xor
pushf
stc
int
inc
inc
sbb
out
lahf
inc
push
dec
cmp
jmp
adc
repz
xlat
pop
dec
and
push
es
dec
andb
xor
ljmp
test
nop
jns
clc
lods
das
mov
mov
ret
dec
push
jne
ret
movsb
in
movsb
int3
xor
addr16
mov
pop
and
dec
loopne
hlt
or
fs
out
pop
dec
push
push
pop
ljmp
hlt
cs
jns
js
push
out
dec
test
xchg
pop
testb
inc
test
imul
jp
imul
lret
jecxz
sbb
jge
call
cmc
inc
sbb
test
xchg
jbe
cld
cmp
popf
mov
sti
push
xchg
pop
sbb
inc
inc
hlt
and
add
xchg
iret
and
mov
xlat
nop
aad
sub
add
push
push
xor
add
mov
int3
into
adc
sub
mov
mov
lock
adc
ret
jae
mov
pop
add
repz
mov
inc
loop
repnz
shl
ja
push
xchg
pop
dec
dec
xchg
pop
fcoms
aaa
xchg
jge
or
sarl
fcoml
stos
jo
jae
mov
imul
aam
loop
test
and
repnz
xor
dec
pop
loope
jg
dec
ljmp
popf
pushw
jb
cli
aas
or
das
in
push
mov
aas
pop
push
push
ja
inc
cmp
loope
lahf
stc
pop
and
xor
pop
ret
inc
jo
rorl
jle
jl
push
cmpsl
dec
push
push
lcall
scas
mov
cld
das
fimuls
movsb
sbb
jae
fmulp
ja
pop
adc
not
jbe
mov
or
sub
and
arpl
dec
cwtl
arpl
sahf
loop
push
pop
rorb
pop
out
lcall
test
into
adc
je
mov
and
push
lods
mov
sbb
xlat
stos
shrl
hlt
adc
dec
and
mov
stos
jae
nop
or
sub
jge
push
jb
ss
movsb
push
xor
outsb
inc
push
mov
adc
or
push
imul
roll
das
cmpsl
fldcw
sub
jg
mov
addps
addr16
test
sbb
mov
cli
and
push
adc
hlt
mov
or
pop
jne
sub
xchg
enter
bound
inc
lgs
push
sbb
or
fildl
xchg
mov
or
jmp
push
dec
shlb
lahf
int3
dec
mov
gs
push
sbb
fwait
inc
cwtl
sbbb
mov
nop
push
cmc
xlat
mov
adc
sbb
addr16
pop
xchg
cmpsl
push
mov
mov
stc
popa
shr
xchg
mov
pop
xchg
inc
and
or
pop
fidivrl
in
fs
inc
mov
popa
xor
mov
hlt
loope
jbe
or
mov
dec
cwtl
or
mov
push
lcall
shl
xchg
xchg
adc
push
xor
fwait
xorl
cmpsl
repnz
enter
outsb
xchg
mov
test
jns
jb
xor
jmp
mov
sub
int3
call
mov
sar
imul
arpl
es
fincstp
push
psubd
loope
jle
roll
movsl
and
jl
adc
pop
sub
jl
enter
cli
dec
in
mov
xchg
sub
mov
cmp
nop
imul
xchg
pusha
shlb
and
adc
fcomps
aad
inc
inc
rorb
rcl
jg
out
xlat
mov
dec
pop
jmp
rcrl
and
sbb
outsb
sbb
jp
push
mov
imul
adc
xchg
arpl
cld
ljmp
mov
jb
xchg
cmpsb
test
call
xor
adc
pop
rcll
cmpsb
sbb
add
or
mov
call
jo
push
inc
popa
mov
sub
in
sbb
hlt
pusha
fsubrl
jecxz
sub
pushf
ret
and
dec
int3
daa
add
loop
loope
into
or
xor
xchg
daa
lods
lahf
iret
pop
test
sbb
mov
xchg
cltd
xchg
dec
pop
add
push
sub
adc
fimull
inc
shlb
inc
jl
xchg
xacquire
lret
sub
loop
pop
movsb
xor
ja
add
push
shl
std
cmp
or
xor
mov
push
bswap
cld
rcrl
fsubl
mov
push
add
cwtl
mov
inc
push
mov
lret
mov
jb
mov
notb
jp
xchg
xchg
cld
mov
or
push
lret
mov
inc
std
pop
push
dec
mov
mov
jl
mov
and
adc
lods
pop
jo
inc
mov
push
nop
scas
lock
pop
mov
rorb
je
out
cmp
add
cs
jae
inc
inc
and
dec
mov
lods
int
fistps
push
jmp
mov
das
add
icebp
test
dec
rorb
mov
pusha
shll
test
daa
mov
mull
hlt
mov
jecxz
leave
lods
xor
or
ret
les
enter
mov
jne
sbb
ret
icebp
aas
cmc
rolb
fwait
testb
xlat
mov
xchg
test
int3
inc
adc
int3
cld
dec
sub
jnp,pt
sub
add
out
xchg
dec
sub
lret
add
loop
sbb
pop
mov
adc
mov
cmp
xchg
and
in
xor
shrb
xlat
pop
iret
push
dec
dec
fwait
pop
mov
jnp
test
addl
sub
pop
in
subb
push
pop
repnz
and
or
xchg
jnp
xchg
rorb
push
test
xchg
nop
scas
pop
mov
or
mov
js
cltd
insl
dec
mov
or
fstcw
shlb
repnz
inc
mov
cmp
mov
sbb
fwait
daa
loope
push
sbb
and
or
sub
inc
push
stc
or
jge
mov
lret
fisubs
push
popf
fwait
int
icebp
enter
jle
mov
mov
imul
sbb
dec
mov
rolb
dec
int3
ret
ljmp
scas
cmc
mov
daa
dec
inc
xor
jno
test
sbb
das
sbb
pavgb
jb
jge
ret
mov
and
lret
jno
ja
outsb
jae
or
inc
lds
popa
dec
cmp
adc
push
inc
and
mov
adc
stc
inc
outsl
lds
in
data16
sbb
mov
lcall
addr16
test
mov
dec
in
roll
pop
or
not
dec
divl
sub
sbb
xor
icebp
xchg
adc
push
or
sahf
in
adc
inc
or
or
inc
test
mov
cmpsb
dec
mov
andb
and
test
or
cmp
ret
sbbl
xor
lret
adc
ljmp
jo
cld
mov
dec
jg
xchg
mov
iret
or
pop
xor
push
jno
test
adc
and
jle
mov
dec
cmpsl
pop
rclb
cmp
into
dec
bound
icebp
push
loope
mov
out
shll
cs
dec
pop
sbb
push
lds
rolb
insb
push
rcrb
fbld
mov
mov
inc
out
xchg
fs
sbb
ficompl
push
clc
sarl
push
mov
fisttpl
sbb
into
adc
jle
loop
sbb
call
and
repz
mov
dec
ljmp
es
xorb
inc
xlat
repnz
cmp
out
sbb
xchg
repnz
and
bound
scas
and
jl
push
notb
js
jae
add
pop
pop
inc
jbe
sbbl
int
addr16
and
mov
cmp
add
fsubs
shll
push
and
loop
dec
jle
fildl
fidivrl
add
cwtl
das
pushf
inc
sarl
aas
or
mov
lods
ds
xor
mov
out
mov
push
orb
mov
sub
rclb
or
call
pop
mov
enter
inc
in
nop
std
mov
ss
rolb
insb
push
add
hlt
inc
movsl
shlb
pop
mov
jns
scas
arpl
push
mov
or
ret
cwtl
fs
or
mov
cmp
fisttpll
jae
arpl
lea
sub
ja
adc
mov
sbb
xchg
insl
pop
lret
call
int3
dec
lods
in
or
rclb
xor
cmp
sub
cmpsl
andb
add
in
adc
test
pop
ss
call
popa
mov
xor
mov
add
fsts
inc
mov
jne
scas
jne
lcall
iret
push
xor
int3
or
das
pop
imul
adc
pop
aas
jb
and
adc
or
addb
xor
lds
pop
sub
mov
inc
call
dec
xchg
nop
ret
mov
or
jmp
xchg
cmc
shrb
out
xchg
test
out
mov
inc
xor
ret
shlb
testb
cwtl
fldt
cmp
mov
das
outsl
cltd
sub
adc
mull
stos
insb
adc
and
pushf
movsb
fidivrl
add
xor
mov
sub
ret
and
test
stos
aaa
jnp
adc
jne
movsb
mov
mov
je
dec
fisubl
ja
sbb
mov
addr16
inc
loopne
adc
ljmp
cs
or
leave
xlat
cmpxchg
jb
inc
jno
or
mov
lret
push
add
filds
scas
pop
jl
nop
cmpsb
out
fwait
cli
sbb
jo
les
call
shl
inc
das
cmp
xchg
ds
push
push
stos
jge
in
cmpl
adc
pushf
mov
xor
mov
jns
lods
leave
dec
lods
jmp
fistpll
xchg
lcall
cmp
aam
test
iret
dec
adc
in
lahf
idivb
adc
test
jg
pop
mov
stc
lods
arpl
sub
adc
je
cmp
cmp
push
dec
out
std
dec
arpl
mov
xchg
imul
out
cltd
imul
imul
jnp
pop
rorb
cltd
mov
scas
jae
mov
and
xor
fwait
call
icebp
push
mov
stc
daa
lds
xor
jmp
lahf
pop
cmp
xchg
mov
or
mov
xchg
sbb
lea
mov
mov
mov
jg
bnd
push
sahf
adc
fdivr
inc
mov
mov
xor
mov
xor
push
add
inc
dec
xchg
ficoms
ljmp
push
lret
arpl
cmpsb
adc
out
pop
xchg
mov
test
icebp
daa
xchg
arpl
push
roll
shl
std
push
cwtl
clc
mov
imul
xor
testl
mov
cmpsb
xchg
daa
and
and
dec
xchg
int
jmp
dec
or
cmpsl
push
dec
push
pop
sub
out
pop
xchg
fiaddl
mov
jmp
jnp
xlat
sti
xchg
into
xlat
pop
daa
pushf
out
push
shl
jl
imul
aad
dec
mov
es
add
jge
mov
rolb
push
enter
je
out
mov
je
cltd
jmp
pop
adc
jecxz
loopne
xchg
pop
xchg
push
int
addr16
pop
or
inc
xchg
dec
popa
mul
ja
cmp
mov
mov
mov
in
adc
dec
push
imul
and
sbbl
xchg
mov
idiv
fcoml
test
pushf
add
sbb
mov
or
xchg
mov
les
mov
fiadds
adc
inc
or
aad
inc
mov
popa
in
or
sbb
out
dec
lock
pop
jbe
mov
inc
jo
mov
sahf
stos
mov
icebp
jle
mov
sbb
ficoms
dec
ds
jmp
dec
xor
xorl
push
sbbl
test
mov
in
lods
aam
jb
outsl
sub
rcl
adc
inc
loope
inc
cld
push
mov
js
lret
iret
mov
fldl
xchg
dec
xchg
mov
mov
in
outsb
mov
lret
aad
dec
xlat
pop
test
mov
subb
call
shr
cmpsl
pushf
ss
or
mov
clc
mov
cmp
xor
inc
dec
mov
adcb
cwtl
mov
mov
sbb
dec
pop
and
inc
ret
push
mov
mov
jns
daa
mov
jne
jmp
jle
std
mov
into
xchg
enter
mov
stc
jge
sahf
lret
repnz
cmp
loope
std
in
subb
xchg
mov
adc
push
cs
fndisi(8087
popa
or
cs
xor
jl
mov
jge
call
js
mov
mov
cs
push
fs
mov
psrlw
pop
mov
loop
sbb
sbb
je
sub
imul
loopne
int
stc
lcallw
xlat
pop
mov
test
insb
aaa
testl
mov
outsb
xchg
xor
aad
or
ja
adc
push
das
sbb
in
lods
outsl
jle
mov
stos
or
xchg
dec
out
mov
mov
inc
in
out
test
loopne
or
ljmp
jnp
test
int
clc
rol
out
jmp
pop
push
mov
dec
xlat
xchg
das
sbb
js
xchg
pop
adc
xor
jb
dec
mov
add
faddl
lock
test
jle
lds
jp
cmp
mov
stc
xchg
jnp
mov
cmp
jnp
xchg
pop
lret
mov
movsb
xor
sbb
js
adc
mov
jne
je
pusha
iret
xor
sbb
ljmp
loop
inc
sub
loopne
xor
ljmp
pop
pop
loopne
pop
xor
mov
push
das
mov
cmp
fcompl
push
aas
bound
aaa
add
shll
sbb
pop
test
jae
das
mov
xchg
out
cs
scas
or
out
lods
inc
cmp
shll
int
leave
cmp
js
fcmovbe
and
mov
ret
dec
push
cmpsl
or
or
jae
cmove
into
daa
aad
xor
mov
xorl
jl
sbbl
cmp
xlat
repz
xor
rcrl
lock
shr
jecxz
sub
jl
fldl
loop
pop
cmc
movsb
dec
outsl
hlt
mov
movsb
arpl
out
movsb
dec
jo
xor
add
ljmp
iret
dec
lods
leave
jmp
cmpsl
popf
fsubrp
mov
mov
lods
inc
out
ror
xchg
inc
aad
pop
or
and
jne
mov
mov
ja
repnz
and
mov
enter
or
cwtl
arpl
cli
sarb
jmp
sbb
dec
push
sbb
std
rcrl
sbb
rcl
fldcw
fs
cld
cli
aad
push
dec
or
adc
push
fbstp
mov
rcrb
cmp
and
mov
xchg
mov
push
ret
shr
adc
xlat
sarl
out
pop
addl
push
sbb
jnp
or
aaa
jns
inc
ror
push
pusha
mov
insl
mov
ret
xor
pop
mov
lahf
and
or
dec
orb
xchg
mov
pop
push
sub
sbb
int3
hlt
cmp
mov
loope
xchg
add
ds
push
div
daa
adc
popf
jecxz
inc
mov
scas
inc
fwait
or
fwait
mov
ja
in
addr16
and
neg
mov
dec
addr16
mov
das
stos
movsl
cltd
negb
insl
jnp
stc
outsl
int3
nop
sbb
bound
sbb
sbb
push
int
or
test
cwtl
call
mov
stos
sbb
enter
xchg
insl
aad
xor
xchg
ljmp
pop
dec
push
xor
enter
push
cs
cmp
jecxz
stc
push
shl
mov
lock
fimull
adc
cmp
rclb
and
leave
fildl
movsl
adc
adc
or
leave
cmp
ss
test
pop
push
pop
xchg
test
mov
adc
lods
dec
testl
xor
popf
cmp
fwait
popf
scas
shl
nop
mov
xchg
xchg
std
adc
mov
test
pop
pop
leave
add
aad
push
nop
xor
jo
inc
imul
pop
jmp
sarb
pop
sbb
shll
cltd
mov
movsl
insl
dec
ret
in
arpl
and
clc
ljmp
cmpsb
outsl
dec
shlb
call
negl
mov
rcr
xchg
loop
xchg
in
aam
ss
es
push
sbb
fistps
movsl
xchg
jecxz
rcll
arpl
cli
jmp
push
fstl
push
aam
outsb
shlb
push
pop
hlt
push
les
aam
rcrb
sbb
scas
aam
insb
mov
xchg
and
xchg
testb
es
dec
and
lea
cmp
loopne
cmc
dec
add
stc
scas
popa
push
jns
sbb
fcom
add
insl
dec
add
jecxz
mov
jecxz
cmp
inc
lock
ret
test
pop
sub
inc
mov
ja
sahf
xorb
mov
rcr
adc
jns
jmp
sarb
cmpsb
jmp
mov
xlat
cli
push
test
push
xchg
dec
arpl
pop
cmp
xlat
mov
shlb
push
les
jmp
push
rcr
push
xorl
push
xchg
jbe
adc
push
jne
mov
xchg
or
mov
jae
jbe
xchg
sti
scas
ss
out
clc
jne
negb
sti
fnstsw
xchg
dec
fidivs
cs
sub
cmp
adcl
mov
loop
cmp
into
push
sub
mov
stos
cmp
std
jnp
lods
shl
cs
scas
and
jbe
mov
inc
and
jno
adc
stc
adc
aam
cwtl
lahf
sub
ss
aam
xchg
cmp
lds
jae
jo
imul
and
mov
clc
dec
out
sub
daa
xor
mov
xorb
imul
into
jne
pop
xor
jge
cmp
pop
fsubrs
lret
out
cs
sbb
pushf
seto
mov
inc
ret
das
add
cs
sub
sbb
cmp
andb
fsubs
pop
jg
pop
jg
testl
dec
inc
xchg
ror
fimull
mov
xchg
dec
adc
pop
pop
stos
xchg
ss
or
mov
cmpsl
mov
sub
pop
or
out
jmp
add
hlt
sbbb
les
call
xor
add
and
jmp
and
xchg
jae
dec
iret
xchg
dec
ret
sub
ret
pop
aas
or
rclb
push
aam
mov
in
and
lea
xor
in
and
insb
push
aam
push
sub
inc
sti
jecxz
mov
leave
stos
out
fs
loopne
arpl
aaa
in
adc
fistps
jge
and
int3
lret
inc
popa
cld
sub
inc
out
inc
mov
jno
js
mov
xorl
sub
into
cmp
or
mov
push
aad
pop
in
push
xchg
out
jo
insl
sbb
int3
scas
movsb
and
adc
or
mov
sub
push
push
and
sbb
mov
xor
pop
aas
xor
cmpsl
xor
mov
fimull
loop
leave
out
stos
subl
sbb
in
loope
cmp
pop
cmp
ja
mov
sbb
movsl
inc
in
aaa
in
and
ja
cmovb
push
ja
xlat
cld
jecxz
call
pop
hlt
mov
andb
rcll
iret
es
jns
mov
lea
xchg
add
aad
dec
cmp
or
mov
mov
sub
outsb
leave
xchg
leave
add
orl
push
sub
out
dec
mov
xor
es
ja
or
addr16
and
push
inc
fnsave
ljmp
inc
sbb
mov
xchg
adcl
mov
ja
mov
mov
mov
test
push
stc
cmp
daa
sbbb
or
movsb
rcrb
inc
cmp
icebp
fnstenv
inc
xlat
and
adc
and
inc
ljmp
shlb
lcall
inc
imul
pop
push
outsb
sbb
aas
shrb
mov
rcrl
inc
or
mov
inc
out
pop
iret
inc
insb
sub
test
cmc
dec
mov
int
cmp
stos
mov
adc
adc
mov
add
adcb
jp
les
pop
sti
xor
jle
ja
clc
test
jne
lcall
adc
pop
mov
inc
imul
inc
fwait
add
inc
push
adc
fistps
popa
scas
xchg
mov
adc
int3
lock
adc
push
jne
jnp
pop
sbb
shrl
daa
testb
xchg
cmp
mov
inc
mov
in
xlat
inc
or
sbbb
mov
inc
aaa
or
nop
scas
mov
mov
out
jmp
fiaddl
adc
inc
sbb
imul
lahf
leave
sub
sbb
sete
pusha
shrb
dec
and
mov
mov
sarb
sahf
dec
jge
mov
inc
arpl
sbb
movsl
sbb
jmp
jb
or
lret
les
xlat
and
fcompl
xchg
cmpsl
sbb
hlt
sub
outsl
addr16
adc
inc
mov
hlt
xchg
ret
adc
rcrb
cmp
ja
inc
xchg
or
das
rol
shlb
lret
scas
idivl
jge
subl
and
or
insl
cmp
cs
and
fists
sbb
sbb
fdivl
mov
mov
fstpl
pop
jbe
jb
pop
sbb
and
dec
xchg
dec
les
popa
inc
jecxz
rolb
jle
sbbl
add
xchg
sub
xchg
lock
mov
jg
sub
lahf
mov
scas
roll
out
inc
inc
pop
and
dec
xchg
cltd
jnp
testb
push
xchg
fsetpm(287
dec
idivl
fs
push
or
ja
sbb
inc
and
sub
or
adc
shll
pop
nop
test
outsl
sahf
rorw
popf
js
insl
bound
mov
scas
pop
sbb
jae
push
dec
gs
in
dec
jne
incl
sbb
adcl
or
test
adc
setl
icebp
test
loope
ficoml
pop
dec
scas
add
scas
add
xchg
pop
fcomps
out
dec
pop
xor
sub
cld
pop
dec
mov
adc
push
in
cmp
cmc
or
jbe
jo
in
insl
testl
add
testb
add
imul
idivb
and
inc
xchg
lcall
out
cltd
ja
ljmp
movl
fsubl
add
mov
push
mov
in
lcall
pop
pop
aaa
data16
pop
fistps
dec
xlat
pop
out
popa
hlt
jo,pn
jnp
pop
leave
ss
insl
fcomps
cli
jmp
dec
out
xchg
inc
and
push
adc
mov
inc
mov
ret
inc
mov
mov
jae
jge
adc
int
and
xchg
icebp
push
xchg
sahf
inc
int
testb
sub
inc
gs
ljmp
fstpl
mov
aam
xchg
or
push
loope
lods
xor
and
and
mov
cmp
test
iret
push
scas
sub
int3
inc
mov
add
je
add
mov
aad
sbb
inc
pop
xchg
mov
mov
sbb
ja
call
or
pop
addr16
xor
stc
imull
pop
xchg
mov
ljmp
jp
pop
sarl
adc
adc
into
jmp
sarl
inc
jge
pop
cmp
lret
jmp
xchg
sub
out
ljmpw
push
movsl
or
push
cmp
iret
xor
leave
out
popa
cltd
adc
bound
lcall
sub
dec
cmpsl
in
ja
stos
shr
test
mov
mov
pop
xchg
ret
fists
lret
cltd
sahf
fucomi
lcall
jns
sbb
sub
lret
rclb
mov
cld
jg
imul
rolb
popf
sbbb
je
int
add
mov
mov
mov
outsb
dec
adc
into
or
sub
xor
mov
dec
call
xor
cli
jns
and
push
adc
ret
loope
jbe
outsl
lret
js
xor
sub
inc
punpckhdq
test
xor
jnp
loop
imul
sbb
mov
jne
ljmp
paddusb
ja
fsub
mov
call
or
fidivrl
in
data16
pop
sub
loop
enter
imul
add
xlat
je
pop
jne
inc
ja
jg
push
mov
adc
mov
or
iret
adc
pusha
repnz
jg
sub
mov
bound
jecxz
dec
out
sub
sbb
leave
addb
lods
lock
sub
cld
aad
pop
adc
sbb
ljmp
stc
fnstcw
jecxz
shll
insb
loopne
popf
xor
or
fsubr
repnz
rclb
jmp
mov
push
call
cmp
lock
mov
dec
out
mov
adc
sar
and
jbe
mov
aad
cwtl
das
adc
add
rcrb
jo
lahf
mov
cmp
pop
inc
and
leave
fwait
cmp
push
or
mov
loopne
xchg
fidivrs
pushl
jmp
push
sbb
int3
inc
mov
or
pop
pop
bound
rol
inc
lea
or
adc
ret
mov
loope
xchg
lret
cmc
paddsb
ljmp
or
mov
xchg
repnz
or
pop
push
lock
jecxz
mov
popa
cld
in
cltd
lcall
movsb
pushf
ss
add
push
sbb
out
fcomps
lods
icebp
les
je
aas
fs
or
fmul
dec
jbe
mov
stos
iret
call
adc
leavew
ret
aaa
shl
cmp
leave
sub
enter
cmp
lcall
lds
xchg
xor
jge
or
ret
mov
xor
rcrl
lods
push
insb
jmp
mov
shll
test
mov
stos
imul
or
mov
and
pop
adc
cmp
leave
hlt
xchg
out
sbb
xchg
repz
mov
aas
stos
push
cld
fmull
dec
sub
xchg
sub
enter
mov
stos
push
aam
outsb
add
mov
divb
adc
rdtsc
dec
loope
ret
jmp
xor
pop
xchg
jb
or
jae
mov
cmp
sbb
nop
test
mov
inc
cmp
popf
and
xor
aam
shrl
call
in
or
xor
dec
pop
out
add
andb
inc
fsubrl
sar
jb
popf
fwait
es
inc
jmp
add
or
hlt
sub
push
nop
sub
call
cmp
mov
push
push
dec
sub
jno
cmp
add
outsl
dec
mov
je
sti
jmp
mov
imul
fdivs
mov
in
fcoms
dec
xor
or
sti
mov
outsl
lds
cwtl
and
sub
pop
aas
sub
mov
icebp
in
fs
jns
cmpsb
bound
mov
pop
movsb
dec
int3
popa
jne
lods
pop
pop
pop
les
pop
jp
adc
scas
mov
xchg
inc
dec
inc
pop
movl
rcr
hlt
mul
movsb
inc
push
sahf
push
sbb
mov
call
enter
insb
hlt
fsubs
pop
orb
sbbb
cli
mov
test
and
and
aam
push
out
dec
repz
pop
fidivs
adc
and
std
cmp
push
sub
push
sbb
xchg
jecxz
lods
aas
test
sbbl
lods
fwait
das
jmp
mov
ss
mov
scas
mov
lea
push
movsl
aam
dec
pop
aad
jb
rorb
in
sub
mov
int
popf
adc
xchg
hlt
adc
xchg
jno
call
insb
in
lods
xor
loopne
aad
jno
ja
scas
sub
in
rcrl
inc
aad
sub
sub
cs
xchg
cmpsl
rorb
cmp
jbe
sbb
repnz
mov
fsubs
dec
dec
pushf
cli
adc
xchg
inc
imul
pop
push
pushf
adcl
mov
sub
andb
sbb
jo
sbb
cmp
pop
faddl
mov
subb
dec
sub
cli
add
mov
arpl
stos
testl
jl
mov
ljmp
ret
aam
out
or
sar
ds
fcmovnb
or
loop
mov
pop
push
ss
cmp
sbb
pop
pop
xchg
ret
sti
jnp
orb
cmp
not
jo
lahf
shlb
call
or
ja
push
out
enter
pop
mov
cmp
aam
icebp
jb
fdivs
and
inc
cmp
shrl
outsb
and
push
dec
orl
mov
inc
data16
jae
fisubl
mov
les
mov
inc
iret
loop
xchg
in
sub
test
enter
push
pop
lods
int
mov
cmp
sarl
jno
outsl
mov
imul
xchg
and
jmp
imul
xchg
push
loopne
bound
inc
lea
es
mov
pop
cmp
and
roll
out
das
in
dec
outsl
mov
add
jbe
daa
test
hlt
sbb
mov
dec
nop
cmp
xchg
xlat
push
insb
iret
sub
or
lock
sti
mov
insl
lret
addb
push
and
imul
inc
pop
sti
aas
sub
fwait
ja
lret
jle
outsl
inc
and
push
movsl
lods
mov
push
push
and
xor
test
fsubl
mov
shlb
mov
or
and
mov
jg
fs
mov
neg
outsb
scas
test
js
sub
xchg
in
icebp
sub
sahf
xchg
mov
nop
mov
mov
push
adcl
cmp
enter
test
fdivl
data16
jns
xor
dec
sub
mov
xorl
xor
or
push
sub
mov
push
hlt
inc
outsb
insb
pop
pop
mov
mov
inc
xor
sub
ret
jno
mov
sub
jbe
sahf
jns
xlat
and
out
sub
add
fs
sub
cli
shll
add
mov
jae
dec
subl
inc
jge
dec
push
pop
xchg
orb
adc
cmp
out
pop
or
mov
das
push
pop
inc
inc
mov
out
stos
cmpsb
pop
xchg
jl
xchg
mov
sbb
adc
mov
pop
mov
pop
mov
xor
rclb
dec
mov
daa
je
stc
aaa
fldt
pop
push
inc
pop
inc
dec
outsl
scas
repnz
cli
mov
arpl
xchg
pop
sbb
fwait
push
add
ljmp
jns,pn
sub
add
cmp
rcrb
cmpsb
jmp
cmpb
in
mov
sub
mov
daa
imul
inc
inc
dec
lret
xchg
push
mov
outsl
ss
jle
cmp
add
jne
roll
pop
sbb
xorb
jp
fcmove
les
dec
jg
in
les
not
push
inc
imul
push
es
cwtl
xchg
jb
fcmovnbe
icebp
mov
add
inc
dec
iret
and
sti
stc
lret
pushf
fsubrl
mov
inc
stos
push
push
popa
daa
loop
outsb
dec
popa
arpl
gs
xchg
mul
jecxz
ret
fiaddl
jne
adc
test
scas
fcoms
incb
arpl
or
dec
adc
jp
hlt
inc
push
lods
cwtl
or
xor
sbb
xchg
mov
sbb
andb
mov
xchg
xchg
mov
fsubl
divl
inc
xor
ret
jp
jmp
inc
or
inc
mov
add
ljmp
aaa
lods
cmpb
cmp
dec
rcr
sti
ja
sbb
loope
repz
cmpb
rcrl
pusha
xchg
ljmp
idiv
push
xor
fisttps
fnstenv
mov
inc
add
cmpl
xor
jbe
daa
add
pop
leave
cwtl
js
xchg
mov
mov
xor
les
xchg
cmpl
sub
pop
xor
fs
jb
sarb
xor
inc
rcrl
int3
stos
sub
out
test
and
sub
sbb
push
mov
xor
jge
repnz
iret
xchg
xchg
dec
dec
jp
push
cmp
mov
jo
out
inc
scas
pusha
shlb
inc
xchg
jl
movsb
in
sarb
das
cltd
fdivp
or
icebp
mov
lds
fcomip
add
inc
or
sub
mov
aaa
pop
or
imul
adc
cs
ud0
mov
iret
mov
lock
decl
ret
loope
add
add
hlt
xor
aam
sbbb
xchg
cmpsb
lret
inc
push
mov
push
jae
pusha
sysenter
adc
lret
shlb
je
in
ds
cld
cmp
xchg
test
mov
add
call
lds
sub
std
ret
xchg
popf
mov
std
inc
adc
es
cmp
pop
mov
inc
daa
out
or
adc
bound
lret
idivb
out
addr16
mov
jle
jp
ret
sbb
xchg
imulb
ficompl
mov
pop
fwait
scas
js
mov
cmc
hlt
or
lods
rorl
loope
scas
popf
jmp
adc
into
pushf
cmp
sub
or
movsl
dec
jnp
mov
enter
push
lods
sub
lds
dec
loope
sub
in
mov
dec
cmp
pop
xor
mov
sbb
scas
jns
lods
call
cmp
xchg
andb
iret
add
xchg
adc
test
mov
jo
adc
iret
iret
or
sbb
hlt
repnz
repnz
nop
pop
mov
push
mov
fmull
cmp
dec
ror
cmp
sbb
jo
pusha
and
das
test
lret
shlb
dec
ss
fisubrl
mov
sub
out
out
push
xor
test
mov
xchg
cmp
aam
mov
mov
imul
sub
in
adc
mov
jp
fwait
arpl
mov
push
xchg
movsl
out
test
jp
scas
xchg
xlat
xchg
push
cmpsb
and
sbb
mov
js
call
and
adc
roll
or
cmpsb
insb
mov
into
fnstsw
das
lret
sub
pop
push
lock
sbb
dec
dec
sbb
mov
add
dec
xchg
sub
jge
in
fbld
je
dec
fs
mov
cmc
jb
pop
sarb
loope
and
dec
mov
pop
push
mov
pop
cmp
xor
and
mov
xor
daa
gs
int3
call
push
pop
nop
sarb
sub
mov
or
sub
ss
es
adc
repz
pop
jg
jne
mov
std
sahf
xchg
jnp
dec
dec
cld
and
add
mov
xchg
cs
jnp
in
pusha
fisubrs
adc
sbb
test
lret
lcall
mov
testl
out
out
add
dec
fldt
mov
std
xlat
sti
fcmovne
mov
push
xchg
inc
dec
xor
push
xor
cld
xor
jl
rcr
mov
cmpsl
sahf
sbb
mov
xor
and
pusha
jge
int
test
xchg
ja
cmp
add
into
sub
cmp
dec
loope
outsl
and
mov
cmpsb
or
leave
xor
mov
cmp
test
xchg
adc
sub
ret
jmp
mov
push
adc
fadd
into
into
sub
mov
dec
popf
lret
into
cmp
sub
scas
mov
pop
add
sbb
in
int3
mov
jno
std
add
sub
pop
test
push
leave
je
jg
cmpsl
and
into
push
pop
adc
cmp
lds
mov
mov
pop
sub
jge
nop
cmp
push
inc
pushf
sub
imul
ret
inc
and
ss
add
in
lcall
arpl
mov
int
push
add
lret
jmp
pop
xchg
push
mov
ds
test
inc
sub
insl
stos
sub
shlb
adc
pop
pop
push
push
push
push
sbb
scas
int3
or
cmpsb
pop
cs
and
pop
jle
std
jns
in
or
repnz
cmp
or
outsb
loope
add
dec
lret
inc
jmp
mov
out
les
pop
insl
call
in
add
jae
insb
push
and
imul
or
or
mov
inc
pop
call
push
inc
mov
aam
enter
mov
sub
xor
out
mov
xchg
or
test
aam
xchg
sti
adc
aam
dec
mov
stos
pop
hlt
mov
aad
push
jno
jg
decl
push
and
push
xchg
mov
adc
add
dec
cmp
mov
loope
sarl
adc
es
neg
jo
inc
jnp
or
cltd
mov
jl
jo
sub
mov
cmc
or
pop
aad
rcll
movl
cmp
sbb
add
mov
inc
fistpl
push
sub
xor
leave
cwtl
mov
ret
ja
push
rorb
outsl
repz
jno
gs
mov
mov
inc
push
js
roll
sbb
mov
jg
mov
imul
fs
cmp
push
jbe
and
roll
popf
out
cmp
mov
jle
xor
jp
sbb
mov
mov
gs
and
mov
aad
leave
add
jnp
aam
sub
jmp
sbb
sbb
stc
mov
pop
lds
out
or
cs
out
inc
sar
rclb
pusha
jecxz
pop
sbb
add
loope
pop
add
repz
mov
push
jl
lahf
or
or
stc
iret
xchg
cli
xchg
or
mov
pushl
pop
rcl
movsl
ret
lods
push
in
roll
dec
sbb
mov
inc
pop
in
lcall
adc
push
cs
pop
aam
cmp
rorb
inc
and
or
xchg
sub
dec
sub
rorb
xchg
push
js
test
bound
mov
sub
sub
mov
sub
add
push
mov
or
pop
mov
mov
out
fisubs
mov
scas
mov
inc
jbe
daa
push
cmc
xchg
cmp
rcrb
add
xchg
jmp
cmp
fistl
rcrb
mov
imul
jno
test
jo
xchg
fstpt
jbe
fwait
roll
sbb
mov
aam
clc
xchg
int
sub
insl
shrb
lahf
xchg
loopne
push
push
shll
jb
mov
push
lds
cmp
inc
adc
add
push
lcall
aas
lahf
daa
inc
sbb
mov
cmp
and
int
das
aaa
jbe
and
fs
neg
or
out
stos
in
inc
mov
mov
pop
movsb
ja
loop
xor
sub
push
add
xchg
xor
cmp
lock
aam
adc
imul
lds
jnp
jno
inc
pop
mov
cld
sub
lcall
ds
adc
adc
pop
mov
test
rcll
ret
sahf
sbb
fadd
scas
addb
lret
push
or
inc
push
mov
and
inc
xor
in
shll
test
jb
rorl
mov
sahf
dec
push
fistpl
fdiv
lock
imul
test
sub
push
clc
pop
xchg
in
fsubr
int
lods
or
add
jb
and
cmp
sbb
imul
push
and
movsb
ja
and
movups
push
mov
jmp
std
aaa
movsb
scas
mov
xlat
mov
sub
loop
outsl
jae
je
mov
or
imul
mov
jl
mov
xor
int
ljmp
int3
push
int
jns
je
ret
neg
iret
pop
leave
dec
sbb
sbb
stc
cmpsl
dec
sbbl
sbb
inc
or
xchg
adc
ljmp
jp
mov
xchg
aam
bound
rcll
test
inc
mov
bound
inc
mov
mov
jmp
or
adc
iret
jle
pop
test
dec
sub
jp
les
mov
mov
fdivs
push
xor
fs
mov
pusha
and
xchg
sbbb
add
cmpsl
cmp
imul
leave
push
or
cmp
jecxz
xchg
sbb
ret
adc
dec
push
jbe
or
fldt
jge
int
sbb
outsl
cmpsb
call
sbb
sbb
scas
out
ret
cmpsb
gs
inc
divb
xchg
cli
out
sarl
xor
xor
notb
push
and
mulb
lods
lahf
js
mov
stos
inc
fs
xchg
xor
cld
loope
addb
cmc
mov
aas
outsb
fidivs
inc
cld
sbb
in
push
cmp
jno
mov
sub
xor
or
fisubl
movsb
cli
sahf
fstps
inc
repnz
xchg
push
xchg
dec
out
push
aaa
add
sbb
add
shll
push
jns
ficoms
shll
mov
mov
xchg
pusha
sbb
pusha
pop
lock
add
subb
stos
pop
push
mov
hlt
dec
sub
out
mov
mov
mov
mov
leave
leave
pusha
ret
arpl
out
lock
sub
dec
push
in
lds
adc
fsts
fld
das
repnz
pop
or
push
aas
mov
dec
mov
clc
test
jnp
dec
mov
or
movb
mov
popa
outsl
lea
test
out
sub
out
sbb
jg
sbbl
stc
mov
jae
sbb
jge
lock
pop
clc
xor
rcrb
sub
or
or
cmc
daa
jmp
scas
xchg
fldl
inc
test
mov
adc
xchg
sub
sbb
leave
mov
shl
mov
cltd
jge
lret
sub
mov
rcrl
dec
cmp
les
push
mov
das
mov
int
es
lahf
lock
arpl
sub
test
test
pop
inc
popa
loopne
lahf
add
lret
xor
je
out
outsb
jnp
gs
sti
pop
orb
cmp
lds
lret
adc
cld
mov
inc
dec
mov
adc
ss
rcrb
xor
mov
pop
jmp
xchg
adc
mov
in
mov
jnp
mov
out
lea
jp
adc
jno
ret
test
jmp
push
fsubp
les
pop
jg
xchg
sahf
or
jbe
insb
pop
add
sbb
nop
punpckhbw
pop
dec
pop
jo
imul
das
mov
xor
sub
push
sub
pop
and
cmp
insb
push
test
imul
out
mov
cld
mov
pop
cmovae
add
adc
push
xchg
or
test
int3
test
test
and
rclb
mov
ljmp
les
lea
sbb
pusha
movsb
push
aaa
out
jmp
mov
fs
cs
scas
or
cmp
inc
call
cmp
lret
and
out
pushf
dec
jl
push
or
cmp
enter
cmpsl
mov
push
dec
mov
insb
push
stc
and
mov
push
popa
iret
or
xor
ret
dec
lods
out
mov
int
jp
cs
insl
imul
or
xlat
jge
dec
mov
xchg
add
sub
fiadds
sahf
mov
ret
add
mov
xchg
dec
imul
jl
movsl
rorb
push
cwtl
inc
inc
xor
xchg
xchg
ljmp
cmp
into
cs
and
insl
imul
out
invd
test
shrb
or
jg
push
or
cmp
pop
sbb
aaa
test
push
or
jbe
insl
mov
mov
lods
ss
ds
and
in
push
sbbb
adc
xchg
cmc
repnz
push
fldl
push
pop
repnz
mov
insl
out
mov
xlat
cmpsb
adc
mov
loope
lret
dec
aam
mov
js
in
cmp
push
test
jle
rclb
and
push
in
pop
push
enter
push
dec
jecxz
cld
jle
sub
imul
jp
iret
adcb
lahf
dec
sub
out
test
lahf
pop
xor
cmp
ficompl
inc
dec
sbb
fld
jae
xchg
fnstcw
dec
ret
adc
imul
push
mov
popf
lahf
inc
sub
stos
xchg
es
aad
sbb
nop
cld
ret
sbb
jae
int
pop
inc
sub
scas
sub
push
sbb
inc
ss
popa
mov
aam
imul
inc
or
xor
jb
or
mov
mov
jge
mov
sbb
push
js
in
sbb
xchg
cmp
pop
jno
cs
fistpl
test
das
push
cmp
sbb
subb
test
jno
std
sbb
or
icebp
loop
lods
mov
pop
add
add
mov
jne
pop
int3
pop
sarb
xor
shlb
inc
aam
pushf
fstpt
loop
test
shr
jns
mov
loop
fsubr
inc
xor
cld
cmc
cmpsb
push
and
dec
pushf
test
adc
push
shlb
cmpsb
jge
sub
fwait
mov
push
or
in
adc
cmpsl
rorl
nop
ja
nop
insl
imul
mov
xor
bound
in
and
jg
fnstcw
dec
push
call
mov
jo
mov
sbb
stos
out
mov
mov
aas
das
xchg
frstor
sbb
xchg
sub
mov
adc
adc
pop
mov
aad
test
jns
inc
jno
inc
xchg
dec
jle
adc
adc
leave
sub
sub
sbb
mov
adc
fsts
mov
loope
addb
pop
cmp
lods
testb
pop
lret
daa
shrl
adc
in
inc
dec
fcoms
or
xor
ds
push
out
adc
bound
jmp
sbb
pop
adc
jmp
or
frstor
jge
pop
pop
mov
push
mov
mov
data16
mov
and
aaa
mov
inc
add
jo
shrl
and
test
cmp
dec
fs
lds
lock
adc
shlb
push
fcompl
add
and
mov
lret
lea
repnz
sub
add
fwait
mov
jp
push
mov
jo
inc
stos
push
xchg
mov
insb
pop
mov
mov
mov
jo
in
fsubr
cmp
shlb
push
cmp
cmpsb
int
mov
daa
jecxz
roll
or
xchg
jns
adc
aas
mov
push
sub
cmpsl
cmp
inc
add
movsb
add
out
or
mov
dec
xchg
cmc
rcl
xchg
pop
testl
lods
push
xchg
mov
xor
rcrl
iret
push
inc
es
jge
fwait
add
add
fldl
arpl
popa
sub
ror
loop
fildll
pop
pop
decl
dec
bound
and
add
mov
out
adc
and
mov
aaa
push
pop
outsb
jmp
int3
aam
dec
out
sti
data16
mov
adc
popa
jbe
push
aam
int3
xchg
push
aas
js
sbb
adc
repnz
mov
inc
add
imul
lret
ljmp
jo
jae
ret
cmpb
js
xor
and
adc
inc
mov
aaa
cmp
mov
jle
cmpl
cli
xchg
fisttps
hlt
push
pop
mov
in
and
pushf
push
xor
scas
sub
pop
or
mov
call
sbb
mov
icebp
xchg
and
movl
out
jne
add
dec
or
sti
push
dec
lea
jmp
mov
sub
sahf
xor
jbe
test
aam
aad
sub
inc
sahf
data16
into
or
jnp
dec
lock
insl
je
mov
sbb
or
xchg
and
jl
or
inc
cmpb
sti
ja
lret
adc
fcom
jl
xor
ret
insb
pushf
add
cmpsb
xor
pusha
and
xchg
in
xlat
jbe
inc
cltd
icebp
movsl
ljmp
adc
stc
cs
int3
lcall
je
ljmp
cmp
ja
imul
mov
jbe
mov
adc
sub
cli
push
shll
mov
popf
imul
ds
int
jle
cmp
jno
ja
add
sub
cld
sbb
and
ud2
and
jae
add
fildl
and
pop
bound
mov
xor
in
mov
out
insl
popf
loope
inc
lods
lea
push
jp
imul
ds
mov
sub
jnp
iret
cltd
stos
mov
mov
mov
and
test
js
aad
adc
rep
dec
out
js
and
sub
and
jmp
xor
test
xchg
cmp
std
aas
pushf
fidivl
mov
lahf
pop
call
sarl
cmpb
push
orb
xchg
ja
mov
mov
mov
add
outsl
lahf
push
mov
out
and
arpl
sbb
fldcw
fiadds
jmp
orps
inc
pop
into
xchg
sbb
mov
or
cmp
ret
into
lods
xchg
arpl
or
lds
scas
aam
mov
jb
or
fistps
fisubrl
or
dec
mov
mov
loopne
mov
ljmp
or
mov
adc
mov
jno
mov
inc
sub
mov
arpl
loopne
add
enter
push
or
or
add
or
mov
cmp
shrl
push
jne
test
clc
les
jmp
shrb
and
push
insl
scas
pushf
xor
or
das
iret
dec
pop
lret
adc
rcrb
lds
or
imul
nop
dec
jno
push
stos
mov
jns
int3
fdivl
xor
or
loopne
fs
mov
jo
pusha
or
outsb
pop
push
push
jp
test
xlat
or
out
packuswb
jmp
sti
test
or
lret
or
pop
icebp
sti
ja
in
aam
cld
fsubrl
mov
mov
unpcklps
bound
mov
mov
xchg
into
inc
call
out
movsl
pop
push
dec
xor
mov
inc
cli
mov
stc
fmull
adc
xchg
jle
pusha
xlat
xchg
outsl
add
pop
push
jmp
jne
out
jecxz
daa
add
lds
xchg
out
repnz
call
add
jnp
loop
imul
lcall
clc
rol
sti
sahf
cs
adc
fwait
shll
xchg
ret
mov
pop
gs
popa
xor
gs
add
in
cs
shll
nop
je
mov
push
divl
pop
js
and
orl
pop
lahf
mov
xchg
pop
test
sti
gs
jno
lret
mov
cld
push
cltd
cmp
mov
fildl
int3
inc
shl
mov
in
fwait
xor
cmp
ds
icebp
mov
out
mov
mov
sbb
std
sti
pop
inc
mov
les
jg
aaa
adc
pop
mov
int
mov
inc
les
push
stos
icebp
xchg
or
mov
or
sub
push
out
mov
popa
clc
lock
icebp
xchg
xor
in
or
inc
outsl
inc
jge
cmc
add
adc
xchg
xchg
sub
mov
ljmp
dec
ret
call
jle
xchg
push
pushf
data16
or
stos
dec
sbb
cld
sti
jb
fucomp
fcompl
mov
adc
sub
jecxz
mov
int
fmuls
pop
cwtl
imul
push
orb
test
and
cltd
call
and
xchg
push
nop
xor
xor
push
mov
and
jbe
jp
in
sub
jae
cltd
in
fstpt
and
jmp
repz
push
and
add
imulb
arpl
cli
cmp
fiadds
or
xlat
cmp
mov
xlat
sbbl
ud1
sbb
in
adc
jge
adc
adc
sahf
int
jecxz
push
pop
xchg
mov
push
xor
divb
fwait
in
sti
shlb
xor
dec
enter
fs
movsl
fldt
sahf
mov
sbb
sbbl
jmp
pop
jmp
nop
adc
aam
leave
adc
sub
pop
dec
and
push
pop
jns
cmp
in
push
dec
insl
ret
std
push
mov
adc
cmp
stos
loop
jl
jmp
pop
sub
and
adc
add
pop
orl
jbe
sbbb
pop
nop
sbb
xlat
les
xor
roll
cmp
add
pxor
pop
orl
xchg
xor
ja
es
rcr
sub
cltd
mov
push
adc
and
cmpsb
call
aas
fwait
mov
pop
push
xchg
cs
les
add
sti
das
divl
pushf
push
gs
pop
lahf
push
fiadds
jmp
call
popf
mov
out
push
jbe
repz
and
adc
fistpl
jo
cltd
lods
inc
mov
jb
mov
bound
outsl
mov
sbb
adc
add
pop
addr16
neg
fisttpll
or
xchg
push
rorb
stc
js
push
add
sti
mov
aad
or
pop
fisubs
jae
xchg
mov
lds
sbbb
or
mov
adc
mov
aam
mov
je
mov
dec
lret
sahf
push
add
movl
xchg
movsb
jne
sub
xlat
loop
jp
mov
mov
mov
fistpll
mov
sub
xlat
xor
int3
jnp
test
jo
cmp
jno
roll
popa
mov
sbb
inc
in
fimuls
shl
into
or
cmp
xchg
sbb
stos
into
pop
dec
loopne
je
sbb
pop
loop
icebp
out
sbb
xor
pop
shlb
inc
push
dec
inc
clc
inc
jo
push
lods
std
inc
cmp
pop
inc
cmp
mov
fsubrs
push
addr16
or
in
out
jno
cmpl
mov
mov
lahf
in
out
aad
add
jnp
sti
les
add
sub
mov
cwtl
mov
jge
mov
data16
sub
loopne
add
sbb
cwtl
sub
dec
ljmp
inc
mov
stos
and
mov
cmp
mov
call
push
in
mov
add
stos
fxch
roll
xor
ret
outsl
xchg
push
imul
or
sub
icebp
jle
rcrl
rorb
push
mov
push
lret
sti
lods
nop
mov
repz
xchg
les
negl
cmc
sbb
lods
pop
or
lret
les
lret
int3
sbb
or
sub
mov
sbb
and
add
mov
mov
inc
jmp
movsb
scas
xchg
sub
sbb
insl
stos
clc
mov
adc
dec
sbb
int
cmp
pop
ja
xor
xlat
mov
pop
movl
adc
shlb
rol
cld
clc
in
fnstcw
fistpl
mov
push
in
dec
scas
jns
adc
bound
movl
repnz
mov
sub
xchg
dec
into
das
dec
gs
push
jno
insb
dec
jge
adc
cmp
pop
dec
pop
add
xchg
xor
sbb
mov
cmp
xor
jle
xor
and
repnz
mov
mulb
mov
out
data16
ror
shll
push
movsl
lock
and
and
pop
and
loop
jle
pop
add
mov
inc
aad
jnp
mov
sub
dec
pop
jl
cltd
in
mov
sbb
stos
je
daa
cmpsb
and
scas
cmp
inc
or
sarl
push
repz
and
nop
cmp
push
xchg
or
or
out
push
mov
pop
sub
mov
imul
and
rcrl
mov
test
mov
mov
cmp
xlat
jle
xchg
std
aam
adc
negb
jmp
dec
aaa
add
out
adc
sbb
cs
rol
jmp
and
cld
or
lds
jmp
adc
sub
sbb
scas
sahf
xlat
xchg
mov
loope
fidivs
fcoml
enter
in
ret
sub
push
push
daa
add
loop,pn
mov
fsubs
popa
cmp
lahf
adc
dec
aam
push
bswap
ret
out
bound
mov
mov
sbb
pop
xchg
sbb
aaa
pop
stos
pop
mov
jecxz
dec
sahf
sbb
xchg
lret
cld
inc
pop
push
mov
dec
aas
jno
mov
test
pop
add
mov
mov
sbb
out
xor
and
cmc
xchg
loope
lock
add
jns
cmp
in
add
mov
insb
es
shlb
pop
sub
add
xchg
fcoml
sbb
jbe
mov
mov
cmpsl
outsl
rorl
or
scas
push
xor
sbb
inc
std
jp
es
fs
mov
je
scas
mov
sub
nop
icebp
rorb
ljmp
push
push
dec
cmp
imul
xorb
mov
mov
movsl
decl
dec
test
sub
das
pop
mov
rolb
sbb
dec
or
test
xchg
mov
xor
subb
lea
xor
testl
out
add
sti
push
cs
or
pop
mov
data16
ljmp
daa
stos
pusha
lret
in
clc
pop
jg
jbe
xor
aaa
lret
xor
sbb
adc
push
pop
out
fidivl
enter
pop
dec
mov
subb
aas
jne
xor
adc
inc
jmp
bound
and
sti
jns
std
clc
jnp
pop
mov
loop
xchg
sub
test
cmp
add
push
ret
aad
imul
or
pop
jns
cmp
ret
ss
sub
pop
fwait
jb
pop
push
loope
in
sub
call
ljmp
mov
or
lea
push
lock
jmp
or
movsl
or
xchg
ret
jbe
aad
mov
rcr
lock
leave
pop
sbb
xchg
shrb
mov
out
push
jbe
sub
ds
hlt
std
fidivrl
pop
fsubrl
stos
dec
fstl
or
in
xor
jae
in
insl
or
int3
xor
mov
int
jmp
pusha
inc
cmp
jmp
or
notb
push
jb
outsb
push
push
test
adc
jmp
adc
pushf
push
push
cmc
jns
popa
xchg
movsl
das
lret
xchg
xchg
dec
sar
sti
cmp
fwait
cli
xchg
push
jb
aas
push
adc
mov
mov
std
mov
je
in
data16
mov
scas
mov
negl
popa
enter
and
cmpsb
mov
jle
in
fisttps
fnstenv
stos
xchg
cltd
and
lea
adc
jl
mov
lret
cmp
or
les
inc
cmpsb
pop
add
push
adc
mov
xor
decl
or
pop
test
scas
mov
gs
xorb
dec
pop
xchg
enterw
fbld
dec
mov
and
adc
push
mov
pop
or
push
pop
shl
movnti
ds
cmp
imul
fiaddl
sbb
lods
sbb
xchg
cs
pop
xlat
and
xor
push
imul
inc
fsts
mov
lcall
rorl
movsb
mov
mov
pop
rolb
sub
xor
lea
mov
sti
adc
pop
xchg
test
xchg
cs
jge
push
and
cmc
cwtd
outsb
mov
mov
imulb
imul
enter
dec
test
repz
jecxz
ret
cmp
xchg
ljmp
mov
cmp
std
mov
loop
roll
mov
dec
shrl
cmp
pusha
xor
lods
mov
in
jns
dec
add
loope
mov
insl
inc
and
cmc
imul
lahf
test
ret
jp
ficoml
filds
gs
lret
outsl
push
nop
int
cwtl
xchg
lcall
sahf
sbb
pop
call
sub
inc
daa
dec
imul
in
pop
mov
imul
repnz
vmwrite
add
mov
bnd
decb
inc
or
xchg
mov
ret
add
or
loopne
in
sub
repnz
dec
fisttps
mov
shr
icebp
push
loop
and
scas
lods
pop
pop
mov
xchg
push
filds
cmp
push
ds
movb
push
or
pop
andb
pop
loope
cmp
xor
lret
xchg
in
add
push
dec
das
mov
sbbb
div
push
pop
pop
js
orb
inc
jne
sar
cmpsb
into
call
xor
lock
ltr
nop
out
mov
aam
call
fnstcw
jo
jmp
outsb
pop
cmpsl
sahf
mov
pop
push
popf
xchg
hlt
inc
xchg
inc
inc
dec
jae
inc
outsb
add
lods
pop
leave
cmc
adc
lret
inc
lods
adc
cmp
pop
hlt
add
cli
xor
jbe
mov
loopne
sub
lock
mov
pop
mov
and
es
pop
idivl
mov
pop
xchg
mov
mov
adc
cmpsl
aad
mov
xor
insb
sbb
stos
es
enter
inc
imul
sub
mov
or
or
stos
iretw
jo
adc
rorb
jbe
dec
mov
ja
out
mov
jo
and
push
add
mov
popa
mov
jp
or
jmp
adc
dec
push
push
dec
outsb
pop
inc
insb
xchg
push
adc
sbb
lock
sbbl
mov
jmp
movl
arpl
mov
xor
mov
lret
lods
sarl
cld
cwtl
xor
mov
or
pop
dec
cmc
bound
ret
sub
add
cld
and
cli
fldpi
jb
cli
inc
sbb
sub
jnp
stos
add
dec
hlt
scas
mov
out
shlb
fcomp
push
stos
cmp
rcll
inc
decl
jnp
in
add
sub
jge
dec
loop
insl
jg
ret
mov
lods
add
mov
jnp
adc
loop
test
adc
les
push
les
cltd
mov
pop
loopne
mov
test
xlat
xchg
and
sub
in
xor
stos
test
xor
les
insl
mov
or
pop
push
sti
inc
aam
movsl
lret
lods
lret
shll
pop
sub
add
and
repnz
sub
ss
cli
mov
scas
push
nop
push
mov
mov
ret
adc
test
in
or
subps
mov
leave
inc
test
je
test
test
shll
lahf
pop
call
roll
cld
push
add
das
test
mov
mov
mov
sti
cs
jne
adc
dec
cli
out
inc
cld
es
mov
or
rcrl
sub
movsb
mov
adc
mov
test
rorl
sub
mov
push
mov
in
push
outsb
pop
inc
or
adc
cld
sub
es
pop
jge
pop
sbb
cmp
xor
popf
sbb
mov
or
out
test
jge
xchg
inc
ret
mov
cmp
jmp
fsubs
jno
sub
out
inc
sub
leave
dec
int3
ljmp
push
push
inc
mov
or
and
mov
jbe
cmp
sub
ds
pushf
mov
repz
in
sub
adc
imul
les
xor
and
enter
mov
les
mov
out
pop
push
aad
jge
cmp
xor
mov
adc
cmp
inc
das
inc
in
sbb
lret
imulb
add
xor
and
sbb
mov
add
cwtl
gs
imul
jns
fs
and
in
push
imul
xchg
popf
sub
xchg
mov
xchg
stos
scas
lods
lock
xchg
test
mov
push
mov
sbb
int
or
lcall
mov
hlt
adc
daa
mov
repnz
push
test
pop
and
aam
push
ret
daa
fnsave
fcmovb
loop
jmp
in
out
inc
jecxz
dec
push
daa
cmp
jo
mov
lret
jmp
idivb
fcoml
mov
jno
dec
push
push
jle
pop
jge
xor
orb
popf
fstpt
out
cmc
push
xchg
mov
ss
push
jo
pop
lods
bswap
pop
mov
mov
repnz
cmp
add
movsb
dec
push
xchg
cmp
jb
mov
add
leave
mov
inc
sub
xchg
jbe
adc
divb
add
call
rcrl
mov
ja
les
sbb
testl
sub
xchg
lahf
fbstp
mov
pop
jns
jns
or
sti
cmpsb
mov
xchg
mov
in
push
mov
sti
imul
out
xchg
mov
sub
mov
mov
nop
enter
lods
dec
xlat
and
sub
call
inc
jmp
outsl
cwtl
mov
adc
or
and
test
jbe
dec
cwtl
mov
fsubl
push
xor
std
inc
mov
add
jnp
push
xor
push
mov
in
xlat
pushf
cmp
loop
pop
std
and
insb
mov
mov
ret
out
mov
push
loop
adc
test
xabort
out
into
cmp
hlt
stos
orb
jo
add
jl
das
jo
sar
divl
xchg
enter
lret
jmp
inc
ret
adc
in
std
outsl
jg
add
dec
addr16
xchg
cmp
popa
ret
lret
popf
fcomps
xlat
cmpsb
lahf
pop
cmp
pushf
std
mov
idivl
es
nop
dec
jmp
mov
outsl
pusha
adc
and
push
xchg
aaa
mov
mov
lahf
rcr
cmp
jns
mov
dec
testl
jae
lods
hlt
bswap
mov
out
sbb
mov
shrl
mov
bnd
enter
js
fbstp
pop
push
jmp
cmp
js
cmpsb
andb
sub
mov
mov
pop
adc
mov
jns
dec
sarl
push
inc
in
ds
inc
aad
int
mov
aaa
divb
in
and
xchg
xor
or
adc
repz
cmp
pop
jnp
cmp
pop
lret
sbbl
test
and
orb
jp
fwait
out
fs
popf
mov
jne
lcall
aad
dec
icebp
mov
cmc
push
dec
imul
hlt
mov
push
add
stc
das
rolb
in
mov
test
or
pushf
std
lea
dec
push
fistps
sti
jg
fwait
mov
sub
fwait
aaa
arpl
and
xchg
xchg
push
call
dec
inc
dec
leave
sbb
or
mov
popa
and
enter
mov
push
lds
lods
enter
ficoml
ljmp
or
out
dec
xchg
lcall
in
jbe
dec
mov
mov
xchg
das
mov
jge
test
dec
fisubl
mov
xchg
dec
adc
loop
es
push
jecxz
cmc
inc
push
xor
popl
add
ret
fistpl
pop
xchg
and
lods
jle
cmp
mov
jno
dec
adc
movsl
insl
xchg
dec
out
cmp
fisttpl
int
scas
rorl
ret
pop
hlt
and
outsl
cmpsl
lahf
inc
or
xchg
and
pop
mov
inc
lahf
or
pop
test
ja
mov
push
push
and
or
je
aaa
scas
andl
sbb
xchg
pop
pop
out
and
xor
or
pushf
jecxz
in
std
pop
adc
loopne
jae
ja
ss
mov
pushf
ret
adc
imul
push
imul
sub
repnz
add
jbe
call
dec
xor
imul
cli
pop
negl
in
ja
fsubrs
mov
fiaddl
call
pushw
sub
dec
mov
dec
jae
insb
add
clts
hlt
dec
pop
stos
pop
or
sub
jg
sahf
pop
aaa
in
ss
imul
or
jl
inc
mov
lcall
mov
shlb
out
loope
xchg
into
xchg
mov
xchg
jp
jbe
sub
jg
rorb
imul
sbb
or
pop
adc
jno
aaa
lock
fistpl
sub
aaa
adc
and
inc
imul
mov
cwtl
shrl
std
ds
aad
loop
cs
push
cli
jo
gs
inc
sbb
xchg
popa
lods
jbe
jne
and
or
imul
loope
popf
jecxz,pn
mov
mov
lock
pop
pop
push
sub
es
cmc
push
popa
hlt
outsl
adc
pop
cmovno
dec
mov
mov
xorl
xchg
xchg
xor
test
lods
mov
fnsave
push
dec
clc
test
pop
jmp
shll
lods
dec
xor
divb
addb
push
mov
cmp
leave
lea
mov
inc
lret
stos
mov
cmp
adc
xchg
outsl
push
repnz
test
adc
out
sbb
cld
mov
mov
negb
repnz
mov
movsl
rcrb
in
mov
adc
insl
jg
test
test
imul
mov
mov
xor
cmp
int
dec
orb
xor
adc
rcr
xchg
sbb
adc
cmpsb
pop
inc
scas
dec
sbb
inc
inc
aad
jbe
psadbw
adc
aam
in
insb
mov
jno
sbb
mov
sahf
mov
cmp
cmp
cmp
scas
ffree
stc
xchg
bound
adc
xor
test
mov
fcoml
repz
mov
clc
test
in
divb
mov
clc
shl
jbe
hlt
cltd
add
or
cmp
jle
push
mov
xchg
add
or
iret
sub
push
and
fs
add
dec
movups
sbb
daa
inc
dec
shlb
repnz
mov
push
ljmp
es
adc
or
filds
pop
in
push
lods
fs
inc
jo
jp
and
dec
stc
imulb
mov
dec
hlt
inc
aam
aaa
mov
sub
sub
lahf
mov
aas
cmpps
mov
mov
daa
fildl
cmp
and
jo
jmp
cmp
std
insl
cmc
inc
fsubs
dec
mov
sbb
mov
push
in
imul
in
les
aas
inc
xchg
dec
jmp
mov
sahf
xchg
mov
shll
push
push
mov
pushf
xchg
adc
sub
jmp
ss
ss
mov
pop
xchg
pop
aad
mov
stos
testb
add
shrb
sub
add
xchg
xor
ds
push
movsb
cli
les
and
lock
inc
inc
add
and
ds
or
or
inc
lods
push
lods
mov
mov
push
aaa
pop
ss
sbb
test
pop
jns
lds
push
xor
repnz
add
mov
push
je
sti
jle
adc
add
movsl
xchg
pop
sahf
mov
pop
jl
xor
cmp
mov
pop
fisubl
dec
push
call
pop
movaps
inc
mov
inc
push
cmp
daa
sub
push
mov
mov
cmp
fsub
test
mov
lock
push
loopne
or
mov
fld
pop
sbb
jge
add
jmp
lock
adc
pop
ss
js
and
pop
iret
mov
fcmovb
sub
shll
out
mov
sbb
mov
mov
daa
ljmp
pusha
mov
imul
sub
test
ss
out
sbb
inc
pop
mov
movsb
push
in
stos
in
jbe
add
cpuid
imul
fcomi
xlat
adc
pop
rcll
xchg
sub
jg
mov
repnz
rcl
cmp
adc
pop
pop
sarl
adc
fldenv
pushf
push
inc
jno
and
mov
icebp
loope
sbb
lods
outsb
out
mov
fs
les
int3
ss
leave
xchg
out
ja
pop
jg
idiv
sbb
xor
cmp
js
xor
sub
adc
cmpsl
mov
leave
mov
mov
call
inc
aam
xchg
jg
testl
mov
and
jnp
sbb
sbbb
jl
adc
loop
sbb
pop
out
mov
mov
xchg
js
mov
jne
call
int3
add
cs
cmpsl
push
dec
adc
inc
dec
mov
or
push
sbb
pop
lahf
jle
inc
push
sti
push
pcmpgtw
lret
dec
lock
sub
cmpl
adc
aas
sbb
test
push
push
es
xlat
sub
mov
mov
dec
dec
sbb
xchg
pop
jbe
lret
jb
outsl
test
scas
fwait
std
and
jl
and
addr16
fnsave
adc
or
push
bound
sub
push
sbb
jecxz
add
jns
push
fsubrs
cmp
mov
sbb
xchg
lret
pop
xchg
roll
in
and
jecxz
mov
sbb
cmp
xchg
jb
iret
mov
aad
gs
sbb
mov
or
out
pop
xor
ja
or
mov
mov
les
push
dec
std
repnz
cmp
leave
aad
cld
in
sub
sbb
cs
jno
dec
push
nop
mov
bound
xchg
les
leave
mov
inc
cwtl
clc
inc
pop
rcrb
fdivl
dec
lret
cmp
inc
ljmp
jmp
popa
stos
push
sbb
inc
inc
ret
dec
inc
fimuls
mov
repz
mov
cmpsl
push
divb
shll
stc
jno
inc
cmp
adc
sub
inc
inc
repz
rcl
fists
bound
cli
push
hlt
pop
enter
xor
sbb
sub
xor
vmovsd
shlb
psllq
jne
jae
fwait
add
and
jmp
sub
jo
jmp
push
dec
mov
mov
add
ret
or
js
adc
shr
loop
rcl
ss
call
or
pop
sti
jge
adc
and
js
hlt
getsec
mov
mov
scas
jb
lahf
int3
scas
cmp
test
jecxz
jp
xchg
jge
call
in
lds
addr16
xchg
sub
ret
stos
std
shrl
push
mov
gs
jae
mov
mov
mov
popf
inc
mov
aam
jecxz
sbb
jecxz
mov
jl
and
adc
jg
or
icebp
in
mov
jge
add
mull
adc
jecxz
sub
xchg
pop
daa
or
leave
push
ss
adc
push
mov
scas
outsl
mov
xor
pop
in
sub
arpl
aam
xor
dec
pop
stos
ja
sub
in
in
das
mov
jecxz
xchg
cmp
clc
out
push
dec
loop
int
pop
mov
aas
cmp
out
or
mov
sahf
div
iret
fildll
inc
in
jg
fisttpl
jb
sub
ds
in
out
fsubrs
xor
orl
or
lret
outsb
lods
push
or
jns
ds
add
sbb
out
rclb
sbb
in
cmp
sub
or
int3
mov
adc
in
aad
push
mov
mov
pushf
or
std
daa
popaw
shrl
loope
int3
mov
pop
xchg
sahf
into
aaa
cmpsb
fisubrs
nop
mov
xor
nop
sahf
add
adc
das
dec
dec
adc
pop
push
outsb
xchg
xchg
lea
mov
inc
pop
xor
stc
cmp
mov
push
dec
jl
xchg
imul
arpl
notb
xchg
int
jno
popf
add
inc
insb
jne
pop
mov
das
mov
inc
test
cli
cs
dec
add
setnp
icebp
sbb
pop
dec
in
mov
inc
dec
sbb
or
int3
cmp
subb
ror
adc
pushl
dec
in
int3
cs
sub
or
scas
or
rorb
pop
or
call
lea
cmpl
sub
add
add
ret
lds
and
xlat
lret
arpl
fldenv
das
inc
push
loope
cmp
dec
cs
mov
lcall
stos
test
out
jns
das
jecxz
jmp
fbld
shrl
addb
lret
inc
xchg
push
aam
cmpsb
sbb
call
add
imul
dec
das
repnz
lret
ficoml
mov
sub
push
cmpl
test
mov
sbbl
loope
outsl
je,pn
bnd
ljmp
push
or
insb
cmp
pop
ret
arpl
mov
jae
out
in
xchg
jmp
push
sub
adc
dec
cli
negb
popf
pavgw
in
outsl
add
hlt
push
mov
dec
xchg
cmp
clc
fsub
mov
pop
in
jno
aaa
leave
jecxz
sets
pop
popf
dec
bound
xchg
xor
dec
xchg
dec
xlat
mov
int
xchg
pusha
xor
lods
cmp
enter
test
and
js
repnz
lea
xorl
cmc
mov
lods
add
mov
dec
sbb
repz
ja
cmp
bound
xchg
xlat
insb
ret
dec
jmp
loope
jl
add
shll
pop
test
and
xor
mov
xchg
lods
pop
mov
mov
sbb
mov
push
xor
sti
add
jnp
sub
hlt
leave
loope
pop
pop
imulb
in
ja
add
lods
xor
adc
mov
and
iret
imul
test
mov
shl
test
jle
pop
out
cmp
ret
cld
orl
xchg
dec
sbb
jnp
dec
or
xor
xlat
add
and
push
cli
imul
push
sbb
test
xor
xchg
xchg
nop
lea
xchg
inc
add
xchg
cmp
sbb
dec
jmp
push
iret
dec
push
cmp
mov
fs
pop
call
xor
je
fwait
adc
or
lods
hlt
mov
adc
or
icebp
sub
in
cmp
pushf
outsl
negb
add
mov
push
cmp
ret
dec
push
ret
scas
mov
jnp
lahf
xor
aaa
sub
lea
cmp
sahf
cmp
mov
dec
insb
sbb
xchg
xchg
pop
jmp
add
repz
rclb
mov
inc
out
addb
jns
mov
jbe
lock
das
xor
es
cmp
out
cli
and
les
mov
adc
ljmp
ret
xchg
pop
add
mov
or
sub
mov
int
cmp
cmc
and
adc
dec
mov
dec
loope
push
rorl
mov
es
scas
pop
sub
jmp
das
repz
or
repnz
sbb
jg
outsl
xchg
pop
aad
pop
and
ret
popf
ret
cs
xlat
add
mov
stos
jbe
les
adc
leave
ret
pop
jo
jmp
arpl
addr16
ret
cmp
cmpsb
outsl
dec
add
pop
out
lods
or
pop
mov
pop
insb
in
dec
push
push
add
imul
in
inc
and
lahf
sbb
in
xor
jle
lret
fs
jl
push
cmp
pop
xorl
scas
xchg
in
movsl
aam
adc
add
dec
or
mov
cmp
add
mov
nop
xchg
xlat
insl
mov
scas
mov
xchg
ret
dec
scas
cmp
add
mov
xchg
jecxz
xchg
stc
pop
dec
sti
mov
inc
not
fistps
sbb
cmp
clc
adc
mov
sub
icebp
into
ja
sub
leave
stos
mov
call
lcall
and
sbb
loop
sarb
push
xorl
push
fs
xchg
push
cmp
adc
nop
dec
push
aaa
push
shlb
mov
mov
pop
lds
clc
fs
pop
push
int
aad
cmc
shl
not
addb
xchg
insl
aaa
push
dec
lds
das
iret
mov
pop
and
and
ja
in
mov
fidivrl
loop
cs
std
inc
pop
inc
jmp
dec
roll
xor
dec
pop
fcmovbe
insl
dec
cmp
scas
push
adc
jge
ds
xchg
and
lds
pop
outsb
pop
popf
loope
cld
cs
jmp
push
mov
loopne
mov
out
sbb
jns
and
negb
mov
ljmp
outsb
int
test
jno
push
pop
xor
repz
cld
sbb
xchg
stos
xchg
mov
aas
stos
push
or
movsb
scas
or
inc
data16
cmpsb
push
jno
scas
leave
std
loop
mov
arpl
cmp
sti
xchg
sahf
xchg
ret
faddl
popa
pop
lea
shll
aad
adc
das
data16
cmp
call
lea
out
out
addl
add
gs
or
into
jge
jmp
dec
cmc
push
dec
jl
loope
pop
clts
dec
mov
sbb
pop
or
xchg
rcrb
inc
cmpsl
aaa
adc
mov
cmp
push
iret
inc
dec
push
xchg
xor
mov
cmp
loopne
mull
push
repnz
jbe
pusha
xchg
icebp
insl
push
ret
inc
sbb
pop
xchg
stos
push
gs
add
into
dec
xor
les
lods
cmpsb
mov
jns
sahf
cmc
data16
andb
add
int3
arpl
adc
hlt
js
mov
daa
bound
pop
jbe
xor
mov
jmp
call
inc
int3
and
aaa
add
movsb
jmp
push
sbb
add
mov
or
sub
dec
mov
push
adc
pop
dec
sbb
mov
adc
xchg
mov
add
jns
sub
leave
sbb
fdivs
loop
and
idivl
push
ja
dec
xor
mov
cmp
mov
lods
jns
ljmp
sub
push
add
mov
cmp
sbb
out
daa
shl
add
ja
adc
fs
jmp
imul
inc
adc
inc
jecxz
sbb
je
sbb
ljmp
mov
mov
shr
inc
inc
int3
out
lds
imul
xchg
xor
mov
arpl
sub
push
fists
cmp
pop
mov
pop
push
push
dec
cmp
sub
mov
or
xrelease
adc
lahf
into
roll
dec
push
ja
sub
pop
out
pop
jge
mov
hlt
or
icebp
popf
lods
adc
lret
pop
pop
xor
rep
in
jnp
jae
jge
adc
inc
lods
and
cmpsb
fiaddl
mov
dec
sub
add
fdivp
in
aad
filds
repnz
cwtl
mov
rolb
sbb
xchg
stc
cli
mov
pop
subb
dec
js
inc
xlat
out
xchg
imul
lods
js
sbb
inc
shrl
loopne
mov
sbb
pop
daa
sub
dec
ds
jp
jne
aam
jmp
cmp
or
add
enter
ds
add
jne
jns
out
pop
lret
das
repnz
jmp
xchg
pop
clc
push
ficoms
xchg
lcall
jne
and
inc
add
sub
les
jnp
and
pushf
push
mov
decb
inc
xchg
mov
mov
clc
pop
cmp
xor
xlat
xor
aaa
imul
push
or
inc
insl
inc
mov
das
inc
sbb
mov
dec
push
pop
cli
icebp
ja
clc
mov
mov
call
fs
adc
into
mov
ficoml
dec
push
lds
adc
mov
ja
ljmp
adc
mov
cmp
std
outsl
xchg
lret
out
mov
xor
aad
push
adc
xor
outsb
loop
pop
push
sub
jmp
push
and
push
inc
pop
mov
icebp
push
leave
mov
shll
cmp
add
pop
js
mov
push
push
cld
push
ret
push
shrb
pop
das
fwait
scas
pop
mov
icebp
popf
pop
jbe
jp
ja
mov
xor
mov
mov
sub
pop
jno
pop
sub
lret
sub
sub
js
call
adc
mov
call
imul
jg
jmp
xor
cli
mov
pop
loopne
inc
or
bound
psubsw
push
nop
leave
call
dec
testb
mov
or
mov
mov
push
leave
imul
addr16
js
adc
and
leave
adc
stos
lods
sub
mov
and
jmp
fcmovb
or
adc
push
and
and
cmp
cmp
mov
call
adc
sbb
fcomip
pop
mov
sahf
mov
arpl
mov
into
cmp
cmp
sbb
dec
push
sub
arpl
xchg
mov
fsubs
jmp
leave
mov
call
push
pusha
shll
aam
jge
jle
jecxz
pop
int
loope
mov
aas
int
xlat
out
mov
mov
xchg
xchg
xchg
mov
cmpl
loopne
jae
sbb
sub
out
sub
out
bnd
pop
sbb
aad
push
or
and
or
test
int
pop
jbe
pushf
or
lret
mov
jno
or
aas
imul
inc
mov
pop
les
outsl
add
cs
loopne,pn
add
pop
xchg
sbb
adc
and
iret
data16
lods
mov
push
aam
cmovne
mov
sarl
push
faddl
cs
bnd
mov
cs
std
fdivrs
push
fisubl
cmp
push
mov
adc
in
sub
pop
popa
pushf
lods
test
ret
into
or
inc
repz
addr16
push
dec
scas
in
test
inc
hlt
das
rolb
enter
jge
loopne
and
pop
aam
in
out
pop
clc
or
and
or
jg
jne
jno
cpuid
das
loope
sbb
lahf
ror
jbe
scas
cmp
hlt
xor
ja
test
test
and
xor
loope
sub
adc
pusha
jne
sub
insb
ficoms
jmp
mov
and
inc
ffreep
inc
mov
stos
push
and
test
mov
add
sbb
xor
or
es
lods
xchg
pop
ja
test
outsb
push
andl
mov
mov
out
cmp
inc
lock
aad
das
daa
ret
mov
push
leave
or
pop
cmp
ss
pop
jae
cwtl
sbb
call
push
mov
xor
std
sub
or
inc
enter
push
addr16
mov
es
int
sub
xor
pop
mov
xchg
jns
mov
push
dec
lock
inc
xor
push
ljmp
or
aam
ds
aaa
cmc
das
or
lock
aaa
test
add
or
mov
loopne
enter
or
adc
cmpsb
add
mov
jge
dec
pop
and
call
in
inc
push
enter
jne
xchg
xchg
stos
jae
mov
cmp
cmpsb
das
loopne
out
rcll
or
imul
fs
out
pop
ror
mov
lcall
jns
aas
mov
icebp
and
lock
xchg
adc
out
jecxz
lds
in
addb
pop
mov
or
mov
inc
jnp
shrl
inc
adc
loope
sub
es
test
inc
into
pop
sbb
jmp
lock
pop
cli
sbb
inc
sbb
aad
rcll
push
cmp
push
fnsave
cmp
cmp
mov
mov
add
shll
jo
jno
push
cmp
xchg
lds
xchg
cmp
ss
xor
xchg
mull
andl
lea
popf
add
imulb
dec
sbb
and
out
jg
pop
dec
mov
xchg
dec
scas
outsb
notb
insl
fiaddl
gs
dec
mov
enter
dec
adc
dec
push
jns
xlat
xchg
jae
out
add
xor
imul
push
rcrb
jle
dec
mov
and
and
jmp
mov
aad
add
dec
int3
ss
sub
push
sub
test
mov
mov
jg
dec
cli
adc
jo,pt
cmp
loop
xor
nop
dec
ret
movsb
mov
push
scas
int3
in
inc
sbb
push
sti
sahf
call
pop
dec
mov
pop
cmp
andl
cld
repz
dec
leave
mov
nop
and
mov
jnp
addr16
sub
xor
addb
lea
out
inc
call
xor
insb
push
inc
adc
adc
add
int3
fs
add
dec
dec
movsb
pop
test
xchg
stc
iret
jb
movsl
repz
in
xor
fists
repz
repnz
add
sub
jle
xor
cwtl
imul
pop
fists
ret
mov
imul
xchg
mov
xor
sub
cmp
cmpl
daa
fwait
ret
xor
xlat
add
sti
or
or
stos
sub
dec
scas
fidivl
mov
pop
cltd
ss
pop
repz
adc
mov
aaa
add
ljmp
add
popf
les
xchg
jp,pt
fbld
fnstsw
imul
mov
addr16
push
vorpd
mov
fisttps
jg,pn
fnstcw
testl
stos
jnp
cltd
fidivrl
add
out
mov
jnp
cltd
scas
xlat
cmpsl
sahf
xor
stc
jecxz
cmp
shl
jae
adc
xor
jbe
gs
push
fs
lods
mov
pop
insl
int3
inc
fmull
data16
fdivs
push
mov
fdivrp
or
lock
xor
inc
push
and
into
imul
sahf
addb
cmc
cmp
or
pop
test
sub
ficoms
lds
push
sub
ret
jnp
loope
rol
and
mov
xchg
jle
inc
clc
rcrb
js
dec
push
inc
cmp
lahf
xor
mov
dec
fcoml
jb
xchg
insl
fstpt
inc
sub
cmp
arpl
xchg
lret
iret
push
inc
in
or
pop
sub
mov
pop
xchg
and
in
sbbb
and
jb
lock
and
popa
push
mov
lret
jno
out
push
cmp
mov
sti
popa
push
dec
cmpsb
lcall
mov
outsl
mov
pusha
mov
xchg
push
fwait
aaa
or
xchg
rcll
cmp
inc
call
pop
lcall
mov
pop
jnp
popf
aam
incl
clc
sbb
jmp
dec
insb
rorl
and
and
mov
push
in
jno
clc
xchg
pop
push
hlt
dec
mov
jmp
mov
in
ljmp
or
mov
testb
cld
inc
sub
fistpll
lea
clc
mov
mov
jmp
aaa
fmulp
xchg
ljmp
xchg
fwait
jle
clc
xlat
mov
imul
dec
in
dec
sbb
sub
xchg
mov
dec
cmpsl
icebp
add
adc
popf
jae
or
sbb
pop
sti
cmp
je
cld
aaa
jnp
or
std
push
jnp
lcall
shrb
or
dec
pop
sbb
or
push
add
mov
hlt
adc
cmpsl
push
push
ja
outsl
or
enter
sub
fwait
insl
adc
call
clc
push
mov
in
insl
dec
cmp
dec
dec
jno
stc
jne
adc
test
push
addr16
repnz
mov
push
or
sub
call
or
das
sbb
mov
orl
lds
out
mov
jp
pop
xchg
lock
push
xor
and
std
sub
hlt
mov
jle
pop
scas
outsb
pop
fimull
stos
jl
imul
aas
mov
mov
xor
cmp
mov
adc
pop
frstor
nop
imul
mov
xlat
lret
movsl
fwait
xlat
ret
cmc
push
loop
lods
ja
test
sbb
cmp
push
fdivl
test
adc
arpl
daa
aam
arpl
push
mov
je
lock
sbb
push
repnz
mov
mov
mov
pushf
mov
mov
icebp
pop
push
cwtl
dec
ss
jg
push
add
cmp
push
in
fs
inc
aam
stos
xchg
mov
inc
fistl
out
dec
test
in
dec
mov
mov
jnp
in
sub
shrb
sub
dec
sbb
js,pt
inc
or
outsl
mov
mul
cs
lds
and
add
fidivrs
lret
ljmp
sti
mov
inc
jmp
sub
sbb
xchg
divb
pcmpgtb
fstps
jae
call
mov
movsb
lcall
arpl
fldenv
into
add
cmpsl
and
xchg
mov
xlat
xchg
mov
popf
cwtl
shlb
scas
xchg
push
mov
adc
cmp
aad
aad
inc
or
aas
mov
or
mov
jns
pop
add
lcall
and
fs
fisubrl
xor
out
adc
cmp
scas
call
mov
shlb
jmp
popf
mov
outsl
cld
cmc
aam
or
cmp
mov
sbb
test
mov
icebp
cli
fiadds
sbb
mov
mov
dec
lret
push
movsb
mov
test
xor
mov
xchg
std
jne
sti
and
popa
mov
and
pop
mov
fisttpll
cmpsb
shll
int
xor
mov
in
out
test
cmp
cs
jne
lret
pop
pushf
jg
nop
mov
idiv
aaa
mov
pop
in
test
jmp
mov
pop
xlat
pop
xorl
lret
lds
decb
icebp
pusha
xor
sub
ss
xchg
add
je
cmp
mov
dec
pop
adc
sbb
fsubrs
jmp
jb
out
das
mov
outsl
xor
inc
sbb
pushf
dec
add
lcall
jecxz
add
adc
mov
iret
xchg
fildll
cmp
pop
fstl
test
xor
adc
das
fdivr
shlb
je
out
divb
in
adc
sbb
andl
mov
mov
outsl
insb
push
jae
repz
mov
pop
or
rolb
les
sub
shl
mov
jb
cli
xor
insb
inc
xorl
pop
inc
loope
in
push
in
mov
sti
shll
lret
in
rcl
xchg
jmp
mov
pop
orl
or
add
ds
ud2
fnstsw
popf
xor
lods
xlat
cmpsl
dec
push
in
push
cmp
fwait
std
inc
shrb
testb
call
mov
fdiv
sbb
cmc
xchg
mov
xor
out
and
xchg
clc
arpl
jnp
mov
cmc
jbe
pusha
add
out
fnstcw
mov
in
push
xchg
lds
push
mov
popf
lock
sub
and
sub
dec
hlt
repz
out
xor
mov
cmp
in
popa
je
test
lcall
iret
mov
xchg
lock
gs
daa
frstor
adc
lods
adc
gs
call
mov
fwait
stc
movsl
sbb
pop
pop
inc
jp
or
pop
lret
add
les
dec
xor
dec
xor
lret
aad
adc
in
inc
sub
lods
lret
lret
push
xor
mov
xchg
xor
fistpll
lods
push
adc
call
sbb
movsb
test
lea
sbb
or
xchg
adc
gs
and
out
in
inc
xor
inc
sub
push
push
sahf
cld
imul
mov
jge
in
pop
dec
inc
xor
jnp
and
xchg
bound
push
je
lds
mov
pop
das
xchg
dec
out
addb
popf
out
mov
bound
incb
out
setno
cwtl
insl
mov
jl
dec
call
call
pop
dec
xor
sub
imull
call
lret
push
sub
mov
fcmovnu
dec
inc
dec
sbbb
das
mov
fnstcw
and
sbb
push
ret
push
cmpsl
jl
loop
xchg
mov
lock
jmp
movsl
popa
dec
popa
icebp
cs
push
jle
fs
test
outsb
cmpsb
sbb
loop
xor
in
clc
vpacksswb
sahf
xchg
or
das
rorb
test
int
and
imul
jb
loopne
lea
aam
lahf
push
push
aad
clc
es
js
icebp
push
add
test
dec
mov
dec
gs
dec
sub
arpl
imul
or
jb
pop
mov
adc
push
rorl
push
daa
mov
push
lds
dec
out
add
clc
xor
inc
inc
xor
pop
subb
das
or
and
dec
and
shl
or
std
mov
mov
lcall
pop
mov
cmp
jo
xor
fs
cmp
lods
out
push
int
xchg
out
fisttpll
enter
push
addr16
outsl
push
push
push
idivl
mov
cs
loop
xor
pop
lds
int3
push
sahf
or
jb
clc
pop
xchg
pop
mov
mov
addb
inc
dec
loope
fisubs
and
lock
scas
outsb
push
pop
out
sbb
jae,pn
pop
push
test
adc
sbb
mov
inc
fisttps
xchg
call
outsl
test
sbbb
cmp
shr
dec
jo
call
in
lea
xchg
sbb
out
rcll
call
in
push
mov
mov
enter
rcl
mov
pop
pop
stos
js
mov
ldmxcsr
jnp
ret
dec
sbb
fidivrs
stos
add
aas
sbb
mov
in
xlat
pop
dec
pusha
les
pushf
pop
mov
sbb
idivw
xlat
jmp
hlt
mov
mov
xor
cmc
cmp
es
pop
jmp
mov
fdiv
or
fstps
sub
stos
jmp
jecxz
pop
in
inc
push
stos
mov
fidivrl
addl
mov
call
negl
adc
push
fwait
mov
popa
and
ror
push
fstpl
xchg
pop
inc
or
rorl
mov
js
in
mov
int3
jmp
stc
pusha
add
and
dec
rcl
mov
dec
or
aad
lods
push
loopne
or
jecxz
js
jmp
xor
jne
sarb
or
sbb
jno
add
inc
repnz
pop
mov
rorb
pop
adc
and
dec
jo
and
sti
push
sub
mov
mov
mov
jb
dec
push
dec
jl
mov
xor
rcrb
inc
rcrl
arpl
int3
xchg
negb
inc
pop
lods
xchg
pop
aam
mov
inc
or
aam
sbb
lret
jmp
push
ret
data16
sbbl
cld
mov
cmp
repz
jle
fwait
scas
out
mov
mov
cmc
das
pop
xchg
mov
jmp
incl
insl
loopne
push
mov
loop
xchg
jmp
scas
sbb
aaa
or
xchg
movl
out
into
data16
and
cmpb
addr16
daa
mov
mov
imul
or
add
cmp
jo
sbb
in
cld
mov
jb
pop
xchg
ljmp
outsl
cmpl
insl
mov
or
pop
out
clc
outsl
in
inc
sbb
xchg
dec
mov
sub
and
sub
dec
mov
icebp
lret
dec
inc
mov
repz
add
rcll
and
cs
pop
dec
pop
dec
loopne
lds
and
aaa
add
das
jecxz
push
imul
cmp
xchg
jg
js
stos
inc
scas
sbb
dec
sbb
add
das
lret
mov
sub
and
ljmp
cmpsl
in
aaa
mov
mov
cmp
add
pop
sarl
pop
iret
cmc
inc
sub
xchg
mov
out
das
xor
push
jle
in
jg
xchg
sub
arpl
jmp
mov
jno
inc
xchg
pop
sarl
orb
mov
pop
test
and
lcall
cmp
and
fs
xor
dec
sbb
mov
leave
lock
out
fisttpll
aam
mov
add
sbb
es
rcr
or
xor
sub
cmc
inc
adc
insb
dec
mov
push
fsubrp
fcomp
loop
leave
movsb
jbe
in
nop
push
int
lods
mov
outsb
nop
or
lods
push
mov
pop
cmp
std
and
push
lea
xor
leave
push
scas
mov
mov
sbb
cli
cld
stos
sub
test
jl
test
add
xor
repz
ss
pop
movsb
dec
xchg
dec
pop
aas
rorb
and
cs
shlb
mov
into
mov
push
jge
leave
push
lock
std
iret
sbb
cmpxchg
mov
loopne
cwtl
xor
push
arpl
inc
mov
sarl
dec
mov
fmull
enter
xlat
adc
mov
ds
in
arpl
lahf
mov
sub
pop
sub
sbb
adc
scas
add
xchg
stc
jge
mov
sbb
inc
repz
and
push
iret
gs
scas
inc
push
lods
icebp
xor
xchg
lahf
push
pusha
sub
das
mov
xchg
mov
or
add
pop
xchg
or
xlat
icebp
fidivs
jnp
fistpl
repz
jle
and
aaa
mov
nop
cmpsl
inc
rcl
xchg
jno
xlat
sub
in
inc
mov
pop
sbb
jge
adc
push
mov
movsl
cmpsl
arpl
sub
sbb
aam
insb
pop
pusha
jmp
jae
jo
lock
sbb
cli
loopne
mov
lahf
mov
fcoml
popa
iret
xchg
enter
cltd
aas
sbb
xlat
sub
inc
pop
cs
lret
and
dec
and
in
.byte
push
